var translations = [];
var translatedSection = null;
var current = 0;

function updateScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  console.log(page)

  var bookmarkedPageFieldName = book + "Page";
  var bookmarkedPage = localStorage.getItem(bookmarkedPageFieldName);
  if (bookmarkedPage == null) {
    localStorage.setItem(bookmarkedPageFieldName, page);
  }

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";

  var scrollPosition = localStorage.getItem(positionOnPage);
  if (scrollPosition == null) {
    scrollPosition = window.pageYOffset;
    localStorage.setItem(positionOnPage, scrollPosition);
    return;
  }

  if (bookmarkedPage == page) {
    window.scrollTo(0, scrollPosition)
    return;
  }
  window.location = bookmarkedPage;
}

function storeScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  localStorage.setItem(book + "Page", page);

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";
  scrollPosition = window.pageYOffset;
  localStorage.setItem(positionOnPage, scrollPosition);
}

function showNextOnHelper(evt) {
  current++;
  if (current > translations.length - 1) {
    current = 0;
  }
  var translation = translations[current];
  var innerHTML = "<span class=\"helper\"><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = (current + 1) + "/" + translations.length;
    helper.appendChild(transCount);
  }
}

function updateHelper(evt, lineNumber, translationsForWord) {
  if (typeof updateHelper.currentWord === 'object') {
    updateHelper.currentWord.style.textDecoration = "none";
  }
  
  if (evt.target == updateHelper.currentWord) {
    displayTranslation(lineNumber);
    return;
  }

  evt.target.style.textDecoration = "underline red";
  updateHelper.currentWord = evt.target;

  if (typeof updateHelper.previousCommentBubble === 'object' 
      && updateHelper.previousCommentBubble != null) {
    updateHelper.previousCommentBubble.style.display = "none";
  }
  var commentBubble = document.getElementById("indicator-" + lineNumber);
  if (commentBubble != null) {
    commentBubble.style.display = "inline";
  }
  updateHelper.previousCommentBubble = commentBubble;

  showTitle(lineNumber);


  translations = translationsForWord;
  var translation = translations[0];
  var innerHTML = "<span class=\"helper\"><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  helper.style.display = "block";

  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = "1/" + translations.length;
    helper.appendChild(transCount);
  }

  storeScrollPosition();
}

function showTitle(lineNumber) {
  var page = parseInt(parseInt(lineNumber, 10) / 100, 10);
  if (isNaN(page)) {
    return;
  }
  var result = page % 2;
  
  var titleToShow = titleElements[result];
  var innerHTML = "<span class=\"title\">" + titleToShow + "</span>";
  masthead.innerHTML = innerHTML;
}

function displayTranslation(line) {
  if (translatedSection) {
    translatedSection.style.backgroundColor = "";
  }
  translatedSection = document.getElementById(line);
  translatedSection.style.backgroundColor = "yellow";
  parallel_translation.innerHTML = atobUTF8(translation[line]);
  parallel_translation.style.display = "block";
}

function hideTranslation() {
  translatedSection.style.backgroundColor = "";
  parallel_translation.style.display = "none";
}


function displayComment(line) {
  comment.innerHTML = atobUTF8(commentary[line]);
  comment.style.display = "block";
}

function hideComment() {
  comment.style.display = "none";
}

if ('serviceWorker' in navigator) {
  window.addEventListener('load', function() {
    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {
      // Registration was successful
      console.log('ServiceWorker registration successful with scope: ', registration.scope);
    }, function(err) {
      // registration failed :(
      console.log('ServiceWorker registration failed: ', err);
    });
  });
}

window.onload = updateScrollPosition;

var translation={}
translation['1.1.1'] = ""
translation['1.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBlbGRlciwgYXMgaXQgY2hhbmNlZCwgd2FzIHdpdGggaGltIGFscmVhZHk7IGJ1dCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGhlIHN1bW1vbmVkIGZyb20gdGhlIHByb3ZpbmNlIG92ZXIgd2hpY2ggaGUgaGFkIG1hZGUgaGltIHNhdHJhcCwgYW5kIGhlIGhhZCBhbHNvIGFwcG9pbnRlZCBoaW0gY29tbWFuZGVyIG9mIGFsbCB0aGUgZm9yY2VzIHRoYXQgbXVzdGVyIGluIHRoZSBwbGFpbiBvZiBDYXN0b2x1cy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q2FzdG9sdXMgd2FzIHRoZSBtdXN0ZXJpbmcgcGxhY2UgZm9yIGFsbCB0aGUgUGVyc2lhbiBmb3JjZXMgb2Ygd2VzdGVybiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjI5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMjk0Ij5Bc2lhIE1pbm9yPC9wbGFjZU5hbWU+LiBTZWUgSW50cm9kLiBwLiAyMzIuPC9ub3RlPiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjI5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMjk0Ij5Bc2lhIE1pbm9yPC9wbGFjZU5hbWU+LiBTZWUgSW50cm9kLiBwLiAyMzIuPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBhY2NvcmRpbmdseSB3ZW50IHVwPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSBJbnRyb2QuIHAuIHZpaSwgbm90ZSAxLjwvbm90ZT4gdG8gaGlzIGZhdGhlciwgdGFraW5nIHdpdGggaGltIFRpc3NhcGhlcm5lcyBhcyBhIGZyaWVuZCBhbmQgYWNjb21wYW5pZWQgYnkgdGhyZWUgaHVuZHJlZCBHcmVlayBob3BsaXRlcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiBoZWF2eS1hcm1lZCBpbmZhbnRyeW1lbiwgdGhlIHJlZ3VsYXIg4oCcdHJvb3BzIG9mIHRoZSBsaW5l4oCdIGluIEdyZWVrIHdhcmZhcmUuIEluIHRoaXMgaW5zdGFuY2UsIG9mIGNvdXJzZSwgdGhleSBhcmUgc2VydmluZyA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFzIGEgYm9keWd1YXJkLjwvbm90ZT4gdW5kZXIgdGhlIGNvbW1hbmQgb2YgWGVuaWFzIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gYXMgYSBib2R5Z3VhcmQuPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTcwODAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNzA4MCI+UGFycmhhc2lhPC9wbGFjZU5hbWU+Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIERhcml1cyBoYWQgZGllZCBhbmQgQXJ0YXhlcnhlcyBoYWQgYmVjb21lIGVzdGFibGlzaGVkIGFzIGtpbmcsIFRpc3NhcGhlcm5lcyBmYWxzZWx5IGFjY3VzZWQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiB0byBoaXMgYnJvdGhlciBvZiBwbG90dGluZyBhZ2FpbnN0IGhpbS4gQW5kIEFydGF4ZXJ4ZXMsIGJlbGlldmluZyB0aGUgYWNjdXNhdGlvbiwgYXJyZXN0ZWQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiwgd2l0aCB0aGUgaW50ZW50aW9uIG9mIHB1dHRpbmcgaGltIHRvIGRlYXRoOyBoaXMgbW90aGVyLCBob3dldmVyLCBtYWRlIGludGVyY2Vzc2lvbiBmb3IgaGltLCBhbmQgc2VudCBoaW0gYmFjayBhZ2FpbiB0byBoaXMgcHJvdmluY2UuCjwvdHJhbnNsYXRpb24+"
translation['1.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGVuIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gaGFkIHRodXMgcmV0dXJuZWQsIGFmdGVyIGhpcyBkYW5nZXIgYW5kIGRpc2dyYWNlLCBoZSBzZXQgYWJvdXQgcGxhbm5pbmcgdGhhdCBoZSBtaWdodCBuZXZlciBhZ2FpbiBiZSBpbiB0aGUgcG93ZXIgb2YgaGlzIGJyb3RoZXIsIGJ1dCwgaWYgcG9zc2libGUsIG1pZ2h0IGJlIGtpbmcgaW4gaGlzIHN0ZWFkLiBIZSBoYWQsIGluIHRoZSBmaXJzdCBwbGFjZSwgdGhlIHN1cHBvcnQgb2YgUGFyeXNhdGlzLCBoaXMgbW90aGVyLCBmb3Igc2hlIGxvdmVkIGhpbSBiZXR0ZXIgdGhhbiB0aGUgc29uIHdobyB3YXMga2luZywgQXJ0YXhlcnhlcy4KPC90cmFuc2xhdGlvbj4="
translation['1.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB3aGVuIGFueSBvZiB0aGUgS2luZydzIGNvdXJ0IGNhbWUgdG8gdmlzaXQgaGltLCBoZSB0cmVhdGVkIHRoZW0gYWxsIGluIHN1Y2ggYSB3YXkgdGhhdCB3aGVuIGhlIHNlbnQgdGhlbSBiYWNrIHRoZXkgd2VyZSBtb3JlIGRldm90ZWQgdG8gaGltIHRoYW4gdG8gdGhlIEtpbmcuIEhlIGFsc28gdG9vayBjYXJlIHRoYXQgdGhlIGJhcmJhcmlhbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+4oCcQmFyYmFyaWFuc+KAnSBpcyBhIGNvbnZlbmllbnQsIGJ1dCBub3QgYW4gYWNjdXJhdGUsIHRyYW5zbGF0aW9uIGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OsuG9sc+BzrLOsc+Bzr/OuSw8L2ZvcmVpZ24+IHdoaWNoIHdhcyBzaW1wbHkgdGhlIG5hbWUgdGhlIEdyZWVrcyBnYXZlLCB3aXRob3V0IGltcGx5aW5nIHJlcHJvYWNoLCB0byBhbGwgcGVvcGxlcyB3aG8gd2VyZSBub3QgR3JlZWtzLiBJbiBnZW5lcmFsLCB0aGVuLCBpdCBtZWFudCDigJxmb3JlaWduZXJz4oCdOyBpbiBtb3N0IGNhc2VzIGluIHRoZSA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmFiYXNpczwvdGl0bGU+IChhcyBoZXJlKSBpdCBjb3VsZCBiZSB0cmFuc2xhdGVkIOKAnFBlcnNpYW5zLuKAnTwvbm90ZT4gb2YgaGlzIG93biBwcm92aW5jZSBzaG91bGQgYmUgY2FwYWJsZSBzb2xkaWVycyBhbmQgc2hvdWxkIGZlZWwga2luZGx5IHRvd2FyZCBoaW0uCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6y4b2xz4HOss6xz4HOv865LDwvZm9yZWlnbj4gd2hpY2ggd2FzIHNpbXBseSB0aGUgbmFtZSB0aGUgR3JlZWtzIGdhdmUsIHdpdGhvdXQgaW1wbHlpbmcgcmVwcm9hY2gsIHRvIGFsbCBwZW9wbGVzIHdobyB3ZXJlIG5vdCBHcmVla3MuIEluIGdlbmVyYWwsIHRoZW4sIGl0IG1lYW50IOKAnGZvcmVpZ25lcnPigJ07IGluIG1vc3QgY2FzZXMgaW4gdGhlIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkFuYWJhc2lzPC90aXRsZT4gKGFzIGhlcmUpIGl0IGNvdWxkIGJlIHRyYW5zbGF0ZWQg4oCcUGVyc2lhbnMu4oCdPC90cmFuc2xhdGlvbj4="
translation['1.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkxhc3RseSwgYXMgcmVnYXJkcyBoaXMgR3JlZWsgZm9yY2UsIGhlIHByb2NlZWRlZCB0byBjb2xsZWN0IGl0IHdpdGggdGhlIHV0bW9zdCBzZWNyZWN5LCBzbyB0aGF0IGhlIG1pZ2h0IHRha2UgdGhlIEtpbmcgYXMgY29tcGxldGVseSB1bnByZXBhcmVkIGFzIHBvc3NpYmxlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3YXMgaW4gdGhlIGZvbGxvd2luZyB3YXksIHRoZW4sIHRoYXQgaGUgZ2F0aGVyZWQgdGhpcyBmb3JjZTogSW4gdGhlIGZpcnN0IHBsYWNlLCBoZSBzZW50IG9yZGVycyB0byB0aGUgY29tbWFuZGVycyBvZiBhbGwgdGhlIGdhcnJpc29ucyBoZSBoYWQgaW4gdGhlIGNpdGllcyB0byBlbmxpc3QgYXMgbWFueSBQZWxvcG9ubmVzaWFuIHNvbGRpZXJzIG9mIHRoZSBiZXN0IHNvcnQgYXMgdGhleSBzZXZlcmFsbHkgY291bGQsIG9uIHRoZSBwbGVhIHRoYXQgVGlzc2FwaGVybmVzIGhhZCBkZXNpZ25zIHVwb24gdGhlaXIgY2l0aWVzLiBGb3IsIGluIGZhY3QsIHRoZSBJb25pYW4gY2l0aWVzIGhhZCBvcmlnaW5hbGx5IGJlbG9uZ2VkIHRvIFRpc3NhcGhlcm5lcywgYnkgZ2lmdCBvZiB0aGUgS2luZyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIEludHJvZC4gcC4gdmlpaS48L25vdGU+IGJ1dCBhdCB0aGF0IHRpbWUgYWxsIG9mIHRoZW0gZXhjZXB0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWlsZXR1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTWlsZXR1cyI+TWlsZXR1czwvcGxhY2VOYW1lPiBoYWQgcmV2b2x0ZWQgYW5kIGdvbmUgb3ZlciB0byA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBwZW9wbGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNaWxldHVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNaWxldHVzIj5NaWxldHVzPC9wbGFjZU5hbWU+IGFsc28gd2VyZSBwbGFubmluZyB0byBkbyB0aGUgdmVyeSBzYW1lIHRoaW5nLCBuYW1lbHksIHRvIGdvIG92ZXIgdG8gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiwgYnV0IFRpc3NhcGhlcm5lcywgZmluZGluZyBvdXQgYWJvdXQgaXQgaW4gdGltZSwgcHV0IHNvbWUgb2YgdGhlbSB0byBkZWF0aCBhbmQgYmFuaXNoZWQgb3RoZXJzLiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHRoZXJldXBvbiB0b29rIHRoZSBleGlsZXMgdW5kZXIgaGlzIHByb3RlY3Rpb24sIGNvbGxlY3RlZCBhbiBhcm15LCBhbmQgbGFpZCBzaWVnZSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1pbGV0dXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1pbGV0dXMiPk1pbGV0dXM8L3BsYWNlTmFtZT4gYm90aCBieSBsYW5kIGFuZCBieSBzZWEsIGFuZCBlbmRlYXZvdXJlZCB0byByZXN0b3JlIHRoZSBleGlsZXMgdG8gdGhlaXIgY2l0eTsgYW5kIHRoaXMsIGFnYWluLCBtYWRlIGhpbSBhbm90aGVyIHByZXRleHQgZm9yIGdhdGhlcmluZyBhbiBhcm15Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk1lYW53aGlsZSBoZSBzZW50IHRvIHRoZSBLaW5nIGFuZCB1cmdlZCwgb24gdGhlIGdyb3VuZCB0aGF0IGhlIHdhcyBoaXMgYnJvdGhlciwgdGhhdCB0aGVzZSBJb25pYW4gY2l0aWVzIHNob3VsZCBiZSBnaXZlbiB0byBoaW0gaW5zdGVhZCBvZiByZW1haW5pbmcgdW5kZXIgdGhlIHJ1bGUgb2YgVGlzc2FwaGVybmVzLCBhbmQgaGlzIG1vdGhlciBjby1vcGVyYXRlZCB3aXRoIGhpbSBpbiB0aGlzLiBUaGUgcmVzdWx0IHdhcyB0aGF0IHRoZSBLaW5nIGZhaWxlZCB0byBwZXJjZWl2ZSB0aGUgcGxvdCBhZ2FpbnN0IGhpbXNlbGYsIGJ1dCBiZWxpZXZlZCB0aGF0IDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gd2FzIHNwZW5kaW5nIG1vbmV5IG9uIGhpcyB0cm9vcHMgYmVjYXVzZSBoZSB3YXMgYXQgd2FyIHdpdGggVGlzc2FwaGVybmVzLiBDb25zZXF1ZW50bHkgaGUgd2FzIG5vdCBhdCBhbGwgZGlzcGxlYXNlZCBhdCB0aGVpciBiZWluZyBhdCB3YXIsIHRoZSBsZXNzIHNvIGJlY2F1c2UgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiByZWd1bGFybHkgcmVtaXR0ZWQgdG8gdGhlIEtpbmcgdGhlIHRyaWJ1dGUgd2hpY2ggY2FtZSBpbiBmcm9tIHRoZSBjaXRpZXMgaGUgY2hhbmNlZCB0byBoYXZlIHRoYXQgYmVsb25nZWQgdG8gVGlzc2FwaGVybmVzLgogICAgPC90cmFuc2xhdGlvbj4="
translation['1.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdGlsbCBhbm90aGVyIGFybXkgd2FzIGJlaW5nIGNvbGxlY3RlZCBmb3IgaGltIGluIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAxMjc4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDEyNzg5Ij5DaGVyc29uZXNlPC9wbGFjZU5hbWU+IHdoaWNoIGlzIG9wcG9zaXRlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQWJ5ZG9zLE15c2lhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBYnlkb3MsTXlzaWEiPkFieWR1czwvcGxhY2VOYW1lPiwgaW4gdGhlIGZvbGxvd2luZyBtYW5uZXI6IENsZWFyY2h1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Gb3IgdGhlIHJlYXNvbiBmb3IgaGlzIGJhbmlzaG1lbnQgc2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi42LjIiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi42LjItNDwvYmlibD4uPC9ub3RlPiB3YXMgYSBMYWNlZGFlbW9uaWFuIGV4aWxlOyA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuNi4yIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuNi4yLTQ8L2JpYmw+LjxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIG1ha2luZyBoaXMgYWNxdWFpbnRhbmNlLCBjYW1lIHRvIGFkbWlyZSBoaW0sIGFuZCBnYXZlIGhpbSB0ZW4gdGhvdXNhbmQgZGFyaWNzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgZGFyaWMgd2FzIGEgUGVyc2lhbiBnb2xkIGNvaW4sIGVxdWl2YWxlbnQgaW4gd2VpZ2h0IG9mIGdvbGQgdG8gIDEgMnMuIDIgMS8yZC4gb3IgJDUuNDAsIGJ1dCBpbiBwdXJjaGFzaW5nIHBvd2VyIHRvIGEgbXVjaCBsYXJnZXIgc3VtLjwvbm90ZT4gQW5kIENsZWFyY2h1cywgdGFraW5nIHRoZSBnb2xkLCBjb2xsZWN0ZWQgYW4gYXJteSBieSBtZWFucyBvZiB0aGlzIG1vbmV5LCBhbmQgdXNpbmcgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDEyNzg5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMTI3ODkiPkNoZXJzb25lc2U8L3BsYWNlTmFtZT4gYXMgYSBiYXNlIG9mIG9wZXJhdGlvbnMsIHByb2NlZWRlZCB0byBtYWtlIHdhciB1cG9uIHRoZSBUaHJhY2lhbnMgd2hvIGR3ZWxsIGJleW9uZCB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2MzgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjYzOCI+SGVsbGVzcG9udDwvcGxhY2VOYW1lPiwgdGhlcmVieSBhaWRpbmcgdGhlIEdyZWVrcy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiB0aGUgR3JlZWtzIG9uIHRoZSBFdXJvcGVhbiBzaWRlIG9mIHRoZSBIZWxsZXNwb250LCB3aG8gc3VmZmVyZWQgZnJvbSB0aGUgaW5jdXJzaW9ucyBvZiB0aGVpciBUaHJhY2lhbiBuZWlnaGJvdXJzLjwvbm90ZT4gQ29uc2VxdWVudGx5LCB0aGUgSGVsbGVzcG9udGluZSBjaXRpZXMgb2YgdGhlaXIgb3duIGZyZWUgd2lsbCBzZW50IENsZWFyY2h1cyBjb250cmlidXRpb25zIG9mIG1vbmV5IGZvciB0aGUgc3VwcG9ydCBvZiBoaXMgdHJvb3BzLiBTbyBpdCB3YXMgdGhhdCB0aGlzIGFybXkgYWxzbyB3YXMgYmVpbmcgc2VjcmV0bHkgbWFpbnRhaW5lZCBmb3IgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['1.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWdhaW4sIEFyaXN0aXBwdXMgdGhlIFRoZXNzYWxpYW4gY2hhbmNlZCB0byBiZSBhIGZyaWVuZCBvZiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+LCBhbmQgc2luY2UgaGUgd2FzIGhhcmQgcHJlc3NlZCBieSBoaXMgcG9saXRpY2FsIG9wcG9uZW50cyBhdCBob21lLCBoZSBjYW1lIHRvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gYW5kIGFza2VkIGhpbSBmb3IgdGhyZWUgbW9udGhzJyBwYXkgZm9yIHR3byB0aG91c2FuZCBtZXJjZW5hcmllcywgdXJnaW5nIHRoYXQgaW4gdGhpcyB3YXkgaGUgc2hvdWxkIGdldCB0aGUgYmV0dGVyIG9mIGhpcyBvcHBvbmVudHMuIEFuZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGdhdmUgaGltIHNpeCBtb250aHMnIHBheSBmb3IgZm91ciB0aG91c2FuZCwgYW5kIHJlcXVlc3RlZCBoaW0gbm90IHRvIGNvbWUgdG8gdGVybXMgd2l0aCBoaXMgb3Bwb25lbnRzIHVudGlsIGhlIGhhZCBjb25zdWx0ZWQgd2l0aCBoaW0uIFRodXMgdGhlIGFybXkgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT4sIGFnYWluLCB3YXMgYmVpbmcgc2VjcmV0bHkgbWFpbnRhaW5lZCBmb3IgaGltLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnVydGhlcm1vcmUsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gZGlyZWN0ZWQgUHJveGVudXMgdGhlIEJvZW90aWFuLCB3aG8gd2FzIGEgZnJpZW5kIG9mIGhpcywgdG8gY29tZSB0byBoaW0gd2l0aCBhcyBtYW55IG1lbiBhcyBoZSBjb3VsZCBnZXQsIHNheWluZyB0aGF0IGhlIHdpc2hlZCB0byB1bmRlcnRha2UgYSBjYW1wYWlnbiBhZ2FpbnN0IHRoZSBQaXNpZGlhbnMsIGJlY2F1c2UsIGFzIGhlIHNhaWQsIHRoZXkgd2VyZSBjYXVzaW5nIHRyb3VibGUgdG8gaGlzIHByb3ZpbmNlLiBIZSBhbHNvIGRpcmVjdGVkIFNvcGhhZW5ldHVzIHRoZSBTdHltcGhhbGlhbiBhbmQgU29jcmF0ZXMgdGhlIEFjaGFlYW4sIHdobyB3ZXJlIGxpa2V3aXNlIGZyaWVuZHMgb2YgaGlzLCB0byBjb21lIHdpdGggYXMgbWFueSBtZW4gYXMgdGhleSBjb3VsZCBnZXQsIHNheWluZyB0aGF0IGhlIGludGVuZGVkIHRvIG1ha2Ugd2FyIHVwb24gVGlzc2FwaGVybmVzIHdpdGggdGhlIGFpZCBvZiB0aGUgTWlsZXNpYW4gZXhpbGVzOyBhbmQgdGhleSBwcm9jZWVkZWQgdG8gY2Fycnkgb3V0IGhpcyBkaXJlY3Rpb25zLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIGhlIHRob3VnaHQgdGhlIHRpbWUgaGFkIGNvbWUgdG8gYmVnaW4gaGlzIHVwd2FyZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgSW50cm9kLiBwLiB2aWksIG5vdGUgMS48L25vdGU+IG1hcmNoLCB0aGUgcHJldGV4dCBoZSBvZmZlcmVkIHdhcyB0aGF0IGhlIHdpc2hlZCB0byBkcml2ZSB0aGUgUGlzaWRpYW5zIG91dCBvZiBoaXMgbGFuZCBlbnRpcmVseSwgYW5kIGl0IHdhcyBhdm93ZWRseSBhZ2FpbnN0IHRoZW0gdGhhdCBoZSBzZXQgYWJvdXQgY29sbGVjdGluZyBib3RoIGhpcyBiYXJiYXJpYW4gYW5kIGhpcyBHcmVlayB0cm9vcHMuIEF0IHRoYXQgdGltZSBoZSBhbHNvIHNlbnQgd29yZCB0byBDbGVhcmNodXMgdG8gY29tZSB0byBoaW0gd2l0aCB0aGUgZW50aXJlIGFybXkgd2hpY2ggaGUgaGFkLCBhbmQgdG8gQXJpc3RpcHB1cyB0byBlZmZlY3QgYSByZWNvbmNpbGlhdGlvbiB3aXRoIGhpcyBhZHZlcnNhcmllcyBhdCBob21lIGFuZCBzZW5kIGhpbSB0aGUgYXJteSB3aGljaCBoZSBoYWQ7IGFuZCBoZSBzZW50IHdvcmQgdG8gWGVuaWFzIHRoZSBBcmNhZGlhbiwgd2hvIGNvbW1hbmRlZCBmb3IgaGltIHRoZSBtZXJjZW5hcnkgZm9yY2UgaW4gdGhlIGNpdGllcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4xLjYiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4xLjY8L2JpYmw+Ljwvbm90ZT4gdG8gY29tZSB3aXRoIGhpcyB0cm9vcHMsIGxlYXZpbmcgYmVoaW5kIG9ubHkgc28gbWFueSBhcyB3ZXJlIG5lY2Vzc2FyeSB0byBnYXJyaXNvbiB0aGUgY2l0YWRlbHMuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4xLjYiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4xLjY8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['1.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkhlIGxpa2V3aXNlIHN1bW1vbmVkIHRoZSB0cm9vcHMgd2hpY2ggd2VyZSBiZXNpZWdpbmcgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNaWxldHVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNaWxldHVzIj5NaWxldHVzPC9wbGFjZU5hbWU+LCBhbmQgdXJnZWQgdGhlIE1pbGVzaWFuIGV4aWxlcyB0byB0YWtlIHRoZSBmaWVsZCB3aXRoIGhpbSwgcHJvbWlzaW5nIHRoZW0gdGhhdCwgaWYgaGUgc2hvdWxkIHN1Y2Nlc3NmdWxseSBhY2NvbXBsaXNoIHRoZSBvYmplY3QgZm9yIHdoaWNoIGhlIHdhcyB0YWtpbmcgdGhlIGZpZWxkLCBoZSB3b3VsZCBub3Qgc3RvcCB1bnRpbCBoZSBoYWQgcmVzdG9yZWQgdGhlbSB0byB0aGVpciBob21lcy4gQW5kIHRoZXkgZ2xhZGx5IG9iZXllZOKAlGZvciB0aGV5IHRydXN0ZWQgaGlt4oCUYW5kIHByZXNlbnRlZCB0aGVtc2VsdmVzLCB1bmRlciBhcm1zLCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNhcmRpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU2FyZGlzIj5TYXJkaXM8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['1.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5YZW5pYXMsIHRoZW4sIGFycml2ZWQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTYXJkaXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNhcmRpcyI+U2FyZGlzPC9wbGFjZU5hbWU+IHdpdGggdGhlIHRyb29wcyBmcm9tIHRoZSBjaXRpZXMsIHdobyB3ZXJlIGhvcGxpdGVzIHRvIHRoZSBudW1iZXIgb2YgZm91ciB0aG91c2FuZDsgUHJveGVudXMgd2FzIHRoZXJlIHdpdGggaG9wbGl0ZXMgdG8gdGhlIG51bWJlciBvZiBmaWZ0ZWVuIGh1bmRyZWQsIGFuZCBmaXZlIGh1bmRyZWQgbGlnaHQtYXJtZWQgdHJvb3BzOyBTb3BoYWVuZXR1cyB0aGUgU3R5bXBoYWxpYW4gd2l0aCBhIHRob3VzYW5kIGhvcGxpdGVzOyBTb2NyYXRlcyB0aGUgQWNoYWVhbiB3aXRoIGFib3V0IGZpdmUgaHVuZHJlZCBob3BsaXRlczsgYW5kIFBhc2lvbiB0aGUgTWVnYXJpYW4gYXJyaXZlZCB3aXRoIHRocmVlIGh1bmRyZWQgaG9wbGl0ZXMgYW5kIHRocmVlIGh1bmRyZWQgcGVsdGFzdHMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlBlbHRhc3RzIGRpZmZlcmVkIGZyb20gb3JkaW5hcnkgbGlnaHQtYXJtZWQgdHJvb3BzIChjcC4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrPPhc68zr3hv4bPhM6xz4I8L2ZvcmVpZ24+IGFib3ZlKSBvbmx5IGluIHRoZSBmYWN0IHRoYXQgdGhleSBjYXJyaWVkIGEgc21hbGwsIGxpZ2h0IHNoaWVsZCwgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+A4b2zzrvPgM63PC9mb3JlaWduPuKAlHdoZW5jZSB0aGVpciBuYW1lLjwvbm90ZT4gVGhlIGxhc3QtbmFtZWQsIGFuZCBTb2NyYXRlcyBhbHNvLCBiZWxvbmdlZCB0byB0aGUgZm9yY2UgdGhhdCBoYWQgYmVlbiBlbmdhZ2VkIGluIGJlc2llZ2luZyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Os8+FzrzOveG/hs+EzrHPgjwvZm9yZWlnbj4gYWJvdmUpIG9ubHkgaW4gdGhlIGZhY3QgdGhhdCB0aGV5IGNhcnJpZWQgYSBzbWFsbCwgbGlnaHQgc2hpZWxkLCB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DhvbPOu8+Azrc8L2ZvcmVpZ24+4oCUd2hlbmNlIHRoZWlyIG5hbWUuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNaWxldHVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNaWxldHVzIj5NaWxldHVzPC9wbGFjZU5hbWU+LiBBbGwgdGhlc2UgY2FtZSB0byA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU2FyZGlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTYXJkaXMiPlNhcmRpczwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['1.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFud2hpbGUgVGlzc2FwaGVybmVzIGhhZCB0YWtlbiBub3RlIG9mIHRoZXNlIHByb2NlZWRpbmdzIGFuZCBjb21lIHRvIHRoZSBjb25jbHVzaW9uIHRoYXQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPicgcHJlcGFyYXRpb25zIHdlcmUgdG9vIGV4dGVuc2l2ZSB0byBiZSBhZ2FpbnN0IHRoZSBQaXNpZGlhbnM7IGhlIGFjY29yZGluZ2x5IG1hZGUgaGlzIHdheSB0byB0aGUgS2luZyBhcyBxdWlja2x5IGFzIGhlIGNvdWxkLCB3aXRoIGFib3V0IGZpdmUgaHVuZHJlZCBob3JzZW1lbi4KPC90cmFuc2xhdGlvbj4="
translation['1.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZSBLaW5nIGhlYXJkIGZyb20gVGlzc2FwaGVybmVzIGFib3V0IDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4nIGFycmF5LCBoZSBzZXQgYWJvdXQgbWFraW5nIGNvdW50ZXItcHJlcGFyYXRpb25zLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHdhcyBub3cgc2V0dGluZyBmb3J0aCBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU2FyZGlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTYXJkaXMiPlNhcmRpczwvcGxhY2VOYW1lPiB3aXRoIHRoZSB0cm9vcHMgSSBoYXZlIG1lbnRpb25lZDsgYW5kIGhlIG1hcmNoZWQgdGhyb3VnaCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjYzMSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2NjMxIj5MeWRpYTwvcGxhY2VOYW1lPiB0aHJlZSBzdGFnZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Dz4TOsc64zrzhvbnPgjwvZm9yZWlnbj4gPSBsaXQuIGEgc3RvcHBpbmctcGxhY2UsIGhlbmNlIGEgZGF5J3Mgam91cm5leS48L25vdGU+IGEgZGlzdGFuY2Ugb2YgdHdlbnR5LXR3byBwYXJhc2FuZ3MsPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PPhM6xzrjOvOG9uc+CPC9mb3JlaWduPiA9IGxpdC4gYSBzdG9wcGluZy1wbGFjZSwgaGVuY2UgYSBkYXkncyBqb3VybmV5Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIFBlcnNpYW4gbWVhc3VyZSBvZiBkaXN0YW5jZSwgZXF1aXZhbGVudCB0byAzMCBHcmVlayBzdGFkaWEsIG9yIGFib3V0IDMuMyBFbmdsaXNoIG1pbGVzLjwvbm90ZT4gdG8gdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTIxNTYxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMjE1NjEiPk1hZWFuZGVyPC9wbGFjZU5hbWU+IHJpdmVyLiBUaGUgd2lkdGggb2YgdGhpcyByaXZlciB3YXMgdHdvIHBsZXRocmEsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBwbGV0aHJ1bSA9IGFib3V0IDk3IEVuZ2xpc2ggZmVldC48L25vdGU+IGFuZCB0aGVyZSB3YXMgYSBicmlkZ2Ugb3ZlciBpdCBtYWRlIG9mIHNldmVuIGJvYXRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIGNyb3NzaW5nIHRoZSBNYWVhbmRlciBoZSBtYXJjaGVkIHRocm91Z2ggPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2MTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjYxMyI+UGhyeWdpYTwvcGxhY2VOYW1lPiBvbmUgc3RhZ2UsIGEgZGlzdGFuY2Ugb2YgZWlnaHQgcGFyYXNhbmdzLCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMTUwOCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAxNTA4Ij5Db2xvc3NhZTwvcGxhY2VOYW1lPiwgYW4gaW5oYWJpdGVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk1hbnkgb2YgdGhlIGNpdGllcyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDA0Ij5Bc2lhPC9wbGFjZU5hbWU+IHdlcmUgdGhlbiwgYXMgbm93LCBkZXNlcnRlZC48L25vdGU+IGNpdHksIHByb3NwZXJvdXMgYW5kIGxhcmdlLiBUaGVyZSBoZSByZW1haW5lZCBzZXZlbiBkYXlzOyBhbmQgTWVub248cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDA0Ij5Bc2lhPC9wbGFjZU5hbWU+IHdlcmUgdGhlbiwgYXMgbm93LCBkZXNlcnRlZC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+V2hvIGhhZCBiZWVuIHNlbnQgYnkgQXJpc3RpcHB1cyAoc2VlIDEgYWJvdmUpLjwvbm90ZT4gdGhlIFRoZXNzYWxpYW4gYXJyaXZlZCwgd2l0aCBhIHRob3VzYW5kIGhvcGxpdGVzIGFuZCBmaXZlIGh1bmRyZWQgcGVsdGFzdHMsIGNvbnNpc3Rpbmcgb2YgRG9sb3BpYW5zLCBBZW5pYW5pYW5zLCBhbmQgT2x5bnRoaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['1.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZW5jZSBoZSBtYXJjaGVkIHRocmVlIHN0YWdlcywgdHdlbnR5IHBhcmFzYW5ncywgdG8gQ2VsYWVuYWUsIGFuIGluaGFiaXRlZCBjaXR5IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjEzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2MTMiPlBocnlnaWE8L3BsYWNlTmFtZT4sIGxhcmdlIGFuZCBwcm9zcGVyb3VzLiBUaGVyZSA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGhhZCBhIHBhbGFjZSBhbmQgYSBsYXJnZSBwYXJrIGZ1bGwgb2Ygd2lsZCBhbmltYWxzLCB3aGljaCBoZSB1c2VkIHRvIGh1bnQgb24gaG9yc2ViYWNrIHdoZW5ldmVyIGhlIHdpc2hlZCB0byBnaXZlIGhpbXNlbGYgYW5kIGhpcyBob3JzZXMgZXhlcmNpc2UuIFRocm91Z2ggdGhlIG1pZGRsZSBvZiB0aGlzIHBhcmsgZmxvd3MgdGhlIE1hZWFuZGVyIHJpdmVyOyBpdHMgc291cmNlcyBhcmUgYmVuZWF0aCB0aGUgcGFsYWNlLCBhbmQgaXQgZmxvd3MgdGhyb3VnaCB0aGUgY2l0eSBvZiBDZWxhZW5hZSBhbHNvLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIGlzIGxpa2V3aXNlIGEgcGFsYWNlIG9mIHRoZSBHcmVhdCBLaW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgdGl0bGUgb2Z0ZW4gZ2l2ZW4gYnkgdGhlIEdyZWVrcyB0byB0aGUga2luZyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMDIzMSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAwMjMxIj5QZXJzaWE8L3BsYWNlTmFtZT4uPC9ub3RlPiBpbiBDZWxhZW5hZSwgc3Ryb25nbHkgZm9ydGlmaWVkIGFuZCBzaXR1YXRlZCBhdCB0aGUgZm9vdCBvZiB0aGUgQWNyb3BvbGlzIG92ZXIgdGhlIHNvdXJjZXMgb2YgdGhlIE1hcnN5YXMgcml2ZXI7IHRoZSBNYXJzeWFzIGFsc28gZmxvd3MgdGhyb3VnaCB0aGUgY2l0eSwgYW5kIGVtcHRpZXMgaW50byB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDAyMzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMDIzMSI+UGVyc2lhPC9wbGFjZU5hbWU+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTIxNTYxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMjE1NjEiPk1hZWFuZGVyPC9wbGFjZU5hbWU+LCBhbmQgaXRzIHdpZHRoIGlzIHR3ZW50eS1maXZlIGZlZXQuIEl0IHdhcyBoZXJlLCBhY2NvcmRpbmcgdG8gdGhlIHN0b3J5LCB0aGF0IEFwb2xsbyBmbGF5ZWQgTWFyc3lhcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+TWFyc3lhcywgYSBQaHJ5Z2lhbiBzYXR5ciwgd2FzIHNvIHByb3VkIG9mIGhpcyBza2lsbCB3aXRoIHRoZSBmbHV0ZSB0aGF0IGhlIHByZXN1bWVkIHRvIGNoYWxsZW5nZSBBcG9sbG8sIGdvZCBvZiBtdXNpYyBhbmQgbWFzdGVyIG9mIHRoZSBseXJlLiBUaGUgbXl0aCBhcHBlYXJzIHRvIGJlIGEgcmVjb3JkIG9mIHRoZSBzdXBlcnNlc3Npb24gb2YgdGhlIGZsdXRlIGJ5IHRoZSBseXJlIGluIEdyZWVrIGZhdm91ci48L25vdGU+IGFmdGVyIGhhdmluZyBkZWZlYXRlZCBoaW0gaW4gYSBjb250ZXN0IG9mIG11c2ljYWwgc2tpbGw7IGhlIGh1bmcgdXAgaGlzIHNraW4gaW4gdGhlIGNhdmUgZnJvbSB3aGljaCB0aGUgc291cmNlcyBpc3N1ZSwgYW5kIGl0IGlzIGZvciB0aGlzIHJlYXNvbiB0aGF0IHRoZSByaXZlciBpcyBjYWxsZWQgTWFyc3lhcy4KICAgIDwvdHJhbnNsYXRpb24+"
translation['1.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkl0IHdhcyBoZXJlIGFsc28sIHJlcG9ydCBoYXMgaXQsIHRoYXQgWGVyeGVzLCB3aGVuIGhlIHdhcyBvbiBoaXMgcmV0cmVhdCBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiBhZnRlciBsb3NpbmcgdGhlIGZhbW91cyBiYXR0bGUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPnZpei4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTYWxhbWlzLCBDeXBydXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNhbGFtaXMsIEN5cHJ1cyI+U2FsYW1pczwvcGxhY2VOYW1lPiwgaW4gPGRhdGUgYXV0aG5hbWU9Ii00ODAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00ODAiPjQ4MDwvZGF0ZT4gQi5DLjwvbm90ZT4gYnVpbHQgdGhlIHBhbGFjZSBqdXN0IG1lbnRpb25lZCBhbmQgbGlrZXdpc2UgdGhlIGNpdGFkZWwgb2YgQ2VsYWVuYWUuIEhlcmUgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTYWxhbWlzLCBDeXBydXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNhbGFtaXMsIEN5cHJ1cyI+U2FsYW1pczwvcGxhY2VOYW1lPiwgaW4gPGRhdGUgYXV0aG5hbWU9Ii00ODAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00ODAiPjQ4MDwvZGF0ZT4gQi5DLjxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gcmVtYWluZWQgdGhpcnR5IGRheXM7IGFuZCBDbGVhcmNodXMsIHRoZSBMYWNlZGFlbW9uaWFuIGV4aWxlLCBhcnJpdmVkLCB3aXRoIGEgdGhvdXNhbmQgaG9wbGl0ZXMsIGVpZ2h0IGh1bmRyZWQgVGhyYWNpYW4gcGVsdGFzdHMsIGFuZCB0d28gaHVuZHJlZCBDcmV0YW4gYm93bWVuLiBBdCB0aGUgc2FtZSB0aW1lIGNhbWUgYWxzbyBTb3NpcyB0aGUgU3lyYWN1c2FuIHdpdGggdGhyZWUgaHVuZHJlZCBob3BsaXRlcyBhbmQgQWdpYXMgdGhlIEFyY2FkaWFuIHdpdGggYSB0aG91c2FuZCBob3BsaXRlcy4gQW5kIGhlcmUgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBoZWxkIGEgcmV2aWV3IGFuZCBtYWRlIGFuIGVudW1lcmF0aW9uIG9mIHRoZSBHcmVla3MgaW4gdGhlIHBhcmssIGFuZCB0aGV5IGFtb3VudGVkIGFsbCB0b2xkIHRvIGVsZXZlbiB0aG91c2FuZCBob3BsaXRlcyBhbmQgYWJvdXQgdHdvIHRob3VzYW5kIHBlbHRhc3RzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5IZXJlIHVzZWQgaW4gdGhlIGdlbmVyYWwgc2Vuc2UsIGkuZS4gdG8gaW5jbHVkZSBhbGwga2luZHMgb2YgbGlnaHQtYXJtZWQgdHJvb3BzOyBjcC4gbm90ZSBvbiAzIGFib3ZlLiBYZW5vcGhvbiBoZXJlIHVzZXMgcm91bmQgbnVtYmVycy4gVGhlIGV4YWN0IHRvdGFscywgYWNjb3JkaW5nIHRvIHRoZSBmaWd1cmVzIHByZXZpb3VzbHkgZ2l2ZW4sIGFyZSAxMCw2MDAgaG9wbGl0ZXMgYW5kIDIsMzAwIGxpZ2h0LWFybWVkIHRyb29wcy48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['1.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbmNlIGhlIG1hcmNoZWQgdHdvIHN0YWdlcywgdGVuIHBhcmFzYW5ncywgdG8gUGVsdGFlLCBhbiBpbmhhYml0ZWQgY2l0eS4gVGhlcmUgaGUgcmVtYWluZWQgdGhyZWUgZGF5cywgZHVyaW5nIHdoaWNoIHRpbWUgWGVuaWFzIHRoZSBBcmNhZGlhbiBjZWxlYnJhdGVkIHRoZSBMeWNhZWFuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkluIGhvbm91ciBvZiBMeWNhZWFuIFpldXMsIGkuZS4gWmV1cyBvZiBNdC4gTHljYWV1cywgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI3MzUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjczNSI+QXJjYWRpYTwvcGxhY2VOYW1lPi48L25vdGU+IGZlc3RpdmFsIHdpdGggc2FjcmlmaWNlIGFuZCBoZWxkIGdhbWVzOyB0aGUgcHJpemVzIHdlcmUgZ29sZGVuIHN0cmlnaWxzLCBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI3MzUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjczNSI+QXJjYWRpYTwvcGxhY2VOYW1lPi48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGhpbXNlbGYgd2FzIG9uZSBvZiB0aG9zZSB3aG8gd2F0Y2hlZCB0aGUgZ2FtZXMuIFRoZW5jZSBoZSBtYXJjaGVkIHR3byBzdGFnZXMsIHR3ZWx2ZSBwYXJhc2FuZ3MsIHRvIHRoZSBpbmhhYml0ZWQgY2l0eSBvZiBDZXJhbW9uLWFnb3JhLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5PciBUaWxlbWFya2V0Ljwvbm90ZT4gdGhlIGxhc3QgUGhyeWdpYW4gY2l0eSBhcyBvbmUgZ29lcyB0b3dhcmQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY3NDgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjc0OCI+TXlzaWE8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['1.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuY2UgaGUgbWFyY2hlZCB0aHJlZSBzdGFnZXMsIHRoaXJ0eSBwYXJhc2FuZ3MsIHRvIENheXN0cnUtcGVkaW9uLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5PciBDYSBzdGVyZmllbGQuPC9ub3RlPiBhbiBpbmhhYml0ZWQgY2l0eS4gVGhlcmUgaGUgcmVtYWluZWQgZml2ZSBkYXlzLiBBdCB0aGlzIHRpbWUgaGUgd2FzIG93aW5nIHRoZSBzb2xkaWVycyBtb3JlIHRoYW4gdGhyZWUgbW9udGhzJyBwYXksIGFuZCB0aGV5IHdlbnQgYWdhaW4gYW5kIGFnYWluIHRvIGhpcyBoZWFkcXVhcnRlcnMgYW5kIGRlbWFuZGVkIHdoYXQgd2FzIGR1ZSB0aGVtLiBIZSBhbGwgdGhlIHdoaWxlIGV4cHJlc3NlZCBob3BlcywgYW5kIHdhcyBtYW5pZmVzdGx5IHRyb3VibGVkOyBmb3IgaXQgd2FzIG5vdCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+JyB3YXkgdG8gd2l0aGhvbGQgcGF5bWVudCB3aGVuIGhlIGhhZCBtb25leS4KPC90cmFuc2xhdGlvbj4="
translation['1.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGlzIGp1bmN0dXJlIGFycml2ZWQgRXB5YXhhLCB0aGUgd2lmZSBvZiBTeWVubmVzaXMsIHRoZSBraW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPuKAnEtpbmfigJ0gaW4gbmFtZSwgYnV0IGluIGZhY3QgYSBkZXBlbmRlbnQgb2YgdGhlIGtpbmcgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDAyMzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMDIzMSI+UGVyc2lhPC9wbGFjZU5hbWU+LiBTeWVubmVzaXMgd2FzIHNlZWtpbmcsIGFzIHRoZSBuYXJyYXRpdmUgaW5kaWNhdGVzLCB0byBrZWVwIG9uIGdvb2QgdGVybXMgd2l0aCBib3RoIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gYW5kIEFydGF4ZXJ4ZXMsIHNlY3JldGx5IGFpZGluZyB0aGUgZm9ybWVyLCB3aGlsZSBzdGlsbCBtYWtpbmcgYSBzaG93IG9mIHJlc2lzdGFuY2UgKHNlZSAyMSBiZWxvdykgdG8gaGlzIG1hcmNoLjwvbm90ZT4gb2YgdGhlIENpbGljaWFucywgY29taW5nIHRvIHZpc2l0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAwMjMxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDAyMzEiPlBlcnNpYTwvcGxhY2VOYW1lPi4gU3llbm5lc2lzIHdhcyBzZWVraW5nLCBhcyB0aGUgbmFycmF0aXZlIGluZGljYXRlcywgdG8ga2VlcCBvbiBnb29kIHRlcm1zIHdpdGggYm90aCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFuZCBBcnRheGVyeGVzLCBzZWNyZXRseSBhaWRpbmcgdGhlIGZvcm1lciwgd2hpbGUgc3RpbGwgbWFraW5nIGEgc2hvdyBvZiByZXNpc3RhbmNlIChzZWUgMjEgYmVsb3cpIHRvIGhpcyBtYXJjaC48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+LCBhbmQgdGhlIHN0b3J5IHdhcyB0aGF0IHNoZSBnYXZlIGhpbSBhIGxhcmdlIHN1bSBvZiBtb25leTsgYXQgYW55IHJhdGUsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gcGFpZCB0aGUgdHJvb3BzIGF0IHRoYXQgdGltZSBmb3VyIG1vbnRocycgd2FnZXMuIFRoZSBDaWxpY2lhbiBxdWVlbiB3YXMgYXR0ZW5kZWQgYnkgYSBib2R5LWd1YXJkIG9mIENpbGljaWFucyBhbmQgQXNwZW5kaWFuczsgYW5kIHBlb3BsZSBzYWlkIHRoYXQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBoYWQgaW50aW1hdGUgcmVsYXRpb25zIHdpdGggdGhlIHF1ZWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbmNlIGhlIG1hcmNoZWQgdHdvIHN0YWdlcywgdGVuIHBhcmFzYW5ncywgdG8gdGhlIGluaGFiaXRlZCBjaXR5IG9mIFRoeW1icml1bS4gVGhlcmUsIGFsb25nc2lkZSB0aGUgcm9hZCwgd2FzIHRoZSBzby1jYWxsZWQgc3ByaW5nIG9mIE1pZGFzLCB0aGUga2luZyBvZiB0aGUgUGhyeWdpYW5zLCBhdCB3aGljaCBNaWRhcywgYWNjb3JkaW5nIHRvIHRoZSBzdG9yeSwgY2F1Z2h0IHRoZSBzYXR5ciBieSBtaXhpbmcgd2luZSB3aXRoIHRoZSB3YXRlciBvZiB0aGUgc3ByaW5nLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGlzIHN0b3J5IGlzIGxlc3MgZmFtaWxpYXIgdGhhbiBpdHMgc2VxdWVsLCB2aXouIHRoYXQgZm9yIGhpcyBraW5kbHkgdHJlYXRtZW50IG9mIHRoZSBzYXR5ciAoU2lsZW51cykgTWlkYXMgd2FzIGdyYW50ZWQgYnkgRGlvbnlzdXMgdGhlIGZ1bGZpbG1lbnQgb2YgYW55IHJlcXVlc3QgaGUgbWlnaHQgbWFrZTsgaGUgcmVxdWVzdGVkIHRoYXQgYWxsIGhlIHRvdWNoZWQgc2hvdWxkIHR1cm4gdG8gZ29sZCwgYW5kIHNvIGRpZWQgb2YgaHVuZ2VyLjwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['1.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuY2UgaGUgbWFyY2hlZCB0d28gc3RhZ2VzLCB0ZW4gcGFyYXNhbmdzLCB0byBUeXJpYWV1bSwgYW4gaW5oYWJpdGVkIGNpdHkuIFRoZXJlIGhlIHJlbWFpbmVkIHRocmVlIGRheXMuIEFuZCB0aGUgQ2lsaWNpYW4gcXVlZW4sIGFzIHRoZSByZXBvcnQgcmFuLCBhc2tlZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHRvIGV4aGliaXQgaGlzIGFybXkgdG8gaGVyOyBzdWNoIGFuIGV4aGliaXRpb24gd2FzIHdoYXQgaGUgZGVzaXJlZCB0byBtYWtlLCBhbmQgYWNjb3JkaW5nbHkgaGUgaGVsZCBhIHJldmlldyBvZiB0aGUgR3JlZWtzIGFuZCB0aGUgYmFyYmFyaWFucyBvbiB0aGUgcGxhaW4uCjwvdHJhbnNsYXRpb24+"
translation['1.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5IZSBvcmRlcmVkIHRoZSBHcmVla3MgdG8gZm9ybSB0aGVpciBsaW5lcyBhbmQgdGFrZSB0aGVpciBwb3NpdGlvbnMganVzdCBhcyB0aGV5IHdlcmUgYWNjdXN0b21lZCB0byBkbyBmb3IgYmF0dGxlLCBlYWNoIGdlbmVyYWwgbWFyc2hhbGxpbmcgaGlzIG93biBtZW4uIFNvIHRoZXkgZm9ybWVkIHRoZSBsaW5lIGZvdXIgZGVlcCwgTWVub24gYW5kIGhpcyB0cm9vcHMgb2NjdXB5aW5nIHRoZSByaWdodCB3aW5nLCBDbGVhcmNodXMgYW5kIGhpcyB0cm9vcHMgdGhlIGxlZnQsIGFuZCB0aGUgb3RoZXIgZ2VuZXJhbHMgdGhlIGNlbnRyZS4KPC90cmFuc2xhdGlvbj4="
translation['1.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGluc3BlY3RlZCB0aGUgYmFyYmFyaWFucyBmaXJzdCwgYW5kIHRoZXkgbWFyY2hlZCBwYXN0IHdpdGggdGhlaXIgY2F2YWxyeSBmb3JtZWQgaW4gdHJvb3BzIGFuZCB0aGVpciBpbmZhbnRyeSBpbiBjb21wYW5pZXM7IHRoZW4gaGUgaW5zcGVjdGVkIHRoZSBHcmVla3MsIGRyaXZpbmcgcGFzdCB0aGVtIGluIGEgY2hhcmlvdCwgdGhlIENpbGljaWFuIHF1ZWVuIGluIGEgY2FycmlhZ2UuIEFuZCB0aGUgR3JlZWtzIGFsbCBoYWQgaGVsbWV0cyBvZiBicm9uemUsIGNyaW1zb24gdHVuaWNzLCBhbmQgZ3JlYXZlcywgYW5kIGNhcnJpZWQgdGhlaXIgc2hpZWxkcyB1bmNvdmVyZWQuCjwvdHJhbnNsYXRpb24+"
translation['1.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGhlIGhhZCBkcml2ZW4gcGFzdCB0aGVtIGFsbCwgaGUgaGFsdGVkIGhpcyBjaGFyaW90IGluIGZyb250IG9mIHRoZSBjZW50cmUgb2YgdGhlIHBoYWxhbngsIGFuZCBzZW5kaW5nIGhpcyBpbnRlcnByZXRlciBQaWdyZXMgdG8gdGhlIGdlbmVyYWxzIG9mIHRoZSBHcmVla3MsIGdhdmUgb3JkZXJzIHRoYXQgdGhlIHRyb29wcyBzaG91bGQgYWR2YW5jZSBhcm1zIGFuZCB0aGUgcGhhbGFueCBtb3ZlIGZvcndhcmQgaW4gYSBib2R5LiBUaGUgZ2VuZXJhbHMgdHJhbnNtaXR0ZWQgdGhlc2Ugb3JkZXJzIHRvIHRoZSBzb2xkaWVycywgYW5kIHdoZW4gdGhlIHRydW1wZXQgc291bmRlZCwgdGhleSBhZHZhbmNlZCBhcm1zIGFuZCBjaGFyZ2VkLiBBbmQgdGhlbiwgYXMgdGhleSB3ZW50IG9uIGZhc3RlciBhbmQgZmFzdGVyLCBhdCBsZW5ndGggd2l0aCBhIHNob3V0IHRoZSB0cm9vcHMgYnJva2UgaW50byBhIHJ1biBvZiB0aGVpciBvd24gYWNjb3JkLCBpbiB0aGUgZGlyZWN0aW9uIG9mIHRoZSBjYW1wLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIGJhcmJhcmlhbnMsIHRoZXkgd2VyZSB0ZXJyaWJseSBmcmlnaHRlbmVkOyB0aGUgQ2lsaWNpYW4gcXVlZW4gdG9vayB0byBmbGlnaHQgaW4gaGVyIGNhcnJpYWdlLCBhbmQgdGhlIHBlb3BsZSBpbiB0aGUgbWFya2V0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkdyZWVrIHRyb29wcyB3ZXJlIG5vdCBzdXBwbGllZCB3aXRoIHJhdGlvbnMgaW4gdGhlIG1vZGVybiB3YXksIGJ1dCBib3VnaHQgdGhlaXIgcHJvdmlzaW9ucyBmcm9tIGRheSB0byBkYXkgZnJvbSBzdXRsZXJzIHdobyBhY2NvbXBhbmllZCB0aGUgYXJteS4gVGhlIGNvbW1hbmRlcidzIGR1dHkgZW5kZWQgd2l0aCDigJxwcm92aWRpbmcgYSBtYXJrZXTigJ0gKDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gM6zzr/PgeG9sM69IM+AzrHPgeG9s8+HzrXOuc69PC9mb3JlaWduPikuPC9ub3RlPiBsZWZ0IHRoZWlyIHdhcmVzIGJlaGluZCBhbmQgdG9vayB0byB0aGVpciBoZWVsczsgd2hpbGUgdGhlIEdyZWVrcyB3aXRoIGEgcm9hciBvZiBsYXVnaHRlciBjYW1lIHVwIHRvIHRoZWlyIGNhbXAuIE5vdyB0aGUgQ2lsaWNpYW4gcXVlZW4gd2FzIGZpbGxlZCB3aXRoIGFkbWlyYXRpb24gYXQgYmVob2xkaW5nIHRoZSBicmlsbGlhbnQgYXBwZWFyYW5jZSBhbmQgdGhlIG9yZGVyIG9mIHRoZSBHcmVlayBhcm15OyBhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzrPOv8+B4b2wzr0gz4DOsc+B4b2zz4fOtc65zr08L2ZvcmVpZ24+KS48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHdhcyBkZWxpZ2h0ZWQgdG8gc2VlIHRoZSB0ZXJyb3Igd2l0aCB3aGljaCB0aGUgR3JlZWtzIGluc3BpcmVkIHRoZSBiYXJiYXJpYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbmNlIGhlIG1hcmNoZWQgdGhyZWUgc3RhZ2VzLCB0d2VudHkgcGFyYXNhbmdzLCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjUzOSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNTM5Ij5JY29uaXVtPC9wbGFjZU5hbWU+LCB0aGUgbGFzdCBjaXR5IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjEzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2MTMiPlBocnlnaWE8L3BsYWNlTmFtZT4uIFRoZXJlIGhlIHJlbWFpbmVkIHRocmVlIGRheXMuIFRoZW5jZSBoZSBtYXJjaGVkIHRocm91Z2ggPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDM3ODUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMzc4NSI+THljYW9uaWE8L3BsYWNlTmFtZT4gZml2ZSBzdGFnZXMsIHRoaXJ0eSBwYXJhc2FuZ3MuIFRoaXMgY291bnRyeSBoZSBnYXZlIG92ZXIgdG8gdGhlIEdyZWVrcyB0byBwbHVuZGVyLCBvbiB0aGUgZ3JvdW5kIHRoYXQgaXQgd2FzIGhvc3RpbGUgdGVycml0b3J5Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JbiBsZWF2aW5nIFBocnlnaWEgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiB3YXMgcGFzc2luZyBiZXlvbmQgdGhlIGxpbWl0cyBvZiBoaXMgb3duIHNhdHJhcHkuIEludHJvZC4gcC4gdmlpaS48L25vdGU+CiAgICA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHdhcyBwYXNzaW5nIGJleW9uZCB0aGUgbGltaXRzIG9mIGhpcyBvd24gc2F0cmFweS4gSW50cm9kLiBwLiB2aWlpLjwvdHJhbnNsYXRpb24+"
translation['1.2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5Gcm9tIHRoZXJlIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gc2VudCB0aGUgQ2lsaWNpYW4gcXVlZW4gYmFjayB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjQ3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNDcwIj5DaWxpY2lhPC9wbGFjZU5hbWU+IGJ5IHRoZSBzaG9ydGVzdCByb3V0ZSwgYW5kIGhlIHNlbnQgc29tZSBvZiBNZW5vbidzIHRyb29wcyB0byBlc2NvcnQgaGVyLCBNZW5vbiBoaW1zZWxmIGNvbW1hbmRpbmcgdGhlbS4gV2l0aCB0aGUgcmVzdCBvZiB0aGUgYXJteSA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IG1hcmNoZWQgdGhyb3VnaCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMzAxNiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAzMDE2Ij5DYXBwYWRvY2lhPC9wbGFjZU5hbWU+IGZvdXIgc3RhZ2VzLCB0d2VudHktZml2ZSBwYXJhc2FuZ3MsIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHlhbmEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFR5YW5hIj5EYW5hPC9wbGFjZU5hbWU+LCBhbiBpbmhhYml0ZWQgY2l0eSwgbGFyZ2UgYW5kIHByb3NwZXJvdXMuIFRoZXJlIHRoZXkgcmVtYWluZWQgdGhyZWUgZGF5czsgYW5kIGR1cmluZyB0aGF0IHRpbWUgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBwdXQgdG8gZGVhdGggYSBQZXJzaWFuIG5hbWVkIE1lZ2FwaGVybmVzLCB3aG8gd2FzIGEgd2VhcmVyIG9mIHRoZSByb3lhbCBwdXJwbGUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgdGl0bGUgb2YgaG9ub3VyIGF0IHRoZSBQZXJzaWFuIGNvdXJ0Ljwvbm90ZT4gYW5kIGFub3RoZXIgZGlnbml0YXJ5IGFtb25nIGhpcyBzdWJvcmRpbmF0ZXMsIG9uIHRoZSBjaGFyZ2UgdGhhdCB0aGV5IHdlcmUgcGxvdHRpbmcgYWdhaW5zdCBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['1.2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnJvbSB0aGVyZSB0aGV5IG1hZGUgcmVhZHkgdG8gdHJ5IHRvIGVudGVyIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNDcwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI0NzAiPkNpbGljaWE8L3BsYWNlTmFtZT4uIE5vdyB0aGUgZW50cmFuY2Ugd2FzIGJ5IGEgd2Fnb24tcm9hZCwgZXhjZWVkaW5nbHkgc3RlZXAgYW5kIGltcHJhY3RpY2FibGUgZm9yIGFuIGFybXkgdG8gcGFzcyBpZiB0aGVyZSB3YXMgYW55Ym9keSB0byBvcHBvc2UgaXQ7IGFuZCBpbiBmYWN0LCBhcyByZXBvcnQgcmFuLCBTeWVubmVzaXMgd2FzIHVwb24gdGhlIGhlaWdodHMsIGd1YXJkaW5nIHRoZSBlbnRyYW5jZTsgdGhlcmVmb3JlIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gcmVtYWluZWQgZm9yIGEgZGF5IGluIHRoZSBwbGFpbi4gT24gdGhlIGZvbGxvd2luZyBkYXksIGhvd2V2ZXIsIGEgbWVzc2VuZ2VyIGNhbWUgd2l0aCB3b3JkIHRoYXQgU3llbm5lc2lzIGhhZCBhYmFuZG9uZWQgdGhlIGhlaWdodHMsIGJlY2F1c2UgaGUgaGFkIGxlYXJuZWQgdGhhdCBNZW5vbidzIGFybXkgd2FzIGFscmVhZHkgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI0NzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjQ3MCI+Q2lsaWNpYTwvcGxhY2VOYW1lPiwgb24gaGlzIG93biBzaWRlIG9mIHRoZSBtb3VudGFpbnMsIGFuZCBiZWNhdXNlLCBmdXJ0aGVyLCBoZSB3YXMgZ2V0dGluZyByZXBvcnRzIHRoYXQgdHJpcmVtZXMgYmVsb25naW5nIHRvIHRoZSBMYWNlZGFlbW9uaWFuczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGhhZCBhc2tlZCB0aGUgTGFjZWRhZW1vbmlhbnMg4oCcdG8gc2hvdyB0aGVtc2VsdmVzIGFzIGdvb2QgZnJpZW5kcyB0byBoaW0gYXMgaGUgaGFkIGJlZW4gdG8gdGhlbSBpbiB0aGVpciB3YXIgYWdhaW5zdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT7igJ0gKDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gMi4xLjEiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gMi4xLjE8L2JpYmw+KS4gVGhlIGFpZCB0aGV5IG5vdyByZW5kZXJlZCAoc2VlIGFsc28gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjQuMiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjQuMi0zPC9iaWJsPikgd2FzIGluIHJlc3BvbnNlIHRvIHRoYXQgcmVxdWVzdC48L25vdGU+IGFuZCB0byA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGhhZCBhc2tlZCB0aGUgTGFjZWRhZW1vbmlhbnMg4oCcdG8gc2hvdyB0aGVtc2VsdmVzIGFzIGdvb2QgZnJpZW5kcyB0byBoaW0gYXMgaGUgaGFkIGJlZW4gdG8gdGhlbSBpbiB0aGVpciB3YXIgYWdhaW5zdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT7igJ0gKDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gMi4xLjEiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gMi4xLjE8L2JpYmw+KS4gVGhlIGFpZCB0aGV5IG5vdyByZW5kZXJlZCAoc2VlIGFsc28gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjQuMiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjQuMi0zPC9iaWJsPikgd2FzIGluIHJlc3BvbnNlIHRvIHRoYXQgcmVxdWVzdC48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGhpbXNlbGYgd2VyZSBzYWlsaW5nIGFyb3VuZCBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw2MDAyNzY1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDYwMDI3NjUiPklvbmlhPC9wbGFjZU5hbWU+IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNDcwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI0NzAiPkNpbGljaWE8L3BsYWNlTmFtZT4gdW5kZXIgdGhlIGNvbW1hbmQgb2YgVGFtb3MuCjwvdHJhbnNsYXRpb24+"
translation['1.2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BdCBhbnkgcmF0ZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIHdoZXRoZXIgb3Igbm90IHRoZSByZWFzb25zIGp1c3QgZ2l2ZW4gd2VyZSB0aGUgdHJ1ZSBvbmVzLjwvbm90ZT4gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBjbGltYmVkIHRoZSBtb3VudGFpbnMgd2l0aG91dCBtZWV0aW5nIGFueSBvcHBvc2l0aW9uLCBhbmQgc2F3IHRoZSBjYW1wIHdoZXJlIHRoZSBDaWxpY2lhbnMgaGFkIGJlZW4ga2VlcGluZyBndWFyZC4gVGhlbmNlIGhlIGRlc2NlbmRlZCB0byBhIGxhcmdlIGFuZCBiZWF1dGlmdWwgcGxhaW4sIHdlbGwtd2F0ZXJlZCBhbmQgZnVsbCBvZiB0cmVlcyBvZiBhbGwgc29ydHMgYW5kIHZpbmVzOyBpdCBwcm9kdWNlcyBhbiBhYnVuZGFuY2Ugb2Ygc2VzYW1lLCBtaWxsZXQsIHBhbmljLCB3aGVhdCwgYW5kIGJhcmxleSwgYW5kIGl0IGlzIHN1cnJvdW5kZWQgb24gZXZlcnkgc2lkZSwgZnJvbSBzZWEgdG8gc2VhLCBieSBhIGxvZnR5IGFuZCBmb3JtaWRhYmxlIHJhbmdlIG9mIG1vdW50YWlucy4KPC90cmFuc2xhdGlvbj4="
translation['1.2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciBkZXNjZW5kaW5nIGhlIG1hcmNoZWQgdGhyb3VnaCB0aGlzIHBsYWluIGZvdXIgc3RhZ2VzLCB0d2VudHktZml2ZSBwYXJhc2FuZ3MsIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVGFyc3VzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUYXJzdXMiPlRhcnN1czwvcGxhY2VOYW1lPiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGJpcnRoLXBsYWNlIG9mIHRoZSBhcG9zdGxlIFBhdWwuPC9ub3RlPiBhIGxhcmdlIGFuZCBwcm9zcGVyb3VzIGNpdHkgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI0NzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjQ3MCI+Q2lsaWNpYTwvcGxhY2VOYW1lPiwgd2hlcmUgdGhlIHBhbGFjZSBvZiBTeWVubmVzaXMsIHRoZSBraW5nIG9mIHRoZSBDaWxpY2lhbnMsIHdhcyBzaXR1YXRlZDsgYW5kIHRocm91Z2ggdGhlIG1pZGRsZSBvZiB0aGUgY2l0eSBmbG93cyBhIHJpdmVyIG5hbWVkIHRoZSBDeWRudXMsIHR3byBwbGV0aHJhIGluIHdpZHRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgaW5oYWJpdGFudHMgb2YgdGhpcyBjaXR5IGhhZCBhYmFuZG9uZWQgaXQgYW5kIGZsZWQsIHdpdGggU3llbm5lc2lzLCB0byBhIHN0cm9uZ2hvbGQgdXBvbiB0aGUgbW91bnRhaW5z4oCUYWxsIG9mIHRoZW0sIGF0IGxlYXN0LCBleGNlcHQgdGhlIHRhdmVybi1rZWVwZXJzOyBhbmQgdGhlcmUgcmVtYWluZWQgYWxzbyB0aG9zZSB3aG8gZHdlbHQgb24gdGhlIHNlYS1jb2FzdCwgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTb2xpIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTb2xpIj5Tb2xpPC9wbGFjZU5hbWU+IGFuZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjU0MiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNTQyIj5Jc3N1czwvcGxhY2VOYW1lPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+RmFtb3VzIGFzIHRoZSBzY2VuZSBvZiBvbmUgb2YgdGhlIG1vc3QgaW1wb3J0YW50IHZpY3RvcmllcyBvZiBBbGV4YW5kZXIgdGhlIEdyZWF0ICg8ZGF0ZSBhdXRobmFtZT0iLTMzMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTMzMyI+MzMzPC9kYXRlPiBCLkMuKS48L25vdGU+CjxkYXRlIGF1dGhuYW1lPSItMzMzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzMzIj4zMzM8L2RhdGU+IEIuQy4pLjwvdHJhbnNsYXRpb24+"
translation['1.2.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IEVweWF4YSwgdGhlIHdpZmUgb2YgU3llbm5lc2lzLCBoYWQgcmVhY2hlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRhcnN1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGFyc3VzIj5UYXJzdXM8L3BsYWNlTmFtZT4gZml2ZSBkYXlzIGFoZWFkIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIGJ1dCBpbiB0aGUgY291cnNlIG9mIGhlciBwYXNzYWdlIG92ZXIgdGhlIG1vdW50YWlucyB0byB0aGUgcGxhaW4gdHdvIGNvbXBhbmllcyBvZiBNZW5vbidzIGFybXk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDIwLCBhYm92ZS48L25vdGU+IGhhZCBiZWVuIGxvc3QuIFNvbWUgc2FpZCB0aGF0IHRoZXkgaGFkIGJlZW4gY3V0IHRvIHBpZWNlcyBieSB0aGUgQ2lsaWNpYW5zIHdoaWxlIGVuZ2FnZWQgaW4gYSBiaXQgb2YgcGx1bmRlcmluZzsgYW5vdGhlciBzdG9yeSB3YXMgdGhhdCB0aGV5IGhhZCBiZWVuIGxlZnQgYmVoaW5kLCBhbmQsIHVuYWJsZSB0byBmaW5kIHRoZSByZXN0IG9mIHRoZSBhcm15IG9yIHRoZSByb2FkcywgaGFkIHRodXMgd2FuZGVyZWQgYWJvdXQgYW5kIHBlcmlzaGVkOyBhdCBhbnkgcmF0ZSwgdGhleSBudW1iZXJlZCBhIGh1bmRyZWQgaG9wbGl0ZXMuCjwvdHJhbnNsYXRpb24+"
translation['1.2.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGUgcmVzdCBvZiBNZW5vbidzIHRyb29wcyByZWFjaGVkIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVGFyc3VzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUYXJzdXMiPlRhcnN1czwvcGxhY2VOYW1lPiwgaW4gdGhlaXIgYW5nZXIgb3ZlciB0aGUgbG9zcyBvZiB0aGVpciBjb21yYWRlcyB0aGV5IHBsdW5kZXJlZCB0aG9yb3VnaGx5LCBub3Qgb25seSB0aGUgY2l0eSwgYnV0IGFsc28gdGhlIHBhbGFjZSB0aGF0IHdhcyBpbiBpdC4gQXMgZm9yIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIGFmdGVyIGhlIGhhZCBtYXJjaGVkIGludG8gdGhlIGNpdHkgaGUgbW9yZSB0aGFuIG9uY2Ugc3VtbW9uZWQgU3llbm5lc2lzIHRvIGhpcyBwcmVzZW5jZTsgYnV0IFN5ZW5uZXNpcyBzYWlkIHRoYXQgaGUgaGFkIG5ldmVyIHlldCBwdXQgaGltc2VsZiBpbiB0aGUgaGFuZHMgb2YgYW55b25lIHdobyB3YXMgbW9yZSBwb3dlcmZ1bCB0aGFuIGhlIHdhcywgYW5kIGhlIHdvdWxkIG5vdCBub3cgcHV0IGhpbXNlbGYgaW4gdGhlIGhhbmRzIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gdW50aWwgaGlzIHdpZmUgaGFkIHdvbiBoaW0gb3ZlciBhbmQgaGUgaGFkIHJlY2VpdmVkIHBsZWRnZXMuCjwvdHJhbnNsYXRpb24+"
translation['1.2.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSB0d28gbWVuIGZpbmFsbHkgbWV0IG9uZSBhbm90aGVyLCBTeWVubmVzaXMgZ2F2ZSA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGEgbGFyZ2Ugc3VtIG9mIG1vbmV5IGZvciBoaXMgYXJteSwgd2hpbGUgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBnYXZlIGhpbSBnaWZ0cyB3aGljaCBhcmUgcmVnYXJkZWQgYXQgY291cnQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiBzdWNoIGdpZnRzIGFzIGNvdWxkIGJlIGJlc3Rvd2VkIG9ubHkgYnkgdGhlIFBlcnNpYW4ga2luZy4gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBpcyBhbHJlYWR5IGFzc3VtaW5nIHJveWFsIHByZXJvZ2F0aXZlcy48L25vdGU+IGFzIHRva2VucyBvZiBob25vdXLigJRhIGhvcnNlIHdpdGggYSBnb2xkLW1vdW50ZWQgYnJpZGxlLCBhIGdvbGQgbmVja2xhY2UgYW5kIGJyYWNlbGV0cywgYSBnb2xkIGRhZ2dlciBhbmQgYSBQZXJzaWFuIHJvYmXigJRwcm9taXNpbmcgaGltLCBmdXJ0aGVyLCB0aGF0IGhpcyBsYW5kIHNob3VsZCBub3QgYmUgcGx1bmRlcmVkIGFueSBtb3JlIGFuZCB0aGF0IHRoZXkgbWlnaHQgdGFrZSBiYWNrIHRoZSBzbGF2ZXMgdGhhdCBoYWQgYmVlbiBzZWl6ZWQgaW4gY2FzZSB0aGV5IHNob3VsZCBjaGFuY2UgdXBvbiB0aGVtIGFueXdoZXJlLgo8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGlzIGFscmVhZHkgYXNzdW1pbmcgcm95YWwgcHJlcm9nYXRpdmVzLjwvdHJhbnNsYXRpb24+"
translation['1.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFuZCBoaXMgYXJteSByZW1haW5lZCBoZXJlIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVGFyc3VzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUYXJzdXMiPlRhcnN1czwvcGxhY2VOYW1lPiB0d2VudHkgZGF5cywgZm9yIHRoZSBzb2xkaWVycyByZWZ1c2VkIHRvIGdvIGFueSBmYXJ0aGVyOyBmb3IgdGhleSBzdXNwZWN0ZWQgYnkgdGhpcyB0aW1lIHRoYXQgdGhleSB3ZXJlIGdvaW5nIGFnYWluc3QgdGhlIEtpbmcsIGFuZCB0aGV5IHNhaWQgdGhleSBoYWQgbm90IGJlZW4gaGlyZWQgZm9yIHRoYXQuIENsZWFyY2h1cyB3YXMgdGhlIGZpcnN0IHRvIHRyeSB0byBmb3JjZSBoaXMgbWVuIHRvIGdvIG9uLCBidXQgdGhleSBwZWx0ZWQgaGltIGFuZCBoaXMgcGFjay1hbmltYWxzIHdpdGggc3RvbmVzIGFzIG9mdGVuIGFzIHRoZXkgYmVnYW4gdG8gZ28gZm9yd2FyZC4KPC90cmFuc2xhdGlvbj4="
translation['1.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkF0IHRoYXQgdGltZSBDbGVhcmNodXMgbmFycm93bHkgZXNjYXBlZCBiZWluZyBzdG9uZWQgdG8gZGVhdGg7IGJ1dCBhZnRlcndhcmRzLCB3aGVuIGhlIHJlYWxpemVkIHRoYXQgaGUgY291bGQgbm90IGFjY29tcGxpc2ggYW55dGhpbmcgYnkgZm9yY2UsIGhlIGNhbGxlZCBhIG1lZXRpbmcgb2YgaGlzIG93biB0cm9vcHMuIEFuZCBmaXJzdCBoZSBzdG9vZCBhbmQgd2VwdCBmb3IgYSBsb25nIHRpbWUsIHdoaWxlIGhpcyBtZW4gd2F0Y2hlZCBoaW0gaW4gd29uZGVyIGFuZCB3ZXJlIHNpbGVudDsgdGhlbiBoZSBzcG9rZSBhcyBmb2xsb3dzOgo8L3RyYW5zbGF0aW9uPg=="
translation['1.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxGZWxsb3ctc29sZGllcnMsIGRvIG5vdCB3b25kZXIgdGhhdCBJIGFtIGRpc3RyZXNzZWQgYXQgdGhlIHByZXNlbnQgc2l0dWF0aW9uLiBGb3IgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBiZWNhbWUgbXkgZnJpZW5kIGFuZCBub3Qgb25seSBob25vdXJlZCBtZSwgYW4gZXhpbGUgZnJvbSBteSBmYXRoZXJsYW5kLCBpbiB2YXJpb3VzIHdheXMsIGJ1dCBnYXZlIG1lIHRlbiB0aG91c2FuZCBkYXJpY3MuIEFuZCBJLCByZWNlaXZpbmcgdGhpcyBtb25leSwgZGlkIG5vdCBsYXkgaXQgdXAgZm9yIG15IG93biBwZXJzb25hbCB1c2Ugb3Igc3F1YW5kZXIgaXQgaW4gcGxlYXN1cmUsIGJ1dCBJIHByb2NlZWRlZCB0byBleHBlbmQgaXQgb24geW91LgogICAgPC90cmFuc2xhdGlvbj4="
translation['1.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkZpcnN0IEkgd2VudCB0byB3YXIgd2l0aCB0aGUgVGhyYWNpYW5zLCBhbmQgZm9yIHRoZSBzYWtlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiBJIGluZmxpY3RlZCBwdW5pc2htZW50IHVwb24gdGhlbSB3aXRoIHlvdXIgYWlkLCBkcml2aW5nIHRoZW0gb3V0IG9mIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAxMjc4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDEyNzg5Ij5DaGVyc29uZXNlPC9wbGFjZU5hbWU+IHdoZW4gdGhleSB3YW50ZWQgdG8gZGVwcml2ZSB0aGUgR3JlZWtzIHdobyBkd2VsdCB0aGVyZSBvZiB0aGVpciBsYW5kLiBUaGVuIHdoZW4gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPicgc3VtbW9ucyBjYW1lLCBJIHRvb2sgeW91IHdpdGggbWUgYW5kIHNldCBvdXQsIGluIG9yZGVyIHRoYXQsIGlmIGhlIGhhZCBuZWVkIG9mIG1lLCBJIG1pZ2h0IGdpdmUgaGltIGFpZCBpbiByZXR1cm4gZm9yIHRoZSBiZW5lZml0cyBJIGhhZCByZWNlaXZlZCBmcm9tIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['1.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB5b3Ugbm93IGRvIG5vdCB3aXNoIHRvIGNvbnRpbnVlIHRoZSBtYXJjaCB3aXRoIG1lOyBzbyBpdCBzZWVtcyB0aGF0IEkgbXVzdCBlaXRoZXIgZGVzZXJ0IHlvdSBhbmQgY29udGludWUgdG8gZW5qb3kgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPicgZnJpZW5kc2hpcCwgb3IgcHJvdmUgZmFsc2UgdG8gaGltIGFuZCByZW1haW4gd2l0aCB5b3UuIFdoZXRoZXIgSSBzaGFsbCBiZSBkb2luZyB3aGF0IGlzIHJpZ2h0LCBJIGtub3cgbm90LCBidXQgYXQgYW55IHJhdGUgSSBzaGFsbCBjaG9vc2UgeW91IGFuZCB3aXRoIHlvdSBzaGFsbCBzdWZmZXIgd2hhdGV2ZXIgSSBtdXN0LiBBbmQgbmV2ZXIgc2hhbGwgYW55IG1hbiBzYXkgdGhhdCBJLCBhZnRlciBsZWFkaW5nIEdyZWVrcyBpbnRvIHRoZSBsYW5kIG9mIHRoZSBiYXJiYXJpYW5zLCBiZXRyYXllZCB0aGUgR3JlZWtzIGFuZCBjaG9zZSB0aGUgZnJpZW5kc2hpcCBvZiB0aGUgYmFyYmFyaWFuczsKPC90cmFuc2xhdGlvbj4="
translation['1.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPm5heSwgc2luY2UgeW91IGRvIG5vdCBjYXJlIHRvIG9iZXkgbWUsIEkgc2hhbGwgZm9sbG93IHdpdGggeW91IGFuZCBzdWZmZXIgd2hhdGV2ZXIgSSBtdXN0LiBGb3IgSSBjb25zaWRlciB0aGF0IHlvdSBhcmUgdG8gbWUgYm90aCBmYXRoZXJsYW5kIGFuZCBmcmllbmRzIGFuZCBhbGxpZXM7IHdpdGggeW91IEkgdGhpbmsgSSBzaGFsbCBiZSBob25vdXJlZCB3aGVyZXZlciBJIG1heSBiZSwgYmVyZWZ0IG9mIHlvdSBJIGRvIG5vdCB0aGluayBJIHNoYWxsIGJlIGFibGUgZWl0aGVyIHRvIGFpZCBhIGZyaWVuZCBvciB0byB3YXJkIG9mZiBhIGZvZS4gQmUgc3VyZSwgdGhlcmVmb3JlLCB0aGF0IHdoZXJldmVyIHlvdSBnbywgSSBzaGFsbCBnbyBhbHNvLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['1.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoIHdlcmUgaGlzIHdvcmRzLiBBbmQgdGhlIHNvbGRpZXJz4oCUbm90IG9ubHkgaGlzIG93biBtZW4sIGJ1dCB0aGUgcmVzdCBhbHNv4oCUd2hlbiB0aGV5IGhlYXJkIHRoYXQgaGUgc2FpZCBoZSB3b3VsZCBub3QgZ28gb24gdG8gdGhlIEtpbmcncyBjYXBpdGFsLCBjb21tZW5kZWQgaGltOyBhbmQgbW9yZSB0aGFuIHR3byB0aG91c2FuZCBvZiB0aGUgdHJvb3BzIHVuZGVyIFhlbmlhcyBhbmQgUGFzaW9uIHRvb2sgdGhlaXIgYXJtcyBhbmQgdGhlaXIgYmFnZ2FnZSB0cmFpbiBhbmQgZW5jYW1wZWQgd2l0aCBDbGVhcmNodXMuCjwvdHJhbnNsYXRpb24+"
translation['1.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+LCBwZXJwbGV4ZWQgYW5kIGRpc3RyZXNzZWQgYnkgdGhpcyBzaXR1YXRpb24sIHNlbnQgcmVwZWF0ZWRseSBmb3IgQ2xlYXJjaHVzLiBDbGVhcmNodXMgcmVmdXNlZCB0byBnbyB0byBoaW0sIGJ1dCB3aXRob3V0IHRoZSBrbm93bGVkZ2Ugb2YgdGhlIHNvbGRpZXJzIGhlIHNlbnQgYSBtZXNzZW5nZXIgYW5kIHRvbGQgaGltIG5vdCB0byBiZSBkaXNjb3VyYWdlZCwgYmVjYXVzZSwgaGUgc2FpZCwgdGhpcyBtYXR0ZXIgd291bGQgYmUgc2V0dGxlZCBpbiB0aGUgcmlnaHQgd2F5LiBIZSBkaXJlY3RlZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+LCBob3dldmVyLCB0byBrZWVwIG9uIHNlbmRpbmcgZm9yIGhpbSwgdGhvdWdoIGhlIGhpbXNlbGYsIGhlIHNhaWQsIHdvdWxkIHJlZnVzZSB0byBnby4KPC90cmFuc2xhdGlvbj4="
translation['1.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIENsZWFyY2h1cyBnYXRoZXJlZCB0b2dldGhlciBoaXMgb3duIHNvbGRpZXJzLCB0aG9zZSB3aG8gaGFkIGNvbWUgb3ZlciB0byBoaW0sIGFuZCBhbnkgb3RoZXJzIHdobyB3YW50ZWQgdG8gYmUgcHJlc2VudCwgYW5kIHNwb2tlIGFzIGZvbGxvd3M6IOKAnEZlbGxvdy1zb2xkaWVycywgaXQgaXMgY2xlYXIgdGhhdCB0aGUgcmVsYXRpb24gb2YgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiB0byB1cyBpcyBwcmVjaXNlbHkgdGhlIHNhbWUgYXMgb3VycyB0byBoaW07IHRoYXQgaXMsIHdlIGFyZSBubyBsb25nZXIgaGlzIHNvbGRpZXJzLCBzaW5jZSB3ZSBkZWNsaW5lIHRvIGZvbGxvdyBoaW0sIGFuZCBsaWtld2lzZSBoZSBpcyBubyBsb25nZXIgb3VyIHBheW1hc3Rlci4KPC90cmFuc2xhdGlvbj4="
translation['1.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5JIGtub3csIGhvd2V2ZXIsIHRoYXQgaGUgY29uc2lkZXJzIGhpbXNlbGYgd3JvbmdlZCBieSB1cy4gVGhlcmVmb3JlLCBhbHRob3VnaCBoZSBrZWVwcyBzZW5kaW5nIGZvciBtZSwgSSBkZWNsaW5lIHRvIGdvLCBjaGllZmx5LCBpdCBpcyB0cnVlLCBmcm9tIGEgZmVlbGluZyBvZiBzaGFtZSwgYmVjYXVzZSBJIGFtIGNvbnNjaW91cyB0aGF0IEkgaGF2ZSBwcm92ZWQgdXR0ZXJseSBmYWxzZSB0byBoaW0sIGJ1dCwgYmVzaWRlcyB0aGF0LCBmcm9tIGZlYXIgdGhhdCBoZSBtYXkgc2VpemUgbWUgYW5kIGluZmxpY3QgcHVuaXNobWVudCB1cG9uIG1lIGZvciB0aGUgd3JvbmdzIGhlIHRoaW5rcyBoZSBoYXMgc3VmZmVyZWQgYXQgbXkgaGFuZHMuCjwvdHJhbnNsYXRpb24+"
translation['1.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5JbiBteSBvcGluaW9uLCB0aGVyZWZvcmUsIGl0IGlzIG5vIHRpbWUgZm9yIHVzIHRvIGJlIHNsZWVwaW5nIG9yIHVuY29uY2VybmVkIGFib3V0IG91cnNlbHZlczsgd2Ugc2hvdWxkIHJhdGhlciBiZSBjb25zaWRlcmluZyB3aGF0IGNvdXJzZSB3ZSBvdWdodCB0byBmb2xsb3cgdW5kZXIgdGhlIHByZXNlbnQgY2lyY3Vtc3RhbmNlcy4gQW5kIHNvIGxvbmcgYXMgd2UgcmVtYWluIGhlcmUgd2UgbXVzdCBjb25zaWRlciwgSSB0aGluaywgaG93IHdlIGNhbiByZW1haW4gbW9zdCBzYWZlbHk7IG9yLCBhZ2FpbiwgaWYgd2UgY291bnQgaXQgYmVzdCB0byBkZXBhcnQgYXQgb25jZSwgaG93IHdlIGFyZSB0byBkZXBhcnQgbW9zdCBzYWZlbHkgYW5kIGhvdyB3ZSBzaGFsbCBzZWN1cmUgcHJvdmlzaW9uc+KAlGZvciB3aXRob3V0IHByb3Zpc2lvbnMgbmVpdGhlciBnZW5lcmFsIG5vciBwcml2YXRlIGlzIG9mIGFueSB1c2UuCjwvdHJhbnNsYXRpb24+"
translation['1.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgcmVtZW1iZXIgdGhhdCB3aGlsZSB0aGlzIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gaXMgYSB2YWx1YWJsZSBmcmllbmQgd2hlbiBoZSBpcyB5b3VyIGZyaWVuZCwgaGUgaXMgYSBtb3N0IGRhbmdlcm91cyBmb2Ugd2hlbiBoZSBpcyB5b3VyIGVuZW15OyBmdXJ0aGVybW9yZSwgaGUgaGFzIGFuIGFybWFtZW504oCUaW5mYW50cnkgYW5kIGNhdmFscnkgYW5kIGZsZWV04oCUd2hpY2ggd2UgYWxsIGFsaWtlIHNlZSBhbmQga25vdyBhYm91dDsgZm9yIEkgdGFrZSBpdCB0aGF0IG91ciBjYW1wIGlzIG5vdCB2ZXJ5IGZhciBhd2F5IGZyb20gaGltLiBJdCBpcyB0aW1lLCB0aGVuLCB0byBwcm9wb3NlIHdoYXRldmVyIHBsYW4gYW55IG9uZSBvZiB5b3UgZGVlbXMgYmVzdC7igJ0gV2l0aCB0aGVzZSB3b3JkcyBoZSBjZWFzZWQgc3BlYWtpbmcuCjwvdHJhbnNsYXRpb24+"
translation['1.3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmV1cG9uIHZhcmlvdXMgc3BlYWtlcnMgYXJvc2UsIHNvbWUgb2YgdGhlaXIgb3duIGFjY29yZCB0byBleHByZXNzIHRoZSBvcGluaW9ucyB0aGV5IGhlbGQsIGJ1dCBvdGhlcnMgYXQgdGhlIGluc3RpZ2F0aW9uIG9mIENsZWFyY2h1cyB0byBtYWtlIGNsZWFyIHRoZSBkaWZmaWN1bHR5IG9mIGVpdGhlciByZW1haW5pbmcgb3IgZGVwYXJ0aW5nIHdpdGhvdXQgdGhlIGNvbnNlbnQgb2YgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['1.3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5PbmUgbWFuIGluIHBhcnRpY3VsYXIsIHByZXRlbmRpbmcgdG8gYmUgaW4gYSBodXJyeSB0byBwcm9jZWVkIGJhY2sgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IHdpdGggYWxsIHNwZWVkLCBwcm9wb3NlZCB0aGF0IHRoZXkgc2hvdWxkIGNob29zZSBvdGhlciBnZW5lcmFscyBhcyBxdWlja2x5IGFzIHBvc3NpYmxlLCBpbiBjYXNlIENsZWFyY2h1cyBkaWQgbm90IHdpc2ggdG8gbGVhZCB0aGVtIGJhY2s7IHNlY29uZGx5LCB0aGF0IHRoZXkgc2hvdWxkIGJ1eSBwcm92aXNpb25z4oCUdGhlIG1hcmtldCB3YXMgaW4gdGhlIGJhcmJhcmlhbiBhcm15IeKAlGFuZCBwYWNrIHVwIHRoZWlyIGJhZ2dhZ2U7IHRoZW4sIHRvIGdvIHRvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gYW5kIGFzayBmb3IgdmVzc2VscyB0byBzYWlsIGF3YXkgaW47IGFuZCBpZiBoZSB3b3VsZCBub3QgZ2l2ZSB0aGVtIHZlc3NlbHMsIHRvIGFzayBoaW0gZm9yIGEgZ3VpZGUgdG8gbGVhZCB0aGVtIGhvbWV3YXJkIHRocm91Z2ggYSBjb3VudHJ5IHRoYXQgd2FzIGZyaWVuZGx5OyBhbmQgaWYgaGUgd291bGQgbm90IGdpdmUgdGhlbSBhIGd1aWRlLCBlaXRoZXIsIHRvIGZvcm0gaW4gbGluZSBvZiBiYXR0bGUgd2l0aCBhbGwgc3BlZWQgYW5kIGxpa2V3aXNlIHRvIHNlbmQgYSBmb3JjZSB0byBvY2N1cHkgdGhlIG1vdW50YWluIGhlaWdodHMgaW4gYWR2YW5jZSwgaW4gb3JkZXIgdGhhdCBuZWl0aGVyIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gbm9yIHRoZSBDaWxpY2lhbnMgc2hvdWxkIGZvcmVzdGFsbCB0aGVt4oCU4oCcYW5kIHdlIGhhdmUgaW4gb3VyIHBvc3Nlc3Npb24s4oCdIGhlIHNhaWQsIOKAnG1hbnkgb2YgdGhlc2UgQ2lsaWNpYW5zIGFuZCBtdWNoIG9mIHRoZWlyIHByb3BlcnR5IHRoYXQgd2UgaGF2ZSBzZWl6ZWQgYXMgcGx1bmRlci7igJ0gU3VjaCB3ZXJlIHRoZSB3b3JkcyBvZiB0aGlzIHNwZWFrZXIuCjwvdHJhbnNsYXRpb24+"
translation['1.3.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgaGltIENsZWFyY2h1cyBzYWlkIG1lcmVseSB0aGlzOiDigJxMZXQgbm8gb25lIGFtb25nIHlvdSBzcGVhayBvZiBtZSBhcyB0aGUgbWFuIHdobyBpcyB0byBob2xkIHRoaXMgY29tbWFuZCwgZm9yIEkgc2VlIG1hbnkgcmVhc29ucyB3aHkgSSBzaG91bGQgbm90IGRvIHNvOyBzYXkgcmF0aGVyIHRoYXQgSSBzaGFsbCBvYmV5IHRvIHRoZSBiZXN0IG9mIG15IGFiaWxpdHkgdGhlIG1hbiB3aG9tIHlvdSBjaG9vc2UsIGluIG9yZGVyIHRoYXQgeW91IG1heSBrbm93IHRoYXQgSSB1bmRlcnN0YW5kIGFzIHdlbGwgYXMgYW55IG90aGVyIHBlcnNvbiBpbiB0aGUgd29ybGQgaG93IHRvIGJlIGEgc3Vib3JkaW5hdGUgYWxzby7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciBoZSBoYWQgc3Bva2VuIGFub3RoZXIgbWFuIGFyb3NlIHRvIHBvaW50IG91dCB0aGUgZm9vbGlzaG5lc3Mgb2YgdGhlIHNwZWFrZXIgd2hvIGhhZCB1cmdlZCB0aGVtIHRvIGFzayBmb3IgdmVzc2VscywganVzdCBhcyBpZiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHdlcmUgZ29pbmcgaG9tZSBhZ2FpbiwgYW5kIHRvIHBvaW50IG91dCBhbHNvIGhvdyBmb29saXNoIGl0IHdhcyB0byBhc2sgZm9yIGEgZ3VpZGUg4oCcZnJvbSB0aGlzIG1hbiB3aG9zZSBlbnRlcnByaXNlIHdlIGFyZSBydWluaW5nLiBJbmRlZWQsIGlmIHdlIHByb3Bvc2UgdG8gdHJ1c3QgdGhlIGd1aWRlIHRoYXQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBnaXZlcyB1cywgd2hhdCBpcyB0byBoaW5kZXIgdXMgZnJvbSBkaXJlY3RpbmcgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBhbHNvIHRvIG9jY3VweSB0aGUgaGVpZ2h0cyBmb3IgdXMgaW4gYWR2YW5jZT8KPC90cmFuc2xhdGlvbj4="
translation['1.3.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgbXkgcGFydCwgSSBzaG91bGQgaGVzaXRhdGUgdG8gZW1iYXJrIG9uIHRoZSB2ZXNzZWxzIHRoYXQgaGUgbWlnaHQgZ2l2ZSB1cywgZm9yIGZlYXIgb2YgaGlzIHNpbmtpbmcgdXMgd2l0aCBoaXMgd2FyLXNoaXBzLCBhbmQgSSBzaG91bGQgYmUgYWZyYWlkIHRvIGZvbGxvdyB0aGUgZ3VpZGUgdGhhdCBoZSBtaWdodCBnaXZlLCBmb3IgZmVhciBvZiBoaXMgbGVhZGluZyB1cyB0byBhIHBsYWNlIGZyb20gd2hpY2ggaXQgd2lsbCBub3QgYmUgcG9zc2libGUgdG8gZXNjYXBlOyBteSBjaG9pY2Ugd291bGQgYmUsIGluIGdvaW5nIG9mZiB3aXRob3V0IDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4nIGNvbnNlbnQsIHRvIGdvIG9mZiB3aXRob3V0IGhpcyBrbm93bGVkZ2XigJRhbmQgdGhhdCBpcyBub3QgcG9zc2libGUuCjwvdHJhbnNsYXRpb24+"
translation['1.3.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaW4gbXkgb3duIG9waW5pb24gdGhlIHBsYW5zIGp1c3QgcHJvcG9zZWQgYXJlIG5vbnNlbnNlOyByYXRoZXIsIEkgdGhpbmsgd2Ugc2hvdWxkIHNlbmQgdG8gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBtZW4gb2YgdGhlIHByb3BlciBzb3J0LCBhbG9uZyB3aXRoIENsZWFyY2h1cywgdG8gYXNrIGhpbSB3aGF0IHVzZSBoZSB3aXNoZXMgdG8gbWFrZSBvZiB1czsgYW5kIGlmIGhpcyBlbnRlcnByaXNlIGlzIGxpa2UgdGhlIHNvcnQgb2Ygb25lIGluIHdoaWNoIGhlIGVtcGxveWVkIG1lcmNlbmFyaWVzIGJlZm9yZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QXMgZGVzY3JpYmVkIGluIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4xLjIiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4xLjI8L2JpYmw+Ljwvbm90ZT4gSSB0aGluayB0aGF0IHdlIGFsc28gc2hvdWxkIGZvbGxvdyBoaW0gYW5kIG5vdCBiZSBtb3JlIGNvd2FyZGx5IHRoYW4gdGhvc2Ugd2hvIHdlbnQgdXAgd2l0aCBoaW0gb24gdGhlIGZvcm1lciBvY2Nhc2lvbjsKPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjEuMiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjEuMjwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['1.3.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5pZiwgaG93ZXZlciwgaGlzIGVudGVycHJpc2UgaXMgZm91bmQgdG8gYmUgZ3JlYXRlciBhbmQgbW9yZSBsYWJvcmlvdXMgYW5kIG1vcmUgZGFuZ2Vyb3VzIHRoYW4gdGhlIGZvcm1lciBvbmUsIHdlIG91Z2h0IHRvIGRlbWFuZCB0aGF0IGhlIHNob3VsZCBlaXRoZXIgb2ZmZXIgc3VmZmljaWVudCBwZXJzdWFzaW9uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gaW4gdGhlIGZvcm0gb2YgZXh0cmEgcGF5Ljwvbm90ZT4gYW5kIGxlYWQgdXMgb24gd2l0aCBoaW0sIG9yIHlpZWxkIHRvIG91ciBwZXJzdWFzaW9uIGFuZCBsZXQgdXMgZ28gaG9tZSBpbiBmcmllbmRzaGlwOyBmb3IgaW4gdGhpcyB3YXksIGlmIHdlIHNob3VsZCBmb2xsb3cgaGltLCB3ZSBzaG91bGQgZm9sbG93IGFzIGZyaWVuZHMgYW5kIHplYWxvdXMgc3VwcG9ydGVycywgYW5kIGlmIHdlIHNob3VsZCBnbyBiYWNrLCB3ZSBzaG91bGQgZ28gYmFjayBpbiBzYWZldHkuIEkgcHJvcG9zZSwgZnVydGhlciwgdGhhdCBvdXIgcmVwcmVzZW50YXRpdmVzIHNob3VsZCByZXBvcnQgYmFjayB0byB1cyB3aGF0ZXZlciByZXBseSBoZSBtYXkgbWFrZSwgYW5kIHRoYXQgd2UgYWZ0ZXIgaGVhcmluZyBpdCBzaG91bGQgZGVsaWJlcmF0ZSBhYm91dCB0aGUgbWF0dGVyLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['1.3.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhpcyBwbGFuIHdhcyBhZG9wdGVkLCBhbmQgdGhleSBjaG9zZSByZXByZXNlbnRhdGl2ZXMgYW5kIHNlbnQgdGhlbSB3aXRoIENsZWFyY2h1czsgYW5kIHRoZXkgcHJvY2VlZGVkIHRvIHB1dCB0byA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHRoZSBxdWVzdGlvbnMgcmVzb2x2ZWQgdXBvbiBieSB0aGUgYXJteS4gSGUgcmVwbGllZCB0aGF0IGhlIGhhZCBoZWFyZCB0aGF0IEFicm9jb21hcywgYSBmb2Ugb2YgaGlzLCB3YXMgYXQgdGhlIEV1cGhyYXRlcyByaXZlciwgdHdlbHZlIHN0YWdlcyBkaXN0YW50LiBJdCB3YXMgYWdhaW5zdCBoaW0sIHRoZXJlZm9yZSwgaGUgc2FpZCwgdGhhdCBoZSBkZXNpcmVkIHRvIG1hcmNoLiBBbmQgaWYgaGUgd2VyZSB0aGVyZSwgaGUgd2lzaGVkIHRvIGluZmxpY3QgZHVlIHB1bmlzaG1lbnQgdXBvbiBoaW07IOKAnGJ1dCBpZiBoZSBoYXMgZmxlZCzigJ0gaGUgY29udGludWVkLCDigJx3ZSB3aWxsIGRlbGliZXJhdGUgYWJvdXQgdGhlIG1hdHRlciB0aGVuIGFuZCB0aGVyZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.3.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIGhlYXJpbmcgdGhpcyByZXBseSB0aGUgZGVwdXRpZXMgcmVwb3J0ZWQgaXQgdG8gdGhlIHNvbGRpZXJzLCBhbmQgdGhleSwgd2hpbGUgc3VzcGVjdGluZyB0aGF0IDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gd2FzIGxlYWRpbmcgdGhlbSBhZ2FpbnN0IHRoZSBLaW5nLCBuZXZlcnRoZWxlc3MgdGhvdWdodCBpdCBiZXN0IHRvIGZvbGxvdyBoaW0uIFRoZXkgYXNrZWQsIGhvd2V2ZXIsIGZvciBtb3JlIHBheSwgYW5kIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gcHJvbWlzZWQgdG8gZ2l2ZSB0aGVtIGFsbCBoYWxmIGFzIG11Y2ggYWdhaW4gYXMgdGhleSBoYWQgYmVlbiByZWNlaXZpbmcgYmVmb3JlLCBuYW1lbHksIGEgZGFyaWMgYW5kIGEgaGFsZiBhIG1vbnRoIHRvIGVhY2ggbWFuIGluc3RlYWQgb2YgYSBkYXJpYzsgYnV0IGFzIHJlZ2FyZHMgdGhlIHN1c3BpY2lvbiB0aGF0IGhlIHdhcyBsZWFkaW5nIHRoZW0gYWdhaW5zdCB0aGUgS2luZywgbm8gb25lIGhlYXJkIGl0IGV4cHJlc3NlZCBldmVuIHRoZW7igJRhdCBhbnkgcmF0ZSwgbm90IG9wZW5seS4KPC90cmFuc2xhdGlvbj4="
translation['1.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuY2UgaGUgbWFyY2hlZCB0d28gc3RhZ2VzLCB0ZW4gcGFyYXNhbmdzLCB0byB0aGUgUHNhcnVzIHJpdmVyLCB0aGUgd2lkdGggb2Ygd2hpY2ggd2FzIHRocmVlIHBsZXRocmEuIEZyb20gdGhlcmUgaGUgbWFyY2hlZCBvbmUgc3RhZ2UsIGZpdmUgcGFyYXNhbmdzLCB0byB0aGUgUHlyYW11cyByaXZlciwgdGhlIHdpZHRoIG9mIHdoaWNoIHdhcyBhIHN0YWRpdW0uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBzdGFkaXVtID0gNTgyIDEvMiBFbmdsaXNoIGZlZXQuPC9ub3RlPiBGcm9tIHRoZXJlIGhlIG1hcmNoZWQgdHdvIHN0YWdlcywgZmlmdGVlbiBwYXJhc2FuZ3MsIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNTQyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI1NDIiPklzc3VzPC9wbGFjZU5hbWU+LCB0aGUgbGFzdCBjaXR5IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNDcwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI0NzAiPkNpbGljaWE8L3BsYWNlTmFtZT4sIGEgcGxhY2Ugc2l0dWF0ZWQgb24gdGhlIHNlYSwgYW5kIGxhcmdlIGFuZCBwcm9zcGVyb3VzLgogICAgPC90cmFuc2xhdGlvbj4="
translation['1.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIHRoZXkgcmVtYWluZWQgdGhyZWUgZGF5czsgYW5kIHRoZSBzaGlwcyBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE3MDc2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTcwNzYiPlBlbG9wb25uZXN1czwvcGxhY2VOYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjIuMjEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4yLjIxPC9iaWJsPi48L25vdGU+IGFycml2ZWQgdG8gbWVldCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMi4yMSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjIuMjE8L2JpYmw+LjxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIHRoaXJ0eS1maXZlIGluIG51bWJlciwgd2l0aCBQeXRoYWdvcmFzIHRoZSBMYWNlZGFlbW9uaWFuIGFzIGFkbWlyYWwgaW4gY29tbWFuZCBvZiB0aGVtLiBUaGV5IGhhZCBiZWVuIGd1aWRlZCBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRXBoZXNvcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRXBoZXNvcyI+RXBoZXN1czwvcGxhY2VOYW1lPiB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjU0MiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNTQyIj5Jc3N1czwvcGxhY2VOYW1lPiBieSBUYW1vcyB0aGUgRWd5cHRpYW4sIHdobyB3YXMgYXQgdGhlIGhlYWQgb2YgYW5vdGhlciBmbGVldCBvZiB0d2VudHktZml2ZSBzaGlwcyBiZWxvbmdpbmcgdG8gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPuKAlHRoZXNlIGxhdHRlciBiZWluZyB0aGUgc2hpcHMgd2l0aCB3aGljaCBUYW1vcyBoYWQgYmVzaWVnZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNaWxldHVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNaWxldHVzIj5NaWxldHVzPC9wbGFjZU5hbWU+LCBhdCB0aGUgdGltZSB3aGVuIGl0IHdhcyBmcmllbmRseSB0byBUaXNzYXBoZXJuZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMS43IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMS43PC9iaWJsPi48L25vdGU+IGFuZCBoYWQgc3VwcG9ydGVkIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4xLjciIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4xLjc8L2JpYmw+LjxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gaW4gaGlzIHdhciB1cG9uIFRpc3NhcGhlcm5lcy4KPC90cmFuc2xhdGlvbj4="
translation['1.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkNoZWlyaXNvcGh1cyB0aGUgTGFjZWRhZW1vbmlhbiBhbHNvIGFycml2ZWQgd2l0aCB0aGlzIGZsZWV0LCBjb21pbmcgaW4gcmVzcG9uc2UgdG8gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPicgc3VtbW9ucyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIG5vdGUgb24gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjIuMjEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4yLjIxPC9iaWJsPi4gVGhlc2Ugc2V2ZW4gaHVuZHJlZCBob3BsaXRlcyB1bmRlciBDaGVpcmlzb3BodXMgaGFkIGJlZW4gc2VudCBieSB0aGUgTGFjZWRhZW1vbmlhbiBhdXRob3JpdGllcyB0byBhaWQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiwgYW5kIHdlcmUgdGhlIG9ubHkgdHJvb3BzIGluIGhpcyBhcm15IHdoaWNoIHN0b29kIGluIGFueSBvZmZpY2lhbCBjb25uZWN0aW9uIHdpdGggYW55IEdyZWVrIHN0YXRlLjwvbm90ZT4gdG9nZXRoZXIgd2l0aCBzZXZlbiBodW5kcmVkIGhvcGxpdGVzLCBvdmVyIHdob20gaGUgY29udGludWVkIHRvIGhvbGQgY29tbWFuZCBpbiB0aGUgYXJteSBvZiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMi4yMSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjIuMjE8L2JpYmw+LiBUaGVzZSBzZXZlbiBodW5kcmVkIGhvcGxpdGVzIHVuZGVyIENoZWlyaXNvcGh1cyBoYWQgYmVlbiBzZW50IGJ5IHRoZSBMYWNlZGFlbW9uaWFuIGF1dGhvcml0aWVzIHRvIGFpZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+LCBhbmQgd2VyZSB0aGUgb25seSB0cm9vcHMgaW4gaGlzIGFybXkgd2hpY2ggc3Rvb2QgaW4gYW55IG9mZmljaWFsIGNvbm5lY3Rpb24gd2l0aCBhbnkgR3JlZWsgc3RhdGUuPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPi4gQW5kIHRoZSBzaGlwcyBsYXkgYXQgYW5jaG9yIGFsb25nc2lkZSA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+JyB0ZW50LiBJdCB3YXMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI1NDIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjU0MiI+SXNzdXM8L3BsYWNlTmFtZT4gYWxzbyB0aGF0IHRoZSBHcmVlayBtZXJjZW5hcmllcyB3aG8gaGFkIGJlZW4gaW4gdGhlIHNlcnZpY2Ugb2YgQWJyb2NvbWFz4oCUZm91ciBodW5kcmVkIGhvcGxpdGVz4oCUam9pbmVkIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIGFmdGVyIGRlc2VydGluZyBBYnJvY29tYXMsIGFuZCBzbyBib3JlIGEgc2hhcmUgaW4gaGlzIGV4cGVkaXRpb24gYWdhaW5zdCB0aGUgS2luZy4KPC90cmFuc2xhdGlvbj4="
translation['1.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuY2UgaGUgbWFyY2hlZCBvbmUgc3RhZ2UsIGZpdmUgcGFyYXNhbmdzLCB0byB0aGUgR2F0ZXMgYmV0d2VlbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjQ3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNDcwIj5DaWxpY2lhPC9wbGFjZU5hbWU+IGFuZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDE0MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMTQwIj5TeXJpYTwvcGxhY2VOYW1lPi4gVGhlc2UgR2F0ZXMgY29uc2lzdGVkIG9mIHR3byB3YWxsczsgdGhlIG9uZSBvbiB0aGUgaGl0aGVyLCBvciBDaWxpY2lhbiwgc2lkZSB3YXMgaGVsZCBieSBTeWVubmVzaXMgYW5kIGEgZ2Fycmlzb24gb2YgQ2lsaWNpYW5zLCB3aGlsZSB0aGUgb25lIG9uIHRoZSBmYXJ0aGVyLCB0aGUgU3lyaWFuLCBzaWRlIHdhcyByZXBvcnRlZCB0byBiZSBndWFyZGVkIGJ5IGEgZ2Fycmlzb24gb2YgdGhlIEtpbmcncyB0cm9vcHMuIEFuZCBpbiB0aGUgc3BhY2UgYmV0d2VlbiB0aGVzZSB3YWxscyBmbG93cyBhIHJpdmVyIG5hbWVkIHRoZSBDYXJzdXMsIGEgcGxldGhydW0gaW4gd2lkdGguIFRoZSBlbnRpcmUgZGlzdGFuY2UgZnJvbSBvbmUgd2FsbCB0byB0aGUgb3RoZXIgd2FzIHRocmVlIHN0YWRpYTsgYW5kIGl0IHdhcyBub3QgcG9zc2libGUgdG8gZWZmZWN0IGEgcGFzc2FnZSBieSBmb3JjZSwgZm9yIHRoZSBwYXNzIHdhcyBuYXJyb3csIHRoZSB3YWxscyByZWFjaGVkIGRvd24gdG8gdGhlIHNlYSwgYW5kIGFib3ZlIHRoZSBwYXNzIHdlcmUgcHJlY2lwaXRvdXMgcm9ja3MsIHdoaWxlLCBiZXNpZGVzLCB0aGVyZSB3ZXJlIHRvd2VycyB1cG9uIGJvdGggdGhlIHdhbGxzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkl0IHdhcyBiZWNhdXNlIG9mIHRoaXMgcGFzcyB0aGF0IDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gaGFkIHNlbnQgZm9yIHRoZSBmbGVldCwgaW4gb3JkZXIgdGhhdCBoZSBtaWdodCBkaXNlbWJhcmsgaG9wbGl0ZXMgYmV0d2VlbiBhbmQgYmV5b25kIHRoZSB3YWxscyBhbmQgdGh1cyBvdmVycG93ZXIgdGhlIGVuZW15IGlmIHRoZXkgc2hvdWxkIGJlIGtlZXBpbmcgZ3VhcmQgYXQgdGhlIFN5cmlhbiBHYXRlc+KAlGFuZCB0aGF0IHdhcyBwcmVjaXNlbHkgd2hhdCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHN1cHBvc2VkIEFicm9jb21hcyB3b3VsZCBkbywgZm9yIGhlIGhhZCBhIGxhcmdlIGFybXkuIEFicm9jb21hcywgaG93ZXZlciwgZGlkIG5vdCBkbyBzbywgYnV0IGFzIHNvb24gYXMgaGUgaGVhcmQgdGhhdCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHdhcyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjQ3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNDcwIj5DaWxpY2lhPC9wbGFjZU5hbWU+LCBoZSB0dXJuZWQgYWJvdXQgaW4gaGlzIGpvdXJuZXkgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwNDY4NyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDA0Njg3Ij5QaG9lbmljaWE8L3BsYWNlTmFtZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+T2Ygd2hpY2ggQWJyb2NvbWFzIHdhcyBzYXRyYXAuPC9ub3RlPiBhbmQgbWFyY2hlZCBvZmYgdG8gam9pbiB0aGUgS2luZywgd2l0aCBhbiBhcm15LCBzbyB0aGUgcmVwb3J0IHJhbiwgb2YgdGhyZWUgaHVuZHJlZCB0aG91c2FuZCBtZW4uCjwvdHJhbnNsYXRpb24+"
translation['1.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuY2UgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBtYXJjaGVkIG9uZSBzdGFnZSwgZml2ZSBwYXJhc2FuZ3MsIHRvIE15cmlhbmR1cywgYSBjaXR5IG9uIHRoZSBzZWEgY29hc3QsIGluaGFiaXRlZCBieSBQaG9lbmljaWFuczsgaXQgd2FzIGEgdHJhZGluZyBwbGFjZSwgYW5kIG1hbnkgbWVyY2hhbnQgc2hpcHMgd2VyZSBseWluZyBhdCBhbmNob3IgdGhlcmUuIFRoZXJlIGhlIHJlbWFpbmVkIHNldmVuIGRheXM7CjwvdHJhbnNsYXRpb24+"
translation['1.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPmFuZCBYZW5pYXMgdGhlIEFyY2FkaWFuIGFuZCBQYXNpb24gdGhlIE1lZ2FyaWFuIGVtYmFya2VkIHVwb24gYSBzaGlwLCBwdXQgb24gYm9hcmQgdGhlaXIgbW9zdCB2YWx1YWJsZSBlZmZlY3RzLCBhbmQgc2FpbGVkIGF3YXk7IHRoZXkgd2VyZSBtb3ZlZCB0byBkbyB0aGlzLCBhcyBtb3N0IHBlb3BsZSB0aG91Z2h0LCBieSBhIGZlZWxpbmcgb2YgamVhbG91cyBwcmlkZSwgYmVjYXVzZSB0aGVpciBzb2xkaWVycyBoYWQgZ29uZSBvdmVyIHRvIENsZWFyY2h1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjMuNyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjMuNzwvYmlibD4uPC9ub3RlPiB3aXRoIHRoZSBpbnRlbnRpb24gb2YgZ29pbmcgYmFjayB0byA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMy43IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMy43PC9iaWJsPi48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gYWdhaW4gaW5zdGVhZCBvZiBwcm9jZWVkaW5nIGFnYWluc3QgdGhlIEtpbmcsIGFuZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGhhZCBhbGxvd2VkIENsZWFyY2h1cyB0byBrZWVwIHRoZW0uIEFmdGVyIHRoZXkgaGFkIGRpc2FwcGVhcmVkLCBhIHJlcG9ydCB3ZW50IHJvdW5kIHRoYXQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiB3YXMgcHVyc3VpbmcgdGhlbSB3aXRoIHdhcnNoaXBzOyBhbmQgd2hpbGUgc29tZSBwZW9wbGUgcHJheWVkIHRoYXQgdGhleSBtaWdodCBiZSBjYXB0dXJlZCwgYmVjYXVzZSwgYXMgdGhleSBzYWlkLCB0aGV5IHdlcmUgY293YXJkcywgeWV0IG90aGVycyBmZWx0IHBpdHkgZm9yIHRoZW0gaWYgdGhleSBzaG91bGQgYmUgY2F1Z2h0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+LCBob3dldmVyLCBjYWxsZWQgdGhlIGdlbmVyYWxzIHRvZ2V0aGVyIGFuZCBzYWlkOiDigJxYZW5pYXMgYW5kIFBhc2lvbiBoYXZlIGRlc2VydGVkIHVzLiBCdXQgbGV0IHRoZW0sIG5ldmVydGhlbGVzcywga25vdyBmdWxsIHdlbGwgdGhhdCB0aGV5IGhhdmUgbm90IGVzY2FwZWQgZnJvbSBtZeKAlGVpdGhlciBieSBzdGVhbHRoLCBmb3IgSSBrbm93IGluIHdoYXQgZGlyZWN0aW9uIHRoZXkgaGF2ZSBnb25lLCBvciBieSBzcGVlZCwgZm9yIEkgaGF2ZSBtZW4tb2Ytd2FyIHdpdGggd2hpY2ggSSBjYW4gb3ZlcnRha2UgdGhlaXIgY3JhZnQuIEJ1dCBmb3IgbXkgcGFydCwgSSBzd2VhciBieSB0aGUgZ29kcyB0aGF0IEkgc2hhbGwgbm90IHB1cnN1ZSB0aGVtLCBub3Igc2hhbGwgYW55b25lIHNheSBhYm91dCBtZSB0aGF0IEkgdXNlIGEgbWFuIHNvIGxvbmcgYXMgaGUgaXMgd2l0aCBtZSBhbmQgdGhlbiwgd2hlbiBoZSB3YW50cyB0byBsZWF2ZSBtZSwgc2VpemUgaGltIGFuZCBtYWx0cmVhdCBoaW0gYW5kIGRlc3BvaWwgaGltIG9mIGhpcyBwb3NzZXNzaW9ucy4gTmF5LCBsZXQgdGhlbSBnbywgd2l0aCB0aGUga25vd2xlZGdlIHRoYXQgdGhlaXIgYmVoYXZpb3VyIHRvd2FyZCB1cyBpcyB3b3JzZSB0aGFuIG91cnMgdG93YXJkIHRoZW0uIFRvIGJlIHN1cmUsIEkgaGF2ZSB0aGVpciB3aXZlcyBhbmQgY2hpbGRyZW4gdW5kZXIgZ3VhcmQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUcmFsbGVpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVHJhbGxlaXMiPlRyYWxsZXM8L3BsYWNlTmFtZT4sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgY2l0eSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjM1OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzU4Ij5DYXJpYTwvcGxhY2VOYW1lPi48L25vdGU+IGJ1dCBJIHNoYWxsIG5vdCBkZXByaXZlIHRoZW0gb2YgdGhlc2UsIGVpdGhlciwgZm9yIHRoZXkgc2hhbGwgcmVjZWl2ZSB0aGVtIGJhY2sgYmVjYXVzZSBvZiB0aGVpciBmb3JtZXIgZXhjZWxsZW5jZSBpbiBteSBzZXJ2aWNlLuKAnQo8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjM1OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzU4Ij5DYXJpYTwvcGxhY2VOYW1lPi48L3RyYW5zbGF0aW9uPg=="
translation['1.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlN1Y2ggd2VyZSBoaXMgd29yZHM7IGFzIGZvciB0aGUgR3JlZWtzLCBldmVuIHRob3NlIHdobyBoYWQgYmVlbiBzb21ld2hhdCBkZXNwb25kZW50IGluIHJlZ2FyZCB0byB0aGUgdXB3YXJkIG1hcmNoLCB3aGVuIHRoZXkgaGVhcmQgb2YgdGhlIG1hZ25hbmltaXR5IG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gdGhleSBjb250aW51ZWQgb24gdGhlaXIgd2F5IHdpdGggZ3JlYXRlciBzYXRpc2ZhY3Rpb24gYW5kIGVhZ2VybmVzcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IG1hcmNoZWQgZm91ciBzdGFnZXMsIHR3ZW50eSBwYXJhc2FuZ3MsIHRvIHRoZSBDaGFsdXMgcml2ZXIsIHdoaWNoIGlzIGEgcGxldGhydW0gaW4gd2lkdGggYW5kIGZ1bGwgb2YgbGFyZ2UsIHRhbWUgZmlzaDsgdGhlc2UgZmlzaCB0aGUgU3lyaWFucyByZWdhcmRlZCBhcyBnb2RzLCBhbmQgdGhleSB3b3VsZCBub3QgYWxsb3cgYW55b25lIHRvIGhhcm0gdGhlbSwgb3IgdGhlIGRvdmVzLCBlaXRoZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFjY29yZGluZyB0byB0aGUgbGVnZW5kLCB0aGUgU3lyaWFuIGdvZGRlc3MgRGVyY2V0byBoYWQgYmVlbiB0cmFuc2Zvcm1lZCBpbnRvIGEgZmlzaCwgYW5kIGhlciBkYXVnaHRlciwgU2VtaXJhbWlzLCBpbnRvIGEgZG92ZS48L25vdGU+IEFuZCB0aGUgdmlsbGFnZXMgaW4gd2hpY2ggdGhlIHRyb29wcyBlbmNhbXBlZCBiZWxvbmdlZCB0byBQYXJ5c2F0aXMsIGZvciB0aGV5IGhhZCBiZWVuIGdpdmVuIGhlciBmb3IgZ2lyZGxlLW1vbmV5Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gdGhlIEVuZ2xpc2gg4oCccGluLW1vbmV5LuKAnTwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['1.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Gcm9tIHRoZXJlIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gbWFyY2hlZCBmaXZlIHN0YWdlcywgdGhpcnR5IHBhcmFzYW5ncywgdG8gdGhlIHNvdXJjZXMgb2YgdGhlIERhcmRhcyByaXZlciwgdGhlIHdpZHRoIG9mIHdoaWNoIGlzIGEgcGxldGhydW0uIFRoZXJlIHdhcyB0aGUgcGFsYWNlIG9mIEJlbGVzeXMsIHRoZSBsYXRlIHJ1bGVyIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMTQwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAxNDAiPlN5cmlhPC9wbGFjZU5hbWU+LCBhbmQgYSB2ZXJ5IGxhcmdlIGFuZCBiZWF1dGlmdWwgcGFyayBjb250YWluaW5nIGFsbCB0aGUgcHJvZHVjdHMgb2YgdGhlIHNlYXNvbnMuIEJ1dCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGN1dCBkb3duIHRoZSBwYXJrIGFuZCBidXJuZWQgdGhlIHBhbGFjZS4KPC90cmFuc2xhdGlvbj4="
translation['1.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuY2UgaGUgbWFyY2hlZCB0aHJlZSBzdGFnZXMsIGZpZnRlZW4gcGFyYXNhbmdzLCB0byB0aGUgRXVwaHJhdGVzIHJpdmVyLCB0aGUgd2lkdGggb2Ygd2hpY2ggd2FzIGZvdXIgc3RhZGlhOyBhbmQgb24gdGhlIHJpdmVyIHdhcyBzaXR1YXRlZCBhIGxhcmdlIGFuZCBwcm9zcGVyb3VzIGNpdHkgbmFtZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDU5MTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwNTkxMSI+VGhhcHNhY3VzPC9wbGFjZU5hbWU+LiBUaGVyZSBoZSByZW1haW5lZCBmaXZlIGRheXMuIEFuZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHN1bW1vbmVkIHRoZSBnZW5lcmFscyBvZiB0aGUgR3JlZWtzIGFuZCB0b2xkIHRoZW0gdGhhdCB0aGUgbWFyY2ggd2FzIHRvIGJlIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjI2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2MjYiPkJhYnlsb248L3BsYWNlTmFtZT4sIGFnYWluc3QgdGhlIEdyZWF0IEtpbmc7IGhlIGRpcmVjdGVkIHRoZW0sIGFjY29yZGluZ2x5LCB0byBleHBsYWluIHRoaXMgdG8gdGhlIHNvbGRpZXJzIGFuZCB0cnkgdG8gcGVyc3VhZGUgdGhlbSB0byBmb2xsb3cuCjwvdHJhbnNsYXRpb24+"
translation['1.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGUgZ2VuZXJhbHMgY2FsbGVkIGFuIGFzc2VtYmx5IGFuZCBtYWRlIHRoaXMgYW5ub3VuY2VtZW50OyBhbmQgdGhlIHNvbGRpZXJzIHdlcmUgYW5ncnkgd2l0aCB0aGUgZ2VuZXJhbHMsIGFuZCBzYWlkIHRoYXQgdGhleSBoYWQga25vd24gYWJvdXQgdGhpcyBmb3IgYSBsb25nIHRpbWUsIGJ1dCBoYWQgYmVlbiBrZWVwaW5nIGl0IGZyb20gdGhlIHRyb29wczsgZnVydGhlcm1vcmUsIHRoZXkgcmVmdXNlZCB0byBnbyBvbiB1bmxlc3MgdGhleSB3ZXJlIGdpdmVuIG1vbmV5LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgdHJvb3BzIGFyZSBub3Qgbm93IGFza2luZyBmb3IgYWRkaXRpb25hbCBwYXksIGFzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVGFyc3VzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUYXJzdXMiPlRhcnN1czwvcGxhY2VOYW1lPiAoPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjMuMjEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4zLjIxPC9iaWJsPiksIGJ1dCBmb3IgYSBzcGVjaWFsIGRvbmF0aW9uLiBTZWUgYmVsb3cuPC9ub3RlPiBhcyB3ZXJlIHRoZSBtZW4gd2hvIG1hZGUgdGhlIGpvdXJuZXkgd2l0aCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRhcnN1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGFyc3VzIj5UYXJzdXM8L3BsYWNlTmFtZT4gKDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4zLjIxIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMy4yMTwvYmlibD4pLCBidXQgZm9yIGEgc3BlY2lhbCBkb25hdGlvbi4gU2VlIGJlbG93LjxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gYmVmb3JlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjEuMiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjEuMjwvYmlibD4uPC9ub3RlPiB3aGVuIGhlIHdlbnQgdG8gdmlzaXQgaGlzIGZhdGhlcjsgdGhleSBoYWQgcmVjZWl2ZWQgdGhlIGRvbmF0aW9uLCBldmVuIHRob3VnaCB0aGV5IG1hcmNoZWQsIG5vdCB0byBiYXR0bGUsIGJ1dCBtZXJlbHkgYmVjYXVzZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMS4yIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMS4yPC9iaWJsPi48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+JyBmYXRoZXIgc3VtbW9uZWQgaGltLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbGwgdGhlc2UgdGhpbmdzIHRoZSBnZW5lcmFscyByZXBvcnRlZCBiYWNrIHRvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIGFuZCBoZSBwcm9taXNlZCB0aGF0IGhlIHdvdWxkIGdpdmUgZXZlcnkgbWFuIGZpdmUgbWluYXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIEF0dGljIG1pbmEgd2FzIGVxdWl2YWxlbnQgKGJ1dCBzZWUgbm90ZSBvbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMS45IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMS45PC9iaWJsPikgdG8gYWJvdXQgIDMgMSA1cy4gb3IgJDE4LjAwOyA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHByb2JhYmx5IG1lYW5zIGhlcmUgdGhlIFBlcnNpYW4gbWluYSwgd2hpY2ggd2FzIHdvcnRoIGFib3V0IG9uZS1mb3VydGggbW9yZSB0aGFuIHRoZSBBdHRpYy48L25vdGU+IGluIHNpbHZlciB3aGVuIHRoZXkgcmVhY2hlZCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMS45IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMS45PC9iaWJsPikgdG8gYWJvdXQgIDMgMSA1cy4gb3IgJDE4LjAwOyA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHByb2JhYmx5IG1lYW5zIGhlcmUgdGhlIFBlcnNpYW4gbWluYSwgd2hpY2ggd2FzIHdvcnRoIGFib3V0IG9uZS1mb3VydGggbW9yZSB0aGFuIHRoZSBBdHRpYy48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjYyNiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjI2Ij5CYWJ5bG9uPC9wbGFjZU5hbWU+IGFuZCB0aGVpciBwYXkgaW4gZnVsbCB1bnRpbCBoZSBicm91Z2h0IHRoZSBHcmVla3MgYmFjayB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMjc2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAyNzY1Ij5Jb25pYTwvcGxhY2VOYW1lPiBhZ2Fpbi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+TWVyY2VuYXJpZXMgd2VyZSB1c3VhbGx5IGV4cGVjdGVkIHRvIG1ha2UgdGhlaXIgb3duIHdheSBob21lIGFmdGVyIGEgY2FtcGFpZ24gaGFkIGVuZGVkIGFuZCBkaWQgbm90IHJlY2VpdmUgcGF5IGZvciB0aGUgdGltZSBjb25zdW1lZCBieSB0aGUgaG9tZXdhcmQgam91cm5leS48L25vdGU+IEJ5IHRoZXNlIHByb21pc2VzIHRoZSBncmVhdGVyIHBhcnQgb2YgdGhlIEdyZWVrIGFybXkgd2FzIHBlcnN1YWRlZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGFzIGZvciBNZW5vbiwgYmVmb3JlIGl0IHdhcyBjbGVhciB3aGF0IHRoZSByZXN0IG9mIHRoZSBzb2xkaWVycyB3b3VsZCBkbywgdGhhdCBpcywgd2hldGhlciB0aGV5IHdvdWxkIGZvbGxvdyA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IG9yIG5vdCwgaGUgZ2F0aGVyZWQgdG9nZXRoZXIgaGlzIG93biB0cm9vcHMgYXBhcnQgZnJvbSB0aGUgb3RoZXJzIGFuZCBzcG9rZSBhcyBmb2xsb3dzOgo8L3RyYW5zbGF0aW9uPg=="
translation['1.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz7igJxTb2xkaWVycywgaWYgeW91IHdpbGwgb2JleSBtZSwgeW91IHdpbGwsIHdpdGhvdXQgZWl0aGVyIGRhbmdlciBvciB0b2lsLCBiZSBob25vdXJlZCBieSA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFib3ZlIGFuZCBiZXlvbmQgdGhlIHJlc3Qgb2YgdGhlIHRyb29wcy4gV2hhdCwgdGhlbiwgZG8gSSBkaXJlY3QgeW91IHRvIGRvPyBBdCB0aGlzIG1vbWVudCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGlzIGJlZ2dpbmcgdGhlIEdyZWVrcyB0byBmb2xsb3cgaGltIGFnYWluc3QgdGhlIEtpbmc7IG15IG93biBwbGFuLCB0aGVuLCBpcyB0aGF0IHlvdSBzaG91bGQgY3Jvc3MgdGhlIEV1cGhyYXRlcyByaXZlciBiZWZvcmUgaXQgaXMgY2xlYXIgd2hhdCBhbnN3ZXIgdGhlIHJlc3Qgb2YgdGhlIEdyZWVrcyB3aWxsIG1ha2UgdG8gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['1.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaWYgdGhleSB2b3RlIHRvIGZvbGxvdyBoaW0sIGl0IGlzIHlvdSB3aG8gd2lsbCBnZXQgdGhlIGNyZWRpdCBmb3IgdGhhdCBkZWNpc2lvbiBiZWNhdXNlIHlvdSBiZWdhbiB0aGUgY3Jvc3NpbmcsIGFuZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHdpbGwgbm90IG9ubHkgZmVlbCBncmF0ZWZ1bCB0byB5b3UsIHJlZ2FyZGluZyB5b3UgYXMgdGhlIG1vc3QgemVhbG91cyBpbiBoaXMgY2F1c2UsIGJ1dCBoZSB3aWxsIHJldHVybiB0aGUgZmF2b3Vy4oCUYW5kIGhlIGtub3dzIGhvdyB0byBkbyB0aGF0IGlmIGFueSBtYW4gZG9lczsgb24gdGhlIG90aGVyIGhhbmQsIGlmIHRoZSByZXN0IHZvdGUgbm90IHRvIGZvbGxvdyBoaW0sIHdlIHNoYWxsIGFsbCBnbyBiYWNrIHRvZ2V0aGVyLCBidXQgeW91LCBhcyB0aGUgb25seSBvbmVzIHdobyB3ZXJlIG9iZWRpZW50LCBhcmUgdGhlIG1lbiBoZSB3aWxsIGVtcGxveSwgbm90IG9ubHkgZm9yIGdhcnJpc29uIGR1dHksPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gZWFzeSBzZXJ2aWNlLjwvbm90ZT4gYnV0IGZvciBjYXB0YWluY2llczsgYW5kIHdoYXRldmVyIGVsc2UgeW91IG1heSBkZXNpcmUsIEkga25vdyB0aGF0IHlvdSwgYXMgZnJpZW5kcyBvZiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+LCB3aWxsIHNlY3VyZSBmcm9tIGhpbS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgdGhlIHNvbGRpZXJzIHdlcmUgcGVyc3VhZGVkLCBhbmQgbWFkZSB0aGUgY3Jvc3NpbmcgYmVmb3JlIHRoZSByZXN0IGdhdmUgdGhlaXIgYW5zd2VyLiBXaGVuIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gbGVhcm5lZCB0aGF0IHRoZXkgaGFkIGNyb3NzZWQsIGhlIHdhcyBkZWxpZ2h0ZWQgYW5kIHNlbnQgR2x1cyB0byB0aGUgdHJvb3BzIHdpdGggdGhpcyBtZXNzYWdlOiDigJxTb2xkaWVycywgdG8tZGF5IEkgY29tbWVuZCB5b3U7IGJ1dCBJIHNoYWxsIHNlZSB0byBpdCB0aGF0IHlvdSBhbHNvIHNoYWxsIGhhdmUgY2F1c2UgdG8gY29tbWVuZCBtZSwgZWxzZSBjb3VudCBtZSBubyBsb25nZXIgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPi7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5TbyBNZW5vbidzIHRyb29wcyBjaGVyaXNoZWQgaGlnaCBob3BlcyBhbmQgcHJheWVkIHRoYXQgaGUgbWlnaHQgYmUgc3VjY2Vzc2Z1bCwgd2hpbGUgdG8gTWVub24gaGltc2VsZiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHdhcyBzYWlkIHRvIGhhdmUgc2VudCBtYWduaWZpY2VudCBnaWZ0cyBiZXNpZGVzLiBBZnRlciBzbyBkb2luZyA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHByb2NlZWRlZCB0byBjcm9zcyB0aGUgcml2ZXIsIGFuZCB0aGUgcmVzdCBvZiB0aGUgYXJteSBmb2xsb3dlZCBoaW0sIHRvIHRoZSBsYXN0IG1hbi4gQW5kIGluIHRoZSBjcm9zc2luZyBubyBvbmUgd2FzIHdldHRlZCBhYm92ZSB0aGUgYnJlYXN0IGJ5IHRoZSB3YXRlci4KPC90cmFuc2xhdGlvbj4="
translation['1.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcGVvcGxlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw2MDA1OTExIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDYwMDU5MTEiPlRoYXBzYWN1czwvcGxhY2VOYW1lPiBzYWlkIHRoYXQgdGhpcyByaXZlciBoYWQgbmV2ZXIgYmVlbiBwYXNzYWJsZSBvbiBmb290IGV4Y2VwdCBhdCB0aGlzIHRpbWUsIGJ1dCBvbmx5IGJ5IGJvYXRzOyBhbmQgdGhlc2UgQWJyb2NvbWFzIGhhZCBub3cgYnVybmVkLCBhcyBoZSBtYXJjaGVkIG9uIGFoZWFkIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIGluIG9yZGVyIHRvIHByZXZlbnQgaGltIGZyb20gY3Jvc3NpbmcuIEl0IHNlZW1lZCwgYWNjb3JkaW5nbHksIHRoYXQgaGVyZSB3YXMgYSBkaXZpbmUgaW50ZXJ2ZW50aW9uLCBhbmQgdGhhdCB0aGUgcml2ZXIgaGFkIHBsYWlubHkgcmV0aXJlZCBiZWZvcmUgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBiZWNhdXNlIGhlIHdhcyBkZXN0aW5lZCB0byBiZSBraW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbmNlIGhlIG1hcmNoZWQgdGhyb3VnaCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDE0MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMTQwIj5TeXJpYTwvcGxhY2VOYW1lPiBuaW5lIHN0YWdlcywgZmlmdHkgcGFyYXNhbmdzLCBhbmQgdGhleSBhcnJpdmVkIGF0IHRoZSBBcmF4ZXMgcml2ZXIuIFRoZXJlIHRoZXkgZm91bmQgbWFueSB2aWxsYWdlcyBmdWxsIG9mIGdyYWluIGFuZCB3aW5lLCBhbmQgdGhlcmUgdGhleSByZW1haW5lZCBmb3IgdGhyZWUgZGF5cyBhbmQgcHJvdmlzaW9uZWQgdGhlIGFybXkuCjwvdHJhbnNsYXRpb24+"
translation['1.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuY2UgaGUgbWFyY2hlZCB0aHJvdWdoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDEyNzAwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMTI3MDAiPkFyYWJpYTwvcGxhY2VOYW1lPiwga2VlcGluZyB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDExMjM4NDIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTEyMzg0MiI+RXVwaHJhdGVzPC9wbGFjZU5hbWU+IG9uIHRoZSByaWdodCwgZml2ZSBzdGFnZXMgdGhyb3VnaCBkZXNlcnQgY291bnRyeSwgdGhpcnR5LWZpdmUgcGFyYXNhbmdzLiBJbiB0aGlzIHJlZ2lvbiB0aGUgZ3JvdW5kIHdhcyBhbiB1bmJyb2tlbiBwbGFpbiwgYXMgbGV2ZWwgYXMgdGhlIHNlYSwgYW5kIGZ1bGwgb2Ygd29ybXdvb2Q7IGFuZCB3aGF0ZXZlciBlbHNlIHRoZXJlIHdhcyBvbiB0aGUgcGxhaW4gYnkgd2F5IG9mIHNocnViIG9yIHJlZWQsIHdhcyBhbHdheXMgZnJhZ3JhbnQsIGxpa2Ugc3BpY2VzOwo8L3RyYW5zbGF0aW9uPg=="
translation['1.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPnRyZWVzIHRoZXJlIHdlcmUgbm9uZSwgYnV0IHdpbGQgYW5pbWFscyBvZiBhbGwgc29ydHMsIHZhc3QgbnVtYmVycyBvZiB3aWxkIGFzc2VzIGFuZCBtYW55IG9zdHJpY2hlcywgYmVzaWRlcyBidXN0YXJkcyBhbmQgZ2F6ZWxsZXMuIFRoZXNlIGFuaW1hbHMgd2VyZSBzb21ldGltZXMgY2hhc2VkIGJ5IHRoZSBob3JzZW1lbi4gQXMgZm9yIHRoZSBhc3Nlcywgd2hlbmV2ZXIgb25lIGNoYXNlZCB0aGVtLCB0aGV5IHdvdWxkIHJ1biBvbiBhaGVhZCBhbmQgc3RvcOKAlGZvciB0aGV5IHJhbiBtdWNoIGZhc3RlciB0aGFuIHRoZSBob3JzZXPigJRhbmQgdGhlbiwgd2hlbiB0aGUgaG9yc2VzIGNhbWUgbmVhciwgdGhleSB3b3VsZCBkbyB0aGUgc2FtZSB0aGluZyBhZ2FpbiwgYW5kIGl0IHdhcyBpbXBvc3NpYmxlIHRvIGNhdGNoIHRoZW0gdW5sZXNzIHRoZSBob3JzZW1lbiBwb3N0ZWQgdGhlbXNlbHZlcyBhdCBpbnRlcnZhbHMgYW5kIGh1bnRlZCB0aGVtIGluIHJlbGF5cy4gVGhlIGZsZXNoIG9mIHRob3NlIHRoYXQgd2VyZSBjYXB0dXJlZCB3YXMgbGlrZSB2ZW5pc29uLCBidXQgbW9yZSB0ZW5kZXIuCjwvdHJhbnNsYXRpb24+"
translation['1.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBubyBvc3RyaWNoIHdhcyBjYXB0dXJlZCBieSBhbnlvbmUsIGFuZCBhbnkgaG9yc2VtYW4gd2hvIGNoYXNlZCBvbmUgc3BlZWRpbHkgZGVzaXN0ZWQ7IGZvciBpdCB3b3VsZCBkaXN0YW5jZSBoaW0gYXQgb25jZSBpbiBpdHMgZmxpZ2h0LCBub3QgbWVyZWx5IHBseWluZyBpdHMgZmVldCwgYnV0IGhvaXN0aW5nIGl0cyB3aW5ncyBhbmQgdXNpbmcgdGhlbSBsaWtlIGEgc2FpbC4gVGhlIGJ1c3RhcmRzLCBvbiB0aGUgb3RoZXIgaGFuZCwgY2FuIGJlIGNhdWdodCBpZiBvbmUgaXMgcXVpY2sgaW4gc3RhcnRpbmcgdGhlbSB1cCwgZm9yIHRoZXkgZmx5IG9ubHkgYSBzaG9ydCBkaXN0YW5jZSwgbGlrZSBwYXJ0cmlkZ2VzLCBhbmQgc29vbiB0aXJlOyBhbmQgdGhlaXIgZmxlc2ggd2FzIGRlbGljaW91cy4KPC90cmFuc2xhdGlvbj4="
translation['1.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NYXJjaGluZyBvbiB0aHJvdWdoIHRoaXMgcmVnaW9uIHRoZXkgYXJyaXZlZCBhdCB0aGUgTWFzY2FzIHJpdmVyLCB3aGljaCBpcyBhIHBsZXRocnVtIGluIHdpZHRoLiBUaGVyZSwgaW4gdGhlIGRlc2VydCwgd2FzIGEgbGFyZ2UgY2l0eSBuYW1lZCBDb3Jzb3RlLCBjb21wbGV0ZWx5IHN1cnJvdW5kZWQgYnkgdGhlIE1hc2Nhcy4KPC90cmFuc2xhdGlvbj4="
translation['1.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIHRoZXkgcmVtYWluZWQgdGhyZWUgZGF5cyBhbmQgcHJvdmlzaW9uZWQgdGhlIGFybXkuIFRoZW5jZSA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IG1hcmNoZWQgdGhpcnRlZW4gc3RhZ2VzIHRocm91Z2ggZGVzZXJ0IGNvdW50cnksIG5pbmV0eSBwYXJhc2FuZ3MsIGtlZXBpbmcgdGhlIEV1cGhyYXRlcyByaXZlciBvbiB0aGUgcmlnaHQsIGFuZCBhcnJpdmVkIGF0IFB5bGFlLiBJbiB0aGUgY291cnNlIG9mIHRoZXNlIHN0YWdlcyBtYW55IG9mIHRoZSBiYWdnYWdlIGFuaW1hbHMgZGllZCBvZiBodW5nZXIsIGZvciB0aGVyZSB3YXMgbm8gZm9kZGVyIGFuZCwgaW4gZmFjdCwgbm8gZ3Jvd2luZyB0aGluZyBvZiBhbnkga2luZCwgYnV0IHRoZSBsYW5kIHdhcyBhYnNvbHV0ZWx5IGJhcmU7IGFuZCB0aGUgcGVvcGxlIHdobyBkd2VsdCBoZXJlIG1hZGUgYSBsaXZpbmcgYnkgcXVhcnJ5aW5nIG1pbGwtc3RvbmVzIGFsb25nIHRoZSByaXZlciBiYW5rcywgdGhlbiBmYXNoaW9uaW5nIHRoZW0gYW5kIHRha2luZyB0aGVtIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjI2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2MjYiPkJhYnlsb248L3BsYWNlTmFtZT4sIHdoZXJlIHRoZXkgc29sZCB0aGVtIGFuZCBib3VnaHQgZ3JhaW4gaW4gZXhjaGFuZ2UuCjwvdHJhbnNsYXRpb24+"
translation['1.5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciB0aGUgdHJvb3BzLCB0aGVpciBzdXBwbHkgb2YgZ3JhaW4gZ2F2ZSBvdXQsIGFuZCBpdCB3YXMgbm90IHBvc3NpYmxlIHRvIGJ1eSBhbnkgZXhjZXB0IGluIHRoZSBMeWRpYW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIEx5ZGlhbnMgd2VyZSBub3RvcmlvdXMgYXMgaHVja3N0ZXJzLjwvbm90ZT4gbWFya2V0IGF0dGFjaGVkIHRvIHRoZSBiYXJiYXJpYW4gYXJteSBvZiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjIuMTgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4yLjE4PC9iaWJsPiBhbmQgdGhlIG5vdGUgdGhlcmVvbiwgYW5kIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4zLjE0IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMy4xNDwvYmlibD4uPC9ub3RlPiBhdCB0aGUgcHJpY2Ugb2YgZm91ciBzaWdsaSBmb3IgYSBjYXBpdGggb2Ygd2hlYXQgZmxvdXIgb3IgYmFybGV5IG1lYWwuIFRoZSBzaWdsdXMgaXMgd29ydGggc2V2ZW4gYW5kIG9uZS1oYWxmIEF0dGljIG9ib2xzLCBhbmQgdGhlIGNhcGl0aCBoYWQgdGhlIGNhcGFjaXR5IG9mIHR3byBBdHRpYyBjaG9lbmljZXMuPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjIuMTgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4yLjE4PC9iaWJsPiBhbmQgdGhlIG5vdGUgdGhlcmVvbiwgYW5kIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4zLjE0IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMy4xNDwvYmlibD4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBvYm9sID0gYWJvdXQgMSAxLzJkLiBvciAzIGNlbnRzLiBUaGUgY2hvZW5peCA9IGFib3V0IDEgcXVhcnQuIFRoZSBwcmljZXMgc3RhdGVkIHdlcmUsIHJvdWdobHksIGFib3V0IGZpZnR5IHRpbWVzIG5vcm1hbCBwcmljZXMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+Ljwvbm90ZT4gVGhlIHNvbGRpZXJzIHRoZXJlZm9yZSBtYW5hZ2VkIHRvIHN1YnNpc3QgYnkgZWF0aW5nIG1lYXQuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgR3JlZWtzIG9mIFhlbm9waG9uJ3MgdGltZSBhdGUgY29tcGFyYXRpdmVseSBsaXR0bGUgbWVhdCB1bmRlciBhbnkgY2lyY3Vtc3RhbmNlcywgYnV0IGluIHRoZSBBcmFiaWFuIGRlc2VydCBhIGRpZXQgb2YgbWVhdCBjb25zdGl0dXRlZCBhIHJlYWwgaGFyZHNoaXAuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['1.5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHNvbWV0aW1lcyBtYWRlIHRoZXNlIHN0YWdlcyB0aHJvdWdoIHRoZSBkZXNlcnQgdmVyeSBsb25nLCB3aGVuZXZlciBoZSB3YW50ZWQgdG8gcmVhY2ggd2F0ZXIgb3IgZnJlc2ggZm9kZGVyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbmNlIGluIHBhcnRpY3VsYXIsIHdoZW4gdGhleSBjYW1lIHVwb24gYSBuYXJyb3csIG11ZGR5IHBsYWNlIHdoaWNoIHdhcyBoYXJkIGZvciB0aGUgd2Fnb25zIHRvIGdldCB0aHJvdWdoLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGhhbHRlZCB3aXRoIGhpcyB0cmFpbiBvZiBub2JsZXMgYW5kIGRpZ25pdGFyaWVzIGFuZCBvcmRlcmVkIEdsdXMgYW5kIFBpZ3JlcyB0byB0YWtlIHNvbWUgb2YgdGhlIGJhcmJhcmlhbiB0cm9vcHMgYW5kIGhlbHAgdG8gcHVsbCB0aGUgd2Fnb25zIG91dC4KPC90cmFuc2xhdGlvbj4="
translation['1.5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpdCBzZWVtZWQgdG8gaGltIHRoYXQgdGhleSB0b29rIHRoZWlyIHRpbWUgd2l0aCB0aGUgd29yazsgYWNjb3JkaW5nbHksIGFzIGlmIGluIGFuZ2VyLCBoZSBkaXJlY3RlZCB0aGUgUGVyc2lhbiBub2JsZXMgd2hvIGFjY29tcGFuaWVkIGhpbSB0byB0YWtlIGEgaGFuZCBpbiBodXJyeWluZyBvbiB0aGUgd2Fnb25zLiBBbmQgdGhlbiBvbmUgbWlnaHQgaGF2ZSBiZWhlbGQgYSBzYW1wbGUgb2YgZ29vZCBkaXNjaXBsaW5lOiB0aGV5IGVhY2ggdGhyZXcgb2ZmIHRoZWlyIHB1cnBsZSBjbG9ha3Mgd2hlcmUgdGhleSBjaGFuY2VkIHRvIGJlIHN0YW5kaW5nLCBhbmQgcnVzaGVkLCBhcyBhIG1hbiB3b3VsZCBydW4gdG8gd2luIGEgdmljdG9yeSwgZG93biBhIG1vc3QgZXhjZWVkaW5nbHkgc3RlZXAgaGlsbCwgd2VhcmluZyB0aGVpciBjb3N0bHkgdHVuaWNzIGFuZCBjb2xvdXJlZCB0cm91c2Vycywgc29tZSBvZiB0aGVtLCBpbmRlZWQsIHdpdGggbmVja2xhY2VzIGFyb3VuZCB0aGVpciBuZWNrcyBhbmQgYnJhY2VsZXRzIG9uIHRoZWlyIGFybXM7IGFuZCBsZWFwaW5nIGF0IG9uY2UsIHdpdGggYWxsIHRoaXMgZmluZXJ5LCBpbnRvIHRoZSBtdWQsIHRoZXkgbGlmdGVkIHRoZSB3YWdvbnMgaGlnaCBhbmQgZHJ5IGFuZCBicm91Z2h0IHRoZW0gb3V0IG1vcmUgcXVpY2tseSB0aGFuIG9uZSB3b3VsZCBoYXZlIHRob3VnaHQgcG9zc2libGUuCjwvdHJhbnNsYXRpb24+"
translation['1.5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkluIGdlbmVyYWwsIGl0IHdhcyBjbGVhciB0aGF0IDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gd2FzIGluIGhhc3RlIHRocm91Z2hvdXQgdGhlIHdob2xlIGpvdXJuZXkgYW5kIHdhcyBtYWtpbmcgbm8gZGVsYXlzLCBleGNlcHQgd2hlcmUgaGUgaGFsdGVkIHRvIHByb2N1cmUgcHJvdmlzaW9ucyBvciBmb3Igc29tZSBvdGhlciBuZWNlc3NhcnkgcHVycG9zZTsgaGlzIHRob3VnaHQgd2FzIHRoYXQgdGhlIGZhc3RlciBoZSB3ZW50LCB0aGUgbW9yZSB1bnByZXBhcmVkIHRoZSBLaW5nIHdvdWxkIGJlIHRvIGZpZ2h0IHdpdGggaGltLCB3aGlsZSwgb24gdGhlIG90aGVyIGhhbmQsIHRoZSBzbG93ZXIgaGUgd2VudCwgdGhlIGdyZWF0ZXIgd291bGQgYmUgdGhlIGFybXkgdGhhdCB3YXMgZ2F0aGVyaW5nIGZvciB0aGUgS2luZy4gRnVydGhlcm1vcmUsIG9uZSB3aG8gb2JzZXJ2ZWQgY2xvc2VseSBjb3VsZCBzZWUgYXQgYSBnbGFuY2UgdGhhdCB3aGlsZSB0aGUgS2luZydzIGVtcGlyZSB3YXMgc3Ryb25nIGluIGl0cyBleHRlbnQgb2YgdGVycml0b3J5IGFuZCBudW1iZXIgb2YgaW5oYWJpdGFudHMsIGl0IHdhcyB3ZWFrIGJ5IHJlYXNvbiBvZiB0aGUgZ3JlYXRuZXNzIG9mIHRoZSBkaXN0YW5jZXMgYW5kIHRoZSBzY2F0dGVyZWQgY29uZGl0aW9uIG9mIGl0cyBmb3JjZXMsIGluIGNhc2Ugb25lIHNob3VsZCBiZSBzd2lmdCBpbiBtYWtpbmcgaGlzIGF0dGFjayB1cG9uIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWNyb3NzIHRoZSBFdXBocmF0ZXMgcml2ZXIgaW4gdGhlIGNvdXJzZSBvZiB0aGVzZSBkZXNlcnQgbWFyY2hlcyB3YXMgYSBsYXJnZSBhbmQgcHJvc3Blcm91cyBjaXR5IG5hbWVkIENoYXJtYW5kZSwgYW5kIGhlcmUgdGhlIHNvbGRpZXJzIG1hZGUgcHVyY2hhc2VzIG9mIHByb3Zpc2lvbnMsIGNyb3NzaW5nIHRoZSByaXZlciBvbiByYWZ0cyBpbiB0aGUgZm9sbG93aW5nIHdheTogdGhleSB0b29rIHNraW5zIHdoaWNoIHRoZXkgaGFkIGZvciB0ZW50IGNvdmVycywgZmlsbGVkIHRoZW0gd2l0aCBoYXksIGFuZCB0aGVuIGJyb3VnaHQgdGhlIGVkZ2VzIHRvZ2V0aGVyIGFuZCBzZXdlZCB0aGVtIHVwLCBzbyB0aGF0IHRoZSB3YXRlciBjb3VsZCBub3QgdG91Y2ggdGhlIGhheTsgb24gdGhlc2UgdGhleSB3b3VsZCBjcm9zcyBhbmQgZ2V0IHByb3Zpc2lvbnPigJR3aW5lIG1hZGUgZnJvbSB0aGUgZGF0ZSBvZiB0aGUgcGFsbSB0cmVlIGFuZCBicmVhZCBtYWRlIG9mIG1pbGxldCwgZm9yIHRoaXMgZ3JhaW4gd2FzIHZlcnkgYWJ1bmRhbnQgaW4gdGhlIGNvdW50cnkuCjwvdHJhbnNsYXRpb24+"
translation['1.5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmUgb25lIG9mIE1lbm9uJ3Mgc29sZGllcnMgYW5kIG9uZSBvZiBDbGVhcmNodXMnIG1lbiBoYWQgc29tZSBkaXNwdXRlLCBhbmQgQ2xlYXJjaHVzLCBkZWNpZGluZyB0aGF0IE1lbm9uJ3MgbWFuIHdhcyBpbiB0aGUgd3JvbmcsIGdhdmUgaGltIGEgZmxvZ2dpbmcuIFRoZSBtYW4gdGhlbiB3ZW50IHRvIGhpcyBvd24gYXJteSBhbmQgdG9sZCBhYm91dCBpdCwgYW5kIHdoZW4gaGlzIGNvbXJhZGVzIGhlYXJkIG9mIHRoZSBtYXR0ZXIsIHRoZXkgdG9vayBpdCBoYXJkIGFuZCB3ZXJlIGV4Y2VlZGluZ2x5IGFuZ3J5IHdpdGggQ2xlYXJjaHVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgc2FtZSBkYXkgQ2xlYXJjaHVzLCBhZnRlciBnb2luZyB0byB0aGUgcGxhY2Ugd2hlcmUgdGhleSBjcm9zc2VkIHRoZSByaXZlciBhbmQgdGhlcmUgaW5zcGVjdGluZyB0aGUgbWFya2V0LCB3YXMgcmlkaW5nIGJhY2sgdG8gaGlzIG93biB0ZW50IHRocm91Z2ggTWVub24ncyBhcm15LCBoYXZpbmcgb25seSBhIGZldyBtZW4gd2l0aCBoaW07IGFuZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGhhZCBub3QgeWV0IGFycml2ZWQsIGJ1dCB3YXMgc3RpbGwgb24gdGhlIG1hcmNoIHRvd2FyZCB0aGUgcGxhY2U7IGFuZCBvbmUgb2YgTWVub24ncyBzb2xkaWVycyB3aG8gd2FzIHNwbGl0dGluZyB3b29kIHRocmV3IGhpcyBheGUgYXQgQ2xlYXJjaHVzIHdoZW4gaGUgc2F3IGhpbSByaWRpbmcgdGhyb3VnaCB0aGUgY2FtcC4gTm93IHRoaXMgbWFuIG1pc3NlZCBoaW0sIGJ1dCBhbm90aGVyIHRocmV3IGEgc3RvbmUgYXQgaGltLCBhbmQgc3RpbGwgYW5vdGhlciwgYW5kIHRoZW4sIGFmdGVyIGFuIG91dGNyeSBoYWQgYmVlbiByYWlzZWQsIG1hbnkuCjwvdHJhbnNsYXRpb24+"
translation['1.5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5DbGVhcmNodXMgZXNjYXBlZCB0byBoaXMgb3duIGFybXkgYW5kIGF0IG9uY2UgY2FsbGVkIGhpcyB0cm9vcHMgdG8gYXJtczsgaGUgb3JkZXJlZCBoaXMgaG9wbGl0ZXMgdG8gcmVtYWluIHdoZXJlIHRoZXkgd2VyZSwgcmVzdGluZyB0aGVpciBzaGllbGRzIGFnYWluc3QgdGhlaXIga25lZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gaW4gcmVhZGluZXNzIHRvIHN1cHBvcnQgaGltIGluIGNhc2Ugb2YgbmVlZC48L25vdGU+IHdoaWxlIGhlIGhpbXNlbGYgd2l0aCB0aGUgVGhyYWNpYW5zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMi45IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMi45PC9iaWJsPi48L25vdGU+IGFuZCB0aGUgaG9yc2VtZW4sIG9mIHdoaWNoIGhlIGhhZCBpbiBoaXMgYXJteSBtb3JlIHRoYW4gZm9ydHksIG1vc3Qgb2YgdGhlbSBUaHJhY2lhbnMsIGFkdmFuY2VkIHVwb24gTWVub24ncyB0cm9vcHM7IHRoZSByZXN1bHQgd2FzIHRoYXQgdGhlc2UgYW5kIE1lbm9uIGhpbXNlbGYgd2VyZSB0aG9yb3VnaGx5IGZyaWdodGVuZWQgYW5kIHJhbiB0byB0aGVpciBhcm1zLCB0aG91Z2ggdGhlcmUgd2VyZSBzb21lIHdobyBzdG9vZCBzdG9jay1zdGlsbCwgbm9ucGx1c3NlZCBieSB0aGUgc2l0dWF0aW9uLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMi45IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMi45PC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['1.5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgUHJveGVudXPigJRmb3IgaGUgY2hhbmNlZCB0byBiZSBub3cgY29taW5nIHVwLCBsYXRlciB0aGFuIHRoZSBvdGhlcnMsIHdpdGggYSBiYXR0YWxpb24gb2YgaG9wbGl0ZXMgZm9sbG93aW5nIGhpbeKAlHN0cmFpZ2h0d2F5IGxlZCBoaXMgdHJvb3BzIGludG8gdGhlIHNwYWNlIGJldHdlZW4gdGhlIHR3byBwYXJ0aWVzLCBoYWx0ZWQgdGhlbSB1bmRlciBhcm1zLCBhbmQgYmVnYW4gdG8gYmVnIENsZWFyY2h1cyBub3QgdG8gcHJvY2VlZCB3aXRoIGhpcyBhdHRhY2suIENsZWFyY2h1cywgaG93ZXZlciwgd2FzIGFuZ3J5LCBiZWNhdXNlLCB3aGVuIGhlIGhhZCBiYXJlbHkgZXNjYXBlZCBiZWluZyBzdG9uZWQgdG8gZGVhdGgsIFByb3hlbnVzIHdhcyB0YWxraW5nIGxpZ2h0bHkgb2YgaGlzIGdyaWV2YW5jZSwgYW5kIGhlIG9yZGVyZWQgaGltIHRvIHJlbW92ZSBoaW1zZWxmIGZyb20gYmV0d2VlbiB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGlzIG1vbWVudCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFsc28gY2FtZSB1cCBhbmQgbGVhcm5lZCBhYm91dCB0aGUgc2l0dWF0aW9uLCBhbmQgaGUgaW1tZWRpYXRlbHkgdG9vayBoaXMgc3BlYXJzIGluIGhpcyBoYW5kcyBhbmQsIGF0dGVuZGVkIGJ5IHN1Y2ggb2YgaGlzIGNvdW5zZWxsb3JzIGFzIHdlcmUgcHJlc2VudCwgY2FtZSByaWRpbmcgaW50byB0aGUgaW50ZXJ2ZW5pbmcgc3BhY2UgYW5kIHNwb2tlIGFzIGZvbGxvd3M6CjwvdHJhbnNsYXRpb24+"
translation['1.5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz7igJxDbGVhcmNodXMsIGFuZCBQcm94ZW51cywgYW5kIGFsbCB5b3Ugb3RoZXIgR3JlZWtzIHdobyBhcmUgaGVyZSwgeW91IGtub3cgbm90IHdoYXQgeW91IGFyZSBkb2luZy4gRm9yIGFzIGNlcnRhaW5seSBhcyB5b3UgY29tZSB0byBmaWdodGluZyB3aXRoIG9uZSBhbm90aGVyLCB5b3UgbWF5IGJlIHN1cmUgdGhhdCBvbiB0aGlzIHZlcnkgZGF5IEkgc2hhbGwgYmUgaW5zdGFudGx5IGN1dCB0byBwaWVjZXMgYW5kIHlvdXJzZWx2ZXMgbm90IGxvbmcgYWZ0ZXIgbWU7IGZvciBvbmNlIGxldCBpbGwgZm9ydHVuZSBvdmVydGFrZSB1cywgYW5kIGFsbCB0aGVzZSBiYXJiYXJpYW5zIHdob20geW91IHNlZSB3aWxsIGJlIG1vcmUgaG9zdGlsZSB0byB1cyB0aGFuIGFyZSB0aG9zZSB3aG8gc3RhbmQgd2l0aCB0aGUgS2luZy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5PbiBoZWFyaW5nIHRoZXNlIHdvcmRzIENsZWFyY2h1cyBjYW1lIHRvIGhpcyBzZW5zZXMsIGFuZCBib3RoIHBhcnRpZXMgY2Vhc2VkIGZyb20gdGhlaXIgcXVhcnJlbCBhbmQgcmV0dXJuZWQgdG8gdGhlaXIgcXVhcnRlcnMuCjwvdHJhbnNsYXRpb24+"
translation['1.6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyB0aGV5IHdlbnQgb24gZnJvbSB0aGVyZSwgdGhleSBrZXB0IHNlZWluZyB0cmFja3Mgb2YgaG9yc2VzIGFuZCBob3JzZXMnIGR1bmcuIFRvIGFsbCBhcHBlYXJhbmNlcyBpdCB3YXMgdGhlIHRyYWlsIG9mIGFib3V0IHR3byB0aG91c2FuZCBob3JzZXMsIGFuZCB0aGUgaG9yc2VtZW4gYXMgdGhleSBwcm9jZWVkZWQgd2VyZSBidXJuaW5nIHVwIGZvZGRlciBhbmQgZXZlcnl0aGluZyBlbHNlIHRoYXQgd2FzIG9mIGFueSB1c2UuIEF0IHRoaXMgdGltZSBPcm9udGFzLCBhIFBlcnNpYW4sIHdobyB3YXMgcmVsYXRlZCB0byB0aGUgS2luZyBieSBiaXJ0aCBhbmQgd2FzIHJlY2tvbmVkIGFtb25nIHRoZSBiZXN0IG9mIHRoZSBQZXJzaWFucyBpbiBtYXR0ZXJzIG9mIHdhciwgZGV2aXNlZCBhIHBsb3QgYWdhaW5zdCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+4oCUaW4gZmFjdCwgaGUgaGFkIG1hZGUgd2FyIHVwb24gaGltIGJlZm9yZSB0aGlzLCBidXQgaGFkIGJlY29tZSBoaXMgZnJpZW5kIGFnYWluLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkhlIG5vdyBzYWlkIHRvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gdGhhdCBpZiBoZSB3b3VsZCBnaXZlIGhpbSBhIHRob3VzYW5kIGhvcnNlbWVuLCBoZSB3b3VsZCBlaXRoZXIgYW1idXNoIGFuZCBraWxsIHRoZXNlIGhvcnNlbWVuIHdobyB3ZXJlIGJ1cm5pbmcgYWhlYWQgb2YgaGltLCBvciBoZSB3b3VsZCBjYXB0dXJlIG1hbnkgb2YgdGhlbSBhbGl2ZSBhbmQgcHV0IGEgc3RvcCB0byB0aGVpciBidXJuaW5nIGFzIHRoZXkgYWR2YW5jZWQ7IGFuZCBoZSB3b3VsZCBzZWUgdG8gaXQgdGhhdCB0aGV5IHNob3VsZCBuZXZlciBiZSBhYmxlIHRvIGJlaG9sZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+JyBhcm15IGFuZCBnZXQgdG8gdGhlIEtpbmcgd2l0aCB0aGVpciByZXBvcnQuIFdoZW4gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBoZWFyZCB0aGlzIHBsYW4sIGl0IHNlZW1lZCB0byBoaW0gdG8gYmUgYW4gZXhwZWRpZW50IG9uZSwgYW5kIGhlIGRpcmVjdGVkIE9yb250YXMgdG8gZ2V0IGEgZGV0YWNobWVudCBmcm9tIGVhY2ggb25lIG9mIHRoZSBjYXZhbHJ5IGNvbW1hbmRlcnMuCjwvdHJhbnNsYXRpb24+"
translation['1.6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gT3JvbnRhcywgdGhpbmtpbmcgdGhhdCBoaXMgaG9yc2VtZW4gd2VyZSBhc3N1cmVkIGhpbSwgd3JvdGUgYSBsZXR0ZXIgdG8gdGhlIEtpbmcgc2F5aW5nIHRoYXQgaGUgd291bGQgY29tZSB0byBoaW0gd2l0aCBhcyBtYW55IGhvcnNlbWVuIGFzIGhlIGNvdWxkIGdldDsgYW5kIGhlIHVyZ2VkIHRoZSBLaW5nIHRvIGRpcmVjdCBoaXMgb3duIGNhdmFscnkgdG8gcmVjZWl2ZSBoaW0gYXMgYSBmcmllbmQuIFRoZSBsZXR0ZXIgYWxzbyBjb250YWluZWQgcmVtaW5kZXJzIG9mIGhpcyBmb3JtZXIgZnJpZW5kc2hpcCBhbmQgZmlkZWxpdHkuIFRoaXMgbGV0dGVyIGhlIGdhdmUgdG8gYSBtYW4gd2hvbSBoZSBzdXBwb3NlZCB0byBiZSBmYWl0aGZ1bCB0byBoaW07IGJ1dCB0aGlzIG1hbiB0b29rIGl0IGFuZCBnYXZlIGl0IHRvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['1.6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBoYWQgcmVhZCBpdCwgaGUgaGFkIE9yb250YXMgYXJyZXN0ZWQsIGFuZCBzdW1tb25lZCB0byBoaXMgdGVudCBzZXZlbiBvZiB0aGUgbm9ibGVzdCBQZXJzaWFucyBhbW9uZyBoaXMgYXR0ZW5kYW50cywgd2hpbGUgaGUgb3JkZXJlZCB0aGUgR3JlZWsgZ2VuZXJhbHMgdG8gYnJpbmcgdXAgaG9wbGl0ZXMgYW5kIGJpZCB0aGVtIHN0YXRpb24gdGhlbXNlbHZlcyB1bmRlciBhcm1zIGFyb3VuZCBoaXMgdGVudC4gQW5kIHRoZSBnZW5lcmFscyBvYmV5ZWQgdGhlIG9yZGVyLCBicmluZ2luZyB3aXRoIHRoZW0gYWJvdXQgdGhyZWUgdGhvdXNhbmQgaG9wbGl0ZXMuCjwvdHJhbnNsYXRpb24+"
translation['1.6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5DbGVhcmNodXMgd2FzIGFsc28gaW52aXRlZCBpbnRvIHRoZSB0ZW50IGFzIGEgY291bnNlbGxvciwgZm9yIGJvdGggPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBhbmQgdGhlIG90aGVyIFBlcnNpYW5zIHJlZ2FyZGVkIGhpbSBhcyB0aGUgbWFuIHdobyB3YXMgaG9ub3VyZWQgYWJvdmUgdGhlIHJlc3Qgb2YgdGhlIEdyZWVrcy4gQW5kIHdoZW4gaGUgY2FtZSBvdXQsIGhlIHJlcG9ydGVkIHRvIGhpcyBmcmllbmRzIGhvdyBPcm9udGFzJyB0cmlhbCB3YXMgY29uZHVjdGVk4oCUZm9yIGl0IHdhcyBubyBzZWNyZXQuCjwvdHJhbnNsYXRpb24+"
translation['1.6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkhlIHNhaWQgdGhhdCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGJlZ2FuIHRoZSBjb25mZXJlbmNlIGluIHRoaXMgd2F5OiDigJxNeSBmcmllbmRzLCBJIGhhdmUgaW52aXRlZCB5b3UgaGVyZSBpbiBvcmRlciB0aGF0IEkgbWF5IGNvbnN1bHQgd2l0aCB5b3UgYW5kIHRoZW4gdGFrZSBzdWNoIGFjdGlvbiBpbiB0aGUgY2FzZSBvZiBPcm9udGFzIGhlcmUgYXMgaXMgcmlnaHQgaW4gdGhlIHNpZ2h0IG9mIGdvZHMgYW5kIG1lbi4gVGhpcyBtYW4gd2FzIGdpdmVuIG1lIGF0IGZpcnN0IGJ5IG15IGZhdGhlciwgdG8gYmUgbXkgc3ViamVjdDsgdGhlbiwgYXQgdGhlIGJpZGRpbmcsIGFzIGhlIGhpbXNlbGYgc2FpZCwgb2YgbXkgYnJvdGhlciwgdGhpcyBtYW4gbGV2aWVkIHdhciB1cG9uIG1lLCBob2xkaW5nIHRoZSBjaXRhZGVsIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU2FyZGlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTYXJkaXMiPlNhcmRpczwvcGxhY2VOYW1lPiwgYW5kIEksIGJ5IHRoZSB3YXIgSSB3YWdlZCBhZ2FpbnN0IGhpbSwgbWFkZSBoaW0gY291bnQgaXQgYmVzdCB0byBjZWFzZSBmcm9tIHdhcnJpbmcgdXBvbiBtZSwgYW5kIEkgcmVjZWl2ZWQgYW5kIGdhdmUgdGhlIGhhbmQtY2xhc3Agb2YgZnJpZW5kc2hpcC4gU2luY2UgdGhhdCzigJ0gaGUgc2FpZCwg4oCcT3JvbnRhcywgaGF2ZSBJIGRvbmUgeW91IGFueSB3cm9uZz/igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPuKAnE5vLOKAnSBPcm9udGFzIGFuc3dlcmVkLiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHdlbnQgb24gcXVlc3Rpb25pbmcgaGltOiDigJxEaWQgeW91IG5vdCBhZnRlcndhcmRzLCBhbHRob3VnaCwgYXMgeW91IHlvdXJzZWxmIGFkbWl0LCB5b3UgaGFkIHN1ZmZlcmVkIG5vIHdyb25nIGF0IG15IGhhbmRzLCBkZXNlcnQgbWUgZm9yIHRoZSBNeXNpYW5zLCBhbmQgZG8gYWxsIHRoZSBoYXJtIHlvdSBjb3VsZCB0byBteSB0ZXJyaXRvcnk/4oCdIOKAnFllcyzigJ0gc2FpZCBPcm9udGFzLiDigJxEaWQgeW91IG5vdCzigJ0gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBzYWlkLCDigJx3aGVuIG9uY2UgbW9yZSB5b3UgaGFkIGxlYXJuZWQgdGhlIHNsaWdodG5lc3Mgb2YgeW91ciBvd24gcG93ZXIsIGdvIHRvIHRoZSBhbHRhciBvZiBBcnRlbWlzIGFuZCBzYXkgeW91IHdlcmUgc29ycnksIGFuZCBkaWQgeW91IG5vdCwgYWZ0ZXIgcHJldmFpbGluZyB1cG9uIG1lIHRvIHBhcmRvbiB5b3UsIGFnYWluIGdpdmUgbWUgcGxlZGdlcyBhbmQgcmVjZWl2ZSBwbGVkZ2VzIGZyb20gbWU/4oCdIFRoaXMgYWxzbyBPcm9udGFzIGFkbWl0dGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPuKAnFdoYXQgd3JvbmcsIHRoZW4s4oCdIHNhaWQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiwg4oCcaGF2ZSB5b3Ugc3VmZmVyZWQgYXQgbXkgaGFuZHMsIHRoYXQgeW91IG5vdyBmb3IgdGhlIHRoaXJkIHRpbWUgaGF2ZSBiZWVuIGZvdW5kIHBsb3R0aW5nIGFnYWluc3QgbWU/4oCdIFdoZW4gT3JvbnRhcyByZXBsaWVkLCDigJxOb25lLOKAnSA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFza2VkIGhpbTog4oCcRG8geW91IGFkbWl0LCB0aGVuLCB0aGF0IHlvdSBoYXZlIHByb3ZlZCB5b3Vyc2VsZiBhIGRvZXIgb2Ygd3JvbmcgdG93YXJkIG1lP+KAnSDigJxJIGNhbm5vdCBjaG9vc2UgYnV0IGRvIHNvLOKAnSBzYWlkIE9yb250YXMuIFRoZXJldXBvbiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFza2VkIGFnYWluOiDigJxUaGVuIGNvdWxkIHlvdSBoZW5jZWZvcnRoIHByb3ZlIHlvdXJzZWxmIGEgZm9lIHRvIG15IGJyb3RoZXIgYW5kIGEgZmFpdGhmdWwgZnJpZW5kIHRvIG1lP+KAnSDigJxFdmVuIGlmIEkgc2hvdWxkIGRvIHNvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4s4oCdIGhlIHJlcGxpZWQsIOKAnHlvdSBjb3VsZCBuZXZlciBhZnRlciB0aGlzIGJlbGlldmUgaXQgb2YgbWUu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBzYWlkIHRvIHRob3NlIHdobyB3ZXJlIHByZXNlbnQ6IOKAnFN1Y2ggaGF2ZSBiZWVuIHRoaXMgbWFuJ3MgZGVlZHMsIHN1Y2ggYXJlIG5vdyBoaXMgd29yZHM7IGFuZCBub3csIENsZWFyY2h1cywgZG8geW91IGJlIHRoZSBmaXJzdCBvZiBteSBjb3Vuc2VsbG9ycyB0byBleHByZXNzIHRoZSBvcGluaW9uIHlvdSBob2xkLuKAnSBBbmQgQ2xlYXJjaHVzIHNhaWQ6IOKAnE15IGFkdmljZSBpcyB0byBwdXQgdGhpcyBtYW4gb3V0IG9mIHRoZSB3YXkgYXMgc3BlZWRpbHkgYXMgcG9zc2libGUsIHNvIHRoYXQgd2UgbWF5IG5vIGxvbmdlciBoYXZlIHRvIGJlIG9uIG91ciBndWFyZCBhZ2FpbnN0IHRoZSBmZWxsb3csIGJ1dCBtYXkgYmUgbGVmdCBmcmVlLCBzbyBmYXIgYXMgY29uY2VybnMgaGltLCB0byByZXF1aXRlIHdpdGggYmVuZWZpdHMgdGhlc2Ugd2lsbGluZyBzZXJ2YW50cy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGlzIG9waW5pb24gQ2xlYXJjaHVzIHNhaWQgdGhhdCB0aGUgb3RoZXJzIGFsc28gY29uY3VycmVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzLCBoZSBzYWlkLCBhdCB0aGUgYmlkZGluZyBvZiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+LCBldmVyeSBtYW4gb2YgdGhlbSBhcm9zZSwgZXZlbiBPcm9udGFzJyBraW5zbWVuLCBhbmQgdG9vayBoaW0gYnkgdGhlIGdpcmRsZSwgYXMgYSBzaWduIHRoYXQgaGUgd2FzIGNvbmRlbW5lZCB0byBkZWF0aDsgYW5kIHRoZW4gdGhvc2UgdG8gd2hvbSB0aGUgZHV0eSB3YXMgYXNzaWduZWQgbGVkIGhpbSBvdXQuIEFuZCB3aGVuIHRoZSBtZW4gd2hvIGluIGZvcm1lciBkYXlzIHdlcmUgd29udCB0byBkbyBoaW0gaG9tYWdlIHNhdyBoaW0sIHRoZXkgbWFkZSB0aGVpciBvYmVpc2FuY2UgZXZlbiB0aGVuLCBhbHRob3VnaCB0aGV5IGtuZXcgdGhhdCBoZSB3YXMgYmVpbmcgbGVkIGZvcnRoIHRvIGRlYXRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgYWZ0ZXIgaGUgaGFkIGJlZW4gY29uZHVjdGVkIGludG8gdGhlIHRlbnQgb2YgQXJ0YXBhdGVzLCB0aGUgbW9zdCBmYWl0aGZ1bCBvZiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+JyBjaGFtYmVybGFpbnMsIGZyb20gdGhhdCBtb21lbnQgbm8gbWFuIGV2ZXIgc2F3IE9yb250YXMgbGl2aW5nIG9yIGRlYWQsIG5vciBjb3VsZCBhbnlvbmUgc2F5IGZyb20gYWN0dWFsIGtub3dsZWRnZSBob3cgaGUgd2FzIHB1dCB0byBkZWF0aCzigJRpdCB3YXMgYWxsIGNvbmplY3R1cmVzLCBvZiBvbmUgc29ydCBhbmQgYW5vdGhlcjsgYW5kIG5vIGdyYXZlIG9mIGhpcyB3YXMgZXZlciBzZWVuLgogICAgPC90cmFuc2xhdGlvbj4="
translation['1.7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gcm9tIHRoZXJlIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gbWFyY2hlZCB0aHJvdWdoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEzMjU1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTMyNTUiPkJhYnlsb25pYTwvcGxhY2VOYW1lPiB0aHJlZSBzdGFnZXMsIHR3ZWx2ZSBwYXJhc2FuZ3MuIE9uIHRoZSB0aGlyZCBzdGFnZSBoZSBoZWxkIGEgcmV2aWV3IG9mIHRoZSBHcmVla3MgYW5kIHRoZSBiYXJiYXJpYW5zIG9uIHRoZSBwbGFpbiBhdCBhYm91dCBtaWRuaWdodDsgZm9yIGhlIHRob3VnaHQgdGhhdCBhdCB0aGUgbmV4dCBkYXduIHRoZSBLaW5nIHdvdWxkIGNvbWUgd2l0aCBoaXMgYXJteSB0byBkbyBiYXR0bGU7IGFuZCBoZSBvcmRlcmVkIENsZWFyY2h1cyB0byBhY3QgYXMgY29tbWFuZGVyIG9mIHRoZSByaWdodCB3aW5nIGFuZCBNZW5vbiBvZiB0aGUgbGVmdCwgd2hpbGUgaGUgaGltc2VsZiBtYXJzaGFsbGVkIGhpcyBvd24gdHJvb3BzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBtb3JuaW5nIGZvbGxvd2luZyB0aGUgcmV2aWV3LCBhdCBkYXlicmVhaywgdGhlcmUgY2FtZSBkZXNlcnRlcnMgZnJvbSB0aGUgZ3JlYXQgS2luZyBhbmQgYnJvdWdodCByZXBvcnRzIHRvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gYWJvdXQgaGlzIGFybXkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkF0IHRoaXMgdGltZSA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGNhbGxlZCB0b2dldGhlciB0aGUgZ2VuZXJhbHMgYW5kIGNhcHRhaW5zIG9mIHRoZSBHcmVla3MsIGFuZCBub3Qgb25seSB0b29rIGNvdW5zZWwgd2l0aCB0aGVtIGFzIHRvIGhvdyBoZSBzaG91bGQgZmlnaHQgdGhlIGJhdHRsZSwgYnV0LCBmb3IgaGlzIG93biBwYXJ0LCBleGhvcnRlZCBhbmQgZW5jb3VyYWdlZCB0aGVtIGFzIGZvbGxvd3M6CjwvdHJhbnNsYXRpb24+"
translation['1.7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPuKAnE1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIGl0IGlzIG5vdCBiZWNhdXNlIEkgaGF2ZSBub3QgYmFyYmFyaWFucyBlbm91Z2ggdGhhdCBJIGhhdmUgYnJvdWdodCB5b3UgaGl0aGVyIHRvIGZpZ2h0IGZvciBtZTsgYnV0IGJlY2F1c2UgSSBiZWxpZXZlIHRoYXQgeW91IGFyZSBicmF2ZXIgYW5kIHN0cm9uZ2VyIHRoYW4gbWFueSBiYXJiYXJpYW5zLCBmb3IgdGhpcyByZWFzb24gSSB0b29rIHlvdSBhbHNvLiBCZSBzdXJlLCB0aGVyZWZvcmUsIHRvIGJlIG1lbiB3b3J0aHkgb2YgdGhlIGZyZWVkb20geW91IHBvc3Nlc3MsIHVwb24gdGhlIHBvc3Nlc3Npb24gb2Ygd2hpY2ggSSBjb25ncmF0dWxhdGUgeW91LiBGb3IgeW91IG1heSBiZSBjZXJ0YWluIHRoYXQgZnJlZWRvbSBpcyB0aGUgdGhpbmcgSSBzaG91bGQgY2hvb3NlIGluIHByZWZlcmVuY2UgdG8gYWxsIHRoYXQgSSBoYXZlIGFuZCBtYW55IHRpbWVzIG1vcmUuCjwvdHJhbnNsYXRpb24+"
translation['1.7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBub3csIGluIG9yZGVyIHRoYXQgeW91IG1heSBrbm93IHdoYXQgc29ydCBvZiBhIGNvbnRlc3QgaXQgaXMgaW50byB3aGljaCB5b3UgYXJlIGdvaW5nLCBJIHdobyBkbyBrbm93IHdpbGwgdGVsbCB5b3UuIE91ciBlbmVtaWVzIGhhdmUgZ3JlYXQgbnVtYmVycyBhbmQgdGhleSB3aWxsIGNvbWUgb24gd2l0aCBhIGdyZWF0IG91dGNyeTsgZm9yIHRoZSByZXN0LCBob3dldmVyLCBpZiB5b3UgY2FuIGhvbGQgb3V0IGFnYWluc3QgdGhlc2UgdGhpbmdzLCBJIGFtIGFzaGFtZWQsIEkgYXNzdXJlIHlvdSwgdG8gdGhpbmsgd2hhdCBzb3JyeSBmZWxsb3dzIHlvdSB3aWxsIGZpbmQgdGhlIHBlb3BsZSBvZiBvdXIgY291bnRyeSB0byBiZS4gQnV0IGlmIHlvdSBiZSBtZW4gYW5kIGlmIG15IHVuZGVydGFraW5nIHR1cm4gb3V0IHdlbGwsIEkgc2hhbGwgbWFrZSBhbnlvbmUgYW1vbmcgeW91IHdobyB3aXNoZXMgdG8gcmV0dXJuIGhvbWUgYW4gb2JqZWN0IG9mIGVudnkgdG8gaGlzIGZyaWVuZHMgYXQgaG9tZSB1cG9uIGhpcyByZXR1cm4sIHdoaWxlIEkgc2hhbGwgY2F1c2UgbWFueSBvZiB5b3UsIEkgaW1hZ2luZSwgdG8gY2hvb3NlIGxpZmUgd2l0aCBtZSBpbiBwcmVmZXJlbmNlIHRvIGxpZmUgYXQgaG9tZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZXJldXBvbiBHYXVsaXRlcywgYSBTYW1pYW4gZXhpbGUgd2hvIHdhcyB0aGVyZSBhbmQgd2FzIGluIHRoZSBjb25maWRlbmNlIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIHNhaWQ6IOKAnEFuZCB5ZXQsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIHRoZXJlIGFyZSB0aG9zZSB3aG8gc2F5IHRoYXQgeW91ciBwcm9taXNlcyBhcmUgYmlnIG5vdyBiZWNhdXNlIHlvdSBhcmUgaW4gc3VjaCBhIGNyaXRpY2FsIHNpdHVhdGlvbuKAlGZvciB0aGUgZGFuZ2VyIGlzIHVwb24geW914oCUYnV0IHRoYXQgaWYgYW55IGdvb2QgZm9ydHVuZSBiZWZhbGwsIHlvdSB3aWxsIGZhaWwgdG8gcmVtZW1iZXIgdGhlbTsgYW5kIHNvbWUgc2F5IHRoYXQgZXZlbiBpZiB5b3Ugc2hvdWxkIHJlbWVtYmVyIGFuZCBoYXZlIHRoZSB3aWxsLCB5b3Ugd291bGQgbm90IGhhdmUgdGhlIG1lYW5zIHRvIG1ha2UgZ29vZCBhbGwgeW91ciBwcm9taXNlcy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlVwb24gaGVhcmluZyB0aGVzZSB3b3JkcyA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHNhaWQ6IOKAnFdlbGwsIGdlbnRsZW1lbiwgbXkgZmF0aGVyJ3MgcmVhbG0gZXh0ZW5kcyB0b3dhcmQgdGhlIHNvdXRoIHRvIGEgcmVnaW9uIHdoZXJlIG1lbiBjYW5ub3QgZHdlbGwgYnkgcmVhc29uIG9mIHRoZSBoZWF0LCBhbmQgdG8gdGhlIG5vcnRoIHRvIGEgcmVnaW9uIHdoZXJlIHRoZXkgY2Fubm90IGR3ZWxsIGJ5IHJlYXNvbiBvZiB0aGUgY29sZDsgYW5kIGFsbCB0aGF0IGxpZXMgYmV0d2VlbiB0aGVzZSBsaW1pdHMgbXkgYnJvdGhlcidzIGZyaWVuZHMgcnVsZSBhcyBzYXRyYXBzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk5vdyBpZiB3ZSB3aW4gdGhlIHZpY3RvcnksIHdlIG11c3QgcHV0IG91ciBmcmllbmRzIGluIGNvbnRyb2wgb2YgdGhlc2UgcHJvdmluY2VzLiBJIGZlYXIsIHRoZXJlZm9yZSwgbm90IHRoYXQgSSBzaGFsbCBub3QgaGF2ZSBlbm91Z2ggdG8gZ2l2ZSB0byBlYWNoIG9mIG15IGZyaWVuZHMsIGlmIHN1Y2Nlc3MgYXR0ZW5kcyB1cywgYnV0IHRoYXQgSSBzaGFsbCBub3QgaGF2ZSBlbm91Z2ggZnJpZW5kcyB0byBnaXZlIHRvLiBBbmQgYXMgZm9yIHlvdSBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LCBJIHNoYWxsIGdpdmUgZWFjaCBvbmUgb2YgeW91IGEgd3JlYXRoIG9mIGdvbGQgYmVzaWRlcy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.7.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSBoZWFyZCB0aGVzZSB3b3JkcywgdGhlIG9mZmljZXJzIHdlcmUgZmFyIG1vcmUgZWFnZXIgdGhlbXNlbHZlcyBhbmQgY2FycmllZCB0aGUgbmV3cyBhd2F5IHdpdGggdGhlbSB0byB0aGUgb3RoZXIgR3JlZWtzLiBUaGVuIHNvbWUgb2YgdGhlIG90aGVycyBhbHNvIHNvdWdodCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+JyBwcmVzZW5jZSwgZGVtYW5kaW5nIHRvIGtub3cgd2hhdCB0aGV5IHNob3VsZCBoYXZlLCBpbiBjYXNlIG9mIHZpY3Rvcnk7IGFuZCBoZSBzYXRpc2ZpZWQgdGhlIGV4cGVjdGF0aW9ucyBvZiBldmVyeSBvbmUgb2YgdGhlbSBiZWZvcmUgZGlzbWlzc2luZyB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk5vdyBhbGwgYWxpa2Ugd2hvIGNvbnZlcnNlZCB3aXRoIGhpbSB1cmdlZCBoaW0gbm90IHRvIHRha2UgcGFydCBpbiB0aGUgZmlnaHRpbmcsIGJ1dCB0byBzdGF0aW9uIGhpbXNlbGYgaW4gdGhlaXIgcmVhci4gVGFraW5nIHRoaXMgb3Bwb3J0dW5pdHkgQ2xlYXJjaHVzIGFza2VkIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gYSBxdWVzdGlvbiBsaWtlIHRoaXM6IOKAnEJ1dCBkbyB5b3UgdGhpbmssIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIHRoYXQgeW91ciBicm90aGVyIHdpbGwgZmlnaHQgd2l0aCB5b3U/4oCdIOKAnFllcywgYnkgWmV1cyzigJ0gc2FpZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+LCDigJxpZiBoZSBpcyByZWFsbHkgYSBzb24gb2YgRGFyaXVzIGFuZCBQYXJ5c2F0aXMgYW5kIGEgYnJvdGhlciBvZiBtaW5lLCBJIHNoYWxsIG5vdCB3aW4gdGhpcyByZWFsbSB3aXRob3V0IGZpZ2h0aW5nIGZvciBpdC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.7.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyB0aW1lLCB3aGVuIHRoZSB0cm9vcHMgd2VyZSBtYXJzaGFsbGVkIHVuZGVyIGFybXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gaW4gdGhlIHJldmlldyBtZW50aW9uZWQgaW4gMS48L25vdGU+IHRoZSBudW1iZXIgb2YgdGhlIEdyZWVrcyB3YXMgZm91bmQgdG8gYmUgdGVuIHRob3VzYW5kIGZvdXIgaHVuZHJlZCBob3BsaXRlcywgYW5kIHR3byB0aG91c2FuZCBmaXZlIGh1bmRyZWQgcGVsdGFzdHMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZXJlIGlzIGEgZGlzY3JlcGFuY3ksIGFzIHlldCB1bmV4cGxhaW5lZCwgYmV0d2VlbiB0aGVzZSBudW1iZXJzIGFuZCB0aG9zZSBwcmV2aW91c2x5IGdpdmVuLiBjcC4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjIuOSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjIuOTwvYmlibD4gYW5kIG5vdGU7IGFsc28gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjIuMjUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4yLjI1PC9iaWJsPiBhbmQgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjQuMyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjQuMzwvYmlibD4uPC9ub3RlPiB3aGlsZSB0aGUgbnVtYmVyIG9mIHRoZSBiYXJiYXJpYW5zIHVuZGVyIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4yLjkiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4yLjk8L2JpYmw+IGFuZCBub3RlOyBhbHNvIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4yLjI1IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMi4yNTwvYmlibD4gYW5kIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS40LjMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS40LjM8L2JpYmw+LjxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gd2FzIG9uZSBodW5kcmVkIHRob3VzYW5kIGFuZCB0aGVyZSB3ZXJlIGFib3V0IHR3ZW50eSBzY3l0aGUtYmVhcmluZyBjaGFyaW90cy4KPC90cmFuc2xhdGlvbj4="
translation['1.7.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZW5lbXksIGl0IHdhcyByZXBvcnRlZCwgbnVtYmVyZWQgb25lIG1pbGxpb24gdHdvIGh1bmRyZWQgdGhvdXNhbmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIG51bWJlciBpcyBwcm9iYWJseSBvdmVyc3RhdGVkLiBDdGVzaWFzLCB0aGUgS2luZydzIEdyZWVrIHBoeXNpY2lhbiAoc2VlIHZpaWkuIDI2KSwgaXMgc2FpZCBieSBQbHV0YXJjaCAoPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QXJ0YXguPC90aXRsZT4gMTMpIHRvIGhhdmUgZ2l2ZW4gaXQgYXMgNDAwLDAwMC48L25vdGU+IGFuZCBoYWQgdHdvIGh1bmRyZWQgc2N5dGhlLWJlYXJpbmcgY2hhcmlvdHM7IGJlc2lkZXMsIHRoZXJlIHdhcyBhIHRyb29wIG9mIHNpeCB0aG91c2FuZCBob3JzZW1lbiwgdW5kZXIgdGhlIGNvbW1hbmQgb2YgQXJ0YWdlcnNlcywgd2hpY2ggd2FzIHN0YXRpb25lZCBpbiBmcm9udCBvZiB0aGUgS2luZyBoaW1zZWxmLgo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BcnRheC48L3RpdGxlPiAxMykgdG8gaGF2ZSBnaXZlbiBpdCBhcyA0MDAsMDAwLjwvdHJhbnNsYXRpb24+"
translation['1.7.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIEtpbmcncyBhcm15IGhhZCBmb3VyIGNvbW1hbmRlcnMsIGVhY2ggYXQgdGhlIGhlYWQgb2YgdGhyZWUgaHVuZHJlZCB0aG91c2FuZCBtZW4sIG5hbWVseSwgQWJyb2NvbWFzLCBUaXNzYXBoZXJuZXMsIEdvYnJ5YXMsIGFuZCBBcmJhY2VzLiBCdXQgb2YgdGhlIGZvcmNlcyBqdXN0IGVudW1lcmF0ZWQgb25seSBuaW5lIGh1bmRyZWQgdGhvdXNhbmQsIHdpdGggb25lIGh1bmRyZWQgYW5kIGZpZnR5IHNjeXRoZS1iZWFyaW5nIGNoYXJpb3RzLCB3ZXJlIHByZXNlbnQgYXQgdGhlIGJhdHRsZTsgZm9yIEFicm9jb21hcywgbWFyY2hpbmcgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwNDY4NyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDA0Njg3Ij5QaG9lbmljaWE8L3BsYWNlTmFtZT4sIGFycml2ZWQgZml2ZSBkYXlzIHRvbyBsYXRlIGZvciB0aGUgZW5nYWdlbWVudC4KPC90cmFuc2xhdGlvbj4="
translation['1.7.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5TdWNoIHdlcmUgdGhlIHJlcG9ydHMgYnJvdWdodCB0byA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGJ5IHRob3NlIHdobyBkZXNlcnRlZCBmcm9tIHRoZSBHcmVhdCBLaW5nIGJlZm9yZSB0aGUgYmF0dGxlLCBhbmQgYWZ0ZXIgdGhlIGJhdHRsZSBpZGVudGljYWwgcmVwb3J0cyB3ZXJlIG1hZGUgYnkgdGhlIHByaXNvbmVycyB0YWtlbiB0aGVyZWFmdGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnJvbSB0aGVyZSA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IG1hcmNoZWQgb25lIHN0YWdlLCB0aHJlZSBwYXJhc2FuZ3MsIHdpdGggaGlzIHdob2xlIGFybXksIEdyZWVrIGFuZCBiYXJiYXJpYW4gYWxpa2UsIGRyYXduIHVwIGluIGxpbmUgb2YgYmF0dGxlOyBmb3IgaGUgc3VwcG9zZWQgdGhhdCBvbiB0aGF0IGRheSB0aGUgS2luZyB3b3VsZCBjb21lIHRvIGFuIGVuZ2FnZW1lbnQ7IGZvciBhYm91dCBtaWR3YXkgb2YgdGhpcyBkYXkncyBtYXJjaCB0aGVyZSB3YXMgYSBkZWVwIHRyZW5jaCwgZml2ZSBmYXRob21zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9gM+BzrPPheG9sTwvZm9yZWlnbj4gPSB0aGUgcmVhY2ggb2YgdGhlIG91dHN0cmV0Y2hlZCBhcm1zIChjcC4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2Az4HhvbPOs8+JPC9mb3JlaWduPiksIG9yLCBhcyBhbiBleGFjdCB1bml0IG9mIG1lYXN1cmVtZW50LCA2IEdyZWVrIGZlZXQgPSA1IGZ0LiAxMCBpbi4gRW5nbGlzaCBtZWFzdXJlLjwvbm90ZT4gaW4gd2lkdGggYW5kIHRocmVlIGZhdGhvbXMgaW4gZGVwdGguCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9gM+BzrPPheG9sTwvZm9yZWlnbj4gPSB0aGUgcmVhY2ggb2YgdGhlIG91dHN0cmV0Y2hlZCBhcm1zIChjcC4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2Az4HhvbPOs8+JPC9mb3JlaWduPiksIG9yLCBhcyBhbiBleGFjdCB1bml0IG9mIG1lYXN1cmVtZW50LCA2IEdyZWVrIGZlZXQgPSA1IGZ0LiAxMCBpbi4gRW5nbGlzaCBtZWFzdXJlLjwvdHJhbnNsYXRpb24+"
translation['1.7.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIHRyZW5jaCBleHRlbmRlZCB1cCB0aHJvdWdoIHRoZSBwbGFpbiBmb3IgYSBkaXN0YW5jZSBvZiB0d2VsdmUgcGFyYXNhbmdzLCByZWFjaGluZyB0byB0aGUgd2FsbCBvZiBNZWRpYSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+RGVzY3JpYmVkIGJ5IFhlbm9waG9uIGluIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi40LjEyIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuNC4xMjwvYmlibD4uIEl0IGV4dGVuZGVkIGZyb20gdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTIzODQyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMjM4NDIiPkV1cGhyYXRlczwvcGxhY2VOYW1lPiBub3J0aCBlYXN0IHRvIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTEzMDg1MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTMwODUwIj5UaWdyaXM8L3BsYWNlTmFtZT4sIGFuZCB3YXMgYnVpbHQgYnkgdGhlIEJhYnlsb25pYW5zLCBhcHBhcmVudGx5IGluIHRoZSBzaXh0aCBjZW50dXJ5IEIuQy4sIGFzIGEgZGVmZW5jZSBhZ2FpbnN0IHRoZSBNZWRlcy4gSXQgaXMgc3VwcG9zZWQgdGhhdCB0aGUgc291dGhlcm4gcGFydCBvZiB0aGUgd2FsbCB3YXMgbm93IGluIHJ1aW5zLiBTdWNoIGEgc3VwcG9zaXRpb24gc2VydmVzIHRvIGV4cGxhaW4gKDEpIHRoZSBuZWVkIG9mIHRoZSBLaW5nJ3MgdHJlbmNoLCBhbmQgKDIpIHRoZSBmYWN0IHRoYXQgWGVub3Bob24gZG9lcyBub3QgZGVzY3JpYmUgdGhlIHdhbGwgaGVyZSwgYnV0IG9ubHkgaW4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjQuMTIiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi40LjEyPC9iaWJsPi48L25vdGU+IFtIZXJlIGFsc28gYXJlIHRoZSBjYW5hbHMsIHdoaWNoIGZsb3cgZnJvbSB0aGUgVGlncmlzIHJpdmVyOyB0aGV5IGFyZSBmb3VyIGluIG51bWJlciwgZWFjaCBhIHBsZXRocnVtIHdpZGUgYW5kIGV4Y2VlZGluZ2x5IGRlZXAsIGFuZCBncmFpbi1jYXJyeWluZyBzaGlwcyBwbHkgaW4gdGhlbTsgdGhleSBlbXB0eSBpbnRvIHRoZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuNC4xMiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjQuMTI8L2JpYmw+LiBJdCBleHRlbmRlZCBmcm9tIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTEyMzg0MiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTIzODQyIj5FdXBocmF0ZXM8L3BsYWNlTmFtZT4gbm9ydGggZWFzdCB0byB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDExMzA4NTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTEzMDg1MCI+VGlncmlzPC9wbGFjZU5hbWU+LCBhbmQgd2FzIGJ1aWx0IGJ5IHRoZSBCYWJ5bG9uaWFucywgYXBwYXJlbnRseSBpbiB0aGUgc2l4dGggY2VudHVyeSBCLkMuLCBhcyBhIGRlZmVuY2UgYWdhaW5zdCB0aGUgTWVkZXMuIEl0IGlzIHN1cHBvc2VkIHRoYXQgdGhlIHNvdXRoZXJuIHBhcnQgb2YgdGhlIHdhbGwgd2FzIG5vdyBpbiBydWlucy4gU3VjaCBhIHN1cHBvc2l0aW9uIHNlcnZlcyB0byBleHBsYWluICgxKSB0aGUgbmVlZCBvZiB0aGUgS2luZydzIHRyZW5jaCwgYW5kICgyKSB0aGUgZmFjdCB0aGF0IFhlbm9waG9uIGRvZXMgbm90IGRlc2NyaWJlIHRoZSB3YWxsIGhlcmUsIGJ1dCBvbmx5IGluIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi40LjEyIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuNC4xMjwvYmlibD4uPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDExMjM4NDIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTEyMzg0MiI+RXVwaHJhdGVzPC9wbGFjZU5hbWU+IGFuZCBhcmUgYSBwYXJzYW5nIGFwYXJ0LCBhbmQgdGhlcmUgYXJlIGJyaWRnZXMgb3ZlciB0aGVtLl0gYW5kIGFsb25nc2lkZSB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDExMjM4NDIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTEyMzg0MiI+RXVwaHJhdGVzPC9wbGFjZU5hbWU+IHRoZXJlIHdhcyBhIG5hcnJvdyBwYXNzYWdlLCBub3QgbW9yZSB0aGFuIGFib3V0IHR3ZW50eSBmZWV0IGluIHdpZHRoLCBiZXR3ZWVuIHRoZSByaXZlciBhbmQgdGhlIHRyZW5jaDsKPC90cmFuc2xhdGlvbj4="
translation['1.7.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgdGhlIHRyZW5jaDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JdCB3b3VsZCBzZWVtIHRoYXQgdGhlIHJhcGlkIGFwcHJvYWNoIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gaGFkIHByZXZlbnRlZCB0aGUgS2luZyBmcm9tIGNvbXBsZXRpbmcgdGhlIHRyZW5jaC48L25vdGU+IGhhZCBiZWVuIGNvbnN0cnVjdGVkIGJ5IHRoZSBHcmVhdCBLaW5nIGFzIGEgbWVhbnMgb2YgZGVmZW5jZSB3aGVuIGhlIGxlYXJuZWQgdGhhdCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGhhZCBwcmV2ZW50ZWQgdGhlIEtpbmcgZnJvbSBjb21wbGV0aW5nIHRoZSB0cmVuY2guPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiB3YXMgbWFyY2hpbmcgYWdhaW5zdCBoaW0uIEFjY29yZGluZ2x5IDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gYW5kIGhpcyBhcm15IHdlbnQgdGhyb3VnaCBieSB0aGUgcGFzc2FnZSBqdXN0IG1lbnRpb25lZCwgYW5kIHNvIGZvdW5kIHRoZW1zZWx2ZXMgb24gdGhlIGlubmVyIHNpZGUgb2YgdGhlIHRyZW5jaC4KPC90cmFuc2xhdGlvbj4="
translation['1.7.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgb24gdGhhdCBkYXkgdGhlIEtpbmcgZGlkIG5vdCBvZmZlciBiYXR0bGUsIGJ1dCB0cmFja3Mgb2YgYm90aCBob3JzZXMgYW5kIG1lbiBpbiByZXRyZWF0IHdlcmUgdG8gYmUgc2VlbiBpbiBncmVhdCBudW1iZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gc3VtbW9uZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwNDY5MTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTA0NjkxMSI+U2lsYW51czwvcGxhY2VOYW1lPiwgaGlzIEFtYnJhY2lvdCBzb290aHNheWVyLCBhbmQgZ2F2ZSBoaW0gdGhyZWUgdGhvdXNhbmQgZGFyaWNzOyBmb3Igb24gdGhlIGVsZXZlbnRoIGRheSBiZWZvcmUgdGhpcywgd2hpbGUgc2FjcmlmaWNpbmcsIGhlIGhhZCB0b2xkIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gdGhhdCB0aGUgS2luZyB3b3VsZCBub3QgZmlnaHQgd2l0aGluIHRlbiBkYXlzLCBhbmQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBoYWQgc2FpZDog4oCcVGhlbiBoZSB3aWxsIG5vdCBmaWdodCBhdCBhbGwsIGlmIGhlIHdpbGwgbm90IGZpZ2h0IHdpdGhpbiB0ZW4gZGF5czsgaG93ZXZlciwgaWYgeW91ciBwcmVkaWN0aW9uIHByb3ZlcyB0cnVlLCBJIHByb21pc2UgeW91IHRlbiB0YWxlbnRzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5IZW5jZSAxMCAoQXR0aWMpIHRhbGVudHMgPSAzLDAwMCAoUGVyc2lhbikgZGFyaWNzLiBBIHRhbGVudCB3YXMgNjAgbWluYXMsIGFuZCB0aGVyZWZvcmUgYSBtaW5hIHdhcyBjb3VudGVkIGVxdWl2YWxlbnQgdG8gNSBkYXJpY3MuIFRoZSBkaXNjcmVwYW5jeSBiZXR3ZWVuIHRoaXMgcmVzdWx0IGFuZCB0aGUgdmFsdWVzIHN0YXRlZCBwcmV2aW91c2x5IChzZWUgbm90ZXMgb24gaS4gOSBhbmQgaXYuIDEzKSBpcyBleHBsYWluZWQgYnkgdGhlIGZhY3QgdGhhdCBzaWx2ZXIgd2FzIHdvcnRoIG11Y2ggbW9yZSBhdCB0aGlzIHRpbWUsIHJlbGF0aXZlbHkgdG8gZ29sZCwgdGhhbiBhdCBwcmVzZW50Ljwvbm90ZT7igJ0gU28gaXQgd2FzIHRoaXMgbW9uZXkgdGhhdCBoZSB0aGVuIHBhaWQgb3ZlciwgdGhlIHRlbiBkYXlzIGhhdmluZyBwYXNzZWQuCjwvdHJhbnNsYXRpb24+"
translation['1.7.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgc2luY2UgdGhlIEtpbmcgZGlkIG5vdCBhcHBlYXIgYXQgdGhlIHRyZW5jaCBhbmQgdHJ5IHRvIHByZXZlbnQgdGhlIHBhc3NhZ2Ugb2YgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPicgYXJteSwgYm90aCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFuZCB0aGUgcmVzdCBjb25jbHVkZWQgdGhhdCBoZSBoYWQgZ2l2ZW4gdXAgdGhlIGlkZWEgb2YgZmlnaHRpbmcuIEhlbmNlIG9uIHRoZSBmb2xsb3dpbmcgZGF5IDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gcHJvY2VlZGVkIG1vcmUgY2FyZWxlc3NseTsKPC90cmFuc2xhdGlvbj4="
translation['1.7.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgb24gdGhlIHRoaXJkIGRheSBoZSB3YXMgbWFraW5nIHRoZSBtYXJjaCBzZWF0ZWQgaW4gaGlzIGNoYXJpb3QgYW5kIHdpdGggb25seSBhIHNtYWxsIGJvZHkgb2YgdHJvb3BzIGRyYXduIHVwIGluIGxpbmUgaW4gZnJvbnQgb2YgaGltLCB3aGlsZSB0aGUgZ3JlYXRlciBwYXJ0IG9mIHRoZSBhcm15IHdhcyBwcm9jZWVkaW5nIGluIGRpc29yZGVyIGFuZCBtYW55IG9mIHRoZSBzb2xkaWVycycgYXJtcyBhbmQgYWNjb3V0cmVtZW50cyB3ZXJlIGJlaW5nIGNhcnJpZWQgaW4gd2Fnb25zIGFuZCBvbiBwYWNrLWFuaW1hbHMuCjwvdHJhbnNsYXRpb24+"
translation['1.8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3YXMgbm93IGFib3V0IGZ1bGwtbWFya2V0IHRpbWU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiB0aGUgbWlkZGxlIG9mIHRoZSBmb3Jlbm9vbi48L25vdGU+IGFuZCB0aGUgc3RvcHBpbmctcGxhY2Ugd2hlcmUgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiB3YXMgaW50ZW5kaW5nIHRvIGhhbHQgaGFkIGJlZW4gYWxtb3N0IHJlYWNoZWQsIHdoZW4gUGF0ZWd5YXMsIGEgdHJ1c3R5IFBlcnNpYW4gb2YgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPicgc3RhZmYsIGNhbWUgaW50byBzaWdodCwgcmlkaW5nIGF0IGZ1bGwgc3BlZWQsIHdpdGggaGlzIGhvcnNlIGluIGEgc3dlYXQsIGFuZCBhdCBvbmNlIHNob3V0ZWQgb3V0IHRvIGV2ZXJ5b25lIGhlIG1ldCwgaW4gdGhlIGJhcmJhcmlhbiB0b25ndWUgYW5kIGluIEdyZWVrLCB0aGF0IHRoZSBLaW5nIHdhcyBhcHByb2FjaGluZyB3aXRoIGEgbGFyZ2UgYXJteSwgYWxsIHJlYWR5IGZvciBiYXR0bGUuCjwvdHJhbnNsYXRpb24+"
translation['1.8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gZW5zdWVkIGdyZWF0IGNvbmZ1c2lvbjsgZm9yIHRoZSB0aG91Z2h0IG9mIHRoZSBHcmVla3MsIGFuZCBvZiBhbGwgdGhlIHJlc3QgaW4gZmFjdCwgd2FzIHRoYXQgaGUgd291bGQgZmFsbCB1cG9uIHRoZW0gaW1tZWRpYXRlbHksIHdoaWxlIHRoZXkgd2VyZSBpbiBkaXNvcmRlcjsKPC90cmFuc2xhdGlvbj4="
translation['1.8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPmFuZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGxlYXBlZCBkb3duIGZyb20gaGlzIGNoYXJpb3QsIHB1dCBvbiBoaXMgYnJlYXN0cGxhdGUsIGFuZCB0aGVuLCBtb3VudGluZyBoaXMgaG9yc2UsIHRvb2sgaGlzIHNwZWFycyBpbiBoaXMgaGFuZHMgYW5kIHBhc3NlZCB0aGUgd29yZCB0byBhbGwgdGhlIG90aGVycyB0byBhcm0gdGhlbXNlbHZlcyBhbmQgZ2V0IGludG8gdGhlaXIgcGxhY2VzLCBldmVyeSBtYW4gb2YgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['1.8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJldXBvbiB0aGV5IHByb2NlZWRlZCBpbiBncmVhdCBoYXN0ZSB0byB0YWtlIHRoZWlyIHBsYWNlcywgQ2xlYXJjaHVzIG9jY3VweWluZyB0aGUgcmlnaHQgZW5kIG9mIHRoZSBHcmVlayB3aW5nLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIHRoZSBHcmVlayBhcm15IGFzIGEgd2hvbGUgY29uc3RpdHV0ZWQgdGhlIHJpZ2h0IHdpbmcgb2YgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPicgZW50aXJlIGFybXksIGhpcyBQZXJzaWFuIHRyb29wcyBmb3JtaW5nIHRoZSBjZW50cmUgYW5kIHRoZSBsZWZ0IHdpbmcuIENsZWFyY2h1cyBhbmQgTWVub24sIHRoZW4sIG9jY3VweSB0aGUgcmlnaHQgYW5kIGxlZnQgd2luZ3MsIHJlc3BlY3RpdmVseSwgb2YgdGhlIEdyZWVrIGNvbnRpbmdlbnQuPC9ub3RlPiBjbG9zZSB0byB0aGUgRXVwaHJhdGVzIHJpdmVyLCBQcm94ZW51cyBuZXh0IHRvIGhpbSwgYW5kIHRoZSBvdGhlcnMgYmV5b25kIFByb3hlbnVzLCB3aGlsZSBNZW5vbiBhbmQgaGlzIGFybXkgdG9vayB0aGUgbGVmdCBlbmQgb2YgdGhlIEdyZWVrIHdpbmcuCjxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4nIGVudGlyZSBhcm15LCBoaXMgUGVyc2lhbiB0cm9vcHMgZm9ybWluZyB0aGUgY2VudHJlIGFuZCB0aGUgbGVmdCB3aW5nLiBDbGVhcmNodXMgYW5kIE1lbm9uLCB0aGVuLCBvY2N1cHkgdGhlIHJpZ2h0IGFuZCBsZWZ0IHdpbmdzLCByZXNwZWN0aXZlbHksIG9mIHRoZSBHcmVlayBjb250aW5nZW50LjwvdHJhbnNsYXRpb24+"
translation['1.8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciB0aGUgYmFyYmFyaWFucywgUGFwaGxhZ29uaWFuIGhvcnNlbWVuIHRvIHRoZSBudW1iZXIgb2YgYSB0aG91c2FuZCB0b29rIHN0YXRpb24gYmVzaWRlIENsZWFyY2h1cyBvbiB0aGUgcmlnaHQgd2luZywgYXMgZGlkIHRoZSBHcmVlayBwZWx0YXN0cywgb24gdGhlIGxlZnQgd2FzIEFyaWFldXMsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4nIGxpZXV0ZW5hbnQsIHdpdGggdGhlIHJlc3Qgb2YgdGhlIGJhcmJhcmlhbiBhcm15LAo8L3RyYW5zbGF0aW9uPg=="
translation['1.8.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPmFuZCBpbiB0aGUgY2VudHJlIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gYW5kIGhpcyBob3JzZW1lbiwgYWJvdXQgc2l4IGh1bmRyZWQgaW4gbnVtYmVyLiBUaGVzZSB0cm9vcGVycyB3ZXJlIGFybWVkIHdpdGggYnJlYXN0cGxhdGVzIGFuZCB0aGlnaC1waWVjZXMgYW5kLCBhbGwgb2YgdGhlbSBleGNlcHQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiwgd2l0aCBoZWxtZXRz4oCUPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiwgaG93ZXZlciwgd2VudCBpbnRvIHRoZSBiYXR0bGUgd2l0aCBoaXMgaGVhZCB1bnByb3RlY3RlZC4gW0luIGZhY3QsIGl0IGlzIHNhaWQgb2YgdGhlIFBlcnNpYW5zIGluIGdlbmVyYWwgdGhhdCB0aGV5IHZlbnR1cmUgYWxsIHRoZSBwZXJpbHMgb2Ygd2FyIHdpdGggdGhlaXIgaGVhZHMgdW5wcm90ZWN0ZWQuXQo8L3RyYW5zbGF0aW9uPg=="
translation['1.8.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBhbGwgdGhlaXIgaG9yc2VzIFt3aXRoIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT5dIGhhZCBmcm9udGxldHMgYW5kIGJyZWFzdC1waWVjZXM7IGFuZCB0aGUgbWVuIGNhcnJpZWQsIGJlc2lkZXMgdGhlaXIgb3RoZXIgd2VhcG9ucywgR3JlZWsgc2FicmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.8.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgbm93IGl0IHdhcyBtaWRkYXksIGFuZCB0aGUgZW5lbXkgd2VyZSBub3QgeWV0IGluIHNpZ2h0OyBidXQgd2hlbiBhZnRlcm5vb24gd2FzIGNvbWluZyBvbiwgdGhlcmUgd2FzIHNlZW4gYSByaXNpbmcgZHVzdCwgd2hpY2ggYXBwZWFyZWQgYXQgZmlyc3QgbGlrZSBhIHdoaXRlIGNsb3VkLCBidXQgc29tZSB0aW1lIGxhdGVyIGxpa2UgYSBraW5kIG9mIGJsYWNrbmVzcyBpbiB0aGUgcGxhaW4sIGV4dGVuZGluZyBvdmVyIGEgZ3JlYXQgZGlzdGFuY2UuIEFzIHRoZSBlbmVteSBjYW1lIG5lYXJlciBhbmQgbmVhcmVyLCB0aGVyZSB3ZXJlIHByZXNlbnRseSBmbGFzaGVzIG9mIGJyb256ZSBoZXJlIGFuZCB0aGVyZSwgYW5kIHNwZWFycyBhbmQgdGhlIGhvc3RpbGUgcmFua3MgYmVnYW4gdG8gY29tZSBpbnRvIHNpZ2h0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.8.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIHdlcmUgaG9yc2VtZW4gaW4gd2hpdGUgY3VpcmFzc2VzIG9uIHRoZSBsZWZ0IHdpbmcgb2YgdGhlIGVuZW15LCB1bmRlciB0aGUgY29tbWFuZCwgaXQgd2FzIHJlcG9ydGVkLCBvZiBUaXNzYXBoZXJuZXM7IG5leHQgdG8gdGhlbSB3ZXJlIHRyb29wcyB3aXRoIHdpY2tlciBzaGllbGRzIGFuZCwgZmFydGhlciBvbiwgaG9wbGl0ZXMgd2l0aCB3b29kZW4gc2hpZWxkcyB3aGljaCByZWFjaGVkIHRvIHRoZWlyIGZlZXQsIHRoZXNlIGxhdHRlciBiZWluZyBFZ3lwdGlhbnMsIHBlb3BsZSBzYWlkOyBhbmQgdGhlbiBtb3JlIGhvcnNlbWVuIGFuZCBtb3JlIGJvd21lbi4gQWxsIHRoZXNlIHRyb29wcyB3ZXJlIG1hcmNoaW5nIGluIG5hdGlvbmFsIGRpdmlzaW9ucywgZWFjaCBuYXRpb24gaW4gYSBzb2xpZCBzcXVhcmUuCjwvdHJhbnNsYXRpb24+"
translation['1.8.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5JbiBmcm9udCBvZiB0aGVtIHdlcmUgdGhlIHNvLWNhbGxlZCBzY3l0aGUtYmVhcmluZyBjaGFyaW90cywgYXQgc29tZSBkaXN0YW5jZSBmcm9tIG9uZSBhbm90aGVyOyBhbmQgdGhlIHNjeXRoZXMgdGhleSBjYXJyaWVkIHJlYWNoZWQgb3V0IHNpZGV3YXlzIGZyb20gdGhlIGF4bGVzIGFuZCB3ZXJlIGFsc28gc2V0IHVuZGVyIHRoZSBjaGFyaW90IGJvZGllcywgcG9pbnRpbmcgdG93YXJkcyB0aGUgZ3JvdW5kLCBzbyBhcyB0byBjdXQgdG8gcGllY2VzIHdoYXRldmVyIHRoZXkgbWV0OyB0aGUgaW50ZW50aW9uLCB0aGVuLCB3YXMgdGhhdCB0aGV5IHNob3VsZCBkcml2ZSBpbnRvIHRoZSByYW5rcyBvZiB0aGUgR3JlZWtzIGFuZCBjdXQgdGhlIHRyb29wcyB0byBwaWVjZXMuCjwvdHJhbnNsYXRpb24+"
translation['1.8.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIHN0YXRlbWVudCwgaG93ZXZlciwgd2hpY2ggPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBtYWRlIHdoZW4gaGUgY2FsbGVkIHRoZSBHcmVla3MgdG9nZXRoZXIgYW5kIHVyZ2VkIHRoZW0gdG8gaG9sZCBvdXQgYWdhaW5zdCB0aGUgc2hvdXRpbmcgb2YgdGhlIGJhcmJhcmlhbnMsIGhlIHByb3ZlZCB0byBiZSBtaXN0YWtlbiBpbiB0aGlzIHBvaW50OyBmb3IgdGhleSBjYW1lIG9uLCBub3Qgd2l0aCBzaG91dGluZywgYnV0IGluIHRoZSB1dG1vc3Qgc2lsZW5jZSBhbmQgcXVpZXRuZXNzLCB3aXRoIGVxdWFsIHN0ZXAgYW5kIHNsb3dseS4KPC90cmFuc2xhdGlvbj4="
translation['1.8.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyBtb21lbnQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiByb2RlIGFsb25nIHRoZSBsaW5lLCBhdHRlbmRlZCBvbmx5IGJ5IFBpZ3JlcywgaGlzIGludGVycHJldGVyLCBhbmQgdGhyZWUgb3IgZm91ciBvdGhlcnMsIGFuZCBzaG91dGVkIHRvIENsZWFyY2h1cyB0byBsZWFkIGhpcyBhcm15IGFnYWluc3QgdGhlIGVuZW15J3MgY2VudHJlLCBmb3IgdGhlIHJlYXNvbiB0aGF0IHRoZSBLaW5nIHdhcyBzdGF0aW9uZWQgdGhlcmU7IOKAnGFuZCBpZizigJ0gaGUgc2FpZCwg4oCcd2UgYXJlIHZpY3RvcmlvdXMgdGhlcmUsIG91ciB3aG9sZSB0YXNrIGlzIGFjY29tcGxpc2hlZC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.8.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5DbGVhcmNodXMsIGhvd2V2ZXIsIHNpbmNlIGhlIHNhdyB0aGUgY29tcGFjdCBib2R5IGF0IHRoZSBlbmVteSdzIGNlbnRyZSBhbmQgaGVhcmQgZnJvbSA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHRoYXQgdGhlIEtpbmcgd2FzIGJleW9uZCBoaXMgbGVmdCB3aW5nIChmb3IgdGhlIEtpbmcgd2FzIHNvIHN1cGVyaW9yIGluIG51bWJlcnMgdGhhdCwgYWx0aG91Z2ggb2NjdXB5aW5nIHRoZSBjZW50cmUgb2YgaGlzIG93biBsaW5lLCBoZSB3YXMgYmV5b25kIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4nIGxlZnQgd2luZyksIHdhcyB1bndpbGxpbmcgdG8gZHJhdyB0aGUgcmlnaHQgd2luZyBhd2F5IGZyb20gdGhlIHJpdmVyLCBmb3IgZmVhciB0aGF0IGhlIG1pZ2h0IGJlIHR1cm5lZCBvbiBib3RoIGZsYW5rczsgYW5kIGhlIHRvbGQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiwgaW4gcmVwbHksIHRoYXQgaGUgd2FzIHRha2luZyBjYXJlIHRvIG1ha2UgZXZlcnl0aGluZyBnbyB3ZWxsLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.8.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyBjcml0aWNhbCB0aW1lIHRoZSBLaW5nJ3MgYXJteSB3YXMgYWR2YW5jaW5nIGV2ZW5seSwgd2hpbGUgdGhlIEdyZWVrIGZvcmNlLCBzdGlsbCByZW1haW5pbmcgaW4gdGhlIHNhbWUgcGxhY2UsIHdhcyBmb3JtaW5nIGl0cyBsaW5lIGZyb20gdGhvc2Ugd2hvIHdlcmUgc3RpbGwgY29taW5nIHVwLiBBbmQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiwgcmlkaW5nIGFsb25nIGF0IHNvbWUgZGlzdGFuY2UgZnJvbSBoaXMgYXJteSwgd2FzIHRha2luZyBhIHN1cnZleSwgbG9va2luZyBpbiBlaXRoZXIgZGlyZWN0aW9uLCBib3RoIGF0IGhpcyBlbmVtaWVzIGFuZCBoaXMgZnJpZW5kcy4KPC90cmFuc2xhdGlvbj4="
translation['1.8.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIFhlbm9waG9uLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgYXV0aG9yLiBIZSBhbHdheXMgc3BlYWtzIG9mIGhpbXNlbGYgaW4gdGhlIHRoaXJkIHBlcnNvbi48L25vdGU+IGFuIEF0aGVuaWFuLCBzZWVpbmcgaGltIGZyb20gdGhlIEdyZWVrIGFybXksIGFwcHJvYWNoZWQgc28gYXMgdG8gbWVldCBoaW0gYW5kIGFza2VkIGlmIGhlIGhhZCBhbnkgb3JkZXJzIHRvIGdpdmU7IGFuZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHB1bGxlZCB1cCBoaXMgaG9yc2UgYW5kIGJhZGUgWGVub3Bob24gdGVsbCBldmVyeWJvZHkgdGhhdCB0aGUgc2FjcmlmaWNpYWwgdmljdGltcyBhbmQgb21lbnMgd2VyZSBhbGwgZmF2b3VyYWJsZS4KPC90cmFuc2xhdGlvbj4="
translation['1.8.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5XaGlsZSBzYXlpbmcgdGhpcyBoZSBoZWFyZCBhIG5vaXNlIHJ1bm5pbmcgdGhyb3VnaCB0aGUgcmFua3MsIGFuZCBhc2tlZCB3aGF0IHRoZSBub2lzZSB3YXMuIFhlbm9waG9uIHJlcGxpZWQgdGhhdCB0aGUgd2F0Y2h3b3JkIHdhcyBub3cgcGFzc2luZyBhbG9uZyBmb3IgdGhlIHNlY29uZCB0aW1lLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIGJhY2sgYWdhaW4sIGZyb20gdGhlIGxhc3QgbWFuIHRvIHRoZSBmaXJzdC48L25vdGU+IEFuZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHdvbmRlcmVkIHdobyBoYWQgZ2l2ZW4gaXQgb3V0LCBhbmQgYXNrZWQgd2hhdCB0aGUgd2F0Y2h3b3JkIHdhcy4gWGVub3Bob24gcmVwbGllZCDigJxaZXVzIFNhdmlvdXIgYW5kIFZpY3Rvcnku4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.8.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdXBvbiBoZWFyaW5nIHRoaXMgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBzYWlkLCDigJxXZWxsLCBJIGFjY2VwdCBpdCwgYW5kIHNvIGxldCBpdCBiZS7igJ0gQWZ0ZXIgaGUgaGFkIHNhaWQgdGhlc2Ugd29yZHMgaGUgcm9kZSBiYWNrIHRvIGhpcyBvd24gcG9zaXRpb24uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkF0IGxlbmd0aCB0aGUgb3Bwb3NpbmcgbGluZXMgd2VyZSBub3QgdGhyZWUgb3IgZm91ciBzdGFkaWEgYXBhcnQsIGFuZCB0aGVuIHRoZSBHcmVla3Mgc3RydWNrIHVwIHRoZSBwYWVhbiBhbmQgYmVnYW4gdG8gYWR2YW5jZSBhZ2FpbnN0IHRoZSBlbmVteS4KPC90cmFuc2xhdGlvbj4="
translation['1.8.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiwgYXMgdGhleSBwcm9jZWVkZWQsIGEgcGFydCBvZiB0aGUgcGhhbGFueCBiaWxsb3dlZCBvdXQsIHRob3NlIHdobyB3ZXJlIHRodXMgbGVmdCBiZWhpbmQgYmVnYW4gdG8gcnVuOyBhdCB0aGUgc2FtZSBtb21lbnQgdGhleSBhbGwgc2V0IHVwIHRoZSBzb3J0IG9mIHdhci1jcnkgd2hpY2ggdGhleSByYWlzZSB0byBFbnlhbGl1cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiBBcmVzLjwvbm90ZT4gYW5kIGFsbCBhbGlrZSBiZWdhbiBydW5uaW5nLiBJdCBpcyBhbHNvIHJlcG9ydGVkIHRoYXQgc29tZSBvZiB0aGVtIGNsYXNoZWQgdGhlaXIgc2hpZWxkcyBhZ2FpbnN0IHRoZWlyIHNwZWFycywgdGhlcmVieSBmcmlnaHRlbmluZyB0aGUgZW5lbXkncyBob3JzZXMuCjwvdHJhbnNsYXRpb24+"
translation['1.8.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYmVmb3JlIGFuIGFycm93IHJlYWNoZWQgdGhlbSwgdGhlIGJhcmJhcmlhbnMgYnJva2UgYW5kIGZsZWQuIFRoZXJldXBvbiB0aGUgR3JlZWtzIHB1cnN1ZWQgd2l0aCBhbGwgdGhlaXIgbWlnaHQsIGJ1dCBzaG91dGVkIG1lYW53aGlsZSB0byBvbmUgYW5vdGhlciBub3QgdG8gcnVuIGF0IGEgaGVhZGxvbmcgcGFjZSwgYnV0IHRvIGtlZXAgdGhlaXIgcmFua3MgaW4gdGhlIHB1cnN1aXQuCjwvdHJhbnNsYXRpb24+"
translation['1.8.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIGVuZW15J3MgY2hhcmlvdHMsIHNvbWUgb2YgdGhlbSBwbHVuZ2VkIHRocm91Z2ggdGhlIGxpbmVzIG9mIHRoZWlyIG93biB0cm9vcHMsIG90aGVycywgaG93ZXZlciwgdGhyb3VnaCB0aGUgR3JlZWsgbGluZXMsIGJ1dCB3aXRob3V0IGNoYXJpb3RlZXJzLiBBbmQgd2hlbmV2ZXIgdGhlIEdyZWVrcyBzYXcgdGhlbSBjb21pbmcsIHRoZXkgd291bGQgb3BlbiBhIGdhcCBmb3IgdGhlaXIgcGFzc2FnZTsgb25lIGZlbGxvdywgdG8gYmUgc3VyZSwgd2FzIGNhdWdodCwgbGlrZSBhIGJlZnVkZGxlZCBtYW4gb24gYSByYWNlLWNvdXJzZSwgeWV0IGl0IHdhcyBzYWlkIHRoYXQgZXZlbiBoZSB3YXMgbm90IGh1cnQgaW4gdGhlIGxlYXN0LCBub3IsIGZvciB0aGF0IG1hdHRlciwgZGlkIGFueSBvdGhlciBzaW5nbGUgbWFuIGFtb25nIHRoZSBHcmVla3MgZ2V0IGFueSBodXJ0IHdoYXRldmVyIGluIHRoaXMgYmF0dGxlLCBzYXZlIHRoYXQgc29tZSBvbmUgb24gdGhlIGxlZnQgd2luZyB3YXMgcmVwb3J0ZWQgdG8gaGF2ZSBiZWVuIGhpdCBieSBhbiBhcnJvdy4KPC90cmFuc2xhdGlvbj4="
translation['1.8.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHNhdyB0aGF0IHRoZSBHcmVla3Mgd2VyZSB2aWN0b3Jpb3VzIG92ZXIgdGhlIGRpdmlzaW9uIG9wcG9zaXRlIHRoZW0gYW5kIHdlcmUgaW4gcHVyc3VpdCwgYWx0aG91Z2ggaGUgd2FzIHBsZWFzZWQgYW5kIHdhcyBhbHJlYWR5IGJlaW5nIHNhbHV0ZWQgd2l0aCBob21hZ2UgYXMgS2luZyBieSBoaXMgYXR0ZW5kYW50cywgaGUgbmV2ZXJ0aGVsZXNzIHdhcyBub3QgaW5kdWNlZCB0byBqb2luIHRoZSBwdXJzdWl0LCBidXQsIGtlZXBpbmcgaW4gY2xvc2UgZm9ybWF0aW9uIHRoZSBzaXggaHVuZHJlZCBob3JzZW1lbiBvZiBoaXMgdHJvb3AsIGhlIHdhcyB3YXRjaGluZyB0byBzZWUgd2hhdCB0aGUgS2luZyB3b3VsZCBkby4gRm9yIGhlIGtuZXcgdGhhdCB0aGUgS2luZyBoZWxkIHRoZSBjZW50cmUgb2YgdGhlIFBlcnNpYW4gYXJteTsKPC90cmFuc2xhdGlvbj4="
translation['1.8.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5pbiBmYWN0LCBhbGwgdGhlIGdlbmVyYWxzIG9mIHRoZSBiYXJiYXJpYW5zIGhvbGQgdGhlaXIgb3duIGNlbnRyZSB3aGVuIHRoZXkgYXJlIGluIGNvbW1hbmQsIGZvciB0aGV5IHRoaW5rIHRoYXQgdGhpcyBpcyB0aGUgc2FmZXN0IHBvc2l0aW9uLCBuYW1lbHksIHdpdGggdGhlaXIgZm9yY2VzIG9uIGVpdGhlciBzaWRlIG9mIHRoZW0sIGFuZCBhbHNvIHRoYXQgaWYgdGhleSB3YW50IHRvIHBhc3MgYWxvbmcgYW4gb3JkZXIsIHRoZSBhcm15IHdpbGwgZ2V0IGl0IGluIGhhbGYgdGhlIHRpbWU7CjwvdHJhbnNsYXRpb24+"
translation['1.8.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5zbyBpbiB0aGlzIGluc3RhbmNlIHRoZSBLaW5nIGhlbGQgdGhlIGNlbnRyZSBvZiB0aGUgYXJteSB1bmRlciBoaXMgY29tbWFuZCwgYnV0IHN0aWxsIGhlIGZvdW5kIGhpbXNlbGYgYmV5b25kIHRoZSBsZWZ0IHdpbmcgb2YgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPi4gU2luY2UsIHRoZW4sIHRoZXJlIHdhcyBubyBvbmUgaW4gaGlzIGZyb250IHRvIGdpdmUgYmF0dGxlIHRvIGhpbSBvciB0byB0aGUgdHJvb3BzIGRyYXduIHVwIGJlZm9yZSBoaW0sIGhlIHByb2NlZWRlZCB0byB3aGVlbCByb3VuZCBoaXMgbGluZSB3aXRoIHRoZSBpbnRlbnRpb24gb2YgZW5jaXJjbGluZyB0aGUgZW5lbXkuCjwvdHJhbnNsYXRpb24+"
translation['1.8.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmV1cG9uIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIHNlaXplZCB3aXRoIGZlYXIgbGVzdCBoZSBtaWdodCBnZXQgaW4gdGhlIHJlYXIgb2YgdGhlIEdyZWVrIHRyb29wcyBhbmQgY3V0IHRoZW0gdG8gcGllY2VzLCBjaGFyZ2VkIHRvIG1lZXQgaGltOyBhbmQgYXR0YWNraW5nIHdpdGggaGlzIHNpeCBodW5kcmVkLCBoZSB3YXMgdmljdG9yaW91cyBvdmVyIHRoZSBmb3JjZXMgc3RhdGlvbmVkIGluIGZyb250IG9mIHRoZSBLaW5nIGFuZCBwdXQgdG8gZmxpZ2h0IHRoZSBzaXggdGhvdXNhbmQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuNy4xMSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjcuMTE8L2JpYmw+Ljwvbm90ZT4gc2xheWluZyB3aXRoIGhpcyBvd24gaGFuZCwgaXQgaXMgc2FpZCwgdGhlaXIgY29tbWFuZGVyIEFydGFnZXJzZXMuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS43LjExIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuNy4xMTwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['1.8.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGV5IHR1cm5lZCB0byBmbGlnaHQsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4nIHNpeCBodW5kcmVkLCBzZXR0aW5nIG91dCBpbiBwdXJzdWl0LCBiZWNhbWUgc2NhdHRlcmVkIGFsc28sIGFuZCBvbmx5IGEgdmVyeSBmZXcgd2VyZSBsZWZ0IGFib3V0IGhpbSwgY2hpZWZseSBoaXMgc28tY2FsbGVkIHRhYmxlIGNvbXBhbmlvbnMuCjwvdHJhbnNsYXRpb24+"
translation['1.8.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5XaGlsZSBhdHRlbmRlZCBieSB0aGVzZSBvbmx5LCBoZSBjYXVnaHQgc2lnaHQgb2YgdGhlIEtpbmcgYW5kIHRoZSBjb21wYWN0IGJvZHkgYXJvdW5kIGhpbTsgYW5kIG9uIHRoZSBpbnN0YW50IGhlIGxvc3QgY29udHJvbCBvZiBoaW1zZWxmIGFuZCwgd2l0aCB0aGUgY3J5IOKAnEkgc2VlIHRoZSBtYW4s4oCdIHJ1c2hlZCB1cG9uIGhpbSBhbmQgc3RydWNrIGhpbSBpbiB0aGUgYnJlYXN0IGFuZCB3b3VuZGVkIGhpbSB0aHJvdWdoIGhpcyBicmVhc3RwbGF0ZeKAlGFzIEN0ZXNpYXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIG5vdGUgb24gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjcuMTEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS43LjExPC9iaWJsPi48L25vdGU+IHRoZSBwaHlzaWNpYW4gc2F5cywgYWRkaW5nIGFsc28gdGhhdCBoZSBoaW1zZWxmIGhlYWxlZCB0aGUgd291bmQuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS43LjExIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuNy4xMTwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['1.8.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hpbGUgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiB3YXMgZGVsaXZlcmluZyBoaXMgc3Ryb2tlLCBob3dldmVyLCBzb21lIG9uZSBoaXQgaGltIGEgaGFyZCBibG93IHVuZGVyIHRoZSBleWUgd2l0aCBhIGphdmVsaW47IGFuZCB0aGVuIGZvbGxvd2VkIGEgc3RydWdnbGUgYmV0d2VlbiB0aGUgS2luZyBhbmQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBhbmQgdGhlIGF0dGVuZGFudHMgd2hvIHN1cHBvcnRlZCBlYWNoIG9mIHRoZW0uIFRoZSBudW1iZXIgdGhhdCBmZWxsIG9uIHRoZSBLaW5nJ3Mgc2lkZSBpcyBzdGF0ZWQgYnkgQ3Rlc2lhcywgd2hvIHdhcyB3aXRoIGhpbTsgb24gdGhlIG90aGVyIHNpZGUsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gaGltc2VsZiB3YXMga2lsbGVkIGFuZCBlaWdodCBvZiB0aGUgbm9ibGVzdCBvZiBoaXMgYXR0ZW5kYW50cyBsYXkgZGVhZCB1cG9uIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['1.8.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5PZiBBcnRhcGF0ZXMsIHRoZSBvbmUgYW1vbmcgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPicgY2hhbWJlcmxhaW5zIHdobyB3YXMgaGlzIG1vc3QgZmFpdGhmdWwgZm9sbG93ZXIsIGl0IGlzIHRvbGQgdGhhdCB3aGVuIGhlIHNhdyA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGZhbGxlbiwgaGUgbGVhcGVkIGRvd24gZnJvbSBoaXMgaG9yc2UgYW5kIHRocmV3IGhpcyBhcm1zIGFib3V0IGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['1.8.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgb25lIHJlcG9ydCBpcyB0aGF0IHRoZSBLaW5nIG9yZGVyZWQgc29tZW9uZSB0byBzbGF5IGhpbSB1cG9uIHRoZSBib2R5IG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIHdoaWxlIG90aGVycyBzYXkgdGhhdCBoZSBkcmV3IGhpcyBkYWdnZXIgYW5kIHNsZXcgaGltc2VsZiB3aXRoIGhpcyBvd24gaGFuZDsgZm9yIGhlIGhhZCBhIGRhZ2dlciBvZiBnb2xkLCBhbmQgaGUgYWxzbyB3b3JlIGEgbmVja2xhY2UgYW5kIGJyYWNlbGV0cyBhbmQgYWxsIHRoZSBvdGhlciBvcm5hbWVudHMgdGhhdCB0aGUgbm9ibGVzdCBQZXJzaWFucyB3ZWFyOyBmb3IgaGUgaGFkIGJlZW4gaG9ub3VyZWQgYnkgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBiZWNhdXNlIG9mIGhpcyBhZmZlY3Rpb24gYW5kIGZpZGVsaXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.9.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGlzIHdheSwgdGhlbiwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBjYW1lIHRvIGhpcyBlbmQsIGEgbWFuIHdobyB3YXMgdGhlIG1vc3Qga2luZ2x5IGFuZCB0aGUgbW9zdCB3b3J0aHkgdG8gcnVsZSBvZiBhbGwgdGhlIFBlcnNpYW5zIHdobyBoYXZlIGJlZW4gYm9ybiBzaW5jZSA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHRoZSBFbGRlciwgYXMgYWxsIGFncmVlIHdobyBhcmUgcmVwdXRlZCB0byBoYXZlIGtub3duIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gaW50aW1hdGVseS4KPC90cmFuc2xhdGlvbj4="
translation['1.9.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZvciBmaXJzdGx5LCB3aGlsZSBoZSB3YXMgc3RpbGwgYSBib3kgYW5kIHdhcyBiZWluZyBlZHVjYXRlZCB3aXRoIGhpcyBicm90aGVyIGFuZCB0aGUgb3RoZXIgYm95cywgaGUgd2FzIHJlZ2FyZGVkIGFzIHRoZSBiZXN0IG9mIHRoZW0gYWxsIGluIGFsbCByZXNwZWN0cy4KPC90cmFuc2xhdGlvbj4="
translation['1.9.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkZvciBhbGwgdGhlIHNvbnMgb2YgdGhlIG5vYmxlc3QgUGVyc2lhbnMgYXJlIGVkdWNhdGVkIGF0IHRoZSBLaW5nJ3MgY291cnQuIFRoZXJlIG9uZSBtYXkgbGVhcm4gZGlzY3JldGlvbiBhbmQgc2VsZi1jb250cm9sIGluIGZ1bGwgbWVhc3VyZSwgYW5kIG5vdGhpbmcgdGhhdCBpcyBiYXNlIGNhbiBiZSBlaXRoZXIgaGVhcmQgb3Igc2Vlbi4KPC90cmFuc2xhdGlvbj4="
translation['1.9.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBib3lzIGhhdmUgYmVmb3JlIHRoZWlyIGV5ZXMgdGhlIHNwZWN0YWNsZSBvZiBtZW4gaG9ub3VyZWQgYnkgdGhlIEtpbmcgYW5kIG9mIG90aGVycyBkaXNob25vdXJlZDsgdGhleSBsaWtld2lzZSBoZWFyIG9mIHRoZW07IGFuZCBzbyBmcm9tIGVhcmxpZXN0IGJveWhvb2QgdGhleSBhcmUgbGVhcm5pbmcgaG93IHRvIHJ1bGUgYW5kIGhvdyB0byBzdWJtaXQgdG8gcnVsZS4KPC90cmFuc2xhdGlvbj4="
translation['1.9.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkhlcmUsIHRoZW4sIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gd2FzIHJlcHV0ZWQgdG8gYmUsIGluIHRoZSBmaXJzdCBwbGFjZSwgdGhlIG1vc3QgbW9kZXN0IG9mIGhpcyBmZWxsb3dzLCBhbmQgZXZlbiBtb3JlIG9iZWRpZW50IHRvIGhpcyBlbGRlcnMgdGhhbiB3ZXJlIGhpcyBpbmZlcmlvcnMgaW4gcmFuazsgc2Vjb25kbHksIHRoZSBtb3N0IGRldm90ZWQgdG8gaG9yc2VzIGFuZCB0aGUgbW9zdCBza2lsZnVsIGluIG1hbmFnaW5nIGhvcnNlczsgaGUgd2FzIGFsc28gYWRqdWRnZWQgdGhlIG1vc3QgZWFnZXIgdG8gbGVhcm4sIGFuZCB0aGUgbW9zdCBkaWxpZ2VudCBpbiBwcmFjdGlzaW5nLCBtaWxpdGFyeSBhY2NvbXBsaXNobWVudHMsIGFsaWtlIHRoZSB1c2Ugb2YgdGhlIGJvdyBhbmQgb2YgdGhlIGphdmVsaW4uCjwvdHJhbnNsYXRpb24+"
translation['1.9.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4sIHdoZW4gaGUgd2FzIG9mIHN1aXRhYmxlIGFnZSwgaGUgd2FzIHRoZSBmb25kZXN0IG9mIGh1bnRpbmcgYW5kLCBtb3JlIHRoYW4gdGhhdCwgdGhlIGZvbmRlc3Qgb2YgaW5jdXJyaW5nIGRhbmdlciBpbiBoaXMgcHVyc3VpdCBvZiB3aWxkIGFuaW1hbHMuIE9uIG9uZSBvY2Nhc2lvbiwgd2hlbiBhIGJlYXIgY2hhcmdlZCB1cG9uIGhpbSwgaGUgZGlkIG5vdCB0YWtlIHRvIGZsaWdodCwgYnV0IGdyYXBwbGVkIHdpdGggaGVyIGFuZCB3YXMgZHJhZ2dlZCBmcm9tIGhpcyBob3JzZTsgaGUgcmVjZWl2ZWQgc29tZSBpbmp1cmllcywgdGhlIHNjYXJzIG9mIHdoaWNoIGhlIHJldGFpbmVkLCBidXQgaW4gdGhlIGVuZCBoZSBraWxsZWQgdGhlIGJlYXI7IGFuZCwgZnVydGhlcm1vcmUsIHRoZSBtYW4gd2hvIHdhcyB0aGUgZmlyc3QgdG8gY29tZSB0byBoaXMgYXNzaXN0YW5jZSBoZSBtYWRlIGFuIG9iamVjdCBvZiBlbnZ5IHRvIG1hbnkuCjwvdHJhbnNsYXRpb24+"
translation['1.9.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZ2Fpbiwgd2hlbiBoZSB3YXMgc2VudCBkb3duPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSBJbnRyb2QuLCBwLiB2aWksIG5vdGUgMTsgYWxzbyA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMS4yIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMS4yPC9iaWJsPi48L25vdGU+IGJ5IGhpcyBmYXRoZXIgdG8gYmUgc2F0cmFwIG9mIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4xLjIiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4xLjI8L2JpYmw+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NjMxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY2MzEiPkx5ZGlhPC9wbGFjZU5hbWU+LCBHcmVhdGVyIFBocnlnaWEsIGFuZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMzAxNiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAzMDE2Ij5DYXBwYWRvY2lhPC9wbGFjZU5hbWU+IGFuZCB3YXMgYWxzbyBhcHBvaW50ZWQgY29tbWFuZGVyIG9mIGFsbCB0aGUgdHJvb3BzIHdob3NlIGR1dHkgaXQgaXMgdG8gbXVzdGVyIGluIHRoZSBwbGFpbiBvZiBDYXN0b2x1cywgaGUgc2hvd2VkLCBpbiB0aGUgZmlyc3QgcGxhY2UsIHRoYXQgaGUgY291bnRlZCBpdCBvZiB0aGUgdXRtb3N0IGltcG9ydGFuY2UsIHdoZW4gaGUgY29uY2x1ZGVkIGEgdHJlYXR5IG9yIGNvbXBhY3Qgd2l0aCBhbnlvbmUgb3IgbWFkZSBhbnlvbmUgYW55IHByb21pc2UsIHVuZGVyIG5vIGNpcmN1bXN0YW5jZXMgdG8gcHJvdmUgZmFsc2UgdG8gaGlzIHdvcmQuCjwvdHJhbnNsYXRpb24+"
translation['1.9.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkl0IHdhcyBmb3IgdGhpcyByZWFzb24sIHRoZW4sIHRoYXQgdGhlIGNpdGllcyB0cnVzdGVkIGhpbSBhbmQgcHV0IHRoZW1zZWx2ZXMgdW5kZXIgaGlzIHByb3RlY3Rpb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMS42IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMS42PC9iaWJsPiBmaW4uPC9ub3RlPiBhbmQgdGhhdCBpbmRpdmlkdWFscyBhbHNvIHRydXN0ZWQgaGltOyBhbmQgaWYgYW55b25lIGhhZCBiZWVuIGFuIGVuZW15LCB3aGVuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4xLjYiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4xLjY8L2JpYmw+IGZpbi48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IG1hZGUgYSB0cmVhdHkgd2l0aCBoaW0gaGUgdHJ1c3RlZCB0aGF0IGhlIHdvdWxkIHN1ZmZlciBubyBoYXJtIGluIHZpb2xhdGlvbiBvZiB0aGF0IHRyZWF0eS4KPC90cmFuc2xhdGlvbj4="
translation['1.9.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkNvbnNlcXVlbnRseSwgd2hlbiBoZSBjYW1lIHRvIGhvc3RpbGl0aWVzIHdpdGggVGlzc2FwaGVybmVzLCBhbGwgdGhlIGNpdGllcyBvZiB0aGVpciBvd24gYWNjb3JkIGNob3NlIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gcmF0aGVyIHRoYW4gVGlzc2FwaGVybmVzLCB3aXRoIHRoZSBleGNlcHRpb24gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNaWxldHVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNaWxldHVzIj5NaWxldHVzPC9wbGFjZU5hbWU+Ozxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjEuNyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjEuNzwvYmlibD4gYW5kIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4yLjIiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4yLjI8L2JpYmw+Ljwvbm90ZT4gYW5kIHRoZSByZWFzb24gd2h5IHRoZSBNaWxlc2lhbnMgZmVhcmVkIGhpbSB3YXMsIHRoYXQgaGUgd291bGQgbm90IHByb3ZlIGZhbHNlIHRvIHRoZSBleGlsZXMgZnJvbSB0aGVpciBjaXR5Lgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMS43IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMS43PC9iaWJsPiBhbmQgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjIuMiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjIuMjwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['1.9.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaGUgc2hvd2VkIHJlcGVhdGVkbHksIGJ5IGRlZWQgYXMgd2VsbCBhcyBieSB3b3JkLCB0aGF0IGhlIHdvdWxkIG5ldmVyIGFiYW5kb24gdGhlbSB3aGVuIG9uY2UgaGUgaGFkIGNvbWUgdG8gYmUgdGhlaXIgZnJpZW5kLCBub3QgZXZlbiBpZiB0aGV5IHNob3VsZCBiZWNvbWUgc3RpbGwgZmV3ZXIgaW4gbnVtYmVyIGFuZCBzaG91bGQgbWVldCB3aXRoIHN0aWxsIHdvcnNlIG1pc2ZvcnR1bmUuCjwvdHJhbnNsYXRpb24+"
translation['1.9.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgd2FzIG1hbmlmZXN0IGFsc28gdGhhdCB3aGVuZXZlciBhIG1hbiBjb25mZXJyZWQgYW55IGJlbmVmaXQgdXBvbiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IG9yIGRpZCBoaW0gYW55IGhhcm0sIGhlIGFsd2F5cyBzdHJvdmUgdG8gb3V0ZG8gaGltOyBpbiBmYWN0LCBzb21lIHBlb3BsZSB1c2VkIHRvIHJlcG9ydCBpdCBhcyBhIHByYXllciBvZiBoaXMgdGhhdCBoZSBtaWdodCBsaXZlIGxvbmcgZW5vdWdoIHRvIG91dGRvIGJvdGggdGhvc2Ugd2hvIGJlbmVmaXRlZCBhbmQgdGhvc2Ugd2hvIGluanVyZWQgaGltLCByZXR1cm5pbmcgbGlrZSBmb3IgbGlrZS4KPC90cmFuc2xhdGlvbj4="
translation['1.9.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5IZW5jZSBpdCB3YXMgdGhhdCBoZSBoYWQgYSBncmVhdGVyIGZvbGxvd2luZyB0aGFuIGFueSBvdGhlciBvbmUgbWFuIG9mIG91ciB0aW1lIG9mIGZyaWVuZHMgd2hvIGVhZ2VybHkgZGVzaXJlZCB0byBlbnRydXN0IHRvIGhpbSBib3RoIHRyZWFzdXJlIGFuZCBjaXRpZXMgYW5kIHRoZWlyIHZlcnkgYm9kaWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.9.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5ZZXQsIG9uIHRoZSBvdGhlciBoYW5kLCBub25lIGNvdWxkIHNheSB0aGF0IGhlIHBlcm1pdHRlZCBtYWxlZmFjdG9ycyBhbmQgd2lja2VkIG1lbiB0byBsYXVnaCBhdCBoaW07IG9uIHRoZSBjb250cmFyeSwgaGUgd2FzIG1lcmNpbGVzcyB0byB0aGUgbGFzdCBkZWdyZWUgaW4gcHVuaXNoaW5nIHRoZW0sIGFuZCBvbmUgbWlnaHQgb2Z0ZW4gc2VlIGFsb25nIHRoZSB0cmF2ZWxsZWQgcm9hZHMgcGVvcGxlIHdobyBoYWQgbG9zdCBmZWV0IG9yIGhhbmRzIG9yIGV5ZXM7IHRodXMgaW4gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPicgcHJvdmluY2UgaXQgYmVjYW1lIHBvc3NpYmxlIGZvciBlaXRoZXIgR3JlZWsgb3IgYmFyYmFyaWFuLCBwcm92aWRlZCBoZSB3ZXJlIGd1aWx0eSBvZiBubyB3cm9uZ2RvaW5nLCB0byB0cmF2ZWwgZmVhcmxlc3NseSB3aGVyZXZlciBoZSB3aXNoZWQsIGNhcnJ5aW5nIHdpdGggaGltIHdoYXRldmVyIGl0IHdhcyB0byBoaXMgaW50ZXJlc3QgdG8gaGF2ZS4KPC90cmFuc2xhdGlvbj4="
translation['1.9.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGl0IHdhcyB0aGUgYnJhdmUgaW4gd2FyLCBhcyBhbGwgYWdyZWUsIHdob20gaGUgaG9ub3VyZWQgZXNwZWNpYWxseS4gRm9yIGV4YW1wbGUsIGhlIHdhcyBvbmNlIGF0IHdhciB3aXRoIHRoZSBQaXNpZGlhbnMgYW5kIE15c2lhbnMgYW5kIGNvbW1hbmRlZCBpbiBwZXJzb24gYW4gZXhwZWRpdGlvbiBpbnRvIHRoZWlyIHRlcnJpdG9yaWVzOyBhbmQgd2hvbXNvZXZlciBpbiBoaXMgYXJteSBoZSBmb3VuZCB3aWxsaW5nIHRvIG1lZXQgZGFuZ2VycywgdGhlc2UgbWVuIGhlIHdvdWxkIG5vdCBvbmx5IGFwcG9pbnQgYXMgcnVsZXJzIG9mIHRoZSB0ZXJyaXRvcnkgaGUgd2FzIHN1YmR1aW5nLCBidXQgd291bGQgaG9ub3VyIHRoZXJlYWZ0ZXIgd2l0aCBvdGhlciBnaWZ0cyBhbHNvLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.9.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaHVzIHRoZSBicmF2ZSB3ZXJlIHNlZW4gdG8gYmUgbW9zdCBwcm9zcGVyb3VzLCB3aGlsZSBjb3dhcmRzIHdlcmUgZGVlbWVkIGZpdCB0byBiZSB0aGVpciBzbGF2ZXMuIENvbnNlcXVlbnRseSA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGhhZCBtZW4gaW4gZ3JlYXQgYWJ1bmRhbmNlIHdobyB3ZXJlIHdpbGxpbmcgdG8gbWVldCBkYW5nZXIgd2hlcmV2ZXIgdGhleSB0aG91Z2h0IHRoYXQgaGUgd291bGQgb2JzZXJ2ZSB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.9.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdXByaWdodG5lc3MsIGlmIGEgbWFuIHNob3dlZCB0aGF0IGhlIGRlc2lyZWQgdG8gZGlzdGluZ3Vpc2ggaGltc2VsZiBpbiB0aGF0IHF1YWxpdHksIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gY29uc2lkZXJlZCBpdCBhbGwgaW1wb3J0YW50IHRvIGVuYWJsZSBzdWNoIGFuIG9uZSB0byBsaXZlIGluIGdyZWF0ZXIgb3B1bGVuY2UgdGhhbiB0aG9zZSB3aG8gd2VyZSBncmVlZHkgb2YgdW5qdXN0IGdhaW4uCjwvdHJhbnNsYXRpb24+"
translation['1.9.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5IZW5jZSBoZSBub3Qgb25seSBoYWQgbWFueSBhbmQgdmFyaW91cyBmdW5jdGlvbnMgcGVyZm9ybWVkIGZvciBoaW0gd2l0aCBmaWRlbGl0eSwgYnV0LCBpbiBwYXJ0aWN1bGFyLCBoZSBzZWN1cmVkIHRoZSBzZXJ2aWNlcyBvZiBhbiBhcm15IHdvcnRoeSBvZiB0aGUgbmFtZS4gRm9yIGdlbmVyYWxzIGFuZCBjYXB0YWlucyB3aG8gY2FtZSBvdmVyc2VhcyB0byBzZXJ2ZSBoaW0gZm9yIHRoZSBzYWtlIG9mIG1vbmV5IGp1ZGdlZCB0aGF0IGxveWFsIG9iZWRpZW5jZSB0byA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHdhcyB3b3J0aCBtb3JlIHRvIHRoZW0gdGhhbiB0aGVpciBtZXJlIG1vbnRobHkgcGF5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.9.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BZ2Fpbiwgc28gc3VyZWx5IGFzIGEgbWFuIHBlcmZvcm1lZCB3aXRoIGNyZWRpdCBhbnkgc2VydmljZSB0aGF0IGhlIGFzc2lnbmVkIGhpbSwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBuZXZlciBsZXQgaGlzIHplYWwgZ28gdW5yZXdhcmRlZC4gSW4gY29uc2VxdWVuY2UsIGhlIHdhcyBzYWlkIHRvIGhhdmUgZ2FpbmVkIHRoZSB2ZXJ5IGJlc3Qgc3VwcG9ydGVycyBmb3IgZXZlcnkgdW5kZXJ0YWtpbmcuCjwvdHJhbnNsYXRpb24+"
translation['1.9.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnVydGhlcm1vcmUsIHdoZW5ldmVyIGhlIHNhdyB0aGF0IGEgbWFuIHdhcyBhIHNraWxmdWwgYW5kIGp1c3QgYWRtaW5pc3RyYXRvciwgbm90IG9ubHkgb3JnYW5pemluZyB3ZWxsIHRoZSBjb3VudHJ5IG92ZXIgd2hpY2ggaGUgcnVsZWQsIGJ1dCBwcm9kdWNpbmcgcmV2ZW51ZXMsIGhlIHdvdWxkIG5ldmVyIGRlcHJpdmUgc3VjaCBhIG1hbiBvZiB0ZXJyaXRvcnksIGJ1dCB3b3VsZCBhbHdheXMgZ2l2ZSBoaW0gbW9yZSBiZXNpZGVzLiBUaGUgcmVzdWx0IHdhcyB0aGF0IHRoZXkgdG9pbGVkIHdpdGggcGxlYXN1cmUgYW5kIGFjY3VtdWxhdGVkIHdpdGggY29uZmlkZW5jZSwgYW5kLCBtb3JlIHRoYW4gdGhhdCwgbm8gb25lIHdvdWxkIGNvbmNlYWwgZnJvbSA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHRoZSBzdG9yZSB3aGljaCBoZSBoYWQgYWNxdWlyZWQ7IGZvciBpdCB3YXMgY2xlYXIgdGhhdCBoZSBkaWQgbm90IGVudnkgdGhvc2Ugd2hvIHdlcmUgZnJhbmtseSBhbmQgb3Blbmx5IHJpY2gsIGJ1dCBzdHJvdmUgdG8gbWFrZSB1c2Ugb2YgdGhlIHBvc3Nlc3Npb25zIG9mIHN1Y2ggYXMgdHJpZWQgdG8gY29uY2VhbCB0aGVpciB3ZWFsdGguCjwvdHJhbnNsYXRpb24+"
translation['1.9.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgdG8gZnJpZW5kcywgYWxsIGFncmVlIHRoYXQgaGUgc2hvd2VkIGhpbXNlbGYgcHJlLWVtaW5lbnQgaW4gaGlzIGF0dGVudGlvbnMgdG8gYWxsIHRoZSBmcmllbmRzIHRoYXQgaGUgbWFkZSBhbmQgZm91bmQgZGV2b3RlZCB0byBoaW0gYW5kIGFkanVkZ2VkIHRvIGJlIGNvbXBldGVudCBjby13b3JrZXJzIGluIHdoYXRldmVyIGhlIG1pZ2h0IGJlIHdpc2hpbmcgdG8gYWNjb21wbGlzaC4KPC90cmFuc2xhdGlvbj4="
translation['1.9.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IsIGp1c3QgYXMgdGhlIHByZWNpc2Ugb2JqZWN0IGZvciB3aGljaCBoZSB0aG91Z2h0IGhlIG5lZWRlZCBmcmllbmRzIGhpbXNlbGYgd2FzIHRoYXQgaGUgbWlnaHQgaGF2ZSBjby13b3JrZXJzLCBzbyBoZSB0cmllZCBvbiBoaXMgb3duIHBhcnQgdG8gYmUgYSBtb3N0IHZpZ29yb3VzIGNvLXdvcmtlciB3aXRoIGhpcyBmcmllbmRzIHRvIHNlY3VyZSB0aGF0IHdoaWNoIGhlIGZvdW5kIGVhY2ggb25lIG9mIHRoZW0gZGVzaXJlZC4KPC90cmFuc2xhdGlvbj4="
translation['1.9.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgaGUgcmVjZWl2ZWQgbW9yZSBnaWZ0cywgSSBwcmVzdW1lLCB0aGFuIGFueSBvdGhlciBvbmUgbWFuLCBhbmQgZm9yIG1hbnkgcmVhc29uczsgYW5kIHN1cmVseSBoZSBvZiBhbGwgbWVuIGRpc3RyaWJ1dGVkIGdpZnRzIG1vc3QgZ2VuZXJvdXNseSBhbW9uZyBoaXMgZnJpZW5kcywgd2l0aCBhbiBleWUgdG8gdGhlIHRhc3RlcyBvZiBlYWNoIG9uZSBhbmQgdG8gd2hhdGV2ZXIgcGFydGljdWxhciBuZWVkIGhlIG5vdGVkIGluIGVhY2ggY2FzZS4KPC90cmFuc2xhdGlvbj4="
translation['1.9.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgYWxsIHRoZSBnaWZ0cyB3aGljaCBwZW9wbGUgc2VudCBoaW0gdG8gd2VhciB1cG9uIGhpcyBwZXJzb24sIHdoZXRoZXIgaW50ZW5kZWQgZm9yIHdhciBvciBtZXJlbHkgZm9yIHNob3csIGl0IGlzIHJlcG9ydGVkIHRoYXQgaGUgc2FpZCBvZiB0aGVtIHRoYXQgaGlzIG93biBwZXJzb24gY291bGQgbm90IGJlIGFkb3JuZWQgd2l0aCBhbGwgdGhlc2UgdGhpbmdzLCBidXQgdGhhdCBpbiBoaXMgb3BpbmlvbiBmcmllbmRzIG5vYmx5IGFkb3JuZWQgd2VyZSBhIG1hbidzIGdyZWF0ZXN0IG9ybmFtZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.9.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UbyBiZSBzdXJlLCB0aGUgZmFjdCB0aGF0IGhlIG91dGRpZCBoaXMgZnJpZW5kcyBpbiB0aGUgZ3JlYXRuZXNzIG9mIHRoZSBiZW5lZml0cyBoZSBjb25mZXJyZWQgaXMgbm90aGluZyBzdXJwcmlzaW5nLCBmb3IgdGhlIG1hbmlmZXN0IHJlYXNvbiB0aGF0IGhlIGhhZCBncmVhdGVyIG1lYW5zIHRoYW4gdGhleTsgYnV0IHRoYXQgaGUgc3VycGFzc2VkIHRoZW0gaW4gc29saWNpdHVkZSBhbmQgaW4gZWFnZXJuZXNzIHRvIGRvIGZhdm91cnMsIHRoaXMgaW4gbXkgb3BpbmlvbiBpcyBtb3JlIGFkbWlyYWJsZS4KPC90cmFuc2xhdGlvbj4="
translation['1.9.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgZXhhbXBsZSwgd2hlbiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGdvdCBzb21lIHBhcnRpY3VsYXJseSBnb29kIHdpbmUsIGhlIHdvdWxkIG9mdGVuIHNlbmQgdGhlIGhhbGYtZW1wdGllZCBqYXIgdG8gYSBmcmllbmQgd2l0aCB0aGUgbWVzc2FnZTog4oCcPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBzYXlzIHRoYXQgaGUgaGFzIG5vdCBjaGFuY2VkIHVwb24gYmV0dGVyIHdpbmUgdGhhbiB0aGlzIGZvciBhIGxvbmcgdGltZTsgc28gaGUgc2VuZHMgaXQgdG8geW91LCBhbmQgYXNrcyB5b3UgdG8gZHJpbmsgaXQgdXAgdG9kYXkgaW4gY29tcGFueSB3aXRoIHRoZSBmcmllbmRzIHlvdSBsb3ZlIGJlc3Qu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.9.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5TbyBoZSB3b3VsZCBvZnRlbiBzZW5kIGhhbHZlcyBvZiBnZWVzZSBhbmQgb2YgbG9hdmVzIGFuZCBzbyBmb3J0aCwgaW5zdHJ1Y3RpbmcgdGhlIGJlYXJlciB0byBhZGQgdGhlIG1lc3NhZ2U6IOKAnDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gZW5qb3llZCB0aGlzLCBhbmQgdGhlcmVmb3JlIHdhbnRzIHlvdSBhbHNvIHRvIHRha2UgYSB0YXN0ZSBvZiBpdC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.9.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlcmV2ZXIgZm9kZGVyIHdhcyBleGNlZWRpbmdseSBzY2FyY2UgYW5kIGhlIHdhcyBhYmxlIHRvIGdldCBpdCBmb3IgaGlzIG93biB1c2UgYmVjYXVzZSBvZiB0aGUgbGFyZ2UgbnVtYmVyIG9mIGhpcyBzZXJ2YW50cyBhbmQgYmVjYXVzZSBvZiBoaXMgZ29vZCBwbGFubmluZywgaGUgd291bGQgZGlzdHJpYnV0ZSB0aGlzIGZvZGRlciBhbW9uZyBoaXMgZnJpZW5kcyBhbmQgdGVsbCB0aGVtIHRvIGdpdmUgaXQgdG8gdGhlIGhvcnNlcyB0aGF0IGNhcnJpZWQgdGhlaXIgb3duIGJvZGllcywgdGhhdCB0aGV5IG1pZ2h0IG5vdCBiZSBodW5ncnkgd2hpbGUgY2FycnlpbmcgaGlzIGZyaWVuZHMuCjwvdHJhbnNsYXRpb24+"
translation['1.9.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbmV2ZXIgaGUgd2FzIG9uIHRoZSBtYXJjaCBhbmQgd2FzIGxpa2VseSB0byBiZSBzZWVuIGJ5IHZlcnkgbWFueSBwZW9wbGUsIGhlIHdvdWxkIGNhbGwgaGlzIGZyaWVuZHMgdG8gaGltIGFuZCBlbmdhZ2UgdGhlbSBpbiBlYXJuZXN0IGNvbnZlcnNhdGlvbiwgaW4gb3JkZXIgdG8gc2hvdyB3aG9tIGhlIGhvbm91cmVkLiBIZW5jZSwgYXMgSSBhdCBsZWFzdCBjb25jbHVkZSBmcm9tIHdoYXQgY29tZXMgdG8gbXkgZWFycywgbm8gbWFuLCBHcmVlayBvciBiYXJiYXJpYW4sIGhhcyBldmVyIGJlZW4gbG92ZWQgYnkgYSBncmVhdGVyIG51bWJlciBvZiBwZW9wbGUuCjwvdHJhbnNsYXRpb24+"
translation['1.9.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5IZXJlIGlzIGEgZmFjdCB0byBjb25maXJtIHRoYXQgY29uY2x1c2lvbjogYWx0aG91Z2ggPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiB3YXMgYSBzbGF2ZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QSB0ZXJtIGhhYml0dWFsbHkgYXBwbGllZCBieSB0aGUgR3JlZWtzIHRvIHRoZSBzdWJqZWN0cyBvZiBhbiBhYnNvbHV0ZSBtb25hcmNoLCBlc3BlY2lhbGx5IHRob3NlIG9mIHRoZSBQZXJzaWFuIGtpbmcuPC9ub3RlPiBubyBvbmUgZGVzZXJ0ZWQgaGltIHRvIGpvaW4gdGhlIEtpbmcsIHNhdmUgdGhhdCBPcm9udGFzIGF0dGVtcHRlZCB0byBkbyBzbyAoYW5kIGhlLCBtYXJrIHlvdSwgc3BlZWRpbHkgZm91bmQgb3V0IHRoYXQgdGhlIG1hbiBoZSBpbWFnaW5lZCB3YXMgZmFpdGhmdWwgdG8gaGltLCB3YXMgbW9yZSBkZXZvdGVkIHRvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gdGhhbiB0byBoaW0pOyBvbiB0aGUgb3RoZXIgaGFuZCwgbWFueSB3ZW50IG92ZXIgZnJvbSB0aGUgS2luZyB0byA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFmdGVyIHRoZSB0d28gaGFkIGJlY29tZSBlbmVtaWVzICh0aGVzZSBiZWluZywgbW9yZW92ZXIsIHRoZSBtZW4gd2hvIHdlcmUgbW9zdCBoaWdobHkgcmVnYXJkZWQgYnkgdGhlIEtpbmcpLCBiZWNhdXNlIHRoZXkgdGhvdWdodCB0aGF0IGlmIHRoZXkgd2VyZSBkZXNlcnZpbmcsIHRoZXkgd291bGQgZ2FpbiBhIHdvcnRoaWVyIHJld2FyZCB3aXRoIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gdGhhbiB3aXRoIHRoZSBLaW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.9.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgd2hhdCBoYXBwZW5lZCB0byA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGF0IHRoZSBlbmQgb2YgaGlzIGxpZmUgaXMgYSBzdHJvbmcgaW5kaWNhdGlvbiB0aGF0IGhlIHdhcyBhIHRydWUgbWFuIGhpbXNlbGYgYW5kIHRoYXQgaGUga25ldyBob3cgdG8ganVkZ2UgdGhvc2Ugd2hvIHdlcmUgZmFpdGhmdWwsIGRldm90ZWQsIGFuZCBjb25zdGFudC4KPC90cmFuc2xhdGlvbj4="
translation['1.9.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGhlIGRpZWQsIG5hbWVseSwgYWxsIGhpcyBib2R5Z3VhcmQgb2YgZnJpZW5kcyBhbmQgdGFibGUgY29tcGFuaW9ucyBkaWVkIGZpZ2h0aW5nIGluIGhpcyBkZWZlbmNlLCB3aXRoIHRoZSBleGNlcHRpb24gb2YgQXJpYWV1czsgaGUsIGl0IGNoYW5jZWQsIHdhcyBzdGF0aW9uZWQgb24gdGhlIGxlZnQgd2luZyBhdCB0aGUgaGVhZCBvZiB0aGUgY2F2YWxyeSwgYW5kIHdoZW4gaGUgbGVhcm5lZCB0aGF0IDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gaGFkIGZhbGxlbiwgaGUgdG9vayB0byBmbGlnaHQgd2l0aCB0aGUgd2hvbGUgYXJteSB0aGF0IGhlIGNvbW1hbmRlZC4KPC90cmFuc2xhdGlvbj4="
translation['1.10.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiB0aGUgaGVhZCBvZiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFuZCBoaXMgcmlnaHQgaGFuZCB3ZXJlIGN1dCBvZmYuIEJ1dCB0aGUgS2luZywgcHVyc3VpbmcgQXJpYWV1cywgYnVyc3QgaW50byB0aGUgY2FtcCBvZiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+OyBhbmQgQXJpYWV1cyBhbmQgaGlzIG1lbiBubyBsb25nZXIgc3Rvb2QgdGhlaXIgZ3JvdW5kLCBidXQgZmxlZCB0aHJvdWdoIHRoZWlyIG93biBjYW1wIHRvIHRoZSBzdG9wcGluZy1wbGFjZSBmcm9tIHdoaWNoIHRoZXkgaGFkIHNldCBvdXQgdGhhdCBtb3JuaW5nLCBhIGRpc3RhbmNlLCBpdCB3YXMgc2FpZCwgb2YgZm91ciBwYXJhc2FuZ3MuCjwvdHJhbnNsYXRpb24+"
translation['1.10.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlNvIHRoZSBLaW5nIGFuZCBoaXMgdHJvb3BzIHByb2NlZWRlZCB0byBzZWN1cmUgcGx1bmRlciBvZiB2YXJpb3VzIHNvcnRzIGluIGFidW5kYW5jZSwgd2hpbGUgaW4gcGFydGljdWxhciBoZSBjYXB0dXJlZCB0aGUgUGhvY2FlYW4gd29tYW4sIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4nIGNvbmN1YmluZSwgd2hvLCBieSBhbGwgYWNjb3VudHMsIHdhcyBjbGV2ZXIgYW5kIGJlYXV0aWZ1bC4KPC90cmFuc2xhdGlvbj4="
translation['1.10.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBNaWxlc2lhbiB3b21hbiwgaG93ZXZlciwgdGhlIHlvdW5nZXIgb25lLCBhZnRlciBiZWluZyBzZWl6ZWQgYnkgdGhlIEtpbmcncyBtZW4gbWFkZSBoZXIgZXNjYXBlLCBsaWdodGx5IGNsYWQsIHRvIHNvbWUgR3JlZWtzIHdobyBoYWQgY2hhbmNlZCB0byBiZSBzdGFuZGluZyBndWFyZCBhbWlkIHRoZSBiYWdnYWdlIHRyYWluIGFuZCwgZm9ybWluZyB0aGVtc2VsdmVzIGluIGxpbmUgYWdhaW5zdCB0aGUgZW5lbXksIGhhZCBraWxsZWQgbWFueSBvZiB0aGUgcGx1bmRlcmVycywgYWx0aG91Z2ggc29tZSBvZiB0aGVpciBvd24gbnVtYmVyIGhhZCBiZWVuIGtpbGxlZCBhbHNvOyBuZXZlcnRoZWxlc3MsIHRoZXkgZGlkIG5vdCB0YWtlIHRvIGZsaWdodCwgYnV0IHRoZXkgc2F2ZWQgdGhpcyB3b21hbiBhbmQsIGZ1cnRoZXJtb3JlLCB3aGF0ZXZlciBlbHNlIGNhbWUgd2l0aGluIHRoZWlyIGxpbmVzLCB3aGV0aGVyIHBlcnNvbnMgb3IgcHJvcGVydHksIHRoZXkgc2F2ZWQgYWxsIGFsaWtlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.10.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BdCB0aGlzIHRpbWUgdGhlIEtpbmcgYW5kIHRoZSBHcmVla3Mgd2VyZSBkaXN0YW50IGZyb20gb25lIGFub3RoZXIgYWJvdXQgdGhpcnR5IHN0YWRpYSwgdGhlIEdyZWVrcyBwdXJzdWluZyB0aGUgdHJvb3BzIGluIHRoZWlyIGZyb250LCBpbiB0aGUgYmVsaWVmIHRoYXQgdGhleSB3ZXJlIHZpY3RvcmlvdXMgb3ZlciBhbGwgdGhlIGVuZW15LCB0aGUgS2luZyBhbmQgaGlzIGZvbGxvd2VycyBwbHVuZGVyaW5nLCBpbiB0aGUgYmVsaWVmIHRoYXQgdGhleSB3ZXJlIGFsbCB2aWN0b3Jpb3VzIGFscmVhZHkuCjwvdHJhbnNsYXRpb24+"
translation['1.10.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPldoZW4sIGhvd2V2ZXIsIHRoZSBHcmVla3MgbGVhcm5lZCB0aGF0IHRoZSBLaW5nIGFuZCBoaXMgZm9yY2VzIHdlcmUgaW4gdGhlaXIgYmFnZ2FnZSB0cmFpbiwgYW5kIHRoZSBLaW5nLCBvbiB0aGUgb3RoZXIgaGFuZCwgaGVhcmQgZnJvbSBUaXNzYXBoZXJuZXMgdGhhdCB0aGUgR3JlZWtzIHdlcmUgdmljdG9yaW91cyBvdmVyIHRoZSBkaXZpc2lvbiBvcHBvc2l0ZSB0aGVtIGFuZCBoYWQgZ29uZSBvbiBhaGVhZCBpbiBwdXJzdWl0LCB0aGVuIHRoZSBLaW5nIHByb2NlZWRlZCB0byBnYXRoZXIgaGlzIHRyb29wcyB0b2dldGhlciBhbmQgZm9ybSB0aGVtIGluIGxpbmUgb2YgYmF0dGxlLCBhbmQgQ2xlYXJjaHVzIGNhbGxlZCBQcm94ZW51cyAoZm9yIGhlIHdhcyBuZWFyZXN0IGhpbSBpbiB0aGUgbGluZSkgYW5kIHRvb2sgY291bnNlbCB3aXRoIGhpbSBhcyB0byB3aGV0aGVyIHRoZXkgc2hvdWxkIHNlbmQgYSBkZXRhY2htZW50IG9yIGdvIGluIGZ1bGwgZm9yY2UgdG8gdGhlIGNhbXAsIGZvciB0aGUgcHVycG9zZSBvZiBsZW5kaW5nIGFpZC4KPC90cmFuc2xhdGlvbj4="
translation['1.10.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk1lYW53aGlsZSB0aGUgR3JlZWtzIHNhdyB0aGUgS2luZyBhZHZhbmNpbmcgYWdhaW4sIGFzIGl0IHNlZW1lZCwgZnJvbSB0aGVpciByZWFyLCBhbmQgdGhleSBhY2NvcmRpbmdseSBjb3VudGVybWFyY2hlZCBhbmQgbWFkZSByZWFkeSB0byBtZWV0IGhpcyBhdHRhY2sgaW4gY2FzZSBoZSBzaG91bGQgYWR2YW5jZSBpbiB0aGF0IGRpcmVjdGlvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgR3JlZWtzIGhhZCBhZHZhbmNlZCBzdHJhaWdodCBmb3J3YXJkIGZyb20gdGhlaXIgcG9zaXRpb24gb24gdGhlIHJpZ2h0IHdpbmcgYW5kIHRoZSBLaW5nIHN0cmFpZ2h0IGZvcndhcmQgZnJvbSBoaXMgY2VudHJlICh3aGljaCB3YXMgYmV5b25kIHRoZSBsZWZ0IHdpbmcgb2YgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPicgZW50aXJlLCBpLmUuIEdyZWVrIGFuZCBiYXJiYXJpYW4sIGFybXkpOyBoZW5jZSB0aGUgdHdvIGhhZCBwYXNzZWQgYnkgb25lIGFub3RoZXIgYXQgYSBjb25zaWRlcmFibGUgZGlzdGFuY2UuIFRoZSBxdWVzdGlvbiBub3cgd2FzLCB3aGV0aGVyIHRoZSBLaW5nIG9uIGhpcyByZXR1cm4gbWFyY2ggd291bGQgbW92ZSBvYmxpcXVlbHksIHNvIGFzIHRvIG1lZXQgdGhlIEdyZWVrcywgb3Igd291bGQgZm9sbG93IHRoZSBzYW1lIHJvdXRlIGJ5IHdoaWNoIGhlIGFkdmFuY2VkLCB0aHVzIGtlZXBpbmcgY2xlYXIgb2YgdGhlbSBhZ2Fpbi48L25vdGU+OyB0aGUgS2luZywgaG93ZXZlciwgZGlkIG5vdCBkbyBzbywgYnV0IHJldHVybmVkIGJ5IHRoZSBzYW1lIHJvdXRlIGhlIGhhZCBmb2xsb3dlZCBiZWZvcmUsIHdoZW4gaGUgcGFzc2VkIG91dHNpZGUgb2YgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPicgZW50aXJlLCBpLmUuIEdyZWVrIGFuZCBiYXJiYXJpYW4sIGFybXkpOyBoZW5jZSB0aGUgdHdvIGhhZCBwYXNzZWQgYnkgb25lIGFub3RoZXIgYXQgYSBjb25zaWRlcmFibGUgZGlzdGFuY2UuIFRoZSBxdWVzdGlvbiBub3cgd2FzLCB3aGV0aGVyIHRoZSBLaW5nIG9uIGhpcyByZXR1cm4gbWFyY2ggd291bGQgbW92ZSBvYmxpcXVlbHksIHNvIGFzIHRvIG1lZXQgdGhlIEdyZWVrcywgb3Igd291bGQgZm9sbG93IHRoZSBzYW1lIHJvdXRlIGJ5IHdoaWNoIGhlIGFkdmFuY2VkLCB0aHVzIGtlZXBpbmcgY2xlYXIgb2YgdGhlbSBhZ2Fpbi48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+JyBsZWZ0IHdpbmcsIGFuZCBpbiBoaXMgcmV0dXJuIHBpY2tlZCB1cCBub3Qgb25seSB0aG9zZSB3aG8gaGFkIGRlc2VydGVkIHRvIHRoZSBHcmVla3MgZHVyaW5nIHRoZSBiYXR0bGUsIGJ1dCBhbHNvIFRpc3NhcGhlcm5lcyBhbmQgaGlzIHRyb29wcy4KPC90cmFuc2xhdGlvbj4="
translation['1.10.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkZvciBUaXNzYXBoZXJuZXMgaGFkIG5vdCB0YWtlbiB0byBmbGlnaHQgaW4gdGhlIGZpcnN0IGVuY291bnRlciwgYnV0IGhhZCBjaGFyZ2VkIGFsb25nIHRoZSByaXZlciB0aHJvdWdoIHRoZSBHcmVlayBwZWx0YXN0czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjguNCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjguNC01PC9iaWJsPi48L25vdGU+OyBoZSBkaWQgbm90IGtpbGwgYW55b25lIGluIGhpcyBwYXNzYWdlLCBidXQgdGhlIEdyZWVrcywgYWZ0ZXIgb3BlbmluZyBhIGdhcCBmb3IgaGlzIG1lbiwgcHJvY2VlZGVkIHRvIGRlYWwgYmxvd3MgYW5kIHRocm93IGphdmVsaW5zIHVwb24gdGhlbSBhcyB0aGV5IHdlbnQgdGhyb3VnaC4gVGhlIGNvbW1hbmRlciBvZiB0aGUgR3JlZWsgcGVsdGFzdHMgd2FzIEVwaXN0aGVuZXMgb2YgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjguNCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjguNC01PC9iaWJsPi48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEFtcGhpcG9saXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFtcGhpcG9saXMiPkFtcGhpcG9saXM8L3BsYWNlTmFtZT4sIGFuZCBpdCB3YXMgc2FpZCB0aGF0IGhlIHByb3ZlZCBoaW1zZWxmIGEgc2FnYWNpb3VzIG1hbi4KPC90cmFuc2xhdGlvbj4="
translation['1.10.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkF0IGFueSByYXRlLCBhZnRlciBUaXNzYXBoZXJuZXMgaGFkIHRodXMgY29tZSBvZmYgd2l0aCB0aGUgd29yc3Qgb2YgaXQsIGhlIGRpZCBub3Qgd2hlZWwgcm91bmQgYWdhaW4sIGJ1dCB3ZW50IG9uIHRvIHRoZSBjYW1wIG9mIHRoZSBHcmVla3MgYW5kIHRoZXJlIGZlbGwgaW4gd2l0aCB0aGUgS2luZzsgc28gaXQgd2FzIHRoYXQsIGFmdGVyIGZvcm1pbmcgdGhlaXIgbGluZXMgb25jZSBtb3JlLCB0aGV5IHdlcmUgcHJvY2VlZGluZyB0b2dldGhlci4KPC90cmFuc2xhdGlvbj4="
translation['1.10.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZXkgd2VyZSBvdmVyIGFnYWluc3QgdGhlIGxlZnQgd2luZyBvZiB0aGUgR3JlZWtzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BdCB0aGlzIHBvaW50IHRoZSBmcm9udHMgb2YgdGhlIHR3byBhcm1pZXPigJR3aGljaCB3ZXJlIGZhY2luZyBpbiBvcHBvc2l0ZSBkaXJlY3Rpb25zLCBhbmQsIGZ1cnRoZXIsIGVhY2ggaW4gdGhlIGRpcmVjdGlvbiBvcHBvc2l0ZSB0byB0aGF0IHdoaWNoIGl0IHRvb2sgaW4gdGhlIGZpcnN0IGVuY291bnRlcuKAlHdlcmUgaW4gYXBwcm94aW1hdGVseSB0aGUgc2FtZSBzdHJhaWdodCBsaW5lLiBJdCBzaG91bGQgYmUgbm90ZWQgdGhhdCBYZW5vcGhvbiBtZWFucyBieSDigJx0aGUgbGVmdCB3aW5n4oCdIG9mIHRoZSBHcmVla3MgdGhhdCB3aGljaCBoYWQgYmVlbiB0aGUgbGVmdCB3aW5nIGluIHRoZSBvcmlnaW5hbCBmb3JtYXRpb24sIGJ1dCBoYWQgbm93IGJlY29tZSB0aGUgcmlnaHQuPC9ub3RlPiB0aGUgbGF0dGVyIGNvbmNlaXZlZCB0aGUgZmVhciB0aGF0IHRoZXkgbWlnaHQgYWR2YW5jZSBhZ2FpbnN0IHRoYXQgd2luZyBhbmQsIGJ5IG91dGZsYW5raW5nIHRoZW0gb24gYm90aCBzaWRlcywgY3V0IHRoZW0gdG8gcGllY2VzOyB0aGV5IHRob3VnaHQgaXQgYmVzdCwgdGhlcmVmb3JlLCB0byBkcmF3IHRoZSB3aW5nIGJhY2sgYW5kIGdldCB0aGUgcml2ZXIgaW4gdGhlaXIgcmVhci48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIEdyZWVrIGxpbmUgd2FzIG5vdywgYXMgaW4gdGhlIGJlZ2lubmluZywgYXQgcmlnaHQgYW5nbGVzIHRvIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTEyMzg0MiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTIzODQyIj5FdXBocmF0ZXM8L3BsYWNlTmFtZT4uIFRoZSBtb3ZlbWVudCBoZXJlIGRlc2NyaWJlZCB3b3VsZCAoaWYgZXhlY3V0ZWQpIGhhdmUgbWFkZSBpdCBwYXJhbGxlbCB0byB0aGUgcml2ZXIsIHRoZSBsYXR0ZXIgc2VydmluZyBhcyBhIGRlZmVuY2UgaW4gdGhlIHJlYXIuPC9ub3RlPgo8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTEyMzg0MiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTIzODQyIj5FdXBocmF0ZXM8L3BsYWNlTmFtZT4uIFRoZSBtb3ZlbWVudCBoZXJlIGRlc2NyaWJlZCB3b3VsZCAoaWYgZXhlY3V0ZWQpIGhhdmUgbWFkZSBpdCBwYXJhbGxlbCB0byB0aGUgcml2ZXIsIHRoZSBsYXR0ZXIgc2VydmluZyBhcyBhIGRlZmVuY2UgaW4gdGhlIHJlYXIuPC90cmFuc2xhdGlvbj4="
translation['1.10.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hpbGUgdGhleSB3ZXJlIHRha2luZyBjb3Vuc2VsIGFib3V0IHRoaXMgbWF0dGVyLCB0aGUgS2luZyBoYWQgYWxyZWFkeSBjaGFuZ2VkIGhpcyBsaW5lIG9mIGJhdHRsZSB0byB0aGUgc2FtZSBmb3JtIGFzIHRoZWlycyBhbmQgYnJvdWdodCBpdCBpbnRvIHBvc2l0aW9uIG9wcG9zaXRlIHRoZW0sIGp1c3QgYXMgd2hlbiBoZSBoYWQgbWV0IHRoZW0gZm9yIGJhdHRsZSB0aGUgZmlyc3QgdGltZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+WGVub3Bob24gc2VlbXMgdG8gbWVhbiB0aGF0IHRoZSBLaW5nIG5vdyBtb3ZlZCB0byB0aGUgcmlnaHQgdW50aWwgaGlzIGZsYW5rIChsaWtlIHRoYXQgb2YgdGhlIEdyZWVrc+KAlHNlZSB0aGUgcHJlY2VkaW5nIG5vdGVzKSByZXN0ZWQgdXBvbiB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDExMjM4NDIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTEyMzg0MiI+RXVwaHJhdGVzPC9wbGFjZU5hbWU+LiBUaGUgdHdvIGFybWllcywgdGhlcmVmb3JlLCB3ZXJlIGFnYWluIHNxdWFyZWx5IGZhY2luZyBvbmUgYW5vdGhlciwgdGhvdWdoIHdpdGggcG9zaXRpb25zIHJlbGF0aXZlbHkgcmV2ZXJzZWQgKHNlZSBub3RlIDIgYWJvdmUpLjwvbm90ZT4gQW5kIHdoZW4gdGhlIEdyZWVrcyBzYXcgdGhhdCB0aGUgZW5lbXkgd2VyZSBuZWFyIHRoZW0gYW5kIGluIGJhdHRsZS1vcmRlciwgdGhleSBhZ2FpbiBzdHJ1Y2sgdXAgdGhlIHBhZWFuIGFuZCBhZHZhbmNlZCB0byB0aGUgYXR0YWNrIG11Y2ggbW9yZSBlYWdlcmx5IHRoYW4gYmVmb3JlOwo8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTEyMzg0MiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTIzODQyIj5FdXBocmF0ZXM8L3BsYWNlTmFtZT4uIFRoZSB0d28gYXJtaWVzLCB0aGVyZWZvcmUsIHdlcmUgYWdhaW4gc3F1YXJlbHkgZmFjaW5nIG9uZSBhbm90aGVyLCB0aG91Z2ggd2l0aCBwb3NpdGlvbnMgcmVsYXRpdmVseSByZXZlcnNlZCAoc2VlIG5vdGUgMiBhYm92ZSkuPC90cmFuc2xhdGlvbj4="
translation['1.10.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgdGhlIGJhcmJhcmlhbnMgb25jZSBhZ2FpbiBmYWlsZWQgdG8gYXdhaXQgdGhlIGF0dGFjaywgYnV0IHRvb2sgdG8gZmxpZ2h0IHdoZW4gYXQgYSBncmVhdGVyIGRpc3RhbmNlIGZyb20gdGhlIEdyZWVrcyB0aGFuIHRoZXkgd2VyZSB0aGUgZmlyc3QgdGltZS4KPC90cmFuc2xhdGlvbj4="
translation['1.10.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgR3JlZWtzIHB1cnN1ZWQgYXMgZmFyIGFzIGEgY2VydGFpbiB2aWxsYWdlLCBhbmQgdGhlcmUgdGhleSBoYWx0ZWQ7IGZvciBhYm92ZSB0aGUgdmlsbGFnZSB3YXMgYSBoaWxsLCB1cG9uIHdoaWNoIHRoZSBLaW5nIGFuZCBoaXMgZm9sbG93ZXJzIHJhbGxpZWQ7IGFuZCB0aGV5IHdlcmUgbm90IG5vdyBmb290LXNvbGRpZXJzLCBidXQgdGhlIGhpbGwgd2FzIGNvdmVyZWQgd2l0aCBob3JzZW1lbiwgc28gdGhhdCB0aGUgR3JlZWtzIGNvdWxkIG5vdCBwZXJjZWl2ZSB3aGF0IHdhcyBnb2luZyBvbi4gVGhleSBkaWQgc2VlLCB0aGV5IHNhaWQsIHRoZSByb3lhbCBzdGFuZGFyZCwgYSBraW5kIG9mIGdvbGRlbiBlYWdsZSBvbiBhIHNoaWVsZCwgcmFpc2VkIGFsb2Z0IHVwb24gYSBwb2xlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.10.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBhdCB0aGlzIHBvaW50IGFsc28gdGhlIEdyZWVrcyByZXN1bWVkIHRoZWlyIGZvcndhcmQgbW92ZW1lbnQsIHRoZSBob3JzZW1lbiBhdCBvbmNlIHByb2NlZWRlZCB0byBsZWF2ZSB0aGUgaGlsbDsgdGhleSBkaWQgbm90IGtlZXAgdG9nZXRoZXIsIGhvd2V2ZXIsIGFzIHRoZXkgd2VudCwgYnV0IHNjYXR0ZXJlZCBpbiBkaWZmZXJlbnQgZGlyZWN0aW9uczsgc28gdGhlIGhpbGwgYmVjYW1lIGdyYWR1YWxseSBjbGVhcmVkIG9mIHRoZSBob3JzZW1lbiwgdGlsbCBhdCBsYXN0IHRoZXkgd2VyZSBhbGwgZ29uZS4KPC90cmFuc2xhdGlvbj4="
translation['1.10.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5DbGVhcmNodXMsIGFjY29yZGluZ2x5LCBkaWQgbm90IGxlYWQgdGhlIGFybXkgdXAgdGhlIGhpbGwsIGJ1dCBoYWx0ZWQgYXQgaXRzIGZvb3QgYW5kIHNlbnQgTHljaXVzIHRoZSBTeXJhY3VzYW4gYW5kIGFub3RoZXIgbWFuIHRvIHRoZSBzdW1taXQsIGRpcmVjdGluZyB0aGVtIHRvIG9ic2VydmUgd2hhdCB3YXMgYmV5b25kIHRoZSBoaWxsIGFuZCByZXBvcnQgYmFjayB0byBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['1.10.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgTHljaXVzLCBhZnRlciByaWRpbmcgdXAgYW5kIGxvb2tpbmcsIGJyb3VnaHQgYmFjayB3b3JkIHRoYXQgdGhlIGVuZW15IHdlcmUgaW4gaGVhZGxvbmcgZmxpZ2h0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.10.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BdCBhYm91dCB0aGlzIHRpbWUgdGhlIHN1biBzZXQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZW4gdGhlIEdyZWVrcyBoYWx0ZWQsIGdyb3VuZGVkIGFybXMsIGFuZCBwcm9jZWVkZWQgdG8gcmVzdCB0aGVtc2VsdmVzLiBBdCB0aGUgc2FtZSB0aW1lIHRoZXkgd29uZGVyZWQgdGhhdCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHdhcyBub3doZXJlIHRvIGJlIHNlZW4gYW5kIHRoYXQgbm8gb25lIGVsc2UgaGFkIGNvbWUgdG8gdGhlbSBmcm9tIGhpbTsgZm9yIHRoZXkgZGlkIG5vdCBrbm93IHRoYXQgaGUgd2FzIGRlYWQsIGJ1dCBjb25qZWN0dXJlZCB0aGF0IGhlIGhhZCBlaXRoZXIgZ29uZSBvZmYgaW4gcHVyc3VpdCBvciBwdXNoZWQgb24gdG8gb2NjdXB5IHNvbWUgcG9pbnQuCjwvdHJhbnNsYXRpb24+"
translation['1.10.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGV5IHRvb2sgY291bnNlbCBmb3IgdGhlbXNlbHZlcyBhcyB0byB3aGV0aGVyIHRoZXkgc2hvdWxkIHJlbWFpbiB3aGVyZSB0aGV5IHdlcmUgYW5kIGJyaW5nIHRoZSBiYWdnYWdlIHRyYWluIHRoaXRoZXIsIG9yIHJldHVybiB0byB0aGVpciBjYW1wLiBUaGUgZGVjaXNpb24gd2FzIHRvIHJldHVybiwgYW5kIHRoZXkgcmVhY2hlZCB0aGVpciB0ZW50cyBhYm91dCBzdXBwZXItdGltZS4KPC90cmFuc2xhdGlvbj4="
translation['1.10.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5TdWNoIHdhcyB0aGUgY29uY2x1c2lvbiBvZiB0aGlzIGRheS4gVGhleSBmb3VuZCBtb3N0IG9mIHRoZWlyIHByb3BlcnR5IHBpbGxhZ2VkLCBpbiBwYXJ0aWN1bGFyIHdoYXRldmVyIHRoZXJlIHdhcyB0byBlYXQgb3IgZHJpbmssIGFuZCBhcyBmb3IgdGhlIHdhZ29ucyBsb2FkZWQgd2l0aCBmbG91ciBhbmQgd2luZSB3aGljaCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGhhZCBwcm92aWRlZCBpbiBvcmRlciB0aGF0LCBpZiBldmVyIHNlcmlvdXMgbmVlZCBzaG91bGQgb3ZlcnRha2UgdGhlIGFybXksIGhlIG1pZ2h0IGhhdmUgc3VwcGxpZXMgdG8gZGlzdHJpYnV0ZSBhbW9uZyB0aGUgR3JlZWtzIChhbmQgdGhlcmUgd2VyZSBmb3VyIGh1bmRyZWQgb2YgdGhlc2Ugd2Fnb25zLCBpdCB3YXMgc2FpZCksIHRoZXNlIGFsc28gdGhlIEtpbmcgYW5kIGhpcyBtZW4gaGFkIG5vdyBwaWxsYWdlZC4KPC90cmFuc2xhdGlvbj4="
translation['2.1.1'] = ""
translation['2.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BdCBkYXlicmVhayB0aGUgZ2VuZXJhbHMgY2FtZSB0b2dldGhlciwgYW5kIHRoZXkgd29uZGVyZWQgdGhhdCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IG5laXRoZXIgc2VudCBhbnlvbmUgZWxzZSB0byB0ZWxsIHRoZW0gd2hhdCB0byBkbyBub3IgYXBwZWFyZWQgaGltc2VsZi4gVGhleSByZXNvbHZlZCwgYWNjb3JkaW5nbHksIHRvIHBhY2sgdXAgd2hhdCB0aGV5IGhhZCwgYXJtIHRoZW1zZWx2ZXMsIGFuZCBwdXNoIGZvcndhcmQgdW50aWwgdGhleSBzaG91bGQgam9pbiBmb3JjZXMgd2l0aCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSB3ZXJlIG9uIHRoZSBwb2ludCBvZiBzZXR0aW5nIG91dCwgYW5kIGp1c3QgYXMgdGhlIHN1biB3YXMgcmlzaW5nLCBjYW1lIFByb2NsZXMsIHRoZSBydWxlciBvZiBUZXV0aHJhbmlhLCBhIGRlc2NlbmRhbnQgb2YgRGFtYXJhdHVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIGtpbmcgb2YgU3BhcnRhIHdobyB3YXMgZGVwb3NlZCBpbiA8ZGF0ZSBhdXRobmFtZT0iLTQ5MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQ5MSI+NDkxPC9kYXRlPiBCLkMuLCBmbGVkIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAwMjMxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDAyMzEiPlBlcnNpYTwvcGxhY2VOYW1lPiwgYW5kIGFmdGVyd2FyZHMgYWNjb21wYW5pZWQgWGVyeGVzIGluIGhpcyBleHBlZGl0aW9uIGFnYWluc3QgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LiBUZXV0aHJhbmlhIChpbiB3ZXN0ZXJuIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyMjk0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDIyOTQiPkFzaWEgTWlub3I8L3BsYWNlTmFtZT4pIG1hZGUgcGFydCBvZiB0aGUgdGVycml0b3J5IGdpdmVuIGhpbSBieSBYZXJ4ZXMgYXMgYSByZXdhcmQgZm9yIHRoaXMgc2VydmljZS48L25vdGU+IHRoZSBMYWNvbmlhbiwgYW5kIHdpdGggaGltIEdsdXMsIHRoZSBzb24gb2YgVGFtb3MuIFRoZXkgcmVwb3J0ZWQgdGhhdCA8ZGF0ZSBhdXRobmFtZT0iLTQ5MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQ5MSI+NDkxPC9kYXRlPiBCLkMuLCBmbGVkIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAwMjMxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDAyMzEiPlBlcnNpYTwvcGxhY2VOYW1lPiwgYW5kIGFmdGVyd2FyZHMgYWNjb21wYW5pZWQgWGVyeGVzIGluIGhpcyBleHBlZGl0aW9uIGFnYWluc3QgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LiBUZXV0aHJhbmlhIChpbiB3ZXN0ZXJuIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyMjk0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDIyOTQiPkFzaWEgTWlub3I8L3BsYWNlTmFtZT4pIG1hZGUgcGFydCBvZiB0aGUgdGVycml0b3J5IGdpdmVuIGhpbSBieSBYZXJ4ZXMgYXMgYSByZXdhcmQgZm9yIHRoaXMgc2VydmljZS48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHdhcyBkZWFkLCBhbmQgdGhhdCBBcmlhZXVzIGhhZCBmbGVkIGFuZCB3YXMgbm93LCBhbG9uZyB3aXRoIHRoZSByZXN0IG9mIHRoZSBiYXJiYXJpYW5zLCBhdCB0aGUgc3RvcHBpbmctcGxhY2UgZnJvbSB3aGljaCB0aGV5IGhhZCBzZXQgb3V0IG9uIHRoZSBwcmVjZWRpbmcgZGF5OyBmdXJ0aGVyLCBoZSBzZW50IHdvcmQgdGhhdCBoZSBhbmQgaGlzIHRyb29wcyB3ZXJlIHRoYXQgZGF5IHdhaXRpbmcgZm9yIHRoZSBHcmVla3MsIG9uIHRoZSBjaGFuY2UgdGhhdCB0aGV5IGludGVuZGVkIHRvIGpvaW4gdGhlbSwgYnV0IG9uIHRoZSBuZXh0IGRheSwgc28gQXJpYWV1cyBzYWlkLCBoZSBzaG91bGQgc2V0IG91dCBvbiB0aGUgcmV0dXJuIGpvdXJuZXkgZm9yIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw2MDAyNzY1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDYwMDI3NjUiPklvbmlhPC9wbGFjZU5hbWU+LCB3aGVuY2UgaGUgaGFkIGNvbWUuCjwvdHJhbnNsYXRpb24+"
translation['2.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBnZW5lcmFscyB1cG9uIGhlYXJpbmcgdGhpcyBtZXNzYWdlLCBhbmQgdGhlIHJlc3Qgb2YgdGhlIEdyZWVrcyBhcyB0aGV5IGxlYXJuZWQgb2YgaXQsIHdlcmUgZ3JlYXRseSBkaXN0cmVzc2VkLiBDbGVhcmNodXMsIGhvd2V2ZXIsIHNhaWQ6IOKAnFdlbGwsIHdvdWxkIHRoYXQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiB3ZXJlIGFsaXZlISBidXQgc2luY2UgaGUgaXMgZGVhZCwgY2FycnkgYmFjayB3b3JkIHRvIEFyaWFldXMgdGhhdCwgZm9yIG91ciBwYXJ0LCB3ZSBoYXZlIGRlZmVhdGVkIHRoZSBLaW5nLCB0aGF0IHdlIGhhdmUgbm8gZW5lbXkgbGVmdCwgYXMgeW91IHNlZSwgdG8gZmlnaHQgd2l0aCwgYW5kIHRoYXQgaWYgeW91IGhhZCBub3QgY29tZSwgd2Ugc2hvdWxkIG5vdyBiZSBtYXJjaGluZyBhZ2FpbnN0IHRoZSBLaW5nLiBBbmQgd2UgcHJvbWlzZSBBcmlhZXVzIHRoYXQsIGlmIGhlIHdpbGwgY29tZSBoZXJlLCB3ZSB3aWxsIHNldCBoaW0gdXBvbiB0aGUgcm95YWwgdGhyb25lOyBmb3IgdG8gdGhvc2Ugd2hvIGFyZSB2aWN0b3Jpb3VzIGluIGJhdHRsZSBiZWxvbmdzIGFsc28gdGhlIHJpZ2h0IHRvIHJ1bGUu4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPldpdGggdGhlc2Ugd29yZHMgaGUgc2VudCBiYWNrIHRoZSBtZXNzZW5nZXJzLCBzZW5kaW5nIHdpdGggdGhlbSBDaGVpcmlzb3BodXMgdGhlIExhY29uaWFuIGFuZCBNZW5vbiB0aGUgVGhlc3NhbGlhbjsgZm9yIHRoaXMgd2FzIE1lbm9uJ3Mgb3duIHdpc2gsIGluYXNtdWNoIGFzIGhlIHdhcyBhbiBpbnRpbWF0ZSBhbmQgZ3Vlc3QtZnJpZW5kIG9mIEFyaWFldXMuCjwvdHJhbnNsYXRpb24+"
translation['2.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TbyB0aGV5IHdlbnQgb2ZmLCBhbmQgQ2xlYXJjaHVzIGF3YWl0ZWQgdGhlaXIgcmV0dXJuOyBtZWFud2hpbGUgdGhlIHRyb29wcyBwcm92aWRlZCB0aGVtc2VsdmVzIHdpdGggZm9vZCBhcyBiZXN0IHRoZXkgY291bGQsIGJ5IHNsYXVnaHRlcmluZyBveGVuIGFuZCBhc3NlcyBvZiB0aGUgYmFnZ2FnZSB0cmFpbi4gQXMgZm9yIGZ1ZWwsIHRoZXkgd2VudCBmb3J3YXJkIGEgc2hvcnQgZGlzdGFuY2UgZnJvbSB0aGVpciBsaW5lIHRvIHRoZSBwbGFjZSB3aGVyZSB0aGUgYmF0dGxlIHdhcyBmb3VnaHQgYW5kIHVzZWQgZm9yIHRoYXQgcHVycG9zZSBub3Qgb25seSB0aGUgYXJyb3dzLCBtYW55IGluIG51bWJlciwgd2hpY2ggdGhlIEdyZWVrcyBoYWQgY29tcGVsbGVkIGFsbCB3aG8gZGVzZXJ0ZWQgZnJvbSB0aGUgS2luZyB0byB0aHJvdyBhd2F5LCBidXQgYWxzbyB0aGUgd2lja2VyIHNoaWVsZHMgYW5kIHRoZSB3b29kZW4gRWd5cHRpYW4gc2hpZWxkczsgdGhlcmUgd2VyZSBsaWtld2lzZSBtYW55IGxpZ2h0IHNoaWVsZHMgYW5kIHdhZ29ucyB0aGF0IHRoZXkgY291bGQgY2Fycnkgb2ZmLCBhbGwgb2YgdGhlbSBhYmFuZG9uZWQuIFRoZXNlIHZhcmlvdXMgdGhpbmdzLCB0aGVuLCB0aGV5IHVzZWQgZm9yIGZ1ZWwsIGFuZCBzbyBib2lsZWQgbWVhdCBhbmQgbGl2ZWQgb24gaXQgZm9yIHRoYXQgZGF5Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgbm90ZSBvbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuNS42IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuNS42PC9iaWJsPi48L25vdGU+CjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS41LjYiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS41LjY8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['2.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgbm93IGl0IHdhcyBhYm91dCBmdWxsLW1hcmtldCB0aW1lLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgbm90ZSBvbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuOC4xIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuOC4xPC9iaWJsPi48L25vdGU+IGFuZCBoZXJhbGRzIGFycml2ZWQgZnJvbSB0aGUgS2luZyBhbmQgVGlzc2FwaGVybmVzLCBhbGwgb2YgdGhlbSBiYXJiYXJpYW5zIGV4Y2VwdCBvbmUsIGEgR3JlZWsgbmFtZWQgUGhhbGludXMsIHdobywgYXMgaXQgY2hhbmNlZCwgd2FzIHdpdGggVGlzc2FwaGVybmVzIGFuZCB3YXMgaGVsZCBpbiBob25vdXIgYnkgaGltOyBmb3IgdGhpcyBQaGFsaW51cyBwcm9mZXNzZWQgdG8gYmUgYW4gZXhwZXJ0IGluIHRhY3RpY3MgYW5kIHRoZSBoYW5kbGluZyBvZiBoZWF2eSBpbmZhbnRyeS4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjguMSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjguMTwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['2.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlc2UgaGVyYWxkcyBjYW1lIHVwLCB0aGV5IGNhbGxlZCBmb3IgdGhlIGxlYWRlcnMgb2YgdGhlIEdyZWVrcyBhbmQgc2FpZCB0aGF0IHRoZSBLaW5nLCBzaW5jZSB2aWN0b3J5IGhhZCBmYWxsZW4gdG8gaGltIGFuZCBoZSBoYWQgc2xhaW4gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiwgZGlyZWN0ZWQgdGhlIEdyZWVrcyB0byBnaXZlIHVwIHRoZWlyIGFybXMsIGdvIHRvIHRoZSBLaW5nJ3MgY291cnQsIGFuZCBzZWVrIGZvciB0aGVtc2VsdmVzIHdoYXRldmVyIGZhdm91ciB0aGV5IG1pZ2h0IGJlIGFibGUgdG8gZ2V0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlN1Y2ggd2FzIHRoZSBtZXNzYWdlIG9mIHRoZSBLaW5nJ3MgaGVyYWxkcy4gVGhlIEdyZWVrcyByZWNlaXZlZCBpdCB3aXRoIGFuZ2VyLCBidXQgbmV2ZXJ0aGVsZXNzIENsZWFyY2h1cyBzYWlkIGFzIG11Y2ggYXMgdGhpcywgdGhhdCBpdCB3YXMgbm90IHZpY3RvcnMgd2hvIGdhdmUgdXAgdGhlaXIgYXJtczsg4oCcSG93ZXZlcizigJ0gaGUgY29udGludWVkLCDigJxkbyB5b3UsIG15IGZlbGxvdyBnZW5lcmFscywgZ2l2ZSB0aGVzZSBtZW4gd2hhdGV2ZXIgYW5zd2VyIHlvdSBjYW4gdGhhdCBpcyBiZXN0IGFuZCBtb3N0IGhvbm91cmFibGUsIGFuZCBJIHdpbGwgcmV0dXJuIGltbWVkaWF0ZWx5LuKAnSBGb3Igb25lIG9mIGhpcyBzZXJ2YW50cyBoYWQgc3VtbW9uZWQgaGltIHRvIHNlZSB0aGUgdml0YWwgb3JnYW5zIHRoYXQgaGFkIGJlZW4gdGFrZW4gb3V0IG9mIGEgc2FjcmlmaWNpYWwgdmljdGltLCBmb3IgQ2xlYXJjaHVzIGNoYW5jZWQgdG8gYmUgZW5nYWdlZCBpbiBzYWNyaWZpY2luZy4KPC90cmFuc2xhdGlvbj4="
translation['2.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBDbGVhbm9yIHRoZSBBcmNhZGlhbiwgYmVpbmcgdGhlIGVsZGVzdCBvZiB0aGUgZ2VuZXJhbHMsIG1hZGUgYW5zd2VyIHRoYXQgdGhleSB3b3VsZCBkaWUgc29vbmVyIHRoYW4gZ2l2ZSB1cCB0aGVpciBhcm1zLiBBbmQgUHJveGVudXMgdGhlIFRoZWJhbiBzYWlkOiDigJxGb3IgbXkgcGFydCwgUGhhbGludXMsIEkgd29uZGVyIHdoZXRoZXIgdGhlIEtpbmcgaXMgYXNraW5nIGZvciBvdXIgYXJtcyBvbiB0aGUgYXNzdW1wdGlvbiB0aGF0IGhlIGlzIHZpY3RvcmlvdXMsIG9yIHNpbXBseSBhcyBnaWZ0cywgb24gdGhlIGFzc3VtcHRpb24gdGhhdCB3ZSBhcmUgaGlzIGZyaWVuZHMuIEZvciBpZiBoZSBhc2tzIGZvciB0aGVtIGFzIHZpY3Rvciwgd2h5IG5lZWQgaGUgYXNrIGZvciB0aGVtLCBpbnN0ZWFkIG9mIGNvbWluZyBhbmQgdGFraW5nIHRoZW0/PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZXNlIHdvcmRzIHJlY2FsbCB0aGUgZmFtb3VzIGFuc3dlciB3aGljaCBMZW9uaWRhcyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZXJtb3B5bGFlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUaGVybW9weWxhZSI+VGhlcm1vcHlsYWU8L3BsYWNlTmFtZT4gbWFkZSB0byB0aGUgc2FtZSBkZW1hbmQ6IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs68zr/Ou+G9vM69IM67zrHOsuG9syw8L2ZvcmVpZ24+IOKAnENvbWUgYW5kIHRha2UgdGhlbS7igJ08L25vdGU+IEJ1dCBpZiBoZSBkZXNpcmVzIHRvIGdldCB0aGVtIGJ5IHBlcnN1YXNpb24sIGxldCBoaW0gc2V0IGZvcnRoIHdoYXQgdGhlIHNvbGRpZXJzIHdpbGwgcmVjZWl2ZSBpbiBjYXNlIHRoZXkgZG8gaGltIHRoaXMgZmF2b3VyLuKAnQo8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZXJtb3B5bGFlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUaGVybW9weWxhZSI+VGhlcm1vcHlsYWU8L3BsYWNlTmFtZT4gbWFkZSB0byB0aGUgc2FtZSBkZW1hbmQ6IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs68zr/Ou+G9vM69IM67zrHOsuG9syw8L2ZvcmVpZ24+IOKAnENvbWUgYW5kIHRha2UgdGhlbS7igJ08L3RyYW5zbGF0aW9uPg=="
translation['2.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5JbiByZXBseSB0byB0aGlzIFBoYWxpbnVzIHNhaWQ6IOKAnFRoZSBLaW5nIGJlbGlldmVzIHRoYXQgaGUgaXMgdmljdG9yIGJlY2F1c2UgaGUgaGFzIHNsYWluIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4uIEZvciB3aG8gaXMgdGhlcmUgbm93IHdobyBpcyBjb250ZW5kaW5nIGFnYWluc3QgaGltIGZvciBoaXMgcmVhbG0/IEZ1cnRoZXIsIGhlIGJlbGlldmVzIHRoYXQgeW91IGFsc28gYXJlIGhpcyBiZWNhdXNlIGhlIGhhcyB5b3UgaW4gdGhlIG1pZGRsZSBvZiBoaXMgY291bnRyeSwgZW5jbG9zZWQgYnkgaW1wYXNzYWJsZSByaXZlcnMsIGFuZCBiZWNhdXNlIGhlIGNhbiBicmluZyBhZ2FpbnN0IHlvdSBhIG11bHRpdHVkZSBvZiBtZW4gc28gZ3JlYXQgdGhhdCB5b3UgY291bGQgbm90IHNsYXkgdGhlbSBldmVuIGlmIGhlIHdlcmUgdG8gcHV0IHRoZW0gaW4geW91ciBoYW5kcy7igJ0gVGhlbiBUaGVvcG9tcHVzLCBhbiBBdGhlbmlhbiwgc2FpZDoKPC90cmFuc2xhdGlvbj4="
translation['2.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz7igJxQaGFsaW51cywgYXQgdGhpcyBtb21lbnQsIGFzIHlvdSBzZWUgZm9yIHlvdXJzZWxmLCB3ZSBoYXZlIG5vIG90aGVyIHBvc3Nlc3Npb24gc2F2ZSBhcm1zIGFuZCB2YWxvdXIuIE5vdyBpZiB3ZSBrZWVwIG91ciBhcm1zLCB3ZSBpbWFnaW5lIHRoYXQgd2UgY2FuIG1ha2UgdXNlIG9mIG91ciB2YWxvdXIgYWxzbywgYnV0IGlmIHdlIGdpdmUgdGhlbSB1cCwgdGhhdCB3ZSBzaGFsbCBsaWtld2lzZSBiZSBkZXByaXZlZCBvZiBvdXIgbGl2ZXMuIERvIG5vdCBzdXBwb3NlLCB0aGVyZWZvcmUsIHRoYXQgd2Ugc2hhbGwgZ2l2ZSB1cCB0byB5b3UgdGhlIG9ubHkgcG9zc2Vzc2lvbnMgdGhhdCB3ZSBoYXZlOyByYXRoZXIsIHdpdGggdGhlc2Ugd2Ugc2hhbGwgZG8gYmF0dGxlIGFnYWluc3QgeW91IGZvciB5b3VyIHBvc3Nlc3Npb25zIGFzIHdlbGwu4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGhlIGhlYXJkIHRoaXMsIFBoYWxpbnVzIGxhdWdoZWQgYW5kIHNhaWQ6IOKAnFdoeSwgeW91IHRhbGsgbGlrZSBhIHBoaWxvc29waGVyLCB5b3VuZyBtYW4sIGFuZCB3aGF0IHlvdSBzYXkgaXMgcXVpdGUgcHJldHR5OyBiZSBzdXJlLCBob3dldmVyLCB0aGF0IHlvdSBhcmUgYSBmb29sIGlmIHlvdSBpbWFnaW5lIHRoYXQgeW91ciB2YWxvdXIgY291bGQgcHJvdmUgc3VwZXJpb3IgdG8gdGhlIEtpbmcncyBtaWdodC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['2.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSB3ZXJlIHNvbWUgb3RoZXJzLCBzbyB0aGUgc3RvcnkgZ29lcywgd2hvIHdlYWtlbmVkIGEgbGl0dGxlLCBhbmQgc2FpZCB0aGF0LCBqdXN0IGFzIHRoZXkgaGFkIHByb3ZlZCB0aGVtc2VsdmVzIGZhaXRoZnVsIHRvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIHNvIHRoZXkgbWlnaHQgcHJvdmUgdmFsdWFibGUgdG8gdGhlIEtpbmcgYWxzbyBpZiBoZSBzaG91bGQgd2lzaCB0byBiZWNvbWUgdGhlaXIgZnJpZW5kOyBoZSBtaWdodCB3YW50IHRvIGVtcGxveSB0aGVtIGZvciB2YXJpb3VzIHB1cnBvc2VzLCBwZXJoYXBzIGZvciBhIGNhbXBhaWduIGFnYWluc3QgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjgzMyI+RWd5cHQ8L3BsYWNlTmFtZT4sIHdoaWNoIHRoZXkgc2hvdWxkIGJlIGdsYWQgdG8gYXNzaXN0IGhpbSBpbiBzdWJkdWluZy4KPC90cmFuc2xhdGlvbj4="
translation['2.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyB0aW1lIENsZWFyY2h1cyByZXR1cm5lZCwgYW5kIGFza2VkIHdoZXRoZXIgdGhleSBoYWQgeWV0IGdpdmVuIGFuIGFuc3dlci4gQW5kIFBoYWxpbnVzIGJyb2tlIGluIGFuZCBzYWlkOiDigJxUaGVzZSBwZW9wbGUsIENsZWFyY2h1cywgYWxsIHNheSBkaWZmZXJlbnQgdGhpbmdzOyBidXQgdGVsbCB1cyB3aGF0IHlvdXIgb3duIG9waW5pb24gaXMu4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5DbGVhcmNodXMgcmVwbGllZDog4oCcSSBteXNlbGYsIFBoYWxpbnVzLCB3YXMgZ2xhZCB0byBzZWUgeW91LCBhbmQsIEkgcHJlc3VtZSwgYWxsIHRoZSByZXN0IHdlcmUsIHRvbzsgZm9yIHlvdSBhcmUgYSBHcmVlayBhbmQgc28gYXJlIHdlLCB3aG9zZSBudW1iZXJzIHlvdSBjYW4gb2JzZXJ2ZSBmb3IgeW91cnNlbGYuIE5vdyBzaW5jZSB3ZSBhcmUgaW4gc3VjaCBhIHNpdHVhdGlvbiwgd2UgYXNrIHlvdSB0byBhZHZpc2UgdXMgYXMgdG8gd2hhdCB3ZSBvdWdodCB0byBkbyBhYm91dCB0aGUgbWF0dGVyIHlvdSBtZW50aW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5EbyB5b3UsIHRoZW4sIGluIHRoZSBzaWdodCBvZiB0aGUgZ29kcywgZ2l2ZSB1cyB3aGF0ZXZlciBhZHZpY2UgeW91IHRoaW5rIGlzIGJlc3QgYW5kIG1vc3QgaG9ub3VyYWJsZSwgYWR2aWNlIHdoaWNoIHdpbGwgYnJpbmcgeW91IGhvbm91ciBpbiBmdXR1cmUgdGltZSB3aGVuIGl0IGlzIHJlcG9ydGVkIGluIHRoaXMgd2F5OiBgT25jZSBvbiBhIHRpbWUgUGhhbGludXMsIHdoZW4gaGUgd2FzIHNlbnQgYnkgdGhlIEtpbmcgdG8gb3JkZXIgdGhlIEdyZWVrcyB0byBzdXJyZW5kZXIgdGhlaXIgYXJtcywgZ2F2ZSB0aGVtLCB3aGVuIHRoZXkgc291Z2h0IGhpcyBjb3Vuc2VsLCB0aGUgZm9sbG93aW5nIGFkdmljZS4nIEFuZCB5b3Uga25vdyB0aGF0IGFueSBhZHZpY2UgeW91IG1heSBnaXZlIHdpbGwgY2VydGFpbmx5IGJlIHJlcG9ydGVkIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPi7igJ0KPC90cmFuc2xhdGlvbj4="
translation['2.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgQ2xlYXJjaHVzIHdhcyBtYWtpbmcgdGhpcyBjcmFmdHkgc3VnZ2VzdGlvbiBpbiB0aGUgaG9wZSB0aGF0IHRoZSB2ZXJ5IG1hbiB3aG8gd2FzIGFjdGluZyBhcyB0aGUgS2luZydzIGFtYmFzc2Fkb3IgbWlnaHQgYWR2aXNlIHRoZW0gbm90IHRvIGdpdmUgdXAgdGhlaXIgYXJtcywgYW5kIHRoYXQgdGh1cyB0aGUgR3JlZWtzIG1pZ2h0IGJlIG1hZGUgbW9yZSBob3BlZnVsLiBCdXQsIGNvbnRyYXJ5IHRvIGhpcyBleHBlY3RhdGlvbiwgUGhhbGludXMgYWxzbyBtYWRlIGEgY3JhZnR5IHR1cm4sIGFuZCBzYWlkOgo8L3RyYW5zbGF0aW9uPg=="
translation['2.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz7igJxGb3IgbXkgcGFydCwgaWYgeW91IGhhdmUgb25lIGNoYW5jZSBpbiB0ZW4gdGhvdXNhbmQgb2Ygc2F2aW5nIHlvdXJzZWx2ZXMgYnkgY2Fycnlpbmcgb24gd2FyIGFnYWluc3QgdGhlIEtpbmcsIEkgYWR2aXNlIHlvdSBub3QgdG8gZ2l2ZSB1cCB5b3VyIGFybXM7IGJ1dCBpZiB5b3UgaGF2ZSBubyBob3BlIG9mIGRlbGl2ZXJhbmNlIHdpdGhvdXQgdGhlIEtpbmcncyBjb25zZW50LCBJIGFkdmlzZSB5b3UgdG8gc2F2ZSB5b3Vyc2VsdmVzIGluIHdoYXQgd2F5IHlvdSBjYW4u4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5JbiByZXBseSB0byB0aGlzIENsZWFyY2h1cyBzYWlkOiDigJxXZWxsLCB0aGF0IGlzIHdoYXQgeW91IHNheTsgYnV0IGFzIG91ciBhbnN3ZXIgY2FycnkgYmFjayB0aGlzIHdvcmQsIHRoYXQgaW4gb3VyIHZpZXcgaWYgd2UgYXJlIHRvIGJlIGZyaWVuZHMgb2YgdGhlIEtpbmcsIHdlIHNob3VsZCBiZSBtb3JlIHZhbHVhYmxlIGZyaWVuZHMgaWYgd2Uga2VlcCBvdXIgYXJtcyB0aGFuIGlmIHdlIGdpdmUgdGhlbSB1cCB0byBzb21lb25lIGVsc2UsIGFuZCBpZiB3ZSBhcmUgdG8gd2FnZSB3YXIgd2l0aCBoaW0sIHdlIHNob3VsZCB3YWdlIHdhciBiZXR0ZXIgaWYgd2Uga2VlcCBvdXIgYXJtcyB0aGFuIGlmIHdlIGdpdmUgdGhlbSB1cCB0byBzb21lb25lIGVsc2Uu4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgUGhhbGludXMgc2FpZDog4oCcVGhhdCBhbnN3ZXIsIHRoZW4sIHdlIHdpbGwgY2FycnkgYmFjazsgYnV0IHRoZSBLaW5nIGJhZGUgdXMgdGVsbCB5b3UgdGhpcyBhbHNvLCB0aGF0IGlmIHlvdSByZW1haW4gd2hlcmUgeW91IGFyZSwgeW91IGhhdmUgYSB0cnVjZSwgaWYgeW91IGFkdmFuY2Ugb3IgcmV0aXJlLCB3YXIuIEluZm9ybSB1cywgdGhlcmVmb3JlLCBvbiB0aGlzIHBvaW50IGFzIHdlbGw6IHNoYWxsIHlvdSByZW1haW4gYW5kIGlzIHRoZXJlIGEgdHJ1Y2UsIG9yIHNoYWxsIEkgcmVwb3J0IGZyb20geW91IHRoYXQgdGhlcmUgaXMgd2FyP+KAnQo8L3RyYW5zbGF0aW9uPg=="
translation['2.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5DbGVhcmNodXMgcmVwbGllZDog4oCcUmVwb3J0LCB0aGVuLCBvbiB0aGlzIHBvaW50IHRoYXQgb3VyIHZpZXcgaXMgcHJlY2lzZWx5IHRoZSBzYW1lIGFzIHRoZSBLaW5nJ3Mu4oCdIOKAnFdoYXQsIHRoZW4sIGlzIHRoYXQ/4oCdIHNhaWQgUGhhbGludXMuIENsZWFyY2h1cyByZXBsaWVkLCDigJxJZiB3ZSByZW1haW4sIGEgdHJ1Y2UsIGlmIHdlIHJldGlyZSBvciBhZHZhbmNlLCB3YXIu4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgUGhhbGludXMgYXNrZWQgYWdhaW4sIOKAnFNoYWxsIEkgcmVwb3J0IHRydWNlIG9yIHdhcj/igJ0gQW5kIENsZWFyY2h1cyBhZ2FpbiBtYWRlIHRoZSBzYW1lIHJlcGx5LCDigJxUcnVjZSBpZiB3ZSByZW1haW4sIGlmIHdlIHJldGlyZSBvciBhZHZhbmNlLCB3YXIu4oCdIFdoYXQgaGUgbWVhbnQgdG8gZG8sIGhvd2V2ZXIsIGhlIGRpZCBub3QgaW5kaWNhdGUuCjwvdHJhbnNsYXRpb24+"
translation['2.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TbyBQaGFsaW51cyBhbmQgaGlzIGNvbXBhbmlvbnMgZGVwYXJ0ZWQuIEJ1dCB0aGUgbWVzc2VuZ2VycyBmcm9tIEFyaWFldXMgYXJyaXZlZOKAlFByb2NsZXMgYW5kIENoZWlyaXNvcGh1cyBvbmx5LCBmb3IgTWVub24gc3RheWVkIGJlaGluZCB3aXRoIEFyaWFldXM7IHRoZXkgcmVwb3J0ZWQgdGhhdCBBcmlhZXVzIHNhaWQgdGhlcmUgd2VyZSBtYW55IFBlcnNpYW5zIG9mIGhpZ2hlciByYW5rIHRoYW4gaGltc2VsZiBhbmQgdGhleSB3b3VsZCBub3QgdG9sZXJhdGUgaGlzIGJlaW5nIGtpbmcuIOKAnEJ1dCzigJ0gdGhlIG1lc3NlbmdlcnMgY29udGludWVkLCDigJxpZiB5b3Ugd2lzaCB0byBtYWtlIHRoZSByZXR1cm4gam91cm5leSB3aXRoIGhpbSwgaGUgYmlkcyB5b3UgY29tZSBhdCBvbmNlLCBkdXJpbmcgdGhlIG5pZ2h0OyBvdGhlcndpc2UsIGhlIHNheXMgaGUgd2lsbCBzZXQgb3V0IHRvLW1vcnJvdyBtb3JuaW5nLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['2.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBDbGVhcmNodXMgc2FpZDog4oCcV2VsbCwgbGV0IGl0IGJlIHRoaXMgd2F5OiBpZiB3ZSBjb21lLCBldmVuIGFzIHlvdSBwcm9wb3NlOyBpZiB3ZSBkbyBub3QsIGZvbGxvdyB3aGF0ZXZlciBjb3Vyc2UgeW91IG1heSB0aGluayBtb3N0IGFkdmFudGFnZW91cyB0byB5b3Vyc2VsdmVzLuKAnSBCdXQgd2hhdCBoZSBtZWFudCB0byBkbywgaGUgZGlkIG5vdCB0ZWxsIHRoZW0sIGVpdGhlci4KPC90cmFuc2xhdGlvbj4="
translation['2.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzLCB3aGVuIHRoZSBzdW4gd2FzIGFscmVhZHkgc2V0dGluZywgaGUgY2FsbGVkIHRvZ2V0aGVyIHRoZSBnZW5lcmFscyBhbmQgY2FwdGFpbnMgYW5kIHNwb2tlIGFzIGZvbGxvd3M6IOKAnFdoZW4gSSBzYWNyaWZpY2VkLCBnZW50bGVtZW4sIHRoZSBvbWVucyBkaWQgbm90IHJlc3VsdCBmYXZvdXJhYmx5IGZvciBwcm9jZWVkaW5nIGFnYWluc3QgdGhlIEtpbmcuIEFuZCB3aXRoIGdvb2QgcmVhc29uLCBpdCBwcm92ZXMsIHRoZXkgd2VyZSBub3QgZmF2b3VyYWJsZTsgZm9yLCBhcyBJIG5vdyBhc2NlcnRhaW4sIGJldHdlZW4gdXMgYW5kIHRoZSBLaW5nIGlzIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTEzMDg1MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTMwODUwIj5UaWdyaXM8L3BsYWNlTmFtZT4sIGEgbmF2aWdhYmxlIHJpdmVyLCB3aGljaCB3ZSBjb3VsZCBub3QgY3Jvc3Mgd2l0aG91dCBib2F0c+KAlGFuZCBib2F0cyB3ZSBoYXZlIG5vbmUuIE9uIHRoZSBvdGhlciBoYW5kLCBpdCBpcyBub3QgcG9zc2libGUgZm9yIHVzIHRvIHN0YXkgd2hlcmUgd2UgYXJlLCBmb3Igd2UgY2Fubm90IGdldCBwcm92aXNpb25zOyBidXQgdGhlIG9tZW5zIHdlcmUgZXh0cmVtZWx5IGZhdm91cmFibGUgZm9yIG91ciBnb2luZyB0byBqb2luIHRoZSBmcmllbmRzIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['2.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoaXMsIHRoZW4sIGlzIHdoYXQgeW91IGFyZSB0byBkbzogZ28gYXdheSBhbmQgZGluZSBvbiB3aGF0ZXZlciB5b3Ugc2V2ZXJhbGx5IGhhdmU7IHdoZW4gdGhlIGhvcm4gZ2l2ZXMgdGhlIHNpZ25hbCBmb3IgZ29pbmcgdG8gcmVzdCwgcGFjayB1cDsgd2hlbiB0aGUgc2Vjb25kIHNpZ25hbCBpcyBnaXZlbiwgbG9hZCB5b3VyIGJhZ2dhZ2UgdXBvbiB0aGUgYmVhc3RzIG9mIGJ1cmRlbjsgYW5kIGF0IHRoZSB0aGlyZCBzaWduYWwgZm9sbG93IHRoZSB2YW4sIGtlZXBpbmcgdGhlIGJlYXN0cyBvZiBidXJkZW4gb24gdGhlIHNpZGUgbmV4dCB0byB0aGUgcml2ZXIgYW5kIHRoZSBob3BsaXRlcyBvdXRzaWRlLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['2.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlVwb24gaGVhcmluZyB0aGVzZSB3b3JkcyB0aGUgZ2VuZXJhbHMgYW5kIGNhcHRhaW5zIHdlbnQgYXdheSBhbmQgcHJvY2VlZGVkIHRvIGRvIGFzIENsZWFyY2h1cyBoYWQgZGlyZWN0ZWQuIEFuZCB0aGVuY2Vmb3J0aCBoZSBjb21tYW5kZWQgYW5kIHRoZXkgb2JleWVkLCBub3QgdGhhdCB0aGV5IGhhZCBjaG9zZW4gaGltLCBidXQgYmVjYXVzZSB0aGV5IHNhdyB0aGF0IGhlIGFsb25lIHBvc3Nlc3NlZCB0aGUgd2lzZG9tIHdoaWNoIGEgY29tbWFuZGVyIHNob3VsZCBoYXZlLCB3aGlsZSB0aGUgcmVzdCB3ZXJlIHdpdGhvdXQgZXhwZXJpZW5jZS4KPC90cmFuc2xhdGlvbj4="
translation['2.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWN0aW9uIDYgaW4gdGhlIG1hbnVzY3JpcHQgaXMgYXMgZm9sbG93cy4gIFRoaXMgcGFzc2FnZSBpcyByZWdhcmRlZCBieSBlZGQuIGdlbmVyYWxseSBhcyBhbiBpbnRlcnBvbGF0aW9uLjwvbm90ZT5bVGhlIGxlbmd0aCBvZiB0aGUgam91cm5leSB0aGV5IGhhZCBtYWRlIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxFcGhlc29zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxFcGhlc29zIj5FcGhlc3VzPC9wbGFjZU5hbWU+LCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMjc2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAyNzY1Ij5Jb25pYTwvcGxhY2VOYW1lPiwgdG8gdGhlIGJhdHRsZWZpZWxkIHdhcyBuaW5ldHktdGhyZWUgc3RhZ2VzLCBmaXZlIGh1bmRyZWQgYW5kIHRoaXJ0eS1maXZlIHBhcmFzYW5ncywgb3Igc2l4dGVlbiB0aG91c2FuZCBhbmQgZmlmdHkgc3RhZGlhOyBhbmQgdGhlIGRpc3RhbmNlIGZyb20gdGhlIGJhdHRsZWZpZWxkIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjI2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2MjYiPkJhYnlsb248L3BsYWNlTmFtZT4gd2FzIHNhaWQgdG8gYmUgdGhyZWUgaHVuZHJlZCBhbmQgc2l4dHkgc3RhZGlhLl0KPC90cmFuc2xhdGlvbj4="
translation['2.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlcndhcmRzLCB3aGVuIGRhcmtuZXNzIGhhZCBjb21lIG9uLCBNaWx0b2N5dGhlcyB0aGUgVGhyYWNpYW4sIHdpdGggdGhlIGhvcnNlbWVuIHVuZGVyIGhpcyBjb21tYW5kLCBmb3J0eSBpbiBudW1iZXIsIGFuZCBhYm91dCB0aHJlZSBodW5kcmVkIFRocmFjaWFuIGZvb3Qtc29sZGllcnMsIGRlc2VydGVkIHRvIHRoZSBLaW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBDbGVhcmNodXMgcHV0IGhpbXNlbGYgYXQgdGhlIGhlYWQgb2YgdGhlIHJlc3Qgb2YgdGhlIHRyb29wcywgZm9sbG93aW5nIG91dCB0aGUgcGxhbiBvZiBoaXMgcHJldmlvdXMgb3JkZXJzLCBhbmQgdGhleSBmb2xsb3dlZDsgYW5kIHRoZXkgcmVhY2hlZCB0aGUgZmlyc3Qgc3RvcHBpbmctcGxhY2UsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuMS4zIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuMS4zPC9iaWJsPi48L25vdGU+IGFuZCB0aGVyZSBqb2luZWQgQXJpYWV1cyBhbmQgaGlzIGFybXksIGF0IGFib3V0IG1pZG5pZ2h0LiBUaGVuLCB3aGlsZSB0aGV5IGhhbHRlZCB1bmRlciBhcm1zIGluIGxpbmUgb2YgYmF0dGxlLCB0aGUgZ2VuZXJhbHMgYW5kIGNhcHRhaW5zIGhhZCBhIG1lZXRpbmcgd2l0aCBBcmlhZXVzOyBhbmQgdGhlIHR3byBwYXJ0aWVz4oCUdGhlIEdyZWVrIG9mZmljZXJzLCBhbmQgQXJpYWV1cyB0b2dldGhlciB3aXRoIHRoZSBoaWdoZXN0IGluIHJhbmsgb2YgaGlzIGZvbGxvd2Vyc+KAlG1hZGUgb2F0aCB0aGF0IHRoZXkgd291bGQgbm90IGJldHJheSBlYWNoIG90aGVyIGFuZCB0aGF0IHRoZXkgd291bGQgYmUgYWxsaWVzLCB3aGlsZSB0aGUgYmFyYmFyaWFucyB0b29rIGFuIGFkZGl0aW9uYWwgcGxlZGdlIHRvIGxlYWQgdGhlIHdheSB3aXRob3V0IHRyZWFjaGVyeS4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjEuMyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjEuMzwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['2.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZXNlIG9hdGhzIHRoZXkgc2VhbGVkIGJ5IHNhY3JpZmljaW5nIGEgYnVsbCwgYSBib2FyLCBhbmQgYSByYW0gb3ZlciBhIHNoaWVsZCwgdGhlIEdyZWVrcyBkaXBwaW5nIGEgc3dvcmQgaW4gdGhlIGJsb29kIGFuZCB0aGUgYmFyYmFyaWFucyBhIGxhbmNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGUgcGxlZGdlcyBoYWQgYmVlbiBnaXZlbiwgQ2xlYXJjaHVzIHNhaWQ6IOKAnEFuZCBub3csIEFyaWFldXMsIHNpbmNlIHlvdSBhbmQgd2UgYXJlIHRvIG1ha2UgdGhlIHNhbWUgam91cm5leSwgdGVsbCB1cyB3aGF0IHZpZXcgeW91IGhvbGQgaW4gcmVnYXJkIHRvIHRoZSByb3V0ZeKAlHNoYWxsIHdlIHJldHVybiBieSB0aGUgc2FtZSB3YXkgd2UgY2FtZSwgb3IgZG8geW91IHRoaW5rIHlvdSBoYXZlIGRpc2NvdmVyZWQgYW5vdGhlciB3YXkgdGhhdCBpcyBiZXR0ZXI/4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BcmlhZXVzIHJlcGxpZWQ6IOKAnElmIHdlIHNob3VsZCByZXR1cm4gYnkgdGhlIHdheSB3ZSBjYW1lLCB3ZSBzaG91bGQgcGVyaXNoIHV0dGVybHkgZnJvbSBzdGFydmF0aW9uLCBmb3Igd2Ugbm93IGhhdmUgbm8gcHJvdmlzaW9ucyB3aGF0ZXZlci4gRm9yIGV2ZW4gb24gb3VyIHdheSBoaXRoZXIgd2Ugd2VyZSBub3QgYWJsZSB0byBnZXQgYW55dGhpbmcgZnJvbSB0aGUgY291bnRyeSBkdXJpbmcgdGhlIGxhc3Qgc2V2ZW50ZWVuIHN0YWdlczsgYW5kIHdoZXJlIHRoZXJlIHdhcyBhbnl0aGluZywgd2UgY29uc3VtZWQgaXQgZW50aXJlbHkgb24gb3VyIG1hcmNoIHRocm91Z2guIE5vdywgYWNjb3JkaW5nbHksIHdlIGludGVuZCB0byB0YWtlIGEgcm91dGUgdGhhdCBpcyBsb25nZXIsIHRvIGJlIHN1cmUsIGJ1dCBvbmUgd2hlcmUgd2Ugc2hhbGwgbm90IGxhY2sgcHJvdmlzaW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['2.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2UgbXVzdCBtYWtlIG91ciBmaXJzdCBtYXJjaGVzIGFzIGxvbmcgYXMgd2UgY2FuLCBpbiBvcmRlciB0byBzZXBhcmF0ZSBvdXJzZWx2ZXMgYXMgZmFyIGFzIHBvc3NpYmxlIGZyb20gdGhlIEtpbmcncyBhcm15OyBmb3IgaWYgd2Ugb25jZSBnZXQgYSB0d28gb3IgdGhyZWUgZGF5cycgam91cm5leSBhd2F5IGZyb20gdGhlIEtpbmcsIGhlIHdpbGwgbm90IHRoZW4gYmUgYWJsZSB0byBvdmVydGFrZSB1cy4gRm9yIGhlIHdpbGwgbm90IGRhcmUgdG8gcHVyc3VlIHVzIHdpdGggYSBzbWFsbCBhcm15LCBhbmQgd2l0aCBhIGxhcmdlIGFycmF5IGhlIHdpbGwgbm90IGZpbmQgaXQgcG9zc2libGUgdG8gbWFyY2ggcmFwaWRseTsgYW5kIHBlcmhhcHMsIGZ1cnRoZXJtb3JlLCBoZSB3aWxsIGxhY2sgcHJvdmlzaW9ucy4gVGhpcyzigJ0gc2FpZCBoZSwg4oCcaXMgdGhlIHZpZXcgd2hpY2ggSSBob2xkLCBmb3IgbXkgcGFydC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['2.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhpcyBwbGFuIG9mIGNhbXBhaWduIG1lYW50IG5vdGhpbmcgZWxzZSB0aGFuIGVmZmVjdGluZyBhbiBlc2NhcGUsIGVpdGhlciBieSBzdGVhbHRoIG9yIGJ5IHNwZWVkOyBidXQgZm9ydHVuZSBwbGFubmVkIGJldHRlci4gRm9yIHdoZW4gZGF5IGNhbWUsIHRoZXkgc2V0IG91dCBvbiB0aGUgbWFyY2gsIGtlZXBpbmcgdGhlIHN1biBvbiB0aGVpciByaWdodCBhbmQgY2FsY3VsYXRpbmcgdGhhdCBhdCBzdW5zZXQgdGhleSB3b3VsZCByZWFjaCB2aWxsYWdlcyBpbiBCYWJ5bG9uaWHigJRhbmQgaW4gdGhpcyB0aGV5IHdlcmUgbm90IGRpc2FwcG9pbnRlZC4KPC90cmFuc2xhdGlvbj4="
translation['2.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hpbGUgaXQgd2FzIHN0aWxsIGFmdGVybm9vbiB0aGV5IHRob3VnaHQgdGhhdCB0aGV5IHNhdyBob3JzZW1lbiBvZiB0aGUgZW5lbXk7IGFuZCBzdWNoIG9mIHRoZSBHcmVla3MgYXMgY2hhbmNlZCBub3QgdG8gYmUgaW4gdGhlIGxpbmVzIHByb2NlZWRlZCB0byBydW4gdG8gdGhlIGxpbmVzLCB3aGlsZSBBcmlhZXVzLCB3aG8gd2FzIG1ha2luZyB0aGUgam91cm5leSBpbiBhIHdhZ29uIGJlY2F1c2UgaGUgd2FzIHdvdW5kZWQsIGdvdCBkb3duIGFuZCBwdXQgb24gaGlzIGJyZWFzdHBsYXRlLCBhbmQgaGlzIGF0dGVuZGFudHMgZm9sbG93ZWQgaGlzIGV4YW1wbGUuCjwvdHJhbnNsYXRpb24+"
translation['2.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5XaGlsZSB0aGV5IHdlcmUgYXJtaW5nIHRoZW1zZWx2ZXMsIGhvd2V2ZXIsIHRoZSBzY291dHMgd2hvIGhhZCBiZWVuIHNlbnQgYWhlYWQgcmV0dXJuZWQgd2l0aCB0aGUgcmVwb3J0IHRoYXQgaXQgd2FzIG5vdCBob3JzZW1lbiwgYnV0IHBhY2sgYW5pbWFscyBncmF6aW5nLiBTdHJhaWdodHdheSBldmVyeWJvZHkgcmVhbGl6ZWQgdGhhdCB0aGUgS2luZyB3YXMgZW5jYW1waW5nIHNvbWV3aGVyZSBpbiB0aGUgbmVpZ2hib3VyaG9vZOKAlGluIGZhY3QsIHNtb2tlIHdhcyBzZWVuIGluIHZpbGxhZ2VzIG5vdCBmYXIgYXdheS4KPC90cmFuc2xhdGlvbj4="
translation['2.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Q2xlYXJjaHVzLCBob3dldmVyLCB3b3VsZCBub3QgYWR2YW5jZSBhZ2FpbnN0IHRoZSBlbmVteSwgZm9yIGhlIGtuZXcgdGhhdCBoaXMgdHJvb3BzIHdlcmUgbm90IG9ubHkgdGlyZWQgb3V0LCBidXQgd2l0aG91dCBmb29kLCBhbmQsIGJlc2lkZXMsIGl0IHdhcyBhbHJlYWR5IGxhdGU7IHN0aWxsLCBoZSB3b3VsZCBub3QgdHVybiBhc2lkZSwgZWl0aGVyLCBmb3IgaGUgd2FzIHRha2luZyBjYXJlIHRvIGF2b2lkIHRoZSBhcHBlYXJhbmNlIG9mIGZsaWdodCwgYnV0IGxlYWRpbmcgdGhlIGFybXkgc3RyYWlnaHQgYWhlYWQgaGUgZW5jYW1wZWQgd2l0aCB0aGUgdmFuIGF0IHN1bnNldCBpbiB0aGUgbmVhcmVzdCB2aWxsYWdlcywgZnJvbSB3aGljaCB0aGUgS2luZydzIGFybXkgaGFkIHBsdW5kZXJlZCBldmVuIHRoZSB2ZXJ5IHRpbWJlcnMgb2YgdGhlIGhvdXNlcy4KPC90cmFuc2xhdGlvbj4="
translation['2.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgdmFuIG5ldmVydGhlbGVzcyBlbmNhbXBlZCBhZnRlciBhIGZhc2hpb24sIGJ1dCB0aGUgbWVuIHdobyB3ZXJlIGZ1cnRoZXIgYmFjaywgY29taW5nIHVwIGluIHRoZSBkYXJrLCBoYWQgdG8gYml2b3VhYyBlYWNoIGFzIGJlc3QgdGhleSBjb3VsZCwgYW5kIHRoZXkgbWFkZSBhIGdyZWF0IHVwcm9hciB3aXRoIGNhbGxpbmcgb25lIGFub3RoZXIsIHNvIHRoYXQgdGhlIGVuZW15IGFsc28gaGVhcmQgaXQ7IHRoZSByZXN1bHQgd2FzIHRoYXQgdGhlIG5lYXJlc3Qgb2YgdGhlIGVuZW15IGFjdHVhbGx5IHRvb2sgdG8gZmxpZ2h0IGZyb20gdGhlaXIgcXVhcnRlcnMuCjwvdHJhbnNsYXRpb24+"
translation['2.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIGJlY2FtZSBjbGVhciBvbiB0aGUgZm9sbG93aW5nIGRheSwgZm9yIG5vdCBhIHBhY2sgYW5pbWFsIHdhcyBhbnkgbW9yZSB0byBiZSBzZWVuIG5vciBjYW1wIG5vciBzbW9rZSBhbnl3aGVyZSBuZWFyLiBFdmVuIHRoZSBLaW5nLCBzbyBpdCBzZWVtcywgd2FzIHRlcnJpZmllZCBieSB0aGUgYXBwcm9hY2ggb2YgdGhlIGFybXkuIEhlIG1hZGUgdGhpcyBldmlkZW50IGJ5IHdoYXQgaGUgZGlkIHRoZSBuZXh0IGRheS4KPC90cmFuc2xhdGlvbj4="
translation['2.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5Ib3dldmVyLCBhcyB0aGUgbmlnaHQgd2VudCBvbiBhIHBhbmljIGZlbGwgdXBvbiB0aGUgR3JlZWtzIGFsc28sIGFuZCB0aGVyZSB3YXMgY29uZnVzaW9uIGFuZCBkaW4gb2YgdGhlIHNvcnQgdGhhdCBtYXkgYmUgZXhwZWN0ZWQgd2hlbiBwYW5pYyBoYXMgc2VpemVkIGFuIGFybXkuCjwvdHJhbnNsYXRpb24+"
translation['2.2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5DbGVhcmNodXMsIGhvd2V2ZXIsIGRpcmVjdGVkIFRvbG1pZGVzIHRoZSBFbGVhbiwgd2hvIGNoYW5jZWQgdG8gYmUgd2l0aCBoaW0gYXMgaGVyYWxkIGFuZCB3YXMgdGhlIGJlc3QgaGVyYWxkIG9mIGhpcyB0aW1lLCB0byBtYWtlIHRoaXMgcHJvY2xhbWF0aW9uLCBhZnRlciBoZSBoYWQgb3JkZXJlZCBzaWxlbmNlOiDigJxUaGUgY29tbWFuZGVycyBnaXZlIHB1YmxpYyBub3RpY2UgdGhhdCB3aG9ldmVyIGluZm9ybXMgb24gdGhlIG1hbiB3aG8gbGV0IHRoZSBhc3MgbG9vc2UgYW1vbmcgdGhlIGFybXMgc2hhbGwgcmVjZWl2ZSBhIHJld2FyZCBvZiBhIHRhbGVudCBvZiBzaWx2ZXIu4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoaXMgcHJvY2xhbWF0aW9uIGhhZCBiZWVuIG1hZGUsIHRoZSBzb2xkaWVycyByZWFsaXplZCB0aGF0IHRoZWlyIGZlYXJzIHdlcmUgZ3JvdW5kbGVzcyBhbmQgdGhlaXIgY29tbWFuZGVycyBzYWZlLiBBbmQgYXQgZGF3biBDbGVhcmNodXMgb3JkZXJlZCB0aGUgR3JlZWtzIHRvIGdldCB1bmRlciBhcm1zIGluIGxpbmUgb2YgYmF0dGxlIGp1c3QgYXMgdGhleSB3ZXJlIHdoZW4gdGhlIGJhdHRsZSB0b29rIHBsYWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZmFjdCB3aGljaCBJIGp1c3Qgc3RhdGVkLCB0aGF0IHRoZSBLaW5nIHdhcyB0ZXJyaWZpZWQgYnkgdGhlIGFwcHJvYWNoIG9mIHRoZSBHcmVla3MsIHdhcyBtYWRlIGNsZWFyIGJ5IHRoZSBmb2xsb3dpbmcgY2lyY3Vtc3RhbmNlOiBhbHRob3VnaCBvbiB0aGUgZGF5IGJlZm9yZSBoZSBoYWQgc2VudCBhbmQgb3JkZXJlZCB0aGVtIHRvIGdpdmUgdXAgdGhlaXIgYXJtcywgaGUgbm93LCBhdCBzdW5yaXNlLCBzZW50IGhlcmFsZHMgdG8gbmVnb3RpYXRlIGEgdHJ1Y2UuCjwvdHJhbnNsYXRpb24+"
translation['2.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlc2UgaGVyYWxkcyByZWFjaGVkIHRoZSBvdXRwb3N0cywgdGhleSBhc2tlZCBmb3IgdGhlIGNvbW1hbmRlcnMuIEFuZCB3aGVuIHRoZSBvdXRwb3N0cyByZXBvcnRlZCwgQ2xlYXJjaHVzLCB3aG8gY2hhbmNlZCBhdCB0aGUgdGltZSB0byBiZSBpbnNwZWN0aW5nIHRoZSByYW5rcywgdG9sZCB0aGUgb3V0cG9zdHMgdG8gZGlyZWN0IHRoZSBoZXJhbGRzIHRvIHdhaXQgdGlsbCBoZSBzaG91bGQgYmUgYXQgbGVpc3VyZS4KPC90cmFuc2xhdGlvbj4="
translation['2.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gYWZ0ZXIgaGUgaGFkIGFycmFuZ2VkIHRoZSBhcm15IHNvIHRoYXQgaXQgc2hvdWxkIHByZXNlbnQgYSBmaW5lIGFwcGVhcmFuY2UgZnJvbSBldmVyeSBzaWRlIGFzIGEgY29tcGFjdCBwaGFsYW54LCB3aXRoIG5vIG9uZSB0byBiZSBzZWVuIG91dHNpZGUgdGhlIGxpbmVzIG9mIHRoZSBob3BsaXRlcywgaGUgc3VtbW9uZWQgdGhlIG1lc3NlbmdlcnM7IGFuZCBoZSBoaW1zZWxmIGNhbWUgZm9yd2FyZCB3aXRoIHRoZSBiZXN0IGFybWVkIGFuZCBiZXN0IGxvb2tpbmcgb2YgaGlzIG93biB0cm9vcHMgYW5kIHRvbGQgdGhlIG90aGVyIGdlbmVyYWxzIHRvIGRvIGxpa2V3aXNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk9uY2UgZmFjZSB0byBmYWNlIHdpdGggdGhlIG1lc3NlbmdlcnMsIGhlIGlucXVpcmVkIHdoYXQgdGhleSB3YW50ZWQuIFRoZXkgcmVwbGllZCB0aGF0IHRoZXkgaGFkIGNvbWUgdG8gbmVnb3RpYXRlIGZvciBhIHRydWNlLCBhbmQgd2VyZSBlbXBvd2VyZWQgdG8gcmVwb3J0IHRoZSBLaW5nJ3MgcHJvcG9zYWxzIHRvIHRoZSBHcmVla3MgYW5kIHRoZSBHcmVla3MnIHByb3Bvc2FscyB0byB0aGUgS2luZy4KPC90cmFuc2xhdGlvbj4="
translation['2.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBDbGVhcmNodXMgYW5zd2VyZWQ6IOKAnFJlcG9ydCB0byBoaW0sIHRoZW4sIHRoYXQgd2UgbXVzdCBoYXZlIGEgYmF0dGxlIGZpcnN0OyBmb3Igd2UgaGF2ZSBoYWQgbm8gYnJlYWtmYXN0LCBhbmQgdGhlcmUgaXMgbm8gbWFuIGFsaXZlIHdobyB3aWxsIGRhcmUgdG8gdGFsayB0byBHcmVla3MgYWJvdXQgYSB0cnVjZSB1bmxlc3MgaGUgcHJvdmlkZXMgdGhlbSB3aXRoIGEgYnJlYWtmYXN0LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlVwb24gaGVhcmluZyB0aGVzZSB3b3JkcyB0aGUgbWVzc2VuZ2VycyByb2RlIGF3YXksIGJ1dCB3ZXJlIHNwZWVkaWx5IGJhY2sgYWdhaW4sIHdoaWNoIG1hZGUgaXQgZXZpZGVudCB0aGF0IHRoZSBLaW5nLCBvciBzb21lb25lIGVsc2Ugd2hvIGhhZCBiZWVuIGNoYXJnZWQgd2l0aCBjYXJyeWluZyBvbiB0aGVzZSBuZWdvdGlhdGlvbnMsIHdhcyBzb21ld2hlcmUgbmVhci4gVGhleSBzdGF0ZWQgdGhhdCB3aGF0IHRoZSBHcmVla3Mgc2FpZCBzZWVtZWQgdG8gdGhlIEtpbmcgcmVhc29uYWJsZSwgYW5kIHRoYXQgdGhleSBoYWQgbm93IGJyb3VnaHQgZ3VpZGVzIHdpdGggdGhlbSB3aG8gd291bGQgbGVhZCB0aGUgR3JlZWtzLCBpbiBjYXNlIGEgdHJ1Y2Ugc2hvdWxkIGJlIGNvbmNsdWRlZCwgdG8gYSBwbGFjZSB3aGVyZSB0aGV5IGNvdWxkIGdldCBwcm92aXNpb25zLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJldXBvbiBDbGVhcmNodXMgYXNrZWQgd2hldGhlciBoZSB3YXMgbWFraW5nIGEgdHJ1Y2UgbWVyZWx5IHdpdGggdGhlIG1lbiB3aG8gd2VyZSBjb21pbmcgYW5kIGdvaW5nLCBvciB3aGV0aGVyIHRoZSB0cnVjZSB3b3VsZCBiaW5kIHRoZSBvdGhlcnMgYWxzby4g4oCcRXZlcnkgbWFuIG9mIHRoZW0s4oCdIHRoZXkgcmVwbGllZCwg4oCcdW50aWwgeW91ciBtZXNzYWdlIGlzIGNhcnJpZWQgdG8gdGhlIEtpbmcu4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSBoYWQgc2FpZCB0aGlzLCBDbGVhcmNodXMgaGFkIHRoZW0gcmV0aXJlIGFuZCB0b29rIGNvdW5zZWwgYWJvdXQgdGhlIG1hdHRlcjsgYW5kIGl0IHdhcyB0aG91Z2h0IGJlc3QgdG8gY29uY2x1ZGUgdGhlIHRydWNlIHNwZWVkaWx5LCBzbyB0aGF0IHRoZXkgY291bGQgZ28gYW5kIGdldCB0aGUgcHJvdmlzaW9ucyB3aXRob3V0IGJlaW5nIG1vbGVzdGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBDbGVhcmNodXMgc2FpZDog4oCcSSwgdG9vLCBhZ3JlZSB3aXRoIHRoaXMgdmlldzsgbmV2ZXJ0aGVsZXNzLCBJIHNoYWxsIG5vdCBzbyByZXBvcnQgYXQgb25jZSwgYnV0IEkgc2hhbGwgZGVsYXkgdW50aWwgdGhlIG1lc3NlbmdlcnMgZ2V0IGZlYXJmdWwgb2Ygb3VyIGRlY2lkaW5nIG5vdCB0byBjb25jbHVkZSB0aGUgdHJ1Y2U7IHRvIGJlIHN1cmUs4oCdIGhlIHNhaWQsIOKAnEkgc3VwcG9zZSB0aGF0IG91ciBvd24gc29sZGllcnMgd2lsbCBhbHNvIGZlZWwgdGhlIHNhbWUgZmVhci7igJ0gV2hlbiwgYWNjb3JkaW5nbHksIGl0IHNlZW1lZCB0aGF0IHRoZSBwcm9wZXIgdGltZSBoYWQgY29tZSwgaGUgcmVwb3J0ZWQgdGhhdCBoZSBhY2NlcHRlZCB0aGUgdHJ1Y2UsIGFuZCBkaXJlY3RlZCB0aGVtIHRvIGxlYWQgdGhlIHdheSBpbW1lZGlhdGVseSB0byB0aGUgcHJvdmlzaW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['2.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhleSBwcm9jZWVkZWQsIHRoZW4sIHRvIGxlYWQgdGhlIHdheSwgYnV0IENsZWFyY2h1cywgYWx0aG91Z2ggaGUgaGFkIG1hZGUgdGhlIHRydWNlLCBrZXB0IGhpcyBhcm15IGluIGxpbmUgb2YgYmF0dGxlIG9uIHRoZSBtYXJjaCwgYW5kIGNvbW1hbmRlZCB0aGUgcmVhcmd1YXJkIGhpbXNlbGYuIEFuZCB0aGV5IGtlcHQgY29taW5nIHVwb24gdHJlbmNoZXMgYW5kIGNhbmFscywgZnVsbCBvZiB3YXRlciwgd2hpY2ggY291bGQgbm90IGJlIGNyb3NzZWQgd2l0aG91dCBicmlkZ2VzLiBUaGV5IG1hZGUgYnJpZGdlcyBvZiBhIGtpbmQsIGhvd2V2ZXIsIG91dCBvZiB0aGUgcGFsbSB0cmVlcyB3aGljaCBoYWQgZmFsbGVuIGFuZCBvdGhlcnMgd2hpY2ggdGhleSBjdXQgZG93biB0aGVtc2VsdmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaGVyZSBvbmUgY291bGQgd2VsbCBvYnNlcnZlIGhvdyBDbGVhcmNodXMgY29tbWFuZGVkOyBoZSBoYWQgaGlzIHNwZWFyIGluIGhpcyBsZWZ0IGhhbmQgYW5kIGluIGhpcyByaWdodCBhIHN0aWNrLCBhbmQgd2hlbmV2ZXIgaGUgdGhvdWdodCB0aGF0IGFueW9uZSBvZiB0aGUgbWVuIGFzc2lnbmVkIHRvIHRoaXMgdGFzayB3YXMgc2hpcmtpbmcsIGhlIHdvdWxkIHBpY2sgb3V0IHRoZSByaWdodCBtYW4gYW5kIGRlYWwgaGltIGEgYmxvdywgd2hpbGUgYXQgdGhlIHNhbWUgdGltZSBoZSB3b3VsZCBnZXQgaW50byB0aGUgbXVkIGFuZCBsZW5kIGEgaGFuZCBoaW1zZWxmOyB0aGUgcmVzdWx0IHdhcyB0aGF0IGV2ZXJ5b25lIHdhcyBhc2hhbWVkIG5vdCB0byBtYXRjaCBoaW0gaW4gZW5lcmd5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbWVuIGRldGFpbGVkIHRvIHRoZSB3b3JrIHdlcmUgYWxsIHRob3NlIHVwIHRvIHRoaXJ0eSB5ZWFycyBvZiBhZ2UsIGJ1dCB0aGUgb2xkZXIgbWVuIGFsc28gdG9vayBob2xkIHdoZW4gdGhleSBzYXcgQ2xlYXJjaHVzIGluIHN1Y2ggZW5lcmdldGljIGhhc3RlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgQ2xlYXJjaHVzIHdhcyBpbiBhIGZhciBncmVhdGVyIGh1cnJ5IGJlY2F1c2UgaGUgc3VzcGVjdGVkIHRoYXQgdGhlIHRyZW5jaGVzIHdlcmUgbm90IGFsd2F5cyBmdWxsIG9mIHdhdGVyIGluIHRoaXMgd2F5LCBmb3IgaXQgd2FzIG5vdCBhIHByb3BlciB0aW1lIHRvIGJlIGlycmlnYXRpbmcgdGhlIHBsYWluOyBoaXMgc3VzcGljaW9uIHdhcywgdGhlbiwgdGhhdCB0aGUgS2luZyBoYWQgbGV0IHRoZSB3YXRlciBpbnRvIHRoZSBwbGFpbiBqdXN0IGluIG9yZGVyIHRoYXQgdGhlIEdyZWVrcyBtaWdodCBoYXZlIGJlZm9yZSB0aGVpciBleWVzIGF0IHRoZSB2ZXJ5IHN0YXJ0IG1hbnkgdGhpbmdzIHRvIG1ha2UgdGhlbSBmZWFyZnVsIGFib3V0IHRoZWlyIGpvdXJuZXkuCjwvdHJhbnNsYXRpb24+"
translation['2.3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIG1hcmNoIGF0IGxlbmd0aCBicm91Z2h0IHRoZW0gdG8gdmlsbGFnZXMgd2hlcmUgdGhlIGd1aWRlcyBkaXJlY3RlZCB0aGVtIHRvIGdldCBwcm92aXNpb25zLiBJbiB0aGVzZSB2aWxsYWdlcyB3YXMgZ3JhaW4gaW4gYWJ1bmRhbmNlIGFuZCBwYWxtIHdpbmUgYW5kIGEgc291ciBkcmluayBtYWRlIGZyb20gdGhlIHNhbWUgYnkgYm9pbGluZy4KPC90cmFuc2xhdGlvbj4="
translation['2.3.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIGRhdGVzIHRoZW1zZWx2ZXMgb2YgdGhlIHBhbG0sIHRoZSBzb3J0IHRoYXQgb25lIGNhbiBzZWUgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IHdlcmUgc2V0IGFwYXJ0IGZvciB0aGUgc2VydmFudHMsIHdoaWxlIHRob3NlIGxhaWQgYXdheSBmb3IgdGhlIG1hc3RlcnMgd2VyZSBzZWxlY3RlZCBvbmVzLCByZW1hcmthYmxlIGZvciB0aGVpciBiZWF1dHkgYW5kIHNpemUgYW5kIHdpdGggYSBjb2xvdXIgYWx0b2dldGhlciByZXNlbWJsaW5nIHRoYXQgb2YgYW1iZXI7IG90aGVycywgYWdhaW4sIHRoZXkgd291bGQgZHJ5IGFuZCBzdG9yZSBhd2F5IGZvciBzd2VldG1lYXRzLiBUaGVzZSBtYWRlIGEgcGxlYXNhbnQgbW9yc2VsIGFsc28gYXQgYSBzeW1wb3NpdW0sIGJ1dCB3ZXJlIGFwdCB0byBjYXVzZSBoZWFkYWNoZS4KPC90cmFuc2xhdGlvbj4="
translation['2.3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5IZXJlIGFsc28gdGhlIHNvbGRpZXJzIGF0ZSBmb3IgdGhlIGZpcnN0IHRpbWUgdGhlIGNyb3duIG9mIHRoZSBwYWxtLCBhbmQgbW9zdCBvZiB0aGVtIHdlcmUgc3VycHJpc2VkIG5vdCBhbG9uZSBhdCBpdHMgYXBwZWFyYW5jZSwgYnV0IGF0IHRoZSBwZWN1bGlhciBuYXR1cmUgb2YgaXRzIGZsYXZvdXIuIFRoaXMsIHRvbywgaG93ZXZlciwgd2FzIGV4Y2VlZGluZ2x5IGFwdCB0byBjYXVzZSBoZWFkYWNoZS4gQW5kIHdoZW4gdGhlIGNyb3duIHdhcyByZW1vdmVkIGZyb20gYSBwYWxtLCB0aGUgd2hvbGUgdHJlZSB3b3VsZCB3aXRoZXIuCjwvdHJhbnNsYXRpb24+"
translation['2.3.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gdGhlc2UgdmlsbGFnZXMgdGhleSByZW1haW5lZCB0aHJlZSBkYXlzOyBhbmQgdGhlcmUgY2FtZSB0byB0aGVtLCBhcyBtZXNzZW5nZXJzIGZyb20gdGhlIEdyZWF0IEtpbmcsIFRpc3NhcGhlcm5lcyBhbmQgdGhlIGJyb3RoZXIgb2YgdGhlIEtpbmcncyB3aWZlIGFuZCB0aHJlZSBvdGhlciBQZXJzaWFuczsgYW5kIG1hbnkgc2xhdmVzIGZvbGxvd2VkIGluIHRoZWlyIHRyYWluLiBXaGVuIHRoZSBHcmVlayBnZW5lcmFscyBtZXQgdGhlbSwgVGlzc2FwaGVybmVzLCB0aHJvdWdoIGFuIGludGVycHJldGVyLCBiZWdhbiB0aGUgc3BlYWtpbmcgd2l0aCB0aGUgZm9sbG93aW5nIHdvcmRzOgo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz7igJxNZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LCBpbiBteSBvd24gaG9tZSBJIGFtIGEgbmVpZ2hib3VyIG9mIHlvdXJzLCBhbmQgd2hlbiBJIHNhdyBwbHVuZ2VkIGludG8gbWFueSBkaWZmaWN1bHRpZXMsIEkgdGhvdWdodCBpdCB3b3VsZCBiZSBhIHBpZWNlIG9mIGdvb2QgZm9ydHVuZSBpZiBJIGNvdWxkIGluIGFueSB3YXkgZ2FpbiBwZXJtaXNzaW9uIGZyb20gdGhlIEtpbmcgdG8gdGFrZSB5b3UgYmFjayBzYWZlIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPi4gRm9yIEkgZmFuY3kgSSBzaG91bGQgbm90IGdvIHdpdGhvdXQgdGhhbmtzLCBib3RoIGZyb20geW91IGFuZCBmcm9tIGFsbCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['2.3.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciByZWFjaGluZyB0aGlzIGNvbmNsdXNpb24gSSBwcmVzZW50ZWQgbXkgcmVxdWVzdCB0byB0aGUgS2luZywgc2F5aW5nIHRvIGhpbSB0aGF0IGl0IHdvdWxkIGJlIGZhaXIgZm9yIGhpbSB0byBkbyBtZSBhIGZhdm91ciwgYmVjYXVzZSBJIHdhcyB0aGUgZmlyc3QgdG8gcmVwb3J0IHRvIGhpbSB0aGF0IDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gd2FzIG1hcmNoaW5nIGFnYWluc3QgaGltLCBiZWNhdXNlIGFsb25nIHdpdGggbXkgcmVwb3J0IEkgYnJvdWdodCBoaW0gYWlkIGFsc28sIGFuZCBiZWNhdXNlIEkgd2FzIHRoZSBvbmx5IG1hbiBhbW9uZyB0aG9zZSBwb3N0ZWQgb3Bwb3NpdGUgdGhlIEdyZWVrcyB3aG8gZGlkIG5vdCB0YWtlIHRvIGZsaWdodCwgYnV0LCBvbiB0aGUgY29udHJhcnksIEkgY2hhcmdlZCB0aHJvdWdoIGFuZCBqb2luZWQgZm9yY2VzIHdpdGggdGhlIEtpbmcgaW4geW91ciBjYW1wLCB3aGVyZSB0aGUgS2luZyBoYWQgYXJyaXZlZCBhZnRlciBzbGF5aW5nIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gYW5kIHB1cnN1aW5nIHRoZSBiYXJiYXJpYW5zIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4nIGFybXkgd2l0aCB0aGUgaGVscCBvZiB0aGVzZSBtZW4gbm93IHByZXNlbnQgd2l0aCBtZSwgbWVuIHdobyBhcmUgbW9zdCBmYWl0aGZ1bCB0byB0aGUgS2luZy4gQW5kIGhlIHByb21pc2VkIG1lIHRoYXQgaGUgd291bGQgY29uc2lkZXIgdGhpcyByZXF1ZXN0IG9mIG1pbmUsCjwvdHJhbnNsYXRpb24+"
translation['2.3.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5idXQsIG1lYW53aGlsZSwgaGUgYmFkZSBtZSBjb21lIGFuZCBhc2sgeW91IGZvciB3aGF0IHJlYXNvbiB5b3UgdG9vayB0aGUgZmllbGQgYWdhaW5zdCBoaW0uIE5vdyBJIGFkdmlzZSB5b3UgdG8gYW5zd2VyIHdpdGggbW9kZXJhdGlvbiwgdGhhdCBzbyBpdCBtYXkgYmUgZWFzaWVyIGZvciBtZSB0byBvYnRhaW4gZm9yIHlvdSBhdCBoaXMgaGFuZHMgd2hhdGV2ZXIgZ29vZCB0aGluZyBJIG1heSBiZSBhYmxlIHRvIG9idGFpbi7igJ0KPC90cmFuc2xhdGlvbj4="
translation['2.3.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGVyZXVwb24gdGhlIEdyZWVrcyB3aXRoZHJldyBhbmQgcHJvY2VlZGVkIHRvIHRha2UgY291bnNlbDsgdGhlbiB0aGV5IGdhdmUgdGhlaXIgYW5zd2VyLCBDbGVhcmNodXMgYWN0aW5nIGFzIHNwb2tlc21hbjog4oCcV2UgbmVpdGhlciBnYXRoZXJlZCB0b2dldGhlciB3aXRoIHRoZSBpbnRlbnRpb24gb2YgbWFraW5nIHdhciB1cG9uIHRoZSBLaW5nIG5vciB3ZXJlIHdlIG1hcmNoaW5nIGFnYWluc3QgdGhlIEtpbmcsIGJ1dCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGtlcHQgZmluZGluZyBtYW55IHByZXRleHRzLCBhcyB5b3UgYWxzbyBhcmUgd2VsbCBhd2FyZSwgaW4gb3JkZXIgdGhhdCBoZSBtaWdodCB0YWtlIHlvdSB1bnByZXBhcmVkIGFuZCBicmluZyB1cyBoaXRoZXIuCjwvdHJhbnNsYXRpb24+"
translation['2.3.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBob3dldmVyLCB0aGUgdGltZSBjYW1lIHdoZW4gd2Ugc2F3IHRoYXQgaGUgd2FzIGluIGRhbmdlciwgd2UgZmVsdCBhc2hhbWVkIGluIHRoZSBzaWdodCBvZiBnb2RzIGFuZCBtZW4gdG8gZGVzZXJ0IGhpbSwgc2VpbmcgdGhhdCBpbiBmb3JtZXIgZGF5cyB3ZSBoYWQgYmVlbiBwdXR0aW5nIG91cnNlbHZlcyBpbiB0aGUgd2F5IG9mIGJlaW5nIGJlbmVmaXRlZCBieSBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['2.3.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgc2luY2UgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBpcyBkZWFkLCB3ZSBhcmUgbmVpdGhlciBjb250ZW5kaW5nIHdpdGggdGhlIEtpbmcgZm9yIGhpcyByZWFsbSBub3IgaXMgdGhlcmUgYW55IHJlYXNvbiB3aHkgd2Ugc2hvdWxkIGRlc2lyZSB0byBkbyBoYXJtIHRvIHRoZSBLaW5nJ3MgdGVycml0b3J5IG9yIHdpc2ggdG8gc2xheSB0aGUgS2luZyBoaW1zZWxmLCBidXQgcmF0aGVyIHdlIHNob3VsZCByZXR1cm4gdG8gb3VyIGhvbWVzLCBpZiBubyBvbmUgc2hvdWxkIG1vbGVzdCB1cy4gSWYsIGhvd2V2ZXIsIGFueW9uZSBzZWVrcyB0byBpbmp1cmUgdXMsIHdlIHNoYWxsIHRyeSB3aXRoIHRoZSBoZWxwIG9mIHRoZSBnb2RzIHRvIHJldGFsaWF0ZS4gT24gdGhlIG90aGVyIGhhbmQsIGlmIGFueW9uZSBpcyBraW5kIGVub3VnaCB0byBkbyB1cyBhIHNlcnZpY2UsIHdlIHNoYWxsIG5vdCwgc28gZmFyIGFzIHdlIGhhdmUgdGhlIHBvd2VyLCBiZSBvdXRkb25lIGluIGRvaW5nIGEgc2VydmljZSB0byBoaW0u4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.3.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5TbyBoZSBzcG9rZSwgYW5kIHVwb24gaGVhcmluZyBoaXMgd29yZHMgVGlzc2FwaGVybmVzIHNhaWQ6IOKAnFRoaXMgbWVzc2FnZSBJIHNoYWxsIGNhcnJ5IHRvIHRoZSBLaW5nLCBhbmQgYnJpbmcgYmFjayBoaXMgdG8geW91OyBhbmQgdW50aWwgSSByZXR1cm4sIGxldCB0aGUgdHJ1Y2UgY29udGludWUsIGFuZCB3ZSB3aWxsIHByb3ZpZGUgYSBtYXJrZXQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSBub3RlIG9uIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4yLjE4IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMi4xODwvYmlibD4uPC9ub3RlPuKAnQo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMi4xOCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjIuMTg8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['2.3.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIG5leHQgZGF5IGhlIGRpZCBub3QgcmV0dXJuLCBhbmQgdGhlIEdyZWVrcywgY29uc2VxdWVudGx5LCB3ZXJlIGFueGlvdXM7IGJ1dCBvbiB0aGUgdGhpcmQgZGF5IGhlIGNhbWUgYW5kIHNhaWQgdGhhdCBoZSBoYWQgc2VjdXJlZCBwZXJtaXNzaW9uIGZyb20gdGhlIEtpbmcgdG8gc2F2ZSB0aGUgR3JlZWtzLCBhbHRob3VnaCBtYW55IG9wcG9zZWQgdGhlIHBsYW4sIHVyZ2luZyB0aGF0IGl0IHdhcyBub3QgZml0dGluZyBmb3IgdGhlIEtpbmcgdG8gYWxsb3cgdGhvc2Ugd2hvIGhhZCB1bmRlcnRha2VuIGEgY2FtcGFpZ24gYWdhaW5zdCBoaW0gdG8gZXNjYXBlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5JbiBjb25jbHVzaW9uIGhlIHNhaWQ6IOKAnEFuZCBub3cgeW91IG1heSByZWNlaXZlIHBsZWRnZXMgZnJvbSB1cyB0aGF0IGluIHZlcnkgdHJ1dGggdGhlIHRlcnJpdG9yeSB5b3UgcGFzcyB0aHJvdWdoIHNoYWxsIGJlIGZyaWVuZGx5IGFuZCB0aGF0IHdlIHdpbGwgbGVhZCB5b3UgYmFjayB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gd2l0aG91dCB0cmVhY2hlcnksIHByb3ZpZGluZyB5b3Ugd2l0aCBhIG1hcmtldDsgYW5kIHdoZXJldmVyIGl0IGlzIGltcG9zc2libGUgdG8gYnV5IHByb3Zpc2lvbnMsIHdlIHdpbGwgYWxsb3cgeW91IHRvIHRha2UgdGhlbSBmcm9tIHRoZSBjb3VudHJ5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgeW91LCBvbiB5b3VyIHNpZGUsIHdpbGwgaGF2ZSB0byBzd2VhciB0byB1cyB0aGF0IGluIHZlcnkgdHJ1dGggeW91IHdpbGwgcHJvY2VlZCBhcyB5b3Ugd291bGQgdGhyb3VnaCBhIGZyaWVuZGx5IGNvdW50cnksIGRvaW5nIG5vIGRhbWFnZSBhbmQgdGFraW5nIGZvb2QgYW5kIGRyaW5rIGZyb20gdGhlIGNvdW50cnkgb25seSB3aGVuIHdlIGRvIG5vdCBwcm92aWRlIGEgbWFya2V0LCBidXQgdGhhdCwgaWYgd2UgZG8gcHJvdmlkZSBhIG1hcmtldCwgeW91IHdpbGwgb2J0YWluIHByb3Zpc2lvbnMgYnkgcHVyY2hhc2Uu4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.3.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIHdhcyByZXNvbHZlZCB1cG9uLCBhbmQgVGlzc2FwaGVybmVzIGFuZCB0aGUgYnJvdGhlciBvZiB0aGUgS2luZydzIHdpZmUgbWFkZSBvYXRoIGFuZCBnYXZlIHRoZWlyIHJpZ2h0IGhhbmRzIGluIHBsZWRnZSB0byB0aGUgZ2VuZXJhbHMgYW5kIGNhcHRhaW5zIG9mIHRoZSBHcmVla3MsIHJlY2VpdmluZyB0aGUgc2FtZSBhbHNvIGZyb20gdGhlIEdyZWVrcy4KPC90cmFuc2xhdGlvbj4="
translation['2.3.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIFRpc3NhcGhlcm5lcyBzYWlkOiDigJxOb3cgSSBhbSBnb2luZyBiYWNrIHRvIHRoZSBLaW5nOyBidXQgd2hlbiBJIGhhdmUgYWNjb21wbGlzaGVkIHdoYXQgSSBkZXNpcmUsIEkgc2hhbGwgcmV0dXJuLCBmdWxseSBlcXVpcHBlZCB0byBjb25kdWN0IHlvdSBiYWNrIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiBhbmQgdG8gZ28gaG9tZSBteXNlbGYgdG8gbXkgb3duIHByb3ZpbmNlLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZSBHcmVla3MgYW5kIEFyaWFldXMsIGVuY2FtcGVkIGNsb3NlIGJ5IG9uZSBhbm90aGVyLCB3YWl0ZWQgZm9yIFRpc3NhcGhlcm5lcyBtb3JlIHRoYW4gdHdlbnR5IGRheXMuIER1cmluZyB0aGlzIHRpbWUgQXJpYWV1cycgYnJvdGhlcnMgYW5kIG90aGVyIHJlbGF0aXZlcyBjYW1lIHRvIGhpbSBhbmQgY2VydGFpbiBQZXJzaWFucyBjYW1lIHRvIGhpcyBmb2xsb3dlcnMsIGFuZCB0aGV5IGtlcHQgZW5jb3VyYWdpbmcgdGhlbSBhbmQgYnJpbmdpbmcgcGxlZGdlcyB0byBzb21lIG9mIHRoZW0gZnJvbSB0aGUgS2luZyB0aGF0IHRoZSBLaW5nIHdvdWxkIGJlYXIgdGhlbSBubyBpbGwtd2lsbCBiZWNhdXNlIG9mIHRoZWlyIGNhbXBhaWduIHdpdGggPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBhZ2FpbnN0IGhpbSBvciBiZWNhdXNlIG9mIGFueXRoaW5nIGVsc2UgaW4gdGhlIHBhc3QuCjwvdHJhbnNsYXRpb24+"
translation['2.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoaWxlIHRoZXNlIHRoaW5ncyB3ZXJlIGdvaW5nIG9uLCBpdCB3YXMgZXZpZGVudCB0aGF0IEFyaWFldXMgYW5kIGhpcyBmb2xsb3dlcnMgcGFpZCBsZXNzIHJlZ2FyZCB0byB0aGUgR3JlZWtzOyB0aGlzLCBhY2NvcmRpbmdseSwgd2FzIGFub3RoZXIgcmVhc29uIHdoeSB0aGUgZ3JlYXRlciBwYXJ0IG9mIHRoZSBHcmVla3Mgd2VyZSBub3QgcGxlYXNlZCB3aXRoIHRoZW0sIGFuZCB0aGV5IHdvdWxkIGdvIHRvIENsZWFyY2h1cyBhbmQgdGhlIG90aGVyIGdlbmVyYWxzIGFuZCBzYXk6CjwvdHJhbnNsYXRpb24+"
translation['2.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPuKAnFdoeSBhcmUgd2UgbGluZ2VyaW5nPyBEbyB3ZSBub3QgdW5kZXJzdGFuZCB0aGF0IHRoZSBLaW5nIHdvdWxkIGxpa2UgYWJvdmUgZXZlcnl0aGluZyBlbHNlIHRvIGRlc3Ryb3kgdXMsIGluIG9yZGVyIHRoYXQgdGhlIHJlc3Qgb2YgdGhlIEdyZWVrcyBhbHNvIG1heSBiZSBhZnJhaWQgdG8gbWFyY2ggYWdhaW5zdCB0aGUgR3JlYXQgS2luZz8gRm9yIHRoZSBtb21lbnQgaGUgaXMgc2NoZW1pbmcgdG8ga2VlcCB1cyBoZXJlIGJlY2F1c2UgaGlzIGFybXkgaXMgc2NhdHRlcmVkLCBidXQgd2hlbiBoZSBoYXMgY29sbGVjdGVkIGhpcyBmb3JjZXMgYWdhaW4sIHRoZXJlIGlzIG5vIHF1ZXN0aW9uIGJ1dCB0aGF0IGhlIHdpbGwgYXR0YWNrIHVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk9yIHBlcmhhcHMgaGUgaXMgZGlnZ2luZyBhIHRyZW5jaCBvciBidWlsZGluZyBhIHdhbGwgc29tZXdoZXJlIHRvIGN1dCB1cyBvZmYgYW5kIG1ha2Ugb3VyIHJvYWQgaW1wYXNzYWJsZS4gRm9yIG5ldmVyLCBpZiBoZSBjYW4gaGVscCBpdCwgd2lsbCBoZSBjaG9vc2UgdG8gbGV0IHVzIGdvIGJhY2sgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IGFuZCByZXBvcnQgdGhhdCB3ZSwgZmV3IGFzIHdlIGFyZSwgd2VyZSB2aWN0b3Jpb3VzIG92ZXIgdGhlIEtpbmcgYXQgaGlzIHZlcnkgZ2F0ZXMsIGFuZCB0aGVuIGxhdWdoZWQgaW4gaGlzIGZhY2UgYW5kIGNhbWUgaG9tZSBhZ2Fpbi7igJ0KPC90cmFuc2xhdGlvbj4="
translation['2.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRvIHRob3NlIHdobyB0YWxrZWQgaW4gdGhpcyB3YXkgQ2xlYXJjaHVzIHJlcGxpZWQ6IOKAnEkgdG9vIGhhdmUgaW4gbWluZCBhbGwgdGhlc2UgdGhpbmdzOyBidXQgSSByZWZsZWN0IHRoYXQgaWYgd2UgZ28gYXdheSBub3csIGl0IHdpbGwgc2VlbSB0aGF0IHdlIGFyZSBnb2luZyBhd2F5IHdpdGggaG9zdGlsZSBpbnRlbnQgYW5kIGFyZSBhY3RpbmcgaW4gdmlvbGF0aW9uIG9mIHRoZSB0cnVjZS4gQW5kIHRoZW4sIGluIHRoZSBmaXJzdCBwbGFjZSwgbm8gb25lIHdpbGwgcHJvdmlkZSB1cyBhIG1hcmtldCBvciBhIHBsYWNlIGZyb20gd2hpY2ggd2UgY2FuIGdldCBwcm92aXNpb25zOyBzZWNvbmRseSwgd2Ugc2hhbGwgaGF2ZSBubyBvbmUgdG8gZ3VpZGUgdXM7IGFnYWluLCB0aGUgbW9tZW50IHdlIHRha2UgdGhpcyBjb3Vyc2UgQXJpYWV1cyB3aWxsIGluc3RhbnRseSBkZXNlcnQgdXM7IGNvbnNlcXVlbnRseSB3ZSBzaGFsbCBoYXZlIG5vdCBhIGZyaWVuZCBsZWZ0LCBmb3IgZXZlbiB0aG9zZSB3aG8gd2VyZSBmcmllbmRzIGJlZm9yZSB3aWxsIGJlIG91ciBlbmVtaWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gcmVtZW1iZXIgdGhlIHJpdmVyc+KAlHRoZXJlIG1heSBiZSBvdGhlcnMsIGZvciBhdWdodCBJIGtub3csIHRoYXQgd2UgbXVzdCBjcm9zcywgYnV0IHdlIGtub3cgYWJvdXQgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTIzODQyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMjM4NDIiPkV1cGhyYXRlczwvcGxhY2VOYW1lPiBhdCBhbnkgcmF0ZSwgdGhhdCBpdCBjYW5ub3QgcG9zc2libHkgYmUgY3Jvc3NlZCBpbiB0aGUgZmFjZSBvZiBhbiBlbmVteS4gRnVydGhlcm1vcmUsIGluIGNhc2UgZmlnaHRpbmcgYmVjb21lcyBuZWNlc3NhcnksIHdlIGhhdmUgbm8gY2F2YWxyeSB0byBoZWxwIHVzLCB3aGVyZWFzIHRoZSBlbmVteSdzIGNhdmFscnkgYXJlIGV4Y2VlZGluZ2x5IG51bWVyb3VzIGFuZCBleGNlZWRpbmdseSBlZmZpY2llbnQ7IGhlbmNlIGlmIHdlIGFyZSB2aWN0b3Jpb3VzLCB3aG9tIGNvdWxkIHdlIGtpbGw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SG9wbGl0ZXMsIGJlY2F1c2Ugb2YgdGhlaXIgaGVhdnkgZXF1aXBtZW50LCB3ZXJlIGluZWZmZWN0aXZlIGluIGEgcHVyc3VpdCwgZXNwZWNpYWxseSB3aGVuIGFuIGVuZW15IGZsZWQsIGFzIGluIOKAnHRoZSBiYXR0bGXigJ0gb2YgSS4gdmlpaS4sIGxvbmcgYmVmb3JlIHRoZXkgd2VyZSB3aXRoaW4gc3RyaWtpbmcgZGlzdGFuY2UuIEhvcnNlbWVuLCBvZiBjb3Vyc2UsIHdlcmUgYXQgdGhlaXIgYmVzdCBpbiBmb2xsb3dpbmcgdXAgYSByb3V0ZWQgZW5lbXkuPC9ub3RlPj8gQW5kIGlmIHdlIGFyZSBkZWZlYXRlZCwgbm90IG9uZSBvZiB1cyBjYW4gYmUgc2F2ZWQuCjwvdHJhbnNsYXRpb24+"
translation['2.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkZvciBteSBwYXJ0LCB0aGVyZWZvcmUsIEkgY2Fubm90IHNlZSB3aHkgdGhlIEtpbmcsIHdobyBoYXMgc28gbWFueSBhZHZhbnRhZ2VzIG9uIGhpcyBzaWRlLCBzaG91bGQgbmVlZCwgaW4gY2FzZSBoZSBpcyByZWFsbHkgZWFnZXIgdG8gZGVzdHJveSB1cywgdG8gbWFrZSBvYXRoIGFuZCBnaXZlIHBsZWRnZSBhbmQgZm9yc3dlYXIgaGltc2VsZiBieSB0aGUgZ29kcyBhbmQgbWFrZSBoaXMgZ29vZCBmYWl0aCB1bmZhaXRoZnVsIGluIHRoZSBleWVzIG9mIEdyZWVrcyBhbmQgYmFyYmFyaWFucy7igJ0gU3VjaCBhcmd1bWVudHMgQ2xlYXJjaHVzIHdvdWxkIHByZXNlbnQgaW4gYWJ1bmRhbmNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFud2hpbGUgVGlzc2FwaGVybmVzIHJldHVybmVkIHdpdGggaGlzIG93biBmb3JjZXMgYXMgaWYgaW50ZW5kaW5nIHRvIGdvIGJhY2sgaG9tZSwgYW5kIGxpa2V3aXNlIE9yb250YXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2F0cmFwIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA2NjUxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDY2NTEiPkFybWVuaWE8L3BsYWNlTmFtZT48L25vdGU+IHdpdGggaGlzIGZvcmNlczsgdGhlIGxhdHRlciB3YXMgYWxzbyB0YWtpbmcgaG9tZSB0aGUgS2luZydzIGRhdWdodGVyIGFzIGhpcyB3aWZlLgo8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNjY1MSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA2NjUxIj5Bcm1lbmlhPC9wbGFjZU5hbWU+PC90cmFuc2xhdGlvbj4="
translation['2.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gdGhleSBmaW5hbGx5IGJlZ2FuIHRoZSBtYXJjaCwgVGlzc2FwaGVybmVzIHRha2luZyB0aGUgbGVhZCBhbmQgcHJvdmlkaW5nIGEgbWFya2V0OyBhbmQgQXJpYWV1cyB3aXRoIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4nIGJhcmJhcmlhbiBhcm15IGtlcHQgd2l0aCBUaXNzYXBoZXJuZXMgYW5kIE9yb250YXMgb24gdGhlIG1hcmNoIGFuZCBlbmNhbXBlZCB3aXRoIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['2.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgR3JlZWtzLCBob3dldmVyLCB2aWV3aW5nIHRoZW0gYWxsIHdpdGggc3VzcGljaW9uLCBwcm9jZWVkZWQgYnkgdGhlbXNlbHZlcywgd2l0aCB0aGVpciBvd24gZ3VpZGVzLiBBbmQgdGhlIHR3byBwYXJ0aWVzIGVuY2FtcGVkIGluIGV2ZXJ5IGNhc2UgYSBwYXJhc2FuZyBvciBtb3JlIGZyb20gb25lIGFub3RoZXIsIGFuZCBrZXB0IGd1YXJkIGVhY2ggYWdhaW5zdCB0aGUgb3RoZXIsIGFzIHRob3VnaCBhZ2FpbnN0IGVuZW1pZXPigJRhIGZhY3Qgd2hpY2ggYXQgb25jZSBvY2Nhc2lvbmVkIHN1c3BpY2lvbi4KPC90cmFuc2xhdGlvbj4="
translation['2.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Tb21ldGltZXMsIG1vcmVvdmVyLCB3aGVuIEdyZWVrcyBhbmQgYmFyYmFyaWFucyB3ZXJlIGdldHRpbmcgZmlyZXdvb2QgZnJvbSB0aGUgc2FtZSBwbGFjZSBvciBjb2xsZWN0aW5nIGZvZGRlciBvciBvdGhlciBzdWNoIHRoaW5ncywgdGhleSB3b3VsZCBjb21lIHRvIGJsb3dzIHdpdGggb25lIGFub3RoZXIsIGFuZCB0aGlzIGFsc28gb2NjYXNpb25lZCBpbGwtd2lsbC4KPC90cmFuc2xhdGlvbj4="
translation['2.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdHJhdmVsbGluZyB0aHJlZSBzdGFnZXMgdGhleSByZWFjaGVkIHRoZSBzbyBjYWxsZWQgd2FsbCBvZiBNZWRpYSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIG5vdGUgb24gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjcuMTUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS43LjE1PC9iaWJsPi4gVGhlIEdyZWVrcyBoYWQgdHdpY2UgYWxyZWFkeSwgb25jZSBvbiB0aGUgYWR2YW5jZSBhbmQgYWdhaW4gb24gdGhlIHJldHJlYXQsIGNyb3NzZWQgdGhlIG9yaWdpbmFsIGxpbmUgb2YgdGhpcyB3YWxsLiBOb3csIHR1cm5pbmcgdG8gdGhlIGVhc3R3YXJkIChzZWUgdGhlIG1hcCksIHRoZXkgcmVhY2ggaXQgYXQgYSBwb2ludCB3aGVyZSBpdCBpcyBzdGlsbCBzdGFuZGluZywgYW5kIHBhc3Mg4oCcd2l0aGluIGl0LOKAnSBpLmUuIHRvIHRoZSBzb3V0aC1lYXN0ZXJuLCBvciBCYWJ5bG9uaWFuLCBzaWRlIG9mIGl0Ljwvbm90ZT4gYW5kIHBhc3NlZCB3aXRoaW4gaXQuIEl0IHdhcyBidWlsdCBvZiBiYWtlZCBicmlja3MsIGxhaWQgaW4gYXNwaGFsdCwgYW5kIHdhcyB0d2VudHkgZmVldCB3aWRlIGFuZCBhIGh1bmRyZWQgZmVldCBoaWdoOyBpdHMgbGVuZ3RoIHdhcyBzYWlkIHRvIGJlIHR3ZW50eSBwYXJhc2FuZ3MsIGFuZCBpdCBpcyBub3QgZmFyIGRpc3RhbnQgZnJvbSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuNy4xNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjcuMTU8L2JpYmw+LiBUaGUgR3JlZWtzIGhhZCB0d2ljZSBhbHJlYWR5LCBvbmNlIG9uIHRoZSBhZHZhbmNlIGFuZCBhZ2FpbiBvbiB0aGUgcmV0cmVhdCwgY3Jvc3NlZCB0aGUgb3JpZ2luYWwgbGluZSBvZiB0aGlzIHdhbGwuIE5vdywgdHVybmluZyB0byB0aGUgZWFzdHdhcmQgKHNlZSB0aGUgbWFwKSwgdGhleSByZWFjaCBpdCBhdCBhIHBvaW50IHdoZXJlIGl0IGlzIHN0aWxsIHN0YW5kaW5nLCBhbmQgcGFzcyDigJx3aXRoaW4gaXQs4oCdIGkuZS4gdG8gdGhlIHNvdXRoLWVhc3Rlcm4sIG9yIEJhYnlsb25pYW4sIHNpZGUgb2YgaXQuPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2MjYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjYyNiI+QmFieWxvbjwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['2.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Gcm9tIHRoZXJlIHRoZXkgcHJvY2VlZGVkIHR3byBzdGFnZXMsIGVpZ2h0IHBhcmFzYW5ncywgY3Jvc3Npbmcgb24gdGhlaXIgd2F5IHR3byBjYW5hbHMsIG9uZSBieSBhIHN0YXRpb25hcnkgYnJpZGdlIGFuZCB0aGUgb3RoZXIgYnkgYSBicmlkZ2UgbWFkZSBvZiBzZXZlbiBib2F0cy4gVGhlc2UgY2FuYWxzIGlzc3VlZCBmcm9tIHRoZSBUaWdyaXMgcml2ZXIsIGFuZCBmcm9tIHRoZW0sIGFnYWluLCBkaXRjaGVzIGhhZCBiZWVuIGN1dCB0aGF0IHJhbiBpbnRvIHRoZSBjb3VudHJ5LCBhdCBmaXJzdCBsYXJnZSwgdGhlbiBzbWFsbGVyLCBhbmQgZmluYWxseSBsaXR0bGUgY2hhbm5lbHMsIHN1Y2ggYXMgcnVuIHRvIHRoZSBtaWxsZXQgZmllbGRzIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiB0aGV5IHJlYWNoZWQgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTMwODUwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMzA4NTAiPlRpZ3JpczwvcGxhY2VOYW1lPiByaXZlciwgbmVhciB3aGljaCB3YXMgYSBsYXJnZSBhbmQgcG9wdWxvdXMgY2l0eSBuYW1lZCBTaXR0YWNlLCBmaWZ0ZWVuIHN0YWRpYSBmcm9tIHRoZSByaXZlci4KPC90cmFuc2xhdGlvbj4="
translation['2.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgR3JlZWtzIGFjY29yZGluZ2x5IGVuY2FtcGVkIGJlc2lkZSB0aGlzIGNpdHksIG5lYXIgYSBsYXJnZSBhbmQgYmVhdXRpZnVsIHBhcmssIHRoaWNrbHkgY292ZXJlZCB3aXRoIGFsbCBzb3J0cyBvZiB0cmVlcywgd2hpbGUgdGhlIGJhcmJhcmlhbnMgaGFkIGNyb3NzZWQgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTMwODUwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMzA4NTAiPlRpZ3JpczwvcGxhY2VOYW1lPiBiZWZvcmUgZW5jYW1waW5nLCBhbmQgd2VyZSBub3Qgd2l0aGluIHNpZ2h0IG9mIHRoZSBHcmVla3MuCjwvdHJhbnNsYXRpb24+"
translation['2.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGUgZXZlbmluZyBtZWFsIFByb3hlbnVzIGFuZCBYZW5vcGhvbiBjaGFuY2VkIHRvIGJlIHdhbGtpbmcgaW4gZnJvbnQgb2YgdGhlIHBsYWNlIHdoZXJlIHRoZSBhcm1zIHdlcmUgc3RhY2tlZCwgd2hlbiBhIG1hbiBjYW1lIHVwIGFuZCBhc2tlZCB0aGUgb3V0cG9zdHMgd2hlcmUgaGUgY291bGQgc2VlIFByb3hlbnVzIG9yIENsZWFyY2h1c+KAlGhlIGRpZCBub3QgYXNrIGZvciBNZW5vbiwgZGVzcGl0ZSB0aGUgZmFjdCB0aGF0IGhlIGNhbWUgZnJvbSBBcmlhZXVzLCBNZW5vbidzIGZyaWVuZC4KPC90cmFuc2xhdGlvbj4="
translation['2.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBQcm94ZW51cyBzYWlkIOKAnEkgYW0gdGhlIG9uZSB5b3UgYXJlIGxvb2tpbmcgZm9yLOKAnSB0aGUgbWFuIG1hZGUgdGhpcyBzdGF0ZW1lbnQ6IOKAnEkgd2FzIHNlbnQgaGVyZSBieSBBcmlhZXVzIGFuZCBBcnRhb3p1cywgd2hvIHdlcmUgZmFpdGhmdWwgdG8gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBhbmQgYXJlIGZyaWVuZGx5IHRvIHlvdTsgdGhleSBiaWQgeW91IGJlIG9uIHlvdXIgZ3VhcmQgbGVzdCB0aGUgYmFyYmFyaWFucyBhdHRhY2sgeW91IGR1cmluZyB0aGUgbmlnaHQsIGZvciB0aGVyZSBpcyBhIGxhcmdlIGFybXkgaW4gdGhlIG5laWdoYm91cmluZyBwYXJrLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGFsc28gYmlkIHlvdSBzZW5kIGEgZ3VhcmQgdG8gdGhlIGJyaWRnZSBvdmVyIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTEzMDg1MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTMwODUwIj5UaWdyaXM8L3BsYWNlTmFtZT4gcml2ZXIsIGJlY2F1c2UgVGlzc2FwaGVybmVzIGludGVuZHMgdG8gZGVzdHJveSBpdCBkdXJpbmcgdGhlIG5pZ2h0LCBpZiBoZSBjYW4sIHNvIHRoYXQgeW91IG1heSBub3QgY3Jvc3MsIGJ1dCBtYXkgYmUgY3V0IG9mZiBiZXR3ZWVuIHRoZSByaXZlciBhbmQgdGhlIGNhbmFsLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgdGhleSB0b29rIGhpbSB0byBDbGVhcmNodXMgYW5kIHJlcGVhdGVkIGhpcyBtZXNzYWdlLiBBbmQgd2hlbiBDbGVhcmNodXMgaGVhcmQgaXQsIGhlIHdhcyBleGNlZWRpbmdseSBhZ2l0YXRlZCBhbmQgZnVsbCBvZiBmZWFyLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QSB5b3VuZyBtYW4gd2hvIHdhcyBwcmVzZW50LCBob3dldmVyLCBmZWxsIHRvIHRoaW5raW5nLCBhbmQgdGhlbiBzYWlkIHRoYXQgdGhlIHR3byBzdG9yaWVzLCB0aGF0IHRoZXkgaW50ZW5kZWQgdG8gYXR0YWNrIGFuZCBpbnRlbmRlZCB0byBkZXN0cm95IHRoZSBicmlkZ2UsIHdlcmUgbm90IGNvbnNpc3RlbnQuIOKAnEZvciBpdCBpcyBjbGVhcizigJ0gaGUgd2VudCBvbiwg4oCcdGhhdCBpZiB0aGV5IGF0dGFjaywgdGhleSBtdXN0IGVpdGhlciBiZSB2aWN0b3Jpb3VzIG9yIGJlIGRlZmVhdGVkLiBOb3cgaWYgdGhleSBhcmUgdmljdG9yaW91cywgd2h5IHNob3VsZCB0aGV5IG5lZWQgdG8gZGVzdHJveSB0aGUgYnJpZGdlPyBGb3IgZXZlbiBpZiB0aGVyZSB3ZXJlIG1hbnkgYnJpZGdlcywgd2Ugc2hvdWxkIGhhdmUgbm8gcGxhY2UgdG8gd2hpY2ggd2UgY291bGQgZmxlZSBhbmQgc2F2ZSBvdXJzZWx2ZXMuCjwvdHJhbnNsYXRpb24+"
translation['2.4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaWYgaXQgaXMgd2Ugd2hvIGFyZSB2aWN0b3Jpb3VzLCB3aXRoIHRoZSBicmlkZ2UgZGVzdHJveWVkIHRoZXkgd2lsbCBoYXZlIG5vIHBsYWNlIHRvIHdoaWNoIHRoZXkgY2FuIGZsZWUuIEFuZCwgZnVydGhlcm1vcmUsIHRob3VnaCB0aGVyZSBhcmUgdHJvb3BzIGluIGFidW5kYW5jZSBvbiB0aGUgb3RoZXIgc2lkZSwgbm8gb25lIHdpbGwgYmUgYWJsZSB0byBjb21lIHRvIHRoZWlyIGFpZCB3aXRoIHRoZSBicmlkZ2UgZGVzdHJveWVkLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgaGVhcmluZyB0aGVzZSB3b3JkcyBDbGVhcmNodXMgYXNrZWQgdGhlIG1lc3NlbmdlciBhYm91dCBob3cgZXh0ZW5zaXZlIHRoZSB0ZXJyaXRvcnkgYmV0d2VlbiB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDExMzA4NTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTEzMDg1MCI+VGlncmlzPC9wbGFjZU5hbWU+IGFuZCB0aGUgY2FuYWwgd2FzLiBIZSByZXBsaWVkIHRoYXQgaXQgd2FzIGEgbGFyZ2UgdHJhY3QsIGFuZCB0aGF0IHRoZXJlIHdlcmUgdmlsbGFnZXMgYW5kIG1hbnkgbGFyZ2UgdG93bnMgaW4gaXQuCjwvdHJhbnNsYXRpb24+"
translation['2.4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGl0IHdhcyBwZXJjZWl2ZWQgdGhhdCB0aGUgYmFyYmFyaWFucyBoYWQgc2VudCB0aGUgbWFuIHdpdGggYSBmYWxzZSBtZXNzYWdlIG91dCBvZiBmZWFyIHRoYXQgdGhlIEdyZWVrcyBtaWdodCBkZXN0cm95IHRoZSBicmlkZ2UgYW5kIGVzdGFibGlzaCB0aGVtc2VsdmVzIHBlcm1hbmVudGx5IG9uIHRoZSBpc2xhbmQsIHdpdGggdGhlIFRpZ3JpcyBmb3IgYSBkZWZlbmNlIG9uIG9uZSBzaWRlIGFuZCB0aGUgY2FuYWwgb24gdGhlIG90aGVyOyBpbiB0aGF0IGNhc2UsIHRoZXkgdGhvdWdodCwgdGhlIEdyZWVrcyBtaWdodCBnZXQgcHJvdmlzaW9ucyBmcm9tIHRoZSB0ZXJyaXRvcnkgYmV0d2VlbiB0aGUgcml2ZXIgYW5kIHRoZSBjYW5hbCwgc2luY2UgaXQgd2FzIGV4dGVuc2l2ZSBhbmQgZmVydGlsZSBhbmQgdGhlcmUgd2VyZSBtZW4gaW4gaXQgdG8gY3VsdGl2YXRlIGl0OyBhbmQgZnVydGhlcm1vcmUsIHRoZSBzcG90IG1pZ2h0IGFsc28gYmVjb21lIGEgcGxhY2Ugb2YgcmVmdWdlIGZvciBhbnlvbmUgd2hvIG1pZ2h0IGRlc2lyZSB0byBkbyBoYXJtIHRvIHRoZSBLaW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyB0aGUgR3JlZWtzIHdlbnQgdG8gcmVzdCwgeWV0IHRoZXkgZGlkLCBuZXZlcnRoZWxlc3MsIHNlbmQgYSBndWFyZCB0byB0aGUgYnJpZGdlOyBhbmQgbm8gb25lIGF0dGFja2VkIHRoZSBhcm15IGZyb20gYW55IHF1YXJ0ZXIsIG5vciBkaWQgYW55b25lIG9mIHRoZSBlbmVteSwgc28gdGhlIG1lbiBvbiBndWFyZCByZXBvcnRlZCwgY29tZSB0byB0aGUgYnJpZGdlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGRhd24gY2FtZSwgdGhleSBwcm9jZWVkZWQgdG8gY3Jvc3MgdGhlIGJyaWRnZSwgd2hpY2ggd2FzIG1hZGUgb2YgdGhpcnR5LXNldmVuIGJvYXRzLCBhcyBndWFyZGVkbHkgYXMgcG9zc2libGU7IGZvciB0aGV5IGhhZCByZXBvcnRzIGZyb20gc29tZSBvZiB0aGUgR3JlZWtzIHdobyB3ZXJlIHdpdGggVGlzc2FwaGVybmVzIHRoYXQgdGhlIGVuZW15IHdvdWxkIGF0dGFjayB0aGVtIHdoaWxlIHRoZXkgd2VyZSBjcm9zc2luZy4gQnV0IHRoZXNlIHJlcG9ydHMgd2VyZSBmYWxzZS4gVG8gYmUgc3VyZSwgaW4gdGhlIGNvdXJzZSBvZiB0aGVpciBwYXNzYWdlIEdsdXMgZGlkIGFwcGVhciwgd2l0aCBzb21lIG90aGVycywgd2F0Y2hpbmcgdG8gc2VlIGlmIHRoZXkgd2VyZSBjcm9zc2luZyB0aGUgcml2ZXIsIGJ1dCBvbmNlIGhlIGhhZCBzZWVuLCBoZSB3ZW50IHJpZGluZyBvZmYuCjwvdHJhbnNsYXRpb24+"
translation['2.4.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnJvbSB0aGUgVGlncmlzIHRoZXkgbWFyY2hlZCBmb3VyIHN0YWdlcywgdHdlbnR5IHBhcmFzYW5ncywgdG8gdGhlIFBoeXNjdXMgcml2ZXIsIHdoaWNoIHdhcyBhIHBsZXRocnVtIGluIHdpZHRoIGFuZCBoYWQgYSBicmlkZ2Ugb3ZlciBpdC4gVGhlcmUgd2FzIHNpdHVhdGVkIGEgbGFyZ2UgY2l0eSBuYW1lZCBPcGlzLCBuZWFyIHdoaWNoIHRoZSBHcmVla3MgbWV0IHRoZSBiYXN0YXJkIGJyb3RoZXIgb2YgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBhbmQgQXJ0YXhlcnhlcywgd2hvIHdhcyBsZWFkaW5nIGEgbGFyZ2UgYXJteSBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE3NTA5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTc1MDkiPlN1c2E8L3BsYWNlTmFtZT4gYW5kIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyMTE1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDIxMTUiPkVjYmF0YW5hPC9wbGFjZU5hbWU+IHRvIHRoZSBzdXBwb3J0LCBhcyBoZSBzYWlkLCBvZiB0aGUgS2luZzsgYW5kIGhlIGhhbHRlZCBoaXMgb3duIGFybXkgYW5kIHdhdGNoZWQgdGhlIEdyZWVrcyBhcyB0aGV5IHBhc3NlZCBieS4KPC90cmFuc2xhdGlvbj4="
translation['2.4.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5DbGVhcmNodXMgbGVkIHRoZW0gdHdvIGFicmVhc3QsIGFuZCBoYWx0ZWQgbm93IGFuZCB0aGVuIGluIGhpcyBtYXJjaDsgYW5kIHdoYXRldmVyIHRoZSBsZW5ndGggb2YgdGltZSBmb3Igd2hpY2ggaGUgaGFsdGVkIHRoZSB2YW4gb2YgdGhlIGFybXksIGp1c3Qgc28gbG9uZyBhIHRpbWUgdGhlIGhhbHQgd291bGQgbmVjZXNzYXJpbHkgbGFzdCB0aHJvdWdoIHRoZSBlbnRpcmUgYXJteTsgdGhlIHJlc3VsdCB3YXMgdGhhdCBldmVuIHRvIHRoZSBHcmVla3MgdGhlbXNlbHZlcyB0aGVpciBhcm15IHNlZW1lZCB0byBiZSB2ZXJ5IGxhcmdlLCBhbmQgdGhlIFBlcnNpYW4gd2FzIGFzdG91bmRlZCBhcyBoZSB3YXRjaGVkIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['2.4.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5Gcm9tIHRoZXJlIHRoZXkgbWFyY2hlZCB0aHJvdWdoIE1lZGlhLCBzaXggZGVzZXJ0IHN0YWdlcywgdGhpcnR5IHBhcmFzYW5ncywgdG8gdGhlIHZpbGxhZ2VzIG9mIFBhcnlzYXRpcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS40LjkiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS40Ljk8L2JpYmw+Ljwvbm90ZT4gdGhlIG1vdGhlciBvZiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuNC45IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuNC45PC9iaWJsPi48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFuZCB0aGUgS2luZy4gQW5kIFRpc3NhcGhlcm5lcywgYnkgd2F5IG9mIGluc3VsdGluZyA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIHRocm91Z2ggdGhlIG1vdGhlciB3aG8g4oCcbG92ZWQgaGltIGJldHRlciB0aGFuIGhlciByZWlnbmluZyBzb24gQXJ0YXhlcnhlc+KAnSAoPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjEuNCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjEuNDwvYmlibD4pLjwvbm90ZT4gZ2F2ZSBvdmVyIHRoZXNlIHZpbGxhZ2Vz4oCUc2F2ZSBvbmx5IHRoZSBzbGF2ZXMgdGhleSBjb250YWluZWTigJR0byB0aGUgR3JlZWtzIHRvIHBsdW5kZXIuIEluIHRoZW0gdGhlcmUgd2FzIGdyYWluIGluIGFidW5kYW5jZSBhbmQgY2F0dGxlIGFuZCBvdGhlciBwcm9wZXJ0eS4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjEuNCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjEuNDwvYmlibD4pLjwvdHJhbnNsYXRpb24+"
translation['2.4.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5Gcm9tIHRoZXJlIHRoZXkgbWFyY2hlZCBmb3VyIGRlc2VydCBzdGFnZXMsIHR3ZW50eSBwYXJhc2FuZ3MsIGtlZXBpbmcgdGhlIFRpZ3JpcyByaXZlciBvbiB0aGUgbGVmdC4gQWNyb3NzIHRoZSByaXZlciBvbiB0aGUgZmlyc3Qgc3RhZ2Ugd2FzIHNpdHVhdGVkIGEgbGFyZ2UgYW5kIHByb3NwZXJvdXMgY2l0eSBuYW1lZCBDYWVuYWUsIGZyb20gd2hpY2ggdGhlIGJhcmJhcmlhbnMgYnJvdWdodCBvdmVyIGxvYXZlcywgY2hlZXNlcyBhbmQgd2luZSwgY3Jvc3NpbmcgdXBvbiByYWZ0cyBtYWRlIG9mIHNraW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZXkgcmVhY2hlZCB0aGUgWmFwYXRhcyByaXZlciwgd2hpY2ggd2FzIGZvdXIgcGxldGhyYSBpbiB3aWR0aC4gVGhlcmUgdGhleSByZW1haW5lZCB0aHJlZSBkYXlzLiBEdXJpbmcgdGhpcyB0aW1lIHN1c3BpY2lvbnMgd2VyZSByaWZlLCBpdCBpcyB0cnVlLCBidXQgbm8gcGxvdCBjYW1lIG9wZW5seSB0byBsaWdodC4KPC90cmFuc2xhdGlvbj4="
translation['2.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkNsZWFyY2h1cyByZXNvbHZlZCwgdGhlcmVmb3JlLCB0byBoYXZlIGEgbWVldGluZyB3aXRoIFRpc3NhcGhlcm5lcyBhbmQgcHV0IGEgc3RvcCB0byB0aGVzZSBzdXNwaWNpb25zLCBpZiBoZSBwb3NzaWJseSBjb3VsZCwgYmVmb3JlIGhvc3RpbGl0aWVzIHJlc3VsdGVkIGZyb20gdGhlbTsgc28gaGUgc2VudCBhIG1lc3NlbmdlciB0byBzYXkgdGhhdCBoZSBkZXNpcmVkIHRvIG1lZXQgaGltLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBUaXNzYXBoZXJuZXMgcmVhZGlseSBiYWRlIGhpbSBjb21lLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZXkgaGFkIG1ldCwgQ2xlYXJjaHVzIHNwb2tlIGFzIGZvbGxvd3M6IOKAnEkga25vdywgdG8gYmUgc3VyZSwgVGlzc2FwaGVybmVzLCB0aGF0IGJvdGggb2YgdXMgaGF2ZSB0YWtlbiBvYXRocyBhbmQgZ2l2ZW4gcGxlZGdlcyBub3QgdG8gaW5qdXJlIG9uZSBhbm90aGVyOyB5ZXQgSSBzZWUgdGhhdCB5b3UgYXJlIG9uIHlvdXIgZ3VhcmQgYWdhaW5zdCB1cyBhcyB0aG91Z2ggd2Ugd2VyZSBlbmVtaWVzLCBhbmQgd2UsIG9ic2VydmluZyB0aGlzLCBhcmUga2VlcGluZyBndWFyZCBvbiBvdXIgc2lkZS4KPC90cmFuc2xhdGlvbj4="
translation['2.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBzaW5jZSwgdXBvbiBpbnF1aXJ5LCBJIGFtIHVuYWJsZSB0byBhc2NlcnRhaW4gdGhhdCB5b3UgYXJlIHRyeWluZyB0byBkbyB1cyBoYXJtLCBhbmQgYW0gcGVyZmVjdGx5IHN1cmUgdGhhdCB3ZSwgZm9yIG91ciBwYXJ0LCBhcmUgbm90IGV2ZW4gdGhpbmtpbmcgb2YgYW55IHN1Y2ggdGhpbmcgYWdhaW5zdCB5b3UsIEkgcmVzb2x2ZWQgdG8gaGF2ZSBhbiBpbnRlcnZpZXcgd2l0aCB5b3UsIHNvIHRoYXQsIGlmIHBvc3NpYmxlLCB3ZSBtaWdodCBkaXNwZWwgdGhpcyBtdXR1YWwgZGlzdHJ1c3QuCjwvdHJhbnNsYXRpb24+"
translation['2.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkZvciBJIGtub3cgdGhhdCB0aGVyZSBoYXZlIGJlZW4gY2FzZXMgYmVmb3JlIG5vd+KAlHNvbWUgb2YgdGhlbSB0aGUgcmVzdWx0IG9mIHNsYW5kZXIsIG90aGVycyBvZiBtZXJlIHN1c3BpY2lvbuKAlHdoZXJlIG1lbiB3aG8gaGF2ZSBiZWNvbWUgZmVhcmZ1bCBvZiBvbmUgYW5vdGhlciBhbmQgd2lzaGVkIHRvIHN0cmlrZSBiZWZvcmUgdGhleSB3ZXJlIHN0cnVjaywgaGF2ZSBkb25lIGlycmVwYXJhYmxlIGhhcm0gdG8gcGVvcGxlIHdobyB3ZXJlIG5laXRoZXIgaW50ZW5kaW5nIG5vciwgZm9yIHRoYXQgbWF0dGVyLCBkZXNpcmluZyB0byBkbyBhbnl0aGluZyBvZiB0aGUgc29ydCB0byB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSBiZWxpZWYsIHRoZW4sIHRoYXQgc3VjaCBtaXN1bmRlcnN0YW5kaW5ncyBhcmUgYmVzdCBzZXR0bGVkIGJ5IGNvbmZlcmVuY2UsIEkgaGF2ZSBjb21lIGhlcmUsIGFuZCBJIHdpc2ggdG8gcG9pbnQgb3V0IHRvIHlvdSB0aGF0IHlvdSBhcmUgbWlzdGFrZW4gaW4gZGlzdHJ1c3RpbmcgdXMuCjwvdHJhbnNsYXRpb24+"
translation['2.5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkZvciwgZmlyc3QgYW5kIGNoaWVmbHksIG91ciBvYXRocywgc3dvcm4gYnkgdGhlIGdvZHMsIHN0YW5kIGluIHRoZSB3YXkgb2Ygb3VyIGJlaW5nIGVuZW1pZXMgb2Ygb25lIGFub3RoZXI7IGFuZCB0aGUgbWFuIHdobyBpcyBjb25zY2lvdXMgdGhhdCBoZSBoYXMgZGlzcmVnYXJkZWQgc3VjaCBvYXRocywgSSBmb3IgbXkgcGFydCBzaG91bGQgbmV2ZXIgYWNjb3VudCBoYXBweS4gRm9yIGluIHdhciB3aXRoIHRoZSBnb2RzIEkga25vdyBub3QgZWl0aGVyIGJ5IHdoYXQgc3dpZnRuZXNzIG9mIGZvb3Qgb3IgdG8gd2hhdCBwbGFjZSBvZiByZWZ1Z2Ugb25lIGNvdWxkIG1ha2UgaGlzIGVzY2FwZSwgb3IgaW50byB3aGF0IGRhcmtuZXNzIGhlIGNvdWxkIHN0ZWFsIGF3YXksIG9yIGhvdyBoZSBjb3VsZCB3aXRoZHJhdyBoaW1zZWxmIHRvIGEgc2VjdXJlIGZvcnRyZXNzLiBGb3IgYWxsIHRoaW5ncyBpbiBhbGwgcGxhY2VzIGFyZSBzdWJqZWN0IHRvIHRoZSBnb2RzLCBhbmQgYWxsIGFsaWtlIHRoZSBnb2RzIGhvbGQgaW4gdGhlaXIgY29udHJvbC4KPC90cmFuc2xhdGlvbj4="
translation['2.5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUb3VjaGluZyB0aGUgZ29kcywgdGhlbiwgYW5kIG91ciBvYXRocyBJIGFtIHRodXMgbWluZGVkLCBhbmQgdG8gdGhlIGtlZXBpbmcgb2YgdGhlIGdvZHMgd2UgY29uc2lnbmVkIHRoZSBmcmllbmRzaGlwIHdoaWNoIHdlIGNvdmVuYW50ZWQ7IGJ1dCBhcyBmb3IgdGhpbmdzIGh1bWFuLCBJIGJlbGlldmUgdGhhdCBhdCB0aGlzIHRpbWUgeW91IGFyZSB0byB1cyB0aGUgZ3JlYXRlc3QgZ29vZCB3ZSBwb3NzZXNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkZvciwgd2l0aCB5b3UsIGV2ZXJ5IHJvYWQgaXMgZWFzeSBmb3IgdXMgdG8gdHJhdmVyc2UsIGV2ZXJ5IHJpdmVyIGlzIHBhc3NhYmxlLCBzdXBwbGllcyBhcmUgbm90IGxhY2tpbmc7IHdpdGhvdXQgeW91LCBhbGwgb3VyIHJvYWQgaXMgdGhyb3VnaCBkYXJrbmVzc+KAlGZvciBub25lIG9mIGl0IGRvIHdlIGtub3figJRldmVyeSByaXZlciBpcyBoYXJkIHRvIHBhc3MsIGV2ZXJ5IGNyb3dkIGV4Y2l0ZXMgb3VyIGZlYXJzLCBhbmQgbW9zdCBmZWFyZnVsIG9mIGFsbCBpcyBzb2xpdHVkZeKAlGZvciBpdCBpcyBjcm93ZGVkIGZ1bGwgb2Ygd2FudC4KPC90cmFuc2xhdGlvbj4="
translation['2.5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaWYgd2Ugc2hvdWxkLCBpbiBmYWN0LCBiZSBzZWl6ZWQgd2l0aCBtYWRuZXNzIGFuZCBzbGF5IHlvdSwgc2hvdWxkIHdlIG5vdCBjZXJ0YWlubHksIGFmdGVyIHNsYXlpbmcgb3VyIGJlbmVmYWN0b3IsIGJlIGVuZ2FnZWQgaW4gY29udGVzdCB3aXRoIHRoZSBLaW5nLCBhIGZyZXNoIGFuZCBtb3N0IHBvd2VyZnVsIG9wcG9uZW50Pzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byUz4bOtc60z4HOv8+CLDwvZm9yZWlnbj4gaW4gdGhlIGxhbmd1YWdlIG9mIEdyZWVrIGF0aGxldGljcywgd2FzIHRoZSBtYW4gd2hvIGhhZCDigJxkcmF3biBhIGJ5ZSzigJ0gYW5kIHNvIHdhaXRlZCBmb3IgdGhlIHJlc3VsdCBvZiBhIGNvbnRlc3QgaW4gb3JkZXIgdG8gZW5nYWdlIHRoZSB2aWN0b3IuPC9ub3RlPiBBZ2FpbiwgaG93IGdyZWF0IGFuZCBicmlnaHQgYXJlIHRoZSBob3BlcyBvZiB3aGljaCBJIHNob3VsZCByb2IgbXlzZWxmIGlmIEkgYXR0ZW1wdGVkIHRvIGRvIHlvdSBhbnkgaGFybSwgSSB3aWxsIHJlbGF0ZSB0byB5b3UuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8lM+GzrXOtM+Bzr/Pgiw8L2ZvcmVpZ24+IGluIHRoZSBsYW5ndWFnZSBvZiBHcmVlayBhdGhsZXRpY3MsIHdhcyB0aGUgbWFuIHdobyBoYWQg4oCcZHJhd24gYSBieWUs4oCdIGFuZCBzbyB3YWl0ZWQgZm9yIHRoZSByZXN1bHQgb2YgYSBjb250ZXN0IGluIG9yZGVyIHRvIGVuZ2FnZSB0aGUgdmljdG9yLjwvdHJhbnNsYXRpb24+"
translation['2.5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5JIHNldCBteSBoZWFydCB1cG9uIGhhdmluZyA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGZvciBteSBmcmllbmQgYmVjYXVzZSBJIHRob3VnaHQgdGhhdCBoZSB3YXMgdGhlIGJlc3QgYWJsZSBvZiBhbGwgdGhlIG1lbiBvZiBoaXMgdGltZSB0byBiZW5lZml0IHdob20gaGUgcGxlYXNlZDsgYnV0IG5vdyBJIHNlZSB0aGF0IGl0IGlzIHlvdSB3aG8gcG9zc2VzcyA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+JyBwb3dlciBhbmQgdGVycml0b3J5LCB3aGlsZSByZXRhaW5pbmcgeW91ciBvd24gYmVzaWRlcywgYW5kIHRoYXQgdGhlIHBvd2VyIG9mIHRoZSBLaW5nLCB3aGljaCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGZvdW5kIGhvc3RpbGUsIGlzIGZvciB5b3UgYSBzdXBwb3J0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5TaW5jZSB0aGlzIGlzIHNvLCB3aG8gaXMgc28gbWFkIGFzIG5vdCB0byBkZXNpcmUgdG8gYmUgeW91ciBmcmllbmQ/PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCBub3cgZm9yIHRoZSBvdGhlciBzaWRlLOKAlGZvciBJIHdpbGwgZ28gb24gdG8gdGVsbCB5b3UgdGhlIGdyb3VuZHMgdXBvbiB3aGljaCBJIGJhc2UgdGhlIGhvcGUgdGhhdCB5b3Ugd2lsbCBsaWtld2lzZSBkZXNpcmUgdG8gYmUgb3VyIGZyaWVuZC4KPC90cmFuc2xhdGlvbj4="
translation['2.5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5JIGtub3cgdGhhdCB0aGUgTXlzaWFucyBhcmUgdHJvdWJsZXNvbWUgdG8geW91LCBhbmQgSSBiZWxpZXZlIHRoYXQgd2l0aCB0aGUgZm9yY2UgSSBoYXZlIEkgY291bGQgbWFrZSB0aGVtIHlvdXIgc3VibWlzc2l2ZSBzZXJ2YW50czsgSSBrbm93IHRoYXQgdGhlIFBpc2lkaWFucyBhbHNvIHRyb3VibGUgeW91LCBhbmQgSSBoZWFyIHRoYXQgdGhlcmUgYXJlIGxpa2V3aXNlIG1hbnkgb3RoZXIgdHJpYmVzIG9mIHRoZSBzYW1lIHNvcnQ7IEkgY291bGQgcHV0IGEgc3RvcCwgSSB0aGluaywgdG8gdGhlaXIgYmVpbmcgYSBjb250aW51YWwgYW5ub3lhbmNlIHRvIHlvdXIgcHJvc3Blcml0eS4gQXMgZm9yIHRoZSBFZ3lwdGlhbnMsIHdpdGggd2hvbSBJIGxlYXJuIHRoYXQgeW91IGFyZSBlc3BlY2lhbGx5IGFuZ3J5LCBJIGRvIG5vdCBzZWUgd2hhdCBmb3JjZSB5b3UgY291bGQgYmV0dGVyIGVtcGxveSB0byBhaWQgeW91IGluIGNoYXN0aXNpbmcgdGhlbSB0aGFuIHRoZSBmb3JjZSB3aGljaCBJIG5vdyBoYXZlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgdGFrZSB0aG9zZSB3aG8gZHdlbGwgYXJvdW5kIHlvdTogaWYgeW91IGNob3NlIHRvIGJlIGEgZnJpZW5kIHRvIGFueSwgeW91IGNvdWxkIGJlIHRoZSBncmVhdGVzdCBwb3NzaWJsZSBmcmllbmQsIHdoaWxlIGlmIGFueSB3ZXJlIHRvIGFubm95IHlvdSwgeW91IGNvdWxkIHBsYXkgdGhlIHBhcnQgb2YgbWFzdGVyIG92ZXIgdGhlbSBpbiBjYXNlIHlvdSBoYWQgdXMgZm9yIHN1cHBvcnRlcnMsIGZvciB3ZSBzaG91bGQgc2VydmUgeW91LCBub3QgbWVyZWx5IGZvciB0aGUgc2FrZSBvZiBwYXksIGJ1dCBhbHNvIG91dCBvZiB0aGUgZ3JhdGl0dWRlIHRoYXQgd2Ugc2hvdWxkIGZlZWwsIGFuZCByaWdodGx5IGZlZWwsIHRvd2FyZCB5b3UsIHRoZSBtYW4gd2hvIGhhZCBzYXZlZCB1cy4KPC90cmFuc2xhdGlvbj4="
translation['2.5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgbXkgcGFydCwgYXMgSSBjb25zaWRlciBhbGwgdGhlc2UgdGhpbmdzIHRoZSBpZGVhIG9mIHlvdXIgZGlzdHJ1c3RpbmcgdXMgc2VlbXMgdG8gbWUgc28gYXN0b25pc2hpbmcgdGhhdCBJIHNob3VsZCBiZSB2ZXJ5IGdsYWQgaW5kZWVkIHRvIGhlYXIgdGhlIG5hbWUgb2YgdGhlIG1hbiB3aG8gaXMgc28gY2xldmVyIGEgdGFsa2VyIHRoYXQgaGlzIHRhbGsgY291bGQgcGVyc3VhZGUgeW91IHRoYXQgd2Ugd2VyZSBjaGVyaXNoaW5nIGRlc2lnbnMgYWdhaW5zdCB5b3Uu4oCdIFRodXMgbXVjaCBDbGVhcmNodXMgc2FpZCwgYW5kIFRpc3NhcGhlcm5lcyByZXBsaWVkIGFzIGZvbGxvd3M6CjwvdHJhbnNsYXRpb24+"
translation['2.5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSXQgaXMgYSBwbGVhc3VyZSB0byBtZSwgQ2xlYXJjaHVzLCB0byBoZWFyIHlvdXIgc2Vuc2libGUgd29yZHM7IGZvciBpZiwgaG9sZGluZyB0aGVzZSB2aWV3cywgeW91IHNob3VsZCBkZXZpc2UgYW55IGlsbCBhZ2FpbnN0IG1lLCB5b3Ugd291bGQgYXQgdGhlIHNhbWUgdGltZSwgSSB0aGluaywgYmUgc2hvd2luZyBpbGwtd2lsbCB0b3dhcmQgeW91cnNlbGYgYWxzby4gQW5kIG5vdywgaW4gb3JkZXIgdGhhdCB5b3UgbWF5IGxlYXJuIHRoYXQgeW91IGxpa2V3aXNlIGFyZSBtaXN0YWtlbiBpbiBkaXN0cnVzdGluZyBlaXRoZXIgdGhlIEtpbmcgb3IgbXlzZWxmLCB0YWtlIHlvdXIgdHVybiBpbiBsaXN0ZW5pbmcuCjwvdHJhbnNsYXRpb24+"
translation['2.5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5JZiB3ZSB3ZXJlLCBpbiBmYWN0LCBkZXNpcm91cyBvZiBkZXN0cm95aW5nIHlvdSwgZG9lcyBpdCBzZWVtIHRvIHlvdSB0aGF0IHdlIGhhdmUgbm90IGNhdmFscnkgaW4gYWJ1bmRhbmNlIGFuZCBpbmZhbnRyeSBhbmQgbWlsaXRhcnkgZXF1aXBtZW50LCB3aGVyZWJ5IHdlIHNob3VsZCBiZSBhYmxlIHRvIGhhcm0geW91IHdpdGhvdXQgYmVpbmcgaW4gYW55IGRhbmdlciBvZiBzdWZmZXJpbmcgaGFybSBvdXJzZWx2ZXM/CjwvdHJhbnNsYXRpb24+"
translation['2.5.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5PciBkbyB5b3UgdGhpbmsgdGhhdCB3ZSBzaG91bGQgbm90IGhhdmUgcGxhY2VzIHN1aXRhYmxlIGZvciBhdHRhY2tpbmcgeW91PyBEbyB5b3Ugbm90IGJlaG9sZCB0aGVzZSB2YXN0IHBsYWlucywgd2hpY2ggZXZlbiBub3csIGFsdGhvdWdoIHRoZXkgYXJlIGZyaWVuZGx5LCBpdCBpcyBjb3N0aW5nIHlvdSBhIGRlYWwgb2YgbGFib3VyIHRvIHRyYXZlcnNlPyBhbmQgdGhlc2UgZ3JlYXQgbW91bnRhaW5zIHlvdSBoYXZlIHRvIHBhc3MsIHdoaWNoIHdlIGNhbiBvY2N1cHkgaW4gYWR2YW5jZSBhbmQgcmVuZGVyIGltcGFzc2FibGUgZm9yIHlvdT8gYW5kIGhhdmUgd2Ugbm90IHRoZXNlIGdyZWF0IHJpdmVycywgYXQgd2hpY2ggd2UgY2FuIHBhcmNlbCBvdXQgd2hhdGV2ZXIgbnVtYmVyIG9mIHlvdSB3ZSBtYXkgY2hvb3NlIHRvIGZpZ2h0IHdpdGjigJRzb21lLCBpbiBmYWN0LCB3aGljaCB5b3UgY291bGQgbm90IGNyb3NzIGF0IGFsbCB1bmxlc3Mgd2UgY2FycmllZCB5b3Ugb3Zlcj8KPC90cmFuc2xhdGlvbj4="
translation['2.5.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaWYgd2Ugd2VyZSB3b3JzdGVkIGF0IGFsbCB0aGVzZSBwb2ludHMsIG5ldmVydGhlbGVzcyBpdCBpcyBjZXJ0YWluIHRoYXQgZmlyZSBjYW4gd29yc3QgY3JvcHM7IGJ5IGJ1cm5pbmcgdGhlbSB1cCB3ZSBjb3VsZCBicmluZyBmYW1pbmUgaW50byB0aGUgZmllbGQgYWdhaW5zdCB5b3UsIGFuZCB5b3UgY291bGQgbm90IGZpZ2h0IGFnYWluc3QgdGhhdCwgaG93ZXZlciBicmF2ZSB5b3UgbWlnaHQgYmUuCjwvdHJhbnNsYXRpb24+"
translation['2.5.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5TaW5jZSwgdGhlbiwgd2UgaGF2ZSBzbyBtYW55IHdheXMgb2YgbWFraW5nIHdhciB1cG9uIHlvdSwgbm8gb25lIG9mIHRoZW0gZGFuZ2Vyb3VzIHRvIHVzLCB3aHksIGluIHN1Y2ggYSBjYXNlLCBzaG91bGQgd2UgY2hvb3NlIG91dCBvZiB0aGVtIGFsbCB0aGF0IG9uZSB3YXkgd2hpY2ggYWxvbmUgaXMgaW1waW91cyBpbiB0aGUgc2lnaHQgb2YgdGhlIGdvZHMgYW5kIHNoYW1lZnVsIGluIHRoZSBzaWdodCBvZiBtZW4/CjwvdHJhbnNsYXRpb24+"
translation['2.5.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgaXMgdGhvc2Ugd2hvIGFyZSB1dHRlcmx5IHdpdGhvdXQgd2F5cyBhbmQgbWVhbnMsIHdobyBhcmUgYm91bmQgYnkgbmVjZXNzaXR5LCBhbmQgd2hvIGFyZSByYXNjYWxzIGluIGFueSBjYXNlLCB0aGF0IGFyZSB3aWxsaW5nIHRvIGFjY29tcGxpc2ggYW4gb2JqZWN0IGJ5IHBlcmp1cnkgdG8gdGhlIGdvZHMgYW5kIHVuZmFpdGhmdWxuZXNzIHRvIG1lbi4gQXMgZm9yIHVzLCBDbGVhcmNodXMsIHdlIGFyZSBub3Qgc28gdW5yZWFzb25pbmcgb3IgZm9vbGlzaC4KPC90cmFuc2xhdGlvbj4="
translation['2.5.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IHdoeSwgb25lIG1pZ2h0IGFzaywgd2hlbiBpdCB3YXMgcG9zc2libGUgZm9yIHVzIHRvIGRlc3Ryb3kgeW91LCBkaWQgd2Ugbm90IHByb2NlZWQgdG8gZG8gc28/IFRoZSByZWFzb24gZm9yIHRoaXMsIGJlIHdlbGwgYXNzdXJlZCwgd2FzIG15IGVhZ2VyIGRlc2lyZSB0byBwcm92ZSBteXNlbGYgdHJ1c3R3b3J0aHkgdG8gdGhlIEdyZWVrcywgc28gdGhhdCB3aXRoIHRoZSBzYW1lIG1lcmNlbmFyeSBmb3JjZSB3aGljaCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGxlZCB1cCBmcm9tIHRoZSBjb2FzdCBpbiB0aGUgZmFpdGggb2Ygd2FnZXMgcGFpZCwgSSBtaWdodCBnbyBiYWNrIHRvIHRoZSBjb2FzdCBpbiB0aGUgc2VjdXJpdHkgb2YgYmVuZWZpdHMgY29uZmVycmVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.5.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYXMgZm9yIGFsbCB0aGUgd2F5cyBpbiB3aGljaCB5b3UgYXJlIG9mIHVzZSB0byBtZSwgeW91IGFsc28gaGF2ZSBtZW50aW9uZWQgc29tZSBvZiB0aGVtLCBidXQgaXQgaXMgSSB3aG8ga25vdyB0aGUgbW9zdCBpbXBvcnRhbnQ6IHRoZSBLaW5nIGFsb25lIG1heSB3ZWFyIHVwcmlnaHQgdGhlIHRpYXJhIHRoYXQgaXMgdXBvbiB0aGUgaGVhZCwgYnV0IGFub3RoZXIsIHRvbywgd2l0aCB5b3VyIGhlbHAsIG1pZ2h0IGVhc2lseSBzbyB3ZWFyIHRoZSBvbmUgdGhhdCBpcyB1cG9uIHRoZSBoZWFydC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGZpcnN0IGNsYXVzZSBzdGF0ZXMgYSBmYWN0IG9mIFBlcnNpYW4gY291cnQgZXRpcXVldHRlOyB0aGUgc2Vjb25kIGlzIGFwcGFyZW50bHkgaW50ZW5kZWQgdG8gZ2l2ZSBDbGVhcmNodXMgdGhlIGltcHJlc3Npb24gdGhhdCBUaXNzYXBoZXJuZXMgYXNwaXJlcyB0byB0aGUgUGVyc2lhbiB0aHJvbmUsIGFuZCBmb3IgdGhhdCByZWFzb24gcmVhbGx5IGRlc2lyZXMgdGhlIGZyaWVuZHNoaXAgYW5kIGhlbHAgb2YgdGhlIEdyZWVrcy48L25vdGU+4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.5.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gdGhlc2UgdGhpbmdzIHRoYXQgaGUgc2FpZCBUaXNzYXBoZXJuZXMgc2VlbWVkIHRvIENsZWFyY2h1cyB0byBiZSBzcGVha2luZyB0aGUgdHJ1dGg7IGFuZCBDbGVhcmNodXMgc2FpZDog4oCcVGhlbiBkbyBub3QgdGhvc2Ugd2hvIGFyZSBlbmRlYXZvdXJpbmcgYnkgZmFsc2UgY2hhcmdlcyB0byBtYWtlIHVzIGVuZW1pZXMsIHdoZW4gd2UgaGF2ZSBzdWNoIGdyb3VuZHMgZm9yIGZyaWVuZHNoaXAsIGRlc2VydmUgdG8gc3VmZmVyIHRoZSB1dHRlcm1vc3QgcGVuYWx0eT/igJ0KPC90cmFuc2xhdGlvbj4="
translation['2.5.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz7igJxZZXMs4oCdIHNhaWQgVGlzc2FwaGVybmVzLCDigJxhbmQgZm9yIG15IHBhcnQsIGlmIHlvdSBnZW5lcmFscyBhbmQgY2FwdGFpbnMgY2FyZSB0byBjb21lIHRvIG1lLCBJIHdpbGwgZ2l2ZSB5b3UsIHB1YmxpY2x5LCB0aGUgbmFtZXMgb2YgdGhvc2Ugd2hvIHRlbGwgbWUgdGhhdCB5b3UgYXJlIHBsb3R0aW5nIGFnYWluc3QgbWUgYW5kIHRoZSBhcm15IHVuZGVyIG15IGNvbW1hbmQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.5.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz7igJxBbmQgSSzigJ0gc2FpZCBDbGVhcmNodXMsIOKAnHdpbGwgYnJpbmcgdGhlbSBhbGwsIGFuZCBpbiBteSB0dXJuIHdpbGwgbWFrZSBrbm93biB0byB5b3Ugd2hlbmNlIGNvbWUgdGhlIHJlcG9ydHMgdGhhdCBJIGhlYXIgYWJvdXQgeW91LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['2.5.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyBjb252ZXJzYXRpb24gVGlzc2FwaGVybmVzIHNob3dlZCBhbGwga2luZG5lc3MsIGludml0aW5nIENsZWFyY2h1cyBhdCB0aGF0IHRpbWUgdG8gc3RheSB3aXRoIGhpbSBhbmQgbWFraW5nIGhpbSBoaXMgZ3Vlc3QgYXQgZGlubmVyLiBPbiB0aGUgZm9sbG93aW5nIGRheSwgd2hlbiBDbGVhcmNodXMgcmV0dXJuZWQgdG8gdGhlIEdyZWVrIGNhbXAsIGhlIG5vdCBvbmx5IG1hZGUgaXQgY2xlYXIgdGhhdCBoZSBpbWFnaW5lZCBoZSB3YXMgb24gdmVyeSBmcmllbmRseSB0ZXJtcyB3aXRoIFRpc3NhcGhlcm5lcyBhbmQgcmVwb3J0ZWQgdGhlIHdvcmRzIHdoaWNoIGhlIGhhZCB1c2VkLCBidXQgaGUgc2FpZCB0aGF0IHRob3NlIHdob20gVGlzc2FwaGVybmVzIGhhZCBpbnZpdGVkIG11c3QgZ28gdG8gaGltLCBhbmQgdGhhdCB3aG9ldmVyIGFtb25nIHRoZSBHcmVla3Mgc2hvdWxkIGJlIGNvbnZpY3RlZCBvZiBtYWtpbmcgZmFsc2UgY2hhcmdlcyBvdWdodCB0byBiZSBwdW5pc2hlZCwgYXMgdHJhaXRvcnMgYW5kIGZvZXMgdG8gdGhlIEdyZWVrcy4KPC90cmFuc2xhdGlvbj4="
translation['2.5.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgQ2xlYXJjaHVzIHN1c3BlY3RlZCB0aGF0IHRoZSBhdXRob3Igb2YgdGhlc2Ugc2xhbmRlcnMgd2FzIE1lbm9uLCBmb3IgaGUgd2FzIGF3YXJlIHRoYXQgTWVub24gaGFkIG5vdCBvbmx5IGhhZCBtZWV0aW5ncyB3aXRoIFRpc3NhcGhlcm5lcywgaW4gY29tcGFueSB3aXRoIEFyaWFldXMsIGJ1dCB3YXMgYWxzbyBvcmdhbml6aW5nIG9wcG9zaXRpb24gdG8gaGlzIG93biBsZWFkZXJzaGlwIGFuZCBwbG90dGluZyBhZ2FpbnN0IGhpbSwgd2l0aCB0aGUgaW50ZW50aW9uIG9mIHdpbm5pbmcgb3ZlciB0byBoaW1zZWxmIHRoZSBlbnRpcmUgYXJteSBhbmQgdGhlcmVieSBzZWN1cmluZyB0aGUgZnJpZW5kc2hpcCBvZiBUaXNzYXBoZXJuZXMuCjwvdHJhbnNsYXRpb24+"
translation['2.5.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5DbGVhcmNodXMgZGVzaXJlZCwgaG93ZXZlciwgdG8gaGF2ZSB0aGUgZW50aXJlIGFybXkgZGV2b3RlZCB0byBoaW0gYW5kIHRvIHB1dCB0aGUgcmVmcmFjdG9yeSBvdXQgb2YgdGhlIHdheS4gQXMgZm9yIHRoZSBzb2xkaWVycywgc29tZSBvZiB0aGVtIG1hZGUgb2JqZWN0aW9ucyB0byBDbGVhcmNodXMnIHByb3Bvc2FsLCB1cmdpbmcgdGhhdCB0aGUgY2FwdGFpbnMgYW5kIGdlbmVyYWxzIHNob3VsZCBub3QgYWxsIGdvIGFuZCB0aGF0IHRoZXkgc2hvdWxkIG5vdCB0cnVzdCBUaXNzYXBoZXJuZXMuCjwvdHJhbnNsYXRpb24+"
translation['2.5.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgQ2xlYXJjaHVzIHZlaGVtZW50bHkgaW5zaXN0ZWQsIHVudGlsIGhlIHNlY3VyZWQgYW4gYWdyZWVtZW50IHRoYXQgZml2ZSBnZW5lcmFscyBzaG91bGQgZ28gYW5kIHR3ZW50eSBjYXB0YWluczsgYW5kIGFib3V0IHR3byBodW5kcmVkIG9mIHRoZSBzb2xkaWVycyBhbHNvIGZvbGxvd2VkIGFsb25nLCB3aXRoIHRoZSBpbnRlbnRpb24gb2YgZ29pbmcgdG8gbWFya2V0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.5.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGV5IHJlYWNoZWQgVGlzc2FwaGVybmVzJyBkb29ycywgdGhlIGdlbmVyYWxzIHdlcmUgaW52aXRlZCBpbuKAlFByb3hlbnVzIHRoZSBCb2VvdGlhbiwgTWVub24gdGhlIFRoZXNzYWxpYW4sIEFnaWFzIHRoZSBBcmNhZGlhbiwgQ2xlYXJjaHVzIHRoZSBMYWNvbmlhbiwgYW5kIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiB0aGUgQWNoYWVhbuKAlHdoaWxlIHRoZSBjYXB0YWlucyB3YWl0ZWQgYXQgdGhlIGRvb3JzLgo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['2.5.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3QgbG9uZyBhZnRlcndhcmQsIGF0IHRoZSBzYW1lIHNpZ25hbCwgdGhvc2Ugd2l0aGluIHdlcmUgc2VpemVkIGFuZCB0aG9zZSBvdXRzaWRlIHdlcmUgY3V0IGRvd24uIEFmdGVyIHRoaXMgc29tZSBvZiB0aGUgYmFyYmFyaWFuIGhvcnNlbWVuIHJvZGUgYWJvdXQgb3ZlciB0aGUgcGxhaW4gYW5kIGtpbGxlZCBldmVyeSBHcmVlayB0aGV5IG1ldCwgd2hldGhlciBzbGF2ZSBvciBmcmVlbWFuLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.5.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIEdyZWVrcyB3b25kZXJlZCBhdCB0aGlzIHJpZGluZyBhYm91dCwgYXMgdGhleSBzYXcgaXQgZnJvbSB0aGVpciBjYW1wLCBhbmQgd2VyZSBwdXp6bGVkIHRvIGtub3cgd2hhdCB0aGUgaG9yc2VtZW4gd2VyZSBkb2luZywgdW50aWwgTmljYXJjaHVzIHRoZSBBcmNhZGlhbiByZWFjaGVkIHRoZSBjYW1wIGluIGZsaWdodCwgd291bmRlZCBpbiBoaXMgYmVsbHkgYW5kIGhvbGRpbmcgaGlzIGJvd2VscyBpbiBoaXMgaGFuZHMsIGFuZCB0b2xkIGFsbCB0aGF0IGhhZCBoYXBwZW5lZC4KPC90cmFuc2xhdGlvbj4="
translation['2.5.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gdGhlIEdyZWVrcywgb25lIGFuZCBhbGwsIHJhbiB0byB0aGVpciBhcm1zLCBwYW5pYy1zdHJpY2tlbiBhbmQgYmVsaWV2aW5nIHRoYXQgdGhlIGVuZW15IHdvdWxkIGNvbWUgYXQgb25jZSBhZ2FpbnN0IHRoZSBjYW1wLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.5.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm90IGFsbCBvZiB0aGVtIGNhbWUsIGhvd2V2ZXIsIGJ1dCBBcmlhZXVzLCBBcnRhb3p1cywgYW5kIE1pdGhyYWRhdGVzLCB3aG8gaGFkIGJlZW4gbW9zdCBmYWl0aGZ1bCBmcmllbmRzIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIGRpZCBjb21lOyBhbmQgdGhlIGludGVycHJldGVyIG9mIHRoZSBHcmVla3Mgc2FpZCB0aGF0IHdpdGggdGhlbSBoZSBhbHNvIHNhdyBhbmQgcmVjb2duaXplZCBUaXNzYXBoZXJuZXMnIGJyb3RoZXI7IGZ1cnRoZXJtb3JlLCB0aGV5IHdlcmUgZm9sbG93ZWQgYnkgb3RoZXIgUGVyc2lhbnMsIGFybWVkIHdpdGggYnJlYXN0cGxhdGVzLCB0byB0aGUgbnVtYmVyIG9mIHRocmVlIGh1bmRyZWQuCjwvdHJhbnNsYXRpb24+"
translation['2.5.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIHRoaXMgcGFydHkgaGFkIGNvbWUgbmVhciwgdGhleSBkaXJlY3RlZCB3aGF0ZXZlciBHcmVlayBnZW5lcmFsIG9yIGNhcHRhaW4gdGhlcmUgbWlnaHQgYmUgdG8gY29tZSBmb3J3YXJkLCBpbiBvcmRlciB0aGF0IHRoZXkgbWlnaHQgZGVsaXZlciBhIG1lc3NhZ2UgZnJvbSB0aGUgS2luZy4KPC90cmFuc2xhdGlvbj4="
translation['2.5.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIHR3byBnZW5lcmFscyB3ZW50IGZvcnRoIGZyb20gdGhlIEdyZWVrIGxpbmVzIHVuZGVyIGd1YXJkLCBDbGVhbm9yIHRoZSBPcmNob21lbmlhbiBhbmQgU29waGFlbmV0dXMgdGhlIFN0eW1waGFsaWFuLCBhbmQgd2l0aCB0aGVtIFhlbm9waG9uIHRoZSBBdGhlbmlhbiwgd2hvIHdpc2hlZCB0byBsZWFybiB0aGUgZmF0ZSBvZiBQcm94ZW51czsgQ2hlaXJpc29waHVzLCBob3dldmVyLCBjaGFuY2VkIHRvIGJlIGF3YXkgaW4gYSB2aWxsYWdlIGluIGNvbXBhbnkgd2l0aCBvdGhlcnMgd2hvIHdlcmUgZ2V0dGluZyBwcm92aXNpb25zLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.5.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGUgR3JlZWtzIGdvdCB3aXRoaW4gaGVhcmluZyBkaXN0YW5jZSwgQXJpYWV1cyBzYWlkOiDigJxDbGVhcmNodXMsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIGluYXNtdWNoIGFzIGhlIHdhcyBzaG93biB0byBiZSBwZXJqdXJpbmcgaGltc2VsZiBhbmQgdmlvbGF0aW5nIHRoZSB0cnVjZSwgaGFzIHJlY2VpdmVkIGhpcyBkZXNlcnRzIGFuZCBpcyBkZWFkLCBidXQgUHJveGVudXMgYW5kIE1lbm9uLCBiZWNhdXNlIHRoZXkgZ2F2ZSBpbmZvcm1hdGlvbiBhYm91dCBoaXMgcGxvdHRpbmcsIGFyZSBoZWxkIGluIGhpZ2ggaG9ub3VyLiBGb3IgeW91cnNlbHZlcywgdGhlIEtpbmcgZGVtYW5kcyB5b3VyIGFybXM7IGZvciBoZSBzYXlzIHRoYXQgdGhleSBiZWxvbmcgdG8gaGltLCBzaW5jZSB0aGV5IGJlbG9uZ2VkIHRvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIGhpcyBzbGF2ZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['2.5.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz5UbyB0aGlzIHRoZSBHcmVla3MgcmVwbGllZCBhcyBmb2xsb3dzLCBDbGVhbm9yIHRoZSBPcmNob21lbmlhbiBhY3RpbmcgYXMgc3Bva2VzbWFuOiDigJxBcmlhZXVzLCB5b3UgYmFzZXN0IG9mIG1lbiwgYW5kIGFsbCB5b3Ugb3RoZXJzIHdobyB3ZXJlIGZyaWVuZHMgb2YgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiwgYXJlIHlvdSBub3QgYXNoYW1lZCwgZWl0aGVyIGJlZm9yZSBnb2RzIG9yIG1lbiwgdGhhdCwgYWZ0ZXIgZ2l2aW5nIHVzIHlvdXIgb2F0aHMgdG8gY291bnQgdGhlIHNhbWUgcGVvcGxlIGZyaWVuZHMgYW5kIGZvZXMgYXMgd2UgZGlkLCB5b3UgaGF2ZSBiZXRyYXllZCB1cywgam9pbmluZyBoYW5kcyB3aXRoIFRpc3NhcGhlcm5lcywgdGhhdCBtb3N0IGdvZGxlc3MgYW5kIHZpbGxhaW5vdXMgbWFuLCBhbmQgdGhhdCB5b3UgaGF2ZSBub3Qgb25seSBkZXN0cm95ZWQgdGhlIHZlcnkgbWVuIHRvIHdob20geW91IHdlcmUgdGhlbiBtYWtpbmcgb2F0aCwgYnV0IGhhdmUgYmV0cmF5ZWQgdGhlIHJlc3Qgb2YgdXMgYW5kIGFyZSBjb21lIHdpdGggb3VyIGVuZW1pZXMgYWdhaW5zdCB1cz/igJ0KPC90cmFuc2xhdGlvbj4="
translation['2.5.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgQXJpYWV1cyBzYWlkOiDigJxCdXQgaXQgd2FzIHNob3duIHRoYXQgbG9uZyBhZ28gQ2xlYXJjaHVzIHdhcyBwbG90dGluZyBhZ2FpbnN0IFRpc3NhcGhlcm5lcyBhbmQgT3JvbnRhcyBhbmQgYWxsIG9mIHVzIHdobyBhcmUgd2l0aCB0aGVtLuKAnSBVcG9uIHRoaXMgWGVub3Bob24gc3Bva2UgYXMgZm9sbG93czoKPC90cmFuc2xhdGlvbj4="
translation['2.5.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz7igJxXZWxsLCB0aGVuLCBpZiBDbGVhcmNodXMgd2FzIHJlYWxseSB0cmFuc2dyZXNzaW5nIHRoZSB0cnVjZSBpbiB2aW9sYXRpb24gb2YgaGlzIG9hdGhzLCBoZSBoYXMgaGlzIGRlc2VydHMsIGZvciBpdCBpcyByaWdodCB0aGF0IHBlcmp1cmVycyBzaG91bGQgcGVyaXNoOyBidXQgYXMgZm9yIFByb3hlbnVzIGFuZCBNZW5vbiwgc2luY2UgdGhleSBhcmUgeW91ciBiZW5lZmFjdG9ycyBhbmQgb3VyIGdlbmVyYWxzLCBzZW5kIHRoZW0gaGl0aGVyLCBmb3IgaXQgaXMgY2xlYXIgdGhhdCwgYmVpbmcgZnJpZW5kcyBvZiBib3RoIHBhcnRpZXMsIHRoZXkgd2lsbCBlbmRlYXZvdXIgdG8gZ2l2ZSBib3RoIHlvdSBhbmQgb3Vyc2VsdmVzIHRoZSBiZXN0IGFkdmljZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['2.5.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5UbyB0aGlzIHRoZSBiYXJiYXJpYW5zIG1hZGUgbm8gYW5zd2VyLCBidXQsIGFmdGVyIHRhbGtpbmcgZm9yIGEgbG9uZyB0aW1lIHdpdGggb25lIGFub3RoZXIsIHRoZXkgZGVwYXJ0ZWQuCjwvdHJhbnNsYXRpb24+"
translation['2.6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZ2VuZXJhbHMsIHRoZW4sIGFmdGVyIGJlaW5nIHRodXMgc2VpemVkLCB3ZXJlIHRha2VuIHRvIHRoZSBLaW5nIGFuZCBwdXQgdG8gZGVhdGggYnkgYmVpbmcgYmVoZWFkZWQuIE9uZSBvZiB0aGVtLCBDbGVhcmNodXMsIGJ5IGNvbW1vbiBjb25zZW50IG9mIGFsbCB3aG8gd2VyZSBwZXJzb25hbGx5IGFjcXVhaW50ZWQgd2l0aCBoaW0sIHNlZW1lZCB0byBoYXZlIHNob3duIGhpbXNlbGYgYSBtYW4gd2hvIHdhcyBib3RoIGZpdHRlZCBmb3Igd2FyIGFuZCBmb25kIG9mIHdhciB0byB0aGUgbGFzdCBkZWdyZWUuCiAgICA8L3RyYW5zbGF0aW9uPg=="
translation['2.6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZvciwgaW4gdGhlIGZpcnN0IHBsYWNlLCBhcyBsb25nIGFzIHRoZSBMYWNlZGFlbW9uaWFucyB3ZXJlIGF0IHdhciB3aXRoIHRoZSBBdGhlbmlhbnMsIGhlIGJvcmUgaGlzIHBhcnQgd2l0aCB0aGVtOyB0aGVuLCBhcyBzb29uIGFzIHBlYWNlIGhhZCBjb21lLCBoZSBwZXJzdWFkZWQgaGlzIHN0YXRlIHRoYXQgdGhlIFRocmFjaWFucyB3ZXJlIGluanVyaW5nIHRoZSBHcmVlayw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiB0aGUgR3JlZWsgY29sb25pc3RzIGluIHRoZSBUaHJhY2lhbiBDaGVyc29uZXNlLjwvbm90ZT4gYW5kLCBhZnRlciBnYWluaW5nIGhpcyBwb2ludCBhcyBiZXN0IGhlIGNvdWxkIGZyb20gdGhlIGVwaG9ycyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGVwaG9ycywgZml2ZSBpbiBudW1iZXIsIHdlcmUgdGhlIHJ1bGluZyBvZmZpY2lhbHMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+Ljwvbm90ZT4gc2V0IHNhaWwgd2l0aCB0aGUgaW50ZW50aW9uIG9mIG1ha2luZyB3YXIgdXBvbiB0aGUgVGhyYWNpYW5zIHdobyBkd2VsdCBiZXlvbmQgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPi48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAxMjc4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDEyNzg5Ij5DaGVyc29uZXNlPC9wbGFjZU5hbWU+IGFuZCBQZXJpbnRodXMuCjwvdHJhbnNsYXRpb24+"
translation['2.6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoZW4sIGhvd2V2ZXIsIHRoZSBlcGhvcnMgY2hhbmdlZCB0aGVpciBtaW5kcyBmb3Igc29tZSByZWFzb24gb3Igb3RoZXIgYW5kLCBhZnRlciBoZSBoYWQgYWxyZWFkeSBnb25lLCB0cmllZCB0byB0dXJuIGhpbSBiYWNrIGZyb20gdGhlIElzdGhtdXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb3JpbnRoIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDb3JpbnRoIj5Db3JpbnRoPC9wbGFjZU5hbWU+LCBhdCB0aGF0IHBvaW50IGhlIGRlY2xpbmVkIHRvIHJlbmRlciBmdXJ0aGVyIG9iZWRpZW5jZSwgYnV0IHdlbnQgc2FpbGluZyBvZmYgdG8gdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjM4IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2MzgiPkhlbGxlc3BvbnQ8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['2.6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFzIGEgcmVzdWx0IGhlIHdhcyBjb25kZW1uZWQgdG8gZGVhdGggYnkgdGhlIGF1dGhvcml0aWVzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiBvbiB0aGUgZ3JvdW5kIG9mIGRpc29iZWRpZW5jZSB0byBvcmRlcnMuIEJlaW5nIG5vdyBhbiBleGlsZSBoZSBjYW1lIHRvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIGFuZCB0aGUgYXJndW1lbnRzIHdoZXJlYnkgaGUgcGVyc3VhZGVkIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gYXMgcmVjb3JkZWQgZWxzZXdoZXJlOzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5CdXQgbm90IGluIHRoZSA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmFiYXNpczwvdGl0bGU+IG9yIGluIGFueSBvZiBYZW5vcGhvbidzIG90aGVyIHdvcmtzLiBQZXJoYXBzIHRoZSBhdXRob3Igd2FzIHdyaXRpbmcgdW5kZXIgdGhlIGltcHJlc3Npb24gdGhhdCBoZSBoYWQgc3RhdGVkIHRoZXNlIGFyZ3VtZW50cyBpbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMS45IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMS45PC9iaWJsPi48L25vdGU+IGF0IGFueSByYXRlLCA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmFiYXNpczwvdGl0bGU+IG9yIGluIGFueSBvZiBYZW5vcGhvbidzIG90aGVyIHdvcmtzLiBQZXJoYXBzIHRoZSBhdXRob3Igd2FzIHdyaXRpbmcgdW5kZXIgdGhlIGltcHJlc3Npb24gdGhhdCBoZSBoYWQgc3RhdGVkIHRoZXNlIGFyZ3VtZW50cyBpbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMS45IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMS45PC9iaWJsPi48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGdhdmUgaGltIHRlbiB0aG91c2FuZCBkYXJpY3MsCjwvdHJhbnNsYXRpb24+"
translation['2.6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPmFuZCBoZSwgdXBvbiByZWNlaXZpbmcgdGhpcyBtb25leSwgZGlkIG5vdCB0dXJuIGhpcyB0aG91Z2h0cyB0byBjb21mb3J0YWJsZSBpZGxlbmVzcywgYnV0IHVzZWQgaXQgdG8gY29sbGVjdCBhbiBhcm15IGFuZCBwcm9jZWVkZWQgdG8gbWFrZSB3YXIgdXBvbiB0aGUgVGhyYWNpYW5zLiBIZSBkZWZlYXRlZCB0aGVtIGluIGJhdHRsZSBhbmQgZnJvbSB0aGF0IHRpbWUgb24gcGx1bmRlcmVkIHRoZW0gaW4gZXZlcnkgd2F5LCBhbmQgaGUga2VwdCB1cCB0aGUgd2FyIHVudGlsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gd2FudGVkIGhpcyBhcm15OyB0aGVuIGhlIHJldHVybmVkLCBzdGlsbCBmb3IgdGhlIHB1cnBvc2Ugb2YgbWFraW5nIHdhciwgdGhpcyB0aW1lIGluIGNvbXBhbnkgd2l0aCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgc3VjaCBjb25kdWN0IGFzIHRoaXMsIGluIG15IG9waW5pb24sIHJldmVhbHMgYSBtYW4gZm9uZCBvZiB3YXIuIFdoZW4gaGUgbWF5IGVuam95IHBlYWNlIHdpdGhvdXQgZGlzaG9ub3VyIG9yIGhhcm0sIGhlIGNob29zZXMgd2FyOyB3aGVuIGhlIG1heSBsaXZlIGluIGlkbGVuZXNzLCBoZSBwcmVmZXJzIHRvaWwsIHByb3ZpZGVkIGl0IGJlIHRoZSB0b2lsIG9mIHdhcjsgd2hlbiBoZSBtYXkga2VlcCBoaXMgbW9uZXkgd2l0aG91dCByaXNrLCBoZSBlbGVjdHMgdG8gZGltaW5pc2ggaXQgYnkgY2Fycnlpbmcgb24gd2FyLiBBcyBmb3IgQ2xlYXJjaHVzLCBqdXN0IGFzIG9uZSBzcGVuZHMgdXBvbiBhIGxvdmVkIG9uZSBvciB1cG9uIGFueSBvdGhlciBwbGVhc3VyZSwgc28gaGUgd2FudGVkIHRvIHNwZW5kIHVwb24gd2Fy4oCUCjwvdHJhbnNsYXRpb24+"
translation['2.6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPnN1Y2ggYSBsb3ZlciBoZSB3YXMgb2Ygd2FyLiBPbiB0aGUgb3RoZXIgaGFuZCwgaGUgc2VlbWVkIHRvIGJlIGZpdHRlZCBmb3Igd2FyIGluIHRoYXQgaGUgd2FzIGZvbmQgb2YgZGFuZ2VyLCByZWFkeSBieSBkYXkgb3IgbmlnaHQgdG8gbGVhZCBoaXMgdHJvb3BzIGFnYWluc3QgdGhlIGVuZW15LCBhbmQgc2VsZi1wb3NzZXNzZWQgYW1pZCB0ZXJyb3JzLCBhcyBhbGwgd2hvIHdlcmUgd2l0aCBoaW0gb24gYWxsIG9jY2FzaW9ucyBhZ3JlZWQuCjwvdHJhbnNsYXRpb24+"
translation['2.6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkhlIHdhcyBsaWtld2lzZSBzYWlkIHRvIGJlIGZpdHRlZCBmb3IgY29tbWFuZCwgc28gZmFyIGFzIHRoYXQgd2FzIHBvc3NpYmxlIGZvciBhIG1hbiBvZiBzdWNoIGEgZGlzcG9zaXRpb24gYXMgaGlzIHdhcy4gRm9yIGV4YW1wbGUsIGhlIHdhcyBjb21wZXRlbnQsIGlmIGV2ZXIgYSBtYW4gd2FzLCBpbiBkZXZpc2luZyB3YXlzIGJ5IHdoaWNoIGhpcyBhcm15IG1pZ2h0IGdldCBwcm92aXNpb25zIGFuZCBpbiBwcm9jdXJpbmcgdGhlbSwgYW5kIGhlIHdhcyBjb21wZXRlbnQgYWxzbyB0byBpbXByZXNzIGl0IHVwb24gdGhvc2Ugd2hvIHdlcmUgd2l0aCBoaW0gdGhhdCBDbGVhcmNodXMgbXVzdCBiZSBvYmV5ZWQuCjwvdHJhbnNsYXRpb24+"
translation['2.6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoaXMgcmVzdWx0IGhlIGFjY29tcGxpc2hlZCBieSBiZWluZyBzZXZlcmU7IGZvciBoZSB3YXMgZ2xvb215IGluIGFwcGVhcmFuY2UgYW5kIGhhcnNoIGluIHZvaWNlLCBhbmQgaGUgdXNlZCB0byBwdW5pc2ggc2V2ZXJlbHksIHNvbWV0aW1lcyBpbiBhbmdlciwgc28gdGhhdCBvbiBvY2Nhc2lvbiBoZSB3b3VsZCBiZSBzb3JyeSBhZnRlcndhcmRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5ZZXQgaGUgYWxzbyBwdW5pc2hlZCBvbiBwcmluY2lwbGUsIGZvciBoZSBiZWxpZXZlZCB0aGVyZSB3YXMgbm8gZ29vZCBpbiBhbiBhcm15IHRoYXQgd2VudCB3aXRob3V0IHB1bmlzaG1lbnQ7IGluIGZhY3QsIGhlIHVzZWQgdG8gc2F5LCBpdCB3YXMgcmVwb3J0ZWQsIHRoYXQgYSBzb2xkaWVyIG11c3QgZmVhciBoaXMgY29tbWFuZGVyIG1vcmUgdGhhbiB0aGUgZW5lbXkgaWYgaGUgd2VyZSB0byBwZXJmb3JtIGd1YXJkIGR1dHkgb3Iga2VlcCBoaXMgaGFuZHMgZnJvbSBmcmllbmRzIG9yIHdpdGhvdXQgbWFraW5nIGV4Y3VzZXMgYWR2YW5jZSBhZ2FpbnN0IHRoZSBlbmVteS4KPC90cmFuc2xhdGlvbj4="
translation['2.6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGUgbWlkc3Qgb2YgZGFuZ2VycywgdGhlcmVmb3JlLCB0aGUgdHJvb3BzIHdlcmUgcmVhZHkgdG8gb2JleSBoaW0gaW1wbGljaXRseSBhbmQgd291bGQgY2hvb3NlIG5vIG90aGVyIHRvIGNvbW1hbmQgdGhlbTsgZm9yIHRoZXkgc2FpZCB0aGF0IGF0IHN1Y2ggdGltZXMgaGlzIGdsb29taW5lc3MgYXBwZWFyZWQgdG8gYmUgYnJpZ2h0bmVzcywgYW5kIGhpcyBzZXZlcml0eSBzZWVtZWQgdG8gYmUgcmVzb2x1dGlvbiBhZ2FpbnN0IHRoZSBlbmVteSwgc28gdGhhdCBpdCBhcHBlYXJlZCB0byBiZXRva2VuIHNhZmV0eSBhbmQgdG8gYmUgbm8gbG9uZ2VyIHNldmVyaXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.6.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGV5IGhhZCBnb3QgcGFzdCB0aGUgZGFuZ2VyIGFuZCBjb3VsZCBnbyBvZmYgdG8gc2VydmUgdW5kZXIgYW5vdGhlciBjb21tYW5kZXIsIG1hbnkgd291bGQgZGVzZXJ0IGhpbTsgZm9yIHRoZXJlIHdhcyBubyBhdHRyYWN0aXZlbmVzcyBhYm91dCBoaW0sIGJ1dCBoZSB3YXMgYWx3YXlzIHNldmVyZSBhbmQgcm91Z2gsIHNvIHRoYXQgdGhlIHNvbGRpZXJzIGhhZCB0aGUgc2FtZSBmZWVsaW5nIHRvd2FyZCBoaW0gdGhhdCBib3lzIGhhdmUgdG93YXJkIGEgc2Nob29sbWFzdGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.6.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhpcyByZWFzb24sIGFsc28sIGhlIG5ldmVyIGhhZCBtZW4gZm9sbG93aW5nIGhpbSBvdXQgb2YgZnJpZW5kc2hpcCBhbmQgZ29vZC13aWxsLCBidXQgc3VjaCBhcyB3ZXJlIHVuZGVyIGhpbSBiZWNhdXNlIHRoZXkgaGFkIGJlZW4gcHV0IGluIGhpcyBoYW5kcyBieSBhIGdvdmVybm1lbnQgb3IgYnkgdGhlaXIgb3duIG5lZWQgb3Igd2VyZSB1bmRlciB0aGUgY29tcHVsc2lvbiBvZiBhbnkgb3RoZXIgbmVjZXNzaXR5LCB5aWVsZGVkIGhpbSBpbXBsaWNpdCBvYmVkaWVuY2UuCjwvdHJhbnNsYXRpb24+"
translation['2.6.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYXMgc29vbiBhcyB0aGV5IGJlZ2FuIGluIGhpcyBzZXJ2aWNlIHRvIG92ZXJjb21lIHRoZSBlbmVteSwgZnJvbSB0aGF0IG1vbWVudCB0aGVyZSB3ZXJlIHdlaWdodHkgcmVhc29ucyB3aGljaCBtYWRlIGhpcyBzb2xkaWVycyBlZmZpY2llbnQ7IGZvciB0aGV5IGhhZCB0aGUgZmVlbGluZyBvZiBjb25maWRlbmNlIGluIHRoZSBmYWNlIG9mIHRoZSBlbmVteSwgYW5kIHRoZWlyIGZlYXIgb2YgcHVuaXNobWVudCBhdCBoaXMgaGFuZHMga2VwdCB0aGVtIGluIGEgZmluZSBzdGF0ZSBvZiBkaXNjaXBsaW5lLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.6.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5TdWNoIGhlIHdhcyBhcyBhIGNvbW1hbmRlciwgYnV0IGJlaW5nIGNvbW1hbmRlZCBieSBvdGhlcnMgd2FzIG5vdCBlc3BlY2lhbGx5IHRvIGhpcyBsaWtpbmcsIHNvIHBlb3BsZSBzYWlkLiBIZSB3YXMgYWJvdXQgZmlmdHkgeWVhcnMgb2xkIGF0IHRoZSB0aW1lIG9mIGhpcyBkZWF0aC4KPC90cmFuc2xhdGlvbj4="
translation['2.6.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+UHJveGVudXMgdGhlIEJvZW90aWFuIGNoZXJpc2hlZCBmcm9tIGhpcyBlYXJsaWVzdCB5b3V0aCBhbiBlYWdlciBkZXNpcmUgdG8gYmVjb21lIGEgbWFuIGNhcGFibGUgb2YgZGVhbGluZyB3aXRoIGdyZWF0IGFmZmFpcnMsIGFuZCBiZWNhdXNlIG9mIHRoaXMgZGVzaXJlIGhlIHBhaWQgbW9uZXkgdG8gR29yZ2lhcyBvZiBMZW9udGluaS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QSBjZWxlYnJhdGVkIHJoZXRvcmljaWFuIGFuZCBvcmF0b3IsIHdob3NlIGVub3Jtb3VzIGZlZSBvZiAxMDAgbWluYWUgKCAzNzUgb3IgJDEsODAwKSB3YXMgYWxtb3N0IGFzIGZhbW91cyBhcyBoaW1zZWxmLjwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['2.6.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciBoYXZpbmcgc3R1ZGllZCB1bmRlciBoaW0gYW5kIHJlYWNoaW5nIHRoZSBjb25jbHVzaW9uIHRoYXQgaGUgaGFkIG5vdyBiZWNvbWUgY29tcGV0ZW50IHRvIHJ1bGUgYW5kLCB0aHJvdWdoIGZyaWVuZHNoaXAgd2l0aCB0aGUgZm9yZW1vc3QgbWVuIG9mIGhpcyBkYXksIHRvIGhvbGQgaGlzIG93biBpbiBjb25mZXJyaW5nIGJlbmVmaXRzLCBoZSBlbWJhcmtlZCB1cG9uIHRoaXMgZW50ZXJwcmlzZSB3aXRoIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIGV4cGVjdGluZyB0byBnYWluIHRoZXJlZnJvbSBhIGZhbW91cyBuYW1lLCBncmVhdCBwb3dlciwgYW5kIGFidW5kYW50IHdlYWx0aDsKPC90cmFuc2xhdGlvbj4="
translation['2.6.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5idXQgd2hpbGUgdmVoZW1lbnRseSBkZXNpcmluZyB0aGVzZSBncmVhdCBlbmRzLCBoZSBuZXZlcnRoZWxlc3MgbWFkZSBpdCBldmlkZW50IGFsc28gdGhhdCBoZSB3b3VsZCBub3QgY2FyZSB0byBnYWluIGFueSBvbmUgb2YgdGhlbSB1bmp1c3RseTsgcmF0aGVyLCBoZSB0aG91Z2h0IHRoYXQgaGUgbXVzdCBzZWN1cmUgdGhlbSBqdXN0bHkgYW5kIGhvbm91cmFibHksIG9yIG5vdCBhdCBhbGwuCjwvdHJhbnNsYXRpb24+"
translation['2.6.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBhIGxlYWRlciwgaGUgd2FzIHF1YWxpZmllZCB0byBjb21tYW5kIGdlbnRsZW1lbiwgYnV0IGhlIHdhcyBub3QgY2FwYWJsZSBvZiBpbnNwaXJpbmcgaGlzIHNvbGRpZXJzIHdpdGggZWl0aGVyIHJlc3BlY3QgZm9yIGhpbXNlbGYgb3IgZmVhcjsgb24gdGhlIGNvbnRyYXJ5LCBoZSByZWFsbHkgc3Rvb2QgaW4gZ3JlYXRlciBhd2Ugb2YgaGlzIG1lbiB0aGFuIHRoZXksIHdob20gaGUgY29tbWFuZGVkLCBkaWQgb2YgaGltLCBhbmQgaXQgd2FzIG1hbmlmZXN0IHRoYXQgaGUgd2FzIG1vcmUgYWZyYWlkIG9mIGluY3VycmluZyB0aGUgaGF0cmVkIG9mIGhpcyBzb2xkaWVycyB0aGFuIHRoZXkgd2VyZSBvZiBkaXNvYmV5aW5nIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['2.6.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5IaXMgaWRlYSB3YXMgdGhhdCwgZm9yIGEgbWFuIHRvIGJlIGFuZCB0byBiZSB0aG91Z2h0IGZpdCB0byBjb21tYW5kLCBpdCB3YXMgZW5vdWdoIHRoYXQgaGUgc2hvdWxkIHByYWlzZSB0aGUgb25lIHdobyBkaWQgcmlnaHQgYW5kIHdpdGhob2xkIHByYWlzZSBmcm9tIHRoZSBvbmUgd2hvIGRpZCB3cm9uZy4gQ29uc2VxdWVudGx5IGFsbCBhbW9uZyBoaXMgYXNzb2NpYXRlcyB3aG8gd2VyZSBnZW50bGVtZW4gd2VyZSBhdHRhY2hlZCB0byBoaW0sIGJ1dCB0aGUgdW5wcmluY2lwbGVkIHdvdWxkIHBsb3QgYWdhaW5zdCBoaW0gaW4gdGhlIHRob3VnaHQgdGhhdCBoZSB3YXMgZWFzeSB0byBkZWFsIHdpdGguIEF0IHRoZSB0aW1lIG9mIGhpcyBkZWF0aCBoZSB3YXMgYWJvdXQgdGhpcnR5IHllYXJzIG9sZC4KPC90cmFuc2xhdGlvbj4="
translation['2.6.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVub24gdGhlIFRoZXNzYWxpYW4gd2FzIG1hbmlmZXN0bHkgZWFnZXIgZm9yIGVub3Jtb3VzIHdlYWx0aOKAlGVhZ2VyIGZvciBjb21tYW5kIGluIG9yZGVyIHRvIGdldCBtb3JlIHdlYWx0aCBhbmQgZWFnZXIgZm9yIGhvbm91ciBpbiBvcmRlciB0byBpbmNyZWFzZSBoaXMgZ2FpbnM7IGFuZCBoZSBkZXNpcmVkIHRvIGJlIGEgZnJpZW5kIHRvIHRoZSBtZW4gd2hvIHBvc3Nlc3NlZCBncmVhdGVzdCBwb3dlciBpbiBvcmRlciB0aGF0IGhlIG1pZ2h0IGNvbW1pdCB1bmp1c3QgZGVlZHMgd2l0aG91dCBzdWZmZXJpbmcgdGhlIHBlbmFsdHkuCjwvdHJhbnNsYXRpb24+"
translation['2.6.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgZm9yIHRoZSBhY2NvbXBsaXNobWVudCBvZiB0aGUgb2JqZWN0cyB1cG9uIHdoaWNoIGhpcyBoZWFydCB3YXMgc2V0LCBoZSBpbWFnaW5lZCB0aGF0IHRoZSBzaG9ydGVzdCByb3V0ZSB3YXMgYnkgd2F5IG9mIHBlcmp1cnkgYW5kIGZhbHNlaG9vZCBhbmQgZGVjZXB0aW9uLCB3aGlsZSBoZSBjb3VudGVkIHN0cmFpZ2h0Zm9yd2FyZG5lc3MgYW5kIHRydXRoIHRoZSBzYW1lIHRoaW5nIGFzIGZvbGx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.6.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BZmZlY3Rpb24gaGUgY2xlYXJseSBmZWx0IGZvciBub2JvZHksIGFuZCBpZiBoZSBzYWlkIHRoYXQgaGUgd2FzIGEgZnJpZW5kIHRvIGFueW9uZSwgaXQgd291bGQgYmVjb21lIHBsYWluIHRoYXQgdGhpcyBtYW4gd2FzIHRoZSBvbmUgaGUgd2FzIHBsb3R0aW5nIGFnYWluc3QuIEhlIHdvdWxkIG5ldmVyIHJpZGljdWxlIGFuIGVuZW15LCBidXQgaGUgYWx3YXlzIGdhdmUgdGhlIGltcHJlc3Npb24gaW4gY29udmVyc2F0aW9uIG9mIHJpZGljdWxpbmcgYWxsIGhpcyBhc3NvY2lhdGVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.6.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5OZWl0aGVyIHdvdWxkIGhlIGRldmlzZSBzY2hlbWVzIGFnYWluc3QgaGlzIGVuZW1pZXMnIHByb3BlcnR5LCBmb3IgaGUgc2F3IGRpZmZpY3VsdHkgaW4gZ2V0dGluZyBob2xkIG9mIHRoZSBwb3NzZXNzaW9ucyBvZiBwZW9wbGUgd2hvIHdlcmUgb24gdGhlaXIgZ3VhcmQ7IGJ1dCBoZSB0aG91Z2h0IGhlIHdhcyB0aGUgb25seSBvbmUgd2hvIGtuZXcgdGhhdCBpdCB3YXMgZWFzaWVzdCB0byBnZXQgaG9sZCBvZiB0aGUgcHJvcGVydHkgb2YgZnJpZW5kc+KAlGp1c3QgYmVjYXVzZSBpdCB3YXMgdW5ndWFyZGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.6.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgYWxsIHdob20gaGUgZm91bmQgdG8gYmUgcGVyanVyZXJzIGFuZCB3cm9uZ2RvZXJzIGhlIHdvdWxkIGZlYXIsIHJlZ2FyZGluZyB0aGVtIGFzIHdlbGwgYXJtZWQsIHdoaWxlIHRob3NlIHdobyB3ZXJlIHBpb3VzIGFuZCBwcmFjdGlzZWQgdHJ1dGggaGUgd291bGQgdHJ5IHRvIG1ha2UgdXNlIG9mLCByZWdhcmRpbmcgdGhlbSBhcyB3ZWFrbGluZ3MuCjwvdHJhbnNsYXRpb24+"
translation['2.6.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQganVzdCBhcyBhIG1hbiBwcmlkZXMgaGltc2VsZiB1cG9uIHBpZXR5LCB0cnV0aGZ1bG5lc3MsIGFuZCBqdXN0aWNlLCBzbyBNZW5vbiBwcmlkZWQgaGltc2VsZiB1cG9uIGFiaWxpdHkgdG8gZGVjZWl2ZSwgdGhlIGZhYnJpY2F0aW9uIG9mIGxpZXMsIGFuZCB0aGUgbW9ja2luZyBvZiBmcmllbmRzOyBidXQgdGhlIG1hbiB3aG8gd2FzIG5vdCBhIHJhc2NhbCBoZSBhbHdheXMgdGhvdWdodCBvZiBhcyBiZWxvbmdpbmcgdG8gdGhlIHVuZWR1Y2F0ZWQuIEFnYWluLCBpZiBoZSB3ZXJlIGF0dGVtcHRpbmcgdG8gYmUgZmlyc3QgaW4gdGhlIGZyaWVuZHNoaXAgb2YgYW55Ym9keSwgaGUgdGhvdWdodCB0aGF0IHNsYW5kZXJpbmcgdGhvc2Ugd2hvIHdlcmUgYWxyZWFkeSBmaXJzdCB3YXMgdGhlIHByb3BlciB3YXkgb2YgZ2FpbmluZyB0aGlzIGVuZC4KPC90cmFuc2xhdGlvbj4="
translation['2.6.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgbWFraW5nIGhpcyBzb2xkaWVycyBvYmVkaWVudCwgaGUgbWFuYWdlZCB0aGF0IGJ5IGJlYXJpbmcgYSBzaGFyZSBpbiB0aGVpciB3cm9uZ2RvaW5nLiBIZSBleHBlY3RlZCwgaW5kZWVkLCB0byBnYWluIGhvbm91ciBhbmQgYXR0ZW50aW9uIGJ5IHNob3dpbmcgdGhhdCBoZSBoYWQgdGhlIGFiaWxpdHkgYW5kIHdvdWxkIGhhdmUgdGhlIHJlYWRpbmVzcyB0byBkbyB0aGUgbW9zdCB3cm9uZ3M7IGFuZCBoZSBzZXQgaXQgZG93biBhcyBhIGtpbmRuZXNzLCB3aGVuZXZlciBhbnlvbmUgYnJva2Ugb2ZmIHdpdGggaGltLCB0aGF0IGhlIGhhZCBub3QsIHdoaWxlIHN0aWxsIG9uIHRlcm1zIHdpdGggc3VjaCBhIG9uZSwgZGVzdHJveWVkIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['2.6.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG8gYmUgc3VyZSwgaW4gbWF0dGVycyB0aGF0IGFyZSBkb3VidGZ1bCBvbmUgbWF5IGJlIG1pc3Rha2VuIGFib3V0IGhpbSwgYnV0IHRoZSBmYWN0cyB3aGljaCBldmVyeWJvZHkga25vd3MgYXJlIHRoZSBmb2xsb3dpbmcuIEZyb20gQXJpc3RpcHB1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjEuMTAiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4xLjEwPC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjIuMSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjIuMTwvYmlibD4sIGFuZCBub3RlIG9uIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4yLjYiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4yLjY8L2JpYmw+Ljwvbm90ZT4gaGUgc2VjdXJlZCwgd2hpbGUgc3RpbGwgaW4gdGhlIGJsb29tIG9mIHlvdXRoLCBhbiBhcHBvaW50bWVudCBhcyBnZW5lcmFsIG9mIGhpcyBtZXJjZW5hcmllczsgd2l0aCBBcmlhZXVzLCB3aG8gd2FzIGEgYmFyYmFyaWFuLCBoZSBiZWNhbWUgZXh0cmVtZWx5IGludGltYXRlIGZvciB0aGUgcmVhc29uIHRoYXQgQXJpYWV1cyB3YXMgZm9uZCBvZiBiZWF1dGlmdWwgeW91dGhzOyBhbmQsIGxhc3RseSwgaGUgaGltc2VsZiwgd2hpbGUgc3RpbGwgYmVhcmRsZXNzLCBoYWQgYSBiZWFyZGVkIGZhdm91cml0ZSBuYW1lZCBUaGFyeXBhcy4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjEuMTAiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4xLjEwPC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjIuMSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjIuMTwvYmlibD4sIGFuZCBub3RlIG9uIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4yLjYiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4yLjY8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['2.6.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiBoaXMgZmVsbG93LWdlbmVyYWxzIHdlcmUgcHV0IHRvIGRlYXRoIGZvciBqb2luaW5nIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gaW4gaGlzIGV4cGVkaXRpb24gYWdhaW5zdCB0aGUgS2luZywgaGUsIHdobyBoYWQgZG9uZSB0aGUgc2FtZSB0aGluZywgd2FzIG5vdCBzbyB0cmVhdGVkLCBidXQgaXQgd2FzIGFmdGVyIHRoZSBleGVjdXRpb24gb2YgdGhlIG90aGVyIGdlbmVyYWxzIHRoYXQgdGhlIEtpbmcgdmlzaXRlZCB0aGUgcHVuaXNobWVudCBvZiBkZWF0aCB1cG9uIGhpbTsgYW5kIGhlIHdhcyBub3QsIGxpa2UgQ2xlYXJjaHVzIGFuZCB0aGUgcmVzdCBvZiB0aGUgZ2VuZXJhbHMsIGJlaGVhZGVk4oCUYSBtYW5uZXIgb2YgZGVhdGggd2hpY2ggaXMgY291bnRlZCBzcGVlZGllc3TigJRidXQsIHJlcG9ydCBzYXlzLCB3YXMgdG9ydHVyZWQgYWxpdmUgZm9yIGEgeWVhciBhbmQgc28gbWV0IHRoZSBkZWF0aCBvZiBhIHNjb3VuZHJlbC4KPC90cmFuc2xhdGlvbj4="
translation['3.1.1'] = ""
translation['3.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGUgZ2VuZXJhbHMgaGFkIGJlZW4gc2VpemVkIGFuZCBzdWNoIG9mIHRoZSBjYXB0YWlucyBhbmQgc29sZGllcnMgYXMgYWNjb21wYW5pZWQgdGhlbSBoYWQgYmVlbiBraWxsZWQsIHRoZSBHcmVla3Mgd2VyZSBuYXR1cmFsbHkgaW4gZ3JlYXQgcGVycGxleGl0eSwgcmVmbGVjdGluZyB0aGF0IHRoZXkgd2VyZSBhdCB0aGUgS2luZydzIGdhdGVzLCB0aGF0IHJvdW5kIGFib3V0IHRoZW0gb24gZXZlcnkgc2lkZSB3ZXJlIG1hbnkgaG9zdGlsZSB0cmliZXMgYW5kIGNpdGllcywgdGhhdCBubyBvbmUgd291bGQgcHJvdmlkZSB0aGVtIGEgbWFya2V0IGFueSBsb25nZXIsIHRoYXQgdGhleSB3ZXJlIGRpc3RhbnQgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gbm90IGxlc3MgdGhhbiB0ZW4gdGhvdXNhbmQgc3RhZGlhLCB0aGF0IHRoZXkgaGFkIG5vIGd1aWRlIHRvIHNob3cgdGhlbSB0aGUgd2F5LCB0aGF0IHRoZXkgd2VyZSBjdXQgb2ZmIGJ5IGltcGFzc2FibGUgcml2ZXJzIHdoaWNoIGZsb3dlZCBhY3Jvc3MgdGhlIGhvbWV3YXJkIHJvdXRlLCB0aGF0IHRoZSBiYXJiYXJpYW5zIHdobyBoYWQgbWFkZSB0aGUgdXB3YXJkIG1hcmNoIHdpdGggPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBoYWQgYWxzbyBiZXRyYXllZCB0aGVtLCBhbmQgdGhhdCB0aGV5IHdlcmUgbGVmdCBhbG9uZSwgd2l0aG91dCBldmVuIGEgc2luZ2xlIGhvcnNlbWFuIHRvIHN1cHBvcnQgdGhlbSwgc28gdGhhdCBpdCB3YXMgcXVpdGUgY2xlYXIgdGhhdCBpZiB0aGV5IHNob3VsZCBiZSB2aWN0b3Jpb3VzLCB0aGV5IGNvdWxkIG5vdCBraWxsIGFueW9uZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi40LjYiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi40LjY8L2JpYmw+IGFuZCB0aGUgbm90ZS48L25vdGU+IHdoaWxlIGlmIHRoZXkgc2hvdWxkIGJlIGRlZmVhdGVkLCBub3Qgb25lIG9mIHRoZW0gd291bGQgYmUgbGVmdCBhbGl2ZS4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjQuNiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjQuNjwvYmlibD4gYW5kIHRoZSBub3RlLjwvdHJhbnNsYXRpb24+"
translation['3.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkZ1bGwgb2YgdGhlc2UgcmVmbGVjdGlvbnMgYW5kIGRlc3BvbmRlbnQgYXMgdGhleSB3ZXJlLCBidXQgZmV3IG9mIHRoZW0gdGFzdGVkIGZvb2QgYXQgZXZlbmluZywgZmV3IGtpbmRsZWQgYSBmaXJlLCBhbmQgbWFueSBkaWQgbm90IGNvbWUgdGhhdCBuaWdodCB0byB0aGVpciBxdWFydGVycywgYnV0IGxheSBkb3duIHdoZXJldmVyIHRoZXkgZWFjaCBjaGFuY2VkIHRvIGJlLCB1bmFibGUgdG8gc2xlZXAgZm9yIGdyaWVmIGFuZCBsb25naW5nIGZvciB0aGVpciBuYXRpdmUgc3RhdGVzIGFuZCBwYXJlbnRzLCB0aGVpciB3aXZlcyBhbmQgY2hpbGRyZW4sIHdob20gdGhleSB0aG91Z2h0IHRoZXkgc2hvdWxkIG5ldmVyIHNlZSBhZ2Fpbi4gU3VjaCB3YXMgdGhlIHN0YXRlIG9mIG1pbmQgaW4gd2hpY2ggdGhleSBhbGwgbGF5IGRvd24gdG8gcmVzdC4KPC90cmFuc2xhdGlvbj4="
translation['3.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSB3YXMgYSBtYW4gaW4gdGhlIGFybXkgbmFtZWQgWGVub3Bob24sIGFuIEF0aGVuaWFuLCB3aG8gd2FzIG5laXRoZXIgZ2VuZXJhbCBub3IgY2FwdGFpbiBub3IgcHJpdmF0ZSwgYnV0IGhhZCBhY2NvbXBhbmllZCB0aGUgZXhwZWRpdGlvbiBiZWNhdXNlIFByb3hlbnVzLCBhbiBvbGQgZnJpZW5kIG9mIGhpcywgaGFkIHNlbnQgaGltIGF0IGhpcyBob21lIGFuIGludml0YXRpb24gdG8gZ28gd2l0aCBoaW07IFByb3hlbnVzIGhhZCBhbHNvIHByb21pc2VkIGhpbSB0aGF0LCBpZiBoZSB3b3VsZCBnbywgaGUgd291bGQgbWFrZSBoaW0gYSBmcmllbmQgb2YgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiwgd2hvbSBoZSBoaW1zZWxmIHJlZ2FyZGVkLCBzbyBoZSBzYWlkLCBhcyB3b3J0aCBtb3JlIHRvIGhpbSB0aGFuIHdhcyBoaXMgbmF0aXZlIHN0YXRlLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHJlYWRpbmcgUHJveGVudXMnIGxldHRlciBYZW5vcGhvbiBjb25mZXJyZWQgd2l0aCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgcGhpbG9zb3BoZXIsIHdob3NlIGZvbGxvd2VyIGFuZCBmcmllbmQgWGVub3Bob24gaGFkIGJlZW4gZnJvbSBoaXMgeW91dGguPC9ub3RlPiB0aGUgQXRoZW5pYW4sIGFib3V0IHRoZSBwcm9wb3NlZCBqb3VybmV5OyBhbmQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBzdXNwZWN0aW5nIHRoYXQgaGlzIGJlY29taW5nIGEgZnJpZW5kIG9mIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IG1pZ2h0IGJlIGEgY2F1c2UgZm9yIGFjY3VzYXRpb24gYWdhaW5zdCBYZW5vcGhvbiBvbiB0aGUgcGFydCBvZiB0aGUgQXRoZW5pYW4gZ292ZXJubWVudCwgZm9yIHRoZSByZWFzb24gdGhhdCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IHdhcyB0aG91Z2h0IHRvIGhhdmUgZ2l2ZW4gdGhlIExhY2VkYWVtb25pYW5zIHplYWxvdXMgYWlkIGluIHRoZWlyIHdhciBhZ2FpbnN0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIEludHJvZC4sIHBwLiAyMzEtMjMzLjwvbm90ZT4gYWR2aXNlZCBYZW5vcGhvbiB0byBnbyB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERlbHBoaSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRGVscGhpIj5EZWxwaGk8L3BsYWNlTmFtZT4gYW5kIGNvbnN1bHQgdGhlIGdvZCBpbiByZWdhcmQgdG8gdGhpcyBqb3VybmV5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlNvIFhlbm9waG9uIHdlbnQgYW5kIGFza2VkIEFwb2xsbyB0byB3aGF0IG9uZSBvZiB0aGUgZ29kcyBoZSBzaG91bGQgc2FjcmlmaWNlIGFuZCBwcmF5IGluIG9yZGVyIGJlc3QgYW5kIG1vc3Qgc3VjY2Vzc2Z1bGx5IHRvIHBlcmZvcm0gdGhlIGpvdXJuZXkgd2hpY2ggaGUgaGFkIGluIG1pbmQgYW5kLCBhZnRlciBtZWV0aW5nIHdpdGggZ29vZCBmb3J0dW5lLCB0byByZXR1cm4gaG9tZSBpbiBzYWZldHk7IGFuZCBBcG9sbG8gaW4gaGlzIHJlc3BvbnNlIHRvbGQgaGltIHRvIHdoYXQgZ29kcyBoZSBtdXN0IHNhY3JpZmljZS4KPC90cmFuc2xhdGlvbj4="
translation['3.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gWGVub3Bob24gY2FtZSBiYWNrIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxEZWxwaGkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERlbHBoaSI+RGVscGhpPC9wbGFjZU5hbWU+LCBoZSByZXBvcnRlZCB0aGUgb3JhY2xlIHRvIFNvY3JhdGVzOyBhbmQgdXBvbiBoZWFyaW5nIGFib3V0IGl0IFNvY3JhdGVzIGZvdW5kIGZhdWx0IHdpdGggaGltIGJlY2F1c2UgaGUgZGlkIG5vdCBmaXJzdCBwdXQgdGhlIHF1ZXN0aW9uIHdoZXRoZXIgaXQgd2VyZSBiZXR0ZXIgZm9yIGhpbSB0byBnbyBvciBzdGF5LCBidXQgZGVjaWRlZCBmb3IgaGltc2VsZiB0aGF0IGhlIHdhcyB0byBnbyBhbmQgdGhlbiBhc2tlZCB0aGUgZ29kIGFzIHRvIHRoZSBiZXN0IHdheSBvZiBnb2luZy4g4oCcSG93ZXZlcizigJ0gaGUgYWRkZWQsIOKAnHNpbmNlIHlvdSBkaWQgcHV0IHRoZSBxdWVzdGlvbiBpbiB0aGF0IHdheSwgeW91IG11c3QgZG8gYWxsIHRoYXQgdGhlIGdvZCBkaXJlY3RlZC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['3.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5YZW5vcGhvbiwgYWNjb3JkaW5nbHksIGFmdGVyIG9mZmVyaW5nIHRoZSBzYWNyaWZpY2VzIHRvIHRoZSBnb2RzIHRoYXQgQXBvbGxvJ3Mgb3JhY2xlIHByZXNjcmliZWQsIHNldCBzYWlsLCBvdmVydG9vayBQcm94ZW51cyBhbmQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNhcmRpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU2FyZGlzIj5TYXJkaXM8L3BsYWNlTmFtZT4gYXMgdGhleSB3ZXJlIG9uIHRoZSBwb2ludCBvZiBiZWdpbm5pbmcgdGhlIHVwd2FyZCBtYXJjaCwgYW5kIHdhcyBpbnRyb2R1Y2VkIHRvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['3.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBub3Qgb25seSBkaWQgUHJveGVudXMgdXJnZSBoaW0gdG8gc3RheSB3aXRoIHRoZW0sIGJ1dCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFsc28gam9pbmVkIGluIHRoaXMgcmVxdWVzdCwgYWRkaW5nIHRoYXQgYXMgc29vbiBhcyB0aGUgY2FtcGFpZ24gY2FtZSB0byBhbiBlbmQsIGhlIHdvdWxkIHNlbmQgWGVub3Bob24gaG9tZSBhdCBvbmNlOyBhbmQgdGhlIHJlcG9ydCB3YXMgdGhhdCB0aGUgY2FtcGFpZ24gd2FzIGFnYWluc3QgdGhlIFBpc2lkaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['3.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgaW4gdGhpcyB3YXksIHRoZW4sIHRoYXQgWGVub3Bob24gY2FtZSB0byBnbyBvbiB0aGUgZXhwZWRpdGlvbiwgcXVpdGUgZGVjZWl2ZWQgYWJvdXQgaXRzIHB1cnBvc2XigJRub3QsIGhvd2V2ZXIsIGJ5IFByb3hlbnVzLCBmb3IgaGUgZGlkIG5vdCBrbm93IHRoYXQgdGhlIGF0dGFjayB3YXMgZGlyZWN0ZWQgYWdhaW5zdCB0aGUgS2luZywgbm9yIGRpZCBhbnlvbmUgZWxzZSBhbW9uZyB0aGUgR3JlZWtzIHdpdGggdGhlIGV4Y2VwdGlvbiBvZiBDbGVhcmNodXM7IGJ1dCBieSB0aGUgdGltZSB0aGV5IHJlYWNoZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI0NzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjQ3MCI+Q2lsaWNpYTwvcGxhY2VOYW1lPiwgaXQgc2VlbWVkIGNsZWFyIHRvIGV2ZXJ5Ym9keSB0aGF0IHRoZSBleHBlZGl0aW9uIHdhcyByZWFsbHkgYWdhaW5zdCB0aGUgS2luZy4gVGhlbiwgYWx0aG91Z2ggdGhlIEdyZWVrcyB3ZXJlIGZlYXJmdWwgb2YgdGhlIGpvdXJuZXkgYW5kIHVud2lsbGluZyB0byBnbyBvbiwgbW9zdCBvZiB0aGVtIGRpZCwgbmV2ZXJ0aGVsZXNzLCBvdXQgb2Ygc2hhbWUgYmVmb3JlIG9uZSBhbm90aGVyIGFuZCBiZWZvcmUgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiwgY29udGludWUgdGhlIG1hcmNoLiBBbmQgWGVub3Bob24gd2FzIG9uZSBvZiB0aGlzIG51bWJlci4KPC90cmFuc2xhdGlvbj4="
translation['3.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoZW4gdGhlIHRpbWUgb2YgcGVycGxleGl0eSBjYW1lLCBoZSB3YXMgZGlzdHJlc3NlZCBhcyB3ZWxsIGFzIGV2ZXJ5Ym9keSBlbHNlIGFuZCB3YXMgdW5hYmxlIHRvIHNsZWVwOyBidXQsIGdldHRpbmcgYXQgbGVuZ3RoIGEgbGl0dGxlIHNsZWVwLCBoZSBoYWQgYSBkcmVhbS4gSXQgc2VlbWVkIHRvIGhpbSB0aGF0IHRoZXJlIHdhcyBhIGNsYXAgb2YgdGh1bmRlciBhbmQgYSBib2x0IGZlbGwgb24gaGlzIGZhdGhlcidzIGhvdXNlLCBzZXR0aW5nIHRoZSB3aG9sZSBob3VzZSBhYmxhemUuCjwvdHJhbnNsYXRpb24+"
translation['3.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5IZSBhd29rZSBhdCBvbmNlIGluIGdyZWF0IGZlYXIsIGFuZCBqdWRnZWQgdGhlIGRyZWFtIGluIG9uZSB3YXkgYW4gYXVzcGljaW91cyBvbmUsIGJlY2F1c2UgaW4gdGhlIG1pZHN0IG9mIGhhcmRzaGlwcyBhbmQgcGVyaWxzIGhlIGhhZCBzZWVtZWQgdG8gYmVob2xkIGEgZ3JlYXQgbGlnaHQgZnJvbSBaZXVzOyBidXQgbG9va2luZyBhdCBpdCBpbiBhbm90aGVyIHdheSBoZSB3YXMgZmVhcmZ1bCwgc2luY2UgdGhlIGRyZWFtIGNhbWUsIGFzIGhlIHRob3VnaHQsIGZyb20gWmV1cyB0aGUgS2luZyBhbmQgdGhlIGZpcmUgYXBwZWFyZWQgdG8gYmxhemUgYWxsIGFib3V0LCBsZXN0IGhlIG1pZ2h0IG5vdCBiZSBhYmxlIHRvIGVzY2FwZSBvdXQgb2YgdGhlIEtpbmcncyBjb3VudHJ5LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5LaW5nIFpldXMgaW4gdGhlIGRyZWFtIGlzIHRoZSBQZXJzaWFuIEtpbmcgaW4gdGhlIGludGVycHJldGF0aW9uLjwvbm90ZT4gYnV0IG1pZ2h0IGJlIHNodXQgaW4gb24gYWxsIHNpZGVzIGJ5IHZhcmlvdXMgZGlmZmljdWx0aWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hhdCBpdCByZWFsbHkgbWVhbnMgdG8gaGF2ZSBzdWNoIGEgZHJlYW0gb25lIG1heSBsZWFybiBmcm9tIHRoZSBldmVudHMgd2hpY2ggZm9sbG93ZWQgdGhlIGRyZWFt4oCUYW5kIHRoZXkgd2VyZSB0aGVzZTogRmlyc3RseSwgb24gdGhlIG1vbWVudCBvZiBoaXMgYXdha2VuaW5nIHRoZSB0aG91Z2h0IG9jY3VycmVkIHRvIGhpbTog4oCcV2h5IGRvIEkgbGllIGhlcmU/IFRoZSBuaWdodCBpcyB3ZWFyaW5nIG9uLCBhbmQgYXQgZGF5YnJlYWsgaXQgaXMgbGlrZWx5IHRoYXQgdGhlIGVuZW15IHdpbGwgYmUgdXBvbiB1cy4gQW5kIGlmIHdlIGZhbGwgaW50byB0aGUgS2luZydzIGhhbmRzLCB3aGF0IGlzIHRoZXJlIHRvIHByZXZlbnQgb3VyIGxpdmluZyB0byBiZWhvbGQgYWxsIHRoZSBtb3N0IGdyaWV2b3VzIHNpZ2h0cyBhbmQgdG8gZXhwZXJpZW5jZSBhbGwgdGhlIG1vc3QgZHJlYWRmdWwgc3VmZmVyaW5ncywgYW5kIHRoZW4gYmVpbmcgcHV0IHRvIGRlYXRoIHdpdGggaW5zdWx0Pwo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgZGVmZW5kaW5nIG91cnNlbHZlcywgaG93ZXZlciwgbm8gb25lIGlzIG1ha2luZyBwcmVwYXJhdGlvbnMgb3IgdGFraW5nIHRob3VnaHQgZm9yIHRoYXQsIGJ1dCB3ZSBsaWUgaGVyZSBqdXN0IGFzIGlmIGl0IHdlcmUgcG9zc2libGUgZm9yIHVzIHRvIGVuam95IG91ciBlYXNlLiBXaGF0IGFib3V0IG15c2VsZiwgdGhlbj8gRnJvbSB3aGF0IHN0YXRlIGFtIEkgZXhwZWN0aW5nIHRoZSBnZW5lcmFsIHRvIGNvbWUgd2hvIGlzIHRvIHBlcmZvcm0gdGhlc2UgZHV0aWVzPyBBbmQgd2hhdCBhZ2UgbXVzdCBJIG15c2VsZiB3YWl0IHRvIGF0dGFpbj8gRm9yIHN1cmVseSBJIHNoYWxsIG5ldmVyIGJlIGFueSBvbGRlciwgaWYgdGhpcyBkYXkgSSBnaXZlIG15c2VsZiB1cCB0byB0aGUgZW5lbXku4oCdCjwvdHJhbnNsYXRpb24+"
translation['3.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBoZSBhcm9zZSBhbmQsIGFzIGEgZmlyc3Qgc3RlcCwgY2FsbGVkIHRvZ2V0aGVyIHRoZSBjYXB0YWlucyBvZiBQcm94ZW51cy4gV2hlbiB0aGV5IGhhZCBnYXRoZXJlZCwgaGUgc2FpZDog4oCcR2VudGxlbWVuLCBJIGFtIHVuYWJsZSBlaXRoZXIgdG8gc2xlZXAsIGFzIEkgcHJlc3VtZSB5b3UgYXJlIGFsc28sIG9yIHRvIGxpZSBzdGlsbCBhbnkgbG9uZ2VyLCB3aGVuIEkgc2VlIGluIHdoYXQgc3RyYWl0cyB3ZSBub3cgYXJlLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIGVuZW15IG1hbmlmZXN0bHkgZGlkIG5vdCBiZWdpbiBvcGVuIHdhciB1cG9uIHVzIHVudGlsIHRoZSBtb21lbnQgd2hlbiB0aGV5IGJlbGlldmVkIHRoYXQgdGhlaXIgb3duIHByZXBhcmF0aW9ucyBoYWQgYmVlbiBhZGVxdWF0ZWx5IG1hZGU7IGJ1dCBvbiBvdXIgc2lkZSBubyBvbmUgaXMgcGxhbm5pbmcgYW55IGNvdW50ZXItbWVhc3VyZXMgYXQgYWxsIHRvIGVuc3VyZSBvdXIgbWFraW5nIHRoZSBiZXN0IHBvc3NpYmxlIGZpZ2h0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgeWV0IGlmIHdlIHN1Ym1pdCBhbmQgZmFsbCBpbnRvIHRoZSBLaW5nJ3MgaGFuZHMsIHdoYXQgZG8gd2UgaW1hZ2luZSBvdXIgZmF0ZSBpcyB0byBiZT8gRXZlbiBpbiB0aGUgY2FzZSBvZiBoaXMgb3duIGJyb3RoZXIsIGFuZCwgeWV0IG1vcmUsIHdoZW4gaGUgd2FzIGFscmVhZHkgZGVhZCwgdGhpcyBtYW4gY3V0IG9mZiBoaXMgaGVhZCBhbmQgaGlzIGhhbmQgYW5kIGltcGFsZWQgdGhlbTsgYXMgZm9yIG91cnNlbHZlcywgdGhlbiwgd2hvIGhhdmUgbm8gb25lIHRvIGludGVyY2VkZSBmb3IgdXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMS4zIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMS4zPC9iaWJsPiBmLjwvbm90ZT4gYW5kIHdobyB0b29rIHRoZSBmaWVsZCBhZ2FpbnN0IGhpbSB3aXRoIHRoZSBpbnRlbnRpb24gb2YgbWFraW5nIGhpbSBhIHNsYXZlIHJhdGhlciB0aGFuIGEga2luZyBhbmQgb2Yga2lsbGluZyBoaW0gaWYgd2UgY291bGQsIHdoYXQgZmF0ZSBtYXkgd2UgZXhwZWN0IHRvIHN1ZmZlcj8KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjEuMyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjEuMzwvYmlibD4gZi48L3RyYW5zbGF0aW9uPg=="
translation['3.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5XaWxsIGhlIG5vdCBkbyBoaXMgdXRtb3N0IHRvIGluZmxpY3QgdXBvbiB1cyB0aGUgbW9zdCBvdXRyYWdlb3VzIHRvcnR1cmVzLCBhbmQgdGh1cyBtYWtlIGFsbCBtYW5raW5kIGFmcmFpZCBldmVyIHRvIHVuZGVydGFrZSBhbiBleHBlZGl0aW9uIGFnYWluc3QgaGltPyBXZSwgdGhlbiwgbXVzdCBtYWtlIGV2ZXJ5IGVmZm9ydCBub3QgdG8gZmFsbCBpbnRvIGhpcyBwb3dlci4KPC90cmFuc2xhdGlvbj4="
translation['3.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRm9yIG15IHBhcnQsIHNvIGxvbmcgYXMgdGhlIHRydWNlIGxhc3RlZCBJIG5ldmVyIGNlYXNlZCBjb21taXNlcmF0aW5nIG91cnNlbHZlcyBhbmQgY29uZ3JhdHVsYXRpbmcgdGhlIEtpbmcgYW5kIGhpcyBmb2xsb3dlcnM7IGZvciBJIHNhdyBwbGFpbmx5IHdoYXQgYSBncmVhdCBhbW91bnQgb2YgZmluZSBsYW5kIHRoZXkgcG9zc2Vzc2VkLCB3aGF0IGFuIGFidW5kYW5jZSBvZiBwcm92aXNpb25zLCB3aGF0IHF1YW50aXRpZXMgb2Ygc2VydmFudHMsIGNhdHRsZSwgZ29sZCwgYW5kIGFwcGFyZWw7CjwvdHJhbnNsYXRpb24+"
translation['3.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5idXQgd2hlbmV2ZXIgSSB0b29rIHRob3VnaHQgb2YgdGhlIHNpdHVhdGlvbiBvZiBvdXIgb3duIHNvbGRpZXJzLCBJIHNhdyB0aGF0IHdlIGhhZCBubyBzaGFyZSBpbiB0aGVzZSBnb29kIHRoaW5ncywgZXhjZXB0IHdlIGJvdWdodCB0aGVtLCBJIGtuZXcgdGhlcmUgd2VyZSBidXQgZmV3IG9mIHVzIHdobyBzdGlsbCBoYWQgbW9uZXkgd2hlcmV3aXRoIHRvIGJ1eSwgYW5kIEkga25ldyB0aGF0IG91ciBvYXRocyByZXN0cmFpbmVkIHVzIGZyb20gZ2V0dGluZyBwcm92aXNpb25zIGluIGFueSBvdGhlciB3YXkgdGhhbiBieSBwdXJjaGFzZS4gSGVuY2UsIHdpdGggdGhlc2UgY29uc2lkZXJhdGlvbnMgaW4gbWluZCwgSSB1c2VkIHNvbWV0aW1lcyB0byBmZWFyIHRoZSB0cnVjZSBtb3JlIHRoYW4gSSBub3cgZmVhciB3YXIuCjwvdHJhbnNsYXRpb24+"
translation['3.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgc2VlaW5nIHRoYXQgdGhlaXIgb3duIGFjdCBoYXMgcHV0IGFuIGVuZCB0byB0aGUgdHJ1Y2UsIHRoZSBlbmQgaGFzIGxpa2V3aXNlIGNvbWUsIGluIG15IG9waW5pb24sIGJvdGggb2YgdGhlaXIgYXJyb2dhbmNlIGFuZCBvZiBvdXIgZW1iYXJyYXNzbWVudC4gRm9yIG5vdyBhbGwgdGhlc2UgZ29vZCB0aGluZ3MgYXJlIG9mZmVyZWQgYXMgcHJpemVzIGZvciB3aGljaGV2ZXIgb2YgdGhlIHR3byBwYXJ0aWVzIHNoYWxsIHByb3ZlIHRvIGJlIHRoZSBicmF2ZXIgbWVuOyBhbmQgdGhlIGp1ZGdlcyBvZiB0aGUgY29udGVzdCBhcmUgdGhlIGdvZHMsIHdobywgaW4gYWxsIGxpa2VsaWhvb2QsIHdpbGwgYmUgb24gb3VyIHNpZGUuCjwvdHJhbnNsYXRpb24+"
translation['3.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igb3VyIGVuZW1pZXMgaGF2ZSBzd29ybiBmYWxzZWx5IGJ5IHRoZW0sIHdoaWxlIHdlLCB3aXRoIGFidW5kYW50IHBvc3Nlc3Npb25zIGJlZm9yZSBvdXIgZXllcywgaGF2ZSBzdGVhZGZhc3RseSBrZXB0IG91ciBoYW5kcyB0aGVyZWZyb20gYmVjYXVzZSBvZiBvdXIgb2F0aHMgYnkgdGhlIGdvZHM7IGhlbmNlIHdlLCBJIHRoaW5rLCBjYW4gZ28gaW50byB0aGUgY29udGVzdCB3aXRoIGZhciBncmVhdGVyIGNvbmZpZGVuY2UgdGhhbiBjYW4gb3VyIGVuZW1pZXMuCjwvdHJhbnNsYXRpb24+"
translation['3.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5CZXNpZGVzLCB3ZSBoYXZlIGJvZGllcyBtb3JlIGNhcGFibGUgdGhhbiB0aGVpcnMgb2YgYmVhcmluZyBjb2xkIGFuZCBoZWF0IGFuZCB0b2lsLCBhbmQgd2UgbGlrZXdpc2UsIGJ5IHRoZSBibGVzc2luZyBvZiB0aGUgZ29kcywgaGF2ZSBiZXR0ZXIgc291bHM7IGFuZCB0aGVzZSBtZW4gYXJlIG1vcmUgbGlhYmxlIHRoYW4gd2UgdG8gYmUgd291bmRlZCBhbmQga2lsbGVkLCBpZiB0aGUgZ29kcyBhZ2FpbiwgYXMgb24gdGhhdCBmb3JtZXIgZGF5LCBncmFudCB1cyB2aWN0b3J5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIG5vdywgc2luY2UgaXQgbWF5IGJlIHRoYXQgb3RoZXJzIGFsc28gaGF2ZSB0aGVzZSBzYW1lIHRob3VnaHRzIGluIG1pbmQsIGxldCB1cyBub3QsIGluIHRoZSBuYW1lIG9mIHRoZSBnb2RzLCB3YWl0IGZvciBvdGhlcnMgdG8gY29tZSB0byB1cyBhbmQgc3VtbW9uIHVzIHRvIHRoZSBub2JsZXN0IGRlZWRzLCBidXQgbGV0IHVzIHRha2UgdGhlIGxlYWQgb3Vyc2VsdmVzIGFuZCBhcm91c2UgdGhlIHJlc3QgdG8gdmFsb3VyLiBTaG93IHlvdXJzZWx2ZXMgdGhlIGJlc3Qgb2YgdGhlIGNhcHRhaW5zLCBhbmQgbW9yZSB3b3J0aHkgdG8gYmUgZ2VuZXJhbHMgdGhhbiB0aGUgZ2VuZXJhbHMgdGhlbXNlbHZlcy4KPC90cmFuc2xhdGlvbj4="
translation['3.1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgbWUsIGlmIHlvdSBjaG9vc2UgdG8gc2V0IG91dCB1cG9uIHRoaXMgY291cnNlLCBJIGFtIHJlYWR5IHRvIGZvbGxvdyB5b3U7IGJ1dCBpZiB5b3UgYXNzaWduIG1lIHRoZSBsZWFkZXJzaGlwLCBJIGRvIG5vdCBwbGVhZCBteSB5b3V0aCBhcyBhbiBleGN1c2U7IHJhdGhlciwgSSBiZWxpZXZlIEkgYW0gaW4gdGhlIHZlcnkgcHJpbWUgb2YgbXkgcG93ZXIgdG8gd2FyZCBvZmYgZGFuZ2VycyBmcm9tIG15IG93biBoZWFkLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3VjaCB3ZXJlIFhlbm9waG9uJ3Mgd29yZHM7IGFuZCB1cG9uIGhlYXJpbmcgd2hhdCBoZSBzYWlkIHRoZSBvZmZpY2VycyBiYWRlIGhpbSB0YWtlIHRoZSBsZWFkLCBhbGwgb2YgdGhlbSBleGNlcHQgYSBtYW4gbmFtZWQgQXBvbGxvbmlkZXMsIHdobyBzcG9rZSBpbiB0aGUgQm9lb3RpYW4gZGlhbGVjdC4gVGhpcyBtYW4gbWFpbnRhaW5lZCB0aGF0IGFueW9uZSB3aG8gc2FpZCBoZSBjb3VsZCBnYWluIHNhZmV0eSBpbiBhbnkgb3RoZXIgd2F5IHRoYW4gYnkgd2lubmluZyB0aGUgS2luZydzIGNvbnNlbnQgdGhyb3VnaCBwZXJzdWFzaW9uLCBpZiBwb3NzaWJsZSwgd2FzIHRhbGtpbmcgbm9uc2Vuc2U7IGFuZCBhdCB0aGUgc2FtZSB0aW1lIGhlIGJlZ2FuIHRvIHJlY2l0ZSB0aGUgZGlmZmljdWx0aWVzIG9mIHRoZWlyIHNpdHVhdGlvbi4gWGVub3Bob24sIGhvd2V2ZXIsIGludGVycnVwdGVkIGhpbSBpbiB0aGUgbWlkc3Qgb2YgaGlzIHRhbGssIGFuZCBzYWlkOgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz7igJxZb3UgYW1hemluZyBmZWxsb3csIHlvdSBoYXZlIGV5ZXMgYnV0IHN0aWxsIGRvIG5vdCBwZXJjZWl2ZSwgYW5kIHlvdSBoYXZlIGVhcnMgYnV0IHN0aWxsIGRvIG5vdCByZW1lbWJlci4gWW91IHdlcmUgcHJlc2VudCwgc3VyZWx5LCB3aXRoIHRoZSByZXN0IG9mIHRoZXNlIG9mZmljZXJzIGF0IHRoZSB0aW1lIHdoZW4gdGhlIEtpbmcsIGFmdGVyIHRoZSBkZWF0aCBvZiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFuZCBpbiBoaXMgZWxhdGlvbiBvdmVyIHRoYXQgZXZlbnQsIHNlbnQgYW5kIG9yZGVyZWQgdXMgdG8gZ2l2ZSB1cCBvdXIgYXJtcy4KPC90cmFuc2xhdGlvbj4="
translation['3.1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiwgaW5zdGVhZCBvZiBnaXZpbmcgdGhlbSB1cCwgd2UgZXF1aXBwZWQgb3Vyc2VsdmVzIHdpdGggdGhlbSwgYW5kIHdlbnQgYW5kIGVuY2FtcGVkIGJlc2lkZSBoaW0sIHdoYXQgbWVhbnMgZGlkIGhlIGxlYXZlIHVudHJpZWTigJRzZW5kaW5nIGFtYmFzc2Fkb3JzLCBiZWdnaW5nIGZvciBhIHRydWNlLCBvZmZlcmluZyB1cyBwcm92aXNpb25z4oCUdW50aWwgaW4gdGhlIGVuZCBoZSBvYnRhaW5lZCBhIHRydWNlPwo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBob3dldmVyLCBvdXIgZ2VuZXJhbHMgYW5kIGNhcHRhaW5zLCBmb2xsb3dpbmcgcHJlY2lzZWx5IHRoZSBwbGFuIHRoYXQgeW91IGFyZSBub3cgdXJnaW5nLCB3ZW50IHVuYXJtZWQgdG8gYSBjb25mZXJlbmNlIHdpdGggdGhlbSwgcmVseWluZyB1cG9uIHRoZSB0cnVjZSwgd2hhdCBoYXBwZW5lZCBpbiB0aGF0IGNhc2U/IGFyZSB0aGV5IG5vdCBhdCB0aGlzIG1vbWVudCBiZWluZyBiZWF0ZW4sIHRvcnR1cmVkLCBpbnN1bHRlZCwgdW5hYmxlIGV2ZW4gdG8gZGllLCBoYXBsZXNzIG1lbiB0aGF0IHRoZXkgYXJlLCBldmVuIHRob3VnaCB0aGV5IGVhcm5lc3RseSBsb25nLCBJIGltYWdpbmUsIGZvciBkZWF0aD8gQW5kIGRvIHlvdSwga25vd2luZyBhbGwgdGhlc2UgdGhpbmdzLCBzYXkgdGhhdCB0aGV5IGFyZSB0YWxraW5nIG5vbnNlbnNlIHdobyB1cmdlIHNlbGYtZGVmZW5jZSwgYW5kIGRvIHlvdSBwcm9wb3NlIHRoYXQgd2Ugc2hvdWxkIGFnYWluIGdvIGFuZCB0cnkgcGVyc3Vhc2lvbj8KPC90cmFuc2xhdGlvbj4="
translation['3.1.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5JbiBteSBvcGluaW9uLCBnZW50bGVtZW4sIHdlIHNob3VsZCBub3Qgc2ltcGx5IHJlZnVzZSB0byBhZG1pdCB0aGlzIGZlbGxvdyB0byBjb21wYW5pb25zaGlwIHdpdGggdXMsIGJ1dCBzaG91bGQgZGVwcml2ZSBoaW0gb2YgaGlzIGNhcHRhaW5jeSwgbGF5IHBhY2tzIG9uIGhpcyBiYWNrLCBhbmQgdHJlYXQgaGltIGFzIHRoYXQgc29ydCBvZiBhIGNyZWF0dXJlLiBGb3IgdGhlIGZlbGxvdyBpcyBhIGRpc2dyYWNlIGJvdGggdG8gaGlzIG5hdGl2ZSBzdGF0ZSBhbmQgdG8gdGhlIHdob2xlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgc2luY2UsIGJlaW5nIGEgR3JlZWssIGhlIGlzIHN0aWxsIGEgbWFuIG9mIHRoaXMga2luZC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['3.1.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBBZ2FzaWFzLCBhIFN0eW1waGFsaWFuLCBicm9rZSBpbiBhbmQgc2FpZDog4oCcRm9yIHRoYXQgbWF0dGVyLCB0aGlzIGZlbGxvdyBoYXMgbm90aGluZyB0byBkbyBlaXRoZXIgd2l0aCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjY4MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjgzIj5Cb2VvdGlhPC9wbGFjZU5hbWU+IG9yIHdpdGggYW55IHBhcnQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IGF0IGFsbCwgZm9yIEkgaGF2ZSBub3RpY2VkIHRoYXQgaGUgaGFzIGJvdGggaGlzIGVhcnMgYm9yZWQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBHcmVla3MgY29uc2lkZXJlZCBpdCBlZmZlbWluYXRlIGZvciBhIG1hbiB0byB3ZWFyIGVhci1yaW5ncy4gSGlzIGJvcmVkIGVhcnMsIHRoZXJlZm9yZSwgbWFya2VkIEFwb2xsb25pZGVzIGFzIGEgYmFyYmFyaWFuLjwvbm90ZT4gbGlrZSBhIEx5ZGlhbidzLuKAnTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgTHlkaWFucyB3ZXJlIHByb3ZlcmJpYWxseSBlZmZlbWluYXRlLjwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['3.1.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5JbiBmYWN0LCBpdCB3YXMgc28uIEhlLCB0aGVyZWZvcmUsIHdhcyBkcml2ZW4gYXdheSwgYnV0IHRoZSBvdGhlcnMgcHJvY2VlZGVkIHRvIHZpc2l0IHRoZSB2YXJpb3VzIGRpdmlzaW9uczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgZGl2aXNpb24gKDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+E4b2xzr7Ouc+CPC9mb3JlaWduPikgd2FzIG5vdCBhIGJvZHkgb2YgYW55IHNwZWNpZmllZCBzaXplLCBidXQgY29tcHJpc2VkIHRoZSB0cm9vcHMgdW5kZXIgdGhlIGNvbW1hbmQgb2YgYSBzaW5nbGUgZ2VuZXJhbCAoPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PPhM+BzrHPhM63zrPhvbnPgjwvZm9yZWlnbj4pLiBTZWUgYmVsb3cuPC9ub3RlPiBvZiB0aGUgYXJteS4gV2hlcmV2ZXIgYSBnZW5lcmFsIHdhcyBsZWZ0IGFsaXZlLCB0aGV5IHdvdWxkIGludml0ZSBoaW0gdG8gam9pbiB0aGVtOyB3aGVyZSB0aGUgZ2VuZXJhbCB3YXMgZ29uZSwgdGhleSBpbnZpdGVkIHRoZSBsaWV1dGVuYW50LWdlbmVyYWw7IG9yLCBhZ2Fpbiwgd2hlcmUgb25seSBhIGNhcHRhaW4gd2FzIGxlZnQsIHRoZSBjYXB0YWluLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG9sc6+zrnPgjwvZm9yZWlnbj4pIHdhcyBub3QgYSBib2R5IG9mIGFueSBzcGVjaWZpZWQgc2l6ZSwgYnV0IGNvbXByaXNlZCB0aGUgdHJvb3BzIHVuZGVyIHRoZSBjb21tYW5kIG9mIGEgc2luZ2xlIGdlbmVyYWwgKDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Dz4TPgc6xz4TOt86z4b25z4I8L2ZvcmVpZ24+KS4gU2VlIGJlbG93LjwvdHJhbnNsYXRpb24+"
translation['3.1.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGFsbCBoYWQgY29tZSB0b2dldGhlciwgdGhleSBzZWF0ZWQgdGhlbXNlbHZlcyBhdCB0aGUgZnJvbnQgb2YgdGhlIGVuY2FtcG1lbnQsIGFuZCB0aGUgZ2VuZXJhbHMgYW5kIGNhcHRhaW5zIHRodXMgYXNzZW1ibGVkIGFtb3VudGVkIGluIG51bWJlciB0byBhYm91dCBvbmUgaHVuZHJlZC4gQnkgdGhpcyB0aW1lIGl0IHdhcyBuZWFybHkgbWlkbmlnaHQuCjwvdHJhbnNsYXRpb24+"
translation['3.1.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIEhpZXJvbnltdXMgdGhlIEVsZWFuLCB3aG8gd2FzIHRoZSBlbGRlc3Qgb2YgUHJveGVudXMnIGNhcHRhaW5zLCBiZWdhbiB0byBzcGVhayBhcyBmb2xsb3dzOiDigJxHZW5lcmFscyBhbmQgY2FwdGFpbnMsIHdlIGhhdmUgZGVlbWVkIGl0IGJlc3QsIGluIHZpZXcgb2YgdGhlIHByZXNlbnQgc2l0dWF0aW9uLCBib3RoIHRvIGNvbWUgdG9nZXRoZXIgb3Vyc2VsdmVzIGFuZCB0byBpbnZpdGUgeW91IHRvIGpvaW4gdXMsIGluIG9yZGVyIHRoYXQgd2UgbWF5IGRldmlzZSB3aGF0ZXZlciBnb29kIGNvdW5zZWwgd2UgY2FuLiBSZXBlYXQgbm93LCBYZW5vcGhvbizigJ0gaGUgYWRkZWQsIOKAnGp1c3Qgd2hhdCB5b3Ugc2FpZCB0byB1cy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['3.1.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmV1cG9uIFhlbm9waG9uIHNwb2tlIGFzIGZvbGxvd3M6IOKAnFdlIGFsbCB1bmRlcnN0YW5kIHRodXMgbXVjaCwgdGhhdCB0aGUgS2luZyBhbmQgVGlzc2FwaGVybmVzIGhhdmUgc2VpemVkIGFzIG1hbnkgYXMgdGhleSBjb3VsZCBvZiBvdXIgbnVtYmVyLCBhbmQgdGhhdCB0aGV5IGFyZSBtYW5pZmVzdGx5IHBsb3R0aW5nIGFnYWluc3QgdGhlIHJlc3Qgb2YgdXMsIHRvIGRlc3Ryb3kgdXMgaWYgdGhleSBjYW4uIEl0IGlzIGZvciB1cywgdGhlbiwgaW4gbXkgb3BpbmlvbiwgdG8gbWFrZSBldmVyeSBlZmZvcnQgdGhhdCB3ZSBtYXkgbmV2ZXIgZmFsbCBpbnRvIHRoZSBwb3dlciBvZiB0aGUgYmFyYmFyaWFucywgYnV0IHRoYXQgdGhleSBtYXkgcmF0aGVyIGZhbGwgaW50byBvdXIgcG93ZXIuCjwvdHJhbnNsYXRpb24+"
translation['3.1.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5CZSBzdXJlLCB0aGVyZWZvcmUsIHRoYXQgeW91LCB3aG8gaGF2ZSBub3cgY29tZSB0b2dldGhlciBpbiBzdWNoIG51bWJlcnMsIGhhdmUgdGhlIGdyYW5kZXN0IG9mIG9wcG9ydHVuaXRpZXMuIEZvciBhbGwgb3VyIHNvbGRpZXJzIGhlcmUgYXJlIGxvb2tpbmcgdG8geW91OyBpZiB0aGV5IHNlZSB0aGF0IHlvdSBhcmUgZmFpbnQtaGVhcnRlZCwgYWxsIG9mIHRoZW0gd2lsbCBiZSBjb3dhcmRzOyBidXQgaWYgeW91IG5vdCBvbmx5IHNob3cgdGhhdCB5b3UgYXJlIG1ha2luZyBwcmVwYXJhdGlvbnMgeW91cnNlbHZlcyBhZ2FpbnN0IHRoZSBlbmVteSwgYnV0IGNhbGwgdXBvbiB0aGUgcmVzdCB0byBkbyBsaWtld2lzZSwgYmUgd2VsbCBhc3N1cmVkIHRoYXQgdGhleSB3aWxsIGZvbGxvdyB5b3UgYW5kIHdpbGwgdHJ5IHRvIGltaXRhdGUgeW91Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgcGVyaGFwcyBpdCBpcyByZWFsbHkgcHJvcGVyIHRoYXQgeW91IHNob3VsZCBzb21ld2hhdCBleGNlbCB0aGVtLiBGb3IgeW91IGFyZSBnZW5lcmFscywgeW91IGFyZSBsaWV1dGVuYW50LWdlbmVyYWxzIGFuZCBjYXB0YWluczsgd2hpbGUgcGVhY2UgbGFzdGVkLCB5b3UgaGFkIHRoZSBhZHZhbnRhZ2Ugb2YgdGhlbSBhbGlrZSBpbiBwYXkgYW5kIGluIHN0YW5kaW5nOyBub3csIHRoZXJlZm9yZSwgd2hlbiBhIHN0YXRlIG9mIHdhciBleGlzdHMsIGl0IGlzIHJpZ2h0IHRvIGV4cGVjdCB0aGF0IHlvdSBzaG91bGQgYmUgc3VwZXJpb3IgdG8gdGhlIGNvbW1vbiBzb2xkaWVycywgYW5kIHRoYXQgeW91IHNob3VsZCBwbGFuIGZvciB0aGVtIGFuZCB0b2lsIGZvciB0aGVtIHdoZW5ldmVyIHRoZXJlIGJlIG5lZWQuCjwvdHJhbnNsYXRpb24+"
translation['3.1.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIG5vdywgZmlyc3RseSwgSSB0aGluayB5b3Ugd291bGQgZG8gdGhlIGFybXkgYSBncmVhdCBzZXJ2aWNlIGlmIHlvdSBzaG91bGQgc2VlIHRvIGl0IHRoYXQgZ2VuZXJhbHMgYW5kIGNhcHRhaW5zIGFyZSBhcHBvaW50ZWQgYXMgc3BlZWRpbHkgYXMgcG9zc2libGUgdG8gdGFrZSB0aGUgcGxhY2VzIG9mIHRob3NlIHdobyBhcmUgbG9zdC4gRm9yIHdpdGhvdXQgbGVhZGVycyBub3RoaW5nIGZpbmUgb3IgdXNlZnVsIGNhbiBiZSBhY2NvbXBsaXNoZWQgaW4gYW55IGZpZWxkLCB0byBwdXQgaXQgYnJvYWRseSwgYW5kIGNlcnRhaW5seSBub3QgaW4gd2FyZmFyZS4gRm9yIGRpc2NpcGxpbmUsIGl0IHNlZW1zLCBrZWVwcyBtZW4gaW4gc2FmZXR5LCB3aGlsZSB0aGUgbGFjayBvZiBpdCBoYXMgYnJvdWdodCBtYW55IGVyZSBub3cgdG8gZGVzdHJ1Y3Rpb24uCjwvdHJhbnNsYXRpb24+"
translation['3.1.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz5TZWNvbmRseSwgd2hlbiB5b3UgaGF2ZSBhcHBvaW50ZWQgYWxsIHRoZSBsZWFkZXJzIHRoYXQgYXJlIG5lY2Vzc2FyeSwgSSB0aGluayB5b3Ugd291bGQgcGVyZm9ybSBhIHZlcnkgb3Bwb3J0dW5lIGFjdCBpZiB5b3Ugc2hvdWxkIGdhdGhlciB0b2dldGhlciB0aGUgcmVzdCBvZiB0aGUgc29sZGllcnMgYWxzbyBhbmQgdHJ5IHRvIGVuY291cmFnZSB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IsIGFzIG1hdHRlcnMgc3RhbmQgbm93LCBwZXJoYXBzIHlvdSBoYXZlIG9ic2VydmVkIGZvciB5b3Vyc2VsdmVzIGluIHdoYXQgZGVqZWN0aW9uIHRoZXkgY2FtZSB0byB0aGVpciBxdWFydGVycyBhbmQgaW4gd2hhdCBkZWplY3Rpb24gdGhleSBwcm9jZWVkZWQgdG8gdGhlaXIgcGlja2V0IGR1dHk7IGFuZCBzbyBsb25nIGFzIHRoZXkgYXJlIGluIHRoaXMgc3RhdGUsIEkga25vdyBub3Qgd2hhdCB1c2Ugb25lIGNvdWxkIG1ha2Ugb2YgdGhlbSwgaWYgdGhlcmUgc2hvdWxkIGJlIG5lZWQgb2YgdGhlbSBlaXRoZXIgYnkgbmlnaHQgb3IgYnkgZGF5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz5JZiwgaG93ZXZlciwgd2UgY2FuIHR1cm4gdGhlIGN1cnJlbnQgb2YgdGhlaXIgbWluZHMsIHNvIHRoYXQgdGhleSBzaGFsbCBiZSB0aGlua2luZywgbm90IG1lcmVseSBvZiB3aGF0IHRoZXkgYXJlIHRvIHN1ZmZlciwgYnV0IGxpa2V3aXNlIG9mIHdoYXQgdGhleSBhcmUgZ29pbmcgdG8gZG8sIHRoZXkgd2lsbCBiZSBmYXIgbW9yZSBjaGVlcmZ1bC4KPC90cmFuc2xhdGlvbj4="
translation['3.1.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgeW91IHVuZGVyc3RhbmQsIEkgYW0gc3VyZSwgdGhhdCBpdCBpcyBuZWl0aGVyIG51bWJlcnMgbm9yIHN0cmVuZ3RoIHdoaWNoIHdpbnMgdmljdG9yaWVzIGluIHdhcjsgYnV0IHdoaWNoZXZlciBvZiB0aGUgdHdvIHNpZGVzIGl0IGJlIHdob3NlIHRyb29wcywgYnkgdGhlIGJsZXNzaW5nIG9mIHRoZSBnb2RzLCBhZHZhbmNlIHRvIHRoZSBhdHRhY2sgd2l0aCBzdG91dGVyIGhlYXJ0cywgYWdhaW5zdCB0aG9zZSB0cm9vcHMgdGhlaXIgYWR2ZXJzYXJpZXMgZ2VuZXJhbGx5IHJlZnVzZSB0byBzdGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['3.1.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaW4gbXkgb3duIGV4cGVyaWVuY2UsIGdlbnRsZW1lbiwgSSBoYXZlIG9ic2VydmVkIHRoaXMgb3RoZXIgZmFjdCwgdGhhdCB0aG9zZSB3aG8gYXJlIGFueGlvdXMgaW4gd2FyIHRvIHNhdmUgdGhlaXIgbGl2ZXMgaW4gYW55IHdheSB0aGV5IGNhbiwgYXJlIHRoZSB2ZXJ5IG1lbiB3aG8gdXN1YWxseSBtZWV0IHdpdGggYSBiYXNlIGFuZCBzaGFtZWZ1bCBkZWF0aDsgd2hpbGUgdGhvc2Ugd2hvIGhhdmUgcmVjb2duaXplZCB0aGF0IGRlYXRoIGlzIHRoZSBjb21tb24gYW5kIGluZXZpdGFibGUgcG9ydGlvbiBvZiBhbGwgbWFua2luZCBhbmQgdGhlcmVmb3JlIHN0cml2ZSB0byBtZWV0IGRlYXRoIG5vYmx5LCBhcmUgcHJlY2lzZWx5IHRob3NlIHdobyBhcmUgc29tZWhvdyBtb3JlIGxpa2VseSB0byByZWFjaCBvbGQgYWdlIGFuZCB3aG8gZW5qb3kgYSBoYXBwaWVyIGV4aXN0ZW5jZSB3aGlsZSB0aGV5IGRvIGxpdmUuCjwvdHJhbnNsYXRpb24+"
translation['3.1.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz5XZSwgdGhlbiwgdGFraW5nIHRvIGhlYXJ0IHRoaXMgbGVzc29uLCBzbyBzdWl0ZWQgdG8gdGhlIGNyaXNpcyB3aGljaCBub3cgY29uZnJvbnRzIHVzLCBtdXN0IGJlIGJyYXZlIG1lbiBvdXJzZWx2ZXMgYW5kIGNhbGwgZm9ydGggYnJhdmVyeSBpbiBvdXIgZmVsbG93cy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['3.1.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz5XaXRoIHRoZXNlIHdvcmRzIFhlbm9waG9uIGNlYXNlZCBzcGVha2luZy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgaGltIENoZWlyaXNvcGh1cyBzYWlkOiDigJxIaXRoZXJ0bywgWGVub3Bob24sIEkgaGF2ZSBrbm93biB5b3Ugb25seSB0byB0aGUgZXh0ZW50IG9mIGhhdmluZyBoZWFyZCB0aGF0IHlvdSB3ZXJlIGFuIEF0aGVuaWFuLCBidXQgbm93IEkgY29tbWVuZCB5b3UgYm90aCBmb3IgeW91ciB3b3JkcyBhbmQgeW91ciBkZWVkcywgYW5kIEkgc2hvdWxkIGJlIGdsYWQgaWYgd2UgaGFkIHZlcnkgbWFueSBvZiB5b3VyIHNvcnQ7IGZvciBpdCB3b3VsZCBiZSBhIGJsZXNzaW5nIHRvIHRoZSBlbnRpcmUgYXJteS4KPC90cmFuc2xhdGlvbj4="
translation['3.1.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm93LCBnZW50bGVtZW4s4oCdIGhlIHdlbnQgb24sIOKAnGxldCB1cyBub3QgZGVsYXk7IHdpdGhkcmF3IGFuZCBjaG9vc2UgeW91ciBjb21tYW5kZXJzIGF0IG9uY2UsIHlvdSB3aG8gbmVlZCB0aGVtLCBhbmQgYWZ0ZXIgbWFraW5nIHlvdXIgY2hvaWNlcyBjb21lIHRvIHRoZSBtaWRkbGUgb2YgdGhlIGNhbXAgYW5kIGJyaW5nIHdpdGggeW91IHRoZSBtZW4geW91IGhhdmUgc2VsZWN0ZWQ7IHRoZW4gd2Ugd2lsbCBjYWxsIGEgbWVldGluZyB0aGVyZSBvZiBhbGwgdGhlIHRyb29wcy4gQW5kIGxldCB1cyBtYWtlIHN1cmUs4oCdIGhlIGFkZGVkLCDigJx0aGF0IFRvbG1pZGVzLCB0aGUgaGVyYWxkLCBpcyBwcmVzZW50LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz5XaXRoIHRoZXNlIHdvcmRzIGhlIGdvdCB1cCBhdCBvbmNlLCB0aGF0IHRoZXJlIG1pZ2h0IGJlIG5vIGRlbGF5IGluIGNhcnJ5aW5nIG91dCB0aGUgbmVlZGZ1bCBtZWFzdXJlcy4gVGhlcmV1cG9uIHRoZSBjb21tYW5kZXJzIHdlcmUgY2hvc2VuLCBUaW1hc2lvbiB0aGUgRGFyZGFuaWFuIGluIHBsYWNlIG9mIENsZWFyY2h1cywgWGFudGhpY2xlcyB0aGUgQWNoYWVhbiBpbiBwbGFjZSBvZiBTb2NyYXRlcywgQ2xlYW5vciB0aGUgQXJjYWRpYW4gaW4gcGxhY2Ugb2YgQWdpYXMsIFBoaWxlc2l1cyB0aGUgQWNoYWVhbiBpbiBwbGFjZSBvZiBNZW5vbiwgYW5kIFhlbm9waG9uIHRoZSBBdGhlbmlhbiBpbiBwbGFjZSBvZiBQcm94ZW51cy4KPC90cmFuc2xhdGlvbj4="
translation['3.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZXNlIGVsZWN0aW9ucyBoYWQgYmVlbiBjb21wbGV0ZWQsIGFuZCBhcyBkYXkgd2FzIGp1c3QgYWJvdXQgYmVnaW5uaW5nIHRvIGJyZWFrLCB0aGUgY29tbWFuZGVycyBtZXQgaW4gdGhlIG1pZGRsZSBvZiB0aGUgY2FtcDsgYW5kIHRoZXkgcmVzb2x2ZWQgdG8gc3RhdGlvbiBvdXRwb3N0cyBhbmQgdGhlbiBjYWxsIGFuIGFzc2VtYmx5IG9mIHRoZSBzb2xkaWVycy4gQXMgc29vbiBhcyB0aGV5IGhhZCBjb21lIHRvZ2V0aGVyLCBDaGVpcmlzb3BodXMgdGhlIExhY2VkYWVtb25pYW4gYXJvc2UgZmlyc3QgYW5kIHNwb2tlIGFzIGZvbGxvd3M6CjwvdHJhbnNsYXRpb24+"
translation['3.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPuKAnEZlbGxvdy1zb2xkaWVycywgcGFpbmZ1bCBpbmRlZWQgaXMgb3VyIHByZXNlbnQgc2l0dWF0aW9uLCBzZWVpbmcgdGhhdCB3ZSBhcmUgcm9iYmVkIG9mIHN1Y2ggZ2VuZXJhbHMgYW5kIGNhcHRhaW5zIGFuZCBzb2xkaWVycywgYW5kLCBiZXNpZGVzLCB0aGF0IEFyaWFldXMgYW5kIGhpcyBtZW4sIHdobyB3ZXJlIGZvcm1lcmx5IG91ciBhbGxpZXMsIGhhdmUgYmV0cmF5ZWQgdXM7CjwvdHJhbnNsYXRpb24+"
translation['3.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPm5ldmVydGhlbGVzcywgd2UgbXVzdCBxdWl0IG91cnNlbHZlcyBsaWtlIGJyYXZlIG1lbiBhcyB3ZWxsIGFzIG1heSBiZSBpbiB0aGVzZSBjaXJjdW1zdGFuY2VzLCBhbmQgbXVzdCBub3QgeWllbGQsIGJ1dCByYXRoZXIgdHJ5IHRvIHNhdmUgb3Vyc2VsdmVzIGJ5IGdsb3Jpb3VzIHZpY3RvcnkgaWYgd2UgY2FuOyBvdGhlcndpc2UsIGxldCB1cyBhdCBsZWFzdCBkaWUgYSBnbG9yaW91cyBkZWF0aCwgYW5kIG5ldmVyIGZhbGwgaW50byB0aGUgaGFuZHMgb2Ygb3VyIGVuZW1pZXMgYWxpdmUuIEZvciBpbiB0aGF0IGNhc2UgSSB0aGluayB3ZSBzaG91bGQgbWVldCB0aGUgc29ydCBvZiBzdWZmZXJpbmdzIHRoYXQgSSBwcmF5IHRoZSBnb2RzIG1heSB2aXNpdCB1cG9uIG91ciBmb2VzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['3.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuIENsZWFub3IgdGhlIE9yY2hvbWVuaWFuIGFyb3NlIGFuZCBzcG9rZSBhcyBmb2xsb3dzOiDigJxDb21lLCBmZWxsb3ctc29sZGllcnMsIHlvdSBzZWUgdGhlIHBlcmp1cnkgYW5kIGltcGlldHkgb2YgdGhlIEtpbmc7IHlvdSBzZWUgbGlrZXdpc2UgdGhlIGZhaXRobGVzc25lc3Mgb2YgVGlzc2FwaGVybmVzLiBJdCB3YXMgVGlzc2FwaGVybmVzIHdobyBzYWlkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi4zLjE4IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuMy4xODwvYmlibD4uPC9ub3RlPiB0aGF0IGhlIHdhcyBhIG5laWdoYm91ciBvZiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuMy4xOCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjMuMTg8L2JpYmw+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiBhbmQgdGhhdCBoZSB3b3VsZCBkbyBoaXMgdXRtb3N0IHRvIHNhdmUgdXM7IGl0IHdhcyBub25lIG90aGVyIHRoYW4gaGUgd2hvIGdhdmUgdXMgaGlzIG9hdGhzIHRvIGNvbmZpcm0gdGhlc2Ugd29yZHM7IGFuZCB0aGVuIGhlLCBUaXNzYXBoZXJuZXMsIHRoZSB2ZXJ5IG1hbiB3aG8gaGFkIGdpdmVuIHN1Y2ggcGxlZGdlcywgd2FzIHRoZSB2ZXJ5IG1hbiB3aG8gZGVjZWl2ZWQgYW5kIHNlaXplZCBvdXIgZ2VuZXJhbHMuIE1vcmUgdGhhbiB0aGF0LCBoZSBkaWQgbm90IGV2ZW4gcmV2ZXJlbmNlIFpldXMsIHRoZSBnb2Qgb2YgaG9zcGl0YWxpdHk7IGluc3RlYWQsIGhlIGVudGVydGFpbmVkIENsZWFyY2h1cyBhdCBoaXMgb3duIHRhYmxlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi41LjI3IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuNS4yNzwvYmlibD48L25vdGU+IGFuZCB0aGVuIG1hZGUgdGhhdCB2ZXJ5IGFjdCB0aGUgbWVhbnMgb2YgZGVjZWl2aW5nIGFuZCBkZXN0cm95aW5nIHRoZSBnZW5lcmFscy4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjUuMjciIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi41LjI3PC9iaWJsPjwvdHJhbnNsYXRpb24+"
translation['3.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFyaWFldXMsIHRvbywgd2hvbSB3ZSB3ZXJlIHJlYWR5IHRvIG1ha2Uga2luZyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjEuNCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjEuNDwvYmlibD48L25vdGU+IHdpdGggd2hvbSB3ZSBleGNoYW5nZWQgcGxlZGdlczxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi4xLjQiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi4xLjQ8L2JpYmw+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi4yLjgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi4yLjg8L2JpYmw+PC9ub3RlPiBub3QgdG8gYmV0cmF5IG9uZSBhbm90aGVyLCBldmVuIGhlLCBzaG93aW5nIG5laXRoZXIgZmVhciBvZiB0aGUgZ29kcyBub3IgaG9ub3VyIGZvciB0aGUgbWVtb3J5IG9mIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi4yLjgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi4yLjg8L2JpYmw+PHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBkZWFkLCBhbHRob3VnaCBoZSB3YXMgbW9zdCBoaWdobHkgaG9ub3VyZWQgYnkgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBsaXZpbmcsIGhhcyBub3cgZ29uZSBvdmVyIHRvIHRoZSBiaXR0ZXJlc3QgZm9lcyBvZiB0aGF0IHNhbWUgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiwgYW5kIGlzIHRyeWluZyB0byB3b3JrIGhhcm0gdG8gdXMsIHRoZSBmcmllbmRzIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['3.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPldlbGwsIG1heSB0aGVzZSBtZW4gYmUgZHVseSBwdW5pc2hlZCBieSB0aGUgZ29kczsgd2UsIGhvd2V2ZXIsIHNlZWluZyB0aGVpciBkZWVkcywgbXVzdCBuZXZlciBhZ2FpbiBiZSBkZWNlaXZlZCBieSB0aGVtLCBidXQgbXVzdCBmaWdodCBhcyBzdG91dGx5IGFzIHdlIGNhbiBhbmQgbWVldCB3aGF0ZXZlciBmb3J0dW5lIHRoZSBnb2RzIG1heSBwbGVhc2UgdG8gc2VuZC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['3.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZXJldXBvbiBYZW5vcGhvbiBhcm9zZSwgYXJyYXllZCBmb3Igd2FyIGluIGhpcyBmaW5lc3QgZHJlc3MuIEZvciBoZSB0aG91Z2h0IHRoYXQgaWYgdGhlIGdvZHMgc2hvdWxkIGdyYW50IHZpY3RvcnksIHRoZSBmaW5lc3QgcmFpbWVudCB3YXMgc3VpdGVkIHRvIHZpY3Rvcnk7IGFuZCBpZiBpdCBzaG91bGQgYmUgaGlzIGZhdGUgdG8gZGllLCBpdCB3YXMgcHJvcGVyLCBoZSB0aG91Z2h0LCB0aGF0IGluYXNtdWNoIGFzIGhlIGhhZCBhY2NvdW50ZWQgaGlzIG9mZmljZSB3b3J0aHkgb2YgdGhlIG1vc3QgYmVhdXRpZnVsIGF0dGlyZSwgaW4gdGhpcyBhdHRpcmUgaGUgc2hvdWxkIG1lZXQgaGlzIGRlYXRoLiBIZSBiZWdhbiBoaXMgc3BlZWNoIGFzIGZvbGxvd3M6CjwvdHJhbnNsYXRpb24+"
translation['3.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPuKAnFRoZSBwZXJqdXJ5IGFuZCBmYWl0aGxlc3NuZXNzIG9mIHRoZSBiYXJiYXJpYW5zIGhhcyBiZWVuIHNwb2tlbiBvZiBieSBDbGVhbm9yIGFuZCBpcyB1bmRlcnN0b29kLCBJIGltYWdpbmUsIGJ5IHRoZSByZXN0IG9mIHlvdS4gSWYsIHRoZW4sIGl0IGlzIG91ciBkZXNpcmUgdG8gYmUgYWdhaW4gb24gdGVybXMgb2YgZnJpZW5kc2hpcCB3aXRoIHRoZW0sIHdlIG11c3QgbmVlZHMgZmVlbCBncmVhdCBkZXNwb25kZW5jeSB3aGVuIHdlIHNlZSB0aGUgZmF0ZSBvZiBvdXIgZ2VuZXJhbHMsIHdobyB0cnVzdGluZ2x5IHB1dCB0aGVtc2VsdmVzIGluIHRoZWlyIGhhbmRzOyBidXQgaWYgb3VyIGludGVudGlvbiBpcyB0byByZWx5IHVwb24gb3VyIGFybXMsIGFuZCBub3Qgb25seSB0byBpbmZsaWN0IHB1bmlzaG1lbnQgdXBvbiB0aGVtIGZvciB0aGVpciBwYXN0IGRlZWRzLCBidXQgaGVuY2Vmb3J0aCB0byB3YWdlIGltcGxhY2FibGUgd2FyIHdpdGggdGhlbSwgd2UgaGF2ZeKAlHRoZSBnb2RzIHdpbGxpbmfigJRtYW55IGZhaXIgaG9wZXMgb2YgZGVsaXZlcmFuY2Uu4oCdCjwvdHJhbnNsYXRpb24+"
translation['3.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBoZSB3YXMgc2F5aW5nIHRoaXMgYSBtYW4gc25lZXplZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHNuZWV6ZSB3YXMgYSBsdWNreSBzaWduLCBhbmQgcGFydGljdWxhcmx5IGx1Y2t5IGJlY2F1c2UgaXQgY2FtZSBhdCBqdXN0IHRoZSB0aW1lIHdoZW4gWGVub3Bob24gd2FzIHV0dGVyaW5nIHRoZSB3b3JkIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Dz4nPhM63z4HhvbfOsc+CLDwvZm9yZWlnbj4g4oCcZGVsaXZlcmFuY2Uu4oCdPC9ub3RlPiBhbmQgd2hlbiB0aGUgc29sZGllcnMgaGVhcmQgaXQsIHRoZXkgYWxsIHdpdGggb25lIGltcHVsc2UgbWFkZSBvYmVpc2FuY2UgdG8gdGhlIGdvZDs8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg8+Jz4TOt8+B4b23zrHPgiw8L2ZvcmVpZ24+IOKAnGRlbGl2ZXJhbmNlLuKAnTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5aZXVzIFNvdGVyLCB3aG8gd2FzIHByZXN1bWVkIChzZWUgYmVsb3cpIHRvIGhhdmUgc2VudCB0aGUgb21lbi48L25vdGU+IGFuZCBYZW5vcGhvbiBzYWlkLCDigJxJIG1vdmUsIGdlbnRsZW1lbiwgc2luY2UgYXQgdGhlIG1vbWVudCB3aGVuIHdlIHdlcmUgdGFsa2luZyBhYm91dCBkZWxpdmVyYW5jZSBhbiBvbWVuIGZyb20gWmV1cyB0aGUgU2F2aW91ciB3YXMgcmV2ZWFsZWQgdG8gdXMsIHRoYXQgd2UgbWFrZSBhIHZvdyB0byBzYWNyaWZpY2UgdG8gdGhhdCBnb2QgdGhhbmstb2ZmZXJpbmdzIGZvciBkZWxpdmVyYW5jZSBhcyBzb29uIGFzIHdlIHJlYWNoIGEgZnJpZW5kbHkgbGFuZDsgYW5kIHRoYXQgd2UgYWRkIGEgZnVydGhlciB2b3cgdG8gbWFrZSBzYWNyaWZpY2VzLCB0byB0aGUgZXh0ZW50IG9mIG91ciBhYmlsaXR5LCB0byB0aGUgb3RoZXIgZ29kcyBhbHNvLiBBbGwgd2hvIGFyZSBpbiBmYXZvdXIgb2YgdGhpcyBtb3Rpb24s4oCdIGhlIHNhaWQsIOKAnHdpbGwgcmFpc2UgdGhlaXIgaGFuZHMu4oCdIEFuZCBldmVyeSBtYW4gaW4gdGhlIGFzc2VtYmx5IHJhaXNlZCBoaXMgaGFuZC4gVGhlcmV1cG9uIHRoZXkgbWFkZSB0aGVpciB2b3dzIGFuZCBzdHJ1Y2sgdXAgdGhlIHBhZWFuLiBUaGVzZSBjZXJlbW9uaWVzIGR1bHkgcGVyZm9ybWVkLCBYZW5vcGhvbiBiZWdhbiBhZ2FpbiB3aXRoIHRoZXNlIHdvcmRzOgo8L3RyYW5zbGF0aW9uPg=="
translation['3.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSB3YXMgc2F5aW5nIHRoYXQgd2UgaGF2ZSBtYW55IGZhaXIgaG9wZXMgb2YgZGVsaXZlcmFuY2UuIEZvciwgaW4gdGhlIGZpcnN0IHBsYWNlLCB3ZSBhcmUgc3RhbmRpbmcgdHJ1ZSB0byB0aGUgb2F0aHMgd2UgdG9vayBpbiB0aGUgbmFtZSBvZiB0aGUgZ29kcywgd2hpbGUgb3VyIGVuZW1pZXMgaGF2ZSBwZXJqdXJlZCB0aGVtc2VsdmVzIGFuZCwgaW4gdmlvbGF0aW9uIG9mIHRoZWlyIG9hdGhzLCBoYXZlIGJyb2tlbiB0aGUgdHJ1Y2UuIFRoaXMgYmVpbmcgc28sIGl0IGlzIGZhaXIgdG8gYXNzdW1lIHRoYXQgdGhlIGdvZHMgYXJlIHRoZWlyIGZvZXMgYW5kIG91ciBhbGxpZXPigJRhbmQgdGhlIGdvZHMgYXJlIGFibGUgc3BlZWRpbHkgdG8gbWFrZSB0aGUgc3Ryb25nIHdlYWsgYW5kLCB3aGVuIHRoZXkgc28gd2lsbCwgZWFzaWx5IHRvIGRlbGl2ZXIgdGhlIHdlYWssIGV2ZW4gdGhvdWdoIHRoZXkgYmUgaW4gZGlyZSBwZXJpbHMuCjwvdHJhbnNsYXRpb24+"
translation['3.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5TZWNvbmRseSwgSSB3b3VsZCByZW1pbmQgeW91IG9mIHRoZSBwZXJpbHMgb2Ygb3VyIG93biBmb3JlZmF0aGVycywgdG8gc2hvdyB5b3Ugbm90IG9ubHkgdGhhdCBpdCBpcyB5b3VyIHJpZ2h0IHRvIGJlIGJyYXZlIG1lbiwgYnV0IHRoYXQgYnJhdmUgbWVuIGFyZSBkZWxpdmVyZWQsIHdpdGggdGhlIGhlbHAgb2YgdGhlIGdvZHMsIGV2ZW4gb3V0IG9mIG1vc3QgZHJlYWRmdWwgZGFuZ2Vycy4gRm9yIHdoZW4gdGhlIFBlcnNpYW5zIGFuZCB0aGVpciBmb2xsb3dlcnMgY2FtZSB3aXRoIGEgdmFzdCBhcnJheSB0byBibG90IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBvdXQgb2YgZXhpc3RlbmNlLCB0aGUgQXRoZW5pYW5zIGRhcmVkLCB1bmFpZGVkLCB0byB3aXRoc3RhbmQgdGhlbSwgYW5kIHdvbiB0aGUgdmljdG9yeS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SW4gdGhlIGJhdHRsZSBvZiBNYXJhdGhvbiwgPGRhdGUgYXV0aG5hbWU9Ii00OTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00OTAiPjQ5MDwvZGF0ZT4gQi5DLjwvbm90ZT4KPGRhdGUgYXV0aG5hbWU9Ii00OTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00OTAiPjQ5MDwvZGF0ZT4gQi5DLjwvdHJhbnNsYXRpb24+"
translation['3.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hpbGUgdGhleSBoYWQgdm93ZWQgdG8gQXJ0ZW1pcyB0aGF0IGZvciBldmVyeSBtYW4gdGhleSBtaWdodCBzbGF5IG9mIHRoZSBlbmVteSB0aGV5IHdvdWxkIHNhY3JpZmljZSBhIGdvYXQgdG8gdGhlIGdvZGRlc3MsIHRoZXkgd2VyZSB1bmFibGUgdG8gZmluZCBnb2F0cyBlbm91Z2g7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFjY29yZGluZyB0byBIZXJvZG90dXMgKDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhkdC4gNi4xMTciIHZhbGlkPSJ5ZXMiPkhkdC4gNi4xMTc8L2JpYmw+KSB0aGUgUGVyc2lhbiBkZWFkIG51bWJlcmVkIDYsNDAwLjwvbm90ZT4gc28gdGhleSByZXNvbHZlZCB0byBvZmZlciBmaXZlIGh1bmRyZWQgZXZlcnkgeWVhciwgYW5kIHRoaXMgc2FjcmlmaWNlIHRoZXkgYXJlIHBheWluZyBldmVuIHRvIHRoaXMgZGF5LgogICAgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGR0LiA2LjExNyIgdmFsaWQ9InllcyI+SGR0LiA2LjExNzwvYmlibD4pIHRoZSBQZXJzaWFuIGRlYWQgbnVtYmVyZWQgNiw0MDAuPC90cmFuc2xhdGlvbj4="
translation['3.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BZ2Fpbiwgd2hlbiBYZXJ4ZXMgYXQgYSBsYXRlciB0aW1lIGdhdGhlcmVkIHRvZ2V0aGVyIHRoYXQgY291bnRsZXNzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkhlcm9kb3R1cyAoPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGR0LiA3LjE4NSIgdmFsaWQ9InllcyI+SGR0LiA3LjE4NTwvYmlibD4pIHB1dHMgdGhlIHdob2xlIG51bWJlciBvZiBmaWdodGluZyBtZW4gaW4gWGVyeGVzJyBhcm1hbWVudCBhdCAyLDY0MSw2MTAuPC9ub3RlPiBob3N0IGFuZCBjYW1lIGFnYWluc3QgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGR0LiA3LjE4NSIgdmFsaWQ9InllcyI+SGR0LiA3LjE4NTwvYmlibD4pIHB1dHMgdGhlIHdob2xlIG51bWJlciBvZiBmaWdodGluZyBtZW4gaW4gWGVyeGVzJyBhcm1hbWVudCBhdCAyLDY0MSw2MTAuPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LCB0aGVuIHRvbyBvdXIgZm9yZWZhdGhlcnMgd2VyZSB2aWN0b3Jpb3VzLCBib3RoIGJ5IGxhbmQgYW5kIGJ5IHNlYSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Qnkgc2VhIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU2FsYW1pcywgQ3lwcnVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTYWxhbWlzLCBDeXBydXMiPlNhbGFtaXM8L3BsYWNlTmFtZT4gKDxkYXRlIGF1dGhuYW1lPSItNDgwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDgwIj40ODA8L2RhdGU+IEIuQy4pIGFuZCBieSBsYW5kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGxhdGFlYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsUGxhdGFlYSI+UGxhdGFlYTwvcGxhY2VOYW1lPiAoPGRhdGUgYXV0aG5hbWU9Ii00NzkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00NzkiPjQ3OTwvZGF0ZT4gQi5DLikuPC9ub3RlPiBvdmVyIHRoZSBmb3JlZmF0aGVycyBvZiBvdXIgZW5lbWllcy4gQXMgdG9rZW5zIG9mIHRoZXNlIHZpY3RvcmllcyB3ZSBtYXksIGluZGVlZCwgc3RpbGwgYmVob2xkIHRoZSB0cm9waGllcywgYnV0IHRoZSBzdHJvbmdlc3Qgd2l0bmVzcyB0byB0aGVtIGlzIHRoZSBmcmVlZG9tIG9mIHRoZSBzdGF0ZXMgaW4gd2hpY2ggeW91IHdlcmUgYm9ybiBhbmQgYnJlZDsgZm9yIHRvIG5vIGh1bWFuIGNyZWF0dXJlIGRvIHlvdSBwYXkgaG9tYWdlIGFzIG1hc3RlciwgYnV0IHRvIHRoZSBnb2RzIGFsb25lLgo8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNhbGFtaXMsIEN5cHJ1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU2FsYW1pcywgQ3lwcnVzIj5TYWxhbWlzPC9wbGFjZU5hbWU+ICg8ZGF0ZSBhdXRobmFtZT0iLTQ4MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQ4MCI+NDgwPC9kYXRlPiBCLkMuKSBhbmQgYnkgbGFuZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFBsYXRhZWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFBsYXRhZWEiPlBsYXRhZWE8L3BsYWNlTmFtZT4gKDxkYXRlIGF1dGhuYW1lPSItNDc5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDc5Ij40Nzk8L2RhdGU+IEIuQy4pLjwvdHJhbnNsYXRpb24+"
translation['3.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyBmcm9tIHN1Y2ggYW5jZXN0b3JzLCB0aGVuLCB0aGF0IHlvdSBhcmUgc3BydW5nLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgSSBhbSBmYXIgZnJvbSBpbnRlbmRpbmcgdG8gc2F5IHRoYXQgeW91IGRpc2dyYWNlIHRoZW07IGluIGZhY3QsIG5vdCBtYW55IGRheXMgYWdvIHlvdSBzZXQgeW91cnNlbHZlcyBpbiBhcnJheSBhZ2FpbnN0IHRoZXNlIGRlc2NlbmRhbnRzIG9mIHRob3NlIGFuY2llbnQgUGVyc2lhbnMgYW5kIHdlcmUgdmljdG9yaW91cywgd2l0aCB0aGUgYWlkIG9mIHRoZSBnb2RzLCBvdmVyIG1hbnkgdGltZXMgeW91ciBvd24gbnVtYmVycy4KPC90cmFuc2xhdGlvbj4="
translation['3.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlbiwgbWFyayB5b3UsIGl0IHdhcyBpbiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+JyBjb250ZXN0IGZvciB0aGUgdGhyb25lIHRoYXQgeW91IHByb3ZlZCB5b3Vyc2VsdmVzIGJyYXZlIG1lbjsgYnV0IG5vdywgd2hlbiB0aGUgc3RydWdnbGUgaXMgZm9yIHlvdXIgb3duIHNhZmV0eSwgaXQgaXMgc3VyZWx5IGZpdHRpbmcgdGhhdCB5b3Ugc2hvdWxkIGJlIGZhciBicmF2ZXIgYW5kIG1vcmUgemVhbG91cy4KPC90cmFuc2xhdGlvbj4="
translation['3.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgeW91IG91Z2h0IG5vdyB0byBiZSBtb3JlIGNvbmZpZGVudCBpbiBmYWNpbmcgdGhlIGVuZW15LiBGb3IgdGhlbiB5b3Ugd2VyZSB1bmFjcXVhaW50ZWQgd2l0aCB0aGVtLCB5b3Ugc2F3IHRoYXQgdGhlaXIgbnVtYmVycyB3ZXJlIGJleW9uZCBjb3VudGluZywgYW5kIHlvdSBuZXZlcnRoZWxlc3MgZGFyZWQsIHdpdGggYWxsIHRoZSBzcGlyaXQgb2YgeW91ciBmYXRoZXJzLCB0byBjaGFyZ2UgdXBvbiB0aGVtOyBidXQgbm93LCB3aGVuIHlvdSBoYXZlIGFscmVhZHkgbWFkZSBhY3R1YWwgdHJpYWwgb2YgdGhlbSBhbmQgZmluZCB0aGF0IHRoZXkgaGF2ZSBubyBkZXNpcmUsIGV2ZW4gdGhvdWdoIHRoZXkgYXJlIG1hbnkgdGltZXMgeW91ciBudW1iZXIsIHRvIGF3YWl0IHlvdXIgYXR0YWNrLCB3aGF0IHJlYXNvbiBjYW4gcmVtYWluIGZvciB5b3VyIGJlaW5nIGFmcmFpZCBvZiB0aGVtPwogICAgPC90cmFuc2xhdGlvbj4="
translation['3.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQWdhaW4sIGRvIG5vdCBzdXBwb3NlIHRoYXQgeW91IGFyZSB0aGUgd29yc2Ugb2ZmIGJlY2F1c2UgdGhlIGZvbGxvd2VycyBvZiBBcmlhZXVzLCB3aG8gd2VyZSBmb3JtZXJseSBtYXJzaGFsbGVkIHdpdGggdXMsIGhhdmUgbm93IGRlc2VydGVkIHVzLiBGb3IgdGhleSBhcmUgZXZlbiBncmVhdGVyIGNvd2FyZHMgdGhhbiB0aGUgbWVuIHdlIGRlZmVhdGVkOyBhdCBhbnkgcmF0ZSB0aGV5IHRvb2sgdG8gZmxpZ2h0IGJlZm9yZSB0aGVtLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjkuMzEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS45LjMxLTEwLjE8L2JpYmw+Ljwvbm90ZT4gbGVhdmluZyB1cyB0byBzaGlmdCBmb3Igb3Vyc2VsdmVzLiBBbmQgd2hlbiB3ZSBmaW5kIG1lbiB3aG8gYXJlIHJlYWR5IHRvIHNldCB0aGUgZXhhbXBsZSBvZiBmbGlnaHQsIGl0IGlzIGZhciBiZXR0ZXIgdG8gc2VlIHRoZW0gZHJhd24gdXAgd2l0aCB0aGUgZW5lbXkgdGhhbiBvbiBvdXIgb3duIHNpZGUuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS45LjMxIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuOS4zMS0xMC4xPC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['3.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IGlmIGFueW9uZSBvZiB5b3UgaXMgZGVzcG9uZGVudCBiZWNhdXNlIHdlIGFyZSB3aXRob3V0IGhvcnNlbWVuIHdoaWxlIHRoZSBlbmVteSBoYXZlIHBsZW50eSBhdCBoYW5kLCBsZXQgaGltIHJlZmxlY3QgdGhhdCB5b3VyIHRlbiB0aG91c2FuZCBob3JzZW1lbiBhcmUgbm90aGluZyBtb3JlIHRoYW4gdGVuIHRob3VzYW5kIG1lbjsgZm9yIG5vYm9keSBldmVyIGxvc3QgaGlzIGxpZmUgaW4gYmF0dGxlIGZyb20gdGhlIGJpdGUgb3Iga2ljayBvZiBhIGhvcnNlLCBidXQgaXQgaXMgdGhlIG1lbiB3aG8gZG8gd2hhdGV2ZXIgaXMgZG9uZSBpbiBiYXR0bGVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5Nb3Jlb3Zlciwgd2UgYXJlIG9uIGEgZmFyIHN1cmVyIGZvdW5kYXRpb24gdGhhbiB5b3VyIGhvcnNlbWVuOiB0aGV5IGFyZSBoYW5naW5nIG9uIHRoZWlyIGhvcnNlcycgYmFja3MsIGFmcmFpZCBub3Qgb25seSBvZiB1cywgYnV0IGFsc28gb2YgZmFsbGluZyBvZmY7IHdoaWxlIHdlLCBzdGFuZGluZyB1cG9uIHRoZSBncm91bmQsIHNoYWxsIHN0cmlrZSB3aXRoIGZhciBncmVhdGVyIGZvcmNlIGlmIGFueW9uZSBjb21lcyB1cG9uIHVzIGFuZCBzaGFsbCBiZSBmYXIgbW9yZSBsaWtlbHkgdG8gaGl0IHdob21zb2V2ZXIgd2UgYWltIGF0LiBJbiBvbmUgcG9pbnQgYWxvbmUgeW91ciBob3JzZW1lbiBoYXZlIHRoZSBhZHZhbnRhZ2XigJRmbGlnaHQgaXMgc2FmZXIgZm9yIHRoZW0gdGhhbiBpdCBpcyBmb3IgdXMuCjwvdHJhbnNsYXRpb24+"
translation['3.2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5TdXBwb3NlLCBob3dldmVyLCB0aGF0IHlvdSBkbyBub3QgbGFjayBjb25maWRlbmNlIGFib3V0IHRoZSBmaWdodGluZywgYnV0IGFyZSB0cm91YmxlZCBiZWNhdXNlIHlvdSBhcmUgbm8gbG9uZ2VyIHRvIGhhdmUgVGlzc2FwaGVybmVzIHRvIGd1aWRlIHlvdSBvciB0aGUgS2luZyB0byBwcm92aWRlIGEgbWFya2V0LiBJZiB0aGlzIGJlIHRoZSBjYXNlLCBJIGFzayB5b3UgdG8gY29uc2lkZXIgd2hldGhlciBpdCBpcyBiZXR0ZXIgdG8gaGF2ZSBUaXNzYXBoZXJuZXMgZm9yIGEgZ3VpZGUsIHRoZSBtYW4gd2hvIGlzIG1hbmlmZXN0bHkgcGxvdHRpbmcgYWdhaW5zdCB1cywgb3Igc3VjaCBwZW9wbGUgYXMgd2UgbWF5IG91cnNlbHZlcyBjYXB0dXJlIGFuZCBtYXkgb3JkZXIgdG8gc2VydmUgYXMgZ3VpZGVzLCBtZW4gd2hvIHdpbGwga25vdyB0aGF0IGlmIHRoZXkgbWFrZSBhbnkgbWlzdGFrZSBpbiBhdWdodCB0aGF0IGNvbmNlcm5zIHVzLCB0aGV5IHdpbGwgYmUgbWFraW5nIGEgbWlzdGFrZSBpbiB0aGF0IHdoaWNoIGNvbmNlcm5zIHRoZWlyIG93biBsaXZlcyBhbmQgbGltYnMuCjwvdHJhbnNsYXRpb24+"
translation['3.2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYXMgZm9yIHByb3Zpc2lvbnMsIGlzIGl0IHRoZSBiZXR0ZXIgcGxhbiB0byBidXkgZnJvbSB0aGUgbWFya2V0IHdoaWNoIHRoZXNlIGJhcmJhcmlhbnMgaGF2ZSBwcm92aWRlZOKAlHNtYWxsIG1lYXN1cmVzIGZvciBsYXJnZSBwcmljZXMsIHdoZW4gd2UgaGF2ZSBubyBtb25leSBsZWZ0LCBlaXRoZXLigJRvciB0byBhcHByb3ByaWF0ZSBmb3Igb3Vyc2VsdmVzLCBpbiBjYXNlIHdlIGFyZSB2aWN0b3Jpb3VzLCBhbmQgdG8gdXNlIGFzIGxhcmdlIGEgbWVhc3VyZSBhcyBlYWNoIG9uZSBvZiB1cyBwbGVhc2VzPwo8L3RyYW5zbGF0aW9uPg=="
translation['3.2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IGluIHRoZXNlIHBvaW50cywgbGV0IHVzIHNheSwgeW91IHJlYWxpemUgdGhhdCBvdXIgcHJlc2VudCBzaXR1YXRpb24gaXMgYmV0dGVyOyB5b3UgYmVsaWV2ZSwgaG93ZXZlciwgdGhhdCB0aGUgcml2ZXJzIGFyZSBhIGRpZmZpY3VsdHksIGFuZCB5b3UgdGhpbmsgeW91IHdlcmUgaW1tZW5zZWx5IGRlY2VpdmVkIHdoZW4geW91IGNyb3NzZWQgdGhlbTs8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+ZS5nLiwgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTMwODUwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMzA4NTAiPlRpZ3JpczwvcGxhY2VOYW1lPiAoPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjQuMTMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi40LjEzLTI0PC9iaWJsPikuPC9ub3RlPiB0aGVuIGNvbnNpZGVyIHdoZXRoZXIgdGhpcyBpcyBub3QgcmVhbGx5IGEgc3VycGFzc2luZ2x5IGZvb2xpc2ggdGhpbmcgdGhhdCB0aGUgYmFyYmFyaWFucyBoYXZlIGRvbmUuPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDExMzA4NTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTEzMDg1MCI+VGlncmlzPC9wbGFjZU5hbWU+ICg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuNC4xMyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjQuMTMtMjQ8L2JpYmw+KS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+dml6LiwgaW4gbGVhZGluZyB0aGUgR3JlZWtzIGFjcm9zcyAoaS5lLiB0byB0aGUgZWFzdGVybiBiYW5rIG9mKSB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDExMzA4NTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTEzMDg1MCI+VGlncmlzPC9wbGFjZU5hbWU+LiBGb3IsIFhlbm9waG9uIGFyZ3VlcyAoc2VlIGJlbG93KSwgdGhlIEdyZWVrcyB3aWxsIG5vdyBiZSBjb21wZWxsZWQgdG8gbWFyY2ggdG8gdGhlIHNvdXJjZSBvZiB0aGUgcml2ZXIgaW4gb3JkZXIgdG8gY3Jvc3MsIGFuZCBoZW5jZSB3aWxsIGJlIGxpdmluZyBvbiB0aGUgY291bnRyeSBzbyBtdWNoIHRoZSBsb25nZXIgYSB0aW1lLjwvbm90ZT4gRm9yIGFsbCByaXZlcnMsIGV2ZW4gdGhvdWdoIHRoZXkgYmUgaW1wYXNzYWJsZSBhdCBhIGRpc3RhbmNlIGZyb20gdGhlaXIgc291cmNlcywgYmVjb21lIHBhc3NhYmxlLCB3aXRob3V0IGV2ZW4gd2V0dGluZyB5b3VyIGtuZWVzLCBhcyB5b3UgYXBwcm9hY2ggdG93YXJkIHRoZSBzb3VyY2VzLgo8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTEzMDg1MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTMwODUwIj5UaWdyaXM8L3BsYWNlTmFtZT4uIEZvciwgWGVub3Bob24gYXJndWVzIChzZWUgYmVsb3cpLCB0aGUgR3JlZWtzIHdpbGwgbm93IGJlIGNvbXBlbGxlZCB0byBtYXJjaCB0byB0aGUgc291cmNlIG9mIHRoZSByaXZlciBpbiBvcmRlciB0byBjcm9zcywgYW5kIGhlbmNlIHdpbGwgYmUgbGl2aW5nIG9uIHRoZSBjb3VudHJ5IHNvIG11Y2ggdGhlIGxvbmdlciBhIHRpbWUuPC90cmFuc2xhdGlvbj4="
translation['3.2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IGFzc3VtZSB0aGF0IHRoZSByaXZlcnMgd2lsbCBub3QgYWZmb3JkIHVzIGEgY3Jvc3NpbmcgYW5kIHRoYXQgd2Ugc2hhbGwgZmluZCBubyBvbmUgdG8gZ3VpZGUgdXM7IGV2ZW4gaW4gdGhhdCBjYXNlIHdlIG91Z2h0IG5vdCB0byBiZSBkZXNwb25kZW50LiBGb3Igd2Uga25vdyB0aGF0IHRoZSBNeXNpYW5zLCB3aG9tIHdlIHNob3VsZCBub3QgYWRtaXQgdG8gYmUgYmV0dGVyIG1lbiB0aGFuIG91cnNlbHZlcywgaW5oYWJpdCBtYW55IGxhcmdlIGFuZCBwcm9zcGVyb3VzIGNpdGllcyBpbiB0aGUgS2luZydzIHRlcnJpdG9yeSwgd2Uga25vdyB0aGF0IHRoZSBzYW1lIGlzIHRydWUgb2YgdGhlIFBpc2lkaWFucywgYW5kIGFzIGZvciB0aGUgTHljYW9uaWFuczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5QZW9wbGVzIG9mIEFzaWEgTWlub3Igd2hvIHdlcmUgaW4gYWxtb3N0IGNvbnN0YW50IHJlYmVsbGlvbiBhZ2FpbnN0IFBlcnNpYW4gYXV0aG9yaXR5OyBjcC4gZXNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMi4xOSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjIuMTk8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuNS4xMyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjUuMTM8L2JpYmw+Ljwvbm90ZT4gd2UgZXZlbiBzYXcgd2l0aCBvdXIgb3duIGV5ZXMgdGhhdCB0aGV5IGhhZCBzZWl6ZWQgdGhlIHN0cm9uZ2hvbGRzIGluIHRoZSBwbGFpbnMgYW5kIHdlcmUgcmVhcGluZyBmb3IgdGhlbXNlbHZlcyB0aGUgbGFuZHMgb2YgdGhlc2UgUGVyc2lhbnM7CjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4yLjE5IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMi4xOTwvYmlibD4sIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi41LjEzIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuNS4xMzwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['3.2.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5zbywgaW4gb3VyIGNhc2UsIG15IG93biB2aWV3IHdvdWxkIGJlIHRoYXQgd2Ugb3VnaHQgbm90IHlldCB0byBsZXQgaXQgYmUgc2VlbiB0aGF0IHdlIGhhdmUgc2V0IG91dCBmb3IgaG9tZTsgd2Ugb3VnaHQsIHJhdGhlciwgdG8gYmUgbWFraW5nIG91ciBhcnJhbmdlbWVudHMgYXMgaWYgd2UgaW50ZW5kZWQgdG8gc2V0dGxlIGhlcmUuIEZvciBJIGtub3cgdGhhdCB0byB0aGUgTXlzaWFucyB0aGUgS2luZyB3b3VsZCBub3Qgb25seSBnaXZlIHBsZW50eSBvZiBndWlkZXMsIGJ1dCBwbGVudHkgb2YgaG9zdGFnZXMsIHRvIGd1YXJhbnRlZSBhIHNhZmUgY29uZHVjdCBmb3IgdGhlbSBvdXQgb2YgaGlzIGNvdW50cnk7IGluIGZhY3QsIGhlIHdvdWxkIGJ1aWxkIGEgcm9hZCBmb3IgdGhlbSwgZXZlbiBpZiB0aGV5IHdhbnRlZCB0byB0YWtlIHRoZWlyIGRlcGFydHVyZSBpbiBmb3VyLWhvcnNlIGNoYXJpb3RzLiBBbmQgSSBrbm93IHRoYXQgaGUgd291bGQgYmUgdGhyaWNlIGdsYWQgdG8gZG8gdGhlIHNhbWUgZm9yIHVzLCBpZiBoZSBzYXcgdGhhdCB3ZSB3ZXJlIHByZXBhcmluZyB0byBzdGF5IGhlcmUuCjwvdHJhbnNsYXRpb24+"
translation['3.2.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5JIHJlYWxseSBmZWFyLCBob3dldmVyLCB0aGF0IGlmIHdlIG9uY2UgbGVhcm4gdG8gbGl2ZSBpbiBpZGxlbmVzcyBhbmQgbHV4dXJ5LCBhbmQgdG8gY29uc29ydCB3aXRoIHRoZSB0YWxsIGFuZCBiZWF1dGlmdWwgd29tZW4gYW5kIG1haWRlbnMgb2YgdGhlc2UgTWVkZXMgYW5kIFBlcnNpYW5zLCB3ZSBtYXksIGxpa2UgdGhlIGxvdHVzLWVhdGVycyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QW4gYWxsdXNpb24gdG8gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBPZC4gOS45NCIgdmFsaWQ9InllcyI+SG9tLiBPZC4gOS45NDwvYmlibD4gZmYuPC9ub3RlPiBmb3JnZXQgb3VyIGhvbWV3YXJkIHdheS4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBPZC4gOS45NCIgdmFsaWQ9InllcyI+SG9tLiBPZC4gOS45NDwvYmlibD4gZmYuPC90cmFuc2xhdGlvbj4="
translation['3.2.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUsIEkgdGhpbmsgaXQgaXMgcmlnaHQgYW5kIHByb3BlciB0aGF0IG91ciBmaXJzdCBlbmRlYXZvdXIgc2hvdWxkIGJlIHRvIHJldHVybiB0byBvdXIga2luZHJlZCBhbmQgZnJpZW5kcyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIGFuZCB0byBwb2ludCBvdXQgdG8gdGhlIEdyZWVrcyB0aGF0IGl0IGlzIGJ5IHRoZWlyIG93biBjaG9pY2UgdGhhdCB0aGV5IGFyZSBwb29yOyBmb3IgdGhleSBjb3VsZCBicmluZyBoZXJlIHRoZSBwZW9wbGUgd2hvIGFyZSBub3cgbGl2aW5nIGEgaGFyZCBsaWZlIGF0IGhvbWUsIGFuZCBjb3VsZCBzZWUgdGhlbSBpbiB0aGUgZW5qb3ltZW50IG9mIHJpY2hlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSXQgaXMgcmVhbGx5IGEgcGxhaW4gZmFjdCwgZ2VudGxlbWVuLCB0aGF0IGFsbCB0aGVzZSBnb29kIHRoaW5ncyBiZWxvbmcgdG8gdGhvc2Ugd2hvIGhhdmUgdGhlIHN0cmVuZ3RoIHRvIHBvc3Nlc3MgdGhlbTsKPC90cmFuc2xhdGlvbj4="
translation['3.2.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5idXQgSSBtdXN0IGdvIG9uIHRvIGFub3RoZXIgcG9pbnQsIGhvdyB3ZSBjYW4gbWFyY2ggbW9zdCBzYWZlbHkgYW5kLCBpZiB3ZSBoYXZlIHRvIGZpZ2h0LCBjYW4gZmlnaHQgdG8gdGhlIGJlc3QgYWR2YW50YWdlLiBJbiB0aGUgZmlyc3QgcGxhY2UsIHRoZW4s4oCdIFhlbm9waG9uIHByb2NlZWRlZCwg4oCcSSB0aGluayB3ZSBzaG91bGQgYnVybiB1cCB0aGUgd2Fnb25zIHdoaWNoIHdlIGhhdmUsIHNvIHRoYXQgb3VyIGNhdHRsZSBtYXkgbm90IGJlIG91ciBjYXB0YWlucywgYnV0IHdlIGNhbiB0YWtlIHdoYXRldmVyIHJvdXRlIG1heSBiZSBiZXN0IGZvciB0aGUgYXJteS4gU2Vjb25kbHksIHdlIHNob3VsZCBidXJuIHVwIG91ciB0ZW50cyBhbHNvOyBmb3IgdGhlc2UsIGFnYWluLCBhcmUgYSBib3RoZXIgdG8gY2FycnksIGFuZCBubyBoZWxwIGF0IGFsbCBlaXRoZXIgZm9yIGZpZ2h0aW5nIG9yIGZvciBvYnRhaW5pbmcgcHJvdmlzaW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['3.2.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgbGV0IHVzIGFiYW5kb24gYWxsIG91ciBvdGhlciBzdXBlcmZsdW91cyBiYWdnYWdlLCBrZWVwaW5nIG9ubHkgc3VjaCBhcnRpY2xlcyBhcyB3ZSB1c2UgZm9yIHdhciwgb3IgaW4gZWF0aW5nIGFuZCBkcmlua2luZywgaW4gb3JkZXIgdGhhdCB3ZSBtYXkgaGF2ZSB0aGUgbGFyZ2VzdCBwb3NzaWJsZSBudW1iZXIgb2YgbWVuIHVuZGVyIGFybXMgYW5kIHRoZSBsZWFzdCBudW1iZXIgY2FycnlpbmcgYmFnZ2FnZS4gRm9yIHdoZW4gbWVuIGFyZSBjb25xdWVyZWQsIHlvdSBhcmUgYXdhcmUgdGhhdCBhbGwgdGhlaXIgcG9zc2Vzc2lvbnMgYmVjb21lIHRoZSBwcm9wZXJ0eSBvZiBvdGhlcnM7IGJ1dCBpZiB3ZSBhcmUgdmljdG9yaW91cywgd2UgbWF5IHJlZ2FyZCB0aGUgZW5lbXkgYXMgb3VyIHBhY2stYmVhcmVycy4KPC90cmFuc2xhdGlvbj4="
translation['3.2.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSXQgcmVtYWlucyBmb3IgbWUgdG8gbWVudGlvbiB0aGUgb25lIG1hdHRlciB3aGljaCBJIGJlbGlldmUgaXMgcmVhbGx5IG9mIHRoZSBncmVhdGVzdCBpbXBvcnRhbmNlLiBZb3Ugb2JzZXJ2ZSB0aGF0IG91ciBlbmVtaWVzIGRpZCBub3QgbXVzdGVyIHVwIGNvdXJhZ2UgdG8gYmVnaW4gaG9zdGlsaXRpZXMgYWdhaW5zdCB1cyB1bnRpbCB0aGV5IGhhZCBzZWl6ZWQgb3VyIGdlbmVyYWxzOyBmb3IgdGhleSBiZWxpZXZlZCB0aGF0IHNvIGxvbmcgYXMgd2UgaGFkIG91ciBjb21tYW5kZXJzIGFuZCB3ZXJlIG9iZWRpZW50IHRvIHRoZW0sIHdlIHdlcmUgYWJsZSB0byB3b3JzdCB0aGVtIGluIHdhciwgYnV0IHdoZW4gdGhleSBoYWQgZ290IHBvc3Nlc3Npb24gb2Ygb3VyIGNvbW1hbmRlcnMsIHRoZXkgYmVsaWV2ZWQgdGhhdCB0aGUgd2FudCBvZiBsZWFkZXJzaGlwIGFuZCBvZiBkaXNjaXBsaW5lIHdvdWxkIGJlIHRoZSBydWluIG9mIHVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.2.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUgb3VyIHByZXNlbnQgY29tbWFuZGVycyBtdXN0IHNob3cgdGhlbXNlbHZlcyBmYXIgbW9yZSB2aWdpbGFudCB0aGFuIHRoZWlyIHByZWRlY2Vzc29ycywgYW5kIHRoZSBtZW4gaW4gdGhlIHJhbmtzIG11c3QgYmUgZmFyIG1vcmUgb3JkZXJseSBhbmQgbW9yZSBvYmVkaWVudCB0byB0aGVpciBjb21tYW5kZXJzIG5vdyB0aGFuIHRoZXkgdXNlZCB0byBiZS4KPC90cmFuc2xhdGlvbj4="
translation['3.2.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5XZSBtdXN0IHBhc3MgYSB2b3RlIHRoYXQsIGluIGNhc2UgYW55b25lIGlzIGRpc29iZWRpZW50LCB3aG9ldmVyIG9mIHlvdSBtYXkgYmUgYXQgaGFuZCBhdCB0aGUgdGltZSBzaGFsbCBqb2luIHdpdGggdGhlIG9mZmljZXIgaW4gcHVuaXNoaW5nIGhpbTsgaW4gdGhpcyB3YXkgdGhlIGVuZW15IHdpbGwgZmluZCB0aGVtc2VsdmVzIG1pZ2h0aWx5IGRlY2VpdmVkOyBmb3IgdG8tZGF5IHRoZXkgd2lsbCBiZWhvbGQsIG5vdCBvbmUgQ2xlYXJjaHVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DbGVhcmNodXMgd2FzIG5vdG9yaW91c2x5IGEgc3Rlcm4gZGlzY2lwbGluYXJpYW47IGNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuNi44IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuNi44PC9iaWJsPiBmZi48L25vdGU+IGJ1dCB0ZW4gdGhvdXNhbmQsIHdobyB3aWxsIG5vdCBzdWZmZXIgYW55Ym9keSB0byBiZSBhIGJhZCBzb2xkaWVyLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuNi44IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuNi44PC9iaWJsPiBmZi48L3RyYW5zbGF0aW9uPg=="
translation['3.2.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaXQgaXMgdGltZSBub3cgdG8gYmUgYWN0aW5nIGluc3RlYWQgb2YgdGFsa2luZzsgZm9yIHBlcmhhcHMgdGhlIGVuZW15IHdpbGwgc29vbiBiZSBhdCBoYW5kLiBXaG9ldmVyLCB0aGVuLCB0aGlua3MgdGhhdCB0aGVzZSBwcm9wb3NhbHMgYXJlIGdvb2Qgc2hvdWxkIHJhdGlmeSB0aGVtIHdpdGggYWxsIHNwZWVkLCB0aGF0IHRoZXkgbWF5IGJlIGNhcnJpZWQgb3V0IGluIGFjdGlvbi4gQnV0IGlmIGFueSBvdGhlciBwbGFuIGlzIHRob3VnaHQgYmV0dGVyIHRoYW4gbWluZSwgbGV0IGFueW9uZSwgZXZlbiB0aG91Z2ggaGUgYmUgYSBwcml2YXRlIHNvbGRpZXIsIGZlZWwgZnJlZSB0byBwcmVzZW50IGl0OyBmb3IgdGhlIHNhZmV0eSBvZiBhbGwgaXMgdGhlIG5lZWQgb2YgYWxsLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['3.2.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyBDaGVpcmlzb3BodXMgc2FpZDog4oCcV2Ugc2hhbGwgYmUgYWJsZSB0byBjb25zaWRlciBwcmVzZW50bHkgd2hldGhlciB3ZSBuZWVkIHRvIGRvIGFueXRoaW5nIGVsc2UgYmVzaWRlcyB3aGF0IFhlbm9waG9uIHByb3Bvc2VzLCBidXQgb24gdGhlIHByb3Bvc2FscyB3aGljaCBoZSBoYXMgYWxyZWFkeSBtYWRlIEkgdGhpbmsgaXQgaXMgYmVzdCBmb3IgdXMgdG8gdm90ZSBhcyBzcGVlZGlseSBhcyBwb3NzaWJsZS4gV2hvZXZlciBpcyBpbiBmYXZvdXIgb2YgdGhlc2UgbWVhc3VyZXMsIGxldCBoaW0gcmFpc2UgaGlzIGhhbmQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['3.2.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGFsbCByYWlzZWQgdGhlaXIgaGFuZHMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZW4gWGVub3Bob24gYXJvc2Ugb25jZSBtb3JlIGFuZCBzYWlkOiDigJxHaXZlIGVhciwgZ2VudGxlbWVuLCB0byB0aGUgZnVydGhlciBwcm9wb3NhbHMgSSBoYXZlIHRvIHByZXNlbnQuIEl0IGlzIGNsZWFyIHRoYXQgd2UgbXVzdCBtYWtlIG91ciB3YXkgdG8gYSBwbGFjZSB3aGVyZSB3ZSBjYW4gZ2V0IHByb3Zpc2lvbnM7IGFuZCBJIGhlYXIgdGhhdCB0aGVyZSBhcmUgZmluZSB2aWxsYWdlcyBhdCBhIGRpc3RhbmNlIG9mIG5vdCBtb3JlIHRoYW4gdHdlbnR5IHN0YWRpYS4KPC90cmFuc2xhdGlvbj4="
translation['3.2.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5XZSBzaG91bGQgbm90IGJlIHN1cnByaXNlZCwgdGhlbiwgaWYgdGhlIGVuZW154oCUYWZ0ZXIgdGhlIGZhc2hpb24gb2YgY293YXJkbHkgZG9ncyB0aGF0IGNoYXNlIHBhc3NlcnMtYnkgYW5kIGJpdGUgdGhlbSwgaWYgdGhleSBjYW4sIGJ1dCBydW4gYXdheSBmcm9tIGFueW9uZSB3aG8gY2hhc2VzIHRoZW3igJRpZiB0aGUgZW5lbXkgaW4gdGhlIHNhbWUgd2F5IHNob3VsZCBmb2xsb3cgYXQgb3VyIGhlZWxzIGFzIHdlIHJldGlyZS4KPC90cmFuc2xhdGlvbj4="
translation['3.2.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5IZW5jZSBpdCB3aWxsIGJlIHNhZmVyLCBwZXJoYXBzLCBmb3IgdXMgdG8gbWFyY2ggd2l0aCB0aGUgaG9wbGl0ZXMgZm9ybWVkIGludG8gYSBob2xsb3cgc3F1YXJlLCBzbyB0aGF0IHRoZSBiYWdnYWdlIHRyYWluIGFuZCB0aGUgZ3JlYXQgY3Jvd2Qgb2YgY2FtcCBmb2xsb3dlcnMgbWF5IGJlIGluIGEgc2FmZXIgcGxhY2UuIElmLCB0aGVuLCBpdCBzaG91bGQgYmUgc2V0dGxlZCBhdCBvbmNlIHdobyBhcmUgdG8gbGVhZCB0aGUgc3F1YXJlIGFuZCBtYXJzaGFsIHRoZSB2YW4sIHdobyBhcmUgdG8gYmUgb24gZWl0aGVyIGZsYW5rLCBhbmQgd2hvIHRvIGd1YXJkIHRoZSByZWFyLCB3ZSBzaG91bGQgbm90IG5lZWQgdG8gYmUgdGFraW5nIGNvdW5zZWwgYXQgdGhlIHRpbWUgd2hlbiB0aGUgZW5lbXkgY29tZXMgdXBvbiB1cywgYnV0IHdlIHNob3VsZCBmaW5kIG91ciBtZW4gYXQgb25jZSBpbiB0aGVpciBwbGFjZXMgcmVhZHkgZm9yIGFjdGlvbi4KPC90cmFuc2xhdGlvbj4="
translation['3.2.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaWYgYW55b25lIHNlZXMgYW5vdGhlciBwbGFuIHdoaWNoIGlzIGJldHRlciwgbGV0IHVzIGZvbGxvdyB0aGF0IHBsYW47IGJ1dCBpZiBub3QsIEkgcHJvcG9zZSB0aGF0IENoZWlyaXNvcGh1cyB0YWtlIHRoZSBsZWFkLCBlc3BlY2lhbGx5IHNpbmNlIGhlIGlzIGEgTGFjZWRhZW1vbmlhbiwgdGhhdCB0aGUgdHdvIG9sZGVzdCBnZW5lcmFscyBoYXZlIGNoYXJnZSBvZiB0aGUgdHdvIGZsYW5rcywgYW5kIHRoYXQsIGZvciB0aGUgcHJlc2VudCwgd2Ugd2hvIGFyZSB0aGUgeW91bmdlc3QsIFRpbWFzaW9uIGFuZCBJLCBjb21tYW5kIHRoZSByZWFyLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.2.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZm9yIHRoZSBmdXR1cmUsIGFzIHdlIG1ha2UgdHJpYWwgb2YgdGhpcyBmb3JtYXRpb24gd2UgY2FuIGFkb3B0IHdoYXRldmVyIGNvdXJzZSBtYXkgc2VlbSBmcm9tIHRpbWUgdG8gdGltZSB0byBiZSBiZXN0LiBJZiBhbnlvbmUgc2VlcyBhIGJldHRlciBwbGFuLCBsZXQgaGltIHByZXNlbnQgaXQu4oCdIE5vIG9uZSBoYXZpbmcgYW55IG9wcG9zaW5nIHZpZXcgdG8gZXhwcmVzcywgWGVub3Bob24gc2FpZDog4oCcV2hvZXZlciBpcyBpbiBmYXZvdXIgb2YgdGhlc2UgbWVhc3VyZXMsIGxldCBoaW0gcmFpc2UgaGlzIGhhbmQu4oCdIFRoZSBtb3Rpb24gd2FzIGNhcnJpZWQuCjwvdHJhbnNsYXRpb24+"
translation['3.2.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz7igJxBbmQgbm93LOKAnSBoZSBjb250aW51ZWQsIOKAnHdlIG11c3QgZ28gYmFjayBhbmQgcHV0IGludG8gZXhlY3V0aW9uIHdoYXQgaGFzIGJlZW4gcmVzb2x2ZWQgdXBvbi4gQW5kIHdob2V2ZXIgYW1vbmcgeW91IGRlc2lyZXMgdG8gc2VlIGhpcyBmcmllbmRzIGFnYWluLCBsZXQgaGltIHJlbWVtYmVyIHRvIHNob3cgaGltc2VsZiBhIGJyYXZlIG1hbjsgZm9yIGluIG5vIG90aGVyIHdheSBjYW4gaGUgYWNjb21wbGlzaCB0aGlzIGRlc2lyZS4gQWdhaW4sIHdob2V2ZXIgaXMgZGVzaXJvdXMgb2Ygc2F2aW5nIGhpcyBsaWZlLCBsZXQgaGltIHN0cml2ZSBmb3IgdmljdG9yeTsgZm9yIGl0IGlzIHRoZSB2aWN0b3JzIHRoYXQgc2xheSBhbmQgdGhlIGRlZmVhdGVkIHRoYXQgYXJlIHNsYWluLiBPciBpZiBhbnlvbmUgbG9uZ3MgZm9yIHdlYWx0aCwgbGV0IGhpbSBhbHNvIHN0cml2ZSB0byBjb25xdWVyOyBmb3IgY29ucXVlcm9ycyBub3Qgb25seSBrZWVwIHRoZWlyIG93biBwb3NzZXNzaW9ucywgYnV0IGdhaW4gdGhlIHBvc3Nlc3Npb25zIG9mIHRoZSBjb25xdWVyZWQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['3.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGVzZSB3b3JkcyBvZiBYZW5vcGhvbidzIHRoZSBhc3NlbWJseSBhcm9zZSwgYW5kIGFsbCB3ZW50IGJhY2sgdG8gY2FtcCBhbmQgcHJvY2VlZGVkIHRvIGJ1cm4gdGhlIHdhZ29ucyBhbmQgdGhlIHRlbnRzLiBBcyBmb3IgdGhlIHN1cGVyZmx1b3VzIGFydGljbGVzIG9mIGJhZ2dhZ2UsIHdoYXRldmVyIGFueWJvZHkgbmVlZGVkIHRoZXkgc2hhcmVkIHdpdGggb25lIGFub3RoZXIsIGJ1dCB0aGUgcmVzdCB0aGV5IHRocmV3IGludG8gdGhlIGZpcmUuIFdoZW4gdGhleSBoYWQgZG9uZSBhbGwgdGhpcywgdGhleSBzZXQgYWJvdXQgcHJlcGFyaW5nIGJyZWFrZmFzdDsgYW5kIHdoaWxlIHRoZXkgd2VyZSBzbyBlbmdhZ2VkLCBNaXRocmFkYXRlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjUuMzUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi41LjM1PC9iaWJsPjwvbm90ZT4gYXBwcm9hY2hlZCB3aXRoIGFib3V0IHRoaXJ0eSBob3JzZW1lbiwgc3VtbW9uZWQgdGhlIEdyZWVrIGdlbmVyYWxzIHdpdGhpbiBlYXJzaG90LCBhbmQgc3Bva2UgYXMgZm9sbG93czoKPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjUuMzUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi41LjM1PC9iaWJsPjwvdHJhbnNsYXRpb24+"
translation['3.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPuKAnE1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIEkgd2FzIGZhaXRoZnVsIHRvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIGFzIHlvdSBrbm93IGZvciB5b3Vyc2VsdmVzLCBhbmQgSSBhbSBub3cgZnJpZW5kbHkgdG8geW91OyBpbmRlZWQsIEkgYW0gdGFycnlpbmcgaGVyZSBpbiBncmVhdCBmZWFyLiBUaGVyZWZvcmUgaWYgSSBzaG91bGQgc2VlIHRoYXQgeW91IHdlcmUgdGFraW5nIHNhbHV0YXJ5IG1lYXN1cmVzLCBJIHNob3VsZCBqb2luIHlvdSBhbmQgYnJpbmcgYWxsIG15IHJldGFpbmVycyB3aXRoIG1lLiBUZWxsIG1lLCB0aGVuLCB3aGF0IHlvdSBoYXZlIGluIG1pbmQsIGluIHRoZSBhc3N1cmFuY2UgdGhhdCBJIGFtIHlvdXIgZnJpZW5kIGFuZCB3ZWxsLXdpc2hlciwgYW5kIGFtIGRlc2lyb3VzIG9mIG1ha2luZyB0aGUgam91cm5leSBpbiBjb21wYW55IHdpdGggeW91LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['3.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBnZW5lcmFscyBoZWxkIGNvdW5jaWwgYW5kIHZvdGVkIHRvIHJldHVybiB0aGUgZm9sbG93aW5nIGFuc3dlciwgQ2hlaXJpc29waHVzIGFjdGluZyBhcyBzcG9rZXNtYW46IOKAnEl0IGlzIG91ciByZXNvbHZlLCBpbiBjYXNlIG5vIG9uZSBoaW5kZXJzIG91ciBob21ld2FyZCBtYXJjaCwgdG8gcHJvY2VlZCB0aHJvdWdoIHRoZSBjb3VudHJ5IGRvaW5nIHRoZSBsZWFzdCBwb3NzaWJsZSBkYW1hZ2UsIGJ1dCBpZiBhbnlvbmUgdHJpZXMgdG8gcHJldmVudCB1cyBmcm9tIG1ha2luZyB0aGUgam91cm5leSwgdG8gZmlnaHQgaXQgb3V0IHdpdGggaGltIHRvIHRoZSBiZXN0IG9mIG91ciBwb3dlci7igJ0KPC90cmFuc2xhdGlvbj4="
translation['3.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJldXBvbiBNaXRocmFkYXRlcyB1bmRlcnRvb2sgdG8gc2hvdyB0aGF0IHRoZXJlIHdhcyBubyBwb3NzaWJpbGl0eSBvZiB0aGVpciBlZmZlY3RpbmcgYSBzYWZlIHJldHVybiB1bmxlc3MgdGhlIEtpbmcgc28gcGxlYXNlZC4gVGhlbiBpdCBiZWNhbWUgY2xlYXIgdG8gdGhlIEdyZWVrcyB0aGF0IGhpcyBtaXNzaW9uIHdhcyBhIHRyZWFjaGVyb3VzIG9uZTsgaW5kZWVkLCBvbmUgb2YgVGlzc2FwaGVybmVzJyByZWxhdGl2ZXMgaGFkIGZvbGxvd2VkIGFsb25nLCB0byBzZWUgdGhhdCBoZSBrZXB0IGZhaXRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBnZW5lcmFscyBjb25zZXF1ZW50bHkgZGVjaWRlZCB0aGF0IGl0IHdhcyBiZXN0IHRvIHBhc3MgYSBkZWNyZWUgdGhhdCB0aGVyZSBzaG91bGQgYmUgbm8gbmVnb3RpYXRpb25zIHdpdGggdGhlIGVuZW15IGluIHRoaXMgd2FyIHNvIGxvbmcgYXMgdGhleSBzaG91bGQgYmUgaW4gdGhlIGVuZW15J3MgY291bnRyeS4gRm9yIHRoZSBiYXJiYXJpYW5zIGtlcHQgY29taW5nIGFuZCB0cnlpbmcgdG8gY29ycnVwdCB0aGUgc29sZGllcnM7IGluIHRoZSBjYXNlIG9mIG9uZSBjYXB0YWluLCBOaWNhcmNodXMgdGhlIEFyY2FkaWFuLCB0aGV5IGFjdHVhbGx5IHN1Y2NlZWRlZCwgYW5kIGhlIGRlY2FtcGVkIGR1cmluZyB0aGUgbmlnaHQsIHRha2luZyB3aXRoIGhpbSBhYm91dCB0d2VudHkgbWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZXkgdG9vayBicmVha2Zhc3QsIGNyb3NzZWQgdGhlIFphcGF0YXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi41LjEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi41LjE8L2JpYmw+Ljwvbm90ZT4gcml2ZXIsIGFuZCBzZXQgb3V0IG9uIHRoZSBtYXJjaCBpbiB0aGUgZm9ybWF0aW9uIGRlY2lkZWQgdXBvbiw8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuNS4xIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuNS4xPC9iaWJsPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy4yLjM2IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuMi4zNjwvYmlibD4uPC9ub3RlPiB3aXRoIHRoZSBiYWdnYWdlIGFuaW1hbHMgYW5kIHRoZSBjYW1wIGZvbGxvd2VycyBpbiB0aGUgbWlkZGxlIG9mIHRoZSBzcXVhcmUuIFRoZXkgaGFkIG5vdCBwcm9jZWVkZWQgZmFyIHdoZW4gTWl0aHJhZGF0ZXMgYXBwZWFyZWQgYWdhaW4sIGFjY29tcGFuaWVkIGJ5IGFib3V0IHR3byBodW5kcmVkIGhvcnNlbWVuIGFuZCBieSBib3dtZW4gYW5kIHNsaW5nZXJz4oCUZXhjZWVkaW5nbHkgYWN0aXZlIGFuZCBuaW1ibGUgdHJvb3Bz4oCUdG8gdGhlIG51bWJlciBvZiBmb3VyIGh1bmRyZWQuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy4yLjM2IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuMi4zNjwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['3.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkhlIGFwcHJvYWNoZWQgdGhlIEdyZWVrcyBhcyBpZiBoZSB3ZXJlIGEgZnJpZW5kLCBidXQgd2hlbiBoaXMgcGFydHkgaGFkIGdvdCBjbG9zZSBhdCBoYW5kLCBvbiBhIHN1ZGRlbiBzb21lIG9mIHRoZW0sIGhvcnNlIGFuZCBmb290IGFsaWtlLCBiZWdhbiBzaG9vdGluZyB3aXRoIHRoZWlyIGJvd3MgYW5kIG90aGVycyB3aXRoIHNsaW5ncywgYW5kIHRoZXkgaW5mbGljdGVkIHdvdW5kcy4gQW5kIHRoZSBHcmVlayByZWFyZ3VhcmQsIHdoaWxlIHN1ZmZlcmluZyBzZXZlcmVseSwgY291bGQgbm90IHJldGFsaWF0ZSBhdCBhbGw7IGZvciB0aGUgQ3JldGFuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMi45IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMi45PC9iaWJsPi4gVGhlIENyZXRhbnMgd2VyZSB0aGUgbW9zdCBmYW1vdXMgYXJjaGVycyBvZiBhbnRpcXVpdHkuPC9ub3RlPiBib3dtZW4gbm90IG9ubHkgaGFkIGEgc2hvcnRlciByYW5nZSB0aGFuIHRoZSBQZXJzaWFucywgYnV0IGJlc2lkZXMsIHNpbmNlIHRoZXkgaGFkIG5vIGFybW91ciwgdGhleSB3ZXJlIHNodXQgaW4gd2l0aGluIHRoZSBsaW5lcyBvZiB0aGUgaG9wbGl0ZXM7IGFuZCB0aGUgR3JlZWsgamF2ZWxpbi1tZW4gY291bGQgbm90IHRocm93IGZhciBlbm91Z2ggdG8gcmVhY2ggdGhlIGVuZW15J3Mgc2xpbmdlcnMuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4yLjkiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4yLjk8L2JpYmw+LiBUaGUgQ3JldGFucyB3ZXJlIHRoZSBtb3N0IGZhbW91cyBhcmNoZXJzIG9mIGFudGlxdWl0eS48L3RyYW5zbGF0aW9uPg=="
translation['3.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlhlbm9waG9uIGNvbnNlcXVlbnRseSBkZWNpZGVkIHRoYXQgdGhleSBtdXN0IHB1cnN1ZSB0aGUgUGVyc2lhbnMsIGFuZCB0aGlzIHRoZXkgZGlkLCB3aXRoIHN1Y2ggb2YgdGhlIGhvcGxpdGVzIGFuZCBwZWx0YXN0cyBhcyB3ZXJlIGd1YXJkaW5nIHRoZSByZWFyIHdpdGggaGltOyBidXQgaW4gdGhlaXIgcHVyc3VpdCB0aGV5IGZhaWxlZCB0byBjYXRjaCBhIHNpbmdsZSBtYW4gb2YgdGhlIGVuZW15Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGUgR3JlZWtzIGhhZCBubyBob3JzZW1lbiwgYW5kIHRoZWlyIGZvb3Qtc29sZGllcnMgd2VyZSBub3QgYWJsZSB0byBvdmVydGFrZSB0aGUgZW5lbXkncyBmb290LXNvbGRpZXJz4oCUc2luY2UgdGhlIGxhdHRlciBoYWQgYSBsb25nIHN0YXJ0IGluIHRoZWlyIGZsaWdodOKAlHdpdGhpbiBhIHNob3J0IGRpc3RhbmNlOyBhbmQgYSBsb25nIHB1cnN1aXQsIGZhciBhd2F5IGZyb20gdGhlIG1haW4gR3JlZWsgYXJteSwgd2FzIG5vdCBwb3NzaWJsZS4KPC90cmFuc2xhdGlvbj4="
translation['3.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgdGhlIGJhcmJhcmlhbiBob3JzZW1lbiBldmVuIHdoaWxlIHRoZXkgd2VyZSBpbiBmbGlnaHQgd291bGQgaW5mbGljdCB3b3VuZHMgYnkgc2hvb3RpbmcgYmVoaW5kIHRoZW0gZnJvbSB0aGVpciBob3JzZXM7IGFuZCB3aGF0ZXZlciBkaXN0YW5jZSB0aGUgR3JlZWtzIG1pZ2h0IGF0IGFueSB0aW1lIGNvdmVyIGluIHRoZWlyIHB1cnN1aXQsIGFsbCB0aGF0IGRpc3RhbmNlIHRoZXkgd2VyZSBvYmxpZ2VkIHRvIGZhbGwgYmFjayBmaWdodGluZy4KPC90cmFuc2xhdGlvbj4="
translation['3.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcmVzdWx0IHdhcyB0aGF0IGR1cmluZyB0aGUgd2hvbGUgZGF5IHRoZXkgdHJhdmVsbGVkIG5vdCBtb3JlIHRoYW4gdHdlbnR5LWZpdmUgc3RhZGlhLiBUaGV5IGRpZCBhcnJpdmUsIGhvd2V2ZXIsIHRvd2FyZHMgZXZlbmluZyBhdCB0aGUgdmlsbGFnZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gdGhvc2UgbWVudGlvbmVkIGluIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4yLjM0IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMi4zNDwvYmlibD4uPC9ub3RlPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4yLjM0IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMi4zNDwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhlcmUgYWdhaW4gdGhlcmUgd2FzIGRlc3BvbmRlbmN5LiBBbmQgQ2hlaXJpc29waHVzIGFuZCB0aGUgZWxkZXN0IG9mIHRoZSBnZW5lcmFscyBmb3VuZCBmYXVsdCB3aXRoIFhlbm9waG9uIGZvciBsZWF2aW5nIHRoZSBtYWluIGJvZHkgb2YgdGhlIGFybXkgdG8gdW5kZXJ0YWtlIGEgcHVyc3VpdCwgYW5kIHRodXMgZW5kYW5nZXJpbmcgaGltc2VsZiB3aXRob3V0IGJlaW5nIGFibGUsIGZvciBhbGwgdGhhdCwgdG8gZG8gdGhlIGVuZW15IGFueSBoYXJtLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIFhlbm9waG9uIGhlYXJkIHRoZWlyIHdvcmRzLCBoZSByZXBsaWVkIHRoYXQgdGhleSB3ZXJlIHJpZ2h0IGluIGZpbmRpbmcgZmF1bHQgd2l0aCBoaW0sIGFuZCB0aGF0IHRoZSBvdXRjb21lIGJvcmUgd2l0bmVzcyBvZiBpdHNlbGYgZm9yIHRoZWlyIHZpZXcuIOKAnEJ1dCzigJ0gaGUgY29udGludWVkLCDigJxJIHdhcyBjb21wZWxsZWQgdG8gcHVyc3VlIHdoZW4gSSBzYXcgdGhhdCBieSBrZWVwaW5nIG91ciBwbGFjZXMgd2Ugd2VyZSBzdWZmZXJpbmcgc2V2ZXJlbHkgYW5kIHdlcmUgc3RpbGwgdW5hYmxlIHRvIHN0cmlrZSBhIGJsb3cgb3Vyc2VsdmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BcyB0byB3aGF0IGhhcHBlbmVkLCBob3dldmVyLCB3aGVuIHdlIGRpZCBwdXJzdWUsIHlvdSBhcmUgcXVpdGUgcmlnaHQ6IHdlIHdlcmUgbm8gYmV0dGVyIGFibGUgdG8gaW5mbGljdCBoYXJtIHVwb24gdGhlIGVuZW15LCBhbmQgaXQgd2FzIG9ubHkgd2l0aCB0aGUgdXRtb3N0IGRpZmZpY3VsdHkgdGhhdCB3ZSBlZmZlY3RlZCBvdXIgb3duIHdpdGhkcmF3YWwuCjwvdHJhbnNsYXRpb24+"
translation['3.3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5MZXQgdXMgdGhhbmsgdGhlIGdvZHMsIHRoZXJlZm9yZSwgdGhhdCB0aGV5IGNhbWUsIG5vdCB3aXRoIGEgbGFyZ2UgZm9yY2UsIGJ1dCB3aXRoIGEgaGFuZGZ1bCwgc28gdGhhdCB3aXRob3V0IGRvaW5nIHVzIGFueSBncmVhdCBkYW1hZ2UgdGhleSBoYXZlIHJldmVhbGVkIG91ciBuZWVkcy4KPC90cmFuc2xhdGlvbj4="
translation['3.3.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYXQgcHJlc2VudCB0aGUgZW5lbXkgY2FuIHNob290IGFycm93cyBhbmQgc2xpbmcgc3RvbmVzIHNvIGZhciB0aGF0IG5laXRoZXIgb3VyIENyZXRhbiBib3dtZW4gbm9yIG91ciBqYXZlbGluLW1lbiBjYW4gcmVhY2ggdGhlbSBpbiByZXBseTsgYW5kIHdoZW4gd2UgcHVyc3VlIHRoZW0sIGEgbG9uZyBjaGFzZSwgYXdheSBmcm9tIG91ciBtYWluIGJvZHksIGlzIG91dCBvZiB0aGUgcXVlc3Rpb24sIGFuZCBpbiBhIHNob3J0IGNoYXNlIG5vIGZvb3Qtc29sZGllciwgZXZlbiBpZiBoZSBpcyBzd2lmdCwgY2FuIG92ZXJ0YWtlIGFub3RoZXIgZm9vdC1zb2xkaWVyIHdobyBoYXMgYSBib3ctc2hvdCB0aGUgc3RhcnQgb2YgaGltLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5IZW5jZSwgaWYgd2Ugc2hvdWxkIHByb3Bvc2UgdG8gcHV0IGFuIGVuZCB0byB0aGUgcG9zc2liaWxpdHkgb2YgdGhlaXIgaGFybWluZyB1cyBvbiBvdXIgbWFyY2gsIHdlIG5lZWQgc2xpbmdlcnMgb3Vyc2VsdmVzIGF0IG9uY2UsIGFuZCBob3JzZW1lbiBhbHNvLiBOb3cgSSBhbSB0b2xkIHRoYXQgdGhlcmUgYXJlIFJob2RpYW5zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlJob2RpYW4gc2xpbmdlcnMgd2VyZSBoYXJkbHkgbGVzcyBmYW1vdXMgdGhhbiBDcmV0YW4gYm93bWVuLjwvbm90ZT4gaW4gb3VyIGFybXksIHRoYXQgbW9zdCBvZiB0aGVtIHVuZGVyc3RhbmQgdGhlIHVzZSBvZiB0aGUgc2xpbmcsIGFuZCB0aGF0IHRoZWlyIG1pc3NpbGUgY2FycmllcyBubyBsZXNzIHRoYW4gdHdpY2UgYXMgZmFyIGFzIHRob3NlIGZyb20gdGhlIFBlcnNpYW4gc2xpbmdzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.3.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIGxhdHRlciBoYXZlIG9ubHkgYSBzaG9ydCByYW5nZSBiZWNhdXNlIHRoZSBzdG9uZXMgdGhhdCBhcmUgdXNlZCBpbiB0aGVtIGFyZSBhcyBsYXJnZSBhcyB0aGUgaGFuZCBjYW4gaG9sZDsgdGhlIFJob2RpYW5zLCBob3dldmVyLCBhcmUgdmVyc2VkIGFsc28gaW4gdGhlIGFydCBvZiBzbGluZ2luZyBsZWFkZW4gYnVsbGV0cy4KPC90cmFuc2xhdGlvbj4="
translation['3.3.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5JZiwgdGhlcmVmb3JlLCB3ZSBzaG91bGQgYXNjZXJ0YWluIHdobyBhbW9uZyB0aGVtIHBvc3Nlc3Mgc2xpbmdzLCBhbmQgc2hvdWxkIG5vdCBvbmx5IHBheSB0aGVzZSBwZW9wbGUgZm9yIHRoZWlyIHNsaW5ncywgYnV0IGxpa2V3aXNlIHBheSBhbnlvbmUgd2hvIGlzIHdpbGxpbmcgdG8gcGxhaXQgbmV3IG9uZXMsIGFuZCBpZiwgZnVydGhlcm1vcmUsIHdlIHNob3VsZCBkZXZpc2Ugc29tZSBzb3J0IG9mIGV4ZW1wdGlvbiBmb3IgdGhlIG1hbiB3aG8gd2lsbCB2b2x1bnRlZXIgdG8gc2VydmUgYXMgYSBzbGluZ2VyIGF0IGhpcyBhcHBvaW50ZWQgcG9zdCwgaXQgbWF5IGJlIHRoYXQgbWVuIHdpbGwgY29tZSBmb3J3YXJkIHdobyB3aWxsIGJlIGNhcGFibGUgb2YgaGVscGluZyB1cy4KPC90cmFuc2xhdGlvbj4="
translation['3.3.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgSSBvYnNlcnZlIHRoYXQgdGhlcmUgYXJlIGhvcnNlcyBpbiB0aGUgYXJteeKAlGEgZmV3IGF0IG15IG93biBxdWFydGVycywgb3RoZXJzIHRoYXQgbWFkZSBwYXJ0IG9mIENsZWFyY2h1cycgdHJvb3AgYW5kIHdlcmUgbGVmdCBiZWhpbmQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gd2hlbiBDbGVhcmNodXMnIHRyb29wZXJzIGRlc2VydGVkIHRvIHRoZSBLaW5nICg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuMi43IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuMi43PC9iaWJsPikuPC9ub3RlPiBhbmQgbWFueSBvdGhlcnMgdGhhdCBoYXZlIGJlZW4gdGFrZW4gZnJvbSB0aGUgZW5lbXkgYW5kIGFyZSB1c2VkIGFzIHBhY2stYW5pbWFscy4gSWYsIHRoZW4sIHdlIHNob3VsZCBwaWNrIG91dCBhbGwgdGhlc2UgaG9yc2VzLCByZXBsYWNpbmcgdGhlbSB3aXRoIG11bGVzLCBhbmQgc2hvdWxkIGVxdWlwIHRoZW0gZm9yIGNhdmFscnksIGl0IG1heSBiZSB0aGF0IHRoaXMgY2F2YWxyeSBhbHNvIHdpbGwgY2F1c2Ugc29tZSBhbm5veWFuY2UgdG8gdGhlIGVuZW15IHdoZW4gdGhleSBhcmUgaW4gZmxpZ2h0LuKAnQo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuMi43IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuMi43PC9iaWJsPikuPC90cmFuc2xhdGlvbj4="
translation['3.3.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVzZSBwcm9wb3NhbHMgYWxzbyB3ZXJlIGFkb3B0ZWQsIGFuZCBpbiB0aGUgY291cnNlIG9mIHRoYXQgbmlnaHQgYSBjb21wYW55IG9mIHR3byBodW5kcmVkIHNsaW5nZXJzIHdhcyBvcmdhbml6ZWQsIHdoaWxlIG9uIHRoZSBmb2xsb3dpbmcgZGF5IGhvcnNlcyBhbmQgaG9yc2VtZW4gdG8gdGhlIG51bWJlciBvZiBmaWZ0eSB3ZXJlIGV4YW1pbmVkIGFuZCBhY2NlcHRlZCwgYW5kIGplcmtpbnMgYW5kIGN1aXJhc3NlcyB3ZXJlIHByb3ZpZGVkIGZvciB0aGVtOyBhbmQgTHljaXVzLCB0aGUgc29uIG9mIFBvbHlzdHJhdHVzLCBhbiBBdGhlbmlhbiwgd2FzIHB1dCBpbiBjb21tYW5kIG9mIHRoZSB0cm9vcC4KPC90cmFuc2xhdGlvbj4="
translation['3.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGF0IGRheSB0aGV5IHJlbWFpbmVkIHF1aWV0LCBidXQgdGhlIG5leHQgbW9ybmluZyB0aGV5IHNldCBmb3J0aCwgYWZ0ZXIgcmlzaW5nIGVhcmxpZXIgdGhhbiB1c3VhbDsgZm9yIHRoZXJlIHdhcyBhIGdvcmdlIHRoZXkgaGFkIHRvIGNyb3NzLCBhbmQgdGhleSB3ZXJlIGFmcmFpZCB0aGF0IHRoZSBlbmVteSBtaWdodCBhdHRhY2sgdGhlbSBhcyB0aGV5IHdlcmUgY3Jvc3NpbmcuCjwvdHJhbnNsYXRpb24+"
translation['3.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkl0IHdhcyBvbmx5IGFmdGVyIHRoZXkgaGFkIGNyb3NzZWQgaXQsIGhvd2V2ZXIsIHRoYXQgTWl0aHJhZGF0ZXMgYXBwZWFyZWQgYWdhaW4sIGFjY29tcGFuaWVkIGJ5IGEgdGhvdXNhbmQgaG9yc2VtZW4gYW5kIGFib3V0IGZvdXIgdGhvdXNhbmQgYm93bWVuIGFuZCBzbGluZ2Vycy4gRm9yIHRoZXNlIHdlcmUgdGhlIG51bWJlcnMgaGUgaGFkIHJlcXVlc3RlZCBmcm9tIFRpc3NhcGhlcm5lcywgYW5kIHRoZXNlIG51bWJlcnMgaGUgaGFkIG9idGFpbmVkIHVwb24gaGlzIHByb21pc2UgdGhhdCwgaWYgc3VjaCBhIGZvcmNlIHdlcmUgZ2l2ZW4gaGltLCBoZSB3b3VsZCBkZWxpdmVyIHRoZSBHcmVla3MgaW50byBUaXNzYXBoZXJuZXMnIGhhbmRzOyBmb3IgaGUgaGFkIGNvbWUgdG8gZGVzcGlzZSB0aGVtLCBzZWVpbmcgdGhhdCBpbiBoaXMgZWFybGllciBhdHRhY2sgd2l0aCBhIHNtYWxsIGZvcmNlIGhlIGhhZCBkb25lIGEgZ3JlYXQgZGVhbCBvZiBoYXJtLCBhcyBoZSB0aG91Z2h0LCB3aXRob3V0IHN1ZmZlcmluZyBhbnkgbG9zcyBoaW1zZWxmLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoZW4sIGFjY29yZGluZ2x5LCB0aGUgR3JlZWtzIHdlcmUgYWNyb3NzIHRoZSBnb3JnZSBhbmQgYWJvdXQgZWlnaHQgc3RhZGlhIGJleW9uZCBpdCwgTWl0aHJhZGF0ZXMgYWxzbyBwcm9jZWVkZWQgdG8gbWFrZSB0aGUgY3Jvc3Npbmcgd2l0aCBoaXMgdHJvb3BzLiBOb3cgb3JkZXJzIGhhZCBhbHJlYWR5IGJlZW4gZ2l2ZW4gdG8gc3VjaCBvZiB0aGUgR3JlZWsgcGVsdGFzdHMgYW5kIGhvcGxpdGVzIGFzIHdlcmUgdG8gcHVyc3VlIHRoZSBlbmVteSwgYW5kIHRoZSBob3JzZW1lbiBoYWQgYmVlbiBkaXJlY3RlZCB0byBiZSBib2xkIGluIHVyZ2luZyB0aGUgcHVyc3VpdCwgaW4gdGhlIGFzc3VyYW5jZSB0aGF0IGFuIGFkZXF1YXRlIGZvcmNlIHdvdWxkIGZvbGxvdyBhdCB0aGVpciBoZWVscy4KPC90cmFuc2xhdGlvbj4="
translation['3.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24sIHRoZW4sIGFzIE1pdGhyYWRhdGVzIGhhZCBjYXVnaHQgdXAsIHNvIHRoYXQgaGlzIHNsaW5nLXN0b25lcyBhbmQgYXJyb3dzIHdlcmUganVzdCBiZWdpbm5pbmcgdG8gcmVhY2ggdGhlaXIgbWFya3MsIHRoZSB0cnVtcGV0IGdhdmUgaXRzIHNpZ25hbCB0byB0aGUgR3JlZWtzLCBhbmQgb24gdGhlIGluc3RhbnQgdGhlIGZvb3Qtc29sZGllcnMgd2hvIHdlcmUgdW5kZXIgb3JkZXJzIHJ1c2hlZCB1cG9uIHRoZSBlbmVteSBhbmQgdGhlIGhvcnNlbWVuIGNoYXJnZWQ7IGFuZCB0aGUgZW5lbXkgZGlkIG5vdCBhd2FpdCB0aGVpciBhdHRhY2ssIGJ1dCBmbGVkIHRvd2FyZHMgdGhlIGdvcmdlLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkluIHRoaXMgcHVyc3VpdCB0aGUgYmFyYmFyaWFucyBoYWQgbWFueSBvZiB0aGVpciBpbmZhbnRyeSBraWxsZWQsIHdoaWxlIG9mIHRoZWlyIGNhdmFscnkgbm8gbGVzcyB0aGFuIGVpZ2h0ZWVuIHdlcmUgdGFrZW4gYWxpdmUgaW4gdGhlIGdvcmdlLiBBbmQgdGhlIEdyZWVrIHRyb29wcywgdW5iaWRkZW4gc2F2ZSBieSB0aGVpciBvd24gaW1wdWxzZSwgZGlzZmlndXJlZCB0aGUgYm9kaWVzIG9mIHRoZSBkZWFkLCBpbiBvcmRlciB0aGF0IHRoZSBzaWdodCBvZiB0aGVtIG1pZ2h0IGluc3BpcmUgdGhlIHV0bW9zdCB0ZXJyb3IgaW4gdGhlIGVuZW15Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciBmYXJpbmcgdGh1cyBiYWRseSB0aGUgZW5lbXkgZGVwYXJ0ZWQsIHdoaWxlIHRoZSBHcmVla3MgY29udGludWVkIHRoZWlyIG1hcmNoIHVubW9sZXN0ZWQgdGhyb3VnaCB0aGUgcmVtYWluZGVyIG9mIHRoZSBkYXkgYW5kIGFycml2ZWQgYXQgdGhlIFRpZ3JpcyByaXZlci4KICAgIDwvdHJhbnNsYXRpb24+"
translation['3.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkhlcmUgd2FzIGEgbGFyZ2UgZGVzZXJ0ZWQgY2l0eTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGlzIGNpdHksIGNhbGxlZCBieSBYZW5vcGhvbiDigJxMYXJpc2Es4oCdIHdhcyB0aGUgZ3JlYXQgQXNzeXJpYW4gY2l0eSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjU5MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNTkzIj5DYWxhaDwvcGxhY2VOYW1lPiwgbWVudGlvbmVkIGluIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkdlbmVzaXM8L3RpdGxlPiwgWC4gMTEsIDEyLjwvbm90ZT47IGl0cyBuYW1lIHdhcyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjU5MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNTkzIj5DYWxhaDwvcGxhY2VOYW1lPiwgbWVudGlvbmVkIGluIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkdlbmVzaXM8L3RpdGxlPiwgWC4gMTEsIDEyLjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTGFyaXNhLEFlb2xpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTGFyaXNhLEFlb2xpcyI+TGFyaXNhPC9wbGFjZU5hbWU+LCBhbmQgaXQgd2FzIGluaGFiaXRlZCBpbiBhbmNpZW50IHRpbWVzIGJ5IHRoZSBNZWRlcy4gSXRzIHdhbGwgd2FzIHR3ZW50eS1maXZlIGZlZXQgaW4gYnJlYWR0aCBhbmQgYSBodW5kcmVkIGluIGhlaWdodCwgYW5kIHRoZSB3aG9sZSBjaXJjdWl0IG9mIHRoZSB3YWxsIHdhcyB0d28gcGFyYXNhbmdzLiBJdCB3YXMgYnVpbHQgb2YgY2xheSBicmlja3MsIGFuZCByZXN0ZWQgdXBvbiBhIHN0b25lIGZvdW5kYXRpb24gdHdlbnR5IGZlZXQgaGlnaC4KPC90cmFuc2xhdGlvbj4="
translation['3.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRoaXMgY2l0eSB3YXMgYmVzaWVnZWQgYnkgdGhlIGtpbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiB0aGUgR3JlYXQgKDxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii01NTgvLTUyOSIgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItNTU4IiB0bz0iLTUyOSI+NTU4PC9kYXRlUmFuZ2U+LTUyOSBCLkMuKS48L25vdGU+IG9mIHRoZSBQZXJzaWFucyBhdCB0aGUgdGltZSB3aGVuIHRoZSBQZXJzaWFucyB3ZXJlIHNlZWtpbmcgdG8gd3Jlc3QgZnJvbSB0aGUgTWVkZXMgdGhlaXIgZW1waXJlLCBidXQgaGUgY291bGQgaW4gbm8gd2F5IGNhcHR1cmUgaXQuIEEgY2xvdWQsIGhvd2V2ZXIsIG92ZXJzcHJlYWQgdGhlIHN1biBhbmQgaGlkIGl0IGZyb20gc2lnaHQgdW50aWwgdGhlIGluaGFiaXRhbnRzIGFiYW5kb25lZCB0aGVpciBjaXR5OyBhbmQgdGh1cyBpdCB3YXMgdGFrZW4uCjxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4gdGhlIEdyZWF0ICg8ZGF0ZVJhbmdlIGF1dGhuYW1lPSItNTU4Ly01MjkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnJvbT0iLTU1OCIgdG89Ii01MjkiPjU1ODwvZGF0ZVJhbmdlPi01MjkgQi5DLikuPC90cmFuc2xhdGlvbj4="
translation['3.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk5lYXIgYnkgdGhpcyBjaXR5IHdhcyBhIHB5cmFtaWQgb2Ygc3RvbmUsIGEgcGxldGhydW0gaW4gYnJlYWR0aCBhbmQgdHdvIHBsZXRocmEgaW4gaGVpZ2h0OyBhbmQgdXBvbiB0aGlzIHB5cmFtaWQgd2VyZSBtYW55IGJhcmJhcmlhbnMgd2hvIGhhZCBmbGVkIGF3YXkgZnJvbSB0aGUgbmVpZ2hib3VyaW5nIHZpbGxhZ2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnJvbSB0aGlzIHBsYWNlIHRoZXkgbWFyY2hlZCBvbmUgc3RhZ2UsIHNpeCBwYXJhc2FuZ3MsIHRvIGEgZ3JlYXQgc3Ryb25naG9sZCwgZGVzZXJ0ZWQgYW5kIGx5aW5nIGluIHJ1aW5zLiBUaGUgbmFtZSBvZiB0aGlzIGNpdHkgd2FzIE1lc3BpbGEsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBydWlucyB3aGljaCBYZW5vcGhvbiBzYXcgaGVyZSB3ZXJlIHRob3NlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE3OTk4IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTc5OTgiPk5pbmV2ZWg8L3BsYWNlTmFtZT4sIHRoZSBmYW1vdXMgY2FwaXRhbCBvZiB0aGUgQXNzeXJpYW4gRW1waXJlLiBJdCBpcyBjdXJpb3VzIHRvIGZpbmQgaGltIGRpc21pc3NpbmcgdGhpcyBncmVhdCBBc3N5cmlhbiBjaXR5IChhcyB3ZWxsIGFzIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNTkzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI1OTMiPkNhbGFoPC9wbGFjZU5hbWU+IGFib3ZlKSB3aXRoIHRoZSBjYXN1YWwgYW5kIG1pc2xlYWRpbmcgc3RhdGVtZW50IHRoYXQg4oCcaXQgd2FzIG9uY2UgaW5oYWJpdGVkIGJ5IHRoZSBNZWRlcy7igJ0gSW4gZmFjdCwgdGhlIGNhcHR1cmUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTc5OTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNzk5OCI+TmluZXZlaDwvcGxhY2VOYW1lPiBieSB0aGUgTWVkZXMgKGMuIDxkYXRlIGF1dGhuYW1lPSItNjAwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNjAwIj42MDA8L2RhdGU+IEIuQy4pIHdhcyB0aGUgcHJlY2lzZSBldmVudCB3aGljaCBjbG9zZWQgdGhlIGltcG9ydGFudCBwZXJpb2Qgb2YgaXRzIGhpc3RvcnksIGFuZCBpdCByZW1haW5lZCB1bmRlciB0aGUgY29udHJvbCBvZiB0aGUgTWVkZXMgb25seSBkdXJpbmcgdGhlIHN1Y2NlZWRpbmcgaGFsZi1jZW50dXJ5LCBpLmUuIHVudGlsIHRoZSBNZWRpYW4gRW1waXJlIHdhcyBpbiBpdHMgdHVybiBvdmVydGhyb3duIGJ5IHRoZSBQZXJzaWFucyAoPGRhdGUgYXV0aG5hbWU9Ii01NDkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii01NDkiPjU0OTwvZGF0ZT4gQi5DLikuIFhlbm9waG9uLCB0aGVuLCBnb2VzIGJ1dCBvbmUgdW5pbXBvcnRhbnQgc3RlcCBiYWNrd2FyZCBpbiBoaXMgaGlzdG9yaWNhbCBub3Rl4oCUcGVyaGFwcyBiZWNhdXNlIGhlIGRpZCBub3QgY2FyZSB0byBnbyBmYXJ0aGVyLCBwZXJoYXBzIGJlY2F1c2UgaGUgd2FzIHVuYWJsZSB0byBkbyBzby48L25vdGU+IGFuZCBpdCB3YXMgb25jZSBpbmhhYml0ZWQgYnkgdGhlIE1lZGVzLiBUaGUgZm91bmRhdGlvbiBvZiBpdHMgd2FsbCB3YXMgbWFkZSBvZiBwb2xpc2hlZCBzdG9uZSBmdWxsIG9mIHNoZWxscywgYW5kIHdhcyBmaWZ0eSBmZWV0IGluIGJyZWFkdGggYW5kIGZpZnR5IGluIGhlaWdodC4KPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTc5OTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNzk5OCI+TmluZXZlaDwvcGxhY2VOYW1lPiwgdGhlIGZhbW91cyBjYXBpdGFsIG9mIHRoZSBBc3N5cmlhbiBFbXBpcmUuIEl0IGlzIGN1cmlvdXMgdG8gZmluZCBoaW0gZGlzbWlzc2luZyB0aGlzIGdyZWF0IEFzc3lyaWFuIGNpdHkgKGFzIHdlbGwgYXMgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI1OTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjU5MyI+Q2FsYWg8L3BsYWNlTmFtZT4gYWJvdmUpIHdpdGggdGhlIGNhc3VhbCBhbmQgbWlzbGVhZGluZyBzdGF0ZW1lbnQgdGhhdCDigJxpdCB3YXMgb25jZSBpbmhhYml0ZWQgYnkgdGhlIE1lZGVzLuKAnSBJbiBmYWN0LCB0aGUgY2FwdHVyZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNzk5OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE3OTk4Ij5OaW5ldmVoPC9wbGFjZU5hbWU+IGJ5IHRoZSBNZWRlcyAoYy4gPGRhdGUgYXV0aG5hbWU9Ii02MDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii02MDAiPjYwMDwvZGF0ZT4gQi5DLikgd2FzIHRoZSBwcmVjaXNlIGV2ZW50IHdoaWNoIGNsb3NlZCB0aGUgaW1wb3J0YW50IHBlcmlvZCBvZiBpdHMgaGlzdG9yeSwgYW5kIGl0IHJlbWFpbmVkIHVuZGVyIHRoZSBjb250cm9sIG9mIHRoZSBNZWRlcyBvbmx5IGR1cmluZyB0aGUgc3VjY2VlZGluZyBoYWxmLWNlbnR1cnksIGkuZS4gdW50aWwgdGhlIE1lZGlhbiBFbXBpcmUgd2FzIGluIGl0cyB0dXJuIG92ZXJ0aHJvd24gYnkgdGhlIFBlcnNpYW5zICg8ZGF0ZSBhdXRobmFtZT0iLTU0OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTU0OSI+NTQ5PC9kYXRlPiBCLkMuKS4gWGVub3Bob24sIHRoZW4sIGdvZXMgYnV0IG9uZSB1bmltcG9ydGFudCBzdGVwIGJhY2t3YXJkIGluIGhpcyBoaXN0b3JpY2FsIG5vdGXigJRwZXJoYXBzIGJlY2F1c2UgaGUgZGlkIG5vdCBjYXJlIHRvIGdvIGZhcnRoZXIsIHBlcmhhcHMgYmVjYXVzZSBoZSB3YXMgdW5hYmxlIHRvIGRvIHNvLjwvdHJhbnNsYXRpb24+"
translation['3.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIHRoaXMgZm91bmRhdGlvbiB3YXMgYnVpbHQgYSB3YWxsIG9mIGJyaWNrLCBmaWZ0eSBmZWV0IGluIGJyZWFkdGggYW5kIGEgaHVuZHJlZCBpbiBoZWlnaHQ7IGFuZCB0aGUgY2lyY3VpdCBvZiB0aGUgd2FsbCB3YXMgc2l4IHBhcmFzYW5ncy4gSGVyZSwgYXMgdGhlIHN0b3J5IGdvZXMsIE1lZGVhLCB0aGUga2luZydzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFzdHlhZ2VzLCB0aGUgbGFzdCBraW5nIG9mIE1lZGlhLjwvbm90ZT4gd2lmZSwgdG9vayByZWZ1Z2UgYXQgdGhlIHRpbWUgd2hlbiB0aGUgTWVkZXMgd2VyZSBkZXByaXZlZCBvZiB0aGVpciBlbXBpcmUgYnkgdGhlIFBlcnNpYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UbyB0aGlzIGNpdHkgYWxzbyB0aGUga2luZyBvZiB0aGUgUGVyc2lhbnMgbGFpZCBzaWVnZSwgYnV0IGhlIHdhcyB1bmFibGUgdG8gY2FwdHVyZSBpdCBlaXRoZXIgYnkgbGVuZ3RoIG9mIHNpZWdlIG9yIGJ5IHN0b3JtOyBaZXVzLCBob3dldmVyLCB0ZXJyaWZpZWQgdGhlIGluaGFiaXRhbnRzIHdpdGggdGh1bmRlciwgYW5kIHRodXMgdGhlIGNpdHkgd2FzIHRha2VuLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnJvbSB0aGlzIHBsYWNlIHRoZXkgbWFyY2hlZCBvbmUgc3RhZ2UsIGZvdXIgcGFyYXNhbmdzLiBJbiB0aGUgY291cnNlIG9mIHRoaXMgc3RhZ2UgVGlzc2FwaGVybmVzIG1hZGUgaGlzIGFwcGVhcmFuY2UsIGhhdmluZyB1bmRlciBoaXMgY29tbWFuZCB0aGUgY2F2YWxyeSB3aGljaCBoZSBoYWQgaGltc2VsZiBicm91Z2h0IHdpdGggaGltLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIGZyb20gaGlzIHByb3ZpbmNlIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyMjk0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDIyOTQiPkFzaWEgTWlub3I8L3BsYWNlTmFtZT4sIHdoZW4gaGUgY2FtZSB0byBpbmZvcm0gQXJ0YXhlcnhlcyBvZiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+JyBkZXNpZ25zIGFnYWluc3QgaGltLiBTZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjIuNCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjIuNDwvYmlibD4uPC9ub3RlPiB0aGUgdHJvb3BzIG9mIE9yb250YXMsPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDIyOTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjI5NCI+QXNpYSBNaW5vcjwvcGxhY2VOYW1lPiwgd2hlbiBoZSBjYW1lIHRvIGluZm9ybSBBcnRheGVyeGVzIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4nIGRlc2lnbnMgYWdhaW5zdCBoaW0uIFNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMi40IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMi40PC9iaWJsPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi40LjgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi40Ljg8L2JpYmw+Ljwvbm90ZT4gd2hvIHdhcyBtYXJyaWVkIHRvIHRoZSBLaW5nJ3MgZGF1Z2h0ZXIsIHRoZSBiYXJiYXJpYW5zIHdob20gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjQuOCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjQuODwvYmlibD4uPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBoYWQgYnJvdWdodCB3aXRoIGhpbSBvbiBoaXMgdXB3YXJkIG1hcmNoLCBhbmQgdGhvc2Ugd2l0aCB3aG9tIHRoZSBLaW5nJ3MgYnJvdGhlciBoYWQgY29tZSB0byB0aGUgYWlkIG9mIHRoZSBLaW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuNC4yNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjQuMjU8L2JpYmw+Ljwvbm90ZT47IGJlc2lkZXMgdGhlc2UgY29udGluZ2VudHMgVGlzc2FwaGVybmVzIGhhZCBhbGwgdGhlIHRyb29wcyB0aGF0IHRoZSBLaW5nIGhhZCBnaXZlbiBoaW07IHRoZSByZXN1bHQgd2FzLCB0aGF0IGhpcyBhcm15IGFwcGVhcmVkIGV4Y2VlZGluZ2x5IGxhcmdlLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuNC4yNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjQuMjU8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['3.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGhlIGdvdCBuZWFyIHRoZSBHcmVla3MsIGhlIHN0YXRpb25lZCBzb21lIG9mIGhpcyBiYXR0YWxpb25zIGluIHRoZWlyIHJlYXIgYW5kIG1vdmVkIG90aGVycyBpbnRvIHBvc2l0aW9uIG9uIHRoZWlyIGZsYW5rczsgdGhlbiwgYWx0aG91Z2ggaGUgY291bGQgbm90IG11c3RlciB1cCB0aGUgY291cmFnZSB0byBjbG9zZSB3aXRoIHRoZW0gYW5kIGhhZCBubyBkZXNpcmUgdG8gcmlzayBhIGRlY2lzaXZlIGJhdHRsZSwgaGUgb3JkZXJlZCBoaXMgbWVuIHRvIGRpc2NoYXJnZSB0aGVpciBzbGluZ3MgYW5kIGxldCBmbHkgdGhlaXIgYXJyb3dzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGUgUmhvZGlhbiBzbGluZ2VycyBhbmQgdGhlIGJvd21lbiwgcG9zdGVkIGF0IGludGVydmFscyBoZXJlIGFuZCB0aGVyZSwgc2VudCBiYWNrIGFuIGFuc3dlcmluZyB2b2xsZXksIGFuZCBub3QgYSBtYW4gYW1vbmcgdGhlbSBtaXNzZWQgaGlzIG1hcmsgKGZvciBldmVuIGlmIGhlIGhhZCBiZWVuIHZlcnkgZWFnZXIgdG8gZG8gc28sIGl0IHdvdWxkIG5vdCBoYXZlIGJlZW4gZWFzeSksPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gb24gYWNjb3VudCBvZiB0aGUgZGVuc2UgdGhyb25nIG9mIHRoZSBlbmVteS48L25vdGU+IHRoZW4gVGlzc2FwaGVybmVzIHdpdGhkcmV3IG91dCBvZiByYW5nZSB3aXRoIGFsbCBzcGVlZCwgYW5kIHRoZSBvdGhlciBiYXR0YWxpb25zIGZvbGxvd2VkIGhpcyBleGFtcGxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Rm9yIHRoZSByZXN0IG9mIHRoZSBkYXkgdGhlIG9uZSBhcm15IGNvbnRpbnVlZCBpdHMgbWFyY2ggYW5kIHRoZSBvdGhlciBpdHMgcHVyc3VpdC4gQW5kIHRoZSBiYXJiYXJpYW5zIHdlcmUgbm8gbG9uZ2VyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDMuMy43IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuMy43LTEwPC9iaWJsPi48L25vdGU+IGFibGUgdG8gZG8gYW55IGhhcm0gYnkgdGhlaXIgc2tpcm1pc2hpbmcgYXQgbG9uZyByYW5nZTsgZm9yIHRoZSBSaG9kaWFuIHNsaW5nZXJzIGNhcnJpZWQgZmFydGhlciB3aXRoIHRoZWlyIG1pc3NpbGVzIHRoYW4gdGhlIFBlcnNpYW5zLCBmYXJ0aGVyIGV2ZW4gdGhhbiB0aGUgUGVyc2lhbiBib3dtZW4uCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy4zLjciIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy4zLjctMTA8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['3.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgUGVyc2lhbiBib3dzIGFyZSBhbHNvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlhlbm9waG9uIHJlbWFya3MgaW4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAzLjMuMTciIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy4zLjE3PC9iaWJsPiB1cG9uIHRoZSBsYXJnZSBzaXplIG9mIHRoZSBzdG9uZXMgZW1wbG95ZWQgaW4gdGhlIFBlcnNpYW4gc2xpbmdzLiBUaGUgd29yZCDigJxhbHNv4oCdICg8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6x4b22PC9mb3JlaWduPikgY2FuIGhhcmRseSByZWZlciBiYWNrIHRvIHRoYXQgcmVtYXJrLCBidXQgaXQgbWF5IGJlIHRoYXQgc29tZSBmdXJ0aGVyIG9ic2VydmF0aW9uIG9mIHRoZSBzYW1lIHNvcnQgaW4gdGhlIG9yaWdpbmFsIHRleHQgKHNlZSBjcml0aWNhbCBub3RlKSBvZiB0aGUgcHJlc2VudCBwYXNzYWdlIHNlcnZlZCB0byBpbnRyb2R1Y2Ugd2hhdCBYZW5vcGhvbiBub3cgZ29lcyBvbiB0byBzYXkgYWJvdXQgdGhlIFBlcnNpYW4gYm93cy4gSXQgaXMgaW1wbGllZCBpbiDigJxjb25zZXF1ZW50bHnigJ0gKDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9pc+Dz4TOtTwvZm9yZWlnbj4pIHRoYXQgdGhlIENyZXRhbiBib3dzIHdlcmUgb2YgYXBwcm94aW1hdGVseSB0aGUgc2FtZSBzaXplIGFzIHRob3NlIG9mIHRoZSBQZXJzaWFucy48L25vdGU+IGxhcmdlLCBhbmQgY29uc2VxdWVudGx5IHRoZSBDcmV0YW5zIGNvdWxkIG1ha2UgZ29vZCB1c2Ugb2YgYWxsIHRoZSBhcnJvd3MgdGhhdCBmZWxsIGludG8gdGhlaXIgaGFuZHM7IGluIGZhY3QsIHRoZXkgd2VyZSBjb250aW51YWxseSB1c2luZyB0aGUgZW5lbXkncyBhcnJvd3MsIGFuZCBwcmFjdGlzZWQgdGhlbXNlbHZlcyBpbiBsb25nLXJhbmdlIHdvcmsgYnkgc2hvb3RpbmcgdGhlbSBpbnRvIHRoZSBhaXIuPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAzLjMuMTciIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy4zLjE3PC9iaWJsPiB1cG9uIHRoZSBsYXJnZSBzaXplIG9mIHRoZSBzdG9uZXMgZW1wbG95ZWQgaW4gdGhlIFBlcnNpYW4gc2xpbmdzLiBUaGUgd29yZCDigJxhbHNv4oCdICg8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6x4b22PC9mb3JlaWduPikgY2FuIGhhcmRseSByZWZlciBiYWNrIHRvIHRoYXQgcmVtYXJrLCBidXQgaXQgbWF5IGJlIHRoYXQgc29tZSBmdXJ0aGVyIG9ic2VydmF0aW9uIG9mIHRoZSBzYW1lIHNvcnQgaW4gdGhlIG9yaWdpbmFsIHRleHQgKHNlZSBjcml0aWNhbCBub3RlKSBvZiB0aGUgcHJlc2VudCBwYXNzYWdlIHNlcnZlZCB0byBpbnRyb2R1Y2Ugd2hhdCBYZW5vcGhvbiBub3cgZ29lcyBvbiB0byBzYXkgYWJvdXQgdGhlIFBlcnNpYW4gYm93cy4gSXQgaXMgaW1wbGllZCBpbiDigJxjb25zZXF1ZW50bHnigJ0gKDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9pc+Dz4TOtTwvZm9yZWlnbj4pIHRoYXQgdGhlIENyZXRhbiBib3dzIHdlcmUgb2YgYXBwcm94aW1hdGVseSB0aGUgc2FtZSBzaXplIGFzIHRob3NlIG9mIHRoZSBQZXJzaWFucy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U28gdGhhdCB0aGUgYXJyb3dzIGNvdWxkIGJlIGVhc2lseSByZWNvdmVyZWQuPC9ub3RlPiBJbiB0aGUgdmlsbGFnZXMsIGZ1cnRoZXJtb3JlLCB0aGUgR3JlZWtzIGZvdW5kIGd1dCBpbiBhYnVuZGFuY2UgYW5kIGxlYWQgZm9yIHRoZSB1c2Ugb2YgdGhlaXIgc2xpbmdlcnMuCjwvdHJhbnNsYXRpb24+"
translation['3.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhhdCBkYXkncyBkb2luZ3MsIHdoZW4gdGhlIEdyZWVrcyBjYW1lIHVwb24gc29tZSB2aWxsYWdlcyBhbmQgcHJvY2VlZGVkIHRvIGVuY2FtcCwgdGhlIGJhcmJhcmlhbnMgd2l0aGRyZXcsIGhhdmluZyBoYWQgdGhlIHdvcnN0IG9mIGl0IGluIHRoZSBza2lybWlzaGluZy4gVGhlIGZvbGxvd2luZyBkYXkgdGhlIEdyZWVrcyByZW1haW5lZCBxdWlldCBhbmQgY29sbGVjdGVkIHN1cHBsaWVzLCBmb3IgdGhlcmUgd2FzIGFuIGFidW5kYW5jZSBvZiBjb3JuIGluIHRoZSB2aWxsYWdlcy4gT24gdGhlIGRheSB0aGVyZWFmdGVyIHRoZXkgY29udGludWVkIHRoZWlyIG1hcmNoIHRocm91Z2ggdGhlIHBsYWluLCBhbmQgVGlzc2FwaGVybmVzIGh1bmcgdXBvbiB0aGVpciByZWFyIGFuZCBrZXB0IHVwIHRoZSBza2lybWlzaGluZy4KPC90cmFuc2xhdGlvbj4="
translation['3.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBpdCB3YXMgdGhhdCB0aGUgR3JlZWtzIGZvdW5kIG91dCB0aGF0IGEgc3F1YXJlIGlzIGEgcG9vciBmb3JtYXRpb24gd2hlbiBhbiBlbmVteSBpcyBmb2xsb3dpbmcuIEZvciBpZiB0aGUgd2luZ3MgZHJhdyB0b2dldGhlciwgZWl0aGVyIGJlY2F1c2UgYSByb2FkIGlzIHVudXN1YWxseSBuYXJyb3cgb3IgYmVjYXVzZSBtb3VudGFpbnMgb3IgYSBicmlkZ2UgbWFrZSBpdCBuZWNlc3NhcnksIGl0IGlzIGluZXZpdGFibGUgdGhhdCB0aGUgaG9wbGl0ZXMgc2hvdWxkIGJlIHNxdWVlemVkIG91dCBvZiBsaW5lIGFuZCBzaG91bGQgbWFyY2ggd2l0aCBkaWZmaWN1bHR5LCBpbmFzbXVjaCBhcyB0aGV5IGFyZSBjcm93ZGVkIHRvZ2V0aGVyIGFuZCBhcmUgbGlrZXdpc2UgaW4gY29uZnVzaW9uOyB0aGUgcmVzdWx0IGlzIHRoYXQsIGJlaW5nIGluIGRpc29yZGVyLCB0aGV5IGFyZSBvZiBsaXR0bGUgc2VydmljZS4KPC90cmFuc2xhdGlvbj4="
translation['3.4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgd2hlbiB0aGUgd2luZ3MgZHJhdyBhcGFydCBhZ2FpbiwgdGhvc2Ugd2hvIHdlcmUgbGF0ZWx5IHNxdWVlemVkIG91dCBhcmUgaW5ldml0YWJseSBzY2F0dGVyZWQsIHRoZSBzcGFjZSBiZXR3ZWVuIHRoZSB3aW5ncyBpcyBsZWZ0IHVub2NjdXBpZWQsIGFuZCB0aGUgbWVuIGFmZmVjdGVkIGFyZSBvdXQgb2Ygc3Bpcml0cyB3aGVuIGFuIGVuZW15IGlzIGNsb3NlIGJlaGluZCB0aGVtLiBBZ2FpbiwgYXMgb2Z0ZW4gYXMgdGhlIGFybXkgaGFkIHRvIHBhc3Mgb3ZlciBhIGJyaWRnZSBvciBtYWtlIGFueSBvdGhlciBjcm9zc2luZywgZXZlcnkgbWFuIHdvdWxkIGh1cnJ5LCBpbiB0aGUgZGVzaXJlIHRvIGJlIHRoZSBmaXJzdCBvbmUgYWNyb3NzLCBhbmQgdGhhdCBnYXZlIHRoZSBlbmVteSBhIGZpbmUgY2hhbmNlIHRvIG1ha2UgYW4gYXR0YWNrLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSBnZW5lcmFscyBjYW1lIHRvIHJlYWxpemUgdGhlc2UgZGlmZmljdWx0aWVzLCB0aGV5IGZvcm1lZCBzaXggY29tcGFuaWVzIG9mIGEgaHVuZHJlZCBtZW4gZWFjaCBhbmQgcHV0IGEgY2FwdGFpbiBhdCB0aGUgaGVhZCBvZiBlYWNoIGNvbXBhbnksIGFkZGluZyBhbHNvIHBsYXRvb24gYW5kIHNxdWFkIGNvbW1hbmRlcnMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gY29tbWFuZGVycyBvZiBmaWZ0aWVzIGFuZCB0d2VudHktZml2ZXMsIG9yIG9mIGhhbGYgYW5kIHF1YXJ0ZXIgY29tcGFuaWVzLjwvbm90ZT4gVGhlbiBpbiBjYXNlIHRoZSB3aW5ncyBkcmV3IHRvZ2V0aGVyIG9uIHRoZSBtYXJjaCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGZvcm1hdGlvbiBpcyBhIGhvbGxvdyBzcXVhcmUuIFhlbm9waG9uIG1lYW5zIGJ5IOKAnHdpbmdz4oCdICg8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuuG9s8+BzrHPhM6xPC9mb3JlaWduPiwgaGVyZSBhbmQgYWJvdmUpIHRoZSByaWdodCBhbmQgbGVmdCBlbmRzIG9mIHRoZSBkaXZpc2lvbiB3aGljaCBmb3JtZWQgdGhlIGZyb250IG9mIHRoZSBzcXVhcmUsIGFuZCBieSDigJxmbGFua3PigJ0gKDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+AzrvOtc+Fz4HOseG9tzwvZm9yZWlnbj4pIHRoZSBkaXZpc2lvbnMgd2hpY2ggZm9ybWVkIHRoZSBzaWRlcyBvZiB0aGUgc3F1YXJlLiBBcHBhcmVudGx5IHRocmVlIG9mIHRoZSBzcGVjaWFsIGNvbXBhbmllcyB3ZXJlIHN0YXRpb25lZCBhdCB0aGUgbWlkZGxlIG9mIHRoZSBmcm9udCBzaWRlIG9mIHRoZSBzcXVhcmUgKGNwLiA0MyBiZWxvdykgYW5kIHRoZSBvdGhlciB0aHJlZSBpbiB0aGUgY29ycmVzcG9uZGluZyBwb3NpdGlvbiBhdCB0aGUgcmVhci48L25vdGU+IHRoZXNlIGNvbXBhbmllcyB3b3VsZCBkcm9wIGJhY2ssIHNvIGFzIG5vdCB0byBpbnRlcmZlcmUgd2l0aCB0aGUgd2luZ3MsIGFuZCBmb3IgdGhlIHRpbWUgYmVpbmcgd291bGQgbW92ZSBhbG9uZyBiZWhpbmQgdGhlIHdpbmdzOwo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuuG9s8+BzrHPhM6xPC9mb3JlaWduPiwgaGVyZSBhbmQgYWJvdmUpIHRoZSByaWdodCBhbmQgbGVmdCBlbmRzIG9mIHRoZSBkaXZpc2lvbiB3aGljaCBmb3JtZWQgdGhlIGZyb250IG9mIHRoZSBzcXVhcmUsIGFuZCBieSDigJxmbGFua3PigJ0gKDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+AzrvOtc+Fz4HOseG9tzwvZm9yZWlnbj4pIHRoZSBkaXZpc2lvbnMgd2hpY2ggZm9ybWVkIHRoZSBzaWRlcyBvZiB0aGUgc3F1YXJlLiBBcHBhcmVudGx5IHRocmVlIG9mIHRoZSBzcGVjaWFsIGNvbXBhbmllcyB3ZXJlIHN0YXRpb25lZCBhdCB0aGUgbWlkZGxlIG9mIHRoZSBmcm9udCBzaWRlIG9mIHRoZSBzcXVhcmUgKGNwLiA0MyBiZWxvdykgYW5kIHRoZSBvdGhlciB0aHJlZSBpbiB0aGUgY29ycmVzcG9uZGluZyBwb3NpdGlvbiBhdCB0aGUgcmVhci48L3RyYW5zbGF0aW9uPg=="
translation['3.4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgd2hlbiB0aGUgZmxhbmtzIG9mIHRoZSBzcXVhcmUgZHJldyBhcGFydCBhZ2FpbiwgdGhleSB3b3VsZCBmaWxsIHVwIHRoZSBzcGFjZSBiZXR3ZWVuIHRoZSB3aW5ncywgYnkgY29tcGFuaWVzIGluIGNhc2UgdGhpcyBzcGFjZSB3YXMgcmF0aGVyIG5hcnJvdywgYnkgcGxhdG9vbnMgaW4gY2FzZSBpdCB3YXMgYnJvYWRlciwgb3IsIGlmIGl0IHdhcyB2ZXJ5IGJyb2FkLCBieSBzcXVhZHM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHNxdWFkLCBvciBxdWFydGVyIGNvbXBhbnksIGNvbnNpc3Rpbmcgb2YgMjUgbWVuIChpLmUuIDI0ICB0aGUgbGVhZGVyKSwgbm9ybWFsbHkgbWFyY2hlZCB0aHJlZSBhYnJlYXN0LCBpLmUuIHdpdGggYSBmcm9udCBvZiB0aHJlZSBhbmQgYSBkZXB0aCBvZiBlaWdodC4gVGhlIGNvbXBhbnkgbWlnaHQgYmUgZm9ybWVkIGluIGFueSBvbmUgb2YgdGhyZWUgd2F5czogKGEpIG9uZSBzcXVhZCBmcm9udCBhbmQgZm91ciBkZWVwLCAoYikgdHdvIHNxdWFkcyBmcm9udCBhbmQgdHdvIGRlZXAsIG9yIChjKSBmb3VyIHNxdWFkcyBmcm9udCBhbmQgb25lIGRlZXAuIFRocmVlIGNvbXBhbmllcyByYW5nZWQgYWxvbmdzaWRlIG9uZSBhbm90aGVyIGluIGZvcm1hdGlvbiAoYSkgd291bGQgdGh1cyBoYXZlIGEgZnJvbnQgb2YgdGhyZWUgc3F1YWRzIG9yIG5pbmUgbWVuLCBpbiBmb3JtYXRpb24gKGIpIGEgZnJvbnQgb2YgZWlnaHRlZW4gbWVuLCBhbmQgaW4gZm9ybWF0aW9uIChjKSBhIGZyb250IG9mIHRoaXJ0eS1zaXggbWVuLiBJdCBpcyB0aGVzZSB0aHJlZSBkaXNwb3NpdGlvbnMgb2YgdGhlIHRocmVlIHNwZWNpYWwgY29tcGFuaWVzIGF0IHRoZSBmcm9udCBvZiB0aGUgc3F1YXJlIHdoaWNoIFhlbm9waG9uIHRlcm1zLCByZXNwZWN0aXZlbHksIOKAnGJ5IGNvbXBhbmllcyzigJ0g4oCcYnkgcGxhdG9vbnMs4oCdIGFuZCDigJxieSBzcXVhZHMu4oCdPC9ub3RlPuKAlHRoZSBpZGVhIGJlaW5nLCB0byBoYXZlIHRoZSBnYXAgZmlsbGVkIHVwIGluIGFueSBldmVudC4KPC90cmFuc2xhdGlvbj4="
translation['3.4.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgaXQgdGhlIGFybXkgaGFkIHRvIG1ha2Ugc29tZSBjcm9zc2luZyBvciB0byBwYXNzIG92ZXIgYSBicmlkZ2UsIHRoZXJlIHdhcyBubyBjb25mdXNpb24sIGJ1dCBlYWNoIGNvbXBhbnkgY3Jvc3NlZCBvdmVyIGluIGl0cyB0dXJuOyBhbmQgaWYgYW55IGhlbHAgd2FzIG5lZWRlZCBpbiBhbnkgcGFydCBvZiB0aGUgYXJteSwgdGhlc2UgdHJvb3BzIHdvdWxkIG1ha2UgdGhlaXIgd2F5IHRvIHRoZSBzcG90LiBJbiB0aGlzIGZhc2hpb24gdGhlIEdyZWVrcyBwcm9jZWVkZWQgZm91ciBzdGFnZXMuCjwvdHJhbnNsYXRpb24+"
translation['3.4.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gdGhlIGNvdXJzZSBvZiB0aGUgZmlmdGggc3RhZ2UgdGhleSBjYXVnaHQgc2lnaHQgb2YgYSBwYWxhY2Ugb2Ygc29tZSBzb3J0LCB3aXRoIG1hbnkgdmlsbGFnZXMgcm91bmQgYWJvdXQgaXQsIGFuZCB0aGV5IG9ic2VydmVkIHRoYXQgdGhlIHJvYWQgdG8gdGhpcyBwbGFjZSBwYXNzZWQgb3ZlciBoaWdoIGhpbGxzLCB3aGljaCBzdHJldGNoZWQgZG93biBmcm9tIHRoZSBtb3VudGFpbiBhdCB3aG9zZSBmb290IHRoZSB2aWxsYWdlcyB3ZXJlIHNpdHVhdGVkLiBBbmQgdGhlIEdyZWVrcyB3ZXJlIHdlbGwgcGxlYXNlZCB0byBzZWUgdGhlIGhpbGxzLCBhcyB3YXMgbmF0dXJhbCBjb25zaWRlcmluZyB0aGF0IHRoZSBlbmVteSdzIGZvcmNlIHdhcyBjYXZhbHJ5Ozxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5XaGljaCBpcyBtb3N0IGVmZmVjdGl2ZSBpbiBhIGxldmVsIGNvdW50cnkuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz53aGVuLCBob3dldmVyLCBpbiB0aGVpciBtYXJjaCBvdXQgb2YgdGhlIHBsYWluIHRoZXkgaGFkIG1vdW50ZWQgdG8gdGhlIHRvcCBvZiB0aGUgZmlyc3QgaGlsbCwgYW5kIHdlcmUgZGVzY2VuZGluZyBpdCwgc28gYXMgdG8gYXNjZW5kIHRoZSBuZXh0LCBhdCB0aGlzIG1vbWVudCB0aGUgYmFyYmFyaWFucyBjYW1lIHVwb24gdGhlbSBhbmQgZG93biBmcm9tIHRoZSBoaWxsdG9wIGRpc2NoYXJnZWQgdGhlaXIgbWlzc2lsZXMgYW5kIHNsaW5nLXN0b25lcyBhbmQgYXJyb3dzLCBmaWdodGluZyB1bmRlciB0aGUgbGFzaC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+TGlrZSBYZXJ4ZXMnIHRyb29wcyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZXJtb3B5bGFlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUaGVybW9weWxhZSI+VGhlcm1vcHlsYWU8L3BsYWNlTmFtZT4gKDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhkdC4gNy4yMjMiIHZhbGlkPSJ5ZXMiPkhkdC4gNy4yMjM8L2JpYmw+KS48L25vdGU+CjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVGhlcm1vcHlsYWUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRoZXJtb3B5bGFlIj5UaGVybW9weWxhZTwvcGxhY2VOYW1lPiAoPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGR0LiA3LjIyMyIgdmFsaWQ9InllcyI+SGR0LiA3LjIyMzwvYmlibD4pLjwvdHJhbnNsYXRpb24+"
translation['3.4.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IG5vdCBvbmx5IGluZmxpY3RlZCBtYW55IHdvdW5kcywgYnV0IHRoZXkgZ290IHRoZSBiZXR0ZXIgb2YgdGhlIEdyZWVrIGxpZ2h0IHRyb29wcyBhbmQgc2h1dCB0aGVtIHVwIHdpdGhpbiB0aGUgbGluZXMgb2YgdGhlIGhvcGxpdGVzLCBzbyB0aGF0IHRoZXNlIHRyb29wcywgYmVpbmcgbWluZ2xlZCB3aXRoIHRoZSBub24tY29tYmF0YW50cywgd2VyZSBlbnRpcmVseSB1c2VsZXNzIHRocm91Z2hvdXQgdGhhdCBkYXksIHNsaW5nZXJzIGFuZCBib3dtZW4gYWxpa2UuCjwvdHJhbnNsYXRpb24+"
translation['3.4.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGUgR3JlZWtzLCBoYXJkLXByZXNzZWQgYXMgdGhleSB3ZXJlLCB1bmRlcnRvb2sgdG8gcHVyc3VlIHRoZSBhdHRhY2tpbmcgZm9yY2UsIHRoZXkgcmVhY2hlZCB0aGUgaGlsbHRvcCBidXQgc2xvd2x5LCBiZWluZyBoZWF2eSB0cm9vcHMsIHdoaWxlIHRoZSBlbmVteSBzcHJhbmcgcXVpY2tseSBvdXQgb2YgcmVhY2g7CjwvdHJhbnNsYXRpb24+"
translation['3.4.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgZXZlcnkgdGltZSB0aGV5IHJldHVybmVkIGZyb20gYSBwdXJzdWl0IHRvIGpvaW4gdGhlIG1haW4gYXJteSwgdGhleSBzdWZmZXJlZCBhZ2FpbiBpbiB0aGUgc2FtZSB3YXkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gYXMgZGVzY3JpYmVkIGluIDI1LTI2Ljwvbm90ZT4gT24gdGhlIHNlY29uZCBoaWxsIHRoZSBzYW1lIGV4cGVyaWVuY2VzIHdlcmUgcmVwZWF0ZWQsIGFuZCBoZW5jZSBhZnRlciBhc2NlbmRpbmcgdGhlIHRoaXJkIGhpbGwgdGhleSBkZWNpZGVkIG5vdCB0byBzdGlyIHRoZSB0cm9vcHMgZnJvbSBpdHMgY3Jlc3QgdW50aWwgdGhleSBoYWQgbGVkIHVwIGEgZm9yY2Ugb2YgcGVsdGFzdHMgZnJvbSB0aGUgcmlnaHQgZmxhbmsgb2YgdGhlIHNxdWFyZSB0byBhIHBvc2l0aW9uIG9uIHRoZSBtb3VudGFpbi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy40LjI0IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuNC4yNDwvYmlibD48L25vdGU+CjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy40LjI0IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuNC4yNDwvYmlibD48L3RyYW5zbGF0aW9uPg=="
translation['3.4.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIHRoaXMgZm9yY2UgaGFkIGdvdCBhYm92ZSB0aGUgaG9zdGlsZSB0cm9vcHMgdGhhdCB3ZXJlIGhhbmdpbmcgdXBvbiB0aGUgR3JlZWsgcmVhciwgdGhlIGxhdHRlciBkZXNpc3RlZCBmcm9tIGF0dGFja2luZyB0aGUgR3JlZWsgYXJteSBpbiBpdHMgZGVzY2VudCwgZm9yIGZlYXIgdGhhdCB0aGV5IG1pZ2h0IGJlIGN1dCBvZmYgYW5kIGZpbmQgdGhlbXNlbHZlcyBlbmNsb3NlZCBvbiBib3RoIHNpZGVzIGJ5IHRoZWlyIGZvZXMuCjwvdHJhbnNsYXRpb24+"
translation['3.4.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGlzIHdheSB0aGUgR3JlZWtzIGNvbnRpbnVlZCB0aGVpciBtYXJjaCBmb3IgdGhlIHJlbWFpbmRlciBvZiB0aGUgZGF5LCB0aGUgb25lIGRpdmlzaW9uIGJ5IHRoZSByb2FkIGxlYWRpbmcgb3ZlciB0aGUgaGlsbHMgd2hpbGUgdGhlIG90aGVyIGZvbGxvd2VkIGEgcGFyYWxsZWwgY291cnNlIGFsb25nIHRoZSBtb3VudGFpbiBzbG9wZSwgYW5kIHNvIGFycml2ZWQgYXQgdGhlIHZpbGxhZ2VzLiBUaGVyZSB0aGV5IGFwcG9pbnRlZCBlaWdodCBzdXJnZW9ucywgZm9yIHRoZSB3b3VuZGVkIHdlcmUgbWFueS4KPC90cmFuc2xhdGlvbj4="
translation['3.4.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gdGhlc2UgdmlsbGFnZXMgdGhleSByZW1haW5lZCBmb3IgdGhyZWUgZGF5cywgbm90IG9ubHkgZm9yIHRoZSBzYWtlIG9mIHRoZSB3b3VuZGVkLCBidXQgbGlrZXdpc2UgYmVjYXVzZSB0aGV5IGhhZCBwcm92aXNpb25zIGluIGFidW5kYW5jZeKAlGZsb3VyLCB3aW5lLCBhbmQgZ3JlYXQgc3RvcmVzIG9mIGJhcmxleSB0aGF0IGhhZCBiZWVuIGNvbGxlY3RlZCBmb3IgaG9yc2VzLCBhbGwgdGhlc2Ugc3VwcGxpZXMgaGF2aW5nIGJlZW4gZ2F0aGVyZWQgdG9nZXRoZXIgYnkgdGhlIGFjdGluZyBzYXRyYXAgb2YgdGhlIGRpc3RyaWN0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgZm91cnRoIGRheSB0aGV5IHByb2NlZWRlZCB0byBkZXNjZW5kIGludG8gdGhlIHBsYWluLiBCdXQgd2hlbiBUaXNzYXBoZXJuZXMgYW5kIGhpcyBjb21tYW5kIG92ZXJ0b29rIHRoZW0sIG5lY2Vzc2l0eSB0YXVnaHQgdGhlbSB0byBlbmNhbXAgaW4gdGhlIGZpcnN0IHZpbGxhZ2UgdGhleSBjYXVnaHQgc2lnaHQgb2YsIGFuZCBub3QgdG8gY29udGludWUgdGhlIHBsYW4gb2YgbWFyY2hpbmcgYW5kIGZpZ2h0aW5nIGF0IHRoZSBzYW1lIHRpbWU7IGZvciBhIGxhcmdlIG51bWJlciBvZiB0aGUgR3JlZWtzIHdlcmUgaG9ycyBkZSBjb21iYXQsIG5vdCBvbmx5IHRoZSB3b3VuZGVkLCBidXQgYWxzbyB0aG9zZSB3aG8gd2VyZSBjYXJyeWluZyB0aGVtIGFuZCB0aGUgbWVuIHdobyB0b29rIGluIGNoYXJnZSB0aGUgYXJtcyBvZiB0aGVzZSBjYXJyaWVycy4KPC90cmFuc2xhdGlvbj4="
translation['3.4.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgaGFkIGVuY2FtcGVkLCBhbmQgdGhlIGJhcmJhcmlhbnMsIGFwcHJvYWNoaW5nIHRvd2FyZCB0aGUgdmlsbGFnZSwgZXNzYXllZCB0byBhdHRhY2sgdGhlbSBhdCBsb25nIHJhbmdlLCB0aGUgR3JlZWtzIGhhZCBtdWNoIHRoZSBiZXR0ZXIgb2YgaXQ7IGZvciB0byBvY2N1cHkgYSBwb3NpdGlvbiBhbmQgdGhlcmVmcm9tIHdhcmQgb2ZmIGFuIGF0dGFjayB3YXMgYSB2ZXJ5IGRpZmZlcmVudCB0aGluZyBmcm9tIGJlaW5nIG9uIHRoZSBtYXJjaCBhbmQgZmlnaHRpbmcgd2l0aCB0aGUgZW5lbXkgYXMgdGhleSBmb2xsb3dlZCBhZnRlci4KPC90cmFuc2xhdGlvbj4="
translation['3.4.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgc29vbiBhcyBpdCBjYW1lIHRvIGJlIGxhdGUgaW4gdGhlIGFmdGVybm9vbiwgaXQgd2FzIHRpbWUgZm9yIHRoZSBlbmVteSB0byB3aXRoZHJhdy4gRm9yIGluIG5vIGluc3RhbmNlIGRpZCB0aGUgYmFyYmFyaWFucyBlbmNhbXAgYXQgYSBkaXN0YW5jZSBvZiBsZXNzIHRoYW4gc2l4dHkgc3RhZGlhIGZyb20gdGhlIEdyZWVrIGNhbXAsIG91dCBvZiBmZWFyIHRoYXQgdGhlIEdyZWVrcyBtaWdodCBhdHRhY2sgdGhlbSBkdXJpbmcgdGhlIG5pZ2h0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYSBQZXJzaWFuIGFybXkgYXQgbmlnaHQgaXMgYSBzb3JyeSB0aGluZy4gVGhlaXIgaG9yc2VzIGFyZSB0ZXRoZXJlZCwgYW5kIHVzdWFsbHkgaG9iYmxlZCBhbHNvIHRvIHByZXZlbnQgdGhlaXIgcnVubmluZyBhd2F5IGlmIHRoZXkgZ2V0IGxvb3NlIGZyb20gdGhlIHRldGhlciwgYW5kIGhlbmNlIGluIGNhc2Ugb2YgYW55IGFsYXJtIGEgUGVyc2lhbiBoYXMgdG8gcHV0IHNhZGRsZS1jbG90aCBhbmQgYnJpZGxlIG9uIGhpcyBob3JzZSwgYW5kIHRoZW4gaGFzIGFsc28gdG8gcHV0IG9uIGhpcyBvd24gYnJlYXN0cGxhdGUgYW5kIG1vdW50IGhpcyBob3JzZeKAlGFuZCBhbGwgdGhlc2UgdGhpbmdzIGFyZSBkaWZmaWN1bHQgYXQgbmlnaHQgYW5kIGluIHRoZSBtaWRzdCBvZiBjb25mdXNpb24uIEl0IHdhcyBmb3IgdGhpcyByZWFzb24gdGhhdCB0aGUgUGVyc2lhbnMgZW5jYW1wZWQgYXQgYSBjb25zaWRlcmFibGUgZGlzdGFuY2UgZnJvbSB0aGUgR3JlZWtzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgR3JlZWtzIGJlY2FtZSBhd2FyZSB0aGF0IHRoZXkgd2VyZSBkZXNpcm91cyBvZiB3aXRoZHJhd2luZyBhbmQgd2VyZSBwYXNzaW5nIHRoZSB3b3JkIGFsb25nLCB0aGUgb3JkZXIgdG8gcGFjayB1cCBsdWdnYWdlIHdhcyBwcm9jbGFpbWVkIHRvIHRoZSBHcmVlayB0cm9vcHMgd2l0aGluIGhlYXJpbmcgb2YgdGhlIGVuZW15LiBGb3IgYSB0aW1lIHRoZSBiYXJiYXJpYW5zIGRlbGF5ZWQgdGhlaXIgc2V0dGluZyBvdXQsIGJ1dCB3aGVuIGl0IGJlZ2FuIHRvIGdyb3cgbGF0ZSwgdGhleSB3ZW50IG9mZjsgZm9yIHRoZXkgdGhvdWdodCBpdCBkaWQgbm90IHBheSB0byBiZSBvbiB0aGUgbWFyY2ggYW5kIGFycml2aW5nIGF0IHRoZWlyIGNhbXAgaW4gdGhlIG5pZ2h0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSBHcmVla3Mgc2F3IGF0IGxlbmd0aCB0aGF0IHRoZXkgd2VyZSBtYW5pZmVzdGx5IGRlcGFydGluZywgdGhleSBicm9rZSBjYW1wIGFuZCB0b29rIHRoZSByb2FkIHRoZW1zZWx2ZXMsIGFuZCBhY2NvbXBsaXNoZWQgYSBtYXJjaCBvZiBubyBsZXNzIHRoYW4gc2l4dHkgc3RhZGlhLiBUaHVzIHRoZSB0d28gYXJtaWVzIGdvdCBzbyBmYXIgYXBhcnQgdGhhdCBvbiB0aGUgbmV4dCBkYXkgdGhlIGVuZW15IGRpZCBub3QgYXBwZWFyLCBub3IgeWV0IG9uIHRoZSB0aGlyZDsgb24gdGhlIGZvdXJ0aCBkYXksIGhvd2V2ZXIsIGFmdGVyIHB1c2hpbmcgZm9yd2FyZCBieSBuaWdodCB0aGUgYmFyYmFyaWFucyBvY2N1cGllZCBhIGhpZ2ggcG9zaXRpb24gb24gdGhlIHJpZ2h0IG9mIHRoZSByb2FkIGJ5IHdoaWNoIHRoZSBHcmVla3Mgd2VyZSB0byBwYXNzLCBhIHNwdXIgb2YgdGhlIG1vdW50YWluLCBuYW1lbHksIGFsb25nIHRoZSBiYXNlIG9mIHdoaWNoIHJhbiB0aGUgcm91dGUgbGVhZGluZyBkb3duIGludG8gdGhlIHBsYWluLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgc29vbiBhcyBDaGVpcmlzb3BodXMgb2JzZXJ2ZWQgdGhhdCB0aGUgc3B1ciB3YXMgYWxyZWFkeSBvY2N1cGllZCwgaGUgc3VtbW9uZWQgWGVub3Bob24gZnJvbSB0aGUgcmVhciwgZGlyZWN0aW5nIGhpbSB0byBjb21lIHRvIHRoZSBmcm9udCBhbmQgYnJpbmcgdGhlIHBlbHRhc3RzIHdpdGggaGltLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz5YZW5vcGhvbiwgaG93ZXZlciwgd291bGQgbm90IGJyaW5nIHRoZSBwZWx0YXN0cywgZm9yIGhlIGNvdWxkIHNlZSBUaXNzYXBoZXJuZXMgYW5kIGhpcyB3aG9sZSBhcm15IGNvbWluZyBpbnRvIHZpZXc7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gZnJvbSB0aGUgcmVhci48L25vdGU+IGJ1dCBoZSByb2RlIGZvcndhcmQgaGltc2VsZiBhbmQgYXNrZWQsIOKAnFdoeSBhcmUgeW91IHN1bW1vbmluZyBtZT/igJ0gQ2hlaXJpc29waHVzIHJlcGxpZWQsIOKAnEl0IGlzIHBlcmZlY3RseSBldmlkZW50OyB0aGUgaGlsbCBvdmVyaGFuZ2luZyBvdXIgZG93bndhcmQgcm9hZCBoYXMgYmVlbiBvY2N1cGllZCwgYW5kIHRoZXJlIGlzIG5vIGdldHRpbmcgYnkgdW5sZXNzIHdlIGRpc2xvZGdlIHRoZXNlIHBlb3BsZS4KPC90cmFuc2xhdGlvbj4="
translation['3.4.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5XaHkgZGlkIHlvdSBub3QgYnJpbmcgdGhlIHBlbHRhc3RzP+KAnSBYZW5vcGhvbiBhbnN3ZXJlZCB0aGF0IGhlIGhhZCBub3QgdGhvdWdodCBpdCBiZXN0IHRvIGxlYXZlIHRoZSByZWFyIHVucHJvdGVjdGVkIHdoZW4gaG9zdGlsZSB0cm9vcHMgd2VyZSBjb21pbmcgaW50byBzaWdodC4g4oCcV2VsbCwgYXQgYW55IHJhdGUs4oCdIHNhaWQgQ2hlaXJpc29waHVzLCDigJxpdCBpcyBoaWdoIHRpbWUgdG8gYmUgdGhpbmtpbmcgaG93IHdlIGFyZSB0byBkcml2ZSB0aGVzZSBmZWxsb3dzIGZyb20gdGhlIGhlaWdodC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['3.4.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIFhlbm9waG9uIG9ic2VydmVkIHRoYXQgdGhlIHN1bW1pdCBvZiB0aGUgbW91bnRhaW4gd2FzIGNsb3NlIGFib3ZlIHRoZWlyIG93biBhcm15IGFuZCB0aGF0IGZyb20gdGhpcyBzdW1taXQgdGhlcmUgd2FzIGEgd2F5IG9mIGFwcHJvYWNoIHRvIHRoZSBoaWxsIHdoZXJlIHRoZSBlbmVteSB3ZXJlOyBhbmQgaGUgc2FpZCwg4oCcT3VyIGJlc3QgcGxhbiwgQ2hlaXJpc29waHVzLCBpcyB0byBkcml2ZSB3aXRoIGFsbCBzcGVlZCBmb3IgdGhlIG1vdW50YWluIHRvcDsgZm9yIGlmIHdlIG9uY2UgZ2V0IHBvc3Nlc3Npb24gb2YgdGhhdCwgdGhvc2UgbWVuIGFib3ZlIG91ciByb2FkIHdpbGwgbm90IGJlIGFibGUgdG8gaG9sZCB0aGVpciBwb3NpdGlvbi4gSWYgeW91IGNob29zZSwgdGhlbiwgc3RheSBpbiBjb21tYW5kIG9mIHRoZSBhcm15LCBhbmQgSSB3aWxsIGdvOyBvciwgaWYgeW91IHByZWZlciwgeW91IG1ha2UgZm9yIHRoZSBtb3VudGFpbiB0b3AsIGFuZCBJIHdpbGwgc3RheSBoZXJlLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz7igJxXZWxsLOKAnSBzYWlkIENoZWlyaXNvcGh1cywg4oCcSSBsZWF2ZSBpdCB0byB5b3UgdG8gY2hvb3NlIHdoaWNoZXZlciBwYXJ0IHlvdSB3aXNoLuKAnSBUaGVuIFhlbm9waG9uLCB3aXRoIHRoZSByZW1hcmsgdGhhdCBoZSB3YXMgdGhlIHlvdW5nZXIsIGVsZWN0ZWQgdG8gZ28sIGJ1dCBoZSB1cmdlZCBDaGVpcmlzb3BodXMgdG8gc2VuZCB3aXRoIGhpbSBzb21lIHRyb29wcyBmcm9tIHRoZSBmcm9udDsgZm9yIGl0IHdvdWxkIGhhdmUgYmVlbiB0b28gbG9uZyBhIGpvdXJuZXkgdG8gYnJpbmcgdXAgbWVuIGZyb20gdGhlIHJlYXIuCjwvdHJhbnNsYXRpb24+"
translation['3.4.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz5DaGVpcmlzb3BodXMgYWNjb3JkaW5nbHkgc2VudCB3aXRoIGhpbSB0aGUgcGVsdGFzdHMgYXQgdGhlIGZyb250LCByZXBsYWNpbmcgdGhlbSB3aXRoIHRob3NlIHRoYXQgd2VyZSBpbnNpZGUgdGhlIHNxdWFyZTsgaGUgYWxzbyBvcmRlcmVkIHRoZSB0aHJlZSBodW5kcmVkIHBpY2tlZCBtZW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy40LjIxIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuNC4yMTwvYmlibD4gYWJvdmUgYW5kIG5vdGUgMiB0aGVyZW9uLjwvbm90ZT4gdW5kZXIgaGlzIG93biBjb21tYW5kIGF0IHRoZSBmcm9udCBvZiB0aGUgc3F1YXJlIHRvIGpvaW4gWGVub3Bob24ncyBmb3JjZS4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAzLjQuMjEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy40LjIxPC9iaWJsPiBhYm92ZSBhbmQgbm90ZSAyIHRoZXJlb24uPC90cmFuc2xhdGlvbj4="
translation['3.4.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiB0aGV5IHNldCBvdXQgd2l0aCBhbGwgcG9zc2libGUgc3BlZWQuIEJ1dCBubyBzb29uZXIgaGFkIHRoZSBlbmVteSB1cG9uIHRoZSBoaWxsIG9ic2VydmVkIHRoZWlyIGRhc2ggZm9yIHRoZSBzdW1taXQgb2YgdGhlIG1vdW50YWluIHRoYW4gdGhleSBhbHNvIHNldCBvZmYsIHRvIHJhY2Ugd2l0aCB0aGUgR3JlZWtzIGZvciB0aGlzIHN1bW1pdC4KPC90cmFuc2xhdGlvbj4="
translation['3.4.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZXJlIHdhcyBhIGRlYWwgb2Ygc2hvdXRpbmcgZnJvbSB0aGUgR3JlZWsgYXJteSBhcyB0aGV5IHVyZ2VkIG9uIHRoZWlyIGZyaWVuZHMsIGFuZCBqdXN0IGFzIG11Y2ggc2hvdXRpbmcgZnJvbSBUaXNzYXBoZXJuZXMnIHRyb29wcyB0byB1cmdlIG9uIHRoZWlyIG1lbi4KPC90cmFuc2xhdGlvbj4="
translation['3.4.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgWGVub3Bob24sIHJpZGluZyBhbG9uZyB0aGUgbGluZXMgdXBvbiBoaXMgaG9yc2UsIGNoZWVyZWQgaGlzIHRyb29wcyBmb3J3YXJkOiDigJxNeSBnb29kIG1lbizigJ0gaGUgc2FpZCwg4oCcYmVsaWV2ZSB0aGF0IG5vdyB5b3UgYXJlIHJhY2luZyBmb3IgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LCByYWNpbmcgdGhpcyB2ZXJ5IGhvdXIgYmFjayB0byB5b3VyIHdpdmVzIGFuZCBjaGlsZHJlbiwgYSBsaXR0bGUgdG9pbCBmb3IgdGhpcyBvbmUgbW9tZW50IGFuZCBubyBtb3JlIGZpZ2h0aW5nIGZvciB0aGUgcmVzdCBvZiBvdXIgam91cm5leS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['3.4.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgU290ZXJpZGFzIHRoZSBTaWN5b25pYW4gc2FpZDog4oCcV2UgYXJlIG5vdCBvbiBhbiBlcXVhbGl0eSwgWGVub3Bob247IHlvdSBhcmUgcmlkaW5nIG9uIGhvcnNlYmFjaywgd2hpbGUgSSBhbSBkZXNwZXJhdGVseSB0aXJlZCB3aXRoIGNhcnJ5aW5nIG15IHNoaWVsZC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['3.4.48'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIFhlbm9waG9uIGhlYXJkIHRoYXQsIGhlIGxlYXBlZCBkb3duIGZyb20gaGlzIGhvcnNlIGFuZCBwdXNoZWQgU290ZXJpZGFzIG91dCBvZiBoaXMgcGxhY2UgaW4gdGhlIGxpbmUsIHRoZW4gdG9vayBoaXMgc2hpZWxkIGF3YXkgZnJvbSBoaW0gYW5kIG1hcmNoZWQgb24gd2l0aCBpdCBhcyBmYXN0IGFzIGhlIGNvdWxkOyBoZSBoYWQgb24gYWxzbywgYXMgaXQgaGFwcGVuZWQsIGhpcyBjYXZhbHJ5IGJyZWFzdHBsYXRlLCBhbmQgdGhlIHJlc3VsdCB3YXMgdGhhdCBoZSB3YXMgaGVhdmlseSBidXJkZW5lZC4gQW5kIGhlIHVyZ2VkIHRoZSBtZW4gaW4gZnJvbnQgb2YgaGltIHRvIGtlZXAgZ29pbmcsIHdoaWxlIGhlIHRvbGQgdGhvc2Ugd2hvIHdlcmUgYmVoaW5kIHRvIHBhc3MgYWxvbmcgYnkgaGltLCBmb3IgaGUgZm91bmQgaXQgaGFyZCB0byBrZWVwIHVwLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.49'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcmVzdCBvZiB0aGUgc29sZGllcnMsIGhvd2V2ZXIsIHN0cnVjayBhbmQgcGVsdGVkIGFuZCBhYnVzZWQgU290ZXJpZGFzIHVudGlsIHRoZXkgZm9yY2VkIGhpbSB0byB0YWtlIGJhY2sgaGlzIHNoaWVsZCBhbmQgbWFyY2ggb24uIFRoZW4gWGVub3Bob24gcmVtb3VudGVkLCBhbmQgYXMgbG9uZyBhcyByaWRpbmcgd2FzIHBvc3NpYmxlLCBsZWQgdGhlIHdheSBvbiBob3JzZWJhY2ssIGJ1dCB3aGVuIHRoZSBncm91bmQgYmVjYW1lIHRvbyBkaWZmaWN1bHQsIGhlIGxlZnQgaGlzIGhvcnNlIGJlaGluZCBhbmQgaHVycmllZCBmb3J3YXJkIG9uIGZvb3QuIEFuZCB0aGV5IHJlYWNoZWQgdGhlIHN1bW1pdCBiZWZvcmUgdGhlIGVuZW15Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuIGl0IHdhcyB0aGF0IHRoZSBiYXJiYXJpYW5zIHR1cm5lZCBhYm91dCBhbmQgZmxlZCwgZXZlcnkgbWFuIGZvciBoaW1zZWxmLCB3aGlsZSB0aGUgR3JlZWtzIGhlbGQgcG9zc2Vzc2lvbiBvZiB0aGUgc3VtbWl0LiBBcyBmb3IgdGhlIHRyb29wcyB1bmRlciBUaXNzYXBoZXJuZXMgYW5kIEFyaWFldXMsIHRoZXkgdHVybmVkIG9mZiBieSBhbm90aGVyIHJvYWQgYW5kIHdlcmUgZ29uZTsgYW5kIHRoZSBhcm15IHVuZGVyIENoZWlyaXNvcGh1cyBkZXNjZW5kZWQgaW50byB0aGUgcGxhaW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy40LjM3IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuNC4zNzwvYmlibD4gZmluLjwvbm90ZT4gYW5kIHByb2NlZWRlZCB0byBlbmNhbXAgaW4gYSB2aWxsYWdlIHN0b3JlZCB3aXRoIGFidW5kYW50IHN1cHBsaWVzLiBUaGVyZSB3ZXJlIGxpa2V3aXNlIG1hbnkgb3RoZXIgdmlsbGFnZXMgcmljaGx5IHN0b3JlZCB3aXRoIHN1cHBsaWVzIGluIHRoaXMgcGxhaW4gb24gdGhlIGJhbmtzIG9mIHRoZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDMuNC4zNyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAzLjQuMzc8L2JpYmw+IGZpbi48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTEzMDg1MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTMwODUwIj5UaWdyaXM8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['3.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gaXQgY2FtZSB0byBiZSBsYXRlIGluIHRoZSBkYXksIGFsbCBvZiBhIHN1ZGRlbiB0aGUgZW5lbXkgYXBwZWFyZWQgaW4gdGhlIHBsYWluIGFuZCBjdXQgdG8gcGllY2VzIHNvbWUgb2YgdGhlIEdyZWVrcyB3aG8gd2VyZSBzY2F0dGVyZWQgYWJvdXQgdGhlcmUgaW4gcXVlc3Qgb2YgcGx1bmRlcjsgaW4gZmFjdCwgbWFueSBoZXJkcyBvZiBjYXR0bGUgaGFkIGJlZW4gY2FwdHVyZWQgd2hpbGUgdGhleSB3ZXJlIGJlaW5nIHRha2VuIGFjcm9zcyB0byB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgcml2ZXIuCjwvdHJhbnNsYXRpb24+"
translation['3.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gVGlzc2FwaGVybmVzIGFuZCBoaXMgZm9sbG93ZXJzIGF0dGVtcHRlZCB0byBidXJuIHRoZSB2aWxsYWdlczsgYW5kIHNvbWUgb2YgdGhlIEdyZWVrcyBnb3QgZXhjZWVkaW5nbHkgZGVzcG9uZGVudCwgb3V0IG9mIGFwcHJlaGVuc2lvbiB0aGF0IHRoZXkgd291bGQgbm90IGhhdmUgYSBwbGFjZSBmcm9tIHdoaWNoIHRvIGdldCBwcm92aXNpb25zIGluIGNhc2UgdGhlIGVuZW15IHNob3VsZCBzdWNjZWVkIGluIHRoaXMgYXR0ZW1wdC4KPC90cmFuc2xhdGlvbj4="
translation['3.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk1lYW53aGlsZSBDaGVpcmlzb3BodXMgYW5kIGhpcyBtZW4sIHdobyBoYWQgZ29uZSB0byB0aGUgcmVzY3VlIG9mIHRoZSBwbHVuZGVyZXJzLCB3ZXJlIHJldHVybmluZzsgYW5kIHdoZW4gWGVub3Bob24gaGFkIGNvbWUgZG93biBmcm9tIHRoZSBtb3VudGFpbiwgaGUgcm9kZSBhbG9uZyB0aGUgbGluZXMgdXBvbiBmYWxsaW5nIGluIHdpdGggdGhlIEdyZWVrcyBvZiB0aGUgcmVzY3VpbmcgcGFydHkgYW5kIHNhaWQ6CjwvdHJhbnNsYXRpb24+"
translation['3.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPuKAnERvIHlvdSBvYnNlcnZlLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LCB0aGF0IHRoZXkgYWRtaXQgdGhlIGNvdW50cnkgaXMgbm93IG91cnM/IEZvciB3aGlsZSB0aGV5IHN0aXB1bGF0ZWQgd2hlbiB0aGV5IG1hZGUgdGhlIHRyZWF0eSB0aGF0IHRoZXJlIHNob3VsZCBiZSBubyBidXJuaW5nIG9mIHRoZSBLaW5nJ3MgdGVycml0b3J5LCBub3cgdGhleSBhcmUgZG9pbmcgdGhhdCB2ZXJ5IHRoaW5nIHRoZW1zZWx2ZXMsIGFzIHRob3VnaCB0aGUgbGFuZCB3ZXJlIGFub3RoZXIncy4gQXQgYW55IHJhdGUsIGlmIHRoZXkgbGVhdmUgc3VwcGxpZXMgYW55d2hlcmUgZm9yIHRoZWlyIG93biB1c2UsIHRoZXkgc2hhbGwgYmVob2xkIHVzIGFsc28gcHJvY2VlZGluZyB0byB0aGF0IHNwb3QuCjwvdHJhbnNsYXRpb24+"
translation['3.5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCwgQ2hlaXJpc29waHVzLOKAnSBoZSB3ZW50IG9uLCDigJxpdCBzZWVtcyB0byBtZSB0aGF0IHdlIG91Z2h0IHRvIHNhbGx5IGZvcnRoIGFnYWluc3QgdGhlc2UgaW5jZW5kaWFyaWVzLCBsaWtlIG1lbiBkZWZlbmRpbmcgdGhlaXIgb3duIGNvdW50cnku4oCdIOKAnFdlbGwsIGl0IGRvZXNuJ3Qgc2VlbSBzbyB0byBtZSzigJ0gc2FpZCBDaGVpcmlzb3BodXM7IOKAnHJhdGhlciwgbGV0IHVzIHNldCBhYm91dCBidXJuaW5nIG91cnNlbHZlcywgYW5kIHRoZW4gdGhleSB3aWxsIHN0b3AgdGhlIHNvb25lci7igJ0KPC90cmFuc2xhdGlvbj4="
translation['3.5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZXkgaGFkIGNvbWUgdG8gdGhlaXIgcXVhcnRlcnMsIHRoZSB0cm9vcHMgd2VyZSBidXN5IGFib3V0IHByb3Zpc2lvbnMsIGJ1dCB0aGUgZ2VuZXJhbHMgYW5kIGNhcHRhaW5zIGdhdGhlcmVkIGluIGNvdW5jaWwuIEFuZCBoZXJlIHRoZXJlIHdhcyBncmVhdCBkZXNwb25kZW5jeS4gRm9yIG9uIG9uZSBzaWRlIG9mIHRoZW0gd2VyZSBleGNlZWRpbmdseSBoaWdoIG1vdW50YWlucyBhbmQgb24gdGhlIG90aGVyIHNpZGUgYSByaXZlciBzbyBkZWVwIHRoYXQgbm90IGV2ZW4gdGhlaXIgc3BlYXJzIHJlYWNoZWQgYWJvdmUgd2F0ZXIgd2hlbiB0aGV5IHRyaWVkIGl0cyBkZXB0aC4KPC90cmFuc2xhdGlvbj4="
translation['3.5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSBtaWRzdCBvZiB0aGVpciBwZXJwbGV4aXR5IGEgUmhvZGlhbiBjYW1lIHRvIHRoZW0gYW5kIHNhaWQ6IOKAnEkgc3RhbmQgcmVhZHksIGdlbnRsZW1lbiwgdG8gc2V0IHlvdSBhY3Jvc3MgdGhlIHJpdmVyLCBmb3VyIHRob3VzYW5kIGhvcGxpdGVzIGF0IGEgdGltZSwgaWYgeW91IHdpbGwgcHJvdmlkZSBtZSB3aXRoIHRoZSBtZWFucyB0aGF0IEkgcmVxdWlyZSBhbmQgZ2l2ZSBtZSBhIHRhbGVudCBmb3IgcGF5LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['3.5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlVwb24gYmVpbmcgYXNrZWQgd2hhdCBoaXMgcmVxdWlyZW1lbnRzIHdlcmUsIGhlIHJlcGxpZWQ6IOKAnEkgc2hhbGwgbmVlZCB0d28gdGhvdXNhbmQgc2tpbnMuIEkgc2VlIHBsZW50eSBvZiBzaGVlcCBhbmQgZ29hdHMgYW5kIGNhdHRsZSBhbmQgYXNzZXM7IHRha2Ugb2ZmIHRoZWlyIHNraW5zIGFuZCBibG93IHRoZW0gdXAsIGFuZCB0aGV5IHdvdWxkIGVhc2lseSBwcm92aWRlIHRoZSBtZWFucyBvZiBjcm9zc2luZy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS41LjEwIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuNS4xMDwvYmlibD4sIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi40LjI4IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuNC4yODwvYmlibD4uPC9ub3RlPgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuNS4xMCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjUuMTA8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuNC4yOCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjQuMjg8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['3.5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5JIHNoYWxsIHdhbnQgYWxzbyB0aGUgZ2lydGhzIHdoaWNoIHlvdSB1c2Ugb24gdGhlIGJlYXN0cyBvZiBidXJkZW47IHdpdGggdGhlc2UgSSBzaGFsbCB0aWUgdGhlIHNraW5zIHRvIG9uZSBhbm90aGVyIGFuZCBhbHNvIG1vb3IgZWFjaCBza2luIGJ5IGZhc3RlbmluZyBzdG9uZXMgdG8gdGhlIGdpcnRocyBhbmQgbGV0dGluZyB0aGVtIGRvd24gaW50byB0aGUgd2F0ZXIgbGlrZSBhbmNob3JzOyB0aGVuIEkgc2hhbGwgY2FycnkgdGhlIGxpbmUgb2Ygc2tpbnMgYWNyb3NzIHRoZSByaXZlciwgbWFrZSBpdCBmYXN0IGF0IGJvdGggZW5kcywgYW5kIHBpbGUgb24gYnJ1c2h3b29kIGFuZCBlYXJ0aC4KPC90cmFuc2xhdGlvbj4="
translation['3.5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgeW91ciBub3Qgc2lua2luZywgdGhlbiwgeW91IG1heSBiZSBzdXJlIGluIGFuIGluc3RhbnQgb24gdGhhdCBwb2ludCwgZm9yIGV2ZXJ5IHNraW4gd2lsbCBrZWVwIHR3byBtZW4gZnJvbSBzaW5raW5nOwo8L3RyYW5zbGF0aW9uPg=="
translation['3.5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgYXMgcmVnYXJkcyBzbGlwcGluZywgdGhlIGJydXNod29vZCBhbmQgdGhlIGVhcnRoIHdpbGwgcHJldmVudCB0aGF0LuKAnSBBZnRlciBoZWFyaW5nIHRoZXNlIHdvcmRzIHRoZSBnZW5lcmFscyB0aG91Z2h0IHRoYXQgd2hpbGUgdGhlIGlkZWEgd2FzIGEgY2xldmVyIG9uZSwgdGhlIGV4ZWN1dGlvbiBvZiBpdCB3YXMgaW1wb3NzaWJsZS4gRm9yIHRoZXJlIHdlcmUgcGVvcGxlIG9uIHRoZSBvdGhlciBzaWRlIG9mIHRoZSByaXZlciB0byB0aHdhcnQgaXQsIGEgbGFyZ2UgZm9yY2Ugb2YgaG9yc2VtZW4sIG5hbWVseSwgd2hvIGF0IHRoZSB2ZXJ5IG91dHNldCB3b3VsZCBwcmV2ZW50IHRoZSBmaXJzdCBjb21lcnMgZnJvbSBjYXJyeWluZyBvdXQgYW55IHBhcnQgb2YgdGhlIHBsYW4uCjwvdHJhbnNsYXRpb24+"
translation['3.5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VW5kZXIgdGhlc2UgY2lyY3Vtc3RhbmNlcyB0aGV5IG1hcmNoZWQgYWxsIHRoZSBuZXh0IGRheSBpbiB0aGUgcmV2ZXJzZSBkaXJlY3Rpb24sIGdvaW5nIGJhY2sgdG8gdGhlIHVuYnVybmVkIHZpbGxhZ2VzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgMSBhbmQgMyBhYm92ZS48L25vdGU+IGFmdGVyIGJ1cm5pbmcgdGhlIG9uZSBmcm9tIHdoaWNoIHRoZXkgd2l0aGRyZXcuIFRoZSByZXN1bHQgd2FzIHRoYXQsIGluc3RlYWQgb2YgbWFraW5nIGFuIGF0dGFjaywgdGhlIGVuZW15IG1lcmVseSBnYXplZCBhdCB0aGUgR3JlZWtzLCBhbmQgYXBwZWFyZWQgdG8gYmUgd29uZGVyaW5nIHdoZXJlIGluIHRoZSB3b3JsZCB0aGV5IHdvdWxkIHR1cm4gYW5kIHdoYXQgdGhleSBoYWQgaW4gbWluZC4KPC90cmFuc2xhdGlvbj4="
translation['3.5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGUgY2xvc2Ugb2YgdGhlIGRheSwgd2hpbGUgdGhlIHJlc3Qgb2YgdGhlIGFybXkgd2VudCBhZnRlciBwcm92aXNpb25zLCB0aGUgZ2VuZXJhbHMgaGVsZCBhbm90aGVyIG1lZXRpbmcsIGF0IHdoaWNoIHRoZXkgYnJvdWdodCB0b2dldGhlciB0aGUgcHJpc29uZXJzIHRoYXQgaGFkIGJlZW4gdGFrZW4gYW5kIGVucXVpcmVkIG9mIHRoZW0gYWJvdXQgZWFjaCBkaXN0cmljdCBvZiBhbGwgdGhlIHN1cnJvdW5kaW5nIGNvdW50cnkuCjwvdHJhbnNsYXRpb24+"
translation['3.5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcHJpc29uZXJzIHNhaWQgdGhhdCB0aGUgcmVnaW9uIHRvIHRoZSBzb3V0aCBsYXkgb24gdGhlIHJvYWQgdG93YXJkcyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjYyNiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjI2Ij5CYWJ5bG9uPC9wbGFjZU5hbWU+IGFuZCBNZWRpYSwgdGhlIGlkZW50aWNhbCBwcm92aW5jZSB0aGV5IGhhZCBqdXN0IHBhc3NlZCB0aHJvdWdoOyB0aGF0IHRoZSByb2FkIHRvIHRoZSBlYXN0d2FyZCBsZWQgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTc1MDkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNzUwOSI+U3VzYTwvcGxhY2VOYW1lPiBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDIxMTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjExNSI+RWNiYXRhbmE8L3BsYWNlTmFtZT4sIHdoZXJlIHRoZSBLaW5nIGlzIHNhaWQgdG8gc3BlbmQgaGlzIHN1bW1lcnM7IGFjcm9zcyB0aGUgcml2ZXIgYW5kIG9uIHRvIHRoZSB3ZXN0IHdhcyB0aGUgd2F5IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NjMxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY2MzEiPkx5ZGlhPC9wbGFjZU5hbWU+IGFuZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMjc2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAyNzY1Ij5Jb25pYTwvcGxhY2VOYW1lPjsgd2hpbGUgdGhlIHJvdXRlIHRocm91Z2ggdGhlIG1vdW50YWlucyBhbmQgbm9ydGh3YXJkIGxlZCB0byB0aGUgY291bnRyeSBvZiB0aGUgQ2FyZHVjaGlhbnMuCjwvdHJhbnNsYXRpb24+"
translation['3.5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVzZSBDYXJkdWNoaWFucywgdGhleSBzYWlkLCBkd2VsdCB1cCBhbW9uZyB0aGUgbW91bnRhaW5zLCB3ZXJlIGEgd2FybGlrZSBwZW9wbGUsIGFuZCB3ZXJlIG5vdCBzdWJqZWN0cyBvZiB0aGUgS2luZzsgaW4gZmFjdCwgYSByb3lhbCBhcm15IG9mIG9uZSBodW5kcmVkIGFuZCB0d2VudHkgdGhvdXNhbmQgbWVuIGhhZCBvbmNlIGludmFkZWQgdGhlbSwgYW5kLCBieSByZWFzb24gb2YgdGhlIHJ1Z2dlZG5lc3Mgb2YgdGhlIGNvdW50cnksIG5vdCBhIG1hbiBvZiBhbGwgdGhhdCBudW1iZXIgY2FtZSBiYWNrLiBTdGlsbCwgd2hlbmV2ZXIgdGhleSBtYWRlIGEgdHJlYXR5IHdpdGggdGhlIHNhdHJhcCBpbiB0aGUgcGxhaW4sIHNvbWUgb2YgdGhlIHBlb3BsZSBvZiB0aGUgcGxhaW4gZGlkIGhhdmUgZGVhbGluZ3Mgd2l0aCB0aGUgQ2FyZHVjaGlhbnMgYW5kIHNvbWUgb2YgdGhlIENhcmR1Y2hpYW5zIHdpdGggdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['3.5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgbGlzdGVuaW5nIHRvIHRoZXNlIHN0YXRlbWVudHMgZnJvbSB0aGUgbWVuIHdobyBjbGFpbWVkIHRvIGtub3cgdGhlIHdheSBpbiBldmVyeSBkaXJlY3Rpb24sIHRoZSBnZW5lcmFscyBjYXVzZWQgdGhlbSB0byB3aXRoZHJhdywgd2l0aG91dCBnaXZpbmcgdGhlbSB0aGUgbGVhc3QgY2x1ZSBhcyB0byB0aGUgZGlyZWN0aW9uIGluIHdoaWNoIHRoZXkgcHJvcG9zZWQgdG8gbWFyY2guIFRoZSBvcGluaW9uIG9mIHRoZSBnZW5lcmFscyBob3dldmVyLCB3YXMgdGhhdCB0aGV5IG11c3QgbWFrZSB0aGVpciB3YXkgdGhyb3VnaCB0aGUgbW91bnRhaW5zIGludG8gdGhlIGNvdW50cnkgb2YgdGhlIENhcmR1Y2hpYW5zOyBmb3IgdGhlIHByaXNvbmVycyBzYWlkIHRoYXQgYWZ0ZXIgcGFzc2luZyB0aHJvdWdoIHRoaXMgY291bnRyeSB0aGV5IHdvdWxkIGNvbWUgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDY2NTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwNjY1MSI+QXJtZW5pYTwvcGxhY2VOYW1lPiwgdGhlIGxhcmdlIGFuZCBwcm9zcGVyb3VzIHByb3ZpbmNlIG9mIHdoaWNoIE9yb250YXMgd2FzIHJ1bGVyOyBhbmQgZnJvbSB0aGVyZSwgdGhleSBzYWlkLCBpdCB3YXMgZWFzeSB0byBnbyBpbiBhbnkgZGlyZWN0aW9uIG9uZSBjaG9zZS4KPC90cmFuc2xhdGlvbj4="
translation['4.1.1'] = ""
translation['4.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlIEdyZWVrcyBmaW5hbGx5IHJlYWNoZWQgYSBwb2ludCB3aGVyZSB0aGUgVGlncmlzIHJpdmVyIHdhcyBxdWl0ZSBpbXBhc3NhYmxlIGJ5IHJlYXNvbiBvZiBpdHMgZGVwdGggYW5kIHdpZHRoLCBhbmQgd2hlcmUgdGhlcmUgd2FzIG5vIHBhc3NhZ2Utd2F5IGFsb25nc2lkZSB0aGUgcml2ZXIsIHNpbmNlIHRoZSBDYXJkdWNoaWFuIG1vdW50YWlucyBodW5nIHNoZWVyIGFuZCBjbG9zZSBhYm92ZSBpdCwgdGhlIGdlbmVyYWxzIHdlcmUgZm9yY2VkIHRvIHRoZSBjb25jbHVzaW9uIHRoYXQgdGhleSBtdXN0IG1ha2UgdGhlaXIgd2F5IHRocm91Z2ggdGhlIG1vdW50YWlucy4KPC90cmFuc2xhdGlvbj4="
translation['4.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGV5IGhlYXJkIGZyb20gdGhlIHByaXNvbmVycyB3aG8gd2VyZSB0YWtlbiB0aGF0IG9uY2UgdGhleSBoYWQgcGFzc2VkIHRocm91Z2ggdGhlIENhcmR1Y2hpYW4gbW91bnRhaW5zIGFuZCByZWFjaGVkIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA2NjUxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDY2NTEiPkFybWVuaWE8L3BsYWNlTmFtZT4sIHRoZXkgY291bGQgdGhlcmUgY3Jvc3MgdGhlIGhlYWR3YXRlcnMgb2YgdGhlIFRpZ3JpcyByaXZlciwgaWYgdGhleSBzbyBkZXNpcmVkLCBvciwgaWYgdGhleSBwcmVmZXJyZWQsIGNvdWxkIGdvIHJvdW5kIHRoZW0uIFRoZXkgd2VyZSBhbHNvIGluZm9ybWVkIHRoYXQgdGhlIGhlYWR3YXRlcnMgb2YgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTIzODQyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMjM4NDIiPkV1cGhyYXRlczwvcGxhY2VOYW1lPiB3ZXJlIG5vdCBmYXIgZnJvbSB0aG9zZSBvZiB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDExMzA4NTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTEzMDg1MCI+VGlncmlzPC9wbGFjZU5hbWU+LOKAlGFuZCBzdWNoIGlzIGluZGVlZCB0aGUgY2FzZS4KPC90cmFuc2xhdGlvbj4="
translation['4.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB0aGV5IGNvbmR1Y3RlZCB0aGVpciBpbnZhc2lvbiBvZiB0aGUgY291bnRyeSBvZiB0aGUgQ2FyZHVjaGlhbnMgaW4gdGhlIGZvbGxvd2luZyB3YXksIHNpbmNlIHRoZXkgd2VyZSBzZWVraW5nIG5vdCBvbmx5IHRvIGVzY2FwZSBvYnNlcnZhdGlvbiwgYnV0IGF0IHRoZSBzYW1lIHRpbWUgdG8gcmVhY2ggdGhlIGhlaWdodHMgYmVmb3JlIHRoZSBlbmVteSBjb3VsZCB0YWtlIHBvc3Nlc3Npb24gb2YgdGhlbS5dCjwvdHJhbnNsYXRpb24+"
translation['4.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIGl0IHdhcyBhYm91dCB0aGUgbGFzdCB3YXRjaCwgYW5kIGVub3VnaCBvZiB0aGUgbmlnaHQgcmVtYWluZWQgdG8gYWxsb3cgdGhlbSB0byBjcm9zcyB0aGUgcGxhaW4gaW4gdGhlIGRhcmssIGF0IHRoYXQgdGltZSB0aGV5IGFyb3NlIHVwb24gdGhlIHdvcmQgb2YgY29tbWFuZCBhbmQgc2V0IG91dCBvbiB0aGVpciBtYXJjaDsgYW5kIHRoZXkgcmVhY2hlZCB0aGUgbW91bnRhaW4gYXQgZGF5YnJlYWsuCjwvdHJhbnNsYXRpb24+"
translation['4.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkhlcmUgQ2hlaXJpc29waHVzLCB3aXRoIGhpcyBvd24gZGl2aXNpb24gYW5kIGFsbCB0aGUgbGlnaHQtYXJtZWQgdHJvb3BzLCBsZWQgdGhlIHZhbiwgd2hpbGUgWGVub3Bob24gZm9sbG93ZWQgYmVoaW5kIHdpdGggdGhlIGhvcGxpdGVzIG9mIHRoZSByZWFyZ3VhcmQsIGJ1dCB3aXRob3V0IGFueSBsaWdodCB0cm9vcHMgYXQgYWxsOyBmb3IgdGhlcmUgc2VlbWVkIHRvIGJlIG5vIGRhbmdlciBvZiBhbnkgcHVyc3VpdCBmcm9tIGJlaGluZCB3aGlsZSB0aGV5IHdlcmUgcHJvY2VlZGluZyB1cGhpbGwuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkl0IHdpbGwgYmUgcmVtZW1iZXJlZCB0aGF0IGxpZ2h0IHRyb29wcyBoYWQgcHJvdmVkIG1vcmUgc2VydmljZWFibGUgdGhhbiBob3BsaXRlcyBpbiB0aGUgcmVjZW50IHNraXJtaXNoZXMgd2l0aCB0aGUgUGVyc2lhbnMuIGNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDMuNC4xNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAzLjQuMTUtMTc8L2JpYmw+LCAyNC0zMCwgMzgtNDMuPC9ub3RlPgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDMuNC4xNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAzLjQuMTUtMTc8L2JpYmw+LCAyNC0zMCwgMzgtNDMuPC90cmFuc2xhdGlvbj4="
translation['4.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBDaGVpcmlzb3BodXMgcmVhY2hlZCB0aGUgc3VtbWl0IG9mIHRoZSBwYXNzIGJlZm9yZSBhbnkgb2YgdGhlIGVuZW15IHBlcmNlaXZlZCBoaW07IHRoZW4gaGUgbGVkIG9uIHNsb3dseSwgYW5kIGVhY2ggZGl2aXNpb24gb2YgdGhlIGFybXkgYXMgaXQgcGFzc2VkIG92ZXIgdGhlIHN1bW1pdCBmb2xsb3dlZCBhbG9uZyB0byB0aGUgdmlsbGFnZXMgd2hpY2ggbGF5IGluIHRoZSBob2xsb3dzIGFuZCBub29rcyBvZiB0aGUgbW91bnRhaW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gaXQgd2FzIHRoYXQgdGhlIENhcmR1Y2hpYW5zIGFiYW5kb25lZCB0aGVpciBob3VzZXMgYW5kIGZsZWQgdG8gdGhlIG1vdW50YWlucyB3aXRoIHRoZWlyIHdpdmVzIGFuZCBjaGlsZHJlbi4gQXMgZm9yIHByb3Zpc2lvbnMsIHRoZXJlIHdhcyBhbiBhYnVuZGFuY2UgZm9yIHRoZSBHcmVla3MgdG8gdGFrZSwgYW5kIHRoZSBob3VzZXMgd2VyZSBhbHNvIHN1cHBsaWVkIHdpdGggYnJvbnplIHZlc3NlbHMgaW4gZ3JlYXQgbnVtYmVyczsgdGhlIEdyZWVrcywgaG93ZXZlciwgZGlkIG5vdCBjYXJyeSBvZmYgYW55IG9mIHRoZXNlLCBhbmQgZGlkIG5vdCBwdXJzdWUgdGhlIHBlb3BsZSB0aGVtc2VsdmVzLCByZWZyYWluaW5nIGZyb20gaGFyc2huZXNzIG9uIHRoZSBjaGFuY2UgdGhhdCB0aGUgQ2FyZHVjaGlhbnMgbWlnaHQgcGVyaGFwcyBiZSB3aWxsaW5nIHRvIGxldCB0aGVtIHBhc3MgdGhyb3VnaCB0aGVpciBjb3VudHJ5IGluIGZyaWVuZHNoaXAsIHNlZWluZyB0aGF0IHRoZXkgYWxzbyB3ZXJlIGVuZW1pZXMgb2YgdGhlIEtpbmc7CjwvdHJhbnNsYXRpb24+"
translation['4.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPmJ1dCB0aGV5IGRpZCB0YWtlIHdoYXRldmVyIHRoZXkgY2hhbmNlZCB1cG9uIGluIHRoZSB3YXkgb2YgcHJvdmlzaW9ucywgZm9yIHRoYXQgd2FzIG5lY2Vzc2FyeS4gVGhlIENhcmR1Y2hpYW5zLCBob3dldmVyLCB3b3VsZCBuZWl0aGVyIGxpc3RlbiB3aGVuIHRoZXkgY2FsbGVkIHRvIHRoZW0gbm9yIGdpdmUgYW55IG90aGVyIHNpZ24gb2YgZnJpZW5kbGluZXNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGUgcmVhcmd1YXJkIG9mIHRoZSBHcmVla3Mgd2FzIGRlc2NlbmRpbmcgZnJvbSB0aGUgc3VtbWl0IG9mIHRoZSBwYXNzIHRvIHRoZSB2aWxsYWdlc+KAlGFuZCBieSB0aGlzIHRpbWUgaXQgd2FzIGRhcmssIGZvciBvbiBhY2NvdW50IG9mIHRoZSByb2FkIGJlaW5nIG5hcnJvdyB0aGVpciBhc2NlbnQgYW5kIGRlc2NlbnQgbGFzdGVkIHRocm91Z2ggdGhlIGVudGlyZSBkYXnigJRhdCB0aGlzIG1vbWVudCBzb21lIG9mIHRoZSBDYXJkdWNoaWFucyBnYXRoZXJlZCB0b2dldGhlciBhbmQgYXR0YWNrZWQgdGhlIGhpbmRtb3N0IEdyZWVrczsgYW5kIHRoZXkga2lsbGVkIHNvbWUgYW5kIHdvdW5kZWQgb3RoZXJzIHNldmVyZWx5IHdpdGggc3RvbmVzIGFuZCBhcnJvd3MsIHRob3VnaCB0aGV5IHdlcmUgdGhlbXNlbHZlcyBidXQgZmV3IGluIG51bWJlcjsgZm9yIHRoZSBHcmVlayBhcm15IGhhZCBjb21lIHVwb24gdGhlbSB1bmV4cGVjdGVkbHkuCjwvdHJhbnNsYXRpb24+"
translation['4.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5JZiwgaG93ZXZlciwgYSBsYXJnZXIgbnVtYmVyIG9mIHRoZW0gaGFkIGdhdGhlcmVkIHRvZ2V0aGVyIGF0IHRoYXQgdGltZSwgYSBncmVhdCBwYXJ0IG9mIHRoZSBhcm15IHdvdWxkIGhhdmUgYmVlbiBpbiBkYW5nZXIgb2YgYmVpbmcgZGVzdHJveWVkLiBUaHVzIHRoZSBHcmVla3MgYml2b3VhY2tlZCBmb3IgdGhhdCBuaWdodCBpbiB0aGUgdmlsbGFnZXMsIHdoaWxlIHRoZSBDYXJkdWNoaWFucyBraW5kbGVkIG1hbnkgZmlyZXMgcm91bmQgYWJvdXQgdXBvbiB0aGUgbW91bnRhaW5zIGFuZCBrZXB0IHNob3V0aW5nIHRvIG9uZSBhbm90aGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgZGF5YnJlYWsgdGhlIGdlbmVyYWxzIGFuZCBjYXB0YWlucyBvZiB0aGUgR3JlZWtzIGNhbWUgdG9nZXRoZXIgYW5kIHJlc29sdmVkIHRvIGtlZXAgd2l0aCB0aGVtIG9uIHRoZSBtYXJjaCBvbmx5IHRoZSBpbmRpc3BlbnNhYmxlIGFuZCBtb3N0IHBvd2VyZnVsIGJhZ2dhZ2UgYW5pbWFscyBhbmQgdG8gbGVhdmUgdGhlIHJlc3QgYmVoaW5kOyBsaWtld2lzZSwgdG8gbGV0IGdvIGFsbCB0aGUgbmV3bHktdGFrZW4gY2FwdGl2ZXMgdGhhdCB3ZXJlIGluIHRoZSBhcm15LCB0byB0aGUgbGFzdCBtYW4uCjwvdHJhbnNsYXRpb24+"
translation['4.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIGJhZ2dhZ2UgYW5pbWFscyBhbmQgdGhlIGNhcHRpdmVzLCBudW1lcm91cyBhcyB0aGV5IHdlcmUsIG1hZGUgdGhlIG1hcmNoIHNsb3csIGFuZCB0aGUgbGFyZ2UgbnVtYmVyIG9mIG1lbiB3aG8gaGFkIGNoYXJnZSBvZiB0aGVtIHdlcmUgdGh1cyB0YWtlbiBvdXQgb2YgdGhlIGZpZ2h0aW5nIGxpbmU7IGJlc2lkZXMsIHdpdGggc28gbWFueSBwZW9wbGUgdG8gZmVlZCBpdCB3YXMgbmVjZXNzYXJ5IHRvIHByb2N1cmUgYW5kIHRvIGNhcnJ5IHR3aWNlIHRoZSBhbW91bnQgb2YgcHJvdmlzaW9ucy4gVGhpcyBkZWNpc2lvbiBvbmNlIHJlYWNoZWQsIHRoZXkgcHVibGlzaGVkIHRoZSBvcmRlciB0byBjYXJyeSBpdCBpbnRvIGVmZmVjdC4KPC90cmFuc2xhdGlvbj4="
translation['4.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGV5IGhhZCBicmVha2Zhc3RlZCBhbmQgd2VyZSBzZXR0aW5nIG91dCB1cG9uIHRoZSBtYXJjaCwgdGhlIGdlbmVyYWxzIHF1aWV0bHkgc3RhdGlvbmVkIG1lbiBpbiB0aGUgZGVmaWxlIGFuZCBwcm9jZWVkZWQgdG8gdGFrZSBhd2F5IGZyb20gdGhlIHRyb29wcyBzdWNoIG9mIHRoZSB0aGluZ3Mgc3BlY2lmaWVkIGFzIGhhZCBub3QgYmVlbiBnaXZlbiB1cCBpZiB0aGV5IGZvdW5kIGFueTsgYW5kIHRoZSBzb2xkaWVycyBzdWJtaXR0ZWQsIGV4Y2VwdCBpbiBjYXNlcyB3aGVyZSBhIG1hbiBoYWQgc211Z2dsZWQgdGhyb3VnaCBhIGhhbmRzb21lIGJveSBvciB3b21hbiwgZm9yIGV4YW1wbGUsIHRoYXQgaGUgaGFkIHNldCBoaXMgaGVhcnQgdXBvbi4gU28gdGhleSB3ZW50IG9uIGZvciB0aGF0IGRheSwgbm93IGZpZ2h0aW5nIGEgbGl0dGxlIGFuZCBub3cgcmVzdGluZy4KPC90cmFuc2xhdGlvbj4="
translation['4.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgbmV4dCBkYXkgdGhlcmUgd2FzIGEgaGVhdnkgc3Rvcm0sIGJ1dCB0aGV5IGhhZCB0byBjb250aW51ZSB0aGVpciBtYXJjaCwgZm9yIHRoZXkgaGFkIG5vdCBhbiBhZGVxdWF0ZSBzdXBwbHkgb2YgcHJvdmlzaW9uczsgYW5kIENoZWlyaXNvcGh1cyBsZWQgdGhlIHdheSB3aGlsZSBYZW5vcGhvbiBjb21tYW5kZWQgdGhlIHJlYXJndWFyZC4KPC90cmFuc2xhdGlvbj4="
translation['4.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5IZXJlIHRoZSBlbmVteSBiZWdhbiBhIHZpZ29yb3VzIGF0dGFjaywgYW5kIGluIHRoZSBuYXJyb3cgcGxhY2VzIG9uIHRoZSByb2FkIGNhbWUgY2xvc2UgdXAgdG8gZGlzY2hhcmdlIHRoZWlyIGJvd3MgYW5kIHNsaW5ncy4gVGhlIHJlc3VsdCB3YXMgdGhhdCB0aGUgR3JlZWtzIHdlcmUgZm9yY2VkIHRvIGdpdmUgY2hhc2UgYW5kIHRoZW4gZmFsbCBiYWNrLCBhbmQgaGVuY2UgbWFkZSBidXQgc2xvdyBwcm9ncmVzczsgYW5kIHRpbWUgYWZ0ZXIgdGltZSwgd2hlbiB0aGUgZW5lbXkgcHJlc3NlZCB0aGVtIGhhcmQsIFhlbm9waG9uIHdvdWxkIHNlbmQgd29yZCB0byBDaGVpcmlzb3BodXMgdG8gd2FpdCBhIGxpdHRsZS4KPC90cmFuc2xhdGlvbj4="
translation['4.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hpbGUgQ2hlaXJpc29waHVzIHdhcyBhY2N1c3RvbWVkIHRvIHdhaXQgd2hlbmV2ZXIgc3VjaCB3b3JkIHdhcyBnaXZlbiwgb24gdGhpcyBvY2Nhc2lvbiBoZSBkaWQgbm90IGRvIHNvLCBidXQgbGVkIG9uIHJhcGlkbHkgYW5kIHBhc3NlZCBiYWNrIHRoZSBvcmRlciB0byBrZWVwIHVwIHdpdGggaGltLiBJdCB3YXMgZXZpZGVudCwgdGhlcmVmb3JlLCB0aGF0IHNvbWV0aGluZyB3YXMgdGhlIG1hdHRlciwgYnV0IHRoZXJlIHdhcyBubyB0aW1lIHRvIGdvIGZvcndhcmQgYW5kIGZpbmQgb3V0IHRoZSByZWFzb24gZm9yIGhpcyBoYXN0ZTsgY29uc2VxdWVudGx5IHRoZSBwcm9ncmVzcyBvZiB0aGUgcmVhcmd1YXJkIGJlY2FtZSBtb3JlIGxpa2UgYSBmbGlnaHQgdGhhbiBhIG1hcmNoLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGl0IHdhcyB0aGF0IGEgYnJhdmUgbWFuIHdhcyBraWxsZWQsIExlb255bXVzIHRoZSBMYWNvbmlhbiwgd2hvIHdhcyBwaWVyY2VkIGluIHRoZSBzaWRlIGJ5IGFuIGFycm93IHRoYXQgd2VudCB0aHJvdWdoIGhpcyBzaGllbGQgYW5kIGN1aXJhc3M7IGFsc28gQmFzaWFzIHRoZSBBcmNhZGlhbiwgd2hvIHdhcyBzaG90IGNsZWFuIHRocm91Z2ggdGhlIGhlYWQuCjwvdHJhbnNsYXRpb24+"
translation['4.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgc29vbiBhcyB0aGV5IHJlYWNoZWQgYSBoYWx0aW5nIHBsYWNlLCBYZW5vcGhvbiB3ZW50IHN0cmFpZ2h0IHRvIENoZWlyaXNvcGh1cywganVzdCBhcyBoZSB3YXMsIGFuZCBwcm9jZWVkZWQgdG8gcmVwcm9hY2ggaGltIGZvciBub3Qgd2FpdGluZywgYnV0IGNvbXBlbGxpbmcgdGhlbSB0byBmbGVlIGFuZCBmaWdodCBhdCB0aGUgc2FtZSB0aW1lOyDigJxhbmQgbm93LOKAnSBoZSB3ZW50IG9uLCDigJx0d28gZmluZSwgYnJhdmUgZmVsbG93cyBoYXZlIGxvc3QgdGhlaXIgbGl2ZXMsIGFuZCB3ZSB3ZXJlIG5vdCBhYmxlIHRvIHBpY2sgdXAgdGhlaXIgYm9kaWVzIG9yIGJ1cnkgdGhlbS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['4.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5DaGVpcmlzb3BodXMnIHJlcGx5IHdhcywg4oCcVGFrZSBhIGxvb2ss4oCdIHNhaWQgaGUsIOKAnGF0IHRoZSBtb3VudGFpbnMsIGFuZCBvYnNlcnZlIGhvdyBpbXBhc3NhYmxlIGFsbCBvZiB0aGVtIGFyZS4gVGhlIG9ubHkgcm9hZCBpcyB0aGUgb25lIHRoZXJlLCB3aGljaCB5b3Ugc2VlLCBhIHN0ZWVwIG9uZSwgdG9vLCBhbmQgb24gdGhhdCB5b3UgY2FuIHNlZSB0aGUgZ3JlYXQgY3Jvd2Qgb2YgcGVvcGxlIHdobyBoYXZlIHRha2VuIHBvc3Nlc3Npb24gb2YgaXQgYW5kIGFyZSBndWFyZGluZyBvdXIgd2F5IG91dC4KPC90cmFuc2xhdGlvbj4="
translation['4.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGF0J3MgdGhlIHJlYXNvbiB3aHkgSSB3YXMgaHVycnlpbmcgYW5kIHdoeSBJIHdvdWxkIG5vdCB3YWl0IGZvciB5b3UsIGZvciBJIGhvcGVkIHRvIHJlYWNoIHRoZSBwYXNzIGFuZCBvY2N1cHkgaXQgYmVmb3JlIHRoZXkgZGlkLiBUaGUgZ3VpZGVzIHRoYXQgd2UgaGF2ZSBzYXkgdGhlcmUgaXMgbm8gb3RoZXIgcm9hZC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['4.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgWGVub3Bob24gYW5zd2VyZWQsIOKAnFdlbGwsIEkgYWxzbyBoYXZlIHR3byBtZW4uIEZvciBhdCB0aGUgdGltZSB3aGVuIHRoZSBlbmVteSB3ZXJlIGdpdmluZyB1cyB0cm91YmxlLCB3ZSBzZXQgYW4gYW1idXNoLiBJdCBhbGxvd2VkIHVzLCBmb3Igb25lIHRoaW5nLCB0byBjYXRjaCBvdXIgYnJlYXRoOyBidXQsIGJlc2lkZXMsIHdlIGtpbGxlZCBhIG51bWJlciBvZiB0aGVtLCBhbmQgd2UgdG9vayBlc3BlY2lhbCBwYWlucyB0byBnZXQgc29tZSBwcmlzb25lcnMgZm9yIHRoaXMgdmVyeSBwdXJwb3NlLCBvZiBiZWluZyBhYmxlIHRvIGVtcGxveSBhcyBndWlkZXMgbWVuIHdobyBrbm93IHRoZSBjb3VudHJ5LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhleSBicm91Z2h0IHVwIHRoZSB0d28gbWVuIGF0IG9uY2UgYW5kIHF1ZXN0aW9uZWQgdGhlbSBzZXBhcmF0ZWx5IGFzIHRvIHdoZXRoZXIgdGhleSBrbmV3IGFueSBvdGhlciByb2FkIGJlc2lkZXMgdGhlIG9uZSB0aGF0IHdhcyBpbiBwbGFpbiBzaWdodC4gVGhlIGZpcnN0IG1hbiBzYWlkIGhlIGRpZCBub3QsIGRlc3BpdGUgYWxsIHRoZSBudW1lcm91cyB0aHJlYXRzIHRoYXQgd2VyZSBtYWRlIHRvIGhpbTsgYW5kIHNpbmNlIGhlIHdvdWxkIGdpdmUgbm8gaW5mb3JtYXRpb24sIGhlIHdhcyBzbGF1Z2h0ZXJlZCBiZWZvcmUgdGhlIGV5ZXMgb2YgdGhlIHNlY29uZCBvbmUuCjwvdHJhbnNsYXRpb24+"
translation['4.1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbGF0dGVyIG5vdyBzYWlkIHRoYXQgdGhlIHJlYXNvbiB3aHkgdGhpcyBmaXJzdCBtYW4gaGFkIG1haW50YWluZWQgdGhhdCBoZSBkaWQgbm90IGtub3cgYW55IG90aGVyIHJvYWQsIHdhcyBiZWNhdXNlIGhlIGNoYW5jZWQgdG8gaGF2ZSBhIGRhdWdodGVyIGxpdmluZyBpbiB0aGF0IG5laWdoYm91cmhvb2Qgd2l0aCBhIGh1c2JhbmQgdG8gd2hvbSBoZSBoYWQgZ2l2ZW4gaGVyOyBidXQgYXMgZm9yIGhpbXNlbGYsIGhlIHNhaWQgdGhhdCBoZSB3b3VsZCBsZWFkIHRoZSBHcmVla3MgYnkgYSByb2FkIHRoYXQgY291bGQgYmUgdHJhdmVyc2VkIGV2ZW4gYnkgYmFnZ2FnZSBhbmltYWxzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIGJlaW5nIGFza2VkIHdoZXRoZXIgdGhlcmUgd2FzIGFueSBwb2ludCBvbiBpdCB3aGljaCB3YXMgZGlmZmljdWx0IHRvIHBhc3MsIGhlIHJlcGxpZWQgdGhhdCB0aGVyZSB3YXMgYSBoZWlnaHQgd2hpY2ggdGhleSBjb3VsZCBub3QgcG9zc2libHkgcGFzcyB1bmxlc3MgdGhleSBzaG91bGQgc2VpemUgaXQgYmVmb3JlaGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['4.1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmV1cG9uIGl0IHdhcyBkZWNpZGVkIHRvIGNhbGwgdG9nZXRoZXIgdGhlIGNhcHRhaW5zLCBib3RoIG9mIHBlbHRhc3RzIGFuZCBob3BsaXRlcywgdG8gc2V0IGZvcnRoIHRvIHRoZW0gdGhlIGV4aXN0aW5nIHNpdHVhdGlvbiwgYW5kIHRvIGFzayBpZiB0aGVyZSB3YXMgYW55IG9uZSBhbW9uZyB0aGVtIHdobyB3b3VsZCBsaWtlIHRvIHByb3ZlIGhpbXNlbGYgYSBicmF2ZSBtYW4gYW5kIHRvIHVuZGVydGFrZSB0aGlzIGV4cGVkaXRpb24gYXMgYSB2b2x1bnRlZXIuCjwvdHJhbnNsYXRpb24+"
translation['4.1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5Wb2x1bnRlZXJzIGNhbWUgZm9yd2FyZCwgZnJvbSB0aGUgaG9wbGl0ZXMgQXJpc3RvbnltdXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNZXRoeWRyaXVtIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNZXRoeWRyaXVtIj5NZXRoeWRyaXVtPC9wbGFjZU5hbWU+IGFuZCBBZ2FzaWFzIG9mIFN0eW1waGFsdXMsIHdoaWxlIGluIHJpdmFscnkgd2l0aCB0aGVtIENhbGxpbWFjaHVzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE3MDgwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTcwODAiPlBhcnJoYXNpYTwvcGxhY2VOYW1lPiBzYWlkIHRoYXQgaGUgd2FzIHJlYWR5IHRvIG1ha2UgdGhlIGV4cGVkaXRpb24gYW5kIHRha2Ugd2l0aCBoaW0gdm9sdW50ZWVycyBmcm9tIHRoZSBlbnRpcmUgYXJteTsg4oCcZm9yIEkga25vdyzigJ0gaGUgY29udGludWVkLCDigJx0aGF0IG1hbnkgb2YgdGhlIHlvdW5nIG1lbiB3aWxsIGZvbGxvdyBpZiBJIGFtIGluIHRoZSBsZWFkLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZXkgYXNrZWQgd2hldGhlciBhbnkgb25lIGFtb25nIHRoZSBjYXB0YWlucyBvZiBsaWdodCB0cm9vcHMgd2FudGVkIHRvIGpvaW4gaW4gdGhlIG1hcmNoLiBUaGUgdm9sdW50ZWVyIHdhcyBBcmlzdGVhcyBvZiBDaGlvcywgd2hvIG9uIG1hbnkgb2NjYXNpb25zIHByb3ZlZCBoaW1zZWxmIHZhbHVhYmxlIHRvIHRoZSBhcm15IGZvciBzdWNoIHNlcnZpY2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3YXMgbm93IGxhdGUgYWZ0ZXJub29uLCBhbmQgdGhleSBvcmRlcmVkIHRoZSB2b2x1bnRlZXJzIHRvIHRha2UgYSBzbmF0Y2ggb2YgZm9vZCBhbmQgc2V0IG91dC4gVGhleSBhbHNvIGJvdW5kIHRoZSBndWlkZSBhbmQgdHVybmVkIGhpbSBvdmVyIHRvIHRoZSB2b2x1bnRlZXJzLCBhbmQgbWFkZSBhbiBhZ3JlZW1lbnQgd2l0aCB0aGVtIHRoYXQgaW4gY2FzZSB0aGV5IHNob3VsZCBjYXB0dXJlIHRoZSBoZWlnaHQsIHRoZXkgd2VyZSB0byBndWFyZCBpdCB0aHJvdWdoIHRoZSBuaWdodCBhbmQgZ2l2ZSBhIHNpZ25hbCBhdCBkYXlicmVhayB3aXRoIHRoZSB0cnVtcGV0OyB0aGVuIHRob3NlIG9uIHRoZSBoZWlnaHQgd2VyZSB0byBwcm9jZWVkIGFnYWluc3QgdGhlIENhcmR1Y2hpYW5zIHdobyB3ZXJlIGhvbGRpbmcgdGhlIHZpc2libGUgd2F5IG91dCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNC4xLjIwIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDQuMS4yMDwvYmlibD4uPC9ub3RlPiB3aGlsZSB0aGUgbWFpbiBhcm15IHdhcyB0byBjb21lIHRvIHRoZWlyIHN1cHBvcnQsIHB1c2hpbmcgZm9yd2FyZCBhcyBmYXN0IGFzIGl0IGNvdWxkLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuMS4yMCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjEuMjA8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['4.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoaXMgYWdyZWVtZW50IGNvbmNsdWRlZCwgdGhlIHZvbHVudGVlcnMsIGFib3V0IHR3byB0aG91c2FuZCBpbiBudW1iZXIsIHNldCBvdXQgb24gdGhlaXIgbWFyY2g7IGFuZCB0aGVyZSB3YXMgYSBoZWF2eSBkb3ducG91ciBvZiByYWluOyBhdCB0aGUgc2FtZSB0aW1lIFhlbm9waG9uIHdpdGggdGhlIHJlYXJndWFyZCBiZWdhbiBhZHZhbmNpbmcgdG93YXJkIHRoZSB2aXNpYmxlIHdheSBvdXQsIGluIG9yZGVyIHRoYXQgdGhlIGVuZW15IG1pZ2h0IGJlIGdpdmluZyB0aGVpciBhdHRlbnRpb24gdG8gdGhhdCByb2FkIGFuZCB0aGF0IHRoZSBwYXJ0eTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIHRoZSB2b2x1bnRlZXJzLjwvbm90ZT4gdGFraW5nIHRoZSByb3VuZGFib3V0IHJvdXRlIG1pZ2h0LCBzbyBmYXIgYXMgcG9zc2libGUsIGVzY2FwZSBvYnNlcnZhdGlvbi4KPC90cmFuc2xhdGlvbj4="
translation['4.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBhcyBzb29uIGFzIHRoZSB0cm9vcHMgb2YgdGhlIHJlYXJndWFyZCB3ZXJlIGF0IGEgZ29yZ2Ugd2hpY2ggdGhleSBoYWQgdG8gY3Jvc3MgYmVmb3JlIG1hcmNoaW5nIHVwIHRoZSBzdGVlcCBoaWxsLCBhdCB0aGF0IG1vbWVudCB0aGUgYmFyYmFyaWFucyBiZWdhbiB0byByb2xsIGRvd24gcm91bmQgc3RvbmVzIGxhcmdlIGVub3VnaCBmb3IgYSB3YWdvbi1sb2FkLCB3aXRoIGxhcmdlciBhbmQgc21hbGxlciBvbmVzIGFsc287IHRoZXkgY2FtZSBkb3duIHdpdGggYSBjcmFzaCB1cG9uIHRoZSByb2NrcyBiZWxvdyBhbmQgdGhlIGZyYWdtZW50cyBvZiB0aGVtIGZsZXcgaW4gYWxsIGRpcmVjdGlvbnMsIHNvIHRoYXQgaXQgd2FzIHF1aXRlIGltcG9zc2libGUgZXZlbiB0byBhcHByb2FjaCB0aGUgYXNjZW5kaW5nIHJvYWQuCjwvdHJhbnNsYXRpb24+"
translation['4.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gc29tZSBvZiB0aGUgY2FwdGFpbnMsIHVuYWJsZSB0byBwcm9jZWVkIGJ5IHRoaXMgcm91dGUsIHdvdWxkIHRyeSBhbm90aGVyLCBhbmQgdGhleSBrZXB0IHRoaXMgdXAgdW50aWwgZGFya25lc3MgY2FtZSBvbi4gSXQgd2FzIG5vdCB1bnRpbCB0aGV5IGltYWdpbmVkIHRoYXQgdGhlaXIgd2l0aGRyYXdhbCB3b3VsZCBiZSB1bm9ic2VydmVkIHRoYXQgdGhleSB3ZW50IGJhY2sgdG8gZGlubmVy4oCUYW5kIGl0IGNoYW5jZWQgdGhhdCB0aGV5IGhhZCBoYWQgbm8gYnJlYWtmYXN0IGVpdGhlci4gVGhlIGVuZW15LCBob3dldmVyLCBuZXZlciBzdG9wcGVkIHJvbGxpbmcgZG93biB0aGVpciBzdG9uZXMgYWxsIHRocm91Z2ggdGhlIG5pZ2h0LCBhcyBvbmUgY291bGQganVkZ2UgZnJvbSB0aGUgbm9pc2UuCjwvdHJhbnNsYXRpb24+"
translation['4.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFud2hpbGUgdGhlIHBhcnR5IHdpdGggdGhlIGd1aWRlLCBwcm9jZWVkaW5nIGJ5IGEgcm91bmRhYm91dCByb3V0ZSwgZm91bmQgdGhlIGd1YXJkczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLiBlLiwg4oCcdGhlIGd1YXJkc+KAnSB3aG9tIHRoZXkgZXhwZWN0ZWQgdG8gZmluZCB1cG9uIOKAnHRoZeKAnSBoZWlnaHQgbWVudGlvbmVkICg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuMS4yNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjEuMjU8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuMi4xIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDQuMi5sPC9iaWJsPikuIFNlZSBiZWxvdy48L25vdGU+IHNpdHRpbmcgYXJvdW5kIGEgZmlyZSwgYW5kIGFmdGVyIGtpbGxpbmcgc29tZSBvZiB0aGVtIGFuZCBjaGFzaW5nIGF3YXkgdGhlIG90aGVycyB0aGV5IHJlbWFpbmVkIGF0IHRoZSBwb3N0IHRoZW1zZWx2ZXMsIHN1cHBvc2luZyB0aGF0IHRoZXkgaGVsZCB0aGUgaGVpZ2h0Lgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuMS4yNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjEuMjU8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuMi4xIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDQuMi5sPC9iaWJsPikuIFNlZSBiZWxvdy48L3RyYW5zbGF0aW9uPg=="
translation['4.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkluIGZhY3QsIHRoZXkgd2VyZSBub3QgaG9sZGluZyBpdCwgZm9yIGl0IHdhcyBhIHJvdW5kIGhpbGwgYWJvdmUgdGhlbSBhbmQgcGFzdCBpdCByYW4gdGhpcyBuYXJyb3cgcm9hZCB1cG9uIHdoaWNoIHRoZSBndWFyZHMgaGFkIGJlZW4gc2l0dGluZy4gTmV2ZXJ0aGVsZXNzLCBmcm9tIHRoZSBwbGFjZSB0aGV5IGRpZCBob2xkIHRoZXJlIHdhcyBhIHdheSBvZiBhcHByb2FjaCB0byB0aGUgc3BvdCwgdXBvbiB0aGUgdmlzaWJsZSByb2FkLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLiBlLiwgdGhlIG9uZSBtZW50aW9uZWQgaW4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA0LjEuMjAiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNC4xLjIwPC9iaWJsPiwgMjMsIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNC4yLjEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNC4yLjE8L2JpYmw+Ljwvbm90ZT4gd2hlcmUgdGhlIG1haW4gYm9keSBvZiB0aGUgZW5lbXkgd2VyZSBzdGF0aW9uZWQuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNC4xLjIwIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDQuMS4yMDwvYmlibD4sIDIzLCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuMi4xIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDQuMi4xPC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['4.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkF0IHRoaXMgcGxhY2UsIHRoZW4sIHRoZXkgcGFzc2VkIHRoZSBuaWdodCwgYW5kIHdoZW4gZGF5IHdhcyBiZWdpbm5pbmcgdG8gYnJlYWssIHRoZXkgdG9vayB1cCB0aGVpciBtYXJjaCBzaWxlbnRseSBpbiBiYXR0bGUgYXJyYXkgYWdhaW5zdCB0aGUgZW5lbXk7IGZvciB0aGVyZSB3YXMgYSBtaXN0LCBhbmQgY29uc2VxdWVudGx5IHRoZXkgZ290IGNsb3NlIHVwIHRvIHRoZW0gd2l0aG91dCBiZWluZyBvYnNlcnZlZC4gV2hlbiB0aGV5IGRpZCBjYXRjaCBzaWdodCBvZiBvbmUgYW5vdGhlciwgdGhlIHRydW1wZXQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHNpZ25hbCBhZ3JlZWQgdXBvbiAoICAxIGFib3ZlKS48L25vdGU+IHNvdW5kZWQgYW5kIHRoZSBHcmVla3MgcmFpc2VkIHRoZSBiYXR0bGUgY3J5IGFuZCBydXNoZWQgdXBvbiB0aGUgZW5lbXkuIEFuZCB0aGUgQ2FyZHVjaGlhbnMgZGlkIG5vdCBtZWV0IHRoZWlyIGF0dGFjaywgYnV0IGFiYW5kb25lZCB0aGUgcm9hZCBhbmQgdG9vayB0byBmbGlnaHQ7IG9ubHkgYSBmZXcgb2YgdGhlbSwgaG93ZXZlciwgd2VyZSBraWxsZWQsIGZvciB0aGV5IHdlcmUgYWdpbGUgZmVsbG93cy4KPC90cmFuc2xhdGlvbj4="
translation['4.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk1lYW53aGlsZSBDaGVpcmlzb3BodXMgYW5kIGhpcyBjb21tYW5kLCBoZWFyaW5nIHRoZSB0cnVtcGV0LCBjaGFyZ2VkIGltbWVkaWF0ZWx5IHVwIHRoZSB2aXNpYmxlIHJvYWQ7IGFuZCBzb21lIG9mIHRoZSBvdGhlciBnZW5lcmFscyBtYWRlIHRoZWlyIHdheSB3aXRob3V0IGZvbGxvd2luZyBhbnkgcm9hZCBmcm9tIHRoZSBwb2ludHMgd2hlcmUgdGhleSBzZXZlcmFsbHkgY2hhbmNlZCB0byBiZSBhbmQsIGNsYW1iZXJpbmcgdXAgYXMgYmVzdCB0aGV5IGNvdWxkLCBwdWxsZWQgb25lIGFub3RoZXIgdXAgd2l0aCB0aGVpciBzcGVhcnM7CjwvdHJhbnNsYXRpb24+"
translation['4.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPmFuZCBpdCB3YXMgdGhleSB3aG8gd2VyZSBmaXJzdCB0byBqb2luIHRoZSB0cm9vcHMgdGhhdCBoYWQgYWxyZWFkeSBnYWluZWQgcG9zc2Vzc2lvbiBvZiB0aGUgcGxhY2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBYZW5vcGhvbiB3aXRoIGhhbGYgdGhlIHJlYXJndWFyZCBzZXQgb3V0IGJ5IHRoZSBzYW1lIHJvdXRlIHdoaWNoIHRoZSBwYXJ0eSB3aXRoIHRoZSBndWlkZSBoYWQgZm9sbG93ZWQsIGJlY2F1c2UgdGhpcyB3YXMgdGhlIGVhc2llc3Qgcm91dGUgZm9yIHRoZSBiYWdnYWdlIGFuaW1hbHM7IGFuZCBiZWhpbmQgdGhlIGJhZ2dhZ2UgYW5pbWFscyBoZSBwb3N0ZWQgdGhlIG90aGVyIGhhbGYgb2YgdGhlIHJlYXJndWFyZC4KPC90cmFuc2xhdGlvbj4="
translation['4.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyB0aGV5IHByb2NlZWRlZCB0aGV5IGNhbWUgdXBvbiBhIGhpbGwgYWJvdmUgdGhlIHJvYWQgd2hpY2ggaGFkIGJlZW4gc2VpemVkIGJ5IHRoZSBlbmVteSwgYW5kIGZvdW5kIHRoZW1zZWx2ZXMgY29tcGVsbGVkIGVpdGhlciB0byBkaXNsb2RnZSB0aGVtIG9yIGJlIGNvbXBsZXRlbHkgc2VwYXJhdGVkIGZyb20gdGhlIHJlc3Qgb2YgdGhlIEdyZWVrczsgYW5kIHdoaWxlLCBzbyBmYXIgYXMgdGhlIHRyb29wcyB0aGVtc2VsdmVzIHdlcmUgY29uY2VybmVkLCB0aGV5IG1pZ2h0IGhhdmUgdGFrZW4gdGhlIHNhbWUgcm91dGUgdGhhdCB0aGUgcmVzdDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DaGVpcmlzb3BodXMgYW5kIGhpcyBjb21tYW5kLjwvbm90ZT4gZm9sbG93ZWQsIHRoZSBiYWdnYWdlIGFuaW1hbHMgY291bGQgbm90IGdldCB0aHJvdWdoIGJ5IGFueSBvdGhlciByb2FkIHRoYW4gdGhpcyBvbmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+V2hpY2gg4oCcY291bGQgYmUgdHJhdmVyc2VkIGV2ZW4gYnkgYmFnZ2FnZSBhbmltYWxzLOKAnSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuMS4yNCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjEuMjQ8L2JpYmw+Ljwvbm90ZT4gYnkgd2hpY2ggWGVub3Bob24gd2FzIHByb2NlZWRpbmcuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNC4xLjI0IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDQuMS4yNDwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['4.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGFuZCB0aGVyZSwgYWNjb3JkaW5nbHksIHdpdGggd29yZHMgb2YgY2hlZXIgdG8gb25lIGFub3RoZXIsIHRoZXkgY2hhcmdlZCB1cG9uIHRoZSBoaWxsIHdpdGggdGhlaXIgY29tcGFuaWVzIGluIGNvbHVtbiwgbm90IHN1cnJvdW5kaW5nIGl0LCBidXQgbGVhdmluZyB0aGUgZW5lbXkgYSB3YXkgb2YgcmV0cmVhdCBpbiBjYXNlIHRoZXkgY2hvc2UgdG8gdXNlIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYSB3aGlsZSwgYXMgdGhlIEdyZWVrcyB3ZXJlIGNsaW1iaW5nIHVwIGJ5IHdoYXRldmVyIHdheSB0aGV5IHNldmVyYWxseSBjb3VsZCwgdGhlIGJhcmJhcmlhbnMgZGlzY2hhcmdlZCBhcnJvd3MgYW5kIG90aGVyIG1pc3NpbGVzIHVwb24gdGhlbTsgdGhleSBkaWQgbm90IGxldCB0aGVtIGdldCBuZWFyLCBob3dldmVyLCBidXQgdG9vayB0byBmbGlnaHQgYW5kIGFiYW5kb25lZCB0aGUgcGxhY2UuIE5vIHNvb25lciBoYWQgdGhlIEdyZWVrcyBwYXNzZWQgYnkgdGhpcyBoaWxsLCB0aGFuIHRoZXkgc2F3IGEgc2Vjb25kIG9uZSBhaGVhZCBzaW1pbGFybHkgb2NjdXBpZWQgYnkgdGhlIGVuZW15LCBhbmQgZGVjaWRlZCB0byBwcm9jZWVkIGFnYWluc3QgdGhpcyBvbmUgaW4gaXRzIHR1cm4uCjwvdHJhbnNsYXRpb24+"
translation['4.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5YZW5vcGhvbiwgaG93ZXZlciwgYmVjb21pbmcgYXBwcmVoZW5zaXZlIGxlc3QsIGlmIGhlIHNob3VsZCBsZWF2ZSB1bm9jY3VwaWVkIHRoZSBoaWxsIGhlIGhhZCBqdXN0IGNhcHR1cmVkLCB0aGUgZW5lbXkgbWlnaHQgdGFrZSBwb3NzZXNzaW9uIG9mIGl0IGFnYWluIGFuZCBhdHRhY2sgdGhlIGJhZ2dhZ2UgdHJhaW4gYXMgaXQgcGFzc2VkIChhbmQgdGhlIHRyYWluIHN0cmV0Y2hlZCBvdXQgYSBsb25nIHdheSBiZWNhdXNlIG9mIHRoZSBuYXJyb3duZXNzIG9mIHRoZSByb2FkIGl0IHdhcyBmb2xsb3dpbmcpLCBsZWZ0IHRocmVlIGNhcHRhaW5zIHVwb24gdGhlIGhpbGwsIENlcGhpc29kb3J1cywgc29uIG9mIENlcGhpc29waG9uLCBhbiBBdGhlbmlhbiwgQW1waGljcmF0ZXMsIHNvbiBvZiBBbXBoaWRlbXVzLCBhbHNvIGFuIEF0aGVuaWFuLCBhbmQgQXJjaGFnb3JhcywgYW4gQXJnaXZlIGV4aWxlOyB3aGlsZSBoZSBoaW1zZWxmIHdpdGggdGhlIHJlc3Qgb2YgdGhlIHRyb29wcyBwcm9jZWVkZWQgYWdhaW5zdCB0aGUgc2Vjb25kIGhpbGwsIHdoaWNoIHRoZXkgY2FwdHVyZWQgaW4gdGhlIHNhbWUgZmFzaGlvbiBhcyB0aGUgZmlyc3QuCjwvdHJhbnNsYXRpb24+"
translation['4.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmUgc3RpbGwgcmVtYWluZWQgYSB0aGlyZCByb3VuZCBoaWxsLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgb25lIG9yaWdpbmFsbHkgbWVudGlvbmVkIGJ5IHRoZSBDYXJkdWNoaWFuIGd1aWRlLiBTZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA0LjEuMjUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNC4xLjI1PC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA0LjIuNiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjIuNjwvYmlibD4uPC9ub3RlPiBmYXIgdGhlIHN0ZWVwZXN0IG9mIHRoZW0gYWxsLCB0aGUgb25lIHRoYXQgcm9zZSBhYm92ZSB0aGUgZ3VhcmQgcG9zdCwgYnkgdGhlIGZpcmUsIHdoaWNoIGhhZCBiZWVuIGNhcHR1cmVkIGR1cmluZyB0aGUgbmlnaHQgYnkgdGhlIHZvbHVudGVlcnMuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNC4xLjI1IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDQuMS4yNTwvYmlibD4sIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNC4yLjYiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNC4yLjY8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['4.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGUgR3JlZWtzIGdvdCBuZWFyIHRoaXMgaGlsbCwgdGhlIGJhcmJhcmlhbnMgYWJhbmRvbmVkIGl0IHdpdGhvdXQgc3RyaWtpbmcgYSBibG93LCBzbyB0aGF0IGV2ZXJ5Ym9keSB3YXMgZmlsbGVkIHdpdGggc3VycHJpc2UgYW5kIGltYWdpbmVkIHRoYXQgdGhleSBoYWQgcXVpdCB0aGUgcGxhY2Ugb3V0IG9mIGZlYXIgdGhhdCB0aGV5IG1pZ2h0IGJlIHN1cnJvdW5kZWQgYW5kIGJsb2NrYWRlZC4gQXMgaXQgcHJvdmVkLCBob3dldmVyLCB0aGV5IGhhZCBzZWVuLCBsb29raW5nIGRvd24gZnJvbSB0aGVpciBoZWlnaHQsIHdoYXQgd2FzIGdvaW5nIG9uIGZhcnRoZXIgYmFjaywgYW5kIHdlcmUgYWxsIHNldHRpbmcgb3V0IHRvIGF0dGFjayB0aGUgR3JlZWsgcmVhcmd1YXJkLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLiBlLiB0aGUgdGhyZWUgY29tcGFuaWVzIGxlZnQgdXBvbiB0aGUgZmlyc3QgaGlsbCwgd2hpY2ggdGhlIG1haW4gYm9keSBvZiBYZW5vcGhvbidzIHRyb29wcyBoYWQgbm93IHBhc3NlZCBieS4gU2VlIGJlbG93Ljwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['4.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgWGVub3Bob24gcHJvY2VlZGVkIHRvIGNsaW1iIHRoZSBhYmFuZG9uZWQgaGVpZ2h0IHdpdGggaGlzIHlvdW5nZXN0IHRyb29wcywgb3JkZXJpbmcgdGhlIHJlc3QgdG8gbW92ZSBvbiBzbG93bHkgaW4gb3JkZXIgdGhhdCB0aGUgaGluZG1vc3QgY29tcGFuaWVzIG1pZ2h0IGNhdGNoIHVwOyB0aGVuIHRoZXkgd2VyZSB0byBhZHZhbmNlIGFsb25nIHRoZSByb2FkIGFuZCBoYWx0IHVuZGVyIGFybXMgb24gdGhlIHBsYXRlYXU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SW50byB3aGljaCB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byUzrrOss6xz4POuc+CPC9mb3JlaWduPiwgb3Ig4oCcd2F5IG91dCzigJ0gdWx0aW1hdGVseSBsZWQuPC9ub3RlPiBhdCB0aGUgdG9wIG9mIHRoZSBwYXNzLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJTOus6yzrHPg865z4I8L2ZvcmVpZ24+LCBvciDigJx3YXkgb3V0LOKAnSB1bHRpbWF0ZWx5IGxlZC48L3RyYW5zbGF0aW9uPg=="
translation['4.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyB0aW1lIEFyY2hhZ29yYXMgdGhlIEFyZ2l2ZSBjYW1lIHVwIGluIGZsaWdodCBhbmQgcmVwb3J0ZWQgdGhhdCB0aGUgR3JlZWtzIGhhZCBiZWVuIGRpc2xvZGdlZCBsb2RnZWQgZnJvbSB0aGUgZmlyc3QgaGlsbCwgdGhhdCBDZXBoaXNvZG9ydXMgYW5kIEFtcGhpY3JhdGVzIGhhZCBiZWVuIGtpbGxlZCwgYW5kIGxpa2V3aXNlIGFsbCB0aGUgcmVzdCBleGNlcHQgc3VjaCBhcyBoYWQgbGVhcGVkIGRvd24gdGhlIHJvY2tzIGFuZCByZWFjaGVkIHRoZSByZWFyZ3VhcmQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkluIHRoaXMgY2FzZSB0aGUgcmVmZXJlbmNlIGlzIG1hbmlmZXN0bHkgdG8gdGhlIGRpdmlzaW9uIGJlaGluZCB0aGUgYmFnZ2FnZSB0cmFpbiAoc2VjLiA5KS48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['4.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciBhY2NvbXBsaXNoaW5nIHRoaXMgYWNoaWV2ZW1lbnQgdGhlIGJhcmJhcmlhbnMgY2FtZSB0byBhIGhpbGwgb3Bwb3NpdGUgdGhlIHJvdW5kIGhpbGwsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSBzZWMuIDE0IGFib3ZlLjwvbm90ZT4gYW5kIFhlbm9waG9uLCB0aHJvdWdoIGFuIGludGVycHJldGVyLCBoZWxkIGEgY29sbG9xdXkgd2l0aCB0aGVtIGluIHJlZ2FyZCB0byBhIHRydWNlIGFuZCBhc2tlZCB0aGVtIHRvIGdpdmUgYmFjayB0aGUgYm9kaWVzIG9mIHRoZSBHcmVlayBkZWFkLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IHJlcGxpZWQgdGhhdCB0aGV5IHdvdWxkIGdpdmUgdGhlbSBiYWNrIG9uIGNvbmRpdGlvbiB0aGF0IHRoZSBHcmVla3Mgc2hvdWxkIG5vdCBidXJuIHRoZWlyIGhvdXNlcy4gVG8gdGhpcyBYZW5vcGhvbiBhZ3JlZWQuIEJ1dCB3aGlsZSB0aGUgcmVzdCBvZiB0aGUgYXJteSB3YXMgcGFzc2luZyBieSBhbmQgdGhleSB3ZXJlIGVuZ2FnZWQgaW4gdGhpcyBjb25mZXJlbmNlLCBhbGwgdGhlIGVuZW15IGZyb20gdGhhdCBuZWlnaGJvdXJob29kIGhhZCBzdHJlYW1lZCB0b2dldGhlciB0byB0aGUgc3BvdDsKPC90cmFuc2xhdGlvbj4="
translation['4.2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgYXMgc29vbiBhcyBYZW5vcGhvbiBhbmQgaGlzIG1lbiBiZWdhbiB0byBkZXNjZW5kIGZyb20gdGhlIHJvdW5kIGhpbGwsIGluIG9yZGVyIHRvIGpvaW4gdGhlIHJlc3Qgb2YgdGhlIEdyZWVrcyBhdCB0aGUgcGxhY2Ugd2hlcmUgdGhleSB3ZXJlIGhhbHRlZCB1bmRlciBhcm1zLCB0aGUgZW5lbXkgdG9vayB0aGlzIG9wcG9ydHVuaXR5IHRvIHJ1c2ggdXBvbiB0aGVtIGluIGdyZWF0IGZvcmNlIGFuZCB3aXRoIGEgZ3JlYXQgZGVhbCBvZiB1cHJvYXIuIFdoZW4gdGhleSBoYWQgcmVhY2hlZCB0aGUgY3Jlc3Qgb2YgdGhlIGhpbGwgZnJvbSB3aGljaCBYZW5vcGhvbiB3YXMgZGVzY2VuZGluZywgdGhleSBwcm9jZWVkZWQgdG8gcm9sbCBkb3duIHN0b25lcy4gVGhleSBicm9rZSBvbmUgbWFuJ3MgbGVnLCBhbmQgWGVub3Bob24gZm91bmQgaGltc2VsZiBkZXNlcnRlZCBieSB0aGUgc2VydmFudCB3aG8gd2FzIGNhcnJ5aW5nIGhpcyBzaGllbGQ7CjwvdHJhbnNsYXRpb24+"
translation['4.2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5idXQgRXVyeWxvY2h1cyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEx1c2kiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEx1c2kiPkx1c2k8L3BsYWNlTmFtZT4sIGEgaG9wbGl0ZSwgcmFuIHVwIHRvIGhpbSBhbmQsIGtlZXBpbmcgaGlzIHNoaWVsZCBoZWxkIG91dCBpbiBmcm9udCBvZiB0aGVtIGJvdGgsIGZlbGwgYmFjayB3aXRoIGhpbTsgYW5kIHRoZSByZXN0IGFsc28gbWFkZSBnb29kIHRoZWlyIHJldHJlYXQgdG8gdGhlIG1haW4gYXJyYXkuCjwvdHJhbnNsYXRpb24+"
translation['4.2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiB0aGUgZW50aXJlIEdyZWVrIGFybXkgdW5pdGVkLCBhbmQgdGhlIHRyb29wcyB0b29rIHVwIHF1YXJ0ZXJzIHRoZXJlIGluIG1hbnkgZmluZSBob3VzZXMgYW5kIGluIHRoZSBtaWRzdCBvZiBhYnVuZGFudCBzdXBwbGllczsgZm9yIHRoZSBpbmhhYml0YW50cyBoYWQgd2luZSBpbiBzdWNoIHF1YW50aXRpZXMgdGhhdCB0aGV5IGtlcHQgaXQgaW4gY2VtZW50ZWQgY2lzdGVybnMuCjwvdHJhbnNsYXRpb24+"
translation['4.2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgWGVub3Bob24gYW5kIENoZWlyaXNvcGh1cyBlZmZlY3RlZCBhbiBhcnJhbmdlbWVudCBieSB3aGljaCB0aGV5IHJlY292ZXJlZCB0aGUgYm9kaWVzIG9mIHRoZWlyIGRlYWQgYW5kIGdhdmUgYmFjayB0aGUgZ3VpZGU7IGFuZCB0aGV5IHJlbmRlcmVkIHRvIHRoZSBkZWFkLCBzbyBmYXIgYXMgdGhlaXIgbWVhbnMgcGVybWl0dGVkLCBhbGwgdGhlIHVzdWFsIGhvbm91cnMgdGhhdCBhcmUgcGFpZCB0byBicmF2ZSBtZW4uCjwvdHJhbnNsYXRpb24+"
translation['4.2.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhlIG5leHQgZGF5IHRoZXkgY29udGludWVkIHRoZWlyIG1hcmNoIHdpdGhvdXQgYSBndWlkZSwgd2hpbGUgdGhlIGVuZW15LCBieSBmaWdodGluZyBhbmQgYnkgc2VpemluZyBwb3NpdGlvbnMgaW4gYWR2YW5jZSB3aGVyZXZlciB0aGUgcm9hZCB3YXMgbmFycm93LCB0cmllZCB0byBwcmV2ZW50IHRoZWlyIHBhc3NhZ2UuCjwvdHJhbnNsYXRpb24+"
translation['4.2.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSwgd2hlbmV2ZXIgdGhleSBibG9ja2VkIHRoZSBtYXJjaCBvZiB0aGUgdmFuLCBYZW5vcGhvbiB3b3VsZCBwdXNoIGZvcndhcmQgZnJvbSB0aGUgcmVhciB0byB0aGUgbW91bnRhaW5zIGFuZCBicmVhayB0aGUgYmxvY2thZGUgb2YgdGhlIHJvYWQgZm9yIHRoZSB2YW4gYnkgdHJ5aW5nIHRvIGdldCBoaWdoZXIgdGhhbiB0aG9zZSB3aG8gd2VyZSBoYWx0aW5nIGl0LAo8L3RyYW5zbGF0aW9uPg=="
translation['4.2.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgd2hlbmV2ZXIgdGhleSBhdHRhY2tlZCB0aGUgcmVhciwgQ2hlaXJpc29waHVzIHdvdWxkIHNhbGx5IGZvcnRoIGFuZCwgYnkgdHJ5aW5nIHRvIGdldCBoaWdoZXIgdGhhbiB0aGUgb2JzdHJ1Y3RpbmcgZm9yY2UsIHdvdWxkIGJyZWFrIHRoZSBibG9ja2FkZSBvZiB0aGUgcGFzc2FnZS13YXkgZm9yIHRoZSByZWFyOyBpbiB0aGlzIHdheSB0aGV5IGNvbnRpbnVhbGx5IGFpZGVkIG9uZSBhbm90aGVyIGFuZCB0b29rIHplYWxvdXMgY2FyZSBmb3Igb25lIGFub3RoZXIuCjwvdHJhbnNsYXRpb24+"
translation['4.2.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSB3ZXJlIHRpbWVzLCBpbmRlZWQsIHdoZW4gdGhlIGJhcmJhcmlhbnMgY2F1c2VkIGEgZ3JlYXQgZGVhbCBvZiB0cm91YmxlIGV2ZW4gdG8gdGhlIHRyb29wcyB3aG8gaGFkIGNsaW1iZWQgdG8gYSBoaWdoZXIgcG9zaXRpb24sIHdoZW4gdGhleSB3ZXJlIGNvbWluZyBkb3duIGFnYWluOyBmb3IgdGhlaXIgbWVuIHdlcmUgc28gYWdpbGUgdGhhdCBldmVuIGlmIHRoZXkgdG9vayB0byBmbGlnaHQgZnJvbSBjbG9zZSBhdCBoYW5kLCB0aGV5IGNvdWxkIGVzY2FwZTsgZm9yIHRoZXkgaGFkIG5vdGhpbmcgdG8gY2FycnkgZXhjZXB0IGJvd3MgYW5kIHNsaW5ncy4KPC90cmFuc2xhdGlvbj4="
translation['4.2.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBib3dtZW4gdGhleSB3ZXJlIG1vc3QgZXhjZWxsZW50OyB0aGV5IGhhZCBib3dzIG5lYXJseSB0aHJlZSBjdWJpdHMgbG9uZyBhbmQgdGhlaXIgYXJyb3dzIHdlcmUgbW9yZSB0aGFuIHR3byBjdWJpdHMsIGFuZCB3aGVuIHRoZXkgc2hvdCwgdGhleSB3b3VsZCBkcmF3IHRoZWlyIHN0cmluZ3MgYnkgcHJlc3Npbmcgd2l0aCB0aGUgbGVmdCBmb290IGFnYWluc3QgdGhlIGxvd2VyIGVuZCBvZiB0aGUgYm93OyBhbmQgdGhlaXIgYXJyb3dzIHdvdWxkIGdvIHN0cmFpZ2h0IHRocm91Z2ggc2hpZWxkcyBhbmQgYnJlYXN0cGxhdGVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA0LjEuMTgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNC4xLjE4PC9iaWJsPi48L25vdGU+IFdoZW5ldmVyIHRoZXkgZ290IGhvbGQgb2YgdGhlbSwgdGhlIEdyZWVrcyB3b3VsZCB1c2UgdGhlc2UgYXJyb3dzIGFzIGphdmVsaW5zLCBmaXR0aW5nIHRoZW0gd2l0aCB0aG9uZ3MuIEluIHRoZXNlIHJlZ2lvbnMgdGhlIENyZXRhbnMgbWFkZSB0aGVtc2VsdmVzIGV4Y2VlZGluZ2x5IHVzZWZ1bC4gVGhleSB3ZXJlIGNvbW1hbmRlZCBieSBhIENyZXRhbiBuYW1lZCBTdHJhdG9jbGVzLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuMS4xOCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjEuMTg8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['4.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gb3IgdGhhdCBkYXkgYWdhaW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+T24gdGhlIHByZWNlZGluZyBuaWdodCBhbHNvIHRoZXkgaGFkIGJlZW4gcXVhcnRlcmVkIGluIHZpbGxhZ2VzICg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuMi4yMiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjIuMjI8L2JpYmw+KS48L25vdGU+IHRoZXkgZm91bmQgcXVhcnRlcnMgaW4gdGhlIHZpbGxhZ2VzIHRoYXQgbGllIGFib3ZlIHRoZSBwbGFpbiBib3JkZXJpbmcgdGhlIENlbnRyaXRlcyByaXZlciwgd2hpY2ggaXMgYWJvdXQgdHdvIHBsZXRocmEgaW4gd2lkdGggYW5kIHNlcGFyYXRlcyA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuMi4yMiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjIuMjI8L2JpYmw+KS48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNjY1MSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA2NjUxIj5Bcm1lbmlhPC9wbGFjZU5hbWU+IGFuZCB0aGUgY291bnRyeSBvZiB0aGUgQ2FyZHVjaGlhbnMuIFRoZXJlIHRoZSBHcmVla3MgdG9vayBicmVhdGgsIGdsYWQgdG8gYmVob2xkIGEgcGxhaW47IGZvciB0aGUgcml2ZXIgd2FzIGRpc3RhbnQgc2l4IG9yIHNldmVuIHN0YWRpYSBmcm9tIHRoZSBtb3VudGFpbnMgb2YgdGhlIENhcmR1Y2hpYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkF0IHRoZSB0aW1lLCB0aGVuLCB0aGV5IHdlbnQgaW50byB0aGVpciBxdWFydGVycyB2ZXJ5IGhhcHBpbHksIGZvciB0aGV5IGhhZCBwcm92aXNpb25zIGFuZCBsaWtld2lzZSBtYW55IHJlY29sbGVjdGlvbnMgb2YgdGhlIGhhcmRzaGlwcyB0aGF0IHdlcmUgbm93IHBhc3QuIEZvciBkdXJpbmcgYWxsIHRoZSBzZXZlbiBkYXlzIG9mIHRoZWlyIG1hcmNoIHRocm91Z2ggdGhlIGxhbmQgb2YgdGhlIENhcmR1Y2hpYW5zIHRoZXkgd2VyZSBjb250aW51YWxseSBmaWdodGluZywgYW5kIHRoZXkgc3VmZmVyZWQgbW9yZSBldmlscyB0aGFuIGFsbCB3aGljaCB0aGV5IGhhZCBzdWZmZXJlZCB0YWtlbiB0b2dldGhlciBhdCB0aGUgaGFuZHMgb2YgdGhlIEtpbmcgYW5kIFRpc3NhcGhlcm5lcy4gSW4gdGhlIGZlZWxpbmcsIHRoZXJlZm9yZSwgdGhhdCB0aGV5IHdlcmUgcmlkIG9mIHRoZXNlIHRyb3VibGVzIHRoZXkgbGF5IGRvd24gaGFwcGlseSB0byByZXN0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BdCBkYXlicmVhaywgaG93ZXZlciwgdGhleSBjYXVnaHQgc2lnaHQgb2YgaG9yc2VtZW4gYXQgYSBwbGFjZSBhY3Jvc3MgdGhlIHJpdmVyLCBmdWxseSBhcm1lZCBhbmQgcmVhZHkgdG8gZGlzcHV0ZSB0aGVpciBwYXNzYWdlLCBhbmQgbGlrZXdpc2UgZm9vdC1zb2xkaWVycyBkcmF3biB1cCBpbiBsaW5lIG9mIGJhdHRsZSB1cG9uIHRoZSBibHVmZnMgYWJvdmUgdGhlIGhvcnNlbWVuLCB0byBwcmV2ZW50IHRoZWlyIHB1c2hpbmcgdXAgaW50byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNjY1MSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA2NjUxIj5Bcm1lbmlhPC9wbGFjZU5hbWU+Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFsbCB0aGVzZSB3ZXJlIHRoZSB0cm9vcHMgb2YgT3JvbnRhczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TYXRyYXAgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDY2NTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwNjY1MSI+QXJtZW5pYTwvcGxhY2VOYW1lPi4gY3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi40LjgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi40LjgtOTwvYmlibD47IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy40LjEzIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuNC4xMzwvYmlibD4sIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy41LjE3IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuNS4xNzwvYmlibD4uPC9ub3RlPiBhbmQgQXJ0dWNoYXMsPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDY2NTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwNjY1MSI+QXJtZW5pYTwvcGxhY2VOYW1lPi4gY3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi40LjgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi40LjgtOTwvYmlibD47IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy40LjEzIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuNC4xMzwvYmlibD4sIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy41LjE3IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuNS4xNzwvYmlibD4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgUGVyc2lhbiBnZW5lcmFsLjwvbm90ZT4gYW5kIGNvbnNpc3RlZCBvZiBBcm1lbmlhbnMsIE1hcmRpYW5zLCBhbmQgQ2hhbGRhZWFuIG1lcmNlbmFyaWVzLiBUaGUgQ2hhbGRhZWFucyB3ZXJlIHNhaWQgdG8gYmUgYW4gaW5kZXBlbmRlbnQgYW5kIHZhbGlhbnQgcGVvcGxlOyB0aGV5IGhhZCBhcyB3ZWFwb25zIGxvbmcgd2lja2VyIHNoaWVsZHMgYW5kIGxhbmNlcy4KPC90cmFuc2xhdGlvbj4="
translation['4.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB0aGUgYmx1ZmZzIGp1c3QgbWVudGlvbmVkLCB1cG9uIHdoaWNoIHRoZXNlIHRyb29wcyB3ZXJlIGRyYXduIHVwLCB3ZXJlIGRpc3RhbnQgdGhyZWUgb3IgZm91ciBwbGV0aHJhIGZyb20gdGhlIHJpdmVyLCBhbmQgdGhlcmUgd2FzIG9ubHkgb25lIHJvYWQgdG8gYmUgc2VlbiB0aGF0IGxlZCB1cCB0aGVtLCBhcHBhcmVudGx5IGFuIGFydGlmaWNpYWwgcm9hZDsgc28gYXQgdGhpcyBwb2ludDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIG9wcG9zaXRlIHRoaXMgcm9hZCwgd2hlcmUgdGhleSBuYXR1cmFsbHkgZXhwZWN0ZWQgdG8gZmluZCBhIHByYWN0aWNhYmxlIGZvcmQuPC9ub3RlPiB0aGUgR3JlZWtzIHVuZGVydG9vayB0byBjcm9zcyB0aGUgcml2ZXIuCjwvdHJhbnNsYXRpb24+"
translation['4.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSBtYWRlIHRoZSBhdHRlbXB0LCBob3dldmVyLCB0aGUgd2F0ZXIgcHJvdmVkIHRvIGJlIG1vcmUgdGhhbiBicmVhc3QgZGVlcCBhbmQgdGhlIHJpdmVyIGJlZCB3YXMgcm91Z2ggd2l0aCBsYXJnZSwgc2xpcHBlcnkgc3RvbmVzOyBmdXJ0aGVybW9yZSwgdGhleSBjb3VsZCBub3QgY2FycnkgdGhlaXIgc2hpZWxkcyBpbiB0aGUgd2F0ZXIsIGZvciBpZiB0aGV5IHRyaWVkIHRoYXQsIHRoZSBjdXJyZW50IHdvdWxkIHNuYXRjaCB0aGVtIGF3YXksIHdoaWxlIGlmIGEgbWFuIGNhcnJpZWQgdGhlbSBvbiBoaXMgaGVhZCwgaGlzIGJvZHkgd2FzIGxlZnQgdW5wcm90ZWN0ZWQgYWdhaW5zdCBhcnJvd3MgYW5kIG90aGVyIG1pc3NpbGVzOyBzbyB0aGV5IHR1cm5lZCBiYWNrIGFuZCB3ZW50IGludG8gY2FtcCB0aGVyZSBieSB0aGUgc2lkZSBvZiB0aGUgcml2ZXIuCjwvdHJhbnNsYXRpb24+"
translation['4.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk1lYW53aGlsZSwgYXQgdGhlIHBvaW50IHdoZXJlIHRoZXkgaGFkIHRoZW1zZWx2ZXMgc3BlbnQgdGhlIHByZXZpb3VzIG5pZ2h0LCBvbiB0aGUgbW91bnRhaW4gc2lkZSwgdGhleSBjb3VsZCBzZWUgdGhlIENhcmR1Y2hpYW5zIGdhdGhlcmVkIHRvZ2V0aGVyIHVuZGVyIGFybXMgaW4gZ3JlYXQgbnVtYmVycy4gVGhlbiBpdCB3YXMgdGhhdCBkZWVwIGRlc3BvbmRlbmN5IGZlbGwgdXBvbiB0aGUgR3JlZWtzLCBhcyB0aGV5IHNhdyBiZWZvcmUgdGhlbSBhIHJpdmVyIGRpZmZpY3VsdCB0byBjcm9zcywgYmV5b25kIGl0IHRyb29wcyB0aGF0IHdvdWxkIG9ic3RydWN0IHRoZWlyIGNyb3NzaW5nLCBhbmQgYmVoaW5kIHRoZW0gdGhlIENhcmR1Y2hpYW5zLCByZWFkeSB0byBmYWxsIHVwb24gdGhlaXIgcmVhciB3aGVuIHRoZXkgdHJpZWQgdG8gY3Jvc3MuCjwvdHJhbnNsYXRpb24+"
translation['4.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGF0IGRheSBhbmQgbmlnaHQsIGFjY29yZGluZ2x5LCB0aGV5IHJlbWFpbmVkIHRoZXJlLCBpbiBncmVhdCBwZXJwbGV4aXR5LiBCdXQgWGVub3Bob24gaGFkIGEgZHJlYW07IGhlIHRob3VnaHQgdGhhdCBoZSB3YXMgYm91bmQgaW4gZmV0dGVycywgYnV0IHRoYXQgdGhlIGZldHRlcnMgZmVsbCBvZmYgZnJvbSBoaW0gb2YgdGhlaXIgb3duIGFjY29yZCwgc28gdGhhdCBoZSB3YXMgcmVsZWFzZWQgYW5kIGNvdWxkIHRha2UgYXMgbG9uZyBzdGVwczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtM65zrHOss6x4b23zr3Otc65zr0sPC9mb3JlaWduPiB3aGljaCBhbHNvIG1lYW5zIOKAnHRvIGNyb3Nz4oCdIGEgcml2ZXIgKHNlZSBhYm92ZSkuIEhlcmUgbGF5IHRoZSBnb29kIG9tZW4gb2YgdGhlIGRyZWFtLjwvbm90ZT4gYXMgaGUgcGxlYXNlZC4gV2hlbiBkYXduIGNhbWUsIGhlIHdlbnQgdG8gQ2hlaXJpc29waHVzLCB0b2xkIGhpbSBoZSBoYWQgaG9wZXMgdGhhdCBhbGwgd291bGQgYmUgd2VsbCwgYW5kIHJlbGF0ZWQgdG8gaGltIGhpcyBkcmVhbS4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTOuc6xzrLOseG9t869zrXOuc69LDwvZm9yZWlnbj4gd2hpY2ggYWxzbyBtZWFucyDigJx0byBjcm9zc+KAnSBhIHJpdmVyIChzZWUgYWJvdmUpLiBIZXJlIGxheSB0aGUgZ29vZCBvbWVuIG9mIHRoZSBkcmVhbS48L3RyYW5zbGF0aW9uPg=="
translation['4.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkNoZWlyaXNvcGh1cyB3YXMgcGxlYXNlZCwgYW5kIGFzIHNvb24gYXMgZGF5IGJlZ2FuIHRvIGJyZWFrLCBhbGwgdGhlIGdlbmVyYWxzIHdlcmUgYXQgaGFuZCBhbmQgcHJvY2VlZGVkIHRvIG9mZmVyIHNhY3JpZmljZXMuIEFuZCB3aXRoIHRoZSB2ZXJ5IGZpcnN0IHZpY3RpbSB0aGUgb21lbnMgd2VyZSBmYXZvdXJhYmxlLiBUaGVuIHRoZSBnZW5lcmFscyBhbmQgY2FwdGFpbnMgd2l0aGRyZXcgZnJvbSB0aGUgc2FjcmlmaWNlIGFuZCBnYXZlIG9yZGVycyB0byB0aGUgdHJvb3BzIHRvIGdldCB0aGVpciBicmVha2Zhc3RzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hpbGUgWGVub3Bob24gd2FzIGJyZWFrZmFzdGluZywgdHdvIHlvdW5nIG1lbiBjYW1lIHJ1bm5pbmcgdXAgdG8gaGltOyBmb3IgYWxsIGtuZXcgdGhhdCB0aGV5IG1pZ2h0IGdvIHRvIGhpbSB3aGV0aGVyIGhlIHdhcyBicmVha2Zhc3Rpbmcgb3IgZGluaW5nLCBhbmQgdGhhdCBpZiBoZSB3ZXJlIGFzbGVlcCwgdGhleSBtaWdodCBhd2FrZW4gaGltIGFuZCB0ZWxsIGhpbSB3aGF0ZXZlciB0aGV5IG1pZ2h0IGhhdmUgdG8gdGVsbCB0aGF0IGNvbmNlcm5lZCB0aGUgd2FyLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGUgcHJlc2VudCBjYXNlIHRoZSB5b3VuZyBtZW4gcmVwb3J0ZWQgdGhhdCB0aGV5IGhhZCBoYXBwZW5lZCB0byBiZSBnYXRoZXJpbmcgZHJ5IHN0aWNrcyBmb3IgdGhlIHB1cnBvc2Ugb2YgbWFraW5nIGEgZmlyZSwgYW5kIHRoYXQgd2hpbGUgc28gb2NjdXBpZWQgdGhleSBoYWQgZGVzY3JpZWQgYWNyb3NzIHRoZSByaXZlciwgYW1vbmcgc29tZSByb2NrcyB0aGF0IHJlYWNoZWQgZG93biB0byB0aGUgdmVyeSBlZGdlIG9mIHRoZSByaXZlciwgYW4gb2xkIG1hbiBhbmQgYSB3b21hbiBhbmQgc29tZSBsaXR0bGUgZ2lybHMgcHV0dGluZyBhd2F5IHdoYXQgbG9va2VkIGxpa2UgYmFncyBvZiBjbG90aGVzIGluIGEgY2F2ZXJub3VzIHJvY2suCjwvdHJhbnNsYXRpb24+"
translation['4.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgc2F3IHRoaXMgcHJvY2VlZGluZywgdGhleSBzYWlkLCB0aGV5IG1hZGUgdXAgdGhlaXIgbWluZHMgdGhhdCBpdCB3YXMgc2FmZSBmb3IgdGhlbSB0byBjcm9zcywgZm9yIHRoaXMgd2FzIGEgcGxhY2UgdGhhdCB3YXMgbm90IGFjY2VzaWJsZSB0byB0aGUgZW5lbXkncyBjYXZhbHJ5LiBUaGV5IGFjY29yZGluZ2x5IHN0cmlwcGVkLCBrZWVwaW5nIG9ubHkgdGhlaXIgZGFnZ2VycywgYW5kIHN0YXJ0ZWQgYWNyb3NzIG5ha2VkLCBzdXBwb3NpbmcgdGhhdCB0aGV5IHdvdWxkIGhhdmUgdG8gc3dpbTsgYnV0IHRoZXkgd2VudCBvbiBhbmQgZ290IGFjcm9zcyB3aXRob3V0IHdldHRpbmcgdGhlbXNlbHZlcyB1cCB0byB0aGUgbWlkZGxlOyBvbmNlIG9uIHRoZSBvdGhlciBzaWRlLCB0aGV5IHRvb2sgdGhlIGNsb3RoZXMgYW5kIGNhbWUgYmFjayBhZ2Fpbi4KPC90cmFuc2xhdGlvbj4="
translation['4.3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXBvbiBoZWFyaW5nIHRoaXMgcmVwb3J0IFhlbm9wb2hvbiBpbW1lZGlhdGVseSBwcm9jZWVkZWQgdG8gcG91ciBhIGxpYmF0aW9uIGhpbXNlbGYsIGFuZCBkaXJlY3RlZCBoaXMgYXR0ZW5kYW50cyB0byBmaWxsIGEgY3VwIGZvciB0aGUgeW91bmcgbWVuIGFuZCB0byBwcmF5IHRvIHRoZSBnb2RzIHdobyBoYWQgcmV2ZWFsZWQgdGhlIGRyZWFtIGFuZCB0aGUgZm9yZCwgdG8gYnJpbmcgdG8gZnVsZmlsbWVudCB0aGUgb3RoZXIgYmxlc3NpbmdzIGFsc28uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkVzcGVjaWFsbHkgYSBzYWZlIGNyb3NzaW5nIGFuZCBhIHNhZmUgcmV0dXJuIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPi48L25vdGU+IFRoZSBsaWJhdGlvbiBhY2NvbXBsaXNoZWQsIGhlIGF0IG9uY2UgbGVkIHRoZSB5b3VuZyBtZW4gdG8gQ2hlaXJpc29waHVzLCBhbmQgdGhleSByZXBlYXRlZCB0aGVpciBzdG9yeSB0byBoaW0uCjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPi48L3RyYW5zbGF0aW9uPg=="
translation['4.3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdXBvbiBoZWFyaW5nIGl0IENoZWlyaXNvcGh1cyBhbHNvIG1hZGUgbGliYXRpb24uIFRoZXJlYWZ0ZXIgdGhleSBnYXZlIG9yZGVycyB0byB0aGUgdHJvb3BzIHRvIHBhY2sgdXAgdGhlaXIgYmFnZ2FnZSwgd2hpbGUgdGhleSB0aGVtc2VsdmVzIGNhbGxlZCB0b2dldGhlciB0aGUgZ2VuZXJhbHMgYW5kIHRvb2sgY291bnNlbCBhcyB0byBob3cgdGhleSBtaWdodCBiZXN0IGVmZmVjdCBhIGNyb3NzaW5nIHNvIGFzIHRvIGRlZmVhdCB0aGUgZW5lbXkgaW4gZnJvbnQgd2l0aG91dCBzdWZmZXJpbmcgYW55IGhhcm0gZnJvbSB0aG9zZSBpbiB0aGVpciByZWFyLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZGVjaXNpb24gd2FzLCB0aGF0IENoZWlyaXNvcGh1cyBzaG91bGQgdGFrZSB0aGUgbGVhZCB3aXRoIGhhbGYgdGhlIGFybXkgYW5kIGF0dGVtcHQgYSBjcm9zc2luZywgdGhhdCB0aGUgb3RoZXIgaGFsZiB3aXRoIFhlbm9waG9uIHNob3VsZCBzdGF5IGJlaGluZCBmb3IgYSB3aGlsZSwgYW5kIHRoYXQgdGhlIGJhZ2dhZ2UgYW5pbWFscyBhbmQgY2FtcCBmb2xsb3dlcnMgc2hvdWxkIGNyb3NzIGJldHdlZW4gdGhlIHR3byBkaXZpc2lvbnMuCjwvdHJhbnNsYXRpb24+"
translation['4.3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGVzZSBhcnJhbmdlbWVudHMgaGFkIGJlZW4gc2F0aXNmYWN0b3JpbHkgbWFkZSwgdGhleSBzZXQgb3V0LCB0aGUgeW91bmcgbWVuIGxlYWRpbmcgdGhlIHdheSBhbmQga2VlcGluZyB0aGUgcml2ZXIgb24gdGhlIGxlZnQ7IGFuZCB0aGUgZGlzdGFuY2UgdG8gdGhlIGZvcmQgd2FzIGFib3V0IGZvdXIgc3RhZGlhLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BcyB0aGV5IHByb2NlZWRlZCwgdGhlIHNxdWFkcm9ucyBvZiB0aGUgZW5lbXkncyBjYXZhbHJ5IGtlcHQgYWxvbmcgb3Bwb3NpdGUgdG8gdGhlbS4gV2hlbiB0aGV5IHJlYWNoZWQgdGhlIGZvcmQsIHRoZXkgaGFsdGVkIHVuZGVyIGFybXMsIGFuZCBDaGVpcmlzb3BodXMgcHV0IGEgd3JlYXRoIHVwb24gaGlzIGhlYWQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFzIHRoZSBTcGFydGFucyB3ZXJlIGFjY3VzdG9tZWQgdG8gZG8gd2hlbiBnb2luZyBpbnRvIGJhdHRsZS4gY3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS40LjIiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS40LjItMzwvYmlibD4uPC9ub3RlPiB0aHJldyBvZmYgaGlzIGNsb2FrLCBhbmQgdG9vayB1cCBoaXMgYXJtcywgZ2l2aW5nIG9yZGVycyB0byBhbGwgdGhlIG90aGVycyB0byBkbyB0aGUgc2FtZTsgaGUgYWxzbyBkaXJlY3RlZCB0aGUgY2FwdGFpbnMgdG8gbGVhZCB0aGVpciBjb21wYW5pZXMgaW4gY29sdW1uLCBwYXJ0IG9mIHRoZW0gdXBvbiBoaXMgbGVmdCBhbmQgdGhlIHJlc3QgdXBvbiBoaXMgcmlnaHQuIE1lYW53aGlsZSB0aGUgc29vdGhzYXllcnMgd2VyZSBvZmZlcmluZyBzYWNyaWZpY2UgdG8gdGhlIHJpdmVyLAo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuNC4yIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuNC4yLTM8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['4.3.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgdGhlIGVuZW15IHdlcmUgc2hvb3RpbmcgYXJyb3dzIGFuZCBkaXNjaGFyZ2luZyBzbGluZ3MsCjwvdHJhbnNsYXRpb24+"
translation['4.3.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5idXQgbm90IHlldCByZWFjaGluZyB0aGVpciBtYXJrOyBhbmQgd2hlbiB0aGUgc2FjcmlmaWNlcyBwcm92ZWQgZmF2b3VyYWJsZSwgYWxsIHRoZSBzb2xkaWVycyBzdHJ1Y2sgdXAgdGhlIHBhZWFuIGFuZCByYWlzZWQgdGhlIHdhciBzaG91dCwgd2hpbGUgdGhlIHdvbWVuLCBldmVyeW9uZSBvZiB0aGVtLCBqb2luZWQgdGhlaXIgY3JpZXMgd2l0aCB0aGUgc2hvdXRpbmcgb2YgdGhlIG1lbuKAlGZvciB0aGVyZSB3ZXJlIGEgbGFyZ2UgbnVtYmVyIG9mIHdvbWVuIGluIHRoZSBjYW1wLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBDaGVpcmlzb3BodXMgYW5kIGhpcyBkaXZpc2lvbiBwcm9jZWVkZWQgaW50byB0aGUgcml2ZXI7IGJ1dCBYZW5vcGhvbiB0b29rIHRoZSBuaW1ibGVzdCB0cm9vcHMgb2YgdGhlIHJlYXJndWFyZCBhbmQgYmVnYW4gcnVubmluZyBiYWNrIGF0IGZ1bGwgc3BlZWQgdG8gdGhlIGZvcmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiB0aGUgb3JpZ2luYWwgZm9yZCwgd2hpY2ggaGFkIHByb3ZlZCBpbXByYWN0aWNhYmxlICggNS02KS48L25vdGU+IHRoYXQgd2FzIG9wcG9zaXRlIHRoZSByb2FkIHdoaWNoIGxlZCBvdXQgaW50byB0aGUgQXJtZW5pYW4gbW91bnRhaW5zLCBwcmV0ZW5kaW5nIHRoYXQgaGUgbWVhbnQgdG8gY3Jvc3MgYXQgdGhhdCBwb2ludCBhbmQgdGh1cyBjdXQgb2ZmPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gYnkgYXR0YWNraW5nIHRoZW0gb24gdGhlIGZsYW5rLjwvbm90ZT4gdGhlIGhvcnNlbWVuIHdobyB3ZXJlIGJ5IHRoZSBzaWRlIG9mIHRoZSByaXZlci4KPC90cmFuc2xhdGlvbj4="
translation['4.3.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZW5lbXkgdGhlcmV1cG9uLCB3aGVuIHRoZXkgc2F3IENoZWlyaXNvcGh1cyBhbmQgaGlzIGRpdmlzaW9uIGNyb3NzaW5nIHRoZSByaXZlciB3aXRob3V0IGRpZmZpY3VsdHkgYW5kIGxpa2V3aXNlIHNhdyBYZW5vcGhvbiBhbmQgaGlzIG1lbiBydW5uaW5nIGJhY2ssIHdlcmUgc2VpemVkIHdpdGggZmVhciB0aGF0IHRoZXkgbWlnaHQgYmUgY3V0IG9mZiwgYW5kIHRoZXkgZmxlZCBhdCBmdWxsIHNwZWVkIHRvIHJlYWNoIHRoZSByb2FkIHdoaWNoIGxlZCB1cCBmcm9tIHRoZSByaXZlci4gVGhpcyByb2FkIG9uY2UgZ2FpbmVkLCB0aGV5IGhhc3RlbmVkIG9uIHVwd2FyZCBpbiB0aGUgZGlyZWN0aW9uIG9mIHRoZSBtb3VudGFpbi4KPC90cmFuc2xhdGlvbj4="
translation['4.3.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIEx5Y2l1cywgd2hvIGNvbW1hbmRlZCB0aGUgc3F1YWRyb24gb2YgR3JlZWsgY2F2YWxyeSwgYW5kIEFlc2NoaW5lcywgY29tbWFuZGVyIG9mIHRoZSBiYXR0YWxpb24gb2YgcGVsdGFzdHMgdGhhdCB3YXMgd2l0aCBDaGVpcmlzb3BodXMsIHVwb24gc2VlaW5nIHRoZSBlbmVteSBpbiBmdWxsIGZsaWdodCBzZXQgb2ZmIGluIHB1cnN1aXQsIHdoaWxlIHRoZSByZXN0IG9mIHRoZSBHcmVlayB0cm9vcHMgc2hvdXRlZCB0byB0aGVtIG5vdCB0byBmYWxsIGJlaGluZCwgYnV0IHRvIGZvbGxvdyB0aGUgZnVnaXRpdmVzIHJpZ2h0IHVwIHRvIHRoZSBtb3VudGFpbi4KPC90cmFuc2xhdGlvbj4="
translation['4.3.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgQ2hlaXJpc29waHVzLCBhZnRlciBnZXR0aW5nIGFjcm9zcyBoZSBjaG9zZSBub3QgdG8gcHVyc3VlIHRoZSBob3N0aWxlIGNhdmFscnksIGJ1dCBpbW1lZGlhdGVseSBwdXNoZWQgdXAgb3ZlciB0aGUgYmx1ZmZzIHRoYXQgcmVhY2hlZCBkb3duIHRvIHRoZSByaXZlciBhZ2FpbnN0IHRoZSBpbmZhbnRyeSBvbiB0b3Agb2YgdGhlbS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDMgYWJvdmUuPC9ub3RlPiBBbmQgdGhlc2UgdHJvb3BzLCBzZWVpbmcgdGhlaXIgb3duIGNhdmFscnkgaW4gZmxpZ2h0IGFuZCBob3BsaXRlcyBhZHZhbmNpbmcgdXBvbiB0aGVtLCBhYmFuZG9uZWQgdGhlIGhlaWdodHMgYWJvdmUgdGhlIHJpdmVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+WGVub3Bob24gbm8gc29vbmVyIHNhdyB0aGF0IGFsbCB3YXMgZ29pbmcgd2VsbCBvbiB0aGUgb3RoZXIgc2lkZSB0aGFuIGhlIHN0YXJ0ZWQgYmFjayB3aXRoIGFsbCBzcGVlZCB0byBqb2luIHRoZSB0cm9vcHMgdGhhdCB3ZXJlIGNyb3NzaW5nLCBmb3IgYnkgdGhpcyB0aW1lIHRoZSBDYXJkdWNoaWFucyBjb3VsZCBiZSBzZWVuIGRlc2NlbmRpbmcgaW50byB0aGUgcGxhaW4gd2l0aCB0aGUgbWFuaWZlc3QgaW50ZW50aW9uIG9mIGF0dGFja2luZyB0aGUgaGluZG1vc3QuCjwvdHJhbnNsYXRpb24+"
translation['4.3.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgQ2hlaXJpc29waHVzIHdhcyBpbiBwb3NzZXNzaW9uIG9mIHRoZSBibHVmZnMsIGFuZCBMeWNpdXMsIHZlbnR1cmluZyBhIHB1cnN1aXQgd2l0aCBoaXMgc21hbGwgc3F1YWRyb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldoaWNoIG51bWJlcmVkIG9ubHkgZmlmdHkgbWVuIChJSUkuIGlpaS4gMjApLjwvbm90ZT4gaGFkIGNhcHR1cmVkIHRoZSBzdHJhZ2dsaW5nIHBvcnRpb24gb2YgdGhlIGVuZW15J3MgYmFnZ2FnZSB0cmFpbiwgYW5kIHdpdGggaXQgZmluZSBhcHBhcmVsIGFuZCBkcmlua2luZyBjdXBzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm93LCB3aXRoIHRoZSBHcmVlayBiYWdnYWdlIHRyYWluIGFuZCB0aGUgY2FtcCBmb2xsb3dlcnMgaW4gdGhlIHZlcnkgYWN0IG9mIGNyb3NzaW5nLCBYZW5vcGhvbiB3aGVlbGVkIGhpcyB0cm9vcHMgc28gdGhhdCB0aGV5IHRvb2sgYSBwb3NpdGlvbiBmYWNpbmcgdGhlIENhcmR1Y2hpYW5zLCBhbmQgZ2F2ZSBvcmRlcnMgdG8gdGhlIGNhcHRhaW5zIHRoYXQgZWFjaCBtYW4gb2YgdGhlbSBzaG91bGQgZm9ybSBoaXMgb3duIGNvbXBhbnkgYnkgc3F1YWRzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAzLjQuMjEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy40LjIxLTIyPC9iaWJsPiwgYW5kIG5vdGUgdGhlcmVvbi48L25vdGU+IG1vdmluZyBlYWNoIHNxdWFkIGJ5IHRoZSBsZWZ0IGludG8gbGluZSBvZiBiYXR0bGU7IHRoZW4gdGhlIGNhcHRhaW5zIGFuZCBzcXVhZCBsZWFkZXJzIHdlcmUgdG8gZmFjZSB0b3dhcmQgdGhlIENhcmR1Y2hpYW5zIGFuZCBzdGF0aW9uIGZpbGUgY2xvc2VycyBvbiB0aGUgc2lkZSBuZXh0IHRvIHRoZSByaXZlci4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAzLjQuMjEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy40LjIxLTIyPC9iaWJsPiwgYW5kIG5vdGUgdGhlcmVvbi48L3RyYW5zbGF0aW9uPg=="
translation['4.3.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgYXMgc29vbiBhcyB0aGUgQ2FyZHVjaGlhbnMgc2F3IHRoZSByZWFyZ3VhcmQgc3RyaXBwZWQgb2YgdGhlIGNyb3dkIG9mIGNhbXAgZm9sbG93ZXJzIGFuZCBsb29raW5nIG5vdyBsaWtlIGEgc21hbGwgYm9keSwgdGhleSBhZHZhbmNlZCB0byB0aGUgYXR0YWNrIGFsbCB0aGUgbW9yZSByYXBpZGx5LCBzaW5naW5nIGEga2luZCBvZiBzb25ncy4gQXMgZm9yIENoZWlyaXNvcGh1cywgc2luY2UgZXZlcnl0aGluZyB3YXMgc2FmZSBvbiBoaXMgc2lkZSwgaGUgc2VudCBiYWNrIHRvIFhlbm9waG9uIHRoZSBwZWx0YXN0cywgc2xpbmdlcnMsIGFuZCBib3dtZW4sIGFuZCBkaXJlY3RlZCB0aGVtIHRvIGRvIHdoYXRldmVyIFhlbm9waG9uIG1pZ2h0IG9yZGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBoZSBzYXcgdGhlbSBiZWdpbm5pbmcgdG8gY3Jvc3MsIFhlbm9waG9uIHNlbnQgYSBtZXNzZW5nZXIgYW5kIGRpcmVjdGVkIHRoZW0gdG8gc3RheSB3aGVyZSB0aGV5IHdlcmUsIG9uIHRoZSBiYW5rIG9mIHRoZSByaXZlciwgd2l0aG91dCBjcm9zc2luZzsgYXQgdGhlIG1vbWVudCwgaG93ZXZlciwgd2hlbiBoaXMgb3duIG1lbiBzaG91bGQgYmVnaW4gdG8gY3Jvc3MsIHRoZXkgd2VyZSB0byBlbnRlciB0aGUgcml2ZXIgb3Bwb3NpdGUgdGhlbSwgb24gdGhpcyBzaWRlIGFuZCB0aGF0LCBhcyB0aG91Z2ggdGhleSB3ZXJlIGdvaW5nIHRvIGNyb3NzIGl0LCB0aGUgamF2ZWxpbiBtZW4gd2l0aCBoYW5kIG9uIHRoZSB0aG9uZyBhbmQgdGhlIGJvd21lbiB3aXRoIGFycm93IG9uIHRoZSBzdHJpbmc7IGJ1dCB0aGV5IHdlcmUgbm90IHRvIHByb2NlZWQgZmFyIGludG8gdGhlIHJpdmVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgb3JkZXJzIGhlIGdhdmUgdG8gaGlzIG93biBtZW4gd2VyZSwgdGhhdCB3aGVuIHNsaW5nLXN0b25lcyByZWFjaGVkIHRoZW0gYW5kIHNoaWVsZHMgcmFuZywgdGhleSB3ZXJlIHRvIHN0cmlrZSB1cCB0aGUgcGFlYW4gYW5kIGNoYXJnZSB1cG9uIHRoZSBlbmVteSwgYW5kIHdoZW4gdGhlIGVuZW15IHR1cm5lZCB0byBmbGlnaHQgYW5kIHRoZSB0cnVtcGV0ZXIgb24gdGhlIHJpdmVyLWJhbmsgc291bmRlZCB0aGUgY2hhcmdlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JbiBvcmRlciB0byBkZWNlaXZlIHRoZSBlbmVteS48L25vdGU+IHRoZXkgd2VyZSB0byBmYWNlIGFib3V0IHRvIHRoZSByaWdodCwgdGhlIGZpbGUgY2xvc2VycyB3ZXJlIHRvIHRha2UgdGhlIGxlYWQsIGFuZCBhbGwgb2YgdGhlbSB3ZXJlIHRvIHJ1biBhbmQgY3Jvc3MgYXMgZmFzdCBhcyB0aGV5IGNvdWxkIHdpdGggZXZlcnkgbWFuIGtlZXBpbmcgaGlzIHByb3BlciBwbGFjZSBpbiB0aGUgbGluZSwgc28gdGhhdCB0aGV5IHNob3VsZCBub3QgaW50ZXJmZXJlIHdpdGggb25lIGFub3RoZXI7IGFuZCBoZSB0aGF0IGdvdCB0byB0aGUgb3RoZXIgc2lkZSBmaXJzdCB3b3VsZCBiZSB0aGUgYmVzdCBtYW4uCjwvdHJhbnNsYXRpb24+"
translation['4.3.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHRoZSBDYXJkdWNoaWFucywgc2VlaW5nIHRoYXQgdGhvc2Ugd2hvIHdlcmUgbGVmdCB3ZXJlIGJ5IHRoaXMgdGltZSBmZXcgaW4gbnVtYmVyIChmb3IgbWFueSBldmVuIG9mIHRob3NlIGRldGFpbGVkIHRvIHN0YXkgaGFkIGdvbmUgb2ZmIHRvIGxvb2sgYWZ0ZXIgcGFjayBhbmltYWxzIG9yIGJhZ2dhZ2Ugb3Igd29tZW4sIGFzIHRoZSBjYXNlIG1pZ2h0IGJlKSwgYXQgdGhhdCBtb21lbnQgcHJvY2VlZGVkIHRvIHByZXNzIHVwb24gdGhlbSBib2xkbHkgYW5kIGJlZ2FuIHRvIHNsaW5nIHN0b25lcyBhbmQgc2hvb3QgYXJyb3dzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZSBHcmVla3Mgc3RydWNrIHVwIHRoZSBwYWVhbiBhbmQgY2hhcmdlZCBhdCB0aGVtIG9uIHRoZSBydW4sIGFuZCB0aGV5IGRpZCBub3QgbWVldCB0aGUgYXR0YWNrOyBmb3Igd2hpbGUgdGhleSB3ZXJlIGVxdWlwcGVkIHdlbGwgZW5vdWdoIGZvciBhdHRhY2sgYW5kIHJldHJlYXQgaW4gdGhlIG1vdW50YWlucywgdGhlaXIgZXF1aXBtZW50IHdhcyBub3QgYWRlcXVhdGUgZm9yIGhhbmQtdG8taGFuZCBmaWdodGluZy4KPC90cmFuc2xhdGlvbj4="
translation['4.3.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGF0IGluc3RhbnQgdGhlIEdyZWVrIHRydW1wZXRlciBzb3VuZGVkIGhpcyBzaWduYWw7IGFuZCB3aGlsZSB0aGUgZW5lbXkgYmVnYW4gdG8gZmxlZSBtdWNoIGZhc3RlciB0aGFuIGJlZm9yZSwgdGhlIEdyZWVrcyB0dXJuZWQgYWJvdXQgYW5kIHNldCBvdXQgb24gdGhlaXIgb3duIGZsaWdodCB0aHJvdWdoIHRoZSByaXZlciBhdCB0b3Agc3BlZWQuCjwvdHJhbnNsYXRpb24+"
translation['4.3.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5Tb21lIGZldyBvZiB0aGUgZW5lbXksIHBlcmNlaXZpbmcgdGhpcyBtb3ZlbWVudCwgcmFuIGJhY2sgdG8gdGhlIHJpdmVyIGFuZCB3b3VuZGVkIGEgZmV3IEdyZWVrcyB3aXRoIGFycm93cywgYnV0IG1vc3Qgb2YgdGhlbSwgZXZlbiB3aGVuIHRoZSBHcmVla3Mgd2VyZSBvbiB0aGUgb3RoZXIgc2lkZSwgY291bGQgc3RpbGwgYmUgc2VlbiBjb250aW51aW5nIHRoZWlyIGZsaWdodC4KPC90cmFuc2xhdGlvbj4="
translation['4.3.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIHRyb29wcyB0aGF0IGNhbWUgdG8gbWVldCBYZW5vcGhvbiwgYmVoYXZpbmcgbGlrZSBtZW4gYW5kIGFkdmFuY2luZyBmYXJ0aGVyIHRoYW4gdGhleSBzaG91bGQgaGF2ZSBnb25lLCBjcm9zc2VkIGJhY2sgYWdhaW4gaW4gdGhlIHJlYXIgb2YgWGVub3Bob24ncyBjb21tYW5kOyBhbmQgc29tZSBvZiB0aGVtIGFsc28gd2VyZSB3b3VuZGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZXkgaGFkIGFjY29tcGxpc2hlZCB0aGUgY3Jvc3NpbmcsIHRoZXkgZm9ybWVkIGluIGxpbmUgb2YgYmF0dGxlIGFib3V0IG1pZGRheSBhbmQgbWFyY2hlZCB0aHJvdWdoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA2NjUxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDY2NTEiPkFybWVuaWE8L3BsYWNlTmFtZT4sIG92ZXIgZW50aXJlbHkgbGV2ZWwgY291bnRyeSBhbmQgZ2VudGx5IHNsb3BpbmcgaGlsbHMsIG5vdCBsZXNzIHRoYW4gZml2ZSBwYXJhc2FuZ3M7IGZvciB0aGVyZSB3ZXJlIG5vIHZpbGxhZ2VzIG5lYXIgdGhlIHJpdmVyIGJlY2F1c2Ugb2YgdGhlIHdhcnMgYmV0d2VlbiB0aGUgQXJtZW5pYW5zIGFuZCBDYXJkdWNoaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['4.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZSB2aWxsYWdlIHdoaWNoIHRoZXkgZmluYWxseSByZWFjaGVkIHdhcyBhIGxhcmdlIG9uZSBhbmQgaGFkIGEgcGFsYWNlIGZvciB0aGUgc2F0cmFwLCB3aGlsZSBtb3N0IG9mIHRoZSBob3VzZXMgd2VyZSBzdXJtb3VudGVkIGJ5IHR1cnJldHM7IGFuZCBwcm92aXNpb25zIHdlcmUgcGxlbnRpZnVsLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkZyb20gdGhlcmUgdGhleSBtYXJjaGVkIHR3byBzdGFnZXMsIHRlbiBwYXJhc2FuZ3MsIHVudGlsIHRoZXkgcGFzc2VkIHRoZSBoZWFkd2F0ZXJzIG9mIHRoZSBUaWdyaXMgcml2ZXIuIEZyb20gdGhlcmUgdGhleSBtYXJjaGVkIHRocmVlIHN0YWdlcywgZmlmdGVlbiBwYXJhc2FuZ3MsIHRvIHRoZSBUZWxlYm9hcyByaXZlci4gVGhpcyB3YXMgYSBiZWF1dGlmdWwgcml2ZXIsIHRob3VnaCBub3QgYSBsYXJnZSBvbmUsIGFuZCB0aGVyZSB3ZXJlIG1hbnkgdmlsbGFnZXMgYWJvdXQgaXQuCjwvdHJhbnNsYXRpb24+"
translation['4.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoaXMgcmVnaW9uIHdhcyBjYWxsZWQgV2VzdGVybiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNjY1MSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA2NjUxIj5Bcm1lbmlhPC9wbGFjZU5hbWU+LiBJdHMgbGlldXRlbmFudC1nb3Zlcm5vcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TdWJvcmRpbmF0ZSB0byB0aGUgc2F0cmFwIG9mIGFsbCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNjY1MSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA2NjUxIj5Bcm1lbmlhPC9wbGFjZU5hbWU+LCBPcm9udGFzLiBTZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA0LjMuNCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjMuNDwvYmlibD4sIGFuZCBub3RlIHRoZXJlb24uPC9ub3RlPiB3YXMgVGlyaWJhenVzLCB3aG8gaGFkIHByb3ZlZCBoaW1zZWxmIGEgZnJpZW5kIHRvIHRoZSBLaW5nIGFuZCwgc28gb2Z0ZW4gYXMgaGUgd2FzIHByZXNlbnQsIHdhcyB0aGUgb25seSBtYW4gcGVybWl0dGVkIHRvIGhlbHAgdGhlIEtpbmcgbW91bnQgaGlzIGhvcnNlLgo8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNjY1MSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA2NjUxIj5Bcm1lbmlhPC9wbGFjZU5hbWU+LCBPcm9udGFzLiBTZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA0LjMuNCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjMuNDwvYmlibD4sIGFuZCBub3RlIHRoZXJlb24uPC90cmFuc2xhdGlvbj4="
translation['4.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkhlIHJvZGUgdXAgdG8gdGhlIEdyZWVrcyB3aXRoIGEgYm9keSBvZiBob3JzZW1lbiwgYW5kIHNlbmRpbmcgZm9yd2FyZCBhbiBpbnRlcnByZXRlciwgc2FpZCB0aGF0IGhlIHdpc2hlZCB0byBjb25mZXIgd2l0aCB0aGVpciBjb21tYW5kZXJzLiBUaGUgZ2VuZXJhbHMgZGVjaWRlZCB0byBoZWFyIHdoYXQgaGUgaGFkIHRvIHNheSwgYW5kLCBhZnRlciBhcHByb2FjaGluZyB3aXRoaW4gaGVhcmluZyBkaXN0YW5jZSwgdGhleSBhc2tlZCBoaW0gd2hhdCBoZSB3YW50ZWQuCjwvdHJhbnNsYXRpb24+"
translation['4.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkhlIHJlcGxpZWQgdGhhdCBoZSB3aXNoZWQgdG8gY29uY2x1ZGUgYSB0cmVhdHkgd2l0aCB0aGVzZSBjb25kaXRpb25zLCB0aGF0IGhlIG9uIGhpcyBzaWRlIHdvdWxkIG5vdCBoYXJtIHRoZSBHcmVla3MsIGFuZCB0aGF0IHRoZXkgc2hvdWxkIG5vdCBidXJuIHRoZSBob3VzZXMsIGJ1dCBtaWdodCB0YWtlIGFsbCB0aGUgcHJvdmlzaW9ucyB0aGV5IG5lZWRlZC4gVGhpcyBwcm9wb3NpdGlvbiB3YXMgYWNjZXB0ZWQgYnkgdGhlIGdlbmVyYWxzLCBhbmQgdGhleSBjb25jbHVkZWQgYSB0cmVhdHkgb24gdGhlc2UgdGVybXMuCjwvdHJhbnNsYXRpb24+"
translation['4.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gcm9tIHRoZXJlIHRoZXkgbWFyY2hlZCB0aHJlZSBzdGFnZXMsIGZpZnRlZW4gcGFyYXNhbmdzLCB0aHJvdWdoIGxldmVsIGNvdW50cnksIFRpcmliYXp1cyBhbmQgaGlzIGNvbW1hbmQgZm9sbG93aW5nIGFsb25nIGF0IGEgZGlzdGFuY2Ugb2YgYWJvdXQgdGVuIHN0YWRpYSBmcm9tIHRoZW07IGFuZCB0aGV5IHJlYWNoZWQgYSBwYWxhY2Ugd2l0aCBtYW55IHZpbGxhZ2VzIHJvdW5kIGFib3V0IGl0IGZ1bGwgb2YgcHJvdmlzaW9ucyBpbiBhYnVuZGFuY2UuCjwvdHJhbnNsYXRpb24+"
translation['4.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPldoaWxlIHRoZXkgd2VyZSBpbiBjYW1wIHRoZXJlLCB0aGVyZSB3YXMgYSBoZWF2eSBmYWxsIG9mIHNub3c8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SXQgd2FzIG5vdyBsYXRlIGluIE5vdmVtYmVyLjwvbm90ZT4gZHVyaW5nIHRoZSBuaWdodCwgYW5kIGluIHRoZSBtb3JuaW5nIHRoZXkgZGVjaWRlZCB0byBxdWFydGVyIHRoZSBzZXZlcmFsIGRpdmlzaW9ucyBvZiB0aGUgYXJteSwgd2l0aCB0aGVpciBjb21tYW5kZXJzLCBpbiB0aGUgZGlmZmVyZW50IHZpbGxhZ2VzOyBmb3IgdGhlcmUgd2FzIG5vIGVuZW15IHdpdGhpbiBzaWdodCwgYW5kIHRoZSBwbGFuIHNlZW1lZCB0byBiZSBhIHNhZmUgb25lIGJ5IHJlYXNvbiBvZiB0aGUgZ3JlYXQgcXVhbnRpdHkgb2Ygc25vdy4KPC90cmFuc2xhdGlvbj4="
translation['4.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIHRoZXkgaGFkIGFsbCBwb3NzaWJsZSBnb29kIHRoaW5ncyBpbiB0aGUgd2F5IG9mIHN1cHBsaWVz4oCUYW5pbWFscyBmb3Igc2FjcmlmaWNlLCBncmFpbiwgb2xkIHdpbmVzIHdpdGggYSBmaW5lIGJvdXF1ZXQsIGRyaWVkIGdyYXBlcywgYW5kIGJlYW5zIG9mIGFsbCBzb3J0cy4gQnV0IHNvbWUgbWVuIHdobyBzdHJhZ2dsZWQgYXdheSBmcm9tIHRoZWlyIHF1YXJ0ZXJzIHJlcG9ydGVkIHRoYXQgdGhleSBzYXcgaW4gdGhlIG5pZ2h0IHRoZSBnbGVhbSBvZiBhIGdyZWF0IG1hbnkgZmlyZXMuCjwvdHJhbnNsYXRpb24+"
translation['4.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZ2VuZXJhbHMgYWNjb3JkaW5nbHkgZGVjaWRlZCB0aGF0IGl0IHdhcyB1bnNhZmUgdG8gaGF2ZSB0aGVpciBkaXZpc2lvbnMgaW4gc2VwYXJhdGUgcXVhcnRlcnMsIGFuZCB0aGF0IHRoZXkgbXVzdCBicmluZyBhbGwgdGhlIHRyb29wcyB0b2dldGhlciBhZ2Fpbjsgc28gdGhleSBjYW1lIHRvZ2V0aGVyLCBlc3BlY2lhbGx5IGFzIHRoZSBzdG9ybSBzZWVtZWQgdG8gYmUgY2xlYXJpbmcgdXAuCjwvdHJhbnNsYXRpb24+"
translation['4.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlcmUgY2FtZSBzdWNoIGEgdHJlbWVuZG91cyBmYWxsIG9mIHNub3cgd2hpbGUgdGhleSB3ZXJlIGJpdm91YWNrZWQgdGhlcmUgdGhhdCBpdCBjb21wbGV0ZWx5IGNvdmVyZWQgYm90aCB0aGUgYXJtcyBhbmQgdGhlIG1lbiBhcyB0aGV5IHNsZXB0LCBiZXNpZGVzIGhhbXBlcmluZyB0aGUgYmFnZ2FnZSBhbmltYWxzOyBhbmQgZXZlcnlib2R5IHdhcyB2ZXJ5IHJlbHVjdGFudCB0byBnZXQgdXAsIGZvciBhcyB0aGUgbWVuIGxheSB0aGVyZSB0aGUgc25vdyB0aGF0IGhhZCBmYWxsZW4gdXBvbiB0aGVt4oCUaW4gY2FzZSBpdCBkaWQgbm90IHNsaXAgb2Zm4oCUd2FzIGEgc291cmNlIG9mIHdhcm10aC4KPC90cmFuc2xhdGlvbj4="
translation['4.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgb25jZSBYZW5vcGhvbiBoYWQgbXVzdGVyZWQgdGhlIGNvdXJhZ2UgdG8gZ2V0IHVwIHdpdGhvdXQgaGlzIGNsb2FrIGFuZCBzZXQgYWJvdXQgc3BsaXR0aW5nIHdvb2QsIGFub3RoZXIgbWFuIGFsc28gc3BlZWRpbHkgZ290IHVwLCB0b29rIHRoZSBheGUgYXdheSBmcm9tIGhpbSwgYW5kIHdlbnQgb24gd2l0aCB0aGUgc3BsaXR0aW5nLiBUaGVyZXVwb24gc3RpbGwgb3RoZXJzIGdvdCB1cCBhbmQgcHJvY2VlZGVkIHRvIGJ1aWxkIGZpcmVzIGFuZCBhbm9pbnQgdGhlbXNlbHZlczsKPC90cmFuc2xhdGlvbj4="
translation['4.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5mb3IgdGhleSBmb3VuZCBvaW50bWVudCB0aGVyZSBpbiBhYnVuZGFuY2Ugd2hpY2ggdGhleSB1c2VkIGluIHBsYWNlIG9mIG9saXZlIG9pbOKAlG1hZGUgb2YgcG9yayBmYXQsIHNlc2FtZSwgYml0dGVyIGFsbW9uZHMsIG9yIHR1cnBlbnRpbmUuIFRoZXkgZm91bmQgYWxzbyBhIGZyYWdyYW50IG9pbCBtYWRlIG91dCBvZiB0aGVzZSBzYW1lIGluZ3JlZGllbnRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyBpdCB3YXMgZGVlbWVkIG5lY2Vzc2FyeSB0byBkaXN0cmlidXRlIHRoZSB0cm9vcHMgYWdhaW4gdG8gcXVhcnRlcnMgaW4gdGhlIGhvdXNlcyBvZiB0aGUgc2V2ZXJhbCB2aWxsYWdlcy4gVGhlbiBmb2xsb3dlZCBwbGVudHkgb2Ygam95ZnVsIHNob3V0aW5nIGFzIHRoZSBtZW4gd2VudCBiYWNrIHRvIHRoZWlyIGhvdXNlcyBhbmQgcHJvdmlzaW9ucywgYW5kIGFsbCB0aG9zZSB3aG8ganVzdCBiZWZvcmUgaGFkIHdhbnRvbmx5IGJ1cm5lZCB0aGUgaG91c2VzIHRoZXkgd2VyZSBsZWF2aW5nLCBwYWlkIHRoZSBwZW5hbHR5IGJ5IGdldHRpbmcgcG9vciBxdWFydGVycy4KPC90cmFuc2xhdGlvbj4="
translation['4.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIHRoZXkgc2VudCBEZW1vY3JhdGVzIG9mIFRlbW51cyB3aXRoIGEgYm9keSBvZiB0cm9vcHMgZHVyaW5nIHRoZSBuaWdodCB0byB0aGUgbW91bnRhaW5zIHdoZXJlIHRoZSBzdHJhZ2dsZXJzIHNhaWQgdGhleSBoYWQgc2VlbiB0aGUgZmlyZXM7IGZvciB0aGlzIERlbW9jcmF0ZXMgZW5qb3llZCB0aGUgcmVwdXRhdGlvbiBvZiBoYXZpbmcgbWFkZSBhY2N1cmF0ZSByZXBvcnRzIGluIG1hbnkgcHJldmlvdXMgY2FzZXMgb2YgdGhlIHNhbWUgc29ydCwgZGVzY3JpYmluZyB3aGF0IHdlcmUgZmFjdHMgYXMgZmFjdHMgYW5kIHdoYXQgd2VyZSBmaWN0aW9ucyBhcyBmaWN0aW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['4.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIGhpcyByZXR1cm4gaGUgc3RhdGVkIHRoYXQgaGUgaGFkIG5vdCBzZWVuIHRoZSBmaXJlczsgaGUgaGFkIGNhcHR1cmVkLCBob3dldmVyLCBhbmQgYnJvdWdodCBiYWNrIHdpdGggaGltIGEgbWFuIHdpdGggYSBQZXJzaWFuIGJvdyBhbmQgcXVpdmVyIGFuZCBhIGJhdHRsZWF4ZSBvZiB0aGUgc2FtZSBzb3J0IHRoYXQgQW1hem9ucyBjYXJyeS4KPC90cmFuc2xhdGlvbj4="
translation['4.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoaXMgbWFuIHdhcyBhc2tlZCBmcm9tIHdoYXQgY291bnRyeSBoZSBjYW1lLCBoZSBzYWlkIGhlIHdhcyBhIFBlcnNpYW4gYW5kIHdhcyBvbiBoaXMgd2F5IGZyb20gdGhlIGNhbXAgb2YgVGlyaWJhenVzIHRvIGdldCBwcm92aXNpb25zLiBUaGV5IGFza2VkIGhpbSBob3cgbGFyZ2UgVGlyaWJhenVzJyBhcm15IHdhcyBhbmQgZm9yIHdoYXQgcHVycG9zZSBpdCBoYWQgYmVlbiBnYXRoZXJlZC4KPC90cmFuc2xhdGlvbj4="
translation['4.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5IZSByZXBsaWVkIHRoYXQgaXQgd2FzIFRpcmliYXp1cyB3aXRoIGhpcyBvd24gZm9yY2VzIGFuZCBDaGFseWJpYW4gYW5kIFRhb2NoaWFuIG1lcmNlbmFyaWVzLCBhbmQgdGhhdCBoZSBoYWQgbWFkZSBoaXMgcHJlcGFyYXRpb25zIHdpdGggdGhlIGlkZWEgb2YgdGFraW5nIGEgcG9zaXRpb24gdXBvbiB0aGUgbW91bnRhaW4gcGFzcywgaW4gdGhlIGRlZmlsZSB0aHJvdWdoIHdoaWNoIHJhbiB0aGUgb25seSByb2FkLCBhbmQgdGhlcmUgYXR0YWNraW5nIHRoZSBHcmVla3MuCjwvdHJhbnNsYXRpb24+"
translation['4.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgZ2VuZXJhbHMgaGVhcmQgdGhlc2Ugc3RhdGVtZW50cywgdGhleSByZXNvbHZlZCB0byBicmluZyB0aGUgdHJvb3BzIHRvZ2V0aGVyIGludG8gYSBjYW1wOyB0aGVuLCBhZnRlciBsZWF2aW5nIGEgZ2Fycmlzb24gYW5kIFNvcGhhZW5ldHVzIHRoZSBTdHltcGhhbGlhbiBhcyBnZW5lcmFsIGluIGNvbW1hbmQgb2YgdGhvc2Ugd2hvIHN0YXllZCBiZWhpbmQsIHRoZXkgc2V0IG91dCBhdCBvbmNlLCB3aXRoIHRoZSBjYXB0dXJlZCBtYW4gYXMgZ3VpZGUuCjwvdHJhbnNsYXRpb24+"
translation['4.4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIHRoZXkgaGFkIGJlZ3VuIHRvIGNyb3NzIHRoZSBtb3VudGFpbnMsIHRoZSBwZWx0YXN0cywgcHVzaGluZyBvbiBhaGVhZCBhbmQgZGVzY3J5aW5nIHRoZSBlbmVteSdzIGNhbXAsIGRpZCBub3Qgd2FpdCBmb3IgdGhlIGhvcGxpdGVzLCBidXQgcmFpc2VkIGEgc2hvdXQgYW5kIGNoYXJnZWQgdXBvbiB0aGUgY2FtcC4KPC90cmFuc2xhdGlvbj4="
translation['4.4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSBiYXJiYXJpYW5zIGhlYXJkIHRoZSB1cHJvYXIsIHRoZXkgZGlkIG5vdCB3YWl0IHRvIG9mZmVyIHJlc2lzdGFuY2UsIGJ1dCB0b29rIHRvIGZsaWdodDsgbmV2ZXJ0aGVsZXNzLCBzb21lIG9mIHRoZW0gd2VyZSBraWxsZWQsIGFib3V0IHR3ZW50eSBob3JzZXMgd2VyZSBjYXB0dXJlZCwgYW5kIGxpa2V3aXNlIFRpcmliYXp1cycgdGVudCwgd2l0aCBzaWx2ZXItZm9vdGVkIGNvdWNoZXMgaW4gaXQsIGFuZCBkcmlua2luZyBjdXBzLCBhbmQgcGVvcGxlIHdobyBzYWlkIHRoZXkgd2VyZSBoaXMgYmFrZXJzIGFuZCBoaXMgY3VwLWJlYXJlcnMuCjwvdHJhbnNsYXRpb24+"
translation['4.4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIHRoZSBnZW5lcmFscyBvZiB0aGUgaG9wbGl0ZXMgbGVhcm5lZCBvZiB0aGVzZSByZXN1bHRzLCB0aGV5IGRlZW1lZCBpdCBiZXN0IHRvIGdvIGJhY2sgYXMgc3BlZWRpbHkgYXMgcG9zc2libGUgdG8gdGhlaXIgb3duIGNhbXAsIGxlc3Qgc29tZSBhdHRhY2sgbWlnaHQgYmUgbWFkZSB1cG9uIHRob3NlIHRoZXkgaGFkIGxlZnQgYmVoaW5kLiBTbyB0aGV5IGltbWVkaWF0ZWx5IHNvdW5kZWQgdGhlIHJlY2FsbCB3aXRoIHRoZSB0cnVtcGV0IGFuZCBzZXQgb3V0IG9uIHRoZSByZXR1cm4gam91cm5leSwgYXJyaXZpbmcgYXQgdGhlaXIgY2FtcCBvbiB0aGUgc2FtZSBkYXkuCjwvdHJhbnNsYXRpb24+"
translation['4.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbiB0aGUgbmV4dCBkYXkgaXQgc2VlbWVkIHRoYXQgdGhleSBtdXN0IGNvbnRpbnVlIHRoZWlyIG1hcmNoIHdpdGggYWxsIHNwZWVkLCBiZWZvcmUgdGhlIGhvc3RpbGUgYXJteSBjb3VsZCBiZSBnYXRoZXJlZCB0b2dldGhlciBhZ2FpbiBhbmQgdGFrZSBwb3NzZXNzaW9uIG9mIHRoZSBuYXJyb3cgcGFzc2VzLiBUaGV5IGFjY29yZGluZ2x5IHBhY2tlZCB1cCBhbmQgc2V0IG91dCBhdCBvbmNlLCBtYXJjaGluZyB0aHJvdWdoIGRlZXAgc25vdyB3aXRoIGEgbGFyZ2UgbnVtYmVyIG9mIGd1aWRlczsgYW5kIGJlZm9yZSB0aGUgZGF5IGVuZGVkIHRoZXkgY3Jvc3NlZCBvdmVyIHRoZSBzdW1taXQgYXQgd2hpY2ggVGlyaWJhenVzIHdhcyBpbnRlbmRpbmcgdG8gYXR0YWNrIHRoZW0gYW5kIHdlbnQgaW50byBjYW1wLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZyb20gdGhlcmUgdGhleSBtYXJjaGVkIHRocmVlIHN0YWdlcyB0aHJvdWdoIGRlc2VydCBjb3VudHJ5LCBmaWZ0ZWVuIHBhcmFzYW5ncywgdG8gdGhlIEV1cGhyYXRlcyByaXZlciwgYW5kIGNyb3NzZWQgaXQsIHdldHRpbmcgdGhlbXNlbHZlcyB1cCB0byB0aGUgbmF2ZWw7CjwvdHJhbnNsYXRpb24+"
translation['4.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPmFuZCByZXBvcnQgd2FzIHRoYXQgdGhlIHNvdXJjZXMgb2YgdGhlIHJpdmVyIHdlcmUgbm90IGZhciBkaXN0YW50LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gcm9tIHRoZXJlIHRoZXkgbWFyY2hlZCBvdmVyIGEgcGxhaW4gYW5kIHRocm91Z2ggZGVlcCBzbm93IHRocmVlIHN0YWdlcywgdGhpcnRlZW4gcGFyYXNhbmdzLiBUaGUgdGhpcmQgc3RhZ2UgcHJvdmVkIGEgaGFyZCBvbmUsIHdpdGggdGhlIG5vcnRoIHdpbmQsIHdoaWNoIGJsZXcgZnVsbCBpbiB0aGVpciBmYWNlcywgYWJzb2x1dGVseSBibGFzdGluZyBldmVyeXRoaW5nIGFuZCBmcmVlemluZyB0aGUgbWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gaXQgd2FzIHRoYXQgb25lIG9mIHRoZSBzb290aHNheWVycyBiYWRlIHRoZW0gb2ZmZXIgc2FjcmlmaWNlIHRvIHRoZSB3aW5kLCBhbmQgc2FjcmlmaWNlIHdhcyBvZmZlcmVkOyBhbmQgaXQgc2VlbWVkIHF1aXRlIGNsZWFyIHRvIGV2ZXJ5Ym9keSB0aGF0IHRoZSB2aW9sZW5jZSBvZiB0aGUgd2luZCBhYmF0ZWQuIEJ1dCB0aGUgZGVwdGggb2YgdGhlIHNub3cgd2FzIGEgZmF0aG9tLCBzbyB0aGF0IG1hbnkgb2YgdGhlIGJhZ2dhZ2UgYW5pbWFscyBhbmQgc2xhdmVzIHBlcmlzaGVkLCBhbmQgYWJvdXQgdGhpcnR5IG9mIHRoZSBzb2xkaWVycy4KPC90cmFuc2xhdGlvbj4="
translation['4.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZXkgZ290IHRocm91Z2ggdGhhdCBuaWdodCBieSBrZWVwaW5nIHVwIGZpcmVzLCBmb3IgdGhlcmUgd2FzIHdvb2QgaW4gYWJ1bmRhbmNlIGF0IHRoZSBoYWx0aW5nLXBsYWNlOyB0aG9zZSB3aG8gY2FtZSB1cCBsYXRlLCBob3dldmVyLCBoYWQgbm9uZSwgYW5kIGNvbnNlcXVlbnRseSB0aGUgbWVuIHdobyBoYWQgYXJyaXZlZCBlYXJseSBhbmQgd2VyZSBrZWVwaW5nIGEgZmlyZSB3b3VsZCBub3QgYWxsb3cgdGhlIGxhdGUgY29tZXJzIHRvIGdldCBuZWFyIGl0IHVubGVzcyB0aGV5IGdhdmUgdGhlbSBhIHNoYXJlIG9mIHRoZWlyIHdoZWF0IG9yIGFueXRoaW5nIGVsc2UgdGhleSBoYWQgdGhhdCB3YXMgZWRpYmxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlNvIHRoZW4gdGhleSBzaGFyZWQgd2l0aCBvbmUgYW5vdGhlciB3aGF0IHRoZXkgc2V2ZXJhbGx5IHBvc3Nlc3NlZC4gTm93IHdoZXJlIHRoZSBmaXJlIHdhcyBraW5kbGVkIHRoZSBzbm93IG1lbHRlZCwgYW5kIHRoZSByZXN1bHQgd2FzIGdyZWF0IGhvbGVzIGNsZWFyIGRvd24gdG8gdGhlIGdyb3VuZDsgYW5kIHRoZXJlLCBvZiBjb3Vyc2UsIG9uZSBjb3VsZCBtZWFzdXJlIHRoZSBkZXB0aCBvZiB0aGUgc25vdy4KPC90cmFuc2xhdGlvbj4="
translation['4.5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gcm9tIHRoZXJlIHRoZXkgbWFyY2hlZCBhbGwgdGhlIGZvbGxvd2luZyBkYXkgdGhyb3VnaCBzbm93LCBhbmQgbWFueSBvZiB0aGUgbWVuIGZlbGwgaWxsIHdpdGggaHVuZ2VyLWZhaW50bmVzcy4gQW5kIFhlbm9waG9uLCB3aXRoIHRoZSByZWFyLWd1YXJkLCBhcyBoZSBjYW1lIHVwb24gdGhlIG1lbiB3aG8gd2VyZSBmYWxsaW5nIGJ5IHRoZSB3YXksIGRpZCBub3Qga25vdyB3aGF0IHRoZSB0cm91YmxlIHdhcy4KPC90cmFuc2xhdGlvbj4="
translation['4.5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBhcyBzb29uIGFzIGEgcGVyc29uIHdobyB3YXMgYWNxdWFpbnRlZCB3aXRoIHRoZSBkaXNlYXNlIGhhZCB0b2xkIGhpbSB0aGF0IHRoZXkgbWFuaWZlc3RseSBoYWQgaHVuZ2VyLWZhaW50bmVzcywgYW5kIGlmIHRoZXkgd2VyZSBnaXZlbiBzb21ldGhpbmcgdG8gZWF0IHdvdWxkIGJlIGFibGUgdG8gZ2V0IHVwLCBoZSB3ZW50IGFyb3VuZCBhbW9uZyB0aGUgYmFnZ2FnZSBhbmltYWxzLCBhbmQgd2hlcmV2ZXIgaGUgc2F3IGFueXRoaW5nIHRoYXQgd2FzIGVkaWJsZSwgaGUgd291bGQgZGlzdHJpYnV0ZSBpdCBhbW9uZyB0aGUgc2ljayBtZW4sIG9yIHNlbmQgaGl0aGVyIGFuZCB0aGl0aGVyIHBlb3BsZSB3aG8gaGFkIHRoZSBzdHJlbmd0aCB0byBydW4gYWxvbmcgdGhlIGxpbmVzLCB0byBnaXZlIGl0IHRvIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['4.5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZXkgaGFkIGVhdGVuIHNvbWV0aGluZywgdGhleSB3b3VsZCBnZXQgdXAgYW5kIGNvbnRpbnVlIHRoZSBtYXJjaC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgdGhlIGFybXkgd2VudCBvbiwgQ2hlaXJpc29waHVzIHJlYWNoZWQgYSB2aWxsYWdlIGFib3V0IGR1c2ssIGFuZCBmb3VuZCBhdCB0aGUgc3ByaW5nIG91dHNpZGUgdGhlIHdhbGwgd29tZW4gYW5kIGdpcmxzIHdobyBoYWQgY29tZSBmcm9tIHRoZSB2aWxsYWdlIHRvIGZldGNoIHdhdGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGFza2VkIHRoZSBHcmVla3Mgd2hvIHRoZXkgd2VyZSwgYW5kIHRoZSBpbnRlcnByZXRlciByZXBsaWVkIGluIFBlcnNpYW4gdGhhdCB0aGV5IHdlcmUgb24gdGhlaXIgd2F5IGZyb20gdGhlIEtpbmcgdG8gdGhlIHNhdHJhcC4gVGhlIHdvbWVuIGFuc3dlcmVkIHRoYXQgaGUgd2FzIG5vdCB0aGVyZSwgYnV0IGFib3V0IGEgcGFyYXNhbmcgYXdheS4gVGhlbiwgaW5hc211Y2ggYXMgaXQgd2FzIGxhdGUsIHRoZSBHcmVla3MgYWNjb21wYW5pZWQgdGhlIHdhdGVyLWNhcnJpZXJzIHdpdGhpbiB0aGUgd2FsbCB0byB2aXNpdCB0aGUgdmlsbGFnZSBjaGllZi4KPC90cmFuc2xhdGlvbj4="
translation['4.5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5TbyBpdCB3YXMgdGhhdCBDaGVpcmlzb3BodXMgYW5kIGFsbCB0aGUgdHJvb3BzIHdobyBjb3VsZCBtdXN0ZXIgc3RyZW5ndGggZW5vdWdoIHRvIHJlYWNoIHRoZSB2aWxsYWdlLCB3ZW50IGludG8gcXVhcnRlcnMgdGhlcmUsIGJ1dCBzdWNoIG9mIHRoZSBvdGhlcnMgYXMgd2VyZSB1bmFibGUgdG8gY29tcGxldGUgdGhlIGpvdXJuZXkgc3BlbnQgdGhlIG5pZ2h0IGluIHRoZSBvcGVuIHdpdGhvdXQgZm9vZCBvciBmaXJlOyBhbmQgaW4gdGhpcyB3YXkgc29tZSBvZiB0aGUgc29sZGllcnMgcGVyaXNoZWQuCjwvdHJhbnNsYXRpb24+"
translation['4.5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVhbndoaWxlIHRoZXkgd2VyZSBiZWluZyBmb2xsb3dlZCBieSB0aGUgZW5lbXksIHNvbWUgb2Ygd2hvbSBoYWQgYmFuZGVkIHRvZ2V0aGVyIGFuZCB3ZXJlIHNlaXppbmcgc3VjaCBvZiB0aGUgcGFjayBhbmltYWxzIGFzIGxhY2tlZCB0aGUgc3RyZW5ndGggdG8gZ28gb24sIGFuZCBmaWdodGluZyBvdmVyIHRoZW0gd2l0aCBvbmUgYW5vdGhlci4gU29tZSBvZiB0aGUgc29sZGllcnMgbGlrZXdpc2Ugd2VyZSBmYWxsaW5nIGJlaGluZOKAlHRob3NlIHdob3NlIGV5ZXMgaGFkIGJlZW4gYmxpbmRlZCBieSB0aGUgc25vdywgb3Igd2hvc2UgdG9lcyBoYWQgcm90dGVkIG9mZiBieSByZWFzb24gb2YgdGhlIGNvbGQuCjwvdHJhbnNsYXRpb24+"
translation['4.5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgYSBwcm90ZWN0aW9uIHRvIHRoZSBleWVzIGFnYWluc3QgdGhlIHNub3cgaWYgYSBtYW4gbWFyY2hlZCB3aXRoIHNvbWV0aGluZyBibGFjayBpbiBmcm9udCBvZiB0aGVtLCBhbmQgYSBwcm90ZWN0aW9uIHRvIHRoZSBmZWV0IGlmIG9uZSBrZXB0IG1vdmluZyBhbmQgbmV2ZXIgcXVpZXQsIGFuZCBpZiBoZSB0b29rIG9mZiBoaXMgc2hvZXMgZm9yIHRoZSBuaWdodDsKPC90cmFuc2xhdGlvbj4="
translation['4.5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5idXQgaW4gYWxsIGNhc2VzIHdoZXJlIG1lbiBzbGVwdCB3aXRoIHRoZWlyIHNob2VzIG9uLCB0aGUgc3RyYXBzIHN1bmsgaW50byB0aGVpciBmbGVzaCBhbmQgdGhlIHNob2VzIGZyb3plIG9uIHRoZWlyIGZlZXQ7IGZvciB3aGF0IHRoZXkgd2VyZSB3ZWFyaW5nLCBzaW5jZSB0aGVpciBvbGQgc2hvZXMgaGFkIGdpdmVuIG91dCwgd2VyZSBicm9ndWVzIG1hZGUgb2YgZnJlc2hseSBmbGF5ZWQgb3gtaGlkZXMuCjwvdHJhbnNsYXRpb24+"
translation['4.5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgd2FzIHVuZGVyIGNvbXB1bHNpb24gb2Ygc3VjaCBkaWZmaWN1bHRpZXMgdGhhdCBzb21lIG9mIHRoZSBzb2xkaWVycyB3ZXJlIGZhbGxpbmcgYmVoaW5kOyBhbmQgZXNweWluZyBhIHNwb3QgdGhhdCB3YXMgZGFyayBiZWNhdXNlIHRoZSBzbm93IGp1c3QgdGhlcmUgaGFkIGRpc2FwcGVhcmVkLCB0aGV5IHN1cm1pc2VkIHRoYXQgaXQgaGFkIG1lbHRlZDsgYW5kIGluIGZhY3QgaXQgaGFkIG1lbHRlZCwgb24gYWNjb3VudCBvZiBhIHNwcmluZyB3aGljaCB3YXMgbmVhciBieSwgc3RlYW1pbmcgaW4gYSBkZWxsOyBoZXJlIHRoZXkgdHVybmVkIGFzaWRlIGFuZCBzYXQgZG93biwgcmVmdXNpbmcgdG8gZ28gYW55IGZhcnRoZXIuCjwvdHJhbnNsYXRpb24+"
translation['4.5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBYZW5vcGhvbiB3aXRoIHNvbWUgb2YgdGhlIHJlYXJndWFyZCBvYnNlcnZlZCB0aGVtLCBoZSBiZWdnZWQgdGhlbSBieSBhbGwgbWFubmVyIG9mIG1lYW5zIG5vdCB0byBiZSBsZWZ0IGJlaGluZCwgdGVsbGluZyB0aGVtIHRoYXQgYSBsYXJnZSBib2R5IG9mIHRoZSBlbmVteSBoYWQgZ2F0aGVyZWQgYW5kIHdlcmUgcHVyc3VpbmcsIGFuZCBmaW5hbGx5IGhlIGJlY2FtZSBhbmdyeS4gVGhleSB0b2xkIGhpbSwgaG93ZXZlciwgdG8ga2lsbCB0aGVtLCBmb3IgdGhleSBjb3VsZCBub3QgZ28gb24uCjwvdHJhbnNsYXRpb24+"
translation['4.5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGlzIHNpdHVhdGlvbiBpdCBzZWVtZWQgdG8gYmUgYmVzdCB0byBmcmlnaHRlbiB0aGUgcHVyc3VpbmcgZW5lbXksIGlmIHRoZXkgY291bGQsIGluIG9yZGVyIHRvIHByZXZlbnQgdGhlaXIgZmFsbGluZyB1cG9uIHRoZSBzaWNrIG1lbi4gSXQgd2FzIGRhcmsgYnkgdGhpcyB0aW1lLCBhbmQgdGhlIGVuZW15IHdlcmUgY29taW5nIG9uIHdpdGggYSBncmVhdCB1cHJvYXIsIHF1YXJyZWxsaW5nIG92ZXIgdGhlIGJvb3R5IHRoZXkgaGFkLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZSBtZW4gb2YgdGhlIHJlYXJndWFyZCwgc2luY2UgdGhleSB3ZXJlIHNvdW5kIGFuZCB3ZWxsLCBzdGFydGVkIHVwIGFuZCBjaGFyZ2VkIHVwb24gdGhlIGVuZW15LCB3aGlsZSB0aGUgaW52YWxpZHMgcmFpc2VkIGFzIGJpZyBhIHNob3V0IGFzIHRoZXkgY291bGQgYW5kIGNsYXNoZWQgdGhlaXIgc2hpZWxkcyBhZ2FpbnN0IHRoZWlyIHNwZWFycy4gQW5kIHRoZSBlbmVteSwgc2VpemVkIHdpdGggZmVhciwgdGhyZXcgdGhlbXNlbHZlcyBkb3duIG92ZXIgdGhlIHNub3cgaW50byB0aGUgZGVsbCwgYW5kIG5vdCBhIHNvdW5kIHdhcyBoZWFyZCBmcm9tIHRoZW0gYWZ0ZXJ3YXJkcy4KPC90cmFuc2xhdGlvbj4="
translation['4.5.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmV1cG9uIFhlbm9waG9uIGFuZCBoaXMgbWVuLCBhZnRlciB0ZWxsaW5nIHRoZSBpbnZhbGlkcyB0aGF0IG9uIHRoZSBuZXh0IGRheSBwZW9wbGUgd291bGQgY29tZSBiYWNrIGFmdGVyIHRoZW0sIGNvbnRpbnVlZCB0aGVpciBtYXJjaCwgYnV0IGJlZm9yZSB0aGV5IGhhZCBnb25lIGZvdXIgc3RhZGlhIHRoZXkgY2FtZSB1cG9uIHRoZWlyIGNvbXJhZGVzIGx5aW5nIGRvd24gaW4gdGhlIHJvYWQgdXBvbiB0aGUgc25vdywgd3JhcHBlZCB1cCBpbiB0aGVpciBjbG9ha3MsIGFuZCB3aXRob3V0IHNvIG11Y2ggYXMgYSBzaW5nbGUgZ3VhcmQgcG9zdGVkLiBUaGV5IHRyaWVkIHRvIGdldCB0aGVtIHVwLCBidXQgdGhlIG1lbiBzYWlkIHRoYXQgdGhlIHRyb29wcyBpbiBmcm9udCB3b3VsZCBub3QgbWFrZSB3YXkgZm9yIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['4.5.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5YZW5vcGhvbiBhY2NvcmRpbmdseSBwYXNzZWQgYWxvbmcgYW5kLCBzZW5kaW5nIGZvcndhcmQgdGhlIHN0cm9uZ2VzdCBvZiB0aGUgcGVsdGFzdHMsIGRpcmVjdGVkIHRoZW0gdG8gc2VlIHdoYXQgdGhlIGhpbmRyYW5jZSB3YXMuIFRoZXkgcmVwb3J0ZWQgYmFjayB0aGF0IHRoZSB3aG9sZSBhcm15IHdhcyByZXN0aW5nIGluIHRoaXMgd2F5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gWGVub3Bob24gYWxzbyBhbmQgaGlzIHBhcnR5IGJpdm91YWNrZWQgd2hlcmUgdGhleSB3ZXJlLCB3aXRob3V0IGEgZmlyZSBhbmQgd2l0aG91dCBkaW5uZXIsIGFmdGVyIHN0YXRpb25pbmcgc3VjaCBndWFyZHMgYXMgdGhleSBjb3VsZC4gV2hlbiBpdCBjYW1lIHRvd2FyZCBtb3JuaW5nLCBYZW5vcGhvbiBzZW50IHRoZSB5b3VuZ2VzdCBvZiBoaXMgdHJvb3BzIHRvIHRoZSBzaWNrIG1lbiB3aXRoIG9yZGVycyB0byBtYWtlIHRoZW0gZ2V0IHVwIGFuZCBmb3JjZSB0aGVtIHRvIHByb2NlZWQuCjwvdHJhbnNsYXRpb24+"
translation['4.5.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVhbndoaWxlIENoZWlyaXNvcGh1cyBzZW50IHNvbWUgb2YgdGhlIHRyb29wcyBxdWFydGVyZWQgaW4gdGhlIHZpbGxhZ2UgdG8gZmluZCBvdXQgaG93IHRoZSBwZW9wbGUgYXQgdGhlIHJlYXIgd2VyZSBmYXJpbmcuIFhlbm9waG9uJ3MgcGFydHkgd2VyZSBnbGFkIGVub3VnaCB0byBzZWUgdGhlbSwgYW5kIHR1cm5lZCBvdmVyIHRoZSBpbnZhbGlkcyB0byB0aGVtIHRvIGNhcnJ5IG9uIHRvIHRoZSBjYW1wLCB3aGlsZSB0aGV5IHRoZW1zZWx2ZXMgY29udGludWVkIHRoZWlyIGpvdXJuZXksIGFuZCBiZWZvcmUgY29tcGxldGluZyB0d2VudHkgc3RhZGlhIHJlYWNoZWQgdGhlIHZpbGxhZ2Ugd2hlcmUgQ2hlaXJpc29waHVzIHdhcyBxdWFydGVyZWQuCjwvdHJhbnNsYXRpb24+"
translation['4.5.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGFsbCBoYWQgY29tZSB0b2dldGhlciwgdGhlIGdlbmVyYWxzIGRlY2lkZWQgdGhhdCBpdCB3YXMgc2FmZSBmb3IgdGhlIGRpZmZlcmVudCBkaXZpc2lvbnMgb2YgdGhlIGFybXkgdG8gdGFrZSB1cCBxdWFydGVycyBpbiB0aGUgc2V2ZXJhbCB2aWxsYWdlcy4gQ2hlaXJpc29waHVzIGFjY29yZGluZ2x5IHJlbWFpbmVkIHdoZXJlIGhlIHdhcywgd2hpbGUgdGhlIG90aGVyIGdlbmVyYWxzIGRpc3RyaWJ1dGVkIGJ5IGxvdCB0aGUgdmlsbGFnZXMgd2l0aGluIHNpZ2h0LCBhbmQgYWxsIHNldCBvZmYgd2l0aCB0aGVpciByZXNwZWN0aXZlIGNvbW1hbmRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGl0IHdhcyB0aGF0IFBvbHljcmF0ZXMsIGFuZCBBdGhlbmlhbiBjYXB0YWluLCBhc2tlZCB0byBiZSBkZXRhY2hlZCBmcm9tIGhpcyBkaXZpc2lvbjsgYW5kIHdpdGggYW4gYWN0aXZlIGdyb3VwIG9mIG1lbiBoZSByYW4gdG8gdGhlIHZpbGxhZ2Ugd2hpY2ggaGFkIGZhbGxlbiB0byBYZW5vcGhvbidzIGxvdCBhbmQgdGhlcmUgdG9vayBwb3NzZXNzaW9uIG9mIGFsbCB0aGUgdmlsbGFnZXJzLCB0aGUgdmlsbGFnZSBjaGllZiBpbmNsdWRlZCwgc2V2ZW50ZWVuIGNvbHRzIHdoaWNoIHdlcmUgYmVpbmcgcmVhcmVkIGZvciB0cmlidXRlIHRvIHRoZSBLaW5nLCBhbmQgdGhlIHZpbGxhZ2UgY2hpZWYncyBkYXVnaHRlciwgd2hvIGhhZCBiZWVuIG1hcnJpZWQgZWlnaHQgZGF5cyBiZWZvcmU7IGhlciBodXNiYW5kLCBob3dldmVyLCB3YXMgb2ZmIGh1bnRpbmcgaGFyZXMsIGFuZCB3YXMgbm90IHRha2VuIGluIHRoZSB2aWxsYWdlLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGhvdXNlcyBoZXJlIHdlcmUgdW5kZXJncm91bmQsIHdpdGggYSBtb3V0aCBsaWtlIHRoYXQgb2YgYSB3ZWxsLCBidXQgc3BhY2lvdXMgYmVsb3c7IGFuZCB3aGlsZSBlbnRyYW5jZXMgd2VyZSB0dW5uZWxsZWQgZG93biBmb3IgdGhlIGJlYXN0cyBvZiBidXJkZW4sIHRoZSBodW1hbiBpbmhhYml0YW50cyBkZXNjZW5kZWQgYnkgYSBsYWRkZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlN1Y2ggdW5kZXJncm91bmQgdmlsbGFnZXMgYXJlIHN0aWxsIHRvIGJlIGZvdW5kIGluIE1vZGVybiBBcm1lbmlhLjwvbm90ZT4gSW4gdGhlIGhvdXNlcyB3ZXJlIGdvYXRzLCBzaGVlcCwgY2F0dGxlLCBmb3dscywgYW5kIHRoZWlyIHlvdW5nOyBhbmQgYWxsIHRoZSBhbmltYWxzIHdlcmUgcmVhcmVkIGFuZCB0b29rIHRoZWlyIGZvZGRlciB0aGVyZSBpbiB0aGUgaG91c2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5IZXJlIHdlcmUgYWxzbyB3aGVhdCwgYmFybGV5LCBhbmQgYmVhbnMsIGFuZCBiYXJsZXl3aW5lIGluIGxhcmdlIGJvd2xzLiBGbG9hdGluZyBvbiB0aGUgdG9wIG9mIHRoaXMgZHJpbmsgd2VyZSB0aGUgYmFybGV5LWdyYWlucyBhbmQgaW4gaXQgd2VyZSBzdHJhd3MsIHNvbWUgbGFyZ2VyIGFuZCBvdGhlcnMgc21hbGxlciwgd2l0aG91dCBqb2ludHM7CjwvdHJhbnNsYXRpb24+"
translation['4.5.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgd2hlbiBvbmUgd2FzIHRoaXJzdHksIGhlIGhhZCB0byB0YWtlIHRoZXNlIHN0cmF3cyBpbnRvIGhpcyBtb3V0aCBhbmQgc3Vjay4gSXQgd2FzIGFuIGV4dHJlbWVseSBzdHJvbmcgZHJpbmsgdW5sZXNzIG9uZSBkaWx1dGVkIGl0IHdpdGggd2F0ZXIsIGFuZCBleHRyZW1lbHkgZ29vZCB3aGVuIG9uZSB3YXMgdXNlZCB0byBpdC4KPC90cmFuc2xhdGlvbj4="
translation['4.5.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+WGVub3Bob24gbWFkZSB0aGUgY2hpZWYgbWFuIG9mIHRoaXMgdmlsbGFnZSBoaXMgZ3Vlc3QgYXQgZGlubmVyIGFuZCBiYWRlIGhpbSBiZSBvZiBnb29kIGNoZWVyLCB0ZWxsaW5nIGhpbSB0aGF0IGhlIHNob3VsZCBub3QgYmUgZGVwcml2ZWQgb2YgaGlzIGNoaWxkcmVuLCBhbmQgdGhhdCBiZWZvcmUgdGhleSB3ZW50IGF3YXkgdGhleSB3b3VsZCBmaWxsIGhpcyBob3VzZSB3aXRoIHByb3Zpc2lvbnMgYnkgd2F5IG9mIHJld2FyZCBpbiBjYXNlIGhlIHNob3VsZCBwcm92ZSB0byBoYXZlIGdpdmVuIHRoZSBhcm15IGdvb2QgZ3VpZGFuY2UgdW50aWwgdGhleSBzaG91bGQgcmVhY2ggYW5vdGhlciB0cmliZS4KPC90cmFuc2xhdGlvbj4="
translation['4.5.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5IZSBwcm9taXNlZCB0byBkbyB0aGlzLCBhbmQgaW4gYSBzcGlyaXQgb2Yga2luZGxpbmVzcyB0b2xkIHRoZW0gd2hlcmUgdGhlcmUgd2FzIHdpbmUgYnVyaWVkLiBGb3IgdGhhdCBuaWdodCwgdGhlbiwgYWxsIFhlbm9waG9uJ3Mgc29sZGllcnMsIGluIHRoaXMgdmlsbGFnZSB3aGVyZSB0aGV5IHdlcmUgdGh1cyBzZXBhcmF0ZWx5IHF1YXJ0ZXJlZCwgd2VudCB0byBiZWQgYW1pZCBhbiBhYnVuZGFuY2Ugb2YgZXZlcnl0aGluZywga2VlcGluZyB0aGUgdmlsbGFnZSBjaGllZiB1bmRlciBndWFyZCBhbmQgaGlzIGNoaWxkcmVuIGFsbCB0b2dldGhlciB3aXRoaW4gc2lnaHQuCjwvdHJhbnNsYXRpb24+"
translation['4.5.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhlIG5leHQgZGF5IFhlbm9waG9uIHRvb2sgdGhlIHZpbGxhZ2UgY2hpZWYgYW5kIHNldCBvdXQgdG8gdmlzaXQgQ2hlaXJpc29waHVzOyB3aGVuZXZlciBoZSBwYXNzZWQgYSB2aWxsYWdlLCBoZSB3b3VsZCB0dXJuIGFzaWRlIHRvIHZpc2l0IHRoZSB0cm9vcHMgcXVhcnRlcmVkIHRoZXJlLCBhbmQgZXZlcnl3aGVyZSBoZSBmb3VuZCB0aGVtIGZhcmluZyBzdW1wdHVvdXNseSBhbmQgaW4gZmluZSBzcGlyaXRzOyB0aGVyZSB3YXMgbm8gcGxhY2UgZnJvbSB3aGljaCB0aGUgbWVuIHdvdWxkIGxldCB0aGVtIGdvIHVudGlsIHRoZXkgaGFkIHNlcnZlZCB0aGVtIGEgbHVuY2hlb24sCjwvdHJhbnNsYXRpb24+"
translation['4.5.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgbm8gcGxhY2Ugd2hlcmUgdGhleSBkaWQgbm90IHNlcnZlIG9uIHRoZSBzYW1lIHRhYmxlIGxhbWIsIGtpZCwgcG9yaywgdmVhbCwgYW5kIHBvdWx0cnksIHRvZ2V0aGVyIHdpdGggbWFueSBsb2F2ZXMgb2YgYnJlYWQsIHNvbWUgb2Ygd2hlYXQgYW5kIHNvbWUgb2YgYmFybGV5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbmV2ZXIgYSBtYW4gd2FudGVkIG91dCBvZiBnb29kIGZlbGxvd3NoaXAgdG8gZHJpbmsgYW5vdGhlcidzIGhlYWx0aCwgaGUgd291bGQgZHJhdyBoaW0gdG8gdGhlIGJvd2wsIGFuZCB0aGVuIG9uZSBoYWQgdG8gc3Rvb3Agb3ZlciBhbmQgZHJpbmsgZnJvbSBpdCwgc3Vja2luZyBsaWtlIGFuIG94LiBUbyB0aGUgdmlsbGFnZSBjaGllZiB0aGV5IG9mZmVyZWQgdGhlIHByaXZpbGVnZSBvZiB0YWtpbmcgd2hhdGV2ZXIgaGUgd2FudGVkLiBIZSBkZWNsaW5lZCBmb3IgdGhlIG1vc3QgcGFydCB0byBhY2NlcHQgYW55dGhpbmcsIGJ1dCB3aGVuZXZlciBoZSBjYXVnaHQgc2lnaHQgb2Ygb25lIG9mIGhpcyBraW5zbWVuLCBoZSB3b3VsZCBhbHdheXMgdGFrZSB0aGUgbWFuIHRvIGhpcyBzaWRlLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5BZ2Fpbiwgd2hlbiB0aGV5IHJlYWNoZWQgQ2hlaXJpc29waHVzLCB0aGV5IGZvdW5kIGhpcyB0cm9vcHMgYWxzbyBmZWFzdGluZyBpbiB0aGVpciBxdWFydGVycywgY3Jvd25lZCB3aXRoIHdyZWF0aHMgb2YgaGF5IGFuZCBzZXJ2ZWQgYnkgQXJtZW5pYW4gYm95cyBpbiB0aGVpciBzdHJhbmdlLCBmb3JlaWduIGRyZXNzOyBhbmQgdGhleSB3ZXJlIHNob3dpbmcgdGhlIGJveXMgd2hhdCB0byBkbyBieSBzaWducywgYXMgaWYgdGhleSB3ZXJlIGRlYWYgYW5kIGR1bWIuCjwvdHJhbnNsYXRpb24+"
translation['4.5.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgc29vbiBhcyBDaGVpcmlzb3BodXMgYW5kIFhlbm9waG9uIGhhZCBleGNoYW5nZWQgd2FybSBncmVldGluZ3MsIHRoZXkgdG9nZXRoZXIgYXNrZWQgdGhlIHZpbGxhZ2UgY2hpZWYsIHRocm91Z2ggdGhlaXIgUGVyc2lhbi1zcGVha2luZyBpbnRlcnByZXRlciwgd2hhdCB0aGlzIGxhbmQgd2FzLiBIZSByZXBsaWVkIHRoYXQgaXQgd2FzIEFybWVuaWEuIFRoZXkgYXNrZWQgaGltIGFnYWluIGZvciB3aG9tIHRoZSBob3JzZXMgd2VyZSBiZWluZyByZWFyZWQuIEhlIGFuc3dlcmVkLCBhcyB0cmlidXRlIGZvciB0aGUgS2luZzsgYW5kIGhlIHNhaWQgdGhhdCB0aGUgbmVpZ2hib3VyaW5nIGNvdW50cnkgd2FzIHRoYXQgb2YgdGhlIENoYWx5YmlhbnMsIGFuZCB0b2xkIHRoZW0gd2hlcmUgdGhlIHJvYWQgd2FzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIFhlbm9waG9uIHRvb2sgdGhlIHZpbGxhZ2UgY2hpZWYgYmFjayBmb3IgdGhlIHRpbWUgdG8gaGlzIG93biBob3VzZWhvbGQsIGFuZCBnYXZlIGhpbSBhIGhvcnNlIHRoYXQgaGUgaGFkIGdvdCB3aGVuIGl0IHdhcyByYXRoZXIgb2xkLCB0byBmYXR0ZW4gdXAgYW5kIHNhY3JpZmljZSwgZm9yIGhlIHVuZGVyc3Rvb2QgdGhhdCBpdCB3YXMgc2FjcmVkIHRvIHRoZSBTdW4tZ29kLiBIZSBkaWQgdGhpcyBvdXQgb2YgZmVhciB0aGF0IHRoZSBob3JzZSBtaWdodCBkaWUsIGZvciBpdCBoYWQgYmVlbiBpbmp1cmVkIGJ5IHRoZSBqb3VybmV5OyBhbmQgaGUgdG9vayBmb3IgaGltc2VsZiBvbmUgb2YgdGhlIGNvbHRzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSAyOCBhYm92ZTwvbm90ZT4gYW5kIGdhdmUgaGlzIGNhcHRhaW5zIGFsc28gYSBjb2x0IGFwaWVjZS4KPC90cmFuc2xhdGlvbj4="
translation['4.5.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgaG9yc2VzIG9mIHRoaXMgcmVnaW9uIHdlcmUgc21hbGxlciB0aGFuIHRoZSBQZXJzaWFuIGhvcnNlcywgYnV0IHZlcnkgbXVjaCBtb3JlIHNwaXJpdGVkLiBJdCB3YXMgaGVyZSBhbHNvIHRoYXQgdGhlIHZpbGxhZ2UgY2hpZWYgaW5zdHJ1Y3RlZCB0aGVtIGFib3V0IHdyYXBwaW5nIHNtYWxsIGJhZ3Mgcm91bmQgdGhlIGZlZXQgb2YgdGhlaXIgaG9yc2VzIGFuZCBiZWFzdHMgb2YgYnVyZGVuIHdoZW4gdGhleSB3ZXJlIGdvaW5nIHRocm91Z2ggdGhlIHNub3c7IGZvciB3aXRob3V0IHRoZXNlIGJhZ3MgdGhlIGFuaW1hbHMgd291bGQgc2luayBpbiB1cCB0byB0aGVpciBiZWxsaWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHNldmVuIGRheXMgaGFkIHBhc3NlZCwgWGVub3Bob24gZ2F2ZSBvdmVyIHRoZSB2aWxsYWdlIGNoaWVmIHRvIENoZWlyaXNvcGh1cyB0byBhY3QgYXMgZ3VpZGUsIGxlYXZpbmcgaGlzIGZhbWlseSBiZWhpbmQgd2l0aCB0aGUgZXhjZXB0aW9uIG9mIGhpcyBzb24sIHdobyB3YXMganVzdCBjb21pbmcgaW50byB0aGUgcHJpbWUgb2YgeW91dGg7IHRoaXMgc29uIGhlIGdhdmUgaW50byB0aGUga2VlcGluZyBvZiBQbGVpc3RoZW5lcyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEFtcGhpcG9saXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFtcGhpcG9saXMiPkFtcGhpcG9saXM8L3BsYWNlTmFtZT4sIGluIG9yZGVyIHRoYXQgdGhlIGZhdGhlciwgaWYgaGUgc2hvdWxkIHNlcnZlIHRoZW0gd2VsbCBhcyBndWlkZSwgbWlnaHQgdGFrZSBoaW0gYWxzbyBiYWNrIHdpdGggaGltLiBUaGVuLCBhZnRlciBwdXR0aW5nIGludG8gaGlzIGhvdXNlIGFzIGxhcmdlIGEgcXVhbnRpdHkgb2Ygc3VwcGxpZXMgYXMgdGhleSBjb3VsZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDI4IGFib3ZlLjwvbm90ZT4gdGhleSBicm9rZSBjYW1wIGFuZCBzZXQgb3V0IHVwb24gdGhlIG1hcmNoLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZSB2aWxsYWdlIGNoaWVmLCB3aG8gd2FzIG5vdCBib3VuZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNC4yLjEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNC4yLjE8L2JpYmw+Ljwvbm90ZT4gZ3VpZGVkIHRoZWlyIHdheSB0aHJvdWdoIHRoZSBzbm93OyBidXQgYnkgdGhlIHRpbWUgdGhleSB3ZXJlIG9uIHRoZSB0aGlyZCBzdGFnZSBDaGVpcmlzb3BodXMgZ290IGFuZ3J5IHdpdGggaGltIGZvciBub3QgbGVhZGluZyB0aGVtIHRvIHZpbGxhZ2VzLiBIZSByZXBsaWVkIHRoYXQgdGhlcmUgd2VyZSBub25lIGluIHRoaXMgcmVnaW9uLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuMi4xIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDQuMi4xPC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['4.6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gQ2hlaXJpc29waHVzIHN0cnVjayBoaW0sIGJ1dCBuZWdsZWN0ZWQgdG8gYmluZCBoaW0uIFRoZSByZXN1bHQgd2FzIHRoYXQgaGUgc3RvbGUgYXdheSBkdXJpbmcgdGhlIG5pZ2h0LCBsZWF2aW5nIGhpcyBzb24gYmVoaW5kLiBBbmQgdGhpcyB3YXMgdGhlIG9ubHkgY2F1c2Ugb2YgZGlmZmVyZW5jZSBiZXR3ZWVuIENoZWlyaXNvcGh1cyBhbmQgWGVub3Bob24gZHVyaW5nIHRoZSBjb3Vyc2Ugb2YgdGhlIG1hcmNoLCB0aGlzIGlsbC10cmVhdG1lbnQgb2YgdGhlIGd1aWRlIGFuZCBjYXJlbGVzc25lc3MgaW4gbm90IGd1YXJkaW5nIGhpbS4gUGxlaXN0aGVuZXMsIGhvd2V2ZXIsIGZlbGwgaW4gbG92ZSB3aXRoIHRoZSBib3ksIHRvb2sgaGltIGhvbWUgd2l0aCBoaW0sIGFuZCBmb3VuZCBoaW0gYWJzb2x1dGVseSBmYWl0aGZ1bC4KPC90cmFuc2xhdGlvbj4="
translation['4.6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZXkgbWFyY2hlZCBzZXZlbiBzdGFnZXMgYXQgdGhlIHJhdGUgb2YgZml2ZSBwYXJhc2FuZ3MgYSBkYXkgdG8gdGhlIFBoYXNpcyByaXZlciwgd2hpY2ggd2FzIGEgcGxldGhydW0gaW4gd2lkdGguCjwvdHJhbnNsYXRpb24+"
translation['4.6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkZyb20gdGhlcmUgdGhleSBtYXJjaGVkIHR3byBzdGFnZXMsIHRlbiBwYXJhc2FuZ3M7IGFuZCBvbiB0aGUgcGFzcyBsZWFkaW5nIG92ZXIgdG8gdGhlIHBsYWluIHRoZXkgZW5jb3VudGVyZWQgYSBib2R5IG9mIENoYWx5YmlhbnMsIFRhb2NoaWFucywgYW5kIFBoYXNpYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgQ2hlaXJpc29waHVzIGNhdWdodCBzaWdodCBvZiB0aGUgZW5lbXkgb24gdGhlIHBhc3MsIGhlIGhhbHRlZCwgd2hpbGUgc3RpbGwgYXQgYSBkaXN0YW5jZSBvZiBhYm91dCB0aGlydHkgc3RhZGlhLCBpbiBvcmRlciBub3QgdG8gZ2V0IG5lYXIgdGhlIGVuZW15IHdoaWxlIGhpcyB0cm9vcHMgd2VyZSBtYXJjaGluZyBpbiBjb2x1bW47IGFuZCBoZSBnYXZlIG9yZGVycyB0byB0aGUgb3RoZXIgb2ZmaWNlcnMgYWxzbyB0byBtb3ZlIGFsb25nIHRoZWlyIGNvbXBhbmllcyBzbyBhcyB0byBicmluZyB0aGUgYXJteSBpbnRvIGxpbmUgb2YgYmF0dGxlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIHRvIGJyaW5nIGNvbXBhbmllcyB3aGljaCBoYWQgYmVlbiBtYXJjaGluZyBpbiBjb2x1bW4sIHZpei4gb25lIGJlaGluZCBhbm90aGVyLCBpbnRvIGxpbmUgYWJyZWFzdCBvZiBvbmUgYW5vdGhlci48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['4.6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlIHJlYXJndWFyZCBoYWQgY29tZSB1cCwgaGUgY2FsbGVkIGdlbmVyYWxzIGFuZCBjYXB0YWlucyB0b2dldGhlciBhbmQgc3Bva2UgYXMgZm9sbG93czog4oCcVGhlIGVuZW15LCBhcyB5b3Ugc2VlLCBhcmUgaW4gcG9zc2Vzc2lvbiBvZiB0aGUgcGFzcyBvdmVyIHRoZSBtb3VudGFpbiwgYW5kIGl0IGlzIHRpbWUgZm9yIHVzIHRvIHRha2UgY291bnNlbCBhcyB0byBob3cgd2UgY2FuIGJlc3QgbWFrZSBvdXIgZmlnaHQuCjwvdHJhbnNsYXRpb24+"
translation['4.6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk15IG93biB2aWV3IGlzLCB0aGF0IHdlIHNob3VsZCBnaXZlIG9yZGVycyB0byB0aGUgc29sZGllcnMgdG8gZ2V0IHRoZWlyIGJyZWFrZmFzdCB3aGlsZSB3ZSBvdXJzZWx2ZXMgY29uc2lkZXIgd2hldGhlciBpdCBpcyBiZXN0IHRvIGF0dGVtcHQgdG8gY3Jvc3Mgb3ZlciB0aGUgbW91bnRhaW4gdG9kYXkgb3IgdG8tbW9ycm93LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPuKAnE15IG9waW5pb24gaXMs4oCdIHNhaWQgQ2xlYW5vciwg4oCcdGhhdCBhcyBzb29uIGFzIHdlIGhhdmUgYnJlYWtmYXN0ZWQsIHdlIHNob3VsZCBhcm0gb3Vyc2VsdmVzIGFuZCBhZHZhbmNlIHVwb24gdGhlc2UgbWVuIHdpdGggYWxsIHRoZSBzdHJlbmd0aCB3ZSBoYXZlLiBGb3IgaWYgd2Ugd2FzdGUgdGhpcyBkYXksIG5vdCBvbmx5IHdpbGwgdGhlIGVuZW15IHdobyBhcmUgbm93IGxvb2tpbmcgYXQgdXMgYmVjb21lIGJvbGRlciwgYnV0IG90aGVycywgaW4gZ3JlYXRlciBudW1iZXJzLCB3aGVuIHRoZXNlIGFyZSBvbmNlIGVtYm9sZGVuZWQsIGFyZSBsaWtlbHkgdG8gam9pbiB0aGVtLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgQ2xlYW5vciBoYWQgc3Bva2VuLCBYZW5vcGhvbiBzYWlkOiDigJxBbmQgSSB0aGluayB0aGlzIHdheTogaWYgaXQgaXMgbmVjZXNzYXJ5IGZvciB1cyB0byBmaWdodCwgb3VyIHByZXBhcmF0aW9uIHNob3VsZCBoYXZlIHRoaXMgZW5kIGluIHZpZXcsIHRvIG1ha2UgdGhlIHN0cm9uZ2VzdCBwb3NzaWJsZSBmaWdodDsgYnV0IGlmIHdlIHdpc2ggdG8gZWZmZWN0IGEgcGFzc2FnZSBpbiB0aGUgZWFzaWVzdCB3YXkgd2UgY2FuLCB0aGVuLCBpbiBteSBvcGluaW9uLCBvdXIgY29uc2lkZXJhdGlvbiBzaG91bGQgYmUgb24gdGhpcyBwb2ludCwgaG93IHdlIG1heSBzdXN0YWluIHRoZSBmZXdlc3Qgd291bmRzIGFuZCBzYWNyaWZpY2UgdGhlIGZld2VzdCBsaXZlcy4KPC90cmFuc2xhdGlvbj4="
translation['4.6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhpcyBtb3VudGFpbuKAlG9yIHRoZSBwYXJ0IG9mIGl0IHRoYXQgd2Ugc2Vl4oCUZXh0ZW5kcyBvdmVyIG1vcmUgdGhhbiBzaXh0eSBzdGFkaWEsIGJ1dCBhcyBmb3IgbWVuIHRvIGd1YXJkIGl0IGFnYWluc3QgdXMsIG5vbmUgYXJlIHRvIGJlIHNlZW4gYW55d2hlcmUgZXhjZXB0IG9uIHRoZSByb2FkIGFib3ZlOyBpdCBpcyBmYXIgYmV0dGVyLCB0aGVyZWZvcmUsIHRvIHR1cm4gdG8gdGhlIHVub2NjdXBpZWQgcGFydCBvZiB0aGUgbW91bnRhaW4gYW5kIHRyeSBlaXRoZXIgdG8gc3RlYWwgYSBwb3NpdGlvbiBieSBlbHVkaW5nIHRoZSBlbmVteSdzIG9ic2VydmF0aW9uIG9yIHRvIHNlaXplIGl0IGJ5IGdldHRpbmcgYWhlYWQgb2YgdGhlbSwgaW4gd2hhdGV2ZXIgd2F5IHdlIGNhbiwgcmF0aGVyIHRoYW4gdG8gZmlnaHQgYWdhaW5zdCBzdHJvbmcgcGxhY2VzIGFuZCBtZW4gcHJlcGFyZWQuCjwvdHJhbnNsYXRpb24+"
translation['4.6.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgaXMgZmFyIGVhc2llciB0byBtYXJjaCB1cGhpbGwgd2l0aG91dCBmaWdodGluZyB0aGFuIG92ZXIgbGV2ZWwgZ3JvdW5kIHdpdGggZW5lbWllcyBvbiB0aGlzIHNpZGUgYW5kIHRoYXQ7IG9uZSBjYW4gc2VlIHdoYXQgaXMgaW4gZnJvbnQgb2YgaGltIG1vcmUgZWFzaWx5IGJ5IG5pZ2h0IGlmIGhlIGlzIG5vdCBmaWdodGluZyB0aGFuIGJ5IGRheSBpZiBoZSBpcyBmaWdodGluZzsgYW5kIHRoZSByb3VnaCByb2FkIGlzIG1vcmUgY29tZm9ydGFibGUgdG8gbWVuIHdobyBhcmUgZ29pbmcgb3ZlciBpdCB3aXRob3V0IGZpZ2h0aW5nIHRoYW4gdGhlIHNtb290aCByb2FkIHRvIG1lbiB3aG8gYXJlIGJlaW5nIHBlbHRlZCBvbiB0aGUgaGVhZC4KPC90cmFuc2xhdGlvbj4="
translation['4.6.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYXMgZm9yIHN0ZWFsaW5nIGEgcG9zaXRpb24sIHRoYXQgZG9lcyBub3Qgc2VlbSB0byBtZSBpbXBvc3NpYmxlLCBmb3Igd2UgY2FuIGdvIGR1cmluZyB0aGUgbmlnaHQgc28gYXMgbm90IHRvIGJlIHNlZW4sIGFuZCB3ZSBjYW4gZ2V0IGZhciBlbm91Z2ggYXdheSBmcm9tIHRoZSBlbmVteSBzbyBhcyBub3QgdG8gYmUgaGVhcmQuIEkgZG8gdGhpbmssIGhvd2V2ZXIsIHRoYXQgaWYgd2Ugc2hvdWxkIG1ha2UgYSBmZWludCBvZiBhdHRhY2tpbmcgaGVyZSwgd2Ugc2hvdWxkIGZpbmQgdGhlIHJlc3Qgb2YgdGhlIG1vdW50YWluIGFsbCB0aGUgbW9yZSBkZXNlcnRlZCwgZm9yIHRoZSBlbmVteSB3b3VsZCBiZSBtb3JlIGxpa2VseSB0byByZW1haW4gaW4gYSBib2R5IHdoZXJlIHRoZXkgYXJlLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2h5IHNob3VsZCBJIGJlIHRoZSBtYW4gdG8gbWFrZSBzdWdnZXN0aW9ucyBhYm91dCBzdGVhbGluZz8gRm9yLCBhcyBJIGhlYXIsIENoZWlyaXNvcGh1cywgeW91IExhY2VkYWVtb25pYW5zLCBhdCBsZWFzdCB0aG9zZSBhbW9uZyB5b3Ugd2hvIGJlbG9uZyB0byB0aGUgcGVlcnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBEb3JpYW4gYXJpc3RvY3JhY3kgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+Ljwvbm90ZT4gcHJhY3Rpc2Ugc3RlYWxpbmcgZXZlbiBmcm9tIGNoaWxkaG9vZCwgYW5kIGNvdW50IGl0IG5vdCBkaXNncmFjZWZ1bCBidXQgaG9ub3VyYWJsZSB0byBzdGVhbCBhbnl0aGluZyB0aGF0IHRoZSBsYXcgZG9lcyBub3QgcHJldmVudCB5b3UgZnJvbSB0YWtpbmcuCjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPi48L3RyYW5zbGF0aW9uPg=="
translation['4.6.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaW4gb3JkZXIgdGhhdCB5b3UgbWF5IHN0ZWFsIHdpdGggYWxsIHBvc3NpYmxlIHNraWxsIGFuZCBtYXkgdHJ5IG5vdCB0byBiZSBjYXVnaHQgYXQgaXQsIGl0IGlzIHRoZSBsYXcgb2YgeW91ciBsYW5kIHRoYXQsIGlmIHlvdSBhcmUgY2F1Z2h0IHN0ZWFsaW5nLCB5b3UgYXJlIGZsb2dnZWQuIE5vdywgdGhlcmVmb3JlLCBpcyBqdXN0IHRoZSB0aW1lIGZvciB5b3UgdG8gZGlzcGxheSB5b3VyIHRyYWluaW5nLCBhbmQgdG8gdGFrZSBjYXJlIHRoYXQgd2UgZG8gbm90IGdldCBjYXVnaHQgc3RlYWxpbmcgYW55IG9mIHRoZSBtb3VudGFpbiwgc28gdGhhdCB3ZSBzaGFsbCBub3QgZ2V0IGEgYmVhdGluZy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['4.6.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCwgZm9yIGFsbCB0aGF0LOKAnSBzYWlkIENoZWlyaXNvcGh1cywg4oCcSSBoZWFyIG9uIG15IHNpZGUgdGhhdCB5b3UgQXRoZW5pYW5zIGFyZSB0ZXJyaWJseSBjbGV2ZXIgYXQgc3RlYWxpbmcgdGhlIHB1YmxpYyBmdW5kcywgZXZlbiB0aG91Z2ggaXQgaXMgdGVycmlibHkgZGFuZ2Vyb3VzIGZvciB0aGUgc3RlYWxlciwgYW5kLCBpbiBmYWN0LCB0aGF0IHlvdXIgYmVzdCBwZW9wbGUgZG8gaXQgbW9zdCwgYXQgbGVhc3QgaWYgdGhleSByZWFsbHkgYXJlIHlvdXIgYmVzdCB3aG8gYXJlIGRlZW1lZCB3b3J0aHkgdG8gcnVsZTsgaGVuY2UgaXQgaXMgdGltZSBmb3IgeW91IGFsc28gdG8gYmUgZGlzcGxheWluZyB5b3VyIHRyYWluaW5nLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz7igJxXZWxsLOKAnSBzYWlkIFhlbm9waG9uLCDigJxJIGFtIHJlYWR5IHRvIHNldCBvdXQgd2l0aCB0aGUgcmVhcmd1YXJkLCBhcyBzb29uIGFzIHdlIGhhdmUgZGluZWQsIHRvIHNlaXplIHBvc3Nlc3Npb24gb2YgdGhlIG1vdW50YWluLiBBbmQgSSBoYXZlIGd1aWRlcywgdG9vOyBmb3IgdGhlIGxpZ2h0IHRyb29wcyBzZXQgYW4gYW1idXNoIGFuZCBjYXB0dXJlZCBzb21lIG9mIHRoZSBzdGVhbGluZyByYXNjYWxzIHdobyBhcmUgZm9sbG93aW5nIHVzLiBGcm9tIHRoZXNlIGZlbGxvd3MgSSBhbHNvIGxlYXJuIHRoYXQgdGhlIG1vdW50YWluIGlzIG5vdCBpbXBhc3NhYmxlLCBidXQgaXMgcGFzdHVyZWQgd2l0aCBnb2F0cyBhbmQgY2F0dGxlOyB0aGVyZWZvcmUgaWYgd2Ugb25jZSBnZXQgcG9zc2Vzc2lvbiBvZiBhbnkgcGFydCBvZiB0aGUgbW91bnRhaW4sIG91ciBwYWNrIGFuaW1hbHMgYWxzbyB3aWxsIGZpbmQgaXQgcGFzc2FibGUuCjwvdHJhbnNsYXRpb24+"
translation['4.6.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgSSBob3BlIHRoYXQgdGhlIGVuZW15IHdpbGwgcmVtb3ZlIHRoZW1zZWx2ZXMgZnJvbSBvdXIgd2F5IGFzIHNvb24gYXMgdGhleSBzZWUgdXMgb24gYSBsZXZlbCB3aXRoIHRoZW0gdXBvbiB0aGUgaGVpZ2h0czsgZm9yIHRoZXkgYXJlIG5vdCB3aWxsaW5nIG5vdyB0byBjb21lIGRvd24gYW5kIG1lZXQgdXMgb24gb3VyIGxldmVsLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIENoZWlyaXNvcGh1cyBzYWlkOiDigJxCdXQgd2h5IHNob3VsZCB5b3UgYmUgdGhlIG9uZSB0byBnbywgYW5kIGxlYXZlIHlvdXIgcG9zdCB3aXRoIHRoZSByZWFyZ3VhcmQ/IFNlbmQgb3RoZXJzIHJhdGhlciwgdW5sZXNzIHNvbWUgZ29vZCBtZW4gb2ZmZXIgdGhlbXNlbHZlcyBhcyB2b2x1bnRlZXJzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGF0LCBBcmlzdG9ueW11cyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1ldGh5ZHJpdW0iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1ldGh5ZHJpdW0iPk1ldGh5ZHJpdW08L3BsYWNlTmFtZT4sIGNvbW1hbmRpbmcgaG9wbGl0ZXMsIGNhbWUgZm9yd2FyZCwgYW5kIEFyaXN0ZWFzIHRoZSBDaGlhbiB3aXRoIGxpZ2h0IHRyb29wcywgYW5kIE5pY29tYWNodXMgdGhlIE9ldGFlYW4gd2l0aCBsaWdodCB0cm9vcHM7IGFuZCB0aGV5IG1hZGUgYW4gYWdyZWVtZW50IHRoYXQgYXMgc29vbiBhcyB0aGV5IHdlcmUgaW4gcG9zc2Vzc2lvbiBvZiB0aGUgaGVpZ2h0cywgdGhleSB3b3VsZCBraW5kbGUgYSBudW1iZXIgb2YgZmlyZXMuCjwvdHJhbnNsYXRpb24+"
translation['4.6.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIGFncmVlbWVudCBjb25jbHVkZWQsIHRoZXkgcHJvY2VlZGVkIHRvIHRha2UgYnJlYWtmYXN0OyBhbmQgaW1tZWRpYXRlbHkgYWZ0ZXIgYnJlYWtmYXN0IENoZWlyaXNvcGh1cyBsZWQgdGhlIHdob2xlIGFybXkgZm9yd2FyZCBhYm91dCB0ZW4gc3RhZGlhIHRvd2FyZCB0aGUgZW5lbXksIGluIG9yZGVyIHRvIG1ha2UgdGhlbSBxdWl0ZSBjZXJ0YWluIHRoYXQgaGUgd2FzIGdvaW5nIHRvIGFkdmFuY2UgdXBvbiB0aGVtIGJ5IHRoaXMgcm9hZC4KPC90cmFuc2xhdGlvbj4="
translation['4.6.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhleSBoYWQgaGFkIGRpbm5lciBhbmQgbmlnaHQgaGFkIGNvbWUgb24sIHRoZSBtZW4gYXBwb2ludGVkIHRvIHRoZSB0YXNrIHNldCBmb3J3YXJkIGFuZCBnYWluZWQgcG9zc2Vzc2lvbiBvZiB0aGUgbW91bnRhaW4sIHdoaWxlIHRoZSByZW1haW5kZXIgb2YgdGhlIHRyb29wcyByZXN0ZWQgd2hlcmUgdGhleSB3ZXJlLiBBbmQgd2hlbiB0aGUgZW5lbXkgcGVyY2VpdmVkIHRoYXQgdGhlIG1vdW50YWluIHdhcyBvY2N1cGllZCwgdGhleSBzdGFpZCBhd2FrZSBhbmQga2VwdCBtYW55IGZpcmVzIGJ1cm5pbmcgdGhyb3VnaCB0aGUgbmlnaHQuCjwvdHJhbnNsYXRpb24+"
translation['4.6.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIGRheSBjYW1lIENoZWlyaXNvcGh1cyBvZmZlcmVkIHNhY3JpZmljZSBhbmQgbGVkIHRoZSBhcm15IGZvcndhcmQgYWxvbmcgdGhlIHJvYWQsIHdoaWxlIHRoZSBwYXJ0eSB0aGF0IGhhZCBzZWl6ZWQgdGhlIG1vdW50YWluLCBhZHZhbmNlZCBhbG9uZyB0aGUgaGVpZ2h0cy4KPC90cmFuc2xhdGlvbj4="
translation['4.6.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIGVuZW15LCB0aGUgbWFqb3JpdHkgcmVtYWluZWQgYXQgdGhlIHBhc3Mgb3ZlciB0aGUgbW91bnRhaW4sIGJ1dCBhIHBhcnQgb2YgdGhlbSB3ZW50IHRvIG1lZXQgdGhlIGRldGFjaG1lbnQgb24gdGhlIGhlaWdodHMuIE5vdyBiZWZvcmUgdGhlIHR3byBtYWluIGJvZGllcyBnb3QgbmVhciBvbmUgYW5vdGhlciwgdGhvc2UgdXBvbiB0aGUgaGVpZ2h0cyBjYW1lIHRvIGNsb3NlIGNvbWJhdCwgYW5kIHRoZSBHcmVla3Mgd2VyZSB2aWN0b3Jpb3VzIGFuZCBiZWdhbiB0aGVpciBwdXJzdWl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgdGhlIG1haW4gYm9keSBvZiB0aGUgR3JlZWtzIHdhcyBtb3ZpbmcgdXB3YXJkIGZyb20gdGhlIHBsYWluLCB0aGUgcGVsdGFzdHMgY2hhcmdpbmcgYXQgYSBydW4gdXBvbiB0aGUgZW5lbXkncyBiYXR0bGVsaW5lIGFuZCBDaGVpcmlzb3BodXMgZm9sbG93aW5nIGF0IGEgcXVpY2stc3RlcCB3aXRoIHRoZSBob3BsaXRlcy4KPC90cmFuc2xhdGlvbj4="
translation['4.6.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIGVuZW15IG9uIHRoZSByb2FkIG5vIHNvb25lciBzYXcgdGhlaXIgZGV0YWNobWVudCBvbiB0aGUgaGVpZ2h0cyBiZWluZyBkZWZlYXRlZCB0aGFuIHRoZXkgdG9vayB0byBmbGlnaHQ7IGFuZCB3aGlsZSBub3QgbWFueSBvZiB0aGVtIHdlcmUga2lsbGVkLCBhIGdyZWF0IG51bWJlciBvZiB3aWNrZXIgc2hpZWxkcyB3ZXJlIGNhcHR1cmVkLCB3aGljaCB0aGUgR3JlZWtzIHJlbmRlcmVkIHVzZWxlc3MgYnkgc2xhc2hpbmcgdGhlbSB3aXRoIHRoZWlyIHNhYnJlcy4KPC90cmFuc2xhdGlvbj4="
translation['4.6.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgaGFkIGNsaW1iZWQgdG8gdGhlIHRvcCBvZiB0aGUgcGFzcywgYWZ0ZXIgb2ZmZXJpbmcgc2FjcmlmaWNlIGFuZCBzZXR0aW5nIHVwIGEgdHJvcGh5IHRoZXkgZGVzY2VuZGVkIGludG8gdGhlIHBsYWluIG9uIHRoZSBmYXJ0aGVyIHNpZGUsIGFuZCByZWFjaGVkIHZpbGxhZ2VzIGZ1bGwgb2YgbWFueSBnb29kIHRoaW5ncy4KPC90cmFuc2xhdGlvbj4="
translation['4.7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZXkgbWFyY2hlZCBpbnRvIHRoZSBjb3VudHJ5IG9mIHRoZSBUYW9jaGlhbnMgZml2ZSBzdGFnZXMsIHRoaXJ0eSBwYXJhc2FuZ3M7IGFuZCB0aGVpciBwcm92aXNpb25zIHdlcmUgcnVubmluZyBsb3csIGZvciB0aGUgVGFvY2hpYW5zIGR3ZWx0IGluIHN0cm9uZ2hvbGRzLCBhbmQgaW4gdGhlc2Ugc3Ryb25naG9sZHMgdGhleSBrZXB0IGFsbCB0aGVpciBwcm92aXNpb25zIHN0b3JlZCBhd2F5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGVuIHRoZSBHcmVla3MgYXJyaXZlZCBhdCBvbmUgb2YgdGhlbSB3aGljaCBjb250YWluZWQgbm8gdG93biBub3IgaG91c2VzLCBidXQgd2FzIG9ubHkgYSBwbGFjZSB3aGVyZSBtZW4gYW5kIHdvbWVuIGFuZCBhIGdyZWF0IG51bWJlciBvZiBjYXR0bGUgd2VyZSBnYXRoZXJlZCwgQ2hlaXJpc29waHVzIHByb2NlZWRlZCB0byBhdHRhY2sgdGhpcyBzdHJvbmdob2xkIGFzIHNvb24gYXMgaGUgcmVhY2hlZCBpdDsgYW5kIHdoZW4gaGlzIGZpcnN0IGJhdHRhbGlvbiBncmV3IHdlYXJ5LCBhbm90aGVyIGFkdmFuY2VkIHRvIHRoZSBhdHRhY2ssIGFuZCB5ZXQgYW5vdGhlcjsgZm9yIGl0IHdhcyBub3QgcG9zc2libGUgZm9yIHRoZW0gdG8gc3Vycm91bmQgdGhlIHBsYWNlIGluIGNvbnRpbnVvdXMgbGluZSwgYmVjYXVzZSBpdHMgc2lkZXMgd2VyZSBwcmVjaXBpdG91cy4KPC90cmFuc2xhdGlvbj4="
translation['4.7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgbW9tZW50IFhlbm9waG9uIGNhbWUgdXAgd2l0aCB0aGUgcmVhcmd1YXJkLCBjb25zaXN0aW5nIG9mIGJvdGggcGVsdGFzdHMgYW5kIGhvcGxpdGVzLCBDaGVpcmlzb3BodXMgc2FpZCB0byBoaW06IOKAnFlvdSBoYXZlIGNvbWUgaW4gdGhlIG5pY2sgb2YgdGltZTsgZm9yIHRoZSBwbGFjZSBtdXN0IGJlIGNhcHR1cmVkOyBmb3IgdGhlIGFybXkgaGFzIG5vIHByb3Zpc2lvbnMgdW5sZXNzIHdlIGNhcHR1cmUgdGhpcyBwbGFjZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['4.7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gdGhleSB0b29rIGNvdW5zZWwgdG9nZXRoZXIsIGFuZCB3aGVuIFhlbm9waG9uIGFza2VkIHdoYXQgaXQgd2FzIHRoYXQgcHJldmVudGVkIHRoZWlyIGVmZmVjdGluZyBhbiBlbnRyYW5jZSwgQ2hlaXJpc29waHVzIHJlcGxpZWQ6IOKAnFRoZXJlIGlzIHRoaXMgb25lIHdheSBvZiBhcHByb2FjaCB3aGljaCB5b3Ugc2VlLCBidXQgd2hlbiBvbmUgdHJpZXMgdG8gZ28gYWxvbmcgYnkgdGhpcyB3YXksIHRoZXkgcm9sbCBkb3duIHN0b25lcyBmcm9tIHRoaXMgb3Zlcmhhbmdpbmcgcm9jazsgYW5kIHdob2V2ZXIgZ2V0cyBjYXVnaHQsIGlzIHNlcnZlZCBpbiB0aGlzIGZhc2hpb27igJ3igJRhbmQgd2l0aCB0aGUgd29yZHMgaGUgcG9pbnRlZCBvdXQgbWVuIHdpdGggdGhlaXIgbGVncyBhbmQgcmlicyBjcnVzaGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPuKAnEJ1dCBzdXBwb3NlIHRoZXkgdXNlIHVwIHRoZWlyIHN0b25lcyzigJ0gc2FpZCBYZW5vcGhvbiwg4oCcdGhlcmUgaXMgbm90aGluZyB0aGVuLCBpcyB0aGVyZSwgdG8gaGluZGVyIG9uZSdzIHBhc3Npbmc/IEZvciBzdXJlbHkgdGhlcmUgaXMgbm90aGluZyB3ZSBjYW4gc2VlIG9uIHRoZSBvdGhlciBzaWRlIGV4Y2VwdCBhIGZldyBtZW4geW9uZGVyLCBhbmQgb25seSB0d28gb3IgdGhyZWUgb2YgdGhlbSBhcmUgYXJtZWQuCjwvdHJhbnNsYXRpb24+"
translation['4.7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkZ1cnRoZXJtb3JlLCBhcyB5b3UgY2FuIHNlZSBmb3IgeW91cnNlbGYsIHRoZSBkaXN0YW5jZSB3ZSBtdXN0IHRyYXZlcnNlIHVuZGVyIGF0dGFjayBpcyBhYm91dCBhIHBsZXRocnVtIGFuZCBhIGhhbGYuIE5vdyBhcyBtdWNoIGFzIGEgcGxldGhydW0gb2YgdGhhdCBkaXN0YW5jZSBpcyBjb3ZlcmVkIHdpdGggdGFsbCwgc2NhdHRlcmVkIHBpbmUgdHJlZXMsIGFuZCBpZiBtZW4gc2hvdWxkIHN0YW5kIGJlaGluZCB0aGVtLCB3aGF0IGhhcm0gY291bGQgdGhleSBzdWZmZXIgZWl0aGVyIGZyb20gdGhlIGZseWluZyBzdG9uZXMgb3IgdGhlIHJvbGxpbmcgb25lcz8gVGhlIHJlbWFpbmluZyBzcGFjZSwgdGhlbiwgYW1vdW50cyB0byBhYm91dCBoYWxmIGEgcGxldGhydW0sIGFuZCB0aGF0IHdlIG11c3QgY3Jvc3Mgb24gdGhlIHJ1biBhdCBhIG1vbWVudCB3aGVuIHRoZSBzdG9uZXMgc3RvcCBjb21pbmcu4oCdCjwvdHJhbnNsYXRpb24+"
translation['4.7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPuKAnEJ1dCzigJ0gc2FpZCBDaGVpcmlzb3BodXMsIOKAnHRoZSB2ZXJ5IG1vbWVudCB3ZSBiZWdpbiB0byBwdXNoIG91dCB0b3dhcmQgdGhlIHRyZWVzLCB0aGUgc3RvbmVzIGZseSBpbiBxdWFudGl0aWVzLuKAnSDigJxQcmVjaXNlbHkgdGhlIHRoaW5nIHdlIHdhbnQs4oCdIHNhaWQgWGVub3Bob24sIOKAnGZvciB0aGV5IHdpbGwgdXNlIHVwIHRoZWlyIHN0b25lcyB0aGUgc29vbmVyLiBCdXQgbGV0IHVzIG1ha2Ugb3VyIHdheSB0byBhIHNwb3QgZnJvbSB3aGljaCB3ZSBzaGFsbCBoYXZlIG9ubHkgYSBzaG9ydCBkaXN0YW5jZSB0byBydW4gYWNyb3NzLCBpbiBjYXNlIHdlIGNhbiBkbyB0aGF0LCBhbmQgYW4gZWFzeSByZXRyZWF0LCBpbiBjYXNlIHdlIGNob29zZSB0byBjb21lIGJhY2su4oCdCjwvdHJhbnNsYXRpb24+"
translation['4.7.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZXVwb24gQ2hlaXJpc29waHVzIGFuZCBYZW5vcGhvbiBzZXQgZm9ydGgsIGFuZCB3aXRoIHRoZW0gQ2FsbGltYWNodXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTcwODAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNzA4MCI+UGFycmhhc2lhPC9wbGFjZU5hbWU+LCBhIGNhcHRhaW47IGZvciBoZSB3YXMgdGhlIG9mZmljZXIgb2YgdGhlIGRheSBpbiBjb21tYW5kIG9mIHRoZSBjYXB0YWlucyBvZiB0aGUgcmVhcmd1YXJkOyBhbmQgdGhlIG90aGVyIGNhcHRhaW5zIHJlbWFpbmVkIGluIGEgcGxhY2Ugb2Ygc2FmZXR5LiBGb2xsb3dpbmcgdGhpcyBsZWFkIGFib3V0IHNldmVudHkgbWVuIGdvdCBvdXQgdW5kZXIgc2hlbHRlciBvZiB0aGUgdHJlZXMsIG5vdCBhbGwgdG9nZXRoZXIsIGJ1dCBvbmUgYnkgb25lLCBlYWNoIHByb3RlY3RpbmcgaGltc2VsZiBhcyBiZXN0IGhlIGNvdWxkLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.7.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBBZ2FzaWFzIG9mIFN0eW1waGFsdXMgYW5kIEFyaXN0b255bXVzIG9mIE1ldGh5ZHJpdW0sIHdobyB3ZXJlIGxpa2V3aXNlIGNhcHRhaW5zIG9mIHRoZSByZWFyZ3VhcmQsIGFuZCBvdGhlcnMgYWxzbywgdG9vayBwbGFjZXMgb3V0c2lkZSB0aGUgY292ZXIgb2YgdGhlIHRyZWVzLCBmb3Igbm90IG1vcmUgdGhhbiB0aGUgb25lIGNvbXBhbnk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+dml6LiBDYWxsaW1hY2h1cycgY29tcGFueS48L25vdGU+IGNvdWxkIHN0YW5kIGFtb25nIHRoZW0gd2l0aCBzYWZldHkuCjwvdHJhbnNsYXRpb24+"
translation['4.7.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGF0IG1vbWVudCBDYWxsaW1hY2h1cyBoaXQgdXBvbiBhIHNjaGVtZTogaGUgd291bGQgcnVuIGZvcndhcmQgdHdvIG9yIHRocmVlIHN0ZXBzIGZyb20gdGhlIHBhcnRpY3VsYXIgdHJlZSBoZSB3YXMgdW5kZXIgYW5kLCB3aGVuIHRoZSBzdG9uZXMgYmVnYW4gdG8gZmx5LCB3b3VsZCBkcmF3IGJhY2sgd2l0aG91dCBhbnkgdHJvdWJsZTsgYW5kIGF0IGV2ZXJ5IG9uZSBvZiBoaXMgZGFzaGVzIG1vcmUgdGhhbiB0ZW4gY2FydC1sb2FkcyBvZiBzdG9uZXMgd291bGQgYmUgdXNlZCB1cC4KPC90cmFuc2xhdGlvbj4="
translation['4.7.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBBZ2FzaWFzIHNhdyB3aGF0IENhbGxpbWFjaHVzIHdhcyBkb2luZywgd2l0aCB0aGUgd2hvbGUgYXJteSBmb3Igc3BlY3RhdG9ycywgaGUgYmVjYW1lIGZlYXJmdWwgdGhhdCB0aGUgb3RoZXIgd291bGQgYmUgdGhlIGZpcnN0IHRvIG1ha2UgdGhlIHJ1biBhY3Jvc3MgdG8gdGhlIHN0cm9uZ2hvbGQ7IHNvIHdpdGhvdXQgYXNraW5nIEFyaXN0b255bXVzIG9yIEV1cnlsb2NodXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxMdXNpIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxMdXNpIj5MdXNpPC9wbGFjZU5hbWU+ICh0aG91Z2ggdGhlIGZvcm1lciB3YXMgY2xvc2UgYnkgYW5kIGJvdGggd2VyZSBoaXMgZnJpZW5kcykgb3IgYW55IG9uZSBlbHNlIHRvIGpvaW4gaGltLCBoZSBkYXNoZWQgZm9yd2FyZCBoaW1zZWxmIGFuZCBwcm9jZWVkZWQgdG8gZ28gcGFzdCBldmVyeWJvZHkuCjwvdHJhbnNsYXRpb24+"
translation['4.7.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5DYWxsaW1hY2h1cywgaG93ZXZlciwgd2hlbiBoZSBzYXcgaGltIGdvaW5nIGJ5LCBzZWl6ZWQgdGhlIHJpbSBvZiBoaXMgc2hpZWxkOyBhbmQgYXQgdGhhdCBtb21lbnQgQXJpc3RvbnltdXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNZXRoeWRyaXVtIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNZXRoeWRyaXVtIj5NZXRoeWRyaXVtPC9wbGFjZU5hbWU+IHJhbiBwYXN0IGJvdGggb2YgdGhlbSwgYW5kIHVwb24gaGlzIGhlZWxzIEV1cnlsb2NodXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxMdXNpIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxMdXNpIj5MdXNpPC9wbGFjZU5hbWU+LiBGb3IgYWxsIHRoZXNlIGZvdXIgd2VyZSByaXZhbHMgaW4gdmFsb3VyIGFuZCBjb250aW51YWxseSBzdHJpdmluZyB3aXRoIG9uZSBhbm90aGVyOyBhbmQgaW4gdGh1cyBjb250ZW5kaW5nIHRoZXkgY2FwdHVyZWQgdGhlIHN0cm9uZ2hvbGQsIGZvciBvbmNlIHRoZXkgaGFkIHJ1c2hlZCBpbiBub3QgYSBzdG9uZSBjYW1lIGRvd24gZnJvbSBhYm92ZS4KPC90cmFuc2xhdGlvbj4="
translation['4.7.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBjYW1lIGEgZHJlYWRmdWwgc3BlY3RhY2xlOiB0aGUgd29tZW4gdGhyZXcgdGhlaXIgbGl0dGxlIGNoaWxkcmVuIGRvd24gZnJvbSB0aGUgcm9ja3MgYW5kIHRoZW4gdGhyZXcgdGhlbXNlbHZlcyBkb3duIGFmdGVyIHRoZW0sIGFuZCB0aGUgbWVuIGRpZCBsaWtld2lzZS4gSW4gdGhlIG1pZHN0IG9mIHRoaXMgc2NlbmUgQWVuZWFzIG9mIFN0eW1waGFsdXMsIGEgY2FwdGFpbiwgY2F0Y2hpbmcgc2lnaHQgb2YgYSBtYW4sIHdobyB3YXMgd2VhcmluZyBhIGZpbmUgcm9iZSwgcnVubmluZyB0byBjYXN0IGhpbXNlbGYgZG93biwgc2VpemVkIGhvbGQgb2YgaGltIGluIG9yZGVyIHRvIHN0b3AgaGltOwo8L3RyYW5zbGF0aW9uPg=="
translation['4.7.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5idXQgdGhlIG1hbiBkcmFnZ2VkIEFlbmVhcyBhbG9uZyBhZnRlciBoaW0sIGFuZCBib3RoIHdlbnQgZmx5aW5nIGRvd24gdGhlIGNsaWZmcyBhbmQgd2VyZSBraWxsZWQuIEluIHRoaXMgc3Ryb25naG9sZCBvbmx5IGEgdmVyeSBmZXcgaHVtYW4gYmVpbmdzIHdlcmUgY2FwdHVyZWQsIGJ1dCB0aGV5IHNlY3VyZWQgY2F0dGxlIGFuZCBhc3NlcyBpbiBsYXJnZSBudW1iZXJzIGFuZCBzaGVlcC4KPC90cmFuc2xhdGlvbj4="
translation['4.7.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnJvbSB0aGVyZSB0aGV5IG1hcmNoZWQgdGhyb3VnaCB0aGUgbGFuZCBvZiB0aGUgQ2hhbHliaWFucyBzZXZlbiBzdGFnZXMsIGZpZnR5IHBhcmFzYW5ncy4gVGhlc2Ugd2VyZSB0aGUgbW9zdCB2YWxpYW50IG9mIGFsbCB0aGUgcGVvcGxlcyB0aGV5IHBhc3NlZCB0aHJvdWdoLCBhbmQgd291bGQgY29tZSB0byBoYW5kLXRvLWhhbmQgZW5jb3VudGVyLiBUaGV5IGhhZCBjb3JzZWxldHMgb2YgbGluZW4gcmVhY2hpbmcgZG93biB0byB0aGUgZ3JvaW4sIHdpdGggYSB0aGljayBmcmluZ2Ugb2YgcGxhaXRlZCBjb3JkcyBpbnN0ZWFkIG9mIGZsYXBzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.7.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGhhZCBncmVhdmVzIGFsc28gYW5kIGhlbG1ldHMsIGFuZCBhdCB0aGUgZ2lyZGxlIGEga25pZmUgYWJvdXQgYXMgbG9uZyBhcyBhIExhY29uaWFuIGRhZ2dlciwgd2l0aCB3aGljaCB0aGV5IHdvdWxkIHNsYXVnaHRlciB3aG9tZXZlciB0aGV5IG1pZ2h0IGJlIGFibGUgdG8gdmFucXVpc2g7IHRoZW4gdGhleSB3b3VsZCBjdXQgb2ZmIHRoZWlyIGhlYWRzIGFuZCBjYXJyeSB0aGVtIGFsb25nIG9uIHRoZWlyIG1hcmNoLCBhbmQgdGhleSB3b3VsZCBzaW5nIGFuZCBkYW5jZSB3aGVuZXZlciB0aGV5IHdlcmUgbGlrZWx5IHRvIGJlIHNlZW4gYnkgdGhlIGVuZW15LiBUaGV5IGNhcnJpZWQgYWxzbyBhIHNwZWFyIGFib3V0IGZpdmUgY3ViaXRzIGxvbmcsIHdpdGggYSBwb2ludCBhdCBvbmx5IG9uZSBlbmQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlhlbm9waG9uIGRvdWJ0bGVzcyByZW1hcmtzIHRoaXMgZmFjdCBiZWNhdXNlIHRoZSBHcmVlayBzcGVhciBoYWQgYSBzaGFycCBwb2ludCBhdCB0aGUgYnV0dCwgdG8gc3RpY2sgaW4gdGhlIGdyb3VuZC48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['4.7.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVzZSBwZW9wbGUgd291bGQgc3RheSB3aXRoaW4gdGhlaXIgdG93bnMsIGFuZCB3aGVuIHRoZSBHcmVla3MgaGFkIHBhc3NlZCBieSwgdGhleSB3b3VsZCBmb2xsb3cgdGhlbSwgYWx3YXlzIHJlYWR5IHRvIGZpZ2h0LiBUaGVpciBkd2VsbGluZ3Mgd2VyZSBpbiBzdHJvbmdob2xkcywgYW5kIHRoZXJlaW4gdGhleSBoYWQgc3RvcmVkIGF3YXkgYWxsIHRoZWlyIHByb3Zpc2lvbnM7IGhlbmNlIHRoZSBHcmVla3MgY291bGQgZ2V0IG5vdGhpbmcgaW4gdGhpcyBjb3VudHJ5LCBidXQgdGhleSBzdWJzaXN0ZWQgb24gdGhlIGNhdHRsZSB0aGV5IGhhZCB0YWtlbiBmcm9tIHRoZSBUYW9jaGlhbnMuCjwvdHJhbnNsYXRpb24+"
translation['4.7.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5MZWF2aW5nIHRoaXMgbGFuZCwgdGhlIEdyZWVrcyBhcnJpdmVkIGF0IHRoZSBIYXJwYXN1cyByaXZlciwgd2hpY2ggd2FzIGZvdXIgcGxldGhyYSBpbiB3aWR0aC4gRnJvbSB0aGVyZSB0aGV5IG1hcmNoZWQgdGhyb3VnaCB0aGUgdGVycml0b3J5IG9mIHRoZSBTY3l0aGluaWFucyBmb3VyIHN0YWdlcywgdHdlbnR5IHBhcmFzYW5ncywgb3ZlciBhIGxldmVsIHBsYWluLCBhbmQgdGhleSBhcnJpdmVkIGF0IHNvbWUgdmlsbGFnZXMsIGFuZCB0aGVyZSByZW1haW5lZCBmb3IgdGhyZWUgZGF5cyBhbmQgY29sbGVjdGVkIHByb3Zpc2lvbnMuCjwvdHJhbnNsYXRpb24+"
translation['4.7.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnJvbSB0aGVyZSB0aGV5IGpvdXJuZXllZCBmb3VyIHN0YWdlcywgdHdlbnR5IHBhcmFzYW5ncywgdG8gYSBsYXJnZSBhbmQgcHJvc3Blcm91cyBpbmhhYml0ZWQgY2l0eSB3aGljaCB3YXMgY2FsbGVkIEd5bW5pYXMuIEZyb20gdGhpcyBjaXR5IHRoZSBydWxlciBvZiB0aGUgbGFuZCBzZW50IHRoZSBHcmVla3MgYSBndWlkZSwgaW4gb3JkZXIgdG8gbGVhZCB0aGVtIHRocm91Z2ggdGVycml0b3J5IHRoYXQgd2FzIGhvc3RpbGUgdG8gaGlzIG93bi4KPC90cmFuc2xhdGlvbj4="
translation['4.7.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSBndWlkZSBjYW1lLCBoZSBzYWlkIHRoYXQgaGUgd291bGQgbGVhZCB0aGVtIHdpdGhpbiBmaXZlIGRheXMgdG8gYSBwbGFjZSBmcm9tIHdoaWNoIHRoZXkgY291bGQgc2VlIHRoZSBzZWE7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gdGhlIEV1eGluZS48L25vdGU+IGlmIGhlIGZhaWxlZCB0byBkbyBzbywgaGUgd2FzIHJlYWR5IHRvIGFjY2VwdCBkZWF0aC4gVGh1cyB0YWtpbmcgdGhlIGxlYWQsIGFzIHNvb24gYXMgaGUgaGFkIGJyb3VnaHQgdGhlbSBpbnRvIHRoZSBob3N0aWxlIHRlcnJpdG9yeSwgaGUga2VwdCB1cmdpbmcgdGhlbSB0byBzcHJlYWQgYWJyb2FkIGZpcmUgYW5kIHJ1aW4sIHRoZXJlYnkgbWFraW5nIGl0IGNsZWFyIHRoYXQgaXQgd2FzIHdpdGggdGhpcyBlbmQgaW4gdmlldyB0aGF0IGhlIGhhZCBjb21lLCBhbmQgbm90IG91dCBvZiBnb29kLXdpbGwgdG93YXJkIHRoZSBHcmVla3MuCjwvdHJhbnNsYXRpb24+"
translation['4.7.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgZmlmdGggZGF5IHRoZXkgZGlkIGluIGZhY3QgcmVhY2ggdGhlIG1vdW50YWluOzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgbW91bnRhaW4gd2hpY2ggWGVub3Bob24gc2VlbXMgdG8gdGhpbmsgaGUgaGFzIGFscmVhZHkgbWVudGlvbmVkLCBhcyBoYXZpbmcgYmVlbiByZWZlcnJlZCB0byBieSB0aGUgZ3VpZGUuPC9ub3RlPiBpdHMgbmFtZSB3YXMgVGhlY2hlcy4gTm93IGFzIHNvb24gYXMgdGhlIHZhbmd1YXJkIGdvdCB0byB0aGUgdG9wIG9mIHRoZSBtb3VudGFpbiwgYSBncmVhdCBzaG91dCB3ZW50IHVwLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.7.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBYZW5vcGhvbiBhbmQgdGhlIHJlYXJndWFyZCBoZWFyZCBpdCwgdGhleSBpbWFnaW5lZCB0aGF0IG90aGVyIGVuZW1pZXMgd2VyZSBhdHRhY2tpbmcgaW4gZnJvbnQ7IGZvciBlbmVtaWVzIHdlcmUgZm9sbG93aW5nIGJlaGluZCB0aGVtIGZyb20gdGhlIGRpc3RyaWN0IHRoYXQgd2FzIGluIGZsYW1lcywgYW5kIHRoZSByZWFyZ3VhcmQgaGFkIGtpbGxlZCBzb21lIG9mIHRoZW0gYW5kIGNhcHR1cmVkIG90aGVycyBieSBzZXR0aW5nIGFuIGFtYnVzaCwgYW5kIGhhZCBhbHNvIHRha2VuIGFib3V0IHR3ZW50eSB3aWNrZXIgc2hpZWxkcyBjb3ZlcmVkIHdpdGggcmF3LCBzaGFnZ3kgb3gtaGlkZXMuCjwvdHJhbnNsYXRpb24+"
translation['4.7.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgYXMgdGhlIHNob3V0IGtlcHQgZ2V0dGluZyBsb3VkZXIgYW5kIG5lYXJlciwgYXMgdGhlIHN1Y2Nlc3NpdmUgcmFua3MgdGhhdCBjYW1lIHVwIGFsbCBiZWdhbiB0byBydW4gYXQgZnVsbCBzcGVlZCB0b3dhcmQgdGhlIHJhbmtzIGFoZWFkIHRoYXQgd2VyZSBvbmUgYWZ0ZXIgYW5vdGhlciBqb2luaW5nIGluIHRoZSBzaG91dCwgYW5kIGFzIHRoZSBzaG91dCBrZXB0IGdyb3dpbmcgZmFyIGxvdWRlciBhcyB0aGUgbnVtYmVyIG9mIG1lbiBncmV3IHN0ZWFkaWx5IGdyZWF0ZXIsIGl0IGJlY2FtZSBxdWl0ZSBjbGVhciB0byBYZW5vcGhvbiB0aGF0IGhlcmUgd2FzIHNvbWV0aGluZyBvZiB1bnVzdWFsIGltcG9ydGFuY2U7CjwvdHJhbnNsYXRpb24+"
translation['4.7.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5zbyBoZSBtb3VudGVkIGEgaG9yc2UsIHRvb2sgd2l0aCBoaW0gTHljaXVzIGFuZCB0aGUgY2F2YWxyeSwgYW5kIHB1c2hlZCBhaGVhZCB0byBsZW5kIGFpZDsgYW5kIGluIGEgbW9tZW50IHRoZXkgaGVhcmQgdGhlIHNvbGRpZXJzIHNob3V0aW5nLCDigJxUaGUgU2VhISBUaGUgU2VhIeKAnSBhbmQgcGFzc2luZyB0aGUgd29yZCBhbG9uZy4gVGhlbiBhbGwgdGhlIHRyb29wcyBvZiB0aGUgcmVhcmd1YXJkIGxpa2V3aXNlIGJyb2tlIGludG8gYSBydW4sIGFuZCB0aGUgcGFjayBhbmltYWxzIGJlZ2FuIHJhY2luZyBhaGVhZCBhbmQgdGhlIGhvcnNlcy4KPC90cmFuc2xhdGlvbj4="
translation['4.7.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBhbGwgaGFkIHJlYWNoZWQgdGhlIHN1bW1pdCwgdGhlbiBpbmRlZWQgdGhleSBmZWxsIHRvIGVtYnJhY2luZyBvbmUgYW5vdGhlciwgYW5kIGdlbmVyYWxzIGFuZCBjYXB0YWlucyBhcyB3ZWxsLCB3aXRoIHRlYXJzIGluIHRoZWlyIGV5ZXMuIEFuZCBvbiBhIHN1ZGRlbiwgYXQgdGhlIGJpZGRpbmcgb2Ygc29tZSBvbmUgb3Igb3RoZXIsIHRoZSBzb2xkaWVycyBiZWdhbiB0byBicmluZyBzdG9uZXMgYW5kIHRvIGJ1aWxkIGEgZ3JlYXQgY2Fpcm4uCjwvdHJhbnNsYXRpb24+"
translation['4.7.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZW9uIHRoZXkgcGxhY2VkIGFzIG9mZmVyaW5ncyBhIHF1YW50aXR5IG9mIHJhdyBveC1oaWRlcyBhbmQgd2Fsa2luZy1zdGlja3MgYW5kIHRoZSBjYXB0dXJlZCB3aWNrZXIgc2hpZWxkczsgYW5kIHRoZSBndWlkZSBub3Qgb25seSBjdXQgdGhlc2Ugc2hpZWxkcyB0byBwaWVjZXMgaGltc2VsZiwgYnV0IHVyZ2VkIHRoZSBvdGhlcnMgdG8gZG8gc28uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlN0aWxsIHRyeWluZyB0byBmdWxmaWwgaGlzIHJlYWwgbWlzc2lvbiBvZiBoYXJtaW5nIGhpcyBwZW9wbGUncyBlbmVtaWVzLiBDcC4gMTktMjAgYWJvdmUuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['4.7.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIHRoZSBHcmVla3MgZGlzbWlzc2VkIHRoZSBndWlkZSB3aXRoIGdpZnRzIGZyb20gdGhlIGNvbW1vbiBzdG9ja+KAlGEgaG9yc2UsIGEgc2lsdmVyIGN1cCwgYSBQZXJzaWFuIGRyZXNzLCBhbmQgdGVuIGRhcmljczsgYnV0IHdoYXQgaGUgcGFydGljdWxhcmx5IGFza2VkIHRoZSBtZW4gZm9yIHdhcyB0aGVpciByaW5ncywgYW5kIGhlIGdvdCBhIGNvbnNpZGVyYWJsZSBudW1iZXIgb2YgdGhlbS4gVGhlbiBoZSBzaG93ZWQgdGhlbSBhIHZpbGxhZ2UgdG8gZW5jYW1wIGluIGFuZCB0aGUgcm9hZCB0aGV5IHdlcmUgdG8gZm9sbG93IHRvIHRoZSBjb3VudHJ5IG9mIHRoZSBNYWNyb25pYW5zLCBhbmQsIGFzIHNvb24gYXMgZXZlbmluZyBjYW1lLCB0b29rIGhpcyBkZXBhcnR1cmUuCjwvdHJhbnNsYXRpb24+"
translation['4.8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gcm9tIHRoZXJlIHRoZSBHcmVla3MgbWFyY2hlZCB0aHJvdWdoIHRoZSBjb3VudHJ5IG9mIHRoZSBNYWNyb25pYW5zIHRocmVlIHN0YWdlcywgdGVuIHBhcmFzYW5ncy4gT24gdGhlIGZpcnN0IG9mIHRoZXNlIGRheXMgdGhleSByZWFjaGVkIHRoZSByaXZlciB3aGljaCBzZXBhcmF0ZWQgdGhlIHRlcnJpdG9yeSBvZiB0aGUgTWFjcm9uaWFucyBmcm9tIHRoYXQgb2YgdGhlIFNjeXRoaW5pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIHRoZXkgaGFkIG9uIHRoZSByaWdodCwgYWJvdmUgdGhlbSwgYW4gZXhjZWVkaW5nbHkgZGlmZmljdWx0IGJpdCBvZiBncm91bmQsIGFuZCBvbiB0aGUgbGVmdCBhbm90aGVyIHJpdmVyLCBpbnRvIHdoaWNoIHRoZSBib3VuZGFyeSBzdHJlYW0gdGhhdCB0aGV5IGhhZCB0byBjcm9zcyBlbXB0aWVkLiBOb3cgdGhpcyBzdHJlYW0gd2FzIGZyaW5nZWQgd2l0aCB0cmVlcywgbm90IGxhcmdlIG9uZXMsIGJ1dCBvZiB0aGljayBncm93dGgsIGFuZCB3aGVuIHRoZSBHcmVla3MgY2FtZSB1cCwgdGhleSBiZWdhbiBmZWxsaW5nIHRoZW0gaW4gdGhlaXIgaGFzdGUgdG8gZ2V0IG91dCBvZiB0aGUgcGxhY2UgYXMgc3BlZWRpbHkgYXMgcG9zc2libGUuCjwvdHJhbnNsYXRpb24+"
translation['4.8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGUgTWFjcm9uaWFucywgYXJtZWQgd2l0aCB3aWNrZXIgc2hpZWxkcyBhbmQgbGFuY2VzIGFuZCBoYWlyIHR1bmljcywgd2VyZSBkcmF3biB1cCBpbiBsaW5lIG9mIGJhdHRsZSBvcHBvc2l0ZSB0aGUgcGxhY2Ugd2hlcmUgdGhlIEdyZWVrcyBtdXN0IGNyb3NzLCBhbmQgdGhleSB3ZXJlIGNoZWVyaW5nIG9uZSBhbm90aGVyIG9uIGFuZCB0aHJvd2luZyBzdG9uZXMsIHdoaWNoIGZlbGwgaW50byB0aGUgc3RyZWFtOyBmb3IgdGhleSBuZXZlciByZWFjaGVkIHRoZSBHcmVla3Mgb3IgZGlkIHRoZW0gYW55IGhhcm0uCjwvdHJhbnNsYXRpb24+"
translation['4.8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BdCB0aGlzIG1vbWVudCBvbmUgb2YgdGhlIHBlbHRhc3RzIGNhbWUgdXAgdG8gWGVub3Bob24sIGEgbWFuIHdobyBzYWlkIHRoYXQgaGUgaGFkIGJlZW4gYSBzbGF2ZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHdpdGggd29yZCB0aGF0IGhlIGtuZXcgdGhlIGxhbmd1YWdlIG9mIHRoZXNlIHBlb3BsZTsg4oCcSSB0aGluayzigJ0gaGUgd2VudCBvbiwg4oCcdGhhdCB0aGlzIGlzIG15IG5hdGl2ZSBjb3VudHJ5LCBhbmQgaWYgdGhlcmUgaXMgbm90aGluZyB0byBoaW5kZXIsIEkgc2hvdWxkIGxpa2UgdG8gaGF2ZSBhIHRhbGsgd2l0aCB0aGVtLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPuKAnFdlbGwsIHRoZXJlIGlzIG5vdGhpbmcgdG8gaGluZGVyLOKAnSBzYWlkIFhlbm9waG9uOyDigJxzbyB0YWxrIHdpdGggdGhlbSwgYW5kIGxlYXJuLCB0byBiZWdpbiB3aXRoLCB3aG8gdGhleSBhcmUu4oCdIEluIHJlcGx5IHRvIGhpcyBpbnF1aXJ5IHRoZXkgc2FpZCwg4oCcTWFjcm9uaWFucy7igJ0g4oCcV2VsbCwgdGhlbizigJ0gc2FpZCBYZW5vcGhvbiwg4oCcYXNrIHRoZW0gd2h5IHRoZXkgYXJlIGFycmF5ZWQgYWdhaW5zdCB1cyBhbmQgd2FudCB0byBiZSBvdXIgZW5lbWllcy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['4.8.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZXkgcmVwbGllZCwg4oCcQmVjYXVzZSB5b3UgYXJlIGNvbWluZyBhZ2FpbnN0IG91ciBsYW5kLuKAnSBUaGUgZ2VuZXJhbHMgZGlyZWN0ZWQgdGhlIG1hbiB0byBzYXksIOKAnFdlIGhhdmUgbm90IGNvbWUgdG8gZG8geW91IGFueSBoYXJtIHdoYXRldmVyLCBidXQgd2UgaGF2ZSBiZWVuIGF0IHdhciB3aXRoIHRoZSBLaW5nIGFuZCBhcmUgb24gb3VyIHdheSBiYWNrIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgYW5kIHdlIHdhbnQgdG8gcmVhY2ggdGhlIHNlYS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['4.8.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBNYWNyb25pYW5zIGFza2VkIHdoZXRoZXIgdGhleSB3b3VsZCBnaXZlIHBsZWRnZXMgdG8gdGhpcyBlZmZlY3QuIFRoZXkgcmVwbGllZCB0aGF0IHRoZXkgd2VyZSByZWFkeSBib3RoIHRvIGdpdmUgYW5kIHRvIHJlY2VpdmUgcGxlZGdlcy4gVGhlcmV1cG9uIHRoZSBNYWNyb25pYW5zIGdhdmUgdGhlIEdyZWVrcyBhIGJhcmJhcmlhbiBsYW5jZSBhbmQgdGhlIEdyZWVrcyBnYXZlIHRoZW0gYSBHcmVlayBsYW5jZSwgZm9yIHRoZSBNYWNyb25pYW5zIHNhaWQgdGhhdCB0aGVzZSB3ZXJlIHBsZWRnZXM7IGFuZCBib3RoIHNpZGVzIGNhbGxlZCB0aGUgZ29kcyB0byB3aXRuZXNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIGV4Y2hhbmdlIG9mIHBsZWRnZXMgdGhlIE1hY3JvbmlhbnMgYXQgb25jZSBiZWdhbiB0byBoZWxwIHRoZSBHcmVla3MgY3V0IGRvd24gdGhlIHRyZWVzIGFuZCB0byBidWlsZCB0aGUgcm9hZCBpbiBvcmRlciB0byBnZXQgdGhlbSBhY3Jvc3MsIG1pbmdsaW5nIGZyZWVseSB3aXRoIHRoZSBHcmVla3M7IGFuZCB0aGV5IHN1cHBsaWVkIGFzIGdvb2QgYSBtYXJrZXQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIG5vdGUgb24gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjIuMTgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS4yLjE4PC9iaWJsPi48L25vdGU+IGFzIHRoZXkgY291bGQsIGFuZCBjb25kdWN0ZWQgdGhlIEdyZWVrcyBvbiB0aGVpciB3YXkgZm9yIHRocmVlIGRheXMsIHVudGlsIHRoZXkgYnJvdWdodCB0aGVtIHRvIHRoZSBib3VuZGFyaWVzIG9mIHRoZSBDb2xjaGlhbnMuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS4yLjE4IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMi4xODwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['4.8.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkF0IHRoaXMgcGxhY2Ugd2FzIGEgZ3JlYXQgbW91bnRhaW4sIGFuZCB1cG9uIHRoaXMgbW91bnRhaW4gdGhlIENvbGNoaWFucyB3ZXJlIGRyYXduIHVwIGluIGxpbmUgb2YgYmF0dGxlLiBBdCBmaXJzdCB0aGUgR3JlZWtzIGZvcm1lZCBhbiBvcHBvc2luZyBsaW5lIG9mIGJhdHRsZSwgd2l0aCB0aGUgaW50ZW50aW9uIG9mIGFkdmFuY2luZyBpbiB0aGlzIHdheSB1cG9uIHRoZSBtb3VudGFpbiwgYnV0IGFmdGVyd2FyZHMgdGhlIGdlbmVyYWxzIGRlY2lkZWQgdG8gZ2F0aGVyIHRvZ2V0aGVyIGFuZCB0YWtlIGNvdW5zZWwgYXMgdG8gaG93IHRoZXkgY291bGQgYmVzdCBtYWtlIHRoZSBjb250ZXN0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+WGVub3Bob24gYWNjb3JkaW5nbHkgc2FpZCB0aGF0IGluIGhpcyBvcGluaW9uIHRoZXkgc2hvdWxkIGdpdmUgdXAgdGhlIGxpbmUgb2YgYmF0dGxlIGFuZCBmb3JtIHRoZSBjb21wYW5pZXMgaW4gY29sdW1uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA0LjYuNiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjYuNjwvYmlibD4sIGFuZCBub3RlLiBPZiBjb3Vyc2UgaXQgaXMgdGhlIG9wcG9zaXRlIG1vdmVtZW50IHRoYXQgaXMgbm93IGluIGNvbnRlbXBsYXRpb24uPC9ub3RlPiDigJxGb3IgdGhlIGxpbmUs4oCdIGhlIGNvbnRpbnVlZCwg4oCcd2lsbCBiZSBicm9rZW4gdXAgYXQgb25jZTsgZm9yIHdlIHNoYWxsIGZpbmQgdGhlIG1vdW50YWluIGhhcmQgdG8gdHJhdmVyc2UgYXQgc29tZSBwb2ludHMgYW5kIGVhc3kgYXQgb3RoZXJzOyBhbmQgdGhlIGltbWVkaWF0ZSByZXN1bHQgd2lsbCBiZSBkaXNjb3VyYWdlbWVudCwgd2hlbiBtZW4gd2hvIGFyZSBmb3JtZWQgaW4gbGluZSBvZiBiYXR0bGUgc2VlIHRoZSBsaW5lIGJyb2tlbiB1cC4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA0LjYuNiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjYuNjwvYmlibD4sIGFuZCBub3RlLiBPZiBjb3Vyc2UgaXQgaXMgdGhlIG9wcG9zaXRlIG1vdmVtZW50IHRoYXQgaXMgbm93IGluIGNvbnRlbXBsYXRpb24uPC90cmFuc2xhdGlvbj4="
translation['4.8.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgaWYgd2UgYWR2YW5jZSB1cG9uIHRoZW0gZm9ybWVkIGluIGEgbGluZSBtYW55IHJhbmtzIGRlZXAsIHRoZSBlbmVteSB3aWxsIG91dGZsYW5rIHVzLCBhbmQgd2lsbCB1c2UgdGhlaXIgb3V0Zmxhbmtpbmcgd2luZyBmb3Igd2hhdGV2ZXIgcHVycG9zZSB0aGV5IHBsZWFzZTsgb24gdGhlIG90aGVyIGhhbmQsIGlmIHdlIGFyZSBmb3JtZWQgaW4gYSBsaW5lIGEgZmV3IHJhbmtzIGRlZXAsIGl0IHdvdWxkIGJlIG5vdGhpbmcgc3VycHJpc2luZyBpZiBvdXIgbGluZSBzaG91bGQgYmUgY3V0IHRocm91Z2ggYnkgYSBtdWx0aXR1ZGUgYm90aCBvZiBtaXNzaWxlcyBhbmQgbWVuIGZhbGxpbmcgdXBvbiB1cyBpbiBhIG1hc3M7IGFuZCBpZiB0aGlzIGhhcHBlbnMgYXQgYW55IHBvaW50LCBpdCB3aWxsIGJlIGJhZCBmb3IgdGhlIHdob2xlIGxpbmUuCjwvdHJhbnNsYXRpb24+"
translation['4.8.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaXQgc2VlbXMgdG8gbWUgd2Ugc2hvdWxkIGZvcm0gdGhlIGNvbXBhbmllcyBpbiBjb2x1bW4gYW5kLCBieSBsZWF2aW5nIHNwYWNlcyBiZXR3ZWVuIHRoZW0sIGNvdmVyIGVub3VnaCBncm91bmQgc28gdGhhdCB0aGUgb3V0ZXJtb3N0IGNvbXBhbmllcyBzaG91bGQgZ2V0IGJleW9uZCB0aGUgZW5lbXkncyB3aW5nczsgaW4gdGhpcyB3YXkgbm90IG9ubHkgc2hhbGwgd2Ugb3V0ZmxhbmsgdGhlIGVuZW15J3MgbGluZSwgYnV0IGFkdmFuY2luZyBpbiBjb2x1bW4gb3VyIGJlc3QgbWVuIHdpbGwgYmUgaW4gdGhlIHZhbiBvZiB0aGUgYXR0YWNrLCBhbmQgd2hlcmV2ZXIgaXQgaXMgZ29vZCBnb2luZywgdGhlcmUgZWFjaCBjYXB0YWluIHdpbGwgbGVhZCBmb3J3YXJkIGhpcyBtZW4uCjwvdHJhbnNsYXRpb24+"
translation['4.8.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaXQgd2lsbCBub3QgYmUgZWFzeSBmb3IgdGhlIGVuZW15IHRvIHB1c2ggaW50byB0aGUgc3BhY2UgYmV0d2VlbiB0aGUgY29sdW1ucyB3aGVuIHRoZXJlIGFyZSBjb21wYW5pZXMgb24gdGhpcyBzaWRlIGFuZCB0aGF0LCBhbmQgbm90IGFueSBlYXNpZXIgZm9yIGhpbSB0byBjdXQgdGhyb3VnaCBhIGNvbXBhbnkgdGhhdCBpcyBhZHZhbmNpbmcgaW4gY29sdW1uLiBBZ2FpbiwgaWYgYW55IG9uZSBvZiB0aGUgY29tcGFuaWVzIGlzIGhhcmQgcHJlc3NlZCwgaXRzIG5laWdoYm91ciB3aWxsIGNvbWUgdG8gaXRzIGFpZDsgYW5kIGlmIG9uZSBzaW5nbGUgY29tcGFueSBjYW4gc29tZWhvdyBjbGltYiB0byB0aGUgc3VtbWl0LCBub3QgYSBtYW4gb2YgdGhlIGVuZW15IHdpbGwgc3RhbmQgYW55IGxvbmdlci7igJ0KPC90cmFuc2xhdGlvbj4="
translation['4.8.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhpcyBwbGFuIHdhcyBkZWNpZGVkIHVwb24sIGFuZCB0aGV5IHByb2NlZWRlZCB0byBmb3JtIHRoZSBjb21wYW5pZXMgaW4gY29sdW1uLiBBbmQgYXMgWGVub3Bob24gd2FzIGdvaW5nIGJhY2sgZnJvbSB0aGUgcmlnaHQgd2luZyB0byB0aGUgbGVmdCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q2hlaXJpc29waHVzIHdhcyBjb21tYW5kZXIgb2YgdGhlIHZhbiwgWGVub3Bob24gb2YgdGhlIHJlYXIuIFRoZSB2YW4gb2YgYW4gYXJteSBvbiB0aGUgbWFyY2ggYmVjYW1lIHRoZSByaWdodCB3aW5nIG9mIHRoZSBsaW5lIG9mIGJhdHRsZSBhbmQgdGhlIHJlYXIgdGhlIGxlZnQgd2luZy4gSXQgd2FzIGF0IENoZWlyaXNvcGh1cycgcG9zdCwgb24gdGhlIHJpZ2h0LCB0aGF0IHRoZSBjb3VuY2lsIHdhcyBoZWxkLjwvbm90ZT4gaGUgc2FpZCB0byB0aGUgdHJvb3BzOiDigJxTb2xkaWVycywgdGhlc2UgbWVuIHlvbmRlciB3aG9tIHlvdSBzZWUgYXJlIHRoZSBvbmx5IG9uZXMgd2hvIHN0aWxsIHN0YW5kIGluIHRoZSB3YXkgb2Ygb3VyIGJlaW5nIGZvcnRod2l0aCBhdCB0aGUgcGxhY2Ugd2UgaGF2ZSBsb25nIGJlZW4gc3RyaXZpbmcgdG8gcmVhY2g7IGlmIHdlIHBvc3NpYmx5IGNhbiwgd2UgbXVzdCBzaW1wbHkgZWF0IHRoZXNlIGZlbGxvd3MgcmF3LuKAnTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIHBocmFzZSBhcyBvbGQgYXMgSG9tZXIgKCAgMzUpLjwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['4.8.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgb2ZmaWNlcnMgaGFkIGdvdCB0byB0aGVpciBzZXZlcmFsIHBvc2l0aW9ucyBhbmQgaGFkIGZvcm1lZCB0aGVpciBjb21wYW5pZXMgaW4gY29sdW1uLCB0aGUgcmVzdWx0IHdhcyBhYm91dCBlaWdodHkgY29tcGFuaWVzIG9mIGhvcGxpdGVzIHdpdGggZWFjaCBjb21wYW55IG51bWJlcmluZyBjbG9zZSB1cG9uIG9uZSBodW5kcmVkOzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIHRvdGFsIG9mIDgwMDAgYXMgY29tcGFyZWQgd2l0aCBhbiBvcmlnaW5hbCBzdHJlbmd0aCBvZiAxMSw3MDAuPC9ub3RlPiB0aGUgcGVsdGFzdHMgYW5kIHRoZSBib3dtZW4sIG9uIHRoZSBvdGhlciBoYW5kLCB0aGV5IGZvcm1lZCBpbiB0aHJlZSBkaXZpc2lvbnMsIG9uZSBiZXlvbmQgdGhlIGxlZnQgd2luZyBvZiB0aGUgaG9wbGl0ZXMsIHRoZSBzZWNvbmQgYmV5b25kIHRoZSByaWdodCwgYW5kIHRoZSB0aGlyZCBpbiB0aGUgY2VudHJlLCBlYWNoIGRpdmlzaW9uIG51bWJlcmluZyBhYm91dCBzaXggaHVuZHJlZCBtZW4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk9uZSB0aG91c2FuZCBlaWdodCBodW5kcmVkIGFzIGNvbXBhcmVkIHdpdGggYW4gb3JpZ2luYWwgMjMwMC48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['4.8.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIHRoZSBnZW5lcmFscyBwYXNzZWQgYWxvbmcgdGhlIG9yZGVyIHRvIG9mZmVyIHByYXllciwgYW5kIHdoZW4gdGhleSBoYWQgcHJheWVkIGFuZCBzdW5nIHRoZSBwYWVhbiB0aGV5IHNldCBmb3J0aC4gTm93IENoZWlyaXNvcGh1cyBhbmQgWGVub3Bob248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+T24gdGhlIHJpZ2h0IGFuZCBsZWZ0IHdpbmdzIHJlc3BlY3RpdmVseS4gU2VlIG5vdGUgb24gMTQgYWJvdmUuPC9ub3RlPiBhbmQgdGhlIHBlbHRhc3RzIHdpdGggdGhlbSBnb3QgYmV5b25kIHRoZSB3aW5ncyBvZiB0aGUgZW5lbXkncyBsaW5lIGluIHRoZWlyIGFkdmFuY2U7CjwvdHJhbnNsYXRpb24+"
translation['4.8.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgd2hlbiB0aGUgZW5lbXkgc2F3IHRoaXMsIHRoZXkgcmFuIG91dCwgc29tZSB0byB0aGUgcmlnaHQgYW5kIG90aGVycyB0byB0aGUgbGVmdCwgdG8gY29uZnJvbnQgdGhlbSwgd2l0aCB0aGUgcmVzdWx0IHRoYXQgdGhlaXIgbGluZSB3YXMgcHVsbGVkIGFwYXJ0IGFuZCBhIGxhcmdlIHBvcnRpb24gb2YgaXQgaW4gdGhlIGNlbnRyZSB3YXMgbGVmdCBkZXNlcnRlZC4KICAgIDwvdHJhbnNsYXRpb24+"
translation['4.8.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZSBwZWx0YXN0cyBvZiB0aGUgQXJjYWRpYW4gZGl2aXNpb24sIHdobyB3ZXJlIGNvbW1hbmRlZCBieSBBZXNjaGluZXMgdGhlIEFjYXJuYW5pYW4sIGdldHRpbmcgdGhlIGlkZWEgdGhhdCB0aGUgZW5lbXkgd2VyZSBpbiBmbGlnaHQsIHNldCB1cCBhIHNob3V0IGFuZCBiZWdhbiB0byBydW47IGFuZCB0aGV5IHdlcmUgdGhlIGZpcnN0IHRvIHJlYWNoIHRoZSBzdW1taXQgb2YgdGhlIG1vdW50YWluLCB3aGlsZSBmb2xsb3dpbmcgY2xvc2UgYWZ0ZXIgdGhlbSBjYW1lIHRoZSBBcmNhZGlhbiBkaXZpc2lvbiBvZiBob3BsaXRlcywgdW5kZXIgdGhlIGNvbW1hbmQgb2YgQ2xlYW5vciBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE9yY2hvbWVub3MsQXJjYWRpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsT3JjaG9tZW5vcyxBcmNhZGlhIj5PcmNob21lbnVzPC9wbGFjZU5hbWU+Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIGVuZW15LCBvbmNlIHRoZSBwZWx0YXN0cyBiZWdhbiB0byBydW4gdGhleSBubyBsb25nZXIgc3Rvb2QgdGhlaXIgZ3JvdW5kLCBidXQgYmV0b29rIHRoZW1zZWx2ZXMgaGl0aGVyIGFuZCB0aGl0aGVyIGluIGZsaWdodC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgYWNjb21wbGlzaGluZyB0aGUgYXNjZW50IHRoZSBHcmVla3MgdG9vayB1cCBxdWFydGVycyBpbiBudW1lcm91cyB2aWxsYWdlcywgd2hpY2ggY29udGFpbmVkIHByb3Zpc2lvbnMgaW4gYWJ1bmRhbmNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgZm9yIHRoZSBtb3N0IHBhcnQgdGhlcmUgd2FzIG5vdGhpbmcgaGVyZSB3aGljaCB0aGV5IHJlYWxseSBmb3VuZCBzdHJhbmdlOyBidXQgdGhlIHN3YXJtcyBvZiBiZWVzIGluIHRoZSBuZWlnaGJvdXJob29kIHdlcmUgbnVtZXJvdXMsIGFuZCB0aGUgc29sZGllcnMgd2hvIGF0ZSBvZiB0aGUgaG9uZXkgYWxsIHdlbnQgb2ZmIHRoZWlyIGhlYWRzLCBhbmQgc3VmZmVyZWQgZnJvbSB2b21pdGluZyBhbmQgZGlhcnJob2VhLCBhbmQgbm90IG9uZSBvZiB0aGVtIGNvdWxkIHN0YW5kIHVwLCBidXQgdGhvc2Ugd2hvIGhhZCBlYXRlbiBhIGxpdHRsZSB3ZXJlIGxpa2UgcGVvcGxlIGV4Y2VlZGluZ2x5IGRydW5rLCB3aGlsZSB0aG9zZSB3aG8gaGFkIGVhdGVuIGEgZ3JlYXQgZGVhbCBzZWVtZWQgbGlrZSBjcmF6eSwgb3IgZXZlbiwgaW4gc29tZSBjYXNlcywgZHlpbmcgbWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGV5IGxheSB0aGVyZSBpbiBncmVhdCBudW1iZXJzIGFzIHRob3VnaCB0aGUgYXJteSBoYWQgc3VmZmVyZWQgYSBkZWZlYXQsIGFuZCBncmVhdCBkZXNwb25kZW5jeSBwcmV2YWlsZWQuIE9uIHRoZSBuZXh0IGRheSwgaG93ZXZlciwgbm8gb25lIGhhZCBkaWVkLCBhbmQgYXQgYXBwcm94aW1hdGVseSB0aGUgc2FtZSBob3VyIGFzIHRoZXkgaGFkIGVhdGVuIHRoZSBob25leSB0aGV5IGJlZ2FuIHRvIGNvbWUgdG8gdGhlaXIgc2Vuc2VzOyBhbmQgb24gdGhlIHRoaXJkIG9yIGZvdXJ0aCBkYXkgdGhleSBnb3QgdXAsIGFzIGlmIGZyb20gYSBkcnVnZ2luZy4KICAgIDwvdHJhbnNsYXRpb24+"
translation['4.8.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnJvbSB0aGVyZSB0aGV5IG1hcmNoZWQgdHdvIHN0YWdlcywgc2V2ZW4gcGFyYXNhbmdzLCBhbmQgcmVhY2hlZCB0aGUgc2VhIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJhcGV6dXMsQXJjYWRpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVHJhcGV6dXMsQXJjYWRpYSI+VHJhcGV6dXM8L3BsYWNlTmFtZT4sIGFuIGluaGFiaXRlZCBHcmVlayBjaXR5IG9uIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjYxOSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2NjE5Ij5FdXhpbmUgU2VhPC9wbGFjZU5hbWU+LCBhIGNvbG9ueSBvZiB0aGUgU2lub3BlYW5zIGluIHRoZSB0ZXJyaXRvcnkgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2NDIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjY0MiI+Q29sY2hpczwvcGxhY2VOYW1lPi4gVGhlcmUgdGhleSByZW1haW5lZCBhYm91dCB0aGlydHkgZGF5cyBpbiB0aGUgdmlsbGFnZXMgb2YgdGhlIENvbGNoaWFucywgYW5kIGZyb20gdGhlc2UgYXMgYSBiYXNlIHBsdW5kZXJlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjY0MiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2NjQyIj5Db2xjaGlzPC9wbGFjZU5hbWU+Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIFRyYXBlenVudGlhbnMgc3VwcGxpZWQgYSBtYXJrZXQgZm9yIHRoZSBhcm15LCByZWNlaXZlZCB0aGUgR3JlZWtzIGtpbmRseSwgYW5kIGdhdmUgdGhlbSBveGVuLCBiYXJsZXktbWVhbCwgYW5kIHdpbmUgYXMgZ2lmdHMgb2YgaG9zcGl0YWxpdHkuCjwvdHJhbnNsYXRpb24+"
translation['4.8.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGxpa2V3aXNlIHRvb2sgcGFydCBpbiBuZWdvdGlhdGlvbnMgd2l0aCB0aGUgR3JlZWtzIGluIGJlaGFsZiBvZiB0aGUgbmVhci1ieSBDb2xjaGlhbnMsIHdobyBkd2VsdCBmb3IgdGhlIG1vc3QgcGFydCBvbiB0aGUgcGxhaW4sIGFuZCBmcm9tIHRoZXNlIHBlb3BsZSBhbHNvIHRoZSBHcmVla3MgcmVjZWl2ZWQgaG9zcGl0YWJsZSBnaWZ0cyBvZiBveGVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyB0aGV5IG1hZGUgcmVhZHkgdGhlIHNhY3JpZmljZSB3aGljaCB0aGV5IGhhZCB2b3dlZDs8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy4yLjkiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy4yLjk8L2JpYmw+Ljwvbm90ZT4gYW5kIGEgc3VmZmljaWVudCBudW1iZXIgb2Ygb3hlbiBoYWQgY29tZSB0byB0aGVtIHNvIHRoYXQgdGhleSBjb3VsZCBwYXkgdGhlaXIgdGhhbmstb2ZmZXJpbmdzIHRvIFpldXMgZm9yIGRlbGl2ZXJhbmNlLCB0byBIZXJhY2xlcyBmb3IgZ3VpZGFuY2UsIGFuZCB0byB0aGUgb3RoZXIgZ29kcyBhY2NvcmRpbmcgYXMgdGhleSBoYWQgdm93ZWQuIFRoZXkgaW5zdGl0dXRlZCBhbHNvIGF0aGxldGljIGdhbWVzIG9uIHRoZSBtb3VudGFpbiBzaWRlLCBqdXN0IHdoZXJlIHRoZXkgd2VyZSBlbmNhbXBlZDsgYW5kIHRoZXkgY2hvc2UgRHJhY29udGl1cywgYSBTcGFydGFuLCB3aG8gaGFkIGJlZW4gZXhpbGVkIGZyb20gaG9tZSBhcyBhIGJveSBiZWNhdXNlIGhlIGhhZCBhY2NpZGVudGFsbHkga2lsbGVkIGFub3RoZXIgYm95IHdpdGggdGhlIHN0cm9rZSBvZiBhIGRhZ2dlciwgdG8gbG9vayBvdXQgZm9yIGEgcmFjZS1jb3Vyc2UgYW5kIHRvIGFjdCBhcyBtYW5hZ2VyIG9mIHRoZSBnYW1lcy4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAzLjIuOSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAzLjIuOTwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['4.8.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBhY2NvcmRpbmdseSwgdGhlIHNhY3JpZmljZSBoYWQgYmVlbiBjb21wbGV0ZWQsIHRoZXkgdHVybmVkIG92ZXIgdGhlIGhpZGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBoaWRlcyBvZiB0aGUgc2FjcmlmaWNpYWwgdmljdGltcywgd2hpY2ggd2VyZSB0byBiZSBvZmZlcmVkIGFzIHByaXplcyBpbiB0aGUgZ2FtZXMuIENwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAxMC4xNTkiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDEwLjE1OTwvYmlibD4uPC9ub3RlPiB0byBEcmFjb250aXVzIGFuZCBiYWRlIGhpbSBsZWFkIHRoZSB3YXkgdG8gdGhlIHBsYWNlIGhlIGhhZCBmaXhlZCB1cG9uIGZvciBoaXMgcmFjZS1jb3Vyc2UuIEhlIHBvaW50ZWQgb3V0IHRoZSBwcmVjaXNlIHNwb3Qgd2hlcmUgdGhleSBjaGFuY2VkIHRvIGJlIHN0YW5kaW5nLCBhbmQgc2FpZCwg4oCcVGhpcyBoaWxsIGlzIHN1cGVyYiBmb3IgcnVubmluZywgd2hlcmV2ZXIgeW91IHBsZWFzZS7igJ0g4oCcSG93LCB0aGVuLOKAnSB0aGV5IHNhaWQsIOKAnGNhbiBtZW4gd3Jlc3RsZSBvbiBncm91bmQgc28gaGFyZCBhbmQgb3Zlcmdyb3duIGFzIHRoaXMgaXM/4oCdIEFuZCBoZSByZXBsaWVkLCDigJxUaGUgb25lIHRoYXQgaXMgdGhyb3duIHdpbGwgZ2V0IGh1cnQgYSBiaXQgbW9yZS7igJ0KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gMTAuMTU5IiB2YWxpZD0ieWVzIj5Ib20uIElsLiAxMC4xNTk8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['4.8.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZXZlbnRzIHdlcmUsIGEgc3RhZGl1bSByYWNlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSByZWd1bGFyIHNob3J0IHJhY2UgaW4gdGhlIEdyZWVrIGdhbWVzLCBjb3JyZXNwb25kaW5nIGNsb3NlbHkgdG8gb3VyIDIyMCB5YXJkcyBkYXNoLjwvbm90ZT4gZm9yIGJveXMsIG1vc3Qgb2YgdGhlbSBiZWxvbmdpbmcgdG8gdGhlIGNhcHRpdmVzLCBhIGxvbmcgcmFjZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs604b25zrvOuc+Hzr/PgjwvZm9yZWlnbj4gc2VlbXMgdG8gaGF2ZSB2YXJpZWQgZnJvbSBzaXggdG8gdHdlbnR5LWZvdXIgc3RhZGlhLjwvbm90ZT4gaW4gd2hpY2ggbW9yZSB0aGFuIHNpeHR5IENyZXRhbnMgdG9vayBwYXJ0LCB3cmVzdGxpbmcsIGJveGluZywgYW5kIHRoZSBwYW5jcmF0aXVtOzxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs604b25zrvOuc+Hzr/PgjwvZm9yZWlnbj4gc2VlbXMgdG8gaGF2ZSB2YXJpZWQgZnJvbSBzaXggdG8gdHdlbnR5LWZvdXIgc3RhZGlhLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIGNvbWJpbmF0aW9uIG9mIGJveGluZyBhbmQgd3Jlc3RsaW5nLjwvbm90ZT4gYW5kIGl0IG1hZGUgYSBmaW5lIHNwZWN0YWNsZTsgZm9yIHRoZXJlIHdlcmUgYSBncmVhdCBtYW55IGVudHJpZXMgYW5kLCBpbmFzbXVjaCBhcyB0aGUgY29tcmFkZXMgb2YgdGhlIGNvbnRlc3RhbnRzIHdlcmUgbG9va2luZyBvbiwgdGhlcmUgd2FzIGEgZ3JlYXQgZGVhbCBvZiByaXZhbHJ5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.1.1'] = "PHRyYW5zbGF0aW9uPjxkaXYxIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNSIgb3JnPSJ1bmlmb3JtIiBzYW1wbGU9ImNvbXBsZXRlIiB0eXBlPSJCb29rIj48cCBjbGFzcz0idHJhbnNsYXRpb24iPgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBNU1MuIGhlcmUgcHJlZml4IHRoZSBmb2xsb3dpbmcgc3VtbWFyeSBvZiB0aGUgcHJlY2VkaW5nIG5hcnJhdGl2ZS48L25vdGU+W1RoZSBwcmVjZWRpbmcgbmFycmF0aXZlIGhhcyBkZXNjcmliZWQgYWxsIHRoYXQgdGhlIEdyZWVrcyBkaWQgb24gdGhlaXIgdXB3YXJkIG1hcmNoIHdpdGggPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBhbmQgb24gdGhlaXIgam91cm5leSB0byB0aGUgc2hvcmUgb2YgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NjE5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY2MTkiPkV1eGluZSBTZWE8L3BsYWNlTmFtZT4sIGhvdyB0aGV5IGFycml2ZWQgYXQgdGhlIEdyZWVrIGNpdHkgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUcmFwZXp1cyxBcmNhZGlhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUcmFwZXp1cyxBcmNhZGlhIj5UcmFwZXp1czwvcGxhY2VOYW1lPiwgYW5kIGhvdyB0aGV5IHBhaWQgdGhlIHRoYW5rb2ZmZXJpbmdzIGZvciBkZWxpdmVyYW5jZSB3aGljaCB0aGV5IGhhZCB2b3dlZCB0byBzYWNyaWZpY2UgYXQgdGhlIHBsYWNlIHdoZXJlIHRoZXkgc2hvdWxkIGZpcnN0IHJlYWNoIGEgZnJpZW5kbHkgbGFuZC5dCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyB0aGV5IGdhdGhlcmVkIHRvZ2V0aGVyIGFuZCBwcm9jZWVkZWQgdG8gdGFrZSBjb3Vuc2VsIGluIHJlZ2FyZCB0byB0aGUgcmVtYWluZGVyIG9mIHRoZWlyIGpvdXJuZXk7IGFuZCB0aGUgZmlyc3QgbWFuIHRvIGdldCB1cCB3YXMgTGVvbiBvZiBUaHVyaWksIHdobyBzcG9rZSBhcyBmb2xsb3dzOiDigJxXZWxsLCBJLCBmb3IgbXkgcGFydCwgZ2VudGxlbWVuLOKAnSBoZSBzYWlkLCDigJxhbSB0aXJlZCBieSB0aGlzIHRpbWUgb2YgcGFja2luZyB1cCBhbmQgd2Fsa2luZyBhbmQgcnVubmluZyBhbmQgY2FycnlpbmcgbXkgYXJtcyBhbmQgYmVpbmcgaW4gbGluZSBhbmQgc3RhbmRpbmcgZ3VhcmQgYW5kIGZpZ2h0aW5nLCBhbmQgd2hhdCBJIGxvbmcgZm9yIG5vdyBpcyB0byBiZSByaWQgb2YgdGhlc2UgdG9pbHMsIHNpbmNlIHdlIGhhdmUgdGhlIHNlYSwgYW5kIHRvIHNhaWwgdGhlIHJlc3Qgb2YgdGhlIHdheSwgYW5kIHNvIHJlYWNoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gc3RyZXRjaGVkIG91dCBvbiBteSBiYWNrLCBsaWtlIE9keXNzZXVzLuKAnTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIE9kLiA1Ljc1IiB2YWxpZD0ieWVzIj5Ib20uIE9kLiA1Ljc1LTExODwvYmlibD4uPC9ub3RlPgo8bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+VXBvbiBoZWFyaW5nIHRoZXNlIHdvcmRzIHRoZSBzb2xkaWVycyBzaG91dGVkIG91dCB0aGF0IGhlIHdhcyBxdWl0ZSByaWdodDsgYW5kIGFub3RoZXIgbWFuIHNhaWQgdGhlIHNhbWUgdGhpbmcsIGFuZCBpbiBmYWN0IGFsbCB3aG8gcm9zZSB0byBzcGVhay4gVGhlbiBDaGVpcmlzb3BodXMgZ290IHVwIGFuZCBzcG9rZSBhcyBmb2xsb3dzOgo8bWlsZXN0b25lIG49IjQiIHVuaXQ9InNlY3Rpb24iIC8+4oCcSSBoYXZlIGEgZnJpZW5kIEFuYXhpYml1cywgZ2VudGxlbWVuLCBhbmQgaGUgaGFwcGVucyBhbHNvIHRvIGJlIEFkbWlyYWwuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Ob3Qg4oCcYW7igJ0gYWRtaXJhbCwgZm9yIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7Ovc6x4b27zrHPgc+Hzr/PgjwvZm9yZWlnbj4gd2FzIHRoZSBkaXN0aW5jdGl2ZSB0aXRsZSBvZiB0aGUgY29tbWFuZGluZyBvZmZpY2VyIG9mIHRoZSBMYWNlZGFlbW9uaWFuIGZsZWV0Ljwvbm90ZT4gU28gaWYgeW91IHdpbGwgc2VuZCBtZSB0byBoaW0sIEkgcHJlc3VtZSBJIGNhbiBicmluZyBiYWNrIHdpdGggbWUgc2hpcHMgb2Ygd2FyIGFuZCBtZXJjaGFudCB2ZXNzZWxzIHRvIGNhcnJ5IHVzOyBmb3IgeW91cnNlbHZlcywgaWYgeW91IHJlYWxseSB3aXNoIHRvIGdvIGJ5IHNlYSwgd2FpdCB1bnRpbCBJIHJldHVybjsgYW5kIEkgc2hhbGwgcmV0dXJuIHNwZWVkaWx5LuKAnSBXaGVuIHRoZXkgaGVhcmQgdGhpcywgdGhlIHNvbGRpZXJzIHdlcmUgZGVsaWdodGVkLCBhbmQgdm90ZWQgdGhhdCBDaGVpcmlzb3BodXMgc2hvdWxkIHNldCBzYWlsIHdpdGggYWxsIHNwZWVkLgo8bWlsZXN0b25lIG49IjUiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciBoaW0gWGVub3Bob24gcm9zZSBhbmQgc3Bva2UgYXMgZm9sbG93czog4oCcQ2hlaXJpc29waHVzLCB0aGVuLCBpcyBzZXR0aW5nIG9mZiBhZnRlciBzaGlwcywgYW5kIHdlIGFyZSB0byBzdGF5IGhlcmU7IEkgYW0gZ29pbmcgdG8gc3BlYWssIHRoZXJlZm9yZSwgb2YgYWxsIHRoZSB0aGluZ3MgdGhhdCBpdCBzZWVtcyB0byBtZSBwcm9wZXIgZm9yIHVzIHRvIGJlIGRvaW5nIHdoaWxlIHdlIHdhaXQuCjxtaWxlc3RvbmUgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGUgZmlyc3QgcGxhY2UsIHdlIG11c3Qgb2J0YWluIHByb3Zpc2lvbnMgZnJvbSBob3N0aWxlIHRlcnJpdG9yeSwgZm9yIHdlIG5laXRoZXIgaGF2ZSBhbiBhZGVxdWF0ZSBtYXJrZXQsIG5vciBoYXZlIHdlLCB3aXRoIHNvbWUgZmV3IGV4Y2VwdGlvbnMsIHRoZSBtZWFucyB3aGVyZXdpdGggdG8gYnV5OyBidXQgdGhlIHRlcnJpdG9yeSBpcyBob3N0aWxlLCBhbmQgaGVuY2UgdGhlcmUgaXMgZGFuZ2VyIHRoYXQgbWFueSBvZiB5b3Ugd2lsbCBwZXJpc2ggaWYgeW91IHNldCBvdXQgYWZ0ZXIgcHJvdmlzaW9ucyBjYXJlbGVzc2x5IGFuZCB1bmd1YXJkZWRseS4KPG1pbGVzdG9uZSBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlJhdGhlciwgaXQgc2VlbXMgdG8gbWUgdGhhdCB5b3Ugb3VnaHQgdG8gZ2V0IHlvdXIgcHJvdmlzaW9ucyBpbiBmb3JhZ2luZyBwYXJ0aWVzIGFuZCBub3Qgcm9hbSBhYm91dCBhdCByYW5kb20sIGluIG9yZGVyIHRoYXQgeW91IG1heSBiZSBrZXB0IHNhZmUsIGFuZCB0aGF0IHdlIGdlbmVyYWxzIG91Z2h0IHRvIGhhdmUgY2hhcmdlIG9mIHRoaXMgbWF0dGVyLuKAnSBUaGlzIHByb3Bvc2FsIHdhcyBhZG9wdGVkLgo8bWlsZXN0b25lIG49IjgiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxMaXN0ZW4sIHRoZW4sIHRvIHRoaXMgZnVydGhlciBwb2ludC4gU29tZSBvZiB5b3UgYXJlIHRvIGpvdXJuZXkgZm9ydGggYWZ0ZXIgcGx1bmRlci4gTm93IEkgdGhpbmsgaXQgaXMgYmVzdCBmb3IgdGhlIG1hbiB3aG8gaXMgZ29pbmcgb3V0IHRvIGluZm9ybSB1cyBvZiB0aGUgZmFjdCBhbmQgdG8gdGVsbCB1cyBhbHNvIHdoaXRoZXIgaGUgaXMgZ29pbmcsIGluIG9yZGVyIHRoYXQgd2UgbWF5IGtub3cgdGhlIG51bWJlciBvZiBtZW4gd2hvIGFyZSBnb2luZyBvdXQgYW5kIHRoZSBudW1iZXIgd2hvIGFyZSBzdGF5aW5nIGJlaGluZDsgdGhlbiB3ZSBjYW4gaGVscCwgaWYgbmVlZCBiZSwgaW4gbWFraW5nIHByZXBhcmF0aW9ucywgYW5kIGlmIHRoZXJlIGJlIG9jY2FzaW9uIHRvIGdvIHRvIGFueSBvbmUncyBhc3Npc3RhbmNlLCB3ZSBzaGFsbCBrbm93IHdoaXRoZXIgd2UgYXJlIHRvIGdvIHdpdGggc3VjaCBhc3Npc3RhbmNlLCBhbmQgaWYgYSBtYW4gd2hvIGlzIHdpdGhvdXQgZXhwZXJpZW5jZSBpcyBtYWtpbmcgYW4gYXR0ZW1wdCBpbiBhbnkgcXVhcnRlciwgd2UgY2FuIGFkdmlzZSBoaW0gYnkgdHJ5aW5nIHRvIGFzY2VydGFpbiB0aGUgc3RyZW5ndGggb2YgdGhvc2UgYWdhaW5zdCB3aG9tIGhlIG1heSBiZSBnb2luZy7igJ0gVGhpcyBwcm9wb3NhbCBhbHNvIHdhcyBhZG9wdGVkLgo8bWlsZXN0b25lIG49IjkiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuLOKAnSBoZSBzYWlkLCDigJxjb25zaWRlciB0aGlzIG1hdHRlciBhbHNvLiBPdXIgZW5lbWllcyBoYXZlIGxlaXN1cmUgZm9yIHBsdW5kZXJpbmcgYW5kIHRoZXkgYXJlIHBsb3R0aW5nIGFnYWluc3QgdXPigJRxdWl0ZSBwcm9wZXJseSwgc2VlaW5nIHRoYXQgd2UgaGF2ZSBhcHByb3ByaWF0ZWQgd2hhdCB3YXMgdGhlaXJzOyBhbmQgdGhleSBhcmUgcG9zdGVkIHVwIGFib3ZlIHVzLiBTbyBpdCBzZWVtcyB0byBtZSB0aGF0IHdlIG91Z2h0IHRvIGhhdmUgZ3VhcmRzIGFyb3VuZCBvdXIgY2FtcDsgc3VwcG9zaW5nLCB0aGVuLCB0aGF0IHdlIHRha2UgdHVybnMgaW4gc3RhbmRpbmcgZ3VhcmQgYW5kIGtlZXBpbmcgd2F0Y2gsIHRoZSBlbmVteSB3b3VsZCBiZSBsZXNzIGFibGUgdG8gaGFycnkgdXMuCjxtaWxlc3RvbmUgbj0iMTAiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxIZXJlIGlzIHN0aWxsIGFub3RoZXIgcG9pbnQgdG8gbm90ZS4gSWYgd2Uga25ldyBiZXlvbmQgZG91YnQgdGhhdCBDaGVpcmlzb3BodXMgd291bGQgYnJpbmcgYmFjayB3aXRoIGhpbSBhbiBhZGVxdWF0ZSBudW1iZXIgb2Ygc2hpcHMsIHRoZXJlIHdvdWxkIGJlIG5vIG5lZWQgb2Ygd2hhdCBJIGFtIGFib3V0IHRvIHNheTsgYnV0IHNpbmNlIGluIGZhY3QgdGhhdCBpcyB1bmNlcnRhaW4sIEkgdGhpbmsgd2Ugc2hvdWxkIHRyeSB0byBkbyBvdXIgcGFydCBieSBwcm9jdXJpbmcgc2hpcHMgaGVyZSBhbHNvLiBGb3IgaWYgaGUgZG9lcyBicmluZyBlbm91Z2gsIHRoZW4gd2l0aCB0aG9zZSBhdCBoYW5kIGhlcmUgd2Ugc2hhbGwgaGF2ZSBhIG1vcmUgYWJ1bmRhbnQgc3VwcGx5IHRvIHNhaWwgaW4sIHdoaWxlIGlmIGhlIGRvZXMgbm90LCB3ZSBzaGFsbCB1c2UgdGhvc2Ugd2hpY2ggd2UgaGF2ZSBoZXJlLgo8bWlsZXN0b25lIG49IjExIiB1bml0PSJzZWN0aW9uIiAvPk5vdyBJIHNlZSBzaGlwcyBzYWlsaW5nIHBhc3QgZnJlcXVlbnRseSwgYW5kIGlmIHdlIGNhbiBnZXQgdGhlIFRyYXBlenVudGlhbnMgdG8gZ2l2ZSB1cyBtZW4tb2Ytd2FyIGFuZCBzbyBicmluZyB0aGVzZSBzaGlwcyBpbnRvIHBvcnQgYW5kIGtlZXAgdGhlbSB1bmRlciBndWFyZCwgdW5zaGlwcGluZyB0aGVpciBydWRkZXJzIG1lYW53aGlsZSwgdW50aWwgd2UgZ2V0IGVub3VnaCB0byBjYXJyeSB1cywgcGVyaGFwcyB3ZSBzaG91bGQgbm90IGxhY2sgc3VjaCBtZWFucyBvZiB0cmFuc3BvcnQgYXMgd2UgbmVlZC7igJ0gVGhpcyBwcm9wb3NhbCBhbHNvIHdhcyBhZG9wdGVkLgo8bWlsZXN0b25lIG49IjEyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQWdhaW4s4oCdIGhlIHNhaWQsIOKAnGRvIHlvdSBub3QgdGhpbmsgaXQgcmVhc29uYWJsZSB0aGF0IHdlIHNob3VsZCBtYWludGFpbiBmcm9tIG91ciBjb21tb24gZnVuZCB0aGUgc2FpbG9ycyB3ZSB0aHVzIGJyaW5nIGludG8gcG9ydCBmb3IgYXMgbG9uZyBhIHRpbWUgYXMgdGhleSBtYXkgYmUgd2FpdGluZyBmb3Igb3VyIHNha2VzLCBhbmQgdGhhdCB3ZSBzaG91bGQgYWdyZWUgdXBvbiBhIHByaWNlIGZvciBvdXIgcGFzc2FnZSwgc28gdGhhdCBpbiBjb25mZXJyaW5nIGEgYmVuZWZpdCB1cG9uIHVzIHRoZXkgbWF5IGFsc28gYmVuZWZpdCB0aGVtc2VsdmVzP+KAnSBUaGlzIHByb3Bvc2FsIGFsc28gd2FzIGFkb3B0ZWQuCjxtaWxlc3RvbmUgbj0iMTMiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgaXQgc2VlbXMgdG8gbWUs4oCdIGhlIGNvbnRpbnVlZCwg4oCcdGhhdCBpZiBwZXJjaGFuY2UgdGhpcyBwbGFuIGFsc28gc2hhbGwgZmFpbCB0byBwcm92aWRlIHVzIHdpdGggZW5vdWdoIHNoaXBzLCB3ZSBtdXN0IHR1cm4gdG8gdGhlIHJvYWRzLCB3aGljaCB3ZSBoZWFyIGFyZSBkaWZmaWN1bHQgdG8gdHJhdmVsLCBhbmQgZGlyZWN0IHRoZSBjaXRpZXMgdGhhdCBhcmUgc2l0dWF0ZWQgYWxvbmcgdGhlIHNlYSB0byByZXBhaXIgdGhlbTsgZm9yIHRoZXkgd2lsbCBvYmV5LCBub3Qgb25seSBmcm9tIGZlYXIsIGJ1dCBhbHNvIGZyb20gdGhlIGRlc2lyZSB0byBiZSByaWQgb2YgdXMu4oCdCjxtaWxlc3RvbmUgbj0iMTQiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BdCB0aGlzIHRoZSBzb2xkaWVycyBzZXQgdXAgYSBzaG91dCwgc2F5aW5nIHRoYXQgdGhleSBkaWQgbm90IHdhbnQgdG8gZ28gYnkgbGFuZC4gQW5kIFhlbm9waG9uLCByZWFsaXppbmcgdGhlaXIgZm9vbGlzaG5lc3MsIGRpZCBub3QgcHV0IGFueSBwcm9wb3NhbCByZWdhcmRpbmcgdGhpcyBtYXR0ZXIgdG8gdm90ZSwgYnV0IHBlcnN1YWRlZCB0aGUgY2l0aWVzIHRvIHJlcGFpciB0aGUgcm9hZHMgdm9sdW50YXJpbHksIHVyZ2luZyB0aGF0IHRoZXkgd291bGQgYmUgcmlkIG9mIHRoZSBhcm15IHRoZSBtb3JlIHF1aWNrbHkgaWYgdGhlIHJvYWRzIHNob3VsZCBiZSBtYWRlIGVhc3kgdG8gdHJhdmVsLgo8bWlsZXN0b25lIG49IjE1IiB1bml0PSJzZWN0aW9uIiAvPkZ1cnRoZXJtb3JlLCB0aGV5IGdvdCBhIGZpZnR5LW9hcmVkIHdhcnNoaXAgZnJvbSB0aGUgVHJhcGV6dW50aWFucywgYW5kIHB1dCBpdCB1bmRlciB0aGUgY29tbWFuZCBvZiBEZXhpcHB1cywgYSBMYWNvbmlhbiBwZXJpb2VjdXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgcGVyaW9lY2kgd2VyZSB0aGUgaW5oYWJpdGFudHMgb2YgdGhlIG91dGx5aW5nIExhY29uaWFuIHRvd25zOyB0aGV5IHdlcmUgZnJlZSwgYnV0IG5vdCBTcGFydGFuIGNpdGl6ZW5zLjwvbm90ZT4gVGhpcyBmZWxsb3csIGhvd2V2ZXIsIHBheWluZyBubyBoZWVkIHRvIHRoZSBkdXR5IG9mIGNvbGxlY3RpbmcgdmVzc2Vscywgc2xpcHBlZCBhd2F5IHdpdGggaGlzIG1hbi1vZi13YXIgYW5kIGxlZnQgdGhlIEV1eGluZS4gSGUgZGlkIGluZGVlZCBnZXQgaGlzIGRlc2VydHMgYWZ0ZXJ3YXJkczsgZm9yIHdoaWxlIGVuZ2FnZWQgaW4gc29tZSBpbnRyaWd1ZSBhdCB0aGUgY291cnQgb2YgU2V1dGhlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDcuMi4zMSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA3LjIuMzEtMzQ8L2JpYmw+Ljwvbm90ZT4gaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI3NTYiIGtleT0idGduLDcwMDI3NTYiPlRocmFjZTwvcGxhY2VOYW1lPiBoZSB3YXMga2lsbGVkIGJ5IE5pY2FuZGVyIHRoZSBMYWNvbmlhbi4KPG1pbGVzdG9uZSBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGFsc28gZ290IGEgdGhpcnR5LW9hcmVkIGdhbGxleSwgYW5kIHB1dCBpdCB1bmRlciB0aGUgY29tbWFuZCBvZiBQb2x5Y3JhdGVzIHRoZSBBdGhlbmlhbiwgd2hvIGJyb3VnaHQgaW4gdG8gdGhlIGNhbXAgYWxsIHRoZSBtZXJjaGFudCB2ZXNzZWxzIHRoYXQgaGUgY2FwdHVyZWQuIEFuZCB0aGV5IHdvdWxkIHVubG9hZCB0aGUgY2FyZ29lcywgaW4gY2FzZSB0aGUgc2hpcHMgaGFkIGFueSwgYW5kIHB1dCB0aGVtIHVuZGVyIGd1YXJkLCBpbiBvcmRlciB0byBrZWVwIHRoZXNlIHNhZmUgYW5kIHRvIHVzZSB0aGUgdmVzc2VscyB0aGVtc2VsdmVzIGZvciB0cmFuc3BvcnQgc2VydmljZS4KPG1pbGVzdG9uZSBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5XaGlsZSB0aGVzZSB0aGluZ3Mgd2VyZSBnb2luZyBvbiwgdGhlIEdyZWVrcyB3ZXJlIG1ha2luZyBmb3JheXMgaW4gcXVlc3Qgb2YgYm9vdHksIGFuZCB3aGlsZSBzb21lIHBhcnRpZXMgd291bGQgc2VjdXJlIGl0LCBvdGhlcnMgZGlkIG5vdC4gQW5kIGluIG9uZSBjYXNlLCB3aGVuIENsZWFlbmV0dXMgbGVkIGZvcnRoIGhpcyBvd24gY29tcGFueSBhbmQgYW5vdGhlciBhZ2FpbnN0IGEgZGlmZmljdWx0IHN0cm9uZ2hvbGQsIHRoZSBjb21tYW5kZXIgaGltc2VsZiB3YXMga2lsbGVkIGFuZCBtYW55IG9mIGhpcyBtZW4gYmVzaWRlcy4KPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSB0aW1lIGNhbWUgd2hlbiBpdCB3YXMgbm8gbG9uZ2VyIHBvc3NpYmxlIHRvIG9idGFpbiBwcm92aXNpb25zIGFuZCByZXR1cm4gdG8gdGhlIGNhbXAgb24gdGhlIHNhbWUgZGF5LiBUaGVuIFhlbm9waG9uIHRvb2sgc29tZSBUcmFwZXp1bnRpYW5zIGZvciBndWlkZXMgYW5kIGxlZCBmb3J0aCBoYWxmIHRoZSBhcm15IHRvIHRoZSBjb3VudHJ5IG9mIHRoZSBEcmlsYWUsIGxlYXZpbmcgdGhlIG90aGVyIGhhbGYgYmVoaW5kIHRvIGd1YXJkIHRoZSBjYW1w4oCUYmVjYXVzZSB0aGUgQ29sY2hpYW5zLCBzaW5jZSB0aGV5IGhhZCBiZWVuIGRyaXZlbiBvdXQgb2YgdGhlaXIgaG91c2VzLCB3ZXJlIG5vdyBnYXRoZXJlZCB0b2dldGhlciBpbiBvbmUgZ3JlYXQgYm9keSBhbmQgaGFkIHRha2VuIGEgcG9zaXRpb24gb24gdGhlIGhlaWdodHMgYWJvdmUgdGhlIGNhbXAuCjxtaWxlc3RvbmUgbj0iMiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIFRyYXBlenVudGlhbnMgd291bGQgbm90IGxlYWQgdGhlIEdyZWVrcyB0byBkaXN0cmljdHMgZnJvbSB3aGljaCBwcm92aXNpb25zIGNvdWxkIGJlIHNlY3VyZWQgZWFzaWx5LCBiZWNhdXNlIHRoZXkgd2VyZSBmcmllbmRseSB0byB0aGUgcGVvcGxlIG9mIHRob3NlIGRpc3RyaWN0czsgYnV0IHRoZXkgd2VyZSBlYWdlciB0byBsZWFkIHRoZW0gaW50byB0aGUgdGVycml0b3J5IG9mIHRoZSBEcmlsYWUsIGF0IHdob3NlIGhhbmRzIHRoZXkgd2VyZSBjb250aW51YWxseSBzdWZmZXJpbmcgbG9zc2VzLCB0aG91Z2ggdGhlaXIgY291bnRyeSB3YXMgbW91bnRhaW5vdXMgYW5kIGRpZmZpY3VsdCB0byB0cmF2ZXJzZSBhbmQgaXRzIGluaGFiaXRhbnRzIHRoZSBtb3N0IHdhcmxpa2Ugb2YgYWxsIHRoYXQgZHdlbGwgdXBvbiB0aGUgRXV4aW5lLgo8bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZSBHcmVla3MgaGFkIHJlYWNoZWQgdGhlIGhpZ2hsYW5kcywgdGhlIERyaWxhZSBzZXQgZmlyZSB0byBzdWNoIG9mIHRoZWlyIHN0cm9uZ2hvbGRzIGFzIHNlZW1lZCB0byB0aGVtIGVhc3kgdG8gY2FwdHVyZSwgYW5kIGZlbGwgYmFjazsgYW5kIHRoZSBHcmVla3MgY291bGQgc2VjdXJlIG5vdGhpbmcgZXhjZXB0IGFuIG9jY2FzaW9uYWwgcGlnIG9yIG94IG9yIG90aGVyIGFuaW1hbCB0aGF0IGhhZCBlc2NhcGVkIHRoZSBmaXJlLiBUaGVyZSB3YXMgb25lIHN0cm9uZ2hvbGQsIGhvd2V2ZXIsIHdoaWNoIHdhcyB0aGVpciBtZXRyb3BvbGlzLCBhbmQgaW50byB0aGlzIHRoZXkgaGFkIGFsbCBzdHJlYW1lZC4gQXJvdW5kIGl0IHdhcyBhbiBleGNlZWRpbmdseSBkZWVwIHJhdmluZSwgYW5kIHRoZSBhcHByb2FjaGVzIHRvIHRoZSBwbGFjZSB3ZXJlIGRpZmZpY3VsdC4KPG1pbGVzdG9uZSBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB0aGUgcGVsdGFzdHMsIHdobyBoYWQgcnVuIGZpdmUgb3Igc2l4IHN0YWRpYSBhaGVhZCBvZiB0aGUgaG9wbGl0ZXMsIGNyb3NzZWQgdGhpcyByYXZpbmUgYW5kLCBzZWVpbmcgcXVhbnRpdGllcyBvZiBzaGVlcCBhbmQgb3RoZXIgcHJvcGVydHksIGVzc2F5ZWQgYW4gYXR0YWNrIHVwb24gdGhlIHN0cm9uZ2hvbGQ7IGluIHRoZWlyIHRyYWluIHRoZXJlIGZvbGxvd2VkIGEgY29uc2lkZXJhYmxlIG51bWJlciBvZiBzcGVhcm1lbiB3aG8gaGFkIHNldCBvdXQgYWZ0ZXIgcHJvdmlzaW9ucywgc28gdGhhdCB0aGUgcGFydHkgdGhhdCBjcm9zc2VkIHRoZSByYXZpbmUgYW1vdW50ZWQgdG8gbW9yZSB0aGFuIGEgdGhvdXNhbmQgbWVuLgo8bWlsZXN0b25lIG49IjUiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IHdoZW4gdGhleSBmb3VuZCB0aGVtc2VsdmVzIHVuYWJsZSB3aXRoIGFsbCB0aGVpciBmaWdodGluZyB0byBjYXB0dXJlIHRoZSBwbGFjZSAoZm9yIHRoZXJlIHdhcyBhIHdpZGUgdHJlbmNoIGFyb3VuZCBpdCwgYmFja2VkIGJ5IGEgcmFtcGFydCwgYW5kIHVwb24gdGhlIHJhbXBhcnQgcGFsaXNhZGVzIGhhZCBiZWVuIHNldCBhbmQgd29vZGVuIHRvd2VycyBjb25zdHJ1Y3RlZCBhdCBmcmVxdWVudCBpbnRlcnZhbHMpLCB0aGVpciBuZXh0IG1vdmUgd2FzIHRvIHRyeSB0byB3aXRoZHJhdzsgYW5kIHRoZW4gdGhlIGVuZW15IHByZXNzZWQgaGFyZCB1cG9uIHRoZW0uCjxtaWxlc3RvbmUgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz5UbyBnZXQgYXdheSBieSBydW5uaW5nIHByb3ZlZCBpbXBvc3NpYmxlLCBpbmFzbXVjaCBhcyB0aGUgZGVzY2VudCBmcm9tIHRoZSBzdHJvbmdob2xkIHRvIHRoZSByYXZpbmUgb25seSBhbGxvd2VkIHRoZW0gdG8gZ28gaW4gc2luZ2xlIGZpbGUsIGFuZCB0aGV5IGFjY29yZGluZ2x5IHNlbnQgYSBtZXNzZW5nZXIgdG8gWGVub3Bob24sIHdobyB3YXMgYXQgdGhlIGhlYWQgb2YgdGhlIGhvcGxpdGVzLiBUaGUgbWVzc2VuZ2VyIGNhbWUgYW5kIHJlcG9ydGVkOgo8bWlsZXN0b25lIG49IjciIHVuaXQ9InNlY3Rpb24iIC8+4oCcVGhlcmUgaXMgYSBzdHJvbmdob2xkIGZ1bGwgb2YgYWxsIGtpbmRzIG9mIHN0b3Jlcy4gV2UgY2Fubm90IGNhcHR1cmUgaXQsIGZvciBpdCBpcyBzdHJvbmc7IGFuZCB3ZSBjYW5ub3QgZWFzaWx5IGdldCBhd2F5LCBmb3IgdGhlIGRlZmVuZGVycyBydXNoIG91dCBhbmQgYXR0YWNrIHVzLCBhbmQgdGhlIHJvYWQgdGhhdCBsZWFkcyBiYWNrIGlzIGEgZGlmZmljdWx0IG9uZS7igJ0KPG1pbGVzdG9uZSBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXBvbiBoZWFyaW5nIHRoaXMgbWVzc2FnZSBYZW5vcGhvbiBsZWQgb24gdG8gdGhlIHJhdmluZSwgb3JkZXJlZCB0aGUgaG9wbGl0ZXMgdG8gaGFsdCB0aGVyZSB1bmRlciBhcm1zLCBhbmQgaGltc2VsZiBjcm9zc2VkIG92ZXIgd2l0aCB0aGUgY2FwdGFpbnMgYW5kIGxvb2tlZCBhYm91dCB0byBzZWUgd2hldGhlciBpdCB3YXMgYmV0dGVyIHRvIHdpdGhkcmF3IHRoZSB0cm9vcHMgdGhhdCBoYWQgYWxyZWFkeSBjcm9zc2VkLCBvciB0byBsZWFkIG92ZXIgdGhlIGhvcGxpdGVzIGFsc28sIG9uIHRoZSBwcmVzdW1wdGlvbiB0aGF0IHRoZSBzdHJvbmdob2xkIGNvdWxkIGJlIGNhcHR1cmVkLgo8bWlsZXN0b25lIG49IjkiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIHdpdGhkcmF3YWwsIGl0IHNlZW1lZCBjbGVhciwgY291bGQgbm90IGJlIGFjY29tcGxpc2hlZCB3aXRob3V0IHRoZSBsb3NzIG9mIG1hbnkgbGl2ZXMsIHdoaWxlIHRoZSBjYXB0dXJlIG9mIHRoZSBwbGFjZSwgaW4gdGhlIG9waW5pb24gb2YgdGhlIGNhcHRhaW5zLCB3YXMgZmVhc2libGUsIGFuZCBYZW5vcGhvbiBmZWxsIGluIHdpdGggdGhlaXIgb3BpbmlvbiwgaW4gcmVsaWFuY2UgdXBvbiBoaXMgc2FjcmlmaWNlczsgZm9yIHRoZSBzZWVycyBoYWQgZGVjbGFyZWQgdGhhdCB3aGlsZSB0aGVyZSB3b3VsZCBiZSBmaWdodGluZyB0byBkbywgdGhlIGlzc3VlIG9mIHRoZSBleHBlZGl0aW9uIHdvdWxkIGJlIGZvcnR1bmF0ZS4KPG1pbGVzdG9uZSBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSBoZSBzZW50IHRoZSBjYXB0YWlucyB0byBicmluZyBvdmVyIHRoZSBob3BsaXRlcywgd2hpbGUgaGUgaGltc2VsZiByZW1haW5lZCBvbiB0aGUgZnVydGhlciBzaWRlLCBoYXZpbmcgZHJhd24gYmFjayB0aGUgZW50aXJlIGJvZHkgb2YgcGVsdGFzdHMgYW5kIGZvcmJpZGRpbmcgYW55IG9uZSB0byBzaG9vdCBhdCBsb25nIHJhbmdlLgo8bWlsZXN0b25lIG49IjExIiB1bml0PSJzZWN0aW9uIiAvPlVwb24gdGhlIGFycml2YWwgb2YgdGhlIGhvcGxpdGVzIGhlIG9yZGVyZWQgZWFjaCBvZiB0aGUgY2FwdGFpbnMgdG8gZm9ybSBoaXMgY29tcGFueSBpbiB0aGUgd2F5IGhlIHRob3VnaHQgaXQgd291bGQgZmlnaHQgbW9zdCBlZmZlY3RpdmVseTsgZm9yIG5lYXIgb25lIGFub3RoZXIgd2VyZSB0aGUgY2FwdGFpbnMgd2hvIGhhZCBhbGwgdGhlIHRpbWUgYmVlbiB2aWVpbmcgd2l0aCBvbmUgYW5vdGhlciBpbiB2YWxvdXIuCjxtaWxlc3RvbmUgbj0iMTIiIHVuaXQ9InNlY3Rpb24iIC8+VGhpcyBvcmRlciB0aGV5IHByb2NlZWRlZCB0byBjYXJyeSBvdXQsIGFuZCBtZWFud2hpbGUgWGVub3Bob24gcGFzc2VkIHdvcmQgdG8gYWxsIHRoZSBwZWx0YXN0cyB0byBhZHZhbmNlIHdpdGggaGFuZCBvbiB0aGUgdGhvbmcsIHNvIHRoYXQgdGhleSBjb3VsZCBkaXNjaGFyZ2UgdGhlaXIgamF2ZWxpbnMgd2hlbiB0aGUgc2lnbmFsIHNob3VsZCBiZSBnaXZlbiwgdG8gdGhlIGJvd21lbiB0byBoYXZlIHRoZWlyIGFycm93cyB1cG9uIHRoZSBzdHJpbmcsIHJlYWR5IHRvIHNob290IHVwb24gdGhlIHNpZ25hbCwgYW5kIHRvIHRoZSBzbGluZ2VycyB0byBoYXZlIHRoZWlyIGJhZ3MgZnVsbCBvZiBzdG9uZXM7IGFuZCBoZSBkZXNwYXRjaGVkIHRoZSBwcm9wZXIgcGVyc29ucyB0byBsb29rIGFmdGVyIGFsbCB0aGVzZSB0aGluZ3MuCjxtaWxlc3RvbmUgbj0iMTMiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIGFsbCBwcmVwYXJhdGlvbnMgaGFkIGJlZW4gbWFkZSBhbmQgdGhlIGNhcHRhaW5zLCBsaWV1dGVuYW50cywgYW5kIHRob3NlIGFtb25nIHRoZSBtZW4gd2hvIGNsYWltZWQgdG8gYmUgbm90IGluZmVyaW9yIHRvIHRoZW0gaW4gYnJhdmVyeSB3ZXJlIGFsbCBncm91cGVkIHRvZ2V0aGVyIGluIHRoZSBsaW5lPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIGZvcm1hdGlvbiB3aGljaCB0aGUgY2FwdGFpbnMganVkZ2VkIHRvIGJlIHRoZSDigJxtb3N0IGVmZmVjdGl2ZeKAnSAoICAxMSBhYm92ZSkuPC9ub3RlPiBhbmQsIG1vcmVvdmVyLCB3YXRjaGluZyBvbmUgYW5vdGhlciAoZm9yIHRoZSBsaW5lIHdhcyBjcmVzY2VudC1zaGFwZWQsIHRvIGNvbmZvcm0gd2l0aCB0aGUgcG9zaXRpb24gdGhleSB3ZXJlIGF0dGFja2luZyksCjxtaWxlc3RvbmUgbj0iMTQiIHVuaXQ9InNlY3Rpb24iIC8+dGhlbiB0aGV5IHN0cnVjayB1cCB0aGUgcGFlYW4gYW5kIHRoZSB0cnVtcGV0IHNvdW5kZWQsIGFuZCB0aGVuLCBhdCB0aGUgc2FtZSBtb21lbnQsIHRoZXkgcmFpc2VkIHRoZSB3YXIgY3J5IHRvIEVueWFsaXVzLCB0aGUgaG9wbGl0ZXMgY2hhcmdlZCBmb3J3YXJkIG9uIHRoZSBydW4sIGFuZCB0aGUgbWlzc2lsZXMgYmVnYW4gdG8gZmx5IGFsbCB0b2dldGhlcuKAlHNwZWFycywgYXJyb3dzLCBzbGluZy1zdG9uZXMsIGFuZCB2ZXJ5IG1hbnkgc3RvbmVzIHRocm93biBieSBoYW5kLCB3aGlsZSBzb21lIG9mIHRoZSBtZW4gZW1wbG95ZWQgZmlyZWJyYW5kcyBhbHNvLgo8bWlsZXN0b25lIG49IjE1IiB1bml0PSJzZWN0aW9uIiAvPkJ5IHJlYXNvbiBvZiB0aGUgcXVhbnRpdHkgb2YgdGhlIG1pc3NpbGVzIHRoZSBlbmVteSBhYmFuZG9uZWQgYm90aCB0aGVpciByYW1wYXJ0cyBhbmQgdGhlaXIgdG93ZXJzLCBzbyB0aGF0IEFnYXNpYXMgdGhlIFN0eW1waGFsaWFuLCBwdXR0aW5nIGFzaWRlIGhpcyBhcm1zIGFuZCBjbGFkIG9ubHkgaW4gaGlzIHR1bmljLCBjbGltYmVkIHVwLCB0aGVuIHB1bGxlZCB1cCBhbm90aGVyIG1hbiwgYW5kIG1lYW53aGlsZSBhbm90aGVyIGhhZCBtYWRlIHRoZSBjbGltYiwgc28gdGhhdCB0aGUgY2FwdHVyZSBvZiB0aGUgc3Ryb25naG9sZCB3YXMgYWNjb21wbGlzaGVkLCBhcyBpdCBzZWVtZWQuCjxtaWxlc3RvbmUgbj0iMTYiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZXVwb24gdGhlIHBlbHRhc3RzIGFuZCB0aGUgbGlnaHQgdHJvb3BzIHJ1c2hlZCBpbiBhbmQgcHJvY2VlZGVkIHRvIHNuYXRjaCB3aGF0ZXZlciBwbHVuZGVyIHRoZXkgc2V2ZXJhbGx5IGNvdWxkOyBidXQgWGVub3Bob24sIHRha2luZyBoaXMgc3RhbmQgYXQgdGhlIGdhdGVzLCBrZXB0IG91dCBhcyBtYW55IGFzIGhlIGNvdWxkIG9mIHRoZSBob3BsaXRlcywgZm9yIHRoZSByZWFzb24gdGhhdCBvdGhlciBlbmVtaWVzIHdlcmUgY29taW5nIGludG8gdmlldyB1cG9uIGNlcnRhaW4gc3Ryb25nIGhlaWdodHMuCjxtaWxlc3RvbmUgbj0iMTciIHVuaXQ9InNlY3Rpb24iIC8+QWZ0ZXIgbm8gbG9uZyBpbnRlcnZhbCBhIHNob3V0IGFyb3NlIHdpdGhpbiBhbmQgbWVuIGNhbWUgcG91cmluZyBmb3J0aCBpbiBmbGlnaHQsIHNvbWUgY2Fycnlpbmcgd2l0aCB0aGVtIHdoYXQgdGhleSBoYWQgc2VpemVkLCB0aGVuIHNvb24gYSBudW1iZXIgb2YgbWVuIHRoYXQgd2VyZSB3b3VuZGVkOyBhbmQgdGhlcmUgd2FzIGEgZGVhbCBvZiBwdXNoaW5nIGFib3V0IHRoZSBnYXRlcy4gV2hlbiB0aG9zZSB3aG8gd2VyZSB0dW1ibGluZyBvdXQgd2VyZSBxdWVzdGlvbmVkLCB0aGV5IHNhaWQgdGhhdCB0aGVyZSB3YXMgYSBjaXRhZGVsIHdpdGhpbiwgdGhhdCB0aGUgZW5lbXkgd2VyZSBudW1lcm91cywgYW5kIHRoYXQgdGhleSBoYWQgc2FsbGllZCBmb3J0aCBhbmQgd2VyZSBkZWFsaW5nIGJsb3dzIHVwb24gdGhlIG1lbiBpbnNpZGUuCjxtaWxlc3RvbmUgbj0iMTgiIHVuaXQ9InNlY3Rpb24iIC8+VGhlbiBYZW5vcGhvbiBvcmRlcmVkIFRvbG1pZGVzIHRoZSBoZXJhbGQgdG8gcHJvY2xhaW0gdGhhdCB3aG9ldmVyIHdhbnRlZCB0byBnZXQgYW55IHBsdW5kZXIgc2hvdWxkIGdvIGluLiBBdCB0aGF0IG1hbnkgcHJvY2VlZGVkIHRvIHJ1c2ggaW50byB0aGUgZ2F0ZXMsIGFuZCB0aGUgY3Jvd2QgdGhhdCB3YXMgcHVzaGluZyBpbiBvdmVyY2FtZSB0aGUgY3Jvd2QgdGhhdCB3YXMgdHVtYmxpbmcgb3V0IGFuZCBzaHV0IHVwIHRoZSBlbmVteSBhZ2FpbiBpbiB0aGVpciBjaXRhZGVsLgo8bWlsZXN0b25lIG49IjE5IiB1bml0PSJzZWN0aW9uIiAvPlNvIGV2ZXJ5dGhpbmcgb3V0c2lkZSB0aGUgY2l0YWRlbCB3YXMgc2VpemVkIGFuZCBjYXJyaWVkIG9mZiBieSB0aGUgR3JlZWtzLCBhbmQgdGhlIGhvcGxpdGVzIHRvb2sgdXAgdGhlaXIgcG9zaXRpb24sIHNvbWUgYWJvdXQgdGhlIHJhbXBhcnRzLCBvdGhlcnMgYWxvbmcgdGhlIHJvYWQgbGVhZGluZyB1cCB0byB0aGUgY2l0YWRlbC4KPG1pbGVzdG9uZSBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgWGVub3Bob24gYW5kIHRoZSBjYXB0YWlucyB3ZXJlIGxvb2tpbmcgdG8gc2VlIHdoZXRoZXIgaXQgd2FzIHBvc3NpYmxlIHRvIGNhcHR1cmUgdGhlIGNpdGFkZWwsIGZvciBpbiB0aGF0IGNhc2UgdGhlaXIgc2FmZXR5IHdhcyBzZWN1cmVkLCB3aGlsZSBvdGhlcndpc2UgdGhleSB0aG91Z2h0IGl0IHdvdWxkIGJlIHZlcnkgZGlmZmljdWx0IHRvIGVmZmVjdCB0aGVpciB3aXRoZHJhd2FsOyBidXQgdGhlIHVwc2hvdCBvZiB0aGVpciBjb25zaWRlcmF0aW9uIHdhcywgdGhhdCB0aGUgcGxhY2Ugd2FzIHF1aXRlIGltcHJlZ25hYmxlLgo8bWlsZXN0b25lIG49IjIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiB0aGV5IG1hZGUgcHJlcGFyYXRpb25zIGZvciB0aGUgd2l0aGRyYXdhbDogdGhleSB0b3JlIGRvd24gdGhlIHBhbGlzYWRlcywgZWFjaCBkaXZpc2lvbiB0YWtpbmcgdGhvc2Ugb24gaXRzIG93biBmcm9udCwgYW5kIHNlbnQgb2ZmIHRoZSBtZW4gd2hvIHdlcmUgdW5maXQgZm9yIHNlcnZpY2Ugb3Igd2VyZSBjYXJyeWluZyBidXJkZW5zLCBhbmQgbGlrZXdpc2UgdGhlIGdyZWF0ZXIgcGFydCBvZiB0aGUgaG9wbGl0ZXMsIHRoZSBjYXB0YWlucyBrZWVwaW5nIGJlaGluZCBvbmx5IHRob3NlIHRyb29wcyB0aGF0IHRoZXkgZWFjaCByZWxpZWQgdXBvbi4KPG1pbGVzdG9uZSBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIG1vbWVudCB0aGV5IGJlZ2FuIHRvIHJldGlyZSwgdGhlcmUgcnVzaGVkIG91dCB1cG9uIHRoZW0gZnJvbSB3aXRoaW4gYSBncmVhdCBjcm93ZCBvZiBtZW4gYXJtZWQgd2l0aCB3aWNrZXIgc2hpZWxkcywgc3BlYXJzLCBncmVhdmVzLCBhbmQgUGFwaGxhZ29uaWFuIGhlbG1ldHMsIHdoaWxlIG90aGVycyBzZXQgYWJvdXQgY2xpbWJpbmcgdG8gdGhlIHRvcHMgb2YgdGhlIGhvdXNlcyB0aGF0IHdlcmUgb24gZWl0aGVyIHNpZGUgb2YgdGhlIHJvYWQgbGVhZGluZyB1cCB0byB0aGUgY2l0YWRlbC4KPG1pbGVzdG9uZSBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcmVzdWx0IHdhcyB0aGF0IGV2ZW4gYSBwdXJzdWl0IGluIHRoZSBkaXJlY3Rpb24gb2YgdGhlIGdhdGVzIHRoYXQgbGVkIGludG8gdGhlIGNpdGFkZWwgd2FzIHVuc2FmZTsgZm9yIHRoZXkgd291bGQgaHVybCBkb3duIGdyZWF0IGxvZ3MgZnJvbSBhYm92ZSwgc28gdGhhdCBpdCB3YXMgZGlmZmljdWx0IGVpdGhlciB0byByZW1haW4gb3IgdG8gcmV0aXJlLiBBbmQgdGhlIGFwcHJvYWNoIG9mIG5pZ2h0IHdhcyBhbHNvIGEgY2F1c2UgZm9yIGZlYXIuCjxtaWxlc3RvbmUgbj0iMjQiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGUgbWlkc3Qgb2YgdGhlaXIgZmlnaHRpbmcgYW5kIHBlcnBsZXhpdHkgc29tZSBnb2QgZ2F2ZSB0byB0aGUgR3JlZWtzIGEgbWVhbnMgb2Ygc2FsdmF0aW9uLiBGb3Igb2YgYSBzdWRkZW4gb25lIG9mIHRoZSBob3VzZXMgb24gdGhlIHJpZ2h0LCBzZXQgb24gZmlyZSBieSBzb21lYm9keSBvciBvdGhlciwgYnJva2UgaW50byBhIGJsYXplOyBhbmQgYXMgaXQgYmVnYW4gdG8gZmFsbCBpbiwgdGhlcmUgYmVnYW4gYSBnZW5lcmFsIGZsaWdodCBmcm9tIHRoZSBvdGhlciBob3VzZXMgb24gdGhlIHJpZ2h0IHNpZGUgb2YgdGhlIHJvYWQuCjxtaWxlc3RvbmUgbj0iMjUiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIG1vbWVudCBYZW5vcGhvbiBncmFzcGVkIHRoaXMgbGVzc29uIHdoaWNoIGNoYW5jZSBoYWQgZ2l2ZW4gaGltLCBoZSBnYXZlIG9yZGVycyB0byBzZXQgZmlyZSB0byB0aGUgaG91c2VzIG9uIHRoZSBsZWZ0IGFsc28sIHdoaWNoIHdlcmUgb2Ygd29vZCBhbmQgc28gZmVsbCB0byBidXJuaW5nIHZlcnkgcXVpY2tseS4gVGhlIHJlc3VsdCB3YXMgdGhhdCB0aGUgcGVvcGxlIGluIHRoZXNlIGhvdXNlcyBsaWtld2lzZSB0b29rIHRvIGZsaWdodC4KPG1pbGVzdG9uZSBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgb25seSB0aGUgZW5lbXkgaW4gdGhlaXIgZnJvbnQgd2hvIHdlcmUgbm93IGxlZnQgdG8gdHJvdWJsZSB0aGUgR3JlZWtzIGFuZCBtYW5pZmVzdGx5IGludGVuZGVkIHRvIGF0dGFjayB0aGVtIGFzIHRoZXkgcGFzc2VkIG91dCBhbmQgZG93biB0aGUgaGlsbC4gQXQgdGhpcyBzdGFnZSBYZW5vcGhvbiBzZW50IG91dCBvcmRlcnMgdGhhdCBhbGwgd2hvIGNoYW5jZWQgdG8gYmUgb3V0IG9mIHJhbmdlIG9mIHRoZSBtaXNzaWxlcyBzaG91bGQgc2V0IGFib3V0IGJyaW5naW5nIHVwIGxvZ3MgYW5kIHB1dCB0aGVtIGluIHRoZSBvcGVuIHNwYWNlIGJldHdlZW4gdGhlaXIgb3duIGZvcmNlcyBhbmQgdGhlIGVuZW15LiBBcyBzb29uIGFzIGVub3VnaCBsb2dzIGhhZCBiZWVuIGNvbGxlY3RlZCwgdGhleSBzZXQgZmlyZSB0byB0aGVtOyBhbmQgbWVhbndoaWxlIHRoZXkgc2V0IGZpcmUgYWxzbyB0byB0aGUgaG91c2VzIHdoaWNoIHdlcmUgY2xvc2UgYWxvbmcgdGhlIHBhbGlzYWRlLCBzbyB0aGF0IHRoZSBlbmVteSdzIGF0dGVudGlvbiBtaWdodCBiZSBvY2N1cGllZCB3aXRoIHRoZXNlLgo8bWlsZXN0b25lIG49IjI3IiB1bml0PSJzZWN0aW9uIiAvPkl0IHdhcyBpbiB0aGlzIHdheSB0aGF0IHRoZXkgZWZmZWN0ZWQsIHdpdGggZGlmZmljdWx0eSwgdGhlaXIgd2l0aGRyYXdhbCBmcm9tIHRoZSBzdHJvbmdob2xkLCBieSBwdXR0aW5nIGZpcmUgYmV0d2VlbiB0aGVtc2VsdmVzIGFuZCB0aGUgZW5lbXkuIEFuZCB0aGUgd2hvbGUgY2l0eSB3YXMgYnVybmVkIGRvd24sIGhvdXNlcywgdG93ZXJzLCBwYWxpc2FkZXMsIGFuZCBldmVyeXRoaW5nIGVsc2UgZXhjZXB0IHRoZSBjaXRhZGVsLgo8bWlsZXN0b25lIG49IjI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhlIG5leHQgZGF5IHRoZSBHcmVla3Mgd2VyZSBmb3IgcmV0dXJuaW5nIHRvIGNhbXAgd2l0aCB0aGVpciBwcm92aXNpb25zLiBCdXQgaW5hc211Y2ggYXMgdGhleSBmZWFyZWQgdGhlIGRlc2NlbnQgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUcmFwZXp1cyxBcmNhZGlhIiBrZXk9InBlcnNldXMsVHJhcGV6dXMsQXJjYWRpYSI+VHJhcGV6dXM8L3BsYWNlTmFtZT4gKGZvciB0aGUgd2F5IHdhcyBzdGVlcCBhbmQgbmFycm93KSwgdGhleSBsYWlkIGEgc2hhbSBhbWJ1c2NhZGU6CjxtaWxlc3RvbmUgbj0iMjkiIHVuaXQ9InNlY3Rpb24iIC8+YSBtYW4gb2YgTXlzaWEsIHdobyBsaWtld2lzZSBib3JlIHRoZSBuYW1lIG9mIE15c3VzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+V2hpY2ggaXRzZWxmIG1lYW5zIOKAnE15c2lhbuKAneKAlGp1c3QgYXMg4oCcRW5nbGlzaOKAnSBtaWdodCBiZSB0aGUgZmFtaWx5IG5hbWUgb2YgYW4gRW5nbGlzaG1hbi48L25vdGU+IHRvb2sgdGVuIG9mIHRoZSBDcmV0YW5zLCBzdGF5ZWQgYmVoaW5kIGluIGEgYml0IG9mIHVuZGVyZ3Jvd3RoLCBhbmQgcHJldGVuZGVkIHRvIGJlIHRyeWluZyB0byBrZWVwIG91dCBvZiBzaWdodCBvZiB0aGUgZW5lbXk7IGJ1dCB0aGVpciBzaGllbGRzLCB3aGljaCB3ZXJlIG9mIGJyb256ZSwgd291bGQgbm93IGFuZCB0aGVuIGdsZWFtIHRocm91Z2ggdGhlIGJ1c2hlcy4KPG1pbGVzdG9uZSBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGUgZW5lbXksIGNhdGNoaW5nIGdsaW1wc2VzIG9mIHRoZXNlIHByb2NlZWRpbmdzLCB3ZXJlIGZlYXJmdWwgdGhhdCBpdCB3YXMgYW4gYW1idXNjYWRlOyBhbmQgbWVhbndoaWxlIHRoZSBHcmVlayBhcm15IHdhcyBtYWtpbmcgaXRzIGRlc2NlbnQuIFdoZW4gaXQgc2VlbWVkIHRoYXQgdGhleSBoYWQgZ290IGRvd24gZmFyIGVub3VnaCwgYSBzaWduYWwgd2FzIGdpdmVuIHRvIHRoZSBNeXNpYW4gdG8gZmxlZSBhdCB0aGUgdG9wIG9mIGhpcyBzcGVlZCwgYW5kIGhlIGFuZCBoaXMgY29tcGFuaW9ucyBhcm9zZSBhbmQgdG9vayB0byBmbGlnaHQuCjxtaWxlc3RvbmUgbj0iMzEiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIENyZXRhbnMgb2YgdGhlIHBhcnR5IChmaW5kaW5nLCBhcyB0aGV5IHNhaWQsIHRoYXQgdGhleSB3ZXJlIGxpa2UgdG8gYmUgb3ZlcnRha2VuIGluIHRoZSBydW5uaW5nKSBwbHVuZ2VkIG91dCBvZiB0aGUgcm9hZCBpbnRvIHRoZSB3b29kcywgYW5kIGJ5IHR1bWJsaW5nIGRvd24gdGhyb3VnaCB0aGUgcmF2aW5lcyBtYWRlIHRoZWlyIGVzY2FwZSwKPG1pbGVzdG9uZSBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5idXQgdGhlIE15c2lhbiBoZWxkIHRvIHRoZSByb2FkIGluIGhpcyBmbGlnaHQgYW5kIGtlcHQgc2hvdXRpbmcgZm9yIGhlbHA7IGFuZCB0aGV5IGRpZCBnbyB0byBoaXMgYWlkLCBhbmQgcGlja2VkIGhpbSB1cCB3b3VuZGVkLiBUaGVuIHRoZSByZXNjdWVycyBpbiB0aGVpciB0dXJuIHByb2NlZWRlZCB0byByZXRyZWF0LCBmYWNlcyB0byB0aGUgZnJvbnQsIHdoaWxlIHRoZSBlbmVteSBrZXB0IHRocm93aW5nIG1pc3NpbGVzIGF0IHRoZW0gYW5kIHNvbWUgb2YgdGhlIENyZXRhbnMgcmVwbGllZCB3aXRoIHRoZWlyIGFycm93cy4gSW4gdGhpcyB3YXkgdGhleSBhbGwgcmVhY2hlZCB0aGUgY2FtcCBzYWZlIGFuZCBzb3VuZC4KPG1pbGVzdG9uZSBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBub3csIHNlZWluZyB0aGF0IENoZWlyaXNvcGh1cyB3YXMgbm90IHJldHVybmVkPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4xLjQiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS4xLjQ8L2JpYmw+Ljwvbm90ZT4gdGhhdCB0aGV5IGhhZCBub3QgYW4gYWRlcXVhdGUgbnVtYmVyIG9mIHNoaXBzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4xLjEwIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuMS4xMC0xNjwvYmlibD4uPC9ub3RlPiBhbmQgdGhhdCBpdCB3YXMgbm8gbG9uZ2VyIHBvc3NpYmxlIHRvIGdldCBwcm92aXNpb25zLCB0aGV5IHJlc29sdmVkIHRvIGRlcGFydCBieSBsYW5kLiBPbiBib2FyZCB0aGUgc2hpcHMgdGhleSBlbWJhcmtlZCB0aGUgc2ljaywgdGhvc2Ugd2hvIHdlcmUgbW9yZSB0aGFuIGZvcnR5IHllYXJzIG9mIGFnZSwgdGhlIHdvbWVuIGFuZCBjaGlsZHJlbiwgYW5kIGFsbCB0aGUgYmFnZ2FnZSB3aGljaCB0aGV5IGRpZCBub3QgbmVlZCB0byBrZWVwIHdpdGggdGhlbS4gVGhleSBwdXQgYWJvYXJkIGFsc28gUGhpbGVzaXVzIGFuZCBTb3BoYWVuZXR1cywgdGhlIGVsZGVzdCBvZiB0aGUgZ2VuZXJhbHMsIGFuZCBiYWRlIHRoZW0gdGFrZSBjaGFyZ2Ugb2YgdGhlIGVudGVycHJpc2U7CjxtaWxlc3RvbmUgbj0iMiIgdW5pdD0ic2VjdGlvbiIgLz50aGVuIHRoZSByZXN0IHRvb2sgdXAgdGhlIG1hcmNoLCB0aGUgcm9hZCBoYXZpbmcgYmVlbiBhbHJlYWR5IGNvbnN0cnVjdGVkLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4xLjEzIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuMS4xMy0xNDwvYmlibD4uPC9ub3RlPiBBbmQgb24gdGhlIHRoaXJkIGRheSBvZiB0aGVpciBqb3VybmV5IHRoZXkgcmVhY2hlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTA4NjM1NyIga2V5PSJ0Z24sMTA4NjM1NyI+Q2VyYXN1czwvcGxhY2VOYW1lPiwgYSBHcmVlayBjaXR5IG9uIHRoZSBzZWEsIGJlaW5nIGEgY29sb255IHBsYW50ZWQgYnkgdGhlIFNpbm9wZWFucyBpbiB0aGUgdGVycml0b3J5IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NjQyIiBrZXk9InRnbiw3MDE2NjQyIj5Db2xjaGlzPC9wbGFjZU5hbWU+LiAKPG1pbGVzdG9uZSBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIHRoZXkgcmVtYWluZWQgdGVuIGRheXM7IGFuZCB0aGUgdHJvb3BzIHdlcmUgcmV2aWV3ZWQgdW5kZXIgYXJtcyBhbmQgbnVtYmVyZWQsIGFuZCB0aGVyZSBwcm92ZWQgdG8gYmUgZWlnaHQgdGhvdXNhbmQgc2l4IGh1bmRyZWQgbWVuLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuOC4xNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjguMTU8L2JpYmw+IGFuZCBub3RlcyB0aGVyZW9uLjwvbm90ZT4gU28gbWFueSB3ZXJlIGxlZnQgYWxpdmUuIFRoZSByZXN0IGhhZCBwZXJpc2hlZCBhdCB0aGUgaGFuZHMgb2YgdGhlIGVuZW15IG9yIGluIHRoZSBzbm93LCBhIGZldyBhbHNvIGJ5IGRpc2Vhc2UuCjxtaWxlc3RvbmUgbj0iNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXJlLCBhbHNvLCB0aGV5IGRpdmlkZWQgdGhlIG1vbmV5IHJlY2VpdmVkIGZyb20gdGhlIHNhbGUgb2YgdGhlIGJvb3R5LiBBbmQgdGhlIHRpdGhlLCB3aGljaCB0aGV5IHNldCBhcGFydCBmb3IgQXBvbGxvIGFuZCBmb3IgQXJ0ZW1pcyBvZiB0aGUgRXBoZXNpYW5zLCB3YXMgZGlzdHJpYnV0ZWQgYW1vbmcgdGhlIGdlbmVyYWxzLCBlYWNoIHRha2luZyBoaXMgcG9ydGlvbiB0byBrZWVwIHNhZmVseSBmb3IgdGhlIGdvZHM7IGFuZCB0aGUgcG9ydGlvbiB0aGF0IGZlbGwgdG8gQ2hlaXJpc29waHVzIHdhcyBnaXZlbiB0byBOZW9uIHRoZSBBc2luYWVhbi4KPG1pbGVzdG9uZSBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciBYZW5vcGhvbiwgaGUgY2F1c2VkIGEgdm90aXZlIG9mZmVyaW5nIHRvIGJlIG1hZGUgb3V0IG9mIEFwb2xsbydzIHNoYXJlIG9mIGhpcyBwb3J0aW9uIGFuZCBkZWRpY2F0ZWQgaXQgaW4gdGhlIHRyZWFzdXJ5IG9mIHRoZSBBdGhlbmlhbnMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxEZWxwaGkiIGtleT0icGVyc2V1cyxEZWxwaGkiPkRlbHBoaTwvcGxhY2VOYW1lPiwgaW5zY3JpYmluZyB1cG9uIGl0IGhpcyBvd24gbmFtZSBhbmQgdGhhdCBvZiBQcm94ZW51cywgd2hvIHdhcyBraWxsZWQgd2l0aCBDbGVhcmNodXM7PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi41PC9iaWJsPi48L25vdGU+IGZvciBQcm94ZW51cyB3YXMgaGlzIGZyaWVuZC48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDMuMS40IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuMS40LTEwPC9iaWJsPi48L25vdGU+CjxtaWxlc3RvbmUgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgc2hhcmUgd2hpY2ggYmVsb25nZWQgdG8gQXJ0ZW1pcyBvZiB0aGUgRXBoZXNpYW5zIGhlIGxlZnQgYmVoaW5kLCBhdCB0aGUgdGltZSB3aGVuIGhlIHdhcyByZXR1cm5pbmcgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwNCIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPiB3aXRoIEFnZXNpbGF1cyB0byB0YWtlIHBhcnQgaW4gdGhlIGNhbXBhaWduIGFnYWluc3QgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2ODMiIGtleT0idGduLDcwMDI2ODMiPkJvZW90aWE8L3BsYWNlTmFtZT4sPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JbiA8ZGF0ZSBhdXRobmFtZT0iLTM5NCIgdmFsdWU9Ii0zOTQiPjM5NDwvZGF0ZT4gQi5DLiwgZW5kaW5nIGluIHRoZSBoYXJkLWZvdWdodCBiYXR0bGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEyMzUiIGtleT0idGduLDcwMTEyMzUiPkNvcm9uZWE8L3BsYWNlTmFtZT4sIGF0IHdoaWNoIFhlbm9waG9uIHdhcyBwcmVzZW50LiBjcC4gPGJpYmwgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gNC4yLjEiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gNC4yLjEtODwvYmlibD4sIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEhlbGwuIDQuMy4xIiB2YWxpZD0ieWVzIj5YZW4uIEhlbGwuIDQuMy4xLTIxPC9iaWJsPi48L25vdGU+IGluIGNoYXJnZSBvZiBNZWdhYnl6dXMsIHRoZSBzYWNyaXN0YW4gb2YgQXJ0ZW1pcywgZm9yIHRoZSByZWFzb24gdGhhdCBoaXMgb3duIGpvdXJuZXkgc2VlbWVkIGxpa2VseSB0byBiZSBhIGRhbmdlcm91cyBvbmU7IGFuZCBoaXMgaW5zdHJ1Y3Rpb25zIHdlcmUgdGhhdCBpbiBjYXNlIGhlIHNob3VsZCBlc2NhcGUgd2l0aCBoaXMgbGlmZSwgdGhlIG1vbmV5IHdhcyB0byBiZSByZXR1cm5lZCB0byBoaW0sIGJ1dCBpbiBjYXNlIGFueSBpbGwgc2hvdWxkIGJlZmFsbCBoaW0sIE1lZ2FieXp1cyB3YXMgdG8gY2F1c2UgdG8gYmUgbWFkZSBhbmQgZGVkaWNhdGVkIHRvIEFydGVtaXMgd2hhdGV2ZXIgb2ZmZXJpbmcgaGUgdGhvdWdodCB3b3VsZCBwbGVhc2UgdGhlIGdvZGRlc3MuCjxtaWxlc3RvbmUgbj0iNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluIHRoZSB0aW1lIG9mIFhlbm9waG9uJ3MgZXhpbGU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldoaWNoIHdhcyBwcm9iYWJseSBkdWUgdG8gaGlzIHRha2luZyBwYXJ0IGluIHRoZSBleHBlZGl0aW9uIG9mIDxwZXJzTmFtZT5DeXJ1czwvcGVyc05hbWU+LiBjcC4gPGJpYmwgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy4xLjUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy4xLjU8L2JpYmw+Ljwvbm90ZT4gYW5kIHdoaWxlIGhlIHdhcyBsaXZpbmcgYXQgU2NpbGx1cywgbmVhciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE9seW1waWEiIGtleT0icGVyc2V1cyxPbHltcGlhIj5PbHltcGlhPC9wbGFjZU5hbWU+LCB3aGVyZSBoZSBoYWQgYmVlbiBlc3RhYmxpc2hlZCBhcyBhIGNvbG9uaXN0IGJ5IHRoZSBMYWNlZGFlbW9uaWFucywgTWVnYWJ5enVzIGNhbWUgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxPbHltcGlhIiBrZXk9InBlcnNldXMsT2x5bXBpYSI+T2x5bXBpYTwvcGxhY2VOYW1lPiB0byBhdHRlbmQgdGhlIGdhbWVzIGFuZCByZXR1cm5lZCB0byBoaW0gaGlzIGRlcG9zaXQuIFVwb24gcmVjZWl2aW5nIGl0IFhlbm9waG9uIGJvdWdodCBhIHBsb3Qgb2YgZ3JvdW5kIGZvciB0aGUgZ29kZGVzcyBpbiBhIHBsYWNlIHdoaWNoIEFwb2xsbydzIG9yYWNsZSBhcHBvaW50ZWQuCjxtaWxlc3RvbmUgbj0iOCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBpdCBjaGFuY2VkLCB0aGVyZSBmbG93ZWQgdGhyb3VnaCB0aGUgcGxvdCBhIHJpdmVyIG5hbWVkIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU2VsaW51cyIga2V5PSJwZXJzZXVzLFNlbGludXMiPlNlbGludXM8L3BsYWNlTmFtZT47IGFuZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEVwaGVzb3MiIGtleT0icGVyc2V1cyxFcGhlc29zIj5FcGhlc3VzPC9wbGFjZU5hbWU+IGxpa2V3aXNlIGEgU2VsaW51cyByaXZlciBmbG93cyBwYXN0IHRoZSB0ZW1wbGUgb2YgQXJ0ZW1pcy4gSW4gYm90aCBzdHJlYW1zLCBtb3Jlb3ZlciwgdGhlcmUgYXJlIGZpc2ggYW5kIG11c3NlbHMsIHdoaWxlIGluIHRoZSBwbG90IGF0IFNjaWxsdXMgdGhlcmUgaXMgaHVudGluZyBvZiBhbGwgbWFubmVyIG9mIGJlYXN0cyBvZiB0aGUgY2hhc2UuCjxtaWxlc3RvbmUgbj0iOSIgdW5pdD0ic2VjdGlvbiIgLz5IZXJlIFhlbm9waG9uIGJ1aWx0IGFuIGFsdGFyIGFuZCBhIHRlbXBsZSB3aXRoIHRoZSBzYWNyZWQgbW9uZXksIGFuZCBmcm9tIHRoYXQgdGltZSBmb3J0aCBoZSB3b3VsZCBldmVyeSB5ZWFyIHRha2UgdGhlIHRpdGhlIG9mIHRoZSBwcm9kdWN0cyBvZiB0aGUgbGFuZCBpbiB0aGVpciBzZWFzb24gYW5kIG9mZmVyIHNhY3JpZmljZSB0byB0aGUgZ29kZGVzcywgYWxsIHRoZSBjaXRpemVucyBhbmQgdGhlIG1lbiBhbmQgd29tZW4gb2YgdGhlIG5laWdoYm91cmhvb2QgdGFraW5nIHBhcnQgaW4gdGhlIGZlc3RpdmFsLiBBbmQgdGhlIGdvZGRlc3Mgd291bGQgcHJvdmlkZSBmb3IgdGhlIGJhbnF1ZXRlcnMgYmFybGV5IG1lYWwgYW5kIGxvYXZlcyBvZiBicmVhZCwgd2luZSBhbmQgc3dlZXRtZWF0cywgYW5kIGEgcG9ydGlvbiBvZiB0aGUgc2FjcmlmaWNpYWwgdmljdGltcyBmcm9tIHRoZSBzYWNyZWQgaGVyZCBhcyB3ZWxsIGFzIG9mIHRoZSB2aWN0aW1zIHRha2VuIGluIHRoZSBjaGFzZS4KPG1pbGVzdG9uZSBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgWGVub3Bob24ncyBzb25zIGFuZCB0aGUgc29ucyBvZiB0aGUgb3RoZXIgY2l0aXplbnMgdXNlZCB0byBoYXZlIGEgaHVudGluZyBleHBlZGl0aW9uIGF0IHRoZSB0aW1lIG9mIHRoZSBmZXN0aXZhbCwgYW5kIGFueSBncm93biBtZW4gd2hvIHNvIHdpc2hlZCB3b3VsZCBqb2luIHRoZW07IGFuZCB0aGV5IGNhcHR1cmVkIHRoZWlyIGdhbWUgcGFydGx5IGZyb20gdGhlIHNhY3JlZCBwcmVjaW5jdCBpdHNlbGYgYW5kIHBhcnRseSBmcm9tIE1vdW50IFBob2xvZeKAlGJvYXJzIGFuZCBnYXplbGxlcyBhbmQgc3RhZ3MuCjxtaWxlc3RvbmUgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgcGxhY2UgaXMgc2l0dWF0ZWQgb24gdGhlIHJvYWQgd2hpY2ggbGVhZHMgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTA2NSIga2V5PSJ0Z24sNzAxMTA2NSI+TGFjZWRhZW1vbjwvcGxhY2VOYW1lPiB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE9seW1waWEiIGtleT0icGVyc2V1cyxPbHltcGlhIj5PbHltcGlhPC9wbGFjZU5hbWU+LCBhbmQgaXMgYWJvdXQgdHdlbnR5IHN0YWRpYSBmcm9tIHRoZSB0ZW1wbGUgb2YgWmV1cyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE9seW1waWEiIGtleT0icGVyc2V1cyxPbHltcGlhIj5PbHltcGlhPC9wbGFjZU5hbWU+LiBXaXRoaW4gdGhlIHNhY3JlZCBwcmVjaW5jdCB0aGVyZSBpcyBtZWFkb3dsYW5kIGFuZCB0cmVlY292ZXJlZCBoaWxscywgc3VpdGVkIGZvciB0aGUgcmVhcmluZyBvZiBzd2luZSwgZ29hdHMsIGNhdHRsZSBhbmQgaG9yc2VzLCBzbyB0aGF0IGV2ZW4gdGhlIGRyYXVnaHQgYW5pbWFscyB3aGljaCBicmluZyBwZW9wbGUgdG8gdGhlIGZlc3RpdmFsIGhhdmUgdGhlaXIgZmVhc3QgYWxzby4KPG1pbGVzdG9uZSBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5JbW1lZGlhdGVseSBzdXJyb3VuZGluZyB0aGUgdGVtcGxlIGlzIGEgZ3JvdmUgb2YgY3VsdGl2YXRlZCB0cmVlcywgcHJvZHVjaW5nIGFsbCBzb3J0cyBvZiBkZXNzZXJ0IGZydWl0cyBpbiB0aGVpciBzZWFzb24uIFRoZSB0ZW1wbGUgaXRzZWxmIGlzIGxpa2UgdGhlIG9uZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEVwaGVzb3MiIGtleT0icGVyc2V1cyxFcGhlc29zIj5FcGhlc3VzPC9wbGFjZU5hbWU+LCBhbHRob3VnaCBzbWFsbCBhcyBjb21wYXJlZCB3aXRoIGdyZWF0LCBhbmQgdGhlIGltYWdlIG9mIHRoZSBnb2RkZXNzLCBhbHRob3VnaCBjeXByZXNzIHdvb2QgYXMgY29tcGFyZWQgd2l0aCBnb2xkLCBpcyBsaWtlIHRoZSBFcGhlc2lhbiBpbWFnZS4KPG1pbGVzdG9uZSBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5CZXNpZGUgdGhlIHRlbXBsZSBzdGFuZHMgYSB0YWJsZXQgd2l0aCB0aGlzIGluc2NyaXB0aW9uOjxxdW90ZSB0eXBlPSJpbnNjcmlwdCI+VGhlIHBsYWNlIGlzIHNhY3JlZCB0byBBcnRlbWlzLiBIZSB3aG8gaG9sZHMgaXQgYW5kIGVuam95cyBpdHMgZnJ1aXRzIG11c3Qgb2ZmZXIgdGhlIHRpdGhlIGV2ZXJ5IHllYXIgaW4gc2FjcmlmaWNlLCBhbmQgZnJvbSB0aGUgcmVtYWluZGVyIG11c3Qga2VlcCB0aGUgdGVtcGxlIGluIHJlcGFpci4gSWYgYW55IG9uZSBsZWF2ZXMgdGhlc2UgdGhpbmdzIHVuZG9uZSwgdGhlIGdvZGRlc3Mgd2lsbCBsb29rIHRvIGl0LjwvcXVvdGU+CjxtaWxlc3RvbmUgbj0iNCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZWF2aW5nIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDg2MzU3IiBrZXk9InRnbiwxMDg2MzU3Ij5DZXJhc3VzPC9wbGFjZU5hbWU+LCB0aGUgcGVvcGxlIHdobyBoYWQgdGh1cyBmYXIgYmVlbiBjb252ZXllZCBieSBzZWE8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSA8YmlibCBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjMuMSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjMuMTwvYmlibD4uPC9ub3RlPiB3ZW50IG9uIGFzIGJlZm9yZSwgd2hpbGUgdGhlIHJlc3QgY29udGludWVkIHRoZWlyIGpvdXJuZXkgYnkgbGFuZC4KPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSByZWFjaGVkIHRoZSBib3VuZGFyeSBvZiB0aGUgTW9zc3lub2VjaWFucyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkxpdC4gZHdlbGxlcnMgaW4gTW9zc3lucywgb3Igd29vZGVuIHRvd2Vycy4gU2VlIDI2IGJlbG93Ljwvbm90ZT4gdGhleSBzZW50IHRvIHRoZW0gVGltZXNpdGhldXMgdGhlIFRyYXBlenVudGlhbiwgd2hvIHdhcyBvZmZpY2lhbCByZXByZXNlbnRhdGl2ZSBvZiB0aGUgTW9zc3lub2VjaWFucyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiIGtleT0icGVyc2V1cyxUcmFwZXp1cyxBcmNhZGlhIj5UcmFwZXp1czwvcGxhY2VOYW1lPiwgYW5kIGFza2VkIHdoZXRoZXIgaW4gbWFyY2hpbmcgdGhyb3VnaCB0aGVpciBjb3VudHJ5IHRoZXkgd2VyZSB0byByZWdhcmQgaXQgYXMgZnJpZW5kbHkgb3IgaG9zdGlsZS4gVGhlIE1vc3N5bm9lY2lhbnMgcmVwbGllZCB0aGF0IHRoZXkgd291bGQgbm90IHBlcm1pdCB0aGVtIHRvIHBhc3MgdGhyb3VnaDsKPG1pbGVzdG9uZSBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPmZvciB0aGV5IHRydXN0ZWQgaW4gdGhlaXIgc3Ryb25naG9sZHMuIFRoZW4gVGltZXNpdGhldXMgdG9sZCB0aGUgR3JlZWtzIHRoYXQgdGhlIE1vc3N5bm9lY2lhbnMgd2hvIGR3ZWx0IGZhcnRoZXIgb24gd2VyZSBob3N0aWxlIHRvIHRoZXNlIHBlb3BsZSwgYW5kIGl0IHdhcyBkZWNpZGVkIHRvIHN1bW1vbiB0aGVtIGFuZCBzZWUgd2hldGhlciB0aGV5IHdhbnRlZCB0byBjb25jbHVkZSBhbiBhbGxpYW5jZTsgc28gVGltZXNpdGhldXMgd2FzIHNlbnQgdG8gdGhlbSwgYW5kIGJyb3VnaHQgYmFjayB3aXRoIGhpbSB0aGVpciBjaGllZnMuCjxtaWxlc3RvbmUgbj0iNCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgYXJyaXZlZCwgdGhlc2UgY2hpZWZzIG9mIHRoZSBNb3NzeW5vZWNpYW5zIGFuZCB0aGUgZ2VuZXJhbHMgb2YgdGhlIEdyZWVrcyBtZXQgdG9nZXRoZXI7CjxtaWxlc3RvbmUgbj0iNSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgWGVub3Bob24gc3Bva2UgYXMgZm9sbG93cywgVGltZXNpdGhldXMgYWN0aW5nIGFzIGludGVycHJldGVyOiDigJxNb3NzeW5vZWNpYW5zLCB3ZSBkZXNpcmUgdG8gbWFrZSBvdXIgd2F5IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gaW4gc2FmZXR5IGJ5IGxhbmQsIGZvciB3ZSBoYXZlIG5vIHNoaXBzOyBidXQgdGhlc2UgcGVvcGxlLCB3aG8sIGFzIHdlIGhlYXIsIGFyZSB5b3VyIGVuZW1pZXMsIGFyZSB0cnlpbmcgdG8gYmxvY2sgb3VyIHBhc3NhZ2UuCjxtaWxlc3RvbmUgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz5JZiB5b3Ugd2lzaCwgdGhlcmVmb3JlLCBpdCBpcyB3aXRoaW4geW91ciBwb3dlciB0byBzZWN1cmUgdXMgYXMgYWxsaWVzLCB0byBleGFjdCB2ZW5nZWFuY2UgZm9yIGFueSB3cm9uZyB0aGVzZSBwZW9wbGUgaGF2ZSBldmVyIGRvbmUgeW91LCBhbmQgdG8gbWFrZSB0aGVtIGhlbmNlZm9ydGggeW91ciBzdWJqZWN0cy4KPG1pbGVzdG9uZSBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpZiB5b3UgZGlzbWlzcyB1cyB3aXRoIGEgcmVmdXNhbCwgd2hlcmUsIGJldGhpbmsgeW91LCBjb3VsZCB5b3UgZXZlciBhZ2FpbiBzZWN1cmUgc28gbGFyZ2UgYSBmb3JjZSB0byBoZWxwIGZpZ2h0IHlvdXIgYmF0dGxlcz/igJ0KPG1pbGVzdG9uZSBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRvIHRoZXNlIHdvcmRzIHRoZSBjaGllZiBvZiB0aGUgTW9zc3lub2VjaWFucyByZXBsaWVkIHRoYXQgdGhleSBkZXNpcmVkIHRoaXMgYXJyYW5nZW1lbnQgYW5kIGFjY2VwdGVkIHRoZSBhbGxpYW5jZS4KPG1pbGVzdG9uZSBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPuKAnFdlbGwsIHRoZW4s4oCdIHNhaWQgWGVub3Bob24sIOKAnHdoYXQgdXNlIHdpbGwgeW91IHdhbnQgdG8gbWFrZSBvZiB1cyBpZiB3ZSBiZWNvbWUgeW91ciBhbGxpZXMsIGFuZCB3aGF0IGFzc2lzdGFuY2Ugd2lsbCB5b3UsIGluIHlvdXIgdHVybiwgYmUgYWJsZSB0byByZW5kZXIgdXMgaW4gdGhlIG1hdHRlciBvZiBvdXIgcGFzc2FnZSB0aHJvdWdoIHRoaXMgdGVycml0b3J5P+KAnQo8bWlsZXN0b25lIG49IjEwIiB1bml0PSJzZWN0aW9uIiAvPlRoZXkgcmVwbGllZDog4oCcV2UgYXJlIGFibGUgdG8gaW52YWRlIHRoaXMgbGFuZCBvZiB5b3VyIGVuZW1pZXMgYW5kIG91cnMgZnJvbSB0aGUgb3Bwb3NpdGUgc2lkZSwgYW5kIHRvIHNlbmQgdG8geW91IGhlcmUgbm90IG9ubHkgc2hpcHMsIGJ1dCBtZW4gd2hvIHdpbGwgYWlkIHlvdSBpbiB0aGUgZmlnaHRpbmcgYW5kIHdpbGwgZ3VpZGUgeW91IG9uIHlvdXIgd2F5LuKAnQo8bWlsZXN0b25lIG49IjExIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgY29uZmlybWluZyB0aGlzIGFncmVlbWVudCBieSBnaXZpbmcgYW5kIHJlY2VpdmluZyBwbGVkZ2VzIHRoZXkgZGVwYXJ0ZWQuIFRoZSBuZXh0IGRheSB0aGV5IHJldHVybmVkLCBicmluZ2luZyB3aXRoIHRoZW0gdGhyZWUgaHVuZHJlZCBjYW5vZXMsIGVhY2ggbWFkZSBvdXQgb2YgYSBzaW5nbGUgbG9nIGFuZCBlYWNoIGNvbnRhaW5pbmcgdGhyZWUgbWVuLCB0d28gb2Ygd2hvbSBkaXNlbWJhcmtlZCBhbmQgZmVsbCBpbnRvIGxpbmUgdW5kZXIgYXJtcywgd2hpbGUgdGhlIHRoaXJkIHJlbWFpbmVkIGluIHRoZSBjYW5vZS4KPG1pbGVzdG9uZSBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZSBzZWNvbmQgZ3JvdXAgdG9vayB0aGVpciBjYW5vZXMgYW5kIHNhaWxlZCBiYWNrIGFnYWluLCBhbmQgdGhvc2Ugd2hvIHN0YXllZCBiZWhpbmQgbWFyc2hhbGxlZCB0aGVtc2VsdmVzIGluIHRoZSBmb2xsb3dpbmcgd2F5LiBUaGV5IHRvb2sgcG9zaXRpb24gaW4gbGluZXMgb2YgYWJvdXQgYSBodW5kcmVkIGVhY2gsIGxpa2UgY2hvcmFsIGRhbmNlcnMgcmFuZ2VkIG9wcG9zaXRlIG9uZSBhbm90aGVyLCBhbGwgb2YgdGhlbSB3aXRoIHdpY2tlciBzaGllbGRzIGNvdmVyZWQgd2l0aCB3aGl0ZSwgc2hhZ2d5IG94LWhpZGUgYW5kIGxpa2UgYW4gaXZ5IGxlYWYgaW4gc2hhcGUsIGFuZCBlYWNoIG1hbiBob2xkaW5nIGluIGhpcyByaWdodCBoYW5kIGEgbGFuY2UgYWJvdXQgc2l4IGN1Yml0cyBsb25nLCB3aXRoIGEgc3BlYXJoZWFkIGF0IG9uZSBlbmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiA8YmlibCBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA0LjcuMTYiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNC43LjE2PC9iaWJsPiBhbmQgbm90ZSB0aGVyZW9uLjwvbm90ZT4gYW5kIGEgcm91bmQgYmFsbCBhdCB0aGUgYnV0dCBlbmQgb2YgdGhlIHNoYWZ0Lgo8bWlsZXN0b25lIG49IjEzIiB1bml0PSJzZWN0aW9uIiAvPlRoZXkgd29yZSBzaG9ydCB0dW5pY3Mgd2hpY2ggZGlkIG5vdCByZWFjaCB0aGVpciBrbmVlcyBhbmQgd2VyZSBhcyB0aGljayBhcyBhIGxpbmVuIGJhZyBmb3IgYmVkY2xvdGhlcywgYW5kIHVwb24gdGhlaXIgaGVhZHMgbGVhdGhlcm4gaGVsbWV0cyBqdXN0IHN1Y2ggYXMgdGhlIFBhcGhsYWdvbmlhbiBoZWxtZXRzLCB3aXRoIGEgdHVmdCBpbiB0aGUgbWlkZGxlIHZlcnkgbGlrZSBhIHRpYXJhIGluIHNoYXBlOyBhbmQgdGhleSBoYWQgYWxzbyBpcm9uIGJhdHRsZS1heGVzLgo8bWlsZXN0b25lIG49IjE0IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoZXkgaGFkIGZvcm1lZCB0aGVpciBsaW5lcyBvbmUgb2YgdGhlbSBsZWQgb2ZmLCBhbmQgdGhlIHJlc3QgYWZ0ZXIgaGltLCBldmVyeSBtYW4gb2YgdGhlbSwgZmVsbCBpbnRvIGEgcmh5dGhtaWMgbWFyY2ggYW5kIHNvbmcsIGFuZCBwYXNzaW5nIHRocm91Z2ggdGhlIGJhdHRhbGlvbnMgYW5kIHRocm91Z2ggdGhlIHF1YXJ0ZXJzIG9mIHRoZSBHcmVla3MgdGhleSB3ZW50IHN0cmFpZ2h0IG9uIGFnYWluc3QgdGhlIGVuZW15LCB0b3dhcmQgYSBzdHJvbmdob2xkIHdoaWNoIHNlZW1lZCB0byBiZSBlc3BlY2lhbGx5IGFzc2FpbGFibGUuCjxtaWxlc3RvbmUgbj0iMTUiIHVuaXQ9InNlY3Rpb24iIC8+SXQgd2FzIHNpdHVhdGVkIGluIGZyb250IG9mIHRoZSBjaXR5IHdoaWNoIGlzIGNhbGxlZCBieSB0aGVtIE1ldHJvcG9saXMgYW5kIGNvbnRhaW5zIHRoZSBjaGllZiBjaXRhZGVsIG9mIHRoZSBNb3NzeW5vZWNpYW5zLiBJbiBmYWN0LCBpdCB3YXMgZm9yIHRoZSBwb3NzZXNzaW9uIG9mIHRoaXMgY2l0YWRlbCB0aGF0IHRoZSB3YXIgd2FzIGdvaW5nIG9uOyBmb3IgdGhvc2Ugd2hvIGF0IGFueSB0aW1lIGhlbGQgaXQgd2VyZSBkZWVtZWQgdG8gYmUgbWFzdGVycyBvZiBhbGwgdGhlIG90aGVyIE1vc3N5bm9lY2lhbnMsIGFuZCB0aGV5IHNhaWQgdGhhdCB0aGUgcHJlc2VudCBvY2N1cGFudHMgZGlkIG5vdCBob2xkIGl0IGJ5IHJpZ2h0LCBidXQgdGhhdCBpdCB3YXMgY29tbW9uIHByb3BlcnR5IGFuZCB0aGV5IGhhZCBzZWl6ZWQgaXQgaW4gb3JkZXIgdG8gZ2FpbiBhIHNlbGZpc2ggYWR2YW50YWdlLgo8bWlsZXN0b25lIG49IjE2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGF0dGFja2luZyBwYXJ0eSB3YXMgZm9sbG93ZWQgYnkgc29tZSBvZiB0aGUgR3JlZWtzLCBub3QgdW5kZXIgb3JkZXJzIGZyb20gdGhlaXIgZ2VuZXJhbHMsIGJ1dCBzZWVraW5nIHBsdW5kZXIuIEFzIHRoZXkgYXBwcm9hY2hlZCwgdGhlIGVuZW15IGZvciBhIHRpbWUga2VwdCBxdWlldDsgYnV0IHdoZW4gdGhleSBoYWQgZ290IG5lYXIgdGhlIHN0cm9uZ2hvbGQsIHRoZXkgc2FsbGllZCBmb3J0aCBhbmQgcHV0IHRoZW0gdG8gZmxpZ2h0LCBraWxsaW5nIGEgY29uc2lkZXJhYmxlIG51bWJlciBvZiB0aGUgYmFyYmFyaWFucyBhbmQgc29tZSBvZiB0aGUgR3JlZWtzIHdobyBoYWQgZ29uZSB1cCB0aGUgaGlsbCB3aXRoIHRoZW0sIGFuZCBwdXJzdWluZyB0aGUgcmVzdCB1bnRpbCB0aGV5IHNhdyB0aGUgR3JlZWtzIGNvbWluZyB0byB0aGUgcmVzY3VlOwo8bWlsZXN0b25lIG49IjE3IiB1bml0PSJzZWN0aW9uIiAvPnRoZW4gdGhleSB0dXJuZWQgYW5kIGZlbGwgYmFjaywgYW5kIGFmdGVyIGN1dHRpbmcgb2ZmIHRoZSBoZWFkcyBvZiB0aGUgZGVhZCBtZW4gZGlzcGxheWVkIHRoZW0gdG8gdGhlIEdyZWVrcyBhbmQgdG8gdGhlaXIgb3duIGVuZW1pZXMsIGF0IHRoZSBzYW1lIHRpbWUgZGFuY2luZyB0byBhIGtpbmQgb2Ygc3RyYWluIHdoaWNoIHRoZXkgc2FuZy4KPG1pbGVzdG9uZSBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIEdyZWVrcyB3ZXJlIGV4Y2VlZGluZ2x5IGFuZ3J5LCBub3Qgb25seSBiZWNhdXNlIHRoZSBlbmVteSBoYWQgYmVlbiBtYWRlIGJvbGRlciwgYnV0IGJlY2F1c2UgdGhlIEdyZWVrcyB3aG8gd2VudCB0byB0aGUgYXR0YWNrIHdpdGggdGhlIGJhcmJhcmlhbnMgaGFkIHRha2VuIHRvIGZsaWdodCwgdGhvdWdoIGluIHZlcnkgY29uc2lkZXJhYmxlIG51bWJlcnPigJRhIHRoaW5nIHdoaWNoIHRoZXkgaGFkIG5ldmVyIGRvbmUgYmVmb3JlIGluIHRoZSBjb3Vyc2Ugb2YgdGhlIGV4cGVkaXRpb24uCjxtaWxlc3RvbmUgbj0iMTkiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuIFhlbm9waG9uIGNhbGxlZCB0aGUgR3JlZWtzIHRvZ2V0aGVyIGFuZCBzYWlkOiDigJxGZWxsb3ctc29sZGllcnMsIGRvIG5vdCBieSBhbnkgbWVhbnMgbG9zZSBoZWFydCBvbiBhY2NvdW50IG9mIHdoYXQgaGFzIGhhcHBlbmVkOyBmb3IgYmUgc3VyZSB0aGF0IGEgZ29vZCB0aGluZyBhbHNvIGhhcyBoYXBwZW5lZCwgbm8gbGVzcyBpbXBvcnRhbnQgdGhhbiB0aGUgZXZpbCB0aGluZy4KPG1pbGVzdG9uZSBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGUgZmlyc3QgcGxhY2UsIHlvdSBrbm93IHRoYXQgdGhvc2Ugd2hvIGFyZSB0byBndWlkZSB1cyBhcmUgcmVhbGx5IGVuZW1pZXMgdG8gdGhlIHBlb3BsZSB3aG9zZSBlbmVtaWVzIHdlIGFsc28gYXJlIGNvbXBlbGxlZCB0byBiZTsgc2Vjb25kbHksIGFuZCB0b3VjaGluZyBvdXIgb3duIG1lbiwgdGhvc2UgYW1vbmcgdGhlbSB3aG8gdG9vayBsaXR0bGUgdGhvdWdodCBvZiB0aGUgYmF0dGxlIGZvcm1hdGlvbiB3ZSB1c2UgYW5kIGdvdCB0aGUgaWRlYSB0aGF0IHRoZXkgY291bGQgYWNjb21wbGlzaCB0aGUgc2FtZSByZXN1bHRzIGluIGNvbXBhbnkgd2l0aCB0aGUgYmFyYmFyaWFucyBhcyB0aGV5IGNvdWxkIHdpdGggdXMsIGhhdmUgcGFpZCB0aGUgcGVuYWx0eSzigJRhbm90aGVyIHRpbWUgdGhleSB3aWxsIGJlIGxlc3MgbGlrZWx5IHRvIGxlYXZlIG91ciBvcmRlcmVkIGxpbmVzLgo8bWlsZXN0b25lIG49IjIxIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB5b3UgbXVzdCBtYWtlIHJlYWR5IHRvIHByb3ZlIHRvIG91ciBmcmllbmRzIGFtb25nIHRoZSBiYXJiYXJpYW5zIHRoYXQgeW91IGFyZSBiZXR0ZXIgbWVuIHRoYW4gdGhleSwgYW5kIHRvIHNob3cgdGhlIGVuZW15IHRoYXQgdGhleSBhcmUgbm90IGdvaW5nIHRvIGZpZ2h0IGFnYWluc3QgdGhlIHNhbWUgc29ydCBvZiBtZW4gbm93IGFzIHRoZSBkaXNvcmRlcmx5IG1hc3MgdGhleSBtZXQgYmVmb3JlLuKAnQo8bWlsZXN0b25lIG49IjIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgd2FzIHRodXMgdGhhdCB0aGUgR3JlZWtzIHNwZW50IHRoYXQgZGF5OyBidXQgb24gdGhlIG5leHQsIGFmdGVyIG9idGFpbmluZyBmYXZvdXJhYmxlIG9tZW5zIGZyb20gdGhlaXIgc2FjcmlmaWNlcywgdGhleSB0b29rIGJyZWFrZmFzdCwgZm9ybWVkIHRoZSBjb21wYW5pZXMgaW4gY29sdW1uLCBhbmQgYmVnYW4gdGhlIG1hcmNoLCB3aXRoIHRoZSBiYXJiYXJpYW5zIGluIHRoZSBzYW1lIGZvcm1hdGlvbiBwb3N0ZWQgb24gdGhlIGxlZnQsIHRoZSBib3dtZW4gZGlzdHJpYnV0ZWQgaW4gdGhlIHNwYWNlcyBiZXR3ZWVuIHRoZSBjb21wYW5pZXMsIGFuZCB0aGUgdmFuIG9mIHRoZSBob3BsaXRlcyBhIGxpdHRsZSBmYXJ0aGVyIGJhY2suCjxtaWxlc3RvbmUgbj0iMjMiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIHRoZSBlbmVteSBoYWQgc29tZSBuaW1ibGUgdHJvb3BzIHdobyBrZXB0IHJ1bm5pbmcgZG93biB0aGUgaGlsbCBhbmQgcGVsdGluZyB0aGUgR3JlZWtzIHdpdGggc3RvbmVzLCBhbmQgdGhlc2UgZmVsbG93cyB3ZXJlIGhlbGQgYmFjayBieSB0aGUgYm93bWVuIGFuZCBwZWx0YXN0cy4gVGhlIHJlc3Qgb2YgdGhlIEdyZWVrIGFybXksIHByb2NlZWRpbmcgYXQgYSB3YWxrLCBhZHZhbmNlZCBmaXJzdCBhZ2FpbnN0IHRoZSBzdHJvbmdob2xkIGZyb20gd2hpY2ggdGhlIGJhcmJhcmlhbnMgYW5kIHRob3NlIHdpdGggdGhlbSBoYWQgYmVlbiBwdXQgdG8gZmxpZ2h0IG9uIHRoZSBwcmVjZWRpbmcgZGF5OyBmb3IgaXQgd2FzIHRoZXJlIHRoYXQgdGhlIGVuZW15IHdlcmUgbm93IGRyYXduIHVwIHRvIG9wcG9zZSB0aGVtLgo8bWlsZXN0b25lIG49IjI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBiYXJiYXJpYW5zIGRpZCwgaW5kZWVkLCBtZWV0IHRoZSBhdHRhY2sgb2YgdGhlIHBlbHRhc3RzIGFuZCBlbmdhZ2VkIHRoZW0gaW4gYmF0dGxlLCBidXQgd2hlbiB0aGUgaG9wbGl0ZXMgZ290IG5lYXIgdGhlbSwgdGhleSB0dXJuZWQgdG8gZmxpZ2h0LiBUaGUgcGVsdGFzdHMgYXQgb25jZSBtYWRlIGFmdGVyIHRoZW0gYW5kIHB1cnN1ZWQgdGhlbSB1cCB0aGUgaGlsbCB0byB0aGUgY2l0eSwgd2hpbGUgdGhlIGhvcGxpdGVzIGZvbGxvd2VkIGFsb25nLCBzdGlsbCBrZWVwaW5nIHRoZWlyIGxpbmVzLgo8bWlsZXN0b25lIG49IjI1IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSB3ZXJlIGF0IHRoZSB0b3AgYW5kIG5lYXIgdGhlIGhvdXNlcyBvZiBNZXRyb3BvbGlzLCBhdCB0aGF0IG1vbWVudCBhbGwgdGhlIHRyb29wcyBvZiB0aGUgZW5lbXkgbWFzc2VkIHRvZ2V0aGVyIGFuZCBkaWQgYmF0dGxlOyB0aGV5IGh1cmxlZCB0aGVpciBsYW5jZXMsIGFuZCB3aXRoIG90aGVyIHNwZWFycyB3aGljaCB0aGV5IGhhZCwgc28gdGhpY2sgYW5kIGxvbmcgdGhhdCBhIG1hbiBjb3VsZCBvbmx5IGNhcnJ5IHRoZW0gd2l0aCBkaWZmaWN1bHR5LCB0cmllZCB0byBkZWZlbmQgdGhlbXNlbHZlcyBpbiBoYW5kIHRvIGhhbmQgZmlnaHRpbmcuCjxtaWxlc3RvbmUgbj0iMjYiIHVuaXQ9InNlY3Rpb24iIC8+QXMgdGhlIEdyZWVrcywgaG93ZXZlciwgcmVmdXNlZCB0byBnaXZlIHdheSwgYnV0IGtlcHQgcHVzaGluZyBvbiB0byBjbG9zZSBxdWFydGVycywgdGhlIGJhcmJhcmlhbnMgdG9vayB0byBmbGlnaHQgZnJvbSB0aGF0IHBvaW50IGFsc28sIGV2ZXJ5IG1hbiBvZiB0aGVtIGFiYW5kb25pbmcgdGhlIGZvcnRyZXNzLiBUaGVpciBraW5nIGluIGhpcyB3b29kZW4gdG93ZXIgYnVpbHQgdXBvbiB0aGUgY2l0YWRlbCwgd2hvbSBhbGwgdGhlIHBlb3BsZSBqb2ludGx5IG1haW50YWluIGFuZCBndWFyZCBpbiBoaXMgYWJpZGluZyBwbGFjZSB0aGVyZSwgcmVmdXNlZCB0byBjb21lIGZvcnRoLCBhcyBkaWQgYWxzbyB0aGUgY29tbWFuZGVyIG9mIHRoZSBzdHJvbmdob2xkPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLiBlLiwgdGhlIG9uZSBtZW50aW9uZWQgYWJvdmUsIDE0LCAyMy48L25vdGU+IHdoaWNoIGhhZCBiZWVuIGNhcHR1cmVkIGVhcmxpZXIsIHNvIHRoZXkgd2VyZSBidXJuZWQgdXAgd2hlcmUgdGhleSB3ZXJlLCBhbG9uZyB3aXRoIHRoZWlyIHRvd2Vycy4KPG1pbGVzdG9uZSBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluIHBsdW5kZXJpbmcgdGhlIHN0cm9uZ2hvbGRzIHRoZSBHcmVla3MgZm91bmQgaW4gdGhlIGhvdXNlcyBhbmNlc3RyYWwgc3RvcmVzLCBhcyB0aGUgTW9zc3lub2VjaWFucyBkZXNjcmliZWQgdGhlbSwgb2YgaGVhcGVkIHVwIGxvYXZlcywgd2hpbGUgdGhlIG5ldyBjb3JuIHdhcyBsYWlkIGF3YXkgd2l0aCB0aGUgc3RyYXcsIHRoZSBtb3N0IG9mIGl0IGJlaW5nIHNwZWx0Lgo8bWlsZXN0b25lIG49IjI4IiB1bml0PSJzZWN0aW9uIiAvPlRoZXkgYWxzbyBmb3VuZCBzbGljZXMgb2YgZG9scGhpbiBzYWx0ZWQgYXdheSBpbiBqYXJzLCBhbmQgaW4gb3RoZXIgdmVzc2VscyBkb2xwaGluIGJsdWJiZXIsIHdoaWNoIHRoZSBNb3NzeW5vZWNpYW5zIHVzZWQgaW4gdGhlIHNhbWUgd2F5IGFzIHRoZSBHcmVla3MgdXNlIG9saXZlIG9pbDsKPG1pbGVzdG9uZSBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgb24gdGhlIHVwcGVyIGZsb29ycyBvZiB0aGUgaG91c2VzIHRoZXJlIHdlcmUgbGFyZ2UgcXVhbnRpdGllcyBvZiBmbGF0IG51dHMsIHdpdGhvdXQgYW55IGRpdmlzaW9ucy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuIGUuLCBzdWNoIGFzIHdhbG51dHMgaGF2ZS4gWGVub3Bob24gcHJvYmFibHkgbWVhbnMgY2hlc3RudXRzLjwvbm90ZT4gT3V0IG9mIHRoZXNlIG51dHMsIGJ5IGJvaWxpbmcgdGhlbSBhbmQgYmFraW5nIHRoZW0gaW50byBsb2F2ZXMsIHRoZXkgbWFkZSB0aGUgYnJlYWQgd2hpY2ggdGhleSB1c2VkIG1vc3QuIFRoZSBHcmVla3MgYWxzbyBmb3VuZCB3aW5lLCB3aGljaCBieSByZWFzb24gb2YgaXRzIGhhcnNobmVzcyBhcHBlYXJlZCB0byBiZSBzaGFycCB3aGVuIHRha2VuIHVubWl4ZWQsIGJ1dCBtaXhlZCB3aXRoIHdhdGVyIHdhcyBmcmFncmFudCBhbmQgZGVsaWNpb3VzLgo8bWlsZXN0b25lIG49IjMwIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGV5IGhhZCBicmVha2Zhc3RlZCB0aGVyZSwgdGhlIEdyZWVrcyB0b29rIHVwIHRoZWlyIG9ud2FyZCBtYXJjaCwgYWZ0ZXIgaGFuZGluZyBvdmVyIHRoZSBmb3J0cmVzcyB0byB0aGUgTW9zc3lub2VjaWFucyB3aG8gaGFkIGhlbHBlZCB0aGVtIGluIHRoZSBmaWdodGluZy4gQXMgZm9yIHRoZSBvdGhlciBzdHJvbmdob2xkcyB3aGljaCB0aGV5IHBhc3NlZCBieSwgYmVsb25naW5nIHRvIHRob3NlIHdobyBzaWRlZCB3aXRoIHRoZSBlbmVteSwgdGhlIG1vc3QgYWNjZXNzaWJsZSB3ZXJlIGluIHNvbWUgY2FzZXMgYWJhbmRvbmVkIGJ5IHRoZWlyIG9jY3VwYW50cywgaW4gb3RoZXIgY2FzZXMgc3VycmVuZGVyZWQgdm9sdW50YXJpbHkuCjxtaWxlc3RvbmUgbj0iMzEiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIGdyZWF0ZXIgcGFydCBvZiB0aGVzZSBwbGFjZXMgd2VyZSBvZiB0aGUgZm9sbG93aW5nIGRlc2NyaXB0aW9uOiBUaGUgdG93bnMgd2VyZSBlaWdodHkgc3RhZGlhIGRpc3RhbnQgZnJvbSBvbmUgYW5vdGhlciwgc29tZSBtb3JlLCBhbmQgc29tZSBsZXNzOyBidXQgdGhlIGluaGFiaXRhbnRzIGNvdWxkIGhlYXIgb25lIGFub3RoZXIgc2hvdXRpbmcgZnJvbSBvbmUgdG93biB0byB0aGUgbmV4dCwgc3VjaCBoZWlnaHRzIGFuZCB2YWxsZXlzIHRoZXJlIHdlcmUgaW4gdGhlIGNvdW50cnkuCjxtaWxlc3RvbmUgbj0iMzIiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIHdoZW4gdGhlIEdyZWVrcywgYXMgdGhleSBwcm9jZWVkZWQsIHdlcmUgYW1vbmcgdGhlIGZyaWVuZGx5IE1vc3N5bm9lY2lhbnMsIHRoZXkgd291bGQgZXhoaWJpdCB0byB0aGVtIGZhdHRlbmVkIGNoaWxkcmVuIG9mIHRoZSB3ZWFsdGh5IGluaGFiaXRhbnRzLCB3aG8gaGFkIGJlZW4gbm91cmlzaGVkIG9uIGJvaWxlZCBudXRzIGFuZCB3ZXJlIHNvZnQgYW5kIHdoaXRlIHRvIGFuIGV4dHJhb3JkaW5hcnkgZGVncmVlLCBhbmQgcHJldHR5IG5lYXJseSBlcXVhbCBpbiBsZW5ndGggYW5kIGJyZWFkdGgsIHdpdGggdGhlaXIgYmFja3MgYWRvcm5lZCB3aXRoIG1hbnkgY29sb3VycyBhbmQgdGhlaXIgZm9yZSBwYXJ0cyBhbGwgdGF0dG9vZWQgd2l0aCBmbG93ZXIgcGF0dGVybnMuCjxtaWxlc3RvbmUgbj0iMzMiIHVuaXQ9InNlY3Rpb24iIC8+VGhlc2UgTW9zc3lub2VjaWFucyB3YW50ZWQgYWxzbyB0byBoYXZlIGludGVyY291cnNlIG9wZW5seSB3aXRoIHRoZSB3b21lbiB3aG8gYWNjb21wYW5pZWQgdGhlIEdyZWVrcywgZm9yIHRoYXQgd2FzIHRoZWlyIG93biBmYXNoaW9uLiBBbmQgYWxsIG9mIHRoZW0gd2VyZSB3aGl0ZSwgdGhlIG1lbiBhbmQgdGhlIHdvbWVuIGFsaWtlLgo8bWlsZXN0b25lIG49IjM0IiB1bml0PSJzZWN0aW9uIiAvPlRoZXkgd2VyZSBzZXQgZG93biBieSB0aGUgR3JlZWtzIHdobyBzZXJ2ZWQgdGhyb3VnaCB0aGUgZXhwZWRpdGlvbiwgYXMgdGhlIG1vc3QgdW5jaXZpbGl6ZWQgcGVvcGxlIHdob3NlIGNvdW50cnkgdGhleSB0cmF2ZXJzZWQsIHRoZSBmdXJ0aGVzdCByZW1vdmVkIGZyb20gR3JlZWsgY3VzdG9tcy4gRm9yIHRoZXkgaGFiaXR1YWxseSBkaWQgaW4gcHVibGljIHRoZSB0aGluZ3MgdGhhdCBvdGhlciBwZW9wbGUgd291bGQgZG8gb25seSBpbiBwcml2YXRlLCBhbmQgd2hlbiB0aGV5IHdlcmUgYWxvbmUgdGhleSB3b3VsZCBiZWhhdmUganVzdCBhcyBpZiB0aGV5IHdlcmUgaW4gdGhlIGNvbXBhbnkgb2Ygb3RoZXJzLCB0YWxraW5nIHRvIHRoZW1zZWx2ZXMsIGxhdWdoaW5nIGF0IHRoZW1zZWx2ZXMsIGFuZCBkYW5jaW5nIGluIHdoYXRldmVyIHNwb3QgdGhleSBjaGFuY2VkIHRvIGJlLCBhcyB0aG91Z2ggdGhleSB3ZXJlIGdpdmluZyBhbiBleGhpYml0aW9uIHRvIG90aGVycy4KPG1pbGVzdG9uZSBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRocm91Z2ggdGhpcyBjb3VudHJ5LCBib3RoIHRoZSBob3N0aWxlIGFuZCB0aGUgZnJpZW5kbHkgcG9ydGlvbnMgb2YgaXQsIHRoZSBHcmVla3MgbWFyY2hlZCBlaWdodCBzdGFnZXMsIHJlYWNoaW5nIHRoZW4gdGhlIGxhbmQgb2YgdGhlIENoYWx5YmlhbnMuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BcHBhcmVudGx5IGFuIG91dGx5aW5nIHRyaWJlIG9mIHRoZSBwZW9wbGUgd2hvc2UgdGVycml0b3J5IHRoZSBHcmVla3MgaGFkIHByZXZpb3VzbHkgcGFzc2VkIHRocm91Z2guIGNwLiA8YmlibCBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA0LjcuMTUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNC43LjE1PC9iaWJsPiBmZi48L25vdGU+IFRoZXNlIHBlb3BsZSB3ZXJlIGZldyBpbiBudW1iZXIgYW5kIHN1YmplY3QgdG8gdGhlIE1vc3N5bm9lY2lhbnMsIGFuZCBtb3N0IG9mIHRoZW0gZ2FpbmVkIHRoZWlyIGxpdmVsaWhvb2QgZnJvbSB3b3JraW5nIGluIGlyb24uCjxtaWxlc3RvbmUgbj0iMiIgdW5pdD0ic2VjdGlvbiIgLz5OZXh0IHRoZXkgcmVhY2hlZCB0aGUgY291bnRyeSBvZiB0aGUgVGliYXJlbmlhbnMsIHdoaWNoIHdhcyBtdWNoIG1vcmUgbGV2ZWwgYW5kIGhhZCBmb3J0cmVzc2VzIHVwb24gdGhlIHNlYWNvYXN0IHRoYXQgd2VyZSBsZXNzIHN0cm9uZy4gVGhlIGdlbmVyYWxzIHdlcmUgZGVzaXJvdXMgb2YgYXR0YWNraW5nIHRoZXNlIGZvcnRyZXNzZXMsIHNvIGFzIHRvIGdldCBhIGxpdHRsZSBzb21ldGhpbmcgZm9yIHRoZSBhcm15LCBhbmQgYWNjb3JkaW5nbHkgdGhleSB3b3VsZCBub3QgYWNjZXB0IHRoZSBnaWZ0cyBvZiBob3NwaXRhbGl0eSB3aGljaCBjYW1lIGZyb20gdGhlIFRpYmFyZW5pYW5zLCBidXQsIGRpcmVjdGluZyB0aGVtIHRvIHdhaXQgdW50aWwgdGhleSBzaG91bGQgdGFrZSBjb3Vuc2VsLCBwcm9jZWVkZWQgdG8gb2ZmZXIgc2FjcmlmaWNlcy4KPG1pbGVzdG9uZSBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIG1hbnkgdmljdGltcyBoYWQgYmVlbiBzYWNyaWZpY2VkIGFsbCB0aGUgc2VlcnMgZmluYWxseSBkZWNsYXJlZCB0aGUgb3BpbmlvbiB0aGF0IHRoZSBnb2RzIGluIG5vIHdpc2UgcGVybWl0dGVkIHdhci4gU28gdGhlbiB0aGUgZ2VuZXJhbHMgYWNjZXB0ZWQgdGhlIGdpZnRzIG9mIGhvc3BpdGFsaXR5LCBhbmQgcHJvY2VlZGluZyBhcyB0aHJvdWdoIGEgZnJpZW5kbHkgY291bnRyeSBmb3IgdHdvIGRheXMsIHRoZXkgYXJyaXZlZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjQ3OSIga2V5PSJ0Z24sNzAwMjQ3OSI+Q290eW9yYTwvcGxhY2VOYW1lPiwgYSBHcmVlayBjaXR5IGFuZCBhIGNvbG9ueSBvZiB0aGUgU2lub3BlYW5zLCBzaXR1YXRlZCBpbiB0aGUgdGVycml0b3J5IG9mIHRoZSBUaWJhcmVuaWFucy4KPG1pbGVzdG9uZSBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWN0aW9uIDQgaW4gdGhlIG1hbnVzY3JpcHQgaXMgYXMgZm9sbG93cy4gVGhpcyBwYXNzYWdlIGlzIHJlZ2FyZGVkIGJ5IGVkZC4gZ2VuZXJhbGx5IGFzIGFuIGludGVycG9sYXRpb24uIFsxOCw2MDAgc3RhZGlhID0gYy4gMjA1MCBFbmdsaXNoIG1pbGVzLl08L25vdGU+W0FzIGZhciBhcyB0aGlzIHBvaW50IHRoZSBhcm15IHRyYXZlbGxlZCBieSBsYW5kLiBUaGUgbGVuZ3RoIGluIGRpc3RhbmNlIG9mIHRoZSBkb3dud2FyZCBqb3VybmV5LCBmcm9tIHRoZSBiYXR0bGVmaWVsZCBuZWFyIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjI2IiBrZXk9InRnbiw3MDAyNjI2Ij5CYWJ5bG9uPC9wbGFjZU5hbWU+IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNDc5IiBrZXk9InRnbiw3MDAyNDc5Ij5Db3R5b3JhPC9wbGFjZU5hbWU+LCB3YXMgb25lIGh1bmRyZWQgYW5kIHR3ZW50eS10d28gc3RhZ2VzLCBzaXggaHVuZHJlZCBhbmQgdHdlbnR5IHBhcmFzYW5ncywgb3IgZWlnaHRlZW4gdGhvdXNhbmQsIHNpeCBodW5kcmVkIHN0YWRpYTsgYW5kIGluIHRpbWUsIGVpZ2h0IG1vbnRocy5dCjxtaWxlc3RvbmUgbj0iNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSB0aGV5IHJlbWFpbmVkIGZvcnR5LWZpdmUgZGF5cy4gRHVyaW5nIHRoaXMgdGltZSB0aGV5IGZpcnN0IG9mIGFsbCBzYWNyaWZpY2VkIHRvIHRoZSBnb2RzLCBhbmQgYWxsIHRoZSBzZXZlcmFsIGdyb3VwcyBvZiB0aGUgR3JlZWtzLCBuYXRpb24gYnkgbmF0aW9uLCBpbnN0aXR1dGVkIGZlc3RhbCBwcm9jZXNzaW9ucyBhbmQgYXRobGV0aWMgY29udGVzdHMuCjxtaWxlc3RvbmUgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgcHJvdmlzaW9ucywgdGhleSBnb3QgdGhlbSBwYXJ0bHkgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjc2MCIga2V5PSJ0Z24sNzAxNjc2MCI+UGFwaGxhZ29uaWE8L3BsYWNlTmFtZT4gYW5kIHBhcnRseSBmcm9tIHRoZSBlc3RhdGVzIG9mIHRoZSBDb3R5b3JpdGVzOyBmb3IgdGhlIGxhdHRlciB3b3VsZCBub3QgcHJvdmlkZSB0aGVtIHdpdGggYSBtYXJrZXQsIG5vciB3b3VsZCB0aGV5IHJlY2VpdmUgdGhlaXIgc2ljayB3aXRoaW4gdGhlIHdhbGxzIG9mIHRoZSBjaXR5Lgo8bWlsZXN0b25lIG49IjciIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFud2hpbGUgYW1iYXNzYWRvcnMgY2FtZSBmcm9tIFNpbm9wZSwgZnVsbCBvZiBmZWFycyBub3Qgb25seSBmb3IgdGhlIGNpdHkgb2YgdGhlIENvdHlvcml0ZXMgKGZvciBpdCBiZWxvbmdlZCB0byB0aGVtIGFuZCBpdHMgaW5oYWJpdGFudHMgcGFpZCB0aGVtIHRyaWJ1dGUpLCBidXQgYWxzbyBmb3IgaXRzIHRlcnJpdG9yeSwgYmVjYXVzZSB0aGV5IGhlYXJkIGl0IHdhcyBiZWluZyBsYWlkIHdhc3RlLiBBbmQgY29taW5nIHRvIHRoZSBHcmVlayBjYW1wIHRoZXkgc3Bva2UgYXMgZm9sbG93cywgSGVjYXRvbnltdXMsIHdobyB3YXMgcmVnYXJkZWQgYXMgYSBjbGV2ZXIgb3JhdG9yLCBiZWluZyB0aGVpciBzcG9rZXNtYW46CjxtaWxlc3RvbmUgbj0iOCIgdW5pdD0ic2VjdGlvbiIgLz7igJxTb2xkaWVycyzigJ0gaGUgc2FpZCwg4oCcdGhlIGNpdHkgb2YgdGhlIFNpbm9wZWFucyBoYXMgc2VudCB1cywgZmlyc3QsIHRvIGFwcGxhdWQgeW91IGFzIEdyZWVrcyB3aG8gc3RhbmQgdmljdG9ycyBvdmVyIGJhcmJhcmlhbnMsIGFuZCwgc2Vjb25kbHksIHRvIGNvbmdyYXR1bGF0ZSB5b3UgdGhhdCB5b3UgaGF2ZSBtYWRlIHlvdXIgd2F5IHRocm91Z2ggbWFueSBkcmVhZGZ1bCB0cm91YmxlcywgYXMgd2UgaGF2ZSBoZWFyZCwgaW4gc2FmZXR5IHRvIHRoaXMgcGxhY2UuCjxtaWxlc3RvbmUgbj0iOSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2UgY2xhaW0sIGJlaW5nIG91cnNlbHZlcyBHcmVla3MsIHRvIHJlY2VpdmUgZnJvbSB5b3UsIHdobyBhcmUgR3JlZWtzIGFsc28sIGdvb2QgdHJlYXRtZW50IGFuZCBubyBpbGw7IGZvciB3ZSwgb24gb3VyIHNpZGUsIGhhdmUgbmV2ZXIgc2V0IHRoZSBleGFtcGxlIGJ5IGRvaW5nIHlvdSBhbnkgbWFubmVyIG9mIGhhcm0uCjxtaWxlc3RvbmUgbj0iMTAiIHVuaXQ9InNlY3Rpb24iIC8+VGhlc2UgQ290eW9yaXRlcyBhcmUgb3VyIGNvbG9uaXN0cywgYW5kIGl0IHdhcyB3ZSB3aG8gZ2F2ZSBvdmVyIHRvIHRoZW0gdGhpcyBsYW5kLCBhZnRlciB3ZSBoYWQgdGFrZW4gaXQgYXdheSBmcm9tIGJhcmJhcmlhbnM7IHRoZXJlZm9yZSB0aGV5IHBheSB1cyBhIHN0YXRlZCB0cmlidXRlLCBhcyBkbyB0aGUgcGVvcGxlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDg2MzU3IiBrZXk9InRnbiwxMDg2MzU3Ij5DZXJhc3VzPC9wbGFjZU5hbWU+IGFuZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiIGtleT0icGVyc2V1cyxUcmFwZXp1cyxBcmNhZGlhIj5UcmFwZXp1czwvcGxhY2VOYW1lPjsgaGVuY2Ugd2hhdGV2ZXIgaGFybSB5b3UgbWF5IGRvIHRvIHRoZXNlIENvdHlvcml0ZXMsIHRoZSBjaXR5IG9mIHRoZSBTaW5vcGVhbnMgcmVnYXJkcyBhcyBkb25lIHRvIGl0c2VsZi4KPG1pbGVzdG9uZSBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BdCBwcmVzZW50IHdlIGhlYXIsIGZpcnN0bHksIHRoYXQgeW91IGhhdmUgbWFkZSB5b3VyIHdheSBpbnRvIHRoZSBjaXR5IGJ5IGZvcmNlLCBzb21lIG9mIHlvdSwgYW5kIGFyZSBxdWFydGVyZWQgaW4gdGhlIGhvdXNlcywgYW5kLCBzZWNvbmRseSwgdGhhdCB5b3UgYXJlIHRha2luZyBmcm9tIHRoZSBlc3RhdGVzIGJ5IGZvcmNlIHdoYXRldmVyIHlvdSBtYXkgbmVlZCB3aXRob3V0IGFza2luZyBsZWF2ZS4KPG1pbGVzdG9uZSBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlc2UgdGhpbmdzIHdlIGRvIG5vdCBkZWVtIHByb3BlcjsgYW5kIGlmIHlvdSBjb250aW51ZSB0byBkbyB0aGVtLCB5b3UgZm9yY2UgdXMgdG8gbWFrZSBmcmllbmRzIHdpdGggQ29yeWxhczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+UnVsZXIgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY3NjAiIGtleT0idGduLDcwMTY3NjAiPlBhcGhsYWdvbmlhPC9wbGFjZU5hbWU+Ljwvbm90ZT4gYW5kIHRoZSBQYXBobGFnb25pYW5zIGFuZCB3aG9tZXZlciBlbHNlIHdlIGNhbi7igJ0KPG1pbGVzdG9uZSBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluIHJlcGx5IHRvIHRoZXNlIHdvcmRzIFhlbm9waG9uLCBvbiBiZWhhbGYgb2YgdGhlIHNvbGRpZXJzLCByb3NlIGFuZCBzYWlkOiDigJxGb3Igb3Vyc2VsdmVzLCBtZW4gb2YgU2lub3BlLCB3ZSBoYXZlIGNvbWUgYmFjayB3ZWxsIGNvbnRlbnQgdG8gaGF2ZSBzYXZlZCBvdXIgYm9kaWVzIGFuZCBvdXIgYXJtczsgZm9yIGl0IHdhcyBub3QgcG9zc2libGUgYXQgb25lIGFuZCB0aGUgc2FtZSB0aW1lIHRvIGdhdGhlciBwbHVuZGVyIGFuZCB0byBmaWdodCB3aXRoIHRoZSBlbmVteS4KPG1pbGVzdG9uZSBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BcyB0byBvdXIgZG9pbmdzIG5vdywgc2luY2Ugd2UgaGF2ZSByZWFjaGVkIEdyZWVrIGNpdGllcywgd2UgZ290IG91ciBwcm92aXNpb25zIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJhcGV6dXMsQXJjYWRpYSIga2V5PSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiPlRyYXBlenVzPC9wbGFjZU5hbWU+IGJ5IHB1cmNoYXNlLCBmb3IgdGhlIFRyYXBlenVudGlhbnMgcHJvdmlkZWQgdXMgYSBtYXJrZXQsIGFuZCBpbiByZXR1cm4gZm9yIHRoZSBob25vdXJzIHRoZXkgYmVzdG93ZWQgdXBvbiB1cyBhbmQgdGhlIGdpZnRzIG9mIGhvc3BpdGFsaXR5IHRoZXkgZ2F2ZSB0aGUgYXJteSwgd2UgcGFpZCB0aGVtIGxpa2UgaG9ub3VyczsgaWYgYW55IG9mIHRoZSBiYXJiYXJpYW5zIHdlcmUgdGhlaXIgZnJpZW5kcywgd2Uga2VwdCBvdXIgaGFuZHMgb2ZmIHRoZW0sIHdoaWxlIHVwb24gdGhlaXIgZW5lbWllcywgYWdhaW5zdCB3aG9tIHRoZXkgd291bGQgdGhlbXNlbHZlcyBsZWFkIHVzLCB3ZSB3cm91Z2h0IGFsbCB0aGUgaGFybSB3ZSBjb3VsZC4KPG1pbGVzdG9uZSBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Bc2sgdGhlbSB3aGF0IHNvcnQgb2YgcGVvcGxlIHRoZXkgZm91bmQgdXMgdG8gYmU7IGZvciB0aGUgbWVuIGFyZSBoZXJlIHByZXNlbnQgd2hvbSB0aGUgY2l0eSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiIGtleT0icGVyc2V1cyxUcmFwZXp1cyxBcmNhZGlhIj5UcmFwZXp1czwvcGxhY2VOYW1lPiwgb3V0IG9mIGZyaWVuZHNoaXAsIHNlbnQgd2l0aCB1cyBhcyBndWlkZXMuCjxtaWxlc3RvbmUgbj0iMTYiIHVuaXQ9InNlY3Rpb24iIC8+T24gdGhlIG90aGVyIGhhbmQsIHdoZXJldmVyIHdlIGNvbWUsIHdoZXRoZXIgaXQgYmUgdG8gYSBiYXJiYXJpYW4gb3IgdG8gYSBHcmVlayBsYW5kLCBhbmQgaGF2ZSBubyBtYXJrZXQgYXQgd2hpY2ggdG8gYnV5LCB3ZSB0YWtlIHByb3Zpc2lvbnMsIG5vdCBvdXQgb2Ygd2FudG9ubmVzcywgYnV0IGZyb20gbmVjZXNzaXR5Lgo8bWlsZXN0b25lIG49IjE3IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBDYXJkdWNoaWFucywgZm9yIGV4YW1wbGUsIGFuZCB0aGUgVGFvY2hpYW5zIGFuZCBDaGFsZGFlYW5zIHdlcmUgbm90IHN1YmplY3RzIG9mIHRoZSBLaW5nIGFuZCB3ZXJlIGV4Y2VlZGluZ2x5IGZvcm1pZGFibGUsIHlldCwgZXZlbiBzbywgd2UgbWFkZSBlbmVtaWVzIG9mIHRoZW0gYmVjYXVzZSBvZiB0aGlzIG5lY2Vzc2l0eSBvZiB0YWtpbmcgcHJvdmlzaW9ucywgaW5hc211Y2ggYXMgdGhleSB3b3VsZCBub3QgcHJvdmlkZSBhIG1hcmtldC4KPG1pbGVzdG9uZSBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgTWFjcm9uaWFucywgaG93ZXZlciwgcHJvdmlkZWQgdXMgYXMgZ29vZCBhIG1hcmtldCBhcyB0aGV5IGNvdWxkLCBhbmQgd2UgdGhlcmVmb3JlIHJlZ2FyZGVkIHRoZW0gYXMgZnJpZW5kcywgYmFyYmFyaWFucyB0aG91Z2ggdGhleSB3ZXJlLCBhbmQgdG9vayBieSBmb3JjZSBub3QgYSB0aGluZyB0aGF0IGJlbG9uZ2VkIHRvIHRoZW0uCjxtaWxlc3RvbmUgbj0iMTkiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBcyBmb3IgdGhlIENvdHlvcml0ZXMsIHdob20geW91IGNsYWltIGFzIHlvdXJzLCBpZiB3ZSBoYXZlIHRha2VuIGFueXRoaW5nIHRoYXQgYmVsb25nZWQgdG8gdGhlbSwgdGhleSBhcmUgdGhlbXNlbHZlcyB0byBibGFtZTsgZm9yIHRoZXkgZGlkIG5vdCBiZWhhdmUgdG93YXJkIHVzIGFzIGZyaWVuZHMsIGJ1dCBzaHV0IHRoZWlyIGdhdGVzIGFuZCB3b3VsZCBuZWl0aGVyIGFkbWl0IHVzIHdpdGhpbiBub3Igc2VuZCBhIG1hcmtldCB3aXRob3V0OyBhbmQgdGhleSBhbGxlZ2VkIHRoYXQgdGhlIGdvdmVybm9yIHNldCBvdmVyIHRoZW0gYnkgeW91IHdhcyByZXNwb25zaWJsZSBmb3IgdGhpcyBjb25kdWN0Lgo8bWlsZXN0b25lIG49IjIwIiB1bml0PSJzZWN0aW9uIiAvPkluIHJlZ2FyZCB0byB5b3VyIHN0YXRlbWVudCBhYm91dCBwZW9wbGUgbWFraW5nIHRoZWlyIHdheSBpbnRvIHRoZSBjaXR5IGJ5IGZvcmNlIGFuZCBiZWluZyBxdWFydGVyZWQgdGhlcmUsIHdlIGFza2VkIHRoZW0gdG8gcmVjZWl2ZSBvdXIgc2ljayBpbnRvIHRoZWlyIGhvdXNlczsgYnV0IHdoZW4gdGhleSByZWZ1c2VkIHRvIG9wZW4gdGhlaXIgZ2F0ZXMsIHdlIHdlbnQgaW4gYXQgYSBwb2ludCB3aGVyZSB0aGUgcGxhY2Ugb2YgaXRzZWxmIHJlY2VpdmVkIHVzOyBhbmQgd2UgaGF2ZSBkb25lIG5vIGRlZWQgb2YgZm9yY2Ugc2F2ZSBvbmx5IHRoYXQgb3VyIHNpY2sgYXJlIHF1YXJ0ZXJlZCBpbiB0aGUgaG91c2VzLCBwYXlpbmcgdGhlaXIgb3duIGV4cGVuc2VzLCBhbmQgdGhhdCB3ZSBhcmUgZ3VhcmRpbmcgdGhlIGdhdGVzLCBpbiBvcmRlciB0aGF0IG91ciBzaWNrIG1heSBub3QgYmUgaW4gdGhlIHBvd2VyIG9mIHlvdXIgZ292ZXJub3IsIGJ1dCB0aGF0IGl0IG1heSBiZSBpbiBvdXIgcG93ZXIgdG8gZ2V0IHRoZW0gYmFjayB3aGVuIHdlIHNvIHdpc2guCjxtaWxlc3RvbmUgbj0iMjEiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIHJlc3Qgb2YgdXMsIGFzIHlvdSBzZWUsIGFyZSBxdWFydGVyZWQgaW4gdGhlIG9wZW4gaW4gb3VyIHJlZ3VsYXIgZm9ybWF0aW9uLCBhbGwgcmVhZHksIGluIGNhc2Ugb25lIGRvZXMgdXMgYSBraW5kbmVzcywgdG8gcmV0dXJuIHRoZSBsaWtlLCBvciBpZiBpdCBpcyBhbiBpbmp1cnksIHRvIHJldHVybiB0aGF0Lgo8bWlsZXN0b25lIG49IjIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQXMgdG8gdGhlIHRocmVhdCB5b3UgdXR0ZXJlZCwgdGhhdCBpZiB5b3UgdGhvdWdodCBiZXN0IHlvdSB3b3VsZCBlbmxpc3QgQ29yeWxhcyBhbmQgdGhlIFBhcGhsYWdvbmlhbnMgYXMgYWxsaWVzIGFnYWluc3QgdXMsIHdlIG9uIG91ciBzaWRlIGFyZSBxdWl0ZSByZWFkeSB0byBtYWtlIHdhciB3aXRoIHlvdSBib3RoIGlmIGl0IGJlIG5lY2Vzc2FyeTsgZm9yIHdlIGhhdmUgbWFkZSB3YXIgZXJlIG5vdyB3aXRoIG90aGVycyB3aG8gd2VyZSBtYW55IHRpbWVzIHlvdXIgbnVtYmVycy4gQnV0IGlmIHdlIHRoaW5rIGJlc3QgdG8gbWFrZSBhIGZyaWVuZCBvZiB0aGUgUGFwaGxhZ29uaWFu4oCUCjxtaWxlc3RvbmUgbj0iMjMiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHdlIGhlYXIgdGhhdCBoZSBoYXMgYSBkZXNpcmUgZm9yIHlvdXIgY2l0eSBhbmQgc3Ryb25naG9sZHMgb24gdGhlIGNvYXN04oCUd2Ugc2hhbGwgdHJ5IHRvIHByb3ZlIG91cnNlbHZlcyBoaXMgZnJpZW5kcyBieSBhaWRpbmcgaGltIHRvIGFjY29tcGxpc2ggaGlzIGRlc2lyZXMu4oCdCjxtaWxlc3RvbmUgbj0iMjQiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZXJldXBvbiBIZWNhdG9ueW11cycgZmVsbG93LWFtYmFzc2Fkb3JzIG1hZGUgaXQgdmVyeSBjbGVhciB0aGF0IHRoZXkgd2VyZSBhbmdyeSB3aXRoIGhpbSBmb3IgdGhlIHdvcmRzIGhlIGhhZCBzcG9rZW4sIGFuZCBvbmUgb2YgdGhlbSB0b29rIHRoZSBmbG9vciBhbmQgc2FpZCB0aGF0IHRoZXkgaGFkIG5vdCBjb21lIHRvIG1ha2Ugd2FyLCBidXQgdG8gc2hvdyB0aGF0IHRoZXkgd2VyZSBmcmllbmRzLiDigJxBbmQgaWYgeW91IGNvbWUs4oCdIGhlIGNvbnRpbnVlZCwg4oCcdG8gdGhlIGNpdHkgb2YgdGhlIFNpbm9wZWFucywgd2Ugc2hhbGwgcmVjZWl2ZSB5b3UgdGhlcmUgd2l0aCBnaWZ0cyBvZiBob3NwaXRhbGl0eSwgYW5kIG5vdyB3ZSBzaGFsbCBkaXJlY3QgdGhlIHBlb3BsZSBvZiB0aGlzIGNpdHkgdG8gZ2l2ZSB5b3Ugd2hhdCB0aGV5IGNhbjsgZm9yIHdlIHNlZSB0aGF0IGFsbCB5b3Ugc2F5IGlzIHRydWUu4oCdCjxtaWxlc3RvbmUgbj0iMjUiIHVuaXQ9InNlY3Rpb24iIC8+QWZ0ZXIgdGhpcyB0aGUgQ290eW9yaXRlcyBzZW50IGdpZnRzIG9mIGhvc3BpdGFsaXR5LCBhbmQgdGhlIGdlbmVyYWxzIG9mIHRoZSBHcmVla3MgZW50ZXJ0YWluZWQgdGhlIGFtYmFzc2Fkb3JzIG9mIHRoZSBTaW5vcGVhbnMsIGFuZCB0aGV5IGhhZCBhIGdyZWF0IGRlYWwgb2YgZnJpZW5kbHkgY29udmVyc2F0aW9uIHdpdGggb25lIGFub3RoZXIgb24gZ2VuZXJhbCBtYXR0ZXJzLCB3aGlsZSBpbiBwYXJ0aWN1bGFyIHRoZXkgbWFkZSBzdWNoIGlucXVpcmllcyBhcyBlYWNoIHBhcnR5IHdpc2hlZCBpbiByZWdhcmQgdG8gdGhlIHJlc3Qgb2YgdGhlIGpvdXJuZXkuCjxtaWxlc3RvbmUgbj0iNiIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoIHdhcyB0aGUgZW5kIG9mIHRoYXQgZGF5LiBPbiB0aGUgbmV4dCB0aGUgZ2VuZXJhbHMgY2FsbGVkIGFuIGFzc2VtYmx5IG9mIHRoZSBzb2xkaWVycywgYW5kIHRoZXkgZGVjaWRlZCB0byBpbnZpdGUgdGhlIFNpbm9wZWFucyB0byBqb2luIHRoZW0gaW4gZGVsaWJlcmF0aW5nIGFib3V0IHRoZSByZXN0IG9mIHRoZWlyIGpvdXJuZXkuIEZvciBpZiB0aGV5IHNob3VsZCBoYXZlIHRvIHByb2NlZWQgYnkgbGFuZCwgaXQgc2VlbWVkIHRoYXQgdGhlIFNpbm9wZWFucyB3b3VsZCBiZSB1c2VmdWwgdG8gdGhlbSwgYnkgdmlydHVlIG9mIHRoZWlyIGFjcXVhaW50YW5jZSB3aXRoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NzYwIiBrZXk9InRnbiw3MDE2NzYwIj5QYXBobGFnb25pYTwvcGxhY2VOYW1lPjsgYW5kIGlmIHRoZXkgd2VyZSB0byBnbyBieSBzZWEsIHRoZXJlIHdhcyBzdGlsbCBuZWVkLCB0aGV5IHRob3VnaHQsIG9mIHRoZSBTaW5vcGVhbnMsIGluYXNtdWNoIGFzIHRoZXkgd2VyZSB0aGUgb25seSBwZW9wbGUgd2hvIGNvdWxkIHByb3ZpZGUgc2hpcHMgZW5vdWdoIGZvciB0aGUgYXJteS4KPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZXkgYWNjb3JkaW5nbHkgaW52aXRlZCB0aGUgYW1iYXNzYWRvcnMgaW4gYW5kIHByb2NlZWRlZCB0byB0YWtlIGNvdW5zZWwgd2l0aCB0aGVtLCBhc2tpbmcgdGhlbSwgYXMgR3JlZWtzIGRlYWxpbmcgd2l0aCBHcmVla3MsIHRvIG1ha2UgYSBiZWdpbm5pbmcgb2YgdGhlaXIga2luZGx5IHJlY2VwdGlvbiBieSBzaG93aW5nIGZyaWVuZGxpbmVzcyBhbmQgb2ZmZXJpbmcgdGhlIGJlc3QgYWR2aWNlLgo8bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuIEhlY2F0b255bXVzIHJvc2UgYW5kLCBpbiB0aGUgZmlyc3QgcGxhY2UsIGRlZmVuZGVkIGhpbXNlbGYgaW4gdGhlIG1hdHRlciBvZiBoaXMgcmVtYXJrIHRoYXQgdGhleSB3b3VsZCBtYWtlIGEgZnJpZW5kIG9mIHRoZSBQYXBobGFnb25pYW4sIGJ5IHNheWluZyB0aGF0IGhlIGRpZCBub3QgbWVhbiB0aGF0IGhpcyBvd24gcGVvcGxlIHdvdWxkIG1ha2Ugd2FyIHVwb24gdGhlIEdyZWVrcywgYnV0IHJhdGhlciB0aGF0IGRlc3BpdGUgdGhlIG9wcG9ydHVuaXR5IHRoZXkgaGFkIHRvIGJlIGZyaWVuZHMgb2YgdGhlIGJhcmJhcmlhbnMgdGhleSB3b3VsZCBjaG9vc2UgdGhlIEdyZWVrcyBpbnN0ZWFkLiBCdXQgd2hlbiB0aGV5IHRvbGQgaGltIHRvIHByb2NlZWQgdG8gZ2l2ZSBzb21lIGFkdmljZSwgaGUgYmVnYW4gd2l0aCBhIHByYXllciB0byB0aGUgZ29kcyBhcyBmb2xsb3dzOgo8bWlsZXN0b25lIG49IjQiIHVuaXQ9InNlY3Rpb24iIC8+4oCcSWYgSSBzaG91bGQgZ2l2ZSB0aGUgYWR2aWNlIHdoaWNoIGluIG15IGp1ZGdtZW50IGlzIGJlc3QsIG1heSBtYW55IGJsZXNzaW5ncyBjb21lIHRvIG1lOyBvdGhlcndpc2UsIHRoZSBvcHBvc2l0ZS4gRm9yIHdoYXQgbWVuIHRlcm0g4oCYc2FjcmVkIGNvdW5zZWzigJk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkhlY2F0b255bXVzIGFsbHVkZXMgdG8gdGhlIHByb3ZlcmIg4oCcQ291bnNlbCBpcyBhIHNhY3JlZCB0aGluZyzigJ0gaS5lLiBpdCBtdXN0IGJlIGdpdmVuIGhvbmVzdGx5Ljwvbm90ZT4gc2VlbXMgdmVyaWx5IHRvIGJlIG15IHBvcnRpb247IHNpbmNlIHRvLWRheSBpZiBJIGJlIGZvdW5kIHRvIGhhdmUgZ2l2ZW4gZ29vZCBjb3Vuc2VsLCB0aGVyZSB3aWxsIGJlIG1hbnkgdG8gcHJhaXNlIG1lLCBidXQgaWYgaXQgYmUgaWxsLCB0aGVyZSB3aWxsIGJlIG1hbnkgYW1vbmcgeW91IHRvIGN1cnNlIG1lLgo8bWlsZXN0b25lIG49IjUiIHVuaXQ9InNlY3Rpb24iIC8+Tm93IEkga25vdyB0aGF0IHdlIHNoYWxsIGhhdmUgZmFyIG1vcmUgdHJvdWJsZSBpZiB5b3UgYXJlIGNvbnZleWVkIGJ5IHNlYSwgZm9yIHVwb24gdXMgd2lsbCBmYWxsIHRoZSBkdXR5IG9mIHByb3ZpZGluZyB0aGUgc2hpcHM7IHdoaWxlIGlmIHlvdSBqb3VybmV5IGJ5IGxhbmQsIHVwb24geW91IHdpbGwgZmFsbCB0aGUgdGFzayBvZiBkb2luZyB0aGUgZmlnaHRpbmcuCjxtaWxlc3RvbmUgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz5OZXZlcnRoZWxlc3MsIEkgbXVzdCBzYXkgd2hhdCBJIGJlbGlldmU7IGZvciBJIGFtIGFjcXVhaW50ZWQgd2l0aCBib3RoIHRoZSBjb3VudHJ5IG9mIHRoZSBQYXBobGFnb25pYW5zIGFuZCB0aGVpciBwb3dlci4gVGhlaXIgY291bnRyeSBwb3NzZXNzZXMgdGhlc2UgdHdvIHRoaW5ncywgdGhlIGZhaXJlc3QgcGxhaW5zIGFuZCB0aGUgbG9mdGllc3QgbW91bnRhaW5zLgo8bWlsZXN0b25lIG49IjciIHVuaXQ9InNlY3Rpb24iIC8+QW5kLCBpbiB0aGUgZmlyc3QgcGxhY2UsIEkga25vdyBhdCBvbmNlIHdoZXJlIHlvdSBtdXN0IG1ha2UgeW91ciBlbnRyeTogdGhlcmUgaXMgbm8gcGxhY2Ugc2F2ZSB3aGVyZSB0aGUgcGVha3Mgb2YgdGhlIG1vdW50YWlucyByaXNlIGhpZ2ggb24gZWl0aGVyIHNpZGUgb2YgdGhlIHJvYWQ7IGhvbGRpbmcgdGhlc2UgcGVha3MgYSBtZXJlIGhhbmRmdWwgb2YgbWVuIGNvdWxkIGNvbW1hbmQgdGhlIHBhc3MsIGFuZCBpZiB0aGV5IGFyZSBzbyBoZWxkLCBub3QgYWxsIHRoZSBtZW4gaW4gdGhlIHdvcmxkIGNvdWxkIGVmZmVjdCBhIHBhc3NhZ2UuIEFsbCB0aGlzIEkgY291bGQgZXZlbiBwb2ludCBvdXQgaWYgeW91IHNob3VsZCBjYXJlIHRvIHNlbmQgc29tZSBvbmUgdG8gdGhlIHNwb3Qgd2l0aCBtZS4KPG1pbGVzdG9uZSBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlNlY29uZGx5LCBJIGtub3cgdGhhdCB0aGV5IGhhdmUgcGxhaW5zIGFuZCBhIGNhdmFscnkgd2hpY2ggdGhlIGJhcmJhcmlhbnMgdGhlbXNlbHZlcyByZWdhcmQgYXMgc3VwZXJpb3IgdG8gdGhlIHdob2xlIG9mIHRoZSBLaW5nJ3MgY2F2YWxyeS4gSW5kZWVkLCBvbmx5IG5vdyB0aGVzZSBQYXBobGFnb25pYW5zIGhhdmUgZmFpbGVkIHRvIHByZXNlbnQgdGhlbXNlbHZlcyB3aGVuIHRoZSBLaW5nIHN1bW1vbmVkIHRoZW0sIGZvciB0aGVpciBydWxlciBpcyB0b28gcHJvdWQgdG8gb2JleS4KPG1pbGVzdG9uZSBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSWYgeW91IHNob3VsZCwgYWZ0ZXIgYWxsLCBmaW5kIHlvdXJzZWx2ZXMgYWJsZSBub3Qgb25seSB0byBzZWl6ZSB0aGUgbW91bnRhaW5zLCB3aGV0aGVyIGJ5IHN0ZWFsdGggb3IgYnkgYW50aWNpcGF0aW5nIHRoZSBlbmVteSwgYnV0IGFsc28gb24gdGhlIHBsYWluIHRvIGNvbnF1ZXIgaW4gYmF0dGxlIGJvdGggdGhlaXIgY2F2YWxyeSBhbmQgdGhlaXIgbW9yZSB0aGFuIG9uZSBodW5kcmVkIGFuZCB0d2VudHkgdGhvdXNhbmQgaW5mYW50cnksIHlvdSB3aWxsIGNvbWUgdG8gdGhlIHJpdmVycy4gRmlyc3QgaXMgdGhlIFRoZXJtb2RvbiwgdGhyZWUgcGxldGhyYSBpbiB3aWR0aCwgd2hpY2ggSSBmYW5jeSB3b3VsZCBiZSBkaWZmaWN1bHQgdG8gY3Jvc3MsIGVzcGVjaWFsbHkgd2l0aCBncmVhdCBudW1iZXJzIG9mIHRoZSBlbmVteSBpbiBmcm9udCBhbmQgZ3JlYXQgbnVtYmVycyBmb2xsb3dpbmcgYmVoaW5kOyBzZWNvbmQsIHRoZSBJcmlzLCBsaWtld2lzZSB0aHJlZSBwbGV0aHJhIHdpZGU7IHRoaXJkLCB0aGUgSGFseXMsIG5vdCBsZXNzIHRoYW4gdHdvIHN0YWRpYSBpbiB3aWR0aCwgd2hpY2ggeW91IGNvdWxkIG5vdCBjcm9zcyB3aXRob3V0IGJvYXRz4oCUYW5kIHdobyB3aWxsIHRoZXJlIGJlIHRvIHN1cHBseSB5b3Ugd2l0aCBib2F0cz/igJRhbmQgc2ltaWxhcmx5IGltcGFzc2FibGUgaXMgdGhlIFBhcnRoZW5pdXMgYWxzbywgdG8gd2hpY2ggeW91IHdvdWxkIGNvbWUgaWYgeW91IHNob3VsZCBnZXQgYWNyb3NzIHRoZSBIYWx5cy4KPG1pbGVzdG9uZSBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEZvciBteSBwYXJ0LCB0aGVyZWZvcmUsIEkgYmVsaWV2ZSB0aGF0IHRoaXMgam91cm5leSBpcyBub3QgbWVyZWx5IGRpZmZpY3VsdCBmb3IgeW91LCBidXQgYSB0aGluZyBvZiB1dHRlciBpbXBvc3NpYmlsaXR5LiBJZiB5b3UgZ28gYnkgc2VhLCBob3dldmVyLCB5b3UgY2FuIGNvYXN0IGFsb25nIGZyb20gaGVyZSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNpbm9wZSIga2V5PSJwZXJzZXVzLFNpbm9wZSI+U2lub3BlPC9wbGFjZU5hbWU+LCBhbmQgZnJvbSBTaW5vcGUgdG8gSGVyYWNsZWlhOyBhbmQgZnJvbSBIZXJhY2xlaWEgb24gdGhlcmUgaXMgbm8gZGlmZmljdWx0eSBlaXRoZXIgYnkgbGFuZCBvciBieSB3YXRlciwgZm9yIHRoZXJlIGFyZSBzaGlwcyBpbiBhYnVuZGFuY2UgYXQgSGVyYWNsZWlhLuKAnQo8bWlsZXN0b25lIG49IjExIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBoZSBoYWQgdGh1cyBzcG9rZW4sIHNvbWUgb2YgaGlzIGhlYXJlcnMgd2VyZSBzdXNwaWNpb3VzIHRoYXQgaGUgc3Bva2UgYXMgaGUgZGlkIG91dCBvZiBmcmllbmRzaGlwIGZvciBDb3J5bGFzLCBmb3IgaGUgd2FzIGhpcyBvZmZpY2lhbCByZXByZXNlbnRhdGl2ZSBhdCBTaW5vcGU7IG90aGVycyBpbWFnaW5lZCB0aGF0IGhlIGV2ZW4gaGFkIHRoZSBpZGVhIG9mIG9idGFpbmluZyBnaWZ0cyBvbiBhY2NvdW50IG9mIHRoaXMgYWR2aWNlOyB3aGlsZSBzdGlsbCBvdGhlcnMgc3VzcGVjdGVkIHRoYXQgdGhlIHJlYWwgcHVycG9zZSBvZiBoaXMgc3BlZWNoIHdhcyB0byBwcmV2ZW50IHRoZSBHcmVla3MgZnJvbSBnb2luZyBieSBsYW5kIGFuZCBzbyBkb2luZyBzb21lIGhhcm0gdG8gdGhlIHRlcnJpdG9yeSBvZiB0aGUgU2lub3BlYW5zLiBBdCBhbnkgcmF0ZSwgaG93ZXZlciwgdGhlIEdyZWVrcyB2b3RlZCB0byBtYWtlIHRoZSBqb3VybmV5IGJ5IHNlYS4KPG1pbGVzdG9uZSBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIFhlbm9waG9uIHNhaWQ6IOKAnE1lbiBvZiBTaW5vcGUsIG15IHRyb29wcyBoYXZlIGNob3NlbiB0aGUgcm91dGUgd2hpY2ggeW91IGFkdmlzZTsgYnV0IHRoZSBtYXR0ZXIgc3RhbmRzIGluIHRoaXMgd2F5OiBpZiB0aGVyZSBhcmUgdG8gYmUgc2hpcHMgZW5vdWdoIHNvIHRoYXQgbm90IHNvIG11Y2ggYXMgb25lIG1hbiB3aWxsIGJlIGxlZnQgYmVoaW5kIGhlcmUsIHdlIHNoYWxsIHNldCBzYWlsOyBidXQgaWYgdGhlIHBsYW4gc2hvdWxkIGJlIHRvIGxldCBzb21lIG9mIHVzIHN0YXkgYmVoaW5kIGFuZCBvdGhlcnMgc2FpbCwgd2Ugc2hhbGwgbm90IHNldCBmb290IG9uIHRoZSBzaGlwcy4KPG1pbGVzdG9uZSBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igd2Uga25vdyB0aGF0IHdoZXJldmVyIHdlIGhvbGQgdGhlIHVwcGVyIGhhbmQsIHdlIHNob3VsZCBiZSBhYmxlIGJvdGggdG8ga2VlcCBvdXJzZWx2ZXMgc2FmZSBhbmQgdG8gb2J0YWluIHByb3Zpc2lvbnM7IGJ1dCBsZXQgdXMgb25jZSBnZXQgY2F1Z2h0IHdoZXJlIHdlIGFyZSB3ZWFrZXIgdGhhbiB0aGUgZW5lbXksIGFuZCBpdCBpcyBwZXJmZWN0bHkgY2xlYXIgdGhhdCB3ZSBzaGFsbCBiZSBpbiB0aGUgcG9zaXRpb24gb2Ygc2xhdmVzLuKAnSBVcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgdGhlIFNpbm9wZWFucyB0b2xkIHRoZW0gdG8gc2VuZCBhbWJhc3NhZG9ycy4KPG1pbGVzdG9uZSBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhleSBzZW50IENhbGxpbWFjaHVzIHRoZSBBcmNhZGlhbiwgQXJpc3RvbiB0aGUgQXRoZW5pYW4sIGFuZCBTYW1vbGFzIHRoZSBBY2hhZWFuLiBUaGVzZSBtZW4gYWNjb3JkaW5nbHkgc2V0IG91dC4KPG1pbGVzdG9uZSBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkF0IHRoaXMgdGltZSwgYXMgWGVub3Bob24ncyBleWVzIHJlc3RlZCB1cG9uIGEgZ3JlYXQgYm9keSBvZiBHcmVlayBob3BsaXRlcywgYW5kIGxpa2V3aXNlIHVwb24gYSBncmVhdCBib2R5IG9mIHBlbHRhc3RzLCBib3dtZW4sIHNsaW5nZXJzLCBhbmQgaG9yc2VtZW4gYWxzbywgYWxsIG9mIHRoZW0gbm93IGV4Y2VlZGluZ2x5IGVmZmljaWVudCB0aHJvdWdoIGNvbnN0YW50IHNlcnZpY2UgYW5kIGFsbCB0aGVyZSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjYxOSIga2V5PSJ0Z24sNzAxNjYxOSI+UG9udHVzPC9wbGFjZU5hbWU+LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+WGVub3Bob24gdXNlcyB0aGUgdGVybSA8Zm9yZWlnbiBsYW5nPSJncmVlayI+z4DhvbnOvc+Ezr/PgjwvZm9yZWlnbj4gYm90aCBvZiB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2MTkiIGtleT0idGduLDcwMTY2MTkiPkV1eGluZSBTZWE8L3BsYWNlTmFtZT4gYW5kIG9mIHRoZSByZWdpb24gYWxvbmcgaXRzIHNvdXRoLWVhc3Rlcm4gY29hc3QuIFNlZSBiZWxvdy48L25vdGU+IHdoZXJlIHNvIGxhcmdlIGEgZm9yY2UgY291bGQgbm90IGhhdmUgYmVlbiBnYXRoZXJlZCBieSBhbnkgc2xpZ2h0IG91dGxheSBvZiBtb25leSwgaXQgc2VlbWVkIHRvIGhpbSB0aGF0IGl0IHdhcyBhIGZpbmUgdGhpbmcgdG8gZ2FpbiBhZGRpdGlvbmFsIHRlcnJpdG9yeSBhbmQgcG93ZXIgZm9yIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gYnkgZm91bmRpbmcgYSBjaXR5Lgo8bWlsZXN0b25lIG49IjE2IiB1bml0PSJzZWN0aW9uIiAvPkl0IHdvdWxkIGJlY29tZSBhIGdyZWF0IGNpdHksIGhlIHRob3VnaHQsIGFzIGhlIHJlY2tvbmVkIHVwIHRoZWlyIG93biBudW1iZXJzIGFuZCB0aGUgcGVvcGxlcyB3aG8gZHdlbHQgYXJvdW5kIHRoZSBFdXhpbmUuIEFuZCB3aXRoIGEgdmlldyB0byB0aGlzIHByb2plY3QsIGJlZm9yZSBzcGVha2luZyBhYm91dCBpdCB0byBhbnkgb2YgdGhlIHNvbGRpZXJzLCBoZSBvZmZlcmVkIHNhY3JpZmljZXMsIHN1bW1vbmluZyBmb3IgdGhhdCBwdXJwb3NlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDQ2OTExIiBrZXk9InRnbiwxMDQ2OTExIj5TaWxhbnVzPC9wbGFjZU5hbWU+IHRoZSBBbWJyYWNpb3QsIHdobyBoYWQgYmVlbiB0aGUgc29vdGhzYXllciBvZiA8cGVyc05hbWU+Q3lydXM8L3BlcnNOYW1lPi4KPG1pbGVzdG9uZSBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTA0NjkxMSIga2V5PSJ0Z24sMTA0NjkxMSI+U2lsYW51czwvcGxhY2VOYW1lPiwgaG93ZXZlciwgZmVhcmluZyB0aGF0IHRoaXMgdGhpbmcgbWlnaHQgY29tZSB0byBwYXNzIGFuZCB0aGF0IHRoZSBhcm15IG1pZ2h0IHNldHRsZSBkb3duIHNvbWV3aGVyZSwgY2FycmllZCBmb3J0aCB0byB0aGUgdHJvb3BzIGEgcmVwb3J0IHRoYXQgWGVub3Bob24gd2FudGVkIHRoZW0gdG8gc2V0dGxlIGRvd24sIHNvIHRoYXQgaGUgY291bGQgZm91bmQgYSBjaXR5IGFuZCB3aW4gZm9yIGhpbXNlbGYgYSBuYW1lIGFuZCBwb3dlci4KPG1pbGVzdG9uZSBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwNDY5MTEiIGtleT0idGduLDEwNDY5MTEiPlNpbGFudXM8L3BsYWNlTmFtZT4sIGhpcyBvd24gZGVzaXJlIHdhcyB0byByZWFjaCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IGFzIHF1aWNrbHkgYXMgcG9zc2libGU7IGZvciB0aGUgdGhyZWUgdGhvdXNhbmQgZGFyaWNzLCB3aGljaCBoZSBoYWQgcmVjZWl2ZWQgZnJvbSA8cGVyc05hbWU+Q3lydXM8L3BlcnNOYW1lPiBhdCB0aGUgdGltZSB3aGVuIGhlIHNhY3JpZmljZWQgZm9yIGhpbSBhbmQgaGFkIHRvbGQgdGhlIHRydXRoIGFib3V0IHRoZSB0ZW4gZGF5cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSA8YmlibCBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjcuMTgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS43LjE4PC9iaWJsPi48L25vdGU+IGhlIGhhZCBicm91Z2h0IHNhZmVseSB0aHJvdWdoLgo8bWlsZXN0b25lIG49IjE5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgc29sZGllcnMgaGVhcmQgdGhpcyByZXBvcnQsIHNvbWUgb2YgdGhlbSB0aG91Z2h0IGl0IHdhcyBiZXN0IHRvIHNldHRsZSBkb3duLCBidXQgdGhlIG1ham9yaXR5IHRob3VnaHQgb3RoZXJ3aXNlLiBBbmQgVGltYXNpb24gdGhlIERhcmRhbmlhbiBhbmQgVGhvcmF4IHRoZSBCb2VvdGlhbiBzYWlkIHRvIHNvbWUgSGVyYWNsZW90IGFuZCBTaW5vcGVhbiBtZXJjaGFudHMgd2hvIHdlcmUgdGhlcmUsIHRoYXQgaWYgdGhleSBkaWQgbm90IHByb3ZpZGUgcGF5IGZvciB0aGUgdHJvb3BzIHNvIHRoYXQgdGhleSB3b3VsZCBoYXZlIHByb3Zpc2lvbnMgZm9yIHRoZSB2b3lhZ2UgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjQ3OSIga2V5PSJ0Z24sNzAwMjQ3OSI+Q290eW9yYTwvcGxhY2VOYW1lPiwgdGhlcmUgd291bGQgYmUgZGFuZ2VyIG9mIHRoYXQgZ3JlYXQgZm9yY2UgcmVtYWluaW5nIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NjE5IiBrZXk9InRnbiw3MDE2NjE5Ij5Qb250dXM8L3BsYWNlTmFtZT4uIOKAnEZvciBYZW5vcGhvbizigJ0gdGhleSB3ZW50IG9uLCDigJx3aXNoZXMgYW5kIGlzIHVyZ2luZyB0aGF0IGFzIHNvb24gYXMgdGhlIHNoaXBzIGNvbWUsIHdlIHNob3VsZCB0aGVuIHNheSBhbGwgb2YgYSBzdWRkZW4gdG8gdGhlIGFybXk6CjxtaWxlc3RvbmUgbj0iMjAiIHVuaXQ9InNlY3Rpb24iIC8+YFNvbGRpZXJzLCBub3cgd2Ugc2VlIHRoYXQgeW91IGFyZSB3aXRob3V0IG1lYW5zIGVpdGhlciB0byBzdXBwbHkgeW91cnNlbHZlcyB3aXRoIHByb3Zpc2lvbnMgb24gdGhlIGhvbWV3YXJkIHZveWFnZSwgb3IgdG8gZG8gYW55dGhpbmcgZm9yIHlvdXIgcGVvcGxlIGF0IGhvbWUgd2hlbiB5b3UgaGF2ZSBnb3QgYmFjayB0aGVyZTsgYnV0IGlmIHlvdSB3aXNoIHRvIHBpY2sgb3V0IHNvbWUgc3BvdCBpbiB0aGUgY291bnRyeSB0aGF0IGxpZXMgcm91bmQgYWJvdXQgdGhlIEV1eGluZSBhbmQgcHV0IHRvIHNob3JlIHdoZXJldmVyIHlvdSBtYXkgd2lzaOKAlGhlIHdobyBzbyBkZXNpcmVzIHRvIGdvIGJhY2sgaG9tZSBhbmQgaGUgd2hvIHNvIGRlc2lyZXMgdG8gc3RheSBiZWhpbmTigJRoZXJlIGFyZSB5b3VyIHNoaXBzLCBzbyB0aGF0IHlvdSBjb3VsZCBtYWtlIGEgc3VkZGVuIGF0dGFjayBhdCB3aGF0ZXZlciBwb2ludCB5b3UgbWF5IHdpc2guJ+KAnQo8bWlsZXN0b25lIG49IjIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXBvbiBoZWFyaW5nIHRoaXMgc3RhdGVtZW50IHRoZSBtZXJjaGFudHMgY2FycmllZCBpdCBiYWNrIHRvIHRoZWlyIGNpdGllczsgYW5kIGFsb25nIHdpdGggdGhlbSBUaW1hc2lvbiB0aGUgRGFyZGFuaWFuIHNlbnQgRXVyeW1hY2h1cyB0aGUgRGFyZGFuaWFuIGFuZCBUaG9yYXggdGhlIEJvZW90aWFuIHRvIHRlbGwgdGhlIHNhbWUgc3RvcnkuIFdoZW4gdGhlIFNpbm9wZWFucyBhbmQgSGVyYWNsZW90cyBoZWFyZCBpdCwgdGhleSBzZW50IHRvIFRpbWFzaW9uIGFuZCB1cmdlZCBoaW0gdG8gdGFrZSBpbiBjaGFyZ2UsIGZvciBhIGZlZSwgdGhlIG1hdHRlciBvZiBnZXR0aW5nIHRoZSBhcm15IHRvIHNhaWwgYXdheS4KPG1pbGVzdG9uZSBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5IZSByZWNlaXZlZCB0aGlzIHByb3Bvc2FsIGdsYWRseSwgYW5kIHdoZW4gdGhlIHNvbGRpZXJzIHdlcmUgZ2F0aGVyZWQgaW4gYXNzZW1ibHkgYWRkcmVzc2VkIHRoZW0gYXMgZm9sbG93czog4oCcWW91IG91Z2h0IG5vdCwgc29sZGllcnMsIHRvIHNldCB5b3VyIHRob3VnaHRzIG9uIHJlbWFpbmluZyBoZXJlLCBub3IgdG8gZXN0ZWVtIGFueXRoaW5nIG1vcmUgaGlnaGx5IHRoYW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPi4gQnV0IEkgaGVhciB0aGF0IGNlcnRhaW4gcGVvcGxlIGFyZSBvZmZlcmluZyBzYWNyaWZpY2VzIG92ZXIgdGhpcyBtYXR0ZXIsIHdpdGggbm90IHNvIG11Y2ggYXMgYSB3b3JkIHRvIHlvdS4KPG1pbGVzdG9uZSBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgSSBwcm9taXNlLCBpbiBjYXNlIHlvdSBzZXQgc2FpbCBmcm9tIGhlcmUsIHRvIHByb3ZpZGUgeW91IHdpdGggcGF5IGZyb20gdGhlIGZpcnN0IG9mIHRoZSBtb250aCBhdCB0aGUgcmF0ZSBvZiBhIEN5emljZW5lPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIGdvbGQgY29pbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEN5emljdXMiIGtleT0icGVyc2V1cyxDeXppY3VzIj5DeXppY3VzPC9wbGFjZU5hbWU+LCBhbiBpbXBvcnRhbnQgR3JlZWsgY2l0eSBvbiB0aGUgUHJvcG9udGlzLiBJdCB3YXMgZXF1aXZhbGVudCBpbiB3ZWlnaHQgb2YgZ29sZCB0byAgbCBsbHMuIGwgZC4gb3IgJDcuNTY7IGJ1dCBzZWUgbm90ZSBvbiA8YmlibCBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjEuOSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjEuOTwvYmlibD4uPC9ub3RlPiBwZXIgbW9udGggdG8gZWFjaCBtYW47IGFuZCBJIHdpbGwgdGFrZSB5b3UgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDIzMzEiIGtleT0idGduLDcwMDIzMzEiPlRyb2FzPC9wbGFjZU5hbWU+LCB0aGUgcGxhY2UgZnJvbSB3aGljaCBJIGFtIGFuIGV4aWxlLCBhbmQgbXkgY2l0eSB3aWxsIGJlIGF0IHlvdXIgc2VydmljZTsgZm9yIHRoZXkgd2lsbCByZWNlaXZlIG1lIHdpbGxpbmdseS4KPG1pbGVzdG9uZSBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIEkgbXlzZWxmIHdpbGwgbGVhZCB5b3UgdG8gcGxhY2VzIGZyb20gd2hpY2ggeW91IHdpbGwgZ2V0IGFuIGFidW5kYW5jZSBvZiB3ZWFsdGguIEkgYW0gYWNxdWFpbnRlZCB3aXRoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw1MDA0MjE2IiBrZXk9InRnbiw1MDA0MjE2Ij5BZW9saXM8L3BsYWNlTmFtZT4sIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjEzIiBrZXk9InRnbiw3MDAyNjEzIj5QaHJ5Z2lhPC9wbGFjZU5hbWU+LCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjMzMSIga2V5PSJ0Z24sNzAwMjMzMSI+VHJvYXM8L3BsYWNlTmFtZT4sIGFuZCB0aGUgZW50aXJlIHByb3ZpbmNlIG9mIFBoYXJuYWJhenVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+UGVyc2lhbiBzYXRyYXAgb2YgTGVzc2VyIFBocnlnaWEgYW5kIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NjA4IiBrZXk9InRnbiw3MDE2NjA4Ij5CaXRoeW5pYTwvcGxhY2VOYW1lPi48L25vdGU+IHBhcnRseSBiZWNhdXNlIEkgY29tZSBmcm9tIHRoYXQgcmVnaW9uLCBhbmQgcGFydGx5IGJlY2F1c2UgSSBoYXZlIGNhbXBhaWduZWQgdGhlcmUgd2l0aCBDbGVhcmNodXMgYW5kIERlcmN5bGlkYXMu4oCdPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIFNwYXJ0YW4gZ2VuZXJhbC4gSGUgaGFkIHRha2VuIHBhcnQgaW4gdGhlIFBlbG9wb25uZXNpYW4gV2FyLCBhbmQgd2FzIHRoZSBjb21tYW5kZXIgdW5kZXIgd2hvbSB0aGUgVGVuIFRob3VzYW5kIGxhdGVyIHNlcnZlZC48L25vdGU+CiAgICA8bWlsZXN0b25lIG49IjI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TmV4dCByb3NlIFRob3JheCB0aGUgQm9lb3RpYW4sIHdobyB3YXMgYXQgb2RkcyB3aXRoIFhlbm9waG9uIG92ZXIgdGhlIGdlbmVyYWxzaGlwIG9mIHRoZSBhcm15LCBhbmQgc2FpZCB0aGF0IG9uY2UgdGhleSBnb3Qgb3V0IG9mIHRoZSBFdXhpbmUgdGhleSB3b3VsZCBoYXZlIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAxMjc4OSIga2V5PSJ0Z24sMTAxMjc4OSI+Q2hlcnNvbmVzZTwvcGxhY2VOYW1lPiwgYSBmYWlyIGFuZCBwcm9zcGVyb3VzIGNvdW50cnksIHdoZXJlIGFueSBvbmUgd2hvIHNvIGRlc2lyZWQgbWlnaHQgZHdlbGwsIHdoaWxlIGFueSB3aG8gZGlkIG5vdCBkZXNpcmUgdG8gZG8gdGhpcywgbWlnaHQgcmV0dXJuIGhvbWUuIEl0IHdhcyByaWRpY3Vsb3VzLCBoZSBzYWlkLCB3aGVuIHRoZXJlIHdhcyBwbGVudHkgb2YgZmVydGlsZSBsYW5kIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIHRvIGJlIGh1bnRpbmcgZm9yIGl0IGluIHRoZSBkb21haW4gb2YgdGhlIGJhcmJhcmlhbnMuCjxtaWxlc3RvbmUgbj0iMjYiIHVuaXQ9InNlY3Rpb24iIC8+4oCcQW5kIHVudGlsIHlvdSByZWFjaCB0aGF0IHNwb3Qs4oCdIGhlIGNvbnRpbnVlZCwg4oCcSSBhbHNvLCBsaWtlIFRpbWFzaW9uLCBwcm9taXNlIHlvdSByZWd1bGFyIHBheS7igJ0gQWxsIHRoaXMgaGUgc2FpZCB3aXRoIGZ1bGwga25vd2xlZGdlIG9mIHdoYXQgdGhlIEhlcmFjbGVvdHMgYW5kIHRoZSBTaW5vcGVhbnMgd2VyZSBwcm9taXNpbmcgVGltYXNpb24gZm9yIGdldHRpbmcgdGhlIGFybXkgdG8gc2FpbCBhd2F5LiBYZW5vcGhvbiBtZWFud2hpbGUgd2FzIHNpbGVudC4KPG1pbGVzdG9uZSBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZW4gUGhpbGVzaXVzIGFuZCBMeWNvbiB0aGUgQWNoYWVhbnMgcm9zZSBhbmQgc2FpZCB0aGF0IGl0IHdhcyBvdXRyYWdlb3VzIGZvciBYZW5vcGhvbiB0byBiZSBwcml2YXRlbHkgdXJnaW5nIHBlb3BsZSB0byBzZXR0bGUgZG93biBhbmQgc2FjcmlmaWNpbmcgd2l0aCBhIHZpZXcgdG8gdGhhdCBwbGFuLCB3aGlsZSBwdWJsaWNseSBzYXlpbmcgbm90IGEgd29yZCBhYm91dCB0aGUgbWF0dGVyLiBUaHVzIFhlbm9waG9uIHdhcyBjb21wZWxsZWQgdG8gcmlzZSBhbmQgc3BlYWsgYXMgZm9sbG93czoKPG1pbGVzdG9uZSBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz7igJxJIG9mZmVyLCBzb2xkaWVycywgYXMgeW91IHNlZSwgYWxsIHRoZSBzYWNyaWZpY2VzIEkgY2FuIGJvdGggb24geW91ciBiZWhhbGYgYW5kIG15IG93biBpbiBvcmRlciB0aGF0IEkgbWF5IHBlcmNoYW5jZSBzYXkgYW5kIHRoaW5rIGFuZCBkbyBzdWNoIHRoaW5ncyBhcyB3aWxsIGJlIGZhaXJlc3QgYW5kIGJlc3QgYm90aCBmb3IgeW91IGFuZCBtZS4gQW5kIGluIHRoZSBwcmVzZW50IGNhc2UgSSB3YXMgc2FjcmlmaWNpbmcgZm9yIGd1aWRhbmNlIG9uIHRoaXMgcG9pbnQgb25seSwgd2hldGhlciBpdCB3YXMgYmV0dGVyIHRvIGJlZ2luIHRvIHNwZWFrIGJlZm9yZSB5b3UgYW5kIHRvIGFjdCByZWdhcmRpbmcgdGhpcyBwcm9qZWN0LCBvciBub3QgdG8gdG91Y2ggdGhlIG1hdHRlciBhdCBhbGwuCjxtaWxlc3RvbmUgbj0iMjkiIHVuaXQ9InNlY3Rpb24iIC8+Tm93IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDQ2OTExIiBrZXk9InRnbiwxMDQ2OTExIj5TaWxhbnVzPC9wbGFjZU5hbWU+LCB0aGUgc29vdGhzYXllciwgYW5zd2VyZWQgbWUgaW4gcmVzcGVjdCB0byB0aGUgbWFpbiBpc3N1ZSB0aGF0IHRoZSBvbWVucyB3ZXJlIGZhdm91cmFibGUgKGZvciBoZSBrbmV3IHdlbGwgZW5vdWdoIHRoYXQgSSB3YXMgbm90IHVuYWNxdWFpbnRlZCB3aXRoIGRpdmluYXRpb24sIGZyb20gYmVpbmcgYWx3YXlzIHByZXNlbnQgYXQgdGhlIHNhY3JpZmljZXMpOyBidXQgaGUgc2FpZCB0aGF0IHRoZXJlIGFwcGVhcmVkIGluIHRoZSBvbWVucyBhIGtpbmQgb2YgZnJhdWQgYW5kIHBsb3QgYWdhaW5zdCBtZSwgbWFuaWZlc3RseSBiZWNhdXNlIGhlIGtuZXcgdGhhdCBoZSB3YXMgaGltc2VsZiBwbG90dGluZyB0byB0cmFkdWNlIG1lIGJlZm9yZSB5b3UuIEZvciBoZSBzcHJlYWQgYWJyb2FkIHRoZSByZXBvcnQgdGhhdCBJIHdhcyBpbnRlbmRpbmcgdG8gZG8gdGhlc2UgdGhpbmdzIGF0IG9uY2UsIHdpdGhvdXQgZ2V0dGluZyB5b3VyIGNvbnNlbnQuCjxtaWxlc3RvbmUgbj0iMzAiIHVuaXQ9InNlY3Rpb24iIC8+Tm93IGlmIEkgc2F3IHRoYXQgeW91IHdlcmUgd2l0aG91dCByZXNvdXJjZXMsIEkgc2hvdWxkIGJlIGxvb2tpbmcgYWJvdXQgZm9yIGEgcGxhbiBieSB3aGljaCB5b3UgbWlnaHQgZ2V0IHBvc3Nlc3Npb24gb2YgYSBjaXR5LCB3aXRoIHRoZSBwcm92aXNpb24gdGhhdCBhZnRlcndhcmRzIGhlIHdobyBjaG9zZSBtaWdodCBzYWlsIGJhY2sgaG9tZSBhdCBvbmNlLCB3aGlsZSBoZSB3aG8gZGlkIG5vdCB3aXNoIHRvIGdvIGF0IG9uY2UgbWlnaHQgcmV0dXJuIGFmdGVyIGhlIGhhZCBhY2N1bXVsYXRlZCBlbm91Z2ggdG8gYmVzdG93IGEgbGl0dGxlIHNvbWV0aGluZyB1cG9uIGhpcyBwZW9wbGUgYXQgaG9tZS4KPG1pbGVzdG9uZSBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgc2luY2UsIGluIGZhY3QsIEkgc2VlIHRoYXQgdGhlIEhlcmFjbGVvdHMgYW5kIFNpbm9wZWFucyBhcmUgc2VuZGluZyB5b3UgdGhlIHNoaXBzIGluIHdoaWNoIHRvIHNhaWwgYXdheSwgYW5kIHRoYXQgbWVuIGFyZSBwcm9taXNpbmcgeW91IHBheSBmcm9tIHRoZSBmaXJzdCBvZiB0aGUgbW9udGgsIGl0IHNlZW1zIHRvIG1lIGl0IGlzIGEgZmluZSB0aGluZyB0byBiZSBjYXJyaWVkIHNhZmVseSB3aGVyZSB3ZSB3YW50IHRvIGdvIGFuZCBhdCB0aGUgc2FtZSB0aW1lIHRvIHJlY2VpdmUgcGF5IGZvciBvdXIgcHJlc2VydmF0aW9uOyB0aGVyZWZvcmUgSSByZW5vdW5jZSB0aGF0IG90aGVyIHByb2plY3QgZm9yIG15c2VsZiwgYW5kIEkgc2F5LCB0byBhbGwgdGhvc2Ugd2hvIGhhdmUgY29tZSB0byBtZSBhbmQgZXhwcmVzc2VkIHRoZSB2aWV3IHRoYXQgaXQgb3VnaHQgdG8gYmUgY2FycmllZCBvdXQsIHRoYXQgdGhleSBhbHNvIHNob3VsZCByZW5vdW5jZSBpdC4KPG1pbGVzdG9uZSBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEZvciBJIGhvbGQgdGhpcyBvcGluaW9uOiBzdGFuZGluZyB0b2dldGhlciBhbmQgaW4gZm9yY2UsIGFzIHlvdSBhcmUgbm93LCBJIHRoaW5rIHlvdSB3aWxsIGJlIGhlbGQgaW4gaG9ub3VyIGFuZCB3aWxsIGhhdmUgcHJvdmlzaW9ucywgZm9yIGluIHN0cmVuZ3RoIGxpZXMgdGhlIG9wcG9ydHVuaXR5IHRvIHdyZXN0IGF3YXkgdGhlIHBvc3Nlc3Npb25zIG9mIHRoZSB3ZWFrZXI7IGJ1dCBsZXQgeW91cnNlbHZlcyBnZXQgc2VwYXJhdGVkIGFuZCB5b3VyIGZvcmNlIGJyb2tlbiB1cCBpbnRvIHNtYWxsIHBhcnRzLCBhbmQgeW91IHdvdWxkIG5laXRoZXIgYmUgYWJsZSB0byBvYnRhaW4gZm9vZCB0byBsaXZlIG9uIG5vciB3b3VsZCB5b3UgY29tZSBvZmYgdW5oYXJtZWQuCjxtaWxlc3RvbmUgbj0iMzMiIHVuaXQ9InNlY3Rpb24iIC8+SSB0aGluaywgdGhlcmVmb3JlLCBqdXN0IGFzIHlvdSBkbywgdGhhdCB3ZSBzaG91bGQgc2V0IG91dCBmb3IgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgYW5kIHRoYXQgaWYgaXQgZG9lcyBjb21lIHRvIHBhc3MgdGhhdCBhbnkgbWFuIGlzIGNhdWdodCBkZXNlcnRpbmcgYmVmb3JlIHRoZSBlbnRpcmUgYXJteSBpcyBpbiBhIHBsYWNlIG9mIHNhZmV0eSwgaGUgc2hvdWxkIGJlIGJyb3VnaHQgdG8gdHJpYWwgYXMgYSB3cm9uZy1kb2VyLiBBbmQgd2hvZXZlciBpcyBvZiB0aGlzIG9waW5pb24s4oCdIGhlIGNvbnRpbnVlZCwg4oCcbGV0IGhpbSByYWlzZSBoaXMgaGFuZC7igJ0gVXAgd2VudCBldmVyeSBoYW5kLgo8bWlsZXN0b25lIG49IjM0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+PHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwNDY5MTEiIGtleT0idGduLDEwNDY5MTEiPlNpbGFudXM8L3BsYWNlTmFtZT4sIGhvd2V2ZXIsIGJlZ2FuIHNob3V0aW5nLCBhbmQgYXR0ZW1wdGVkIHRvIHNheSB0aGF0IGl0IHdhcyBmYWlyIGZvciBhbnkgb25lIHdobyBzbyBjaG9zZSB0byBsZWF2ZSB0aGUgYXJteS4gQnV0IHRoZSBzb2xkaWVycyB3b3VsZCBub3QgYWxsb3cgaGltIHRvIHNwZWFrLCBhbmQgdGhleSB0aHJlYXRlbmVkIGhpbSB0aGF0IGFzIHN1cmVseSBhcyB0aGV5IGNhdWdodCBoaW0gcnVubmluZyBhd2F5LCB0aGV5IHdvdWxkIGluZmxpY3QgZHVlIHB1bmlzaG1lbnQgdXBvbiBoaW0uCjxtaWxlc3RvbmUgbj0iMzUiIHVuaXQ9InNlY3Rpb24iIC8+QWZ0ZXIgdGhhdCwgd2hlbiB0aGUgSGVyYWNsZW90cyBsZWFybmVkIHRoYXQgaXQgaGFkIGJlZW4gdm90ZWQgdG8gc2FpbCBhd2F5LCBhbmQgdGhhdCBYZW5vcGhvbiBoaW1zZWxmIGhhZCBwdXQgdGhlIHF1ZXN0aW9uIHRvIHZvdGUsIHRoZXkgZGlkIHNlbmQgdGhlIHNoaXBzLCBidXQgaW4gdGhlIG1hdHRlciBvZiB0aGUgbW9uZXkgdGhleSBoYWQgcHJvbWlzZWQgdG8gVGltYXNpb24gYW5kIFRob3JheCB0aGV5IHR1cm5lZCBvdXQgdG8gYmUgZGVjZWl2ZXJzLgo8bWlsZXN0b25lIG49IjM2IiB1bml0PSJzZWN0aW9uIiAvPkNvbnNlcXVlbnRseSB0aGUgbWVuIHdobyBoYWQgcHJvbWlzZWQgdGhlIHBheSB3ZXJlIHBhbmljLXN0cmlja2VuLCBhbmQgc3Rvb2QgaW4gZmVhciBvZiB0aGUgYXJteS4gVGhleSB0aGVyZWZvcmUgdG9vayB3aXRoIHRoZW0gdGhlIG90aGVyIGdlbmVyYWxzIHRvIHdob20gdGhleSBoYWQgY29tbXVuaWNhdGVkIHRoZWlyIGVhcmxpZXIgZG9pbmdz4oCUbmFtZWx5LCBhbGwgdGhlIGdlbmVyYWxzIGV4Y2VwdCBOZW9uIHRoZSBBc2luYWVhbiwgd2hvIHdhcyBhY3RpbmcgYXMgbGlldXRlbmFudCBmb3IgQ2hlaXJpc29waHVzIGJlY2F1c2UgQ2hlaXJpc29waHVzIGhhZCBub3QgeWV0IHJldHVybmVk4oCUYW5kIGNhbWUgdG8gWGVub3Bob24sIHdpdGggdGhlIG1lc3NhZ2UgdGhhdCB0aGV5IGhhZCBjaGFuZ2VkIHRoZWlyIG1pbmRzIGFuZCB0aG91Z2h0IGl0IHdhcyBiZXN0IHRvIHNhaWwgdG8gdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMjYzIiBrZXk9InRnbiw3MDEyMjYzIj5QaGFzaXM8L3BsYWNlTmFtZT4sIGluYXNtdWNoIGFzIHRoZXJlIHdlcmUgc2hpcHMgYXQgaGFuZCwgYW5kIHNlaXplIHRoZSBsYW5kIG9mIHRoZSBQaGFzaWFucy4KPG1pbGVzdG9uZSBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVpciBraW5nLCBhcyBpdCBjaGFuY2VkLCB3YXMgYSBncmFuZHNvbiBvZiBBZWV0ZXMuIFhlbm9waG9uIHJlcGxpZWQgdGhhdCBoZSB3b3VsZCBub3Qgc2F5IGEgd29yZCB0byB0aGUgYXJteSBhYm91dCB0aGlzIHBsYW47IOKAnGJ1dCzigJ0gaGUgd2VudCBvbiwg4oCcZ2F0aGVyIHRoZSBtZW4gdG9nZXRoZXIgYW5kIHNwZWFrIHRvIHRoZW0geW91cnNlbHZlcywgaWYgeW91IHdpc2gu4oCdIFRoZW4gVGltYXNpb24gdGhlIERhcmRhbmlhbiBkZWNsYXJlZCBpdCBhcyBoaXMgb3BpbmlvbiB0aGF0IHRoZXkgc2hvdWxkIG5vdCBob2xkIGFuIGFzc2VtYmx5LCBidXQgdGhhdCBlYWNoIGdlbmVyYWwgc2hvdWxkIGZpcnN0IGVuZGVhdm91ciB0byBwZXJzdWFkZSBoaXMgb3duIGNhcHRhaW5zLiBTbyB0aGV5IHdlbnQgYXdheSBhbmQgc2V0IGFib3V0IGRvaW5nIHRoaXMuCjxtaWxlc3RvbmUgbj0iNyIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgc29sZGllcnMsIGFjY29yZGluZ2x5LCBsZWFybmVkIGJ5IGlucXVpcnkgdGhhdCB0aGlzIHBsYW4gd2FzIGJlaW5nIGFnaXRhdGVkLiBBbmQgTmVvbiBzYWlkIHRoYXQgWGVub3Bob24gaGFkIHdvbiBvdmVyIHRoZSBvdGhlciBnZW5lcmFscyBhbmQgd2FzIGludGVuZGluZyB0byBkZWNlaXZlIHRoZSBzb2xkaWVycyBhbmQgbGVhZCB0aGVtIGJhY2sgdG8gdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMjYzIiBrZXk9InRnbiw3MDEyMjYzIj5QaGFzaXM8L3BsYWNlTmFtZT4uCjxtaWxlc3RvbmUgbj0iMiIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgdGhlIHNvbGRpZXJzIHdlcmUgZXhjZWVkaW5nbHkgYW5ncnk7IG1lZXRpbmdzIHdlcmUgaGVsZCwgZ3JvdXBzIG9mIHRoZW0gY29sbGVjdGVkLCBhbmQgaXQgd2FzIGdyZWF0bHkgdG8gYmUgZmVhcmVkIHRoYXQgdGhleSB3b3VsZCBkbyB0aGUgc29ydCBvZiB0aGluZ3MgdGhleSBoYWQgZG9uZSB0byB0aGUgaGVyYWxkcyBvZiB0aGUgQ29sY2hpYW5zIGFuZCB0aGUgbWFya2V0IGNsZXJrcy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFzIGRlc2NyaWJlZCBieSBYZW5vcGhvbiBpbiB0aGUgZm9sbG93aW5nIHNwZWVjaCwgIDEzIGZmLjwvbm90ZT4KPG1pbGVzdG9uZSBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gWGVub3Bob24gYmVjYW1lIGF3YXJlIG9mIHRoZSBzaXR1YXRpb24sIGhlIGRlY2lkZWQgdG8gY2FsbCBhbiBhc3NlbWJseSBvZiB0aGUgbWVuIGFzIHNwZWVkaWx5IGFzIHBvc3NpYmxlIGFuZCBub3QgdG8gYWxsb3cgdGhlbSB0byBnYXRoZXIgb2YgdGhlaXIgb3duIGFjY29yZDsgc28gaGUgZGlyZWN0ZWQgdGhlIGhlcmFsZCB0byBjYWxsIGFuIGFzc2VtYmx5Lgo8bWlsZXN0b25lIG49IjQiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIGFzIHNvb24gYXMgdGhlIHNvbGRpZXJzIGhlYXJkIHRoZSBoZXJhbGQsIHRoZXkgcnVzaGVkIHRvZ2V0aGVyIHdpdGggdGhlIHV0bW9zdCByZWFkaW5lc3MuIFRoZW4gWGVub3Bob24sIHdpdGhvdXQgbWVudGlvbmluZyBhZ2FpbnN0IHRoZSBnZW5lcmFscyB0aGUgbWF0dGVyIG9mIHRoZWlyIHZpc2l0IHRvIGhpbSwgc3Bva2UgYXMgZm9sbG93czoKPG1pbGVzdG9uZSBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSBoZWFyLCBzb2xkaWVycywgdGhhdCBzb21lIG9uZSBpcyBicmluZ2luZyBhIGNoYXJnZSBhZ2FpbnN0IG1lLCBuYW1lbHksIHRoYXQgSSBhbSBnb2luZyB0byBkZWNlaXZlIHlvdSBhbmQgbGVhZCB5b3UgdG8gdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMjYzIiBrZXk9InRnbiw3MDEyMjYzIj5QaGFzaXM8L3BsYWNlTmFtZT4uIEluIHRoZSBuYW1lIG9mIHRoZSBnb2RzLCB0aGVuLCBnaXZlIGVhciB0byBteSB3b3JkcywgYW5kIGlmIGl0IGFwcGVhcnMgdGhhdCBJIGFtIGd1aWx0eSBvZiB3cm9uZywgSSBvdWdodCBub3QgdG8gbGVhdmUgdGhpcyBzcG90IHdpdGhvdXQgcGF5aW5nIHRoZSBwZW5hbHR5OyBidXQgaWYgaXQgYXBwZWFycyB0byB5b3UgdGhhdCBteSBhY2N1c2VycyBhcmUgZ3VpbHR5IG9mIHdyb25nLCB0aGV5IG91Z2h0IHRvIGJlIGRlYWx0IHdpdGggaW4gc3VjaCBtYW5uZXIgYXMgdGhleSBkZXNlcnZlLgo8bWlsZXN0b25lIG49IjYiIHVuaXQ9InNlY3Rpb24iIC8+WW91IGRvdWJ0bGVzcyBrbm93LOKAnSBoZSBjb250aW51ZWQsIOKAnHdoZXJlIHRoZSBzdW4gcmlzZXMgYW5kIHdoZXJlIGl0IHNldHM7IGxpa2V3aXNlLCB0aGF0IGlmIGEgbWFuIGlzIHRvIGdvIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIGhlIG11c3Qgam91cm5leSB0b3dhcmQgdGhlIHdlc3QsIHdoaWxlIGlmIGhlIHdpc2hlcyB0byBnbyB0byB0aGUgbGFuZHMgb2YgdGhlIGJhcmJhcmlhbnMsIGhlIG11c3QgdHJhdmVsIGluIHRoZSBvcHBvc2l0ZSBkaXJlY3Rpb24sIHRoYXQgaXMsIHRvd2FyZCB0aGUgZWFzdC4gTm93IGlzIHRoZXJlIGFueSBvbmUgd2hvIGNvdWxkIGRlY2VpdmUgeW91IGluIHRoaXMgbWF0dGVyLCBieSBtYWludGFpbmluZyB0aGF0IHRoZSBwbGFjZSB3aGVyZSB0aGUgc3VuIHJpc2VzIGlzIHRoZSBvbmUgd2hlcmUgaXQgc2V0cyBhbmQgdGhlIHBsYWNlIHdoZXJlIGl0IHNldHMgaXMgdGhlIG9uZSB3aGVyZSBpdCByaXNlcz8KPG1pbGVzdG9uZSBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB5b3Ugc3VyZWx5IGtub3cgdGhpcyBhbHNvLCB0aGF0IHRoZSBub3J0aCB3aW5kIGNhcnJpZXMgb25lIG91dCBvZiB0aGUgRXV4aW5lIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIHdoaWxlIHRoZSBzb3V0aCB3aW5kIGNhcnJpZXMgeW91IHdpdGhpbiwgdG8gdGhlIFBoYXNpc+KAlGluZGVlZCwgdGhlIHNheWluZyBpcywgYFdoZW4gdGhlIG5vcnRoIHdpbmQgZG90aCBibG93LCBmYWlyIHZveWFnaW5nIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4uJyBJbiB0aGlzIG1hdHRlciwgYWdhaW4sIGlzIGl0IHBvc3NpYmxlIHRoYXQgYW55IG9uZSBjb3VsZCBkZWNlaXZlIHlvdSBpbnRvIGVtYmFya2luZyB3aGVuIHRoZSBzb3V0aCB3aW5kIGlzIGJsb3dpbmc/CjxtaWxlc3RvbmUgbj0iOCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgSSBhbSBnb2luZyB0byBwdXQgeW91IGFib2FyZCwgeW91IG1heSBzYXksIHdoZW4gaXQgaXMgY2FsbS4gV2VsbCwgSSBzaGFsbCBiZSBzYWlsaW5nIG9uIG9uZSBzaGlwLCB5b3Ugb24gYSBodW5kcmVkIGF0IGxlYXN0LiBIb3csIHRoZW4sIGNvdWxkIEkgZWl0aGVyIGZvcmNlIHlvdSB0byB2b3lhZ2UgYWxvbmcgd2l0aCBtZSBpZiB5b3UgZGlkIG5vdCBjaG9vc2UsIG9yIGRlY2VpdmUgeW91IGludG8gZm9sbG93aW5nIG15IGxlYWQ/CjxtaWxlc3RvbmUgbj0iOSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgc3VwcG9zZSB5b3UgaGF2ZSBiZWVuIGRlY2VpdmVkIGFuZCBiZXdpdGNoZWQgYnkgbWUgYW5kIHdlIGhhdmUgY29tZSB0byB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIyNjMiIGtleT0idGduLDcwMTIyNjMiPlBoYXNpczwvcGxhY2VOYW1lPjsgd2UgYWNjb3JkaW5nbHkgZGlzZW1iYXJrIHVwb24gdGhlIHNob3JlOyB5b3Ugd2lsbCBwZXJjZWl2ZSwgbGlrZWx5IGVub3VnaCwgdGhhdCB5b3UgYXJlIG5vdCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+OyBhbmQgSSwgd2hvIGhhdmUgZG9uZSB0aGUgZGVjZWl2aW5nLCB3aWxsIGJlIG9uZSBsb25lIG1hbiwgd2hpbGUgeW91LCB0aGUgZGVjZWl2ZWQsIHdpbGwgYmUgY2xvc2UgdG8gdGVuIHRob3VzYW5kLCB3aXRoIGFybXMgaW4geW91ciBoYW5kcy4gVGhlbiBob3cgY291bGQgYSBtYW4gYnJpbmcgZG93biBwdW5pc2htZW50IHVwb24gaGltc2VsZiBtb3JlIHN1cmVseSB0aGFuIGJ5IHBsYW5uaW5nIGluIHRoYXQgd2F5IGZvciBoaW1zZWxmIGFuZCBmb3IgeW91Pwo8bWlsZXN0b25lIG49IjEwIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTmF5LCB0aGVzZSBhcmUgdGhlIHN0b3JpZXMgb2YgZm9vbGlzaCBtZW4sIGplYWxvdXMgb2YgbWUgYmVjYXVzZSBJIGVuam95IGhvbm91ciBhdCB5b3VyIGhhbmRzLiBBbmQgeWV0IHRoZXkgc2hvdWxkIG5vdCBpbiBmYWlybmVzcyBmZWVsIHN1Y2ggamVhbG91c3k7IGZvciB3aG9tIGFtb25nIHRoZW0gZG8gSSBoaW5kZXIgZWl0aGVyIGZyb20gc2F5aW5nIGFueSBnb29kIHdvcmQgaGUgY2FuIGJlZm9yZSB5b3UsIG9yIGZyb20gZmlnaHRpbmcgaWYgaGUgd2lsbCBpbiB5b3VyIGJlaGFsZiBhbmQgaGlzIG93biwgb3IgZnJvbSBiZWluZyB3YXRjaGZ1bCBpbiBoaXMgY2FyZSBmb3IgeW91ciBzYWZldHk/IFdlbGwsIHRoZW4sIGRvIEkgc3RhbmQgaW4gYW55IG9uZSdzIHdheSB3aGVuIHlvdSBhcmUgY2hvb3NpbmcgY29tbWFuZGVycz8gSSB5aWVsZCwgbGV0IGhpbSBiZSBjb21tYW5kZXI7IG9ubHkgbGV0IGl0IGJlIHNob3duIHRoYXQgaGUgcmVuZGVycyB5b3UgZ29vZCBzZXJ2aWNlLgo8bWlsZXN0b25lIG49IjExIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgbXkgcGFydCwgaG93ZXZlciwgd2hhdCBJIGhhdmUgc2FpZCBvbiB0aGVzZSBwb2ludHMgc2VlbXMgdG8gbWUgc3VmZmljaWVudDsgYnV0IGlmIGFueSBvbmUgYW1vbmcgeW91IGltYWdpbmVzIGVpdGhlciB0aGF0IGhlIGNvdWxkIGJlIGRlY2VpdmVkIGhpbXNlbGYgYnkgc3VjaCB0YWxlcywgb3IgY291bGQgZGVjZWl2ZSBhbm90aGVyIGJ5IHRoZXNlIHRhbGVzLCBsZXQgaGltIHNwZWFrIGFuZCBleHBsYWluLgo8bWlsZXN0b25lIG49IjEyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHlvdSBoYXZlIGhhZCBlbm91Z2ggb2YgdGhpcywgZG8gbm90IGdvIGF3YXkgdW50aWwgeW91IGhhdmUgaGVhcmQgd2hhdCBtYW5uZXIgb2YgZXZpbCBJIHNlZSBiZWdpbm5pbmcgdG8gc2hvdyBpdHNlbGYgaW4gdGhlIGFybXk7IGZvciBpZiBpdCBjb21lcyB1cG9uIHVzIGFuZCBwcm92ZXMgdG8gYmUgYXMgc2VyaW91cyBhcyBpdCBub3cgc2hvd3Mgc2lnbnMgb2YgYmVpbmcsIGl0IGlzIHRpbWUgZm9yIHVzIHRvIGJlIHRha2luZyBjb3Vuc2VsIGZvciBvdXJzZWx2ZXMsIGluIG9yZGVyIHRoYXQgd2UgbWF5IG5vdCBzdGFuZCByZXZlYWxlZCBhcyBtb3N0IHdpY2tlZCBhbmQgYmFzZSBtZW4sIGJvdGggaW4gdGhlIHNpZ2h0IG9mIGdvZHMgYW5kIG1hbmtpbmQsIG9mIGZyaWVuZHMgYW5kIGVuZW1pZXMu4oCdCjxtaWxlc3RvbmUgbj0iMTMiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5VcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgdGhlIHNvbGRpZXJzIGZlbGwgdG8gd29uZGVyaW5nIHdoYXQgdGhlIHRoaW5nIHdhcywgYW5kIHRoZXkgYmFkZSBYZW5vcGhvbiBnbyBvbi4gU28gaGUgYmVnYW4gYWdhaW46IOKAnFlvdSBrbm93LCBwZXJoYXBzLCB0aGF0IGluIHRoZSBtb3VudGFpbnMgdGhlcmUgd2VyZSBiYXJiYXJpYW4gc3Ryb25naG9sZHMsIGZyaWVuZGx5IHRvIHRoZSBDZXJhc3VudGlhbnMsIGZyb20gd2hpY2ggcGVvcGxlIHdvdWxkIGNvbWUgZG93biBhbmQgc2VsbCB5b3UgY2F0dGxlIGFuZCBvdGhlciB0aGluZ3Mgd2hpY2ggdGhleSBoYWQsIGFuZCBhbHNvLCBJIGJlbGlldmUsIHNvbWUgb2YgeW91IHdlbnQgdG8gdGhlIG5lYXJlc3Qgb2YgdGhlc2Ugc3Ryb25naG9sZHMgYW5kIGRpZCBzb21lIGJ1eWluZyBhbmQgY2FtZSBiYWNrIGFnYWluLgo8bWlsZXN0b25lIG49IjE0IiB1bml0PSJzZWN0aW9uIiAvPkNsZWFyZXR1cyB0aGUgY2FwdGFpbiwgbGVhcm5pbmcgdGhhdCB0aGlzIHBsYWNlIHdhcyBub3Qgb25seSBzbWFsbCwgYnV0IGFsc28gdW5ndWFyZGVkLCBmb3IgdGhlIHJlYXNvbiB0aGF0IGl0cyBpbmhhYml0YW50cyBkZWVtZWQgdGhlbXNlbHZlcyBmcmllbmRseSwgc2V0IGZvcnRoIGFnYWluc3QgdGhlbSBieSBuaWdodCB3aXRoIHRoZSBpZGVhIG9mIHBsdW5kZXJpbmcgdGhlIHBsYWNlLCBhbmQgd2l0aG91dCBhIHdvcmQgdG8gYW55IG9uZSBvZiB1cy4KPG1pbGVzdG9uZSBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgaGlzIGludGVudGlvbiwgaW4gY2FzZSBoZSBzaG91bGQgY2FwdHVyZSB0aGlzIHN0cm9uZ2hvbGQsIG5vdCB0byBjb21lIGJhY2sgYWdhaW4gdG8gdGhlIGFybXksIGJ1dCB0byBlbWJhcmsgb24gYSB2ZXNzZWwgdXBvbiB3aGljaCBoaXMgbWVzc21hdGVzIGNoYW5jZWQgdG8gYmUgc2FpbGluZyBhbG9uZyB0aGUgY29hc3QsIHRvIHB1dCBhYm9hcmQgd2hhdGV2ZXIgcGx1bmRlciBoZSBtaWdodCBzZWN1cmUsIGFuZCBzYWlsaW5nIG91dCBvZiB0aGUgRXV4aW5lIHRvIGdvIGF3YXkuIEluZGVlZCwgYXMgSSBub3cgbGVhcm4sIGhpcyBtZXNzbWF0ZXMgb24gdGhlIHZlc3NlbCBoYWQgY29uY2x1ZGVkIGFuIGFncmVlbWVudCB3aXRoIGhpbSB0byB0aGlzIGVmZmVjdC4KPG1pbGVzdG9uZSBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5IZSBhY2NvcmRpbmdseSBzdW1tb25lZCBhbGwgdGhlIG1lbiBoZSBjb3VsZCBwZXJzdWFkZSwgYW5kIHNldCBvdXQgYXQgdGhlaXIgaGVhZCB0byBtYXJjaCBhZ2FpbnN0IHRoZSBzdHJvbmdob2xkLiBXaGlsZSBoZSB3YXMgc3RpbGwgb24gdGhlIG1hcmNoLCBob3dldmVyLCB0aGUgYnJlYWsgb2YgZGF5IHN1cnByaXNlZCBoaW0sIGFuZCB0aGUgcGVvcGxlIG9mIHRoZSBwbGFjZSBnYXRoZXJlZCB0b2dldGhlciBhbmQsIGJ5IHRocm93aW5nIG1pc3NpbGVzIGFuZCBkZWFsaW5nIGJsb3dzIGZyb20gc3Ryb25nIHBvc2l0aW9ucywga2lsbGVkIENsZWFyZXR1cyBhbmQgYSBnb29kIG1hbnkgb2YgaGlzIGZvbGxvd2VycywgYWx0aG91Z2ggc29tZSBvZiB0aGVtIGRpZCBtYWtlIHRoZWlyIHdheSBiYWNrIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDg2MzU3IiBrZXk9InRnbiwxMDg2MzU3Ij5DZXJhc3VzPC9wbGFjZU5hbWU+Lgo8bWlsZXN0b25lIG49IjE3IiB1bml0PSJzZWN0aW9uIiAvPkFsbCB0aGlzIGhhcHBlbmVkIG9uIHRoZSBkYXkgd2hlbiB3ZSB3ZXJlIHNldHRpbmcgZm9ydGggdG8gY29tZSBoaXRoZXIgYnkgbGFuZDsgYW5kIHNvbWUgb2YgdGhvc2Ugd2hvIHdlcmUgZ29pbmcgYnkgc2VhIHdlcmUgc3RpbGwgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwODYzNTciIGtleT0idGduLDEwODYzNTciPkNlcmFzdXM8L3BsYWNlTmFtZT4sIG5vdCBoYXZpbmcgYXMgeWV0IHNldCBzYWlsLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQWZ0ZXIgdGhpcywgYXMgdGhlIENlcmFzdW50aWFucyBzYXksIHRoZXJlIGFycml2ZWQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwODYzNTciIGtleT0idGduLDEwODYzNTciPkNlcmFzdXM8L3BsYWNlTmFtZT4gdGhyZWUgb2YgdGhlIGluaGFiaXRhbnRzIG9mIHRoZSBzdHJvbmdob2xkLCBhbGwgZWxkZXJseSBtZW4sIGRlc2lyaW5nIHRvIGNvbWUgYmVmb3JlIG91ciBnZW5lcmFsIGFzc2VtYmx5Lgo8bWlsZXN0b25lIG49IjE4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBzaW5jZSB0aGV5IGRpZCBub3QgZmluZCB1cywgdGhleSBhZGRyZXNzZWQgdGhlbXNlbHZlcyB0byB0aGUgQ2VyYXN1bnRpYW5zLCBzYXlpbmcgdGhhdCB0aGV5IHdvbmRlcmVkIHdoeSB3ZSBoYWQgc2VlbiBmaXQgdG8gbWFrZSBhbiBhdHRhY2sgdXBvbiB0aGVtLiBXaGVuLCBob3dldmVyLCB0aGUgQ2VyYXN1bnRpYW5zIHJlcGxpZWQsIHNvIHRoZWlyIHN0YXRlbWVudCByYW4sIHRoYXQgaXQgd2FzIG5vdCBieSBwdWJsaWMgYXV0aG9yaXR5IHRoYXQgdGhlIGFmZmFpciB0b29rIHBsYWNlLCB0aGUgZW52b3lzIHdlcmUgcGxlYXNlZCwgYW5kIHdlcmUgaW50ZW5kaW5nIHRvIHNhaWwgaGl0aGVyIGluIG9yZGVyIHRvIHRlbGwgdXMgd2hhdCBoYWQgaGFwcGVuZWQsIGFuZCB0byB1cmdlIHRoYXQgd2Ugc2hvdWxkIG91cnNlbHZlcyB0YWtlIGFuZCBidXJ5IHRoZSBib2RpZXMgb2Ygb3VyIGRlYWQuCjxtaWxlc3RvbmUgbj0iMTkiIHVuaXQ9InNlY3Rpb24iIC8+Tm93IGl0IGNoYW5jZWQgdGhhdCBzb21lIG9mIHRoZSBHcmVla3Mgd2hvIGhhZCBlc2NhcGVkIHdlcmUgc3RpbGwgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwODYzNTciIGtleT0idGduLDEwODYzNTciPkNlcmFzdXM8L3BsYWNlTmFtZT47IGFuZCB3aGVuIHRoZXkgbGVhcm5lZCB3aGl0aGVyIHRoZSBiYXJiYXJpYW5zIHdlcmUgZ29pbmcsIHRoZXkgY29tbWl0dGVkIHRoZSBzaGFtZWxlc3NuZXNzIG9mIG5vdCBvbmx5IGF0dGFja2luZyB0aGVtIHdpdGggc3RvbmVzIHRoZW1zZWx2ZXMsIGJ1dCB1cmdpbmcgb3RoZXJzIHRvIGRvIHRoZSBzYW1lLiBBbmQgdGhlIG1lbiB3ZXJlIGtpbGxlZCwgdGhlc2UgdGhyZWUsIHdobyB3ZXJlIGFtYmFzc2Fkb3Jz4oCUc3RvbmVkIHRvIGRlYXRoLgo8bWlsZXN0b25lIG49IjIwIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2hlbiB0aGlzIGhhZCB0YWtlbiBwbGFjZSwgdGhlIENlcmFzdW50aWFucyBjYW1lIHRvIHVzIGFuZCB0b2xkIHVzIG9mIHRoZSBhZmZhaXI7IGFuZCB3ZSBnZW5lcmFscywgdXBvbiBoZWFyaW5nIHRoZSBzdG9yeSwgd2VyZSBkaXN0cmVzc2VkIGF0IHdoYXQgaGFkIGhhcHBlbmVkLCBhbmQgd2UgcHJvY2VlZGVkIHRvIHRha2UgY291bnNlbCB3aXRoIHRoZSBDZXJhc3VudGlhbnMgYXMgdG8gaG93IHRoZSBib2RpZXMgb2YgdGhlIEdyZWVrIGRlYWQgbWlnaHQgYmUgYnVyaWVkLgo8bWlsZXN0b25lIG49IjIxIiB1bml0PSJzZWN0aW9uIiAvPldoaWxlIHdlIHdlcmUgaW4gc2Vzc2lvbiBvdXRzaWRlIHRoZSBjYW1wLCB3ZSBzdWRkZW5seSBoZWFyZCBhIGdyZWF0IHVwcm9hciBhbmQgc2hvdXRzIG9mIGBTdHJpa2UhIHN0cmlrZSEgcGVsdCEgcGVsdCEnIGFuZCBpbiBhIG1vbWVudCB3ZSBzYXcgYSBjcm93ZCBvZiBtZW4gcnVzaGluZyB0b3dhcmQgdXMgd2l0aCBzdG9uZXMgaW4gdGhlaXIgaGFuZHMgYW5kIG90aGVycyBwaWNraW5nIHVwIHN0b25lcy4KPG1pbGVzdG9uZSBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIENlcmFzdW50aWFucywgaGF2aW5nIHdpdG5lc3NlZCwgbWFyayB5b3UsIHRoZSBhZmZhaXIgaW4gdGhlaXIgb3duIGNpdHksIHdlcmUgbmF0dXJhbGx5IHRlcnJpZmllZCwgYW5kIGh1cnJpZWQgYmFjayB0b3dhcmQgdGhlaXIgc2hpcHMuIEZvciB0aGF0IG1hdHRlciwgYnkgWmV1cywgdGhlcmUgd2VyZSBzb21lIG9mIG91ciBvd24gbnVtYmVyIHdobyB3ZXJlIHRlcnJpZmllZC4KPG1pbGVzdG9uZSBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5JIHdlbnQgdXAgdG8gdGhlIG1lbiwgaG93ZXZlciwgYW5kIGFza2VkIHdoYXQgdGhlIHRyb3VibGUgd2FzLiBTb21lIG9mIHRoZW0gZGlkIG5vdCBrbm93IGF0IGFsbCwgYnV0IG5ldmVydGhlbGVzcyB0aGV5IGhhZCBzdG9uZXMgaW4gdGhlaXIgaGFuZHMuIFdoZW4gSSBkaWQgY29tZSB1cG9uIGEgbWFuIHdobyBrbmV3LCBoZSB0b2xkIG1lIHRoYXQgdGhlIG1hcmtldC1jbGVya3Mgd2VyZSB0cmVhdGluZyB0aGUgYXJteSBtb3N0IG91dHJhZ2VvdXNseS4KPG1pbGVzdG9uZSBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGlzIG1vbWVudCBzb21lIG9uZSBzYXcgdGhlIG1hcmtldC1jbGVyaywgWmVsYXJjaHVzLCByZXRyZWF0aW5nIHRvd2FyZCB0aGUgc2VhLCBhbmQgc2V0IHVwIGEgc2hvdXQ7IGFuZCB3aGVuIHRoZSByZXN0IGhlYXJkIGl0LCB0aGV5IHJ1c2hlZCB1cG9uIGhpbSBhcyB0aG91Z2ggYSB3aWxkIGJvYXIgb3IgYSBzdGFnIGhhZCBiZWVuIHNpZ2h0ZWQuCjxtaWxlc3RvbmUgbj0iMjUiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIG5vdyB0aGUgQ2VyYXN1bnRpYW5zLCBzZWVpbmcgdGhpcyBydXNoIGluIHRoZWlyIG5laWdoYm91cmhvb2QgYW5kIGJlbGlldmluZyBpdCB3YXMgdW5kb3VidGVkbHkgZGlyZWN0ZWQgYWdhaW5zdCB0aGVtc2VsdmVzLCB0b29rIHRvIHJ1bm5pbmcgaW4gdGhlaXIgZmxpZ2h0IGFuZCB0aHJldyB0aGVtc2VsdmVzIGludG8gdGhlIHNlYS4gU29tZSBvZiBvdXIgb3duIG1lbiBhbHNvIHBsdW5nZWQgaW4gd2l0aCB0aGVtLCBhbmQgYW55IHdobyBkaWQgbm90IGNoYW5jZSB0byBrbm93IGhvdyB0byBzd2ltIHdlcmUgZHJvd25lZC4KPG1pbGVzdG9uZSBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hhdCB0aGluayB5b3UgYWJvdXQgdGhlc2UgQ2VyYXN1bnRpYW5zPyBUaGV5IGhhZCBkb25lIG5vIHdyb25nLCBidXQgdGhleSB3ZXJlIGFmcmFpZCB0aGF0IGEga2luZCBvZiBtYWRuZXNzLCBzdWNoIGFzIGF0dGFja3MgZG9ncywgaGFkIHNlaXplZCB1cG9uIHVzLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IGlmIHRoZXNlIGRvaW5ncyBhcmUgdG8gZ28gb24gaW4gdGhpcyB3YXksIG9ic2VydmUgd2hhdCB0aGUgc2l0dWF0aW9uIG9mIHlvdXIgYXJteSB3aWxsIGJlLgo8bWlsZXN0b25lIG49IjI3IiB1bml0PSJzZWN0aW9uIiAvPllvdSwgdGhlIGdlbmVyYWwgYm9keSwgd2lsbCBub3QgaGF2ZSBpdCBpbiB5b3VyIHBvd2VyIGVpdGhlciB0byB1bmRlcnRha2Ugd2FyIHVwb24gd2hvbSB5b3UgcGxlYXNlIG9yIHRvIGJyaW5nIHdhciB0byBhbiBlbmQsIGJ1dCBhbnkgaW5kaXZpZHVhbCB3aG8gd2lzaGVzIHdpbGwgYmUgbGVhZGluZyBhbiBhcm15IHRvIGdhaW4gYW55IGVuZCBoZSBtYXkgZGVzaXJlLiBBbmQgaWYgcGVvcGxlIGNvbWUgdG8geW91IGFzIGFtYmFzc2Fkb3JzLCBkZXNpcmluZyBwZWFjZSBvciBhbnl0aGluZyBlbHNlLCBhbnkgd2hvIGNob29zZSB3aWxsIGtpbGwgdGhlbSBhbmQgcHJldmVudCB5b3UgZnJvbSBoZWFyaW5nIHRoZSB3b3JkcyBvZiB0aG9zZSB3aG8gY29tZSB0byBjb25mZXIgd2l0aCB5b3UuCjxtaWxlc3RvbmUgbj0iMjgiIHVuaXQ9InNlY3Rpb24iIC8+RnVydGhlcm1vcmUsIHRoZSBtZW4gd2hvbSB5b3UgYXMgYSBib2R5IG1heSBjaG9vc2UgZm9yIGNvbW1hbmRlcnMgd2lsbCBiZSBvZiBubyBhY2NvdW50LCBidXQgd2hvZXZlciBtYXkgY2hvb3NlIGhpbXNlbGYgZ2VuZXJhbCBhbmQgd2lsbCByYWlzZSB0aGUgY3J5IGBQZWx0LCBwZWx0LCcgdGhhdCBtYW4gd2lsbCBoYXZlIHRoZSBwb3dlciB0byBzbGF5IGVpdGhlciBjb21tYW5kZXIgb3IgcHJpdmF0ZSwgYW55IG9uZSBvZiB5b3UgaGUgcGxlYXNlcywgd2l0aG91dCBhIHRyaWFsLCBwcm92aWRlZOKAlGFzIGluZGVlZCBpdCBjYW1lIGFib3V0IGluIHRoZSBwcmVzZW50IGNhc2XigJR0aGVyZSBhcmUgcGVvcGxlIHdobyB3aWxsIG9iZXkgaGltLgo8bWlsZXN0b25lIG49IjI5IiB1bml0PSJzZWN0aW9uIiAvPkNvbnNpZGVyIHRoZSBzb3J0IG9mIHRoaW5ncyB0aGVzZSBzZWxmLWNob3NlbiBnZW5lcmFscyBoYXZlIGFjdHVhbGx5IGFjY29tcGxpc2hlZCBmb3IgeW91LiBUYWtlIFplbGFyY2h1cywgdGhlIG1hcmtldC1jbGVyazogc3VwcG9zaW5nIGhlIGhhcyBkb25lIHlvdSB3cm9uZywgaGUgaGFzIHNhaWxlZCBvZmYgd2l0aG91dCBwYXlpbmcgeW91IHRoZSBwZW5hbHR5OyBzdXBwb3NpbmcgaGUgaXMgbm90IGd1aWx0eSwgaGUgaGFzIGZsZWQgZnJvbSB0aGUgYXJteSBvdXQgb2YgZmVhciB0aGF0IGhlIG1pZ2h0IGJlIHNsYWluIHVuanVzdGx5IGFuZCB3aXRob3V0IGEgdHJpYWwuCjxtaWxlc3RvbmUgbj0iMzAiIHVuaXQ9InNlY3Rpb24iIC8+VGFrZSB0aG9zZSB3aG8gc3RvbmVkIHRvIGRlYXRoIHRoZSBhbWJhc3NhZG9yczogdGhleSBoYXZlIGFjY29tcGxpc2hlZCB0aGlzIHJlc3VsdCwgdGhhdCB5b3UgYWxvbmUgb2YgYWxsIHRoZSBHcmVla3MgY2Fubm90IGdvIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDg2MzU3IiBrZXk9InRnbiwxMDg2MzU3Ij5DZXJhc3VzPC9wbGFjZU5hbWU+IHNhZmVseSB1bmxlc3MgeW91IGFycml2ZSB0aGVyZSB3aXRoIGEgc3Ryb25nIGZvcmNlOyBhbmQgYXMgZm9yIHRoZSBkZWFkIHdob20gcHJldmlvdXNseSB0aGUgdmVyeSBtZW4gd2hvIGtpbGxlZCB0aGVtIHByb3Bvc2VkIGJ1cnlpbmcsIHRoZSByZXN1bHQgYWNjb21wbGlzaGVkIGlzLCB0aGF0IG5vdyBpdCBpcyBub3Qgc2FmZSB0byBwaWNrIHVwIHRoZWlyIGJvZGllcyBldmVuIGZvciBvbmUgd2hvIGNhcnJpZXMgYSBoZXJhbGQncyBzdGFmZi4gRm9yIHdobyB3aWxsIGNhcmUgdG8gZ28gYXMgaGVyYWxkIHdoZW4gaGUgaGFzIHRoZSBibG9vZCBvZiBoZXJhbGRzIHVwb24gaGlzIGhhbmRzPyBTbyB3ZSByZXF1ZXN0ZWQgdGhlIENlcmFzdW50aWFucyB0byBidXJ5IHRoZW0uCjxtaWxlc3RvbmUgbj0iMzEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgaWYgdGhlc2UgdGhpbmdzIGFyZSByaWdodCwgZG8geW91IHNvIHJlc29sdmUsIGluIG9yZGVyIHRoYXQsIHdpdGggdGhlIHVuZGVyc3RhbmRpbmcgdGhhdCBzdWNoIGRlZWRzIGFyZSB0byBiZSBkb25lLCBhIG1hbiBtYXkgZXN0YWJsaXNoIGhpcyBvd24gcHJpdmF0ZSBndWFyZCBhbmQgbWF5IGVuZGVhdm91ciB0byBob2xkIHBvc3Nlc3Npb24gb2YgdGhlIHN0cm9uZyBwbGFjZXMgb3ZlcmhhbmdpbmcgaGltIG9uIHRoZSByaWdodCB3aGVuIGhlIGVuY2FtcHMuCjxtaWxlc3RvbmUgbj0iMzIiIHVuaXQ9InNlY3Rpb24iIC8+SWYsIGhvd2V2ZXIsIHlvdSB0aGluayB0aGF0IHN1Y2ggZGVlZHMgYXJlIHRob3NlIG9mIHdpbGQgYmVhc3RzIGFuZCBub3Qgb2YgaHVtYW4gYmVpbmdzLCBsb29rIGFib3V0IGZvciBzb21lIG1lYW5zIG9mIHN0b3BwaW5nIHRoZW07IG90aGVyd2lzZSwgaG93LCBpbiB0aGUgbmFtZSBvZiBaZXVzLCBzaGFsbCB3ZSBvZmZlciBnbGFkIHNhY3JpZmljZXMgdG8gdGhlIGdvZHMgd2hlbiB3ZSBhcmUgZG9pbmcgaW1waW91cyBkZWVkcywgb3IgaG93IHNoYWxsIHdlIGZpZ2h0IHdpdGggZW5lbWllcyBpZiB3ZSBhcmUgc2xheWluZyBvbmUgYW5vdGhlcj8KPG1pbGVzdG9uZSBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hhdCBmcmllbmRseSBjaXR5IHdpbGwgcmVjZWl2ZSB1cyB3aGVuIGl0IHNlZXMgc28gZ3JlYXQgbGF3bGVzc25lc3MgYW1vbmdzdCB1cz8gV2hvIHdpbGwgZGFyZSB0byBzdXBwbHkgdXMgYSBtYXJrZXQgaWYgaW4gbWF0dGVycyBvZiB0aGUgZ3JlYXRlc3QgaW1wb3J0IHdlIHNob3cgb3Vyc2VsdmVzIGd1aWx0eSBvZiBzdWNoIG9mZmVuY2VzPyBBbmQgaW4gdGhhdCBsYW5kPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+Ljwvbm90ZT4gd2hlcmUgd2UgYXJlIGFsd2F5cyBmYW5jeWluZyB0aGF0IHdlIHNoYWxsIG9idGFpbiBwcmFpc2UgZnJvbSBldmVyeSBvbmUsIHdobyB3aWxsIHByYWlzZSB1cyBpZiB3ZSBhcmUgbWVuIG9mIHRoaXMgc29ydD8gRm9yIHdlIG91cnNlbHZlcywgSSBhbSBxdWl0ZSBzdXJlLCBzaG91bGQgc2F5IHRoYXQgcGVvcGxlIHdobyBwZXJmb3JtIHN1Y2ggZGVlZHMgYXJlIHNjb3VuZHJlbHMu4oCdCjxtaWxlc3RvbmUgbj0iMzQiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZXJldXBvbiBhbGwgcm9zZSBhbmQgcHJvcG9zZWQgdGhhdCB0aGUgbWVuIHdobyBiZWdhbiB0aGlzIGFmZmFpciBzaG91bGQgYmUgZHVseSBwdW5pc2hlZCwgYW5kIHRoYXQgaGVuY2Vmb3J0aCBubyBvbmUgc2hvdWxkIGJlIGFnYWluIHBlcm1pdHRlZCB0byBtYWtlIGEgYmVnaW5uaW5nIG9mIGxhd2xlc3NuZXNzOyBidXQgaWYgYW55IHNob3VsZCBzbyBiZWdpbiwgdGhleSB3ZXJlIHRvIGJlIHB1dCBvbiB0cmlhbCBmb3IgdGhlaXIgbGl2ZXM7IGFuZCB0aGUgZ2VuZXJhbHMgd2VyZSB0byBicmluZyBhbGwgb2ZmZW5kZXJzIHRvIHRyaWFsLCBhbmQgdHJpYWxzIHdlcmUgbGlrZXdpc2UgdG8gYmUgaGVsZCBpbiB0aGUgbWF0dGVyIG9mIGFueSBvdGhlciBvZmZlbmNlcyB3aGljaCBhbnkgb25lIGhhZCBjb21taXR0ZWQgc2luY2UgdGhlIHRpbWUgd2hlbiA8cGVyc05hbWU+Q3lydXM8L3BlcnNOYW1lPiB3YXMga2lsbGVkOyBhbmQgdGhleSBhcHBvaW50ZWQgdGhlIGNhcHRhaW5zIHRvIHNlcnZlIGFzIGEganVyeS4KPG1pbGVzdG9uZSBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVyLCB1cG9uIHRoZSByZWNvbW1lbmRhdGlvbiBvZiBYZW5vcGhvbiwgYW5kIGJ5IHRoZSBhZHZpY2Ugb2YgdGhlIHNvb3Roc2F5ZXJzLCBpdCB3YXMgcmVzb2x2ZWQgdG8gcHVyaWZ5IHRoZSBhcm15LiBTbyB0aGUgcml0ZXMgb2YgcHVyaWZpY2F0aW9uIHdlcmUgcGVyZm9ybWVkLgo8bWlsZXN0b25lIG49IjgiIHVuaXQ9ImNoYXB0ZXIiIC8+PG1pbGVzdG9uZSBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgd2FzIGxpa2V3aXNlIHJlc29sdmVkIHRoYXQgdGhlIGdlbmVyYWxzIHNob3VsZCB1bmRlcmdvIGFuIGlucXVpcnkgd2l0aCByZWZlcmVuY2UgdG8gdGhlaXIgcGFzdCBjb25kdWN0LiBXaGVuIHRoZXkgcHJlc2VudGVkIHRoZWlyIHN0YXRlbWVudHMsIFBoaWxlc2l1cyBhbmQgWGFudGhpY2xlcyB3ZXJlIGNvbmRlbW5lZCwgZm9yIHRoZWlyIGNhcmVsZXNzIGd1YXJkaW5nIG9mIHRoZSBtZXJjaGFudG1lbidzIGNhcmdvZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gPGJpYmwgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4xLjE2IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuMS4xNjwvYmlibD4uPC9ub3RlPiB0byBwYXkgdGhlIGxvc3MgaW5jdXJyZWQsIG5hbWVseSwgdHdlbnR5IG1pbmFzLCBhbmQgU29waGFlbmV0dXMsIGZvciBuZWdsZWN0IG9mIGR1dHkgaW4gdGhlIG9mZmljZSB0byB3aGljaCBoZSBoYWQgYmVlbiBjaG9zZW4sPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gPGJpYmwgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4zLjEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS4zLjE8L2JpYmw+LCBhbmQgc2VlIGNyaXRpY2FsIG5vdGUuPC9ub3RlPiB3YXMgZmluZWQgdGVuIG1pbmFzLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWNjdXNhdGlvbnMgd2VyZSBhbHNvIG1hZGUgYWdhaW5zdCBYZW5vcGhvbiBieSBjZXJ0YWluIG1lbiB3aG8gY2xhaW1lZCB0aGF0IGhlIGhhZCBiZWF0ZW4gdGhlbSwgYW5kIHNvIGJyb3VnaHQgdGhlIGNoYXJnZSBvZiB3YW50b24gYXNzYXVsdC4KPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlhlbm9waG9uIGJhZGUgdGhlIGZpcnN0IG1hbiB3aG8gc3Bva2UgdG8gc3RhdGUgd2hlcmUgaXQgd2FzIHRoYXQgaGUgaGFkIHN0cnVjayBoaW0uIEhlIHJlcGxpZWQsIOKAnEluIHRoZSBwbGFjZSB3aGVyZSB3ZSB3ZXJlIHBlcmlzaGluZyB3aXRoIGNvbGQgYW5kIHRoZXJlIHdhcyBhbiBlbm9ybW91cyBhbW91bnQgb2Ygc25vdy7igJ0KPG1pbGVzdG9uZSBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBYZW5vcGhvbiBzYWlkLCDigJxXZWxsLCByZWFsbHksIHdpdGggd2VhdGhlciBvZiB0aGUgc29ydCB5b3UgZGVzY3JpYmUgYW5kIHByb3Zpc2lvbnMgdXNlZCB1cCBhbmQgbm8gY2hhbmNlIGV2ZW4gdG8gZ2V0IGEgc21lbGwgb2Ygd2luZSwgd2hlbiBtYW55IG9mIHVzIHdlcmUgYmVjb21pbmcgZXhoYXVzdGVkIHdpdGggaGFyZHNoaXBzIGFuZCB0aGUgZW5lbXkgd2VyZSBhdCBvdXIgaGVlbHMsIGlmIGF0IHN1Y2ggYSB0aW1lIGFzIHRoYXQgSSB3YW50b25seSBhYnVzZWQgeW91LCBJIGFkbWl0IHRoYXQgSSBhbSBtb3JlIHdhbnRvbiBldmVuIHRoYW4gdGhlIGFzcywgd2hpY2gsIGJlY2F1c2Ugb2YgaXRzIHdhbnRvbm5lc3MsIHNvIHRoZSBzYXlpbmcgcnVucywgaXMgbm90IHN1YmplY3QgdG8gZmF0aWd1ZS4gTmV2ZXJ0aGVsZXNzLCBkbyB0ZWxsIHVzLOKAnSBoZSBzYWlkLCDigJxmb3Igd2hhdCByZWFzb24geW91IHdlcmUgc3RydWNrLgo8bWlsZXN0b25lIG49IjQiIHVuaXQ9InNlY3Rpb24iIC8+RGlkIEkgYXNrIHlvdSBmb3Igc29tZXRoaW5nLCBhbmQgdGhlbiBzdHJpa2UgeW91IGJlY2F1c2UgeW91IHdvdWxkIG5vdCBnaXZlIGl0IHRvIG1lPyBEaWQgSSBkZW1hbmQgc29tZXRoaW5nIGJhY2s/IFdhcyBpdCBpbiBhIGZpZ2h0IG92ZXIgYSBmYXZvdXJpdGU/IFdhcyBpdCBhbiBhY3Qgb2YgZHJ1bmtlbiB2aW9sZW5jZT/igJ0KPG1pbGVzdG9uZSBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlIG1hbiByZXBsaWVkIHRoYXQgaXQgd2FzIG5vbmUgb2YgdGhlc2UgdGhpbmdzLCBYZW5vcGhvbiBhc2tlZCBoaW0gaWYgaGUgd2FzIGEgaG9wbGl0ZS4gSGUgc2FpZCBuby4gV2FzIGhlIGEgcGVsdGFzdCwgdGhlbj8gTm8sIG5vdCB0aGF0IGVpdGhlciwgaGUgc2FpZCwgYnV0IGhlIGhhZCBiZWVuIGRldGFpbGVkIGJ5IGhpcyBtZXNzbWF0ZXMsIGFsdGhvdWdoIGhlIHdhcyBhIGZyZWUgbWFuLCB0byBkcml2ZSBhIG11bGUuCjxtaWxlc3RvbmUgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGF0IFhlbm9waG9uIHJlY29nbml6ZWQgaGltLCBhbmQgYXNrZWQ6IOKAnEFyZSB5b3UgdGhlIGZlbGxvdyB3aG8gY2FycmllZCB0aGUgc2ljayBtYW4/4oCdIOKAnFllcywgYnkgWmV1cyzigJ0gaGUgcmVwbGllZCwg4oCcZm9yIHlvdSBmb3JjZWQgbWUgdG8gZG8gc287IGFuZCB5b3Ugc2NhdHRlcmVkIG15IG1lc3NtYXRlcycgYmFnZ2FnZSBhbGwgYWJvdXQu4oCdCjxtaWxlc3RvbmUgbj0iNyIgdW5pdD0ic2VjdGlvbiIgLz7igJxXaHksIHRoZSBzY2F0dGVyaW5nLOKAnSBzYWlkIFhlbm9waG9uLCDigJx3YXMgYWZ0ZXIgdGhpcyBmYXNoaW9uOiBJIGRpc3RyaWJ1dGVkIGl0IGFtb25nIG90aGVycyB0byBjYXJyeSBhbmQgZGlyZWN0ZWQgdGhlbSB0byBicmluZyBpdCBiYWNrIHRvIG1lLCBhbmQgd2hlbiBJIGdvdCBpdCBiYWNrLCBJIHJldHVybmVkIHRoZSB3aG9sZSBvZiBpdCB0byB5b3UgaW50YWN0IHdoZW4geW91LCBmb3IgeW91ciBwYXJ0LCBoYWQgc2hvd24gbWUgdGhlIHNpY2sgbWFuLiBCdXQgbGlzdGVuLCBhbGwgb2YgeW91LOKAnSBoZSBjb250aW51ZWQsIOKAnGFuZCBoZWFyIGhvdyB0aGUgYWZmYWlyIGhhcHBlbmVkOyBmb3IgdGhlIHN0b3J5IGlzIHdvcnRoIGhlYXJpbmcuCjxtaWxlc3RvbmUgbj0iOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEEgbWFuIHdhcyBiZWluZyBsZWZ0IGJlaGluZCBiZWNhdXNlIGhlIHdhcyB1bmFibGUgdG8ga2VlcCBnb2luZyBhbnkgbG9uZ2VyLiBJIHdhcyBhY3F1YWludGVkIHdpdGggdGhlIG1hbiBvbmx5IHNvIGZhciBhcyB0byBrbm93IHRoYXQgaGUgd2FzIG9uZSBvZiBvdXIgbnVtYmVyLCBhbmQgSSBmb3JjZWQgeW91LCBzaXIsIHRvIGNhcnJ5IGhpbSBpbiBvcmRlciB0aGF0IGhlIG1pZ2h0IG5vdCBwZXJpc2g7IGZvciwgYXMgSSByZW1lbWJlciwgdGhlIGVuZW15IHdlcmUgZm9sbG93aW5nIGFmdGVyIHVzLuKAnSBUbyB0aGF0IHRoZSBmZWxsb3cgYWdyZWVkLgo8bWlsZXN0b25lIG49IjkiIHVuaXQ9InNlY3Rpb24iIC8+4oCcV2VsbCzigJ0gWGVub3Bob24gY29udGludWVkLCDigJxhZnRlciBJIGhhZCBzZW50IHlvdSBvbiBhaGVhZCwgSSBvdmVydG9vayB5b3UgYWdhaW4sIGFzIEkgY2FtZSBhbG9uZyB3aXRoIHRoZSByZWFyZ3VhcmQsIGFuZCBmb3VuZCB5b3UgZGlnZ2luZyBhIGhvbGUgdG8gYnVyeSB0aGUgbWFuIGluLCBhbmQgSSBzdG9wcGVkIGFuZCBjb21tZW5kZWQgeW91Lgo8bWlsZXN0b25lIG49IjEwIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGVuLCBhcyB3ZSB3ZXJlIHN0YW5kaW5nIGJ5LCB0aGUgbWFuIGRyZXcgdXAgaGlzIGxlZywgYWxsIG9mIHVzIGNyaWVkIG91dCwgYFRoZSBtYW4gaXMgYWxpdmUnOyBhbmQgeW91IHNhaWQsIGBMZXQgaGltIGJlIGFsaXZlIGp1c3QgYXMgbXVjaCBhcyBoZSBwbGVhc2VzLCBJLCBmb3IgbXkgcGFydCwgYW0gbm90IGdvaW5nIHRvIGNhcnJ5IGhpbS4nIFRoZW4gSSBzdHJ1Y2sgeW91OyB5b3VyIHN0b3J5IGlzIHRydWU7IGZvciBpdCBsb29rZWQgdG8gbWUgYXMgaWYgeW91IGtuZXcgdGhhdCBoZSB3YXMgYWxpdmUu4oCdCjxtaWxlc3RvbmUgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+4oCcV2VsbCwgd2hhdCBvZiB0aGF0LOKAnSB0aGUgZmVsbG93IHNhaWQ7IOKAnGRpZG4ndCBoZSBkaWUgYWxsIHRoZSBzYW1lIGFmdGVyIEkgaGFkIHNob3duIGhpbSB0byB5b3U/4oCdIOKAnFdoeSzigJ0gc2FpZCBYZW5vcGhvbiwg4oCcYWxsIG9mIHVzIGFyZSBsaWtld2lzZSBnb2luZyB0byBkaWU7IGJ1dCBzaG91bGQgd2Ugb24gdGhhdCBhY2NvdW50IGJlIGJ1cmllZCBhbGl2ZT/igJ0KPG1pbGVzdG9uZSBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFzIGZvciB0aGlzIGZlbGxvdywgZXZlcnlib2R5IGNyaWVkIG91dCB0aGF0IFhlbm9waG9uIGhhZCBnaXZlbiBoaW0gZmV3ZXIgYmxvd3MgdGhhbiBoZSBkZXNlcnZlZC4gVGhlbiBoZSBkaXJlY3RlZCB0aGUgcmVzdCB0byBzdGF0ZSB0aGUgcmVhc29uIHdoeSBlYWNoIG9uZSBvZiB0aGVtIGhhZCBiZWVuIHN0cnVjay4KPG1pbGVzdG9uZSBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgZmFpbGVkIHRvIHJpc2UsIGhlIHdlbnQgb24gaGltc2VsZjog4oCcSSBhZG1pdCwgc29sZGllcnMsIHRoYXQgSSBoYXZlIGluZGVlZCBzdHJ1Y2sgbWVuIGZvciBuZWdsZWN0IG9mIGRpc2NpcGxpbmUsIHRoZSBtZW4gd2hvIHdlcmUgY29udGVudCB0byBiZSBrZXB0IHNhZmUgYnkgeW91IHdobyBtYXJjaGVkIGluIGR1ZSBvcmRlciBhbmQgZm91Z2h0IHdoZXJldmVyIHRoZXJlIHdhcyBuZWVkLCB3aGlsZSB0aGV5IHRoZW1zZWx2ZXMgd291bGQgbGVhdmUgdGhlIHJhbmtzIGFuZCBydW4gb24gYWhlYWQgaW4gdGhlIGRlc2lyZSB0byBzZWN1cmUgcGx1bmRlciBhbmQgdG8gZW5qb3kgYW4gYWR2YW50YWdlIG92ZXIgeW91LiBGb3IgaWYgYWxsIG9mIHVzIGhhZCBiZWhhdmVkIGluIHRoaXMgd2F5LCBhbGwgb2YgdXMgYWxpa2Ugd291bGQgaGF2ZSBwZXJpc2hlZC4KPG1pbGVzdG9uZSBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BZ2Fpbiwgd2hlbiBhIG1hbiBiZWhhdmVkIGxpa2UgYSB3ZWFrbGluZyBhbmQgcmVmdXNlZCB0byBnZXQgdXAsIHByZWZlcnJpbmcgdG8gbGVhdmUgaGltc2VsZiBhIHByZXkgdG8gdGhlIGVuZW15LCBJIGRpZCBpbmRlZWQgc3RyaWtlIGhpbSBhbmQgdXNlIHZpb2xlbmNlIHRvIGNvbXBlbCBoaW0gdG8gZ28gb24uIEZvciBvbmNlIGR1cmluZyB0aGUgc2V2ZXJlIHdlYXRoZXIgSSBteXNlbGYgcmVtYWluZWQgc2VhdGVkIGZvciBxdWl0ZSBhIGxvbmcgdGltZSwgd2FpdGluZyBmb3Igc29tZSBwZW9wbGUgd2hvIHdlcmUgcGFja2luZyB1cCwgYW5kIEkgZGlzY292ZXJlZCB0aGF0IGl0IHdhcyBoYXJkIHdvcmsgdG8gZ2V0IHVwIGFuZCBzdHJldGNoIG15IGxlZ3MuCjxtaWxlc3RvbmUgbj0iMTUiIHVuaXQ9InNlY3Rpb24iIC8+SGF2aW5nIHRlc3RlZCB0aGUgbWF0dGVyLCB0aGVuLCBpbiBteSBvd24gY2FzZSwgSSB1c2VkIGFmdGVyIHRoYXQgdG8gZHJpdmUgb24gYW55IG90aGVyIG1hbiB3aG9tIEkgbWlnaHQgc2VlIHNpdHRpbmcgZG93biBhbmQgc2hpcmtpbmc7IGZvciBnZXR0aW5nIGludG8gbW90aW9uIGFuZCBhY3RpbmcgbGlrZSBhIG1hbiBwcm9kdWNlZCBhIGNlcnRhaW4gYW1vdW50IG9mIHdhcm10aCBhbmQgc3VwcGxlbmVzcywgd2hpbGUgc2l0dGluZyBhbmQga2VlcGluZyBxdWlldCB0ZW5kZWQsIGFzIEkgc2F3LCB0byBtYWtlIHRoZSBibG9vZCBmcmVlemUgYW5kIHRoZSB0b2VzIHJvdCBvZmYsIGp1c3QgdGhlIG1pc2ZvcnR1bmVzIHdoaWNoIG1hbnkgcGVvcGxlIHN1ZmZlcmVkLCBhcyB5b3Uga25vdyBmb3IgeW91cnNlbHZlcy4KPG1pbGVzdG9uZSBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5JbiBzdGlsbCBhbm90aGVyIGNhc2UsIHRoZSBtYW4sIHBlcmhhcHMsIHdobyBmZWxsIGJlaGluZCBzb21ld2hlcmUgb3V0IG9mIGluZG9sZW5jZSBhbmQgcHJldmVudGVkIGJvdGggeW91IGluIHRoZSB2YW4gYW5kIHVzIGluIHRoZSByZWFyIGZyb20gZ29pbmcgb24sIEkgc3RydWNrIHN1Y2ggYSBvbmUgd2l0aCB0aGUgZmlzdCBpbiBvcmRlciB0aGF0IHRoZSBlbmVteSBtaWdodCBub3Qgc3RyaWtlIGhpbSB3aXRoIHRoZSBsYW5jZS4KPG1pbGVzdG9uZSBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5JbmRlZWQsIHRoYXQgaXMgdGhlIHJlYXNvbiB3aHkgdGhlc2UgcGVvcGxlLCBoYXZpbmcgYmVlbiBzYXZlZCwgbm93IGhhdmUgaXQgaW4gdGhlaXIgcG93ZXIgdG8gb2J0YWluIHNhdGlzZmFjdGlvbiBmb3Igd2hhdGV2ZXIgdGhleSBzdWZmZXJlZCB1bmp1c3RseSBhdCBteSBoYW5kcy4gQnV0IGlmIHRoZXkgaGFkIGZhbGxlbiBpbnRvIHRoZSBoYW5kcyBvZiB0aGUgZW5lbXksIHdoYXQgc3VmZmVyaW5nIHdvdWxkIHRoZXkgaGF2ZSBleHBlcmllbmNlZCBzbyBncmVhdCB0aGF0IHRoZXkgd291bGQgbm93IGJlIGFza2luZyB0byBvYnRhaW4gc2F0aXNmYWN0aW9uIGZvciBpdD88bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBzcGVha2VyIGltcGxpZXMgaW4gdGhpcyBzYXJjYXN0aWMgd2F5IHRoYXQgdGhleSB3b3VsZCBoYXZlIG1ldCB0aGVpciBkZWF0aCwgYW5kIHdvdWxkIG5vdCBiZSB0YWxraW5nIG5vdyBhYm91dCBzYXRpc2ZhY3Rpb24gZm9yIHRoYXQgb3IgYW55dGhpbmcgZWxzZS48L25vdGU+CjxtaWxlc3RvbmUgbj0iMTgiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxNeSBkZWZlbmNlLOKAnSBoZSBjb250aW51ZWQsIOKAnGlzIHNpbXBsZTogaWYgaXQgd2FzIGZvciBoaXMgZ29vZCB0aGF0IEkgcHVuaXNoZWQgYW55IG9uZSwgSSB0aGluayBJIHNob3VsZCByZW5kZXIgdGhlIHNvcnQgb2YgYWNjb3VudCB0aGF0IHBhcmVudHMgcmVuZGVyIHRvIHNvbnMgYW5kIHRlYWNoZXJzIHRvIHB1cGlsczsgZm9yIHRoYXQgbWF0dGVyLCBzdXJnZW9ucyBhbHNvIGJ1cm4gYW5kIGN1dCBwYXRpZW50cyBmb3IgdGhlaXIgZ29vZDsKPG1pbGVzdG9uZSBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5idXQgaWYgeW91IGJlbGlldmUgaXQgd2FzIG91dCBvZiB3YW50b25uZXNzIHRoYXQgSSBkaWQgdGhlc2UgdGhpbmdzLCB0YWtlIG5vdGUgdGhhdCBub3csIGJ5IHRoZSBibGVzc2luZyBvZiB0aGUgZ29kcywgSSBhbSBtb3JlIGNvbmZpZGVudCB0aGFuIEkgd2FzIHRoZW4gYW5kIHRoYXQgSSBhbSBib2xkZXIgbm93IHRoYW4gdGhlbiBhbmQgZHJpbmsgbW9yZSB3aW5lLCBidXQgbmV2ZXJ0aGVsZXNzIEkgc3RyaWtlIG5vIG1hbuKAlGZvciB0aGUgcmVhc29uIHRoYXQgSSBzZWUgeW91IGFyZSBpbiBjYWxtIHdhdGVycy4KPG1pbGVzdG9uZSBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBpdCBpcyBzdG9ybXkgd2VhdGhlciBhbmQgYSBoaWdoIHNlYSBpcyBydW5uaW5nLCBkbyB5b3Ugbm90IG9ic2VydmUgdGhhdCBldmVuIGZvciBhIG1lcmUgbm9kIHRoZSBsb29rb3V0IGdldHMgYW5ncnkgd2l0aCB0aGUgcGVvcGxlIGF0IHRoZSBwcm93IGFuZCB0aGUgaGVsbXNtYW4gYW5ncnkgd2l0aCB0aGUgcGVvcGxlIGF0IHRoZSBzdGVybj8gRm9yIGluIHN1Y2ggYSBzaXR1YXRpb24gZXZlbiBzbWFsbCBibHVuZGVycyBhcmUgZW5vdWdoIHRvIHJ1aW4gZXZlcnl0aGluZy4KPG1pbGVzdG9uZSBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgeW91IHJlbmRlcmVkIGp1ZGdtZW50IHlvdXJzZWx2ZXMgdGhhdCBJIHdhcyBqdXN0aWZpZWQgaW4gc3RyaWtpbmcgdGhvc2UgbWVuOyBmb3IgeW91IHN0b29kIGJ5LCB3aXRoIHN3b3Jkcywgbm90IGJhbGxvdHMsIGluIHlvdXIgaGFuZHMsIGFuZCBpdCB3YXMgd2l0aGluIHlvdXIgcG93ZXIgdG8gY29tZSB0byB0aGVpciBhaWQgaWYgeW91IGNob3NlOyBidXQsIGJ5IFpldXMsIHlvdSB3b3VsZCBuZWl0aGVyIGdpdmUgdGhvc2UgcGVvcGxlIGFpZCBub3Igd291bGQgeW91IGpvaW4gd2l0aCBtZSBpbiBzdHJpa2luZyBzdWNoIGFzIHZpb2xhdGVkIGRpc2NpcGxpbmUuCjxtaWxlc3RvbmUgbj0iMjIiIHVuaXQ9InNlY3Rpb24iIC8+Q29uc2VxdWVudGx5IHlvdSBnYXZlIHRoZSBiYWQgYW1vbmcgdGhlbSBmcmVlZG9tIHRvIGFjdCB3YW50b25seSBieSB0aHVzIGxldHRpbmcgdGhlbSBhbG9uZS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEZvciBJIHRoaW5rLCBpZiB5b3UgY2FyZSB0byBsb29rIGludG8gdGhlIG1hdHRlciwgeW91IHdpbGwgZmluZCBpdCBpcyB0aGUgdmVyeSBzYW1lIG1lbiB3aG8gd2VyZSB0aGVuIG1vc3QgY293YXJkbHkgdGhhdCBhcmUgbm93IG1vc3Qgd2FudG9uLgo8bWlsZXN0b25lIG49IjIzIiB1bml0PSJzZWN0aW9uIiAvPkF0IGFueSByYXRlLCBCb2lzY3VzIHRoZSBib3hlciwgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTkiIGtleT0idGduLDcwMDEzOTkiPlRoZXNzYWx5PC9wbGFjZU5hbWU+LCB0aGVuIGZvdWdodCBoYXJkIHRvIGVzY2FwZSBjYXJyeWluZyBoaXMgc2hpZWxkLCBvbiB0aGUgcGxlYSB0aGF0IGhlIHdhcyB0aXJlZCwgYnV0IG5vdywgYXMgSSBoZWFyLCBoZSBoYXMgYWxyZWFkeSBzdHJpcHBlZCBvZmYgdGhlIGNsb3RoZXMgb2YgbWFueSBDb3R5b3JpdGVzLgo8bWlsZXN0b25lIG49IjI0IiB1bml0PSJzZWN0aW9uIiAvPklmIHlvdSBhcmUgd2lzZSwgdGhlcmVmb3JlLCB5b3Ugd2lsbCBkbyB0byB0aGlzIGZlbGxvdyB0aGUgb3Bwb3NpdGUgb2Ygd2hhdCBwZW9wbGUgZG8gdG8gZG9nczsgZm9yIGRvZ3MgdGhhdCBhcmUgc2F2YWdlIGFyZSB0aWVkIHVwIGJ5IGRheSBhbmQgbGV0IGxvb3NlIGJ5IG5pZ2h0LCBidXQgdGhpcyBmZWxsb3csIGlmIHlvdSBhcmUgd2lzZSwgeW91IHdpbGwgdGllIHVwIGJ5IG5pZ2h0IGFuZCBsZXQgbG9vc2UgYnkgZGF5Lgo8bWlsZXN0b25lIG49IjI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IHJlYWxseSzigJ0gaGUgY29udGludWVkLCDigJxJIGFtIHN1cnByaXNlZCB0aGF0IGlmIGV2ZXIgSSBpbmN1cnJlZCB0aGUgaWxsLXdpbGwgb2YgYW55IG9uZSBhbW9uZyB5b3UsIHlvdSByZW1lbWJlciB0aGF0IGFuZCBhcmUgbm90IHNpbGVudCBhYm91dCBpdCwgd2hpbGUgaWYgSSBwcm90ZWN0ZWQgYW55IG9uZSBmcm9tIHRoZSBjb2xkLCBvciB3YXJkZWQgb2ZmIGFuIGVuZW15IGZyb20gaGltLCBvciBoZWxwZWQgdG8gcHJvdmlkZSBzb21ldGhpbmcgZm9yIGhpbSB3aGVuIGhlIHdhcyBzaWNrIG9yIGluIHdhbnQsIHRoZXNlIGFjdHMsIG9uIHRoZSBvdGhlciBoYW5kLCBhcmUgbm90IHJlbWVtYmVyZWQgYnkgYW55Ym9keTsgbm9yLCBhZ2FpbiwgaWYgSSBwcmFpc2VkIGEgbWFuIGZvciBhIGRlZWQgd2VsbCBkb25lLCBvciBob25vdXJlZCBhY2NvcmRpbmcgdG8gbXkgYWJpbGl0eSBhIG1hbiB3aG8gd2FzIGJyYXZlLCBkbyB5b3UgcmVtZW1iZXIgYW55IG9mIHRoZXNlIHRoaW5ncy4KPG1pbGVzdG9uZSBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5ZZXQgc3VyZWx5IGl0IGlzIG1vcmUgaG9ub3VyYWJsZSBhbmQgZmFpciwgbW9yZSByaWdodGVvdXMgYW5kIGdyYWNpb3VzIHRvIHJlbWVtYmVyIGdvb2QgZGVlZHMgdGhhbiBldmlsLuKAnTxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBwZW9wbGUgYmVnYW4gZ2V0dGluZyB1cCBhbmQgcmVjYWxsaW5nIHBhc3QgaW5jaWRlbnRzLCBhbmQgaW4gdGhlIGVuZCBhbGwgd2FzIHBsZWFzYW50LjwvcD48L2RpdjE+CjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIE1TUy4gaGVyZSBwcmVmaXggdGhlIGZvbGxvd2luZyBzdW1tYXJ5IG9mIHRoZSBwcmVjZWRpbmcgbmFycmF0aXZlLjwvbm90ZT5bVGhlIHByZWNlZGluZyBuYXJyYXRpdmUgaGFzIGRlc2NyaWJlZCBhbGwgdGhhdCB0aGUgR3JlZWtzIGRpZCBvbiB0aGVpciB1cHdhcmQgbWFyY2ggd2l0aCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFuZCBvbiB0aGVpciBqb3VybmV5IHRvIHRoZSBzaG9yZSBvZiB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2MTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjYxOSI+RXV4aW5lIFNlYTwvcGxhY2VOYW1lPiwgaG93IHRoZXkgYXJyaXZlZCBhdCB0aGUgR3JlZWsgY2l0eSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiPlRyYXBlenVzPC9wbGFjZU5hbWU+LCBhbmQgaG93IHRoZXkgcGFpZCB0aGUgdGhhbmtvZmZlcmluZ3MgZm9yIGRlbGl2ZXJhbmNlIHdoaWNoIHRoZXkgaGFkIHZvd2VkIHRvIHNhY3JpZmljZSBhdCB0aGUgcGxhY2Ugd2hlcmUgdGhleSBzaG91bGQgZmlyc3QgcmVhY2ggYSBmcmllbmRseSBsYW5kLl0KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZXkgZ2F0aGVyZWQgdG9nZXRoZXIgYW5kIHByb2NlZWRlZCB0byB0YWtlIGNvdW5zZWwgaW4gcmVnYXJkIHRvIHRoZSByZW1haW5kZXIgb2YgdGhlaXIgam91cm5leTsgYW5kIHRoZSBmaXJzdCBtYW4gdG8gZ2V0IHVwIHdhcyBMZW9uIG9mIFRodXJpaSwgd2hvIHNwb2tlIGFzIGZvbGxvd3M6IOKAnFdlbGwsIEksIGZvciBteSBwYXJ0LCBnZW50bGVtZW4s4oCdIGhlIHNhaWQsIOKAnGFtIHRpcmVkIGJ5IHRoaXMgdGltZSBvZiBwYWNraW5nIHVwIGFuZCB3YWxraW5nIGFuZCBydW5uaW5nIGFuZCBjYXJyeWluZyBteSBhcm1zIGFuZCBiZWluZyBpbiBsaW5lIGFuZCBzdGFuZGluZyBndWFyZCBhbmQgZmlnaHRpbmcsIGFuZCB3aGF0IEkgbG9uZyBmb3Igbm93IGlzIHRvIGJlIHJpZCBvZiB0aGVzZSB0b2lscywgc2luY2Ugd2UgaGF2ZSB0aGUgc2VhLCBhbmQgdG8gc2FpbCB0aGUgcmVzdCBvZiB0aGUgd2F5LCBhbmQgc28gcmVhY2ggPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiBzdHJldGNoZWQgb3V0IG9uIG15IGJhY2ssIGxpa2UgT2R5c3NldXMu4oCdPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgZGVmYXVsdD0iTk8iIG49IkhvbS4gT2QuIDUuNzUiIHZhbGlkPSJ5ZXMiPkhvbS4gT2QuIDUuNzUtMTE4PC9iaWJsPi48L25vdGU+CjxtaWxlc3RvbmUgbj0iMyIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgdGhlIHNvbGRpZXJzIHNob3V0ZWQgb3V0IHRoYXQgaGUgd2FzIHF1aXRlIHJpZ2h0OyBhbmQgYW5vdGhlciBtYW4gc2FpZCB0aGUgc2FtZSB0aGluZywgYW5kIGluIGZhY3QgYWxsIHdobyByb3NlIHRvIHNwZWFrLiBUaGVuIENoZWlyaXNvcGh1cyBnb3QgdXAgYW5kIHNwb2tlIGFzIGZvbGxvd3M6CjxtaWxlc3RvbmUgbj0iNCIgdW5pdD0ic2VjdGlvbiIgLz7igJxJIGhhdmUgYSBmcmllbmQgQW5heGliaXVzLCBnZW50bGVtZW4sIGFuZCBoZSBoYXBwZW5zIGFsc28gdG8gYmUgQWRtaXJhbC48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk5vdCDigJxhbuKAnSBhZG1pcmFsLCBmb3IgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs69zrHhvbvOsc+Bz4fOv8+CPC9mb3JlaWduPiB3YXMgdGhlIGRpc3RpbmN0aXZlIHRpdGxlIG9mIHRoZSBjb21tYW5kaW5nIG9mZmljZXIgb2YgdGhlIExhY2VkYWVtb25pYW4gZmxlZXQuPC9ub3RlPiBTbyBpZiB5b3Ugd2lsbCBzZW5kIG1lIHRvIGhpbSwgSSBwcmVzdW1lIEkgY2FuIGJyaW5nIGJhY2sgd2l0aCBtZSBzaGlwcyBvZiB3YXIgYW5kIG1lcmNoYW50IHZlc3NlbHMgdG8gY2FycnkgdXM7IGZvciB5b3Vyc2VsdmVzLCBpZiB5b3UgcmVhbGx5IHdpc2ggdG8gZ28gYnkgc2VhLCB3YWl0IHVudGlsIEkgcmV0dXJuOyBhbmQgSSBzaGFsbCByZXR1cm4gc3BlZWRpbHku4oCdIFdoZW4gdGhleSBoZWFyZCB0aGlzLCB0aGUgc29sZGllcnMgd2VyZSBkZWxpZ2h0ZWQsIGFuZCB2b3RlZCB0aGF0IENoZWlyaXNvcGh1cyBzaG91bGQgc2V0IHNhaWwgd2l0aCBhbGwgc3BlZWQuCjxtaWxlc3RvbmUgbj0iNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFmdGVyIGhpbSBYZW5vcGhvbiByb3NlIGFuZCBzcG9rZSBhcyBmb2xsb3dzOiDigJxDaGVpcmlzb3BodXMsIHRoZW4sIGlzIHNldHRpbmcgb2ZmIGFmdGVyIHNoaXBzLCBhbmQgd2UgYXJlIHRvIHN0YXkgaGVyZTsgSSBhbSBnb2luZyB0byBzcGVhaywgdGhlcmVmb3JlLCBvZiBhbGwgdGhlIHRoaW5ncyB0aGF0IGl0IHNlZW1zIHRvIG1lIHByb3BlciBmb3IgdXMgdG8gYmUgZG9pbmcgd2hpbGUgd2Ugd2FpdC4KPG1pbGVzdG9uZSBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSBmaXJzdCBwbGFjZSwgd2UgbXVzdCBvYnRhaW4gcHJvdmlzaW9ucyBmcm9tIGhvc3RpbGUgdGVycml0b3J5LCBmb3Igd2UgbmVpdGhlciBoYXZlIGFuIGFkZXF1YXRlIG1hcmtldCwgbm9yIGhhdmUgd2UsIHdpdGggc29tZSBmZXcgZXhjZXB0aW9ucywgdGhlIG1lYW5zIHdoZXJld2l0aCB0byBidXk7IGJ1dCB0aGUgdGVycml0b3J5IGlzIGhvc3RpbGUsIGFuZCBoZW5jZSB0aGVyZSBpcyBkYW5nZXIgdGhhdCBtYW55IG9mIHlvdSB3aWxsIHBlcmlzaCBpZiB5b3Ugc2V0IG91dCBhZnRlciBwcm92aXNpb25zIGNhcmVsZXNzbHkgYW5kIHVuZ3VhcmRlZGx5Lgo8bWlsZXN0b25lIG49IjciIHVuaXQ9InNlY3Rpb24iIC8+UmF0aGVyLCBpdCBzZWVtcyB0byBtZSB0aGF0IHlvdSBvdWdodCB0byBnZXQgeW91ciBwcm92aXNpb25zIGluIGZvcmFnaW5nIHBhcnRpZXMgYW5kIG5vdCByb2FtIGFib3V0IGF0IHJhbmRvbSwgaW4gb3JkZXIgdGhhdCB5b3UgbWF5IGJlIGtlcHQgc2FmZSwgYW5kIHRoYXQgd2UgZ2VuZXJhbHMgb3VnaHQgdG8gaGF2ZSBjaGFyZ2Ugb2YgdGhpcyBtYXR0ZXIu4oCdIFRoaXMgcHJvcG9zYWwgd2FzIGFkb3B0ZWQuCjxtaWxlc3RvbmUgbj0iOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnExpc3RlbiwgdGhlbiwgdG8gdGhpcyBmdXJ0aGVyIHBvaW50LiBTb21lIG9mIHlvdSBhcmUgdG8gam91cm5leSBmb3J0aCBhZnRlciBwbHVuZGVyLiBOb3cgSSB0aGluayBpdCBpcyBiZXN0IGZvciB0aGUgbWFuIHdobyBpcyBnb2luZyBvdXQgdG8gaW5mb3JtIHVzIG9mIHRoZSBmYWN0IGFuZCB0byB0ZWxsIHVzIGFsc28gd2hpdGhlciBoZSBpcyBnb2luZywgaW4gb3JkZXIgdGhhdCB3ZSBtYXkga25vdyB0aGUgbnVtYmVyIG9mIG1lbiB3aG8gYXJlIGdvaW5nIG91dCBhbmQgdGhlIG51bWJlciB3aG8gYXJlIHN0YXlpbmcgYmVoaW5kOyB0aGVuIHdlIGNhbiBoZWxwLCBpZiBuZWVkIGJlLCBpbiBtYWtpbmcgcHJlcGFyYXRpb25zLCBhbmQgaWYgdGhlcmUgYmUgb2NjYXNpb24gdG8gZ28gdG8gYW55IG9uZSdzIGFzc2lzdGFuY2UsIHdlIHNoYWxsIGtub3cgd2hpdGhlciB3ZSBhcmUgdG8gZ28gd2l0aCBzdWNoIGFzc2lzdGFuY2UsIGFuZCBpZiBhIG1hbiB3aG8gaXMgd2l0aG91dCBleHBlcmllbmNlIGlzIG1ha2luZyBhbiBhdHRlbXB0IGluIGFueSBxdWFydGVyLCB3ZSBjYW4gYWR2aXNlIGhpbSBieSB0cnlpbmcgdG8gYXNjZXJ0YWluIHRoZSBzdHJlbmd0aCBvZiB0aG9zZSBhZ2FpbnN0IHdob20gaGUgbWF5IGJlIGdvaW5nLuKAnSBUaGlzIHByb3Bvc2FsIGFsc28gd2FzIGFkb3B0ZWQuCjxtaWxlc3RvbmUgbj0iOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4s4oCdIGhlIHNhaWQsIOKAnGNvbnNpZGVyIHRoaXMgbWF0dGVyIGFsc28uIE91ciBlbmVtaWVzIGhhdmUgbGVpc3VyZSBmb3IgcGx1bmRlcmluZyBhbmQgdGhleSBhcmUgcGxvdHRpbmcgYWdhaW5zdCB1c+KAlHF1aXRlIHByb3Blcmx5LCBzZWVpbmcgdGhhdCB3ZSBoYXZlIGFwcHJvcHJpYXRlZCB3aGF0IHdhcyB0aGVpcnM7IGFuZCB0aGV5IGFyZSBwb3N0ZWQgdXAgYWJvdmUgdXMuIFNvIGl0IHNlZW1zIHRvIG1lIHRoYXQgd2Ugb3VnaHQgdG8gaGF2ZSBndWFyZHMgYXJvdW5kIG91ciBjYW1wOyBzdXBwb3NpbmcsIHRoZW4sIHRoYXQgd2UgdGFrZSB0dXJucyBpbiBzdGFuZGluZyBndWFyZCBhbmQga2VlcGluZyB3YXRjaCwgdGhlIGVuZW15IHdvdWxkIGJlIGxlc3MgYWJsZSB0byBoYXJyeSB1cy4KPG1pbGVzdG9uZSBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEhlcmUgaXMgc3RpbGwgYW5vdGhlciBwb2ludCB0byBub3RlLiBJZiB3ZSBrbmV3IGJleW9uZCBkb3VidCB0aGF0IENoZWlyaXNvcGh1cyB3b3VsZCBicmluZyBiYWNrIHdpdGggaGltIGFuIGFkZXF1YXRlIG51bWJlciBvZiBzaGlwcywgdGhlcmUgd291bGQgYmUgbm8gbmVlZCBvZiB3aGF0IEkgYW0gYWJvdXQgdG8gc2F5OyBidXQgc2luY2UgaW4gZmFjdCB0aGF0IGlzIHVuY2VydGFpbiwgSSB0aGluayB3ZSBzaG91bGQgdHJ5IHRvIGRvIG91ciBwYXJ0IGJ5IHByb2N1cmluZyBzaGlwcyBoZXJlIGFsc28uIEZvciBpZiBoZSBkb2VzIGJyaW5nIGVub3VnaCwgdGhlbiB3aXRoIHRob3NlIGF0IGhhbmQgaGVyZSB3ZSBzaGFsbCBoYXZlIGEgbW9yZSBhYnVuZGFudCBzdXBwbHkgdG8gc2FpbCBpbiwgd2hpbGUgaWYgaGUgZG9lcyBub3QsIHdlIHNoYWxsIHVzZSB0aG9zZSB3aGljaCB3ZSBoYXZlIGhlcmUuCjxtaWxlc3RvbmUgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+Tm93IEkgc2VlIHNoaXBzIHNhaWxpbmcgcGFzdCBmcmVxdWVudGx5LCBhbmQgaWYgd2UgY2FuIGdldCB0aGUgVHJhcGV6dW50aWFucyB0byBnaXZlIHVzIG1lbi1vZi13YXIgYW5kIHNvIGJyaW5nIHRoZXNlIHNoaXBzIGludG8gcG9ydCBhbmQga2VlcCB0aGVtIHVuZGVyIGd1YXJkLCB1bnNoaXBwaW5nIHRoZWlyIHJ1ZGRlcnMgbWVhbndoaWxlLCB1bnRpbCB3ZSBnZXQgZW5vdWdoIHRvIGNhcnJ5IHVzLCBwZXJoYXBzIHdlIHNob3VsZCBub3QgbGFjayBzdWNoIG1lYW5zIG9mIHRyYW5zcG9ydCBhcyB3ZSBuZWVkLuKAnSBUaGlzIHByb3Bvc2FsIGFsc28gd2FzIGFkb3B0ZWQuCjxtaWxlc3RvbmUgbj0iMTIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBZ2FpbizigJ0gaGUgc2FpZCwg4oCcZG8geW91IG5vdCB0aGluayBpdCByZWFzb25hYmxlIHRoYXQgd2Ugc2hvdWxkIG1haW50YWluIGZyb20gb3VyIGNvbW1vbiBmdW5kIHRoZSBzYWlsb3JzIHdlIHRodXMgYnJpbmcgaW50byBwb3J0IGZvciBhcyBsb25nIGEgdGltZSBhcyB0aGV5IG1heSBiZSB3YWl0aW5nIGZvciBvdXIgc2FrZXMsIGFuZCB0aGF0IHdlIHNob3VsZCBhZ3JlZSB1cG9uIGEgcHJpY2UgZm9yIG91ciBwYXNzYWdlLCBzbyB0aGF0IGluIGNvbmZlcnJpbmcgYSBiZW5lZml0IHVwb24gdXMgdGhleSBtYXkgYWxzbyBiZW5lZml0IHRoZW1zZWx2ZXM/4oCdIFRoaXMgcHJvcG9zYWwgYWxzbyB3YXMgYWRvcHRlZC4KPG1pbGVzdG9uZSBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vdyBpdCBzZWVtcyB0byBtZSzigJ0gaGUgY29udGludWVkLCDigJx0aGF0IGlmIHBlcmNoYW5jZSB0aGlzIHBsYW4gYWxzbyBzaGFsbCBmYWlsIHRvIHByb3ZpZGUgdXMgd2l0aCBlbm91Z2ggc2hpcHMsIHdlIG11c3QgdHVybiB0byB0aGUgcm9hZHMsIHdoaWNoIHdlIGhlYXIgYXJlIGRpZmZpY3VsdCB0byB0cmF2ZWwsIGFuZCBkaXJlY3QgdGhlIGNpdGllcyB0aGF0IGFyZSBzaXR1YXRlZCBhbG9uZyB0aGUgc2VhIHRvIHJlcGFpciB0aGVtOyBmb3IgdGhleSB3aWxsIG9iZXksIG5vdCBvbmx5IGZyb20gZmVhciwgYnV0IGFsc28gZnJvbSB0aGUgZGVzaXJlIHRvIGJlIHJpZCBvZiB1cy7igJ0KPG1pbGVzdG9uZSBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkF0IHRoaXMgdGhlIHNvbGRpZXJzIHNldCB1cCBhIHNob3V0LCBzYXlpbmcgdGhhdCB0aGV5IGRpZCBub3Qgd2FudCB0byBnbyBieSBsYW5kLiBBbmQgWGVub3Bob24sIHJlYWxpemluZyB0aGVpciBmb29saXNobmVzcywgZGlkIG5vdCBwdXQgYW55IHByb3Bvc2FsIHJlZ2FyZGluZyB0aGlzIG1hdHRlciB0byB2b3RlLCBidXQgcGVyc3VhZGVkIHRoZSBjaXRpZXMgdG8gcmVwYWlyIHRoZSByb2FkcyB2b2x1bnRhcmlseSwgdXJnaW5nIHRoYXQgdGhleSB3b3VsZCBiZSByaWQgb2YgdGhlIGFybXkgdGhlIG1vcmUgcXVpY2tseSBpZiB0aGUgcm9hZHMgc2hvdWxkIGJlIG1hZGUgZWFzeSB0byB0cmF2ZWwuCjxtaWxlc3RvbmUgbj0iMTUiIHVuaXQ9InNlY3Rpb24iIC8+RnVydGhlcm1vcmUsIHRoZXkgZ290IGEgZmlmdHktb2FyZWQgd2Fyc2hpcCBmcm9tIHRoZSBUcmFwZXp1bnRpYW5zLCBhbmQgcHV0IGl0IHVuZGVyIHRoZSBjb21tYW5kIG9mIERleGlwcHVzLCBhIExhY29uaWFuIHBlcmlvZWN1cy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBwZXJpb2VjaSB3ZXJlIHRoZSBpbmhhYml0YW50cyBvZiB0aGUgb3V0bHlpbmcgTGFjb25pYW4gdG93bnM7IHRoZXkgd2VyZSBmcmVlLCBidXQgbm90IFNwYXJ0YW4gY2l0aXplbnMuPC9ub3RlPiBUaGlzIGZlbGxvdywgaG93ZXZlciwgcGF5aW5nIG5vIGhlZWQgdG8gdGhlIGR1dHkgb2YgY29sbGVjdGluZyB2ZXNzZWxzLCBzbGlwcGVkIGF3YXkgd2l0aCBoaXMgbWFuLW9mLXdhciBhbmQgbGVmdCB0aGUgRXV4aW5lLiBIZSBkaWQgaW5kZWVkIGdldCBoaXMgZGVzZXJ0cyBhZnRlcndhcmRzOyBmb3Igd2hpbGUgZW5nYWdlZCBpbiBzb21lIGludHJpZ3VlIGF0IHRoZSBjb3VydCBvZiBTZXV0aGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNy4yLjMxIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDcuMi4zMS0zNDwvYmlibD4uPC9ub3RlPiBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjc1NiIga2V5PSJ0Z24sNzAwMjc1NiI+VGhyYWNlPC9wbGFjZU5hbWU+IGhlIHdhcyBraWxsZWQgYnkgTmljYW5kZXIgdGhlIExhY29uaWFuLgo8bWlsZXN0b25lIG49IjE2IiB1bml0PSJzZWN0aW9uIiAvPlRoZXkgYWxzbyBnb3QgYSB0aGlydHktb2FyZWQgZ2FsbGV5LCBhbmQgcHV0IGl0IHVuZGVyIHRoZSBjb21tYW5kIG9mIFBvbHljcmF0ZXMgdGhlIEF0aGVuaWFuLCB3aG8gYnJvdWdodCBpbiB0byB0aGUgY2FtcCBhbGwgdGhlIG1lcmNoYW50IHZlc3NlbHMgdGhhdCBoZSBjYXB0dXJlZC4gQW5kIHRoZXkgd291bGQgdW5sb2FkIHRoZSBjYXJnb2VzLCBpbiBjYXNlIHRoZSBzaGlwcyBoYWQgYW55LCBhbmQgcHV0IHRoZW0gdW5kZXIgZ3VhcmQsIGluIG9yZGVyIHRvIGtlZXAgdGhlc2Ugc2FmZSBhbmQgdG8gdXNlIHRoZSB2ZXNzZWxzIHRoZW1zZWx2ZXMgZm9yIHRyYW5zcG9ydCBzZXJ2aWNlLgo8bWlsZXN0b25lIG49IjE3IiB1bml0PSJzZWN0aW9uIiAvPldoaWxlIHRoZXNlIHRoaW5ncyB3ZXJlIGdvaW5nIG9uLCB0aGUgR3JlZWtzIHdlcmUgbWFraW5nIGZvcmF5cyBpbiBxdWVzdCBvZiBib290eSwgYW5kIHdoaWxlIHNvbWUgcGFydGllcyB3b3VsZCBzZWN1cmUgaXQsIG90aGVycyBkaWQgbm90LiBBbmQgaW4gb25lIGNhc2UsIHdoZW4gQ2xlYWVuZXR1cyBsZWQgZm9ydGggaGlzIG93biBjb21wYW55IGFuZCBhbm90aGVyIGFnYWluc3QgYSBkaWZmaWN1bHQgc3Ryb25naG9sZCwgdGhlIGNvbW1hbmRlciBoaW1zZWxmIHdhcyBraWxsZWQgYW5kIG1hbnkgb2YgaGlzIG1lbiBiZXNpZGVzLgo8bWlsZXN0b25lIG49IjIiIHVuaXQ9ImNoYXB0ZXIiIC8+PG1pbGVzdG9uZSBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHRpbWUgY2FtZSB3aGVuIGl0IHdhcyBubyBsb25nZXIgcG9zc2libGUgdG8gb2J0YWluIHByb3Zpc2lvbnMgYW5kIHJldHVybiB0byB0aGUgY2FtcCBvbiB0aGUgc2FtZSBkYXkuIFRoZW4gWGVub3Bob24gdG9vayBzb21lIFRyYXBlenVudGlhbnMgZm9yIGd1aWRlcyBhbmQgbGVkIGZvcnRoIGhhbGYgdGhlIGFybXkgdG8gdGhlIGNvdW50cnkgb2YgdGhlIERyaWxhZSwgbGVhdmluZyB0aGUgb3RoZXIgaGFsZiBiZWhpbmQgdG8gZ3VhcmQgdGhlIGNhbXDigJRiZWNhdXNlIHRoZSBDb2xjaGlhbnMsIHNpbmNlIHRoZXkgaGFkIGJlZW4gZHJpdmVuIG91dCBvZiB0aGVpciBob3VzZXMsIHdlcmUgbm93IGdhdGhlcmVkIHRvZ2V0aGVyIGluIG9uZSBncmVhdCBib2R5IGFuZCBoYWQgdGFrZW4gYSBwb3NpdGlvbiBvbiB0aGUgaGVpZ2h0cyBhYm92ZSB0aGUgY2FtcC4KPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGUgVHJhcGV6dW50aWFucyB3b3VsZCBub3QgbGVhZCB0aGUgR3JlZWtzIHRvIGRpc3RyaWN0cyBmcm9tIHdoaWNoIHByb3Zpc2lvbnMgY291bGQgYmUgc2VjdXJlZCBlYXNpbHksIGJlY2F1c2UgdGhleSB3ZXJlIGZyaWVuZGx5IHRvIHRoZSBwZW9wbGUgb2YgdGhvc2UgZGlzdHJpY3RzOyBidXQgdGhleSB3ZXJlIGVhZ2VyIHRvIGxlYWQgdGhlbSBpbnRvIHRoZSB0ZXJyaXRvcnkgb2YgdGhlIERyaWxhZSwgYXQgd2hvc2UgaGFuZHMgdGhleSB3ZXJlIGNvbnRpbnVhbGx5IHN1ZmZlcmluZyBsb3NzZXMsIHRob3VnaCB0aGVpciBjb3VudHJ5IHdhcyBtb3VudGFpbm91cyBhbmQgZGlmZmljdWx0IHRvIHRyYXZlcnNlIGFuZCBpdHMgaW5oYWJpdGFudHMgdGhlIG1vc3Qgd2FybGlrZSBvZiBhbGwgdGhhdCBkd2VsbCB1cG9uIHRoZSBFdXhpbmUuCjxtaWxlc3RvbmUgbj0iMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPldoZW4gdGhlIEdyZWVrcyBoYWQgcmVhY2hlZCB0aGUgaGlnaGxhbmRzLCB0aGUgRHJpbGFlIHNldCBmaXJlIHRvIHN1Y2ggb2YgdGhlaXIgc3Ryb25naG9sZHMgYXMgc2VlbWVkIHRvIHRoZW0gZWFzeSB0byBjYXB0dXJlLCBhbmQgZmVsbCBiYWNrOyBhbmQgdGhlIEdyZWVrcyBjb3VsZCBzZWN1cmUgbm90aGluZyBleGNlcHQgYW4gb2NjYXNpb25hbCBwaWcgb3Igb3ggb3Igb3RoZXIgYW5pbWFsIHRoYXQgaGFkIGVzY2FwZWQgdGhlIGZpcmUuIFRoZXJlIHdhcyBvbmUgc3Ryb25naG9sZCwgaG93ZXZlciwgd2hpY2ggd2FzIHRoZWlyIG1ldHJvcG9saXMsIGFuZCBpbnRvIHRoaXMgdGhleSBoYWQgYWxsIHN0cmVhbWVkLiBBcm91bmQgaXQgd2FzIGFuIGV4Y2VlZGluZ2x5IGRlZXAgcmF2aW5lLCBhbmQgdGhlIGFwcHJvYWNoZXMgdG8gdGhlIHBsYWNlIHdlcmUgZGlmZmljdWx0Lgo8bWlsZXN0b25lIG49IjQiIHVuaXQ9InNlY3Rpb24iIC8+Tm93IHRoZSBwZWx0YXN0cywgd2hvIGhhZCBydW4gZml2ZSBvciBzaXggc3RhZGlhIGFoZWFkIG9mIHRoZSBob3BsaXRlcywgY3Jvc3NlZCB0aGlzIHJhdmluZSBhbmQsIHNlZWluZyBxdWFudGl0aWVzIG9mIHNoZWVwIGFuZCBvdGhlciBwcm9wZXJ0eSwgZXNzYXllZCBhbiBhdHRhY2sgdXBvbiB0aGUgc3Ryb25naG9sZDsgaW4gdGhlaXIgdHJhaW4gdGhlcmUgZm9sbG93ZWQgYSBjb25zaWRlcmFibGUgbnVtYmVyIG9mIHNwZWFybWVuIHdobyBoYWQgc2V0IG91dCBhZnRlciBwcm92aXNpb25zLCBzbyB0aGF0IHRoZSBwYXJ0eSB0aGF0IGNyb3NzZWQgdGhlIHJhdmluZSBhbW91bnRlZCB0byBtb3JlIHRoYW4gYSB0aG91c2FuZCBtZW4uCjxtaWxlc3RvbmUgbj0iNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGV5IGZvdW5kIHRoZW1zZWx2ZXMgdW5hYmxlIHdpdGggYWxsIHRoZWlyIGZpZ2h0aW5nIHRvIGNhcHR1cmUgdGhlIHBsYWNlIChmb3IgdGhlcmUgd2FzIGEgd2lkZSB0cmVuY2ggYXJvdW5kIGl0LCBiYWNrZWQgYnkgYSByYW1wYXJ0LCBhbmQgdXBvbiB0aGUgcmFtcGFydCBwYWxpc2FkZXMgaGFkIGJlZW4gc2V0IGFuZCB3b29kZW4gdG93ZXJzIGNvbnN0cnVjdGVkIGF0IGZyZXF1ZW50IGludGVydmFscyksIHRoZWlyIG5leHQgbW92ZSB3YXMgdG8gdHJ5IHRvIHdpdGhkcmF3OyBhbmQgdGhlbiB0aGUgZW5lbXkgcHJlc3NlZCBoYXJkIHVwb24gdGhlbS4KPG1pbGVzdG9uZSBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRvIGdldCBhd2F5IGJ5IHJ1bm5pbmcgcHJvdmVkIGltcG9zc2libGUsIGluYXNtdWNoIGFzIHRoZSBkZXNjZW50IGZyb20gdGhlIHN0cm9uZ2hvbGQgdG8gdGhlIHJhdmluZSBvbmx5IGFsbG93ZWQgdGhlbSB0byBnbyBpbiBzaW5nbGUgZmlsZSwgYW5kIHRoZXkgYWNjb3JkaW5nbHkgc2VudCBhIG1lc3NlbmdlciB0byBYZW5vcGhvbiwgd2hvIHdhcyBhdCB0aGUgaGVhZCBvZiB0aGUgaG9wbGl0ZXMuIFRoZSBtZXNzZW5nZXIgY2FtZSBhbmQgcmVwb3J0ZWQ6CjxtaWxlc3RvbmUgbj0iNyIgdW5pdD0ic2VjdGlvbiIgLz7igJxUaGVyZSBpcyBhIHN0cm9uZ2hvbGQgZnVsbCBvZiBhbGwga2luZHMgb2Ygc3RvcmVzLiBXZSBjYW5ub3QgY2FwdHVyZSBpdCwgZm9yIGl0IGlzIHN0cm9uZzsgYW5kIHdlIGNhbm5vdCBlYXNpbHkgZ2V0IGF3YXksIGZvciB0aGUgZGVmZW5kZXJzIHJ1c2ggb3V0IGFuZCBhdHRhY2sgdXMsIGFuZCB0aGUgcm9hZCB0aGF0IGxlYWRzIGJhY2sgaXMgYSBkaWZmaWN1bHQgb25lLuKAnQo8bWlsZXN0b25lIG49IjgiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5VcG9uIGhlYXJpbmcgdGhpcyBtZXNzYWdlIFhlbm9waG9uIGxlZCBvbiB0byB0aGUgcmF2aW5lLCBvcmRlcmVkIHRoZSBob3BsaXRlcyB0byBoYWx0IHRoZXJlIHVuZGVyIGFybXMsIGFuZCBoaW1zZWxmIGNyb3NzZWQgb3ZlciB3aXRoIHRoZSBjYXB0YWlucyBhbmQgbG9va2VkIGFib3V0IHRvIHNlZSB3aGV0aGVyIGl0IHdhcyBiZXR0ZXIgdG8gd2l0aGRyYXcgdGhlIHRyb29wcyB0aGF0IGhhZCBhbHJlYWR5IGNyb3NzZWQsIG9yIHRvIGxlYWQgb3ZlciB0aGUgaG9wbGl0ZXMgYWxzbywgb24gdGhlIHByZXN1bXB0aW9uIHRoYXQgdGhlIHN0cm9uZ2hvbGQgY291bGQgYmUgY2FwdHVyZWQuCjxtaWxlc3RvbmUgbj0iOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgd2l0aGRyYXdhbCwgaXQgc2VlbWVkIGNsZWFyLCBjb3VsZCBub3QgYmUgYWNjb21wbGlzaGVkIHdpdGhvdXQgdGhlIGxvc3Mgb2YgbWFueSBsaXZlcywgd2hpbGUgdGhlIGNhcHR1cmUgb2YgdGhlIHBsYWNlLCBpbiB0aGUgb3BpbmlvbiBvZiB0aGUgY2FwdGFpbnMsIHdhcyBmZWFzaWJsZSwgYW5kIFhlbm9waG9uIGZlbGwgaW4gd2l0aCB0aGVpciBvcGluaW9uLCBpbiByZWxpYW5jZSB1cG9uIGhpcyBzYWNyaWZpY2VzOyBmb3IgdGhlIHNlZXJzIGhhZCBkZWNsYXJlZCB0aGF0IHdoaWxlIHRoZXJlIHdvdWxkIGJlIGZpZ2h0aW5nIHRvIGRvLCB0aGUgaXNzdWUgb2YgdGhlIGV4cGVkaXRpb24gd291bGQgYmUgZm9ydHVuYXRlLgo8bWlsZXN0b25lIG49IjEwIiB1bml0PSJzZWN0aW9uIiAvPkFjY29yZGluZ2x5IGhlIHNlbnQgdGhlIGNhcHRhaW5zIHRvIGJyaW5nIG92ZXIgdGhlIGhvcGxpdGVzLCB3aGlsZSBoZSBoaW1zZWxmIHJlbWFpbmVkIG9uIHRoZSBmdXJ0aGVyIHNpZGUsIGhhdmluZyBkcmF3biBiYWNrIHRoZSBlbnRpcmUgYm9keSBvZiBwZWx0YXN0cyBhbmQgZm9yYmlkZGluZyBhbnkgb25lIHRvIHNob290IGF0IGxvbmcgcmFuZ2UuCjxtaWxlc3RvbmUgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+VXBvbiB0aGUgYXJyaXZhbCBvZiB0aGUgaG9wbGl0ZXMgaGUgb3JkZXJlZCBlYWNoIG9mIHRoZSBjYXB0YWlucyB0byBmb3JtIGhpcyBjb21wYW55IGluIHRoZSB3YXkgaGUgdGhvdWdodCBpdCB3b3VsZCBmaWdodCBtb3N0IGVmZmVjdGl2ZWx5OyBmb3IgbmVhciBvbmUgYW5vdGhlciB3ZXJlIHRoZSBjYXB0YWlucyB3aG8gaGFkIGFsbCB0aGUgdGltZSBiZWVuIHZpZWluZyB3aXRoIG9uZSBhbm90aGVyIGluIHZhbG91ci4KPG1pbGVzdG9uZSBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIG9yZGVyIHRoZXkgcHJvY2VlZGVkIHRvIGNhcnJ5IG91dCwgYW5kIG1lYW53aGlsZSBYZW5vcGhvbiBwYXNzZWQgd29yZCB0byBhbGwgdGhlIHBlbHRhc3RzIHRvIGFkdmFuY2Ugd2l0aCBoYW5kIG9uIHRoZSB0aG9uZywgc28gdGhhdCB0aGV5IGNvdWxkIGRpc2NoYXJnZSB0aGVpciBqYXZlbGlucyB3aGVuIHRoZSBzaWduYWwgc2hvdWxkIGJlIGdpdmVuLCB0byB0aGUgYm93bWVuIHRvIGhhdmUgdGhlaXIgYXJyb3dzIHVwb24gdGhlIHN0cmluZywgcmVhZHkgdG8gc2hvb3QgdXBvbiB0aGUgc2lnbmFsLCBhbmQgdG8gdGhlIHNsaW5nZXJzIHRvIGhhdmUgdGhlaXIgYmFncyBmdWxsIG9mIHN0b25lczsgYW5kIGhlIGRlc3BhdGNoZWQgdGhlIHByb3BlciBwZXJzb25zIHRvIGxvb2sgYWZ0ZXIgYWxsIHRoZXNlIHRoaW5ncy4KPG1pbGVzdG9uZSBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPldoZW4gYWxsIHByZXBhcmF0aW9ucyBoYWQgYmVlbiBtYWRlIGFuZCB0aGUgY2FwdGFpbnMsIGxpZXV0ZW5hbnRzLCBhbmQgdGhvc2UgYW1vbmcgdGhlIG1lbiB3aG8gY2xhaW1lZCB0byBiZSBub3QgaW5mZXJpb3IgdG8gdGhlbSBpbiBicmF2ZXJ5IHdlcmUgYWxsIGdyb3VwZWQgdG9nZXRoZXIgaW4gdGhlIGxpbmU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgZm9ybWF0aW9uIHdoaWNoIHRoZSBjYXB0YWlucyBqdWRnZWQgdG8gYmUgdGhlIOKAnG1vc3QgZWZmZWN0aXZl4oCdICggIDExIGFib3ZlKS48L25vdGU+IGFuZCwgbW9yZW92ZXIsIHdhdGNoaW5nIG9uZSBhbm90aGVyIChmb3IgdGhlIGxpbmUgd2FzIGNyZXNjZW50LXNoYXBlZCwgdG8gY29uZm9ybSB3aXRoIHRoZSBwb3NpdGlvbiB0aGV5IHdlcmUgYXR0YWNraW5nKSwKPG1pbGVzdG9uZSBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz50aGVuIHRoZXkgc3RydWNrIHVwIHRoZSBwYWVhbiBhbmQgdGhlIHRydW1wZXQgc291bmRlZCwgYW5kIHRoZW4sIGF0IHRoZSBzYW1lIG1vbWVudCwgdGhleSByYWlzZWQgdGhlIHdhciBjcnkgdG8gRW55YWxpdXMsIHRoZSBob3BsaXRlcyBjaGFyZ2VkIGZvcndhcmQgb24gdGhlIHJ1biwgYW5kIHRoZSBtaXNzaWxlcyBiZWdhbiB0byBmbHkgYWxsIHRvZ2V0aGVy4oCUc3BlYXJzLCBhcnJvd3MsIHNsaW5nLXN0b25lcywgYW5kIHZlcnkgbWFueSBzdG9uZXMgdGhyb3duIGJ5IGhhbmQsIHdoaWxlIHNvbWUgb2YgdGhlIG1lbiBlbXBsb3llZCBmaXJlYnJhbmRzIGFsc28uCjxtaWxlc3RvbmUgbj0iMTUiIHVuaXQ9InNlY3Rpb24iIC8+QnkgcmVhc29uIG9mIHRoZSBxdWFudGl0eSBvZiB0aGUgbWlzc2lsZXMgdGhlIGVuZW15IGFiYW5kb25lZCBib3RoIHRoZWlyIHJhbXBhcnRzIGFuZCB0aGVpciB0b3dlcnMsIHNvIHRoYXQgQWdhc2lhcyB0aGUgU3R5bXBoYWxpYW4sIHB1dHRpbmcgYXNpZGUgaGlzIGFybXMgYW5kIGNsYWQgb25seSBpbiBoaXMgdHVuaWMsIGNsaW1iZWQgdXAsIHRoZW4gcHVsbGVkIHVwIGFub3RoZXIgbWFuLCBhbmQgbWVhbndoaWxlIGFub3RoZXIgaGFkIG1hZGUgdGhlIGNsaW1iLCBzbyB0aGF0IHRoZSBjYXB0dXJlIG9mIHRoZSBzdHJvbmdob2xkIHdhcyBhY2NvbXBsaXNoZWQsIGFzIGl0IHNlZW1lZC4KPG1pbGVzdG9uZSBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXJldXBvbiB0aGUgcGVsdGFzdHMgYW5kIHRoZSBsaWdodCB0cm9vcHMgcnVzaGVkIGluIGFuZCBwcm9jZWVkZWQgdG8gc25hdGNoIHdoYXRldmVyIHBsdW5kZXIgdGhleSBzZXZlcmFsbHkgY291bGQ7IGJ1dCBYZW5vcGhvbiwgdGFraW5nIGhpcyBzdGFuZCBhdCB0aGUgZ2F0ZXMsIGtlcHQgb3V0IGFzIG1hbnkgYXMgaGUgY291bGQgb2YgdGhlIGhvcGxpdGVzLCBmb3IgdGhlIHJlYXNvbiB0aGF0IG90aGVyIGVuZW1pZXMgd2VyZSBjb21pbmcgaW50byB2aWV3IHVwb24gY2VydGFpbiBzdHJvbmcgaGVpZ2h0cy4KPG1pbGVzdG9uZSBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciBubyBsb25nIGludGVydmFsIGEgc2hvdXQgYXJvc2Ugd2l0aGluIGFuZCBtZW4gY2FtZSBwb3VyaW5nIGZvcnRoIGluIGZsaWdodCwgc29tZSBjYXJyeWluZyB3aXRoIHRoZW0gd2hhdCB0aGV5IGhhZCBzZWl6ZWQsIHRoZW4gc29vbiBhIG51bWJlciBvZiBtZW4gdGhhdCB3ZXJlIHdvdW5kZWQ7IGFuZCB0aGVyZSB3YXMgYSBkZWFsIG9mIHB1c2hpbmcgYWJvdXQgdGhlIGdhdGVzLiBXaGVuIHRob3NlIHdobyB3ZXJlIHR1bWJsaW5nIG91dCB3ZXJlIHF1ZXN0aW9uZWQsIHRoZXkgc2FpZCB0aGF0IHRoZXJlIHdhcyBhIGNpdGFkZWwgd2l0aGluLCB0aGF0IHRoZSBlbmVteSB3ZXJlIG51bWVyb3VzLCBhbmQgdGhhdCB0aGV5IGhhZCBzYWxsaWVkIGZvcnRoIGFuZCB3ZXJlIGRlYWxpbmcgYmxvd3MgdXBvbiB0aGUgbWVuIGluc2lkZS4KPG1pbGVzdG9uZSBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIFhlbm9waG9uIG9yZGVyZWQgVG9sbWlkZXMgdGhlIGhlcmFsZCB0byBwcm9jbGFpbSB0aGF0IHdob2V2ZXIgd2FudGVkIHRvIGdldCBhbnkgcGx1bmRlciBzaG91bGQgZ28gaW4uIEF0IHRoYXQgbWFueSBwcm9jZWVkZWQgdG8gcnVzaCBpbnRvIHRoZSBnYXRlcywgYW5kIHRoZSBjcm93ZCB0aGF0IHdhcyBwdXNoaW5nIGluIG92ZXJjYW1lIHRoZSBjcm93ZCB0aGF0IHdhcyB0dW1ibGluZyBvdXQgYW5kIHNodXQgdXAgdGhlIGVuZW15IGFnYWluIGluIHRoZWlyIGNpdGFkZWwuCjxtaWxlc3RvbmUgbj0iMTkiIHVuaXQ9InNlY3Rpb24iIC8+U28gZXZlcnl0aGluZyBvdXRzaWRlIHRoZSBjaXRhZGVsIHdhcyBzZWl6ZWQgYW5kIGNhcnJpZWQgb2ZmIGJ5IHRoZSBHcmVla3MsIGFuZCB0aGUgaG9wbGl0ZXMgdG9vayB1cCB0aGVpciBwb3NpdGlvbiwgc29tZSBhYm91dCB0aGUgcmFtcGFydHMsIG90aGVycyBhbG9uZyB0aGUgcm9hZCBsZWFkaW5nIHVwIHRvIHRoZSBjaXRhZGVsLgo8bWlsZXN0b25lIG49IjIwIiB1bml0PSJzZWN0aW9uIiAvPk1lYW53aGlsZSBYZW5vcGhvbiBhbmQgdGhlIGNhcHRhaW5zIHdlcmUgbG9va2luZyB0byBzZWUgd2hldGhlciBpdCB3YXMgcG9zc2libGUgdG8gY2FwdHVyZSB0aGUgY2l0YWRlbCwgZm9yIGluIHRoYXQgY2FzZSB0aGVpciBzYWZldHkgd2FzIHNlY3VyZWQsIHdoaWxlIG90aGVyd2lzZSB0aGV5IHRob3VnaHQgaXQgd291bGQgYmUgdmVyeSBkaWZmaWN1bHQgdG8gZWZmZWN0IHRoZWlyIHdpdGhkcmF3YWw7IGJ1dCB0aGUgdXBzaG90IG9mIHRoZWlyIGNvbnNpZGVyYXRpb24gd2FzLCB0aGF0IHRoZSBwbGFjZSB3YXMgcXVpdGUgaW1wcmVnbmFibGUuCjxtaWxlc3RvbmUgbj0iMjEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuIHRoZXkgbWFkZSBwcmVwYXJhdGlvbnMgZm9yIHRoZSB3aXRoZHJhd2FsOiB0aGV5IHRvcmUgZG93biB0aGUgcGFsaXNhZGVzLCBlYWNoIGRpdmlzaW9uIHRha2luZyB0aG9zZSBvbiBpdHMgb3duIGZyb250LCBhbmQgc2VudCBvZmYgdGhlIG1lbiB3aG8gd2VyZSB1bmZpdCBmb3Igc2VydmljZSBvciB3ZXJlIGNhcnJ5aW5nIGJ1cmRlbnMsIGFuZCBsaWtld2lzZSB0aGUgZ3JlYXRlciBwYXJ0IG9mIHRoZSBob3BsaXRlcywgdGhlIGNhcHRhaW5zIGtlZXBpbmcgYmVoaW5kIG9ubHkgdGhvc2UgdHJvb3BzIHRoYXQgdGhleSBlYWNoIHJlbGllZCB1cG9uLgo8bWlsZXN0b25lIG49IjIyIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGUgbW9tZW50IHRoZXkgYmVnYW4gdG8gcmV0aXJlLCB0aGVyZSBydXNoZWQgb3V0IHVwb24gdGhlbSBmcm9tIHdpdGhpbiBhIGdyZWF0IGNyb3dkIG9mIG1lbiBhcm1lZCB3aXRoIHdpY2tlciBzaGllbGRzLCBzcGVhcnMsIGdyZWF2ZXMsIGFuZCBQYXBobGFnb25pYW4gaGVsbWV0cywgd2hpbGUgb3RoZXJzIHNldCBhYm91dCBjbGltYmluZyB0byB0aGUgdG9wcyBvZiB0aGUgaG91c2VzIHRoYXQgd2VyZSBvbiBlaXRoZXIgc2lkZSBvZiB0aGUgcm9hZCBsZWFkaW5nIHVwIHRvIHRoZSBjaXRhZGVsLgo8bWlsZXN0b25lIG49IjIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZSByZXN1bHQgd2FzIHRoYXQgZXZlbiBhIHB1cnN1aXQgaW4gdGhlIGRpcmVjdGlvbiBvZiB0aGUgZ2F0ZXMgdGhhdCBsZWQgaW50byB0aGUgY2l0YWRlbCB3YXMgdW5zYWZlOyBmb3IgdGhleSB3b3VsZCBodXJsIGRvd24gZ3JlYXQgbG9ncyBmcm9tIGFib3ZlLCBzbyB0aGF0IGl0IHdhcyBkaWZmaWN1bHQgZWl0aGVyIHRvIHJlbWFpbiBvciB0byByZXRpcmUuIEFuZCB0aGUgYXBwcm9hY2ggb2YgbmlnaHQgd2FzIGFsc28gYSBjYXVzZSBmb3IgZmVhci4KPG1pbGVzdG9uZSBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluIHRoZSBtaWRzdCBvZiB0aGVpciBmaWdodGluZyBhbmQgcGVycGxleGl0eSBzb21lIGdvZCBnYXZlIHRvIHRoZSBHcmVla3MgYSBtZWFucyBvZiBzYWx2YXRpb24uIEZvciBvZiBhIHN1ZGRlbiBvbmUgb2YgdGhlIGhvdXNlcyBvbiB0aGUgcmlnaHQsIHNldCBvbiBmaXJlIGJ5IHNvbWVib2R5IG9yIG90aGVyLCBicm9rZSBpbnRvIGEgYmxhemU7IGFuZCBhcyBpdCBiZWdhbiB0byBmYWxsIGluLCB0aGVyZSBiZWdhbiBhIGdlbmVyYWwgZmxpZ2h0IGZyb20gdGhlIG90aGVyIGhvdXNlcyBvbiB0aGUgcmlnaHQgc2lkZSBvZiB0aGUgcm9hZC4KPG1pbGVzdG9uZSBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbW9tZW50IFhlbm9waG9uIGdyYXNwZWQgdGhpcyBsZXNzb24gd2hpY2ggY2hhbmNlIGhhZCBnaXZlbiBoaW0sIGhlIGdhdmUgb3JkZXJzIHRvIHNldCBmaXJlIHRvIHRoZSBob3VzZXMgb24gdGhlIGxlZnQgYWxzbywgd2hpY2ggd2VyZSBvZiB3b29kIGFuZCBzbyBmZWxsIHRvIGJ1cm5pbmcgdmVyeSBxdWlja2x5LiBUaGUgcmVzdWx0IHdhcyB0aGF0IHRoZSBwZW9wbGUgaW4gdGhlc2UgaG91c2VzIGxpa2V3aXNlIHRvb2sgdG8gZmxpZ2h0Lgo8bWlsZXN0b25lIG49IjI2IiB1bml0PSJzZWN0aW9uIiAvPkl0IHdhcyBvbmx5IHRoZSBlbmVteSBpbiB0aGVpciBmcm9udCB3aG8gd2VyZSBub3cgbGVmdCB0byB0cm91YmxlIHRoZSBHcmVla3MgYW5kIG1hbmlmZXN0bHkgaW50ZW5kZWQgdG8gYXR0YWNrIHRoZW0gYXMgdGhleSBwYXNzZWQgb3V0IGFuZCBkb3duIHRoZSBoaWxsLiBBdCB0aGlzIHN0YWdlIFhlbm9waG9uIHNlbnQgb3V0IG9yZGVycyB0aGF0IGFsbCB3aG8gY2hhbmNlZCB0byBiZSBvdXQgb2YgcmFuZ2Ugb2YgdGhlIG1pc3NpbGVzIHNob3VsZCBzZXQgYWJvdXQgYnJpbmdpbmcgdXAgbG9ncyBhbmQgcHV0IHRoZW0gaW4gdGhlIG9wZW4gc3BhY2UgYmV0d2VlbiB0aGVpciBvd24gZm9yY2VzIGFuZCB0aGUgZW5lbXkuIEFzIHNvb24gYXMgZW5vdWdoIGxvZ3MgaGFkIGJlZW4gY29sbGVjdGVkLCB0aGV5IHNldCBmaXJlIHRvIHRoZW07IGFuZCBtZWFud2hpbGUgdGhleSBzZXQgZmlyZSBhbHNvIHRvIHRoZSBob3VzZXMgd2hpY2ggd2VyZSBjbG9zZSBhbG9uZyB0aGUgcGFsaXNhZGUsIHNvIHRoYXQgdGhlIGVuZW15J3MgYXR0ZW50aW9uIG1pZ2h0IGJlIG9jY3VwaWVkIHdpdGggdGhlc2UuCjxtaWxlc3RvbmUgbj0iMjciIHVuaXQ9InNlY3Rpb24iIC8+SXQgd2FzIGluIHRoaXMgd2F5IHRoYXQgdGhleSBlZmZlY3RlZCwgd2l0aCBkaWZmaWN1bHR5LCB0aGVpciB3aXRoZHJhd2FsIGZyb20gdGhlIHN0cm9uZ2hvbGQsIGJ5IHB1dHRpbmcgZmlyZSBiZXR3ZWVuIHRoZW1zZWx2ZXMgYW5kIHRoZSBlbmVteS4gQW5kIHRoZSB3aG9sZSBjaXR5IHdhcyBidXJuZWQgZG93biwgaG91c2VzLCB0b3dlcnMsIHBhbGlzYWRlcywgYW5kIGV2ZXJ5dGhpbmcgZWxzZSBleGNlcHQgdGhlIGNpdGFkZWwuCjxtaWxlc3RvbmUgbj0iMjgiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbiB0aGUgbmV4dCBkYXkgdGhlIEdyZWVrcyB3ZXJlIGZvciByZXR1cm5pbmcgdG8gY2FtcCB3aXRoIHRoZWlyIHByb3Zpc2lvbnMuIEJ1dCBpbmFzbXVjaCBhcyB0aGV5IGZlYXJlZCB0aGUgZGVzY2VudCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiIGtleT0icGVyc2V1cyxUcmFwZXp1cyxBcmNhZGlhIj5UcmFwZXp1czwvcGxhY2VOYW1lPiAoZm9yIHRoZSB3YXkgd2FzIHN0ZWVwIGFuZCBuYXJyb3cpLCB0aGV5IGxhaWQgYSBzaGFtIGFtYnVzY2FkZToKPG1pbGVzdG9uZSBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5hIG1hbiBvZiBNeXNpYSwgd2hvIGxpa2V3aXNlIGJvcmUgdGhlIG5hbWUgb2YgTXlzdXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5XaGljaCBpdHNlbGYgbWVhbnMg4oCcTXlzaWFu4oCd4oCUanVzdCBhcyDigJxFbmdsaXNo4oCdIG1pZ2h0IGJlIHRoZSBmYW1pbHkgbmFtZSBvZiBhbiBFbmdsaXNobWFuLjwvbm90ZT4gdG9vayB0ZW4gb2YgdGhlIENyZXRhbnMsIHN0YXllZCBiZWhpbmQgaW4gYSBiaXQgb2YgdW5kZXJncm93dGgsIGFuZCBwcmV0ZW5kZWQgdG8gYmUgdHJ5aW5nIHRvIGtlZXAgb3V0IG9mIHNpZ2h0IG9mIHRoZSBlbmVteTsgYnV0IHRoZWlyIHNoaWVsZHMsIHdoaWNoIHdlcmUgb2YgYnJvbnplLCB3b3VsZCBub3cgYW5kIHRoZW4gZ2xlYW0gdGhyb3VnaCB0aGUgYnVzaGVzLgo8bWlsZXN0b25lIG49IjMwIiB1bml0PSJzZWN0aW9uIiAvPlNvIHRoZSBlbmVteSwgY2F0Y2hpbmcgZ2xpbXBzZXMgb2YgdGhlc2UgcHJvY2VlZGluZ3MsIHdlcmUgZmVhcmZ1bCB0aGF0IGl0IHdhcyBhbiBhbWJ1c2NhZGU7IGFuZCBtZWFud2hpbGUgdGhlIEdyZWVrIGFybXkgd2FzIG1ha2luZyBpdHMgZGVzY2VudC4gV2hlbiBpdCBzZWVtZWQgdGhhdCB0aGV5IGhhZCBnb3QgZG93biBmYXIgZW5vdWdoLCBhIHNpZ25hbCB3YXMgZ2l2ZW4gdG8gdGhlIE15c2lhbiB0byBmbGVlIGF0IHRoZSB0b3Agb2YgaGlzIHNwZWVkLCBhbmQgaGUgYW5kIGhpcyBjb21wYW5pb25zIGFyb3NlIGFuZCB0b29rIHRvIGZsaWdodC4KPG1pbGVzdG9uZSBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgQ3JldGFucyBvZiB0aGUgcGFydHkgKGZpbmRpbmcsIGFzIHRoZXkgc2FpZCwgdGhhdCB0aGV5IHdlcmUgbGlrZSB0byBiZSBvdmVydGFrZW4gaW4gdGhlIHJ1bm5pbmcpIHBsdW5nZWQgb3V0IG9mIHRoZSByb2FkIGludG8gdGhlIHdvb2RzLCBhbmQgYnkgdHVtYmxpbmcgZG93biB0aHJvdWdoIHRoZSByYXZpbmVzIG1hZGUgdGhlaXIgZXNjYXBlLAo8bWlsZXN0b25lIG49IjMyIiB1bml0PSJzZWN0aW9uIiAvPmJ1dCB0aGUgTXlzaWFuIGhlbGQgdG8gdGhlIHJvYWQgaW4gaGlzIGZsaWdodCBhbmQga2VwdCBzaG91dGluZyBmb3IgaGVscDsgYW5kIHRoZXkgZGlkIGdvIHRvIGhpcyBhaWQsIGFuZCBwaWNrZWQgaGltIHVwIHdvdW5kZWQuIFRoZW4gdGhlIHJlc2N1ZXJzIGluIHRoZWlyIHR1cm4gcHJvY2VlZGVkIHRvIHJldHJlYXQsIGZhY2VzIHRvIHRoZSBmcm9udCwgd2hpbGUgdGhlIGVuZW15IGtlcHQgdGhyb3dpbmcgbWlzc2lsZXMgYXQgdGhlbSBhbmQgc29tZSBvZiB0aGUgQ3JldGFucyByZXBsaWVkIHdpdGggdGhlaXIgYXJyb3dzLiBJbiB0aGlzIHdheSB0aGV5IGFsbCByZWFjaGVkIHRoZSBjYW1wIHNhZmUgYW5kIHNvdW5kLgo8bWlsZXN0b25lIG49IjMiIHVuaXQ9ImNoYXB0ZXIiIC8+PG1pbGVzdG9uZSBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIG5vdywgc2VlaW5nIHRoYXQgQ2hlaXJpc29waHVzIHdhcyBub3QgcmV0dXJuZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSA8YmlibCBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjEuNCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjEuNDwvYmlibD4uPC9ub3RlPiB0aGF0IHRoZXkgaGFkIG5vdCBhbiBhZGVxdWF0ZSBudW1iZXIgb2Ygc2hpcHMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjEuMTAiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS4xLjEwLTE2PC9iaWJsPi48L25vdGU+IGFuZCB0aGF0IGl0IHdhcyBubyBsb25nZXIgcG9zc2libGUgdG8gZ2V0IHByb3Zpc2lvbnMsIHRoZXkgcmVzb2x2ZWQgdG8gZGVwYXJ0IGJ5IGxhbmQuIE9uIGJvYXJkIHRoZSBzaGlwcyB0aGV5IGVtYmFya2VkIHRoZSBzaWNrLCB0aG9zZSB3aG8gd2VyZSBtb3JlIHRoYW4gZm9ydHkgeWVhcnMgb2YgYWdlLCB0aGUgd29tZW4gYW5kIGNoaWxkcmVuLCBhbmQgYWxsIHRoZSBiYWdnYWdlIHdoaWNoIHRoZXkgZGlkIG5vdCBuZWVkIHRvIGtlZXAgd2l0aCB0aGVtLiBUaGV5IHB1dCBhYm9hcmQgYWxzbyBQaGlsZXNpdXMgYW5kIFNvcGhhZW5ldHVzLCB0aGUgZWxkZXN0IG9mIHRoZSBnZW5lcmFscywgYW5kIGJhZGUgdGhlbSB0YWtlIGNoYXJnZSBvZiB0aGUgZW50ZXJwcmlzZTsKPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPnRoZW4gdGhlIHJlc3QgdG9vayB1cCB0aGUgbWFyY2gsIHRoZSByb2FkIGhhdmluZyBiZWVuIGFscmVhZHkgY29uc3RydWN0ZWQuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjEuMTMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS4xLjEzLTE0PC9iaWJsPi48L25vdGU+IEFuZCBvbiB0aGUgdGhpcmQgZGF5IG9mIHRoZWlyIGpvdXJuZXkgdGhleSByZWFjaGVkIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDg2MzU3IiBrZXk9InRnbiwxMDg2MzU3Ij5DZXJhc3VzPC9wbGFjZU5hbWU+LCBhIEdyZWVrIGNpdHkgb24gdGhlIHNlYSwgYmVpbmcgYSBjb2xvbnkgcGxhbnRlZCBieSB0aGUgU2lub3BlYW5zIGluIHRoZSB0ZXJyaXRvcnkgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2NDIiIGtleT0idGduLDcwMTY2NDIiPkNvbGNoaXM8L3BsYWNlTmFtZT4uIAo8bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+VGhlcmUgdGhleSByZW1haW5lZCB0ZW4gZGF5czsgYW5kIHRoZSB0cm9vcHMgd2VyZSByZXZpZXdlZCB1bmRlciBhcm1zIGFuZCBudW1iZXJlZCwgYW5kIHRoZXJlIHByb3ZlZCB0byBiZSBlaWdodCB0aG91c2FuZCBzaXggaHVuZHJlZCBtZW4uPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gPGJpYmwgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNC44LjE1IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDQuOC4xNTwvYmlibD4gYW5kIG5vdGVzIHRoZXJlb24uPC9ub3RlPiBTbyBtYW55IHdlcmUgbGVmdCBhbGl2ZS4gVGhlIHJlc3QgaGFkIHBlcmlzaGVkIGF0IHRoZSBoYW5kcyBvZiB0aGUgZW5lbXkgb3IgaW4gdGhlIHNub3csIGEgZmV3IGFsc28gYnkgZGlzZWFzZS4KPG1pbGVzdG9uZSBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmUsIGFsc28sIHRoZXkgZGl2aWRlZCB0aGUgbW9uZXkgcmVjZWl2ZWQgZnJvbSB0aGUgc2FsZSBvZiB0aGUgYm9vdHkuIEFuZCB0aGUgdGl0aGUsIHdoaWNoIHRoZXkgc2V0IGFwYXJ0IGZvciBBcG9sbG8gYW5kIGZvciBBcnRlbWlzIG9mIHRoZSBFcGhlc2lhbnMsIHdhcyBkaXN0cmlidXRlZCBhbW9uZyB0aGUgZ2VuZXJhbHMsIGVhY2ggdGFraW5nIGhpcyBwb3J0aW9uIHRvIGtlZXAgc2FmZWx5IGZvciB0aGUgZ29kczsgYW5kIHRoZSBwb3J0aW9uIHRoYXQgZmVsbCB0byBDaGVpcmlzb3BodXMgd2FzIGdpdmVuIHRvIE5lb24gdGhlIEFzaW5hZWFuLgo8bWlsZXN0b25lIG49IjUiIHVuaXQ9InNlY3Rpb24iIC8+QXMgZm9yIFhlbm9waG9uLCBoZSBjYXVzZWQgYSB2b3RpdmUgb2ZmZXJpbmcgdG8gYmUgbWFkZSBvdXQgb2YgQXBvbGxvJ3Mgc2hhcmUgb2YgaGlzIHBvcnRpb24gYW5kIGRlZGljYXRlZCBpdCBpbiB0aGUgdHJlYXN1cnkgb2YgdGhlIEF0aGVuaWFucyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERlbHBoaSIga2V5PSJwZXJzZXVzLERlbHBoaSI+RGVscGhpPC9wbGFjZU5hbWU+LCBpbnNjcmliaW5nIHVwb24gaXQgaGlzIG93biBuYW1lIGFuZCB0aGF0IG9mIFByb3hlbnVzLCB3aG8gd2FzIGtpbGxlZCB3aXRoIENsZWFyY2h1czs8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjU8L2JpYmw+Ljwvbm90ZT4gZm9yIFByb3hlbnVzIHdhcyBoaXMgZnJpZW5kLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy4xLjQiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy4xLjQtMTA8L2JpYmw+Ljwvbm90ZT4KPG1pbGVzdG9uZSBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBzaGFyZSB3aGljaCBiZWxvbmdlZCB0byBBcnRlbWlzIG9mIHRoZSBFcGhlc2lhbnMgaGUgbGVmdCBiZWhpbmQsIGF0IHRoZSB0aW1lIHdoZW4gaGUgd2FzIHJldHVybmluZyBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDA0IiBrZXk9InRnbiwxMDAwMDA0Ij5Bc2lhPC9wbGFjZU5hbWU+IHdpdGggQWdlc2lsYXVzIHRvIHRha2UgcGFydCBpbiB0aGUgY2FtcGFpZ24gYWdhaW5zdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjY4MyIga2V5PSJ0Z24sNzAwMjY4MyI+Qm9lb3RpYTwvcGxhY2VOYW1lPiw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkluIDxkYXRlIGF1dGhuYW1lPSItMzk0IiB2YWx1ZT0iLTM5NCI+Mzk0PC9kYXRlPiBCLkMuLCBlbmRpbmcgaW4gdGhlIGhhcmQtZm91Z2h0IGJhdHRsZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTIzNSIga2V5PSJ0Z24sNzAxMTIzNSI+Q29yb25lYTwvcGxhY2VOYW1lPiwgYXQgd2hpY2ggWGVub3Bob24gd2FzIHByZXNlbnQuIGNwLiA8YmlibCBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiA0LjIuMSIgdmFsaWQ9InllcyI+WGVuLiBIZWxsLiA0LjIuMS04PC9iaWJsPiwgPGJpYmwgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gNC4zLjEiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gNC4zLjEtMjE8L2JpYmw+Ljwvbm90ZT4gaW4gY2hhcmdlIG9mIE1lZ2FieXp1cywgdGhlIHNhY3Jpc3RhbiBvZiBBcnRlbWlzLCBmb3IgdGhlIHJlYXNvbiB0aGF0IGhpcyBvd24gam91cm5leSBzZWVtZWQgbGlrZWx5IHRvIGJlIGEgZGFuZ2Vyb3VzIG9uZTsgYW5kIGhpcyBpbnN0cnVjdGlvbnMgd2VyZSB0aGF0IGluIGNhc2UgaGUgc2hvdWxkIGVzY2FwZSB3aXRoIGhpcyBsaWZlLCB0aGUgbW9uZXkgd2FzIHRvIGJlIHJldHVybmVkIHRvIGhpbSwgYnV0IGluIGNhc2UgYW55IGlsbCBzaG91bGQgYmVmYWxsIGhpbSwgTWVnYWJ5enVzIHdhcyB0byBjYXVzZSB0byBiZSBtYWRlIGFuZCBkZWRpY2F0ZWQgdG8gQXJ0ZW1pcyB3aGF0ZXZlciBvZmZlcmluZyBoZSB0aG91Z2h0IHdvdWxkIHBsZWFzZSB0aGUgZ29kZGVzcy4KPG1pbGVzdG9uZSBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gdGhlIHRpbWUgb2YgWGVub3Bob24ncyBleGlsZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+V2hpY2ggd2FzIHByb2JhYmx5IGR1ZSB0byBoaXMgdGFraW5nIHBhcnQgaW4gdGhlIGV4cGVkaXRpb24gb2YgPHBlcnNOYW1lPkN5cnVzPC9wZXJzTmFtZT4uIGNwLiA8YmlibCBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAzLjEuNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAzLjEuNTwvYmlibD4uPC9ub3RlPiBhbmQgd2hpbGUgaGUgd2FzIGxpdmluZyBhdCBTY2lsbHVzLCBuZWFyIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsT2x5bXBpYSIga2V5PSJwZXJzZXVzLE9seW1waWEiPk9seW1waWE8L3BsYWNlTmFtZT4sIHdoZXJlIGhlIGhhZCBiZWVuIGVzdGFibGlzaGVkIGFzIGEgY29sb25pc3QgYnkgdGhlIExhY2VkYWVtb25pYW5zLCBNZWdhYnl6dXMgY2FtZSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE9seW1waWEiIGtleT0icGVyc2V1cyxPbHltcGlhIj5PbHltcGlhPC9wbGFjZU5hbWU+IHRvIGF0dGVuZCB0aGUgZ2FtZXMgYW5kIHJldHVybmVkIHRvIGhpbSBoaXMgZGVwb3NpdC4gVXBvbiByZWNlaXZpbmcgaXQgWGVub3Bob24gYm91Z2h0IGEgcGxvdCBvZiBncm91bmQgZm9yIHRoZSBnb2RkZXNzIGluIGEgcGxhY2Ugd2hpY2ggQXBvbGxvJ3Mgb3JhY2xlIGFwcG9pbnRlZC4KPG1pbGVzdG9uZSBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFzIGl0IGNoYW5jZWQsIHRoZXJlIGZsb3dlZCB0aHJvdWdoIHRoZSBwbG90IGEgcml2ZXIgbmFtZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTZWxpbnVzIiBrZXk9InBlcnNldXMsU2VsaW51cyI+U2VsaW51czwvcGxhY2VOYW1lPjsgYW5kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRXBoZXNvcyIga2V5PSJwZXJzZXVzLEVwaGVzb3MiPkVwaGVzdXM8L3BsYWNlTmFtZT4gbGlrZXdpc2UgYSBTZWxpbnVzIHJpdmVyIGZsb3dzIHBhc3QgdGhlIHRlbXBsZSBvZiBBcnRlbWlzLiBJbiBib3RoIHN0cmVhbXMsIG1vcmVvdmVyLCB0aGVyZSBhcmUgZmlzaCBhbmQgbXVzc2Vscywgd2hpbGUgaW4gdGhlIHBsb3QgYXQgU2NpbGx1cyB0aGVyZSBpcyBodW50aW5nIG9mIGFsbCBtYW5uZXIgb2YgYmVhc3RzIG9mIHRoZSBjaGFzZS4KPG1pbGVzdG9uZSBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkhlcmUgWGVub3Bob24gYnVpbHQgYW4gYWx0YXIgYW5kIGEgdGVtcGxlIHdpdGggdGhlIHNhY3JlZCBtb25leSwgYW5kIGZyb20gdGhhdCB0aW1lIGZvcnRoIGhlIHdvdWxkIGV2ZXJ5IHllYXIgdGFrZSB0aGUgdGl0aGUgb2YgdGhlIHByb2R1Y3RzIG9mIHRoZSBsYW5kIGluIHRoZWlyIHNlYXNvbiBhbmQgb2ZmZXIgc2FjcmlmaWNlIHRvIHRoZSBnb2RkZXNzLCBhbGwgdGhlIGNpdGl6ZW5zIGFuZCB0aGUgbWVuIGFuZCB3b21lbiBvZiB0aGUgbmVpZ2hib3VyaG9vZCB0YWtpbmcgcGFydCBpbiB0aGUgZmVzdGl2YWwuIEFuZCB0aGUgZ29kZGVzcyB3b3VsZCBwcm92aWRlIGZvciB0aGUgYmFucXVldGVycyBiYXJsZXkgbWVhbCBhbmQgbG9hdmVzIG9mIGJyZWFkLCB3aW5lIGFuZCBzd2VldG1lYXRzLCBhbmQgYSBwb3J0aW9uIG9mIHRoZSBzYWNyaWZpY2lhbCB2aWN0aW1zIGZyb20gdGhlIHNhY3JlZCBoZXJkIGFzIHdlbGwgYXMgb2YgdGhlIHZpY3RpbXMgdGFrZW4gaW4gdGhlIGNoYXNlLgo8bWlsZXN0b25lIG49IjEwIiB1bml0PSJzZWN0aW9uIiAvPkZvciBYZW5vcGhvbidzIHNvbnMgYW5kIHRoZSBzb25zIG9mIHRoZSBvdGhlciBjaXRpemVucyB1c2VkIHRvIGhhdmUgYSBodW50aW5nIGV4cGVkaXRpb24gYXQgdGhlIHRpbWUgb2YgdGhlIGZlc3RpdmFsLCBhbmQgYW55IGdyb3duIG1lbiB3aG8gc28gd2lzaGVkIHdvdWxkIGpvaW4gdGhlbTsgYW5kIHRoZXkgY2FwdHVyZWQgdGhlaXIgZ2FtZSBwYXJ0bHkgZnJvbSB0aGUgc2FjcmVkIHByZWNpbmN0IGl0c2VsZiBhbmQgcGFydGx5IGZyb20gTW91bnQgUGhvbG9l4oCUYm9hcnMgYW5kIGdhemVsbGVzIGFuZCBzdGFncy4KPG1pbGVzdG9uZSBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBwbGFjZSBpcyBzaXR1YXRlZCBvbiB0aGUgcm9hZCB3aGljaCBsZWFkcyBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDExMDY1IiBrZXk9InRnbiw3MDExMDY1Ij5MYWNlZGFlbW9uPC9wbGFjZU5hbWU+IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsT2x5bXBpYSIga2V5PSJwZXJzZXVzLE9seW1waWEiPk9seW1waWE8L3BsYWNlTmFtZT4sIGFuZCBpcyBhYm91dCB0d2VudHkgc3RhZGlhIGZyb20gdGhlIHRlbXBsZSBvZiBaZXVzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsT2x5bXBpYSIga2V5PSJwZXJzZXVzLE9seW1waWEiPk9seW1waWE8L3BsYWNlTmFtZT4uIFdpdGhpbiB0aGUgc2FjcmVkIHByZWNpbmN0IHRoZXJlIGlzIG1lYWRvd2xhbmQgYW5kIHRyZWVjb3ZlcmVkIGhpbGxzLCBzdWl0ZWQgZm9yIHRoZSByZWFyaW5nIG9mIHN3aW5lLCBnb2F0cywgY2F0dGxlIGFuZCBob3JzZXMsIHNvIHRoYXQgZXZlbiB0aGUgZHJhdWdodCBhbmltYWxzIHdoaWNoIGJyaW5nIHBlb3BsZSB0byB0aGUgZmVzdGl2YWwgaGF2ZSB0aGVpciBmZWFzdCBhbHNvLgo8bWlsZXN0b25lIG49IjEyIiB1bml0PSJzZWN0aW9uIiAvPkltbWVkaWF0ZWx5IHN1cnJvdW5kaW5nIHRoZSB0ZW1wbGUgaXMgYSBncm92ZSBvZiBjdWx0aXZhdGVkIHRyZWVzLCBwcm9kdWNpbmcgYWxsIHNvcnRzIG9mIGRlc3NlcnQgZnJ1aXRzIGluIHRoZWlyIHNlYXNvbi4gVGhlIHRlbXBsZSBpdHNlbGYgaXMgbGlrZSB0aGUgb25lIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRXBoZXNvcyIga2V5PSJwZXJzZXVzLEVwaGVzb3MiPkVwaGVzdXM8L3BsYWNlTmFtZT4sIGFsdGhvdWdoIHNtYWxsIGFzIGNvbXBhcmVkIHdpdGggZ3JlYXQsIGFuZCB0aGUgaW1hZ2Ugb2YgdGhlIGdvZGRlc3MsIGFsdGhvdWdoIGN5cHJlc3Mgd29vZCBhcyBjb21wYXJlZCB3aXRoIGdvbGQsIGlzIGxpa2UgdGhlIEVwaGVzaWFuIGltYWdlLgo8bWlsZXN0b25lIG49IjEzIiB1bml0PSJzZWN0aW9uIiAvPkJlc2lkZSB0aGUgdGVtcGxlIHN0YW5kcyBhIHRhYmxldCB3aXRoIHRoaXMgaW5zY3JpcHRpb246PHF1b3RlIHR5cGU9Imluc2NyaXB0Ij5UaGUgcGxhY2UgaXMgc2FjcmVkIHRvIEFydGVtaXMuIEhlIHdobyBob2xkcyBpdCBhbmQgZW5qb3lzIGl0cyBmcnVpdHMgbXVzdCBvZmZlciB0aGUgdGl0aGUgZXZlcnkgeWVhciBpbiBzYWNyaWZpY2UsIGFuZCBmcm9tIHRoZSByZW1haW5kZXIgbXVzdCBrZWVwIHRoZSB0ZW1wbGUgaW4gcmVwYWlyLiBJZiBhbnkgb25lIGxlYXZlcyB0aGVzZSB0aGluZ3MgdW5kb25lLCB0aGUgZ29kZGVzcyB3aWxsIGxvb2sgdG8gaXQuPC9xdW90ZT4KPG1pbGVzdG9uZSBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkxlYXZpbmcgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwODYzNTciIGtleT0idGduLDEwODYzNTciPkNlcmFzdXM8L3BsYWNlTmFtZT4sIHRoZSBwZW9wbGUgd2hvIGhhZCB0aHVzIGZhciBiZWVuIGNvbnZleWVkIGJ5IHNlYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDUuMy4xIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuMy4xPC9iaWJsPi48L25vdGU+IHdlbnQgb24gYXMgYmVmb3JlLCB3aGlsZSB0aGUgcmVzdCBjb250aW51ZWQgdGhlaXIgam91cm5leSBieSBsYW5kLgo8bWlsZXN0b25lIG49IjIiIHVuaXQ9InNlY3Rpb24iIC8+V2hlbiB0aGV5IHJlYWNoZWQgdGhlIGJvdW5kYXJ5IG9mIHRoZSBNb3NzeW5vZWNpYW5zLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+TGl0LiBkd2VsbGVycyBpbiBNb3NzeW5zLCBvciB3b29kZW4gdG93ZXJzLiBTZWUgMjYgYmVsb3cuPC9ub3RlPiB0aGV5IHNlbnQgdG8gdGhlbSBUaW1lc2l0aGV1cyB0aGUgVHJhcGV6dW50aWFuLCB3aG8gd2FzIG9mZmljaWFsIHJlcHJlc2VudGF0aXZlIG9mIHRoZSBNb3NzeW5vZWNpYW5zIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJhcGV6dXMsQXJjYWRpYSIga2V5PSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiPlRyYXBlenVzPC9wbGFjZU5hbWU+LCBhbmQgYXNrZWQgd2hldGhlciBpbiBtYXJjaGluZyB0aHJvdWdoIHRoZWlyIGNvdW50cnkgdGhleSB3ZXJlIHRvIHJlZ2FyZCBpdCBhcyBmcmllbmRseSBvciBob3N0aWxlLiBUaGUgTW9zc3lub2VjaWFucyByZXBsaWVkIHRoYXQgdGhleSB3b3VsZCBub3QgcGVybWl0IHRoZW0gdG8gcGFzcyB0aHJvdWdoOwo8bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIHRoZXkgdHJ1c3RlZCBpbiB0aGVpciBzdHJvbmdob2xkcy4gVGhlbiBUaW1lc2l0aGV1cyB0b2xkIHRoZSBHcmVla3MgdGhhdCB0aGUgTW9zc3lub2VjaWFucyB3aG8gZHdlbHQgZmFydGhlciBvbiB3ZXJlIGhvc3RpbGUgdG8gdGhlc2UgcGVvcGxlLCBhbmQgaXQgd2FzIGRlY2lkZWQgdG8gc3VtbW9uIHRoZW0gYW5kIHNlZSB3aGV0aGVyIHRoZXkgd2FudGVkIHRvIGNvbmNsdWRlIGFuIGFsbGlhbmNlOyBzbyBUaW1lc2l0aGV1cyB3YXMgc2VudCB0byB0aGVtLCBhbmQgYnJvdWdodCBiYWNrIHdpdGggaGltIHRoZWlyIGNoaWVmcy4KPG1pbGVzdG9uZSBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSBhcnJpdmVkLCB0aGVzZSBjaGllZnMgb2YgdGhlIE1vc3N5bm9lY2lhbnMgYW5kIHRoZSBnZW5lcmFscyBvZiB0aGUgR3JlZWtzIG1ldCB0b2dldGhlcjsKPG1pbGVzdG9uZSBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPmFuZCBYZW5vcGhvbiBzcG9rZSBhcyBmb2xsb3dzLCBUaW1lc2l0aGV1cyBhY3RpbmcgYXMgaW50ZXJwcmV0ZXI6IOKAnE1vc3N5bm9lY2lhbnMsIHdlIGRlc2lyZSB0byBtYWtlIG91ciB3YXkgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiBpbiBzYWZldHkgYnkgbGFuZCwgZm9yIHdlIGhhdmUgbm8gc2hpcHM7IGJ1dCB0aGVzZSBwZW9wbGUsIHdobywgYXMgd2UgaGVhciwgYXJlIHlvdXIgZW5lbWllcywgYXJlIHRyeWluZyB0byBibG9jayBvdXIgcGFzc2FnZS4KPG1pbGVzdG9uZSBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPklmIHlvdSB3aXNoLCB0aGVyZWZvcmUsIGl0IGlzIHdpdGhpbiB5b3VyIHBvd2VyIHRvIHNlY3VyZSB1cyBhcyBhbGxpZXMsIHRvIGV4YWN0IHZlbmdlYW5jZSBmb3IgYW55IHdyb25nIHRoZXNlIHBlb3BsZSBoYXZlIGV2ZXIgZG9uZSB5b3UsIGFuZCB0byBtYWtlIHRoZW0gaGVuY2Vmb3J0aCB5b3VyIHN1YmplY3RzLgo8bWlsZXN0b25lIG49IjciIHVuaXQ9InNlY3Rpb24iIC8+QnV0IGlmIHlvdSBkaXNtaXNzIHVzIHdpdGggYSByZWZ1c2FsLCB3aGVyZSwgYmV0aGluayB5b3UsIGNvdWxkIHlvdSBldmVyIGFnYWluIHNlY3VyZSBzbyBsYXJnZSBhIGZvcmNlIHRvIGhlbHAgZmlnaHQgeW91ciBiYXR0bGVzP+KAnQo8bWlsZXN0b25lIG49IjgiIHVuaXQ9InNlY3Rpb24iIC8+VG8gdGhlc2Ugd29yZHMgdGhlIGNoaWVmIG9mIHRoZSBNb3NzeW5vZWNpYW5zIHJlcGxpZWQgdGhhdCB0aGV5IGRlc2lyZWQgdGhpcyBhcnJhbmdlbWVudCBhbmQgYWNjZXB0ZWQgdGhlIGFsbGlhbmNlLgo8bWlsZXN0b25lIG49IjkiIHVuaXQ9InNlY3Rpb24iIC8+4oCcV2VsbCwgdGhlbizigJ0gc2FpZCBYZW5vcGhvbiwg4oCcd2hhdCB1c2Ugd2lsbCB5b3Ugd2FudCB0byBtYWtlIG9mIHVzIGlmIHdlIGJlY29tZSB5b3VyIGFsbGllcywgYW5kIHdoYXQgYXNzaXN0YW5jZSB3aWxsIHlvdSwgaW4geW91ciB0dXJuLCBiZSBhYmxlIHRvIHJlbmRlciB1cyBpbiB0aGUgbWF0dGVyIG9mIG91ciBwYXNzYWdlIHRocm91Z2ggdGhpcyB0ZXJyaXRvcnk/4oCdCjxtaWxlc3RvbmUgbj0iMTAiIHVuaXQ9InNlY3Rpb24iIC8+VGhleSByZXBsaWVkOiDigJxXZSBhcmUgYWJsZSB0byBpbnZhZGUgdGhpcyBsYW5kIG9mIHlvdXIgZW5lbWllcyBhbmQgb3VycyBmcm9tIHRoZSBvcHBvc2l0ZSBzaWRlLCBhbmQgdG8gc2VuZCB0byB5b3UgaGVyZSBub3Qgb25seSBzaGlwcywgYnV0IG1lbiB3aG8gd2lsbCBhaWQgeW91IGluIHRoZSBmaWdodGluZyBhbmQgd2lsbCBndWlkZSB5b3Ugb24geW91ciB3YXku4oCdCjxtaWxlc3RvbmUgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciBjb25maXJtaW5nIHRoaXMgYWdyZWVtZW50IGJ5IGdpdmluZyBhbmQgcmVjZWl2aW5nIHBsZWRnZXMgdGhleSBkZXBhcnRlZC4gVGhlIG5leHQgZGF5IHRoZXkgcmV0dXJuZWQsIGJyaW5naW5nIHdpdGggdGhlbSB0aHJlZSBodW5kcmVkIGNhbm9lcywgZWFjaCBtYWRlIG91dCBvZiBhIHNpbmdsZSBsb2cgYW5kIGVhY2ggY29udGFpbmluZyB0aHJlZSBtZW4sIHR3byBvZiB3aG9tIGRpc2VtYmFya2VkIGFuZCBmZWxsIGludG8gbGluZSB1bmRlciBhcm1zLCB3aGlsZSB0aGUgdGhpcmQgcmVtYWluZWQgaW4gdGhlIGNhbm9lLgo8bWlsZXN0b25lIG49IjEyIiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gdGhlIHNlY29uZCBncm91cCB0b29rIHRoZWlyIGNhbm9lcyBhbmQgc2FpbGVkIGJhY2sgYWdhaW4sIGFuZCB0aG9zZSB3aG8gc3RheWVkIGJlaGluZCBtYXJzaGFsbGVkIHRoZW1zZWx2ZXMgaW4gdGhlIGZvbGxvd2luZyB3YXkuIFRoZXkgdG9vayBwb3NpdGlvbiBpbiBsaW5lcyBvZiBhYm91dCBhIGh1bmRyZWQgZWFjaCwgbGlrZSBjaG9yYWwgZGFuY2VycyByYW5nZWQgb3Bwb3NpdGUgb25lIGFub3RoZXIsIGFsbCBvZiB0aGVtIHdpdGggd2lja2VyIHNoaWVsZHMgY292ZXJlZCB3aXRoIHdoaXRlLCBzaGFnZ3kgb3gtaGlkZSBhbmQgbGlrZSBhbiBpdnkgbGVhZiBpbiBzaGFwZSwgYW5kIGVhY2ggbWFuIGhvbGRpbmcgaW4gaGlzIHJpZ2h0IGhhbmQgYSBsYW5jZSBhYm91dCBzaXggY3ViaXRzIGxvbmcsIHdpdGggYSBzcGVhcmhlYWQgYXQgb25lIGVuZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuNy4xNiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjcuMTY8L2JpYmw+IGFuZCBub3RlIHRoZXJlb24uPC9ub3RlPiBhbmQgYSByb3VuZCBiYWxsIGF0IHRoZSBidXR0IGVuZCBvZiB0aGUgc2hhZnQuCjxtaWxlc3RvbmUgbj0iMTMiIHVuaXQ9InNlY3Rpb24iIC8+VGhleSB3b3JlIHNob3J0IHR1bmljcyB3aGljaCBkaWQgbm90IHJlYWNoIHRoZWlyIGtuZWVzIGFuZCB3ZXJlIGFzIHRoaWNrIGFzIGEgbGluZW4gYmFnIGZvciBiZWRjbG90aGVzLCBhbmQgdXBvbiB0aGVpciBoZWFkcyBsZWF0aGVybiBoZWxtZXRzIGp1c3Qgc3VjaCBhcyB0aGUgUGFwaGxhZ29uaWFuIGhlbG1ldHMsIHdpdGggYSB0dWZ0IGluIHRoZSBtaWRkbGUgdmVyeSBsaWtlIGEgdGlhcmEgaW4gc2hhcGU7IGFuZCB0aGV5IGhhZCBhbHNvIGlyb24gYmF0dGxlLWF4ZXMuCjxtaWxlc3RvbmUgbj0iMTQiIHVuaXQ9InNlY3Rpb24iIC8+QWZ0ZXIgdGhleSBoYWQgZm9ybWVkIHRoZWlyIGxpbmVzIG9uZSBvZiB0aGVtIGxlZCBvZmYsIGFuZCB0aGUgcmVzdCBhZnRlciBoaW0sIGV2ZXJ5IG1hbiBvZiB0aGVtLCBmZWxsIGludG8gYSByaHl0aG1pYyBtYXJjaCBhbmQgc29uZywgYW5kIHBhc3NpbmcgdGhyb3VnaCB0aGUgYmF0dGFsaW9ucyBhbmQgdGhyb3VnaCB0aGUgcXVhcnRlcnMgb2YgdGhlIEdyZWVrcyB0aGV5IHdlbnQgc3RyYWlnaHQgb24gYWdhaW5zdCB0aGUgZW5lbXksIHRvd2FyZCBhIHN0cm9uZ2hvbGQgd2hpY2ggc2VlbWVkIHRvIGJlIGVzcGVjaWFsbHkgYXNzYWlsYWJsZS4KPG1pbGVzdG9uZSBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgc2l0dWF0ZWQgaW4gZnJvbnQgb2YgdGhlIGNpdHkgd2hpY2ggaXMgY2FsbGVkIGJ5IHRoZW0gTWV0cm9wb2xpcyBhbmQgY29udGFpbnMgdGhlIGNoaWVmIGNpdGFkZWwgb2YgdGhlIE1vc3N5bm9lY2lhbnMuIEluIGZhY3QsIGl0IHdhcyBmb3IgdGhlIHBvc3Nlc3Npb24gb2YgdGhpcyBjaXRhZGVsIHRoYXQgdGhlIHdhciB3YXMgZ29pbmcgb247IGZvciB0aG9zZSB3aG8gYXQgYW55IHRpbWUgaGVsZCBpdCB3ZXJlIGRlZW1lZCB0byBiZSBtYXN0ZXJzIG9mIGFsbCB0aGUgb3RoZXIgTW9zc3lub2VjaWFucywgYW5kIHRoZXkgc2FpZCB0aGF0IHRoZSBwcmVzZW50IG9jY3VwYW50cyBkaWQgbm90IGhvbGQgaXQgYnkgcmlnaHQsIGJ1dCB0aGF0IGl0IHdhcyBjb21tb24gcHJvcGVydHkgYW5kIHRoZXkgaGFkIHNlaXplZCBpdCBpbiBvcmRlciB0byBnYWluIGEgc2VsZmlzaCBhZHZhbnRhZ2UuCjxtaWxlc3RvbmUgbj0iMTYiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgYXR0YWNraW5nIHBhcnR5IHdhcyBmb2xsb3dlZCBieSBzb21lIG9mIHRoZSBHcmVla3MsIG5vdCB1bmRlciBvcmRlcnMgZnJvbSB0aGVpciBnZW5lcmFscywgYnV0IHNlZWtpbmcgcGx1bmRlci4gQXMgdGhleSBhcHByb2FjaGVkLCB0aGUgZW5lbXkgZm9yIGEgdGltZSBrZXB0IHF1aWV0OyBidXQgd2hlbiB0aGV5IGhhZCBnb3QgbmVhciB0aGUgc3Ryb25naG9sZCwgdGhleSBzYWxsaWVkIGZvcnRoIGFuZCBwdXQgdGhlbSB0byBmbGlnaHQsIGtpbGxpbmcgYSBjb25zaWRlcmFibGUgbnVtYmVyIG9mIHRoZSBiYXJiYXJpYW5zIGFuZCBzb21lIG9mIHRoZSBHcmVla3Mgd2hvIGhhZCBnb25lIHVwIHRoZSBoaWxsIHdpdGggdGhlbSwgYW5kIHB1cnN1aW5nIHRoZSByZXN0IHVudGlsIHRoZXkgc2F3IHRoZSBHcmVla3MgY29taW5nIHRvIHRoZSByZXNjdWU7CjxtaWxlc3RvbmUgbj0iMTciIHVuaXQ9InNlY3Rpb24iIC8+dGhlbiB0aGV5IHR1cm5lZCBhbmQgZmVsbCBiYWNrLCBhbmQgYWZ0ZXIgY3V0dGluZyBvZmYgdGhlIGhlYWRzIG9mIHRoZSBkZWFkIG1lbiBkaXNwbGF5ZWQgdGhlbSB0byB0aGUgR3JlZWtzIGFuZCB0byB0aGVpciBvd24gZW5lbWllcywgYXQgdGhlIHNhbWUgdGltZSBkYW5jaW5nIHRvIGEga2luZCBvZiBzdHJhaW4gd2hpY2ggdGhleSBzYW5nLgo8bWlsZXN0b25lIG49IjE4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGUgR3JlZWtzIHdlcmUgZXhjZWVkaW5nbHkgYW5ncnksIG5vdCBvbmx5IGJlY2F1c2UgdGhlIGVuZW15IGhhZCBiZWVuIG1hZGUgYm9sZGVyLCBidXQgYmVjYXVzZSB0aGUgR3JlZWtzIHdobyB3ZW50IHRvIHRoZSBhdHRhY2sgd2l0aCB0aGUgYmFyYmFyaWFucyBoYWQgdGFrZW4gdG8gZmxpZ2h0LCB0aG91Z2ggaW4gdmVyeSBjb25zaWRlcmFibGUgbnVtYmVyc+KAlGEgdGhpbmcgd2hpY2ggdGhleSBoYWQgbmV2ZXIgZG9uZSBiZWZvcmUgaW4gdGhlIGNvdXJzZSBvZiB0aGUgZXhwZWRpdGlvbi4KPG1pbGVzdG9uZSBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZW4gWGVub3Bob24gY2FsbGVkIHRoZSBHcmVla3MgdG9nZXRoZXIgYW5kIHNhaWQ6IOKAnEZlbGxvdy1zb2xkaWVycywgZG8gbm90IGJ5IGFueSBtZWFucyBsb3NlIGhlYXJ0IG9uIGFjY291bnQgb2Ygd2hhdCBoYXMgaGFwcGVuZWQ7IGZvciBiZSBzdXJlIHRoYXQgYSBnb29kIHRoaW5nIGFsc28gaGFzIGhhcHBlbmVkLCBubyBsZXNzIGltcG9ydGFudCB0aGFuIHRoZSBldmlsIHRoaW5nLgo8bWlsZXN0b25lIG49IjIwIiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSBmaXJzdCBwbGFjZSwgeW91IGtub3cgdGhhdCB0aG9zZSB3aG8gYXJlIHRvIGd1aWRlIHVzIGFyZSByZWFsbHkgZW5lbWllcyB0byB0aGUgcGVvcGxlIHdob3NlIGVuZW1pZXMgd2UgYWxzbyBhcmUgY29tcGVsbGVkIHRvIGJlOyBzZWNvbmRseSwgYW5kIHRvdWNoaW5nIG91ciBvd24gbWVuLCB0aG9zZSBhbW9uZyB0aGVtIHdobyB0b29rIGxpdHRsZSB0aG91Z2h0IG9mIHRoZSBiYXR0bGUgZm9ybWF0aW9uIHdlIHVzZSBhbmQgZ290IHRoZSBpZGVhIHRoYXQgdGhleSBjb3VsZCBhY2NvbXBsaXNoIHRoZSBzYW1lIHJlc3VsdHMgaW4gY29tcGFueSB3aXRoIHRoZSBiYXJiYXJpYW5zIGFzIHRoZXkgY291bGQgd2l0aCB1cywgaGF2ZSBwYWlkIHRoZSBwZW5hbHR5LOKAlGFub3RoZXIgdGltZSB0aGV5IHdpbGwgYmUgbGVzcyBsaWtlbHkgdG8gbGVhdmUgb3VyIG9yZGVyZWQgbGluZXMuCjxtaWxlc3RvbmUgbj0iMjEiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IHlvdSBtdXN0IG1ha2UgcmVhZHkgdG8gcHJvdmUgdG8gb3VyIGZyaWVuZHMgYW1vbmcgdGhlIGJhcmJhcmlhbnMgdGhhdCB5b3UgYXJlIGJldHRlciBtZW4gdGhhbiB0aGV5LCBhbmQgdG8gc2hvdyB0aGUgZW5lbXkgdGhhdCB0aGV5IGFyZSBub3QgZ29pbmcgdG8gZmlnaHQgYWdhaW5zdCB0aGUgc2FtZSBzb3J0IG9mIG1lbiBub3cgYXMgdGhlIGRpc29yZGVybHkgbWFzcyB0aGV5IG1ldCBiZWZvcmUu4oCdCjxtaWxlc3RvbmUgbj0iMjIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3YXMgdGh1cyB0aGF0IHRoZSBHcmVla3Mgc3BlbnQgdGhhdCBkYXk7IGJ1dCBvbiB0aGUgbmV4dCwgYWZ0ZXIgb2J0YWluaW5nIGZhdm91cmFibGUgb21lbnMgZnJvbSB0aGVpciBzYWNyaWZpY2VzLCB0aGV5IHRvb2sgYnJlYWtmYXN0LCBmb3JtZWQgdGhlIGNvbXBhbmllcyBpbiBjb2x1bW4sIGFuZCBiZWdhbiB0aGUgbWFyY2gsIHdpdGggdGhlIGJhcmJhcmlhbnMgaW4gdGhlIHNhbWUgZm9ybWF0aW9uIHBvc3RlZCBvbiB0aGUgbGVmdCwgdGhlIGJvd21lbiBkaXN0cmlidXRlZCBpbiB0aGUgc3BhY2VzIGJldHdlZW4gdGhlIGNvbXBhbmllcywgYW5kIHRoZSB2YW4gb2YgdGhlIGhvcGxpdGVzIGEgbGl0dGxlIGZhcnRoZXIgYmFjay4KPG1pbGVzdG9uZSBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIGVuZW15IGhhZCBzb21lIG5pbWJsZSB0cm9vcHMgd2hvIGtlcHQgcnVubmluZyBkb3duIHRoZSBoaWxsIGFuZCBwZWx0aW5nIHRoZSBHcmVla3Mgd2l0aCBzdG9uZXMsIGFuZCB0aGVzZSBmZWxsb3dzIHdlcmUgaGVsZCBiYWNrIGJ5IHRoZSBib3dtZW4gYW5kIHBlbHRhc3RzLiBUaGUgcmVzdCBvZiB0aGUgR3JlZWsgYXJteSwgcHJvY2VlZGluZyBhdCBhIHdhbGssIGFkdmFuY2VkIGZpcnN0IGFnYWluc3QgdGhlIHN0cm9uZ2hvbGQgZnJvbSB3aGljaCB0aGUgYmFyYmFyaWFucyBhbmQgdGhvc2Ugd2l0aCB0aGVtIGhhZCBiZWVuIHB1dCB0byBmbGlnaHQgb24gdGhlIHByZWNlZGluZyBkYXk7IGZvciBpdCB3YXMgdGhlcmUgdGhhdCB0aGUgZW5lbXkgd2VyZSBub3cgZHJhd24gdXAgdG8gb3Bwb3NlIHRoZW0uCjxtaWxlc3RvbmUgbj0iMjQiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIGJhcmJhcmlhbnMgZGlkLCBpbmRlZWQsIG1lZXQgdGhlIGF0dGFjayBvZiB0aGUgcGVsdGFzdHMgYW5kIGVuZ2FnZWQgdGhlbSBpbiBiYXR0bGUsIGJ1dCB3aGVuIHRoZSBob3BsaXRlcyBnb3QgbmVhciB0aGVtLCB0aGV5IHR1cm5lZCB0byBmbGlnaHQuIFRoZSBwZWx0YXN0cyBhdCBvbmNlIG1hZGUgYWZ0ZXIgdGhlbSBhbmQgcHVyc3VlZCB0aGVtIHVwIHRoZSBoaWxsIHRvIHRoZSBjaXR5LCB3aGlsZSB0aGUgaG9wbGl0ZXMgZm9sbG93ZWQgYWxvbmcsIHN0aWxsIGtlZXBpbmcgdGhlaXIgbGluZXMuCjxtaWxlc3RvbmUgbj0iMjUiIHVuaXQ9InNlY3Rpb24iIC8+V2hlbiB0aGV5IHdlcmUgYXQgdGhlIHRvcCBhbmQgbmVhciB0aGUgaG91c2VzIG9mIE1ldHJvcG9saXMsIGF0IHRoYXQgbW9tZW50IGFsbCB0aGUgdHJvb3BzIG9mIHRoZSBlbmVteSBtYXNzZWQgdG9nZXRoZXIgYW5kIGRpZCBiYXR0bGU7IHRoZXkgaHVybGVkIHRoZWlyIGxhbmNlcywgYW5kIHdpdGggb3RoZXIgc3BlYXJzIHdoaWNoIHRoZXkgaGFkLCBzbyB0aGljayBhbmQgbG9uZyB0aGF0IGEgbWFuIGNvdWxkIG9ubHkgY2FycnkgdGhlbSB3aXRoIGRpZmZpY3VsdHksIHRyaWVkIHRvIGRlZmVuZCB0aGVtc2VsdmVzIGluIGhhbmQgdG8gaGFuZCBmaWdodGluZy4KPG1pbGVzdG9uZSBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BcyB0aGUgR3JlZWtzLCBob3dldmVyLCByZWZ1c2VkIHRvIGdpdmUgd2F5LCBidXQga2VwdCBwdXNoaW5nIG9uIHRvIGNsb3NlIHF1YXJ0ZXJzLCB0aGUgYmFyYmFyaWFucyB0b29rIHRvIGZsaWdodCBmcm9tIHRoYXQgcG9pbnQgYWxzbywgZXZlcnkgbWFuIG9mIHRoZW0gYWJhbmRvbmluZyB0aGUgZm9ydHJlc3MuIFRoZWlyIGtpbmcgaW4gaGlzIHdvb2RlbiB0b3dlciBidWlsdCB1cG9uIHRoZSBjaXRhZGVsLCB3aG9tIGFsbCB0aGUgcGVvcGxlIGpvaW50bHkgbWFpbnRhaW4gYW5kIGd1YXJkIGluIGhpcyBhYmlkaW5nIHBsYWNlIHRoZXJlLCByZWZ1c2VkIHRvIGNvbWUgZm9ydGgsIGFzIGRpZCBhbHNvIHRoZSBjb21tYW5kZXIgb2YgdGhlIHN0cm9uZ2hvbGQ8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuIGUuLCB0aGUgb25lIG1lbnRpb25lZCBhYm92ZSwgMTQsIDIzLjwvbm90ZT4gd2hpY2ggaGFkIGJlZW4gY2FwdHVyZWQgZWFybGllciwgc28gdGhleSB3ZXJlIGJ1cm5lZCB1cCB3aGVyZSB0aGV5IHdlcmUsIGFsb25nIHdpdGggdGhlaXIgdG93ZXJzLgo8bWlsZXN0b25lIG49IjI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gcGx1bmRlcmluZyB0aGUgc3Ryb25naG9sZHMgdGhlIEdyZWVrcyBmb3VuZCBpbiB0aGUgaG91c2VzIGFuY2VzdHJhbCBzdG9yZXMsIGFzIHRoZSBNb3NzeW5vZWNpYW5zIGRlc2NyaWJlZCB0aGVtLCBvZiBoZWFwZWQgdXAgbG9hdmVzLCB3aGlsZSB0aGUgbmV3IGNvcm4gd2FzIGxhaWQgYXdheSB3aXRoIHRoZSBzdHJhdywgdGhlIG1vc3Qgb2YgaXQgYmVpbmcgc3BlbHQuCjxtaWxlc3RvbmUgbj0iMjgiIHVuaXQ9InNlY3Rpb24iIC8+VGhleSBhbHNvIGZvdW5kIHNsaWNlcyBvZiBkb2xwaGluIHNhbHRlZCBhd2F5IGluIGphcnMsIGFuZCBpbiBvdGhlciB2ZXNzZWxzIGRvbHBoaW4gYmx1YmJlciwgd2hpY2ggdGhlIE1vc3N5bm9lY2lhbnMgdXNlZCBpbiB0aGUgc2FtZSB3YXkgYXMgdGhlIEdyZWVrcyB1c2Ugb2xpdmUgb2lsOwo8bWlsZXN0b25lIG49IjI5IiB1bml0PSJzZWN0aW9uIiAvPmFuZCBvbiB0aGUgdXBwZXIgZmxvb3JzIG9mIHRoZSBob3VzZXMgdGhlcmUgd2VyZSBsYXJnZSBxdWFudGl0aWVzIG9mIGZsYXQgbnV0cywgd2l0aG91dCBhbnkgZGl2aXNpb25zLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS4gZS4sIHN1Y2ggYXMgd2FsbnV0cyBoYXZlLiBYZW5vcGhvbiBwcm9iYWJseSBtZWFucyBjaGVzdG51dHMuPC9ub3RlPiBPdXQgb2YgdGhlc2UgbnV0cywgYnkgYm9pbGluZyB0aGVtIGFuZCBiYWtpbmcgdGhlbSBpbnRvIGxvYXZlcywgdGhleSBtYWRlIHRoZSBicmVhZCB3aGljaCB0aGV5IHVzZWQgbW9zdC4gVGhlIEdyZWVrcyBhbHNvIGZvdW5kIHdpbmUsIHdoaWNoIGJ5IHJlYXNvbiBvZiBpdHMgaGFyc2huZXNzIGFwcGVhcmVkIHRvIGJlIHNoYXJwIHdoZW4gdGFrZW4gdW5taXhlZCwgYnV0IG1peGVkIHdpdGggd2F0ZXIgd2FzIGZyYWdyYW50IGFuZCBkZWxpY2lvdXMuCjxtaWxlc3RvbmUgbj0iMzAiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZXkgaGFkIGJyZWFrZmFzdGVkIHRoZXJlLCB0aGUgR3JlZWtzIHRvb2sgdXAgdGhlaXIgb253YXJkIG1hcmNoLCBhZnRlciBoYW5kaW5nIG92ZXIgdGhlIGZvcnRyZXNzIHRvIHRoZSBNb3NzeW5vZWNpYW5zIHdobyBoYWQgaGVscGVkIHRoZW0gaW4gdGhlIGZpZ2h0aW5nLiBBcyBmb3IgdGhlIG90aGVyIHN0cm9uZ2hvbGRzIHdoaWNoIHRoZXkgcGFzc2VkIGJ5LCBiZWxvbmdpbmcgdG8gdGhvc2Ugd2hvIHNpZGVkIHdpdGggdGhlIGVuZW15LCB0aGUgbW9zdCBhY2Nlc3NpYmxlIHdlcmUgaW4gc29tZSBjYXNlcyBhYmFuZG9uZWQgYnkgdGhlaXIgb2NjdXBhbnRzLCBpbiBvdGhlciBjYXNlcyBzdXJyZW5kZXJlZCB2b2x1bnRhcmlseS4KPG1pbGVzdG9uZSBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZ3JlYXRlciBwYXJ0IG9mIHRoZXNlIHBsYWNlcyB3ZXJlIG9mIHRoZSBmb2xsb3dpbmcgZGVzY3JpcHRpb246IFRoZSB0b3ducyB3ZXJlIGVpZ2h0eSBzdGFkaWEgZGlzdGFudCBmcm9tIG9uZSBhbm90aGVyLCBzb21lIG1vcmUsIGFuZCBzb21lIGxlc3M7IGJ1dCB0aGUgaW5oYWJpdGFudHMgY291bGQgaGVhciBvbmUgYW5vdGhlciBzaG91dGluZyBmcm9tIG9uZSB0b3duIHRvIHRoZSBuZXh0LCBzdWNoIGhlaWdodHMgYW5kIHZhbGxleXMgdGhlcmUgd2VyZSBpbiB0aGUgY291bnRyeS4KPG1pbGVzdG9uZSBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGUgR3JlZWtzLCBhcyB0aGV5IHByb2NlZWRlZCwgd2VyZSBhbW9uZyB0aGUgZnJpZW5kbHkgTW9zc3lub2VjaWFucywgdGhleSB3b3VsZCBleGhpYml0IHRvIHRoZW0gZmF0dGVuZWQgY2hpbGRyZW4gb2YgdGhlIHdlYWx0aHkgaW5oYWJpdGFudHMsIHdobyBoYWQgYmVlbiBub3VyaXNoZWQgb24gYm9pbGVkIG51dHMgYW5kIHdlcmUgc29mdCBhbmQgd2hpdGUgdG8gYW4gZXh0cmFvcmRpbmFyeSBkZWdyZWUsIGFuZCBwcmV0dHkgbmVhcmx5IGVxdWFsIGluIGxlbmd0aCBhbmQgYnJlYWR0aCwgd2l0aCB0aGVpciBiYWNrcyBhZG9ybmVkIHdpdGggbWFueSBjb2xvdXJzIGFuZCB0aGVpciBmb3JlIHBhcnRzIGFsbCB0YXR0b29lZCB3aXRoIGZsb3dlciBwYXR0ZXJucy4KPG1pbGVzdG9uZSBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVzZSBNb3NzeW5vZWNpYW5zIHdhbnRlZCBhbHNvIHRvIGhhdmUgaW50ZXJjb3Vyc2Ugb3Blbmx5IHdpdGggdGhlIHdvbWVuIHdobyBhY2NvbXBhbmllZCB0aGUgR3JlZWtzLCBmb3IgdGhhdCB3YXMgdGhlaXIgb3duIGZhc2hpb24uIEFuZCBhbGwgb2YgdGhlbSB3ZXJlIHdoaXRlLCB0aGUgbWVuIGFuZCB0aGUgd29tZW4gYWxpa2UuCjxtaWxlc3RvbmUgbj0iMzQiIHVuaXQ9InNlY3Rpb24iIC8+VGhleSB3ZXJlIHNldCBkb3duIGJ5IHRoZSBHcmVla3Mgd2hvIHNlcnZlZCB0aHJvdWdoIHRoZSBleHBlZGl0aW9uLCBhcyB0aGUgbW9zdCB1bmNpdmlsaXplZCBwZW9wbGUgd2hvc2UgY291bnRyeSB0aGV5IHRyYXZlcnNlZCwgdGhlIGZ1cnRoZXN0IHJlbW92ZWQgZnJvbSBHcmVlayBjdXN0b21zLiBGb3IgdGhleSBoYWJpdHVhbGx5IGRpZCBpbiBwdWJsaWMgdGhlIHRoaW5ncyB0aGF0IG90aGVyIHBlb3BsZSB3b3VsZCBkbyBvbmx5IGluIHByaXZhdGUsIGFuZCB3aGVuIHRoZXkgd2VyZSBhbG9uZSB0aGV5IHdvdWxkIGJlaGF2ZSBqdXN0IGFzIGlmIHRoZXkgd2VyZSBpbiB0aGUgY29tcGFueSBvZiBvdGhlcnMsIHRhbGtpbmcgdG8gdGhlbXNlbHZlcywgbGF1Z2hpbmcgYXQgdGhlbXNlbHZlcywgYW5kIGRhbmNpbmcgaW4gd2hhdGV2ZXIgc3BvdCB0aGV5IGNoYW5jZWQgdG8gYmUsIGFzIHRob3VnaCB0aGV5IHdlcmUgZ2l2aW5nIGFuIGV4aGliaXRpb24gdG8gb3RoZXJzLgo8bWlsZXN0b25lIG49IjUiIHVuaXQ9ImNoYXB0ZXIiIC8+PG1pbGVzdG9uZSBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhyb3VnaCB0aGlzIGNvdW50cnksIGJvdGggdGhlIGhvc3RpbGUgYW5kIHRoZSBmcmllbmRseSBwb3J0aW9ucyBvZiBpdCwgdGhlIEdyZWVrcyBtYXJjaGVkIGVpZ2h0IHN0YWdlcywgcmVhY2hpbmcgdGhlbiB0aGUgbGFuZCBvZiB0aGUgQ2hhbHliaWFucy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFwcGFyZW50bHkgYW4gb3V0bHlpbmcgdHJpYmUgb2YgdGhlIHBlb3BsZSB3aG9zZSB0ZXJyaXRvcnkgdGhlIEdyZWVrcyBoYWQgcHJldmlvdXNseSBwYXNzZWQgdGhyb3VnaC4gY3AuIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuNy4xNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjcuMTU8L2JpYmw+IGZmLjwvbm90ZT4gVGhlc2UgcGVvcGxlIHdlcmUgZmV3IGluIG51bWJlciBhbmQgc3ViamVjdCB0byB0aGUgTW9zc3lub2VjaWFucywgYW5kIG1vc3Qgb2YgdGhlbSBnYWluZWQgdGhlaXIgbGl2ZWxpaG9vZCBmcm9tIHdvcmtpbmcgaW4gaXJvbi4KPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk5leHQgdGhleSByZWFjaGVkIHRoZSBjb3VudHJ5IG9mIHRoZSBUaWJhcmVuaWFucywgd2hpY2ggd2FzIG11Y2ggbW9yZSBsZXZlbCBhbmQgaGFkIGZvcnRyZXNzZXMgdXBvbiB0aGUgc2VhY29hc3QgdGhhdCB3ZXJlIGxlc3Mgc3Ryb25nLiBUaGUgZ2VuZXJhbHMgd2VyZSBkZXNpcm91cyBvZiBhdHRhY2tpbmcgdGhlc2UgZm9ydHJlc3Nlcywgc28gYXMgdG8gZ2V0IGEgbGl0dGxlIHNvbWV0aGluZyBmb3IgdGhlIGFybXksIGFuZCBhY2NvcmRpbmdseSB0aGV5IHdvdWxkIG5vdCBhY2NlcHQgdGhlIGdpZnRzIG9mIGhvc3BpdGFsaXR5IHdoaWNoIGNhbWUgZnJvbSB0aGUgVGliYXJlbmlhbnMsIGJ1dCwgZGlyZWN0aW5nIHRoZW0gdG8gd2FpdCB1bnRpbCB0aGV5IHNob3VsZCB0YWtlIGNvdW5zZWwsIHByb2NlZWRlZCB0byBvZmZlciBzYWNyaWZpY2VzLgo8bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+QWZ0ZXIgbWFueSB2aWN0aW1zIGhhZCBiZWVuIHNhY3JpZmljZWQgYWxsIHRoZSBzZWVycyBmaW5hbGx5IGRlY2xhcmVkIHRoZSBvcGluaW9uIHRoYXQgdGhlIGdvZHMgaW4gbm8gd2lzZSBwZXJtaXR0ZWQgd2FyLiBTbyB0aGVuIHRoZSBnZW5lcmFscyBhY2NlcHRlZCB0aGUgZ2lmdHMgb2YgaG9zcGl0YWxpdHksIGFuZCBwcm9jZWVkaW5nIGFzIHRocm91Z2ggYSBmcmllbmRseSBjb3VudHJ5IGZvciB0d28gZGF5cywgdGhleSBhcnJpdmVkIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNDc5IiBrZXk9InRnbiw3MDAyNDc5Ij5Db3R5b3JhPC9wbGFjZU5hbWU+LCBhIEdyZWVrIGNpdHkgYW5kIGEgY29sb255IG9mIHRoZSBTaW5vcGVhbnMsIHNpdHVhdGVkIGluIHRoZSB0ZXJyaXRvcnkgb2YgdGhlIFRpYmFyZW5pYW5zLgo8bWlsZXN0b25lIG49IjQiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlY3Rpb24gNCBpbiB0aGUgbWFudXNjcmlwdCBpcyBhcyBmb2xsb3dzLiBUaGlzIHBhc3NhZ2UgaXMgcmVnYXJkZWQgYnkgZWRkLiBnZW5lcmFsbHkgYXMgYW4gaW50ZXJwb2xhdGlvbi4gWzE4LDYwMCBzdGFkaWEgPSBjLiAyMDUwIEVuZ2xpc2ggbWlsZXMuXTwvbm90ZT5bQXMgZmFyIGFzIHRoaXMgcG9pbnQgdGhlIGFybXkgdHJhdmVsbGVkIGJ5IGxhbmQuIFRoZSBsZW5ndGggaW4gZGlzdGFuY2Ugb2YgdGhlIGRvd253YXJkIGpvdXJuZXksIGZyb20gdGhlIGJhdHRsZWZpZWxkIG5lYXIgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2MjYiIGtleT0idGduLDcwMDI2MjYiPkJhYnlsb248L3BsYWNlTmFtZT4gdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI0NzkiIGtleT0idGduLDcwMDI0NzkiPkNvdHlvcmE8L3BsYWNlTmFtZT4sIHdhcyBvbmUgaHVuZHJlZCBhbmQgdHdlbnR5LXR3byBzdGFnZXMsIHNpeCBodW5kcmVkIGFuZCB0d2VudHkgcGFyYXNhbmdzLCBvciBlaWdodGVlbiB0aG91c2FuZCwgc2l4IGh1bmRyZWQgc3RhZGlhOyBhbmQgaW4gdGltZSwgZWlnaHQgbW9udGhzLl0KPG1pbGVzdG9uZSBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIHRoZXkgcmVtYWluZWQgZm9ydHktZml2ZSBkYXlzLiBEdXJpbmcgdGhpcyB0aW1lIHRoZXkgZmlyc3Qgb2YgYWxsIHNhY3JpZmljZWQgdG8gdGhlIGdvZHMsIGFuZCBhbGwgdGhlIHNldmVyYWwgZ3JvdXBzIG9mIHRoZSBHcmVla3MsIG5hdGlvbiBieSBuYXRpb24sIGluc3RpdHV0ZWQgZmVzdGFsIHByb2Nlc3Npb25zIGFuZCBhdGhsZXRpYyBjb250ZXN0cy4KPG1pbGVzdG9uZSBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciBwcm92aXNpb25zLCB0aGV5IGdvdCB0aGVtIHBhcnRseSBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NzYwIiBrZXk9InRnbiw3MDE2NzYwIj5QYXBobGFnb25pYTwvcGxhY2VOYW1lPiBhbmQgcGFydGx5IGZyb20gdGhlIGVzdGF0ZXMgb2YgdGhlIENvdHlvcml0ZXM7IGZvciB0aGUgbGF0dGVyIHdvdWxkIG5vdCBwcm92aWRlIHRoZW0gd2l0aCBhIG1hcmtldCwgbm9yIHdvdWxkIHRoZXkgcmVjZWl2ZSB0aGVpciBzaWNrIHdpdGhpbiB0aGUgd2FsbHMgb2YgdGhlIGNpdHkuCjxtaWxlc3RvbmUgbj0iNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPk1lYW53aGlsZSBhbWJhc3NhZG9ycyBjYW1lIGZyb20gU2lub3BlLCBmdWxsIG9mIGZlYXJzIG5vdCBvbmx5IGZvciB0aGUgY2l0eSBvZiB0aGUgQ290eW9yaXRlcyAoZm9yIGl0IGJlbG9uZ2VkIHRvIHRoZW0gYW5kIGl0cyBpbmhhYml0YW50cyBwYWlkIHRoZW0gdHJpYnV0ZSksIGJ1dCBhbHNvIGZvciBpdHMgdGVycml0b3J5LCBiZWNhdXNlIHRoZXkgaGVhcmQgaXQgd2FzIGJlaW5nIGxhaWQgd2FzdGUuIEFuZCBjb21pbmcgdG8gdGhlIEdyZWVrIGNhbXAgdGhleSBzcG9rZSBhcyBmb2xsb3dzLCBIZWNhdG9ueW11cywgd2hvIHdhcyByZWdhcmRlZCBhcyBhIGNsZXZlciBvcmF0b3IsIGJlaW5nIHRoZWlyIHNwb2tlc21hbjoKPG1pbGVzdG9uZSBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPuKAnFNvbGRpZXJzLOKAnSBoZSBzYWlkLCDigJx0aGUgY2l0eSBvZiB0aGUgU2lub3BlYW5zIGhhcyBzZW50IHVzLCBmaXJzdCwgdG8gYXBwbGF1ZCB5b3UgYXMgR3JlZWtzIHdobyBzdGFuZCB2aWN0b3JzIG92ZXIgYmFyYmFyaWFucywgYW5kLCBzZWNvbmRseSwgdG8gY29uZ3JhdHVsYXRlIHlvdSB0aGF0IHlvdSBoYXZlIG1hZGUgeW91ciB3YXkgdGhyb3VnaCBtYW55IGRyZWFkZnVsIHRyb3VibGVzLCBhcyB3ZSBoYXZlIGhlYXJkLCBpbiBzYWZldHkgdG8gdGhpcyBwbGFjZS4KPG1pbGVzdG9uZSBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3ZSBjbGFpbSwgYmVpbmcgb3Vyc2VsdmVzIEdyZWVrcywgdG8gcmVjZWl2ZSBmcm9tIHlvdSwgd2hvIGFyZSBHcmVla3MgYWxzbywgZ29vZCB0cmVhdG1lbnQgYW5kIG5vIGlsbDsgZm9yIHdlLCBvbiBvdXIgc2lkZSwgaGF2ZSBuZXZlciBzZXQgdGhlIGV4YW1wbGUgYnkgZG9pbmcgeW91IGFueSBtYW5uZXIgb2YgaGFybS4KPG1pbGVzdG9uZSBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVzZSBDb3R5b3JpdGVzIGFyZSBvdXIgY29sb25pc3RzLCBhbmQgaXQgd2FzIHdlIHdobyBnYXZlIG92ZXIgdG8gdGhlbSB0aGlzIGxhbmQsIGFmdGVyIHdlIGhhZCB0YWtlbiBpdCBhd2F5IGZyb20gYmFyYmFyaWFuczsgdGhlcmVmb3JlIHRoZXkgcGF5IHVzIGEgc3RhdGVkIHRyaWJ1dGUsIGFzIGRvIHRoZSBwZW9wbGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwODYzNTciIGtleT0idGduLDEwODYzNTciPkNlcmFzdXM8L3BsYWNlTmFtZT4gYW5kIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJhcGV6dXMsQXJjYWRpYSIga2V5PSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiPlRyYXBlenVzPC9wbGFjZU5hbWU+OyBoZW5jZSB3aGF0ZXZlciBoYXJtIHlvdSBtYXkgZG8gdG8gdGhlc2UgQ290eW9yaXRlcywgdGhlIGNpdHkgb2YgdGhlIFNpbm9wZWFucyByZWdhcmRzIGFzIGRvbmUgdG8gaXRzZWxmLgo8bWlsZXN0b25lIG49IjExIiB1bml0PSJzZWN0aW9uIiAvPkF0IHByZXNlbnQgd2UgaGVhciwgZmlyc3RseSwgdGhhdCB5b3UgaGF2ZSBtYWRlIHlvdXIgd2F5IGludG8gdGhlIGNpdHkgYnkgZm9yY2UsIHNvbWUgb2YgeW91LCBhbmQgYXJlIHF1YXJ0ZXJlZCBpbiB0aGUgaG91c2VzLCBhbmQsIHNlY29uZGx5LCB0aGF0IHlvdSBhcmUgdGFraW5nIGZyb20gdGhlIGVzdGF0ZXMgYnkgZm9yY2Ugd2hhdGV2ZXIgeW91IG1heSBuZWVkIHdpdGhvdXQgYXNraW5nIGxlYXZlLgo8bWlsZXN0b25lIG49IjEyIiB1bml0PSJzZWN0aW9uIiAvPk5vdyB0aGVzZSB0aGluZ3Mgd2UgZG8gbm90IGRlZW0gcHJvcGVyOyBhbmQgaWYgeW91IGNvbnRpbnVlIHRvIGRvIHRoZW0sIHlvdSBmb3JjZSB1cyB0byBtYWtlIGZyaWVuZHMgd2l0aCBDb3J5bGFzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5SdWxlciBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjc2MCIga2V5PSJ0Z24sNzAxNjc2MCI+UGFwaGxhZ29uaWE8L3BsYWNlTmFtZT4uPC9ub3RlPiBhbmQgdGhlIFBhcGhsYWdvbmlhbnMgYW5kIHdob21ldmVyIGVsc2Ugd2UgY2FuLuKAnQo8bWlsZXN0b25lIG49IjEzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gcmVwbHkgdG8gdGhlc2Ugd29yZHMgWGVub3Bob24sIG9uIGJlaGFsZiBvZiB0aGUgc29sZGllcnMsIHJvc2UgYW5kIHNhaWQ6IOKAnEZvciBvdXJzZWx2ZXMsIG1lbiBvZiBTaW5vcGUsIHdlIGhhdmUgY29tZSBiYWNrIHdlbGwgY29udGVudCB0byBoYXZlIHNhdmVkIG91ciBib2RpZXMgYW5kIG91ciBhcm1zOyBmb3IgaXQgd2FzIG5vdCBwb3NzaWJsZSBhdCBvbmUgYW5kIHRoZSBzYW1lIHRpbWUgdG8gZ2F0aGVyIHBsdW5kZXIgYW5kIHRvIGZpZ2h0IHdpdGggdGhlIGVuZW15Lgo8bWlsZXN0b25lIG49IjE0IiB1bml0PSJzZWN0aW9uIiAvPkFzIHRvIG91ciBkb2luZ3Mgbm93LCBzaW5jZSB3ZSBoYXZlIHJlYWNoZWQgR3JlZWsgY2l0aWVzLCB3ZSBnb3Qgb3VyIHByb3Zpc2lvbnMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUcmFwZXp1cyxBcmNhZGlhIiBrZXk9InBlcnNldXMsVHJhcGV6dXMsQXJjYWRpYSI+VHJhcGV6dXM8L3BsYWNlTmFtZT4gYnkgcHVyY2hhc2UsIGZvciB0aGUgVHJhcGV6dW50aWFucyBwcm92aWRlZCB1cyBhIG1hcmtldCwgYW5kIGluIHJldHVybiBmb3IgdGhlIGhvbm91cnMgdGhleSBiZXN0b3dlZCB1cG9uIHVzIGFuZCB0aGUgZ2lmdHMgb2YgaG9zcGl0YWxpdHkgdGhleSBnYXZlIHRoZSBhcm15LCB3ZSBwYWlkIHRoZW0gbGlrZSBob25vdXJzOyBpZiBhbnkgb2YgdGhlIGJhcmJhcmlhbnMgd2VyZSB0aGVpciBmcmllbmRzLCB3ZSBrZXB0IG91ciBoYW5kcyBvZmYgdGhlbSwgd2hpbGUgdXBvbiB0aGVpciBlbmVtaWVzLCBhZ2FpbnN0IHdob20gdGhleSB3b3VsZCB0aGVtc2VsdmVzIGxlYWQgdXMsIHdlIHdyb3VnaHQgYWxsIHRoZSBoYXJtIHdlIGNvdWxkLgo8bWlsZXN0b25lIG49IjE1IiB1bml0PSJzZWN0aW9uIiAvPkFzayB0aGVtIHdoYXQgc29ydCBvZiBwZW9wbGUgdGhleSBmb3VuZCB1cyB0byBiZTsgZm9yIHRoZSBtZW4gYXJlIGhlcmUgcHJlc2VudCB3aG9tIHRoZSBjaXR5IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJhcGV6dXMsQXJjYWRpYSIga2V5PSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiPlRyYXBlenVzPC9wbGFjZU5hbWU+LCBvdXQgb2YgZnJpZW5kc2hpcCwgc2VudCB3aXRoIHVzIGFzIGd1aWRlcy4KPG1pbGVzdG9uZSBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgb3RoZXIgaGFuZCwgd2hlcmV2ZXIgd2UgY29tZSwgd2hldGhlciBpdCBiZSB0byBhIGJhcmJhcmlhbiBvciB0byBhIEdyZWVrIGxhbmQsIGFuZCBoYXZlIG5vIG1hcmtldCBhdCB3aGljaCB0byBidXksIHdlIHRha2UgcHJvdmlzaW9ucywgbm90IG91dCBvZiB3YW50b25uZXNzLCBidXQgZnJvbSBuZWNlc3NpdHkuCjxtaWxlc3RvbmUgbj0iMTciIHVuaXQ9InNlY3Rpb24iIC8+VGhlIENhcmR1Y2hpYW5zLCBmb3IgZXhhbXBsZSwgYW5kIHRoZSBUYW9jaGlhbnMgYW5kIENoYWxkYWVhbnMgd2VyZSBub3Qgc3ViamVjdHMgb2YgdGhlIEtpbmcgYW5kIHdlcmUgZXhjZWVkaW5nbHkgZm9ybWlkYWJsZSwgeWV0LCBldmVuIHNvLCB3ZSBtYWRlIGVuZW1pZXMgb2YgdGhlbSBiZWNhdXNlIG9mIHRoaXMgbmVjZXNzaXR5IG9mIHRha2luZyBwcm92aXNpb25zLCBpbmFzbXVjaCBhcyB0aGV5IHdvdWxkIG5vdCBwcm92aWRlIGEgbWFya2V0Lgo8bWlsZXN0b25lIG49IjE4IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBNYWNyb25pYW5zLCBob3dldmVyLCBwcm92aWRlZCB1cyBhcyBnb29kIGEgbWFya2V0IGFzIHRoZXkgY291bGQsIGFuZCB3ZSB0aGVyZWZvcmUgcmVnYXJkZWQgdGhlbSBhcyBmcmllbmRzLCBiYXJiYXJpYW5zIHRob3VnaCB0aGV5IHdlcmUsIGFuZCB0b29rIGJ5IGZvcmNlIG5vdCBhIHRoaW5nIHRoYXQgYmVsb25nZWQgdG8gdGhlbS4KPG1pbGVzdG9uZSBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFzIGZvciB0aGUgQ290eW9yaXRlcywgd2hvbSB5b3UgY2xhaW0gYXMgeW91cnMsIGlmIHdlIGhhdmUgdGFrZW4gYW55dGhpbmcgdGhhdCBiZWxvbmdlZCB0byB0aGVtLCB0aGV5IGFyZSB0aGVtc2VsdmVzIHRvIGJsYW1lOyBmb3IgdGhleSBkaWQgbm90IGJlaGF2ZSB0b3dhcmQgdXMgYXMgZnJpZW5kcywgYnV0IHNodXQgdGhlaXIgZ2F0ZXMgYW5kIHdvdWxkIG5laXRoZXIgYWRtaXQgdXMgd2l0aGluIG5vciBzZW5kIGEgbWFya2V0IHdpdGhvdXQ7IGFuZCB0aGV5IGFsbGVnZWQgdGhhdCB0aGUgZ292ZXJub3Igc2V0IG92ZXIgdGhlbSBieSB5b3Ugd2FzIHJlc3BvbnNpYmxlIGZvciB0aGlzIGNvbmR1Y3QuCjxtaWxlc3RvbmUgbj0iMjAiIHVuaXQ9InNlY3Rpb24iIC8+SW4gcmVnYXJkIHRvIHlvdXIgc3RhdGVtZW50IGFib3V0IHBlb3BsZSBtYWtpbmcgdGhlaXIgd2F5IGludG8gdGhlIGNpdHkgYnkgZm9yY2UgYW5kIGJlaW5nIHF1YXJ0ZXJlZCB0aGVyZSwgd2UgYXNrZWQgdGhlbSB0byByZWNlaXZlIG91ciBzaWNrIGludG8gdGhlaXIgaG91c2VzOyBidXQgd2hlbiB0aGV5IHJlZnVzZWQgdG8gb3BlbiB0aGVpciBnYXRlcywgd2Ugd2VudCBpbiBhdCBhIHBvaW50IHdoZXJlIHRoZSBwbGFjZSBvZiBpdHNlbGYgcmVjZWl2ZWQgdXM7IGFuZCB3ZSBoYXZlIGRvbmUgbm8gZGVlZCBvZiBmb3JjZSBzYXZlIG9ubHkgdGhhdCBvdXIgc2ljayBhcmUgcXVhcnRlcmVkIGluIHRoZSBob3VzZXMsIHBheWluZyB0aGVpciBvd24gZXhwZW5zZXMsIGFuZCB0aGF0IHdlIGFyZSBndWFyZGluZyB0aGUgZ2F0ZXMsIGluIG9yZGVyIHRoYXQgb3VyIHNpY2sgbWF5IG5vdCBiZSBpbiB0aGUgcG93ZXIgb2YgeW91ciBnb3Zlcm5vciwgYnV0IHRoYXQgaXQgbWF5IGJlIGluIG91ciBwb3dlciB0byBnZXQgdGhlbSBiYWNrIHdoZW4gd2Ugc28gd2lzaC4KPG1pbGVzdG9uZSBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcmVzdCBvZiB1cywgYXMgeW91IHNlZSwgYXJlIHF1YXJ0ZXJlZCBpbiB0aGUgb3BlbiBpbiBvdXIgcmVndWxhciBmb3JtYXRpb24sIGFsbCByZWFkeSwgaW4gY2FzZSBvbmUgZG9lcyB1cyBhIGtpbmRuZXNzLCB0byByZXR1cm4gdGhlIGxpa2UsIG9yIGlmIGl0IGlzIGFuIGluanVyeSwgdG8gcmV0dXJuIHRoYXQuCjxtaWxlc3RvbmUgbj0iMjIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBcyB0byB0aGUgdGhyZWF0IHlvdSB1dHRlcmVkLCB0aGF0IGlmIHlvdSB0aG91Z2h0IGJlc3QgeW91IHdvdWxkIGVubGlzdCBDb3J5bGFzIGFuZCB0aGUgUGFwaGxhZ29uaWFucyBhcyBhbGxpZXMgYWdhaW5zdCB1cywgd2Ugb24gb3VyIHNpZGUgYXJlIHF1aXRlIHJlYWR5IHRvIG1ha2Ugd2FyIHdpdGggeW91IGJvdGggaWYgaXQgYmUgbmVjZXNzYXJ5OyBmb3Igd2UgaGF2ZSBtYWRlIHdhciBlcmUgbm93IHdpdGggb3RoZXJzIHdobyB3ZXJlIG1hbnkgdGltZXMgeW91ciBudW1iZXJzLiBCdXQgaWYgd2UgdGhpbmsgYmVzdCB0byBtYWtlIGEgZnJpZW5kIG9mIHRoZSBQYXBobGFnb25pYW7igJQKPG1pbGVzdG9uZSBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgd2UgaGVhciB0aGF0IGhlIGhhcyBhIGRlc2lyZSBmb3IgeW91ciBjaXR5IGFuZCBzdHJvbmdob2xkcyBvbiB0aGUgY29hc3TigJR3ZSBzaGFsbCB0cnkgdG8gcHJvdmUgb3Vyc2VsdmVzIGhpcyBmcmllbmRzIGJ5IGFpZGluZyBoaW0gdG8gYWNjb21wbGlzaCBoaXMgZGVzaXJlcy7igJ0KPG1pbGVzdG9uZSBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhlcmV1cG9uIEhlY2F0b255bXVzJyBmZWxsb3ctYW1iYXNzYWRvcnMgbWFkZSBpdCB2ZXJ5IGNsZWFyIHRoYXQgdGhleSB3ZXJlIGFuZ3J5IHdpdGggaGltIGZvciB0aGUgd29yZHMgaGUgaGFkIHNwb2tlbiwgYW5kIG9uZSBvZiB0aGVtIHRvb2sgdGhlIGZsb29yIGFuZCBzYWlkIHRoYXQgdGhleSBoYWQgbm90IGNvbWUgdG8gbWFrZSB3YXIsIGJ1dCB0byBzaG93IHRoYXQgdGhleSB3ZXJlIGZyaWVuZHMuIOKAnEFuZCBpZiB5b3UgY29tZSzigJ0gaGUgY29udGludWVkLCDigJx0byB0aGUgY2l0eSBvZiB0aGUgU2lub3BlYW5zLCB3ZSBzaGFsbCByZWNlaXZlIHlvdSB0aGVyZSB3aXRoIGdpZnRzIG9mIGhvc3BpdGFsaXR5LCBhbmQgbm93IHdlIHNoYWxsIGRpcmVjdCB0aGUgcGVvcGxlIG9mIHRoaXMgY2l0eSB0byBnaXZlIHlvdSB3aGF0IHRoZXkgY2FuOyBmb3Igd2Ugc2VlIHRoYXQgYWxsIHlvdSBzYXkgaXMgdHJ1ZS7igJ0KPG1pbGVzdG9uZSBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIHRoZSBDb3R5b3JpdGVzIHNlbnQgZ2lmdHMgb2YgaG9zcGl0YWxpdHksIGFuZCB0aGUgZ2VuZXJhbHMgb2YgdGhlIEdyZWVrcyBlbnRlcnRhaW5lZCB0aGUgYW1iYXNzYWRvcnMgb2YgdGhlIFNpbm9wZWFucywgYW5kIHRoZXkgaGFkIGEgZ3JlYXQgZGVhbCBvZiBmcmllbmRseSBjb252ZXJzYXRpb24gd2l0aCBvbmUgYW5vdGhlciBvbiBnZW5lcmFsIG1hdHRlcnMsIHdoaWxlIGluIHBhcnRpY3VsYXIgdGhleSBtYWRlIHN1Y2ggaW5xdWlyaWVzIGFzIGVhY2ggcGFydHkgd2lzaGVkIGluIHJlZ2FyZCB0byB0aGUgcmVzdCBvZiB0aGUgam91cm5leS4KPG1pbGVzdG9uZSBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlN1Y2ggd2FzIHRoZSBlbmQgb2YgdGhhdCBkYXkuIE9uIHRoZSBuZXh0IHRoZSBnZW5lcmFscyBjYWxsZWQgYW4gYXNzZW1ibHkgb2YgdGhlIHNvbGRpZXJzLCBhbmQgdGhleSBkZWNpZGVkIHRvIGludml0ZSB0aGUgU2lub3BlYW5zIHRvIGpvaW4gdGhlbSBpbiBkZWxpYmVyYXRpbmcgYWJvdXQgdGhlIHJlc3Qgb2YgdGhlaXIgam91cm5leS4gRm9yIGlmIHRoZXkgc2hvdWxkIGhhdmUgdG8gcHJvY2VlZCBieSBsYW5kLCBpdCBzZWVtZWQgdGhhdCB0aGUgU2lub3BlYW5zIHdvdWxkIGJlIHVzZWZ1bCB0byB0aGVtLCBieSB2aXJ0dWUgb2YgdGhlaXIgYWNxdWFpbnRhbmNlIHdpdGggPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY3NjAiIGtleT0idGduLDcwMTY3NjAiPlBhcGhsYWdvbmlhPC9wbGFjZU5hbWU+OyBhbmQgaWYgdGhleSB3ZXJlIHRvIGdvIGJ5IHNlYSwgdGhlcmUgd2FzIHN0aWxsIG5lZWQsIHRoZXkgdGhvdWdodCwgb2YgdGhlIFNpbm9wZWFucywgaW5hc211Y2ggYXMgdGhleSB3ZXJlIHRoZSBvbmx5IHBlb3BsZSB3aG8gY291bGQgcHJvdmlkZSBzaGlwcyBlbm91Z2ggZm9yIHRoZSBhcm15Lgo8bWlsZXN0b25lIG49IjIiIHVuaXQ9InNlY3Rpb24iIC8+VGhleSBhY2NvcmRpbmdseSBpbnZpdGVkIHRoZSBhbWJhc3NhZG9ycyBpbiBhbmQgcHJvY2VlZGVkIHRvIHRha2UgY291bnNlbCB3aXRoIHRoZW0sIGFza2luZyB0aGVtLCBhcyBHcmVla3MgZGVhbGluZyB3aXRoIEdyZWVrcywgdG8gbWFrZSBhIGJlZ2lubmluZyBvZiB0aGVpciBraW5kbHkgcmVjZXB0aW9uIGJ5IHNob3dpbmcgZnJpZW5kbGluZXNzIGFuZCBvZmZlcmluZyB0aGUgYmVzdCBhZHZpY2UuCjxtaWxlc3RvbmUgbj0iMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZW4gSGVjYXRvbnltdXMgcm9zZSBhbmQsIGluIHRoZSBmaXJzdCBwbGFjZSwgZGVmZW5kZWQgaGltc2VsZiBpbiB0aGUgbWF0dGVyIG9mIGhpcyByZW1hcmsgdGhhdCB0aGV5IHdvdWxkIG1ha2UgYSBmcmllbmQgb2YgdGhlIFBhcGhsYWdvbmlhbiwgYnkgc2F5aW5nIHRoYXQgaGUgZGlkIG5vdCBtZWFuIHRoYXQgaGlzIG93biBwZW9wbGUgd291bGQgbWFrZSB3YXIgdXBvbiB0aGUgR3JlZWtzLCBidXQgcmF0aGVyIHRoYXQgZGVzcGl0ZSB0aGUgb3Bwb3J0dW5pdHkgdGhleSBoYWQgdG8gYmUgZnJpZW5kcyBvZiB0aGUgYmFyYmFyaWFucyB0aGV5IHdvdWxkIGNob29zZSB0aGUgR3JlZWtzIGluc3RlYWQuIEJ1dCB3aGVuIHRoZXkgdG9sZCBoaW0gdG8gcHJvY2VlZCB0byBnaXZlIHNvbWUgYWR2aWNlLCBoZSBiZWdhbiB3aXRoIGEgcHJheWVyIHRvIHRoZSBnb2RzIGFzIGZvbGxvd3M6CjxtaWxlc3RvbmUgbj0iNCIgdW5pdD0ic2VjdGlvbiIgLz7igJxJZiBJIHNob3VsZCBnaXZlIHRoZSBhZHZpY2Ugd2hpY2ggaW4gbXkganVkZ21lbnQgaXMgYmVzdCwgbWF5IG1hbnkgYmxlc3NpbmdzIGNvbWUgdG8gbWU7IG90aGVyd2lzZSwgdGhlIG9wcG9zaXRlLiBGb3Igd2hhdCBtZW4gdGVybSDigJhzYWNyZWQgY291bnNlbOKAmTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SGVjYXRvbnltdXMgYWxsdWRlcyB0byB0aGUgcHJvdmVyYiDigJxDb3Vuc2VsIGlzIGEgc2FjcmVkIHRoaW5nLOKAnSBpLmUuIGl0IG11c3QgYmUgZ2l2ZW4gaG9uZXN0bHkuPC9ub3RlPiBzZWVtcyB2ZXJpbHkgdG8gYmUgbXkgcG9ydGlvbjsgc2luY2UgdG8tZGF5IGlmIEkgYmUgZm91bmQgdG8gaGF2ZSBnaXZlbiBnb29kIGNvdW5zZWwsIHRoZXJlIHdpbGwgYmUgbWFueSB0byBwcmFpc2UgbWUsIGJ1dCBpZiBpdCBiZSBpbGwsIHRoZXJlIHdpbGwgYmUgbWFueSBhbW9uZyB5b3UgdG8gY3Vyc2UgbWUuCjxtaWxlc3RvbmUgbj0iNSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgSSBrbm93IHRoYXQgd2Ugc2hhbGwgaGF2ZSBmYXIgbW9yZSB0cm91YmxlIGlmIHlvdSBhcmUgY29udmV5ZWQgYnkgc2VhLCBmb3IgdXBvbiB1cyB3aWxsIGZhbGwgdGhlIGR1dHkgb2YgcHJvdmlkaW5nIHRoZSBzaGlwczsgd2hpbGUgaWYgeW91IGpvdXJuZXkgYnkgbGFuZCwgdXBvbiB5b3Ugd2lsbCBmYWxsIHRoZSB0YXNrIG9mIGRvaW5nIHRoZSBmaWdodGluZy4KPG1pbGVzdG9uZSBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk5ldmVydGhlbGVzcywgSSBtdXN0IHNheSB3aGF0IEkgYmVsaWV2ZTsgZm9yIEkgYW0gYWNxdWFpbnRlZCB3aXRoIGJvdGggdGhlIGNvdW50cnkgb2YgdGhlIFBhcGhsYWdvbmlhbnMgYW5kIHRoZWlyIHBvd2VyLiBUaGVpciBjb3VudHJ5IHBvc3Nlc3NlcyB0aGVzZSB0d28gdGhpbmdzLCB0aGUgZmFpcmVzdCBwbGFpbnMgYW5kIHRoZSBsb2Z0aWVzdCBtb3VudGFpbnMuCjxtaWxlc3RvbmUgbj0iNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQsIGluIHRoZSBmaXJzdCBwbGFjZSwgSSBrbm93IGF0IG9uY2Ugd2hlcmUgeW91IG11c3QgbWFrZSB5b3VyIGVudHJ5OiB0aGVyZSBpcyBubyBwbGFjZSBzYXZlIHdoZXJlIHRoZSBwZWFrcyBvZiB0aGUgbW91bnRhaW5zIHJpc2UgaGlnaCBvbiBlaXRoZXIgc2lkZSBvZiB0aGUgcm9hZDsgaG9sZGluZyB0aGVzZSBwZWFrcyBhIG1lcmUgaGFuZGZ1bCBvZiBtZW4gY291bGQgY29tbWFuZCB0aGUgcGFzcywgYW5kIGlmIHRoZXkgYXJlIHNvIGhlbGQsIG5vdCBhbGwgdGhlIG1lbiBpbiB0aGUgd29ybGQgY291bGQgZWZmZWN0IGEgcGFzc2FnZS4gQWxsIHRoaXMgSSBjb3VsZCBldmVuIHBvaW50IG91dCBpZiB5b3Ugc2hvdWxkIGNhcmUgdG8gc2VuZCBzb21lIG9uZSB0byB0aGUgc3BvdCB3aXRoIG1lLgo8bWlsZXN0b25lIG49IjgiIHVuaXQ9InNlY3Rpb24iIC8+U2Vjb25kbHksIEkga25vdyB0aGF0IHRoZXkgaGF2ZSBwbGFpbnMgYW5kIGEgY2F2YWxyeSB3aGljaCB0aGUgYmFyYmFyaWFucyB0aGVtc2VsdmVzIHJlZ2FyZCBhcyBzdXBlcmlvciB0byB0aGUgd2hvbGUgb2YgdGhlIEtpbmcncyBjYXZhbHJ5LiBJbmRlZWQsIG9ubHkgbm93IHRoZXNlIFBhcGhsYWdvbmlhbnMgaGF2ZSBmYWlsZWQgdG8gcHJlc2VudCB0aGVtc2VsdmVzIHdoZW4gdGhlIEtpbmcgc3VtbW9uZWQgdGhlbSwgZm9yIHRoZWlyIHJ1bGVyIGlzIHRvbyBwcm91ZCB0byBvYmV5Lgo8bWlsZXN0b25lIG49IjkiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJZiB5b3Ugc2hvdWxkLCBhZnRlciBhbGwsIGZpbmQgeW91cnNlbHZlcyBhYmxlIG5vdCBvbmx5IHRvIHNlaXplIHRoZSBtb3VudGFpbnMsIHdoZXRoZXIgYnkgc3RlYWx0aCBvciBieSBhbnRpY2lwYXRpbmcgdGhlIGVuZW15LCBidXQgYWxzbyBvbiB0aGUgcGxhaW4gdG8gY29ucXVlciBpbiBiYXR0bGUgYm90aCB0aGVpciBjYXZhbHJ5IGFuZCB0aGVpciBtb3JlIHRoYW4gb25lIGh1bmRyZWQgYW5kIHR3ZW50eSB0aG91c2FuZCBpbmZhbnRyeSwgeW91IHdpbGwgY29tZSB0byB0aGUgcml2ZXJzLiBGaXJzdCBpcyB0aGUgVGhlcm1vZG9uLCB0aHJlZSBwbGV0aHJhIGluIHdpZHRoLCB3aGljaCBJIGZhbmN5IHdvdWxkIGJlIGRpZmZpY3VsdCB0byBjcm9zcywgZXNwZWNpYWxseSB3aXRoIGdyZWF0IG51bWJlcnMgb2YgdGhlIGVuZW15IGluIGZyb250IGFuZCBncmVhdCBudW1iZXJzIGZvbGxvd2luZyBiZWhpbmQ7IHNlY29uZCwgdGhlIElyaXMsIGxpa2V3aXNlIHRocmVlIHBsZXRocmEgd2lkZTsgdGhpcmQsIHRoZSBIYWx5cywgbm90IGxlc3MgdGhhbiB0d28gc3RhZGlhIGluIHdpZHRoLCB3aGljaCB5b3UgY291bGQgbm90IGNyb3NzIHdpdGhvdXQgYm9hdHPigJRhbmQgd2hvIHdpbGwgdGhlcmUgYmUgdG8gc3VwcGx5IHlvdSB3aXRoIGJvYXRzP+KAlGFuZCBzaW1pbGFybHkgaW1wYXNzYWJsZSBpcyB0aGUgUGFydGhlbml1cyBhbHNvLCB0byB3aGljaCB5b3Ugd291bGQgY29tZSBpZiB5b3Ugc2hvdWxkIGdldCBhY3Jvc3MgdGhlIEhhbHlzLgo8bWlsZXN0b25lIG49IjEwIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRm9yIG15IHBhcnQsIHRoZXJlZm9yZSwgSSBiZWxpZXZlIHRoYXQgdGhpcyBqb3VybmV5IGlzIG5vdCBtZXJlbHkgZGlmZmljdWx0IGZvciB5b3UsIGJ1dCBhIHRoaW5nIG9mIHV0dGVyIGltcG9zc2liaWxpdHkuIElmIHlvdSBnbyBieSBzZWEsIGhvd2V2ZXIsIHlvdSBjYW4gY29hc3QgYWxvbmcgZnJvbSBoZXJlIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU2lub3BlIiBrZXk9InBlcnNldXMsU2lub3BlIj5TaW5vcGU8L3BsYWNlTmFtZT4sIGFuZCBmcm9tIFNpbm9wZSB0byBIZXJhY2xlaWE7IGFuZCBmcm9tIEhlcmFjbGVpYSBvbiB0aGVyZSBpcyBubyBkaWZmaWN1bHR5IGVpdGhlciBieSBsYW5kIG9yIGJ5IHdhdGVyLCBmb3IgdGhlcmUgYXJlIHNoaXBzIGluIGFidW5kYW5jZSBhdCBIZXJhY2xlaWEu4oCdCjxtaWxlc3RvbmUgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIGhlIGhhZCB0aHVzIHNwb2tlbiwgc29tZSBvZiBoaXMgaGVhcmVycyB3ZXJlIHN1c3BpY2lvdXMgdGhhdCBoZSBzcG9rZSBhcyBoZSBkaWQgb3V0IG9mIGZyaWVuZHNoaXAgZm9yIENvcnlsYXMsIGZvciBoZSB3YXMgaGlzIG9mZmljaWFsIHJlcHJlc2VudGF0aXZlIGF0IFNpbm9wZTsgb3RoZXJzIGltYWdpbmVkIHRoYXQgaGUgZXZlbiBoYWQgdGhlIGlkZWEgb2Ygb2J0YWluaW5nIGdpZnRzIG9uIGFjY291bnQgb2YgdGhpcyBhZHZpY2U7IHdoaWxlIHN0aWxsIG90aGVycyBzdXNwZWN0ZWQgdGhhdCB0aGUgcmVhbCBwdXJwb3NlIG9mIGhpcyBzcGVlY2ggd2FzIHRvIHByZXZlbnQgdGhlIEdyZWVrcyBmcm9tIGdvaW5nIGJ5IGxhbmQgYW5kIHNvIGRvaW5nIHNvbWUgaGFybSB0byB0aGUgdGVycml0b3J5IG9mIHRoZSBTaW5vcGVhbnMuIEF0IGFueSByYXRlLCBob3dldmVyLCB0aGUgR3JlZWtzIHZvdGVkIHRvIG1ha2UgdGhlIGpvdXJuZXkgYnkgc2VhLgo8bWlsZXN0b25lIG49IjEyIiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMgWGVub3Bob24gc2FpZDog4oCcTWVuIG9mIFNpbm9wZSwgbXkgdHJvb3BzIGhhdmUgY2hvc2VuIHRoZSByb3V0ZSB3aGljaCB5b3UgYWR2aXNlOyBidXQgdGhlIG1hdHRlciBzdGFuZHMgaW4gdGhpcyB3YXk6IGlmIHRoZXJlIGFyZSB0byBiZSBzaGlwcyBlbm91Z2ggc28gdGhhdCBub3Qgc28gbXVjaCBhcyBvbmUgbWFuIHdpbGwgYmUgbGVmdCBiZWhpbmQgaGVyZSwgd2Ugc2hhbGwgc2V0IHNhaWw7IGJ1dCBpZiB0aGUgcGxhbiBzaG91bGQgYmUgdG8gbGV0IHNvbWUgb2YgdXMgc3RheSBiZWhpbmQgYW5kIG90aGVycyBzYWlsLCB3ZSBzaGFsbCBub3Qgc2V0IGZvb3Qgb24gdGhlIHNoaXBzLgo8bWlsZXN0b25lIG49IjEzIiB1bml0PSJzZWN0aW9uIiAvPkZvciB3ZSBrbm93IHRoYXQgd2hlcmV2ZXIgd2UgaG9sZCB0aGUgdXBwZXIgaGFuZCwgd2Ugc2hvdWxkIGJlIGFibGUgYm90aCB0byBrZWVwIG91cnNlbHZlcyBzYWZlIGFuZCB0byBvYnRhaW4gcHJvdmlzaW9uczsgYnV0IGxldCB1cyBvbmNlIGdldCBjYXVnaHQgd2hlcmUgd2UgYXJlIHdlYWtlciB0aGFuIHRoZSBlbmVteSwgYW5kIGl0IGlzIHBlcmZlY3RseSBjbGVhciB0aGF0IHdlIHNoYWxsIGJlIGluIHRoZSBwb3NpdGlvbiBvZiBzbGF2ZXMu4oCdIFVwb24gaGVhcmluZyB0aGVzZSB3b3JkcyB0aGUgU2lub3BlYW5zIHRvbGQgdGhlbSB0byBzZW5kIGFtYmFzc2Fkb3JzLgo8bWlsZXN0b25lIG49IjE0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGV5IHNlbnQgQ2FsbGltYWNodXMgdGhlIEFyY2FkaWFuLCBBcmlzdG9uIHRoZSBBdGhlbmlhbiwgYW5kIFNhbW9sYXMgdGhlIEFjaGFlYW4uIFRoZXNlIG1lbiBhY2NvcmRpbmdseSBzZXQgb3V0Lgo8bWlsZXN0b25lIG49IjE1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyB0aW1lLCBhcyBYZW5vcGhvbidzIGV5ZXMgcmVzdGVkIHVwb24gYSBncmVhdCBib2R5IG9mIEdyZWVrIGhvcGxpdGVzLCBhbmQgbGlrZXdpc2UgdXBvbiBhIGdyZWF0IGJvZHkgb2YgcGVsdGFzdHMsIGJvd21lbiwgc2xpbmdlcnMsIGFuZCBob3JzZW1lbiBhbHNvLCBhbGwgb2YgdGhlbSBub3cgZXhjZWVkaW5nbHkgZWZmaWNpZW50IHRocm91Z2ggY29uc3RhbnQgc2VydmljZSBhbmQgYWxsIHRoZXJlIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NjE5IiBrZXk9InRnbiw3MDE2NjE5Ij5Qb250dXM8L3BsYWNlTmFtZT4sPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5YZW5vcGhvbiB1c2VzIHRoZSB0ZXJtIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7PgOG9uc69z4TOv8+CPC9mb3JlaWduPiBib3RoIG9mIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjYxOSIga2V5PSJ0Z24sNzAxNjYxOSI+RXV4aW5lIFNlYTwvcGxhY2VOYW1lPiBhbmQgb2YgdGhlIHJlZ2lvbiBhbG9uZyBpdHMgc291dGgtZWFzdGVybiBjb2FzdC4gU2VlIGJlbG93Ljwvbm90ZT4gd2hlcmUgc28gbGFyZ2UgYSBmb3JjZSBjb3VsZCBub3QgaGF2ZSBiZWVuIGdhdGhlcmVkIGJ5IGFueSBzbGlnaHQgb3V0bGF5IG9mIG1vbmV5LCBpdCBzZWVtZWQgdG8gaGltIHRoYXQgaXQgd2FzIGEgZmluZSB0aGluZyB0byBnYWluIGFkZGl0aW9uYWwgdGVycml0b3J5IGFuZCBwb3dlciBmb3IgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiBieSBmb3VuZGluZyBhIGNpdHkuCjxtaWxlc3RvbmUgbj0iMTYiIHVuaXQ9InNlY3Rpb24iIC8+SXQgd291bGQgYmVjb21lIGEgZ3JlYXQgY2l0eSwgaGUgdGhvdWdodCwgYXMgaGUgcmVja29uZWQgdXAgdGhlaXIgb3duIG51bWJlcnMgYW5kIHRoZSBwZW9wbGVzIHdobyBkd2VsdCBhcm91bmQgdGhlIEV1eGluZS4gQW5kIHdpdGggYSB2aWV3IHRvIHRoaXMgcHJvamVjdCwgYmVmb3JlIHNwZWFraW5nIGFib3V0IGl0IHRvIGFueSBvZiB0aGUgc29sZGllcnMsIGhlIG9mZmVyZWQgc2FjcmlmaWNlcywgc3VtbW9uaW5nIGZvciB0aGF0IHB1cnBvc2UgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwNDY5MTEiIGtleT0idGduLDEwNDY5MTEiPlNpbGFudXM8L3BsYWNlTmFtZT4gdGhlIEFtYnJhY2lvdCwgd2hvIGhhZCBiZWVuIHRoZSBzb290aHNheWVyIG9mIDxwZXJzTmFtZT5DeXJ1czwvcGVyc05hbWU+Lgo8bWlsZXN0b25lIG49IjE3IiB1bml0PSJzZWN0aW9uIiAvPjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDQ2OTExIiBrZXk9InRnbiwxMDQ2OTExIj5TaWxhbnVzPC9wbGFjZU5hbWU+LCBob3dldmVyLCBmZWFyaW5nIHRoYXQgdGhpcyB0aGluZyBtaWdodCBjb21lIHRvIHBhc3MgYW5kIHRoYXQgdGhlIGFybXkgbWlnaHQgc2V0dGxlIGRvd24gc29tZXdoZXJlLCBjYXJyaWVkIGZvcnRoIHRvIHRoZSB0cm9vcHMgYSByZXBvcnQgdGhhdCBYZW5vcGhvbiB3YW50ZWQgdGhlbSB0byBzZXR0bGUgZG93biwgc28gdGhhdCBoZSBjb3VsZCBmb3VuZCBhIGNpdHkgYW5kIHdpbiBmb3IgaGltc2VsZiBhIG5hbWUgYW5kIHBvd2VyLgo8bWlsZXN0b25lIG49IjE4IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTA0NjkxMSIga2V5PSJ0Z24sMTA0NjkxMSI+U2lsYW51czwvcGxhY2VOYW1lPiwgaGlzIG93biBkZXNpcmUgd2FzIHRvIHJlYWNoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gYXMgcXVpY2tseSBhcyBwb3NzaWJsZTsgZm9yIHRoZSB0aHJlZSB0aG91c2FuZCBkYXJpY3MsIHdoaWNoIGhlIGhhZCByZWNlaXZlZCBmcm9tIDxwZXJzTmFtZT5DeXJ1czwvcGVyc05hbWU+IGF0IHRoZSB0aW1lIHdoZW4gaGUgc2FjcmlmaWNlZCBmb3IgaGltIGFuZCBoYWQgdG9sZCB0aGUgdHJ1dGggYWJvdXQgdGhlIHRlbiBkYXlzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuNy4xOCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjcuMTg8L2JpYmw+Ljwvbm90ZT4gaGUgaGFkIGJyb3VnaHQgc2FmZWx5IHRocm91Z2guCjxtaWxlc3RvbmUgbj0iMTkiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZSBzb2xkaWVycyBoZWFyZCB0aGlzIHJlcG9ydCwgc29tZSBvZiB0aGVtIHRob3VnaHQgaXQgd2FzIGJlc3QgdG8gc2V0dGxlIGRvd24sIGJ1dCB0aGUgbWFqb3JpdHkgdGhvdWdodCBvdGhlcndpc2UuIEFuZCBUaW1hc2lvbiB0aGUgRGFyZGFuaWFuIGFuZCBUaG9yYXggdGhlIEJvZW90aWFuIHNhaWQgdG8gc29tZSBIZXJhY2xlb3QgYW5kIFNpbm9wZWFuIG1lcmNoYW50cyB3aG8gd2VyZSB0aGVyZSwgdGhhdCBpZiB0aGV5IGRpZCBub3QgcHJvdmlkZSBwYXkgZm9yIHRoZSB0cm9vcHMgc28gdGhhdCB0aGV5IHdvdWxkIGhhdmUgcHJvdmlzaW9ucyBmb3IgdGhlIHZveWFnZSBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNDc5IiBrZXk9InRnbiw3MDAyNDc5Ij5Db3R5b3JhPC9wbGFjZU5hbWU+LCB0aGVyZSB3b3VsZCBiZSBkYW5nZXIgb2YgdGhhdCBncmVhdCBmb3JjZSByZW1haW5pbmcgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2MTkiIGtleT0idGduLDcwMTY2MTkiPlBvbnR1czwvcGxhY2VOYW1lPi4g4oCcRm9yIFhlbm9waG9uLOKAnSB0aGV5IHdlbnQgb24sIOKAnHdpc2hlcyBhbmQgaXMgdXJnaW5nIHRoYXQgYXMgc29vbiBhcyB0aGUgc2hpcHMgY29tZSwgd2Ugc2hvdWxkIHRoZW4gc2F5IGFsbCBvZiBhIHN1ZGRlbiB0byB0aGUgYXJteToKPG1pbGVzdG9uZSBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5gU29sZGllcnMsIG5vdyB3ZSBzZWUgdGhhdCB5b3UgYXJlIHdpdGhvdXQgbWVhbnMgZWl0aGVyIHRvIHN1cHBseSB5b3Vyc2VsdmVzIHdpdGggcHJvdmlzaW9ucyBvbiB0aGUgaG9tZXdhcmQgdm95YWdlLCBvciB0byBkbyBhbnl0aGluZyBmb3IgeW91ciBwZW9wbGUgYXQgaG9tZSB3aGVuIHlvdSBoYXZlIGdvdCBiYWNrIHRoZXJlOyBidXQgaWYgeW91IHdpc2ggdG8gcGljayBvdXQgc29tZSBzcG90IGluIHRoZSBjb3VudHJ5IHRoYXQgbGllcyByb3VuZCBhYm91dCB0aGUgRXV4aW5lIGFuZCBwdXQgdG8gc2hvcmUgd2hlcmV2ZXIgeW91IG1heSB3aXNo4oCUaGUgd2hvIHNvIGRlc2lyZXMgdG8gZ28gYmFjayBob21lIGFuZCBoZSB3aG8gc28gZGVzaXJlcyB0byBzdGF5IGJlaGluZOKAlGhlcmUgYXJlIHlvdXIgc2hpcHMsIHNvIHRoYXQgeW91IGNvdWxkIG1ha2UgYSBzdWRkZW4gYXR0YWNrIGF0IHdoYXRldmVyIHBvaW50IHlvdSBtYXkgd2lzaC4n4oCdCjxtaWxlc3RvbmUgbj0iMjEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5VcG9uIGhlYXJpbmcgdGhpcyBzdGF0ZW1lbnQgdGhlIG1lcmNoYW50cyBjYXJyaWVkIGl0IGJhY2sgdG8gdGhlaXIgY2l0aWVzOyBhbmQgYWxvbmcgd2l0aCB0aGVtIFRpbWFzaW9uIHRoZSBEYXJkYW5pYW4gc2VudCBFdXJ5bWFjaHVzIHRoZSBEYXJkYW5pYW4gYW5kIFRob3JheCB0aGUgQm9lb3RpYW4gdG8gdGVsbCB0aGUgc2FtZSBzdG9yeS4gV2hlbiB0aGUgU2lub3BlYW5zIGFuZCBIZXJhY2xlb3RzIGhlYXJkIGl0LCB0aGV5IHNlbnQgdG8gVGltYXNpb24gYW5kIHVyZ2VkIGhpbSB0byB0YWtlIGluIGNoYXJnZSwgZm9yIGEgZmVlLCB0aGUgbWF0dGVyIG9mIGdldHRpbmcgdGhlIGFybXkgdG8gc2FpbCBhd2F5Lgo8bWlsZXN0b25lIG49IjIyIiB1bml0PSJzZWN0aW9uIiAvPkhlIHJlY2VpdmVkIHRoaXMgcHJvcG9zYWwgZ2xhZGx5LCBhbmQgd2hlbiB0aGUgc29sZGllcnMgd2VyZSBnYXRoZXJlZCBpbiBhc3NlbWJseSBhZGRyZXNzZWQgdGhlbSBhcyBmb2xsb3dzOiDigJxZb3Ugb3VnaHQgbm90LCBzb2xkaWVycywgdG8gc2V0IHlvdXIgdGhvdWdodHMgb24gcmVtYWluaW5nIGhlcmUsIG5vciB0byBlc3RlZW0gYW55dGhpbmcgbW9yZSBoaWdobHkgdGhhbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LiBCdXQgSSBoZWFyIHRoYXQgY2VydGFpbiBwZW9wbGUgYXJlIG9mZmVyaW5nIHNhY3JpZmljZXMgb3ZlciB0aGlzIG1hdHRlciwgd2l0aCBub3Qgc28gbXVjaCBhcyBhIHdvcmQgdG8geW91Lgo8bWlsZXN0b25lIG49IjIzIiB1bml0PSJzZWN0aW9uIiAvPk5vdyBJIHByb21pc2UsIGluIGNhc2UgeW91IHNldCBzYWlsIGZyb20gaGVyZSwgdG8gcHJvdmlkZSB5b3Ugd2l0aCBwYXkgZnJvbSB0aGUgZmlyc3Qgb2YgdGhlIG1vbnRoIGF0IHRoZSByYXRlIG9mIGEgQ3l6aWNlbmU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgZ29sZCBjb2luIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ3l6aWN1cyIga2V5PSJwZXJzZXVzLEN5emljdXMiPkN5emljdXM8L3BsYWNlTmFtZT4sIGFuIGltcG9ydGFudCBHcmVlayBjaXR5IG9uIHRoZSBQcm9wb250aXMuIEl0IHdhcyBlcXVpdmFsZW50IGluIHdlaWdodCBvZiBnb2xkIHRvICBsIGxscy4gbCBkLiBvciAkNy41NjsgYnV0IHNlZSBub3RlIG9uIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMS45IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMS45PC9iaWJsPi48L25vdGU+IHBlciBtb250aCB0byBlYWNoIG1hbjsgYW5kIEkgd2lsbCB0YWtlIHlvdSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjMzMSIga2V5PSJ0Z24sNzAwMjMzMSI+VHJvYXM8L3BsYWNlTmFtZT4sIHRoZSBwbGFjZSBmcm9tIHdoaWNoIEkgYW0gYW4gZXhpbGUsIGFuZCBteSBjaXR5IHdpbGwgYmUgYXQgeW91ciBzZXJ2aWNlOyBmb3IgdGhleSB3aWxsIHJlY2VpdmUgbWUgd2lsbGluZ2x5Lgo8bWlsZXN0b25lIG49IjI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gSSBteXNlbGYgd2lsbCBsZWFkIHlvdSB0byBwbGFjZXMgZnJvbSB3aGljaCB5b3Ugd2lsbCBnZXQgYW4gYWJ1bmRhbmNlIG9mIHdlYWx0aC4gSSBhbSBhY3F1YWludGVkIHdpdGggPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDUwMDQyMTYiIGtleT0idGduLDUwMDQyMTYiPkFlb2xpczwvcGxhY2VOYW1lPiwgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2MTMiIGtleT0idGduLDcwMDI2MTMiPlBocnlnaWE8L3BsYWNlTmFtZT4sIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyMzMxIiBrZXk9InRnbiw3MDAyMzMxIj5Ucm9hczwvcGxhY2VOYW1lPiwgYW5kIHRoZSBlbnRpcmUgcHJvdmluY2Ugb2YgUGhhcm5hYmF6dXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5QZXJzaWFuIHNhdHJhcCBvZiBMZXNzZXIgUGhyeWdpYSBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2MDgiIGtleT0idGduLDcwMTY2MDgiPkJpdGh5bmlhPC9wbGFjZU5hbWU+Ljwvbm90ZT4gcGFydGx5IGJlY2F1c2UgSSBjb21lIGZyb20gdGhhdCByZWdpb24sIGFuZCBwYXJ0bHkgYmVjYXVzZSBJIGhhdmUgY2FtcGFpZ25lZCB0aGVyZSB3aXRoIENsZWFyY2h1cyBhbmQgRGVyY3lsaWRhcy7igJ08bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgU3BhcnRhbiBnZW5lcmFsLiBIZSBoYWQgdGFrZW4gcGFydCBpbiB0aGUgUGVsb3Bvbm5lc2lhbiBXYXIsIGFuZCB3YXMgdGhlIGNvbW1hbmRlciB1bmRlciB3aG9tIHRoZSBUZW4gVGhvdXNhbmQgbGF0ZXIgc2VydmVkLjwvbm90ZT4KICAgIDxtaWxlc3RvbmUgbj0iMjUiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5OZXh0IHJvc2UgVGhvcmF4IHRoZSBCb2VvdGlhbiwgd2hvIHdhcyBhdCBvZGRzIHdpdGggWGVub3Bob24gb3ZlciB0aGUgZ2VuZXJhbHNoaXAgb2YgdGhlIGFybXksIGFuZCBzYWlkIHRoYXQgb25jZSB0aGV5IGdvdCBvdXQgb2YgdGhlIEV1eGluZSB0aGV5IHdvdWxkIGhhdmUgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDEyNzg5IiBrZXk9InRnbiwxMDEyNzg5Ij5DaGVyc29uZXNlPC9wbGFjZU5hbWU+LCBhIGZhaXIgYW5kIHByb3NwZXJvdXMgY291bnRyeSwgd2hlcmUgYW55IG9uZSB3aG8gc28gZGVzaXJlZCBtaWdodCBkd2VsbCwgd2hpbGUgYW55IHdobyBkaWQgbm90IGRlc2lyZSB0byBkbyB0aGlzLCBtaWdodCByZXR1cm4gaG9tZS4gSXQgd2FzIHJpZGljdWxvdXMsIGhlIHNhaWQsIHdoZW4gdGhlcmUgd2FzIHBsZW50eSBvZiBmZXJ0aWxlIGxhbmQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgdG8gYmUgaHVudGluZyBmb3IgaXQgaW4gdGhlIGRvbWFpbiBvZiB0aGUgYmFyYmFyaWFucy4KPG1pbGVzdG9uZSBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz7igJxBbmQgdW50aWwgeW91IHJlYWNoIHRoYXQgc3BvdCzigJ0gaGUgY29udGludWVkLCDigJxJIGFsc28sIGxpa2UgVGltYXNpb24sIHByb21pc2UgeW91IHJlZ3VsYXIgcGF5LuKAnSBBbGwgdGhpcyBoZSBzYWlkIHdpdGggZnVsbCBrbm93bGVkZ2Ugb2Ygd2hhdCB0aGUgSGVyYWNsZW90cyBhbmQgdGhlIFNpbm9wZWFucyB3ZXJlIHByb21pc2luZyBUaW1hc2lvbiBmb3IgZ2V0dGluZyB0aGUgYXJteSB0byBzYWlsIGF3YXkuIFhlbm9waG9uIG1lYW53aGlsZSB3YXMgc2lsZW50Lgo8bWlsZXN0b25lIG49IjI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBQaGlsZXNpdXMgYW5kIEx5Y29uIHRoZSBBY2hhZWFucyByb3NlIGFuZCBzYWlkIHRoYXQgaXQgd2FzIG91dHJhZ2VvdXMgZm9yIFhlbm9waG9uIHRvIGJlIHByaXZhdGVseSB1cmdpbmcgcGVvcGxlIHRvIHNldHRsZSBkb3duIGFuZCBzYWNyaWZpY2luZyB3aXRoIGEgdmlldyB0byB0aGF0IHBsYW4sIHdoaWxlIHB1YmxpY2x5IHNheWluZyBub3QgYSB3b3JkIGFib3V0IHRoZSBtYXR0ZXIuIFRodXMgWGVub3Bob24gd2FzIGNvbXBlbGxlZCB0byByaXNlIGFuZCBzcGVhayBhcyBmb2xsb3dzOgo8bWlsZXN0b25lIG49IjI4IiB1bml0PSJzZWN0aW9uIiAvPuKAnEkgb2ZmZXIsIHNvbGRpZXJzLCBhcyB5b3Ugc2VlLCBhbGwgdGhlIHNhY3JpZmljZXMgSSBjYW4gYm90aCBvbiB5b3VyIGJlaGFsZiBhbmQgbXkgb3duIGluIG9yZGVyIHRoYXQgSSBtYXkgcGVyY2hhbmNlIHNheSBhbmQgdGhpbmsgYW5kIGRvIHN1Y2ggdGhpbmdzIGFzIHdpbGwgYmUgZmFpcmVzdCBhbmQgYmVzdCBib3RoIGZvciB5b3UgYW5kIG1lLiBBbmQgaW4gdGhlIHByZXNlbnQgY2FzZSBJIHdhcyBzYWNyaWZpY2luZyBmb3IgZ3VpZGFuY2Ugb24gdGhpcyBwb2ludCBvbmx5LCB3aGV0aGVyIGl0IHdhcyBiZXR0ZXIgdG8gYmVnaW4gdG8gc3BlYWsgYmVmb3JlIHlvdSBhbmQgdG8gYWN0IHJlZ2FyZGluZyB0aGlzIHByb2plY3QsIG9yIG5vdCB0byB0b3VjaCB0aGUgbWF0dGVyIGF0IGFsbC4KPG1pbGVzdG9uZSBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwNDY5MTEiIGtleT0idGduLDEwNDY5MTEiPlNpbGFudXM8L3BsYWNlTmFtZT4sIHRoZSBzb290aHNheWVyLCBhbnN3ZXJlZCBtZSBpbiByZXNwZWN0IHRvIHRoZSBtYWluIGlzc3VlIHRoYXQgdGhlIG9tZW5zIHdlcmUgZmF2b3VyYWJsZSAoZm9yIGhlIGtuZXcgd2VsbCBlbm91Z2ggdGhhdCBJIHdhcyBub3QgdW5hY3F1YWludGVkIHdpdGggZGl2aW5hdGlvbiwgZnJvbSBiZWluZyBhbHdheXMgcHJlc2VudCBhdCB0aGUgc2FjcmlmaWNlcyk7IGJ1dCBoZSBzYWlkIHRoYXQgdGhlcmUgYXBwZWFyZWQgaW4gdGhlIG9tZW5zIGEga2luZCBvZiBmcmF1ZCBhbmQgcGxvdCBhZ2FpbnN0IG1lLCBtYW5pZmVzdGx5IGJlY2F1c2UgaGUga25ldyB0aGF0IGhlIHdhcyBoaW1zZWxmIHBsb3R0aW5nIHRvIHRyYWR1Y2UgbWUgYmVmb3JlIHlvdS4gRm9yIGhlIHNwcmVhZCBhYnJvYWQgdGhlIHJlcG9ydCB0aGF0IEkgd2FzIGludGVuZGluZyB0byBkbyB0aGVzZSB0aGluZ3MgYXQgb25jZSwgd2l0aG91dCBnZXR0aW5nIHlvdXIgY29uc2VudC4KPG1pbGVzdG9uZSBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaWYgSSBzYXcgdGhhdCB5b3Ugd2VyZSB3aXRob3V0IHJlc291cmNlcywgSSBzaG91bGQgYmUgbG9va2luZyBhYm91dCBmb3IgYSBwbGFuIGJ5IHdoaWNoIHlvdSBtaWdodCBnZXQgcG9zc2Vzc2lvbiBvZiBhIGNpdHksIHdpdGggdGhlIHByb3Zpc2lvbiB0aGF0IGFmdGVyd2FyZHMgaGUgd2hvIGNob3NlIG1pZ2h0IHNhaWwgYmFjayBob21lIGF0IG9uY2UsIHdoaWxlIGhlIHdobyBkaWQgbm90IHdpc2ggdG8gZ28gYXQgb25jZSBtaWdodCByZXR1cm4gYWZ0ZXIgaGUgaGFkIGFjY3VtdWxhdGVkIGVub3VnaCB0byBiZXN0b3cgYSBsaXR0bGUgc29tZXRoaW5nIHVwb24gaGlzIHBlb3BsZSBhdCBob21lLgo8bWlsZXN0b25lIG49IjMxIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBzaW5jZSwgaW4gZmFjdCwgSSBzZWUgdGhhdCB0aGUgSGVyYWNsZW90cyBhbmQgU2lub3BlYW5zIGFyZSBzZW5kaW5nIHlvdSB0aGUgc2hpcHMgaW4gd2hpY2ggdG8gc2FpbCBhd2F5LCBhbmQgdGhhdCBtZW4gYXJlIHByb21pc2luZyB5b3UgcGF5IGZyb20gdGhlIGZpcnN0IG9mIHRoZSBtb250aCwgaXQgc2VlbXMgdG8gbWUgaXQgaXMgYSBmaW5lIHRoaW5nIHRvIGJlIGNhcnJpZWQgc2FmZWx5IHdoZXJlIHdlIHdhbnQgdG8gZ28gYW5kIGF0IHRoZSBzYW1lIHRpbWUgdG8gcmVjZWl2ZSBwYXkgZm9yIG91ciBwcmVzZXJ2YXRpb247IHRoZXJlZm9yZSBJIHJlbm91bmNlIHRoYXQgb3RoZXIgcHJvamVjdCBmb3IgbXlzZWxmLCBhbmQgSSBzYXksIHRvIGFsbCB0aG9zZSB3aG8gaGF2ZSBjb21lIHRvIG1lIGFuZCBleHByZXNzZWQgdGhlIHZpZXcgdGhhdCBpdCBvdWdodCB0byBiZSBjYXJyaWVkIG91dCwgdGhhdCB0aGV5IGFsc28gc2hvdWxkIHJlbm91bmNlIGl0Lgo8bWlsZXN0b25lIG49IjMyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRm9yIEkgaG9sZCB0aGlzIG9waW5pb246IHN0YW5kaW5nIHRvZ2V0aGVyIGFuZCBpbiBmb3JjZSwgYXMgeW91IGFyZSBub3csIEkgdGhpbmsgeW91IHdpbGwgYmUgaGVsZCBpbiBob25vdXIgYW5kIHdpbGwgaGF2ZSBwcm92aXNpb25zLCBmb3IgaW4gc3RyZW5ndGggbGllcyB0aGUgb3Bwb3J0dW5pdHkgdG8gd3Jlc3QgYXdheSB0aGUgcG9zc2Vzc2lvbnMgb2YgdGhlIHdlYWtlcjsgYnV0IGxldCB5b3Vyc2VsdmVzIGdldCBzZXBhcmF0ZWQgYW5kIHlvdXIgZm9yY2UgYnJva2VuIHVwIGludG8gc21hbGwgcGFydHMsIGFuZCB5b3Ugd291bGQgbmVpdGhlciBiZSBhYmxlIHRvIG9idGFpbiBmb29kIHRvIGxpdmUgb24gbm9yIHdvdWxkIHlvdSBjb21lIG9mZiB1bmhhcm1lZC4KPG1pbGVzdG9uZSBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rLCB0aGVyZWZvcmUsIGp1c3QgYXMgeW91IGRvLCB0aGF0IHdlIHNob3VsZCBzZXQgb3V0IGZvciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LCBhbmQgdGhhdCBpZiBpdCBkb2VzIGNvbWUgdG8gcGFzcyB0aGF0IGFueSBtYW4gaXMgY2F1Z2h0IGRlc2VydGluZyBiZWZvcmUgdGhlIGVudGlyZSBhcm15IGlzIGluIGEgcGxhY2Ugb2Ygc2FmZXR5LCBoZSBzaG91bGQgYmUgYnJvdWdodCB0byB0cmlhbCBhcyBhIHdyb25nLWRvZXIuIEFuZCB3aG9ldmVyIGlzIG9mIHRoaXMgb3BpbmlvbizigJ0gaGUgY29udGludWVkLCDigJxsZXQgaGltIHJhaXNlIGhpcyBoYW5kLuKAnSBVcCB3ZW50IGV2ZXJ5IGhhbmQuCjxtaWxlc3RvbmUgbj0iMzQiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTA0NjkxMSIga2V5PSJ0Z24sMTA0NjkxMSI+U2lsYW51czwvcGxhY2VOYW1lPiwgaG93ZXZlciwgYmVnYW4gc2hvdXRpbmcsIGFuZCBhdHRlbXB0ZWQgdG8gc2F5IHRoYXQgaXQgd2FzIGZhaXIgZm9yIGFueSBvbmUgd2hvIHNvIGNob3NlIHRvIGxlYXZlIHRoZSBhcm15LiBCdXQgdGhlIHNvbGRpZXJzIHdvdWxkIG5vdCBhbGxvdyBoaW0gdG8gc3BlYWssIGFuZCB0aGV5IHRocmVhdGVuZWQgaGltIHRoYXQgYXMgc3VyZWx5IGFzIHRoZXkgY2F1Z2h0IGhpbSBydW5uaW5nIGF3YXksIHRoZXkgd291bGQgaW5mbGljdCBkdWUgcHVuaXNobWVudCB1cG9uIGhpbS4KPG1pbGVzdG9uZSBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGF0LCB3aGVuIHRoZSBIZXJhY2xlb3RzIGxlYXJuZWQgdGhhdCBpdCBoYWQgYmVlbiB2b3RlZCB0byBzYWlsIGF3YXksIGFuZCB0aGF0IFhlbm9waG9uIGhpbXNlbGYgaGFkIHB1dCB0aGUgcXVlc3Rpb24gdG8gdm90ZSwgdGhleSBkaWQgc2VuZCB0aGUgc2hpcHMsIGJ1dCBpbiB0aGUgbWF0dGVyIG9mIHRoZSBtb25leSB0aGV5IGhhZCBwcm9taXNlZCB0byBUaW1hc2lvbiBhbmQgVGhvcmF4IHRoZXkgdHVybmVkIG91dCB0byBiZSBkZWNlaXZlcnMuCjxtaWxlc3RvbmUgbj0iMzYiIHVuaXQ9InNlY3Rpb24iIC8+Q29uc2VxdWVudGx5IHRoZSBtZW4gd2hvIGhhZCBwcm9taXNlZCB0aGUgcGF5IHdlcmUgcGFuaWMtc3RyaWNrZW4sIGFuZCBzdG9vZCBpbiBmZWFyIG9mIHRoZSBhcm15LiBUaGV5IHRoZXJlZm9yZSB0b29rIHdpdGggdGhlbSB0aGUgb3RoZXIgZ2VuZXJhbHMgdG8gd2hvbSB0aGV5IGhhZCBjb21tdW5pY2F0ZWQgdGhlaXIgZWFybGllciBkb2luZ3PigJRuYW1lbHksIGFsbCB0aGUgZ2VuZXJhbHMgZXhjZXB0IE5lb24gdGhlIEFzaW5hZWFuLCB3aG8gd2FzIGFjdGluZyBhcyBsaWV1dGVuYW50IGZvciBDaGVpcmlzb3BodXMgYmVjYXVzZSBDaGVpcmlzb3BodXMgaGFkIG5vdCB5ZXQgcmV0dXJuZWTigJRhbmQgY2FtZSB0byBYZW5vcGhvbiwgd2l0aCB0aGUgbWVzc2FnZSB0aGF0IHRoZXkgaGFkIGNoYW5nZWQgdGhlaXIgbWluZHMgYW5kIHRob3VnaHQgaXQgd2FzIGJlc3QgdG8gc2FpbCB0byB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIyNjMiIGtleT0idGduLDcwMTIyNjMiPlBoYXNpczwvcGxhY2VOYW1lPiwgaW5hc211Y2ggYXMgdGhlcmUgd2VyZSBzaGlwcyBhdCBoYW5kLCBhbmQgc2VpemUgdGhlIGxhbmQgb2YgdGhlIFBoYXNpYW5zLgo8bWlsZXN0b25lIG49IjM3IiB1bml0PSJzZWN0aW9uIiAvPlRoZWlyIGtpbmcsIGFzIGl0IGNoYW5jZWQsIHdhcyBhIGdyYW5kc29uIG9mIEFlZXRlcy4gWGVub3Bob24gcmVwbGllZCB0aGF0IGhlIHdvdWxkIG5vdCBzYXkgYSB3b3JkIHRvIHRoZSBhcm15IGFib3V0IHRoaXMgcGxhbjsg4oCcYnV0LOKAnSBoZSB3ZW50IG9uLCDigJxnYXRoZXIgdGhlIG1lbiB0b2dldGhlciBhbmQgc3BlYWsgdG8gdGhlbSB5b3Vyc2VsdmVzLCBpZiB5b3Ugd2lzaC7igJ0gVGhlbiBUaW1hc2lvbiB0aGUgRGFyZGFuaWFuIGRlY2xhcmVkIGl0IGFzIGhpcyBvcGluaW9uIHRoYXQgdGhleSBzaG91bGQgbm90IGhvbGQgYW4gYXNzZW1ibHksIGJ1dCB0aGF0IGVhY2ggZ2VuZXJhbCBzaG91bGQgZmlyc3QgZW5kZWF2b3VyIHRvIHBlcnN1YWRlIGhpcyBvd24gY2FwdGFpbnMuIFNvIHRoZXkgd2VudCBhd2F5IGFuZCBzZXQgYWJvdXQgZG9pbmcgdGhpcy4KPG1pbGVzdG9uZSBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBzb2xkaWVycywgYWNjb3JkaW5nbHksIGxlYXJuZWQgYnkgaW5xdWlyeSB0aGF0IHRoaXMgcGxhbiB3YXMgYmVpbmcgYWdpdGF0ZWQuIEFuZCBOZW9uIHNhaWQgdGhhdCBYZW5vcGhvbiBoYWQgd29uIG92ZXIgdGhlIG90aGVyIGdlbmVyYWxzIGFuZCB3YXMgaW50ZW5kaW5nIHRvIGRlY2VpdmUgdGhlIHNvbGRpZXJzIGFuZCBsZWFkIHRoZW0gYmFjayB0byB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIyNjMiIGtleT0idGduLDcwMTIyNjMiPlBoYXNpczwvcGxhY2VOYW1lPi4KPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlVwb24gaGVhcmluZyB0aGVzZSB3b3JkcyB0aGUgc29sZGllcnMgd2VyZSBleGNlZWRpbmdseSBhbmdyeTsgbWVldGluZ3Mgd2VyZSBoZWxkLCBncm91cHMgb2YgdGhlbSBjb2xsZWN0ZWQsIGFuZCBpdCB3YXMgZ3JlYXRseSB0byBiZSBmZWFyZWQgdGhhdCB0aGV5IHdvdWxkIGRvIHRoZSBzb3J0IG9mIHRoaW5ncyB0aGV5IGhhZCBkb25lIHRvIHRoZSBoZXJhbGRzIG9mIHRoZSBDb2xjaGlhbnMgYW5kIHRoZSBtYXJrZXQgY2xlcmtzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QXMgZGVzY3JpYmVkIGJ5IFhlbm9waG9uIGluIHRoZSBmb2xsb3dpbmcgc3BlZWNoLCAgMTMgZmYuPC9ub3RlPgo8bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+V2hlbiBYZW5vcGhvbiBiZWNhbWUgYXdhcmUgb2YgdGhlIHNpdHVhdGlvbiwgaGUgZGVjaWRlZCB0byBjYWxsIGFuIGFzc2VtYmx5IG9mIHRoZSBtZW4gYXMgc3BlZWRpbHkgYXMgcG9zc2libGUgYW5kIG5vdCB0byBhbGxvdyB0aGVtIHRvIGdhdGhlciBvZiB0aGVpciBvd24gYWNjb3JkOyBzbyBoZSBkaXJlY3RlZCB0aGUgaGVyYWxkIHRvIGNhbGwgYW4gYXNzZW1ibHkuCjxtaWxlc3RvbmUgbj0iNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYXMgc29vbiBhcyB0aGUgc29sZGllcnMgaGVhcmQgdGhlIGhlcmFsZCwgdGhleSBydXNoZWQgdG9nZXRoZXIgd2l0aCB0aGUgdXRtb3N0IHJlYWRpbmVzcy4gVGhlbiBYZW5vcGhvbiwgd2l0aG91dCBtZW50aW9uaW5nIGFnYWluc3QgdGhlIGdlbmVyYWxzIHRoZSBtYXR0ZXIgb2YgdGhlaXIgdmlzaXQgdG8gaGltLCBzcG9rZSBhcyBmb2xsb3dzOgo8bWlsZXN0b25lIG49IjUiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIGhlYXIsIHNvbGRpZXJzLCB0aGF0IHNvbWUgb25lIGlzIGJyaW5naW5nIGEgY2hhcmdlIGFnYWluc3QgbWUsIG5hbWVseSwgdGhhdCBJIGFtIGdvaW5nIHRvIGRlY2VpdmUgeW91IGFuZCBsZWFkIHlvdSB0byB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIyNjMiIGtleT0idGduLDcwMTIyNjMiPlBoYXNpczwvcGxhY2VOYW1lPi4gSW4gdGhlIG5hbWUgb2YgdGhlIGdvZHMsIHRoZW4sIGdpdmUgZWFyIHRvIG15IHdvcmRzLCBhbmQgaWYgaXQgYXBwZWFycyB0aGF0IEkgYW0gZ3VpbHR5IG9mIHdyb25nLCBJIG91Z2h0IG5vdCB0byBsZWF2ZSB0aGlzIHNwb3Qgd2l0aG91dCBwYXlpbmcgdGhlIHBlbmFsdHk7IGJ1dCBpZiBpdCBhcHBlYXJzIHRvIHlvdSB0aGF0IG15IGFjY3VzZXJzIGFyZSBndWlsdHkgb2Ygd3JvbmcsIHRoZXkgb3VnaHQgdG8gYmUgZGVhbHQgd2l0aCBpbiBzdWNoIG1hbm5lciBhcyB0aGV5IGRlc2VydmUuCjxtaWxlc3RvbmUgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz5Zb3UgZG91YnRsZXNzIGtub3cs4oCdIGhlIGNvbnRpbnVlZCwg4oCcd2hlcmUgdGhlIHN1biByaXNlcyBhbmQgd2hlcmUgaXQgc2V0czsgbGlrZXdpc2UsIHRoYXQgaWYgYSBtYW4gaXMgdG8gZ28gdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgaGUgbXVzdCBqb3VybmV5IHRvd2FyZCB0aGUgd2VzdCwgd2hpbGUgaWYgaGUgd2lzaGVzIHRvIGdvIHRvIHRoZSBsYW5kcyBvZiB0aGUgYmFyYmFyaWFucywgaGUgbXVzdCB0cmF2ZWwgaW4gdGhlIG9wcG9zaXRlIGRpcmVjdGlvbiwgdGhhdCBpcywgdG93YXJkIHRoZSBlYXN0LiBOb3cgaXMgdGhlcmUgYW55IG9uZSB3aG8gY291bGQgZGVjZWl2ZSB5b3UgaW4gdGhpcyBtYXR0ZXIsIGJ5IG1haW50YWluaW5nIHRoYXQgdGhlIHBsYWNlIHdoZXJlIHRoZSBzdW4gcmlzZXMgaXMgdGhlIG9uZSB3aGVyZSBpdCBzZXRzIGFuZCB0aGUgcGxhY2Ugd2hlcmUgaXQgc2V0cyBpcyB0aGUgb25lIHdoZXJlIGl0IHJpc2VzPwo8bWlsZXN0b25lIG49IjciIHVuaXQ9InNlY3Rpb24iIC8+QWdhaW4sIHlvdSBzdXJlbHkga25vdyB0aGlzIGFsc28sIHRoYXQgdGhlIG5vcnRoIHdpbmQgY2FycmllcyBvbmUgb3V0IG9mIHRoZSBFdXhpbmUgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgd2hpbGUgdGhlIHNvdXRoIHdpbmQgY2FycmllcyB5b3Ugd2l0aGluLCB0byB0aGUgUGhhc2lz4oCUaW5kZWVkLCB0aGUgc2F5aW5nIGlzLCBgV2hlbiB0aGUgbm9ydGggd2luZCBkb3RoIGJsb3csIGZhaXIgdm95YWdpbmcgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPi4nIEluIHRoaXMgbWF0dGVyLCBhZ2FpbiwgaXMgaXQgcG9zc2libGUgdGhhdCBhbnkgb25lIGNvdWxkIGRlY2VpdmUgeW91IGludG8gZW1iYXJraW5nIHdoZW4gdGhlIHNvdXRoIHdpbmQgaXMgYmxvd2luZz8KPG1pbGVzdG9uZSBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBJIGFtIGdvaW5nIHRvIHB1dCB5b3UgYWJvYXJkLCB5b3UgbWF5IHNheSwgd2hlbiBpdCBpcyBjYWxtLiBXZWxsLCBJIHNoYWxsIGJlIHNhaWxpbmcgb24gb25lIHNoaXAsIHlvdSBvbiBhIGh1bmRyZWQgYXQgbGVhc3QuIEhvdywgdGhlbiwgY291bGQgSSBlaXRoZXIgZm9yY2UgeW91IHRvIHZveWFnZSBhbG9uZyB3aXRoIG1lIGlmIHlvdSBkaWQgbm90IGNob29zZSwgb3IgZGVjZWl2ZSB5b3UgaW50byBmb2xsb3dpbmcgbXkgbGVhZD8KPG1pbGVzdG9uZSBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBzdXBwb3NlIHlvdSBoYXZlIGJlZW4gZGVjZWl2ZWQgYW5kIGJld2l0Y2hlZCBieSBtZSBhbmQgd2UgaGF2ZSBjb21lIHRvIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMjI2MyIga2V5PSJ0Z24sNzAxMjI2MyI+UGhhc2lzPC9wbGFjZU5hbWU+OyB3ZSBhY2NvcmRpbmdseSBkaXNlbWJhcmsgdXBvbiB0aGUgc2hvcmU7IHlvdSB3aWxsIHBlcmNlaXZlLCBsaWtlbHkgZW5vdWdoLCB0aGF0IHlvdSBhcmUgbm90IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT47IGFuZCBJLCB3aG8gaGF2ZSBkb25lIHRoZSBkZWNlaXZpbmcsIHdpbGwgYmUgb25lIGxvbmUgbWFuLCB3aGlsZSB5b3UsIHRoZSBkZWNlaXZlZCwgd2lsbCBiZSBjbG9zZSB0byB0ZW4gdGhvdXNhbmQsIHdpdGggYXJtcyBpbiB5b3VyIGhhbmRzLiBUaGVuIGhvdyBjb3VsZCBhIG1hbiBicmluZyBkb3duIHB1bmlzaG1lbnQgdXBvbiBoaW1zZWxmIG1vcmUgc3VyZWx5IHRoYW4gYnkgcGxhbm5pbmcgaW4gdGhhdCB3YXkgZm9yIGhpbXNlbGYgYW5kIGZvciB5b3U/CjxtaWxlc3RvbmUgbj0iMTAiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOYXksIHRoZXNlIGFyZSB0aGUgc3RvcmllcyBvZiBmb29saXNoIG1lbiwgamVhbG91cyBvZiBtZSBiZWNhdXNlIEkgZW5qb3kgaG9ub3VyIGF0IHlvdXIgaGFuZHMuIEFuZCB5ZXQgdGhleSBzaG91bGQgbm90IGluIGZhaXJuZXNzIGZlZWwgc3VjaCBqZWFsb3VzeTsgZm9yIHdob20gYW1vbmcgdGhlbSBkbyBJIGhpbmRlciBlaXRoZXIgZnJvbSBzYXlpbmcgYW55IGdvb2Qgd29yZCBoZSBjYW4gYmVmb3JlIHlvdSwgb3IgZnJvbSBmaWdodGluZyBpZiBoZSB3aWxsIGluIHlvdXIgYmVoYWxmIGFuZCBoaXMgb3duLCBvciBmcm9tIGJlaW5nIHdhdGNoZnVsIGluIGhpcyBjYXJlIGZvciB5b3VyIHNhZmV0eT8gV2VsbCwgdGhlbiwgZG8gSSBzdGFuZCBpbiBhbnkgb25lJ3Mgd2F5IHdoZW4geW91IGFyZSBjaG9vc2luZyBjb21tYW5kZXJzPyBJIHlpZWxkLCBsZXQgaGltIGJlIGNvbW1hbmRlcjsgb25seSBsZXQgaXQgYmUgc2hvd24gdGhhdCBoZSByZW5kZXJzIHlvdSBnb29kIHNlcnZpY2UuCjxtaWxlc3RvbmUgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBteSBwYXJ0LCBob3dldmVyLCB3aGF0IEkgaGF2ZSBzYWlkIG9uIHRoZXNlIHBvaW50cyBzZWVtcyB0byBtZSBzdWZmaWNpZW50OyBidXQgaWYgYW55IG9uZSBhbW9uZyB5b3UgaW1hZ2luZXMgZWl0aGVyIHRoYXQgaGUgY291bGQgYmUgZGVjZWl2ZWQgaGltc2VsZiBieSBzdWNoIHRhbGVzLCBvciBjb3VsZCBkZWNlaXZlIGFub3RoZXIgYnkgdGhlc2UgdGFsZXMsIGxldCBoaW0gc3BlYWsgYW5kIGV4cGxhaW4uCjxtaWxlc3RvbmUgbj0iMTIiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIHdoZW4geW91IGhhdmUgaGFkIGVub3VnaCBvZiB0aGlzLCBkbyBub3QgZ28gYXdheSB1bnRpbCB5b3UgaGF2ZSBoZWFyZCB3aGF0IG1hbm5lciBvZiBldmlsIEkgc2VlIGJlZ2lubmluZyB0byBzaG93IGl0c2VsZiBpbiB0aGUgYXJteTsgZm9yIGlmIGl0IGNvbWVzIHVwb24gdXMgYW5kIHByb3ZlcyB0byBiZSBhcyBzZXJpb3VzIGFzIGl0IG5vdyBzaG93cyBzaWducyBvZiBiZWluZywgaXQgaXMgdGltZSBmb3IgdXMgdG8gYmUgdGFraW5nIGNvdW5zZWwgZm9yIG91cnNlbHZlcywgaW4gb3JkZXIgdGhhdCB3ZSBtYXkgbm90IHN0YW5kIHJldmVhbGVkIGFzIG1vc3Qgd2lja2VkIGFuZCBiYXNlIG1lbiwgYm90aCBpbiB0aGUgc2lnaHQgb2YgZ29kcyBhbmQgbWFua2luZCwgb2YgZnJpZW5kcyBhbmQgZW5lbWllcy7igJ0KPG1pbGVzdG9uZSBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlVwb24gaGVhcmluZyB0aGVzZSB3b3JkcyB0aGUgc29sZGllcnMgZmVsbCB0byB3b25kZXJpbmcgd2hhdCB0aGUgdGhpbmcgd2FzLCBhbmQgdGhleSBiYWRlIFhlbm9waG9uIGdvIG9uLiBTbyBoZSBiZWdhbiBhZ2Fpbjog4oCcWW91IGtub3csIHBlcmhhcHMsIHRoYXQgaW4gdGhlIG1vdW50YWlucyB0aGVyZSB3ZXJlIGJhcmJhcmlhbiBzdHJvbmdob2xkcywgZnJpZW5kbHkgdG8gdGhlIENlcmFzdW50aWFucywgZnJvbSB3aGljaCBwZW9wbGUgd291bGQgY29tZSBkb3duIGFuZCBzZWxsIHlvdSBjYXR0bGUgYW5kIG90aGVyIHRoaW5ncyB3aGljaCB0aGV5IGhhZCwgYW5kIGFsc28sIEkgYmVsaWV2ZSwgc29tZSBvZiB5b3Ugd2VudCB0byB0aGUgbmVhcmVzdCBvZiB0aGVzZSBzdHJvbmdob2xkcyBhbmQgZGlkIHNvbWUgYnV5aW5nIGFuZCBjYW1lIGJhY2sgYWdhaW4uCjxtaWxlc3RvbmUgbj0iMTQiIHVuaXQ9InNlY3Rpb24iIC8+Q2xlYXJldHVzIHRoZSBjYXB0YWluLCBsZWFybmluZyB0aGF0IHRoaXMgcGxhY2Ugd2FzIG5vdCBvbmx5IHNtYWxsLCBidXQgYWxzbyB1bmd1YXJkZWQsIGZvciB0aGUgcmVhc29uIHRoYXQgaXRzIGluaGFiaXRhbnRzIGRlZW1lZCB0aGVtc2VsdmVzIGZyaWVuZGx5LCBzZXQgZm9ydGggYWdhaW5zdCB0aGVtIGJ5IG5pZ2h0IHdpdGggdGhlIGlkZWEgb2YgcGx1bmRlcmluZyB0aGUgcGxhY2UsIGFuZCB3aXRob3V0IGEgd29yZCB0byBhbnkgb25lIG9mIHVzLgo8bWlsZXN0b25lIG49IjE1IiB1bml0PSJzZWN0aW9uIiAvPkl0IHdhcyBoaXMgaW50ZW50aW9uLCBpbiBjYXNlIGhlIHNob3VsZCBjYXB0dXJlIHRoaXMgc3Ryb25naG9sZCwgbm90IHRvIGNvbWUgYmFjayBhZ2FpbiB0byB0aGUgYXJteSwgYnV0IHRvIGVtYmFyayBvbiBhIHZlc3NlbCB1cG9uIHdoaWNoIGhpcyBtZXNzbWF0ZXMgY2hhbmNlZCB0byBiZSBzYWlsaW5nIGFsb25nIHRoZSBjb2FzdCwgdG8gcHV0IGFib2FyZCB3aGF0ZXZlciBwbHVuZGVyIGhlIG1pZ2h0IHNlY3VyZSwgYW5kIHNhaWxpbmcgb3V0IG9mIHRoZSBFdXhpbmUgdG8gZ28gYXdheS4gSW5kZWVkLCBhcyBJIG5vdyBsZWFybiwgaGlzIG1lc3NtYXRlcyBvbiB0aGUgdmVzc2VsIGhhZCBjb25jbHVkZWQgYW4gYWdyZWVtZW50IHdpdGggaGltIHRvIHRoaXMgZWZmZWN0Lgo8bWlsZXN0b25lIG49IjE2IiB1bml0PSJzZWN0aW9uIiAvPkhlIGFjY29yZGluZ2x5IHN1bW1vbmVkIGFsbCB0aGUgbWVuIGhlIGNvdWxkIHBlcnN1YWRlLCBhbmQgc2V0IG91dCBhdCB0aGVpciBoZWFkIHRvIG1hcmNoIGFnYWluc3QgdGhlIHN0cm9uZ2hvbGQuIFdoaWxlIGhlIHdhcyBzdGlsbCBvbiB0aGUgbWFyY2gsIGhvd2V2ZXIsIHRoZSBicmVhayBvZiBkYXkgc3VycHJpc2VkIGhpbSwgYW5kIHRoZSBwZW9wbGUgb2YgdGhlIHBsYWNlIGdhdGhlcmVkIHRvZ2V0aGVyIGFuZCwgYnkgdGhyb3dpbmcgbWlzc2lsZXMgYW5kIGRlYWxpbmcgYmxvd3MgZnJvbSBzdHJvbmcgcG9zaXRpb25zLCBraWxsZWQgQ2xlYXJldHVzIGFuZCBhIGdvb2QgbWFueSBvZiBoaXMgZm9sbG93ZXJzLCBhbHRob3VnaCBzb21lIG9mIHRoZW0gZGlkIG1ha2UgdGhlaXIgd2F5IGJhY2sgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwODYzNTciIGtleT0idGduLDEwODYzNTciPkNlcmFzdXM8L3BsYWNlTmFtZT4uCjxtaWxlc3RvbmUgbj0iMTciIHVuaXQ9InNlY3Rpb24iIC8+QWxsIHRoaXMgaGFwcGVuZWQgb24gdGhlIGRheSB3aGVuIHdlIHdlcmUgc2V0dGluZyBmb3J0aCB0byBjb21lIGhpdGhlciBieSBsYW5kOyBhbmQgc29tZSBvZiB0aG9zZSB3aG8gd2VyZSBnb2luZyBieSBzZWEgd2VyZSBzdGlsbCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTA4NjM1NyIga2V5PSJ0Z24sMTA4NjM1NyI+Q2VyYXN1czwvcGxhY2VOYW1lPiwgbm90IGhhdmluZyBhcyB5ZXQgc2V0IHNhaWwuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBZnRlciB0aGlzLCBhcyB0aGUgQ2VyYXN1bnRpYW5zIHNheSwgdGhlcmUgYXJyaXZlZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTA4NjM1NyIga2V5PSJ0Z24sMTA4NjM1NyI+Q2VyYXN1czwvcGxhY2VOYW1lPiB0aHJlZSBvZiB0aGUgaW5oYWJpdGFudHMgb2YgdGhlIHN0cm9uZ2hvbGQsIGFsbCBlbGRlcmx5IG1lbiwgZGVzaXJpbmcgdG8gY29tZSBiZWZvcmUgb3VyIGdlbmVyYWwgYXNzZW1ibHkuCjxtaWxlc3RvbmUgbj0iMTgiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IHNpbmNlIHRoZXkgZGlkIG5vdCBmaW5kIHVzLCB0aGV5IGFkZHJlc3NlZCB0aGVtc2VsdmVzIHRvIHRoZSBDZXJhc3VudGlhbnMsIHNheWluZyB0aGF0IHRoZXkgd29uZGVyZWQgd2h5IHdlIGhhZCBzZWVuIGZpdCB0byBtYWtlIGFuIGF0dGFjayB1cG9uIHRoZW0uIFdoZW4sIGhvd2V2ZXIsIHRoZSBDZXJhc3VudGlhbnMgcmVwbGllZCwgc28gdGhlaXIgc3RhdGVtZW50IHJhbiwgdGhhdCBpdCB3YXMgbm90IGJ5IHB1YmxpYyBhdXRob3JpdHkgdGhhdCB0aGUgYWZmYWlyIHRvb2sgcGxhY2UsIHRoZSBlbnZveXMgd2VyZSBwbGVhc2VkLCBhbmQgd2VyZSBpbnRlbmRpbmcgdG8gc2FpbCBoaXRoZXIgaW4gb3JkZXIgdG8gdGVsbCB1cyB3aGF0IGhhZCBoYXBwZW5lZCwgYW5kIHRvIHVyZ2UgdGhhdCB3ZSBzaG91bGQgb3Vyc2VsdmVzIHRha2UgYW5kIGJ1cnkgdGhlIGJvZGllcyBvZiBvdXIgZGVhZC4KPG1pbGVzdG9uZSBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaXQgY2hhbmNlZCB0aGF0IHNvbWUgb2YgdGhlIEdyZWVrcyB3aG8gaGFkIGVzY2FwZWQgd2VyZSBzdGlsbCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTA4NjM1NyIga2V5PSJ0Z24sMTA4NjM1NyI+Q2VyYXN1czwvcGxhY2VOYW1lPjsgYW5kIHdoZW4gdGhleSBsZWFybmVkIHdoaXRoZXIgdGhlIGJhcmJhcmlhbnMgd2VyZSBnb2luZywgdGhleSBjb21taXR0ZWQgdGhlIHNoYW1lbGVzc25lc3Mgb2Ygbm90IG9ubHkgYXR0YWNraW5nIHRoZW0gd2l0aCBzdG9uZXMgdGhlbXNlbHZlcywgYnV0IHVyZ2luZyBvdGhlcnMgdG8gZG8gdGhlIHNhbWUuIEFuZCB0aGUgbWVuIHdlcmUga2lsbGVkLCB0aGVzZSB0aHJlZSwgd2hvIHdlcmUgYW1iYXNzYWRvcnPigJRzdG9uZWQgdG8gZGVhdGguCjxtaWxlc3RvbmUgbj0iMjAiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXaGVuIHRoaXMgaGFkIHRha2VuIHBsYWNlLCB0aGUgQ2VyYXN1bnRpYW5zIGNhbWUgdG8gdXMgYW5kIHRvbGQgdXMgb2YgdGhlIGFmZmFpcjsgYW5kIHdlIGdlbmVyYWxzLCB1cG9uIGhlYXJpbmcgdGhlIHN0b3J5LCB3ZXJlIGRpc3RyZXNzZWQgYXQgd2hhdCBoYWQgaGFwcGVuZWQsIGFuZCB3ZSBwcm9jZWVkZWQgdG8gdGFrZSBjb3Vuc2VsIHdpdGggdGhlIENlcmFzdW50aWFucyBhcyB0byBob3cgdGhlIGJvZGllcyBvZiB0aGUgR3JlZWsgZGVhZCBtaWdodCBiZSBidXJpZWQuCjxtaWxlc3RvbmUgbj0iMjEiIHVuaXQ9InNlY3Rpb24iIC8+V2hpbGUgd2Ugd2VyZSBpbiBzZXNzaW9uIG91dHNpZGUgdGhlIGNhbXAsIHdlIHN1ZGRlbmx5IGhlYXJkIGEgZ3JlYXQgdXByb2FyIGFuZCBzaG91dHMgb2YgYFN0cmlrZSEgc3RyaWtlISBwZWx0ISBwZWx0IScgYW5kIGluIGEgbW9tZW50IHdlIHNhdyBhIGNyb3dkIG9mIG1lbiBydXNoaW5nIHRvd2FyZCB1cyB3aXRoIHN0b25lcyBpbiB0aGVpciBoYW5kcyBhbmQgb3RoZXJzIHBpY2tpbmcgdXAgc3RvbmVzLgo8bWlsZXN0b25lIG49IjIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGUgQ2VyYXN1bnRpYW5zLCBoYXZpbmcgd2l0bmVzc2VkLCBtYXJrIHlvdSwgdGhlIGFmZmFpciBpbiB0aGVpciBvd24gY2l0eSwgd2VyZSBuYXR1cmFsbHkgdGVycmlmaWVkLCBhbmQgaHVycmllZCBiYWNrIHRvd2FyZCB0aGVpciBzaGlwcy4gRm9yIHRoYXQgbWF0dGVyLCBieSBaZXVzLCB0aGVyZSB3ZXJlIHNvbWUgb2Ygb3VyIG93biBudW1iZXIgd2hvIHdlcmUgdGVycmlmaWVkLgo8bWlsZXN0b25lIG49IjIzIiB1bml0PSJzZWN0aW9uIiAvPkkgd2VudCB1cCB0byB0aGUgbWVuLCBob3dldmVyLCBhbmQgYXNrZWQgd2hhdCB0aGUgdHJvdWJsZSB3YXMuIFNvbWUgb2YgdGhlbSBkaWQgbm90IGtub3cgYXQgYWxsLCBidXQgbmV2ZXJ0aGVsZXNzIHRoZXkgaGFkIHN0b25lcyBpbiB0aGVpciBoYW5kcy4gV2hlbiBJIGRpZCBjb21lIHVwb24gYSBtYW4gd2hvIGtuZXcsIGhlIHRvbGQgbWUgdGhhdCB0aGUgbWFya2V0LWNsZXJrcyB3ZXJlIHRyZWF0aW5nIHRoZSBhcm15IG1vc3Qgb3V0cmFnZW91c2x5Lgo8bWlsZXN0b25lIG49IjI0IiB1bml0PSJzZWN0aW9uIiAvPkF0IHRoaXMgbW9tZW50IHNvbWUgb25lIHNhdyB0aGUgbWFya2V0LWNsZXJrLCBaZWxhcmNodXMsIHJldHJlYXRpbmcgdG93YXJkIHRoZSBzZWEsIGFuZCBzZXQgdXAgYSBzaG91dDsgYW5kIHdoZW4gdGhlIHJlc3QgaGVhcmQgaXQsIHRoZXkgcnVzaGVkIHVwb24gaGltIGFzIHRob3VnaCBhIHdpbGQgYm9hciBvciBhIHN0YWcgaGFkIGJlZW4gc2lnaHRlZC4KPG1pbGVzdG9uZSBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm93IHRoZSBDZXJhc3VudGlhbnMsIHNlZWluZyB0aGlzIHJ1c2ggaW4gdGhlaXIgbmVpZ2hib3VyaG9vZCBhbmQgYmVsaWV2aW5nIGl0IHdhcyB1bmRvdWJ0ZWRseSBkaXJlY3RlZCBhZ2FpbnN0IHRoZW1zZWx2ZXMsIHRvb2sgdG8gcnVubmluZyBpbiB0aGVpciBmbGlnaHQgYW5kIHRocmV3IHRoZW1zZWx2ZXMgaW50byB0aGUgc2VhLiBTb21lIG9mIG91ciBvd24gbWVuIGFsc28gcGx1bmdlZCBpbiB3aXRoIHRoZW0sIGFuZCBhbnkgd2hvIGRpZCBub3QgY2hhbmNlIHRvIGtub3cgaG93IHRvIHN3aW0gd2VyZSBkcm93bmVkLgo8bWlsZXN0b25lIG49IjI2IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGF0IHRoaW5rIHlvdSBhYm91dCB0aGVzZSBDZXJhc3VudGlhbnM/IFRoZXkgaGFkIGRvbmUgbm8gd3JvbmcsIGJ1dCB0aGV5IHdlcmUgYWZyYWlkIHRoYXQgYSBraW5kIG9mIG1hZG5lc3MsIHN1Y2ggYXMgYXR0YWNrcyBkb2dzLCBoYWQgc2VpemVkIHVwb24gdXMuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgaWYgdGhlc2UgZG9pbmdzIGFyZSB0byBnbyBvbiBpbiB0aGlzIHdheSwgb2JzZXJ2ZSB3aGF0IHRoZSBzaXR1YXRpb24gb2YgeW91ciBhcm15IHdpbGwgYmUuCjxtaWxlc3RvbmUgbj0iMjciIHVuaXQ9InNlY3Rpb24iIC8+WW91LCB0aGUgZ2VuZXJhbCBib2R5LCB3aWxsIG5vdCBoYXZlIGl0IGluIHlvdXIgcG93ZXIgZWl0aGVyIHRvIHVuZGVydGFrZSB3YXIgdXBvbiB3aG9tIHlvdSBwbGVhc2Ugb3IgdG8gYnJpbmcgd2FyIHRvIGFuIGVuZCwgYnV0IGFueSBpbmRpdmlkdWFsIHdobyB3aXNoZXMgd2lsbCBiZSBsZWFkaW5nIGFuIGFybXkgdG8gZ2FpbiBhbnkgZW5kIGhlIG1heSBkZXNpcmUuIEFuZCBpZiBwZW9wbGUgY29tZSB0byB5b3UgYXMgYW1iYXNzYWRvcnMsIGRlc2lyaW5nIHBlYWNlIG9yIGFueXRoaW5nIGVsc2UsIGFueSB3aG8gY2hvb3NlIHdpbGwga2lsbCB0aGVtIGFuZCBwcmV2ZW50IHlvdSBmcm9tIGhlYXJpbmcgdGhlIHdvcmRzIG9mIHRob3NlIHdobyBjb21lIHRvIGNvbmZlciB3aXRoIHlvdS4KPG1pbGVzdG9uZSBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgdGhlIG1lbiB3aG9tIHlvdSBhcyBhIGJvZHkgbWF5IGNob29zZSBmb3IgY29tbWFuZGVycyB3aWxsIGJlIG9mIG5vIGFjY291bnQsIGJ1dCB3aG9ldmVyIG1heSBjaG9vc2UgaGltc2VsZiBnZW5lcmFsIGFuZCB3aWxsIHJhaXNlIHRoZSBjcnkgYFBlbHQsIHBlbHQsJyB0aGF0IG1hbiB3aWxsIGhhdmUgdGhlIHBvd2VyIHRvIHNsYXkgZWl0aGVyIGNvbW1hbmRlciBvciBwcml2YXRlLCBhbnkgb25lIG9mIHlvdSBoZSBwbGVhc2VzLCB3aXRob3V0IGEgdHJpYWwsIHByb3ZpZGVk4oCUYXMgaW5kZWVkIGl0IGNhbWUgYWJvdXQgaW4gdGhlIHByZXNlbnQgY2FzZeKAlHRoZXJlIGFyZSBwZW9wbGUgd2hvIHdpbGwgb2JleSBoaW0uCjxtaWxlc3RvbmUgbj0iMjkiIHVuaXQ9InNlY3Rpb24iIC8+Q29uc2lkZXIgdGhlIHNvcnQgb2YgdGhpbmdzIHRoZXNlIHNlbGYtY2hvc2VuIGdlbmVyYWxzIGhhdmUgYWN0dWFsbHkgYWNjb21wbGlzaGVkIGZvciB5b3UuIFRha2UgWmVsYXJjaHVzLCB0aGUgbWFya2V0LWNsZXJrOiBzdXBwb3NpbmcgaGUgaGFzIGRvbmUgeW91IHdyb25nLCBoZSBoYXMgc2FpbGVkIG9mZiB3aXRob3V0IHBheWluZyB5b3UgdGhlIHBlbmFsdHk7IHN1cHBvc2luZyBoZSBpcyBub3QgZ3VpbHR5LCBoZSBoYXMgZmxlZCBmcm9tIHRoZSBhcm15IG91dCBvZiBmZWFyIHRoYXQgaGUgbWlnaHQgYmUgc2xhaW4gdW5qdXN0bHkgYW5kIHdpdGhvdXQgYSB0cmlhbC4KPG1pbGVzdG9uZSBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5UYWtlIHRob3NlIHdobyBzdG9uZWQgdG8gZGVhdGggdGhlIGFtYmFzc2Fkb3JzOiB0aGV5IGhhdmUgYWNjb21wbGlzaGVkIHRoaXMgcmVzdWx0LCB0aGF0IHlvdSBhbG9uZSBvZiBhbGwgdGhlIEdyZWVrcyBjYW5ub3QgZ28gdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwODYzNTciIGtleT0idGduLDEwODYzNTciPkNlcmFzdXM8L3BsYWNlTmFtZT4gc2FmZWx5IHVubGVzcyB5b3UgYXJyaXZlIHRoZXJlIHdpdGggYSBzdHJvbmcgZm9yY2U7IGFuZCBhcyBmb3IgdGhlIGRlYWQgd2hvbSBwcmV2aW91c2x5IHRoZSB2ZXJ5IG1lbiB3aG8ga2lsbGVkIHRoZW0gcHJvcG9zZWQgYnVyeWluZywgdGhlIHJlc3VsdCBhY2NvbXBsaXNoZWQgaXMsIHRoYXQgbm93IGl0IGlzIG5vdCBzYWZlIHRvIHBpY2sgdXAgdGhlaXIgYm9kaWVzIGV2ZW4gZm9yIG9uZSB3aG8gY2FycmllcyBhIGhlcmFsZCdzIHN0YWZmLiBGb3Igd2hvIHdpbGwgY2FyZSB0byBnbyBhcyBoZXJhbGQgd2hlbiBoZSBoYXMgdGhlIGJsb29kIG9mIGhlcmFsZHMgdXBvbiBoaXMgaGFuZHM/IFNvIHdlIHJlcXVlc3RlZCB0aGUgQ2VyYXN1bnRpYW5zIHRvIGJ1cnkgdGhlbS4KPG1pbGVzdG9uZSBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vdyBpZiB0aGVzZSB0aGluZ3MgYXJlIHJpZ2h0LCBkbyB5b3Ugc28gcmVzb2x2ZSwgaW4gb3JkZXIgdGhhdCwgd2l0aCB0aGUgdW5kZXJzdGFuZGluZyB0aGF0IHN1Y2ggZGVlZHMgYXJlIHRvIGJlIGRvbmUsIGEgbWFuIG1heSBlc3RhYmxpc2ggaGlzIG93biBwcml2YXRlIGd1YXJkIGFuZCBtYXkgZW5kZWF2b3VyIHRvIGhvbGQgcG9zc2Vzc2lvbiBvZiB0aGUgc3Ryb25nIHBsYWNlcyBvdmVyaGFuZ2luZyBoaW0gb24gdGhlIHJpZ2h0IHdoZW4gaGUgZW5jYW1wcy4KPG1pbGVzdG9uZSBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5JZiwgaG93ZXZlciwgeW91IHRoaW5rIHRoYXQgc3VjaCBkZWVkcyBhcmUgdGhvc2Ugb2Ygd2lsZCBiZWFzdHMgYW5kIG5vdCBvZiBodW1hbiBiZWluZ3MsIGxvb2sgYWJvdXQgZm9yIHNvbWUgbWVhbnMgb2Ygc3RvcHBpbmcgdGhlbTsgb3RoZXJ3aXNlLCBob3csIGluIHRoZSBuYW1lIG9mIFpldXMsIHNoYWxsIHdlIG9mZmVyIGdsYWQgc2FjcmlmaWNlcyB0byB0aGUgZ29kcyB3aGVuIHdlIGFyZSBkb2luZyBpbXBpb3VzIGRlZWRzLCBvciBob3cgc2hhbGwgd2UgZmlnaHQgd2l0aCBlbmVtaWVzIGlmIHdlIGFyZSBzbGF5aW5nIG9uZSBhbm90aGVyPwo8bWlsZXN0b25lIG49IjMzIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGF0IGZyaWVuZGx5IGNpdHkgd2lsbCByZWNlaXZlIHVzIHdoZW4gaXQgc2VlcyBzbyBncmVhdCBsYXdsZXNzbmVzcyBhbW9uZ3N0IHVzPyBXaG8gd2lsbCBkYXJlIHRvIHN1cHBseSB1cyBhIG1hcmtldCBpZiBpbiBtYXR0ZXJzIG9mIHRoZSBncmVhdGVzdCBpbXBvcnQgd2Ugc2hvdyBvdXJzZWx2ZXMgZ3VpbHR5IG9mIHN1Y2ggb2ZmZW5jZXM/IEFuZCBpbiB0aGF0IGxhbmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4uPC9ub3RlPiB3aGVyZSB3ZSBhcmUgYWx3YXlzIGZhbmN5aW5nIHRoYXQgd2Ugc2hhbGwgb2J0YWluIHByYWlzZSBmcm9tIGV2ZXJ5IG9uZSwgd2hvIHdpbGwgcHJhaXNlIHVzIGlmIHdlIGFyZSBtZW4gb2YgdGhpcyBzb3J0PyBGb3Igd2Ugb3Vyc2VsdmVzLCBJIGFtIHF1aXRlIHN1cmUsIHNob3VsZCBzYXkgdGhhdCBwZW9wbGUgd2hvIHBlcmZvcm0gc3VjaCBkZWVkcyBhcmUgc2NvdW5kcmVscy7igJ0KPG1pbGVzdG9uZSBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhlcmV1cG9uIGFsbCByb3NlIGFuZCBwcm9wb3NlZCB0aGF0IHRoZSBtZW4gd2hvIGJlZ2FuIHRoaXMgYWZmYWlyIHNob3VsZCBiZSBkdWx5IHB1bmlzaGVkLCBhbmQgdGhhdCBoZW5jZWZvcnRoIG5vIG9uZSBzaG91bGQgYmUgYWdhaW4gcGVybWl0dGVkIHRvIG1ha2UgYSBiZWdpbm5pbmcgb2YgbGF3bGVzc25lc3M7IGJ1dCBpZiBhbnkgc2hvdWxkIHNvIGJlZ2luLCB0aGV5IHdlcmUgdG8gYmUgcHV0IG9uIHRyaWFsIGZvciB0aGVpciBsaXZlczsgYW5kIHRoZSBnZW5lcmFscyB3ZXJlIHRvIGJyaW5nIGFsbCBvZmZlbmRlcnMgdG8gdHJpYWwsIGFuZCB0cmlhbHMgd2VyZSBsaWtld2lzZSB0byBiZSBoZWxkIGluIHRoZSBtYXR0ZXIgb2YgYW55IG90aGVyIG9mZmVuY2VzIHdoaWNoIGFueSBvbmUgaGFkIGNvbW1pdHRlZCBzaW5jZSB0aGUgdGltZSB3aGVuIDxwZXJzTmFtZT5DeXJ1czwvcGVyc05hbWU+IHdhcyBraWxsZWQ7IGFuZCB0aGV5IGFwcG9pbnRlZCB0aGUgY2FwdGFpbnMgdG8gc2VydmUgYXMgYSBqdXJ5Lgo8bWlsZXN0b25lIG49IjM1IiB1bml0PSJzZWN0aW9uIiAvPkZ1cnRoZXIsIHVwb24gdGhlIHJlY29tbWVuZGF0aW9uIG9mIFhlbm9waG9uLCBhbmQgYnkgdGhlIGFkdmljZSBvZiB0aGUgc29vdGhzYXllcnMsIGl0IHdhcyByZXNvbHZlZCB0byBwdXJpZnkgdGhlIGFybXkuIFNvIHRoZSByaXRlcyBvZiBwdXJpZmljYXRpb24gd2VyZSBwZXJmb3JtZWQuCjxtaWxlc3RvbmUgbj0iOCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3YXMgbGlrZXdpc2UgcmVzb2x2ZWQgdGhhdCB0aGUgZ2VuZXJhbHMgc2hvdWxkIHVuZGVyZ28gYW4gaW5xdWlyeSB3aXRoIHJlZmVyZW5jZSB0byB0aGVpciBwYXN0IGNvbmR1Y3QuIFdoZW4gdGhleSBwcmVzZW50ZWQgdGhlaXIgc3RhdGVtZW50cywgUGhpbGVzaXVzIGFuZCBYYW50aGljbGVzIHdlcmUgY29uZGVtbmVkLCBmb3IgdGhlaXIgY2FyZWxlc3MgZ3VhcmRpbmcgb2YgdGhlIG1lcmNoYW50bWVuJ3MgY2FyZ29lcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiA8YmlibCBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjEuMTYiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS4xLjE2PC9iaWJsPi48L25vdGU+IHRvIHBheSB0aGUgbG9zcyBpbmN1cnJlZCwgbmFtZWx5LCB0d2VudHkgbWluYXMsIGFuZCBTb3BoYWVuZXR1cywgZm9yIG5lZ2xlY3Qgb2YgZHV0eSBpbiB0aGUgb2ZmaWNlIHRvIHdoaWNoIGhlIGhhZCBiZWVuIGNob3Nlbiw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiA8YmlibCBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjMuMSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjMuMTwvYmlibD4sIGFuZCBzZWUgY3JpdGljYWwgbm90ZS48L25vdGU+IHdhcyBmaW5lZCB0ZW4gbWluYXMuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BY2N1c2F0aW9ucyB3ZXJlIGFsc28gbWFkZSBhZ2FpbnN0IFhlbm9waG9uIGJ5IGNlcnRhaW4gbWVuIHdobyBjbGFpbWVkIHRoYXQgaGUgaGFkIGJlYXRlbiB0aGVtLCBhbmQgc28gYnJvdWdodCB0aGUgY2hhcmdlIG9mIHdhbnRvbiBhc3NhdWx0Lgo8bWlsZXN0b25lIG49IjIiIHVuaXQ9InNlY3Rpb24iIC8+WGVub3Bob24gYmFkZSB0aGUgZmlyc3QgbWFuIHdobyBzcG9rZSB0byBzdGF0ZSB3aGVyZSBpdCB3YXMgdGhhdCBoZSBoYWQgc3RydWNrIGhpbS4gSGUgcmVwbGllZCwg4oCcSW4gdGhlIHBsYWNlIHdoZXJlIHdlIHdlcmUgcGVyaXNoaW5nIHdpdGggY29sZCBhbmQgdGhlcmUgd2FzIGFuIGVub3Jtb3VzIGFtb3VudCBvZiBzbm93LuKAnQo8bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIFhlbm9waG9uIHNhaWQsIOKAnFdlbGwsIHJlYWxseSwgd2l0aCB3ZWF0aGVyIG9mIHRoZSBzb3J0IHlvdSBkZXNjcmliZSBhbmQgcHJvdmlzaW9ucyB1c2VkIHVwIGFuZCBubyBjaGFuY2UgZXZlbiB0byBnZXQgYSBzbWVsbCBvZiB3aW5lLCB3aGVuIG1hbnkgb2YgdXMgd2VyZSBiZWNvbWluZyBleGhhdXN0ZWQgd2l0aCBoYXJkc2hpcHMgYW5kIHRoZSBlbmVteSB3ZXJlIGF0IG91ciBoZWVscywgaWYgYXQgc3VjaCBhIHRpbWUgYXMgdGhhdCBJIHdhbnRvbmx5IGFidXNlZCB5b3UsIEkgYWRtaXQgdGhhdCBJIGFtIG1vcmUgd2FudG9uIGV2ZW4gdGhhbiB0aGUgYXNzLCB3aGljaCwgYmVjYXVzZSBvZiBpdHMgd2FudG9ubmVzcywgc28gdGhlIHNheWluZyBydW5zLCBpcyBub3Qgc3ViamVjdCB0byBmYXRpZ3VlLiBOZXZlcnRoZWxlc3MsIGRvIHRlbGwgdXMs4oCdIGhlIHNhaWQsIOKAnGZvciB3aGF0IHJlYXNvbiB5b3Ugd2VyZSBzdHJ1Y2suCjxtaWxlc3RvbmUgbj0iNCIgdW5pdD0ic2VjdGlvbiIgLz5EaWQgSSBhc2sgeW91IGZvciBzb21ldGhpbmcsIGFuZCB0aGVuIHN0cmlrZSB5b3UgYmVjYXVzZSB5b3Ugd291bGQgbm90IGdpdmUgaXQgdG8gbWU/IERpZCBJIGRlbWFuZCBzb21ldGhpbmcgYmFjaz8gV2FzIGl0IGluIGEgZmlnaHQgb3ZlciBhIGZhdm91cml0ZT8gV2FzIGl0IGFuIGFjdCBvZiBkcnVua2VuIHZpb2xlbmNlP+KAnQo8bWlsZXN0b25lIG49IjUiIHVuaXQ9InNlY3Rpb24iIC8+V2hlbiB0aGUgbWFuIHJlcGxpZWQgdGhhdCBpdCB3YXMgbm9uZSBvZiB0aGVzZSB0aGluZ3MsIFhlbm9waG9uIGFza2VkIGhpbSBpZiBoZSB3YXMgYSBob3BsaXRlLiBIZSBzYWlkIG5vLiBXYXMgaGUgYSBwZWx0YXN0LCB0aGVuPyBObywgbm90IHRoYXQgZWl0aGVyLCBoZSBzYWlkLCBidXQgaGUgaGFkIGJlZW4gZGV0YWlsZWQgYnkgaGlzIG1lc3NtYXRlcywgYWx0aG91Z2ggaGUgd2FzIGEgZnJlZSBtYW4sIHRvIGRyaXZlIGEgbXVsZS4KPG1pbGVzdG9uZSBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkF0IHRoYXQgWGVub3Bob24gcmVjb2duaXplZCBoaW0sIGFuZCBhc2tlZDog4oCcQXJlIHlvdSB0aGUgZmVsbG93IHdobyBjYXJyaWVkIHRoZSBzaWNrIG1hbj/igJ0g4oCcWWVzLCBieSBaZXVzLOKAnSBoZSByZXBsaWVkLCDigJxmb3IgeW91IGZvcmNlZCBtZSB0byBkbyBzbzsgYW5kIHlvdSBzY2F0dGVyZWQgbXkgbWVzc21hdGVzJyBiYWdnYWdlIGFsbCBhYm91dC7igJ0KPG1pbGVzdG9uZSBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPuKAnFdoeSwgdGhlIHNjYXR0ZXJpbmcs4oCdIHNhaWQgWGVub3Bob24sIOKAnHdhcyBhZnRlciB0aGlzIGZhc2hpb246IEkgZGlzdHJpYnV0ZWQgaXQgYW1vbmcgb3RoZXJzIHRvIGNhcnJ5IGFuZCBkaXJlY3RlZCB0aGVtIHRvIGJyaW5nIGl0IGJhY2sgdG8gbWUsIGFuZCB3aGVuIEkgZ290IGl0IGJhY2ssIEkgcmV0dXJuZWQgdGhlIHdob2xlIG9mIGl0IHRvIHlvdSBpbnRhY3Qgd2hlbiB5b3UsIGZvciB5b3VyIHBhcnQsIGhhZCBzaG93biBtZSB0aGUgc2ljayBtYW4uIEJ1dCBsaXN0ZW4sIGFsbCBvZiB5b3Us4oCdIGhlIGNvbnRpbnVlZCwg4oCcYW5kIGhlYXIgaG93IHRoZSBhZmZhaXIgaGFwcGVuZWQ7IGZvciB0aGUgc3RvcnkgaXMgd29ydGggaGVhcmluZy4KPG1pbGVzdG9uZSBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQSBtYW4gd2FzIGJlaW5nIGxlZnQgYmVoaW5kIGJlY2F1c2UgaGUgd2FzIHVuYWJsZSB0byBrZWVwIGdvaW5nIGFueSBsb25nZXIuIEkgd2FzIGFjcXVhaW50ZWQgd2l0aCB0aGUgbWFuIG9ubHkgc28gZmFyIGFzIHRvIGtub3cgdGhhdCBoZSB3YXMgb25lIG9mIG91ciBudW1iZXIsIGFuZCBJIGZvcmNlZCB5b3UsIHNpciwgdG8gY2FycnkgaGltIGluIG9yZGVyIHRoYXQgaGUgbWlnaHQgbm90IHBlcmlzaDsgZm9yLCBhcyBJIHJlbWVtYmVyLCB0aGUgZW5lbXkgd2VyZSBmb2xsb3dpbmcgYWZ0ZXIgdXMu4oCdIFRvIHRoYXQgdGhlIGZlbGxvdyBhZ3JlZWQuCjxtaWxlc3RvbmUgbj0iOSIgdW5pdD0ic2VjdGlvbiIgLz7igJxXZWxsLOKAnSBYZW5vcGhvbiBjb250aW51ZWQsIOKAnGFmdGVyIEkgaGFkIHNlbnQgeW91IG9uIGFoZWFkLCBJIG92ZXJ0b29rIHlvdSBhZ2FpbiwgYXMgSSBjYW1lIGFsb25nIHdpdGggdGhlIHJlYXJndWFyZCwgYW5kIGZvdW5kIHlvdSBkaWdnaW5nIGEgaG9sZSB0byBidXJ5IHRoZSBtYW4gaW4sIGFuZCBJIHN0b3BwZWQgYW5kIGNvbW1lbmRlZCB5b3UuCjxtaWxlc3RvbmUgbj0iMTAiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IHdoZW4sIGFzIHdlIHdlcmUgc3RhbmRpbmcgYnksIHRoZSBtYW4gZHJldyB1cCBoaXMgbGVnLCBhbGwgb2YgdXMgY3JpZWQgb3V0LCBgVGhlIG1hbiBpcyBhbGl2ZSc7IGFuZCB5b3Ugc2FpZCwgYExldCBoaW0gYmUgYWxpdmUganVzdCBhcyBtdWNoIGFzIGhlIHBsZWFzZXMsIEksIGZvciBteSBwYXJ0LCBhbSBub3QgZ29pbmcgdG8gY2FycnkgaGltLicgVGhlbiBJIHN0cnVjayB5b3U7IHlvdXIgc3RvcnkgaXMgdHJ1ZTsgZm9yIGl0IGxvb2tlZCB0byBtZSBhcyBpZiB5b3Uga25ldyB0aGF0IGhlIHdhcyBhbGl2ZS7igJ0KPG1pbGVzdG9uZSBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz7igJxXZWxsLCB3aGF0IG9mIHRoYXQs4oCdIHRoZSBmZWxsb3cgc2FpZDsg4oCcZGlkbid0IGhlIGRpZSBhbGwgdGhlIHNhbWUgYWZ0ZXIgSSBoYWQgc2hvd24gaGltIHRvIHlvdT/igJ0g4oCcV2h5LOKAnSBzYWlkIFhlbm9waG9uLCDigJxhbGwgb2YgdXMgYXJlIGxpa2V3aXNlIGdvaW5nIHRvIGRpZTsgYnV0IHNob3VsZCB3ZSBvbiB0aGF0IGFjY291bnQgYmUgYnVyaWVkIGFsaXZlP+KAnQo8bWlsZXN0b25lIG49IjEyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIHRoaXMgZmVsbG93LCBldmVyeWJvZHkgY3JpZWQgb3V0IHRoYXQgWGVub3Bob24gaGFkIGdpdmVuIGhpbSBmZXdlciBibG93cyB0aGFuIGhlIGRlc2VydmVkLiBUaGVuIGhlIGRpcmVjdGVkIHRoZSByZXN0IHRvIHN0YXRlIHRoZSByZWFzb24gd2h5IGVhY2ggb25lIG9mIHRoZW0gaGFkIGJlZW4gc3RydWNrLgo8bWlsZXN0b25lIG49IjEzIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSBmYWlsZWQgdG8gcmlzZSwgaGUgd2VudCBvbiBoaW1zZWxmOiDigJxJIGFkbWl0LCBzb2xkaWVycywgdGhhdCBJIGhhdmUgaW5kZWVkIHN0cnVjayBtZW4gZm9yIG5lZ2xlY3Qgb2YgZGlzY2lwbGluZSwgdGhlIG1lbiB3aG8gd2VyZSBjb250ZW50IHRvIGJlIGtlcHQgc2FmZSBieSB5b3Ugd2hvIG1hcmNoZWQgaW4gZHVlIG9yZGVyIGFuZCBmb3VnaHQgd2hlcmV2ZXIgdGhlcmUgd2FzIG5lZWQsIHdoaWxlIHRoZXkgdGhlbXNlbHZlcyB3b3VsZCBsZWF2ZSB0aGUgcmFua3MgYW5kIHJ1biBvbiBhaGVhZCBpbiB0aGUgZGVzaXJlIHRvIHNlY3VyZSBwbHVuZGVyIGFuZCB0byBlbmpveSBhbiBhZHZhbnRhZ2Ugb3ZlciB5b3UuIEZvciBpZiBhbGwgb2YgdXMgaGFkIGJlaGF2ZWQgaW4gdGhpcyB3YXksIGFsbCBvZiB1cyBhbGlrZSB3b3VsZCBoYXZlIHBlcmlzaGVkLgo8bWlsZXN0b25lIG49IjE0IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB3aGVuIGEgbWFuIGJlaGF2ZWQgbGlrZSBhIHdlYWtsaW5nIGFuZCByZWZ1c2VkIHRvIGdldCB1cCwgcHJlZmVycmluZyB0byBsZWF2ZSBoaW1zZWxmIGEgcHJleSB0byB0aGUgZW5lbXksIEkgZGlkIGluZGVlZCBzdHJpa2UgaGltIGFuZCB1c2UgdmlvbGVuY2UgdG8gY29tcGVsIGhpbSB0byBnbyBvbi4gRm9yIG9uY2UgZHVyaW5nIHRoZSBzZXZlcmUgd2VhdGhlciBJIG15c2VsZiByZW1haW5lZCBzZWF0ZWQgZm9yIHF1aXRlIGEgbG9uZyB0aW1lLCB3YWl0aW5nIGZvciBzb21lIHBlb3BsZSB3aG8gd2VyZSBwYWNraW5nIHVwLCBhbmQgSSBkaXNjb3ZlcmVkIHRoYXQgaXQgd2FzIGhhcmQgd29yayB0byBnZXQgdXAgYW5kIHN0cmV0Y2ggbXkgbGVncy4KPG1pbGVzdG9uZSBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5IYXZpbmcgdGVzdGVkIHRoZSBtYXR0ZXIsIHRoZW4sIGluIG15IG93biBjYXNlLCBJIHVzZWQgYWZ0ZXIgdGhhdCB0byBkcml2ZSBvbiBhbnkgb3RoZXIgbWFuIHdob20gSSBtaWdodCBzZWUgc2l0dGluZyBkb3duIGFuZCBzaGlya2luZzsgZm9yIGdldHRpbmcgaW50byBtb3Rpb24gYW5kIGFjdGluZyBsaWtlIGEgbWFuIHByb2R1Y2VkIGEgY2VydGFpbiBhbW91bnQgb2Ygd2FybXRoIGFuZCBzdXBwbGVuZXNzLCB3aGlsZSBzaXR0aW5nIGFuZCBrZWVwaW5nIHF1aWV0IHRlbmRlZCwgYXMgSSBzYXcsIHRvIG1ha2UgdGhlIGJsb29kIGZyZWV6ZSBhbmQgdGhlIHRvZXMgcm90IG9mZiwganVzdCB0aGUgbWlzZm9ydHVuZXMgd2hpY2ggbWFueSBwZW9wbGUgc3VmZmVyZWQsIGFzIHlvdSBrbm93IGZvciB5b3Vyc2VsdmVzLgo8bWlsZXN0b25lIG49IjE2IiB1bml0PSJzZWN0aW9uIiAvPkluIHN0aWxsIGFub3RoZXIgY2FzZSwgdGhlIG1hbiwgcGVyaGFwcywgd2hvIGZlbGwgYmVoaW5kIHNvbWV3aGVyZSBvdXQgb2YgaW5kb2xlbmNlIGFuZCBwcmV2ZW50ZWQgYm90aCB5b3UgaW4gdGhlIHZhbiBhbmQgdXMgaW4gdGhlIHJlYXIgZnJvbSBnb2luZyBvbiwgSSBzdHJ1Y2sgc3VjaCBhIG9uZSB3aXRoIHRoZSBmaXN0IGluIG9yZGVyIHRoYXQgdGhlIGVuZW15IG1pZ2h0IG5vdCBzdHJpa2UgaGltIHdpdGggdGhlIGxhbmNlLgo8bWlsZXN0b25lIG49IjE3IiB1bml0PSJzZWN0aW9uIiAvPkluZGVlZCwgdGhhdCBpcyB0aGUgcmVhc29uIHdoeSB0aGVzZSBwZW9wbGUsIGhhdmluZyBiZWVuIHNhdmVkLCBub3cgaGF2ZSBpdCBpbiB0aGVpciBwb3dlciB0byBvYnRhaW4gc2F0aXNmYWN0aW9uIGZvciB3aGF0ZXZlciB0aGV5IHN1ZmZlcmVkIHVuanVzdGx5IGF0IG15IGhhbmRzLiBCdXQgaWYgdGhleSBoYWQgZmFsbGVuIGludG8gdGhlIGhhbmRzIG9mIHRoZSBlbmVteSwgd2hhdCBzdWZmZXJpbmcgd291bGQgdGhleSBoYXZlIGV4cGVyaWVuY2VkIHNvIGdyZWF0IHRoYXQgdGhleSB3b3VsZCBub3cgYmUgYXNraW5nIHRvIG9idGFpbiBzYXRpc2ZhY3Rpb24gZm9yIGl0Pzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHNwZWFrZXIgaW1wbGllcyBpbiB0aGlzIHNhcmNhc3RpYyB3YXkgdGhhdCB0aGV5IHdvdWxkIGhhdmUgbWV0IHRoZWlyIGRlYXRoLCBhbmQgd291bGQgbm90IGJlIHRhbGtpbmcgbm93IGFib3V0IHNhdGlzZmFjdGlvbiBmb3IgdGhhdCBvciBhbnl0aGluZyBlbHNlLjwvbm90ZT4KPG1pbGVzdG9uZSBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE15IGRlZmVuY2Us4oCdIGhlIGNvbnRpbnVlZCwg4oCcaXMgc2ltcGxlOiBpZiBpdCB3YXMgZm9yIGhpcyBnb29kIHRoYXQgSSBwdW5pc2hlZCBhbnkgb25lLCBJIHRoaW5rIEkgc2hvdWxkIHJlbmRlciB0aGUgc29ydCBvZiBhY2NvdW50IHRoYXQgcGFyZW50cyByZW5kZXIgdG8gc29ucyBhbmQgdGVhY2hlcnMgdG8gcHVwaWxzOyBmb3IgdGhhdCBtYXR0ZXIsIHN1cmdlb25zIGFsc28gYnVybiBhbmQgY3V0IHBhdGllbnRzIGZvciB0aGVpciBnb29kOwo8bWlsZXN0b25lIG49IjE5IiB1bml0PSJzZWN0aW9uIiAvPmJ1dCBpZiB5b3UgYmVsaWV2ZSBpdCB3YXMgb3V0IG9mIHdhbnRvbm5lc3MgdGhhdCBJIGRpZCB0aGVzZSB0aGluZ3MsIHRha2Ugbm90ZSB0aGF0IG5vdywgYnkgdGhlIGJsZXNzaW5nIG9mIHRoZSBnb2RzLCBJIGFtIG1vcmUgY29uZmlkZW50IHRoYW4gSSB3YXMgdGhlbiBhbmQgdGhhdCBJIGFtIGJvbGRlciBub3cgdGhhbiB0aGVuIGFuZCBkcmluayBtb3JlIHdpbmUsIGJ1dCBuZXZlcnRoZWxlc3MgSSBzdHJpa2Ugbm8gbWFu4oCUZm9yIHRoZSByZWFzb24gdGhhdCBJIHNlZSB5b3UgYXJlIGluIGNhbG0gd2F0ZXJzLgo8bWlsZXN0b25lIG49IjIwIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGVuIGl0IGlzIHN0b3JteSB3ZWF0aGVyIGFuZCBhIGhpZ2ggc2VhIGlzIHJ1bm5pbmcsIGRvIHlvdSBub3Qgb2JzZXJ2ZSB0aGF0IGV2ZW4gZm9yIGEgbWVyZSBub2QgdGhlIGxvb2tvdXQgZ2V0cyBhbmdyeSB3aXRoIHRoZSBwZW9wbGUgYXQgdGhlIHByb3cgYW5kIHRoZSBoZWxtc21hbiBhbmdyeSB3aXRoIHRoZSBwZW9wbGUgYXQgdGhlIHN0ZXJuPyBGb3IgaW4gc3VjaCBhIHNpdHVhdGlvbiBldmVuIHNtYWxsIGJsdW5kZXJzIGFyZSBlbm91Z2ggdG8gcnVpbiBldmVyeXRoaW5nLgo8bWlsZXN0b25lIG49IjIxIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB5b3UgcmVuZGVyZWQganVkZ21lbnQgeW91cnNlbHZlcyB0aGF0IEkgd2FzIGp1c3RpZmllZCBpbiBzdHJpa2luZyB0aG9zZSBtZW47IGZvciB5b3Ugc3Rvb2QgYnksIHdpdGggc3dvcmRzLCBub3QgYmFsbG90cywgaW4geW91ciBoYW5kcywgYW5kIGl0IHdhcyB3aXRoaW4geW91ciBwb3dlciB0byBjb21lIHRvIHRoZWlyIGFpZCBpZiB5b3UgY2hvc2U7IGJ1dCwgYnkgWmV1cywgeW91IHdvdWxkIG5laXRoZXIgZ2l2ZSB0aG9zZSBwZW9wbGUgYWlkIG5vciB3b3VsZCB5b3Ugam9pbiB3aXRoIG1lIGluIHN0cmlraW5nIHN1Y2ggYXMgdmlvbGF0ZWQgZGlzY2lwbGluZS4KPG1pbGVzdG9uZSBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5Db25zZXF1ZW50bHkgeW91IGdhdmUgdGhlIGJhZCBhbW9uZyB0aGVtIGZyZWVkb20gdG8gYWN0IHdhbnRvbmx5IGJ5IHRodXMgbGV0dGluZyB0aGVtIGFsb25lLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRm9yIEkgdGhpbmssIGlmIHlvdSBjYXJlIHRvIGxvb2sgaW50byB0aGUgbWF0dGVyLCB5b3Ugd2lsbCBmaW5kIGl0IGlzIHRoZSB2ZXJ5IHNhbWUgbWVuIHdobyB3ZXJlIHRoZW4gbW9zdCBjb3dhcmRseSB0aGF0IGFyZSBub3cgbW9zdCB3YW50b24uCjxtaWxlc3RvbmUgbj0iMjMiIHVuaXQ9InNlY3Rpb24iIC8+QXQgYW55IHJhdGUsIEJvaXNjdXMgdGhlIGJveGVyLCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT4sIHRoZW4gZm91Z2h0IGhhcmQgdG8gZXNjYXBlIGNhcnJ5aW5nIGhpcyBzaGllbGQsIG9uIHRoZSBwbGVhIHRoYXQgaGUgd2FzIHRpcmVkLCBidXQgbm93LCBhcyBJIGhlYXIsIGhlIGhhcyBhbHJlYWR5IHN0cmlwcGVkIG9mZiB0aGUgY2xvdGhlcyBvZiBtYW55IENvdHlvcml0ZXMuCjxtaWxlc3RvbmUgbj0iMjQiIHVuaXQ9InNlY3Rpb24iIC8+SWYgeW91IGFyZSB3aXNlLCB0aGVyZWZvcmUsIHlvdSB3aWxsIGRvIHRvIHRoaXMgZmVsbG93IHRoZSBvcHBvc2l0ZSBvZiB3aGF0IHBlb3BsZSBkbyB0byBkb2dzOyBmb3IgZG9ncyB0aGF0IGFyZSBzYXZhZ2UgYXJlIHRpZWQgdXAgYnkgZGF5IGFuZCBsZXQgbG9vc2UgYnkgbmlnaHQsIGJ1dCB0aGlzIGZlbGxvdywgaWYgeW91IGFyZSB3aXNlLCB5b3Ugd2lsbCB0aWUgdXAgYnkgbmlnaHQgYW5kIGxldCBsb29zZSBieSBkYXkuCjxtaWxlc3RvbmUgbj0iMjUiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQgcmVhbGx5LOKAnSBoZSBjb250aW51ZWQsIOKAnEkgYW0gc3VycHJpc2VkIHRoYXQgaWYgZXZlciBJIGluY3VycmVkIHRoZSBpbGwtd2lsbCBvZiBhbnkgb25lIGFtb25nIHlvdSwgeW91IHJlbWVtYmVyIHRoYXQgYW5kIGFyZSBub3Qgc2lsZW50IGFib3V0IGl0LCB3aGlsZSBpZiBJIHByb3RlY3RlZCBhbnkgb25lIGZyb20gdGhlIGNvbGQsIG9yIHdhcmRlZCBvZmYgYW4gZW5lbXkgZnJvbSBoaW0sIG9yIGhlbHBlZCB0byBwcm92aWRlIHNvbWV0aGluZyBmb3IgaGltIHdoZW4gaGUgd2FzIHNpY2sgb3IgaW4gd2FudCwgdGhlc2UgYWN0cywgb24gdGhlIG90aGVyIGhhbmQsIGFyZSBub3QgcmVtZW1iZXJlZCBieSBhbnlib2R5OyBub3IsIGFnYWluLCBpZiBJIHByYWlzZWQgYSBtYW4gZm9yIGEgZGVlZCB3ZWxsIGRvbmUsIG9yIGhvbm91cmVkIGFjY29yZGluZyB0byBteSBhYmlsaXR5IGEgbWFuIHdobyB3YXMgYnJhdmUsIGRvIHlvdSByZW1lbWJlciBhbnkgb2YgdGhlc2UgdGhpbmdzLgo8bWlsZXN0b25lIG49IjI2IiB1bml0PSJzZWN0aW9uIiAvPllldCBzdXJlbHkgaXQgaXMgbW9yZSBob25vdXJhYmxlIGFuZCBmYWlyLCBtb3JlIHJpZ2h0ZW91cyBhbmQgZ3JhY2lvdXMgdG8gcmVtZW1iZXIgZ29vZCBkZWVkcyB0aGFuIGV2aWwu4oCdPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuIHBlb3BsZSBiZWdhbiBnZXR0aW5nIHVwIGFuZCByZWNhbGxpbmcgcGFzdCBpbmNpZGVudHMsIGFuZCBpbiB0aGUgZW5kIGFsbCB3YXMgcGxlYXNhbnQuPC9wPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIE1TUy4gaGVyZSBwcmVmaXggdGhlIGZvbGxvd2luZyBzdW1tYXJ5IG9mIHRoZSBwcmVjZWRpbmcgbmFycmF0aXZlLjwvbm90ZT5bVGhlIHByZWNlZGluZyBuYXJyYXRpdmUgaGFzIGRlc2NyaWJlZCBhbGwgdGhhdCB0aGUgR3JlZWtzIGRpZCBvbiB0aGVpciB1cHdhcmQgbWFyY2ggd2l0aCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+IGFuZCBvbiB0aGVpciBqb3VybmV5IHRvIHRoZSBzaG9yZSBvZiB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2MTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjYxOSI+RXV4aW5lIFNlYTwvcGxhY2VOYW1lPiwgaG93IHRoZXkgYXJyaXZlZCBhdCB0aGUgR3JlZWsgY2l0eSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiPlRyYXBlenVzPC9wbGFjZU5hbWU+LCBhbmQgaG93IHRoZXkgcGFpZCB0aGUgdGhhbmtvZmZlcmluZ3MgZm9yIGRlbGl2ZXJhbmNlIHdoaWNoIHRoZXkgaGFkIHZvd2VkIHRvIHNhY3JpZmljZSBhdCB0aGUgcGxhY2Ugd2hlcmUgdGhleSBzaG91bGQgZmlyc3QgcmVhY2ggYSBmcmllbmRseSBsYW5kLl0KPC90cmFuc2xhdGlvbj4="
translation['5.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZXkgZ2F0aGVyZWQgdG9nZXRoZXIgYW5kIHByb2NlZWRlZCB0byB0YWtlIGNvdW5zZWwgaW4gcmVnYXJkIHRvIHRoZSByZW1haW5kZXIgb2YgdGhlaXIgam91cm5leTsgYW5kIHRoZSBmaXJzdCBtYW4gdG8gZ2V0IHVwIHdhcyBMZW9uIG9mIFRodXJpaSwgd2hvIHNwb2tlIGFzIGZvbGxvd3M6IOKAnFdlbGwsIEksIGZvciBteSBwYXJ0LCBnZW50bGVtZW4s4oCdIGhlIHNhaWQsIOKAnGFtIHRpcmVkIGJ5IHRoaXMgdGltZSBvZiBwYWNraW5nIHVwIGFuZCB3YWxraW5nIGFuZCBydW5uaW5nIGFuZCBjYXJyeWluZyBteSBhcm1zIGFuZCBiZWluZyBpbiBsaW5lIGFuZCBzdGFuZGluZyBndWFyZCBhbmQgZmlnaHRpbmcsIGFuZCB3aGF0IEkgbG9uZyBmb3Igbm93IGlzIHRvIGJlIHJpZCBvZiB0aGVzZSB0b2lscywgc2luY2Ugd2UgaGF2ZSB0aGUgc2VhLCBhbmQgdG8gc2FpbCB0aGUgcmVzdCBvZiB0aGUgd2F5LCBhbmQgc28gcmVhY2ggPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IHN0cmV0Y2hlZCBvdXQgb24gbXkgYmFjaywgbGlrZSBPZHlzc2V1cy7igJ08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhvbS4gT2QuIDUuNzUiIHZhbGlkPSJ5ZXMiPkhvbS4gT2QuIDUuNzUtMTE4PC9iaWJsPi48L25vdGU+CjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhvbS4gT2QuIDUuNzUiIHZhbGlkPSJ5ZXMiPkhvbS4gT2QuIDUuNzUtMTE4PC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['5.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlVwb24gaGVhcmluZyB0aGVzZSB3b3JkcyB0aGUgc29sZGllcnMgc2hvdXRlZCBvdXQgdGhhdCBoZSB3YXMgcXVpdGUgcmlnaHQ7IGFuZCBhbm90aGVyIG1hbiBzYWlkIHRoZSBzYW1lIHRoaW5nLCBhbmQgaW4gZmFjdCBhbGwgd2hvIHJvc2UgdG8gc3BlYWsuIFRoZW4gQ2hlaXJpc29waHVzIGdvdCB1cCBhbmQgc3Bva2UgYXMgZm9sbG93czoKPC90cmFuc2xhdGlvbj4="
translation['5.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPuKAnEkgaGF2ZSBhIGZyaWVuZCBBbmF4aWJpdXMsIGdlbnRsZW1lbiwgYW5kIGhlIGhhcHBlbnMgYWxzbyB0byBiZSBBZG1pcmFsLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Ob3Qg4oCcYW7igJ0gYWRtaXJhbCwgZm9yIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs69zrHhvbvOsc+Bz4fOv8+CPC9mb3JlaWduPiB3YXMgdGhlIGRpc3RpbmN0aXZlIHRpdGxlIG9mIHRoZSBjb21tYW5kaW5nIG9mZmljZXIgb2YgdGhlIExhY2VkYWVtb25pYW4gZmxlZXQuPC9ub3RlPiBTbyBpZiB5b3Ugd2lsbCBzZW5kIG1lIHRvIGhpbSwgSSBwcmVzdW1lIEkgY2FuIGJyaW5nIGJhY2sgd2l0aCBtZSBzaGlwcyBvZiB3YXIgYW5kIG1lcmNoYW50IHZlc3NlbHMgdG8gY2FycnkgdXM7IGZvciB5b3Vyc2VsdmVzLCBpZiB5b3UgcmVhbGx5IHdpc2ggdG8gZ28gYnkgc2VhLCB3YWl0IHVudGlsIEkgcmV0dXJuOyBhbmQgSSBzaGFsbCByZXR1cm4gc3BlZWRpbHku4oCdIFdoZW4gdGhleSBoZWFyZCB0aGlzLCB0aGUgc29sZGllcnMgd2VyZSBkZWxpZ2h0ZWQsIGFuZCB2b3RlZCB0aGF0IENoZWlyaXNvcGh1cyBzaG91bGQgc2V0IHNhaWwgd2l0aCBhbGwgc3BlZWQuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs69zrHhvbvOsc+Bz4fOv8+CPC9mb3JlaWduPiB3YXMgdGhlIGRpc3RpbmN0aXZlIHRpdGxlIG9mIHRoZSBjb21tYW5kaW5nIG9mZmljZXIgb2YgdGhlIExhY2VkYWVtb25pYW4gZmxlZXQuPC90cmFuc2xhdGlvbj4="
translation['5.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciBoaW0gWGVub3Bob24gcm9zZSBhbmQgc3Bva2UgYXMgZm9sbG93czog4oCcQ2hlaXJpc29waHVzLCB0aGVuLCBpcyBzZXR0aW5nIG9mZiBhZnRlciBzaGlwcywgYW5kIHdlIGFyZSB0byBzdGF5IGhlcmU7IEkgYW0gZ29pbmcgdG8gc3BlYWssIHRoZXJlZm9yZSwgb2YgYWxsIHRoZSB0aGluZ3MgdGhhdCBpdCBzZWVtcyB0byBtZSBwcm9wZXIgZm9yIHVzIHRvIGJlIGRvaW5nIHdoaWxlIHdlIHdhaXQuCjwvdHJhbnNsYXRpb24+"
translation['5.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSBmaXJzdCBwbGFjZSwgd2UgbXVzdCBvYnRhaW4gcHJvdmlzaW9ucyBmcm9tIGhvc3RpbGUgdGVycml0b3J5LCBmb3Igd2UgbmVpdGhlciBoYXZlIGFuIGFkZXF1YXRlIG1hcmtldCwgbm9yIGhhdmUgd2UsIHdpdGggc29tZSBmZXcgZXhjZXB0aW9ucywgdGhlIG1lYW5zIHdoZXJld2l0aCB0byBidXk7IGJ1dCB0aGUgdGVycml0b3J5IGlzIGhvc3RpbGUsIGFuZCBoZW5jZSB0aGVyZSBpcyBkYW5nZXIgdGhhdCBtYW55IG9mIHlvdSB3aWxsIHBlcmlzaCBpZiB5b3Ugc2V0IG91dCBhZnRlciBwcm92aXNpb25zIGNhcmVsZXNzbHkgYW5kIHVuZ3VhcmRlZGx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlJhdGhlciwgaXQgc2VlbXMgdG8gbWUgdGhhdCB5b3Ugb3VnaHQgdG8gZ2V0IHlvdXIgcHJvdmlzaW9ucyBpbiBmb3JhZ2luZyBwYXJ0aWVzIGFuZCBub3Qgcm9hbSBhYm91dCBhdCByYW5kb20sIGluIG9yZGVyIHRoYXQgeW91IG1heSBiZSBrZXB0IHNhZmUsIGFuZCB0aGF0IHdlIGdlbmVyYWxzIG91Z2h0IHRvIGhhdmUgY2hhcmdlIG9mIHRoaXMgbWF0dGVyLuKAnSBUaGlzIHByb3Bvc2FsIHdhcyBhZG9wdGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxMaXN0ZW4sIHRoZW4sIHRvIHRoaXMgZnVydGhlciBwb2ludC4gU29tZSBvZiB5b3UgYXJlIHRvIGpvdXJuZXkgZm9ydGggYWZ0ZXIgcGx1bmRlci4gTm93IEkgdGhpbmsgaXQgaXMgYmVzdCBmb3IgdGhlIG1hbiB3aG8gaXMgZ29pbmcgb3V0IHRvIGluZm9ybSB1cyBvZiB0aGUgZmFjdCBhbmQgdG8gdGVsbCB1cyBhbHNvIHdoaXRoZXIgaGUgaXMgZ29pbmcsIGluIG9yZGVyIHRoYXQgd2UgbWF5IGtub3cgdGhlIG51bWJlciBvZiBtZW4gd2hvIGFyZSBnb2luZyBvdXQgYW5kIHRoZSBudW1iZXIgd2hvIGFyZSBzdGF5aW5nIGJlaGluZDsgdGhlbiB3ZSBjYW4gaGVscCwgaWYgbmVlZCBiZSwgaW4gbWFraW5nIHByZXBhcmF0aW9ucywgYW5kIGlmIHRoZXJlIGJlIG9jY2FzaW9uIHRvIGdvIHRvIGFueSBvbmUncyBhc3Npc3RhbmNlLCB3ZSBzaGFsbCBrbm93IHdoaXRoZXIgd2UgYXJlIHRvIGdvIHdpdGggc3VjaCBhc3Npc3RhbmNlLCBhbmQgaWYgYSBtYW4gd2hvIGlzIHdpdGhvdXQgZXhwZXJpZW5jZSBpcyBtYWtpbmcgYW4gYXR0ZW1wdCBpbiBhbnkgcXVhcnRlciwgd2UgY2FuIGFkdmlzZSBoaW0gYnkgdHJ5aW5nIHRvIGFzY2VydGFpbiB0aGUgc3RyZW5ndGggb2YgdGhvc2UgYWdhaW5zdCB3aG9tIGhlIG1heSBiZSBnb2luZy7igJ0gVGhpcyBwcm9wb3NhbCBhbHNvIHdhcyBhZG9wdGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuLOKAnSBoZSBzYWlkLCDigJxjb25zaWRlciB0aGlzIG1hdHRlciBhbHNvLiBPdXIgZW5lbWllcyBoYXZlIGxlaXN1cmUgZm9yIHBsdW5kZXJpbmcgYW5kIHRoZXkgYXJlIHBsb3R0aW5nIGFnYWluc3QgdXPigJRxdWl0ZSBwcm9wZXJseSwgc2VlaW5nIHRoYXQgd2UgaGF2ZSBhcHByb3ByaWF0ZWQgd2hhdCB3YXMgdGhlaXJzOyBhbmQgdGhleSBhcmUgcG9zdGVkIHVwIGFib3ZlIHVzLiBTbyBpdCBzZWVtcyB0byBtZSB0aGF0IHdlIG91Z2h0IHRvIGhhdmUgZ3VhcmRzIGFyb3VuZCBvdXIgY2FtcDsgc3VwcG9zaW5nLCB0aGVuLCB0aGF0IHdlIHRha2UgdHVybnMgaW4gc3RhbmRpbmcgZ3VhcmQgYW5kIGtlZXBpbmcgd2F0Y2gsIHRoZSBlbmVteSB3b3VsZCBiZSBsZXNzIGFibGUgdG8gaGFycnkgdXMuCjwvdHJhbnNsYXRpb24+"
translation['5.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSGVyZSBpcyBzdGlsbCBhbm90aGVyIHBvaW50IHRvIG5vdGUuIElmIHdlIGtuZXcgYmV5b25kIGRvdWJ0IHRoYXQgQ2hlaXJpc29waHVzIHdvdWxkIGJyaW5nIGJhY2sgd2l0aCBoaW0gYW4gYWRlcXVhdGUgbnVtYmVyIG9mIHNoaXBzLCB0aGVyZSB3b3VsZCBiZSBubyBuZWVkIG9mIHdoYXQgSSBhbSBhYm91dCB0byBzYXk7IGJ1dCBzaW5jZSBpbiBmYWN0IHRoYXQgaXMgdW5jZXJ0YWluLCBJIHRoaW5rIHdlIHNob3VsZCB0cnkgdG8gZG8gb3VyIHBhcnQgYnkgcHJvY3VyaW5nIHNoaXBzIGhlcmUgYWxzby4gRm9yIGlmIGhlIGRvZXMgYnJpbmcgZW5vdWdoLCB0aGVuIHdpdGggdGhvc2UgYXQgaGFuZCBoZXJlIHdlIHNoYWxsIGhhdmUgYSBtb3JlIGFidW5kYW50IHN1cHBseSB0byBzYWlsIGluLCB3aGlsZSBpZiBoZSBkb2VzIG5vdCwgd2Ugc2hhbGwgdXNlIHRob3NlIHdoaWNoIHdlIGhhdmUgaGVyZS4KPC90cmFuc2xhdGlvbj4="
translation['5.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgSSBzZWUgc2hpcHMgc2FpbGluZyBwYXN0IGZyZXF1ZW50bHksIGFuZCBpZiB3ZSBjYW4gZ2V0IHRoZSBUcmFwZXp1bnRpYW5zIHRvIGdpdmUgdXMgbWVuLW9mLXdhciBhbmQgc28gYnJpbmcgdGhlc2Ugc2hpcHMgaW50byBwb3J0IGFuZCBrZWVwIHRoZW0gdW5kZXIgZ3VhcmQsIHVuc2hpcHBpbmcgdGhlaXIgcnVkZGVycyBtZWFud2hpbGUsIHVudGlsIHdlIGdldCBlbm91Z2ggdG8gY2FycnkgdXMsIHBlcmhhcHMgd2Ugc2hvdWxkIG5vdCBsYWNrIHN1Y2ggbWVhbnMgb2YgdHJhbnNwb3J0IGFzIHdlIG5lZWQu4oCdIFRoaXMgcHJvcG9zYWwgYWxzbyB3YXMgYWRvcHRlZC4KPC90cmFuc2xhdGlvbj4="
translation['5.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQWdhaW4s4oCdIGhlIHNhaWQsIOKAnGRvIHlvdSBub3QgdGhpbmsgaXQgcmVhc29uYWJsZSB0aGF0IHdlIHNob3VsZCBtYWludGFpbiBmcm9tIG91ciBjb21tb24gZnVuZCB0aGUgc2FpbG9ycyB3ZSB0aHVzIGJyaW5nIGludG8gcG9ydCBmb3IgYXMgbG9uZyBhIHRpbWUgYXMgdGhleSBtYXkgYmUgd2FpdGluZyBmb3Igb3VyIHNha2VzLCBhbmQgdGhhdCB3ZSBzaG91bGQgYWdyZWUgdXBvbiBhIHByaWNlIGZvciBvdXIgcGFzc2FnZSwgc28gdGhhdCBpbiBjb25mZXJyaW5nIGEgYmVuZWZpdCB1cG9uIHVzIHRoZXkgbWF5IGFsc28gYmVuZWZpdCB0aGVtc2VsdmVzP+KAnSBUaGlzIHByb3Bvc2FsIGFsc28gd2FzIGFkb3B0ZWQuCjwvdHJhbnNsYXRpb24+"
translation['5.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IGl0IHNlZW1zIHRvIG1lLOKAnSBoZSBjb250aW51ZWQsIOKAnHRoYXQgaWYgcGVyY2hhbmNlIHRoaXMgcGxhbiBhbHNvIHNoYWxsIGZhaWwgdG8gcHJvdmlkZSB1cyB3aXRoIGVub3VnaCBzaGlwcywgd2UgbXVzdCB0dXJuIHRvIHRoZSByb2Fkcywgd2hpY2ggd2UgaGVhciBhcmUgZGlmZmljdWx0IHRvIHRyYXZlbCwgYW5kIGRpcmVjdCB0aGUgY2l0aWVzIHRoYXQgYXJlIHNpdHVhdGVkIGFsb25nIHRoZSBzZWEgdG8gcmVwYWlyIHRoZW07IGZvciB0aGV5IHdpbGwgb2JleSwgbm90IG9ubHkgZnJvbSBmZWFyLCBidXQgYWxzbyBmcm9tIHRoZSBkZXNpcmUgdG8gYmUgcmlkIG9mIHVzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['5.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyB0aGUgc29sZGllcnMgc2V0IHVwIGEgc2hvdXQsIHNheWluZyB0aGF0IHRoZXkgZGlkIG5vdCB3YW50IHRvIGdvIGJ5IGxhbmQuIEFuZCBYZW5vcGhvbiwgcmVhbGl6aW5nIHRoZWlyIGZvb2xpc2huZXNzLCBkaWQgbm90IHB1dCBhbnkgcHJvcG9zYWwgcmVnYXJkaW5nIHRoaXMgbWF0dGVyIHRvIHZvdGUsIGJ1dCBwZXJzdWFkZWQgdGhlIGNpdGllcyB0byByZXBhaXIgdGhlIHJvYWRzIHZvbHVudGFyaWx5LCB1cmdpbmcgdGhhdCB0aGV5IHdvdWxkIGJlIHJpZCBvZiB0aGUgYXJteSB0aGUgbW9yZSBxdWlja2x5IGlmIHRoZSByb2FkcyBzaG91bGQgYmUgbWFkZSBlYXN5IHRvIHRyYXZlbC4KPC90cmFuc2xhdGlvbj4="
translation['5.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgdGhleSBnb3QgYSBmaWZ0eS1vYXJlZCB3YXJzaGlwIGZyb20gdGhlIFRyYXBlenVudGlhbnMsIGFuZCBwdXQgaXQgdW5kZXIgdGhlIGNvbW1hbmQgb2YgRGV4aXBwdXMsIGEgTGFjb25pYW4gcGVyaW9lY3VzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgcGVyaW9lY2kgd2VyZSB0aGUgaW5oYWJpdGFudHMgb2YgdGhlIG91dGx5aW5nIExhY29uaWFuIHRvd25zOyB0aGV5IHdlcmUgZnJlZSwgYnV0IG5vdCBTcGFydGFuIGNpdGl6ZW5zLjwvbm90ZT4gVGhpcyBmZWxsb3csIGhvd2V2ZXIsIHBheWluZyBubyBoZWVkIHRvIHRoZSBkdXR5IG9mIGNvbGxlY3RpbmcgdmVzc2Vscywgc2xpcHBlZCBhd2F5IHdpdGggaGlzIG1hbi1vZi13YXIgYW5kIGxlZnQgdGhlIEV1eGluZS4gSGUgZGlkIGluZGVlZCBnZXQgaGlzIGRlc2VydHMgYWZ0ZXJ3YXJkczsgZm9yIHdoaWxlIGVuZ2FnZWQgaW4gc29tZSBpbnRyaWd1ZSBhdCB0aGUgY291cnQgb2YgU2V1dGhlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjIuMzEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNy4yLjMxLTM0PC9iaWJsPi48L25vdGU+IGluIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNy4yLjMxIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDcuMi4zMS0zNDwvYmlibD4uPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI3NTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjc1NiI+VGhyYWNlPC9wbGFjZU5hbWU+IGhlIHdhcyBraWxsZWQgYnkgTmljYW5kZXIgdGhlIExhY29uaWFuLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGFsc28gZ290IGEgdGhpcnR5LW9hcmVkIGdhbGxleSwgYW5kIHB1dCBpdCB1bmRlciB0aGUgY29tbWFuZCBvZiBQb2x5Y3JhdGVzIHRoZSBBdGhlbmlhbiwgd2hvIGJyb3VnaHQgaW4gdG8gdGhlIGNhbXAgYWxsIHRoZSBtZXJjaGFudCB2ZXNzZWxzIHRoYXQgaGUgY2FwdHVyZWQuIEFuZCB0aGV5IHdvdWxkIHVubG9hZCB0aGUgY2FyZ29lcywgaW4gY2FzZSB0aGUgc2hpcHMgaGFkIGFueSwgYW5kIHB1dCB0aGVtIHVuZGVyIGd1YXJkLCBpbiBvcmRlciB0byBrZWVwIHRoZXNlIHNhZmUgYW5kIHRvIHVzZSB0aGUgdmVzc2VscyB0aGVtc2VsdmVzIGZvciB0cmFuc3BvcnQgc2VydmljZS4KPC90cmFuc2xhdGlvbj4="
translation['5.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5XaGlsZSB0aGVzZSB0aGluZ3Mgd2VyZSBnb2luZyBvbiwgdGhlIEdyZWVrcyB3ZXJlIG1ha2luZyBmb3JheXMgaW4gcXVlc3Qgb2YgYm9vdHksIGFuZCB3aGlsZSBzb21lIHBhcnRpZXMgd291bGQgc2VjdXJlIGl0LCBvdGhlcnMgZGlkIG5vdC4gQW5kIGluIG9uZSBjYXNlLCB3aGVuIENsZWFlbmV0dXMgbGVkIGZvcnRoIGhpcyBvd24gY29tcGFueSBhbmQgYW5vdGhlciBhZ2FpbnN0IGEgZGlmZmljdWx0IHN0cm9uZ2hvbGQsIHRoZSBjb21tYW5kZXIgaGltc2VsZiB3YXMga2lsbGVkIGFuZCBtYW55IG9mIGhpcyBtZW4gYmVzaWRlcy4KPC90cmFuc2xhdGlvbj4="
translation['5.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgdGltZSBjYW1lIHdoZW4gaXQgd2FzIG5vIGxvbmdlciBwb3NzaWJsZSB0byBvYnRhaW4gcHJvdmlzaW9ucyBhbmQgcmV0dXJuIHRvIHRoZSBjYW1wIG9uIHRoZSBzYW1lIGRheS4gVGhlbiBYZW5vcGhvbiB0b29rIHNvbWUgVHJhcGV6dW50aWFucyBmb3IgZ3VpZGVzIGFuZCBsZWQgZm9ydGggaGFsZiB0aGUgYXJteSB0byB0aGUgY291bnRyeSBvZiB0aGUgRHJpbGFlLCBsZWF2aW5nIHRoZSBvdGhlciBoYWxmIGJlaGluZCB0byBndWFyZCB0aGUgY2FtcOKAlGJlY2F1c2UgdGhlIENvbGNoaWFucywgc2luY2UgdGhleSBoYWQgYmVlbiBkcml2ZW4gb3V0IG9mIHRoZWlyIGhvdXNlcywgd2VyZSBub3cgZ2F0aGVyZWQgdG9nZXRoZXIgaW4gb25lIGdyZWF0IGJvZHkgYW5kIGhhZCB0YWtlbiBhIHBvc2l0aW9uIG9uIHRoZSBoZWlnaHRzIGFib3ZlIHRoZSBjYW1wLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGUgVHJhcGV6dW50aWFucyB3b3VsZCBub3QgbGVhZCB0aGUgR3JlZWtzIHRvIGRpc3RyaWN0cyBmcm9tIHdoaWNoIHByb3Zpc2lvbnMgY291bGQgYmUgc2VjdXJlZCBlYXNpbHksIGJlY2F1c2UgdGhleSB3ZXJlIGZyaWVuZGx5IHRvIHRoZSBwZW9wbGUgb2YgdGhvc2UgZGlzdHJpY3RzOyBidXQgdGhleSB3ZXJlIGVhZ2VyIHRvIGxlYWQgdGhlbSBpbnRvIHRoZSB0ZXJyaXRvcnkgb2YgdGhlIERyaWxhZSwgYXQgd2hvc2UgaGFuZHMgdGhleSB3ZXJlIGNvbnRpbnVhbGx5IHN1ZmZlcmluZyBsb3NzZXMsIHRob3VnaCB0aGVpciBjb3VudHJ5IHdhcyBtb3VudGFpbm91cyBhbmQgZGlmZmljdWx0IHRvIHRyYXZlcnNlIGFuZCBpdHMgaW5oYWJpdGFudHMgdGhlIG1vc3Qgd2FybGlrZSBvZiBhbGwgdGhhdCBkd2VsbCB1cG9uIHRoZSBFdXhpbmUuCjwvdHJhbnNsYXRpb24+"
translation['5.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZSBHcmVla3MgaGFkIHJlYWNoZWQgdGhlIGhpZ2hsYW5kcywgdGhlIERyaWxhZSBzZXQgZmlyZSB0byBzdWNoIG9mIHRoZWlyIHN0cm9uZ2hvbGRzIGFzIHNlZW1lZCB0byB0aGVtIGVhc3kgdG8gY2FwdHVyZSwgYW5kIGZlbGwgYmFjazsgYW5kIHRoZSBHcmVla3MgY291bGQgc2VjdXJlIG5vdGhpbmcgZXhjZXB0IGFuIG9jY2FzaW9uYWwgcGlnIG9yIG94IG9yIG90aGVyIGFuaW1hbCB0aGF0IGhhZCBlc2NhcGVkIHRoZSBmaXJlLiBUaGVyZSB3YXMgb25lIHN0cm9uZ2hvbGQsIGhvd2V2ZXIsIHdoaWNoIHdhcyB0aGVpciBtZXRyb3BvbGlzLCBhbmQgaW50byB0aGlzIHRoZXkgaGFkIGFsbCBzdHJlYW1lZC4gQXJvdW5kIGl0IHdhcyBhbiBleGNlZWRpbmdseSBkZWVwIHJhdmluZSwgYW5kIHRoZSBhcHByb2FjaGVzIHRvIHRoZSBwbGFjZSB3ZXJlIGRpZmZpY3VsdC4KPC90cmFuc2xhdGlvbj4="
translation['5.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB0aGUgcGVsdGFzdHMsIHdobyBoYWQgcnVuIGZpdmUgb3Igc2l4IHN0YWRpYSBhaGVhZCBvZiB0aGUgaG9wbGl0ZXMsIGNyb3NzZWQgdGhpcyByYXZpbmUgYW5kLCBzZWVpbmcgcXVhbnRpdGllcyBvZiBzaGVlcCBhbmQgb3RoZXIgcHJvcGVydHksIGVzc2F5ZWQgYW4gYXR0YWNrIHVwb24gdGhlIHN0cm9uZ2hvbGQ7IGluIHRoZWlyIHRyYWluIHRoZXJlIGZvbGxvd2VkIGEgY29uc2lkZXJhYmxlIG51bWJlciBvZiBzcGVhcm1lbiB3aG8gaGFkIHNldCBvdXQgYWZ0ZXIgcHJvdmlzaW9ucywgc28gdGhhdCB0aGUgcGFydHkgdGhhdCBjcm9zc2VkIHRoZSByYXZpbmUgYW1vdW50ZWQgdG8gbW9yZSB0aGFuIGEgdGhvdXNhbmQgbWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGVuIHRoZXkgZm91bmQgdGhlbXNlbHZlcyB1bmFibGUgd2l0aCBhbGwgdGhlaXIgZmlnaHRpbmcgdG8gY2FwdHVyZSB0aGUgcGxhY2UgKGZvciB0aGVyZSB3YXMgYSB3aWRlIHRyZW5jaCBhcm91bmQgaXQsIGJhY2tlZCBieSBhIHJhbXBhcnQsIGFuZCB1cG9uIHRoZSByYW1wYXJ0IHBhbGlzYWRlcyBoYWQgYmVlbiBzZXQgYW5kIHdvb2RlbiB0b3dlcnMgY29uc3RydWN0ZWQgYXQgZnJlcXVlbnQgaW50ZXJ2YWxzKSwgdGhlaXIgbmV4dCBtb3ZlIHdhcyB0byB0cnkgdG8gd2l0aGRyYXc7IGFuZCB0aGVuIHRoZSBlbmVteSBwcmVzc2VkIGhhcmQgdXBvbiB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRvIGdldCBhd2F5IGJ5IHJ1bm5pbmcgcHJvdmVkIGltcG9zc2libGUsIGluYXNtdWNoIGFzIHRoZSBkZXNjZW50IGZyb20gdGhlIHN0cm9uZ2hvbGQgdG8gdGhlIHJhdmluZSBvbmx5IGFsbG93ZWQgdGhlbSB0byBnbyBpbiBzaW5nbGUgZmlsZSwgYW5kIHRoZXkgYWNjb3JkaW5nbHkgc2VudCBhIG1lc3NlbmdlciB0byBYZW5vcGhvbiwgd2hvIHdhcyBhdCB0aGUgaGVhZCBvZiB0aGUgaG9wbGl0ZXMuIFRoZSBtZXNzZW5nZXIgY2FtZSBhbmQgcmVwb3J0ZWQ6CjwvdHJhbnNsYXRpb24+"
translation['5.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPuKAnFRoZXJlIGlzIGEgc3Ryb25naG9sZCBmdWxsIG9mIGFsbCBraW5kcyBvZiBzdG9yZXMuIFdlIGNhbm5vdCBjYXB0dXJlIGl0LCBmb3IgaXQgaXMgc3Ryb25nOyBhbmQgd2UgY2Fubm90IGVhc2lseSBnZXQgYXdheSwgZm9yIHRoZSBkZWZlbmRlcnMgcnVzaCBvdXQgYW5kIGF0dGFjayB1cywgYW5kIHRoZSByb2FkIHRoYXQgbGVhZHMgYmFjayBpcyBhIGRpZmZpY3VsdCBvbmUu4oCdCjwvdHJhbnNsYXRpb24+"
translation['5.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5VcG9uIGhlYXJpbmcgdGhpcyBtZXNzYWdlIFhlbm9waG9uIGxlZCBvbiB0byB0aGUgcmF2aW5lLCBvcmRlcmVkIHRoZSBob3BsaXRlcyB0byBoYWx0IHRoZXJlIHVuZGVyIGFybXMsIGFuZCBoaW1zZWxmIGNyb3NzZWQgb3ZlciB3aXRoIHRoZSBjYXB0YWlucyBhbmQgbG9va2VkIGFib3V0IHRvIHNlZSB3aGV0aGVyIGl0IHdhcyBiZXR0ZXIgdG8gd2l0aGRyYXcgdGhlIHRyb29wcyB0aGF0IGhhZCBhbHJlYWR5IGNyb3NzZWQsIG9yIHRvIGxlYWQgb3ZlciB0aGUgaG9wbGl0ZXMgYWxzbywgb24gdGhlIHByZXN1bXB0aW9uIHRoYXQgdGhlIHN0cm9uZ2hvbGQgY291bGQgYmUgY2FwdHVyZWQuCjwvdHJhbnNsYXRpb24+"
translation['5.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZSB3aXRoZHJhd2FsLCBpdCBzZWVtZWQgY2xlYXIsIGNvdWxkIG5vdCBiZSBhY2NvbXBsaXNoZWQgd2l0aG91dCB0aGUgbG9zcyBvZiBtYW55IGxpdmVzLCB3aGlsZSB0aGUgY2FwdHVyZSBvZiB0aGUgcGxhY2UsIGluIHRoZSBvcGluaW9uIG9mIHRoZSBjYXB0YWlucywgd2FzIGZlYXNpYmxlLCBhbmQgWGVub3Bob24gZmVsbCBpbiB3aXRoIHRoZWlyIG9waW5pb24sIGluIHJlbGlhbmNlIHVwb24gaGlzIHNhY3JpZmljZXM7IGZvciB0aGUgc2VlcnMgaGFkIGRlY2xhcmVkIHRoYXQgd2hpbGUgdGhlcmUgd291bGQgYmUgZmlnaHRpbmcgdG8gZG8sIHRoZSBpc3N1ZSBvZiB0aGUgZXhwZWRpdGlvbiB3b3VsZCBiZSBmb3J0dW5hdGUuCjwvdHJhbnNsYXRpb24+"
translation['5.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSBoZSBzZW50IHRoZSBjYXB0YWlucyB0byBicmluZyBvdmVyIHRoZSBob3BsaXRlcywgd2hpbGUgaGUgaGltc2VsZiByZW1haW5lZCBvbiB0aGUgZnVydGhlciBzaWRlLCBoYXZpbmcgZHJhd24gYmFjayB0aGUgZW50aXJlIGJvZHkgb2YgcGVsdGFzdHMgYW5kIGZvcmJpZGRpbmcgYW55IG9uZSB0byBzaG9vdCBhdCBsb25nIHJhbmdlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIHRoZSBhcnJpdmFsIG9mIHRoZSBob3BsaXRlcyBoZSBvcmRlcmVkIGVhY2ggb2YgdGhlIGNhcHRhaW5zIHRvIGZvcm0gaGlzIGNvbXBhbnkgaW4gdGhlIHdheSBoZSB0aG91Z2h0IGl0IHdvdWxkIGZpZ2h0IG1vc3QgZWZmZWN0aXZlbHk7IGZvciBuZWFyIG9uZSBhbm90aGVyIHdlcmUgdGhlIGNhcHRhaW5zIHdobyBoYWQgYWxsIHRoZSB0aW1lIGJlZW4gdmllaW5nIHdpdGggb25lIGFub3RoZXIgaW4gdmFsb3VyLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIG9yZGVyIHRoZXkgcHJvY2VlZGVkIHRvIGNhcnJ5IG91dCwgYW5kIG1lYW53aGlsZSBYZW5vcGhvbiBwYXNzZWQgd29yZCB0byBhbGwgdGhlIHBlbHRhc3RzIHRvIGFkdmFuY2Ugd2l0aCBoYW5kIG9uIHRoZSB0aG9uZywgc28gdGhhdCB0aGV5IGNvdWxkIGRpc2NoYXJnZSB0aGVpciBqYXZlbGlucyB3aGVuIHRoZSBzaWduYWwgc2hvdWxkIGJlIGdpdmVuLCB0byB0aGUgYm93bWVuIHRvIGhhdmUgdGhlaXIgYXJyb3dzIHVwb24gdGhlIHN0cmluZywgcmVhZHkgdG8gc2hvb3QgdXBvbiB0aGUgc2lnbmFsLCBhbmQgdG8gdGhlIHNsaW5nZXJzIHRvIGhhdmUgdGhlaXIgYmFncyBmdWxsIG9mIHN0b25lczsgYW5kIGhlIGRlc3BhdGNoZWQgdGhlIHByb3BlciBwZXJzb25zIHRvIGxvb2sgYWZ0ZXIgYWxsIHRoZXNlIHRoaW5ncy4KPC90cmFuc2xhdGlvbj4="
translation['5.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBhbGwgcHJlcGFyYXRpb25zIGhhZCBiZWVuIG1hZGUgYW5kIHRoZSBjYXB0YWlucywgbGlldXRlbmFudHMsIGFuZCB0aG9zZSBhbW9uZyB0aGUgbWVuIHdobyBjbGFpbWVkIHRvIGJlIG5vdCBpbmZlcmlvciB0byB0aGVtIGluIGJyYXZlcnkgd2VyZSBhbGwgZ3JvdXBlZCB0b2dldGhlciBpbiB0aGUgbGluZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIGZvcm1hdGlvbiB3aGljaCB0aGUgY2FwdGFpbnMganVkZ2VkIHRvIGJlIHRoZSDigJxtb3N0IGVmZmVjdGl2ZeKAnSAoICAxMSBhYm92ZSkuPC9ub3RlPiBhbmQsIG1vcmVvdmVyLCB3YXRjaGluZyBvbmUgYW5vdGhlciAoZm9yIHRoZSBsaW5lIHdhcyBjcmVzY2VudC1zaGFwZWQsIHRvIGNvbmZvcm0gd2l0aCB0aGUgcG9zaXRpb24gdGhleSB3ZXJlIGF0dGFja2luZyksCjwvdHJhbnNsYXRpb24+"
translation['5.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz50aGVuIHRoZXkgc3RydWNrIHVwIHRoZSBwYWVhbiBhbmQgdGhlIHRydW1wZXQgc291bmRlZCwgYW5kIHRoZW4sIGF0IHRoZSBzYW1lIG1vbWVudCwgdGhleSByYWlzZWQgdGhlIHdhciBjcnkgdG8gRW55YWxpdXMsIHRoZSBob3BsaXRlcyBjaGFyZ2VkIGZvcndhcmQgb24gdGhlIHJ1biwgYW5kIHRoZSBtaXNzaWxlcyBiZWdhbiB0byBmbHkgYWxsIHRvZ2V0aGVy4oCUc3BlYXJzLCBhcnJvd3MsIHNsaW5nLXN0b25lcywgYW5kIHZlcnkgbWFueSBzdG9uZXMgdGhyb3duIGJ5IGhhbmQsIHdoaWxlIHNvbWUgb2YgdGhlIG1lbiBlbXBsb3llZCBmaXJlYnJhbmRzIGFsc28uCjwvdHJhbnNsYXRpb24+"
translation['5.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5CeSByZWFzb24gb2YgdGhlIHF1YW50aXR5IG9mIHRoZSBtaXNzaWxlcyB0aGUgZW5lbXkgYWJhbmRvbmVkIGJvdGggdGhlaXIgcmFtcGFydHMgYW5kIHRoZWlyIHRvd2Vycywgc28gdGhhdCBBZ2FzaWFzIHRoZSBTdHltcGhhbGlhbiwgcHV0dGluZyBhc2lkZSBoaXMgYXJtcyBhbmQgY2xhZCBvbmx5IGluIGhpcyB0dW5pYywgY2xpbWJlZCB1cCwgdGhlbiBwdWxsZWQgdXAgYW5vdGhlciBtYW4sIGFuZCBtZWFud2hpbGUgYW5vdGhlciBoYWQgbWFkZSB0aGUgY2xpbWIsIHNvIHRoYXQgdGhlIGNhcHR1cmUgb2YgdGhlIHN0cm9uZ2hvbGQgd2FzIGFjY29tcGxpc2hlZCwgYXMgaXQgc2VlbWVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmV1cG9uIHRoZSBwZWx0YXN0cyBhbmQgdGhlIGxpZ2h0IHRyb29wcyBydXNoZWQgaW4gYW5kIHByb2NlZWRlZCB0byBzbmF0Y2ggd2hhdGV2ZXIgcGx1bmRlciB0aGV5IHNldmVyYWxseSBjb3VsZDsgYnV0IFhlbm9waG9uLCB0YWtpbmcgaGlzIHN0YW5kIGF0IHRoZSBnYXRlcywga2VwdCBvdXQgYXMgbWFueSBhcyBoZSBjb3VsZCBvZiB0aGUgaG9wbGl0ZXMsIGZvciB0aGUgcmVhc29uIHRoYXQgb3RoZXIgZW5lbWllcyB3ZXJlIGNvbWluZyBpbnRvIHZpZXcgdXBvbiBjZXJ0YWluIHN0cm9uZyBoZWlnaHRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciBubyBsb25nIGludGVydmFsIGEgc2hvdXQgYXJvc2Ugd2l0aGluIGFuZCBtZW4gY2FtZSBwb3VyaW5nIGZvcnRoIGluIGZsaWdodCwgc29tZSBjYXJyeWluZyB3aXRoIHRoZW0gd2hhdCB0aGV5IGhhZCBzZWl6ZWQsIHRoZW4gc29vbiBhIG51bWJlciBvZiBtZW4gdGhhdCB3ZXJlIHdvdW5kZWQ7IGFuZCB0aGVyZSB3YXMgYSBkZWFsIG9mIHB1c2hpbmcgYWJvdXQgdGhlIGdhdGVzLiBXaGVuIHRob3NlIHdobyB3ZXJlIHR1bWJsaW5nIG91dCB3ZXJlIHF1ZXN0aW9uZWQsIHRoZXkgc2FpZCB0aGF0IHRoZXJlIHdhcyBhIGNpdGFkZWwgd2l0aGluLCB0aGF0IHRoZSBlbmVteSB3ZXJlIG51bWVyb3VzLCBhbmQgdGhhdCB0aGV5IGhhZCBzYWxsaWVkIGZvcnRoIGFuZCB3ZXJlIGRlYWxpbmcgYmxvd3MgdXBvbiB0aGUgbWVuIGluc2lkZS4KPC90cmFuc2xhdGlvbj4="
translation['5.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIFhlbm9waG9uIG9yZGVyZWQgVG9sbWlkZXMgdGhlIGhlcmFsZCB0byBwcm9jbGFpbSB0aGF0IHdob2V2ZXIgd2FudGVkIHRvIGdldCBhbnkgcGx1bmRlciBzaG91bGQgZ28gaW4uIEF0IHRoYXQgbWFueSBwcm9jZWVkZWQgdG8gcnVzaCBpbnRvIHRoZSBnYXRlcywgYW5kIHRoZSBjcm93ZCB0aGF0IHdhcyBwdXNoaW5nIGluIG92ZXJjYW1lIHRoZSBjcm93ZCB0aGF0IHdhcyB0dW1ibGluZyBvdXQgYW5kIHNodXQgdXAgdGhlIGVuZW15IGFnYWluIGluIHRoZWlyIGNpdGFkZWwuCjwvdHJhbnNsYXRpb24+"
translation['5.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5TbyBldmVyeXRoaW5nIG91dHNpZGUgdGhlIGNpdGFkZWwgd2FzIHNlaXplZCBhbmQgY2FycmllZCBvZmYgYnkgdGhlIEdyZWVrcywgYW5kIHRoZSBob3BsaXRlcyB0b29rIHVwIHRoZWlyIHBvc2l0aW9uLCBzb21lIGFib3V0IHRoZSByYW1wYXJ0cywgb3RoZXJzIGFsb25nIHRoZSByb2FkIGxlYWRpbmcgdXAgdG8gdGhlIGNpdGFkZWwuCjwvdHJhbnNsYXRpb24+"
translation['5.2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgWGVub3Bob24gYW5kIHRoZSBjYXB0YWlucyB3ZXJlIGxvb2tpbmcgdG8gc2VlIHdoZXRoZXIgaXQgd2FzIHBvc3NpYmxlIHRvIGNhcHR1cmUgdGhlIGNpdGFkZWwsIGZvciBpbiB0aGF0IGNhc2UgdGhlaXIgc2FmZXR5IHdhcyBzZWN1cmVkLCB3aGlsZSBvdGhlcndpc2UgdGhleSB0aG91Z2h0IGl0IHdvdWxkIGJlIHZlcnkgZGlmZmljdWx0IHRvIGVmZmVjdCB0aGVpciB3aXRoZHJhd2FsOyBidXQgdGhlIHVwc2hvdCBvZiB0aGVpciBjb25zaWRlcmF0aW9uIHdhcywgdGhhdCB0aGUgcGxhY2Ugd2FzIHF1aXRlIGltcHJlZ25hYmxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiB0aGV5IG1hZGUgcHJlcGFyYXRpb25zIGZvciB0aGUgd2l0aGRyYXdhbDogdGhleSB0b3JlIGRvd24gdGhlIHBhbGlzYWRlcywgZWFjaCBkaXZpc2lvbiB0YWtpbmcgdGhvc2Ugb24gaXRzIG93biBmcm9udCwgYW5kIHNlbnQgb2ZmIHRoZSBtZW4gd2hvIHdlcmUgdW5maXQgZm9yIHNlcnZpY2Ugb3Igd2VyZSBjYXJyeWluZyBidXJkZW5zLCBhbmQgbGlrZXdpc2UgdGhlIGdyZWF0ZXIgcGFydCBvZiB0aGUgaG9wbGl0ZXMsIHRoZSBjYXB0YWlucyBrZWVwaW5nIGJlaGluZCBvbmx5IHRob3NlIHRyb29wcyB0aGF0IHRoZXkgZWFjaCByZWxpZWQgdXBvbi4KPC90cmFuc2xhdGlvbj4="
translation['5.2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIG1vbWVudCB0aGV5IGJlZ2FuIHRvIHJldGlyZSwgdGhlcmUgcnVzaGVkIG91dCB1cG9uIHRoZW0gZnJvbSB3aXRoaW4gYSBncmVhdCBjcm93ZCBvZiBtZW4gYXJtZWQgd2l0aCB3aWNrZXIgc2hpZWxkcywgc3BlYXJzLCBncmVhdmVzLCBhbmQgUGFwaGxhZ29uaWFuIGhlbG1ldHMsIHdoaWxlIG90aGVycyBzZXQgYWJvdXQgY2xpbWJpbmcgdG8gdGhlIHRvcHMgb2YgdGhlIGhvdXNlcyB0aGF0IHdlcmUgb24gZWl0aGVyIHNpZGUgb2YgdGhlIHJvYWQgbGVhZGluZyB1cCB0byB0aGUgY2l0YWRlbC4KPC90cmFuc2xhdGlvbj4="
translation['5.2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcmVzdWx0IHdhcyB0aGF0IGV2ZW4gYSBwdXJzdWl0IGluIHRoZSBkaXJlY3Rpb24gb2YgdGhlIGdhdGVzIHRoYXQgbGVkIGludG8gdGhlIGNpdGFkZWwgd2FzIHVuc2FmZTsgZm9yIHRoZXkgd291bGQgaHVybCBkb3duIGdyZWF0IGxvZ3MgZnJvbSBhYm92ZSwgc28gdGhhdCBpdCB3YXMgZGlmZmljdWx0IGVpdGhlciB0byByZW1haW4gb3IgdG8gcmV0aXJlLiBBbmQgdGhlIGFwcHJvYWNoIG9mIG5pZ2h0IHdhcyBhbHNvIGEgY2F1c2UgZm9yIGZlYXIuCjwvdHJhbnNsYXRpb24+"
translation['5.2.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gdGhlIG1pZHN0IG9mIHRoZWlyIGZpZ2h0aW5nIGFuZCBwZXJwbGV4aXR5IHNvbWUgZ29kIGdhdmUgdG8gdGhlIEdyZWVrcyBhIG1lYW5zIG9mIHNhbHZhdGlvbi4gRm9yIG9mIGEgc3VkZGVuIG9uZSBvZiB0aGUgaG91c2VzIG9uIHRoZSByaWdodCwgc2V0IG9uIGZpcmUgYnkgc29tZWJvZHkgb3Igb3RoZXIsIGJyb2tlIGludG8gYSBibGF6ZTsgYW5kIGFzIGl0IGJlZ2FuIHRvIGZhbGwgaW4sIHRoZXJlIGJlZ2FuIGEgZ2VuZXJhbCBmbGlnaHQgZnJvbSB0aGUgb3RoZXIgaG91c2VzIG9uIHRoZSByaWdodCBzaWRlIG9mIHRoZSByb2FkLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbW9tZW50IFhlbm9waG9uIGdyYXNwZWQgdGhpcyBsZXNzb24gd2hpY2ggY2hhbmNlIGhhZCBnaXZlbiBoaW0sIGhlIGdhdmUgb3JkZXJzIHRvIHNldCBmaXJlIHRvIHRoZSBob3VzZXMgb24gdGhlIGxlZnQgYWxzbywgd2hpY2ggd2VyZSBvZiB3b29kIGFuZCBzbyBmZWxsIHRvIGJ1cm5pbmcgdmVyeSBxdWlja2x5LiBUaGUgcmVzdWx0IHdhcyB0aGF0IHRoZSBwZW9wbGUgaW4gdGhlc2UgaG91c2VzIGxpa2V3aXNlIHRvb2sgdG8gZmxpZ2h0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgb25seSB0aGUgZW5lbXkgaW4gdGhlaXIgZnJvbnQgd2hvIHdlcmUgbm93IGxlZnQgdG8gdHJvdWJsZSB0aGUgR3JlZWtzIGFuZCBtYW5pZmVzdGx5IGludGVuZGVkIHRvIGF0dGFjayB0aGVtIGFzIHRoZXkgcGFzc2VkIG91dCBhbmQgZG93biB0aGUgaGlsbC4gQXQgdGhpcyBzdGFnZSBYZW5vcGhvbiBzZW50IG91dCBvcmRlcnMgdGhhdCBhbGwgd2hvIGNoYW5jZWQgdG8gYmUgb3V0IG9mIHJhbmdlIG9mIHRoZSBtaXNzaWxlcyBzaG91bGQgc2V0IGFib3V0IGJyaW5naW5nIHVwIGxvZ3MgYW5kIHB1dCB0aGVtIGluIHRoZSBvcGVuIHNwYWNlIGJldHdlZW4gdGhlaXIgb3duIGZvcmNlcyBhbmQgdGhlIGVuZW15LiBBcyBzb29uIGFzIGVub3VnaCBsb2dzIGhhZCBiZWVuIGNvbGxlY3RlZCwgdGhleSBzZXQgZmlyZSB0byB0aGVtOyBhbmQgbWVhbndoaWxlIHRoZXkgc2V0IGZpcmUgYWxzbyB0byB0aGUgaG91c2VzIHdoaWNoIHdlcmUgY2xvc2UgYWxvbmcgdGhlIHBhbGlzYWRlLCBzbyB0aGF0IHRoZSBlbmVteSdzIGF0dGVudGlvbiBtaWdodCBiZSBvY2N1cGllZCB3aXRoIHRoZXNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgaW4gdGhpcyB3YXkgdGhhdCB0aGV5IGVmZmVjdGVkLCB3aXRoIGRpZmZpY3VsdHksIHRoZWlyIHdpdGhkcmF3YWwgZnJvbSB0aGUgc3Ryb25naG9sZCwgYnkgcHV0dGluZyBmaXJlIGJldHdlZW4gdGhlbXNlbHZlcyBhbmQgdGhlIGVuZW15LiBBbmQgdGhlIHdob2xlIGNpdHkgd2FzIGJ1cm5lZCBkb3duLCBob3VzZXMsIHRvd2VycywgcGFsaXNhZGVzLCBhbmQgZXZlcnl0aGluZyBlbHNlIGV4Y2VwdCB0aGUgY2l0YWRlbC4KPC90cmFuc2xhdGlvbj4="
translation['5.2.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhlIG5leHQgZGF5IHRoZSBHcmVla3Mgd2VyZSBmb3IgcmV0dXJuaW5nIHRvIGNhbXAgd2l0aCB0aGVpciBwcm92aXNpb25zLiBCdXQgaW5hc211Y2ggYXMgdGhleSBmZWFyZWQgdGhlIGRlc2NlbnQgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUcmFwZXp1cyxBcmNhZGlhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUcmFwZXp1cyxBcmNhZGlhIj5UcmFwZXp1czwvcGxhY2VOYW1lPiAoZm9yIHRoZSB3YXkgd2FzIHN0ZWVwIGFuZCBuYXJyb3cpLCB0aGV5IGxhaWQgYSBzaGFtIGFtYnVzY2FkZToKPC90cmFuc2xhdGlvbj4="
translation['5.2.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5hIG1hbiBvZiBNeXNpYSwgd2hvIGxpa2V3aXNlIGJvcmUgdGhlIG5hbWUgb2YgTXlzdXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldoaWNoIGl0c2VsZiBtZWFucyDigJxNeXNpYW7igJ3igJRqdXN0IGFzIOKAnEVuZ2xpc2jigJ0gbWlnaHQgYmUgdGhlIGZhbWlseSBuYW1lIG9mIGFuIEVuZ2xpc2htYW4uPC9ub3RlPiB0b29rIHRlbiBvZiB0aGUgQ3JldGFucywgc3RheWVkIGJlaGluZCBpbiBhIGJpdCBvZiB1bmRlcmdyb3d0aCwgYW5kIHByZXRlbmRlZCB0byBiZSB0cnlpbmcgdG8ga2VlcCBvdXQgb2Ygc2lnaHQgb2YgdGhlIGVuZW15OyBidXQgdGhlaXIgc2hpZWxkcywgd2hpY2ggd2VyZSBvZiBicm9uemUsIHdvdWxkIG5vdyBhbmQgdGhlbiBnbGVhbSB0aHJvdWdoIHRoZSBidXNoZXMuCjwvdHJhbnNsYXRpb24+"
translation['5.2.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGUgZW5lbXksIGNhdGNoaW5nIGdsaW1wc2VzIG9mIHRoZXNlIHByb2NlZWRpbmdzLCB3ZXJlIGZlYXJmdWwgdGhhdCBpdCB3YXMgYW4gYW1idXNjYWRlOyBhbmQgbWVhbndoaWxlIHRoZSBHcmVlayBhcm15IHdhcyBtYWtpbmcgaXRzIGRlc2NlbnQuIFdoZW4gaXQgc2VlbWVkIHRoYXQgdGhleSBoYWQgZ290IGRvd24gZmFyIGVub3VnaCwgYSBzaWduYWwgd2FzIGdpdmVuIHRvIHRoZSBNeXNpYW4gdG8gZmxlZSBhdCB0aGUgdG9wIG9mIGhpcyBzcGVlZCwgYW5kIGhlIGFuZCBoaXMgY29tcGFuaW9ucyBhcm9zZSBhbmQgdG9vayB0byBmbGlnaHQuCjwvdHJhbnNsYXRpb24+"
translation['5.2.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgQ3JldGFucyBvZiB0aGUgcGFydHkgKGZpbmRpbmcsIGFzIHRoZXkgc2FpZCwgdGhhdCB0aGV5IHdlcmUgbGlrZSB0byBiZSBvdmVydGFrZW4gaW4gdGhlIHJ1bm5pbmcpIHBsdW5nZWQgb3V0IG9mIHRoZSByb2FkIGludG8gdGhlIHdvb2RzLCBhbmQgYnkgdHVtYmxpbmcgZG93biB0aHJvdWdoIHRoZSByYXZpbmVzIG1hZGUgdGhlaXIgZXNjYXBlLAo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5idXQgdGhlIE15c2lhbiBoZWxkIHRvIHRoZSByb2FkIGluIGhpcyBmbGlnaHQgYW5kIGtlcHQgc2hvdXRpbmcgZm9yIGhlbHA7IGFuZCB0aGV5IGRpZCBnbyB0byBoaXMgYWlkLCBhbmQgcGlja2VkIGhpbSB1cCB3b3VuZGVkLiBUaGVuIHRoZSByZXNjdWVycyBpbiB0aGVpciB0dXJuIHByb2NlZWRlZCB0byByZXRyZWF0LCBmYWNlcyB0byB0aGUgZnJvbnQsIHdoaWxlIHRoZSBlbmVteSBrZXB0IHRocm93aW5nIG1pc3NpbGVzIGF0IHRoZW0gYW5kIHNvbWUgb2YgdGhlIENyZXRhbnMgcmVwbGllZCB3aXRoIHRoZWlyIGFycm93cy4gSW4gdGhpcyB3YXkgdGhleSBhbGwgcmVhY2hlZCB0aGUgY2FtcCBzYWZlIGFuZCBzb3VuZC4KPC90cmFuc2xhdGlvbj4="
translation['5.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgbm93LCBzZWVpbmcgdGhhdCBDaGVpcmlzb3BodXMgd2FzIG5vdCByZXR1cm5lZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjEuNCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjEuNDwvYmlibD4uPC9ub3RlPiB0aGF0IHRoZXkgaGFkIG5vdCBhbiBhZGVxdWF0ZSBudW1iZXIgb2Ygc2hpcHMsPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjEuNCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjEuNDwvYmlibD4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4xLjEwIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuMS4xMC0xNjwvYmlibD4uPC9ub3RlPiBhbmQgdGhhdCBpdCB3YXMgbm8gbG9uZ2VyIHBvc3NpYmxlIHRvIGdldCBwcm92aXNpb25zLCB0aGV5IHJlc29sdmVkIHRvIGRlcGFydCBieSBsYW5kLiBPbiBib2FyZCB0aGUgc2hpcHMgdGhleSBlbWJhcmtlZCB0aGUgc2ljaywgdGhvc2Ugd2hvIHdlcmUgbW9yZSB0aGFuIGZvcnR5IHllYXJzIG9mIGFnZSwgdGhlIHdvbWVuIGFuZCBjaGlsZHJlbiwgYW5kIGFsbCB0aGUgYmFnZ2FnZSB3aGljaCB0aGV5IGRpZCBub3QgbmVlZCB0byBrZWVwIHdpdGggdGhlbS4gVGhleSBwdXQgYWJvYXJkIGFsc28gUGhpbGVzaXVzIGFuZCBTb3BoYWVuZXR1cywgdGhlIGVsZGVzdCBvZiB0aGUgZ2VuZXJhbHMsIGFuZCBiYWRlIHRoZW0gdGFrZSBjaGFyZ2Ugb2YgdGhlIGVudGVycHJpc2U7CjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4xLjEwIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuMS4xMC0xNjwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['5.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPnRoZW4gdGhlIHJlc3QgdG9vayB1cCB0aGUgbWFyY2gsIHRoZSByb2FkIGhhdmluZyBiZWVuIGFscmVhZHkgY29uc3RydWN0ZWQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4xLjEzIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuMS4xMy0xNDwvYmlibD4uPC9ub3RlPiBBbmQgb24gdGhlIHRoaXJkIGRheSBvZiB0aGVpciBqb3VybmV5IHRoZXkgcmVhY2hlZCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDUuMS4xMyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjEuMTMtMTQ8L2JpYmw+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDg2MzU3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwODYzNTciPkNlcmFzdXM8L3BsYWNlTmFtZT4sIGEgR3JlZWsgY2l0eSBvbiB0aGUgc2VhLCBiZWluZyBhIGNvbG9ueSBwbGFudGVkIGJ5IHRoZSBTaW5vcGVhbnMgaW4gdGhlIHRlcnJpdG9yeSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjY0MiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2NjQyIj5Db2xjaGlzPC9wbGFjZU5hbWU+LiAKPC90cmFuc2xhdGlvbj4="
translation['5.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIHRoZXkgcmVtYWluZWQgdGVuIGRheXM7IGFuZCB0aGUgdHJvb3BzIHdlcmUgcmV2aWV3ZWQgdW5kZXIgYXJtcyBhbmQgbnVtYmVyZWQsIGFuZCB0aGVyZSBwcm92ZWQgdG8gYmUgZWlnaHQgdGhvdXNhbmQgc2l4IGh1bmRyZWQgbWVuLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA0LjguMTUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNC44LjE1PC9iaWJsPiBhbmQgbm90ZXMgdGhlcmVvbi48L25vdGU+IFNvIG1hbnkgd2VyZSBsZWZ0IGFsaXZlLiBUaGUgcmVzdCBoYWQgcGVyaXNoZWQgYXQgdGhlIGhhbmRzIG9mIHRoZSBlbmVteSBvciBpbiB0aGUgc25vdywgYSBmZXcgYWxzbyBieSBkaXNlYXNlLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuOC4xNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjguMTU8L2JpYmw+IGFuZCBub3RlcyB0aGVyZW9uLjwvdHJhbnNsYXRpb24+"
translation['5.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSwgYWxzbywgdGhleSBkaXZpZGVkIHRoZSBtb25leSByZWNlaXZlZCBmcm9tIHRoZSBzYWxlIG9mIHRoZSBib290eS4gQW5kIHRoZSB0aXRoZSwgd2hpY2ggdGhleSBzZXQgYXBhcnQgZm9yIEFwb2xsbyBhbmQgZm9yIEFydGVtaXMgb2YgdGhlIEVwaGVzaWFucywgd2FzIGRpc3RyaWJ1dGVkIGFtb25nIHRoZSBnZW5lcmFscywgZWFjaCB0YWtpbmcgaGlzIHBvcnRpb24gdG8ga2VlcCBzYWZlbHkgZm9yIHRoZSBnb2RzOyBhbmQgdGhlIHBvcnRpb24gdGhhdCBmZWxsIHRvIENoZWlyaXNvcGh1cyB3YXMgZ2l2ZW4gdG8gTmVvbiB0aGUgQXNpbmFlYW4uCjwvdHJhbnNsYXRpb24+"
translation['5.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciBYZW5vcGhvbiwgaGUgY2F1c2VkIGEgdm90aXZlIG9mZmVyaW5nIHRvIGJlIG1hZGUgb3V0IG9mIEFwb2xsbydzIHNoYXJlIG9mIGhpcyBwb3J0aW9uIGFuZCBkZWRpY2F0ZWQgaXQgaW4gdGhlIHRyZWFzdXJ5IG9mIHRoZSBBdGhlbmlhbnMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxEZWxwaGkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERlbHBoaSI+RGVscGhpPC9wbGFjZU5hbWU+LCBpbnNjcmliaW5nIHVwb24gaXQgaGlzIG93biBuYW1lIGFuZCB0aGF0IG9mIFByb3hlbnVzLCB3aG8gd2FzIGtpbGxlZCB3aXRoIENsZWFyY2h1czs8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi41PC9iaWJsPi48L25vdGU+IGZvciBQcm94ZW51cyB3YXMgaGlzIGZyaWVuZC48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjU8L2JpYmw+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDMuMS40IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuMS40LTEwPC9iaWJsPi48L25vdGU+CjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy4xLjQiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy4xLjQtMTA8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['5.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBzaGFyZSB3aGljaCBiZWxvbmdlZCB0byBBcnRlbWlzIG9mIHRoZSBFcGhlc2lhbnMgaGUgbGVmdCBiZWhpbmQsIGF0IHRoZSB0aW1lIHdoZW4gaGUgd2FzIHJldHVybmluZyBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwMDQiPkFzaWE8L3BsYWNlTmFtZT4gd2l0aCBBZ2VzaWxhdXMgdG8gdGFrZSBwYXJ0IGluIHRoZSBjYW1wYWlnbiBhZ2FpbnN0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjgzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2ODMiPkJvZW90aWE8L3BsYWNlTmFtZT4sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkluIDxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQ8L2RhdGU+IEIuQy4sIGVuZGluZyBpbiB0aGUgaGFyZC1mb3VnaHQgYmF0dGxlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDExMjM1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTEyMzUiPkNvcm9uZWE8L3BsYWNlTmFtZT4sIGF0IHdoaWNoIFhlbm9waG9uIHdhcyBwcmVzZW50LiBjcC4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiA0LjIuMSIgdmFsaWQ9InllcyI+WGVuLiBIZWxsLiA0LjIuMS04PC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiA0LjMuMSIgdmFsaWQ9InllcyI+WGVuLiBIZWxsLiA0LjMuMS0yMTwvYmlibD4uPC9ub3RlPiBpbiBjaGFyZ2Ugb2YgTWVnYWJ5enVzLCB0aGUgc2FjcmlzdGFuIG9mIEFydGVtaXMsIGZvciB0aGUgcmVhc29uIHRoYXQgaGlzIG93biBqb3VybmV5IHNlZW1lZCBsaWtlbHkgdG8gYmUgYSBkYW5nZXJvdXMgb25lOyBhbmQgaGlzIGluc3RydWN0aW9ucyB3ZXJlIHRoYXQgaW4gY2FzZSBoZSBzaG91bGQgZXNjYXBlIHdpdGggaGlzIGxpZmUsIHRoZSBtb25leSB3YXMgdG8gYmUgcmV0dXJuZWQgdG8gaGltLCBidXQgaW4gY2FzZSBhbnkgaWxsIHNob3VsZCBiZWZhbGwgaGltLCBNZWdhYnl6dXMgd2FzIHRvIGNhdXNlIHRvIGJlIG1hZGUgYW5kIGRlZGljYXRlZCB0byBBcnRlbWlzIHdoYXRldmVyIG9mZmVyaW5nIGhlIHRob3VnaHQgd291bGQgcGxlYXNlIHRoZSBnb2RkZXNzLgo8ZGF0ZSBhdXRobmFtZT0iLTM5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NCI+Mzk0PC9kYXRlPiBCLkMuLCBlbmRpbmcgaW4gdGhlIGhhcmQtZm91Z2h0IGJhdHRsZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTIzNSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMjM1Ij5Db3JvbmVhPC9wbGFjZU5hbWU+LCBhdCB3aGljaCBYZW5vcGhvbiB3YXMgcHJlc2VudC4gY3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gNC4yLjEiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gNC4yLjEtODwvYmlibD4sIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gNC4zLjEiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gNC4zLjEtMjE8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['5.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGUgdGltZSBvZiBYZW5vcGhvbidzIGV4aWxlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldoaWNoIHdhcyBwcm9iYWJseSBkdWUgdG8gaGlzIHRha2luZyBwYXJ0IGluIHRoZSBleHBlZGl0aW9uIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4uIGNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDMuMS41IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuMS41PC9iaWJsPi48L25vdGU+IGFuZCB3aGlsZSBoZSB3YXMgbGl2aW5nIGF0IFNjaWxsdXMsIG5lYXIgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPi4gY3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy4xLjUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy4xLjU8L2JpYmw+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsT2x5bXBpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsT2x5bXBpYSI+T2x5bXBpYTwvcGxhY2VOYW1lPiwgd2hlcmUgaGUgaGFkIGJlZW4gZXN0YWJsaXNoZWQgYXMgYSBjb2xvbmlzdCBieSB0aGUgTGFjZWRhZW1vbmlhbnMsIE1lZ2FieXp1cyBjYW1lIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsT2x5bXBpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsT2x5bXBpYSI+T2x5bXBpYTwvcGxhY2VOYW1lPiB0byBhdHRlbmQgdGhlIGdhbWVzIGFuZCByZXR1cm5lZCB0byBoaW0gaGlzIGRlcG9zaXQuIFVwb24gcmVjZWl2aW5nIGl0IFhlbm9waG9uIGJvdWdodCBhIHBsb3Qgb2YgZ3JvdW5kIGZvciB0aGUgZ29kZGVzcyBpbiBhIHBsYWNlIHdoaWNoIEFwb2xsbydzIG9yYWNsZSBhcHBvaW50ZWQuCjwvdHJhbnNsYXRpb24+"
translation['5.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFzIGl0IGNoYW5jZWQsIHRoZXJlIGZsb3dlZCB0aHJvdWdoIHRoZSBwbG90IGEgcml2ZXIgbmFtZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTZWxpbnVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTZWxpbnVzIj5TZWxpbnVzPC9wbGFjZU5hbWU+OyBhbmQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxFcGhlc29zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxFcGhlc29zIj5FcGhlc3VzPC9wbGFjZU5hbWU+IGxpa2V3aXNlIGEgU2VsaW51cyByaXZlciBmbG93cyBwYXN0IHRoZSB0ZW1wbGUgb2YgQXJ0ZW1pcy4gSW4gYm90aCBzdHJlYW1zLCBtb3Jlb3ZlciwgdGhlcmUgYXJlIGZpc2ggYW5kIG11c3NlbHMsIHdoaWxlIGluIHRoZSBwbG90IGF0IFNjaWxsdXMgdGhlcmUgaXMgaHVudGluZyBvZiBhbGwgbWFubmVyIG9mIGJlYXN0cyBvZiB0aGUgY2hhc2UuCjwvdHJhbnNsYXRpb24+"
translation['5.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkhlcmUgWGVub3Bob24gYnVpbHQgYW4gYWx0YXIgYW5kIGEgdGVtcGxlIHdpdGggdGhlIHNhY3JlZCBtb25leSwgYW5kIGZyb20gdGhhdCB0aW1lIGZvcnRoIGhlIHdvdWxkIGV2ZXJ5IHllYXIgdGFrZSB0aGUgdGl0aGUgb2YgdGhlIHByb2R1Y3RzIG9mIHRoZSBsYW5kIGluIHRoZWlyIHNlYXNvbiBhbmQgb2ZmZXIgc2FjcmlmaWNlIHRvIHRoZSBnb2RkZXNzLCBhbGwgdGhlIGNpdGl6ZW5zIGFuZCB0aGUgbWVuIGFuZCB3b21lbiBvZiB0aGUgbmVpZ2hib3VyaG9vZCB0YWtpbmcgcGFydCBpbiB0aGUgZmVzdGl2YWwuIEFuZCB0aGUgZ29kZGVzcyB3b3VsZCBwcm92aWRlIGZvciB0aGUgYmFucXVldGVycyBiYXJsZXkgbWVhbCBhbmQgbG9hdmVzIG9mIGJyZWFkLCB3aW5lIGFuZCBzd2VldG1lYXRzLCBhbmQgYSBwb3J0aW9uIG9mIHRoZSBzYWNyaWZpY2lhbCB2aWN0aW1zIGZyb20gdGhlIHNhY3JlZCBoZXJkIGFzIHdlbGwgYXMgb2YgdGhlIHZpY3RpbXMgdGFrZW4gaW4gdGhlIGNoYXNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgWGVub3Bob24ncyBzb25zIGFuZCB0aGUgc29ucyBvZiB0aGUgb3RoZXIgY2l0aXplbnMgdXNlZCB0byBoYXZlIGEgaHVudGluZyBleHBlZGl0aW9uIGF0IHRoZSB0aW1lIG9mIHRoZSBmZXN0aXZhbCwgYW5kIGFueSBncm93biBtZW4gd2hvIHNvIHdpc2hlZCB3b3VsZCBqb2luIHRoZW07IGFuZCB0aGV5IGNhcHR1cmVkIHRoZWlyIGdhbWUgcGFydGx5IGZyb20gdGhlIHNhY3JlZCBwcmVjaW5jdCBpdHNlbGYgYW5kIHBhcnRseSBmcm9tIE1vdW50IFBob2xvZeKAlGJvYXJzIGFuZCBnYXplbGxlcyBhbmQgc3RhZ3MuCjwvdHJhbnNsYXRpb24+"
translation['5.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHBsYWNlIGlzIHNpdHVhdGVkIG9uIHRoZSByb2FkIHdoaWNoIGxlYWRzIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEwNjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMTA2NSI+TGFjZWRhZW1vbjwvcGxhY2VOYW1lPiB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE9seW1waWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE9seW1waWEiPk9seW1waWE8L3BsYWNlTmFtZT4sIGFuZCBpcyBhYm91dCB0d2VudHkgc3RhZGlhIGZyb20gdGhlIHRlbXBsZSBvZiBaZXVzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsT2x5bXBpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsT2x5bXBpYSI+T2x5bXBpYTwvcGxhY2VOYW1lPi4gV2l0aGluIHRoZSBzYWNyZWQgcHJlY2luY3QgdGhlcmUgaXMgbWVhZG93bGFuZCBhbmQgdHJlZWNvdmVyZWQgaGlsbHMsIHN1aXRlZCBmb3IgdGhlIHJlYXJpbmcgb2Ygc3dpbmUsIGdvYXRzLCBjYXR0bGUgYW5kIGhvcnNlcywgc28gdGhhdCBldmVuIHRoZSBkcmF1Z2h0IGFuaW1hbHMgd2hpY2ggYnJpbmcgcGVvcGxlIHRvIHRoZSBmZXN0aXZhbCBoYXZlIHRoZWlyIGZlYXN0IGFsc28uCjwvdHJhbnNsYXRpb24+"
translation['5.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5JbW1lZGlhdGVseSBzdXJyb3VuZGluZyB0aGUgdGVtcGxlIGlzIGEgZ3JvdmUgb2YgY3VsdGl2YXRlZCB0cmVlcywgcHJvZHVjaW5nIGFsbCBzb3J0cyBvZiBkZXNzZXJ0IGZydWl0cyBpbiB0aGVpciBzZWFzb24uIFRoZSB0ZW1wbGUgaXRzZWxmIGlzIGxpa2UgdGhlIG9uZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEVwaGVzb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEVwaGVzb3MiPkVwaGVzdXM8L3BsYWNlTmFtZT4sIGFsdGhvdWdoIHNtYWxsIGFzIGNvbXBhcmVkIHdpdGggZ3JlYXQsIGFuZCB0aGUgaW1hZ2Ugb2YgdGhlIGdvZGRlc3MsIGFsdGhvdWdoIGN5cHJlc3Mgd29vZCBhcyBjb21wYXJlZCB3aXRoIGdvbGQsIGlzIGxpa2UgdGhlIEVwaGVzaWFuIGltYWdlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5CZXNpZGUgdGhlIHRlbXBsZSBzdGFuZHMgYSB0YWJsZXQgd2l0aCB0aGlzIGluc2NyaXB0aW9uOjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9Imluc2NyaXB0Ij5UaGUgcGxhY2UgaXMgc2FjcmVkIHRvIEFydGVtaXMuIEhlIHdobyBob2xkcyBpdCBhbmQgZW5qb3lzIGl0cyBmcnVpdHMgbXVzdCBvZmZlciB0aGUgdGl0aGUgZXZlcnkgeWVhciBpbiBzYWNyaWZpY2UsIGFuZCBmcm9tIHRoZSByZW1haW5kZXIgbXVzdCBrZWVwIHRoZSB0ZW1wbGUgaW4gcmVwYWlyLiBJZiBhbnkgb25lIGxlYXZlcyB0aGVzZSB0aGluZ3MgdW5kb25lLCB0aGUgZ29kZGVzcyB3aWxsIGxvb2sgdG8gaXQuPC9xdW90ZT4KPC90cmFuc2xhdGlvbj4="
translation['5.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZWF2aW5nIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDg2MzU3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwODYzNTciPkNlcmFzdXM8L3BsYWNlTmFtZT4sIHRoZSBwZW9wbGUgd2hvIGhhZCB0aHVzIGZhciBiZWVuIGNvbnZleWVkIGJ5IHNlYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjMuMSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjMuMTwvYmlibD4uPC9ub3RlPiB3ZW50IG9uIGFzIGJlZm9yZSwgd2hpbGUgdGhlIHJlc3QgY29udGludWVkIHRoZWlyIGpvdXJuZXkgYnkgbGFuZC4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjMuMSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjMuMTwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['5.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSByZWFjaGVkIHRoZSBib3VuZGFyeSBvZiB0aGUgTW9zc3lub2VjaWFucyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+TGl0LiBkd2VsbGVycyBpbiBNb3NzeW5zLCBvciB3b29kZW4gdG93ZXJzLiBTZWUgMjYgYmVsb3cuPC9ub3RlPiB0aGV5IHNlbnQgdG8gdGhlbSBUaW1lc2l0aGV1cyB0aGUgVHJhcGV6dW50aWFuLCB3aG8gd2FzIG9mZmljaWFsIHJlcHJlc2VudGF0aXZlIG9mIHRoZSBNb3NzeW5vZWNpYW5zIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJhcGV6dXMsQXJjYWRpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVHJhcGV6dXMsQXJjYWRpYSI+VHJhcGV6dXM8L3BsYWNlTmFtZT4sIGFuZCBhc2tlZCB3aGV0aGVyIGluIG1hcmNoaW5nIHRocm91Z2ggdGhlaXIgY291bnRyeSB0aGV5IHdlcmUgdG8gcmVnYXJkIGl0IGFzIGZyaWVuZGx5IG9yIGhvc3RpbGUuIFRoZSBNb3NzeW5vZWNpYW5zIHJlcGxpZWQgdGhhdCB0aGV5IHdvdWxkIG5vdCBwZXJtaXQgdGhlbSB0byBwYXNzIHRocm91Z2g7CjwvdHJhbnNsYXRpb24+"
translation['5.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPmZvciB0aGV5IHRydXN0ZWQgaW4gdGhlaXIgc3Ryb25naG9sZHMuIFRoZW4gVGltZXNpdGhldXMgdG9sZCB0aGUgR3JlZWtzIHRoYXQgdGhlIE1vc3N5bm9lY2lhbnMgd2hvIGR3ZWx0IGZhcnRoZXIgb24gd2VyZSBob3N0aWxlIHRvIHRoZXNlIHBlb3BsZSwgYW5kIGl0IHdhcyBkZWNpZGVkIHRvIHN1bW1vbiB0aGVtIGFuZCBzZWUgd2hldGhlciB0aGV5IHdhbnRlZCB0byBjb25jbHVkZSBhbiBhbGxpYW5jZTsgc28gVGltZXNpdGhldXMgd2FzIHNlbnQgdG8gdGhlbSwgYW5kIGJyb3VnaHQgYmFjayB3aXRoIGhpbSB0aGVpciBjaGllZnMuCjwvdHJhbnNsYXRpb24+"
translation['5.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSBhcnJpdmVkLCB0aGVzZSBjaGllZnMgb2YgdGhlIE1vc3N5bm9lY2lhbnMgYW5kIHRoZSBnZW5lcmFscyBvZiB0aGUgR3JlZWtzIG1ldCB0b2dldGhlcjsKPC90cmFuc2xhdGlvbj4="
translation['5.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPmFuZCBYZW5vcGhvbiBzcG9rZSBhcyBmb2xsb3dzLCBUaW1lc2l0aGV1cyBhY3RpbmcgYXMgaW50ZXJwcmV0ZXI6IOKAnE1vc3N5bm9lY2lhbnMsIHdlIGRlc2lyZSB0byBtYWtlIG91ciB3YXkgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IGluIHNhZmV0eSBieSBsYW5kLCBmb3Igd2UgaGF2ZSBubyBzaGlwczsgYnV0IHRoZXNlIHBlb3BsZSwgd2hvLCBhcyB3ZSBoZWFyLCBhcmUgeW91ciBlbmVtaWVzLCBhcmUgdHJ5aW5nIHRvIGJsb2NrIG91ciBwYXNzYWdlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPklmIHlvdSB3aXNoLCB0aGVyZWZvcmUsIGl0IGlzIHdpdGhpbiB5b3VyIHBvd2VyIHRvIHNlY3VyZSB1cyBhcyBhbGxpZXMsIHRvIGV4YWN0IHZlbmdlYW5jZSBmb3IgYW55IHdyb25nIHRoZXNlIHBlb3BsZSBoYXZlIGV2ZXIgZG9uZSB5b3UsIGFuZCB0byBtYWtlIHRoZW0gaGVuY2Vmb3J0aCB5b3VyIHN1YmplY3RzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpZiB5b3UgZGlzbWlzcyB1cyB3aXRoIGEgcmVmdXNhbCwgd2hlcmUsIGJldGhpbmsgeW91LCBjb3VsZCB5b3UgZXZlciBhZ2FpbiBzZWN1cmUgc28gbGFyZ2UgYSBmb3JjZSB0byBoZWxwIGZpZ2h0IHlvdXIgYmF0dGxlcz/igJ0KPC90cmFuc2xhdGlvbj4="
translation['5.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRvIHRoZXNlIHdvcmRzIHRoZSBjaGllZiBvZiB0aGUgTW9zc3lub2VjaWFucyByZXBsaWVkIHRoYXQgdGhleSBkZXNpcmVkIHRoaXMgYXJyYW5nZW1lbnQgYW5kIGFjY2VwdGVkIHRoZSBhbGxpYW5jZS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPuKAnFdlbGwsIHRoZW4s4oCdIHNhaWQgWGVub3Bob24sIOKAnHdoYXQgdXNlIHdpbGwgeW91IHdhbnQgdG8gbWFrZSBvZiB1cyBpZiB3ZSBiZWNvbWUgeW91ciBhbGxpZXMsIGFuZCB3aGF0IGFzc2lzdGFuY2Ugd2lsbCB5b3UsIGluIHlvdXIgdHVybiwgYmUgYWJsZSB0byByZW5kZXIgdXMgaW4gdGhlIG1hdHRlciBvZiBvdXIgcGFzc2FnZSB0aHJvdWdoIHRoaXMgdGVycml0b3J5P+KAnQo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IHJlcGxpZWQ6IOKAnFdlIGFyZSBhYmxlIHRvIGludmFkZSB0aGlzIGxhbmQgb2YgeW91ciBlbmVtaWVzIGFuZCBvdXJzIGZyb20gdGhlIG9wcG9zaXRlIHNpZGUsIGFuZCB0byBzZW5kIHRvIHlvdSBoZXJlIG5vdCBvbmx5IHNoaXBzLCBidXQgbWVuIHdobyB3aWxsIGFpZCB5b3UgaW4gdGhlIGZpZ2h0aW5nIGFuZCB3aWxsIGd1aWRlIHlvdSBvbiB5b3VyIHdheS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['5.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgY29uZmlybWluZyB0aGlzIGFncmVlbWVudCBieSBnaXZpbmcgYW5kIHJlY2VpdmluZyBwbGVkZ2VzIHRoZXkgZGVwYXJ0ZWQuIFRoZSBuZXh0IGRheSB0aGV5IHJldHVybmVkLCBicmluZ2luZyB3aXRoIHRoZW0gdGhyZWUgaHVuZHJlZCBjYW5vZXMsIGVhY2ggbWFkZSBvdXQgb2YgYSBzaW5nbGUgbG9nIGFuZCBlYWNoIGNvbnRhaW5pbmcgdGhyZWUgbWVuLCB0d28gb2Ygd2hvbSBkaXNlbWJhcmtlZCBhbmQgZmVsbCBpbnRvIGxpbmUgdW5kZXIgYXJtcywgd2hpbGUgdGhlIHRoaXJkIHJlbWFpbmVkIGluIHRoZSBjYW5vZS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZSBzZWNvbmQgZ3JvdXAgdG9vayB0aGVpciBjYW5vZXMgYW5kIHNhaWxlZCBiYWNrIGFnYWluLCBhbmQgdGhvc2Ugd2hvIHN0YXllZCBiZWhpbmQgbWFyc2hhbGxlZCB0aGVtc2VsdmVzIGluIHRoZSBmb2xsb3dpbmcgd2F5LiBUaGV5IHRvb2sgcG9zaXRpb24gaW4gbGluZXMgb2YgYWJvdXQgYSBodW5kcmVkIGVhY2gsIGxpa2UgY2hvcmFsIGRhbmNlcnMgcmFuZ2VkIG9wcG9zaXRlIG9uZSBhbm90aGVyLCBhbGwgb2YgdGhlbSB3aXRoIHdpY2tlciBzaGllbGRzIGNvdmVyZWQgd2l0aCB3aGl0ZSwgc2hhZ2d5IG94LWhpZGUgYW5kIGxpa2UgYW4gaXZ5IGxlYWYgaW4gc2hhcGUsIGFuZCBlYWNoIG1hbiBob2xkaW5nIGluIGhpcyByaWdodCBoYW5kIGEgbGFuY2UgYWJvdXQgc2l4IGN1Yml0cyBsb25nLCB3aXRoIGEgc3BlYXJoZWFkIGF0IG9uZSBlbmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNC43LjE2IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDQuNy4xNjwvYmlibD4gYW5kIG5vdGUgdGhlcmVvbi48L25vdGU+IGFuZCBhIHJvdW5kIGJhbGwgYXQgdGhlIGJ1dHQgZW5kIG9mIHRoZSBzaGFmdC4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA0LjcuMTYiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNC43LjE2PC9iaWJsPiBhbmQgbm90ZSB0aGVyZW9uLjwvdHJhbnNsYXRpb24+"
translation['5.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IHdvcmUgc2hvcnQgdHVuaWNzIHdoaWNoIGRpZCBub3QgcmVhY2ggdGhlaXIga25lZXMgYW5kIHdlcmUgYXMgdGhpY2sgYXMgYSBsaW5lbiBiYWcgZm9yIGJlZGNsb3RoZXMsIGFuZCB1cG9uIHRoZWlyIGhlYWRzIGxlYXRoZXJuIGhlbG1ldHMganVzdCBzdWNoIGFzIHRoZSBQYXBobGFnb25pYW4gaGVsbWV0cywgd2l0aCBhIHR1ZnQgaW4gdGhlIG1pZGRsZSB2ZXJ5IGxpa2UgYSB0aWFyYSBpbiBzaGFwZTsgYW5kIHRoZXkgaGFkIGFsc28gaXJvbiBiYXR0bGUtYXhlcy4KPC90cmFuc2xhdGlvbj4="
translation['5.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGV5IGhhZCBmb3JtZWQgdGhlaXIgbGluZXMgb25lIG9mIHRoZW0gbGVkIG9mZiwgYW5kIHRoZSByZXN0IGFmdGVyIGhpbSwgZXZlcnkgbWFuIG9mIHRoZW0sIGZlbGwgaW50byBhIHJoeXRobWljIG1hcmNoIGFuZCBzb25nLCBhbmQgcGFzc2luZyB0aHJvdWdoIHRoZSBiYXR0YWxpb25zIGFuZCB0aHJvdWdoIHRoZSBxdWFydGVycyBvZiB0aGUgR3JlZWtzIHRoZXkgd2VudCBzdHJhaWdodCBvbiBhZ2FpbnN0IHRoZSBlbmVteSwgdG93YXJkIGEgc3Ryb25naG9sZCB3aGljaCBzZWVtZWQgdG8gYmUgZXNwZWNpYWxseSBhc3NhaWxhYmxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgc2l0dWF0ZWQgaW4gZnJvbnQgb2YgdGhlIGNpdHkgd2hpY2ggaXMgY2FsbGVkIGJ5IHRoZW0gTWV0cm9wb2xpcyBhbmQgY29udGFpbnMgdGhlIGNoaWVmIGNpdGFkZWwgb2YgdGhlIE1vc3N5bm9lY2lhbnMuIEluIGZhY3QsIGl0IHdhcyBmb3IgdGhlIHBvc3Nlc3Npb24gb2YgdGhpcyBjaXRhZGVsIHRoYXQgdGhlIHdhciB3YXMgZ29pbmcgb247IGZvciB0aG9zZSB3aG8gYXQgYW55IHRpbWUgaGVsZCBpdCB3ZXJlIGRlZW1lZCB0byBiZSBtYXN0ZXJzIG9mIGFsbCB0aGUgb3RoZXIgTW9zc3lub2VjaWFucywgYW5kIHRoZXkgc2FpZCB0aGF0IHRoZSBwcmVzZW50IG9jY3VwYW50cyBkaWQgbm90IGhvbGQgaXQgYnkgcmlnaHQsIGJ1dCB0aGF0IGl0IHdhcyBjb21tb24gcHJvcGVydHkgYW5kIHRoZXkgaGFkIHNlaXplZCBpdCBpbiBvcmRlciB0byBnYWluIGEgc2VsZmlzaCBhZHZhbnRhZ2UuCjwvdHJhbnNsYXRpb24+"
translation['5.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGF0dGFja2luZyBwYXJ0eSB3YXMgZm9sbG93ZWQgYnkgc29tZSBvZiB0aGUgR3JlZWtzLCBub3QgdW5kZXIgb3JkZXJzIGZyb20gdGhlaXIgZ2VuZXJhbHMsIGJ1dCBzZWVraW5nIHBsdW5kZXIuIEFzIHRoZXkgYXBwcm9hY2hlZCwgdGhlIGVuZW15IGZvciBhIHRpbWUga2VwdCBxdWlldDsgYnV0IHdoZW4gdGhleSBoYWQgZ290IG5lYXIgdGhlIHN0cm9uZ2hvbGQsIHRoZXkgc2FsbGllZCBmb3J0aCBhbmQgcHV0IHRoZW0gdG8gZmxpZ2h0LCBraWxsaW5nIGEgY29uc2lkZXJhYmxlIG51bWJlciBvZiB0aGUgYmFyYmFyaWFucyBhbmQgc29tZSBvZiB0aGUgR3JlZWtzIHdobyBoYWQgZ29uZSB1cCB0aGUgaGlsbCB3aXRoIHRoZW0sIGFuZCBwdXJzdWluZyB0aGUgcmVzdCB1bnRpbCB0aGV5IHNhdyB0aGUgR3JlZWtzIGNvbWluZyB0byB0aGUgcmVzY3VlOwo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz50aGVuIHRoZXkgdHVybmVkIGFuZCBmZWxsIGJhY2ssIGFuZCBhZnRlciBjdXR0aW5nIG9mZiB0aGUgaGVhZHMgb2YgdGhlIGRlYWQgbWVuIGRpc3BsYXllZCB0aGVtIHRvIHRoZSBHcmVla3MgYW5kIHRvIHRoZWlyIG93biBlbmVtaWVzLCBhdCB0aGUgc2FtZSB0aW1lIGRhbmNpbmcgdG8gYSBraW5kIG9mIHN0cmFpbiB3aGljaCB0aGV5IHNhbmcuCjwvdHJhbnNsYXRpb24+"
translation['5.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIEdyZWVrcyB3ZXJlIGV4Y2VlZGluZ2x5IGFuZ3J5LCBub3Qgb25seSBiZWNhdXNlIHRoZSBlbmVteSBoYWQgYmVlbiBtYWRlIGJvbGRlciwgYnV0IGJlY2F1c2UgdGhlIEdyZWVrcyB3aG8gd2VudCB0byB0aGUgYXR0YWNrIHdpdGggdGhlIGJhcmJhcmlhbnMgaGFkIHRha2VuIHRvIGZsaWdodCwgdGhvdWdoIGluIHZlcnkgY29uc2lkZXJhYmxlIG51bWJlcnPigJRhIHRoaW5nIHdoaWNoIHRoZXkgaGFkIG5ldmVyIGRvbmUgYmVmb3JlIGluIHRoZSBjb3Vyc2Ugb2YgdGhlIGV4cGVkaXRpb24uCjwvdHJhbnNsYXRpb24+"
translation['5.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBYZW5vcGhvbiBjYWxsZWQgdGhlIEdyZWVrcyB0b2dldGhlciBhbmQgc2FpZDog4oCcRmVsbG93LXNvbGRpZXJzLCBkbyBub3QgYnkgYW55IG1lYW5zIGxvc2UgaGVhcnQgb24gYWNjb3VudCBvZiB3aGF0IGhhcyBoYXBwZW5lZDsgZm9yIGJlIHN1cmUgdGhhdCBhIGdvb2QgdGhpbmcgYWxzbyBoYXMgaGFwcGVuZWQsIG5vIGxlc3MgaW1wb3J0YW50IHRoYW4gdGhlIGV2aWwgdGhpbmcuCjwvdHJhbnNsYXRpb24+"
translation['5.4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGUgZmlyc3QgcGxhY2UsIHlvdSBrbm93IHRoYXQgdGhvc2Ugd2hvIGFyZSB0byBndWlkZSB1cyBhcmUgcmVhbGx5IGVuZW1pZXMgdG8gdGhlIHBlb3BsZSB3aG9zZSBlbmVtaWVzIHdlIGFsc28gYXJlIGNvbXBlbGxlZCB0byBiZTsgc2Vjb25kbHksIGFuZCB0b3VjaGluZyBvdXIgb3duIG1lbiwgdGhvc2UgYW1vbmcgdGhlbSB3aG8gdG9vayBsaXR0bGUgdGhvdWdodCBvZiB0aGUgYmF0dGxlIGZvcm1hdGlvbiB3ZSB1c2UgYW5kIGdvdCB0aGUgaWRlYSB0aGF0IHRoZXkgY291bGQgYWNjb21wbGlzaCB0aGUgc2FtZSByZXN1bHRzIGluIGNvbXBhbnkgd2l0aCB0aGUgYmFyYmFyaWFucyBhcyB0aGV5IGNvdWxkIHdpdGggdXMsIGhhdmUgcGFpZCB0aGUgcGVuYWx0eSzigJRhbm90aGVyIHRpbWUgdGhleSB3aWxsIGJlIGxlc3MgbGlrZWx5IHRvIGxlYXZlIG91ciBvcmRlcmVkIGxpbmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgeW91IG11c3QgbWFrZSByZWFkeSB0byBwcm92ZSB0byBvdXIgZnJpZW5kcyBhbW9uZyB0aGUgYmFyYmFyaWFucyB0aGF0IHlvdSBhcmUgYmV0dGVyIG1lbiB0aGFuIHRoZXksIGFuZCB0byBzaG93IHRoZSBlbmVteSB0aGF0IHRoZXkgYXJlIG5vdCBnb2luZyB0byBmaWdodCBhZ2FpbnN0IHRoZSBzYW1lIHNvcnQgb2YgbWVuIG5vdyBhcyB0aGUgZGlzb3JkZXJseSBtYXNzIHRoZXkgbWV0IGJlZm9yZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['5.4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgd2FzIHRodXMgdGhhdCB0aGUgR3JlZWtzIHNwZW50IHRoYXQgZGF5OyBidXQgb24gdGhlIG5leHQsIGFmdGVyIG9idGFpbmluZyBmYXZvdXJhYmxlIG9tZW5zIGZyb20gdGhlaXIgc2FjcmlmaWNlcywgdGhleSB0b29rIGJyZWFrZmFzdCwgZm9ybWVkIHRoZSBjb21wYW5pZXMgaW4gY29sdW1uLCBhbmQgYmVnYW4gdGhlIG1hcmNoLCB3aXRoIHRoZSBiYXJiYXJpYW5zIGluIHRoZSBzYW1lIGZvcm1hdGlvbiBwb3N0ZWQgb24gdGhlIGxlZnQsIHRoZSBib3dtZW4gZGlzdHJpYnV0ZWQgaW4gdGhlIHNwYWNlcyBiZXR3ZWVuIHRoZSBjb21wYW5pZXMsIGFuZCB0aGUgdmFuIG9mIHRoZSBob3BsaXRlcyBhIGxpdHRsZSBmYXJ0aGVyIGJhY2suCjwvdHJhbnNsYXRpb24+"
translation['5.4.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIGVuZW15IGhhZCBzb21lIG5pbWJsZSB0cm9vcHMgd2hvIGtlcHQgcnVubmluZyBkb3duIHRoZSBoaWxsIGFuZCBwZWx0aW5nIHRoZSBHcmVla3Mgd2l0aCBzdG9uZXMsIGFuZCB0aGVzZSBmZWxsb3dzIHdlcmUgaGVsZCBiYWNrIGJ5IHRoZSBib3dtZW4gYW5kIHBlbHRhc3RzLiBUaGUgcmVzdCBvZiB0aGUgR3JlZWsgYXJteSwgcHJvY2VlZGluZyBhdCBhIHdhbGssIGFkdmFuY2VkIGZpcnN0IGFnYWluc3QgdGhlIHN0cm9uZ2hvbGQgZnJvbSB3aGljaCB0aGUgYmFyYmFyaWFucyBhbmQgdGhvc2Ugd2l0aCB0aGVtIGhhZCBiZWVuIHB1dCB0byBmbGlnaHQgb24gdGhlIHByZWNlZGluZyBkYXk7IGZvciBpdCB3YXMgdGhlcmUgdGhhdCB0aGUgZW5lbXkgd2VyZSBub3cgZHJhd24gdXAgdG8gb3Bwb3NlIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['5.4.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgYmFyYmFyaWFucyBkaWQsIGluZGVlZCwgbWVldCB0aGUgYXR0YWNrIG9mIHRoZSBwZWx0YXN0cyBhbmQgZW5nYWdlZCB0aGVtIGluIGJhdHRsZSwgYnV0IHdoZW4gdGhlIGhvcGxpdGVzIGdvdCBuZWFyIHRoZW0sIHRoZXkgdHVybmVkIHRvIGZsaWdodC4gVGhlIHBlbHRhc3RzIGF0IG9uY2UgbWFkZSBhZnRlciB0aGVtIGFuZCBwdXJzdWVkIHRoZW0gdXAgdGhlIGhpbGwgdG8gdGhlIGNpdHksIHdoaWxlIHRoZSBob3BsaXRlcyBmb2xsb3dlZCBhbG9uZywgc3RpbGwga2VlcGluZyB0aGVpciBsaW5lcy4KPC90cmFuc2xhdGlvbj4="
translation['5.4.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgd2VyZSBhdCB0aGUgdG9wIGFuZCBuZWFyIHRoZSBob3VzZXMgb2YgTWV0cm9wb2xpcywgYXQgdGhhdCBtb21lbnQgYWxsIHRoZSB0cm9vcHMgb2YgdGhlIGVuZW15IG1hc3NlZCB0b2dldGhlciBhbmQgZGlkIGJhdHRsZTsgdGhleSBodXJsZWQgdGhlaXIgbGFuY2VzLCBhbmQgd2l0aCBvdGhlciBzcGVhcnMgd2hpY2ggdGhleSBoYWQsIHNvIHRoaWNrIGFuZCBsb25nIHRoYXQgYSBtYW4gY291bGQgb25seSBjYXJyeSB0aGVtIHdpdGggZGlmZmljdWx0eSwgdHJpZWQgdG8gZGVmZW5kIHRoZW1zZWx2ZXMgaW4gaGFuZCB0byBoYW5kIGZpZ2h0aW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BcyB0aGUgR3JlZWtzLCBob3dldmVyLCByZWZ1c2VkIHRvIGdpdmUgd2F5LCBidXQga2VwdCBwdXNoaW5nIG9uIHRvIGNsb3NlIHF1YXJ0ZXJzLCB0aGUgYmFyYmFyaWFucyB0b29rIHRvIGZsaWdodCBmcm9tIHRoYXQgcG9pbnQgYWxzbywgZXZlcnkgbWFuIG9mIHRoZW0gYWJhbmRvbmluZyB0aGUgZm9ydHJlc3MuIFRoZWlyIGtpbmcgaW4gaGlzIHdvb2RlbiB0b3dlciBidWlsdCB1cG9uIHRoZSBjaXRhZGVsLCB3aG9tIGFsbCB0aGUgcGVvcGxlIGpvaW50bHkgbWFpbnRhaW4gYW5kIGd1YXJkIGluIGhpcyBhYmlkaW5nIHBsYWNlIHRoZXJlLCByZWZ1c2VkIHRvIGNvbWUgZm9ydGgsIGFzIGRpZCBhbHNvIHRoZSBjb21tYW5kZXIgb2YgdGhlIHN0cm9uZ2hvbGQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS4gZS4sIHRoZSBvbmUgbWVudGlvbmVkIGFib3ZlLCAxNCwgMjMuPC9ub3RlPiB3aGljaCBoYWQgYmVlbiBjYXB0dXJlZCBlYXJsaWVyLCBzbyB0aGV5IHdlcmUgYnVybmVkIHVwIHdoZXJlIHRoZXkgd2VyZSwgYWxvbmcgd2l0aCB0aGVpciB0b3dlcnMuCjwvdHJhbnNsYXRpb24+"
translation['5.4.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gcGx1bmRlcmluZyB0aGUgc3Ryb25naG9sZHMgdGhlIEdyZWVrcyBmb3VuZCBpbiB0aGUgaG91c2VzIGFuY2VzdHJhbCBzdG9yZXMsIGFzIHRoZSBNb3NzeW5vZWNpYW5zIGRlc2NyaWJlZCB0aGVtLCBvZiBoZWFwZWQgdXAgbG9hdmVzLCB3aGlsZSB0aGUgbmV3IGNvcm4gd2FzIGxhaWQgYXdheSB3aXRoIHRoZSBzdHJhdywgdGhlIG1vc3Qgb2YgaXQgYmVpbmcgc3BlbHQuCjwvdHJhbnNsYXRpb24+"
translation['5.4.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGFsc28gZm91bmQgc2xpY2VzIG9mIGRvbHBoaW4gc2FsdGVkIGF3YXkgaW4gamFycywgYW5kIGluIG90aGVyIHZlc3NlbHMgZG9scGhpbiBibHViYmVyLCB3aGljaCB0aGUgTW9zc3lub2VjaWFucyB1c2VkIGluIHRoZSBzYW1lIHdheSBhcyB0aGUgR3JlZWtzIHVzZSBvbGl2ZSBvaWw7CjwvdHJhbnNsYXRpb24+"
translation['5.4.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgb24gdGhlIHVwcGVyIGZsb29ycyBvZiB0aGUgaG91c2VzIHRoZXJlIHdlcmUgbGFyZ2UgcXVhbnRpdGllcyBvZiBmbGF0IG51dHMsIHdpdGhvdXQgYW55IGRpdmlzaW9ucy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS4gZS4sIHN1Y2ggYXMgd2FsbnV0cyBoYXZlLiBYZW5vcGhvbiBwcm9iYWJseSBtZWFucyBjaGVzdG51dHMuPC9ub3RlPiBPdXQgb2YgdGhlc2UgbnV0cywgYnkgYm9pbGluZyB0aGVtIGFuZCBiYWtpbmcgdGhlbSBpbnRvIGxvYXZlcywgdGhleSBtYWRlIHRoZSBicmVhZCB3aGljaCB0aGV5IHVzZWQgbW9zdC4gVGhlIEdyZWVrcyBhbHNvIGZvdW5kIHdpbmUsIHdoaWNoIGJ5IHJlYXNvbiBvZiBpdHMgaGFyc2huZXNzIGFwcGVhcmVkIHRvIGJlIHNoYXJwIHdoZW4gdGFrZW4gdW5taXhlZCwgYnV0IG1peGVkIHdpdGggd2F0ZXIgd2FzIGZyYWdyYW50IGFuZCBkZWxpY2lvdXMuCjwvdHJhbnNsYXRpb24+"
translation['5.4.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGV5IGhhZCBicmVha2Zhc3RlZCB0aGVyZSwgdGhlIEdyZWVrcyB0b29rIHVwIHRoZWlyIG9ud2FyZCBtYXJjaCwgYWZ0ZXIgaGFuZGluZyBvdmVyIHRoZSBmb3J0cmVzcyB0byB0aGUgTW9zc3lub2VjaWFucyB3aG8gaGFkIGhlbHBlZCB0aGVtIGluIHRoZSBmaWdodGluZy4gQXMgZm9yIHRoZSBvdGhlciBzdHJvbmdob2xkcyB3aGljaCB0aGV5IHBhc3NlZCBieSwgYmVsb25naW5nIHRvIHRob3NlIHdobyBzaWRlZCB3aXRoIHRoZSBlbmVteSwgdGhlIG1vc3QgYWNjZXNzaWJsZSB3ZXJlIGluIHNvbWUgY2FzZXMgYWJhbmRvbmVkIGJ5IHRoZWlyIG9jY3VwYW50cywgaW4gb3RoZXIgY2FzZXMgc3VycmVuZGVyZWQgdm9sdW50YXJpbHkuCjwvdHJhbnNsYXRpb24+"
translation['5.4.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZ3JlYXRlciBwYXJ0IG9mIHRoZXNlIHBsYWNlcyB3ZXJlIG9mIHRoZSBmb2xsb3dpbmcgZGVzY3JpcHRpb246IFRoZSB0b3ducyB3ZXJlIGVpZ2h0eSBzdGFkaWEgZGlzdGFudCBmcm9tIG9uZSBhbm90aGVyLCBzb21lIG1vcmUsIGFuZCBzb21lIGxlc3M7IGJ1dCB0aGUgaW5oYWJpdGFudHMgY291bGQgaGVhciBvbmUgYW5vdGhlciBzaG91dGluZyBmcm9tIG9uZSB0b3duIHRvIHRoZSBuZXh0LCBzdWNoIGhlaWdodHMgYW5kIHZhbGxleXMgdGhlcmUgd2VyZSBpbiB0aGUgY291bnRyeS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGUgR3JlZWtzLCBhcyB0aGV5IHByb2NlZWRlZCwgd2VyZSBhbW9uZyB0aGUgZnJpZW5kbHkgTW9zc3lub2VjaWFucywgdGhleSB3b3VsZCBleGhpYml0IHRvIHRoZW0gZmF0dGVuZWQgY2hpbGRyZW4gb2YgdGhlIHdlYWx0aHkgaW5oYWJpdGFudHMsIHdobyBoYWQgYmVlbiBub3VyaXNoZWQgb24gYm9pbGVkIG51dHMgYW5kIHdlcmUgc29mdCBhbmQgd2hpdGUgdG8gYW4gZXh0cmFvcmRpbmFyeSBkZWdyZWUsIGFuZCBwcmV0dHkgbmVhcmx5IGVxdWFsIGluIGxlbmd0aCBhbmQgYnJlYWR0aCwgd2l0aCB0aGVpciBiYWNrcyBhZG9ybmVkIHdpdGggbWFueSBjb2xvdXJzIGFuZCB0aGVpciBmb3JlIHBhcnRzIGFsbCB0YXR0b29lZCB3aXRoIGZsb3dlciBwYXR0ZXJucy4KPC90cmFuc2xhdGlvbj4="
translation['5.4.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVzZSBNb3NzeW5vZWNpYW5zIHdhbnRlZCBhbHNvIHRvIGhhdmUgaW50ZXJjb3Vyc2Ugb3Blbmx5IHdpdGggdGhlIHdvbWVuIHdobyBhY2NvbXBhbmllZCB0aGUgR3JlZWtzLCBmb3IgdGhhdCB3YXMgdGhlaXIgb3duIGZhc2hpb24uIEFuZCBhbGwgb2YgdGhlbSB3ZXJlIHdoaXRlLCB0aGUgbWVuIGFuZCB0aGUgd29tZW4gYWxpa2UuCjwvdHJhbnNsYXRpb24+"
translation['5.4.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IHdlcmUgc2V0IGRvd24gYnkgdGhlIEdyZWVrcyB3aG8gc2VydmVkIHRocm91Z2ggdGhlIGV4cGVkaXRpb24sIGFzIHRoZSBtb3N0IHVuY2l2aWxpemVkIHBlb3BsZSB3aG9zZSBjb3VudHJ5IHRoZXkgdHJhdmVyc2VkLCB0aGUgZnVydGhlc3QgcmVtb3ZlZCBmcm9tIEdyZWVrIGN1c3RvbXMuIEZvciB0aGV5IGhhYml0dWFsbHkgZGlkIGluIHB1YmxpYyB0aGUgdGhpbmdzIHRoYXQgb3RoZXIgcGVvcGxlIHdvdWxkIGRvIG9ubHkgaW4gcHJpdmF0ZSwgYW5kIHdoZW4gdGhleSB3ZXJlIGFsb25lIHRoZXkgd291bGQgYmVoYXZlIGp1c3QgYXMgaWYgdGhleSB3ZXJlIGluIHRoZSBjb21wYW55IG9mIG90aGVycywgdGFsa2luZyB0byB0aGVtc2VsdmVzLCBsYXVnaGluZyBhdCB0aGVtc2VsdmVzLCBhbmQgZGFuY2luZyBpbiB3aGF0ZXZlciBzcG90IHRoZXkgY2hhbmNlZCB0byBiZSwgYXMgdGhvdWdoIHRoZXkgd2VyZSBnaXZpbmcgYW4gZXhoaWJpdGlvbiB0byBvdGhlcnMuCjwvdHJhbnNsYXRpb24+"
translation['5.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaHJvdWdoIHRoaXMgY291bnRyeSwgYm90aCB0aGUgaG9zdGlsZSBhbmQgdGhlIGZyaWVuZGx5IHBvcnRpb25zIG9mIGl0LCB0aGUgR3JlZWtzIG1hcmNoZWQgZWlnaHQgc3RhZ2VzLCByZWFjaGluZyB0aGVuIHRoZSBsYW5kIG9mIHRoZSBDaGFseWJpYW5zLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BcHBhcmVudGx5IGFuIG91dGx5aW5nIHRyaWJlIG9mIHRoZSBwZW9wbGUgd2hvc2UgdGVycml0b3J5IHRoZSBHcmVla3MgaGFkIHByZXZpb3VzbHkgcGFzc2VkIHRocm91Z2guIGNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDQuNy4xNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA0LjcuMTU8L2JpYmw+IGZmLjwvbm90ZT4gVGhlc2UgcGVvcGxlIHdlcmUgZmV3IGluIG51bWJlciBhbmQgc3ViamVjdCB0byB0aGUgTW9zc3lub2VjaWFucywgYW5kIG1vc3Qgb2YgdGhlbSBnYWluZWQgdGhlaXIgbGl2ZWxpaG9vZCBmcm9tIHdvcmtpbmcgaW4gaXJvbi4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA0LjcuMTUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNC43LjE1PC9iaWJsPiBmZi48L3RyYW5zbGF0aW9uPg=="
translation['5.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk5leHQgdGhleSByZWFjaGVkIHRoZSBjb3VudHJ5IG9mIHRoZSBUaWJhcmVuaWFucywgd2hpY2ggd2FzIG11Y2ggbW9yZSBsZXZlbCBhbmQgaGFkIGZvcnRyZXNzZXMgdXBvbiB0aGUgc2VhY29hc3QgdGhhdCB3ZXJlIGxlc3Mgc3Ryb25nLiBUaGUgZ2VuZXJhbHMgd2VyZSBkZXNpcm91cyBvZiBhdHRhY2tpbmcgdGhlc2UgZm9ydHJlc3Nlcywgc28gYXMgdG8gZ2V0IGEgbGl0dGxlIHNvbWV0aGluZyBmb3IgdGhlIGFybXksIGFuZCBhY2NvcmRpbmdseSB0aGV5IHdvdWxkIG5vdCBhY2NlcHQgdGhlIGdpZnRzIG9mIGhvc3BpdGFsaXR5IHdoaWNoIGNhbWUgZnJvbSB0aGUgVGliYXJlbmlhbnMsIGJ1dCwgZGlyZWN0aW5nIHRoZW0gdG8gd2FpdCB1bnRpbCB0aGV5IHNob3VsZCB0YWtlIGNvdW5zZWwsIHByb2NlZWRlZCB0byBvZmZlciBzYWNyaWZpY2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIG1hbnkgdmljdGltcyBoYWQgYmVlbiBzYWNyaWZpY2VkIGFsbCB0aGUgc2VlcnMgZmluYWxseSBkZWNsYXJlZCB0aGUgb3BpbmlvbiB0aGF0IHRoZSBnb2RzIGluIG5vIHdpc2UgcGVybWl0dGVkIHdhci4gU28gdGhlbiB0aGUgZ2VuZXJhbHMgYWNjZXB0ZWQgdGhlIGdpZnRzIG9mIGhvc3BpdGFsaXR5LCBhbmQgcHJvY2VlZGluZyBhcyB0aHJvdWdoIGEgZnJpZW5kbHkgY291bnRyeSBmb3IgdHdvIGRheXMsIHRoZXkgYXJyaXZlZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjQ3OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNDc5Ij5Db3R5b3JhPC9wbGFjZU5hbWU+LCBhIEdyZWVrIGNpdHkgYW5kIGEgY29sb255IG9mIHRoZSBTaW5vcGVhbnMsIHNpdHVhdGVkIGluIHRoZSB0ZXJyaXRvcnkgb2YgdGhlIFRpYmFyZW5pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VjdGlvbiA0IGluIHRoZSBtYW51c2NyaXB0IGlzIGFzIGZvbGxvd3MuIFRoaXMgcGFzc2FnZSBpcyByZWdhcmRlZCBieSBlZGQuIGdlbmVyYWxseSBhcyBhbiBpbnRlcnBvbGF0aW9uLiBbMTgsNjAwIHN0YWRpYSA9IGMuIDIwNTAgRW5nbGlzaCBtaWxlcy5dPC9ub3RlPltBcyBmYXIgYXMgdGhpcyBwb2ludCB0aGUgYXJteSB0cmF2ZWxsZWQgYnkgbGFuZC4gVGhlIGxlbmd0aCBpbiBkaXN0YW5jZSBvZiB0aGUgZG93bndhcmQgam91cm5leSwgZnJvbSB0aGUgYmF0dGxlZmllbGQgbmVhciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjYyNiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjI2Ij5CYWJ5bG9uPC9wbGFjZU5hbWU+IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNDc5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI0NzkiPkNvdHlvcmE8L3BsYWNlTmFtZT4sIHdhcyBvbmUgaHVuZHJlZCBhbmQgdHdlbnR5LXR3byBzdGFnZXMsIHNpeCBodW5kcmVkIGFuZCB0d2VudHkgcGFyYXNhbmdzLCBvciBlaWdodGVlbiB0aG91c2FuZCwgc2l4IGh1bmRyZWQgc3RhZGlhOyBhbmQgaW4gdGltZSwgZWlnaHQgbW9udGhzLl0KPC90cmFuc2xhdGlvbj4="
translation['5.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIHRoZXkgcmVtYWluZWQgZm9ydHktZml2ZSBkYXlzLiBEdXJpbmcgdGhpcyB0aW1lIHRoZXkgZmlyc3Qgb2YgYWxsIHNhY3JpZmljZWQgdG8gdGhlIGdvZHMsIGFuZCBhbGwgdGhlIHNldmVyYWwgZ3JvdXBzIG9mIHRoZSBHcmVla3MsIG5hdGlvbiBieSBuYXRpb24sIGluc3RpdHV0ZWQgZmVzdGFsIHByb2Nlc3Npb25zIGFuZCBhdGhsZXRpYyBjb250ZXN0cy4KPC90cmFuc2xhdGlvbj4="
translation['5.5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciBwcm92aXNpb25zLCB0aGV5IGdvdCB0aGVtIHBhcnRseSBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NzYwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY3NjAiPlBhcGhsYWdvbmlhPC9wbGFjZU5hbWU+IGFuZCBwYXJ0bHkgZnJvbSB0aGUgZXN0YXRlcyBvZiB0aGUgQ290eW9yaXRlczsgZm9yIHRoZSBsYXR0ZXIgd291bGQgbm90IHByb3ZpZGUgdGhlbSB3aXRoIGEgbWFya2V0LCBub3Igd291bGQgdGhleSByZWNlaXZlIHRoZWlyIHNpY2sgd2l0aGluIHRoZSB3YWxscyBvZiB0aGUgY2l0eS4KPC90cmFuc2xhdGlvbj4="
translation['5.5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFud2hpbGUgYW1iYXNzYWRvcnMgY2FtZSBmcm9tIFNpbm9wZSwgZnVsbCBvZiBmZWFycyBub3Qgb25seSBmb3IgdGhlIGNpdHkgb2YgdGhlIENvdHlvcml0ZXMgKGZvciBpdCBiZWxvbmdlZCB0byB0aGVtIGFuZCBpdHMgaW5oYWJpdGFudHMgcGFpZCB0aGVtIHRyaWJ1dGUpLCBidXQgYWxzbyBmb3IgaXRzIHRlcnJpdG9yeSwgYmVjYXVzZSB0aGV5IGhlYXJkIGl0IHdhcyBiZWluZyBsYWlkIHdhc3RlLiBBbmQgY29taW5nIHRvIHRoZSBHcmVlayBjYW1wIHRoZXkgc3Bva2UgYXMgZm9sbG93cywgSGVjYXRvbnltdXMsIHdobyB3YXMgcmVnYXJkZWQgYXMgYSBjbGV2ZXIgb3JhdG9yLCBiZWluZyB0aGVpciBzcG9rZXNtYW46CjwvdHJhbnNsYXRpb24+"
translation['5.5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPuKAnFNvbGRpZXJzLOKAnSBoZSBzYWlkLCDigJx0aGUgY2l0eSBvZiB0aGUgU2lub3BlYW5zIGhhcyBzZW50IHVzLCBmaXJzdCwgdG8gYXBwbGF1ZCB5b3UgYXMgR3JlZWtzIHdobyBzdGFuZCB2aWN0b3JzIG92ZXIgYmFyYmFyaWFucywgYW5kLCBzZWNvbmRseSwgdG8gY29uZ3JhdHVsYXRlIHlvdSB0aGF0IHlvdSBoYXZlIG1hZGUgeW91ciB3YXkgdGhyb3VnaCBtYW55IGRyZWFkZnVsIHRyb3VibGVzLCBhcyB3ZSBoYXZlIGhlYXJkLCBpbiBzYWZldHkgdG8gdGhpcyBwbGFjZS4KPC90cmFuc2xhdGlvbj4="
translation['5.5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3ZSBjbGFpbSwgYmVpbmcgb3Vyc2VsdmVzIEdyZWVrcywgdG8gcmVjZWl2ZSBmcm9tIHlvdSwgd2hvIGFyZSBHcmVla3MgYWxzbywgZ29vZCB0cmVhdG1lbnQgYW5kIG5vIGlsbDsgZm9yIHdlLCBvbiBvdXIgc2lkZSwgaGF2ZSBuZXZlciBzZXQgdGhlIGV4YW1wbGUgYnkgZG9pbmcgeW91IGFueSBtYW5uZXIgb2YgaGFybS4KPC90cmFuc2xhdGlvbj4="
translation['5.5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVzZSBDb3R5b3JpdGVzIGFyZSBvdXIgY29sb25pc3RzLCBhbmQgaXQgd2FzIHdlIHdobyBnYXZlIG92ZXIgdG8gdGhlbSB0aGlzIGxhbmQsIGFmdGVyIHdlIGhhZCB0YWtlbiBpdCBhd2F5IGZyb20gYmFyYmFyaWFuczsgdGhlcmVmb3JlIHRoZXkgcGF5IHVzIGEgc3RhdGVkIHRyaWJ1dGUsIGFzIGRvIHRoZSBwZW9wbGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwODYzNTciIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTA4NjM1NyI+Q2VyYXN1czwvcGxhY2VOYW1lPiBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUcmFwZXp1cyxBcmNhZGlhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUcmFwZXp1cyxBcmNhZGlhIj5UcmFwZXp1czwvcGxhY2VOYW1lPjsgaGVuY2Ugd2hhdGV2ZXIgaGFybSB5b3UgbWF5IGRvIHRvIHRoZXNlIENvdHlvcml0ZXMsIHRoZSBjaXR5IG9mIHRoZSBTaW5vcGVhbnMgcmVnYXJkcyBhcyBkb25lIHRvIGl0c2VsZi4KPC90cmFuc2xhdGlvbj4="
translation['5.5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BdCBwcmVzZW50IHdlIGhlYXIsIGZpcnN0bHksIHRoYXQgeW91IGhhdmUgbWFkZSB5b3VyIHdheSBpbnRvIHRoZSBjaXR5IGJ5IGZvcmNlLCBzb21lIG9mIHlvdSwgYW5kIGFyZSBxdWFydGVyZWQgaW4gdGhlIGhvdXNlcywgYW5kLCBzZWNvbmRseSwgdGhhdCB5b3UgYXJlIHRha2luZyBmcm9tIHRoZSBlc3RhdGVzIGJ5IGZvcmNlIHdoYXRldmVyIHlvdSBtYXkgbmVlZCB3aXRob3V0IGFza2luZyBsZWF2ZS4KPC90cmFuc2xhdGlvbj4="
translation['5.5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlc2UgdGhpbmdzIHdlIGRvIG5vdCBkZWVtIHByb3BlcjsgYW5kIGlmIHlvdSBjb250aW51ZSB0byBkbyB0aGVtLCB5b3UgZm9yY2UgdXMgdG8gbWFrZSBmcmllbmRzIHdpdGggQ29yeWxhczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5SdWxlciBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjc2MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2NzYwIj5QYXBobGFnb25pYTwvcGxhY2VOYW1lPi48L25vdGU+IGFuZCB0aGUgUGFwaGxhZ29uaWFucyBhbmQgd2hvbWV2ZXIgZWxzZSB3ZSBjYW4u4oCdCjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NzYwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY3NjAiPlBhcGhsYWdvbmlhPC9wbGFjZU5hbWU+LjwvdHJhbnNsYXRpb24+"
translation['5.5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gcmVwbHkgdG8gdGhlc2Ugd29yZHMgWGVub3Bob24sIG9uIGJlaGFsZiBvZiB0aGUgc29sZGllcnMsIHJvc2UgYW5kIHNhaWQ6IOKAnEZvciBvdXJzZWx2ZXMsIG1lbiBvZiBTaW5vcGUsIHdlIGhhdmUgY29tZSBiYWNrIHdlbGwgY29udGVudCB0byBoYXZlIHNhdmVkIG91ciBib2RpZXMgYW5kIG91ciBhcm1zOyBmb3IgaXQgd2FzIG5vdCBwb3NzaWJsZSBhdCBvbmUgYW5kIHRoZSBzYW1lIHRpbWUgdG8gZ2F0aGVyIHBsdW5kZXIgYW5kIHRvIGZpZ2h0IHdpdGggdGhlIGVuZW15Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BcyB0byBvdXIgZG9pbmdzIG5vdywgc2luY2Ugd2UgaGF2ZSByZWFjaGVkIEdyZWVrIGNpdGllcywgd2UgZ290IG91ciBwcm92aXNpb25zIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJhcGV6dXMsQXJjYWRpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVHJhcGV6dXMsQXJjYWRpYSI+VHJhcGV6dXM8L3BsYWNlTmFtZT4gYnkgcHVyY2hhc2UsIGZvciB0aGUgVHJhcGV6dW50aWFucyBwcm92aWRlZCB1cyBhIG1hcmtldCwgYW5kIGluIHJldHVybiBmb3IgdGhlIGhvbm91cnMgdGhleSBiZXN0b3dlZCB1cG9uIHVzIGFuZCB0aGUgZ2lmdHMgb2YgaG9zcGl0YWxpdHkgdGhleSBnYXZlIHRoZSBhcm15LCB3ZSBwYWlkIHRoZW0gbGlrZSBob25vdXJzOyBpZiBhbnkgb2YgdGhlIGJhcmJhcmlhbnMgd2VyZSB0aGVpciBmcmllbmRzLCB3ZSBrZXB0IG91ciBoYW5kcyBvZmYgdGhlbSwgd2hpbGUgdXBvbiB0aGVpciBlbmVtaWVzLCBhZ2FpbnN0IHdob20gdGhleSB3b3VsZCB0aGVtc2VsdmVzIGxlYWQgdXMsIHdlIHdyb3VnaHQgYWxsIHRoZSBoYXJtIHdlIGNvdWxkLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Bc2sgdGhlbSB3aGF0IHNvcnQgb2YgcGVvcGxlIHRoZXkgZm91bmQgdXMgdG8gYmU7IGZvciB0aGUgbWVuIGFyZSBoZXJlIHByZXNlbnQgd2hvbSB0aGUgY2l0eSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiPlRyYXBlenVzPC9wbGFjZU5hbWU+LCBvdXQgb2YgZnJpZW5kc2hpcCwgc2VudCB3aXRoIHVzIGFzIGd1aWRlcy4KPC90cmFuc2xhdGlvbj4="
translation['5.5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgb3RoZXIgaGFuZCwgd2hlcmV2ZXIgd2UgY29tZSwgd2hldGhlciBpdCBiZSB0byBhIGJhcmJhcmlhbiBvciB0byBhIEdyZWVrIGxhbmQsIGFuZCBoYXZlIG5vIG1hcmtldCBhdCB3aGljaCB0byBidXksIHdlIHRha2UgcHJvdmlzaW9ucywgbm90IG91dCBvZiB3YW50b25uZXNzLCBidXQgZnJvbSBuZWNlc3NpdHkuCjwvdHJhbnNsYXRpb24+"
translation['5.5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgQ2FyZHVjaGlhbnMsIGZvciBleGFtcGxlLCBhbmQgdGhlIFRhb2NoaWFucyBhbmQgQ2hhbGRhZWFucyB3ZXJlIG5vdCBzdWJqZWN0cyBvZiB0aGUgS2luZyBhbmQgd2VyZSBleGNlZWRpbmdseSBmb3JtaWRhYmxlLCB5ZXQsIGV2ZW4gc28sIHdlIG1hZGUgZW5lbWllcyBvZiB0aGVtIGJlY2F1c2Ugb2YgdGhpcyBuZWNlc3NpdHkgb2YgdGFraW5nIHByb3Zpc2lvbnMsIGluYXNtdWNoIGFzIHRoZXkgd291bGQgbm90IHByb3ZpZGUgYSBtYXJrZXQuCjwvdHJhbnNsYXRpb24+"
translation['5.5.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgTWFjcm9uaWFucywgaG93ZXZlciwgcHJvdmlkZWQgdXMgYXMgZ29vZCBhIG1hcmtldCBhcyB0aGV5IGNvdWxkLCBhbmQgd2UgdGhlcmVmb3JlIHJlZ2FyZGVkIHRoZW0gYXMgZnJpZW5kcywgYmFyYmFyaWFucyB0aG91Z2ggdGhleSB3ZXJlLCBhbmQgdG9vayBieSBmb3JjZSBub3QgYSB0aGluZyB0aGF0IGJlbG9uZ2VkIHRvIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['5.5.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQXMgZm9yIHRoZSBDb3R5b3JpdGVzLCB3aG9tIHlvdSBjbGFpbSBhcyB5b3VycywgaWYgd2UgaGF2ZSB0YWtlbiBhbnl0aGluZyB0aGF0IGJlbG9uZ2VkIHRvIHRoZW0sIHRoZXkgYXJlIHRoZW1zZWx2ZXMgdG8gYmxhbWU7IGZvciB0aGV5IGRpZCBub3QgYmVoYXZlIHRvd2FyZCB1cyBhcyBmcmllbmRzLCBidXQgc2h1dCB0aGVpciBnYXRlcyBhbmQgd291bGQgbmVpdGhlciBhZG1pdCB1cyB3aXRoaW4gbm9yIHNlbmQgYSBtYXJrZXQgd2l0aG91dDsgYW5kIHRoZXkgYWxsZWdlZCB0aGF0IHRoZSBnb3Zlcm5vciBzZXQgb3ZlciB0aGVtIGJ5IHlvdSB3YXMgcmVzcG9uc2libGUgZm9yIHRoaXMgY29uZHVjdC4KPC90cmFuc2xhdGlvbj4="
translation['5.5.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5JbiByZWdhcmQgdG8geW91ciBzdGF0ZW1lbnQgYWJvdXQgcGVvcGxlIG1ha2luZyB0aGVpciB3YXkgaW50byB0aGUgY2l0eSBieSBmb3JjZSBhbmQgYmVpbmcgcXVhcnRlcmVkIHRoZXJlLCB3ZSBhc2tlZCB0aGVtIHRvIHJlY2VpdmUgb3VyIHNpY2sgaW50byB0aGVpciBob3VzZXM7IGJ1dCB3aGVuIHRoZXkgcmVmdXNlZCB0byBvcGVuIHRoZWlyIGdhdGVzLCB3ZSB3ZW50IGluIGF0IGEgcG9pbnQgd2hlcmUgdGhlIHBsYWNlIG9mIGl0c2VsZiByZWNlaXZlZCB1czsgYW5kIHdlIGhhdmUgZG9uZSBubyBkZWVkIG9mIGZvcmNlIHNhdmUgb25seSB0aGF0IG91ciBzaWNrIGFyZSBxdWFydGVyZWQgaW4gdGhlIGhvdXNlcywgcGF5aW5nIHRoZWlyIG93biBleHBlbnNlcywgYW5kIHRoYXQgd2UgYXJlIGd1YXJkaW5nIHRoZSBnYXRlcywgaW4gb3JkZXIgdGhhdCBvdXIgc2ljayBtYXkgbm90IGJlIGluIHRoZSBwb3dlciBvZiB5b3VyIGdvdmVybm9yLCBidXQgdGhhdCBpdCBtYXkgYmUgaW4gb3VyIHBvd2VyIHRvIGdldCB0aGVtIGJhY2sgd2hlbiB3ZSBzbyB3aXNoLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.5.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcmVzdCBvZiB1cywgYXMgeW91IHNlZSwgYXJlIHF1YXJ0ZXJlZCBpbiB0aGUgb3BlbiBpbiBvdXIgcmVndWxhciBmb3JtYXRpb24sIGFsbCByZWFkeSwgaW4gY2FzZSBvbmUgZG9lcyB1cyBhIGtpbmRuZXNzLCB0byByZXR1cm4gdGhlIGxpa2UsIG9yIGlmIGl0IGlzIGFuIGluanVyeSwgdG8gcmV0dXJuIHRoYXQuCjwvdHJhbnNsYXRpb24+"
translation['5.5.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQXMgdG8gdGhlIHRocmVhdCB5b3UgdXR0ZXJlZCwgdGhhdCBpZiB5b3UgdGhvdWdodCBiZXN0IHlvdSB3b3VsZCBlbmxpc3QgQ29yeWxhcyBhbmQgdGhlIFBhcGhsYWdvbmlhbnMgYXMgYWxsaWVzIGFnYWluc3QgdXMsIHdlIG9uIG91ciBzaWRlIGFyZSBxdWl0ZSByZWFkeSB0byBtYWtlIHdhciB3aXRoIHlvdSBib3RoIGlmIGl0IGJlIG5lY2Vzc2FyeTsgZm9yIHdlIGhhdmUgbWFkZSB3YXIgZXJlIG5vdyB3aXRoIG90aGVycyB3aG8gd2VyZSBtYW55IHRpbWVzIHlvdXIgbnVtYmVycy4gQnV0IGlmIHdlIHRoaW5rIGJlc3QgdG8gbWFrZSBhIGZyaWVuZCBvZiB0aGUgUGFwaGxhZ29uaWFu4oCUCjwvdHJhbnNsYXRpb24+"
translation['5.5.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgd2UgaGVhciB0aGF0IGhlIGhhcyBhIGRlc2lyZSBmb3IgeW91ciBjaXR5IGFuZCBzdHJvbmdob2xkcyBvbiB0aGUgY29hc3TigJR3ZSBzaGFsbCB0cnkgdG8gcHJvdmUgb3Vyc2VsdmVzIGhpcyBmcmllbmRzIGJ5IGFpZGluZyBoaW0gdG8gYWNjb21wbGlzaCBoaXMgZGVzaXJlcy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['5.5.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGVyZXVwb24gSGVjYXRvbnltdXMnIGZlbGxvdy1hbWJhc3NhZG9ycyBtYWRlIGl0IHZlcnkgY2xlYXIgdGhhdCB0aGV5IHdlcmUgYW5ncnkgd2l0aCBoaW0gZm9yIHRoZSB3b3JkcyBoZSBoYWQgc3Bva2VuLCBhbmQgb25lIG9mIHRoZW0gdG9vayB0aGUgZmxvb3IgYW5kIHNhaWQgdGhhdCB0aGV5IGhhZCBub3QgY29tZSB0byBtYWtlIHdhciwgYnV0IHRvIHNob3cgdGhhdCB0aGV5IHdlcmUgZnJpZW5kcy4g4oCcQW5kIGlmIHlvdSBjb21lLOKAnSBoZSBjb250aW51ZWQsIOKAnHRvIHRoZSBjaXR5IG9mIHRoZSBTaW5vcGVhbnMsIHdlIHNoYWxsIHJlY2VpdmUgeW91IHRoZXJlIHdpdGggZ2lmdHMgb2YgaG9zcGl0YWxpdHksIGFuZCBub3cgd2Ugc2hhbGwgZGlyZWN0IHRoZSBwZW9wbGUgb2YgdGhpcyBjaXR5IHRvIGdpdmUgeW91IHdoYXQgdGhleSBjYW47IGZvciB3ZSBzZWUgdGhhdCBhbGwgeW91IHNheSBpcyB0cnVlLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['5.5.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIHRoZSBDb3R5b3JpdGVzIHNlbnQgZ2lmdHMgb2YgaG9zcGl0YWxpdHksIGFuZCB0aGUgZ2VuZXJhbHMgb2YgdGhlIEdyZWVrcyBlbnRlcnRhaW5lZCB0aGUgYW1iYXNzYWRvcnMgb2YgdGhlIFNpbm9wZWFucywgYW5kIHRoZXkgaGFkIGEgZ3JlYXQgZGVhbCBvZiBmcmllbmRseSBjb252ZXJzYXRpb24gd2l0aCBvbmUgYW5vdGhlciBvbiBnZW5lcmFsIG1hdHRlcnMsIHdoaWxlIGluIHBhcnRpY3VsYXIgdGhleSBtYWRlIHN1Y2ggaW5xdWlyaWVzIGFzIGVhY2ggcGFydHkgd2lzaGVkIGluIHJlZ2FyZCB0byB0aGUgcmVzdCBvZiB0aGUgam91cm5leS4KPC90cmFuc2xhdGlvbj4="
translation['5.6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoIHdhcyB0aGUgZW5kIG9mIHRoYXQgZGF5LiBPbiB0aGUgbmV4dCB0aGUgZ2VuZXJhbHMgY2FsbGVkIGFuIGFzc2VtYmx5IG9mIHRoZSBzb2xkaWVycywgYW5kIHRoZXkgZGVjaWRlZCB0byBpbnZpdGUgdGhlIFNpbm9wZWFucyB0byBqb2luIHRoZW0gaW4gZGVsaWJlcmF0aW5nIGFib3V0IHRoZSByZXN0IG9mIHRoZWlyIGpvdXJuZXkuIEZvciBpZiB0aGV5IHNob3VsZCBoYXZlIHRvIHByb2NlZWQgYnkgbGFuZCwgaXQgc2VlbWVkIHRoYXQgdGhlIFNpbm9wZWFucyB3b3VsZCBiZSB1c2VmdWwgdG8gdGhlbSwgYnkgdmlydHVlIG9mIHRoZWlyIGFjcXVhaW50YW5jZSB3aXRoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NzYwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY3NjAiPlBhcGhsYWdvbmlhPC9wbGFjZU5hbWU+OyBhbmQgaWYgdGhleSB3ZXJlIHRvIGdvIGJ5IHNlYSwgdGhlcmUgd2FzIHN0aWxsIG5lZWQsIHRoZXkgdGhvdWdodCwgb2YgdGhlIFNpbm9wZWFucywgaW5hc211Y2ggYXMgdGhleSB3ZXJlIHRoZSBvbmx5IHBlb3BsZSB3aG8gY291bGQgcHJvdmlkZSBzaGlwcyBlbm91Z2ggZm9yIHRoZSBhcm15Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZXkgYWNjb3JkaW5nbHkgaW52aXRlZCB0aGUgYW1iYXNzYWRvcnMgaW4gYW5kIHByb2NlZWRlZCB0byB0YWtlIGNvdW5zZWwgd2l0aCB0aGVtLCBhc2tpbmcgdGhlbSwgYXMgR3JlZWtzIGRlYWxpbmcgd2l0aCBHcmVla3MsIHRvIG1ha2UgYSBiZWdpbm5pbmcgb2YgdGhlaXIga2luZGx5IHJlY2VwdGlvbiBieSBzaG93aW5nIGZyaWVuZGxpbmVzcyBhbmQgb2ZmZXJpbmcgdGhlIGJlc3QgYWR2aWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuIEhlY2F0b255bXVzIHJvc2UgYW5kLCBpbiB0aGUgZmlyc3QgcGxhY2UsIGRlZmVuZGVkIGhpbXNlbGYgaW4gdGhlIG1hdHRlciBvZiBoaXMgcmVtYXJrIHRoYXQgdGhleSB3b3VsZCBtYWtlIGEgZnJpZW5kIG9mIHRoZSBQYXBobGFnb25pYW4sIGJ5IHNheWluZyB0aGF0IGhlIGRpZCBub3QgbWVhbiB0aGF0IGhpcyBvd24gcGVvcGxlIHdvdWxkIG1ha2Ugd2FyIHVwb24gdGhlIEdyZWVrcywgYnV0IHJhdGhlciB0aGF0IGRlc3BpdGUgdGhlIG9wcG9ydHVuaXR5IHRoZXkgaGFkIHRvIGJlIGZyaWVuZHMgb2YgdGhlIGJhcmJhcmlhbnMgdGhleSB3b3VsZCBjaG9vc2UgdGhlIEdyZWVrcyBpbnN0ZWFkLiBCdXQgd2hlbiB0aGV5IHRvbGQgaGltIHRvIHByb2NlZWQgdG8gZ2l2ZSBzb21lIGFkdmljZSwgaGUgYmVnYW4gd2l0aCBhIHByYXllciB0byB0aGUgZ29kcyBhcyBmb2xsb3dzOgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPuKAnElmIEkgc2hvdWxkIGdpdmUgdGhlIGFkdmljZSB3aGljaCBpbiBteSBqdWRnbWVudCBpcyBiZXN0LCBtYXkgbWFueSBibGVzc2luZ3MgY29tZSB0byBtZTsgb3RoZXJ3aXNlLCB0aGUgb3Bwb3NpdGUuIEZvciB3aGF0IG1lbiB0ZXJtIOKAmHNhY3JlZCBjb3Vuc2Vs4oCZPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkhlY2F0b255bXVzIGFsbHVkZXMgdG8gdGhlIHByb3ZlcmIg4oCcQ291bnNlbCBpcyBhIHNhY3JlZCB0aGluZyzigJ0gaS5lLiBpdCBtdXN0IGJlIGdpdmVuIGhvbmVzdGx5Ljwvbm90ZT4gc2VlbXMgdmVyaWx5IHRvIGJlIG15IHBvcnRpb247IHNpbmNlIHRvLWRheSBpZiBJIGJlIGZvdW5kIHRvIGhhdmUgZ2l2ZW4gZ29vZCBjb3Vuc2VsLCB0aGVyZSB3aWxsIGJlIG1hbnkgdG8gcHJhaXNlIG1lLCBidXQgaWYgaXQgYmUgaWxsLCB0aGVyZSB3aWxsIGJlIG1hbnkgYW1vbmcgeW91IHRvIGN1cnNlIG1lLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk5vdyBJIGtub3cgdGhhdCB3ZSBzaGFsbCBoYXZlIGZhciBtb3JlIHRyb3VibGUgaWYgeW91IGFyZSBjb252ZXllZCBieSBzZWEsIGZvciB1cG9uIHVzIHdpbGwgZmFsbCB0aGUgZHV0eSBvZiBwcm92aWRpbmcgdGhlIHNoaXBzOyB3aGlsZSBpZiB5b3Ugam91cm5leSBieSBsYW5kLCB1cG9uIHlvdSB3aWxsIGZhbGwgdGhlIHRhc2sgb2YgZG9pbmcgdGhlIGZpZ2h0aW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk5ldmVydGhlbGVzcywgSSBtdXN0IHNheSB3aGF0IEkgYmVsaWV2ZTsgZm9yIEkgYW0gYWNxdWFpbnRlZCB3aXRoIGJvdGggdGhlIGNvdW50cnkgb2YgdGhlIFBhcGhsYWdvbmlhbnMgYW5kIHRoZWlyIHBvd2VyLiBUaGVpciBjb3VudHJ5IHBvc3Nlc3NlcyB0aGVzZSB0d28gdGhpbmdzLCB0aGUgZmFpcmVzdCBwbGFpbnMgYW5kIHRoZSBsb2Z0aWVzdCBtb3VudGFpbnMuCjwvdHJhbnNsYXRpb24+"
translation['5.6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCwgaW4gdGhlIGZpcnN0IHBsYWNlLCBJIGtub3cgYXQgb25jZSB3aGVyZSB5b3UgbXVzdCBtYWtlIHlvdXIgZW50cnk6IHRoZXJlIGlzIG5vIHBsYWNlIHNhdmUgd2hlcmUgdGhlIHBlYWtzIG9mIHRoZSBtb3VudGFpbnMgcmlzZSBoaWdoIG9uIGVpdGhlciBzaWRlIG9mIHRoZSByb2FkOyBob2xkaW5nIHRoZXNlIHBlYWtzIGEgbWVyZSBoYW5kZnVsIG9mIG1lbiBjb3VsZCBjb21tYW5kIHRoZSBwYXNzLCBhbmQgaWYgdGhleSBhcmUgc28gaGVsZCwgbm90IGFsbCB0aGUgbWVuIGluIHRoZSB3b3JsZCBjb3VsZCBlZmZlY3QgYSBwYXNzYWdlLiBBbGwgdGhpcyBJIGNvdWxkIGV2ZW4gcG9pbnQgb3V0IGlmIHlvdSBzaG91bGQgY2FyZSB0byBzZW5kIHNvbWUgb25lIHRvIHRoZSBzcG90IHdpdGggbWUuCjwvdHJhbnNsYXRpb24+"
translation['5.6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlNlY29uZGx5LCBJIGtub3cgdGhhdCB0aGV5IGhhdmUgcGxhaW5zIGFuZCBhIGNhdmFscnkgd2hpY2ggdGhlIGJhcmJhcmlhbnMgdGhlbXNlbHZlcyByZWdhcmQgYXMgc3VwZXJpb3IgdG8gdGhlIHdob2xlIG9mIHRoZSBLaW5nJ3MgY2F2YWxyeS4gSW5kZWVkLCBvbmx5IG5vdyB0aGVzZSBQYXBobGFnb25pYW5zIGhhdmUgZmFpbGVkIHRvIHByZXNlbnQgdGhlbXNlbHZlcyB3aGVuIHRoZSBLaW5nIHN1bW1vbmVkIHRoZW0sIGZvciB0aGVpciBydWxlciBpcyB0b28gcHJvdWQgdG8gb2JleS4KPC90cmFuc2xhdGlvbj4="
translation['5.6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJZiB5b3Ugc2hvdWxkLCBhZnRlciBhbGwsIGZpbmQgeW91cnNlbHZlcyBhYmxlIG5vdCBvbmx5IHRvIHNlaXplIHRoZSBtb3VudGFpbnMsIHdoZXRoZXIgYnkgc3RlYWx0aCBvciBieSBhbnRpY2lwYXRpbmcgdGhlIGVuZW15LCBidXQgYWxzbyBvbiB0aGUgcGxhaW4gdG8gY29ucXVlciBpbiBiYXR0bGUgYm90aCB0aGVpciBjYXZhbHJ5IGFuZCB0aGVpciBtb3JlIHRoYW4gb25lIGh1bmRyZWQgYW5kIHR3ZW50eSB0aG91c2FuZCBpbmZhbnRyeSwgeW91IHdpbGwgY29tZSB0byB0aGUgcml2ZXJzLiBGaXJzdCBpcyB0aGUgVGhlcm1vZG9uLCB0aHJlZSBwbGV0aHJhIGluIHdpZHRoLCB3aGljaCBJIGZhbmN5IHdvdWxkIGJlIGRpZmZpY3VsdCB0byBjcm9zcywgZXNwZWNpYWxseSB3aXRoIGdyZWF0IG51bWJlcnMgb2YgdGhlIGVuZW15IGluIGZyb250IGFuZCBncmVhdCBudW1iZXJzIGZvbGxvd2luZyBiZWhpbmQ7IHNlY29uZCwgdGhlIElyaXMsIGxpa2V3aXNlIHRocmVlIHBsZXRocmEgd2lkZTsgdGhpcmQsIHRoZSBIYWx5cywgbm90IGxlc3MgdGhhbiB0d28gc3RhZGlhIGluIHdpZHRoLCB3aGljaCB5b3UgY291bGQgbm90IGNyb3NzIHdpdGhvdXQgYm9hdHPigJRhbmQgd2hvIHdpbGwgdGhlcmUgYmUgdG8gc3VwcGx5IHlvdSB3aXRoIGJvYXRzP+KAlGFuZCBzaW1pbGFybHkgaW1wYXNzYWJsZSBpcyB0aGUgUGFydGhlbml1cyBhbHNvLCB0byB3aGljaCB5b3Ugd291bGQgY29tZSBpZiB5b3Ugc2hvdWxkIGdldCBhY3Jvc3MgdGhlIEhhbHlzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRm9yIG15IHBhcnQsIHRoZXJlZm9yZSwgSSBiZWxpZXZlIHRoYXQgdGhpcyBqb3VybmV5IGlzIG5vdCBtZXJlbHkgZGlmZmljdWx0IGZvciB5b3UsIGJ1dCBhIHRoaW5nIG9mIHV0dGVyIGltcG9zc2liaWxpdHkuIElmIHlvdSBnbyBieSBzZWEsIGhvd2V2ZXIsIHlvdSBjYW4gY29hc3QgYWxvbmcgZnJvbSBoZXJlIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU2lub3BlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTaW5vcGUiPlNpbm9wZTwvcGxhY2VOYW1lPiwgYW5kIGZyb20gU2lub3BlIHRvIEhlcmFjbGVpYTsgYW5kIGZyb20gSGVyYWNsZWlhIG9uIHRoZXJlIGlzIG5vIGRpZmZpY3VsdHkgZWl0aGVyIGJ5IGxhbmQgb3IgYnkgd2F0ZXIsIGZvciB0aGVyZSBhcmUgc2hpcHMgaW4gYWJ1bmRhbmNlIGF0IEhlcmFjbGVpYS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['5.6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBoZSBoYWQgdGh1cyBzcG9rZW4sIHNvbWUgb2YgaGlzIGhlYXJlcnMgd2VyZSBzdXNwaWNpb3VzIHRoYXQgaGUgc3Bva2UgYXMgaGUgZGlkIG91dCBvZiBmcmllbmRzaGlwIGZvciBDb3J5bGFzLCBmb3IgaGUgd2FzIGhpcyBvZmZpY2lhbCByZXByZXNlbnRhdGl2ZSBhdCBTaW5vcGU7IG90aGVycyBpbWFnaW5lZCB0aGF0IGhlIGV2ZW4gaGFkIHRoZSBpZGVhIG9mIG9idGFpbmluZyBnaWZ0cyBvbiBhY2NvdW50IG9mIHRoaXMgYWR2aWNlOyB3aGlsZSBzdGlsbCBvdGhlcnMgc3VzcGVjdGVkIHRoYXQgdGhlIHJlYWwgcHVycG9zZSBvZiBoaXMgc3BlZWNoIHdhcyB0byBwcmV2ZW50IHRoZSBHcmVla3MgZnJvbSBnb2luZyBieSBsYW5kIGFuZCBzbyBkb2luZyBzb21lIGhhcm0gdG8gdGhlIHRlcnJpdG9yeSBvZiB0aGUgU2lub3BlYW5zLiBBdCBhbnkgcmF0ZSwgaG93ZXZlciwgdGhlIEdyZWVrcyB2b3RlZCB0byBtYWtlIHRoZSBqb3VybmV5IGJ5IHNlYS4KPC90cmFuc2xhdGlvbj4="
translation['5.6.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIFhlbm9waG9uIHNhaWQ6IOKAnE1lbiBvZiBTaW5vcGUsIG15IHRyb29wcyBoYXZlIGNob3NlbiB0aGUgcm91dGUgd2hpY2ggeW91IGFkdmlzZTsgYnV0IHRoZSBtYXR0ZXIgc3RhbmRzIGluIHRoaXMgd2F5OiBpZiB0aGVyZSBhcmUgdG8gYmUgc2hpcHMgZW5vdWdoIHNvIHRoYXQgbm90IHNvIG11Y2ggYXMgb25lIG1hbiB3aWxsIGJlIGxlZnQgYmVoaW5kIGhlcmUsIHdlIHNoYWxsIHNldCBzYWlsOyBidXQgaWYgdGhlIHBsYW4gc2hvdWxkIGJlIHRvIGxldCBzb21lIG9mIHVzIHN0YXkgYmVoaW5kIGFuZCBvdGhlcnMgc2FpbCwgd2Ugc2hhbGwgbm90IHNldCBmb290IG9uIHRoZSBzaGlwcy4KPC90cmFuc2xhdGlvbj4="
translation['5.6.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igd2Uga25vdyB0aGF0IHdoZXJldmVyIHdlIGhvbGQgdGhlIHVwcGVyIGhhbmQsIHdlIHNob3VsZCBiZSBhYmxlIGJvdGggdG8ga2VlcCBvdXJzZWx2ZXMgc2FmZSBhbmQgdG8gb2J0YWluIHByb3Zpc2lvbnM7IGJ1dCBsZXQgdXMgb25jZSBnZXQgY2F1Z2h0IHdoZXJlIHdlIGFyZSB3ZWFrZXIgdGhhbiB0aGUgZW5lbXksIGFuZCBpdCBpcyBwZXJmZWN0bHkgY2xlYXIgdGhhdCB3ZSBzaGFsbCBiZSBpbiB0aGUgcG9zaXRpb24gb2Ygc2xhdmVzLuKAnSBVcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgdGhlIFNpbm9wZWFucyB0b2xkIHRoZW0gdG8gc2VuZCBhbWJhc3NhZG9ycy4KPC90cmFuc2xhdGlvbj4="
translation['5.6.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhleSBzZW50IENhbGxpbWFjaHVzIHRoZSBBcmNhZGlhbiwgQXJpc3RvbiB0aGUgQXRoZW5pYW4sIGFuZCBTYW1vbGFzIHRoZSBBY2hhZWFuLiBUaGVzZSBtZW4gYWNjb3JkaW5nbHkgc2V0IG91dC4KPC90cmFuc2xhdGlvbj4="
translation['5.6.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyB0aW1lLCBhcyBYZW5vcGhvbidzIGV5ZXMgcmVzdGVkIHVwb24gYSBncmVhdCBib2R5IG9mIEdyZWVrIGhvcGxpdGVzLCBhbmQgbGlrZXdpc2UgdXBvbiBhIGdyZWF0IGJvZHkgb2YgcGVsdGFzdHMsIGJvd21lbiwgc2xpbmdlcnMsIGFuZCBob3JzZW1lbiBhbHNvLCBhbGwgb2YgdGhlbSBub3cgZXhjZWVkaW5nbHkgZWZmaWNpZW50IHRocm91Z2ggY29uc3RhbnQgc2VydmljZSBhbmQgYWxsIHRoZXJlIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NjE5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY2MTkiPlBvbnR1czwvcGxhY2VOYW1lPiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+WGVub3Bob24gdXNlcyB0aGUgdGVybSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgOG9uc69z4TOv8+CPC9mb3JlaWduPiBib3RoIG9mIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjYxOSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2NjE5Ij5FdXhpbmUgU2VhPC9wbGFjZU5hbWU+IGFuZCBvZiB0aGUgcmVnaW9uIGFsb25nIGl0cyBzb3V0aC1lYXN0ZXJuIGNvYXN0LiBTZWUgYmVsb3cuPC9ub3RlPiB3aGVyZSBzbyBsYXJnZSBhIGZvcmNlIGNvdWxkIG5vdCBoYXZlIGJlZW4gZ2F0aGVyZWQgYnkgYW55IHNsaWdodCBvdXRsYXkgb2YgbW9uZXksIGl0IHNlZW1lZCB0byBoaW0gdGhhdCBpdCB3YXMgYSBmaW5lIHRoaW5nIHRvIGdhaW4gYWRkaXRpb25hbCB0ZXJyaXRvcnkgYW5kIHBvd2VyIGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgOG9uc69z4TOv8+CPC9mb3JlaWduPiBib3RoIG9mIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjYxOSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2NjE5Ij5FdXhpbmUgU2VhPC9wbGFjZU5hbWU+IGFuZCBvZiB0aGUgcmVnaW9uIGFsb25nIGl0cyBzb3V0aC1lYXN0ZXJuIGNvYXN0LiBTZWUgYmVsb3cuPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IGJ5IGZvdW5kaW5nIGEgY2l0eS4KPC90cmFuc2xhdGlvbj4="
translation['5.6.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3b3VsZCBiZWNvbWUgYSBncmVhdCBjaXR5LCBoZSB0aG91Z2h0LCBhcyBoZSByZWNrb25lZCB1cCB0aGVpciBvd24gbnVtYmVycyBhbmQgdGhlIHBlb3BsZXMgd2hvIGR3ZWx0IGFyb3VuZCB0aGUgRXV4aW5lLiBBbmQgd2l0aCBhIHZpZXcgdG8gdGhpcyBwcm9qZWN0LCBiZWZvcmUgc3BlYWtpbmcgYWJvdXQgaXQgdG8gYW55IG9mIHRoZSBzb2xkaWVycywgaGUgb2ZmZXJlZCBzYWNyaWZpY2VzLCBzdW1tb25pbmcgZm9yIHRoYXQgcHVycG9zZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTA0NjkxMSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDQ2OTExIj5TaWxhbnVzPC9wbGFjZU5hbWU+IHRoZSBBbWJyYWNpb3QsIHdobyBoYWQgYmVlbiB0aGUgc29vdGhzYXllciBvZiA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTA0NjkxMSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDQ2OTExIj5TaWxhbnVzPC9wbGFjZU5hbWU+LCBob3dldmVyLCBmZWFyaW5nIHRoYXQgdGhpcyB0aGluZyBtaWdodCBjb21lIHRvIHBhc3MgYW5kIHRoYXQgdGhlIGFybXkgbWlnaHQgc2V0dGxlIGRvd24gc29tZXdoZXJlLCBjYXJyaWVkIGZvcnRoIHRvIHRoZSB0cm9vcHMgYSByZXBvcnQgdGhhdCBYZW5vcGhvbiB3YW50ZWQgdGhlbSB0byBzZXR0bGUgZG93biwgc28gdGhhdCBoZSBjb3VsZCBmb3VuZCBhIGNpdHkgYW5kIHdpbiBmb3IgaGltc2VsZiBhIG5hbWUgYW5kIHBvd2VyLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwNDY5MTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTA0NjkxMSI+U2lsYW51czwvcGxhY2VOYW1lPiwgaGlzIG93biBkZXNpcmUgd2FzIHRvIHJlYWNoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiBhcyBxdWlja2x5IGFzIHBvc3NpYmxlOyBmb3IgdGhlIHRocmVlIHRob3VzYW5kIGRhcmljcywgd2hpY2ggaGUgaGFkIHJlY2VpdmVkIGZyb20gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBhdCB0aGUgdGltZSB3aGVuIGhlIHNhY3JpZmljZWQgZm9yIGhpbSBhbmQgaGFkIHRvbGQgdGhlIHRydXRoIGFib3V0IHRoZSB0ZW4gZGF5cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMS43LjE4IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuNy4xODwvYmlibD4uPC9ub3RlPiBoZSBoYWQgYnJvdWdodCBzYWZlbHkgdGhyb3VnaC4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjcuMTgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS43LjE4PC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['5.6.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgc29sZGllcnMgaGVhcmQgdGhpcyByZXBvcnQsIHNvbWUgb2YgdGhlbSB0aG91Z2h0IGl0IHdhcyBiZXN0IHRvIHNldHRsZSBkb3duLCBidXQgdGhlIG1ham9yaXR5IHRob3VnaHQgb3RoZXJ3aXNlLiBBbmQgVGltYXNpb24gdGhlIERhcmRhbmlhbiBhbmQgVGhvcmF4IHRoZSBCb2VvdGlhbiBzYWlkIHRvIHNvbWUgSGVyYWNsZW90IGFuZCBTaW5vcGVhbiBtZXJjaGFudHMgd2hvIHdlcmUgdGhlcmUsIHRoYXQgaWYgdGhleSBkaWQgbm90IHByb3ZpZGUgcGF5IGZvciB0aGUgdHJvb3BzIHNvIHRoYXQgdGhleSB3b3VsZCBoYXZlIHByb3Zpc2lvbnMgZm9yIHRoZSB2b3lhZ2UgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjQ3OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNDc5Ij5Db3R5b3JhPC9wbGFjZU5hbWU+LCB0aGVyZSB3b3VsZCBiZSBkYW5nZXIgb2YgdGhhdCBncmVhdCBmb3JjZSByZW1haW5pbmcgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2MTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjYxOSI+UG9udHVzPC9wbGFjZU5hbWU+LiDigJxGb3IgWGVub3Bob24s4oCdIHRoZXkgd2VudCBvbiwg4oCcd2lzaGVzIGFuZCBpcyB1cmdpbmcgdGhhdCBhcyBzb29uIGFzIHRoZSBzaGlwcyBjb21lLCB3ZSBzaG91bGQgdGhlbiBzYXkgYWxsIG9mIGEgc3VkZGVuIHRvIHRoZSBhcm15Ogo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5gU29sZGllcnMsIG5vdyB3ZSBzZWUgdGhhdCB5b3UgYXJlIHdpdGhvdXQgbWVhbnMgZWl0aGVyIHRvIHN1cHBseSB5b3Vyc2VsdmVzIHdpdGggcHJvdmlzaW9ucyBvbiB0aGUgaG9tZXdhcmQgdm95YWdlLCBvciB0byBkbyBhbnl0aGluZyBmb3IgeW91ciBwZW9wbGUgYXQgaG9tZSB3aGVuIHlvdSBoYXZlIGdvdCBiYWNrIHRoZXJlOyBidXQgaWYgeW91IHdpc2ggdG8gcGljayBvdXQgc29tZSBzcG90IGluIHRoZSBjb3VudHJ5IHRoYXQgbGllcyByb3VuZCBhYm91dCB0aGUgRXV4aW5lIGFuZCBwdXQgdG8gc2hvcmUgd2hlcmV2ZXIgeW91IG1heSB3aXNo4oCUaGUgd2hvIHNvIGRlc2lyZXMgdG8gZ28gYmFjayBob21lIGFuZCBoZSB3aG8gc28gZGVzaXJlcyB0byBzdGF5IGJlaGluZOKAlGhlcmUgYXJlIHlvdXIgc2hpcHMsIHNvIHRoYXQgeW91IGNvdWxkIG1ha2UgYSBzdWRkZW4gYXR0YWNrIGF0IHdoYXRldmVyIHBvaW50IHlvdSBtYXkgd2lzaC4n4oCdCjwvdHJhbnNsYXRpb24+"
translation['5.6.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXBvbiBoZWFyaW5nIHRoaXMgc3RhdGVtZW50IHRoZSBtZXJjaGFudHMgY2FycmllZCBpdCBiYWNrIHRvIHRoZWlyIGNpdGllczsgYW5kIGFsb25nIHdpdGggdGhlbSBUaW1hc2lvbiB0aGUgRGFyZGFuaWFuIHNlbnQgRXVyeW1hY2h1cyB0aGUgRGFyZGFuaWFuIGFuZCBUaG9yYXggdGhlIEJvZW90aWFuIHRvIHRlbGwgdGhlIHNhbWUgc3RvcnkuIFdoZW4gdGhlIFNpbm9wZWFucyBhbmQgSGVyYWNsZW90cyBoZWFyZCBpdCwgdGhleSBzZW50IHRvIFRpbWFzaW9uIGFuZCB1cmdlZCBoaW0gdG8gdGFrZSBpbiBjaGFyZ2UsIGZvciBhIGZlZSwgdGhlIG1hdHRlciBvZiBnZXR0aW5nIHRoZSBhcm15IHRvIHNhaWwgYXdheS4KPC90cmFuc2xhdGlvbj4="
translation['5.6.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5IZSByZWNlaXZlZCB0aGlzIHByb3Bvc2FsIGdsYWRseSwgYW5kIHdoZW4gdGhlIHNvbGRpZXJzIHdlcmUgZ2F0aGVyZWQgaW4gYXNzZW1ibHkgYWRkcmVzc2VkIHRoZW0gYXMgZm9sbG93czog4oCcWW91IG91Z2h0IG5vdCwgc29sZGllcnMsIHRvIHNldCB5b3VyIHRob3VnaHRzIG9uIHJlbWFpbmluZyBoZXJlLCBub3IgdG8gZXN0ZWVtIGFueXRoaW5nIG1vcmUgaGlnaGx5IHRoYW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LiBCdXQgSSBoZWFyIHRoYXQgY2VydGFpbiBwZW9wbGUgYXJlIG9mZmVyaW5nIHNhY3JpZmljZXMgb3ZlciB0aGlzIG1hdHRlciwgd2l0aCBub3Qgc28gbXVjaCBhcyBhIHdvcmQgdG8geW91Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgSSBwcm9taXNlLCBpbiBjYXNlIHlvdSBzZXQgc2FpbCBmcm9tIGhlcmUsIHRvIHByb3ZpZGUgeW91IHdpdGggcGF5IGZyb20gdGhlIGZpcnN0IG9mIHRoZSBtb250aCBhdCB0aGUgcmF0ZSBvZiBhIEN5emljZW5lPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgZ29sZCBjb2luIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ3l6aWN1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ3l6aWN1cyI+Q3l6aWN1czwvcGxhY2VOYW1lPiwgYW4gaW1wb3J0YW50IEdyZWVrIGNpdHkgb24gdGhlIFByb3BvbnRpcy4gSXQgd2FzIGVxdWl2YWxlbnQgaW4gd2VpZ2h0IG9mIGdvbGQgdG8gIGwgbGxzLiBsIGQuIG9yICQ3LjU2OyBidXQgc2VlIG5vdGUgb24gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjEuOSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjEuOTwvYmlibD4uPC9ub3RlPiBwZXIgbW9udGggdG8gZWFjaCBtYW47IGFuZCBJIHdpbGwgdGFrZSB5b3UgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDeXppY3VzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDeXppY3VzIj5DeXppY3VzPC9wbGFjZU5hbWU+LCBhbiBpbXBvcnRhbnQgR3JlZWsgY2l0eSBvbiB0aGUgUHJvcG9udGlzLiBJdCB3YXMgZXF1aXZhbGVudCBpbiB3ZWlnaHQgb2YgZ29sZCB0byAgbCBsbHMuIGwgZC4gb3IgJDcuNTY7IGJ1dCBzZWUgbm90ZSBvbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuMS45IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDEuMS45PC9iaWJsPi48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjMzMSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzMxIj5Ucm9hczwvcGxhY2VOYW1lPiwgdGhlIHBsYWNlIGZyb20gd2hpY2ggSSBhbSBhbiBleGlsZSwgYW5kIG15IGNpdHkgd2lsbCBiZSBhdCB5b3VyIHNlcnZpY2U7IGZvciB0aGV5IHdpbGwgcmVjZWl2ZSBtZSB3aWxsaW5nbHkuCjwvdHJhbnNsYXRpb24+"
translation['5.6.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIEkgbXlzZWxmIHdpbGwgbGVhZCB5b3UgdG8gcGxhY2VzIGZyb20gd2hpY2ggeW91IHdpbGwgZ2V0IGFuIGFidW5kYW5jZSBvZiB3ZWFsdGguIEkgYW0gYWNxdWFpbnRlZCB3aXRoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw1MDA0MjE2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDUwMDQyMTYiPkFlb2xpczwvcGxhY2VOYW1lPiwgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2MTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjYxMyI+UGhyeWdpYTwvcGxhY2VOYW1lPiwgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDIzMzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjMzMSI+VHJvYXM8L3BsYWNlTmFtZT4sIGFuZCB0aGUgZW50aXJlIHByb3ZpbmNlIG9mIFBoYXJuYWJhenVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5QZXJzaWFuIHNhdHJhcCBvZiBMZXNzZXIgUGhyeWdpYSBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2MDgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjYwOCI+Qml0aHluaWE8L3BsYWNlTmFtZT4uPC9ub3RlPiBwYXJ0bHkgYmVjYXVzZSBJIGNvbWUgZnJvbSB0aGF0IHJlZ2lvbiwgYW5kIHBhcnRseSBiZWNhdXNlIEkgaGF2ZSBjYW1wYWlnbmVkIHRoZXJlIHdpdGggQ2xlYXJjaHVzIGFuZCBEZXJjeWxpZGFzLuKAnTxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NjA4IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY2MDgiPkJpdGh5bmlhPC9wbGFjZU5hbWU+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIFNwYXJ0YW4gZ2VuZXJhbC4gSGUgaGFkIHRha2VuIHBhcnQgaW4gdGhlIFBlbG9wb25uZXNpYW4gV2FyLCBhbmQgd2FzIHRoZSBjb21tYW5kZXIgdW5kZXIgd2hvbSB0aGUgVGVuIFRob3VzYW5kIGxhdGVyIHNlcnZlZC48L25vdGU+CiAgICA8L3RyYW5zbGF0aW9uPg=="
translation['5.6.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TmV4dCByb3NlIFRob3JheCB0aGUgQm9lb3RpYW4sIHdobyB3YXMgYXQgb2RkcyB3aXRoIFhlbm9waG9uIG92ZXIgdGhlIGdlbmVyYWxzaGlwIG9mIHRoZSBhcm15LCBhbmQgc2FpZCB0aGF0IG9uY2UgdGhleSBnb3Qgb3V0IG9mIHRoZSBFdXhpbmUgdGhleSB3b3VsZCBoYXZlIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAxMjc4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDEyNzg5Ij5DaGVyc29uZXNlPC9wbGFjZU5hbWU+LCBhIGZhaXIgYW5kIHByb3NwZXJvdXMgY291bnRyeSwgd2hlcmUgYW55IG9uZSB3aG8gc28gZGVzaXJlZCBtaWdodCBkd2VsbCwgd2hpbGUgYW55IHdobyBkaWQgbm90IGRlc2lyZSB0byBkbyB0aGlzLCBtaWdodCByZXR1cm4gaG9tZS4gSXQgd2FzIHJpZGljdWxvdXMsIGhlIHNhaWQsIHdoZW4gdGhlcmUgd2FzIHBsZW50eSBvZiBmZXJ0aWxlIGxhbmQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LCB0byBiZSBodW50aW5nIGZvciBpdCBpbiB0aGUgZG9tYWluIG9mIHRoZSBiYXJiYXJpYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz7igJxBbmQgdW50aWwgeW91IHJlYWNoIHRoYXQgc3BvdCzigJ0gaGUgY29udGludWVkLCDigJxJIGFsc28sIGxpa2UgVGltYXNpb24sIHByb21pc2UgeW91IHJlZ3VsYXIgcGF5LuKAnSBBbGwgdGhpcyBoZSBzYWlkIHdpdGggZnVsbCBrbm93bGVkZ2Ugb2Ygd2hhdCB0aGUgSGVyYWNsZW90cyBhbmQgdGhlIFNpbm9wZWFucyB3ZXJlIHByb21pc2luZyBUaW1hc2lvbiBmb3IgZ2V0dGluZyB0aGUgYXJteSB0byBzYWlsIGF3YXkuIFhlbm9waG9uIG1lYW53aGlsZSB3YXMgc2lsZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBQaGlsZXNpdXMgYW5kIEx5Y29uIHRoZSBBY2hhZWFucyByb3NlIGFuZCBzYWlkIHRoYXQgaXQgd2FzIG91dHJhZ2VvdXMgZm9yIFhlbm9waG9uIHRvIGJlIHByaXZhdGVseSB1cmdpbmcgcGVvcGxlIHRvIHNldHRsZSBkb3duIGFuZCBzYWNyaWZpY2luZyB3aXRoIGEgdmlldyB0byB0aGF0IHBsYW4sIHdoaWxlIHB1YmxpY2x5IHNheWluZyBub3QgYSB3b3JkIGFib3V0IHRoZSBtYXR0ZXIuIFRodXMgWGVub3Bob24gd2FzIGNvbXBlbGxlZCB0byByaXNlIGFuZCBzcGVhayBhcyBmb2xsb3dzOgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz7igJxJIG9mZmVyLCBzb2xkaWVycywgYXMgeW91IHNlZSwgYWxsIHRoZSBzYWNyaWZpY2VzIEkgY2FuIGJvdGggb24geW91ciBiZWhhbGYgYW5kIG15IG93biBpbiBvcmRlciB0aGF0IEkgbWF5IHBlcmNoYW5jZSBzYXkgYW5kIHRoaW5rIGFuZCBkbyBzdWNoIHRoaW5ncyBhcyB3aWxsIGJlIGZhaXJlc3QgYW5kIGJlc3QgYm90aCBmb3IgeW91IGFuZCBtZS4gQW5kIGluIHRoZSBwcmVzZW50IGNhc2UgSSB3YXMgc2FjcmlmaWNpbmcgZm9yIGd1aWRhbmNlIG9uIHRoaXMgcG9pbnQgb25seSwgd2hldGhlciBpdCB3YXMgYmV0dGVyIHRvIGJlZ2luIHRvIHNwZWFrIGJlZm9yZSB5b3UgYW5kIHRvIGFjdCByZWdhcmRpbmcgdGhpcyBwcm9qZWN0LCBvciBub3QgdG8gdG91Y2ggdGhlIG1hdHRlciBhdCBhbGwuCjwvdHJhbnNsYXRpb24+"
translation['5.6.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwNDY5MTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTA0NjkxMSI+U2lsYW51czwvcGxhY2VOYW1lPiwgdGhlIHNvb3Roc2F5ZXIsIGFuc3dlcmVkIG1lIGluIHJlc3BlY3QgdG8gdGhlIG1haW4gaXNzdWUgdGhhdCB0aGUgb21lbnMgd2VyZSBmYXZvdXJhYmxlIChmb3IgaGUga25ldyB3ZWxsIGVub3VnaCB0aGF0IEkgd2FzIG5vdCB1bmFjcXVhaW50ZWQgd2l0aCBkaXZpbmF0aW9uLCBmcm9tIGJlaW5nIGFsd2F5cyBwcmVzZW50IGF0IHRoZSBzYWNyaWZpY2VzKTsgYnV0IGhlIHNhaWQgdGhhdCB0aGVyZSBhcHBlYXJlZCBpbiB0aGUgb21lbnMgYSBraW5kIG9mIGZyYXVkIGFuZCBwbG90IGFnYWluc3QgbWUsIG1hbmlmZXN0bHkgYmVjYXVzZSBoZSBrbmV3IHRoYXQgaGUgd2FzIGhpbXNlbGYgcGxvdHRpbmcgdG8gdHJhZHVjZSBtZSBiZWZvcmUgeW91LiBGb3IgaGUgc3ByZWFkIGFicm9hZCB0aGUgcmVwb3J0IHRoYXQgSSB3YXMgaW50ZW5kaW5nIHRvIGRvIHRoZXNlIHRoaW5ncyBhdCBvbmNlLCB3aXRob3V0IGdldHRpbmcgeW91ciBjb25zZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaWYgSSBzYXcgdGhhdCB5b3Ugd2VyZSB3aXRob3V0IHJlc291cmNlcywgSSBzaG91bGQgYmUgbG9va2luZyBhYm91dCBmb3IgYSBwbGFuIGJ5IHdoaWNoIHlvdSBtaWdodCBnZXQgcG9zc2Vzc2lvbiBvZiBhIGNpdHksIHdpdGggdGhlIHByb3Zpc2lvbiB0aGF0IGFmdGVyd2FyZHMgaGUgd2hvIGNob3NlIG1pZ2h0IHNhaWwgYmFjayBob21lIGF0IG9uY2UsIHdoaWxlIGhlIHdobyBkaWQgbm90IHdpc2ggdG8gZ28gYXQgb25jZSBtaWdodCByZXR1cm4gYWZ0ZXIgaGUgaGFkIGFjY3VtdWxhdGVkIGVub3VnaCB0byBiZXN0b3cgYSBsaXR0bGUgc29tZXRoaW5nIHVwb24gaGlzIHBlb3BsZSBhdCBob21lLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgc2luY2UsIGluIGZhY3QsIEkgc2VlIHRoYXQgdGhlIEhlcmFjbGVvdHMgYW5kIFNpbm9wZWFucyBhcmUgc2VuZGluZyB5b3UgdGhlIHNoaXBzIGluIHdoaWNoIHRvIHNhaWwgYXdheSwgYW5kIHRoYXQgbWVuIGFyZSBwcm9taXNpbmcgeW91IHBheSBmcm9tIHRoZSBmaXJzdCBvZiB0aGUgbW9udGgsIGl0IHNlZW1zIHRvIG1lIGl0IGlzIGEgZmluZSB0aGluZyB0byBiZSBjYXJyaWVkIHNhZmVseSB3aGVyZSB3ZSB3YW50IHRvIGdvIGFuZCBhdCB0aGUgc2FtZSB0aW1lIHRvIHJlY2VpdmUgcGF5IGZvciBvdXIgcHJlc2VydmF0aW9uOyB0aGVyZWZvcmUgSSByZW5vdW5jZSB0aGF0IG90aGVyIHByb2plY3QgZm9yIG15c2VsZiwgYW5kIEkgc2F5LCB0byBhbGwgdGhvc2Ugd2hvIGhhdmUgY29tZSB0byBtZSBhbmQgZXhwcmVzc2VkIHRoZSB2aWV3IHRoYXQgaXQgb3VnaHQgdG8gYmUgY2FycmllZCBvdXQsIHRoYXQgdGhleSBhbHNvIHNob3VsZCByZW5vdW5jZSBpdC4KPC90cmFuc2xhdGlvbj4="
translation['5.6.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRm9yIEkgaG9sZCB0aGlzIG9waW5pb246IHN0YW5kaW5nIHRvZ2V0aGVyIGFuZCBpbiBmb3JjZSwgYXMgeW91IGFyZSBub3csIEkgdGhpbmsgeW91IHdpbGwgYmUgaGVsZCBpbiBob25vdXIgYW5kIHdpbGwgaGF2ZSBwcm92aXNpb25zLCBmb3IgaW4gc3RyZW5ndGggbGllcyB0aGUgb3Bwb3J0dW5pdHkgdG8gd3Jlc3QgYXdheSB0aGUgcG9zc2Vzc2lvbnMgb2YgdGhlIHdlYWtlcjsgYnV0IGxldCB5b3Vyc2VsdmVzIGdldCBzZXBhcmF0ZWQgYW5kIHlvdXIgZm9yY2UgYnJva2VuIHVwIGludG8gc21hbGwgcGFydHMsIGFuZCB5b3Ugd291bGQgbmVpdGhlciBiZSBhYmxlIHRvIG9idGFpbiBmb29kIHRvIGxpdmUgb24gbm9yIHdvdWxkIHlvdSBjb21lIG9mZiB1bmhhcm1lZC4KPC90cmFuc2xhdGlvbj4="
translation['5.6.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rLCB0aGVyZWZvcmUsIGp1c3QgYXMgeW91IGRvLCB0aGF0IHdlIHNob3VsZCBzZXQgb3V0IGZvciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIGFuZCB0aGF0IGlmIGl0IGRvZXMgY29tZSB0byBwYXNzIHRoYXQgYW55IG1hbiBpcyBjYXVnaHQgZGVzZXJ0aW5nIGJlZm9yZSB0aGUgZW50aXJlIGFybXkgaXMgaW4gYSBwbGFjZSBvZiBzYWZldHksIGhlIHNob3VsZCBiZSBicm91Z2h0IHRvIHRyaWFsIGFzIGEgd3JvbmctZG9lci4gQW5kIHdob2V2ZXIgaXMgb2YgdGhpcyBvcGluaW9uLOKAnSBoZSBjb250aW51ZWQsIOKAnGxldCBoaW0gcmFpc2UgaGlzIGhhbmQu4oCdIFVwIHdlbnQgZXZlcnkgaGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['5.6.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+PHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwNDY5MTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTA0NjkxMSI+U2lsYW51czwvcGxhY2VOYW1lPiwgaG93ZXZlciwgYmVnYW4gc2hvdXRpbmcsIGFuZCBhdHRlbXB0ZWQgdG8gc2F5IHRoYXQgaXQgd2FzIGZhaXIgZm9yIGFueSBvbmUgd2hvIHNvIGNob3NlIHRvIGxlYXZlIHRoZSBhcm15LiBCdXQgdGhlIHNvbGRpZXJzIHdvdWxkIG5vdCBhbGxvdyBoaW0gdG8gc3BlYWssIGFuZCB0aGV5IHRocmVhdGVuZWQgaGltIHRoYXQgYXMgc3VyZWx5IGFzIHRoZXkgY2F1Z2h0IGhpbSBydW5uaW5nIGF3YXksIHRoZXkgd291bGQgaW5mbGljdCBkdWUgcHVuaXNobWVudCB1cG9uIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['5.6.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGF0LCB3aGVuIHRoZSBIZXJhY2xlb3RzIGxlYXJuZWQgdGhhdCBpdCBoYWQgYmVlbiB2b3RlZCB0byBzYWlsIGF3YXksIGFuZCB0aGF0IFhlbm9waG9uIGhpbXNlbGYgaGFkIHB1dCB0aGUgcXVlc3Rpb24gdG8gdm90ZSwgdGhleSBkaWQgc2VuZCB0aGUgc2hpcHMsIGJ1dCBpbiB0aGUgbWF0dGVyIG9mIHRoZSBtb25leSB0aGV5IGhhZCBwcm9taXNlZCB0byBUaW1hc2lvbiBhbmQgVGhvcmF4IHRoZXkgdHVybmVkIG91dCB0byBiZSBkZWNlaXZlcnMuCjwvdHJhbnNsYXRpb24+"
translation['5.6.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5Db25zZXF1ZW50bHkgdGhlIG1lbiB3aG8gaGFkIHByb21pc2VkIHRoZSBwYXkgd2VyZSBwYW5pYy1zdHJpY2tlbiwgYW5kIHN0b29kIGluIGZlYXIgb2YgdGhlIGFybXkuIFRoZXkgdGhlcmVmb3JlIHRvb2sgd2l0aCB0aGVtIHRoZSBvdGhlciBnZW5lcmFscyB0byB3aG9tIHRoZXkgaGFkIGNvbW11bmljYXRlZCB0aGVpciBlYXJsaWVyIGRvaW5nc+KAlG5hbWVseSwgYWxsIHRoZSBnZW5lcmFscyBleGNlcHQgTmVvbiB0aGUgQXNpbmFlYW4sIHdobyB3YXMgYWN0aW5nIGFzIGxpZXV0ZW5hbnQgZm9yIENoZWlyaXNvcGh1cyBiZWNhdXNlIENoZWlyaXNvcGh1cyBoYWQgbm90IHlldCByZXR1cm5lZOKAlGFuZCBjYW1lIHRvIFhlbm9waG9uLCB3aXRoIHRoZSBtZXNzYWdlIHRoYXQgdGhleSBoYWQgY2hhbmdlZCB0aGVpciBtaW5kcyBhbmQgdGhvdWdodCBpdCB3YXMgYmVzdCB0byBzYWlsIHRvIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMjI2MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEyMjYzIj5QaGFzaXM8L3BsYWNlTmFtZT4sIGluYXNtdWNoIGFzIHRoZXJlIHdlcmUgc2hpcHMgYXQgaGFuZCwgYW5kIHNlaXplIHRoZSBsYW5kIG9mIHRoZSBQaGFzaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['5.6.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVpciBraW5nLCBhcyBpdCBjaGFuY2VkLCB3YXMgYSBncmFuZHNvbiBvZiBBZWV0ZXMuIFhlbm9waG9uIHJlcGxpZWQgdGhhdCBoZSB3b3VsZCBub3Qgc2F5IGEgd29yZCB0byB0aGUgYXJteSBhYm91dCB0aGlzIHBsYW47IOKAnGJ1dCzigJ0gaGUgd2VudCBvbiwg4oCcZ2F0aGVyIHRoZSBtZW4gdG9nZXRoZXIgYW5kIHNwZWFrIHRvIHRoZW0geW91cnNlbHZlcywgaWYgeW91IHdpc2gu4oCdIFRoZW4gVGltYXNpb24gdGhlIERhcmRhbmlhbiBkZWNsYXJlZCBpdCBhcyBoaXMgb3BpbmlvbiB0aGF0IHRoZXkgc2hvdWxkIG5vdCBob2xkIGFuIGFzc2VtYmx5LCBidXQgdGhhdCBlYWNoIGdlbmVyYWwgc2hvdWxkIGZpcnN0IGVuZGVhdm91ciB0byBwZXJzdWFkZSBoaXMgb3duIGNhcHRhaW5zLiBTbyB0aGV5IHdlbnQgYXdheSBhbmQgc2V0IGFib3V0IGRvaW5nIHRoaXMuCjwvdHJhbnNsYXRpb24+"
translation['5.7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgc29sZGllcnMsIGFjY29yZGluZ2x5LCBsZWFybmVkIGJ5IGlucXVpcnkgdGhhdCB0aGlzIHBsYW4gd2FzIGJlaW5nIGFnaXRhdGVkLiBBbmQgTmVvbiBzYWlkIHRoYXQgWGVub3Bob24gaGFkIHdvbiBvdmVyIHRoZSBvdGhlciBnZW5lcmFscyBhbmQgd2FzIGludGVuZGluZyB0byBkZWNlaXZlIHRoZSBzb2xkaWVycyBhbmQgbGVhZCB0aGVtIGJhY2sgdG8gdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMjYzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTIyNjMiPlBoYXNpczwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['5.7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlVwb24gaGVhcmluZyB0aGVzZSB3b3JkcyB0aGUgc29sZGllcnMgd2VyZSBleGNlZWRpbmdseSBhbmdyeTsgbWVldGluZ3Mgd2VyZSBoZWxkLCBncm91cHMgb2YgdGhlbSBjb2xsZWN0ZWQsIGFuZCBpdCB3YXMgZ3JlYXRseSB0byBiZSBmZWFyZWQgdGhhdCB0aGV5IHdvdWxkIGRvIHRoZSBzb3J0IG9mIHRoaW5ncyB0aGV5IGhhZCBkb25lIHRvIHRoZSBoZXJhbGRzIG9mIHRoZSBDb2xjaGlhbnMgYW5kIHRoZSBtYXJrZXQgY2xlcmtzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BcyBkZXNjcmliZWQgYnkgWGVub3Bob24gaW4gdGhlIGZvbGxvd2luZyBzcGVlY2gsICAxMyBmZi48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['5.7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gWGVub3Bob24gYmVjYW1lIGF3YXJlIG9mIHRoZSBzaXR1YXRpb24sIGhlIGRlY2lkZWQgdG8gY2FsbCBhbiBhc3NlbWJseSBvZiB0aGUgbWVuIGFzIHNwZWVkaWx5IGFzIHBvc3NpYmxlIGFuZCBub3QgdG8gYWxsb3cgdGhlbSB0byBnYXRoZXIgb2YgdGhlaXIgb3duIGFjY29yZDsgc28gaGUgZGlyZWN0ZWQgdGhlIGhlcmFsZCB0byBjYWxsIGFuIGFzc2VtYmx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBhcyBzb29uIGFzIHRoZSBzb2xkaWVycyBoZWFyZCB0aGUgaGVyYWxkLCB0aGV5IHJ1c2hlZCB0b2dldGhlciB3aXRoIHRoZSB1dG1vc3QgcmVhZGluZXNzLiBUaGVuIFhlbm9waG9uLCB3aXRob3V0IG1lbnRpb25pbmcgYWdhaW5zdCB0aGUgZ2VuZXJhbHMgdGhlIG1hdHRlciBvZiB0aGVpciB2aXNpdCB0byBoaW0sIHNwb2tlIGFzIGZvbGxvd3M6CjwvdHJhbnNsYXRpb24+"
translation['5.7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIGhlYXIsIHNvbGRpZXJzLCB0aGF0IHNvbWUgb25lIGlzIGJyaW5naW5nIGEgY2hhcmdlIGFnYWluc3QgbWUsIG5hbWVseSwgdGhhdCBJIGFtIGdvaW5nIHRvIGRlY2VpdmUgeW91IGFuZCBsZWFkIHlvdSB0byB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIyNjMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjI2MyI+UGhhc2lzPC9wbGFjZU5hbWU+LiBJbiB0aGUgbmFtZSBvZiB0aGUgZ29kcywgdGhlbiwgZ2l2ZSBlYXIgdG8gbXkgd29yZHMsIGFuZCBpZiBpdCBhcHBlYXJzIHRoYXQgSSBhbSBndWlsdHkgb2Ygd3JvbmcsIEkgb3VnaHQgbm90IHRvIGxlYXZlIHRoaXMgc3BvdCB3aXRob3V0IHBheWluZyB0aGUgcGVuYWx0eTsgYnV0IGlmIGl0IGFwcGVhcnMgdG8geW91IHRoYXQgbXkgYWNjdXNlcnMgYXJlIGd1aWx0eSBvZiB3cm9uZywgdGhleSBvdWdodCB0byBiZSBkZWFsdCB3aXRoIGluIHN1Y2ggbWFubmVyIGFzIHRoZXkgZGVzZXJ2ZS4KPC90cmFuc2xhdGlvbj4="
translation['5.7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPllvdSBkb3VidGxlc3Mga25vdyzigJ0gaGUgY29udGludWVkLCDigJx3aGVyZSB0aGUgc3VuIHJpc2VzIGFuZCB3aGVyZSBpdCBzZXRzOyBsaWtld2lzZSwgdGhhdCBpZiBhIG1hbiBpcyB0byBnbyB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIGhlIG11c3Qgam91cm5leSB0b3dhcmQgdGhlIHdlc3QsIHdoaWxlIGlmIGhlIHdpc2hlcyB0byBnbyB0byB0aGUgbGFuZHMgb2YgdGhlIGJhcmJhcmlhbnMsIGhlIG11c3QgdHJhdmVsIGluIHRoZSBvcHBvc2l0ZSBkaXJlY3Rpb24sIHRoYXQgaXMsIHRvd2FyZCB0aGUgZWFzdC4gTm93IGlzIHRoZXJlIGFueSBvbmUgd2hvIGNvdWxkIGRlY2VpdmUgeW91IGluIHRoaXMgbWF0dGVyLCBieSBtYWludGFpbmluZyB0aGF0IHRoZSBwbGFjZSB3aGVyZSB0aGUgc3VuIHJpc2VzIGlzIHRoZSBvbmUgd2hlcmUgaXQgc2V0cyBhbmQgdGhlIHBsYWNlIHdoZXJlIGl0IHNldHMgaXMgdGhlIG9uZSB3aGVyZSBpdCByaXNlcz8KPC90cmFuc2xhdGlvbj4="
translation['5.7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB5b3Ugc3VyZWx5IGtub3cgdGhpcyBhbHNvLCB0aGF0IHRoZSBub3J0aCB3aW5kIGNhcnJpZXMgb25lIG91dCBvZiB0aGUgRXV4aW5lIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgd2hpbGUgdGhlIHNvdXRoIHdpbmQgY2FycmllcyB5b3Ugd2l0aGluLCB0byB0aGUgUGhhc2lz4oCUaW5kZWVkLCB0aGUgc2F5aW5nIGlzLCBgV2hlbiB0aGUgbm9ydGggd2luZCBkb3RoIGJsb3csIGZhaXIgdm95YWdpbmcgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LicgSW4gdGhpcyBtYXR0ZXIsIGFnYWluLCBpcyBpdCBwb3NzaWJsZSB0aGF0IGFueSBvbmUgY291bGQgZGVjZWl2ZSB5b3UgaW50byBlbWJhcmtpbmcgd2hlbiB0aGUgc291dGggd2luZCBpcyBibG93aW5nPwo8L3RyYW5zbGF0aW9uPg=="
translation['5.7.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBJIGFtIGdvaW5nIHRvIHB1dCB5b3UgYWJvYXJkLCB5b3UgbWF5IHNheSwgd2hlbiBpdCBpcyBjYWxtLiBXZWxsLCBJIHNoYWxsIGJlIHNhaWxpbmcgb24gb25lIHNoaXAsIHlvdSBvbiBhIGh1bmRyZWQgYXQgbGVhc3QuIEhvdywgdGhlbiwgY291bGQgSSBlaXRoZXIgZm9yY2UgeW91IHRvIHZveWFnZSBhbG9uZyB3aXRoIG1lIGlmIHlvdSBkaWQgbm90IGNob29zZSwgb3IgZGVjZWl2ZSB5b3UgaW50byBmb2xsb3dpbmcgbXkgbGVhZD8KPC90cmFuc2xhdGlvbj4="
translation['5.7.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBzdXBwb3NlIHlvdSBoYXZlIGJlZW4gZGVjZWl2ZWQgYW5kIGJld2l0Y2hlZCBieSBtZSBhbmQgd2UgaGF2ZSBjb21lIHRvIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMjI2MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEyMjYzIj5QaGFzaXM8L3BsYWNlTmFtZT47IHdlIGFjY29yZGluZ2x5IGRpc2VtYmFyayB1cG9uIHRoZSBzaG9yZTsgeW91IHdpbGwgcGVyY2VpdmUsIGxpa2VseSBlbm91Z2gsIHRoYXQgeW91IGFyZSBub3QgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+OyBhbmQgSSwgd2hvIGhhdmUgZG9uZSB0aGUgZGVjZWl2aW5nLCB3aWxsIGJlIG9uZSBsb25lIG1hbiwgd2hpbGUgeW91LCB0aGUgZGVjZWl2ZWQsIHdpbGwgYmUgY2xvc2UgdG8gdGVuIHRob3VzYW5kLCB3aXRoIGFybXMgaW4geW91ciBoYW5kcy4gVGhlbiBob3cgY291bGQgYSBtYW4gYnJpbmcgZG93biBwdW5pc2htZW50IHVwb24gaGltc2VsZiBtb3JlIHN1cmVseSB0aGFuIGJ5IHBsYW5uaW5nIGluIHRoYXQgd2F5IGZvciBoaW1zZWxmIGFuZCBmb3IgeW91Pwo8L3RyYW5zbGF0aW9uPg=="
translation['5.7.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTmF5LCB0aGVzZSBhcmUgdGhlIHN0b3JpZXMgb2YgZm9vbGlzaCBtZW4sIGplYWxvdXMgb2YgbWUgYmVjYXVzZSBJIGVuam95IGhvbm91ciBhdCB5b3VyIGhhbmRzLiBBbmQgeWV0IHRoZXkgc2hvdWxkIG5vdCBpbiBmYWlybmVzcyBmZWVsIHN1Y2ggamVhbG91c3k7IGZvciB3aG9tIGFtb25nIHRoZW0gZG8gSSBoaW5kZXIgZWl0aGVyIGZyb20gc2F5aW5nIGFueSBnb29kIHdvcmQgaGUgY2FuIGJlZm9yZSB5b3UsIG9yIGZyb20gZmlnaHRpbmcgaWYgaGUgd2lsbCBpbiB5b3VyIGJlaGFsZiBhbmQgaGlzIG93biwgb3IgZnJvbSBiZWluZyB3YXRjaGZ1bCBpbiBoaXMgY2FyZSBmb3IgeW91ciBzYWZldHk/IFdlbGwsIHRoZW4sIGRvIEkgc3RhbmQgaW4gYW55IG9uZSdzIHdheSB3aGVuIHlvdSBhcmUgY2hvb3NpbmcgY29tbWFuZGVycz8gSSB5aWVsZCwgbGV0IGhpbSBiZSBjb21tYW5kZXI7IG9ubHkgbGV0IGl0IGJlIHNob3duIHRoYXQgaGUgcmVuZGVycyB5b3UgZ29vZCBzZXJ2aWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.7.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIG15IHBhcnQsIGhvd2V2ZXIsIHdoYXQgSSBoYXZlIHNhaWQgb24gdGhlc2UgcG9pbnRzIHNlZW1zIHRvIG1lIHN1ZmZpY2llbnQ7IGJ1dCBpZiBhbnkgb25lIGFtb25nIHlvdSBpbWFnaW5lcyBlaXRoZXIgdGhhdCBoZSBjb3VsZCBiZSBkZWNlaXZlZCBoaW1zZWxmIGJ5IHN1Y2ggdGFsZXMsIG9yIGNvdWxkIGRlY2VpdmUgYW5vdGhlciBieSB0aGVzZSB0YWxlcywgbGV0IGhpbSBzcGVhayBhbmQgZXhwbGFpbi4KPC90cmFuc2xhdGlvbj4="
translation['5.7.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB5b3UgaGF2ZSBoYWQgZW5vdWdoIG9mIHRoaXMsIGRvIG5vdCBnbyBhd2F5IHVudGlsIHlvdSBoYXZlIGhlYXJkIHdoYXQgbWFubmVyIG9mIGV2aWwgSSBzZWUgYmVnaW5uaW5nIHRvIHNob3cgaXRzZWxmIGluIHRoZSBhcm15OyBmb3IgaWYgaXQgY29tZXMgdXBvbiB1cyBhbmQgcHJvdmVzIHRvIGJlIGFzIHNlcmlvdXMgYXMgaXQgbm93IHNob3dzIHNpZ25zIG9mIGJlaW5nLCBpdCBpcyB0aW1lIGZvciB1cyB0byBiZSB0YWtpbmcgY291bnNlbCBmb3Igb3Vyc2VsdmVzLCBpbiBvcmRlciB0aGF0IHdlIG1heSBub3Qgc3RhbmQgcmV2ZWFsZWQgYXMgbW9zdCB3aWNrZWQgYW5kIGJhc2UgbWVuLCBib3RoIGluIHRoZSBzaWdodCBvZiBnb2RzIGFuZCBtYW5raW5kLCBvZiBmcmllbmRzIGFuZCBlbmVtaWVzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['5.7.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXBvbiBoZWFyaW5nIHRoZXNlIHdvcmRzIHRoZSBzb2xkaWVycyBmZWxsIHRvIHdvbmRlcmluZyB3aGF0IHRoZSB0aGluZyB3YXMsIGFuZCB0aGV5IGJhZGUgWGVub3Bob24gZ28gb24uIFNvIGhlIGJlZ2FuIGFnYWluOiDigJxZb3Uga25vdywgcGVyaGFwcywgdGhhdCBpbiB0aGUgbW91bnRhaW5zIHRoZXJlIHdlcmUgYmFyYmFyaWFuIHN0cm9uZ2hvbGRzLCBmcmllbmRseSB0byB0aGUgQ2VyYXN1bnRpYW5zLCBmcm9tIHdoaWNoIHBlb3BsZSB3b3VsZCBjb21lIGRvd24gYW5kIHNlbGwgeW91IGNhdHRsZSBhbmQgb3RoZXIgdGhpbmdzIHdoaWNoIHRoZXkgaGFkLCBhbmQgYWxzbywgSSBiZWxpZXZlLCBzb21lIG9mIHlvdSB3ZW50IHRvIHRoZSBuZWFyZXN0IG9mIHRoZXNlIHN0cm9uZ2hvbGRzIGFuZCBkaWQgc29tZSBidXlpbmcgYW5kIGNhbWUgYmFjayBhZ2Fpbi4KPC90cmFuc2xhdGlvbj4="
translation['5.7.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5DbGVhcmV0dXMgdGhlIGNhcHRhaW4sIGxlYXJuaW5nIHRoYXQgdGhpcyBwbGFjZSB3YXMgbm90IG9ubHkgc21hbGwsIGJ1dCBhbHNvIHVuZ3VhcmRlZCwgZm9yIHRoZSByZWFzb24gdGhhdCBpdHMgaW5oYWJpdGFudHMgZGVlbWVkIHRoZW1zZWx2ZXMgZnJpZW5kbHksIHNldCBmb3J0aCBhZ2FpbnN0IHRoZW0gYnkgbmlnaHQgd2l0aCB0aGUgaWRlYSBvZiBwbHVuZGVyaW5nIHRoZSBwbGFjZSwgYW5kIHdpdGhvdXQgYSB3b3JkIHRvIGFueSBvbmUgb2YgdXMuCjwvdHJhbnNsYXRpb24+"
translation['5.7.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgaGlzIGludGVudGlvbiwgaW4gY2FzZSBoZSBzaG91bGQgY2FwdHVyZSB0aGlzIHN0cm9uZ2hvbGQsIG5vdCB0byBjb21lIGJhY2sgYWdhaW4gdG8gdGhlIGFybXksIGJ1dCB0byBlbWJhcmsgb24gYSB2ZXNzZWwgdXBvbiB3aGljaCBoaXMgbWVzc21hdGVzIGNoYW5jZWQgdG8gYmUgc2FpbGluZyBhbG9uZyB0aGUgY29hc3QsIHRvIHB1dCBhYm9hcmQgd2hhdGV2ZXIgcGx1bmRlciBoZSBtaWdodCBzZWN1cmUsIGFuZCBzYWlsaW5nIG91dCBvZiB0aGUgRXV4aW5lIHRvIGdvIGF3YXkuIEluZGVlZCwgYXMgSSBub3cgbGVhcm4sIGhpcyBtZXNzbWF0ZXMgb24gdGhlIHZlc3NlbCBoYWQgY29uY2x1ZGVkIGFuIGFncmVlbWVudCB3aXRoIGhpbSB0byB0aGlzIGVmZmVjdC4KPC90cmFuc2xhdGlvbj4="
translation['5.7.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5IZSBhY2NvcmRpbmdseSBzdW1tb25lZCBhbGwgdGhlIG1lbiBoZSBjb3VsZCBwZXJzdWFkZSwgYW5kIHNldCBvdXQgYXQgdGhlaXIgaGVhZCB0byBtYXJjaCBhZ2FpbnN0IHRoZSBzdHJvbmdob2xkLiBXaGlsZSBoZSB3YXMgc3RpbGwgb24gdGhlIG1hcmNoLCBob3dldmVyLCB0aGUgYnJlYWsgb2YgZGF5IHN1cnByaXNlZCBoaW0sIGFuZCB0aGUgcGVvcGxlIG9mIHRoZSBwbGFjZSBnYXRoZXJlZCB0b2dldGhlciBhbmQsIGJ5IHRocm93aW5nIG1pc3NpbGVzIGFuZCBkZWFsaW5nIGJsb3dzIGZyb20gc3Ryb25nIHBvc2l0aW9ucywga2lsbGVkIENsZWFyZXR1cyBhbmQgYSBnb29kIG1hbnkgb2YgaGlzIGZvbGxvd2VycywgYWx0aG91Z2ggc29tZSBvZiB0aGVtIGRpZCBtYWtlIHRoZWlyIHdheSBiYWNrIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDg2MzU3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwODYzNTciPkNlcmFzdXM8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['5.7.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BbGwgdGhpcyBoYXBwZW5lZCBvbiB0aGUgZGF5IHdoZW4gd2Ugd2VyZSBzZXR0aW5nIGZvcnRoIHRvIGNvbWUgaGl0aGVyIGJ5IGxhbmQ7IGFuZCBzb21lIG9mIHRob3NlIHdobyB3ZXJlIGdvaW5nIGJ5IHNlYSB3ZXJlIHN0aWxsIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDg2MzU3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwODYzNTciPkNlcmFzdXM8L3BsYWNlTmFtZT4sIG5vdCBoYXZpbmcgYXMgeWV0IHNldCBzYWlsLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBZnRlciB0aGlzLCBhcyB0aGUgQ2VyYXN1bnRpYW5zIHNheSwgdGhlcmUgYXJyaXZlZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTA4NjM1NyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDg2MzU3Ij5DZXJhc3VzPC9wbGFjZU5hbWU+IHRocmVlIG9mIHRoZSBpbmhhYml0YW50cyBvZiB0aGUgc3Ryb25naG9sZCwgYWxsIGVsZGVybHkgbWVuLCBkZXNpcmluZyB0byBjb21lIGJlZm9yZSBvdXIgZ2VuZXJhbCBhc3NlbWJseS4KPC90cmFuc2xhdGlvbj4="
translation['5.7.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgc2luY2UgdGhleSBkaWQgbm90IGZpbmQgdXMsIHRoZXkgYWRkcmVzc2VkIHRoZW1zZWx2ZXMgdG8gdGhlIENlcmFzdW50aWFucywgc2F5aW5nIHRoYXQgdGhleSB3b25kZXJlZCB3aHkgd2UgaGFkIHNlZW4gZml0IHRvIG1ha2UgYW4gYXR0YWNrIHVwb24gdGhlbS4gV2hlbiwgaG93ZXZlciwgdGhlIENlcmFzdW50aWFucyByZXBsaWVkLCBzbyB0aGVpciBzdGF0ZW1lbnQgcmFuLCB0aGF0IGl0IHdhcyBub3QgYnkgcHVibGljIGF1dGhvcml0eSB0aGF0IHRoZSBhZmZhaXIgdG9vayBwbGFjZSwgdGhlIGVudm95cyB3ZXJlIHBsZWFzZWQsIGFuZCB3ZXJlIGludGVuZGluZyB0byBzYWlsIGhpdGhlciBpbiBvcmRlciB0byB0ZWxsIHVzIHdoYXQgaGFkIGhhcHBlbmVkLCBhbmQgdG8gdXJnZSB0aGF0IHdlIHNob3VsZCBvdXJzZWx2ZXMgdGFrZSBhbmQgYnVyeSB0aGUgYm9kaWVzIG9mIG91ciBkZWFkLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.7.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaXQgY2hhbmNlZCB0aGF0IHNvbWUgb2YgdGhlIEdyZWVrcyB3aG8gaGFkIGVzY2FwZWQgd2VyZSBzdGlsbCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTA4NjM1NyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDg2MzU3Ij5DZXJhc3VzPC9wbGFjZU5hbWU+OyBhbmQgd2hlbiB0aGV5IGxlYXJuZWQgd2hpdGhlciB0aGUgYmFyYmFyaWFucyB3ZXJlIGdvaW5nLCB0aGV5IGNvbW1pdHRlZCB0aGUgc2hhbWVsZXNzbmVzcyBvZiBub3Qgb25seSBhdHRhY2tpbmcgdGhlbSB3aXRoIHN0b25lcyB0aGVtc2VsdmVzLCBidXQgdXJnaW5nIG90aGVycyB0byBkbyB0aGUgc2FtZS4gQW5kIHRoZSBtZW4gd2VyZSBraWxsZWQsIHRoZXNlIHRocmVlLCB3aG8gd2VyZSBhbWJhc3NhZG9yc+KAlHN0b25lZCB0byBkZWF0aC4KPC90cmFuc2xhdGlvbj4="
translation['5.7.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2hlbiB0aGlzIGhhZCB0YWtlbiBwbGFjZSwgdGhlIENlcmFzdW50aWFucyBjYW1lIHRvIHVzIGFuZCB0b2xkIHVzIG9mIHRoZSBhZmZhaXI7IGFuZCB3ZSBnZW5lcmFscywgdXBvbiBoZWFyaW5nIHRoZSBzdG9yeSwgd2VyZSBkaXN0cmVzc2VkIGF0IHdoYXQgaGFkIGhhcHBlbmVkLCBhbmQgd2UgcHJvY2VlZGVkIHRvIHRha2UgY291bnNlbCB3aXRoIHRoZSBDZXJhc3VudGlhbnMgYXMgdG8gaG93IHRoZSBib2RpZXMgb2YgdGhlIEdyZWVrIGRlYWQgbWlnaHQgYmUgYnVyaWVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.7.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5XaGlsZSB3ZSB3ZXJlIGluIHNlc3Npb24gb3V0c2lkZSB0aGUgY2FtcCwgd2Ugc3VkZGVubHkgaGVhcmQgYSBncmVhdCB1cHJvYXIgYW5kIHNob3V0cyBvZiBgU3RyaWtlISBzdHJpa2UhIHBlbHQhIHBlbHQhJyBhbmQgaW4gYSBtb21lbnQgd2Ugc2F3IGEgY3Jvd2Qgb2YgbWVuIHJ1c2hpbmcgdG93YXJkIHVzIHdpdGggc3RvbmVzIGluIHRoZWlyIGhhbmRzIGFuZCBvdGhlcnMgcGlja2luZyB1cCBzdG9uZXMuCjwvdHJhbnNsYXRpb24+"
translation['5.7.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIENlcmFzdW50aWFucywgaGF2aW5nIHdpdG5lc3NlZCwgbWFyayB5b3UsIHRoZSBhZmZhaXIgaW4gdGhlaXIgb3duIGNpdHksIHdlcmUgbmF0dXJhbGx5IHRlcnJpZmllZCwgYW5kIGh1cnJpZWQgYmFjayB0b3dhcmQgdGhlaXIgc2hpcHMuIEZvciB0aGF0IG1hdHRlciwgYnkgWmV1cywgdGhlcmUgd2VyZSBzb21lIG9mIG91ciBvd24gbnVtYmVyIHdobyB3ZXJlIHRlcnJpZmllZC4KPC90cmFuc2xhdGlvbj4="
translation['5.7.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5JIHdlbnQgdXAgdG8gdGhlIG1lbiwgaG93ZXZlciwgYW5kIGFza2VkIHdoYXQgdGhlIHRyb3VibGUgd2FzLiBTb21lIG9mIHRoZW0gZGlkIG5vdCBrbm93IGF0IGFsbCwgYnV0IG5ldmVydGhlbGVzcyB0aGV5IGhhZCBzdG9uZXMgaW4gdGhlaXIgaGFuZHMuIFdoZW4gSSBkaWQgY29tZSB1cG9uIGEgbWFuIHdobyBrbmV3LCBoZSB0b2xkIG1lIHRoYXQgdGhlIG1hcmtldC1jbGVya3Mgd2VyZSB0cmVhdGluZyB0aGUgYXJteSBtb3N0IG91dHJhZ2VvdXNseS4KPC90cmFuc2xhdGlvbj4="
translation['5.7.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGlzIG1vbWVudCBzb21lIG9uZSBzYXcgdGhlIG1hcmtldC1jbGVyaywgWmVsYXJjaHVzLCByZXRyZWF0aW5nIHRvd2FyZCB0aGUgc2VhLCBhbmQgc2V0IHVwIGEgc2hvdXQ7IGFuZCB3aGVuIHRoZSByZXN0IGhlYXJkIGl0LCB0aGV5IHJ1c2hlZCB1cG9uIGhpbSBhcyB0aG91Z2ggYSB3aWxkIGJvYXIgb3IgYSBzdGFnIGhhZCBiZWVuIHNpZ2h0ZWQuCjwvdHJhbnNsYXRpb24+"
translation['5.7.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm93IHRoZSBDZXJhc3VudGlhbnMsIHNlZWluZyB0aGlzIHJ1c2ggaW4gdGhlaXIgbmVpZ2hib3VyaG9vZCBhbmQgYmVsaWV2aW5nIGl0IHdhcyB1bmRvdWJ0ZWRseSBkaXJlY3RlZCBhZ2FpbnN0IHRoZW1zZWx2ZXMsIHRvb2sgdG8gcnVubmluZyBpbiB0aGVpciBmbGlnaHQgYW5kIHRocmV3IHRoZW1zZWx2ZXMgaW50byB0aGUgc2VhLiBTb21lIG9mIG91ciBvd24gbWVuIGFsc28gcGx1bmdlZCBpbiB3aXRoIHRoZW0sIGFuZCBhbnkgd2hvIGRpZCBub3QgY2hhbmNlIHRvIGtub3cgaG93IHRvIHN3aW0gd2VyZSBkcm93bmVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.7.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hhdCB0aGluayB5b3UgYWJvdXQgdGhlc2UgQ2VyYXN1bnRpYW5zPyBUaGV5IGhhZCBkb25lIG5vIHdyb25nLCBidXQgdGhleSB3ZXJlIGFmcmFpZCB0aGF0IGEga2luZCBvZiBtYWRuZXNzLCBzdWNoIGFzIGF0dGFja3MgZG9ncywgaGFkIHNlaXplZCB1cG9uIHVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgaWYgdGhlc2UgZG9pbmdzIGFyZSB0byBnbyBvbiBpbiB0aGlzIHdheSwgb2JzZXJ2ZSB3aGF0IHRoZSBzaXR1YXRpb24gb2YgeW91ciBhcm15IHdpbGwgYmUuCjwvdHJhbnNsYXRpb24+"
translation['5.7.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5Zb3UsIHRoZSBnZW5lcmFsIGJvZHksIHdpbGwgbm90IGhhdmUgaXQgaW4geW91ciBwb3dlciBlaXRoZXIgdG8gdW5kZXJ0YWtlIHdhciB1cG9uIHdob20geW91IHBsZWFzZSBvciB0byBicmluZyB3YXIgdG8gYW4gZW5kLCBidXQgYW55IGluZGl2aWR1YWwgd2hvIHdpc2hlcyB3aWxsIGJlIGxlYWRpbmcgYW4gYXJteSB0byBnYWluIGFueSBlbmQgaGUgbWF5IGRlc2lyZS4gQW5kIGlmIHBlb3BsZSBjb21lIHRvIHlvdSBhcyBhbWJhc3NhZG9ycywgZGVzaXJpbmcgcGVhY2Ugb3IgYW55dGhpbmcgZWxzZSwgYW55IHdobyBjaG9vc2Ugd2lsbCBraWxsIHRoZW0gYW5kIHByZXZlbnQgeW91IGZyb20gaGVhcmluZyB0aGUgd29yZHMgb2YgdGhvc2Ugd2hvIGNvbWUgdG8gY29uZmVyIHdpdGggeW91Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.7.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgdGhlIG1lbiB3aG9tIHlvdSBhcyBhIGJvZHkgbWF5IGNob29zZSBmb3IgY29tbWFuZGVycyB3aWxsIGJlIG9mIG5vIGFjY291bnQsIGJ1dCB3aG9ldmVyIG1heSBjaG9vc2UgaGltc2VsZiBnZW5lcmFsIGFuZCB3aWxsIHJhaXNlIHRoZSBjcnkgYFBlbHQsIHBlbHQsJyB0aGF0IG1hbiB3aWxsIGhhdmUgdGhlIHBvd2VyIHRvIHNsYXkgZWl0aGVyIGNvbW1hbmRlciBvciBwcml2YXRlLCBhbnkgb25lIG9mIHlvdSBoZSBwbGVhc2VzLCB3aXRob3V0IGEgdHJpYWwsIHByb3ZpZGVk4oCUYXMgaW5kZWVkIGl0IGNhbWUgYWJvdXQgaW4gdGhlIHByZXNlbnQgY2FzZeKAlHRoZXJlIGFyZSBwZW9wbGUgd2hvIHdpbGwgb2JleSBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['5.7.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5Db25zaWRlciB0aGUgc29ydCBvZiB0aGluZ3MgdGhlc2Ugc2VsZi1jaG9zZW4gZ2VuZXJhbHMgaGF2ZSBhY3R1YWxseSBhY2NvbXBsaXNoZWQgZm9yIHlvdS4gVGFrZSBaZWxhcmNodXMsIHRoZSBtYXJrZXQtY2xlcms6IHN1cHBvc2luZyBoZSBoYXMgZG9uZSB5b3Ugd3JvbmcsIGhlIGhhcyBzYWlsZWQgb2ZmIHdpdGhvdXQgcGF5aW5nIHlvdSB0aGUgcGVuYWx0eTsgc3VwcG9zaW5nIGhlIGlzIG5vdCBndWlsdHksIGhlIGhhcyBmbGVkIGZyb20gdGhlIGFybXkgb3V0IG9mIGZlYXIgdGhhdCBoZSBtaWdodCBiZSBzbGFpbiB1bmp1c3RseSBhbmQgd2l0aG91dCBhIHRyaWFsLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.7.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5UYWtlIHRob3NlIHdobyBzdG9uZWQgdG8gZGVhdGggdGhlIGFtYmFzc2Fkb3JzOiB0aGV5IGhhdmUgYWNjb21wbGlzaGVkIHRoaXMgcmVzdWx0LCB0aGF0IHlvdSBhbG9uZSBvZiBhbGwgdGhlIEdyZWVrcyBjYW5ub3QgZ28gdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwODYzNTciIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTA4NjM1NyI+Q2VyYXN1czwvcGxhY2VOYW1lPiBzYWZlbHkgdW5sZXNzIHlvdSBhcnJpdmUgdGhlcmUgd2l0aCBhIHN0cm9uZyBmb3JjZTsgYW5kIGFzIGZvciB0aGUgZGVhZCB3aG9tIHByZXZpb3VzbHkgdGhlIHZlcnkgbWVuIHdobyBraWxsZWQgdGhlbSBwcm9wb3NlZCBidXJ5aW5nLCB0aGUgcmVzdWx0IGFjY29tcGxpc2hlZCBpcywgdGhhdCBub3cgaXQgaXMgbm90IHNhZmUgdG8gcGljayB1cCB0aGVpciBib2RpZXMgZXZlbiBmb3Igb25lIHdobyBjYXJyaWVzIGEgaGVyYWxkJ3Mgc3RhZmYuIEZvciB3aG8gd2lsbCBjYXJlIHRvIGdvIGFzIGhlcmFsZCB3aGVuIGhlIGhhcyB0aGUgYmxvb2Qgb2YgaGVyYWxkcyB1cG9uIGhpcyBoYW5kcz8gU28gd2UgcmVxdWVzdGVkIHRoZSBDZXJhc3VudGlhbnMgdG8gYnVyeSB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.7.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IGlmIHRoZXNlIHRoaW5ncyBhcmUgcmlnaHQsIGRvIHlvdSBzbyByZXNvbHZlLCBpbiBvcmRlciB0aGF0LCB3aXRoIHRoZSB1bmRlcnN0YW5kaW5nIHRoYXQgc3VjaCBkZWVkcyBhcmUgdG8gYmUgZG9uZSwgYSBtYW4gbWF5IGVzdGFibGlzaCBoaXMgb3duIHByaXZhdGUgZ3VhcmQgYW5kIG1heSBlbmRlYXZvdXIgdG8gaG9sZCBwb3NzZXNzaW9uIG9mIHRoZSBzdHJvbmcgcGxhY2VzIG92ZXJoYW5naW5nIGhpbSBvbiB0aGUgcmlnaHQgd2hlbiBoZSBlbmNhbXBzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.7.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5JZiwgaG93ZXZlciwgeW91IHRoaW5rIHRoYXQgc3VjaCBkZWVkcyBhcmUgdGhvc2Ugb2Ygd2lsZCBiZWFzdHMgYW5kIG5vdCBvZiBodW1hbiBiZWluZ3MsIGxvb2sgYWJvdXQgZm9yIHNvbWUgbWVhbnMgb2Ygc3RvcHBpbmcgdGhlbTsgb3RoZXJ3aXNlLCBob3csIGluIHRoZSBuYW1lIG9mIFpldXMsIHNoYWxsIHdlIG9mZmVyIGdsYWQgc2FjcmlmaWNlcyB0byB0aGUgZ29kcyB3aGVuIHdlIGFyZSBkb2luZyBpbXBpb3VzIGRlZWRzLCBvciBob3cgc2hhbGwgd2UgZmlnaHQgd2l0aCBlbmVtaWVzIGlmIHdlIGFyZSBzbGF5aW5nIG9uZSBhbm90aGVyPwo8L3RyYW5zbGF0aW9uPg=="
translation['5.7.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hhdCBmcmllbmRseSBjaXR5IHdpbGwgcmVjZWl2ZSB1cyB3aGVuIGl0IHNlZXMgc28gZ3JlYXQgbGF3bGVzc25lc3MgYW1vbmdzdCB1cz8gV2hvIHdpbGwgZGFyZSB0byBzdXBwbHkgdXMgYSBtYXJrZXQgaWYgaW4gbWF0dGVycyBvZiB0aGUgZ3JlYXRlc3QgaW1wb3J0IHdlIHNob3cgb3Vyc2VsdmVzIGd1aWx0eSBvZiBzdWNoIG9mZmVuY2VzPyBBbmQgaW4gdGhhdCBsYW5kPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPi48L25vdGU+IHdoZXJlIHdlIGFyZSBhbHdheXMgZmFuY3lpbmcgdGhhdCB3ZSBzaGFsbCBvYnRhaW4gcHJhaXNlIGZyb20gZXZlcnkgb25lLCB3aG8gd2lsbCBwcmFpc2UgdXMgaWYgd2UgYXJlIG1lbiBvZiB0aGlzIHNvcnQ/IEZvciB3ZSBvdXJzZWx2ZXMsIEkgYW0gcXVpdGUgc3VyZSwgc2hvdWxkIHNheSB0aGF0IHBlb3BsZSB3aG8gcGVyZm9ybSBzdWNoIGRlZWRzIGFyZSBzY291bmRyZWxzLuKAnQo8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4uPC90cmFuc2xhdGlvbj4="
translation['5.7.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGVyZXVwb24gYWxsIHJvc2UgYW5kIHByb3Bvc2VkIHRoYXQgdGhlIG1lbiB3aG8gYmVnYW4gdGhpcyBhZmZhaXIgc2hvdWxkIGJlIGR1bHkgcHVuaXNoZWQsIGFuZCB0aGF0IGhlbmNlZm9ydGggbm8gb25lIHNob3VsZCBiZSBhZ2FpbiBwZXJtaXR0ZWQgdG8gbWFrZSBhIGJlZ2lubmluZyBvZiBsYXdsZXNzbmVzczsgYnV0IGlmIGFueSBzaG91bGQgc28gYmVnaW4sIHRoZXkgd2VyZSB0byBiZSBwdXQgb24gdHJpYWwgZm9yIHRoZWlyIGxpdmVzOyBhbmQgdGhlIGdlbmVyYWxzIHdlcmUgdG8gYnJpbmcgYWxsIG9mZmVuZGVycyB0byB0cmlhbCwgYW5kIHRyaWFscyB3ZXJlIGxpa2V3aXNlIHRvIGJlIGhlbGQgaW4gdGhlIG1hdHRlciBvZiBhbnkgb3RoZXIgb2ZmZW5jZXMgd2hpY2ggYW55IG9uZSBoYWQgY29tbWl0dGVkIHNpbmNlIHRoZSB0aW1lIHdoZW4gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiB3YXMga2lsbGVkOyBhbmQgdGhleSBhcHBvaW50ZWQgdGhlIGNhcHRhaW5zIHRvIHNlcnZlIGFzIGEganVyeS4KPC90cmFuc2xhdGlvbj4="
translation['5.7.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVyLCB1cG9uIHRoZSByZWNvbW1lbmRhdGlvbiBvZiBYZW5vcGhvbiwgYW5kIGJ5IHRoZSBhZHZpY2Ugb2YgdGhlIHNvb3Roc2F5ZXJzLCBpdCB3YXMgcmVzb2x2ZWQgdG8gcHVyaWZ5IHRoZSBhcm15LiBTbyB0aGUgcml0ZXMgb2YgcHVyaWZpY2F0aW9uIHdlcmUgcGVyZm9ybWVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3YXMgbGlrZXdpc2UgcmVzb2x2ZWQgdGhhdCB0aGUgZ2VuZXJhbHMgc2hvdWxkIHVuZGVyZ28gYW4gaW5xdWlyeSB3aXRoIHJlZmVyZW5jZSB0byB0aGVpciBwYXN0IGNvbmR1Y3QuIFdoZW4gdGhleSBwcmVzZW50ZWQgdGhlaXIgc3RhdGVtZW50cywgUGhpbGVzaXVzIGFuZCBYYW50aGljbGVzIHdlcmUgY29uZGVtbmVkLCBmb3IgdGhlaXIgY2FyZWxlc3MgZ3VhcmRpbmcgb2YgdGhlIG1lcmNoYW50bWVuJ3MgY2FyZ29lcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4xLjE2IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuMS4xNjwvYmlibD4uPC9ub3RlPiB0byBwYXkgdGhlIGxvc3MgaW5jdXJyZWQsIG5hbWVseSwgdHdlbnR5IG1pbmFzLCBhbmQgU29waGFlbmV0dXMsIGZvciBuZWdsZWN0IG9mIGR1dHkgaW4gdGhlIG9mZmljZSB0byB3aGljaCBoZSBoYWQgYmVlbiBjaG9zZW4sPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjEuMTYiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS4xLjE2PC9iaWJsPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4zLjEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS4zLjE8L2JpYmw+LCBhbmQgc2VlIGNyaXRpY2FsIG5vdGUuPC9ub3RlPiB3YXMgZmluZWQgdGVuIG1pbmFzLjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4zLjEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS4zLjE8L2JpYmw+LCBhbmQgc2VlIGNyaXRpY2FsIG5vdGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFjY3VzYXRpb25zIHdlcmUgYWxzbyBtYWRlIGFnYWluc3QgWGVub3Bob24gYnkgY2VydGFpbiBtZW4gd2hvIGNsYWltZWQgdGhhdCBoZSBoYWQgYmVhdGVuIHRoZW0sIGFuZCBzbyBicm91Z2h0IHRoZSBjaGFyZ2Ugb2Ygd2FudG9uIGFzc2F1bHQuCjwvdHJhbnNsYXRpb24+"
translation['5.8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlhlbm9waG9uIGJhZGUgdGhlIGZpcnN0IG1hbiB3aG8gc3Bva2UgdG8gc3RhdGUgd2hlcmUgaXQgd2FzIHRoYXQgaGUgaGFkIHN0cnVjayBoaW0uIEhlIHJlcGxpZWQsIOKAnEluIHRoZSBwbGFjZSB3aGVyZSB3ZSB3ZXJlIHBlcmlzaGluZyB3aXRoIGNvbGQgYW5kIHRoZXJlIHdhcyBhbiBlbm9ybW91cyBhbW91bnQgb2Ygc25vdy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['5.8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBYZW5vcGhvbiBzYWlkLCDigJxXZWxsLCByZWFsbHksIHdpdGggd2VhdGhlciBvZiB0aGUgc29ydCB5b3UgZGVzY3JpYmUgYW5kIHByb3Zpc2lvbnMgdXNlZCB1cCBhbmQgbm8gY2hhbmNlIGV2ZW4gdG8gZ2V0IGEgc21lbGwgb2Ygd2luZSwgd2hlbiBtYW55IG9mIHVzIHdlcmUgYmVjb21pbmcgZXhoYXVzdGVkIHdpdGggaGFyZHNoaXBzIGFuZCB0aGUgZW5lbXkgd2VyZSBhdCBvdXIgaGVlbHMsIGlmIGF0IHN1Y2ggYSB0aW1lIGFzIHRoYXQgSSB3YW50b25seSBhYnVzZWQgeW91LCBJIGFkbWl0IHRoYXQgSSBhbSBtb3JlIHdhbnRvbiBldmVuIHRoYW4gdGhlIGFzcywgd2hpY2gsIGJlY2F1c2Ugb2YgaXRzIHdhbnRvbm5lc3MsIHNvIHRoZSBzYXlpbmcgcnVucywgaXMgbm90IHN1YmplY3QgdG8gZmF0aWd1ZS4gTmV2ZXJ0aGVsZXNzLCBkbyB0ZWxsIHVzLOKAnSBoZSBzYWlkLCDigJxmb3Igd2hhdCByZWFzb24geW91IHdlcmUgc3RydWNrLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkRpZCBJIGFzayB5b3UgZm9yIHNvbWV0aGluZywgYW5kIHRoZW4gc3RyaWtlIHlvdSBiZWNhdXNlIHlvdSB3b3VsZCBub3QgZ2l2ZSBpdCB0byBtZT8gRGlkIEkgZGVtYW5kIHNvbWV0aGluZyBiYWNrPyBXYXMgaXQgaW4gYSBmaWdodCBvdmVyIGEgZmF2b3VyaXRlPyBXYXMgaXQgYW4gYWN0IG9mIGRydW5rZW4gdmlvbGVuY2U/4oCdCjwvdHJhbnNsYXRpb24+"
translation['5.8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlIG1hbiByZXBsaWVkIHRoYXQgaXQgd2FzIG5vbmUgb2YgdGhlc2UgdGhpbmdzLCBYZW5vcGhvbiBhc2tlZCBoaW0gaWYgaGUgd2FzIGEgaG9wbGl0ZS4gSGUgc2FpZCBuby4gV2FzIGhlIGEgcGVsdGFzdCwgdGhlbj8gTm8sIG5vdCB0aGF0IGVpdGhlciwgaGUgc2FpZCwgYnV0IGhlIGhhZCBiZWVuIGRldGFpbGVkIGJ5IGhpcyBtZXNzbWF0ZXMsIGFsdGhvdWdoIGhlIHdhcyBhIGZyZWUgbWFuLCB0byBkcml2ZSBhIG11bGUuCjwvdHJhbnNsYXRpb24+"
translation['5.8.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkF0IHRoYXQgWGVub3Bob24gcmVjb2duaXplZCBoaW0sIGFuZCBhc2tlZDog4oCcQXJlIHlvdSB0aGUgZmVsbG93IHdobyBjYXJyaWVkIHRoZSBzaWNrIG1hbj/igJ0g4oCcWWVzLCBieSBaZXVzLOKAnSBoZSByZXBsaWVkLCDigJxmb3IgeW91IGZvcmNlZCBtZSB0byBkbyBzbzsgYW5kIHlvdSBzY2F0dGVyZWQgbXkgbWVzc21hdGVzJyBiYWdnYWdlIGFsbCBhYm91dC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['5.8.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPuKAnFdoeSwgdGhlIHNjYXR0ZXJpbmcs4oCdIHNhaWQgWGVub3Bob24sIOKAnHdhcyBhZnRlciB0aGlzIGZhc2hpb246IEkgZGlzdHJpYnV0ZWQgaXQgYW1vbmcgb3RoZXJzIHRvIGNhcnJ5IGFuZCBkaXJlY3RlZCB0aGVtIHRvIGJyaW5nIGl0IGJhY2sgdG8gbWUsIGFuZCB3aGVuIEkgZ290IGl0IGJhY2ssIEkgcmV0dXJuZWQgdGhlIHdob2xlIG9mIGl0IHRvIHlvdSBpbnRhY3Qgd2hlbiB5b3UsIGZvciB5b3VyIHBhcnQsIGhhZCBzaG93biBtZSB0aGUgc2ljayBtYW4uIEJ1dCBsaXN0ZW4sIGFsbCBvZiB5b3Us4oCdIGhlIGNvbnRpbnVlZCwg4oCcYW5kIGhlYXIgaG93IHRoZSBhZmZhaXIgaGFwcGVuZWQ7IGZvciB0aGUgc3RvcnkgaXMgd29ydGggaGVhcmluZy4KPC90cmFuc2xhdGlvbj4="
translation['5.8.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBIG1hbiB3YXMgYmVpbmcgbGVmdCBiZWhpbmQgYmVjYXVzZSBoZSB3YXMgdW5hYmxlIHRvIGtlZXAgZ29pbmcgYW55IGxvbmdlci4gSSB3YXMgYWNxdWFpbnRlZCB3aXRoIHRoZSBtYW4gb25seSBzbyBmYXIgYXMgdG8ga25vdyB0aGF0IGhlIHdhcyBvbmUgb2Ygb3VyIG51bWJlciwgYW5kIEkgZm9yY2VkIHlvdSwgc2lyLCB0byBjYXJyeSBoaW0gaW4gb3JkZXIgdGhhdCBoZSBtaWdodCBub3QgcGVyaXNoOyBmb3IsIGFzIEkgcmVtZW1iZXIsIHRoZSBlbmVteSB3ZXJlIGZvbGxvd2luZyBhZnRlciB1cy7igJ0gVG8gdGhhdCB0aGUgZmVsbG93IGFncmVlZC4KPC90cmFuc2xhdGlvbj4="
translation['5.8.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPuKAnFdlbGws4oCdIFhlbm9waG9uIGNvbnRpbnVlZCwg4oCcYWZ0ZXIgSSBoYWQgc2VudCB5b3Ugb24gYWhlYWQsIEkgb3ZlcnRvb2sgeW91IGFnYWluLCBhcyBJIGNhbWUgYWxvbmcgd2l0aCB0aGUgcmVhcmd1YXJkLCBhbmQgZm91bmQgeW91IGRpZ2dpbmcgYSBob2xlIHRvIGJ1cnkgdGhlIG1hbiBpbiwgYW5kIEkgc3RvcHBlZCBhbmQgY29tbWVuZGVkIHlvdS4KPC90cmFuc2xhdGlvbj4="
translation['5.8.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiwgYXMgd2Ugd2VyZSBzdGFuZGluZyBieSwgdGhlIG1hbiBkcmV3IHVwIGhpcyBsZWcsIGFsbCBvZiB1cyBjcmllZCBvdXQsIGBUaGUgbWFuIGlzIGFsaXZlJzsgYW5kIHlvdSBzYWlkLCBgTGV0IGhpbSBiZSBhbGl2ZSBqdXN0IGFzIG11Y2ggYXMgaGUgcGxlYXNlcywgSSwgZm9yIG15IHBhcnQsIGFtIG5vdCBnb2luZyB0byBjYXJyeSBoaW0uJyBUaGVuIEkgc3RydWNrIHlvdTsgeW91ciBzdG9yeSBpcyB0cnVlOyBmb3IgaXQgbG9va2VkIHRvIG1lIGFzIGlmIHlvdSBrbmV3IHRoYXQgaGUgd2FzIGFsaXZlLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['5.8.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz7igJxXZWxsLCB3aGF0IG9mIHRoYXQs4oCdIHRoZSBmZWxsb3cgc2FpZDsg4oCcZGlkbid0IGhlIGRpZSBhbGwgdGhlIHNhbWUgYWZ0ZXIgSSBoYWQgc2hvd24gaGltIHRvIHlvdT/igJ0g4oCcV2h5LOKAnSBzYWlkIFhlbm9waG9uLCDigJxhbGwgb2YgdXMgYXJlIGxpa2V3aXNlIGdvaW5nIHRvIGRpZTsgYnV0IHNob3VsZCB3ZSBvbiB0aGF0IGFjY291bnQgYmUgYnVyaWVkIGFsaXZlP+KAnQo8L3RyYW5zbGF0aW9uPg=="
translation['5.8.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIHRoaXMgZmVsbG93LCBldmVyeWJvZHkgY3JpZWQgb3V0IHRoYXQgWGVub3Bob24gaGFkIGdpdmVuIGhpbSBmZXdlciBibG93cyB0aGFuIGhlIGRlc2VydmVkLiBUaGVuIGhlIGRpcmVjdGVkIHRoZSByZXN0IHRvIHN0YXRlIHRoZSByZWFzb24gd2h5IGVhY2ggb25lIG9mIHRoZW0gaGFkIGJlZW4gc3RydWNrLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.8.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgZmFpbGVkIHRvIHJpc2UsIGhlIHdlbnQgb24gaGltc2VsZjog4oCcSSBhZG1pdCwgc29sZGllcnMsIHRoYXQgSSBoYXZlIGluZGVlZCBzdHJ1Y2sgbWVuIGZvciBuZWdsZWN0IG9mIGRpc2NpcGxpbmUsIHRoZSBtZW4gd2hvIHdlcmUgY29udGVudCB0byBiZSBrZXB0IHNhZmUgYnkgeW91IHdobyBtYXJjaGVkIGluIGR1ZSBvcmRlciBhbmQgZm91Z2h0IHdoZXJldmVyIHRoZXJlIHdhcyBuZWVkLCB3aGlsZSB0aGV5IHRoZW1zZWx2ZXMgd291bGQgbGVhdmUgdGhlIHJhbmtzIGFuZCBydW4gb24gYWhlYWQgaW4gdGhlIGRlc2lyZSB0byBzZWN1cmUgcGx1bmRlciBhbmQgdG8gZW5qb3kgYW4gYWR2YW50YWdlIG92ZXIgeW91LiBGb3IgaWYgYWxsIG9mIHVzIGhhZCBiZWhhdmVkIGluIHRoaXMgd2F5LCBhbGwgb2YgdXMgYWxpa2Ugd291bGQgaGF2ZSBwZXJpc2hlZC4KPC90cmFuc2xhdGlvbj4="
translation['5.8.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BZ2Fpbiwgd2hlbiBhIG1hbiBiZWhhdmVkIGxpa2UgYSB3ZWFrbGluZyBhbmQgcmVmdXNlZCB0byBnZXQgdXAsIHByZWZlcnJpbmcgdG8gbGVhdmUgaGltc2VsZiBhIHByZXkgdG8gdGhlIGVuZW15LCBJIGRpZCBpbmRlZWQgc3RyaWtlIGhpbSBhbmQgdXNlIHZpb2xlbmNlIHRvIGNvbXBlbCBoaW0gdG8gZ28gb24uIEZvciBvbmNlIGR1cmluZyB0aGUgc2V2ZXJlIHdlYXRoZXIgSSBteXNlbGYgcmVtYWluZWQgc2VhdGVkIGZvciBxdWl0ZSBhIGxvbmcgdGltZSwgd2FpdGluZyBmb3Igc29tZSBwZW9wbGUgd2hvIHdlcmUgcGFja2luZyB1cCwgYW5kIEkgZGlzY292ZXJlZCB0aGF0IGl0IHdhcyBoYXJkIHdvcmsgdG8gZ2V0IHVwIGFuZCBzdHJldGNoIG15IGxlZ3MuCjwvdHJhbnNsYXRpb24+"
translation['5.8.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5IYXZpbmcgdGVzdGVkIHRoZSBtYXR0ZXIsIHRoZW4sIGluIG15IG93biBjYXNlLCBJIHVzZWQgYWZ0ZXIgdGhhdCB0byBkcml2ZSBvbiBhbnkgb3RoZXIgbWFuIHdob20gSSBtaWdodCBzZWUgc2l0dGluZyBkb3duIGFuZCBzaGlya2luZzsgZm9yIGdldHRpbmcgaW50byBtb3Rpb24gYW5kIGFjdGluZyBsaWtlIGEgbWFuIHByb2R1Y2VkIGEgY2VydGFpbiBhbW91bnQgb2Ygd2FybXRoIGFuZCBzdXBwbGVuZXNzLCB3aGlsZSBzaXR0aW5nIGFuZCBrZWVwaW5nIHF1aWV0IHRlbmRlZCwgYXMgSSBzYXcsIHRvIG1ha2UgdGhlIGJsb29kIGZyZWV6ZSBhbmQgdGhlIHRvZXMgcm90IG9mZiwganVzdCB0aGUgbWlzZm9ydHVuZXMgd2hpY2ggbWFueSBwZW9wbGUgc3VmZmVyZWQsIGFzIHlvdSBrbm93IGZvciB5b3Vyc2VsdmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.8.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5JbiBzdGlsbCBhbm90aGVyIGNhc2UsIHRoZSBtYW4sIHBlcmhhcHMsIHdobyBmZWxsIGJlaGluZCBzb21ld2hlcmUgb3V0IG9mIGluZG9sZW5jZSBhbmQgcHJldmVudGVkIGJvdGggeW91IGluIHRoZSB2YW4gYW5kIHVzIGluIHRoZSByZWFyIGZyb20gZ29pbmcgb24sIEkgc3RydWNrIHN1Y2ggYSBvbmUgd2l0aCB0aGUgZmlzdCBpbiBvcmRlciB0aGF0IHRoZSBlbmVteSBtaWdodCBub3Qgc3RyaWtlIGhpbSB3aXRoIHRoZSBsYW5jZS4KPC90cmFuc2xhdGlvbj4="
translation['5.8.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5JbmRlZWQsIHRoYXQgaXMgdGhlIHJlYXNvbiB3aHkgdGhlc2UgcGVvcGxlLCBoYXZpbmcgYmVlbiBzYXZlZCwgbm93IGhhdmUgaXQgaW4gdGhlaXIgcG93ZXIgdG8gb2J0YWluIHNhdGlzZmFjdGlvbiBmb3Igd2hhdGV2ZXIgdGhleSBzdWZmZXJlZCB1bmp1c3RseSBhdCBteSBoYW5kcy4gQnV0IGlmIHRoZXkgaGFkIGZhbGxlbiBpbnRvIHRoZSBoYW5kcyBvZiB0aGUgZW5lbXksIHdoYXQgc3VmZmVyaW5nIHdvdWxkIHRoZXkgaGF2ZSBleHBlcmllbmNlZCBzbyBncmVhdCB0aGF0IHRoZXkgd291bGQgbm93IGJlIGFza2luZyB0byBvYnRhaW4gc2F0aXNmYWN0aW9uIGZvciBpdD88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHNwZWFrZXIgaW1wbGllcyBpbiB0aGlzIHNhcmNhc3RpYyB3YXkgdGhhdCB0aGV5IHdvdWxkIGhhdmUgbWV0IHRoZWlyIGRlYXRoLCBhbmQgd291bGQgbm90IGJlIHRhbGtpbmcgbm93IGFib3V0IHNhdGlzZmFjdGlvbiBmb3IgdGhhdCBvciBhbnl0aGluZyBlbHNlLjwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['5.8.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTXkgZGVmZW5jZSzigJ0gaGUgY29udGludWVkLCDigJxpcyBzaW1wbGU6IGlmIGl0IHdhcyBmb3IgaGlzIGdvb2QgdGhhdCBJIHB1bmlzaGVkIGFueSBvbmUsIEkgdGhpbmsgSSBzaG91bGQgcmVuZGVyIHRoZSBzb3J0IG9mIGFjY291bnQgdGhhdCBwYXJlbnRzIHJlbmRlciB0byBzb25zIGFuZCB0ZWFjaGVycyB0byBwdXBpbHM7IGZvciB0aGF0IG1hdHRlciwgc3VyZ2VvbnMgYWxzbyBidXJuIGFuZCBjdXQgcGF0aWVudHMgZm9yIHRoZWlyIGdvb2Q7CjwvdHJhbnNsYXRpb24+"
translation['5.8.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5idXQgaWYgeW91IGJlbGlldmUgaXQgd2FzIG91dCBvZiB3YW50b25uZXNzIHRoYXQgSSBkaWQgdGhlc2UgdGhpbmdzLCB0YWtlIG5vdGUgdGhhdCBub3csIGJ5IHRoZSBibGVzc2luZyBvZiB0aGUgZ29kcywgSSBhbSBtb3JlIGNvbmZpZGVudCB0aGFuIEkgd2FzIHRoZW4gYW5kIHRoYXQgSSBhbSBib2xkZXIgbm93IHRoYW4gdGhlbiBhbmQgZHJpbmsgbW9yZSB3aW5lLCBidXQgbmV2ZXJ0aGVsZXNzIEkgc3RyaWtlIG5vIG1hbuKAlGZvciB0aGUgcmVhc29uIHRoYXQgSSBzZWUgeW91IGFyZSBpbiBjYWxtIHdhdGVycy4KPC90cmFuc2xhdGlvbj4="
translation['5.8.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBpdCBpcyBzdG9ybXkgd2VhdGhlciBhbmQgYSBoaWdoIHNlYSBpcyBydW5uaW5nLCBkbyB5b3Ugbm90IG9ic2VydmUgdGhhdCBldmVuIGZvciBhIG1lcmUgbm9kIHRoZSBsb29rb3V0IGdldHMgYW5ncnkgd2l0aCB0aGUgcGVvcGxlIGF0IHRoZSBwcm93IGFuZCB0aGUgaGVsbXNtYW4gYW5ncnkgd2l0aCB0aGUgcGVvcGxlIGF0IHRoZSBzdGVybj8gRm9yIGluIHN1Y2ggYSBzaXR1YXRpb24gZXZlbiBzbWFsbCBibHVuZGVycyBhcmUgZW5vdWdoIHRvIHJ1aW4gZXZlcnl0aGluZy4KPC90cmFuc2xhdGlvbj4="
translation['5.8.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgeW91IHJlbmRlcmVkIGp1ZGdtZW50IHlvdXJzZWx2ZXMgdGhhdCBJIHdhcyBqdXN0aWZpZWQgaW4gc3RyaWtpbmcgdGhvc2UgbWVuOyBmb3IgeW91IHN0b29kIGJ5LCB3aXRoIHN3b3Jkcywgbm90IGJhbGxvdHMsIGluIHlvdXIgaGFuZHMsIGFuZCBpdCB3YXMgd2l0aGluIHlvdXIgcG93ZXIgdG8gY29tZSB0byB0aGVpciBhaWQgaWYgeW91IGNob3NlOyBidXQsIGJ5IFpldXMsIHlvdSB3b3VsZCBuZWl0aGVyIGdpdmUgdGhvc2UgcGVvcGxlIGFpZCBub3Igd291bGQgeW91IGpvaW4gd2l0aCBtZSBpbiBzdHJpa2luZyBzdWNoIGFzIHZpb2xhdGVkIGRpc2NpcGxpbmUuCjwvdHJhbnNsYXRpb24+"
translation['5.8.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5Db25zZXF1ZW50bHkgeW91IGdhdmUgdGhlIGJhZCBhbW9uZyB0aGVtIGZyZWVkb20gdG8gYWN0IHdhbnRvbmx5IGJ5IHRodXMgbGV0dGluZyB0aGVtIGFsb25lLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxGb3IgSSB0aGluaywgaWYgeW91IGNhcmUgdG8gbG9vayBpbnRvIHRoZSBtYXR0ZXIsIHlvdSB3aWxsIGZpbmQgaXQgaXMgdGhlIHZlcnkgc2FtZSBtZW4gd2hvIHdlcmUgdGhlbiBtb3N0IGNvd2FyZGx5IHRoYXQgYXJlIG5vdyBtb3N0IHdhbnRvbi4KPC90cmFuc2xhdGlvbj4="
translation['5.8.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BdCBhbnkgcmF0ZSwgQm9pc2N1cyB0aGUgYm94ZXIsIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDEzOTkiPlRoZXNzYWx5PC9wbGFjZU5hbWU+LCB0aGVuIGZvdWdodCBoYXJkIHRvIGVzY2FwZSBjYXJyeWluZyBoaXMgc2hpZWxkLCBvbiB0aGUgcGxlYSB0aGF0IGhlIHdhcyB0aXJlZCwgYnV0IG5vdywgYXMgSSBoZWFyLCBoZSBoYXMgYWxyZWFkeSBzdHJpcHBlZCBvZmYgdGhlIGNsb3RoZXMgb2YgbWFueSBDb3R5b3JpdGVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.8.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5JZiB5b3UgYXJlIHdpc2UsIHRoZXJlZm9yZSwgeW91IHdpbGwgZG8gdG8gdGhpcyBmZWxsb3cgdGhlIG9wcG9zaXRlIG9mIHdoYXQgcGVvcGxlIGRvIHRvIGRvZ3M7IGZvciBkb2dzIHRoYXQgYXJlIHNhdmFnZSBhcmUgdGllZCB1cCBieSBkYXkgYW5kIGxldCBsb29zZSBieSBuaWdodCwgYnV0IHRoaXMgZmVsbG93LCBpZiB5b3UgYXJlIHdpc2UsIHlvdSB3aWxsIHRpZSB1cCBieSBuaWdodCBhbmQgbGV0IGxvb3NlIGJ5IGRheS4KPC90cmFuc2xhdGlvbj4="
translation['5.8.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IHJlYWxseSzigJ0gaGUgY29udGludWVkLCDigJxJIGFtIHN1cnByaXNlZCB0aGF0IGlmIGV2ZXIgSSBpbmN1cnJlZCB0aGUgaWxsLXdpbGwgb2YgYW55IG9uZSBhbW9uZyB5b3UsIHlvdSByZW1lbWJlciB0aGF0IGFuZCBhcmUgbm90IHNpbGVudCBhYm91dCBpdCwgd2hpbGUgaWYgSSBwcm90ZWN0ZWQgYW55IG9uZSBmcm9tIHRoZSBjb2xkLCBvciB3YXJkZWQgb2ZmIGFuIGVuZW15IGZyb20gaGltLCBvciBoZWxwZWQgdG8gcHJvdmlkZSBzb21ldGhpbmcgZm9yIGhpbSB3aGVuIGhlIHdhcyBzaWNrIG9yIGluIHdhbnQsIHRoZXNlIGFjdHMsIG9uIHRoZSBvdGhlciBoYW5kLCBhcmUgbm90IHJlbWVtYmVyZWQgYnkgYW55Ym9keTsgbm9yLCBhZ2FpbiwgaWYgSSBwcmFpc2VkIGEgbWFuIGZvciBhIGRlZWQgd2VsbCBkb25lLCBvciBob25vdXJlZCBhY2NvcmRpbmcgdG8gbXkgYWJpbGl0eSBhIG1hbiB3aG8gd2FzIGJyYXZlLCBkbyB5b3UgcmVtZW1iZXIgYW55IG9mIHRoZXNlIHRoaW5ncy4KPC90cmFuc2xhdGlvbj4="
translation['6.1.1'] = ""
translation['6.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gQ29yeWxhcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS41LjEyIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuNS4xMjwvYmlibD4gYW5kIG5vdGUuPC9ub3RlPiB3aG8gY2hhbmNlZCBhdCB0aGUgdGltZSB0byBiZSBydWxlciBvZiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDUuNS4xMiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjUuMTI8L2JpYmw+IGFuZCBub3RlLjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NzYwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY3NjAiPlBhcGhsYWdvbmlhPC9wbGFjZU5hbWU+LCBzZW50IGFtYmFzc2Fkb3JzIHRvIHRoZSBHcmVla3MsIHdpdGggaG9yc2VzIGFuZCBmaW5lIHJhaW1lbnQsIGJlYXJpbmcgd29yZCB0aGF0IENvcnlsYXMgd2FzIHJlYWR5IHRvIGRvIHRoZSBHcmVla3Mgbm8gd3JvbmcgYW5kIHRvIHN1ZmZlciBubyB3cm9uZyBhdCB0aGVpciBoYW5kcy4KPC90cmFuc2xhdGlvbj4="
translation['6.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBnZW5lcmFscyByZXBsaWVkIHRoYXQgdGhleSB3b3VsZCB0YWtlIGNvdW5zZWwgd2l0aCB0aGUgYXJteSBvbiB0aGlzIG1hdHRlciwgYnV0IG1lYW53aGlsZSB0aGV5IHJlY2VpdmVkIHRoZSBhbWJhc3NhZG9ycyBhcyB0aGVpciBndWVzdHMgYXQgZGlubmVyLCBpbnZpdGluZyBpbiBhbHNvIHN1Y2ggb2YgdGhlIG90aGVyIG1lbiBpbiB0aGUgYXJteSBhcyBzZWVtZWQgdG8gdGhlbSBiZXN0IGVudGl0bGVkIHRvIGFuIGludml0YXRpb24uCjwvdHJhbnNsYXRpb24+"
translation['6.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkJ5IHNhY3JpZmljaW5nIHNvbWUgb2YgdGhlIGNhdHRsZSB0aGV5IGhhZCBjYXB0dXJlZCBhbmQgYWxzbyBvdGhlciBhbmltYWxzIHRoZXkgcHJvdmlkZWQgYW4gYWRlcXVhdGUgZmVhc3QsIGFuZCB0aGV5IGRpbmVkIHJlY2xpbmluZyB1cG9uIGNvdWNoZXMgYW5kIGRyYW5rIGZyb20gY3VwcyBtYWRlIG9mIGhvcm4gd2hpY2ggdGhleSBmb3VuZCBpbiB0aGUgY291bnRyeS4KPC90cmFuc2xhdGlvbj4="
translation['6.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGV5IGhhZCBtYWRlIGxpYmF0aW9ucyBhbmQgc3VuZyB0aGUgcGFlYW4sIHR3byBUaHJhY2lhbnMgcm9zZSB1cCBmaXJzdCBhbmQgYmVnYW4gYSBkYW5jZSBpbiBmdWxsIGFybW91ciB0byB0aGUgbXVzaWMgb2YgYSBmbHV0ZSwgbGVhcGluZyBoaWdoIGFuZCBsaWdodGx5IGFuZCB1c2luZyB0aGVpciBzYWJyZXM7IGZpbmFsbHksIG9uZSBzdHJ1Y2sgdGhlIG90aGVyLCBhcyBldmVyeWJvZHkgdGhvdWdodCwgYW5kIHRoZSBzZWNvbmQgbWFuIGZlbGwsIGluIGEgcmF0aGVyIHNraWxmdWwgd2F5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGUgUGFwaGxhZ29uaWFucyBzZXQgdXAgYSBjcnkuIFRoZW4gdGhlIGZpcnN0IG1hbiBkZXNwb2lsZWQgdGhlIG90aGVyIG9mIGhpcyBhcm1zIGFuZCBtYXJjaGVkIG91dCBzaW5naW5nIHRoZSBTaXRhbGNhcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QSBUaHJhY2lhbiB3YXItc29uZywgYXBwYXJlbnRseSBjb21wb3NlZCBpbiBob25vdXIgb2YgYW4gZWFybHkga2luZyBuYW1lZCBTaXRhbGNhcy48L25vdGU+IHdoaWxlIG90aGVyIFRocmFjaWFucyBjYXJyaWVkIG9mZiB0aGUgZmFsbGVuIGRhbmNlciwgYXMgdGhvdWdoIGhlIHdlcmUgZGVhZDsgaW4gZmFjdCwgaGUgaGFkIG5vdCBiZWVuIGh1cnQgYXQgYWxsLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMgc29tZSBBZW5pYW5pYW5zIGFuZCBNYWduZXNpYW5zIGFyb3NlIGFuZCBkYW5jZWQgdW5kZXIgYXJtcyB0aGUgc28tY2FsbGVkIGNhcnBhZWEuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgZGFuY2Uga25vd24gdG8gdXMgZnJvbSB0aGlzIHBhc3NhZ2Ugb25seS48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['6.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBtYW5uZXIgb2YgdGhlIGRhbmNlIHdhcyB0aGlzOiBhIG1hbiBpcyBzb3dpbmcgYW5kIGRyaXZpbmcgYSB5b2tlIG9mIG94ZW4sIGhpcyBhcm1zIGxhaWQgYXQgb25lIHNpZGUsIGFuZCBoZSB0dXJucyBhYm91dCBmcmVxdWVudGx5IGFzIG9uZSBpbiBmZWFyOyBhIHJvYmJlciBhcHByb2FjaGVzOyBhcyBzb29uIGFzIHRoZSBzb3dlciBzZWVzIGhpbSBjb21pbmcsIGhlIHNuYXRjaGVzIHVwIGhpcyBhcm1zLCBnb2VzIHRvIG1lZXQgaGltLCBhbmQgZmlnaHRzIHdpdGggaGltIHRvIHNhdmUgaGlzIG94ZW4uIFRoZSB0d28gbWVuIGRvIGFsbCB0aGlzIGluIHJoeXRobSB0byB0aGUgbXVzaWMgb2YgdGhlIGZsdXRlLiBGaW5hbGx5LCB0aGUgcm9iYmVyIGJpbmRzIHRoZSBtYW4gYW5kIGRyaXZlcyBvZmYgdGhlIG94ZW47IG9yIHNvbWV0aW1lcyB0aGUgbWFzdGVyIG9mIHRoZSBveGVuIGJpbmRzIHRoZSByb2JiZXIsIGFuZCB0aGVuIGhlIHlva2VzIGhpbSBhbG9uZ3NpZGUgdGhlIG94ZW4sIGhpcyBoYW5kcyB0aWVkIGJlaGluZCBoaW0sIGFuZCBkcml2ZXMgb2ZmLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMgYSBNeXNpYW4gY2FtZSBpbiBjYXJyeWluZyBhIGxpZ2h0IHNoaWVsZCBpbiBlYWNoIGhhbmQsIGFuZCBhdCBvbmUgbW9tZW50IGluIGhpcyBkYW5jZSBoZSB3b3VsZCBnbyB0aHJvdWdoIGEgcGFudG9taW1lIGFzIHRob3VnaCB0d28gbWVuIHdlcmUgYXJyYXllZCBhZ2FpbnN0IGhpbSwgYWdhaW4gaGUgd291bGQgdXNlIGhpcyBzaGllbGRzIGFzIHRob3VnaCBhZ2FpbnN0IG9uZSBhbnRhZ29uaXN0LCBhbmQgYWdhaW4gaGUgd291bGQgd2hpcmwgYW5kIHRocm93IHNvbWVyc2F1bHRzIHdoaWxlIGhvbGRpbmcgdGhlIHNoaWVsZHMgaW4gaGlzIGhhbmRzLCBzbyB0aGF0IHRoZSBzcGVjdGFjbGUgd2FzIGEgZmluZSBvbmUuCjwvdHJhbnNsYXRpb24+"
translation['6.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5MYXN0bHksIGhlIGRhbmNlZCB0aGUgUGVyc2lhbiBkYW5jZSwgY2xhc2hpbmcgaGlzIHNoaWVsZHMgdG9nZXRoZXIgYW5kIGNyb3VjaGluZyBkb3duIGFuZCB0aGVuIHJpc2luZyB1cCBhZ2FpbjsgYW5kIGFsbCB0aGlzIGhlIGRpZCwga2VlcGluZyB0aW1lIHRvIHRoZSBtdXNpYyBvZiB0aGUgZmx1dGUuCjwvdHJhbnNsYXRpb24+"
translation['6.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciBoaW0gdGhlIE1hbnRpbmVhbnMgYW5kIHNvbWUgb2YgdGhlIG90aGVyIEFyY2FkaWFucyBhcm9zZSwgYXJyYXllZCBpbiB0aGUgZmluZXN0IGFybXMgYW5kIGFjY291dHJlbWVudHMgdGhleSBjb3VsZCBjb21tYW5kLCBhbmQgbWFyY2hlZCBpbiB0aW1lIHRvIHRoZSBhY2NvbXBhbmltZW50IG9mIGEgZmx1dGUgcGxheWluZyB0aGUgbWFydGlhbCByaHl0aG0gYW5kIHNhbmcgdGhlIHBhZWFuIGFuZCBkYW5jZWQsIGp1c3QgYXMgdGhlIEFyY2FkaWFucyBkbyBpbiB0aGVpciBmZXN0YWwgcHJvY2Vzc2lvbnMgaW4gaG9ub3VyIG9mIHRoZSBnb2RzLiBBbmQgdGhlIFBhcGhsYWdvbmlhbnMsIGFzIHRoZXkgbG9va2VkIG9uLCB0aG91Z2h0IGl0IG1vc3Qgc3RyYW5nZSB0aGF0IGFsbCB0aGUgZGFuY2VzIHdlcmUgdW5kZXIgYXJtcy4KPC90cmFuc2xhdGlvbj4="
translation['6.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gdGhlIE15c2lhbiwgc2VlaW5nIGhvdyBhc3RvdW5kZWQgdGhleSB3ZXJlLCBwZXJzdWFkZWQgb25lIG9mIHRoZSBBcmNhZGlhbnMgd2hvIGhhZCBhIGRhbmNpbmcgZ2lybCB0byBsZXQgaGltIGJyaW5nIGhlciBpbiwgYWZ0ZXIgZHJlc3NpbmcgaGVyIHVwIGluIHRoZSBmaW5lc3Qgd2F5IGhlIGNvdWxkIGFuZCBnaXZpbmcgaGVyIGEgbGlnaHQgc2hpZWxkLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgc2hlIGRhbmNlZCB0aGUgUHlycmhpYzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIGZhbW91cyB3YXItZGFuY2UuPC9ub3RlPiB3aXRoIGdyYWNlLiBUaGVuIHRoZXJlIHdhcyBncmVhdCBhcHBsYXVzZSwgYW5kIHRoZSBQYXBobGFnb25pYW5zIGFza2VkIHdoZXRoZXIgd29tZW4gYWxzbyBmb3VnaHQgYnkgdGhlaXIgc2lkZS4gQW5kIHRoZSBHcmVla3MgcmVwbGllZCB0aGF0IHRoZXNlIHdvbWVuIHdlcmUgcHJlY2lzZWx5IHRoZSBvbmVzIHdobyBwdXQgdGhlIEtpbmcgdG8gZmxpZ2h0IGZyb20gaGlzIGNhbXAuIFN1Y2ggd2FzIHRoZSBlbmQgb2YgdGhhdCBldmVuaW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhlIG5leHQgZGF5IHRoZXkgaW50cm9kdWNlZCB0aGUgYW1iYXNzYWRvcnMgdG8gdGhlIGFybXksIGFuZCB0aGUgc29sZGllcnMgcGFzc2VkIGEgcmVzb2x1dGlvbiB0byBkbyB0aGUgUGFwaGxhZ29uaWFucyBubyB3cm9uZyBhbmQgdG8gc3VmZmVyIG5vIHdyb25nIGF0IHRoZWlyIGhhbmRzLiBBZnRlciB0aGlzIHRoZSBhbWJhc3NhZG9ycyBkZXBhcnRlZCwgYW5kIHRoZSBHcmVla3MsIGluYXNtdWNoIGFzIGl0IHNlZW1lZCB0aGF0IHZlc3NlbHMgZW5vdWdoIHdlcmUgYXQgaGFuZCwgZW1iYXJrZWQgYW5kIHNhaWxlZCBmb3IgYSBkYXkgYW5kIGEgbmlnaHQgd2l0aCBhIGZhaXIgd2luZCwga2VlcGluZyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjc2MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2NzYwIj5QYXBobGFnb25pYTwvcGxhY2VOYW1lPiBvbiB0aGUgbGVmdC4KPC90cmFuc2xhdGlvbj4="
translation['6.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgc2Vjb25kIGRheSB0aGV5IHJlYWNoZWQgU2lub3BlLCBhbmQgY2FtZSB0byBhbmNob3IgYXQgSGFybWVuZSwgaW4gdGhlIHRlcnJpdG9yeSBvZiBTaW5vcGUuIFRoZSBTaW5vcGVhbnMgZHdlbGwsIGluZGVlZCwgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY3NjAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjc2MCI+UGFwaGxhZ29uaWE8L3BsYWNlTmFtZT4sIGJ1dCBhcmUgY29sb25pc3RzIG9mIHRoZSBNaWxlc2lhbnMuIEFuZCB0aGV5IHNlbnQgdG8gdGhlIEdyZWVrcywgYXMgZ2lmdHMgb2YgaG9zcGl0YWxpdHksIHRocmVlIHRob3VzYW5kIG1lZGltbmk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIG1lZGltbnVzID0gYWJvdXQgYSBidXNoZWwgYW5kIGEgaGFsZi48L25vdGU+IG9mIGJhcmxleSBtZWFsIGFuZCBmaWZ0ZWVuIGh1bmRyZWQgamFycyBvZiB3aW5lLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGVyZSBDaGVpcmlzb3BodXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4xLjMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS4xLjMtNDwvYmlibD4uPC9ub3RlPiBhbHNvIGNhbWUsIHdpdGggYSBtYW4tb2Ytd2FyLiBBbmQgdGhlIHNvbGRpZXJzIGV4cGVjdGVkIHRoYXQgaGUgaGFkIGJyb3VnaHQgdGhlbSBzb21ldGhpbmc7IGluIGZhY3QsIGhvd2V2ZXIsIGhlIGJyb3VnaHQgbm90aGluZywgc2F2ZSB0aGUgcmVwb3J0IHRoYXQgdGhlIGFkbWlyYWwgQW5heGliaXVzIGFuZCB0aGUgb3RoZXJzIGNvbW1lbmRlZCB0aGVtLCBhbmQgdGhhdCBBbmF4aWJpdXMgcHJvbWlzZWQgdGhhdCBpZiB0aGV5IGdvdCBvdXRzaWRlIHRoZSBFdXhpbmUsIHRoZXkgc2hvdWxkIGhhdmUgcmVndWxhciBwYXkuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4xLjMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS4xLjMtNDwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['6.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5IZXJlIGF0IEhhcm1lbmUgdGhlIHRyb29wcyByZW1haW5lZCBmb3IgZml2ZSBkYXlzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CeSB0aGlzIHRpbWUsIHNpbmNlIGl0IHNlZW1lZCB0aGF0IHRoZXkgd2VyZSBnZXR0aW5nIG5lYXIgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LCB0aGUgcXVlc3Rpb24gY2FtZSBpbnRvIHRoZWlyIG1pbmRzIG1vcmUgdGhhbiBiZWZvcmUgaG93IHRoZXkgbWlnaHQgcmVhY2ggaG9tZSB3aXRoIGEgbGl0dGxlIHNvbWV0aGluZyBpbiBoYW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGNhbWUgdG8gdGhlIGNvbmNsdXNpb24sIHRoZXJlZm9yZSwgdGhhdCBpZiB0aGV5IHNob3VsZCBjaG9vc2Ugb25lIGNvbW1hbmRlciwgdGhhdCBvbmUgbWFuIHdvdWxkIGJlIGFibGUgdG8gaGFuZGxlIHRoZSBhcm15IGJldHRlciwgd2hldGhlciBieSBuaWdodCBvciBkYXksIHRoYW4gYSBudW1iZXIgb2YgY29tbWFuZGVyc+KAlHRoYXQgaWYgdGhlcmUgc2hvdWxkIGJlIG5lZWQgb2YgY29uY2VhbG1lbnQsIGhlIHdvdWxkIGJlIGJldHRlciBhYmxlIHRvIGtlZXAgbWF0dGVycyBzZWNyZXQsIG9yIGFnYWluLCBpZiB0aGVyZSBzaG91bGQgYmUgbmVlZCBvZiBnZXR0aW5nIGFoZWFkIG9mIGFuIGFkdmVyc2FyeSwgaGUgd291bGQgYmUgbGVzcyBsaWtlbHkgdG8gYmUgdG9vIGxhdGU7IGZvciwgdGhvdWdodCB0aGUgc29sZGllcnMsIHRoZXJlIHdvdWxkIGJlIG5vIG5lZWQgb2YgY29uZmVyZW5jZXMgb2YgZ2VuZXJhbHMgd2l0aCBvbmUgYW5vdGhlciwgYnV0IHRoZSBwbGFuIHJlc29sdmVkIHVwb24gYnkgdGhlIG9uZSBtYW4gd291bGQgYmUgY2FycmllZCB0aHJvdWdoLCB3aGVyZWFzIGluIHRoZSBwYXN0IHRoZSBnZW5lcmFscyBoYWQgYWN0ZWQgaW4gYWxsIG1hdHRlcnMgaW4gYWNjb3JkYW5jZSB3aXRoIGEgbWFqb3JpdHkgdm90ZS4KPC90cmFuc2xhdGlvbj4="
translation['6.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgdGhleSB0aG91Z2h0IG92ZXIgdGhlc2UgdGhpbmdzIHRoZXkgdHVybmVkIHRvIFhlbm9waG9uOyB0aGUgY2FwdGFpbnMgY2FtZSB0byBoaW0gYW5kIHNhaWQgdGhhdCB0aGlzIHdhcyB0aGUgb3BpbmlvbiBvZiB0aGUgYXJteSwgYW5kIGVhY2ggb25lIG9mIHRoZW0sIHdpdGggbWFuaWZlc3RhdGlvbnMgb2YgZ29vZCB3aWxsLCB1cmdlZCBoaW0gdG8gdW5kZXJ0YWtlIHRoZSBjb21tYW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgWGVub3Bob24sIGhlIHdhcyBpbmNsaW5lZCBvbiBzb21lIGFjY291bnRzIHRvIGFjY2VwdCB0aGUgY29tbWFuZCwgZm9yIGhlIHRob3VnaHQgdGhhdCBpZiBoZSBkaWQgc28gdGhlIGdyZWF0ZXIgd291bGQgYmUgdGhlIGhvbm91ciBoZSB3b3VsZCBlbmpveSBhbW9uZyBoaXMgZnJpZW5kcyBhbmQgdGhlIGdyZWF0ZXIgaGlzIG5hbWUgd2hlbiBpdCBzaG91bGQgcmVhY2ggaGlzIGNpdHksIHdoaWxlLCBmdXJ0aGVybW9yZSwgaXQgbWlnaHQgY2hhbmNlIHRoYXQgaGUgY291bGQgYmUgdGhlIG1lYW5zIG9mIGFjY29tcGxpc2hpbmcgc29tZSBnb29kIHRoaW5nIGZvciB0aGUgYXJteS4KPC90cmFuc2xhdGlvbj4="
translation['6.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5TdWNoIGNvbnNpZGVyYXRpb25zLCB0aGVuLCByb3VzZWQgaW4gaGltIGFuIGVhcm5lc3QgZGVzaXJlIHRvIGJlY29tZSBzb2xlIGNvbW1hbmRlci4gT24gdGhlIG90aGVyIGhhbmQsIHdoZW4gaGUgcmVmbGVjdGVkIHRoYXQgbm8gbWFuIGNhbiBzZWUgY2xlYXJseSBob3cgdGhlIGZ1dHVyZSB3aWxsIHR1cm4gb3V0IGFuZCB0aGF0IGZvciB0aGlzIHJlYXNvbiB0aGVyZSB3YXMgZGFuZ2VyIHRoYXQgaGUgbWlnaHQgZXZlbiBsb3NlIHRoZSByZXB1dGF0aW9uIGhlIGhhZCBhbHJlYWR5IHdvbiwgaGUgd2FzIGRvdWJ0ZnVsLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+UXVpdGUgdW5hYmxlIGFzIGhlIHdhcyB0byBkZWNpZGUgdGhlIHF1ZXN0aW9uLCBpdCBzZWVtZWQgYmVzdCB0byBoaW0gdG8gY29uc3VsdCB0aGUgZ29kczsgYW5kIGhlIGFjY29yZGluZ2x5IGJyb3VnaHQgdHdvIHZpY3RpbXMgdG8gdGhlIGFsdGFyIGFuZCBwcm9jZWVkZWQgdG8gb2ZmZXIgc2FjcmlmaWNlIHRvIEtpbmcgWmV1cywgdGhlIHZlcnkgZ29kIHRoYXQgdGhlIG9yYWNsZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERlbHBoaSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRGVscGhpIj5EZWxwaGk8L3BsYWNlTmFtZT4gaGFkIHByZXNjcmliZWQgZm9yIGhpbTs8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy4xLjUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy4xLjU8L2JpYmw+IGZmLjwvbm90ZT4gYW5kIGl0IHdhcyBsaWtld2lzZSBmcm9tIHRoaXMgZ29kLCBhcyBoZSBiZWxpZXZlZCwgdGhhdCB0aGUgZHJlYW08YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDMuMS41IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuMS41PC9iaWJsPiBmZi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy4xLjExIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuMS4xMTwvYmlibD4gZi48L25vdGU+IGNhbWUgd2hpY2ggaGUgaGFkIGF0IHRoZSB0aW1lIHdoZW4gaGUgdG9vayB0aGUgZmlyc3Qgc3RlcHMgdG93YXJkIGFzc3VtaW5nIGEgc2hhcmUgaW4gdGhlIGNoYXJnZSBvZiB0aGUgYXJteS4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAzLjEuMTEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy4xLjExPC9iaWJsPiBmLjwvdHJhbnNsYXRpb24+"
translation['6.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5Nb3Jlb3ZlciwgaGUgcmVjYWxsZWQgdGhhdCB3aGVuIGhlIHdhcyBzZXR0aW5nIG91dCBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRXBoZXNvcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRXBoZXNvcyI+RXBoZXN1czwvcGxhY2VOYW1lPiB0byBiZSBpbnRyb2R1Y2VkIHRvIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDMuMS44IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuMS44PC9iaWJsPi48L25vdGU+IGFuIGVhZ2xlIHNjcmVhbWVkIHVwb24gaGlzIHJpZ2h0OyBpdCB3YXMgc2l0dGluZywgaG93ZXZlciwgYW5kIHRoZSBzb290aHNheWVyIHdobyB3YXMgY29uZHVjdGluZyBoaW0gc2FpZCB0aGF0IHdoaWxlIHRoZSBvbWVuIHdhcyBvbmUgc3VpdGVkIHRvIHRoZSBncmVhdCByYXRoZXIgdGhhbiB0byBhbiBvcmRpbmFyeSBwZXJzb24sIGFuZCB3aGlsZSBpdCBiZXRva2VuZWQgZ2xvcnksIGl0IG5ldmVydGhlbGVzcyBwb3J0ZW5kZWQgc3VmZmVyaW5nLCBmb3IgdGhlIHJlYXNvbiB0aGF0IG90aGVyIGJpcmRzIGFyZSBtb3N0IGFwdCB0byBhdHRhY2sgdGhlIGVhZ2xlIHdoZW4gaXQgaXMgc2l0dGluZzsgc3RpbGwsIGhlIHNhaWQsIHRoZSBvbWVuIGRpZCBub3QgYmV0b2tlbiBnYWluLCBmb3IgaXQgaXMgcmF0aGVyIHdoaWxlIHRoZSBlYWdsZSBpcyBvbiB0aGUgd2luZyB0aGF0IGl0IGdldHMgaXRzIGZvb2QuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy4xLjgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy4xLjg8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['6.1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5TbyBpdCB3YXMsIHRoZW4sIHRoYXQgWGVub3Bob24gbWFkZSBzYWNyaWZpY2UsIGFuZCB0aGUgZ29kIHNpZ25pZmllZCB0byBoaW0gcXVpdGUgY2xlYXJseSB0aGF0IGhlIHNob3VsZCBuZWl0aGVyIHN0cml2ZSBmb3IgdGhlIGNvbW1hbmQgbm9yIGFjY2VwdCBpdCBpbiBjYXNlIGhlIHNob3VsZCBiZSBjaG9zZW4uIFN1Y2ggd2FzIHRoZSBpc3N1ZSBvZiB0aGlzIG1hdHRlci4KPC90cmFuc2xhdGlvbj4="
translation['6.1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiB0aGUgYXJteSBjYW1lIHRvZ2V0aGVyLCBhbmQgYWxsIHRoZSBzcGVha2VycyB1cmdlZCB0aGF0IGEgc2luZ2xlIGNvbW1hbmRlciBiZSBjaG9zZW47IHdoZW4gdGhpcyBoYWQgYmVlbiByZXNvbHZlZCB1cG9uLCB0aGV5IHByb2NlZWRlZCB0byBub21pbmF0ZSBYZW5vcGhvbi4gQW5kIHdoZW4gaXQgc2VlbWVkIGNsZWFyIHRoYXQgdGhleSB3b3VsZCBlbGVjdCBoaW0gYXMgc29vbiBhcyB0aGUgcXVlc3Rpb24gc2hvdWxkIGJlIHB1dCB0byB2b3RlLCBoZSBhcm9zZSBhbmQgc3Bva2UgYXMgZm9sbG93czoKPC90cmFuc2xhdGlvbj4="
translation['6.1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSBhbSBoYXBweSwgc29sZGllcnMsIHNpbmNlIEkgYW0gYSBodW1hbiBiZWluZywgdG8gYmUgaG9ub3VyZWQgYnkgeW91LCBhbmQgSSBhbSBncmF0ZWZ1bCBhbHNvLCBhbmQgSSBwcmF5IHRoYXQgdGhlIGdvZHMgbWF5IGdyYW50IG1lIG9wcG9ydHVuaXR5IHRvIGJlIHRoZSBtZWFucyBvZiBicmluZ2luZyB5b3Ugc29tZSBiZW5lZml0OyBzdGlsbCwgSSB0aGluayB0aGF0IGZvciBtZSB0byBiZSBwcmVmZXJyZWQgYnkgeW91IGFzIGNvbW1hbmRlciB3aGVuIGEgTGFjZWRhZW1vbmlhbiBpcyBhdCBoYW5kLCBpcyBub3QgZXhwZWRpZW50IGZvciB5b3Us4oCUZm9yIHlvdSB3b3VsZCBiZSBsZXNzIGxpa2VseSBvbiB0aGlzIGFjY291bnQgdG8gb2J0YWluIGFueSBmYXZvdXIgeW91IG1pZ2h0IGRlc2lyZSBmcm9tIHRoZSBMYWNlZGFlbW9uaWFuc+KAlGFuZCBmb3IgbXlzZWxmLCBvbiB0aGUgb3RoZXIgaGFuZCwgSSBiZWxpZXZlIGl0IGlzIG5vdCBhbHRvZ2V0aGVyIHNhZmUuCjwvdHJhbnNsYXRpb24+"
translation['6.1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgSSBzZWUgdGhhdCB0aGUgTGFjZWRhZW1vbmlhbnMgZGlkIG5vdCBjZWFzZSB3YWdpbmcgd2FyIHVwb24gbXkgbmF0aXZlIHN0YXRlIHVudGlsIHRoZXkgaGFkIG1hZGUgYWxsIGhlciBjaXRpemVucyBhY2tub3dsZWRnZSB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyB3ZXJlIHRoZWlyIGxlYWRlcnMgYWxzby48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gMi4yLjIwIiB2YWxpZD0ieWVzIj5YZW4uIEhlbGwuIDIuMi4yMDwvYmlibD4uPC9ub3RlPgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEhlbGwuIDIuMi4yMCIgdmFsaWQ9InllcyI+WGVuLiBIZWxsLiAyLjIuMjA8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['6.1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQganVzdCBhcyBzb29uIGFzIHRoaXMgYWNrbm93bGVkZ21lbnQgaGFkIGJlZW4gbWFkZSwgdGhleSBzdHJhaWdodHdheSBjZWFzZWQgd2FnaW5nIHdhciBhbmQgbm8gbG9uZ2VyIGNvbnRpbnVlZCB0byBiZXNpZWdlIHRoZSBjaXR5LiBOb3cgaWYgSSwgYmVpbmcgYXdhcmUgb2YgdGhlc2UgdGhpbmdzLCBzaG91bGQgc2VlbSB0byBiZSB0cnlpbmcgdG8gbWFrZSB0aGVpciBhdXRob3JpdHkgbnVsbCBhbmQgdm9pZCB3aGVyZXZlciBJIGNvdWxkLCBJIHN1c3BlY3QgdGhhdCBJIG1pZ2h0IHZlcnkgc3BlZWRpbHkgYmUgYnJvdWdodCBiYWNrIHRvIHJlYXNvbiBvbiB0aGF0IHBvaW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5BcyB0byB5b3VyIG93biB0aG91Z2h0LCB0aGF0IHRoZXJlIHdvdWxkIGJlIGxlc3MgZmFjdGlvdXNuZXNzIHdpdGggb25lIGNvbW1hbmRlciB0aGFuIHdpdGggbWFueSwgYmUgd2VsbCBhc3N1cmVkIHRoYXQgaWYgeW91IGNob29zZSBhbm90aGVyLCB5b3Ugd2lsbCBub3QgZmluZCBtZSBhY3RpbmcgZmFjdGlvdXNseSzigJRmb3IgSSBiZWxpZXZlIHRoYXQgd2hlbiBhIG1hbiBlbmdhZ2VkIGluIHdhciBmYWN0aW91c2x5IG9wcG9zZXMgYSBjb21tYW5kZXIsIHRoYXQgbWFuIGlzIGZhY3Rpb3VzbHkgb3Bwb3NpbmcgaGlzIG93biBzYWZldHk7IGJ1dCBpZiB5b3UgY2hvb3NlIG1lLCBJIHNob3VsZCBub3QgYmUgc3VycHJpc2VkIGlmIHlvdSBzaG91bGQgZmluZCBzb21lIG9uZSBlbHNlIGZlZWxpbmcgYW5ncnkgYm90aCB3aXRoIHlvdSBhbmQgd2l0aCBteXNlbGYu4oCdCjwvdHJhbnNsYXRpb24+"
translation['6.1.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBoZSBoYWQgdGh1cyBzcG9rZW4sIGEgbXVjaCBsYXJnZXIgbnVtYmVyIG9mIHBlb3BsZSBhcm9zZSwgc2F5aW5nIHRoYXQgaGUgb3VnaHQgdG8gYmUgY29tbWFuZGVyLiBBbmQgQWdhc2lhcyB0aGUgU3R5bXBoYWxpYW4gc2FpZCB0aGF0IGl0IHdhcyByaWRpY3Vsb3VzIGlmIHRoZSBzaXR1YXRpb24gd2FzIGFzIFhlbm9waG9uIGRlc2NyaWJlZCBpdC4g4oCcV2lsbCB0aGUgTGFjZWRhZW1vbmlhbnMgYWxzbyBiZSBhbmdyeSzigJ0gaGUgc2FpZCwg4oCcaWYgZ3Vlc3RzIGF0IGRpbm5lciBjb21lIHRvZ2V0aGVyIGFuZCBmYWlsIHRvIGNob29zZSBhIExhY2VkYWVtb25pYW4gYXMgbWFzdGVyIG9mIHRoZSBmZWFzdD8gRm9yIGlmIHRoZSBtYXR0ZXIgc3RhbmRzIGluIHRoYXQgd2F5LCB3ZSBhcmUgbm90IGZyZWUgZXZlbiB0byBiZSBjYXB0YWlucywgaXQgd291bGQgc2VlbSwgYmVjYXVzZSB3ZSBhcmUgQXJjYWRpYW5zLuKAnSBUaGVyZXVwb24gdGhlIHNvbGRpZXJzIHJhaXNlZCBhIHNob3V0LCBzYXlpbmcgdGhhdCBBZ2FzaWFzIHdhcyBxdWl0ZSByaWdodC4KPC90cmFuc2xhdGlvbj4="
translation['6.1.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBYZW5vcGhvbiwgc2VlaW5nIHRoYXQgc29tZXRoaW5nIG1vcmUgd2FzIG5lZWRlZCwgY2FtZSBmb3J3YXJkIGFuZCBzcG9rZSBhZ2Fpbjog4oCcV2VsbCwgc29sZGllcnMs4oCdIGhlIHNhaWQsIOKAnHRoYXQgeW91IG1heSB1bmRlcnN0YW5kIHRoZSBtYXR0ZXIgZnVsbHkgSSBzd2VhciB0byB5b3UgYnkgYWxsIHRoZSBnb2RzIGFuZCBnb2RkZXNzZXMgdGhhdCBpbiB2ZXJ5IHRydXRoLCBzbyBzb29uIGFzIEkgYmVjYW1lIGF3YXJlIG9mIHlvdXIgaW50ZW50aW9uLCBJIG9mZmVyZWQgc2FjcmlmaWNlcyB0byBsZWFybiB3aGV0aGVyIGl0IHdhcyBiZXN0IGZvciB5b3UgdG8gZW50cnVzdCB0byBtZSB0aGlzIGNvbW1hbmQgYW5kIGZvciBtZSB0byB1bmRlcnRha2UgaXQ7IGFuZCB0aGUgZ29kcyBnYXZlIG1lIHN1Y2ggc2lnbnMgaW4gdGhlIHNhY3JpZmljZXMgdGhhdCBldmVuIGEgbGF5bWFuIGNvdWxkIHBlcmNlaXZlIHRoYXQgSSBtdXN0IHdpdGhob2xkIG15c2VsZiBmcm9tIGFjY2VwdGluZyB0aGUgc29sZSBjb21tYW5kLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VW5kZXIgdGhlc2UgY2lyY3Vtc3RhbmNlcywgdGhlbiwgdGhleSBjaG9zZSBDaGVpcmlzb3BodXMuIEFuZCBhZnRlciBiZWluZyBjaG9zZW4gQ2hlaXJpc29waHVzIGNhbWUgZm9yd2FyZCBhbmQgc3Bva2UgYXMgZm9sbG93czog4oCcV2VsbCwgc29sZGllcnMsIGJlIHN1cmUgb2YgdGhpcywgdGhhdCBJIGFsc28gc2hvdWxkIG5vdCBoYXZlIGFjdGVkIGZhY3Rpb3VzbHkgaWYgeW91IGhhZCBjaG9zZW4gYW5vdGhlcjsgYXMgZm9yIFhlbm9waG9uLCBob3dldmVyLOKAnSBoZSBjb250aW51ZWQsIOKAnHlvdSBkaWQgaGltIGEga2luZG5lc3MgYnkgbm90IGNob29zaW5nIGhpbTsgZm9yIGV2ZW4gbm93IERleGlwcHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDUuMS4xNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjEuMTU8L2JpYmw+Ljwvbm90ZT4gaGFzIGFscmVhZHkgYmVlbiBmYWxzZWx5IGFjY3VzaW5nIGhpbSwgYXMgZmFyIGFzIGhlIGNvdWxkLCB0byBBbmF4aWJpdXMsIGV2ZW4gdGhvdWdoIEkgdHJpZWQgaGFyZCB0byBzaWxlbmNlIGhpbS4gSGUgc2FpZCBoZSBiZWxpZXZlZCB0aGF0IFhlbm9waG9uIHdvdWxkIHJhdGhlciBzaGFyZSB0aGUgY29tbWFuZCBvZiBDbGVhcmNodXMnIGFybXkgd2l0aCBUaW1hc2lvbiwgYSBEYXJkYW5pYW4sIHRoYW4gd2l0aCBoaW1zZWxmLCBhIExhY29uaWFuLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDUuMS4xNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjEuMTU8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['6.1.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz7igJxIb3dldmVyLOKAnSBDaGVpcmlzb3BodXMgd2VudCBvbiwg4oCcc2luY2UgeW91IGhhdmUgY2hvc2VuIG1lLCBJIHNoYWxsIGVuZGVhdm91ciB0byByZW5kZXIgeW91IHdoYXRldmVyIHNlcnZpY2UgSSBjYW4uIEFuZCBkbyB5b3UgbWFrZSB5b3VyIHByZXBhcmF0aW9ucyB0byBwdXQgdG8gc2VhIHRvLW1vcnJvdyBpZiBpdCBiZSBzYWlsaW5nIHdlYXRoZXIuIFRoZSB2b3lhZ2Ugd2lsbCBiZSB0byBIZXJhY2xlaWE7IGV2ZXJ5IG9uZSBvZiB1cywgdGhlcmVmb3JlLCBtdXN0IHRyeSB0byBjb21lIHRvIGxhbmQgdGhlcmU7IGFuZCB3ZSBzaGFsbCB0YWtlIGNvdW5zZWwgYWJvdXQgb3VyIGZ1cnRoZXIgZG9pbmdzIHdoZW4gd2UgaGF2ZSBhcnJpdmVkIHRoZXJlLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbiB0aGUgbmV4dCBkYXkgdGhleSBzZXQgc2FpbCBmcm9tIFNpbm9wZSBhbmQgdm95YWdlZCBmb3IgdHdvIGRheXMgd2l0aCBhIGZhaXIgd2luZCBhbG9uZyB0aGUgY29hc3QuIEFuZCBjb3Vyc2luZyBhbG9uZyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHN0YXRlbWVudHMgaGVyZSBjb250YWluZWQgYXJlIGdlb2dyYXBoaWNhbGx5IGltcG9zc2libGUsIGFuZCB0aGUgcGFzc2FnZSBpcyByZWdhcmRlZCBieSBlZGQuIGdlbmVyYWxseSBhcyBhbiBpbnRlcnBvbGF0aW9uLjwvbm90ZT4gW3RoZXkgc2F3IEphc29uJ3MgQ2FwZSwgd2hlcmUgdGhlIEFyZ28gaXMgc2FpZCB0byBoYXZlIGNvbWUgdG8gYW5jaG9yLCBhbmQgdGhlIG1vdXRocyBvZiB0aGUgcml2ZXJzLCBmaXJzdCB0aGUgVGhlcm1vZG9uLCB0aGVuIHRoZSBJcmlzLCB0aGlyZCB0aGUgSGFseXMsIGFuZCBhZnRlciB0aGF0IHRoZSBQYXJ0aGVuaXVzOyBhbmQgYWZ0ZXIgdGhleSBoYWQgcGFzc2VkIHRoaXMgcml2ZXJddGhleSBhcnJpdmVkIGF0IEhlcmFjbGVpYSwgYSBHcmVlayBjaXR5IGFuZCBhIGNvbG9ueSBvZiB0aGUgTWVnYXJpYW5zLCBzaXR1YXRlZCBpbiB0aGUgdGVycml0b3J5IG9mIHRoZSBNYXJpYW5keW5pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGV5IGNhbWUgdG8gYW5jaG9yIGFsb25nc2lkZSB0aGUgQWNoZXJ1c2lhbiBDaGVyc29uZXNlLCB3aGVyZSBIZXJhY2xlcyBpcyBzYWlkIHRvIGhhdmUgZGVzY2VuZGVkIHRvIEhhZGVzIGFmdGVyIHRoZSBkb2cgQ2VyYmVydXMsIGF0IGEgc3BvdCB3aGVyZSB0aGV5IG5vdyBzaG93IHRoZSBtYXJrcyBvZiBoaXMgZGVzY2VudCwgcmVhY2hpbmcgdG8gYSBkZXB0aCBvZiBtb3JlIHRoYW4gdHdvIHN0YWRpYS4KPC90cmFuc2xhdGlvbj4="
translation['6.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkhlcmUgdGhlIEhlcmFjbGVvdHMgc2VudCB0byB0aGUgR3JlZWtzLCBhcyBnaWZ0cyBvZiBob3NwaXRhbGl0eSwgdGhyZWUgdGhvdXNhbmQgbWVkaW1uaSBvZiBiYXJsZXkgbWVhbCwgdHdvIHRob3VzYW5kIGphcnMgb2Ygd2luZSwgdHdlbnR5IGNhdHRsZSwgYW5kIGEgaHVuZHJlZCBzaGVlcC4gQW5kIGluIHRoaXMgcGxhY2UgdGhlcmUgZmxvd3MgdGhyb3VnaCB0aGUgcGxhaW4gYSByaXZlciBuYW1lZCB0aGUgTHljdXMsIGFib3V0IHR3byBwbGV0aHJhIGluIHdpZHRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuIHRoZSBzb2xkaWVycyBnYXRoZXJlZCB0b2dldGhlciBhbmQgcHJvY2VlZGVkIHRvIHRha2UgY291bnNlbCBhYm91dCB0aGUgcmVtYWluZGVyIG9mIHRoZSBqb3VybmV5LCB0aGF0IGlzLCB3aGV0aGVyIHRoZXkgaGFkIGJldHRlciBnbyBvbiBmcm9tIHRoZSBFdXhpbmUgYnkgbGFuZCBvciBieSBzZWEuIEFuZCBMeWNvbiB0aGUgQWNoYWVhbiByb3NlIGFuZCBzYWlkOiDigJxJIGFtIGFzdG9uaXNoZWQsIHNvbGRpZXJzLCB0aGF0IHRoZSBnZW5lcmFscyBkbyBub3QgZW5kZWF2b3VyIHRvIHN1cHBseSB1cyB3aXRoIG1vbmV5IHRvIGJ1eSBwcm92aXNpb25zOyBmb3Igb3VyIGdpZnRzIG9mIGhvc3BpdGFsaXR5IHdpbGwgbm90IG1ha2UgdGhyZWUgZGF5cycgcmF0aW9ucyBmb3IgdGhlIGFybXk7IGFuZCB0aGVyZSBpcyBubyBwbGFjZSzigJ0gc2FpZCBoZSwg4oCcZnJvbSB3aGljaCB3ZSBjYW4gcHJvY3VyZSBwcm92aXNpb25zIGJlZm9yZSBiZWdpbm5pbmcgb3VyIGpvdXJuZXkuIEkgbW92ZSwgdGhlcmVmb3JlLCB0aGF0IHdlIGRlbWFuZCBvZiB0aGUgSGVyYWNsZW90cyBub3QgbGVzcyB0aGFuIHRocmVlIHRob3VzYW5kIEN5emljZW5lc+KAneKAlDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gbm90ZSBvbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDUuNi4yMyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjYuMjM8L2JpYmw+Ljwvbm90ZT4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjYuMjMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS42LjIzPC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['6.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPmFub3RoZXIgbWFuIHNhaWQsIG5vdCBsZXNzIHRoYW4gdGVuIHRob3VzYW5k4oCU4oCcYW5kIHRoYXQgd2UgY2hvb3NlIGFtYmFzc2Fkb3JzIHRoaXMgdmVyeSBtb21lbnQsIHdoaWxlIHdlIGFyZSBpbiBzZXNzaW9uIGhlcmUsIHNlbmQgdGhlbSB0byB0aGUgY2l0eSwgaGVhciB3aGF0ZXZlciByZXBvcnQgdGhleSBtYXkgYnJpbmcgYmFjaywgYW5kIHRha2UgY291bnNlbCBpbiB0aGUgbGlnaHQgb2YgdGhhdC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['6.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJldXBvbiB0aGV5IHdlbnQgdG8gbm9taW5hdGluZyBhbWJhc3NhZG9ycywgZmlyc3QgQ2hlaXJpc29waHVzLCBiZWNhdXNlIGhlIGhhZCBiZWVuIGNob3NlbiBjb21tYW5kZXIsIGFuZCBzb21lIG5vbWluYXRlZCBYZW5vcGhvbiBhbHNvLiBCb3RoIG1lbiwgaG93ZXZlciwgb2ZmZXJlZCB2aWdvcm91cyByZXNpc3RhbmNlOyBmb3IgYm90aCBoZWxkIHRoZSBzYW1lIHZpZXfigJR0aGF0IHRoZXkgb3VnaHQgbm90IHRvIGNvZXJjZSBhIGZyaWVuZGx5IGNpdHkgb2YgR3JlZWtzIGludG8gZ2l2aW5nIHdoYXQgdGhleSBkaWQgbm90IG9mZmVyIG9mIHRoZWlyIG93biBhY2NvcmQuCjwvdHJhbnNsYXRpb24+"
translation['6.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFzIHRoZXNlIHR3byBzZWVtZWQgZGlzaW5jbGluZWQgdG8gYWN0LCB0aGV5IHNlbnQgTHljb24gdGhlIEFjaGFlYW4sIENhbGxpbWFjaHVzIHRoZSBQYXJyaGFzaWFuLCBhbmQgQWdhc2lhcyB0aGUgU3R5bXBoYWxpYW4uIFRoZXNlIG1lbiB3ZW50IGFuZCBwdXQgYmVmb3JlIHRoZSBIZXJhY2xlb3RzIHRoZSByZXNvbHV0aW9ucyBhZG9wdGVkIGJ5IHRoZSBhcm15OyBhbmQgTHljb24sIHNvIHRoZSByZXBvcnQgcmFuLCBldmVuIGFkZGVkIHRocmVhdHMsIGluIGNhc2UgdGhleSBzaG91bGQgcmVmdXNlIGNvbXBsaWFuY2UuCjwvdHJhbnNsYXRpb24+"
translation['6.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIGhlYXJpbmcgdGhlIGFtYmFzc2Fkb3JzLCB0aGUgSGVyYWNsZW90cyBzYWlkIHRoYXQgdGhleSB3b3VsZCBjb25zaWRlciB0aGUgbWF0dGVyOyBhbmQgaW1tZWRpYXRlbHkgdGhleSBzZXQgYWJvdXQgZ2F0aGVyaW5nIHRoZWlyIHByb3BlcnR5IGZyb20gdGhlIGNvdW50cnkgYW5kIG1vdmVkIHRoZSBtYXJrZXQgd2l0aGluIHRoZSB3YWxsczsgbWVhbndoaWxlIHRoZSBnYXRlcyBoYWQgYmVlbiBjbG9zZWQgYW5kIGFybXMgd2VyZSB0byBiZSBzZWVuIHVwb24gdGhlIHdhbGxzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZXVwb24gdGhvc2Ugd2hvIGhhZCBicm91Z2h0IGFib3V0IHRoaXMgYWdpdGF0aW9uIGFjY3VzZWQgdGhlIGdlbmVyYWxzIG9mIHNwb2lsaW5nIHRoZWlyIHVuZGVydGFraW5nOyBhbmQgdGhlIEFyY2FkaWFucyBhbmQgQWNoYWVhbnMgcHJvY2VlZGVkIHRvIGJhbmQgdGhlbXNlbHZlcyB0b2dldGhlciwgdW5kZXIgdGhlIGxlYWRlcnNoaXAgcGFydGljdWxhcmx5IG9mIENhbGxpbWFjaHVzIHRoZSBQYXJyaGFzaWFuIGFuZCBMeWNvbiB0aGUgQWNoYWVhbi4KPC90cmFuc2xhdGlvbj4="
translation['6.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVpciB3b3JkcyB3ZXJlIHRvIHRoaXMgZWZmZWN0LCB0aGF0IGl0IHdhcyBzaGFtZWZ1bCB0aGF0IFBlbG9wb25uZXNpYW5zIHNob3VsZCBiZSB1bmRlciB0aGUgY29tbWFuZCBvZiBhbiBBdGhlbmlhbiBhbmQgYSBMYWNlZGFlbW9uaWFuIHdobyBjb250cmlidXRlZCBubyB0cm9vcHMgdG8gdGhlIGFybXksIGFuZCB0aGF0IHRoZSBoYXJkc2hpcHMgc2hvdWxkIGZhbGwgdG8gdGhlbXNlbHZlcyBhbmQgdGhlIGdhaW5zIHRvIG90aGVycywgYWxsIGRlc3BpdGUgdGhlIGZhY3QgdGhhdCB0aGUgcHJlc2VydmF0aW9uIG9mIHRoZSBhcm15IHdhcyB0aGVpciBhY2hpZXZlbWVudDsgZm9yIGl0IHdhcywgdGhleSBzYWlkLCB0aGUgQXJjYWRpYW5zIGFuZCBBY2hhZWFucyB3aG8gaGFkIGFjaGlldmVkIHRoaXMgcmVzdWx0LCBhbmQgdGhlIHJlc3Qgb2YgdGhlIGFybXkgYW1vdW50ZWQgdG8gbm90aGluZyAoaW4gdHJ1dGggbW9yZSB0aGFuIGhhbGYgdGhlIGFybXkgZGlkIGNvbnNpc3Qgb2YgQXJjYWRpYW5zIGFuZCBBY2hhZWFucyk7CjwvdHJhbnNsYXRpb24+"
translation['6.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5pZiB0aGV5IHdlcmUgd2lzZSwgdGhlcmVmb3JlLCB0aGV5IHdvdWxkIGJhbmQgdG9nZXRoZXIgYnkgdGhlbXNlbHZlcywgY2hvb3NlIGdlbmVyYWxzIGZyb20gdGhlaXIgb3duIG51bWJlciwgbWFrZSB0aGUgam91cm5leSBieSB0aGVtc2VsdmVzLCBhbmQgdHJ5IHRvIGdldCBhIGxpdHRsZSBnb29kIG91dCBvZiBpdC4KPC90cmFuc2xhdGlvbj4="
translation['6.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIGNvdXJzZSB3YXMgcmVzb2x2ZWQgdXBvbiwgYW5kIHdoYXRldmVyIEFyY2FkaWFucyBvciBBY2hhZWFucyB0aGVyZSB3ZXJlIHdpdGggQ2hlaXJpc29waHVzIGFuZCBYZW5vcGhvbiBsZWZ0IHRoZXNlIGNvbW1hbmRlcnMgYW5kIGpvaW5lZCBmb3JjZXMsIGFuZCB0aGV5IGNob3NlIHRlbiBnZW5lcmFscyBmcm9tIHRoZWlyIG93biBudW1iZXIsIGRlY3JlZWluZyB0aGF0IHRoZXNlIHRlbiB3ZXJlIHRvIGRvIHdoYXRldmVyIG1pZ2h0IGJlIGRlY2lkZWQgdXBvbiBieSB2b3RlIG9mIHRoZSBtYWpvcml0eS4gU28gaXQgd2FzIHRoYXQgdGhlIHN1cHJlbWUgY29tbWFuZCBvZiBDaGVpcmlzb3BodXMgY2FtZSB0byBhbiBlbmQgdGhlbiBhbmQgdGhlcmUsIG9uIHRoZSBzaXh0aCBvciBzZXZlbnRoIGRheSBmcm9tIHRoZSBkYXkgb2YgaGlzIGVsZWN0aW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+WGVub3Bob24sIGhvd2V2ZXIsIHdhcyBkZXNpcm91cyBvZiBtYWtpbmcgdGhlIGpvdXJuZXkgaW4gY29tcGFueSB3aXRoIENoZWlyaXNvcGh1cywgYmVsaWV2aW5nIHRoYXQgdGhpcyB3YXMgYSBzYWZlciBwbGFuIHRoYW4gZm9yIGVhY2ggb2YgdGhlbSB0byBwcm9jZWVkIGluZGVwZW5kZW50bHk7IGJ1dCBOZW9uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkNoZWlyaXNvcGh1cycgbGlldXRlbmFudCAoY3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS42LjM2IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuNi4zNjwvYmlibD4pLjwvbm90ZT4gdXJnZWQgaGltIHRvIGdvIGJ5IGhpbXNlbGYsIGZvciBoZSBoYWQgaGVhcmQgZnJvbSBDaGVpcmlzb3BodXMgdGhhdCBDbGVhbmRlciwgdGhlIExhY2VkYWVtb25pYW4gZ292ZXJub3IgYXQgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjYuMzYiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS42LjM2PC9iaWJsPikuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxCeXphbnRpdW0iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEJ5emFudGl1bSI+Qnl6YW50aXVtPC9wbGFjZU5hbWU+LCBoYWQgc2FpZCBoZSB3YXMgY29taW5nIHRvIENhbHBlIEhhcmJvdXIgd2l0aCB0cmlyZW1lczsKPC90cmFuc2xhdGlvbj4="
translation['6.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5pdCB3YXMgTmVvbidzIHB1cnBvc2UsIHRoZW4sIHRoYXQgbm8gb25lIGVsc2Ugc2hvdWxkIGdldCBhIHNoYXJlIGluIHRoaXMgb3Bwb3J0dW5pdHksIGJ1dCB0aGF0IGhlIGhpbXNlbGYgYW5kIENoZWlyaXNvcGh1cyBhbmQgdGhlaXIgc29sZGllcnMgc2hvdWxkIHNhaWwgYXdheSB1cG9uIHRoZSB0cmlyZW1lcywgYW5kIHRoaXMgd2FzIHRoZSByZWFzb24gZm9yIGhpcyBhZHZpY2UgdG8gWGVub3Bob24uIEFzIGZvciBDaGVpcmlzb3BodXMsIGhlIHdhcyBzbyBkZXNwb25kZW50IG92ZXIgd2hhdCBoYWQgaGFwcGVuZWQgYW5kLCBiZXNpZGVzLCBmZWx0IHN1Y2ggaGF0cmVkIHRvd2FyZCB0aGUgYXJteSBmb3IgaXRzIGFjdGlvbiwgdGhhdCBoZSBhbGxvd2VkIE5lb24gdG8gZG8gd2hhdGV2ZXIgaGUgY2hvc2UuCjwvdHJhbnNsYXRpb24+"
translation['6.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYSB0aW1lLCBpbmRlZWQsIFhlbm9waG9uIGRpZCB0cnkgdG8gZ2V0IGNsZWFyIG9mIHRoZSBhcm15IGFuZCBzYWlsIGF3YXkgaG9tZTsgYnV0IHdoZW4gaGUgc2FjcmlmaWNlZCB0byBIZXJhY2xlcyB0aGUgTGVhZGVyLCBjb25zdWx0aW5nIGhpbSBhcyB0byB3aGV0aGVyIGl0IHdhcyBiZXR0ZXIgYW5kIG1vcmUgcHJvcGVyIGZvciBoaW0gdG8gY29udGludWUgdGhlIGpvdXJuZXkgd2l0aCBzdWNoIG9mIHRoZSBzb2xkaWVycyBhcyBoYWQgcmVtYWluZWQgd2l0aCBoaW0sIG9yIHRvIGJlIHJpZCBvZiB0aGVtLCB0aGUgZ29kIGluZGljYXRlZCB0byBoaW0gYnkgdGhlIHNhY3JpZmljZXMgdGhhdCBoZSBzaG91bGQgc3RheSB3aXRoIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['6.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaHVzIHRoZSBhcm15IHdhcyBzcGxpdCBpbnRvIHRocmVlIHBhcnRzOiBmaXJzdCwgdGhlIEFyY2FkaWFucyBhbmQgQWNoYWVhbnMsIG1vcmUgdGhhbiBmb3VyIHRob3VzYW5kIGluIG51bWJlciwgYWxsIGhvcGxpdGVzOyBzZWNvbmRseSwgQ2hlaXJpc29waHVzJyB0cm9vcHMsIHRvIHRoZSBudW1iZXIgb2YgZm91cnRlZW4gaHVuZHJlZCBob3BsaXRlcyBhbmQgc2V2ZW4gaHVuZHJlZCBwZWx0YXN0cywgdGhlIGxhdHRlciBiZWluZyBDbGVhcmNodXMnIFRocmFjaWFuczsgYW5kIHRoaXJkbHksIFhlbm9waG9uJ3MgZm9yY2UsIG51bWJlcmluZyBzZXZlbnRlZW4gaHVuZHJlZCBob3BsaXRlcyBhbmQgdGhyZWUgaHVuZHJlZCBwZWx0YXN0czsgWGVub3Bob24gYWxvbmUsIGhvd2V2ZXIsIGhhZCBob3JzZW1lbiwgdG8gdGhlIG51bWJlciBvZiBhYm91dCBmb3J0eS4KPC90cmFuc2xhdGlvbj4="
translation['6.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIEFyY2FkaWFucywgbWFuYWdpbmcgdG8gb2J0YWluIHNoaXBzIGZyb20gdGhlIEhlcmFjbGVvdHMsIHNldCBzYWlsIGZpcnN0LCB3aXRoIHRoZSBpbnRlbnRpb24gb2YgbWFraW5nIGFuIHVuZXhwZWN0ZWQgZGVzY2VudCB1cG9uIHRoZSBCaXRoeW5pYW5zIGFuZCB0aHVzIHNlY3VyaW5nIHRoZSBncmVhdGVzdCBwb3NzaWJsZSBhbW91bnQgb2YgYm9vdHk7IGFuZCB0aGV5IGRpc2VtYmFya2VkIGF0IENhbHBlIEhhcmJvdXIsIGFib3V0IG1pZHdheSBvZiB0aGUgVGhyYWNpYW4gY29hc3QuCjwvdHJhbnNsYXRpb24+"
translation['6.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgQ2hlaXJpc29waHVzIHdlbnQgYnkgbGFuZCBmcm9tIHRoZSB2ZXJ5IGJlZ2lubmluZyBvZiBoaXMgam91cm5leSBmcm9tIHRoZSBjaXR5IG9mIHRoZSBIZXJhY2xlb3RzLCB0cmF2ZWxsaW5nIGFjcm9zcyBjb3VudHJ5OyB3aGVuLCBob3dldmVyLCBoZSBoYWQgZW50ZXJlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjc1NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNzU2Ij5UaHJhY2U8L3BsYWNlTmFtZT4sIGhlIHByb2NlZWRlZCBhbG9uZyB0aGUgY29hc3QsIGZvciB0aGUgcmVhc29uIHRoYXQgaGUgd2FzIGlsbC4KPC90cmFuc2xhdGlvbj4="
translation['6.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5YZW5vcGhvbiwgZmluYWxseSwgdG9vayBzaGlwcywgZGlzZW1iYXJrZWQgYXQgdGhlIGJvdW5kYXJpZXMgc2VwYXJhdGluZyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjc1NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNzU2Ij5UaHJhY2U8L3BsYWNlTmFtZT4gYW5kIHRoZSB0ZXJyaXRvcnkgb2YgSGVyYWNsZWlhLCBhbmQgcHVyc3VlZCBoaXMgd2F5IHRocm91Z2ggdGhlIGJhY2sgY291bnRyeS4KPC90cmFuc2xhdGlvbj4="
translation['6.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZm9ydHVuZXMgb2YgdGhlIHNldmVyYWwgZGl2aXNpb25zIHdlcmUgYXMgZm9sbG93cy4gVGhlIEFyY2FkaWFucyBhZnRlciBkaXNlbWJhcmtpbmcgYnkgbmlnaHQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDUyMzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwNTIzNCI+Q2FscGU8L3BsYWNlTmFtZT4gSGFyYm91ciBwcm9jZWVkZWQgdG8gdGhlIGZpcnN0IHZpbGxhZ2VzLCBhYm91dCB0aGlydHkgc3RhZGlhIGZyb20gdGhlIHNlYS4gV2hlbiBkYXlsaWdodCBjYW1lLCBlYWNoIGdlbmVyYWwgbGVkIGhpcyBvd24gY29tcGFueSBhZ2FpbnN0IGEgdmlsbGFnZSwgZXhjZXB0IHRoYXQgd2hlcmUgYSB2aWxsYWdlIHNlZW1lZCB1bnVzdWFsbHkgbGFyZ2UsIHRoZSBnZW5lcmFscyBjb21iaW5lZCB0d28gY29tcGFuaWVzIGZvciB0aGUgYXR0YWNrIHVwb24gaXQuCjwvdHJhbnNsYXRpb24+"
translation['6.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZXkgYWxzbyBmaXhlZCB1cG9uIGEgaGlsbCBhcyB0aGUgcGxhY2Ugd2hlcmUgYWxsIHRoZSB0cm9vcHMgd2VyZSBhZnRlcndhcmRzIHRvIGdhdGhlcjsgYW5kIHNpbmNlIHRoZWlyIG9uc2V0IHdhcyB1bmV4cGVjdGVkLCB0aGV5IHRvb2sgbWFueSBjYXB0aXZlcyBhbmQgd2VyZSBpbiBhIGZhaXIgd2F5IHRvIHNlY3VyZSBhIGxhcmdlIG51bWJlciBvZiBzaGVlcC4KPC90cmFuc2xhdGlvbj4="
translation['6.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBUaHJhY2lhbnMgd2hvIGVzY2FwZWQgdGhlbSwgaG93ZXZlciwgYmVnYW4gdG8gZ2F0aGVy4oCUYW5kIG1hbnkgaGFkIGVzY2FwZWQsIGluYXNtdWNoIGFzIHRoZXkgd2VyZSBsaWdodCB0cm9vcHMgYXMgYWdhaW5zdCBob3BsaXRlcywgZnJvbSB0aGUgdmVyeSBoYW5kcyBvZiB0aGUgQXJjYWRpYW5zLiBXaGVuIHRoZXkgaGFkIGNvbWUgdG9nZXRoZXIgaW4gYSBib2R5LCB0aGV5IGZpcnN0IGF0dGFja2VkIHRoZSBjb21wYW55IHVuZGVyIFNtaWNyZXMsIG9uZSBvZiB0aGUgQXJjYWRpYW4gZ2VuZXJhbHMsIGFzIGl0IHdhcyBhbHJlYWR5IHdpdGhkcmF3aW5nIHRvIHRoZSBhcHBvaW50ZWQgcGxhY2Ugd2l0aCBhIGdyZWF0IHF1YW50aXR5IG9mIGJvb3R5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkZvciBhIHdoaWxlIHRoZSBHcmVla3MgZm91Z2h0IGFzIHRoZXkgbWFyY2hlZCwgYnV0IGF0IHRoZSBjcm9zc2luZyBvZiBhIGdvcmdlIHRoZSBUaHJhY2lhbnMgcHV0IHRoZW0gdG8gcm91dCwgYW5kIHRoZXkga2lsbGVkIG5vdCBvbmx5IFNtaWNyZXMgaGltc2VsZiwgYnV0IHRoZSByZXN0IG9mIHRoZSBjb21wYW55IHRvIGEgbWFuOyBpbiBhbm90aGVyIG9mIHRoZSBjb21wYW5pZXMgYmVsb25naW5nIHRvIHRoZSB0ZW4gZ2VuZXJhbHMsIHRoZSBvbmUgY29tbWFuZGVkIGJ5IEhlZ2VzYW5kZXIsIHRoZXkgbGVmdCBvbmx5IGVpZ2h0IG1lbiBhbGl2ZSwgSGVnZXNhbmRlciBoaW1zZWxmIGJlaW5nIG9uZSBvZiB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgb3RoZXIgY29tcGFuaWVzIHN1Y2NlZWRlZCBpbiBnZXR0aW5nIHRvZ2V0aGVyLCBzb21lIG9mIHRoZW0gd2l0aCBkaWZmaWN1bHR5LCBvdGhlciB3aXRob3V0IGFueSBkaWZmaWN1bHR5OyBidXQgdGhlIFRocmFjaWFucywgaGF2aW5nIGdhaW5lZCB0aGlzIHN1Y2Nlc3MsIGtlcHQgc2hvdXRpbmcgdG8gb25lIGFub3RoZXIgYW5kIGNvbGxlY3RpbmcgdGhlaXIgZm9yY2VzIGVuZXJnZXRpY2FsbHkgZHVyaW5nIHRoZSBuaWdodC4gQXQgZGF5YnJlYWsgdGhleSBwcm9jZWVkZWQgdG8gZm9ybSB0aGVpciBsaW5lcyBhbGwgcm91bmQgdGhlIGhpbGwgd2hlcmUgdGhlIEdyZWVrcyB3ZXJlIGVuY2FtcGluZywgdGhlaXIgdHJvb3BzIGNvbnNpc3Rpbmcgb2YgaG9yc2VtZW4gaW4gbGFyZ2UgbnVtYmVycyBhbmQgcGVsdGFzdHMsIHdoaWxlIHN0aWxsIG1vcmUgd2VyZSBjb250aW51YWxseSBzdHJlYW1pbmcgdG9nZXRoZXI7CjwvdHJhbnNsYXRpb24+"
translation['6.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPmFuZCB0aGV5IG1hZGUgYXR0YWNrcyB1cG9uIHRoZSBob3BsaXRlcyB3aXRob3V0IGRhbmdlciB0byB0aGVtc2VsdmVzLCBpbmFzbXVjaCBhcyB0aGUgR3JlZWtzIGhhZCBuZWl0aGVyIGJvd21hbiBub3IgamF2ZWxpbi10aHJvd2VyIG5vciBob3JzZW1hbjsgc28gdGhleSB3b3VsZCBjb21lIHJ1bm5pbmcgb3IgcmlkaW5nIHVwIGFuZCB0aHJvdyB0aGVpciBqYXZlbGlucywgYW5kIHdoZW4gdGhlIEdyZWVrcyBjaGFyZ2VkIHVwb24gdGhlbSwgdGhleSB3b3VsZCBlYXNpbHkgZ2V0IGF3YXk7CjwvdHJhbnNsYXRpb24+"
translation['6.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPmFuZCBkaWZmZXJlbnQgcGFydGllcyBrZXB0IGF0dGFja2luZyBhdCBkaWZmZXJlbnQgcG9pbnRzLiBIZW5jZSBvbiB0aGUgb25lIHNpZGUgbWFueSB3ZXJlIGJlaW5nIHdvdW5kZWQsIG9uIHRoZSBvdGhlciBzaWRlIG5vdCBhIG1hbjsgdGhlIHJlc3VsdCB3YXMsIHRoYXQgdGhlIEdyZWVrcyB3ZXJlIG5vdCBhYmxlIHRvIHN0aXIgZnJvbSB0aGUgc3BvdCwgYW5kIGF0IGxhc3QgdGhlIFRocmFjaWFucyB3ZXJlIGV2ZW4gY3V0dGluZyB0aGVtIG9mZiBmcm9tIHRoZWlyIHdhdGVyIHN1cHBseS4KPC90cmFuc2xhdGlvbj4="
translation['6.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlaXIgZW1iYXJyYXNzbWVudCBiZWNhbWUgc2VyaW91cywgdGhleSBvcGVuZWQgbmVnb3RpYXRpb25zIGZvciBhIHRydWNlOyBhbmQgb24gZXZlcnkgb3RoZXIgcG9pbnQgYW4gYWdyZWVtZW50IGhhZCBiZWVuIHJlYWNoZWQsIGJ1dCB0aGUgVGhyYWNpYW5zIHJlZnVzZWQgdG8gZ2l2ZSB0aGUgaG9zdGFnZXMgd2hpY2ggdGhlIEdyZWVrcyBkZW1hbmRlZCwgYW5kIGluIHRoaXMgcGFydGljdWxhciB0aGVyZSB3YXMgYSBoaXRjaC4gU3VjaCwgdGhlbiwgd2FzIHRoZSBzaXR1YXRpb24gb2YgdGhlIEFyY2FkaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['6.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgdG8gQ2hlaXJpc29waHVzLCBoZSBwdXJzdWVkIGhpcyBtYXJjaCBpbiBzYWZldHkgYWxvbmcgdGhlIGNvYXN0IGFuZCBhcnJpdmVkIGF0IENhbHBlIEhhcmJvdXIuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlhlbm9waG9uLCBsYXN0bHksIHdhcyBwcm9jZWVkaW5nIHRocm91Z2ggdGhlIGJhY2sgY291bnRyeSB3aGVuIGhpcyBob3JzZW1lbiwgcmlkaW5nIG9uIGluIGFkdmFuY2UsIGNoYW5jZWQgdXBvbiBzb21lIG9sZCBtZW4gd2hvIHdlcmUgam91cm5leWluZyBzb21ld2hlcmUgb3Igb3RoZXIuIFdoZW4gdGhleSB3ZXJlIGJyb3VnaHQgdG8gWGVub3Bob24sIGhlIGFza2VkIHRoZW0gd2hldGhlciB0aGV5IGhhZCBoZWFyZCBvZiBhbm90aGVyIGFybXkgYW55d2hlcmUsIGEgR3JlZWsgYXJteS4KPC90cmFuc2xhdGlvbj4="
translation['6.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhleSB0b2xkIGhpbSBhbGwgdGhhdCBoYWQgaGFwcGVuZWQsIGFkZGluZyB0aGF0IGF0IHByZXNlbnQgdGhlIEdyZWVrcyB3ZXJlIGJlaW5nIGJlc2llZ2VkIHVwb24gYSBoaWxsLCB3aXRoIHRoZSBUaHJhY2lhbnMgaW4gZnVsbCBmb3JjZSBjb21wbGV0ZWx5IHN1cnJvdW5kaW5nIHRoZW0uIFRoZW4gWGVub3Bob24ga2VwdCB0aGVzZSBtZW4gdW5kZXIgc3RyaWN0IGd1YXJkLCBpbiBvcmRlciB0aGF0IHRoZXkgbWlnaHQgc2VydmUgYXMgZ3VpZGVzIHdoZXJldmVyIGhlIG1pZ2h0IG5lZWQgdG8gZ287IGFuZCBhZnRlciBzdGF0aW9uaW5nIHdhdGNoZXJzIGhlIGNhbGxlZCB0aGUgdHJvb3BzIHRvZ2V0aGVyIGFuZCBzcG9rZSBhcyBmb2xsb3dzOgo8L3RyYW5zbGF0aW9uPg=="
translation['6.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz7igJxGZWxsb3cgc29sZGllcnMsIHNvbWUgb2YgdGhlIEFyY2FkaWFucyBoYXZlIGJlZW4ga2lsbGVkIGFuZCB0aGUgcmVtYWluZGVyIG9mIHRoZW0gYXJlIGJlaW5nIGJlc2llZ2VkIHVwb24gYSBjZXJ0YWluIGhpbGwuIE5vdyBpdCBpcyBteSBvd24gYmVsaWVmIHRoYXQgaWYgdGhleSBhcmUgdG8gcGVyaXNoLCB0aGVyZSBpcyBubyBzYWx2YXRpb24gZm9yIHVzIGVpdGhlciwgdGhlIGVuZW15IGJlaW5nIHNvIG51bWVyb3VzIGFuZCBtYWRlIHNvIGNvbmZpZGVudCBieSB0aGVpciBzdWNjZXNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUgaXQgaXMgYmVzdCBmb3IgdXMgdG8gZ28gdG8gdGhlIHJlc2N1ZSBvZiB0aGVzZSBtZW4gd2l0aCBhbGwgc3BlZWQsIHNvIHRoYXQgaWYgdGhleSBhcmUgc3RpbGwgYWxpdmUsIHdlIG1heSBoYXZlIHRoZWlyIGFpZCBpbiB0aGUgZmlnaHRpbmcsIGluc3RlYWQgb2YgYmVpbmcgbGVmdCBhbG9uZSBhbmQgYWxvbmUgZmFjaW5nIHRoZSBkYW5nZXIuCjwvdHJhbnNsYXRpb24+"
translation['6.3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGZvbGxvd2luZyBmaXZlIHNlY3Rpb25zIGZvbGxvdyB0aGUgdHJhbnNwb3NpdGlvbiBvZiBSZWhkYW50ei48L25vdGU+Rm9yIHRoZXJlIGlzIG5vIHBsYWNlIHRvIHdoaWNoIHdlIGNhbiBvdXJzZWx2ZXMgc3RlYWwgYXdheSBmcm9tIGhlcmU7IGZvciB0byBnbyBiYWNrIHRvIEhlcmFjbGVpYSzigJ0gaGUgc2FpZCwg4oCcaXMgYSBsb25nIGpvdXJuZXksIGFuZCBpdCBpcyBhIGxvbmcgam91cm5leSB0aHJvdWdoIHRvIENocnlzb3BvbGlzLCBhbmQgbWVhbndoaWxlIHRoZSBlbmVteSBhcmUgY2xvc2UgYXQgaGFuZDsgdG8gQ2FscGUgSGFyYm91ciwgd2hlcmUgd2UgcHJlc3VtZSBDaGVpcmlzb3BodXMgaXMsIGluIGNhc2UgaGUgaGFzIGNvbWUgdGhyb3VnaCBzYWZlbHksIGlzIHRoZSBzaG9ydGVzdCBkaXN0YW5jZS4gQnV0IGZpcnN0bHksIG1hcmsgeW91LCBoYXZpbmcgYXJyaXZlZCB0aGVyZSB3ZSBoYXZlIG5laXRoZXIgc2hpcHMgd2hlcmVpbiB0byBzYWlsIGF3YXkgbm9yIHByb3Zpc2lvbnMgZm9yIHNvIG11Y2ggYXMgYSBzaW5nbGUgZGF5IGlmIHdlIHJlbWFpbiBpbiB0aGUgcGxhY2U7CjwvdHJhbnNsYXRpb24+"
translation['6.3.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgc2Vjb25kbHksIGl0IGlzIHdvcnNlIHRvIGhhdmUgdGhlIGJsb2NrYWRlZCBmb3JjZSBkZXN0cm95ZWQgYW5kIHRha2Ugb3VyIGNoYW5jZXMgaW4gY29tcGFueSB3aXRoIENoZWlyaXNvcGh1cycgdHJvb3BzIG9ubHksIHRoYW4gdG8gaGF2ZSB0aGVzZSBtZW4gc2F2ZWQgYW5kIHRoZW4gdW5pdGUgYWxsIG91ciBmb3JjZXMgYW5kIHRvZ2V0aGVyIHN0cml2ZSBmb3IgZGVsaXZlcmFuY2UuIFdlIG11c3Qgc2V0IGZvcnRoLCB0aGVuLCBwcmVwYXJlZCBpbiBvdXIgbWluZHMgZm9yIGVpdGhlciBtZWV0aW5nIHRvLWRheSBhIGdsb3Jpb3VzIGRlYXRoIG9yIGFjY29tcGxpc2hpbmcgYSBtb3N0IG5vYmxlIGRlZWQgaW4gc2F2aW5nIHNvIG1hbnkgR3JlZWtzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.3.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaXQgbWF5IGJlIHRoYXQgdGhlIGdvZCBpcyBndWlkaW5nIGV2ZW50cyBpbiB0aGlzIHdheSwgaGUgd2hvIHdpbGxzIHRoYXQgdGhvc2Ugd2hvIHRhbGtlZCBib2FzdGZ1bGx5LCBhcyB0aG91Z2ggcG9zc2Vzc2VkIG9mIHN1cGVyaW9yIHdpc2RvbSwgc2hvdWxkIGJlIGJyb3VnaHQgbG93LCBhbmQgdGhhdCB3ZSwgd2hvIGFsd2F5cyBiZWdpbiB3aXRoIHRoZSBnb2RzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIGNvbnN1bHQgdGhlIGdvZHMgYmVmb3JlIHVuZGVydGFraW5nIGFueSBlbnRlcnByaXNlLiBUaGUgZXhwcmVzc2lvbiB3YXMgcHJvdmVyYmlhbC48L25vdGU+IHNob3VsZCBiZSBzZXQgaW4gYSBwbGFjZSBvZiBoaWdoZXIgaG9ub3VyIHRoYW4gdGhvc2UgYm9hc3RlcnMuIEFuZCBub3cgeW91IG11c3Qga2VlcCBpbiBsaW5lIGFuZCBvbiB0aGUgYWxlcnQsIHNvIHRoYXQgeW91IGNhbiBjYXJyeSBvdXQgdGhlIG9yZGVycyB0aGF0IGFyZSBnaXZlbi4KPC90cmFuc2xhdGlvbj4="
translation['6.3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIHByZXNlbnQsIHRoZW4sIGxldCB1cyBnbyBmb3J3YXJkIGFzIGZhciBhcyBtYXkgc2VlbSBjb25zaXN0ZW50IHdpdGggb3VyIHRpbWUgZm9yIGRpbmluZywgYW5kIHRoZW4gZW5jYW1wOyBhbmQgc28gbG9uZyBhcyB3ZSBhcmUgb24gdGhlIG1hcmNoLCBsZXQgVGltYXNpb24gd2l0aCB0aGUgY2F2YWxyeSByaWRlIG9uIGluIGFkdmFuY2UsIGtlZXBpbmcgdXMgaW4gc2lnaHQsIGFuZCBzcHkgb3V0IHdoYXQgaXMgYWhlYWQsIGluIG9yZGVyIHRoYXQgbm90aGluZyBtYXkgZXNjYXBlIG91ciBhdHRlbnRpb24u4oCdCjwvdHJhbnNsYXRpb24+"
translation['6.3.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2l0aCB0aGVzZSB3b3JkcyBoZSBwcm9jZWVkZWQgdG8gbGVhZCB0aGUgd2F5LiBGdXJ0aGVybW9yZSwgaGUgc2VudCBvdXQgb24gdGhlIGZsYW5rcyBhbmQgdG8gdGhlIG5laWdoYm91cmluZyBoZWlnaHRzIHNvbWUgb2YgdGhlIG1vcmUgYWN0aXZlIG9mIHRoZSBsaWdodC1hcm1lZCB0cm9vcHMgaW4gb3JkZXIgdGhhdCB0aGV5IG1pZ2h0IHNpZ25hbCB0byB0aGUgYXJteSBpbiBjYXNlIHRoZXkgc2hvdWxkIHNpZ2h0IGFueXRoaW5nIGFueXdoZXJlIGZyb20gYW55IHBvaW50IG9mIG9ic2VydmF0aW9uOyBhbmQgaGUgZGlyZWN0ZWQgdGhlbSB0byBidXJuIGV2ZXJ5dGhpbmcgdGhleSBmb3VuZCB0aGF0IGNvdWxkIGJlIGJ1cm5lZC4KPC90cmFuc2xhdGlvbj4="
translation['6.3.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGUgaG9yc2VtZW4sIHNjYXR0ZXJpbmcgYXMgd2lkZWx5IGFzIHdhcyBwcm9wZXIsIHdlbnQgdG8gYnVybmluZywgdGhlIHBlbHRhc3RzLCBtYWtpbmcgdGhlaXIgd2F5IGFsb25nIHRoZSBoZWlnaHRzIGFicmVhc3Qgb2YgdGhlIG1haW4gYXJteSwgYnVybmVkIGFsbCB0aGV5IHNhdyB3aGljaCB3YXMgY29tYnVzdGlibGUsIGFuZCB0aGUgbWFpbiBhcm15IGxpa2V3aXNlIGJ1cm5lZCBhbnl0aGluZyB0aGV5IGZvdW5kIHRoYXQgaGFkIGJlZW4gcGFzc2VkIG92ZXI7IHRoZSByZXN1bHQgd2FzLCB0aGF0IHRoZSB3aG9sZSBjb3VudHJ5IHNlZW1lZCB0byBiZSBhYmxhemUgYW5kIHRoZSBhcm15IHNlZW1lZCB0byBiZSBhIGxhcmdlIG9uZS4KPC90cmFuc2xhdGlvbj4="
translation['6.3.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSB0aW1lIGhhZCBjb21lLCB0aGV5IGFzY2VuZGVkIGEgaGlsbCBhbmQgZW5jYW1wZWQ7IGZyb20gdGhlcmUgdGhleSBjb3VsZCBzZWUgdGhlIGNhbXBmaXJlcyBvZiB0aGUgZW5lbXksIGRpc3RhbnQgYWJvdXQgZm9ydHkgc3RhZGlhLCBhbmQgdGhleSBraW5kbGVkIGFzIG1hbnkgZmlyZXMgdGhlbXNlbHZlcyBhcyB0aGV5IGNvdWxkLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.3.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5JbW1lZGlhdGVseSBhZnRlciB0aGV5IGhhZCBkaW5lZCwgaG93ZXZlciwgdGhlIG9yZGVyIHdhcyBnaXZlbiB0byBleHRpbmd1aXNoIGV2ZXJ5IG9uZSBvZiB0aGUgZmlyZXMuIFRoZW4sIGFmdGVyIHN0YXRpb25pbmcgZ3VhcmRzLCB0aGV5IHNsZXB0IHRoZSBuaWdodCB0aHJvdWdoOyBhbmQgYXQgZGF5YnJlYWsgdGhleSBvZmZlcmVkIHByYXllciB0byB0aGUgZ29kcywgZm9ybWVkIHRoZWlyIGxpbmVzIGZvciBiYXR0bGUsIGFuZCBzZXQgZm9ydGggYXQgdGhlIGZhc3Rlc3QgcG9zc2libGUgcGFjZS4KPC90cmFuc2xhdGlvbj4="
translation['6.3.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgVGltYXNpb24gYW5kIHRoZSBob3JzZW1lbiwgcmlkaW5nIG9uIGFoZWFkIHdpdGggdGhlIGd1aWRlcywgZm91bmQgdGhlbXNlbHZlcyB3aXRob3V0IGtub3dpbmcgaXQgdXBvbiB0aGUgaGlsbCB3aGVyZSB0aGUgR3JlZWtzIGhhZCBiZWVuIGJlc2llZ2VkLiBUaGV5IGNvdWxkIHNlZSBubyBhcm15LCBob3dldmVyLCBlaXRoZXIgZnJpZW5kbHkgb3IgaG9zdGlsZSAoYW5kIHRoaXMgZmFjdCB0aGV5IHJlcG9ydGVkIGJhY2sgdG8gWGVub3Bob24gYW5kIHRoZSBtYWluIGJvZHkpLCBidXQgb25seSBzb21lIHdyZXRjaGVkIG9sZCBtZW4gYW5kIHdvbWVuIGFuZCBhIGZldyBzaGVlcCBhbmQgY2F0dGxlIHRoYXQgaGFkIGJlZW4gbGVmdCBiZWhpbmQuCjwvdHJhbnNsYXRpb24+"
translation['6.3.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BdCBmaXJzdCB0aGV5IGNvdWxkIG9ubHkgd29uZGVyIHdoYXQgdGhlIHRoaW5nIHdhcyB0aGF0IGhhZCBoYXBwZW5lZCwgYnV0IGFmdGVyd2FyZHMgdGhleSBtYW5hZ2VkIHRvIGZpbmQgb3V0IGZyb20gdGhlIHBlb3BsZSB3aG8gaGFkIGJlZW4gbGVmdCBiZWhpbmQgdGhhdCB0aGUgVGhyYWNpYW5zIGhhZCBkaXNhcHBlYXJlZCBpbW1lZGlhdGVseSBhZnRlciBuaWdodGZhbGwsIGFuZCB0aGUgR3JlZWtzIGFsc28sIHRoZXkgc2FpZCwgaGFkIGdvbmU7IGJ1dCB3aGl0aGVyLCB0aGV5IGRpZCBub3Qga25vdy4KPC90cmFuc2xhdGlvbj4="
translation['6.3.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXBvbiBoZWFyaW5nIHRoaXMgcmVwb3J0IFhlbm9waG9uIGFuZCBoaXMgbWVuIHBhY2tlZCB1cCwgYXMgc29vbiBhcyB0aGV5IGhhZCBicmVha2Zhc3RlZCwgYW5kIHNldCBmb3J0aCwgd2lzaGluZyBhcyBzcGVlZGlseSBhcyBwb3NzaWJsZSB0byBqb2luIHRoZWlyIGNvbXJhZGVzIGF0IENhbHBlIEhhcmJvdXIuIEFzIHRoZXkgcHJvY2VlZGVkLCB0aGV5IGNvdWxkIHNlZSB0aGUgdHJhY2sgb2YgdGhlIEFyY2FkaWFucyBhbmQgQWNoYWVhbnMgYWxvbmcgdGhlIHJvYWQgbGVhZGluZyB0b3dhcmRzIENhbHBlLiBXaGVuIHRoZSB0d28gZGV0YWNobWVudHMgY2FtZSB0b2dldGhlciwgdGhlIG1lbiB3ZXJlIGRlbGlnaHRlZCB0byBzZWUgb25lIGFub3RoZXIsIGFuZCBncmVldGVkIG9uZSBhbm90aGVyIGxpa2UgYnJvdGhlcnMuCjwvdHJhbnNsYXRpb24+"
translation['6.3.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIEFyY2FkaWFucyBpbnF1aXJlZCBvZiBYZW5vcGhvbidzIHRyb29wcyB3aHkgdGhleSBoYWQgcHV0IG91dCB0aGVpciBmaXJlczsg4oCcZm9yIHdlIGltYWdpbmVkIGF0IGZpcnN0LOKAnSB0aGV5IHNhaWQsIOKAnHdoZW4gd2UgY291bGQgbm8gbG9uZ2VyIHNlZSB5b3VyIGZpcmVzLCB0aGF0IHlvdSBtZWFudCB0byBjb21lIGFnYWluc3QgdGhlIGVuZW15IGR1cmluZyB0aGUgbmlnaHQ7IGFuZCB0aGUgZW5lbXkgbGlrZXdpc2UsIHNvIGF0IGxlYXN0IGl0IHNlZW1lZCB0byB1cywgZmVhcmVkIHRoaXMsIGFuZCBvbiB0aGF0IGFjY291bnQgZGVwYXJ0ZWQ7IGZvciBpdCB3YXMgYXQgYWJvdXQgdGhhdCB0aW1lIHRoYXQgdGhleSB3ZW50IGF3YXkuCjwvdHJhbnNsYXRpb24+"
translation['6.3.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB5b3UgZmFpbGVkIHRvIGFycml2ZSwgYWx0aG91Z2ggdGhlIHJlcXVpc2l0ZSB0aW1lIGhhZCBwYXNzZWQsIHdlIHN1cHBvc2VkIHRoYXQgeW91IGhhZCBsZWFybmVkIG9mIG91ciBzaXR1YXRpb24gYW5kLCBzZWl6ZWQgd2l0aCBmZWFyLCBoYWQgc3RlYWx0aGlseSBtYWRlIG9mZiB0b3dhcmQgdGhlIHNlYTsgYW5kIHdlIHRob3VnaHQgaXQgYmVzdCBub3QgdG8gYmUgbGVmdCBiZWhpbmQuIFRoYXQgd2FzIHRoZSByZWFzb24sIHRoZW4sIHdoeSB3ZSBhbHNvIHByb2NlZWRlZCBoaXRoZXIu4oCdCjwvdHJhbnNsYXRpb24+"
translation['6.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5EdXJpbmcgdGhhdCBkYXkgdGhleSBiaXZvdWFja2VkIHdoZXJlIHRoZXkgd2VyZSwgdXBvbiB0aGUgYmVhY2ggYnkgdGhlIGhhcmJvdXIuIE5vdyB0aGlzIHBsYWNlIHdoaWNoIGlzIGNhbGxlZCBDYWxwZSBIYXJib3VyIGlzIHNpdHVhdGVkIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNzU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI3NTYiPlRocmFjZTwvcGxhY2VOYW1lPi1pbi1Bc2lhOyBhbmQgdGhpcyBwb3J0aW9uIG9mIFRocmFjZSBiZWdpbnMgYXQgdGhlIG1vdXRoIG9mIHRoZSBFdXhpbmUgYW5kIGV4dGVuZHMgYXMgZmFyIGFzIEhlcmFjbGVpYSwgYmVpbmcgb24gdGhlIHJpZ2h0IGFzIG9uZSBzYWlscyBpbnRvIHRoZSBFdXhpbmUuCjwvdHJhbnNsYXRpb24+"
translation['6.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkl0IGlzIGEgbG9uZyBkYXkncyBqb3VybmV5IGZvciBhIHRyaXJlbWUgdG8gcm93IGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxCeXphbnRpdW0iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEJ5emFudGl1bSI+Qnl6YW50aXVtPC9wbGFjZU5hbWU+IHRvIEhlcmFjbGVpYSwgYW5kIGJldHdlZW4gdGhlIHR3byBwbGFjZXMgdGhlcmUgaXMgbm8gb3RoZXIgY2l0eSwgZWl0aGVyIGZyaWVuZGx5IG9yIEdyZWVrLCBvbmx5IEJpdGh5bmlhbiBUaHJhY2lhbnM7IGFuZCB0aGV5IGFyZSBzYWlkIHRvIGFidXNlIG91dHJhZ2VvdXNseSBhbnkgR3JlZWtzIHRoZXkgbWF5IGZpbmQgc2hpcHdyZWNrZWQgb3IgbWF5IGNhcHR1cmUgaW4gYW55IG90aGVyIHdheS4KPC90cmFuc2xhdGlvbj4="
translation['6.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciBDYWxwZSBIYXJib3VyLCBpdCBsaWVzIG1pZHdheSBvZiB0aGUgdm95YWdlIGJldHdlZW4gSGVyYWNsZWlhIGFuZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEJ5emFudGl1bSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQnl6YW50aXVtIj5CeXphbnRpdW08L3BsYWNlTmFtZT4gYW5kIGlzIGEgYml0IG9mIGxhbmQganV0dGluZyBvdXQgaW50byB0aGUgc2VhLCB0aGUgcGFydCBvZiBpdCB3aGljaCBleHRlbmRzIHNlYXdhcmQgYmVpbmcgYSBwcmVjaXBpdG91cyBtYXNzIG9mIHJvY2ssIG5vdCBsZXNzIHRoYW4gdHdlbnR5IGZhdGhvbXMgaGlnaCBhdCBpdHMgbG93ZXN0IHBvaW50LCBhbmQgdGhlIGlzdGhtdXMgd2hpY2ggY29ubmVjdHMgdGhpcyBoZWFkIHdpdGggdGhlIG1haW5sYW5kIGJlaW5nIGFib3V0IGZvdXIgcGxldGhyYSBpbiB3aWR0aDsgYW5kIHRoZSBzcGFjZSB0byB0aGUgc2Vhd2FyZCBvZiB0aGUgaXN0aG11cyBpcyBsYXJnZSBlbm91Z2ggZm9yIHRlbiB0aG91c2FuZCBwZW9wbGUgdG8gZHdlbGwgaW4uCjwvdHJhbnNsYXRpb24+"
translation['6.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkF0IHRoZSB2ZXJ5IGZvb3Qgb2YgdGhlIHJvY2sgdGhlcmUgaXMgYSBoYXJib3VyIHdob3NlIGJlYWNoIGZhY2VzIHRvd2FyZCB0aGUgd2VzdCwgYW5kIGFuIGFidW5kYW50bHkgZmxvd2luZyBzcHJpbmcgb2YgZnJlc2ggd2F0ZXIgY2xvc2UgdG8gdGhlIHNob3JlIG9mIHRoZSBzZWEgYW5kIGNvbW1hbmRlZCBieSB0aGUgaGVhZGxhbmQuIFRoZXJlIGlzIGFsc28gYSBncmVhdCBkZWFsIG9mIHRpbWJlciBvZiB2YXJpb3VzIHNvcnRzLCBidXQgYW4gZXNwZWNpYWxseSBsYXJnZSBhbW91bnQgb2YgZmluZSBzaGlwLXRpbWJlciwgb24gdGhlIHZlcnkgc2hvcmUgb2YgdGhlIHNlYS4KPC90cmFuc2xhdGlvbj4="
translation['6.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZSByaWRnZSBleHRlbmRzIGJhY2sgaW50byB0aGUgaW50ZXJpb3IgZm9yIGFib3V0IHR3ZW50eSBzdGFkaWEsIGFuZCB0aGlzIHN0cmV0Y2ggaXMgZGVlcC1zb2lsZWQgYW5kIGZyZWUgZnJvbSBzdG9uZXMsIHdoaWxlIHRoZSBsYW5kIGJvcmRlcmluZyB0aGUgY29hc3QgaXMgdGhpY2tseSBjb3ZlcmVkIGZvciBhIGRpc3RhbmNlIG9mIG1vcmUgdGhhbiB0d2VudHkgc3RhZGlhIHdpdGggYW4gYWJ1bmRhbmNlIG9mIGhlYXZ5IHRpbWJlciBvZiBhbGwgc29ydHMuCjwvdHJhbnNsYXRpb24+"
translation['6.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZSByZXN0IG9mIHRoZSByZWdpb24gaXMgZmFpciBhbmQgZXh0ZW5zaXZlLCBhbmQgY29udGFpbnMgbWFueSBpbmhhYml0ZWQgdmlsbGFnZXM7IGZvciB0aGUgbGFuZCBwcm9kdWNlcyBiYXJsZXksIHdoZWF0LCBiZWFucyBvZiBhbGwga2luZHMsIG1pbGxldCBhbmQgc2VzYW1lLCBhIHN1ZmZpY2llbnQgcXVhbnRpdHkgb2YgZmlncywgYW4gYWJ1bmRhbmNlIG9mIGdyYXBlcyB3aGljaCB5aWVsZCBhIGdvb2Qgc3dlZXQgd2luZSwgYW5kIGluIGZhY3QgZXZlcnl0aGluZyBleGNlcHQgb2xpdmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoIHdhcyB0aGUgY291bnRyeSB0aGVyZWFib3V0cy4gVGhlIG1lbiB0b29rIHVwIHF1YXJ0ZXJzIG9uIHRoZSBiZWFjaCBieSB0aGUgc2VhLCByZWZ1c2luZyB0byBlbmNhbXAgb24gdGhlIHNwb3Qgd2hpY2ggbWlnaHQgYmVjb21lIGEgY2l0eTsgaW5kZWVkLCB0aGUgZmFjdCBvZiB0aGVpciBjb21pbmcgdG8gdGhpcyBwbGFjZSBhdCBhbGwgc2VlbWVkIHRvIHRoZW0gdGhlIHJlc3VsdCBvZiBzY2hlbWluZyBvbiB0aGUgcGFydCBvZiBzb21lIHBlb3BsZSB3aG8gd2lzaGVkIHRvIGZvdW5kIGEgY2l0eS4KPC90cmFuc2xhdGlvbj4="
translation['6.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkZvciBtb3N0IG9mIHRoZSBzb2xkaWVycyBoYWQgc2FpbGVkIGF3YXkgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gdG8gdW5kZXJ0YWtlIHRoaXMgc2VydmljZSBmb3IgcGF5LCBub3QgYmVjYXVzZSB0aGVpciBtZWFucyB3ZXJlIHNjYW50eSwgYnV0IGJlY2F1c2UgdGhleSBrbmV3IGJ5IHJlcG9ydCBvZiB0aGUgbm9ibGUgY2hhcmFjdGVyIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT47IHNvbWUgYnJvdWdodCBvdGhlciBtZW4gd2l0aCB0aGVtLCBzb21lIGhhZCBldmVuIHNwZW50IG1vbmV5IG9mIHRoZWlyIG93biBvbiB0aGUgZW50ZXJwcmlzZSwgd2hpbGUgc3RpbGwgYW5vdGhlciBjbGFzcyBoYWQgYWJhbmRvbmVkIGZhdGhlcnMgYW5kIG1vdGhlcnMsIG9yIGhhZCBsZWZ0IGNoaWxkcmVuIGJlaGluZCB3aXRoIHRoZSBpZGVhIG9mIGdldHRpbmcgbW9uZXkgdG8gYnJpbmcgYmFjayB0byB0aGVtLCBhbGwgYmVjYXVzZSB0aGV5IGhlYXJkIHRoYXQgdGhlIG90aGVyIHBlb3BsZSB3aG8gc2VydmVkIHdpdGggPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPiBlbmpveWVkIGFidW5kYW50IGdvb2QgZm9ydHVuZS4gQmVpbmcgbWVuIG9mIHRoaXMgc29ydCwgdGhlcmVmb3JlLCB0aGV5IGxvbmdlZCB0byByZXR1cm4gaW4gc2FmZXR5IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['6.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbiB0aGUgZGF5IGFmdGVyIHRoZSByZXVuaW9uIG9mIHRoZSB0aHJlZSBkaXZpc2lvbnMgWGVub3Bob24gb2ZmZXJlZCBzYWNyaWZpY2Ugd2l0aCBhIHZpZXcgdG8gYW4gZXhwZWRpdGlvbjsgZm9yIGl0IHdhcyBuZWNlc3NhcnkgdG8gZ28gb3V0IGFmdGVyIHByb3Zpc2lvbnMgYW5kLCBiZXNpZGVzLCBoZSBpbnRlbmRlZCB0byBidXJ5IHRoZSBBcmNhZGlhbiBkZWFkLiBXaGVuIHRoZSBzYWNyaWZpY2VzIHByb3ZlZCBmYXZvdXJhYmxlLCB0aGUgQXJjYWRpYW5zIGFsc28gZm9sbG93ZWQgd2l0aCB0aGUgcmVzdCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiBubyBsb25nZXIgaW5zaXN0aW5nIHVwb24gdGhlaXIgaW5kZXBlbmRlbnQgb3JnYW5pemF0aW9uLjwvbm90ZT4gYW5kIHRoZXkgYnVyaWVkIHRoZSBncmVhdGVyIHBhcnQgb2YgdGhlIGRlYWQganVzdCB3aGVyZSB0aGV5IGVhY2ggaGFkIGZhbGxlbjsgZm9yIHRoZXkgaGFkIGFscmVhZHkgbGFpbiB1bmJ1cmllZCBmaXZlIGRheXMsIGFuZCBpdCB3YXMgbm90IG5vdyBwb3NzaWJsZSB0byBjYXJyeSBhd2F5IHRoZSBib2RpZXM7IHNvbWUgdGhhdCBsYXkgdXBvbiB0aGUgcm9hZHMsIGhvd2V2ZXIsIHRoZXkgZGlkIGdhdGhlciB0b2dldGhlciBhbmQgaG9ub3VyIHdpdGggYXMgZmluZSBhIGJ1cmlhbCBhcyB0aGVpciBtZWFucyBhbGxvd2VkLCB3aGlsZSBmb3IgdGhvc2UgdGhleSBjb3VsZCBub3QgZmluZCwgdGhleSBlcmVjdGVkIGEgZ3JlYXQgY2Vub3RhcGgsIGFuZCBwbGFjZWQgd3JlYXRocyB1cG9uIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciBkb2luZyBhbGwgdGhpcyB0aGV5IHJldHVybmVkIHRvIHRoZWlyIGNhbXAsIGFuZCB0aGVuIHRvb2sgZGlubmVyIGFuZCB3ZW50IHRvIGJlZC4gT24gdGhlIGZvbGxvd2luZyBkYXkgYWxsIHRoZSBzb2xkaWVycyBoZWxkIGEgbWVldGluZywgdGhlIGNoaWVmIG1vdmVycyBpbiB0aGUgbWF0dGVyIGJlaW5nIEFnYXNpYXMgdGhlIFN0eW1waGFsaWFuLCBhIGNhcHRhaW4sIEhpZXJvbnltdXMgdGhlIEVsZWFuLCBhbHNvIGEgY2FwdGFpbiwgYW5kIHNvbWUgb3RoZXJzIGZyb20gYW1vbmcgdGhlIGVsZGVzdCBvZiB0aGUgQXJjYWRpYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IHBhc3NlZCBhIHJlc29sdXRpb24gdGhhdCBpZiBhbnkgbWFuIGZyb20gdGhpcyB0aW1lIGZvcnRoIHNob3VsZCBzdWdnZXN0IGRpdmlkaW5nIHRoZSBhcm15LCBoZSBzaG91bGQgYmUgcHVuaXNoZWQgd2l0aCBkZWF0aCwgYW5kIGZ1cnRoZXIsIHRoYXQgdGhlIGFybXkgc2hvdWxkIHJldHVybiB0byB0aGUgc2FtZSBvcmdhbml6YXRpb24gd2hpY2ggZm9ybWVybHkgb2J0YWluZWQsIGFuZCB0aGF0IHRoZSBmb3JtZXIgZ2VuZXJhbHMgc2hvdWxkIHJlc3VtZSBjb21tYW5kLiBOb3cgYnkgdGhpcyB0aW1lIENoZWlyaXNvcGh1cyBoYWQgZGllZCwgZnJvbSB0aGUgZWZmZWN0cyBvZiBhIG1lZGljaW5lIHdoaWNoIGhlIHRvb2sgZm9yIGEgZmV2ZXI7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDYuMi4xOCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA2LjIuMTg8L2JpYmw+Ljwvbm90ZT4gYW5kIGhpcyBjb21tYW5kIHBhc3NlZCB0byBOZW9uIHRoZSBBc2luYWVhbi4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA2LjIuMTgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNi4yLjE4PC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['6.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyBYZW5vcGhvbiByb3NlIGFuZCBzYWlkOiDigJxGZWxsb3cgc29sZGllcnMsIG91ciBqb3VybmV5LCBpdCBzZWVtcywgbXVzdCBiZSBtYWRlIGJ5IGxhbmQsIGZvciB3ZSBoYXZlIG5vIHNoaXBzOyBhbmQgd2UgbXVzdCBzZXQgb3V0IGF0IG9uY2UsIGZvciB3ZSBoYXZlIG5vIHByb3Zpc2lvbnMgaWYgd2UgcmVtYWluIGhlcmUuIFdlLCB0aGVuLOKAnSBoZSBjb250aW51ZWQsIOKAnHdpbGwgc2FjcmlmaWNlLCBhbmQgeW91IG11c3QgcHJlcGFyZSB5b3Vyc2VsdmVzIHRvIGZpZ2h0IGlmIGV2ZXIgeW91IGRpZDsgZm9yIHRoZSBlbmVteSBoYXZlIHJlbmV3ZWQgdGhlaXIgY291cmFnZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['6.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gdGhlIGdlbmVyYWxzIHByb2NlZWRlZCB0byBzYWNyaWZpY2UsIHRoZSBzb290aHNheWVyIHdobyB3YXMgcHJlc2VudCBiZWluZyBBcmV4aW9uIHRoZSBBcmNhZGlhbjsgZm9yIFNpbGFudXMgdGhlIEFtYnJhY2lvdCBoYWQgYnkgdGhpcyB0aW1lIHN0b2xlbiBhd2F5LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjYuMTgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS42LjE4PC9iaWJsPiwgMzQuPC9ub3RlPiBvbiBhIHZlc3NlbCB3aGljaCBoZSBoaXJlZCBhdCBIZXJhY2xlaWEuIFdoZW4gdGhleSBzYWNyaWZpY2VkLCBob3dldmVyLCB3aXRoIGEgdmlldyB0byB0aGVpciBkZXBhcnR1cmUsIHRoZSB2aWN0aW1zIHdvdWxkIG5vdCBwcm92ZSBmYXZvdXJhYmxlLAo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDUuNi4xOCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjYuMTg8L2JpYmw+LCAzNC48L3RyYW5zbGF0aW9uPg=="
translation['6.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgdGhleSBhY2NvcmRpbmdseSBjZWFzZWQgdGhlaXIgb2ZmZXJpbmdzIGZvciB0aGF0IGRheS4gTm93IHNvbWUgcGVvcGxlIGhhZCB0aGUgZWZmcm9udGVyeSB0byBzYXkgdGhhdCBYZW5vcGhvbiwgaW4gaGlzIGRlc2lyZSB0byBmb3VuZCBhIGNpdHkgYXQgdGhpcyBzcG90LCBoYWQgaW5kdWNlZCB0aGUgc29vdGhzYXllciB0byBkZWNsYXJlIHRoYXQgdGhlIHNhY3JpZmljZXMgd2VyZSBub3QgZmF2b3VyYWJsZSBmb3IgZGVwYXJ0dXJlLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Db25zZXF1ZW50bHkgaGUgbWFkZSBwdWJsaWMgcHJvY2xhbWF0aW9uIHRoYXQgb24gdGhlIG1vcnJvdyBhbnkgb25lIHdobyBzbyBjaG9zZSBtaWdodCBiZSBwcmVzZW50IGF0IHRoZSBzYWNyaWZpY2UsIGFuZCBpZiBhIG1hbiB3ZXJlIGEgc29vdGhzYXllciwgaGUgc2VudCBoaW0gd29yZCB0byBiZSBhdCBoYW5kIHRvIHBhcnRpY2lwYXRlIGluIHRoZSBpbnNwZWN0aW9uIG9mIHRoZSB2aWN0aW1zOyBzbyBoZSBtYWRlIHRoZSBvZmZlcmluZyBpbiB0aGUgaW1tZWRpYXRlIHByZXNlbmNlIG9mIG1hbnkgd2l0bmVzc2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhvdWdoIGhlIHNhY3JpZmljZWQgYSBzZWNvbmQgYW5kIGEgdGhpcmQgdGltZSB3aXRoIGEgdmlldyB0byBkZXBhcnR1cmUsIHRoZSB2aWN0aW1zIHdvdWxkIG5vdCBwcm92ZSBmYXZvdXJhYmxlLiBBdCB0aGF0IHRoZSBzb2xkaWVycyB3ZXJlIGFuZ3J5LCBmb3IgdGhlIHByb3Zpc2lvbnMgdGhleSBicm91Z2h0IHdpdGggdGhlbSBoYWQgZ2l2ZW4gb3V0IGFuZCB0aGVyZSB3YXMgbm90IHlldCBhbnkgbWFya2V0IGF0IGhhbmQuCjwvdHJhbnNsYXRpb24+"
translation['6.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmVmb3JlIHRoZXkgaGVsZCBhIG1lZXRpbmcgYW5kIFhlbm9waG9uIGFkZHJlc3NlZCB0aGVtIGFnYWluLiDigJxTb2xkaWVycyzigJ0gaGUgc2FpZCwg4oCcYXMgZm9yIHNldHRpbmcgb3V0IHVwb24gb3VyIGpvdXJuZXksIHRoZSBzYWNyaWZpY2VzLCBhcyB5b3Ugc2VlLCBkbyBub3QgeWV0IHByb3ZlIGZhdm91cmFibGUgZm9yIHRoYXQ7IGJ1dCBJIGFtIGF3YXJlIHRoYXQgeW91IGFyZSBpbiBuZWVkIG9mIHByb3Zpc2lvbnM7IGhlbmNlIGl0IHNlZW1zIHRvIG1lIHRoYXQgd2UgbXVzdCBzYWNyaWZpY2UgaW4gcmVnYXJkIHRvIHRoaXMgbGF0dGVyIHBvaW50IGFsb25lLuKAnSBUaGVuIHNvbWUgb25lIHJvc2UgYW5kIHNhaWQ6CjwvdHJhbnNsYXRpb24+"
translation['6.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz7igJxUaGVyZSBhcHBlYXJzIHRvIGJlIGdvb2QgcmVhc29uIHdoeSBvdXIgc2FjcmlmaWNlcyBhcmUgbm90IGZhdm91cmFibGU7IGZvciBhcyBJIGhlYXJkIGZyb20gYSBtYW4gd2hvIGNoYW5jZWQgdG8gYXJyaXZlIGhlcmUgeWVzdGVyZGF5IG9uIGEgc2hpcCwgQ2xlYW5kZXIsIHRoZSBMYWNlZGFlbW9uaWFuIGdvdmVybm9yIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQnl6YW50aXVtIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxCeXphbnRpdW0iPkJ5emFudGl1bTwvcGxhY2VOYW1lPiwgaXMgdG8gY29tZSBoZXJlIHdpdGggbWVyY2hhbnQgdmVzc2VscyBhbmQgbWVuLW9mLXdhci7igJ0KPC90cmFuc2xhdGlvbj4="
translation['6.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGF0IG5ld3MgYWxsIGRlZW1lZCBpdCBiZXN0IHRvIHN0YXksIGJ1dCBpdCB3YXMgc3RpbGwgbmVjZXNzYXJ5IHRvIGdvIG91dCBhZnRlciBwcm92aXNpb25zLiBXaXRoIHRoaXMgb2JqZWN0IGluIHZpZXcgWGVub3Bob24gYWdhaW4gc2FjcmlmaWNlZCwgZ29pbmcgYXMgZmFyIGFzIHRocmVlIG9mZmVyaW5ncywgYW5kIHRoZSB2aWN0aW1zIGNvbnRpbnVlZCB1bmZhdm91cmFibGUuIEJ5IHRoaXMgdGltZSBwZW9wbGUgd2VyZSBldmVuIGNvbWluZyB0byBYZW5vcGhvbidzIHRlbnQgYW5kIGRlY2xhcmluZyB0aGF0IHRoZXkgaGFkIG5vIHByb3Zpc2lvbnMsIGJ1dCBoZSBzYWlkIHRoYXQgaGUgd291bGQgbm90IGxlYWQgZm9ydGggdW5sZXNzIHRoZSBzYWNyaWZpY2VzIHR1cm5lZCBvdXQgZmF2b3VyYWJsZS4KPC90cmFuc2xhdGlvbj4="
translation['6.4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhlIG5leHQgZGF5IGhlIHVuZGVydG9vayB0byBzYWNyaWZpY2UgYWdhaW4sIGFuZCBwcmV0dHkgbmVhcmx5IHRoZSBlbnRpcmUgYXJteeKAlGZvciBpdCB3YXMgYSBtYXR0ZXIgb2YgY29uY2VybiB0byBldmVyeSBtYW7igJRnYXRoZXJlZCBhYm91dCB0aGUgcGxhY2Ugb2Ygc2FjcmlmaWNlOyBidXQgdGhlIHZpY3RpbXMgaGFkIGdpdmVuIG91dC4gVGhlbiB0aGUgZ2VuZXJhbHMsIHdoaWxlIHJlZnVzaW5nIHRvIGxlYWQgdGhlIG1lbiBmb3J0aCwgY2FsbGVkIHRoZW0gdG9nZXRoZXIgaW4gYXNzZW1ibHk7CjwvdHJhbnNsYXRpb24+"
translation['6.4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgWGVub3Bob24gc2FpZDog4oCcSXQgbWF5IGJlIHRoYXQgdGhlIGVuZW15IGFyZSBnYXRoZXJlZCB0b2dldGhlciBhbmQgdGhhdCB3ZSBtdXN0IGZpZ2h0OyBpZiwgdGhlbiwgd2Ugc2hvdWxkIGxlYXZlIG91ciBiYWdnYWdlIGluIHRoZSBzdHJvbmcgcGxhY2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiB0aGUgaGVhZGxhbmQgZGVzY3JpYmVkIGluIDMgZmYuIGFib3ZlLjwvbm90ZT4gYW5kIHNldCBvdXQgcHJlcGFyZWQgZm9yIGJhdHRsZSwgcGVyaGFwcyBvdXIgc2FjcmlmaWNlcyB3b3VsZCBiZSBzdWNjZXNzZnVsLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIGhlYXJpbmcgdGhpcywgaG93ZXZlciwgdGhlIHNvbGRpZXJzIGNyaWVkIG91dCB0aGF0IGl0IHdhcyBub3QgYXQgYWxsIG5lY2Vzc2FyeSB0byBlbnRlciB0aGUgcGxhY2UsIGJ1dCwgcmF0aGVyLCB0byBvZmZlciBzYWNyaWZpY2Ugd2l0aCBhbGwgc3BlZWQuIE5vdyB0aGV5IG5vIGxvbmdlciBoYWQgYW55IHNoZWVwLCBidXQgdGhleSBib3VnaHQgYSBidWxsb2NrIHRoYXQgd2FzIHlva2VkIHRvIGEgd2Fnb24gYW5kIHByb2NlZWRlZCB0byBzYWNyaWZpY2U7IGFuZCBYZW5vcGhvbiByZXF1ZXN0ZWQgQ2xlYW5vcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5PbmUgb2YgdGhlIGdlbmVyYWxzLjwvbm90ZT4gdGhlIEFyY2FkaWFuIHRvIGdpdmUgc3BlY2lhbCBhdHRlbnRpb24gdG8gc2VlIGlmIHRoZXJlIHdhcyBhbnl0aGluZyBhdXNwaWNpb3VzIGluIHRoaXMgb2ZmZXJpbmcuIEJ1dCBub3QgZXZlbiBzbyBkaWQgdGhlIG9tZW5zIHByb3ZlIGZhdm91cmFibGUuCjwvdHJhbnNsYXRpb24+"
translation['6.4.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IE5lb24gd2FzIGdlbmVyYWwgaW4gcGxhY2Ugb2YgQ2hlaXJpc29waHVzLCBhbmQgd2hlbiBoZSBzYXcgaW4gd2hhdCBhIHRlcnJpYmxlIGNvbmRpdGlvbiB0aGUgc29sZGllcnMgd2VyZSBmcm9tIHdhbnQsIGhlIHdhcyBkZXNpcm91cyBvZiBkb2luZyB0aGVtIGEga2luZG5lc3M7IHNvIGhhdmluZyBmb3VuZCBhIGNlcnRhaW4gSGVyYWNsZW90IHdobyBjbGFpbWVkIHRvIGtub3cgb2YgdmlsbGFnZXMgbmVhciBhdCBoYW5kIGZyb20gd2hpY2ggaXQgd2FzIHBvc3NpYmxlIHRvIGdldCBwcm92aXNpb25zLCBoZSBtYWRlIHByb2NsYW1hdGlvbiB0aGF0IGFsbCB3aG8gc28gd2lzaGVkIHdlcmUgdG8gZ28gYWZ0ZXIgcHJvdmlzaW9ucyBhbmQgdGhhdCBoZSB3b3VsZCBiZSB0aGVpciBsZWFkZXIuIFRoZXJlIHNldCBvdXQgYWNjb3JkaW5nbHksIHdpdGggcG9sZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gZm9yIGNhcnJ5aW5nIHRoZSBib290eS48L25vdGU+IHdpbmUtc2tpbnMsIGJhZ3MsIGFuZCBvdGhlciB2ZXNzZWxzLCBhYm91dCB0d28gdGhvdXNhbmQgbWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGV5IGhhZCByZWFjaGVkIHRoZSB2aWxsYWdlcyBhbmQgd2VyZSBzY2F0dGVyaW5nIGhlcmUgYW5kIHRoZXJlIGZvciB0aGUgcHVycG9zZSBvZiBzZWN1cmluZyBwbHVuZGVyLCB0aGV5IHdlcmUgYXR0YWNrZWQgZmlyc3Qgb2YgYWxsIGJ5IHRoZSBob3JzZW1lbiBvZiBQaGFybmFiYXp1czs8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIG5vdGUgb24gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjYuMjQiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS42LjI0PC9iaWJsPi48L25vdGU+IGZvciB0aGV5IGhhZCBjb21lIHRvIHRoZSBhaWQgb2YgdGhlIEJpdGh5bmlhbnMsIGRlc2lyaW5nIGluIGNvbXBhbnkgd2l0aCB0aGUgQml0aHluaWFucyB0byBwcmV2ZW50IHRoZSBHcmVla3MsIGlmIHRoZXkgY291bGQsIGZyb20gZW50ZXJpbmcgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjYuMjQiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS42LjI0PC9iaWJsPi48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjYxMyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjEzIj5QaHJ5Z2lhPC9wbGFjZU5hbWU+OyB0aGVzZSBob3JzZW1lbiBraWxsZWQgbm8gZmV3ZXIgdGhhbiBmaXZlIGh1bmRyZWQgb2YgdGhlIHNvbGRpZXJzLCB0aGUgcmVzdCBmbGVlaW5nIGZvciByZWZ1Z2UgdG8gdGhlIGhlaWdodHMuCjwvdHJhbnNsYXRpb24+"
translation['6.4.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIG9uZSBvZiB0aGUgbWVuIHdobyBlc2NhcGVkIGJyb3VnaHQgYmFjayB3b3JkIHRvIHRoZSBjYW1wIG9mIHdoYXQgaGFkIGhhcHBlbmVkLiBBbmQgWGVub3Bob24sIGluYXNtdWNoIGFzIHRoZSBzYWNyaWZpY2VzIGhhZCBub3QgcHJvdmVkIGZhdm91cmFibGUgb24gdGhhdCBkYXksIHRvb2sgYSBidWxsb2NrIHRoYXQgd2FzIHlva2VkIHRvIGEgd2Fnb24s4oCUZm9yIHRoZXJlIHdlcmUgbm8gb3RoZXIgc2FjcmlmaWNpYWwgYW5pbWFscyzigJRvZmZlcmVkIGl0IHVwLCBhbmQgc2V0IG91dCB0byB0aGUgcmVzY3VlLCBhcyBkaWQgYWxsIHRoZSByZXN0IHdobyB3ZXJlIHVuZGVyIHRoaXJ0eSB5ZWFycyBvZiBhZ2UsIHRvIHRoZSBsYXN0IG1hbi4KPC90cmFuc2xhdGlvbj4="
translation['6.4.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhleSBwaWNrZWQgdXAgdGhlIHN1cnZpdm9ycyBhbmQgcmV0dXJuZWQgdG8gdGhlIGNhbXAuIEJ5IHRoaXMgdGltZSBpdCB3YXMgYWJvdXQgc3Vuc2V0LCBhbmQgdGhlIEdyZWVrcyB3ZXJlIG1ha2luZyBwcmVwYXJhdGlvbnMgZm9yIGRpbm5lciBpbiBhIHN0YXRlIG9mIGdyZWF0IGRlc3BvbmRlbmN5IHdoZW4gc3VkZGVubHkgdGhyb3VnaCB0aGUgdGhpY2tldHMgc29tZSBvZiB0aGUgQml0aHluaWFucyBidXJzdCB1cG9uIHRoZSBvdXRwb3N0cywga2lsbGluZyBzb21lIG9mIHRoZW0gYW5kIHB1cnN1aW5nIHRoZSByZXN0IHVwIHRvIHRoZSBjYW1wLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BbiBvdXRjcnkgd2FzIHJhaXNlZCwgYW5kIGFsbCB0aGUgR3JlZWtzIHJhbiB0byB0aGVpciBhcm1zOyBzdGlsbCwgaXQgZGlkIG5vdCBzZWVtIHNhZmUgdG8gdW5kZXJ0YWtlIGEgcHVyc3VpdCBvciB0byBtb3ZlIHRoZSBjYW1wIGR1cmluZyB0aGUgbmlnaHQsIHNlZWluZyB0aGF0IHRoZSByZWdpb24gd2FzIHRoaWNrbHkgb3Zlcmdyb3duOyBzbyB0aGV5IHNwZW50IHRoZSBuaWdodCB1bmRlciBhcm1zLCBrZWVwaW5nIHBsZW50eSBvZiBzZW50aW5lbHMgb24gd2F0Y2guCjwvdHJhbnNsYXRpb24+"
translation['6.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGlzIHdheSB0aGV5IGdvdCB0aHJvdWdoIHRoZSBuaWdodCwgYnV0IGF0IGRheWJyZWFrIHRoZSBnZW5lcmFscyBsZWQgdGhlIHdheSB0byB0aGUgc3Ryb25nIHBsYWNlIGFuZCB0aGUgbWVuIGZvbGxvd2VkLCB0YWtpbmcgdXAgdGhlaXIgYXJtcyBhbmQgYmFnZ2FnZS4gQmVmb3JlIGJyZWFrZmFzdCB0aW1lIGNhbWUsIHRoZXkgcHJvY2VlZGVkIHRvIGRpZyBhIHRyZW5jaCBhY3Jvc3MgdGhlIHdheSBvZiBhcHByb2FjaDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIHRoZSBpc3RobXVzIG1lbnRpb25lZCBpbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDYuNC4zIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDYuNC4zPC9iaWJsPi48L25vdGU+IHRvIHRoZSBwbGFjZSwgYW5kIHRoZXkgYmFja2VkIGl0IGFsb25nIGl0cyBlbnRpcmUgbGVuZ3RoIHdpdGggYSBwYWxpc2FkZSwgbGVhdmluZyB0aHJlZSBnYXRlcy4gQW5kIG5vdyBhIHZlc3NlbCBhcnJpdmVkIGZyb20gSGVyYWNsZWlhLCBicmluZ2luZyBiYXJsZXkgbWVhbCwgc2FjcmlmaWNpYWwgdmljdGltcywgYW5kIHdpbmUuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNi40LjMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNi40LjM8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['6.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5YZW5vcGhvbiBhcm9zZSBlYXJseSBhbmQgc2FjcmlmaWNlZCB3aXRoIGEgdmlldyB0byBhbiBleHBlZGl0aW9uLCBhbmQgd2l0aCB0aGUgZmlyc3Qgb2ZmZXJpbmcgdGhlIG9tZW5zIHR1cm5lZCBvdXQgZmF2b3VyYWJsZS4gRnVydGhlcm1vcmUsIGp1c3QgYXMgdGhlIHJpdGVzIHdlcmUgbmVhcmluZyB0aGUgZW5kLCB0aGUgc29vdGhzYXllciwgQXJleGlvbiB0aGUgUGFycmhhc2lhbiwgY2F1Z2h0IHNpZ2h0IG9mIGFuIGVhZ2xlIGluIGFuIGF1c3BpY2lvdXMgcXVhcnRlciwgYW5kIGJhZGUgWGVub3Bob24gbGVhZCBvbi4KPC90cmFuc2xhdGlvbj4="
translation['6.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlNvIHRoZXkgY3Jvc3NlZCB0aGUgdHJlbmNoIGFuZCBncm91bmRlZCBhcm1zOyB0aGVuIHRoZXkgbWFkZSBwcm9jbGFtYXRpb24gdGhhdCBhZnRlciB0YWtpbmcgYnJlYWtmYXN0IHRoZSB0cm9vcHMgd2VyZSB0byBtYXJjaCBvdXQgdW5kZXIgYXJtcywgd2hpbGUgdGhlIGNhbXAtZm9sbG93ZXJzIGFuZCBjYXB0aXZlcyB3ZXJlIHRvIGJlIGxlZnQgYmVoaW5kIHdoZXJlIHRoZXkgd2VyZS4KPC90cmFuc2xhdGlvbj4="
translation['6.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFsbCB0aGUgcmVzdCwgdGhlbiwgcHJvY2VlZGVkIHRvIHNldCBmb3J0aCwgc2F2ZSBvbmx5IE5lb247IGZvciBpdCBzZWVtZWQgYmVzdCB0byBsZWF2ZSBoaW0gYmVoaW5kIHRvIGtlZXAgZ3VhcmQgb3ZlciB3aGF0IHdhcyBpbiB0aGUgY2FtcC4gQnV0IHdoZW4gaGlzIGNhcHRhaW5zIGFuZCBzb2xkaWVycyBiZWdhbiB0byBhYmFuZG9uIGhpbSwgYmVpbmcgYXNoYW1lZCBub3QgdG8gZm9sbG93IGFsb25nIHdoZW4gdGhlIG90aGVycyB3ZXJlIHNldHRpbmcgb3V0LCB0aGUgZ2VuZXJhbHMgbGVmdCBiZWhpbmQgYXQgdGhlIGNhbXAgZXZlcnlib2R5IHdobyB3YXMgb3ZlciBmb3J0eS1maXZlIHllYXJzIG9mIGFnZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIG9yaWdpbmFsIHBsYW4gd2FzIHRvIGxlYXZlIE5lb24gYW5kIGhpcyBkaXZpc2lvbiB0byBndWFyZCB0aGUgY2FtcC4gQnV0IHNpbmNlIE5lb24ncyBtZW4gaW5zaXN0ZWQgdXBvbiBnb2luZyB3aXRoIHRoZSByZXN0LCB0aGUgZ2VuZXJhbHMgZGVjaWRlZCB0byBsZWF2ZSwgbm90IG9uZSBvZiB0aGUgcmVndWxhciBkaXZpc2lvbnMgb2YgdGhlIGFybXksIGJ1dCB0aGUgb2xkZXIgbWVuIGZyb20gdGhlIGVudGlyZSBhcm15Ljwvbm90ZT4gU28gdGhlc2UgcmVtYWluZWQgYW5kIHRoZSByZXN0IHRvb2sgdXAgdGhlIG1hcmNoLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkJlZm9yZSB0aGV5IGhhZCBnb25lIGZpZnRlZW4gc3RhZGlhIHRoZXkgYmVnYW4gdG8gbWVldCB3aXRoIGRlYWQgYm9kaWVzOyBhbmQgbWFyY2hpbmcgb24gdW50aWwgdGhleSBoYWQgYnJvdWdodCB0aGUgcmVhciBvZiB0aGVpciBjb2x1bW4gdG8gYSBwb2ludCBvcHBvc2l0ZSB0aGUgZmlyc3QgYm9kaWVzIHdoaWNoIGFwcGVhcmVkLCB0aGV5IHByb2NlZWRlZCB0byBidXJ5IGFsbCB0aGF0IHRoZSBjb2x1bW4gY292ZXJlZC4KPC90cmFuc2xhdGlvbj4="
translation['6.5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgdGhleSBoYWQgYnVyaWVkIHRoaXMgZmlyc3QgZ3JvdXAsIHRoZXkgbWFyY2hlZCBmb3J3YXJkIGFuZCBhZ2FpbiBicm91Z2h0IHRoZSByZWFyIG9mIHRoZSBjb2x1bW4gaW50byBsaW5lIHdpdGggdGhlIGZpcnN0IG9mIHRoZSBib2RpZXMgd2hpY2ggbGF5IGZhcnRoZXIgb24sIGFuZCB0aGVuIGluIHRoZSBzYW1lIHdheSB0aGV5IGJ1cmllZCBhbGwgdGhhdCB0aGUgYXJteSBjb3ZlcmVkLiBXaGVuLCBob3dldmVyLCB0aGV5IGhhZCByZWFjaGVkIHRoZSByb2FkIGxlYWRpbmcgb3V0IG9mIHRoZSB2aWxsYWdlcywgd2hlcmUgdGhlIGRlYWQgbGF5IHRoaWNrLCB0aGV5IGdhdGhlcmVkIHRoZW0gYWxsIHRvZ2V0aGVyIGZvciBidXJpYWwuCjwvdHJhbnNsYXRpb24+"
translation['6.5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3YXMgbm93IHBhc3QgbWlkZGF5LCBhbmQsIHN0aWxsIGxlYWRpbmcgdGhlIGFybXkgZm9yd2FyZCwgdGhleSB3ZXJlIGVuZ2FnZWQgaW4gZ2V0dGluZyBwcm92aXNpb25zIG91dHNpZGUgdGhlIHZpbGxhZ2Vz4oCUYW55dGhpbmcgdGhlcmUgd2FzIHRvIGJlIHNlZW4gd2l0aGluIHRoZSBsaW1pdHMgb2YgdGhlaXIgbGluZeKAlHdoZW4gc3VkZGVubHkgdGhleSBjYXVnaHQgc2lnaHQgb2YgdGhlIGVuZW15IHBhc3Npbmcgb3ZlciBzb21lIGhpbGxzIHdoaWNoIGxheSBvcHBvc2l0ZSB0aGVtLCBoaXMgZm9yY2UgY29uc2lzdGluZyBvZiBob3JzZW1lbiBpbiBsYXJnZSBudW1iZXJzIGFuZCBmb290IHNvbGRpZXJzLCBhbGwgaW4gYmF0dGxlIGZvcm1hdGlvbjsgaW4gZmFjdCwgaXQgd2FzIFNwaXRocmlkYXRlcyBhbmQgUmhhdGhpbmVzLCB3aG8gaGFkIGJlZW4gc2VudCBvdXQgd2l0aCB0aGVpciBhcm15IGJ5IFBoYXJuYWJhenVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgdGhlIGVuZW15IHNpZ2h0ZWQgdGhlIEdyZWVrcywgdGhleSBjYW1lIHRvIGEgaGFsdCwgYXQgYSBkaXN0YW5jZSBmcm9tIHRoZSBHcmVla3Mgb2YgYWJvdXQgZmlmdGVlbiBzdGFkaWEuIEhlcmV1cG9uIEFyZXhpb24sIHRoZSBzb290aHNheWVyIG9mIHRoZSBHcmVla3MsIGltbWVkaWF0ZWx5IG9mZmVyZWQgc2FjcmlmaWNlLCBhbmQgYXQgdGhlIGZpcnN0IHZpY3RpbSB0aGUgb21lbnMgcHJvdmVkIGZhdm91cmFibGUuIFRoZW4gWGVub3Bob24gc2FpZDoKPC90cmFuc2xhdGlvbj4="
translation['6.5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPuKAnEl0IHNlZW1zIHRvIG1lLCBmZWxsb3cgZ2VuZXJhbHMsIHRoYXQgd2Ugc2hvdWxkIHN0YXRpb24gcmVzZXJ2ZSBjb21wYW5pZXMgYmVoaW5kIG91ciBwaGFsYW54LCBzbyB0aGF0IHdlIG1heSBoYXZlIG1lbiB0byBjb21lIHRvIHRoZSBhaWQgb2YgdGhlIHBoYWxhbnggaWYgYWlkIGlzIG5lZWRlZCBhdCBhbnkgcG9pbnQsIGFuZCB0aGF0IHRoZSBlbmVteSwgYWZ0ZXIgdGhleSBoYXZlIGZhbGxlbiBpbnRvIGRpc29yZGVyLCBtYXkgY29tZSB1cG9uIHRyb29wcyB0aGF0IGFyZSBpbiBnb29kIG9yZGVyIGFuZCBmcmVzaC7igJ0gQWxsIHNoYXJlZCB0aGlzIG9waW5pb24uCjwvdHJhbnNsYXRpb24+"
translation['6.5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz7igJxXZWxsLCB0aGVuLOKAnSBzYWlkIFhlbm9waG9uLCDigJxkbyB5b3UgbGVhZCBvbiB0b3dhcmQgb3VyIGFkdmVyc2FyaWVzLCBpbiBvcmRlciB0aGF0IHdlIG1heSBub3QgYmUgc3RhbmRpbmcgc3RpbGwgbm93IHRoYXQgd2UgaGF2ZSBiZWVuIHNlZW4gYnkgdGhlIGVuZW15IGFuZCBoYXZlIHNlZW4gdGhlbTsgYW5kIEkgd2lsbCBjb21lIGFsb25nIGFmdGVyIGFycmFuZ2luZyB0aGUgaGluZG1vc3QgY29tcGFuaWVzIGluIHRoZSB3YXkgeW91IGhhdmUgZGVjaWRlZCB1cG9uLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5TbyB3aGlsZSB0aGUgb3RoZXJzIGxlZCBvbiBxdWlldGx5LCBoZSBkZXRhY2hlZCB0aGUgdGhyZWUgaGluZG1vc3QgYmF0dGFsaW9ucywgY29uc2lzdGluZyBvZiB0d28gaHVuZHJlZCBtZW4gZWFjaCwgYW5kIHR1cm5lZCB0aGUgZmlyc3Qgb25lIHRvIHRoZSByaWdodCB3aXRoIG9yZGVycyB0byBmb2xsb3cgYWZ0ZXIgdGhlIHBoYWxhbnggYXQgYSBkaXN0YW5jZSBvZiBhYm91dCBhIHBsZXRocnVtOyB0aGlzIGJhdHRhbGlvbiB3YXMgY29tbWFuZGVkIGJ5IFNhbW9sYXMgdGhlIEFjaGFlYW47IHRoZSBzZWNvbmQgYmF0dGFsaW9uIGhlIHBvc3RlZCBhdCB0aGUgY2VudHJlLCB0byBmb2xsb3cgb24gaW4gdGhlIHNhbWUgd2F5OyB0aGlzIG9uZSB3YXMgdW5kZXIgdGhlIGNvbW1hbmQgb2YgUHlycmhpYXMgdGhlIEFyY2FkaWFuOyBhbmQgdGhlIGxhc3Qgb25lIGhlIHN0YXRpb25lZCB1cG9uIHRoZSBsZWZ0LCBQaHJhc2lhcyB0aGUgQXRoZW5pYW4gYmVpbmcgaW4gY29tbWFuZCBvZiBpdC4KPC90cmFuc2xhdGlvbj4="
translation['6.5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoZW4sIGFzIHRoZXkgYWR2YW5jZWQsIHRoZSBtZW4gd2hvIHdlcmUgaW4gdGhlIGxlYWQgcmVhY2hlZCBhIGxhcmdlIHJhdmluZSwgZGlmZmljdWx0IHRvIHBhc3MsIHRoZXkgaGFsdGVkLCBpbiBkb3VidCBhcyB0byB3aGV0aGVyIHRoZXkgb3VnaHQgdG8gY3Jvc3MgdGhlIHJhdmluZTsgYW5kIHRoZXkgcGFzc2VkIGFsb25nIHdvcmQgZm9yIGdlbmVyYWxzIGFuZCBjYXB0YWlucyB0byBjb21lIHVwIHRvIHRoZSBmcm9udC4KPC90cmFuc2xhdGlvbj4="
translation['6.5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIFhlbm9waG9uLCB3b25kZXJpbmcgd2hhdCBpdCB3YXMgdGhhdCB3YXMgaG9sZGluZyB1cCB0aGUgbWFyY2ggYW5kIHNwZWVkaWx5IGhlYXJpbmcgdGhlIHN1bW1vbnMsIHJvZGUgZm9yd2FyZCBpbiBhbGwgaGFzdGUuIEFzIHNvb24gYXMgdGhlIG9mZmljZXJzIGhhZCBjb21lIHRvZ2V0aGVyLCBTb3BoYWVuZXR1cywgd2hvIHdhcyB0aGUgZWxkZXN0IG9mIHRoZSBnZW5lcmFscywgc2FpZCB0aGF0IGl0IHdhcyBub3QgYSBxdWVzdGlvbiB3b3J0aCBjb25zaWRlcmluZyB3aGV0aGVyIHRoZXkgb3VnaHQgdG8gY3Jvc3Mgc3VjaCBhIHJhdmluZSBhcyB0aGF0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+WGVub3Bob24gcmVqb2luZWQsIHdpdGggbXVjaCBlYXJuZXN0bmVzczog4oCcV2VsbCwgZ2VudGxlbWVuLCB5b3Uga25vdyB0aGF0IEkgaGF2ZSBuZXZlciB5ZXQgaW50cm9kdWNlZCB5b3UgdG8gYW55IGRhbmdlciB0aGF0IHdhcyBhIG1hdHRlciBvZiBjaG9pY2U7IGZvciBhcyBJIHNlZSB0aGUgc2l0dWF0aW9uLCB5b3UgZG8gbm90IHN0YW5kIGluIG5lZWQgb2YgcmVwdXRhdGlvbiBmb3IgYnJhdmVyeSwgYnV0IG9mIGEgc2FmZSByZXR1cm4uCjwvdHJhbnNsYXRpb24+"
translation['6.5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIGNvbmRpdGlvbnMgYXQgdGhpcyBtb21lbnQgYXJlIHRoZXNlOiB0aGVyZSBpcyBubyBwb3NzaWJpbGl0eSBvZiBvdXIgZ2V0dGluZyBhd2F5IGZyb20gaGVyZSB3aXRob3V0IGEgYmF0dGxlOyBmb3IgaWYgd2UgZG8gbm90IGFkdmFuY2UgdXBvbiB0aGUgZW5lbXkgb3Vyc2VsdmVzLCB0aGV5IHdpbGwgZm9sbG93IHVzIHdoZW4gd2UgdW5kZXJ0YWtlIHRvIHJldGlyZSBhbmQgZmFsbCB1cG9uIHVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5Db25zaWRlciwgdGhlbiwgd2hldGhlciBpdCBpcyBiZXR0ZXIgdG8gZ28gZm9yd2FyZCBhZ2FpbnN0IHRoZXNlIG1lbiB3aXRoIGFybXMgYWR2YW5jZWQsIG9yIHdpdGggYXJtcyByZXZlcnNlZCB0byBiZWhvbGQgdGhlIGVuZW15IGNvbWluZyB1cG9uIHVzIGZyb20gYmVoaW5kLiAKPC90cmFuc2xhdGlvbj4="
translation['6.5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5ZZXQgeW91IGtub3cgdGhhdCB0byByZXRpcmUgYmVmb3JlIGFuIGVuZW15IGRvZXMgbm90IGJlc2VlbSBhbnkgbWFuIG9mIGhvbm91ciwgd2hpbGUgdG8gYmUgaW4gcHVyc3VpdCBjcmVhdGVzIGNvdXJhZ2UgZXZlbiBpbiBjb3dhcmRzLiBGb3IgbXkgcGFydCwgYXQgYW55IHJhdGUsIEkgc2hvdWxkIHJhdGhlciBhZHZhbmNlIHRvIHRoZSBhdHRhY2sgd2l0aCBoYWxmIGFzIG1hbnkgbWVuIHRoYW4gdG8gcmV0cmVhdCB3aXRoIHR3aWNlIGFzIG1hbnkuIEFuZCBhcyB0byB0aG9zZSB0cm9vcHMgeW9uZGVyLCBJIGtub3cgdGhhdCBpZiB3ZSBhZHZhbmNlIHVwb24gdGhlbSwgeW91IGRvIG5vdCB5b3Vyc2VsdmVzIGV4cGVjdCB0aGVtIHRvIGF3YWl0IG91ciBhdHRhY2ssIHdoaWxlIGlmIHdlIHJldGlyZSwgd2UgYWxsIGtub3cgdGhhdCB0aGV5IHdpbGwgaGF2ZSB0aGUgY291cmFnZSB0byBwdXJzdWUgdXMuCjwvdHJhbnNsYXRpb24+"
translation['6.5.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgdG8gY3Jvc3MgYSBkaWZmaWN1bHQgcmF2aW5lIGFuZCBnZXQgaXQgaW4geW91ciByZWFyIHdoZW4geW91IGFyZSBhYm91dCB0byBmaWdodCwgaXMgbm90IHRoYXQgYW4gb3Bwb3J0dW5pdHkgcmVhbGx5IHdvcnRoIHNlaXppbmc/IEZvciBpdCBpcyB0byB0aGUgZW5lbXkgdGhhdCBJIHNob3VsZCBteXNlbGYgd2lzaCB0byBoYXZlIGFsbCByb2FkcyBzZWVtIGVhc3nigJRmb3IgdGhlaXIgcmV0cmVhdDsgYXMgZm9yIG91cnNlbHZlcywgd2Ugb3VnaHQgdG8gbGVhcm4gZnJvbSB0aGUgdmVyeSBncm91bmQgYmVmb3JlIHVzIHRoYXQgdGhlcmUgaXMgbm8gc2FmZXR5IGZvciB1cyBleGNlcHQgaW4gdmljdG9yeS4KPC90cmFuc2xhdGlvbj4="
translation['6.5.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5JIGRvIHdvbmRlciwgaG93ZXZlciwgdGhhdCBhbnkgb25lIHJlZ2FyZHMgdGhpcyBwYXJ0aWN1bGFyIHJhdmluZSBhcyBtb3JlIGRyZWFkZnVsIHRoYW4gdGhlIHJlc3Qgb2YgdGhlIGNvdW50cnkgd2UgaGF2ZSBqdXN0IG1hcmNoZWQgdGhyb3VnaC4gRm9yIGhvdyBpcyB0aGF0IHBsYWluIHRvIGJlIHJlY3Jvc3NlZCB1bmxlc3Mgd2UgYXJlIHZpY3RvcmlvdXMgb3ZlciB0aGUgZW5lbXkncyBob3JzZW1lbj8gaG93IHRoZSBtb3VudGFpbnMgd2hpY2ggd2UgaGF2ZSBwYXNzZWQgdGhyb3VnaCwgaWYgc3VjaCBhIHRocm9uZyBvZiBwZWx0YXN0cyBhcmUgdG8gYmUgZm9sbG93aW5nIGF0IG91ciBoZWVscz8KPC90cmFuc2xhdGlvbj4="
translation['6.5.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgaWYgd2UgZG8gcmVhY2ggdGhlIHNlYSBpbiBzYWZldHksIHdoYXQgYSBncmVhdCByYXZpbmUsIG9uZSBtYXkgc2F5LCBpcyB0aGUgRXV4aW5lISB3aGVyZSB3ZSBoYXZlIG5laXRoZXIgc2hpcHMgdG8gdGFrZSB1cyBhd2F5IG5vciBmb29kIHRvIHN1YnNpc3QgdXBvbiBpZiB3ZSByZW1haW4sIHdoaWxlIHRoZSBzb29uZXIgd2UgcmVhY2ggdGhlcmUsIHRoZSBzb29uZXIgd2Ugc2hhbGwgaGF2ZSB0byBiZSBvZmYgYWdhaW4gaW4gcXVlc3Qgb2YgcHJvdmlzaW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['6.5.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5XZWxsLCB0aGVuLCBpdCBpcyBiZXR0ZXIgdG8gZmlnaHQgdG8tZGF5LCB3aXRoIG91ciBicmVha2Zhc3QgYWxyZWFkeSBlYXRlbiwgdGhhbiB0by1tb3Jyb3cgYnJlYWtmYXN0bGVzcy4gR2VudGxlbWVuLCBvdXIgc2FjcmlmaWNpYWwgdmljdGltcyB3ZXJlIGZhdm91cmFibGUsIHRoZSBiaXJkLW9tZW5zIGF1c3BpY2lvdXMsIHRoZSBvbWVucyBvZiB0aGUgc2FjcmlmaWNlIG1vc3QgZmF2b3VyYWJsZTsgbGV0IHVzIGFkdmFuY2UgdXBvbiB0aGUgZW5lbXkuIFRoZXNlIGZlbGxvd3MsIG5vdyB0aGF0IHRoZXkgaGF2ZSBzZWVuIHVzIGF0IGFsbCwgbXVzdCBub3QgYWdhaW4gZ2V0IGEgcGxlYXNhbnQgZGlubmVyIG9yIGVuY2FtcCB3aGVyZXZlciB0aGV5IHBsZWFzZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['6.5.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhhdCB0aGUgY2FwdGFpbnMgYmFkZSBoaW0gbGVhZCBvbiwgYW5kIG5vIG9uZSBzcG9rZSBpbiBvcHBvc2l0aW9uLiBTbyBoZSBsZWQgdGhlIHdheSwgYWZ0ZXIgZ2l2aW5nIG9yZGVycyB0aGF0IGV2ZXJ5IG1hbiBzaG91bGQgY3Jvc3MgYXQgd2hhdGV2ZXIgcG9pbnQgYWxvbmcgdGhlIHJhdmluZSBoZSBjaGFuY2VkIHRvIGJlOyBmb3IgaXQgc2VlbWVkIHRoYXQgaW4gdGhpcyB3YXkgdGhlIGFybXkgd291bGQgZ2V0IHRvZ2V0aGVyIG9uIHRoZSBmdXJ0aGVyIHNpZGUgbW9yZSBxdWlja2x5IHRoYW4gaWYgdGhleSBkZWZpbGVkIGFsb25nIHRoZSBicmlkZ2Ugd2hpY2ggd2FzIG92ZXIgdGhlIHJhdmluZS4KPC90cmFuc2xhdGlvbj4="
translation['6.5.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgaGFkIGNyb3NzZWQsIGhlIHdlbnQgYWxvbmcgdGhlIGxpbmVzIGFuZCBzYWlkOiDigJxTb2xkaWVycywgcmVtZW1iZXIgaG93IG1hbnkgYmF0dGxlcyB5b3UgaGF2ZSB3b24sIHdpdGggdGhlIGhlbHAgb2YgdGhlIGdvZHMsIGJ5IGNvbWluZyB0byBjbG9zZSBxdWFydGVycywgcmVtZW1iZXIgd2hhdCBhIGZhdGUgdGhleSBzdWZmZXIgd2hvIGZsZWUgZnJvbSB0aGUgZW5lbXksIGFuZCBiZXRoaW5rIHlvdSBvZiB0aGlzLCB0aGF0IHdlIGFyZSBhdCB0aGUgZG9vcnMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5Gb2xsb3cgSGVyYWNsZXMgdGhlIExlYWRlciBhbmQgc3VtbW9uIG9uZSBhbm90aGVyIG9uLCBjYWxsaW5nIGVhY2ggbWFuIGJ5IG5hbWUuIEl0IHdpbGwgc3VyZWx5IGJlIHN3ZWV0LCB0aHJvdWdoIHNvbWUgbWFubHkgYW5kIG5vYmxlIHRoaW5nIHdoaWNoIG9uZSBtYXkgc2F5IG9yIGRvIHRvLWRheSwgdG8ga2VlcCBoaW1zZWxmIGluIHJlbWVtYnJhbmNlIGFtb25nIHRob3NlIHdob20gaGUgd2lzaGVzIHRvIHJlbWVtYmVyIGhpbS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['6.5.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGh1cyBoZSBzcG9rZSBhcyBoZSByb2RlIGFsb25nLCB3aGlsZSBhdCB0aGUgc2FtZSB0aW1lIGhlIGJlZ2FuIHRvIGxlYWQgdGhlIHRyb29wcyBvbiBzbG93bHkgaW4gbGluZSBvZiBiYXR0bGU7IGFuZCBhZnRlciB0aGV5IGhhZCBnb3QgdGhlIHBlbHRhc3RzIGludG8gcG9zaXRpb24gb24gZWl0aGVyIGZsYW5rLCB0aGV5IHRvb2sgdXAgdGhlIG1hcmNoIGFnYWluc3QgdGhlIGVuZW15LiBUaGUgb3JkZXJzIGhhZCBiZWVuIHRvIGtlZXAgdGhlaXIgc3BlYXJzIG9uIHRoZSByaWdodCBzaG91bGRlciB1bnRpbCBhIHNpZ25hbCBzaG91bGQgYmUgZ2l2ZW4gd2l0aCB0aGUgdHJ1bXBldDsgdGhlbiwgbG93ZXJpbmcgdGhlbSBmb3IgdGhlIGF0dGFjaywgdG8gZm9sbG93IG9uIHNsb3dseSwgbm9ib2R5IHRvIGJyZWFrIGludG8gYSBydW4uIEFuZCBub3cgdGhlIHdhdGNod29yZCB3YXMgcGFzc2VkIGFsb25nLCDigJxaZXVzIFNhdmlvdXIsIEhlcmFjbGVzIExlYWRlci7igJ0gTWVhbndoaWxlIHRoZSBlbmVteSB3ZXJlIHN0YW5kaW5nIHRoZWlyIGdyb3VuZCwgdGhpbmtpbmcgdGhhdCB0aGUgcG9zaXRpb24gdGhleSBoZWxkIHdhcyBhIGdvb2Qgb25lLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSBHcmVla3Mgd2VyZSBkcmF3aW5nIG5lYXIsIHRoZSBwZWx0YXN0cyByYWlzZWQgdGhlIGJhdHRsZS1jcnkgYW5kIHByb2NlZWRlZCB0byBjaGFyZ2UgdXBvbiB0aGUgZW5lbXkgd2l0aG91dCB3YWl0aW5nIGZvciBhbnkgb3JkZXI7IGFuZCB0aGUgZW5lbXkgcnVzaGVkIGZvcndhcmQgdG8gbWVldCB0aGVtLCBib3RoIHRoZSBob3JzZW1lbiBhbmQgdGhlIG1hc3Mgb2YgdGhlIEJpdGh5bmlhbnMsIGFuZCB0aGV5IHB1dCB0aGUgcGVsdGFzdHMgdG8gcm91dC4KPC90cmFuc2xhdGlvbj4="
translation['6.5.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGUgcGhhbGFueCBvZiB0aGUgaG9wbGl0ZXMga2VwdCBtb3Zpbmcgb24gdG8gbWVldCB0aGVtLCBtYXJjaGluZyByYXBpZGx5LCBhbmQgYXQgdGhlIHNhbWUgdGltZSB0aGUgdHJ1bXBldCBzb3VuZGVkLCBhbmQgdGhleSBzdHJ1Y2sgdXAgdGhlIHBhZWFuIGFuZCBhZnRlciB0aGF0IHJhaXNlZCB0aGUgYmF0dGxlLWNyeSwgYW5kIGF0IHRoZSBzYW1lIG1vbWVudCBjb3VjaGVkIHRoZWlyIHNwZWFycywgdGhlbiB0aGUgZW5lbXkgbm8gbG9uZ2VyIGF3YWl0ZWQgdGhlIGF0dGFjaywgYnV0IHRvb2sgdG8gZmxpZ2h0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5UaW1hc2lvbiBhbmQgdGhlIGNhdmFscnkgcHVyc3VlZCwgYW5kIGtpbGxlZCBhcyBtYW55IGFzIHRoZXkgY291bGQsIGNvbnNpZGVyaW5nIHRoZWlyIG93biBzbWFsbCBudW1iZXJzLiBOb3cgdGhlIGxlZnQgd2luZyBvZiB0aGUgZW5lbXksIG9wcG9zaXRlIHdoaWNoIHRoZSBHcmVlayBjYXZhbHJ5IHdlcmUgc3RhdGlvbmVkLCB3YXMgZGlzcGVyc2VkIGF0IG9uY2UsIGJ1dCB0aGUgcmlnaHQsIHNpbmNlIGl0IHdhcyBub3Qgdmlnb3JvdXNseSBwdXJzdWVkLCBnb3QgdG9nZXRoZXIgdXBvbiBhIGhpbGwuCjwvdHJhbnNsYXRpb24+"
translation['6.5.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIHRoZSBHcmVla3Mgc2F3IHRoYXQgdGhleSB3ZXJlIHN0YW5kaW5nIHRoZWlyIGdyb3VuZCB0aGVyZSwgdGhleSBkZWVtZWQgaXQgdGhlIGVhc2llc3QgYW5kIHNhZmVzdCBjb3Vyc2UgdG8gY2hhcmdlIHVwb24gdGhlbSBpbW1lZGlhdGVseS4gVGhleSBhY2NvcmRpbmdseSBzdHJ1Y2sgdXAgdGhlIHBhZWFuIGFuZCBtb3ZlZCB1cG9uIHRoZW0gYXQgb25jZTsgYW5kIHRoZXkgc3Rvb2Qgbm8gbG9uZ2VyLiBUaGVyZXVwb24gdGhlIHBlbHRhc3RzIHB1cnN1ZWQgdW50aWwgdGhlIHJpZ2h0IHdpbmcgd2FzIGRpc3BlcnNlZDsgYnV0IGZldyBvZiB0aGUgZW5lbXksIGhvd2V2ZXIsIHdlcmUga2lsbGVkLCBmb3IgaGlzIGNhdmFscnksIG51bWVyb3VzIGFzIHRoZXkgd2VyZSwgaW5zcGlyZWQgZmVhci4KPC90cmFuc2xhdGlvbj4="
translation['6.5.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGUgR3JlZWtzIHNhdyB0aGUgY2F2YWxyeSBvZiBQaGFybmFiYXp1cyBzdGFuZGluZyB3aXRoIHJhbmtzIHN0aWxsIHVuYnJva2VuLCBhbmQgdGhlIEJpdGh5bmlhbiBob3JzZW1lbiBnYXRoZXJpbmcgdG9nZXRoZXIgdG8gam9pbiB0aGlzIGZvcmNlIGFuZCBsb29raW5nIGRvd24gZnJvbSBhIGhpbGwgYXQgd2hhdCB3YXMgZ29pbmcgb24sIGFsdGhvdWdoIHRoZXkgd2VyZSB0aXJlZCB0aGV5IG5ldmVydGhlbGVzcyB0aG91Z2h0IHRoYXQgdGhleSBtdXN0IG1ha2UgYXMgc3RvdXQgYW4gYXR0YWNrIGFzIHRoZXkgY291bGQgdXBvbiB0aGVzZSB0cm9vcHMgYWxzbywgc28gdGhhdCB0aGV5IHNob3VsZCBub3QgYmUgYWJsZSB0byByZWdhaW4gY291cmFnZSBhbmQgZ2V0IHJlc3RlZC4gQWNjb3JkaW5nbHksIHRoZXkgZm9ybWVkIHRoZWlyIGxpbmVzIGFuZCBzZXQgZm9ydGguCjwvdHJhbnNsYXRpb24+"
translation['6.5.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gdGhlIGVuZW15J3MgaG9yc2VtZW4gZmxlZCBkb3duIHRoZSBzbG9wZSBqdXN0IGFzIGlmIHRoZXkgd2VyZSBiZWluZyBwdXJzdWVkIGJ5IGhvcnNlbWVuOzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIG1hbiBwdXJzdWVkIGJ5IGhvcnNlbWVuIHRha2VzIHRvIHJvdWdoIGNvdW50cnksIHdoZXJlIGhvcnNlbWVuIGFyZSBoZWxwbGVzcy4gSW4gdGhlIHByZXNlbnQgY2FzZSwgdGhlcmVmb3JlLCB0aGUgaG9zdGlsZSBob3JzZW1lbiBkaWQgcHJlY2lzZWx5IHRoZSB3cm9uZyB0aGluZywgYW5kIHdvdWxkIHByb2JhYmx5IGhhdmUgc3VmZmVyZWQgc2V2ZXJlIGxvc3NlcyBpZiB0aGUgR3JlZWtzIGhhZCBjb250aW51ZWQgdGhlaXIgcHVyc3VpdC48L25vdGU+IGZvciBhIHJhdmluZSB3YXMgd2FpdGluZyB0byByZWNlaXZlIHRoZW0sIGFsdGhvdWdoIHRoZSBHcmVla3Mgd2VyZSBub3QgYXdhcmUgb2YgdGhlIGZhY3QgYW5kIGhlbmNlIHR1cm5lZCBhc2lkZSBmcm9tIHRoZWlyIHB1cnN1aXQgYmVmb3JlIHJlYWNoaW5nIGl0OyBmb3IgaXQgd2FzIG5vdyBsYXRlIGluIHRoZSBkYXkuCjwvdHJhbnNsYXRpb24+"
translation['6.5.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5TbyBhZnRlciByZXR1cm5pbmcgdG8gdGhlIHNwb3Qgd2hlcmUgdGhlIGZpcnN0IGVuY291bnRlciB0b29rIHBsYWNlIGFuZCBlcmVjdGluZyBhIHRyb3BoeSwgdGhleSBzZXQgb3V0IG9uIHRoZWlyIHdheSBiYWNrIHRvIHRoZSBzZWEgYXQgYWJvdXQgc3Vuc2V0OyBhbmQgdGhlIGRpc3RhbmNlIHRvIHRoZSBjYW1wIHdhcyBhYm91dCBzaXh0eSBzdGFkaWEuCjwvdHJhbnNsYXRpb24+"
translation['6.6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZSBlbmVteSBvY2N1cGllZCB0aGVtc2VsdmVzIHdpdGggdGhlaXIgb3duIGNvbmNlcm5zLCBlc3BlY2lhbGx5IHJlbW92aW5nIHRoZWlyIHNsYXZlcyBhbmQgcHJvcGVydHkgdG8gdGhlIHJlbW90ZXN0IHBvaW50IHRoZXkgY291bGQ7IG1lYW53aGlsZSB0aGUgR3JlZWtzIHdlcmUgd2FpdGluZyBmb3IgQ2xlYW5kZXIgYW5kIHRoZSB0cmlyZW1lcyBhbmQgc2hpcHMgd2hpY2ggd2VyZSwgcHJlc3VtYWJseSwgY29taW5nLCBidXQgZXZlcnkgZGF5IHRoZXkgc2V0IGZvcnRoIHdpdGggdGhlaXIgYmFnZ2FnZSBhbmltYWxzIGFuZCBzbGF2ZXMgYW5kIGZlYXJsZXNzbHkgY2FycmllZCBvZmYgd2hlYXQgYW5kIGJhcmxleSwgd2luZSwgYmVhbnMsIG1pbGxldCwgYW5kIGZpZ3M7IGZvciB0aGUgY291bnRyeSBoYWQgYWxsIG1hbm5lciBvZiBnb29kIHRoaW5ncywgZXhjZXB0IG9saXZlIG9pbC4KPC90cmFuc2xhdGlvbj4="
translation['6.6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW5ldmVyIHRoZSBhcm15IHJlbWFpbmVkIGluIGNhbXAgYW5kIHJlc3RlZCwgaW5kaXZpZHVhbHMgd2VyZSBwZXJtaXR0ZWQgdG8gZ28gb3V0IGFmdGVyIHBsdW5kZXIsIGFuZCBpbiB0aGF0IGNhc2Uga2VwdCB3aGF0IHRoZXkgZ290OyBidXQgd2hlbmV2ZXIgdGhlIGVudGlyZSBhcm15IHNldCBvdXQsIGlmIGFuIGluZGl2aWR1YWwgd2VudCBvZmYgYnkgaGltc2VsZiBhbmQgZ290IGFueXRoaW5nLCBpdCB3YXMgZGVjcmVlZCB0byBiZSBwdWJsaWMgcHJvcGVydHkuCjwvdHJhbnNsYXRpb24+"
translation['6.6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBieSB0aGlzIHRpbWUgdGhlcmUgd2FzIGFuIGFidW5kYW5jZSBvZiBldmVyeXRoaW5nLCBmb3IgbWFya2V0IHByb2R1Y3RzIGNhbWUgaW4gZnJvbSB0aGUgR3JlZWsgY2l0aWVzIG9uIGFsbCBzaWRlcywgYW5kIHBlb3BsZSBjb2FzdGluZyBwYXN0IHdlcmUgZ2xhZCB0byBwdXQgaW4sIHNpbmNlIHRoZXkgaGVhcmQgdGhhdCBhIGNpdHkgd2FzIGJlaW5nIGZvdW5kZWQgYW5kIHRoYXQgdGhlcmUgd2FzIGEgaGFyYm91ci4KPC90cmFuc2xhdGlvbj4="
translation['6.6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkV2ZW4gdGhlIGhvc3RpbGUgcGVvcGxlcyB3aG8gZHdlbHQgbmVhciBieSBiZWdhbiBub3cgdG8gc2VuZCBlbnZveXMgdG8gWGVub3Bob27igJRmb3IgdGhleSBoZWFyZCB0aGF0IGhlIHdhcyB0aGUgbWFuIHdobyB3YXMgbWFraW5nIGEgY2l0eSBvZiB0aGUgcGxhY2XigJR0byBhc2sgd2hhdCB0aGV5IG11c3QgZG8gaW4gb3JkZXIgdG8gYmUgaGlzIGZyaWVuZHM7IGFuZCBYZW5vcGhvbiB3b3VsZCBhbHdheXMgc2hvdyB0aGVzZSBlbnZveXMgdG8gdGhlIHNvbGRpZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFud2hpbGUgQ2xlYW5kZXIgYXJyaXZlZCB3aXRoIHR3byB0cmlyZW1lcywgYnV0IG5vdCBhIHNpbmdsZSBtZXJjaGFudCBzaGlwLiBJdCBzbyBjaGFuY2VkIHRoYXQgdGhlIGFybXkgd2FzIG91dCBmb3JhZ2luZyB3aGVuIGhlIGFycml2ZWQsIHdoaWxlIGNlcnRhaW4gaW5kaXZpZHVhbHMgaGFkIGdvbmUgaW4gcXVlc3Qgb2YgcGx1bmRlciB0byBhIGRpZmZlcmVudCBwbGFjZSBpbiB0aGUgbW91bnRhaW5zIGFuZCBoYWQgc2VjdXJlZCBhIGxhcmdlIG51bWJlciBvZiBzaGVlcDsgc28gZmVhcmluZyB0aGF0IHRoZXkgbWlnaHQgYmUgZGVwcml2ZWQgb2YgdGhlbSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBhYm92ZS1tZW50aW9uZWQgKCAgMikgZGVjcmVlLjwvbm90ZT4gdGhleSB0b2xkIHRoZWlyIHN0b3J5IHRvIERleGlwcHVzLCB0aGUgbWFuIHdobyBzbGlwcGVkIGF3YXkgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRyYXBlenVzLEFyY2FkaWEiPlRyYXBlenVzPC9wbGFjZU5hbWU+IHdpdGggdGhlIGZpZnR5LW9hcmVkIHdhcnNoaXAsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDUuMS4xNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjEuMTU8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDYuMS4zMiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA2LjEuMzI8L2JpYmw+LiBEZXhpcHB1cyBoYWQgbWFuaWZlc3RseSBhY2NvbXBhbmllZCBDbGVhbmRlciB0byBDYWxwZSBIYXJib3VyLjwvbm90ZT4gYW5kIHVyZ2VkIGhpbSB0byBzYXZlIHRoZWlyIHNoZWVwIGZvciB0aGVtLCB3aXRoIHRoZSB1bmRlcnN0YW5kaW5nIHRoYXQgaGUgd2FzIHRvIGdldCBzb21lIG9mIHRoZSBzaGVlcCBoaW1zZWxmIGFuZCBnaXZlIHRoZSByZXN0IGJhY2sgdG8gdGhlbS4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjEuMTUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS4xLjE1PC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA2LjEuMzIiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNi4xLjMyPC9iaWJsPi4gRGV4aXBwdXMgaGFkIG1hbmlmZXN0bHkgYWNjb21wYW5pZWQgQ2xlYW5kZXIgdG8gQ2FscGUgSGFyYm91ci48L3RyYW5zbGF0aW9uPg=="
translation['6.6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlNvIGhlIGltbWVkaWF0ZWx5IHByb2NlZWRlZCB0byBkcml2ZSBhd2F5IHRoZSBzb2xkaWVycyB3aG8gd2VyZSBzdGFuZGluZyBhYm91dCBhbmQgZGVjbGFyaW5nIHRoYXQgdGhlIGFuaW1hbHMgd2VyZSBwdWJsaWMgcHJvcGVydHksIGFuZCB0aGVuIGhlIHdlbnQgYW5kIHRvbGQgQ2xlYW5kZXIgdGhhdCB0aGV5IHdlcmUgYXR0ZW1wdGluZyByb2JiZXJ5LiBDbGVhbmRlciBkaXJlY3RlZCBoaW0gdG8gYnJpbmcgdGhlIHJvYmJlciBiZWZvcmUgaGltLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlNvIGhlIHNlaXplZCBhIG1hbiBhbmQgdHJpZWQgdG8gdGFrZSBoaW0gdG8gQ2xlYW5kZXIsIGJ1dCBBZ2FzaWFzLCBoYXBwZW5pbmcgdG8gbWVldCB0aGVtLCByZXNjdWVkIHRoZSBtYW4sIGZvciBoZSB3YXMgb25lIG9mIGhpcyBjb21wYW55LiBUaGVuIHRoZSBvdGhlciBzb2xkaWVycyB3aG8gd2VyZSBhdCBoYW5kIHNldCB0byB3b3JrIHRvIHN0b25lIERleGlwcHVzLCBjYWxsaW5nIGhpbSDigJxUaGUgdHJhaXRvci7igJ0gQW5kIG1hbnkgb2YgdGhlIHNhaWxvcnMgZnJvbSB0aGUgdHJpcmVtZXMgZ290IGZyaWdodGVuZWQgYW5kIGJlZ2FuIHRvIGZsZWUgdG93YXJkIHRoZSBzZWEsIGFuZCBDbGVhbmRlciBhbHNvIGZsZWQuCjwvdHJhbnNsYXRpb24+"
translation['6.6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlhlbm9waG9uLCBob3dldmVyLCBhbmQgdGhlIG90aGVyIGdlbmVyYWxzIHRyaWVkIHRvIGhvbGQgdGhlbSBiYWNrLCBhbmQgdG9sZCBDbGVhbmRlciB0aGF0IG5vdGhpbmcgd2FzIHRoZSBtYXR0ZXIsIGJ1dCB0aGF0IHRoZSByZXNvbHV0aW9uIG9mIHRoZSBhcm15IHdhcyB0aGUgcmVhc29uIGZvciB0aGlzIGluY2lkZW50IHRha2luZyBwbGFjZS4KPC90cmFuc2xhdGlvbj4="
translation['6.6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBDbGVhbmRlciwgZ29hZGVkIG9uIGJ5IERleGlwcHVzIGFuZCBhbmdlcmVkIG9uIGhpcyBvd24gYWNjb3VudCBhbHNvIGJlY2F1c2UgaGUgaGFkIGJlZW4gZnJpZ2h0ZW5lZCwgZGVjbGFyZWQgdGhhdCBoZSB3b3VsZCBzYWlsIGF3YXkgYW5kIGlzc3VlIGEgcHJvY2xhbWF0aW9uIGZvcmJpZGRpbmcgYW55IGNpdHkgdG8gcmVjZWl2ZSB0aGVtLCBvbiB0aGUgZ3JvdW5kIHRoYXQgdGhleSB3ZXJlIGVuZW1pZXMuIEFuZCBhdCB0aGlzIHRpbWUgdGhlIExhY2VkYWVtb25pYW5zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkNsZWFuZGVyIHdhcyBMYWNlZGFlbW9uaWFuIGhhcm1vc3QsIG9yIGdvdmVybm9yLCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEJ5emFudGl1bSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQnl6YW50aXVtIj5CeXphbnRpdW08L3BsYWNlTmFtZT4gKDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNi4xLjEzIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDYuMS4xMzwvYmlibD4pLjwvbm90ZT4gaGVsZCB0aGUgaGVnZW1vbnkgb3ZlciBhbGwgdGhlIEdyZWVrcy4KPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxCeXphbnRpdW0iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEJ5emFudGl1bSI+Qnl6YW50aXVtPC9wbGFjZU5hbWU+ICg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDYuMS4xMyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA2LjEuMTM8L2JpYmw+KS48L3RyYW5zbGF0aW9uPg=="
translation['6.6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIHRoaXMgdGhlIGFmZmFpciBzZWVtZWQgdG8gdGhlIEdyZWVrcyBhIGJhZCBidXNpbmVzcywgYW5kIHRoZXkgYmVnZ2VkIENsZWFuZGVyIG5vdCB0byBjYXJyeSBvdXQgaGlzIGludGVudGlvbi4gSGUgcmVwbGllZCB0aGF0IG5vIG90aGVyIGNvdXJzZSB3b3VsZCBiZSB0YWtlbiB1bmxlc3MgdGhleSBzaG91bGQgZGVsaXZlciB1cCB0aGUgbWFuIHdobyBiZWdhbiB0aGUgc3RvbmluZyBhbmQgdGhlIG9uZSB3aG8gcmVzY3VlZCBEZXhpcHB1cycgcHJpc29uZXIuCjwvdHJhbnNsYXRpb24+"
translation['6.6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgQWdhc2lhcywgd2hvbSBoZSB0aHVzIGRlbWFuZGVkLCBoYWQgYmVlbiBhIGZyaWVuZCBvZiBYZW5vcGhvbidzIGFsbCB0aHJvdWdo4oCUd2hpY2ggd2FzIHRoZSB2ZXJ5IHJlYXNvbiB3aHkgRGV4aXBwdXMgd2FzIHNsYW5kZXJpbmcgaGltLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGF0IHRoZSBjb21tYW5kZXJzLCBwZXJwbGV4ZWQgYXMgdGhleSB3ZXJlLCBjYWxsZWQgYSBtZWV0aW5nIG9mIHRoZSBhcm15OyBhbmQgd2hpbGUgc29tZSBvZiB0aGVtIG1hZGUgbGlnaHQgb2YgQ2xlYW5kZXIsIFhlbm9waG9uIHRob3VnaHQgdGhhdCBpdCB3YXMgbm8gdHJpZmxpbmcgbWF0dGVyLCBhbmQgaGUgYXJvc2UgYW5kIHNhaWQ6CjwvdHJhbnNsYXRpb24+"
translation['6.6.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz7igJxGZWxsb3cgc29sZGllcnMsIGl0IHNlZW1zIHRvIG1lIGl0IGlzIG5vIHRyaWZsaW5nIG1hdHRlciBpZiBDbGVhbmRlciBpcyB0byBnbyBhd2F5IHdpdGggc3VjaCBhbiBpbnRlbnRpb24gdG93YXJkIHVzIGFzIGhlIGhhcyBleHByZXNzZWQuIEZvciB0aGUgR3JlZWsgY2l0aWVzIGFyZSBjbG9zZSBieSwgdGhlIExhY2VkYWVtb25pYW5zIHN0YW5kIGFzIHRoZSBsZWFkZXJzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgYW5kIHRoZXkgYXJlIGFibGUsIG5heSwgYW55IHNpbmdsZSBMYWNlZGFlbW9uaWFuIGlzIGFibGUsIHRvIGFjY29tcGxpc2ggaW4gdGhlIGNpdGllcyB3aGF0ZXZlciBoZSBwbGVhc2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.6.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5IZW5jZSBpZiB0aGlzIG1hbiBzaGFsbCBiZWdpbiBieSBzaHV0dGluZyB1cyBvdXQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxCeXphbnRpdW0iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEJ5emFudGl1bSI+Qnl6YW50aXVtPC9wbGFjZU5hbWU+LCBhbmQgdGhlbiBzaGFsbCBzZW5kIHdvcmQgdG8gdGhlIG90aGVyIGdvdmVybm9ycyBub3QgdG8gcmVjZWl2ZSB1cyBpbnRvIHRoZWlyIGNpdGllcywgb24gdGhlIGdyb3VuZCB0aGF0IHdlIGFyZSBkaXNvYmVkaWVudCB0byB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIGxhd2xlc3MsIGFuZCBpZiwgZnVydGhlciwgdGhpcyByZXBvcnQgYWJvdXQgdXMgc2hhbGwgcmVhY2ggQW5heGliaXVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjEuNCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjEuNDwvYmlibD4gYW5kIG5vdGUgdGhlcmVvbi48L25vdGU+IHRoZSBMYWNlZGFlbW9uaWFuIGFkbWlyYWwsIGl0IHdpbGwgYmUgZGlmZmljdWx0IGZvciB1cyBlaXRoZXIgdG8gcmVtYWluIG9yIHRvIHNhaWwgYXdheTsgZm9yIGF0IHByZXNlbnQgdGhlIExhY2VkYWVtb25pYW5zIGFyZSBzdXByZW1lIGJvdGggb24gbGFuZCBhbmQgc2VhLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDUuMS40IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuMS40PC9iaWJsPiBhbmQgbm90ZSB0aGVyZW9uLjwvdHJhbnNsYXRpb24+"
translation['6.6.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIHJlc3Qgb2YgdXMgbXVzdCBub3QgYmUga2VwdCBhd2F5IGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IGZvciB0aGUgc2FrZSBvZiBvbmUgb3IgdHdvIG1lbiwgYnV0IHdlIG11c3Qgb2JleSB3aGF0ZXZlciBvcmRlciB0aGUgTGFjZWRhZW1vbmlhbnMgbWF5IGdpdmUgdXM7IGZvciB0aGUgY2l0aWVzIGZyb20gd2hpY2ggd2UgY29tZSBsaWtld2lzZSBvYmV5IHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['6.6.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgbXkgb3duIHBhcnQsIHRoZXJlZm9yZSzigJRmb3IgSSBoZWFyIHRoYXQgRGV4aXBwdXMgaXMgc2F5aW5nIHRvIENsZWFuZGVyIHRoYXQgQWdhc2lhcyB3b3VsZCBub3QgaGF2ZSBkb25lIHdoYXQgaGUgZGlkIGlmIEkgaGFkIG5vdCBnaXZlbiBoaW0gdGhlIG9yZGVyLOKAlGZvciBteSBvd24gcGFydCwgSSBzYXksIEkgcmVsaWV2ZSBib3RoIHlvdSBhbmQgQWdhc2lhcyBvZiB0aGUgYWNjdXNhdGlvbiBpZiBBZ2FzaWFzIGhpbXNlbGYgc2hhbGwgc2F5IHRoYXQgSSB3YXMgaW4gYW55IHdheSByZXNwb25zaWJsZSBmb3IgdGhpcyBvY2N1cnJlbmNlLCBhbmQgSSBwYXNzIGp1ZGdtZW50IGFnYWluc3QgbXlzZWxmLCBpZiBJIGhhdmUgdGFrZW4gdGhlIGxlYWQgaW4gc3RvbmUtdGhyb3dpbmcgb3IgYW55IG90aGVyIHNvcnQgb2YgdmlvbGVuY2UsIHRoYXQgSSBkZXNlcnZlIHRvIHN1ZmZlciB0aGUgdXR0ZXJtb3N0IHBlbmFsdHksIGFuZCBJIHNoYWxsIHN1Ym1pdCB0byB0aGUgcGVuYWx0eS4KPC90cmFuc2xhdGlvbj4="
translation['6.6.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgSSBtYWludGFpbiBhbHNvIHRoYXQgaWYgaGUgaG9sZHMgYW55IG9uZSBlbHNlIHJlc3BvbnNpYmxlLCB0aGF0IG1hbiBvdWdodCB0byBwdXQgaGltc2VsZiBpbiBDbGVhbmRlcidzIGhhbmRzIGZvciB0cmlhbDsgZm9yIGluIHRoYXQgd2F5IHlvdSB3b3VsZCBzdGFuZCByZWxpZXZlZCBvZiB0aGUgYWNjdXNhdGlvbi4gQnV0IGFzIG1hdHRlcnMgYXJlIG5vdywgaXQgd2lsbCBiZSBoYXJkIGlmIHdlIHdobyBleHBlY3RlZCB0byBvYnRhaW4gYm90aCBwcmFpc2UgYW5kIGhvbm91ciBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIHNoYWxsIGZpbmQgaW5zdGVhZCB0aGF0IHdlIGFyZSBub3QgZXZlbiBvbiBhbiBlcXVhbGl0eSB3aXRoIHRoZSByZXN0IG9mIHRoZSBHcmVla3MsIGJ1dCBhcmUgc2h1dCBvdXQgZnJvbSB0aGVpciBjaXRpZXMu4oCdCjwvdHJhbnNsYXRpb24+"
translation['6.6.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyBBZ2FzaWFzIHJvc2UgYW5kIHNhaWQ6IOKAnFNvbGRpZXJzLCBJIHN3ZWFyIGJ5IHRoZSBnb2RzIGFuZCBnb2RkZXNzZXMgdGhhdCBpbiB2ZXJ5IHRydXRoIG5laXRoZXIgWGVub3Bob24gbm9yIGFueSBvbmUgZWxzZSBhbW9uZyB5b3UgZGlyZWN0ZWQgbWUgdG8gcmVzY3VlIHRoZSBtYW47IGJ1dCB3aGVuIEkgc2F3IGEgZ29vZCBtYW4gb2YgbXkgb3duIGNvbXBhbnkgYmVpbmcgbGVkIG9mZiBieSBEZXhpcHB1cywgdGhlIG9uZSB3aG8gYmV0cmF5ZWQgeW91LCBhcyB5b3Uga25vdyBmb3IgeW91cnNlbHZlcywgaXQgc2VlbWVkIHRvIG1lIGFuIG91dHJhZ2U7IGFuZCBJIHJlc2N1ZWQgaGltLCBJIGFkbWl0IGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.6.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgZG8gbm90IHlvdSBkZWxpdmVyIG1lIHVwOyBidXQgSSB3aWxsIG15c2VsZiwgYXMgWGVub3Bob24gcHJvcG9zZXMsIHB1dCBteXNlbGYgaW4gQ2xlYW5kZXIncyBoYW5kcywgc28gdGhhdCBoZSBtYXkgdHJ5IG1lIGFuZCBkbyB3aXRoIG1lIHdoYXRldmVyIGhlIG1heSBjaG9vc2U7IGRvIG5vdCBmb3IgdGhpcyBjYXVzZSBtYWtlIHdhciB1cG9uIHRoZSBMYWNlZGFlbW9uaWFucywgYnV0IHJhdGhlciBhY2NvbXBsaXNoIGEgc2FmZSByZXR1cm4sIGVhY2ggb2YgeW91IHRvIHRoZSBwbGFjZSB3aGVyZSBoZSB3aXNoZXMgdG8gZ28uIEkgYmVnIHlvdSwgaG93ZXZlciwgdG8gY2hvb3NlIHNvbWUgb2YgeW91ciBvd24gbnVtYmVyIGFuZCBzZW5kIHRoZW0gd2l0aCBtZSB0byBDbGVhbmRlciwgc28gdGhhdCBpZiBJIHBhc3Mgb3ZlciBhbnl0aGluZywgdGhleSBtYXkgc3BlYWssIGFuZCBhY3QgdG9vLCBvbiBteSBiZWhhbGYu4oCdCjwvdHJhbnNsYXRpb24+"
translation['6.6.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmV1cG9uIHRoZSBhcm15IGVtcG93ZXJlZCBoaW0gdG8gY2hvb3NlIHdob21ldmVyIGhlIHdpc2hlZCBhbmQgdGFrZSB0aGVtIHdpdGggaGltLCBhbmQgaGUgY2hvc2UgdGhlIGdlbmVyYWxzLiBBZnRlciB0aGlzIEFnYXNpYXMgc2V0IG9mZiB0byBDbGVhbmRlciwgYW5kIHdpdGggaGltIHRoZSBnZW5lcmFscyBhbmQgdGhlIG1hbiBoZSBoYWQgcmVzY3VlZC4KPC90cmFuc2xhdGlvbj4="
translation['6.6.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIGdlbmVyYWxzIHNhaWQ6IOKAnFdlIGhhdmUgYmVlbiBzZW50IHRvIHlvdSwgQ2xlYW5kZXIsIGJ5IHRoZSBhcm15LCBhbmQgdGhleSBhc2sgeW91LCBpbiBjYXNlIHlvdSBhY2N1c2UgdGhlbSBhbGwsIHRvIGJyaW5nIHRoZW0gdG8gdHJpYWwgeW91cnNlbGYgYW5kIGRlYWwgd2l0aCB0aGVtIGFzIHlvdSBwbGVhc2U7IG9yIGluIGNhc2UgeW91IGFjY3VzZSBzb21lIG9uZSBpbmRpdmlkdWFsLCBvciB0d28gb3IgbW9yZSwgdGhleSBkZW1hbmQgb2YgdGhlc2UgbWVuIHRoYXQgdGhleSBwdXQgdGhlbXNlbHZlcyBpbiB5b3VyIGhhbmRzIGZvciB0cmlhbC4gVGhlcmVmb3JlIGlmIHlvdSBoYXZlIGFueSBjaGFyZ2UgYWdhaW5zdCBhbnkgb25lIG9mIHVzLCB3ZSBhcmUgbm93IGhlcmUgYmVmb3JlIHlvdTsgaWYgeW91IGhhdmUgYW55IGNoYXJnZSBhZ2FpbnN0IGFueSBvbmUgZWxzZSwgdGVsbCB1czsgZm9yIG5vIG9uZSB3aG8gaXMgcmVhZHkgdG8geWllbGQgb2JlZGllbmNlIHRvIHVzIHdpbGwgZmFpbCB0byBwcmVzZW50IGhpbXNlbGYgYmVmb3JlIHlvdS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['6.6.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIEFnYXNpYXMgY2FtZSBmb3J3YXJkIGFuZCBzYWlkOiDigJxJIGFtIHRoZSBwZXJzb24sIENsZWFuZGVyLCB3aG8gcmVzY3VlZCB0aGlzIG1hbiBoZXJlIGZyb20gRGV4aXBwdXMgd2hlbiBoZSB3YXMgbGVhZGluZyBoaW0gb2ZmLCBhbmQgd2hvIGdhdmUgdGhlIG9yZGVyIHRvIHN0cmlrZSBEZXhpcHB1cy4KPC90cmFuc2xhdGlvbj4="
translation['6.6.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgSSBrbm93IHRoYXQgdGhpcyBzb2xkaWVyIGhlcmUgaXMgYSBnb29kIG1hbiwgYW5kIEkga25vdyBhbHNvIHRoYXQgRGV4aXBwdXMgd2FzIGNob3NlbiBieSB0aGUgYXJteSB0byBiZSBjb21tYW5kZXIgb2YgdGhlIGZpZnR5LW9hcmVkIHdhcnNoaXAgd2hpY2ggd2UgYmVnZ2VkIGZvciBhbmQgb2J0YWluZWQgZnJvbSB0aGUgVHJhcGV6dW50aWFucyBvbiB0aGUgdW5kZXJzdGFuZGluZyB0aGF0IHdpdGggaXQgd2Ugd2VyZSB0byBjb2xsZWN0IHZlc3NlbHMgd2hlcmVvbiB3ZSBtaWdodCByZXR1cm4gaW4gc2FmZXR5LCBhbmQgdGhhdCB0aGlzIERleGlwcHVzIHNsaXBwZWQgYXdheSBmcm9tIHVzLCBhbmQgYmV0cmF5ZWQgdGhlIHNvbGRpZXJzIGluIHdob3NlIGNvbXBhbnkgaGUgaGFkIGdhaW5lZCBkZWxpdmVyYW5jZS4KPC90cmFuc2xhdGlvbj4="
translation['6.6.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5TbyB3ZSBoYXZlIHJvYmJlZCB0aGUgVHJhcGV6dW50aWFucyBvZiB0aGVpciB3YXJzaGlwIGFuZCBhcmUgcmFzY2FscyBpbiB0aGVpciBlc3RpbWF0aW9uLCBhbGwgb24gYWNjb3VudCBvZiB0aGlzIERleGlwcHVzOyBpbmRlZWQsIHdlIGhhdmUgbG9zdCBvdXIgdmVyeSBsaXZlcywgc28gZmFyIGFzIGxheSBpbiB0aGlzIGZlbGxvdydzIHBvd2VyOyBmb3IgaGUgaGVhcmQsIGp1c3QgYXMgd2UgZGlkLCB0aGF0IGl0IHdhcyBpbXBvc3NpYmxlLCByZXR1cm5pbmcgYnkgbGFuZCwgdG8gY3Jvc3MgdGhlIHJpdmVycyBhbmQgcmVhY2ggPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IGluIHNhZmV0eS4KPC90cmFuc2xhdGlvbj4="
translation['6.6.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgZnJvbSB0aGF0IHNvcnQgb2YgYSBmZWxsb3csIHRoZW4sIHRoYXQgSSByZXNjdWVkIGhpcyBwcmlzb25lci4gSGFkIGl0IGJlZW4geW91IHdobyB3ZXJlIGxlYWRpbmcgaGltIG9mZiwgb3IgYW55IG9uZSBvZiB5b3VyIG1lbiwgYW5kIG5vdCBvbmUgb2Ygb3VyIHJ1bmF3YXlzLCBiZSB3ZWxsIGFzc3VyZWQgdGhhdCBJIHNob3VsZCBoYXZlIGRvbmUgbm90aGluZyBvZiB0aGlzIGtpbmQuIEFuZCBiZWxpZXZlIHRoYXQgaWYgeW91IG5vdyBwdXQgbWUgdG8gZGVhdGgsIHlvdSBhcmUgcHV0dGluZyB0byBkZWF0aCBhIGdvb2QgbWFuIGZvciB0aGUgc2FrZSBvZiBhIGNvd2FyZCBhbmQgYSBzY291bmRyZWwu4oCdCjwvdHJhbnNsYXRpb24+"
translation['6.6.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXBvbiBoZWFyaW5nIHRoZXNlIHdvcmRzIENsZWFuZGVyIHNhaWQgdGhhdCBoZSBoYWQgbm8gY29tbWVuZGF0aW9uIGZvciBEZXhpcHB1cyBpZiBoZSBoYWQgYmVoYXZlZCBpbiB0aGlzIHdheSwgYnV0IHRoYXQgaGUgbmV2ZXJ0aGVsZXNzIHRob3VnaHQgdGhhdCBldmVuIGlmIERleGlwcHVzIHdlcmUgYW4gdXR0ZXIgc2NvdW5kcmVsLCBoZSBvdWdodCBub3QgdG8gaGF2ZSBzdWZmZXJlZCB2aW9sZW5jZTsg4oCccmF0aGVyLOKAnSBoZSBjb250aW51ZWQsIOKAnGhlIHNob3VsZCBmaXJzdCBoYXZlIGhhZCBhIHRyaWFsLCBqdXN0IGFzIHlvdSBhcmUgeW91cnNlbHZlcyBhc2tpbmcgaW4gdGhlIHByZXNlbnQgY2FzZSwgYW5kIHNob3VsZCB0aGVuIGhhdmUgcmVjZWl2ZWQgaGlzIHB1bmlzaG1lbnQuCjwvdHJhbnNsYXRpb24+"
translation['6.6.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIG1vbWVudCwgdGhlcmVmb3JlLCBnbyBhd2F5LCBsZWF2aW5nIHRoaXMgbWFuIGhlcmUgd2l0aCBtZSwgYW5kIHdoZW4gSSBpc3N1ZSB0aGUgb3JkZXIsIGJlIHByZXNlbnQgZm9yIHRoZSB0cmlhbC4gQW5kIEkgYnJpbmcgbm8gY2hhcmdlIGVpdGhlciBhZ2FpbnN0IHRoZSBhcm15IG9yIGFueSBvdGhlciBwZXJzb24gbm93IHRoYXQgdGhpcyBtYW4gaGltc2VsZiBhZG1pdHMgdGhhdCBoZSByZXNjdWVkIHRoZSBwcmlzb25lci7igJ0KPC90cmFuc2xhdGlvbj4="
translation['6.6.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZSBvbmUgd2hvIGhhZCBiZWVuIHJlc2N1ZWQgc2FpZDog4oCcRm9yIG15c2VsZiwgQ2xlYW5kZXIsIGluIGNhc2UgeW91IHJlYWxseSBpbWFnaW5lIHRoYXQgSSB3YXMgYmVpbmcgbGVkIG9mZiBmb3Igc29tZSB3cm9uZyBkb2luZywgSSBuZWl0aGVyIHN0cnVjayBub3Igc3RvbmVkIGFueWJvZHksIGJ1dCBtZXJlbHkgc2FpZCB0aGF0IHRoZSBzaGVlcCB3ZXJlIHB1YmxpYyBwcm9wZXJ0eS4gRm9yIGEgcmVzb2x1dGlvbiBoYWQgYmVlbiBwYXNzZWQgYnkgdGhlIHNvbGRpZXJzIHRoYXQgaWYgYW55IG9uZSBzaG91bGQgZG8gYW55IHBsdW5kZXJpbmcgb24gaGlzIG93biBhY2NvdW50IHdoZW4gdGhlIGVudGlyZSBhcm15IHdlbnQgb3V0LCB3aGF0IGhlIHNlY3VyZWQgd2FzIHRvIGJlIHB1YmxpYyBwcm9wZXJ0eS4KPC90cmFuc2xhdGlvbj4="
translation['6.6.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGF0IHdhcyB3aGF0IEkgc2FpZCwgYW5kIHRoZXJldXBvbiB0aGlzIGZlbGxvdyBzZWl6ZWQgbWUgYW5kIHByb2NlZWRlZCB0byBsZWFkIG1lIG9mZiwgaW4gb3JkZXIgdGhhdCBub2JvZHkgbWlnaHQgdXR0ZXIgYSB3b3JkLCBidXQgdGhhdCBoZSBtaWdodCBzYXZlIHRoZSBib290eSBmb3IgdGhlIHBsdW5kZXJlcnMgaW4gdmlvbGF0aW9uIG9mIHRoZSBvcmRpbmFuY2XigJRhbmQgZ2V0IGhpcyBvd24gc2hhcmUgb3V0IG9mIGl0LuKAnSBJbiByZXBseSB0byB0aGlzIENsZWFuZGVyIHNhaWQ6IOKAnFdlbGwsIHNpbmNlIHRoYXQgaXMgeW91ciBzdGF0ZW1lbnQsIHN0YXkgYmVoaW5kLCBzbyB0aGF0IHdlIGNhbiB0YWtlIHVwIHlvdXIgY2FzZSBhbHNvLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['6.6.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhhdCBDbGVhbmRlciBhbmQgaGlzIHBhcnR5IHByb2NlZWRlZCB0byBicmVha2Zhc3Q7IGFuZCBYZW5vcGhvbiBjYWxsZWQgYSBtZWV0aW5nIG9mIHRoZSBhcm15IGFuZCBhZHZpc2VkIHRoZSBzZW5kaW5nIG9mIGEgZGVsZWdhdGlvbiB0byBDbGVhbmRlciB0byBpbnRlcmNlZGUgZm9yIHRoZSBtZW4uCjwvdHJhbnNsYXRpb24+"
translation['6.6.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gdGhlIHRyb29wcyByZXNvbHZlZCB0byBzZW5kIHRoZSBnZW5lcmFscyBhbmQgY2FwdGFpbnMsIERyYWNvbnRpdXMgdGhlIFNwYXJ0YW4sIGFuZCBzdWNoIG90aGVycyBhcyBzZWVtZWQgZml0dGVkIGZvciB0aGUgbWlzc2lvbiwgYW5kIHRvIHJlcXVlc3QgQ2xlYW5kZXIgYnkgYWxsIG1lYW5zIHRvIHJlbGVhc2UgdGhlIHR3byBtZW4uCjwvdHJhbnNsYXRpb24+"
translation['6.6.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5TbyBYZW5vcGhvbiBjYW1lIGJlZm9yZSBoaW0gYW5kIHNhaWQ6IOKAnFlvdSBoYXZlIHRoZSBtZW4sIENsZWFuZGVyLCBhbmQgdGhlIGFybXkgaGFzIHN1Ym1pdHRlZCB0byB5b3UgYW5kIGFsbG93ZWQgeW91IHRvIGRvIHdoYXQgeW91IHBsZWFzZWQgYm90aCB3aXRoIHRoZXNlIG1lbiBhbmQgd2l0aCB0aGVpciBlbnRpcmUgYm9keS4gQnV0IG5vdyB0aGV5IGJlZyBhbmQgZW50cmVhdCB5b3UgdG8gZ2l2ZSB0aGVtIHRoZSB0d28gbWVuLCBhbmQgbm90IHRvIHB1dCB0aGVtIHRvIGRlYXRoOyBmb3IgbWFueSBhcmUgdGhlIGxhYm91cnMgdGhlc2UgdHdvIGhhdmUgcGVyZm9ybWVkIGZvciB0aGUgYXJteSBpbiB0aGUgcGFzdC4KPC90cmFuc2xhdGlvbj4="
translation['6.6.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5TaG91bGQgdGhleSBvYnRhaW4gdGhpcyBmYXZvdXIgYXQgeW91ciBoYW5kcywgdGhleSBwcm9taXNlIHlvdSBpbiByZXR1cm4gdGhhdCwgaWYgeW91IHdpc2ggdG8gYmUgdGhlaXIgbGVhZGVyIGFuZCBpZiB0aGUgZ29kcyBhcmUgcHJvcGl0aW91cywgdGhleSB3aWxsIHNob3cgeW91IG5vdCBvbmx5IHRoYXQgdGhleSBhcmUgb3JkZXJseSwgYnV0IHRoYXQgdGhleSBhcmUgYWJsZSwgd2l0aCB0aGUgaGVscCBvZiB0aGUgZ29kcywgd2hpbGUgeWllbGRpbmcgb2JlZGllbmNlIHRvIHRoZWlyIGNvbW1hbmRlciwgdG8gZmVlbCBubyBmZWFyIG9mIHRoZSBlbmVteS4KPC90cmFuc2xhdGlvbj4="
translation['6.6.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IG1ha2UgdGhpcyBmdXJ0aGVyIHJlcXVlc3Qgb2YgeW91LCB0aGF0IHdoZW4geW91IGhhdmUgam9pbmVkIHRoZW0gYW5kIGFzc3VtZWQgY29tbWFuZCBvZiB0aGVtLCB5b3UgbWFrZSB0cmlhbCBib3RoIG9mIERleGlwcHVzIGFuZCBvZiB0aGUgcmVzdCBvZiB0aGVtIHRvIHNlZSBob3cgdGhlIHR3byBzb3J0cyBvZiBtZW4gY29tcGFyZSwgYW5kIHRoZW4gZ2l2ZSB0byBlYWNoIGhpcyBkZXNlcnRzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['6.6.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgQ2xlYW5kZXIgcmVwbGllZDog4oCcV2VsbCwgYnkgdGhlIHR3aW4gZ29kcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q2FzdG9yIGFuZCBQb2xsdXgsIHRoZSBlc3BlY2lhbCBwcm90ZWN0b3JzIG9mIHRoZSBMYWNlZGFlbW9uaWFucy4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4POueG9vTwvZm9yZWlnbj4gaXMgU3BhcnRhbiAoRG9yaWMpIGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuM614b29LjwvZm9yZWlnbj48L25vdGU+IG15IGFuc3dlciB0byB5b3UgYWxsIHdpbGwgYmUgc3BlZWR5IGluZGVlZC4gSSBnaXZlIHlvdSB0aGUgdHdvIG1lbiBhbmQgSSB3aWxsIG15c2VsZiBqb2luIHlvdSwgYW5kIGlmIHRoZSBnb2RzIHNvIGdyYW50LCBJIHdpbGwgbGVhZCB5b3UgdG8gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4POueG9vTwvZm9yZWlnbj4gaXMgU3BhcnRhbiAoRG9yaWMpIGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuM614b29LjwvZm9yZWlnbj48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4uIFRoZXNlIHdvcmRzIG9mIHlvdXJzIGFyZSBkZWNpZGVkbHkgdGhlIG9wcG9zaXRlIG9mIHdoYXQgSSBoYXZlIGJlZW4gaGVhcmluZyBhYm91dCB5b3UgZnJvbSBzb21lIHBlb3BsZSwgbmFtZWx5LCB0aGF0IHlvdSB3ZXJlIHRyeWluZyB0byBtYWtlIHRoZSBhcm15IGRpc2xveWFsIHRvIHRoZSBMYWNlZGFlbW9uaWFucy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['6.6.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyB0aGV5IHRoYW5rZWQgaGltIGFuZCBkZXBhcnRlZCwgdGFraW5nIHRoZSB0d28gbWVuIHdpdGggdGhlbTsgYW5kIENsZWFuZGVyIHVuZGVydG9vayBzYWNyaWZpY2VzIHdpdGggYSB2aWV3IHRvIHRoZSBqb3VybmV5IGFuZCBhc3NvY2lhdGVkIGFtaWNhYmx5IHdpdGggWGVub3Bob24sIHNvIHRoYXQgdGhlIHR3byBtZW4gc3RydWNrIHVwIGEgZnJpZW5kc2hpcC4gRnVydGhlcm1vcmUsIHdoZW4gQ2xlYW5kZXIgY2FtZSB0byBzZWUgZm9yIGhpbXNlbGYgdGhhdCB0aGUgdHJvb3BzIGNhcnJpZWQgb3V0IHRoZWlyIG9yZGVycyB3aXRoIGdvb2QgZGlzY2lwbGluZSwgaGUgd2FzIG1vcmUgdGhhbiBldmVyIGVhZ2VyIHRvIGJlY29tZSB0aGVpciBjb21tYW5kZXIuCjwvdHJhbnNsYXRpb24+"
translation['6.6.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBob3dldmVyLCBhbHRob3VnaCBoZSBjb250aW51ZWQgaGlzIHNhY3JpZmljZXMgb3ZlciB0aHJlZSBkYXlzLCB0aGUgdmljdGltcyB3b3VsZCBub3QgcHJvdmUgZmF2b3VyYWJsZSwgaGUgY2FsbGVkIGEgbWVldGluZyBvZiB0aGUgZ2VuZXJhbHMgYW5kIHNhaWQ6IOKAnFRoZSB2aWN0aW1zIGRvIG5vdCBwcm92ZSBmYXZvdXJhYmxlIHRvIG1lIGFzIHRoZSBtYW4gdG8gbGVhZCB5b3Ugb253YXJkOyBidXQgaXQgaXMgbm90IGZvciB5b3UgdG8gYmUgZGVzcG9uZGVudCBvbiB0aGF0IGFjY291bnQsIHNpbmNlIHRvIHlvdSwgYXMgaXQgc2VlbXMsIGlzIGdpdmVuIHRoZSBvZmZpY2Ugb2YgZGVsaXZlcmluZyB0aGVzZSBzb2xkaWVycy4gVG8gdGhlIHJvYWQsIHRoZW4hIEFuZCB3ZSBzaGFsbCBnaXZlIHlvdSwgd2hlbiB5b3UgaGF2ZSByZWFjaGVkIHlvdXIgam91cm5leSdzIGVuZCwgYXMgc3BsZW5kaWQgYSByZWNlcHRpb24gYXMgd2UgY2FuLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['6.6.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmV1cG9uIHRoZSBzb2xkaWVycyB2b3RlZCB0byBwcmVzZW50IHRvIGhpbSB0aGUgc2hlZXAgdGhhdCB3ZXJlIHB1YmxpYyBwcm9wZXJ0eSwgYW5kIGhlIGFjY2VwdGVkIHRoZW0sIGJ1dCBnYXZlIHRoZW0gYmFjayBhZ2FpbiB0byB0aGUgdHJvb3BzLiBUaGVuIGhlIHNhaWxlZCBhd2F5LiBBbmQgdGhlIHNvbGRpZXJzLCBhZnRlciBzZWxsaW5nIHRoZSBjb3JuIHRoZXkgaGFkIGdhdGhlcmVkIHRvZ2V0aGVyIGFuZCB0aGUgb3RoZXIgYm9vdHkgdGhleSBoYWQgc2VjdXJlZCwgc2V0IG91dCBvbiB0aGVpciBtYXJjaCB0aHJvdWdoIHRoZSBjb3VudHJ5IG9mIHRoZSBCaXRoeW5pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.1'] = ""
translation['7.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIFBoYXJuYWJhenVzLCBpbiBmZWFyIHRoYXQgdGhlIEdyZWVrIGFybXkgbWlnaHQgY2Fycnkgb24gYSBjYW1wYWlnbiBhZ2FpbnN0IGhpcyBvd24gbGFuZCwgc2VudCB0byBBbmF4aWJpdXMsIHRoZSBhZG1pcmFsLCB3aG8gY2hhbmNlZCB0byBiZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEJ5emFudGl1bSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQnl6YW50aXVtIj5CeXphbnRpdW08L3BsYWNlTmFtZT4sIGFuZCBhc2tlZCBoaW0gdG8gY2FycnkgdGhlIGFybXkgYWNyb3NzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTExNTA2OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTE1MDY4Ij5Cb3Nwb3J1czwvcGxhY2VOYW1lPi4gQ2hyeXNvcG9saXMgd2FzIGRpcmVjdGx5IG9wcG9zaXRlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQnl6YW50aXVtIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxCeXphbnRpdW0iPkJ5emFudGl1bTwvcGxhY2VOYW1lPi48L25vdGU+IG91dCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTExNTA2OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTE1MDY4Ij5Cb3Nwb3J1czwvcGxhY2VOYW1lPi4gQ2hyeXNvcG9saXMgd2FzIGRpcmVjdGx5IG9wcG9zaXRlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQnl6YW50aXVtIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxCeXphbnRpdW0iPkJ5emFudGl1bTwvcGxhY2VOYW1lPi48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDA0Ij5Bc2lhPC9wbGFjZU5hbWU+LCBwcm9taXNpbmcgdG8gZG8gZXZlcnl0aGluZyBmb3IgaGltIHRoYXQgbWlnaHQgYmUgbmVlZGZ1bC4KPC90cmFuc2xhdGlvbj4="
translation['7.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFuYXhpYml1cyBhY2NvcmRpbmdseSBzdW1tb25lZCB0aGUgZ2VuZXJhbHMgYW5kIGNhcHRhaW5zIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQnl6YW50aXVtIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxCeXphbnRpdW0iPkJ5emFudGl1bTwvcGxhY2VOYW1lPiwgYW5kIGdhdmUgdGhlbSBwcm9taXNlcyB0aGF0IGlmIHRoZXkgY3Jvc3NlZCBvdmVyLCB0aGUgc29sZGllcnMgd291bGQgaGF2ZSByZWd1bGFyIHBheS4KPC90cmFuc2xhdGlvbj4="
translation['7.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZSByZXN0IG9mIHRoZSBvZmZpY2VycyByZXBsaWVkIHRoYXQgdGhleSB3b3VsZCBjb25zaWRlciB0aGUgbWF0dGVyIGFuZCByZXBvcnQgYmFjayB0byBoaW0sIGJ1dCBYZW5vcGhvbiB0b2xkIGhpbSB0aGF0IGhlIGludGVuZGVkIHRvIHBhcnQgY29tcGFueSB3aXRoIHRoZSBhcm15IGF0IG9uY2UsIGFuZCB3YW50ZWQgdG8gc2FpbCBob21lLiBBbmF4aWJpdXMsIGhvd2V2ZXIsIGJhZGUgaGltIGNyb3NzIG92ZXIgd2l0aCB0aGUgb3RoZXJzLCBhbmQgbGVhdmUgdGhlbSBvbmx5IGFmdGVyIHRoYXQuIFhlbm9waG9uIHNhaWQsIHRoZXJlZm9yZSwgdGhhdCBoZSB3b3VsZCBkbyBzby4KPC90cmFuc2xhdGlvbj4="
translation['7.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgbm93IFNldXRoZXMgdGhlIFRocmFjaWFuIHNlbnQgTWVkb3NhZGVzIHRvIFhlbm9waG9uIGFuZCB1cmdlZCBoaW0gdG8gaGVscCBoaW0gdG8gYnJpbmcgdGhlIGFybXkgYWNyb3NzLCBhZGRpbmcgdGhhdCBpZiBoZSBkaWQgcmVuZGVyIHN1Y2ggYXNzaXN0YW5jZSwgaGUgd291bGQgbm90IGJlIHNvcnJ5IGZvciBpdC4KPC90cmFuc2xhdGlvbj4="
translation['7.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlhlbm9waG9uIHJlcGxpZWQ6IOKAnFdoeSwgdGhlIGFybXkgaXMgZ29pbmcgdG8gY3Jvc3Mgb3Zlcjsgc28gZmFyIGFzIHRoYXQgaXMgY29uY2VybmVkLCBsZXQgbm90IFNldXRoZXMgcGF5IGFueXRoaW5nIGVpdGhlciB0byBtZSBvciB0byBhbnkgb25lIGVsc2U7IGJ1dCBhcyBzb29uIGFzIGl0IGhhcyBjcm9zc2VkLCB3aGVuIEkgbXlzZWxmIGFtIHRvIGxlYXZlIHRoZSBhcm15LCBsZXQgaGltIGRlYWwgd2l0aCB0aG9zZSB3aG8gc3RheSBvbiBhbmQgYXJlIGluIGF1dGhvcml0eSwgaW4gYW55IHdheSB0aGF0IG1heSBzZWVtIHRvIGhpbSBzYWZlLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIGFsbCB0aGUgc29sZGllcnMgY3Jvc3NlZCBvdmVyIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQnl6YW50aXVtIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxCeXphbnRpdW0iPkJ5emFudGl1bTwvcGxhY2VOYW1lPi4gQW5kIEFuYXhpYml1cyB3b3VsZCBub3QgZ2l2ZSB0aGVtIHBheSwgYnV0IG1hZGUgcHJvY2xhbWF0aW9uIHRoYXQgdGhlIHRyb29wcyB3ZXJlIHRvIHRha2UgdGhlaXIgYXJtcyBhbmQgdGhlaXIgYmFnZ2FnZSBhbmQgZ28gZm9ydGggZnJvbSB0aGUgY2l0eSwgc2F5aW5nIHRoYXQgaGUgd2FzIGdvaW5nIHRvIHNlbmQgdGhlbSBiYWNrIGhvbWUgYW5kIGF0IHRoZSBzYW1lIHRpbWUgdG8gbWFrZSBhbiBlbnVtZXJhdGlvbiBvZiB0aGVtLiBBdCB0aGF0IHRoZSBzb2xkaWVycyB3ZXJlIGFuZ3J5LCBmb3IgdGhleSBoYWQgbm8gbW9uZXkgd2l0aCB3aGljaCB0byBwcm9jdXJlIHByb3Zpc2lvbnMgZm9yIHRoZSBqb3VybmV5LCBhbmQgdGhleSBzZXQgYWJvdXQgcGFja2luZyB1cCB3aXRoIHJlbHVjdGFuY2UuCjwvdHJhbnNsYXRpb24+"
translation['7.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlhlbm9waG9uIG1lYW53aGlsZSwgc2luY2UgaGUgaGFkIGJlY29tZSBhIGZyaWVuZCBvZiBDbGVhbmRlciwgdGhlIGdvdmVybm9yLCBjYWxsZWQgdG8gdGFrZSBsZWF2ZSBvZiBoaW0sIHNheWluZyB0aGF0IGhlIHdhcyB0byBzYWlsIGhvbWUgYXQgb25jZS4gQW5kIENsZWFuZGVyIHNhaWQgdG8gaGltOiDigJxEbyBub3QgZG8gc287IGlmIHlvdSBkbyzigJ0gc2FpZCBoZSwg4oCceW91IHdpbGwgYmUgYmxhbWVkLCBmb3IgZXZlbiBub3cgY2VydGFpbiBwZW9wbGUgYXJlIGxheWluZyBpdCB0byB5b3VyIGNoYXJnZSB0aGF0IHRoZSBhcm15IGlzIHNsb3cgYWJvdXQgbW92aW5nIGF3YXku4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlhlbm9waG9uIHJlcGxpZWQ6IOKAnFdoeSwgSSBhbSBub3QgcmVzcG9uc2libGUgZm9yIHRoYXQ7IGl0IGlzIHJhdGhlciB0aGF0IHRoZSBzb2xkaWVycyBsYWNrIGZvb2Qgc3VwcGxpZXMgYW5kIG9uIHRoYXQgYWNjb3VudCBhcmUgZGVwcmVzc2VkIGFib3V0IHRoZWlyIGdvaW5nIGF3YXku4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz7igJxOZXZlcnRoZWxlc3Ms4oCdIHNhaWQgQ2xlYW5kZXIsIOKAnEkgYWR2aXNlIHlvdSB0byBnbyBmb3J0aCBmcm9tIHRoZSBjaXR5IGFzIHRob3VnaCB5b3Ugd2VyZSBwbGFubmluZyB0byBtYWtlIHRoZSBqb3VybmV5IHdpdGggdGhlbSwgYW5kIHRvIGxlYXZlIHRoZW0gb25seSB3aGVuIHRoZSBhcm15IGhhcyBnb3Qgb3V0c2lkZS7igJ0g4oCcV2VsbCwgdGhlbizigJ0gc2FpZCBYZW5vcGhvbiwg4oCcd2Ugd2lsbCBnbyB0byBBbmF4aWJpdXMgYW5kIG5lZ290aWF0ZSBhYm91dCB0aGlzIG1hdHRlci7igJ0gU28gdGhleSB3ZW50IGFuZCBwdXQgdGhlIHF1ZXN0aW9uIGJlZm9yZSBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['7.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5IaXMgb3JkZXJzIHdlcmUsIHRoYXQgWGVub3Bob24gd2FzIHRvIGZvbGxvdyB0aGUgY291cnNlIHByb3Bvc2VkIGFuZCB0aGF0IHRoZSB0cm9vcHMgd2VyZSB0byBwYWNrIHVwIGFuZCBsZWF2ZSB0aGUgY2l0eSB3aXRoIGFsbCBzcGVlZDsgYW5kIGhlIGZ1cnRoZXIgZGVjbGFyZWQgdGhhdCBhbnkgb25lIHdobyB3YXMgbm90IHByZXNlbnQgZm9yIHRoZSByZXZpZXcgYW5kIHRoZSBlbnVtZXJhdGlvbiB3b3VsZCBoYXZlIGhpbXNlbGYgdG8gYmxhbWUgZm9yIHRoZSBjb25zZXF1ZW5jZXMuCjwvdHJhbnNsYXRpb24+"
translation['7.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhhdCB0aGUgYXJteSBwcm9jZWVkZWQgdG8gbWFyY2ggZm9ydGggZnJvbSB0aGUgY2l0eSwgdGhlIGdlbmVyYWxzIGF0IHRoZSBoZWFkIGFuZCB0aGVuIHRoZSByZXN0LiBBbmQgbm93IHRoZSBlbnRpcmUgYm9keSB3aXRoIHRoZSBleGNlcHRpb24gb2YgYSBmZXcgbWVuIHdlcmUgb3V0c2lkZSwgYW5kIEV0ZW9uaWN1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIExhY2VkYWVtb25pYW4gb2ZmaWNlciB3aG8gZmlndXJlcyByYXRoZXIgcHJvbWluZW50bHkgaW4gdGhlIHN0b3J5IG9mIHRoZSBQZWxvcG9ubmVzaWFuIFdhciAoPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiAxLjEuMzIiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gMS4xLjMyPC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiAxLjYuMjYiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gMS42LjI2PC9iaWJsPiwgZXRjLik7IG5vdyBhcHBhcmVudGx5IGFuIGFpZGUgdG8gQW5heGliaXVzLjwvbm90ZT4gd2FzIHN0YW5kaW5nIGJ5IHRoZSBnYXRlcyByZWFkeSwgYXMgc29vbiBhcyB0aGUgbGFzdCBtYW4gZ290IG91dCwgdG8gY2xvc2UgdGhlIGdhdGVzIGFuZCB0aHJ1c3QgaW4gdGhlIGNyb3NzYmFyLgogICAgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiAxLjEuMzIiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gMS4xLjMyPC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiAxLjYuMjYiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gMS42LjI2PC9iaWJsPiwgZXRjLik7IG5vdyBhcHBhcmVudGx5IGFuIGFpZGUgdG8gQW5heGliaXVzLjwvdHJhbnNsYXRpb24+"
translation['7.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIEFuYXhpYml1cyBjYWxsZWQgdG9nZXRoZXIgdGhlIGdlbmVyYWxzIGFuZCBjYXB0YWlucyBhbmQgc2FpZDog4oCcR2V0IHlvdXIgcHJvdmlzaW9ucyBmcm9tIHRoZSBUaHJhY2lhbiB2aWxsYWdlczsgdGhlcmUgaXMgYW4gYWJ1bmRhbmNlIHRoZXJlIG9mIGJhcmxleSBhbmQgd2hlYXQgYW5kIG90aGVyIHN1cHBsaWVzOyB3aGVuIHlvdSBoYXZlIGdvdCB0aGVtLCBwcm9jZWVkIHRvIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAxMjc4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDEyNzg5Ij5DaGVyc29uZXNlPC9wbGFjZU5hbWU+LCBhbmQgdGhlcmUgQ3luaXNjdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QSBMYWNlZGFlbW9uaWFuIGdlbmVyYWwgZW5nYWdlZCBpbiB3YXIgd2l0aCB0aGUgVGhyYWNpYW5zLjwvbm90ZT4gd2lsbCB0YWtlIHlvdSBpbnRvIGhpcyBwYXku4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgc29tZSBvZiB0aGUgc29sZGllcnMsIG92ZXJoZWFyaW5nIHRoZXNlIHdvcmRzLCBvciBwZXJoYXBzIG9uZSBvZiB0aGUgY2FwdGFpbnMsIHByb2NlZWRlZCB0byBzcHJlYWQgdGhlIHJlcG9ydCBvZiB0aGVtIHRocm91Z2ggdGhlIGFybXkuIE1lYW53aGlsZSB0aGUgZ2VuZXJhbHMgd2VyZSBpbnF1aXJpbmcgYWJvdXQgU2V1dGhlcywgd2hldGhlciBoZSB3YXMgaG9zdGlsZSBvciBmcmllbmRseSwgYW5kIHdoZXRoZXIgdGhleSB3ZXJlIHRvIG1hcmNoIGJ5IHdheSBvZiB0aGUgU2FjcmVkIE1vdW50YWluPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk9uIHRoZSBub3J0aGVybiBjb2FzdCBvZiB0aGUgUHJvcG9udGlzLiBUaGVpciBkZXN0aW5hdGlvbiB3YXMgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsR2FsbGlwb2xpIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxHYWxsaXBvbGkiPkdhbGxpcG9saTwvcGxhY2VOYW1lPiBwZW5pbnN1bGEsIGFuZCB0aGUgYWx0ZXJuYXRpdmUgcm91dGVzIGFyZSBhIHNob3J0IGJ1dCBkaWZmaWN1bHQgb25lIG9yIGEgbG9uZywgZWFzeSBvbmUuPC9ub3RlPiBvciBnbyByb3VuZCB0aHJvdWdoIHRoZSBtaWRkbGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxHYWxsaXBvbGkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEdhbGxpcG9saSI+R2FsbGlwb2xpPC9wbGFjZU5hbWU+IHBlbmluc3VsYSwgYW5kIHRoZSBhbHRlcm5hdGl2ZSByb3V0ZXMgYXJlIGEgc2hvcnQgYnV0IGRpZmZpY3VsdCBvbmUgb3IgYSBsb25nLCBlYXN5IG9uZS48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjc1NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNzU2Ij5UaHJhY2U8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['7.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5XaGlsZSB0aGV5IHdlcmUgdGFsa2luZyBvdmVyIHRoZXNlIG1hdHRlcnMsIHRoZSBzb2xkaWVycyBjYXVnaHQgdXAgdGhlaXIgYXJtcyBhbmQgcnVzaGVkIGF0IGZ1bGwgc3BlZWQgdG93YXJkIHRoZSBnYXRlcywgaW50ZW5kaW5nIHRvIGdldCBiYWNrIGluc2lkZSB0aGUgY2l0eSB3YWxsLiBCdXQgd2hlbiBFdGVvbmljdXMgYW5kIGhpcyBtZW4gc2F3IHRoZSBob3BsaXRlcyBydW5uaW5nIHRvd2FyZHMgdGhlbSwgdGhleSBzaHV0IHRoZSBnYXRlcyBhbmQgdGhydXN0IGluIHRoZSBiYXIuCjwvdHJhbnNsYXRpb24+"
translation['7.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgc29sZGllcnMsIGhvd2V2ZXIsIHNldCB0byBoYW1tZXJpbmcgYXQgdGhlIGdhdGVzLCBhbmQgc2FpZCB0aGF0IHRoZXkgd2VyZSBtb3N0IHVuanVzdGx5IHRyZWF0ZWQgaW4gYmVpbmcgY2FzdCBvdXQgYW5kIGxlZnQgYXQgdGhlIG1lcmN5IG9mIHRoZSBlbmVteTsgYW5kIHRoZXkgZGVjbGFyZWQgdGhhdCB0aGV5IHdvdWxkIGJyZWFrIHRocm91Z2ggdGhlIGdhdGVzIGlmIHRoZSBrZWVwZXJzIGRpZCBub3Qgb3BlbiB0aGVtIG9mIHRoZWlyIG93biBhY2NvcmQuCjwvdHJhbnNsYXRpb24+"
translation['7.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgb3RoZXJzIHJhbiBkb3duIHRvIHRoZSBzaG9yZSwgbWFkZSB0aGVpciB3YXkgYWxvbmcgdGhlIGJyZWFrLXdhdGVyLCBhbmQgdGh1cyBzY2FsZWQgdGhlIHdhbGwgYW5kIGdvdCBpbnRvIHRoZSBjaXR5LCB3aGlsZSBzdGlsbCBvdGhlcnMsIHdobyBjaGFuY2VkIHRvIGJlIHdpdGhpbiB0aGUgd2FsbHMsIHNlZWluZyB3aGF0IHdhcyBnb2luZyBvbiBhdCB0aGUgZ2F0ZXMsIGN1dCB0aHJvdWdoIHRoZSBiYXIgd2l0aCB0aGVpciBheGVzIGFuZCB0aHJldyB0aGUgZ2F0ZXMgb3Blbiwgd2hlcmV1cG9uIHRoZSByZXN0IHJ1c2hlZCBpbi4KPC90cmFuc2xhdGlvbj4="
translation['7.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBYZW5vcGhvbiBzYXcgd2hhdCB3YXMgdGFraW5nIHBsYWNlLCBiZWluZyBzZWl6ZWQgd2l0aCBmZWFyIGxlc3QgdGhlIGFybXkgbWlnaHQgZmFsbCB0byBwbHVuZGVyaW5nIGFuZCBpcnJlcGFyYWJsZSBoYXJtIG1pZ2h0IGJlIGRvbmUgdG8gdGhlIGNpdHksIHRvIGhpbXNlbGYsIGFuZCB0byB0aGUgc29sZGllcnMsIGhlIHJhbiBhbmQgcGx1bmdlZCB3aXRoaW4gdGhlIGdhdGVzIGFsb25nIHdpdGggdGhlIHJlc3Qgb2YgdGhlIHRocm9uZy4KPC90cmFuc2xhdGlvbj4="
translation['7.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIEJ5emFudGluZXMsIG5vIHNvb25lciBkaWQgdGhleSBzZWUgdGhlIGFybXkgYnVyc3RpbmcgaW4gYnkgZm9yY2UgdGhhbiB0aGV5IGZsZWQgZnJvbSB0aGUgbWFya2V0LXBsYWNlLCBzb21lIHRvIHRoZWlyIGJvYXRzIGFuZCBvdGhlcnMgdG8gdGhlaXIgaG9tZXMsIHdoaWxlIGFsbCB3aG8gY2hhbmNlZCB0byBiZSBpbmRvb3JzIHJhbiBvdXQsIGFuZCBzb21lIHRvb2sgdG8gbGF1bmNoaW5nIHRoZSBzaGlwcy1vZi13YXIgaW4gb3JkZXIgdG8gc2VlayBzYWZldHkgaW4gdGhlbeKAlGFsbCBhbGlrZSBpbWFnaW5pbmcgdGhhdCB0aGV5IHdlcmUgbG9zdCBhbmQgdGhlIGNpdHkgY2FwdHVyZWQuCjwvdHJhbnNsYXRpb24+"
translation['7.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5FdGVvbmljdXMgbWFkZSBoaXMgZXNjYXBlIHRvIHRoZSBjaXRhZGVsLiBBbmF4aWJpdXMgcmFuIGRvd24gdG8gdGhlIHNob3JlLCBzYWlsZWQgcm91bmQgaW4gYSBmaXNoaW5nIGJvYXQgdG8gdGhlIGNpdGFkZWwsIGFuZCBpbW1lZGlhdGVseSBzdW1tb25lZCB0aGUgZ2Fycmlzb24gZnJvbSBDYWxjaGVkb247IGZvciB0aGUgZm9yY2UgaW4gdGhlIGNpdGFkZWwgZGlkIG5vdCBzZWVtIGFkZXF1YXRlIHRvIGJyaW5nIHRoZSBHcmVlayB0cm9vcHMgdW5kZXIgY29udHJvbC4KPC90cmFuc2xhdGlvbj4="
translation['7.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgc29vbiBhcyB0aGUgc29sZGllcnMgc2F3IFhlbm9waG9uLCBtYW55IG9mIHRoZW0gcnVzaGVkIHRvd2FyZHMgaGltIGFuZCBzYWlkOiDigJxOb3cgaXMgeW91ciBvcHBvcnR1bml0eSwgWGVub3Bob24sIHRvIHByb3ZlIHlvdXJzZWxmIGEgbWFuLiBZb3UgaGF2ZSBhIGNpdHksIHlvdSBoYXZlIHRyaXJlbWVzLCB5b3UgaGF2ZSBtb25leSwgeW91IGhhdmUgdGhpcyBncmVhdCBudW1iZXIgb2YgbWVuLiBOb3csIHNob3VsZCB5b3Ugc28gd2lzaCwgeW91IHdvdWxkIHJlbmRlciB1cyBhIHNlcnZpY2UgYW5kIHdlIHNob3VsZCBtYWtlIHlvdSBncmVhdC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5IZSByZXBsaWVkLCBkZXNpcmluZyB0byBxdWlldCB0aGVtIGRvd246IOKAnFlvdXIgYWR2aWNlIGlzIGNlcnRhaW5seSBnb29kLCBhbmQgSSBzaGFsbCBkbyBhcyB5b3Ugc2F5OyBidXQgaWYgdGhpcyBpcyB3aGF0IHlvdSBsb25nIGZvciwgZ3JvdW5kIHlvdXIgYXJtcyBpbiBsaW5lIG9mIGJhdHRsZSB3aXRoIGFsbCBzcGVlZC7igJ0gVGhlbiBoZSBwcm9jZWVkZWQgdG8gcGFzcyBhbG9uZyB0aGlzIG9yZGVyIGhpbXNlbGYgYW5kIGJhZGUgdGhlIG90aGVycyBzZW5kIGl0IG9u4oCUdG8gZ3JvdW5kIHRoZWlyIGFybXMgaW4gYmF0dGxlIGxpbmUuCjwvdHJhbnNsYXRpb24+"
translation['7.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbWVuIGFjdGVkIGFzIHRoZWlyIG93biBtYXJzaGFscywgYW5kIHdpdGhpbiBhIHNob3J0IHRpbWUgdGhlIGhvcGxpdGVzIGhhZCBmYWxsZW4gaW50byBsaW5lIGVpZ2h0IGRlZXAgYW5kIHRoZSBwZWx0YXN0cyBoYWQgZ290IGludG8gcG9zaXRpb24gb24gZWl0aGVyIHdpbmcuCjwvdHJhbnNsYXRpb24+"
translation['7.1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcGxhY2Ugd2hlcmUgdGhleSB3ZXJlLCBpbmRlZWQsIGlzIGEgbW9zdCBleGNlbGxlbnQgb25lIGZvciBkcmF3aW5nIG91dCBhIGxpbmUgb2YgdHJvb3BzLCBiZWluZyB0aGUgc28tY2FsbGVkIFRocmFjaWFuIFNxdWFyZSwgd2hpY2ggaXMgZnJlZSBvZiBob3VzZXMgYW5kIGxldmVsLiBBcyBzb29uIGFzIHRoZWlyIGFybXMgd2VyZSBncm91bmRlZCBhbmQgdGhleSBoYWQgcXVpZXRlZCBkb3duLCBYZW5vcGhvbiBjYWxsZWQgdGhlIHRyb29wcyB0b2dldGhlciBhbmQgc3Bva2UgYXMgZm9sbG93czoKPC90cmFuc2xhdGlvbj4="
translation['7.1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz7igJxUaGF0IHlvdSBhcmUgYW5ncnksIGZlbGxvdyBzb2xkaWVycywgYW5kIGJlbGlldmUgeW91IGFyZSBvdXRyYWdlb3VzbHkgdHJlYXRlZCBpbiBiZWluZyBzbyBkZWNlaXZlZCwgSSBkbyBub3Qgd29uZGVyLiBCdXQgaWYgd2UgaW5kdWxnZSBvdXIgYW5nZXIsIGJ5IHRha2luZyB2ZW5nZWFuY2UgZm9yIHRoaXMgZGVjZXB0aW9uIHVwb24gdGhlIExhY2VkYWVtb25pYW5zIHdobyBhcmUgaGVyZSBhbmQgYnkgc2Fja2luZyB0aGUgY2l0eSB3aGljaCBpcyBpbiBubyB3YXkgdG8gYmxhbWUsIGNvbnNpZGVyIHRoZSByZXN1bHRzIHRoYXQgd2lsbCBmb2xsb3cuCjwvdHJhbnNsYXRpb24+"
translation['7.1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5XZSBzaGFsbCBiZSBkZWNsYXJlZCB0byBiZSBhdCB3YXIgd2l0aCB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIHRoZWlyIGFsbGllcy4gQW5kIHdoYXQgc29ydCBvZiBhIHdhciB0aGF0IHdvdWxkIHByb3ZlIHRvIGJlIG9uZSBtYXkgYXQgbGVhc3QgY29uamVjdHVyZSBieSBoYXZpbmcgc2VlbiBhbmQgYnkgcmVjYWxsaW5nIHRvIG1pbmQgdGhlIGV2ZW50cyB3aGljaCBoYXZlIHF1aXRlIGxhdGVseSB0YWtlbiBwbGFjZS4KPC90cmFuc2xhdGlvbj4="
translation['7.1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5XZSBBdGhlbmlhbnMsIHJlbWVtYmVyLCBlbnRlcmVkIHVwb24gb3VyIHdhciBhZ2FpbnN0IHRoZSBMYWNlZGFlbW9uaWFucyBhbmQgdGhlaXIgYWxsaWVzIHdpdGggbm8gZmV3ZXIgdGhhbiB0aHJlZSBodW5kcmVkIHRyaXJlbWVzLCBzb21lIGFmbG9hdCBhbmQgb3RoZXJzIGluIHRoZSBkb2NreWFyZHMsIHdpdGggYW4gYWJ1bmRhbmNlIG9mIHRyZWFzdXJlIGFscmVhZHkgYXQgaGFuZCBpbiBvdXIgY2l0eSwgYW5kIHdpdGggYSB5ZWFybHkgcmV2ZW51ZSwgYWNjcnVpbmcgYXQgaG9tZSBvciBjb21pbmcgaW4gZnJvbSBvdXIgZm9yZWlnbiBwb3NzZXNzaW9ucywgb2Ygbm90IGxlc3MgdGhhbiBhIHRob3VzYW5kIHRhbGVudHM7IHdlIHJ1bGVkIG92ZXIgYWxsIHRoZSBpc2xhbmRzLCB3ZSBwb3NzZXNzZWQgbWFueSBjaXRpZXMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPiwgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwMyI+RXVyb3BlPC9wbGFjZU5hbWU+IHdlIHBvc3Nlc3NlZCBhbW9uZyBtYW55IG90aGVycyB0aGlzIHZlcnkgY2l0eSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEJ5emFudGl1bSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQnl6YW50aXVtIj5CeXphbnRpdW08L3BsYWNlTmFtZT4gYWxzbywgd2hlcmUgd2Ugbm93IGFyZSzigJRhbmQgd2Ugd2VyZSB2YW5xdWlzaGVkLCBpbiB0aGUgd2F5IHRoYXQgYWxsIG9mIHlvdSByZW1lbWJlci4KPC90cmFuc2xhdGlvbj4="
translation['7.1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5XaGF0IGZhdGUsIHRoZW4sIG1heSB5b3UgYW5kIEkgZXhwZWN0IHRvIHN1ZmZlciBub3csIHdoZW4gdGhlIExhY2VkYWVtb25pYW5zIHN0aWxsIGhhdmUgdGhlaXIgb2xkIGFsbGllcywgd2hlbiB0aGUgQXRoZW5pYW5zIGFuZCBhbGwgd2hvIGF0IHRoYXQgdGltZSB3ZXJlIGFsbGllZCB3aXRoIHRoZW0gaGF2ZSBiZWVuIGFkZGVkIHRvIHRoZSBudW1iZXIsIHdoZW4gVGlzc2FwaGVybmVzIGFuZCBhbGwgdGhlIHJlc3Qgb2YgdGhlIGJhcmJhcmlhbnMgb24gdGhlIGNvYXN0IGFyZSBob3N0aWxlIHRvIHVzLCBhbmQgbW9zdCBob3N0aWxlIG9mIGFsbCB0aGUgS2luZyBoaW1zZWxmLCB1cCBpbiB0aGUgaW50ZXJpb3IsIHRoZSBtYW4gd2hvbSB3ZSBjYW1lIHRvIGRlcHJpdmUgb2YgaGlzIGVtcGlyZSwgYW5kIHRvIGtpbGwgaWYgd2UgY291bGQ/IFdpdGggYWxsIHRoZXNlIGJhbmRlZCB0b2dldGhlciBhZ2FpbnN0IHVzLCBpcyB0aGVyZSBhbnkgbWFuIHNvIHdpdGxlc3MgYXMgdG8gc3VwcG9zZSB0aGF0IHdlIHNob3VsZCBjb21lIG9mZiB2aWN0b3Jpb3VzPwo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGUgbmFtZSBvZiB0aGUgZ29kcyBsZXQgdXMgbm90IGJlIG1hZCwgbm9yIGxldCB1cyBwZXJpc2ggZGlzZ3JhY2VmdWxseSBhcyBlbmVtaWVzIGJvdGggdG8gb3VyIG5hdGl2ZSBzdGF0ZXMgYW5kIHRvIG91ciBvd24gZnJpZW5kcyBhbmQga2luc21lbi4gRm9yIGFsbCBvZiB0aGVtIGFyZSBpbiB0aGUgY2l0aWVzIHdoaWNoIHdpbGwgdGFrZSB0aGUgZmllbGQgYWdhaW5zdCB1cywgYW5kIHdpbGwgZG8gc28ganVzdGx5IGlmIHdlLCBhZnRlciByZWZyYWluaW5nIGZyb20gdGhlIHNlaXp1cmUgb2YgYW55IGJhcmJhcmlhbiBjaXR5LCBjb25xdWVyb3JzIHRob3VnaCB3ZSB3ZXJlLCBhcmUgdG8gdGFrZSB0aGUgZmlyc3QgR3JlZWsgY2l0eSB3ZSBoYXZlIGNvbWUgdG8gYW5kIHBpbGxhZ2UgdGhhdC4KPC90cmFuc2xhdGlvbj4="
translation['7.1.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgbXkgcGFydCwgdGhlcmVmb3JlLCBJIHByYXkgdGhhdCBzb29uZXIgdGhhbiBsaXZlIHRvIGJlaG9sZCB0aGlzIGRlZWQgd3JvdWdodCBieSB5b3UsIEkgbWF5IGJlIGxhaWQgdGVuIHRob3VzYW5kIGZhdGhvbXMgdW5kZXJncm91bmQuIEFuZCB0byB5b3UgbXkgYWR2aWNlIGlzLCB0aGF0IGJlaW5nIEdyZWVrcyB5b3UgZW5kZWF2b3VyIHRvIG9idGFpbiB5b3VyIGp1c3QgcmlnaHRzIGJ5IG9iZWRpZW5jZSB0byB0aGUgbGVhZGVycyBvZiB0aGUgR3JlZWtzLiBJZiB5b3UgYXJlIHVuYWJsZSB0byBhY2NvbXBsaXNoIHRoaXMsIHdlIG11c3Qgbm90IGF0IGFueSByYXRlLCBldmVuIHRob3VnaCB3cm9uZ2VkLCBiZSBkZXByaXZlZCBvZiBvdXIgcmV0dXJuIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['7.1.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm93IGl0IGlzIG15IG9waW5pb24gdGhhdCB3ZSBzaG91bGQgc2VuZCBtZXNzZW5nZXJzIHRvIEFuYXhpYml1cyBhbmQgc2F5IHRvIGhpbTogYFdlIGhhdmUgbm90IG1hZGUgb3VyIHdheSBpbnRvIHRoZSBjaXR5IHRvIGRvIGFueSB2aW9sZW5jZSwgYnV0IHRvIG9idGFpbiBzb21lIGdvb2QgdGhpbmcgZnJvbSB5b3UgaWYgd2UgY2FuLCBvciBpZiB0aGF0IGlzIG5vdCBwb3NzaWJsZSwgYXQgbGVhc3QgdG8gc2hvdyB0aGF0IHdlIGdvIGZvcnRoLCBub3QgYmVjYXVzZSB3ZSBhcmUgZGVjZWl2ZWQsIGJ1dCBiZWNhdXNlIHdlIGFyZSBvYmVkaWVudC4n4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.1.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhpcyBjb3Vyc2Ugd2FzIHJlc29sdmVkIHVwb24sIGFuZCB0aGV5IHNlbnQgSGllcm9ueW11cyB0aGUgRWxlYW4sIEV1cnlsb2NodXMgdGhlIEFyY2FkaWFuLCBhbmQgUGhpbGVzaXVzIHRoZSBBY2hhZWFuIHRvIGJlYXIgdGhpcyBtZXNzYWdlLiBTbyB0aGV5IGRlcGFydGVkIHRvIHBlcmZvcm0gdGhlaXIgbWlzc2lvbi4KPC90cmFuc2xhdGlvbj4="
translation['7.1.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hpbGUgdGhlIHNvbGRpZXJzIHdlcmUgc3RpbGwgaW4gc2Vzc2lvbiBDb2VyYXRhZGFzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDcuMS4xMyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA3LjEuMTM8L2JpYmw+IGFuZCBub3RlIHRoZXJlb24uPC9ub3RlPiB0aGUgVGhlYmFuIGNhbWUgaW4sIGEgbWFuIHdobyB3YXMgZ29pbmcgdXAgYW5kIGRvd24gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjEuMTMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNy4xLjEzPC9iaWJsPiBhbmQgbm90ZSB0aGVyZW9uLjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgbm90IGluIGV4aWxlLCBidXQgYmVjYXVzZSBoZSB3YXMgYWZmbGljdGVkIHdpdGggYSBkZXNpcmUgdG8gYmUgYSBnZW5lcmFsLCBhbmQgaGUgd2FzIG9mZmVyaW5nIGhpcyBzZXJ2aWNlcyB0byBhbnkgY2l0eSBvciBwZW9wbGUgdGhhdCBtaWdodCBiZSB3YW50aW5nIGEgZ2VuZXJhbDsgc28gYXQgdGhpcyB0aW1lIGhlIGNhbWUgdG8gdGhlIHRyb29wcyBhbmQgc2FpZCB0aGF0IGhlIHdhcyByZWFkeSB0byBsZWFkIHRoZW0gdG8gdGhlIERlbHRhLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIHNpbmNlIGhlIHdhcyB0aGUgb25seSBMYWNlZGFlbW9uaWFuIGFtb25nIHRoZSBnZW5lcmFscy48L25vdGU+IGFzIGl0IGlzIGNhbGxlZCwgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI3NTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjc1NiI+VGhyYWNlPC9wbGFjZU5hbWU+LCB3aGVyZSB0aGV5IGNvdWxkIGdldCBwbGVudHkgb2YgZ29vZCB0aGluZ3M7IGFuZCB1bnRpbCB0aGV5IHNob3VsZCByZWFjaCB0aGVyZSwgaGUgc2FpZCBoZSB3b3VsZCBzdXBwbHkgdGhlbSB3aXRoIGZvb2QgYW5kIGRyaW5rIGluIGFidW5kYW5jZS4KPC90cmFuc2xhdGlvbj4="
translation['7.1.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSBzb2xkaWVycyBoZWFyZCB0aGlzIHByb3Bvc2FsIGFuZCB0aGUgd29yZCB0aGF0IGNhbWUgYmFjayBhdCB0aGUgc2FtZSB0aW1lIGZyb20gQW5heGliaXVz4oCUaGlzIHJlcGx5IHdhcywgdGhhdCBpZiB0aGV5IHdlcmUgb2JlZGllbnQgdGhleSB3b3VsZCBub3QgYmUgc29ycnkgZm9yIGl0LCBidXQgdGhhdCBoZSB3b3VsZCByZXBvcnQgdGhlIG1hdHRlciB0byBoaXMgZ292ZXJubWVudCBhdCBob21lIGFuZCB3b3VsZCBoaW1zZWxmIGRldmlzZSB3aGF0ZXZlciBnb29kIGNvdW5zZWwgaGUgY291bGQgaW4gdGhlaXIgY2FzZeKAlAo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz50aGV5IHRoZXJldXBvbiBhY2NlcHRlZCBDb2VyYXRhZGFzIGFzIGdlbmVyYWwgYW5kIHdpdGhkcmV3IG91dHNpZGUgdGhlIHdhbGxzLiBBbmQgQ29lcmF0YWRhcyBtYWRlIGFuIGFncmVlbWVudCB3aXRoIHRoZW0gdGhhdCBoZSB3b3VsZCBqb2luIHRoZSBhcm15IG9uIHRoZSBuZXh0IGRheSB3aXRoIHNhY3JpZmljaWFsIHZpY3RpbXMgYW5kIGEgc29vdGhzYXllciwgYXMgd2VsbCBhcyBmb29kIGFuZCBkcmluayBmb3IgdGhlIHRyb29wcy4KPC90cmFuc2xhdGlvbj4="
translation['7.1.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUsIGFzIHNvb24gYXMgdGhleSBoYWQgZ29uZSBmb3J0aCBmcm9tIHRoZSBjaXR5LCBBbmF4aWJpdXMgY2xvc2VkIHRoZSBnYXRlcyBhbmQgbWFkZSBwcm9jbGFtYXRpb24gdGhhdCBhbnkgc29sZGllciB3aG8gbWlnaHQgYmUgY2F1Z2h0IGluc2lkZSB0aGUgY2l0eSB3b3VsZCBiZSBzb2xkIGFzIGEgc2xhdmUuCjwvdHJhbnNsYXRpb24+"
translation['7.1.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgbmV4dCBkYXkgQ29lcmF0YWRhcyBhcnJpdmVkIHdpdGggaGlzIHNhY3JpZmljaWFsIHZpY3RpbXMgYW5kIGhpcyBzb290aHNheWVyLCBhbmQgdGhlcmUgZm9sbG93ZWQgaGltIHR3ZW50eSBtZW4gbG9hZGVkIHdpdGggYmFybGV5LW1lYWwsIGFub3RoZXIgdHdlbnR5IHdpdGggd2luZSwgdGhyZWUgd2l0aCBvbGl2ZXMsIGFub3RoZXIgbWFuIHdpdGggYXMgYmlnIGEgbG9hZCBvZiBnYXJsaWMgYXMgaGUgY291bGQgY2FycnksIGFuZCBhbm90aGVyIHdpdGggb25pb25zLiBBZnRlciBzZXR0aW5nIGRvd24gYWxsIHRoZXNlIHRoaW5ncywgYXMgdGhvdWdoIGZvciBkaXN0cmlidXRpb24sIGhlIHByb2NlZWRlZCB0byBzYWNyaWZpY2UuCjwvdHJhbnNsYXRpb24+"
translation['7.1.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIG5vdyBYZW5vcGhvbiBzZW50IGZvciBDbGVhbmRlciBhbmQgdXJnZWQgaGltIHRvIG1ha2UgYXJyYW5nZW1lbnRzIHNvIHRoYXQgaGUgY291bGQgZW50ZXIgd2l0aGluIHRoZSB3YWxsIGFuZCB0aHVzIHNhaWwgaG9tZXdhcmQgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEJ5emFudGl1bSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQnl6YW50aXVtIj5CeXphbnRpdW08L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['7.1.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIENsZWFuZGVyIHJldHVybmVkLCBoZSBzYWlkIHRoYXQgaXQgd2FzIG9ubHkgd2l0aCB2ZXJ5IGdyZWF0IGRpZmZpY3VsdHkgdGhhdCBoZSBoYWQgYWNjb21wbGlzaGVkIHRoZSBhcnJhbmdlbWVudDsgZm9yIEFuYXhpYml1cyBzYWlkIGl0IHdhcyBub3Qgd2VsbCB0byBoYXZlIHRoZSBzb2xkaWVycyBjbG9zZSBieSB0aGUgd2FsbCBhbmQgWGVub3Bob24gd2l0aGluIGl0OyB0aGUgQnl6YW50aW5lcywgbW9yZW92ZXIsIHdlcmUgaW4gYSBmYWN0aW91cyBzdGF0ZSBhbmQgaG9zdGlsZSB0byBvbmUgYW5vdGhlci4g4oCcTmV2ZXJ0aGVsZXNzLOKAnSBDbGVhbmRlciBjb250aW51ZWQsIOKAnGhlIGJhZGUgeW91IGNvbWUgaW4gaWYgeW91IGFyZSBpbnRlbmRpbmcgdG8gc2FpbCBhd2F5IHdpdGggaGltLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5YZW5vcGhvbiBhY2NvcmRpbmdseSB0b29rIGhpcyBsZWF2ZSBvZiB0aGUgc29sZGllcnMgYW5kIHdlbnQgYmFjayB3aXRoaW4gdGhlIHdhbGwgaW4gY29tcGFueSB3aXRoIENsZWFuZGVyLiBBcyBmb3IgQ29lcmF0YWRhcywgb24gdGhlIGZpcnN0IGRheSBoZSBjb3VsZCBub3QgZ2V0IGdvb2Qgb21lbnMgZnJvbSBoaXMgc2FjcmlmaWNlcyBub3IgZGlkIGhlIHNlcnZlIG91dCBhbnkgcmF0aW9ucyBhdCBhbGwgdG8gdGhlIHRyb29wczsgb24gdGhlIGZvbGxvd2luZyBkYXkgdGhlIHZpY3RpbXMgd2VyZSBzdGFuZGluZyBiZXNpZGUgdGhlIGFsdGFyIGFuZCBDb2VyYXRhZGFzIGhhZCBvbiBoaXMgY2hhcGxldCwgcmVhZHkgZm9yIHRoZSBzYWNyaWZpY2UsIHdoZW4gVGltYXNpb24gdGhlIERhcmRhbmlhbiwgTmVvbiB0aGUgQXNpbmFlYW4sIGFuZCBDbGVhbm9yIHRoZSBPcmNob21lbmlhbiBjYW1lIHVwIGFuZCB0b2xkIGhpbSBub3QgdG8gbWFrZSB0aGUgb2ZmZXJpbmcsIGZvciBoZSB3YXMgbm90IHRvIGJlIGxlYWRlciBvZiB0aGUgYXJteSB1bmxlc3MgaGUgc2hvdWxkIGdpdmUgdGhlbSBwcm92aXNpb25zLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz5TbyBoZSBvcmRlcmVkIHJhdGlvbnMgdG8gYmUgc2VydmVkIG91dC4gV2hlbiBpdCBwcm92ZWQsIGhvd2V2ZXIsIHRoYXQgaGlzIHN1cHBseSBmZWxsIGZhciBzaG9ydCBvZiBhbW91bnRpbmcgdG8gYSBkYXkncyBmb29kIGZvciBlYWNoIG9mIHRoZSBzb2xkaWVycywgaGUgdG9vayBoaXMgdmljdGltcyBhbmQgd2VudCBhd2F5LCByZW5vdW5jaW5nIGhpcyBnZW5lcmFsc2hpcC4KPC90cmFuc2xhdGlvbj4="
translation['7.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSBub3cgcmVtYWluZWQgaW4gY29tbWFuZCBvZiB0aGUgYXJteSBOZW9uIHRoZSBBc2luYWVhbiwgUGhyeW5pc2N1cyB0aGUgQWNoYWVhbiwgUGhpbGVzaXVzIHRoZSBBY2hhZWFuLCBYYW50aGljbGVzIHRoZSBBY2hhZWFuLCBhbmQgVGltYXNpb24gdGhlIERhcmRhbmlhbiwgYW5kIHRoZXkgcHJvY2VlZGVkIHRvIHNvbWUgdmlsbGFnZXMgb2YgdGhlIFRocmFjaWFucyB3aGljaCB3ZXJlIG5lYXIgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxCeXphbnRpdW0iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEJ5emFudGl1bSI+Qnl6YW50aXVtPC9wbGFjZU5hbWU+IGFuZCB0aGVyZSBlbmNhbXBlZC4KICAgIDwvdHJhbnNsYXRpb24+"
translation['7.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk5vdyB0aGUgZ2VuZXJhbHMgd2VyZSBhdCB2YXJpYW5jZSBpbiB0aGVpciB2aWV3czogQ2xlYW5vciBhbmQgUGhyeW5pc2N1cyB3YW50ZWQgdG8gbGVhZCB0aGUgYXJteSB0byBTZXV0aGVzLCBmb3IgaGUgaGFkIGJlZW4gdHJ5aW5nIHRvIHBlcnN1YWRlIHRoZW0gdG8gdGhpcyBjb3Vyc2UgYW5kIGhhZCBnaXZlbiBvbmUgb2YgdGhlbSBhIGhvcnNlIGFuZCB0aGUgb3RoZXIgYSB3b21hbjsgTmVvbiB3YW50ZWQgdG8gZ28gdG8gdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDEyNzg5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMTI3ODkiPkNoZXJzb25lc2U8L3BsYWNlTmFtZT4sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDUuNi4yMyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA1LjYuMjM8L2JpYmw+Ljwvbm90ZT4gdGhpbmtpbmcgdGhhdCBpZiB0aGUgdHJvb3BzIHNob3VsZCBmYWxsIHVuZGVyIHRoZSBjb250cm9sIG9mIHRoZSBMYWNlZGFlbW9uaWFucywgaGUgd291bGQgYmUgbGVhZGVyIG9mIHRoZSBlbnRpcmUgYXJteTsgYW5kIFRpbWFzaW9uIHdhcyBlYWdlciB0byBjcm9zcyBiYWNrIGFnYWluIHRvIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS42LjIzIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuNi4yMzwvYmlibD4uPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPiwgZm9yIGhlIHRob3VnaHQgdGhhdCBpbiB0aGlzIHdheSBoZSBjb3VsZCBhY2NvbXBsaXNoIGhpcyByZXR1cm4gaG9tZS4gQXMgZm9yIHRoZSB0cm9vcHMsIHRvIHJldHVybiBob21lIHdhcyB3aGF0IHRoZXkgYWxzbyBkZXNpcmVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFzIHRpbWUgd29yZSBvbiwgaG93ZXZlciwgbWFueSBvZiB0aGUgc29sZGllcnMgZWl0aGVyIHNvbGQgdGhlaXIgYXJtcyB1cCBhbmQgZG93biB0aGUgY291bnRyeSBhbmQgc2V0IHNhaWwgZm9yIGhvbWUgaW4gYW55IHdheSB0aGV5IGNvdWxkLCBvciBlbHNlIG1pbmdsZWQgd2l0aCB0aGUgcGVvcGxlIG9mIHRoZSBuZWlnaGJvdXJpbmcgR3JlZWsgY2l0aWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBBbmF4aWJpdXMgd2FzIGdsYWQgdG8gaGVhciB0aGUgbmV3cyB0aGF0IHRoZSBhcm15IHdhcyBicmVha2luZyB1cDsgZm9yIHRoZSB0aG91Z2h0IHRoYXQgaWYgdGhpcyBwcm9jZXNzIHdlbnQgb24sIFBoYXJuYWJhenVzIHdvdWxkIGJlIHZlcnkgZ3JlYXRseSBwbGVhc2VkLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGlsZSBBbmF4aWJpdXMgd2FzIG9uIGhpcyBob21ld2FyZCB2b3lhZ2UgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEJ5emFudGl1bSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQnl6YW50aXVtIj5CeXphbnRpdW08L3BsYWNlTmFtZT4sIGhlIHdhcyBtZXQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDeXppY3VzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDeXppY3VzIj5DeXppY3VzPC9wbGFjZU5hbWU+IGJ5IEFyaXN0YXJjaHVzLCBDbGVhbmRlcidzIHN1Y2Nlc3NvciBhcyBnb3Zlcm5vciBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEJ5emFudGl1bSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQnl6YW50aXVtIj5CeXphbnRpdW08L3BsYWNlTmFtZT47IGFuZCBpdCB3YXMgcmVwb3J0ZWQgdGhhdCBoaXMgb3duIHN1Y2Nlc3NvciBhcyBhZG1pcmFsLCBQb2x1cywgaGFkIGJ5IHRoaXMgdGltZSBhbGwgYnV0IHJlYWNoZWQgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjM4IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2MzgiPkhlbGxlc3BvbnQ8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['7.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuYXhpYml1cywgdGhlbiwgY2hhcmdlZCBBcmlzdGFyY2h1cyB0byBzZWxsIGFzIHNsYXZlcyBhbGwgdGhlIHNvbGRpZXJzIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4nIGFybXkgdGhhdCBoZSBtaWdodCBmaW5kIGxlZnQgYmVoaW5kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQnl6YW50aXVtIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxCeXphbnRpdW0iPkJ5emFudGl1bTwvcGxhY2VOYW1lPi4gQXMgZm9yIENsZWFuZGVyLCBoZSBoYWQgbm90IHNvbGQgb25lIG9mIHRoZW0sIGJ1dCBoYWQgZXZlbiBiZWVuIGNhcmluZyBmb3IgdGhlaXIgc2ljayBvdXQgb2YgcGl0eSBhbmQgY29tcGVsbGluZyB0aGUgQnl6YW50aW5lcyB0byByZWNlaXZlIHRoZW0gaW4gdGhlaXIgaG91c2VzOyBidXQgdGhlIG1vbWVudCBBcmlzdGFyY2h1cyBhcnJpdmVkIGhlIHNvbGQgbm8gZmV3ZXIgdGhhbiBmb3VyIGh1bmRyZWQuCjwvdHJhbnNsYXRpb24+"
translation['7.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gQW5heGliaXVzIGhhZCBjb2FzdGVkIGFsb25nIHRvIFBhcml1bSwgaGUgc2VudCB0byBQaGFybmFiYXp1cywgYWNjb3JkaW5nIHRvIHRoZSB0ZXJtcyBvZiB0aGVpciBhZ3JlZW1lbnQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDcuMS4yIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDcuMS4yPC9iaWJsPi48L25vdGU+IEFzIHNvb24gYXMgUGhhcm5hYmF6dXMgbGVhcm5lZCwgaG93ZXZlciwgdGhhdCBBcmlzdGFyY2h1cyBoYWQgY29tZSB0byA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDcuMS4yIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDcuMS4yPC9iaWJsPi48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEJ5emFudGl1bSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQnl6YW50aXVtIj5CeXphbnRpdW08L3BsYWNlTmFtZT4gYXMgZ292ZXJub3IgYW5kIHRoYXQgQW5heGliaXVzIHdhcyBubyBsb25nZXIgYWRtaXJhbCwgaGUgcGFpZCBubyBoZWVkIHRvIEFuYXhpYml1cywgYnV0IHNldCBhYm91dCBtYWtpbmcgdGhlIHNhbWUgYXJyYW5nZW1lbnQgd2l0aCBBcmlzdGFyY2h1cyBpbiByZWdhcmQgdG8gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lydXM8L3BlcnNOYW1lPicgYXJteSBhcyBoZSBoYWQgaGFkIHdpdGggQW5heGliaXVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZXVwb24gQW5heGliaXVzIHN1bW1vbmVkIFhlbm9waG9uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldobyB3YXMgbWFuaWZlc3RseSBtYWtpbmcgdGhlIHZveWFnZSB3aXRoIGhpbS4gY3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNy4xLjM5IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDcuMS4zOTwvYmlibD4gYWJvdmUuPC9ub3RlPiBhbmQgdXJnZWQgaGltIGJ5IGFsbCBtYW5uZXIgb2YgbWVhbnMgdG8gc2V0IHNhaWwgYXMgcXVpY2tseSBhcyBwb3NzaWJsZSBhbmQgam9pbiB0aGUgYXJteSwgYW5kIG5vdCBvbmx5IHRvIGtlZXAgaXQgdG9nZXRoZXIsIGJ1dCBsaWtld2lzZSB0byBjb2xsZWN0IHRoZSBncmVhdGVzdCBudW1iZXIgaGUgY291bGQgb2YgdGhvc2Ugd2hvIGhhZCBiZWNvbWUgc2NhdHRlcmVkIGZyb20gdGhlIG1haW4gYm9keSwgYW5kIHRoZW4sIGFmdGVyIGxlYWRpbmcgdGhlIGVudGlyZSBmb3JjZSBhbG9uZyB0aGUgY29hc3QgdG8gUGVyaW50aHVzLDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNy4xLjM5IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDcuMS4zOTwvYmlibD4gYWJvdmUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk9uIHRoZSBFdXJvcGVhbiBzaG9yZSBvZiB0aGUgUHJvcG9udGlzLjwvbm90ZT4gdG8gdGFrZSBpdCBhY3Jvc3MgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPiB3aXRoIGFsbCBzcGVlZDsgaGUgYWxzbyBnYXZlIGhpbSBhIHRoaXJ0eS1vYXJlZCB3YXJzaGlwIGFuZCBhIGxldHRlciwgYW5kIHNlbnQgd2l0aCBoaW0gYSBtYW4gd2hvIHdhcyB0byBvcmRlciB0aGUgUGVyaW50aGlhbnMgdG8gZnVybmlzaCBYZW5vcGhvbiB3aXRoIGhvcnNlcyBhbmQgc3BlZWQgaGltIG9uIGhpcyB3YXkgdG8gdGhlIGFybXkgYXMgcmFwaWRseSBhcyBwb3NzaWJsZS4gU28gWGVub3Bob24gc2FpbGVkIGFjcm9zcyB0byBQZXJpbnRodXMgYW5kIHRoZW4gbWFkZSBoaXMgd2F5IHRvIHRoZSBhcm15Owo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPmFuZCB0aGUgc29sZGllcnMgcmVjZWl2ZWQgaGltIHdpdGggcGxlYXN1cmUsIGFuZCB3ZXJlIGdsYWQgdG8gZm9sbG93IGhpcyBsZWFkIGF0IG9uY2UsIHdpdGggdGhlIGlkZWEgb2YgY3Jvc3Npbmcgb3ZlciBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNzU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI3NTYiPlRocmFjZTwvcGxhY2VOYW1lPiB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDA0Ij5Bc2lhPC9wbGFjZU5hbWU+Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVhbndoaWxlIFNldXRoZXMsIHVwb24gaGVhcmluZyBvZiBYZW5vcGhvbidzIGFycml2YWwsIHNlbnQgTWVkb3NhZGVzIHRvIGhpbSBhZ2FpbiBieSBzZWEsIGFuZCBiZWdnZWQgaGltIHRvIGJyaW5nIHRoZSBhcm15IHRvIGhpbSwgb2ZmZXJpbmcgYW55IHByb21pc2Ugd2hlcmVieSBoZSBpbWFnaW5lZCBoZSBjb3VsZCBwZXJzdWFkZSBoaW0uIFhlbm9waG9uIHJlcGxpZWQgdGhhdCBpdCB3YXMgbm90IHBvc3NpYmxlIGZvciBhbnl0aGluZyBvZiB0aGlzIHNvcnQgdG8gY29tZSB0byBwYXNzLCBhbmQgdXBvbiByZWNlaXZpbmcgdGhpcyBhbnN3ZXIgTWVkb3NhZGVzIGRlcGFydGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIEdyZWVrcywgd2hlbiB0aGV5IHJlYWNoZWQgUGVyaW50aHVzLCBOZW9uIHdpdGggYWJvdXQgZWlnaHQgaHVuZHJlZCBtZW4gcGFydGVkIGNvbXBhbnkgd2l0aCB0aGUgb3RoZXJzIGFuZCB0b29rIHVwIGEgc2VwYXJhdGUgY2FtcDsgYnV0IGFsbCB0aGUgcmVzdCBvZiB0aGUgYXJteSB3ZXJlIHRvZ2V0aGVyIGluIHRoZSBzYW1lIHBsYWNlLCBiZXNpZGUgdGhlIHdhbGwgb2YgdGhlIFBlcmludGhpYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyBYZW5vcGhvbiBwcm9jZWVkZWQgdG8gbmVnb3RpYXRlIGZvciBzaGlwcywgaW4gb3JkZXIgdGhhdCB0aGV5IG1pZ2h0IGNyb3NzIG92ZXIgd2l0aCBhbGwgcG9zc2libGUgc3BlZWQuIEJ1dCBtZWFudGltZSBBcmlzdGFyY2h1cywgdGhlIGdvdmVybm9yIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQnl6YW50aXVtIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxCeXphbnRpdW0iPkJ5emFudGl1bTwvcGxhY2VOYW1lPiwgYXJyaXZlZCB3aXRoIHR3byB0cmlyZW1lcyBhbmQsIGhhdmluZyBiZWVuIHBlcnN1YWRlZCB0byB0aGlzIGNvdXJzZSBieSBQaGFybmFiYXp1cywgbm90IG9ubHkgZm9yYmFkZSB0aGUgc2hpcG1hc3RlcnMgdG8gY2FycnkgdGhlIGFybXkgYWNyb3NzLCBidXQgY2FtZSB0byB0aGUgY2FtcCBhbmQgdG9sZCB0aGUgc29sZGllcnMgbm90IHRvIHBhc3Mgb3ZlciBpbnRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwMDQiPkFzaWE8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['7.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5YZW5vcGhvbiByZXBsaWVkLCDigJxBbmF4aWJpdXMgc28gb3JkZXJlZCwgYW5kIHNlbnQgbWUgaGVyZSBmb3IgdGhhdCBwdXJwb3NlLuKAnSBBbmQgQXJpc3RhcmNodXMgcmV0b3J0ZWQsIOKAnEFuYXhpYml1cywgbWFyayB5b3UsIGlzIG5vIGxvbmdlciBhZG1pcmFsLCBhbmQgSSBhbSBnb3Zlcm5vciBoZXJlOyBpZiBJIGNhdGNoIGFueSBvbmUgb2YgeW91IG9uIHRoZSBzZWEsIEkgd2lsbCBzaW5rIGhpbS7igJ0gV2l0aCB0aGVzZSB3b3JkcyBoZSBkZXBhcnRlZCB3aXRoaW4gdGhlIHdhbGxzIG9mIFBlcmludGh1cy4gT24gdGhlIG5leHQgZGF5IGhlIHNlbnQgZm9yIHRoZSBnZW5lcmFscyBhbmQgY2FwdGFpbnMgb2YgdGhlIGFybXkuCjwvdHJhbnNsYXRpb24+"
translation['7.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgd2VyZSBhbHJlYWR5IG5lYXIgdGhlIHdhbGwsIHNvbWUgb25lIGJyb3VnaHQgd29yZCB0byBYZW5vcGhvbiB0aGF0IGlmIGhlIHdlbnQgaW4gaGUgd291bGQgYmUgc2VpemVkLCBhbmQgd291bGQgZWl0aGVyIG1lZXQgc29tZSBpbGwgZmF0ZSB0aGVuIGFuZCB0aGVyZSBvciBlbHNlIGJlIGRlbGl2ZXJlZCBvdmVyIHRvIFBoYXJuYWJhenVzLiBVcG9uIGhlYXJpbmcgdGhpcyBoZSBzZW50IHRoZSByZXN0IG9uIGFoZWFkLCB0ZWxsaW5nIHRoZW0gdGhhdCBoZSB3YXMgZGVzaXJvdXMgaGltc2VsZiBvZiBvZmZlcmluZyBhIGNlcnRhaW4gc2FjcmlmaWNlLgogICAgPC90cmFuc2xhdGlvbj4="
translation['7.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGhlIHdlbnQgYmFjayBhbmQgc2FjcmlmaWNlZCB0byBsZWFybiB3aGV0aGVyIHRoZSBnb2RzIHBlcm1pdHRlZCBvZiBoaXMgZW5kZWF2b3VyaW5nIHRvIHRha2UgdGhlIGFybXkgdG8gU2V1dGhlcy4gRm9yIGhlIHNhdyB0aGF0IGl0IHdhcyBub3Qgc2FmZSBmb3IgdGhlbSB0byB0cnkgdG8gY3Jvc3Mgb3ZlciB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDA0Ij5Bc2lhPC9wbGFjZU5hbWU+IHdoZW4gdGhlIG1hbiB3aG8gaW50ZW5kZWQgdG8gcHJldmVudCB0aGVpciBwYXNzYWdlIHBvc3Nlc3NlZCB0cmlyZW1lczsgb24gdGhlIG90aGVyIGhhbmQsIGl0IHdhcyBub3QgaGlzIGRlc2lyZSB0aGF0IHRoZSBhcm15IHNob3VsZCBnbyB0byB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMTI3ODkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAxMjc4OSI+Q2hlcnNvbmVzZTwvcGxhY2VOYW1lPiBhbmQgZmluZCBpdHNlbGYgc2h1dCB1cCBhbmQgaW4gc29yZSBuZWVkIG9mIGV2ZXJ5dGhpbmcgaW4gYSBwbGFjZSB3aGVyZSBpdCB3b3VsZCBiZSBuZWNlc3NhcnkgdG8gb2JleSB0aGUgcmVzaWRlbnQgZ292ZXJub3IgYW5kIHdoZXJlIHRoZSBhcm15IHdvdWxkIG5vdCBvYnRhaW4gYW55dGhpbmcgaW4gdGhlIHdheSBvZiBwcm92aXNpb25zLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hpbGUgWGVub3Bob24gd2FzIG9jY3VwaWVkIHdpdGggaGlzIHNhY3JpZmljaW5nLCB0aGUgZ2VuZXJhbHMgYW5kIGNhcHRhaW5zIHJldHVybmVkIGZyb20gdGhlaXIgdmlzaXQgdG8gQXJpc3RhcmNodXMgd2l0aCB3b3JkIHRoYXQgaGUgZGlyZWN0ZWQgdGhlbSB0byBnbyBhd2F5IGZvciB0aGUgcHJlc2VudCwgYnV0IHRvIGNvbWUgYmFjayBkdXJpbmcgdGhlIGFmdGVybm9vbjsgYXQgdGhhdCByZXBvcnQgdGhlIGRlc2lnbiBhZ2FpbnN0IFhlbm9waG9uIHNlZW1lZCB0byBiZSBldmVuIG1vcmUgbWFuaWZlc3QuCjwvdHJhbnNsYXRpb24+"
translation['7.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5TaW5jZSwgdGhlcmVmb3JlLCB0aGUgc2FjcmlmaWNlcyBhcHBlYXJlZCB0byBiZSBmYXZvdXJhYmxlLCBwb3J0ZW5kaW5nIHRoYXQgaGUgYW5kIHRoZSBhcm15IG1pZ2h0IGdvIHRvIFNldXRoZXMgaW4gc2FmZXR5LCBYZW5vcGhvbiB0b29rIFBvbHljcmF0ZXMsIHRoZSBBdGhlbmlhbiBjYXB0YWluLCBhbmQgZnJvbSBlYWNoIG9mIHRoZSBnZW5lcmFscyBleGNlcHQgTmVvbiBhIG1hbiBpbiB3aG9tIGVhY2ggaGFkIGNvbmZpZGVuY2UsIGFuZCBzZXQgb2ZmIGJ5IG5pZ2h0IHRvIHZpc2l0IFNldXRoZXMnIGFybXksIHNpeHR5IHN0YWRpYSBhd2F5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgaGFkIGdvdCBuZWFyIGl0LCBoZSBjYW1lIHVwb24gd2F0Y2gtZmlyZXMgd2l0aCBubyBvbmUgYWJvdXQgdGhlbS4gQW5kIGF0IGZpcnN0IGhlIHN1cHBvc2VkIHRoYXQgU2V1dGhlcyBoYWQgc2hpZnRlZCBoaXMgY2FtcCB0byBzb21lIG90aGVyIHBsYWNlOyBidXQgd2hlbiBoZSBiZWNhbWUgYXdhcmUgb2YgYSBnZW5lcmFsIHVwcm9hciBhbmQgaGVhcmQgU2V1dGhlcycgZm9sbG93ZXJzIHNpZ25hbGxpbmcgdG8gb25lIGFub3RoZXIsIGhlIGNvbXByZWhlbmRlZCB0aGF0IHRoZSByZWFzb24gU2V1dGhlcyBoYWQgaGlzIHdhdGNoLWZpcmVzIGtpbmRsZWQgaW4gZnJvbnQgb2YgdGhlIHBpY2tldHMgd2FzIGluIG9yZGVyIHRoYXQgdGhlIHBpY2tldHMgbWlnaHQgcmVtYWluIHVuc2VlbiwgaW4gdGhlIGRhcmtuZXNzIGFzIHRoZXkgd2VyZSwgc28gdGhhdCBubyBvbmUgY291bGQgdGVsbCBlaXRoZXIgaG93IG1hbnkgdGhleSB3ZXJlIG9yIHdoZXJlIHRoZXkgd2VyZSwgd2hpbGUgb24gdGhlIG90aGVyIGhhbmQgcGVvcGxlIHdobyB3ZXJlIGFwcHJvYWNoaW5nIGNvdWxkIG5vdCBlc2NhcGUgbm90aWNlLCBidXQgd291bGQgYmUgdmlzaWJsZSBpbiB0aGUgbGlnaHQgb2YgdGhlIGZpcmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBoZSBkaWQgc2VlIHBpY2tldHMsIGhlIHNlbnQgZm9yd2FyZCB0aGUgaW50ZXJwcmV0ZXIgaGUgY2hhbmNlZCB0byBoYXZlIGFuZCBiYWRlIHRoZW0gdGVsbCBTZXV0aGVzIHRoYXQgWGVub3Bob24gaGFkIGNvbWUgYW5kIGRlc2lyZWQgdG8gbWVldCB3aXRoIGhpbS4gVGhleSBhc2tlZCB3aGV0aGVyIGhlIHdhcyBhbiBBdGhlbmlhbiBmcm9tIHRoZSBhcm15Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBYZW5vcGhvbiBtYWRlIHJlcGx5IHRoYXQgaGUgd2FzIHRoZSBtYW4sIHRoZXkgbGVhcGVkIHVwIGFuZCBoYXN0ZW5lZCBvZmY7IGFuZCBhIGxpdHRsZSBhZnRlcndhcmRzIGFib3V0IHR3byBodW5kcmVkIHBlbHRhc3RzIGFwcGVhcmVkLCB0b29rIFhlbm9waG9uIGFuZCBoaXMgcGFydHksIGFuZCBwcm9jZWVkZWQgdG8gY29uZHVjdCB0aGVtIHRvIFNldXRoZXMuCjwvdHJhbnNsYXRpb24+"
translation['7.2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5IZSB3YXMgaW4gYSB0b3dlciBhbmQgd2VsbCBndWFyZGVkLCBhbmQgYWxsIGFyb3VuZCB0aGUgdG93ZXIgd2VyZSBob3JzZXMgcmVhZHkgYnJpZGxlZDsgZm9yIG91dCBvZiBmZWFyIGhlIGdhdmUgaGlzIGhvcnNlcyB0aGVpciBmb2RkZXIgYnkgZGF5LCBhbmQgYnkgbmlnaHQga2VwdCB0aGVtIHJlYWR5IGJyaWRsZWQgdG8gZ3VhcmQgaGltc2VsZiB3aXRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlcmUgd2FzIGEgc3RvcnkgdGhhdCBpbiB0aW1lIGdvbmUgYnkgVGVyZXMsIGFuIGFuY2VzdG9yIG9mIFNldXRoZXMsIGJlaW5nIGluIHRoaXMgcmVnaW9uIHdpdGggYSBsYXJnZSBhcm15LCBsb3N0IG1hbnkgb2YgaGlzIHRyb29wcyBhbmQgd2FzIHJvYmJlZCBvZiBoaXMgYmFnZ2FnZSB0cmFpbiBhdCB0aGUgaGFuZHMgb2YgdGhlIHBlb3BsZSBvZiB0aGlzIG5laWdoYm91cmhvb2Q7IHRoZXkgd2VyZSB0aGUgVGh5bmlhbnMsIGFuZCB3ZXJlIHNhaWQgdG8gYmUgdGhlIG1vc3Qgd2FybGlrZSBvZiBhbGwgbWVuLCBlc3BlY2lhbGx5IGJ5IG5pZ2h0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgR3JlZWsgcGFydHkgaGFkIGRyYXduIG5lYXIsIFNldXRoZXMgZGlyZWN0ZWQgWGVub3Bob24gdG8gY29tZSBpbiwgd2l0aCBhbnkgdHdvIG1lbiBoZSBtaWdodCBjaG9vc2UgdG8gYnJpbmcgd2l0aCBoaW0uIEFzIHNvb24gYXMgdGhleSB3ZXJlIGluc2lkZSwgdGhleSBmaXJzdCBncmVldGVkIG9uZSBhbm90aGVyIGFuZCBkcmFuayBoZWFsdGhzIGFmdGVyIHRoZSBUaHJhY2lhbiBmYXNoaW9uIGluIGhvcm5zIG9mIHdpbmU7IGFuZCBTZXV0aGVzIGhhZCBNZWRvc2FkZXMgcHJlc2VudCBhbHNvLCB0aGUgc2FtZSBtYW4gd2hvIHdlbnQgZXZlcnl3aGVyZSBhcyBoaXMgZW52b3kuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDcuMS41IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDcuMS41PC9iaWJsPiwgYW5kIDEwIGFib3ZlLjwvbm90ZT4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjEuNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA3LjEuNTwvYmlibD4sIGFuZCAxMCBhYm92ZS48L3RyYW5zbGF0aW9uPg=="
translation['7.2.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGF0IFhlbm9waG9uIGJlZ2FuIHRoZSBzcGVha2luZzog4oCcWW91IHNlbnQgdG8gbWUsIFNldXRoZXMsIGZpcnN0IGF0IENhbGNoZWRvbiwgdGhpcyBtYW4gTWVkb3NhZGVzLCB3aXRoIHRoZSByZXF1ZXN0IHRoYXQgSSBtYWtlIGV2ZXJ5IGVmZm9ydCBvbiB5b3VyIGJlaGFsZiB0byBicmluZyB0aGUgYXJteSBhY3Jvc3MgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDA0Ij5Bc2lhPC9wbGFjZU5hbWU+LCBhbmQgd2l0aCB0aGUgcHJvbWlzZSB0aGF0IGlmIEkgc2hvdWxkIGRvIHRoaXMsIHlvdSB3b3VsZCB0cmVhdCBtZSB3ZWxs4oCUYXMgTWVkb3NhZGVzIGhlcmUgZGVjbGFyZWQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.2.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciBzYXlpbmcgdGhpcywgaGUgYXNrZWQgTWVkb3NhZGVzIHdoZXRoZXIgdGhpcyBzdGF0ZW1lbnQgb2YgdGhlIG1hdHRlciB3YXMgYSB0cnVlIG9uZS4gSGUgcmVwbGllZCB0aGF0IGl0IHdhcy4g4oCcTWVkb3NhZGVzIGhlcmUgY2FtZSB0byBtZSBhIHNlY29uZCB0aW1lIGFmdGVyIEkgaGFkIGNyb3NzZWQgb3ZlciBmcm9tIFBhcml1bSB0byByZWpvaW4gdGhlIGFybXksIGFuZCBwcm9taXNlZCB0aGF0IGlmIEkgc2hvdWxkIGJyaW5nIHRoZSBhcm15IHRvIHlvdSwgeW91IHdvdWxkIG5vdCBvbmx5IHRyZWF0IG1lIGluIGFsbCB3YXlzIGFzIGEgZnJpZW5kIGFuZCBhIGJyb3RoZXIsIGJ1dCBpbiBwYXJ0aWN1bGFyIHdvdWxkIGdpdmUgbWUgdGhlIHBsYWNlcyBvbiB0aGUgc2VhY29hc3Qgb2Ygd2hpY2ggeW91IGhvbGQgcG9zc2Vzc2lvbi7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.2.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5IZXJldXBvbiBoZSBhZ2FpbiBhc2tlZCBNZWRvc2FkZXMgd2hldGhlciB0aGlzIHdhcyB3aGF0IGhlIHNhaWQsIGFuZCBoZSBhZ2FpbiBhZ3JlZWQgdGhhdCBpdCB3YXMuIOKAnENvbWUsIG5vdyzigJ0gWGVub3Bob24gd2VudCBvbiwg4oCcdGVsbCBTZXV0aGVzIHdoYXQgYW5zd2VyIEkgbWFkZSB5b3UgdGhhdCBmaXJzdCB0aW1lIGF0IENhbGNoZWRvbi7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.2.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz7igJxZb3UgYW5zd2VyZWQgdGhhdCB0aGUgYXJteSB3YXMgZ29pbmcgdG8gY3Jvc3Mgb3ZlciB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEJ5emFudGl1bSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQnl6YW50aXVtIj5CeXphbnRpdW08L3BsYWNlTmFtZT4gYW5kIHRoZXJlIHdhcyBubyBuZWVkLCBzbyBmYXIgYXMgdGhhdCB3YXMgY29uY2VybmVkLCBvZiBwYXlpbmcgYW55dGhpbmcgdG8geW91IG9yIGFueSBvbmUgZWxzZTsgeW91IGFsc28gc3RhdGVkIHRoYXQgd2hlbiB5b3UgaGFkIGdvdCBhY3Jvc3MsIHlvdSB3ZXJlIHlvdXJzZWxmIHRvIGxlYXZlIHRoZSBhcm15OyBhbmQgaXQgdHVybmVkIG91dCBqdXN0IGFzIHlvdSBzYWlkLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz7igJxXaGF0IHRoZW4gZGlkIEkgc2F5LOKAnSBYZW5vcGhvbiBhc2tlZCwg4oCcYXQgdGhlIHRpbWUgd2hlbiB5b3UgY2FtZSB0byBtZSBuZWFyIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU2VseW1icmlhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTZWx5bWJyaWEiPlNlbHltYnJpYTwvcGxhY2VOYW1lPj/igJ0g4oCcWW91IHNhaWQgdGhhdCB0aGUgcHJvamVjdCB3YXMgbm90IHBvc3NpYmxlLCBidXQgdGhhdCB5b3Ugd2VyZSBnb2luZyB0byBQZXJpbnRodXMgYW5kIGludGVuZGVkIHRvIGNyb3NzIG92ZXIgZnJvbSB0aGVyZSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDA0Ij5Bc2lhPC9wbGFjZU5hbWU+LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz7igJxXZWxsLCB0aGVuLOKAnSBzYWlkIFhlbm9waG9uLCDigJxhdCB0aGlzIG1vbWVudCBJIGFtIGhlcmUgbXlzZWxmLCBhbG9uZyB3aXRoIFBocnluaXNjdXMgaGVyZSwgb25lIG9mIHRoZSBnZW5lcmFscywgYW5kIFBvbHljcmF0ZXMgeW9uZGVyLCBvbmUgb2YgdGhlIGNhcHRhaW5zLCBhbmQgb3V0c2lkZSBhcmUgcmVwcmVzZW50YXRpdmVzIG9mIHRoZSBvdGhlciBnZW5lcmFscyBleGNlcHQgTmVvbiB0aGUgTGFjb25pYW4sIGluIGVhY2ggY2FzZSB0aGUgbWFuIG1vc3QgdHJ1c3RlZCBieSBlYWNoIGdlbmVyYWwuCjwvdHJhbnNsYXRpb24+"
translation['7.2.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5JZiB5b3Ugd2lzaCwgdGhlcmVmb3JlLCB0byBoYXZlIHRoZSB0cmFuc2FjdGlvbiBiZXR0ZXIgc2FmZWd1YXJkZWQsIGNhbGwgdGhlbSBpbiBhbHNvLiBHbyBhbmQgc2F5IHRvIHRoZW0sIFBvbHljcmF0ZXMsIHRoYXQgSSBkaXJlY3QgdGhlbSB0byBsZWF2ZSB0aGVpciBhcm1zIGJlaGluZCwgYW5kIGRvIHlvdSB5b3Vyc2VsZiBsZWF2ZSB5b3VyIHNhYnJlIG91dCB0aGVyZSBiZWZvcmUgY29taW5nIGJhY2sgYWdhaW4u4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.2.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXBvbiBoZWFyaW5nIHRoZXNlIHdvcmRzIFNldXRoZXMgc2FpZCB0aGF0IGhlIHNob3VsZCBub3QgZGlzdHJ1c3QgYW55IG9uZSB3aG8gd2FzIGFuIEF0aGVuaWFuOyBmb3IgaGUga25ldywgaGUgc2FpZCwgdGhhdCB0aGUgQXRoZW5pYW5zIHdlcmUga2luc21lbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BY2NvcmRpbmcgdG8gdHJhZGl0aW9uLCB0aHJvdWdoIHRoZSBtYXJyaWFnZSBvZiB0aGUgVGhyYWNpYW4gVGVyZXVzIChvciBUZXJlcywgY3AuIDIyIGFib3ZlLCBidXQgc2VlIGFsc28gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iVGh1Yy4gMi4yOSIgdmFsaWQ9InllcyI+VGh1Yy4gMi4yOTwvYmlibD4pIHdpdGggUHJvY25lLCBkYXVnaHRlciBvZiB0aGUgQXRoZW5pYW4ga2luZyBQYW5kaW9uLjwvbm90ZT4gb2YgaGlzLCBhbmQgaGUgYmVsaWV2ZWQgdGhleSB3ZXJlIGxveWFsIGZyaWVuZHMuIEFmdGVyIHRoaXMsIHdoZW4gdGhvc2Ugd2hvIHdlcmUgdG8gYmUgcHJlc2VudCBoYWQgY29tZSBpbiwgWGVub3Bob24gYmVnYW4gYnkgYXNraW5nIFNldXRoZXMgd2hhdCB1c2UgaGUgd2FudGVkIHRvIG1ha2Ugb2YgdGhlIGFybXkuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlRodWMuIDIuMjkiIHZhbGlkPSJ5ZXMiPlRodWMuIDIuMjk8L2JpYmw+KSB3aXRoIFByb2NuZSwgZGF1Z2h0ZXIgb2YgdGhlIEF0aGVuaWFuIGtpbmcgUGFuZGlvbi48L3RyYW5zbGF0aW9uPg=="
translation['7.2.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIFNldXRoZXMgc3Bva2UgYXMgZm9sbG93czog4oCcTWFlc2FkZXMgd2FzIG15IGZhdGhlciwgYW5kIGhpcyByZWFsbSBlbWJyYWNlZCB0aGUgTWVsYW5kaXRhZSwgdGhlIFRoeW5pYW5zLCBhbmQgdGhlIFRyYW5pcHNhZS4gTm93IHdoZW4gdGhlIGFmZmFpcnMgb2YgdGhlIE9kcnlzaWFucyBmZWxsIGludG8gYSBiYWQgc3RhdGUsIG15IGZhdGhlciB3YXMgZHJpdmVuIG91dCBvZiB0aGlzIGNvdW50cnksIGFuZCB0aGVyZWFmdGVyIHNpY2tlbmVkIGFuZCBkaWVkLCB3aGlsZSBJLCB0aGUgc29uLCB3YXMgYnJvdWdodCB1cCBhcyBhbiBvcnBoYW4gYXQgdGhlIGNvdXJ0IG9mIE1lZG9jdXMsIHRoZSBwcmVzZW50IGtpbmcuCjwvdHJhbnNsYXRpb24+"
translation['7.2.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIEkgYmVjYW1lIGEgeW91bmcgbWFuLCBob3dldmVyLCBJIGNvdWxkIG5vdCBlbmR1cmUgdG8gbGl2ZSB3aXRoIG15IGV5ZXMgdHVybmVkIHRvd2FyZCBhbm90aGVyJ3MgdGFibGU7IHNvIEkgc2F0IG15c2VsZiBkb3duIG9uIHRoZSBzYW1lIHNlYXQgd2l0aCBNZWRvY3VzIGFzIGEgc3VwcGxpYW50IGFuZCBiZXNvdWdodCBoaW0gdG8gZ2l2ZSBtZSBhcyBtYW55IG1lbiBhcyBoZSBjb3VsZCwgaW4gb3JkZXIgdGhhdCBJIG1pZ2h0IGluZmxpY3Qgd2hhdGV2ZXIgaGFybSBJIGNvdWxkIHVwb24gdGhvc2Ugd2hvIGRyb3ZlIHVzIG91dCwgYW5kIG1pZ2h0IGxpdmUgd2l0aG91dCB0dXJuaW5nIG15IGV5ZXMgdG93YXJkIGhpcyB0YWJsZS4KPC90cmFuc2xhdGlvbj4="
translation['7.2.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gaGUgZ2F2ZSBtZSB0aGUgbWVuIGFuZCB0aGUgaG9yc2VzIHRoYXQgeW91IHdpbGwgc2VlIGZvciB5b3Vyc2VsdmVzIGFzIHNvb24gYXMgZGF5IGhhcyBjb21lLiBBbmQgbm93IEkgbGl2ZSB3aXRoIHRoZW0sIHBsdW5kZXJpbmcgbXkgb3duIGFuY2VzdHJhbCBsYW5kLiBCdXQgaWYgeW91IHNob3VsZCBqb2luIG1lLCBJIHRoaW5rIHRoYXQgd2l0aCB0aGUgYWlkIG9mIHRoZSBnb2RzIEkgY291bGQgZWFzaWx5IHJlY292ZXIgbXkgcmVhbG0uIEl0IGlzIHRoaXMgdGhhdCBJIHdhbnQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.2.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2hhdCwgdGhlbizigJ0gc2FpZCBYZW5vcGhvbiwg4oCcc2hvdWxkIHlvdSBiZSBhYmxlLCBpbiBjYXNlIHdlIGNhbWUsIHRvIGdpdmUgdG8gdGhlIHJhbmsgYW5kIGZpbGUsIHRvIHRoZSBjYXB0YWlucywgYW5kIHRvIHRoZSBnZW5lcmFscz8gVGVsbCB1cywgc28gdGhhdCB0aGVzZSBtZW4gaGVyZSBtYXkgY2FycnkgYmFjayB3b3JkLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgU2V1dGhlcyBwcm9taXNlZCB0byBnaXZlIHRvIGVhY2ggc29sZGllciBhIEN5emljZW5lLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIHBlciBtb250aC4gIEZvciB0aGUgQ3l6aWNlbmUsIHNlZSBub3RlIG9uIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS42LjIzIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuNi4yMzwvYmlibD48L25vdGU+IHRvIHRoZSBjYXB0YWlucyB0d2ljZSBhcyBtdWNoLCBhbmQgdG8gdGhlIGdlbmVyYWxzIGZvdXIgdGltZXMgYXMgbXVjaDsgZnVydGhlcm1vcmUsIGFzIG11Y2ggbGFuZCBhcyB0aGV5IG1pZ2h0IHdpc2gsIHlva2VzIG9mIG94ZW4sIGFuZCBhIGZvcnRpZmllZCBwbGFjZSB1cG9uIHRoZSBzZWFjb2FzdC7igJ0KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjYuMjMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS42LjIzPC9iaWJsPjwvdHJhbnNsYXRpb24+"
translation['7.2.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz7igJxCdXQs4oCdIHNhaWQgWGVub3Bob24sIOKAnGlmIHdlIG1ha2UgdGhpcyBhdHRlbXB0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gdG8gcGVyc3VhZGUgdGhlIHRyb29wcyB0byB0YWtlIHNlcnZpY2UgdW5kZXIgU2V1dGhlcy4gIFNlZS4gYmVsb3cuPC9ub3RlPiBhbmQgZG8gbm90IHN1Y2NlZWQsIGJlY2F1c2Ugb2Ygc29tZSBpbnRpbWlkYXRpb24gb24gdGhlIHBhcnQgb2YgdGhlIExhY2VkYWVtb25pYW5zLCB3aWxsIHlvdSByZWNlaXZlIGludG8geW91ciBjb3VudHJ5IGFueSBvbmUgd2hvIG1heSB3aXNoIHRvIGxlYXZlIHRoZSBhcm15IGFuZCBjb21lIHRvIHlvdT/igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.2.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaGUgcmVwbGllZDog4oCcTmF5LCBtb3JlIHRoYW4gdGhhdCwgSSB3aWxsIG1ha2UgeW91IG15IGJyb3RoZXJzLCB0YWJsZS1jb21wYW5pb25zLCBzaGFyZXJzIHRvIHRoZSB1dHRlcm1vc3QgaW4gYWxsIHRoYXQgd2UgbWF5IGZpbmQgb3Vyc2VsdmVzIGFibGUgdG8gYWNxdWlyZS4gQW5kIHRvIHlvdSwgWGVub3Bob24sIEkgd2lsbCBhbHNvIGdpdmUgbXkgZGF1Z2h0ZXIsIGFuZCBpZiB5b3UgaGF2ZSBhIGRhdWdodGVyLCBJIHdpbGwgYnV5IGhlciBhZnRlciB0aGUgVGhyYWNpYW4gZmFzaGlvbjsgYW5kIEkgd2lsbCBnaXZlIHlvdSBmb3IgYSByZXNpZGVuY2UgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwODY5MjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTA4NjkyNyI+QmlzYW50aGU8L3BsYWNlTmFtZT4sIHRoZSB2ZXJ5IGZhaXJlc3Qgb2YgYWxsIHRoZSBwbGFjZXMgSSBoYXZlIHVwb24gdGhlIHNlYWNvYXN0LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgaGVhcmluZyB0aGVzZSB3b3JkcyBhbmQgZ2l2aW5nIGFuZCByZWNlaXZpbmcgcGxlZGdlcyB0aGV5IHJvZGUgYXdheSwgYW5kIGJlZm9yZSBkYXlicmVhayB0aGV5IGFycml2ZWQgYXQgdGhlIGNhbXAgYW5kIG1hZGUgdGhlaXIgcmVwb3J0LCBlYWNoIG9uZSB0byB0aG9zZSB3aG8gaGFkIHNlbnQgaGltLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gZGF5IGNhbWUsIEFyaXN0YXJjaHVzIGFnYWluIHN1bW1vbmVkIHRoZSBnZW5lcmFsczsgYnV0IHRoZXkgcmVzb2x2ZWQgdG8gZGlzcmVnYXJkIHRoZSBzdW1tb25zIG9mIEFyaXN0YXJjaHVzIGFuZCBpbnN0ZWFkIHRvIGNhbGwgYSBtZWV0aW5nIG9mIHRoZSBhcm15LiBBbmQgYWxsIHRoZSB0cm9vcHMgZ2F0aGVyZWQgZXhjZXB0IE5lb24ncyBtZW4sIHdobyB3ZXJlIGVuY2FtcGVkIGFib3V0IHRlbiBzdGFkaWEgYXdheS4KICAgIDwvdHJhbnNsYXRpb24+"
translation['7.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSBoYWQgZ2F0aGVyZWQsIFhlbm9waG9uIGFyb3NlIGFuZCBzcG9rZSBhcyBmb2xsb3dzOiDigJxTb2xkaWVycywgYXMgZm9yIHNhaWxpbmcgYWNyb3NzIHRvIHRoZSBwbGFjZSB3aGVyZSB3ZSB3aXNoIHRvIGdvLCBBcmlzdGFyY2h1cyB3aXRoIGhpcyB0cmlyZW1lcyBwcmV2ZW50cyBvdXIgZG9pbmcgdGhhdDsgdGhlIHJlc3VsdCBpcywgdGhhdCBpdCBpcyBub3Qgc2FmZSBmb3IgdXMgdG8gZW1iYXJrIHVwb24gYm9hdHM7IGJ1dCB0aGlzIHNhbWUgQXJpc3RhcmNodXMgZGlyZWN0cyB1cyB0byBmb3JjZSBvdXIgd2F5IHRvIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAxMjc4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDEyNzg5Ij5DaGVyc29uZXNlPC9wbGFjZU5hbWU+LCB0aHJvdWdoIHRoZSBTYWNyZWQgTW91bnRhaW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNy4xLjEzIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDcuMS4xMyw8L2JpYmw+IGFuZCBub3RlIHRoZXJlb248L25vdGU+OyBhbmQgaWYgd2UgbWFrZSBvdXJzZWx2ZXMgbWFzdGVycyBvZiB0aGUgbW91bnRhaW4gYW5kIGdldCB0byB0aGUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjEuMTMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNy4xLjEzLDwvYmlibD4gYW5kIG5vdGUgdGhlcmVvbjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDEyNzg5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMTI3ODkiPkNoZXJzb25lc2U8L3BsYWNlTmFtZT4sIGhlIHNheXMgdGhhdCBoZSB3aWxsIG5vdCBzZWxsIHlvdSBhbnkgbW9yZSwgYXMgaGUgZGlkIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQnl6YW50aXVtIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxCeXphbnRpdW0iPkJ5emFudGl1bTwvcGxhY2VOYW1lPiwgdGhhdCB5b3Ugd2lsbCBub3QgYmUgY2hlYXRlZCBhbnkgbW9yZSBidXQgd2lsbCByZWNlaXZlIHBheSwgYW5kIHRoYXQgaGUgd2lsbCBub3Qgc2h1dCBoaXMgZXllcyBhbnkgbW9yZSwgYXMgaGUgZG9lcyBub3csIHRvIHlvdXIgYmVpbmcgaW4gd2FudCBvZiBwcm92aXNpb25zLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlNvIG11Y2ggZm9yIHdoYXQgQXJpc3RhcmNodXMgc2F5czsgYnV0IFNldXRoZXMgc2F5cyB0aGF0IGlmIHlvdSBjb21lIHRvIGhpbSwgaGUgd2lsbCB0cmVhdCB5b3Ugd2VsbC4gTm93LCB0aGVyZWZvcmUsIG1ha2UgdXAgeW91ciBtaW5kcyB3aGV0aGVyIHlvdSB3aWxsIGNvbnNpZGVyIHRoaXMgcXVlc3Rpb24gaGVyZSBhbmQgbm93IG9yIGFmdGVyIHlvdSBoYXZlIHNldCBmb3J0aCBpbiBxdWVzdCBvZiBwcm92aXNpb25zLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk15IG93biBvcGluaW9uIGlzLCBzZWVpbmcgdGhhdCBoZXJlIHdlIG5laXRoZXIgaGF2ZSBtb25leSB3aXRoIHdoaWNoIHRvIGJ1eSBub3IgYXJlIHBlcm1pdHRlZCB0byB0YWtlIGFueXRoaW5nIHdpdGhvdXQgbW9uZXksIHRoYXQgd2Ugb3VnaHQgdG8gc2V0IGZvcnRoIHRvIHRoZSB2aWxsYWdlcyBmcm9tIHdoaWNoIHdlIGFyZSBwZXJtaXR0ZWQgdG8gdGFrZSwgc2luY2UgdGhlaXIgaW5oYWJpdGFudHMgYXJlIHdlYWtlciB0aGFuIG91cnNlbHZlcywgYW5kIHRoYXQgdGhlcmUsIHBvc3Nlc3NlZCBvZiBwcm92aXNpb25zIGFuZCBoZWFyaW5nIHdoYXQgdGhlIHNlcnZpY2UgaXMgdGhhdCBvbmUgd2FudHMgdXMgZm9yLCB3ZSBzaG91bGQgY2hvb3NlIHdoYXRldmVyIGNvdXJzZSBtYXkgc2VlbSBiZXN0IHRvIHVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPldob2V2ZXIs4oCdIGhlIHNhaWQsIOKAnGhvbGRzIHRoaXMgb3BpbmlvbiwgbGV0IGhpbSByYWlzZSBoaXMgaGFuZC7igJ0gRXZlcnkgaGFuZCB3YXMgcmFpc2VkLiDigJxHbyBhd2F5LCB0aGVuLOKAnSBYZW5vcGhvbiBjb250aW51ZWQsIOKAnGFuZCBwYWNrIHVwLCBhbmQgd2hlbiB0aGUgd29yZCBpcyBnaXZlbiwgZm9sbG93IHRoZSB2YW4u4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIFhlbm9waG9uIGxlZCB0aGUgd2F5IGFuZCB0aGUgdHJvb3BzIGZvbGxvd2VkLiBOZW9uLCBpbmRlZWQsIGFuZCBtZXNzZW5nZXJzIGZyb20gQXJpc3RhcmNodXMgdHJpZWQgdG8gcGVyc3VhZGUgdGhlbSB0byB0dXJuIGJhY2ssIGJ1dCB0aGV5IHdvdWxkIG5vdCBsaXN0ZW4gdG8gdGhlbS4gV2hlbiB0aGV5IGhhZCBhZHZhbmNlZCBhcyBtdWNoIGFzIHRoaXJ0eSBzdGFkaWEsIFNldXRoZXMgbWV0IHRoZW0uIEFuZCBYZW5vcGhvbiwgY2F0Y2hpbmcgc2lnaHQgb2YgaGltLCBiYWRlIGhpbSByaWRlIHVwIHRvIHRoZSB0cm9vcHMsIGluIG9yZGVyIHRoYXQgaGUgbWlnaHQgdGVsbCBoaW0gd2l0aGluIGhlYXJpbmcgb2YgdGhlIGdyZWF0ZXN0IHBvc3NpYmxlIG51bWJlciB3aGF0IHRoZXkgaGFkIGRlY2lkZWQgdXBvbiBhcyBhZHZhbnRhZ2VvdXMuCjwvdHJhbnNsYXRpb24+"
translation['7.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gaGUgaGFkIGNvbWUgdXAsIFhlbm9waG9uIHNhaWQ6IOKAnFdlIGFyZSBvbiBvdXIgd2F5IHRvIGEgcGxhY2Ugd2hlcmUgdGhlIGFybXkgd2lsbCBiZSBhYmxlIHRvIGdldCBmb29kOyB0aGVyZSB3ZSBzaGFsbCBsaXN0ZW4gYm90aCB0byB5b3UgYW5kIHRvIHRoZSBMYWNvbmlhbidzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFyaXN0YXJjaHVzLjwvbm90ZT4gbWVzc2VuZ2VycywgYW5kIG1ha2Ugd2hhdGV2ZXIgY2hvaWNlIG1heSBzZWVtIHRvIGJlIGJlc3QuIElmLCB0aGVuLCB5b3Ugd2lsbCBndWlkZSB1cyB0byBhIHNwb3Qgd2hlcmUgdGhlcmUgYXJlIHByb3Zpc2lvbnMgaW4gZ3JlYXRlc3QgYWJ1bmRhbmNlLCB3ZSBzaGFsbCB0aGluayB3ZSBhcmUgYmVpbmcgaG9zcGl0YWJseSBlbnRlcnRhaW5lZCBieSB5b3Uu4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBTZXV0aGVzIHJlcGxpZWQ6IOKAnFdoeSwgSSBrbm93IGEgbGFyZ2UgbnVtYmVyIG9mIHZpbGxhZ2VzLCBjbG9zZSB0b2dldGhlciBhbmQgY29udGFpbmluZyBhbGwgc29ydHMgb2YgcHJvdmlzaW9ucywgdGhhdCBhcmUganVzdCBmYXIgZW5vdWdoIGF3YXkgZnJvbSB1cyBzbyB0aGF0LCB3aGVuIHlvdSBoYXZlIGNvdmVyZWQgdGhlIGRpc3RhbmNlLCB5b3Ugd291bGQgZW5qb3kgeW91ciBicmVha2Zhc3Qu4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz7igJxMZWFkIG9uLCB0aGVuLOKAnSBzYWlkIFhlbm9waG9uLiBXaGVuIHRoZXkgaGFkIHJlYWNoZWQgdGhlIHZpbGxhZ2VzLCBpbiB0aGUgYWZ0ZXJub29uLCBub29uLCB0aGUgc29sZGllcnMgZ2F0aGVyZWQgdG9nZXRoZXIgYW5kIFNldXRoZXMgc3Bva2UgYXMgZm9sbG93czog4oCcSSBhc2sgeW91LCBzb2xkaWVycywgdG8gdGFrZSB0aGUgZmllbGQgd2l0aCBtZSwgYW5kIEkgcHJvbWlzZSB0byBnaXZlIHRvIHlvdSB3aG8gYXJlIGluIHRoZSByYW5rcyBhIEN5emljZW5lIGFuZCB0byB0aGUgY2FwdGFpbnMgYW5kIGdlbmVyYWxzIHRoZSBjdXN0b21hcnkgcGF5OyBiZXNpZGVzIHRoaXMsIEkgc2hhbGwgaG9ub3VyIHRoZSBtYW4gd2hvIGRlc2VydmVzIGl0LiBGb29kIGFuZCBkcmluayB5b3Ugd2lsbCBvYnRhaW4sIGp1c3QgYXMgdG8tZGF5LCBieSB0YWtpbmcgZnJvbSB0aGUgY291bnRyeTsgYnV0IHdoYXRldmVyIG1heSBiZSBjYXB0dXJlZCBJIHNoYWxsIGV4cGVjdCB0byByZXRhaW4gZm9yIG15c2VsZiwgc28gdGhhdCBieSBzZWxsaW5nIGl0IEkgbWF5IHByb3ZpZGUgeW91IHlvdXIgcGF5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BbGwgdGhhdCBmbGVlcyBhbmQgaGlkZXMgd2Ugc2hhbGwgb3Vyc2VsdmVzIGJlIGFibGUgdG8gcHVyc3VlIGFuZCBzZWVrIG91dDsgYnV0IGlmIGFueSBvbmUgb2ZmZXJzIHJlc2lzdGFuY2UsIHdpdGggeW91ciBoZWxwIHdlIHNoYWxsIHRyeSB0byBzdWJkdWUgaGltLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5YZW5vcGhvbiBhc2tlZCwg4oCcQW5kIGhvdyBmYXIgZnJvbSB0aGUgc2VhY29hc3Qgc2hhbGwgeW91IGV4cGVjdCB0aGUgYXJteSB0byBmb2xsb3cgeW91P+KAnSBIZSByZXBsaWVkLCDigJxOb3doZXJlIG1vcmUgdGhhbiBhIHNldmVuIGRheXMnIGpvdXJuZXksIGFuZCBpbiBtYW55IHBsYWNlcyBsZXNzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyB0aGUgb3Bwb3J0dW5pdHkgdG8gc3BlYWsgd2FzIG9mZmVyZWQgdG8gYW55IG9uZSB3aG8gZGVzaXJlZCBpdDsgYW5kIG1hbnkgc3Bva2UgdG8gdGhlIHNhbWUgZWZmZWN0LCBzYXlpbmcgdGhhdCBTZXV0aGVzJyBwcm9wb3NhbHMgd2VyZSBtb3N0IHZhbHVhYmxlOyBmb3IgdGhlIHNlYXNvbiB3YXMgd2ludGVyLCBhbmQgaXQgd2FzIGltcG9zc2libGUgdG8gc2FpbCBiYWNrIGhvbWUsIGlmIHRoYXQgd2FzIHdoYXQgb25lIHdpc2hlZCwgYW5kIGltcG9zc2libGUgYWxzbyB0byBnZXQgYWxvbmcgaW4gYSBmcmllbmRseSBjb3VudHJ5IGlmIHRoZXkgaGFkIHRvIG1haW50YWluIHRoZW1zZWx2ZXMgYnkgcHVyY2hhc2luZzsgb24gdGhlIG90aGVyIGhhbmQsIHRvIHNwZW5kIHRoZWlyIHRpbWUgYW5kIGdldCB0aGVpciBtYWludGVuYW5jZSBpbiBhIGhvc3RpbGUgY291bnRyeSB3YXMgYSBzYWZlciBwcm9jZWVkaW5nIGluIFNldXRoZXMnIGNvbXBhbnkgdGhhbiBpZiB0aGV5IHdlcmUgYWxvbmUuIEFuZCBpZiwgYWJvdmUgYW5kIGJleW9uZCBzdWNoIGltcG9ydGFudCBhZHZhbnRhZ2VzLCB0aGV5IHdlcmUgYWxzbyB0byByZWNlaXZlIHBheSwgdGhleSBjb3VudGVkIGl0IGEgZ29kc2VuZC4KPC90cmFuc2xhdGlvbj4="
translation['7.3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGF0IFhlbm9waG9uIHNhaWQ6IOKAnElmIGFueSBvbmUgaG9sZHMgYSBjb250cmFyeSBvcGluaW9uLCBsZXQgaGltIHNwZWFrOyBpZiBub3QsIEkgd2lsbCBwdXQgdGhpcyBxdWVzdGlvbiB0byB2b3RlLuKAnSBBbmQgYXMgbm8gb25lIHNwb2tlIGluIG9wcG9zaXRpb24sIGhlIHB1dCB0aGUgbWF0dGVyIHRvIHZvdGUsIGFuZCB0aGlzIHBsYW4gd2FzIGRlY2lkZWQgdXBvbi4gU28gaGUgdG9sZCBTZXV0aGVzIGF0IG9uY2UgdGhhdCB0aGV5IHdvdWxkIHRha2Ugc2VydmljZSB3aXRoIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['7.3.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyB0aGUgdHJvb3BzIHdlbnQgaW50byBjYW1wIGJ5IGRpdmlzaW9ucywgYnV0IHRoZSBnZW5lcmFscyBhbmQgY2FwdGFpbnMgd2VyZSBpbnZpdGVkIHRvIGRpbm5lciBieSBTZXV0aGVzIGluIGEgdmlsbGFnZSBoZSB3YXMgb2NjdXB5aW5nIG5lYXIgYnkuCjwvdHJhbnNsYXRpb24+"
translation['7.3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgaGFkIHJlYWNoZWQgaGlzIGRvb3JzIGFuZCB3ZXJlIGFib3V0IHRvIGdvIGluIHRvIGRpbm5lciwgdGhlcmUgc3Rvb2QgYSBjZXJ0YWluIEhlcmFjbGVpZGVzLCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1hcm9uZWlhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNYXJvbmVpYSI+TWFyb25laWE8L3BsYWNlTmFtZT47PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgR3JlZWsgY2l0eSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjc1NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNzU2Ij5UaHJhY2U8L3BsYWNlTmFtZT4uPC9ub3RlPiB0aGlzIGZlbGxvdyBjYW1lIHVwIHRvIGVhY2ggc2luZ2xlIG9uZSBvZiB0aGUgZ3Vlc3RzIHdobywgYXMgaGUgaW1hZ2luZWQsIHdlcmUgYWJsZSB0byBtYWtlIGEgcHJlc2VudCB0byBTZXV0aGVzLCBmaXJzdCBvZiBhbGwgdG8gc29tZSBwZW9wbGUgb2YgUGFyaXVtIHdobyBoYWQgY29tZSB0byBhcnJhbmdlPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI3NTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjc1NiI+VGhyYWNlPC9wbGFjZU5hbWU+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaHJvdWdoIHRoZSBtZWRpYXRpb24gb2YgU2V1dGhlczsgY3AuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNy4yLjMyIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDcuMi4zMi00PC9iaWJsPi48L25vdGU+IGEgZnJpZW5kc2hpcCB3aXRoIE1lZG9jdXMsIHRoZSBraW5nIG9mIHRoZSBPZHJ5c2lhbnMsIGFuZCBicm91Z2h0IGdpZnRzIHdpdGggdGhlbSBmb3IgaGltIGFuZCBoaXMgd2lmZTsgdG8gdGhlbSBIZXJhY2xlaWRlcyBzYWlkIHRoYXQgTWVkb2N1cyB3YXMgYSB0d2VsdmUgZGF5cycgam91cm5leSBpbmxhbmQgZnJvbSB0aGUgc2VhLCB3aGlsZSBTZXV0aGVzLCBub3cgdGhhdCBoZSBoYWQgZ290IHRoaXMgYXJteSwgd291bGQgYmUgbWFzdGVyIHVwb24gdGhlIGNvYXN0Lgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDcuMi4zMiIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA3LjIuMzItNDwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['7.3.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz7igJxIZSwgdGhlcmVmb3JlLOKAnSBIZXJhY2xlaWRlcyB3ZW50IG9uLCDigJxiZWluZyB5b3VyIG5laWdoYm91ciwgd2lsbCBiZSBiZXN0IGFibGUgdG8gZG8geW91IGdvb2Qgb3IgaGFybS4gSGVuY2UgaWYgeW91IGFyZSB3aXNlLCB5b3Ugd2lsbCBwcmVzZW50IHRvIGhpbSB3aGF0ZXZlciB5b3UgYnJpbmcgd2l0aCB5b3U7IGFuZCBpdCB3aWxsIGJlIGJldHRlciBmb3IgeW91IHRoYW4gaWYgeW91IG1ha2UgeW91ciBnaWZ0cyB0byBNZWRvY3VzLCB3aG8gZHdlbGxzIGZhciBhd2F5LuKAnSBJdCB3YXMgaW4gdGhpcyB3YXkgdGhhdCBoZSB0cmllZCB0byBwZXJzdWFkZSB0aGVzZSBwZW9wbGUuCjwvdHJhbnNsYXRpb24+"
translation['7.3.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5OZXh0IGhlIGNhbWUgdXAgdG8gVGltYXNpb24gdGhlIERhcmRhbmlhbizigJRmb3IgaGUgaGVhcmQgdGhhdCBoZSBoYWQgc29tZSBQZXJzaWFuIGRyaW5raW5nIGN1cHMgYW5kIGNhcnBldHMs4oCUYW5kIHNhaWQgdGhhdCBpdCB3YXMgY3VzdG9tYXJ5IHdoZW4gU2V1dGhlcyBpbnZpdGVkIHBlb3BsZSB0byBkaW5uZXIsIGZvciB0aG9zZSB3aG8gd2VyZSB0aHVzIGludml0ZWQgdG8gZ2l2ZSBoaW0gcHJlc2VudHMuIOKAnEFuZCzigJ0gaGUgY29udGludWVkLCDigJxpbiBjYXNlIHRoaXMgU2V1dGhlcyBiZWNvbWVzIGEgZ3JlYXQgbWFuIGluIHRoaXMgcmVnaW9uLCBoZSB3aWxsIGJlIGFibGUgZWl0aGVyIHRvIHJlc3RvcmUgeW91IHRvIHlvdXIgaG9tZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaW1hc2lvbiB3YXMgYW4gZXhpbGUgKDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS42LjIzIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuNi4yMzwvYmlibD4pLjwvbm90ZT4gb3IgdG8gbWFrZSB5b3UgcmljaCBoZXJlLuKAnSBTdWNoIHdlcmUgdGhlIHNvbGljaXRhdGlvbnMgaGUgdXNlZCBhcyBoZSB3ZW50IHRvIG9uZSBtYW4gYWZ0ZXIgYW5vdGhlci4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA1LjYuMjMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS42LjIzPC9iaWJsPikuPC90cmFuc2xhdGlvbj4="
translation['7.3.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5IZSBjYW1lIHVwIHRvIFhlbm9waG9uIGFsc28sIGFuZCBzYWlkIHRvIGhpbTog4oCcWW91IGFyZSBhIGNpdGl6ZW4gb2YgYSB2ZXJ5IGdyZWF0IHN0YXRlIGFuZCB5b3VyIG5hbWUgaXMgYSB2ZXJ5IGdyZWF0IG9uZSB3aXRoIFNldXRoZXM7IHBlcmhhcHMgeW91IHdpbGwgZXhwZWN0IHRvIG9idGFpbiBmb3J0cmVzc2VzIGluIHRoaXMgbGFuZCwgYXMgb3RoZXJzIGFtb25nIHlvdXIgY291bnRyeW1lbiBoYXZlIGRvbmUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkVzcGVjaWFsbHkgQWxjaWJpYWRlcyAoPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiAxLjUuMTciIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gMS41LjE3PC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iTmVwLiBBbGMuIDciIHZhbGlkPSJ5ZXMiPk5lcG9zIEFsYy4gNzwvYmlibD4pLjwvbm90ZT4gYW5kIHRlcnJpdG9yeTsgaXQgaXMgcHJvcGVyLCB0aGVyZWZvcmUsIGZvciB5b3UgdG8gaG9ub3VyIFNldXRoZXMgaW4gdGhlIG1vc3QgbWFnbmlmaWNlbnQgd2F5Lgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEhlbGwuIDEuNS4xNyIgdmFsaWQ9InllcyI+WGVuLiBIZWxsLiAxLjUuMTc8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJOZXAuIEFsYy4gNyIgdmFsaWQ9InllcyI+TmVwb3MgQWxjLiA3PC9iaWJsPikuPC90cmFuc2xhdGlvbj4="
translation['7.3.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyBvdXQgb2YgZ29vZC13aWxsIHRvIHlvdSB0aGF0IEkgZ2l2ZSB0aGlzIGFkdmljZSBmb3IgSSBhbSBxdWl0ZSBzdXJlIHRoYXQgdGhlIGdyZWF0ZXIgdGhlIGdpZnRzIHlvdSBiZXN0b3cgdXBvbiB0aGlzIG1hbiwgdGhlIGdyZWF0ZXIgdGhlIGZhdm91cnMgdGhhdCB5b3Ugd2lsbCByZWNlaXZlIGF0IGhpcyBoYW5kcy7igJ0gVXBvbiBoZWFyaW5nIHRoaXMgWGVub3Bob24gd2FzIGRpc21heWVkOyBmb3IgaGUgaGFkIGNvbWUgYWNyb3NzIGZyb20gUGFyaXVtIHdpdGggbm90aGluZyBidXQgYSBib3kgYW5kIG1vbmV5IGVub3VnaCBmb3IgaGlzIHRyYXZlbGxpbmcgZXhwZW5zZXMuCjwvdHJhbnNsYXRpb24+"
translation['7.3.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGV5IGhhZCBjb21lIGluIGZvciB0aGUgZGlubmVy4oCUdGhlIG5vYmxlc3Qgb2YgdGhlIFRocmFjaWFucyB3aG8gd2VyZSBwcmVzZW50LCB0aGUgZ2VuZXJhbHMgYW5kIHRoZSBjYXB0YWlucyBvZiB0aGUgR3JlZWtzLCBhbmQgd2hhdGV2ZXIgZW1iYXNzeSBmcm9tIGFueSBzdGF0ZSB3YXMgdGhlcmXigJR0aGUgZGlubmVyIHdhcyBzZXJ2ZWQgd2l0aCB0aGUgZ3Vlc3RzIHNlYXRlZCBpbiBhIGNpcmNsZTsgdGhlbiB0aHJlZS1sZWdnZWQgdGFibGVzIHdlcmUgYnJvdWdodCBpbiBmb3IgdGhlIHdob2xlIGNvbXBhbnk7IHRoZXNlIHdlcmUgZnVsbCBvZiBtZWF0LCBjdXQgdXAgaW50byBwaWVjZXMsIGFuZCB0aGVyZSB3ZXJlIGdyZWF0IGxvYXZlcyBvZiBsZWF2ZW5lZCBicmVhZCBmYXN0ZW5lZCB3aXRoIHNrZXdlcnMgdG8gdGhlIHBpZWNlcyBvZiBtZWF0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5JbiBnZW5lcmFsIHRoZSB0YWJsZXMgd2VyZSBwbGFjZWQgb3Bwb3NpdGUgdGhlIHN0cmFuZ2VycyBpbiBlYWNoIGNhc2U7IGZvciB0aGUgVGhyYWNpYW5zIGhhZCBhIGN1c3RvbSB3aGljaCBTZXV0aGVzIG5vdyB0b29rIHRoZSBsZWFkIGluIHByYWN0aXNpbmcs4oCUaGUgd291bGQgcGljayB1cCB0aGUgbG9hdmVzIHdoaWNoIGxheSBiZXNpZGUgaGltLCBicmVhayB0aGVtIGludG8gc21hbGwgcGllY2VzLCBhbmQgdGhyb3cgdGhlIHBpZWNlcyB0byB3aG9tZXZlciBoZSBwbGVhc2VkLCBmb2xsb3dpbmcgdGhlIHNhbWUgZmFzaGlvbiB3aXRoIHRoZSBtZWF0IGFsc28sIGFuZCBsZWF2aW5nIGhpbXNlbGYgb25seSBlbm91Z2ggZm9yIGEgbWVyZSB0YXN0ZS4KPC90cmFuc2xhdGlvbj4="
translation['7.3.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZSBvdGhlcnMgYWxzbyB3aG8gaGFkIHRhYmxlcyBwbGFjZWQgb3Bwb3NpdGUgdGhlbSwgc2V0IGFib3V0IGRvaW5nIHRoZSBzYW1lIHRoaW5nLiBCdXQgYSBjZXJ0YWluIEFyY2FkaWFuIG5hbWVkIEFyeXN0YXMsIGEgdGVycmlibGUgZWF0ZXIsIHdvdWxkIGhhdmUgbm9uZSBvZiB0aGlzIHRocm93aW5nIGFib3V0LCBidXQgdG9vayBpbiBoaXMgaGFuZCBhIGxvYWYgYXMgYmlnIGFzIGEgdGhyZWUtcXVhcnQgbWVhc3VyZSwgcHV0IHNvbWUgcGllY2VzIG9mIG1lYXQgdXBvbiBoaXMga25lZXMsIGFuZCBwcm9jZWVkZWQgdG8gZGluZS4KPC90cmFuc2xhdGlvbj4="
translation['7.3.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGNhcnJpZWQgcm91bmQgaG9ybnMgb2Ygd2luZSwgYW5kIGFsbCB0b29rIHRoZW07IGJ1dCBBcnlzdGFzLCB3aGVuIHRoZSBjdXBiZWFyZXIgY2FtZSBhbmQgYnJvdWdodCBoaW0gaGlzIGhvcm4sIHNhaWQgdG8gdGhlIG1hbiwgYWZ0ZXIgb2JzZXJ2aW5nIHRoYXQgWGVub3Bob24gaGFkIGZpbmlzaGVkIGhpcyBkaW5uZXIsIOKAnEdpdmUgaXQgdG8gaGltOyBmb3IgaGUncyBhbHJlYWR5IGF0IGxlaXN1cmUsIGJ1dCBJJ20gbm90IGFzIHlldC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.3.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIFNldXRoZXMgaGVhcmQgdGhlIHNvdW5kIG9mIGhpcyB2b2ljZSwgaGUgYXNrZWQgdGhlIGN1cGJlYXJlciB3aGF0IGhlIHdhcyBzYXlpbmcuIEFuZCB0aGUgY3VwYmVhcmVyLCB3aG8gdW5kZXJzdG9vZCBHcmVlaywgdG9sZCBoaW0uIFNvIHRoZW4gdGhlcmUgd2FzIGFuIG91dGJ1cnN0IG9mIGxhdWdodGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgZHJpbmtpbmcgd2FzIHdlbGwgdW5kZXIgd2F5LCB0aGVyZSBjYW1lIGluIGEgVGhyYWNpYW4gd2l0aCBhIHdoaXRlIGhvcnNlLCBhbmQgdGFraW5nIGEgZnVsbCBob3JuIGhlIHNhaWQ6IOKAnEkgZHJpbmsgeW91ciBoZWFsdGgsIFNldXRoZXMsIGFuZCBwcmVzZW50IHRvIHlvdSB0aGlzIGhvcnNlOyBvbiBoaXMgYmFjayBwdXJzdWluZyB5b3Ugc2hhbGwgY2F0Y2ggd2hvbWV2ZXIgeW91IGNob29zZSwgYW5kIHJldHJlYXRpbmcgeW91IHNoYWxsIG5vdCBmZWFyIHRoZSBlbmVteS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.3.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5Bbm90aGVyIGJyb3VnaHQgaW4gYSBib3kgYW5kIHByZXNlbnRlZCBoaW0gaW4gdGhlIHNhbWUgd2F5LCB3aXRoIGEgaGVhbHRoIHRvIFNldXRoZXMsIHdoaWxlIGFub3RoZXIgcHJlc2VudGVkIGNsb3RoZXMgZm9yIGhpcyB3aWZlLiBUaW1hc2lvbiBhbHNvIGRyYW5rIGhpcyBoZWFsdGggYW5kIHByZXNlbnRlZCB0byBoaW0gYSBzaWx2ZXIgYm93bCBhbmQgYSBjYXJwZXQgd29ydGggdGVuIG1pbmFzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgbm90ZSBvbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuNC4xMyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjQuMTM8L2JpYmw+Ljwvbm90ZT4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjQuMTMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS40LjEzPC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['7.3.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIG9uZSBHbmVzaXBwdXMsIGFuIEF0aGVuaWFuLCBhcm9zZSBhbmQgc2FpZCB0aGF0IGl0IHdhcyBhbiBhbmNpZW50IGFuZCBtb3N0IGV4Y2VsbGVudCBjdXN0b20gdGhhdCB0aG9zZSB3aG8gaGFkIHBvc3Nlc3Npb25zIHNob3VsZCBnaXZlIHRvIHRoZSBraW5nIGZvciBob25vdXIncyBzYWtlLCBhbmQgdGhhdCB0byB0aG9zZSB3aG8gaGFkIG5vdWdodCB0aGUga2luZyBzaG91bGQgZ2l2ZSwg4oCcc28gdGhhdCzigJ0gaGUgY29udGludWVkLCDigJxJIHRvbyBtYXkgYmUgYWJsZSB0byBiZXN0b3cgZ2lmdHMgdXBvbiB5b3UgYW5kIGRvIHlvdSBob25vdXIu4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.3.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgWGVub3Bob24sIGhlIHdhcyBhdCBhIGxvc3MgdG8ga25vdyB3aGF0IGhlIHNob3VsZCBkbzsgZm9yIGhlIGNoYW5jZWQsIGFzIG9uZSBoZWxkIGluIGhvbm91ciwgdG8gYmUgc2VhdGVkIG9uIHRoZSBzdG9vbCBuZWFyZXN0IHRvIFNldXRoZXMuIEFuZCBIZXJhY2xlaWRlcyBkaXJlY3RlZCB0aGUgY3VwYmVhcmVyIHRvIHByb2ZmZXIgaGltIHRoZSBob3JuLiBUaGVuIFhlbm9waG9uLCB3aG8gYWxyZWFkeSBhcyBpdCBoYXBwZW5lZCBoYWQgYmVlbiBkcmlua2luZyBhIGxpdHRsZSwgYXJvc2UgY291cmFnZW91c2x5IGFmdGVyIHRha2luZyB0aGUgaG9ybiBhbmQgc2FpZDoKPC90cmFuc2xhdGlvbj4="
translation['7.3.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz7igJxBbmQgSSwgU2V1dGhlcywgZ2l2ZSB5b3UgbXlzZWxmIGFuZCB0aGVzZSBteSBjb21yYWRlcyB0byBiZSB5b3VyIGZhaXRoZnVsIGZyaWVuZHM7IGFuZCBub3Qgb25lIG9mIHRoZW0gZG8gSSBnaXZlIGFnYWluc3QgaGlzIHdpbGwsIGJ1dCBhbGwgYXJlIGV2ZW4gbW9yZSBkZXNpcm91cyB0aGFuIEkgb2YgYmVpbmcgeW91ciBmcmllbmRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm93IHRoZXkgYXJlIGhlcmUsIGFza2luZyB5b3UgZm9yIG5vdGhpbmcgbW9yZSwgYnV0IHJhdGhlciBwdXR0aW5nIHRoZW1zZWx2ZXMgaW4geW91ciBoYW5kcyBhbmQgd2lsbGluZyB0byBlbmR1cmUgdG9pbCBhbmQgZGFuZ2VyIG9uIHlvdXIgYmVoYWxmLiBXaXRoIHRoZW0sIGlmIHRoZSBnb2RzIHNvIHdpbGwsIHlvdSB3aWxsIGFjcXVpcmUgZ3JlYXQgdGVycml0b3J5LCByZWNvdmVyaW5nIGFsbCB0aGF0IGJlbG9uZ2VkIHRvIHlvdXIgZmF0aGVycyBhbmQgZ2FpbmluZyB5ZXQgbW9yZSwgYW5kIHlvdSB3aWxsIGFjcXVpcmUgbWFueSBob3JzZXMsIGFuZCBtYW55IG1lbiBhbmQgZmFpciB3b21lbjsgYW5kIHRoZXNlIHRoaW5ncyB5b3Ugd2lsbCBub3QgbmVlZCB0byB0YWtlIGFzIHBsdW5kZXIsIGJ1dCBteSBjb21yYWRlcyBvZiB0aGVpciBvd24gYWNjb3JkIHNoYWxsIGJyaW5nIHRoZW0gYmVmb3JlIHlvdSBhcyBnaWZ0cy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.3.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5VcCByb3NlIFNldXRoZXMsIGRyYWluZWQgdGhlIGhvcm4gd2l0aCBYZW5vcGhvbiwgYW5kIGpvaW5lZCBoaW0gaW4gc3ByaW5rbGluZyB0aGUgbGFzdCBkcm9wcy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHJlZmVyZW5jZSBpcyB0byB0aGUgVGhyYWNpYW4gY3VzdG9tLCBrbm93biB0byB1cyB0aHJvdWdoIFN1aWRhcywgb2Ygc3ByaW5rbGluZyB0aGUgbGFzdCBkcm9wcyB0aGF0IHJlbWFpbmVkIGluIHRoZSBkcmlua2luZyBob3JuIHVwb24gb25lJ3MgZmVsbG93IGd1ZXN0cy48L25vdGU+IEFmdGVyIHRoaXMgdGhlcmUgY2FtZSBpbiBtdXNpY2lhbnMgYmxvd2luZyB1cG9uIGhvcm5zIHN1Y2ggYXMgdGhleSB1c2UgaW4gZ2l2aW5nIHNpZ25hbHMsIGFuZCBwbGF5aW5nIHVwb24gdHJ1bXBldHMgb2YgcmF3IG94LWhpZGUgbm90IG9ubHkgbWVhc3VyZWQgbm90ZXMsIGJ1dCBtdXNpYyBsaWtlIHRoYXQgb2YgYSBoYXJwLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgU2V1dGhlcyBoaW1zZWxmIGdvdCB1cCwgcmFpc2VkIGEgd2FyLWNyeSwgYW5kIHNwcmFuZyBhc2lkZSB2ZXJ5IG5pbWJseSwgYXMgdGhvdWdoIGF2b2lkaW5nIGEgbWlzc2lsZS4gVGhlcmUgZW50ZXJlZCBhbHNvIGEgY29tcGFueSBvZiBidWZmb29ucy4KPC90cmFuc2xhdGlvbj4="
translation['7.3.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgc3VuIHdhcyBhYm91dCBzZXR0aW5nLCB0aGUgR3JlZWtzIGFyb3NlIGFuZCBzYWlkIHRoYXQgaXQgd2FzIHRpbWUgdG8gcG9zdCBzZW50aW5lbHMgYW5kIGdpdmUgb3V0IHRoZSB3YXRjaHdvcmQuIFRoZXkgYWxzbyB1cmdlZCBTZXV0aGVzIHRvIGlzc3VlIGFuIG9yZGVyIHRoYXQgbm9uZSBvZiB0aGUgVGhyYWNpYW5zIHdlcmUgdG8gZW50ZXIgdGhlIEdyZWVrIGNhbXAgYnkgbmlnaHQ7IOKAnGZvcizigJ0gdGhleSBzYWlkLCDigJxvdXIgZW5lbWllcyBhcmUgVGhyYWNpYW5zIGFuZCBvdXIgZnJpZW5kcyBhcmUgeW91cnNlbHZlcy7igJ08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Vml6LiwgVGhyYWNpYW5zIGFsc287IGluIG90aGVyIHdvcmRzLCB0aGUgR3JlZWtzIGNvdWxkIG5vdCB0ZWxsIHdoZXRoZXIgYW4gaW5kaXZpZHVhbCBUaHJhY2lhbiB3YXMgZnJpZW5kIG9yIGZvZS48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['7.3.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5BcyB0aGUgR3JlZWtzIHdlcmUgc2V0dGluZyBmb3J0aCwgU2V1dGhlcyBhcm9zZSB3aXRoIHRoZW0sIG5vdCBpbiB0aGUgbGVhc3QgbGlrZSBhIGRydW5rZW4gbWFuLiBBbmQgYWZ0ZXIgY29taW5nIG91dCBoZSBjYWxsZWQgdGhlIGdlbmVyYWxzIGFzaWRlIGJ5IHRoZW1zZWx2ZXMgYW5kIHNhaWQ6IOKAnEdlbnRsZW1lbiwgb3VyIGVuZW1pZXMgZG8gbm90IHlldCBrbm93IG9mIG91ciBhbGxpYW5jZTsgdGhlcmVmb3JlIGlmIHdlIGdvIGFnYWluc3QgdGhlbSBiZWZvcmUgdGhleSBoYXZlIGdvdCBvbiBndWFyZCBhZ2FpbnN0IGJlaW5nIGNhcHR1cmVkIG9yIGhhdmUgbWFkZSBwcmVwYXJhdGlvbnMgdG8gZGVmZW5kIHRoZW1zZWx2ZXMsIHdlIHNob3VsZCBtb3N0IHN1cmVseSBnZXQgYm90aCBjYXB0aXZlcyBhbmQgcHJvcGVydHku4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.3.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZ2VuZXJhbHMgYWdyZWVkIGluIGFwcHJvdmluZyB0aGlzIHBsYW4sIGFuZCBiYWRlIGhpbSBsZWFkIG9uLiBBbmQgaGUgc2FpZDog4oCcR2V0IHlvdXJzZWx2ZXMgcmVhZHkgYW5kIHdhaXQ7IGFuZCB3aGVuIHRoZSBwcm9wZXIgdGltZSBjb21lcywgSSB3aWxsIHJldHVybiB0byB5b3UgYW5kLCBwaWNraW5nIHVwIG15IHBlbHRhc3RzIGFuZCB5b3Vyc2VsdmVzLCB3aWxsIGxlYWQgdGhlIHdheSB3aXRoIG15IGhvcnNlbWVuLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgWGVub3Bob24gc2FpZDog4oCcV2VsbCwgbm93LCBjb25zaWRlciB0aGlzIHBvaW50LCB3aGV0aGVyLCBpZiB3ZSBhcmUgdG8gbWFrZSBhIG5pZ2h0IG1hcmNoLCB0aGUgR3JlZWsgcHJhY3RpY2UgaXMgbm90IHRoZSBiZXR0ZXI6IGluIG91ciBtYXJjaGVzIGJ5IGRheSwgeW91IGtub3csIHRoYXQgcGFydCBvZiB0aGUgYXJteSB0YWtlcyB0aGUgbGVhZCB3aGljaCBpcyBzdWl0ZWQgdG8gdGhlIG5hdHVyZSBvZiB0aGUgZ3JvdW5kIGluIGVhY2ggY2FzZSwgd2hldGhlciBpdCBiZSBob3BsaXRlcyBvciBwZWx0YXN0cyBvciBjYXZhbHJ5OyBidXQgYnkgbmlnaHQgaXQgaXMgdGhlIHByYWN0aWNlIG9mIHRoZSBHcmVla3MgdGhhdCB0aGUgc2xvd2VzdCBhcm0gc2hvdWxkIGxlYWQgdGhlIHdheTsKPC90cmFuc2xhdGlvbj4="
translation['7.3.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5mb3IgdGh1cyB0aGUgdmFyaW91cyBwYXJ0cyBvZiB0aGUgYXJteSBhcmUgbGVhc3QgbGlrZWx5IHRvIGJlY29tZSBzZXBhcmF0ZWQsIGFuZCBtZW4gYXJlIGxlYXN0IGxpa2VseSB0byBkcm9wIGF3YXkgZnJvbSBvbmUgYW5vdGhlciB3aXRob3V0IGtub3dpbmcgaXQ7IGFuZCBpdCBvZnRlbiBoYXBwZW5zIHRoYXQgc2NhdHRlcmVkIGRpdmlzaW9ucyBmYWxsIGluIHdpdGggb25lIGFub3RoZXIgYW5kIGluIHRoZWlyIGlnbm9yYW5jZSBpbmZsaWN0IGFuZCBzdWZmZXIgaGFybS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.3.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIFNldXRoZXMgcmVwbGllZDog4oCcWW91IGFyZSByaWdodCwgYW5kIEkgd2lsbCBhZG9wdCB5b3VyIHByYWN0aWNlLiBJIHdpbGwgZ2l2ZSB5b3UgZ3VpZGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldoaWNoIGFyZSBuZWNlc3Nhcnkgbm93IHRoYXQgdGhlIEdyZWVrcywgd2hvc2UgaG9wbGl0ZXMgZm9ybSDigJx0aGUgc2xvd2VzdCBhcm0s4oCdIGFyZSB0byBsZWFkIHRoZSB3YXkuPC9ub3RlPiBmcm9tIGFtb25nIHRoZSBvbGRlc3QgbWVuLCB3aG8ga25vdyB0aGUgY291bnRyeSBiZXN0LCBhbmQgSSBteXNlbGYgd2lsbCBicmluZyB1cCB0aGUgcmVhciB3aXRoIG15IGhvcnNlbWVuOyBmb3IgSSBjYW4gc3BlZWRpbHkgcmVhY2ggdGhlIGZyb250IGlmIG5lZWQgYmUu4oCdIFRoZW4gdGhleSBnYXZlIG91dCDigJxBdGhlbmHigJ0gYXMgdGhlIHdhdGNod29yZCwgb24gYWNjb3VudCBvZiB0aGVpciBraW5zaGlwLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjIuMzEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNy4yLjMxPC9iaWJsPi48L25vdGU+IEFmdGVyIHRoaXMgY29uZmVyZW5jZSB0aGV5IHdlbnQgdG8gcmVzdC4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjIuMzEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNy4yLjMxPC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['7.3.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBpdCB3YXMgYWJvdXQgbWlkbmlnaHQsIFNldXRoZXMgd2FzIGF0IGhhbmQgd2l0aCBoaXMgaG9yc2VtZW4gYXJtZWQgd2l0aCBicmVhc3QtcGxhdGVzIGFuZCBoaXMgcGVsdGFzdHMgZXF1aXBwZWQgd2l0aCB0aGVpciBhcm1zLiBBbmQgYXMgc29vbiBhcyBoZSBoYWQgZ2l2ZW4gb3ZlciB0aGVpciBndWlkZXMgdG8gdGhlIEdyZWVrcywgdGhlIGhvcGxpdGVzIHRvb2sgdGhlIGxlYWQsIHRoZSBwZWx0YXN0cyBmb2xsb3dlZCwgYW5kIHRoZSBob3JzZW1lbiBicm91Z2h0IHVwIHRoZSByZWFyLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGRheSBjYW1lLCBTZXV0aGVzIHJvZGUgYWxvbmcgdG8gdGhlIGZyb250IGFuZCBleHByZXNzZWQgaGlzIGFwcHJvdmFsIG9mIHRoZSBHcmVlayBwcmFjdGljZS4gRm9yIG1hbnkgdGltZXMsIGhlIHNhaWQsIHdoaWxlIG1hcmNoaW5nIGJ5IG5pZ2h0IHdpdGggZXZlbiBhIHNtYWxsIGZvcmNlIGhlIGhpbXNlbGYsIGFsb25nIHdpdGggaGlzIGNhdmFscnksIGhhZCBnb3Qgc2VwYXJhdGVkIGZyb20gaGlzIGluZmFudHJ5OyDigJxidXQgbm93LOKAnSBoZSBjb250aW51ZWQsIOKAnHdlIGZpbmQgb3Vyc2VsdmVzIGF0IGRheWJyZWFrIGFsbCB0b2dldGhlciwganVzdCBhcyB3ZSBzaG91bGQgYmUuIEJ1dCBkbyB5b3Ugd2FpdCB3aGVyZSB5b3UgYXJlIGFuZCB0YWtlIGEgcmVzdCwgYW5kIEkgd2lsbCByZXR1cm4gYWZ0ZXIgSSBoYXZlIGxvb2tlZCBhcm91bmQgYSBsaXR0bGUu4oCdIFdpdGggdGhlc2Ugd29yZHMgaGUgcm9kZSBvZmYgYWxvbmcgYSBtb3VudGFpbiBzaWRlLCBmb2xsb3dpbmcgYSBraW5kIG9mIHJvYWQuCjwvdHJhbnNsYXRpb24+"
translation['7.3.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGhlIGhhZCByZWFjaGVkIGEgcGxhY2Ugd2hlcmUgdGhlcmUgd2FzIGRlZXAgc25vdywgaGUgbG9va2VkIGFib3V0IHRvIHNlZSB3aGV0aGVyIHRoZXJlIHdlcmUgaHVtYW4gZm9vdHByaW50cywgZWl0aGVyIGxlYWRpbmcgb253YXJkIG9yIGJhY2suIEFzIHNvb24gYXMgaGUgc2F3IHRoYXQgdGhlIHJvYWQgd2FzIHVudHJvZGRlbiwgaGUgcXVpY2tseSByZXR1cm5lZCBhbmQgc2FpZDoKPC90cmFuc2xhdGlvbj4="
translation['7.3.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz7igJxBbGwgd2lsbCBiZSB3ZWxsLCBnZW50bGVtZW4sIGlmIGdvZCB3aWxsOyBmb3Igd2Ugc2hhbGwgZmFsbCB1cG9uIHRoZXNlIHBlb3BsZSBiZWZvcmUgdGhleSBrbm93IGl0LiBOb3cgSSB3aWxsIGxlYWQgdGhlIHdheSB3aXRoIHRoZSBjYXZhbHJ5LCBzbyB0aGF0IGlmIHdlIGNhdGNoIHNpZ2h0IG9mIGFueSBvbmUsIGhlIG1heSBub3Qgc2xpcCB0aHJvdWdoIG91ciBmaW5nZXJzIGFuZCBnaXZlIHdvcmQgdG8gdGhlIGVuZW15OyBhbmQgZG8geW91IGZvbGxvdyBhZnRlciBtZSwgYW5kIGluIGNhc2UgeW91IGdldCBsZWZ0IGJlaGluZCwga2VlcCB0byB0aGUgdHJhaWwgb2YgdGhlIGhvcnNlcy4gT25jZSB3ZSBoYXZlIGNyb3NzZWQgb3ZlciB0aGUgbW91bnRhaW5zLCB3ZSBzaGFsbCBjb21lIHRvIG1hbnkgcHJvc3Blcm91cyB2aWxsYWdlcy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.3.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnkgdGhlIHRpbWUgaXQgd2FzIG1pZGRheSBoZSB3YXMgYWxyZWFkeSB1cG9uIHRoZSBoZWlnaHRzLCBhbmQgY2F0Y2hpbmcgc2lnaHQgb2YgdGhlIHZpbGxhZ2VzIGJlbG93IGhlIGNhbWUgcmlkaW5nIHVwIHRvIHRoZSBob3BsaXRlcyBhbmQgc2FpZDog4oCcTm93IEkgYW0gZ29pbmcgdG8gbGV0IHRoZSBob3JzZW1lbiBjaGFyZ2UgZG93biB0byB0aGUgcGxhaW4gb24gdGhlIHJ1biwgYW5kIHRvIHNlbmQgdGhlIHBlbHRhc3RzIGFnYWluc3QgdGhlIHZpbGxhZ2VzLiBEbyB5b3UsIHRoZW4sIGZvbGxvdyBhcyBmYXN0IGFzIHlvdSBjYW4sIHNvIHRoYXQgaWYgYW55IHJlc2lzdGFuY2UgaXMgb2ZmZXJlZCwgeW91IG1heSBtZWV0IGl0LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgWGVub3Bob24gZGlzbW91bnRlZCBmcm9tIGhpcyBob3JzZS4gQW5kIFNldXRoZXMgYXNrZWQ6IOKAnFdoeSBkbyB5b3UgZGlzbW91bnQsIGZvciB0aGVyZSBpcyBuZWVkIG9mIGhhc3RlP+KAnSDigJxJIGtub3cs4oCdIFhlbm9waG9uIHJlcGxpZWQsIOKAnHRoYXQgSSBhbSBub3QgdGhlIG9ubHkgb25lIHlvdSBuZWVkOyBhbmQgdGhlIGhvcGxpdGVzIHdpbGwgcnVuIGZhc3RlciBhbmQgbW9yZSBjaGVlcmZ1bGx5IGlmIEkgYWxzbyBhbSBvbiBmb290IGxlYWRpbmcgdGhlIHdheS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.3.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIFNldXRoZXMgd2VudCBvZmYsIGFuZCB3aXRoIGhpbSBUaW1hc2lvbiBhdCB0aGUgaGVhZCBvZiBhYm91dCBmb3J0eSBob3JzZW1lbiBvZiB0aGUgR3JlZWtzLiBUaGVuIFhlbm9waG9uIGdhdmUgb3JkZXJzIHRoYXQgdGhlIGFjdGl2ZSBtZW4gdXAgdG8gdGhpcnR5IHllYXJzIG9mIGFnZSBzaG91bGQgbW92ZSB1cCBmcm9tIHRoZWlyIHNldmVyYWwgY29tcGFuaWVzIHRvIHRoZSBmcm9udC4gU28gaGUgaGltc2VsZiByYW4gYWxvbmcgd2l0aCB0aGVtLCB3aGlsZSBDbGVhbm9yIGxlZCB0aGUgcmVzdC4KPC90cmFuc2xhdGlvbj4="
translation['7.3.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgaGFkIHJlYWNoZWQgdGhlIHZpbGxhZ2VzLCBTZXV0aGVzIHdpdGggYWJvdXQgdGhpcnR5IGhvcnNlbWVuIHJvZGUgdXAgdG8gaGltIGFuZCBzYWlkOiDigJxIZXJlJ3MgdGhlIHZlcnkgdGhpbmcsIFhlbm9waG9uLCB0aGF0IHlvdSB3ZXJlIHNheWluZzs8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIDM3LCAzOCBhYm92ZS4gU2V1dGhlcyBoYXMgYWdhaW4gKGNwLiA0MSkgZ29uZSBhaGVhZCB3aXRoIGhpcyBmYXN0ZXN0IGFybSAoaGlzIGNhdmFscnkpLCBhbmQgbm93IGFwcHJlY2lhdGVzIHRoZSBkYW5nZXIgb2YgaGF2aW5nIHRoZW0gdW5zdXBwb3J0ZWQgKGNwLiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJTPgc63zrzOv865PC9mb3JlaWduPiBiZWxvdykgYnkgaW5mYW50cnkuPC9ub3RlPiB0aGVzZSBmZWxsb3dzIGFyZSBjYXVnaHQsIGJ1dCB1bmhhcHBpbHkgbXkgaG9yc2VtZW4gaGF2ZSBnb25lIG9mZiB1bnN1cHBvcnRlZCwgc2NhdHRlcmluZyBpbiB0aGVpciBwdXJzdWl0LCBhbmQgSSBmZWFyIHRoYXQgdGhlIGVuZW15IG1heSBnZXQgdG9nZXRoZXIgc29tZXdoZXJlIGluIGEgYm9keSBhbmQgd29yayBzb21lIGhhcm0uIE9uIHRoZSBvdGhlciBoYW5kLCBzb21lIG9mIHVzIGFsc28gbXVzdCByZW1haW4gaW4gdGhlIHZpbGxhZ2VzLCBmb3IgdGhleSBhcmUgZnVsbCBvZiBwZW9wbGUu4oCdCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8lM+BzrfOvM6/zrk8L2ZvcmVpZ24+IGJlbG93KSBieSBpbmZhbnRyeS48L3RyYW5zbGF0aW9uPg=="
translation['7.3.48'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0ic2VjdGlvbiIgLz7igJxXZWxsLOKAnSBYZW5vcGhvbiByZXBsaWVkLCDigJxJIG15c2VsZiB3aXRoIHRoZSB0cm9vcHMgSSBoYXZlIHdpbGwgc2VpemUgdGhlIGhlaWdodHMsIGFuZCBkbyB5b3UgZGlyZWN0IENsZWFub3IgdG8gZXh0ZW5kIGhpcyBsaW5lIHRocm91Z2ggdGhlIHBsYWluIGFsb25nc2lkZSB0aGUgdmlsbGFnZXMu4oCdIFdoZW4gdGhleSBoYWQgZG9uZSB0aGVzZSB0aGluZ3MsIHRoZXJlIHdlcmUgZ2F0aGVyZWQgdG9nZXRoZXIgY2FwdGl2ZXMgdG8gdGhlIG51bWJlciBvZiBhIHRob3VzYW5kLCB0d28gdGhvdXNhbmQgY2F0dGxlLCBhbmQgdGVuIHRob3VzYW5kIHNtYWxsZXIgYW5pbWFscyBiZXNpZGVzLiBUaGVuIHRoZXkgYml2b3VhY2tlZCB3aGVyZSB0aGV5IHdlcmUuCjwvdHJhbnNsYXRpb24+"
translation['7.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbiB0aGUgZm9sbG93aW5nIGRheSwgYWZ0ZXIgU2V1dGhlcyBoYWQgYnVybmVkIHVwIHRoZSB2aWxsYWdlcyBjb21wbGV0ZWx5IGFuZCBsZWZ0IG5vdCBhIHNpbmdsZSBob3VzZSwgaW4gb3JkZXIgdGhhdCBoZSBtaWdodCBpbnNwaXJlIHRoZSByZXN0IG9mIGhpcyBlbmVtaWVzIGFsc28gd2l0aCBmZWFyIG9mIHRoZSBzb3J0IG9mIGZhdGUgdGhleSB3b3VsZCBzdWZmZXIgaWYgdGhleSBkaWQgbm90IHlpZWxkIGhpbSBvYmVkaWVuY2UsIGhlIHdlbnQgYmFjayBhZ2Fpbi4KPC90cmFuc2xhdGlvbj4="
translation['7.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gaGUgZGlzcGF0Y2hlZCBIZXJhY2xlaWRlcyB0byBQZXJpbnRodXMgdG8gc2VsbCB0aGUgYm9vdHksIHNvIHRoYXQgaGUgbWlnaHQgZ2V0IG1vbmV5IHRvIHBheSB0aGUgc29sZGllcnMgd2l0aDsgd2hpbGUgaGUgaGltc2VsZiBhbmQgdGhlIEdyZWVrcyBlbmNhbXBlZCBvbiB0aGUgcGxhaW4gb2YgdGhlIFRoeW5pYW5zLCB0aGUgaW5oYWJpdGFudHMgYWJhbmRvbmluZyB0aGVpciBob21lcyBhbmQgZmxlZWluZyB0byB0aGUgbW91bnRhaW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIHdhcyBkZWVwIHNub3cgb24gdGhlIHBsYWluLCBhbmQgaXQgd2FzIHNvIGNvbGQgdGhhdCB0aGUgd2F0ZXIgd2hpY2ggdGhleSBjYXJyaWVkIGluIGZvciBkaW5uZXIgYW5kIHRoZSB3aW5lIGluIHRoZSBqYXJzIHdvdWxkIGZyZWV6ZSwgYW5kIG1hbnkgb2YgdGhlIEdyZWVrcyBoYWQgdGhlaXIgbm9zZXMgYW5kIGVhcnMgZnJvc3QtYml0dGVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gaXQgYmVjYW1lIGNsZWFyIHdoeSB0aGUgVGhyYWNpYW5zIHdlYXIgZm94LXNraW4gY2FwcyBvbiB0aGVpciBoZWFkcyBhbmQgb3ZlciB0aGVpciBlYXJzLCBhbmQgdHVuaWNzIG5vdCBtZXJlbHkgYWJvdXQgdGhlaXIgY2hlc3RzLCBidXQgYWxzbyByb3VuZCB0aGVpciB0aGlnaHMsIGFuZCB3aHksIHdoZW4gb24gaG9yc2ViYWNrLCB0aGV5IHdlYXIgbG9uZyBjbG9ha3MgcmVhY2hpbmcgdG8gdGhlaXIgZmVldCBpbnN0ZWFkIG9mIG1hbnRsZXMuCjwvdHJhbnNsYXRpb24+"
translation['7.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBub3cgU2V1dGhlcyBhbGxvd2VkIHNvbWUgb2YgaGlzIGNhcHRpdmVzIHRvIGdvIG9mZiB0byB0aGUgbW91bnRhaW5zIHdpdGggd29yZCB0aGF0IGlmIHRoZSBUaHluaWFucyBkaWQgbm90IGNvbWUgZG93biB0byB0aGUgcGxhaW4gdG8gbGl2ZSBhbmQgZGlkIG5vdCB5aWVsZCBoaW0gb2JlZGllbmNlLCBoZSB3b3VsZCBidXJuIHVwIHRoZWlyIHZpbGxhZ2VzIGFsc28gYW5kIHRoZWlyIGNvcm4sIGFuZCB0aGV5IHdvdWxkIHBlcmlzaCB3aXRoIGh1bmdlci4gVGhlcmV1cG9uIHRoZSB3b21lbiwgY2hpbGRyZW4sIGFuZCBvbGRlciBtZW4gZGlkIGNvbWUgZG93biwgYnV0IHRoZSB5b3VuZ2VyIG1lbiBiaXZvdWFja2VkIGluIHRoZSB2aWxsYWdlcyB1bmRlciB0aGUgbW91bnRhaW4uCjwvdHJhbnNsYXRpb24+"
translation['7.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBTZXV0aGVzLCB1cG9uIGxlYXJuaW5nIG9mIHRoaXMsIG9yZGVyZWQgWGVub3Bob24gdG8gdGFrZSB0aGUgeW91bmdlc3Qgb2YgdGhlIGhvcGxpdGVzIGFuZCBmb2xsb3cgaGltLiBTbyB0aGV5IGFyb3NlIGR1cmluZyB0aGUgbmlnaHQsIGFuZCBhdCBkYXlicmVhayByZWFjaGVkIHRoZSB2aWxsYWdlcy4gTm93IG1vc3Qgb2YgdGhlIHZpbGxhZ2VycyBtYWRlIHRoZWlyIGVzY2FwZSwgZm9yIHRoZSBtb3VudGFpbiB3YXMgY2xvc2UgYXQgaGFuZDsgYnV0IGFsbCB0aGF0IGhlIGRpZCBjYXB0dXJlLCBTZXV0aGVzIHNob3QgZG93biB1bnNwYXJpbmdseS4KPC90cmFuc2xhdGlvbj4="
translation['7.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSB3YXMgYSBjZXJ0YWluIEVwaXN0aGVuZXMgb2YgT2x5bnRodXMgd2hvIHdhcyBhIGxvdmVyIG9mIGJveXMsIGFuZCB1cG9uIHNlZWluZyBhIGhhbmRzb21lIGJveSwganVzdCBpbiB0aGUgYmxvb20gb2YgeW91dGggYW5kIGNhcnJ5aW5nIGEgbGlnaHQgc2hpZWxkLCBvbiB0aGUgcG9pbnQgb2YgYmVpbmcgcHV0IHRvIGRlYXRoLCBoZSByYW4gdXAgdG8gWGVub3Bob24gYW5kIGJlc291Z2h0IGhpbSB0byBjb21lIHRvIHRoZSByZXNjdWUgb2YgYSBoYW5kc29tZSBsYWQuCjwvdHJhbnNsYXRpb24+"
translation['7.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlNvIFhlbm9waG9uIHdlbnQgdG8gU2V1dGhlcyBhbmQgYmVnZ2VkIGhpbSBub3QgdG8ga2lsbCB0aGUgYm95LCB0ZWxsaW5nIGhpbSBvZiBFcGlzdGhlbmVzJyB0dXJuIG9mIG1pbmQsIGhvdyBoZSBoYWQgb25jZSBhc3NlbWJsZWQgYSBiYXR0YWxpb24gd2l0aCBhbiBleWUgdG8gbm90aGluZyBlbHNlIHNhdmUgdGhlIHF1ZXN0aW9uIHdoZXRoZXIgYSBtYW4gd2FzIGhhbmRzb21lLCBhbmQgdGhhdCB3aXRoIHRoaXMgYmF0dGFsaW9uIGhlIHByb3ZlZCBoaW1zZWxmIGEgYnJhdmUgbWFuLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBTZXV0aGVzIGFza2VkOiDigJxXb3VsZCB5b3UgZXZlbiBiZSB3aWxsaW5nLCBFcGlzdGhlbmVzLCB0byBkaWUgZm9yIHRoaXMgYm95J3Mgc2FrZT/igJ0gVGhlbiBFcGlzdGhlbmVzIHN0cmV0Y2hlZCBvdXQgaGlzIG5lY2sgYW5kIHNhaWQsIOKAnFN0cmlrZSwgaWYgdGhlIGxhZCBiaWRzIHlvdSBhbmQgd2lsbCBiZSBncmF0ZWZ1bC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5TZXV0aGVzIGFza2VkIHRoZSBib3kgd2hldGhlciBoZSBzaG91bGQgc3RyaWtlIEVwaXN0aGVuZXMgaW4gaGlzIHN0ZWFkLiBUaGUgYm95IGZvcmJhZGUgaXQsIGFuZCBiZXNvdWdodCBoaW0gbm90IHRvIHNsYXkgZWl0aGVyLiBUaGVyZXVwb24gRXBpc3RoZW5lcyB0aHJldyBoaXMgYXJtcyBhcm91bmQgdGhlIGJveSBhbmQgc2FpZDog4oCcSXQgaXMgdGltZSwgU2V1dGhlcywgZm9yIHlvdSB0byBmaWdodCBpdCBvdXQgd2l0aCBtZSBmb3IgdGhpcyBib3k7IGZvciBJIHNoYWxsIG5vdCBnaXZlIGhpbSB1cC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgU2V1dGhlcyBsYXVnaGVkIGFuZCBsZXQgdGhlIG1hdHRlciBnby4gSGUgcmVzb2x2ZWQsIGhvd2V2ZXIsIHRvIGVzdGFibGlzaCBhIGNhbXAgd2hlcmUgdGhleSB3ZXJlLCBpbiBvcmRlciB0aGF0IHRoZSBwZW9wbGUgb24gdGhlIG1vdW50YWluIHNob3VsZCBub3QgYmUgc3VwcGxpZWQgd2l0aCBmb29kIGZyb20gdGhlc2UgdmlsbGFnZXMsIGVpdGhlci48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U3VwcGxpZXMgZnJvbSB0aGUgdmlsbGFnZXMgaW4gdGhlIHBsYWluIGhhdmluZyBhbHJlYWR5IGJlZW4gY3V0IG9mZiAoICA1KS48L25vdGU+IFNvIGhlIGhpbXNlbGYgd2VudCBxdWlldGx5IGRvd24gdGhlIG1vdW50YWluIGFuZCBlbmNhbXBlZCB1cG9uIHRoZSBwbGFpbiwgd2hpbGUgWGVub3Bob24gd2l0aCBoaXMgcGlja2VkIG1lbiB0b29rIHF1YXJ0ZXJzIGluIHRoZSB1cHBlcm1vc3QgdmlsbGFnZSBiZWxvdyB0aGUgc3VtbWl0IGFuZCB0aGUgcmVzdCBvZiB0aGUgR3JlZWtzIGNsb3NlIGJ5LCBhbW9uZyB0aGUgc28tY2FsbGVkIOKAnG1vdW50YWlu4oCdIFRocmFjaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['7.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm90IG1hbnkgZGF5cyBoYWQgcGFzc2VkIGFmdGVyIHRoaXMgd2hlbiB0aGUgVGhyYWNpYW5zIG9uIHRoZSBtb3VudGFpbiBjYW1lIGRvd24gYW5kIGVudGVyZWQgaW50byBuZWdvdGlhdGlvbnMgd2l0aCBTZXV0aGVzIGluIHJlZ2FyZCB0byBhIHRydWNlIGFuZCBob3N0YWdlcy4gQW5kIFhlbm9waG9uIGNhbWUgYW5kIHRvbGQgU2V1dGhlcyB0aGF0IGhpcyBtZW4gd2VyZSBpbiBiYWQgcXVhcnRlcnMgYW5kIHRoZSBlbmVteSB3ZXJlIGNsb3NlIGF0IGhhbmQ7IGhlIHdvdWxkIGJlIGJldHRlciBwbGVhc2VkLCBoZSBzYWlkLCB0byBiaXZvdWFjIGluIHRoZSBvcGVuIGluIGEgc3Ryb25nIHBvc2l0aW9uIHRoYW4gdG8gYmUgaW4gdGhlIGhvdXNlcyBhbmQgcnVuIHRoZSByaXNrIG9mIGJlaW5nIGRlc3Ryb3llZC4gQnV0IFNldXRoZXMgYmFkZSBoaW0gaGF2ZSBubyBmZWFyIGFuZCBzaG93ZWQgaGltIGhvc3RhZ2VzIHRoYXQgaGFkIGNvbWUgZnJvbSB0aGUgZW5lbXkuCjwvdHJhbnNsYXRpb24+"
translation['7.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgc29tZSBvZiB0aGUgcGVvcGxlIG9uIHRoZSBtb3VudGFpbiBjYW1lIGRvd24gYW5kIGFjdHVhbGx5IHJlcXVlc3RlZCBYZW5vcGhvbiBoaW1zZWxmIHRvIGhlbHAgdGhlbSBvYnRhaW4gdGhlIHRydWNlLiBIZSBhZ3JlZWQgdG8gZG8gc28sIHRvbGQgdGhlbSB0byBoYXZlIG5vIGZlYXIsIGFuZCBnYXZlIHRoZW0gaGlzIHdvcmQgdGhhdCB0aGV5IHdvdWxkIHN1ZmZlciBubyBoYXJtIGlmIHRoZXkgd2VyZSBvYmVkaWVudCB0byBTZXV0aGVzLiBCdXQgdGhleSwgYXMgaXQgcHJvdmVkLCB3ZXJlIHRhbGtpbmcgYWJvdXQgdGhpcyBtYXR0ZXIgbWVyZWx5IGluIG9yZGVyIHRvIHNweSBvdXQgdGhlIHNpdHVhdGlvbi4KPC90cmFuc2xhdGlvbj4="
translation['7.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWxsIHRoaXMgaGFwcGVuZWQgZHVyaW5nIHRoZSBkYXksIGJ1dCBpbiB0aGUgbmlnaHQgdGhhdCBmb2xsb3dlZCB0aGUgVGh5bmlhbnMgaXNzdWVkIGZyb20gdGhlIG1vdW50YWluIGFuZCBtYWRlIGFuIGF0dGFjay4gQW5kIHRoZSBtYXN0ZXIgb2YgZWFjaCBzZXBhcmF0ZSBob3VzZSBhY3RlZCBhcyBndWlkZSB0byB0aGF0IGhvdXNlOyBmb3IgaW4gdGhlIGRhcmtuZXNzIGl0IHdvdWxkIGhhdmUgYmVlbiBkaWZmaWN1bHQgdG8gZmluZCB0aGUgaG91c2VzIGluIHRoZXNlIHZpbGxhZ2VzIGluIGFueSBvdGhlciB3YXk7IGZvciBlYWNoIGhvdXNlIHdhcyBzdXJyb3VuZGVkIGJ5IGEgcGFsaW5nLCBtYWRlIG9mIGdyZWF0IHN0YWtlcywgdG8ga2VlcCBpbiB0aGUgY2F0dGxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgaGFkIHJlYWNoZWQgdGhlIGRvb3JzIG9mIGEgcGFydGljdWxhciBob3VzZSwgc29tZSB3b3VsZCB0aHJvdyBpbiBqYXZlbGlucywgb3RoZXJzIHdvdWxkIGxheSBvbiB3aXRoIHRoZWlyIGNsdWJzLCB3aGljaCB0aGV5IGNhcnJpZWQsIHNvIGl0IHdhcyBzYWlkLCB0byBrbm9jayBvZmYgdGhlIGhlYWRzIG9mIGhvc3RpbGUgc3BlYXJzLCBhbmQgc3RpbGwgb3RoZXJzIHdvdWxkIGJlIHNldHRpbmcgdGhlIGhvdXNlIG9uIGZpcmUsIG1lYW53aGlsZSBjYWxsaW5nIFhlbm9waG9uIGJ5IG5hbWUgYW5kIGJpZGRpbmcgaGltIGNvbWUgb3V0IGFuZCBiZSBraWxsZWQsIG9yIGVsc2UsIHRoZXkgc2FpZCwgaGUgd291bGQgYmUgYnVybmVkIHVwIHRoZW4gYW5kIHRoZXJlLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm93IGZpcmUgd2FzIGFscmVhZHkgc2hvd2luZyB0aHJvdWdoIHRoZSByb29mLCBhbmQgWGVub3Bob24gYW5kIGhpcyBtZW4gaW5zaWRlIHRoZSBob3VzZSBoYWQgZXF1aXBwZWQgdGhlbXNlbHZlcyB3aXRoIGJyZWFzdHBsYXRlcyBhbmQgd2VyZSBmdXJuaXNoZWQgd2l0aCBzaGllbGRzIGFuZCBzd29yZHMgYW5kIGhlbG1ldHMsIHdoZW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwNDY5MTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTA0NjkxMSI+U2lsYW51czwvcGxhY2VOYW1lPiB0aGUgTWFjaXN0aWFuLCBhIGxhZCBvZiBhYm91dCBlaWdodGVlbiB5ZWFycywgZ2F2ZSBhIHNpZ25hbCB3aXRoIHRoZSB0cnVtcGV0OyBhbmQgb24gdGhlIGluc3RhbnQgdGhleSBsZWFwZWQgZm9ydGggd2l0aCBzd29yZHMgZHJhd24sIGFuZCBzbyBkaWQgdGhlIEdyZWVrcyBmcm9tIHRoZSBvdGhlciBob3VzZXMuCjwvdHJhbnNsYXRpb24+"
translation['7.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZSBUaHJhY2lhbnMgdG9vayB0byBmbGlnaHQsIHN3aW5naW5nIHRoZWlyIHNoaWVsZHMgYXJvdW5kIGJlaGluZCB0aGVtLCBhcyB3YXMgdGhlaXIgY3VzdG9tOyBhbmQgc29tZSBvZiB0aGVtIHdobyB0cmllZCB0byBqdW1wIG92ZXIgdGhlIHBhbGluZ3Mgd2VyZSBjYXB0dXJlZCBoYW5naW5nIGluIHRoZSBhaXIsIHdpdGggdGhlaXIgc2hpZWxkcyBjYXVnaHQgaW4gdGhlIHN0YWtlcywgd2hpbGUgb3RoZXJzIG1pc3NlZCB0aGUgd2F5cyB0aGF0IGxlZCBvdXQgYW5kIHdlcmUga2lsbGVkOyBhbmQgdGhlIEdyZWVrcyBjb250aW51ZWQgdGhlIHB1cnN1aXQgdGlsbCB0aGV5IHdlcmUgb3V0c2lkZSB0aGUgdmlsbGFnZS4KPC90cmFuc2xhdGlvbj4="
translation['7.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Tb21lIG9mIHRoZSBUaHluaWFucywgaG93ZXZlciwgdHVybmVkIGFib3V0IGluIHRoZSBkYXJrbmVzcyBhbmQgaHVybGVkIGphdmVsaW5zIGF0IG1lbiB3aG8gd2VyZSBydW5uaW5nIGFsb25nIHBhc3QgYSBidXJuaW5nIGhvdXNlLCB0aHJvd2luZyBvdXQgb2YgdGhlIGRhcmtuZXNzIHRvd2FyZCB0aGUgbGlnaHQ7IGFuZCB0aGV5IHdvdW5kZWQgSGllcm9ueW11cyB0aGUgRXBpdGFsaWFuLCBhIGNhcHRhaW4sIGFuZCBUaGVvZ2VuZXMgdGhlIExvY3JpYW4sIGFsc28gYSBjYXB0YWluOyBubyBvbmUsIGhvd2V2ZXIsIHdhcyBraWxsZWQsIGJ1dCBzb21lIG1lbiBoYWQgY2xvdGhlcyBhbmQgYmFnZ2FnZSBidXJuZWQgdXAuCjwvdHJhbnNsYXRpb24+"
translation['7.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUsIFNldXRoZXMgY2FtZSB0byB0aGVpciBhaWQgd2l0aCBzZXZlbiBob3JzZW1lbiBvZiBoaXMgZnJvbnQgbGluZSBhbmQgaGlzIFRocmFjaWFuIHRydW1wZXRlci4gQW5kIGZyb20gdGhlIGluc3RhbnQgaGUgbGVhcm5lZCBvZiB0aGUgdHJvdWJsZSwgdGhyb3VnaCBhbGwgdGhlIHRpbWUgdGhhdCBoZSB3YXMgaHVycnlpbmcgdG8gdGhlIHJlc2N1ZSwgZXZlcnkgbW9tZW50IGhpcyBob3JuIHdhcyBrZXB0IHNvdW5kaW5nOyB0aGUgcmVzdWx0IHdhcywgdGhhdCB0aGlzIGFsc28gaGVscGVkIHRvIGluc3BpcmUgZmVhciBpbiB0aGUgZW5lbXkuIFdoZW4gaGUgZGlkIGFycml2ZSwgaGUgY2xhc3BlZCB0aGVpciBoYW5kcyBhbmQgc2FpZCB0aGF0IGhlIGhhZCBzdXBwb3NlZCBoZSBzaG91bGQgZmluZCBtYW55IG9mIHRoZW0gc2xhaW4uCjwvdHJhbnNsYXRpb24+"
translation['7.4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyBYZW5vcGhvbiBhc2tlZCBTZXV0aGVzIHRvIGdpdmUgb3ZlciB0aGUgaG9zdGFnZXMgdG8gaGltIGFuZCB0byBqb2luIGhpbSBvbiBhbiBleHBlZGl0aW9uIHRvIHRoZSBtb3VudGFpbiwgaWYgaGUgc28gcGxlYXNlZDsgb3RoZXJ3aXNlLCB0byBsZXQgaGltIGdvIGJ5IGhpbXNlbGYuCjwvdHJhbnNsYXRpb24+"
translation['7.4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgbmV4dCBkYXksIGFjY29yZGluZ2x5LCBTZXV0aGVzIGdhdmUgb3ZlciB0aGUgaG9zdGFnZXPigJRtZW4gYWxyZWFkeSBlbGRlcmx5IGFuZCB0aGUgbW9zdCBwb3dlcmZ1bCwgc28gaXQgd2FzIHNhaWQsIG9mIHRoZSBtb3VudGFpbmVlcnPigJRhbmQgY2FtZSBoaW1zZWxmIHdpdGggaGlzIHRyb29wcy4gTm93IGJ5IHRoaXMgdGltZSBTZXV0aGVzIGhhZCBhIGZvcmNlIHF1aXRlIHRocmVlIHRpbWVzIGFzIGxhcmdlIGFzIGJlZm9yZTsgZm9yIG1hbnkgb2YgdGhlIE9kcnlzaWFucywgaGVhcmluZyB3aGF0IHN1Y2Nlc3MgU2V1dGhlcyB3YXMgZW5qb3lpbmcsIGNhbWUgZG93biBmcm9tIHRoZSB1cHBlciBjb3VudHJ5IHRvIHRha2Ugc2VydmljZSB3aXRoIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['7.4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGUgVGh5bmlhbnMgc2F3IGZyb20gdGhlaXIgbW91bnRhaW4gbWFzc2VzIG9mIGhvcGxpdGVzLCBtYXNzZXMgb2YgcGVsdGFzdHMsIGFuZCB0cm9vcHMgb2YgaG9yc2VtZW4sIHRoZXkgZGVzY2VuZGVkIGFuZCBiZXNvdWdodCBoaW0gdG8gZ3JhbnQgdGhlbSBhIHRydWNlLCBhZ3JlZWluZyB0byBkbyBhbnl0aGluZyBhbmQgZXZlcnl0aGluZyBhbmQgdXJnaW5nIGhpbSB0byByZWNlaXZlIHBsZWRnZXMuCjwvdHJhbnNsYXRpb24+"
translation['7.4.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gU2V1dGhlcyBzdW1tb25lZCBYZW5vcGhvbiwgZGlzY2xvc2VkIHRvIGhpbSB0aGUgcHJvcG9zYWxzIHRoZXkgd2VyZSBtYWtpbmcsIGFuZCBzYWlkIHRoYXQgaGUgc2hvdWxkIG5vdCBncmFudCB0aGVtIGEgdHJ1Y2UgaWYgWGVub3Bob24gd2FudGVkIHRvIHB1bmlzaCB0aGVtIGZvciB0aGVpciBhdHRhY2suCjwvdHJhbnNsYXRpb24+"
translation['7.4.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgWGVub3Bob24gc2FpZDog4oCcV2h5LCBmb3IgbXkgcGFydCBJIHRoaW5rIEkgaGF2ZSBhYnVuZGFudCBzYXRpc2ZhY3Rpb24gYXMgaXQgaXMsIGlmIHRoZXNlIHBlb3BsZSBhcmUgdG8gYmUgc2xhdmVzIGluc3RlYWQgb2YgZnJlZSBtZW4u4oCdIEhlIGFkZGVkLCBob3dldmVyLCB0aGF0IGhlIGFkdmlzZWQgU2V1dGhlcyB0byB0YWtlIGFzIGhvc3RhZ2VzIGluIHRoZSBmdXR1cmUgdGhvc2Ugd2hvIHdlcmUgbW9zdCBjYXBhYmxlIG9mIGRvaW5nIGhhcm0gYW5kIHRvIGxlYXZlIHRoZSBvbGQgbWVuIGF0IGhvbWUuIFRodXMgaXQgd2FzIHRoYXQgYWxsIHRoZSBwZW9wbGUgaW4gdGhpcyByZWdpb24gc3VycmVuZGVyZWQuCjwvdHJhbnNsYXRpb24+"
translation['7.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgbm93IHRoZXkgY3Jvc3NlZCBvdmVyIHRvIHRoZSBjb3VudHJ5IG9mIHRoZSBUaHJhY2lhbnMgYWJvdmUgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxCeXphbnRpdW0iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEJ5emFudGl1bSI+Qnl6YW50aXVtPC9wbGFjZU5hbWU+LCBpbiB0aGUgc28tY2FsbGVkIERlbHRhOzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgb24gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjEuMzMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNy4xLjMzPC9iaWJsPi48L25vdGU+IHRoaXMgd2FzIGJleW9uZCB0aGUgZG9tYWluIG9mIE1hZXNhZGVzLCBiZWluZyB0aGUgbGFuZCBvZiBUZXJlcyB0aGUgT2RyeXNpYW4uCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNy4xLjMzIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDcuMS4zMzwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['7.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIEhlcmFjbGVpZGVzIHByZXNlbnRlZCBoaW1zZWxmLCB3aXRoIHRoZSBwcm9jZWVkcyBmcm9tIHRoZSBzYWxlIG9mIHRoZSBib290eS4gQW5kIFNldXRoZXMsIGxlYWRpbmcgZm9ydGggdGhyZWUgcGFpcnMgb2YgbXVsZXPigJRmb3IgdGhlcmUgd2VyZSBubyBtb3JlIHRoYW4gdGhyZWXigJRhbmQgdGhlIHlva2VzIG9mIG94ZW4gYmVzaWRlcywgY2FsbGVkIFhlbm9waG9uIGFuZCBiYWRlIGhpbSB0YWtlIGZvciBoaW1zZWxmIGFuZCB0aGVuIGRpc3RyaWJ1dGUgdGhlIHJlc3QgYW1vbmcgdGhlIGdlbmVyYWxzIGFuZCBjYXB0YWlucy4KPC90cmFuc2xhdGlvbj4="
translation['7.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlhlbm9waG9uIHJlcGxpZWQ6IOKAnFdlbGwsIGZvciBteSBwYXJ0IEkgYW0gY29udGVudCB0byBnZXQgc29tZXRoaW5nIGF0IGEgbGF0ZXIgdGltZTsgZ2l2ZSByYXRoZXIgdG8gdGhlc2UgZ2VuZXJhbHMgYW5kIGNhcHRhaW5zIHdobyBoYXZlIGZvbGxvd2VkIHdpdGggbWUu4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlNvIG9uZSBvZiB0aGUgbXVsZSB0ZWFtcyB3YXMgZ2l2ZW4gdG8gVGltYXNpb24gdGhlIERhcmRhbmlhbiwgb25lIHRvIENsZWFub3IgdGhlIE9yY2hvbWVuaWFuLCBhbmQgb25lIHRvIFBocnluaXNjdXMgdGhlIEFjaGFlYW4sIHdoaWxlIHRoZSB5b2tlcyBvZiBveGVuIHdlcmUgZGlzdHJpYnV0ZWQgYW1vbmcgdGhlIGNhcHRhaW5zLiBTZXV0aGVzIGFsc28gcGFpZCBvdmVyIHRoZSB3YWdlcyBvZiB0aGUgdHJvb3BzLCBidXQgZm9yIHR3ZW50eSBkYXlzIG9ubHkgb2YgdGhlIG1vbnRoIHRoYXQgaGFkIG5vdyBwYXNzZWQ7IGZvciBIZXJhY2xlaWRlcyBzYWlkIHRoYXQgaGUgaGFkIG5vdCBvYnRhaW5lZCBhbnkgbW9yZSB0aGFuIHRoYXQgZnJvbSBoaXMgc2FsZS4KPC90cmFuc2xhdGlvbj4="
translation['7.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlhlbm9waG9uIHdhcyBhbmdlcmVkIGF0IHRoaXMsIGFuZCBzYWlkIHRvIGhpbSB3aXRoIGFuIG9hdGg6IOKAnEl0IHNlZW1zIHRvIG1lLCBIZXJhY2xlaWRlcywgdGhhdCB5b3UgYXJlIG5vdCBjYXJpbmcgZm9yIFNldXRoZXMnIGludGVyZXN0IGFzIHlvdSBzaG91bGQ7IGZvciBpZiB5b3Ugd2VyZSwgeW91IHdvdWxkIGhhdmUgYnJvdWdodCBiYWNrIHdpdGggeW91IG91ciB3YWdlcyBpbiBmdWxsLCBldmVuIGlmIHlvdSBoYWQgdG8gYm9ycm93IHNvbWV0aGluZywgaW4gY2FzZSB5b3UgY291bGQgbm90IGRvIGl0IGluIGFueSBvdGhlciB3YXksIG9yIHRvIHNlbGwgeW91ciBvd24gY2xvdGhlcy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGlzIG1hZGUgSGVyYWNsZWlkZXMgbm90IG9ubHkgYW5ncnksIGJ1dCBmZWFyZnVsIHRoYXQgaGUgbWlnaHQgYmUgYmFuaXNoZWQgZnJvbSB0aGUgZmF2b3VyIG9mIFNldXRoZXMsIGFuZCBmcm9tIHRoYXQgZGF5IGhlIHNsYW5kZXJlZCBYZW5vcGhvbiBiZWZvcmUgU2V1dGhlcyB0byB0aGUgYmVzdCBvZiBoaXMgYWJpbGl0eS4KPC90cmFuc2xhdGlvbj4="
translation['7.5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciB0aGUgc29sZGllcnMsIHRoZXkgaGVsZCBYZW5vcGhvbiB0byBibGFtZSBmb3IgdGhlaXIgbm90IGhhdmluZyByZWNlaXZlZCB0aGVpciBwYXk7IGFuZCBTZXV0aGVzLCBvbiB0aGUgb3RoZXIgaGFuZCwgd2FzIGFuZ3J5IHdpdGggaGltIGJlY2F1c2UgaGUgd2FzIGluc2lzdGVudCBpbiBkZW1hbmRpbmcgdGhlaXIgcGF5IGZvciB0aGUgc29sZGllcnMuCjwvdHJhbnNsYXRpb24+"
translation['7.5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkhpdGhlcnRvLCBoZSBoYWQgY29udGludWFsbHkgYmVlbiBtZW50aW9uaW5nIHRoZSBmYWN0IHRoYXQgdXBvbiBoaXMgcmV0dXJuIHRvIHRoZSBjb2FzdCBoZSB3YXMgZ29pbmcgdG8gZ2l2ZSBYZW5vcGhvbiBCaXNhbnRoZSBhbmQgR2Fub3MgYW5kIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTmVvbnRlaWNob3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE5lb250ZWljaG9zIj5OZW9udGVpY2hvczwvcGxhY2VOYW1lPiwgYnV0IGZyb20gdGhpcyB0aW1lIGhlIGRpZCBub3QgYWxsdWRlIHRvIGEgc2luZ2xlIG9uZSBvZiB0aGVzZSBwbGFjZXMgYWdhaW4uIEZvciBIZXJhY2xlaWRlcyBoYWQgcHV0IGluIHRoaXMgc2xhbmRlcm91cyBzdWdnZXN0aW9uIHdpdGggdGhlIHJlc3QsIHRoYXQgaXQgd2FzIG5vdCBzYWZlIHRvIGJlIGdpdmluZyBvdmVyIGZvcnRyZXNzZXMgdG8gYSBtYW4gd2hvIGhhZCBhIGZvcmNlIG9mIHRyb29wcy4KPC90cmFuc2xhdGlvbj4="
translation['7.5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZXJldXBvbiBYZW5vcGhvbiBiZWdhbiB0byBjb25zaWRlciB3aGF0IGl0IHdhcyBiZXN0IHRvIGRvIGFib3V0IGNvbnRpbnVpbmcgdGhlIG1hcmNoIHN0aWxsIGZhcnRoZXIgaW5sYW5kOyBIZXJhY2xlaWRlcywgb24gdGhlIG90aGVyIGhhbmQsIHRvb2sgdGhlIHJlc3Qgb2YgdGhlIGdlbmVyYWxzIGluIHRvIHZpc2l0IFNldXRoZXMgYW5kIGJhZGUgdGhlbSBzYXkgdGhhdCB0aGV5IGNvdWxkIGxlYWQgdGhlIGFybXkganVzdCBhcyB3ZWxsIGFzIFhlbm9waG9uLCB3aGlsZSBhdCB0aGUgc2FtZSB0aW1lIGhlIHByb21pc2VkIHRoZW0gdGhhdCB3aXRoaW4gYSBmZXcgZGF5cyB0aGV5IHdvdWxkIGhhdmUgdGhlaXIgcGF5IGluIGZ1bGwgZm9yIHR3byBtb250aHMgYW5kIHVyZ2VkIHRoZW0gdG8gY29udGludWUgdGhlIGNhbXBhaWduIHdpdGggU2V1dGhlcy4KPC90cmFuc2xhdGlvbj4="
translation['7.5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgVGltYXNpb24gc2FpZDog4oCcV2VsbCwgc28gZmFyIGFzIEkgYW0gY29uY2VybmVkLCBJIHNoYWxsIHVuZGVydGFrZSBubyBjYW1wYWlnbiB3aXRob3V0IFhlbm9waG9uIGV2ZW4gaWYgdGhlcmUgaXMgZ29pbmcgdG8gYmUgZml2ZSBtb250aHMnIHBheS7igJ0gQW5kIFBocnluaXNjdXMgYW5kIENsZWFub3IgYWdyZWVkIHdpdGggVGltYXNpb24uCjwvdHJhbnNsYXRpb24+"
translation['7.5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gU2V1dGhlcyBmZWxsIHRvIGFidXNpbmcgSGVyYWNsZWlkZXMgYmVjYXVzZSBoZSBoYWQgbm90IGludml0ZWQgWGVub3Bob24gaW4gYWxzby4gVGhlIHVwc2hvdCBvZiB0aGlzIHdhcywgdGhhdCB0aGV5IGludml0ZWQgWGVub3Bob24gYnkgaGltc2VsZi4gQW5kIGhlLCBjb21wcmVoZW5kaW5nIHRoZSByYXNjYWxpdHkgb2YgSGVyYWNsZWlkZXMsIGluIHdhbnRpbmcgdG8gbWFrZSBoaW0gYW4gb2JqZWN0IG9mIHN1c3BpY2lvbiB0byB0aGUgb3RoZXIgZ2VuZXJhbHMsIGJyb3VnaHQgd2l0aCBoaW0gd2hlbiBoZSBjYW1lIGFsbCB0aGUgZ2VuZXJhbHMgYW5kIHRoZSBjYXB0YWlucy4KPC90cmFuc2xhdGlvbj4="
translation['7.5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGFsbCBvZiB0aGVtIGhhZCBiZWVuIHByZXZhaWxlZCB1cG9uLCB0aGV5IGNvbnRpbnVlZCB0aGUgbWFyY2ggd2l0aCBTZXV0aGVzLCBhbmQsIGtlZXBpbmcgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NjE5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY2MTkiPlBvbnR1czwvcGxhY2VOYW1lPiB1cG9uIHRoZSByaWdodCB0aHJvdWdoIHRoZSBjb3VudHJ5IG9mIHRoZSBtaWxsZXQtZWF0aW5nIFRocmFjaWFucywgYXMgdGhleSBhcmUgY2FsbGVkLCBhcnJpdmVkIGF0IFNhbG15ZGVzc3VzLiBIZXJlIG1hbnkgdmVzc2VscyBzYWlsaW5nIHRvIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjYxOSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2NjE5Ij5Qb250dXM8L3BsYWNlTmFtZT4gcnVuIGFncm91bmQgYW5kIGFyZSB3cmVja2VkOyBmb3IgdGhlcmUgYXJlIHNob2FscyB0aGF0IGV4dGVuZCBmYXIgYW5kIHdpZGUuCjwvdHJhbnNsYXRpb24+"
translation['7.5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIFRocmFjaWFucyB3aG8gZHdlbGwgb24gdGhpcyBjb2FzdCBoYXZlIGJvdW5kYXJ5IHN0b25lcyBzZXQgdXAgYW5kIGVhY2ggZ3JvdXAgb2YgdGhlbSBwbHVuZGVyIHRoZSBzaGlwcyB0aGF0IGFyZSB3cmVja2VkIHdpdGhpbiB0aGVpciBvd24gbGltaXRzOyBidXQgaW4gZWFybGllciBkYXlzLCBiZWZvcmUgdGhleSBmaXhlZCB0aGUgYm91bmRhcmllcywgaXQgd2FzIHNhaWQgdGhhdCBpbiB0aGUgY291cnNlIG9mIHRoZWlyIHBsdW5kZXJpbmcgbWFueSBvZiB0aGVtIHVzZWQgdG8gYmUga2lsbGVkIGJ5IG9uZSBhbm90aGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5IZXJlIHRoZXJlIHdlcmUgZm91bmQgZ3JlYXQgbnVtYmVycyBvZiBiZWRzIGFuZCBib3hlcywgcXVhbnRpdGllcyBvZiB3cml0dGVuIGJvb2tzLCBhbmQgYW4gYWJ1bmRhbmNlIG9mIGFsbCB0aGUgb3RoZXIgYXJ0aWNsZXMgdGhhdCBzaGlwb3duZXJzIGNhcnJ5IGluIHdvb2RlbiBjaGVzdHMuIEFmdGVyIHN1YmR1aW5nIHRoZSBjb3VudHJ5IGluIHRoaXMgbmVpZ2hib3VyaG9vZCB0aGV5IHNldCBvdXQgdXBvbiB0aGVpciByZXR1cm4uCjwvdHJhbnNsYXRpb24+"
translation['7.5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5CeSB0aGF0IHRpbWUgU2V1dGhlcyBoYWQgYW4gYXJteSBsYXJnZXIgdGhhbiB0aGUgR3JlZWsgYXJteTsgZm9yIG1vcmUgYW5kIHN0aWxsIG1vcmUgb2YgdGhlIE9kcnlzaWFucyBoYWQgY29tZSBkb3duIGZyb20gdGhlIGludGVyaW9yLCBhbmQgdGhlIHBlb3BsZXMgdGhhdCBmcm9tIHRpbWUgdG8gdGltZSB3ZXJlIHJlZHVjZWQgdG8gb2JlZGllbmNlIHdvdWxkIGpvaW4gaW4gdGhlIGNhbXBhaWduLiBBbmQgdGhleSB3ZW50IGludG8gY2FtcCBvbiB0aGUgcGxhaW4gYWJvdmUgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTZWx5bWJyaWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNlbHltYnJpYSI+U2VseW1icmlhPC9wbGFjZU5hbWU+LCBhdCBhIGRpc3RhbmNlIG9mIGFib3V0IHRoaXJ0eSBzdGFkaWEgZnJvbSB0aGUgY29hc3QuCjwvdHJhbnNsYXRpb24+"
translation['7.5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgcGF5LCB0aGVyZSB3YXMgbm9uZSB0byBiZSBzZWVuIGFzIHlldDsgYW5kIG5vdCBvbmx5IGRpZCB0aGUgc29sZGllcnMgZW50ZXJ0YWluIHZlcnkgaGFyZCBmZWVsaW5ncyB0b3dhcmQgWGVub3Bob24sIGJ1dCBTZXV0aGVzIG5vIGxvbmdlciBmZWx0IGtpbmRseSB0b3dhcmQgaGltLCBhbmQgd2hlbmV2ZXIgWGVub3Bob24gY2FtZSBhbmQgd2FudGVkIHRvIGhhdmUgYSBtZWV0aW5nIHdpdGggaGltLCBpdCB3b3VsZCBzdHJhaWdodHdheSBiZSBmb3VuZCB0aGF0IGhlIGhhZCBlbmdhZ2VtZW50cyBpbiBhYnVuZGFuY2UuCjwvdHJhbnNsYXRpb24+"
translation['7.6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BdCB0aGlzIHRpbWUsIHdoZW4gbmVhcmx5IHR3byBtb250aHMgaGFkIGFscmVhZHkgcGFzc2VkLCBDaGFybWludXMgdGhlIExhY29uaWFuIGFuZCBQb2x5bmljdXMgYXJyaXZlZCBvbiBhIG1pc3Npb24gZnJvbSBUaGlicm9uOiB0aGV5IHNhaWQgdGhhdCB0aGUgTGFjZWRhZW1vbmlhbnMgaGFkIHJlc29sdmVkIHRvIHVuZGVydGFrZSBhIGNhbXBhaWduIGFnYWluc3QgVGlzc2FwaGVybmVzLCB0aGF0IFRoaWJyb24gaGFkIHNldCBzYWlsIHRvIHdhZ2UgdGhlIHdhciwgYW5kIHRoYXQgaGUgd2FudGVkIHRoaXMgYXJteTsgYWxzbyB0aGF0IGhlIHNhaWQgdGhlIHBheSB3b3VsZCBiZSBhIGRhcmljIHBlciBtb250aCBmb3IgZXZlcnkgbWFuLCB0d2ljZSBhcyBtdWNoIGZvciB0aGUgY2FwdGFpbnMsIGFuZCBmb3VyIHRpbWVzIGFzIG11Y2ggZm9yIHRoZSBnZW5lcmFscy4KPC90cmFuc2xhdGlvbj4="
translation['7.6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZSBMYWNlZGFlbW9uaWFucyBhcnJpdmVkLCBIZXJhY2xlaWRlcyBsZWFybmVkIG9uIHRoZSBpbnN0YW50IHRoYXQgdGhleSBoYWQgY29tZSB0byBnZXQgdGhlIGFybXksIGFuZCB0b2xkIFNldXRoZXMgdGhhdCBhIG1vc3QgZm9ydHVuYXRlIHRoaW5nIGhhZCBoYXBwZW5lZDog4oCcVGhlIExhY2VkYWVtb25pYW5zIHdhbnQgdGhlIGFybXksIGFuZCB5b3Ugbm8gbG9uZ2VyIHdhbnQgaXQ7IGJ5IGdpdmluZyB1cCB0aGUgYXJteSB5b3Ugd2lsbCBiZSBkb2luZyB0aGVtIGEgZmF2b3VyLCB3aGlsZSwgb24geW91ciBzaWRlLCB0aGUgdHJvb3BzIHdpbGwgbm90IGdvIG9uIGRlbWFuZGluZyB0aGVpciBwYXkgZnJvbSB5b3UsIGJ1dCB3aWxsIHNvb24gYmUgcXVpdHRpbmcgdGhlIGNvdW50cnku4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlVwb24gaGVhcmluZyB0aGVzZSB3b3JkcyBTZXV0aGVzIGRpcmVjdGVkIGhpbSB0byBpbnRyb2R1Y2UgdGhlIGVudm95czsgYW5kIHdoZW4gdGhleSB0b2xkIGhpbSB0aGF0IHRoZXkgaGFkIGNvbWUgYWZ0ZXIgdGhlIGFybXksIGhlIHJlcGxpZWQgdGhhdCBoZSB3b3VsZCBkZWxpdmVyIGl0IHVwIGFuZCB0aGF0IGhlIGRlc2lyZWQgdG8gYmUgdGhlaXIgZnJpZW5kIGFuZCBhbGx5OyBoZSBhbHNvIGludml0ZWQgdGhlbSB0byBkaW5uZXIsIGFuZCBlbnRlcnRhaW5lZCB0aGVtIG1hZ25pZmljZW50bHkuIFhlbm9waG9uLCBob3dldmVyLCBoZSBkaWQgbm90IGludml0ZSwgbm9yIGFueSBvbmUgb2YgdGhlIG90aGVyIGdlbmVyYWxzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlIExhY2VkYWVtb25pYW5zIGFza2VkIHdoYXQgc29ydCBvZiBhIG1hbiBYZW5vcGhvbiB3YXMsIGhlIHJlcGxpZWQgdGhhdCBoZSB3YXMgbm90IGEgYmFkIGZlbGxvdyBvbiB0aGUgd2hvbGUsIGJ1dCBoZSB3YXMgYSBmcmllbmQgb2YgdGhlIHNvbGRpZXJzLCBhbmQgb24gdGhhdCBhY2NvdW50IHRoaW5ncyB3ZW50IHRoZSB3b3JzZSBmb3IgaGltLiBBbmQgdGhleSBzYWlkOiDigJxIZSBwbGF5cyB0aGUgZGVtYWdvZ3VlLCB5b3UgbWVhbiwgd2l0aCB0aGUgbWVuP+KAnSDigJxFeGFjdGx5IHRoYXQs4oCdIHNhaWQgSGVyYWNsZWlkZXMuCjwvdHJhbnNsYXRpb24+"
translation['7.6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPuKAnFdlbGws4oCdIHNhaWQgdGhleSwg4oCcaGUgd29uJ3QgZ28gc28gZmFyLCB3aWxsIGhlLCBhcyB0byBvcHBvc2UgdXMgaW4gdGhlIG1hdHRlciBvZiB0YWtpbmcgYXdheSB0aGUgYXJteT/igJ0g4oCcV2h5LOKAnSBzYWlkIEhlcmFjbGVpZGVzLCDigJxpZiB5b3UgZ2F0aGVyIHRoZSBtZW4gdG9nZXRoZXIgYW5kIHByb21pc2UgdGhlbSB0aGVpciBwYXksIHRoZXkgd2lsbCBodXJyeSBhZnRlciB5b3UsIHBheWluZyBzY2FudCBoZWVkIHRvIGhpbS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPuKAnEhvdywgdGhlbizigJ0gdGhleSBzYWlkLCDigJxjb3VsZCB3ZSBnZXQgdGhlbSB0b2dldGhlcj/igJ0g4oCcVG8tbW9ycm93IG1vcm5pbmcs4oCdIEhlcmFjbGVpZGVzIHJlcGxpZWQsIOKAnHdlIHdpbGwgdGFrZSB5b3UgdG8gdGhlbTsgYW5kIEkga25vdyzigJ0gaGUgY29udGludWVkLCDigJx0aGF0IGFzIHNvb24gYXMgdGhleSBjYXRjaCBzaWdodCBvZiB5b3UsIHRoZXkgd2lsbCBodXJyeSB0b2dldGhlciB3aXRoIGFsbCBlYWdlcm5lc3Mu4oCdIFNvIGVuZGVkIHRoaXMgZGF5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgbmV4dCBkYXkgU2V1dGhlcyBhbmQgSGVyYWNsZWlkZXMgY29uZHVjdGVkIHRoZSBMYWNvbmlhbnMgdG8gdGhlIGFybXksIGFuZCB0aGUgdHJvb3BzIGdhdGhlcmVkIHRvZ2V0aGVyLiBBbmQgdGhlIHR3byBMYWNvbmlhbnMgc2FpZDog4oCcVGhlIExhY2VkYWVtb25pYW5zIGhhdmUgcmVzb2x2ZWQgdG8gbWFrZSB3YXIgdXBvbiBUaXNzYXBoZXJuZXMsIHRoZSBtYW4gd2hvIHdyb25nZWQgeW91OyBzbyBpZiB5b3Ugd2lsbCBjb21lIHdpdGggdXMsIHlvdSB3aWxsIHB1bmlzaCB5b3VyIGVuZW15IGFuZCwgYmVzaWRlcywgZWFjaCBvbmUgb2YgeW91IHdpbGwgcmVjZWl2ZSBhIGRhcmljIGEgbW9udGgsIGVhY2ggY2FwdGFpbiB0d29mb2xkLCBhbmQgZWFjaCBnZW5lcmFsIGZvdXJmb2xkLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBzb2xkaWVycyB3ZXJlIGRlbGlnaHRlZCB0byBoZWFyIHRoZXNlIHdvcmRzLCBhbmQgc3RyYWlnaHR3YXkgb25lIG9mIHRoZSBBcmNhZGlhbnMgZ290IHVwIHRvIGFjY3VzZSBYZW5vcGhvbi4gTm93IFNldXRoZXMgYWxzbyB3YXMgcHJlc2VudCwgZm9yIGhlIHdhbnRlZCB0byBrbm93IHdoYXQgd291bGQgYmUgZG9uZSwgYW5kIHdhcyBzdGFuZGluZyB3aXRoaW4gaGVhcmluZyBkaXN0YW5jZSBhbG9uZyB3aXRoIGFuIGludGVycHJldGVyLAo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPmFsdGhvdWdoIGhlIGNvdWxkIHJlYWxseSB1bmRlcnN0YW5kIGZvciBoaW1zZWxmIG1vc3Qgb2Ygd2hhdCB3YXMgc2FpZCBpbiBHcmVlay4gVGhlcmV1cG9uIHRoaXMgQXJjYWRpYW4gc2FpZDog4oCcRm9yIG91ciBwYXJ0LCBMYWNlZGFlbW9uaWFucywgd2Ugc2hvdWxkIGhhdmUgYmVlbiB3aXRoIHlvdSBhIGxvbmcgdGltZSBhZ28gaWYgWGVub3Bob24gaGFkIG5vdCB0YWxrZWQgdXMgb3ZlciBhbmQgbGVkIHVzIG9mZiB0byB0aGlzIHJlZ2lvbiwgd2hlcmUgd2UgaGF2ZSBuZXZlciBjZWFzZWQgY2FtcGFpZ25pbmcsIGJ5IG5pZ2h0IG9yIGRheSwgdGhyb3VnaCBhbiBhd2Z1bCB3aW50ZXIsIHdoaWxlIGhlIGdldHMgdGhlIGZydWl0cyBvZiBvdXIgdG9pbHM7IGZvciBTZXV0aGVzIGhhcyBlbnJpY2hlZCBoaW0gcGVyc29uYWxseSB3aGlsZSBoZSBkZWZyYXVkcyB1cyBvZiBvdXIgcGF5Owo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5zbyBmb3IgbXlzZWxmLCBpZiBJIGNvdWxkIHNlZSB0aGlzIGZlbGxvdyBzdG9uZWQgdG8gZGVhdGggYXMgcHVuaXNobWVudCBmb3IgaGF2aW5nIGRyYWdnZWQgdXMgYWJvdXQgYXMgaGUgaGFzIGRvbmUsIEkgc2hvdWxkIGNvbnNpZGVyIHRoYXQgSSBoYWQgbXkgcGF5IGFuZCBzaG91bGQgZmVlbCBubyBhbmdlciBvdmVyIHRoZSB0b2lscyBJIGhhdmUgZW5kdXJlZC7igJ0gQWZ0ZXIgdGhpcyBzcGVha2VyIGFub3RoZXIgYXJvc2UgYW5kIHRhbGtlZCBpbiB0aGUgc2FtZSB3YXksIGFuZCB0aGVuIGFub3RoZXIuIEFmdGVyIHRoYXQgWGVub3Bob24gc3Bva2UgYXMgZm9sbG93czoKPC90cmFuc2xhdGlvbj4="
translation['7.6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCwgaXQgaXMgdHJ1ZSwgYWZ0ZXIgYWxsLCB0aGF0IGEgaHVtYW4gYmVpbmcgbXVzdCBleHBlY3QgYW55dGhpbmcgYW5kIGV2ZXJ5dGhpbmcsIHNlZWluZyB0aGF0IEkgbm93IGZpbmQgbXlzZWxmIGJsYW1lZCBieSB5b3UgaW4gYSBtYXR0ZXIgd2hlcmUgSSBhbSBjb25zY2lvdXPigJRhdCBsZWFzdCwgaW4gbXkgb3duIG9waW5pb27igJRvZiBoYXZpbmcgc2hvd24gdGhlIHV0bW9zdCB6ZWFsIGluIHlvdXIgYmVoYWxmLiBJIHR1cm5lZCBiYWNrIGFmdGVyIEkgaGFkIGFscmVhZHkgc2V0IG91dCBmb3IgaG9tZSwgbm904oCUSGVhdmVuIGtub3dzIGl0IHdhcyBub3TigJRiZWNhdXNlIEkgbGVhcm5lZCB0aGF0IHlvdSB3ZXJlIHByb3NwZXJpbmcsIGJ1dCByYXRoZXIgYmVjYXVzZSBJIGhlYXJkIHRoYXQgeW91IHdlcmUgaW4gZGlmZmljdWx0aWVzOyBhbmQgSSB0dXJuZWQgYmFjayB0byBoZWxwIHlvdSBpbiBhbnkgd2F5IEkgY291bGQuCjwvdHJhbnNsYXRpb24+"
translation['7.6.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIEkgaGFkIGFycml2ZWQsIGFsdGhvdWdoIFNldXRoZXMgaGVyZSBzZW50IG1hbnkgbWVzc2VuZ2VycyB0byBtZSBhbmQgbWFkZSBtZSBtYW55IHByb21pc2VzIGlmIG9ubHkgSSB3b3VsZCBwZXJzdWFkZSB5b3UgdG8gY29tZSB0byBoaW0sIEkgZGlkIG5vdCB0cnkgdG8gZG8gdGhhdCwgYXMgeW91IGtub3cgZm9yIHlvdXJzZWx2ZXMuIEluc3RlYWQsIEkgbGVkIHlvdSB0byBhIHBsYWNlIGZyb20gd2hpY2ggSSB0aG91Z2h0IHlvdSBjb3VsZCBtb3N0IHNwZWVkaWx5IGNyb3NzIG92ZXIgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPjsgZm9yIEkgYmVsaWV2ZWQgdGhhdCB0aGlzIGNvdXJzZSB3YXMgdGhlIGJlc3Qgb25lIGZvciB5b3UgYW5kIEkga25ldyBpdCB3YXMgdGhlIG9uZSB5b3UgZGVzaXJlZC4KPC90cmFuc2xhdGlvbj4="
translation['7.6.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBBcmlzdGFyY2h1cyBjYW1lIHdpdGggaGlzIHRyaXJlbWVzIGFuZCBwcmV2ZW50ZWQgb3VyIHNhaWxpbmcgYWNyb3NzLCBhdCB0aGF0IG1vbWVudOKAlGFuZCBzdXJlbHkgaXQgd2FzIGV4YWN0bHkgdGhlIHByb3BlciBzdGVw4oCUSSBnYXRoZXJlZCB5b3UgdG9nZXRoZXIgc28gdGhhdCB3ZSBtaWdodCBjb25zaWRlciB3aGF0IHdlIHNob3VsZCBiZXR0ZXIgZG8uCiAgICA8L3RyYW5zbGF0aW9uPg=="
translation['7.6.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5TbyB5b3Ugd2l0aCB5b3VyIG93biBlYXJzIGhlYXJkIEFyaXN0YXJjaHVzIGRpcmVjdCB5b3UgdG8gbWFyY2ggdG8gdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDEyNzg5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMTI3ODkiPkNoZXJzb25lc2U8L3BsYWNlTmFtZT4gYW5kIHlvdSBoZWFyZCBTZXV0aGVzIHVyZ2UgeW91IHRvIHRha2UgdGhlIGZpZWxkIHdpdGggaGltLCBhbmQgdGhlbiBldmVyeSBtYW4gb2YgeW91IHNwb2tlIGluIGZhdm91ciBvZiBnb2luZyB3aXRoIFNldXRoZXMgYW5kIGV2ZXJ5IG1hbiBvZiB5b3Ugdm90ZWQgdG8gZG8gc28uIFdoYXQgd3JvbmcsIHRoZXJlZm9yZSwgZGlkIEkgZG8gaW4gdGhhdCBtYXR0ZXIsIHdoZW4gSSBsZWQgeW91IHRvIHRoZSBwbGFjZSB3aGVyZSB5b3UgaGFkIGFsbCBkZWNpZGVkIHRvIGdvPwo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5JIGNvbWUgbm93IHRvIHRoZSB0aW1lIHdoZW4gU2V1dGhlcyBiZWdhbiB0byBwbGF5IGZhbHNlIHdpdGggeW91IGluIHRoZSBtYXR0ZXIgb2YgeW91ciBwYXk6IGlmIEkgYW0gaGlzIHN1cHBvcnRlciBpbiB0aGF0LCBpdCB3b3VsZCBiZSBqdXN0IGZvciB5b3UgdG8gYmxhbWUgbWUgYW5kIGhhdGUgbWU7IGJ1dCBpZiB0aGUgdHJ1dGggaXMgdGhhdCBJLCB3aG8gYmVmb3JlIHRoYXQgd2FzIHRoZSBtb3N0IGZyaWVuZGx5IHRvIGhpbSBvZiB1cyBhbGwsIGFtIG5vdyBtb3N0IG9mIGFsbCBhdCB2YXJpYW5jZSB3aXRoIGhpbSwgaG93IGNhbiBpdCBiZSBqdXN0IGluIHRoaXMgY2FzZSB0aGF0LCB3aGVuIEkgc2lkZWQgd2l0aCB5b3UgcmF0aGVyIHRoYW4gd2l0aCBTZXV0aGVzLCBJIHNob3VsZCBiZSBibGFtZWQgYnkgeW91IGFib3V0IHRoZSB0aGluZ3MgaW4gd2hpY2ggSSBhbSBhdCB2YXJpYW5jZSB3aXRoIGhpbT8KPC90cmFuc2xhdGlvbj4="
translation['7.6.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IGl0IGlzIHBvc3NpYmxlLCB5b3UgbWlnaHQgc2F5LCB0aGF0IEkgcmVhbGx5IGhhdmUgcmVjZWl2ZWQgZnJvbSBTZXV0aGVzIHRoZSBtb25leSB0aGF0IGJlbG9uZ3MgdG8geW91LCBhbmQgYW0gb25seSB0cmlja2luZyB5b3UuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gYnkgcHJldGVuZGluZyB0byBzaWRlIHdpdGggeW91IGFnYWluc3QgU2V1dGhlcy48L25vdGU+IFRoZW4gdGhpcyBhdCBsZWFzdCBpcyBjbGVhcjogaWYgU2V1dGhlcyB3YXMgaW4gZmFjdCBwYXlpbmcgYW55dGhpbmcgdG8gbWUsIGhlIHN1cmVseSB3YXMgbm90IHBheWluZyBpdCB3aXRoIHRoZSB1bmRlcnN0YW5kaW5nIHRoYXQgaGUgd2FzIGJvdGggdG8gbG9zZSB3aGF0ZXZlciBoZSBnYXZlIG1lIGFuZCBhdCB0aGUgc2FtZSB0aW1lIHdhcyB0byBwYXkgb3RoZXIgc3VtcyB0byB5b3UsIGJ1dCByYXRoZXIsIEkgcHJlc3VtZSwgaWYgaGUgd2FzIGdpdmluZyBtZSBhbnl0aGluZywgaGUgd2FzIGdpdmluZyBpdCB3aXRoIHRoaXMgdW5kZXJzdGFuZGluZywgdGhhdCBieSBnaXZpbmcgYSBzbWFsbGVyIHN1bSB0byBtZSBoZSB3YXMgdG8gZXNjYXBlIHBheWluZyBvdmVyIHRoZSBsYXJnZXIgdG8geW91Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaWYgeW91IGltYWdpbmUgdGhhdCB0aGlzIGlzIHRoZSBjYXNlLCBpdCBpcyB3aXRoaW4geW91ciBwb3dlciB1cG9uIHRoZSBpbnN0YW50IHRvIG1ha2UgdGhpcyB0cmFuc2FjdGlvbiBhIHZhaW4gb25lIGZvciB1cyBib3RoIGJ5IGV4YWN0aW5nIHlvdXIgbW9uZXkgZnJvbSBoaW0uIEZvciBpdCBpcyBjbGVhciB0aGF0LCBpZiBJIGhhdmUgcmVjZWl2ZWQgYW55dGhpbmcgZnJvbSBTZXV0aGVzLCBoZSB3aWxsIGRlbWFuZCBpdCBiYWNrIGZyb20gbWUsIGFuZCwgbW9yZW92ZXIsIGhlIHdpbGwgZGVtYW5kIGl0IGJhY2sgd2l0aCBqdXN0aWNlIGlmIEkgYW0gZmFpbGluZyB0byBmdWxmaWwgdG8gaGltIHRoZSB1bmRlcnRha2luZyBmb3Igd2hpY2ggSSB3YXMgYWNjZXB0aW5nIGhpcyBnaWZ0cy4KPC90cmFuc2xhdGlvbj4="
translation['7.6.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaXQgaXMgZmFyIGZyb20gYmVpbmcgdHJ1ZSwgaW4gbXkgb3BpbmlvbiwgdGhhdCBJIGhhdmUgcmVjZWl2ZWQgd2hhdCBiZWxvbmdzIHRvIHlvdTsgZm9yIEkgc3dlYXIgdG8geW91IGJ5IGFsbCB0aGUgZ29kcyBhbmQgZ29kZGVzc2VzIHRoYXQgSSBoYXZlIG5vdCBldmVuIHJlY2VpdmVkIHdoYXQgU2V1dGhlcyBwcm9taXNlZCB0byBtZSBmb3IgbXkgb3duIHNlcnZpY2VzOyBoZSBpcyBwcmVzZW50IGhlcmUgaGltc2VsZiwgYW5kIGFzIGhlIGxpc3RlbnMgaGUga25vd3MgYXMgd2VsbCBhcyBJIGRvIHdoZXRoZXIgSSBhbSBzd2VhcmluZyBmYWxzZWx5Owo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5mdXJ0aGVybW9yZSwgdG8gbWFrZSB5b3VyIHdvbmRlciB0aGUgZ3JlYXRlciwgSSBzd2VhciBiZXNpZGVzIHRoYXQgSSBoYXZlIG5vdCBldmVuIHJlY2VpdmVkIHdoYXQgdGhlIG90aGVyIGdlbmVyYWxzIGhhdmUgcmVjZWl2ZWTigJRuYXksIG5vdCBldmVuIHNvIG11Y2ggYXMgc29tZSBvZiB0aGUgY2FwdGFpbnMuCjwvdHJhbnNsYXRpb24+"
translation['7.6.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHdoeSwgdGhlbiwgZGlkIEkgZm9sbG93IHRoaXMgY291cnNlPyBJIHN1cHBvc2VkLCBzb2xkaWVycywgdGhhdCB0aGUgbW9yZSBJIGhlbHBlZCB0aGlzIG1hbiB0byBiZWFyIHRoZSBwb3ZlcnR5IGluIHdoaWNoIGhlIHRoZW4gd2FzLCB0aGUgbW9yZSBJIHNob3VsZCBtYWtlIGhpbSBteSBmcmllbmQgd2hlbiBoZSBzaG91bGQgaGF2ZSBnYWluZWQgcG93ZXIuIEJ1dCBpbiBmYWN0IEkgbm8gc29vbmVyIHNlZSBoaW0gZW5qb3lpbmcgcHJvc3Blcml0eSB0aGFuIEkgcmVjb2duaXplIGhpcyB0cnVlIGNoYXJhY3Rlci4KPC90cmFuc2xhdGlvbj4="
translation['7.6.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5PbmUgbWlnaHQgc2F5LCBgQXJlIHlvdSBub3QgYXNoYW1lZCBvZiBiZWluZyBzbyBzdHVwaWRseSBkZWNlaXZlZD8nIEkgY2VydGFpbmx5IHNob3VsZCBiZSBhc2hhbWVkLCBieSBaZXVzLCBpZiBJIGhhZCBiZWVuIGRlY2VpdmVkIGJ5IG9uZSB3aG8gd2FzIGFuIGVuZW15OyBidXQgZm9yIG9uZSB3aG8gaXMgYSBmcmllbmQsIHRvIGRlY2VpdmVkIHNlZW1zIHRvIG1lIG1vcmUgc2hhbWVmdWwgdGhhbiB0byBiZSBkZWNlaXZlZC4KPC90cmFuc2xhdGlvbj4="
translation['7.6.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaWYgdGhlcmUgaXMgc3VjaCBhIHRoaW5nIGFzIHByZWNhdXRpb24gdG93YXJkIGZyaWVuZHMsIEkga25vdyB0aGF0IHdlIHRvb2sgZXZlcnkgcHJlY2F1dGlvbiBub3QgdG8gYWZmb3JkIHRoaXMgbWFuIGEganVzdCBwcmV0ZXh0IGZvciBub3QgcGF5aW5nIHVzIHdoYXQgaGUgaGFkIHByb21pc2VkOyBmb3Igd2UgbmVpdGhlciBkaWQgdGhpcyBtYW4gYW55IHdyb25nLCBub3IgZGlkIHdlIG1pc21hbmFnZSBoaXMgYWZmYWlycywgbm9yIHlldCBkaWQgd2Ugc2hyaW5rIGxpa2UgY293YXJkcyBmcm9tIGFueSBzZXJ2aWNlIHRvIHdoaWNoIGhlIHN1bW1vbmVkIHVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0LCB5b3UgbWlnaHQgc2F5LCBzdXJldGllcyBvdWdodCB0byBoYXZlIGJlZW4gdGFrZW4gYXQgdGhlIHRpbWUsIHNvIHRoYXQgaGUgY291bGQgbm90IGhhdmUgZGVjZWl2ZWQgdXMgZXZlbiBpZiBoZSBoYWQgd2FudGVkIHRvIGRvIHNvLiBJbiByZXBseSB0byB0aGF0LCBsaXN0ZW4gdG8gd29yZHMgd2hpY2ggSSBuZXZlciBzaG91bGQgaGF2ZSBzcG9rZW4gaW4gdGhpcyBtYW4ncyBwcmVzZW5jZSBpZiB5b3UgaGFkIG5vdCBzZWVtZWQgdG8gbWUgdXR0ZXJseSBzZW5zZWxlc3PigJRvciBhdCBsZWFzdCBleGNlZWRpbmdseSB0aGFua2xlc3MgdG93YXJkIG1lLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5SZWNvbGxlY3QgaW4gd2hhdCBzb3J0IG9mIHRyb3VibGVzIHlvdSB0aGVuIGZvdW5kIHlvdXJzZWx2ZXMsIHRyb3VibGVzIG91dCBvZiB3aGljaCBJIGRlbGl2ZXJlZCB5b3Ugd2hlbiBJIGJyb3VnaHQgeW91IHRvIFNldXRoZXMuIERpZCB5b3Ugbm90IGdvIHRvIFBlcmludGh1cywgYW5kIGRpZCBub3QgQXJpc3RhcmNodXMgdGhlIExhY2VkYWVtb25pYW4gZm9yYmlkIHlvdXIgZW50ZXJpbmcgYW5kIHNodXQgdGhlIGdhdGVzIGFnYWluc3QgeW91PyBTbyB5b3UgZW5jYW1wZWQgb3V0c2lkZSwgdW5kZXIgdGhlIHNreSwgdGhvdWdoIGl0IHdhcyBtaWR3aW50ZXIsIGFuZCB5b3UgZ290IHlvdXIgcHJvdmlzaW9ucyBieSBwdXJjaGFzZSBhdCBhIG1hcmtldCwgdGhvdWdoIHNjYW50eSB3ZXJlIHRoZSBzdXBwbGllcyB5b3Ugc2F3IG9mZmVyZWQgZm9yIHNhbGUgYW5kIHNjYW50eSB0aGUgbWVhbnMgeW91IGhhZCB3aXRoIHdoaWNoIHRvIGJ1eTsKPC90cmFuc2xhdGlvbj4="
translation['7.6.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz55ZXQgeW91IHdlcmUgY29tcGVsbGVkIHRvIHJlbWFpbiB1cG9uIHRoZSBUaHJhY2lhbiBjb2FzdCwgZm9yIG92ZXIgYWdhaW5zdCB5b3UgbGF5IHRyaXJlbWVzIHRoYXQgcHJldmVudGVkIHlvdXIgY3Jvc3NpbmcgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPjsgYW5kIHJlbWFpbmluZyB0aGVyZSwgeW91IHdlcmUgb2YgbmVjZXNzaXR5IGluIGEgaG9zdGlsZSBjb3VudHJ5LCB3aGVyZSB0aGVyZSB3ZXJlIG1hbnkgaG9yc2VtZW4gb3Bwb3NlZCB0byB5b3UgYW5kIG1hbnkgcGVsdGFzdHM7CjwvdHJhbnNsYXRpb24+"
translation['7.6.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5hcyBmb3Igb3Vyc2VsdmVzLCB3ZSBoYWQgYSBmb3JjZSBvZiBob3BsaXRlcyB0byBiZSBzdXJlLCB3aXRoIHdoaWNoLCBpbiBjYXNlIHdlIHdlbnQgaW4gYSBib2R5IGFnYWluc3QgdGhlIHZpbGxhZ2VzLCB3ZSBtaWdodCBwZXJoYXBzIGhhdmUgYmVlbiBhYmxlIHRvIG9idGFpbiBmb29kLCB0aG91Z2ggYnkgbm8gbWVhbnMgYW4gYWJ1bmRhbnQgc3VwcGx5LCBidXQgYW55IGZvcmNlIHdpdGggd2hpY2ggd2UgY291bGQgaGF2ZSBwdXJzdWVkIGFuZCBjYXB0dXJlZCBlaXRoZXIgc2xhdmVzIG9yIGNhdHRsZSB3ZSBoYWQgbm90OyBmb3IgSSBoYWQgZm91bmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiB1cG9uIGhpcyByZXR1cm4gdG8gdGhlIGFybXkuIERpdmlzaW9uIG9mIGNhdmFscnkgYW5kIHBlbHRhc3RzIGhhZCBleGlzdGVkIGR1cmluZyB0aGUgcmV0cmVhdCwgYW5kIGl0IHdvdWxkIHNlZW0gZnJvbSB0aGUgcHJlc2VudCBwYXNzYWdlIHRoYXQgdGhleSB3ZXJlIG5vdCBicm9rZW4gdXAgdGlsbCBhZnRlciBYZW5vcGhvbiBzZXQgc2FpbCBmb3IgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+ICg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDcuMi41IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDcuMi41PC9iaWJsPiwgOCkuPC9ub3RlPiBubyBkaXZpc2lvbiBlaXRoZXIgb2YgY2F2YWxyeSBvciBvZiBwZWx0YXN0cyBpbiBleGlzdGVuY2UgYW55IGxvbmdlciBhbW9uZyB5b3UuCjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiAoPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjIuNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA3LjIuNTwvYmlibD4sIDgpLjwvdHJhbnNsYXRpb24+"
translation['7.6.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IHdoZW4geW91IHdlcmUgaW4gc3VjaCBzdHJhaXRzLCBpZiBJIGhhZCBvYnRhaW5lZCBmb3IgeW91LCB3aXRob3V0IGRlbWFuZGluZyBpbnRvIHRoZSBiYXJnYWluIGFueSBwYXkgd2hhdHNvZXZlciwgc2ltcGx5IGFuIGFsbGlhbmNlIHdpdGggU2V1dGhlcywgd2hvIHBvc3Nlc3NlZCBib3RoIHRoZSBjYXZhbHJ5IGFuZCB0aGUgcGVsdGFzdHMgdGhhdCB5b3Ugd2VyZSBpbiBuZWVkIG9mLCB3b3VsZCB5b3UgaGF2ZSB0aG91Z2h0IHRoYXQgSSBoYWQgY2FycmllZCB0aHJvdWdoIGEgYmFkIHBsYW4gb24geW91ciBiZWhhbGY/CjwvdHJhbnNsYXRpb24+"
translation['7.6.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgeW91IHJlbWVtYmVyLCBJIGltYWdpbmUsIHRoYXQgd2hlbiB5b3UgaGFkIGpvaW5lZCBmb3JjZXMgd2l0aCB0aGVzZSB0cm9vcHMsIHlvdSBub3Qgb25seSBmb3VuZCBmb29kIGluIGdyZWF0ZXIgYWJ1bmRhbmNlIGluIHRoZSB2aWxsYWdlcywgZm9yIHRoZSByZWFzb24gdGhhdCB0aGUgVGhyYWNpYW5zIHdlcmUgY29tcGVsbGVkIHRvIGZsZWUgaW4gZ3JlYXRlciBoYXN0ZSwgYnV0IHlvdSBhbHNvIGdvdCBhIGxhcmdlciBzaGFyZSBvZiBjYXR0bGUgYW5kIGNhcHRpdmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5JbiBmYWN0LCB3ZSBuZXZlciBzYXcgdGhlIGZhY2Ugb2YgYW4gZW5lbXkgYWdhaW4gYWZ0ZXIgdGhlIGNhdmFscnkgaGFkIGpvaW5lZCB1cywgd2hlcmVhcyB1cCB0byB0aGF0IHRpbWUgdGhlIGVuZW15IGhhZCBiZWVuIGZvbGxvd2luZyBib2xkbHkgYXQgb3VyIGhlZWxzIHdpdGggaG9yc2VtZW4gYW5kIHBlbHRhc3RzIGFuZCBoYWQgcHJldmVudGVkIHVzIGZyb20gc2NhdHRlcmluZyBpbiBhbnkgZGlyZWN0aW9uIGluIHNtYWxsIHBhcnRpZXMgYW5kIHRodXMgc2VjdXJpbmcgYSBncmVhdGVyIGFidW5kYW5jZSBvZiBwcm92aXNpb25zLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaWYsIHRoZW4sIHRoZSBtYW4gd2hvIGFpZGVkIGluIHByb3ZpZGluZyB5b3UgdGhpcyBzZWN1cml0eSBkaWQgbm90IGdpdmUgeW91LCBiZXNpZGVzLCB2ZXJ5IGdlbmVyb3VzIHBheSBmb3IgeW91ciBzZWN1cml0eSwgaXMgdGhhdCBzdWNoIGEgZHJlYWRmdWwgbWlzZm9ydHVuZT8gYW5kIGRvIHlvdSB0aGluayB0aGF0IG9uIHRoYXQgYWNjb3VudCB5b3UgY2Fubm90IHBvc3NpYmx5IGxldCBtZSBnbyBhbGl2ZT8KPC90cmFuc2xhdGlvbj4="
translation['7.6.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQXMgbWF0dGVycyBzdGFuZCBub3csIHdoYXQgaXMgeW91ciBzaXR1YXRpb24gaW4gZGVwYXJ0aW5nIGZyb20gaGVyZT8gSGF2ZSB5b3Ugbm90IHBhc3NlZCB0aGUgd2ludGVyIGFtaWQgYW4gYWJ1bmRhbmNlIG9mIHByb3Zpc2lvbnMsIGFuZCwgd2hhdGV2ZXIgeW91IGhhdmUgcmVjZWl2ZWQgZnJvbSBTZXV0aGVzLCBpcyBpdCBub3QgcmVhbGx5IHNvIG11Y2ggY2xlYXIgZ2Fpbj8gRm9yIGl0IHdhcyB0aGUgZW5lbXkncyBwb3NzZXNzaW9ucyB0aGF0IHlvdSBoYXZlIGJlZW4gY29uc3VtaW5nLiBBbmQgd2hpbGUgZW5qb3lpbmcgc3VjaCBmb3J0dW5lLCB5b3UgaGF2ZSBub3QgaGFkIHRvIHNlZSBhbnkgb2YgeW91ciBudW1iZXIgc2xhaW4gbm9yIGhhdmUgeW91IGxvc3QgYW55IG1lbiBhbGl2ZS4KPC90cmFuc2xhdGlvbj4="
translation['7.6.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaWYgYW55IGdsb3Jpb3VzIGRlZWQgd2FzIGVhcmxpZXIgcGVyZm9ybWVkIGJ5IHlvdSBhZ2FpbnN0IHRoZSBiYXJiYXJpYW5zIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwMDQiPkFzaWE8L3BsYWNlTmFtZT4sIGhhdmUgeW91IG5vdCBhdCB0aGUgc2FtZSB0aW1lIGtlcHQgdGhhdCBzZWN1cmUgYW5kIGxpa2V3aXNlIGdhaW5lZCBvdGhlciBnbG9yeSBiZXNpZGVzIGluIHRoZSBwcmVzZW50LCBieSB2YW5xdWlzaGluZywgaW4gYWRkaXRpb24sIHRoZSBUaHJhY2lhbnMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwMyI+RXVyb3BlPC9wbGFjZU5hbWU+IGFnYWluc3Qgd2hvbSB5b3UgdG9vayB0aGUgZmllbGQ/IEZvciBteSBwYXJ0LCBJIGFzc2VydCB0aGF0IGZvciB0aGUgdmVyeSBhY3RzIG9uIGFjY291bnQgb2Ygd2hpY2ggeW91IG5vdyBmZWVsIGFuZ3J5IHRvd2FyZCBtZSwgeW91IHNob3VsZCwgaW4gYWxsIGp1c3RpY2UsIGZlZWwgZ3JhdGVmdWwgdG8gdGhlIGdvZHMsIGNvdW50aW5nIHRoZW0gYXMgYmxlc3NpbmdzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcU28gbXVjaCwgdGhlbiwgZm9yIHlvdXIgc2l0dWF0aW9uLiBBbmQgbm93LCBpbiB0aGUgbmFtZSBvZiB0aGUgZ29kcywgY29tZSwgYW5kIGNvbnNpZGVyIGhvdyB0aGUgY2FzZSBzdGFuZHMgd2l0aCBtZS4gQXQgdGhlIHRpbWUgd2hlbiBJIGZpcnN0IHNldCBvdXQgdG8gcmV0dXJuIGhvbWUsIEkgcG9zc2Vzc2VkLCBhcyBJIGRlcGFydGVkLCBhYnVuZGFudCBwcmFpc2UgaW4geW91ciBleWVzLCBhbmQgSSBhbHNvIHBvc3Nlc3NlZCwgdGhyb3VnaCB5b3UsIGZhaXIgZmFtZSBpbiB0aGUgZXllcyBvZiB0aGUgR3JlZWtzIGF0IGxhcmdlLiBBbmQgSSB3YXMgdHJ1c3RlZCBieSB0aGUgTGFjZWRhZW1vbmlhbnMsIGZvciBvdGhlcndpc2UgdGhleSB3b3VsZCBub3QgaGF2ZSBzZW50IG1lIGJhY2sgdG8geW91IGFnYWluLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3csIG9uIHRoZSBvdGhlciBoYW5kLCBJIGFtIGdvaW5nIGF3YXkgdHJhZHVjZWQgYnkgeW91IGJlZm9yZSB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIGhhdGVkIG9uIHlvdXIgYWNjb3VudCBieSBTZXV0aGVzLCB0aGUgbWFuIHRocm91Z2ggd2hvbSBJIGhvcGVkIHRvIHNlY3VyZSwgYnkgcmVuZGVyaW5nIGhpbSBnb29kIHNlcnZpY2Ugd2l0aCB5b3VyIGhlbHAsIGEgZmFpciBwbGFjZSBvZiByZWZ1Z2UgZm9yIG15c2VsZiBhbmQgbXkgY2hpbGRyZW4sIGluIGNhc2UgY2hpbGRyZW4gc2hvdWxkIGV2ZXIgYmUgYm9ybiB0byBtZS4KPC90cmFuc2xhdGlvbj4="
translation['7.6.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgeW91LCBmb3Igd2hvc2Ugc2FrZSBJIGhhdmUgaW5jdXJyZWQgbW9zdCBoYXRyZWQsIGFuZCB0aGUgaGF0cmVkIG9mIG1lbiBmYXIgc3Ryb25nZXIgdGhhbiBJIGFtLCBmb3Igd2hvc2Ugc2FrZSBJIGhhdmUgbm90IGV2ZW4gdG8gdGhpcyBtb21lbnQgY2Vhc2VkIHN0cml2aW5nIHRvIGFjY29tcGxpc2ggd2hhdGV2ZXIgZ29vZCBJIG1heSwgaG9sZCBzdWNoIGFuIG9waW5pb24gb2YgbWUgYXMgdGhpcyEKPC90cmFuc2xhdGlvbj4="
translation['7.6.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWW91IGhvbGQgbWUgaW4geW91ciBwb3dlciwgdGhlbiwgYW5kIG5vdCBhcyBhIGNhcHRpdmUgdGhhdCB5b3UgaGF2ZSB0YWtlbiBpbiBmbGlnaHQgb3IgYXMgYSBydW5hd2F5IHNsYXZlOyBhbmQgaWYgeW91IGRvIHdoYXQgeW91IGFyZSBwcm9wb3NpbmcsIGJlIHN1cmUgdGhhdCB5b3Ugd2lsbCBoYXZlIHNsYWluIGEgbWFuIHdobyBoYXMgcGFzc2VkIG1hbnkgc2xlZXBsZXNzIG5pZ2h0cyBmb3IgeW91ciBzYWtlLCB3aG8gaGFzIGVuZHVyZWQgbWFueSB0b2lscyBhbmQgZGFuZ2VycyB3aXRoIHlvdSwgYm90aCBpbiBoaXMgdHVybiBhbmQgb3V0IG9mIGhpcyB0dXJuLCB3aG8gaGFzIGFsc28sIGJ5IHRoZSBncmFjaW91c25lc3Mgb2YgdGhlIGdvZHMsIHNldCB1cCB3aXRoIHlvdSBtYW55IHRyb3BoaWVzIG9mIHZpY3Rvcnkgb3ZlciB0aGUgYmFyYmFyaWFucywgYW5kIHdobywgaW4gb3JkZXIgdG8gcHJldmVudCB5b3VyIGJlY29taW5nIGVuZW1pZXMgdG8gYW55IG9uZSBhbW9uZyB0aGUgR3JlZWtzLCBoYXMgZXhlcnRlZCBoaW1zZWxmIHRvIHRoZSB2ZXJ5IHV0bW9zdCBvZiBoaXMgcG93ZXIgaW4gb3Bwb3NpdGlvbiB0byB5b3UuCjwvdHJhbnNsYXRpb24+"
translation['7.6.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5JbiBmYWN0LCB5b3UgYXJlIG5vdyBmcmVlIHRvIGpvdXJuZXkgaW4gc2VjdXJpdHkgd2hpdGhlcnNvZXZlciB5b3UgbWF5IGNob29zZSwgd2hldGhlciBieSBsYW5kIG9yIGJ5IHNlYS4gQW5kIHlvdSwgYXQgdGhlIG1vbWVudCB3aGVuIHN1Y2ggYWJ1bmRhbnQgZnJlZWRvbSByZXZlYWxzIGl0c2VsZiB0byB5b3UsIHdoZW4geW91IGFyZSBzYWlsaW5nIHRvIHRoZSB2ZXJ5IHBsYWNlIHdoZXJlIHlvdSBoYXZlIGxvbmcgYmVlbiBlYWdlciB0byBnbyBhbmQgdGhlIG1pZ2h0aWVzdCBhcmUgc3VpbmcgZm9yIHlvdXIgYWlkLCB3aGVuIHBheSBpcyB3aXRoaW4gc2lnaHQgYW5kIHRoZSBMYWNlZGFlbW9uaWFucywgd2hvIGFyZSBkZWVtZWQgdGhlIG1vc3QgcG93ZXJmdWwgbGVhZGVycywgaGF2ZSBjb21lIHRvIGxlYWQgeW914oCUZG8geW91LCBJIHNheSwgdGhpbmsgdGhhdCBub3cgaXMgdGhlIHByb3BlciB0aW1lIHRvIHB1dCBtZSB0byBkZWF0aCB3aXRoIGFsbCBzcGVlZD8KPC90cmFuc2xhdGlvbj4="
translation['7.6.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgbm90IHNvLCBzdXJlbHksIGluIHRoZSBkYXlzIHdoZW4gd2Ugd2VyZSBpbiBzdHJhaXRzLCBPIHlvdSB3aG8gcmVtZW1iZXIgYmV0dGVyIHRoYW4gYWxsIG90aGVyIG1lbjsgbmF5LCB0aGVuIHlvdSBjYWxsZWQgbWUgYGZhdGhlciwnIGFuZCB5b3UgcHJvbWlzZWQgdG8ga2VlcCBtZSBmb3IgZXZlciBpbiBtZW1vcnkgYXMgYSBiZW5lZmFjdG9yISBOb3QgYnkgYW55IG1lYW5zLCBob3dldmVyLCBhcmUgdGhlc2UgbWVuLCB3aG8gaGF2ZSBub3cgY29tZSBhZnRlciB5b3UsIHdhbnRpbmcgaW4ganVkZ21lbnQ7IHRoZXJlZm9yZSwgSSBpbWFnaW5lLCB0aGV5IGFsc28gdGhpbmsgbm9uZSB0aGUgYmV0dGVyIG9mIHlvdSBmb3IgYmVoYXZpbmcgaW4gdGhpcyBtYW5uZXIgdG93YXJkcyBtZS7igJ0gV2l0aCB0aGVzZSB3b3JkcyBoZSBjZWFzZWQgc3BlYWtpbmcuCjwvdHJhbnNsYXRpb24+"
translation['7.6.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBDaGFybWludXMgdGhlIExhY2VkYWVtb25pYW4gYXJvc2UgYW5kIHNhaWQ6IOKAnE5vLCBieSB0aGUgdHdpbiBnb2RzOyBJLCBhdCBhbnkgcmF0ZSwgdGhpbmsgeW91IGFyZSB1bmp1c3QgaW4gYmVpbmcgYW5ncnkgd2l0aCB0aGlzIG1hbjsgZm9yIEkgY2FuIGJlYXIgd2l0bmVzcyBmb3IgaGltIG15c2VsZi4gV2hlbiBJIGFuZCBQb2x5bmljdXMgYXNrZWQgU2V1dGhlcyBhYm91dCBYZW5vcGhvbiwgdG8gbGVhcm4gd2hhdCBzb3J0IG9mIGEgbWFuIGhlIHdhcywgU2V1dGhlcyBoYWQgbm8gZmF1bHQgdG8gZmluZCB3aXRoIGhpbSBzYXZlIHRoYXQsIGFzIGhlIHNhaWQsIGhlIHdhcyBgdG9vIGdyZWF0IGEgZnJpZW5kIG9mIHRoZSBzb2xkaWVycywnIGFuZCBvbiB0aGF0IGFjY291bnQsIGhlIGFkZGVkLCB0aGluZ3Mgd2VudCB0aGUgd29yc2UgZm9yIGhpbSwgYm90aCBzbyBmYXIgYXMgd2UgdGhlIExhY2VkYWVtb25pYW5zIHdlcmUgY29uY2VybmVkIGFuZCBvbiBoaXMgb3duIGFjY291bnQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.6.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciBoaW0gRXVyeWxvY2h1cyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEx1c2kiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEx1c2kiPkx1c2k8L3BsYWNlTmFtZT4gcm9zZSBhbmQgc2FpZDog4oCcWWVzLCBhbmQgSSBiZWxpZXZlLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEwNjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMTA2NSI+TGFjZWRhZW1vbjwvcGxhY2VOYW1lPiwgdGhhdCB5b3Ugb3VnaHQgdG8gYXNzdW1lIGxlYWRlcnNoaXAgb3ZlciB1cyBpbiB0aGlzIGVudGVycHJpc2UgZmlyc3Qgb2YgYWxsLCBpbiBleGFjdGluZyBvdXIgcGF5IGZyb20gU2V1dGhlcyB3aGV0aGVyIGhlIHdpbGwgb3Igbm8sIGFuZCB0aGF0IHlvdSBzaG91bGQgbm90IHRha2UgdXMgYXdheSB0aWxsIHRoYXQgaXMgZG9uZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.6.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgUG9seWNyYXRlcyB0aGUgQXRoZW5pYW4gc2FpZCwgYXQgdGhlIGluc3RpZ2F0aW9uIG9mIFhlbm9waG9uOiDigJxMb29rIHlvdSwgZmVsbG93IHNvbGRpZXJzLCBJIHNlZSBIZXJhY2xlaWRlcyBhbHNvIHByZXNlbnQgaGVyZSwgdGhlIG1hbiB3aG8gdG9vayBpbiBjaGFyZ2UgdGhlIHByb3BlcnR5IHdoaWNoIHdlIGhhZCB3b24gYnkgb3VyIHRvaWwsIGFuZCB0aGVuIHNvbGQgaXQsIGFuZCBkaWQgbm90IHBheSBvdmVyIHRoZSBwcm9jZWVkcyBlaXRoZXIgdG8gU2V1dGhlcyBvciB0byB1cywgYnV0IHN0b2xlIHRoZSBtb25leSwgYW5kIGlzIGtlZXBpbmcgaXQgZm9yIGhpbXNlbGYuIElmIHdlIGFyZSB3aXNlLCB0aGVyZWZvcmUsIHdlIHNoYWxsIGxheSBob2xkIG9mIGhpbTsgZm9yIHRoaXMgZmVsbG93LOKAnSBzYWlkIGhlLCDigJxpcyBubyBUaHJhY2lhbiwgYnV0IGEgR3JlZWssIGFuZCB5ZXQgaGUgaXMgd3JvbmdpbmcgR3JlZWtzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXBvbiBoZWFyaW5nIHRoZXNlIHdvcmRzIEhlcmFjbGVpZGVzIHdhcyBleGNlZWRpbmdseSB0ZXJyaWZpZWQ7IGFuZCBnb2luZyB1cCB0byBTZXV0aGVzLCBoZSBzYWlkOiDigJxBbmQgaWYgd2UgYXJlIHdpc2UsIHdlIHNoYWxsIGdvIGF3YXkgZnJvbSBoZXJlIGFuZCBnZXQgb3V0IG9mIHRoZSBwb3dlciBvZiB0aGVzZSBmZWxsb3dzLuKAnSBTbyB0aGV5IG1vdW50ZWQgdGhlaXIgaG9yc2VzIGFuZCB3ZW50IHJpZGluZyBvZmYgdG8gdGhlaXIgb3duIGNhbXAuCjwvdHJhbnNsYXRpb24+"
translation['7.6.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYWZ0ZXIgdGhhdCBTZXV0aGVzIHNlbnQgQWJyb3plbG1lcywgaGlzIGludGVycHJldGVyLCB0byBYZW5vcGhvbiBhbmQgdXJnZWQgaGltIHRvIHN0YXkgYmVoaW5kIHdpdGggaGltIHdpdGggYSBmb3JjZSBvZiBhIHRob3VzYW5kIGhvcGxpdGVzLCBwcm9taXNpbmcgdGhhdCBoZSB3b3VsZCBkZWxpdmVyIG92ZXIgdG8gaGltIG5vdCBvbmx5IHRoZSBmb3J0cmVzc2VzIHVwb24gdGhlIGNvYXN0LCBidXQgYWxzbyB0aGUgb3RoZXIgdGhpbmdzIHdoaWNoIGhlIGhhZCBwcm9taXNlZC4gSGUgbGlrZXdpc2Ugc2FpZCwgbWFraW5nIGEgZ3JlYXQgc2VjcmV0IG9mIGl0LCB0aGF0IGhlIGhhZCBoZWFyZCBmcm9tIFBvbHluaWN1cyB0aGF0IGlmIFhlbm9waG9uIHNob3VsZCBmYWxsIGludG8gdGhlIGhhbmRzIG9mIHRoZSBMYWNlZGFlbW9uaWFucywgaGUgd291bGQgY2VydGFpbmx5IGJlIHB1dCB0byBkZWF0aCBieSBUaGlicm9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.6.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz5NYW55IG90aGVyIHBlb3BsZSBhbHNvIHNlbnQgWGVub3Bob24gdGhpcyBtZXNzYWdlLCBzYXlpbmcgdGhhdCBoZSBoYWQgYmVlbiB0cmFkdWNlZCBhbmQgd291bGQgYmV0dGVyIGJlIG9uIGhpcyBndWFyZC4gQW5kIGhlLCBoZWFyaW5nIHRoZXNlIHJlcG9ydHMsIHRvb2sgdHdvIHZpY3RpbXMgYW5kIHByb2NlZWRlZCB0byBvZmZlciBzYWNyaWZpY2UgdG8gWmV1cyB0aGUgS2luZywgdG8gbGVhcm4gd2hldGhlciBpdCB3YXMgYmV0dGVyIGFuZCBtb3JlIHByb2ZpdGFibGUgZm9yIGhpbSB0byByZW1haW4gd2l0aCBTZXV0aGVzIG9uIHRoZSBjb25kaXRpb25zIHRoYXQgU2V1dGhlcyBwcm9wb3NlZCwgb3IgdG8gZGVwYXJ0IHdpdGggdGhlIGFybXkuIFRoZSBnb2QgZGlyZWN0ZWQgaGltIHRvIGRlcGFydC4KPC90cmFuc2xhdGlvbj4="
translation['7.7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGF0IFNldXRoZXMgZW5jYW1wZWQgYXQgYSBncmVhdGVyIGRpc3RhbmNlIGF3YXksIHdoaWxlIHRoZSBHcmVla3MgdG9vayB1cCBxdWFydGVycyBpbiB2aWxsYWdlcyBmcm9tIHdoaWNoIHRoZXkgY291bGQgc2VjdXJlIHByb3Zpc2lvbnMgaW4gZ3JlYXRlc3QgYWJ1bmRhbmNlIGJlZm9yZSB0aGVpciBqb3VybmV5IHRvIHRoZSBjb2FzdC4gTm93IHRoZXNlIHZpbGxhZ2VzIGhhZCBiZWVuIGdpdmVuIGJ5IFNldXRoZXMgdG8gTWVkb3NhZGVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4sIHRoZXJlZm9yZSwgTWVkb3NhZGVzIHNhdyB0aGF0IHRoZSBzdXBwbGllcyBpbiB0aGUgdmlsbGFnZXMgd2VyZSBiZWluZyB1c2VkIHVwIGJ5IHRoZSBHcmVla3MsIGhlIHdhcyBhbmdyeTsgYW5kIHRha2luZyB3aXRoIGhpbSBhbiBPZHJ5c2lhbiB3aG8gd2FzIGV4Y2VlZGluZ2x5IHBvd2VyZnVsLCBmcm9tIGFtb25nIHRob3NlIHdobyBoYWQgY29tZSBkb3duIGZyb20gdGhlIGludGVyaW9yLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjQuMjEiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNy40LjIxPC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjUuMTUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNy41LjE1PC9iaWJsPi48L25vdGU+IGFuZCBsaWtld2lzZSBhYm91dCB0aGlydHkgaG9yc2VtZW4sIGhlIGNhbWUgYW5kIHN1bW1vbmVkIFhlbm9waG9uIGZvcnRoIGZyb20gdGhlIEdyZWVrIGNhbXAuIFNvIFhlbm9waG9uIHRvb2sgY2VydGFpbiBvZiB0aGUgY2FwdGFpbnMgYXMgd2VsbCBhcyBvdGhlcnMgd2hvIHdlcmUgZml0IG1lbiBmb3IgdGhlIHB1cnBvc2UsIGFuZCBjYW1lIHRvIG1lZXQgaGltLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDcuNC4yMSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA3LjQuMjE8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDcuNS4xNSIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA3LjUuMTU8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['7.7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gTWVkb3NhZGVzIHNhaWQ6IOKAnFlvdSBHcmVla3MgYXJlIGNvbW1pdHRpbmcgYSB3cm9uZywgWGVub3Bob24sIGluIHBsdW5kZXJpbmcgb3VyIHZpbGxhZ2VzLiBUaGVyZWZvcmUgd2UgZ2l2ZSB5b3UgcHVibGljIHdhcm5pbmcsIEkgb24gYmVoYWxmIG9mIFNldXRoZXMsIGFuZCB0aGlzIG1hbiB3aG8gaGFzIGNvbWUgZnJvbSBNZWRvY3VzLCB3aG8gaXMga2luZyBpbiB0aGUgaW50ZXJpb3IsIHRvIGRlcGFydCBmcm9tIHRoZSBjb3VudHJ5OyBhbmQgaWYgeW91IGZhaWwgdG8gZGVwYXJ0LCB3ZSBzaGFsbCBub3QgbGVhdmUgeW91IGEgZnJlZSBoYW5kLCBidXQgaW4gY2FzZSB5b3UgY29udGludWUgdG8gZG8gaGFybSB0byBvdXIgdGVycml0b3J5LCB3ZSBzaGFsbCBkZWZlbmQgb3Vyc2VsdmVzIGFnYWluc3QgeW91IGFzIGFnYWluc3QgZW5lbWllcy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5VcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgWGVub3Bob24gc2FpZDog4oCcQXMgZm9yIHlvdSwgd2hlbiB5b3Ugc2F5IHN1Y2ggdGhpbmdzIGFzIHRoZXNlIGl0IGlzIHBhaW5mdWwgZXZlbiB0byBnaXZlIHlvdSBhbiBhbnN3ZXI7IHlldCBmb3IgdGhlIHNha2Ugb2YgdGhpcyB5b3VuZyBtYW4gSSB3aWxsIHNwZWFrLCB0aGF0IGhlIG1heSBrbm93IHdoYXQgc29ydCBvZiBwZW9wbGUgeW91IGFyZSBhbmQgd2hhdCB3ZSBhcmUuCjwvdHJhbnNsYXRpb24+"
translation['7.7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkZvciB3ZSzigJ0gaGUgd2VudCBvbiwg4oCcYmVmb3JlIHdlIGJlY2FtZSBmcmllbmRzIG9mIHlvdXJzLCBtYXJjaGVkIHdoaXRoZXJzb2V2ZXIgd2UgY2hvc2UgdGhyb3VnaCB0aGlzIGNvdW50cnksIHBsdW5kZXJpbmcgd2hlcmUgd2Ugd2lzaGVkIGFuZCBidXJuaW5nIHdoZXJlIHdlIHdpc2hlZDsKPC90cmFuc2xhdGlvbj4="
translation['7.7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPmFuZCB3aGVuZXZlciB5b3UgY2FtZSB0byB1cyBhcyBlbnZveSwgeW91IHVzZWQgdGhlbiB0byBiaXZvdWFjIHdpdGggdXMgd2l0aG91dCBmZWFyIG9mIGFueSBlbmVteTsgeW91ciBwZW9wbGUsIG9uIHRoZSBvdGhlciBoYW5kLCBuZXZlciBjYW1lIGludG8gdGhpcyBjb3VudHJ5LCBvciBpZiBhdCBhbnkgdGltZSB5b3UgZGlkIGNvbWUsIHlvdSB3b3VsZCBiaXZvdWFjIGFzIGluIHRoZSBsYW5kIG9mIG1lbiBzdHJvbmdlciB0aGFuIHlvdXJzZWx2ZXMsIGtlZXBpbmcgeW91ciBob3JzZXMgYWxsIGJyaWRsZWQuCjwvdHJhbnNsYXRpb24+"
translation['7.7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBhZnRlciB5b3UgaGFkIG9uY2UgYmVjb21lIGZyaWVuZHMgb2Ygb3VycyBhbmQgbm93IHRocm91Z2ggdXMsIHdpdGggdGhlIGFpZCBvZiB0aGUgZ29kcywgZW5qb3kgcG9zc2Vzc2lvbiBvZiB0aGlzIGxhbmQsIHlvdSBzZWVrIHRvIGRyaXZlIHVzIGZvcnRoLCBvdXQgb2YgdGhpcyB2ZXJ5IGxhbmQgdGhhdCB5b3UgcmVjZWl2ZWQgZnJvbSB1cywgd2hvIGhlbGQgaXQgYnkgcmlnaHQgb2Ygc3RyZW5ndGg7IGZvciBhcyB5b3Uga25vdyB5b3Vyc2VsZiwgdGhlIGVuZW15IHdlcmUgbm90IGFibGUgdG8gZHJpdmUgdXMgb3V0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB5ZXQsIHNvIGZhciBmcm9tIGRlZW1pbmcgaXQgcHJvcGVyIHRvIHNwZWVkIHVzIG9uIG91ciB3YXkgYWZ0ZXIgYmVzdG93aW5nIGdpZnRzIHVwb24gdXMgYW5kIGRvaW5nIHVzIGtpbmRuZXNzZXMgaW4gcmV0dXJuIGZvciB0aGUgYmVuZWZpdHMgeW91IGhhdmUgcmVjZWl2ZWQgYXQgb3VyIGhhbmRzLCB5b3Ugd2lsbCBub3QsIHNvIGZhciBhcyB5b3UgaGF2ZSB0aGUgcG93ZXIgdG8gcHJldmVudCBpdCwgYWxsb3cgdXMgYXQgdGhlIG1vbWVudCBvZiBvdXIgZGVwYXJ0dXJlIGV2ZW4gdG8gYml2b3VhYyBpbiB0aGUgY291bnRyeS4KPC90cmFuc2xhdGlvbj4="
translation['7.7.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBpbiB1dHRlcmluZyB0aGVzZSB3b3JkcyB5b3UgYXJlIG5vdCBhc2hhbWVkIGVpdGhlciBiZWZvcmUgdGhlIGdvZHMgb3IgYmVmb3JlIHRoaXMgT2RyeXNpYW4sIHdobyBub3cgc2VlcyB5b3UgcG9zc2Vzc2VkIG9mIHJpY2hlcywgd2hlcmVhcyBiZWZvcmUgeW91IGJlY2FtZSBvdXIgZnJpZW5kIHlvdSBnb3QgeW91ciBsaXZpbmcsIGFzIHlvdSBzYWlkIHlvdXJzZWxmLCBmcm9tIHBpbGxhZ2luZy4KPC90cmFuc2xhdGlvbj4="
translation['7.7.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz7igJxCdXQgcmVhbGx5LCB3aHkgZG8geW91LOKAnSBoZSBhZGRlZCwg4oCcYWRkcmVzcyB0aGVzZSB3b3JkcyB0byBtZT8gRm9yIEkgYW0gbm8gbG9uZ2VyIGluIGNvbW1hbmQsIGJ1dCByYXRoZXIgdGhlIExhY2VkYWVtb25pYW5zOyBhbmQgaXQgd2FzIHRvIHRoZW0gdGhhdCB5b3UgeW91cnNlbHZlcyBkZWxpdmVyZWQgb3ZlciB0aGUgYXJteSB0byBiZSBsZWQgYXdheSwgYW5kIHRoYXQsIHlvdSBtb3N0IGlsbC1tYW5uZXJlZCBvZiBtZW4sIHdpdGhvdXQgc28gbXVjaCBhcyBpbnZpdGluZyBtZSB0byBiZSBwcmVzZW50LCBzbyB0aGF0IGV2ZW4gYXMgSSBoYWQgaW5jdXJyZWQgdGhlaXIgaGF0cmVkIGF0IHRoZSB0aW1lIHdoZW4gSSBsZWQgdGhlIGFybXkgdG8geW91LCBzbyBJIG1pZ2h0IG5vdyB3aW4gdGhlaXIgZmF2b3VyIGJ5IGdpdmluZyBpdCBiYWNrLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgT2RyeXNpYW4gaGVhcmQgdGhpcywgaGUgc2FpZDog4oCcQXMgZm9yIG1lLCBNZWRvc2FkZXMsIEkgc2luayBiZW5lYXRoIHRoZSBlYXJ0aCBmb3Igc2hhbWUgYXQgdGhpcyB3aGljaCBJIGhlYXIuIElmIEkgaGFkIHVuZGVyc3Rvb2QgdGhlIG1hdHRlciBiZWZvcmUsIEkgc2hvdWxkIG5vdCBldmVuIGhhdmUgYWNjb21wYW5pZWQgeW91OyBhbmQgbm93IEkgYW0gZ29pbmcgYmFjay4gRm9yIE1lZG9jdXMsIHRoZSBraW5nLCB3b3VsZCBuZXZlciBjb21tZW5kIG1lIGlmIEkgc2hvdWxkIGRyaXZlIGZvcnRoIGhpcyBiZW5lZmFjdG9ycy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.7.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5XaXRoIHRoZXNlIHdvcmRzIGhlIG1vdW50ZWQgaGlzIGhvcnNlIGFuZCByb2RlIGF3YXksIGFuZCB3aXRoIGhpbSB3ZW50IHRoZSBob3JzZW1lbiBhbHNvLCBleGNlcHQgZm91ciBvciBmaXZlLiBCdXQgTWVkb3NhZGVzLCBzdGlsbCBkaXN0cmVzc2VkIGJ5IHRoZSBwbHVuZGVyaW5nIG9mIHRoZSBjb3VudHJ5LCB1cmdlZCBYZW5vcGhvbiB0byBzdW1tb24gdGhlIHR3byBMYWNlZGFlbW9uaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['7.7.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgWGVub3Bob24sIHRha2luZyB3aXRoIGhpbSB0aGUgYmVzdCBtZW4gaGUgaGFkLCB3ZW50IHRvIENoYXJtaW51cyBhbmQgUG9seW5pY3VzIGFuZCBzYWlkIHRoYXQgTWVkb3NhZGVzIHdhcyBzdW1tb25pbmcgdGhlbSBpbiBvcmRlciB0byBnaXZlIHRoZW0gdGhlIHNhbWUgd2FybmluZyBhcyBoZSBoYWQgYWxyZWFkeSBnaXZlbiBoaW0s4oCUdG8gZGVwYXJ0IGZyb20gdGhlIGNvdW50cnkuCjwvdHJhbnNsYXRpb24+"
translation['7.7.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz7igJxJIHNob3VsZCB0aGluaywgdGhlcmVmb3JlLOKAnSBoZSBjb250aW51ZWQsIOKAnHRoYXQgeW91IG1pZ2h0IHJlY292ZXIgZm9yIHRoZSBhcm15IHRoZSBwYXkgdGhhdCBpcyBkdWUgaWYgeW91IHNob3VsZCBzYXkgdGhhdCB0aGUgYXJteSBoYXMgcmVxdWVzdGVkIHlvdSB0byBhaWQgdGhlbSBpbiBleGFjdGluZyB0aGVpciBwYXkgZnJvbSBTZXV0aGVzIHdoZXRoZXIgaGUgd2lsbCBvciBubywgYW5kIHRoYXQgdGhlIHRyb29wcyBzYXkgdGhhdCB0aGV5IHdvdWxkIGZvbGxvdyB5b3UgZWFnZXJseSBpbiBjYXNlIHRoZXkgc2hvdWxkIG9idGFpbiBpdDsgYWxzbywgdGhhdCB0aGVpciB3b3JkcyBzZWVtIHRvIHlvdSBqdXN0LCBhbmQgdGhhdCB5b3UgcHJvbWlzZWQgdGhlbSBub3QgdG8gZGVwYXJ0IHVudGlsIHRoZSBzb2xkaWVycyBzaG91bGQgb2J0YWluIHRoZWlyIHJpZ2h0cy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.7.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGV5IGhhZCBoZWFyZCBoaW0sIHRoZSBMYWNvbmlhbnMgcmVwbGllZCB0aGF0IHRoZXkgd291bGQgbWFrZSBzdWNoIHN0YXRlbWVudHMsIGFkZGluZyBvdGhlcnMgYXMgZm9yY2VmdWwgYXMgdGhleSBjb3VsZCBtYWtlIHRoZW07IGFuZCBzdHJhaWdodHdheSB0aGV5IHNldCBmb3J0aCwgdGFraW5nIHdpdGggdGhlbSBhbGwgdGhlIGltcG9ydGFudCBtZW4gb2YgdGhlIGFybXkuIFVwb24gdGhlaXIgYXJyaXZhbCBDaGFybWludXMgc2FpZDog4oCcSWYgeW91IGhhdmUgYW55dGhpbmcgdG8gc2F5IHRvIHVzLCBNZWRvc2FkZXMsIHNheSBpdDsgaWYgbm90LCB3ZSBoYXZlIHNvbWV0aGluZyB0byBzYXkgdG8geW91LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgTWVkb3NhZGVzIHJlcGxpZWQsIHZlcnkgc3VibWlzc2l2ZWx5OiDigJxJIHNheSwgYW5kIFNldXRoZXMgYWxzbyBzYXlzIHRoZSBzYW1lLCB0aGF0IHdlIGFzayB0aGF0IHRob3NlIHdobyBoYXZlIGJlY29tZSBmcmllbmRzIG9mIG91cnMgc2hvdWxkIG5vdCBzdWZmZXIgaGFybSBhdCB5b3VyIGhhbmRzOyBmb3Igd2hhdGV2ZXIgaGFybSB5b3UgbWF5IGRvIHRvIHRoZW0sIHlvdSBhcmUgdGhlbiBhbmQgdGhlcmUgZG9pbmcgdG8gdXM7IGZvciB0aGV5IGFyZSBvdXJzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz7igJxBcyBmb3Igb3Vyc2VsdmVzLCB0aGVuLOKAnSBzYWlkIHRoZSBMYWNvbmlhbnMsIOKAnHdlIHNoYWxsIGRlcGFydCB3aGVuZXZlciB0aGUgbWVuIHdobyBvYnRhaW5lZCB0aGVzZSBwb3NzZXNzaW9ucyBmb3IgeW91LCBoYXZlIHJlY2VpdmVkIHRoZWlyIHBheTsgZmFpbGluZyB0aGF0LCB3ZSBpbnRlbmQgaGVyZSBhbmQgbm93IHRvIGxlbmQgdGhlbSBvdXIgYXNzaXN0YW5jZSBhbmQgdG8gcHVuaXNoIHRoZSBtZW4gd2hvLCBpbiB2aW9sYXRpb24gb2YgdGhlaXIgb2F0aHMsIGhhdmUgZG9uZSB0aGVtIHdyb25nLiBBbmQgaWYgeW91IGJlbG9uZyB0byB0aGF0IG51bWJlciwgaXQgaXMgd2l0aCB5b3UgdGhhdCB3ZSBzaGFsbCBiZWdpbiBpbiBvYnRhaW5pbmcgdGhlaXIgcmlnaHRzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIFhlbm9waG9uIHNhaWQ6IOKAnFdvdWxkIHlvdSBiZSB3aWxsaW5nLCBNZWRvc2FkZXMsIHRvIGxlYXZlIHRoZSBxdWVzdGlvbiB0byB0aGVzZSBwZW9wbGUgKGZvciB5b3Ugd2VyZSBzYXlpbmcgdGhhdCB0aGV5IGFyZSB5b3VyIGZyaWVuZHMpIGluIHdob3NlIGNvdW50cnkgd2UgYXJlLCB0byB2b3RlLCBvbmUgd2F5IG9yIHRoZSBvdGhlciwgd2hldGhlciBpdCBpcyBwcm9wZXIgZm9yIHlvdSBvciBvdXJzZWx2ZXMgdG8gZGVwYXJ0IGZyb20gdGhlaXIgY291bnRyeT/igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.7.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5NZWRvc2FkZXMgc2FpZCDigJxOb+KAnSB0byB0aGF0OyBidXQgaGUgdXJnZWQsIGFzIGhpcyBwcmVmZXJlbmNlLCB0aGF0IHRoZSB0d28gTGFjb25pYW5zIHNob3VsZCBnbyB0byBTZXV0aGVzIHRoZW1zZWx2ZXMgYWJvdXQgdGhlIHBheSwgYW5kIHNhaWQgdGhhdCBoZSB0aG91Z2h0IHRoZXkgbWlnaHQgcGVyc3VhZGUgU2V1dGhlczsgb3IgaWYgdGhleSB3b3VsZCBub3QgY29uc2VudCB0byBnbywgaGUgYXNrZWQgdGhlbSB0byBzZW5kIFhlbm9waG9uIGFsb25nIHdpdGggaGltc2VsZiwgYW5kIHByb21pc2VkIHRvIHN1cHBvcnQgaGltLiBBbmQgaGUgYmVnZ2VkIHRoZW0gbm90IHRvIGJ1cm4gdGhlIHZpbGxhZ2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmV1cG9uIHRoZXkgc2VudCBYZW5vcGhvbiwgYW5kIHdpdGggaGltIHRoZSBtZW4gd2hvIHNlZW1lZCB0byBiZSBmaXR0ZXN0LiBXaGVuIGhlIGhhZCBjb21lLCBoZSBzYWlkIHRvIFNldXRoZXM6CjwvdHJhbnNsYXRpb24+"
translation['7.7.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz7igJxJIGFtIGhlcmUsIFNldXRoZXMsIG5vdCB0byBwcmVzZW50IGFueSBkZW1hbmQsIGJ1dCB0byBzaG93IHlvdSwgaWYgSSBjYW4sIHRoYXQgeW91IHdlcmUgd3JvbmcgaW4gZ2V0dGluZyBhbmdyeSB3aXRoIG1lIGJlY2F1c2UgaW4gdGhlIG5hbWUgb2YgdGhlIHNvbGRpZXJzIEkgemVhbG91c2x5IGRlbWFuZGVkIGZyb20geW91IHdoYXQgeW91IGhhZCBwcm9taXNlZCB0aGVtOyBmb3IgSSBiZWxpZXZlZCB0aGF0IGl0IHdhcyBubyBsZXNzIHRvIHlvdXIgYWR2YW50YWdlIHRvIHBheSB0aGVtIHRoYW4gaXQgd2FzIHRvIHRoZWlycyB0byBnZXQgdGhlaXIgcGF5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IsIGluIHRoZSBmaXJzdCBwbGFjZSwgSSBrbm93IHRoYXQgbmV4dCB0byB0aGUgZ29kcyBpdCB3YXMgdGhlc2UgbWVuIHdobyBzZXQgeW91IGluIGEgY29uc3BpY3VvdXMgcG9zaXRpb24sIHNpbmNlIHRoZXkgbWFkZSB5b3Uga2luZyBvdmVyIGEgbGFyZ2UgdGVycml0b3J5IGFuZCBtYW55IHBlb3BsZTsgaGVuY2UgaXQgaXMgbm90IHBvc3NpYmxlIGZvciB5b3UgdG8gZXNjYXBlIG5vdGljZSwgd2hldGhlciB5b3UgcGVyZm9ybSBhbiBob25vdXJhYmxlIGRlZWQgb3IgYSBiYXNlIG9uZS4KPC90cmFuc2xhdGlvbj4="
translation['7.7.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaXQgc2VlbWVkIHRvIG1lIGFuIGltcG9ydGFudCB0aGluZyB0aGF0IGEgbWFuIGluIHN1Y2ggYSBwbGFjZSBzaG91bGQgbm90IGJlIHRob3VnaHQgdG8gaGF2ZSBkaXNtaXNzZWQgYmVuZWZhY3RvcnMgd2l0aG91dCBncmF0aXR1ZGUsIGFuIGltcG9ydGFudCB0aGluZyBhbHNvIHRvIGJlIHdlbGwgc3Bva2VuIG9mIGJ5IHNpeCB0aG91c2FuZCBtZW4sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiB0aGUgZW51bWVyYXRpb24gb2YgdGhlIOKAnFRlbiBUaG91c2FuZOKAnSBpbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDUuMy4zIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDUuMy4zPC9iaWJsPiwgYW5kIHNlZSBlc3BlY2lhbGx5IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNy4yLjMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNy4yLjMtNDwvYmlibD4gYW5kIDYuPC9ub3RlPiBidXQgbW9zdCBpbXBvcnRhbnQgb2YgYWxsIHRoYXQgeW91IHNob3VsZCBieSBubyBtZWFucyBzZXQgeW91cnNlbGYgZG93biBhcyB1bnRydXN0d29ydGh5IGluIHdoYXRldmVyIHlvdSBzYXkuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNS4zLjMiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNS4zLjM8L2JpYmw+LCBhbmQgc2VlIGVzcGVjaWFsbHkgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjIuMyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA3LjIuMy00PC9iaWJsPiBhbmQgNi48L3RyYW5zbGF0aW9uPg=="
translation['7.7.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgSSBzZWUgdGhhdCB0aGUgd29yZHMgb2YgdW50cnVzdHdvcnRoeSBtZW4gd2FuZGVyIGhlcmUgYW5kIHRoZXJlIHdpdGhvdXQgcmVzdWx0LCB3aXRob3V0IHBvd2VyLCBhbmQgd2l0aG91dCBob25vdXI7IGJ1dCBpZiBtZW4gYXJlIHNlZW4gdG8gcHJhY3Rpc2UgdHJ1dGgsIHRoZWlyIHdvcmRzLCBpZiB0aGV5IGRlc2lyZSBhbnl0aGluZywgaGF2ZSBwb3dlciB0byBhY2NvbXBsaXNoIG5vIGxlc3MgdGhhbiBmb3JjZSBpbiB0aGUgaGFuZHMgb2Ygb3RoZXIgbWVuOyBhbmQgaWYgdGhleSB3aXNoIHRvIGJyaW5nIG9uZSB0byByZWFzb24sIEkgcGVyY2VpdmUgdGhhdCB0aGVpciB0aHJlYXRzIGNhbiBkbyB0aGlzIG5vIGxlc3MgdGhhbiBwcmVzZW50IGNoYXN0aXNlbWVudCBhcHBsaWVkIGJ5IG90aGVyczsgYW5kIGlmIHN1Y2ggbWVuIG1ha2UgYSBwcm9taXNlIHRvIGFueSBvbmUsIHRoZXkgYWNjb21wbGlzaCBubyBsZXNzIHRoYW4gb3RoZXJzIGRvIGJ5IGFuIGltbWVkaWF0ZSBnaWZ0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcUmVjYWxsIGZvciB5b3Vyc2VsZiB3aGF0IGFtb3VudCB5b3UgcGFpZCB0byB1cyBpbiBhZHZhbmNlIGluIG9yZGVyIHRvIG9idGFpbiB1cyBhcyBhbGxpZXMuIFlvdSBrbm93IHRoYXQgaXQgd2FzIG5vdGhpbmc7IGJ1dCBiZWNhdXNlIHlvdSB3ZXJlIHRydXN0ZWQgdG8gY2Fycnkgb3V0IHRydXRoZnVsbHkgd2hhdGV2ZXIgeW91IHNhaWQsIHlvdSBpbmR1Y2VkIHRoYXQgZ3JlYXQgYm9keSBvZiBtZW4gdG8gdGFrZSB0aGUgZmllbGQgd2l0aCB5b3UgYW5kIHRvIGdhaW4gZm9yIHlvdSBhIHJlYWxtIHdvcnRoIG5vdCBtZXJlbHkgdGhpcnR5IHRhbGVudHMsIHRoZSBzdW0gd2hpY2ggdGhlc2UgbWVuIHRoaW5rIHRoZXkgb3VnaHQgbm93IHRvIHJlY292ZXIsIGJ1dCBtYW55IHRpbWVzIGFzIG11Y2guCjwvdHJhbnNsYXRpb24+"
translation['7.7.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5GaXJzdCBvZiBhbGwsIHRoZW4sIHRoaXMgdHJ1c3QsIHRoZSB2ZXJ5IHRoaW5nIHdoaWNoIGdhaW5lZCB5b3VyIGtpbmdkb20gZm9yIHlvdSwgaXMgYmVpbmcgc29sZCBmb3IgdGhpcyBzdW0uCjwvdHJhbnNsYXRpb24+"
translation['7.7.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ29tZSwgbm93LCByZWNhbGwgaG93IGdyZWF0IGEgdGhpbmcgeW91IHRoZW4gZGVlbWVkIGl0IHRvIGFjaGlldmUgdGhlIGNvbnF1ZXN0cyB3aGljaCB5b3Ugbm93IGhhdmUgYWNoaWV2ZWQuIEZvciBteSBwYXJ0LCBJIGFtIHN1cmUgeW91IHdvdWxkIGhhdmUgcHJheWVkIHRoYXQgdGhlIGRlZWRzIG5vdyBkb25lIG1pZ2h0IGJlIGFjY29tcGxpc2hlZCBmb3IgeW91IHJhdGhlciB0aGFuIHRoYXQgbWFueSB0aW1lcyB0aGF0IGFtb3VudCBvZiBtb25leSBtaWdodCBmYWxsIHRvIHlvdXIgbG90Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgSSBjb3VudCBpdCBncmVhdGVyIGh1cnQgYW5kIHNoYW1lIG5vdCB0byBob2xkIHRoZXNlIHBvc3Nlc3Npb25zIGZpcm1seSBub3cgdGhhbiBub3QgdG8gaGF2ZSBnYWluZWQgdGhlbSB0aGVuLCBieSBzbyBtdWNoIGFzIGl0IGlzIGEgaGFyZGVyIGZhdGUgdG8gYmVjb21lIHBvb3IgYWZ0ZXIgYmVpbmcgcmljaCB0aGFuIG5vdCB0byBiZWNvbWUgcmljaCBhdCBhbGwsIGFuZCBieSBzbyBtdWNoIGFzIGl0IGlzIG1vcmUgcGFpbmZ1bCB0byBiZSBmb3VuZCBhIHN1YmplY3QgYWZ0ZXIgYmVpbmcgYSBraW5nIHRoYW4gbm90IHRvIGJlY29tZSBraW5nIGF0IGFsbC4KPC90cmFuc2xhdGlvbj4="
translation['7.7.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5Zb3UgdW5kZXJzdGFuZCwgdGhlbiwgdGhhdCB0aG9zZSB3aG8gaGF2ZSBub3cgYmVjb21lIHlvdXIgc3ViamVjdHMgd2VyZSBub3QgcGVyc3VhZGVkIHRvIGxpdmUgdW5kZXIgeW91ciBydWxlIG91dCBvZiBhZmZlY3Rpb24gZm9yIHlvdSwgYnV0IGJ5IHN0cmVzcyBvZiBuZWNlc3NpdHksIGFuZCB0aGF0IHVubGVzcyBzb21lIGZlYXIgc2hvdWxkIHJlc3RyYWluIHRoZW0sIHRoZXkgd291bGQgZW5kZWF2b3VyIHRvIGJlY29tZSBmcmVlIGFnYWluLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5JbiB3aGljaCBvZiB0aGVzZSB0d28gY2FzZXMsIHRoZXJlZm9yZSBkbyB5b3UgdGhpbmsgdGhleSB3b3VsZCBmZWVsIGdyZWF0ZXIgZmVhciBhbmQgYmUgbW9yZSBtb2RlcmF0ZSBpbiB0aGVpciByZWxhdGlvbnMgd2l0aCB5b3U6IGlmIHRoZXkgc2hvdWxkIHNlZSB0aGUgc29sZGllcnMgY2hlcmlzaGluZyBzdWNoIGZlZWxpbmdzIHRvd2FyZCB5b3UgdGhhdCB0aGV5IHdvdWxkIHN0YXkgd2l0aCB5b3Ugbm93IGlmIHlvdSBzbyBiYWRlIHRoZW0gYW5kIHdvdWxkIHF1aWNrbHkgY29tZSBiYWNrIHRvIHlvdSBhZ2FpbiBpZiB5b3UgbmVlZGVkIHRoZW0sIGFuZCBzaG91bGQgc2VlIGFsc28gdGhhdCBvdGhlcnMsIGhlYXJpbmcgbWFueSBnb29kIHRoaW5ncyBhYm91dCB5b3UgZnJvbSB0aGVzZSB0cm9vcHMsIHdvdWxkIHF1aWNrbHkgcHJlc2VudCB0aGVtc2VsdmVzIHRvIHRha2Ugc2VydmljZSB3aXRoIHlvdSB3aGVuZXZlciB5b3Ugd2lzaGVkIGl04oCUb3IgaWYgdGhleSBzaG91bGQgZm9ybSB0aGUgdW5raW5kIG9waW5pb24gdGhhdCBubyBvdGhlciBzb2xkaWVycyB3b3VsZCBjb21lIHRvIHlvdSwgaW4gY29uc2VxdWVuY2Ugb2YgYSBkaXN0cnVzdCByZXN1bHRpbmcgZnJvbSB3aGF0IGhhcyBub3cgaGFwcGVuZWQsIGFuZCB0aGF0IHRoZXNlIHdob20geW91IGhhdmUgYXJlIG1vcmUgZnJpZW5kbHkgdG8gdGhlbSB0aGFuIHRvIHlvdT8KPC90cmFuc2xhdGlvbj4="
translation['7.7.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgaXQgd2FzIGJ5IG5vIG1lYW5zIGJlY2F1c2UgdGhleSBmZWxsIHNob3J0IG9mIHVzIGluIG51bWJlcnMgdGhhdCB0aGV5IHlpZWxkZWQgdG8geW91LCBidXQgYmVjYXVzZSB0aGV5IGxhY2tlZCBsZWFkZXJzLiBIZW5jZSB0aGVyZSBpcyBub3cgZGFuZ2VyIG9uIHRoaXMgY291bnQgYWxzbywgdGhlIGRhbmdlciB0aGF0IHRoZXkgbWF5IGZpbmQgbGVhZGVycyBpbiBzb21lIG9mIHRoZXNlIHNvbGRpZXJzIHdobyByZWdhcmQgdGhlbXNlbHZlcyBhcyB3cm9uZ2VkIGJ5IHlvdSwgb3IgZWxzZSBpbiBtZW4gd2hvIGFyZSBldmVuIHN0cm9uZ2VyIHRoYW4gdGhlc2UgYXJlLOKAlEkgbWVhbiB0aGUgTGFjZWRhZW1vbmlhbnMs4oCUaW4gY2FzZSB0aGUgc29sZGllcnMgcHJvbWlzZSB0byByZW5kZXIgdGhlbSBtb3JlIHplYWxvdXMgc2VydmljZSBpZiB0aGV5IG5vdyBleGFjdCB3aGF0IGlzIGR1ZSBmcm9tIHlvdSwgYW5kIGluIGNhc2UgdGhlIExhY2VkYWVtb25pYW5zLCBvbiBhY2NvdW50IG9mIHRoZWlyIG5lZWRpbmcgdGhlIGFybXksIGdyYW50IHRoZW0gdGhpcyByZXF1ZXN0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgdGhhdCB0aGUgVGhyYWNpYW5zIHdobyBoYXZlIG5vdyBmYWxsZW4gdW5kZXIgeW91ciBzd2F5IHdvdWxkIGZhciBtb3JlIGVhZ2VybHkgZ28gYWdhaW5zdCB5b3UgdGhhbiB3aXRoIHlvdSwgaXMgcXVpdGUgY2VydGFpbjsgZm9yIHdoZW4geW91IGFyZSBjb25xdWVyb3IgdGhlaXIgbG90IGlzIHNsYXZlcnksIGFuZCB3aGVuIHlvdSBhcmUgY29ucXVlcmVkIGl0IGlzIGZyZWVkb20uCjwvdHJhbnNsYXRpb24+"
translation['7.7.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIGlmIHlvdSBuZWVkIGhlbmNlZm9ydGggdG8gdGFrZSBzb21lIHRob3VnaHQgZm9yIHRoZSBzYWtlIG9mIHRoaXMgbGFuZCBhbHNvLCBzZWVpbmcgdGhhdCBpdCBpcyB5b3VycywgaW4gd2hpY2ggY2FzZSBkbyB5b3Ugc3VwcG9zZSBpdCB3b3VsZCBiZSBmcmVlciBmcm9tIGlsbHM6IGlmIHRoZXNlIHNvbGRpZXJzIHNob3VsZCByZWNvdmVyIHdoYXQgdGhleSBjbGFpbSBhbmQgZ28gYXdheSBsZWF2aW5nIGEgc3RhdGUgb2YgcGVhY2UgYmVoaW5kIHRoZW0sIG9yIGlmIHRoZXkgc2hvdWxkIHJlbWFpbiBhcyBpbiBhIGhvc3RpbGUgY291bnRyeSBhbmQgeW91IHNob3VsZCB1bmRlcnRha2UgdG8gbWFpbnRhaW4gYW4gb3Bwb3NpbmcgY2FtcCB3aXRoIG90aGVyIHRyb29wcywgdGhhdCB3b3VsZCBoYXZlIHRvIGJlIG1vcmUgbnVtZXJvdXMgdGhhbiB0aGVzZSBhbmQgd291bGQgbmVlZCBwcm92aXNpb25zPwo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaW4gd2hpY2ggY2FzZSB3b3VsZCBtb3JlIG1vbmV5IGJlIHNwZW50LCBpZiB3aGF0IGlzIG93aW5nIHRvIHRoZXNlIG1lbiBzaG91bGQgYmUgcGFpZCBvdmVyIHRvIHRoZW0sIG9yIGlmIHRoaXMgc3VtIHNob3VsZCBiZSBsZWZ0IG93aW5nIGFuZCB5b3Ugc2hvdWxkIGhhdmUgdG8gaGlyZSBvdGhlciB0cm9vcHMgc3Ryb25nZXIgdGhhbiB0aGV5IGFyZT8KPC90cmFuc2xhdGlvbj4="
translation['7.7.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5ZZXMsIGJ1dCBIZXJhY2xlaWRlcyB0aGlua3MsIGFzIGhlIHVzZWQgdG8gZXhwbGFpbiB0byBtZSwgdGhhdCB0aGlzIHN1bSBvZiBtb25leSBpcyBhIHZlcnkgbGFyZ2Ugb25lLiBVcG9uIG15IHdvcmQgaXQgaXMgYSBmYXIgc21hbGxlciB0aGluZyBub3cgZm9yIHlvdSB0byByZWNlaXZlIG9yIHRvIHBheSB0aGlzIHN1bSB0aGFuIGl0IHdvdWxkIGhhdmUgYmVlbiBiZWZvcmUgd2UgY2FtZSB0byB5b3UgdG8gcmVjZWl2ZSBvciB0byBwYXkgYSB0ZW50aCBwYXJ0IG9mIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgaXMgbm90IG51bWJlciB0aGF0IGRldGVybWluZXMgd2hhdCBpcyBtdWNoIGFuZCB3aGF0IGlzIGxpdHRsZSwgYnV0IHRoZSBjYXBhY2l0eSBvZiB0aGUgbWFuIHdobyBwYXlzIGFuZCBvZiBoaW0gd2hvIHJlY2VpdmVzLiBBbmQgYXMgZm9yIHlvdXJzZWxmLCB5b3VyIHllYXJseSBpbmNvbWUgaXMgZ29pbmcgdG8gYmUgZ3JlYXRlciBub3cgdGhhbiBhbGwgdGhlIHByb3BlcnR5IHlvdSBwb3NzZXNzZWQgYW1vdW50ZWQgdG8gYmVmb3JlLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRm9yIG15IHBhcnQsIFNldXRoZXMsIGl0IHdhcyBvdXQgb2YgcmVnYXJkIGZvciB5b3UgYXMgYSBmcmllbmQgdGhhdCBJIHVyZ2VkIHRoaXMgY291cnNlLCBpbiBvcmRlciB0aGF0IHlvdSBtaWdodCBiZSBkZWVtZWQgd29ydGh5IG9mIHRoZSBnb29kIHRoaW5ncyB3aGljaCB0aGUgZ29kcyBoYXZlIGdpdmVuIHRvIHlvdSBhbmQgdGhhdCBJIG1pZ2h0IG5vdCBsb3NlIGNyZWRpdCB3aXRoIHRoZSBhcm15Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYmUgd2VsbCBhc3N1cmVkIHRoYXQgYXQgcHJlc2VudCBpZiBJIHNob3VsZCB3aXNoIHRvIGluZmxpY3QgaGFybSB1cG9uIGEgZm9lLCBJIGNvdWxkIG5vdCBkbyBpdCB3aXRoIHRoaXMgYXJteSwgYW5kIGlmIEkgc2hvdWxkIHdpc2ggdG8gY29tZSB0byB5b3VyIGFzc2lzdGFuY2UgYWdhaW4sIEkgc2hvdWxkIG5vdCBmaW5kIG15c2VsZiBhYmxlIHRvIGRvIHRoYXQ7IHN1Y2ggaXMgdGhlIGZlZWxpbmcgb2YgdGhlIGFybXkgdG93YXJkIG1lLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgeWV0IEkgbWFrZSB5b3VyIG93biBzZWxmIG15IHdpdG5lc3MsIGFsb25nIHdpdGggdGhlIGdvZHMsIHdobyBrbm93LCB0aGF0IEkgaGF2ZSBuZWl0aGVyIHJlY2VpdmVkIGFueXRoaW5nIGZyb20geW91IHRoYXQgd2FzIGludGVuZGVkIGZvciB0aGUgc29sZGllcnMsIG5vciBoYXZlIGV2ZXIgYXNrZWQgd2hhdCB3YXMgdGhlaXJzIGZvciBteSBwcml2YXRlIHVzZSwgbm9yIGRlbWFuZGVkIGZyb20geW91IHdoYXQgeW91IGhhZCBwcm9taXNlZCBtZTsKPC90cmFuc2xhdGlvbj4="
translation['7.7.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgSSBzd2VhciB0byB5b3UgdGhhdCBldmVuIGlmIHlvdSBoYWQgb2ZmZXJlZCB0byBwYXkgd2hhdCB3YXMgZHVlIHRvIG1lLCBJIHNob3VsZCBub3QgaGF2ZSBhY2NlcHRlZCBpdCB1bmxlc3MgdGhlIHNvbGRpZXJzIGFsc28gd2VyZSBhdCB0aGUgc2FtZSB0aW1lIHRvIHJlY292ZXIgd2hhdCB3YXMgZHVlIHRvIHRoZW0uIEZvciBpdCB3b3VsZCBoYXZlIGJlZW4gZGlzZ3JhY2VmdWwgdG8gZ2V0IG15IG93biBhZmZhaXJzIGFycmFuZ2VkIGFuZCBsZWF2ZSB0aGVpcnMgaW4gYW4gZXZpbCBzdGF0ZSwgZXNwZWNpYWxseSBzaW5jZSBJIHdhcyBob25vdXJlZCBieSB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgeWV0IEhlcmFjbGVpZGVzIHRoaW5rcyB0aGF0IGV2ZXJ5dGhpbmcgaXMgYnV0IG5vbnNlbnNlIGluIGNvbXBhcmlzb24gd2l0aCBwb3NzZXNzaW5nIG1vbmV5LCBieSBob29rIG9yIGJ5IGNyb29rOyBidXQgSSBiZWxpZXZlLCBTZXV0aGVzLCB0aGF0IG5vIHBvc3Nlc3Npb24gaXMgbW9yZSBob25vdXJhYmxlIGZvciBhIG1hbiwgZXNwZWNpYWxseSBhIGNvbW1hbmRlciwgb3IgbW9yZSBzcGxlbmRpZCB0aGFuIHZhbG91ciBhbmQganVzdGljZSBhbmQgZ2VuZXJvc2l0eS4KPC90cmFuc2xhdGlvbj4="
translation['7.7.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaGUgd2hvIHBvc3Nlc3NlcyB0aGVzZSB0aGluZ3MgaXMgcmljaCBiZWNhdXNlIG1hbnkgYXJlIGhpcyBmcmllbmRzLCBhbmQgcmljaCBiZWNhdXNlIHN0aWxsIG90aGVycyBkZXNpcmUgdG8gYmVjb21lIGhpcyBmcmllbmRzOyBpZiBoZSBwcm9zcGVycyBoZSBoYXMgdGhvc2Ugd2hvIHdpbGwgcmVqb2ljZSB3aXRoIGhpbSwgYW5kIGlmIGhlIG1lZXRzIHdpdGggYSBtaXNjaGFuY2UgaGUgZG9lcyBub3QgbGFjayB0aG9zZSB3aG8gd2lsbCBjb21lIHRvIGhpcyBhaWQuCjwvdHJhbnNsYXRpb24+"
translation['7.7.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IGlmIHlvdSBuZWl0aGVyIGxlYXJuZWQgZnJvbSBteSBkZWVkcyB0aGF0IEkgd2FzIHlvdXIgZnJpZW5kIGZyb20gdGhlIGJvdHRvbSBvZiBteSBoZWFydCBub3IgYXJlIGFibGUgdG8gcGVyY2VpdmUgdGhpcyBmcm9tIG15IHdvcmRzLCBhdCBsZWFzdCBnaXZlIGEgdGhvdWdodCB0byB3aGF0IHRoZSBzb2xkaWVycyBzYXkgd2l0aCBvbmUgYWNjb3JkOyBmb3IgeW91IHdlcmUgcHJlc2VudCBhbmQgaGVhcmQgd2hhdCB0aG9zZSB3aG8gd2lzaGVkIHRvIGNlbnN1cmUgbWUgc2FpZC4KPC90cmFuc2xhdGlvbj4="
translation['7.7.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGFjY3VzZWQgbWUgYmVmb3JlIHRoZSBMYWNlZGFlbW9uaWFucyBvZiByZWdhcmRpbmcgeW91IG1vcmUgaGlnaGx5IHRoYW4gSSBkaWQgdGhlIExhY2VkYWVtb25pYW5zLCB3aGlsZSBvbiB0aGVpciBvd24gYWNjb3VudCB0aGV5IGNoYXJnZWQgbWUgd2l0aCBiZWluZyBtb3JlIGNvbmNlcm5lZCB0aGF0IHlvdXIgYWZmYWlycyBzaG91bGQgYmUgd2VsbCB0aGFuIHRoYXQgdGhlaXIgb3duIHNob3VsZCBiZTsKPC90cmFuc2xhdGlvbj4="
translation['7.7.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgdGhleSBhbHNvIHNhaWQgdGhhdCBJIGhhZCByZWNlaXZlZCBnaWZ0cyBmcm9tIHlvdS4gQW5kIHlldCwgdG91Y2hpbmcgdGhlc2UgZ2lmdHMsIGRvIHlvdSBpbWFnaW5lIGl0IHdhcyBiZWNhdXNlIHRoZXkgaGFkIG9ic2VydmVkIGluIG1lIHNvbWUgaWxsLXdpbGwgdG93YXJkIHlvdSB0aGF0IHRoZXkgY2hhcmdlZCBtZSB3aXRoIGhhdmluZyByZWNlaXZlZCB0aGVtIGZyb20geW91LCBvciBiZWNhdXNlIHRoZXkgcGVyY2VpdmVkIGluIG1lIGFidW5kYW50IGdvb2Qtd2lsbCBmb3IgeW91Pwo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgbXkgcGFydCwgSSBwcmVzdW1lIHRoYXQgZXZlcnlib2R5IGJlbGlldmVzIGhlIG91Z2h0IHRvIHNob3cgZ29vZC13aWxsIHRvIHRoZSBtYW4gZnJvbSB3aG9tIGhlIHJlY2VpdmVzIGdpZnRzLiBZb3UsIGhvd2V2ZXIsIGJlZm9yZSBJIGhhZCByZW5kZXJlZCB5b3UgYW55IHNlcnZpY2UsIHdlbGNvbWVkIG1lIHdpdGggYSBwbGVhc3VyZSB3aGljaCB5b3Ugc2hvd2VkIGJ5IHlvdXIgZXllcywgeW91ciB2b2ljZSwgYW5kIHlvdXIgaG9zcGl0YWxpdHksIGFuZCB5b3UgY291bGQgbm90IG1ha2UgcHJvbWlzZXMgZW5vdWdoIGFib3V0IGFsbCB0aGF0IHNob3VsZCBiZSBkb25lIGZvciBtZTsgeWV0IG5vdyB0aGF0IHlvdSBoYXZlIGFjY29tcGxpc2hlZCB3aGF0IHlvdSBkZXNpcmVkIGFuZCBoYXZlIGJlY29tZSBhcyBncmVhdCBhcyBJIGNvdWxkIHBvc3NpYmx5IG1ha2UgeW91LCBoYXZlIHlvdSBub3cgdGhlIGhlYXJ0IHRvIGFsbG93IG1lIHRvIGJlIGhlbGQgaW4gc3VjaCBkaXNob25vdXIgYW1vbmcgdGhlIHNvbGRpZXJzPwo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdHJ1bHkgSSBoYXZlIGNvbmZpZGVuY2UsIG5vdCBvbmx5IHRoYXQgdGltZSB3aWxsIHRlYWNoIHlvdSB0aGF0IHlvdSBtdXN0IHJlc29sdmUgdG8gcGF5IHdoYXQgaXMgZHVlLCBidXQgYWxzbyB0aGF0IHlvdSB3aWxsIG5vdCB5b3Vyc2VsZiBlbmR1cmUgdG8gc2VlIHRob3NlIG1lbiB3aG8gaGF2ZSBmcmVlbHkgZ2l2ZW4geW91IGdvb2Qgc2VydmljZSwgYWNjdXNpbmcgeW91LiBJIGFzayB5b3UsIHRoZXJlZm9yZSwgd2hlbiB5b3UgcmVuZGVyIHBheW1lbnQsIHRvIHVzZSBhbGwgemVhbCB0byBtYWtlIG1lIGp1c3Qgc3VjaCBhIG1hbiBpbiB0aGUgZXllcyBvZiB0aGUgc29sZGllcnMgYXMgSSB3YXMgd2hlbiB5b3UgbWFkZSBtZSB5b3VyIGZyaWVuZC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.7.48'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXBvbiBoZWFyaW5nIHRoZXNlIHdvcmRzIFNldXRoZXMgY3Vyc2VkIHRoZSBtYW4gd2hvIHdhcyB0byBibGFtZSBmb3IgdGhlIGZhY3QgdGhhdCB0aGUgc29sZGllcnMnIHdhZ2VzIGhhZCBub3QgYmVlbiBwYWlkIGxvbmcgYWdvOyBhbmQgZXZlcnlib2R5IHN1c3BlY3RlZCB0aGF0IEhlcmFjbGVpZGVzIHdhcyB0aGF0IG1hbjsg4oCcZm9yIEks4oCdIHNhaWQgU2V1dGhlcywg4oCcbmV2ZXIgaW50ZW5kZWQgdG8gZGVmcmF1ZCB0aGVtLCBhbmQgSSB3aWxsIHBheSBvdmVyIHRoZSBtb25leS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.7.49'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gWGVub3Bob24gc2FpZCBhZ2Fpbjog4oCcVGhlbiBzaW5jZSB5b3UgaW50ZW5kIHRvIG1ha2UgcGF5bWVudCwgSSBub3cgcmVxdWVzdCB5b3UgdG8gZG8gaXQgdGhyb3VnaCBtZSwgYW5kIG5vdCB0byBhbGxvdyBtZSB0byBoYXZlLCBvbiB5b3VyIGFjY291bnQsIGEgZGlmZmVyZW50IHN0YW5kaW5nIHdpdGggdGhlIGFybXkgbm93IGZyb20gd2hhdCBJIGhhZCBhdCB0aGUgdGltZSB3aGVuIHdlIGNhbWUgdG8geW91LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.7.50'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgU2V1dGhlcyByZXBsaWVkOiDigJxCdXQgeW91IHdpbGwgbm90IGJlIGxlc3MgaG9ub3VyZWQgYW1vbmcgdGhlIHNvbGRpZXJzIG9uIG15IGFjY291bnQgaWYgeW91IHdpbGwgc3RheSB3aXRoIG1lLCBrZWVwaW5nIG9ubHkgYSB0aG91c2FuZCBob3BsaXRlcywgYW5kLCBiZXNpZGVzLCBJIHdpbGwgZ2l2ZSBvdmVyIHRoZSBmb3J0cmVzc2VzIHRvIHlvdSBhbmQgdGhlIG90aGVyIHRoaW5ncyB0aGF0IEkgcHJvbWlzZWQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.7.51'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgWGVub3Bob24gYW5zd2VyZWQ6IOKAnFRoaXMgcGxhbiBpcyBub3QgYSBwb3NzaWJsZSBvbmU7IHNvIGRpc21pc3MgdXMu4oCdIOKAnFlldCByZWFsbHks4oCdIHNhaWQgU2V1dGhlcywg4oCcSSBrbm93IHRoYXQgaXQgaXMgYWxzbyBzYWZlciBmb3IgeW91IHRvIHN0YXkgd2l0aCBtZSB0aGFuIHRvIGdvIGF3YXku4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.7.52'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgWGVub3Bob24gcmVwbGllZDog4oCcV2VsbCwgSSB0aGFuayB5b3UgZm9yIHlvdXIgc29saWNpdHVkZTsgaXQgaXMgbm90IHBvc3NpYmxlLCBob3dldmVyLCBmb3IgbWUgdG8gc3RheTsgYnV0IHdoZXJldmVyIEkgbWF5IGVuam95IGdyZWF0ZXIgaG9ub3VyLCBiZSBzdXJlIHRoYXQgaXQgd2lsbCBiZSBhIGdvb2QgdGhpbmcgZm9yIHlvdSBhcyB3ZWxsIGFzIG15c2VsZi7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.7.53'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gU2V1dGhlcyBzYWlkOiDigJxBcyBmb3IgcmVhZHkgbW9uZXksIEkgaGF2ZSBvbmx5IGEgbGl0dGxlLCBhbmQgdGhhdCBJIGdpdmUgeW91LCBhIHRhbGVudDs8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIG5vdGUgb24gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAxLjcuMTgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMS43LjE4PC9iaWJsPi48L25vdGU+IGJ1dCBJIGhhdmUgc2l4IGh1bmRyZWQgY2F0dGxlLCBhbmQgc2hlZXAgdG8gdGhlIG51bWJlciBvZiBmb3VyIHRob3VzYW5kLCBhbmQgbmVhcmx5IGEgaHVuZHJlZCBhbmQgdHdlbnR5IHNsYXZlcy4gVGFrZSB0aGVzZSwgYW5kIGxpa2V3aXNlIHRoZSBob3N0YWdlcyBvZiB0aGUgcGVvcGxlIHdobyB3cm9uZ2VkIHlvdSw8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDEuNy4xOCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAxLjcuMTg8L2JpYmw+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjQuMTIiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNy40LjEyLTI0PC9iaWJsPi48L25vdGU+IGFuZCBnbyB5b3VyIHdheS7igJ0KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjQuMTIiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNy40LjEyLTI0PC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['7.7.54'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NCIgdW5pdD0ic2VjdGlvbiIgLz5YZW5vcGhvbiBsYXVnaGVkIGFuZCBzYWlkOiDigJxOb3cgc3VwcG9zaW5nIGFsbCB0aGlzIGRvZXMgbm90IHN1ZmZpY2UgdG8gY292ZXIgdGhlIGFtb3VudCBvZiB0aGUgcGF5LCB3aG9zZSB0YWxlbnQgc2hhbGwgSSBzYXkgSSBoYXZlPyBXb3VsZCBJIG5vdCBiZXR0ZXIsIHNlZWluZyB0aGF0IGl0IGlzIHJlYWxseSBhIHNvdXJjZSBvZiBkYW5nZXIgdG8gbWUsIGJlIG9uIG15IGd1YXJkIGFnYWluc3Qgc3RvbmVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldpdGggcmVmZXJlbmNlIHRvIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gNy42LjEwIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDcuNi4xMDwvYmlibD4uPC9ub3RlPiBvbiBteSB3YXkgYmFjaz8gRm9yIHlvdSBoZWFyZCB0aGUgdGhyZWF0cy7igJ0gRm9yIHRoZSB0aW1lLCB0aGVuLCBoZSByZW1haW5lZCB0aGVyZSBhdCBTZXV0aGVzJyBxdWFydGVycy4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiA3LjYuMTAiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gNy42LjEwPC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['7.7.55'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhlIG5leHQgZGF5IFNldXRoZXMgZGVsaXZlcmVkIG92ZXIgdG8gdGhlbSB3aGF0IGhlIGhhZCBwcm9taXNlZCwgYW5kIHNlbnQgbWVuIHdpdGggdGhlbSB0byBkcml2ZSB0aGUgY2F0dGxlLiBBcyBmb3IgdGhlIHNvbGRpZXJzLCB1cCB0byB0aGlzIHRpbWUgdGhleSBoYWQgYmVlbiBzYXlpbmcgdGhhdCBYZW5vcGhvbiBoYWQgZ29uZSBvZmYgdG8gU2V1dGhlcyB0byBkd2VsbCB3aXRoIGhpbSBhbmQgdG8gcmVjZWl2ZSB3aGF0IFNldXRoZXMgaGFkIHByb21pc2VkIGhpbTsgYnV0IHdoZW4gdGhleSBjYXVnaHQgc2lnaHQgb2YgaGltLCB0aGV5IHdlcmUgZGVsaWdodGVkLCBhbmQgcmFuIG91dCB0byBtZWV0IGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['7.7.56'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIFhlbm9waG9uIHNhdyBDaGFybWludXMgYW5kIFBvbHluaWN1cywgaGUgc2FpZCB0byB0aGVtOiDigJxUaGlzIHByb3BlcnR5IGhhcyBiZWVuIHNhdmVkIGZvciB0aGUgYXJteSB0aHJvdWdoIHlvdSwgYW5kIHRvIHlvdSBJIHR1cm4gaXQgb3ZlcjsgZG8geW91LCB0aGVuLCBkaXNwb3NlIG9mIGl0IGFuZCBtYWtlIHRoZSBkaXN0cmlidXRpb24gdG8gdGhlIGFybXku4oCdIFRoZXksIGFjY29yZGluZ2x5LCB0b29rIGl0IG92ZXIsIGFwcG9pbnRlZCBib290eS12ZW5kb3JzLCBhbmQgcHJvY2VlZGVkIHRvIHNlbGwgaXQ7IGFuZCB0aGV5IGluY3VycmVkIGEgZ3JlYXQgZGVhbCBvZiBibGFtZS4KPC90cmFuc2xhdGlvbj4="
translation['7.7.57'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NyIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgWGVub3Bob24sIGhlIHdvdWxkIG5vdCBnbyBuZWFyIHRoZW0sIGJ1dCBpdCB3YXMgcGxhaW4gdGhhdCBoZSB3YXMgbWFraW5nIHByZXBhcmF0aW9ucyBmb3IgaGlzIGhvbWV3YXJkIGpvdXJuZXk7IGZvciBub3QgeWV0IGhhZCBzZW50ZW5jZSBvZiBleGlsZSBiZWVuIHByb25vdW5jZWQgYWdhaW5zdCBoaW0gYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgcHJlY2lzZSBkYXRlIG9mIFhlbm9waG9uJ3MgYmFuaXNobWVudCBpcyB1bmNlcnRhaW4uIEl0IGFwcGVhcnMgdG8gaGF2ZSByZXN1bHRlZCBub3Qgb25seSBmcm9tIGhpcyBwYXJ0aWNpcGF0aW9uIGluIHRoZSBleHBlZGl0aW9uIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cnVzPC9wZXJzTmFtZT4sIHdobyBoYWQgYmVlbiBhbiBhbGx5IG9mIHRoZSBTcGFydGFucyBhZ2FpbnN0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiAoc2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMy4xLjUiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMy4xLjU8L2JpYmw+KSwgYnV0IGZyb20gaGlzIGNsb3NlIGFzc29jaWF0aW9uIHdpdGggU3BhcnRhbnMgdGhlcmVhZnRlci48L25vdGU+IEhpcyBmcmllbmRzIGluIHRoZSBjYW1wLCBob3dldmVyLCBjYW1lIHRvIGhpbSBhbmQgYmVnZ2VkIGhpbSBub3QgdG8gZGVwYXJ0IHVudGlsIGhlIHNob3VsZCBsZWFkIHRoZSBhcm15IGF3YXkgYW5kIHR1cm4gaXQgb3ZlciB0byBUaGlicm9uLgo8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJ1czwvcGVyc05hbWU+LCB3aG8gaGFkIGJlZW4gYW4gYWxseSBvZiB0aGUgU3BhcnRhbnMgYWdhaW5zdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gKHNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDMuMS41IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDMuMS41PC9iaWJsPiksIGJ1dCBmcm9tIGhpcyBjbG9zZSBhc3NvY2lhdGlvbiB3aXRoIFNwYXJ0YW5zIHRoZXJlYWZ0ZXIuPC90cmFuc2xhdGlvbj4="
translation['7.8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gcm9tIHRoZXJlIHRoZXkgc2FpbGVkIGFjcm9zcyB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjU3OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNTc5Ij5MYW1wc2FjdXM8L3BsYWNlTmFtZT4sIHdoZXJlIFhlbm9waG9uIHdhcyBtZXQgYnkgRXVjbGVpZGVzLCB0aGUgUGhsaWFzaWFuIHNlZXIsIHNvbiBvZiB0aGUgQ2xlYWdvcmFzIHdobyBwYWludGVkIHRoZSBtdXJhbCBwYWludGluZ3MgaW4gdGhlIEx5Y2V1bS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGZhbW91cyBneW1uYXNpdW0gYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+Ljwvbm90ZT4gRXVjbGVpZGVzIGNvbmdyYXR1bGF0ZWQgWGVub3Bob24gdXBvbiBoaXMgc2FmZSByZXR1cm4sIGFuZCBhc2tlZCBoaW0gaG93IG11Y2ggZ29sZCBoZSBoYWQgZ290Lgo8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4uPC90cmFuc2xhdGlvbj4="
translation['7.8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkhlIHJlcGxpZWQsIHN3ZWFyaW5nIHRvIHRoZSB0cnV0aCBvZiBoaXMgc3RhdGVtZW50LCB0aGF0IGhlIHdvdWxkIG5vdCBoYXZlIGV2ZW4gZW5vdWdoIG1vbmV5IHRvIHBheSBoaXMgdHJhdmVsbGluZyBleHBlbnNlcyBvbiB0aGUgd2F5IGhvbWUgdW5sZXNzIGhlIHNob3VsZCBzZWxsIGhpcyBob3JzZSBhbmQgd2hhdCBoZSBoYWQgYWJvdXQgaGlzIHBlcnNvbi4gQW5kIEV1Y2xlaWRlcyB3b3VsZCBub3QgYmVsaWV2ZSBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['7.8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGVuIHRoZSBMYW1wc2FjZW5lcyBzZW50IGdpZnRzIG9mIGhvc3BpdGFsaXR5IHRvIFhlbm9waG9uIGFuZCBoZSB3YXMgc2FjcmlmaWNpbmcgdG8gQXBvbGxvLCBoZSBnYXZlIEV1Y2xlaWRlcyBhIHBsYWNlIGJlc2lkZSBoaW07IGFuZCB3aGVuIEV1Y2xlaWRlcyBzYXcgdGhlIHZpdGFscyBvZiB0aGUgdmljdGltcywgaGUgc2FpZCB0aGF0IGhlIHdlbGwgYmVsaWV2ZWQgdGhhdCBYZW5vcGhvbiBoYWQgbm8gbW9uZXkuIOKAnEJ1dCBJIGFtIHN1cmUs4oCdIGhlIHdlbnQgb24sIOKAnHRoYXQgZXZlbiBpZiBtb25leSBzaG91bGQgZXZlciBiZSBhYm91dCB0byBjb21lIHRvIHlvdSwgc29tZSBvYnN0YWNsZSBhbHdheXMgYXBwZWFyc+KAlGlmIG5vdGhpbmcgZWxzZSwgeW91ciBvd24gc2VsZi7igJ0gSW4gdGhpcyBYZW5vcGhvbiBhZ3JlZWQgd2l0aCBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['7.8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gRXVjbGVpZGVzIHNhaWQsIOKAnFllcywgWmV1cyB0aGUgTWVyY2lmdWwgaXMgYW4gb2JzdGFjbGUgaW4geW91ciB3YXks4oCdIGFuZCBhc2tlZCB3aGV0aGVyIGhlIGhhZCB5ZXQgc2FjcmlmaWNlZCB0byBoaW0sIOKAnGp1c3QgYXMgYXQgaG9tZSzigJ0gaGUgY29udGludWVkLCDigJx3aGVyZSBJIHdhcyB3b250IHRvIG9mZmVyIHRoZSBzYWNyaWZpY2VzIGZvciB5b3UsIGFuZCB3aXRoIHdob2xlIHZpY3RpbXMu4oCdIFhlbm9waG9uIHJlcGxpZWQgdGhhdCBub3Qgc2luY2UgaGUgbGVmdCBob21lIGhhZCBoZSBzYWNyaWZpY2VkIHRvIHRoYXQgZ29kLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIFpldXMgaW4gdGhpcyBwYXJ0aWN1bGFyIG9uZSBvZiBoaXMgZnVuY3Rpb25zLCBhcyDigJx0aGUgTWVyY2lmdWwu4oCdIGNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDcuNi40NCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA3LjYuNDQ8L2JpYmw+Ljwvbm90ZT4gRXVjbGVpZGVzLCBhY2NvcmRpbmdseSwgYWR2aXNlZCBoaW0gdG8gc2FjcmlmaWNlIGp1c3QgYXMgaGUgdXNlZCB0byBkbywgYW5kIHNhaWQgdGhhdCBpdCB3b3VsZCBiZSB0byBoaXMgYWR2YW50YWdlLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDcuNi40NCIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiA3LjYuNDQ8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['7.8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGUgbmV4dCBkYXksIHVwb24gY29taW5nIHRvIE9waHJ5bml1bSwgWGVub3Bob24gcHJvY2VlZGVkIHRvIHNhY3JpZmljZSwgb2ZmZXJpbmcgd2hvbGUgdmljdGltcyBvZiBzd2luZSBhZnRlciB0aGUgY3VzdG9tIG9mIGhpcyBmYXRoZXJzLCBhbmQgaGUgb2J0YWluZWQgZmF2b3VyYWJsZSBvbWVucy4KPC90cmFuc2xhdGlvbj4="
translation['7.8.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkluIGZhY3QsIG9uIHRoYXQgdmVyeSBkYXkgQmlvbiBhbmQgTmF1c2ljbGVpZGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFwcGFyZW50bHkgb2ZmaWNlcnMgc2VudCBieSBUaGlicm9uLjwvbm90ZT4gYXJyaXZlZCB3aXRoIG1vbmV5IHRvIGdpdmUgdG8gdGhlIGFybXkgYW5kIHdlcmUgZW50ZXJ0YWluZWQgYnkgWGVub3Bob24sIGFuZCB0aGV5IHJlZGVlbWVkIGhpcyBob3JzZSwgd2hpY2ggaGUgaGFkIHNvbGQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI1NzkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjU3OSI+TGFtcHNhY3VzPC9wbGFjZU5hbWU+IGZvciBmaWZ0eSBkYXJpZXMs4oCUZm9yIHRoZXkgc3VzcGVjdGVkIHRoYXQgaGUgaGFkIHNvbGQgaXQgZm9yIHdhbnQgb2YgbW9uZXksIHNpbmNlIHRoZXkgaGVhcmQgaGUgd2FzIGZvbmQgb2YgdGhlIGhvcnNlLOKAlGdhdmUgaXQgYmFjayB0byBoaW0sIGFuZCB3b3VsZCBub3QgYWNjZXB0IGZyb20gaGltIHRoZSBwcmljZSBvZiBpdC4KPC90cmFuc2xhdGlvbj4="
translation['7.8.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gcm9tIHRoZXJlIHRoZXkgbWFyY2hlZCB0aHJvdWdoIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjMzMSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzMxIj5Ucm9hZDwvcGxhY2VOYW1lPiBhbmQsIGNyb3NzaW5nIG92ZXIgTW91bnQgSWRhLCBhcnJpdmVkIGZpcnN0IGF0IEFudGFuZHJ1cywgYW5kIHRoZW4sIHByb2NlZWRpbmcgYWxvbmcgdGhlIGNvYXN0LCByZWFjaGVkIHRoZSBwbGFpbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZWJlcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGhlYmVzIj5UaGViZXM8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['7.8.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk1ha2luZyB0aGVpciB3YXkgZnJvbSB0aGVyZSB0aHJvdWdoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQWRyYW15dHRpdW0iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFkcmFteXR0aXVtIj5BZHJhbXl0dGl1bTwvcGxhY2VOYW1lPiBhbmQgQ2VydG9udXMsIHRoZXkgY2FtZSB0byB0aGUgcGxhaW4gb2YgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTIxNjE1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMjE2MTUiPkNhaWN1czwvcGxhY2VOYW1lPiBhbmQgc28gcmVhY2hlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFBlcmdhbW9uIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQZXJnYW1vbiI+UGVyZ2FtdXM8L3BsYWNlTmFtZT4sIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NzQ4IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY3NDgiPk15c2lhPC9wbGFjZU5hbWU+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZXJlIFhlbm9waG9uIHdhcyBlbnRlcnRhaW5lZCBieSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5IZWxsYXM8L3BsYWNlTmFtZT4sIHRoZSB3aWZlIG9mIEdvbmd5bHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldob3NlIGFuY2VzdG9yIChmYXRoZXI/KSwgYWNjb3JkaW5nIHRvIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gMy4xLjYiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gMy4xLjY8L2JpYmw+LCBoYWQgYmVlbiBnaXZlbiBmb3VyIGNpdGllcyBpbiB0aGlzIG5laWdoYm91cmhvb2QgYnkgWGVyeGVzIOKAnGJlY2F1c2UgaGUgZXNwb3VzZWQgdGhlIFBlcnNpYW4gY2F1c2UsIGJlaW5nIHRoZSBvbmx5IG1hbiBhbW9uZyB0aGUgRXJldHJpYW5zIHdobyBkaWQgc28sIGFuZCB3YXMgdGhlcmVmb3JlIGJhbmlzaGVkLuKAnSBjcC4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjEuMyIgdmFsaWQ9InllcyI+WGVuLiBBbmFiLiAyLjEuMzwvYmlibD4gYW5kIG5vdGUuPC9ub3RlPiB0aGUgRXJldHJpYW4gYW5kIG1vdGhlciBvZiBHb3JnaW9uIGFuZCBHb25neWx1cy4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiAzLjEuNiIgdmFsaWQ9InllcyI+WGVuLiBIZWxsLiAzLjEuNjwvYmlibD4sIGhhZCBiZWVuIGdpdmVuIGZvdXIgY2l0aWVzIGluIHRoaXMgbmVpZ2hib3VyaG9vZCBieSBYZXJ4ZXMg4oCcYmVjYXVzZSBoZSBlc3BvdXNlZCB0aGUgUGVyc2lhbiBjYXVzZSwgYmVpbmcgdGhlIG9ubHkgbWFuIGFtb25nIHRoZSBFcmV0cmlhbnMgd2hvIGRpZCBzbywgYW5kIHdhcyB0aGVyZWZvcmUgYmFuaXNoZWQu4oCdIGNwLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEFuYWIuIDIuMS4zIiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuMS4zPC9iaWJsPiBhbmQgbm90ZS48L3RyYW5zbGF0aW9uPg=="
translation['7.8.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlNoZSB0b2xkIGhpbSB0aGF0IHRoZXJlIHdhcyBhIFBlcnNpYW4gaW4gdGhlIHBsYWluIG5hbWVkIEFzaWRhdGVzLCBhbmQgc2FpZCB0aGF0IGlmIGhlIHNob3VsZCBnbyBieSBuaWdodCB3aXRoIHRocmVlIGh1bmRyZWQgdHJvb3BzLCBoZSBjb3VsZCBjYXB0dXJlIHRoaXMgbWFuLCBhbG9uZyB3aXRoIGhpcyB3aWZlIGFuZCBjaGlsZHJlbiBhbmQgcHJvcGVydHksIG9mIHdoaWNoIGhlIGhhZCBhIGdyZWF0IGRlYWwuIEFuZCBzaGUgc2VudCBhcyBndWlkZXMgZm9yIHRoaXMgZW50ZXJwcmlzZSBub3Qgb25seSBoZXIgb3duIGNvdXNpbiwgYnV0IGFsc28gRGFwaG5hZ29yYXMsIHdob20gc2hlIHJlZ2FyZGVkIHZlcnkgaGlnaGx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.8.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5YZW5vcGhvbiwgYWNjb3JkaW5nbHksIHByb2NlZWRlZCB0byBzYWNyaWZpY2UsIGtlZXBpbmcgdGhlc2UgdHdvIGJ5IGhpcyBzaWRlLiBBbmQgQmFzaWFzLCB0aGUgRWxlYW4gc2VlciB3aG8gd2FzIHByZXNlbnQsIHNhaWQgdGhhdCB0aGUgb21lbnMgd2VyZSBleHRyZW1lbHkgZmF2b3VyYWJsZSBmb3IgaGltIGFuZCB0aGF0IHRoZSBtYW4gd2FzIGVhc3kgdG8gY2FwdHVyZS4KPC90cmFuc2xhdGlvbj4="
translation['7.8.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5TbyBhZnRlciBkaW5uZXIgaGUgc2V0IGZvcnRoLCB0YWtpbmcgd2l0aCBoaW0gdGhlIGNhcHRhaW5zIHdobyB3ZXJlIGhpcyBjbG9zZXN0IGZyaWVuZHMgYW5kIG90aGVycyB3aG8gaGFkIHByb3ZlZCB0aGVtc2VsdmVzIHRydXN0d29ydGh5IHRocm91Z2hvdXQsIGluIG9yZGVyIHRoYXQgaGUgbWlnaHQgZG8gdGhlbSBhIGdvb2QgdHVybi4gQnV0IHRoZXJlIGpvaW5lZCBoaW0gc3RpbGwgb3RoZXJzIHdobyBmb3JjZWQgdGhlbXNlbHZlcyBpbiwgdG8gdGhlIG51bWJlciBvZiBzaXggaHVuZHJlZDsgYW5kIHRoZSBjYXB0YWlucyB0cmllZCB0byBkcml2ZSB0aGVtIGF3YXksIHNvIHRoYXQgdGhleSBtaWdodCBub3QgaGF2ZSB0byBnaXZlIHRoZW0gYSBzaGFyZSBpbiB0aGUgYm9vdHnigJRqdXN0IGFzIHRob3VnaCB0aGUgcHJvcGVydHkgd2FzIGFscmVhZHkgaW4gaGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['7.8.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGV5IHJlYWNoZWQgdGhlIHBsYWNlLCBhYm91dCBtaWRuaWdodCwgdGhlIHNsYXZlcyB0aGF0IHdlcmUgcm91bmQgYWJvdXQgdGhlIHRvd2VyIGFuZCBtb3N0IG9mIHRoZSBhbmltYWxzIHJhbiBhd2F5LCB0aGUgR3JlZWtzIGxlYXZpbmcgdGhlbSB1bmhlZWRlZCBpbiBvcmRlciB0byBjYXB0dXJlIEFzaWRhdGVzIGhpbXNlbGYgYW5kIGhpcyBiZWxvbmdpbmdzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.8.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGV5IGZvdW5kIHRoZW1zZWx2ZXMgdW5hYmxlIHRvIHRha2UgdGhlIHRvd2VyIGJ5IHN0b3JtIChmb3IgaXQgd2FzIGhpZ2ggYW5kIGxhcmdlLCBhbmQgZnVybmlzaGVkIHdpdGggYmF0dGxlbWVudHMgYW5kIGEgY29uc2lkZXJhYmxlIGZvcmNlIG9mIHdhcmxpa2UgZGVmZW5kZXJzKSwgdGhleSBhdHRlbXB0ZWQgdG8gZGlnIHRocm91Z2ggdGhlIHRvd2VyLXdhbGwuCjwvdHJhbnNsYXRpb24+"
translation['7.8.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIHdhbGwgaGFkIGEgdGhpY2tuZXNzIG9mIGVpZ2h0IGVhcnRoZW4gYnJpY2tzLiBBdCBkYXlicmVhaywgaG93ZXZlciwgYSBicmVhY2ggaGFkIGJlZW4gbWFkZTsgYW5kIGp1c3QgYXMgc29vbiBhcyB0aGUgbGlnaHQgc2hvd2VkIHRocm91Z2gsIHNvbWUgb25lIGZyb20gd2l0aGluIHN0cnVjayB3aXRoIGFuIG94LXNwaXQgY2xlYW4gdGhyb3VnaCB0aGUgdGhpZ2ggb2YgdGhlIG1hbiB3aG8gd2FzIG5lYXJlc3QgdGhlIGhvbGU7IGFuZCBmcm9tIHRoYXQgdGltZSBvbiB0aGV5IGtlcHQgc2hvb3Rpbmcgb3V0IGFycm93cyBhbmQgc28gbWFkZSBpdCB1bnNhZmUgZXZlbiB0byBwYXNzIGJ5IHRoZSBwbGFjZSBhbnkgbW9yZS4KICAgIDwvdHJhbnNsYXRpb24+"
translation['7.8.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuLCBhcyB0aGUgcmVzdWx0IG9mIHRoZWlyIHNob3V0aW5nIGFuZCBsaWdodGluZyBvZiBiZWFjb24gZmlyZXMsIHRoZXJlIGNhbWUgdG8gdGhlaXIgYXNzaXN0YW5jZSBJdGFtZW5lcyB3aXRoIGhpcyBvd24gZm9yY2UsIGFuZCBmcm9tIENvbWFuaWEgQXNzeXJpYW4gaG9wbGl0ZXMgYW5kIEh5cmNhbmlhbiBob3JzZW1lbuKAlHRoZXNlIGFsc28gYmVpbmcgbWVyY2VuYXJpZXMgaW4gdGhlIHNlcnZpY2Ugb2YgdGhlIEtpbmfigJR0byB0aGUgbnVtYmVyIG9mIGVpZ2h0eSwgYXMgd2VsbCBhcyBhYm91dCBlaWdodCBodW5kcmVkIHBlbHRhc3RzLCBhbmQgbW9yZSBmcm9tIFBhcnRoZW5pdW0sIGFuZCBtb3JlIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBcG9sbG9uaWEsTHljaWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFwb2xsb25pYSxMeWNpYSI+QXBvbGxvbmlhPC9wbGFjZU5hbWU+IGFuZCBmcm9tIHRoZSBuZWFyLWJ5IHBsYWNlcywgaW5jbHVkaW5nIGhvcnNlbWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.8.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBpdCB3YXMgdGltZSB0byBjb25zaWRlciBob3cgdGhlIHJldHJlYXQgd2FzIHRvIGJlIGVmZmVjdGVkOyBzbyBzZWl6aW5nIGFsbCB0aGUgY2F0dGxlIGFuZCBzaGVlcCB0aGVyZSB3ZXJlLCBhcyB3ZWxsIGFzIHNsYXZlcywgdGhleSBnb3QgdGhlbSBpbnNpZGUgb2YgYSBob2xsb3cgc3F1YXJlIGFuZCBwcm9jZWVkZWQgdG8gZHJpdmUgdGhlbSBhbG9uZyB3aXRoIHRoZW0sIG5vdCBiZWNhdXNlIHRoZXkgd2VyZSBhbnkgbG9uZ2VyIGdpdmluZyB0aG91Z2h0IHRvIHRoZSBtYXR0ZXIgb2YgYm9vdHksIGJ1dCBvdXQgb2YgZmVhciB0aGF0IHRoZSByZXRyZWF0IG1pZ2h0IGJlY29tZSBhIHJvdXQgaWYgdGhleSBzaG91bGQgZ28gb2ZmIGFuZCBsZWF2ZSB0aGVpciBib290eSBiZWhpbmQsIGFuZCB0aGF0IHRoZSBlbmVteSBtaWdodCBiZWNvbWUgYm9sZGVyIGFuZCB0aGUgc29sZGllcnMgbW9yZSBkaXNoZWFydGVuZWQ7IHdoaWxlIGFzIGl0IHdhcywgdGhleSB3ZXJlIHdpdGhkcmF3aW5nIGxpa2UgbWVuIHJlYWR5IHRvIGZpZ2h0IGZvciB0aGVpciBwb3NzZXNzaW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['7.8.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgYXMgc29vbiBhcyBHb25neWx1cyBzYXcgdGhhdCB0aGUgR3JlZWtzIHdlcmUgZmV3IGFuZCB0aG9zZSB3aG8gd2VyZSBhdHRhY2tpbmcgdGhlbSBtYW55LCBoZSBzYWxsaWVkIGZvcnRoIGhpbXNlbGYsIGluIHNwaXRlIG9mIGhpcyBtb3RoZXIsIGF0IHRoZSBoZWFkIG9mIGhpcyBvd24gZm9yY2UsIGRlc2lyaW5nIHRvIHRha2UgcGFydCBpbiB0aGUgYWN0aW9uOyBhbmQgUHJvY2xlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgTVNTLiBhZGQgdGhlIGZvbGxvd2luZyBzdGF0aXN0aWNhbCBub3Rlcywgd2hpY2gsIGxpa2UgdGhlIHN1bW1hcmllcyBwcmVmaXhlZCB0byB0aGUgc2V2ZXJhbCBib29rcywgbXVzdCBoYXZlIGJlZW4gdGhlIGNvbnRyaWJ1dGlvbiBvZiBhIGxhdGUgZWRpdG9yLjwvbm90ZT4gYWxzbyBjYW1lIHRvIHRoZSByZXNjdWUsIGZyb20gSGFsaXNhcm5hIGFuZCBUZXV0aHJhbmlhLCB0aGUgZGVzY2VuZGFudCBvZiBEYW1hcmF0dXMuCjwvdHJhbnNsYXRpb24+"
translation['7.8.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgWGVub3Bob24gYW5kIGhpcyBtZW4sIGJ5IHRoaXMgdGltZSBzb3JlbHkgZGlzdHJlc3NlZCBieSB0aGUgYXJyb3dzIGFuZCBzbGluZy1zdG9uZXMsIGFuZCBtYXJjaGluZyBpbiBhIGN1cnZlZCBsaW5lIGluIG9yZGVyIHRvIGtlZXAgdGhlaXIgc2hpZWxkcyBmYWNpbmcgdGhlIGFycm93cywgc3VjY2VlZGVkIHdpdGggZGlmZmljdWx0eSBpbiBjcm9zc2luZyB0aGUgQ2FyY2FzdXMgcml2ZXIsIGFsbW9zdCBoYWxmIG9mIHRoZWlyIG51bWJlciB3b3VuZGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.8.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgaGVyZSB0aGF0IEFnYXNpYXMsIHRoZSBTdHltcGhhbGlhbiBjYXB0YWluLCB3YXMgd291bmRlZCwgdGhvdWdoIGhlIGNvbnRpbnVlZCB0byBmaWdodCBhbGwgdGhlIHRpbWUgYWdhaW5zdCB0aGUgZW5lbXkuIFNvIHRoZXkgY2FtZSBvdXQgb2YgaXQgaW4gc2FmZXR5LCB3aXRoIGFib3V0IHR3byBodW5kcmVkIHNsYXZlcyBhbmQgc2hlZXAgZW5vdWdoIGZvciBzYWNyaWZpY2lhbCB2aWN0aW1zLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.8.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIG5leHQgZGF5IFhlbm9waG9uIG9mZmVyZWQgc2FjcmlmaWNlLCBhbmQgdGhlbiBieSBuaWdodCBsZWQgZm9ydGggdGhlIGVudGlyZSBhcm15IHdpdGggdGhlIGludGVudGlvbiBvZiBtYWtpbmcgYXMgbG9uZyBhIG1hcmNoIGFzIHBvc3NpYmxlIHRocm91Z2ggPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2MzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjYzMSI+THlkaWE8L3BsYWNlTmFtZT4sIHRvIHRoZSBlbmQgdGhhdCBBc2lkYXRlcyBtaWdodCBub3QgYmUgZmVhcmZ1bCBvbiBhY2NvdW50IG9mIHRoZWlyIG5lYXJuZXNzLCBidXQgYmUgb2ZmIGhpcyBndWFyZC4KPC90cmFuc2xhdGlvbj4="
translation['7.8.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5Bc2lkYXRlcywgaG93ZXZlciwgaGVhcmluZyB0aGF0IFhlbm9waG9uIGhhZCBzYWNyaWZpY2VkIGFnYWluIHdpdGggYSB2aWV3IHRvIGF0dGFja2luZyBoaW0gYW5kIHRoYXQgaGUgd2FzIHRvIGNvbWUgd2l0aCB0aGUgZW50aXJlIGFybXksIGxlZnQgaGlzIHRvd2VyIGFuZCBlbmNhbXBlZCBpbiB2aWxsYWdlcyB0aGF0IGxheSBiZWxvdyB0aGUgdG93biBvZiBQYXJ0aGVuaXVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.8.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBYZW5vcGhvbiBhbmQgaGlzIG1lbiBmZWxsIGluIHdpdGggaGltLCBhbmQgdGhleSBjYXB0dXJlZCBoaW0sIGhpcyB3aWZlIGFuZCBjaGlsZHJlbiwgaGlzIGhvcnNlcywgYW5kIGFsbCB0aGF0IGhlIGhhZDsgYW5kIHRodXMgdGhlIG9tZW5zIG9mIHRoZSBlYXJsaWVyIHNhY3JpZmljZSBwcm92ZWQgdHJ1ZS4KPC90cmFuc2xhdGlvbj4="
translation['7.8.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGF0IHRoZXkgY2FtZSBiYWNrIGFnYWluIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGVyZ2Ftb24iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFBlcmdhbW9uIj5QZXJnYW11czwvcGxhY2VOYW1lPi4gQW5kIHRoZXJlIFhlbm9waG9uIHBhaWQgaGlzIGdyZWV0aW5nIHRvIHRoZSBnb2Q7IGZvciB0aGUgTGFjb25pYW5zLCB0aGUgY2FwdGFpbnMsIHRoZSBvdGhlciBnZW5lcmFscywgYW5kIHRoZSBzb2xkaWVycyBqb2luZWQgaW4gYXJyYW5naW5nIG1hdHRlcnMgc28gdGhhdCBoZSBnb3QgdGhlIHBpY2sgb2YgaG9yc2VzIGFuZCB0ZWFtcyBvZiBveGVuIGFuZCBhbGwgdGhlIHJlc3Q7IHRoZSByZXN1bHQgd2FzLCB0aGF0IGhlIHdhcyBub3cgYWJsZSBldmVuIHRvIGRvIGEga2luZG5lc3MgdG8gYW5vdGhlci4KPC90cmFuc2xhdGlvbj4="
translation['7.8.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVhbndoaWxlIFRoaWJyb24gYXJyaXZlZCBhbmQgdG9vayBvdmVyIHRoZSBhcm15LCBhbmQgdW5pdGluZyBpdCB3aXRoIHRoZSByZXN0IG9mIGhpcyBHcmVlayBmb3JjZXMsIHByb2NlZWRlZCB0byB3YWdlIHdhciB1cG9uIFRpc3NhcGhlcm5lcyBhbmQgUGhhcm5hYmF6dXMuCjwvdHJhbnNsYXRpb24+"
translation['7.8.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIE1TUy4gYWRkIHRoZSBmb2xsb3dpbmcgc3RhdGlzdGljYWwgbm90ZXMsIHdoaWNoLCBsaWtlIHRoZSBzdW1tYXJpZXMgcHJlZml4ZWQgdG8gdGhlIHNldmVyYWwgYm9va3MsIG11c3QgaGF2ZSBiZWVuIHRoZSBjb250cmlidXRpb24gb2YgYSBsYXRlIGVkaXRvci48L25vdGU+W1RoZSBnb3Zlcm5vcnMgb2YgYWxsIHRoZSBLaW5nJ3MgdGVycml0b3JpZXMgdGhhdCB3ZSB0cmF2ZXJzZWQgd2VyZSBhcyBmb2xsb3dzOiBBcnRpbWFzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NjMxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY2MzEiPkx5ZGlhPC9wbGFjZU5hbWU+LCBBcnRhY2FtYXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2MTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjYxMyI+UGhyeWdpYTwvcGxhY2VOYW1lPiwgTWl0aHJhZGF0ZXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDM3ODUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMzc4NSI+THljYW9uaWE8L3BsYWNlTmFtZT4gYW5kIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw2MDAzMDE2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDYwMDMwMTYiPkNhcHBhZG9jaWE8L3BsYWNlTmFtZT4sIFN5ZW5uZXNpcyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjQ3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNDcwIj5DaWxpY2lhPC9wbGFjZU5hbWU+LCBEZXJuZXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDQ2ODciIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwNDY4NyI+UGhvZW5pY2lhPC9wbGFjZU5hbWU+IGFuZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAxMjcwMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDEyNzAwIj5BcmFiaWE8L3BsYWNlTmFtZT4sIEJlbGVzeXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAxNDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDE0MCI+U3lyaWE8L3BsYWNlTmFtZT4gYW5kIEFzc3lyaWEsIFJob3BhcmFzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjI2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2MjYiPkJhYnlsb248L3BsYWNlTmFtZT4sIEFyYmFjYXMgb2YgTWVkaWEsIFRpcmliYXp1cyBvZiB0aGUgUGhhc2lhbnMgYW5kIEhlc3Blcml0ZXM7IHRoZW4gdGhlIENhcmR1Y2hpYW5zLCBDaGFseWJpYW5zLCBDaGFsZGFlYW5zLCBNYWNyb25pYW5zLCBDb2xjaGlhbnMsIE1vc3N5bm9lY2lhbnMsIENvZXRpYW5zLCBhbmQgVGliYXJlbmlhbnMsIHdobyB3ZXJlIGluZGVwZW5kZW50OyBhbmQgdGhlbiBDb3J5bGFzIGdvdmVybm9yIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NzYwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY3NjAiPlBhcGhsYWdvbmlhPC9wbGFjZU5hbWU+LCBQaGFybmFiYXp1cyBvZiB0aGUgQml0aHluaWFucywgYW5kIFNldXRoZXMgb2YgdGhlIFRocmFjaWFucyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwMyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDAzIj5FdXJvcGU8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
