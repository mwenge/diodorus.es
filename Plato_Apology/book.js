var translations = [];
var translatedSection = null;
var current = 0;

function updateScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  console.log(page)

  var bookmarkedPageFieldName = book + "Page";
  var bookmarkedPage = localStorage.getItem(bookmarkedPageFieldName);
  if (bookmarkedPage == null) {
    localStorage.setItem(bookmarkedPageFieldName, page);
  }

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";

  var scrollPosition = localStorage.getItem(positionOnPage);
  if (scrollPosition == null) {
    scrollPosition = window.pageYOffset;
    localStorage.setItem(positionOnPage, scrollPosition);
    return;
  }

  if (bookmarkedPage == page) {
    window.scrollTo(0, scrollPosition)
    return;
  }
  window.location = bookmarkedPage;
}

function storeScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  localStorage.setItem(book + "Page", page);

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";
  scrollPosition = window.pageYOffset;
  localStorage.setItem(positionOnPage, scrollPosition);
}

function showNextOnHelper(evt) {
  current++;
  if (current > translations.length - 1) {
    current = 0;
  }
  var translation = translations[current];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = (current + 1) + "/" + translations.length;
    helper.appendChild(transCount);
  }
}

function updateHelper(evt, lineNumber, translationsForWord) {
  if (typeof updateHelper.currentWord === 'object') {
    updateHelper.currentWord.style.textDecoration = "none";
  }
  
  if (evt.target == updateHelper.currentWord) {
    displayTranslation(lineNumber);
    return;
  }

  evt.target.style.textDecoration = "underline red";
  updateHelper.currentWord = evt.target;

  if (typeof updateHelper.previousCommentBubble === 'object' 
      && updateHelper.previousCommentBubble != null) {
    updateHelper.previousCommentBubble.style.display = "none";
  }
  var commentBubble = document.getElementById("indicator-" + lineNumber);
  if (commentBubble != null) {
    commentBubble.style.display = "inline";
  }
  updateHelper.previousCommentBubble = commentBubble;

  showTitle(lineNumber);

  translations = translationsForWord;
  var translation = translations[0];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  helper.style.display = "block";

  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = "1/" + translations.length;
    helper.appendChild(transCount);
  }

  storeScrollPosition();
}

function showTitle(lineNumber) {
  if (Array.isArray(lineNumber)) {
    lineNumber = lineNumber[0];
  }
  lineNumber = lineNumber.replace(/\./g, '');
  var page = parseInt(parseInt(lineNumber, 10) / 100, 10);
  if (isNaN(page)) {
    return;
  }
  var result = page % 2;
  
  var titleToShow = titleElements[result];
  var innerHTML = "<span class=\"title\">" + titleToShow + "</span>";
  masthead.innerHTML = innerHTML;
}

function displayTranslation(refs) {
  if (translatedSection) {
    for (var i = 0; i < translatedSection.length; i++) {
        translatedSection[i].style.backgroundColor = "";
    }
  }
  translatedSection = null;
  for (var i = 0; i < refs.length; i++) {
    var ref = refs[i];
    translatedSection = document.getElementsByClassName(ref);
    if (translatedSection)
      break;
  }
  if (!translatedSection) {
    return;
  }
  if (!translation.hasOwnProperty(ref)) {
    return;
  }
  for (var i = 0; i < translatedSection.length; i++) {
      translatedSection[i].style.backgroundColor = "yellow";
  }
  parallel_translation.innerHTML = atobUTF8(translation[ref]);
  parallel_translation.style.display = "block";
}

function hideTranslation() {
  for (var i = 0; i < translatedSection.length; i++) {
      translatedSection[i].style.backgroundColor = "";
  }
  parallel_translation.style.display = "none";
}


function displayComment(line) {
  comment.innerHTML = atobUTF8(commentary[line]);
  comment.style.display = "block";
}

function hideComment() {
  comment.style.display = "none";
}

if ('serviceWorker' in navigator) {
  window.addEventListener('load', function() {
    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {
      // Registration was successful
      console.log('ServiceWorker registration successful with scope: ', registration.scope);
    }, function(err) {
      // registration failed :(
      console.log('ServiceWorker registration failed: ', err);
    });
  });
}

window.onload = updateScrollPosition;
var translation={}
var translation={}
translation['16.16a.1'] = ""
translation['35.35d.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTdhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz48cCBjbGFzcz0idHJhbnNsYXRpb24iPkhvdyB5b3UsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIGhhdmUgYmVlbiBhZmZlY3RlZCBieSBteSBhY2N1c2VycywgSSBkbyBub3Qga25vdzsgIGJ1dCBJLCBmb3IgbXkgcGFydCwgYWxtb3N0IGZvcmdvdCBteSBvd24gaWRlbnRpdHksIHNvIHBlcnN1YXNpdmVseSBkaWQgdGhleSB0YWxrOyAgYW5kIHlldCB0aGVyZSBpcyBoYXJkbHkgYSB3b3JkIG9mIHRydXRoIGluIHdoYXQgdGhleSBoYXZlIHNhaWQuICBCdXQgSSB3YXMgbW9zdCBhbWF6ZWQgYnkgb25lIG9mIHRoZSBtYW55IGxpZXMgdGhhdCB0aGV5IHRvbGTigJR3aGVuIHRoZXkgc2FpZCB0aGF0IHlvdSBtdXN0IGJlIG9uIHlvdXIgZ3VhcmQgbm90IHRvIGJlIGRlY2VpdmVkIGJ5IG1lLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTdiIiB1bml0PSJzZWN0aW9uIiAvPmJlY2F1c2UgSSB3YXMgYSBjbGV2ZXIgc3BlYWtlci4gIEZvciBJIHRob3VnaHQgaXQgdGhlIG1vc3Qgc2hhbWVsZXNzIHBhcnQgb2YgdGhlaXIgY29uZHVjdCB0aGF0IHRoZXkgYXJlIG5vdCBhc2hhbWVkIGJlY2F1c2UgdGhleSB3aWxsIGltbWVkaWF0ZWx5IGJlIGNvbnZpY3RlZCBieSBtZSBvZiBmYWxzZWhvb2QgYnkgdGhlIGV2aWRlbmNlIG9mIGZhY3QsIHdoZW4gSSBzaG93IG15c2VsZiB0byBiZSBub3QgaW4gdGhlIGxlYXN0IGEgY2xldmVyIHNwZWFrZXIsIHVubGVzcyBpbmRlZWQgdGhleSBjYWxsIGhpbSBhIGNsZXZlciBzcGVha2VyIHdobyBzcGVha3MgdGhlIHRydXRoOyAgZm9yIGlmIHRoaXMgaXMgd2hhdCB0aGV5IG1lYW4sIEkgd291bGQgYWdyZWUgdGhhdCBJIGFtIGFuIG9yYXRvcuKAlG5vdCBhZnRlciB0aGVpciBmYXNoaW9uLiAgTm93IHRoZXksIGFzIEkgc2F5LCBoYXZlIHNhaWQgbGl0dGxlIG9yIG5vdGhpbmcgdHJ1ZTsgIGJ1dCB5b3Ugc2hhbGwgaGVhciBmcm9tIG1lIG5vdGhpbmcgYnV0IHRoZSB0cnV0aC4gIE5vdCwgaG93ZXZlciwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgc3BlZWNoZXMgZmluZWx5IHRyaWNrZWQgb3V0IHdpdGggd29yZHMgYW5kIHBocmFzZXMsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxN2MiIHVuaXQ9InNlY3Rpb24iIC8+YXMgdGhlaXJzIGFyZSwgbm9yIGNhcmVmdWxseSBhcnJhbmdlZCwgYnV0IHlvdSB3aWxsIGhlYXIgdGhpbmdzIHNhaWQgYXQgcmFuZG9tIHdpdGggdGhlIHdvcmRzIHRoYXQgaGFwcGVuIHRvIG9jY3VyIHRvIG1lLiAgRm9yIEkgdHJ1c3QgdGhhdCB3aGF0IEkgc2F5IGlzIGp1c3Q7ICBhbmQgbGV0IG5vbmUgb2YgeW91IGV4cGVjdCBhbnl0aGluZyBlbHNlLiAgRm9yIHN1cmVseSBpdCB3b3VsZCBub3QgYmUgZml0dGluZyBmb3Igb25lIG9mIG15IGFnZSB0byBjb21lIGJlZm9yZSB5b3UgbGlrZSBhIHlvdW5nc3RlciBtYWtpbmcgdXAgc3BlZWNoZXMuICBBbmQsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIEkgdXJnZW50bHkgYmVnIGFuZCBiZXNlZWNoIHlvdSBpZiB5b3UgaGVhciBtZSBtYWtpbmcgbXkgZGVmZW5jZSB3aXRoIHRoZSBzYW1lIHdvcmRzIHdpdGggd2hpY2ggSSBoYXZlIGJlZW4gYWNjdXN0b21lZCB0byBzcGVhayBib3RoIGluIHRoZSBtYXJrZXQgcGxhY2UgYXQgdGhlIGJhbmtlcnMgdGFibGVzLCB3aGVyZSBtYW55IG9mIHlvdSBoYXZlIGhlYXJkIG1lLCBhbmQgZWxzZXdoZXJlLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTdkIiB1bml0PSJzZWN0aW9uIiAvPm5vdCB0byBiZSBzdXJwcmlzZWQgb3IgdG8gbWFrZSBhIGRpc3R1cmJhbmNlIG9uIHRoaXMgYWNjb3VudC4gIEZvciB0aGUgZmFjdCBpcyB0aGF0IHRoaXMgaXMgdGhlIGZpcnN0IHRpbWUgSSBoYXZlIGNvbWUgYmVmb3JlIHRoZSBjb3VydCwgYWx0aG91Z2ggSSBhbSBzZXZlbnR5IHllYXJzIG9sZDsgIEkgYW0gdGhlcmVmb3JlIGFuIHV0dGVyIGZvcmVpZ25lciB0byB0aGUgbWFubmVyIG9mIHNwZWVjaCBoZXJlLiAgSGVuY2UsIGp1c3QgYXMgeW91IHdvdWxkLCBvZiBjb3Vyc2UsIGlmIEkgd2VyZSByZWFsbHkgYSBmb3JlaWduZXIsIHBhcmRvbiBtZSBpZiBJIHNwb2tlIGluIHRoYXQgZGlhbGVjdCBhbmQgdGhhdCBtYW5uZXIKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE4IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOGEiIHVuaXQ9InNlY3Rpb24iIC8+aW4gd2hpY2ggSSBoYWQgYmVlbiBicm91Z2h0IHVwLCBzbyBub3cgSSBtYWtlIHRoaXMgcmVxdWVzdCBvZiB5b3UsIGEgZmFpciBvbmUsIGFzIGl0IHNlZW1zIHRvIG1lLCB0aGF0IHlvdSBkaXNyZWdhcmQgdGhlIG1hbm5lciBvZiBteSBzcGVlY2jigJRmb3IgcGVyaGFwcyBpdCBtaWdodCBiZSB3b3JzZSBhbmQgcGVyaGFwcyBiZXR0ZXLigJRhbmQgb2JzZXJ2ZSBhbmQgcGF5IGF0dGVudGlvbiBtZXJlbHkgdG8gdGhpcywgd2hldGhlciB3aGF0IEkgc2F5IGlzIGp1c3Qgb3Igbm90OyAgZm9yIHRoYXQgaXMgdGhlIHZpcnR1ZSBvZiBhIGp1ZGdlLCBhbmQgYW4gb3JhdG9yJ3MgdmlydHVlIGlzIHRvIHNwZWFrIHRoZSB0cnV0aC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Rmlyc3QgdGhlbiBpdCBpcyByaWdodCBmb3IgbWUgdG8gZGVmZW5kIG15c2VsZiBhZ2FpbnN0IHRoZSBmaXJzdCBmYWxzZSBhY2N1c2F0aW9ucyBicm91Z2h0IGFnYWluc3QgbWUsIGFuZCB0aGUgZmlyc3QgYWNjdXNlcnMsIGFuZCB0aGVuIGFnYWluc3QgdGhlIGxhdGVyIGFjY3VzYXRpb25zIGFuZCB0aGUgbGF0ZXIgYWNjdXNlcnMuIAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMThiIiB1bml0PSJzZWN0aW9uIiAvPkZvciBtYW55IGFjY3VzZXJzIGhhdmUgcmlzZW4gdXAgYWdhaW5zdCBtZSBiZWZvcmUgeW91LCB3aG8gaGF2ZSBiZWVuIHNwZWFraW5nIGZvciBhIGxvbmcgdGltZSwgbWFueSB5ZWFycyBhbHJlYWR5LCBhbmQgc2F5aW5nIG5vdGhpbmcgdHJ1ZTsgIGFuZCBJIGZlYXIgdGhlbSBtb3JlIHRoYW4gQW55dHVzIGFuZCB0aGUgcmVzdCwgdGhvdWdoIHRoZXNlIGFsc28gYXJlIGRhbmdlcm91czsgIGJ1dCB0aG9zZSBvdGhlcnMgYXJlIG1vcmUgZGFuZ2Vyb3VzLCBnZW50bGVtZW4sIHdobyBnYWluZWQgeW91ciBiZWxpZWYsIHNpbmNlIHRoZXkgZ290IGhvbGQgb2YgbW9zdCBvZiB5b3UgaW4gY2hpbGRob29kLCBhbmQgYWNjdXNlZCBtZSB3aXRob3V0IGFueSB0cnV0aCwgc2F5aW5nLCDigJxUaGVyZSBpcyBhIGNlcnRhaW4gU29jcmF0ZXMsIGEgd2lzZSBtYW4sIGEgcG9uZGVyZXIgb3ZlciB0aGUgdGhpbmdzIGluIHRoZSBhaXIgYW5kIG9uZSB3aG8gaGFzIGludmVzdGlnYXRlZCB0aGUgdGhpbmdzIGJlbmVhdGggdGhlIGVhcnRoIGFuZCB3aG8gbWFrZXMgdGhlIHdlYWtlciBhcmd1bWVudCB0aGUgc3Ryb25nZXIu4oCdICBUaGVzZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE4YyIgdW5pdD0ic2VjdGlvbiIgLz53aG8gaGF2ZSBzcHJlYWQgYWJyb2FkIHRoaXMgcmVwb3J0LCBhcmUgbXkgZGFuZ2Vyb3VzIGVuZW1pZXMuICBGb3IgdGhvc2Ugd2hvIGhlYXIgdGhlbSB0aGluayB0aGF0IG1lbiB3aG8gaW52ZXN0aWdhdGUgdGhlc2UgbWF0dGVycyBkbyBub3QgZXZlbiBiZWxpZXZlIGluIGdvZHMuICBCZXNpZGVzLCB0aGVzZSBhY2N1c2VycyBhcmUgbWFueSBhbmQgaGF2ZSBiZWVuIG1ha2luZyB0aGVpciBhY2N1c2F0aW9ucyBhbHJlYWR5IGZvciBhIGxvbmcgdGltZSwgYW5kIG1vcmVvdmVyIHRoZXkgc3Bva2UgdG8geW91IGF0IGFuIGFnZSBhdCB3aGljaCB5b3Ugd291bGQgYmVsaWV2ZSB0aGVtIG1vc3QgcmVhZGlseSAoc29tZSBvZiB5b3UgaW4geW91dGgsIG1vc3Qgb2YgeW91IGluIGNoaWxkaG9vZCksIGFuZCB0aGUgY2FzZSB0aGV5IHByb3NlY3V0ZWQgd2VudCB1dHRlcmx5IGJ5IGRlZmF1bHQsIHNpbmNlIG5vYm9keSBhcHBlYXJlZCBpbiBkZWZlbmNlLiAgQnV0IHRoZSBtb3N0IHVucmVhc29uYWJsZSB0aGluZyBvZiBhbGwgaXMgdGhpcywgdGhhdCBpdCBpcyBub3QgZXZlbiBwb3NzaWJsZQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMThkIiB1bml0PSJzZWN0aW9uIiAvPnRvIGtub3cgYW5kIHNwZWFrIHRoZWlyIG5hbWVzLCBleGNlcHQgd2hlbiBvbmUgb2YgdGhlbSBoYXBwZW5zIHRvIGJlIGEgd3JpdGVyIG9mIGNvbWVkaWVzLiAgQW5kIGFsbCB0aG9zZSB3aG8gcGVyc3VhZGVkIHlvdSBieSBtZWFucyBvZiBlbnZ5IGFuZCBzbGFuZGVy4oCUYW5kIHNvbWUgYWxzbyBwZXJzdWFkZWQgb3RoZXJzIGJlY2F1c2UgdGhleSBoYWQgYmVlbiB0aGVtc2VsdmVzIHBlcnN1YWRlZOKAlGFsbCB0aGVzZSBhcmUgbW9zdCBkaWZmaWN1bHQgdG8gY29wZSB3aXRoOyAgZm9yIGl0IGlzIG5vdCBldmVuIHBvc3NpYmxlIHRvIGNhbGwgYW55IG9mIHRoZW0gdXAgaGVyZSBhbmQgY3Jvc3MtcXVlc3Rpb24gaGltLCBidXQgSSBhbSBjb21wZWxsZWQgaW4gbWFraW5nIG15IGRlZmVuY2UgdG8gZmlnaHQsIGFzIGl0IHdlcmUsIGFic29sdXRlbHkgd2l0aCBzaGFkb3dzIGFuZCB0byBjcm9zcy1xdWVzdGlvbiB3aGVuIG5vYm9keSBhbnN3ZXJzLiAgQmUga2luZCBlbm91Z2gsIHRoZW4sIHRvIGJlYXIgaW4gbWluZCwgYXMgSSBzYXksIHRoYXQgdGhlcmUgYXJlIHR3byBjbGFzc2VzCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOGUiIHVuaXQ9InNlY3Rpb24iIC8+b2YgbXkgYWNjdXNlcnPigJRvbmUgdGhvc2Ugd2hvIGhhdmUganVzdCBicm91Z2h0IHRoZWlyIGFjY3VzYXRpb24sIHRoZSBvdGhlciB0aG9zZSB3aG8sIGFzIEkgd2FzIGp1c3Qgc2F5aW5nLCBicm91Z2h0IGl0IGxvbmcgYWdvLCBhbmQgY29uc2lkZXIgdGhhdCBJIG11c3QgZGVmZW5kIG15c2VsZiBmaXJzdCBhZ2FpbnN0IHRoZSBsYXR0ZXI7ICBmb3IgeW91IGhlYXJkIHRoZW0gbWFraW5nIHRoZWlyIGNoYXJnZXMgZmlyc3QgYW5kIHdpdGggbXVjaCBncmVhdGVyIGZvcmNlIHRoYW4gdGhlc2Ugd2hvIG1hZGUgdGhlbSBsYXRlci4gIFdlbGwsIHRoZW4sIEkgbXVzdCBtYWtlIGEgZGVmZW5jZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE5IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOWEiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIG11c3QgdHJ5IGluIHNvIHNob3J0IGEgdGltZSB0byByZW1vdmUgZnJvbSB5b3UgdGhpcyBwcmVqdWRpY2Ugd2hpY2ggeW91IGhhdmUgYmVlbiBmb3Igc28gbG9uZyBhIHRpbWUgYWNxdWlyaW5nLiAgTm93IEkgd2lzaCB0aGF0IHRoaXMgbWlnaHQgdHVybiBvdXQgc28sIGlmIGl0IGlzIGJldHRlciBmb3IgeW91IGFuZCBmb3IgbWUsIGFuZCB0aGF0IEkgbWlnaHQgc3VjY2VlZCB3aXRoIG15IGRlZmVuY2U7ICBidXQgSSB0aGluayBpdCBpcyBkaWZmaWN1bHQsIGFuZCBJIGFtIG5vdCBhdCBhbGwgZGVjZWl2ZWQgYWJvdXQgaXRzIG5hdHVyZS4gIEJ1dCBuZXZlcnRoZWxlc3MsIGxldCB0aGlzIGJlIGFzIGlzIHBsZWFzaW5nIHRvIEdvZCwgdGhlIGxhdyBtdXN0IGJlIG9iZXllZCBhbmQgSSBtdXN0IG1ha2UgYSBkZWZlbmNlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgbGV0IHVzIHRha2UgdXAgZnJvbSB0aGUgYmVnaW5uaW5nIHRoZSBxdWVzdGlvbiwgd2hhdCB0aGUgYWNjdXNhdGlvbiBpcyBmcm9tIHdoaWNoIHRoZSBmYWxzZSBwcmVqdWRpY2UgYWdhaW5zdCBtZSBoYXMgYXJpc2VuLCBpbiB3aGljaAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTliIiB1bml0PSJzZWN0aW9uIiAvPk1lbGV0dXMgdHJ1c3RlZCB3aGVuIGhlIGJyb3VnaHQgdGhpcyBzdWl0IGFnYWluc3QgbWUuICBXaGF0IGRpZCB0aG9zZSB3aG8gYXJvdXNlZCB0aGUgcHJlanVkaWNlIHNheSB0byBhcm91c2UgaXQ/ICBJIG11c3QsIGFzIGl0IHdlcmUsIHJlYWQgdGhlaXIgc3dvcm4gc3RhdGVtZW50IGFzIGlmIHRoZXkgd2VyZSBwbGFpbnRpZmZzOiAg4oCcU29jcmF0ZXMgaXMgYSBjcmltaW5hbCBhbmQgYSBidXN5Ym9keSwgaW52ZXN0aWdhdGluZyB0aGUgdGhpbmdzIGJlbmVhdGggdGhlIGVhcnRoIGFuZCBpbiB0aGUgaGVhdmVucyBhbmQgbWFraW5nIHRoZSB3ZWFrZXIgYXJndW1lbnQgc3Ryb25nZXIgYW5kCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOWMiIHVuaXQ9InNlY3Rpb24iIC8+dGVhY2hpbmcgb3RoZXJzIHRoZXNlIHNhbWUgdGhpbmdzLuKAnSAgU29tZXRoaW5nIG9mIHRoYXQgc29ydCBpdCBpcy4gIEZvciB5b3UgeW91cnNlbHZlcyBzYXcgdGhlc2UgdGhpbmdzIGluIEFyaXN0b3BoYW5lcycgY29tZWR5LCBhIFNvY3JhdGVzIGJlaW5nIGNhcnJpZWQgYWJvdXQgdGhlcmUsIHByb2NsYWltaW5nIHRoYXQgaGUgd2FzIHRyZWFkaW5nIG9uIGFpciBhbmQgdXR0ZXJpbmcgYSB2YXN0IGRlYWwgb2Ygb3RoZXIgbm9uc2Vuc2UsIGFib3V0IHdoaWNoIEkga25vdyBub3RoaW5nLCBlaXRoZXIgbXVjaCBvciBsaXR0bGUuICBBbmQgSSBzYXkgdGhpcywgbm90IHRvIGNhc3QgZGlzaG9ub3IgdXBvbiBzdWNoIGtub3dsZWRnZSwgaWYgYW55b25lIGlzIHdpc2UgYWJvdXQgc3VjaCBtYXR0ZXJzIChtYXkgSSBuZXZlciBoYXZlIHRvIGRlZmVuZCBteXNlbGYgYWdhaW5zdCBNZWxldHVzIG9uIHNvIGdyZWF0IGEgY2hhcmdlIGFzIHRoYXQhKSzigJRidXQgSSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgaGF2ZSBub3RoaW5nIHRvIGRvIHdpdGggdGhlc2UgdGhpbmdzLiAKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE5ZCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgSSBvZmZlciBhcyB3aXRuZXNzZXMgbW9zdCBvZiB5b3Vyc2VsdmVzLCBhbmQgSSBhc2sgeW91IHRvIGluZm9ybSBvbmUgYW5vdGhlciBhbmQgdG8gdGVsbCwgYWxsIHRob3NlIG9mIHlvdSB3aG8gZXZlciBoZWFyZCBtZSBjb252ZXJzaW5n4oCUYW5kIHRoZXJlIGFyZSBtYW55IHN1Y2ggYW1vbmcgeW914oCUbm93IHRlbGwsIGlmIGFueW9uZSBldmVyIGhlYXJkIG1lIHRhbGtpbmcgbXVjaCBvciBsaXR0bGUgYWJvdXQgc3VjaCBtYXR0ZXJzLiAgQW5kIGZyb20gdGhpcyB5b3Ugd2lsbCBwZXJjZWl2ZSB0aGF0IHN1Y2ggYXJlIGFsc28gdGhlIG90aGVyIHRoaW5ncyB0aGF0IHRoZSBtdWx0aXR1ZGUgc2F5IGFib3V0IG1lLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgaW4gZmFjdCBub25lIG9mIHRoZXNlIHRoaW5ncyBhcmUgdHJ1ZSwgYW5kIGlmIHlvdSBoYXZlIGhlYXJkIGZyb20gYW55b25lIHRoYXQgSSB1bmRlcnRha2UgdG8gdGVhY2gKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE5ZSIgdW5pdD0ic2VjdGlvbiIgLz5wZW9wbGUgYW5kIHRoYXQgSSBtYWtlIG1vbmV5IGJ5IGl0LCB0aGF0IGlzIG5vdCB0cnVlIGVpdGhlci4gIEFsdGhvdWdoIHRoaXMgYWxzbyBzZWVtcyB0byBtZSB0byBiZSBhIGZpbmUgdGhpbmcsIGlmIG9uZSBtaWdodCBiZSBhYmxlIHRvIHRlYWNoIHBlb3BsZSwgYXMgR29yZ2lhcyBvZiBMZW9udGluaSBhbmQgUHJvZGljdXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTA4NjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMDg2NyI+Q2VvczwvcGxhY2VOYW1lPiBhbmQgSGlwcGlhcyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEVsaXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEVsaXMiPkVsaXM8L3BsYWNlTmFtZT4gYXJlLiAgRm9yIGVhY2ggb2YgdGhlc2UgbWVuLCBnZW50bGVtZW4sIGlzIGFibGUgdG8gZ28gaW50byBhbnkgb25lIG9mIHRoZSBjaXRpZXMgYW5kIHBlcnN1YWRlIHRoZSB5b3VuZyBtZW4sIHdobyBjYW4gYXNzb2NpYXRlIGZvciBub3RoaW5nIHdpdGggd2hvbXNvZXZlciB0aGV5IHdpc2ggYW1vbmcgdGhlaXIgb3duIGZlbGxvdyBjaXRpemVucywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIwIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMGEiIHVuaXQ9InNlY3Rpb24iIC8+dG8gZ2l2ZSB1cCB0aGUgYXNzb2NpYXRpb24gd2l0aCB0aG9zZSBtZW4gYW5kIHRvIGFzc29jaWF0ZSB3aXRoIHRoZW0gYW5kIHBheSB0aGVtIG1vbmV5IGFuZCBiZSBncmF0ZWZ1bCBiZXNpZGVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgdGhlcmUgaXMgYWxzbyBhbm90aGVyIHdpc2UgbWFuIGhlcmUsIGEgUGFyaWFuLCB3aG8gSSBsZWFybmVkIHdhcyBpbiB0b3duOyAgZm9yIEkgaGFwcGVuZWQgdG8gbWVldCBhIG1hbiB3aG8gaGFzIHNwZW50IG1vcmUgb24gc29waGlzdHMgdGhhbiBhbGwgdGhlIHJlc3QsIENhbGxpYXMsIHRoZSBzb24gb2YgSGlwcG9uaWN1czsgIHNvIEkgYXNrZWQgaGlt4oCUZm9yIGhlIGhhcyB0d28gc29uc+KAlOKAnENhbGxpYXMs4oCdIHNhaWQgSSwg4oCcaWYgeW91ciB0d28gc29ucyBoYWQgaGFwcGVuZWQgdG8gYmUgdHdvIGNvbHRzIG9yIHR3byBjYWx2ZXMsIHdlIHNob3VsZCBiZSBhYmxlIHRvIGdldCBhbmQgaGlyZSBmb3IgdGhlbSBhbiBvdmVyc2VlciB3aG8gd291bGQgbWFrZSB0aGVtCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMGIiIHVuaXQ9InNlY3Rpb24iIC8+ZXhjZWxsZW50IGluIHRoZSBraW5kIG9mIGV4Y2VsbGVuY2UgcHJvcGVyIHRvIHRoZW07ICBhbmQgaGUgd291bGQgYmUgYSBob3JzZS10cmFpbmVyIG9yIGEgaHVzYmFuZG1hbjsgIGJ1dCBub3csIHNpbmNlIHRoZXkgYXJlIHR3byBodW1hbiBiZWluZ3MsIHdob20gaGF2ZSB5b3UgaW4gbWluZCB0byBnZXQgYXMgb3ZlcnNlZXI/ICBXaG8gaGFzIGtub3dsZWRnZSBvZiB0aGF0IGtpbmQgb2YgZXhjZWxsZW5jZSwgdGhhdCBvZiBhIG1hbiBhbmQgYSBjaXRpemVuPyAgRm9yIEkgdGhpbmsgeW91IGhhdmUgbG9va2VkIGludG8gdGhlIG1hdHRlciwgYmVjYXVzZSB5b3UgaGF2ZSB0aGUgc29ucy4gIElzIHRoZXJlIGFueW9uZSzigJ0gc2FpZCBJLCDigJxvciBub3Q/4oCdICDigJxDZXJ0YWlubHks4oCdIHNhaWQgaGUuICDigJxXaG8s4oCdIHNhaWQgSSwg4oCcYW5kIHdoZXJlIGZyb20sIGFuZCB3aGF0IGlzIGhpcyBwcmljZSBmb3IgaGlzIHRlYWNoaW5nP+KAnSAg4oCcRXZlbnVzLOKAnSBoZSBzYWlkLCDigJxTb2NyYXRlcywgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTAyMyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMDIzIj5QYXJvczwvcGxhY2VOYW1lPiwgZml2ZSBtaW5hZS7igJ0gIEFuZCBJIGNhbGxlZCBFdmVudXMgYmxlc3NlZCwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIwYyIgdW5pdD0ic2VjdGlvbiIgLz5pZiBoZSByZWFsbHkgaGFkIHRoaXMgYXJ0IGFuZCB0YXVnaHQgc28gcmVhc29uYWJseS4gIEkgbXlzZWxmIHNob3VsZCBiZSB2YWluIGFuZCBwdXQgb24gYWlycywgaWYgSSB1bmRlcnN0b29kIHRoZXNlIHRoaW5nczsgIGJ1dCBJIGRvIG5vdCB1bmRlcnN0YW5kIHRoZW0sIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBwZXJoYXBzIHNvbWVvbmUgbWlnaHQgcmVqb2luOiAg4oCcQnV0LCBTb2NyYXRlcywgd2hhdCBpcyB0aGUgdHJvdWJsZSBhYm91dCB5b3U/ICBXaGVuY2UgaGF2ZSB0aGVzZSBwcmVqdWRpY2VzIGFnYWluc3QgeW91IGFyaXNlbj8gIEZvciBjZXJ0YWlubHkgdGhpcyBncmVhdCByZXBvcnQgYW5kIHRhbGsgaGFzIG5vdCBhcmlzZW4gd2hpbGUgeW91IHdlcmUgZG9pbmcgbm90aGluZyBtb3JlIG91dCBvZiB0aGUgd2F5IHRoYW4gdGhlIHJlc3QsIHVubGVzcyB5b3Ugd2VyZSBkb2luZyBzb21ldGhpbmcgb3RoZXIgdGhhbiBtb3N0IHBlb3BsZTsgIHNvIHRlbGwgdXMKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIwZCIgdW5pdD0ic2VjdGlvbiIgLz53aGF0IGl0IGlzLCB0aGF0IHdlIG1heSBub3QgYWN0IHVuYWR2aXNlZGx5IGluIHlvdXIgY2FzZS7igJ0gIFRoZSBtYW4gd2hvIHNheXMgdGhpcyBzZWVtcyB0byBtZSB0byBiZSByaWdodCwgYW5kIEkgd2lsbCB0cnkgdG8gc2hvdyB5b3Ugd2hhdCBpdCBpcyB0aGF0IGhhcyBicm91Z2h0IGFib3V0IG15IHJlcHV0YXRpb24gYW5kIGFyb3VzZWQgdGhlIHByZWp1ZGljZSBhZ2FpbnN0IG1lLiAgU28gbGlzdGVuLiAgQW5kIHBlcmhhcHMgSSBzaGFsbCBzZWVtIHRvIHNvbWUgb2YgeW91IHRvIGJlIGpva2luZzsgIGJlIGFzc3VyZWQsIGhvd2V2ZXIsIEkgc2hhbGwgc3BlYWsgcGVyZmVjdCB0cnV0aCB0byB5b3UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBmYWN0IGlzLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB0aGF0IEkgaGF2ZSBhY3F1aXJlZCB0aGlzIHJlcHV0YXRpb24gb24gYWNjb3VudCBvZiBub3RoaW5nIGVsc2UgdGhhbiBhIHNvcnQgb2Ygd2lzZG9tLiAgV2hhdCBraW5kIG9mIHdpc2RvbSBpcyB0aGlzPyAgSnVzdCB0aGF0IHdoaWNoIGlzIHBlcmhhcHMgaHVtYW4gd2lzZG9tLiAgRm9yIHBlcmhhcHMgSSByZWFsbHkgYW0gd2lzZSBpbiB0aGlzIHdpc2RvbTsgIGFuZCB0aGVzZSBtZW4sIHBlcmhhcHMsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMGUiIHVuaXQ9InNlY3Rpb24iIC8+b2Ygd2hvbSBJIHdhcyBqdXN0IHNwZWFraW5nLCBtaWdodCBiZSB3aXNlIGluIHNvbWUgd2lzZG9tIGdyZWF0ZXIgdGhhbiBodW1hbiwgb3IgSSBkb24ndCBrbm93IHdoYXQgdG8gc2F5OyAgZm9yIEkgZG8gbm90IHVuZGVyc3RhbmQgaXQsIGFuZCB3aG9ldmVyIHNheXMgSSBkbywgaXMgbHlpbmcgYW5kIHNwZWFraW5nIHRvIGFyb3VzZSBwcmVqdWRpY2UgYWdhaW5zdCBtZS4gIEFuZCwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgZG8gbm90IGludGVycnVwdCBtZSB3aXRoIG5vaXNlLCBldmVuIGlmIEkgc2VlbSB0byB5b3UgdG8gYmUgYm9hc3Rpbmc7ICBmb3IgdGhlIHdvcmQgd2hpY2ggSSBzcGVhayBpcyBub3QgbWluZSwgYnV0IHRoZSBzcGVha2VyIHRvIHdob20gSSBzaGFsbCByZWZlciBpdCBpcyBhIHBlcnNvbiBvZiB3ZWlnaHQuICBGb3Igb2YgbXkgd2lzZG9t4oCUaWYgaXQgaXMgd2lzZG9tIGF0IGFsbOKAlGFuZCBvZiBpdHMgbmF0dXJlLCBJIHdpbGwgb2ZmZXIgeW91IHRoZSBnb2Qgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxEZWxwaGkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERlbHBoaSI+RGVscGhpPC9wbGFjZU5hbWU+IGFzIGEgd2l0bmVzcy4gIFlvdSBrbm93IENoYWVyZXBob24sIEkgZmFuY3kuIAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjEiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIxYSIgdW5pdD0ic2VjdGlvbiIgLz5IZSB3YXMgbXkgY29tcmFkZSBmcm9tIGEgeW91dGggYW5kIHRoZSBjb21yYWRlIG9mIHlvdXIgZGVtb2NyYXRpYyBwYXJ0eSwgYW5kIHNoYXJlZCBpbiB0aGUgcmVjZW50IGV4aWxlIGFuZCBjYW1lIGJhY2sgd2l0aCB5b3UuICBBbmQgeW91IGtub3cgdGhlIGtpbmQgb2YgbWFuIENoYWVyZXBob24gd2FzLCBob3cgaW1wZXR1b3VzIGluIHdoYXRldmVyIGhlIHVuZGVydG9vay4gIFdlbGwsIG9uY2UgaGUgd2VudCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERlbHBoaSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRGVscGhpIj5EZWxwaGk8L3BsYWNlTmFtZT4gYW5kIG1hZGUgc28gYm9sZCBhcyB0byBhc2sgdGhlIG9yYWNsZSB0aGlzIHF1ZXN0aW9uOyAgYW5kLCBnZW50bGVtZW4sIGRvbid0IG1ha2UgYSBkaXN0dXJiYW5jZSBhdCB3aGF0IEkgc2F5OyAgZm9yIGhlIGFza2VkIGlmIHRoZXJlIHdlcmUgYW55b25lIHdpc2VyIHRoYW4gSS4gIE5vdyB0aGUgUHl0aGlhIHJlcGxpZWQgdGhhdCB0aGVyZSB3YXMgbm8gb25lIHdpc2VyLiAgQW5kIGFib3V0IHRoZXNlIHRoaW5ncyBoaXMgYnJvdGhlciBoZXJlIHdpbGwgYmVhciB5b3Ugd2l0bmVzcywgc2luY2UgQ2hhZXJlcGhvbiBpcyBkZWFkLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjFiIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgc2VlIHdoeSBJIHNheSB0aGVzZSB0aGluZ3M7ICBmb3IgSSBhbSBnb2luZyB0byB0ZWxsIHlvdSB3aGVuY2UgdGhlIHByZWp1ZGljZSBhZ2FpbnN0IG1lIGhhcyBhcmlzZW4uICBGb3Igd2hlbiBJIGhlYXJkIHRoaXMsIEkgdGhvdWdodCB0byBteXNlbGY6ICDigJxXaGF0IGluIHRoZSB3b3JsZCBkb2VzIHRoZSBnb2QgbWVhbiwgYW5kIHdoYXQgcmlkZGxlIGlzIGhlIHByb3BvdW5kaW5nPyAgRm9yIEkgYW0gY29uc2Npb3VzIHRoYXQgSSBhbSBub3Qgd2lzZSBlaXRoZXIgbXVjaCBvciBsaXR0bGUuICBXaGF0IHRoZW4gZG9lcyBoZSBtZWFuIGJ5IGRlY2xhcmluZyB0aGF0IEkgYW0gdGhlIHdpc2VzdD8gIEhlIGNlcnRhaW5seSBjYW5ub3QgYmUgbHlpbmcsIGZvciB0aGF0IGlzIG5vdCBwb3NzaWJsZSBmb3IgaGltLuKAnSAgQW5kIGZvciBhIGxvbmcgdGltZSBJIHdhcyBhdCBhIGxvc3MgYXMgdG8gd2hhdCBoZSBtZWFudDsgIHRoZW4gd2l0aCBncmVhdCByZWx1Y3RhbmNlIEkgcHJvY2VlZGVkIHRvIGludmVzdGlnYXRlIGhpbSBzb21ld2hhdCBhcyBmb2xsb3dzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHdlbnQgdG8gb25lIG9mIHRob3NlIHdobyBoYWQgYSByZXB1dGF0aW9uIGZvciB3aXNkb20sCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMWMiIHVuaXQ9InNlY3Rpb24iIC8+dGhpbmtpbmcgdGhhdCB0aGVyZSwgaWYgYW55d2hlcmUsIEkgc2hvdWxkIHByb3ZlIHRoZSB1dHRlcmFuY2Ugd3JvbmcgYW5kIHNob3VsZCBzaG93IHRoZSBvcmFjbGUg4oCcVGhpcyBtYW4gaXMgd2lzZXIgdGhhbiBJLCBidXQgeW91IHNhaWQgSSB3YXMgd2lzZXN0LuKAnSAgU28gZXhhbWluaW5nIHRoaXMgbWFu4oCUZm9yIEkgbmVlZCBub3QgY2FsbCBoaW0gYnkgbmFtZSwgYnV0IGl0IHdhcyBvbmUgb2YgdGhlIHB1YmxpYyBtZW4gd2l0aCByZWdhcmQgdG8gd2hvbSBJIGhhZCB0aGlzIGtpbmQgb2YgZXhwZXJpZW5jZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPuKAlGFuZCBjb252ZXJzaW5nIHdpdGggaGltLCB0aGlzIG1hbiBzZWVtZWQgdG8gbWUgdG8gc2VlbSB0byBiZSB3aXNlIHRvIG1hbnkgb3RoZXIgcGVvcGxlIGFuZCBlc3BlY2lhbGx5IHRvIGhpbXNlbGYsIGJ1dCBub3QgdG8gYmUgc287ICBhbmQgdGhlbiBJIHRyaWVkIHRvIHNob3cgaGltIHRoYXQgaGUgdGhvdWdodAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjFkIiB1bml0PSJzZWN0aW9uIiAvPmhlIHdhcyB3aXNlLCBidXQgd2FzIG5vdC4gIEFzIGEgcmVzdWx0LCBJIGJlY2FtZSBoYXRlZnVsIHRvIGhpbSBhbmQgdG8gbWFueSBvZiB0aG9zZSBwcmVzZW50OyAgYW5kIHNvLCBhcyBJIHdlbnQgYXdheSwgSSB0aG91Z2h0IHRvIG15c2VsZiwg4oCcSSBhbSB3aXNlciB0aGFuIHRoaXMgbWFuOyAgZm9yIG5laXRoZXIgb2YgdXMgcmVhbGx5IGtub3dzIGFueXRoaW5nIGZpbmUgYW5kIGdvb2QsIGJ1dCB0aGlzIG1hbiB0aGlua3MgaGUga25vd3Mgc29tZXRoaW5nIHdoZW4gaGUgZG9lcyBub3QsIHdoZXJlYXMgSSwgYXMgSSBkbyBub3Qga25vdyBhbnl0aGluZywgZG8gbm90IHRoaW5rIEkgZG8gZWl0aGVyLiAgSSBzZWVtLCB0aGVuLCBpbiBqdXN0IHRoaXMgbGl0dGxlIHRoaW5nIHRvIGJlIHdpc2VyIHRoYW4gdGhpcyBtYW4gYXQgYW55IHJhdGUsIHRoYXQgd2hhdCBJIGRvIG5vdCBrbm93IEkgZG8gbm90IHRoaW5rIEkga25vdyBlaXRoZXIu4oCdICBGcm9tIGhpbSBJIHdlbnQgdG8gYW5vdGhlciBvZiB0aG9zZSB3aG8gd2VyZSByZXB1dGVkCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMWUiIHVuaXQ9InNlY3Rpb24iIC8+dG8gYmUgd2lzZXIgdGhhbiBoZSwgYW5kIHRoZXNlIHNhbWUgdGhpbmdzIHNlZW1lZCB0byBtZSB0byBiZSB0cnVlOyAgYW5kIHRoZXJlIEkgYmVjYW1lIGhhdGVmdWwgYm90aCB0byBoaW0gYW5kIHRvIG1hbnkgb3RoZXJzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZW4gSSB3ZW50IG9uIGZyb20gb25lIHRvIGFub3RoZXIsIHBlcmNlaXZpbmcgdGhhdCBJIHdhcyBoYXRlZCwgYW5kIGdyaWV2aW5nIGFuZCBmZWFyaW5nLCBidXQgbmV2ZXJ0aGVsZXNzIEkgdGhvdWdodCBJIG11c3QgY29uc2lkZXIgdGhlIGdvZCdzIGJ1c2luZXNzIG9mIHRoZSBoaWdoZXN0IGltcG9ydGFuY2UuICBTbyBJIGhhZCB0byBnbywgaW52ZXN0aWdhdGluZyB0aGUgbWVhbmluZyBvZiB0aGUgb3JhY2xlLCB0byBhbGwgdGhvc2Ugd2hvIHdlcmUgcmVwdXRlZCB0byBrbm93IGFueXRoaW5nLiAgQW5kIGJ5IHRoZSBEb2csIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjJhIiB1bml0PSJzZWN0aW9uIiAvPuKAlGZvciBJIG11c3Qgc3BlYWsgdGhlIHRydXRoIHRvIHlvdeKAlHRoaXMsIEkgZG8gZGVjbGFyZSwgd2FzIG15IGV4cGVyaWVuY2U6ICB0aG9zZSB3aG8gaGFkIHRoZSBtb3N0IHJlcHV0YXRpb24gc2VlbWVkIHRvIG1lIHRvIGJlIGFsbW9zdCB0aGUgbW9zdCBkZWZpY2llbnQsIGFzIEkgaW52ZXN0aWdhdGVkIGF0IHRoZSBnb2QncyBiZWhlc3QsIGFuZCBvdGhlcnMgd2hvIHdlcmUgb2YgbGVzcyByZXB1dGUgc2VlbWVkIHRvIGJlIHN1cGVyaW9yIG1lbiBpbiB0aGUgbWF0dGVyIG9mIGJlaW5nIHNlbnNpYmxlLiAgU28gSSBtdXN0IHJlbGF0ZSB0byB5b3UgbXkgd2FuZGVyaW5nIGFzIEkgcGVyZm9ybWVkIG15IEhlcmN1bGVhbiBsYWJvcnMsIHNvIHRvIHNwZWFrLCBpbiBvcmRlciB0aGF0IHRoZSBvcmFjbGUgbWlnaHQgYmUgcHJvdmVkIHRvIGJlIGlycmVmdXRhYmxlLiAgRm9yIGFmdGVyIHRoZSBwdWJsaWMgbWVuIEkgd2VudCB0byB0aGUgcG9ldHMsIHRob3NlIG9mIHRyYWdlZGllcywgYW5kIHRob3NlIG9mIGRpdGh5cmFtYnMsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMmIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoZSByZXN0LCB0aGlua2luZyB0aGF0IHRoZXJlIEkgc2hvdWxkIHByb3ZlIGJ5IGFjdHVhbCB0ZXN0IHRoYXQgSSB3YXMgbGVzcyBsZWFybmVkIHRoYW4gdGhleS4gIFNvLCB0YWtpbmcgdXAgdGhlIHBvZW1zIG9mIHRoZWlycyB0aGF0IHNlZW1lZCB0byBtZSB0byBoYXZlIGJlZW4gbW9zdCBjYXJlZnVsbHkgZWxhYm9yYXRlZCBieSB0aGVtLCBJIGFza2VkIHRoZW0gd2hhdCB0aGV5IG1lYW50LCB0aGF0IEkgbWlnaHQgYXQgdGhlIHNhbWUgdGltZSBsZWFybiBzb21ldGhpbmcgZnJvbSB0aGVtLiAgTm93IEkgYW0gYXNoYW1lZCB0byB0ZWxsIHlvdSB0aGUgdHJ1dGgsIGdlbnRsZW1lbjsgIGJ1dCBzdGlsbCBpdCBtdXN0IGJlIHRvbGQuICBGb3IgdGhlcmUgd2FzIGhhcmRseSBhIG1hbiBwcmVzZW50LCBvbmUgbWlnaHQgc2F5LCB3aG8gd291bGQgbm90IHNwZWFrIGJldHRlciB0aGFuIHRoZXkgYWJvdXQgdGhlIHBvZW1zIHRoZXkgdGhlbXNlbHZlcyBoYWQgY29tcG9zZWQuICBTbyBhZ2FpbiBpbiB0aGUgY2FzZSBvZiB0aGUgcG9ldHMgYWxzbyBJIHByZXNlbnRseSByZWNvZ25pemVkIHRoaXMsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMmMiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCB3aGF0IHRoZXkgY29tcG9zZWQgdGhleSBjb21wb3NlZCBub3QgYnkgd2lzZG9tLCBidXQgYnkgbmF0dXJlIGFuZCBiZWNhdXNlIHRoZXkgd2VyZSBpbnNwaXJlZCwgbGlrZSB0aGUgcHJvcGhldHMgYW5kIGdpdmVycyBvZiBvcmFjbGVzOyAgZm9yIHRoZXNlIGFsc28gc2F5IG1hbnkgZmluZSB0aGluZ3MsIGJ1dCBrbm93IG5vbmUgb2YgdGhlIHRoaW5ncyB0aGV5IHNheTsgIGl0IHdhcyBldmlkZW50IHRvIG1lIHRoYXQgdGhlIHBvZXRzIHRvbyBoYWQgZXhwZXJpZW5jZWQgc29tZXRoaW5nIG9mIHRoaXMgc2FtZSBzb3J0LiAgQW5kIGF0IHRoZSBzYW1lIHRpbWUgSSBwZXJjZWl2ZWQgdGhhdCB0aGV5LCBvbiBhY2NvdW50IG9mIHRoZWlyIHBvZXRyeSwgdGhvdWdodCB0aGF0IHRoZXkgd2VyZSB0aGUgd2lzZXN0IG9mIG1lbiBpbiBvdGhlciB0aGluZ3MgYXMgd2VsbCwgaW4gd2hpY2ggdGhleSB3ZXJlIG5vdC4gIFNvIEkgd2VudCBhd2F5IGZyb20gdGhlbSBhbHNvIHRoaW5raW5nIHRoYXQgSSB3YXMgc3VwZXJpb3IgdG8gdGhlbSBpbiB0aGUgc2FtZSB0aGluZyBpbiB3aGljaCBJIGV4Y2VsbGVkIHRoZSBwdWJsaWMgbWVuLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GaW5hbGx5IHRoZW4gSSB3ZW50IHRvIHRoZSBoYW5kLXdvcmtlcnMuIAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjJkIiB1bml0PSJzZWN0aW9uIiAvPkZvciBJIHdhcyBjb25zY2lvdXMgdGhhdCBJIGtuZXcgcHJhY3RpY2FsbHkgbm90aGluZywgYnV0IEkga25ldyBJIHNob3VsZCBmaW5kIHRoYXQgdGhleSBrbmV3IG1hbnkgZmluZSB0aGluZ3MuICBBbmQgaW4gdGhpcyBJIHdhcyBub3QgZGVjZWl2ZWQ7ICB0aGV5IGRpZCBrbm93IHdoYXQgSSBkaWQgbm90LCBhbmQgaW4gdGhpcyB3YXkgdGhleSB3ZXJlIHdpc2VyIHRoYW4gSS4gIEJ1dCwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhlIGdvb2QgYXJ0aXNhbnMgYWxzbyBzZWVtZWQgdG8gbWUgdG8gaGF2ZSB0aGUgc2FtZSBmYWlsaW5nIGFzIHRoZSBwb2V0czsgIGJlY2F1c2Ugb2YgcHJhY3RpY2luZyBoaXMgYXJ0IHdlbGwsIGVhY2ggb25lIHRob3VnaHQgaGUgd2FzIHZlcnkgd2lzZSBpbiB0aGUgb3RoZXIgbW9zdCBpbXBvcnRhbnQgbWF0dGVycywgYW5kIHRoaXMgZm9sbHkgb2YgdGhlaXJzIG9ic2N1cmVkIHRoYXQgd2lzZG9tLCBzbyB0aGF0IEkgYXNrZWQgbXlzZWxmCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMmUiIHVuaXQ9InNlY3Rpb24iIC8+aW4gYmVoYWxmIG9mIHRoZSBvcmFjbGUgd2hldGhlciBJIHNob3VsZCBwcmVmZXIgdG8gYmUgYXMgSSBhbSwgbmVpdGhlciB3aXNlIGluIHRoZWlyIHdpc2RvbSBub3IgZm9vbGlzaCBpbiB0aGVpciBmb2xseSwgb3IgdG8gYmUgaW4gYm90aCByZXNwZWN0cyBhcyB0aGV5IGFyZS4gIEkgcmVwbGllZCB0aGVuIHRvIG15c2VsZiBhbmQgdG8gdGhlIG9yYWNsZSB0aGF0IGl0IHdhcyBiZXR0ZXIgZm9yIG1lIHRvIGJlIGFzIEkgYW0uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBmcm9tIHRoaXMgaW52ZXN0aWdhdGlvbiwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIzIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyM2EiIHVuaXQ9InNlY3Rpb24iIC8+bWFueSBlbm1pdGllcyBoYXZlIGFyaXNlbiBhZ2FpbnN0IG1lLCBhbmQgc3VjaCBhcyBhcmUgbW9zdCBoYXJzaCBhbmQgZ3JpZXZvdXMsIHNvIHRoYXQgbWFueSBwcmVqdWRpY2VzIGhhdmUgcmVzdWx0ZWQgZnJvbSB0aGVtIGFuZCBJIGFtIGNhbGxlZCBhIHdpc2UgbWFuLiAgRm9yIG9uIGVhY2ggb2NjYXNpb24gdGhvc2Ugd2hvIGFyZSBwcmVzZW50IHRoaW5rIEkgYW0gd2lzZSBpbiB0aGUgbWF0dGVycyBpbiB3aGljaCBJIGNvbmZ1dGUgc29tZW9uZSBlbHNlOyAgYnV0IHRoZSBmYWN0IGlzLCBnZW50bGVtZW4sIGl0IGlzIGxpa2VseSB0aGF0IHRoZSBnb2QgaXMgcmVhbGx5IHdpc2UgYW5kIGJ5IGhpcyBvcmFjbGUgbWVhbnMgdGhpczogIOKAnEh1bWFuIHdpc2RvbSBpcyBvZiBsaXR0bGUgb3Igbm8gdmFsdWUu4oCdIEFuZCBpdCBhcHBlYXJzIHRoYXQgaGUgZG9lcyBub3QgcmVhbGx5IHNheSB0aGlzIG9mIFNvY3JhdGVzLCBidXQgbWVyZWx5IHVzZXMgbXkgbmFtZSwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIzYiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgbWFrZXMgbWUgYW4gZXhhbXBsZSwgYXMgaWYgaGUgd2VyZSB0byBzYXk6ICDigJxUaGlzIG9uZSBvZiB5b3UsIE8gaHVtYW4gYmVpbmdzLCBpcyB3aXNlc3QsIHdobywgbGlrZSBTb2NyYXRlcywgcmVjb2duaXplcyB0aGF0IGhlIGlzIGluIHRydXRoIG9mIG5vIGFjY291bnQgaW4gcmVzcGVjdCB0byB3aXNkb20u4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXJlZm9yZSBJIGFtIHN0aWxsIGV2ZW4gbm93IGdvaW5nIGFib3V0IGFuZCBzZWFyY2hpbmcgYW5kIGludmVzdGlnYXRpbmcgYXQgdGhlIGdvZCdzIGJlaGVzdCBhbnlvbmUsIHdoZXRoZXIgY2l0aXplbiBvciBmb3JlaWduZXIsIHdobyBJIHRoaW5rIGlzIHdpc2U7ICBhbmQgd2hlbiBoZSBkb2VzIG5vdCBzZWVtIHNvIHRvIG1lLCBJIGdpdmUgYWlkIHRvIHRoZSBnb2QgYW5kIHNob3cgdGhhdCBoZSBpcyBub3Qgd2lzZS4gIEFuZCBieSByZWFzb24gb2YgdGhpcyBvY2N1cGF0aW9uIEkgaGF2ZSBubyBsZWlzdXJlIHRvIGF0dGVuZCB0byBhbnkgb2YgdGhlIGFmZmFpcnMgb2YgdGhlIHN0YXRlIHdvcnRoIG1lbnRpb25pbmcsIG9yIG9mIG15IG93biwgYnV0IGFtIGluIHZhc3QgcG92ZXJ0eQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjNjIiB1bml0PSJzZWN0aW9uIiAvPm9uIGFjY291bnQgb2YgbXkgc2VydmljZSB0byB0aGUgZ29kLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgaW4gYWRkaXRpb24gdG8gdGhlc2UgdGhpbmdzLCB0aGUgeW91bmcgbWVuIHdobyBoYXZlIHRoZSBtb3N0IGxlaXN1cmUsIHRoZSBzb25zIG9mIHRoZSByaWNoZXN0IG1lbiwgYWNjb21wYW55IG1lIG9mIHRoZWlyIG93biBhY2NvcmQsIGZpbmQgcGxlYXN1cmUgaW4gaGVhcmluZyBwZW9wbGUgYmVpbmcgZXhhbWluZWQsIGFuZCBvZnRlbiBpbWl0YXRlIG1lIHRoZW1zZWx2ZXMsIGFuZCB0aGVuIHRoZXkgdW5kZXJ0YWtlIHRvIGV4YW1pbmUgb3RoZXJzOyAgYW5kIHRoZW4sIEkgZmFuY3ksIHRoZXkgZmluZCBhIGdyZWF0IHBsZW50eSBvZiBwZW9wbGUgd2hvIHRoaW5rIHRoZXkga25vdyBzb21ldGhpbmcsIGJ1dCBrbm93IGxpdHRsZSBvciBub3RoaW5nLiAgQXMgYSByZXN1bHQsIHRoZXJlZm9yZSwgdGhvc2Ugd2hvIGFyZSBleGFtaW5lZCBieSB0aGVtIGFyZSBhbmdyeSB3aXRoIG1lLCBpbnN0ZWFkIG9mIGJlaW5nIGFuZ3J5IHdpdGggdGhlbXNlbHZlcywgYW5kIHNheSB0aGF0IOKAnFNvY3JhdGVzIGlzIGEgbW9zdCBhYm9taW5hYmxlIHBlcnNvbgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjNkIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBpcyBjb3JydXB0aW5nIHRoZSB5b3V0aC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHdoZW4gYW55b25lIGFza3MgdGhlbSDigJxieSBkb2luZyBvciB0ZWFjaGluZyB3aGF0P+KAnSB0aGV5IGhhdmUgbm90aGluZyB0byBzYXksIGJ1dCB0aGV5IGRvIG5vdCBrbm93LCBhbmQgdGhhdCB0aGV5IG1heSBub3Qgc2VlbSB0byBiZSBhdCBhIGxvc3MgdGhleSBzYXkgdGhlc2UgdGhpbmdzIHRoYXQgYXJlIGhhbmR5IHRvIHNheSBhZ2FpbnN0IGFsbCB0aGUgcGhpbG9zb3BoZXJzLCDigJx0aGUgdGhpbmdzIGluIHRoZSBhaXIgYW5kIHRoZSB0aGluZ3MgYmVuZWF0aCB0aGUgZWFydGjigJ0gYW5kIOKAnG5vdCB0byBiZWxpZXZlIGluIHRoZSBnb2Rz4oCdIGFuZCDigJx0byBtYWtlIHRoZSB3ZWFrZXIgYXJndW1lbnQgdGhlIHN0cm9uZ2VyLuKAnSAgRm9yIHRoZXkgd291bGQgbm90LCBJIGZhbmN5LCBjYXJlIHRvIHNheSB0aGUgdHJ1dGgsIHRoYXQgaXQgaXMgYmVpbmcgbWFkZSB2ZXJ5IGNsZWFyIHRoYXQgdGhleSBwcmV0ZW5kIHRvIGtub3csIGJ1dCBrbm93IG5vdGhpbmcuIAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjNlIiB1bml0PSJzZWN0aW9uIiAvPlNpbmNlLCB0aGVuLCB0aGV5IGFyZSBqZWFsb3VzIG9mIHRoZWlyIGhvbm9yIGFuZCBlbmVyZ2V0aWMgYW5kIG51bWVyb3VzIGFuZCBzcGVhayBjb25jZXJ0ZWRseSBhbmQgcGVyc3Vhc2l2ZWx5IGFib3V0IG1lLCB0aGV5IGhhdmUgZmlsbGVkIHlvdXIgZWFycyBib3RoIGxvbmcgYWdvIGFuZCBub3cgd2l0aCB2ZWhlbWVudCBzbGFuZGVycy4gIEZyb20gYW1vbmcgdGhlbSBNZWxldHVzIGF0dGFja2VkIG1lLCBhbmQgQW55dHVzIGFuZCBMeWNvbiwgTWVsZXR1cyBhbmdlcmVkIG9uIGFjY291bnQgb2YgdGhlIHBvZXRzLCBhbmQgQW55dHVzIG9uIGFjY291bnQgb2YgdGhlIGFydGlzYW5zIGFuZCB0aGUgcHVibGljIG1lbiwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI0IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNGEiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIEx5Y29uIG9uIGFjY291bnQgb2YgdGhlIG9yYXRvcnM7ICBzbyB0aGF0LCBhcyBJIHNhaWQgaW4gdGhlIGJlZ2lubmluZywgSSBzaG91bGQgYmUgc3VycHJpc2VkIGlmIEkgd2VyZSBhYmxlIHRvIHJlbW92ZSB0aGlzIHByZWp1ZGljZSBmcm9tIHlvdSBpbiBzbyBzaG9ydCBhIHRpbWUgd2hlbiBpdCBoYXMgZ3Jvd24gc28gZ3JlYXQuICBUaGVyZSB5b3UgaGF2ZSB0aGUgdHJ1dGgsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIGFuZCBJIHNwZWFrIHdpdGhvdXQgaGlkaW5nIGFueXRoaW5nIGZyb20geW91LCBncmVhdCBvciBzbWFsbCBvciBwcmV2YXJpY2F0aW5nLiAgQW5kIHlldCBJIGtub3cgcHJldHR5IHdlbGwgdGhhdCBJIGFtIG1ha2luZyBteXNlbGYgaGF0ZWQgYnkganVzdCB0aGF0IGNvbmR1Y3Q7ICB3aGljaCBpcyBhbHNvIGEgcHJvb2YgdGhhdCBJIGFtIHNwZWFraW5nIHRoZSB0cnV0aCBhbmQgdGhhdCB0aGlzIGlzIHRoZSBwcmVqdWRpY2UgYWdhaW5zdCBtZSBhbmQgdGhlc2UgYXJlIGl0cyBjYXVzZXMuICBBbmQgd2hldGhlciB5b3UgaW52ZXN0aWdhdGUKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI0YiIgdW5pdD0ic2VjdGlvbiIgLz50aGlzIG5vdyBvciBoZXJlYWZ0ZXIsIHlvdSB3aWxsIGZpbmQgdGhhdCBpdCBpcyBzby48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHNvIGZhciBhcyB0aGUgYWNjdXNhdGlvbnMgYXJlIGNvbmNlcm5lZCB3aGljaCBteSBmaXJzdCBhY2N1c2VycyBtYWRlIGFnYWluc3QgbWUsIHRoaXMgaXMgYSBzdWZmaWNpZW50IGRlZmVuY2UgYmVmb3JlIHlvdTsgIGJ1dCBhZ2FpbnN0IE1lbGV0dXMsIHRoZSBnb29kIGFuZCBwYXRyaW90aWMsIGFzIGhlIHNheXMsIGFuZCB0aGUgbGF0ZXIgb25lcywgSSB3aWxsIHRyeSB0byBkZWZlbmQgbXlzZWxmIG5leHQuICBTbyBvbmNlIG1vcmUsIGFzIGlmIHRoZXNlIHdlcmUgYW5vdGhlciBzZXQgb2YgYWNjdXNlcnMsIGxldCB1cyB0YWtlIHVwIGluIHR1cm4gdGhlaXIgc3dvcm4gc3RhdGVtZW50LiAgSXQgaXMgYWJvdXQgYXMgZm9sbG93czogIGl0IHN0YXRlcyB0aGF0IFNvY3JhdGVzIGlzIGEgd3Jvbmdkb2VyIGJlY2F1c2UgaGUgY29ycnVwdHMgdGhlIHlvdXRoIGFuZCBkb2VzIG5vdCBiZWxpZXZlIGluIHRoZSBnb2RzIHRoZSBzdGF0ZSBiZWxpZXZlcyBpbiwgYnV0IGluIG90aGVyCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNGMiIHVuaXQ9InNlY3Rpb24iIC8+bmV3IHNwaXJpdHVhbCBiZWluZ3MuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlN1Y2ggaXMgdGhlIGFjY3VzYXRpb24uICBCdXQgbGV0IHVzIGV4YW1pbmUgZWFjaCBwb2ludCBvZiB0aGlzIGFjY3VzYXRpb24uICBIZSBzYXlzIEkgYW0gYSB3cm9uZ2RvZXIgYmVjYXVzZSBJIGNvcnJ1cHQgdGhlIHlvdXRoLiAgQnV0IEksIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHNheSBNZWxldHVzIGlzIGEgd3Jvbmdkb2VyLCBiZWNhdXNlIGhlIGpva2VzIGluIGVhcm5lc3QsIGxpZ2h0bHkgaW52b2x2aW5nIHBlb3BsZSBpbiBhIGxhd3N1aXQsIHByZXRlbmRpbmcgdG8gYmUgemVhbG91cyBhbmQgY29uY2VybmVkIGFib3V0IHRoaW5ncyBvciB3aGljaCBoZSBuZXZlciBjYXJlZCBhdCBhbGwuICBBbmQgdGhhdCB0aGlzIGlzIHNvIEkgd2lsbCB0cnkgdG8gbWFrZSBwbGFpbiB0byB5b3UgYWxzby48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Q29tZSBoZXJlLCBNZWxldHVzLCB0ZWxsIG1lOiAgZG9uJ3QgeW91IGNvbnNpZGVyIGl0CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNGQiIHVuaXQ9InNlY3Rpb24iIC8+b2YgZ3JlYXQgaW1wb3J0YW5jZSB0aGF0IHRoZSB5b3V0aCBiZSBhcyBnb29kIGFzIHBvc3NpYmxlPyAg4oCcSSBkby7igJ0gIENvbWUgbm93LCB0ZWxsIHRoZXNlIGdlbnRsZW1lbiB3aG8gbWFrZXMgdGhlbSBiZXR0ZXI/ICBGb3IgaXQgaXMgZXZpZGVudCB0aGF0IHlvdSBrbm93LCBzaW5jZSB5b3UgY2FyZSBhYm91dCBpdC4gIEZvciB5b3UgaGF2ZSBmb3VuZCB0aGUgb25lIHdobyBjb3JydXB0cyB0aGVtLCBhcyB5b3Ugc2F5LCBhbmQgeW91IGJyaW5nIG1lIGJlZm9yZSB0aGVzZSBnZW50bGVtZW4gYW5kIGFjY3VzZSBtZTsgIGFuZCBub3csIGNvbWUsIHRlbGwgd2hvIG1ha2VzIHRoZW0gYmV0dGVyIGFuZCBpbmZvcm0gdGhlbSB3aG8gaGUgaXMuICBEbyB5b3Ugc2VlLCBNZWxldHVzLCB0aGF0IHlvdSBhcmUgc2lsZW50IGFuZCBjYW5ub3QgdGVsbD8gIEFuZCB5ZXQgZG9lcyBpdCBub3Qgc2VlbSB0byB5b3UgZGlzZ3JhY2VmdWwgYW5kIGEgc3VmZmljaWVudCBwcm9vZiBvZiB3aGF0IEkgc2F5LCB0aGF0IHlvdSBoYXZlIG5ldmVyIGNhcmVkIGFib3V0IGl0PyAgQnV0IHRlbGwsIG15IGdvb2QgbWFuLCB3aG8KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI0ZSIgdW5pdD0ic2VjdGlvbiIgLz5tYWtlcyB0aGVtIGJldHRlcj8gIOKAnFRoZSBsYXdzLuKAnSAgQnV0IHRoYXQgaXMgbm90IHdoYXQgSSBhc2ssIG1vc3QgZXhjZWxsZW50IG9uZSwgYnV0IHdoYXQgbWFuLCB3aG8ga25vd3MgaW4gdGhlIGZpcnN0IHBsYWNlIGp1c3QgdGhpcyB2ZXJ5IHRoaW5nLCB0aGUgbGF3cy4gIOKAnFRoZXNlIG1lbiwgU29jcmF0ZXMsIHRoZSBqdWRnZXMu4oCdICBXaGF0IGFyZSB5b3Ugc2F5aW5nLCBNZWxldHVzPyAgQXJlIHRoZXNlIGdlbnRsZW1lbiBhYmxlIHRvIGluc3RydWN0IHRoZSB5b3V0aCwgYW5kIGRvIHRoZXkgbWFrZSB0aGVtIGJldHRlcj8gIOKAnENlcnRhaW5seS7igJ0gIEFsbCwgb3Igc29tZSBvZiB0aGVtIGFuZCBvdGhlcnMgbm90PyAg4oCcQWxsLuKAnSAgV2VsbCBzYWlkLCBieSBIZXJhLCBhbmQgdGhpcyBpcyBhIGdyZWF0IHBsZW50eSBvZiBoZWxwZXJzIHlvdSBzcGVhayBvZi4gIEJ1dCBob3cgYWJvdXQgdGhpcz8gCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjVhIiB1bml0PSJzZWN0aW9uIiAvPkRvIHRoZXNlIGxpc3RlbmVycyBtYWtlIHRoZW0gYmV0dGVyLCBvciBub3Q/ICDigJxUaGVzZSBhbHNvLuKAnSAgQW5kIGhvdyBhYm91dCB0aGUgc2VuYXRvcnM/ICDigJxUaGUgc2VuYXRvcnMgYWxzby7igJ0gIEJ1dCwgTWVsZXR1cywgdGhvc2UgaW4gdGhlIGFzc2VtYmx5LCB0aGUgYXNzZW1ibHltZW4sIGRvbid0IGNvcnJ1cHQgdGhlIHlvdXRoLCBkbyB0aGV5PyAgb3IgZG8gdGhleSBhbHNvIGFsbCBtYWtlIHRoZW0gYmV0dGVyPyAg4oCcVGhleSBhbHNvLuKAnSAgQWxsIHRoZSBBdGhlbmlhbnMsIHRoZW4sIGFzIGl0IHNlZW1zLCBtYWtlIHRoZW0gZXhjZWxsZW50LCBleGNlcHQgbXlzZWxmLCBhbmQgSSBhbG9uZSBjb3JydXB0IHRoZW0uICBJcyB0aGlzIHdoYXQgeW91IG1lYW4/ICDigJxWZXJ5IGRlY2lkZWRseSwgdGhhdCBpcyB3aGF0IEkgbWVhbi7igJ0gIFlvdSBoYXZlIGNvbmRlbW5lZCBtZSB0byBncmVhdCB1bmhhcHBpbmVzcyEgIEJ1dCBhbnN3ZXIgbWU7ICBkb2VzIGl0IHNlZW0gdG8geW91IHRvIGJlIHNvIGluIHRoZSBjYXNlIG9mIGhvcnNlcywgdGhhdCB0aG9zZSB3aG8KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI1YiIgdW5pdD0ic2VjdGlvbiIgLz5tYWtlIHRoZW0gYmV0dGVyIGFyZSBhbGwgbWFua2luZCwgYW5kIGhlIHdobyBpbmp1cmVzIHRoZW0gc29tZSBvbmUgcGVyc29uPyAgT3IsIHF1aXRlIHRoZSBvcHBvc2l0ZSBvZiB0aGlzLCB0aGF0IGhlIHdobyBpcyBhYmxlIHRvIG1ha2UgdGhlbSBiZXR0ZXIgaXMgc29tZSBvbmUgcGVyc29uLCBvciB2ZXJ5IGZldywgdGhlIGhvcnNlLXRyYWluZXJzLCB3aGVyZWFzIG1vc3QgcGVvcGxlLCBpZiB0aGV5IGhhdmUgdG8gZG8gd2l0aCBhbmQgdXNlIGhvcnNlcywgaW5qdXJlIHRoZW0/ICBJcyBpdCBub3Qgc28sIE1lbGV0dXMsIGJvdGggaW4gdGhlIGNhc2Ugb2YgaG9yc2VzIGFuZCBpbiB0aGF0IG9mIGFsbCBvdGhlciBhbmltYWxzPyAgQ2VydGFpbmx5IGl0IGlzLCB3aGV0aGVyIHlvdSBhbmQgQW55dHVzIGRlbnkgaXQgb3IgYWdyZWU7ICBmb3IgaXQgd291bGQgYmUgYSBncmVhdCBzdGF0ZSBvZiBibGVzc2VkbmVzcyBpbiB0aGUgY2FzZSBvZiB0aGUgeW91dGggaWYgb25lIGFsb25lIGNvcnJ1cHRzIHRoZW0sIGFuZCB0aGUgb3RoZXJzIGRvIHRoZW0gZ29vZC4gIEJ1dCwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI1YyIgdW5pdD0ic2VjdGlvbiIgLz5NZWxldHVzLCB5b3Ugc2hvdyBjbGVhcmx5IGVub3VnaCB0aGF0IHlvdSBuZXZlciB0aG91Z2h0IGFib3V0IHRoZSB5b3V0aCwgYW5kIHlvdSBleGhpYml0IHBsYWlubHkgeW91ciBvd24gY2FyZWxlc3NuZXNzLCB0aGF0IHlvdSBoYXZlIG5vdCBjYXJlZCBhdCBhbGwgZm9yIHRoZSB0aGluZ3MgYWJvdXQgd2hpY2ggeW91IGhhbGUgbWUgaW50byBjb3VydC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGJlc2lkZXMsIHRlbGwgdXMsIGZvciBoZWF2ZW4ncyBzYWtlLCBNZWxldHVzLCBpcyBpdCBiZXR0ZXIgdG8gbGl2ZSBhbW9uZyBnb29kIGNpdGl6ZW5zLCBvciBiYWQ/ICBNeSBmcmllbmQsIGFuc3dlcjsgIGZvciBJIGFtIG5vdCBhc2tpbmcgYW55dGhpbmcgaGFyZC4gIERvIG5vdCB0aGUgYmFkIGRvIHNvbWUgZXZpbCB0byB0aG9zZSB3aG8gYXJlIHdpdGggdGhlbSBhdCBhbnkgdGltZSBhbmQgdGhlIGdvb2Qgc29tZSBnb29kPyAg4oCcQ2VydGFpbmx5LuKAnSAgSXMgdGhlcmUgdGhlbiBhbnlvbmUgd2hvCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNWQiIHVuaXQ9InNlY3Rpb24iIC8+cHJlZmVycyB0byBiZSBpbmp1cmVkIGJ5IGhpcyBhc3NvY2lhdGVzIHJhdGhlciB0aGFuIGJlbmVmaXRlZD8gIEFuc3dlciwgbXkgZ29vZCBtYW47ICBmb3IgdGhlIGxhdyBvcmRlcnMgeW91IHRvIGFuc3dlci4gIElzIHRoZXJlIGFueW9uZSB3aG8gcHJlZmVycyB0byBiZSBpbmp1cmVkPyAg4oCcT2YgY291cnNlIG5vdC7igJ0gIENvbWUgdGhlbiwgZG8geW91IGhhbGUgbWUgaW4gaGVyZSBvbiB0aGUgZ3JvdW5kIHRoYXQgSSBhbSBjb3JydXB0aW5nIHRoZSB5b3V0aCBhbmQgbWFraW5nIHRoZW0gd29yc2Ugdm9sdW50YXJpbHkgb3IgaW52b2x1bnRhcmlseT8gIOKAnFZvbHVudGFyaWx5IEkgc2F5LuKAnSAgV2hhdCB0aGVuLCBNZWxldHVzPyAgQXJlIHlvdSBhdCB5b3VyIGFnZSBzbyBtdWNoIHdpc2VyIHRoYW4gSSBhdCBteSBhZ2UsIHRoYXQgeW91IGhhdmUgcmVjb2duaXplZCB0aGF0IHRoZSBldmlsIGFsd2F5cyBkbyBzb21lIGV2aWwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI1ZSIgdW5pdD0ic2VjdGlvbiIgLz50byB0aG9zZSBuZWFyZXN0IHRoZW0sIGFuZCB0aGUgZ29vZCBzb21lIGdvb2Q7ICB3aGVyZWFzIEkgaGF2ZSByZWFjaGVkIHN1Y2ggYSBkZXB0aCBvZiBpZ25vcmFuY2UgdGhhdCBJIGRvIG5vdCBldmVuIGtub3cgdGhpcywgdGhhdCBpZiBJIG1ha2UgYW55b25lIG9mIG15IGFzc29jaWF0ZXMgYmFkIEkgYW0gaW4gZGFuZ2VyIG9mIGdldHRpbmcgc29tZSBoYXJtIGZyb20gaGltLCBzbyB0aGF0IEkgZG8gdGhpcyBncmVhdCBldmlsIHZvbHVudGFyaWx5LCBhcyB5b3Ugc2F5PyAgSSBkb24ndCBiZWxpZXZlIHRoaXMsIE1lbGV0dXMsIG5vciBkbyBJIHRoaW5rIGFueW9uZSBlbHNlIGluIHRoZSB3b3JsZCBkb2VzISAKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI2IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNmEiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IGVpdGhlciBJIGRvIG5vdCBjb3JydXB0IHRoZW0sIG9yIGlmIEkgY29ycnVwdCB0aGVtLCBJIGRvIGl0IGludm9sdW50YXJpbHksIHNvIHRoYXQgeW91IGFyZSBseWluZyBpbiBib3RoIGV2ZW50cy4gIEJ1dCBpZiBJIGNvcnJ1cHQgdGhlbSBpbnZvbHVudGFyaWx5LCBmb3Igc3VjaCBpbnZvbHVudGFyeSBlcnJvcnMgdGhlIGxhdyBpcyBub3QgdG8gaGFsZSBwZW9wbGUgaW50byBjb3VydCwgYnV0IHRvIHRha2UgdGhlbSBhbmQgaW5zdHJ1Y3QgYW5kIGFkbW9uaXNoIHRoZW0gaW4gcHJpdmF0ZS4gIEZvciBpdCBpcyBjbGVhciB0aGF0IGlmIEkgYW0gdG9sZCBhYm91dCBpdCwgSSBzaGFsbCBzdG9wIGRvaW5nIHRoYXQgd2hpY2ggSSBkbyBpbnZvbHVudGFyaWx5LiAgQnV0IHlvdSBhdm9pZGVkIGFzc29jaWF0aW5nIHdpdGggbWUgYW5kIGluc3RydWN0aW5nIG1lLCBhbmQgd2VyZSB1bndpbGxpbmcgdG8gZG8gc28sIGJ1dCB5b3UgaGFsZSBtZSBpbiBoZXJlLCB3aGVyZSBpdCBpcyB0aGUgbGF3IHRvIGhhbGUgaW4gdGhvc2Ugd2hvIG5lZWQgcHVuaXNobWVudCwgbm90IGluc3RydWN0aW9uLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgZW5vdWdoIG9mIHRoaXMsIGZvciwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhpcyBpcyBjbGVhciwgYXMgSSBzYWlkLCB0aGF0IE1lbGV0dXMgbmV2ZXIKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI2YiIgdW5pdD0ic2VjdGlvbiIgLz5jYXJlZCBtdWNoIG9yIGxpdHRsZSBmb3IgdGhlc2UgdGhpbmdzLiAgQnV0IG5ldmVydGhlbGVzcywgdGVsbCB1cywgaG93IGRvIHlvdSBzYXksIE1lbGV0dXMsIHRoYXQgSSBjb3JydXB0IHRoZSB5b3V0aD8gIE9yIGlzIGl0IGV2aWRlbnQsIGFjY29yZGluZyB0byB0aGUgaW5kaWN0bWVudCB5b3UgYnJvdWdodCwgdGhhdCBpdCBpcyBieSB0ZWFjaGluZyB0aGVtIG5vdCB0byBiZWxpZXZlIGluIHRoZSBnb2RzIHRoZSBzdGF0ZSBiZWxpZXZlcyBpbiwgYnV0IGluIG90aGVyIG5ldyBzcGlyaXR1YWwgYmVpbmdzPyAgRG8geW91IG5vdCBzYXkgdGhhdCBpdCBpcyBieSB0ZWFjaGluZyB0aGlzIHRoYXQgSSBjb3JydXB0IHRoZW0/ICDigJxWZXJ5IGRlY2lkZWRseSB0aGF0IGlzIHdoYXQgSSBzYXku4oCdICBUaGVuLCBNZWxldHVzLCBmb3IgdGhlIHNha2Ugb2YKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI2YyIgdW5pdD0ic2VjdGlvbiIgLz50aGVzZSB2ZXJ5IGdvZHMgYWJvdXQgd2hvbSBvdXIgc3BlZWNoIG5vdyBpcywgc3BlYWsgc3RpbGwgbW9yZSBjbGVhcmx5IGJvdGggdG8gbWUgYW5kIHRvIHRoZXNlIGdlbnRsZW1lbi4gIEZvciBJIGFtIHVuYWJsZSB0byB1bmRlcnN0YW5kIHdoZXRoZXIgeW91IHNheSB0aGF0IEkgdGVhY2ggdGhhdCB0aGVyZSBhcmUgc29tZSBnb2RzLCBhbmQgbXlzZWxmIHRoZW4gYmVsaWV2ZSB0aGF0IHRoZXJlIGFyZSBzb21lIGdvZHMsIGFuZCBhbSBub3QgYWx0b2dldGhlciBnb2RsZXNzIGFuZCBhbSBub3QgYSB3cm9uZ2RvZXIgaW4gdGhhdCB3YXksIHRoYXQgdGhlc2UsIGhvd2V2ZXIsIGFyZSBub3QgdGhlIGdvZHMgd2hvbSB0aGUgc3RhdGUgYmVsaWV2ZXMgaW4sIGJ1dCBvdGhlcnMsIGFuZCB0aGlzIGlzIHdoYXQgeW91IGFjY3VzZSBtZSBmb3IsIHRoYXQgSSBiZWxpZXZlIGluIG90aGVyczsgIG9yIHlvdSBzYXkgdGhhdCBJIGRvIG5vdCBteXNlbGYgYmVsaWV2ZSBpbiBnb2RzIGF0IGFsbCBhbmQgdGhhdCBJIHRlYWNoIHRoaXMgdW5iZWxpZWYgdG8gb3RoZXIgcGVvcGxlLiAg4oCcVGhhdCBpcyB3aGF0IEkgc2F5LCB0aGF0IHlvdSBkbyBub3QgYmVsaWV2ZSBpbiBnb2RzIGF0IGFsbC7igJ0gIFlvdSBhbWF6ZSBtZSwgTWVsZXR1cyEgIFdoeSBkbyB5b3Ugc2F5IHRoaXM/IAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjZkIiB1bml0PSJzZWN0aW9uIiAvPkRvIEkgbm90IGV2ZW4gYmVsaWV2ZSB0aGF0IHRoZSBzdW4gb3IgeWV0IHRoZSBtb29uIGFyZSBnb2RzLCBhcyB0aGUgcmVzdCBvZiBtYW5raW5kIGRvPyAg4oCcTm8sIGJ5IFpldXMsIGp1ZGdlcywgc2luY2UgaGUgc2F5cyB0aGF0IHRoZSBzdW4gaXMgYSBzdG9uZSBhbmQgdGhlIG1vb24gZWFydGgu4oCdICBEbyB5b3UgdGhpbmsgeW91IGFyZSBhY2N1c2luZyBBbmF4YWdvcmFzLCBteSBkZWFyIE1lbGV0dXMsIGFuZCBkbyB5b3Ugc28gZGVzcGlzZSB0aGVzZSBnZW50bGVtZW4gYW5kIHRoaW5rIHRoZXkgYXJlIHNvIHVudmVyc2VkIGluIGxldHRlcnMgYXMgbm90IHRvIGtub3csIHRoYXQgdGhlIGJvb2tzIG9mIEFuYXhhZ29yYXMgdGhlIENsYXpvbWVuaWFuIGFyZSBmdWxsIG9mIHN1Y2ggdXR0ZXJhbmNlcz8gIEFuZCBmb3Jzb290aCB0aGUgeW91dGggbGVhcm4gdGhlc2UgZG9jdHJpbmVzIGZyb20gbWUsIHdoaWNoIHRoZXkgY2FuIGJ1eSBzb21ldGltZXMKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI2ZSIgdW5pdD0ic2VjdGlvbiIgLz4oaWYgdGhlIHByaWNlIGlzIGhpZ2gpIGZvciBhIGRyYWNobWEgaW4gdGhlIG9yY2hlc3RyYSBhbmQgbGF1Z2ggYXQgU29jcmF0ZXMsIGlmIGhlIHByZXRlbmRzIHRoZXkgYXJlIGhpcyBvd24sIGVzcGVjaWFsbHkgd2hlbiB0aGV5IGFyZSBzbyBhYnN1cmQhICBCdXQgZm9yIGhlYXZlbidzIHNha2UsIGRvIHlvdSB0aGluayB0aGlzIG9mIG1lLCB0aGF0IEkgZG8gbm90IGJlbGlldmUgdGhlcmUgaXMgYW55IGdvZD8gIOKAnE5vLCBieSBaZXVzLCB5b3UgZG9uJ3QsIG5vdCBpbiB0aGUgbGVhc3Qu4oCdICBZb3UgY2Fubm90IGJlIGJlbGlldmVkLCBNZWxldHVzLCBub3QgZXZlbiwgYXMgaXQgc2VlbXMgdG8gbWUsIGJ5IHlvdXJzZWxmLiAgRm9yIHRoaXMgbWFuIGFwcGVhcnMgdG8gbWUsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHRvIGJlIHZlcnkgdmlvbGVudCBhbmQgdW5yZXN0cmFpbmVkLCBhbmQgYWN0dWFsbHkgdG8gaGF2ZSBicm91Z2h0IHRoaXMgaW5kaWN0bWVudCBpbiBhIHNwaXJpdCBvZiB2aW9sZW5jZSBhbmQgdW5yZXN0cmFpbnQgYW5kIHJhc2huZXNzLiAgRm9yIGhlIHNlZW1zLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjciIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI3YSIgdW5pdD0ic2VjdGlvbiIgLz5hcyBpdCB3ZXJlLCBieSBjb21wb3NpbmcgYSBwdXp6bGUgdG8gYmUgbWFraW5nIGEgdGVzdDogIOKAnFdpbGwgU29jcmF0ZXMsIHRoZSB3aXNlIG1hbiwgcmVjb2duaXplIHRoYXQgSSBhbSBqb2tpbmcgYW5kIGNvbnRyYWRpY3RpbmcgbXlzZWxmLCBvciBzaGFsbCBJIGRlY2VpdmUgaGltIGFuZCB0aGUgb3RoZXJzIHdobyBoZWFyIG1lP+KAnSAgRm9yIGhlIGFwcGVhcnMgdG8gbWUgdG8gY29udHJhZGljdCBoaW1zZWxmIGluIGhpcyBzcGVlY2gsIGFzIGlmIGhlIHdlcmUgdG8gc2F5LCDigJxTb2NyYXRlcyBpcyBhIHdyb25nZG9lciwgYmVjYXVzZSBoZSBkb2VzIG5vdCBiZWxpZXZlIGluIGdvZHMsIGJ1dCBkb2VzIGJlbGlldmUgaW4gZ29kcy7igJ0gIEFuZCB5ZXQgdGhpcyBpcyB0aGUgY29uZHVjdCBvZiBhIGplc3Rlci48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Sm9pbiBtZSwgdGhlbiwgZ2VudGxlbWVuLCBpbiBleGFtaW5pbmcgaG93IGhlIGFwcGVhcnMgdG8gbWUgdG8gc2F5IHRoaXM7ICBhbmQgZG8geW91LCBNZWxldHVzLCBhbnN3ZXI7IAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjdiIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB5b3UsIGdlbnRsZW1lbiwgYXMgSSBhc2tlZCB5b3UgaW4gdGhlIGJlZ2lubmluZywgcGxlYXNlIGJlYXIgaW4gbWluZCBub3QgdG8gbWFrZSBhIGRpc3R1cmJhbmNlIGlmIEkgY29uZHVjdCBteSBhcmd1bWVudCBpbiBteSBhY2N1c3RvbWVkIG1hbm5lci48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXMgdGhlcmUgYW55IGh1bWFuIGJlaW5nIHdobyBiZWxpZXZlcyB0aGF0IHRoZXJlIGFyZSB0aGluZ3MgcGVydGFpbmluZyB0byBodW1hbiBiZWluZ3MsIGJ1dCBubyBodW1hbiBiZWluZ3M/ICBMZXQgaGltIGFuc3dlciwgZ2VudGxlbWVuLCBhbmQgbm90IG1ha2UgYSBkaXN0dXJiYW5jZSBpbiBvbmUgd2F5IG9yIGFub3RoZXIuICBJcyB0aGVyZSBhbnlvbmUgd2hvIGRvZXMgbm90IGJlbGlldmUgaW4gaG9yc2VzLCBidXQgZG9lcyBiZWxpZXZlIGluIHRoaW5ncyBwZXJ0YWluaW5nIHRvIGhvcnNlcz8gIG9yIHdobyBkb2VzIG5vdCBiZWxpZXZlIHRoYXQgZmx1dGUtcGxheWVycyBleGlzdCwgYnV0IHRoYXQgdGhpbmdzIHBlcnRhaW5pbmcgdG8gZmx1dGUtcGxheWVycyBkbz8gIFRoZXJlIGlzIG5vdCwgYmVzdCBvZiBtZW47ICBpZiB5b3UgZG8gbm90IHdpc2ggdG8gYW5zd2VyLCBJIHNheSBpdCB0byB5b3UgYW5kIHRoZXNlIG90aGVycyBoZXJlLiAgQnV0IGFuc3dlciBhdCBsZWFzdAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjdjIiB1bml0PSJzZWN0aW9uIiAvPnRoZSBuZXh0IHF1ZXN0aW9uLiAgSXMgdGhlcmUgYW55b25lIHdobyBiZWxpZXZlcyBzcGlyaXR1YWwgdGhpbmdzIGV4aXN0LCBidXQgZG9lcyBub3QgYmVsaWV2ZSBpbiBzcGlyaXRzPyAg4oCcVGhlcmUgaXMgbm90LuKAnSAgVGhhbmsgeW91IGZvciByZXBseWluZyByZWx1Y3RhbnRseSB3aGVuIGZvcmNlZCBieSB0aGVzZSBnZW50bGVtZW4uICBUaGVuIHlvdSBzYXkgdGhhdCBJIGJlbGlldmUgaW4gc3Bpcml0dWFsIGJlaW5ncywgd2hldGhlciBuZXcgb3Igb2xkLCBhbmQgdGVhY2ggdGhhdCBiZWxpZWY7ICBidXQgdGhlbiBJIGJlbGlldmUgaW4gc3Bpcml0dWFsIGJlaW5ncyBhdCBhbnkgcmF0ZSwgYWNjb3JkaW5nIHRvIHlvdXIgc3RhdGVtZW50LCBhbmQgeW91IHN3b3JlIHRvIHRoYXQgaW4geW91ciBpbmRpY3RtZW50LiAgQnV0IGlmIEkgYmVsaWV2ZSBpbiBzcGlyaXR1YWwgYmVpbmdzLCBpdCBpcyBxdWl0ZSBpbmV2aXRhYmxlIHRoYXQgSSBiZWxpZXZlIGFsc28gaW4gc3Bpcml0czsgIGlzIGl0IG5vdCBzbz8gIEl0IGlzOyAgZm9yIEkgYXNzdW1lIHRoYXQgeW91IGFncmVlLCBzaW5jZSB5b3UgZG8gbm90IGFuc3dlci4gIEJ1dCBkbyB3ZSBub3QgdGhpbmsgdGhlIHNwaXJpdHMgYXJlCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyN2QiIHVuaXQ9InNlY3Rpb24iIC8+Z29kcyBvciBjaGlsZHJlbiBvZiBnb2RzPyAgWWVzLCBvciBubz8gIOKAnENlcnRhaW5seS7igJ0gIFRoZW4gaWYgSSBiZWxpZXZlIGluIHNwaXJpdHMsIGFzIHlvdSBzYXksIGlmIHNwaXJpdHMgYXJlIGEga2luZCBvZiBnb2RzLCB0aGF0IHdvdWxkIGJlIHRoZSBwdXp6bGUgYW5kIGpva2Ugd2hpY2ggSSBzYXkgeW91IGFyZSB1dHRlcmluZyBpbiBzYXlpbmcgdGhhdCBJLCB3aGlsZSBJIGRvIG5vdCBiZWxpZXZlIGluIGdvZHMsIGRvIGJlbGlldmUgSW4gZ29kcyBhZ2Fpbiwgc2luY2UgSSBiZWxpZXZlIGluIHNwaXJpdHM7ICBidXQgaWYsIG9uIHRoZSBvdGhlciBoYW5kLCBzcGlyaXRzIGFyZSBhIGtpbmQgb2YgYmFzdGFyZCBjaGlsZHJlbiBvZiBnb2RzLCBieSBueW1waHMgb3IgYnkgYW55IG90aGVycywgd2hvZXZlciB0aGVpciBtb3RoZXJzIGFyZSBzYWlkIHRvIGJlLCB3aGF0IG1hbiB3b3VsZCBiZWxpZXZlIHRoYXQgdGhlcmUgYXJlIGNoaWxkcmVuIG9mIGdvZHMsIGJ1dCBubyBnb2RzPyAgSXQgd291bGQgYmUganVzdCBhcyBhYnN1cmQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI3ZSIgdW5pdD0ic2VjdGlvbiIgLz5hcyBpZiBvbmUgd2VyZSB0byBiZWxpZXZlIHRoYXQgdGhlcmUgYXJlIGNoaWxkcmVuIG9mIGhvcnNlcyBhbmQgYXNzZXMsIG5hbWVseSBtdWxlcywgYnV0IG5vIGhvcnNlcyBhbmQgYXNzZXMuICBCdXQsIE1lbGV0dXMsIHlvdSBjZXJ0YWlubHkgbXVzdCBoYXZlIGJyb3VnaHQgdGhpcyBzdWl0IGVpdGhlciB0byBtYWtlIGEgdGVzdCBvZiB1cyBvciBiZWNhdXNlIHlvdSB3ZXJlIGxvc3MgYXMgdG8gd2hhdCB0cnVlIHdyb25nZG9pbmcgeW91IGNvdWxkIGFjY3VzZSBtZSBvZjsgIGJ1dCB0aGVyZSBpcyBubyB3YXkgZm9yIHlvdSB0byBwZXJzdWFkZSBhbnkgbWFuIHdobyBoYXMgZXZlbiBhIGxpdHRsZSBzZW5zZSB0aGF0IGl0IGlzIHBvc3NpYmxlIGZvciB0aGUgc2FtZSBwZXJzb24gdG8gYmVsaWV2ZSBpbiBzcGlyaXR1YWwgYW5kIGRpdmluZSBleGlzdGVuY2VzIGFuZCBhZ2FpbiBmb3IgdGhlIHNhbWUgcGVyc29uIG5vdCB0byBiZWxpZXZlIGluIHNwaXJpdHMgb3IgZ29kcyBvcgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjgiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI4YSIgdW5pdD0ic2VjdGlvbiIgLz5oZXJvZXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlbGwgdGhlbiwgbWVuIG9mIEF0aGVucywgdGhhdCBJIGFtIG5vdCBhIHdyb25nZG9lciBhY2NvcmRpbmcgdG8gTWVsZXR1cydzIGluZGljdG1lbnQsIHNlZW1zIHRvIG1lIG5vdCB0byBuZWVkIG11Y2ggb2YgYSBkZWZlbmNlLCBidXQgd2hhdCBoYXMgYmVlbiBzYWlkIGlzIGVub3VnaC4gIEJ1dCB5b3UgbWF5IGJlIGFzc3VyZWQgdGhhdCB3aGF0IEkgc2FpZCBiZWZvcmUgaXMgdHJ1ZSwgdGhhdCBncmVhdCBoYXRyZWQgaGFzIGFyaXNlbiBhZ2FpbnN0IG1lIGFuZCBpbiB0aGUgbWluZHMgb2YgbWFueSBwZXJzb25zLiAgQW5kIHRoaXMgaXQgaXMgd2hpY2ggd2lsbCBjYXVzZSBteSBjb25kZW1uYXRpb24sIGlmIGl0IGlzIHRvIGNhdXNlIGl0LCBub3QgTWVsZXR1cyBvciBBbnl0dXMsIGJ1dCB0aGUgcHJlanVkaWNlIGFuZCBkaXNsaWtlIG9mIHRoZSBtYW55LiAgVGhpcyBoYXMgY29uZGVtbmVkIG1hbnkgb3RoZXIgZ29vZCBtZW4sIGFuZCBJIHRoaW5rIHdpbGwgZG8gc287IAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjhiIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB0aGVyZSBpcyBubyBkYW5nZXIgdGhhdCBpdCB3aWxsIHN0b3Agd2l0aCBtZS4gIEJ1dCBwZXJoYXBzIHNvbWVvbmUgbWlnaHQgc2F5OiAg4oCcQXJlIHlvdSB0aGVuIG5vdCBhc2hhbWVkLCBTb2NyYXRlcywgb2YgaGF2aW5nIGZvbGxvd2VkIHN1Y2ggYSBwdXJzdWl0LCB0aGF0IHlvdSBhcmUgbm93IGluIGRhbmdlciBvZiBiZWluZyBwdXQgdG8gZGVhdGggYXMgYSByZXN1bHQ/4oCdICBCdXQgSSBzaG91bGQgbWFrZSB0byBoaW0gYSBqdXN0IHJlcGx5OiAg4oCcWW91IGRvIG5vdCBzcGVhayB3ZWxsLCBTaXIsIGlmIHlvdSB0aGluayBhIG1hbiBpbiB3aG9tIHRoZXJlIGlzIGV2ZW4gYSBsaXR0bGUgbWVyaXQgb3VnaHQgdG8gY29uc2lkZXIgZGFuZ2VyIG9mIGxpZmUgb3IgZGVhdGgsIGFuZCBub3QgcmF0aGVyIHJlZ2FyZCB0aGlzIG9ubHksIHdoZW4gaGUgZG9lcyB0aGluZ3MsIHdoZXRoZXIgdGhlIHRoaW5ncyBoZSBkb2VzIGFyZSByaWdodCBvciB3cm9uZyBhbmQgdGhlIGFjdHMgb2YgYSBnb29kIG9yIGEgYmFkIG1hbi4gIEZvciBhY2NvcmRpbmcgdG8geW91ciBhcmd1bWVudCBhbGwgdGhlIGRlbWlnb2RzCiAgICA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjhjIiB1bml0PSJzZWN0aW9uIiAvPndvdWxkIGJlIGJhZCB3aG8gZGllZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRyb3kiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRyb3kiPlRyb3k8L3BsYWNlTmFtZT4sIGluY2x1ZGluZyB0aGUgc29uIG9mIFRoZXRpcywgd2hvIHNvIGRlc3Bpc2VkIGRhbmdlciwgaW4gY29tcGFyaXNvbiB3aXRoIGVuZHVyaW5nIGFueSBkaXNncmFjZSwgdGhhdCB3aGVuIGhpcyBtb3RoZXIgKGFuZCBzaGUgd2FzIGEgZ29kZGVzcykgc2FpZCB0byBoaW0sIGFzIGhlIHdhcyBlYWdlciB0byBzbGF5IEhlY3Rvciwgc29tZXRoaW5nIGxpa2UgdGhpcywgSSBiZWxpZXZlLCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+PGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5NeSBzb24sIGlmIHlvdSBhdmVuZ2UgdGhlIGRlYXRoIG9mIHlvdXIgZnJpZW5kIFBhdHJvY2x1cyBhbmQga2lsbCBIZWN0b3IsIHlvdSB5b3Vyc2VsZiBzaGFsbCBkaWU7PC9sPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Zm9yIHN0cmFpZ2h0d2F5LCBhZnRlciBIZWN0b3IsIGlzIGRlYXRoIGFwcG9pbnRlZCB1bnRvIHlvdTs8L2w+PC9xdW90ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gMTguOTYiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDE4Ljk2PC9iaWJsPi48L25vdGU+aGUsIHdoZW4gaGUgaGVhcmQgdGhpcywgbWFkZSBsaWdodCBvZiBkZWF0aCBhbmQgZGFuZ2VyLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjhkIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBmZWFyZWQgbXVjaCBtb3JlIHRvIGxpdmUgYXMgYSBjb3dhcmQgYW5kIG5vdCB0byBhdmVuZ2UgaGlzIGZyaWVuZHMsIGFuZCBzYWlkLCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+U3RyYWlnaHR3YXkgbWF5IEkgZGllLCBhZnRlciBkb2luZyB2ZW5nZWFuY2UgdXBvbiB0aGUgd3Jvbmdkb2VyLCB0aGF0IEkgbWF5IG5vdCBzdGF5IGhlcmUsIGplZXJlZCBhdCBiZXNpZGUgdGhlIGN1cnZlZCBzaGlwcywgYSBidXJkZW4gb2YgdGhlIGVhcnRoLjwvcXVvdGU+LiBEbyB5b3UgdGhpbmsgaGUgY29uc2lkZXJlZCBkZWF0aCBhbmQgZGFuZ2VyPzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gb3IgdGh1cyBpdCBpcywgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgaW4gdHJ1dGg7ICB3aGVyZXZlciBhIG1hbiBzdGF0aW9ucyBoaW1zZWxmLCB0aGlua2luZyBpdCBpcyBiZXN0IHRvIGJlIHRoZXJlLCBvciBpcyBzdGF0aW9uZWQgYnkgaGlzIGNvbW1hbmRlciwgdGhlcmUgaGUgbXVzdCwgYXMgaXQgc2VlbXMgdG8gbWUsIHJlbWFpbiBhbmQgcnVuIGhpcyByaXNrcywgY29uc2lkZXJpbmcgbmVpdGhlciBkZWF0aCBub3IgYW55IG90aGVyIHRoaW5nIG1vcmUgdGhhbiBkaXNncmFjZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U28gSSBzaG91bGQgaGF2ZSBkb25lIGEgdGVycmlibGUgdGhpbmcsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOGUiIHVuaXQ9InNlY3Rpb24iIC8+aWYsIHdoZW4gdGhlIGNvbW1hbmRlcnMgd2hvbSB5b3UgY2hvc2UgdG8gY29tbWFuZCBtZSBzdGF0aW9uZWQgbWUsIGJvdGggYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDQ4MTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwNDgxNCI+UG90aWRhZWE8L3BsYWNlTmFtZT4gYW5kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQW1waGlwb2xpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQW1waGlwb2xpcyI+QW1waGlwb2xpczwvcGxhY2VOYW1lPiBhbmQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDE3MDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwMTcwMCI+RGVsaXVtPC9wbGFjZU5hbWU+LCBJIHJlbWFpbmVkIHdoZXJlIHRoZXkgc3RhdGlvbmVkIG1lLCBsaWtlIGFueWJvZHkgZWxzZSwgYW5kIHJhbiB0aGUgcmlzayBvZiBkZWF0aCwgYnV0IHdoZW4gdGhlIGdvZCBnYXZlIG1lIGEgc3RhdGlvbiwgYXMgSSBiZWxpZXZlZCBhbmQgdW5kZXJzdG9vZCwgd2l0aCBvcmRlcnMgdG8gc3BlbmQgbXkgbGlmZSBpbiBwaGlsb3NvcGh5IGFuZCBpbiBleGFtaW5pbmcgbXlzZWxmIGFuZCBvdGhlcnMsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjlhIiB1bml0PSJzZWN0aW9uIiAvPnRoZW4gSSB3ZXJlIHRvIGRlc2VydCBteSBwb3N0IHRocm91Z2ggZmVhciBvZiBkZWF0aCBvciBhbnl0aGluZyBlbHNlIHdoYXRzb2V2ZXIuICBJdCB3b3VsZCBiZSBhIHRlcnJpYmxlIHRoaW5nLCBhbmQgdHJ1bHkgb25lIG1pZ2h0IHRoZW4ganVzdGx5IGhhbGUgbWUgaW50byBjb3VydCwgb24gdGhlIGNoYXJnZSB0aGF0IEkgZG8gbm90IGJlbGlldmUgdGhhdCB0aGVyZSBhcmUgZ29kcywgc2luY2UgSSBkaXNvYmV5IHRoZSBvcmFjbGUgYW5kIGZlYXIgZGVhdGggYW5kIHRoaW5rIEkgYW0gd2lzZSB3aGVuIEkgYW0gbm90LiAgRm9yIHRvIGZlYXIgZGVhdGgsIGdlbnRsZW1lbiwgaXMgbm90aGluZyBlbHNlIHRoYW4gdG8gdGhpbmsgb25lIGlzIHdpc2Ugd2hlbiBvbmUgaXMgbm90OyAgZm9yIGl0IGlzIHRoaW5raW5nIG9uZSBrbm93cyB3aGF0IG9uZSBkb2VzIG5vdCBrbm93LiAgRm9yIG5vIG9uZSBrbm93cyB3aGV0aGVyIGRlYXRoIGJlIG5vdCBldmVuIHRoZSBncmVhdGVzdCBvZiBhbGwgYmxlc3NpbmdzIHRvIG1hbiwgYnV0IHRoZXkgZmVhciBpdCBhcyBpZiB0aGV5IGtuZXcgdGhhdCBpdCBpcyB0aGUgZ3JlYXRlc3Qgb2YgZXZpbHMuIAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjliIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBpcyBub3QgdGhpcyB0aGUgbW9zdCByZXByZWhlbnNpYmxlIGZvcm0gb2YgaWdub3JhbmNlLCB0aGF0IG9mIHRoaW5raW5nIG9uZSBrbm93cyB3aGF0IG9uZSBkb2VzIG5vdCBrbm93PyAgUGVyaGFwcywgZ2VudGxlbWVuLCBpbiB0aGlzIG1hdHRlciBhbHNvIEkgZGlmZmVyIGZyb20gb3RoZXIgbWVuIGluIHRoaXMgd2F5LCBhbmQgaWYgSSB3ZXJlIHRvIHNheSB0aGF0IEkgYW0gd2lzZXIgaW4gYW55dGhpbmcsIGl0IHdvdWxkIGJlIGluIHRoaXMsIHRoYXQgbm90IGtub3dpbmcgdmVyeSBtdWNoIGFib3V0IHRoZSBvdGhlciB3b3JsZCwgSSBkbyBub3QgdGhpbmsgSSBrbm93LiAgQnV0IEkgZG8ga25vdyB0aGF0IGl0IGlzIGV2aWwgYW5kIGRpc2dyYWNlZnVsIHRvIGRvIHdyb25nIGFuZCB0byBkaXNvYmV5IGhpbSB3aG8gaXMgYmV0dGVyIHRoYW4gSSwgd2hldGhlciBoZSBiZSBnb2Qgb3IgbWFuLiAgU28gSSBzaGFsbCBuZXZlciBmZWFyIG9yIGF2b2lkIHRob3NlIHRoaW5ncyBjb25jZXJuaW5nIHdoaWNoIEkgZG8gbm90IGtub3cgd2hldGhlciB0aGV5IGFyZSBnb29kIG9yIGJhZCByYXRoZXIgdGhhbiB0aG9zZSB3aGljaCBJIGtub3cgYXJlIGJhZC4gIEFuZCB0aGVyZWZvcmUsIGV2ZW4gaWYKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI5YyIgdW5pdD0ic2VjdGlvbiIgLz55b3UgYWNxdWl0IG1lIG5vdyBhbmQgYXJlIG5vdCBjb252aW5jZWQgYnkgQW55dHVzLCB3aG8gc2FpZCB0aGF0IGVpdGhlciBJIG91Z2h0IG5vdCB0byBoYXZlIGJlZW4gYnJvdWdodCB0byB0cmlhbCBhdCBhbGwsIG9yIHNpbmNlIHdhcyBicm91Z2h0IHRvIHRyaWFsLCBJIG11c3QgY2VydGFpbmx5IGJlIHB1dCB0byBkZWF0aCwgYWRkaW5nIHRoYXQgaWYgSSB3ZXJlIGFjcXVpdHRlZCB5b3VyIHNvbnMgd291bGQgYWxsIGJlIHV0dGVybHkgcnVpbmVkIGJ5IHByYWN0aWNpbmcgd2hhdCBJIHRlYWNo4oCUaWYgeW91IHNob3VsZCBzYXkgdG8gbWUgaW4gcmVwbHkgdG8gdGhpczogIOKAnFNvY3JhdGVzLCB0aGlzIHRpbWUgd2Ugd2lsbCBub3QgZG8gYXMgQW55dHVzIHNheXMsIGJ1dCB3ZSB3aWxsIGxldCB5b3UgZ28sIG9uIHRoaXMgY29uZGl0aW9uLCBob3dldmVyLCB0aGF0IHlvdSBubyBsb25nZXIgc3BlbmQgeW91ciB0aW1lIGluIHRoaXMgaW52ZXN0aWdhdGlvbiBvciBpbiBwaGlsb3NvcGh5LCBhbmQgaWYgeW91IGFyZSBjYXVnaHQgZG9pbmcgc28gYWdhaW4geW91IHNoYWxsIGRpZeKAnTsgCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOWQiIHVuaXQ9InNlY3Rpb24iIC8+aWYgeW91IHNob3VsZCBsZXQgbWUgZ28gb24gdGhpcyBjb25kaXRpb24gd2hpY2ggSSBoYXZlIG1lbnRpb25lZCwgSSBzaG91bGQgc2F5IHRvIHlvdSwg4oCcTWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgSSByZXNwZWN0IGFuZCBsb3ZlIHlvdSwgYnV0IEkgc2hhbGwgb2JleSB0aGUgZ29kIHJhdGhlciB0aGFuIHlvdSwgYW5kIHdoaWxlIEkgbGl2ZSBhbmQgYW0gYWJsZSB0byBjb250aW51ZSwgSSBzaGFsbCBuZXZlciBnaXZlIHVwIHBoaWxvc29waHkgb3Igc3RvcCBleGhvcnRpbmcgeW91IGFuZCBwb2ludGluZyBvdXQgdGhlIHRydXRoIHRvIGFueSBvbmUgb2YgeW91IHdob20gSSBtYXkgbWVldCwgc2F5aW5nIGluIG15IGFjY3VzdG9tZWQgd2F5OiAg4oCcTW9zdCBleGNlbGxlbnQgbWFuLCBhcmUgeW91IHdobyBhcmUgYSBjaXRpemVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhlIGdyZWF0ZXN0IG9mIGNpdGllcyBhbmQgdGhlIG1vc3QgZmFtb3VzIGZvciB3aXNkb20gYW5kIHBvd2VyLCBub3QgYXNoYW1lZCB0byBjYXJlIGZvciB0aGUgYWNxdWlzaXRpb24gb2Ygd2VhbHRoCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOWUiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGZvciByZXB1dGF0aW9uIGFuZCBob25vciwgd2hlbiB5b3UgbmVpdGhlciBjYXJlIG5vciB0YWtlIHRob3VnaHQgZm9yIHdpc2RvbSBhbmQgdHJ1dGggYW5kIHRoZSBwZXJmZWN0aW9uIG9mIHlvdXIgc291bD/igJ0gIEFuZCBpZiBhbnkgb2YgeW91IGFyZ3VlcyB0aGUgcG9pbnQsIGFuZCBzYXlzIGhlIGRvZXMgY2FyZSwgSSBzaGFsbCBub3QgbGV0IGhpbSBnbyBhdCBvbmNlLCBub3Igc2hhbGwgSSBnbyBhd2F5LCBidXQgSSBzaGFsbCBxdWVzdGlvbiBhbmQgZXhhbWluZSBhbmQgY3Jvc3MtZXhhbWluZSBoaW0sIGFuZCBpZiBJIGZpbmQgdGhhdCBoZSBkb2VzIG5vdCBwb3NzZXNzIHZpcnR1ZSwgYnV0IHNheXMgaGUgZG9lcywgSSBzaGFsbCByZWJ1a2UgaGltIGZvciBzY29ybmluZwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzAiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMwYSIgdW5pdD0ic2VjdGlvbiIgLz50aGUgdGhpbmdzIHRoYXQgYXJlIG9mIG1vc3QgaW1wb3J0YW5jZSBhbmQgY2FyaW5nIG1vcmUgZm9yIHdoYXQgaXMgb2YgbGVzcyB3b3J0aC4gIFRoaXMgSSBzaGFsbCBkbyB0byB3aG9tZXZlciBJIG1lZXQsIHlvdW5nIGFuZCBvbGQsIGZvcmVpZ25lciBhbmQgY2l0aXplbiwgYnV0IG1vc3QgdG8gdGhlIGNpdGl6ZW5zLCBpbmFzbXVjaCBhcyB5b3UgYXJlIG1vcmUgbmVhcmx5IHJlbGF0ZWQgdG8gbWUuICBGb3Iga25vdyB0aGF0IHRoZSBnb2QgY29tbWFuZHMgbWUgdG8gZG8gdGhpcywgYW5kIEkgYmVsaWV2ZSB0aGF0IG5vIGdyZWF0ZXIgZ29vZCBldmVyIGNhbWUgdG8gcGFzcyBpbiB0aGUgY2l0eSB0aGFuIG15IHNlcnZpY2UgdG8gdGhlIGdvZC4gIEZvciBJIGdvIGFib3V0IGRvaW5nIG5vdGhpbmcgZWxzZSB0aGFuIHVyZ2luZyB5b3UsIHlvdW5nIGFuZCBvbGQsIG5vdCB0byBjYXJlIGZvciB5b3VyIHBlcnNvbnMgb3IgeW91ciBwcm9wZXJ0eQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzBiIiB1bml0PSJzZWN0aW9uIiAvPm1vcmUgdGhhbiBmb3IgdGhlIHBlcmZlY3Rpb24gb2YgeW91ciBzb3Vscywgb3IgZXZlbiBzbyBtdWNoOyAgYW5kIEkgdGVsbCB5b3UgdGhhdCB2aXJ0dWUgZG9lcyBub3QgY29tZSBmcm9tIG1vbmV5LCBidXQgZnJvbSB2aXJ0dWUgY29tZXMgbW9uZXkgYW5kIGFsbCBvdGhlciBnb29kIHRoaW5ncyB0byBtYW4sIGJvdGggdG8gdGhlIGluZGl2aWR1YWwgYW5kIHRvIHRoZSBzdGF0ZS4gIElmIGJ5IHNheWluZyB0aGVzZSB0aGluZ3MgSSBjb3JydXB0IHRoZSB5b3V0aCwgdGhlc2UgdGhpbmdzIG11c3QgYmUgaW5qdXJpb3VzOyAgYnV0IGlmIGFueW9uZSBhc3NlcnRzIHRoYXQgSSBzYXkgb3RoZXIgdGhpbmdzIHRoYW4gdGhlc2UsIGhlIHNheXMgd2hhdCBpcyB1bnRydWUuICBUaGVyZWZvcmUgSSBzYXkgdG8geW91LCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBlaXRoZXIgZG8gYXMgQW55dHVzIHRlbGxzIHlvdSwgb3Igbm90LCBhbmQgZWl0aGVyIGFjcXVpdCBtZSwgb3Igbm90LCBrbm93aW5nIHRoYXQgSSBzaGFsbCBub3QgY2hhbmdlIG15IGNvbmR1Y3QgZXZlbiBpZiBJIGFtCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMGMiIHVuaXQ9InNlY3Rpb24iIC8+dG8gZGllIG1hbnkgdGltZXMgb3Zlci48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RG8gbm90IG1ha2UgYSBkaXN0dXJiYW5jZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPjsgIGNvbnRpbnVlIHRvIGRvIHdoYXQgSSBhc2tlZCBvZiB5b3UsIG5vdCB0byBpbnRlcnJ1cHQgbXkgc3BlZWNoIGJ5IGRpc3R1cmJhbmNlcywgYnV0IHRvIGhlYXIgbWU7ICBhbmQgSSBiZWxpZXZlIHlvdSB3aWxsIHByb2ZpdCBieSBoZWFyaW5nLiAgTm93IEkgYW0gZ29pbmcgdG8gc2F5IHNvbWUgdGhpbmdzIHRvIHlvdSBhdCB3aGljaCB5b3Ugd2lsbCBwZXJoYXBzIGNyeSBvdXQ7ICBidXQgZG8gbm90IGRvIHNvIGJ5IGFueSBtZWFucy4gIEZvciBrbm93IHRoYXQgaWYgeW91IGtpbGwgbWUsIEkgYmVpbmcgc3VjaCBhIG1hbiBhcyBJIHNheSBJIGFtLCB5b3Ugd2lsbCBub3QgaW5qdXJlIG1lIHNvIG11Y2ggYXMgeW91cnNlbHZlczsgIGZvciBuZWl0aGVyIE1lbGV0dXMgbm9yIEFueXR1cyBjb3VsZCBpbmp1cmUgbWU7IAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzBkIiB1bml0PSJzZWN0aW9uIiAvPnRoYXQgd291bGQgYmUgaW1wb3NzaWJsZSwgZm9yIEkgYmVsaWV2ZSBpdCBpcyBub3QgR29kJ3Mgd2lsbCB0aGF0IGEgYmV0dGVyIG1hbiBiZSBpbmp1cmVkIGJ5IGEgd29yc2UuICBIZSBtaWdodCwgaG93ZXZlciwgcGVyaGFwcyBraWxsIG1lIG9yIGJhbmlzaCBtZSBvciBkaXNmcmFuY2hpc2UgbWU7ICBhbmQgcGVyaGFwcyBoZSB0aGlua3MgaGUgd291bGQgdGh1cyBpbmZsaWN0IGdyZWF0IGluanVyaWVzIHVwb24gbWUsIGFuZCBvdGhlcnMgbWF5IHRoaW5rIHNvLCBidXQgSSBkbyBub3Q7ICBJIHRoaW5rIGhlIGRvZXMgaGltc2VsZiBhIG11Y2ggZ3JlYXRlciBpbmp1cnkgYnkgZG9pbmcgd2hhdCBoZSBpcyBkb2luZyBub3figJRraWxsaW5nIGEgbWFuIHVuanVzdGx5LiAgQW5kIHNvLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBJIGFtIG5vdyBtYWtpbmcgbXkgZGVmZW5jZSBub3QgZm9yIG15IG93biBzYWtlLCBhcyBvbmUgbWlnaHQgaW1hZ2luZSwgYnV0IGZhciBtb3JlIGZvciB5b3VycywgdGhhdCB5b3UgbWF5IG5vdCBieSBjb25kZW1uaW5nIG1lIGVyciBpbiB5b3VyIHRyZWF0bWVudCBvZiB0aGUgZ2lmdCB0aGUgR29kIGdhdmUgeW91LiAKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMwZSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaWYgeW91IHB1dCBtZSB0byBkZWF0aCwgeW91IHdpbGwgbm90IGVhc2lseSBmaW5kIGFub3RoZXIsIHdobywgdG8gdXNlIGEgcmF0aGVyIGFic3VyZCBmaWd1cmUsIGF0dGFjaGVzIGhpbXNlbGYgdG8gdGhlIGNpdHkgYXMgYSBnYWRmbHkgdG8gYSBob3JzZSwgd2hpY2gsIHRob3VnaCBsYXJnZSBhbmQgd2VsbCBicmVkLCBpcyBzbHVnZ2lzaCBvbiBhY2NvdW50IG9mIGhpcyBzaXplIGFuZCBuZWVkcyB0byBiZSBhcm91c2VkIGJ5IHN0aW5naW5nLiAgSSB0aGluayB0aGUgZ29kIGZhc3RlbmVkIG1lIHVwb24gdGhlIGNpdHkgaW4gc29tZSBzdWNoIGNhcGFjaXR5LCBhbmQgSSBnbyBhYm91dCBhcm91c2luZywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMxIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMWEiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHVyZ2luZyBhbmQgcmVwcm9hY2hpbmcgZWFjaCBvbmUgb2YgeW91LCBjb25zdGFudGx5IGFsaWdodGluZyB1cG9uIHlvdSBldmVyeXdoZXJlIHRoZSB3aG9sZSBkYXkgbG9uZy4gIFN1Y2ggYW5vdGhlciBpcyBub3QgbGlrZWx5IHRvIGNvbWUgdG8geW91LCBnZW50bGVtZW47ICBidXQgaWYgeW91IHRha2UgbXkgYWR2aWNlLCB5b3Ugd2lsbCBzcGFyZSBtZS4gIEJ1dCB5b3UsIHBlcmhhcHMsIG1pZ2h0IGJlIGFuZ3J5LCBsaWtlIHBlb3BsZSBhd2FrZW5lZCBmcm9tIGEgbmFwLCBhbmQgbWlnaHQgc2xhcCBtZSwgYXMgQW55dHVzIGFkdmlzZXMsIGFuZCBlYXNpbHkga2lsbCBtZTsgIHRoZW4geW91IHdvdWxkIHBhc3MgdGhlIHJlc3Qgb2YgeW91ciBsaXZlcyBpbiBzbHVtYmVyLCB1bmxlc3MgR29kLCBpbiBoaXMgY2FyZSBmb3IgeW91LCBzaG91bGQgc2VuZCBzb21lb25lIGVsc2UgdG8gc3RpbmcgeW91LiAgQW5kIHRoYXQgSSBhbSwgYXMgSSBzYXksIGEga2luZCBvZiBnaWZ0IGZyb20gdGhlIGdvZCwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMxYiIgdW5pdD0ic2VjdGlvbiIgLz55b3UgbWlnaHQgdW5kZXJzdGFuZCBmcm9tIHRoaXM7ICBmb3IgSSBoYXZlIG5lZ2xlY3RlZCBhbGwgbXkgb3duIGFmZmFpcnMgYW5kIGhhdmUgYmVlbiBlbmR1cmluZyB0aGUgbmVnbGVjdCBvZiBteSBjb25jZXJucyBhbGwgdGhlc2UgeWVhcnMsIGJ1dCBJIGFtIGFsd2F5cyBidXN5IGluIHlvdXIgaW50ZXJlc3QsIGNvbWluZyB0byBlYWNoIG9uZSBvZiB5b3UgaW5kaXZpZHVhbGx5IGxpa2UgYSBmYXRoZXIgb3IgYW4gZWxkZXIgYnJvdGhlciBhbmQgdXJnaW5nIHlvdSB0byBjYXJlIGZvciB2aXJ0dWU7ICBub3cgdGhhdCBpcyBub3QgbGlrZSBodW1hbiBjb25kdWN0LiAgSWYgSSBkZXJpdmVkIGFueSBwcm9maXQgZnJvbSB0aGlzIGFuZCByZWNlaXZlZCBwYXkgZm9yIHRoZXNlIGV4aG9ydGF0aW9ucywgdGhlcmUgd291bGQgYmUgc29tZSBzZW5zZSBpbiBpdDsgIGJ1dCBub3cgeW91IHlvdXJzZWx2ZXMgc2VlIHRoYXQgbXkgYWNjdXNlcnMsIHRob3VnaCB0aGV5IGFjY3VzZSBtZSBvZiBldmVyeXRoaW5nIGVsc2UgaW4gc3VjaCBhIHNoYW1lbGVzcyB3YXksIGhhdmUgbm90IGJlZW4gYWJsZSB0byB3b3JrIHRoZW1zZWx2ZXMgdXAgdG8gc3VjaCBhIHBpdGNoIG9mIHNoYW1lbGVzc25lc3MKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMxYyIgdW5pdD0ic2VjdGlvbiIgLz5hcyB0byBwcm9kdWNlIGEgd2l0bmVzcyB0byB0ZXN0aWZ5IHRoYXQgSSBldmVyIGV4YWN0ZWQgb3IgYXNrZWQgcGF5IG9mIGFueW9uZS4gIEZvciBJIHRoaW5rIEkgaGF2ZSBhIHN1ZmZpY2llbnQgd2l0bmVzcyB0aGF0IEkgc3BlYWsgdGhlIHRydXRoLCBuYW1lbHksIG15IHBvdmVydHkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlBlcmhhcHMgaXQgbWF5IHNlZW0gc3RyYW5nZSB0aGF0IEkgZ28gYWJvdXQgYW5kIGludGVyZmVyZSBpbiBvdGhlciBwZW9wbGUncyBhZmZhaXJzIHRvIGdpdmUgdGhpcyBhZHZpY2UgaW4gcHJpdmF0ZSwgYnV0IGRvIG5vdCB2ZW50dXJlIHRvIGNvbWUgYmVmb3JlIHlvdXIgYXNzZW1ibHkgYW5kIGFkdmlzZSB0aGUgc3RhdGUuICBCdXQgdGhlIHJlYXNvbiBmb3IgdGhpcywgYXMgeW91IGhhdmUgaGVhcmQgbWUgc2F5CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMWQiIHVuaXQ9InNlY3Rpb24iIC8+YXQgbWFueSB0aW1lcyBhbmQgcGxhY2VzLCBpcyB0aGF0IHNvbWV0aGluZyBkaXZpbmUgYW5kIHNwaXJpdHVhbCBjb21lcyB0byBtZSwgdGhlIHZlcnkgdGhpbmcgd2hpY2ggTWVsZXR1cyByaWRpY3VsZWQgaW4gaGlzIGluZGljdG1lbnQuICBJIGhhdmUgaGFkIHRoaXMgZnJvbSBteSBjaGlsZGhvb2Q7ICBpdCBpcyBhIHNvcnQgb2Ygdm9pY2UgdGhhdCBjb21lcyB0byBtZSwgYW5kIHdoZW4gaXQgY29tZXMgaXQgYWx3YXlzIGhvbGRzIG1lIGJhY2sgZnJvbSB3aGF0IEkgYW0gdGhpbmtpbmcgb2YgZG9pbmcsIGJ1dCBuZXZlciB1cmdlcyBtZSBmb3J3YXJkLiAgVGhpcyBpdCBpcyB3aGljaCBvcHBvc2VzIG15IGVuZ2FnaW5nIGluIHBvbGl0aWNzLiAgQW5kIEkgdGhpbmsgdGhpcyBvcHBvc2l0aW9uIGlzIGEgdmVyeSBnb29kIHRoaW5nOyAgZm9yIHlvdSBtYXkgYmUgcXVpdGUgc3VyZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhhdCBpZiBJIGhhZCB1bmRlcnRha2VuIHRvIGdvIGludG8gcG9saXRpY3MsIEkgc2hvdWxkIGhhdmUgYmVlbiBwdXQgdG8gZGVhdGggbG9uZyBhZ28gYW5kIHNob3VsZCBoYXZlIGRvbmUKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMxZSIgdW5pdD0ic2VjdGlvbiIgLz5ubyBnb29kIHRvIHlvdSBvciB0byBteXNlbGYuICBBbmQgZG8gbm90IGJlIGFuZ3J5IHdpdGggbWUgZm9yIHNwZWFraW5nIHRoZSB0cnV0aDsgIHRoZSBmYWN0IGlzIHRoYXQgbm8gbWFuIHdpbGwgc2F2ZSBoaXMgbGlmZSB3aG8gbm9ibHkgb3Bwb3NlcyB5b3Ugb3IgYW55IG90aGVyIHBvcHVsYWNlIGFuZCBwcmV2ZW50cyBtYW55IHVuanVzdCBhbmQgaWxsZWdhbCB0aGluZ3MgZnJvbSBoYXBwZW5pbmcgaW4gdGhlIHN0YXRlLiAKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMyIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMmEiIHVuaXQ9InNlY3Rpb24iIC8+QSBtYW4gd2hvIHJlYWxseSBmaWdodHMgZm9yIHRoZSByaWdodCwgaWYgaGUgaXMgdG8gcHJlc2VydmUgaGlzIGxpZmUgZm9yIGV2ZW4gYSBsaXR0bGUgd2hpbGUsIG11c3QgYmUgYSBwcml2YXRlIGNpdGl6ZW4sIG5vdCBhIHB1YmxpYyBtYW4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkkgd2lsbCBnaXZlIHlvdSBwb3dlcmZ1bCBwcm9vZnMgb2YgdGhpcyBub3QgbWVyZSB3b3JkcywgYnV0IHdoYXQgeW91IGhvbm9yIG1vcmUs4oCUYWN0aW9ucy4gIEFuZCBsaXN0ZW4gdG8gd2hhdCBoYXBwZW5lZCB0byBtZSwgdGhhdCB5b3UgbWF5IGJlIGNvbnZpbmNlZCB0aGF0IEkgd291bGQgbmV2ZXIgeWllbGQgdG8gYW55IG9uZSwgaWYgdGhhdCB3YXMgd3JvbmcsIHRocm91Z2ggZmVhciBvZiBkZWF0aCwgYnV0IHdvdWxkIGRpZSByYXRoZXIgdGhhbiB5aWVsZC4gIFRoZSB0YWxlIEkgYW0gZ29pbmcgdG8gdGVsbCB5b3UgaXMgb3JkaW5hcnkgYW5kIGNvbW1vbnBsYWNlLCBidXQgdHJ1ZS4gCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMmIiIHVuaXQ9InNlY3Rpb24iIC8+SSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgbmV2ZXIgaGVsZCBhbnkgb3RoZXIgb2ZmaWNlIGluIHRoZSBzdGF0ZSwgYnV0IEkgd2FzIGEgc2VuYXRvcjsgIGFuZCBpdCBoYXBwZW5lZCB0aGF0IG15IHRyaWJlIGhlbGQgdGhlIHByZXNpZGVuY3kgd2hlbiB5b3Ugd2lzaGVkIHRvIGp1ZGdlIGNvbGxlY3RpdmVseSwgbm90IHNldmVyYWxseSwgdGhlIHRlbiBnZW5lcmFscyB3aG8gaGFkIGZhaWxlZCB0byBnYXRoZXIgdXAgdGhlIHNsYWluIGFmdGVyIHRoZSBuYXZhbCBiYXR0bGU7ICB0aGlzIHdhcyBpbGxlZ2FsLCBhcyB5b3UgYWxsIGFncmVlZCBhZnRlcndhcmRzLiAgQXQgdGhhdCB0aW1lIEkgd2FzIHRoZSBvbmx5IG9uZSBvZiB0aGUgcHJ5dGFuZXMgd2hvIG9wcG9zZWQgZG9pbmcgYW55dGhpbmcgY29udHJhcnkgdG8gdGhlIGxhd3MsIGFuZCBhbHRob3VnaCB0aGUgb3JhdG9ycyB3ZXJlIHJlYWR5IHRvIGltcGVhY2ggYW5kIGFycmVzdCBtZSwgYW5kIHRob3VnaCB5b3UgdXJnZWQgdGhlbSB3aXRoIHNob3V0cyB0byBkbyBzbywgSSB0aG91Z2h0CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMmMiIHVuaXQ9InNlY3Rpb24iIC8+SSBtdXN0IHJ1biB0aGUgcmlzayB0byB0aGUgZW5kIHdpdGggbGF3IGFuZCBqdXN0aWNlIG9uIG15IHNpZGUsIHJhdGhlciB0aGFuIGpvaW4gd2l0aCB5b3Ugd2hlbiB5b3VyIHdpc2hlcyB3ZXJlIHVuanVzdCwgdGhyb3VnaCBmZWFyIG9mIGltcHJpc29ubWVudCBvciBkZWF0aC4gIFRoYXQgd2FzIHdoZW4gdGhlIGRlbW9jcmFjeSBzdGlsbCBleGlzdGVkOyAgYW5kIGFmdGVyIHRoZSBvbGlnYXJjaHkgd2FzIGVzdGFibGlzaGVkLCB0aGUgVGhpcnR5IHNlbnQgZm9yIG1lIHdpdGggZm91ciBvdGhlcnMgdG8gY29tZSB0byB0aGUgcm90dW5kYSBhbmQgb3JkZXJlZCB1cyB0byBicmluZyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwOTEyMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA5MTIwIj5MZW9uPC9wbGFjZU5hbWU+IHRoZSBTYWxhbWluaWFuIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDIzNDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjM0MCI+U2FsYW1pczwvcGxhY2VOYW1lPiB0byBiZSBwdXQgdG8gZGVhdGguICBUaGV5IGdhdmUgbWFueSBzdWNoIG9yZGVycyB0byBvdGhlcnMgYWxzbywgYmVjYXVzZSB0aGV5IHdpc2hlZCB0byBpbXBsaWNhdGUgYXMgbWFueSBpbiB0aGVpciBjcmltZXMgYXMgdGhleSBjb3VsZC4gIFRoZW4gSSwgaG93ZXZlciwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMyZCIgdW5pdD0ic2VjdGlvbiIgLz5zaG93ZWQgYWdhaW4sIGJ5IGFjdGlvbiwgbm90IGluIHdvcmQgb25seSwgdGhhdCBJIGRpZCBub3QgY2FyZSBhIHdoaXQgZm9yIGRlYXRoIGlmIHRoYXQgYmUgbm90IHRvbyBydWRlIGFuIGV4cHJlc3Npb24sIGJ1dCB0aGF0IEkgZGlkIGNhcmUgd2l0aCBhbGwgbXkgbWlnaHQgbm90IHRvIGRvIGFueXRoaW5nIHVuanVzdCBvciB1bmhvbHkuICBGb3IgdGhhdCBnb3Zlcm5tZW50LCB3aXRoIGFsbCBpdHMgcG93ZXIsIGRpZCBub3QgZnJpZ2h0ZW4gbWUgaW50byBkb2luZyBhbnl0aGluZyB1bmp1c3QsIGJ1dCB3aGVuIHdlIGNhbWUgb3V0IG9mIHRoZSByb3R1bmRhLCB0aGUgb3RoZXIgZm91ciB3ZW50IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyMzQwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDIzNDAiPlNhbGFtaXM8L3BsYWNlTmFtZT4gYW5kIGFycmVzdGVkIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA5MTIwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDkxMjAiPkxlb248L3BsYWNlTmFtZT4sIGJ1dCBJIHNpbXBseSB3ZW50IGhvbWU7ICBhbmQgcGVyaGFwcyBJIHNob3VsZCBoYXZlIGJlZW4gcHV0IHRvIGRlYXRoIGZvciBpdCwgaWYgdGhlIGdvdmVybm1lbnQgaGFkIG5vdAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzJlIiB1bml0PSJzZWN0aW9uIiAvPnF1aWNrbHkgYmVlbiBwdXQgZG93bi4gIE9mIHRoZXNlIGZhY3RzIHlvdSBjYW4gaGF2ZSBtYW55IHdpdG5lc3Nlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RG8geW91IGJlbGlldmUgdGhhdCBJIGNvdWxkIGhhdmUgbGl2ZWQgc28gbWFueSB5ZWFycyBpZiBJIGhhZCBiZWVuIGluIHB1YmxpYyBsaWZlIGFuZCBoYWQgYWN0ZWQgYXMgYSBnb29kIG1hbiBzaG91bGQgYWN0LCBsZW5kaW5nIG15IGFpZCB0byB3aGF0IGlzIGp1c3QgYW5kIGNvbnNpZGVyaW5nIHRoYXQgb2YgdGhlIGhpZ2hlc3QgaW1wb3J0YW5jZT8gIEZhciBmcm9tIGl0LCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+OyAgbm9yIGNvdWxkCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzNhIiB1bml0PSJzZWN0aW9uIiAvPmFueSBvdGhlciBtYW4uICBCdXQgeW91IHdpbGwgZmluZCB0aGF0IHRocm91Z2ggYWxsIG15IGxpZmUsIGJvdGggaW4gcHVibGljLCBpZiBJIGVuZ2FnZWQgaW4gYW55IHB1YmxpYyBhY3Rpdml0eSwgYW5kIGluIHByaXZhdGUsIEkgaGF2ZSBhbHdheXMgYmVlbiB0aGUgc2FtZSBhcyBub3csIGFuZCBoYXZlIG5ldmVyIHlpZWxkZWQgdG8gYW55IG9uZSB3cm9uZ2x5LCB3aGV0aGVyIGl0IHdlcmUgYW55IG90aGVyIHBlcnNvbiBvciBhbnkgb2YgdGhvc2Ugd2hvIGFyZSBzYWlkIGJ5IG15IHRyYWR1Y2VycyB0byBiZSBteSBwdXBpbHMuICBCdXQgSSB3YXMgbmV2ZXIgYW55IG9uZSdzIHRlYWNoZXIuICBJZiBhbnkgb25lLCB3aGV0aGVyIHlvdW5nIG9yIG9sZCwgd2lzaGVzIHRvIGhlYXIgbWUgc3BlYWtpbmcgYW5kIHB1cnN1aW5nIG15IG1pc3Npb24sIEkgaGF2ZSBuZXZlciBvYmplY3RlZCwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMzYiIgdW5pdD0ic2VjdGlvbiIgLz5ub3IgZG8gSSBjb252ZXJzZSBvbmx5IHdoZW4gSSBhbSBwYWlkIGFuZCBub3Qgb3RoZXJ3aXNlLCBidXQgSSBvZmZlciBteXNlbGYgYWxpa2UgdG8gcmljaCBhbmQgcG9vcjsgIEkgYXNrIHF1ZXN0aW9ucywgYW5kIHdob2V2ZXIgd2lzaGVzIG1heSBhbnN3ZXIgYW5kIGhlYXIgd2hhdCBJIHNheS4gIEFuZCB3aGV0aGVyIGFueSBvZiB0aGVtIHR1cm5zIG91dCB3ZWxsIG9yIGlsbCwgSSBzaG91bGQgbm90IGp1c3RseSBiZSBoZWxkIHJlc3BvbnNpYmxlLCBzaW5jZSBJIG5ldmVyIHByb21pc2VkIG9yIGdhdmUgYW55IGluc3RydWN0aW9uIHRvIGFueSBvZiB0aGVtOyAgYnV0IGlmIGFueSBtYW4gc2F5cyB0aGF0IGhlIGV2ZXIgbGVhcm5lZCBvciBoZWFyZCBhbnl0aGluZyBwcml2YXRlbHkgZnJvbSBtZSwgd2hpY2ggYWxsIHRoZSBvdGhlcnMgZGlkIG5vdCwgYmUgYXNzdXJlZCB0aGF0IGhlIGlzIGx5aW5nLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgd2h5IHRoZW4gZG8gc29tZSBwZW9wbGUgbG92ZQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzNjIiB1bml0PSJzZWN0aW9uIiAvPnRvIHNwZW5kIG11Y2ggb2YgdGhlaXIgdGltZSB3aXRoIG1lPyAgWW91IGhhdmUgaGVhcmQgdGhlIHJlYXNvbiwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPjsgIGZvciBJIHRvbGQgeW91IHRoZSB3aG9sZSB0cnV0aDsgIGl0IGlzIGJlY2F1c2UgdGhleSBsaWtlIHRvIGxpc3RlbiB3aGVuIHRob3NlIGFyZSBleGFtaW5lZCB3aG8gdGhpbmsgdGhleSBhcmUgd2lzZSBhbmQgYXJlIG5vdCBzbzsgIGZvciBpdCBpcyBhbXVzaW5nLiAgQnV0LCBhcyBJIGJlbGlldmUsIEkgaGF2ZSBiZWVuIGNvbW1hbmRlZCB0byBkbyB0aGlzIGJ5IHRoZSBHb2QgdGhyb3VnaCBvcmFjbGVzIGFuZCBkcmVhbXMgYW5kIGluIGV2ZXJ5IHdheSBpbiB3aGljaCBhbnkgbWFuIHdhcyBldmVyIGNvbW1hbmRlZCBieSBkaXZpbmUgcG93ZXIgdG8gZG8gYW55dGhpbmcgd2hhdHNvZXZlci4gIFRoaXMsIEF0aGVuaWFucywgaXMgdHJ1ZSBhbmQgZWFzaWx5IHRlc3RlZC4gIEZvciBpZiBJIGFtIGNvcnJ1cHRpbmcgc29tZSBvZiB0aGUgeW91bmcgbWVuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzM2QiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGhhdmUgY29ycnVwdGVkIG90aGVycywgc3VyZWx5IHNvbWUgb2YgdGhlbSB3aG8gaGF2ZSBncm93biBvbGRlciwgaWYgdGhleSByZWNvZ25pemUgdGhhdCBJIGV2ZXIgZ2F2ZSB0aGVtIGFueSBiYWQgYWR2aWNlIHdoZW4gdGhleSB3ZXJlIHlvdW5nLCBvdWdodCBub3cgdG8gaGF2ZSBjb21lIGZvcndhcmQgdG8gYWNjdXNlIG1lLiAgT3IgaWYgdGhleSBkaWQgbm90IHdpc2ggdG8gZG8gaXQgdGhlbXNlbHZlcywgc29tZSBvZiB0aGVpciByZWxhdGl2ZXPigJRmYXRoZXJzIG9yIGJyb3RoZXJzIG9yIG90aGVyIGtpbnNmb2xr4oCUb3VnaHQgbm93IHRvIHRlbGwgdGhlIGZhY3RzLiAgQW5kIHRoZXJlIGFyZSBtYW55IG9mIHRoZW0gcHJlc2VudCwgd2hvbSBJIHNlZTsgIGZpcnN0IENyaXRvIGhlcmUsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzM2UiIHVuaXQ9InNlY3Rpb24iIC8+d2hvIGlzIG9mIG15IG93biBhZ2UgYW5kIG15IG93biBkZW1lIGFuZCBmYXRoZXIgb2YgQ3JpdG9idWx1cywgd2hvIGlzIGFsc28gcHJlc2VudDsgIHRoZW4gdGhlcmUgaXMgTHlzYW5pYXMgdGhlIFNwaGV0dGlhbiwgZmF0aGVyIG9mIEFlc2NoaW5lcywgd2hvIGlzIGhlcmU7ICBhbmQgYWxzbyBBbnRpcGhvbiBvZiBDZXBoaXN1cywgZmF0aGVyIG9mIEVwaWdlbmVzLiAgVGhlbiBoZXJlIGFyZSBvdGhlcnMgd2hvc2UgYnJvdGhlcnMgam9pbmVkIGluIG15IGNvbnZlcnNhdGlvbnMsIE5pY29zdHJhdHVzLCBzb24gb2YgVGhlb3pvdGlkZXMgYW5kIGJyb3RoZXIgb2YgVGhlb2RvdHVzIChub3cgVGhlb2RvdHVzIGlzIGRlYWQsIHNvIGhlIGNvdWxkIG5vdCBzdG9wIGhpbSBieSBlbnRyZWF0aWVzKSwgYW5kIFBhcmFsdXMsIHNvbiBvZiBEZW1vZG9jdXM7ICBUaGVhZ2VzIHdhcyBoaXMgYnJvdGhlcjsgIGFuZAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzQiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM0YSIgdW5pdD0ic2VjdGlvbiIgLz5BZGltYW50dXMsIHNvbiBvZiBBcmlzdG8sIHdob3NlIGJyb3RoZXIgaXMgUGxhdG8gaGVyZTsgIGFuZCBBZWFudG9kb3J1cywgd2hvc2UgYnJvdGhlciBBcG9sbG9kb3J1cyBpcyBwcmVzZW50LiAgQW5kIEkgY2FuIG1lbnRpb24gdG8geW91IG1hbnkgb3RoZXJzLCBzb21lIG9uZSBvZiB3aG9tIE1lbGV0dXMgb3VnaHQgY2VydGFpbmx5IHRvIGhhdmUgcHJvZHVjZWQgYXMgYSB3aXRuZXNzIGluIGhpcyBzcGVlY2g7ICBidXQgaWYgaGUgZm9yZ290IGl0IHRoZW4sIGxldCBoaW0gZG8gc28gbm93OyAgSSB5aWVsZCB0aGUgZmxvb3IgdG8gaGltLCBhbmQgbGV0IGhpbSBzYXksIGlmIGhlIGhhcyBhbnkgc3VjaCB0ZXN0aW1vbnkuICBCdXQgeW91IHdpbGwgZmluZCB0aGF0IHRoZSBleGFjdCBvcHBvc2l0ZSBpcyB0aGUgY2FzZSwgZ2VudGxlbWVuLCBhbmQgdGhhdCB0aGV5IGFyZSBhbGwgcmVhZHkgdG8gYWlkIG1lLCB0aGUgbWFuIHdobyBjb3JydXB0cyBhbmQgaW5qdXJlcyB0aGVpciByZWxhdGl2ZXMsIGFzIE1lbGV0dXMgYW5kIEFueXR1cyBzYXkuIAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzRiIiB1bml0PSJzZWN0aW9uIiAvPk5vdyB0aG9zZSB3aG8gYXJlIHRoZW1zZWx2ZXMgY29ycnVwdGVkIG1pZ2h0IGhhdmUgc29tZSBtb3RpdmUgaW4gYWlkaW5nIG1lOyAgYnV0IHdoYXQgcmVhc29uIGNvdWxkIHRoZWlyIHJlbGF0aXZlcyBoYXZlLCB3aG8gYXJlIG5vdCBjb3JydXB0ZWQgYW5kIGFyZSBhbHJlYWR5IG9sZGVyIG1lbiwgdW5sZXNzIGl0IGJlIHRoZSByaWdodCBhbmQgdHJ1ZSByZWFzb24sIHRoYXQgdGhleSBrbm93IHRoYXQgTWVsZXR1cyBpcyBseWluZyBhbmQgSSBhbSBzcGVha2luZyB0aGUgdHJ1dGg/PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlbGwsIGdlbnRsZW1lbiwgdGhpcywgYW5kIHBlcmhhcHMgbW9yZSBsaWtlIHRoaXMsIGlzIGFib3V0IGFsbCBJIGhhdmUgdG8gc2F5IGluIG15IGRlZmVuY2UuICBQZXJoYXBzIHNvbWUgb25lIGFtb25nIHlvdSBtYXkgYmUgb2ZmZW5kZWQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM0YyIgdW5pdD0ic2VjdGlvbiIgLz53aGVuIGhlIHJlbWVtYmVycyBoaXMgb3duIGNvbmR1Y3QsIGlmIGhlLCBldmVuIGluIGEgY2FzZSBvZiBsZXNzIGltcG9ydGFuY2UgdGhhbiB0aGlzLCBiZWdnZWQgYW5kIGJlc291Z2h0IHRoZSBqdWRnZXMgd2l0aCBtYW55IHRlYXJzLCBhbmQgYnJvdWdodCBmb3J3YXJkIGhpcyBjaGlsZHJlbiB0byBhcm91c2UgY29tcGFzc2lvbiwgYW5kIG1hbnkgb3RoZXIgZnJpZW5kcyBhbmQgcmVsYXRpdmVzOyAgd2hlcmVhcyBJIHdpbGwgZG8gbm9uZSBvZiB0aGVzZSB0aGluZ3MsIHRob3VnaCBJIGFtLCBhcHBhcmVudGx5LCBpbiB0aGUgdmVyeSBncmVhdGVzdCBkYW5nZXIuICBQZXJoYXBzIHNvbWUgb25lIHdpdGggdGhlc2UgdGhvdWdodHMgaW4gbWluZCBtYXkgYmUgaGFyc2hseSBkaXNwb3NlZCB0b3dhcmQgbWUgYW5kIG1heSBjYXN0IGhpcyB2b3RlIGluIGFuZ2VyLiAgTm93IGlmIGFueSBvbmUgb2YgeW91IGlzIHNvIGRpc3Bvc2VkIAogICAgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM0ZCIgdW5pdD0ic2VjdGlvbiIgLz7igJRJIGRvIG5vdCBiZWxpZXZlIHRoZXJlIGlzIHN1Y2ggYSBwZXJzb27igJRidXQgaWYgdGhlcmUgc2hvdWxkIGJlLCBJIHRoaW5rIEkgc2hvdWxkIGJlIHNwZWFraW5nIGZhaXJseSBpZiBJIHNhaWQgdG8gaGltLCBNeSBmcmllbmQsIEkgdG9vIGhhdmUgcmVsYXRpdmVzLCBmb3IgSSBhbSwgYXMgSG9tZXIgaGFzIGl0LCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+PGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5ub3QgYm9ybiBvZiBhbiBvYWsgb3IgYSByb2NrLDwvbD48L3F1b3RlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iTG9lYiIgcGxhY2U9InVuc3BlY2lmaWVkIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIE9kLiAxOS4xNjMiIHZhbGlkPSJ5ZXMiPkhvbS4gT2QuIDE5LjE2MzwvYmlibD4uPC9ub3RlPmJ1dCBvZiBodW1hbiBwYXJlbnRzLCBzbyB0aGF0IEkgaGF2ZSByZWxhdGl2ZXMgYW5kLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBJIGhhdmUgdGhyZWUgc29ucywgb25lIG5lYXJseSBncm93biB1cCwgYW5kIHR3byBzdGlsbCBjaGlsZHJlbjsgIGJ1dCBuZXZlcnRoZWxlc3MgSSBzaGFsbCBub3QgYnJpbmcgYW55IG9mIHRoZW0gaGVyZSBhbmQgYmVnIHlvdSB0byBhY3F1aXQgbWUuICBBbmQgd2h5IHNoYWxsIEkgbm90IGRvIHNvPyAgTm90IGJlY2F1c2UgSSBhbSBzdHViYm9ybiwgQXRoZW5pYW5zLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzRlIiB1bml0PSJzZWN0aW9uIiAvPm9yIGxhY2sgcmVzcGVjdCBmb3IgeW91LiAgV2hldGhlciBJIGZlYXIgZGVhdGggb3Igbm90IGlzIGFub3RoZXIgbWF0dGVyLCBidXQgZm9yIHRoZSBzYWtlIG9mIG15IGdvb2QgbmFtZSBhbmQgeW91cnMgYW5kIHRoYXQgb2YgdGhlIHdob2xlIHN0YXRlLCBJIHRoaW5rIGl0IGlzIG5vdCByaWdodCBmb3IgbWUgdG8gZG8gYW55IG9mIHRoZXNlIHRoaW5ncyBpbiB2aWV3IG9mIG15IGFnZSBhbmQgbXkgcmVwdXRhdGlvbiwgd2hldGhlciBkZXNlcnZlZCBvciBub3Q7ICBmb3IgYXQgYW55IHJhdGUgdGhlIG9waW5pb24gcHJldmFpbHMgdGhhdCBTb2NyYXRlcwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzUiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM1YSIgdW5pdD0ic2VjdGlvbiIgLz5pcyBpbiBzb21lIHdheSBzdXBlcmlvciB0byBtb3N0IG1lbi4gIElmIHRoZW4gdGhvc2Ugb2YgeW91IHdobyBhcmUgc3VwcG9zZWQgdG8gYmUgc3VwZXJpb3IgZWl0aGVyIGluIHdpc2RvbSBvciBpbiBjb3VyYWdlIG9yIGluIGFueSBvdGhlciB2aXJ0dWUgd2hhdHNvZXZlciBhcmUgdG8gYmVoYXZlIGluIHN1Y2ggYSB3YXksIGl0IHdvdWxkIGJlIGRpc2dyYWNlZnVsLiAgV2h5LCBJIGhhdmUgb2Z0ZW4gc2VlbiBtZW4gd2hvIGhhdmUgc29tZSByZXB1dGF0aW9uIGJlaGF2aW5nIGluIHRoZSBzdHJhbmdlc3QgbWFubmVyLCB3aGVuIHRoZXkgd2VyZSBvbiB0cmlhbCwgYXMgaWYgdGhleSB0aG91Z2h0IHRoZXkgd2VyZSBnb2luZyB0byBzdWZmZXIgc29tZXRoaW5nIHRlcnJpYmxlIGlmIHRoZXkgd2VyZSBwdXQgdG8gZGVhdGgsIGp1c3QgYXMgaWYgdGhleSB3b3VsZCBiZSBpbW1vcnRhbCBpZiB5b3UgZGlkIG5vdCBraWxsIHRoZW0uICBJdCBzZWVtcyB0byBtZSB0aGF0IHRoZXkgYXJlIGEgZGlzZ3JhY2UgdG8gdGhlIHN0YXRlIGFuZCB0aGF0IGFueSBzdHJhbmdlciBtaWdodCBzYXkgdGhhdCB0aG9zZSBvZiB0aGUgQXRoZW5pYW5zIHdobyBleGNlbAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzViIiB1bml0PSJzZWN0aW9uIiAvPmluIHZpcnR1ZSwgbWVuIHdob20gdGhleSB0aGVtc2VsdmVzIGhvbm9yIHdpdGggb2ZmaWNlcyBhbmQgb3RoZXIgbWFya3Mgb2YgZXN0ZWVtLCBhcmUgbm8gYmV0dGVyIHRoYW4gd29tZW4uICBTdWNoIGFjdHMsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHdlIHdobyBoYXZlIGFueSByZXB1dGF0aW9uIGF0IGFsbCBvdWdodCBub3QgdG8gY29tbWl0LCBhbmQgaWYgd2UgY29tbWl0IHRoZW0geW91IG91Z2h0IG5vdCB0byBhbGxvdyBpdCwgYnV0IHlvdSBzaG91bGQgbWFrZSBpdCBjbGVhciB0aGF0IHlvdSB3aWxsIGJlIG11Y2ggbW9yZSByZWFkeSB0byBjb25kZW1uIGEgbWFuIHdobyBwdXRzIGJlZm9yZSB5b3Ugc3VjaCBwaXRpYWJsZSBzY2VuZXMgYW5kIG1ha2VzIHRoZSBjaXR5IHJpZGljdWxvdXMgdGhhbiBvbmUgd2hvIGtlZXBzIHF1aWV0LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgYXBhcnQgZnJvbSB0aGUgcXVlc3Rpb24gb2YgcmVwdXRhdGlvbiwgZ2VudGxlbWVuLCBJIHRoaW5rIGl0IGlzIG5vdCByaWdodAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzVjIiB1bml0PSJzZWN0aW9uIiAvPnRvIGltcGxvcmUgdGhlIGp1ZGdlIG9yIHRvIGdldCBhY3F1aXR0ZWQgYnkgYmVnZ2luZzsgIHdlIG91Z2h0IHRvIGluZm9ybSBhbmQgY29udmluY2UgaGltLiAgRm9yIHRoZSBqdWRnZSBpcyBub3QgaGVyZSB0byBncmFudCBmYXZvcnMgaW4gbWF0dGVycyBvZiBqdXN0aWNlLCBidXQgdG8gZ2l2ZSBqdWRnZW1lbnQ7ICBhbmQgaGlzIG9hdGggYmluZHMgaGltIG5vdCB0byBkbyBmYXZvcnMgYWNjb3JkaW5nIHRvIGhpcyBwbGVhc3VyZSwgYnV0IHRvIGp1ZGdlIGFjY29yZGluZyB0byB0aGUgbGF3czsgIHRoZXJlZm9yZSwgd2Ugb3VnaHQgbm90IHRvIGdldCB5b3UgaW50byB0aGUgaGFiaXQgb2YgYnJlYWtpbmcgeW91ciBvYXRocywgbm9yIG91Z2h0IHlvdSB0byBmYWxsIGludG8gdGhhdCBoYWJpdDsgIGZvciBuZWl0aGVyIG9mIHVzIHdvdWxkIGJlIGFjdGluZyBwaW91c2x5LiAgRG8gbm90LCB0aGVyZWZvcmUsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIGRlbWFuZCBvZiBtZSB0aGF0IEkgYWN0IGJlZm9yZSB5b3UgaW4gYSB3YXkgd2hpY2ggSSBjb25zaWRlciBuZWl0aGVyIGhvbm9yYWJsZSBub3IgcmlnaHQgbm9yIHBpb3VzLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzVkIiB1bml0PSJzZWN0aW9uIiAvPmVzcGVjaWFsbHkgd2hlbiBpbXBpZXR5IGlzIHRoZSB2ZXJ5IHRoaW5nIGZvciB3aGljaCBNZWxldHVzIGhlcmUgaGFzIGJyb3VnaHQgbWUgdG8gdHJpYWwuICBGb3IgaXQgaXMgcGxhaW4gdGhhdCBpZiBieSBwZXJzdWFzaW9uIGFuZCBzdXBwbGljYXRpb24gSSBmb3JjZWQgeW91IHRvIGJyZWFrIHlvdXIgb2F0aHMgSSBzaG91bGQgdGVhY2ggeW91IHRvIGRpc2JlbGlldmUgaW4gdGhlIGV4aXN0ZW5jZSBvZiB0aGUgZ29kcyBhbmQgaW4gbWFraW5nIG15IGRlZmVuY2Ugc2hvdWxkIGFjY3VzZSBteXNlbGYgb2Ygbm90IGJlbGlldmluZyBpbiB0aGVtLiAgQnV0IHRoYXQgaXMgZmFyIGZyb20gdGhlIHRydXRoOyAgZm9yIEkgZG8gYmVsaWV2ZSBpbiB0aGVtLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBtb3JlIHRoYW4gYW55IG9mIG15IGFjY3VzZXJzLCBhbmQgSSBlbnRydXN0IG15IGNhc2UgdG8geW91IGFuZCB0byBHb2QgdG8gZGVjaWRlIGl0IGFzIHNoYWxsIGJlIGJlc3QgZm9yIG1lIGFuZCBmb3IgeW91Lgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMiIgdW5pdD0ic3BlZWNoIiAvPgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzVlIiB1bml0PSJzZWN0aW9uIiAvPiBJIGFtIG5vdCBncmlldmVkLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwKPG1pbGVzdG9uZSBuPSIzNiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjM2YSIgdW5pdD0ic2VjdGlvbiIgLz5hdCB0aGlzIHZvdGUgb2YgY29uZGVtbmF0aW9uIHlvdSBoYXZlIGNhc3QgYWdhaW5zdCBtZSwgYW5kIHRoYXQgZm9yIG1hbnkgcmVhc29ucywgYW1vbmcgdGhlbSB0aGUgZmFjdCB0aGF0IHlvdXIgZGVjaXNpb24gd2FzIG5vdCBhIHN1cnByaXNlIHRvIG1lLiAgSSBhbSBtdWNoIG1vcmUgc3VycHJpc2VkIGJ5IHRoZSBudW1iZXIgb2Ygdm90ZXMgZm9yIGFuZCBhZ2FpbnN0IGl0OyAgZm9yIEkgZGlkIG5vdCBleHBlY3Qgc28gc21hbGwgYSBtYWpvcml0eSwgYnV0IGEgbGFyZ2Ugb25lLiAgTm93LCBpdCBzZWVtcywgaWYgb25seSB0aGlydHkgdm90ZXMgaGFkIGJlZW4gY2FzdCB0aGUgb3RoZXIgd2F5LCBJIHNob3VsZCBoYXZlIGJlZW4gYWNxdWl0dGVkLiAgQW5kIHNvLCBJIHRoaW5rLCBzbyBmYXIgYXMgTWVsZXR1cyBpcyBjb25jZXJuZWQsIEkgaGF2ZSBldmVuIG5vdyBiZWVuIGFjcXVpdHRlZCwgYW5kIG5vdCBtZXJlbHkgYWNxdWl0dGVkLCBidXQgYW55b25lIGNhbiBzZWUgdGhhdCwgaWYgQW55dHVzIGFuZCBMeWNvbiBoYWQgbm90IGNvbWUgZm9yd2FyZCB0byBhY2N1c2UgbWUsIGhlIHdvdWxkIGhhdmUgYmVlbiBmaW5lZAo8bWlsZXN0b25lIG49IjM2YiIgdW5pdD0ic2VjdGlvbiIgLz5hIHRob3VzYW5kIGRyYWNobWFzIGZvciBub3QgcmVjZWl2aW5nIGEgZmlmdGggcGFydCBvZiB0aGUgdm90ZXMuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgc28gdGhlIG1hbiBwcm9wb3NlcyB0aGUgcGVuYWx0eSBvZiBkZWF0aC4gIFdlbGwsIHRoZW4sIHdoYXQgc2hhbGwgSSBwcm9wb3NlIGFzIGFuIGFsdGVybmF0aXZlPyAgQ2xlYXJseSB0aGF0IHdoaWNoIEkgZGVzZXJ2ZSwgc2hhbGwgSSBub3Q/ICBBbmQgd2hhdCBkbyBJIGRlc2VydmUgdG8gc3VmZmVyIG9yIHRvIHBheSwgYmVjYXVzZSBpbiBteSBsaWZlIEkgZGlkIG5vdCBrZWVwIHF1aWV0LCBidXQgbmVnbGVjdGluZyB3aGF0IG1vc3QgbWVuIGNhcmUgZm9y4oCUbW9uZXktbWFraW5nIGFuZCBwcm9wZXJ0eSwgYW5kIG1pbGl0YXJ5IG9mZmljZXMsIGFuZCBwdWJsaWMgc3BlYWtpbmcsIGFuZCB0aGUgdmFyaW91cyBvZmZpY2VzIGFuZCBwbG90cyBhbmQgcGFydGllcyB0aGF0IGNvbWUgdXAgaW4gdGhlIHN0YXRl4oCUYW5kIHRoaW5raW5nIHRoYXQgSSB3YXMgcmVhbGx5IHRvbyBob25vcmFibGUKPG1pbGVzdG9uZSBuPSIzNmMiIHVuaXQ9InNlY3Rpb24iIC8+dG8gZW5nYWdlIGluIHRob3NlIGFjdGl2aXRpZXMgYW5kIGxpdmUsIHJlZnJhaW5lZCBmcm9tIHRob3NlIHRoaW5ncyBieSB3aGljaCBJIHNob3VsZCBoYXZlIGJlZW4gb2Ygbm8gdXNlIHRvIHlvdSBvciB0byBteXNlbGYsIGFuZCBkZXZvdGVkIG15c2VsZiB0byBjb25mZXJyaW5nIHVwb24gZWFjaCBjaXRpemVuIGluZGl2aWR1YWxseSB3aGF0IEkgcmVnYXJkIGFzIHRoZSBncmVhdGVzdCBiZW5lZml0PyAgRm9yIEkgdHJpZWQgdG8gcGVyc3VhZGUgZWFjaCBvZiB5b3UgdG8gY2FyZSBmb3IgaGltc2VsZiBhbmQgaGlzIG93biBwZXJmZWN0aW9uIGluIGdvb2RuZXNzIGFuZCB3aXNkb20gcmF0aGVyIHRoYW4gZm9yIGFueSBvZiBoaXMgYmVsb25naW5ncywgYW5kIGZvciB0aGUgc3RhdGUgaXRzZWxmIHJhdGhlciB0aGFuIGZvciBpdHMgaW50ZXJlc3RzLCBhbmQgdG8gZm9sbG93IHRoZSBzYW1lIG1ldGhvZCBpbiBoaXMgY2FyZSBmb3Igb3RoZXIgdGhpbmdzLiAgV2hhdCwgdGhlbiwgZG9lcyBzdWNoIGEgbWFuIGFzIEkgZGVzZXJ2ZT8gCjxtaWxlc3RvbmUgbj0iMzZkIiB1bml0PSJzZWN0aW9uIiAvPlNvbWUgZ29vZCB0aGluZywgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIGlmIEkgbXVzdCBwcm9wb3NlIHNvbWV0aGluZyB0cnVseSBpbiBhY2NvcmRhbmNlIHdpdGggbXkgZGVzZXJ0czsgIGFuZCB0aGUgZ29vZCB0aGluZyBzaG91bGQgYmUgc3VjaCBhcyBpcyBmaXR0aW5nIGZvciBtZS4gIE5vdyB3aGF0IGlzIGZpdHRpbmcgZm9yIGEgcG9vciBtYW4gd2hvIGlzIHlvdXIgYmVuZWZhY3RvciwgYW5kIHdobyBuZWVkcyBsZWlzdXJlIHRvIGV4aG9ydCB5b3U/ICBUaGVyZSBpcyBub3RoaW5nLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgc28gZml0dGluZyBhcyB0aGF0IHN1Y2ggYSBtYW4gYmUgZ2l2ZW4gaGlzIG1lYWxzIGluIHRoZSBwcnl0YW5ldW0uICBUaGF0IGlzIG11Y2ggbW9yZSBhcHByb3ByaWF0ZSBmb3IgbWUgdGhhbiBmb3IgYW55IG9mIHlvdSB3aG8gaGFzIHdvbiBhIHJhY2UgYXQgdGhlIE9seW1waWMgZ2FtZXMgd2l0aCBhIHBhaXIgb2YgaG9yc2VzIG9yIGEgZm91ci1pbi1oYW5kLiAgRm9yIGhlIG1ha2VzIHlvdSBzZWVtIHRvIGJlIGhhcHB5LCB3aGVyZWFzIEkgbWFrZSB5b3UgaGFwcHkgaW4gcmVhbGl0eTsgCjxtaWxlc3RvbmUgbj0iMzZlIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBoZSBpcyBub3QgYXQgYWxsIGluIG5lZWQgb2Ygc3VzdGVuYW5jZSwgYnV0IEkgYW0gbmVlZHkuICBTbyBpZiBJIG11c3QgcHJvcG9zZSBhIHBlbmFsdHkgaW4gYWNjb3JkYW5jZSB3aXRoIG15IGRlc2VydHMsCjxtaWxlc3RvbmUgbj0iMzciIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSIzN2EiIHVuaXQ9InNlY3Rpb24iIC8+SSBwcm9wb3NlIG1haW50ZW5hbmNlIGluIHRoZSBwcnl0YW5ldW0uPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5QZXJoYXBzIHNvbWUgb2YgeW91IHRoaW5rIHRoYXQgaW4gc2F5aW5nIHRoaXMsIGFzIGluIHdoYXQgSSBzYWlkIGFib3V0IGxhbWVudGluZyBhbmQgaW1wbG9yaW5nLCBJIGFtIHNwZWFraW5nIGluIGEgc3Bpcml0IG9mIGJyYXZhZG87ICBidXQgdGhhdCBpcyBub3QgdGhlIGNhc2UuICBUaGUgdHJ1dGggaXMgcmF0aGVyIHRoYXQgSSBhbSBjb252aW5jZWQgdGhhdCBJIG5ldmVyIGludGVudGlvbmFsbHkgd3JvbmdlZCBhbnlvbmU7ICBidXQgSSBjYW5ub3QgY29udmluY2UgeW91IG9mIHRoaXMsIGZvciB3ZSBoYXZlIGNvbnZlcnNlZCB3aXRoIGVhY2ggb3RoZXIgb25seSBhIGxpdHRsZSB3aGlsZS4gIEkgYmVsaWV2ZSBpZiB5b3UgaGFkIGEgbGF3LCBhcyBzb21lIG90aGVyIHBlb3BsZSBoYXZlLAo8bWlsZXN0b25lIG49IjM3YiIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IGNhcGl0YWwgY2FzZXMgc2hvdWxkIG5vdCBiZSBkZWNpZGVkIGluIG9uZSBkYXksIGJ1dCBvbmx5IGFmdGVyIHNldmVyYWwgZGF5cywgeW91IHdvdWxkIGJlIGNvbnZpbmNlZDsgIGJ1dCBub3cgaXQgaXMgbm90IGVhc3kgdG8gcmlkIHlvdSBvZiBncmVhdCBwcmVqdWRpY2VzIGluIGEgc2hvcnQgdGltZS4gIFNpbmNlLCB0aGVuLCBJIGFtIGNvbnZpbmNlZCB0aGF0IEkgbmV2ZXIgd3JvbmdlZCBhbnkgb25lLCBJIGFtIGNlcnRhaW5seSBub3QgZ29pbmcgdG8gd3JvbmcgbXlzZWxmLCBhbmQgdG8gc2F5IG9mIG15c2VsZiB0aGF0IEkgZGVzZXJ2ZSBhbnl0aGluZyBiYWQsIGFuZCB0byBwcm9wb3NlIGFueSBwZW5hbHR5IG9mIHRoYXQgc29ydCBmb3IgbXlzZWxmLiAgV2h5IHNob3VsZCBJPyAgVGhyb3VnaCBmZWFyIG9mIHRoZSBwZW5hbHR5IHRoYXQgTWVsZXR1cyBwcm9wb3NlcywgYWJvdXQgd2hpY2ggSSBzYXkgdGhhdCBJIGRvIG5vdCBrbm93IHdoZXRoZXIgaXQgaXMgYSBnb29kIHRoaW5nIG9yIGFuIGV2aWw/ICBTaGFsbCBJIGNob29zZSBpbnN0ZWFkIG9mIHRoYXQgc29tZXRoaW5nIHdoaWNoIEkga25vdyB0byBiZSBhbiBldmlsPyAgV2hhdCBwZW5hbHR5IHNoYWxsIEkgcHJvcG9zZT8gIEltcHJpc29ubWVudD8gCjxtaWxlc3RvbmUgbj0iMzdjIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aHkgc2hvdWxkIEkgbGl2ZSBpbiBwcmlzb24gYSBzbGF2ZSB0byB0aG9zZSB3aG8gbWF5IGJlIGluIGF1dGhvcml0eT8gIE9yIHNoYWxsIEkgcHJvcG9zZSBhIGZpbmUsIHdpdGggaW1wcmlzb25tZW50IHVudGlsIGl0IGlzIHBhaWQ/ICBCdXQgdGhhdCBpcyB0aGUgc2FtZSBhcyB3aGF0IEkgc2FpZCBqdXN0IG5vdywgZm9yIEkgaGF2ZSBubyBtb25leSB0byBwYXkgd2l0aC4gIFNoYWxsIEkgdGhlbiBwcm9wb3NlIGV4aWxlIGFzIG15IHBlbmFsdHk/ICBQZXJoYXBzIHlvdSB3b3VsZCBhY2NlcHQgdGhhdC4gIEkgbXVzdCBpbmRlZWQgYmUgcG9zc2Vzc2VkIGJ5IGEgZ3JlYXQgbG92ZSBvZiBsaWZlIGlmIEkgYW0gc28gaXJyYXRpb25hbCBhcyBub3QgdG8ga25vdyB0aGF0IGlmIHlvdSwgd2hvIGFyZSBteSBmZWxsb3cgY2l0aXplbnMsIGNvdWxkIG5vdAo8bWlsZXN0b25lIG49IjM3ZCIgdW5pdD0ic2VjdGlvbiIgLz5lbmR1cmUgbXkgY29udmVyc2F0aW9uIGFuZCBteSB3b3JkcywgYnV0IGZvdW5kIHRoZW0gdG9vIGlya3NvbWUgYW5kIGRpc2FncmVlYWJsZSwgc28gdGhhdCB5b3UgYXJlIG5vdyBzZWVraW5nIHRvIGJlIHJpZCBvZiB0aGVtLCBvdGhlcnMgd2lsbCBub3QgYmUgd2lsbGluZyB0byBlbmR1cmUgdGhlbS4gIE5vLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhleSBjZXJ0YWlubHkgd2lsbCBub3QuICBBIGZpbmUgbGlmZSBJIHNob3VsZCBsZWFkIGlmIEkgd2VudCBhd2F5IGF0IG15IHRpbWUgb2YgbGlmZSwgd2FuZGVyaW5nIGZyb20gY2l0eSB0byBjaXR5IGFuZCBhbHdheXMgYmVpbmcgZHJpdmVuIG91dCEgIEZvciB3ZWxsIEkga25vdyB0aGF0IHdoZXJldmVyIEkgZ28sIHRoZSB5b3VuZyBtZW4gd2lsbCBsaXN0ZW4gdG8gbXkgdGFsaywgYXMgdGhleSBkbyBoZXJlOyAgYW5kIGlmIEkgZHJpdmUgdGhlbSBhd2F5LCB0aGV5IHdpbGwgdGhlbXNlbHZlcyBwZXJzdWFkZSB0aGVpciBlbGRlcnMgdG8gZHJpdmUgbWUgb3V0LCBhbmQgaWYKPG1pbGVzdG9uZSBuPSIzN2UiIHVuaXQ9InNlY3Rpb24iIC8+SSBkbyBub3QgZHJpdmUgdGhlbSBhd2F5LCB0aGVpciBmYXRoZXJzIGFuZCByZWxhdGl2ZXMgd2lsbCBkcml2ZSBtZSBvdXQgZm9yIHRoZWlyIHNha2VzLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+UGVyaGFwcyBzb21lb25lIG1pZ2h0IHNheSwg4oCcU29jcmF0ZXMsIGNhbiB5b3Ugbm90IGdvIGF3YXkgZnJvbSB1cyBhbmQgbGl2ZSBxdWlldGx5LCB3aXRob3V0IHRhbGtpbmc/4oCdICBOb3cgdGhpcyBpcyB0aGUgaGFyZGVzdCB0aGluZyB0byBtYWtlIHNvbWUgb2YgeW91IGJlbGlldmUuICBGb3IgaWYgSSBzYXkgdGhhdCBzdWNoIGNvbmR1Y3Qgd291bGQgYmUgZGlzb2JlZGllbmNlIHRvIHRoZSBnb2QgYW5kIHRoYXQgdGhlcmVmb3JlIEkgY2Fubm90IGtlZXAgcXVpZXQsIHlvdSB3aWxsIHRoaW5rIEkgYW0gamVzdGluZyBhbmQgd2lsbCBub3QgYmVsaWV2ZSBtZTsgCjxtaWxlc3RvbmUgbj0iMzgiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSIzOGEiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGlmIGFnYWluIEkgc2F5IHRoYXQgdG8gdGFsayBldmVyeSBkYXkgYWJvdXQgdmlydHVlIGFuZCB0aGUgb3RoZXIgdGhpbmdzIGFib3V0IHdoaWNoIHlvdSBoZWFyIG1lIHRhbGtpbmcgYW5kIGV4YW1pbmluZyBteXNlbGYgYW5kIG90aGVycyBpcyB0aGUgZ3JlYXRlc3QgZ29vZCB0byBtYW4sIGFuZCB0aGF0IHRoZSB1bmV4YW1pbmVkIGxpZmUgaXMgbm90IHdvcnRoIGxpdmluZywgeW91IHdpbGwgYmVsaWV2ZSBtZSBzdGlsbCBsZXNzLiAgVGhpcyBpcyBhcyBJIHNheSwgZ2VudGxlbWVuLCBidXQgaXQgaXMgbm90IGVhc3kgdG8gY29udmluY2UgeW91LiAgQmVzaWRlcywgSSBhbSBub3QgYWNjdXN0b21lZCB0byB0aGluayB0aGF0IEkgZGVzZXJ2ZSBhbnl0aGluZyBiYWQuICBJZiBJIGhhZCBtb25leSwgSSB3b3VsZCBoYXZlIHByb3Bvc2VkIGEgZmluZSwKPG1pbGVzdG9uZSBuPSIzOGIiIHVuaXQ9InNlY3Rpb24iIC8+YXMgbGFyZ2UgYXMgSSBjb3VsZCBwYXk7ICBmb3IgdGhhdCB3b3VsZCBoYXZlIGRvbmUgbWUgbm8gaGFybS4gIEJ1dCBhcyBpdCBpc+KAlEkgaGF2ZSBubyBtb25leSwgdW5sZXNzIHlvdSBhcmUgd2lsbGluZyB0byBpbXBvc2UgYSBmaW5lIHdoaWNoIEkgY291bGQgcGF5LiAgSSBtaWdodCBwZXJoYXBzIHBheSBhIG1pbmEgb2Ygc2lsdmVyLiAgU28gSSBwcm9wb3NlIHRoYXQgcGVuYWx0eTsgIGJ1dCBQbGF0byBoZXJlLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgYW5kIENyaXRvIGFuZCBDcml0b2J1bHVzLCBhbmQgQXJpc3RvYnVsdXMgdGVsbCBtZSB0byBwcm9wb3NlIGEgZmluZSBvZiB0aGlydHkgbWluYXMsIHNheWluZyB0aGF0IHRoZXkgYXJlIHN1cmV0aWVzIGZvciBpdC4gIFNvIEkgcHJvcG9zZSBhIGZpbmUgb2YgdGhhdCBhbW91bnQsIGFuZCB0aGVzZSBtZW4sIHdobyBhcmUgYW1wbHkgc3VmZmljaWVudCwgd2lsbCBiZSBteSBzdXJldGllcy4KPG1pbGVzdG9uZSBuPSIzIiB1bml0PSJzcGVlY2giIC8+PG1pbGVzdG9uZSBuPSIzOGMiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyBubyBsb25nIHRpbWUsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB3aGljaCB5b3UgZ2FpbiwgYW5kIGZvciB0aGF0IHRob3NlIHdobyB3aXNoIHRvIGNhc3QgYSBzbHVyIHVwb24gdGhlIHN0YXRlIHdpbGwgZ2l2ZSB5b3UgdGhlIG5hbWUgYW5kIGJsYW1lIG9mIGhhdmluZyBraWxsZWQgU29jcmF0ZXMsIGEgd2lzZSBtYW47ICBmb3IsIHlvdSBrbm93LCB0aG9zZSB3aG8gd2lzaCB0byByZXZpbGUgeW91IHdpbGwgc2F5IEkgYW0gd2lzZSwgZXZlbiB0aG91Z2ggSSBhbSBub3QuICBOb3cgaWYgeW91IGhhZCB3YWl0ZWQgYSBsaXR0bGUgd2hpbGUsIHdoYXQgeW91IGRlc2lyZSB3b3VsZCBoYXZlIGNvbWUgdG8geW91IG9mIGl0cyBvd24gYWNjb3JkOyAgZm9yIHlvdSBzZWUgaG93IG9sZCBJIGFtLCBob3cgZmFyIGFkdmFuY2VkIGluIGxpZmUgYW5kIGhvdyBuZWFyIGRlYXRoLiAgSSBzYXkgdGhpcyBub3QgdG8gYWxsIG9mIHlvdSwKPG1pbGVzdG9uZSBuPSIzOGQiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IHRvIHRob3NlIHdobyB2b3RlZCBmb3IgbXkgZGVhdGguICBBbmQgdG8gdGhlbSBhbHNvIEkgaGF2ZSBzb21ldGhpbmcgZWxzZSB0byBzYXkuICBQZXJoYXBzIHlvdSB0aGluaywgZ2VudGxlbWVuLCB0aGF0IEkgaGF2ZSBiZWVuIGNvbnZpY3RlZCB0aHJvdWdoIGxhY2sgb2Ygc3VjaCB3b3JkcyBhcyB3b3VsZCBoYXZlIG1vdmVkIHlvdSB0byBhY3F1aXQgbWUsIGlmIEkgaGFkIHRob3VnaHQgaXQgcmlnaHQgdG8gZG8gYW5kIHNheSBldmVyeXRoaW5nIHRvIGdhaW4gYW4gYWNxdWl0dGFsLiAgRmFyIGZyb20gaXQuICBBbmQgeWV0IGl0IGlzIHRocm91Z2ggYSBsYWNrIHRoYXQgSSBoYXZlIGJlZW4gY29udmljdGVkLCBub3QgaG93ZXZlciBhIGxhY2sgb2Ygd29yZHMsIGJ1dCBvZiBpbXB1ZGVuY2UgYW5kIHNoYW1lbGVzc25lc3MsIGFuZCBvZiB3aWxsaW5nbmVzcyB0byBzYXkgdG8geW91IHN1Y2ggdGhpbmdzIGFzIHlvdSB3b3VsZCBoYXZlIGxpa2VkIGJlc3QgdG8gaGVhci4gIFlvdSB3b3VsZCBoYXZlIGxpa2VkIHRvIGhlYXIgbWUgd2FpbGluZyBhbmQgbGFtZW50aW5nIGFuZCBkb2luZyBhbmQgc2F5aW5nCjxtaWxlc3RvbmUgbj0iMzhlIiB1bml0PSJzZWN0aW9uIiAvPm1hbnkgdGhpbmdzIHdoaWNoIGFyZSwgYXMgSSBtYWludGFpbiwgdW53b3J0aHkgb2YgbWXigJRzdWNoIHRoaW5ncyBhcyB5b3UgYXJlIGFjY3VzdG9tZWQgdG8gaGVhciBmcm9tIG90aGVycy4gIEJ1dCBJIGRpZCBub3QgdGhpbmsgYXQgdGhlIHRpbWUgdGhhdCBJIG91Z2h0LCBvbiBhY2NvdW50IG9mIHRoZSBkYW5nZXIgSSB3YXMgaW4sIHRvIGRvIGFueXRoaW5nIHVud29ydGh5IG9mIGEgZnJlZSBtYW4sIG5vciBkbyBJIG5vdyByZXBlbnQgb2YgaGF2aW5nIG1hZGUgbXkgZGVmZW5jZSBhcyBJIGRpZCwgYnV0IEkgbXVjaCBwcmVmZXIgdG8gZGllIGFmdGVyIHN1Y2ggYSBkZWZlbmNlIHRoYW4gdG8gbGl2ZSBhZnRlciBhIGRlZmVuY2Ugb2YgdGhlIG90aGVyIHNvcnQuICBGb3IgbmVpdGhlciBpbiB0aGUgY291cnQgbm9yIGluIHdhciBvdWdodCBJCjxtaWxlc3RvbmUgbj0iMzkiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSIzOWEiIHVuaXQ9InNlY3Rpb24iIC8+b3IgYW55IG90aGVyIG1hbiB0byBwbGFuIHRvIGVzY2FwZSBkZWF0aCBieSBldmVyeSBwb3NzaWJsZSBtZWFucy4gIEluIGJhdHRsZXMgaXQgaXMgb2Z0ZW4gcGxhaW4gdGhhdCBhIG1hbiBtaWdodCBhdm9pZCBkZWF0aCBieSB0aHJvd2luZyBkb3duIGhpcyBhcm1zIGFuZCBiZWdnaW5nIG1lcmN5IG9mIGhpcyBwdXJzdWVyczsgIGFuZCB0aGVyZSBhcmUgbWFueSBvdGhlciBtZWFucyBvZiBlc2NhcGluZyBkZWF0aCBpbiBkYW5nZXJzIG9mIHZhcmlvdXMga2luZHMgaWYgb25lIGlzIHdpbGxpbmcgdG8gZG8gYW5kIHNheSBhbnl0aGluZy4gIEJ1dCwgZ2VudGxlbWVuLCBpdCBpcyBub3QgaGFyZCB0byBlc2NhcGUgZGVhdGg7ICBpdCBpcyBtdWNoIGhhcmRlciB0byBlc2NhcGUgd2lja2VkbmVzcywgZm9yIHRoYXQgcnVucyBmYXN0ZXIgdGhhbiBkZWF0aC4gCjxtaWxlc3RvbmUgbj0iMzliIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBub3cgSSwgc2luY2UgSSBhbSBzbG93IGFuZCBvbGQsIGFtIGNhdWdodCBieSB0aGUgc2xvd2VyIHJ1bm5lciwgYW5kIG15IGFjY3VzZXJzLCB3aG8gYXJlIGNsZXZlciBhbmQgcXVpY2ssIGJ5IHRoZSBmYXN0ZXIsIHdpY2tlZG5lc3MuICBBbmQgbm93IEkgc2hhbGwgZ28gYXdheSBjb252aWN0ZWQgYnkgeW91IGFuZCBzZW50ZW5jZWQgdG8gZGVhdGgsIGFuZCB0aGV5IGdvIGNvbnZpY3RlZCBieSB0cnV0aCBvZiB2aWxsYWlueSBhbmQgd3JvbmcuICBBbmQgSSBhYmlkZSBieSBteSBwZW5hbHR5LCBhbmQgdGhleSBieSB0aGVpcnMuICBQZXJoYXBzIHRoZXNlIHRoaW5ncyBoYWQgdG8gYmUgc28sIGFuZCBJIHRoaW5rIHRoZXkgYXJlIHdlbGwuCjxtaWxlc3RvbmUgbj0iMzljIiB1bml0PSJzZWN0aW9uIiAvPiBBbmQgbm93IEkgd2lzaCB0byBwcm9waGVzeSB0byB5b3UsIE8geWUgd2hvIGhhdmUgY29uZGVtbmVkIG1lOyAgZm9yIEkgYW0gbm93IGF0IHRoZSB0aW1lIHdoZW4gbWVuIG1vc3QgZG8gcHJvcGhlc3ksIHRoZSB0aW1lIGp1c3QgYmVmb3JlIGRlYXRoLiAgQW5kIEkgc2F5IHRvIHlvdSwgeWUgbWVuIHdobyBoYXZlIHNsYWluIG1lLCB0aGF0IHB1bmlzaG1lbnQgd2lsbCBjb21lIHVwb24geW91IHN0cmFpZ2h0LXdheSBhZnRlciBteSBkZWF0aCwgZmFyIG1vcmUgZ3JpZXZvdXMgaW4gc29vdGggdGhhbiB0aGUgcHVuaXNobWVudCBvZiBkZWF0aCB3aGljaCB5b3UgaGF2ZSBtZXRlZCBvdXQgdG8gbWUuICBGb3Igbm93IHlvdSBoYXZlIGRvbmUgdGhpcyB0byBtZSBiZWNhdXNlIHlvdSBob3BlZCB0aGF0IHlvdSB3b3VsZCBiZSByZWxpZXZlZCBmcm9tIHJlbmRlcmluZyBhbiBhY2NvdW50IG9mIHlvdXIgbGl2ZXMsIGJ1dCBJIHNheSB0aGF0IHlvdSB3aWxsIGZpbmQgdGhlIHJlc3VsdCBmYXIgZGlmZmVyZW50LiAgVGhvc2Ugd2hvIHdpbGwgZm9yY2UgeW91IHRvIGdpdmUgYW4gYWNjb3VudCB3aWxsIGJlIG1vcmUgbnVtZXJvdXMgdGhhbiBoZXJldG9mb3JlOyAKPG1pbGVzdG9uZSBuPSIzOWQiIHVuaXQ9InNlY3Rpb24iIC8+bWVuIHdob20gSSByZXN0cmFpbmVkLCB0aG91Z2ggeW91IGtuZXcgaXQgbm90OyAgYW5kIHRoZXkgd2lsbCBiZSBoYXJzaGVyLCBpbmFzbXVjaCBhcyB0aGV5IGFyZSB5b3VuZ2VyLCBhbmQgeW91IHdpbGwgYmUgbW9yZSBhbm5veWVkLiAgRm9yIGlmIHlvdSB0aGluayB0aGF0IGJ5IHB1dHRpbmcgbWVuIHRvIGRlYXRoIHlvdSB3aWxsIHByZXZlbnQgYW55b25lIGZyb20gcmVwcm9hY2hpbmcgeW91IGJlY2F1c2UgeW91IGRvIG5vdCBhY3QgYXMgeW91IHNob3VsZCwgeW91IGFyZSBtaXN0YWtlbi4gIFRoYXQgbW9kZSBvZiBlc2NhcGUgaXMgbmVpdGhlciBwb3NzaWJsZSBhdCBhbGwgbm9yIGhvbm9yYWJsZSwgYnV0IHRoZSBlYXNpZXN0IGFuZCBtb3N0IGhvbm9yYWJsZSBlc2NhcGUgaXMgbm90IGJ5IHN1cHByZXNzaW5nIG90aGVycywgYnV0IGJ5IG1ha2luZyB5b3Vyc2VsdmVzIGFzIGdvb2QgYXMgcG9zc2libGUuICBTbyB3aXRoIHRoaXMgcHJvcGhlY3kgdG8geW91IHdobyBjb25kZW1uZWQgbWUKPG1pbGVzdG9uZSBuPSIzOWUiIHVuaXQ9InNlY3Rpb24iIC8+SSB0YWtlIG15IGxlYXZlLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHdpdGggdGhvc2Ugd2hvIHZvdGVkIGZvciBteSBhY3F1aXR0YWwgSSBzaG91bGQgbGlrZSB0byBjb252ZXJzZSBhYm91dCB0aGlzIHdoaWNoIGhhcyBoYXBwZW5lZCwgd2hpbGUgdGhlIGF1dGhvcml0aWVzIGFyZSBidXN5IGFuZCBiZWZvcmUgSSBnbyB0byB0aGUgcGxhY2Ugd2hlcmUgSSBtdXN0IGRpZS4gIFdhaXQgd2l0aCBtZSBzbyBsb25nLCBteSBmcmllbmRzOyAgZm9yIG5vdGhpbmcgcHJldmVudHMgb3VyIGNoYXR0aW5nIHdpdGggZWFjaCBvdGhlcgo8bWlsZXN0b25lIG49IjQwIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNDBhIiB1bml0PSJzZWN0aW9uIiAvPndoaWxlIHRoZXJlIGlzIHRpbWUuICBJIGZlZWwgdGhhdCB5b3UgYXJlIG15IGZyaWVuZHMsIGFuZCBJIHdpc2ggdG8gc2hvdyB5b3UgdGhlIG1lYW5pbmcgb2YgdGhpcyB3aGljaCBoYXMgbm93IGhhcHBlbmVkIHRvIG1lLiAgRm9yLCBqdWRnZXPigJRhbmQgaW4gY2FsbGluZyB5b3UganVkZ2VzIEkgZ2l2ZSB5b3UgeW91ciByaWdodCBuYW1l4oCUYSB3b25kZXJmdWwgdGhpbmcgaGFzIGhhcHBlbmVkIHRvIG1lLiAgRm9yIGhpdGhlcnRvIHRoZSBjdXN0b21hcnkgcHJvcGhldGljIG1vbml0b3IgYWx3YXlzIHNwb2tlIHRvIG1lIHZlcnkgZnJlcXVlbnRseSBhbmQgb3Bwb3NlZCBtZSBldmVuIGluIHZlcnkgc21hbGwgbWF0dGVycywgaWYgSSB3YXMgZ29pbmcgdG8gZG8gYW55dGhpbmcgSSBzaG91bGQgbm90OyAgYnV0IG5vdywgYXMgeW91IHlvdXJzZWx2ZXMgc2VlLCB0aGlzIHRoaW5nIHdoaWNoIG1pZ2h0IGJlIHRob3VnaHQsIGFuZCBpcyBnZW5lcmFsbHkgY29uc2lkZXJlZCwgdGhlIGdyZWF0ZXN0IG9mIGV2aWxzIGhhcyBjb21lIHVwb24gbWU7ICBidXQgdGhlIGRpdmluZSBzaWduIGRpZCBub3Qgb3Bwb3NlIG1lCjxtaWxlc3RvbmUgbj0iNDBiIiB1bml0PSJzZWN0aW9uIiAvPmVpdGhlciB3aGVuIEkgbGVmdCBteSBob21lIGluIHRoZSBtb3JuaW5nLCBvciB3aGVuIEkgY2FtZSBoZXJlIHRvIHRoZSBjb3VydCwgb3IgYXQgYW55IHBvaW50IG9mIG15IHNwZWVjaCwgd2hlbiBJIHdhcyBnb2luZyB0byBzYXkgYW55dGhpbmc7ICBhbmQgeWV0IG9uIG90aGVyIG9jY2FzaW9ucyBpdCBzdG9wcGVkIG1lIGF0IG1hbnkgcG9pbnRzIGluIHRoZSBtaWRzdCBvZiBhIHNwZWVjaDsgIGJ1dCBub3csIGluIHRoaXMgYWZmYWlyLCBpdCBoYXMgbm90IG9wcG9zZWQgbWUgaW4gYW55dGhpbmcgSSB3YXMgZG9pbmcgb3Igc2F5aW5nLiAgV2hhdCB0aGVuIGRvIEkgc3VwcG9zZSBpcyB0aGUgcmVhc29uPyAgSSB3aWxsIHRlbGwgeW91LiAgVGhpcyB3aGljaCBoYXMgaGFwcGVuZWQgdG8gbWUgaXMgZG91YnRsZXNzIGEgZ29vZCB0aGluZywgYW5kIHRob3NlIG9mIHVzIHdobyB0aGluayBkZWF0aCBpcyBhbiBldmlsCjxtaWxlc3RvbmUgbj0iNDBjIiB1bml0PSJzZWN0aW9uIiAvPm11c3QgYmUgbWlzdGFrZW4uICBBIGNvbnZpbmNpbmcgcHJvb2Ygb2YgdGhpcyBiZWVuIGdpdmVuIG1lOyAgZm9yIHRoZSBhY2N1c3RvbWVkIHNpZ24gd291bGQgc3VyZWx5IGhhdmUgb3Bwb3NlZCBtZSBpZiBJIGhhZCBub3QgYmVlbiBnb2luZyB0byBtZWV0IHdpdGggc29tZXRoaW5nIGdvb2QuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZXQgdXMgY29uc2lkZXIgaW4gYW5vdGhlciB3YXkgYWxzbyBob3cgZ29vZCByZWFzb24gdGhlcmUgaXMgdG8gaG9wZSB0aGF0IGl0IGlzIGEgZ29vZCB0aGluZy4gIEZvciB0aGUgc3RhdGUgb2YgZGVhdGggaXMgb25lIG9mIHR3byB0aGluZ3M6ICBlaXRoZXIgaXQgaXMgdmlydHVhbGx5IG5vdGhpbmduZXNzLCBzbyB0aGF0IHRoZSBkZWFkIGhhcyBubyBjb25zY2lvdXNuZXNzIG9mIGFueXRoaW5nLCBvciBpdCBpcywgYXMgcGVvcGxlIHNheSwgYSBjaGFuZ2UgYW5kIG1pZ3JhdGlvbiBvZiB0aGUgc291bCBmcm9tIHRoaXMgdG8gYW5vdGhlciBwbGFjZS4gIEFuZCBpZiBpdCBpcyB1bmNvbnNjaW91c25lc3MsCjxtaWxlc3RvbmUgbj0iNDBkIiB1bml0PSJzZWN0aW9uIiAvPmxpa2UgYSBzbGVlcCBpbiB3aGljaCB0aGUgc2xlZXBlciBkb2VzIG5vdCBldmVuIGRyZWFtLCBkZWF0aCB3b3VsZCBiZSBhIHdvbmRlcmZ1bCBnYWluLiAgRm9yIEkgdGhpbmsgaWYgYW55IG9uZSB3ZXJlIHRvIHBpY2sgb3V0IHRoYXQgbmlnaHQgaW4gd2hpY2ggaGUgc2xlcHQgYSBkcmVhbWxlc3Mgc2xlZXAgYW5kLCBjb21wYXJpbmcgd2l0aCBpdCB0aGUgb3RoZXIgbmlnaHRzIGFuZCBkYXlzIG9mIGhpcyBsaWZlLCB3ZXJlIHRvIHNheSwgYWZ0ZXIgZHVlIGNvbnNpZGVyYXRpb24sIGhvdyBtYW55IGRheXMgYW5kIG5pZ2h0cyBpbiBoaXMgbGlmZSBoYWQgcGFzc2VkIG1vcmUgcGxlYXNhbnRseSB0aGFuIHRoYXQgbmlnaHQs4oCUSSBiZWxpZXZlIHRoYXQgbm90IG9ubHkgYW55IHByaXZhdGUgcGVyc29uLCBidXQgZXZlbiB0aGUgZ3JlYXQgS2luZyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMDIzMSIga2V5PSJ0Z24sNzAwMDIzMSI+UGVyc2lhPC9wbGFjZU5hbWU+IGhpbXNlbGYKPG1pbGVzdG9uZSBuPSI0MGUiIHVuaXQ9InNlY3Rpb24iIC8+d291bGQgZmluZCB0aGF0IHRoZXkgd2VyZSBmZXcgaW4gY29tcGFyaXNvbiB3aXRoIHRoZSBvdGhlciBkYXlzIGFuZCBuaWdodHMuICBTbyBpZiBzdWNoIGlzIHRoZSBuYXR1cmUgb2YgZGVhdGgsIEkgY291bnQgaXQgYSBnYWluOyAgZm9yIGluIHRoYXQgY2FzZSwgYWxsIHRpbWUgc2VlbXMgdG8gYmUgbm8gbG9uZ2VyIHRoYW4gb25lIG5pZ2h0LiAgQnV0IG9uIHRoZSBvdGhlciBoYW5kLCBpZiBkZWF0aCBpcywgYXMgaXQgd2VyZSwgYSBjaGFuZ2Ugb2YgaGFiaXRhdGlvbiBmcm9tIGhlcmUgdG8gc29tZSBvdGhlciBwbGFjZSwgYW5kIGlmIHdoYXQgd2UgYXJlIHRvbGQgaXMgdHJ1ZSwgdGhhdCBhbGwgdGhlIGRlYWQgYXJlIHRoZXJlLCB3aGF0IGdyZWF0ZXIgYmxlc3NpbmcgY291bGQgdGhlcmUgYmUsIGp1ZGdlcz8gIEZvciBpZiBhIG1hbiB3aGVuIGhlIHJlYWNoZXMgdGhlIG90aGVyIHdvcmxkLAo8bWlsZXN0b25lIG49IjQxIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNDFhIiB1bml0PSJzZWN0aW9uIiAvPmFmdGVyIGxlYXZpbmcgYmVoaW5kIHRoZXNlIHdobyBjbGFpbSB0byBiZSBqdWRnZXMsIHNoYWxsIGZpbmQgdGhvc2Ugd2hvIGFyZSByZWFsbHkganVkZ2VzIHdobyBhcmUgc2FpZCB0byBzaXQgaW4ganVkZ21lbnQgdGhlcmUsIE1pbm9zIGFuZCBSaGFkYW1hbnRodXMsIGFuZCBBZWFjdXMgYW5kIFRyaXB0b2xlbXVzLCBhbmQgYWxsIHRoZSBvdGhlciBkZW1pZ29kcyB3aG8gd2VyZSBqdXN0IG1lbiBpbiB0aGVpciBsaXZlcywgd291bGQgdGhlIGNoYW5nZSBvZiBoYWJpdGF0aW9uIGJlIHVuZGVzaXJhYmxlPyAgT3IgYWdhaW4sIHdoYXQgd291bGQgYW55IG9mIHlvdSBnaXZlIHRvIG1lZXQgd2l0aCBPcnBoZXVzIGFuZCBNdXNhZXVzIGFuZCBIZXNpb2QgYW5kIEhvbWVyPyAgSSBhbSB3aWxsaW5nIHRvIGRpZSBtYW55IHRpbWVzIG92ZXIsIGlmIHRoZXNlIHRoaW5ncyBhcmUgdHJ1ZTsgIGZvciBJIHBlcnNvbmFsbHkgc2hvdWxkIGZpbmQgdGhlIGxpZmUgdGhlcmUgd29uZGVyZnVsLAo8bWlsZXN0b25lIG49IjQxYiIgdW5pdD0ic2VjdGlvbiIgLz53aGVuIEkgbWV0IFBhbGFtZWRlcyBvciBBamF4LCB0aGUgc29uIG9mIFRlbGFtb24sIG9yIGFueSBvdGhlciBtZW4gb2Ygb2xkIHdobyBsb3N0IHRoZWlyIGxpdmVzIHRocm91Z2ggYW4gdW5qdXN0IGp1ZGdlbWVudCwgYW5kIGNvbXBhcmVkIG15IGV4cGVyaWVuY2Ugd2l0aCB0aGVpcnMuICBJIHRoaW5rIHRoYXQgd291bGQgbm90IGJlIHVucGxlYXNhbnQuICBBbmQgdGhlIGdyZWF0ZXN0IHBsZWFzdXJlIHdvdWxkIGJlIHRvIHBhc3MgbXkgdGltZSBpbiBleGFtaW5pbmcgYW5kIGludmVzdGlnYXRpbmcgdGhlIHBlb3BsZSB0aGVyZSwgYXMgSSBkbyB0aG9zZSBoZXJlLCB0byBmaW5kIG91dCB3aG8gYW1vbmcgdGhlbSBpcyB3aXNlIGFuZCB3aG8gdGhpbmtzIGhlIGlzIHdoZW4gaGUgaXMgbm90LiAgV2hhdCBwcmljZSB3b3VsZCBhbnkgb2YgeW91IHBheSwganVkZ2VzLCB0byBleGFtaW5lIGhpbSB3aG8gbGVkIHRoZSBncmVhdCBhcm15IGFnYWluc3QgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUcm95IiBrZXk9InBlcnNldXMsVHJveSI+VHJveTwvcGxhY2VOYW1lPiwKPG1pbGVzdG9uZSBuPSI0MWMiIHVuaXQ9InNlY3Rpb24iIC8+b3IgT2R5c3NldXMsIG9yIFNpc3lwaHVzLCBvciBjb3VudGxlc3Mgb3RoZXJzLCBib3RoIG1lbiBhbmQgd29tZW4sIHdob20gSSBtaWdodCBtZW50aW9uPyAgVG8gY29udmVyc2UgYW5kIGFzc29jaWF0ZSB3aXRoIHRoZW0gYW5kIGV4YW1pbmUgdGhlbSB3b3VsZCBiZSBpbW1lYXN1cmFibGUgaGFwcGluZXNzLiAgQXQgYW55IHJhdGUsIHRoZSBmb2xrIHRoZXJlIGRvIG5vdCBraWxsIHBlb3BsZSBmb3IgaXQ7ICBzaW5jZSwgaWYgd2hhdCB3ZSBhcmUgdG9sZCBpcyB0cnVlLCB0aGV5IGFyZSBpbW1vcnRhbCBmb3IgYWxsIGZ1dHVyZSB0aW1lLCBiZXNpZGVzIGJlaW5nIGhhcHBpZXIgaW4gb3RoZXIgcmVzcGVjdHMgdGhhbiBtZW4gYXJlIGhlcmUuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgeW91IGFsc28sIGp1ZGdlcywgbXVzdCByZWdhcmQgZGVhdGggaG9wZWZ1bGx5IGFuZCBtdXN0IGJlYXIgaW4gbWluZCB0aGlzIG9uZSB0cnV0aCwKPG1pbGVzdG9uZSBuPSI0MWQiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBubyBldmlsIGNhbiBjb21lIHRvIGEgZ29vZCBtYW4gZWl0aGVyIGluIGxpZmUgb3IgYWZ0ZXIgZGVhdGgsIGFuZCBHb2QgZG9lcyBub3QgbmVnbGVjdCBoaW0uICBTbywgdG9vLCB0aGlzIHdoaWNoIGhhZCBjb21lIHRvIG1lIGhhcyBub3QgY29tZSBieSBjaGFuY2UsIGJ1dCBJIHNlZSBwbGFpbmx5IHRoYXQgaXQgd2FzIGJldHRlciBmb3IgbWUgdG8gZGllIG5vdyBhbmQgYmUgZnJlZWQgZnJvbSB0cm91Ymxlcy4gIFRoYXQgaXMgdGhlIHJlYXNvbiB3aHkgdGhlIHNpZ24gbmV2ZXIgaW50ZXJmZXJlZCB3aXRoIG1lLCBhbmQgSSBhbSBub3QgYXQgYWxsIGFuZ3J5IHdpdGggdGhvc2Ugd2hvIGNvbmRlbW5lZCBtZSBvciB3aXRoIG15IGFjY3VzZXJzLiAgQW5kIHlldCBpdCB3YXMgbm90IHdpdGggdGhhdCBpbiB2aWV3IHRoYXQgdGhleSBjb25kZW1uZWQgYW5kIGFjY3VzZWQgbWUsIGJ1dCBiZWNhdXNlCjxtaWxlc3RvbmUgbj0iNDFlIiB1bml0PSJzZWN0aW9uIiAvPnRoZXkgdGhvdWdodCB0byBpbmp1cmUgbWUuICBUaGV5IGRlc2VydmUgYmxhbWUgZm9yIHRoYXQuICBIb3dldmVyLCBJIG1ha2UgdGhpcyByZXF1ZXN0IG9mIHRoZW06ICB3aGVuIG15IHNvbnMgZ3JvdyB1cCwgZ2VudGxlbWVuLCBwdW5pc2ggdGhlbSBieSB0cm91YmxpbmcgdGhlbSBhcyBJIGhhdmUgdHJvdWJsZWQgeW91OyAgaWYgdGhleSBzZWVtIHRvIHlvdSB0byBjYXJlIGZvciBtb25leSBvciBhbnl0aGluZyBlbHNlIG1vcmUgdGhhbiBmb3IgdmlydHVlLCBhbmQgaWYgdGhleSB0aGluayB0aGV5IGFtb3VudCB0byBzb21ldGhpbmcgd2hlbiB0aGV5IGRvIG5vdCwgcmVidWtlIHRoZW0gYXMgSSBoYXZlIHJlYnVrZWQgeW91IGJlY2F1c2UgdGhleSBkbyBub3QgY2FyZSBmb3Igd2hhdCB0aGV5IG91Z2h0LCBhbmQgdGhpbmsgdGhleSBhbW91bnQgdG8gc29tZXRoaW5nIHdoZW4gdGhleSBhcmUgd29ydGggbm90aGluZy4gIElmIHlvdSBkbyB0aGlzLCBib3RoIEkgYW5kIG15IHNvbnMKPG1pbGVzdG9uZSBuPSI0MiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjQyYSIgdW5pdD0ic2VjdGlvbiIgLz5zaGFsbCBoYXZlIHJlY2VpdmVkIGp1c3QgdHJlYXRtZW50IGZyb20geW91LjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IG5vdyB0aGUgdGltZSBoYXMgY29tZSB0byBnbyBhd2F5LiAgSSBnbyB0byBkaWUsIGFuZCB5b3UgdG8gbGl2ZTsgIGJ1dCB3aGljaCBvZiB1cyBnb2VzIHRvIHRoZSBiZXR0ZXIgbG90LCBpcyBrbm93biB0byBub25lIGJ1dCBHb2QuPC9wPjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgaGF2ZSBiZWVuIGFmZmVjdGVkIGJ5IG15IGFjY3VzZXJzLCBJIGRvIG5vdCBrbm93OyAgYnV0IEksIGZvciBteSBwYXJ0LCBhbG1vc3QgZm9yZ290IG15IG93biBpZGVudGl0eSwgc28gcGVyc3Vhc2l2ZWx5IGRpZCB0aGV5IHRhbGs7ICBhbmQgeWV0IHRoZXJlIGlzIGhhcmRseSBhIHdvcmQgb2YgdHJ1dGggaW4gd2hhdCB0aGV5IGhhdmUgc2FpZC4gIEJ1dCBJIHdhcyBtb3N0IGFtYXplZCBieSBvbmUgb2YgdGhlIG1hbnkgbGllcyB0aGF0IHRoZXkgdG9sZOKAlHdoZW4gdGhleSBzYWlkIHRoYXQgeW91IG11c3QgYmUgb24geW91ciBndWFyZCBub3QgdG8gYmUgZGVjZWl2ZWQgYnkgbWUsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxN2IiIHVuaXQ9InNlY3Rpb24iIC8+YmVjYXVzZSBJIHdhcyBhIGNsZXZlciBzcGVha2VyLiAgRm9yIEkgdGhvdWdodCBpdCB0aGUgbW9zdCBzaGFtZWxlc3MgcGFydCBvZiB0aGVpciBjb25kdWN0IHRoYXQgdGhleSBhcmUgbm90IGFzaGFtZWQgYmVjYXVzZSB0aGV5IHdpbGwgaW1tZWRpYXRlbHkgYmUgY29udmljdGVkIGJ5IG1lIG9mIGZhbHNlaG9vZCBieSB0aGUgZXZpZGVuY2Ugb2YgZmFjdCwgd2hlbiBJIHNob3cgbXlzZWxmIHRvIGJlIG5vdCBpbiB0aGUgbGVhc3QgYSBjbGV2ZXIgc3BlYWtlciwgdW5sZXNzIGluZGVlZCB0aGV5IGNhbGwgaGltIGEgY2xldmVyIHNwZWFrZXIgd2hvIHNwZWFrcyB0aGUgdHJ1dGg7ICBmb3IgaWYgdGhpcyBpcyB3aGF0IHRoZXkgbWVhbiwgSSB3b3VsZCBhZ3JlZSB0aGF0IEkgYW0gYW4gb3JhdG9y4oCUbm90IGFmdGVyIHRoZWlyIGZhc2hpb24uICBOb3cgdGhleSwgYXMgSSBzYXksIGhhdmUgc2FpZCBsaXR0bGUgb3Igbm90aGluZyB0cnVlOyAgYnV0IHlvdSBzaGFsbCBoZWFyIGZyb20gbWUgbm90aGluZyBidXQgdGhlIHRydXRoLiAgTm90LCBob3dldmVyLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBzcGVlY2hlcyBmaW5lbHkgdHJpY2tlZCBvdXQgd2l0aCB3b3JkcyBhbmQgcGhyYXNlcywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE3YyIgdW5pdD0ic2VjdGlvbiIgLz5hcyB0aGVpcnMgYXJlLCBub3IgY2FyZWZ1bGx5IGFycmFuZ2VkLCBidXQgeW91IHdpbGwgaGVhciB0aGluZ3Mgc2FpZCBhdCByYW5kb20gd2l0aCB0aGUgd29yZHMgdGhhdCBoYXBwZW4gdG8gb2NjdXIgdG8gbWUuICBGb3IgSSB0cnVzdCB0aGF0IHdoYXQgSSBzYXkgaXMganVzdDsgIGFuZCBsZXQgbm9uZSBvZiB5b3UgZXhwZWN0IGFueXRoaW5nIGVsc2UuICBGb3Igc3VyZWx5IGl0IHdvdWxkIG5vdCBiZSBmaXR0aW5nIGZvciBvbmUgb2YgbXkgYWdlIHRvIGNvbWUgYmVmb3JlIHlvdSBsaWtlIGEgeW91bmdzdGVyIG1ha2luZyB1cCBzcGVlY2hlcy4gIEFuZCwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgSSB1cmdlbnRseSBiZWcgYW5kIGJlc2VlY2ggeW91IGlmIHlvdSBoZWFyIG1lIG1ha2luZyBteSBkZWZlbmNlIHdpdGggdGhlIHNhbWUgd29yZHMgd2l0aCB3aGljaCBJIGhhdmUgYmVlbiBhY2N1c3RvbWVkIHRvIHNwZWFrIGJvdGggaW4gdGhlIG1hcmtldCBwbGFjZSBhdCB0aGUgYmFua2VycyB0YWJsZXMsIHdoZXJlIG1hbnkgb2YgeW91IGhhdmUgaGVhcmQgbWUsIGFuZCBlbHNld2hlcmUsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxN2QiIHVuaXQ9InNlY3Rpb24iIC8+bm90IHRvIGJlIHN1cnByaXNlZCBvciB0byBtYWtlIGEgZGlzdHVyYmFuY2Ugb24gdGhpcyBhY2NvdW50LiAgRm9yIHRoZSBmYWN0IGlzIHRoYXQgdGhpcyBpcyB0aGUgZmlyc3QgdGltZSBJIGhhdmUgY29tZSBiZWZvcmUgdGhlIGNvdXJ0LCBhbHRob3VnaCBJIGFtIHNldmVudHkgeWVhcnMgb2xkOyAgSSBhbSB0aGVyZWZvcmUgYW4gdXR0ZXIgZm9yZWlnbmVyIHRvIHRoZSBtYW5uZXIgb2Ygc3BlZWNoIGhlcmUuICBIZW5jZSwganVzdCBhcyB5b3Ugd291bGQsIG9mIGNvdXJzZSwgaWYgSSB3ZXJlIHJlYWxseSBhIGZvcmVpZ25lciwgcGFyZG9uIG1lIGlmIEkgc3Bva2UgaW4gdGhhdCBkaWFsZWN0IGFuZCB0aGF0IG1hbm5lcgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTgiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE4YSIgdW5pdD0ic2VjdGlvbiIgLz5pbiB3aGljaCBJIGhhZCBiZWVuIGJyb3VnaHQgdXAsIHNvIG5vdyBJIG1ha2UgdGhpcyByZXF1ZXN0IG9mIHlvdSwgYSBmYWlyIG9uZSwgYXMgaXQgc2VlbXMgdG8gbWUsIHRoYXQgeW91IGRpc3JlZ2FyZCB0aGUgbWFubmVyIG9mIG15IHNwZWVjaOKAlGZvciBwZXJoYXBzIGl0IG1pZ2h0IGJlIHdvcnNlIGFuZCBwZXJoYXBzIGJldHRlcuKAlGFuZCBvYnNlcnZlIGFuZCBwYXkgYXR0ZW50aW9uIG1lcmVseSB0byB0aGlzLCB3aGV0aGVyIHdoYXQgSSBzYXkgaXMganVzdCBvciBub3Q7ICBmb3IgdGhhdCBpcyB0aGUgdmlydHVlIG9mIGEganVkZ2UsIGFuZCBhbiBvcmF0b3IncyB2aXJ0dWUgaXMgdG8gc3BlYWsgdGhlIHRydXRoLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GaXJzdCB0aGVuIGl0IGlzIHJpZ2h0IGZvciBtZSB0byBkZWZlbmQgbXlzZWxmIGFnYWluc3QgdGhlIGZpcnN0IGZhbHNlIGFjY3VzYXRpb25zIGJyb3VnaHQgYWdhaW5zdCBtZSwgYW5kIHRoZSBmaXJzdCBhY2N1c2VycywgYW5kIHRoZW4gYWdhaW5zdCB0aGUgbGF0ZXIgYWNjdXNhdGlvbnMgYW5kIHRoZSBsYXRlciBhY2N1c2Vycy4gCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOGIiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIG1hbnkgYWNjdXNlcnMgaGF2ZSByaXNlbiB1cCBhZ2FpbnN0IG1lIGJlZm9yZSB5b3UsIHdobyBoYXZlIGJlZW4gc3BlYWtpbmcgZm9yIGEgbG9uZyB0aW1lLCBtYW55IHllYXJzIGFscmVhZHksIGFuZCBzYXlpbmcgbm90aGluZyB0cnVlOyAgYW5kIEkgZmVhciB0aGVtIG1vcmUgdGhhbiBBbnl0dXMgYW5kIHRoZSByZXN0LCB0aG91Z2ggdGhlc2UgYWxzbyBhcmUgZGFuZ2Vyb3VzOyAgYnV0IHRob3NlIG90aGVycyBhcmUgbW9yZSBkYW5nZXJvdXMsIGdlbnRsZW1lbiwgd2hvIGdhaW5lZCB5b3VyIGJlbGllZiwgc2luY2UgdGhleSBnb3QgaG9sZCBvZiBtb3N0IG9mIHlvdSBpbiBjaGlsZGhvb2QsIGFuZCBhY2N1c2VkIG1lIHdpdGhvdXQgYW55IHRydXRoLCBzYXlpbmcsIOKAnFRoZXJlIGlzIGEgY2VydGFpbiBTb2NyYXRlcywgYSB3aXNlIG1hbiwgYSBwb25kZXJlciBvdmVyIHRoZSB0aGluZ3MgaW4gdGhlIGFpciBhbmQgb25lIHdobyBoYXMgaW52ZXN0aWdhdGVkIHRoZSB0aGluZ3MgYmVuZWF0aCB0aGUgZWFydGggYW5kIHdobyBtYWtlcyB0aGUgd2Vha2VyIGFyZ3VtZW50IHRoZSBzdHJvbmdlci7igJ0gIFRoZXNlLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMThjIiB1bml0PSJzZWN0aW9uIiAvPndobyBoYXZlIHNwcmVhZCBhYnJvYWQgdGhpcyByZXBvcnQsIGFyZSBteSBkYW5nZXJvdXMgZW5lbWllcy4gIEZvciB0aG9zZSB3aG8gaGVhciB0aGVtIHRoaW5rIHRoYXQgbWVuIHdobyBpbnZlc3RpZ2F0ZSB0aGVzZSBtYXR0ZXJzIGRvIG5vdCBldmVuIGJlbGlldmUgaW4gZ29kcy4gIEJlc2lkZXMsIHRoZXNlIGFjY3VzZXJzIGFyZSBtYW55IGFuZCBoYXZlIGJlZW4gbWFraW5nIHRoZWlyIGFjY3VzYXRpb25zIGFscmVhZHkgZm9yIGEgbG9uZyB0aW1lLCBhbmQgbW9yZW92ZXIgdGhleSBzcG9rZSB0byB5b3UgYXQgYW4gYWdlIGF0IHdoaWNoIHlvdSB3b3VsZCBiZWxpZXZlIHRoZW0gbW9zdCByZWFkaWx5IChzb21lIG9mIHlvdSBpbiB5b3V0aCwgbW9zdCBvZiB5b3UgaW4gY2hpbGRob29kKSwgYW5kIHRoZSBjYXNlIHRoZXkgcHJvc2VjdXRlZCB3ZW50IHV0dGVybHkgYnkgZGVmYXVsdCwgc2luY2Ugbm9ib2R5IGFwcGVhcmVkIGluIGRlZmVuY2UuICBCdXQgdGhlIG1vc3QgdW5yZWFzb25hYmxlIHRoaW5nIG9mIGFsbCBpcyB0aGlzLCB0aGF0IGl0IGlzIG5vdCBldmVuIHBvc3NpYmxlCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOGQiIHVuaXQ9InNlY3Rpb24iIC8+dG8ga25vdyBhbmQgc3BlYWsgdGhlaXIgbmFtZXMsIGV4Y2VwdCB3aGVuIG9uZSBvZiB0aGVtIGhhcHBlbnMgdG8gYmUgYSB3cml0ZXIgb2YgY29tZWRpZXMuICBBbmQgYWxsIHRob3NlIHdobyBwZXJzdWFkZWQgeW91IGJ5IG1lYW5zIG9mIGVudnkgYW5kIHNsYW5kZXLigJRhbmQgc29tZSBhbHNvIHBlcnN1YWRlZCBvdGhlcnMgYmVjYXVzZSB0aGV5IGhhZCBiZWVuIHRoZW1zZWx2ZXMgcGVyc3VhZGVk4oCUYWxsIHRoZXNlIGFyZSBtb3N0IGRpZmZpY3VsdCB0byBjb3BlIHdpdGg7ICBmb3IgaXQgaXMgbm90IGV2ZW4gcG9zc2libGUgdG8gY2FsbCBhbnkgb2YgdGhlbSB1cCBoZXJlIGFuZCBjcm9zcy1xdWVzdGlvbiBoaW0sIGJ1dCBJIGFtIGNvbXBlbGxlZCBpbiBtYWtpbmcgbXkgZGVmZW5jZSB0byBmaWdodCwgYXMgaXQgd2VyZSwgYWJzb2x1dGVseSB3aXRoIHNoYWRvd3MgYW5kIHRvIGNyb3NzLXF1ZXN0aW9uIHdoZW4gbm9ib2R5IGFuc3dlcnMuICBCZSBraW5kIGVub3VnaCwgdGhlbiwgdG8gYmVhciBpbiBtaW5kLCBhcyBJIHNheSwgdGhhdCB0aGVyZSBhcmUgdHdvIGNsYXNzZXMKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE4ZSIgdW5pdD0ic2VjdGlvbiIgLz5vZiBteSBhY2N1c2Vyc+KAlG9uZSB0aG9zZSB3aG8gaGF2ZSBqdXN0IGJyb3VnaHQgdGhlaXIgYWNjdXNhdGlvbiwgdGhlIG90aGVyIHRob3NlIHdobywgYXMgSSB3YXMganVzdCBzYXlpbmcsIGJyb3VnaHQgaXQgbG9uZyBhZ28sIGFuZCBjb25zaWRlciB0aGF0IEkgbXVzdCBkZWZlbmQgbXlzZWxmIGZpcnN0IGFnYWluc3QgdGhlIGxhdHRlcjsgIGZvciB5b3UgaGVhcmQgdGhlbSBtYWtpbmcgdGhlaXIgY2hhcmdlcyBmaXJzdCBhbmQgd2l0aCBtdWNoIGdyZWF0ZXIgZm9yY2UgdGhhbiB0aGVzZSB3aG8gbWFkZSB0aGVtIGxhdGVyLiAgV2VsbCwgdGhlbiwgSSBtdXN0IG1ha2UgYSBkZWZlbmNlLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTkiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE5YSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgbXVzdCB0cnkgaW4gc28gc2hvcnQgYSB0aW1lIHRvIHJlbW92ZSBmcm9tIHlvdSB0aGlzIHByZWp1ZGljZSB3aGljaCB5b3UgaGF2ZSBiZWVuIGZvciBzbyBsb25nIGEgdGltZSBhY3F1aXJpbmcuICBOb3cgSSB3aXNoIHRoYXQgdGhpcyBtaWdodCB0dXJuIG91dCBzbywgaWYgaXQgaXMgYmV0dGVyIGZvciB5b3UgYW5kIGZvciBtZSwgYW5kIHRoYXQgSSBtaWdodCBzdWNjZWVkIHdpdGggbXkgZGVmZW5jZTsgIGJ1dCBJIHRoaW5rIGl0IGlzIGRpZmZpY3VsdCwgYW5kIEkgYW0gbm90IGF0IGFsbCBkZWNlaXZlZCBhYm91dCBpdHMgbmF0dXJlLiAgQnV0IG5ldmVydGhlbGVzcywgbGV0IHRoaXMgYmUgYXMgaXMgcGxlYXNpbmcgdG8gR29kLCB0aGUgbGF3IG11c3QgYmUgb2JleWVkIGFuZCBJIG11c3QgbWFrZSBhIGRlZmVuY2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBsZXQgdXMgdGFrZSB1cCBmcm9tIHRoZSBiZWdpbm5pbmcgdGhlIHF1ZXN0aW9uLCB3aGF0IHRoZSBhY2N1c2F0aW9uIGlzIGZyb20gd2hpY2ggdGhlIGZhbHNlIHByZWp1ZGljZSBhZ2FpbnN0IG1lIGhhcyBhcmlzZW4sIGluIHdoaWNoCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOWIiIHVuaXQ9InNlY3Rpb24iIC8+TWVsZXR1cyB0cnVzdGVkIHdoZW4gaGUgYnJvdWdodCB0aGlzIHN1aXQgYWdhaW5zdCBtZS4gIFdoYXQgZGlkIHRob3NlIHdobyBhcm91c2VkIHRoZSBwcmVqdWRpY2Ugc2F5IHRvIGFyb3VzZSBpdD8gIEkgbXVzdCwgYXMgaXQgd2VyZSwgcmVhZCB0aGVpciBzd29ybiBzdGF0ZW1lbnQgYXMgaWYgdGhleSB3ZXJlIHBsYWludGlmZnM6ICDigJxTb2NyYXRlcyBpcyBhIGNyaW1pbmFsIGFuZCBhIGJ1c3lib2R5LCBpbnZlc3RpZ2F0aW5nIHRoZSB0aGluZ3MgYmVuZWF0aCB0aGUgZWFydGggYW5kIGluIHRoZSBoZWF2ZW5zIGFuZCBtYWtpbmcgdGhlIHdlYWtlciBhcmd1bWVudCBzdHJvbmdlciBhbmQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE5YyIgdW5pdD0ic2VjdGlvbiIgLz50ZWFjaGluZyBvdGhlcnMgdGhlc2Ugc2FtZSB0aGluZ3Mu4oCdICBTb21ldGhpbmcgb2YgdGhhdCBzb3J0IGl0IGlzLiAgRm9yIHlvdSB5b3Vyc2VsdmVzIHNhdyB0aGVzZSB0aGluZ3MgaW4gQXJpc3RvcGhhbmVzJyBjb21lZHksIGEgU29jcmF0ZXMgYmVpbmcgY2FycmllZCBhYm91dCB0aGVyZSwgcHJvY2xhaW1pbmcgdGhhdCBoZSB3YXMgdHJlYWRpbmcgb24gYWlyIGFuZCB1dHRlcmluZyBhIHZhc3QgZGVhbCBvZiBvdGhlciBub25zZW5zZSwgYWJvdXQgd2hpY2ggSSBrbm93IG5vdGhpbmcsIGVpdGhlciBtdWNoIG9yIGxpdHRsZS4gIEFuZCBJIHNheSB0aGlzLCBub3QgdG8gY2FzdCBkaXNob25vciB1cG9uIHN1Y2gga25vd2xlZGdlLCBpZiBhbnlvbmUgaXMgd2lzZSBhYm91dCBzdWNoIG1hdHRlcnMgKG1heSBJIG5ldmVyIGhhdmUgdG8gZGVmZW5kIG15c2VsZiBhZ2FpbnN0IE1lbGV0dXMgb24gc28gZ3JlYXQgYSBjaGFyZ2UgYXMgdGhhdCEpLOKAlGJ1dCBJLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBoYXZlIG5vdGhpbmcgdG8gZG8gd2l0aCB0aGVzZSB0aGluZ3MuIAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTlkIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBJIG9mZmVyIGFzIHdpdG5lc3NlcyBtb3N0IG9mIHlvdXJzZWx2ZXMsIGFuZCBJIGFzayB5b3UgdG8gaW5mb3JtIG9uZSBhbm90aGVyIGFuZCB0byB0ZWxsLCBhbGwgdGhvc2Ugb2YgeW91IHdobyBldmVyIGhlYXJkIG1lIGNvbnZlcnNpbmfigJRhbmQgdGhlcmUgYXJlIG1hbnkgc3VjaCBhbW9uZyB5b3XigJRub3cgdGVsbCwgaWYgYW55b25lIGV2ZXIgaGVhcmQgbWUgdGFsa2luZyBtdWNoIG9yIGxpdHRsZSBhYm91dCBzdWNoIG1hdHRlcnMuICBBbmQgZnJvbSB0aGlzIHlvdSB3aWxsIHBlcmNlaXZlIHRoYXQgc3VjaCBhcmUgYWxzbyB0aGUgb3RoZXIgdGhpbmdzIHRoYXQgdGhlIG11bHRpdHVkZSBzYXkgYWJvdXQgbWUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBpbiBmYWN0IG5vbmUgb2YgdGhlc2UgdGhpbmdzIGFyZSB0cnVlLCBhbmQgaWYgeW91IGhhdmUgaGVhcmQgZnJvbSBhbnlvbmUgdGhhdCBJIHVuZGVydGFrZSB0byB0ZWFjaAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTllIiB1bml0PSJzZWN0aW9uIiAvPnBlb3BsZSBhbmQgdGhhdCBJIG1ha2UgbW9uZXkgYnkgaXQsIHRoYXQgaXMgbm90IHRydWUgZWl0aGVyLiAgQWx0aG91Z2ggdGhpcyBhbHNvIHNlZW1zIHRvIG1lIHRvIGJlIGEgZmluZSB0aGluZywgaWYgb25lIG1pZ2h0IGJlIGFibGUgdG8gdGVhY2ggcGVvcGxlLCBhcyBHb3JnaWFzIG9mIExlb250aW5pIGFuZCBQcm9kaWN1cyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMDg2NyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEwODY3Ij5DZW9zPC9wbGFjZU5hbWU+IGFuZCBIaXBwaWFzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRWxpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRWxpcyI+RWxpczwvcGxhY2VOYW1lPiBhcmUuICBGb3IgZWFjaCBvZiB0aGVzZSBtZW4sIGdlbnRsZW1lbiwgaXMgYWJsZSB0byBnbyBpbnRvIGFueSBvbmUgb2YgdGhlIGNpdGllcyBhbmQgcGVyc3VhZGUgdGhlIHlvdW5nIG1lbiwgd2hvIGNhbiBhc3NvY2lhdGUgZm9yIG5vdGhpbmcgd2l0aCB3aG9tc29ldmVyIHRoZXkgd2lzaCBhbW9uZyB0aGVpciBvd24gZmVsbG93IGNpdGl6ZW5zLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjAiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIwYSIgdW5pdD0ic2VjdGlvbiIgLz50byBnaXZlIHVwIHRoZSBhc3NvY2lhdGlvbiB3aXRoIHRob3NlIG1lbiBhbmQgdG8gYXNzb2NpYXRlIHdpdGggdGhlbSBhbmQgcGF5IHRoZW0gbW9uZXkgYW5kIGJlIGdyYXRlZnVsIGJlc2lkZXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCB0aGVyZSBpcyBhbHNvIGFub3RoZXIgd2lzZSBtYW4gaGVyZSwgYSBQYXJpYW4sIHdobyBJIGxlYXJuZWQgd2FzIGluIHRvd247ICBmb3IgSSBoYXBwZW5lZCB0byBtZWV0IGEgbWFuIHdobyBoYXMgc3BlbnQgbW9yZSBvbiBzb3BoaXN0cyB0aGFuIGFsbCB0aGUgcmVzdCwgQ2FsbGlhcywgdGhlIHNvbiBvZiBIaXBwb25pY3VzOyAgc28gSSBhc2tlZCBoaW3igJRmb3IgaGUgaGFzIHR3byBzb25z4oCU4oCcQ2FsbGlhcyzigJ0gc2FpZCBJLCDigJxpZiB5b3VyIHR3byBzb25zIGhhZCBoYXBwZW5lZCB0byBiZSB0d28gY29sdHMgb3IgdHdvIGNhbHZlcywgd2Ugc2hvdWxkIGJlIGFibGUgdG8gZ2V0IGFuZCBoaXJlIGZvciB0aGVtIGFuIG92ZXJzZWVyIHdobyB3b3VsZCBtYWtlIHRoZW0KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIwYiIgdW5pdD0ic2VjdGlvbiIgLz5leGNlbGxlbnQgaW4gdGhlIGtpbmQgb2YgZXhjZWxsZW5jZSBwcm9wZXIgdG8gdGhlbTsgIGFuZCBoZSB3b3VsZCBiZSBhIGhvcnNlLXRyYWluZXIgb3IgYSBodXNiYW5kbWFuOyAgYnV0IG5vdywgc2luY2UgdGhleSBhcmUgdHdvIGh1bWFuIGJlaW5ncywgd2hvbSBoYXZlIHlvdSBpbiBtaW5kIHRvIGdldCBhcyBvdmVyc2Vlcj8gIFdobyBoYXMga25vd2xlZGdlIG9mIHRoYXQga2luZCBvZiBleGNlbGxlbmNlLCB0aGF0IG9mIGEgbWFuIGFuZCBhIGNpdGl6ZW4/ICBGb3IgSSB0aGluayB5b3UgaGF2ZSBsb29rZWQgaW50byB0aGUgbWF0dGVyLCBiZWNhdXNlIHlvdSBoYXZlIHRoZSBzb25zLiAgSXMgdGhlcmUgYW55b25lLOKAnSBzYWlkIEksIOKAnG9yIG5vdD/igJ0gIOKAnENlcnRhaW5seSzigJ0gc2FpZCBoZS4gIOKAnFdobyzigJ0gc2FpZCBJLCDigJxhbmQgd2hlcmUgZnJvbSwgYW5kIHdoYXQgaXMgaGlzIHByaWNlIGZvciBoaXMgdGVhY2hpbmc/4oCdICDigJxFdmVudXMs4oCdIGhlIHNhaWQsIOKAnFNvY3JhdGVzLCBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDExMDIzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTEwMjMiPlBhcm9zPC9wbGFjZU5hbWU+LCBmaXZlIG1pbmFlLuKAnSAgQW5kIEkgY2FsbGVkIEV2ZW51cyBibGVzc2VkLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjBjIiB1bml0PSJzZWN0aW9uIiAvPmlmIGhlIHJlYWxseSBoYWQgdGhpcyBhcnQgYW5kIHRhdWdodCBzbyByZWFzb25hYmx5LiAgSSBteXNlbGYgc2hvdWxkIGJlIHZhaW4gYW5kIHB1dCBvbiBhaXJzLCBpZiBJIHVuZGVyc3Rvb2QgdGhlc2UgdGhpbmdzOyAgYnV0IEkgZG8gbm90IHVuZGVyc3RhbmQgdGhlbSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHBlcmhhcHMgc29tZW9uZSBtaWdodCByZWpvaW46ICDigJxCdXQsIFNvY3JhdGVzLCB3aGF0IGlzIHRoZSB0cm91YmxlIGFib3V0IHlvdT8gIFdoZW5jZSBoYXZlIHRoZXNlIHByZWp1ZGljZXMgYWdhaW5zdCB5b3UgYXJpc2VuPyAgRm9yIGNlcnRhaW5seSB0aGlzIGdyZWF0IHJlcG9ydCBhbmQgdGFsayBoYXMgbm90IGFyaXNlbiB3aGlsZSB5b3Ugd2VyZSBkb2luZyBub3RoaW5nIG1vcmUgb3V0IG9mIHRoZSB3YXkgdGhhbiB0aGUgcmVzdCwgdW5sZXNzIHlvdSB3ZXJlIGRvaW5nIHNvbWV0aGluZyBvdGhlciB0aGFuIG1vc3QgcGVvcGxlOyAgc28gdGVsbCB1cwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjBkIiB1bml0PSJzZWN0aW9uIiAvPndoYXQgaXQgaXMsIHRoYXQgd2UgbWF5IG5vdCBhY3QgdW5hZHZpc2VkbHkgaW4geW91ciBjYXNlLuKAnSAgVGhlIG1hbiB3aG8gc2F5cyB0aGlzIHNlZW1zIHRvIG1lIHRvIGJlIHJpZ2h0LCBhbmQgSSB3aWxsIHRyeSB0byBzaG93IHlvdSB3aGF0IGl0IGlzIHRoYXQgaGFzIGJyb3VnaHQgYWJvdXQgbXkgcmVwdXRhdGlvbiBhbmQgYXJvdXNlZCB0aGUgcHJlanVkaWNlIGFnYWluc3QgbWUuICBTbyBsaXN0ZW4uICBBbmQgcGVyaGFwcyBJIHNoYWxsIHNlZW0gdG8gc29tZSBvZiB5b3UgdG8gYmUgam9raW5nOyAgYmUgYXNzdXJlZCwgaG93ZXZlciwgSSBzaGFsbCBzcGVhayBwZXJmZWN0IHRydXRoIHRvIHlvdS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGZhY3QgaXMsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHRoYXQgSSBoYXZlIGFjcXVpcmVkIHRoaXMgcmVwdXRhdGlvbiBvbiBhY2NvdW50IG9mIG5vdGhpbmcgZWxzZSB0aGFuIGEgc29ydCBvZiB3aXNkb20uICBXaGF0IGtpbmQgb2Ygd2lzZG9tIGlzIHRoaXM/ICBKdXN0IHRoYXQgd2hpY2ggaXMgcGVyaGFwcyBodW1hbiB3aXNkb20uICBGb3IgcGVyaGFwcyBJIHJlYWxseSBhbSB3aXNlIGluIHRoaXMgd2lzZG9tOyAgYW5kIHRoZXNlIG1lbiwgcGVyaGFwcywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIwZSIgdW5pdD0ic2VjdGlvbiIgLz5vZiB3aG9tIEkgd2FzIGp1c3Qgc3BlYWtpbmcsIG1pZ2h0IGJlIHdpc2UgaW4gc29tZSB3aXNkb20gZ3JlYXRlciB0aGFuIGh1bWFuLCBvciBJIGRvbid0IGtub3cgd2hhdCB0byBzYXk7ICBmb3IgSSBkbyBub3QgdW5kZXJzdGFuZCBpdCwgYW5kIHdob2V2ZXIgc2F5cyBJIGRvLCBpcyBseWluZyBhbmQgc3BlYWtpbmcgdG8gYXJvdXNlIHByZWp1ZGljZSBhZ2FpbnN0IG1lLiAgQW5kLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBkbyBub3QgaW50ZXJydXB0IG1lIHdpdGggbm9pc2UsIGV2ZW4gaWYgSSBzZWVtIHRvIHlvdSB0byBiZSBib2FzdGluZzsgIGZvciB0aGUgd29yZCB3aGljaCBJIHNwZWFrIGlzIG5vdCBtaW5lLCBidXQgdGhlIHNwZWFrZXIgdG8gd2hvbSBJIHNoYWxsIHJlZmVyIGl0IGlzIGEgcGVyc29uIG9mIHdlaWdodC4gIEZvciBvZiBteSB3aXNkb23igJRpZiBpdCBpcyB3aXNkb20gYXQgYWxs4oCUYW5kIG9mIGl0cyBuYXR1cmUsIEkgd2lsbCBvZmZlciB5b3UgdGhlIGdvZCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERlbHBoaSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRGVscGhpIj5EZWxwaGk8L3BsYWNlTmFtZT4gYXMgYSB3aXRuZXNzLiAgWW91IGtub3cgQ2hhZXJlcGhvbiwgSSBmYW5jeS4gCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjFhIiB1bml0PSJzZWN0aW9uIiAvPkhlIHdhcyBteSBjb21yYWRlIGZyb20gYSB5b3V0aCBhbmQgdGhlIGNvbXJhZGUgb2YgeW91ciBkZW1vY3JhdGljIHBhcnR5LCBhbmQgc2hhcmVkIGluIHRoZSByZWNlbnQgZXhpbGUgYW5kIGNhbWUgYmFjayB3aXRoIHlvdS4gIEFuZCB5b3Uga25vdyB0aGUga2luZCBvZiBtYW4gQ2hhZXJlcGhvbiB3YXMsIGhvdyBpbXBldHVvdXMgaW4gd2hhdGV2ZXIgaGUgdW5kZXJ0b29rLiAgV2VsbCwgb25jZSBoZSB3ZW50IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVscGhpIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxEZWxwaGkiPkRlbHBoaTwvcGxhY2VOYW1lPiBhbmQgbWFkZSBzbyBib2xkIGFzIHRvIGFzayB0aGUgb3JhY2xlIHRoaXMgcXVlc3Rpb247ICBhbmQsIGdlbnRsZW1lbiwgZG9uJ3QgbWFrZSBhIGRpc3R1cmJhbmNlIGF0IHdoYXQgSSBzYXk7ICBmb3IgaGUgYXNrZWQgaWYgdGhlcmUgd2VyZSBhbnlvbmUgd2lzZXIgdGhhbiBJLiAgTm93IHRoZSBQeXRoaWEgcmVwbGllZCB0aGF0IHRoZXJlIHdhcyBubyBvbmUgd2lzZXIuICBBbmQgYWJvdXQgdGhlc2UgdGhpbmdzIGhpcyBicm90aGVyIGhlcmUgd2lsbCBiZWFyIHlvdSB3aXRuZXNzLCBzaW5jZSBDaGFlcmVwaG9uIGlzIGRlYWQuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMWIiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCBzZWUgd2h5IEkgc2F5IHRoZXNlIHRoaW5nczsgIGZvciBJIGFtIGdvaW5nIHRvIHRlbGwgeW91IHdoZW5jZSB0aGUgcHJlanVkaWNlIGFnYWluc3QgbWUgaGFzIGFyaXNlbi4gIEZvciB3aGVuIEkgaGVhcmQgdGhpcywgSSB0aG91Z2h0IHRvIG15c2VsZjogIOKAnFdoYXQgaW4gdGhlIHdvcmxkIGRvZXMgdGhlIGdvZCBtZWFuLCBhbmQgd2hhdCByaWRkbGUgaXMgaGUgcHJvcG91bmRpbmc/ICBGb3IgSSBhbSBjb25zY2lvdXMgdGhhdCBJIGFtIG5vdCB3aXNlIGVpdGhlciBtdWNoIG9yIGxpdHRsZS4gIFdoYXQgdGhlbiBkb2VzIGhlIG1lYW4gYnkgZGVjbGFyaW5nIHRoYXQgSSBhbSB0aGUgd2lzZXN0PyAgSGUgY2VydGFpbmx5IGNhbm5vdCBiZSBseWluZywgZm9yIHRoYXQgaXMgbm90IHBvc3NpYmxlIGZvciBoaW0u4oCdICBBbmQgZm9yIGEgbG9uZyB0aW1lIEkgd2FzIGF0IGEgbG9zcyBhcyB0byB3aGF0IGhlIG1lYW50OyAgdGhlbiB3aXRoIGdyZWF0IHJlbHVjdGFuY2UgSSBwcm9jZWVkZWQgdG8gaW52ZXN0aWdhdGUgaGltIHNvbWV3aGF0IGFzIGZvbGxvd3MuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkkgd2VudCB0byBvbmUgb2YgdGhvc2Ugd2hvIGhhZCBhIHJlcHV0YXRpb24gZm9yIHdpc2RvbSwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIxYyIgdW5pdD0ic2VjdGlvbiIgLz50aGlua2luZyB0aGF0IHRoZXJlLCBpZiBhbnl3aGVyZSwgSSBzaG91bGQgcHJvdmUgdGhlIHV0dGVyYW5jZSB3cm9uZyBhbmQgc2hvdWxkIHNob3cgdGhlIG9yYWNsZSDigJxUaGlzIG1hbiBpcyB3aXNlciB0aGFuIEksIGJ1dCB5b3Ugc2FpZCBJIHdhcyB3aXNlc3Qu4oCdICBTbyBleGFtaW5pbmcgdGhpcyBtYW7igJRmb3IgSSBuZWVkIG5vdCBjYWxsIGhpbSBieSBuYW1lLCBidXQgaXQgd2FzIG9uZSBvZiB0aGUgcHVibGljIG1lbiB3aXRoIHJlZ2FyZCB0byB3aG9tIEkgaGFkIHRoaXMga2luZCBvZiBleHBlcmllbmNlLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+4oCUYW5kIGNvbnZlcnNpbmcgd2l0aCBoaW0sIHRoaXMgbWFuIHNlZW1lZCB0byBtZSB0byBzZWVtIHRvIGJlIHdpc2UgdG8gbWFueSBvdGhlciBwZW9wbGUgYW5kIGVzcGVjaWFsbHkgdG8gaGltc2VsZiwgYnV0IG5vdCB0byBiZSBzbzsgIGFuZCB0aGVuIEkgdHJpZWQgdG8gc2hvdyBoaW0gdGhhdCBoZSB0aG91Z2h0CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMWQiIHVuaXQ9InNlY3Rpb24iIC8+aGUgd2FzIHdpc2UsIGJ1dCB3YXMgbm90LiAgQXMgYSByZXN1bHQsIEkgYmVjYW1lIGhhdGVmdWwgdG8gaGltIGFuZCB0byBtYW55IG9mIHRob3NlIHByZXNlbnQ7ICBhbmQgc28sIGFzIEkgd2VudCBhd2F5LCBJIHRob3VnaHQgdG8gbXlzZWxmLCDigJxJIGFtIHdpc2VyIHRoYW4gdGhpcyBtYW47ICBmb3IgbmVpdGhlciBvZiB1cyByZWFsbHkga25vd3MgYW55dGhpbmcgZmluZSBhbmQgZ29vZCwgYnV0IHRoaXMgbWFuIHRoaW5rcyBoZSBrbm93cyBzb21ldGhpbmcgd2hlbiBoZSBkb2VzIG5vdCwgd2hlcmVhcyBJLCBhcyBJIGRvIG5vdCBrbm93IGFueXRoaW5nLCBkbyBub3QgdGhpbmsgSSBkbyBlaXRoZXIuICBJIHNlZW0sIHRoZW4sIGluIGp1c3QgdGhpcyBsaXR0bGUgdGhpbmcgdG8gYmUgd2lzZXIgdGhhbiB0aGlzIG1hbiBhdCBhbnkgcmF0ZSwgdGhhdCB3aGF0IEkgZG8gbm90IGtub3cgSSBkbyBub3QgdGhpbmsgSSBrbm93IGVpdGhlci7igJ0gIEZyb20gaGltIEkgd2VudCB0byBhbm90aGVyIG9mIHRob3NlIHdobyB3ZXJlIHJlcHV0ZWQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIxZSIgdW5pdD0ic2VjdGlvbiIgLz50byBiZSB3aXNlciB0aGFuIGhlLCBhbmQgdGhlc2Ugc2FtZSB0aGluZ3Mgc2VlbWVkIHRvIG1lIHRvIGJlIHRydWU7ICBhbmQgdGhlcmUgSSBiZWNhbWUgaGF0ZWZ1bCBib3RoIHRvIGhpbSBhbmQgdG8gbWFueSBvdGhlcnMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFmdGVyIHRoaXMgdGhlbiBJIHdlbnQgb24gZnJvbSBvbmUgdG8gYW5vdGhlciwgcGVyY2VpdmluZyB0aGF0IEkgd2FzIGhhdGVkLCBhbmQgZ3JpZXZpbmcgYW5kIGZlYXJpbmcsIGJ1dCBuZXZlcnRoZWxlc3MgSSB0aG91Z2h0IEkgbXVzdCBjb25zaWRlciB0aGUgZ29kJ3MgYnVzaW5lc3Mgb2YgdGhlIGhpZ2hlc3QgaW1wb3J0YW5jZS4gIFNvIEkgaGFkIHRvIGdvLCBpbnZlc3RpZ2F0aW5nIHRoZSBtZWFuaW5nIG9mIHRoZSBvcmFjbGUsIHRvIGFsbCB0aG9zZSB3aG8gd2VyZSByZXB1dGVkIHRvIGtub3cgYW55dGhpbmcuICBBbmQgYnkgdGhlIERvZywgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiAKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIyIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMmEiIHVuaXQ9InNlY3Rpb24iIC8+4oCUZm9yIEkgbXVzdCBzcGVhayB0aGUgdHJ1dGggdG8geW914oCUdGhpcywgSSBkbyBkZWNsYXJlLCB3YXMgbXkgZXhwZXJpZW5jZTogIHRob3NlIHdobyBoYWQgdGhlIG1vc3QgcmVwdXRhdGlvbiBzZWVtZWQgdG8gbWUgdG8gYmUgYWxtb3N0IHRoZSBtb3N0IGRlZmljaWVudCwgYXMgSSBpbnZlc3RpZ2F0ZWQgYXQgdGhlIGdvZCdzIGJlaGVzdCwgYW5kIG90aGVycyB3aG8gd2VyZSBvZiBsZXNzIHJlcHV0ZSBzZWVtZWQgdG8gYmUgc3VwZXJpb3IgbWVuIGluIHRoZSBtYXR0ZXIgb2YgYmVpbmcgc2Vuc2libGUuICBTbyBJIG11c3QgcmVsYXRlIHRvIHlvdSBteSB3YW5kZXJpbmcgYXMgSSBwZXJmb3JtZWQgbXkgSGVyY3VsZWFuIGxhYm9ycywgc28gdG8gc3BlYWssIGluIG9yZGVyIHRoYXQgdGhlIG9yYWNsZSBtaWdodCBiZSBwcm92ZWQgdG8gYmUgaXJyZWZ1dGFibGUuICBGb3IgYWZ0ZXIgdGhlIHB1YmxpYyBtZW4gSSB3ZW50IHRvIHRoZSBwb2V0cywgdGhvc2Ugb2YgdHJhZ2VkaWVzLCBhbmQgdGhvc2Ugb2YgZGl0aHlyYW1icywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIyYiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgdGhlIHJlc3QsIHRoaW5raW5nIHRoYXQgdGhlcmUgSSBzaG91bGQgcHJvdmUgYnkgYWN0dWFsIHRlc3QgdGhhdCBJIHdhcyBsZXNzIGxlYXJuZWQgdGhhbiB0aGV5LiAgU28sIHRha2luZyB1cCB0aGUgcG9lbXMgb2YgdGhlaXJzIHRoYXQgc2VlbWVkIHRvIG1lIHRvIGhhdmUgYmVlbiBtb3N0IGNhcmVmdWxseSBlbGFib3JhdGVkIGJ5IHRoZW0sIEkgYXNrZWQgdGhlbSB3aGF0IHRoZXkgbWVhbnQsIHRoYXQgSSBtaWdodCBhdCB0aGUgc2FtZSB0aW1lIGxlYXJuIHNvbWV0aGluZyBmcm9tIHRoZW0uICBOb3cgSSBhbSBhc2hhbWVkIHRvIHRlbGwgeW91IHRoZSB0cnV0aCwgZ2VudGxlbWVuOyAgYnV0IHN0aWxsIGl0IG11c3QgYmUgdG9sZC4gIEZvciB0aGVyZSB3YXMgaGFyZGx5IGEgbWFuIHByZXNlbnQsIG9uZSBtaWdodCBzYXksIHdobyB3b3VsZCBub3Qgc3BlYWsgYmV0dGVyIHRoYW4gdGhleSBhYm91dCB0aGUgcG9lbXMgdGhleSB0aGVtc2VsdmVzIGhhZCBjb21wb3NlZC4gIFNvIGFnYWluIGluIHRoZSBjYXNlIG9mIHRoZSBwb2V0cyBhbHNvIEkgcHJlc2VudGx5IHJlY29nbml6ZWQgdGhpcywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIyYyIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IHdoYXQgdGhleSBjb21wb3NlZCB0aGV5IGNvbXBvc2VkIG5vdCBieSB3aXNkb20sIGJ1dCBieSBuYXR1cmUgYW5kIGJlY2F1c2UgdGhleSB3ZXJlIGluc3BpcmVkLCBsaWtlIHRoZSBwcm9waGV0cyBhbmQgZ2l2ZXJzIG9mIG9yYWNsZXM7ICBmb3IgdGhlc2UgYWxzbyBzYXkgbWFueSBmaW5lIHRoaW5ncywgYnV0IGtub3cgbm9uZSBvZiB0aGUgdGhpbmdzIHRoZXkgc2F5OyAgaXQgd2FzIGV2aWRlbnQgdG8gbWUgdGhhdCB0aGUgcG9ldHMgdG9vIGhhZCBleHBlcmllbmNlZCBzb21ldGhpbmcgb2YgdGhpcyBzYW1lIHNvcnQuICBBbmQgYXQgdGhlIHNhbWUgdGltZSBJIHBlcmNlaXZlZCB0aGF0IHRoZXksIG9uIGFjY291bnQgb2YgdGhlaXIgcG9ldHJ5LCB0aG91Z2h0IHRoYXQgdGhleSB3ZXJlIHRoZSB3aXNlc3Qgb2YgbWVuIGluIG90aGVyIHRoaW5ncyBhcyB3ZWxsLCBpbiB3aGljaCB0aGV5IHdlcmUgbm90LiAgU28gSSB3ZW50IGF3YXkgZnJvbSB0aGVtIGFsc28gdGhpbmtpbmcgdGhhdCBJIHdhcyBzdXBlcmlvciB0byB0aGVtIGluIHRoZSBzYW1lIHRoaW5nIGluIHdoaWNoIEkgZXhjZWxsZWQgdGhlIHB1YmxpYyBtZW4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZpbmFsbHkgdGhlbiBJIHdlbnQgdG8gdGhlIGhhbmQtd29ya2Vycy4gCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMmQiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIEkgd2FzIGNvbnNjaW91cyB0aGF0IEkga25ldyBwcmFjdGljYWxseSBub3RoaW5nLCBidXQgSSBrbmV3IEkgc2hvdWxkIGZpbmQgdGhhdCB0aGV5IGtuZXcgbWFueSBmaW5lIHRoaW5ncy4gIEFuZCBpbiB0aGlzIEkgd2FzIG5vdCBkZWNlaXZlZDsgIHRoZXkgZGlkIGtub3cgd2hhdCBJIGRpZCBub3QsIGFuZCBpbiB0aGlzIHdheSB0aGV5IHdlcmUgd2lzZXIgdGhhbiBJLiAgQnV0LCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB0aGUgZ29vZCBhcnRpc2FucyBhbHNvIHNlZW1lZCB0byBtZSB0byBoYXZlIHRoZSBzYW1lIGZhaWxpbmcgYXMgdGhlIHBvZXRzOyAgYmVjYXVzZSBvZiBwcmFjdGljaW5nIGhpcyBhcnQgd2VsbCwgZWFjaCBvbmUgdGhvdWdodCBoZSB3YXMgdmVyeSB3aXNlIGluIHRoZSBvdGhlciBtb3N0IGltcG9ydGFudCBtYXR0ZXJzLCBhbmQgdGhpcyBmb2xseSBvZiB0aGVpcnMgb2JzY3VyZWQgdGhhdCB3aXNkb20sIHNvIHRoYXQgSSBhc2tlZCBteXNlbGYKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIyZSIgdW5pdD0ic2VjdGlvbiIgLz5pbiBiZWhhbGYgb2YgdGhlIG9yYWNsZSB3aGV0aGVyIEkgc2hvdWxkIHByZWZlciB0byBiZSBhcyBJIGFtLCBuZWl0aGVyIHdpc2UgaW4gdGhlaXIgd2lzZG9tIG5vciBmb29saXNoIGluIHRoZWlyIGZvbGx5LCBvciB0byBiZSBpbiBib3RoIHJlc3BlY3RzIGFzIHRoZXkgYXJlLiAgSSByZXBsaWVkIHRoZW4gdG8gbXlzZWxmIGFuZCB0byB0aGUgb3JhY2xlIHRoYXQgaXQgd2FzIGJldHRlciBmb3IgbWUgdG8gYmUgYXMgSSBhbS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGZyb20gdGhpcyBpbnZlc3RpZ2F0aW9uLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjMiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIzYSIgdW5pdD0ic2VjdGlvbiIgLz5tYW55IGVubWl0aWVzIGhhdmUgYXJpc2VuIGFnYWluc3QgbWUsIGFuZCBzdWNoIGFzIGFyZSBtb3N0IGhhcnNoIGFuZCBncmlldm91cywgc28gdGhhdCBtYW55IHByZWp1ZGljZXMgaGF2ZSByZXN1bHRlZCBmcm9tIHRoZW0gYW5kIEkgYW0gY2FsbGVkIGEgd2lzZSBtYW4uICBGb3Igb24gZWFjaCBvY2Nhc2lvbiB0aG9zZSB3aG8gYXJlIHByZXNlbnQgdGhpbmsgSSBhbSB3aXNlIGluIHRoZSBtYXR0ZXJzIGluIHdoaWNoIEkgY29uZnV0ZSBzb21lb25lIGVsc2U7ICBidXQgdGhlIGZhY3QgaXMsIGdlbnRsZW1lbiwgaXQgaXMgbGlrZWx5IHRoYXQgdGhlIGdvZCBpcyByZWFsbHkgd2lzZSBhbmQgYnkgaGlzIG9yYWNsZSBtZWFucyB0aGlzOiAg4oCcSHVtYW4gd2lzZG9tIGlzIG9mIGxpdHRsZSBvciBubyB2YWx1ZS7igJ0gQW5kIGl0IGFwcGVhcnMgdGhhdCBoZSBkb2VzIG5vdCByZWFsbHkgc2F5IHRoaXMgb2YgU29jcmF0ZXMsIGJ1dCBtZXJlbHkgdXNlcyBteSBuYW1lLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjNiIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBtYWtlcyBtZSBhbiBleGFtcGxlLCBhcyBpZiBoZSB3ZXJlIHRvIHNheTogIOKAnFRoaXMgb25lIG9mIHlvdSwgTyBodW1hbiBiZWluZ3MsIGlzIHdpc2VzdCwgd2hvLCBsaWtlIFNvY3JhdGVzLCByZWNvZ25pemVzIHRoYXQgaGUgaXMgaW4gdHJ1dGggb2Ygbm8gYWNjb3VudCBpbiByZXNwZWN0IHRvIHdpc2RvbS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmVmb3JlIEkgYW0gc3RpbGwgZXZlbiBub3cgZ29pbmcgYWJvdXQgYW5kIHNlYXJjaGluZyBhbmQgaW52ZXN0aWdhdGluZyBhdCB0aGUgZ29kJ3MgYmVoZXN0IGFueW9uZSwgd2hldGhlciBjaXRpemVuIG9yIGZvcmVpZ25lciwgd2hvIEkgdGhpbmsgaXMgd2lzZTsgIGFuZCB3aGVuIGhlIGRvZXMgbm90IHNlZW0gc28gdG8gbWUsIEkgZ2l2ZSBhaWQgdG8gdGhlIGdvZCBhbmQgc2hvdyB0aGF0IGhlIGlzIG5vdCB3aXNlLiAgQW5kIGJ5IHJlYXNvbiBvZiB0aGlzIG9jY3VwYXRpb24gSSBoYXZlIG5vIGxlaXN1cmUgdG8gYXR0ZW5kIHRvIGFueSBvZiB0aGUgYWZmYWlycyBvZiB0aGUgc3RhdGUgd29ydGggbWVudGlvbmluZywgb3Igb2YgbXkgb3duLCBidXQgYW0gaW4gdmFzdCBwb3ZlcnR5CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyM2MiIHVuaXQ9InNlY3Rpb24iIC8+b24gYWNjb3VudCBvZiBteSBzZXJ2aWNlIHRvIHRoZSBnb2QuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBpbiBhZGRpdGlvbiB0byB0aGVzZSB0aGluZ3MsIHRoZSB5b3VuZyBtZW4gd2hvIGhhdmUgdGhlIG1vc3QgbGVpc3VyZSwgdGhlIHNvbnMgb2YgdGhlIHJpY2hlc3QgbWVuLCBhY2NvbXBhbnkgbWUgb2YgdGhlaXIgb3duIGFjY29yZCwgZmluZCBwbGVhc3VyZSBpbiBoZWFyaW5nIHBlb3BsZSBiZWluZyBleGFtaW5lZCwgYW5kIG9mdGVuIGltaXRhdGUgbWUgdGhlbXNlbHZlcywgYW5kIHRoZW4gdGhleSB1bmRlcnRha2UgdG8gZXhhbWluZSBvdGhlcnM7ICBhbmQgdGhlbiwgSSBmYW5jeSwgdGhleSBmaW5kIGEgZ3JlYXQgcGxlbnR5IG9mIHBlb3BsZSB3aG8gdGhpbmsgdGhleSBrbm93IHNvbWV0aGluZywgYnV0IGtub3cgbGl0dGxlIG9yIG5vdGhpbmcuICBBcyBhIHJlc3VsdCwgdGhlcmVmb3JlLCB0aG9zZSB3aG8gYXJlIGV4YW1pbmVkIGJ5IHRoZW0gYXJlIGFuZ3J5IHdpdGggbWUsIGluc3RlYWQgb2YgYmVpbmcgYW5ncnkgd2l0aCB0aGVtc2VsdmVzLCBhbmQgc2F5IHRoYXQg4oCcU29jcmF0ZXMgaXMgYSBtb3N0IGFib21pbmFibGUgcGVyc29uCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyM2QiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGlzIGNvcnJ1cHRpbmcgdGhlIHlvdXRoLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgd2hlbiBhbnlvbmUgYXNrcyB0aGVtIOKAnGJ5IGRvaW5nIG9yIHRlYWNoaW5nIHdoYXQ/4oCdIHRoZXkgaGF2ZSBub3RoaW5nIHRvIHNheSwgYnV0IHRoZXkgZG8gbm90IGtub3csIGFuZCB0aGF0IHRoZXkgbWF5IG5vdCBzZWVtIHRvIGJlIGF0IGEgbG9zcyB0aGV5IHNheSB0aGVzZSB0aGluZ3MgdGhhdCBhcmUgaGFuZHkgdG8gc2F5IGFnYWluc3QgYWxsIHRoZSBwaGlsb3NvcGhlcnMsIOKAnHRoZSB0aGluZ3MgaW4gdGhlIGFpciBhbmQgdGhlIHRoaW5ncyBiZW5lYXRoIHRoZSBlYXJ0aOKAnSBhbmQg4oCcbm90IHRvIGJlbGlldmUgaW4gdGhlIGdvZHPigJ0gYW5kIOKAnHRvIG1ha2UgdGhlIHdlYWtlciBhcmd1bWVudCB0aGUgc3Ryb25nZXIu4oCdICBGb3IgdGhleSB3b3VsZCBub3QsIEkgZmFuY3ksIGNhcmUgdG8gc2F5IHRoZSB0cnV0aCwgdGhhdCBpdCBpcyBiZWluZyBtYWRlIHZlcnkgY2xlYXIgdGhhdCB0aGV5IHByZXRlbmQgdG8ga25vdywgYnV0IGtub3cgbm90aGluZy4gCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyM2UiIHVuaXQ9InNlY3Rpb24iIC8+U2luY2UsIHRoZW4sIHRoZXkgYXJlIGplYWxvdXMgb2YgdGhlaXIgaG9ub3IgYW5kIGVuZXJnZXRpYyBhbmQgbnVtZXJvdXMgYW5kIHNwZWFrIGNvbmNlcnRlZGx5IGFuZCBwZXJzdWFzaXZlbHkgYWJvdXQgbWUsIHRoZXkgaGF2ZSBmaWxsZWQgeW91ciBlYXJzIGJvdGggbG9uZyBhZ28gYW5kIG5vdyB3aXRoIHZlaGVtZW50IHNsYW5kZXJzLiAgRnJvbSBhbW9uZyB0aGVtIE1lbGV0dXMgYXR0YWNrZWQgbWUsIGFuZCBBbnl0dXMgYW5kIEx5Y29uLCBNZWxldHVzIGFuZ2VyZWQgb24gYWNjb3VudCBvZiB0aGUgcG9ldHMsIGFuZCBBbnl0dXMgb24gYWNjb3VudCBvZiB0aGUgYXJ0aXNhbnMgYW5kIHRoZSBwdWJsaWMgbWVuLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjQiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI0YSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgTHljb24gb24gYWNjb3VudCBvZiB0aGUgb3JhdG9yczsgIHNvIHRoYXQsIGFzIEkgc2FpZCBpbiB0aGUgYmVnaW5uaW5nLCBJIHNob3VsZCBiZSBzdXJwcmlzZWQgaWYgSSB3ZXJlIGFibGUgdG8gcmVtb3ZlIHRoaXMgcHJlanVkaWNlIGZyb20geW91IGluIHNvIHNob3J0IGEgdGltZSB3aGVuIGl0IGhhcyBncm93biBzbyBncmVhdC4gIFRoZXJlIHlvdSBoYXZlIHRoZSB0cnV0aCwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgYW5kIEkgc3BlYWsgd2l0aG91dCBoaWRpbmcgYW55dGhpbmcgZnJvbSB5b3UsIGdyZWF0IG9yIHNtYWxsIG9yIHByZXZhcmljYXRpbmcuICBBbmQgeWV0IEkga25vdyBwcmV0dHkgd2VsbCB0aGF0IEkgYW0gbWFraW5nIG15c2VsZiBoYXRlZCBieSBqdXN0IHRoYXQgY29uZHVjdDsgIHdoaWNoIGlzIGFsc28gYSBwcm9vZiB0aGF0IEkgYW0gc3BlYWtpbmcgdGhlIHRydXRoIGFuZCB0aGF0IHRoaXMgaXMgdGhlIHByZWp1ZGljZSBhZ2FpbnN0IG1lIGFuZCB0aGVzZSBhcmUgaXRzIGNhdXNlcy4gIEFuZCB3aGV0aGVyIHlvdSBpbnZlc3RpZ2F0ZQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjRiIiB1bml0PSJzZWN0aW9uIiAvPnRoaXMgbm93IG9yIGhlcmVhZnRlciwgeW91IHdpbGwgZmluZCB0aGF0IGl0IGlzIHNvLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgc28gZmFyIGFzIHRoZSBhY2N1c2F0aW9ucyBhcmUgY29uY2VybmVkIHdoaWNoIG15IGZpcnN0IGFjY3VzZXJzIG1hZGUgYWdhaW5zdCBtZSwgdGhpcyBpcyBhIHN1ZmZpY2llbnQgZGVmZW5jZSBiZWZvcmUgeW91OyAgYnV0IGFnYWluc3QgTWVsZXR1cywgdGhlIGdvb2QgYW5kIHBhdHJpb3RpYywgYXMgaGUgc2F5cywgYW5kIHRoZSBsYXRlciBvbmVzLCBJIHdpbGwgdHJ5IHRvIGRlZmVuZCBteXNlbGYgbmV4dC4gIFNvIG9uY2UgbW9yZSwgYXMgaWYgdGhlc2Ugd2VyZSBhbm90aGVyIHNldCBvZiBhY2N1c2VycywgbGV0IHVzIHRha2UgdXAgaW4gdHVybiB0aGVpciBzd29ybiBzdGF0ZW1lbnQuICBJdCBpcyBhYm91dCBhcyBmb2xsb3dzOiAgaXQgc3RhdGVzIHRoYXQgU29jcmF0ZXMgaXMgYSB3cm9uZ2RvZXIgYmVjYXVzZSBoZSBjb3JydXB0cyB0aGUgeW91dGggYW5kIGRvZXMgbm90IGJlbGlldmUgaW4gdGhlIGdvZHMgdGhlIHN0YXRlIGJlbGlldmVzIGluLCBidXQgaW4gb3RoZXIKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI0YyIgdW5pdD0ic2VjdGlvbiIgLz5uZXcgc3Bpcml0dWFsIGJlaW5ncy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3VjaCBpcyB0aGUgYWNjdXNhdGlvbi4gIEJ1dCBsZXQgdXMgZXhhbWluZSBlYWNoIHBvaW50IG9mIHRoaXMgYWNjdXNhdGlvbi4gIEhlIHNheXMgSSBhbSBhIHdyb25nZG9lciBiZWNhdXNlIEkgY29ycnVwdCB0aGUgeW91dGguICBCdXQgSSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgc2F5IE1lbGV0dXMgaXMgYSB3cm9uZ2RvZXIsIGJlY2F1c2UgaGUgam9rZXMgaW4gZWFybmVzdCwgbGlnaHRseSBpbnZvbHZpbmcgcGVvcGxlIGluIGEgbGF3c3VpdCwgcHJldGVuZGluZyB0byBiZSB6ZWFsb3VzIGFuZCBjb25jZXJuZWQgYWJvdXQgdGhpbmdzIG9yIHdoaWNoIGhlIG5ldmVyIGNhcmVkIGF0IGFsbC4gIEFuZCB0aGF0IHRoaXMgaXMgc28gSSB3aWxsIHRyeSB0byBtYWtlIHBsYWluIHRvIHlvdSBhbHNvLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Db21lIGhlcmUsIE1lbGV0dXMsIHRlbGwgbWU6ICBkb24ndCB5b3UgY29uc2lkZXIgaXQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI0ZCIgdW5pdD0ic2VjdGlvbiIgLz5vZiBncmVhdCBpbXBvcnRhbmNlIHRoYXQgdGhlIHlvdXRoIGJlIGFzIGdvb2QgYXMgcG9zc2libGU/ICDigJxJIGRvLuKAnSAgQ29tZSBub3csIHRlbGwgdGhlc2UgZ2VudGxlbWVuIHdobyBtYWtlcyB0aGVtIGJldHRlcj8gIEZvciBpdCBpcyBldmlkZW50IHRoYXQgeW91IGtub3csIHNpbmNlIHlvdSBjYXJlIGFib3V0IGl0LiAgRm9yIHlvdSBoYXZlIGZvdW5kIHRoZSBvbmUgd2hvIGNvcnJ1cHRzIHRoZW0sIGFzIHlvdSBzYXksIGFuZCB5b3UgYnJpbmcgbWUgYmVmb3JlIHRoZXNlIGdlbnRsZW1lbiBhbmQgYWNjdXNlIG1lOyAgYW5kIG5vdywgY29tZSwgdGVsbCB3aG8gbWFrZXMgdGhlbSBiZXR0ZXIgYW5kIGluZm9ybSB0aGVtIHdobyBoZSBpcy4gIERvIHlvdSBzZWUsIE1lbGV0dXMsIHRoYXQgeW91IGFyZSBzaWxlbnQgYW5kIGNhbm5vdCB0ZWxsPyAgQW5kIHlldCBkb2VzIGl0IG5vdCBzZWVtIHRvIHlvdSBkaXNncmFjZWZ1bCBhbmQgYSBzdWZmaWNpZW50IHByb29mIG9mIHdoYXQgSSBzYXksIHRoYXQgeW91IGhhdmUgbmV2ZXIgY2FyZWQgYWJvdXQgaXQ/ICBCdXQgdGVsbCwgbXkgZ29vZCBtYW4sIHdobwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjRlIiB1bml0PSJzZWN0aW9uIiAvPm1ha2VzIHRoZW0gYmV0dGVyPyAg4oCcVGhlIGxhd3Mu4oCdICBCdXQgdGhhdCBpcyBub3Qgd2hhdCBJIGFzaywgbW9zdCBleGNlbGxlbnQgb25lLCBidXQgd2hhdCBtYW4sIHdobyBrbm93cyBpbiB0aGUgZmlyc3QgcGxhY2UganVzdCB0aGlzIHZlcnkgdGhpbmcsIHRoZSBsYXdzLiAg4oCcVGhlc2UgbWVuLCBTb2NyYXRlcywgdGhlIGp1ZGdlcy7igJ0gIFdoYXQgYXJlIHlvdSBzYXlpbmcsIE1lbGV0dXM/ICBBcmUgdGhlc2UgZ2VudGxlbWVuIGFibGUgdG8gaW5zdHJ1Y3QgdGhlIHlvdXRoLCBhbmQgZG8gdGhleSBtYWtlIHRoZW0gYmV0dGVyPyAg4oCcQ2VydGFpbmx5LuKAnSAgQWxsLCBvciBzb21lIG9mIHRoZW0gYW5kIG90aGVycyBub3Q/ICDigJxBbGwu4oCdICBXZWxsIHNhaWQsIGJ5IEhlcmEsIGFuZCB0aGlzIGlzIGEgZ3JlYXQgcGxlbnR5IG9mIGhlbHBlcnMgeW91IHNwZWFrIG9mLiAgQnV0IGhvdyBhYm91dCB0aGlzPyAKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI1IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNWEiIHVuaXQ9InNlY3Rpb24iIC8+RG8gdGhlc2UgbGlzdGVuZXJzIG1ha2UgdGhlbSBiZXR0ZXIsIG9yIG5vdD8gIOKAnFRoZXNlIGFsc28u4oCdICBBbmQgaG93IGFib3V0IHRoZSBzZW5hdG9ycz8gIOKAnFRoZSBzZW5hdG9ycyBhbHNvLuKAnSAgQnV0LCBNZWxldHVzLCB0aG9zZSBpbiB0aGUgYXNzZW1ibHksIHRoZSBhc3NlbWJseW1lbiwgZG9uJ3QgY29ycnVwdCB0aGUgeW91dGgsIGRvIHRoZXk/ICBvciBkbyB0aGV5IGFsc28gYWxsIG1ha2UgdGhlbSBiZXR0ZXI/ICDigJxUaGV5IGFsc28u4oCdICBBbGwgdGhlIEF0aGVuaWFucywgdGhlbiwgYXMgaXQgc2VlbXMsIG1ha2UgdGhlbSBleGNlbGxlbnQsIGV4Y2VwdCBteXNlbGYsIGFuZCBJIGFsb25lIGNvcnJ1cHQgdGhlbS4gIElzIHRoaXMgd2hhdCB5b3UgbWVhbj8gIOKAnFZlcnkgZGVjaWRlZGx5LCB0aGF0IGlzIHdoYXQgSSBtZWFuLuKAnSAgWW91IGhhdmUgY29uZGVtbmVkIG1lIHRvIGdyZWF0IHVuaGFwcGluZXNzISAgQnV0IGFuc3dlciBtZTsgIGRvZXMgaXQgc2VlbSB0byB5b3UgdG8gYmUgc28gaW4gdGhlIGNhc2Ugb2YgaG9yc2VzLCB0aGF0IHRob3NlIHdobwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjViIiB1bml0PSJzZWN0aW9uIiAvPm1ha2UgdGhlbSBiZXR0ZXIgYXJlIGFsbCBtYW5raW5kLCBhbmQgaGUgd2hvIGluanVyZXMgdGhlbSBzb21lIG9uZSBwZXJzb24/ICBPciwgcXVpdGUgdGhlIG9wcG9zaXRlIG9mIHRoaXMsIHRoYXQgaGUgd2hvIGlzIGFibGUgdG8gbWFrZSB0aGVtIGJldHRlciBpcyBzb21lIG9uZSBwZXJzb24sIG9yIHZlcnkgZmV3LCB0aGUgaG9yc2UtdHJhaW5lcnMsIHdoZXJlYXMgbW9zdCBwZW9wbGUsIGlmIHRoZXkgaGF2ZSB0byBkbyB3aXRoIGFuZCB1c2UgaG9yc2VzLCBpbmp1cmUgdGhlbT8gIElzIGl0IG5vdCBzbywgTWVsZXR1cywgYm90aCBpbiB0aGUgY2FzZSBvZiBob3JzZXMgYW5kIGluIHRoYXQgb2YgYWxsIG90aGVyIGFuaW1hbHM/ICBDZXJ0YWlubHkgaXQgaXMsIHdoZXRoZXIgeW91IGFuZCBBbnl0dXMgZGVueSBpdCBvciBhZ3JlZTsgIGZvciBpdCB3b3VsZCBiZSBhIGdyZWF0IHN0YXRlIG9mIGJsZXNzZWRuZXNzIGluIHRoZSBjYXNlIG9mIHRoZSB5b3V0aCBpZiBvbmUgYWxvbmUgY29ycnVwdHMgdGhlbSwgYW5kIHRoZSBvdGhlcnMgZG8gdGhlbSBnb29kLiAgQnV0LAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjVjIiB1bml0PSJzZWN0aW9uIiAvPk1lbGV0dXMsIHlvdSBzaG93IGNsZWFybHkgZW5vdWdoIHRoYXQgeW91IG5ldmVyIHRob3VnaHQgYWJvdXQgdGhlIHlvdXRoLCBhbmQgeW91IGV4aGliaXQgcGxhaW5seSB5b3VyIG93biBjYXJlbGVzc25lc3MsIHRoYXQgeW91IGhhdmUgbm90IGNhcmVkIGF0IGFsbCBmb3IgdGhlIHRoaW5ncyBhYm91dCB3aGljaCB5b3UgaGFsZSBtZSBpbnRvIGNvdXJ0LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgYmVzaWRlcywgdGVsbCB1cywgZm9yIGhlYXZlbidzIHNha2UsIE1lbGV0dXMsIGlzIGl0IGJldHRlciB0byBsaXZlIGFtb25nIGdvb2QgY2l0aXplbnMsIG9yIGJhZD8gIE15IGZyaWVuZCwgYW5zd2VyOyAgZm9yIEkgYW0gbm90IGFza2luZyBhbnl0aGluZyBoYXJkLiAgRG8gbm90IHRoZSBiYWQgZG8gc29tZSBldmlsIHRvIHRob3NlIHdobyBhcmUgd2l0aCB0aGVtIGF0IGFueSB0aW1lIGFuZCB0aGUgZ29vZCBzb21lIGdvb2Q/ICDigJxDZXJ0YWlubHku4oCdICBJcyB0aGVyZSB0aGVuIGFueW9uZSB3aG8KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI1ZCIgdW5pdD0ic2VjdGlvbiIgLz5wcmVmZXJzIHRvIGJlIGluanVyZWQgYnkgaGlzIGFzc29jaWF0ZXMgcmF0aGVyIHRoYW4gYmVuZWZpdGVkPyAgQW5zd2VyLCBteSBnb29kIG1hbjsgIGZvciB0aGUgbGF3IG9yZGVycyB5b3UgdG8gYW5zd2VyLiAgSXMgdGhlcmUgYW55b25lIHdobyBwcmVmZXJzIHRvIGJlIGluanVyZWQ/ICDigJxPZiBjb3Vyc2Ugbm90LuKAnSAgQ29tZSB0aGVuLCBkbyB5b3UgaGFsZSBtZSBpbiBoZXJlIG9uIHRoZSBncm91bmQgdGhhdCBJIGFtIGNvcnJ1cHRpbmcgdGhlIHlvdXRoIGFuZCBtYWtpbmcgdGhlbSB3b3JzZSB2b2x1bnRhcmlseSBvciBpbnZvbHVudGFyaWx5PyAg4oCcVm9sdW50YXJpbHkgSSBzYXku4oCdICBXaGF0IHRoZW4sIE1lbGV0dXM/ICBBcmUgeW91IGF0IHlvdXIgYWdlIHNvIG11Y2ggd2lzZXIgdGhhbiBJIGF0IG15IGFnZSwgdGhhdCB5b3UgaGF2ZSByZWNvZ25pemVkIHRoYXQgdGhlIGV2aWwgYWx3YXlzIGRvIHNvbWUgZXZpbAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjVlIiB1bml0PSJzZWN0aW9uIiAvPnRvIHRob3NlIG5lYXJlc3QgdGhlbSwgYW5kIHRoZSBnb29kIHNvbWUgZ29vZDsgIHdoZXJlYXMgSSBoYXZlIHJlYWNoZWQgc3VjaCBhIGRlcHRoIG9mIGlnbm9yYW5jZSB0aGF0IEkgZG8gbm90IGV2ZW4ga25vdyB0aGlzLCB0aGF0IGlmIEkgbWFrZSBhbnlvbmUgb2YgbXkgYXNzb2NpYXRlcyBiYWQgSSBhbSBpbiBkYW5nZXIgb2YgZ2V0dGluZyBzb21lIGhhcm0gZnJvbSBoaW0sIHNvIHRoYXQgSSBkbyB0aGlzIGdyZWF0IGV2aWwgdm9sdW50YXJpbHksIGFzIHlvdSBzYXk/ICBJIGRvbid0IGJlbGlldmUgdGhpcywgTWVsZXR1cywgbm9yIGRvIEkgdGhpbmsgYW55b25lIGVsc2UgaW4gdGhlIHdvcmxkIGRvZXMhIAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjYiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI2YSIgdW5pdD0ic2VjdGlvbiIgLz5idXQgZWl0aGVyIEkgZG8gbm90IGNvcnJ1cHQgdGhlbSwgb3IgaWYgSSBjb3JydXB0IHRoZW0sIEkgZG8gaXQgaW52b2x1bnRhcmlseSwgc28gdGhhdCB5b3UgYXJlIGx5aW5nIGluIGJvdGggZXZlbnRzLiAgQnV0IGlmIEkgY29ycnVwdCB0aGVtIGludm9sdW50YXJpbHksIGZvciBzdWNoIGludm9sdW50YXJ5IGVycm9ycyB0aGUgbGF3IGlzIG5vdCB0byBoYWxlIHBlb3BsZSBpbnRvIGNvdXJ0LCBidXQgdG8gdGFrZSB0aGVtIGFuZCBpbnN0cnVjdCBhbmQgYWRtb25pc2ggdGhlbSBpbiBwcml2YXRlLiAgRm9yIGl0IGlzIGNsZWFyIHRoYXQgaWYgSSBhbSB0b2xkIGFib3V0IGl0LCBJIHNoYWxsIHN0b3AgZG9pbmcgdGhhdCB3aGljaCBJIGRvIGludm9sdW50YXJpbHkuICBCdXQgeW91IGF2b2lkZWQgYXNzb2NpYXRpbmcgd2l0aCBtZSBhbmQgaW5zdHJ1Y3RpbmcgbWUsIGFuZCB3ZXJlIHVud2lsbGluZyB0byBkbyBzbywgYnV0IHlvdSBoYWxlIG1lIGluIGhlcmUsIHdoZXJlIGl0IGlzIHRoZSBsYXcgdG8gaGFsZSBpbiB0aG9zZSB3aG8gbmVlZCBwdW5pc2htZW50LCBub3QgaW5zdHJ1Y3Rpb24uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBlbm91Z2ggb2YgdGhpcywgZm9yLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB0aGlzIGlzIGNsZWFyLCBhcyBJIHNhaWQsIHRoYXQgTWVsZXR1cyBuZXZlcgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjZiIiB1bml0PSJzZWN0aW9uIiAvPmNhcmVkIG11Y2ggb3IgbGl0dGxlIGZvciB0aGVzZSB0aGluZ3MuICBCdXQgbmV2ZXJ0aGVsZXNzLCB0ZWxsIHVzLCBob3cgZG8geW91IHNheSwgTWVsZXR1cywgdGhhdCBJIGNvcnJ1cHQgdGhlIHlvdXRoPyAgT3IgaXMgaXQgZXZpZGVudCwgYWNjb3JkaW5nIHRvIHRoZSBpbmRpY3RtZW50IHlvdSBicm91Z2h0LCB0aGF0IGl0IGlzIGJ5IHRlYWNoaW5nIHRoZW0gbm90IHRvIGJlbGlldmUgaW4gdGhlIGdvZHMgdGhlIHN0YXRlIGJlbGlldmVzIGluLCBidXQgaW4gb3RoZXIgbmV3IHNwaXJpdHVhbCBiZWluZ3M/ICBEbyB5b3Ugbm90IHNheSB0aGF0IGl0IGlzIGJ5IHRlYWNoaW5nIHRoaXMgdGhhdCBJIGNvcnJ1cHQgdGhlbT8gIOKAnFZlcnkgZGVjaWRlZGx5IHRoYXQgaXMgd2hhdCBJIHNheS7igJ0gIFRoZW4sIE1lbGV0dXMsIGZvciB0aGUgc2FrZSBvZgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjZjIiB1bml0PSJzZWN0aW9uIiAvPnRoZXNlIHZlcnkgZ29kcyBhYm91dCB3aG9tIG91ciBzcGVlY2ggbm93IGlzLCBzcGVhayBzdGlsbCBtb3JlIGNsZWFybHkgYm90aCB0byBtZSBhbmQgdG8gdGhlc2UgZ2VudGxlbWVuLiAgRm9yIEkgYW0gdW5hYmxlIHRvIHVuZGVyc3RhbmQgd2hldGhlciB5b3Ugc2F5IHRoYXQgSSB0ZWFjaCB0aGF0IHRoZXJlIGFyZSBzb21lIGdvZHMsIGFuZCBteXNlbGYgdGhlbiBiZWxpZXZlIHRoYXQgdGhlcmUgYXJlIHNvbWUgZ29kcywgYW5kIGFtIG5vdCBhbHRvZ2V0aGVyIGdvZGxlc3MgYW5kIGFtIG5vdCBhIHdyb25nZG9lciBpbiB0aGF0IHdheSwgdGhhdCB0aGVzZSwgaG93ZXZlciwgYXJlIG5vdCB0aGUgZ29kcyB3aG9tIHRoZSBzdGF0ZSBiZWxpZXZlcyBpbiwgYnV0IG90aGVycywgYW5kIHRoaXMgaXMgd2hhdCB5b3UgYWNjdXNlIG1lIGZvciwgdGhhdCBJIGJlbGlldmUgaW4gb3RoZXJzOyAgb3IgeW91IHNheSB0aGF0IEkgZG8gbm90IG15c2VsZiBiZWxpZXZlIGluIGdvZHMgYXQgYWxsIGFuZCB0aGF0IEkgdGVhY2ggdGhpcyB1bmJlbGllZiB0byBvdGhlciBwZW9wbGUuICDigJxUaGF0IGlzIHdoYXQgSSBzYXksIHRoYXQgeW91IGRvIG5vdCBiZWxpZXZlIGluIGdvZHMgYXQgYWxsLuKAnSAgWW91IGFtYXplIG1lLCBNZWxldHVzISAgV2h5IGRvIHlvdSBzYXkgdGhpcz8gCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNmQiIHVuaXQ9InNlY3Rpb24iIC8+RG8gSSBub3QgZXZlbiBiZWxpZXZlIHRoYXQgdGhlIHN1biBvciB5ZXQgdGhlIG1vb24gYXJlIGdvZHMsIGFzIHRoZSByZXN0IG9mIG1hbmtpbmQgZG8/ICDigJxObywgYnkgWmV1cywganVkZ2VzLCBzaW5jZSBoZSBzYXlzIHRoYXQgdGhlIHN1biBpcyBhIHN0b25lIGFuZCB0aGUgbW9vbiBlYXJ0aC7igJ0gIERvIHlvdSB0aGluayB5b3UgYXJlIGFjY3VzaW5nIEFuYXhhZ29yYXMsIG15IGRlYXIgTWVsZXR1cywgYW5kIGRvIHlvdSBzbyBkZXNwaXNlIHRoZXNlIGdlbnRsZW1lbiBhbmQgdGhpbmsgdGhleSBhcmUgc28gdW52ZXJzZWQgaW4gbGV0dGVycyBhcyBub3QgdG8ga25vdywgdGhhdCB0aGUgYm9va3Mgb2YgQW5heGFnb3JhcyB0aGUgQ2xhem9tZW5pYW4gYXJlIGZ1bGwgb2Ygc3VjaCB1dHRlcmFuY2VzPyAgQW5kIGZvcnNvb3RoIHRoZSB5b3V0aCBsZWFybiB0aGVzZSBkb2N0cmluZXMgZnJvbSBtZSwgd2hpY2ggdGhleSBjYW4gYnV5IHNvbWV0aW1lcwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjZlIiB1bml0PSJzZWN0aW9uIiAvPihpZiB0aGUgcHJpY2UgaXMgaGlnaCkgZm9yIGEgZHJhY2htYSBpbiB0aGUgb3JjaGVzdHJhIGFuZCBsYXVnaCBhdCBTb2NyYXRlcywgaWYgaGUgcHJldGVuZHMgdGhleSBhcmUgaGlzIG93biwgZXNwZWNpYWxseSB3aGVuIHRoZXkgYXJlIHNvIGFic3VyZCEgIEJ1dCBmb3IgaGVhdmVuJ3Mgc2FrZSwgZG8geW91IHRoaW5rIHRoaXMgb2YgbWUsIHRoYXQgSSBkbyBub3QgYmVsaWV2ZSB0aGVyZSBpcyBhbnkgZ29kPyAg4oCcTm8sIGJ5IFpldXMsIHlvdSBkb24ndCwgbm90IGluIHRoZSBsZWFzdC7igJ0gIFlvdSBjYW5ub3QgYmUgYmVsaWV2ZWQsIE1lbGV0dXMsIG5vdCBldmVuLCBhcyBpdCBzZWVtcyB0byBtZSwgYnkgeW91cnNlbGYuICBGb3IgdGhpcyBtYW4gYXBwZWFycyB0byBtZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdG8gYmUgdmVyeSB2aW9sZW50IGFuZCB1bnJlc3RyYWluZWQsIGFuZCBhY3R1YWxseSB0byBoYXZlIGJyb3VnaHQgdGhpcyBpbmRpY3RtZW50IGluIGEgc3Bpcml0IG9mIHZpb2xlbmNlIGFuZCB1bnJlc3RyYWludCBhbmQgcmFzaG5lc3MuICBGb3IgaGUgc2VlbXMsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjdhIiB1bml0PSJzZWN0aW9uIiAvPmFzIGl0IHdlcmUsIGJ5IGNvbXBvc2luZyBhIHB1enpsZSB0byBiZSBtYWtpbmcgYSB0ZXN0OiAg4oCcV2lsbCBTb2NyYXRlcywgdGhlIHdpc2UgbWFuLCByZWNvZ25pemUgdGhhdCBJIGFtIGpva2luZyBhbmQgY29udHJhZGljdGluZyBteXNlbGYsIG9yIHNoYWxsIEkgZGVjZWl2ZSBoaW0gYW5kIHRoZSBvdGhlcnMgd2hvIGhlYXIgbWU/4oCdICBGb3IgaGUgYXBwZWFycyB0byBtZSB0byBjb250cmFkaWN0IGhpbXNlbGYgaW4gaGlzIHNwZWVjaCwgYXMgaWYgaGUgd2VyZSB0byBzYXksIOKAnFNvY3JhdGVzIGlzIGEgd3Jvbmdkb2VyLCBiZWNhdXNlIGhlIGRvZXMgbm90IGJlbGlldmUgaW4gZ29kcywgYnV0IGRvZXMgYmVsaWV2ZSBpbiBnb2RzLuKAnSAgQW5kIHlldCB0aGlzIGlzIHRoZSBjb25kdWN0IG9mIGEgamVzdGVyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Kb2luIG1lLCB0aGVuLCBnZW50bGVtZW4sIGluIGV4YW1pbmluZyBob3cgaGUgYXBwZWFycyB0byBtZSB0byBzYXkgdGhpczsgIGFuZCBkbyB5b3UsIE1lbGV0dXMsIGFuc3dlcjsgCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyN2IiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHlvdSwgZ2VudGxlbWVuLCBhcyBJIGFza2VkIHlvdSBpbiB0aGUgYmVnaW5uaW5nLCBwbGVhc2UgYmVhciBpbiBtaW5kIG5vdCB0byBtYWtlIGEgZGlzdHVyYmFuY2UgaWYgSSBjb25kdWN0IG15IGFyZ3VtZW50IGluIG15IGFjY3VzdG9tZWQgbWFubmVyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JcyB0aGVyZSBhbnkgaHVtYW4gYmVpbmcgd2hvIGJlbGlldmVzIHRoYXQgdGhlcmUgYXJlIHRoaW5ncyBwZXJ0YWluaW5nIHRvIGh1bWFuIGJlaW5ncywgYnV0IG5vIGh1bWFuIGJlaW5ncz8gIExldCBoaW0gYW5zd2VyLCBnZW50bGVtZW4sIGFuZCBub3QgbWFrZSBhIGRpc3R1cmJhbmNlIGluIG9uZSB3YXkgb3IgYW5vdGhlci4gIElzIHRoZXJlIGFueW9uZSB3aG8gZG9lcyBub3QgYmVsaWV2ZSBpbiBob3JzZXMsIGJ1dCBkb2VzIGJlbGlldmUgaW4gdGhpbmdzIHBlcnRhaW5pbmcgdG8gaG9yc2VzPyAgb3Igd2hvIGRvZXMgbm90IGJlbGlldmUgdGhhdCBmbHV0ZS1wbGF5ZXJzIGV4aXN0LCBidXQgdGhhdCB0aGluZ3MgcGVydGFpbmluZyB0byBmbHV0ZS1wbGF5ZXJzIGRvPyAgVGhlcmUgaXMgbm90LCBiZXN0IG9mIG1lbjsgIGlmIHlvdSBkbyBub3Qgd2lzaCB0byBhbnN3ZXIsIEkgc2F5IGl0IHRvIHlvdSBhbmQgdGhlc2Ugb3RoZXJzIGhlcmUuICBCdXQgYW5zd2VyIGF0IGxlYXN0CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyN2MiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIG5leHQgcXVlc3Rpb24uICBJcyB0aGVyZSBhbnlvbmUgd2hvIGJlbGlldmVzIHNwaXJpdHVhbCB0aGluZ3MgZXhpc3QsIGJ1dCBkb2VzIG5vdCBiZWxpZXZlIGluIHNwaXJpdHM/ICDigJxUaGVyZSBpcyBub3Qu4oCdICBUaGFuayB5b3UgZm9yIHJlcGx5aW5nIHJlbHVjdGFudGx5IHdoZW4gZm9yY2VkIGJ5IHRoZXNlIGdlbnRsZW1lbi4gIFRoZW4geW91IHNheSB0aGF0IEkgYmVsaWV2ZSBpbiBzcGlyaXR1YWwgYmVpbmdzLCB3aGV0aGVyIG5ldyBvciBvbGQsIGFuZCB0ZWFjaCB0aGF0IGJlbGllZjsgIGJ1dCB0aGVuIEkgYmVsaWV2ZSBpbiBzcGlyaXR1YWwgYmVpbmdzIGF0IGFueSByYXRlLCBhY2NvcmRpbmcgdG8geW91ciBzdGF0ZW1lbnQsIGFuZCB5b3Ugc3dvcmUgdG8gdGhhdCBpbiB5b3VyIGluZGljdG1lbnQuICBCdXQgaWYgSSBiZWxpZXZlIGluIHNwaXJpdHVhbCBiZWluZ3MsIGl0IGlzIHF1aXRlIGluZXZpdGFibGUgdGhhdCBJIGJlbGlldmUgYWxzbyBpbiBzcGlyaXRzOyAgaXMgaXQgbm90IHNvPyAgSXQgaXM7ICBmb3IgSSBhc3N1bWUgdGhhdCB5b3UgYWdyZWUsIHNpbmNlIHlvdSBkbyBub3QgYW5zd2VyLiAgQnV0IGRvIHdlIG5vdCB0aGluayB0aGUgc3Bpcml0cyBhcmUKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI3ZCIgdW5pdD0ic2VjdGlvbiIgLz5nb2RzIG9yIGNoaWxkcmVuIG9mIGdvZHM/ICBZZXMsIG9yIG5vPyAg4oCcQ2VydGFpbmx5LuKAnSAgVGhlbiBpZiBJIGJlbGlldmUgaW4gc3Bpcml0cywgYXMgeW91IHNheSwgaWYgc3Bpcml0cyBhcmUgYSBraW5kIG9mIGdvZHMsIHRoYXQgd291bGQgYmUgdGhlIHB1enpsZSBhbmQgam9rZSB3aGljaCBJIHNheSB5b3UgYXJlIHV0dGVyaW5nIGluIHNheWluZyB0aGF0IEksIHdoaWxlIEkgZG8gbm90IGJlbGlldmUgaW4gZ29kcywgZG8gYmVsaWV2ZSBJbiBnb2RzIGFnYWluLCBzaW5jZSBJIGJlbGlldmUgaW4gc3Bpcml0czsgIGJ1dCBpZiwgb24gdGhlIG90aGVyIGhhbmQsIHNwaXJpdHMgYXJlIGEga2luZCBvZiBiYXN0YXJkIGNoaWxkcmVuIG9mIGdvZHMsIGJ5IG55bXBocyBvciBieSBhbnkgb3RoZXJzLCB3aG9ldmVyIHRoZWlyIG1vdGhlcnMgYXJlIHNhaWQgdG8gYmUsIHdoYXQgbWFuIHdvdWxkIGJlbGlldmUgdGhhdCB0aGVyZSBhcmUgY2hpbGRyZW4gb2YgZ29kcywgYnV0IG5vIGdvZHM/ICBJdCB3b3VsZCBiZSBqdXN0IGFzIGFic3VyZAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjdlIiB1bml0PSJzZWN0aW9uIiAvPmFzIGlmIG9uZSB3ZXJlIHRvIGJlbGlldmUgdGhhdCB0aGVyZSBhcmUgY2hpbGRyZW4gb2YgaG9yc2VzIGFuZCBhc3NlcywgbmFtZWx5IG11bGVzLCBidXQgbm8gaG9yc2VzIGFuZCBhc3Nlcy4gIEJ1dCwgTWVsZXR1cywgeW91IGNlcnRhaW5seSBtdXN0IGhhdmUgYnJvdWdodCB0aGlzIHN1aXQgZWl0aGVyIHRvIG1ha2UgYSB0ZXN0IG9mIHVzIG9yIGJlY2F1c2UgeW91IHdlcmUgbG9zcyBhcyB0byB3aGF0IHRydWUgd3Jvbmdkb2luZyB5b3UgY291bGQgYWNjdXNlIG1lIG9mOyAgYnV0IHRoZXJlIGlzIG5vIHdheSBmb3IgeW91IHRvIHBlcnN1YWRlIGFueSBtYW4gd2hvIGhhcyBldmVuIGEgbGl0dGxlIHNlbnNlIHRoYXQgaXQgaXMgcG9zc2libGUgZm9yIHRoZSBzYW1lIHBlcnNvbiB0byBiZWxpZXZlIGluIHNwaXJpdHVhbCBhbmQgZGl2aW5lIGV4aXN0ZW5jZXMgYW5kIGFnYWluIGZvciB0aGUgc2FtZSBwZXJzb24gbm90IHRvIGJlbGlldmUgaW4gc3Bpcml0cyBvciBnb2RzIG9yCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjhhIiB1bml0PSJzZWN0aW9uIiAvPmhlcm9lcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2VsbCB0aGVuLCBtZW4gb2YgQXRoZW5zLCB0aGF0IEkgYW0gbm90IGEgd3Jvbmdkb2VyIGFjY29yZGluZyB0byBNZWxldHVzJ3MgaW5kaWN0bWVudCwgc2VlbXMgdG8gbWUgbm90IHRvIG5lZWQgbXVjaCBvZiBhIGRlZmVuY2UsIGJ1dCB3aGF0IGhhcyBiZWVuIHNhaWQgaXMgZW5vdWdoLiAgQnV0IHlvdSBtYXkgYmUgYXNzdXJlZCB0aGF0IHdoYXQgSSBzYWlkIGJlZm9yZSBpcyB0cnVlLCB0aGF0IGdyZWF0IGhhdHJlZCBoYXMgYXJpc2VuIGFnYWluc3QgbWUgYW5kIGluIHRoZSBtaW5kcyBvZiBtYW55IHBlcnNvbnMuICBBbmQgdGhpcyBpdCBpcyB3aGljaCB3aWxsIGNhdXNlIG15IGNvbmRlbW5hdGlvbiwgaWYgaXQgaXMgdG8gY2F1c2UgaXQsIG5vdCBNZWxldHVzIG9yIEFueXR1cywgYnV0IHRoZSBwcmVqdWRpY2UgYW5kIGRpc2xpa2Ugb2YgdGhlIG1hbnkuICBUaGlzIGhhcyBjb25kZW1uZWQgbWFueSBvdGhlciBnb29kIG1lbiwgYW5kIEkgdGhpbmsgd2lsbCBkbyBzbzsgCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOGIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoZXJlIGlzIG5vIGRhbmdlciB0aGF0IGl0IHdpbGwgc3RvcCB3aXRoIG1lLiAgQnV0IHBlcmhhcHMgc29tZW9uZSBtaWdodCBzYXk6ICDigJxBcmUgeW91IHRoZW4gbm90IGFzaGFtZWQsIFNvY3JhdGVzLCBvZiBoYXZpbmcgZm9sbG93ZWQgc3VjaCBhIHB1cnN1aXQsIHRoYXQgeW91IGFyZSBub3cgaW4gZGFuZ2VyIG9mIGJlaW5nIHB1dCB0byBkZWF0aCBhcyBhIHJlc3VsdD/igJ0gIEJ1dCBJIHNob3VsZCBtYWtlIHRvIGhpbSBhIGp1c3QgcmVwbHk6ICDigJxZb3UgZG8gbm90IHNwZWFrIHdlbGwsIFNpciwgaWYgeW91IHRoaW5rIGEgbWFuIGluIHdob20gdGhlcmUgaXMgZXZlbiBhIGxpdHRsZSBtZXJpdCBvdWdodCB0byBjb25zaWRlciBkYW5nZXIgb2YgbGlmZSBvciBkZWF0aCwgYW5kIG5vdCByYXRoZXIgcmVnYXJkIHRoaXMgb25seSwgd2hlbiBoZSBkb2VzIHRoaW5ncywgd2hldGhlciB0aGUgdGhpbmdzIGhlIGRvZXMgYXJlIHJpZ2h0IG9yIHdyb25nIGFuZCB0aGUgYWN0cyBvZiBhIGdvb2Qgb3IgYSBiYWQgbWFuLiAgRm9yIGFjY29yZGluZyB0byB5b3VyIGFyZ3VtZW50IGFsbCB0aGUgZGVtaWdvZHMKICAgIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOGMiIHVuaXQ9InNlY3Rpb24iIC8+d291bGQgYmUgYmFkIHdobyBkaWVkIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJveSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVHJveSI+VHJveTwvcGxhY2VOYW1lPiwgaW5jbHVkaW5nIHRoZSBzb24gb2YgVGhldGlzLCB3aG8gc28gZGVzcGlzZWQgZGFuZ2VyLCBpbiBjb21wYXJpc29uIHdpdGggZW5kdXJpbmcgYW55IGRpc2dyYWNlLCB0aGF0IHdoZW4gaGlzIG1vdGhlciAoYW5kIHNoZSB3YXMgYSBnb2RkZXNzKSBzYWlkIHRvIGhpbSwgYXMgaGUgd2FzIGVhZ2VyIHRvIHNsYXkgSGVjdG9yLCBzb21ldGhpbmcgbGlrZSB0aGlzLCBJIGJlbGlldmUsIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj48bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPk15IHNvbiwgaWYgeW91IGF2ZW5nZSB0aGUgZGVhdGggb2YgeW91ciBmcmllbmQgUGF0cm9jbHVzIGFuZCBraWxsIEhlY3RvciwgeW91IHlvdXJzZWxmIHNoYWxsIGRpZTs8L2w+PGwgY2xhc3M9InRyYW5zbGF0aW9uIj5mb3Igc3RyYWlnaHR3YXksIGFmdGVyIEhlY3RvciwgaXMgZGVhdGggYXBwb2ludGVkIHVudG8geW91OzwvbD48L3F1b3RlPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+TXkgc29uLCBpZiB5b3UgYXZlbmdlIHRoZSBkZWF0aCBvZiB5b3VyIGZyaWVuZCBQYXRyb2NsdXMgYW5kIGtpbGwgSGVjdG9yLCB5b3UgeW91cnNlbGYgc2hhbGwgZGllOzwvbD48bCBjbGFzcz0idHJhbnNsYXRpb24iPmZvciBzdHJhaWdodHdheSwgYWZ0ZXIgSGVjdG9yLCBpcyBkZWF0aCBhcHBvaW50ZWQgdW50byB5b3U7PC9sPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAxOC45NiIgdmFsaWQ9InllcyI+SG9tLiBJbC4gMTguOTY8L2JpYmw+Ljwvbm90ZT5oZSwgd2hlbiBoZSBoZWFyZCB0aGlzLCBtYWRlIGxpZ2h0IG9mIGRlYXRoIGFuZCBkYW5nZXIsCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDE4Ljk2IiB2YWxpZD0ieWVzIj5Ib20uIElsLiAxOC45NjwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI4ZCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgZmVhcmVkIG11Y2ggbW9yZSB0byBsaXZlIGFzIGEgY293YXJkIGFuZCBub3QgdG8gYXZlbmdlIGhpcyBmcmllbmRzLCBhbmQgc2FpZCwgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPlN0cmFpZ2h0d2F5IG1heSBJIGRpZSwgYWZ0ZXIgZG9pbmcgdmVuZ2VhbmNlIHVwb24gdGhlIHdyb25nZG9lciwgdGhhdCBJIG1heSBub3Qgc3RheSBoZXJlLCBqZWVyZWQgYXQgYmVzaWRlIHRoZSBjdXJ2ZWQgc2hpcHMsIGEgYnVyZGVuIG9mIHRoZSBlYXJ0aC48L3F1b3RlPi4gRG8geW91IHRoaW5rIGhlIGNvbnNpZGVyZWQgZGVhdGggYW5kIGRhbmdlcj88bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Rm9yIHRodXMgaXQgaXMsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIGluIHRydXRoOyAgd2hlcmV2ZXIgYSBtYW4gc3RhdGlvbnMgaGltc2VsZiwgdGhpbmtpbmcgaXQgaXMgYmVzdCB0byBiZSB0aGVyZSwgb3IgaXMgc3RhdGlvbmVkIGJ5IGhpcyBjb21tYW5kZXIsIHRoZXJlIGhlIG11c3QsIGFzIGl0IHNlZW1zIHRvIG1lLCByZW1haW4gYW5kIHJ1biBoaXMgcmlza3MsIGNvbnNpZGVyaW5nIG5laXRoZXIgZGVhdGggbm9yIGFueSBvdGhlciB0aGluZyBtb3JlIHRoYW4gZGlzZ3JhY2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlNvIEkgc2hvdWxkIGhhdmUgZG9uZSBhIHRlcnJpYmxlIHRoaW5nLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjhlIiB1bml0PSJzZWN0aW9uIiAvPmlmLCB3aGVuIHRoZSBjb21tYW5kZXJzIHdob20geW91IGNob3NlIHRvIGNvbW1hbmQgbWUgc3RhdGlvbmVkIG1lLCBib3RoIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw2MDA0ODE0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDYwMDQ4MTQiPlBvdGlkYWVhPC9wbGFjZU5hbWU+IGFuZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEFtcGhpcG9saXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFtcGhpcG9saXMiPkFtcGhpcG9saXM8L3BsYWNlTmFtZT4gYW5kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw2MDAxNzAwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDYwMDE3MDAiPkRlbGl1bTwvcGxhY2VOYW1lPiwgSSByZW1haW5lZCB3aGVyZSB0aGV5IHN0YXRpb25lZCBtZSwgbGlrZSBhbnlib2R5IGVsc2UsIGFuZCByYW4gdGhlIHJpc2sgb2YgZGVhdGgsIGJ1dCB3aGVuIHRoZSBnb2QgZ2F2ZSBtZSBhIHN0YXRpb24sIGFzIEkgYmVsaWV2ZWQgYW5kIHVuZGVyc3Rvb2QsIHdpdGggb3JkZXJzIHRvIHNwZW5kIG15IGxpZmUgaW4gcGhpbG9zb3BoeSBhbmQgaW4gZXhhbWluaW5nIG15c2VsZiBhbmQgb3RoZXJzLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjkiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI5YSIgdW5pdD0ic2VjdGlvbiIgLz50aGVuIEkgd2VyZSB0byBkZXNlcnQgbXkgcG9zdCB0aHJvdWdoIGZlYXIgb2YgZGVhdGggb3IgYW55dGhpbmcgZWxzZSB3aGF0c29ldmVyLiAgSXQgd291bGQgYmUgYSB0ZXJyaWJsZSB0aGluZywgYW5kIHRydWx5IG9uZSBtaWdodCB0aGVuIGp1c3RseSBoYWxlIG1lIGludG8gY291cnQsIG9uIHRoZSBjaGFyZ2UgdGhhdCBJIGRvIG5vdCBiZWxpZXZlIHRoYXQgdGhlcmUgYXJlIGdvZHMsIHNpbmNlIEkgZGlzb2JleSB0aGUgb3JhY2xlIGFuZCBmZWFyIGRlYXRoIGFuZCB0aGluayBJIGFtIHdpc2Ugd2hlbiBJIGFtIG5vdC4gIEZvciB0byBmZWFyIGRlYXRoLCBnZW50bGVtZW4sIGlzIG5vdGhpbmcgZWxzZSB0aGFuIHRvIHRoaW5rIG9uZSBpcyB3aXNlIHdoZW4gb25lIGlzIG5vdDsgIGZvciBpdCBpcyB0aGlua2luZyBvbmUga25vd3Mgd2hhdCBvbmUgZG9lcyBub3Qga25vdy4gIEZvciBubyBvbmUga25vd3Mgd2hldGhlciBkZWF0aCBiZSBub3QgZXZlbiB0aGUgZ3JlYXRlc3Qgb2YgYWxsIGJsZXNzaW5ncyB0byBtYW4sIGJ1dCB0aGV5IGZlYXIgaXQgYXMgaWYgdGhleSBrbmV3IHRoYXQgaXQgaXMgdGhlIGdyZWF0ZXN0IG9mIGV2aWxzLiAKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI5YiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaXMgbm90IHRoaXMgdGhlIG1vc3QgcmVwcmVoZW5zaWJsZSBmb3JtIG9mIGlnbm9yYW5jZSwgdGhhdCBvZiB0aGlua2luZyBvbmUga25vd3Mgd2hhdCBvbmUgZG9lcyBub3Qga25vdz8gIFBlcmhhcHMsIGdlbnRsZW1lbiwgaW4gdGhpcyBtYXR0ZXIgYWxzbyBJIGRpZmZlciBmcm9tIG90aGVyIG1lbiBpbiB0aGlzIHdheSwgYW5kIGlmIEkgd2VyZSB0byBzYXkgdGhhdCBJIGFtIHdpc2VyIGluIGFueXRoaW5nLCBpdCB3b3VsZCBiZSBpbiB0aGlzLCB0aGF0IG5vdCBrbm93aW5nIHZlcnkgbXVjaCBhYm91dCB0aGUgb3RoZXIgd29ybGQsIEkgZG8gbm90IHRoaW5rIEkga25vdy4gIEJ1dCBJIGRvIGtub3cgdGhhdCBpdCBpcyBldmlsIGFuZCBkaXNncmFjZWZ1bCB0byBkbyB3cm9uZyBhbmQgdG8gZGlzb2JleSBoaW0gd2hvIGlzIGJldHRlciB0aGFuIEksIHdoZXRoZXIgaGUgYmUgZ29kIG9yIG1hbi4gIFNvIEkgc2hhbGwgbmV2ZXIgZmVhciBvciBhdm9pZCB0aG9zZSB0aGluZ3MgY29uY2VybmluZyB3aGljaCBJIGRvIG5vdCBrbm93IHdoZXRoZXIgdGhleSBhcmUgZ29vZCBvciBiYWQgcmF0aGVyIHRoYW4gdGhvc2Ugd2hpY2ggSSBrbm93IGFyZSBiYWQuICBBbmQgdGhlcmVmb3JlLCBldmVuIGlmCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOWMiIHVuaXQ9InNlY3Rpb24iIC8+eW91IGFjcXVpdCBtZSBub3cgYW5kIGFyZSBub3QgY29udmluY2VkIGJ5IEFueXR1cywgd2hvIHNhaWQgdGhhdCBlaXRoZXIgSSBvdWdodCBub3QgdG8gaGF2ZSBiZWVuIGJyb3VnaHQgdG8gdHJpYWwgYXQgYWxsLCBvciBzaW5jZSB3YXMgYnJvdWdodCB0byB0cmlhbCwgSSBtdXN0IGNlcnRhaW5seSBiZSBwdXQgdG8gZGVhdGgsIGFkZGluZyB0aGF0IGlmIEkgd2VyZSBhY3F1aXR0ZWQgeW91ciBzb25zIHdvdWxkIGFsbCBiZSB1dHRlcmx5IHJ1aW5lZCBieSBwcmFjdGljaW5nIHdoYXQgSSB0ZWFjaOKAlGlmIHlvdSBzaG91bGQgc2F5IHRvIG1lIGluIHJlcGx5IHRvIHRoaXM6ICDigJxTb2NyYXRlcywgdGhpcyB0aW1lIHdlIHdpbGwgbm90IGRvIGFzIEFueXR1cyBzYXlzLCBidXQgd2Ugd2lsbCBsZXQgeW91IGdvLCBvbiB0aGlzIGNvbmRpdGlvbiwgaG93ZXZlciwgdGhhdCB5b3Ugbm8gbG9uZ2VyIHNwZW5kIHlvdXIgdGltZSBpbiB0aGlzIGludmVzdGlnYXRpb24gb3IgaW4gcGhpbG9zb3BoeSwgYW5kIGlmIHlvdSBhcmUgY2F1Z2h0IGRvaW5nIHNvIGFnYWluIHlvdSBzaGFsbCBkaWXigJ07IAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjlkIiB1bml0PSJzZWN0aW9uIiAvPmlmIHlvdSBzaG91bGQgbGV0IG1lIGdvIG9uIHRoaXMgY29uZGl0aW9uIHdoaWNoIEkgaGF2ZSBtZW50aW9uZWQsIEkgc2hvdWxkIHNheSB0byB5b3UsIOKAnE1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIEkgcmVzcGVjdCBhbmQgbG92ZSB5b3UsIGJ1dCBJIHNoYWxsIG9iZXkgdGhlIGdvZCByYXRoZXIgdGhhbiB5b3UsIGFuZCB3aGlsZSBJIGxpdmUgYW5kIGFtIGFibGUgdG8gY29udGludWUsIEkgc2hhbGwgbmV2ZXIgZ2l2ZSB1cCBwaGlsb3NvcGh5IG9yIHN0b3AgZXhob3J0aW5nIHlvdSBhbmQgcG9pbnRpbmcgb3V0IHRoZSB0cnV0aCB0byBhbnkgb25lIG9mIHlvdSB3aG9tIEkgbWF5IG1lZXQsIHNheWluZyBpbiBteSBhY2N1c3RvbWVkIHdheTogIOKAnE1vc3QgZXhjZWxsZW50IG1hbiwgYXJlIHlvdSB3aG8gYXJlIGEgY2l0aXplbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHRoZSBncmVhdGVzdCBvZiBjaXRpZXMgYW5kIHRoZSBtb3N0IGZhbW91cyBmb3Igd2lzZG9tIGFuZCBwb3dlciwgbm90IGFzaGFtZWQgdG8gY2FyZSBmb3IgdGhlIGFjcXVpc2l0aW9uIG9mIHdlYWx0aAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjllIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBmb3IgcmVwdXRhdGlvbiBhbmQgaG9ub3IsIHdoZW4geW91IG5laXRoZXIgY2FyZSBub3IgdGFrZSB0aG91Z2h0IGZvciB3aXNkb20gYW5kIHRydXRoIGFuZCB0aGUgcGVyZmVjdGlvbiBvZiB5b3VyIHNvdWw/4oCdICBBbmQgaWYgYW55IG9mIHlvdSBhcmd1ZXMgdGhlIHBvaW50LCBhbmQgc2F5cyBoZSBkb2VzIGNhcmUsIEkgc2hhbGwgbm90IGxldCBoaW0gZ28gYXQgb25jZSwgbm9yIHNoYWxsIEkgZ28gYXdheSwgYnV0IEkgc2hhbGwgcXVlc3Rpb24gYW5kIGV4YW1pbmUgYW5kIGNyb3NzLWV4YW1pbmUgaGltLCBhbmQgaWYgSSBmaW5kIHRoYXQgaGUgZG9lcyBub3QgcG9zc2VzcyB2aXJ0dWUsIGJ1dCBzYXlzIGhlIGRvZXMsIEkgc2hhbGwgcmVidWtlIGhpbSBmb3Igc2Nvcm5pbmcKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMwIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMGEiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIHRoaW5ncyB0aGF0IGFyZSBvZiBtb3N0IGltcG9ydGFuY2UgYW5kIGNhcmluZyBtb3JlIGZvciB3aGF0IGlzIG9mIGxlc3Mgd29ydGguICBUaGlzIEkgc2hhbGwgZG8gdG8gd2hvbWV2ZXIgSSBtZWV0LCB5b3VuZyBhbmQgb2xkLCBmb3JlaWduZXIgYW5kIGNpdGl6ZW4sIGJ1dCBtb3N0IHRvIHRoZSBjaXRpemVucywgaW5hc211Y2ggYXMgeW91IGFyZSBtb3JlIG5lYXJseSByZWxhdGVkIHRvIG1lLiAgRm9yIGtub3cgdGhhdCB0aGUgZ29kIGNvbW1hbmRzIG1lIHRvIGRvIHRoaXMsIGFuZCBJIGJlbGlldmUgdGhhdCBubyBncmVhdGVyIGdvb2QgZXZlciBjYW1lIHRvIHBhc3MgaW4gdGhlIGNpdHkgdGhhbiBteSBzZXJ2aWNlIHRvIHRoZSBnb2QuICBGb3IgSSBnbyBhYm91dCBkb2luZyBub3RoaW5nIGVsc2UgdGhhbiB1cmdpbmcgeW91LCB5b3VuZyBhbmQgb2xkLCBub3QgdG8gY2FyZSBmb3IgeW91ciBwZXJzb25zIG9yIHlvdXIgcHJvcGVydHkKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMwYiIgdW5pdD0ic2VjdGlvbiIgLz5tb3JlIHRoYW4gZm9yIHRoZSBwZXJmZWN0aW9uIG9mIHlvdXIgc291bHMsIG9yIGV2ZW4gc28gbXVjaDsgIGFuZCBJIHRlbGwgeW91IHRoYXQgdmlydHVlIGRvZXMgbm90IGNvbWUgZnJvbSBtb25leSwgYnV0IGZyb20gdmlydHVlIGNvbWVzIG1vbmV5IGFuZCBhbGwgb3RoZXIgZ29vZCB0aGluZ3MgdG8gbWFuLCBib3RoIHRvIHRoZSBpbmRpdmlkdWFsIGFuZCB0byB0aGUgc3RhdGUuICBJZiBieSBzYXlpbmcgdGhlc2UgdGhpbmdzIEkgY29ycnVwdCB0aGUgeW91dGgsIHRoZXNlIHRoaW5ncyBtdXN0IGJlIGluanVyaW91czsgIGJ1dCBpZiBhbnlvbmUgYXNzZXJ0cyB0aGF0IEkgc2F5IG90aGVyIHRoaW5ncyB0aGFuIHRoZXNlLCBoZSBzYXlzIHdoYXQgaXMgdW50cnVlLiAgVGhlcmVmb3JlIEkgc2F5IHRvIHlvdSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgZWl0aGVyIGRvIGFzIEFueXR1cyB0ZWxscyB5b3UsIG9yIG5vdCwgYW5kIGVpdGhlciBhY3F1aXQgbWUsIG9yIG5vdCwga25vd2luZyB0aGF0IEkgc2hhbGwgbm90IGNoYW5nZSBteSBjb25kdWN0IGV2ZW4gaWYgSSBhbQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzBjIiB1bml0PSJzZWN0aW9uIiAvPnRvIGRpZSBtYW55IHRpbWVzIG92ZXIuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkRvIG5vdCBtYWtlIGEgZGlzdHVyYmFuY2UsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT47ICBjb250aW51ZSB0byBkbyB3aGF0IEkgYXNrZWQgb2YgeW91LCBub3QgdG8gaW50ZXJydXB0IG15IHNwZWVjaCBieSBkaXN0dXJiYW5jZXMsIGJ1dCB0byBoZWFyIG1lOyAgYW5kIEkgYmVsaWV2ZSB5b3Ugd2lsbCBwcm9maXQgYnkgaGVhcmluZy4gIE5vdyBJIGFtIGdvaW5nIHRvIHNheSBzb21lIHRoaW5ncyB0byB5b3UgYXQgd2hpY2ggeW91IHdpbGwgcGVyaGFwcyBjcnkgb3V0OyAgYnV0IGRvIG5vdCBkbyBzbyBieSBhbnkgbWVhbnMuICBGb3Iga25vdyB0aGF0IGlmIHlvdSBraWxsIG1lLCBJIGJlaW5nIHN1Y2ggYSBtYW4gYXMgSSBzYXkgSSBhbSwgeW91IHdpbGwgbm90IGluanVyZSBtZSBzbyBtdWNoIGFzIHlvdXJzZWx2ZXM7ICBmb3IgbmVpdGhlciBNZWxldHVzIG5vciBBbnl0dXMgY291bGQgaW5qdXJlIG1lOyAKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMwZCIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IHdvdWxkIGJlIGltcG9zc2libGUsIGZvciBJIGJlbGlldmUgaXQgaXMgbm90IEdvZCdzIHdpbGwgdGhhdCBhIGJldHRlciBtYW4gYmUgaW5qdXJlZCBieSBhIHdvcnNlLiAgSGUgbWlnaHQsIGhvd2V2ZXIsIHBlcmhhcHMga2lsbCBtZSBvciBiYW5pc2ggbWUgb3IgZGlzZnJhbmNoaXNlIG1lOyAgYW5kIHBlcmhhcHMgaGUgdGhpbmtzIGhlIHdvdWxkIHRodXMgaW5mbGljdCBncmVhdCBpbmp1cmllcyB1cG9uIG1lLCBhbmQgb3RoZXJzIG1heSB0aGluayBzbywgYnV0IEkgZG8gbm90OyAgSSB0aGluayBoZSBkb2VzIGhpbXNlbGYgYSBtdWNoIGdyZWF0ZXIgaW5qdXJ5IGJ5IGRvaW5nIHdoYXQgaGUgaXMgZG9pbmcgbm934oCUa2lsbGluZyBhIG1hbiB1bmp1c3RseS4gIEFuZCBzbywgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgSSBhbSBub3cgbWFraW5nIG15IGRlZmVuY2Ugbm90IGZvciBteSBvd24gc2FrZSwgYXMgb25lIG1pZ2h0IGltYWdpbmUsIGJ1dCBmYXIgbW9yZSBmb3IgeW91cnMsIHRoYXQgeW91IG1heSBub3QgYnkgY29uZGVtbmluZyBtZSBlcnIgaW4geW91ciB0cmVhdG1lbnQgb2YgdGhlIGdpZnQgdGhlIEdvZCBnYXZlIHlvdS4gCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMGUiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIGlmIHlvdSBwdXQgbWUgdG8gZGVhdGgsIHlvdSB3aWxsIG5vdCBlYXNpbHkgZmluZCBhbm90aGVyLCB3aG8sIHRvIHVzZSBhIHJhdGhlciBhYnN1cmQgZmlndXJlLCBhdHRhY2hlcyBoaW1zZWxmIHRvIHRoZSBjaXR5IGFzIGEgZ2FkZmx5IHRvIGEgaG9yc2UsIHdoaWNoLCB0aG91Z2ggbGFyZ2UgYW5kIHdlbGwgYnJlZCwgaXMgc2x1Z2dpc2ggb24gYWNjb3VudCBvZiBoaXMgc2l6ZSBhbmQgbmVlZHMgdG8gYmUgYXJvdXNlZCBieSBzdGluZ2luZy4gIEkgdGhpbmsgdGhlIGdvZCBmYXN0ZW5lZCBtZSB1cG9uIHRoZSBjaXR5IGluIHNvbWUgc3VjaCBjYXBhY2l0eSwgYW5kIEkgZ28gYWJvdXQgYXJvdXNpbmcsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzFhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB1cmdpbmcgYW5kIHJlcHJvYWNoaW5nIGVhY2ggb25lIG9mIHlvdSwgY29uc3RhbnRseSBhbGlnaHRpbmcgdXBvbiB5b3UgZXZlcnl3aGVyZSB0aGUgd2hvbGUgZGF5IGxvbmcuICBTdWNoIGFub3RoZXIgaXMgbm90IGxpa2VseSB0byBjb21lIHRvIHlvdSwgZ2VudGxlbWVuOyAgYnV0IGlmIHlvdSB0YWtlIG15IGFkdmljZSwgeW91IHdpbGwgc3BhcmUgbWUuICBCdXQgeW91LCBwZXJoYXBzLCBtaWdodCBiZSBhbmdyeSwgbGlrZSBwZW9wbGUgYXdha2VuZWQgZnJvbSBhIG5hcCwgYW5kIG1pZ2h0IHNsYXAgbWUsIGFzIEFueXR1cyBhZHZpc2VzLCBhbmQgZWFzaWx5IGtpbGwgbWU7ICB0aGVuIHlvdSB3b3VsZCBwYXNzIHRoZSByZXN0IG9mIHlvdXIgbGl2ZXMgaW4gc2x1bWJlciwgdW5sZXNzIEdvZCwgaW4gaGlzIGNhcmUgZm9yIHlvdSwgc2hvdWxkIHNlbmQgc29tZW9uZSBlbHNlIHRvIHN0aW5nIHlvdS4gIEFuZCB0aGF0IEkgYW0sIGFzIEkgc2F5LCBhIGtpbmQgb2YgZ2lmdCBmcm9tIHRoZSBnb2QsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMWIiIHVuaXQ9InNlY3Rpb24iIC8+eW91IG1pZ2h0IHVuZGVyc3RhbmQgZnJvbSB0aGlzOyAgZm9yIEkgaGF2ZSBuZWdsZWN0ZWQgYWxsIG15IG93biBhZmZhaXJzIGFuZCBoYXZlIGJlZW4gZW5kdXJpbmcgdGhlIG5lZ2xlY3Qgb2YgbXkgY29uY2VybnMgYWxsIHRoZXNlIHllYXJzLCBidXQgSSBhbSBhbHdheXMgYnVzeSBpbiB5b3VyIGludGVyZXN0LCBjb21pbmcgdG8gZWFjaCBvbmUgb2YgeW91IGluZGl2aWR1YWxseSBsaWtlIGEgZmF0aGVyIG9yIGFuIGVsZGVyIGJyb3RoZXIgYW5kIHVyZ2luZyB5b3UgdG8gY2FyZSBmb3IgdmlydHVlOyAgbm93IHRoYXQgaXMgbm90IGxpa2UgaHVtYW4gY29uZHVjdC4gIElmIEkgZGVyaXZlZCBhbnkgcHJvZml0IGZyb20gdGhpcyBhbmQgcmVjZWl2ZWQgcGF5IGZvciB0aGVzZSBleGhvcnRhdGlvbnMsIHRoZXJlIHdvdWxkIGJlIHNvbWUgc2Vuc2UgaW4gaXQ7ICBidXQgbm93IHlvdSB5b3Vyc2VsdmVzIHNlZSB0aGF0IG15IGFjY3VzZXJzLCB0aG91Z2ggdGhleSBhY2N1c2UgbWUgb2YgZXZlcnl0aGluZyBlbHNlIGluIHN1Y2ggYSBzaGFtZWxlc3Mgd2F5LCBoYXZlIG5vdCBiZWVuIGFibGUgdG8gd29yayB0aGVtc2VsdmVzIHVwIHRvIHN1Y2ggYSBwaXRjaCBvZiBzaGFtZWxlc3NuZXNzCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMWMiIHVuaXQ9InNlY3Rpb24iIC8+YXMgdG8gcHJvZHVjZSBhIHdpdG5lc3MgdG8gdGVzdGlmeSB0aGF0IEkgZXZlciBleGFjdGVkIG9yIGFza2VkIHBheSBvZiBhbnlvbmUuICBGb3IgSSB0aGluayBJIGhhdmUgYSBzdWZmaWNpZW50IHdpdG5lc3MgdGhhdCBJIHNwZWFrIHRoZSB0cnV0aCwgbmFtZWx5LCBteSBwb3ZlcnR5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5QZXJoYXBzIGl0IG1heSBzZWVtIHN0cmFuZ2UgdGhhdCBJIGdvIGFib3V0IGFuZCBpbnRlcmZlcmUgaW4gb3RoZXIgcGVvcGxlJ3MgYWZmYWlycyB0byBnaXZlIHRoaXMgYWR2aWNlIGluIHByaXZhdGUsIGJ1dCBkbyBub3QgdmVudHVyZSB0byBjb21lIGJlZm9yZSB5b3VyIGFzc2VtYmx5IGFuZCBhZHZpc2UgdGhlIHN0YXRlLiAgQnV0IHRoZSByZWFzb24gZm9yIHRoaXMsIGFzIHlvdSBoYXZlIGhlYXJkIG1lIHNheQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzFkIiB1bml0PSJzZWN0aW9uIiAvPmF0IG1hbnkgdGltZXMgYW5kIHBsYWNlcywgaXMgdGhhdCBzb21ldGhpbmcgZGl2aW5lIGFuZCBzcGlyaXR1YWwgY29tZXMgdG8gbWUsIHRoZSB2ZXJ5IHRoaW5nIHdoaWNoIE1lbGV0dXMgcmlkaWN1bGVkIGluIGhpcyBpbmRpY3RtZW50LiAgSSBoYXZlIGhhZCB0aGlzIGZyb20gbXkgY2hpbGRob29kOyAgaXQgaXMgYSBzb3J0IG9mIHZvaWNlIHRoYXQgY29tZXMgdG8gbWUsIGFuZCB3aGVuIGl0IGNvbWVzIGl0IGFsd2F5cyBob2xkcyBtZSBiYWNrIGZyb20gd2hhdCBJIGFtIHRoaW5raW5nIG9mIGRvaW5nLCBidXQgbmV2ZXIgdXJnZXMgbWUgZm9yd2FyZC4gIFRoaXMgaXQgaXMgd2hpY2ggb3Bwb3NlcyBteSBlbmdhZ2luZyBpbiBwb2xpdGljcy4gIEFuZCBJIHRoaW5rIHRoaXMgb3Bwb3NpdGlvbiBpcyBhIHZlcnkgZ29vZCB0aGluZzsgIGZvciB5b3UgbWF5IGJlIHF1aXRlIHN1cmUsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHRoYXQgaWYgSSBoYWQgdW5kZXJ0YWtlbiB0byBnbyBpbnRvIHBvbGl0aWNzLCBJIHNob3VsZCBoYXZlIGJlZW4gcHV0IHRvIGRlYXRoIGxvbmcgYWdvIGFuZCBzaG91bGQgaGF2ZSBkb25lCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMWUiIHVuaXQ9InNlY3Rpb24iIC8+bm8gZ29vZCB0byB5b3Ugb3IgdG8gbXlzZWxmLiAgQW5kIGRvIG5vdCBiZSBhbmdyeSB3aXRoIG1lIGZvciBzcGVha2luZyB0aGUgdHJ1dGg7ICB0aGUgZmFjdCBpcyB0aGF0IG5vIG1hbiB3aWxsIHNhdmUgaGlzIGxpZmUgd2hvIG5vYmx5IG9wcG9zZXMgeW91IG9yIGFueSBvdGhlciBwb3B1bGFjZSBhbmQgcHJldmVudHMgbWFueSB1bmp1c3QgYW5kIGlsbGVnYWwgdGhpbmdzIGZyb20gaGFwcGVuaW5nIGluIHRoZSBzdGF0ZS4gCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzJhIiB1bml0PSJzZWN0aW9uIiAvPkEgbWFuIHdobyByZWFsbHkgZmlnaHRzIGZvciB0aGUgcmlnaHQsIGlmIGhlIGlzIHRvIHByZXNlcnZlIGhpcyBsaWZlIGZvciBldmVuIGEgbGl0dGxlIHdoaWxlLCBtdXN0IGJlIGEgcHJpdmF0ZSBjaXRpemVuLCBub3QgYSBwdWJsaWMgbWFuLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHdpbGwgZ2l2ZSB5b3UgcG93ZXJmdWwgcHJvb2ZzIG9mIHRoaXMgbm90IG1lcmUgd29yZHMsIGJ1dCB3aGF0IHlvdSBob25vciBtb3JlLOKAlGFjdGlvbnMuICBBbmQgbGlzdGVuIHRvIHdoYXQgaGFwcGVuZWQgdG8gbWUsIHRoYXQgeW91IG1heSBiZSBjb252aW5jZWQgdGhhdCBJIHdvdWxkIG5ldmVyIHlpZWxkIHRvIGFueSBvbmUsIGlmIHRoYXQgd2FzIHdyb25nLCB0aHJvdWdoIGZlYXIgb2YgZGVhdGgsIGJ1dCB3b3VsZCBkaWUgcmF0aGVyIHRoYW4geWllbGQuICBUaGUgdGFsZSBJIGFtIGdvaW5nIHRvIHRlbGwgeW91IGlzIG9yZGluYXJ5IGFuZCBjb21tb25wbGFjZSwgYnV0IHRydWUuIAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzJiIiB1bml0PSJzZWN0aW9uIiAvPkksIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIG5ldmVyIGhlbGQgYW55IG90aGVyIG9mZmljZSBpbiB0aGUgc3RhdGUsIGJ1dCBJIHdhcyBhIHNlbmF0b3I7ICBhbmQgaXQgaGFwcGVuZWQgdGhhdCBteSB0cmliZSBoZWxkIHRoZSBwcmVzaWRlbmN5IHdoZW4geW91IHdpc2hlZCB0byBqdWRnZSBjb2xsZWN0aXZlbHksIG5vdCBzZXZlcmFsbHksIHRoZSB0ZW4gZ2VuZXJhbHMgd2hvIGhhZCBmYWlsZWQgdG8gZ2F0aGVyIHVwIHRoZSBzbGFpbiBhZnRlciB0aGUgbmF2YWwgYmF0dGxlOyAgdGhpcyB3YXMgaWxsZWdhbCwgYXMgeW91IGFsbCBhZ3JlZWQgYWZ0ZXJ3YXJkcy4gIEF0IHRoYXQgdGltZSBJIHdhcyB0aGUgb25seSBvbmUgb2YgdGhlIHByeXRhbmVzIHdobyBvcHBvc2VkIGRvaW5nIGFueXRoaW5nIGNvbnRyYXJ5IHRvIHRoZSBsYXdzLCBhbmQgYWx0aG91Z2ggdGhlIG9yYXRvcnMgd2VyZSByZWFkeSB0byBpbXBlYWNoIGFuZCBhcnJlc3QgbWUsIGFuZCB0aG91Z2ggeW91IHVyZ2VkIHRoZW0gd2l0aCBzaG91dHMgdG8gZG8gc28sIEkgdGhvdWdodAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzJjIiB1bml0PSJzZWN0aW9uIiAvPkkgbXVzdCBydW4gdGhlIHJpc2sgdG8gdGhlIGVuZCB3aXRoIGxhdyBhbmQganVzdGljZSBvbiBteSBzaWRlLCByYXRoZXIgdGhhbiBqb2luIHdpdGggeW91IHdoZW4geW91ciB3aXNoZXMgd2VyZSB1bmp1c3QsIHRocm91Z2ggZmVhciBvZiBpbXByaXNvbm1lbnQgb3IgZGVhdGguICBUaGF0IHdhcyB3aGVuIHRoZSBkZW1vY3JhY3kgc3RpbGwgZXhpc3RlZDsgIGFuZCBhZnRlciB0aGUgb2xpZ2FyY2h5IHdhcyBlc3RhYmxpc2hlZCwgdGhlIFRoaXJ0eSBzZW50IGZvciBtZSB3aXRoIGZvdXIgb3RoZXJzIHRvIGNvbWUgdG8gdGhlIHJvdHVuZGEgYW5kIG9yZGVyZWQgdXMgdG8gYnJpbmcgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDkxMjAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwOTEyMCI+TGVvbjwvcGxhY2VOYW1lPiB0aGUgU2FsYW1pbmlhbiBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyMzQwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDIzNDAiPlNhbGFtaXM8L3BsYWNlTmFtZT4gdG8gYmUgcHV0IHRvIGRlYXRoLiAgVGhleSBnYXZlIG1hbnkgc3VjaCBvcmRlcnMgdG8gb3RoZXJzIGFsc28sIGJlY2F1c2UgdGhleSB3aXNoZWQgdG8gaW1wbGljYXRlIGFzIG1hbnkgaW4gdGhlaXIgY3JpbWVzIGFzIHRoZXkgY291bGQuICBUaGVuIEksIGhvd2V2ZXIsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMmQiIHVuaXQ9InNlY3Rpb24iIC8+c2hvd2VkIGFnYWluLCBieSBhY3Rpb24sIG5vdCBpbiB3b3JkIG9ubHksIHRoYXQgSSBkaWQgbm90IGNhcmUgYSB3aGl0IGZvciBkZWF0aCBpZiB0aGF0IGJlIG5vdCB0b28gcnVkZSBhbiBleHByZXNzaW9uLCBidXQgdGhhdCBJIGRpZCBjYXJlIHdpdGggYWxsIG15IG1pZ2h0IG5vdCB0byBkbyBhbnl0aGluZyB1bmp1c3Qgb3IgdW5ob2x5LiAgRm9yIHRoYXQgZ292ZXJubWVudCwgd2l0aCBhbGwgaXRzIHBvd2VyLCBkaWQgbm90IGZyaWdodGVuIG1lIGludG8gZG9pbmcgYW55dGhpbmcgdW5qdXN0LCBidXQgd2hlbiB3ZSBjYW1lIG91dCBvZiB0aGUgcm90dW5kYSwgdGhlIG90aGVyIGZvdXIgd2VudCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjM0MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzQwIj5TYWxhbWlzPC9wbGFjZU5hbWU+IGFuZCBhcnJlc3RlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwOTEyMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA5MTIwIj5MZW9uPC9wbGFjZU5hbWU+LCBidXQgSSBzaW1wbHkgd2VudCBob21lOyAgYW5kIHBlcmhhcHMgSSBzaG91bGQgaGF2ZSBiZWVuIHB1dCB0byBkZWF0aCBmb3IgaXQsIGlmIHRoZSBnb3Zlcm5tZW50IGhhZCBub3QKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMyZSIgdW5pdD0ic2VjdGlvbiIgLz5xdWlja2x5IGJlZW4gcHV0IGRvd24uICBPZiB0aGVzZSBmYWN0cyB5b3UgY2FuIGhhdmUgbWFueSB3aXRuZXNzZXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkRvIHlvdSBiZWxpZXZlIHRoYXQgSSBjb3VsZCBoYXZlIGxpdmVkIHNvIG1hbnkgeWVhcnMgaWYgSSBoYWQgYmVlbiBpbiBwdWJsaWMgbGlmZSBhbmQgaGFkIGFjdGVkIGFzIGEgZ29vZCBtYW4gc2hvdWxkIGFjdCwgbGVuZGluZyBteSBhaWQgdG8gd2hhdCBpcyBqdXN0IGFuZCBjb25zaWRlcmluZyB0aGF0IG9mIHRoZSBoaWdoZXN0IGltcG9ydGFuY2U/ICBGYXIgZnJvbSBpdCwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPjsgIG5vciBjb3VsZAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzMiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMzYSIgdW5pdD0ic2VjdGlvbiIgLz5hbnkgb3RoZXIgbWFuLiAgQnV0IHlvdSB3aWxsIGZpbmQgdGhhdCB0aHJvdWdoIGFsbCBteSBsaWZlLCBib3RoIGluIHB1YmxpYywgaWYgSSBlbmdhZ2VkIGluIGFueSBwdWJsaWMgYWN0aXZpdHksIGFuZCBpbiBwcml2YXRlLCBJIGhhdmUgYWx3YXlzIGJlZW4gdGhlIHNhbWUgYXMgbm93LCBhbmQgaGF2ZSBuZXZlciB5aWVsZGVkIHRvIGFueSBvbmUgd3JvbmdseSwgd2hldGhlciBpdCB3ZXJlIGFueSBvdGhlciBwZXJzb24gb3IgYW55IG9mIHRob3NlIHdobyBhcmUgc2FpZCBieSBteSB0cmFkdWNlcnMgdG8gYmUgbXkgcHVwaWxzLiAgQnV0IEkgd2FzIG5ldmVyIGFueSBvbmUncyB0ZWFjaGVyLiAgSWYgYW55IG9uZSwgd2hldGhlciB5b3VuZyBvciBvbGQsIHdpc2hlcyB0byBoZWFyIG1lIHNwZWFraW5nIGFuZCBwdXJzdWluZyBteSBtaXNzaW9uLCBJIGhhdmUgbmV2ZXIgb2JqZWN0ZWQsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzM2IiIHVuaXQ9InNlY3Rpb24iIC8+bm9yIGRvIEkgY29udmVyc2Ugb25seSB3aGVuIEkgYW0gcGFpZCBhbmQgbm90IG90aGVyd2lzZSwgYnV0IEkgb2ZmZXIgbXlzZWxmIGFsaWtlIHRvIHJpY2ggYW5kIHBvb3I7ICBJIGFzayBxdWVzdGlvbnMsIGFuZCB3aG9ldmVyIHdpc2hlcyBtYXkgYW5zd2VyIGFuZCBoZWFyIHdoYXQgSSBzYXkuICBBbmQgd2hldGhlciBhbnkgb2YgdGhlbSB0dXJucyBvdXQgd2VsbCBvciBpbGwsIEkgc2hvdWxkIG5vdCBqdXN0bHkgYmUgaGVsZCByZXNwb25zaWJsZSwgc2luY2UgSSBuZXZlciBwcm9taXNlZCBvciBnYXZlIGFueSBpbnN0cnVjdGlvbiB0byBhbnkgb2YgdGhlbTsgIGJ1dCBpZiBhbnkgbWFuIHNheXMgdGhhdCBoZSBldmVyIGxlYXJuZWQgb3IgaGVhcmQgYW55dGhpbmcgcHJpdmF0ZWx5IGZyb20gbWUsIHdoaWNoIGFsbCB0aGUgb3RoZXJzIGRpZCBub3QsIGJlIGFzc3VyZWQgdGhhdCBoZSBpcyBseWluZy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHdoeSB0aGVuIGRvIHNvbWUgcGVvcGxlIGxvdmUKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMzYyIgdW5pdD0ic2VjdGlvbiIgLz50byBzcGVuZCBtdWNoIG9mIHRoZWlyIHRpbWUgd2l0aCBtZT8gIFlvdSBoYXZlIGhlYXJkIHRoZSByZWFzb24sIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT47ICBmb3IgSSB0b2xkIHlvdSB0aGUgd2hvbGUgdHJ1dGg7ICBpdCBpcyBiZWNhdXNlIHRoZXkgbGlrZSB0byBsaXN0ZW4gd2hlbiB0aG9zZSBhcmUgZXhhbWluZWQgd2hvIHRoaW5rIHRoZXkgYXJlIHdpc2UgYW5kIGFyZSBub3Qgc287ICBmb3IgaXQgaXMgYW11c2luZy4gIEJ1dCwgYXMgSSBiZWxpZXZlLCBJIGhhdmUgYmVlbiBjb21tYW5kZWQgdG8gZG8gdGhpcyBieSB0aGUgR29kIHRocm91Z2ggb3JhY2xlcyBhbmQgZHJlYW1zIGFuZCBpbiBldmVyeSB3YXkgaW4gd2hpY2ggYW55IG1hbiB3YXMgZXZlciBjb21tYW5kZWQgYnkgZGl2aW5lIHBvd2VyIHRvIGRvIGFueXRoaW5nIHdoYXRzb2V2ZXIuICBUaGlzLCBBdGhlbmlhbnMsIGlzIHRydWUgYW5kIGVhc2lseSB0ZXN0ZWQuICBGb3IgaWYgSSBhbSBjb3JydXB0aW5nIHNvbWUgb2YgdGhlIHlvdW5nIG1lbgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzNkIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBoYXZlIGNvcnJ1cHRlZCBvdGhlcnMsIHN1cmVseSBzb21lIG9mIHRoZW0gd2hvIGhhdmUgZ3Jvd24gb2xkZXIsIGlmIHRoZXkgcmVjb2duaXplIHRoYXQgSSBldmVyIGdhdmUgdGhlbSBhbnkgYmFkIGFkdmljZSB3aGVuIHRoZXkgd2VyZSB5b3VuZywgb3VnaHQgbm93IHRvIGhhdmUgY29tZSBmb3J3YXJkIHRvIGFjY3VzZSBtZS4gIE9yIGlmIHRoZXkgZGlkIG5vdCB3aXNoIHRvIGRvIGl0IHRoZW1zZWx2ZXMsIHNvbWUgb2YgdGhlaXIgcmVsYXRpdmVz4oCUZmF0aGVycyBvciBicm90aGVycyBvciBvdGhlciBraW5zZm9sa+KAlG91Z2h0IG5vdyB0byB0ZWxsIHRoZSBmYWN0cy4gIEFuZCB0aGVyZSBhcmUgbWFueSBvZiB0aGVtIHByZXNlbnQsIHdob20gSSBzZWU7ICBmaXJzdCBDcml0byBoZXJlLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzNlIiB1bml0PSJzZWN0aW9uIiAvPndobyBpcyBvZiBteSBvd24gYWdlIGFuZCBteSBvd24gZGVtZSBhbmQgZmF0aGVyIG9mIENyaXRvYnVsdXMsIHdobyBpcyBhbHNvIHByZXNlbnQ7ICB0aGVuIHRoZXJlIGlzIEx5c2FuaWFzIHRoZSBTcGhldHRpYW4sIGZhdGhlciBvZiBBZXNjaGluZXMsIHdobyBpcyBoZXJlOyAgYW5kIGFsc28gQW50aXBob24gb2YgQ2VwaGlzdXMsIGZhdGhlciBvZiBFcGlnZW5lcy4gIFRoZW4gaGVyZSBhcmUgb3RoZXJzIHdob3NlIGJyb3RoZXJzIGpvaW5lZCBpbiBteSBjb252ZXJzYXRpb25zLCBOaWNvc3RyYXR1cywgc29uIG9mIFRoZW96b3RpZGVzIGFuZCBicm90aGVyIG9mIFRoZW9kb3R1cyAobm93IFRoZW9kb3R1cyBpcyBkZWFkLCBzbyBoZSBjb3VsZCBub3Qgc3RvcCBoaW0gYnkgZW50cmVhdGllcyksIGFuZCBQYXJhbHVzLCBzb24gb2YgRGVtb2RvY3VzOyAgVGhlYWdlcyB3YXMgaGlzIGJyb3RoZXI7ICBhbmQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM0IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNGEiIHVuaXQ9InNlY3Rpb24iIC8+QWRpbWFudHVzLCBzb24gb2YgQXJpc3RvLCB3aG9zZSBicm90aGVyIGlzIFBsYXRvIGhlcmU7ICBhbmQgQWVhbnRvZG9ydXMsIHdob3NlIGJyb3RoZXIgQXBvbGxvZG9ydXMgaXMgcHJlc2VudC4gIEFuZCBJIGNhbiBtZW50aW9uIHRvIHlvdSBtYW55IG90aGVycywgc29tZSBvbmUgb2Ygd2hvbSBNZWxldHVzIG91Z2h0IGNlcnRhaW5seSB0byBoYXZlIHByb2R1Y2VkIGFzIGEgd2l0bmVzcyBpbiBoaXMgc3BlZWNoOyAgYnV0IGlmIGhlIGZvcmdvdCBpdCB0aGVuLCBsZXQgaGltIGRvIHNvIG5vdzsgIEkgeWllbGQgdGhlIGZsb29yIHRvIGhpbSwgYW5kIGxldCBoaW0gc2F5LCBpZiBoZSBoYXMgYW55IHN1Y2ggdGVzdGltb255LiAgQnV0IHlvdSB3aWxsIGZpbmQgdGhhdCB0aGUgZXhhY3Qgb3Bwb3NpdGUgaXMgdGhlIGNhc2UsIGdlbnRsZW1lbiwgYW5kIHRoYXQgdGhleSBhcmUgYWxsIHJlYWR5IHRvIGFpZCBtZSwgdGhlIG1hbiB3aG8gY29ycnVwdHMgYW5kIGluanVyZXMgdGhlaXIgcmVsYXRpdmVzLCBhcyBNZWxldHVzIGFuZCBBbnl0dXMgc2F5LiAKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM0YiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhvc2Ugd2hvIGFyZSB0aGVtc2VsdmVzIGNvcnJ1cHRlZCBtaWdodCBoYXZlIHNvbWUgbW90aXZlIGluIGFpZGluZyBtZTsgIGJ1dCB3aGF0IHJlYXNvbiBjb3VsZCB0aGVpciByZWxhdGl2ZXMgaGF2ZSwgd2hvIGFyZSBub3QgY29ycnVwdGVkIGFuZCBhcmUgYWxyZWFkeSBvbGRlciBtZW4sIHVubGVzcyBpdCBiZSB0aGUgcmlnaHQgYW5kIHRydWUgcmVhc29uLCB0aGF0IHRoZXkga25vdyB0aGF0IE1lbGV0dXMgaXMgbHlpbmcgYW5kIEkgYW0gc3BlYWtpbmcgdGhlIHRydXRoPzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZWxsLCBnZW50bGVtZW4sIHRoaXMsIGFuZCBwZXJoYXBzIG1vcmUgbGlrZSB0aGlzLCBpcyBhYm91dCBhbGwgSSBoYXZlIHRvIHNheSBpbiBteSBkZWZlbmNlLiAgUGVyaGFwcyBzb21lIG9uZSBhbW9uZyB5b3UgbWF5IGJlIG9mZmVuZGVkCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNGMiIHVuaXQ9InNlY3Rpb24iIC8+d2hlbiBoZSByZW1lbWJlcnMgaGlzIG93biBjb25kdWN0LCBpZiBoZSwgZXZlbiBpbiBhIGNhc2Ugb2YgbGVzcyBpbXBvcnRhbmNlIHRoYW4gdGhpcywgYmVnZ2VkIGFuZCBiZXNvdWdodCB0aGUganVkZ2VzIHdpdGggbWFueSB0ZWFycywgYW5kIGJyb3VnaHQgZm9yd2FyZCBoaXMgY2hpbGRyZW4gdG8gYXJvdXNlIGNvbXBhc3Npb24sIGFuZCBtYW55IG90aGVyIGZyaWVuZHMgYW5kIHJlbGF0aXZlczsgIHdoZXJlYXMgSSB3aWxsIGRvIG5vbmUgb2YgdGhlc2UgdGhpbmdzLCB0aG91Z2ggSSBhbSwgYXBwYXJlbnRseSwgaW4gdGhlIHZlcnkgZ3JlYXRlc3QgZGFuZ2VyLiAgUGVyaGFwcyBzb21lIG9uZSB3aXRoIHRoZXNlIHRob3VnaHRzIGluIG1pbmQgbWF5IGJlIGhhcnNobHkgZGlzcG9zZWQgdG93YXJkIG1lIGFuZCBtYXkgY2FzdCBoaXMgdm90ZSBpbiBhbmdlci4gIE5vdyBpZiBhbnkgb25lIG9mIHlvdSBpcyBzbyBkaXNwb3NlZCAKICAgIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNGQiIHVuaXQ9InNlY3Rpb24iIC8+4oCUSSBkbyBub3QgYmVsaWV2ZSB0aGVyZSBpcyBzdWNoIGEgcGVyc29u4oCUYnV0IGlmIHRoZXJlIHNob3VsZCBiZSwgSSB0aGluayBJIHNob3VsZCBiZSBzcGVha2luZyBmYWlybHkgaWYgSSBzYWlkIHRvIGhpbSwgTXkgZnJpZW5kLCBJIHRvbyBoYXZlIHJlbGF0aXZlcywgZm9yIEkgYW0sIGFzIEhvbWVyIGhhcyBpdCwgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+bm90IGJvcm4gb2YgYW4gb2FrIG9yIGEgcm9jayw8L2w+PC9xdW90ZT48bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPm5vdCBib3JuIG9mIGFuIG9hayBvciBhIHJvY2ssPC9sPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iTG9lYiIgcGxhY2U9InVuc3BlY2lmaWVkIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIE9kLiAxOS4xNjMiIHZhbGlkPSJ5ZXMiPkhvbS4gT2QuIDE5LjE2MzwvYmlibD4uPC9ub3RlPmJ1dCBvZiBodW1hbiBwYXJlbnRzLCBzbyB0aGF0IEkgaGF2ZSByZWxhdGl2ZXMgYW5kLCBtZW4gb2YgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBPZC4gMTkuMTYzIiB2YWxpZD0ieWVzIj5Ib20uIE9kLiAxOS4xNjM8L2JpYmw+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgSSBoYXZlIHRocmVlIHNvbnMsIG9uZSBuZWFybHkgZ3Jvd24gdXAsIGFuZCB0d28gc3RpbGwgY2hpbGRyZW47ICBidXQgbmV2ZXJ0aGVsZXNzIEkgc2hhbGwgbm90IGJyaW5nIGFueSBvZiB0aGVtIGhlcmUgYW5kIGJlZyB5b3UgdG8gYWNxdWl0IG1lLiAgQW5kIHdoeSBzaGFsbCBJIG5vdCBkbyBzbz8gIE5vdCBiZWNhdXNlIEkgYW0gc3R1YmJvcm4sIEF0aGVuaWFucywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM0ZSIgdW5pdD0ic2VjdGlvbiIgLz5vciBsYWNrIHJlc3BlY3QgZm9yIHlvdS4gIFdoZXRoZXIgSSBmZWFyIGRlYXRoIG9yIG5vdCBpcyBhbm90aGVyIG1hdHRlciwgYnV0IGZvciB0aGUgc2FrZSBvZiBteSBnb29kIG5hbWUgYW5kIHlvdXJzIGFuZCB0aGF0IG9mIHRoZSB3aG9sZSBzdGF0ZSwgSSB0aGluayBpdCBpcyBub3QgcmlnaHQgZm9yIG1lIHRvIGRvIGFueSBvZiB0aGVzZSB0aGluZ3MgaW4gdmlldyBvZiBteSBhZ2UgYW5kIG15IHJlcHV0YXRpb24sIHdoZXRoZXIgZGVzZXJ2ZWQgb3Igbm90OyAgZm9yIGF0IGFueSByYXRlIHRoZSBvcGluaW9uIHByZXZhaWxzIHRoYXQgU29jcmF0ZXMKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM1IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNWEiIHVuaXQ9InNlY3Rpb24iIC8+aXMgaW4gc29tZSB3YXkgc3VwZXJpb3IgdG8gbW9zdCBtZW4uICBJZiB0aGVuIHRob3NlIG9mIHlvdSB3aG8gYXJlIHN1cHBvc2VkIHRvIGJlIHN1cGVyaW9yIGVpdGhlciBpbiB3aXNkb20gb3IgaW4gY291cmFnZSBvciBpbiBhbnkgb3RoZXIgdmlydHVlIHdoYXRzb2V2ZXIgYXJlIHRvIGJlaGF2ZSBpbiBzdWNoIGEgd2F5LCBpdCB3b3VsZCBiZSBkaXNncmFjZWZ1bC4gIFdoeSwgSSBoYXZlIG9mdGVuIHNlZW4gbWVuIHdobyBoYXZlIHNvbWUgcmVwdXRhdGlvbiBiZWhhdmluZyBpbiB0aGUgc3RyYW5nZXN0IG1hbm5lciwgd2hlbiB0aGV5IHdlcmUgb24gdHJpYWwsIGFzIGlmIHRoZXkgdGhvdWdodCB0aGV5IHdlcmUgZ29pbmcgdG8gc3VmZmVyIHNvbWV0aGluZyB0ZXJyaWJsZSBpZiB0aGV5IHdlcmUgcHV0IHRvIGRlYXRoLCBqdXN0IGFzIGlmIHRoZXkgd291bGQgYmUgaW1tb3J0YWwgaWYgeW91IGRpZCBub3Qga2lsbCB0aGVtLiAgSXQgc2VlbXMgdG8gbWUgdGhhdCB0aGV5IGFyZSBhIGRpc2dyYWNlIHRvIHRoZSBzdGF0ZSBhbmQgdGhhdCBhbnkgc3RyYW5nZXIgbWlnaHQgc2F5IHRoYXQgdGhvc2Ugb2YgdGhlIEF0aGVuaWFucyB3aG8gZXhjZWwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM1YiIgdW5pdD0ic2VjdGlvbiIgLz5pbiB2aXJ0dWUsIG1lbiB3aG9tIHRoZXkgdGhlbXNlbHZlcyBob25vciB3aXRoIG9mZmljZXMgYW5kIG90aGVyIG1hcmtzIG9mIGVzdGVlbSwgYXJlIG5vIGJldHRlciB0aGFuIHdvbWVuLiAgU3VjaCBhY3RzLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB3ZSB3aG8gaGF2ZSBhbnkgcmVwdXRhdGlvbiBhdCBhbGwgb3VnaHQgbm90IHRvIGNvbW1pdCwgYW5kIGlmIHdlIGNvbW1pdCB0aGVtIHlvdSBvdWdodCBub3QgdG8gYWxsb3cgaXQsIGJ1dCB5b3Ugc2hvdWxkIG1ha2UgaXQgY2xlYXIgdGhhdCB5b3Ugd2lsbCBiZSBtdWNoIG1vcmUgcmVhZHkgdG8gY29uZGVtbiBhIG1hbiB3aG8gcHV0cyBiZWZvcmUgeW91IHN1Y2ggcGl0aWFibGUgc2NlbmVzIGFuZCBtYWtlcyB0aGUgY2l0eSByaWRpY3Vsb3VzIHRoYW4gb25lIHdobyBrZWVwcyBxdWlldC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGFwYXJ0IGZyb20gdGhlIHF1ZXN0aW9uIG9mIHJlcHV0YXRpb24sIGdlbnRsZW1lbiwgSSB0aGluayBpdCBpcyBub3QgcmlnaHQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM1YyIgdW5pdD0ic2VjdGlvbiIgLz50byBpbXBsb3JlIHRoZSBqdWRnZSBvciB0byBnZXQgYWNxdWl0dGVkIGJ5IGJlZ2dpbmc7ICB3ZSBvdWdodCB0byBpbmZvcm0gYW5kIGNvbnZpbmNlIGhpbS4gIEZvciB0aGUganVkZ2UgaXMgbm90IGhlcmUgdG8gZ3JhbnQgZmF2b3JzIGluIG1hdHRlcnMgb2YganVzdGljZSwgYnV0IHRvIGdpdmUganVkZ2VtZW50OyAgYW5kIGhpcyBvYXRoIGJpbmRzIGhpbSBub3QgdG8gZG8gZmF2b3JzIGFjY29yZGluZyB0byBoaXMgcGxlYXN1cmUsIGJ1dCB0byBqdWRnZSBhY2NvcmRpbmcgdG8gdGhlIGxhd3M7ICB0aGVyZWZvcmUsIHdlIG91Z2h0IG5vdCB0byBnZXQgeW91IGludG8gdGhlIGhhYml0IG9mIGJyZWFraW5nIHlvdXIgb2F0aHMsIG5vciBvdWdodCB5b3UgdG8gZmFsbCBpbnRvIHRoYXQgaGFiaXQ7ICBmb3IgbmVpdGhlciBvZiB1cyB3b3VsZCBiZSBhY3RpbmcgcGlvdXNseS4gIERvIG5vdCwgdGhlcmVmb3JlLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBkZW1hbmQgb2YgbWUgdGhhdCBJIGFjdCBiZWZvcmUgeW91IGluIGEgd2F5IHdoaWNoIEkgY29uc2lkZXIgbmVpdGhlciBob25vcmFibGUgbm9yIHJpZ2h0IG5vciBwaW91cywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM1ZCIgdW5pdD0ic2VjdGlvbiIgLz5lc3BlY2lhbGx5IHdoZW4gaW1waWV0eSBpcyB0aGUgdmVyeSB0aGluZyBmb3Igd2hpY2ggTWVsZXR1cyBoZXJlIGhhcyBicm91Z2h0IG1lIHRvIHRyaWFsLiAgRm9yIGl0IGlzIHBsYWluIHRoYXQgaWYgYnkgcGVyc3Vhc2lvbiBhbmQgc3VwcGxpY2F0aW9uIEkgZm9yY2VkIHlvdSB0byBicmVhayB5b3VyIG9hdGhzIEkgc2hvdWxkIHRlYWNoIHlvdSB0byBkaXNiZWxpZXZlIGluIHRoZSBleGlzdGVuY2Ugb2YgdGhlIGdvZHMgYW5kIGluIG1ha2luZyBteSBkZWZlbmNlIHNob3VsZCBhY2N1c2UgbXlzZWxmIG9mIG5vdCBiZWxpZXZpbmcgaW4gdGhlbS4gIEJ1dCB0aGF0IGlzIGZhciBmcm9tIHRoZSB0cnV0aDsgIGZvciBJIGRvIGJlbGlldmUgaW4gdGhlbSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgbW9yZSB0aGFuIGFueSBvZiBteSBhY2N1c2VycywgYW5kIEkgZW50cnVzdCBteSBjYXNlIHRvIHlvdSBhbmQgdG8gR29kIHRvIGRlY2lkZSBpdCBhcyBzaGFsbCBiZSBiZXN0IGZvciBtZSBhbmQgZm9yIHlvdS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIiIHVuaXQ9InNwZWVjaCIgLz4KPC90cmFuc2xhdGlvbj4="
translation['38.38b.3'] = ""
translation['1.17.17a'] = ""
translation['1.17.17b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxN2IiIHVuaXQ9InNlY3Rpb24iIC8+YmVjYXVzZSBJIHdhcyBhIGNsZXZlciBzcGVha2VyLiAgRm9yIEkgdGhvdWdodCBpdCB0aGUgbW9zdCBzaGFtZWxlc3MgcGFydCBvZiB0aGVpciBjb25kdWN0IHRoYXQgdGhleSBhcmUgbm90IGFzaGFtZWQgYmVjYXVzZSB0aGV5IHdpbGwgaW1tZWRpYXRlbHkgYmUgY29udmljdGVkIGJ5IG1lIG9mIGZhbHNlaG9vZCBieSB0aGUgZXZpZGVuY2Ugb2YgZmFjdCwgd2hlbiBJIHNob3cgbXlzZWxmIHRvIGJlIG5vdCBpbiB0aGUgbGVhc3QgYSBjbGV2ZXIgc3BlYWtlciwgdW5sZXNzIGluZGVlZCB0aGV5IGNhbGwgaGltIGEgY2xldmVyIHNwZWFrZXIgd2hvIHNwZWFrcyB0aGUgdHJ1dGg7ICBmb3IgaWYgdGhpcyBpcyB3aGF0IHRoZXkgbWVhbiwgSSB3b3VsZCBhZ3JlZSB0aGF0IEkgYW0gYW4gb3JhdG9y4oCUbm90IGFmdGVyIHRoZWlyIGZhc2hpb24uICBOb3cgdGhleSwgYXMgSSBzYXksIGhhdmUgc2FpZCBsaXR0bGUgb3Igbm90aGluZyB0cnVlOyAgYnV0IHlvdSBzaGFsbCBoZWFyIGZyb20gbWUgbm90aGluZyBidXQgdGhlIHRydXRoLiAgTm90LCBob3dldmVyLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBzcGVlY2hlcyBmaW5lbHkgdHJpY2tlZCBvdXQgd2l0aCB3b3JkcyBhbmQgcGhyYXNlcywKPC90cmFuc2xhdGlvbj4="
translation['1.17.17c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxN2MiIHVuaXQ9InNlY3Rpb24iIC8+YXMgdGhlaXJzIGFyZSwgbm9yIGNhcmVmdWxseSBhcnJhbmdlZCwgYnV0IHlvdSB3aWxsIGhlYXIgdGhpbmdzIHNhaWQgYXQgcmFuZG9tIHdpdGggdGhlIHdvcmRzIHRoYXQgaGFwcGVuIHRvIG9jY3VyIHRvIG1lLiAgRm9yIEkgdHJ1c3QgdGhhdCB3aGF0IEkgc2F5IGlzIGp1c3Q7ICBhbmQgbGV0IG5vbmUgb2YgeW91IGV4cGVjdCBhbnl0aGluZyBlbHNlLiAgRm9yIHN1cmVseSBpdCB3b3VsZCBub3QgYmUgZml0dGluZyBmb3Igb25lIG9mIG15IGFnZSB0byBjb21lIGJlZm9yZSB5b3UgbGlrZSBhIHlvdW5nc3RlciBtYWtpbmcgdXAgc3BlZWNoZXMuICBBbmQsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIEkgdXJnZW50bHkgYmVnIGFuZCBiZXNlZWNoIHlvdSBpZiB5b3UgaGVhciBtZSBtYWtpbmcgbXkgZGVmZW5jZSB3aXRoIHRoZSBzYW1lIHdvcmRzIHdpdGggd2hpY2ggSSBoYXZlIGJlZW4gYWNjdXN0b21lZCB0byBzcGVhayBib3RoIGluIHRoZSBtYXJrZXQgcGxhY2UgYXQgdGhlIGJhbmtlcnMgdGFibGVzLCB3aGVyZSBtYW55IG9mIHlvdSBoYXZlIGhlYXJkIG1lLCBhbmQgZWxzZXdoZXJlLAo8L3RyYW5zbGF0aW9uPg=="
translation['1.17.17d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxN2QiIHVuaXQ9InNlY3Rpb24iIC8+bm90IHRvIGJlIHN1cnByaXNlZCBvciB0byBtYWtlIGEgZGlzdHVyYmFuY2Ugb24gdGhpcyBhY2NvdW50LiAgRm9yIHRoZSBmYWN0IGlzIHRoYXQgdGhpcyBpcyB0aGUgZmlyc3QgdGltZSBJIGhhdmUgY29tZSBiZWZvcmUgdGhlIGNvdXJ0LCBhbHRob3VnaCBJIGFtIHNldmVudHkgeWVhcnMgb2xkOyAgSSBhbSB0aGVyZWZvcmUgYW4gdXR0ZXIgZm9yZWlnbmVyIHRvIHRoZSBtYW5uZXIgb2Ygc3BlZWNoIGhlcmUuICBIZW5jZSwganVzdCBhcyB5b3Ugd291bGQsIG9mIGNvdXJzZSwgaWYgSSB3ZXJlIHJlYWxseSBhIGZvcmVpZ25lciwgcGFyZG9uIG1lIGlmIEkgc3Bva2UgaW4gdGhhdCBkaWFsZWN0IGFuZCB0aGF0IG1hbm5lcgo8L3RyYW5zbGF0aW9uPg=="
translation['1.18.18a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMThhIiB1bml0PSJzZWN0aW9uIiAvPmluIHdoaWNoIEkgaGFkIGJlZW4gYnJvdWdodCB1cCwgc28gbm93IEkgbWFrZSB0aGlzIHJlcXVlc3Qgb2YgeW91LCBhIGZhaXIgb25lLCBhcyBpdCBzZWVtcyB0byBtZSwgdGhhdCB5b3UgZGlzcmVnYXJkIHRoZSBtYW5uZXIgb2YgbXkgc3BlZWNo4oCUZm9yIHBlcmhhcHMgaXQgbWlnaHQgYmUgd29yc2UgYW5kIHBlcmhhcHMgYmV0dGVy4oCUYW5kIG9ic2VydmUgYW5kIHBheSBhdHRlbnRpb24gbWVyZWx5IHRvIHRoaXMsIHdoZXRoZXIgd2hhdCBJIHNheSBpcyBqdXN0IG9yIG5vdDsgIGZvciB0aGF0IGlzIHRoZSB2aXJ0dWUgb2YgYSBqdWRnZSwgYW5kIGFuIG9yYXRvcidzIHZpcnR1ZSBpcyB0byBzcGVhayB0aGUgdHJ1dGguPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZpcnN0IHRoZW4gaXQgaXMgcmlnaHQgZm9yIG1lIHRvIGRlZmVuZCBteXNlbGYgYWdhaW5zdCB0aGUgZmlyc3QgZmFsc2UgYWNjdXNhdGlvbnMgYnJvdWdodCBhZ2FpbnN0IG1lLCBhbmQgdGhlIGZpcnN0IGFjY3VzZXJzLCBhbmQgdGhlbiBhZ2FpbnN0IHRoZSBsYXRlciBhY2N1c2F0aW9ucyBhbmQgdGhlIGxhdGVyIGFjY3VzZXJzLiAKPC90cmFuc2xhdGlvbj4="
translation['1.18.18b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOGIiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIG1hbnkgYWNjdXNlcnMgaGF2ZSByaXNlbiB1cCBhZ2FpbnN0IG1lIGJlZm9yZSB5b3UsIHdobyBoYXZlIGJlZW4gc3BlYWtpbmcgZm9yIGEgbG9uZyB0aW1lLCBtYW55IHllYXJzIGFscmVhZHksIGFuZCBzYXlpbmcgbm90aGluZyB0cnVlOyAgYW5kIEkgZmVhciB0aGVtIG1vcmUgdGhhbiBBbnl0dXMgYW5kIHRoZSByZXN0LCB0aG91Z2ggdGhlc2UgYWxzbyBhcmUgZGFuZ2Vyb3VzOyAgYnV0IHRob3NlIG90aGVycyBhcmUgbW9yZSBkYW5nZXJvdXMsIGdlbnRsZW1lbiwgd2hvIGdhaW5lZCB5b3VyIGJlbGllZiwgc2luY2UgdGhleSBnb3QgaG9sZCBvZiBtb3N0IG9mIHlvdSBpbiBjaGlsZGhvb2QsIGFuZCBhY2N1c2VkIG1lIHdpdGhvdXQgYW55IHRydXRoLCBzYXlpbmcsIOKAnFRoZXJlIGlzIGEgY2VydGFpbiBTb2NyYXRlcywgYSB3aXNlIG1hbiwgYSBwb25kZXJlciBvdmVyIHRoZSB0aGluZ3MgaW4gdGhlIGFpciBhbmQgb25lIHdobyBoYXMgaW52ZXN0aWdhdGVkIHRoZSB0aGluZ3MgYmVuZWF0aCB0aGUgZWFydGggYW5kIHdobyBtYWtlcyB0aGUgd2Vha2VyIGFyZ3VtZW50IHRoZSBzdHJvbmdlci7igJ0gIFRoZXNlLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LAo8L3RyYW5zbGF0aW9uPg=="
translation['1.18.18c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOGMiIHVuaXQ9InNlY3Rpb24iIC8+d2hvIGhhdmUgc3ByZWFkIGFicm9hZCB0aGlzIHJlcG9ydCwgYXJlIG15IGRhbmdlcm91cyBlbmVtaWVzLiAgRm9yIHRob3NlIHdobyBoZWFyIHRoZW0gdGhpbmsgdGhhdCBtZW4gd2hvIGludmVzdGlnYXRlIHRoZXNlIG1hdHRlcnMgZG8gbm90IGV2ZW4gYmVsaWV2ZSBpbiBnb2RzLiAgQmVzaWRlcywgdGhlc2UgYWNjdXNlcnMgYXJlIG1hbnkgYW5kIGhhdmUgYmVlbiBtYWtpbmcgdGhlaXIgYWNjdXNhdGlvbnMgYWxyZWFkeSBmb3IgYSBsb25nIHRpbWUsIGFuZCBtb3Jlb3ZlciB0aGV5IHNwb2tlIHRvIHlvdSBhdCBhbiBhZ2UgYXQgd2hpY2ggeW91IHdvdWxkIGJlbGlldmUgdGhlbSBtb3N0IHJlYWRpbHkgKHNvbWUgb2YgeW91IGluIHlvdXRoLCBtb3N0IG9mIHlvdSBpbiBjaGlsZGhvb2QpLCBhbmQgdGhlIGNhc2UgdGhleSBwcm9zZWN1dGVkIHdlbnQgdXR0ZXJseSBieSBkZWZhdWx0LCBzaW5jZSBub2JvZHkgYXBwZWFyZWQgaW4gZGVmZW5jZS4gIEJ1dCB0aGUgbW9zdCB1bnJlYXNvbmFibGUgdGhpbmcgb2YgYWxsIGlzIHRoaXMsIHRoYXQgaXQgaXMgbm90IGV2ZW4gcG9zc2libGUKPC90cmFuc2xhdGlvbj4="
translation['1.18.18d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOGQiIHVuaXQ9InNlY3Rpb24iIC8+dG8ga25vdyBhbmQgc3BlYWsgdGhlaXIgbmFtZXMsIGV4Y2VwdCB3aGVuIG9uZSBvZiB0aGVtIGhhcHBlbnMgdG8gYmUgYSB3cml0ZXIgb2YgY29tZWRpZXMuICBBbmQgYWxsIHRob3NlIHdobyBwZXJzdWFkZWQgeW91IGJ5IG1lYW5zIG9mIGVudnkgYW5kIHNsYW5kZXLigJRhbmQgc29tZSBhbHNvIHBlcnN1YWRlZCBvdGhlcnMgYmVjYXVzZSB0aGV5IGhhZCBiZWVuIHRoZW1zZWx2ZXMgcGVyc3VhZGVk4oCUYWxsIHRoZXNlIGFyZSBtb3N0IGRpZmZpY3VsdCB0byBjb3BlIHdpdGg7ICBmb3IgaXQgaXMgbm90IGV2ZW4gcG9zc2libGUgdG8gY2FsbCBhbnkgb2YgdGhlbSB1cCBoZXJlIGFuZCBjcm9zcy1xdWVzdGlvbiBoaW0sIGJ1dCBJIGFtIGNvbXBlbGxlZCBpbiBtYWtpbmcgbXkgZGVmZW5jZSB0byBmaWdodCwgYXMgaXQgd2VyZSwgYWJzb2x1dGVseSB3aXRoIHNoYWRvd3MgYW5kIHRvIGNyb3NzLXF1ZXN0aW9uIHdoZW4gbm9ib2R5IGFuc3dlcnMuICBCZSBraW5kIGVub3VnaCwgdGhlbiwgdG8gYmVhciBpbiBtaW5kLCBhcyBJIHNheSwgdGhhdCB0aGVyZSBhcmUgdHdvIGNsYXNzZXMKPC90cmFuc2xhdGlvbj4="
translation['1.18.18e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOGUiIHVuaXQ9InNlY3Rpb24iIC8+b2YgbXkgYWNjdXNlcnPigJRvbmUgdGhvc2Ugd2hvIGhhdmUganVzdCBicm91Z2h0IHRoZWlyIGFjY3VzYXRpb24sIHRoZSBvdGhlciB0aG9zZSB3aG8sIGFzIEkgd2FzIGp1c3Qgc2F5aW5nLCBicm91Z2h0IGl0IGxvbmcgYWdvLCBhbmQgY29uc2lkZXIgdGhhdCBJIG11c3QgZGVmZW5kIG15c2VsZiBmaXJzdCBhZ2FpbnN0IHRoZSBsYXR0ZXI7ICBmb3IgeW91IGhlYXJkIHRoZW0gbWFraW5nIHRoZWlyIGNoYXJnZXMgZmlyc3QgYW5kIHdpdGggbXVjaCBncmVhdGVyIGZvcmNlIHRoYW4gdGhlc2Ugd2hvIG1hZGUgdGhlbSBsYXRlci4gIFdlbGwsIHRoZW4sIEkgbXVzdCBtYWtlIGEgZGVmZW5jZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwKPC90cmFuc2xhdGlvbj4="
translation['1.19.19a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTlhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBtdXN0IHRyeSBpbiBzbyBzaG9ydCBhIHRpbWUgdG8gcmVtb3ZlIGZyb20geW91IHRoaXMgcHJlanVkaWNlIHdoaWNoIHlvdSBoYXZlIGJlZW4gZm9yIHNvIGxvbmcgYSB0aW1lIGFjcXVpcmluZy4gIE5vdyBJIHdpc2ggdGhhdCB0aGlzIG1pZ2h0IHR1cm4gb3V0IHNvLCBpZiBpdCBpcyBiZXR0ZXIgZm9yIHlvdSBhbmQgZm9yIG1lLCBhbmQgdGhhdCBJIG1pZ2h0IHN1Y2NlZWQgd2l0aCBteSBkZWZlbmNlOyAgYnV0IEkgdGhpbmsgaXQgaXMgZGlmZmljdWx0LCBhbmQgSSBhbSBub3QgYXQgYWxsIGRlY2VpdmVkIGFib3V0IGl0cyBuYXR1cmUuICBCdXQgbmV2ZXJ0aGVsZXNzLCBsZXQgdGhpcyBiZSBhcyBpcyBwbGVhc2luZyB0byBHb2QsIHRoZSBsYXcgbXVzdCBiZSBvYmV5ZWQgYW5kIEkgbXVzdCBtYWtlIGEgZGVmZW5jZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGxldCB1cyB0YWtlIHVwIGZyb20gdGhlIGJlZ2lubmluZyB0aGUgcXVlc3Rpb24sIHdoYXQgdGhlIGFjY3VzYXRpb24gaXMgZnJvbSB3aGljaCB0aGUgZmFsc2UgcHJlanVkaWNlIGFnYWluc3QgbWUgaGFzIGFyaXNlbiwgaW4gd2hpY2gKPC90cmFuc2xhdGlvbj4="
translation['1.19.19b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOWIiIHVuaXQ9InNlY3Rpb24iIC8+TWVsZXR1cyB0cnVzdGVkIHdoZW4gaGUgYnJvdWdodCB0aGlzIHN1aXQgYWdhaW5zdCBtZS4gIFdoYXQgZGlkIHRob3NlIHdobyBhcm91c2VkIHRoZSBwcmVqdWRpY2Ugc2F5IHRvIGFyb3VzZSBpdD8gIEkgbXVzdCwgYXMgaXQgd2VyZSwgcmVhZCB0aGVpciBzd29ybiBzdGF0ZW1lbnQgYXMgaWYgdGhleSB3ZXJlIHBsYWludGlmZnM6ICDigJxTb2NyYXRlcyBpcyBhIGNyaW1pbmFsIGFuZCBhIGJ1c3lib2R5LCBpbnZlc3RpZ2F0aW5nIHRoZSB0aGluZ3MgYmVuZWF0aCB0aGUgZWFydGggYW5kIGluIHRoZSBoZWF2ZW5zIGFuZCBtYWtpbmcgdGhlIHdlYWtlciBhcmd1bWVudCBzdHJvbmdlciBhbmQKPC90cmFuc2xhdGlvbj4="
translation['1.19.19c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOWMiIHVuaXQ9InNlY3Rpb24iIC8+dGVhY2hpbmcgb3RoZXJzIHRoZXNlIHNhbWUgdGhpbmdzLuKAnSAgU29tZXRoaW5nIG9mIHRoYXQgc29ydCBpdCBpcy4gIEZvciB5b3UgeW91cnNlbHZlcyBzYXcgdGhlc2UgdGhpbmdzIGluIEFyaXN0b3BoYW5lcycgY29tZWR5LCBhIFNvY3JhdGVzIGJlaW5nIGNhcnJpZWQgYWJvdXQgdGhlcmUsIHByb2NsYWltaW5nIHRoYXQgaGUgd2FzIHRyZWFkaW5nIG9uIGFpciBhbmQgdXR0ZXJpbmcgYSB2YXN0IGRlYWwgb2Ygb3RoZXIgbm9uc2Vuc2UsIGFib3V0IHdoaWNoIEkga25vdyBub3RoaW5nLCBlaXRoZXIgbXVjaCBvciBsaXR0bGUuICBBbmQgSSBzYXkgdGhpcywgbm90IHRvIGNhc3QgZGlzaG9ub3IgdXBvbiBzdWNoIGtub3dsZWRnZSwgaWYgYW55b25lIGlzIHdpc2UgYWJvdXQgc3VjaCBtYXR0ZXJzIChtYXkgSSBuZXZlciBoYXZlIHRvIGRlZmVuZCBteXNlbGYgYWdhaW5zdCBNZWxldHVzIG9uIHNvIGdyZWF0IGEgY2hhcmdlIGFzIHRoYXQhKSzigJRidXQgSSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgaGF2ZSBub3RoaW5nIHRvIGRvIHdpdGggdGhlc2UgdGhpbmdzLiAKPC90cmFuc2xhdGlvbj4="
translation['1.19.19d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOWQiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIEkgb2ZmZXIgYXMgd2l0bmVzc2VzIG1vc3Qgb2YgeW91cnNlbHZlcywgYW5kIEkgYXNrIHlvdSB0byBpbmZvcm0gb25lIGFub3RoZXIgYW5kIHRvIHRlbGwsIGFsbCB0aG9zZSBvZiB5b3Ugd2hvIGV2ZXIgaGVhcmQgbWUgY29udmVyc2luZ+KAlGFuZCB0aGVyZSBhcmUgbWFueSBzdWNoIGFtb25nIHlvdeKAlG5vdyB0ZWxsLCBpZiBhbnlvbmUgZXZlciBoZWFyZCBtZSB0YWxraW5nIG11Y2ggb3IgbGl0dGxlIGFib3V0IHN1Y2ggbWF0dGVycy4gIEFuZCBmcm9tIHRoaXMgeW91IHdpbGwgcGVyY2VpdmUgdGhhdCBzdWNoIGFyZSBhbHNvIHRoZSBvdGhlciB0aGluZ3MgdGhhdCB0aGUgbXVsdGl0dWRlIHNheSBhYm91dCBtZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGluIGZhY3Qgbm9uZSBvZiB0aGVzZSB0aGluZ3MgYXJlIHRydWUsIGFuZCBpZiB5b3UgaGF2ZSBoZWFyZCBmcm9tIGFueW9uZSB0aGF0IEkgdW5kZXJ0YWtlIHRvIHRlYWNoCjwvdHJhbnNsYXRpb24+"
translation['1.19.19e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOWUiIHVuaXQ9InNlY3Rpb24iIC8+cGVvcGxlIGFuZCB0aGF0IEkgbWFrZSBtb25leSBieSBpdCwgdGhhdCBpcyBub3QgdHJ1ZSBlaXRoZXIuICBBbHRob3VnaCB0aGlzIGFsc28gc2VlbXMgdG8gbWUgdG8gYmUgYSBmaW5lIHRoaW5nLCBpZiBvbmUgbWlnaHQgYmUgYWJsZSB0byB0ZWFjaCBwZW9wbGUsIGFzIEdvcmdpYXMgb2YgTGVvbnRpbmkgYW5kIFByb2RpY3VzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEwODY3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTA4NjciPkNlb3M8L3BsYWNlTmFtZT4gYW5kIEhpcHBpYXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxFbGlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxFbGlzIj5FbGlzPC9wbGFjZU5hbWU+IGFyZS4gIEZvciBlYWNoIG9mIHRoZXNlIG1lbiwgZ2VudGxlbWVuLCBpcyBhYmxlIHRvIGdvIGludG8gYW55IG9uZSBvZiB0aGUgY2l0aWVzIGFuZCBwZXJzdWFkZSB0aGUgeW91bmcgbWVuLCB3aG8gY2FuIGFzc29jaWF0ZSBmb3Igbm90aGluZyB3aXRoIHdob21zb2V2ZXIgdGhleSB3aXNoIGFtb25nIHRoZWlyIG93biBmZWxsb3cgY2l0aXplbnMsCjwvdHJhbnNsYXRpb24+"
translation['1.20.20a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjBhIiB1bml0PSJzZWN0aW9uIiAvPnRvIGdpdmUgdXAgdGhlIGFzc29jaWF0aW9uIHdpdGggdGhvc2UgbWVuIGFuZCB0byBhc3NvY2lhdGUgd2l0aCB0aGVtIGFuZCBwYXkgdGhlbSBtb25leSBhbmQgYmUgZ3JhdGVmdWwgYmVzaWRlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHRoZXJlIGlzIGFsc28gYW5vdGhlciB3aXNlIG1hbiBoZXJlLCBhIFBhcmlhbiwgd2hvIEkgbGVhcm5lZCB3YXMgaW4gdG93bjsgIGZvciBJIGhhcHBlbmVkIHRvIG1lZXQgYSBtYW4gd2hvIGhhcyBzcGVudCBtb3JlIG9uIHNvcGhpc3RzIHRoYW4gYWxsIHRoZSByZXN0LCBDYWxsaWFzLCB0aGUgc29uIG9mIEhpcHBvbmljdXM7ICBzbyBJIGFza2VkIGhpbeKAlGZvciBoZSBoYXMgdHdvIHNvbnPigJTigJxDYWxsaWFzLOKAnSBzYWlkIEksIOKAnGlmIHlvdXIgdHdvIHNvbnMgaGFkIGhhcHBlbmVkIHRvIGJlIHR3byBjb2x0cyBvciB0d28gY2FsdmVzLCB3ZSBzaG91bGQgYmUgYWJsZSB0byBnZXQgYW5kIGhpcmUgZm9yIHRoZW0gYW4gb3ZlcnNlZXIgd2hvIHdvdWxkIG1ha2UgdGhlbQo8L3RyYW5zbGF0aW9uPg=="
translation['1.20.20b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMGIiIHVuaXQ9InNlY3Rpb24iIC8+ZXhjZWxsZW50IGluIHRoZSBraW5kIG9mIGV4Y2VsbGVuY2UgcHJvcGVyIHRvIHRoZW07ICBhbmQgaGUgd291bGQgYmUgYSBob3JzZS10cmFpbmVyIG9yIGEgaHVzYmFuZG1hbjsgIGJ1dCBub3csIHNpbmNlIHRoZXkgYXJlIHR3byBodW1hbiBiZWluZ3MsIHdob20gaGF2ZSB5b3UgaW4gbWluZCB0byBnZXQgYXMgb3ZlcnNlZXI/ICBXaG8gaGFzIGtub3dsZWRnZSBvZiB0aGF0IGtpbmQgb2YgZXhjZWxsZW5jZSwgdGhhdCBvZiBhIG1hbiBhbmQgYSBjaXRpemVuPyAgRm9yIEkgdGhpbmsgeW91IGhhdmUgbG9va2VkIGludG8gdGhlIG1hdHRlciwgYmVjYXVzZSB5b3UgaGF2ZSB0aGUgc29ucy4gIElzIHRoZXJlIGFueW9uZSzigJ0gc2FpZCBJLCDigJxvciBub3Q/4oCdICDigJxDZXJ0YWlubHks4oCdIHNhaWQgaGUuICDigJxXaG8s4oCdIHNhaWQgSSwg4oCcYW5kIHdoZXJlIGZyb20sIGFuZCB3aGF0IGlzIGhpcyBwcmljZSBmb3IgaGlzIHRlYWNoaW5nP+KAnSAg4oCcRXZlbnVzLOKAnSBoZSBzYWlkLCDigJxTb2NyYXRlcywgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTAyMyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMDIzIj5QYXJvczwvcGxhY2VOYW1lPiwgZml2ZSBtaW5hZS7igJ0gIEFuZCBJIGNhbGxlZCBFdmVudXMgYmxlc3NlZCwKPC90cmFuc2xhdGlvbj4="
translation['1.20.20c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMGMiIHVuaXQ9InNlY3Rpb24iIC8+aWYgaGUgcmVhbGx5IGhhZCB0aGlzIGFydCBhbmQgdGF1Z2h0IHNvIHJlYXNvbmFibHkuICBJIG15c2VsZiBzaG91bGQgYmUgdmFpbiBhbmQgcHV0IG9uIGFpcnMsIGlmIEkgdW5kZXJzdG9vZCB0aGVzZSB0aGluZ3M7ICBidXQgSSBkbyBub3QgdW5kZXJzdGFuZCB0aGVtLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgcGVyaGFwcyBzb21lb25lIG1pZ2h0IHJlam9pbjogIOKAnEJ1dCwgU29jcmF0ZXMsIHdoYXQgaXMgdGhlIHRyb3VibGUgYWJvdXQgeW91PyAgV2hlbmNlIGhhdmUgdGhlc2UgcHJlanVkaWNlcyBhZ2FpbnN0IHlvdSBhcmlzZW4/ICBGb3IgY2VydGFpbmx5IHRoaXMgZ3JlYXQgcmVwb3J0IGFuZCB0YWxrIGhhcyBub3QgYXJpc2VuIHdoaWxlIHlvdSB3ZXJlIGRvaW5nIG5vdGhpbmcgbW9yZSBvdXQgb2YgdGhlIHdheSB0aGFuIHRoZSByZXN0LCB1bmxlc3MgeW91IHdlcmUgZG9pbmcgc29tZXRoaW5nIG90aGVyIHRoYW4gbW9zdCBwZW9wbGU7ICBzbyB0ZWxsIHVzCjwvdHJhbnNsYXRpb24+"
translation['1.20.20d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMGQiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCBpdCBpcywgdGhhdCB3ZSBtYXkgbm90IGFjdCB1bmFkdmlzZWRseSBpbiB5b3VyIGNhc2Uu4oCdICBUaGUgbWFuIHdobyBzYXlzIHRoaXMgc2VlbXMgdG8gbWUgdG8gYmUgcmlnaHQsIGFuZCBJIHdpbGwgdHJ5IHRvIHNob3cgeW91IHdoYXQgaXQgaXMgdGhhdCBoYXMgYnJvdWdodCBhYm91dCBteSByZXB1dGF0aW9uIGFuZCBhcm91c2VkIHRoZSBwcmVqdWRpY2UgYWdhaW5zdCBtZS4gIFNvIGxpc3Rlbi4gIEFuZCBwZXJoYXBzIEkgc2hhbGwgc2VlbSB0byBzb21lIG9mIHlvdSB0byBiZSBqb2tpbmc7ICBiZSBhc3N1cmVkLCBob3dldmVyLCBJIHNoYWxsIHNwZWFrIHBlcmZlY3QgdHJ1dGggdG8geW91LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZmFjdCBpcywgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhhdCBJIGhhdmUgYWNxdWlyZWQgdGhpcyByZXB1dGF0aW9uIG9uIGFjY291bnQgb2Ygbm90aGluZyBlbHNlIHRoYW4gYSBzb3J0IG9mIHdpc2RvbS4gIFdoYXQga2luZCBvZiB3aXNkb20gaXMgdGhpcz8gIEp1c3QgdGhhdCB3aGljaCBpcyBwZXJoYXBzIGh1bWFuIHdpc2RvbS4gIEZvciBwZXJoYXBzIEkgcmVhbGx5IGFtIHdpc2UgaW4gdGhpcyB3aXNkb207ICBhbmQgdGhlc2UgbWVuLCBwZXJoYXBzLAo8L3RyYW5zbGF0aW9uPg=="
translation['1.20.20e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMGUiIHVuaXQ9InNlY3Rpb24iIC8+b2Ygd2hvbSBJIHdhcyBqdXN0IHNwZWFraW5nLCBtaWdodCBiZSB3aXNlIGluIHNvbWUgd2lzZG9tIGdyZWF0ZXIgdGhhbiBodW1hbiwgb3IgSSBkb24ndCBrbm93IHdoYXQgdG8gc2F5OyAgZm9yIEkgZG8gbm90IHVuZGVyc3RhbmQgaXQsIGFuZCB3aG9ldmVyIHNheXMgSSBkbywgaXMgbHlpbmcgYW5kIHNwZWFraW5nIHRvIGFyb3VzZSBwcmVqdWRpY2UgYWdhaW5zdCBtZS4gIEFuZCwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgZG8gbm90IGludGVycnVwdCBtZSB3aXRoIG5vaXNlLCBldmVuIGlmIEkgc2VlbSB0byB5b3UgdG8gYmUgYm9hc3Rpbmc7ICBmb3IgdGhlIHdvcmQgd2hpY2ggSSBzcGVhayBpcyBub3QgbWluZSwgYnV0IHRoZSBzcGVha2VyIHRvIHdob20gSSBzaGFsbCByZWZlciBpdCBpcyBhIHBlcnNvbiBvZiB3ZWlnaHQuICBGb3Igb2YgbXkgd2lzZG9t4oCUaWYgaXQgaXMgd2lzZG9tIGF0IGFsbOKAlGFuZCBvZiBpdHMgbmF0dXJlLCBJIHdpbGwgb2ZmZXIgeW91IHRoZSBnb2Qgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxEZWxwaGkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERlbHBoaSI+RGVscGhpPC9wbGFjZU5hbWU+IGFzIGEgd2l0bmVzcy4gIFlvdSBrbm93IENoYWVyZXBob24sIEkgZmFuY3kuIAo8L3RyYW5zbGF0aW9uPg=="
translation['1.21.21a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjFhIiB1bml0PSJzZWN0aW9uIiAvPkhlIHdhcyBteSBjb21yYWRlIGZyb20gYSB5b3V0aCBhbmQgdGhlIGNvbXJhZGUgb2YgeW91ciBkZW1vY3JhdGljIHBhcnR5LCBhbmQgc2hhcmVkIGluIHRoZSByZWNlbnQgZXhpbGUgYW5kIGNhbWUgYmFjayB3aXRoIHlvdS4gIEFuZCB5b3Uga25vdyB0aGUga2luZCBvZiBtYW4gQ2hhZXJlcGhvbiB3YXMsIGhvdyBpbXBldHVvdXMgaW4gd2hhdGV2ZXIgaGUgdW5kZXJ0b29rLiAgV2VsbCwgb25jZSBoZSB3ZW50IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVscGhpIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxEZWxwaGkiPkRlbHBoaTwvcGxhY2VOYW1lPiBhbmQgbWFkZSBzbyBib2xkIGFzIHRvIGFzayB0aGUgb3JhY2xlIHRoaXMgcXVlc3Rpb247ICBhbmQsIGdlbnRsZW1lbiwgZG9uJ3QgbWFrZSBhIGRpc3R1cmJhbmNlIGF0IHdoYXQgSSBzYXk7ICBmb3IgaGUgYXNrZWQgaWYgdGhlcmUgd2VyZSBhbnlvbmUgd2lzZXIgdGhhbiBJLiAgTm93IHRoZSBQeXRoaWEgcmVwbGllZCB0aGF0IHRoZXJlIHdhcyBubyBvbmUgd2lzZXIuICBBbmQgYWJvdXQgdGhlc2UgdGhpbmdzIGhpcyBicm90aGVyIGhlcmUgd2lsbCBiZWFyIHlvdSB3aXRuZXNzLCBzaW5jZSBDaGFlcmVwaG9uIGlzIGRlYWQuCjwvdHJhbnNsYXRpb24+"
translation['1.21.21b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMWIiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCBzZWUgd2h5IEkgc2F5IHRoZXNlIHRoaW5nczsgIGZvciBJIGFtIGdvaW5nIHRvIHRlbGwgeW91IHdoZW5jZSB0aGUgcHJlanVkaWNlIGFnYWluc3QgbWUgaGFzIGFyaXNlbi4gIEZvciB3aGVuIEkgaGVhcmQgdGhpcywgSSB0aG91Z2h0IHRvIG15c2VsZjogIOKAnFdoYXQgaW4gdGhlIHdvcmxkIGRvZXMgdGhlIGdvZCBtZWFuLCBhbmQgd2hhdCByaWRkbGUgaXMgaGUgcHJvcG91bmRpbmc/ICBGb3IgSSBhbSBjb25zY2lvdXMgdGhhdCBJIGFtIG5vdCB3aXNlIGVpdGhlciBtdWNoIG9yIGxpdHRsZS4gIFdoYXQgdGhlbiBkb2VzIGhlIG1lYW4gYnkgZGVjbGFyaW5nIHRoYXQgSSBhbSB0aGUgd2lzZXN0PyAgSGUgY2VydGFpbmx5IGNhbm5vdCBiZSBseWluZywgZm9yIHRoYXQgaXMgbm90IHBvc3NpYmxlIGZvciBoaW0u4oCdICBBbmQgZm9yIGEgbG9uZyB0aW1lIEkgd2FzIGF0IGEgbG9zcyBhcyB0byB3aGF0IGhlIG1lYW50OyAgdGhlbiB3aXRoIGdyZWF0IHJlbHVjdGFuY2UgSSBwcm9jZWVkZWQgdG8gaW52ZXN0aWdhdGUgaGltIHNvbWV3aGF0IGFzIGZvbGxvd3MuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkkgd2VudCB0byBvbmUgb2YgdGhvc2Ugd2hvIGhhZCBhIHJlcHV0YXRpb24gZm9yIHdpc2RvbSwKPC90cmFuc2xhdGlvbj4="
translation['1.21.21c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMWMiIHVuaXQ9InNlY3Rpb24iIC8+dGhpbmtpbmcgdGhhdCB0aGVyZSwgaWYgYW55d2hlcmUsIEkgc2hvdWxkIHByb3ZlIHRoZSB1dHRlcmFuY2Ugd3JvbmcgYW5kIHNob3VsZCBzaG93IHRoZSBvcmFjbGUg4oCcVGhpcyBtYW4gaXMgd2lzZXIgdGhhbiBJLCBidXQgeW91IHNhaWQgSSB3YXMgd2lzZXN0LuKAnSAgU28gZXhhbWluaW5nIHRoaXMgbWFu4oCUZm9yIEkgbmVlZCBub3QgY2FsbCBoaW0gYnkgbmFtZSwgYnV0IGl0IHdhcyBvbmUgb2YgdGhlIHB1YmxpYyBtZW4gd2l0aCByZWdhcmQgdG8gd2hvbSBJIGhhZCB0aGlzIGtpbmQgb2YgZXhwZXJpZW5jZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPuKAlGFuZCBjb252ZXJzaW5nIHdpdGggaGltLCB0aGlzIG1hbiBzZWVtZWQgdG8gbWUgdG8gc2VlbSB0byBiZSB3aXNlIHRvIG1hbnkgb3RoZXIgcGVvcGxlIGFuZCBlc3BlY2lhbGx5IHRvIGhpbXNlbGYsIGJ1dCBub3QgdG8gYmUgc287ICBhbmQgdGhlbiBJIHRyaWVkIHRvIHNob3cgaGltIHRoYXQgaGUgdGhvdWdodAo8L3RyYW5zbGF0aW9uPg=="
translation['1.21.21d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMWQiIHVuaXQ9InNlY3Rpb24iIC8+aGUgd2FzIHdpc2UsIGJ1dCB3YXMgbm90LiAgQXMgYSByZXN1bHQsIEkgYmVjYW1lIGhhdGVmdWwgdG8gaGltIGFuZCB0byBtYW55IG9mIHRob3NlIHByZXNlbnQ7ICBhbmQgc28sIGFzIEkgd2VudCBhd2F5LCBJIHRob3VnaHQgdG8gbXlzZWxmLCDigJxJIGFtIHdpc2VyIHRoYW4gdGhpcyBtYW47ICBmb3IgbmVpdGhlciBvZiB1cyByZWFsbHkga25vd3MgYW55dGhpbmcgZmluZSBhbmQgZ29vZCwgYnV0IHRoaXMgbWFuIHRoaW5rcyBoZSBrbm93cyBzb21ldGhpbmcgd2hlbiBoZSBkb2VzIG5vdCwgd2hlcmVhcyBJLCBhcyBJIGRvIG5vdCBrbm93IGFueXRoaW5nLCBkbyBub3QgdGhpbmsgSSBkbyBlaXRoZXIuICBJIHNlZW0sIHRoZW4sIGluIGp1c3QgdGhpcyBsaXR0bGUgdGhpbmcgdG8gYmUgd2lzZXIgdGhhbiB0aGlzIG1hbiBhdCBhbnkgcmF0ZSwgdGhhdCB3aGF0IEkgZG8gbm90IGtub3cgSSBkbyBub3QgdGhpbmsgSSBrbm93IGVpdGhlci7igJ0gIEZyb20gaGltIEkgd2VudCB0byBhbm90aGVyIG9mIHRob3NlIHdobyB3ZXJlIHJlcHV0ZWQKPC90cmFuc2xhdGlvbj4="
translation['1.21.21e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMWUiIHVuaXQ9InNlY3Rpb24iIC8+dG8gYmUgd2lzZXIgdGhhbiBoZSwgYW5kIHRoZXNlIHNhbWUgdGhpbmdzIHNlZW1lZCB0byBtZSB0byBiZSB0cnVlOyAgYW5kIHRoZXJlIEkgYmVjYW1lIGhhdGVmdWwgYm90aCB0byBoaW0gYW5kIHRvIG1hbnkgb3RoZXJzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZW4gSSB3ZW50IG9uIGZyb20gb25lIHRvIGFub3RoZXIsIHBlcmNlaXZpbmcgdGhhdCBJIHdhcyBoYXRlZCwgYW5kIGdyaWV2aW5nIGFuZCBmZWFyaW5nLCBidXQgbmV2ZXJ0aGVsZXNzIEkgdGhvdWdodCBJIG11c3QgY29uc2lkZXIgdGhlIGdvZCdzIGJ1c2luZXNzIG9mIHRoZSBoaWdoZXN0IGltcG9ydGFuY2UuICBTbyBJIGhhZCB0byBnbywgaW52ZXN0aWdhdGluZyB0aGUgbWVhbmluZyBvZiB0aGUgb3JhY2xlLCB0byBhbGwgdGhvc2Ugd2hvIHdlcmUgcmVwdXRlZCB0byBrbm93IGFueXRoaW5nLiAgQW5kIGJ5IHRoZSBEb2csIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gCjwvdHJhbnNsYXRpb24+"
translation['1.22.22a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjJhIiB1bml0PSJzZWN0aW9uIiAvPuKAlGZvciBJIG11c3Qgc3BlYWsgdGhlIHRydXRoIHRvIHlvdeKAlHRoaXMsIEkgZG8gZGVjbGFyZSwgd2FzIG15IGV4cGVyaWVuY2U6ICB0aG9zZSB3aG8gaGFkIHRoZSBtb3N0IHJlcHV0YXRpb24gc2VlbWVkIHRvIG1lIHRvIGJlIGFsbW9zdCB0aGUgbW9zdCBkZWZpY2llbnQsIGFzIEkgaW52ZXN0aWdhdGVkIGF0IHRoZSBnb2QncyBiZWhlc3QsIGFuZCBvdGhlcnMgd2hvIHdlcmUgb2YgbGVzcyByZXB1dGUgc2VlbWVkIHRvIGJlIHN1cGVyaW9yIG1lbiBpbiB0aGUgbWF0dGVyIG9mIGJlaW5nIHNlbnNpYmxlLiAgU28gSSBtdXN0IHJlbGF0ZSB0byB5b3UgbXkgd2FuZGVyaW5nIGFzIEkgcGVyZm9ybWVkIG15IEhlcmN1bGVhbiBsYWJvcnMsIHNvIHRvIHNwZWFrLCBpbiBvcmRlciB0aGF0IHRoZSBvcmFjbGUgbWlnaHQgYmUgcHJvdmVkIHRvIGJlIGlycmVmdXRhYmxlLiAgRm9yIGFmdGVyIHRoZSBwdWJsaWMgbWVuIEkgd2VudCB0byB0aGUgcG9ldHMsIHRob3NlIG9mIHRyYWdlZGllcywgYW5kIHRob3NlIG9mIGRpdGh5cmFtYnMsCjwvdHJhbnNsYXRpb24+"
translation['1.22.22b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMmIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoZSByZXN0LCB0aGlua2luZyB0aGF0IHRoZXJlIEkgc2hvdWxkIHByb3ZlIGJ5IGFjdHVhbCB0ZXN0IHRoYXQgSSB3YXMgbGVzcyBsZWFybmVkIHRoYW4gdGhleS4gIFNvLCB0YWtpbmcgdXAgdGhlIHBvZW1zIG9mIHRoZWlycyB0aGF0IHNlZW1lZCB0byBtZSB0byBoYXZlIGJlZW4gbW9zdCBjYXJlZnVsbHkgZWxhYm9yYXRlZCBieSB0aGVtLCBJIGFza2VkIHRoZW0gd2hhdCB0aGV5IG1lYW50LCB0aGF0IEkgbWlnaHQgYXQgdGhlIHNhbWUgdGltZSBsZWFybiBzb21ldGhpbmcgZnJvbSB0aGVtLiAgTm93IEkgYW0gYXNoYW1lZCB0byB0ZWxsIHlvdSB0aGUgdHJ1dGgsIGdlbnRsZW1lbjsgIGJ1dCBzdGlsbCBpdCBtdXN0IGJlIHRvbGQuICBGb3IgdGhlcmUgd2FzIGhhcmRseSBhIG1hbiBwcmVzZW50LCBvbmUgbWlnaHQgc2F5LCB3aG8gd291bGQgbm90IHNwZWFrIGJldHRlciB0aGFuIHRoZXkgYWJvdXQgdGhlIHBvZW1zIHRoZXkgdGhlbXNlbHZlcyBoYWQgY29tcG9zZWQuICBTbyBhZ2FpbiBpbiB0aGUgY2FzZSBvZiB0aGUgcG9ldHMgYWxzbyBJIHByZXNlbnRseSByZWNvZ25pemVkIHRoaXMsCjwvdHJhbnNsYXRpb24+"
translation['1.22.22c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMmMiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCB3aGF0IHRoZXkgY29tcG9zZWQgdGhleSBjb21wb3NlZCBub3QgYnkgd2lzZG9tLCBidXQgYnkgbmF0dXJlIGFuZCBiZWNhdXNlIHRoZXkgd2VyZSBpbnNwaXJlZCwgbGlrZSB0aGUgcHJvcGhldHMgYW5kIGdpdmVycyBvZiBvcmFjbGVzOyAgZm9yIHRoZXNlIGFsc28gc2F5IG1hbnkgZmluZSB0aGluZ3MsIGJ1dCBrbm93IG5vbmUgb2YgdGhlIHRoaW5ncyB0aGV5IHNheTsgIGl0IHdhcyBldmlkZW50IHRvIG1lIHRoYXQgdGhlIHBvZXRzIHRvbyBoYWQgZXhwZXJpZW5jZWQgc29tZXRoaW5nIG9mIHRoaXMgc2FtZSBzb3J0LiAgQW5kIGF0IHRoZSBzYW1lIHRpbWUgSSBwZXJjZWl2ZWQgdGhhdCB0aGV5LCBvbiBhY2NvdW50IG9mIHRoZWlyIHBvZXRyeSwgdGhvdWdodCB0aGF0IHRoZXkgd2VyZSB0aGUgd2lzZXN0IG9mIG1lbiBpbiBvdGhlciB0aGluZ3MgYXMgd2VsbCwgaW4gd2hpY2ggdGhleSB3ZXJlIG5vdC4gIFNvIEkgd2VudCBhd2F5IGZyb20gdGhlbSBhbHNvIHRoaW5raW5nIHRoYXQgSSB3YXMgc3VwZXJpb3IgdG8gdGhlbSBpbiB0aGUgc2FtZSB0aGluZyBpbiB3aGljaCBJIGV4Y2VsbGVkIHRoZSBwdWJsaWMgbWVuLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GaW5hbGx5IHRoZW4gSSB3ZW50IHRvIHRoZSBoYW5kLXdvcmtlcnMuIAo8L3RyYW5zbGF0aW9uPg=="
translation['1.22.22d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMmQiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIEkgd2FzIGNvbnNjaW91cyB0aGF0IEkga25ldyBwcmFjdGljYWxseSBub3RoaW5nLCBidXQgSSBrbmV3IEkgc2hvdWxkIGZpbmQgdGhhdCB0aGV5IGtuZXcgbWFueSBmaW5lIHRoaW5ncy4gIEFuZCBpbiB0aGlzIEkgd2FzIG5vdCBkZWNlaXZlZDsgIHRoZXkgZGlkIGtub3cgd2hhdCBJIGRpZCBub3QsIGFuZCBpbiB0aGlzIHdheSB0aGV5IHdlcmUgd2lzZXIgdGhhbiBJLiAgQnV0LCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB0aGUgZ29vZCBhcnRpc2FucyBhbHNvIHNlZW1lZCB0byBtZSB0byBoYXZlIHRoZSBzYW1lIGZhaWxpbmcgYXMgdGhlIHBvZXRzOyAgYmVjYXVzZSBvZiBwcmFjdGljaW5nIGhpcyBhcnQgd2VsbCwgZWFjaCBvbmUgdGhvdWdodCBoZSB3YXMgdmVyeSB3aXNlIGluIHRoZSBvdGhlciBtb3N0IGltcG9ydGFudCBtYXR0ZXJzLCBhbmQgdGhpcyBmb2xseSBvZiB0aGVpcnMgb2JzY3VyZWQgdGhhdCB3aXNkb20sIHNvIHRoYXQgSSBhc2tlZCBteXNlbGYKPC90cmFuc2xhdGlvbj4="
translation['1.22.22e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMmUiIHVuaXQ9InNlY3Rpb24iIC8+aW4gYmVoYWxmIG9mIHRoZSBvcmFjbGUgd2hldGhlciBJIHNob3VsZCBwcmVmZXIgdG8gYmUgYXMgSSBhbSwgbmVpdGhlciB3aXNlIGluIHRoZWlyIHdpc2RvbSBub3IgZm9vbGlzaCBpbiB0aGVpciBmb2xseSwgb3IgdG8gYmUgaW4gYm90aCByZXNwZWN0cyBhcyB0aGV5IGFyZS4gIEkgcmVwbGllZCB0aGVuIHRvIG15c2VsZiBhbmQgdG8gdGhlIG9yYWNsZSB0aGF0IGl0IHdhcyBiZXR0ZXIgZm9yIG1lIHRvIGJlIGFzIEkgYW0uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBmcm9tIHRoaXMgaW52ZXN0aWdhdGlvbiwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwKPC90cmFuc2xhdGlvbj4="
translation['1.23.23a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjNhIiB1bml0PSJzZWN0aW9uIiAvPm1hbnkgZW5taXRpZXMgaGF2ZSBhcmlzZW4gYWdhaW5zdCBtZSwgYW5kIHN1Y2ggYXMgYXJlIG1vc3QgaGFyc2ggYW5kIGdyaWV2b3VzLCBzbyB0aGF0IG1hbnkgcHJlanVkaWNlcyBoYXZlIHJlc3VsdGVkIGZyb20gdGhlbSBhbmQgSSBhbSBjYWxsZWQgYSB3aXNlIG1hbi4gIEZvciBvbiBlYWNoIG9jY2FzaW9uIHRob3NlIHdobyBhcmUgcHJlc2VudCB0aGluayBJIGFtIHdpc2UgaW4gdGhlIG1hdHRlcnMgaW4gd2hpY2ggSSBjb25mdXRlIHNvbWVvbmUgZWxzZTsgIGJ1dCB0aGUgZmFjdCBpcywgZ2VudGxlbWVuLCBpdCBpcyBsaWtlbHkgdGhhdCB0aGUgZ29kIGlzIHJlYWxseSB3aXNlIGFuZCBieSBoaXMgb3JhY2xlIG1lYW5zIHRoaXM6ICDigJxIdW1hbiB3aXNkb20gaXMgb2YgbGl0dGxlIG9yIG5vIHZhbHVlLuKAnSBBbmQgaXQgYXBwZWFycyB0aGF0IGhlIGRvZXMgbm90IHJlYWxseSBzYXkgdGhpcyBvZiBTb2NyYXRlcywgYnV0IG1lcmVseSB1c2VzIG15IG5hbWUsCjwvdHJhbnNsYXRpb24+"
translation['1.23.23b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyM2IiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIG1ha2VzIG1lIGFuIGV4YW1wbGUsIGFzIGlmIGhlIHdlcmUgdG8gc2F5OiAg4oCcVGhpcyBvbmUgb2YgeW91LCBPIGh1bWFuIGJlaW5ncywgaXMgd2lzZXN0LCB3aG8sIGxpa2UgU29jcmF0ZXMsIHJlY29nbml6ZXMgdGhhdCBoZSBpcyBpbiB0cnV0aCBvZiBubyBhY2NvdW50IGluIHJlc3BlY3QgdG8gd2lzZG9tLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZWZvcmUgSSBhbSBzdGlsbCBldmVuIG5vdyBnb2luZyBhYm91dCBhbmQgc2VhcmNoaW5nIGFuZCBpbnZlc3RpZ2F0aW5nIGF0IHRoZSBnb2QncyBiZWhlc3QgYW55b25lLCB3aGV0aGVyIGNpdGl6ZW4gb3IgZm9yZWlnbmVyLCB3aG8gSSB0aGluayBpcyB3aXNlOyAgYW5kIHdoZW4gaGUgZG9lcyBub3Qgc2VlbSBzbyB0byBtZSwgSSBnaXZlIGFpZCB0byB0aGUgZ29kIGFuZCBzaG93IHRoYXQgaGUgaXMgbm90IHdpc2UuICBBbmQgYnkgcmVhc29uIG9mIHRoaXMgb2NjdXBhdGlvbiBJIGhhdmUgbm8gbGVpc3VyZSB0byBhdHRlbmQgdG8gYW55IG9mIHRoZSBhZmZhaXJzIG9mIHRoZSBzdGF0ZSB3b3J0aCBtZW50aW9uaW5nLCBvciBvZiBteSBvd24sIGJ1dCBhbSBpbiB2YXN0IHBvdmVydHkKPC90cmFuc2xhdGlvbj4="
translation['1.23.23c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyM2MiIHVuaXQ9InNlY3Rpb24iIC8+b24gYWNjb3VudCBvZiBteSBzZXJ2aWNlIHRvIHRoZSBnb2QuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBpbiBhZGRpdGlvbiB0byB0aGVzZSB0aGluZ3MsIHRoZSB5b3VuZyBtZW4gd2hvIGhhdmUgdGhlIG1vc3QgbGVpc3VyZSwgdGhlIHNvbnMgb2YgdGhlIHJpY2hlc3QgbWVuLCBhY2NvbXBhbnkgbWUgb2YgdGhlaXIgb3duIGFjY29yZCwgZmluZCBwbGVhc3VyZSBpbiBoZWFyaW5nIHBlb3BsZSBiZWluZyBleGFtaW5lZCwgYW5kIG9mdGVuIGltaXRhdGUgbWUgdGhlbXNlbHZlcywgYW5kIHRoZW4gdGhleSB1bmRlcnRha2UgdG8gZXhhbWluZSBvdGhlcnM7ICBhbmQgdGhlbiwgSSBmYW5jeSwgdGhleSBmaW5kIGEgZ3JlYXQgcGxlbnR5IG9mIHBlb3BsZSB3aG8gdGhpbmsgdGhleSBrbm93IHNvbWV0aGluZywgYnV0IGtub3cgbGl0dGxlIG9yIG5vdGhpbmcuICBBcyBhIHJlc3VsdCwgdGhlcmVmb3JlLCB0aG9zZSB3aG8gYXJlIGV4YW1pbmVkIGJ5IHRoZW0gYXJlIGFuZ3J5IHdpdGggbWUsIGluc3RlYWQgb2YgYmVpbmcgYW5ncnkgd2l0aCB0aGVtc2VsdmVzLCBhbmQgc2F5IHRoYXQg4oCcU29jcmF0ZXMgaXMgYSBtb3N0IGFib21pbmFibGUgcGVyc29uCjwvdHJhbnNsYXRpb24+"
translation['1.23.23d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyM2QiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGlzIGNvcnJ1cHRpbmcgdGhlIHlvdXRoLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgd2hlbiBhbnlvbmUgYXNrcyB0aGVtIOKAnGJ5IGRvaW5nIG9yIHRlYWNoaW5nIHdoYXQ/4oCdIHRoZXkgaGF2ZSBub3RoaW5nIHRvIHNheSwgYnV0IHRoZXkgZG8gbm90IGtub3csIGFuZCB0aGF0IHRoZXkgbWF5IG5vdCBzZWVtIHRvIGJlIGF0IGEgbG9zcyB0aGV5IHNheSB0aGVzZSB0aGluZ3MgdGhhdCBhcmUgaGFuZHkgdG8gc2F5IGFnYWluc3QgYWxsIHRoZSBwaGlsb3NvcGhlcnMsIOKAnHRoZSB0aGluZ3MgaW4gdGhlIGFpciBhbmQgdGhlIHRoaW5ncyBiZW5lYXRoIHRoZSBlYXJ0aOKAnSBhbmQg4oCcbm90IHRvIGJlbGlldmUgaW4gdGhlIGdvZHPigJ0gYW5kIOKAnHRvIG1ha2UgdGhlIHdlYWtlciBhcmd1bWVudCB0aGUgc3Ryb25nZXIu4oCdICBGb3IgdGhleSB3b3VsZCBub3QsIEkgZmFuY3ksIGNhcmUgdG8gc2F5IHRoZSB0cnV0aCwgdGhhdCBpdCBpcyBiZWluZyBtYWRlIHZlcnkgY2xlYXIgdGhhdCB0aGV5IHByZXRlbmQgdG8ga25vdywgYnV0IGtub3cgbm90aGluZy4gCjwvdHJhbnNsYXRpb24+"
translation['1.23.23e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyM2UiIHVuaXQ9InNlY3Rpb24iIC8+U2luY2UsIHRoZW4sIHRoZXkgYXJlIGplYWxvdXMgb2YgdGhlaXIgaG9ub3IgYW5kIGVuZXJnZXRpYyBhbmQgbnVtZXJvdXMgYW5kIHNwZWFrIGNvbmNlcnRlZGx5IGFuZCBwZXJzdWFzaXZlbHkgYWJvdXQgbWUsIHRoZXkgaGF2ZSBmaWxsZWQgeW91ciBlYXJzIGJvdGggbG9uZyBhZ28gYW5kIG5vdyB3aXRoIHZlaGVtZW50IHNsYW5kZXJzLiAgRnJvbSBhbW9uZyB0aGVtIE1lbGV0dXMgYXR0YWNrZWQgbWUsIGFuZCBBbnl0dXMgYW5kIEx5Y29uLCBNZWxldHVzIGFuZ2VyZWQgb24gYWNjb3VudCBvZiB0aGUgcG9ldHMsIGFuZCBBbnl0dXMgb24gYWNjb3VudCBvZiB0aGUgYXJ0aXNhbnMgYW5kIHRoZSBwdWJsaWMgbWVuLAo8L3RyYW5zbGF0aW9uPg=="
translation['1.24.24a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjRhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBMeWNvbiBvbiBhY2NvdW50IG9mIHRoZSBvcmF0b3JzOyAgc28gdGhhdCwgYXMgSSBzYWlkIGluIHRoZSBiZWdpbm5pbmcsIEkgc2hvdWxkIGJlIHN1cnByaXNlZCBpZiBJIHdlcmUgYWJsZSB0byByZW1vdmUgdGhpcyBwcmVqdWRpY2UgZnJvbSB5b3UgaW4gc28gc2hvcnQgYSB0aW1lIHdoZW4gaXQgaGFzIGdyb3duIHNvIGdyZWF0LiAgVGhlcmUgeW91IGhhdmUgdGhlIHRydXRoLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBhbmQgSSBzcGVhayB3aXRob3V0IGhpZGluZyBhbnl0aGluZyBmcm9tIHlvdSwgZ3JlYXQgb3Igc21hbGwgb3IgcHJldmFyaWNhdGluZy4gIEFuZCB5ZXQgSSBrbm93IHByZXR0eSB3ZWxsIHRoYXQgSSBhbSBtYWtpbmcgbXlzZWxmIGhhdGVkIGJ5IGp1c3QgdGhhdCBjb25kdWN0OyAgd2hpY2ggaXMgYWxzbyBhIHByb29mIHRoYXQgSSBhbSBzcGVha2luZyB0aGUgdHJ1dGggYW5kIHRoYXQgdGhpcyBpcyB0aGUgcHJlanVkaWNlIGFnYWluc3QgbWUgYW5kIHRoZXNlIGFyZSBpdHMgY2F1c2VzLiAgQW5kIHdoZXRoZXIgeW91IGludmVzdGlnYXRlCjwvdHJhbnNsYXRpb24+"
translation['1.24.24b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNGIiIHVuaXQ9InNlY3Rpb24iIC8+dGhpcyBub3cgb3IgaGVyZWFmdGVyLCB5b3Ugd2lsbCBmaW5kIHRoYXQgaXQgaXMgc28uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBzbyBmYXIgYXMgdGhlIGFjY3VzYXRpb25zIGFyZSBjb25jZXJuZWQgd2hpY2ggbXkgZmlyc3QgYWNjdXNlcnMgbWFkZSBhZ2FpbnN0IG1lLCB0aGlzIGlzIGEgc3VmZmljaWVudCBkZWZlbmNlIGJlZm9yZSB5b3U7ICBidXQgYWdhaW5zdCBNZWxldHVzLCB0aGUgZ29vZCBhbmQgcGF0cmlvdGljLCBhcyBoZSBzYXlzLCBhbmQgdGhlIGxhdGVyIG9uZXMsIEkgd2lsbCB0cnkgdG8gZGVmZW5kIG15c2VsZiBuZXh0LiAgU28gb25jZSBtb3JlLCBhcyBpZiB0aGVzZSB3ZXJlIGFub3RoZXIgc2V0IG9mIGFjY3VzZXJzLCBsZXQgdXMgdGFrZSB1cCBpbiB0dXJuIHRoZWlyIHN3b3JuIHN0YXRlbWVudC4gIEl0IGlzIGFib3V0IGFzIGZvbGxvd3M6ICBpdCBzdGF0ZXMgdGhhdCBTb2NyYXRlcyBpcyBhIHdyb25nZG9lciBiZWNhdXNlIGhlIGNvcnJ1cHRzIHRoZSB5b3V0aCBhbmQgZG9lcyBub3QgYmVsaWV2ZSBpbiB0aGUgZ29kcyB0aGUgc3RhdGUgYmVsaWV2ZXMgaW4sIGJ1dCBpbiBvdGhlcgo8L3RyYW5zbGF0aW9uPg=="
translation['1.24.24c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNGMiIHVuaXQ9InNlY3Rpb24iIC8+bmV3IHNwaXJpdHVhbCBiZWluZ3MuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlN1Y2ggaXMgdGhlIGFjY3VzYXRpb24uICBCdXQgbGV0IHVzIGV4YW1pbmUgZWFjaCBwb2ludCBvZiB0aGlzIGFjY3VzYXRpb24uICBIZSBzYXlzIEkgYW0gYSB3cm9uZ2RvZXIgYmVjYXVzZSBJIGNvcnJ1cHQgdGhlIHlvdXRoLiAgQnV0IEksIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHNheSBNZWxldHVzIGlzIGEgd3Jvbmdkb2VyLCBiZWNhdXNlIGhlIGpva2VzIGluIGVhcm5lc3QsIGxpZ2h0bHkgaW52b2x2aW5nIHBlb3BsZSBpbiBhIGxhd3N1aXQsIHByZXRlbmRpbmcgdG8gYmUgemVhbG91cyBhbmQgY29uY2VybmVkIGFib3V0IHRoaW5ncyBvciB3aGljaCBoZSBuZXZlciBjYXJlZCBhdCBhbGwuICBBbmQgdGhhdCB0aGlzIGlzIHNvIEkgd2lsbCB0cnkgdG8gbWFrZSBwbGFpbiB0byB5b3UgYWxzby48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Q29tZSBoZXJlLCBNZWxldHVzLCB0ZWxsIG1lOiAgZG9uJ3QgeW91IGNvbnNpZGVyIGl0CjwvdHJhbnNsYXRpb24+"
translation['1.24.24d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNGQiIHVuaXQ9InNlY3Rpb24iIC8+b2YgZ3JlYXQgaW1wb3J0YW5jZSB0aGF0IHRoZSB5b3V0aCBiZSBhcyBnb29kIGFzIHBvc3NpYmxlPyAg4oCcSSBkby7igJ0gIENvbWUgbm93LCB0ZWxsIHRoZXNlIGdlbnRsZW1lbiB3aG8gbWFrZXMgdGhlbSBiZXR0ZXI/ICBGb3IgaXQgaXMgZXZpZGVudCB0aGF0IHlvdSBrbm93LCBzaW5jZSB5b3UgY2FyZSBhYm91dCBpdC4gIEZvciB5b3UgaGF2ZSBmb3VuZCB0aGUgb25lIHdobyBjb3JydXB0cyB0aGVtLCBhcyB5b3Ugc2F5LCBhbmQgeW91IGJyaW5nIG1lIGJlZm9yZSB0aGVzZSBnZW50bGVtZW4gYW5kIGFjY3VzZSBtZTsgIGFuZCBub3csIGNvbWUsIHRlbGwgd2hvIG1ha2VzIHRoZW0gYmV0dGVyIGFuZCBpbmZvcm0gdGhlbSB3aG8gaGUgaXMuICBEbyB5b3Ugc2VlLCBNZWxldHVzLCB0aGF0IHlvdSBhcmUgc2lsZW50IGFuZCBjYW5ub3QgdGVsbD8gIEFuZCB5ZXQgZG9lcyBpdCBub3Qgc2VlbSB0byB5b3UgZGlzZ3JhY2VmdWwgYW5kIGEgc3VmZmljaWVudCBwcm9vZiBvZiB3aGF0IEkgc2F5LCB0aGF0IHlvdSBoYXZlIG5ldmVyIGNhcmVkIGFib3V0IGl0PyAgQnV0IHRlbGwsIG15IGdvb2QgbWFuLCB3aG8KPC90cmFuc2xhdGlvbj4="
translation['1.24.24e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNGUiIHVuaXQ9InNlY3Rpb24iIC8+bWFrZXMgdGhlbSBiZXR0ZXI/ICDigJxUaGUgbGF3cy7igJ0gIEJ1dCB0aGF0IGlzIG5vdCB3aGF0IEkgYXNrLCBtb3N0IGV4Y2VsbGVudCBvbmUsIGJ1dCB3aGF0IG1hbiwgd2hvIGtub3dzIGluIHRoZSBmaXJzdCBwbGFjZSBqdXN0IHRoaXMgdmVyeSB0aGluZywgdGhlIGxhd3MuICDigJxUaGVzZSBtZW4sIFNvY3JhdGVzLCB0aGUganVkZ2VzLuKAnSAgV2hhdCBhcmUgeW91IHNheWluZywgTWVsZXR1cz8gIEFyZSB0aGVzZSBnZW50bGVtZW4gYWJsZSB0byBpbnN0cnVjdCB0aGUgeW91dGgsIGFuZCBkbyB0aGV5IG1ha2UgdGhlbSBiZXR0ZXI/ICDigJxDZXJ0YWlubHku4oCdICBBbGwsIG9yIHNvbWUgb2YgdGhlbSBhbmQgb3RoZXJzIG5vdD8gIOKAnEFsbC7igJ0gIFdlbGwgc2FpZCwgYnkgSGVyYSwgYW5kIHRoaXMgaXMgYSBncmVhdCBwbGVudHkgb2YgaGVscGVycyB5b3Ugc3BlYWsgb2YuICBCdXQgaG93IGFib3V0IHRoaXM/IAo8L3RyYW5zbGF0aW9uPg=="
translation['1.25.25a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjVhIiB1bml0PSJzZWN0aW9uIiAvPkRvIHRoZXNlIGxpc3RlbmVycyBtYWtlIHRoZW0gYmV0dGVyLCBvciBub3Q/ICDigJxUaGVzZSBhbHNvLuKAnSAgQW5kIGhvdyBhYm91dCB0aGUgc2VuYXRvcnM/ICDigJxUaGUgc2VuYXRvcnMgYWxzby7igJ0gIEJ1dCwgTWVsZXR1cywgdGhvc2UgaW4gdGhlIGFzc2VtYmx5LCB0aGUgYXNzZW1ibHltZW4sIGRvbid0IGNvcnJ1cHQgdGhlIHlvdXRoLCBkbyB0aGV5PyAgb3IgZG8gdGhleSBhbHNvIGFsbCBtYWtlIHRoZW0gYmV0dGVyPyAg4oCcVGhleSBhbHNvLuKAnSAgQWxsIHRoZSBBdGhlbmlhbnMsIHRoZW4sIGFzIGl0IHNlZW1zLCBtYWtlIHRoZW0gZXhjZWxsZW50LCBleGNlcHQgbXlzZWxmLCBhbmQgSSBhbG9uZSBjb3JydXB0IHRoZW0uICBJcyB0aGlzIHdoYXQgeW91IG1lYW4/ICDigJxWZXJ5IGRlY2lkZWRseSwgdGhhdCBpcyB3aGF0IEkgbWVhbi7igJ0gIFlvdSBoYXZlIGNvbmRlbW5lZCBtZSB0byBncmVhdCB1bmhhcHBpbmVzcyEgIEJ1dCBhbnN3ZXIgbWU7ICBkb2VzIGl0IHNlZW0gdG8geW91IHRvIGJlIHNvIGluIHRoZSBjYXNlIG9mIGhvcnNlcywgdGhhdCB0aG9zZSB3aG8KPC90cmFuc2xhdGlvbj4="
translation['1.25.25b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNWIiIHVuaXQ9InNlY3Rpb24iIC8+bWFrZSB0aGVtIGJldHRlciBhcmUgYWxsIG1hbmtpbmQsIGFuZCBoZSB3aG8gaW5qdXJlcyB0aGVtIHNvbWUgb25lIHBlcnNvbj8gIE9yLCBxdWl0ZSB0aGUgb3Bwb3NpdGUgb2YgdGhpcywgdGhhdCBoZSB3aG8gaXMgYWJsZSB0byBtYWtlIHRoZW0gYmV0dGVyIGlzIHNvbWUgb25lIHBlcnNvbiwgb3IgdmVyeSBmZXcsIHRoZSBob3JzZS10cmFpbmVycywgd2hlcmVhcyBtb3N0IHBlb3BsZSwgaWYgdGhleSBoYXZlIHRvIGRvIHdpdGggYW5kIHVzZSBob3JzZXMsIGluanVyZSB0aGVtPyAgSXMgaXQgbm90IHNvLCBNZWxldHVzLCBib3RoIGluIHRoZSBjYXNlIG9mIGhvcnNlcyBhbmQgaW4gdGhhdCBvZiBhbGwgb3RoZXIgYW5pbWFscz8gIENlcnRhaW5seSBpdCBpcywgd2hldGhlciB5b3UgYW5kIEFueXR1cyBkZW55IGl0IG9yIGFncmVlOyAgZm9yIGl0IHdvdWxkIGJlIGEgZ3JlYXQgc3RhdGUgb2YgYmxlc3NlZG5lc3MgaW4gdGhlIGNhc2Ugb2YgdGhlIHlvdXRoIGlmIG9uZSBhbG9uZSBjb3JydXB0cyB0aGVtLCBhbmQgdGhlIG90aGVycyBkbyB0aGVtIGdvb2QuICBCdXQsCjwvdHJhbnNsYXRpb24+"
translation['1.25.25c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNWMiIHVuaXQ9InNlY3Rpb24iIC8+TWVsZXR1cywgeW91IHNob3cgY2xlYXJseSBlbm91Z2ggdGhhdCB5b3UgbmV2ZXIgdGhvdWdodCBhYm91dCB0aGUgeW91dGgsIGFuZCB5b3UgZXhoaWJpdCBwbGFpbmx5IHlvdXIgb3duIGNhcmVsZXNzbmVzcywgdGhhdCB5b3UgaGF2ZSBub3QgY2FyZWQgYXQgYWxsIGZvciB0aGUgdGhpbmdzIGFib3V0IHdoaWNoIHlvdSBoYWxlIG1lIGludG8gY291cnQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBiZXNpZGVzLCB0ZWxsIHVzLCBmb3IgaGVhdmVuJ3Mgc2FrZSwgTWVsZXR1cywgaXMgaXQgYmV0dGVyIHRvIGxpdmUgYW1vbmcgZ29vZCBjaXRpemVucywgb3IgYmFkPyAgTXkgZnJpZW5kLCBhbnN3ZXI7ICBmb3IgSSBhbSBub3QgYXNraW5nIGFueXRoaW5nIGhhcmQuICBEbyBub3QgdGhlIGJhZCBkbyBzb21lIGV2aWwgdG8gdGhvc2Ugd2hvIGFyZSB3aXRoIHRoZW0gYXQgYW55IHRpbWUgYW5kIHRoZSBnb29kIHNvbWUgZ29vZD8gIOKAnENlcnRhaW5seS7igJ0gIElzIHRoZXJlIHRoZW4gYW55b25lIHdobwo8L3RyYW5zbGF0aW9uPg=="
translation['1.25.25d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNWQiIHVuaXQ9InNlY3Rpb24iIC8+cHJlZmVycyB0byBiZSBpbmp1cmVkIGJ5IGhpcyBhc3NvY2lhdGVzIHJhdGhlciB0aGFuIGJlbmVmaXRlZD8gIEFuc3dlciwgbXkgZ29vZCBtYW47ICBmb3IgdGhlIGxhdyBvcmRlcnMgeW91IHRvIGFuc3dlci4gIElzIHRoZXJlIGFueW9uZSB3aG8gcHJlZmVycyB0byBiZSBpbmp1cmVkPyAg4oCcT2YgY291cnNlIG5vdC7igJ0gIENvbWUgdGhlbiwgZG8geW91IGhhbGUgbWUgaW4gaGVyZSBvbiB0aGUgZ3JvdW5kIHRoYXQgSSBhbSBjb3JydXB0aW5nIHRoZSB5b3V0aCBhbmQgbWFraW5nIHRoZW0gd29yc2Ugdm9sdW50YXJpbHkgb3IgaW52b2x1bnRhcmlseT8gIOKAnFZvbHVudGFyaWx5IEkgc2F5LuKAnSAgV2hhdCB0aGVuLCBNZWxldHVzPyAgQXJlIHlvdSBhdCB5b3VyIGFnZSBzbyBtdWNoIHdpc2VyIHRoYW4gSSBhdCBteSBhZ2UsIHRoYXQgeW91IGhhdmUgcmVjb2duaXplZCB0aGF0IHRoZSBldmlsIGFsd2F5cyBkbyBzb21lIGV2aWwKPC90cmFuc2xhdGlvbj4="
translation['1.25.25e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNWUiIHVuaXQ9InNlY3Rpb24iIC8+dG8gdGhvc2UgbmVhcmVzdCB0aGVtLCBhbmQgdGhlIGdvb2Qgc29tZSBnb29kOyAgd2hlcmVhcyBJIGhhdmUgcmVhY2hlZCBzdWNoIGEgZGVwdGggb2YgaWdub3JhbmNlIHRoYXQgSSBkbyBub3QgZXZlbiBrbm93IHRoaXMsIHRoYXQgaWYgSSBtYWtlIGFueW9uZSBvZiBteSBhc3NvY2lhdGVzIGJhZCBJIGFtIGluIGRhbmdlciBvZiBnZXR0aW5nIHNvbWUgaGFybSBmcm9tIGhpbSwgc28gdGhhdCBJIGRvIHRoaXMgZ3JlYXQgZXZpbCB2b2x1bnRhcmlseSwgYXMgeW91IHNheT8gIEkgZG9uJ3QgYmVsaWV2ZSB0aGlzLCBNZWxldHVzLCBub3IgZG8gSSB0aGluayBhbnlvbmUgZWxzZSBpbiB0aGUgd29ybGQgZG9lcyEgCjwvdHJhbnNsYXRpb24+"
translation['1.26.26a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjZhIiB1bml0PSJzZWN0aW9uIiAvPmJ1dCBlaXRoZXIgSSBkbyBub3QgY29ycnVwdCB0aGVtLCBvciBpZiBJIGNvcnJ1cHQgdGhlbSwgSSBkbyBpdCBpbnZvbHVudGFyaWx5LCBzbyB0aGF0IHlvdSBhcmUgbHlpbmcgaW4gYm90aCBldmVudHMuICBCdXQgaWYgSSBjb3JydXB0IHRoZW0gaW52b2x1bnRhcmlseSwgZm9yIHN1Y2ggaW52b2x1bnRhcnkgZXJyb3JzIHRoZSBsYXcgaXMgbm90IHRvIGhhbGUgcGVvcGxlIGludG8gY291cnQsIGJ1dCB0byB0YWtlIHRoZW0gYW5kIGluc3RydWN0IGFuZCBhZG1vbmlzaCB0aGVtIGluIHByaXZhdGUuICBGb3IgaXQgaXMgY2xlYXIgdGhhdCBpZiBJIGFtIHRvbGQgYWJvdXQgaXQsIEkgc2hhbGwgc3RvcCBkb2luZyB0aGF0IHdoaWNoIEkgZG8gaW52b2x1bnRhcmlseS4gIEJ1dCB5b3UgYXZvaWRlZCBhc3NvY2lhdGluZyB3aXRoIG1lIGFuZCBpbnN0cnVjdGluZyBtZSwgYW5kIHdlcmUgdW53aWxsaW5nIHRvIGRvIHNvLCBidXQgeW91IGhhbGUgbWUgaW4gaGVyZSwgd2hlcmUgaXQgaXMgdGhlIGxhdyB0byBoYWxlIGluIHRob3NlIHdobyBuZWVkIHB1bmlzaG1lbnQsIG5vdCBpbnN0cnVjdGlvbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGVub3VnaCBvZiB0aGlzLCBmb3IsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHRoaXMgaXMgY2xlYXIsIGFzIEkgc2FpZCwgdGhhdCBNZWxldHVzIG5ldmVyCjwvdHJhbnNsYXRpb24+"
translation['1.26.26b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNmIiIHVuaXQ9InNlY3Rpb24iIC8+Y2FyZWQgbXVjaCBvciBsaXR0bGUgZm9yIHRoZXNlIHRoaW5ncy4gIEJ1dCBuZXZlcnRoZWxlc3MsIHRlbGwgdXMsIGhvdyBkbyB5b3Ugc2F5LCBNZWxldHVzLCB0aGF0IEkgY29ycnVwdCB0aGUgeW91dGg/ICBPciBpcyBpdCBldmlkZW50LCBhY2NvcmRpbmcgdG8gdGhlIGluZGljdG1lbnQgeW91IGJyb3VnaHQsIHRoYXQgaXQgaXMgYnkgdGVhY2hpbmcgdGhlbSBub3QgdG8gYmVsaWV2ZSBpbiB0aGUgZ29kcyB0aGUgc3RhdGUgYmVsaWV2ZXMgaW4sIGJ1dCBpbiBvdGhlciBuZXcgc3Bpcml0dWFsIGJlaW5ncz8gIERvIHlvdSBub3Qgc2F5IHRoYXQgaXQgaXMgYnkgdGVhY2hpbmcgdGhpcyB0aGF0IEkgY29ycnVwdCB0aGVtPyAg4oCcVmVyeSBkZWNpZGVkbHkgdGhhdCBpcyB3aGF0IEkgc2F5LuKAnSAgVGhlbiwgTWVsZXR1cywgZm9yIHRoZSBzYWtlIG9mCjwvdHJhbnNsYXRpb24+"
translation['1.26.26c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNmMiIHVuaXQ9InNlY3Rpb24iIC8+dGhlc2UgdmVyeSBnb2RzIGFib3V0IHdob20gb3VyIHNwZWVjaCBub3cgaXMsIHNwZWFrIHN0aWxsIG1vcmUgY2xlYXJseSBib3RoIHRvIG1lIGFuZCB0byB0aGVzZSBnZW50bGVtZW4uICBGb3IgSSBhbSB1bmFibGUgdG8gdW5kZXJzdGFuZCB3aGV0aGVyIHlvdSBzYXkgdGhhdCBJIHRlYWNoIHRoYXQgdGhlcmUgYXJlIHNvbWUgZ29kcywgYW5kIG15c2VsZiB0aGVuIGJlbGlldmUgdGhhdCB0aGVyZSBhcmUgc29tZSBnb2RzLCBhbmQgYW0gbm90IGFsdG9nZXRoZXIgZ29kbGVzcyBhbmQgYW0gbm90IGEgd3Jvbmdkb2VyIGluIHRoYXQgd2F5LCB0aGF0IHRoZXNlLCBob3dldmVyLCBhcmUgbm90IHRoZSBnb2RzIHdob20gdGhlIHN0YXRlIGJlbGlldmVzIGluLCBidXQgb3RoZXJzLCBhbmQgdGhpcyBpcyB3aGF0IHlvdSBhY2N1c2UgbWUgZm9yLCB0aGF0IEkgYmVsaWV2ZSBpbiBvdGhlcnM7ICBvciB5b3Ugc2F5IHRoYXQgSSBkbyBub3QgbXlzZWxmIGJlbGlldmUgaW4gZ29kcyBhdCBhbGwgYW5kIHRoYXQgSSB0ZWFjaCB0aGlzIHVuYmVsaWVmIHRvIG90aGVyIHBlb3BsZS4gIOKAnFRoYXQgaXMgd2hhdCBJIHNheSwgdGhhdCB5b3UgZG8gbm90IGJlbGlldmUgaW4gZ29kcyBhdCBhbGwu4oCdICBZb3UgYW1hemUgbWUsIE1lbGV0dXMhICBXaHkgZG8geW91IHNheSB0aGlzPyAKPC90cmFuc2xhdGlvbj4="
translation['1.26.26d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNmQiIHVuaXQ9InNlY3Rpb24iIC8+RG8gSSBub3QgZXZlbiBiZWxpZXZlIHRoYXQgdGhlIHN1biBvciB5ZXQgdGhlIG1vb24gYXJlIGdvZHMsIGFzIHRoZSByZXN0IG9mIG1hbmtpbmQgZG8/ICDigJxObywgYnkgWmV1cywganVkZ2VzLCBzaW5jZSBoZSBzYXlzIHRoYXQgdGhlIHN1biBpcyBhIHN0b25lIGFuZCB0aGUgbW9vbiBlYXJ0aC7igJ0gIERvIHlvdSB0aGluayB5b3UgYXJlIGFjY3VzaW5nIEFuYXhhZ29yYXMsIG15IGRlYXIgTWVsZXR1cywgYW5kIGRvIHlvdSBzbyBkZXNwaXNlIHRoZXNlIGdlbnRsZW1lbiBhbmQgdGhpbmsgdGhleSBhcmUgc28gdW52ZXJzZWQgaW4gbGV0dGVycyBhcyBub3QgdG8ga25vdywgdGhhdCB0aGUgYm9va3Mgb2YgQW5heGFnb3JhcyB0aGUgQ2xhem9tZW5pYW4gYXJlIGZ1bGwgb2Ygc3VjaCB1dHRlcmFuY2VzPyAgQW5kIGZvcnNvb3RoIHRoZSB5b3V0aCBsZWFybiB0aGVzZSBkb2N0cmluZXMgZnJvbSBtZSwgd2hpY2ggdGhleSBjYW4gYnV5IHNvbWV0aW1lcwo8L3RyYW5zbGF0aW9uPg=="
translation['1.26.26e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNmUiIHVuaXQ9InNlY3Rpb24iIC8+KGlmIHRoZSBwcmljZSBpcyBoaWdoKSBmb3IgYSBkcmFjaG1hIGluIHRoZSBvcmNoZXN0cmEgYW5kIGxhdWdoIGF0IFNvY3JhdGVzLCBpZiBoZSBwcmV0ZW5kcyB0aGV5IGFyZSBoaXMgb3duLCBlc3BlY2lhbGx5IHdoZW4gdGhleSBhcmUgc28gYWJzdXJkISAgQnV0IGZvciBoZWF2ZW4ncyBzYWtlLCBkbyB5b3UgdGhpbmsgdGhpcyBvZiBtZSwgdGhhdCBJIGRvIG5vdCBiZWxpZXZlIHRoZXJlIGlzIGFueSBnb2Q/ICDigJxObywgYnkgWmV1cywgeW91IGRvbid0LCBub3QgaW4gdGhlIGxlYXN0LuKAnSAgWW91IGNhbm5vdCBiZSBiZWxpZXZlZCwgTWVsZXR1cywgbm90IGV2ZW4sIGFzIGl0IHNlZW1zIHRvIG1lLCBieSB5b3Vyc2VsZi4gIEZvciB0aGlzIG1hbiBhcHBlYXJzIHRvIG1lLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB0byBiZSB2ZXJ5IHZpb2xlbnQgYW5kIHVucmVzdHJhaW5lZCwgYW5kIGFjdHVhbGx5IHRvIGhhdmUgYnJvdWdodCB0aGlzIGluZGljdG1lbnQgaW4gYSBzcGlyaXQgb2YgdmlvbGVuY2UgYW5kIHVucmVzdHJhaW50IGFuZCByYXNobmVzcy4gIEZvciBoZSBzZWVtcywKPC90cmFuc2xhdGlvbj4="
translation['1.27.27a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjdhIiB1bml0PSJzZWN0aW9uIiAvPmFzIGl0IHdlcmUsIGJ5IGNvbXBvc2luZyBhIHB1enpsZSB0byBiZSBtYWtpbmcgYSB0ZXN0OiAg4oCcV2lsbCBTb2NyYXRlcywgdGhlIHdpc2UgbWFuLCByZWNvZ25pemUgdGhhdCBJIGFtIGpva2luZyBhbmQgY29udHJhZGljdGluZyBteXNlbGYsIG9yIHNoYWxsIEkgZGVjZWl2ZSBoaW0gYW5kIHRoZSBvdGhlcnMgd2hvIGhlYXIgbWU/4oCdICBGb3IgaGUgYXBwZWFycyB0byBtZSB0byBjb250cmFkaWN0IGhpbXNlbGYgaW4gaGlzIHNwZWVjaCwgYXMgaWYgaGUgd2VyZSB0byBzYXksIOKAnFNvY3JhdGVzIGlzIGEgd3Jvbmdkb2VyLCBiZWNhdXNlIGhlIGRvZXMgbm90IGJlbGlldmUgaW4gZ29kcywgYnV0IGRvZXMgYmVsaWV2ZSBpbiBnb2RzLuKAnSAgQW5kIHlldCB0aGlzIGlzIHRoZSBjb25kdWN0IG9mIGEgamVzdGVyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Kb2luIG1lLCB0aGVuLCBnZW50bGVtZW4sIGluIGV4YW1pbmluZyBob3cgaGUgYXBwZWFycyB0byBtZSB0byBzYXkgdGhpczsgIGFuZCBkbyB5b3UsIE1lbGV0dXMsIGFuc3dlcjsgCjwvdHJhbnNsYXRpb24+"
translation['1.27.27b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyN2IiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHlvdSwgZ2VudGxlbWVuLCBhcyBJIGFza2VkIHlvdSBpbiB0aGUgYmVnaW5uaW5nLCBwbGVhc2UgYmVhciBpbiBtaW5kIG5vdCB0byBtYWtlIGEgZGlzdHVyYmFuY2UgaWYgSSBjb25kdWN0IG15IGFyZ3VtZW50IGluIG15IGFjY3VzdG9tZWQgbWFubmVyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JcyB0aGVyZSBhbnkgaHVtYW4gYmVpbmcgd2hvIGJlbGlldmVzIHRoYXQgdGhlcmUgYXJlIHRoaW5ncyBwZXJ0YWluaW5nIHRvIGh1bWFuIGJlaW5ncywgYnV0IG5vIGh1bWFuIGJlaW5ncz8gIExldCBoaW0gYW5zd2VyLCBnZW50bGVtZW4sIGFuZCBub3QgbWFrZSBhIGRpc3R1cmJhbmNlIGluIG9uZSB3YXkgb3IgYW5vdGhlci4gIElzIHRoZXJlIGFueW9uZSB3aG8gZG9lcyBub3QgYmVsaWV2ZSBpbiBob3JzZXMsIGJ1dCBkb2VzIGJlbGlldmUgaW4gdGhpbmdzIHBlcnRhaW5pbmcgdG8gaG9yc2VzPyAgb3Igd2hvIGRvZXMgbm90IGJlbGlldmUgdGhhdCBmbHV0ZS1wbGF5ZXJzIGV4aXN0LCBidXQgdGhhdCB0aGluZ3MgcGVydGFpbmluZyB0byBmbHV0ZS1wbGF5ZXJzIGRvPyAgVGhlcmUgaXMgbm90LCBiZXN0IG9mIG1lbjsgIGlmIHlvdSBkbyBub3Qgd2lzaCB0byBhbnN3ZXIsIEkgc2F5IGl0IHRvIHlvdSBhbmQgdGhlc2Ugb3RoZXJzIGhlcmUuICBCdXQgYW5zd2VyIGF0IGxlYXN0CjwvdHJhbnNsYXRpb24+"
translation['1.27.27c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyN2MiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIG5leHQgcXVlc3Rpb24uICBJcyB0aGVyZSBhbnlvbmUgd2hvIGJlbGlldmVzIHNwaXJpdHVhbCB0aGluZ3MgZXhpc3QsIGJ1dCBkb2VzIG5vdCBiZWxpZXZlIGluIHNwaXJpdHM/ICDigJxUaGVyZSBpcyBub3Qu4oCdICBUaGFuayB5b3UgZm9yIHJlcGx5aW5nIHJlbHVjdGFudGx5IHdoZW4gZm9yY2VkIGJ5IHRoZXNlIGdlbnRsZW1lbi4gIFRoZW4geW91IHNheSB0aGF0IEkgYmVsaWV2ZSBpbiBzcGlyaXR1YWwgYmVpbmdzLCB3aGV0aGVyIG5ldyBvciBvbGQsIGFuZCB0ZWFjaCB0aGF0IGJlbGllZjsgIGJ1dCB0aGVuIEkgYmVsaWV2ZSBpbiBzcGlyaXR1YWwgYmVpbmdzIGF0IGFueSByYXRlLCBhY2NvcmRpbmcgdG8geW91ciBzdGF0ZW1lbnQsIGFuZCB5b3Ugc3dvcmUgdG8gdGhhdCBpbiB5b3VyIGluZGljdG1lbnQuICBCdXQgaWYgSSBiZWxpZXZlIGluIHNwaXJpdHVhbCBiZWluZ3MsIGl0IGlzIHF1aXRlIGluZXZpdGFibGUgdGhhdCBJIGJlbGlldmUgYWxzbyBpbiBzcGlyaXRzOyAgaXMgaXQgbm90IHNvPyAgSXQgaXM7ICBmb3IgSSBhc3N1bWUgdGhhdCB5b3UgYWdyZWUsIHNpbmNlIHlvdSBkbyBub3QgYW5zd2VyLiAgQnV0IGRvIHdlIG5vdCB0aGluayB0aGUgc3Bpcml0cyBhcmUKPC90cmFuc2xhdGlvbj4="
translation['1.27.27d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyN2QiIHVuaXQ9InNlY3Rpb24iIC8+Z29kcyBvciBjaGlsZHJlbiBvZiBnb2RzPyAgWWVzLCBvciBubz8gIOKAnENlcnRhaW5seS7igJ0gIFRoZW4gaWYgSSBiZWxpZXZlIGluIHNwaXJpdHMsIGFzIHlvdSBzYXksIGlmIHNwaXJpdHMgYXJlIGEga2luZCBvZiBnb2RzLCB0aGF0IHdvdWxkIGJlIHRoZSBwdXp6bGUgYW5kIGpva2Ugd2hpY2ggSSBzYXkgeW91IGFyZSB1dHRlcmluZyBpbiBzYXlpbmcgdGhhdCBJLCB3aGlsZSBJIGRvIG5vdCBiZWxpZXZlIGluIGdvZHMsIGRvIGJlbGlldmUgSW4gZ29kcyBhZ2Fpbiwgc2luY2UgSSBiZWxpZXZlIGluIHNwaXJpdHM7ICBidXQgaWYsIG9uIHRoZSBvdGhlciBoYW5kLCBzcGlyaXRzIGFyZSBhIGtpbmQgb2YgYmFzdGFyZCBjaGlsZHJlbiBvZiBnb2RzLCBieSBueW1waHMgb3IgYnkgYW55IG90aGVycywgd2hvZXZlciB0aGVpciBtb3RoZXJzIGFyZSBzYWlkIHRvIGJlLCB3aGF0IG1hbiB3b3VsZCBiZWxpZXZlIHRoYXQgdGhlcmUgYXJlIGNoaWxkcmVuIG9mIGdvZHMsIGJ1dCBubyBnb2RzPyAgSXQgd291bGQgYmUganVzdCBhcyBhYnN1cmQKPC90cmFuc2xhdGlvbj4="
translation['1.27.27e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyN2UiIHVuaXQ9InNlY3Rpb24iIC8+YXMgaWYgb25lIHdlcmUgdG8gYmVsaWV2ZSB0aGF0IHRoZXJlIGFyZSBjaGlsZHJlbiBvZiBob3JzZXMgYW5kIGFzc2VzLCBuYW1lbHkgbXVsZXMsIGJ1dCBubyBob3JzZXMgYW5kIGFzc2VzLiAgQnV0LCBNZWxldHVzLCB5b3UgY2VydGFpbmx5IG11c3QgaGF2ZSBicm91Z2h0IHRoaXMgc3VpdCBlaXRoZXIgdG8gbWFrZSBhIHRlc3Qgb2YgdXMgb3IgYmVjYXVzZSB5b3Ugd2VyZSBsb3NzIGFzIHRvIHdoYXQgdHJ1ZSB3cm9uZ2RvaW5nIHlvdSBjb3VsZCBhY2N1c2UgbWUgb2Y7ICBidXQgdGhlcmUgaXMgbm8gd2F5IGZvciB5b3UgdG8gcGVyc3VhZGUgYW55IG1hbiB3aG8gaGFzIGV2ZW4gYSBsaXR0bGUgc2Vuc2UgdGhhdCBpdCBpcyBwb3NzaWJsZSBmb3IgdGhlIHNhbWUgcGVyc29uIHRvIGJlbGlldmUgaW4gc3Bpcml0dWFsIGFuZCBkaXZpbmUgZXhpc3RlbmNlcyBhbmQgYWdhaW4gZm9yIHRoZSBzYW1lIHBlcnNvbiBub3QgdG8gYmVsaWV2ZSBpbiBzcGlyaXRzIG9yIGdvZHMgb3IKPC90cmFuc2xhdGlvbj4="
translation['1.28.28a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjhhIiB1bml0PSJzZWN0aW9uIiAvPmhlcm9lcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2VsbCB0aGVuLCBtZW4gb2YgQXRoZW5zLCB0aGF0IEkgYW0gbm90IGEgd3Jvbmdkb2VyIGFjY29yZGluZyB0byBNZWxldHVzJ3MgaW5kaWN0bWVudCwgc2VlbXMgdG8gbWUgbm90IHRvIG5lZWQgbXVjaCBvZiBhIGRlZmVuY2UsIGJ1dCB3aGF0IGhhcyBiZWVuIHNhaWQgaXMgZW5vdWdoLiAgQnV0IHlvdSBtYXkgYmUgYXNzdXJlZCB0aGF0IHdoYXQgSSBzYWlkIGJlZm9yZSBpcyB0cnVlLCB0aGF0IGdyZWF0IGhhdHJlZCBoYXMgYXJpc2VuIGFnYWluc3QgbWUgYW5kIGluIHRoZSBtaW5kcyBvZiBtYW55IHBlcnNvbnMuICBBbmQgdGhpcyBpdCBpcyB3aGljaCB3aWxsIGNhdXNlIG15IGNvbmRlbW5hdGlvbiwgaWYgaXQgaXMgdG8gY2F1c2UgaXQsIG5vdCBNZWxldHVzIG9yIEFueXR1cywgYnV0IHRoZSBwcmVqdWRpY2UgYW5kIGRpc2xpa2Ugb2YgdGhlIG1hbnkuICBUaGlzIGhhcyBjb25kZW1uZWQgbWFueSBvdGhlciBnb29kIG1lbiwgYW5kIEkgdGhpbmsgd2lsbCBkbyBzbzsgCjwvdHJhbnNsYXRpb24+"
translation['1.28.28b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOGIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoZXJlIGlzIG5vIGRhbmdlciB0aGF0IGl0IHdpbGwgc3RvcCB3aXRoIG1lLiAgQnV0IHBlcmhhcHMgc29tZW9uZSBtaWdodCBzYXk6ICDigJxBcmUgeW91IHRoZW4gbm90IGFzaGFtZWQsIFNvY3JhdGVzLCBvZiBoYXZpbmcgZm9sbG93ZWQgc3VjaCBhIHB1cnN1aXQsIHRoYXQgeW91IGFyZSBub3cgaW4gZGFuZ2VyIG9mIGJlaW5nIHB1dCB0byBkZWF0aCBhcyBhIHJlc3VsdD/igJ0gIEJ1dCBJIHNob3VsZCBtYWtlIHRvIGhpbSBhIGp1c3QgcmVwbHk6ICDigJxZb3UgZG8gbm90IHNwZWFrIHdlbGwsIFNpciwgaWYgeW91IHRoaW5rIGEgbWFuIGluIHdob20gdGhlcmUgaXMgZXZlbiBhIGxpdHRsZSBtZXJpdCBvdWdodCB0byBjb25zaWRlciBkYW5nZXIgb2YgbGlmZSBvciBkZWF0aCwgYW5kIG5vdCByYXRoZXIgcmVnYXJkIHRoaXMgb25seSwgd2hlbiBoZSBkb2VzIHRoaW5ncywgd2hldGhlciB0aGUgdGhpbmdzIGhlIGRvZXMgYXJlIHJpZ2h0IG9yIHdyb25nIGFuZCB0aGUgYWN0cyBvZiBhIGdvb2Qgb3IgYSBiYWQgbWFuLiAgRm9yIGFjY29yZGluZyB0byB5b3VyIGFyZ3VtZW50IGFsbCB0aGUgZGVtaWdvZHMKICAgIDwvdHJhbnNsYXRpb24+"
translation['1.28.28c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOGMiIHVuaXQ9InNlY3Rpb24iIC8+d291bGQgYmUgYmFkIHdobyBkaWVkIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJveSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVHJveSI+VHJveTwvcGxhY2VOYW1lPiwgaW5jbHVkaW5nIHRoZSBzb24gb2YgVGhldGlzLCB3aG8gc28gZGVzcGlzZWQgZGFuZ2VyLCBpbiBjb21wYXJpc29uIHdpdGggZW5kdXJpbmcgYW55IGRpc2dyYWNlLCB0aGF0IHdoZW4gaGlzIG1vdGhlciAoYW5kIHNoZSB3YXMgYSBnb2RkZXNzKSBzYWlkIHRvIGhpbSwgYXMgaGUgd2FzIGVhZ2VyIHRvIHNsYXkgSGVjdG9yLCBzb21ldGhpbmcgbGlrZSB0aGlzLCBJIGJlbGlldmUsIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj48bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPk15IHNvbiwgaWYgeW91IGF2ZW5nZSB0aGUgZGVhdGggb2YgeW91ciBmcmllbmQgUGF0cm9jbHVzIGFuZCBraWxsIEhlY3RvciwgeW91IHlvdXJzZWxmIHNoYWxsIGRpZTs8L2w+PGwgY2xhc3M9InRyYW5zbGF0aW9uIj5mb3Igc3RyYWlnaHR3YXksIGFmdGVyIEhlY3RvciwgaXMgZGVhdGggYXBwb2ludGVkIHVudG8geW91OzwvbD48L3F1b3RlPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+TXkgc29uLCBpZiB5b3UgYXZlbmdlIHRoZSBkZWF0aCBvZiB5b3VyIGZyaWVuZCBQYXRyb2NsdXMgYW5kIGtpbGwgSGVjdG9yLCB5b3UgeW91cnNlbGYgc2hhbGwgZGllOzwvbD48bCBjbGFzcz0idHJhbnNsYXRpb24iPmZvciBzdHJhaWdodHdheSwgYWZ0ZXIgSGVjdG9yLCBpcyBkZWF0aCBhcHBvaW50ZWQgdW50byB5b3U7PC9sPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAxOC45NiIgdmFsaWQ9InllcyI+SG9tLiBJbC4gMTguOTY8L2JpYmw+Ljwvbm90ZT5oZSwgd2hlbiBoZSBoZWFyZCB0aGlzLCBtYWRlIGxpZ2h0IG9mIGRlYXRoIGFuZCBkYW5nZXIsCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDE4Ljk2IiB2YWxpZD0ieWVzIj5Ib20uIElsLiAxOC45NjwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['1.28.28d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOGQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGZlYXJlZCBtdWNoIG1vcmUgdG8gbGl2ZSBhcyBhIGNvd2FyZCBhbmQgbm90IHRvIGF2ZW5nZSBoaXMgZnJpZW5kcywgYW5kIHNhaWQsIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj5TdHJhaWdodHdheSBtYXkgSSBkaWUsIGFmdGVyIGRvaW5nIHZlbmdlYW5jZSB1cG9uIHRoZSB3cm9uZ2RvZXIsIHRoYXQgSSBtYXkgbm90IHN0YXkgaGVyZSwgamVlcmVkIGF0IGJlc2lkZSB0aGUgY3VydmVkIHNoaXBzLCBhIGJ1cmRlbiBvZiB0aGUgZWFydGguPC9xdW90ZT4uIERvIHlvdSB0aGluayBoZSBjb25zaWRlcmVkIGRlYXRoIGFuZCBkYW5nZXI/PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZvciB0aHVzIGl0IGlzLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBpbiB0cnV0aDsgIHdoZXJldmVyIGEgbWFuIHN0YXRpb25zIGhpbXNlbGYsIHRoaW5raW5nIGl0IGlzIGJlc3QgdG8gYmUgdGhlcmUsIG9yIGlzIHN0YXRpb25lZCBieSBoaXMgY29tbWFuZGVyLCB0aGVyZSBoZSBtdXN0LCBhcyBpdCBzZWVtcyB0byBtZSwgcmVtYWluIGFuZCBydW4gaGlzIHJpc2tzLCBjb25zaWRlcmluZyBuZWl0aGVyIGRlYXRoIG5vciBhbnkgb3RoZXIgdGhpbmcgbW9yZSB0aGFuIGRpc2dyYWNlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TbyBJIHNob3VsZCBoYXZlIGRvbmUgYSB0ZXJyaWJsZSB0aGluZywKPC90cmFuc2xhdGlvbj4="
translation['1.28.28e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOGUiIHVuaXQ9InNlY3Rpb24iIC8+aWYsIHdoZW4gdGhlIGNvbW1hbmRlcnMgd2hvbSB5b3UgY2hvc2UgdG8gY29tbWFuZCBtZSBzdGF0aW9uZWQgbWUsIGJvdGggYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDQ4MTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwNDgxNCI+UG90aWRhZWE8L3BsYWNlTmFtZT4gYW5kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQW1waGlwb2xpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQW1waGlwb2xpcyI+QW1waGlwb2xpczwvcGxhY2VOYW1lPiBhbmQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDE3MDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwMTcwMCI+RGVsaXVtPC9wbGFjZU5hbWU+LCBJIHJlbWFpbmVkIHdoZXJlIHRoZXkgc3RhdGlvbmVkIG1lLCBsaWtlIGFueWJvZHkgZWxzZSwgYW5kIHJhbiB0aGUgcmlzayBvZiBkZWF0aCwgYnV0IHdoZW4gdGhlIGdvZCBnYXZlIG1lIGEgc3RhdGlvbiwgYXMgSSBiZWxpZXZlZCBhbmQgdW5kZXJzdG9vZCwgd2l0aCBvcmRlcnMgdG8gc3BlbmQgbXkgbGlmZSBpbiBwaGlsb3NvcGh5IGFuZCBpbiBleGFtaW5pbmcgbXlzZWxmIGFuZCBvdGhlcnMsCjwvdHJhbnNsYXRpb24+"
translation['1.29.29a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjlhIiB1bml0PSJzZWN0aW9uIiAvPnRoZW4gSSB3ZXJlIHRvIGRlc2VydCBteSBwb3N0IHRocm91Z2ggZmVhciBvZiBkZWF0aCBvciBhbnl0aGluZyBlbHNlIHdoYXRzb2V2ZXIuICBJdCB3b3VsZCBiZSBhIHRlcnJpYmxlIHRoaW5nLCBhbmQgdHJ1bHkgb25lIG1pZ2h0IHRoZW4ganVzdGx5IGhhbGUgbWUgaW50byBjb3VydCwgb24gdGhlIGNoYXJnZSB0aGF0IEkgZG8gbm90IGJlbGlldmUgdGhhdCB0aGVyZSBhcmUgZ29kcywgc2luY2UgSSBkaXNvYmV5IHRoZSBvcmFjbGUgYW5kIGZlYXIgZGVhdGggYW5kIHRoaW5rIEkgYW0gd2lzZSB3aGVuIEkgYW0gbm90LiAgRm9yIHRvIGZlYXIgZGVhdGgsIGdlbnRsZW1lbiwgaXMgbm90aGluZyBlbHNlIHRoYW4gdG8gdGhpbmsgb25lIGlzIHdpc2Ugd2hlbiBvbmUgaXMgbm90OyAgZm9yIGl0IGlzIHRoaW5raW5nIG9uZSBrbm93cyB3aGF0IG9uZSBkb2VzIG5vdCBrbm93LiAgRm9yIG5vIG9uZSBrbm93cyB3aGV0aGVyIGRlYXRoIGJlIG5vdCBldmVuIHRoZSBncmVhdGVzdCBvZiBhbGwgYmxlc3NpbmdzIHRvIG1hbiwgYnV0IHRoZXkgZmVhciBpdCBhcyBpZiB0aGV5IGtuZXcgdGhhdCBpdCBpcyB0aGUgZ3JlYXRlc3Qgb2YgZXZpbHMuIAo8L3RyYW5zbGF0aW9uPg=="
translation['1.29.29b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOWIiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIGlzIG5vdCB0aGlzIHRoZSBtb3N0IHJlcHJlaGVuc2libGUgZm9ybSBvZiBpZ25vcmFuY2UsIHRoYXQgb2YgdGhpbmtpbmcgb25lIGtub3dzIHdoYXQgb25lIGRvZXMgbm90IGtub3c/ICBQZXJoYXBzLCBnZW50bGVtZW4sIGluIHRoaXMgbWF0dGVyIGFsc28gSSBkaWZmZXIgZnJvbSBvdGhlciBtZW4gaW4gdGhpcyB3YXksIGFuZCBpZiBJIHdlcmUgdG8gc2F5IHRoYXQgSSBhbSB3aXNlciBpbiBhbnl0aGluZywgaXQgd291bGQgYmUgaW4gdGhpcywgdGhhdCBub3Qga25vd2luZyB2ZXJ5IG11Y2ggYWJvdXQgdGhlIG90aGVyIHdvcmxkLCBJIGRvIG5vdCB0aGluayBJIGtub3cuICBCdXQgSSBkbyBrbm93IHRoYXQgaXQgaXMgZXZpbCBhbmQgZGlzZ3JhY2VmdWwgdG8gZG8gd3JvbmcgYW5kIHRvIGRpc29iZXkgaGltIHdobyBpcyBiZXR0ZXIgdGhhbiBJLCB3aGV0aGVyIGhlIGJlIGdvZCBvciBtYW4uICBTbyBJIHNoYWxsIG5ldmVyIGZlYXIgb3IgYXZvaWQgdGhvc2UgdGhpbmdzIGNvbmNlcm5pbmcgd2hpY2ggSSBkbyBub3Qga25vdyB3aGV0aGVyIHRoZXkgYXJlIGdvb2Qgb3IgYmFkIHJhdGhlciB0aGFuIHRob3NlIHdoaWNoIEkga25vdyBhcmUgYmFkLiAgQW5kIHRoZXJlZm9yZSwgZXZlbiBpZgo8L3RyYW5zbGF0aW9uPg=="
translation['1.29.29c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOWMiIHVuaXQ9InNlY3Rpb24iIC8+eW91IGFjcXVpdCBtZSBub3cgYW5kIGFyZSBub3QgY29udmluY2VkIGJ5IEFueXR1cywgd2hvIHNhaWQgdGhhdCBlaXRoZXIgSSBvdWdodCBub3QgdG8gaGF2ZSBiZWVuIGJyb3VnaHQgdG8gdHJpYWwgYXQgYWxsLCBvciBzaW5jZSB3YXMgYnJvdWdodCB0byB0cmlhbCwgSSBtdXN0IGNlcnRhaW5seSBiZSBwdXQgdG8gZGVhdGgsIGFkZGluZyB0aGF0IGlmIEkgd2VyZSBhY3F1aXR0ZWQgeW91ciBzb25zIHdvdWxkIGFsbCBiZSB1dHRlcmx5IHJ1aW5lZCBieSBwcmFjdGljaW5nIHdoYXQgSSB0ZWFjaOKAlGlmIHlvdSBzaG91bGQgc2F5IHRvIG1lIGluIHJlcGx5IHRvIHRoaXM6ICDigJxTb2NyYXRlcywgdGhpcyB0aW1lIHdlIHdpbGwgbm90IGRvIGFzIEFueXR1cyBzYXlzLCBidXQgd2Ugd2lsbCBsZXQgeW91IGdvLCBvbiB0aGlzIGNvbmRpdGlvbiwgaG93ZXZlciwgdGhhdCB5b3Ugbm8gbG9uZ2VyIHNwZW5kIHlvdXIgdGltZSBpbiB0aGlzIGludmVzdGlnYXRpb24gb3IgaW4gcGhpbG9zb3BoeSwgYW5kIGlmIHlvdSBhcmUgY2F1Z2h0IGRvaW5nIHNvIGFnYWluIHlvdSBzaGFsbCBkaWXigJ07IAo8L3RyYW5zbGF0aW9uPg=="
translation['1.29.29d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOWQiIHVuaXQ9InNlY3Rpb24iIC8+aWYgeW91IHNob3VsZCBsZXQgbWUgZ28gb24gdGhpcyBjb25kaXRpb24gd2hpY2ggSSBoYXZlIG1lbnRpb25lZCwgSSBzaG91bGQgc2F5IHRvIHlvdSwg4oCcTWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgSSByZXNwZWN0IGFuZCBsb3ZlIHlvdSwgYnV0IEkgc2hhbGwgb2JleSB0aGUgZ29kIHJhdGhlciB0aGFuIHlvdSwgYW5kIHdoaWxlIEkgbGl2ZSBhbmQgYW0gYWJsZSB0byBjb250aW51ZSwgSSBzaGFsbCBuZXZlciBnaXZlIHVwIHBoaWxvc29waHkgb3Igc3RvcCBleGhvcnRpbmcgeW91IGFuZCBwb2ludGluZyBvdXQgdGhlIHRydXRoIHRvIGFueSBvbmUgb2YgeW91IHdob20gSSBtYXkgbWVldCwgc2F5aW5nIGluIG15IGFjY3VzdG9tZWQgd2F5OiAg4oCcTW9zdCBleGNlbGxlbnQgbWFuLCBhcmUgeW91IHdobyBhcmUgYSBjaXRpemVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhlIGdyZWF0ZXN0IG9mIGNpdGllcyBhbmQgdGhlIG1vc3QgZmFtb3VzIGZvciB3aXNkb20gYW5kIHBvd2VyLCBub3QgYXNoYW1lZCB0byBjYXJlIGZvciB0aGUgYWNxdWlzaXRpb24gb2Ygd2VhbHRoCjwvdHJhbnNsYXRpb24+"
translation['1.29.29e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOWUiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGZvciByZXB1dGF0aW9uIGFuZCBob25vciwgd2hlbiB5b3UgbmVpdGhlciBjYXJlIG5vciB0YWtlIHRob3VnaHQgZm9yIHdpc2RvbSBhbmQgdHJ1dGggYW5kIHRoZSBwZXJmZWN0aW9uIG9mIHlvdXIgc291bD/igJ0gIEFuZCBpZiBhbnkgb2YgeW91IGFyZ3VlcyB0aGUgcG9pbnQsIGFuZCBzYXlzIGhlIGRvZXMgY2FyZSwgSSBzaGFsbCBub3QgbGV0IGhpbSBnbyBhdCBvbmNlLCBub3Igc2hhbGwgSSBnbyBhd2F5LCBidXQgSSBzaGFsbCBxdWVzdGlvbiBhbmQgZXhhbWluZSBhbmQgY3Jvc3MtZXhhbWluZSBoaW0sIGFuZCBpZiBJIGZpbmQgdGhhdCBoZSBkb2VzIG5vdCBwb3NzZXNzIHZpcnR1ZSwgYnV0IHNheXMgaGUgZG9lcywgSSBzaGFsbCByZWJ1a2UgaGltIGZvciBzY29ybmluZwo8L3RyYW5zbGF0aW9uPg=="
translation['1.30.30a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzBhIiB1bml0PSJzZWN0aW9uIiAvPnRoZSB0aGluZ3MgdGhhdCBhcmUgb2YgbW9zdCBpbXBvcnRhbmNlIGFuZCBjYXJpbmcgbW9yZSBmb3Igd2hhdCBpcyBvZiBsZXNzIHdvcnRoLiAgVGhpcyBJIHNoYWxsIGRvIHRvIHdob21ldmVyIEkgbWVldCwgeW91bmcgYW5kIG9sZCwgZm9yZWlnbmVyIGFuZCBjaXRpemVuLCBidXQgbW9zdCB0byB0aGUgY2l0aXplbnMsIGluYXNtdWNoIGFzIHlvdSBhcmUgbW9yZSBuZWFybHkgcmVsYXRlZCB0byBtZS4gIEZvciBrbm93IHRoYXQgdGhlIGdvZCBjb21tYW5kcyBtZSB0byBkbyB0aGlzLCBhbmQgSSBiZWxpZXZlIHRoYXQgbm8gZ3JlYXRlciBnb29kIGV2ZXIgY2FtZSB0byBwYXNzIGluIHRoZSBjaXR5IHRoYW4gbXkgc2VydmljZSB0byB0aGUgZ29kLiAgRm9yIEkgZ28gYWJvdXQgZG9pbmcgbm90aGluZyBlbHNlIHRoYW4gdXJnaW5nIHlvdSwgeW91bmcgYW5kIG9sZCwgbm90IHRvIGNhcmUgZm9yIHlvdXIgcGVyc29ucyBvciB5b3VyIHByb3BlcnR5CjwvdHJhbnNsYXRpb24+"
translation['1.30.30b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMGIiIHVuaXQ9InNlY3Rpb24iIC8+bW9yZSB0aGFuIGZvciB0aGUgcGVyZmVjdGlvbiBvZiB5b3VyIHNvdWxzLCBvciBldmVuIHNvIG11Y2g7ICBhbmQgSSB0ZWxsIHlvdSB0aGF0IHZpcnR1ZSBkb2VzIG5vdCBjb21lIGZyb20gbW9uZXksIGJ1dCBmcm9tIHZpcnR1ZSBjb21lcyBtb25leSBhbmQgYWxsIG90aGVyIGdvb2QgdGhpbmdzIHRvIG1hbiwgYm90aCB0byB0aGUgaW5kaXZpZHVhbCBhbmQgdG8gdGhlIHN0YXRlLiAgSWYgYnkgc2F5aW5nIHRoZXNlIHRoaW5ncyBJIGNvcnJ1cHQgdGhlIHlvdXRoLCB0aGVzZSB0aGluZ3MgbXVzdCBiZSBpbmp1cmlvdXM7ICBidXQgaWYgYW55b25lIGFzc2VydHMgdGhhdCBJIHNheSBvdGhlciB0aGluZ3MgdGhhbiB0aGVzZSwgaGUgc2F5cyB3aGF0IGlzIHVudHJ1ZS4gIFRoZXJlZm9yZSBJIHNheSB0byB5b3UsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIGVpdGhlciBkbyBhcyBBbnl0dXMgdGVsbHMgeW91LCBvciBub3QsIGFuZCBlaXRoZXIgYWNxdWl0IG1lLCBvciBub3QsIGtub3dpbmcgdGhhdCBJIHNoYWxsIG5vdCBjaGFuZ2UgbXkgY29uZHVjdCBldmVuIGlmIEkgYW0KPC90cmFuc2xhdGlvbj4="
translation['1.30.30c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMGMiIHVuaXQ9InNlY3Rpb24iIC8+dG8gZGllIG1hbnkgdGltZXMgb3Zlci48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RG8gbm90IG1ha2UgYSBkaXN0dXJiYW5jZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPjsgIGNvbnRpbnVlIHRvIGRvIHdoYXQgSSBhc2tlZCBvZiB5b3UsIG5vdCB0byBpbnRlcnJ1cHQgbXkgc3BlZWNoIGJ5IGRpc3R1cmJhbmNlcywgYnV0IHRvIGhlYXIgbWU7ICBhbmQgSSBiZWxpZXZlIHlvdSB3aWxsIHByb2ZpdCBieSBoZWFyaW5nLiAgTm93IEkgYW0gZ29pbmcgdG8gc2F5IHNvbWUgdGhpbmdzIHRvIHlvdSBhdCB3aGljaCB5b3Ugd2lsbCBwZXJoYXBzIGNyeSBvdXQ7ICBidXQgZG8gbm90IGRvIHNvIGJ5IGFueSBtZWFucy4gIEZvciBrbm93IHRoYXQgaWYgeW91IGtpbGwgbWUsIEkgYmVpbmcgc3VjaCBhIG1hbiBhcyBJIHNheSBJIGFtLCB5b3Ugd2lsbCBub3QgaW5qdXJlIG1lIHNvIG11Y2ggYXMgeW91cnNlbHZlczsgIGZvciBuZWl0aGVyIE1lbGV0dXMgbm9yIEFueXR1cyBjb3VsZCBpbmp1cmUgbWU7IAo8L3RyYW5zbGF0aW9uPg=="
translation['1.30.30d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMGQiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCB3b3VsZCBiZSBpbXBvc3NpYmxlLCBmb3IgSSBiZWxpZXZlIGl0IGlzIG5vdCBHb2QncyB3aWxsIHRoYXQgYSBiZXR0ZXIgbWFuIGJlIGluanVyZWQgYnkgYSB3b3JzZS4gIEhlIG1pZ2h0LCBob3dldmVyLCBwZXJoYXBzIGtpbGwgbWUgb3IgYmFuaXNoIG1lIG9yIGRpc2ZyYW5jaGlzZSBtZTsgIGFuZCBwZXJoYXBzIGhlIHRoaW5rcyBoZSB3b3VsZCB0aHVzIGluZmxpY3QgZ3JlYXQgaW5qdXJpZXMgdXBvbiBtZSwgYW5kIG90aGVycyBtYXkgdGhpbmsgc28sIGJ1dCBJIGRvIG5vdDsgIEkgdGhpbmsgaGUgZG9lcyBoaW1zZWxmIGEgbXVjaCBncmVhdGVyIGluanVyeSBieSBkb2luZyB3aGF0IGhlIGlzIGRvaW5nIG5vd+KAlGtpbGxpbmcgYSBtYW4gdW5qdXN0bHkuICBBbmQgc28sIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIEkgYW0gbm93IG1ha2luZyBteSBkZWZlbmNlIG5vdCBmb3IgbXkgb3duIHNha2UsIGFzIG9uZSBtaWdodCBpbWFnaW5lLCBidXQgZmFyIG1vcmUgZm9yIHlvdXJzLCB0aGF0IHlvdSBtYXkgbm90IGJ5IGNvbmRlbW5pbmcgbWUgZXJyIGluIHlvdXIgdHJlYXRtZW50IG9mIHRoZSBnaWZ0IHRoZSBHb2QgZ2F2ZSB5b3UuIAo8L3RyYW5zbGF0aW9uPg=="
translation['1.30.30e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMGUiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIGlmIHlvdSBwdXQgbWUgdG8gZGVhdGgsIHlvdSB3aWxsIG5vdCBlYXNpbHkgZmluZCBhbm90aGVyLCB3aG8sIHRvIHVzZSBhIHJhdGhlciBhYnN1cmQgZmlndXJlLCBhdHRhY2hlcyBoaW1zZWxmIHRvIHRoZSBjaXR5IGFzIGEgZ2FkZmx5IHRvIGEgaG9yc2UsIHdoaWNoLCB0aG91Z2ggbGFyZ2UgYW5kIHdlbGwgYnJlZCwgaXMgc2x1Z2dpc2ggb24gYWNjb3VudCBvZiBoaXMgc2l6ZSBhbmQgbmVlZHMgdG8gYmUgYXJvdXNlZCBieSBzdGluZ2luZy4gIEkgdGhpbmsgdGhlIGdvZCBmYXN0ZW5lZCBtZSB1cG9uIHRoZSBjaXR5IGluIHNvbWUgc3VjaCBjYXBhY2l0eSwgYW5kIEkgZ28gYWJvdXQgYXJvdXNpbmcsCjwvdHJhbnNsYXRpb24+"
translation['1.31.31a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzFhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB1cmdpbmcgYW5kIHJlcHJvYWNoaW5nIGVhY2ggb25lIG9mIHlvdSwgY29uc3RhbnRseSBhbGlnaHRpbmcgdXBvbiB5b3UgZXZlcnl3aGVyZSB0aGUgd2hvbGUgZGF5IGxvbmcuICBTdWNoIGFub3RoZXIgaXMgbm90IGxpa2VseSB0byBjb21lIHRvIHlvdSwgZ2VudGxlbWVuOyAgYnV0IGlmIHlvdSB0YWtlIG15IGFkdmljZSwgeW91IHdpbGwgc3BhcmUgbWUuICBCdXQgeW91LCBwZXJoYXBzLCBtaWdodCBiZSBhbmdyeSwgbGlrZSBwZW9wbGUgYXdha2VuZWQgZnJvbSBhIG5hcCwgYW5kIG1pZ2h0IHNsYXAgbWUsIGFzIEFueXR1cyBhZHZpc2VzLCBhbmQgZWFzaWx5IGtpbGwgbWU7ICB0aGVuIHlvdSB3b3VsZCBwYXNzIHRoZSByZXN0IG9mIHlvdXIgbGl2ZXMgaW4gc2x1bWJlciwgdW5sZXNzIEdvZCwgaW4gaGlzIGNhcmUgZm9yIHlvdSwgc2hvdWxkIHNlbmQgc29tZW9uZSBlbHNlIHRvIHN0aW5nIHlvdS4gIEFuZCB0aGF0IEkgYW0sIGFzIEkgc2F5LCBhIGtpbmQgb2YgZ2lmdCBmcm9tIHRoZSBnb2QsCjwvdHJhbnNsYXRpb24+"
translation['1.31.31b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMWIiIHVuaXQ9InNlY3Rpb24iIC8+eW91IG1pZ2h0IHVuZGVyc3RhbmQgZnJvbSB0aGlzOyAgZm9yIEkgaGF2ZSBuZWdsZWN0ZWQgYWxsIG15IG93biBhZmZhaXJzIGFuZCBoYXZlIGJlZW4gZW5kdXJpbmcgdGhlIG5lZ2xlY3Qgb2YgbXkgY29uY2VybnMgYWxsIHRoZXNlIHllYXJzLCBidXQgSSBhbSBhbHdheXMgYnVzeSBpbiB5b3VyIGludGVyZXN0LCBjb21pbmcgdG8gZWFjaCBvbmUgb2YgeW91IGluZGl2aWR1YWxseSBsaWtlIGEgZmF0aGVyIG9yIGFuIGVsZGVyIGJyb3RoZXIgYW5kIHVyZ2luZyB5b3UgdG8gY2FyZSBmb3IgdmlydHVlOyAgbm93IHRoYXQgaXMgbm90IGxpa2UgaHVtYW4gY29uZHVjdC4gIElmIEkgZGVyaXZlZCBhbnkgcHJvZml0IGZyb20gdGhpcyBhbmQgcmVjZWl2ZWQgcGF5IGZvciB0aGVzZSBleGhvcnRhdGlvbnMsIHRoZXJlIHdvdWxkIGJlIHNvbWUgc2Vuc2UgaW4gaXQ7ICBidXQgbm93IHlvdSB5b3Vyc2VsdmVzIHNlZSB0aGF0IG15IGFjY3VzZXJzLCB0aG91Z2ggdGhleSBhY2N1c2UgbWUgb2YgZXZlcnl0aGluZyBlbHNlIGluIHN1Y2ggYSBzaGFtZWxlc3Mgd2F5LCBoYXZlIG5vdCBiZWVuIGFibGUgdG8gd29yayB0aGVtc2VsdmVzIHVwIHRvIHN1Y2ggYSBwaXRjaCBvZiBzaGFtZWxlc3NuZXNzCjwvdHJhbnNsYXRpb24+"
translation['1.31.31c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMWMiIHVuaXQ9InNlY3Rpb24iIC8+YXMgdG8gcHJvZHVjZSBhIHdpdG5lc3MgdG8gdGVzdGlmeSB0aGF0IEkgZXZlciBleGFjdGVkIG9yIGFza2VkIHBheSBvZiBhbnlvbmUuICBGb3IgSSB0aGluayBJIGhhdmUgYSBzdWZmaWNpZW50IHdpdG5lc3MgdGhhdCBJIHNwZWFrIHRoZSB0cnV0aCwgbmFtZWx5LCBteSBwb3ZlcnR5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5QZXJoYXBzIGl0IG1heSBzZWVtIHN0cmFuZ2UgdGhhdCBJIGdvIGFib3V0IGFuZCBpbnRlcmZlcmUgaW4gb3RoZXIgcGVvcGxlJ3MgYWZmYWlycyB0byBnaXZlIHRoaXMgYWR2aWNlIGluIHByaXZhdGUsIGJ1dCBkbyBub3QgdmVudHVyZSB0byBjb21lIGJlZm9yZSB5b3VyIGFzc2VtYmx5IGFuZCBhZHZpc2UgdGhlIHN0YXRlLiAgQnV0IHRoZSByZWFzb24gZm9yIHRoaXMsIGFzIHlvdSBoYXZlIGhlYXJkIG1lIHNheQo8L3RyYW5zbGF0aW9uPg=="
translation['1.31.31d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMWQiIHVuaXQ9InNlY3Rpb24iIC8+YXQgbWFueSB0aW1lcyBhbmQgcGxhY2VzLCBpcyB0aGF0IHNvbWV0aGluZyBkaXZpbmUgYW5kIHNwaXJpdHVhbCBjb21lcyB0byBtZSwgdGhlIHZlcnkgdGhpbmcgd2hpY2ggTWVsZXR1cyByaWRpY3VsZWQgaW4gaGlzIGluZGljdG1lbnQuICBJIGhhdmUgaGFkIHRoaXMgZnJvbSBteSBjaGlsZGhvb2Q7ICBpdCBpcyBhIHNvcnQgb2Ygdm9pY2UgdGhhdCBjb21lcyB0byBtZSwgYW5kIHdoZW4gaXQgY29tZXMgaXQgYWx3YXlzIGhvbGRzIG1lIGJhY2sgZnJvbSB3aGF0IEkgYW0gdGhpbmtpbmcgb2YgZG9pbmcsIGJ1dCBuZXZlciB1cmdlcyBtZSBmb3J3YXJkLiAgVGhpcyBpdCBpcyB3aGljaCBvcHBvc2VzIG15IGVuZ2FnaW5nIGluIHBvbGl0aWNzLiAgQW5kIEkgdGhpbmsgdGhpcyBvcHBvc2l0aW9uIGlzIGEgdmVyeSBnb29kIHRoaW5nOyAgZm9yIHlvdSBtYXkgYmUgcXVpdGUgc3VyZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhhdCBpZiBJIGhhZCB1bmRlcnRha2VuIHRvIGdvIGludG8gcG9saXRpY3MsIEkgc2hvdWxkIGhhdmUgYmVlbiBwdXQgdG8gZGVhdGggbG9uZyBhZ28gYW5kIHNob3VsZCBoYXZlIGRvbmUKPC90cmFuc2xhdGlvbj4="
translation['1.31.31e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMWUiIHVuaXQ9InNlY3Rpb24iIC8+bm8gZ29vZCB0byB5b3Ugb3IgdG8gbXlzZWxmLiAgQW5kIGRvIG5vdCBiZSBhbmdyeSB3aXRoIG1lIGZvciBzcGVha2luZyB0aGUgdHJ1dGg7ICB0aGUgZmFjdCBpcyB0aGF0IG5vIG1hbiB3aWxsIHNhdmUgaGlzIGxpZmUgd2hvIG5vYmx5IG9wcG9zZXMgeW91IG9yIGFueSBvdGhlciBwb3B1bGFjZSBhbmQgcHJldmVudHMgbWFueSB1bmp1c3QgYW5kIGlsbGVnYWwgdGhpbmdzIGZyb20gaGFwcGVuaW5nIGluIHRoZSBzdGF0ZS4gCjwvdHJhbnNsYXRpb24+"
translation['1.32.32a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzJhIiB1bml0PSJzZWN0aW9uIiAvPkEgbWFuIHdobyByZWFsbHkgZmlnaHRzIGZvciB0aGUgcmlnaHQsIGlmIGhlIGlzIHRvIHByZXNlcnZlIGhpcyBsaWZlIGZvciBldmVuIGEgbGl0dGxlIHdoaWxlLCBtdXN0IGJlIGEgcHJpdmF0ZSBjaXRpemVuLCBub3QgYSBwdWJsaWMgbWFuLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHdpbGwgZ2l2ZSB5b3UgcG93ZXJmdWwgcHJvb2ZzIG9mIHRoaXMgbm90IG1lcmUgd29yZHMsIGJ1dCB3aGF0IHlvdSBob25vciBtb3JlLOKAlGFjdGlvbnMuICBBbmQgbGlzdGVuIHRvIHdoYXQgaGFwcGVuZWQgdG8gbWUsIHRoYXQgeW91IG1heSBiZSBjb252aW5jZWQgdGhhdCBJIHdvdWxkIG5ldmVyIHlpZWxkIHRvIGFueSBvbmUsIGlmIHRoYXQgd2FzIHdyb25nLCB0aHJvdWdoIGZlYXIgb2YgZGVhdGgsIGJ1dCB3b3VsZCBkaWUgcmF0aGVyIHRoYW4geWllbGQuICBUaGUgdGFsZSBJIGFtIGdvaW5nIHRvIHRlbGwgeW91IGlzIG9yZGluYXJ5IGFuZCBjb21tb25wbGFjZSwgYnV0IHRydWUuIAo8L3RyYW5zbGF0aW9uPg=="
translation['1.32.32b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMmIiIHVuaXQ9InNlY3Rpb24iIC8+SSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgbmV2ZXIgaGVsZCBhbnkgb3RoZXIgb2ZmaWNlIGluIHRoZSBzdGF0ZSwgYnV0IEkgd2FzIGEgc2VuYXRvcjsgIGFuZCBpdCBoYXBwZW5lZCB0aGF0IG15IHRyaWJlIGhlbGQgdGhlIHByZXNpZGVuY3kgd2hlbiB5b3Ugd2lzaGVkIHRvIGp1ZGdlIGNvbGxlY3RpdmVseSwgbm90IHNldmVyYWxseSwgdGhlIHRlbiBnZW5lcmFscyB3aG8gaGFkIGZhaWxlZCB0byBnYXRoZXIgdXAgdGhlIHNsYWluIGFmdGVyIHRoZSBuYXZhbCBiYXR0bGU7ICB0aGlzIHdhcyBpbGxlZ2FsLCBhcyB5b3UgYWxsIGFncmVlZCBhZnRlcndhcmRzLiAgQXQgdGhhdCB0aW1lIEkgd2FzIHRoZSBvbmx5IG9uZSBvZiB0aGUgcHJ5dGFuZXMgd2hvIG9wcG9zZWQgZG9pbmcgYW55dGhpbmcgY29udHJhcnkgdG8gdGhlIGxhd3MsIGFuZCBhbHRob3VnaCB0aGUgb3JhdG9ycyB3ZXJlIHJlYWR5IHRvIGltcGVhY2ggYW5kIGFycmVzdCBtZSwgYW5kIHRob3VnaCB5b3UgdXJnZWQgdGhlbSB3aXRoIHNob3V0cyB0byBkbyBzbywgSSB0aG91Z2h0CjwvdHJhbnNsYXRpb24+"
translation['1.32.32c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMmMiIHVuaXQ9InNlY3Rpb24iIC8+SSBtdXN0IHJ1biB0aGUgcmlzayB0byB0aGUgZW5kIHdpdGggbGF3IGFuZCBqdXN0aWNlIG9uIG15IHNpZGUsIHJhdGhlciB0aGFuIGpvaW4gd2l0aCB5b3Ugd2hlbiB5b3VyIHdpc2hlcyB3ZXJlIHVuanVzdCwgdGhyb3VnaCBmZWFyIG9mIGltcHJpc29ubWVudCBvciBkZWF0aC4gIFRoYXQgd2FzIHdoZW4gdGhlIGRlbW9jcmFjeSBzdGlsbCBleGlzdGVkOyAgYW5kIGFmdGVyIHRoZSBvbGlnYXJjaHkgd2FzIGVzdGFibGlzaGVkLCB0aGUgVGhpcnR5IHNlbnQgZm9yIG1lIHdpdGggZm91ciBvdGhlcnMgdG8gY29tZSB0byB0aGUgcm90dW5kYSBhbmQgb3JkZXJlZCB1cyB0byBicmluZyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwOTEyMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA5MTIwIj5MZW9uPC9wbGFjZU5hbWU+IHRoZSBTYWxhbWluaWFuIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDIzNDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjM0MCI+U2FsYW1pczwvcGxhY2VOYW1lPiB0byBiZSBwdXQgdG8gZGVhdGguICBUaGV5IGdhdmUgbWFueSBzdWNoIG9yZGVycyB0byBvdGhlcnMgYWxzbywgYmVjYXVzZSB0aGV5IHdpc2hlZCB0byBpbXBsaWNhdGUgYXMgbWFueSBpbiB0aGVpciBjcmltZXMgYXMgdGhleSBjb3VsZC4gIFRoZW4gSSwgaG93ZXZlciwKPC90cmFuc2xhdGlvbj4="
translation['1.32.32d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMmQiIHVuaXQ9InNlY3Rpb24iIC8+c2hvd2VkIGFnYWluLCBieSBhY3Rpb24sIG5vdCBpbiB3b3JkIG9ubHksIHRoYXQgSSBkaWQgbm90IGNhcmUgYSB3aGl0IGZvciBkZWF0aCBpZiB0aGF0IGJlIG5vdCB0b28gcnVkZSBhbiBleHByZXNzaW9uLCBidXQgdGhhdCBJIGRpZCBjYXJlIHdpdGggYWxsIG15IG1pZ2h0IG5vdCB0byBkbyBhbnl0aGluZyB1bmp1c3Qgb3IgdW5ob2x5LiAgRm9yIHRoYXQgZ292ZXJubWVudCwgd2l0aCBhbGwgaXRzIHBvd2VyLCBkaWQgbm90IGZyaWdodGVuIG1lIGludG8gZG9pbmcgYW55dGhpbmcgdW5qdXN0LCBidXQgd2hlbiB3ZSBjYW1lIG91dCBvZiB0aGUgcm90dW5kYSwgdGhlIG90aGVyIGZvdXIgd2VudCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjM0MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzQwIj5TYWxhbWlzPC9wbGFjZU5hbWU+IGFuZCBhcnJlc3RlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwOTEyMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA5MTIwIj5MZW9uPC9wbGFjZU5hbWU+LCBidXQgSSBzaW1wbHkgd2VudCBob21lOyAgYW5kIHBlcmhhcHMgSSBzaG91bGQgaGF2ZSBiZWVuIHB1dCB0byBkZWF0aCBmb3IgaXQsIGlmIHRoZSBnb3Zlcm5tZW50IGhhZCBub3QKPC90cmFuc2xhdGlvbj4="
translation['1.32.32e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMmUiIHVuaXQ9InNlY3Rpb24iIC8+cXVpY2tseSBiZWVuIHB1dCBkb3duLiAgT2YgdGhlc2UgZmFjdHMgeW91IGNhbiBoYXZlIG1hbnkgd2l0bmVzc2VzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5EbyB5b3UgYmVsaWV2ZSB0aGF0IEkgY291bGQgaGF2ZSBsaXZlZCBzbyBtYW55IHllYXJzIGlmIEkgaGFkIGJlZW4gaW4gcHVibGljIGxpZmUgYW5kIGhhZCBhY3RlZCBhcyBhIGdvb2QgbWFuIHNob3VsZCBhY3QsIGxlbmRpbmcgbXkgYWlkIHRvIHdoYXQgaXMganVzdCBhbmQgY29uc2lkZXJpbmcgdGhhdCBvZiB0aGUgaGlnaGVzdCBpbXBvcnRhbmNlPyAgRmFyIGZyb20gaXQsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT47ICBub3IgY291bGQKPC90cmFuc2xhdGlvbj4="
translation['1.33.33a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzNhIiB1bml0PSJzZWN0aW9uIiAvPmFueSBvdGhlciBtYW4uICBCdXQgeW91IHdpbGwgZmluZCB0aGF0IHRocm91Z2ggYWxsIG15IGxpZmUsIGJvdGggaW4gcHVibGljLCBpZiBJIGVuZ2FnZWQgaW4gYW55IHB1YmxpYyBhY3Rpdml0eSwgYW5kIGluIHByaXZhdGUsIEkgaGF2ZSBhbHdheXMgYmVlbiB0aGUgc2FtZSBhcyBub3csIGFuZCBoYXZlIG5ldmVyIHlpZWxkZWQgdG8gYW55IG9uZSB3cm9uZ2x5LCB3aGV0aGVyIGl0IHdlcmUgYW55IG90aGVyIHBlcnNvbiBvciBhbnkgb2YgdGhvc2Ugd2hvIGFyZSBzYWlkIGJ5IG15IHRyYWR1Y2VycyB0byBiZSBteSBwdXBpbHMuICBCdXQgSSB3YXMgbmV2ZXIgYW55IG9uZSdzIHRlYWNoZXIuICBJZiBhbnkgb25lLCB3aGV0aGVyIHlvdW5nIG9yIG9sZCwgd2lzaGVzIHRvIGhlYXIgbWUgc3BlYWtpbmcgYW5kIHB1cnN1aW5nIG15IG1pc3Npb24sIEkgaGF2ZSBuZXZlciBvYmplY3RlZCwKPC90cmFuc2xhdGlvbj4="
translation['1.33.33b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzM2IiIHVuaXQ9InNlY3Rpb24iIC8+bm9yIGRvIEkgY29udmVyc2Ugb25seSB3aGVuIEkgYW0gcGFpZCBhbmQgbm90IG90aGVyd2lzZSwgYnV0IEkgb2ZmZXIgbXlzZWxmIGFsaWtlIHRvIHJpY2ggYW5kIHBvb3I7ICBJIGFzayBxdWVzdGlvbnMsIGFuZCB3aG9ldmVyIHdpc2hlcyBtYXkgYW5zd2VyIGFuZCBoZWFyIHdoYXQgSSBzYXkuICBBbmQgd2hldGhlciBhbnkgb2YgdGhlbSB0dXJucyBvdXQgd2VsbCBvciBpbGwsIEkgc2hvdWxkIG5vdCBqdXN0bHkgYmUgaGVsZCByZXNwb25zaWJsZSwgc2luY2UgSSBuZXZlciBwcm9taXNlZCBvciBnYXZlIGFueSBpbnN0cnVjdGlvbiB0byBhbnkgb2YgdGhlbTsgIGJ1dCBpZiBhbnkgbWFuIHNheXMgdGhhdCBoZSBldmVyIGxlYXJuZWQgb3IgaGVhcmQgYW55dGhpbmcgcHJpdmF0ZWx5IGZyb20gbWUsIHdoaWNoIGFsbCB0aGUgb3RoZXJzIGRpZCBub3QsIGJlIGFzc3VyZWQgdGhhdCBoZSBpcyBseWluZy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHdoeSB0aGVuIGRvIHNvbWUgcGVvcGxlIGxvdmUKPC90cmFuc2xhdGlvbj4="
translation['1.33.33c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzM2MiIHVuaXQ9InNlY3Rpb24iIC8+dG8gc3BlbmQgbXVjaCBvZiB0aGVpciB0aW1lIHdpdGggbWU/ICBZb3UgaGF2ZSBoZWFyZCB0aGUgcmVhc29uLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+OyAgZm9yIEkgdG9sZCB5b3UgdGhlIHdob2xlIHRydXRoOyAgaXQgaXMgYmVjYXVzZSB0aGV5IGxpa2UgdG8gbGlzdGVuIHdoZW4gdGhvc2UgYXJlIGV4YW1pbmVkIHdobyB0aGluayB0aGV5IGFyZSB3aXNlIGFuZCBhcmUgbm90IHNvOyAgZm9yIGl0IGlzIGFtdXNpbmcuICBCdXQsIGFzIEkgYmVsaWV2ZSwgSSBoYXZlIGJlZW4gY29tbWFuZGVkIHRvIGRvIHRoaXMgYnkgdGhlIEdvZCB0aHJvdWdoIG9yYWNsZXMgYW5kIGRyZWFtcyBhbmQgaW4gZXZlcnkgd2F5IGluIHdoaWNoIGFueSBtYW4gd2FzIGV2ZXIgY29tbWFuZGVkIGJ5IGRpdmluZSBwb3dlciB0byBkbyBhbnl0aGluZyB3aGF0c29ldmVyLiAgVGhpcywgQXRoZW5pYW5zLCBpcyB0cnVlIGFuZCBlYXNpbHkgdGVzdGVkLiAgRm9yIGlmIEkgYW0gY29ycnVwdGluZyBzb21lIG9mIHRoZSB5b3VuZyBtZW4KPC90cmFuc2xhdGlvbj4="
translation['1.33.33d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzM2QiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGhhdmUgY29ycnVwdGVkIG90aGVycywgc3VyZWx5IHNvbWUgb2YgdGhlbSB3aG8gaGF2ZSBncm93biBvbGRlciwgaWYgdGhleSByZWNvZ25pemUgdGhhdCBJIGV2ZXIgZ2F2ZSB0aGVtIGFueSBiYWQgYWR2aWNlIHdoZW4gdGhleSB3ZXJlIHlvdW5nLCBvdWdodCBub3cgdG8gaGF2ZSBjb21lIGZvcndhcmQgdG8gYWNjdXNlIG1lLiAgT3IgaWYgdGhleSBkaWQgbm90IHdpc2ggdG8gZG8gaXQgdGhlbXNlbHZlcywgc29tZSBvZiB0aGVpciByZWxhdGl2ZXPigJRmYXRoZXJzIG9yIGJyb3RoZXJzIG9yIG90aGVyIGtpbnNmb2xr4oCUb3VnaHQgbm93IHRvIHRlbGwgdGhlIGZhY3RzLiAgQW5kIHRoZXJlIGFyZSBtYW55IG9mIHRoZW0gcHJlc2VudCwgd2hvbSBJIHNlZTsgIGZpcnN0IENyaXRvIGhlcmUsCjwvdHJhbnNsYXRpb24+"
translation['1.33.33e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzM2UiIHVuaXQ9InNlY3Rpb24iIC8+d2hvIGlzIG9mIG15IG93biBhZ2UgYW5kIG15IG93biBkZW1lIGFuZCBmYXRoZXIgb2YgQ3JpdG9idWx1cywgd2hvIGlzIGFsc28gcHJlc2VudDsgIHRoZW4gdGhlcmUgaXMgTHlzYW5pYXMgdGhlIFNwaGV0dGlhbiwgZmF0aGVyIG9mIEFlc2NoaW5lcywgd2hvIGlzIGhlcmU7ICBhbmQgYWxzbyBBbnRpcGhvbiBvZiBDZXBoaXN1cywgZmF0aGVyIG9mIEVwaWdlbmVzLiAgVGhlbiBoZXJlIGFyZSBvdGhlcnMgd2hvc2UgYnJvdGhlcnMgam9pbmVkIGluIG15IGNvbnZlcnNhdGlvbnMsIE5pY29zdHJhdHVzLCBzb24gb2YgVGhlb3pvdGlkZXMgYW5kIGJyb3RoZXIgb2YgVGhlb2RvdHVzIChub3cgVGhlb2RvdHVzIGlzIGRlYWQsIHNvIGhlIGNvdWxkIG5vdCBzdG9wIGhpbSBieSBlbnRyZWF0aWVzKSwgYW5kIFBhcmFsdXMsIHNvbiBvZiBEZW1vZG9jdXM7ICBUaGVhZ2VzIHdhcyBoaXMgYnJvdGhlcjsgIGFuZAo8L3RyYW5zbGF0aW9uPg=="
translation['1.34.34a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzRhIiB1bml0PSJzZWN0aW9uIiAvPkFkaW1hbnR1cywgc29uIG9mIEFyaXN0bywgd2hvc2UgYnJvdGhlciBpcyBQbGF0byBoZXJlOyAgYW5kIEFlYW50b2RvcnVzLCB3aG9zZSBicm90aGVyIEFwb2xsb2RvcnVzIGlzIHByZXNlbnQuICBBbmQgSSBjYW4gbWVudGlvbiB0byB5b3UgbWFueSBvdGhlcnMsIHNvbWUgb25lIG9mIHdob20gTWVsZXR1cyBvdWdodCBjZXJ0YWlubHkgdG8gaGF2ZSBwcm9kdWNlZCBhcyBhIHdpdG5lc3MgaW4gaGlzIHNwZWVjaDsgIGJ1dCBpZiBoZSBmb3Jnb3QgaXQgdGhlbiwgbGV0IGhpbSBkbyBzbyBub3c7ICBJIHlpZWxkIHRoZSBmbG9vciB0byBoaW0sIGFuZCBsZXQgaGltIHNheSwgaWYgaGUgaGFzIGFueSBzdWNoIHRlc3RpbW9ueS4gIEJ1dCB5b3Ugd2lsbCBmaW5kIHRoYXQgdGhlIGV4YWN0IG9wcG9zaXRlIGlzIHRoZSBjYXNlLCBnZW50bGVtZW4sIGFuZCB0aGF0IHRoZXkgYXJlIGFsbCByZWFkeSB0byBhaWQgbWUsIHRoZSBtYW4gd2hvIGNvcnJ1cHRzIGFuZCBpbmp1cmVzIHRoZWlyIHJlbGF0aXZlcywgYXMgTWVsZXR1cyBhbmQgQW55dHVzIHNheS4gCjwvdHJhbnNsYXRpb24+"
translation['1.34.34b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNGIiIHVuaXQ9InNlY3Rpb24iIC8+Tm93IHRob3NlIHdobyBhcmUgdGhlbXNlbHZlcyBjb3JydXB0ZWQgbWlnaHQgaGF2ZSBzb21lIG1vdGl2ZSBpbiBhaWRpbmcgbWU7ICBidXQgd2hhdCByZWFzb24gY291bGQgdGhlaXIgcmVsYXRpdmVzIGhhdmUsIHdobyBhcmUgbm90IGNvcnJ1cHRlZCBhbmQgYXJlIGFscmVhZHkgb2xkZXIgbWVuLCB1bmxlc3MgaXQgYmUgdGhlIHJpZ2h0IGFuZCB0cnVlIHJlYXNvbiwgdGhhdCB0aGV5IGtub3cgdGhhdCBNZWxldHVzIGlzIGx5aW5nIGFuZCBJIGFtIHNwZWFraW5nIHRoZSB0cnV0aD88bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2VsbCwgZ2VudGxlbWVuLCB0aGlzLCBhbmQgcGVyaGFwcyBtb3JlIGxpa2UgdGhpcywgaXMgYWJvdXQgYWxsIEkgaGF2ZSB0byBzYXkgaW4gbXkgZGVmZW5jZS4gIFBlcmhhcHMgc29tZSBvbmUgYW1vbmcgeW91IG1heSBiZSBvZmZlbmRlZAo8L3RyYW5zbGF0aW9uPg=="
translation['1.34.34c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNGMiIHVuaXQ9InNlY3Rpb24iIC8+d2hlbiBoZSByZW1lbWJlcnMgaGlzIG93biBjb25kdWN0LCBpZiBoZSwgZXZlbiBpbiBhIGNhc2Ugb2YgbGVzcyBpbXBvcnRhbmNlIHRoYW4gdGhpcywgYmVnZ2VkIGFuZCBiZXNvdWdodCB0aGUganVkZ2VzIHdpdGggbWFueSB0ZWFycywgYW5kIGJyb3VnaHQgZm9yd2FyZCBoaXMgY2hpbGRyZW4gdG8gYXJvdXNlIGNvbXBhc3Npb24sIGFuZCBtYW55IG90aGVyIGZyaWVuZHMgYW5kIHJlbGF0aXZlczsgIHdoZXJlYXMgSSB3aWxsIGRvIG5vbmUgb2YgdGhlc2UgdGhpbmdzLCB0aG91Z2ggSSBhbSwgYXBwYXJlbnRseSwgaW4gdGhlIHZlcnkgZ3JlYXRlc3QgZGFuZ2VyLiAgUGVyaGFwcyBzb21lIG9uZSB3aXRoIHRoZXNlIHRob3VnaHRzIGluIG1pbmQgbWF5IGJlIGhhcnNobHkgZGlzcG9zZWQgdG93YXJkIG1lIGFuZCBtYXkgY2FzdCBoaXMgdm90ZSBpbiBhbmdlci4gIE5vdyBpZiBhbnkgb25lIG9mIHlvdSBpcyBzbyBkaXNwb3NlZCAKICAgIDwvdHJhbnNsYXRpb24+"
translation['1.34.34d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNGQiIHVuaXQ9InNlY3Rpb24iIC8+4oCUSSBkbyBub3QgYmVsaWV2ZSB0aGVyZSBpcyBzdWNoIGEgcGVyc29u4oCUYnV0IGlmIHRoZXJlIHNob3VsZCBiZSwgSSB0aGluayBJIHNob3VsZCBiZSBzcGVha2luZyBmYWlybHkgaWYgSSBzYWlkIHRvIGhpbSwgTXkgZnJpZW5kLCBJIHRvbyBoYXZlIHJlbGF0aXZlcywgZm9yIEkgYW0sIGFzIEhvbWVyIGhhcyBpdCwgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+bm90IGJvcm4gb2YgYW4gb2FrIG9yIGEgcm9jayw8L2w+PC9xdW90ZT48bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPm5vdCBib3JuIG9mIGFuIG9hayBvciBhIHJvY2ssPC9sPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iTG9lYiIgcGxhY2U9InVuc3BlY2lmaWVkIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIE9kLiAxOS4xNjMiIHZhbGlkPSJ5ZXMiPkhvbS4gT2QuIDE5LjE2MzwvYmlibD4uPC9ub3RlPmJ1dCBvZiBodW1hbiBwYXJlbnRzLCBzbyB0aGF0IEkgaGF2ZSByZWxhdGl2ZXMgYW5kLCBtZW4gb2YgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBPZC4gMTkuMTYzIiB2YWxpZD0ieWVzIj5Ib20uIE9kLiAxOS4xNjM8L2JpYmw+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgSSBoYXZlIHRocmVlIHNvbnMsIG9uZSBuZWFybHkgZ3Jvd24gdXAsIGFuZCB0d28gc3RpbGwgY2hpbGRyZW47ICBidXQgbmV2ZXJ0aGVsZXNzIEkgc2hhbGwgbm90IGJyaW5nIGFueSBvZiB0aGVtIGhlcmUgYW5kIGJlZyB5b3UgdG8gYWNxdWl0IG1lLiAgQW5kIHdoeSBzaGFsbCBJIG5vdCBkbyBzbz8gIE5vdCBiZWNhdXNlIEkgYW0gc3R1YmJvcm4sIEF0aGVuaWFucywKPC90cmFuc2xhdGlvbj4="
translation['1.34.34e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNGUiIHVuaXQ9InNlY3Rpb24iIC8+b3IgbGFjayByZXNwZWN0IGZvciB5b3UuICBXaGV0aGVyIEkgZmVhciBkZWF0aCBvciBub3QgaXMgYW5vdGhlciBtYXR0ZXIsIGJ1dCBmb3IgdGhlIHNha2Ugb2YgbXkgZ29vZCBuYW1lIGFuZCB5b3VycyBhbmQgdGhhdCBvZiB0aGUgd2hvbGUgc3RhdGUsIEkgdGhpbmsgaXQgaXMgbm90IHJpZ2h0IGZvciBtZSB0byBkbyBhbnkgb2YgdGhlc2UgdGhpbmdzIGluIHZpZXcgb2YgbXkgYWdlIGFuZCBteSByZXB1dGF0aW9uLCB3aGV0aGVyIGRlc2VydmVkIG9yIG5vdDsgIGZvciBhdCBhbnkgcmF0ZSB0aGUgb3BpbmlvbiBwcmV2YWlscyB0aGF0IFNvY3JhdGVzCjwvdHJhbnNsYXRpb24+"
translation['1.35.35a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzVhIiB1bml0PSJzZWN0aW9uIiAvPmlzIGluIHNvbWUgd2F5IHN1cGVyaW9yIHRvIG1vc3QgbWVuLiAgSWYgdGhlbiB0aG9zZSBvZiB5b3Ugd2hvIGFyZSBzdXBwb3NlZCB0byBiZSBzdXBlcmlvciBlaXRoZXIgaW4gd2lzZG9tIG9yIGluIGNvdXJhZ2Ugb3IgaW4gYW55IG90aGVyIHZpcnR1ZSB3aGF0c29ldmVyIGFyZSB0byBiZWhhdmUgaW4gc3VjaCBhIHdheSwgaXQgd291bGQgYmUgZGlzZ3JhY2VmdWwuICBXaHksIEkgaGF2ZSBvZnRlbiBzZWVuIG1lbiB3aG8gaGF2ZSBzb21lIHJlcHV0YXRpb24gYmVoYXZpbmcgaW4gdGhlIHN0cmFuZ2VzdCBtYW5uZXIsIHdoZW4gdGhleSB3ZXJlIG9uIHRyaWFsLCBhcyBpZiB0aGV5IHRob3VnaHQgdGhleSB3ZXJlIGdvaW5nIHRvIHN1ZmZlciBzb21ldGhpbmcgdGVycmlibGUgaWYgdGhleSB3ZXJlIHB1dCB0byBkZWF0aCwganVzdCBhcyBpZiB0aGV5IHdvdWxkIGJlIGltbW9ydGFsIGlmIHlvdSBkaWQgbm90IGtpbGwgdGhlbS4gIEl0IHNlZW1zIHRvIG1lIHRoYXQgdGhleSBhcmUgYSBkaXNncmFjZSB0byB0aGUgc3RhdGUgYW5kIHRoYXQgYW55IHN0cmFuZ2VyIG1pZ2h0IHNheSB0aGF0IHRob3NlIG9mIHRoZSBBdGhlbmlhbnMgd2hvIGV4Y2VsCjwvdHJhbnNsYXRpb24+"
translation['1.35.35b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNWIiIHVuaXQ9InNlY3Rpb24iIC8+aW4gdmlydHVlLCBtZW4gd2hvbSB0aGV5IHRoZW1zZWx2ZXMgaG9ub3Igd2l0aCBvZmZpY2VzIGFuZCBvdGhlciBtYXJrcyBvZiBlc3RlZW0sIGFyZSBubyBiZXR0ZXIgdGhhbiB3b21lbi4gIFN1Y2ggYWN0cywgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgd2Ugd2hvIGhhdmUgYW55IHJlcHV0YXRpb24gYXQgYWxsIG91Z2h0IG5vdCB0byBjb21taXQsIGFuZCBpZiB3ZSBjb21taXQgdGhlbSB5b3Ugb3VnaHQgbm90IHRvIGFsbG93IGl0LCBidXQgeW91IHNob3VsZCBtYWtlIGl0IGNsZWFyIHRoYXQgeW91IHdpbGwgYmUgbXVjaCBtb3JlIHJlYWR5IHRvIGNvbmRlbW4gYSBtYW4gd2hvIHB1dHMgYmVmb3JlIHlvdSBzdWNoIHBpdGlhYmxlIHNjZW5lcyBhbmQgbWFrZXMgdGhlIGNpdHkgcmlkaWN1bG91cyB0aGFuIG9uZSB3aG8ga2VlcHMgcXVpZXQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBhcGFydCBmcm9tIHRoZSBxdWVzdGlvbiBvZiByZXB1dGF0aW9uLCBnZW50bGVtZW4sIEkgdGhpbmsgaXQgaXMgbm90IHJpZ2h0CjwvdHJhbnNsYXRpb24+"
translation['1.35.35c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNWMiIHVuaXQ9InNlY3Rpb24iIC8+dG8gaW1wbG9yZSB0aGUganVkZ2Ugb3IgdG8gZ2V0IGFjcXVpdHRlZCBieSBiZWdnaW5nOyAgd2Ugb3VnaHQgdG8gaW5mb3JtIGFuZCBjb252aW5jZSBoaW0uICBGb3IgdGhlIGp1ZGdlIGlzIG5vdCBoZXJlIHRvIGdyYW50IGZhdm9ycyBpbiBtYXR0ZXJzIG9mIGp1c3RpY2UsIGJ1dCB0byBnaXZlIGp1ZGdlbWVudDsgIGFuZCBoaXMgb2F0aCBiaW5kcyBoaW0gbm90IHRvIGRvIGZhdm9ycyBhY2NvcmRpbmcgdG8gaGlzIHBsZWFzdXJlLCBidXQgdG8ganVkZ2UgYWNjb3JkaW5nIHRvIHRoZSBsYXdzOyAgdGhlcmVmb3JlLCB3ZSBvdWdodCBub3QgdG8gZ2V0IHlvdSBpbnRvIHRoZSBoYWJpdCBvZiBicmVha2luZyB5b3VyIG9hdGhzLCBub3Igb3VnaHQgeW91IHRvIGZhbGwgaW50byB0aGF0IGhhYml0OyAgZm9yIG5laXRoZXIgb2YgdXMgd291bGQgYmUgYWN0aW5nIHBpb3VzbHkuICBEbyBub3QsIHRoZXJlZm9yZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgZGVtYW5kIG9mIG1lIHRoYXQgSSBhY3QgYmVmb3JlIHlvdSBpbiBhIHdheSB3aGljaCBJIGNvbnNpZGVyIG5laXRoZXIgaG9ub3JhYmxlIG5vciByaWdodCBub3IgcGlvdXMsCjwvdHJhbnNsYXRpb24+"
translation['1.35.35d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNWQiIHVuaXQ9InNlY3Rpb24iIC8+ZXNwZWNpYWxseSB3aGVuIGltcGlldHkgaXMgdGhlIHZlcnkgdGhpbmcgZm9yIHdoaWNoIE1lbGV0dXMgaGVyZSBoYXMgYnJvdWdodCBtZSB0byB0cmlhbC4gIEZvciBpdCBpcyBwbGFpbiB0aGF0IGlmIGJ5IHBlcnN1YXNpb24gYW5kIHN1cHBsaWNhdGlvbiBJIGZvcmNlZCB5b3UgdG8gYnJlYWsgeW91ciBvYXRocyBJIHNob3VsZCB0ZWFjaCB5b3UgdG8gZGlzYmVsaWV2ZSBpbiB0aGUgZXhpc3RlbmNlIG9mIHRoZSBnb2RzIGFuZCBpbiBtYWtpbmcgbXkgZGVmZW5jZSBzaG91bGQgYWNjdXNlIG15c2VsZiBvZiBub3QgYmVsaWV2aW5nIGluIHRoZW0uICBCdXQgdGhhdCBpcyBmYXIgZnJvbSB0aGUgdHJ1dGg7ICBmb3IgSSBkbyBiZWxpZXZlIGluIHRoZW0sIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIG1vcmUgdGhhbiBhbnkgb2YgbXkgYWNjdXNlcnMsIGFuZCBJIGVudHJ1c3QgbXkgY2FzZSB0byB5b3UgYW5kIHRvIEdvZCB0byBkZWNpZGUgaXQgYXMgc2hhbGwgYmUgYmVzdCBmb3IgbWUgYW5kIGZvciB5b3UuCjwvdHJhbnNsYXRpb24+"
translation['2.35.35e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzcGVlY2giIC8+CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNWUiIHVuaXQ9InNlY3Rpb24iIC8+IEkgYW0gbm90IGdyaWV2ZWQsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sCjwvdHJhbnNsYXRpb24+"
translation['2.36.36a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzZhIiB1bml0PSJzZWN0aW9uIiAvPmF0IHRoaXMgdm90ZSBvZiBjb25kZW1uYXRpb24geW91IGhhdmUgY2FzdCBhZ2FpbnN0IG1lLCBhbmQgdGhhdCBmb3IgbWFueSByZWFzb25zLCBhbW9uZyB0aGVtIHRoZSBmYWN0IHRoYXQgeW91ciBkZWNpc2lvbiB3YXMgbm90IGEgc3VycHJpc2UgdG8gbWUuICBJIGFtIG11Y2ggbW9yZSBzdXJwcmlzZWQgYnkgdGhlIG51bWJlciBvZiB2b3RlcyBmb3IgYW5kIGFnYWluc3QgaXQ7ICBmb3IgSSBkaWQgbm90IGV4cGVjdCBzbyBzbWFsbCBhIG1ham9yaXR5LCBidXQgYSBsYXJnZSBvbmUuICBOb3csIGl0IHNlZW1zLCBpZiBvbmx5IHRoaXJ0eSB2b3RlcyBoYWQgYmVlbiBjYXN0IHRoZSBvdGhlciB3YXksIEkgc2hvdWxkIGhhdmUgYmVlbiBhY3F1aXR0ZWQuICBBbmQgc28sIEkgdGhpbmssIHNvIGZhciBhcyBNZWxldHVzIGlzIGNvbmNlcm5lZCwgSSBoYXZlIGV2ZW4gbm93IGJlZW4gYWNxdWl0dGVkLCBhbmQgbm90IG1lcmVseSBhY3F1aXR0ZWQsIGJ1dCBhbnlvbmUgY2FuIHNlZSB0aGF0LCBpZiBBbnl0dXMgYW5kIEx5Y29uIGhhZCBub3QgY29tZSBmb3J3YXJkIHRvIGFjY3VzZSBtZSwgaGUgd291bGQgaGF2ZSBiZWVuIGZpbmVkCjwvdHJhbnNsYXRpb24+"
translation['2.36.36b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNmIiIHVuaXQ9InNlY3Rpb24iIC8+YSB0aG91c2FuZCBkcmFjaG1hcyBmb3Igbm90IHJlY2VpdmluZyBhIGZpZnRoIHBhcnQgb2YgdGhlIHZvdGVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgc28gdGhlIG1hbiBwcm9wb3NlcyB0aGUgcGVuYWx0eSBvZiBkZWF0aC4gIFdlbGwsIHRoZW4sIHdoYXQgc2hhbGwgSSBwcm9wb3NlIGFzIGFuIGFsdGVybmF0aXZlPyAgQ2xlYXJseSB0aGF0IHdoaWNoIEkgZGVzZXJ2ZSwgc2hhbGwgSSBub3Q/ICBBbmQgd2hhdCBkbyBJIGRlc2VydmUgdG8gc3VmZmVyIG9yIHRvIHBheSwgYmVjYXVzZSBpbiBteSBsaWZlIEkgZGlkIG5vdCBrZWVwIHF1aWV0LCBidXQgbmVnbGVjdGluZyB3aGF0IG1vc3QgbWVuIGNhcmUgZm9y4oCUbW9uZXktbWFraW5nIGFuZCBwcm9wZXJ0eSwgYW5kIG1pbGl0YXJ5IG9mZmljZXMsIGFuZCBwdWJsaWMgc3BlYWtpbmcsIGFuZCB0aGUgdmFyaW91cyBvZmZpY2VzIGFuZCBwbG90cyBhbmQgcGFydGllcyB0aGF0IGNvbWUgdXAgaW4gdGhlIHN0YXRl4oCUYW5kIHRoaW5raW5nIHRoYXQgSSB3YXMgcmVhbGx5IHRvbyBob25vcmFibGUKPC90cmFuc2xhdGlvbj4="
translation['2.36.36c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNmMiIHVuaXQ9InNlY3Rpb24iIC8+dG8gZW5nYWdlIGluIHRob3NlIGFjdGl2aXRpZXMgYW5kIGxpdmUsIHJlZnJhaW5lZCBmcm9tIHRob3NlIHRoaW5ncyBieSB3aGljaCBJIHNob3VsZCBoYXZlIGJlZW4gb2Ygbm8gdXNlIHRvIHlvdSBvciB0byBteXNlbGYsIGFuZCBkZXZvdGVkIG15c2VsZiB0byBjb25mZXJyaW5nIHVwb24gZWFjaCBjaXRpemVuIGluZGl2aWR1YWxseSB3aGF0IEkgcmVnYXJkIGFzIHRoZSBncmVhdGVzdCBiZW5lZml0PyAgRm9yIEkgdHJpZWQgdG8gcGVyc3VhZGUgZWFjaCBvZiB5b3UgdG8gY2FyZSBmb3IgaGltc2VsZiBhbmQgaGlzIG93biBwZXJmZWN0aW9uIGluIGdvb2RuZXNzIGFuZCB3aXNkb20gcmF0aGVyIHRoYW4gZm9yIGFueSBvZiBoaXMgYmVsb25naW5ncywgYW5kIGZvciB0aGUgc3RhdGUgaXRzZWxmIHJhdGhlciB0aGFuIGZvciBpdHMgaW50ZXJlc3RzLCBhbmQgdG8gZm9sbG93IHRoZSBzYW1lIG1ldGhvZCBpbiBoaXMgY2FyZSBmb3Igb3RoZXIgdGhpbmdzLiAgV2hhdCwgdGhlbiwgZG9lcyBzdWNoIGEgbWFuIGFzIEkgZGVzZXJ2ZT8gCjwvdHJhbnNsYXRpb24+"
translation['2.36.36d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNmQiIHVuaXQ9InNlY3Rpb24iIC8+U29tZSBnb29kIHRoaW5nLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBpZiBJIG11c3QgcHJvcG9zZSBzb21ldGhpbmcgdHJ1bHkgaW4gYWNjb3JkYW5jZSB3aXRoIG15IGRlc2VydHM7ICBhbmQgdGhlIGdvb2QgdGhpbmcgc2hvdWxkIGJlIHN1Y2ggYXMgaXMgZml0dGluZyBmb3IgbWUuICBOb3cgd2hhdCBpcyBmaXR0aW5nIGZvciBhIHBvb3IgbWFuIHdobyBpcyB5b3VyIGJlbmVmYWN0b3IsIGFuZCB3aG8gbmVlZHMgbGVpc3VyZSB0byBleGhvcnQgeW91PyAgVGhlcmUgaXMgbm90aGluZywgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgc28gZml0dGluZyBhcyB0aGF0IHN1Y2ggYSBtYW4gYmUgZ2l2ZW4gaGlzIG1lYWxzIGluIHRoZSBwcnl0YW5ldW0uICBUaGF0IGlzIG11Y2ggbW9yZSBhcHByb3ByaWF0ZSBmb3IgbWUgdGhhbiBmb3IgYW55IG9mIHlvdSB3aG8gaGFzIHdvbiBhIHJhY2UgYXQgdGhlIE9seW1waWMgZ2FtZXMgd2l0aCBhIHBhaXIgb2YgaG9yc2VzIG9yIGEgZm91ci1pbi1oYW5kLiAgRm9yIGhlIG1ha2VzIHlvdSBzZWVtIHRvIGJlIGhhcHB5LCB3aGVyZWFzIEkgbWFrZSB5b3UgaGFwcHkgaW4gcmVhbGl0eTsgCjwvdHJhbnNsYXRpb24+"
translation['2.36.36e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNmUiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGhlIGlzIG5vdCBhdCBhbGwgaW4gbmVlZCBvZiBzdXN0ZW5hbmNlLCBidXQgSSBhbSBuZWVkeS4gIFNvIGlmIEkgbXVzdCBwcm9wb3NlIGEgcGVuYWx0eSBpbiBhY2NvcmRhbmNlIHdpdGggbXkgZGVzZXJ0cywKPC90cmFuc2xhdGlvbj4="
translation['2.37.37a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzdhIiB1bml0PSJzZWN0aW9uIiAvPkkgcHJvcG9zZSBtYWludGVuYW5jZSBpbiB0aGUgcHJ5dGFuZXVtLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5QZXJoYXBzIHNvbWUgb2YgeW91IHRoaW5rIHRoYXQgaW4gc2F5aW5nIHRoaXMsIGFzIGluIHdoYXQgSSBzYWlkIGFib3V0IGxhbWVudGluZyBhbmQgaW1wbG9yaW5nLCBJIGFtIHNwZWFraW5nIGluIGEgc3Bpcml0IG9mIGJyYXZhZG87ICBidXQgdGhhdCBpcyBub3QgdGhlIGNhc2UuICBUaGUgdHJ1dGggaXMgcmF0aGVyIHRoYXQgSSBhbSBjb252aW5jZWQgdGhhdCBJIG5ldmVyIGludGVudGlvbmFsbHkgd3JvbmdlZCBhbnlvbmU7ICBidXQgSSBjYW5ub3QgY29udmluY2UgeW91IG9mIHRoaXMsIGZvciB3ZSBoYXZlIGNvbnZlcnNlZCB3aXRoIGVhY2ggb3RoZXIgb25seSBhIGxpdHRsZSB3aGlsZS4gIEkgYmVsaWV2ZSBpZiB5b3UgaGFkIGEgbGF3LCBhcyBzb21lIG90aGVyIHBlb3BsZSBoYXZlLAo8L3RyYW5zbGF0aW9uPg=="
translation['2.37.37b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzN2IiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBjYXBpdGFsIGNhc2VzIHNob3VsZCBub3QgYmUgZGVjaWRlZCBpbiBvbmUgZGF5LCBidXQgb25seSBhZnRlciBzZXZlcmFsIGRheXMsIHlvdSB3b3VsZCBiZSBjb252aW5jZWQ7ICBidXQgbm93IGl0IGlzIG5vdCBlYXN5IHRvIHJpZCB5b3Ugb2YgZ3JlYXQgcHJlanVkaWNlcyBpbiBhIHNob3J0IHRpbWUuICBTaW5jZSwgdGhlbiwgSSBhbSBjb252aW5jZWQgdGhhdCBJIG5ldmVyIHdyb25nZWQgYW55IG9uZSwgSSBhbSBjZXJ0YWlubHkgbm90IGdvaW5nIHRvIHdyb25nIG15c2VsZiwgYW5kIHRvIHNheSBvZiBteXNlbGYgdGhhdCBJIGRlc2VydmUgYW55dGhpbmcgYmFkLCBhbmQgdG8gcHJvcG9zZSBhbnkgcGVuYWx0eSBvZiB0aGF0IHNvcnQgZm9yIG15c2VsZi4gIFdoeSBzaG91bGQgST8gIFRocm91Z2ggZmVhciBvZiB0aGUgcGVuYWx0eSB0aGF0IE1lbGV0dXMgcHJvcG9zZXMsIGFib3V0IHdoaWNoIEkgc2F5IHRoYXQgSSBkbyBub3Qga25vdyB3aGV0aGVyIGl0IGlzIGEgZ29vZCB0aGluZyBvciBhbiBldmlsPyAgU2hhbGwgSSBjaG9vc2UgaW5zdGVhZCBvZiB0aGF0IHNvbWV0aGluZyB3aGljaCBJIGtub3cgdG8gYmUgYW4gZXZpbD8gIFdoYXQgcGVuYWx0eSBzaGFsbCBJIHByb3Bvc2U/ICBJbXByaXNvbm1lbnQ/IAo8L3RyYW5zbGF0aW9uPg=="
translation['2.37.37c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzN2MiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIHdoeSBzaG91bGQgSSBsaXZlIGluIHByaXNvbiBhIHNsYXZlIHRvIHRob3NlIHdobyBtYXkgYmUgaW4gYXV0aG9yaXR5PyAgT3Igc2hhbGwgSSBwcm9wb3NlIGEgZmluZSwgd2l0aCBpbXByaXNvbm1lbnQgdW50aWwgaXQgaXMgcGFpZD8gIEJ1dCB0aGF0IGlzIHRoZSBzYW1lIGFzIHdoYXQgSSBzYWlkIGp1c3Qgbm93LCBmb3IgSSBoYXZlIG5vIG1vbmV5IHRvIHBheSB3aXRoLiAgU2hhbGwgSSB0aGVuIHByb3Bvc2UgZXhpbGUgYXMgbXkgcGVuYWx0eT8gIFBlcmhhcHMgeW91IHdvdWxkIGFjY2VwdCB0aGF0LiAgSSBtdXN0IGluZGVlZCBiZSBwb3NzZXNzZWQgYnkgYSBncmVhdCBsb3ZlIG9mIGxpZmUgaWYgSSBhbSBzbyBpcnJhdGlvbmFsIGFzIG5vdCB0byBrbm93IHRoYXQgaWYgeW91LCB3aG8gYXJlIG15IGZlbGxvdyBjaXRpemVucywgY291bGQgbm90CjwvdHJhbnNsYXRpb24+"
translation['2.37.37d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzN2QiIHVuaXQ9InNlY3Rpb24iIC8+ZW5kdXJlIG15IGNvbnZlcnNhdGlvbiBhbmQgbXkgd29yZHMsIGJ1dCBmb3VuZCB0aGVtIHRvbyBpcmtzb21lIGFuZCBkaXNhZ3JlZWFibGUsIHNvIHRoYXQgeW91IGFyZSBub3cgc2Vla2luZyB0byBiZSByaWQgb2YgdGhlbSwgb3RoZXJzIHdpbGwgbm90IGJlIHdpbGxpbmcgdG8gZW5kdXJlIHRoZW0uICBObywgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhleSBjZXJ0YWlubHkgd2lsbCBub3QuICBBIGZpbmUgbGlmZSBJIHNob3VsZCBsZWFkIGlmIEkgd2VudCBhd2F5IGF0IG15IHRpbWUgb2YgbGlmZSwgd2FuZGVyaW5nIGZyb20gY2l0eSB0byBjaXR5IGFuZCBhbHdheXMgYmVpbmcgZHJpdmVuIG91dCEgIEZvciB3ZWxsIEkga25vdyB0aGF0IHdoZXJldmVyIEkgZ28sIHRoZSB5b3VuZyBtZW4gd2lsbCBsaXN0ZW4gdG8gbXkgdGFsaywgYXMgdGhleSBkbyBoZXJlOyAgYW5kIGlmIEkgZHJpdmUgdGhlbSBhd2F5LCB0aGV5IHdpbGwgdGhlbXNlbHZlcyBwZXJzdWFkZSB0aGVpciBlbGRlcnMgdG8gZHJpdmUgbWUgb3V0LCBhbmQgaWYKPC90cmFuc2xhdGlvbj4="
translation['2.37.37e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzN2UiIHVuaXQ9InNlY3Rpb24iIC8+SSBkbyBub3QgZHJpdmUgdGhlbSBhd2F5LCB0aGVpciBmYXRoZXJzIGFuZCByZWxhdGl2ZXMgd2lsbCBkcml2ZSBtZSBvdXQgZm9yIHRoZWlyIHNha2VzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5QZXJoYXBzIHNvbWVvbmUgbWlnaHQgc2F5LCDigJxTb2NyYXRlcywgY2FuIHlvdSBub3QgZ28gYXdheSBmcm9tIHVzIGFuZCBsaXZlIHF1aWV0bHksIHdpdGhvdXQgdGFsa2luZz/igJ0gIE5vdyB0aGlzIGlzIHRoZSBoYXJkZXN0IHRoaW5nIHRvIG1ha2Ugc29tZSBvZiB5b3UgYmVsaWV2ZS4gIEZvciBpZiBJIHNheSB0aGF0IHN1Y2ggY29uZHVjdCB3b3VsZCBiZSBkaXNvYmVkaWVuY2UgdG8gdGhlIGdvZCBhbmQgdGhhdCB0aGVyZWZvcmUgSSBjYW5ub3Qga2VlcCBxdWlldCwgeW91IHdpbGwgdGhpbmsgSSBhbSBqZXN0aW5nIGFuZCB3aWxsIG5vdCBiZWxpZXZlIG1lOyAKPC90cmFuc2xhdGlvbj4="
translation['2.38.38a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzhhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBpZiBhZ2FpbiBJIHNheSB0aGF0IHRvIHRhbGsgZXZlcnkgZGF5IGFib3V0IHZpcnR1ZSBhbmQgdGhlIG90aGVyIHRoaW5ncyBhYm91dCB3aGljaCB5b3UgaGVhciBtZSB0YWxraW5nIGFuZCBleGFtaW5pbmcgbXlzZWxmIGFuZCBvdGhlcnMgaXMgdGhlIGdyZWF0ZXN0IGdvb2QgdG8gbWFuLCBhbmQgdGhhdCB0aGUgdW5leGFtaW5lZCBsaWZlIGlzIG5vdCB3b3J0aCBsaXZpbmcsIHlvdSB3aWxsIGJlbGlldmUgbWUgc3RpbGwgbGVzcy4gIFRoaXMgaXMgYXMgSSBzYXksIGdlbnRsZW1lbiwgYnV0IGl0IGlzIG5vdCBlYXN5IHRvIGNvbnZpbmNlIHlvdS4gIEJlc2lkZXMsIEkgYW0gbm90IGFjY3VzdG9tZWQgdG8gdGhpbmsgdGhhdCBJIGRlc2VydmUgYW55dGhpbmcgYmFkLiAgSWYgSSBoYWQgbW9uZXksIEkgd291bGQgaGF2ZSBwcm9wb3NlZCBhIGZpbmUsCjwvdHJhbnNsYXRpb24+"
translation['2.38.38b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOGIiIHVuaXQ9InNlY3Rpb24iIC8+YXMgbGFyZ2UgYXMgSSBjb3VsZCBwYXk7ICBmb3IgdGhhdCB3b3VsZCBoYXZlIGRvbmUgbWUgbm8gaGFybS4gIEJ1dCBhcyBpdCBpc+KAlEkgaGF2ZSBubyBtb25leSwgdW5sZXNzIHlvdSBhcmUgd2lsbGluZyB0byBpbXBvc2UgYSBmaW5lIHdoaWNoIEkgY291bGQgcGF5LiAgSSBtaWdodCBwZXJoYXBzIHBheSBhIG1pbmEgb2Ygc2lsdmVyLiAgU28gSSBwcm9wb3NlIHRoYXQgcGVuYWx0eTsgIGJ1dCBQbGF0byBoZXJlLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBhbmQgQ3JpdG8gYW5kIENyaXRvYnVsdXMsIGFuZCBBcmlzdG9idWx1cyB0ZWxsIG1lIHRvIHByb3Bvc2UgYSBmaW5lIG9mIHRoaXJ0eSBtaW5hcywgc2F5aW5nIHRoYXQgdGhleSBhcmUgc3VyZXRpZXMgZm9yIGl0LiAgU28gSSBwcm9wb3NlIGEgZmluZSBvZiB0aGF0IGFtb3VudCwgYW5kIHRoZXNlIG1lbiwgd2hvIGFyZSBhbXBseSBzdWZmaWNpZW50LCB3aWxsIGJlIG15IHN1cmV0aWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.38.38c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzcGVlY2giIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM4YyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgaXMgbm8gbG9uZyB0aW1lLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB3aGljaCB5b3UgZ2FpbiwgYW5kIGZvciB0aGF0IHRob3NlIHdobyB3aXNoIHRvIGNhc3QgYSBzbHVyIHVwb24gdGhlIHN0YXRlIHdpbGwgZ2l2ZSB5b3UgdGhlIG5hbWUgYW5kIGJsYW1lIG9mIGhhdmluZyBraWxsZWQgU29jcmF0ZXMsIGEgd2lzZSBtYW47ICBmb3IsIHlvdSBrbm93LCB0aG9zZSB3aG8gd2lzaCB0byByZXZpbGUgeW91IHdpbGwgc2F5IEkgYW0gd2lzZSwgZXZlbiB0aG91Z2ggSSBhbSBub3QuICBOb3cgaWYgeW91IGhhZCB3YWl0ZWQgYSBsaXR0bGUgd2hpbGUsIHdoYXQgeW91IGRlc2lyZSB3b3VsZCBoYXZlIGNvbWUgdG8geW91IG9mIGl0cyBvd24gYWNjb3JkOyAgZm9yIHlvdSBzZWUgaG93IG9sZCBJIGFtLCBob3cgZmFyIGFkdmFuY2VkIGluIGxpZmUgYW5kIGhvdyBuZWFyIGRlYXRoLiAgSSBzYXkgdGhpcyBub3QgdG8gYWxsIG9mIHlvdSwKPC90cmFuc2xhdGlvbj4="
translation['3.38.38d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOGQiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IHRvIHRob3NlIHdobyB2b3RlZCBmb3IgbXkgZGVhdGguICBBbmQgdG8gdGhlbSBhbHNvIEkgaGF2ZSBzb21ldGhpbmcgZWxzZSB0byBzYXkuICBQZXJoYXBzIHlvdSB0aGluaywgZ2VudGxlbWVuLCB0aGF0IEkgaGF2ZSBiZWVuIGNvbnZpY3RlZCB0aHJvdWdoIGxhY2sgb2Ygc3VjaCB3b3JkcyBhcyB3b3VsZCBoYXZlIG1vdmVkIHlvdSB0byBhY3F1aXQgbWUsIGlmIEkgaGFkIHRob3VnaHQgaXQgcmlnaHQgdG8gZG8gYW5kIHNheSBldmVyeXRoaW5nIHRvIGdhaW4gYW4gYWNxdWl0dGFsLiAgRmFyIGZyb20gaXQuICBBbmQgeWV0IGl0IGlzIHRocm91Z2ggYSBsYWNrIHRoYXQgSSBoYXZlIGJlZW4gY29udmljdGVkLCBub3QgaG93ZXZlciBhIGxhY2sgb2Ygd29yZHMsIGJ1dCBvZiBpbXB1ZGVuY2UgYW5kIHNoYW1lbGVzc25lc3MsIGFuZCBvZiB3aWxsaW5nbmVzcyB0byBzYXkgdG8geW91IHN1Y2ggdGhpbmdzIGFzIHlvdSB3b3VsZCBoYXZlIGxpa2VkIGJlc3QgdG8gaGVhci4gIFlvdSB3b3VsZCBoYXZlIGxpa2VkIHRvIGhlYXIgbWUgd2FpbGluZyBhbmQgbGFtZW50aW5nIGFuZCBkb2luZyBhbmQgc2F5aW5nCjwvdHJhbnNsYXRpb24+"
translation['3.38.38e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOGUiIHVuaXQ9InNlY3Rpb24iIC8+bWFueSB0aGluZ3Mgd2hpY2ggYXJlLCBhcyBJIG1haW50YWluLCB1bndvcnRoeSBvZiBtZeKAlHN1Y2ggdGhpbmdzIGFzIHlvdSBhcmUgYWNjdXN0b21lZCB0byBoZWFyIGZyb20gb3RoZXJzLiAgQnV0IEkgZGlkIG5vdCB0aGluayBhdCB0aGUgdGltZSB0aGF0IEkgb3VnaHQsIG9uIGFjY291bnQgb2YgdGhlIGRhbmdlciBJIHdhcyBpbiwgdG8gZG8gYW55dGhpbmcgdW53b3J0aHkgb2YgYSBmcmVlIG1hbiwgbm9yIGRvIEkgbm93IHJlcGVudCBvZiBoYXZpbmcgbWFkZSBteSBkZWZlbmNlIGFzIEkgZGlkLCBidXQgSSBtdWNoIHByZWZlciB0byBkaWUgYWZ0ZXIgc3VjaCBhIGRlZmVuY2UgdGhhbiB0byBsaXZlIGFmdGVyIGEgZGVmZW5jZSBvZiB0aGUgb3RoZXIgc29ydC4gIEZvciBuZWl0aGVyIGluIHRoZSBjb3VydCBub3IgaW4gd2FyIG91Z2h0IEkKPC90cmFuc2xhdGlvbj4="
translation['3.39.39a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzlhIiB1bml0PSJzZWN0aW9uIiAvPm9yIGFueSBvdGhlciBtYW4gdG8gcGxhbiB0byBlc2NhcGUgZGVhdGggYnkgZXZlcnkgcG9zc2libGUgbWVhbnMuICBJbiBiYXR0bGVzIGl0IGlzIG9mdGVuIHBsYWluIHRoYXQgYSBtYW4gbWlnaHQgYXZvaWQgZGVhdGggYnkgdGhyb3dpbmcgZG93biBoaXMgYXJtcyBhbmQgYmVnZ2luZyBtZXJjeSBvZiBoaXMgcHVyc3VlcnM7ICBhbmQgdGhlcmUgYXJlIG1hbnkgb3RoZXIgbWVhbnMgb2YgZXNjYXBpbmcgZGVhdGggaW4gZGFuZ2VycyBvZiB2YXJpb3VzIGtpbmRzIGlmIG9uZSBpcyB3aWxsaW5nIHRvIGRvIGFuZCBzYXkgYW55dGhpbmcuICBCdXQsIGdlbnRsZW1lbiwgaXQgaXMgbm90IGhhcmQgdG8gZXNjYXBlIGRlYXRoOyAgaXQgaXMgbXVjaCBoYXJkZXIgdG8gZXNjYXBlIHdpY2tlZG5lc3MsIGZvciB0aGF0IHJ1bnMgZmFzdGVyIHRoYW4gZGVhdGguIAo8L3RyYW5zbGF0aW9uPg=="
translation['3.39.39b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOWIiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIG5vdyBJLCBzaW5jZSBJIGFtIHNsb3cgYW5kIG9sZCwgYW0gY2F1Z2h0IGJ5IHRoZSBzbG93ZXIgcnVubmVyLCBhbmQgbXkgYWNjdXNlcnMsIHdobyBhcmUgY2xldmVyIGFuZCBxdWljaywgYnkgdGhlIGZhc3Rlciwgd2lja2VkbmVzcy4gIEFuZCBub3cgSSBzaGFsbCBnbyBhd2F5IGNvbnZpY3RlZCBieSB5b3UgYW5kIHNlbnRlbmNlZCB0byBkZWF0aCwgYW5kIHRoZXkgZ28gY29udmljdGVkIGJ5IHRydXRoIG9mIHZpbGxhaW55IGFuZCB3cm9uZy4gIEFuZCBJIGFiaWRlIGJ5IG15IHBlbmFsdHksIGFuZCB0aGV5IGJ5IHRoZWlycy4gIFBlcmhhcHMgdGhlc2UgdGhpbmdzIGhhZCB0byBiZSBzbywgYW5kIEkgdGhpbmsgdGhleSBhcmUgd2VsbC4KPC90cmFuc2xhdGlvbj4="
translation['3.39.39c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOWMiIHVuaXQ9InNlY3Rpb24iIC8+IEFuZCBub3cgSSB3aXNoIHRvIHByb3BoZXN5IHRvIHlvdSwgTyB5ZSB3aG8gaGF2ZSBjb25kZW1uZWQgbWU7ICBmb3IgSSBhbSBub3cgYXQgdGhlIHRpbWUgd2hlbiBtZW4gbW9zdCBkbyBwcm9waGVzeSwgdGhlIHRpbWUganVzdCBiZWZvcmUgZGVhdGguICBBbmQgSSBzYXkgdG8geW91LCB5ZSBtZW4gd2hvIGhhdmUgc2xhaW4gbWUsIHRoYXQgcHVuaXNobWVudCB3aWxsIGNvbWUgdXBvbiB5b3Ugc3RyYWlnaHQtd2F5IGFmdGVyIG15IGRlYXRoLCBmYXIgbW9yZSBncmlldm91cyBpbiBzb290aCB0aGFuIHRoZSBwdW5pc2htZW50IG9mIGRlYXRoIHdoaWNoIHlvdSBoYXZlIG1ldGVkIG91dCB0byBtZS4gIEZvciBub3cgeW91IGhhdmUgZG9uZSB0aGlzIHRvIG1lIGJlY2F1c2UgeW91IGhvcGVkIHRoYXQgeW91IHdvdWxkIGJlIHJlbGlldmVkIGZyb20gcmVuZGVyaW5nIGFuIGFjY291bnQgb2YgeW91ciBsaXZlcywgYnV0IEkgc2F5IHRoYXQgeW91IHdpbGwgZmluZCB0aGUgcmVzdWx0IGZhciBkaWZmZXJlbnQuICBUaG9zZSB3aG8gd2lsbCBmb3JjZSB5b3UgdG8gZ2l2ZSBhbiBhY2NvdW50IHdpbGwgYmUgbW9yZSBudW1lcm91cyB0aGFuIGhlcmV0b2ZvcmU7IAo8L3RyYW5zbGF0aW9uPg=="
translation['3.39.39d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOWQiIHVuaXQ9InNlY3Rpb24iIC8+bWVuIHdob20gSSByZXN0cmFpbmVkLCB0aG91Z2ggeW91IGtuZXcgaXQgbm90OyAgYW5kIHRoZXkgd2lsbCBiZSBoYXJzaGVyLCBpbmFzbXVjaCBhcyB0aGV5IGFyZSB5b3VuZ2VyLCBhbmQgeW91IHdpbGwgYmUgbW9yZSBhbm5veWVkLiAgRm9yIGlmIHlvdSB0aGluayB0aGF0IGJ5IHB1dHRpbmcgbWVuIHRvIGRlYXRoIHlvdSB3aWxsIHByZXZlbnQgYW55b25lIGZyb20gcmVwcm9hY2hpbmcgeW91IGJlY2F1c2UgeW91IGRvIG5vdCBhY3QgYXMgeW91IHNob3VsZCwgeW91IGFyZSBtaXN0YWtlbi4gIFRoYXQgbW9kZSBvZiBlc2NhcGUgaXMgbmVpdGhlciBwb3NzaWJsZSBhdCBhbGwgbm9yIGhvbm9yYWJsZSwgYnV0IHRoZSBlYXNpZXN0IGFuZCBtb3N0IGhvbm9yYWJsZSBlc2NhcGUgaXMgbm90IGJ5IHN1cHByZXNzaW5nIG90aGVycywgYnV0IGJ5IG1ha2luZyB5b3Vyc2VsdmVzIGFzIGdvb2QgYXMgcG9zc2libGUuICBTbyB3aXRoIHRoaXMgcHJvcGhlY3kgdG8geW91IHdobyBjb25kZW1uZWQgbWUKPC90cmFuc2xhdGlvbj4="
translation['3.39.39e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOWUiIHVuaXQ9InNlY3Rpb24iIC8+SSB0YWtlIG15IGxlYXZlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgd2l0aCB0aG9zZSB3aG8gdm90ZWQgZm9yIG15IGFjcXVpdHRhbCBJIHNob3VsZCBsaWtlIHRvIGNvbnZlcnNlIGFib3V0IHRoaXMgd2hpY2ggaGFzIGhhcHBlbmVkLCB3aGlsZSB0aGUgYXV0aG9yaXRpZXMgYXJlIGJ1c3kgYW5kIGJlZm9yZSBJIGdvIHRvIHRoZSBwbGFjZSB3aGVyZSBJIG11c3QgZGllLiAgV2FpdCB3aXRoIG1lIHNvIGxvbmcsIG15IGZyaWVuZHM7ICBmb3Igbm90aGluZyBwcmV2ZW50cyBvdXIgY2hhdHRpbmcgd2l0aCBlYWNoIG90aGVyCjwvdHJhbnNsYXRpb24+"
translation['3.40.40a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDBhIiB1bml0PSJzZWN0aW9uIiAvPndoaWxlIHRoZXJlIGlzIHRpbWUuICBJIGZlZWwgdGhhdCB5b3UgYXJlIG15IGZyaWVuZHMsIGFuZCBJIHdpc2ggdG8gc2hvdyB5b3UgdGhlIG1lYW5pbmcgb2YgdGhpcyB3aGljaCBoYXMgbm93IGhhcHBlbmVkIHRvIG1lLiAgRm9yLCBqdWRnZXPigJRhbmQgaW4gY2FsbGluZyB5b3UganVkZ2VzIEkgZ2l2ZSB5b3UgeW91ciByaWdodCBuYW1l4oCUYSB3b25kZXJmdWwgdGhpbmcgaGFzIGhhcHBlbmVkIHRvIG1lLiAgRm9yIGhpdGhlcnRvIHRoZSBjdXN0b21hcnkgcHJvcGhldGljIG1vbml0b3IgYWx3YXlzIHNwb2tlIHRvIG1lIHZlcnkgZnJlcXVlbnRseSBhbmQgb3Bwb3NlZCBtZSBldmVuIGluIHZlcnkgc21hbGwgbWF0dGVycywgaWYgSSB3YXMgZ29pbmcgdG8gZG8gYW55dGhpbmcgSSBzaG91bGQgbm90OyAgYnV0IG5vdywgYXMgeW91IHlvdXJzZWx2ZXMgc2VlLCB0aGlzIHRoaW5nIHdoaWNoIG1pZ2h0IGJlIHRob3VnaHQsIGFuZCBpcyBnZW5lcmFsbHkgY29uc2lkZXJlZCwgdGhlIGdyZWF0ZXN0IG9mIGV2aWxzIGhhcyBjb21lIHVwb24gbWU7ICBidXQgdGhlIGRpdmluZSBzaWduIGRpZCBub3Qgb3Bwb3NlIG1lCjwvdHJhbnNsYXRpb24+"
translation['3.40.40b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MGIiIHVuaXQ9InNlY3Rpb24iIC8+ZWl0aGVyIHdoZW4gSSBsZWZ0IG15IGhvbWUgaW4gdGhlIG1vcm5pbmcsIG9yIHdoZW4gSSBjYW1lIGhlcmUgdG8gdGhlIGNvdXJ0LCBvciBhdCBhbnkgcG9pbnQgb2YgbXkgc3BlZWNoLCB3aGVuIEkgd2FzIGdvaW5nIHRvIHNheSBhbnl0aGluZzsgIGFuZCB5ZXQgb24gb3RoZXIgb2NjYXNpb25zIGl0IHN0b3BwZWQgbWUgYXQgbWFueSBwb2ludHMgaW4gdGhlIG1pZHN0IG9mIGEgc3BlZWNoOyAgYnV0IG5vdywgaW4gdGhpcyBhZmZhaXIsIGl0IGhhcyBub3Qgb3Bwb3NlZCBtZSBpbiBhbnl0aGluZyBJIHdhcyBkb2luZyBvciBzYXlpbmcuICBXaGF0IHRoZW4gZG8gSSBzdXBwb3NlIGlzIHRoZSByZWFzb24/ICBJIHdpbGwgdGVsbCB5b3UuICBUaGlzIHdoaWNoIGhhcyBoYXBwZW5lZCB0byBtZSBpcyBkb3VidGxlc3MgYSBnb29kIHRoaW5nLCBhbmQgdGhvc2Ugb2YgdXMgd2hvIHRoaW5rIGRlYXRoIGlzIGFuIGV2aWwKPC90cmFuc2xhdGlvbj4="
translation['3.40.40c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MGMiIHVuaXQ9InNlY3Rpb24iIC8+bXVzdCBiZSBtaXN0YWtlbi4gIEEgY29udmluY2luZyBwcm9vZiBvZiB0aGlzIGJlZW4gZ2l2ZW4gbWU7ICBmb3IgdGhlIGFjY3VzdG9tZWQgc2lnbiB3b3VsZCBzdXJlbHkgaGF2ZSBvcHBvc2VkIG1lIGlmIEkgaGFkIG5vdCBiZWVuIGdvaW5nIHRvIG1lZXQgd2l0aCBzb21ldGhpbmcgZ29vZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TGV0IHVzIGNvbnNpZGVyIGluIGFub3RoZXIgd2F5IGFsc28gaG93IGdvb2QgcmVhc29uIHRoZXJlIGlzIHRvIGhvcGUgdGhhdCBpdCBpcyBhIGdvb2QgdGhpbmcuICBGb3IgdGhlIHN0YXRlIG9mIGRlYXRoIGlzIG9uZSBvZiB0d28gdGhpbmdzOiAgZWl0aGVyIGl0IGlzIHZpcnR1YWxseSBub3RoaW5nbmVzcywgc28gdGhhdCB0aGUgZGVhZCBoYXMgbm8gY29uc2Npb3VzbmVzcyBvZiBhbnl0aGluZywgb3IgaXQgaXMsIGFzIHBlb3BsZSBzYXksIGEgY2hhbmdlIGFuZCBtaWdyYXRpb24gb2YgdGhlIHNvdWwgZnJvbSB0aGlzIHRvIGFub3RoZXIgcGxhY2UuICBBbmQgaWYgaXQgaXMgdW5jb25zY2lvdXNuZXNzLAo8L3RyYW5zbGF0aW9uPg=="
translation['3.40.40d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MGQiIHVuaXQ9InNlY3Rpb24iIC8+bGlrZSBhIHNsZWVwIGluIHdoaWNoIHRoZSBzbGVlcGVyIGRvZXMgbm90IGV2ZW4gZHJlYW0sIGRlYXRoIHdvdWxkIGJlIGEgd29uZGVyZnVsIGdhaW4uICBGb3IgSSB0aGluayBpZiBhbnkgb25lIHdlcmUgdG8gcGljayBvdXQgdGhhdCBuaWdodCBpbiB3aGljaCBoZSBzbGVwdCBhIGRyZWFtbGVzcyBzbGVlcCBhbmQsIGNvbXBhcmluZyB3aXRoIGl0IHRoZSBvdGhlciBuaWdodHMgYW5kIGRheXMgb2YgaGlzIGxpZmUsIHdlcmUgdG8gc2F5LCBhZnRlciBkdWUgY29uc2lkZXJhdGlvbiwgaG93IG1hbnkgZGF5cyBhbmQgbmlnaHRzIGluIGhpcyBsaWZlIGhhZCBwYXNzZWQgbW9yZSBwbGVhc2FudGx5IHRoYW4gdGhhdCBuaWdodCzigJRJIGJlbGlldmUgdGhhdCBub3Qgb25seSBhbnkgcHJpdmF0ZSBwZXJzb24sIGJ1dCBldmVuIHRoZSBncmVhdCBLaW5nIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAwMjMxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDAyMzEiPlBlcnNpYTwvcGxhY2VOYW1lPiBoaW1zZWxmCjwvdHJhbnNsYXRpb24+"
translation['3.40.40e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MGUiIHVuaXQ9InNlY3Rpb24iIC8+d291bGQgZmluZCB0aGF0IHRoZXkgd2VyZSBmZXcgaW4gY29tcGFyaXNvbiB3aXRoIHRoZSBvdGhlciBkYXlzIGFuZCBuaWdodHMuICBTbyBpZiBzdWNoIGlzIHRoZSBuYXR1cmUgb2YgZGVhdGgsIEkgY291bnQgaXQgYSBnYWluOyAgZm9yIGluIHRoYXQgY2FzZSwgYWxsIHRpbWUgc2VlbXMgdG8gYmUgbm8gbG9uZ2VyIHRoYW4gb25lIG5pZ2h0LiAgQnV0IG9uIHRoZSBvdGhlciBoYW5kLCBpZiBkZWF0aCBpcywgYXMgaXQgd2VyZSwgYSBjaGFuZ2Ugb2YgaGFiaXRhdGlvbiBmcm9tIGhlcmUgdG8gc29tZSBvdGhlciBwbGFjZSwgYW5kIGlmIHdoYXQgd2UgYXJlIHRvbGQgaXMgdHJ1ZSwgdGhhdCBhbGwgdGhlIGRlYWQgYXJlIHRoZXJlLCB3aGF0IGdyZWF0ZXIgYmxlc3NpbmcgY291bGQgdGhlcmUgYmUsIGp1ZGdlcz8gIEZvciBpZiBhIG1hbiB3aGVuIGhlIHJlYWNoZXMgdGhlIG90aGVyIHdvcmxkLAo8L3RyYW5zbGF0aW9uPg=="
translation['3.41.41a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDFhIiB1bml0PSJzZWN0aW9uIiAvPmFmdGVyIGxlYXZpbmcgYmVoaW5kIHRoZXNlIHdobyBjbGFpbSB0byBiZSBqdWRnZXMsIHNoYWxsIGZpbmQgdGhvc2Ugd2hvIGFyZSByZWFsbHkganVkZ2VzIHdobyBhcmUgc2FpZCB0byBzaXQgaW4ganVkZ21lbnQgdGhlcmUsIE1pbm9zIGFuZCBSaGFkYW1hbnRodXMsIGFuZCBBZWFjdXMgYW5kIFRyaXB0b2xlbXVzLCBhbmQgYWxsIHRoZSBvdGhlciBkZW1pZ29kcyB3aG8gd2VyZSBqdXN0IG1lbiBpbiB0aGVpciBsaXZlcywgd291bGQgdGhlIGNoYW5nZSBvZiBoYWJpdGF0aW9uIGJlIHVuZGVzaXJhYmxlPyAgT3IgYWdhaW4sIHdoYXQgd291bGQgYW55IG9mIHlvdSBnaXZlIHRvIG1lZXQgd2l0aCBPcnBoZXVzIGFuZCBNdXNhZXVzIGFuZCBIZXNpb2QgYW5kIEhvbWVyPyAgSSBhbSB3aWxsaW5nIHRvIGRpZSBtYW55IHRpbWVzIG92ZXIsIGlmIHRoZXNlIHRoaW5ncyBhcmUgdHJ1ZTsgIGZvciBJIHBlcnNvbmFsbHkgc2hvdWxkIGZpbmQgdGhlIGxpZmUgdGhlcmUgd29uZGVyZnVsLAo8L3RyYW5zbGF0aW9uPg=="
translation['3.41.41b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MWIiIHVuaXQ9InNlY3Rpb24iIC8+d2hlbiBJIG1ldCBQYWxhbWVkZXMgb3IgQWpheCwgdGhlIHNvbiBvZiBUZWxhbW9uLCBvciBhbnkgb3RoZXIgbWVuIG9mIG9sZCB3aG8gbG9zdCB0aGVpciBsaXZlcyB0aHJvdWdoIGFuIHVuanVzdCBqdWRnZW1lbnQsIGFuZCBjb21wYXJlZCBteSBleHBlcmllbmNlIHdpdGggdGhlaXJzLiAgSSB0aGluayB0aGF0IHdvdWxkIG5vdCBiZSB1bnBsZWFzYW50LiAgQW5kIHRoZSBncmVhdGVzdCBwbGVhc3VyZSB3b3VsZCBiZSB0byBwYXNzIG15IHRpbWUgaW4gZXhhbWluaW5nIGFuZCBpbnZlc3RpZ2F0aW5nIHRoZSBwZW9wbGUgdGhlcmUsIGFzIEkgZG8gdGhvc2UgaGVyZSwgdG8gZmluZCBvdXQgd2hvIGFtb25nIHRoZW0gaXMgd2lzZSBhbmQgd2hvIHRoaW5rcyBoZSBpcyB3aGVuIGhlIGlzIG5vdC4gIFdoYXQgcHJpY2Ugd291bGQgYW55IG9mIHlvdSBwYXksIGp1ZGdlcywgdG8gZXhhbWluZSBoaW0gd2hvIGxlZCB0aGUgZ3JlYXQgYXJteSBhZ2FpbnN0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJveSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVHJveSI+VHJveTwvcGxhY2VOYW1lPiwKPC90cmFuc2xhdGlvbj4="
translation['3.41.41c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MWMiIHVuaXQ9InNlY3Rpb24iIC8+b3IgT2R5c3NldXMsIG9yIFNpc3lwaHVzLCBvciBjb3VudGxlc3Mgb3RoZXJzLCBib3RoIG1lbiBhbmQgd29tZW4sIHdob20gSSBtaWdodCBtZW50aW9uPyAgVG8gY29udmVyc2UgYW5kIGFzc29jaWF0ZSB3aXRoIHRoZW0gYW5kIGV4YW1pbmUgdGhlbSB3b3VsZCBiZSBpbW1lYXN1cmFibGUgaGFwcGluZXNzLiAgQXQgYW55IHJhdGUsIHRoZSBmb2xrIHRoZXJlIGRvIG5vdCBraWxsIHBlb3BsZSBmb3IgaXQ7ICBzaW5jZSwgaWYgd2hhdCB3ZSBhcmUgdG9sZCBpcyB0cnVlLCB0aGV5IGFyZSBpbW1vcnRhbCBmb3IgYWxsIGZ1dHVyZSB0aW1lLCBiZXNpZGVzIGJlaW5nIGhhcHBpZXIgaW4gb3RoZXIgcmVzcGVjdHMgdGhhbiBtZW4gYXJlIGhlcmUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCB5b3UgYWxzbywganVkZ2VzLCBtdXN0IHJlZ2FyZCBkZWF0aCBob3BlZnVsbHkgYW5kIG11c3QgYmVhciBpbiBtaW5kIHRoaXMgb25lIHRydXRoLAo8L3RyYW5zbGF0aW9uPg=="
translation['3.41.41d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MWQiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBubyBldmlsIGNhbiBjb21lIHRvIGEgZ29vZCBtYW4gZWl0aGVyIGluIGxpZmUgb3IgYWZ0ZXIgZGVhdGgsIGFuZCBHb2QgZG9lcyBub3QgbmVnbGVjdCBoaW0uICBTbywgdG9vLCB0aGlzIHdoaWNoIGhhZCBjb21lIHRvIG1lIGhhcyBub3QgY29tZSBieSBjaGFuY2UsIGJ1dCBJIHNlZSBwbGFpbmx5IHRoYXQgaXQgd2FzIGJldHRlciBmb3IgbWUgdG8gZGllIG5vdyBhbmQgYmUgZnJlZWQgZnJvbSB0cm91Ymxlcy4gIFRoYXQgaXMgdGhlIHJlYXNvbiB3aHkgdGhlIHNpZ24gbmV2ZXIgaW50ZXJmZXJlZCB3aXRoIG1lLCBhbmQgSSBhbSBub3QgYXQgYWxsIGFuZ3J5IHdpdGggdGhvc2Ugd2hvIGNvbmRlbW5lZCBtZSBvciB3aXRoIG15IGFjY3VzZXJzLiAgQW5kIHlldCBpdCB3YXMgbm90IHdpdGggdGhhdCBpbiB2aWV3IHRoYXQgdGhleSBjb25kZW1uZWQgYW5kIGFjY3VzZWQgbWUsIGJ1dCBiZWNhdXNlCjwvdHJhbnNsYXRpb24+"
translation['3.41.41e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MWUiIHVuaXQ9InNlY3Rpb24iIC8+dGhleSB0aG91Z2h0IHRvIGluanVyZSBtZS4gIFRoZXkgZGVzZXJ2ZSBibGFtZSBmb3IgdGhhdC4gIEhvd2V2ZXIsIEkgbWFrZSB0aGlzIHJlcXVlc3Qgb2YgdGhlbTogIHdoZW4gbXkgc29ucyBncm93IHVwLCBnZW50bGVtZW4sIHB1bmlzaCB0aGVtIGJ5IHRyb3VibGluZyB0aGVtIGFzIEkgaGF2ZSB0cm91YmxlZCB5b3U7ICBpZiB0aGV5IHNlZW0gdG8geW91IHRvIGNhcmUgZm9yIG1vbmV5IG9yIGFueXRoaW5nIGVsc2UgbW9yZSB0aGFuIGZvciB2aXJ0dWUsIGFuZCBpZiB0aGV5IHRoaW5rIHRoZXkgYW1vdW50IHRvIHNvbWV0aGluZyB3aGVuIHRoZXkgZG8gbm90LCByZWJ1a2UgdGhlbSBhcyBJIGhhdmUgcmVidWtlZCB5b3UgYmVjYXVzZSB0aGV5IGRvIG5vdCBjYXJlIGZvciB3aGF0IHRoZXkgb3VnaHQsIGFuZCB0aGluayB0aGV5IGFtb3VudCB0byBzb21ldGhpbmcgd2hlbiB0aGV5IGFyZSB3b3J0aCBub3RoaW5nLiAgSWYgeW91IGRvIHRoaXMsIGJvdGggSSBhbmQgbXkgc29ucwo8L3RyYW5zbGF0aW9uPg=="
