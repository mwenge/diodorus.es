var translation={}
var translation={}
translation['1.1'] = ""
translation['1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgY29uY2VybmluZyBoaXMgaGlnaCBiaXJ0aCB3aGF0IGdyZWF0ZXIgYW5kIG5vYmxlciBjb3VsZCBiZSBzYWlkIHRoYW4gdGhpcywgdGhhdCBldmVuIHRvLWRheSB0aGUgbGluZSBvZiBoaXMgZGVzY2VudCBmcm9tIEhlcmFjbGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFnZXNpbGF1cyB3YXMgdHdlbnR5LWZpZnRoIGluIGxpbmUgb2YgZGVzY2VudCBmcm9tIEhlcmFjbGVzICg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIZHQuIDguMTMxIiB2YWxpZD0ieWVzIj5IZHQuIDguMTMxPC9iaWJsPjsgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyI+UGx1dC4gTHljLjwvYmlibD4gYy4gaTsgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyI+UGx1dC4gQWdlcy48L2JpYmw+IGMuIGkpLjwvbm90ZT4gaXMgdHJhY2VkIHRocm91Z2ggdGhlIHJvbGwgb2YgaGlzIGFuY2VzdG9ycywgYW5kIHRob3NlIG5vIHNpbXBsZSBjaXRpemVucywgYnV0IGtpbmdzIGFuZCBzb25zIG9mIGtpbmdzPwo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIZHQuIDguMTMxIiB2YWxpZD0ieWVzIj5IZHQuIDguMTMxPC9iaWJsPjsgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyI+UGx1dC4gTHljLjwvYmlibD4gYy4gaTsgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyI+UGx1dC4gQWdlcy48L2JpYmw+IGMuIGkpLjwvdHJhbnNsYXRpb24+"
translation['1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk5vciBhcmUgdGhleSBvcGVuIHRvIHRoZSByZXByb2FjaCB0aGF0IHRob3VnaCB0aGV5IHdlcmUga2luZ3MsIHRoZXkgcnVsZWQgb3ZlciBhIHBldHR5IHN0YXRlLiBPbiB0aGUgY29udHJhcnksIGFzIHRoZWlyIGZhbWlseSBpcyBob25vdXJlZCBhYm92ZSBhbGwgaW4gdGhlaXIgZmF0aGVybGFuZCwgc28gaXMgdGhlaXIgc3RhdGUgZ2xvcmlvdXMgYWJvdmUgYWxsIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPjsgdGh1cyB0aGV5IGFyZSBub3QgZmlyc3QgaW4gdGhlIHNlY29uZCByYW5rLCBidXQgbGVhZGVycyBpbiBhIGNvbW11bml0eSBvZiBsZWFkZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk9uIG9uZSBhY2NvdW50IGhpcyBmYXRoZXJsYW5kIGFuZCBoaXMgZmFtaWx5IGFyZSB3b3J0aHkgdG8gYmUgcHJhaXNlZCB0b2dldGhlciwgZm9yIG5ldmVyIGF0IGFueSB0aW1lIGhhcyB0aGUgc3RhdGUgYmVlbiBtb3ZlZCBieSBqZWFsb3VzeSBvZiB0aGVpciBwcmUtZW1pbmVuY2UgdG8gYXR0ZW1wdCB0aGUgb3ZlcnRocm93IG9mIHRoZWlyIGdvdmVybm1lbnQsIGFuZCBuZXZlciBhdCBhbnkgdGltZSBoYXZlIHRoZSBraW5ncyBzdHJpdmVuIHRvIG9idGFpbiBncmVhdGVyIHBvd2VycyB0aGFuIHdlcmUgY29uZmVycmVkIG9uIHRoZW0gb3JpZ2luYWxseSBhdCB0aGVpciBzdWNjZXNzaW9uIHRvIHRoZSB0aHJvbmUuIEZvciB0aGlzIHJlYXNvbiwgd2hpbGUgbm8gb3RoZXIgZ292ZXJubWVudCDigJQgZGVtb2NyYWN5LCBvbGlnYWNoeSwgZGVzcG90aXNtIG9yIGtpbmdkb20g4oCUIGNhbiBjYW4gbGF5IGNsYWltIHRvIGFuIHVuYnJva2VuIGV4aXN0ZW5jZSwgdGhpcyBraW5nZG9tIGFsb25lIHN0YW5kcyBmYXN0IGNvbnRpbnVhbGx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ib3dldmVyLCB0aGVyZSBhcmUgbm90IHdhbnRpbmcgc2lnbnMgdGhhdCBldmVuIGJlZm9yZSBoaXMgcmVpZ24gYmVnYW4gQWdlc2lsYXVzIHdhcyBkZWVtZWQgd29ydGh5IHRvIGJlIGtpbmcuIEZvciBvbiB0aGUgZGVhdGggb2YgS2luZyBBZ2lzIHRoZXJlIHdhcyBhIHN0cnVnZ2xlIGZvciB0aGUgdGhyb25lIGJldHdlZW4gTGVvdHljaGlkYXMsIGFzIHRoZSBzb24gb2YgQWdpcywgYW5kIEFnZXNpbGF1cywgYXMgdGhlIHNvbiBvZiBBcmNoaWRhbXVzLiBUaGUgc3RhdGUgZGVjaWRlZCBpbiBmYXZvdXIgb2YgQWdlc2lsYXVzLCBqdWRnaW5nIGhpbSB0byBiZSB0aGUgbW9yZSBlbGlnaWJsZSBpbiBwb2ludCBvZiBiaXJ0aCBhbmQgY2hhcmFjdGVyIGFsaWtlLiBTdXJlbHkgdG8gaGF2ZSBiZWVuIHByb25vdW5jZWQgd29ydGh5IG9mIHRoZSBoaWdoZXN0IHByaXZpbGVnZSBieSB0aGUgYmVzdCBtZW4gaW4gdGhlIG1pZ2h0aWVzdCBzdGF0ZSBpcyBwcm9vZiBzdWZmaWNpZW50IG9mIGhpcyB2aXJ0dWUsIGF0IGxlYXN0IGJlZm9yZSBoZSBiZWdhbiB0byByZWlnbi4KPC90cmFuc2xhdGlvbj4="
translation['1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHdpbGwgbm93IGdpdmUgYW4gYWNjb3VudCBvZiB0aGUgYWNoaWV2ZW1lbnRzIG9mIGhpcyByZWlnbiwgZm9yIEkgYmVsaWV2ZSB0aGF0IGhpcyBkZWVkcyB3aWxsIHRocm93IHRoZSBjbGVhcmVzdCBsaWdodCBvbiBoaXMgcXVhbGl0aWVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgQWdlc2lsYXVzIHdhcyBzdGlsbCBhIHlvdW5nIG1hbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5IZSB3YXMgb3ZlciBmb3J0eTsgYnV0IHNlZSB0aGUgSW50cm9kdWN0aW9uLjwvbm90ZT4gd2hlbiBoZSBnYWluZWQgdGhlIHRocm9uZS4gSGUgaGFkIGJlZW4gYnV0IGEgc2hvcnQgdGltZSBpbiBwb3dlciB3aGVuIHRoZSBuZXdzIGxlYWtlZCBvdXQgdGhhdCB0aGUga2luZyBvZiB0aGUgUGVyc2lhbnMgd2FzIGFzc2VtYmxpbmcgYSBncmVhdCBuYXZ5IGFuZCBhcm15IGZvciBhbiBhdHRhY2sgb24gdGhlIEdyZWVrcy4KPC90cmFuc2xhdGlvbj4="
translation['1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPldoaWxlIHRoZSBMYWNlZGFlbW9uaWFucyBhbmQgdGhlaXIgYWxsaWVzIHdlcmUgY29uc2lkZXJpbmcgdGhlIG1hdHRlciwgQWdlc2lsYXVzIGRlY2xhcmVkLCB0aGF0IGlmIHRoZXkgd291bGQgZ2l2ZSBoaW0gdGhpcnR5IFNwYXJ0YW5zLCB0d28gdGhvdXNhbmQgbmV3bHkgZW5yb2xsZWQgY2l0aXplbnMsIGFuZCBhIGNvbnRpbmdlbnQgb2Ygc2l4IHRob3VzYW5kIGFsbGllcywgaGUgd291bGQgY3Jvc3MgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPiBhbmQgdHJ5IHRvIGVmZmVjdCBhIHBlYWNlLCBvciwgaW4gY2FzZSB0aGUgYmFyYmFyaWFuIHdhbnRlZCB0byBmaWdodCwgd291bGQga2VlcCBoaW0gc28gYnVzeSB0aGF0IGhlIHdvdWxkIGhhdmUgbm8gdGltZSBmb3IgYW4gYXR0YWNrIG9uIHRoZSBHcmVla3MuCjwvdHJhbnNsYXRpb24+"
translation['1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkhpcyBlYWdlcm5lc3MgdG8gcGF5IGJhY2sgdGhlIFBlcnNpYW4gaW4gaGlzIG93biBjb2luIGZvciB0aGUgZm9ybWVyIGludmFzaW9uIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgaGlzIGRldGVybWluYXRpb24gdG8gd2FnZSBhbiBvZmZlbnNpdmUgcmF0aGVyIHRoYW4gYSBkZWZlbnNpdmUgd2FyLCBhbmQgaGlzIHdpc2ggdG8gbWFrZSB0aGUgZW5lbXkgcGF5IGZvciBpdCByYXRoZXIgdGhhbiB0aGUgR3JlZWtzLCB3ZXJlIGVub3VnaCB0byBhcm91c2UgYW4gaW1tZWRpYXRlIGFuZCB3aWRlc3ByZWFkIGVudGh1c2lhc20gZm9yIGhpcyBwcm9qZWN0LiBCdXQgd2hhdCBhcHBlYWxlZCBtb3N0IHRvIHRoZSBpbWFnaW5hdGlvbiB3YXMgdGhlIGlkZWEgb2YgZW50ZXJpbmcgb24gYSBzdHJ1Z2dsZSBub3QgdG8gc2F2ZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIGJ1dCB0byBzdWJkdWUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgd2hhdCBvZiBoaXMgc3RyYXRlZ3kgYWZ0ZXIgaGUgaGFkIHJlY2VpdmVkIHRoZSBhcm15IGFuZCBoYWQgc2FpbGVkIG91dD8gQSBzaW1wbGUgbmFycmF0aXZlIG9mIGhpcyBhY3Rpb25zIHdpbGwgYXNzdXJlZGx5IGNvbnZleSB0aGUgY2xlYXJlc3QgaW1wcmVzc2lvbiBvZiBpdC4KPC90cmFuc2xhdGlvbj4="
translation['1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzLCB0aGVuLCB3YXMgaGlzIGZpcnN0IGFjdCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDA0Ij5Bc2lhPC9wbGFjZU5hbWU+LiBUaXNzYXBoZXJuZXMgaGFkIHN3b3JuIHRoZSBmb2xsb3dpbmcgb2F0aCB0byBBZ2VzaWxhdXM6IOKAnElmIHlvdSB3aWxsIGFycmFuZ2UgYW4gYXJtaXN0aWNlIHRvIGxhc3QgdW50aWwgdGhlIHJldHVybiBvZiB0aGUgbWVzc2VuZ2VycyB3aG9tIEkgd2lsbCBzZW5kIHRvIHRoZSBLaW5nLCBJIHdpbGwgZG8gbXkgdXRtb3N0IHRvIG9idGFpbiBpbmRlcGVuZGVuY2UgZm9yIHRoZSBHcmVlayBjaXRpZXMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPuKAnTsgYW5kIEFnZXNpbGF1cyBvbiBoaXMgcGFydCBoYWQgc3dvcm4gdG8gb2JzZXJ2ZSB0aGUgYXJtaXN0aWNlIGhvbmVzdGx5LCBhbGxvd2luZyB0aHJlZSBtb250aHMgZm9yIHRoZSB0cmFuc2FjdGlvbi4gV2hhdCBmb2xsb3dlZD8KPC90cmFuc2xhdGlvbj4="
translation['1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaXNzYXBoZXJuZXMgZm9ydGh3aXRoIGJyb2tlIGhpcyBvYXRoLCBhbmQgaW5zdGVhZCBvZiBhcnJhbmdpbmcgYSBwZWFjZSwgYXBwbGllZCB0byB0aGUgS2luZyBmb3IgYSBsYXJnZSBhcm15IGluIGFkZGl0aW9uIHRvIHRoYXQgd2hpY2ggaGUgaGFkIGJlZm9yZS4gQXMgZm9yIEFnZXNpbGF1cywgdGhvdWdoIHdlbGwgYXdhcmUgb2YgdGhpcywgaGUgbm9uZSB0aGUgbGVzcyBjb250aW51ZWQgdG8ga2VlcCB0aGUgYXJtaXN0aWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rLCB0aGVyZWZvcmUsIHRoYXQgaGVyZSB3ZSBoYXZlIGhpcyBmaXJzdCBub2JsZSBhY2hpZXZlbWVudC4gQnkgc2hvd2luZyB1cCBUaXNzYXBoZXJuZXMgYXMgYSBwZXJqdXJlciwgaGUgbWFkZSBoaW0gZGlzdHJ1c3RlZCBldmVyeXdoZXJlOyBhbmQsIGNvbnRyYXJpd2lzZSwgYnkgcHJvdmluZyBoaW1zZWxmIHRvIGJlIGEgbWFuIG9mIGhpcyB3b3JkIGFuZCB0cnVlIHRvIGhpcyBhZ3JlZW1lbnRzLCBoZSBlbmNvdXJhZ2VkIGFsbCwgR3JlZWtzIGFuZCBiYXJiYXJpYW5zIGFsaWtlLCB0byBlbnRlciBpbnRvIGFuIGFncmVlbWVudCB3aXRoIGhpbSB3aGVuZXZlciBoZSB3aXNoZWQgaXQuCjwvdHJhbnNsYXRpb24+"
translation['1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGFycml2YWwgb2YgdGhlIG5ldyBhcm15IGVtYm9sZGVuZWQgVGlzc2FwaGVybmVzIHRvIHNlbmQgYW4gdWx0aW1hdHVtIHRvIEFnZXNpbGF1cywgdGhyZWF0ZW5pbmcgd2FzIHVubGVzcyBoZSB3aXRoZHJldyBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwMDQiPkFzaWE8L3BsYWNlTmFtZT47IGFuZCB0aGUgYWxsaWVzIGFuZCB0aGUgTGFjZWRhZW1vbmlhbnMgcHJlc2VudCBtYWRlIG5vIGNvbmNlYWxtZW50IG9mIHRoZWlyIGNoYWdyaW4sIGJlbGlldmluZyB0aGF0IHRoZSBzdHJlbmd0aCBvZiBBZ2VzaWxhdXMgd2FzIHdlYWtlciB0aGFuIHRoZSBQZXJzaWFuIGtpbmcncyBhcm1hbWVudC4gQnV0IEFnZXNpbGF1cyB3aXRoIGEgYmVhbWluZyBmYWNlIGJhZGUgdGhlIGVudm95cyBvZiBUaXNzYXBoZXJuZXMgaW5mb3JtIHRoZWlyIG1hc3RlciB0aGF0IGhlIHdhcyBwcm9mb3VuZGx5IGdyYXRlZnVsIHRvIGhpbSBmb3IgaGlzIHBlcmp1cnksIGJ5IHdoaWNoIGhlIGhhZCBnYWluZWQgdGhlIGhvc3RpbGl0eSBvZiB0aGUgZ29kcyBmb3IgaGltc2VsZiBhbmQgaGFkIG1hZGUgdGhlbSBhbGxpZXMgb2YgdGhlIEdyZWVrcy4KPC90cmFuc2xhdGlvbj4="
translation['1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5XaXRob3V0IGEgbW9tZW50J3MgZGVsYXkgaGUgZ2F2ZSB0aGUgd29yZCB0byBoaXMgdHJvb3BzIHRvIHBhY2sgdXAgaW4gcHJlcGFyYXRpb24gZm9yIGEgY2FtcGFpZ24sIGFuZCB3YXJuZWQgdGhlIGNpdGllcyB0aGF0IGxheSBvbiB0aGUgbGluZXMgb2YgbWFyY2ggdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDIzNTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjM1OCI+Q2FyaWE8L3BsYWNlTmFtZT4gdG8gaGF2ZSB0aGVpciBtYXJrZXRzIHJlYWR5IHN0b2NrZWQuIEhlIGFkdmlzZWQgYnkgbGV0dGVyIHRoZSBHcmVla3Mgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDI3NjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwMjc2NSI+SW9uaWE8L3BsYWNlTmFtZT4sIHRoZSBBZW9saWQgYW5kIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjYzOCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjM4Ij5IZWxsZXNwb250PC9wbGFjZU5hbWU+LCB0byBzZW5kIHRoZWlyIGNvbnRpbmdlbnRzIGZvciB0aGUgY2FtcGFpZ24gdG8gaGlzIGhlYWRxdWFydGVycyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEVwaGVzb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEVwaGVzb3MiPkVwaGVzdXM8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IFRpc3NhcGhlcm5lcyByZWZsZWN0ZWQgdGhhdCBBZ2VzaWxhdXMgd2FzIHdpdGhvdXQgY2F2YWxyeSwgd2hpbGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDIzNTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjM1OCI+Q2FyaWE8L3BsYWNlTmFtZT4gd2FzIGEgZGlmZmljdWx0IGNvdW50cnkgZm9yIG1vdW50ZWQgbWVuLCBhbmQgaGUgdGhvdWdodCB0aGF0IEFnZXNpbGF1cyB3YXMgd3JvdGggd2l0aCBoaW0gb24gYWNjb3VudCBvZiBoaXMgZGVjZWl0LiBDb25jbHVkaW5nLCB0aGVyZWZvcmUsIHRoYXQgaGlzIGVzdGF0ZSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjM1OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzU4Ij5DYXJpYTwvcGxhY2VOYW1lPiB3YXMgdGhlIHJlYWwgb2JqZWN0IG9mIHRoZSBjb21pbmcgYXR0YWNrLCBoZSBzZW50IHRoZSB3aG9sZSBvZiBoaXMgaW5mYW50cnkgYWNyb3NzIHRvIHRoYXQgZGlzdHJpY3QgYW5kIHRvb2sgaGlzIGNhdmFscnkgcm91bmQgaW50byB0aGUgcGxhaW4gb2YgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTIxNTYxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMjE1NjEiPk1hZWFuZGVyPC9wbGFjZU5hbWU+LCBjb25maWRlbnQgdGhhdCBoZSBjb3VsZCByaWRlIGRvd24gdGhlIEdyZWVrcyBiZWZvcmUgdGhleSByZWFjaGVkIHRoZSBjb3VudHJ5IHdoZXJlIGNhdmFscnkgY291bGQgbm90IG9wZXJhdGUuCjwvdHJhbnNsYXRpb24+"
translation['1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaW5zdGVhZCBvZiBtYXJjaGluZyBvbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjM1OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzU4Ij5DYXJpYTwvcGxhY2VOYW1lPiwgQWdlc2lsYXVzIGZvcnRod2l0aCB0dXJuZWQgcm91bmQgYW5kIG1hZGUgZm9yIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjEzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2MTMiPlBocnlnaWE8L3BsYWNlTmFtZT4uIFBpY2tpbmcgdXAgdGhlIHZhcmlvdXMgZm9yY2VzIHRoYXQgbWV0IGhpbSBvbiB0aGUgcm91dGUsIGhlIHByb2NlZWRlZCB0byByZWR1Y2UgdGhlIGNpdGllcyBhbmQgY2FwdHVyZWQgYSB2YXN0IHF1YW50aXR5IG9mIGJvb3R5IGJ5IHN1ZGRlbiBhdHRhY2tzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhpcyBhY2hpZXZlbWVudCBhbHNvIHdhcyB0aG91Z2h0IHRvIGJlIGEgcHJvb2Ygb2Ygc291bmQgZ2VuZXJhbHNoaXAsIHRoYXQgd2hlbiB3YXIgd2FzIGRlY2xhcmVkIGFuZCBjb3plbmluZyBpbiBjb25zZXF1ZW5jZSBiZWNhbWUgcmlnaHRlb3VzIGFuZCBmYWlyIGRlYWxpbmcsIGhlIHNob3dlZCBUaXNzYXBoZXJuZXMgdG8gYmUgYSBjaGlsZCBhdCBkZWNlcHRpb24uIEl0IHdhcyB0aG91Z2h0LCB0b28sIHRoYXQgaGUgbWFkZSBzaHJld2QgICB1c2Ugb2YgdGhpcyBvY2Nhc2lvbiB0byBlbnJpY2ggaGlzIGZyaWVuZHMuCjwvdHJhbnNsYXRpb24+"
translation['1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIGFjY3VtdWxhdGlvbiBvZiBwbHVuZGVyIHdhcyBzbyBncmVhdCB0aGF0IHRoaW5ncyB3ZXJlIHNlbGxpbmcgZm9yIG5leHQgdG8gbm90aGluZy4gU28gaGUgZ2F2ZSBoaXMgZnJpZW5kcyB0aGUgd29yZCB0byBidXksIHNheWluZyB0aGF0IGhlIHdhcyBzaG9ydGx5IGdvaW5nIGRvd24gdG8gdGhlIGNvYXN0IHdpdGggaGlzIGFybXkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldoZXJlIHRoZSBnb29kcyB3b3VsZCBiZSByZS1zb2xkIGF0IGEgcHJvZml0Ljwvbm90ZT4gVGhlIGF1Y3Rpb25lZXJzIHdlcmUgb3JkZXJlZCB0byBoYXZlIGEgc2NoZWR1bGUgbWFkZSBvZiB0aGUgcHJpY2VzIG9idGFpbmVkIGFuZCB0byBnaXZlIGRlbGl2ZXJ5IG9mIHRoZSBnb29kcy4gVGh1cyB3aXRob3V0IGNhcGl0YWwgb3V0bGF5LCBhbmQgd2l0aG91dCBhbnkgbG9zcyB0byB0aGUgdHJlYXN1cnksIGFsbCBoaXMgZnJpZW5kcyBtYWRlIGEgcHJvZGlnaW91cyBhbW91bnQgb2YgbW9uZXkuCjwvdHJhbnNsYXRpb24+"
translation['1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVyLCB3aGVuZXZlciBkZXNlcnRlcnMgb2ZmZXJlZCB0byBnaXZlIGluZm9ybWF0aW9uIHdoZXJlIHBsdW5kZXIgbWlnaHQgYmUgdGFrZW4sIHRoZXkgbmF0dXJhbGx5IHdlbnQgdG8gdGhlIGtpbmcuIEluIHN1Y2ggYSBjYXNlIGhlIHRvb2sgY2FyZSB0aGF0IHRoZSBjYXB0dXJlIHNob3VsZCBiZSBlZmZlY3RlZCBieSBoaXMgZnJpZW5kcywgc28gdGhhdCB0aGV5IG1pZ2h0IGF0IG9uZSBhbmQgdGhlIHNhbWUgdGltZSBtYWtlIG1vbmV5IGFuZCBhZGQgdG8gdGhlaXIgbGF1cmVscy4gVGhlIGltbWVkaWF0ZSByZXN1bHQgd2FzIHRoYXQgaGUgaGFkIG1hbnkgYXJkZW50IHN1aXRvcnMgZm9yIGhpcyBmcmllbmRzaGlwLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+UmVjb2duaXppbmcgdGhhdCBhIGNvdW50cnkgcGx1bmRlcmVkIGFuZCBkZXBvcHVsYXRlZCBjb3VsZCBub3QgbG9uZyBzdXBwb3J0IGFuIGFybXksIHdoZXJlYXMgYW4gaW5oYWJpdGVkIGFuZCBjdWx0aXZhdGVkIGxhbmQgd291bGQgeWllbGQgaW5leGhhdXN0aWJsZSBzdXBwbGllcywgaGUgdG9vayBwYWlucyBub3Qgb25seSB0byBjcnVzaCBoaXMgZW5lbWllcyBieSBmb3JjZSwgYnV0IGFsc28gdG8gd2luIHRoZW0gb3ZlciBieSBnZW50bGVuZXNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5IZSB3b3VsZCBvZnRlbiB3YXJuIGhpcyBtZW4gbm90IHRvIHB1bmlzaCB0aGVpciBwcmlzb25lcnMgYXMgY3JpbWluYWxzLCBidXQgdG8gZ3VhcmQgdGhlbSBhcyBodW1hbiBiZWluZ3M7IGFuZCBvZnRlbiB3aGVuIHNoaWZ0aW5nIGNhbXAsIGlmIGhlIG5vdGljZWQgbGl0dGxlIGNoaWxkcmVuLCB0aGUgcHJvcGVydHkgb2YgbWVyY2hhbnRzLCBsZWZ0IGJlaGluZCDigJQgbWFueSBtZXJjaGFudHMgb2ZmZXJlZCBjaGlsZHJlbiBmb3Igc2FsZSBiZWNhdXNlIHRoZXkgdGhvdWdodCB0aGV5IHdvdWxkIG5vdCBiZSBhYmxlIHRvIGNhcnJ5IGFuZCBmZWVkIHRoZW08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGRlYWxlcnMgb2Z0ZW4gZmFpbGVkIHRvIGZpbmQgYSBidXllciBhbmQgY29uc2VxdWVudGx5IGFiYW5kb25lZCB0aGVzZSBjYXB0dXJlZCBjaGlsZHJlbi48L25vdGU+IOKAlCBoZSBsb29rZWQgYWZ0ZXIgdGhlbSB0b28sIGFuZCBoYWQgdGhlbSBjb252ZXllZCB0byBzb21lIHBsYWNlIG9mIHJlZnVnZS4KPC90cmFuc2xhdGlvbj4="
translation['1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgaGUgYXJyYW5nZWQgdGhhdCBwcmlzb25lcnMgICBvZiB3YXIgd2hvIHdlcmUgdG9vIG9sZCB0byBhY2NvbXBhbnkgdGhlIGFybXkgd2VyZSB0byBiZSBsb29rZWQgYWZ0ZXIsIHRoYXQgdGhleSBtaWdodCBub3QgZmFsbCBhIHByZXkgdG8gZG9ncyBvciB3b2x2ZXMuIEl0IHRodXMgY2FtZSBhYm91dCB0aGF0IGhlIHdvbiB0aGUgZ29vZHdpbGwgbm90IG9ubHkgb2YgdGhvc2Ugd2hvIGhlYXJkIG9mIHRoZXNlIGZhY3RzLCBidXQgZXZlbiBvZiB0aGUgcHJpc29uZXJzIHRoZW1zZWx2ZXMuIEluIGhpcyBzZXR0bGVtZW50IHdpdGggdGhlIGNpdGllcyB0aGF0IGhlIHdvbiBvdmVyLCBoZSBpbnZhcmlhYmx5IGV4Y3VzZWQgdGhlbSBmcm9tIGFsbCBzZXJ2aWxlIGR1dGllcyBhbmQgcmVxdWlyZWQgb25seSBzdWNoIG9iZWRpZW5jZSBhcyBmcmVlbWVuIG93ZSB0byB0aGVpciBydWxlczsgYW5kIGJ5IGhpcyBjbGVtZW5jeSBoZSBtYWRlIGhpbXNlbGYgbWFzdGVyIG9mIGZvcnRyZXNzZXMgaW1wcmVnbmFibGUgdG8gYXNzYXVsdC4KPC90cmFuc2xhdGlvbj4="
translation['1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SG93ZXZlciwgc2luY2UgYSBjYW1wYWlnbiBpbiB0aGUgcGxhaW5zIHdhcyBpbXBvc3NpYmxlIGV2ZW4gaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2MTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjYxMyI+UGhyeWdpYTwvcGxhY2VOYW1lPiwgb3dpbmcgdG8gUGhhcm5hYmF6dXMnIGNhdmFscnksIGhlIGRlY2lkZWQgdGhhdCBoZSBtdXN0IHJhaXNlIGEgbW91bnRlZCBmb3JjZSwgaWYgaGUgd2FzIHRvIGF2b2lkIGNvbnRpbnVhbGx5IHJ1bm5pbmcgYXdheSBmcm9tIHRoZSBlbmVteS4gSGUgdGhlcmVmb3JlIGVucm9sbGVkIHRoZSB3ZWFsdGhpZXN0IG1lbiBpbiBhbGwgdGhlIGNpdGllcyB0aGVyZWFib3V0cyBhcyBicmVlZGVycyBvZiBob3JzZXMsIGFuZCBpc3N1ZWQgYSBwcm9jbGFtYXRpb24gdGhhdAo8L3RyYW5zbGF0aW9uPg=="
translation['1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5hbnlvbmUgd2hvIHN1cHBsaWVkIGEgaG9yc2UgYW5kIGFybXMgYW5kIGFuIGVmZmljaWVudCBtYW4gc2hvdWxkIGJlIGV4ZW1wdCBmcm9tIHBlcnNvbmFsIHNlcnZpY2UuIEluIHRoaXMgd2F5IGhlIGJyb3VnaHQgaXQgYWJvdXQgdGhhdCBldmVyeSBvbmUgb2YgdGhlbSBjYXJyaWVkIG91dCB0aGVzZSByZXF1aXJlbWVudHMgd2l0aCB0aGUgemVhbCBvZiBhIG1hbiBpbiBxdWVzdCBvZiBzb21lb25lIHRvIGRpZSBpbiBoaXMgc3RlYWQuIEhlIGFsc28gc3BlY2lmaWVkIGNpdGllcyB0aGF0IHdlcmUgdG8gZnVybmlzaCBjb250aW5nZW50cyBvZiBjYXZhbHJ5LCBmZWVsaW5nIHN1cmUgdGhhdCBmcm9tIHRoZSBob3JzZWJyZWVkaW5nIGNpdGllcyByaWRlcnMgcHJvdWQgb2YgdGhlaXIgaG9yc2VtYW5zaGlwIHdvdWxkIGJlIGZvcnRoY29taW5nLiBUaGlzIGFnYWluIHdhcyBjb25zaWRlcmVkIGFuIGFkbWlyYWJsZSBzdHJva2Ugb24gaGlzIHBhcnQsIHRoYXQgbm8gc29vbmVyIGhhZCBoZSByYWlzZWQgaGlzIGNhdmFscnkgdGhhbiBpdCBiZWNhbWUgYSBwb3dlcmZ1bCBib2R5IHJlYWR5IGZvciBhY3Rpb24uCjwvdHJhbnNsYXRpb24+"
translation['1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhlIGZpcnN0IHNpZ24gb2Ygc3ByaW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxkYXRlIGF1dGhuYW1lPSItMzk1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk1Ij4zOTU8L2RhdGU+IEIuQy48L25vdGU+IGhlIGNvbGxlY3RlZCB0aGUgd2hvbGUgb2YgaGlzIGZvcmNlcyBhdCA8ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1PC9kYXRlPiBCLkMuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxFcGhlc29zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxFcGhlc29zIj5FcGhlc3VzPC9wbGFjZU5hbWU+LiBXaXRoIGEgdmlldyB0byB0aGVpciB0cmFpbmluZyBoZSBvZmZlcmVkIHByaXplcyBmb3IgdGhlIGNhdmFscnkgc3F1YWRyb24gdGhhdCByb2RlIGJlc3QsIGFuZCBmb3IgdGhlIGNvbXBhbnkgb2YgaGVhdnkgICBpbmZhbnRyeSB0aGF0IHJlYWNoZWQgdGhlIGhpZ2hlc3QgbGV2ZWwgb2YgcGh5c2ljYWwgZml0bmVzcy4gSGUgYWxzbyBvZmZlcmVkIHByaXplcyB0byB0aGUgdGFyZ2V0ZWVycyBhbmQgdGhlIGFyY2hlcnMgd2hvIHNob3dlZCB0aGUgZ3JlYXRlc3QgZWZmaWNpZW5jeSBpbiB0aGVpciBwYXJ0aWN1bGFyIGR1dGllcy4gVGhlcmV1cG9uIG9uZSBtaWdodCBzZWUgZXZlcnkgZ3ltbmFzaXVtIGNyb3dkZWQgd2l0aCB0aGUgbWVuIGV4ZXJjaXNpbmcsIHRoZSByYWNlY291cnNlIHRocm9uZ2VkIHdpdGggY2F2YWxyeW1lbiByaWRpbmcsIGFuZCB0aGUgamF2ZWxpbi1tZW4gYW5kIGFyY2hlcnMgc2hvb3RpbmcgYXQgdGhlIG1hcmsuCjwvdHJhbnNsYXRpb24+"
translation['1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5JbmRlZWQgaGUgbWFkZSB0aGUgd2hvbGUgY2l0eSBpbiB3aGljaCBoZSB3YXMgcXVhcnRlcmVkIGEgc2lnaHQgdG8gc2VlLiBGb3IgdGhlIG1hcmtldCB3YXMgZnVsbCBvZiBhcm1zIGFuZCBob3JzZXMgb2YgYWxsIHNvcnRzIG9uIHNhbGUsIGFuZCB0aGUgY29wcGVyc21pdGhzLCBjYXJwZW50ZXJzLCB3b3JrZXJzIGluIGlyb24sIGNvYmJsZXJzLCBhbmQgcGFpbnRlcnMgd2VyZSBhbGwgYnVzeSBtYWtpbmcgd2VhcG9ucyBvZiB3YXIsIHNvIHRoYXQgeW91IG1pZ2h0IGhhdmUgdGhvdWdodCB0aGF0IHRoZSBjaXR5IHdhcyByZWFsbHkgYSB3YXIgZmFjdG9yeS4KPC90cmFuc2xhdGlvbj4="
translation['1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYW4gaW5zcGlyaW5nIHNpZ2h0IGl0IHdvdWxkIGhhdmUgYmVlbiB0byB3YXRjaCBBZ2VzaWxhdXMgYW5kIGFsbCBoaXMgc29sZGllcnMgYmVoaW5kIGhpbSByZXR1cm5pbmcgZ2FybGFuZGVkIGZyb20gdGhlIGd5bW5hc2l1bSBhbmQgZGVkaWNhdGluZyB0aGVpciBnYXJsYW5kcyB0byBBcnRlbWlzLiBGb3Igd2hlcmUgbWVuIHJldmVyZW5jZSB0aGUgZ29kcywgdHJhaW4gdGhlbXNlbHZlcyBpbiB3YXJmYXJlIGFuZCBwcmFjdGlzZSBvYmVkaWVuY2UsIHRoZXJlIHlvdSBzdXJlbHkgZmluZCBoaWdoIGhvcGVzIGFib3VuZGluZy4KPC90cmFuc2xhdGlvbj4="
translation['1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5Nb3Jlb3ZlciwgYmVsaWV2aW5nIHRoYXQgY29udGVtcHQgZm9yIHRoZSBlbmVteSB3b3VsZCBraW5kbGUgdGhlIGZpZ2h0aW5nIHNwaXJpdCwgaGUgZ2F2ZSBpbnN0cnVjdGlvbnMgdG8gaGlzIGhlcmFsZHMgdGhhdCB0aGUgYmFyYmFyaWFucyBjYXB0dXJlZCBpbiB0aGUgcmFpZHMgc2hvdWxkIGJlIGV4cG9zZWQgZm9yIHNhbGUgbmFrZWQuIFNvIHdoZW4gaGlzIHNvbGRpZXJzIHNhdyB0aGVtIHdoaXRlIGJlY2F1c2UgdGhleSBuZXZlciBzdHJpcHBlZCwgYW5kIGZhdCBhbmQgbGF6eSB0aHJvdWdoIGNvbnN0YW50IHJpZGluZyBpbiBjYXJyaWFnZXMsIHRoZXkgYmVsaWV2ZWQgdGhhdCB0aGUgd2FyIHdvdWxkIGJlIGV4YWN0bHkgbGlrZSBmaWdodGluZyB3aXRoIHdvbWVuLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSBhbHNvIGdhdmUgbm90aWNlIHRvIHRoZSB0cm9vcHMgdGhhdCBoZSB3b3VsZCBpbW1lZGlhdGVseSBsZWFkIHRoZW0gYnkgdGhlIHNob3J0ZXN0IHJvdXRlIHRvIHRoZSBtb3N0IGZlcnRpbGUgcGFydHMgb2YgdGhlIGNvdW50cnksIHNvIHRoYXQgaGUgbWlnaHQgYXQgb25jZSBmaW5kIHRoZW0gcHJlcGFyaW5nIHRoZW1zZWx2ZXMgaW4gYm9keSBhbmQgICBtaW5kIGZvciB0aGUgY29taW5nIHN0cnVnZ2xlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5UaXNzYXBoZXJuZXMsIGhvd2V2ZXIsIGJlbGlldmVkIHRoYXQgaW4gc2F5aW5nIHRoaXMgaGUgbWVhbnQgdG8gZGVjZWl2ZSBoaW0gYWdhaW4sIGFuZCB0aGF0IG5vdyBoZSB3b3VsZCByZWFsbHkgaW52YWRlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyMzU4IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDIzNTgiPkNhcmlhPC9wbGFjZU5hbWU+LiBBY2NvcmRpbmdseSBoZSBzZW50IGhpcyBpbmZhbnRyeSBhY3Jvc3MgaW50byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjM1OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzU4Ij5DYXJpYTwvcGxhY2VOYW1lPiBhcyBiZWZvcmUsIGFuZCBzdGF0aW9uZWQgaGlzIGNhdmFscnkgaW4gdGhlIHBsYWluIG9mIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTEyMTU2MSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTIxNTYxIj5NYWVhbmRlcjwvcGxhY2VOYW1lPi4gQnV0IEFnZXNpbGF1cyBkaWQgbm90IHBsYXkgZmFsc2U6IGluIGFjY29yZGFuY2Ugd2l0aCBoaXMgbm90aWNlIGhlIG1hcmNoZWQgc3RyYWlnaHQgdG8gdGhlIG5laWdoYm91cmhvb2Qgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTYXJkaXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNhcmRpcyI+U2FyZGlzPC9wbGFjZU5hbWU+OyBhbmQgZm9yIHRocmVlIGRheXMgaGlzIHJvdXRlIGxheSB0aHJvdWdoIGEgY291bnRyeSBiYXJlIG9mIGVuZW1pZXMsIHNvIHRoYXQgaGUgc3VwcGxpZWQgaGlzIGFybXkgd2l0aCBhYnVuZGFuY2Ugb2YgcHJvdmlzaW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['1.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgZm91cnRoIGRheSB0aGUgZW5lbXkncyBjYXZhbHJ5IGNhbWUgdXAuIFRoZWlyIGxlYWRlciB0b2xkIHRoZSBvZmZpY2VyIGluIGNvbW1hbmQgb2YgdGhlIGJhZ2dhZ2UtdHJhaW4gdG8gY3Jvc3MgdGhlIHJpdmVyIFBhY3RvbHVzIGFuZCBlbmNhbXAuIFRoZSBjYXZhbHJ5LCBtZWFudGltZSwgY2F0Y2hpbmcgc2lnaHQgb2YgdGhlIEdyZWVrIGNhbXAtZm9sbG93ZXJzIHBsdW5kZXJpbmcgaW4gc2NhdHRlcmVkIGJhbmRzLCBraWxsZWQgYSBsYXJnZSBudW1iZXIgb2YgdGhlbS4gT24gbm90aWNpbmcgdGhpcywgQWdlc2lsYXVzIG9yZGVyZWQgaGlzIGNhdmFscnkgdG8gZ28gdG8gdGhlaXIgaGVscC4gVGhlIFBlcnNpYW5zIGluIHR1cm4sIHNlZWluZyB0aGUgc3VwcG9ydHMgY29taW5nLCBnYXRoZXJlZCBpbiBhIG1hc3MgYW5kIGNvbmZyb250ZWQgdGhlbSB3aXRoIHRoZSBmdWxsIHN0cmVuZ3RoIG9mIHRoZWlyIGhvcnNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIEFnZXNpbGF1cywgcmVhbGlzaW5nIHRoYXQgdGhlIGVuZW15J3MgaW5mYW50cnkgd2FzIG5vdCB5ZXQgdXAsIHdoaWxlIGhlIGhhZCBhbGwgaGlzIHJlc291cmNlcyBvbiB0aGUgc3BvdCwgdGhvdWdodCB0aGUgbW9tZW50IHdhcyBjb21lIHRvIGpvaW4gYmF0dGxlIGlmIGhlIGNvdWxkLiBUaGVyZWZvcmUsIGFmdGVyIG9mZmVyaW5nIHNhY3JpZmljZSwgaGUgbGVkIGZvcndhcmQgdGhlIGJhdHRsZSBsaW5lIGltbWVkaWF0ZWx5IGFnYWluc3QgdGhlIG9wcG9zaW5nIGNhdmFscnksIHRoZSBoZWF2eSBpbmZhbnRyeW1lbiBvZiB0ZW4geWVhcnMgc2VydmljZSBoYXZpbmcgb3JkZXJzIHRvIHJ1biB0byBjbG9zZSBxdWFydGVycyB3aXRoIHRoZSBlbmVteSwgd2hpbGUgdGhlIHRhcmdldGVlcnMgd2VyZSB0byBsZWFkIHRoZSBhZHZhbmNlIGF0IHRoZSBkb3VibGUuIEhlIGFsc28gc2VudCB3b3JkIHRvIHRoZSBjYXZhbHJ5IHRvIGF0dGFjayBpbiB0aGUga25vd2xlZGdlIHRoYXQgaGUgaGltc2VsZiB3YXMgZm9sbG93aW5nIHdpdGggdGhlIHdob2xlIGFybXkuCjwvdHJhbnNsYXRpb24+"
translation['1.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgY2hhcmdlIG9mIHRoZSBjYXZhbHJ5IHdhcyBtZXQgYnkgdGhlIGZsb3dlciBvZiB0aGUgUGVyc2lhbnM6IGJ1dCBhcyBzb29uIGFzIHRoZSBmdWxsIHdlaWdodCBvZiB0aGUgYXR0YWNrIGZlbGwgb24gdGhlbSwgdGhleSBzd2F5ZWQsIGFuZCAgIHNvbWUgd2VyZSBjdXQgZG93biBpbW1lZGlhdGVseSBpbiB0aGUgcml2ZXIsIHdoaWxlIHRoZSByZXN0IGZsZWQuIFRoZSBHcmVla3MgZm9sbG93ZWQgdXAgdGhlaXIgc3VjY2VzcyBhbmQgY2FwdHVyZWQgdGhlaXIgY2FtcC4gVGhlIHRhcmdldGVlcnMgbmF0dXJhbGx5IGZlbGwgdG8gcGlsbGFnaW5nOyBidXQgQWdlc2lsYXVzIGRyZXcgdGhlIGxpbmVzIG9mIGhpcyBjYW1wIHJvdW5kIHNvIGFzIHRvIGVuY2xvc2UgdGhlIHByb3BlcnR5IG9mIGFsbCwgZnJpZW5kcyBhbmQgZm9lcyBhbGlrZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiBoZSBpbnRyZW5jaGVkLjwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['1.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gaGVhcmluZyB0aGF0IHRoZXJlIHdhcyBjb25mdXNpb24gYW1vbmcgdGhlIGVuZW15LCBiZWNhdXNlIGV2ZXJ5b25lIHB1dCB0aGUgYmxhbWUgZm9yIHdoYXQgaGFkIGhhcHBlbmVkIG9uIGhpcyBuZWlnaGJvdXIsIGhlIGFkdmFuY2VkIGZvcnRod2l0aCBvbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNhcmRpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU2FyZGlzIj5TYXJkaXM8L3BsYWNlTmFtZT4uIFRoZXJlIGhlIGJlZ2FuIGJ1cm5pbmcgYW5kIHBpbGxhZ2luZyB0aGUgc3VidXJicywgYW5kIG1lYW50aW1lIGlzc3VlZCBhIHByb2NsYW1hdGlvbiBjYWxsaW5nIG9uIHRob3NlIHdobyB3YW50ZWQgZnJlZWRvbSB0byBqb2luIGhpcyBzdGFuZGFyZCwgYW5kIGNoYWxsZW5naW5nIGFueSB3aG8gY2xhaW1lZCBhIHJpZ2h0IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwMDQiPkFzaWE8L3BsYWNlTmFtZT4gdG8gc2VlayBhIGRlY2lzaW9uIGJldHdlZW4gdGhlbXNlbHZlcyBhbmQgdGhlIGxpYmVyYXRvcnMgYnkgYW4gYXBwZWFsIHRvIGFybXMuCjwvdHJhbnNsYXRpb24+"
translation['1.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBubyBvbmUgY2FtZSBvdXQgdG8gb3Bwb3NlIGhpbSwgaGUgcHJvc2VjdXRlZCB0aGUgY2FtcGFpZ24gaGVuY2Vmb3J3YXJkIGluIGNvbXBsZXRlIGNvbmZpZGVuY2U6IGhlIGJlaGVsZCB0aGUgR3JlZWtzLCBjb21wZWxsZWQgZXJzdHdoaWxlIHRvIGNyaW5nZSwgbm93IGhvbm91cmVkIGJ5IHRoZWlyIG9wcHJlc3NvcnM7IGNhdXNlZCB0aG9zZSB3aG8gYXJyb2dhbnRseSBjbGFpbWVkIGZvciB0aGVtc2VsdmVzIHRoZSBob25vdXJzIHBhaWQgdG8gdGhlIGdvZHMgdG8gc2hyaW5rIGV2ZW4gZnJvbSBsb29raW5nIHRoZSBHcmVla3MgaW4gdGhlIGZhY2U7IHJlbmRlcmVkIHRoZSBjb3VudHJ5IG9mIGhpcyBmcmllbmRzIGludmlvbGF0ZSwgYW5kIHN0cmlwcGVkIHRoZSBlbmVteSdzIGNvdW50cnkgc28gdGhvcm91Z2hseSB0aGF0IGluIHR3byB5ZWFycyBoZSBjb25zZWNyYXRlZCB0byB0aGUgZ29kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVscGhpIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxEZWxwaGkiPkRlbHBoaTwvcGxhY2VOYW1lPiBtb3JlIHRoYW4gdHdvIGh1bmRyZWQgdGFsZW50cyBhcyB0aXRoZS4KPC90cmFuc2xhdGlvbj4="
translation['1.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHRoZSBQZXJzaWFuIGtpbmcsIGJlbGlldmluZyB0aGF0IFRpc3NhcGhlcm5lcyB3YXMgcmVzcG9uc2libGUgZm9yIHRoZSBiYWQgdHVybiBpbiBoaXMgYWZmYWlycywgc2VudCBkb3duIFRpdGhyYXVzdGVzIGFuZCBiZWhlYWRlZCBUaXNzYXBoZXJuZXMuIEFmdGVyIHRoaXMgdGhlIG91dGxvb2sgYmVjYW1lIHN0aWxsIG1vcmUgaG9wZWxlc3MgZm9yIHRoZSBiYXJiYXJpYW5zLCB3aGlsZSBBZ2VzaWxhdXMgcmVjZWl2ZWQgbGFyZ2UgYWNjZXNzaW9ucyAgIG9mIHN0cmVuZ3RoLiBGb3IgYWxsIHRoZSBuYXRpb25zIG9mIHRoZSBlbXBpcmUgc2VudCBlbWJhc3NpZXMgc2Vla2luZyBoaXMgZnJpZW5kc2hpcCwgYW5kIHRoZSBkZXNpcmUgZm9yIGZyZWVkb20gY2F1c2VkIG1hbnkgdG8gcmV2b2x0IHRvIGhpbSwgc28gdGhhdCBub3QgR3JlZWtzIGFsb25lLCBidXQgbWFueSBiYXJiYXJpYW5zIGFsc28gbm93IGFja25vd2xlZGdlZCB0aGUgbGVhZGVyc2hpcCBvZiBBZ2VzaWxhdXMuCjwvdHJhbnNsYXRpb24+"
translation['1.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGlzIGNvbmR1Y3QgYXQgdGhpcyBqdW5jdHVyZSBhbHNvIG1lcml0cyB1bnN0aW50ZWQgYWRtaXJhdGlvbi4gVGhvdWdoIHJ1bGVyIG9mIGNvdW50bGVzcyBjaXRpZXMgb24gdGhlIG1haW5sYW5kLCBhbmQgbWFzdGVyIG9mIGlzbGFuZHMg4oCUIGZvciB0aGUgc3RhdGUgaGFkIG5vdyBhZGRlZCB0aGUgZmxlZXQgdG8gaGlzIGNvbW1hbmQg4oCUIGJlY29taW5nIGRhaWx5IG1vcmUgZmFtb3VzIGFuZCBtb3JlIHBvd2VyZnVsOyBwbGFjZWQgaW4gYSBwb3NpdGlvbiB0byBtYWtlIHdoYXQgdXNlIGhlIHdvdWxkIG9mIGhpcyBtYW55IG9wcG9ydHVuaXRpZXM7IGFuZCBkZXNpZ25pbmcgYW5kIGV4cGVjdGluZyB0byBjcm93biBoaXMgYWNoaWV2ZW1lbnRzIGJ5IGRpc3NvbHZpbmcgdGhlIGVtcGlyZSB0aGF0IGhhZCBhdHRhY2tlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gaW4gdGhlIHBhc3Q6IGhlIHN1cHByZXNzZWQgYWxsIHRob3VnaHQgb2YgdGhlc2UgdGhpbmdzLCBhbmQgYXMgc29vbiBhcyBoZSByZWNlaXZlZCBhIHJlcXVlc3QgZnJvbSB0aGUgaG9tZSBnb3Zlcm5tZW50IHRvIGNvbWUgdG8gdGhlIGFpZCBvZiBoaXMgZmF0aGVybGFuZCwgaGUgb2JleWVkIHRoZSBjYWxsIG9mIHRoZSBzdGF0ZSwganVzdCBhcyB0aG91Z2ggaGUgd2VyZSBzdGFuZGluZyBpbiB0aGUgRXBob3IncyBwYWxhY2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SW4gdGhlIG1hcmtldCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4uIFRoZSBGaXZlIEVwaG9ycyBzYXQgdGhlcmUgZGFpbHksIGFuZCBpdCB3YXMgaW4gdGhlaXIgcG93ZXIgdG8gY2Vuc3VyZSB0aGUga2luZ3MuPC9ub3RlPiBhbG9uZSBiZWZvcmUgdGhlIEZpdmUsIHRodXMgc2hvd2luZyBjbGVhcmx5IHRoYXQgaGUgd291bGQgbm90IHRha2UgdGhlIHdob2xlIGVhcnRoIGluIGV4Y2hhbmdlIGZvciBoaXMgZmF0aGVybGFuZCwgbm9yIG5ldy1mb3VuZCBmcmllbmRzIGZvciBvbGQsIGFuZCB0aGF0IGhlIHNjb3JuZWQgdG8gY2hvb3NlIGJhc2UgYW5kIHNlY3VyZSBnYWlucyByYXRoZXIgdGhhbiB0aGF0IHdoaWNoIHdhcyByaWdodCBhbmQgaG9ub3VyYWJsZSwgZXZlbiB0aG91Z2ggaXQgd2FzIGRhbmdlcm91cy4KPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LiBUaGUgRml2ZSBFcGhvcnMgc2F0IHRoZXJlIGRhaWx5LCBhbmQgaXQgd2FzIGluIHRoZWlyIHBvd2VyIHRvIGNlbnN1cmUgdGhlIGtpbmdzLjwvdHJhbnNsYXRpb24+"
translation['1.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhyb3VnaG91dCB0aGUgdGltZSB0aGF0IGhlIHJlbWFpbmVkIGluIGhpcyBjb21tYW5kLCBhbm90aGVyIGFjaGlldmVtZW50IG9mIGhpcyBzaG93ZWQgYmV5b25kIHF1ZXN0aW9uIGhvdyBhZG1pcmFibGUgd2FzIGhpcyBza2lsbCBpbiBraW5nY3JhZnQuIEhhdmluZyBmb3VuZCBhbGwgdGhlIGNpdGllcyB0aGF0IGhlIGhhZCBnb25lIG91dCB0byBnb3Zlcm4gcmVudCBieSBmYWN0aW9uIGluIGNvbnNlcXVlbmNlIG9mIHRoZSBwb2xpdGljYWwgZGlzdHVyYmFuY2VzIHRoYXQgZm9sbG93ZWQgb24gdGhlIGNvbGxhcHNlIG9mIHRoZSBBdGhlbmlhbiBlbXBpcmUsIGhlIGJyb3VnaHQgaXQgYWJvdXQgYnkgdGhlIGluZmx1ZW5jZSBvZiBoaXMgcHJlc2VuY2UgdGhhdCB0aGUgY29tbXVuaXRpZXMgbGl2ZWQgaW4gdW5icm9rZW4gaGFybW9ueSBhbmQgcHJvc3Blcml0eSB3aXRob3V0IHJlY291cnNlIHRvIGJhbmlzaG1lbnQgb3IgZXhlY3V0aW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['1.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUgdGhlIEdyZWVrcyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDA0Ij5Bc2lhPC9wbGFjZU5hbWU+IG1vdXJuZWQgaGlzIGRlcGFydHVyZSBhcyB0aG91Z2ggdGhleSB3ZXJlIGJpZGRpbmcgZmFyZXdlbGwgbm90IG1lcmVseSB0byBhIHJ1bGVyLCBidXQgdG8gYSBmYXRoZXIgb3IgYSBjb21yYWRlLiBBbmQgYXQgdGhlIGVuZCB0aGV5IHNob3dlZCB0aGF0IHRoZWlyIGFmZmVjdGlvbiB3YXMgdW5mZWlnbmVkLiBBdCBhbnkgcmF0ZSB0aGV5IHdlbnQgd2l0aCBoaW0gdm9sdW50YXJpbHkgdG8gYWlkIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiwga25vd2luZyBhcyB0aGV5IGRpZCB0aGF0IHRoZXkgbXVzdCBtZWV0IGFuIGVuZW15IG5vdCBpbmZlcmlvciB0byB0aGVtc2VsdmVzLiBUaGlzIHRoZW4gd2FzIHRoZSBlbmQgb2YgaGlzIGFjdGl2aXRpZXMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciBjcm9zc2luZyB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2MzgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjYzOCI+SGVsbGVzcG9udDwvcGxhY2VOYW1lPiwgaGUgcGFzc2VkIHRocm91Z2ggdGhlIHZlcnkgc2FtZSB0cmliZXMgYXMgdGhlIFBlcnNpYW4ga2luZyB3aXRoIGhpcyBtaWdodHkgaG9zdDsgYW5kIHRoZSBkaXN0YW5jZSB0aGF0IGhhZCBiZWVuIHRyYXZlcnNlZCBieSB0aGUgYmFyYmFyaWFuIGluIGEgeWVhciB3YXMgY292ZXJlZCBieSBBZ2VzaWxhdXMgaW4gbGVzcyB0aGFuIGEgbW9udGguIEZvciBoZSBoYWQgbm8gaW50ZW50aW9uIG9mIGFycml2aW5nIHRvbyBsYXRlIHRvIGFpZCBoaXMgZmF0aGVybGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gaGUgaGFkIHBhc3NlZCB0aHJvdWdoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA2NjY3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDY2NjciPk1hY2Vkb25pYTwvcGxhY2VOYW1lPiBhbmQgcmVhY2hlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAxMzk5Ij5UaGVzc2FseTwvcGxhY2VOYW1lPiwgdGhlIHBlb3BsZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLExhcmlzYSxBZW9saXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLExhcmlzYSxBZW9saXMiPkxhcmlzYTwvcGxhY2VOYW1lPiwgQ3Jhbm5vbiwgU2NvdHVzc2EgYW5kIFBoYXJzYWx1cywgd2hvIHdlcmUgYWxsaWVzIG9mIHRoZSBCb2VvdGlhbnMsIGFsbCB0aGUgVGhlc3NhbGlhbnMsIGluIGZhY3QsIGV4Y2VwdCB0aG9zZSB3aG8gaGFwcGVuZWQgdG8gYmUgaW4gZXhpbGUgYXQgdGhlIHRpbWUsIGZvbGxvd2VkIGF0IGhpcyBoZWVscyBhbmQga2VwdCBtb2xlc3RpbmcgaGltLiBGb3IgYSB0aW1lIGhlIGxlZCB0aGUgYXJteSBpbiBhIGhvbGxvdyBzcXVhcmUsIHdpdGggb25lIGhhbGYgb2YgdGhlIGNhdmFscnkgaW4gZnJvbnQgYW5kIHRoZSBvdGhlciBoYWxmIGluIHRoZSByZWFyOyBidXQgZmluZGluZyBoaXMgcHJvZ3Jlc3MgaGFtcGVyZWQgYnkgVGhlc3NhbGlhbiBhdHRhY2tzIG9uIGhpcyByZWFyZ3VhcmQsIGhlIHNlbnQgcm91bmQgYWxsIHRoZSBjYXZhbHJ5IGZyb20gdGhlIHZhbmd1YXJkIHRvIHRoZSByZWFyLCBleGNlcHQgaGlzIG93biBlc2NvcnQuCjwvdHJhbnNsYXRpb24+"
translation['2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlIHR3byBmb3JjZXMgZmFjZWQgb25lIGFub3RoZXIgaW4gbGluZSBvZiBiYXR0bGUsIHRoZSBUaGVzc2FsaWFucywgYmVsaWV2aW5nIGl0IGluZXhwZWRpZW50IHRvIGVuZ2FnZSBoZWF2eSBpbmZhbnRyeSB3aXRoIGNhdmFscnksIHdoZWVsZWQgcm91bmQgYW5kIHNsb3dseSByZXRpcmVkLCB0aGVpciBlbmVteSBmb2xsb3dpbmcgdmVyeSBjYXV0aW91c2x5LiBBZ2VzaWxhdXMsIG5vdGljaW5nIHRoZSBlcnJvcnMgaW50byB3aGljaCBib3RoIHNpZGVzIHdlcmUgZmFsbGluZywgbm93IHNlbnQgcm91bmQgaGlzIG93biBlc2NvcnQgb2Ygc3RhbHdhcnQgaG9yc2VtZW4sIHdpdGggb3JkZXJzIHRvIGJpZCB0aGUgb3RoZXJzIHRvIGNoYXJnZSBhdCBmdWxsIHNwZWVkLCBhbmQgdG8gZG8gdGhlIHNhbWUgdGhlbXNlbHZlcywgICBhbmQgbm90IHRvIGdpdmUgdGhlIGVuZW15IGEgY2hhbmNlIG9mIHJhbGx5aW5nLiBBcyBmb3IgdGhlIFRoZXNzYWxpYW5zLCBvbiBzZWVpbmcgdGhlIHVuZXhwZWN0ZWQgY2hhcmdlIHRoZXkgZWl0aGVyIGRpZCBub3QgcmFsbHkgYXQgYWxsLCBvciB3ZXJlIGNhcHR1cmVkIGluIHRoZSBhdHRlbXB0IHRvIGRvIHNvIHdpdGggdGhlaXIgaG9yc2VzIGJyb2Fkc2lkZSB0byB0aGUgZW5lbXkuCjwvdHJhbnNsYXRpb24+"
translation['2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlBvbHljaGFybXVzIHRoZSBQaGFyc2FsaWFuLCBjb21tYW5kZXIgb2YgdGhlIGNhdmFscnksIGRpZCBpbmRlZWQgdHVybiwgYW5kIGZlbGwgZmlnaHRpbmcgYWxvbmcgd2l0aCB0aG9zZSBhYm91dCBoaW0uIEhlcmV1cG9uIGVuc3VlZCBhIHdpbGQgZmxpZ2h0LCBzbyB0aGF0IHNvbWUgb2YgdGhlIGVuZW15IHdlcmUga2lsbGVkIGFuZCBzb21lIHdlcmUgdGFrZW4gcHJpc29uZXJzOiBhdCBhbnkgcmF0ZSB0aGV5IG5ldmVyIGhhbHRlZCB1bnRpbCB0aGV5IHJlYWNoZWQgTXQuIE5hcnRoYWNpdW0uCjwvdHJhbnNsYXRpb24+"
translation['2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoYXQgZGF5IEFnZXNpbGF1cyBzZXQgdXAgYSB0cm9waHkgYmV0d2VlbiBQcmFzIGFuZCBOYXJ0aGFjaXVtLCBhbmQgaGVyZSBmb3IgdGhlIG1vbWVudCBoZSBwYXVzZWQsIG1pZ2h0aWx5IHBsZWFzZWQgd2l0aCBoaXMgZXhwbG9pdCwgc2luY2UgaGUgaGFkIGRlZmVhdGVkIGFuIGVuZW15IGlub3JkaW5hdGVseSBwcm91ZCBvZiBoaXMgaG9yc2VtYW5zaGlwIHdpdGggdGhlIGNhdmFscnkgdGhhdCBoZSBoYWQgaGltc2VsZiBjcmVhdGVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbiB0aGUgbW9ycm93IGhlIGNyb3NzZWQgdGhlIEFjaGFlYW4gbW91bnRhaW5zIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGh0aGlhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQaHRoaWEiPlBodGhpYTwvcGxhY2VOYW1lPiwgYW5kIG5vdyBoaXMgcm91dGUgbGVkIGhpbSB0aHJvdWdoIGZyaWVuZGx5IGNvdW50cnkgdGlsbCBoZSByZWFjaGVkIHRoZSBib3JkZXJzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjgzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2ODMiPkJvZW90aWE8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkhlcmUgaGUgZm91bmQgYXJyYXllZCBhZ2FpbnN0IGhpbSB0aGUgVGhlYmFucywgQXRoZW5pYW5zLCBBcmdpdmVzLCBDb3JpbnRoaWFucywgQWVuaWFuaWFucywgRXVib2VhbnMsIGFuZCBib3RoIHRoZSBMb2NyaWFuIHRyaWJlcy4gV2l0aG91dCBhIG1vbWVudCdzIGRlbGF5LCBpbiBmdWxsIHZpZXcgb2YgdGhlIGVuZW15LCBoZSBkcmV3IHVwIGhpcyBhcm15IGZvciBiYXR0bGUuIEluIGFkZGl0aW9uIHRvIHRoZSBhcm15IHRoYXQgaGUgaGFkIGJyb3VnaHQgd2l0aCBoaW0gaGUgaGFkIGEgcmVnaW1lbnQgYW5kIGEgaGFsZiBvZiBMYWNlZGFlbW9uaWFucywgYW5kIG9mIHRoZSBsb2NhbCBhbGxpZXMgb25seSB0aGUgUGhvY2lhbnMgYW5kIE9yY2hvbWVuaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk5vdyBJIGFtIG5vdCBnb2luZyB0byBzYXkgdGhhdCBoaXMgZm9yY2VzIHdlcmUgZmFyIGluZmVyaW9yIGluIG51bWJlcnMgYW5kIGluIHF1YWxpdHksIGFuZCB0aGF0IG5ldmVydGhlbGVzcyBoZSBhY2NlcHRlZCBiYXR0bGUuIFRoYXQgc3RhdGVtZW50LCBJIHRoaW5rLCB3b3VsZCBidXQgc2hvdyBhIHdhbnQgb2YgY29tbW9uIHNlbnNlIGluIEFnZXNpbGF1cyBhbmQgbXkgb3duIGZvbGx5IGluIHByYWlzaW5nIGEgbGVhZGVyIHdobyB3YW50b25seSBqZW9wYXJkaXNlZCBpbnRlcmVzdHMgb2Ygdml0YWwgbW9tZW50LiBPbiB0aGUgY29udHJhcnkg4oCUIGFuZCB0aGlzIGlzIHdoYXQgSSBkbyBhZG1pcmUgaGltIGZvciDigJQgaGUgYnJvdWdodCBpbnRvICAgdGhlIGZpZWxkIGFuIGFybXkgbm90IGEgd2hpdCBpbmZlcmlvciB0byB0aGUgZW5lbXknczsgaGUgc28gYXJtZWQgaXQgdGhhdCBpdCBsb29rZWQgb25lIHNvbGlkIG1hc3Mgb2YgYnJvbnplIGFuZCBzY2FybGV0OyBoZSB0b29rIGNhcmUgdG8gcmVuZGVyIGhpcyBtZW4KPC90cmFuc2xhdGlvbj4="
translation['2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPmNhcGFibGUgb2YgbWVldGluZyBhbGwgY2FsbHMgb24gdGhlaXIgZW5kdXJhbmNlOyBoZSBmaWxsZWQgdGhlaXIgaGVhcnRzIHdpdGggY29uZmlkZW5jZSB0aGF0IHRoZXkgd2VyZSBhYmxlIHRvIHdpdGhzdGFuZCBhbnkgYW5kIGV2ZXJ5IGVuZW15OyBoZSBpbnNwaXJlZCB0aGVtIGFsbCB3aXRoIGFuIGVhZ2VyIGRldGVybWluYXRpb24gdG8gb3V0LWRvIG9uZSBhbm90aGVyIGluIHZhbG91cjsgYW5kIGxhc3RseSBoZSBmaWxsZWQgYWxsIHdpdGggYW50aWNpcGF0aW9uIHRoYXQgbWFueSBnb29kIHRoaW5ncyB3b3VsZCBiZWZhbGwgdGhlbSwgaWYgb25seSB0aGV5IHByb3ZlZCBnb29kIG1lbi4gRm9yIGhlIGJlbGlldmVkIHRoYXQgbWVuIHNvIHByZXBhcmVkIGZpZ2h0IHdpdGggYWxsIHRoZWlyIG1pZ2h0OyBub3IgaW4gcG9pbnQgb2YgZmFjdCBkaWQgaGUgZGVjZWl2ZSBoaW1zZWxmLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHdpbGwgZGVzY3JpYmUgdGhlIGJhdHRsZSwgZm9yIHRoZXJlIGhhcyBiZWVuIG5vbmUgbGlrZSBpdCBpbiBvdXIgdGltZS4gVGhlIHR3byBhcm1pZXMgbWV0IGluIHRoZSBwbGFpbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTIzNSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMjM1Ij5Db3JvbmVhPC9wbGFjZU5hbWU+LCBBZ2VzaWxhdXMgYWR2YW5jaW5nIGZyb20gdGhlIENlcGhpc3VzLCB0aGUgVGhlYmFucyBhbmQgdGhlaXIgYWxsaWVzIGZyb20gSGVsaWNvbi4gVGhlaXIgZXllcyB0b2xkIHRoZW0gdGhhdCB0aGUgb3Bwb3NpbmcgbGluZXMgb2YgYmF0dGxlIHdlcmUgZXhhY3RseSBtYXRjaGVkIGluIHN0cmVuZ3RoLCBhbmQgdGhlIG51bWJlciBvZiBjYXZhbHJ5IG9uIGJvdGggc2lkZXMgd2FzIGFib3V0IHRoZSBzYW1lLiBBZ2VzaWxhdXMgd2FzIG9uIHRoZSByaWdodCB3aW5nIG9mIGhpcyBhcm15IGFuZCBoYWQgdGhlIE9yY2hvbWVuaWFucyBvbiBoaXMgZXh0cmVtZSBsZWZ0LiBPbiB0aGUgb3RoZXIgc2lkZSB0aGUgVGhlYmFucyB0aGVtc2VsdmVzIHdlcmUgb24gdGhlIHJpZ2h0IHdpbmcgYW5kIHRoZSBBcmdpdmVzIGhlbGQgdGhlIGxlZnQuCjwvdHJhbnNsYXRpb24+"
translation['2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyB0aGV5IGFwcHJvYWNoZWQgYm90aCBzaWRlcyBmb3IgYSB0aW1lIG1haW50YWluZWQgY29tcGxldGUgc2lsZW5jZSwgYnV0IHdoZW4gdGhleSB3ZXJlIGFib3V0IGEgZnVybG9uZyBhcGFydCwgdGhlIFRoZWJhbnMgcmFpc2VkIHRoZSBiYXR0bGUtY3J5IGFuZCBydXNoZWQgZm9yd2FyZCBhdCB0aGUgZG91YmxlLiBUaGUgZGlzdGFuY2UgYmV0d2VlbiB0aGVtIHdhcyBzdGlsbCBhYm91dCBvbmUgaHVuZHJlZCB5YXJkcyB3aGVuIHRoZSBtZXJjZW5hcnkgdHJvb3BzIHVuZGVyIEhlcmlwcGlkYXMsIGNvbnNpc3Rpbmcgb2YgdGhlCjwvdHJhbnNsYXRpb24+"
translation['2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5tZW4gd2hvIGhhZCBnb25lIHdpdGggQWdlc2lsYXVzIGZyb20gaG9tZSBhbmQgc29tZSBvZiB0aGUgQ3lyZWlhbnMsIGRhc2hlZCBvdXQgaW4gdHVybiBmcm9tIHRoZWlyIG1haW4gYm9keSwgY2xvc2VseSBmb2xsb3dlZCBieSBJb25pYW5zLCBBZW9saWFucyBhbmQgICBIZWxsZXNwb250aW5lcy4gQWxsIHRoZXNlIHRvb2sgcGFydCBpbiB0aGUgZGFzaCwgYW5kIGNvbWluZyB3aXRoaW4gc3BlYXItdGhydXN0IHB1dCB0byBmbGlnaHQgdGhlIGZvcmNlIGluIGZyb250IG9mIHRoZW0uIEFzIGZvciB0aGUgQXJnaXZlcywgdGhleSBmbGVkIHRvd2FyZHMgSGVsaWNvbiB3aXRob3V0IGF3YWl0aW5nIHRoZSBhdHRhY2sgb2YgQWdlc2lsYXVzLiBBbmQgbm93IHNvbWUgb2YgdGhlIG1lcmNlbmFyaWVzIHdlcmUgaW4gdGhlIGFjdCBvZiBjcm93bmluZyBBZ2VzaWxhdXMgd2l0aCBhIHdyZWF0aCwgd2hlbiBhIG1hbiByZXBvcnRlZCB0byBoaW0gdGhhdCB0aGUgVGhlYmFucyBoYWQgY3V0IHRoZWlyIHdheSB0aHJvdWdoIHRoZSBPcmNob21lbmlhbnMgYW5kIHdlcmUgYW1vbmcgdGhlIGJhZ2dhZ2UgdHJhaW4uIFNvIGhlIGltbWVkaWF0ZWx5IHdoZWVsZWQgaGlzIG1haW4gYm9keSBhbmQgYWR2YW5jZWQgYWdhaW5zdCB0aGVtOyBhbmQgdGhlIFRoZWJhbnMgaW4gdGhlaXIgdHVybiwgc2VlaW5nIHRoYXQgdGhlaXIgYWxsaWVzIGhhZCBzb3VnaHQgcmVmdWdlIGF0IHRoZSBmb290IG9mIE10LiBIZWxpY29uLCBhbmQgd2FudGluZyB0byBicmVhayB0aHJvdWdoIGFuZCBqb2luIHRoZWlyIGZyaWVuZHMsIG1hZGUgYSBzdHJvbmcgbW92ZSBmb3J3YXJkLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyBqdW5jdHVyZSBvbmUgbWF5IHNheSB3aXRob3V0IGZlYXIgb2YgY29udHJhZGljdGlvbiB0aGF0IEFnZXNpbGF1cyBzaG93ZWQgY291cmFnZTsgYnV0IHRoZSBjb3Vyc2UgdGhhdCBoZSBhZG9wdGVkIHdhcyBub3QgdGhlIHNhZmVzdC4gRm9yIGhlIG1pZ2h0IGhhdmUgYWxsb3dlZCB0aGUgbWVuIHdobyB3ZXJlIHRyeWluZyB0byBicmVhayB0aHJvdWdoIHRvIHBhc3MsIGFuZCB0aGVuIGhhdmUgZm9sbG93ZWQgdGhlbSBhbmQgYW5uaWhpbGF0ZWQgdGhvc2UgaW4gdGhlIHJlYXIuIEluc3RlYWQgb2YgZG9pbmcgdGhhdCBoZSBtYWRlIGEgZnVyaW91cyBmcm9udGFsIGF0dGFjayBvbiB0aGUgVGhlYmFucy4gVGhydXN0aW5nIHNoaWVsZCBhZ2FpbnN0IHNoaWVsZCwgdGhleSBzaG92ZWQgYW5kIGZvdWdodCBhbmQga2lsbGVkIGFuZCBmZWxsLiBUaGVyZSB3YXMgbm8gc2hvdXRpbmcsIG5vciB3YXMgdGhlcmUgc2lsZW5jZSwgYnV0IHRoZSBzdHJhbmdlIG5vaXNlIHRoYXQgd3JhdGggYW5kIGJhdHRsZSB0b2dldGhlciB3aWxsIHByb2R1Y2UuIEluIHRoZSBlbmQgc29tZSBvZiB0aGUgVGhlYmFucyBicm9rZSB0aHJvdWdoIGFuZCByZWFjaGVkIEhlbGljb24sIGJ1dCBtYW55IGZlbGwgZHVyaW5nIHRoZSByZXRyZWF0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHZpY3RvcnkgbGF5IHdpdGggQWdlc2lsYXVzOyBidXQgaGUgaGltc2VsZiBoYWQgYmVlbiBjYXJyaWVkIHdvdW5kZWQgdG8gaGlzIGJhdHRsZS1saW5lLCB3aGVuIHNvbWUgaG9yc2VtZW4gcm9kZSB1cCwgYW5kIHRvbGQgaGltIHRoYXQgZWlnaHR5IG9mIHRoZSBlbmVteSByZXRhaW5pbmcgdGhlaXIgYXJtcyBoYWQgdGFrZW4gY292ZXIgaW4gdGhlIHRlbXBsZSwgYW5kIHRoZXkgYXNrZWQgd2hhdCB0aGV5IHNob3VsZCBkby4gVGhvdWdoIHdvdW5kZWQgaW4gZXZlcnkgcGFydCBvZiBoaXMgYm9keSB3aXRoIGV2ZXJ5IHNvcnQgb2Ygd2VhcG9uLCBoZSBkaWQgbm90ICAgZm9yZ2V0IGhpcyBkdXR5IHRvd2FyZHMgdGhlIGdvZHMsIGJ1dCBnYXZlIG9yZGVycyB0aGF0IHRoZXNlIG1lbiBzaG91bGQgYmUgc3VmZmVyZWQgdG8gZ28gd2hpdGhlcnNvZXZlciB0aGV5IHdpc2hlZCwgYW5kIHdvdWxkIG5vdCBzdWZmZXIgdGhlbSB0byBiZSBoYXJtZWQsIGFuZCBjaGFyZ2VkIGhpcyBlc2NvcnQgb2YgY2F2YWxyeSB0byBjb25kdWN0IHRoZW0gdG8gYSBwbGFjZSBvZiBzYWZldHkuCjwvdHJhbnNsYXRpb24+"
translation['2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHRoYXQgdGhlIGZpZ2h0aW5nIHdhcyBhdCBhbiBlbmQsIGEgd2VpcmQgc3BlY3RhY2xlIG1ldCB0aGUgZXllLCBhcyBvbmUgc3VydmV5ZWQgdGhlIHNjZW5lIG9mIHRoZSBjb25mbGljdCDigJQgdGhlIGVhcnRoIHN0YWluZWQgd2l0aCBibG9vZCwgZnJpZW5kIGFuZCBmb2UgbHlpbmcgZGVhZCBzaWRlIGJ5IHNpZGUsIHNoaWVsZHMgc21hc2hlZCB0byBwaWVjZXMsIHNwZWFycyBzbmFwcGVkIGluIHR3bywgZGFnZ2VycyBiYXJlZCBvZiB0aGVpciBzaGVhdGhzLCBzb21lIG9uIHRoZSBncm91bmQsIHNvbWUgZW1iZWRkZWQgaW4gdGhlIGJvZGllcywgc29tZSB5ZXQgZ3JpcHBlZCBieSB0aGUgaGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuLCBhcyB0aGUgZGF5IHdhcyBmYXIgc3BlbnQsIGhhdmluZyBkcmFnZ2VkIHRoZSBlbmVteSdzIGRlYWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SW4gb3JkZXIgdGhhdCB0aGUgVGhlYmFucyBtaWdodCBub3QgcmVjb3ZlciB0aGVtLiBCdXQgc29tZSB0aGluayA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG/ts69IM+Azr/Ou861zrzhvbfPic69PC9mb3JlaWduPiBjb3JydXB0Ljwvbm90ZT4gd2l0aGluIHRoZWlyIGJhdHRsZSBsaW5lLCB0aGV5IHN1cHBlZCBhbmQgc2xlcHQuIEVhcmx5IG5leHQgbW9ybmluZyBBZ2VzaWxhdXMgb3JkZXJlZCBHeWxpcywgdGhlIHBvbGVtYXJjaCwgdG8gZHJhdyB1cCB0aGUgYXJteSBpbiBiYXR0bGUgb3JkZXIgYW5kIHRvIHNldCB1cCBhIHRyb3BoeSwgYW5kIHRvIGNvbW1hbmQgZXZlcnkgbWFuIHRvIHdlYXIgYSB3cmVhdGggaW4gaG9ub3VyIG9mIHRoZSBnb2Q8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG/ts69IM+Azr/Ou861zrzhvbfPic69PC9mb3JlaWduPiBjb3JydXB0Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BcG9sbG8uPC9ub3RlPiBhbmQgYWxsIHRoZSBmbHV0ZS1wbGF5ZXJzIHRvIHBsYXkuCjwvdHJhbnNsYXRpb24+"
translation['2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoaWxlIHRoZXkgd2VyZSBjYXJyeWluZyBvdXQgdGhlc2Ugb3JkZXJzIHRoZSBUaGViYW5zIHNlbnQgYSBoZXJhbGQsIGFza2luZyBsZWF2ZSB0byBidXJ5IHRoZWlyIGRlYWQgdW5kZXIgcHJvdGVjdGlvbiBvZiBhIHRydWNlLiBBbmQgc28gYSB0cnVjZSB3YXMgbWFkZSwgYW5kIEFnZXNpbGF1cyBsZWZ0IGZvciBob21lLCBjaG9vc2luZywgaW5zdGVhZCBvZiBzdXByZW1lIHBvd2VyIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwMDQiPkFzaWE8L3BsYWNlTmFtZT4sIHRvIHJ1bGUgYW5kIHRvIGJlIHJ1bGVkIGF0IGhvbWUgYWNjb3JkaW5nIHRvIHRoZSBjb25zdGl0dXRpb24uCjwvdHJhbnNsYXRpb24+"
translation['2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U29tZSB0aW1lIGFmdGVyd2FyZHMsIGZpbmRpbmcgdGhhdCB0aGUgQXJnaXZlcyB3ZXJlIGVuam95aW5nIHRoZSBmcnVpdHMgb2YgdGhlaXIgbGFuZCwgdGhhdCB0aGV5IGhhZCBhcHByb3ByaWF0ZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb3JpbnRoIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDb3JpbnRoIj5Db3JpbnRoPC9wbGFjZU5hbWU+IGFuZCB3ZXJlIGZpbmRpbmcgdGhlIHdhciBhIHBsZWFzYW50IG9jY3VwYXRpb24sIGhlIG1hZGUgYW4gZXhwZWRpdGlvbiBhZ2FpbnN0IHRoZW0uIEhlIGZpcnN0IGxhaWQgd2FzdGUgYWxsIHRoZWlyIHRlcnJpdG9yeSwgdGhlbiAgIGNyb3NzZWQgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb3JpbnRoIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDb3JpbnRoIj5Db3JpbnRoPC9wbGFjZU5hbWU+IGJ5IHRoZSBwYXNzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBNU1MuIG9mIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gNC40LjE5IiB2YWxpZD0ieWVzIj5YZW4uIEhlbGwuIDQuNC4xOTwvYmlibD4gZ2l2ZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6xz4ThvbAgzqTOtc6z4b2zzrHOvTwvZm9yZWlnbj4gaW4gdGhlIGNvcnJlc3BvbmRpbmcgcGFzc2FnZTsgdGhpcyBpcyBjb3JyZWN0ZWQgdG8gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOsc+E4b2wIM6kzrXOveG9s86xzr08L2ZvcmVpZ24+IOKAnGJ5IHdheSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRlbmVhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUZW5lYSI+VGVuZWE8L3BsYWNlTmFtZT4s4oCdIHdoaWNoIGlzIHByb2JhYmx5IHRoZSByaWdodCByZWFkaW5nIGhlcmUuPC9ub3RlPiBhbmQgY2FwdHVyZWQgdGhlIHdhbGxzIGxlYWRpbmcgdG8gTGVjaGFldW0uIEhhdmluZyB0aHVzIHVuYmFycmVkIHRoZSBnYXRlcyBvZiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEhlbGwuIDQuNC4xOSIgdmFsaWQ9InllcyI+WGVuLiBIZWxsLiA0LjQuMTk8L2JpYmw+IGdpdmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOsc+E4b2wIM6kzrXOs+G9s86xzr08L2ZvcmVpZ24+IGluIHRoZSBjb3JyZXNwb25kaW5nIHBhc3NhZ2U7IHRoaXMgaXMgY29ycmVjdGVkIHRvIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs66zrHPhOG9sCDOpM61zr3hvbPOsc69PC9mb3JlaWduPiDigJxieSB3YXkgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUZW5lYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGVuZWEiPlRlbmVhPC9wbGFjZU5hbWU+LOKAnSB3aGljaCBpcyBwcm9iYWJseSB0aGUgcmlnaHQgcmVhZGluZyBoZXJlLjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE3MDc2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTcwNzYiPlBlbG9wb25uZXNlPC9wbGFjZU5hbWU+LCBoZSByZXR1cm5lZCBob21lIGZvciB0aGUgZmVzdGl2YWwgb2YgSHlhY2ludGh1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DZWxlYnJhdGVkIGFubnVhbGx5IGF0IEFteWNsYWUsIGVhcmx5IGluIHRoZSBzdW1tZXIuPC9ub3RlPiBhbmQgam9pbmVkIGluIHNpbmdpbmcgdGhlIHBhZWFuIGluIGhvbm91ciBvZiB0aGUgZ29kLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BcG9sbG8sIHdobyBoYWQgYWNjaWRlbnRhbGx5IGtpbGxlZCBIeWFjaW50aHVzLjwvbm90ZT4gdGFraW5nIHRoZSBwbGFjZSBhc3NpZ25lZCB0byBoaW0gYnkgdGhlIGNob2lybWFzdGVyLgogICAgPC90cmFuc2xhdGlvbj4="
translation['2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgYSB0aW1lLCBkaXNjb3ZlcmluZyB0aGF0IHRoZSBDb3JpbnRoaWFucyB3ZXJlIGtlZXBpbmcgYWxsIHRoZWlyIGNhdHRsZSBzYWZlIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGVyYWNob3JhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQZXJhY2hvcmEiPlBlaXJhZXVtPC9wbGFjZU5hbWU+LCBhbmQgc293aW5nIGFuZCByZWFwaW5nIHRoZSBjcm9wcyB0aHJvdWdob3V0IHRoYXQgZGlzdHJpY3QsIGFuZCDigJQgd2hhdCBoZSB0aG91Z2h0IG1vc3Qgc2VyaW91cyDigJQgdGhhdCB0aGUgQm9lb3RpYW5zIHdlcmUgZmluZGluZyB0aGlzIHJvdXRlIGNvbnZlbmllbnQgZm9yIHNlbmRpbmcgc3VwcG9ydCB0byB0aGUgQ29yaW50aGlhbnMsIHdpdGggQ3JldXNpcyBhcyB0aGVpciBiYXNlLCBoZSBtYXJjaGVkIGFnYWluc3QgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxQZXJhY2hvcmEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFBlcmFjaG9yYSI+UGVpcmFldW08L3BsYWNlTmFtZT4uIFNlZWluZyB0aGF0IGl0IHdhcyBzdHJvbmdseSBndWFyZGVkLCBoZSBtb3ZlZCBoaXMgY2FtcCBhZnRlciB0aGUgbW9ybmluZyBtZWFsIHRvIGEgcG9zaXRpb24gYmVmb3JlIHRoZSBjYXBpdGFsLCBhcyB0aG91Z2ggdGhlIGNpdHkgd2FzIGFib3V0IHRvIHN1cnJlbmRlci4KICAgIDwvdHJhbnNsYXRpb24+"
translation['2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgYmVjb21pbmcgYXdhcmUgdGhhdCBzdXBwb3J0cyBoYWQgYmVlbiBodXJyaWVkbHkgcG91cmVkIGludG8gdGhlIGNpdHkgZHVyaW5nIHRoZSBuaWdodCBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGVyYWNob3JhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQZXJhY2hvcmEiPlBlaXJhZXVtPC9wbGFjZU5hbWU+LCBoZSB0dXJuZWQgYWJvdXQgYXQgZGF5YnJlYWsgYW5kIGNhcHR1cmVkIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGVyYWNob3JhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQZXJhY2hvcmEiPlBlaXJhZXVtPC9wbGFjZU5hbWU+LCBmaW5kaW5nIGl0IHVuZGVmZW5kZWQsIGFuZCBldmVyeXRoaW5nIGluIGl0LCBhbG9uZyB3aXRoIHRoZSBmb3J0cmVzc2VzIHRoYXQgc3Rvb2QgdGhlcmUsIGZlbGwgaW50byBoaXMgaGFuZHMuIEhhdmluZyBkb25lIHRoaXMsIGhlIHJldHVybmVkIGhvbWUuCjwvdHJhbnNsYXRpb24+"
translation['2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhlc2UgZXZlbnRzLCB0aGUgQWNoYWVhbnMsIHdobyB3ZXJlIHplYWxvdXMgYWR2b2NhdGVzIG9mIHRoZSBhbGxpYW5jZSwgYmVnZ2VkIGhpbSB0byBqb2luIHRoZW0gaW4gYW4gZXhwZWRpdGlvbiBhZ2FpbnN0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjc5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzkiPkFjYXJuYW5pYTwvcGxhY2VOYW1lPjxnYXAgY2xhc3M9InRyYW5zbGF0aW9uIiAvPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U29tZXRoaW5nIHNlZW1zIHRvIGJlIGxvc3QgaGVyZSwgcHJvYmFibHkgYSBwYXNzYWdlIHRoYXQgZW5kZWQgd2l0aCB0aGUgd29yZHMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PPhc+Dz4TPgc6xz4TOteG9u861zrkgzrHhvZDPhM6/4b+Wz4IgzrXhvLDPgiDhvIjOus6xz4HOvc6xzr3hvbfOsc69LjwvZm9yZWlnbj48L25vdGU+IEFuZCB3aGVuIHRoZSBBY2FybmFuaWFucyBhdHRhY2tlZCBoaW0gaW4gYSBtb3VudGFpbiBwYXNzIGhlIHNlaXplZCB0aGUgaGVpZ2h0cyBhYm92ZSB0aGVpciBoZWFkcyB3aXRoIGhpcyBsaWdodCBpbmZhbnRyeSw8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg8+Fz4PPhM+BzrHPhM614b27zrXOuSDOseG9kM+Ezr/hv5bPgiDOteG8sM+CIOG8iM66zrHPgc69zrHOveG9t86xzr0uPC9mb3JlaWduPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgd29yZHMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4TOv+G/ls+CIM+IzrnOu86/4b+Wz4I8L2ZvcmVpZ24+IGFyZSBwcm9iYWJseSBhIGNvcnJlY3Rpb24gYnkgWC47IGhlIHNheXMgdGhlIGhlaWdodHMgd2VyZSB0YWtlbiBieSB0aGUgaGVhdnkgaW5mYW50cnkgaW4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiA0LjYuMTEiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gNC42LjExPC9iaWJsPi48L25vdGU+IGZvdWdodCBhbiBlbmdhZ2VtZW50IGFuZCwgYWZ0ZXIgaW5mbGljdGluZyAgIHNldmVyZSBsb3NzZXMgb24gdGhlbSwgc2V0IHVwIGEgdHJvcGh5OyBub3IgZGlkIGhlIGNlYXNlIHVudGlsIGhlIGhhZCBpbmR1Y2VkIHRoZSBBY2FybmFuaWFucywgQWV0b2xpYW5zIGFuZCBBcmdpdmVzIHRvIGVudGVyIGludG8gZnJpZW5kc2hpcCB3aXRoIHRoZSBBY2hhZWFucyBhbmQgYWxsaWFuY2Ugd2l0aCBoaW1zZWxmLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM6/4b+Wz4Igz4jOuc67zr/hv5bPgjwvZm9yZWlnbj4gYXJlIHByb2JhYmx5IGEgY29ycmVjdGlvbiBieSBYLjsgaGUgc2F5cyB0aGUgaGVpZ2h0cyB3ZXJlIHRha2VuIGJ5IHRoZSBoZWF2eSBpbmZhbnRyeSBpbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEhlbGwuIDQuNi4xMSIgdmFsaWQ9InllcyI+WGVuLiBIZWxsLiA0LjYuMTE8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iY29tIj5QZWFjZSBvZiBBbnRhbGNpZGFzLjwvbm90ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODciPjM4NzwvZGF0ZT4gQi5DLjwvbm90ZT48ZGF0ZSBhdXRobmFtZT0iLTM4NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4NyI+Mzg3PC9kYXRlPiBCLkMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldoZW4gdGhlIGVuZW15IHNlbnQgZW1iYXNzaWVzIGRlc2lyaW5nIHBlYWNlLCBBZ2VzaWxhdXMgb3Bwb3NlZCB0aGUgcGVhY2UgdW50aWwgaGUgZm9yY2VkIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ29yaW50aCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ29yaW50aCI+Q29yaW50aDwvcGxhY2VOYW1lPiBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUaGViZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRoZWJlcyI+VGhlYmVzPC9wbGFjZU5hbWU+IHRvIHJlc3RvcmUgdG8gdGhlaXIgaG9tZXMgdGhlIGNpdGl6ZW5zIHdobyBoYWQgYmVlbiBleGlsZWQgb24gYWNjb3VudCBvZiB0aGVpciBzeW1wYXRoeTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4MSI+MzgxPC9kYXRlPiBCLkMuPC9ub3RlPiB3aXRoIHRoZSBMYWNlZGFlbW9uaWFucy4gQW5kIGFnYWluIGxhdGVyLCBoYXZpbmcgbGVkIGFuIGV4cGVkaXRpb24gaW4gcGVyc29uIGFnYWluc3QgUGhsZWl1cywgaGUgYWxzbyByZXN0b3JlZCB0aGUgUGhsZWlhc2lhbiBleGlsZXMgd2hvIGhhZCBzdWZmZXJlZCBpbiB0aGUgc2FtZSBjYXVzZS4gUG9zc2libHkgc29tZSBtYXkgY2Vuc3VyZSB0aGVzZSBhY3Rpb25zIG9uIG90aGVyIGdyb3VuZHMsIGJ1dCBhdCBsZWFzdCBpdCBpcyBvYnZpb3VzIHRoYXQgdGhleSB3ZXJlIHByb21wdGVkIGJ5IGEgc3Bpcml0IG9mIHRydWUgY29tcmFkZXNoaXAuCjxkYXRlIGF1dGhuYW1lPSItMzgxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgxIj4zODE8L2RhdGU+IEIuQy48L3RyYW5zbGF0aW9uPg=="
translation['2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgaW4gdGhlIHNhbWUgc3Bpcml0IHRoYXQgaGUgc3Vic2VxdWVudGx5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc3Ij4zNzc8L2RhdGU+IEIuQy48L25vdGU+IG1hZGUgYW4gZXhwZWRpdGlvbiBhZ2FpbnN0IDxkYXRlIGF1dGhuYW1lPSItMzc3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc3Ij4zNzc8L2RhdGU+IEIuQy48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZWJlcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGhlYmVzIj5UaGViZXM8L3BsYWNlTmFtZT4sIHRvIHJlbGlldmUgdGhlIExhY2VkYWVtb25pYW5zIGluIHRoYXQgY2l0eSB3aGVuIHRoZWlyIG9wcG9uZW50cyBoYWQgdGFrZW4gdG8gbXVyZGVyaW5nIHRoZW0uIEZpbmRpbmcgdGhlIGNpdHkgcHJvdGVjdGVkIG9uIGFsbCBzaWRlcyBieSBhIHRyZW5jaCBhbmQgc3RvY2thZGUsIGhlIGNyb3NzZWQgdGhlIFBhc3Mgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDE2MzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwMTYzMyI+Q3lub3NjZXBoYWxhZTwvcGxhY2VOYW1lPiwgYW5kIGxhaWQgd2FzdGUgdGhlIGNvdW50cnkgdXAgdG8gdGhlIGNpdHkgd2FsbHMsIG9mZmVyaW5nIGJhdHRsZSB0byB0aGUgVGhlYmFucyBib3RoIG9uIHRoZSBwbGFpbiBhbmQgb24gdGhlIGhpbGxzLCBpZiB0aGV5IGNob3NlIHRvIGZpZ2h0LiBJbiB0aGUgZm9sbG93aW5nIHllYXIgaGUgbWFkZSBhbm90aGVyIGV4cGVkaXRpb24gYWdhaW5zdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZWJlcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGhlYmVzIj5UaGViZXM8L3BsYWNlTmFtZT4sIGFuZCwgYWZ0ZXIgY3Jvc3NpbmcgdGhlIHN0b2NrYWRlIGFuZCB0cmVuY2hlcyBhdCBTY29sdXMsIGxhaWQgd2FzdGUgdGhlIHJlc3Qgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2ODMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjY4MyI+Qm9lb3RpYTwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXAgdG8gdGhpcyB0aW1lIGhlIGFuZCBoaXMgY2l0eSBlbmpveWVkIHVuYnJva2VuIHN1Y2Nlc3M7IGFuZCB0aG91Z2ggdGhlIGZvbGxvd2luZyB5ZWFycyBicm91Z2h0IGEgc2VyaWVzIG9mIHRyb3VibGVzLCBpdCBjYW5ub3QgYmUgc2FpZCB0aGF0IHRoZXkgd2VyZSBpbmN1cnJlZCB1bmRlciB0aGUgbGVhZGVyc2hpcCBvZiBBZ2VzaWxhdXMuIE9uIHRoZSBvdGhlciBoYW5kLCBhZnRlciB0aGUgZGlzYXN0ZXIgYXQgTGV1Y3RyYSwgd2hlbiBoaXMgYWR2ZXJzYXJpZXMgaW4gbGVhZ3VlIHdpdGggdGhlIE1hbnRpbmVhbnMgd2VyZSBtdXJkZXJpbmcgaGlzIGZyaWVuZHMgYW5kIGFjcXVhaW50YW5jZXMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUZWdlYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGVnZWEiPlRlZ2VhPC9wbGFjZU5hbWU+LCBhbmQgYSBjb2FsaXRpb24gb2YgYWxsIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjgzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2ODMiPkJvZW90aWE8L3BsYWNlTmFtZT4sIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNzM1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI3MzUiPkFyY2FkaWE8L3BsYWNlTmFtZT4gYW5kIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRWxpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRWxpcyI+RWxpczwvcGxhY2VOYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwPC9kYXRlPiBCLkMuPC9ub3RlPiBoYWQgYmVlbiBmb3JtZWQsIGhlIHRvb2sgdGhlIGZpZWxkIHdpdGggdGhlIExhY2VkYWVtb25pYW4gZm9yY2VzIG9ubHksIHRodXMgZGlzYXBwb2ludGluZyB0aGUgZ2VuZXJhbCBleHBlY3RhdGlvbiB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyB3b3VsZCBub3QgZXZlbiBnbyBvdXRzaWRlIHRoZWlyIG93biBib3JkZXJzIGZvciBhIGxvbmcgdGltZSB0byBjb21lLiBJdCB3YXMgbm90IHVudGlsIGhlIGhhZCBsYWlkIHdhc3RlIHRoZSBjb3VudHJ5IG9mIHRob3NlIHdobyBoYWQgbXVyZGVyZWQgaGlzIGZyaWVuZHMgdGhhdCBoZSByZXR1cm5lZCBob21lIG9uY2UgbW9yZS4KPGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MDwvZGF0ZT4gQi5DLjwvdHJhbnNsYXRpb24+"
translation['2.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gd2FzIGF0dGFja2VkIGJ5IGFsbCB0aGUgQXJjYWRpYW5zLCBBcmdpdmVzLCBFbGVpYW5zIGFuZCBCb2VvdGlhbnMsIHdobyBoYWQgdGhlIHN1cHBvcnQgb2YgdGhlIFBob2NpYW5zLCBib3RoIHRoZSBMb2NyaWFuIHBlb3BsZXMsIHRoZSBUaGVzc2FsaWFucywgQWVuaWFuaWFucywgQWNhcm5hbmlhbnMgYW5kIEV1Ym9lYW5zLiBJbiBhZGRpdGlvbiB0aGUgc2xhdmVzIGFuZCBtYW55IG9mIHRoZSBvdXRsYW5kZXIgY29tbXVuaXRpZXMgd2VyZSBpbiByZXZvbHQsIGFuZCBhdCBsZWFzdCBhcyBtYW55IG9mIHRoZSBTcGFydGFuIG5vYmxlcyBoYWQgZmFsbGVuIGluIHRoZSBiYXR0bGUgb2YgTGV1Y3RyYSBhcyBzdXJ2aXZlZC4gSGUga2VwdCB0aGUgY2l0eSBzYWZlIG5vdHdpdGhzdGFuZGluZywgYW5kIHRoYXQgdGhvdWdoIGl0IHdhcyB3aXRob3V0IHdhbGxzLCBub3QgZ29pbmcgb3V0IGludG8gdGhlIG9wZW4gd2hlcmUgdGhlIGFkdmFudGFnZSB3b3VsZCBoYXZlIGxhaW4gd2hvbGx5IHdpdGggdGhlIGVuZW15LCBhbmQga2VlcGluZyBoaXMgYXJteSBzdHJvbmdseSBwb3N0ZWQgd2hlcmUgdGhlIGNpdGl6ZW5zIHdvdWxkIGhhdmUgdGhlIGFkdmFudGFnZTsgZm9yIGhlIGJlbGlldmVkIHRoYXQgaGUgd291bGQgYmUgc3Vycm91bmRlZCBvbiBhbGwgc2lkZXMgaWYgaGUgY2FtZSBvdXQgaW50byB0aGUgcGxhaW4sIGJ1dCB0aGF0IGlmIGhlIG1hZGUgYSBzdGFuZCBpbiB0aGUgZGVmaWxlcyBhbmQgdGhlIGhlaWdodHMsIGhlIHdvdWxkIGJlIG1hc3RlciBvZiB0aGUgc2l0dWF0aW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhlIHJldGlyZW1lbnQgb2YgdGhlIGVuZW15LCBub25lIHdpbGwgZGVueSB0aGF0IGhpcyBjb25kdWN0IHdhcyBtYXJrZWQgYnkgZ29vZCBzZW5zZS4gVGhlIG1hcmNoaW5nIGFuZCByaWRpbmcgaW5jaWRlbnRhbCB0byBhY3RpdmUgc2VydmljZSB3ZXJlIG5vIGxvbmdlciBwb3NzaWJsZSB0byBhIG1hbiBvZiBoaXMgeWVhcnMsIGJ1dCBoZSBzYXcgdGhhdCB0aGUgc3RhdGUgbXVzdCBoYXZlIG1vbmV5IGlmIHNoZSB3YXMgdG8gZ2FpbiBhbiBhbGx5IGFueXdoZXJlLiBTbyBoZSBhcHBsaWVkIGhpbXNlbGYgdG8gdGhlIGJ1c2luZXNzIG9mIHJhaXNpbmcgbW9uZXkuIEF0IGhvbWUgaGUgZGlkIGFsbCB0aGF0IGluZ2VudWl0eSBjb3VsZCBzdWdnZXN0OyBhbmQsIGlmIGhlIHNhdyBhbnkgcHJvc3BlY3Qgb2Ygc2VydmluZyB0aGUgc3RhdGUgYWJyb2FkLCBzaHJhbmsgZnJvbSBubyBtZWFzdXJlcyB0aGF0IGNpcmN1bXN0YW5jZXMgY2FsbGVkIGZvciwgYW5kIGhlIHdhcyBub3QgYXNoYW1lZCB0byBnbyBvdXQsIG5vdCBhcyBhIGdlbmVyYWwsIGJ1dCBhcyBhbiAgIGVudm95Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZXZlbiBhcyBhbiBlbnZveSBoZSBhY2NvbXBsaXNoZWQgd29yayB3b3J0aHkgb2YgYSBncmVhdCBnZW5lcmFsLiBGb3IgaW5zdGFuY2UsIEF1dG9waHJhZGF0ZXMgbGF5aW5nIHNpZWdlIHRvIEFyaW9iYXJ6YW5lcywgYW4gYWxseSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXNzb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFzc29zIj5Bc3NvczwvcGxhY2VOYW1lPiwgdG9vayB0byBoaXMgaGVlbHMgZnJvbSBmZWFyIG9mIEFnZXNpbGF1cy4gQ290eXMgZm9yIGhpcyBwYXJ0LCBiZXNpZWdpbmcgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTZXN0b3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNlc3RvcyI+U2VzdG9zPC9wbGFjZU5hbWU+LCB3aGlsZSBpdCB3YXMgc3RpbGwgaW4gdGhlIGhhbmRzIG9mIEFyaW9iYXJ6YW5lcywgYnJva2UgdXAgdGhlIHNpZWdlIGFuZCBtYWRlIG9mZi4gV2l0aCBnb29kIHJlYXNvbiwgdGhlcmVmb3JlLCBtaWdodCB0aGUgdmljdG9yaW91cyBlbnZveSBoYXZlIHNldCB1cCBhIHRyb3BoeSBvbmNlIGFnYWluIHRvIHJlY29yZCB0aGVzZSBibG9vZGxlc3Mgc3VjY2Vzc2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgTWF1c29sdXMsIGxheWluZyBzaWVnZSB0byBib3RoIHRoZXNlIHBsYWNlcyB3aXRoIGEgZmxlZXQgb2YgYSBodW5kcmVkIHZlc3NlbHMsIHdhcyBpbmR1Y2VkLCBub3QgaW5kZWVkIGJ5IGZlYXIsIGJ1dCBieSBwZXJzdWFzaW9uLCB0byBzYWlsIGZvciBob21lLiBJbiB0aGlzIGFmZmFpciB0b28gaGlzIHN1Y2Nlc3Mgd2FzIGFkbWlyYWJsZTsgZm9yIHRob3NlIHdobyBjb25zaWRlcmVkIHRoYXQgdGhleSB3ZXJlIHVuZGVyIGFuIG9ibGlnYXRpb24gdG8gaGltIGFuZCB0aG9zZSB3aG8gZmxlZCBiZWZvcmUgaGltLCBib3RoIHBhaWQuIFlldCBhZ2FpbiwgVGFjaG9zIGFuZCBNYXVzb2x1cyAoYW5vdGhlciBvZiB0aG9zZSB3aG8gY29udHJpYnV0ZWQgbW9uZXkgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LCBvd2luZyB0byBoaXMgb2xkIHRpZXMgb2YgaG9zcGl0YWxpdHkgd2l0aCBBZ2VzaWxhdXMpLCBzZW50IGhpbSBob21lIHdpdGggYSBtYWduaWZpY2VudCBlc2NvcnQuCjwvdHJhbnNsYXRpb24+"
translation['2.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3Vic2VxdWVudGx5LCB3aGVuIGhlIHdhcyBub3cgYWJvdXQgZWlnaHR5IHllYXJzIG9mIGFnZSwgaGUgYmVjYW1lIGF3YXJlIHRoYXQgdGhlIGtpbmcgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjgzMyI+RWd5cHQ8L3BsYWNlTmFtZT4gd2FzIGJlbnQgb24gd2FyIHdpdGggPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDAyMzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMDIzMSI+UGVyc2lhPC9wbGFjZU5hbWU+LCBhbmQgd2FzIHBvc3Nlc3NlZCBvZiBsYXJnZSBmb3JjZXMgb2YgaW5mYW50cnkgYW5kIGNhdmFscnkgYW5kIHBsZW50eSBvZiBtb25leS4gSGUgd2FzIGRlbGlnaHRlZCB3aGVuIGEgc3VtbW9ucyBmb3IgaGVscCByZWFjaGVkIGhpbSBmcm9tIHRoZSBFZ3lwdGlhbiBraW5nLCB3aG8gYWN0dWFsbHkgcHJvbWlzZWQgaGltIHRoZSBjaGllZiBjb21tYW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaGUgYmVsaWV2ZWQgdGhhdCBhdCBvbmUgc3Ryb2tlIGhlIHdvdWxkIHJlcGF5IHRoZSBFZ3lwdGlhbiBmb3IgaGlzIGdvb2Qgb2ZmaWNlcyB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIHdvdWxkIGFnYWluIHNldCBmcmVlIHRoZSBHcmVla3MgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPiwgYW5kIHdvdWxkIGNoYXN0aXNlIHRoZSBQZXJzaWFuIGZvciBoaXMgZm9ybWVyIGhvc3RpbGl0eSwgYW5kIGZvciBkZW1hbmRpbmcgbm93LCB3aGVuIGhlIHByb2Zlc3NlZCB0byBiZSBhbiBhbGx5IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiwgdGhhdCBoZXIgY2xhaW0gdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNZXNzZW5lIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNZXNzZW5lIj5NZXNzZW5lPC9wbGFjZU5hbWU+IHNob3VsZCBiZSBnaXZlbiB1cC4KPC90cmFuc2xhdGlvbj4="
translation['2.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5Ib3dldmVyLCB3aGVuIHRoaXMgc3VpdG9yIGZvciBoaXMgYXNzaXN0YW5jZSBmYWlsZWQgdG8gZ2l2ZSBoaW0gICB0aGUgY29tbWFuZCBBZ2VzaWxhdXMgZmVsdCB0aGF0IGhlIGhhZCBiZWVuIGdyb3NzbHkgZGVjZWl2ZWQsIGFuZCB3YXMgaW4gZG91YnQgd2hhdCBoZSBvdWdodCB0byBkby4gQXQgdGhpcyBqdW5jdHVyZSBmaXJzdCBhIHBvcnRpb24gb2YgdGhlIEVneXB0aWFuIHRyb29wcywgb3BlcmF0aW5nIGFzIGEgc2VwYXJhdGUgYXJteSwgcmV2b2x0ZWQgZnJvbSB0aGUga2luZywgYW5kIHRoZW4gdGhlIHJlc3Qgb2YgaGlzIGZvcmNlcyBkZXNlcnRlZCBoaW0uIFRoZSBraW5nIGxlZnQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjgzMyI+RWd5cHQ8L3BsYWNlTmFtZT4gYW5kIGZsZWQgaW4gdGVycm9yIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyODYxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI4NjEiPlNpZG9uPC9wbGFjZU5hbWU+IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw2MDA0Njg3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDYwMDQ2ODciPlBob2VuaWNpYTwvcGxhY2VOYW1lPiwgd2hpbGUgdGhlIEVneXB0aWFucyBzcGxpdCB1cCBpbnRvIHR3byBwYXJ0aWVzLCBhbmQgZWFjaCBjaG9zZSBpdHMgb3duIGtpbmcuCjwvdHJhbnNsYXRpb24+"
translation['2.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BZ2VzaWxhdXMgbm93IHJlYWxpc2VkIHRoYXQgaWYgaGUgaGVscGVkIG5laXRoZXIga2luZywgbmVpdGhlciBvZiB0aGVtIHdvdWxkIHBheSB0aGUgR3JlZWtzIHRoZWlyIHdhZ2VzLCBuZWl0aGVyIHdvdWxkIHByb3ZpZGUgYSBtYXJrZXQsIGFuZCB0aGUgY29ucXVlcm9yLCB3aGljaGV2ZXIgaGUgcHJvdmVkIHRvIGJlLCB3b3VsZCBiZSBob3N0aWxlLCBidXQgaWYgaGUgY28tb3BlcmF0ZWQgd2l0aCBvbmUgb2YgdGhlbSwgdGhhdCBvbmUsIGJlaW5nIHVuZGVyIGFuIG9ibGlnYXRpb24gdG8gaGltLCB3b3VsZCBpbiBhbGwgcHJvYmFiaWxpdHkgYWRvcHQgYSBmcmllbmRseSBhdHRpdHVkZS4gQWNjb3JkaW5nbHksIGhhdmluZyBkZWNpZGVkIHdoaWNoIG9mIHRoZW0gc2hvd2VkIHRoZSBzdHJvbmdlciBzaWducyBvZiBiZWluZyBhIGZyaWVuZCB0byB0aGUgR3JlZWtzLCBoZSB0b29rIHRoZSBmaWVsZCB3aXRoIGhpbS4gSGUgaW5mbGljdGVkIGEgY3J1c2hpbmcgZGVmZWF0IG9uIHRoZSBlbmVteSBvZiB0aGUgR3JlZWtzLCBhbmQgaGVscGVkIHRvIGVzdGFibGlzaCBoaXMgcml2YWw7IGFuZCBzbyBoYXZpbmcgbWFkZSBoaW0gdGhlIGZyaWVuZCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIGFuZCBoYXZpbmcgcmVjZWl2ZWQgYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MiI+MzYyPC9kYXRlPiBCLkMuPC9ub3RlPiBncmVhdCBzdW0gb2YgbW9uZXkgaW4gYWRkaXRpb24sIGhlIHNhaWxlZCBob21lLCB0aG91Z2ggaXQgd2FzIG1pZC13aW50ZXIsIHdpdGggYWxsIGhhc3RlLCBpbiBvcmRlciB0aGF0IHRoZSBzdGF0ZSBtaWdodCBiZSBpbiBhIHBvc2l0aW9uIHRvIHRha2UgYWN0aW9uIGFnYWluc3QgaGVyIGVuZW1pZXMgaW4gdGhlIGNvbWluZyBzdW1tZXIuCjxkYXRlIGF1dGhuYW1lPSItMzYyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzYyIj4zNjI8L2RhdGU+IEIuQy48L3RyYW5zbGF0aW9uPg=="
translation['3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoLCB0aGVuLCBpcyB0aGUgcmVjb3JkIG9mIG15IGhlcm8ncyBkZWVkcywgc28gZmFyIGFzIHRoZXkgd2VyZSBkb25lIGJlZm9yZSBhIGNyb3dkIG9mIHdpdG5lc3Nlcy4gQWN0aW9ucyBsaWtlIHRoZXNlIG5lZWQgbm8gcHJvb2ZzOyB0aGUgbWVyZSBtZW50aW9uIG9mIHRoZW0gaXMgZW5vdWdoIGFuZCB0aGV5IGNvbW1hbmQgYmVsaWVmIGltbWVkaWF0ZWx5LiBCdXQgbm93IEkgd2lsbCBhdHRlbXB0IHRvIHNob3cgdGhlIHZpcnR1ZSB0aGF0IHdhcyBpbiBoaXMgc291bCwgdGhlIHZpcnR1ZSB0aHJvdWdoIHdoaWNoIGhlIHdyb3VnaHQgdGhvc2UgZGVlZHMgYW5kIGxvdmVkIGFsbCB0aGF0IGlzIGhvbm91cmFibGUgYW5kIHB1dCBhd2F5IGFsbCB0aGF0IGlzIGJhc2UuCjwvdHJhbnNsYXRpb24+"
translation['3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZ2VzaWxhdXMgaGFkIHN1Y2ggcmV2ZXJlbmNlIGZvciByZWxpZ2lvbiwgdGhhdCBldmVuIGhpcyBlbmVtaWVzIGNvbnNpZGVyZWQgaGlzIG9hdGhzIGFuZCBoaXMgICB0cmVhdGllcyBtb3JlIHRvIGJlIHJlbGllZCBvbiB0aGFuIHRoZWlyIG93biBmcmllbmRzaGlwIHdpdGggb25lIGFub3RoZXI6IGZvciB0aGVyZSB3ZXJlIHRpbWVzIHdoZW4gdGhleSBzaHJhbmsgZnJvbSBtZWV0aW5nIHRvZ2V0aGVyLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgdGV4dCBoZXJlIGlzIHF1aXRlIHVuY2VydGFpbjogdGhlcmUgaXMgYSBnYXAgaW4gdGhlIG1hbnVzY3JpcHRzIGFmdGVyIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+GzrnOu+G9t86xzr08L2ZvcmVpZ24+Ljwvbm90ZT4gYW5kIHlldCB3b3VsZCBwbGFjZSB0aGVtc2VsdmVzIGluIHRoZSBwb3dlciBvZiBBZ2VzaWxhdXMuIEFuZCBsZXN0IGFueW9uZSBzaG91bGQgdGhpbmsgdGhpcyBzdGF0ZW1lbnQgaW5jcmVkaWJsZSwgSSB3aXNoIHRvIG5hbWUgdGhlIG1vc3QgZmFtb3VzIGFtb25nIHRoZW0uIFNwaXRocmlkYXRlcyB0aGUgUGVyc2lhbiwgZm9yIGV4YW1wbGUsIGtuZXcgdGhhdAo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Phs65zrvhvbfOsc69PC9mb3JlaWduPi48L3RyYW5zbGF0aW9uPg=="
translation['3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlBoYXJuYWJhenVzIHdhcyBuZWdvdGlhdGluZyBmb3IgYSBtYXJyaWFnZSB3aXRoIHRoZSBHcmVhdCBLaW5nJ3MgZGF1Z2h0ZXIsIGFuZCBpbnRlbmRlZCB0byB0YWtlIGhpcywgU3BpdGhyaWRhdGVzJywgZGF1Z2h0ZXIgYXMgYSBjb25jdWJpbmUuIFJlZ2FyZGluZyB0aGlzIGFzIGFuIG91dHJhZ2UsIGhlIGRlbGl2ZXJlZCBoaW1zZWxmLCBoaXMgd2lmZSwgaGlzIGNoaWxkcmVuIGFuZCBhbGwgdGhhdCBoZSBoYWQgaW50byBBZ2VzaWxhdXMnIGhhbmRzLiBDb3R5cywgcnVsZXIgb2YgdGhlIFBhcGhsYWdvbmlhbnMsIHdobyBoYWQgZGlzb2JleWVkCjwvdHJhbnNsYXRpb24+"
translation['3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPnRoZSBjb21tYW5kIG9mIHRoZSBHcmVhdCBLaW5nLCB0aG91Z2ggaXQgd2FzIGFjY29tcGFuaWVkIHdpdGggdGhlIHN5bWJvbCBvZiBmcmllbmRzaGlwLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUg4oCccmlnaHQgaGFuZCzigJ0gb2Z0ZW4gbWVudGlvbmVkIGFzIGEgcGxlZGdlIG9mIGdvb2QgZmFpdGggb3IgZnJpZW5kc2hpcC48L25vdGU+IGZlYXJlZCB0aGF0IGhlIHdvdWxkIGJlIHNlaXplZCBhbmQgZWl0aGVyIGJlIGZpbmVkIGhlYXZpbHkgb3IgZXZlbiBwdXQgdG8gZGVhdGg7IGJ1dCBoZSB0b28sIHRydXN0aW5nIGluIHRoZSBhcm1pc3RpY2Ugd2l0aCBBZ2VzaWxhdXMsIGNhbWUgdG8gaGlzIGNhbXAgYW5kIGhhdmluZyBlbnRlcmVkIGludG8gYWxsaWFuY2UgZWxlY3RlZCB0byB0YWtlIHRoZSBmaWVsZCBhdCBBZ2VzaWxhdXMnIHNpZGUgd2l0aCBhIHRob3VzYW5kIGhvcnNlIGFuZCB0d28gdGhvdXNhbmQgdGFyZ2V0ZWVycy4KPC90cmFuc2xhdGlvbj4="
translation['3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBQaGFybmFiYXp1cyB0b28gY2FtZSBhbmQgcGFybGV5ZWQgd2l0aCBBZ2VzaWxhdXMsIGFuZCBtYWRlIGFncmVlbWVudCB3aXRoIGhpbSB0aGF0IGlmIGhlIHdlcmUgbm90IGhpbXNlbGYgYXBwb2ludGVkIHRoZSBQZXJzaWFuIGdlbmVyYWwsIGhlIHdvdWxkIHJldm9sdCBmcm9tIHRoZSBHcmVhdCBLaW5nLiDigJxCdXQs4oCdIGhlIHNhaWQsIOKAnGlmIEkgYmVjb21lIGdlbmVyYWwsIEkgc2hhbGwgbWFrZSB3YXIgb24geW91LCBBZ2VzaWxhdXMsIHdpdGggYWxsIG15IG1pZ2h0LuKAnSBIZSB1c2VkIHRoaXMgbGFuZ3VhZ2UgaW4gZnVsbCBjb25maWRlbmNlIHRoYXQgbm90aGluZyBjb250cmFyeSB0byB0aGUgdGVybXMgb2YgdGhlIGFybWlzdGljZSB3b3VsZCBoYXBwZW4gdG8gaGltLiBTbyBncmVhdCBhbmQgc28gbm9ibGUgYSB0cmVhc3VyZSBoYXMgZXZlcnkgbWFuLCBhbmQgYWJvdmUgYWxsIGEgZ2VuZXJhbCwgd2hvIGlzIHVwcmlnaHQgYW5kIHRydXN0d29ydGh5IGFuZCBpcyBrbm93biB0byBiZSBzby4gU28gbXVjaCwgdGhlbiwgZm9yIHRoZSB2aXJ0dWUgb2YgUGlldHkuIAo8L3RyYW5zbGF0aW9uPg=="
translation['4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5OZXh0IGNvbWVzIGhpcyBKdXN0aWNlIGluIG1vbmV5IG1hdHRlcnMuIE9mIHRoaXMgd2hhdCBwcm9vZnMgY2FuIGJlIG1vcmUgY29udmluY2luZyB0aGFuIHRoZSBmb2xsb3dpbmc/IE5vIG1hbiBldmVyIG1hZGUgYW55IGNvbXBsYWludCB0aGF0IGhlIGhhZCBiZWVuIGRlZnJhdWRlZCBieSBBZ2VzaWxhdXM6IGJ1dCBtYW55IGFja25vd2xlZGdlZCB0aGF0IHRoZXkgaGFkIHJlY2VpdmVkIG1hbnkgYmVuZWZpdHMgZnJvbSBoaW0uIE9uZSB3aG8gZGVsaWdodGVkIHRvIGdpdmUgYXdheSBoaXMgb3duIGZvciB0aGUgZ29vZCBvZiBvdGhlcnMgY291bGQgbm90IHBvc3NpYmx5IGJlIG1pbmRlZCB0byBkZWZyYXVkIG90aGVycyBhdCB0aGUgcHJpY2Ugb2YgZGlzZ3JhY2UuIEZvciBpZiBoZSBoYWQgY292ZXRlZCBtb25leSBpdCB3b3VsZCBoYXZlIGNvc3QgaGltIGZhciBsZXNzIHRyb3VibGUgdG8ga2VlcCBoaXMgb3duIHRoYW4gdG8gdGFrZSB3aGF0IGRpZCBub3QgYmVsb25nIHRvIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkEgbWFuIHdobyB3b3VsZCBub3QgbGVhdmUgdW5wYWlkIGRlYnRzIG9mIGdyYXRpdHVkZSwgd2hpY2ggYXJlIG5vdCByZWNvdmVyYWJsZSBpbiB0aGUgY291cnRzLCBjYW5ub3QgaGF2ZSBiZWVuIG1pbmRlZCB0byBjb21taXQgdGhlZnRzIHRoYXQgYXJlIGZvcmJpZGRlbiBieSBsYXcuIEFuZCBBZ2VzaWxhdXMgaGVsZCBpdCB3cm9uZyBub3Qgb25seSB0byByZXB1ZGlhdGUgYSBkZWJ0IG9mIGdyYXRpdHVkZSwgYnV0LCBoYXZpbmcgZ3JlYXRlciBtZWFucywgbm90IHRvIHJlbmRlciBpbiByZXR1cm4gYSBtdWNoIGdyZWF0ZXIga2luZG5lc3MuCjwvdHJhbnNsYXRpb24+"
translation['4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB3aXRoIHdoYXQgc2hvdyBvZiByZWFzb24gY291bGQgZW1iZXp6bGVtZW50IG9mIHB1YmxpYyBwcm9wZXJ0eSBiZSBjaGFyZ2VkIGFnYWluc3QgYSBtYW4gd2hvIGJlc3Rvd2VkIG9uIGhpcyBmYXRoZXJsYW5kIHRoZSByZXdhcmRzIGR1ZSB0byBoaW1zZWxmPyBBbmQgaXMgaXQgbm90IGEgc3RyaWtpbmcgcHJvb2Ygb2YgaGlzIGZyZWVkb20gZnJvbSBhdmFyaWNlIHRoYXQgaGUgd2FzIGFibGUgdG8gZ2V0IG1vbmV5IGZyb20gb3RoZXJzLCB3aGVuZXZlciBoZSB3YW50ZWQsIGZvciB0aGUgcHVycG9zZSBvZiByZW5kZXJpbmcgZmluYW5jaWFsIGFzc2lzdGFuY2UgdG8gdGhlIHN0YXRlIG9yIGhpcyBmcmllbmRzPwo8L3RyYW5zbGF0aW9uPg=="
translation['4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkZvciBoYWQgaGUgYmVlbiBpbiB0aGUgaGFiaXQgb2Ygc2VsbGluZyBoaXMgZmF2b3VycyBvciB0YWtpbmcgcGF5bWVudCBmb3IgaGlzIGJlbmVmYWN0aW9ucywgbm8gb25lIHdvdWxkIGhhdmUgZmVsdCB0aGF0IGhlIG93ZWQgaGltIGFueXRoaW5nLiBJdCBpcyB0aGUgcmVjaXBpZW50IG9mIHVuYm91Z2h0LCBncmF0dWl0b3VzIGJlbmVmaXRzIHdobyBpcyBhbHdheXMgZ2xhZCB0byBvYmxpZ2UgaGlzIGJlbmVmYWN0b3IgaW4gcmV0dXJuIGZvciB0aGUga2luZG5lc3MgaGUgaGFzIHJlY2VpdmVkIGFuZCBpbiBhY2tub3dsZWRnbWVudCBvZiB0aGUgdHJ1c3QgcmVwb3NlZCBpbiBoaW0gYXMgYSB3b3J0aHkgYW5kIGZhaXRoZnVsIGd1YXJkaWFuIG9mIGEgZmF2b3VyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIFN5bS4gOC4zNiIgdmFsaWQ9InllcyI+WGVuLiBTeW0uIDguMzY8L2JpYmw+PC9ub3RlPgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIFN5bS4gOC4zNiIgdmFsaWQ9InllcyI+WGVuLiBTeW0uIDguMzY8L2JpYmw+PC90cmFuc2xhdGlvbj4="
translation['4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GdXJ0aGVyLCBpcyBpdCBub3QgY2VydGFpbiB0aGF0IHRoZSBtYW4gd2hvIGJ5IGEgbm9ibGUgaW5zdGluY3QgcmVmdXNlZCB0byB0YWtlIG1vcmUgYW5kIHByZWZlcnJlZCB0byB0YWtlIGxlc3MgdGhhbiBoaXMganVzdCBzaGFyZSB3YXMgZmFyIGJleW9uZCB0aGUgcmVhY2ggICBvZiBjb3ZldG91c25lc3M/IE5vdyB3aGVuIHRoZSBzdGF0ZSBwcm9ub3VuY2VkIGhpbSBzb2xlIGhlaXIgdG8gdGhlIHByb3BlcnR5IG9mIEFnaXMsIGhlIGdhdmUgaGFsZiBvZiBpdCB0byBoaXMgbW90aGVyJ3Mga2luc2ZvbGssIGJlY2F1c2UgaGUgc2F3IHRoYXQgdGhleSB3ZXJlIGluIHdhbnQ7IGFuZCBhbGwgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEwNjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMTA2NSI+TGFjZWRhZW1vbjwvcGxhY2VOYW1lPiBiZWFycyB3aXRuZXNzIHRoYXQgbXkgc3RhdGVtZW50IGlzIHRydWUuCjwvdHJhbnNsYXRpb24+"
translation['4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk9uIHJlY2VpdmluZyBmcm9tIFRpdGhyYXVzdGVzIGFuIG9mZmVyIG9mIGdpZnRzIHVubnVtYmVyZWQgaWYgb25seSBoZSB3b3VsZCBsZWF2ZSBoaXMgY291bnRyeSwgQWdlc2lsYXVzIGFuc3dlcmVkOiDigJxBbW9uZyB1cywgVGl0aHJhdXN0ZXMsIGEgcnVsZXIncyBob25vdXIgcmVxdWlyZXMgaGltIHRvIGVucmljaCBoaXMgYXJteSByYXRoZXIgdGhhbiBoaW1zZWxmLCBhbmQgdG8gdGFrZSBzcG9pbHMgcmF0aGVyIHRoYW4gZ2lmdHMgZnJvbSB0aGUgZW5lbXku4oCdCjwvdHJhbnNsYXRpb24+"
translation['5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZ2FpbiwgYW1vbmcgYWxsIHRoZSBwbGVhc3VyZXMgdGhhdCBwcm92ZSB0b28gc3Ryb25nIGZvciBtYW55IG1lbiwgd2hvIGNhbiBtZW50aW9uIG9uZSB0byB3aGljaCBBZ2VzaWxhdXMgeWllbGRlZD8gRHJ1bmtlbm5lc3MsIGhlIHRob3VnaHQsIHNob3VsZCBiZSBhdm9pZGVkIGxpa2UgbWFkbmVzcywgb3ZlcmVhdGluZyBsaWtlIGlkbGVuZXNzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvM6xzr3hvbfOsc+CPC9mb3JlaWduPiBhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAz4HOs+G9t86xz4I8L2ZvcmVpZ24+IGFyZSBhZG9wdGVkIGZyb20gdGhlIHRleHQgb2YgQXRoZW5hZXVzLCB3aG8gcmVmZXJzIHRvIHRoaXMgcGFzc2FnZSAocC4gNjEzIGMpLiBUaGUgTVNTLiBvZiB0aGUgQWdlc2lsYXVzIGhhdmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrvOsc65zrzOsc+BzrPhvbfOsc+CPC9mb3JlaWduPiwg4oCcZ2x1dHRvbnks4oCdIGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIHOvM6xz4HPhOG9t86xz4I8L2ZvcmVpZ24+LCDigJxlcnJvci7igJ08L25vdGU+IE1vcmVvdmVyLCBoZSByZWNlaXZlZCBhIGRvdWJsZSByYXRpb24gYXQgdGhlIHB1YmxpYyBtZWFscywgYnV0IGluc3RlYWQgb2YgY29uc3VtaW5nIGJvdGggcG9ydGlvbnMgaGltc2VsZiwgaGUgZGlzdHJpYnV0ZWQgYm90aCBhbmQgbGVmdCBuZWl0aGVyIGZvciBoaW1zZWxmLCBob2xkaW5nIHRoYXQgdGhlIHB1cnBvc2Ugb2YgdGhpcyBkb3VibGUgYWxsb3dhbmNlIHRvIHRoZSBraW5nIHdhcyBub3QgdG8gcHJvdmlkZSBoaW0gd2l0aCBhIGhlYXZ5IG1lYWwsIGJ1dCB0byBnaXZlIGhpbSB0aGUgb3Bwb3J0dW5pdHkgb2YgaG9ub3VyaW5nIHdob21zb2V2ZXIgaGUgd291bGQuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs68zrHOveG9t86xz4I8L2ZvcmVpZ24+IGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDPgc6z4b23zrHPgjwvZm9yZWlnbj4gYXJlIGFkb3B0ZWQgZnJvbSB0aGUgdGV4dCBvZiBBdGhlbmFldXMsIHdobyByZWZlcnMgdG8gdGhpcyBwYXNzYWdlIChwLiA2MTMgYykuIFRoZSBNU1MuIG9mIHRoZSBBZ2VzaWxhdXMgaGF2ZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ou86xzrnOvM6xz4HOs+G9t86xz4I8L2ZvcmVpZ24+LCDigJxnbHV0dG9ueSzigJ0gYW5kIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gc68zrHPgc+E4b23zrHPgjwvZm9yZWlnbj4sIOKAnGVycm9yLuKAnTwvdHJhbnNsYXRpb24+"
translation['5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciBzbGVlcCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBDb25zdC4gTGFjLiAxNS40IiB2YWxpZD0ieWVzIj5YZW4uIENvbnN0LiBMYWMuIDE1LjQ8L2JpYmw+OyA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEN5cm9wLiA4LjIuNCIgdmFsaWQ9InllcyI+WGVuLiBDeXJvcC4gOC4yLjQ8L2JpYmw+PC9ub3RlPiBpdCB3YXMgbm90IGhpcyBtYXN0ZXIsIGJ1dCB0aGUgc2VydmFudCBvZiBoaXMgYWN0aXZpdGllczsgYW5kIHVubGVzcyBoZSBvY2N1cGllZCB0aGUgaHVtYmxlc3QgYmVkIGFtb25nIGhpcyBjb21yYWRlcywgaGUgY291bGQgbm90IGNvbmNlYWwgaGlzIHNoYW1lOiBmb3IgaGUgdGhvdWdodCB0aGF0IGEgcnVsZXIncyBzdXBlcmlvcml0eSBvdmVyIG9yZGluYXJ5IG1lbiBzaG91bGQgYmUgc2hvd24gbm90IGJ5IHdlYWtuZXNzIGJ1dCBieSBlbmR1cmFuY2UuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ29uc3QuIExhYy4gMTUuNCIgdmFsaWQ9InllcyI+WGVuLiBDb25zdC4gTGFjLiAxNS40PC9iaWJsPjsgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBDeXJvcC4gOC4yLjQiIHZhbGlkPSJ5ZXMiPlhlbi4gQ3lyb3AuIDguMi40PC9iaWJsPjwvdHJhbnNsYXRpb24+"
translation['5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSB3ZXJlIHRoaW5ncywgdG8gYmUgc3VyZSwgb2Ygd2hpY2ggaGUgd2FzIG5vdCBhc2hhbWVkIHRvIHRha2UgbW9yZSB0aGFuIGhpcyBzaGFyZSDigJQgZm9yIGluc3RhbmNlLCB0aGUgc3VtbWVyJ3MgaGVhdCBhbmQgdGhlIHdpbnRlcidzIGNvbGQ6PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ3lyb3AuIDEuNC4yNSIgdmFsaWQ9InllcyI+WGVuLiBDeXJvcC4gMS40LjI1PC9iaWJsPjwvbm90ZT4gYW5kIHdoZW5ldmVyIGhpcyBhcm15IHdhcyBmYWNlZCB3aXRoIGEgaGFyZCB0YXNrLCAgIGhlIHRvaWxlZCB3aWxsaW5nbHkgYmV5b25kIGFsbCBvdGhlcnMsIGJlbGlldmluZyB0aGF0IGFsbCBzdWNoIGFjdGlvbnMgd2VyZSBhbiBlbmNvdXJhZ2VtZW50IHRvIHRoZSBtZW4uIE5vdCB0byBsYWJvdXIgdGhlIHBvaW50LCBBZ2VzaWxhdXMgZ2xvcmllZCBpbiBoYXJkIHdvcmssIGFuZCBzaG93ZWQgYSBzdHJvbmcgZGlzdGFzdGUgZm9yIGluZG9sZW5jZS4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBDeXJvcC4gMS40LjI1IiB2YWxpZD0ieWVzIj5YZW4uIEN5cm9wLiAxLjQuMjU8L2JpYmw+PC90cmFuc2xhdGlvbj4="
translation['5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IaXMgaGFiaXR1YWwgY29udHJvbCBvZiBoaXMgYWZmZWN0aW9ucyBzdXJlbHkgZGVzZXJ2ZXMgYSB0cmlidXRlIG9mIGFkbWlyYXRpb24sIGlmIHdvcnRoeSBvZiBtZW50aW9uIG9uIG5vIG90aGVyIGdyb3VuZC4gVGhhdCBoZSBzaG91bGQga2VlcCBhdCBhcm1zJyBsZW5ndGggdGhvc2Ugd2hvc2UgaW50aW1hY3kgaGUgZGlkIG5vdCBkZXNpcmUgbWF5IGJlIHRob3VnaHQgb25seSBodW1hbi4gQnV0IGhlIGxvdmVkIE1lZ2FiYXRlcywgdGhlIGhhbmRzb21lIHNvbiBvZiBTcGl0aHJpZGF0ZXMsIHdpdGggYWxsIHRoZSBpbnRlbnNpdHkgb2YgYW4gYXJkZW50IG5hdHVyZS4gTm93IGl0IGlzIHRoZSBjdXN0b208bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBDeXJvcC4gMS40LjI3IiB2YWxpZD0ieWVzIj5YZW4uIEN5cm9wLiAxLjQuMjc8L2JpYmw+PC9ub3RlPiBhbW9uZyB0aGUgUGVyc2lhbnMgdG8gYmVzdG93IGEga2lzcyBvbiB0aG9zZSB3aG9tIHRoZXkgaG9ub3VyLiBZZXQgd2hlbiBNZWdhYmF0ZXMgYXR0ZW1wdGVkIHRvIGtpc3MgaGltLCBBZ2VzaWxhdXMgcmVzaXN0ZWQgaGlzIGFkdmFuY2VzIHdpdGggYWxsIGhpcyBtaWdodCDigJQgYW4gYWN0IG9mIHB1bmN0aWxpb3VzIG1vZGVyYXRpb24gc3VyZWx5IQo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEN5cm9wLiAxLjQuMjciIHZhbGlkPSJ5ZXMiPlhlbi4gQ3lyb3AuIDEuNC4yNzwvYmlibD48L3RyYW5zbGF0aW9uPg=="
translation['5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk1lZ2FiYXRlcywgZmVlbGluZyBoaW1zZWxmIHNsaWdodGVkLCB0cmllZCBubyBtb3JlIHRvIGtpc3MgaGltLCBhbmQgQWdlc2lsYXVzIGFwcHJvYWNoZWQgb25lIG9mIGhpcyBjb21wYW5pb25zIHdpdGggYSByZXF1ZXN0IHRoYXQgaGUgd291bGQgcGVyc3VhZGUgTWVnYWJhdGVzIHRvIHNob3cgaGltIGhvbm91ciBvbmNlIGFnYWluLiDigJxXaWxsIHlvdSBraXNzIGhpbSzigJ0gYXNrZWQgaGlzIGNvbXBhbmlvbiwg4oCcaWYgTWVnYWJhdGVzIHlpZWxkcz/igJ0gQWZ0ZXIgYSBkZWVwIHNpbGVuY2UsIEFnZXNpbGF1cyBnYXZlIGhpcyByZXBseTog4oCcQnkgdGhlIHR3aW4gZ29kcywgbm8sIG5vdCBpZiBJIHdlcmUgc3RyYWlnaHR3YXkgdG8gYmUgdGhlIGZhaXJlc3QgYW5kIHN0cm9uZ2VzdCBhbmQgZmxlZXRlc3QgbWFuIG9uIGVhcnRoISBCeSBhbGwgdGhlIGdvZHMgSSBzd2VhciB0aGF0IEkgd291bGQgcmF0aGVyIGZpZ2h0IHRoYXQgc2FtZSBiYXR0bGUgb3ZlciBhZ2FpbiB0aGFuIHRoYXQgZXZlcnl0aGluZyBJIHNlZSBzaG91bGQgdHVybiBpbnRvIGdvbGQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPldoYXQgb3BpbmlvbiBzb21lIGhvbGQgaW4gcmVnYXJkIHRvIHRoZXNlIG1hdHRlcnMgSSBrbm93IHdlbGwgZW5vdWdoOyBidXQgZm9yIG15IHBhcnQgSSBhbSBwZXJzdWFkZWQgdGhhdCBtYW55IG1vcmUgbWVuIGNhbiBnYWluIHRoZSBtYXN0ZXJ5IG92ZXIgdGhlaXIgZW5lbWllcyB0aGFuIG92ZXIgaW1wdWxzZXMgc3VjaCBhcyB0aGVzZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjYuMjgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi42LjI4PC9iaWJsPjwvbm90ZT4gTm8gZG91YnQgd2hlbiB0aGVzZSB0aGluZ3MgYXJlIGtub3duIHRvIGZldywgbWFueSBoYXZlIGEgcmlnaHQgdG8gYmUgc2NlcHRpY2FsOiBidXQgd2UgYWxsIGtub3cgdGhpcywgdGhhdCB0aGUgICBncmVhdGVyIGEgbWFuJ3MgZmFtZSwgdGhlIGZpZXJjZXIgaXMgdGhlIGxpZ2h0IHRoYXQgYmVhdHMgb24gYWxsIGhpcyBhY3Rpb25zOzxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi42LjI4IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuNi4yODwvYmlibD48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBNZW0uIDEuMS4xMSIgdmFsaWQ9InllcyI+WGVuLiBNZW0uIDEuMS4xMTwvYmlibD48L25vdGU+IHdlIGtub3cgdG9vIHRoYXQgbm8gb25lIGV2ZXIgcmVwb3J0ZWQgdGhhdCBoZSBoYWQgc2VlbiBBZ2VzaWxhdXMgZG8gYW55IHN1Y2ggdGhpbmcsIGFuZCB0aGF0IG5vIHNjYW5kYWwgYmFzZWQgb24gY29uamVjdHVyZSB3b3VsZCBoYXZlIGdhaW5lZCBjcmVkZW5jZTsgZm9yIGl0IHdhcyBub3QgaGlzCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gTWVtLiAxLjEuMTEiIHZhbGlkPSJ5ZXMiPlhlbi4gTWVtLiAxLjEuMTE8L2JpYmw+PC90cmFuc2xhdGlvbj4="
translation['5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPmhhYml0LCB3aGVuIGFicm9hZCwgdG8gbG9kZ2UgYXBhcnQgaW4gYSBwcml2YXRlIGhvdXNlLCBidXQgaGUgd2FzIGFsd2F5cyBlaXRoZXIgaW4gYSB0ZW1wbGUsIHdoZXJlIGNvbmR1Y3Qgb2YgdGhpcyBzb3J0IGlzLCBvZiBjb3Vyc2UsIGltcG9zc2libGUsIG9yIGVsc2UgaW4gYSBwdWJsaWMgcGxhY2Ugd2hlcmUgYWxsIG1lbidzIGV5ZXMgYmVjYW1lIHdpdG5lc3NlcyBvZiBoaXMgcmVjdGl0dWRlLiBJZiBJIHNwZWFrIHRoaXMgZmFsc2VseSBhZ2FpbnN0IHRoZSBrbm93bGVkZ2Ugb2YgdGhlIEdyZWVrIHdvcmxkLCBJIGFtIGluIG5vIHdheSBwcmFpc2luZyBteSBoZXJvOyBidXQgSSBhbSBjZW5zdXJpbmcgbXlzZWxmLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBmb3IgQ291cmFnZSwgaGUgc2VlbXMgdG8gbWUgdG8gaGF2ZSBhZmZvcmRlZCBjbGVhciBwcm9vZnMgb2YgdGhhdCBieSBhbHdheXMgZW5nYWdpbmcgaGltc2VsZiB0byBmaWdodCBhZ2FpbnN0IHRoZSBzdHJvbmdlc3QgZW5lbWllcyBvZiBoaXMgc3RhdGUgYW5kIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgYW5kIGJ5IGFsd2F5cyBwbGFjaW5nIGhpbXNlbGYgaW4gdGhlIGZvcmVmcm9udCBvZiB0aGUgc3RydWdnbGUuCjwvdHJhbnNsYXRpb24+"
translation['6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlIGVuZW15IHdlcmUgd2lsbGluZyB0byBqb2luIGJhdHRsZSB3aXRoIGhpbSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHJlZmVyZW5jZSBpcyBub3QgZ2VuZXJhbCwgYnV0IGRlZmluaXRlbHkgdG8gdGhlIGJhdHRsZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTIzNSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMjM1Ij5Db3JvbmVhPC9wbGFjZU5hbWU+OyBzZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBZ2VzLiAyLjExIiB2YWxpZD0ieWVzIj5YZW4uIEFnZXMuIDIuMTEtMTM8L2JpYmw+PC9ub3RlPiBpdCB3YXMgbm90IGJ5IHRoZWlyIHBhbmljIGZsaWdodCB0aGF0IGhlIHdvbiB2aWN0b3J5LCBidXQgaXQgd2FzIGFmdGVyIG92ZXJjb21pbmcgdGhlbSBpbiBzdHViYm9ybiBmaWdodGluZyB0aGF0IGhlIHNldCB1cCBhIHRyb3BoeSwgbGVhdmluZyBiZWhpbmQgaGltIGltcGVyaXNoYWJsZSBtZW1vcmlhbHMgb2YgaGlzIG93biB2YWxvdXIsIGFuZCBiZWFyaW5nIGluIGhpcyBvd24gYm9keSB2aXNpYmxlIHRva2VucyBvZiB0aGUgZnVyeSBvZiBoaXMgZmlnaHRpbmcsIHNvIHRoYXQgbm90IGJ5IGhlYXJzYXkgYnV0IGJ5IHRoZSBldmlkZW5jZSBvZiB0aGVpciBvd24gZXllcyBtZW4gY291bGQganVkZ2Ugd2hhdCBtYW5uZXIgb2YgbWFuIGhlIHdhcy4KPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEyMzUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMTIzNSI+Q29yb25lYTwvcGxhY2VOYW1lPjsgc2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQWdlcy4gMi4xMSIgdmFsaWQ9InllcyI+WGVuLiBBZ2VzLiAyLjExLTEzPC9iaWJsPjwvdHJhbnNsYXRpb24+"
translation['6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkluIHRydXRoIHRoZSB0cm9waGllcyBvZiBBZ2VzaWxhdXMgYXJlIG5vdCB0byBiZSBjb3VudGVkIGJ5IHRlbGxpbmcgaG93IG1hbnkgaGUgc2V0IHVwOyB0aGUgbnVtYmVyIG9mIGhpcyBjYW1wYWlnbnMgaXMgdGhlIG51bWJlciBvZiB0aGVtLiBIaXMgbWFzdGVyeSB3YXMgaW4gbm8gd2F5IGxlc3MgY29tcGxldGUgd2hlbiB0aGUgZW5lbXkgd2VyZSB1bndpbGxpbmcgdG8gYWNjZXB0IGJhdHRsZSwgYnV0IGl0IHdhcyBnYWluZWQgYXQgbGVzcyByaXNrIGFuZCB3aXRoIG1vcmUgcHJvZml0IHRvIHRoZSBzdGF0ZSBhbmQgdG8gdGhlIGFsbGllcy4gU28gaW4gdGhlIEdyZWF0IEdhbWVzIHRoZSB1bmNoYWxsZW5nZWQgY2hhbXBpb24gaXMgY3Jvd25lZCBubyBsZXNzIHRoYW4gaGUgd2hvIGhhcyBmb3VnaHQgdG8gY29ucXVlci4gCjwvdHJhbnNsYXRpb24+"
translation['6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PZiBoaXMgV2lzZG9tIEkgZmluZCB0aGUgZXZpZGVuY2UgaW4gZXZlcnkgb25lIG9mIGhpcyBkZWVkcy4gVG93YXJkcyBoaXMgZmF0aGVybGFuZCBoZSBiZWhhdmVkIGluIHN1Y2ggYSBtYW5uZXIgdGhhdCwgYmVpbmcgZW50aXJlbHkgb2JlZGllbnQgdG8gaGVyLCBoZSB3b24gdGhlIG9iZWRpZW5jZSBvZiB0aGUgY2l0aXplbnMsIGFuZCBieSBoaXMgemVhbCBmb3IgaGlzIGNvbXJhZGVzIGhlIGhlbGQgdGhlIHVucXVlc3Rpb25pbmcgZGV2b3Rpb24gb2YgaGlzIGZyaWVuZHM6IGFuZCBhcyBmb3IgaGlzIHRyb29wcywgaGUgZ2FpbmVkIGF0IG9uY2UgdGhlaXIgb2JlZGllbmNlIGFuZCB0aGVpciBhZmZlY3Rpb24uIFN1cmVseSBub3RoaW5nIGlzIHdhbnRpbmcgdG8gdGhlIHN0cmVuZ3RoIG9mIHRoYXQgYmF0dGxlLWxpbmUgaW4gd2hpY2ggb2JlZGllbmNlIHJlc3VsdHMgaW4gcGVyZmVjdCBkaXNjaXBsaW5lLCBhbmQgYWZmZWN0aW9uIGZvciB0aGUgZ2VuZXJhbCBwcm9kdWNlcyBmYWl0aGZ1bCBwcm9tcHRpdHVkZS4KPC90cmFuc2xhdGlvbj4="
translation['6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciB0aGUgZW5lbXksIHRob3VnaCB0aGV5IHdlcmUgZm9yY2VkIHRvIGhhdGUsIGhlIGdhdmUgdGhlbSBubyBjaGFuY2UgdG8gZGlzcGFyYWdlIGhpbS4gRm9yIGhlIGNvbnRyaXZlZCB0aGF0IGhpcyBhbGxpZXMgYWx3YXlzIGhhZCB0aGUgYmV0dGVyIG9mIHRoZW0sIGJ5IHRoZSB1c2Ugb2YgZGVjZXB0aW9uIHdoZW4gb2NjYXNpb24gb2ZmZXJlZCwgYnkgYW50aWNpcGF0aW5nIHRoZWlyIGFjdGlvbiBpZiBzcGVlZCB3YXMgbmVjZXNzYXJ5LCBieSBoaWRpbmcgd2hlbiBpdCBzdWl0ZWQgaGlzIHB1cnBvc2UsIGFuZCBieSBwcmFjdGlzaW5nIGFsbCB0aGUgb3Bwb3NpdGUgbWV0aG9kcyB3aGVuIGRlYWxpbmcgd2l0aCBlbmVtaWVzIHRvIHRob3NlIHdoaWNoIGhlIGFwcGxpZWQgd2hlbiBkZWFsaW5nIHdpdGggZnJpZW5kcy4KPC90cmFuc2xhdGlvbj4="
translation['6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk5pZ2h0LCBmb3IgZXhhbXBsZSwgd2FzIHRvIGhpbSBhcyBkYXksIGFuZCBkYXkgYXMgbmlnaHQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gNi4xLjE1IiB2YWxpZD0ieWVzIj5YZW4uIEhlbGwuIDYuMS4xNTwvYmlibD47IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ29uc3QuIExhYy4gNS43IiB2YWxpZD0ieWVzIj5YZW4uIENvbnN0LiBMYWMuIDUuNzwvYmlibD47IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ3lyb3AuIDEuNS4xMiIgdmFsaWQ9InllcyI+WGVuLiBDeXJvcC4gMS41LjEyPC9iaWJsPi48L25vdGU+IGZvciBoZSBvZnRlbiB2ZWlsZWQgaGlzIG1vdmVtZW50cyBzbyBjb21wbGV0ZWx5IHRoYXQgbm9uZSBjb3VsZCBndWVzcyB3aGVyZSBoZSB3YXMsIHdoaXRoZXIgaGUgd2FzIGdvaW5nLCBvciB3aGF0IGhlIG1lYW50IHRvIGRvLiBUaHVzIGhlIG1hZGUgZXZlbiBzdHJvbmcgcG9zaXRpb25zIHVudGVuYWJsZSB0byB0aGUgZW5lbXksIHR1cm5pbmcgb25lLCBzY2FsaW5nIGFub3RoZXIsIHNuYXRjaGluZyBhIHRoaXJkIGJ5IHN0ZWFsdGguCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gNi4xLjE1IiB2YWxpZD0ieWVzIj5YZW4uIEhlbGwuIDYuMS4xNTwvYmlibD47IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ29uc3QuIExhYy4gNS43IiB2YWxpZD0ieWVzIj5YZW4uIENvbnN0LiBMYWMuIDUuNzwvYmlibD47IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ3lyb3AuIDEuNS4xMiIgdmFsaWQ9InllcyI+WGVuLiBDeXJvcC4gMS41LjEyPC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBtYXJjaCwgd2hlbmV2ZXIgaGUga25ldyB0aGF0IHRoZSBlbmVteSBjb3VsZCBicmluZyBoaW0gdG8gYW4gZW5nYWdlbWVudCBpZiB0aGV5IGNob3NlLCBoZSB3b3VsZCBsZWFkIGhpcyBhcm15IGluIGNsb3NlIG9yZGVyLCBhbGVydCBhbmQgcmVhZHkgdG8gZGVmZW5kIGhpbXNlbGYsIG1vdmluZyBvbiBhcyBxdWlldGx5IGFzIGEgbW9kZXN0IG1haWRlbiwgc2luY2UgaGUgaGVsZCB0aGF0IHRoaXMgd2FzIHRoZSBiZXN0IG1lYW5zIG9mIG1haW50YWluaW5nIGNhbG0sIG9mIGF2b2lkaW5nIHBhbmljLCBjb25mdXNpb24sIGFuZCBibHVuZGVyaW5nLCBhbmQgb2YgZ3VhcmRpbmcgYWdhaW5zdCBhIHN1cnByaXNlIGF0dGFjay4KPC90cmFuc2xhdGlvbj4="
translation['6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgc28sIGJ5IHVzaW5nIHN1Y2ggbWV0aG9kcywgaGUgd2FzIGZvcm1pZGFibGUgdG8gaGlzIGVuZW1pZXMsIGFuZCBpbnNwaXJlZCBoaXMgZnJpZW5kcyB3aXRoIHN0cmVuZ3RoIGFuZCBjb25maWRlbmNlLiBUaHVzIGhlIHdhcyBuZXZlciBkZXNwaXNlZCBieSBoaXMgZm9lcywgbmV2ZXIgYnJvdWdodCB0byBhY2NvdW50IGJ5IHRoZSBjaXRpemVucywgbmV2ZXIgYmxhbWVkIGJ5IGhpcyBmcmllbmRzLCBidXQgdGhyb3VnaG91dCBoaXMgY2FyZWVyIGhlIHdhcyBwcmFpc2VkIGFuZCBpZG9saXNlZCBieSBhbGwgdGhlIHdvcmxkLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PZiBoaXMgUGF0cmlvdGlzbSBpdCB3b3VsZCBiZSBhIGxvbmcgdGFzayB0byB3cml0ZSBpbiBjb21wbGV0ZSBkZXRhaWwsIGZvciB0aGVyZSBpcyBubyBzaW5nbGUgYWN0aW9uIG9mIGhpcywgSSB0aGluaywgdGhhdCBkb2VzIG5vdCBpbGx1c3RyYXRlIHRoYXQgcXVhbGl0eS4gVG8gc3BlYWsgYnJpZWZseSwgd2UgYWxsIGtub3cgdGhhdCB3aGVuIEFnZXNpbGF1cyB0aG91Z2h0IGhlIHdvdWxkIGJlIHNlcnZpbmcgaGlzIGZhdGhlcmxhbmQgaGUgbmV2ZXIgc2hpcmtlZCB0b2lsLCBuZXZlciBzaHJhbmsgZnJvbSBkYW5nZXIsIG5ldmVyIHNwYXJlZCBtb25leSwgbmV2ZXIgZXhjdXNlZCBoaW1zZWxmIG9uIHRoZSBzY29yZSBvZiBib2RpbHkgd2Vha25lc3Mgb3Igb2xkIGFnZTs8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBNZW0uIDMuMiIgdmFsaWQ9InllcyI+WGVuLiBNZW0uIDMuMjwvYmlibD48L25vdGU+IGJ1dCBiZWxpZXZlZCB0aGF0IGl0IGlzIHRoZSBkdXR5IG9mIGEgZ29vZCBraW5nIHRvIGRvIGFzIG11Y2ggZ29vZCBhcyBwb3NzaWJsZSB0byBoaXMgc3ViamVjdHMuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gTWVtLiAzLjIiIHZhbGlkPSJ5ZXMiPlhlbi4gTWVtLiAzLjI8L2JpYmw+PC90cmFuc2xhdGlvbj4="
translation['7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFtb25nIHRoZSBncmVhdGVzdCBzZXJ2aWNlcyBoZSByZW5kZXJlZCB0byBoaXMgZmF0aGVybGFuZCBJIHJlY2tvbiB0aGUgZmFjdCB0aGF0LCB0aG91Z2ggdGhlIG1vc3QgcG93ZXJmdWwgbWFuIGluIHRoZSBzdGF0ZSwgaGUgd2FzIGNsZWFybHkgYSBkZXZvdGVkIHNlcnZhbnQgb2YgdGhlIGxhd3MuIEZvciB3aG8gd291bGQgYmUgbWluZGVkIHRvIGRpc29iZXkgd2hlbiBoZSBzYXcgdGhlIGtpbmcgb2JleWluZz8gV2hvIHdvdWxkIHR1cm4gcmV2b2x1dGlvbmlzdCwgdGhpbmtpbmcgaGltc2VsZiBkZWZyYXVkZWQgb2YgaGlzIGR1ZSwgd2hlbiBoZSBrbmV3IHRoYXQgdGhlIGtpbmcgd2FzIHJlYWR5IHRvIHlpZWxkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgbGF3cz8KPC90cmFuc2xhdGlvbj4="
translation['7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkhlcmUgd2FzIGEgbWFuIHdob3NlIGJlaGF2aW91ciB0byBoaXMgcG9saXRpY2FsIG9wcG9uZW50cyB3YXMgdGhhdCBvZiBhIGZhdGhlciB0byBoaXMgY2hpbGRyZW46IHRob3VnaCBoZSB3b3VsZCBjaGlkZSB0aGVtIGZvciB0aGVpciBlcnJvcnMgaGUgaG9ub3VyZWQgdGhlbSB3aGVuIHRoZXkgZGlkIGEgZ29vZCBkZWVkLCBhbmQgc3Rvb2QgYnkgdGhlbSB3aGVuIGFueSBkaXNhc3RlciBiZWZlbGwgdGhlbSwgZGVlbWluZyBubyBjaXRpemVuIGFuIGVuZW15LCB3aWxsaW5nIHRvIHByYWlzZSBhbGwsIGNvdW50aW5nIHRoZSBzYWZldHkgb2YgYWxsIGEgZ2FpbiwgYW5kIHJlY2tvbmluZyB0aGUgZGVzdHJ1Y3Rpb24gZXZlbiBvZiBhIG1hbiBvZiBsaXR0bGUgd29ydGggYXMgYSBsb3NzLiBIZSBjbGVhcmx5IHJlY2tvbmVkIHRoYXQgaWYgdGhlIGNpdGl6ZW5zIHNob3VsZCBjb250aW51ZSB0byBsaXZlIGluIHBlYWNlZnVsIHN1Ym1pc3Npb24gICB0byB0aGUgbGF3cywgdGhlIGZhdGhlcmxhbmQgd291bGQgYWx3YXlzIHByb3NwZXIgYW5kIHRoYXQgc2hlIHdvdWxkIGJlIHN0cm9uZyB3aGVuIHRoZSBHcmVla3Mgd2VyZSBwcnVkZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZ2FpbiwgaWYgaXQgaXMgaG9ub3VyYWJsZSBpbiBvbmUgd2hvIGlzIGEgR3JlZWsgdG8gYmUgYSBmcmllbmQgdG8gdGhlIEdyZWVrcywgd2hhdCBvdGhlciBnZW5lcmFsIGhhcyB0aGUgd29ybGQgc2VlbiB1bndpbGxpbmcgdG8gdGFrZSBhIGNpdHkgd2hlbiBoZSB0aG91Z2h0IHRoYXQgaXQgd291bGQgYmUgc2Fja2VkLCBvciB3aG8gbG9va2VkIG9uIHZpY3RvcnkgaW4gYSB3YXIgYWdhaW5zdCBHcmVla3MgYXMgYSBkaXNhc3Rlcj8KPC90cmFuc2xhdGlvbj4="
translation['7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGVuIGEgcmVwb3J0IHJlYWNoZWQgQWdlc2lsYXVzIHRoYXQgZWlnaHQgTGFjZWRhZW1vbmlhbnMgYW5kIG5lYXIgdGVuIHRob3VzYW5kIG9mIHRoZSBlbmVteSBoYWQgZmFsbGVuIGF0IHRoZSBiYXR0bGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb3JpbnRoIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDb3JpbnRoIj5Db3JpbnRoPC9wbGFjZU5hbWU+LCBpbnN0ZWFkIG9mIHNob3dpbmcgcGxlYXN1cmUsIGhlIGFjdHVhbGx5IGV4Y2xhaW1lZDog4oCcQWxhcyBmb3IgdGhlZSwgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+SGVsbGFzPC9wbGFjZU5hbWU+ISB0aG9zZSB3aG8gbm93IGxpZSBkZWFkIHdlcmUgZW5vdWdoIHRvIGRlZmVhdCBhbGwgdGhlIGJhcmJhcmlhbnMgaW4gYmF0dGxlIGhhZCB0aGV5IGxpdmVkIeKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZSBDb3JpbnRoaWFuIGV4aWxlcyB0b2xkIGhpbSB0aGF0IHRoZSBjaXR5IHdhcyBhYm91dCB0byBiZSBzdXJyZW5kZXJlZCB0byB0aGVtIGFuZCBwb2ludGVkIHRvIHRoZSBlbmdpbmVzIHdpdGggd2hpY2ggdGhleSB3ZXJlIGNvbmZpZGVudCBvZiB0YWtpbmcgdGhlIHdhbGxzLCBoZSB3b3VsZCBub3QgbWFrZSBhbiBhc3NhdWx0LCBkZWNsYXJpbmcgdGhhdCBHcmVlayBjaXRpZXMgb3VnaHQgbm90IHRvIGJlIGVuc2xhdmVkLCBidXQgY2hhc3RlbmVkLiDigJxBbmQgaWYs4oCdIGhlIGFkZGVkLCDigJx3ZSBhcmUgZ29pbmcgdG8gYW5uaWhpbGF0ZSB0aGUgZXJyaW5nIG1lbWJlcnMgb2Ygb3VyIG93biByYWNlLCBsZXQgdXMgYmV3YXJlIGxlc3Qgd2UgbGFjayBtZW4gdG8gaGVscCBpbiB0aGUgY29ucXVlc3Qgb2YgdGhlIGJhcmJhcmlhbnMu4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PciBhZ2FpbiwgaWYgaXQgaXMgaG9ub3VyYWJsZSB0byBoYXRlIHRoZSBQZXJzaWFuIGJlY2F1c2UgaW4gb2xkIGRheXMgaGUgc2V0IG91dCB0byBlbnNsYXZlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgYW5kIG5vdyBhbGxpZXMgaGltc2VsZiB3aXRoIHRoYXQgc2lkZSB3aGljaCBvZmZlcnMgaGltIHRoZSBwcm9zcGVjdCBvZiB3b3JraW5nIHRoZSBncmVhdGVyIG1pc2NoaWVmLCBtYWtlcyBnaWZ0cyB0byB0aG9zZSB3aG8sIGFzIGhlIGJlbGlldmVzLCB3aWxsIGluanVyZSB0aGUgR3JlZWtzIG1vc3QgaW4gcmV0dXJuLCBuZWdvdGlhdGVzIHRoZSBwZWFjZSB0aGF0IGhlIHRoaW5rcyBtb3N0IGNlcnRhaW4gdG8gcHJvZHVjZSB3YXIgYW1vbmcgdXMg4oCUIHdlbGwsIGV2ZXJ5b25lIGNhbiBzZWUgdGhlc2UgdGhpbmdzLCBidXQgd2hvIGV4Y2VwdCBBZ2VzaWxhdXMgaGFzIGV2ZXIgc3RyaXZlbiBlaXRoZXIgdG8gYnJpbmcgYWJvdXQgICB0aGUgcmV2b2x0IG9mIGEgdHJpYmUgZnJvbSB0aGUgUGVyc2lhbiwgb3IgdG8gc2F2ZSBhIHJldm9sdGluZyB0cmliZSBmcm9tIGRlc3RydWN0aW9uLCBvciBieSBzb21lIG1lYW5zIG9yIG90aGVyIHRvIGludm9sdmUgdGhlIEdyZWF0IEtpbmcgaW4gdHJvdWJsZSBzbyB0aGF0IGhlIHdpbGwgYmUgdW5hYmxlIHRvIGFubm95IHRoZSBHcmVla3M/IE5heSwgd2hlbiBoaXMgZmF0aGVybGFuZCB3YXMgYWN0dWFsbHkgYXQgd2FyIHdpdGggR3JlZWtzLCBoZSBkaWQgbm90IG5lZ2xlY3QgdGhlIGNvbW1vbiBnb29kIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgYnV0IHdlbnQgb3V0IHdpdGggYSBmbGVldCB0byBkbyB3aGF0IGhhcm0gaGUgY291bGQgdG8gdGhlIGJhcmJhcmlhbi4KPC90cmFuc2xhdGlvbj4="
translation['8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Bbm90aGVyIHF1YWxpdHkgdGhhdCBzaG91bGQgbm90IGdvIHVucmVjb3JkZWQgaXMgaGlzIHVyYmFuaXR5LiBGb3IgYWx0aG91Z2ggaGUgaGVsZCBob25vdXIgaW4gZmVlLCBhbmQgaGFkIHBvd2VyIGF0IGhpcyBiZWNrLCBhbmQgdG8gdGhlc2UgYWRkZWQgc292ZXJlaWdudHkg4oCUIHNvdmVyZWlnbnR5IG5vdCBwbG90dGVkIGFnYWluc3QgYnV0IHJlZ2FyZGVkIHdpdGggYWZmZWN0aW9uIOKAlCB5ZXQgbm8gdHJhY2VzIG9mIGFycm9nYW5jZSBjb3VsZCBoYXZlIGJlZW4gZGV0ZWN0ZWQgaW4gaGltLCB3aGVyZWFzIHNpZ25zIG9mIGEgZmF0aGVybHkgYWZmZWN0aW9uIGFuZCByZWFkaW5lc3MgdG8gc2VydmUgaGlzIGZyaWVuZHMsIGV2ZW4gaWYgdW5zb3VnaHQsIHdlcmUgZXZpZGVudC4KPC90cmFuc2xhdGlvbj4="
translation['8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkhlIGRlbGlnaHRlZCwgbW9yZW92ZXIsIHRvIHRha2UgaGlzIHBhcnQgaW4gbGlnaHQgdGFsaywgeWV0IGhlIHNob3dlZCBhbiBlYWdlciBzeW1wYXRoeSB3aXRoIGZyaWVuZHMgaW4gYWxsIHRoZWlyIHNlcmlvdXMgY29uY2VybnMuIFRoYW5rcyB0byBoaXMgb3B0aW1pc20sIGdvb2QgaHVtb3VyLCBhbmQgY2hlZXJmdWxuZXNzIGhlIHdhcyBhIGNlbnRyZSBvZiBhdHRyYWN0aW9uIHRvIG1hbnksIHdobyBjYW1lIG5vdCBtZXJlbHkgZm9yIHB1cnBvc2VzIG9mIGJ1c2luZXNzLCBidXQgdG8gcGFzcyB0aGUgZGF5IG1vcmUgcGxlYXNhbnRseS4gTGl0dGxlIGluY2xpbmVkIHRvIGJvYXN0ZnVsbmVzcyBoaW1zZWxmLCBoZSBoZWFyZCB3aXRob3V0IGFubm95YW5jZSB0aGUgc2VsZi1wcmFpc2Ugb2Ygb3RoZXJzLCB0aGlua2luZyB0aGF0LCBieSBpbmR1bGdpbmcgaW4gaXQsIHRoZXkgZGlkIG5vIGhhcm0gYW5kIGdhdmUgZWFybmVzdCBvZiBoaWdoIGVuZGVhdm91ci4KPC90cmFuc2xhdGlvbj4="
translation['8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBvdGhlciBoYW5kLCBvbmUgbXVzdCBub3Qgb21pdCBhIHJlZmVyZW5jZSB0byB0aGUgZGlnbml0eSB0aGF0IGhlIHNob3dlZCBvbiBhcHByb3ByaWF0ZSBvY2Nhc2lvbnMuIFRodXMsIHdoZW4gdGhlIFBlcnNpYW4gZW52b3kgd2hvIGNhbWUgd2l0aCBDYWxsZWFzLCB0aGUgTGFjZWRhZW1vbmlhbiwgaGFuZGVkIGhpbSBhIGxldHRlciBmcm9tIHRoZSBHcmVhdCBLaW5nIGNvbnRhaW5pbmcgb2ZmZXJzIG9mIGZyaWVuZHNoaXAgYW5kIGhvc3BpdGFsaXR5LCBoZSBkZWNsaW5lZCB0byBhY2NlcHQgaXQuIOKAnFRlbGwgaGlzIE1hamVzdHks4oCdIGhlIHNhaWQgdG8gdGhlIGJlYXJlciwg4oCcdGhhdCB0aGVyZSBpcyBubyBuZWVkIGZvciBoaW0gdG8gc2VuZCBtZSBwcml2YXRlIGxldHRlcnMsIGJ1dCwgaWYgaGUgICBnaXZlcyBwcm9vZiBvZiBmcmllbmRzaGlwIGZvciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTA2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMDY1Ij5MYWNlZGFlbW9uPC9wbGFjZU5hbWU+LCBhbmQgZ29vZHdpbGwgdG93YXJkcyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIEkgb24gbXkgcGFydCB3aWxsIGJlIGhpcyBmcmllbmQgd2l0aCBhbGwgbXkgaGVhcnQuIEJ1dCBpZiBoZSBpcyBmb3VuZCBwbG90dGluZyBhZ2FpbnN0IHRoZW0sIGxldCBoaW0gbm90IGhvcGUgdG8gaGF2ZSBhIGZyaWVuZCBpbiBtZSwgaG93ZXZlciBtYW55IGxldHRlcnMgSSBtYXkgcmVjZWl2ZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkluIHRoaXMgY29udGVtcHQgZm9yIHRoZSBraW5nJ3MgaG9zcGl0YWxpdHksIGFzIG5vdGhpbmcgaW4gY29tcGFyaXNvbiB3aXRoIHRoZSBhcHByb3ZhbCBvZiB0aGUgR3JlZWtzLCBJIGZpbmQgb25lIG1vcmUgcmVhc29uIGZvciBwcmFpc2luZyBBZ2VzaWxhdXMuIEFkbWlyYWJsZSB0b28gd2FzIGhpcyBvcGluaW9uIHRoYXQgaXQgaXMgbm90IGZvciB0aGUgcnVsZXIgd2l0aCB0aGUgZGVlcGVyIGNvZmZlcnMgYW5kIHRoZSBsb25nZXIgcm9sbCBvZiBzdWJqZWN0cyB0byBzZXQgaGltc2VsZiBhYm92ZSBoaXMgcml2YWwsIGJ1dCBmb3IgaGltIHdobyBpcyB0aGUgYmV0dGVyIGxlYWRlciBvZiB0aGUgYmV0dGVyIHBlb3BsZS4KPC90cmFuc2xhdGlvbj4="
translation['8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZ2FpbiwgYW4gaW5zdGFuY2Ugb2YgaGlzIGZvcmVzaWdodCB0aGF0IEkgZmluZCB3b3J0aHkgb2YgcHJhaXNlIGlzIHRoaXM6IGJlbGlldmluZyBpdCB0byBiZSBnb29kIGZvciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gdGhhdCBhcyBtYW55IHNhdHJhcHMgYXMgcG9zc2libGUgc2hvdWxkIHJldm9sdCBmcm9tIHRoZSBraW5nLCBoZSB3YXMgbm90IHByZXZhaWxlZCBvbiBlaXRoZXIgYnkgZ2lmdHMgb3IgYnkgdGhlIGtpbmcncyBwb3dlciB0byBhY2NlcHQgaGlzIGhvc3BpdGFsaXR5LCBidXQgd2FzIGNhcmVmdWwgbm90IHRvIGdpdmUgY2F1c2UgdG8gdGhvc2Ugd2hvIHdhbnRlZCB0byByZXZvbHQgZm9yIG1pc3RydXN0aW5nIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['8.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSBpcyB5ZXQgYW5vdGhlciBzaWRlIG9mIGhpcyBjaGFyYWN0ZXIgdGhhdCBldmVyeW9uZSBtdXN0IGFkbWlyZS4gSXQgd2FzIHRoZSBiZWxpZWYgb2YgdGhlIFBlcnNpYW4ga2luZyB0aGF0IGJ5IHBvc3Nlc3NpbmcgaGltc2VsZiBvZiBjb2xvc3NhbCB3ZWFsdGgsIGhlIHdvdWxkIHB1dCBhbGwgdGhpbmdzIGluIHN1YmplY3Rpb24gdG8gaGltc2VsZi4gSW4gdGhpcyBiZWxpZWYgaGUgdHJpZWQgdG8gZW5ncm9zcyBhbGwgdGhlIGdvbGQsIGFsbCB0aGUgc2lsdmVyIGFuZCBhbGwgdGhlIG1vc3QgY29zdGx5IHRoaW5ncyBpbiB0aGUgd29ybGQuIEFnZXNpbGF1cywgb24gdGhlIGNvbnRyYXJ5LCBhZG9wdGVkIHN1Y2ggYSBzaW1wbGUgc3R5bGUgaW4gaGlzIGhvbWUgdGhhdCBoZSBuZWVkZWQgbm9uZSBvZiB0aGVzZSB0aGluZ3MuCjwvdHJhbnNsYXRpb24+"
translation['8.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPklmIGFueW9uZSBkb3VidHMgdGhpcywgbGV0IGhpbSBtYXJrIHdoYXQgc29ydCBvZiBhIGhvdXNlIGNvbnRlbnRlZCBoaW0sIGFuZCBpbiBwYXJ0aWN1bGFyLCBsZXQgaGltIGxvb2sgYXQgdGhlIGRvb3JzOiBvbmUgbWlnaHQgaW1hZ2luZSB0aGF0IHRoZXkgd2VyZSB0aGUgdmVyeSBkb29ycyB0aGF0IEFyaXN0b2RlbXVzLCB0aGUgZGVzY2VuZGFudCBvZiBIZXJhY2xlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BcmlzdG9kZW11cyB3YXMgZ3JlYXQtZ3JhbmRzb24gb2YgSHlsbHVzLCBzb24gb2YgSGVyYWNsZXMuIFhlbm9waG9uIGZvbGxvd3MgdGhlIExhY2VkYWVtb25pYW4gYWNjb3VudCwgYWNjb3JkaW5nIHRvIHdoaWNoIEFyaXN0b2RlbXVzIGhpbXNlbGYgd2FzIGxlYWRlciBhdCB0aGUgdGltZSB3aGVuIHRoZSBMYWNlZGFlbW9uaWFucyBvYnRhaW5lZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gKDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhkdC4gNi41MiIgdmFsaWQ9InllcyI+SGR0LiA2LjUyPC9iaWJsPikuIEhpcyBzb25zLCBFdXJ5c3RoZW5lcyBhbmQgUHJvY2xlcywgYmVjYW1lIHRoZSBmaXJzdCBqb2ludC1raW5ncy48L25vdGU+IHNldCB1cCB3aXRoIGhpcyAgIG93biBoYW5kcyBpbiB0aGUgZGF5cyBvZiBoaXMgaG9tZS1jb21pbmcuIExldCBoaW0gdHJ5IHRvIHBpY3R1cmUgdGhlIHNjZW5lIHdpdGhpbjsgbm90ZSBob3cgaGUgZW50ZXJ0YWluZWQgb24gZGF5cyBvZiBzYWNyaWZpY2UsIGhlYXIgaG93IGhpcyBkYXVnaHRlciB1c2VkIHRvIGdvIGRvd24gdG8gQW15Y2xhZTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiAoPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGR0LiA2LjUyIiB2YWxpZD0ieWVzIj5IZHQuIDYuNTI8L2JpYmw+KS4gSGlzIHNvbnMsIEV1cnlzdGhlbmVzIGFuZCBQcm9jbGVzLCBiZWNhbWUgdGhlIGZpcnN0IGpvaW50LWtpbmdzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UbyB0aGUgZmVhc3Qgb2YgSHlhY2ludGh1czsgc2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQWdlcy4gMi4xNyIgdmFsaWQ9InllcyI+WGVuLiBBZ2VzLiAyLjE3PC9iaWJsPi48L25vdGU+IGluIGEgcHVibGljIGNhci4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBZ2VzLiAyLjE3IiB2YWxpZD0ieWVzIj5YZW4uIEFnZXMuIDIuMTc8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['8.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBzbywgdGhhbmtzIHRvIHRoaXMgbmljZSBhZGp1c3RtZW50IG9mIGhpcyBleHBlbmRpdHVyZSB0byBoaXMgaW5jb21lLCBoZSB3YXMgbmV2ZXIgY29tcGVsbGVkIHRvIGNvbW1pdCBhbiBhY3Qgb2YgaW5qdXN0aWNlIGZvciB0aGUgc2FrZSBvZiBtb25leS4gRG91YnRsZXNzIGl0IGlzIHRob3VnaHQgbm9ibGUgdG8gYnVpbGQgb25lc2VsZiBmb3J0cmVzc2VzIGltcHJlZ25hYmxlIHRvIGFuIGVuZW15OiBidXQgaW4gbXkganVkZ21lbnQgaXQgaXMgZmFyIG5vYmxlciB0byBmb3J0aWZ5IG9uZSdzIG93biBzb3VsIGFnYWluc3QgYWxsIHRoZSBhc3NhdWx0cyBvZiBsdWNyZSwgb2YgcGxlYXN1cmUsIGFuZCBvZiBmZWFyLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHdpbGwgbmV4dCBwb2ludCBvdXQgdGhlIGNvbnRyYXN0IGJldHdlZW4gaGlzIGJlaGF2aW91ciBhbmQgdGhlIGltcG9zdHVyZSBvZiB0aGUgUGVyc2lhbiBraW5nLiBJbiB0aGUgZmlyc3QgcGxhY2UgdGhlIFBlcnNpYW4gdGhvdWdodCBoaXMgZGlnbml0eSByZXF1aXJlZCB0aGF0IGhlIHNob3VsZCBiZSBzZWxkb20gc2VlbjogQWdlc2lsYXVzIGRlbGlnaHRlZCB0byBiZSBjb25zdGFudGx5IHZpc2libGUsIGJlbGlldmluZyB0aGF0LCB3aGVyZWFzIHNlY3JlY3kgd2FzIGJlY29taW5nIHRvIGFuIHVnbHkgY2FyZWVyLCB0aGUgbGlnaHQgc2hlZCBsdXN0cmUgb24gYSBsaWZlIG9mIG5vYmxlIHB1cnBvc2UuCjwvdHJhbnNsYXRpb24+"
translation['9.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSBzZWNvbmQgcGxhY2UsIHRoZSBvbmUgcHJpZGVkIGhpbXNlbGYgb24gYmVpbmcgZGlmZmljdWx0IG9mIGFwcHJvYWNoOiB0aGUgb3RoZXIgd2FzIGdsYWQgdG8gbWFrZSBoaW1zZWxmIGFjY2Vzc2libGUgdG8gYWxsLiBBbmQgdGhlIG9uZSBhZmZlY3RlZCB0YXJkaW5lc3MgaW4gbmVnb3RpYXRpb246IHRoZSBvdGhlciB3YXMgYmVzdCBwbGVhc2VkIHdoZW4gaGUgY291bGQgZGlzbWlzcyBoaXMgc3VpdG9ycyBxdWlja2x5IHdpdGggdGhlaXIgcmVxdWVzdHMgZ3JhbnRlZC4KPC90cmFuc2xhdGlvbj4="
translation['9.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGUgbWF0dGVyIG9mIHBlcnNvbmFsIGNvbWZvcnQsIG1vcmVvdmVyLCBpdCBpcyB3b3J0aCBub3RpY2luZyBob3cgbXVjaCBzaW1wbGVyIGFuZCBob3cgbXVjaCBtb3JlIGVhc2lseSBzYXRpc2ZpZWQgd2VyZSB0aGUgdGFzdGVzIG9mIEFnZXNpbGF1cy4gVGhlIFBlcnNpYW4ga2luZyBoYXMgdmludG5lcnMgc2NvdXJpbmcgZXZlcnkgbGFuZCB0byBmaW5kIHNvbWUgZHJpbmsgdGhhdCB3aWxsIHRpY2tsZSBoaXMgcGFsYXRlOyBhbiBhcm15IG9mIGNvb2tzIGNvbnRyaXZlcyBkaXNoZXMgZm9yIGhpcyBkZWxpZ2h0OyBhbmQgdGhlIHRyb3VibGUgaGlzIGxhY2tleXMgdGFrZSB0aGF0IGhlIG1heSBzbGVlcCBpcyBpbmRlc2NyaWJhYmxlLiBCdXQgQWdlc2lsYXVzLCB0aGFua3MgdG8gaGlzIGxvdmUgb2YgICB0b2lsLCBlbmpveWVkIGFueSBkcmluayB0aGF0IHdhcyBhdCBoYW5kIGFuZCBhbnkgZm9vZCB0aGF0IGNhbWUgaGlzIHdheTsgYW5kIGFueSBwbGFjZSB3YXMgZ29vZCBlbm91Z2ggdG8gZ2l2ZSBoaW0gc29mdCByZXBvc2UuCjwvdHJhbnNsYXRpb24+"
translation['9.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk5vciB3YXMgaGUgaGFwcHkgb25seSBpbiB0aGlzIGJlaGF2aW91cjogaGUgd2FzIGFsc28gcHJvdWQgdG8gcmVmbGVjdCB0aGF0LCB3aGlsZSBoZSB3YXMgc3Vycm91bmRlZCB3aXRoIGdvb2QgY2hlZXIsIGhlIHNhdyB0aGUgYmFyYmFyaWFuIGNvbnN0cmFpbmVkIHRvIGRyYXcgZnJvbSB0aGUgZW5kcyBvZiB0aGUgd29ybGQgdGhlIG1hdGVyaWFsIGZvciBoaXMgZW5qb3ltZW50LCBpZiBoZSB3b3VsZCBsaXZlIHdpdGhvdXQgZGlzY29tZm9ydC4KPC90cmFuc2xhdGlvbj4="
translation['9.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBpdCBjaGVlcmVkIGhpcyBoZWFydCB0byBrbm93IHRoYXQgaGUgY291bGQgYWNjb21tb2RhdGUgaGltc2VsZiB0byB0aGUgZGl2aW5lIG9yZGVyaW5nIG9mIHRoZSB3b3JsZCwgd2hlcmVhcyBoZSBzYXcgaGlzIHJpdmFsIHNodW5uaW5nIGhlYXQgYW5kIHNodW5uaW5nIGNvbGQgdGhyb3VnaCB3ZWFrbmVzcyBvZiBjaGFyYWN0ZXIsIGltaXRhdGluZyB0aGUgbGlmZSwgbm90IG9mIGJyYXZlIG1lbiwgYnV0IG9mIHRoZSB3ZWFrZXN0IG9mIHRoZSBicnV0ZXMuCjwvdHJhbnNsYXRpb24+"
translation['9.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdXJlbHksIHRvbywgaGUgZGlkIHdoYXQgd2FzIHNlZW1seSBhbmQgZGlnbmlmaWVkIHdoZW4gaGUgYWRvcm5lZCBoaXMgb3duIGVzdGF0ZSB3aXRoIHdvcmtzIGFuZCBwb3NzZXNzaW9ucyB3b3J0aHkgb2YgYSBtYW4sIGtlZXBpbmcgbWFueSBob3VuZHMgYW5kIHdhciBob3JzZXMsIGJ1dCBwZXJzdWFkZWQgaGlzIHNpc3RlciBDeW5pc2NhIHRvIGJyZWVkIGNoYXJpb3QgaG9yc2VzLCBhbmQgc2hvd2VkIGJ5IGhlciB2aWN0b3J5IHRoYXQgc3VjaCBhIHN0dWQgbWFya3MgdGhlIG93bmVyIGFzIGEgcGVyc29uIG9mIHdlYWx0aCwgYnV0IG5vdCBuZWNlc3NhcmlseSBvZiBtZXJpdC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIaWVybyAxMS41IiB2YWxpZD0ieWVzIj5YZW4uIEhpZXJvIDExLjU8L2JpYmw+PC9ub3RlPgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEhpZXJvIDExLjUiIHZhbGlkPSJ5ZXMiPlhlbi4gSGllcm8gMTEuNTwvYmlibD48L3RyYW5zbGF0aW9uPg=="
translation['9.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkhvdyBjbGVhcmx5IGhpcyB0cnVlIG5vYmlsaXR5IGNvbWVzIG91dCBpbiBoaXMgb3BpbmlvbiB0aGF0IGEgdmljdG9yeSBpbiB0aGUgY2hhcmlvdCByYWNlIG92ZXIgcHJpdmF0ZSBjaXRpemVucyB3b3VsZCBhZGQgbm90IGEgd2hpdCB0byBoaXMgcmVub3duOyBidXQgaWYgaGUgaGVsZCB0aGUgZmlyc3QgcGxhY2UgaW4gdGhlIGFmZmVjdGlvbiBvZiB0aGUgcGVvcGxlLCBnYWluZWQgdGhlIG1vc3QgZnJpZW5kcyBhbmQgYmVzdCBhbGwgb3ZlciB0aGUgd29ybGQsIG91dHN0cmlwcGVkIGFsbCBvdGhlcnMgaW4gc2VydmluZyBoaXMgZmF0aGVybGFuZCBhbmQgaGlzIGNvbXJhZGVzIGFuZCBpbiBwdW5pc2hpbmcgaGlzIGFkdmVyc2FyaWVzLCB0aGVuIGhlIHdvdWxkIGJlIHZpY3RvciBpbiB0aGUgbm9ibGVzdCBhbmQgbW9zdCBzcGxlbmRpZCBjb250ZXN0cywgYW5kIHdvdWxkIGdhaW4gaGlnaCByZW5vd24gYm90aCBpbiBsaWZlIGFuZCBhZnRlciBkZWF0aC4KPC90cmFuc2xhdGlvbj4="
translation['10.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3VjaCwgdGhlbiwgYXJlIHRoZSBxdWFsaXRpZXMgZm9yIHdoaWNoIEkgcHJhaXNlICAgQWdlc2lsYXVzLiBUaGVzZSBhcmUgdGhlIG1hcmtzIHRoYXQgZGlzdGluZ3Vpc2ggaGltLCBzYXksIGZyb20gdGhlIG1hbiB3aG8sIGxpZ2h0aW5nIG9uIGEgdHJlYXN1cmUsIGJlY29tZXMgd2VhbHRoaWVyIGJ1dCBub3Qgd2lzZXIgaW4gYnVzaW5lc3MsIG9yIGZyb20gdGhlIG1hbiB3aG8gd2lucyB2aWN0b3J5IHRocm91Z2ggYW4gb3V0YnJlYWsgb2Ygc2lja25lc3MgYW1vbmcgdGhlIGVuZW15LCBhbmQgYWRkcyB0byBoaXMgc3VjY2VzcyBidXQgbm90IHRvIGhpcyBrbm93bGVkZ2Ugb2Ygc3RyYXRlZ3kuIFRoZSBtYW4gd2hvIGlzIGZvcmVtb3N0IGluIGVuZHVyYW5jZSB3aGVuIHRoZSBob3VyIGNvbWVzIGZvciB0b2lsLCBpbiB2YWxvdXIgd2hlbiB0aGUgY29udGVzdCBjYWxscyBmb3IgY291cmFnZSwgaW4gd2lzZG9tIHdoZW4gdGhlIG5lZWQgaXMgZm9yIGNvdW5zZWwg4oCUIGhlIGlzIHRoZSBtYW4sIEkgdGhpbmssIHdobyBtYXkgZmFpcmx5IGJlIHJlZ2FyZGVkIGFzIHRoZSBwZXJmZWN0IGVtYm9kaW1lbnQgb2YgZ29vZG5lc3MuCjwvdHJhbnNsYXRpb24+"
translation['10.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPklmIGxpbmUgYW5kIHJ1bGUgYXJlIGEgbm9ibGUgZGlzY292ZXJ5IG9mIG1hbiBhcyBhaWRzIHRvIHRoZSBwcm9kdWN0aW9uIG9mIGdvb2Qgd29yaywgSSB0aGluayB0aGF0IHRoZSB2aXJ0dWUgb2YgQWdlc2lsYXVzIG1heSB3ZWxsIHN0YW5kIGFzIGEgbm9ibGUgZXhhbXBsZSBmb3IgdGhvc2UgdG8gZm9sbG93IHdobyB3aXNoIHRvIG1ha2UgbW9yYWwgZ29vZG5lc3MgYSBoYWJpdC4gRm9yIHdobyB0aGF0IGltaXRhdGVzIGEgcGlvdXMsIGEganVzdCwgYSBzb2JlciwgYSBzZWxmLWNvbnRyb2xsZWQgbWFuLCBjYW4gY29tZSB0byBiZSB1bnJpZ2h0ZW91cywgdW5qdXN0LCB2aW9sZW50LCB3YW50b24/IEluIHBvaW50IG9mIGZhY3QsIEFnZXNpbGF1cyBwcmlkZWQgaGltc2VsZiBsZXNzIG9uIHJlaWduaW5nIG92ZXIgb3RoZXJzIHRoYW4gb24gcnVsaW5nIGhpbXNlbGYsIGxlc3Mgb24gbGVhZGluZyB0aGUgcGVvcGxlIGFnYWluc3QgdGhlaXIgZW5lbWllcyB0aGFuIG9uIGd1aWRpbmcgdGhlbSB0byBhbGwgdmlydHVlLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ib3dldmVyLCBsZXQgaXQgbm90IGJlIHRob3VnaHQsIGJlY2F1c2Ugb25lIHdob3NlIGxpZmUgaXMgZW5kZWQgaXMgdGhlIHRoZW1lIG9mIG15IHByYWlzZSwgdGhhdCB0aGVzZSB3b3JkcyBhcmUgbWVhbnQgZm9yIGEgZnVuZXJhbCBkaXJnZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHJlZmVyZW5jZSBpcyB0byB0aGUgY2VyZW1vbmlhbCBoeW1ucyBzdW5nIGF0IG9yIGFmdGVyIGZ1bmVyYWxzLCB3aGljaCBvZiBjb3Vyc2UgY29udGFpbmVkIG11Y2ggdGhhdCB3b3VsZCBub3QgaGF2ZSBiZWVuIHNhaWQgb3Igc3VuZyBpbiB0aGUgaGVybydzIGxpZmUtdGltZS48L25vdGU+IFRoZXkgYXJlIGZhciBtb3JlIHRydWx5IHRoZSBsYW5ndWFnZSBvZiBldWxvZ3kuIEluIHRoZSBmaXJzdCBwbGFjZSB0aGUgd29yZHMgbm93IGFwcGxpZWQgdG8gaGltIGFyZSB0aGUgdmVyeSBzYW1lIHRoYXQgaGUgaGVhcmQgaW4gaGlzIGxpZmV0aW1lLiBBbmQsIGluIHRoZSBzZWNvbmQgcGxhY2UsIHdoYXQgdGhlbWUgaXMgbGVzcyBhcHByb3ByaWF0ZSB0byBhIGRpcmdlIHRoYW4gYSBsaWZlIG9mIGZhbWUgYW5kIGEgZGVhdGggd2VsbC10aW1lZD8gV2hhdCBtb3JlIHdvcnRoeSBvZiBldWxvZ2llcyB0aGFuIHZpY3RvcmllcyBtb3N0IGdsb3Jpb3VzIGFuZCBkZWVkcyBvZiBzb3ZlcmVpZ24gd29ydGg/CjwvdHJhbnNsYXRpb24+"
translation['10.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkp1c3RseSBtYXkgdGhlIG1hbiBiZSBjb3VudGVkIGJsZXNzZWQgd2hvIHdhcyBpbiBsb3ZlIHdpdGggZ2xvcnkgZnJvbSBlYXJseSB5b3V0aCBhbmQgd29uIG1vcmUgb2YgaXQgdGhhbiBhbnkgbWFuIG9mIGhpcyBhZ2U7IHdobywgYmVpbmcgYnkgbmF0dXJlIHZlcnkgY292ZXRvdXMgICBvZiBob25vdXIsIG5ldmVyIG9uY2Uga25ldyBkZWZlYXQgZnJvbSB0aGUgZGF5IHRoYXQgaGUgYmVjYW1lIGEga2luZzsgd2hvLCBhZnRlciBsaXZpbmcgdG8gdGhlIHV0bW9zdCBsaW1pdCBvZiBodW1hbiBsaWZlLCBkaWVkIHdpdGhvdXQgb25lIGJsdW5kZXIgdG8gaGlzIGFjY291bnQsIGVpdGhlciBjb25jZXJuaW5nIHRoZSBtZW4gd2hvbSBoZSBsZWQgb3IgaW4gZGVhbGluZyB3aXRoIHRob3NlIG9uIHdob20gaGUgbWFkZSB3YXIuCjwvdHJhbnNsYXRpb24+"
translation['11.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSBwcm9wb3NlIHRvIGdvIHRocm91Z2ggdGhlIHN0b3J5IG9mIGhpcyB2aXJ0dWUgYWdhaW4sIGFuZCB0byBzdW1tYXJpemUgaXQsIGluIG9yZGVyIHRoYXQgdGhlIHByYWlzZSBvZiBpdCBtYXkgYmUgbW9yZSBlYXNpbHkgcmVtZW1iZXJlZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWdlc2lsYXVzIHJldmVyZW5jZWQgaG9seSBwbGFjZXMgZXZlbiB3aGVuIHRoZXkgYmVsb25nZWQgdG8gYW4gZW5lbXksIHRoaW5raW5nIHRoYXQgaGUgb3VnaHQgdG8gbWFrZSBhbGxpZXMgb2YgdGhlIGdvZHMgbm8gbGVzcyBpbiBob3N0aWxlIHRoYW4gaW4gZnJpZW5kbHkgY291bnRyaWVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UbyBzdXBwbGlhbnRzIG9mIHRoZSBnb2RzLCBldmVuIGlmIGhpcyBmb2VzLCBoZSBkaWQgbm8gdmlvbGVuY2UsIGJlbGlldmluZyBpdCB1bnJlYXNvbmFibGUgdG8gY2FsbCByb2JiZXJzIG9mIHRlbXBsZXMgc2FjcmlsZWdpb3VzIGFuZCB5ZXQgdG8gY29uc2lkZXIgdGhvc2Ugd2hvIGRyYWdnZWQgc3VwcGxpYW50cyBmcm9tIGFsdGFycyBwaW91cyBtZW4uCjwvdHJhbnNsYXRpb24+"
translation['11.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NeSBoZXJvIG5ldmVyIGZhaWxlZCB0byBkd2VsbCBvbiBoaXMgb3BpbmlvbiB0aGF0IHRoZSBnb2RzIGhhdmUgcGxlYXN1cmUgaW4gcmlnaHRlb3VzIGRlZWRzIG5vIGxlc3MgdGhhbiBpbiBob2x5IHRlbXBsZXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluIHRoZSBob3VyIG9mIHN1Y2Nlc3MgaGUgd2FzIG5vdCBwdWZmZWQgdXAgd2l0aCBwcmlkZSwgYnV0IGdhdmUgdGhhbmtzIHRvIHRoZSBnb2RzLiBIZSBvZmZlcmVkIG1vcmUgc2FjcmlmaWNlcyB3aGVuIGNvbmZpZGVudCB0aGFuIHByYXllcnMgd2hlbiBpbiBkb3VidC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGUgd2FzIHdvbnQgdG8gbG9vayBjaGVlcmZ1bCB3aGVuIGluIGZlYXIsIGFuZCB0byBiZSBodW1ibGUgd2hlbiBzdWNjZXNzZnVsLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PZiBoaXMgZnJpZW5kcyBoZSB3ZWxjb21lZCBtb3N0IGhlYXJ0aWx5IG5vdCB0aGUgbW9zdCBwb3dlcmZ1bCwgYnV0IHRoZSBtb3N0IGRldm90ZWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhlIGhhdGVkIG5vdCB0aGUgbWFuIHdobyBkZWZlbmRlZCBoaW1zZWxmIHdoZW4gaW5qdXJlZCwgYnV0IHN1Y2ggYXMgc2hvd2VkIG5vIGdyYXRpdHVkZSBmb3IgYSBmYXZvdXIuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhlIHJlam9pY2VkIHRvIHNlZSB0aGUgYXZhcmljaW91cyBwb29yIGFuZCB0byBlbnJpY2ggdGhlIHVwcmlnaHQsIGRlc2lyaW5nIHRvIHJlbmRlciByaWdodCBtb3JlIHByb2ZpdGFibGUgdGhhbiB3cm9uZy4KPC90cmFuc2xhdGlvbj4="
translation['11.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3YXMgaGlzIGhhYml0IHRvIGFzc29jaWF0ZSB3aXRoIGFsbCBzb3J0cyBhbmQgY29uZGl0aW9ucyBvZiBtZW4sIGJ1dCB0byBiZSBpbnRpbWF0ZSB3aXRoIHRoZSBnb29kLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuZXZlciBoZSBoZWFyZCBtZW4gcHJhaXNlIG9yIGJsYW1lIG90aGVycywgaGUgdGhvdWdodCB0aGF0IGhlIGdhaW5lZCBhcyBtdWNoIGluc2lnaHQgaW50byB0aGUgY2hhcmFjdGVyIG9mIHRoZSBjcml0aWNzIGFzIG9mIHRoZSBwZXJzb25zIHRoZXkgY3JpdGljaXplZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SWYgZnJpZW5kcyBwcm92ZWQgZGVjZWl2ZXJzIGhlIGZvcmVib3JlIHRvIGJsYW1lIHRoZWlyIHZpY3RpbXMsIGJ1dCBoZSBoZWFwZWQgcmVwcm9hY2hlcyBvbiB0aG9zZSB3aG8gbGV0IGFuIGVuZW15IGRlY2VpdmUgdGhlbTsgYW5kIGhlIHByb25vdW5jZWQgZGVjZXB0aW9uIGNsZXZlciBvciB3aWNrZWQgYWNjb3JkaW5nIGFzIGl0IHdhcyBwcmFjdGlzZWQgb24gdGhlIHN1c3BpY2lvdXMgb3IgdGhlIGNvbmZpZGluZy4KPC90cmFuc2xhdGlvbj4="
translation['11.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgcHJhaXNlIG9mIHRob3NlIHdobyB3ZXJlIHByZXBhcmVkIHRvIGNlbnN1cmUgZmF1bHRzIHRoZXkgZGlzYXBwcm92ZWQgd2FzIHBsZWFzaW5nIHRvIGhpbSwgYW5kIGhlIG5ldmVyIHJlc2VudGVkIGNhbmRvdXIsIGJ1dCBhdm9pZGVkIGRpc3NpbXVsYXRpb24gbGlrZSBhIHNuYXJlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TbGFuZGVyZXJzIGhlIGhhdGVkIG1vcmUgdGhhbiB0aGlldmVzLCBkZWVtaW5nIGxvc3Mgb2YgZnJpZW5kcyBncmF2ZXIgdGhhbiBsb3NzIG9mIG1vbmV5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBtaXN0YWtlcyBvZiBwcml2YXRlIHBlcnNvbnMgaGUganVkZ2VkIGxlbmllbnRseSwgYmVjYXVzZSBmZXcgaW50ZXJlc3RzIHN1ZmZlciBieSB0aGVpciBpbmNvbXBldGVuY2U7IGJ1dCB0aGUgZXJyb3JzIG9mIHJ1bGVycyBoZSB0cmVhdGVkIGFzIHNlcmlvdXMsIHNpbmNlIHRoZXkgbGVhZCB0byBtYW55IHRyb3VibGVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5LaW5nc2hpcCwgaGUgaGVsZCwgZGVtYW5kcyBub3QgaW5kb2xlbmNlLCBidXQgbWFubHkgdmlydHVlLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSB3b3VsZCBub3QgYWxsb3cgYSBzdGF0dWUgb2YgaGltc2VsZiB0byBiZSBzZXQgdXAsIHRob3VnaCBtYW55IHdhbnRlZCB0byBnaXZlIGhpbSBvbmUsIGJ1dCBvbiBtZW1vcmlhbHMgb2YgaGlzIG1pbmQgaGUgbGFib3VyZWQgdW5jZWFzaW5nbHksIHRoaW5raW5nIHRoZSBvbmUgdG8gYmUgdGhlIHNjdWxwdG9yJ3Mgd29yaywgdGhlIG90aGVyIGhpcyBvd24sIHRoZSBvbmUgYXBwcm9wcmlhdGUgdG8gdGhlIHJpY2gsIHRoZSBvdGhlciB0byB0aGUgZ29vZC4KPC90cmFuc2xhdGlvbj4="
translation['11.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGUgdXNlIG9mIG1vbmV5IGhlIHdhcyBub3Qgb25seSBqdXN0IGJ1dCBnZW5lcm91cywgdGhpbmtpbmcgdGhhdCBhIGp1c3QgbWFuIG1heSBiZSBjb250ZW50IHRvIGxlYXZlIG90aGVyIG1lbidzIG1vbmV5IGFsb25lLCBidXQgdGhlIGdlbmVyb3VzIG1hbiBpcyByZXF1aXJlZCBhbHNvIHRvIHNwZW5kIGhpcyBvd24gaW4gdGhlIHNlcnZpY2Ugb2Ygb3RoZXJzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSB3YXMgZXZlciBnb2QtZmVhcmluZywgYmVsaWV2aW5nIHRoYXQgdGhleSB3aG8gYXJlIGxpdmluZyBsaWZlIHdlbGwgYXJlIG5vdCB5ZXQgaGFwcHksIGJ1dCBvbmx5IHRoZXkgd2hvIGhhdmUgZGllZCBnbG9yaW91c2x5IGFyZSBibGVzc2VkLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSBoZWxkIGl0IGEgZ3JlYXRlciBjYWxhbWl0eSB0byBuZWdsZWN0IHRoYXQgd2hpY2ggaXMgZ29vZCBrbm93aW5nbHkgdGhhbiBpbiBpZ25vcmFuY2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vIGZhbWUgYXR0cmFjdGVkIGhpbSB1bmxlc3MgaGUgZGlkIHRoZSByaWdodCB3b3JrIHRvIGFjaGlldmUgaXQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhlIHNlZW1lZCB0byBtZSBvbmUgb2YgdGhlIGZldyBtZW4gd2hvIGNvdW50IHZpcnR1ZSBub3QgYSB0YXNrIHRvIGJlIGVuZHVyZWQgYnV0IGEgY29tZm9ydCB0byBiZSBlbmpveWVkLiBBdCBhbnkgcmF0ZSBwcmFpc2UgZ2F2ZSBoaW0gbW9yZSBwbGVhc3VyZSB0aGFuIG1vbmV5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Db3VyYWdlLCBhcyBoZSBkaXNwbGF5ZWQgaXQsIHdhcyBqb2luZWQgd2l0aCBwcnVkZW5jZSByYXRoZXIgdGhhbiBib2xkbmVzcywgYW5kIHdpc2RvbSBoZSBjdWx0aXZhdGVkIG1vcmUgYnkgYWN0aW9uIHRoYW4gaW4gd29yZHMuCjwvdHJhbnNsYXRpb24+"
translation['11.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VmVyeSBnZW50bGUgd2l0aCBmcmllbmRzLCBoZSB3YXMgdmVyeSBmb3JtaWRhYmxlIHRvIGVuZW1pZXM7IGFuZCB3aGlsZSBoZSByZXNpc3RlZCBmYXRpZ3VlIG9ic3RpbmF0ZWx5LCBoZSB5aWVsZGVkIG1vc3QgcmVhZGlseSB0byBhIGNvbXJhZGUsIHRob3VnaCBmYWlyIGRlZWRzIGFwcGVhbGVkIG1vcmUgdG8gaGlzIGhlYXJ0IHRoYW4gZmFpciBmYWNlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG8gbW9kZXJhdGlvbiBpbiB0aW1lcyBvZiBwcm9zcGVyaXR5IGhlIGFkZGVkIGNvbmZpZGVuY2UgaW4gdGhlIG1pZHN0IG9mIGRhbmdlci4KPC90cmFuc2xhdGlvbj4="
translation['11.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGlzIHVyYmFuaXR5IGZvdW5kIGl0cyBoYWJpdHVhbCBleHByZXNzaW9uIG5vdCBpbiBqb2tlcyBidXQgaW4gaGlzIG1hbm5lcjsgYW5kIHdoZW4gb24gaGlzIGRpZ25pdHksIGhlIHdhcyBuZXZlciBhcnJvZ2FudCwgYnV0IGFsd2F5cyByZWFzb25hYmxlOyBhdCBsZWFzdCwgaWYgaGUgc2hvd2VkIGhpcyBjb250ZW1wdCBmb3IgdGhlIGhhdWdodHksIGhlIHdhcyBodW1ibGVyIHRoYW4gdGhlIGF2ZXJhZ2UgbWFuLiBGb3IgaGUgcHJpZGVkIGhpbXNlbGYgb24gdGhlIHNpbXBsaWNpdHkgb2YgaGlzIG93biBkcmVzcyBhbmQgdGhlIHNwbGVuZGlkIGVxdWlwbWVudCBvZiBoaXMgYXJteSwgb24gYSBzdHJpY3QgbGltaXRhdGlvbiBvZiBoaXMgb3duIG5lZWRzIGFuZCBhIGJvdW5kbGVzcyBnZW5lcm9zaXR5IHRvIGhpcyBmcmllbmRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BZGRlZCB0byB0aGlzLCBoZSB3YXMgdGhlIGJpdHRlcmVzdCBvZiBhZHZlcnNhcmllcywgYnV0IHRoZSBtaWxkZXN0IG9mIGNvbnF1ZXJvcnM7IHdhcnkgd2l0aCBlbmVtaWVzLCBidXQgdmVyeSBjb21wbGlhbnQgdG8gZnJpZW5kcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hpbGUgZXZlciBlbnN1cmluZyBzZWN1cml0eSB0byBoaXMgb3duIHNpZGUsIGhlIGV2ZXIgbWFkZSBpdCBoaXMgYnVzaW5lc3MgdG8gYnJpbmcgdG8gbm91Z2h0IHRoZSBkZXNpZ25zIG9mIGhpcyBlbmVteS4KPC90cmFuc2xhdGlvbj4="
translation['11.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnkgaGlzIHJlbGF0aXZlcyBoZSB3YXMgZGVzY3JpYmVkIGFzIOKAnGRldm90ZWQgdG8gaGlzIGZhbWlseSzigJ0gYnkgaGlzIGludGltYXRlcyBhcyDigJxhbiB1bmZhaWxpbmcgZnJpZW5kLOKAnTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEhlbGwuIDUuNS40NSIgdmFsaWQ9InllcyI+WGVuLiBIZWxsLiA1LjUuNDU8L2JpYmw+PC9ub3RlPiBieSB0aG9zZSB3aG8gc2VydmVkIGhpbSBhcyDigJx1bmZvcmdldGZ1bCzigJ0gYnkgdGhlIG9wcHJlc3NlZCBhcyDigJxhIGNoYW1waW9uLOKAnSBieSBoaXMgY29tcmFkZXMgaW4gZGFuZ2VyIGFzIOKAnGEgc2F2aW91ciBzZWNvbmQgdG8gdGhlIGdvZHMu4oCdPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiA1LjUuNDUiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gNS41LjQ1PC9iaWJsPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiBvbmUgcmVzcGVjdCwgSSB0aGluaywgaGUgd2FzIHVuaXF1ZS4KPC90cmFuc2xhdGlvbj4="
translation['11.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5IZSBwcm92ZWQgdGhhdCwgdGhvdWdoIHRoZSBib2RpbHkgc3RyZW5ndGggZGVjYXlzLCB0aGUgdmlnb3VyIG9mIGdvb2QgbWVuJ3Mgc291bHMgaXMgYWdlbGVzcy4gQXQgYW55IHJhdGUsIGhlIG5ldmVyIHdlYXJpZWQgaW4gdGhlIHB1cnN1aXQgb2YgZ3JlYXQgYW5kIG5vYmxlIGdsb3J5IHNvIGxvbmcgYXMgaGlzIGJvZHkgY291bGQgc3VwcG9ydCB0aGUgdmlnb3VyIG9mIGhpcyBzb3VsLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5XaGF0IG1hbidzIHlvdXRoLCB0aGVuLCBkaWQgbm90IHNlZW0gd2Vha2VyIHRoYW4gaGlzIG9sZCBhZ2U/IEZvciB3aG8gaW4gaGlzIHByaW1lIHdhcyBzbyBmb3JtaWRhYmxlIHRvIGhpcyBmb2VzIGFzIEFnZXNpbGF1cyBhdCB0aGUgdmVyeSBsaW1pdCBvZiBodW1hbiBsaWZlPyBXaG9zZSByZW1vdmFsIGJyb3VnaHQgc3VjaCB3ZWxjb21lIHJlbGllZiB0byB0aGUgZW5lbXkgYXMgdGhlIGRlYXRoIG9mIEFnZXNpbGF1cywgZGVzcGl0ZSBoaXMgeWVhcnM/IFdobyBnYXZlIHN1Y2ggY29uZmlkZW5jZSB0byBhbGxpZXMgYXMgQWdlc2lsYXVzLCB0aG91Z2ggbm93IG9uIHRoZSB0aHJlc2hvbGQgb2YgZGVhdGg/IFdoYXQgeW91bmcgbWFuIHdhcyBtb3JlIHJlZ3JldHRlZCBieSBoaXMgZnJpZW5kcyB0aGFuIEFnZXNpbGF1cywgdGhvdWdoIGhlIGRpZWQgZnVsbCBvZiB5ZWFycz8KPC90cmFuc2xhdGlvbj4="
translation['11.16'] = ""
translation['1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZmlyc3QgZHV0eSBpcyB0byBzYWNyaWZpY2UgdG8gdGhlIGdvZHMgYW5kIHByYXkgdGhlbSB0byBncmFudCB5b3UgdGhlIHRob3VnaHRzLCB3b3JkcyBhbmQgZGVlZHMgbGlrZWx5IHRvIHJlbmRlciB5b3VyIGNvbW1hbmQgbW9zdCBwbGVhc2luZyB0byB0aGUgZ29kcyBhbmQgdG8gYnJpbmcgeW91cnNlbGYsIHlvdXIgZnJpZW5kcyBhbmQgeW91ciBjaXR5IHRoZSBmdWxsZXN0IG1lYXN1cmUgb2YgYWZmZWN0aW9uIGFuZCBnbG9yeSBhbmQgYWR2YW50YWdlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkhhdmluZyBnYWluZWQgdGhlIGdvb2R3aWxsIG9mIHRoZSBnb2RzLCB5b3UgaGF2ZSB0aGVuIHRvIHJlY3J1aXQgYSBzdWZmaWNpZW50IG51bWJlciBvZiBtb3VudGVkIG1lbiB0aGF0IHlvdSBtYXkgYnJpbmcgdGhlIG51bWJlciB1cCB0byB0aGUgdG90YWwgcmVxdWlyZWQgYnkgdGhlIGxhdyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+MSwwMDA7IGJ1dCwgYXMgd2Ugc2hhbGwgc2VlLCB0aGUgbnVtYmVyIGhhZCBmYWxsZW4gdG8gc29tZXRoaW5nIGxpa2UgNjUwIGF0IHRoZSB0aW1lIFhlbm9waG9uIHdyb3RlLjwvbm90ZT4gYW5kIGFsc28gbWF5IHByZXZlbnQgYW55IGRlY3JlYXNlIGluIHRoZSBjYXZhbHJ5IGVzdGFibGlzaG1lbnQuIFVubGVzcyBhZGRpdGlvbmFsIHJlY3J1aXRzIGFyZSBlbnJvbGxlZCBpbiB0aGUgZm9yY2UsIHRoZSBudW1iZXIgd2lsbCBjb25zdGFudGx5IGR3aW5kbGUsIGZvciBzb21lIG1lbiBhcmUgYm91bmQgdG8gcmV0aXJlIHRocm91Z2ggb2xkIGFnZSBhbmQgb3RoZXJzIHRvIGRyb3Agb2ZmIGZvciB2YXJpb3VzIHJlYXNvbnMuCjwvdHJhbnNsYXRpb24+"
translation['1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGlsZSB0aGUgcmFua3MgYXJlIGZpbGxpbmcgdXAsIHlvdSBtdXN0IHNlZSB0aGF0IHRoZSBob3JzZXMgZ2V0IGVub3VnaCBmb29kIHRvIHN0YW5kIGhhcmQgd29yaywgc2luY2UgaG9yc2VzIHVuZml0IGZvciB0aGVpciB3b3JrIGNhbiBuZWl0aGVyIG92ZXJ0YWtlIG5vciBlc2NhcGUuIFlvdSBtdXN0IHNlZSB0aGF0IHRoZXkgYXJlIGRvY2lsZSwgYmVjYXVzZSBkaXNvYmVkaWVudCBhbmltYWxzIGFzc2lzdCB0aGUgZW5lbXkgbW9yZSB0aGFuIHRoZWlyIG93biBzaWRlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBob3JzZXMgdGhhdCBraWNrIHdoZW4gbW91bnRlZCBtdXN0IGJlIGdvdCByaWQgb2YsIGZvciBzdWNoIGJydXRlcyBvZnRlbiBkbyBtb3JlIG1pc2NoaWVmIHRoYW4gdGhlIGVuZW15LiBZb3UgbXVzdCBhbHNvIGxvb2sgYWZ0ZXIgdGhlaXIgZmVldCwgc28gdGhhdCB0aGV5IGNhbiBiZSByaWRkZW4gb24gcm91Z2ggZ3JvdW5kLCBmb3IgeW91IGtub3cgdGhhdCB3aGVyZXZlciBnYWxsb3BpbmcgaXMgcGFpbmZ1bCB0byB0aGVtLCB0aGV5IGFyZSB1c2VsZXNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IYXZpbmcgbWFkZSBzdXJlIHRoYXQgdGhlIGhvcnNlcyBhcmUgaW4gZ29vZCBjb25kaXRpb24sIHRoZSBuZXh0IGJ1c2luZXNzIGlzIHRvIHRyYWluIHRoZSBtZW4uIEZpcnN0IHRoZXkgbXVzdCBsZWFybiB0byBtb3VudCBmcm9tIHRoZSBzcHJpbmcsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgZGlmZmljdWx0IGZlYXQsIHNpbmNlIHRoZSBHcmVlayByaWRlciBoYWQgbm8gc3RpcnJ1cHMuPC9ub3RlPiBzaW5jZSBtYW55IGJlZm9yZSBub3cgaGF2ZSBvd2VkIHRoZWlyIGxpdmVzIHRvIHRoYXQuIFNlY29uZGx5LCB0aGV5IG11c3QgcHJhY3Rpc2UgcmlkaW5nIG92ZXIgYWxsIHNvcnRzIG9mIGdyb3VuZCwgc2luY2UgYW55IGtpbmQgb2YgY291bnRyeSBtYXkgYmVjb21lIHRoZSBhcmVhIG9mIHdhci4KPC90cmFuc2xhdGlvbj4="
translation['1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgdGhleSBoYXZlIGFjcXVpcmVkIGEgZmlybSBzZWF0LCB5b3VyIG5leHQgdGFzayBpcyB0byB0YWtlIHN0ZXBzIHRoYXQgYXMgbWFueSBhcyBwb3NzaWJsZSBzaGFsbCBiZSBhYmxlIHRvIHRocm93IHRoZSBqYXZlbGluIHdoZW4gbW91bnRlZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5XaGVuIGF0dGFja2luZyBpbmZhbnRyeSBpbiBsaW5lIHRoZSBjYXZhbHJ5IG5ldmVyIGNoYXJnZWQgaG9tZTsgYnV0IG9ubHkgYXBwcm9hY2hlZCBuZWFyIGVub3VnaCB0byB0aHJvdyB0aGUgamF2ZWxpbiB3aXRoIGVmZmVjdC4gSGVuY2UgdGhlIGltcG9ydGFuY2UgYXR0YWNoZWQgdG8gYW4gYWNjb21wbGlzaG1lbnQgYnkgbm8gbWVhbnMgZWFzeSB0byBwZXJmb3JtIHdpdGhvdXQgc3RpcnJ1cHMuIFNlZSBlc3BlY2lhbGx5IDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk9uIEhvcnNlbWFuc2hpcDwvdGl0bGU+IGNoYXAuIDEyLjwvbm90ZT4gYW5kIHNoYWxsIGJlY29tZSBlZmZpY2llbnQgaW4gYWxsIHRoZSBkZXRhaWxzIG9mIGhvcnNlbWFuc2hpcC48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5PbiBIb3JzZW1hbnNoaXA8L3RpdGxlPiBjaGFwLiAxMi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhhdCBib3RoIGhvcnNlcyBhbmQgbWVuIG11c3QgYmUgYXJtZWQsIHNvIHRoYXQsIHdoaWxlIHRoZXkgYXJlIHRoZW1zZWx2ZXMgdGhvcm91Z2hseSBwcm90ZWN0ZWQgYWdhaW5zdCB3b3VuZHMsIHRoZXkgbWF5IGhhdmUgdGhlIG1lYW5zIG9mIGluZmxpY3RpbmcgdGhlIGdyZWF0ZXN0IGxvc3Mgb24gdGhlIGVuZW15Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4geW91IG11c3QgY29udHJpdmUgdG8gbWFrZSB0aGUgbWVuIG9iZWRpZW50OiBvdGhlcndpc2UgbmVpdGhlciBnb29kIGhvcnNlcyBub3IgYSBmaXJtIHNlYXQgbm9yIGZpbmUgYXJtb3VyIGFyZSBvZiBhbnkgdXNlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gb3IgZW5zdXJpbmcgZWZmaWNpZW5jeSBpbiBhbGwgdGhlc2UgbWF0dGVycyB0aGUgY2F2YWxyeSBjb21tYW5kZXIsIGFzIGEgbWF0dGVyIG9mIGNvdXJzZSwgaXMgdGhlIHByaW5jaXBhbCBhdXRob3JpdHkuCjwvdHJhbnNsYXRpb24+"
translation['1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCwgYXQgdGhlIHNhbWUgdGltZSwgdGhlIHN0YXRlIHRoaW5rcyBpdCBkaWZmaWN1bHQgZm9yIHRoZSBjYXZhbHJ5IGNvbW1hbmRlciB0byBjYXJyeSBvdXQgYWxsIHRoZXNlIGR1dGllcyBzaW5nbGUtaGFuZGVkOyB0aGVyZWZvcmUsIGl0IGFsc28gZWxlY3RzIGNvbG9uZWxzIG9mIHJlZ2ltZW50cyB0byBhc3Npc3QgaGltOyBhbmQgaXQgaGFzIGNoYXJnZWQgdGhlIENvdW5jaWwgd2l0aCB0aGUgZHV0eSBvZiB0YWtpbmcgYSBzaGFyZSBpbiB0aGUgbWFuYWdlbWVudCBvZiB0aGUgY2F2YWxyeS4gSSB0aGluayBpdCB3ZWxsLCB0aGVuLCB0aGF0IHlvdSBzaG91bGQgZW5jb3VyYWdlIHRoZSBjb2xvbmVscyB0byBiZSBhcyBlYWdlciBhcyB5b3Vyc2VsZiBmb3IgdGhlIGVmZmljaWVuY3kgb2YgdGhlIGNhdmFscnksIGFuZCBzaG91bGQgaGF2ZSBzdWl0YWJsZSBzcG9rZXNtZW4gaW4gdGhlIENvdW5jaWwsIHRoYXQgdGhlaXIgc3BlZWNoZXMgbWF5IGFsYXJtIHRoZSBtZW7igJR0aGV5IHdpbGwgZG8gYmV0dGVyIHVuZGVyIHRoZSBpbmZsdWVuY2Ugb2YgZmVhcuKAlGFuZCBtYXkgYWxzbyBhcHBlYXNlIHRoZSB3cmF0aCBvZiB0aGUgQ291bmNpbCwgaW4gY2FzZSBpdCBzaG93cyBpbmRpZ25hdGlvbiBhdCB0aGUgd3JvbmcgdGltZS4KPC90cmFuc2xhdGlvbj4="
translation['1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZXJlLCB0aGVuLCB5b3UgaGF2ZSBicmllZiBub3RlcyBvbiB0aGUgbWF0dGVycyB0aGF0IGRlbWFuZCB5b3VyIGF0dGVudGlvbi4gSSB3aWxsIG5vdyB0cnkgdG8gZXhwbGFpbiBob3cgdGhlc2UgZHV0aWVzIG1heSBiZXN0IGJlIGNhcnJpZWQgb3V0IGluIGRldGFpbC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIHRoZSBtZW4sIHlvdSBtdXN0IG9idmlvdXNseSByYWlzZSB0aGVtIGFzIHJlcXVpcmVkIGJ5IHRoZSBsYXcsIGZyb20gYW1vbmcgdGhvc2Ugd2hvIGFyZSBtb3N0IGhpZ2hseSBxdWFsaWZpZWQgYnkgd2VhbHRoIGFuZCBib2RpbHkgdmlnb3VyLCBlaXRoZXIgYnkgb2J0YWluaW5nIGFuIG9yZGVyIG9mIHRoZSBjb3VydCBvciBieSB0aGUgdXNlIG9mIHBlcnN1YXNpb24uCjwvdHJhbnNsYXRpb24+"
translation['1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgY2FzZXMgdGhhdCBzaG91bGQgYmUgYnJvdWdodCBiZWZvcmUgdGhlIGNvdXJ0LCBJIHRoaW5rLCBhcmUgdGhvc2Ugb2YgbWVuIHdobyBvdGhlcndpc2UgbWlnaHQgYmUgc3VzcGVjdGVkIG9mIGhhdmluZyBicmliZWQgeW91IG5vdCB0byBhcHBseSBmb3IgYSBqdWRnbWVudC4gRm9yIHRoZSBzbWFsbGVyIG1lbiB3aWxsIGF0IG9uY2UgaGF2ZSBhIGdyb3VuZCBmb3IgZXNjYXBpbmcsIHVubGVzcyB5b3UgZmlyc3QgY29tcGVsIHRoZSBtb3N0IGhpZ2hseSBxdWFsaWZpZWQgdG8gc2VydmUuCjwvdHJhbnNsYXRpb24+"
translation['1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rLCB0b28sIHRoYXQsIGJ5IGR3ZWxsaW5nIG9uIHRoZSBicmlsbGlhbmN5IG9mIGhvcnNlbWFuc2hpcCwgeW91IG1pZ2h0IGZpcmUgc29tZSBvZiB0aGUgeW91bmcgbWVuIHdpdGggYW1iaXRpb24gdG8gc2VydmUgaW4gdGhlIGNhdmFscnksIGFuZCB0aGF0IHlvdSBtaWdodCBvdmVyY29tZSB0aGUgb3Bwb3NpdGlvbiBvZiB0aGVpciBndWFyZGlhbnMgYnkgaW5mb3JtaW5nIHRoZW0gdGhhdCB0aGV5IHdpbGwgYmUgcmVxdWlyZWQgdG8ga2VlcCBob3JzZXMgYnkgc29tZW9uZSwgaWYgbm90IGJ5IHlvdSwgb24gYWNjb3VudCBvZiB0aGVpciB3ZWFsdGg7IHdoZXJlYXMsIGlmIHRoZWlyCjwvdHJhbnNsYXRpb24+"
translation['1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5ib3lzIGpvaW4gdXAgZHVyaW5nIHlvdXIgY29tbWFuZCwgeW91IHdpbGwgcHV0IGFuIGVuZCB0byB0aGVpciBleHRyYXZhZ2FuY2UgaW4gYnV5aW5nIGV4cGVuc2l2ZSBob3JzZXMsIGFuZCBzZWUgdGhhdCB0aGV5IHNvb24gbWFrZSBnb29kIHJpZGVycy4gQW5kIHlvdSBtdXN0IHRyeSB0byBzdWl0IHlvdXIgYWN0aW9ucyB0byB5b3VyIHdvcmRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIHRoZSBleGlzdGluZyBjYXZhbHJ5LCBJIHRoaW5rIHRoYXQgdGhlIENvdW5jaWwgc2hvdWxkIGdpdmUgbm90aWNlIHRoYXQgaW4gZnV0dXJlIGRvdWJsZSB0aGUgYW1vdW50IG9mIGV4ZXJjaXNlIHdpbGwgYmUgcmVxdWlyZWQsIGFuZCB0aGF0IGFueSBob3JzZSB1bmFibGUgdG8ga2VlcCB1cCB3aWxsIGJlIHJlamVjdGVkLiBUaGlzIHdhcm5pbmcgd291bGQgcHV0IHRoZSBzY3JldyBvbiB0aGUgbWVuIGFuZCBtYWtlIHRoZW0gZmVlZCB0aGVpciBob3JzZXMgYmV0dGVyIGFuZCB0YWtlIG1vcmUgY2FyZSBvZiB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rIGl0IHdvdWxkIGJlIHdlbGwsIHRvbywgaWYgbm90aWNlIHdlcmUgZ2l2ZW4gdGhhdCB2aWNpb3VzIGhvcnNlcyB3b3VsZCBiZSByZWplY3RlZC4gVW5kZXIgdGhlIHN0aW11bHVzIG9mIHRoaXMgdGhyZWF0IG1lbiB3b3VsZCBicmVhayBpbiBzdWNoIGFuaW1hbHMgbW9yZSB0aG9yb3VnaGx5IGFuZCB3b3VsZCBiZSBtb3JlIGNhcmVmdWwgaW4gYnV5aW5nIGhvcnNlcy4KPC90cmFuc2xhdGlvbj4="
translation['1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgaXQgd291bGQgYmUgd2VsbCB0byBnaXZlIG5vdGljZSB0aGF0IGhvcnNlcyBmb3VuZCBraWNraW5nIGF0IGV4ZXJjaXNlIHdpbGwgYmUgcmVqZWN0ZWQuIEZvciBpdCBpcyBpbXBvc3NpYmxlIGV2ZW4gdG8ga2VlcCBzdWNoIGFuaW1hbHMgaW4gbGluZTsgaW4gYSBjaGFyZ2UgYWdhaW5zdCBhbiBlbmVteSB0aGV5IGFyZSBib3VuZCB0byBsYWcgYmVoaW5kLCBhbmQgdGhlIGNvbnNlcXVlbmNlIGlzLCB0aGF0IHRocm91Z2ggdGhlIGJhZCBiZWhhdmlvdXIgb2YgaGlzIGhvcnNlLCB0aGUgbWFuIGhpbXNlbGYgYmVjb21lcyB1c2VsZXNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Rm9yIGdldHRpbmcgaG9yc2VzJyBmZWV0IGludG8gdGhlIGJlc3QgY29uZGl0aW9uLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Ib3JzZS1zaG9lcyBiZWluZyB1bmtub3duOyBjZi4gPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T24gSG9yc2VtYW5zaGlwPC90aXRsZT4gY2hhcCA0Ljwvbm90ZT4gaWYgYW55b25lIGhhcyBhbiBlYXNpZXIgYW5kIGNoZWFwZXIgbWV0aG9kIHRoYW4gbWluZSwgYnkgYWxsIG1lYW5zIGFkb3B0IGl0LiBJZiBub3QsIEkgaG9sZOKAlGFuZCBJIHNwZWFrIGZyb20gZXhwZXJpZW5jZeKAlHRoYXQgdGhlIHJpZ2h0IHdheSBpcyB0byB0aHJvdyBkb3duIHNvbWUgc3RvbmVzIGZyb20gdGhlIHJvYWQsIGF2ZXJhZ2luZyBhYm91dCBhIHBvdW5kIGluIHdlaWdodCwgYW5kIHRvIGN1cnJ5IHRoZSBob3JzZSBvbiB0aGVzZSBhbmQgdG8gbWFrZSBoaW0gc3RhbmQgb24gdGhlbSB3aGVuZXZlciBoZSBnb2VzIG91dCBvZiB0aGUgc3RhYmxlLiBGb3IgdGhlIGhvcnNlIHdpbGwgY29uc3RhbnRseSB1c2UgaGlzIGZlZXQgb24gdGhlIHN0b25lcyB3aGVuIGhlIGlzIGNsZWFuZWQgYW5kIHdoZW4gaGUgaXMgd29ycmllZCBieSBmbGllcy4gVHJ5IGl0LCBhbmQgeW91IHdpbGwgZmluZCB5b3VyIGhvcnNlcycgZmVldCByb3VuZCwgYW5kIHdpbGwgYmVsaWV2ZSBpbiB0aGUgcmVzdCBvZiBteSBydWxlcy4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T24gSG9yc2VtYW5zaGlwPC90aXRsZT4gY2hhcCA0LjwvdHJhbnNsYXRpb24+"
translation['1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXNzdW1pbmcgdGhhdCB0aGUgaG9yc2VzIGFyZSBpbiBnb29kIGNvbmRpdGlvbiwgSSB3aWxsIGV4cGxhaW4gaG93IHRvIG1ha2UgdGhlIG1lbiB0aGVtc2VsdmVzIHRob3JvdWdobHkgZWZmaWNpZW50LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSB3b3VsZCBwZXJzdWFkZSB0aGUgeW91bmcgcmVjcnVpdHMgdG8gbGVhcm4gZm9yIHRoZW1zZWx2ZXMgaG93IHRvIG1vdW50IGZyb20gdGhlIHNwcmluZzsgYnV0IGlmIHlvdSBwcm92aWRlIGFuIGluc3RydWN0b3IsIHlvdSB3aWxsIHJlY2VpdmUgd2VsbC1tZXJpdGVkIHByYWlzZS4gVGhlIHdheSB0byBoZWxwIHRoZSBvbGRlciBtZW4gaXMgdG8gYWNjdXN0b20gdGhlbSB0byBnZXQgYSBsZWctdXAgaW4gdGhlIFBlcnNpYW4gZmFzaGlvbi4KPC90cmFuc2xhdGlvbj4="
translation['1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG8gZW5zdXJlIHRoYXQgdGhlIG1lbiBoYXZlIGEgZmlybSBzZWF0LCB3aGF0ZXZlciB0aGUgbmF0dXJlIG9mIHRoZSBncm91bmQsIGl0IGlzLCBwZXJoYXBzLCB0b28gbXVjaCB0cm91YmxlIHRvIGhhdmUgdGhlbSBvdXQgZnJlcXVlbnRseSB3aGVuIHRoZXJlIGlzIG5vIHdhciBnb2luZyBvbjsgYnV0IHlvdSBzaG91bGQgY2FsbCB0aGUgbWVuIHRvZ2V0aGVyLCBhbmQgcmVjb21tZW5kIHRoZW0gdG8gcHJhY3Rpc2UgdHVybmluZyBvZmYgdGhlIHJvYWRzIGFuZCBnYWxsb3Bpbmcgb3ZlciBhbGwgc29ydHMgb2YgZ3JvdW5kIHdoZW4gdGhleSBhcmUgcmlkaW5nIHRvIHF1YXJ0ZXJzIG9yIGFueSBvdGhlciBwbGFjZS4gRm9yIHRoaXMgZG9lcyBhcyBtdWNoIGdvb2QgYXMgdGFraW5nIHRoZW0gb3V0LCBhbmQgaXQgaXMgbGVzcyB0ZWRpb3VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyB1c2VmdWwgdG8gcmVtaW5kIHRoZW0gdGhhdCB0aGUgc3RhdGUgc3VwcG9ydHMgYW4gZXhwZW5kaXR1cmUgb2YgbmVhcmx5IGZvcnR5IHRhbGVudHM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2F5IDksNTAwIHBvdW5kcyBhcyByZWNrb25lZCBhYm91dCB0aGUgeWVhciA8ZGF0ZSBhdXRobmFtZT0iMTkyNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iMTkyNSI+MTkyNTwvZGF0ZT4uIFRoZSBwYXkgaXMsIG9mIGNvdXJzZSwgYWxsdWRlZCB0by4gVGhlIGV4cGVuZGl0dXJlIHdvdWxkIGFtb3VudCBkYWlseSB0byBuZWFybHkgNjY2IGRyYWNobWFlLiBUaGUgY2F2YWxyeW1hbidzIG5vcm1hbCBwYXkgd2FzIGEgZHJhY2htYSBhIGRheS4gSGVuY2UgaXQgbG9va3MgYXMgaWYgdGhlIG51bWJlciBvZiB0aGUgY2F2YWxyeSBpbiA8ZGF0ZSBhdXRobmFtZT0iLTM2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NSI+MzY1PC9kYXRlPiBCLkMuIGhhZCBmYWxsZW4gdG8gYWJvdXQgNjUwLjwvbm90ZT4gYSB5ZWFyIGluIG9yZGVyIHRoYXQgc2hlIG1heSBub3QgaGF2ZSB0byBsb29rIGFib3V0IGZvciBjYXZhbHJ5IGluIHRoZSBldmVudCBvZiB3YXIsIGJ1dCBtYXkgaGF2ZSBpdCByZWFkeSBmb3IgaW1tZWRpYXRlIHVzZS4gRm9yIHdpdGggdGhpcyB0aG91Z2h0IGluIHRoZWlyIG1pbmRzIHRoZSBtZW4gYXJlIGxpa2VseSB0byB0YWtlIG1vcmUgcGFpbnMgd2l0aCB0aGVpciBob3JzZW1hbnNoaXAsIHNvIHRoYXQgd2hlbiB3YXIgYnJlYWtzIG91dCB0aGV5IG1heSBub3QgaGF2ZSB0byBmaWdodCB1bnRyYWluZWQgZm9yIHRoZSBzdGF0ZSwgZm9yIGdsb3J5IGFuZCBmb3IgbGlmZS4KPGRhdGUgYXV0aG5hbWU9IjE5MjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9IjE5MjUiPjE5MjU8L2RhdGU+LiBUaGUgcGF5IGlzLCBvZiBjb3Vyc2UsIGFsbHVkZWQgdG8uIFRoZSBleHBlbmRpdHVyZSB3b3VsZCBhbW91bnQgZGFpbHkgdG8gbmVhcmx5IDY2NiBkcmFjaG1hZS4gVGhlIGNhdmFscnltYW4ncyBub3JtYWwgcGF5IHdhcyBhIGRyYWNobWEgYSBkYXkuIEhlbmNlIGl0IGxvb2tzIGFzIGlmIHRoZSBudW1iZXIgb2YgdGhlIGNhdmFscnkgaW4gPGRhdGUgYXV0aG5hbWU9Ii0zNjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjUiPjM2NTwvZGF0ZT4gQi5DLiBoYWQgZmFsbGVuIHRvIGFib3V0IDY1MC48L3RyYW5zbGF0aW9uPg=="
translation['1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyB3ZWxsIGFsc28gdG8gZ2l2ZSBub3RpY2UgdG8gdGhlIG1lbiB0aGF0IHlvdSBpbnRlbmQgdG8gdGFrZSB0aGVtIG91dCB5b3Vyc2VsZiBzb21lIGRheSwgYW5kIGxlYWQgdGhlbSBvdmVyIGNvdW50cnkgb2YgYWxsIGtpbmRzLiBBbmQgZHVyaW5nIHRoZSBtYW5vZXV2cmVzIHRoYXQgcHJlY2VkZSB0aGUgc2hhbSBmaWdodCBpdCBpcyBwcm9wZXIgdG8gdGFrZSB0aGVtIG91dCB0byBhIGRpZmZlcmVudCBwaWVjZSBvZiBjb3VudHJ5IGF0IGRpZmZlcmVudCB0aW1lczogdGhpcyBpcyBiZXR0ZXIgZm9yIGJvdGggbWVuIGFuZCBob3JzZXMuCjwvdHJhbnNsYXRpb24+"
translation['1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIHRocm93aW5nIHRoZSBqYXZlbGluIG9uIGhvcnNlYmFjayw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QXQgYSBzdXNwZW5kZWQgc2hpZWxkLjwvbm90ZT4gSSB0aGluayB0aGF0IHRoZSBncmVhdGVzdCBudW1iZXIgd2lsbCBwcmFjdGlzZSB0aGF0IGlmIHlvdSBhZGQgYSB3YXJuaW5nIHRvIHRoZSBjb2xvbmVscyB0aGF0IHRoZXkgd2lsbCBiZSByZXF1aXJlZCB0byByaWRlIHRvIGphdmVsaW4gZXhlcmNpc2UgdGhlbXNlbHZlcyBhdCB0aGUgaGVhZCBvZiB0aGUgbWFya3NtZW4gb2YgdGhlIHJlZ2ltZW50LiBUaHVzLCBpbiBhbGwgcHJvYmFiaWxpdHksIGV2ZXJ5b25lIG9mIHRoZW0gd2lsbCBiZSBlYWdlciB0byB0dXJuIG91dCBhcyBtYW55IG1hcmtzbWVuIGFzIHBvc3NpYmxlIGZvciB0aGUgc2VydmljZSBvZiB0aGUgc3RhdGUuCjwvdHJhbnNsYXRpb24+"
translation['1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG93YXJkcyB0aGUgcHJvcGVyIGFybWluZyBvZiB0aGUgbWVuLCBJIHRoaW5rIHRoYXQgdGhlIGdyZWF0ZXN0IGFtb3VudCBvZiBhc3Npc3RhbmNlIHdpbGwgYmUgb2J0YWluZWQgZnJvbSB0aGUgY29sb25lbHMsIGlmIHRoZXkgYXJlIHBlcnN1YWRlZCB0aGF0IGZyb20gdGhlIHBvaW50IG9mIHZpZXcgb2YgdGhlIHN0YXRlIHRoZSBicmlsbGlhbmNlIG9mIHRoZSByZWdpbWVudCBpcyBhIGZhciBtb3JlIGdsb3Jpb3VzIG9ybmFtZW50IHRvIHRoZW0gdGhhbiB0aGUgYnJpZ2h0bmVzcyBvZiB0aGVpciBvd24gYWNjb3V0cmVtZW50cyBvbmx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyBsaWtlbHkgdGhhdCB0aGV5IHdpbGwgbm90IGJlIGhhcmQgdG8gcGVyc3VhZGUgaW4gc3VjaCBtYXR0ZXJzLCBjb25zaWRlcmluZyB0aGF0IGhvbm91ciBhbmQgZ2xvcnkgd2VyZSB0aGUgYXR0cmFjdGlvbnMgdGhhdCB0aGUgY29sb25lbGN5IGhlbGQgb3V0IHRvIHRoZW0sIGFuZCB0aGV5IGNhbiBhcm0gdGhlIG1lbiBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHJlZ3VsYXRpb25zIGxhaWQgZG93biBpbiB0aGUgbGF3IHdpdGhvdXQgaW5jdXJyaW5nIGV4cGVuc2UgdGhlbXNlbHZlcywgYWZ0ZXJ3YXJkcyBjb21wZWxsaW5nIHRoZSBtZW4gdG8gc3BlbmQgdGhlaXIgcGF5IG9uIHRoZWlyIGFybXMsIGFzIHRoZSBsYXcgb3JkYWlucy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHJlZmVyZW5jZSBpcyBmaXJzdCB0byB0aGUg4oCcZXN0YWJsaXNobWVudCBtb25leeKAnSBmb3IgaG9yc2UgYW5kIGVxdWlwbWVudCwgZHVlIHRvIHJlY3J1aXRzIHdoZW4gdGhleSBoYWQgcGFzc2VkIHRoZSBleGFtaW5hdGlvbiBieSB0aGUgQ291bmNpbC4gVGhlcmUgaXMgYW5vdGhlciBhbGx1c2lvbiB0byBpdCBpbiA5LjUuIFRoaXMgc3VtIGlzIGluZGVwZW5kZW50IG9mIHRoZSBwYXk7IGFuZCBpdCBpcyBwcm9iYWJsZSB0aGF0IG9uIGxlYXZpbmcgdGhlIHNlcnZpY2UgdGhlIGNhdmFscnltYW4gaGFkIHRvIHJlZnVuZCBpdC48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG8gbWFrZSB0aGUgbWVuIHdobyBhcmUgdW5kZXIgeW91ciBjb21tYW5kIG9iZWRpZW50LCBpdCBpcyBpbXBvcnRhbnQgdG8gaW1wcmVzcyBvbiB0aGVtIGJ5IHdvcmQgb2YgbW91dGggdGhlIG1hbnkgYWR2YW50YWdlcyBvZiBvYmVkaWVuY2UgdG8gYXV0aG9yaXR5LCBhbmQgbm8gbGVzcyBpbXBvcnRhbnQgdG8gc2VlIHRoYXQgZ29vZCBkaXNjaXBsaW5lIGJyaW5ncyBnYWluIGFuZCBpbnN1Ym9yZGluYXRpb24gbG9zcyBpbiBldmVyeSByZXNwZWN0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGJlc3Qgd2F5IG9mIGluZHVjaW5nIGV2ZXJ5IGNvbG9uZWwgdG8gdGFrZSBwcmlkZSBpbiBjb21tYW5kaW5nIGEgd2VsbCBlcXVpcHBlZCByZWdpbWVudCwgSSB0aGluaywgaXMgdG8gYXJtIHlvdXIgY29tcGFueSBvZiBjb3VyaWVycyBhcyB3ZWxsIGFzIHlvdSBjYW4sIHRvIGRlbWFuZCBvZiB0aGVtIGNvbnN0YW50IHByYWN0aWNlIGluIHRoZSB1c2Ugb2YgdGhlIGphdmVsaW4sIGFuZCB0byBpbnN0cnVjdCB0aGVtIGluIGl0IGFmdGVyIG1ha2luZyB5b3Vyc2VsZiBwcm9maWNpZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaWYgeW91IGNvdWxkIG9mZmVyIHByaXplcyB0byB0aGUgcmVnaW1lbnRzIGZvciBza2lsbCBpbiBhbGwgdGhlIGZlYXRzIHRoYXQgdGhlIHB1YmxpYyBleHBlY3RzIHRoZSBjYXZhbHJ5IHRvIHBlcmZvcm0gYXQgdGhlIHNwZWN0YWNsZXMsIEkgdGhpbmsgdGhpcyB3b3VsZCBhcHBlYWwgc3Ryb25nbHkgdG8gdGhlIHNwaXJpdCBvZiBlbXVsYXRpb24gaW4gZXZlcnkgQXRoZW5pYW4uIEZvciBldmlkZW5jZSBvZiB0aGlzIEkgbWF5IHJlZmVyIHRvIHRoZSBjaG9ydXNlcywgaW4gd2hpY2ggbWFueSBsYWJvdXJzIGFuZCBoZWF2eSBleHBlbnNlcyBhcmUgdGhlIHByaWNlIHBhaWQgZm9yIHRyaWZsaW5nIHJld2FyZHMuIE9ubHkgeW91IG11c3QgZmluZCBqdWRnZXMgd2hvc2Ugc3VmZnJhZ2Ugd2lsbCBzaGVkIGx1c3RyZSBvbiBhIHZpY3RvcnkuCjwvdHJhbnNsYXRpb24+"
translation['2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHlvdXIgbWVuIGFyZSB3ZWxsIHRyYWluZWQgaW4gYWxsIHRoZXNlIHBvaW50cywgdGhleSBtdXN0LCBvZiBjb3Vyc2UsIHVuZGVyc3RhbmQgc29tZSBwbGFuIG9mIGZvcm1hdGlvbiwgdGhhdCBpbiB3aGljaCB0aGV5IHdpbGwgc2hvdyB0byBncmVhdGVzdCBhZHZhbnRhZ2UgaW4gdGhlIHNhY3JlZCBwcm9jZXNzaW9ucyBhbmQgYXQgbWFub2V1dnJlcywgZmlnaHQsIGlmIG5lZWQgYmUsIHdpdGggdGhlIGdyZWF0ZXN0IGNvdXJhZ2UsIGFuZCBtb3ZlIGFsb25nIHJvYWRzIGFuZCBjcm9zcyByaXZlcnMgd2l0aCBwZXJmZWN0IGVhc2UgaW4gdW5icm9rZW4gb3JkZXIuIFNvIEkgd2lsbCBub3cgdHJ5IHRvIGV4cGxhaW4gdGhlIGZvcm1hdGlvbiB0aGF0IEkgdGhpbmsgd2lsbCBnaXZlIHRoZSBiZXN0IHJlc3VsdHMgaW4gdGhlc2UgdmFyaW91cyBjaXJjdW1zdGFuY2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgdGhlIHN0YXRlIGhhcyBkaXZpZGVkIHRoZSBjYXZhbHJ5IGludG8gdGVuIHNlcGFyYXRlIHJlZ2ltZW50cy4gSSBob2xkIHRoYXQgd2l0aGluIHRoZXNlIHlvdSBzaG91bGQsIHRvIGJlZ2luIHdpdGgsIGFwcG9pbnQgZmlsZS1sZWFkZXJzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPuKAnERlY2FkYXJjaHMs4oCdIGNvbW1hbmRpbmcgYSBmaWxlIG9mIHRlbiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtM61zrrhvbHPgjwvZm9yZWlnbj4uIFguIGhhZCBpbiBtaW5kIHRoZSBvcmdhbmlzYXRpb24gb2YgdGhlIFNwYXJ0YW4gaW5mYW50cnk7IGNwLiA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Db25zdGl0dXRpb24gb2YgdGhlIExhYy48L3RpdGxlPiAxMS41Ljwvbm90ZT4gYWZ0ZXIgY29uc3VsdGluZyBlYWNoIG9mIHRoZSBjb2xvbmVscywgY2hvb3Npbmcgc3R1cmR5IG1lbiwgd2hvIGFyZSBiZW50IG9uIHdpbm5pbmcgZmFtZSBieSBzb21lIGJyaWxsaWFudCBkZWVkLiBUaGVzZSBzaG91bGQgZm9ybSB0aGUgZnJvbnQgcmFuay4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTOtc664b2xz4I8L2ZvcmVpZ24+LiBYLiBoYWQgaW4gbWluZCB0aGUgb3JnYW5pc2F0aW9uIG9mIHRoZSBTcGFydGFuIGluZmFudHJ5OyBjcC4gPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q29uc3RpdHV0aW9uIG9mIHRoZSBMYWMuPC90aXRsZT4gMTEuNS48L3RyYW5zbGF0aW9uPg=="
translation['2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk5leHQgeW91IHNob3VsZCBjaG9vc2UgYW4gZXF1YWwgbnVtYmVyIG9mIHRoZSBvbGRlc3QgYW5kIG1vc3Qgc2Vuc2libGUgdG8gZm9ybSB0aGUgcmVhciByYW5rLiBUbyB1c2UgYW4gaWxsdXN0cmF0aW9uLCBzdGVlbCBoYXMgbW9zdCBwb3dlciB0byBjdXQgdGhyb3VnaCBzdGVlbCB3aGVuIGl0cyBlZGdlIGlzIGtlZW4gYW5kIGl0cyBiYWNrIHJlbGlhYmxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UbyBmaWxsIHRoZSByYW5rcyBiZXR3ZWVuIHRoZSBmcm9udCBhbmQgcmVhciwgdGhlIGZpbGUtbGVhZGVycyBzaG91bGQgY2hvb3NlIHRoZSBtZW4gdG8gZm9ybSB0aGUgc2Vjb25kIGxpbmUsIGFuZCB0aGVzZSBpbiB0dXJuIHRoZSBtZW4gdG8gZm9ybSB0aGUgdGhpcmQsIGFuZCBzbyBvbiB0aHJvdWdob3V0LiBJbiB0aGlzIHdheSBldmVyeSBtYW4gd2lsbCBuYXR1cmFsbHkgaGF2ZSBjb21wbGV0ZSBjb25maWRlbmNlIGluIHRoZSBtYW4gYmVoaW5kIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Zb3UgbXVzdCBiZSB2ZXJ5IGNhcmVmdWwgdG8gYXBwb2ludCBhIGNvbXBldGVudCBtYW4gYXMgbGVhZGVyIGluIHRoZSByZWFyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCB0aGUgbGFzdCBtYW4gb2YgZWFjaCBmaWxlLCBjZi4gMywgd2hvIGluIHNvbWUgY2FzZXMgd291bGQgaGF2ZSB0byBhY3QgYXMgbGVhZGVyLiBJbiB0aGUgU3BhcnRhbiBpbmZhbnRyeSBoZSB3YXMgdGhlIG1hbiB3aXRoIHRoZSBsb25nZXN0IHNlcnZpY2UgaW4gdGhlIGZpbGUuPC9ub3RlPiBGb3IgaWYgaGUgaXMgYSBnb29kIG1hbiwgaGlzIGNoZWVycyB3aWxsIGFsd2F5cyBoZWFydGVuIHRoZSByYW5rcyBpbiBmcm9udCBvZiBoaW0gaW4gY2FzZSBpdCBiZWNvbWVzIG5lY2Vzc2FyeSB0byBjaGFyZ2U7IG9yLCBzaG91bGQgdGhlIG1vbWVudCBjb21lIHRvIHJldHJlYXQsIGhpcyBwcnVkZW50IGxlYWRlcnNoaXAgd2lsbCwgaW4gYWxsIHByb2JhYmlsaXR5LCBkbyBtdWNoIGZvciB0aGUgc2FmZXR5IG9mIGhpcyByZWdpbWVudC4KPC90cmFuc2xhdGlvbj4="
translation['2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbiBldmVuIG51bWJlciBvZiBmaWxlLWxlYWRlcnMgaGFzIHRoaXMgYWR2YW50YWdlIG92ZXIgYW4gb2RkLCB0aGF0IGl0IGlzIHBvc3NpYmxlIHRvIGRpdmlkZSB0aGUgcmVnaW1lbnQgaW50byBhIGxhcmdlciBudW1iZXIgb2YgZXF1YWwgcGFydHMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSByZWFzb25zIHdoeSBJIGxpa2UgdGhpcyBmb3JtYXRpb24gYXJlIHRoZXNlLiBJbiB0aGUgZmlyc3QgcGxhY2UsIGFsbCB0aGUgbWVuIGluIHRoZSBmcm9udCByYW5rIGFyZSBvZmZpY2VyczsgYW5kIHRoZSBvYmxpZ2F0aW9uIHRvIGRpc3Rpbmd1aXNoIHRoZW1zZWx2ZXMgYXBwZWFscyBtb3JlIHN0cm9uZ2x5IHRvIG1lbiB3aGVuIHRoZXkgYXJlIG9mZmljZXJzIHRoYW4gd2hlbiB0aGV5IGFyZSBwcml2YXRlcy4gU2Vjb25kbHksIHdoZW4gYW55dGhpbmcgaGFzIHRvIGJlIGRvbmUsIHRoZSB3b3JkIG9mIGNvbW1hbmQgaXMgbXVjaCBtb3JlIGVmZmVjdGl2ZSBpZiBpdCBpcyBwYXNzZWQgdG8gb2ZmaWNlcnMgcmF0aGVyIHRoYW4gdG8gcHJpdmF0ZXMuCjwvdHJhbnNsYXRpb24+"
translation['2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZXQgdXMgYXNzdW1lIHRoYXQgdGhpcyBmb3JtYXRpb24gaGFzIGJlZW4gYWRvcHRlZDogZXZlcnkgZmlsZS1sZWFkZXIgbXVzdCBrbm93IGhpcyBwb3NpdGlvbiBpbiB0aGUgbGluZSBvZiBtYXJjaCBieSB3b3JkIHBhc3NlZCBhbG9uZyBieSB0aGUgY29sb25lbCwganVzdCBhcyBldmVyeSBjb2xvbmVsIGlzIGluZm9ybWVkIGJ5IHRoZSBjb21tYW5kZXIgb2YgaGlzIHByb3BlciBwbGFjZSBpbiB0aGUgY2hhcmdlLiBGb3Igd2hlbiB0aGVzZSBpbnN0cnVjdGlvbnMgYXJlIGdpdmVuIHRoZXJlIHdpbGwgYmUgbXVjaCBiZXR0ZXIgb3JkZXIgdGhhbiBpZiB0aGUgbWVuIGhhbXBlciBvbmUgYW5vdGhlciBsaWtlIGEgY3Jvd2QgbGVhdmluZyB0aGUgdGhlYXRyZS4KPC90cmFuc2xhdGlvbj4="
translation['2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBpbiB0aGUgZXZlbnQgb2YgYSBmcm9udGFsIGF0dGFjaywgdGhlIG1lbiBpbiB0aGUgdmFuIGFyZSBmYXIgbW9yZSB3aWxsaW5nIHRvIGZpZ2h0IHdoZW4gdGhleSBrbm93IHRoYXQgdGhpcyBpcyB0aGVpciBzdGF0aW9uOyBzbyBpcyB0aGUgcmVhci1yYW5rIGluIHRoZSBldmVudCBvZiBhIHN1cnByaXNlIGF0dGFjayBpbiB0aGUgcmVhciwgd2hlbiB0aGUgbWVuIHRoZXJlIHVuZGVyc3RhbmQgdGhhdCBpdCBpcyBkaXNncmFjZWZ1bCB0byBsZWF2ZSB0aGVpciBwb3N0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpZiBubyBvcmRlciBpcyBrZXB0IHRoZXJlIGlzIGNvbmZ1c2lvbiB3aGVuZXZlciB0aGUgcm9hZHMgYXJlIG5hcnJvdyBvciByaXZlcnMgYXJlIGJlaW5nIGNyb3NzZWQ7IGFuZCB3aGVuIGFuIGFjdGlvbiBpcyBmb3VnaHQgbm8gb25lIHZvbHVudGFyaWx5IHRha2VzIGhpcyBwb3N0IGluIHRoZSBmaWdodGluZyBsaW5lLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbGwgdGhlc2UgcHJlbGltaW5hcmllcyBtdXN0IGJlIHRob3JvdWdobHkgbWFzdGVyZWQgYnkgYWxsIHRoZSBjYXZhbHJ5LCBpZiB0aGV5IGFyZSB0byBnaXZlIHRoZWlyIGxlYWRlciB1bmZsaW5jaGluZyBzdXBwb3J0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgd2UgY29tZSB0byBkdXRpZXMgdGhhdCB0aGUgY2F2YWxyeSBjb21tYW5kZXIgbXVzdCBwZXJmb3JtIGhpbXNlbGYuIEZpcnN0LCBoZSBtdXN0IHNhY3JpZmljZSB0byBwcm9waXRpYXRlIHRoZSBnb2RzIG9uIGJlaGFsZiBvZiB0aGUgY2F2YWxyeTsgc2Vjb25kbHksIGhlIG11c3QgbWFrZSB0aGUgcHJvY2Vzc2lvbnMgZHVyaW5nIHRoZSBmZXN0aXZhbHMgd29ydGggc2VlaW5nOyBmdXJ0aGVyLCBoZSBtdXN0IGNvbmR1Y3QgYWxsIHRoZSBvdGhlciBvYmxpZ2F0b3J5IGRpc3BsYXlzIGJlZm9yZSB0aGUgcGVvcGxlIHdpdGggYXMgbXVjaCBzcGxlbmRvdXIgYXMgcG9zc2libGUsIHRoYXQgaXMgdG8gc2F5LCB0aGUgcmV2aWV3cyBpbiB0aGUgQWNhZGVteSwgaW4gdGhlIEx5Y2V1bSwgYXQgUGhhbGVydW0sIGFuZCBpbiB0aGUgSGlwcG9kcm9tZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Tm90aGluZyBpbiB0aGUgc2VxdWVsIHJlZmVycyB0byBtYW5vZXV2cmVzIGF0IFBoYWxlcnVtOyBhY2NvcmRpbmdseSBpdCBoYXMgYmVlbiBwcm9wb3NlZCB0byBvbWl0IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs66zrHhvbYgz4ThvbAgzqbOsc67zrfPgc6/4b+WPC9mb3JlaWduPiBhcyBzcHVyaW91cy4gVGhlIEhpcHBvZHJvbWUgd2FzIHByb2JhYmx5IGluIHRoZSBOLlcuIGRpc3RyaWN0IG9mIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFBpcmFldXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFBpcmFldXMiPlBpcmFldXM8L3BsYWNlTmFtZT4uIFRoaXMgdHJlYXRpc2UgZ2l2ZXMgdGhlIG9ubHkgaW5mb3JtYXRpb24gdGhhdCB3ZSBwb3NzZXNzIGFib3V0IHRoZXNlIGZ1bmN0aW9ucy48L25vdGU+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOseG9tiDPhOG9sCDOps6xzrvOt8+Bzr/hv5Y8L2ZvcmVpZ24+IGFzIHNwdXJpb3VzLiBUaGUgSGlwcG9kcm9tZSB3YXMgcHJvYmFibHkgaW4gdGhlIE4uVy4gZGlzdHJpY3Qgb2YgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGlyYWV1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsUGlyYWV1cyI+UGlyYWV1czwvcGxhY2VOYW1lPi4gVGhpcyB0cmVhdGlzZSBnaXZlcyB0aGUgb25seSBpbmZvcm1hdGlvbiB0aGF0IHdlIHBvc3Nlc3MgYWJvdXQgdGhlc2UgZnVuY3Rpb25zLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVzZSBhZ2FpbiBhcmUgb25seSBicmllZiBub3RlczsgYW5kIEkgd2lsbCBub3cgZXhwbGFpbiBleGFjdGx5IGhvdyB0aGUgZGV0YWlscyBvZiB0aGVzZSB2YXJpb3VzIGZ1bmN0aW9ucyBtYXkgYmUgY2FycmllZCBvdXQgd2l0aCBtb3N0IHNwbGVuZG91ci4KPC90cmFuc2xhdGlvbj4="
translation['3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBmb3IgdGhlIHByb2Nlc3Npb25zLCBJIHRoaW5rIHRoZXkgd291bGQgYmUgbW9zdCBhY2NlcHRhYmxlIGJvdGggdG8gdGhlIGdvZHMgYW5kIHRvIHRoZSBzcGVjdGF0b3JzIGlmIHRoZXkgaW5jbHVkZWQgYSBnYWxhIHJpZGUgaW4gdGhlIG1hcmtldCBwbGFjZS4gVGhlIHN0YXJ0aW5nIHBvaW50IHdvdWxkIGJlIHRoZSBIZXJtczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgSGVybXMgc3Rvb2QgaW4gdHdvIHJvd3MgYmV0d2VlbiB0aGUg4oCcU3RvYSBCYXNpbGVpb3PigJ0gYW5kIHRoZSDigJxQb2ljaWxlLuKAnSBUaGUgRWxldXNpbml1bSwgcHJvYmFibHkgbGF5IGF0IHRoZSB3ZXN0ZXJuIGZvb3Qgb2YgdGhlIEFjcm9wb2xpcy4gU2VlIEZyYXplciwgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGF1c2FuaWFzPC90aXRsZT4gdm9sLiAyLiwgcC4gMTIxIGFuZCBwLiAxMzEuIFNvbWUgdGhpbmsgdGhlIHNpdGUgd2FzIGF0IHRoZSBlYXN0IGZvb3QuPC9ub3RlPjsgYW5kIHRoZSBjYXZhbHJ5IHdvdWxkIHJpZGUgcm91bmQgc2FsdXRpbmcgdGhlIGdvZHMgYXQgdGhlaXIgc2hyaW5lcyBhbmQgc3RhdHVlcy4gU28gYXQgdGhlIEdyZWF0IERpb255c2lhIHRoZSBkYW5jZSBvZiB0aGUgY2hvcnVzZXMgZm9ybXMgcGFydCBvZiB0aGUgaG9tYWdlIG9mZmVyZWQgdG8gdGhlIFR3ZWx2ZSBhbmQgdG8gb3RoZXIgZ29kcy48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5QYXVzYW5pYXM8L3RpdGxlPiB2b2wuIDIuLCBwLiAxMjEgYW5kIHAuIDEzMS4gU29tZSB0aGluayB0aGUgc2l0ZSB3YXMgYXQgdGhlIGVhc3QgZm9vdC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgY2lyY3VpdCBpcyBjb21wbGV0ZWQgYW5kIHRoZSBjYXZhbGNhZGUgaXMgYWdhaW4gbmVhciB0aGUgSGVybXMsIHRoZSBuZXh0IHRoaW5nIHRvIGRvLCBJIHRoaW5rLCBpcyB0byBnYWxsb3AgYXQgdG9wIHNwZWVkIGJ5IHJlZ2ltZW50cyBhcyBmYXIgYXMgdGhlIEVsZXVzaW5pdW0uCjwvdHJhbnNsYXRpb24+"
translation['3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkkgd2lsbCBhZGQgYSB3b3JkIG9uIHRoZSBwb3NpdGlvbiBpbiB3aGljaCB0aGUgbGFuY2VzIHNob3VsZCBiZSBoZWxkIHRvIHByZXZlbnQgY3Jvc3NpbmcuIEV2ZXJ5IG1hbiBzaG91bGQgcG9pbnQgaGlzIGxhbmNlIGJldHdlZW4gaGlzIGhvcnNlJ3MgZWFycywgaWYgdGhlIHdlYXBvbnMgYXJlIHRvIGxvb2sgZmVhcnNvbWUsIHN0YW5kIG91dCBkaXN0aW5jdGx5LCBhbmQgYXQgdGhlIHNhbWUgdGltZSB0byBjb252ZXkgdGhlIGltcHJlc3Npb24gb2YgbnVtYmVycy4KPC90cmFuc2xhdGlvbj4="
translation['3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZ2FsbG9wIGZpbmlzaGVkIGFuZCB0aGUgZ29hbCByZWFjaGVkLCB0aGUgcmlnaHQgcGxhbiBpcyB0byByaWRlIGJhY2sgdG8gdGhlIHRlbXBsZXMgYnkgdGhlIHNhbWUgcm91dGUsIGJ1dCBhdCBhIHNsb3cgcGFjZTogdGh1cyBldmVyeSBlZmZlY3QgdGhhdCBjYW4gYmUgb2J0YWluZWQgZnJvbSBhIGhvcnNlIHdpdGggYSBtYW4gb24gaGlzIGJhY2s8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIEdyZWVrIHRleHQgaXMgdW5yZWxpYWJsZSBoZXJlLjwvbm90ZT4gd2lsbCBiZSBpbmNsdWRlZCBpbiB0aGUgZGlzcGxheSwgdG8gdGhlIHNhdGlzZmFjdGlvbiBvZiBnb2RzIGFuZCBtZW4gYWxpa2UuCjwvdHJhbnNsYXRpb24+"
translation['3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIGtub3cgdGhhdCBvdXIgY2F2YWxyeW1lbiBhcmUgbm90IGFjY3VzdG9tZWQgdG8gdGhlc2UgbW92ZW1lbnRzOiBidXQgSSBhbSBzdXJlIHRoYXQgdGhleSBhcmUgZGVzaXJhYmxlIGFuZCBiZWF1dGlmdWwsIGFuZCB3aWxsIGRlbGlnaHQgdGhlIHNwZWN0YXRvcnMuIEkgYW0gYXdhcmUsIHRvbywgdGhhdCB0aGUgY2F2YWxyeSBoYXZlIGV4aGliaXRlZCBvdGhlciBub3ZlbCBmZWF0cyBvZiBza2lsbCBpbiBkYXlzIHdoZW4gdGhlIGNhdmFscnkgY29tbWFuZGVycyBoYWQgc3VmZmljaWVudCBpbmZsdWVuY2UgdG8gZ2V0IHRoZWlyIHdpc2hlcyBjYXJyaWVkIG91dC4KPC90cmFuc2xhdGlvbj4="
translation['3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5EdXJpbmcgdGhlIHBhcmFkZSBhdCB0aGUgTHljZXVtLCBiZWZvcmUgdGhlIGphdmVsaW4tdGhyb3dpbmcsIHRoZSByaWdodCB3YXkgaXMgdG8gcmlkZSBpbiB0d28gZGl2aXNpb25zIGluIGxpbmUgb2YgYmF0dGxlLCBlYWNoIGRpdmlzaW9uIGNvbnNpc3Rpbmcgb2YgZml2ZSByZWdpbWVudHMgd2l0aCBpdHMgY29tbWFuZGVyIGF0IHRoZSBoZWFkIGFuZCB0aGUgY29sb25lbHM7IGFuZCB0aGUgbGluZSBzaG91bGQgYmUgc28gZXh0ZW5kZWQgdGhhdCB0aGUgd2hvbGUgYnJlYWR0aCBvZiB0aGUgY291cnNlIHdpbGwgYmUgY292ZXJlZC4KPC90cmFuc2xhdGlvbj4="
translation['3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgdGhleSByZWFjaCB0aGUgaGlnaGVzdCBwb2ludCBsb29raW5nIGRvd24gb24gdGhlIFRoZWF0cmUgb3Bwb3NpdGUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBUaGVhdHJlIG9mIERpb255c3VzLCBmYWNpbmcgdGhlbSBhcyB0aGV5IGNvbWUgd2VzdHdhcmRzIGZyb20gdGhlIEx5Y2V1bS48L25vdGU+IEkgdGhpbmsgaXQgd291bGQgY2xlYXJseSBiZSB1c2VmdWwgaWYgeW91IGRpc3BsYXllZCB5b3VyIG1lbidzIGFiaWxpdHkgdG8gZ2FsbG9wIGRvd25oaWxsIGluIGZhaXJseSBsYXJnZSBjb21wYW5pZXMuCjwvdHJhbnNsYXRpb24+"
translation['3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRvIGJlIHN1cmUsIEkga25vdyB3ZWxsIGVub3VnaCB0aGF0LCBpZiB0aGV5IGZlZWwgY29uZmlkZW50IG9mIHRoZWlyIGFiaWxpdHkgdG8gZ2FsbG9wLCB0aGV5IHdpbGwgd2VsY29tZSB0aGUgb3Bwb3J0dW5pdHkgb2Ygc2hvd2luZyBvZmYgdGhlaXIgc2tpbGw6IGJ1dCB5b3UgbXVzdCBzZWUgdGhhdCB0aGV5IGFyZSBub3Qgc2hvcnQgb2YgcHJhY3RpY2UsIG9yIHRoZSBlbmVteSB3aWxsIGNvbXBlbCB0aGVtIHRvIGRvIGl0IGFnYWluc3QgdGhlaXIgd2lsbC4KPC90cmFuc2xhdGlvbj4="
translation['3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZm9ybWF0aW9uIHRoYXQgd291bGQgYWRkIG1vc3QgdG8gdGhlIGJlYXV0eSBvZiB0aGUgZXhlcmNpc2VzIGF0IHRoZSBpbnNwZWN0aW9uczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgYWxsdXNpb24gaXMgbm90IHRvIHRoZSBpbnNwZWN0aW9uIG9mIHJlY3J1aXRzIGJ5IHRoZSBDb3VuY2lsLCBidXQgdG8gdGhlIG1hbm9ldXZyZXMgZW51bWVyYXRlZCBpbiAzLmwuIFRoZSBmb3JtYXRpb24gaXMgdGhhdCBwcm9wb3NlZCBpbiAyLjwvbm90ZT4gaGFzIGFscmVhZHkgYmVlbiBleHBsYWluZWQuIFByb3ZpZGVkIGhpcyBob3JzZSBpcyBzdHJvbmcgZW5vdWdoLCB0aGUgbGVhZGVyIHNob3VsZCByaWRlIHJvdW5kIHdpdGggdGhlIGZpbGUgdGhhdCBpcyBvbiB0aGUgb3V0c2lkZSBldmVyeSB0aW1lLiBIZSB3aWxsIGJlIGdhbGxvcGluZyBhbGwgdGhlIHRpbWUgaGltc2VsZiwgYW5kIHRoZSBmaWxlIHdob3NlIHR1cm4gaXQgaXMgdG8gYmUgb24gdGhlIG91dHNpZGUgd2l0aCBoaW0gd2lsbCBhbHNvIGJlIGdhbGxvcGluZy4gVGh1cyB0aGUgZXllcyBvZiB0aGUgQ291bmNpbCB3aWxsIGFsd2F5cyBiZSBvbiB0aGUgZ2FsbG9waW5nIGZpbGUsIGFuZCB0aGUgaG9yc2VzIHdpbGwgZ2V0IGEgYnJlYXRoaW5nIHNwYWNlLCByZXN0aW5nIGJ5IHR1cm5zLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BcyBpdCBpcyBub3Qga25vd24gcHJlY2lzZWx5IHdoYXQgZXZvbHV0aW9ucyB0b29rIHBsYWNlIGF0IHRoZSBkaXNwbGF5cywgaXQgaXMgaW1wb3NzaWJsZSB0byBtYWtlIG91dCB3aGF0IGNoYW5nZXMgWGVub3Bob24gcHJvcG9zZXMuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgSGlwcG9kcm9tZSBpcyB0aGUgc2NlbmUgb2YgdGhlIGRpc3BsYXksIHRoZSByaWdodCBwbGFuIHdvdWxkIGJlIHRoYXQgdGhlIG1lbiBzaG91bGQgZmlyc3QgYmUgZHJhd24gdXAgb24gYSBmcm9udCBicm9hZCBlbm91Z2ggdG8gZmlsbCB0aGUgSGlwcG9kcm9tZSB3aXRoIGhvcnNlcyBhbmQgZHJpdmUgb3V0IHRoZSBwZW9wbGUgc3RhbmRpbmcgdGhlcmUuCjwvdHJhbnNsYXRpb24+"
translation['3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGUgc2hhbSBmaWdodCB3aGVuIHRoZSByZWdpbWVudHMgcHVyc3VlIGFuZCBmbHkgZnJvbSBvbmUgYW5vdGhlciBhdCB0aGUgZ2FsbG9wIGluIHR3byBzcXVhZHJvbnMgb2YgZml2ZSByZWdpbWVudHMsIGVhY2ggc2lkZSBsZWQgYnkgaXRzIGNvbW1hbmRlciwgdGhlIHJlZ2ltZW50cyBzaG91bGQgcmlkZSB0aHJvdWdoIG9uZSBhbm90aGVyLiBIb3cgZm9ybWlkYWJsZSB0aGV5IHdpbGwgbG9vayB3aGVuIHRoZXkgY2hhcmdlIGZyb250IHRvIGZyb250OyBob3cgaW1wb3Npbmcgd2hlbiwgYWZ0ZXIgc3dlZXBpbmcgYWNyb3NzIHRoZSBIaXBwb2Ryb21lLCB0aGV5IHN0YW5kIGZhY2luZyBvbmUgYW5vdGhlciBhZ2FpbjsgaG93IHNwbGVuZGlkLCB3aGVuIHRoZSB0cnVtcGV0IHNvdW5kcyBhbmQgdGhleSBjaGFyZ2Ugb25jZSBtb3JlIGF0IGEgcXVpY2tlciBwYWNlIQo8L3RyYW5zbGF0aW9uPg=="
translation['3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGUgaGFsdCwgdGhlIHRydW1wZXQgc2hvdWxkIHNvdW5kIG9uY2UgbW9yZSwgYW5kIHRoZXkgc2hvdWxkIGNoYXJnZSB5ZXQgYSB0aGlyZCB0aW1lIGF0IHRvcCBzcGVlZDsgYW5kIHdoZW4gdGhleSBoYXZlIGNyb3NzZWQsIHRoZXkgc2hvdWxkIGFsbCByYW5nZSB0aGVtc2VsdmVzIGluIGJhdHRsZSBsaW5lIHByZXBhcmF0b3J5IHRvIGJlaW5nIGRpc21pc3NlZCwgYW5kIHJpZGUgdXAgdG8gdGhlIENvdW5jaWwsIGp1c3QgYXMgeW91IGFyZSBhY2N1c3RvbWVkIHRvIGRvLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rIHRoYXQgdGhlc2UgbWFub2V1dnJlcyB3b3VsZCBsb29rIG1vcmUgbGlrZSB3YXIgYW5kIHdvdWxkIGhhdmUgdGhlIGNoYXJtIG9mIG5vdmVsdHkuIEl0IGlzIHVud29ydGh5IG9mIGhpcyBoaWdoIHJhbmsgdGhhdCBhIGNhdmFscnkgY29tbWFuZGVyIHNob3VsZCBnYWxsb3AgYXQgYSBzbG93ZXIgcGFjZSB0aGFuIHRoZSBjb2xvbmVscywgYW5kIHJpZGUgaW4gdGhlIHNhbWUgd2F5IGFzIHRoZXkgZG8uCjwvdHJhbnNsYXRpb24+"
translation['3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgcmlkZSBpcyB0byB0YWtlIHBsYWNlIGluIHRoZSBBY2FkZW15IG9uIHRoZSBoYXJkIGdyb3VuZCwgSSBoYXZlIHRoZSBmb2xsb3dpbmcgcmVjb21tZW5kYXRpb25zIHRvIG1ha2UuIFRvIGF2b2lkIGJlaW5nIHRocm93biB0aGUgcmlkZXJzIHNob3VsZCB0aHJvdyB0aGUgYm9keSBiYWNrIGluIGNoYXJnaW5nLCBhbmQgY29sbGVjdCB0aGVpciBob3JzZXMgd2hlbiB3aGVlbGluZywgdG8ga2VlcCB0aGVtIGZyb20gZmFsbGluZy4gSW4gdGhlIHN0cmFpZ2h0LCBob3dldmVyLCB0aGV5IHNob3VsZCBnYWxsb3AuIFRoZSBDb3VuY2lsIHdpbGwgdGh1cyB3YXRjaCBhIHNhZmUgYXMgd2VsbCBhcyBhIGJlYXV0aWZ1bCBwZXJmb3JtYW5jZS4KPC90cmFuc2xhdGlvbj4="
translation['4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5EdXJpbmcgYSBtYXJjaCB0aGUgY2F2YWxyeSBjb21tYW5kZXIgbXVzdCBhbHdheXMgdGhpbmsgYWhlYWQsIGluIG9yZGVyIHRoYXQgaGUgbWF5IHJlc3QgdGhlIGhvcnNlcycgYmFja3MgYW5kIHJlbGlldmUgdGhlIG1lbiBieSB3YWxraW5nLCBnaXZpbmcgbW9kZXJhdGUgc3BlbGxzIG9mIGFsdGVybmF0ZSByaWRpbmcgYW5kIG1hcmNoaW5nLiBZb3UgY2FuJ3QgbWlzanVkZ2Ugd2hhdCBpcyBhIG1vZGVyYXRlIHNwZWxsLCBzaW5jZSBldmVyeSBtYW4gaXMgaGltc2VsZiB0aGUgbWVhc3VyZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5QZXJoYXBzIGEgcmVmZXJlbmNlIHRvIHRoZSB0aGVvcnkgb2YgUHJvdGFnb3Jhcywg4oCcTWFuIGlzIHRoZSBtZWFzdXJlIG9mIGFsbCB0aGluZ3Mu4oCdPC9ub3RlPiB0aGF0IHdpbGwgc2hvdyB5b3Ugd2hlbiB0aGV5IGFyZSBnZXR0aW5nIHRpcmVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgd2hlbiBpdCBpcyB1bmNlcnRhaW4gd2hldGhlciB5b3Ugd2lsbCBlbmNvdW50ZXIgYW4gZW5lbXkgb24geW91ciB3YXkgdG8gYW55IHBsYWNlLCB5b3UgbXVzdCBnaXZlIHRoZSByZWdpbWVudHMgYSByZXN0IGluIHR1cm4uIEZvciBpdCB3b3VsZCBiZSBhIGJhZCBqb2IgaWYgYWxsIHRoZSBtZW4gd2VyZSBkaXNtb3VudGVkIHdoZW4gdGhlIGVuZW15IGlzIGNsb3NlIGF0IGhhbmQuCjwvdHJhbnNsYXRpb24+"
translation['4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JZiB5b3UgYXJlIHJpZGluZyBhbG9uZyBuYXJyb3cgcm9hZHMsIHRoZSBvcmRlciBtdXN0IGJlIGdpdmVuIHRvIGZvcm0gY29sdW1uOyBidXQgd2hlbiB5b3UgZmluZCB5b3Vyc2VsZiBvbiBicm9hZCByb2FkcywgdGhlIG9yZGVyIG11c3QgYmUgZ2l2ZW4gdG8gZXZlcnkgcmVnaW1lbnQgdG8gZXh0ZW5kIGZyb250LiBXaGVuIHlvdSByZWFjaCBvcGVuIGdyb3VuZCwgYWxsIHRoZSByZWdpbWVudHMgbXVzdCBiZSBpbiBsaW5lIG9mIGJhdHRsZS4gSW5jaWRlbnRhbGx5IHRoZXNlIGNoYW5nZXMgb2Ygb3JkZXIgYXJlIGdvb2QgZm9yIHByYWN0aWNlLCBhbmQgaGVscCB0aGUgbWVuIHRvIGdldCBvdmVyIHRoZSBncm91bmQgbW9yZSBwbGVhc2FudGx5IGJ5IHZhcnlpbmcgdGhlIG1hcmNoIHdpdGggY2F2YWxyeSBtYW5vZXV2cmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHJpZGluZyBvbiBkaWZmaWN1bHQgZ3JvdW5kIGF3YXkgZnJvbSByb2Fkcywgd2hldGhlciBpbiBob3N0aWxlIG9yIGZyaWVuZGx5IGNvdW50cnksIGl0IGlzIHZlcnkgdXNlZnVsIHRvIGhhdmUgc29tZSBvZiB0aGUgYWlkZXMtZGUtY2FtcCBpbiBhZHZhbmNlIG9mIGVhY2ggcmVnaW1lbnQsIHRoYXQgdGhleSBtYXkgZmluZCBhIHdheSByb3VuZCBpbnRvIHRoZSBvcGVuIGluIGNhc2UgdGhleSBjb21lIGFjcm9zcyBwYXRobGVzcyB3b29kbGFuZCwgYW5kIHNob3cgdGhlIG1lbiB3aGF0IGxpbmUgdGhleSBzaG91bGQgZm9sbG93LCBzbyB0aGF0IHdob2xlIGNvbXBhbmllcyBtYXkgbm90IGdvIGFzdHJheS4KPC90cmFuc2xhdGlvbj4="
translation['4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JZiB5b3VyIHJvdXRlIGxpZXMgaW4gZGFuZ2Vyb3VzIGNvdW50cnksIGEgcHJ1ZGVudCBjb21tYW5kZXIgd2lsbCBoYXZlIGEgc2Vjb25kIGFkdmFuY2VkIGd1YXJkIGFoZWFkIG9mIGhpcyBzY291dHMgZm9yIHJlY29ubmFpc3NhbmNlIHB1cnBvc2VzLiBGb3IgaXQgaXMgdXNlZnVsIGJvdGggZm9yIGF0dGFjayBhbmQgZGVmZW5jZSB0byBkaXNjb3ZlciBhbiBlbmVteSBhcyBmYXIgb2ZmIGFzIHBvc3NpYmxlLiBJdCBpcyB1c2VmdWwgYWxzbyB0byBoYWx0IGF0IHRoZSBwYXNzYWdlIG9mIGEgcml2ZXIsIHRoYXQgdGhlIHJlYXIgZ3VhcmQgbWF5IG5vdCB3ZWFyIG91dCB0aGVpciBob3JzZXMgaW4gY2hhc2luZyB0aGVpciBsZWFkZXIuIFRoZXNlIHJ1bGVzLCBubyBkb3VidCwgYXJlIGZhbWlsaWFyIHRvIG5lYXJseSBldmVyeWJvZHk7IGJ1dCBmZXcgd2lsbCB0YWtlIHRoZSB0cm91YmxlIHRvIG9ic2VydmUgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BIGNhdmFscnkgY29tbWFuZGVyIHNob3VsZCBiZSBhdCBwYWlucyBldmVuIGluIHRpbWUgb2YgcGVhY2UgdG8gYWNxdWFpbnQgaGltc2VsZiB3aXRoIGhvc3RpbGUgYW5kIGZyaWVuZGx5IGNvdW50cnkgYWxpa2UuIEluIGNhc2UgaGUgaXMgd2l0aG91dCBwZXJzb25hbCBleHBlcmllbmNlLCBoZSBzaG91bGQgYXQgbGVhc3QgY29uc3VsdCB0aGUgbWVuIGluIHRoZSBmb3JjZSB3aG8gaGF2ZSB0aGUgYmVzdCBrbm93bGVkZ2Ugb2YgdmFyaW91cyBsb2NhbGl0aWVzLiBGb3IgdGhlIGxlYWRlciB3aG8ga25vd3MgdGhlIHJvYWRzIGhhcyBhIGdyZWF0IGFkdmFudGFnZSBvdmVyIG9uZSB3aG8gZG9lcyBub3QuIEluIG1ha2luZyBwbGFucyBhZ2FpbnN0IHRoZSBlbmVteSwgdG9vLCBhIGtub3dsZWRnZSBvZiB0aGUgZGlzdHJpY3QgbWFrZXMgYSBncmVhdCBkaWZmZXJlbmNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Zb3UgbXVzdCBhbHNvIGhhdmUgdGFrZW4gc3RlcHMgdG8gZW5saXN0IHRoZSBzZXJ2aWNlcyBvZiBzcGllcyBiZWZvcmUgdGhlIG91dGJyZWFrIG9mIHdhci4gU29tZSBvZiB0aGVzZSBzaG91bGQgYmUgY2l0aXplbnMgb2YgbmV1dHJhbCBzdGF0ZXMsIGFuZCBzb21lIG1lcmNoYW50cywgc2luY2UgYWxsIHN0YXRlcyBpbnZhcmlhYmx5IHdlbGNvbWUgdGhlIGltcG9ydGVyIG9mIG1lcmNoYW5kaXNlLiBTaGFtIGRlc2VydGVycywgdG9vLCBoYXZlIHRoZWlyIHVzZSBvbiBvY2Nhc2lvbnMuCjwvdHJhbnNsYXRpb24+"
translation['4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlN0aWxsLCB5b3UgbXVzdCBuZXZlciBuZWdsZWN0IHRvIHBvc3QgZ3VhcmRzIHRocm91Z2ggcmVsaWFuY2Ugb24gc3BpZXM7IG9uIHRoZSBjb250cmFyeSwgeW91ciBwcmVjYXV0aW9ucyBtdXN0IGF0IGFsbCB0aW1lcyBiZSBhcyBjb21wbGV0ZSBhcyB3aGVuIHlvdSBoYXZlIGluZm9ybWF0aW9uIHRoYXQgdGhlIGVuZW15IGlzIGFwcHJvYWNoaW5nLiBGb3IgZXZlbiBpZiB0aGUgc3BpZXMgYXJlIGVudGlyZWx5IHJlbGlhYmxlLCBpdCBpcyBkaWZmaWN1bHQgdG8gcmVwb3J0IGF0IHRoZSBjcml0aWNhbCBtb21lbnQsIHNpbmNlIG1hbnkgdGhpbmdzIGhhcHBlbiBpbiB3YXIgdG8gaGluZGVyIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgYWR2YW5jZSBvZiBjYXZhbHJ5IGlzIGxlc3MgbGlrZWx5IHRvIGJlIGRldGVjdGVkIGJ5IHRoZSBlbmVteSBpZiBvcmRlcnMgYXJlIG5vdCBnaXZlbiBieSBhIGhlcmFsZCBvciBpbiB3cml0aW5nIGJlZm9yZWhhbmQsIGJ1dCBwYXNzZWQgYWxvbmcuIEFjY29yZGluZ2x5LCBmb3IgdGhpcyBwdXJwb3NlLCB0b28sIHRoYXQgdGhlIG9yZGVyIHRvIGFkdmFuY2UgbWF5IGJlIGdpdmVuIGJ5IHdvcmQgb2YgbW91dGgsIGl0IGlzIHdlbGwgdG8gcG9zdCBmaWxlbGVhZGVycywgYW5kIGhhbGYgZmlsZS1sZWFkZXJzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZXNlIGZvcm0gdGhlIHNpeHRoIHJhbmsuPC9ub3RlPiBiZWhpbmQgdGhlbSwgc28gdGhhdCBlYWNoIG1heSBwYXNzIHRoZSB3b3JkIHRvIGFzIGZldyBtZW4gYXMgcG9zc2libGUuIFRodXMsIHRvbywgdGhlIGhhbGYgZmlsZS1sZWFkZXJzIHdpbGwgd2hlZWwgYW5kIGV4dGVuZCB0aGUgbGluZSB3aXRob3V0IGNvbmZ1c2lvbiwgd2hlbmV2ZXIgdGhlcmUgaXMgb2NjYXNpb24gdG8gZG8gc28uCjwvdHJhbnNsYXRpb24+"
translation['4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBpdCBpcyBuZWNlc3NhcnkgdG8ga2VlcCBhIGxvb2sgb3V0LCBJIGFtIGFsbCBpbiBmYXZvdXIgb2YgdGhlIHBsYW4gb2YgaGF2aW5nIGhpZGRlbiBvdXRwb3N0cyBhbmQgZ3VhcmRzLiBGb3IgdGhlc2Ugc2VydmUgYXQgb25jZSBhcyBndWFyZHMgdG8gcHJvdGVjdCB5b3VyIGZyaWVuZHMgYW5kIHNuYXJlcyB0byB0cmFwIHRoZSBlbmVteS4KPC90cmFuc2xhdGlvbj4="
translation['4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIG1lbiwgYmVpbmcgdW5zZWVuLCBhcmUgbW9yZSBzZWN1cmUgdGhlbXNlbHZlcyBhbmQgYXQgdGhlIHNhbWUgdGltZSBtb3JlIGZvcm1pZGFibGUgdG8gdGhlIGVuZW15LiBGb3IgdGhlIGVuZW15LCBjb25zY2lvdXMgdGhhdCB0aGVyZSBhcmUgb3V0cG9zdHMgc29tZXdoZXJlLCBidXQgaWdub3JhbnQgb2YgdGhlaXIgd2hlcmVhYm91dHMgYW5kIHRoZWlyIHN0cmVuZ3RoLCBmZWVscyBuZXJ2b3VzIGFuZCBpcyBmb3JjZWQgdG8gc3VzcGVjdCBldmVyeSBwb3NzaWJsZSBwb3NpdGlvbjsgd2hlcmVhcyB2aXNpYmxlIG91dHBvc3RzIHNob3cgdGhlbSB3aGVyZSBkYW5nZXIgbGllcyBhbmQgd2hlcmUgYWxsIGlzIHNhZmUuCjwvdHJhbnNsYXRpb24+"
translation['4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5CZXNpZGVzLCBpZiB5b3UgY29uY2VhbCB5b3VyIG91dHBvc3RzLCB5b3Ugd2lsbCBoYXZlIHRoZSBjaGFuY2Ugb2YgbHVyaW5nIHRoZSBlbmVteSBpbnRvIGFuIGFtYnVzaCBieSBwbGFjaW5nIGEgZmV3IGd1YXJkcyBpbiB0aGUgb3BlbiB0byBzY3JlZW4gdGhlIGhpZGRlbiBtZW4uIE9jY2FzaW9uYWxseSwgdG9vLCBhIGN1bm5pbmcgdHJhcCBtYXkgYmUgbGFpZCBieSBwb3N0aW5nIGEgc2Vjb25kIGJvZHkgb2YgZXhwb3NlZCBndWFyZHMgYmVoaW5kIHRoZSBtZW4gaW4gaGlkaW5nOyBmb3IgdGhpcyBwbGFuIG1heSBwcm92ZSBhcyBkZWNlcHRpdmUgdG8gdGhlIGVuZW15IGFzIHRoZSBvbmUganVzdCByZWZlcnJlZCB0by4KPC90cmFuc2xhdGlvbj4="
translation['4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QSBwcnVkZW50IGNvbW1hbmRlciB3aWxsIG5ldmVyIHRha2Ugcmlza3MgdW5uZWNlc3NhcmlseSwgZXhjZXB0IHdoZW4gaXQgaXMgY2xlYXIgYmVmb3JlaGFuZCB0aGF0IGhlIHdpbGwgaGF2ZSB0aGUgYWR2YW50YWdlIG9mIHRoZSBlbmVteS4gVG8gcGxheSBpbnRvIHRoZSBlbmVteSdzIGhhbmQgbWF5IGZhaXJseSBiZSBjb25zaWRlcmVkIHRyZWFjaGVyeSB0byBvbmUncyBhbGxpZXMgcmF0aGVyIHRoYW4gY291cmFnZS4KPC90cmFuc2xhdGlvbj4="
translation['4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Bbm90aGVyIHNvdW5kIHByaW5jaXBsZSBpcyB0byBnbyBmb3IgYW55IHBvc2l0aW9uIHdoZXJlIHRoZSBlbmVteSBpcyB3ZWFrLCBldmVuIGlmIGl0IGlzIGEgbG9uZyB3YXkgb2ZmLCBzaW5jZSBoYXJkIHdvcmsgaXMgbGVzcyBkYW5nZXJvdXMgdGhhbiBhIHN0cnVnZ2xlIGFnYWluc3Qgc3VwZXJpb3IgZm9yY2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaWYgdGhlIGVuZW15IHBsYWNlcyBoaW1zZWxmIHNvbWV3aGVyZSBiZXR3ZWVuIHlvdXJzZWxmIGFuZCBmb3J0cmVzc2VzIGZyaWVuZGx5IHRvIHlvdSwgdGhlbiBpdCBpcyBwcm9wZXIgdG8gYXR0YWNrIGhpbSwgZXZlbiBpZiBoZSBpcyBncmVhdGx5IHN1cGVyaW9yLCBvbiB0aGF0IHNpZGUgd2hlcmUgeW91ciBwcmVzZW5jZSBpcyB1bnN1c3BlY3RlZCwgb3Igb24gYm90aCBmbGFua3MgYXQgb25jZSwgZm9yIHdoZW4gb25lIHBhcnQgb2YgeW91ciBmb3JjZSBpcyByZXRpcmluZywgYSBjaGFyZ2Ugb24gdGhlIG9wcG9zaXRlIGZsYW5rIHdpbGwgZmx1cnJ5IHRoZSBlbmVteSBhbmQgcmVzY3VlIHlvdXIgZnJpZW5kcy4KPC90cmFuc2xhdGlvbj4="
translation['4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgaXMgYW4gb2xkIG1heGltIHRoYXQsIGluIGF0dGVtcHRpbmcgdG8gZGlzY292ZXIgd2hhdCB0aGUgZW5lbXkgaXMgYWJvdXQsIGl0IGlzIHdlbGwgdG8gZW1wbG95IHNwaWVzLiBCdXQgdGhlIGJlc3QgcGxhbiBvZiBhbGwsIGluIG15IG9waW5pb24sIGlzIGZvciB0aGUgY29tbWFuZGVyIGhpbXNlbGYgdG8gd2F0Y2ggdGhlIGVuZW15IGZyb20gc29tZSBzYWZlIGNvaWduIG9mIHZhbnRhZ2UsIGlmIHBvc3NpYmxlLCBhbmQgdGFrZSBub3RpY2Ugb2YgaGlzIG1pc3Rha2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBhbnl0aGluZyBjYW4gYmUgZmlsY2hlZCBieSBjdW5uaW5nLCB5b3Ugc2hvdWxkIHNlbmQgbGlrZWx5IG1lbiB0byBzdGVhbCBpdDsgYW5kIHdoZW4gYW55dGhpbmcgbWF5IGJlIHNlaXplZCB5b3Ugc2hvdWxkIGRlc3BhdGNoIHRyb29wcyB0byBzZWl6ZSBpdC4gSWYgdGhlIGVuZW15IGlzIG1hcmNoaW5nIG9uIHNvbWUgb2JqZWN0aXZlIGFuZCBhIHBhcnQgb2YgaGlzIGZvcmNlIHdlYWtlciB0aGFuIHlvdXIgb3duIHNlcGFyYXRlcyBmcm9tIHRoZSBtYWluIGJvZHkgb3Igc3RyYWdnbGVzIGNhcmVsZXNzbHksIHRoZSBjaGFuY2UgbXVzdCBub3QgYmUgbWlzc2VkOyB0aGUgaHVudGVyLCBob3dldmVyLCBtdXN0IGFsd2F5cyBiZSBzdHJvbmdlciB0aGFuIHRoZSBodW50ZWQuCjwvdHJhbnNsYXRpb24+"
translation['4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+WW91IGNhbiBzZWUgdGhlIHBvaW50IG9mIHRoaXMgaWYgeW91IGNvbnNpZGVyLiBFdmVuIHdpbGQgY3JlYXR1cmVzIGxlc3MgaW50ZWxsaWdlbnQgdGhhbiBtYW4sIHN1Y2ggYXMgaGF3a3MsIHdpbGwgZ3JhYiB1bmd1YXJkZWQgcGx1bmRlciBhbmQgZ2V0IGF3YXkgaW50byBhIHBsYWNlIG9mIHNhZmV0eSBiZWZvcmUgdGhleSBjYW4gYmUgY2F1Z2h0OiB3b2x2ZXMsIGFnYWluLCBwcmV5IG9uIGFueXRoaW5nIGxlZnQgdW5wcm90ZWN0ZWQgYW5kIHN0ZWFsIHRoaW5ncyBseWluZyBpbiBob2xlcyBhbmQgY29ybmVyczsgYW5kIGlmIGEgZG9nIGRvZXMgcHVyc3VlIGFuZCBvdmVydGFrZSBoaW0sCjwvdHJhbnNsYXRpb24+"
translation['4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz50aGUgd29sZiwgaWYgc3Ryb25nZXIgdGhhbiB0aGUgZG9nLCBhdHRhY2tzIGhpbTsgb3IgaWYgd2Vha2VyLCBzbmF0Y2hlcyBhd2F5IHRoZSBwcml6ZSBhbmQgbWFrZXMgb2ZmLiBNb3Jlb3Zlciwgd2hlbiBhIHBhY2sgb2Ygd29sdmVzIGZlZWxzIG5vIGZlYXIgb2YgYSBjb252b3ksIHRoZXkgYXJyYW5nZSB0aGVtc2VsdmVzIHNvIHRoYXQgc29tZSBzaGFsbCBkcml2ZSBvZmYgdGhlIGNvbnZveSwgYW5kIG90aGVycyBzZWl6ZSB0aGUgcGx1bmRlcjsgYW5kIHRodXMgdGhleSBnZXQgdGhlaXIgZm9vZC4KPC90cmFuc2xhdGlvbj4="
translation['4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5XZWxsLCBpZiB3aWxkIGJlYXN0cyBzaG93IHN1Y2ggc2FnYWNpdHksIHN1cmVseSBhbnkgbWFuIG1heSBiZSBleHBlY3RlZCB0byBzaG93IG1vcmUgd2lzZG9tIHRoYW4gY3JlYXR1cmVzIHRoYXQgYXJlIHRoZW1zZWx2ZXMgdGFrZW4gYnkgdGhlIHNraWxsIG9mIG1hbi4KPC90cmFuc2xhdGlvbj4="
translation['5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5FdmVyeSBob3JzZW1hbiBzaG91bGQga25vdyBhdCB3aGF0IGRpc3RhbmNlIGEgaG9yc2UgY2FuIG92ZXJ0YWtlIGEgbWFuIG9uIGZvb3QsIGFuZCBob3cgbXVjaCBzdGFydCBhIHNsb3cgaG9yc2UgbmVlZHMgdG8gZXNjYXBlIGZyb20gYSBmYXN0IG9uZS4gQSBjYXZhbHJ5IGNvbW1hbmRlciBzaG91bGQgYWxzbyBiZSBhYmxlIHRvIGp1ZGdlIG9mIHRoZSBncm91bmQgd2hlcmUgaW5mYW50cnkgaGFzIGFuIGFkdmFudGFnZSBvdmVyIGNhdmFscnkgYW5kIHdoZXJlIGNhdmFscnkgaGFzIGFuIGFkdmFudGFnZSBvdmVyIGluZmFudHJ5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkhlIG11c3QgYWxzbyBoYXZlIHN1ZmZpY2llbnQgaW5nZW51aXR5IHRvIG1ha2UgYSBzbWFsbCBjb21wYW55IG9mIGhvcnNlIGxvb2sgbGFyZ2UsIGFuZCBjb252ZXJzZWx5LCB0byBtYWtlIGEgbGFyZ2Ugb25lIGxvb2sgc21hbGw7IHRvIHNlZW0gdG8gYmUgYWJzZW50IHdoZW4gcHJlc2VudCwgYW5kIHByZXNlbnQgd2hlbiBhYnNlbnQ7IHRvIGtub3cgaG93IHRvIGRlY2VpdmUsIG5vdCBtZXJlbHkgaG93IHRvIHN0ZWFsIHRoZSBlbmVteSdzIHBvc3Nlc3Npb25zLCBidXQgYWxzbyBob3cgdG8gY29uY2VhbCBoaXMgb3duIGZvcmNlIGFuZCBmYWxsIG9uIHRoZSBlbmVteSB1bmV4cGVjdGVkbHkuCjwvdHJhbnNsYXRpb24+"
translation['5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFub3RoZXIgbmVhdCBydXNlIGlzIHRvIGNyZWF0ZSBhIHNjYXJlIGFtb25nIHRoZSBlbmVteSB3aGVuIHlvdXIgb3duIHBvc2l0aW9uIGlzIHByZWNhcmlvdXMsIHNvIHRoYXQgaGUgbWF5IG5vdCBhdHRhY2ssIGFuZCB0byBwdXQgaGltIGluIGdvb2QgaGVhcnQsIHdoZW4gaXQgaXMgc3Ryb25nLCBzbyB0aGF0IGhlIG1heSBtYWtlIGFuIGF0dGVtcHQuIFRodXMgeW91IGFyZSBsZWFzdCBsaWtlbHkgdG8gY29tZSB0byBoYXJtIHlvdXJzZWxmIGFuZCBtb3N0IGxpa2VseSB0byBjYXRjaCB0aGUgZW5lbXkgdHJpcHBpbmcuCjwvdHJhbnNsYXRpb24+"
translation['5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGF0IEkgbWF5IG5vdCBzZWVtIHRvIGRlbWFuZCBpbXBvc3NpYmlsaXRpZXMsIEkgd2lsbCBhZGQgYSBzb2x1dGlvbiBvZiB0aGUgcHJvYmxlbXMgdGhhdCBzZWVtIG1vc3QgcHV6emxpbmcuIFN1Y2Nlc3MgaW4gYW4gYXR0ZW1wdCB0byBwdXJzdWUgb3IgcmV0cmVhdCBkZXBlbmRzIG9uIGV4cGVyaWVuY2Ugb2YgaG9yc2VzIGFuZCB0aGVpciBwb3dlcnMuIEJ1dCBob3cgYXJlIHlvdSB0byBnZXQgdGhpcyBleHBlcmllbmNlPyBCeSB3YXRjaGluZyB0aGUgZnJpZW5kbHkgZW5jb3VudGVycyBvZiB0aGUgc2hhbSBmaWdodHMgYW5kIG5vdGljaW5nIHdoYXQgY29uZGl0aW9uIHRoZSBob3JzZXMgYXJlIGluIGFmdGVyIHRoZSBwdXJzdWl0cyBhbmQgZmxpZ2h0cy4KPC90cmFuc2xhdGlvbj4="
translation['5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHlvdXIgb2JqZWN0IGlzIHRvIG1ha2UgdGhlIG51bWJlciBvZiB5b3VyIGNhdmFscnkgbG9vayBsYXJnZSwgZmlyc3QgdGFrZSBpdCBmb3IgYW4gYXhpb20sIGlmIHBvc3NpYmxlLCBub3QgdG8gYXR0ZW1wdCB0aGUgcnVzZSB3aGVuIHlvdSBhcmUgbmVhciB0aGUgZW5lbXk6IGZvciBkaXN0YW5jZSBnaXZlcyBzYWZldHkgYW5kIGluY3JlYXNlcyB0aGUgaWxsdXNpb24uIFNlY29uZGx5IHlvdSBtdXN0IGtub3cgdGhhdCBob3JzZXMgbG9vayBtYW55IHdoZW4gY3Jvd2RlZCwgb3dpbmcgdG8gdGhlIGFuaW1hbCdzIHNpemUsIGJ1dCBhcmUgZWFzaWx5IGNvdW50ZWQgd2hlbiBzY2F0dGVyZWQuCjwvdHJhbnNsYXRpb24+"
translation['5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFub3RoZXIgd2F5IG9mIGV4YWdnZXJhdGluZyB0aGUgYXBwYXJlbnQgc3RyZW5ndGggb2YgeW91ciBmb3JjZSBpcyB0byBhcm0gdGhlIGdyb29tcyB3aXRoIGxhbmNlcyBvciBldmVuIGltaXRhdGlvbiBsYW5jZXMsIGFuZCBwdXQgdGhlbSBiZXR3ZWVuIHRoZSBjYXZhbHJ5bWVuLCB3aGV0aGVyIHlvdSBkaXNwbGF5IHRoZSBjYXZhbHJ5IGF0IHRoZSBoYWx0IG9yIHdoZWVsIGl0IGludG8gbGluZS4gVGh1cyB0aGUgYnVsayBvZiB0aGUgY29tcGFueSBpcyBib3VuZCB0byBsb29rIGRlbnNlciBhbmQgbW9yZSBtYXNzaXZlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbiB0aGUgb3RoZXIgaGFuZCwgaWYgeW91ciBvYmplY3QgaXMgdG8gbWFrZSBhIGxhcmdlIG51bWJlciBsb29rIHNtYWxsLCB0aGVuLCBhc3N1bWluZyB0aGF0IHlvdXIgZ3JvdW5kIGFmZm9yZHMgY292ZXIsIHlvdSBjYW4gb2J2aW91c2x5IGNvbmNlYWwgeW91ciBjYXZhbHJ5IGJ5IGhhdmluZyBwYXJ0IGluIHRoZSBvcGVuIGFuZCBwYXJ0IGhpZGRlbi4gSWYsIGhvd2V2ZXIsIHRoZSB3aG9sZSBvZiB0aGUgZ3JvdW5kIGlzIGV4cG9zZWQsIHlvdSBtdXN0IGZvcm0gdGhlIGZpbGVzIGludG8gcm93cyBhbmQgd2hlZWwsIGxlYXZpbmcgYSBnYXAgYmV0d2VlbiBlYWNoIHR3byByb3dzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBlbmVteSB3aWxsIG5vdCBrbm93IGEpIHRoZSBudW1iZXIgb2YgZmlsZXMgd2hlbiBwb3N0ZWQgb25lIGJlaGluZCBhbm90aGVyLCBub3IgYikgdGhlIGRlcHRoIG9mIHRoZSBsaW5lIHdoZW4gdGhlIGZpbGVzIGhhdmUgd2hlZWxlZC48L25vdGU+OyBhbmQgdGhlIG1lbiBpbiBlYWNoIGZpbGUgd2hvIGFyZSBuZXh0IHRoZSBlbmVteSBtdXN0IGhvbGQgdGhlaXIgbGFuY2VzIHVwcmlnaHQsIHdoaWxlIHRoZSByZXN0IGtlZXAgdGhlaXJzIGxvdyBkb3duIG91dCBvZiBzaWdodC4KPC90cmFuc2xhdGlvbj4="
translation['5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgbWVhbnMgdG8gZW1wbG95IGZvciBzY2FyaW5nIHRoZSBlbmVteSBhcmUgZmFsc2UgYW1idXNjYWRlcywgZmFsc2UgcmVsaWVmcyBhbmQgZmFsc2UgaW5mb3JtYXRpb24uIEFuIGVuZW15J3MgY29uZmlkZW5jZSBpcyBncmVhdGVzdCB3aGVuIGhlIGlzIHRvbGQgdGhhdCB0aGUgb3RoZXIgc2lkZSBpcyBpbiBkaWZmaWN1bHRpZXMgYW5kIGlzIHByZW9jY3VwaWVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgZ2l2ZW4gdGhlc2UgaW5zdHJ1Y3Rpb25zLCBhIG1hbiBtdXN0IGhpbXNlbGYgaW52ZW50IGEgcnVzZSB0byBtZWV0IGV2ZXJ5IGVtZXJnZW5jeSBhcyBpdCBvY2N1cnMuIEZvciB0aGVyZSBpcyByZWFsbHkgbm90aGluZyBtb3JlIHByb2ZpdGFibGUgaW4gd2FyIHRoYW4gZGVjZXB0aW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5FdmVuIGNoaWxkcmVuIGFyZSBzdWNjZXNzZnVsIGRlY2VpdmVycyB3aGVuIHRoZXkgcGxheSDigJxHdWVzcyB0aGUgbnVtYmVy4oCdOyB0aGV5IHdpbGwgaG9sZCB1cCBhIGNvdW50ZXIgb3IgdHdvIGFuZCBtYWtlIGJlbGlldmUgdGhhdCB0aGV5IGhhdmUgZ290IGEgZmlzdC1mdWxsLCBhbmQgc2VlbSB0byBob2xkIHVwIGZldyB3aGVuIHRoZXkgYXJlIGhvbGRpbmcgbWFueTsgc28gc3VyZWx5IG1lbiBjYW4gcGxheSBzaW1pbGFyIHRyaWNrcyB3aGVuIHRoZXkgYXJlIGludGVudCBvbiBkZWNlaXZpbmcgaW4gZWFybmVzdC4KPC90cmFuc2xhdGlvbj4="
translation['5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgb24gdGhpbmtpbmcgb3ZlciB0aGUgc3VjY2Vzc2VzIGdhaW5lZCBpbiB3YXIgeW91IHdpbGwgZmluZCB0aGF0IG1vc3Qgb2YgdGhlbSwgYW5kIHRoZXNlIHRoZSBncmVhdGVzdCwgaGF2ZSBiZWVuIHdvbiB3aXRoIHRoZSBhaWQgb2YgZGVjZXB0aW9uLiBGb3IgdGhlc2UgcmVhc29ucyBlaXRoZXIgeW91IHNob3VsZCBub3QgZXNzYXkgdG8gY29tbWFuZCwgb3IgeW91IHNob3VsZCBwcmF5IHRvIGhlYXZlbiB0aGF0IHlvdXIgZXF1aXBtZW50IG1heSBpbmNsdWRlIHRoaXMgcXVhbGlmaWNhdGlvbiwgYW5kIHlvdSBzaG91bGQgY29udHJpdmUgb24geW91ciBvd24gcGFydCB0byBwb3NzZXNzIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Rm9yIHRob3NlIG5lYXIgdGhlIHNlYSB0d28gZWZmZWN0aXZlIHJ1c2VzIGFyZSwgdG8gc3RyaWtlIG9uIGxhbmQgd2hpbGUgZml0dGluZyBvdXQgc2hpcHMsIGFuZCB0byBhdHRhY2sgYnkgc2VhIHdoaWxlIG9zdGVuc2libHkgcGxhbm5pbmcgYSBsYW5kIGF0dGFjay4KPC90cmFuc2xhdGlvbj4="
translation['5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5vdGhlciBkdXR5IG9mIGEgY2F2YWxyeSBjb21tYW5kZXIgaXMgdG8gZGVtb25zdHJhdGUgdG8gdGhlIGNpdHkgdGhlIHdlYWtuZXNzIG9mIGNhdmFscnkgZGVzdGl0dXRlIG9mIGluZmFudHJ5IGFzIGNvbXBhcmVkIHdpdGggY2F2YWxyeSB0aGF0IGhhcyBpbmZhbnRyeSBhdHRhY2hlZCB0byBpdC4gRnVydGhlciwgaGF2aW5nIGdvdCBoaXMgaW5mYW50cnksIGEgY2F2YWxyeSBjb21tYW5kZXIgc2hvdWxkIG1ha2UgdXNlIG9mIGl0LiBBIG1vdW50ZWQgbWFuIGJlaW5nIG11Y2ggaGlnaGVyIHRoYW4gYSBtYW4gb24gZm9vdCwgaW5mYW50cnkgbWF5IGJlIGhpZGRlbiBhd2F5IG5vdCBvbmx5IGFtb25nIHRoZSBjYXZhbHJ5IGJ1dCBpbiB0aGUgcmVhciBhcyB3ZWxsLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Rm9yIHRoZSBwcmFjdGljYWwgYXBwbGljYXRpb24gb2YgdGhlc2UgZGV2aWNlcyBhbmQgYW55IG90aGVycyB5b3UgbWF5IGNvbnRyaXZlIGZvciB0aGUgdW5kb2luZyBvZiB5b3VyIGZvZXMgYnkgZm9yY2Ugb3IgY3JhZnQsIEkgY291bnNlbCB5b3UgdG8gd29yayB3aXRoIEdvZCwgc28gdGhhdCwgdGhlIGdvZHMgYmVpbmcgcHJvcGl0aW91cywgZm9ydHVuZSB0b28gbWF5IGZhdm91ciB5b3UuCjwvdHJhbnNsYXRpb24+"
translation['5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5vdGhlciBydXNlIHRoYXQgcHJvdmVzIGhpZ2hseSBlZmZlY3RpdmUgYXQgdGltZXMgaXMgdG8gZmVpZ24gZXhjZXNzIG9mIGNhdXRpb24gYW5kIHJlbHVjdGFuY2UgdG8gdGFrZSByaXNrcy4gRm9yIHRoaXMgcHJldGVuY2Ugb2Z0ZW4gbHVyZXMgdGhlIGVuZW15IGludG8gbWFraW5nIGEgbW9yZSBmYXRhbCBibHVuZGVyIHRocm91Z2ggd2FudCBvZiBjYXV0aW9uLiBPciBvbmNlIGNvbWUgdG8gYmUgdGhvdWdodCB2ZW50dXJlc29tZSwgYW5kIHlvdSBjYW4gZ2l2ZSB0aGUgZW5lbXkgdHJvdWJsZSBieSBtZXJlbHkgc2l0dGluZyBzdGlsbCBhbmQgcHJldGVuZGluZyB0aGF0IHlvdSBhcmUgb24gdGhlIHBvaW50IG9mIGRvaW5nIHNvbWV0aGluZy4KPC90cmFuc2xhdGlvbj4="
translation['6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ib3dldmVyLCBubyBtYW4gY2FuIG1vdWxkIGFueXRoaW5nIHRvIGhpcyBtaW5kIHVubGVzcyB0aGUgc3R1ZmYgaW4gd2hpY2ggaGUgcHJvcG9zZXMgdG8gd29yayBsaWVzIHJlYWR5IHRvIG9iZXkgdGhlIGFydGlzdCdzIHdpbGwuIE5vIG1vcmUgY2FuIHlvdSBtYWtlIGFueXRoaW5nIG9mIG1lbiwgdW5sZXNzLCBieSBHb2QncyBoZWxwLCB0aGV5IGFyZSByZWFkeSB0byByZWdhcmQgdGhlaXIgY29tbWFuZGVyIHdpdGggZnJpZW5kbHkgZmVlbGluZ3MgYW5kIHRvIHRoaW5rIGhpbSB3aXNlciB0aGFuIHRoZW1zZWx2ZXMgaW4gdGhlIGNvbmR1Y3Qgb2Ygb3BlcmF0aW9ucyBhZ2FpbnN0IHRoZSBlbmVteS4KPC90cmFuc2xhdGlvbj4="
translation['6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgdGhlIGZlZWxpbmcgb2YgbG95YWx0eSB3aWxsIG5hdHVyYWxseSBiZSBmb3N0ZXJlZCB3aGVuIHRoZSBjb21tYW5kZXIgaXMga2luZCB0byBoaXMgbWVuLCBhbmQgb2J2aW91c2x5IHRha2VzIGNhcmUgdGhhdCB0aGV5IGhhdmUgdmljdHVhbHMsIGFuZCB0aGF0IHRoZXkgYXJlIHNhZmUgaW4gcmV0cmVhdCBhbmQgd2VsbCBwcm90ZWN0ZWQgd2hlbiBhdCByZXN0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSBnYXJyaXNvbnMgaGUgbXVzdCBzaG93IGFuIGludGVyZXN0IGluIGZvZGRlciwgdGVudHMsIHdhdGVyLCBmaXJld29vZCwgYW5kIGFsbCBvdGhlciBzdXBwbGllczogaGUgbXVzdCBzaG93IHRoYXQgaGUgdGhpbmtzIGFoZWFkIGFuZCBrZWVwcyBoaXMgZXllcyBvcGVuIGZvciB0aGUgc2FrZSBvZiBoaXMgbWVuLiBBbmQgd2hlbiBoZSBpcyBkb2luZyB3ZWxsIHRoZSBjaGllZidzIGJlc3QgcG9saWN5IGlzIHRvIGdpdmUgdGhlbSBhIHNoYXJlIGluIGhpcyBnb29kIHRoaW5ncy4KPC90cmFuc2xhdGlvbj4="
translation['6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UbyBwdXQgaXQgc2hvcnRseSwgYSBjb21tYW5kZXIgaXMgbGVhc3QgbGlrZWx5IHRvIGluY3VyIHRoZSBjb250ZW1wdCBvZiBoaXMgbWVuIGlmIGhlIHNob3dzIGhpbXNlbGYgbW9yZSBjYXBhYmxlIHRoYW4gdGhleSBvZiBkb2luZyB3aGF0ZXZlciBoZSByZXF1aXJlcyBvZiB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkhlIG11c3QgdGhlcmVmb3JlIHByYWN0aXNlIGV2ZXJ5IGRldGFpbCBvZiBob3JzZW1hbnNoaXDigJRtb3VudGluZyBhbmQgdGhlIHJlc3Qs4oCUdGhhdCB0aGV5IG1heSBzZWUgdGhlaXIgY29tbWFuZGVyIGFibGUgdG8gdGFrZSBhIGRpdGNoIHdpdGhvdXQgYSBzcGlsbCwgY2xlYXIgYSB3YWxsLCBsZWFwIGRvd24gZnJvbSBhIGJhbmsgYW5kIHRocm93IGEgamF2ZWxpbiBza2lsZnVsbHkuIEZvciBhbGwgdGhlc2UgZmVhdHMgYXJlIHNvIG1hbnkgc3RlcHBpbmcgc3RvbmVzIHRvIHRoZWlyIHJlc3BlY3QuCjwvdHJhbnNsYXRpb24+"
translation['6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPklmIHRoZXkga25vdyBoaW0gYWxzbyB0byBiZSBhIG1hc3RlciBvZiB0YWN0aWNzIGFuZCBhYmxlIHRvIHB1dCB0aGVtIGluIHRoZSB3YXkgb2YgZ2V0dGluZyB0aGUgYmV0dGVyIG9mIHRoZSBlbmVteTsgYW5kIGlmIGJlc2lkZXMsIHRoZXkgYXJlIGNlcnRhaW4gdGhhdCBoZSB3aWxsIG5ldmVyIGxlYWQgdGhlbSBhZ2FpbnN0IGFuIGVuZW15IHJlY2tsZXNzbHkgb3Igd2l0aG91dCB0aGUgZ29kcycgYXBwcm92YWwgb3IgaW4gZGVmaWFuY2Ugb2YgdGhlIHNhY3JpZmljZXMsIGFsbCB0aGVzZSBjb25kaXRpb25zIGluY3JlYXNlIHRoZSBtZW4ncyByZWFkaW5lc3MgdG8gb2JleSB0aGVpciBjb21tYW5kZXIuCjwvdHJhbnNsYXRpb24+"
translation['7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5FdmVyeSBjb21tYW5kZXIsIHRoZW4sIHNob3VsZCBoYXZlIGludGVsbGlnZW5jZS4gVGhlIEF0aGVuaWFuIGNhdmFscnkgY29tbWFuZGVyLCBob3dldmVyLCBzaG91bGQgZXhjZWwgZ3JlYXRseSBib3RoIGluIHRoZSBvYnNlcnZhbmNlIG9mIGhpcyBkdXR5IHRvIHRoZSBnb2RzIGFuZCBpbiB0aGUgcXVhbGl0aWVzIG9mIGEgd2Fycmlvciwgc2VlaW5nIHRoYXQgaGUgaGFzIG9uIGhpcyBib3JkZXJzIHJpdmFscyBpbiB0aGUgc2hhcGUgb2YgY2F2YWxyeSBhcyBudW1lcm91cyBhcyBoaXMgYW5kIGxhcmdlIGZvcmNlcyBvZiBpbmZhbnRyeS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIFRoZWJhbnMgYXJlIG1lYW50Ljwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBpZiBoZSBhdHRlbXB0cyB0byBpbnZhZGUgdGhlIGVuZW15J3MgY291bnRyeSB3aXRob3V0IHRoZSBvdGhlciBhcm1lZCBmb3JjZXMgb2YgdGhlIHN0YXRlLCBoZSB3aWxsIGhhdmUgdG8gdGFrZSBoaXMgY2hhbmNlIHdpdGggdGhlIGNhdmFscnkgb25seSBhZ2FpbnN0IGJvdGggYXJtcy4gT3IgaWYgdGhlIGVuZW15IGludmFkZXMgQXRoZW5pYW4gdGVycml0b3J5LCBpbiB0aGUgZmlyc3QgcGxhY2UsIGhlIHdpbGwgY2VydGFpbmx5IG5vdCBmYWlsIHRvIGJyaW5nIHdpdGggaGltIG90aGVyIGNhdmFscnkgYmVzaWRlcyBoaXMgb3duIGFuZCBpbmZhbnRyeSBpbiBhZGRpdGlvbiwgd2hvc2UgbnVtYmVycyBoZSByZWNrb25zIHRvIGJlIG1vcmUgdGhhbiBhIG1hdGNoIGZvciBhbGwgdGhlIEF0aGVuaWFucyBwdXQgdG9nZXRoZXIuCjwvdHJhbnNsYXRpb24+"
translation['7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk5vdyBwcm92aWRlZCB0aGF0IHRoZSB3aG9sZSBvZiB0aGUgY2l0eSdzIGxldmllcyB0dXJuIG91dCBhZ2FpbnN0IHN1Y2ggYSBob3N0IGluIGRlZmVuY2Ugb2YgdGhlaXIgY291bnRyeSwgdGhlIHByb3NwZWN0cyBhcmUgZ29vZC4gRm9yIG91ciBjYXZhbHJ5bWVuLCBHb2QgaGVscGluZywgd2lsbCBiZSB0aGUgYmV0dGVyLCBpZiBwcm9wZXIgY2FyZSBpcyB0YWtlbiBvZiB0aGVtLCBhbmQgb3VyIGhlYXZ5IGluZmFudHJ5IHdpbGwgbm90IGJlIGluZmVyaW9yIGluIG51bWJlcnMsIGFuZCBJIG1heSBhZGQsIHRoZXkgd2lsbCBiZSBpbiBhcyBnb29kIGNvbmRpdGlvbiBhbmQgd2lsbCBzaG93IHRoZSBrZWVuZXIgc3Bpcml0LCBpZiBvbmx5LCB3aXRoIEdvZCdzIGhlbHAsIHRoZXkgYXJlIHRyYWluZWQgb24gdGhlIHJpZ2h0IGxpbmVzLiBBbmQsIHJlbWVtYmVyLCB0aGUgQXRoZW5pYW5zIGFyZSBxdWl0ZSBhcyBwcm91ZCBvZiB0aGVpciBhbmNlc3RyeSBhcyB0aGUgQm9lb3RpYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpZiB0aGUgY2l0eSBmYWxscyBiYWNrIG9uIGhlciBuYXZ5LCBhbmQgaXMgY29udGVudCB0byBrZWVwIGhlciB3YWxscyBpbnRhY3QsIGFzIGluIHRoZSBkYXlzIHdoZW4gdGhlIExhY2VkYWVtb25pYW5zIGludmFkZWQgdXMgd2l0aCBhbGwgdGhlIEdyZWVrcyB0byBoZWxwIHRoZW0sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkluIHRoZSBQZWxvcG9ubmVzaWFuIFdhci48L25vdGU+IGFuZCBpZiBzaGUgZXhwZWN0cyBoZXIgY2F2YWxyeSB0byBwcm90ZWN0IGFsbCB0aGF0IGxpZXMgb3V0c2lkZSB0aGUgd2FsbHMsIGFuZCB0byB0YWtlIGl0cyBjaGFuY2UgdW5haWRlZCBhZ2FpbnN0IGhlciBmb2VzLOKAlHdoeSB0aGVuLCBJIHN1cHBvc2UsIHdlIG5lZWQgZmlyc3QgdGhlIHN0cm9uZyBhcm0gb2YgdGhlIGdvZHMgdG8gYWlkIHVzLCBhbmQgaW4gdGhlIHNlY29uZCBwbGFjZSBpdCBpcyBlc3NlbnRpYWwgdGhhdCBvdXIgY2F2YWxyeSBjb21tYW5kZXIgc2hvdWxkIGJlIG1hc3Rlcmx5LiBGb3IgbXVjaCBzYWdhY2l0eSBpcyBjYWxsZWQgZm9yIGluIGNvcGluZyB3aXRoIGEgZ3JlYXRseSBzdXBlcmlvciBmb3JjZSwgYW5kIGFidW5kYW5jZSBvZiBjb3VyYWdlIHdoZW4gdGhlIGNhbGwgY29tZXMuCjwvdHJhbnNsYXRpb24+"
translation['7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHRha2UgaXQsIGhlIG11c3QgYWxzbyBiZSBhYmxlIHRvIHN0YW5kIGhhcmQgd29yay48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SSBoYXZlIHRyYW5zbGF0ZWQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DOv869zrXhv5bOvSw8L2ZvcmVpZ24+IGJ1dCBpdCBpcyBjZXJ0YWlubHkgbm90IHdoYXQgWC4gd3JvdGUuIFRoZSBzZXF1ZWwgZGVtYW5kcyB0aGUgc2Vuc2Ug4oCcaGUgbXVzdCBiZSBhIG1hbiBvZiBzb3VuZCBqdWRnbWVudCwgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrHhvZDPhOG9uM69PC9mb3JlaWduPiAod2l0aCBCKSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM+Bzr/Ovc6/zrXhv5bOvS7igJ08L2ZvcmVpZ24+PC9ub3RlPiBGb3IgaWYgaGUgc2hvdWxkIGVsZWN0IHRvIHRha2UgaGlzIGNoYW5jZSBhZ2FpbnN0IHRoZSBhcm15IGNvbmZyb250aW5nIGhpbeKAlGFuIGFybXkgdGhhdCBub3QgZXZlbiB0aGUgd2hvbGUgc3RhdGUgaXMgcHJlcGFyZWQgdG8gc3RhbmQgdXAgdG/igJRpdCBpcyBldmlkZW50IHRoYXQgaGUgd291bGQgYmUgZW50aXJlbHkgYXQgdGhlIG1lcmN5IG9mIHRoZSBzdHJvbmdlciBhbmQgaW5jYXBhYmxlIG9mIGRvaW5nIGFueXRoaW5nLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM6/zr3OteG/ls69LDwvZm9yZWlnbj4gYnV0IGl0IGlzIGNlcnRhaW5seSBub3Qgd2hhdCBYLiB3cm90ZS4gVGhlIHNlcXVlbCBkZW1hbmRzIHRoZSBzZW5zZSDigJxoZSBtdXN0IGJlIGEgbWFuIG9mIHNvdW5kIGp1ZGdtZW50LCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OseG9kM+E4b24zr08L2ZvcmVpZ24+ICh3aXRoIEIpIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Az4HOv869zr/OteG/ls69LuKAnTwvZm9yZWlnbj48L3RyYW5zbGF0aW9uPg=="
translation['7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBzaG91bGQgaGUgZ3VhcmQgd2hhdGV2ZXIgbGllcyBvdXRzaWRlIHRoZSB3YWxscyB3aXRoIGEgZm9yY2UgdGhhdCB3aWxsIGJlIGp1c3Qgc3VmZmljaWVudCB0byBrZWVwIGFuIGV5ZSBvbiB0aGUgZW5lbXkgYW5kIHRvIHJlbW92ZSBpbnRvIHNhZmV0eSBmcm9tIGFzIGdyZWF0IGEgZGlzdGFuY2UgYXMgcG9zc2libGUgcHJvcGVydHkgdGhhdCBuZWVkcyBzYXZpbmcs4oCUYW5kIGEgbGFyZ2UgZm9yY2UgaXMgbm90IG5lY2Vzc2FyeSBmb3IgdGhpczogYSBzbWFsbCBmb3JjZSBjYW4ga2VlcCBhIGxvb2stb3V0IGFzIHdlbGwgYXMgYSBsYXJnZSBvbmUsIGFuZCB3aGVuIGl0IGNvbWVzIHRvIGd1YXJkaW5nIGFuZCByZW1vdmluZyB0aGUgcHJvcGVydHkgb2YgZnJpZW5kcywgbWVuIHdobyBoYXZlIG5vIGNvbmZpZGVuY2UgaW4gdGhlbXNlbHZlcyBvciB0aGVpciBob3JzZXMgd2lsbCBtZWV0IHRoZSBjYXNlLCBiZWNhdXNlIEZlYXIsIGl0IHNlZW1zLCBpcyBhCjwvdHJhbnNsYXRpb24+"
translation['7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPmZvcm1pZGFibGUgbWVtYmVyIG9mIGEgZ3VhcmTigJR3ZWxsLCBpdCBtYXkgcGVyaGFwcyBiZSBhIHNvdW5kIHBsYW4gdG8gZHJhdyBvbiB0aGVzZSBtZW4gZm9yIGhpcyBndWFyZHMuIEJ1dCBpZiBoZSBpbWFnaW5lcyB0aGF0IHRoZSBudW1iZXIgcmVtYWluaW5nIG92ZXIgYW5kIGFib3ZlIHRoZSBndWFyZCBjb25zdGl0dXRlcyBhbiBhcm15LCBoZSB3aWxsIGZpbmQgaXQgdG9vIHNtYWxsOyBmb3IgaXQgd2lsbCBiZSB1dHRlcmx5IGluYWRlcXVhdGUgdG8gcmlzayBhIGNvbmZsaWN0IGluIHRoZSBvcGVuLiBMZXQgaGltIHVzZSB0aGVzZSBtZW4gYXMgcmFpZGVycywgYW5kIGhlIHdpbGwgcHJvYmFibHkgaGF2ZSBhIGZvcmNlIHF1aXRlIHN1ZmZpY2llbnQgZm9yIHRoaXMgcHVycG9zZS4KPC90cmFuc2xhdGlvbj4="
translation['7.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkhpcyBidXNpbmVzcywgaXQgc2VlbXMgdG8gbWUsIGlzIHRvIHdhdGNoIGZvciBhbnkgYmx1bmRlciBvbiB0aGUgZW5lbXkncyBwYXJ0IHdpdGhvdXQgc2hvd2luZyBoaW1zZWxmLCBrZWVwaW5nIG1lbiBjb25zdGFudGx5IG9uIHRoZSBhbGVydCBhbmQgcmVhZHkgdG8gc3RyaWtlLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkl0IGhhcHBlbnMgdGhhdCwgdGhlIGdyZWF0ZXIgaXMgdGhlIG51bWJlciBvZiBzb2xkaWVycywgdGhlIG1vcmUgdGhleSBhcmUgYXB0IHRvIGJsdW5kZXIuIEVpdGhlciB0aGV5IHNjYXR0ZXIgZGVsaWJlcmF0ZWx5IGluIHNlYXJjaCBvZiBwcm92aXNpb25zLCBvciB0aGV5IGFyZSBzbyBjYXJlbGVzcyBvZiBvcmRlciBvbiB0aGUgbWFyY2ggdGhhdCBzb21lIGdldCB0b28gZmFyIGFoZWFkLCB3aGlsZSBvdGhlcnMgbGFnIHRvbyBmYXIgYmVoaW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5TbyBoZSBtdXN0IG5vdCBsZXQgc3VjaCBibHVuZGVycyBnbyB1bnB1bmlzaGVkLCBvciB0aGUgd2hvbGUgY291bnRyeSB3aWxsIGJlIG9jY3VwaWVkOyBvbmx5IGhlIG11c3QgdGFrZSBnb29kIGNhcmUgdG8gcmV0aXJlIHRoZSBtb21lbnQgaGUgaGFzIHN0cnVjaywgd2l0aG91dCBnaXZpbmcgdGltZSBmb3IgdGhlIG1haW4gc3VwcG9ydHMgdG8gYXJyaXZlIG9uIHRoZSBzY2VuZS4KPC90cmFuc2xhdGlvbj4="
translation['7.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW4gYXJteSBvbiB0aGUgbWFyY2ggb2Z0ZW4gY29tZXMgdG8gcm9hZHMgd2hlcmUgbGFyZ2UgbnVtYmVycyBoYXZlIG5vIGFkdmFudGFnZSBvdmVyIHNtYWxsLiBJbiBjcm9zc2luZyByaXZlcnMsIGFnYWluLCBhIG1hbiB3aXRoIGhpcyB3aXRzIGFib3V0IGhpbSBtYXkgZG9nIHRoZSBlbmVteSdzIHN0ZXBzIHdpdGhvdXQgZGFuZ2VyIGFuZCByZWd1bGF0ZSBhY2NvcmRpbmcgdG8gaGlzIHdpbGwgdGhlIG51bWJlciBvZiB0aGUgZW5lbXkgdGhhdCBoZSBjaG9vc2VzIHRvIGF0dGFjay4KPC90cmFuc2xhdGlvbj4="
translation['7.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5Tb21ldGltZXMgaXQgaXMgcHJvcGVyIHRvIHRhY2tsZSB0aGUgZW5lbXkgd2hpbGUgaGlzIHRyb29wcyBhcmUgYXQgYnJlYWtmYXN0IG9yIHN1cHBlciBvciB3aGVuIHRoZXkgYXJlIHR1cm5pbmcgb3V0IG9mIGJlZC4gRm9yIGF0IGFsbCB0aGVzZSBtb21lbnRzIHNvbGRpZXJzIGFyZSB3aXRob3V0IGFybXMsIGluZmFudHJ5IGZvciBhIHNob3J0ZXIgYW5kIGNhdmFscnkgZm9yIGEgbG9uZ2VyIHRpbWUuCjwvdHJhbnNsYXRpb24+"
translation['7.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5QaWNrZXRzIGFuZCBvdXRwb3N0cywgaG93ZXZlciwgc2hvdWxkIGJlIHRoZSBtYXJrIG9mIGluY2Vzc2FudCBwbG90cywgdGhlc2UgYmVpbmcgaW52YXJpYWJseSB3ZWFrIGluIG51bWJlcnMgYW5kIHNvbWV0aW1lcyByZW1vdGUgZnJvbSB0aGVpciBtYWluIGZvcmNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGUgZW5lbXkgaGFzIGxlYXJuZWQgdG8gdGFrZSBkdWUgcHJlY2F1dGlvbnMgYWdhaW5zdCBzdWNoIGF0dGFja3MsIGl0IGlzIHByb3Blciwgd2l0aCBHb2QncyBoZWxwLCB0byBlbnRlciBoaXMgY291bnRyeSBzdGVhbHRoaWx5IGFmdGVyIGFzY2VydGFpbmluZyBoaXMgc3RyZW5ndGggYXQgdmFyaW91cyBwb2ludHMgYW5kIHRoZSBwb3NpdGlvbiBvZiBoaXMgb3V0cG9zdHMuIEZvciBubyBib290eSB0aGF0IHlvdSBjYW4gY2FwdHVyZSBpcyBzbyBmaW5lIGFzIGEgcGF0cm9sLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5CZXNpZGVzLCBwYXRyb2xzIGFyZSBlYXNpbHkgZGVjZWl2ZWQsIGZvciB0aGV5IHB1cnN1ZSBhIGhhbmRmdWwgb2YgbWVuIGF0IHNpZ2h0LCBiZWxpZXZpbmcgdGhhdCB0byBiZSB0aGVpciBzcGVjaWFsIGR1dHkuIFlvdSBtdXN0IHNlZSwgaG93ZXZlciwgdGhhdCB5b3VyIGxpbmUgb2YgcmV0cmVhdCBkb2VzIG5vdCBsZWFkIHlvdSBzdHJhaWdodCBpbnRvIHRoZSBlbmVteSdzIHN1cHBvcnRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyBjbGVhciwgaG93ZXZlciwgdGhhdCBubyB0cm9vcHMgd2lsbCBiZSBhYmxlIHRvIGluZmxpY3QgbG9zcyBvbiBhIG11Y2ggc3Ryb25nZXIgYXJteSB3aXRoIGltcHVuaXR5LCB1bmxlc3MgdGhleSBhcmUgc28gc3VwZXJpb3IgaW4gdGhlIHByYWN0aWNhbCBhcHBsaWNhdGlvbiBvZiBob3JzZW1hbnNoaXAgdG8gd2FyIHRoYXQgdGhleSBzaG93IGxpa2UgZXhwZXJ0cyBjb250ZW5kaW5nIHdpdGggYW1hdGV1cnMuCjwvdHJhbnNsYXRpb24+"
translation['8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoaXMgc3VwZXJpb3JpdHkgY2FuIGJlIGF0dGFpbmVkIGZpcnN0IGFuZCBmb3JlbW9zdCBpZiB5b3VyIG1hcmF1ZGluZyBiYW5kcyBhcmUgc28gdGhvcm91Z2hseSBkcmlsbGVkIGluIHJpZGluZyB0aGF0IHRoZXkgY2FuIHN0YW5kIHRoZSBoYXJkIHdvcmsgb2YgYSBjYW1wYWlnbi4gRm9yIGJvdGggaG9yc2VzIGFuZCBtZW4gdGhhdCBhcmUgY2FyZWxlc3NseSB0cmFpbmVkIGluIHRoaXMgcmVzcGVjdCB3aWxsIG5hdHVyYWxseSBiZSBsaWtlIHdvbWVuIHN0cnVnZ2xpbmcgd2l0aCBtZW4uCjwvdHJhbnNsYXRpb24+"
translation['8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBjb250cmFyeSwgdGhvc2UgdGhhdCBhcmUgdGF1Z2h0IGFuZCBhY2N1c3RvbWVkIHRvIGp1bXAgZGl0Y2hlcywgbGVhcCB3YWxscywgc3ByaW5nIHVwIGJhbmtzLCBsZWFwIGRvd24gZnJvbSBoZWlnaHRzIHdpdGhvdXQgYSBzcGlsbCwgYW5kIGdhbGxvcCBkb3duIHN0ZWVwIHBsYWNlcywgd2lsbCBiZSBhcyBzdXBlcmlvciB0byB0aGUgbWVuIGFuZCBob3JzZXMgdGhhdCBsYWNrIHRoaXMgdHJhaW5pbmcgYXMgYmlyZHMgdG8gYmVhc3RzLiBNb3Jlb3ZlciwgdGhvc2UgdGhhdCBoYXZlIHRoZWlyIGZlZXQgd2VsbCBoYXJkZW5lZCB3aWxsIGRpZmZlciBvbiByb3VnaCBncm91bmQgZnJvbSB0aGUgdGVuZGVyLWZvb3RlZCBhcyB3aWRlbHkgYXMgdGhlIHNvdW5kIGZyb20gdGhlIGxhbWUuIEFuZCB0aG9zZSB0aGF0IGFyZSBmYW1pbGlhciB3aXRoIHRoZSBsb2NhbGl0eSwgY29tcGFyZWQgd2l0aCB0aG9zZSB0byB3aG9tIGl0IGlzIHVuZmFtaWxpYXIsIHdpbGwgZGlmZmVyIGluIHRoZSBhZHZhbmNlIGFuZCByZXRyZWF0IGFzIG11Y2ggYXMgbWVuIHdpdGggZXllcyBkaWZmZXIgZnJvbSB0aGUgYmxpbmQuCjwvdHJhbnNsYXRpb24+"
translation['8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBzaG91bGQgYWxzbyBiZSByZWFsaXNlZCB0aGF0IGhvcnNlcywgdG8gYmUgd2VsbCBmZXR0bGVkLCBtdXN0IGJlIHdlbGwgZmVkIGFuZCB0aG9yb3VnaGx5IGV4ZXJjaXNlZCwgc28gYXMgdG8gZG8gdGhlaXIgd29yayB3aXRob3V0IHN1ZmZlcmluZyBmcm9tIGhlYXZlcy4gQW5kIHNpbmNlIGJpdHMgYW5kIHNhZGRsZS1jbG90aHMgYXJlIGZhc3RlbmVkIHdpdGggc3RyYXBzLCBhIGNhdmFscnkgbGVhZGVyIG11c3QgbmV2ZXIgYmUgc2hvcnQgb2YgdGhlbSwgZm9yIGF0IGEgdHJpZmxpbmcgZXhwZW5zZSBoZSB3aWxsIG1ha2UgbWVuIGluIGRpZmZpY3VsdGllcyBlZmZpY2llbnQuCjwvdHJhbnNsYXRpb24+"
translation['8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiBjYXNlIGFueW9uZSBmZWVscyB0aGF0IGhpcyB0cm91YmxlcyB3aWxsIGJlIGVuZGxlc3MgaWYgaGlzIGR1dHkgcmVxdWlyZXMgaGltIHRvIHByYWN0aXNlIGhvcnNlbWFuc2hpcCBpbiB0aGlzIHdheSwgbGV0IGhpbSByZWZsZWN0IHRoYXQgbWVuIGluIHRyYWluaW5nIGZvciBneW1uYXN0aWMgY29udGVzdHMgZmFjZSB0cm91YmxlcyBmYXIgbW9yZSBudW1lcm91cyBhbmQgZXhhY3RpbmcgdGhhbiB0aGUgbW9zdCBzdHJlbnVvdXMgdm90YXJpZXMgb2YgaG9yc2VtYW5zaGlwLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkZvciBtb3N0IGd5bW5hc3RpYyBleGVyY2lzZXMgYXJlIGNhcnJpZWQgb3V0IHdpdGggc3dlYXQgYW5kIGRydWRnZXJ5LCBidXQgbmVhcmx5IGFsbCBlcXVlc3RyaWFuIGV4ZXJjaXNlcyBhcmUgcGxlYXNhbnQgd29yay48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lyb3BhZWRpYTwvdGl0bGU+IDQuMy4xNS48L25vdGU+IEZvciBpZiBpdCBpcyB0cnVlIHRoYXQgYW55IG1hbiB3b3VsZCBsaWtlIHRvIGZseSwgbm8gYWN0aW9uIG9mIG1hbiBiZWFycyBhIGNsb3NlciByZXNlbWJsYW5jZSB0byBmbHlpbmcuCjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cm9wYWVkaWE8L3RpdGxlPiA0LjMuMTUuPC90cmFuc2xhdGlvbj4="
translation['8.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCwgcmVtZW1iZXIsIGl0IGlzIGZhciBtb3JlIGdsb3Jpb3VzIHRvIHdpbiBhIHZpY3RvcnkgaW4gd2FyIHRoYW4gaW4gYSBib3hpbmcgbWF0Y2gsIGJlY2F1c2UsIHdoZXJlYXMgdGhlIHN0YXRlIGFzIHdlbGwgYXMgdGhlIHZpY3RvciBoYXMgYSBjb25zaWRlcmFibGUgc2hhcmUgaW4gdGhpcyBnbG9yeSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SGUgZG9lcyBub3QgZXhwcmVzcyBoaW1zZWxmIGNsZWFybHksIGJ1dCBieSDigJx0aGlzIGdsb3J54oCdIGhlIG1lYW5zIOKAnHRoZSBnbG9yeSBvZiBhIHZpY3Rvcnkgd2hldGhlciB3b24gaW4gd2FyIG9yIGluIHRoZSBnYW1lcy7igJ08L25vdGU+IGZvciBhIHZpY3RvcnkgaW4gd2FyIHRoZSBnb2RzIGdlbmVyYWxseSBjcm93biBzdGF0ZXMgd2l0aCBoYXBwaW5lc3MgYXMgd2VsbC4gRm9yIG15IHBhcnQsIHRoZXJlZm9yZSwgSSBrbm93IG5vdCB3aHkgYW55IGFydCBzaG91bGQgYmUgbW9yZSBhc3NpZHVvdXNseSBjdWx0aXZhdGVkIHRoYW4gdGhlIGFydHMgb2Ygd2FyLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkl0IHNob3VsZCBiZSBub3RpY2VkIHRoYXQgYSBsb25nIGFwcHJlbnRpY2VzaGlwIHRvIHRvaWwgZW5hYmxlcyBzZWEtcGlyYXRlcyB0byBsaXZlIGF0IHRoZSBleHBlbnNlIG9mIG11Y2ggc3Ryb25nZXIgZm9say4gT24gbGFuZCwgdG9vLCBwaWxsYWdlLCB0aG91Z2ggbm90IGZvciB0aG9zZSB3aG8gcmVhcCB3aGF0IHRoZXkgaGF2ZSBzb3duLCBpcyB0aGUgbmF0dXJhbCByZXNvdXJjZSBvZiBtZW4gd2hvIGFyZSBkZXByaXZlZCBvZiBmb29kLiBGb3IgZWl0aGVyIG1lbiBtdXN0IHdvcmsgb3IgdGhleSBtdXN0IGVhdCB0aGUgZnJ1aXRzIG9mIG90aGVyIG1lbidzIGxhYm91cjogZWxzZSBpdCBpcyBhIHByb2JsZW0gaG93IHRvIGxpdmUgYW5kIHRvIG9idGFpbiBwZWFjZS4KPC90cmFuc2xhdGlvbj4="
translation['8.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JZiB5b3UgY2hhcmdlIGEgc3VwZXJpb3IgZm9yY2UsIHlvdSBtdXN0IHJlbWVtYmVyIG5ldmVyIHRvIGxlYXZlIGJlaGluZCB5b3UgZ3JvdW5kIGRpZmZpY3VsdCBmb3IgaG9yc2VzLiBGb3IgYSBmYWxsIGluIHJldHJlYXQgYW5kIGEgZmFsbCBpbiBwdXJzdWl0IGFyZSB2ZXJ5IGRpZmZlcmVudCB0aGluZ3MuCjwvdHJhbnNsYXRpb24+"
translation['8.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSB3YW50IHRvIGFkZCBhIHdvcmQgb2Ygd2FybmluZyBhZ2FpbnN0IGFub3RoZXIgZXJyb3IuIFNvbWUgbWVuLCB3aGVuIHRoZXkgc3VwcG9zZSB0aGVtc2VsdmVzIHRvIGJlIHN0cm9uZ2VyIHRoYW4gdGhlIGVuZW15IHdob20gdGhleSBhcmUgZ29pbmcgdG8gYXR0YWNrLCB0YWtlIGFuIHV0dGVybHkgaW5hZGVxdWF0ZSBmb3JjZSB3aXRoIHRoZW0uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkhlbGxlbmljYTwvdGl0bGU+IDYuNS41MS48L25vdGU+IFRoZSBjb25zZXF1ZW5jZSBpcyB0aGF0IHRoZXkgYXJlIGFwdCB0byBpbmN1ciB0aGUgbG9zcyB0aGV5IGV4cGVjdGVkIHRvIGluZmxpY3QuIE9yLCB3aGVuIHRoZXkga25vdyB0aGVtc2VsdmVzIHRvIGJlIHdlYWtlciB0aGFuIHRoZSBlbmVteSwgdGhleSB1c2UgYWxsIHRoZWlyIGF2YWlsYWJsZSBzdHJlbmd0aCBpbiB0aGUgYXR0YWNrLgo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5IZWxsZW5pY2E8L3RpdGxlPiA2LjUuNTEuPC90cmFuc2xhdGlvbj4="
translation['8.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcmlnaHQgcHJvY2VkdXJlLCBpbiBteSBvcGluaW9uLCBpcyBqdXN0IHRoZSBvcHBvc2l0ZTogd2hlbiB0aGUgY29tbWFuZGVyIGV4cGVjdHMgdG8gd2luLCBoZSBzaG91bGQgbm90IGhlc2l0YXRlIHRvIHVzZSB0aGUgd2hvbGUgb2YgaGlzIHN0cmVuZ3RoOiBmb3IgYW4gb3ZlcndoZWxtaW5nIHZpY3RvcnkgbmV2ZXIgeWV0IHdhcyBmb2xsb3dlZCBieSByZW1vcnNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBoZSB0cmllcyBjb25jbHVzaW9ucyB3aXRoIGEgbXVjaCBzdHJvbmdlciBmb3JjZSwga25vd2luZyBiZWZvcmVoYW5kIHRoYXQgaGUgaXMgYm91bmQgdG8gcmV0cmVhdCB3aGVuIGhlIGhhcyBkb25lIGhpcyBiZXN0LCBJIGhvbGQgdGhhdCBpdCBpcyBmYXIgYmV0dGVyIGluIHN1Y2ggYSBjYXNlIHRvIHRocm93IGEgc21hbGwgcGFydCBvZiBoaXMgc3RyZW5ndGggaW50byB0aGUgYXR0YWNrIHRoYW4gdGhlIHdob2xlIG9mIGl0OyBvbmx5IGhvcnNlcyBhbmQgbWVuIGFsaWtlIHNob3VsZCBiZSBoaXMgdmVyeSBiZXN0LiBGb3Igc3VjaCBhIGZvcmNlIHdpbGwgYmUgYWJsZSB0byBhY2hpZXZlIHNvbWV0aGluZyBhbmQgdG8gcmV0cmVhdCB3aXRoIGxlc3Mgcmlzay4KPC90cmFuc2xhdGlvbj4="
translation['8.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBoZSBoYXMgdGhyb3duIHRoZSB3aG9sZSBvZiBoaXMgc3RyZW5ndGggaW50byBhbiBhdHRhY2sgb24gYSBzdHJvbmdlciBmb3JjZSwgYW5kIHdhbnRzIHRvIHJldGlyZSwgdGhlIG1lbiBvbiB0aGUgc2xvd2VzdCBtb3VudHMgYXJlIGJvdW5kIHRvIGJlIHRha2VuIHByaXNvbmVyczsgb3RoZXJzIHRvIGJlIHRocm93biB0aHJvdWdoIGxhY2sgb2YgaG9yc2VtYW5zaGlwOyBhbmQgb3RoZXJzIHRvIGJlIGN1dCBvZmYgb3dpbmcgdG8gaW5lcXVhbGl0aWVzIGluIHRoZSBncm91bmQsIHNpbmNlIGl0IGlzIGhhcmQgdG8gZmluZCBhIHdpZGUgZXhwYW5zZSBvZiBjb3VudHJ5IGVudGlyZWx5IHRvIHlvdXIgbGlraW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Nb3Jlb3Zlciwgb3dpbmcgdG8gdGhlaXIgbnVtYmVycyB0aGV5IHdpbGwgY29sbGlkZSBhbmQgaGluZGVyIGFuZCBodXJ0IG9uZSBhbm90aGVyIGZyZXF1ZW50bHkuIEJ1dCBnb29kIGhvcnNlcyBhbmQgbWVuIHdpbGwgY29udHJpdmUgdG8gZXNjYXBlLCBlc3BlY2lhbGx5IGlmIHlvdSBtYW5hZ2UgdG8gc2NhcmUgdGhlIHB1cnN1ZXJzIGJ5IHVzaW5nIHlvdXIgcmVzZXJ2ZXMuCjwvdHJhbnNsYXRpb24+"
translation['8.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5TaGFtIGFtYnVzY2FkZXMsIHRvbywgYXJlIGhlbHBmdWwgZm9yIHRoaXMgcHVycG9zZS4gSXQgaXMgYWxzbyB1c2VmdWwgdG8gZGlzY292ZXIgb24gd2hhdCBxdWFydGVyIHlvdXIgZnJpZW5kcyBtYXkgc3VkZGVubHkgcmV2ZWFsIHRoZW1zZWx2ZXMgaW4gYSBzYWZlIHBvc2l0aW9uIGFuZCBtYWtlIHRoZSBwdXJzdWl0IHNsb3dlci4KPC90cmFuc2xhdGlvbj4="
translation['8.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGFnYWluIGl0IGlzIG9idmlvdXMgdGhhdCBpbiBwb2ludCBvZiBlbmR1cmFuY2UgYW5kIHNwZWVkIHRoZSBhZHZhbnRhZ2UgaXMgbXVjaCBtb3JlIGxpa2VseSB0byByZXN0IHdpdGggYSBzbWFsbCB0aGFuIHdpdGggYSBsYXJnZSBmb3JjZS4gSSBkbyBub3QgbWVhbiB0aGF0IG1lcmUgcGF1Y2l0eSBvZiBudW1iZXJzIHdpbGwgaW5jcmVhc2UgdGhlIG1lbidzIHBvd2VycyBvZiBlbmR1cmFuY2UgYW5kIGFkZCB0byB0aGVpciBzcGVlZDsgYnV0IGl0IGlzIGVhc2llciB0byBmaW5kIGZldyBtZW4gdGhhbiBtYW55IHdobyB3aWxsIHRha2UgcHJvcGVyIGNhcmUgb2YgdGhlaXIgaG9yc2VzIGFuZCB3aWxsIHByYWN0aXNlIHRoZSBhcnQgb2YgaG9yc2VtYW5zaGlwIGludGVsbGlnZW50bHkgb24gdGhlaXIgb3duIGFjY291bnQuCjwvdHJhbnNsYXRpb24+"
translation['8.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U2hvdWxkIGl0IGhhcHBlbiBhdCBhbnkgdGltZSB0aGF0IHRoZSBjYXZhbHJ5IGZvcmNlcyBlbmdhZ2VkIGFyZSBhYm91dCBlcXVhbCwgSSB0aGluayBpdCB3b3VsZCBiZSBhIGdvb2QgcGxhbiB0byBzcGxpdCBlYWNoIHJlZ2ltZW50IGludG8gdHdvIGRpdmlzaW9ucywgcHV0dGluZyBvbmUgdW5kZXIgdGhlIGNvbW1hbmQgb2YgdGhlIGNvbG9uZWwsIGFuZCB0aGUgb3RoZXIgdW5kZXIgdGhlIGJlc3QgbWFuIGF2YWlsYWJsZS4KPC90cmFuc2xhdGlvbj4="
translation['8.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbGF0dGVyIHdvdWxkIGZvbGxvdyBpbiB0aGUgcmVhciBvZiB0aGUgY29sb25lbCdzIGRpdmlzaW9uIGZvciBhIHRpbWU7IGJ1dCBwcmVzZW50bHksIHdoZW4gdGhlIGFkdmVyc2FyeSBpcyBuZWFyLCBoZSB3b3VsZCB3aGVlbCBvbiByZWNlaXZpbmcgdGhlIG9yZGVyIGFuZCBjaGFyZ2UuIFRoaXMgcGxhbiwgSSB0aGluaywgd291bGQgbWFrZSB0aGUgYmxvdyBkZWxpdmVyZWQgYnkgdGhlIHJlZ2ltZW50IG1vcmUgc3R1bm5pbmcgYW5kIG1vcmUgZGlmZmljdWx0IHRvIHBhcnJ5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['8.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5Cb3RoIGRpdmlzaW9ucyBzaG91bGQgaGF2ZSBhbiBpbmZhbnRyeSBjb250aW5nZW50OyBhbmQgaWYgdGhlIGluZmFudHJ5LCBoaWRkZW4gYXdheSBiZWhpbmQgdGhlIGNhdmFscnksIGNhbWUgb3V0IHN1ZGRlbmx5IGFuZCB3ZW50IGZvciB0aGUgZW5lbXksIEkgdGhpbmsgdGhleSB3b3VsZCBwcm92ZSBhbiBpbXBvcnRhbnQgZmFjdG9yIGluIG1ha2luZyB0aGUgdmljdG9yeSBtb3JlIGRlY2lzaXZlOyBmb3IgSSBoYXZlIG5vdGljZWQgdGhhdCBhIHN1cnByaXNlIGNoZWVycyBtZW4gdXAgaWYgaXQgaXMgcGxlYXNhbnQsIGJ1dCBzdHVucyB0aGVtIGlmIGl0IGlzIGFsYXJtaW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BbnlvbmUgd2lsbCByZWNvZ25pc2UgdGhlIHRydXRoIG9mIHRoaXMgd2hvIHJlZmxlY3RzIHRoYXQsIGhvd2V2ZXIgZ3JlYXQgdGhlaXIgYWR2YW50YWdlIGluIG51bWJlcnMsIG1lbiBhcmUgZGF6ZWQgd2hlbiB0aGV5IGZhbGwgaW50byBhbiBhbWJ1c2NhZGUsIGFuZCB0aGF0IHR3byBob3N0aWxlIGFybWllcyBjb25mcm9udGluZyBlYWNoIG90aGVyIGFyZSBzY2FyZWQgb3V0IG9mIHRoZWlyIHdpdHMgZm9yIHRoZSBmaXJzdCBmZXcgZGF5cy4KPC90cmFuc2xhdGlvbj4="
translation['8.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmUgaXMgbm8gZGlmZmljdWx0eSBpbiBhZG9wdGluZyB0aGVzZSB0YWN0aWNzOyBidXQgb25seSBhIGdvb2QgY2F2YWxyeSBjb21tYW5kZXIgY2FuIGZpbmQgbWVuIHdobyB3aWxsIHNob3cgaW50ZWxsaWdlbmNlLCByZWxpYWJpbGl0eSBhbmQgY291cmFnZSBpbiB3aGVlbGluZyB0byBjaGFyZ2UgdGhlIGVuZW15Lgo8L3RyYW5zbGF0aW9uPg=="
translation['8.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIGNvbW1hbmRlciBtdXN0IGJlIGNhcGFibGUgYm90aCBieSBoaXMgd29yZHMgYW5kIGFjdGlvbiBvZiBtYWtpbmcgdGhlIG1lbiB1bmRlciBoaW0gcmVhbGl6ZSB0aGF0IGl0IGlzIGdvb2QgdG8gb2JleSwgdG8gYmFjayB1cCB0aGVpciBsZWFkZXIsIGFuZCB0byBjaGFyZ2UgaG9tZTsgb2YgZmlyaW5nIHRoZW0gd2l0aCBhIGRlc2lyZSB0byB3aW4gY29tbWVuZGF0aW9uOyBhbmQgb2YgZW5hYmxpbmcgdGhlbSB0byBjYXJyeSBvdXQgdGhlaXIgaW50ZW50aW9ucyB3aXRoIHBlcnNpc3RlbmNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3VwcG9zZSBub3cgdGhhdCB0aGUgY2F2YWxyeSBhcmUgYnVzeSBpbiB0aGUgbm8tbWFuJ3MtbGFuZCB0aGF0IHNlcGFyYXRlcyB0d28gYmF0dGxlIGxpbmVzIGRyYXduIHVwIGZhY2UgdG8gZmFjZSBvciB0d28gc3RyYXRlZ2ljIHBvc2l0aW9ucywgd2hlZWxpbmcsIHB1cnN1aW5nIGFuZCByZXRyZWF0aW5nLiBBZnRlciBzdWNoIG1hbm9ldXZyZXMgYm90aCBzaWRlcyB1c3VhbGx5IHN0YXJ0IG9mZiBhdCBhIHNsb3cgcGFjZSwgYnV0IGdhbGxvcCBhdCBmdWxsIHNwZWVkIGluIHRoZSB1bm9jY3VwaWVkIGdyb3VuZC4KPC90cmFuc2xhdGlvbj4="
translation['8.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaWYgYSBjb21tYW5kZXIgZmlyc3QgZmVpbnRzIGluIHRoaXMgbWFubmVyLCBhbmQgdGhlbiBhZnRlciB3aGVlbGluZywgcHVyc3VlcyBhbmQgcmV0cmVhdHMgYXQgdGhlIGdhbGxvcCBoZSB3aWxsIGJlIGFibGUgdG8gaW5mbGljdCB0aGUgZ3JlYXRlc3QgbG9zcyBvbiB0aGUgZW5lbXksIGFuZCB3aWxsIHByb2JhYmx5IGNvbWUgdGhyb3VnaCB3aXRoIHRoZSBsZWFzdCBoYXJtLCBieSBwdXJzdWluZyBhdCB0aGUgZ2FsbG9wIHNvIGxvbmcgYXMgaGUgaXMgbmVhciBoaXMgb3duIGRlZmVuY2UsIGFuZCByZXRyZWF0aW5nIGF0IHRoZSBnYWxsb3AgZnJvbSB0aGUgZW5lbXkncyBkZWZlbmNlcy4KPC90cmFuc2xhdGlvbj4="
translation['8.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5JZiwgbW9yZW92ZXIsIGhlIGNhbiBzZWNyZXRseSBsZWF2ZSBiZWhpbmQgaGltIGZvdXIgb3IgZml2ZSBvZiB0aGUgYmVzdCBob3JzZXMgYW5kIG1lbiBpbiBlYWNoIGRpdmlzaW9uLCB0aGV5IHdpbGwgYmUgYXQgYSBncmVhdCBhZHZhbnRhZ2UgaW4gZmFsbGluZyBvbiB0aGUgZW5lbXkgYXMgaGUgaXMgdHVybmluZyB0byByZW5ldyB0aGUgY2hhcmdlLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UbyByZWFkIHRoZXNlIHN1Z2dlc3Rpb25zIGEgZmV3IHRpbWVzIGlzIGVub3VnaDsgYnV0IGl0IGlzIGFsd2F5cyBuZWNlc3NhcnkgZm9yIHRoZSBjb21tYW5kZXIgdG8gaGl0IG9uIHRoZSByaWdodCB0aGluZyBhdCB0aGUgcmlnaHQgbW9tZW50LCB0byB0aGluayBvZiB0aGUgcHJlc2VudCBzaXR1YXRpb24gYW5kIHRvIGNhcnJ5IG91dCB3aGF0IGlzIGV4cGVkaWVudCBpbiB2aWV3IG9mIGl0LiBUbyB3cml0ZSBvdXQgYWxsIHRoYXQgaGUgb3VnaHQgdG8gZG8gaXMgbm8gbW9yZSBwb3NzaWJsZSB0aGFuIHRvIGtub3cgZXZlcnl0aGluZyB0aGF0IGlzIGdvaW5nIHRvIGhhcHBlbi4KPC90cmFuc2xhdGlvbj4="
translation['9.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBtb3N0IGltcG9ydGFudCBvZiBhbGwgbXkgaGludHMsIEkgdGhpbmssIGlzIHRoaXM6IFdoYXRldmVyIHlvdSBkZWNpZGUgdG8gYmUgYmVzdCwgc2VlIHRoYXQgaXQgZ2V0cyBkb25lLiBXaGV0aGVyIHlvdSBhcmUgYSBmYXJtZXIsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk9lY29ub21pY3VzPC90aXRsZT4gMTEuOC48L25vdGU+IGEgc2tpcHBlciBvciBhIGNvbW1hbmRlciwgc291bmQgZGVjaXNpb25zIGJlYXIgbm8gZnJ1aXQgdW5sZXNzIHlvdSBzZWUgdG8gaXQgdGhhdCwgd2l0aCBoZWF2ZW4ncyBoZWxwLDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk9lY29ub21pY3VzPC90aXRsZT4gMTEuOC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhpcyBleHByZXNzaW9uIHVuZG91YnRlZGx5IGNvbWVzIGhlcmU7IGNvbXBhcmUgZXNwZWNpYWxseSB0aGUgbWF4aW0g4oCcQWN0IHdpdGggZ29k4oCdICg4KSwgYW5kIHRoZSBlbmQgb2YgdGhlIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPldheXMgYW5kIE1lYW5zPC90aXRsZT4uPC9ub3RlPiB0aGV5IGFyZSBkdWx5IGNhcnJpZWQgb3V0Lgo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5XYXlzIGFuZCBNZWFuczwvdGl0bGU+LjwvdHJhbnNsYXRpb24+"
translation['9.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GdXJ0aGVyLCBJIGFtIG9mIG9waW5pb24gdGhhdCB0aGUgZnVsbCBjb21wbGVtZW50IG9mIGEgdGhvdXNhbmQgY2F2YWxyeSB3b3VsZCBiZSByYWlzZWQgbXVjaCBtb3JlIHF1aWNrbHkgYW5kIGluIGEgbWFubmVyIG11Y2ggbGVzcyBidXJkZW5zb21lIHRvIHRoZSBjaXRpemVucyBpZiB0aGV5IGVzdGFibGlzaGVkIGEgZm9yY2Ugb2YgdHdvIGh1bmRyZWQgZm9yZWlnbiBjYXZhbHJ5Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgMjAwIG1lcmNlbmFyaWVzIHdvdWxkIGJlIGluY2x1ZGVkIGluIHRoZSB0b3RhbCBvZiAxMDAwLjwvbm90ZT4gRm9yIEkgYmVsaWV2ZSB0aGF0IHRoZSBwcmVzZW5jZSBvZiB0aGVzZSBtZW4gd291bGQgaW1wcm92ZSB0aGUgZGlzY2lwbGluZSBvZiB0aGUgd2hvbGUgZm9yY2UgYW5kIHdvdWxkIGZvc3RlciByaXZhbHJ5IGluIHRoZSBkaXNwbGF5IG9mIGVmZmljaWVuY3kuCjwvdHJhbnNsYXRpb24+"
translation['9.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkkga25vdyB0aGF0IHRoZSBmYW1lIG9mIHRoZSBMYWNlZGFlbW9uaWFuIGhvcnNlIGRhdGVzIGZyb20gdGhlIGludHJvZHVjdGlvbiBvZiBmb3JlaWduIGNhdmFscnk6IGFuZCBpbiB0aGUgb3RoZXIgc3RhdGVzIGV2ZXJ5d2hlcmUgSSBub3RpY2UgdGhhdCB0aGUgZm9yZWlnbiBjb250aW5nZW50cyBlbmpveSBhIGhpZ2ggcmVwdXRhdGlvbjsgZm9yIG5lZWQgaGVscHMgdG8gcHJvZHVjZSBncmVhdCBlYWdlcm5lc3MuCjwvdHJhbnNsYXRpb24+"
translation['9.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRvIGRlZnJheSB0aGUgY29zdCBvZiB0aGVpciBob3JzZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBtZXJjZW5hcmllcyB3b3VsZCBub3QgcmVjZWl2ZSDigJxlc3RhYmxpc2htZW504oCdIG1vbmV5Ljwvbm90ZT4gSSBiZWxpZXZlIHRoYXQgbW9uZXkgd291bGQgYmUgZm9ydGhjb21pbmcgZnJvbSB0aG9zZSB3aG8gc3Ryb25nbHkgb2JqZWN0IHRvIHNlcnZlIGluIHRoZSBjYXZhbHJ54oCUc2luY2UgZXZlbiBtZW4gYWN0dWFsbHkgZW5yb2xsZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/Ouc+CIM66zrHOuOG9t8+Dz4TOt8+Dzrk8L2ZvcmVpZ24+IGlzIG5vdCByaWdodDsgYnV0IHRoZSB0cmFuc2xhdGlvbiBnaXZlcyB0aGUgYXBwcm94aW1hdGUgc2Vuc2Ugb2Ygd2hhdCBYZW5vcGhvbiBtdXN0IGhhdmUgd3JpdHRlbi48L25vdGU+IGFyZSB3aWxsaW5nIHRvIHBheSBpbiBvcmRlciB0byBnZXQgb3V0IG9mIHRoZSBzZXJ2aWNl4oCUZnJvbSByaWNoIG1lbiB3aG8gYXJlIHBoeXNpY2FsbHkgdW5maXQsIGFuZCBhbHNvLCBJIHRoaW5rLCBmcm9tIG9ycGhhbnM8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ov865z4IgzrrOsc644b23z4PPhM63z4POuTwvZm9yZWlnbj4gaXMgbm90IHJpZ2h0OyBidXQgdGhlIHRyYW5zbGF0aW9uIGdpdmVzIHRoZSBhcHByb3hpbWF0ZSBzZW5zZSBvZiB3aGF0IFhlbm9waG9uIG11c3QgaGF2ZSB3cml0dGVuLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5PcnBoYW5zIHdlcmUgZXhlbXB0IGZyb20gc3RhdGUgYnVyZGVucyB1bnRpbCBhIHllYXIgYWZ0ZXIgYXR0YWluaW5nIHRoZWlyIG1ham9yaXR5LiBUaGUgbWVhbmluZyBzZWVtcyB0byBiZSB0aGF0IGR1cmluZyB0aGlzIHBlcmlvZCBvZiBleGVtcHRpb24gdGhleSBtaWdodCBmYWlybHkgYmUgYXNrZWQgdG8gY29udHJpYnV0ZSB0byBzdWNoIGEgZnVuZC48L25vdGU+IHBvc3Nlc3NlZCBvZiBsYXJnZSBlc3RhdGVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkkgYmVsaWV2ZSBhbHNvIHRoYXQgc29tZSBvZiB0aGUgcmVzaWRlbnQgYWxpZW5zIHdvdWxkIGJlIHByb3VkIHRvIGJlIGVucm9sbGVkIGluIHRoZSBjYXZhbHJ5LiBGb3IgSSBub3RpY2UgdGhhdCwgd2hlbmV2ZXIgdGhlIGNpdGl6ZW5zIGdpdmUgdGhlbSBhIHNoYXJlIGluIGFueSBvdGhlciBob25vdXJhYmxlIGR1dHksIHNvbWUgYXJlIHdpbGxpbmcgZW5vdWdoIHRvIHRha2UgcHJpZGUgaW4gZG9pbmcgdGhlIHBhcnQgYXNzaWduZWQgdG8gdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['9.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkkgZmFuY3ksIHRvbywgdGhhdCBpbmZhbnRyeSBhdHRhY2hlZCB0byB0aGUgY2F2YWxyeSB3aWxsIGJlIG1vc3QgZWZmZWN0aXZlIGlmIGl0IGNvbnNpc3RzIG9mIHBlcnNvbnMgd2hvIGFyZSB2ZXJ5IGJpdHRlciBhZ2FpbnN0IHRoZSBlbmVteS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWxsIHRoZXNlIHRoaW5ncyBhcmUgZmVhc2libGUgcHJvdmlkZWQgdGhlIGdvZHMgZ2l2ZSB0aGVpciBjb25zZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['9.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPklmIGFueW9uZSBpcyBzdXJwcmlzZWQgYXQgbXkgZnJlcXVlbnQgcmVwZXRpdGlvbiBvZiB0aGUgZXhob3J0YXRpb24gdG8gd29yayB3aXRoIEdvZCwgSSBjYW4gYXNzdXJlIGhpbSB0aGF0IGhpcyBzdXJwcmlzZSB3aWxsIGRpbWluaXNoLCBpZiBoZSBpcyBvZnRlbiBpbiBwZXJpbCwgYW5kIGlmIGhlIGNvbnNpZGVycyB0aGF0IGluIHRpbWUgb2Ygd2FyIGZvZW1lbiBwbG90IGFuZCBjb3VudGVycGxvdCwgYnV0IHNlbGRvbSBrbm93IHdoYXQgd2lsbCBjb21lIG9mIHRoZWlyIHBsb3RzLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.9'] = ""
translation['1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBvY2N1cnJlZCB0byBtZSBvbmUgZGF5IHRoYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LCB0aG91Z2ggYW1vbmcgdGhlIG1vc3QgdGhpbmx5IHBvcHVsYXRlZCBvZiBzdGF0ZXMsIHdhcyBldmlkZW50bHkgdGhlIG1vc3QgcG93ZXJmdWwgYW5kIG1vc3QgY2VsZWJyYXRlZCBjaXR5IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPjsgYW5kIEkgZmVsbCB0byB3b25kZXJpbmcgaG93IHRoaXMgY291bGQgaGF2ZSBoYXBwZW5lZC4gQnV0IHdoZW4gSSBjb25zaWRlcmVkIHRoZSBpbnN0aXR1dGlvbnMgb2YgdGhlIFNwYXJ0YW5zLCBJIHdvbmRlcmVkIG5vIGxvbmdlci4KPC90cmFuc2xhdGlvbj4="
translation['1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MeWN1cmd1cywgd2hvIGdhdmUgdGhlbSB0aGUgbGF3cyB0aGF0IHRoZXkgb2JleSwgYW5kIHRvIHdoaWNoIHRoZXkgb3dlIHRoZWlyIHByb3NwZXJpdHksIEkgZG8gcmVnYXJkIHdpdGggd29uZGVyOyBhbmQgSSB0aGluayB0aGF0IGhlIHJlYWNoZWQgdGhlIHV0bW9zdCBsaW1pdCBvZiB3aXNkb20uIEZvciBpdCB3YXMgbm90IGJ5IGltaXRhdGluZyBvdGhlciBzdGF0ZXMsIGJ1dCBieSBkZXZpc2luZyBhIHN5c3RlbSB1dHRlcmx5IGRpZmZlcmVudCBmcm9tIHRoYXQgb2YgbW9zdCBvdGhlcnMsIHRoYXQgaGUgbWFkZSBoaXMgY291bnRyeSBwcmUtZW1pbmVudGx5IHByb3NwZXJvdXMuCjwvdHJhbnNsYXRpb24+"
translation['1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GaXJzdCwgdG8gYmVnaW4gYXQgdGhlIGJlZ2lubmluZywgSSB3aWxsIHRha2UgdGhlIGJlZ2V0dGluZyBvZiBjaGlsZHJlbi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHByb3NlIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkNvbnN0aXR1dGlvbiBvZiB0aGUgTGFjZWRhZW1vbmlhbnM8L3RpdGxlPiBieSBDcml0aWFzIGJlZ2FuIHdpdGggdGhlIHNhbWUgcG9pbnQuIFNlZSBJbnRyb2R1Y3Rpb24gMy48L25vdGU+IEluIG90aGVyIHN0YXRlcyB0aGUgZ2lybHMgd2hvIGFyZSBkZXN0aW5lZCB0byBiZWNvbWUgbW90aGVycyBhbmQgYXJlIGJyb3VnaHQgdXAgaW4gdGhlIGFwcHJvdmVkIGZhc2hpb24sIGxpdmUgb24gdGhlIHZlcnkgcGxhaW5lc3QgZmFyZSwgd2l0aCBhIG1vc3QgbWVhZ3JlIGFsbG93YW5jZSBvZiBkZWxpY2FjaWVzLiBXaW5lIGlzIGVpdGhlciB3aXRoZWxkIGFsdG9nZXRoZXIsIG9yLCBpZiBhbGxvd2VkIHRoZW0sIGlzIGRpbHV0ZWQgd2l0aCB3YXRlci4gVGhlIHJlc3Qgb2YgdGhlIEdyZWVrcyBleHBlY3QgdGhlaXIgZ2lybHMgdG8gaW1pdGF0ZSB0aGUgc2VkZW50YXJ5IGxpZmUgdGhhdCBpcyB0eXBpY2FsIG9mIGhhbmRpY3JhZnRzbWVuIC0tIHRvIGtlZXAgcXVpZXQgYW5kIGRvIHdvb2wtd29yay4gSG93LCB0aGVuLCBpcyBpdCB0byBiZSBleHBlY3RlZCB0aGF0IHdvbWVuIHNvIGJyb3VnaHQgdXAgd2lsbCBiZWFyIGZpbmUgY2hpbGRyZW4/Cjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkNvbnN0aXR1dGlvbiBvZiB0aGUgTGFjZWRhZW1vbmlhbnM8L3RpdGxlPiBieSBDcml0aWFzIGJlZ2FuIHdpdGggdGhlIHNhbWUgcG9pbnQuIFNlZSBJbnRyb2R1Y3Rpb24gMy48L3RyYW5zbGF0aW9uPg=="
translation['1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgTHljdXJndXMgdGhvdWdodCB0aGUgbGFib3VyIG9mIHNsYXZlIHdvbWVuIHN1ZmZpY2llbnQgdG8gc3VwcGx5IGNsb3RoaW5nLiBIZSBiZWxpZXZlZCBtb3RoZXJob29kIHRvIGJlIHRoZSBtb3N0IGltcG9ydGFudCBmdW5jdGlvbiBvZiBmcmVlYm9ybiB3b21hbi4gVGhlcmVmb3JlLCBpbiB0aGUgZmlyc3QgcGxhY2UsIGhlIGluc2lzdGVkIG9uIHBoeXNpY2FsIHRyYWluaW5nIGZvciB0aGUgZmVtYWxlIG5vIGxlc3MgdGhhbiBmb3IgdGhlIG1hbGUgc2V4OiBtb3Jlb3ZlciwgaGUgaW5zdGl0dXRlZCByYWNlcyBhbmQgdHJpYWxzIG9mIHN0cmVuZ3RoIGZvciB3b21lbiBjb21wZXRpdG9ycyBhcyBmb3IgbWVuLCBiZWxpZXZpbmcgdGhhdCBpZiBib3RoIHBhcmVudHMgYXJlIHN0cm9uZyB0aGV5IHByb2R1Y2UgbW9yZSB2aWdvcm91cyBvZmZzcHJpbmcuCjwvdHJhbnNsYXRpb24+"
translation['1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSBub3RpY2VkLCB0b28sIHRoYXQsIGR1cmluZyB0aGUgdGltZSBpbW1lZGlhdGVseSBzdWNjZWVkaW5nIG1hcnJpYWdlLCBpdCB3YXMgdXN1YWwgZWxzZXdoZXJlIGZvciB0aGUgaHVzYmFuZCB0byBoYXZlIHVubGltaXRlZCBpbnRlcmNvdXJzZSB3aXRoIGhpcyB3aWZlLiBUaGUgcnVsZSB0aGF0IGhlIGFkb3B0ZWQgd2FzIHRoZSBvcHBvc2l0ZSBvZiB0aGlzOiBmb3IgaGUgbGFpZCBpdCBkb3duIHRoYXQgdGhlIGh1c2JhbmQgc2hvdWxkIGJlIGFzaGFtZWQgdG8gYmUgc2VlbiBlbnRlcmluZyBoaXMgd2lmZSdzIHJvb20gb3IgbGVhdmluZyBpdC4gV2l0aCB0aGlzIHJlc3RyaWN0aW9uIG9uIGludGVyY291cnNlIHRoZSBkZXNpcmUgb2YgdGhlIG9uZSBmb3IgdGhlIG90aGVyIG11c3QgbmVjZXNzYXJpbHkgYmUgaW5jcmVhc2VkLCBhbmQgdGhlaXIgb2Zmc3ByaW5nIHdhcyBib3VuZCB0byBiZSBtb3JlIHZpZ29yb3VzIHRoYW4gaWYgdGhleSB3ZXJlIHN1cmZlaXRlZCB3aXRoIG9uZSBhbm90aGVyLiAKPC90cmFuc2xhdGlvbj4="
translation['1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkluIGFkZGl0aW9uIHRvIHRoaXMsIGhlIHdpdGhkcmV3IGZyb20gbWVuIHRoZSByaWdodCB0byB0YWtlIGEgd2lmZSB3aGVuZXZlciB0aGV5IGNob3NlLCBhbmQgaW5zaXN0ZWQgb24gdGhlaXIgbWFycnlpbmcgaW4gdGhlIHByaW1lIG9mIHRoZWlyIG1hbmhvb2QsIGJlbGlldmluZyB0aGF0IHRoaXMgdG9vIHByb21vdGVkIHRoZSBwcm9kdWN0aW9uIG9mIGZpbmUgY2hpbGRyZW4uIAo8L3RyYW5zbGF0aW9uPg=="
translation['1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkl0IG1pZ2h0IGhhcHBlbiwgaG93ZXZlciwgdGhhdCBhbiBvbGQgbWFuIGhhZCBhIHlvdW5nIHdpZmU7IGFuZCBoZSBvYnNlcnZlZCB0aGF0IG9sZCBtZW4ga2VlcCBhIHZlcnkgamVhbG91cyB3YXRjaCBvdmVyIHRoZWlyIHlvdW5nIHdpdmVzLiBUbyBtZWV0IHRoZXNlIGNhc2VzIGhlIGluc3RpdHV0ZWQgYW4gZW50aXJlbHkgZGlmZmVyZW50IHN5c3RlbSBieSByZXF1aXJpbmcgdGhlIGVsZGVybHkgaHVzYmFuZCB0byBpbnRyb2R1Y2UgaW50byBoaXMgaG91c2Ugc29tZSBtYW4gd2hvc2UgcGh5c2ljYWwgYW5kIG1vcmFsIHF1YWxpdGllcyBoZSBhZG1pcmVkLCBpbiBvcmRlciB0byBiZWdldCBjaGlsZHJlbi4KPC90cmFuc2xhdGlvbj4="
translation['1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBvdGhlciBoYW5kLCBpbiBjYXNlIGEgbWFuIGRpZCBub3Qgd2FudCB0byBjb2hhYml0IHdpdGggaGlzIHdpZmUgYW5kIG5ldmVydGhlbGVzcyBkZXNpcmVkIGNoaWxkcmVuIG9mIHdob20gaGUgY291bGQgYmUgcHJvdWQsIGhlIG1hZGUgaXQgbGF3ZnVsIGZvciBoaW0gdG8gY2hvb3NlIGEgd29tYW4gd2hvIHdhcyB0aGUgbW90aGVyIG9mIGEgZmluZSBmYW1pbHkgYW5kIG9mIGhpZ2ggYmlydGgsIGFuZCBpZiBoZSBvYnRhaW5lZCBoZXIgaHVzYmFuZCdzIGNvbnNlbnQsIHRvIG1ha2UgaGVyIHRoZSBtb3RoZXIgb2YgaGlzIGNoaWxkcmVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSBnYXZlIGhpcyBzYW5jdGlvbiB0byBtYW55IHNpbWlsYXIgYXJyYW5nZW1lbnRzLiBGb3IgdGhlIHdpdmVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPi48L25vdGU+IHdhbnQgdG8gdGFrZSBjaGFyZ2Ugb2YgdHdvIGhvdXNlaG9sZHMsIGFuZCB0aGUgaHVzYmFuZHMgd2FudCB0byBnZXQgYnJvdGhlcnMgZm9yIHRoZWlyIHNvbnMsIGJyb3RoZXJzIHdobyBhcmUgbWVtYmVycyBvZiB0aGUgZmFtaWx5IGFuZCBzaGFyZSBpbiBpdHMgaW5mbHVlbmNlLCBidXQgY2xhaW0gbm8gcGFydCBvZiB0aGUgbW9uZXkuCjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPi48L3RyYW5zbGF0aW9uPg=="
translation['1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGh1cyBoaXMgcmVndWxhdGlvbnMgd2l0aCByZWdhcmQgdG8gdGhlIGJlZ2V0dGluZyBvZiBjaGlsZHJlbiB3ZXJlIGluIHNoYXJwIGNvbnRyYXN0IHdpdGggdGhvc2Ugb2Ygb3RoZXIgc3RhdGVzLiBXaGV0aGVyIGhlIHN1Y2NlZWRlZCBpbiBwb3B1bGF0aW5nIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiB3aXRoIGEgcmFjZSBvZiBtZW4gcmVtYXJrYWJsZSBmb3IgdGhlaXIgc2l6ZSBhbmQgc3RyZW5ndGggYW55b25lIHdobyBjaG9vc2VzIG1heSBqdWRnZSBmb3IgaGltc2VsZi4KPC90cmFuc2xhdGlvbj4="
translation['2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IYXZpbmcgZGVhbHRoIHdpdGggdGhlIHN1YmplY3Qgb2YgYmlydGgsIEkgd2lzaCBuZXh0IHRvIGV4cGxhaW4gdGhlIGVkdWNhdGlvbmFsIHN5c3RlbSBvZiBMeWN1cmd1cywgYW5kIGhvdyBpdCBkaWZmZXJzIGZyb20gb3RoZXIgc3lzdGVtcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gdGhlIG90aGVyIEdyZWVrIHN0YXRlcyBwYXJlbnRzIHdobyBwcm9mZXNzIHRvIGdpdmUgdGhlaXIgc29ucyB0aGUgYmVzdCBlZHVjYXRpb24gcGxhY2UgdGhlaXIgYm95cyB1bmRlciB0aGUgY2FyZSBhbmQgY29udHJvbCBvZiBhIG1vcmFsIHR1dG9yPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkkgaGF2ZSBhZG9wdGVkIGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM6xzrnOtM6xzrPPic6z4b25z4I8L2ZvcmVpZ24+IHRoZSB0ZXJtIHVzZWQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTE5MzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMTkzMSI+T3hmb3JkPC9wbGFjZU5hbWU+IGZvciBhIHBlcnNvbiB3aG8gaGFzIGNoYXJnZSBvZiwgYnV0IGRvZXMgbm90IHRlYWNoLCBhbiB1bmRlcmdyYWR1YXRlLjwvbm90ZT4gYXMgc29vbiBhcyB0aGV5IGNhbiB1bmRlcnN0YW5kIHdoYXQgaXMgc2FpZCB0byB0aGVtLCBhbmQgc2VuZCB0aGVtIHRvIGEgc2Nob29sIHRvIGxlYXJuIGxldHRlcnMsIG11c2ljIGFuZCB0aGUgZXhlcmNpc2VzIG9mIHRoZSB3cmVzdGxpbmctZ3JvdW5kLiBNb3Jlb3ZlciwgdGhleSBzb2Z0ZW4gdGhlIGNoaWxkcmVuJ3MgZmVldCBieSBnaXZpbmcgdGhlbSBzYW5kYWxzLCBhbmQgcGFtcGVyIHRoZWlyIGJvZGllcyB3aXRoIGNoYW5nZXMgb2YgY2xvdGhpbmc7IGFuZCBpdCBpcyBjdXN0b21hcnkgdG8gYWxsb3cgdGhlbSBhcyBtdWNoIGZvb2QgYXMgdGhleSBjYW4gZWF0Lgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM6xzrnOtM6xzrPPic6z4b25z4I8L2ZvcmVpZ24+IHRoZSB0ZXJtIHVzZWQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTE5MzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMTkzMSI+T3hmb3JkPC9wbGFjZU5hbWU+IGZvciBhIHBlcnNvbiB3aG8gaGFzIGNoYXJnZSBvZiwgYnV0IGRvZXMgbm90IHRlYWNoLCBhbiB1bmRlcmdyYWR1YXRlLjwvdHJhbnNsYXRpb24+"
translation['2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MeWN1cmd1cywgb24gdGhlIGNvbnRyYXJ5LCBpbnN0ZWFkIG9mIGxlYXZpbmcgZWFjaCBmYXRoZXIgdG8gYXBwb2ludCBhIHNsYXZlIHRvIGFjdCBhcyB0dXRvciwgZ2F2ZSB0aGUgZHV0eSBvZiBjb250cm9sbGluZyB0aGUgYm95cyB0byBhIG1lbWJlciBvZiB0aGUgY2xhc3MgZnJvbSB3aGljaCB0aGUgaGlnaGVzdCBvZmZpY2VzIGFyZSBmaWxsZWQsIGluIGZhY3QgdG8gdGhlIOKAnFdhcmRlbuKAnSBhcyBoZSBpcyBjYWxsZWQuIEhlIGdhdmUgdGhpcyBwZXJzb24gYXV0aG9yaXR5IHRvIGdhdGhlciB0aGUgYm95cyB0b2dldGhlciwgdG8gdGFrZSBjaGFyZ2Ugb2YgdGhlbSBhbmQgdG8gcHVuaXNoIHRoZW0gc2V2ZXJlbHkgaW4gY2FzZSBvZiBtaXNjb25kdWN0LiBIZSBhbHNvIGFzc2lnbmVkIHRvIGhpbSBhIHN0YWZmIG9mIHlvdXRocyBwcm92aWRlZCB3aXRoIHdoaXBzIHRvIGNoYXN0aXNlIHRoZW0gd2hlbiBuZWNlc3Nhcnk7IGFuZCB0aGUgcmVzdWx0IGlzIHRoYXQgbW9kZXN0eSBhbmQgb2JlZGllbmNlIGFyZSBpbnNlcGFyYWJsZSBjb21wYW5pb25zIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkluc3RlYWQgb2Ygc29mdGVuaW5nIHRoZSBib3lzJyBmZWV0IHdpdGggc2FuZGFscyBoZSByZXF1aXJlZCB0aGVtIHRvIGhhcmRlbiB0aGVpciBmZWV0IGJ5IGdvaW5nIHdpdGhvdXQgc2hvZXMuIEhlIGJlbGlldmVkIHRoYXQgaWYgdGhpcyBoYWJpdCB3ZXJlIGN1bHRpdmF0ZWQgaXQgd291bGQgZW5hYmxlIHRoZW0gdG8gY2xpbWIgaGlsbHMgbW9yZSBlYXNpbHkgYW5kIGRlc2NlbmQgc3RlZXAgaW5jbGluZXMgd2l0aCBsZXNzIGRhbmdlciwgYW5kIHRoYXQgYSB5b3V0aCB3aG8gaGFkIGFjY3VzdG9tZWQgaGltc2VsZiB0byBnbyBiYXJlZm9vdCB3b3VsZCBsZWFwIGFuZCBqdW1wIGFuZCBydW4gbW9yZSBuaW1ibHkgdGhhbiBhIGJveSBpbiBzYW5kYWxzLiAKPC90cmFuc2xhdGlvbj4="
translation['2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBpbnN0ZWFkIG9mIGxldHRpbmcgdGhlbSBiZSBwYW1wZXJlZCBpbiB0aGUgbWF0dGVyIG9mIGNsb3RoaW5nLCBoZSBpbnRyb2R1Y2VkIHRoZSBjdXN0b20gb2Ygd2VhcmluZyBvbmUgZ2FybWVudCB0aHJvdWdob3V0IHRoZSB5ZWFyLCBiZWxpZXZpbmcgdGhhdCB0aGV5IHdvdWxkIHRodXMgYmUgYmV0dGVyIHByZXBhcmVkIHRvIGZhY2UgY2hhbmdlcyBvZiBoZWF0IGFuZCBjb2xkLiAKPC90cmFuc2xhdGlvbj4="
translation['2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFzIHRvIHRoZSBmb29kLCBoZSByZXF1aXJlZCB0aGUgcHJlZmVjdCB0byBicmluZyB3aXRoIGhpbTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg8+FzrzOss6/zrvOteG9u861zrnOvTwvZm9yZWlnbj4gaXMgdGhlIGNvbmplY3R1cmUgb2YgRi4gUG9ydHVzIGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg8+FzrzOss6/z4XOu8614b27zrXOuc69PC9mb3JlaWduPiwgYW5kIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs614by0z4HOtc69zrE8L2ZvcmVpZ24+IHRoYXQgb2YgU2NobmVpZGVyIGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvITPgc+BzrXOvc6xLjwvZm9yZWlnbj4gVGhlIHByZWZlY3QgdG9vayBoaXMgbWVhbHMgd2l0aCB0aGUgY2xhc3Mgb2Ygd2hpY2ggaGUgaGFkIGNoYXJnZS4gQnV0IFN0b2JhZXVzJyB0ZXh0IHJ1bnMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4Phv5bPhOG9uc69IM6zzrUgzrzhvbTOvSDPhM6/z4POv+G/ps+Ezr/OvSDhvJTPh861zrnOvTwvZm9yZWlnbj4gKGZvciB3aGljaCByZWFkIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM+DzrjhvbfOtc65zr08L2ZvcmVpZ24+KSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg8+Fzr3Otc6yzr/hvbvOu861z4XOtc69IOG9oc+CPC9mb3JlaWduPiwg4oCcaGUgcmVjb21tZW5kZWQgdGhlbSB0byBlYXQgc28gbW9kZXJhdGVseSB0aGF0IHRoZXnigJ07IGFuZCB0aGlzIGlzIHByb2JhYmx5IHJpZ2h0Ljwvbm90ZT4gc3VjaCBhIG1vZGVyYXRlIGFtb3VudCBvZiBpdCB0aGF0IHRoZSBib3lzIHdvdWxkIG5ldmVyIHN1ZmZlciBmcm9tIHJlcGxldGlvbiwgYW5kIHdvdWxkIGtub3cgd2hhdCBpdCB3YXMgdG8gZ28gd2l0aCB0aGVpciBodW5nZXIgdW5zYXRpc2ZpZWQ7IGZvciBoZSBiZWxpZXZlZCB0aGF0IHRob3NlIHdobyB1bmRlcndlbnQgdGhpcyB0cmFpbmluZyB3b3VsZCBiZSBiZXR0ZXIgYWJsZSB0byBjb250aW51ZSB3b3JraW5nIG9uIGFuIGVtcHR5IHN0b21hY2gsIGlmIG5lY2Vzc2FyeSwgYW5kIHdvdWxkIGJlIGNhcGFibGUgb2YgY2Fycnlpbmcgb24gbG9uZ2VyIHdpdGhvdXQgZXh0cmEgZm9vZCwgaWYgdGhlIHdvcmQgb2YgY29tbWFuZCB3ZXJlIGdpdmVuIHRvIGRvIHNvOiB0aGV5IHdvdWxkIHdhbnQgZmV3ZXIgZGVsaWNhY2llcyBhbmQgd291bGQgYWNjb21tb2RhdGUgdGhlbXNlbHZlcyBtb3JlIHJlYWRpbHkgdG8gYW55dGhpbmcgcHV0IGJlZm9yZSB0aGVtLCBhbmQgYXQgdGhlIHNhbWUgdGltZSB3b3VsZCBlbmpveSBiZXR0ZXIgaGVhbHRoLiAKPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PPhc68zrLOv867zrXhvbvOtc65zr08L2ZvcmVpZ24+IGlzIHRoZSBjb25qZWN0dXJlIG9mIEYuIFBvcnR1cyBmb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PPhc68zrLOv8+FzrvOteG9u861zrnOvTwvZm9yZWlnbj4sIGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OteG8tM+BzrXOvc6xPC9mb3JlaWduPiB0aGF0IG9mIFNjaG5laWRlciBmb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byEz4HPgc61zr3OsS48L2ZvcmVpZ24+IFRoZSBwcmVmZWN0IHRvb2sgaGlzIG1lYWxzIHdpdGggdGhlIGNsYXNzIG9mIHdoaWNoIGhlIGhhZCBjaGFyZ2UuIEJ1dCBTdG9iYWV1cycgdGV4dCBydW5zIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+D4b+Wz4ThvbnOvSDOs861IM684b20zr0gz4TOv8+Dzr/hv6bPhM6/zr0g4byUz4fOtc65zr08L2ZvcmVpZ24+IChmb3Igd2hpY2ggcmVhZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDPg8644b23zrXOuc69PC9mb3JlaWduPikgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PPhc69zrXOss6/4b27zrvOtc+FzrXOvSDhvaHPgjwvZm9yZWlnbj4sIOKAnGhlIHJlY29tbWVuZGVkIHRoZW0gdG8gZWF0IHNvIG1vZGVyYXRlbHkgdGhhdCB0aGV54oCdOyBhbmQgdGhpcyBpcyBwcm9iYWJseSByaWdodC48L3RyYW5zbGF0aW9uPg=="
translation['2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkhlIGFsc28gdGhvdWdodCB0aGF0IGEgZGlldCB3aGljaCBtYWRlIHRoZWlyIGJvZGllcyBzbGltIHdvdWxkIGRvIG1vcmUgdG8gaW5jcmVhc2UgdGhlaXIgaGVpZ2h0IHRoYW4gb25lIHRoYXQgY29uc2lzdGVkIG9mIGZsZXNoLWZvcm1pbmcgZm9vZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhlIG90aGVyIGhhbmQsIGxlc3QgdGhleSBzaG91bGQgZmVlbCB0b28gbXVjaCB0aGUgcGluY2ggb2YgaHVuZ2VyLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmFiYXNpczwvdGl0bGU+LCA0LjYuMTQuPC9ub3RlPiB3aGlsZSBub3QgZ2l2aW5nIHRoZW0gdGhlIG9wcG9ydHVuaXR5IG9mIHRha2luZyB3aGF0IHRoZXkgd2FudGVkIHdpdGhvdXQgdHJvdWJsZSBoZSBhbGxvd2VkIHRoZW0gdG8gYWxsZXZpYXRlIHRoZWlyIGh1bmdlciBieSBzdGVhbGluZyBzb21ldGhpbmcuIAo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmFiYXNpczwvdGl0bGU+LCA0LjYuMTQuPC90cmFuc2xhdGlvbj4="
translation['2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkl0IHdhcyBub3Qgb24gYWNjb3VudCBvZiBhIGRpZmZpY3VsdHkgaW4gcHJvdmlkaW5nIGZvciB0aGVtIHRoYXQgaGUgZW5jb3VyYWdlZCB0aGVtIHRvIGdldCB0aGVpciBmb29kIGJ5IHRoZWlyIG93biBjdW5uaW5nLiBObyBvbmUsIEkgc3VwcG9zZSwgY2FuIGZhaWwgdG8gc2VlIHRoYXQuIE9idmlvdXNseSBhIG1hbiB3aG8gaW50ZW5kcyB0byB0YWtlIHRvIHRoaWV2aW5nIG11c3Qgc3BlbmQgc2xlZXBsZXNzIG5pZ2h0cyBhbmQgcGxheSB0aGUgZGVjZWl2ZXIgYW5kIGxpZSBpbiBhbWJ1c2ggYnkgZGF5LCBhbmQgbW9yZW92ZXIsIGlmIGhlIG1lYW5zIHRvIG1ha2UgYSBjYXB0dXJlLCBoZSBtdXN0IGhhdmUgc3BpZXMgcmVhZHkuIFRoZXJlIGNhbiBiZSBubyBkb3VidCB0aGVuLCB0aGF0IGFsbCB0aGlzIGVkdWNhdGlvbiB3YXMgcGxhbm5lZCBieSBoaW0gaW4gb3JkZXIgdG8gbWFrZSB0aGUgYm95cyBtb3JlIHJlc291cmNlZnVsIGluIGdldHRpbmcgc3VwcGxpZXMsIGFuZCBiZXR0ZXIgZmlnaHRpbmcgbWVuLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Tb21lb25lIG1heSBhc2s6IAo8L3RyYW5zbGF0aW9uPg=="
translation['2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aHksIGlmIGhlIGJlbGlldmVkIHN0ZWFsaW5nIHRvIGJlIGEgZmluZSB0aGluZywgZGlkIGhlIGhhdmUgdGhlIGJveSB3aG8gd2FzIGNhdWdodCBiZWF0ZW4gd2l0aCBtYW55IHN0cmlwZXM/IEkgcmVwbHk6IEJlY2F1c2UgaW4gYWxsIGNhc2VzIG1lbiBwdW5pc2ggYSBsZWFybmVyIGZvciBub3QgY2Fycnlpbmcgb3V0IHByb3Blcmx5IHdoYXRldmVyIGhlIGlzIHRhdWdodCB0byBkby4gU28gdGhlIFNwYXJ0YW5zIGNoYXN0aXNlIHRob3NlIHdobyBnZXQgY2F1Z2h0IGZvciBzdGVhbGluZyBiYWRseS4gCjwvdHJhbnNsYXRpb24+"
translation['2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkhlIG1hZGUgaXQgYSBwb2ludCBvZiBob25vdXIgdG8gc3RlYWwgYXMgbWFueSBjaGVlc2VzIGFzIHBvc3NpYmxlIFtmcm9tIHRoZSBhbHRhciBvZiBBcnRlbWlzIE9ydGhpYV0sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkF0IHRoaXMgYWx0YXIgdGhlIGFubnVhbCBzY291cmdpbmcgb2YgU3BhcnRhbiBib3lzIGFuZCB5b3V0aHMgdG9vayBwbGFjZSwgYWNjb3JkaW5nIHRvIFBsdXRhcmNoIGFuZCBQYXVzYW5pYXM7IGJ1dCB0aGlzIGN1c3RvbSBzZWVtcyB0byBoYXZlIG5vIGNvbm5leGlvbiB3aXRoIHRoYXQgb2YgcHVuaXNoaW5nIHRob3NlIHdobyB3ZXJlIGNhdWdodCB0aGlldmluZy4gSXQgaXMgbm90IGltcHJvYmFibGUgdGhhdCB0aGUgd2hvbGUgb2YgdGhpcyBzZW50ZW5jZSBpcyBhbiBpbnRlcnBvbGF0aW9uOyBpZiBub3QsIHRoZSB0ZXh0IGlzIGNvcnJ1cHQgYmV5b25kIHJlc3RvcmF0aW9uLjwvbm90ZT4gYnV0IGFwcG9pbnRlZCBvdGhlcnMgdG8gc2NvdXJnZSB0aGUgdGhpZXZlcywgbWVhbmluZyB0byBzaG93IHRoZXJlYnkgdGhhdCBieSBlbmR1cmluZyBwYWluIGZvciBhIHNob3J0IHRpbWUgb25lIG1heSB3aW4gbGFzdGluZyBmYW1lIGFuZCBmZWxpY2l0eS4gSXQgaXMgc2hvd24gaGVyZWluIHRoYXQgd2hlcmUgdGhlcmUgaXMgbmVlZCBvZiBzd2lmdG5lc3MsIHRoZSBzbG90aGZ1bCwgYXMgdXN1YWwsIGdldHMgbGl0dGxlIHByb2ZpdCBhbmQgbWFueSB0cm91Ymxlcy4KPC90cmFuc2xhdGlvbj4="
translation['2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gb3JkZXIgdGhhdCB0aGUgYm95cyBtaWdodCBuZXZlciBsYWNrIGEgcnVsZXIgZXZlbiB3aGVuIHRoZSBXYXJkZW4gd2FzIGF3YXksIGhlIGdhdmUgYXV0aG9yaXR5IHRvIGFueSBjaXRpemVuIHdobyBjaGFuY2VkIHRvIGJlIHByZXNlbnQgdG8gcmVxdWlyZSB0aGVtIHRvIGRvIGFueXRoaW5nIHRoYXQgaGUgdGhvdWdodCByaWdodCwgYW5kIHRvIHB1bmlzaCB0aGVtIGZvciBhbnkgbWlzY29uZHVjdC4gVGhpcyBoYWQgdGhlIGVmZmVjdCBvZiBtYWtpbmcgdGhlIGJveXMgbW9yZSByZXNwZWN0ZnVsOyBpbiBmYWN0IGJveXMgYW5kIG1lbiBhbGlrZSByZXNwZWN0IHRoZWlyIHJ1bGVycyBhYm92ZSBldmVyeXRoaW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhhdCBhIHJ1bGVyIG1pZ2h0IG5vdCBiZSBsYWNraW5nIHRvIHRoZSBib3lzIGV2ZW4gd2hlbiBubyBncm93biBtYW4gaGFwcGVuZWQgdG8gYmUgcHJlc2VudCwgaGUgc2VsZWN0ZWQgdGhlIGtlZW5lc3Qgb2YgdGhlIHByZWZlY3RzLCBhbmQgZ2F2ZSB0byBlYWNoIHRoZSBjb21tYW5kIG9mIGEgZGl2aXNpb24uIEFuZCBzbyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gdGhlIGJveXMgYXJlIG5ldmVyIHdpdGhvdXQgYSBydWxlci4KPC90cmFuc2xhdGlvbj4="
translation['2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSB0aGluayBJIG91Z2h0IHRvIHNheSBzb21ldGhpbmcgYWxzbyBhYm91dCBpbnRpbWFjeSB3aXRoIGJveXMsIHNpbmNlIHRoaXMgbWF0dGVyIGFsc28gaGFzIGEgYmVhcmluZyBvbiBlZHVjYXRpb24uIEluIG90aGVyIEdyZWVrIHN0YXRlcywgZm9yIGluc3RhbmNlIGFtb25nIHRoZSBCb2VvdGlhbnMsIG1hbiBhbmQgYm95IGxpdmUgdG9nZXRoZXIsIGxpa2UgbWFycmllZCBwZW9wbGU7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlN5bXBvc2l1bTwvdGl0bGU+LCA4LjM0Ljwvbm90ZT4gZWxzZXdoZXJlLCBhbW9uZyB0aGUgRWxlaWFucywgZm9yIGV4YW1wbGUsIGNvbnNlbnQgaXMgd29uIGJ5IG1lYW5zIG9mIGZhdm91cnMuIFNvbWUsIG9uIHRoZSBvdGhlciBoYW5kLCBlbnRpcmVseSBmb3JiaWQgc3VpdG9ycyB0byB0YWxrIHdpdGggYm95cy4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U3ltcG9zaXVtPC90aXRsZT4sIDguMzQuPC90cmFuc2xhdGlvbj4="
translation['2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGN1c3RvbXMgaW5zdGl0dXRlZCBieSBMeWN1cmd1cyB3ZXJlIG9wcG9zZWQgdG8gYWxsIG9mIHRoZXNlLiBJZiBzb21lb25lLCBiZWluZyBoaW1zZWxmIGFuIGhvbmVzdCBtYW4sIGFkbWlyZWQgYSBib3kncyBzb3VsIGFuZCB0cmllZCB0byBtYWtlIG9mIGhpbSBhbiBpZGVhbCBmcmllbmQgd2l0aG91dCByZXByb2FjaCBhbmQgdG8gYXNzb2NpYXRlIHdpdGggaGltLCBoZSBhcHByb3ZlZCwgYW5kIGJlbGlldmVkIGluIHRoZSBleGNlbGxlbmNlIG9mIHRoaXMga2luZCBvZiB0cmFpbmluZy4gQnV0IGlmIGl0IHdhcyBjbGVhciB0aGF0IHRoZSBhdHRyYWN0aW9uIGxheSBpbiB0aGUgYm95J3Mgb3V0d2FyZCBiZWF1dHksIGhlIGJhbm5lZCB0aGUgY29ubmV4aW9uIGFzIGFuIGFib21pbmF0aW9uOyBhbmQgdGh1cyBoZSBjYXVzZWQgbG92ZXJzIHRvIGFic3RhaW4gZnJvbSBib3lzIG5vIGxlc3MgdGhhbiBwYXJlbnRzIGFic3RhaW4gZnJvbSBzZXh1YWwgaW50ZXJjb3Vyc2Ugd2l0aCB0aGVpciBjaGlsZHJlbiBhbmQgYnJvdGhlcnMgYW5kIHNpc3RlcnMgd2l0aCBlYWNoIG90aGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSBhbSBub3Qgc3VycHJpc2VkLCBob3dldmVyLCB0aGF0IHBlb3BsZSByZWZ1c2UgdG8gYmVsaWV2ZSB0aGlzLiBGb3IgaW4gbWFueSBzdGF0ZXMgdGhlIGxhd3MgYXJlIG5vdCBvcHBvc2VkIHRvIHRoZSBpbmR1bGdlbmNlIG9mIHRoZXNlIGFwcGV0aXRlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSBoYXZlIG5vdyBkZWFsdCB3aXRoIHRoZSBTcGFydGFuIHN5c3RlbSBvZiBlZHVjYXRpb24sIGFuZCB0aGF0IG9mIHRoZSBvdGhlciBHcmVlayBzdGF0ZXMuIFdoaWNoIHN5c3RlbSB0dXJucyBvdXQgbWVuIG1vcmUgb2JlZGllbnQsIG1vcmUgcmVzcGVjdGZ1bCwgYW5kIG1vcmUgc3RyaWN0bHkgdGVtcGVyYXRlLCBhbnlvbmUgd2hvIGNob29zZXMgbWF5IG9uY2UgbW9yZSBqdWRnZSBmb3IgaGltc2VsZi4KPC90cmFuc2xhdGlvbj4="
translation['3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIGEgYm95IGNlYXNlcyB0byBiZSBhIGNoaWxkLCBhbmQgYmVnaW5zIHRvIGJlIGEgbGFkLCBvdGhlcnMgcmVsZWFzZSBoaW0gZnJvbSBoaXMgbW9yYWwgdHV0b3IgYW5kIGhpcyBzY2hvb2xtYXN0ZXI6IGhlIGlzIHRoZW4gbm8gbG9uZ2VyIHVuZGVyIGEgcnVsZXIgYW5kIGlzIGFsbG93ZWQgdG8gZ28gaGlzIG93biB3YXkuIEhlcmUgYWdhaW4gTHljdXJndXMgaW50cm9kdWNlZCBhIHdob2xseSBkaWZmZXJlbnQgc3lzdGVtLiAKPC90cmFuc2xhdGlvbj4="
translation['3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZvciBoZSBvYnNlcnZlZCB0aGF0IGF0IHRoaXMgdGltZSBvZiBsaWZlIHNlbGYtd2lsbCBtYWtlcyBzdHJvbmcgcm9vdCBpbiBhIGJveSdzIG1pbmQsIGEgdGVuZGVuY3kgdG8gaW5zb2xlbmNlIG1hbmlmZXN0cyBpdHNlbGYsIGFuZCBhIGtlZW4gYXBwZXRpdGUgZm9yIHBsZWFzdXJlIGluIGRpZmZlcmVudCBmb3JtcyB0YWtlcyBwb3NzZXNzaW9uIG9mIGhpbS4gQXQgdGhpcyBzdGFnZSwgdGhlcmVmb3JlLCBoZSBpbXBvc2VkIG9uIGhpbSBhIGNlYXNlbGVzcyByb3VuZCBvZiB3b3JrLCBhbmQgY29udHJpdmVkIGEgY29uc3RhbnQgcm91bmQgb2Ygb2NjdXBhdGlvbi4gCjwvdHJhbnNsYXRpb24+"
translation['3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBwZW5hbHR5IGZvciBzaGlya2luZyB0aGUgZHV0aWVzIHdhcyBleGNsdXNpb24gZnJvbSBhbGwgZnV0dXJlIGhvbm91cnMuIEhlIHRodXMgY2F1c2VkIG5vdCBvbmx5IHRoZSBwdWJsaWMgYXV0aG9yaXRpZXMsIGJ1dCB0aGVpciByZWxhdGlvbnMgYWxzbyB0byB0YWtlIHBhaW5zIHRoYXQgdGhlIGxhZHMgZGlkIG5vdCBpbmN1ciB0aGUgY29udGVtcHQgb2YgdGhlaXIgZmVsbG93IGNpdGl6ZW5zIGJ5IGZsaW5jaGluZyBmcm9tIHRoZWlyIHRhc2tzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Nb3Jlb3Zlciwgd2lzaGluZyBtb2Rlc3R5IHRvIGJlIGZpcm1seSByb290ZWQgaW4gdGhlbSwgaGUgcmVxdWlyZWQgdGhlbSB0byBrZWVwIHRoZWlyIGhhbmRzIHVuZGVyIHRoZWlyIGNsb2FrcywgdG8gd2FsayBpbiBzaWxlbmNlLCBub3QgdG8gbG9vayBhYm91dCB0aGVtLCBidXQgdG8gZml4IHRoZWlyIGV5ZXMgb24gdGhlIGdyb3VuZC4gVGhlIGVmZmVjdCBvZiB0aGlzIHJ1bGUgaGFzIGJlZW4gdG8gcHJvdmUgdGhhdCBldmVuIGluIHRoZSBtYXR0ZXIgb2YgZGVjb3J1bSB0aGUgbWFsZSBpcyBzdHJvbmdlciB0aGFuIHRoZSBmZW1hbGUgc2V4LiAKPC90cmFuc2xhdGlvbj4="
translation['3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkF0IGFueSByYXRlIHlvdSB3b3VsZCBleHBlY3QgYSBzdG9uZSBpbWFnZSB0byB1dHRlciBhIHNvdW5kIHNvb25lciB0aGFuIHRob3NlIGxhZHM7IHlvdSB3b3VsZCBzb29uZXIgYXR0cmFjdCB0aGUgYXR0ZW50aW9uIG9mIGEgYnJvbnplIGZpZ3VyZTsgeW91IG1pZ2h0IHRoaW5rIHRoZW0gbW9yZSBtb2Rlc3QgZXZlbiB0aGFuIGEgeW91bmcgYnJpZGUgaW4gdGhlIGJyaWRhbCBjaGFtYmVyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Mb25naW51cyBhbmQgU3RvYmFldXMgcXVvdGUgdGhpcyB3aXRoIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9gM+GzrjOsc67zrzOv+G/ls+CPC9mb3JlaWduPiwg4oCcZXllcyzigJ0gaW4gcGxhY2Ugb2YgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrjOsc674b2xzrzOv865z4I8L2ZvcmVpZ24+LCDigJxicmlkYWwgY2hhbWJlcnPigJ07IGFuZCB0aGUgZm9ybWVyIGNlbnN1cmVzIHRoZSB1c2Ugb2YgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DOsc+BzrjhvbPOvc+Jzr08L2ZvcmVpZ24+IGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6/z4Hhv7bOvTwvZm9yZWlnbj4sIG1lYW5pbmcg4oCccHVwaWxz4oCdIG9mIHRoZSBleWUuPC9ub3RlPiBXaGVuIHRoZXkgaGF2ZSB0YWtlbiB0aGVpciBwbGFjZSBhdCBhIHB1YmxpYyBtZWFsLCB5b3UgbXVzdCBiZSBjb250ZW50IGlmIHlvdSBjYW4gZ2V0IGFuIGFuc3dlciB0byBhIHF1ZXN0aW9uLjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9gM+GzrjOsc67zrzOv+G/ls+CPC9mb3JlaWduPiwg4oCcZXllcyzigJ0gaW4gcGxhY2Ugb2YgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrjOsc674b2xzrzOv865z4I8L2ZvcmVpZ24+LCDigJxicmlkYWwgY2hhbWJlcnPigJ07IGFuZCB0aGUgZm9ybWVyIGNlbnN1cmVzIHRoZSB1c2Ugb2YgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DOsc+BzrjhvbPOvc+Jzr08L2ZvcmVpZ24+IGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6/z4Hhv7bOvTwvZm9yZWlnbj4sIG1lYW5pbmcg4oCccHVwaWxz4oCdIG9mIHRoZSBleWUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlN1Y2ggd2FzIHRoZSBjYXJlIHRoYXQgaGUgYmVzdG93ZWQgb24gdGhlIGdyb3dpbmcgbGFkcy4KPC90cmFuc2xhdGlvbj4="
translation['4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gb3IgdGhvc2Ugd2hvIGhhZCByZWFjaGVkIHRoZSBwcmltZSBvZiBsaWZlIGhlIHNob3dlZCBieSBmYXIgdGhlIGRlZXBlc3Qgc29saWNpdHVkZS4gRm9yIGhlIGJlbGlldmVkIHRoYXQgaWYgdGhlc2Ugd2VyZSBvZiB0aGUgcmlnaHQgc3RhbXAgdGhleSBtdXN0IGV4ZXJjaXNlIGEgcG93ZXJmdWwgaW5mbHVlbmNlIGZvciBnb29kIG9uIHRoZSBzdGF0ZS4gCjwvdHJhbnNsYXRpb24+"
translation['4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkhlIHNhdyB0aGF0IHdoZXJlIHRoZSBzcGlyaXQgb2Ygcml2YWxyeTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJvcGFlZGlhPC90aXRsZT4sIDIuMS4yMi48L25vdGU+IGlzIHN0cm9uZ2VzdCBhbW9uZyB0aGUgcGVvcGxlLCB0aGVyZSB0aGUgY2hvcnVzZXMgYXJlIG1vc3Qgd29ydGggaGVhcmluZyBhbmQgdGhlIGF0aGxldGljIGNvbnRlc3RzIGFmZm9yZCB0aGUgZmluZXN0IHNwZWN0YWNsZS4gSGUgYmVsaWV2ZWQsIHRoZXJlZm9yZSwgdGhhdCBpZiBoZSBjb3VsZCBtYXRjaCB0aGUgeW91bmcgbWVuIHRvZ2V0aGVyIGluIGEgc3RyaWZlIG9mIHZhbG91ciwgdGhleSB0b28gd291bGQgcmVhY2ggYSBoaWdoIGxldmVsIG9mIG1hbmx5IGV4Y2VsbGVuY2UuPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lyb3BhZWRpYTwvdGl0bGU+LCAyLjEuMjIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cm9wYWVkaWE8L3RpdGxlPiwgNy4yLjI2Ljwvbm90ZT4gSSB3aWxsIHByb2NlZWQgdG8gZXhwbGFpbiwgdGhlcmVmb3JlLCBob3cgaGUgaW5zdGl0dXRlZCBtYXRjaGVzIGJldHdlZW4gdGhlIHlvdW5nIG1lbi4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lyb3BhZWRpYTwvdGl0bGU+LCA3LjIuMjYuPC90cmFuc2xhdGlvbj4="
translation['4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgRXBob3JzLCB0aGVuLCBwaWNrIG91dCB0aHJlZSBvZiB0aGUgdmVyeSBiZXN0IGFtb25nIHRoZW0uIFRoZXNlIHRocmVlIGFyZSBjYWxsZWQgQ29tbWFuZGVycyBvZiB0aGUgR3VhcmQuIEVhY2ggb2YgdGhlbSBlbnJvbHMgYSBodW5kcmVkIG90aGVycywgc3RhdGluZyBoaXMgcmVhc29ucyBmb3IgcHJlZmVycmluZyBvbmUgYW5kIHJlamVjdGluZyBhbm90aGVyLiAKPC90cmFuc2xhdGlvbj4="
translation['4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZSByZXN1bHQgaXMgdGhhdCB0aG9zZSB3aG8gZmFpbCB0byB3aW4gdGhlIGhvbm91ciBhcmUgYXQgd2FyIGJvdGggd2l0aCB0aG9zZSB3aG8gc2VudCB0aGVtIGF3YXkgYW5kIHdpdGggdGhlaXIgc3VjY2Vzc2Z1bCByaXZhbHM7IGFuZCB0aGV5IGFyZSBvbiB0aGUgd2F0Y2ggZm9yIGFueSBsYXBzZSBmcm9tIHRoZSBjb2RlIG9mIGhvbm91ci4KPC90cmFuc2xhdGlvbj4="
translation['4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZXJlIHRoZW4geW91IGZpbmQgdGhhdCBraW5kIG9mIHN0cmlmZSB0aGF0IGlzIGRlYXJlc3QgdG8gdGhlIGdvZHMsIGFuZCBpbiB0aGUgaGlnaGVzdCBzZW5zZSBwb2xpdGljYWwgLS0gdGhlIHN0cmlmZSB0aGF0IHNldHMgdGhlIHN0YW5kYXJkIG9mIGEgYnJhdmUgbWFuJ3MgY29uZHVjdDsgYW5kIGluIHdoaWNoIGVpdGhlciBwYXJ0eSBleGVydHMgaXRzZWxmIHRvIHRoZSBlbmQgdGhhdCBpdCBtYXkgbmV2ZXIgZmFsbCBiZWxvdyBpdHMgYmVzdCwgYW5kIHRoYXQsIHdoZW4gdGhlIHRpbWUgY29tZXMsIGV2ZXJ5IG1lbWJlciBvZiBpdCBtYXkgc3VwcG9ydCB0aGUgc3RhdGUgd2l0aCBhbGwgaGlzIG1pZ2h0Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Ib3JzZW1hbnNoaXA8L3RpdGxlPiwgMi4xLjwvbm90ZT4gCjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkhvcnNlbWFuc2hpcDwvdGl0bGU+LCAyLjEuPC90cmFuc2xhdGlvbj4="
translation['4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGV5IGFyZSBib3VuZCwgdG9vLCB0byBrZWVwIHRoZW1zZWx2ZXMgZml0LCBmb3Igb25lIGVmZmVjdCBvZiB0aGUgc3RyaWZlIGlzIHRoYXQgdGhleSBzcGFyIHdoZW5ldmVyIHRoZXkgbWVldDsgYnV0IGFueW9uZSBwcmVzZW50IGhhcyBhIHJpZ2h0IHRvIHBhcnQgdGhlIGNvbWJhdGFudHMuIElmIGFueW9uZSByZWZ1c2VzIHRvIG9iZXkgdGhlIG1lZGlhdG9yIHRoZSBXYXJkZW4gdGFrZXMgaGltIHRvIHRoZSBFcGhvcnM7IGFuZCB0aGV5IGZpbmUgaGltIGhlYXZpbHksIGluIG9yZGVyIHRvIG1ha2UgaGltIHJlYWxpemUgdGhhdCBoZSBtdXN0IG5ldmVyIHlpZWxkIHRvIGEgc3VkZGVuIGltcHVsc2UgdG8gZGlzb2JleSB0aGUgbGF3cy4KPC90cmFuc2xhdGlvbj4="
translation['4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UbyBjb21lIHRvIHRob3NlIHdobyBoYXZlIHBhc3NlZCB0aGUgdGltZSBvZiB5b3V0aCwgYW5kIGFyZSBub3cgZWxpZ2libGUgdG8gaG9sZCB0aGUgZ3JlYXQgb2ZmaWNlcyBvZiBzdGF0ZS4gV2hpbGUgYWJzb2x2aW5nIHRoZXNlIGZyb20gdGhlIGR1dHkgb2YgYmVzdG93aW5nIGZ1cnRoZXIgYXR0ZW50aW9uIG9uIHRoZWlyIGJvZGlseSBzdHJlbmd0aCwgdGhlIG90aGVyIEdyZWVrcyByZXF1aXJlIHRoZW0gdG8gY29udGludWUgc2VydmluZyBpbiB0aGUgYXJteS4gQnV0IEx5Y3VyZ3VzIGVzdGFibGlzaGVkIHRoZSBwcmluY2lwbGUgdGhhdCBmb3IgY2l0aXplbnMgb2YgdGhhdCBhZ2UsIGh1bnRpbmcgd2FzIHRoZSBub2JsZXN0IG9jY3VwYXRpb24sIGV4Y2VwdCB3aGVuIHNvbWUgcHVibGljIGR1dHkgcHJldmVudGVkLCBpbiBvcmRlciB0aGF0IHRoZXkgbWlnaHQgYmUgYWJsZSB0byBzdGFuZCB0aGUgZmF0aWd1ZXMgb2Ygc29sZGllcmluZyBhcyB3ZWxsIGFzIHRoZSB5b3VuZ2VyIG1lbi4KPC90cmFuc2xhdGlvbj4="
translation['5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIGhhdmUgZ2l2ZW4gYSBmYWlybHkgY29tcGxldGUgYWNjb3VudCBvZiB0aGUgaW5zdGl0dXRpb25zIG9mIEx5Y3VyZ3VzIHNvIGZhciBhcyB0aGV5IGFwcGx5IHRvIHRoZSBzdWNjZXNzaXZlIHN0YWdlcyBvZiBsaWZlLiBJIHdpbGwgbm93IHRyeSB0byBkZXNjcmliZSB0aGUgc3lzdGVtIHRoYXQgaGUgZXN0YWJsaXNoZWQgZm9yIGFsbCBhbGlrZS4KPC90cmFuc2xhdGlvbj4="
translation['5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MeWN1cmd1cyBmb3VuZCB0aGUgU3BhcnRhbnMgYm9hcmRpbmcgYXQgaG9tZSBsaWtlIHRoZSBvdGhlciBHcmVla3MsIGFuZCBjYW1lIHRvIHRoZSBjb25jbHVzaW9uIHRoYXQgdGhlIGN1c3RvbSB3YXMgcmVzcG9uc2libGUgZm9yIGEgZ3JlYXQgZGVhbCBvZiBtaXNjb25kdWN0LiBIZSB0aGVyZWZvcmUgZXN0YWJsaXNoZWQgdGhlIHB1YmxpYyBtZXNzZXMgb3V0c2lkZSBpbiB0aGUgb3Blbiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+TGl0LiDigJxtb3ZlZCB0aGUgU3lza2FuaWEgb3V0IGludG8gdGhlIG9wZW4u4oCdIFNlZSBJbnRyb2R1Y3Rpb24gMy48L25vdGU+IHRoaW5raW5nIHRoYXQgdGhpcyB3b3VsZCByZWR1Y2UgZGlzcmVnYXJkIG9mIG9yZGVycyB0byBhIG1pbmltdW0uCjwvdHJhbnNsYXRpb24+"
translation['5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBhbW91bnQgb2YgZm9vZCBoZSBhbGxvd2VkIHdhcyBqdXN0IGVub3VnaCB0byBwcmV2ZW50IHRoZW0gZnJvbSBnZXR0aW5nIGVpdGhlciB0b28gbXVjaCBvciB0b28gbGl0dGxlIHRvIGVhdC4gQnV0IG1hbnkgZXh0cmFzIGFyZSBzdXBwbGllZCBmcm9tIHRoZSBzcG9pbHMgb2YgdGhlIGNoYXNlOyBhbmQgZm9yIHRoZXNlIHJpY2ggbWVuIHNvbWV0aW1lcyBzdWJzdGl0dXRlIHdoZWF0ZW4gYnJlYWQuIENvbnNlcXVlbnRseSB0aGUgYm9hcmQgaXMgbmV2ZXIgYmFyZSB1bnRpbCB0aGUgY29tcGFueSBicmVha3MgdXAsIGFuZCBuZXZlciBleHRyYXZhZ2FudGx5IGZ1cm5pc2hlZC4gCjwvdHJhbnNsYXRpb24+"
translation['5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFub3RoZXIgb2YgaGlzIHJlZm9ybXMgd2FzIHRoZSBhYm9saXRpb24gb2YgY29tcHVsc29yeSBkcmlua2luZyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QXQgdGhlIHB1YmxpYyBtZWFscyBlYWNoIGhhZCBoaXMgb3duIGN1cDogdGhlcmUgd2FzIG5vIHBhc3Npbmcgb2YgY3VwcyBhbG9uZyBhcyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gYW5kIGVsc2V3aGVyZS4gQ3JpdGlhcyBpbiA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BdGhlbmFjdXM8L3RpdGxlPiwgMTAuNDMyIEQgYW5kIDExLjQ2MyBFLjwvbm90ZT4gd2hpY2ggaXMgdGhlIHVuZG9pbmcgYWxpa2Ugb2YgYm9keSBvZiBtaW5kLiBCdXQgaGUgYWxsb3dlZCBldmVyeW9uZSB0byBkcmluayB3aGVuIGhlIHdhcyB0aGlyc3R5LCBiZWxpZXZpbmcgdGhhdCBkcmluayBpcyB0aGVuIG1vc3QgaGFybWxlc3MgYW5kIG1vc3Qgd2VsY29tZS48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gYW5kIGVsc2V3aGVyZS4gQ3JpdGlhcyBpbiA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BdGhlbmFjdXM8L3RpdGxlPiwgMTAuNDMyIEQgYW5kIDExLjQ2MyBFLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgd2hhdCBvcHBvcnR1bml0eSBkaWQgdGhlc2UgcHVibGljIG1lc3NlcyBnaXZlIGEgbWFuIHRvIHJ1aW4gaGltc2VsZiBvciBoaXMgZXN0YXRlIGJ5IGdsdXR0b255IG9yIHdpbmUtYmliYmluZz8gCjwvdHJhbnNsYXRpb24+"
translation['5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk5vdGUgdGhhdCBpbiBvdGhlciBzdGF0ZXMgdGhlIGNvbXBhbnkgdXN1YWxseSBjb25zaXN0cyBvZiBtZW4gb2YgdGhlIHNhbWUgYWdlLCB3aGVyZSBtb2Rlc3R5IGlzIGFwdCB0byBiZSBjb25zcGljdW91cyBieSBpdHMgYWJzZW5jZSBmcm9tIHRoZSBib2FyZC4gQnV0IEx5Y3VyZ3VzIGludHJvZHVjZWQgbWl4ZWQgY29tcGFuaWVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNvbWV0aGluZyBhcHBlYXJzIHRvIGJlIGxvc3QgYWZ0ZXIgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzr3hvbPOvM65zr7OtTwvZm9yZWlnbj4uIFNjaG5laWRlciBzdWdnZXN0ZWQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzr3hvbPOvM65zr7OtSDPhOG9sM+CIOG8oc67zrnOuuG9t86xz4Ig4b2lz4PPhM61PC9mb3JlaWduPiwg4oCcbWl4ZWQgdGhlIGFnZXMsIHNvIHRoYXQu4oCdPC9ub3RlPiBhdCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDOveG9s868zrnOvs61PC9mb3JlaWduPi4gU2NobmVpZGVyIHN1Z2dlc3RlZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDOveG9s868zrnOvs61IM+E4b2wz4Ig4byhzrvOuc664b23zrHPgiDhvaXPg8+EzrU8L2ZvcmVpZ24+LCDigJxtaXhlZCB0aGUgYWdlcywgc28gdGhhdC7igJ08cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIHNvIHRoYXQgdGhlIGV4cGVyaWVuY2Ugb2YgdGhlIGVsZGVycyBtaWdodCBjb250cmlidXRlIGxhcmdlbHkgdG8gdGhlIGVkdWNhdGlvbiBvZiB0aGUganVuaW9ycy4gCjwvdHJhbnNsYXRpb24+"
translation['5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkluIHBvaW50IG9mIGZhY3QsIGJ5IHRoZSBjdXN0b20gb2YgdGhlIGNvdW50cnkgdGhlIGNvbnZlcnNhdGlvbiBhdCB0aGUgcHVibGljIG1lYWxzIHR1cm5zIG9uIHRoZSBncmVhdCBkZWVkcyB3cm91Z2h0IGluIHRoZSBzdGF0ZSwgYW5kIHNvIHRoZXJlIGlzIGxpdHRsZSByb29tIGZvciBpbnNvbGVuY2Ugb3IgZHJ1bmtlbiB1cHJvYXIsIGZvciB1bnNlZW1seSBjb25kdWN0IG9yIGluZGVjZW50IHRhbGsuIAo8L3RyYW5zbGF0aW9uPg=="
translation['5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGUgc3lzdGVtIG9mIGZlZWRpbmcgaW4gdGhlIG9wZW4gaGFzIG90aGVyIGdvb2QgcmVzdWx0cy4gVGhleSBtdXN0IG5lZWRzIHdhbGsgaG9tZSBhZnRlciB0aGUgbWVhbCwgYW5kLCBvZiBjb3Vyc2UsIG11c3QgdGFrZSBnb29kIGNhcmUgbm90IHRvIHN0dW1ibGUgdW5kZXIgdGhlIGluZmx1ZW5jZSBvZiBkcmluayAoZm9yIHRoZXkga25vdyB0aGF0IHRoZXkgd2lsbCBub3Qgc3RheSBvbiBhdCB0aGUgdGFibGUpOyBhbmQgdGhleSBtdXN0IGRvIGluIHRoZSBkYXJrIHdoYXQgdGhleSBkbyBpbiB0aGUgZGF5LiBJbmRlZWQsIHRob3NlIHdobyBhcmUgc3RpbGwgaW4gdGhlIGFybXkgYXJlIG5vdCBldmVuIGFsbG93ZWQgYSB0b3JjaCB0byBndWlkZSB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MeWN1cmd1cyBoYWQgYWxzbyBvYnNlcnZlZCB0aGUgZWZmZWN0cyBvZiB0aGUgc2FtZSByYXRpb25zIG9uIHRoZSBoYXJkIHdvcmtlciBhbmQgdGhlIGlkbGVyOyB0aGF0IHRoZSBmb3JtZXIgaGFzIGEgZnJlc2ggY29sb3VyLCBmaXJtIGZsZXNoIGFuZCBwbGVudHkgb2Ygdmlnb3VyLCB3aGlsZSB0aGUgbGF0dGVyIGxvb2tzIHB1ZmZ5LCB1Z2x5IGFuZCB3ZWFrLiBIZSBzYXcgdGhlIGltcG9ydGFuY2Ugb2YgdGhpczsgYW5kIHJlZmxlY3RpbmcgdGhhdCBldmVuIGEgbWFuIHdobyB3b3JrcyBoYXJkIG9mIGhpcyBvd24gd2lsbCBiZWNhdXNlIGl0IGlzIGhpcyBkdXR5IHRvIGRvIHNvLCBsb29rcyBpbiBwcmV0dHkgZ29vZCBjb25kaXRpb24sIGhlIHJlcXVpcmVkIHRoZSBzZW5pb3IgZm9yIHRoZSB0aW1lIGJlaW5nIGluIGV2ZXJ5IGd5bW5hc2l1bSB0byB0YWtlIGNhcmUgdGhhdCB0aGUgdGFza3Mgc2V0IHNob3VsZCBiZSBub3QgdG9vIHNtYWxsIGZvciB0aGUgcmF0aW9ucyBhbGxvd2VkLiAKPC90cmFuc2xhdGlvbj4="
translation['5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBJIHRoaW5rIHRoYXQgaW4gdGhpcyBtYXR0ZXIgdG9vIGhlIHN1Y2NlZWRlZC4gU28gaXQgd291bGQgbm90IGJlIGVhc3kgdG8gZmluZCBoZWFsdGhpZXIgb3IgaGFuZGllciBtZW4gdGhhbiB0aGUgU3BhcnRhbnMuIEZvciB0aGVpciBleGVyY2lzZXMgdHJhaW4gdGhlIGxlZ3MsIGFybXMgYW5kIG5lY2sgZXF1YWxseS4KPC90cmFuc2xhdGlvbj4="
translation['6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGUgZm9sbG93aW5nIHJlc3BlY3RzLCBhZ2FpbiwgaGlzIGluc3RpdHV0aW9ucyBkaWZmZXIgZnJvbSB0aGUgb3JkaW5hcnkgdHlwZS4gSW4gbW9zdCBzdGF0ZXMgZXZlcnkgbWFuIGhhcyBjb250cm9sIG9mIGhpcyBvd24gY2hpbGRyZW4sIHNlcnZhbnRzIGFuZCBnb29kcy4gTHljdXJndXMgd2FudGVkIHRvIHNlY3VyZSB0aGF0IHRoZSBjaXRpemVucyBzaG91bGQgZ2V0IHNvbWUgYWR2YW50YWdlIGZyb20gb25lIGFub3RoZXIgd2l0aG91dCBkb2luZyBhbnkgaGFybS4gSGUgdGhlcmVmb3JlIGdhdmUgZXZlcnkgZmF0aGVyIGF1dGhvcml0eSBvdmVyIG90aGVyIG1lbidzIGNoaWxkcmVuIGFzIHdlbGwgYXMgb3ZlciBoaXMgb3duLiAKPC90cmFuc2xhdGlvbj4="
translation['6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gYSBtYW4ga25vd3MgdGhhdCBmYXRoZXJzIGhhdmUgdGhpcyBwb3dlciwgaGUgaXMgYm91bmQgdG8gcnVsZSB0aGUgY2hpbGRyZW4gb3ZlciB3aG9tIGhlIGV4ZXJjaXNlcyBhdXRob3JpdHkgYXMgaGUgd291bGQgd2lzaCBoaXMgb3duIHRvIGJlIHJ1bGVkLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgdGV4dCBvZiB0aGlzIHNlbnRlbmNlIGlzIG9wZW4gdG8gc3VzcGljaW9uLiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ov+G9l8+Ezr/OuSDPgM6xz4ThvbPPgc61z4I8L2ZvcmVpZ24+IGNhbiBoYXJkbHkgYmUgc291bmQuPC9ub3RlPiBJZiBhIGJveSB0ZWxscyBoaXMgb3duIGZhdGhlciB3aGVuIGhlIGhhcyBiZWVuIHdoaXBwZWQgYnkgYW5vdGhlciBmYXRoZXIsIGl0IGlzIGEgZGlzZ3JhY2UgaWYgdGhlIHBhcmVudCBkb2VzIG5vdCBnaXZlIGhpcyBzb24gYW5vdGhlciB3aGlwcGluZy4gU28gY29tcGxldGVseSBkbyB0aGV5IHRydXN0IG9uZSBhbm90aGVyIG5vdCB0byBnaXZlIGFueSBpbXByb3BlciBvcmRlcnMgdG8gdGhlIGNoaWxkcmVuLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ov+G9l8+Ezr/OuSDPgM6xz4ThvbPPgc61z4I8L2ZvcmVpZ24+IGNhbiBoYXJkbHkgYmUgc291bmQuPC90cmFuc2xhdGlvbj4="
translation['6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSBhbHNvIGdhdmUgdGhlIHBvd2VyIG9mIHVzaW5nIG90aGVyIG1lbidzIHNlcnZhbnRzIGluIGNhc2Ugb2YgbmVjZXNzaXR5OyBhbmQgbWFkZSBzcG9ydGluZyBkb2dzIGNvbW1vbiBwcm9wZXJ0eSB0byB0aGlzIGV4dGVudCwgdGhhdCBhbnkgd2hvIHdhbnQgdGhlbSBpbnZpdGUgdGhlaXIgbWFzdGVyLCBhbmQgaWYgaGUgaXMgZW5nYWdlZCBoaW1zZWxmIGhlIGlzIGdsYWQgdG8gc2VuZCB0aGUgaG91bmRzLiBBIHNpbWlsYXIgcGxhbiBvZiBib3Jyb3dpbmcgaXMgYXBwbGllZCB0byBob3JzZXMgYWxzbzsgdGh1cyBhIG1hbiB3aG8gZmFsbHMgaWxsIG9yIHdhbnRzIGEgY2FycmlhZ2Ugb3Igd2lzaGVzIHRvIGdldCB0byBzb21lIHBsYWNlIHF1aWNrbHksIGlmIGhlIHNlZXMgYSBob3JzZSBhbnl3aGVyZSwgdGFrZXMgYW5kIHVzZXMgaXQgY2FyZWZ1bGx5IGFuZCBkdWx5IHJlc3RvcmVzIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSBpcyB5ZXQgYW5vdGhlciBhbW9uZyB0aGUgY3VzdG9tcyBpbnN0aXR1dGVkIGJ5IGhpbSB3aGljaCBpcyBub3QgZm91bmQgaW4gb3RoZXIgY29tbXVuaXRpZXMuIEl0IHdhcyBpbnRlbmRlZCB0byBtZWV0IHRoZSBuZWVkcyBvZiBwYXJ0aWVzIGJlbGF0ZWQgaW4gdGhlIGh1bnRpbmctZmllbGQgd2l0aCBub3RoaW5nIHJlYWR5IHRvIGVhdC4gSGUgbWFkZSBhIHJ1bGUgdGhhdCB0aG9zZSB3aG8gaGFkIHBsZW50eSBzaG91bGQgbGVhdmUgYmVoaW5kIHRoZSBwcmVwYXJlZCBmb29kLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCBzbyBtdWNoIG9mIGl0IGFzIHJlbWFpbmVkIG92ZXIuPC9ub3RlPiBhbmQgdGhhdCB0aG9zZSB3aG8gbmVlZGVkIGZvb2Qgc2hvdWxkIGJyZWFrIHRoZSBzZWFscywgdGFrZSBhcyBtdWNoIGFzIHRoZXkgd2FudGVkLCBzZWFsIHVwIHRoZSByZXN0IGFuZCBsZWF2ZSBpdCBiZWhpbmQuCjwvdHJhbnNsYXRpb24+"
translation['6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZSByZXN1bHQgb2YgdGhpcyBtZXRob2Qgb2YgZ29pbmcgc2hhcmVzIHdpdGggb25lIGFub3RoZXIgaXMgdGhhdCBldmVuIHRob3NlIHdobyBoYXZlIGJ1dCBsaXR0bGUgcmVjZWl2ZSBhIHNoYXJlIG9mIGFsbCB0aGF0IHRoZSBjb3VudHJ5IHlpZWxkcyB3aGVuZXZlciB0aGV5IHdhbnQgYW55dGhpbmcuCjwvdHJhbnNsYXRpb24+"
translation['7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3IgZG9lcyB0aGlzIGV4aGF1c3QgdGhlIGxpc3Qgb2YgdGhlIGN1c3RvbXMgZXN0YWJsaXNoZWQgYnkgTHljdXJndXMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IHRoYXQgYXJlIGNvbnRyYXJ5IHRvIHRob3NlIG9mIHRoZSBvdGhlciBHcmVla3MuIEluIG90aGVyIHN0YXRlcywgSSBzdXBwb3NlLCBhbGwgbWVuIG1ha2UgYXMgbXVjaCBtb25leSBhcyB0aGV5IGNhbi4gT25lIGlzIGEgZmFybWVyLCBhbm90aGVyIGEgc2hpcC1vd25lciwgYW5vdGhlciBhIG1lcmNoYW50LCBhbmQgb3RoZXJzIGxpdmUgYnkgZGlmZmVyZW50IGhhbmRpY3JhZnRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gTHljdXJndXMgZm9yYmFkZSBmcmVlYm9ybiBjaXRpemVucyB0byBoYXZlIGFueXRoaW5nIHRvIGRvIHdpdGggYnVzaW5lc3MgYWZmYWlycy4gSGUgaW5zaXN0ZWQgb24gdGhlaXIgcmVnYXJkaW5nIGFzIHRoZWlyIG93biBjb25jZXJuIG9ubHkgdGhvc2UgYWN0aXZpdGllcyB0aGF0IG1ha2UgZm9yIGNpdmljIGZyZWVkb20uIAo8L3RyYW5zbGF0aW9uPg=="
translation['7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkluZGVlZCwgaG93IHNob3VsZCB3ZWFsdGggYmUgYSBzZXJpb3VzIG9iamVjdCB0aGVyZSwgd2hlbiBoZSBpbnNpc3RlZCBvbiBlcXVhbCBjb250cmlidXRpb25zIHRvIHRoZSBmb29kIHN1cHBseSBhbmQgb24gdGhlIHNhbWUgc3RhbmRhcmQgb2YgbGl2aW5nIGZvciBhbGwsIGFuZCB0aHVzIGN1dCBvZmYgdGhlIGF0dHJhY3Rpb24gb2YgbW9uZXkgZm9yIGluZHVsZ2VuY2UnIHNha2U/IFdoeSwgdGhlcmUgaXMgbm90IGV2ZW4gYW55IG5lZWQgb2YgbW9uZXkgdG8gc3BlbmQgb24gY2xvYWtzOiBmb3IgdGhlaXIgYWRvcm5tZW50IGlzIGR1ZSBub3QgdG8gdGhlIHByaWNlIG9mIHRoZWlyIGNsb3RoZXMsIGJ1dCB0byB0aGUgZXhjZWxsZW50IGNvbmRpdGlvbiBvZiB0aGVpciBib2RpZXMuIAo8L3RyYW5zbGF0aW9uPg=="
translation['7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk5vciB5ZXQgaXMgdGhlcmUgYW55IHJlYXNvbiBmb3IgYW1hc3NpbmcgbW9uZXkgaW4gb3JkZXIgdG8gc3BlbmQgaXQgb24gb25lJ3MgbWVzc21hdGVzOyBmb3IgaGUgbWFkZSBpdCBtb3JlIHJlc3BlY3RhYmxlIHRvIGhlbHAgb25lJ3MgZmVsbG93cyBieSB0b2lsaW5nIHdpdGggdGhlIGJvZHkgdGhhbiBieSBzcGVuZGluZyBtb25leSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QWdlc2lsYXVzPC90aXRsZT4sIDkuNi48L25vdGU+IHBvaW50aW5nIG91dCB0aGF0IHRvaWwgaXMgYW4gZW1wbG95bWVudCBvZiB0aGUgc291bCwgc3BlbmRpbmcgYW4gZW1wbG95bWVudCBvZiB3ZWFsdGguCjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkFnZXNpbGF1czwvdGl0bGU+LCA5LjYuPC90cmFuc2xhdGlvbj4="
translation['7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CeSBvdGhlciBlbmFjdG1lbnRzIGhlIHJlbmRlcmVkIGl0IGltcG9zc2libGUgdG8gbWFrZSBtb25leSBpbiB1bmZhaXIgd2F5cy4gSW4gdGhlIGZpcnN0IHBsYWNlIHRoZSBzeXN0ZW0gb2YgY29pbmFnZSB0aGF0IGhlIGVzdGFibGlzaGVkIHdhcyBvZiBzdWNoIGEga2luZCB0aGF0IGV2ZW4gYSBzdW0gb2YgdGVuIG1pbmFlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNvbWUgNDAgcG91bmRzIFthYm91dCB0aGUgeWVhciA8ZGF0ZSBhdXRobmFtZT0iMTkyNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iMTkyNSI+MTkyNTwvZGF0ZT5dLjwvbm90ZT4gY291bGQgbm90IGJlIGJyb3VnaHQgaW50byBhIGhvdXNlIHdpdGhvdXQgdGhlIG1hc3RlciBhbmQgdGhlIHNlcnZhbnRzIGJlaW5nIGF3YXJlIG9mIGl0OiB0aGUgbW9uZXkgd291bGQgZmlsbCBhIGxhcmdlIHNwYWNlIGFuZCBuZWVkIGEgd2Fnb24gdG8gZHJhdyBpdC4gCjxkYXRlIGF1dGhuYW1lPSIxOTI1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSIxOTI1Ij4xOTI1PC9kYXRlPl0uPC90cmFuc2xhdGlvbj4="
translation['7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk1vcmVvdmVyLCB0aGVyZSBpcyBhIHJpZ2h0IG9mIHNlYXJjaCBmb3IgZ29sZCBhbmQgc2lsdmVyLCBhbmQsIGluIHRoZSBldmVudCBvZiBkaXNjb3ZlcnksIHRoZSBwb3NzZXNzb3IgaXMgZmluZWQuIFdoeSwgdGhlbiwgc2hvdWxkIG1vbmV5LW1ha2luZyBiZSBhIHByZW9jY3VwYXRpb24gaW4gYSBzdGF0ZSB3aGVyZSB0aGUgcGFpbnMgb2YgaXRzIHBvc3Nlc3Npb24gYXJlIG1vcmUgdGhhbiB0aGUgcGxlYXN1cmVzIG9mIGl0cyBlbmpveW1lbnQ/CjwvdHJhbnNsYXRpb24+"
translation['8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UbyBjb250aW51ZTogd2UgYWxsIGtub3cgdGhhdCBvYmVkaWVuY2UgdG8gdGhlIG1hZ2lzdHJhdGVzIGFuZCB0aGUgbGF3cyBpcyBmb3VuZCBpbiB0aGUgaGlnaGVzdCBkZWdyZWUgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LiBGb3IgbXkgcGFydCwgaG93ZXZlciwgSSB0aGluayB0aGF0IEx5Y3VyZ3VzIGRpZCBub3Qgc28gbXVjaCBhcyBhdHRlbXB0IHRvIGludHJvZHVjZSB0aGlzIGhhYml0IG9mIGRpc2NpcGxpbmUgdW50aWwgaGUgaGFkIHNlY3VyZWQgYWdyZWVtZW50IGFtb25nIHRoZSBtb3N0IGltcG9ydGFudCBtZW4gaW4gdGhlIHN0YXRlLiAKPC90cmFuc2xhdGlvbj4="
translation['8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkkgYmFzZSBteSBpbmZlcmVuY2Ugb24gdGhlIGZvbGxvd2luZyBmYWN0cy4gSW4gb3RoZXIgc3RhdGVzIHRoZSBtb3N0IHBvd2VyZnVsIGNpdGl6ZW5zIGRvIG5vdCBldmVuIHdpc2ggaXQgdG8gYmUgdGhvdWdodCB0aGF0IHRoZXkgZmVhciB0aGUgbWFnaXN0cmF0ZXM6IHRoZXkgYmVsaWV2ZSBzdWNoIGZlYXIgdG8gYmUgYSBiYWRnZSBvZiBzbGF2ZXJ5LiBCdXQgYXQgU3BhcnRhIHRoZSBtb3N0IGltcG9ydGFudCBtZW4gc2hvdyB0aGUgdXRtb3N0IGRlZmVyZW5jZSB0byB0aGUgbWFnaXN0cmF0ZXM6IHRoZXkgcHJpZGUgdGhlbXNlbHZlcyBvbiB0aGVpciBodW1pbGl0eSwgb24gcnVubmluZyBpbnN0ZWFkIG9mIHdhbGtpbmcgdG8gYW5zd2VyIGFueSBjYWxsLCBpbiB0aGUgYmVsaWVmIHRoYXQsIGlmIHRoZXkgbGVhZCwgdGhlIHJlc3Qgd2lsbCBmb2xsb3cgYWxvbmcgdGhlIHBhdGggb2YgZWFnZXIgb2JlZGllbmNlLiBBbmQgc28gaXQgaGFzIHByb3ZlZC4KPC90cmFuc2xhdGlvbj4="
translation['8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyBwcm9iYWJsZSBhbHNvIHRoYXQgdGhlc2Ugc2FtZSBjaXRpemVucyBoZWxwZWQgdG8gc2V0IHVwIHRoZSBvZmZpY2Ugb2YgRXBob3IsIGhhdmluZyBjb21lIHRvIHRoZSBjb25jbHVzaW9uIHRoYXQgb2JlZGllbmNlIGlzIGEgdmVyeSBncmVhdCBibGVzc2luZyB3aGV0aGVyIGluIGEgc3RhdGUgb3IgYW4gYXJteSBvciBhIGhvdXNlaG9sZC4gRm9yIHRoZXkgdGhvdWdodCB0aGF0IHRoZSBncmVhdGVyIHRoZSBwb3dlciBvZiB0aGVzZSBtYWdpc3RyYXRlcyB0aGUgbW9yZSB0aGV5IHdvdWxkIGltcHJlc3MgdGhlIG1pbmRzIG9mIHRoZSBjaXRpemVucy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4TOv+G/piDhvZHPgM6xzrrOv+G9u861zrnOvTwvZm9yZWlnbj4gaXMgb21pdHRlZCBpbiB0aGUgdHJhbnNsYXRpb24uIEl0IGNhbiBoYXJkbHkgYmUgcmlnaHQ7IFNjaG5laWRlciByZW1vdmVkIGl0LCBhbmQgQ29iZXQgcHJvcG9zZWQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrXhvLDPgiDPhOG9uCDhvZHPgM6xzrrOv+G9u861zrnOvTwvZm9yZWlnbj4sIOKAnHNvIGFzIHRvIG1ha2UgdGhlbSBvYmVkaWVudC7igJ08L25vdGU+IAo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM6/4b+mIOG9kc+AzrHOus6/4b27zrXOuc69PC9mb3JlaWduPiBpcyBvbWl0dGVkIGluIHRoZSB0cmFuc2xhdGlvbi4gSXQgY2FuIGhhcmRseSBiZSByaWdodDsgU2NobmVpZGVyIHJlbW92ZWQgaXQsIGFuZCBDb2JldCBwcm9wb3NlZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OteG8sM+CIM+E4b24IOG9kc+AzrHOus6/4b27zrXOuc69PC9mb3JlaWduPiwg4oCcc28gYXMgdG8gbWFrZSB0aGVtIG9iZWRpZW50LuKAnTwvdHJhbnNsYXRpb24+"
translation['8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFjY29yZGluZ2x5LCB0aGUgRXBob3JzIGFyZSBjb21wZXRlbnQgdG8gZmluZSB3aG9tIHRoZXkgY2hvb3NlLCBhbmQgaGF2ZSBhdXRob3JpdHkgdG8gZW5hY3QgaW1tZWRpYXRlIHBheW1lbnQ6IHRoZXkgaGF2ZSBhdXRob3JpdHkgYWxzbyB0byBkZXByaXZlIHRoZSBtYWdpc3RyYXRlcyBvZiBvZmZpY2UsIGFuZCBldmVuIHRvIGltcHJpc29uIGFuZCBwcmVmZXIgYSBjYXBpdGFsIGNoYXJnZSBhZ2FpbnN0IHRoZW0uIFBvc3Nlc3Npbmcgc3VjaCB3aWRlIHBvd2VyIHRoZXkgZG8gbm90LCBsaWtlIG90aGVyIHN0YXRlcywgbGVhdmUgcGVyc29ucyBlbGVjdGVkIHRvIG9mZmljZSB0byBydWxlIGFzIHRoZXkgbGlrZSB0aHJvdWdob3V0IHRoZSB5ZWFyLCBidXQgaW4gY29tbW9uIHdpdGggZGVzcG90cyBhbmQgdGhlIHByZXNpZGVudHMgb2YgdGhlIGdhbWVzLCB0aGV5IG5vIHNvb25lciBzZWUgYW55b25lIGJyZWFraW5nIHRoZSBsYXcgdGhhbiB0aGV5IHB1bmlzaCB0aGUgb2ZmZW5kZXIuCjwvdHJhbnNsYXRpb24+"
translation['8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbW9uZyBtYW55IGV4Y2VsbGVudCBwbGFucyBjb250cml2ZWQgYnkgTHljdXJndXMgZm9yIGVuY291cmFnaW5nIHdpbGxpbmcgb2JlZGllbmNlIHRvIHRoZSBsYXdzIGFtb25nIHRoZSBjaXRpemVucywgSSB0aGluayBvbmUgb2YgdGhlIG1vc3QgZXhjZWxsZW50IHdhcyB0aGlzOiBiZWZvcmUgZGVsaXZlcmluZyBoaXMgbGF3cyB0byB0aGUgcGVvcGxlIGhlIHBhaWQgYSB2aXNpdCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERlbHBoaSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRGVscGhpIj5EZWxwaGk8L3BsYWNlTmFtZT4sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkhlcm9kb3R1cyAxLjY1Ljwvbm90ZT4gYWNjb21wYW5pZWQgYnkgdGhlIG1vc3QgaW1wb3J0YW50IGNpdGl6ZW5zLCBhbmQgaW5xdWlyZWQgb2YgdGhlIGdvZCB3aGV0aGVyIGl0IHdhcyBkZXNpcmFibGUgYW5kIGJldHRlciBmb3IgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IHRoYXQgc2hlIHNob3VsZCBvYmV5IHRoZSBsYXdzIHRoYXQgaGUgaGltc2VsZiBoYWQgZnJhbWVkLiBPbmx5IHdoZW4gdGhlIGdvZCBhbnN3ZXJlZCB0aGF0IGl0IHdhcyBiZXR0ZXIgaW4gZXZlcnkgd2F5IGRpZCBoZSBkZWxpdmVyIHRoZW0sIGFmdGVyIGVuYWN0aW5nIHRoYXQgdG8gcmVmdXNlIG9iZWRpZW5jZSB0byBsYXdzIGdpdmVuIGJ5IHRoZSBQeXRoaWFuIGdvZCB3YXMgbm90IG9ubHkgdW5sYXdmdWwsIGJ1dCB3aWNrZWQuCjwvdHJhbnNsYXRpb24+"
translation['9.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZm9sbG93aW5nIGFjaGlldmVtZW50IG9mIEx5Y3VyZ3VzLCBhZ2FpbiwgZGVzZXJ2ZXMgYWRtaXJhdGlvbi4gSGUgY2F1c2VkIGhpcyBwZW9wbGUgdG8gY2hvb3NlIGFuIGhvbm91cmFibGUgZGVhdGggaW4gcHJlZmVyZW5jZSB0byBhIGRpc2dyYWNlZnVsIGxpZmUuIEFuZCwgaW4gZmFjdCwgb25lIHdvdWxkIGZpbmQgb24gY29uc2lkZXJhdGlvbiB0aGF0IHRoZXkgYWN0dWFsbHkgbG9zZSBhIHNtYWxsZXIgcHJvcG9ydGlvbiBvZiB0aGVpciBtZW4gdGhhbiB0aG9zZSB3aG8gcHJlZmVyIHRvIHJldGlyZSBmcm9tIHRoZSBkYW5nZXIgem9uZS4gCjwvdHJhbnNsYXRpb24+"
translation['9.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRvIHRlbGwgdGhlIHRydXRoLCBlc2NhcGUgZnJvbSBwcmVtYXR1cmUgZGVhdGggbW9yZSBnZW5lcmFsbHkgZ29lcyB3aXRoIHZhbG91ciB0aGFuIHdpdGggY293YXJkaWNlOiBmb3IgdmFsb3VyIGlzIGFjdHVhbGx5IGVhc2llciBhbmQgcGxlYXNhbnRlciBhbmQgbW9yZSByZXNvdXJjZWZ1bCBhbmQgbWlnaHRpZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBzZW50aW1lbnQgaXMgdGFrZW4gZnJvbSBUeXJ0YWV1cy48L25vdGU+IEFuZCBvYnZpb3VzbHkgZ2xvcnkgYWRoZXJlcyB0byB0aGUgc2lkZSBvZiB2YWxvdXIsIGZvciBhbGwgbWVuIHdhbnQgdG8gYWxseSB0aGVtc2VsdmVzIHNvbWVob3cgd2l0aCB0aGUgYnJhdmUuCjwvdHJhbnNsYXRpb24+"
translation['9.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ib3dldmVyLCBpdCBpcyBwcm9wZXIgbm90IHRvIHBhc3Mgb3ZlciB0aGUgbWVhbnMgYnkgd2hpY2ggaGUgY29udHJpdmVkIHRvIGJyaW5nIGFib3V0IHRoaXMgcmVzdWx0LiBDbGVhcmx5LCB3aGF0IGhlIGRpZCB3YXMgdG8gZW5zdXJlIHRoYXQgdGhlIGJyYXZlIHNob3VsZCBoYXZlIGhhcHBpbmVzcywgYW5kIHRoZSBjb3dhcmQgbWlzZXJ5LiAKPC90cmFuc2xhdGlvbj4="
translation['9.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkZvciBpbiBvdGhlciBzdGF0ZXMgd2huIGEgbWFuIHByb3ZlcyBhIGNvd2FyZCwgdGhlIG9ubHkgY29uc2VxdWVuY2UgaXMgdGhhdCBoZSBpcyBjYWxsZWQgYSBjb3dhcmQuIEhlIGdvZXMgdG8gdGhlIHNhbWUgbWFya2V0IGFzIHRoZSBicmF2ZSBtYW4sIHNpdHMgYmVzaWRlIGhpbSwgYXR0ZW5kcyB0aGUgc2FtZSBneW1uYXNpdW0sIGlmIGhlIGNob29zZXMuIEJ1dCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTA2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMDY1Ij5MYWNlZGFlbW9uPC9wbGFjZU5hbWU+IGV2ZXJ5b25lIHdvdWxkIGJlIGFzaGFtZWQgdG8gaGF2ZSBhIGNvd2FyZCB3aXRoIGhpbSBhdCB0aGUgbWVzcyBvciB0byBiZSBtYXRjaGVkIHdpdGggaGltIGluIGEgd3Jlc3RsaW5nIGJvdXQuIAo8L3RyYW5zbGF0aW9uPg=="
translation['9.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk9mdGVuIHdoZW4gc2lkZXMgYXJlIHBpY2tlZCBmb3IgYSBnYW1lIG9mIGJhbGwgaGUgaXMgdGhlIG9kZCBtYW4gbGVmdCBvdXQ6IGluIHRoZSBjaG9ydXMgaGUgaXMgYmFuaXNoZWQgdG8gdGhlIGlnbm9taW5pb3VzIHBsYWNlOyBpbiB0aGUgc3RyZWV0cyBoZSBpcyBib3VuZCB0byBtYWtlIHdheTsgd2hlbiBoZSBvY2N1cGllcyBhIHNlYXQgaGUgbXVzdCBuZWVkcyBnaXZlIGl0IHVwLCBldmVuIHRvIGEganVuaW9yOyBoZSBtdXN0IHN1cHBvcnQgaGlzIHNwaW5zdGVyIHJlbGF0aXZlcyBhdCBob21lIGFuZCBtdXN0IGV4cGxhaW4gdG8gdGhlbSB3aHkgdGhleSBhcmUgb2xkIG1haWRzOiBoZSBtdXN0IG1ha2UgdGhlIGJlc3Qgb2YgYSBmaXJlc2lkZSB3aXRob3V0IGEgd2lmZSwgYW5kIHlldCBwYXkgZm9yZmVpdCBmb3IgdGhhdDogaGUgbWF5IG5vdCBzdHJvbGwgYWJvdXQgd2l0aCBhIGNoZWVyZnVsIGNvdW50ZW5hbmNlLCBub3IgYmVoYXZlIGFzIHRob3VnaCBoZSB3ZXJlIGEgbWFuIG9mIHVuc3VsbGllZCBmYW1lLCBvciBlbHNlIGhlIG11c3Qgc3VibWl0IHRvIGJlIGJlYXRlbiBieSBoaXMgYmV0dGVycy4gCjwvdHJhbnNsYXRpb24+"
translation['9.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlNtYWxsIHdvbmRlciwgSSB0aGluaywgdGhhdCB3aGVyZSBzdWNoIGEgbG9hZCBvZiBkaXNob25vdXIgaXMgbGFpZCBvbiB0aGUgY293YXJkLCBkZWF0aCBzZWVtcyBwcmVmZXJhYmxlIHRvIGEgbGlmZSBzbyBkaXNob25vdXJlZCwgc28gaWdub21pbmlvdXMuCjwvdHJhbnNsYXRpb24+"
translation['10.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGxhdyBieSB3aGljaCBMeWN1cmd1cyBlbmNvdXJhZ2VkIHRoZSBwcmFjdGljZSBvZiB2aXJ0dWUgdXAgdG8gb2xkIGFnZSBpcyBhbm90aGVyIGV4Y2VsbGVudCBtZWFzdXJlIGluIG15IG9waW5pb24uIEJ5IHJlcXVpcmluZyBtZW4gdG8gZmFjZSB0aGUgb3JkZWFsIG9mIGVsZWN0aW9uIHRvIHRoZSBDb3VuY2lsIG9mIEVsZGVycyBuZWFyIHRoZSBlbmQgb2YgbGlmZSwgaGUgcHJldmVudGVkIG5lZ2xlY3Qgb2YgaGlnaCBwcmluY2lwbGVzIGV2ZW4gaW4gb2xkIGFnZS4gCjwvdHJhbnNsYXRpb24+"
translation['10.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldvcnRoeSBvZiBhZG1pcmF0aW9uIGFsc28gaXMgdGhlIHByb3RlY3Rpb24gdGhhdCBoZSBhZmZvcmRlZCB0byB0aGUgb2xkIGFnZSBvZiBnb29kIG1lbi4gRm9yIHRoZSBlbmFjdG1lbnQgYnkgd2hpY2ggaGUgbWFkZSB0aGUgRWxkZXJzIGp1ZGdlcyBpbiB0cmlhbHMgb24gdGhlIGNhcGl0YWwgY2hhcmdlIGNhdXNlZCBvbGQgYWdlIHRvIGJlIGhlbGQgaW4gZ3JlYXRlciBob25vdXIgdGhhbiB0aGUgZnVsbCB2aWdvdXIgb2YgbWFuaG9vZC4KPC90cmFuc2xhdGlvbj4="
translation['10.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBzdXJlbHkgaXQgaXMgbmF0dXJhbCB0aGF0IG9mIGFsbCBjb250ZXN0cyBpbiB0aGUgd29ybGQgdGhpcyBzaG91bGQgZXhjaXRlIHRoZSBncmVhdGVzdCB6ZWFsLiBGb3Igbm9ibGUgYXMgYXJlIHRoZSBjb250ZXN0cyBpbiB0aGUgR2FtZXMsIHRoZXkgYXJlIG1lcmVseSB0ZXN0cyBvZiBib2RpbHkgcG93ZXJzLiBCdXQgdGhlIGNvbnRlc3QgZm9yIHRoZSBDb3VuY2lsIGp1ZGdlcyBzb3VscyB3aGV0aGVyIHRoZXkgYmUgZ29vZC4gQXMgbXVjaCB0aGVuLCBhcyB0aGUgc291bCBzdXJwYXNzZXMgdGhlIGJvZHksIHNvIG11Y2ggbW9yZSB3b3J0aHkgYXJlIHRoZSBjb250ZXN0cyBvZiB0aGUgc291bCB0byBraW5kbGUgemVhbCB0aGFuIHRob3NlIG9mIHRoZSBib2R5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['10.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZ2FpbiwgdGhlIGZvbGxvd2luZyBzdXJlbHkgZW50aXRsZXMgdGhlIHdvcmsgb2YgTHljdXJndXMgdG8gaGlnaCBhZG1pcmF0aW9uLiBIZSBvYnNlcnZlZCB0aGF0IHdoZXJlIHRoZSBjdWx0IG9mIHZpcnR1ZSBpcyBsZWZ0IHRvIHZvbHVudGFyeSBlZmZvcnQsIHRoZSB2aXJ0dW91cyBhcmUgbm90IHN0cm9uZyBlbm91Z2ggdG8gaW5jcmVhc2UgdGhlIGZhbWUgb2YgdGhlaXIgZmF0aGVybGFuZC4gU28gaGUgY29tcGVsbGVkIGFsbCBtZW4gYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IHRvIHByYWN0aXNlIGFsbCB0aGUgdmlydHVlcyBpbiBwdWJsaWMgbGlmZS4gQW5kIHRoZXJlZm9yZSwganVzdCBhcyBwcml2YXRlIGluZGl2aWR1YWxzIGRpZmZlciBmcm9tIG9uZSBhbm90aGVyIGluIHZpcnR1ZSBhY2NvcmRpbmcgYXMgdGhleSBwcmFjdGlzZSBvciBuZWdsZWN0IGl0LCBzbyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIGFzIGEgbWF0dGVyIG9mIGNvdXJzZSwgc3VycGFzc2VzIGFsbCBvdGhlciBzdGF0ZXMgaW4gdmlydHVlLCBiZWNhdXNlIHNoZSBhbG9uZSBtYWtlcyBhIHB1YmxpYyBkdXR5IG9mIGdlbnRsZW1hbmx5IGNvbmR1Y3QuIAo8L3RyYW5zbGF0aW9uPg=="
translation['10.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkZvciB3YXMgbm90IHRoaXMgdG9vIGEgbm9ibGUgcnVsZSBvZiBoaXMsIHRoYXQgd2hlcmVhcyBvdGhlciBzdGF0ZXMgcHVuaXNoIG9ubHkgZm9yIHdyb25nIGRvbmUgdG8gb25lJ3MgbmVpZ2hib3VyLCBoZSBpbmZsaWN0ZWQgcGVuYWx0aWVzIG5vIGxlc3Mgc2V2ZXJlIG9uIGFueSB3aG8gb3Blbmx5IG5lZ2xlY3RlZCB0byBsaXZlIGFzIGdvb2QgYSBsaWZlIGFzIHBvc3NpYmxlPyAKPC90cmFuc2xhdGlvbj4="
translation['10.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkZvciBoZSBiZWxpZXZlZCwgaXQgc2VlbXMsIHRoYXQgZW5zbGF2ZW1lbnQsIGZyYXVkLCByb2JiZXJ5LCBhcmUgY3JpbWVzIHRoYXQgaW5qdXJlIG9ubHkgdGhlIHZpY3RpbXMgb2YgdGhlbTsgYnV0IHRoZSB3aWNrZWQgbWFuIGFuZCB0aGUgY293YXJkIGFyZSB0cmFpdG9ycyB0byB0aGUgd2hvbGUgYm9keSBwb2xpdGljLiBBbmQgc28gaGUgaGFkIGdvb2QgcmVhc29uLCBJIHRoaW5rLCBmb3IgdmlzaXRpbmcgdGhlaXIgb2ZmZW5jZXMgd2l0aCB0aGUgaGVhdmllc3QgcGVuYWx0aWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgaGUgbGFpZCBvbiB0aGUgcGVvcGxlIHRoZSBkdXR5IG9mIHByYWN0aXNpbmcgdGhlIHdob2xlIHZpcnR1ZSBvZiBhIGNpdGl6ZW4gYXMgYSBuZWNlc3NpdHkgaXJyZXNpc3RpYmxlLiBGb3IgdG8gYWxsIHdobyBzYXRpc2ZpZWQgdGhlIHJlcXVpcmVtZW50cyBvZiBoaXMgY29kZSBoZSBnYXZlIGVxdWFsIHJpZ2h0cyBvZiBjaXRpemVuc2hpcCwgd2l0aG91dCByZWdhcmQgdG8gYm9kaWx5IGluZmlybWl0eSBvciB3YW50IG9mIG1vbmV5LiBCdXQgdGhlIGNvd2FyZCB3aG8gc2hyYW5rIGZyb20gdGhlIHRhc2sgb2Ygb2JzZXJ2aW5nIHRoZSBydWxlcyBvZiBoaXMgY29kZSBoZSBjYXVzZWQgdG8gYmUgbm8gbW9yZSByZWNrb25lZCBhbW9uZyB0aGUgcGVlcnMuCjwvdHJhbnNsYXRpb24+"
translation['10.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgdGhhdCB0aGVzZSBsYXdzIGFyZSBvZiBoaWdoIGFudGlxdWl0eSB0aGVyZSBjYW4gYmUgbm8gZG91YnQ6IGZvciBMeWN1cmd1cyBpcyBzYWlkIHRvIGhhdmUgbGl2ZWQgaW4gdGhlIGRheXMgb2YgdGhlIEhlcmFjbGVpZGFlLiBOZXZlcnRoZWxlc3MsIGluIHNwaXRlIG9mIHRoZWlyIGFudGlxdWl0eSwgdGhleSBhcmUgd2hvbGx5IHN0cmFuZ2UgdG8gb3RoZXJzIGV2ZW4gYXQgdGhpcyBkYXkuIEluZGVlZCwgaXQgaXMgbW9zdCBhc3RvbmlzaGluZyB0aGF0IGFsbCBtZW4gcHJhaXNlIHN1Y2ggaW5zdGl0dXRpb25zLCBidXQgbm8gc3RhdGUgY2hvb3NlcyB0byBpbWl0YXRlIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['11.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGJsZXNzaW5ncyB0aGF0IEkgaGF2ZSBlbnVtZXJhdGVkIHNvIGZhciB3ZXJlIHNoYXJlZCBieSBhbGwgYWxpa2UgaW4gcGVhY2UgYW5kIGluIHdhci4gQnV0IGlmIGFueW9uZSB3aXNoZXMgdG8gZGlzY292ZXIgaW4gd2hhdCByZXNwZWN0IEx5Y3VyZ3VzJyBvcmdhbmlzYXRpb24gb2YgdGhlIGFybXkgb24gYWN0aXZlIHNlcnZpY2Ugd2FzIGJldHRlciB0aGFuIG90aGVyIHN5c3RlbXMsIGhlcmUgaXMgdGhlIGluZm9ybWF0aW9uIHRoYXQgaGUgc2Vla3MuCjwvdHJhbnNsYXRpb24+"
translation['11.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgRXBob3JzIGlzc3VlIGEgcHJvY2xhbWF0aW9uIHN0YXRpbmcgdGhlIGFnZS1saW1pdCBmaXhlZCBmb3IgdGhlIGxldnksIGZpcnN0IGZvciB0aGUgY2F2YWxyeSBhbmQgaW5mYW50cnksIGFuZCB0aGVuIGZvciB0aGUgaGFuZGljcmFmdHNtZW4uIFRodXMgdGhlIExhY2VkYWVtb25pYW5zIGFyZSB3ZWxsIHN1cHBsaWVkIGluIHRoZSBmaWVsZCB3aXRoIGFsbCB0aGluZ3MgdGhhdCBhcmUgZm91bmQgdXNlZnVsIGluIGNpdmlsIGxpZmUuIEFsbCB0aGUgaW1wbGVtZW50cyB0aGF0IGFuIGFybXkgbWF5IHJlcXVpcmUgaW4gY29tbW9uIGFyZSBvcmRlcmVkIHRvIGJlIGFzc2VtYmxlZCwgc29tZSBpbiBjYXJ0cywgc29tZSBvbiBiYWdnYWdlIGFuaW1hbHM7IHRodXMgYW55dGhpbmcgbWlzc2luZyBpcyBub3QgYXQgYWxsIGxpa2VseSB0byBiZSBvdmVybG9va2VkLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGUgZXF1aXBtZW50IHRoYXQgaGUgZGV2aXNlZCBmb3IgdGhlIHRyb29wcyBpbiBiYXR0bGUgaGUgaW5jbHVkZWQgYSByZWQgY2xvYWssIGJlY2F1c2UgaGUgYmVsaWV2ZWQgdGhpcyBnYXJtZW50IHRvIGhhdmUgbGVhc3QgcmVzZW1ibGFuY2UgdG8gd29tZW4ncyBjbG90aGluZyBhbmQgdG8gYmUgbW9zdCBzdWl0YWJsZSBmb3Igd2FyLCBhbmQgYSBicmFzcyBzaGllbGQsIGJlY2F1c2UgaXQgaXMgdmVyeSBzb29uIHBvbGlzaGVkIGFuZCB0YXJuaXNoZXMgdmVyeSBzbG93bHkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSB3b3JkcyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6x4b22IM+HzrHOu8664b+Gzr0g4byAz4PPgOG9t860zrE8L2ZvcmVpZ24+IHNob3VsZCBwcm9iYWJseSBjb21lIGJlZm9yZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6x4b22IM6z4b2wz4Egz4ThvbHPh865z4PPhM6xPC9mb3JlaWduPi4gVGhlcmUgaXMgYWxzbyBhIHN1c3BpY2lvbiB0aGF0IHNvbWUgd29yZHMgcmVmZXJyaW5nIHRvIG90aGVyIGRldGFpbHMgb2YgdGhlIGVxdWlwbWVudCBoYXZlIGRyb3BwZWQgb3V0Ljwvbm90ZT4gSGUgYWxzbyBwZXJtaXR0ZWQgbWVuIHdobyB3ZXJlIHBhc3QgdGhlaXIgZmlyc3QgeW91dGggdG8gd2VhciBsb25nIGhhaXIsIGJlbGlldmluZyB0aGF0IGl0IHdvdWxkIG1ha2UgdGhlbSBsb29rIHRhbGxlciwgbW9yZSBkaWduaWZpZWQgYW5kIG1vcmUgdGVycmlmeWluZy4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOseG9tiDPh86xzrvOuuG/hs69IOG8gM+Dz4DhvbfOtM6xPC9mb3JlaWduPiBzaG91bGQgcHJvYmFibHkgY29tZSBiZWZvcmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOseG9tiDOs+G9sM+BIM+E4b2xz4fOuc+Dz4TOsTwvZm9yZWlnbj4uIFRoZXJlIGlzIGFsc28gYSBzdXNwaWNpb24gdGhhdCBzb21lIHdvcmRzIHJlZmVycmluZyB0byBvdGhlciBkZXRhaWxzIG9mIHRoZSBlcXVpcG1lbnQgaGF2ZSBkcm9wcGVkIG91dC48L3RyYW5zbGF0aW9uPg=="
translation['11.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgbWVuIHNvIGVxdWlwcGVkIHdlcmUgZGl2aWRlZCBpbnRvIHNpeCByZWdpbWVudHMgb2YgY2F2YWxyeSBhbmQgaW5mYW50cnkuIFRoZSBvZmZpY2VycyBvZiBlYWNoIGNpdGl6ZW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+T3IsIHJlYWRpbmcgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2Bz4DOu865z4TOuc664b+2zr08L2ZvcmVpZ24+IHdpdGggU3RvYmFldXMsIOKAnHJlZ2ltZW50IG9mIGhlYXZ5IGluZmFudHJ5LuKAnTwvbm90ZT4gcmVnaW1lbnQgY29tcHJpc2Ugb25lIGNvbG9uZWwsIGZvdXI8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvYHPgM67zrnPhM65zrrhv7bOvTwvZm9yZWlnbj4gd2l0aCBTdG9iYWV1cywg4oCccmVnaW1lbnQgb2YgaGVhdnkgaW5mYW50cnku4oCdPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk9uIGFjY291bnQgb2YgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SGVsbGVuaWNhPC90aXRsZT4gNy40LjIwIGFuZCA1LjEwIGl0IGlzIHRob3VnaHQgdGhhdCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtOG9u86/PC9mb3JlaWduPiwg4oCcdHdvLOKAnSBzaG91bGQgYmUgcmVhZCBmb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4ThvbPPhM+EzrHPgc6xz4IgKM60Lyk8L2ZvcmVpZ24+Ljwvbm90ZT4gY2FwdGFpbnMsIGVpZ2h0IGZpcnN0IGxpZXV0ZW5hbnRzIGFuZCBzaXh0ZWVuIHNlY29uZCBsaWV1dGVuYW50cy4gVGhlc2UgcmVnaW1lbnRzIGF0IHRoZSB3b3JkIG9mIGNvbW1hbmQgZm9ybSBzZWN0aW9uczx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkhlbGxlbmljYTwvdGl0bGU+IDcuNC4yMCBhbmQgNS4xMCBpdCBpcyB0aG91Z2h0IHRoYXQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrThvbvOvzwvZm9yZWlnbj4sIOKAnHR3byzigJ0gc2hvdWxkIGJlIHJlYWQgZm9yIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+E4b2zz4TPhM6xz4HOsc+CICjOtC8pPC9mb3JlaWduPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QSBudW1iZXIsIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8lc69zrE8L2ZvcmVpZ24+LCDigJxpbiBzaW5nbGUgZmlsZSzigJ0gb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrThvbvOvzwvZm9yZWlnbj4sIOKAnHR3byzigJ0gbXVzdCBoYXZlIGZhbGxlbiBvdXQgYmVmb3JlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM69z4nOvM6/z4ThvbfOsc+CPC9mb3JlaWduPi48L25vdGU+IHNvbWV0aW1lcyAodHdvKSwgc29tZXRpbWVzIHRocmVlLCBhbmQgc29tZXRpbWVzIHNpeCBhYnJlYXN0Lgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJXOvc6xPC9mb3JlaWduPiwg4oCcaW4gc2luZ2xlIGZpbGUs4oCdIG9yIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs604b27zr88L2ZvcmVpZ24+LCDigJx0d28s4oCdIG11c3QgaGF2ZSBmYWxsZW4gb3V0IGJlZm9yZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDOvc+JzrzOv8+E4b23zrHPgjwvZm9yZWlnbj4uPC90cmFuc2xhdGlvbj4="
translation['11.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgcHJldmFsZW50IG9waW5pb24gdGhhdCB0aGUgTGFjb25pYW4gaW5mYW50cnkgZm9ybWF0aW9uIGlzIHZlcnkgY29tcGxpY2F0ZWQgaXMgdGhlIHZlcnkgcmV2ZXJzZSBvZiB0aGUgdHJ1dGguIEluIHRoZSBMYWNvbmlhbiBmb3JtYXRpb24gdGhlIGZyb250IHJhbmsgbWVuIGFyZSBhbGwgb2ZmaWNlcnMsIGFuZCBlYWNoIGZpbGUgaGFzIGFsbCB0aGF0IGl0IHJlcXVpcmVzIHRvIG1ha2UgaXQgZWZmaWNpZW50Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgZXhhY3QgbWVhbmluZyBpcyBub3QgY2xlYXIgYW5kIHRoZSB0ZXh0IGlzIHBvc3NpYmx5IGNvcnJ1cHQuIFdlaXNrZSBzdWdnZXN0ZWQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DhvbHOvc+EzrEgz4DOsc+B4b2zz4fOtc65PC9mb3JlaWduPiwg4oCcYWN0cyBleGFjdGx5IGFzIGl0IHNob3VsZC7igJ08L25vdGU+IAo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgOG9sc69z4TOsSDPgM6xz4HhvbPPh861zrk8L2ZvcmVpZ24+LCDigJxhY3RzIGV4YWN0bHkgYXMgaXQgc2hvdWxkLuKAnTwvdHJhbnNsYXRpb24+"
translation['11.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBmb3JtYXRpb24gaXMgc28gZWFzeSB0byB1bmRlcnN0YW5kIHRoYXQgbm8gb25lIHdobyBrbm93cyBtYW4gZnJvbSBtYW4gY2FuIHBvc3NpYmx5IGdvIHdyb25nLiBGb3Igc29tZSBoYXZlIHRoZSBwcml2aWxlZ2Ugb2YgbGVhZGluZzsgYW5kIHRoZSByZXN0IGFyZSB1bmRlciBvcmRlcnMgdG8gZm9sbG93LiBPcmRlcnMgdG8gd2hlZWwgZnJvbSBjb2x1bW4gaW50byBsaW5lIG9mIGJhdHRsZSBhcmUgZ2l2ZW4gdmVyYmFsbHkgYnkgdGhlIHNlY29uZCBsaWV1dGVuYW50IGFjdGluZyBhcyBhIGhlcmFsZCwgYW5kIHRoZSBsaW5lIGlzIGZvcm1lZCBlaXRoZXIgdGhpbiBvciBkZWVwLCBieSB3aGVlbGluZy4gTm90aGluZyB3aGF0ZXZlciBpbiB0aGVzZSBtb3ZlbWVudHMgaXMgZGlmZmljdWx0IHRvIHVuZGVyc3RhbmQuIAo8L3RyYW5zbGF0aW9uPg=="
translation['11.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRvIGJlIHN1cmUsIHRoZSBzZWNyZXQgb2YgY2Fycnlpbmcgb24gaW4gYSBiYXR0bGUgd2l0aCBhbnkgdHJvb3BzIGF0IGhhbmQgd2hlbiB0aGUgbGluZSBnZXRzIGludG8gY29uZnVzaW9uIGlzIG5vdCBzbyBlYXN5IHRvIGdyYXNwLCBleGNlcHQgZm9yIHNvbGRpZXJzIHRyYWluZWQgdW5kZXIgdGhlIGxhd3Mgb2YgTHljdXJndXMuCjwvdHJhbnNsYXRpb24+"
translation['11.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgTGFjZWRhZW1vbmlhbnMgYWxzbyBjYXJyeSBvdXQgd2l0aCBwZXJmZWN0IGVhc2UgbWFub2V1dnJlcyB0aGF0IGluc3RydWN0b3JzIGluIHRhY3RpY3MgdGhpbmsgdmVyeSBkaWZmaWN1bHQuIFRodXMsIHdoZW4gdGhleSBtYXJjaCBpbiBjb2x1bW4sIGV2ZXJ5IHNlY3Rpb24gb2YgY291cnNlIGZvbGxvd3MgaW4gdGhlIHJlYXIgb2YgdGhlIHNlY3Rpb24gaW4gZnJvbnQgb2YgaXQuIFN1cHBvc2UgdGhhdCBhdCBzdWNoIGEgdGltZSBhbiBlbmVteSBpbiBvcmRlciBvZiBiYXR0bGUgc3VkZGVubHkgbWFrZXMgaGlzIGFwcGVhcmFuY2UgaW4gZnJvbnQ6IHRoZSB3b3JkIGlzIHBhc3NlZCB0byB0aGUgc2Vjb25kIGxpZXV0ZW5hbnQgdG8gZGVwbG95IGludG8gbGluZSB0byB0aGUgbGVmdCwgYW5kIHNvIHRocm91Z2hvdXQgdGhlIGNvbHVtbiB1bnRpbCB0aGUgYmF0dGxlLWxpbmUgc3RhbmRzIGZhY2luZyB0aGUgZW5lbXkuIE9yIGFnYWluLCBpZiB0aGUgZW5lbXkgYXBwZWFycyBpbiB0aGUgcmVhciB3aGlsZSB0aGV5IGFyZSBpbiB0aGlzIGZvcm1hdGlvbiwgZWFjaCBmaWxlIGNvdW50ZXItbWFyY2hlcywgaW4gb3JkZXIgdGhhdCB0aGUgYmVzdCBtZW4gbWF5IGFsd2F5cyBiZSBmYWNlIHRvIGZhY2Ugd2l0aCB0aGUgZW5lbXkuCjwvdHJhbnNsYXRpb24+"
translation['11.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRydWUsIHRoZSBsZWFkZXIgaXMgdGhlbiBvbiB0aGUgbGVmdCwgYnV0IGluc3RlYWQgb2YgdGhpbmtpbmcgdGhpcyBhIGRpc2FkdmFudGFnZSwgdGhleSByZWdhcmQgaXQgYXMgYSBwb3NpdGl2ZSBhZHZhbnRhZ2UgYXQgdGltZXMuIEZvciBzaG91bGQgdGhlIGVuZW15IGF0dGVtcHQgYSBmbGFua2luZyBtb3ZlbWVudCBoZSB3b3VsZCB0cnkgdG8gZW5jaXJjbGUgdGhlbSwgbm90IG9uIHRoZSBleHBvc2VkIGJ1dCBvbiB0aGUgcHJvdGVjdGVkIHNpZGUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIHRoaXMgd2FzIHRoZSByZWd1bGFyIHBsYW4sIGJlY2F1c2UgZWFjaCBvZiB0d28gYmF0dGxlIGxpbmVzIGFkdmFuY2luZyB0byBtZWV0IG9uZSBhbm90aGVyIGFsd2F5cyB0ZW5kZWQgdG8gY29udmVyZ2UgdG8gdGhlIHJpZ2h0LiBTZWUgVGh1Y3lkaWRlcywgNS43MS48L25vdGU+IElmLCBob3dldmVyLCBpdCBzZWVtcyBiZXR0ZXIgZm9yIGFueSByZWFzb24gdGhhdCB0aGUgbGVhZGVyIHNob3VsZCBiZSBvbiB0aGUgcmlnaHQgd2luZywgdGhlIGxlZnQgd2luZyB3aGVlbHMsIGFuZCB0aGUgYXJteSBjb3VudGVyLW1hcmNoZXMgYnkgcmFua3MgdW50aWwgdGhlIGxlYWRlciBpcyBvbiB0aGUgcmlnaHQsIGFuZCB0aGUgcmVhciBvZiB0aGUgY29sdW1uIG9uIHRoZSBsZWZ0LiAKPC90cmFuc2xhdGlvbj4="
translation['11.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5JZiwgb24gdGhlIG90aGVyIGhhbmQsIGFuIGVuZW15IGZvcmNlIGFwcGVhcnMgb24gdGhlIHJpZ2h0IHdoZW4gdGhleSBhcmUgbWFyY2hpbmcgaW4gY29sdW1uLCBhbGwgdGhhdCB0aGV5IGhhdmUgdG8gZG8gaXMgdG8gb3JkZXIgZWFjaCBjb21wYW55IHRvIHdoZWVsIHRvIHRoZSByaWdodCBzbyBhcyB0byBmcm9udCB0aGUgZW5lbXkgbGlrZSBhIG1hbi1vZi13YXIsIGFuZCB0aHVzIGFnYWluIHRoZSBjb21wYW55IGF0IHRoZSByZWFyIG9mIHRoZSBjb2x1bW4gaXMgb24gdGhlIHJpZ2h0LiBJZiBhZ2FpbiBhbiBlbmVteSBhcHByb2FjaGVzIG9uIHRoZSBsZWZ0LCB0aGV5IGRvIG5vdCBhbGxvdyB0aGF0IGVpdGhlciwgYnV0IGVpdGhlciBwdXNoIGhpbSBiYWNrPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoaXMgY2FuIG9ubHkgbWVhbiB0aGF0IGlmIHRoZSBMYWNlZGFlbW9uaWFucyBhcmUgaW4gYmF0dGxlLW9yZGVyIHRoZSB3aG9sZSBwaGFsYW54IHR1cm5zIHRvIHRoZSBsZWZ0IHRvIG1lZXQgdGhlIGF0dGFjazogd2hlZWxpbmcgYnkgY29tcGFuaWVzIHRvIHRoZSBsZWZ0IHdvdWxkIG9ubHkgYmUgbmVjZXNzYXJ5IHdoZW4gdGhlIGFybXkgbWFyY2hpbmcgaW4gY29sdW1uIHdhcyB0aHJlYXRlbmVkIG9uIHRoZSBsZWZ0LiBCdXQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzrvOu+G9sCDPgM+Bzr/OuOG9s86/z4XPg865zr08L2ZvcmVpZ24+IGZvdW5kIGluIEMgKOKAnGJ1dCBlaXRoZXIgcnVuIGZvcndhcmTigJ0pIGlzIGFsbW9zdCBjZXJ0YWlubHkgdGhlIHJpZ2h0IHJlYWRpbmcuPC9ub3RlPiBvciB3aGVlbCB0aGVpciBjb21wYW5pZXMgdG8gdGhlIGxlZnQgdG8gZmFjZSBoaW0sIGFuZCB0aHVzIHRoZSByZWFyIG9mIHRoZSBjb2x1bW4gZmluZHMgaXRzZWxmIG9uIHRoZSBsZWZ0Lgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDOu8674b2wIM+Az4HOv8644b2zzr/Phc+DzrnOvTwvZm9yZWlnbj4gZm91bmQgaW4gQyAo4oCcYnV0IGVpdGhlciBydW4gZm9yd2FyZOKAnSkgaXMgYWxtb3N0IGNlcnRhaW5seSB0aGUgcmlnaHQgcmVhZGluZy48L3RyYW5zbGF0aW9uPg=="
translation['12.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSB3aWxsIG5vdyBleHBsYWluIHRoZSBtZXRob2Qgb2YgZW5jYW1wbWVudCBhcHByb3ZlZCBieSBMeWN1cmd1cy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U2VlaW5nIHRoYXQgdGhlIGFuZ2xlcyBvZiBhIHNxdWFyZSBhcmUgdXNlbGVzcywgaGUgaW50cm9kdWNlZCB0aGUgY2lyY3VsYXIgZm9ybSBvZiBjYW1wLCBleGNlcHQgd2hlcmUgdGhlcmUgd2FzIGEgc2VjdXJlIGhpbGwgb3Igd2FsbCwgb3IgYSByaXZlciBhZmZvcmRlZCBwcm90ZWN0aW9uIGluIHRoZSByZWFyLiAKPC90cmFuc2xhdGlvbj4="
translation['12.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkhlIGNhdXNlZCBzZW50cmllcyB0byBiZSBwb3N0ZWQgYnkgZGF5IGZhY2luZyBpbndhcmRzIGFsb25nIHRoZSBwbGFjZSB3aGVyZSB0aGUgYXJtcyB3ZXJlIGtlcHQsIGZvciB0aGUgb2JqZWN0IG9mIHRoZXNlIGlzIHRvIGtlZXAgYW4gZXllIG5vdCBvbiB0aGUgZW5lbXkgYnV0IG9uIHRoZWlyIGZyaWVuZHMuIFRoZSBlbmVteSBpcyB3YXRjaGVkIGJ5IGNhdmFscnkgZnJvbSBwb3NpdGlvbnMgdGhhdCBjb21tYW5kIHRoZSB3aWRlc3Qgb3V0bG9vay4gCjwvdHJhbnNsYXRpb24+"
translation['12.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRvIG1lZXQgdGhlIGNhc2Ugb2YgYSBob3N0aWxlIGFwcHJvYWNoIGF0IG5pZ2h0LCBoZSBhc3NpZ25lZCB0aGUgZHV0eSBvZiBhY3RpbmcgYXMgc2VudHJpZXMgb3V0c2lkZSB0aGUgbGluZXMgdG8gdGhlIFNjaXJpdGFlLiBJbiB0aGVzZSBkYXlzIHRoZSBkdXR5IGlzIHNoYXJlZCBieSBmb3JlaWduZXJzLCBpZiBhbnkgaGFwcGVuIHRvIGJlIHByZXNlbnQgaW4gdGhlIGNhbXAuCjwvdHJhbnNsYXRpb24+"
translation['12.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBydWxlIHRoYXQgcGF0cm9scyBpbnZhcmlhYmx5IGNhcnJ5IHRoZWlyIHNwZWFycywgaGFzIHRoZSBzYW1lIHB1cnBvc2UsIHVuZG91YnRlZGx5LCBhcyB0aGUgZXhjbHVzaW9uIG9mIHNsYXZlcyBmcm9tIHRoZSBwbGFjZSBvZiBhcm1zLiBOb3IgaXMgaXQgc3VycHJpc2luZyB0aGF0IHNlbnRyaWVzIHdobyB3aXRoZHJhdyBmb3IgbmVjZXNzYXJ5IHB1cnBvc2VzIG9ubHkgZ28gc28gZmFyIGF3YXkgZnJvbSBvbmUgYW5vdGhlciBhbmQgZnJvbSB0aGUgYXJtcyBhcyBub3QgdG8gY2F1c2UgaW5jb252ZW5pZW5jZS4gU2FmZXR5IGlzIHRoZSBmaXJzdCBvYmplY3Qgb2YgdGhpcyBydWxlIGFsc28uCjwvdHJhbnNsYXRpb24+"
translation['12.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgY2FtcCBpcyBmcmVxdWVudGx5IHNoaWZ0ZWQgd2l0aCB0aGUgZG91YmxlIG9iamVjdCBvZiBhbm5veWluZyB0aGVpciBlbmVtaWVzIGFuZCBvZiBoZWxwaW5nIHRoZWlyIGZyaWVuZHMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk1vcmVvdmVyIHRoZSBsYXcgcmVxdWlyZXMgYWxsIExhY2VkYWVtb25pYW5zIHRvIHByYWN0aXNlIGd5bW5hc3RpY3MgcmVndWxhcmx5IHRocm91Z2hvdXQgdGhlIGNhbXBhaWduOyBhbmQgdGhlIHJlc3VsdCBpcyB0aGF0IHRoZXkgdGFrZSBtb3JlIHByaWRlIGluIHRoZW1zZWx2ZXMgYW5kIGhhdmUgYSBtb3JlIGRpZ25pZmllZCBhcHBlYXJhbmNlIHRoYW4gb3RoZXIgbWVuLiBOZWl0aGVyIHdhbGsgbm9yIHJhY2UtY291cnNlIG1heSBleGNlZWQgaW4gbGVuZ3RoIHRoZSBzcGFjZSBjb3ZlcmVkIGJ5IHRoZSByZWdpbWVudCwgc28gdGhhdCBubyBvbmUgbWF5IGdldCBmYXIgYXdheSBmcm9tIGhpcyBvd24gYXJtcy4gCjwvdHJhbnNsYXRpb24+"
translation['12.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoZSBleGVyY2lzZXMgdGhlIHNlbmlvciBjb2xvbmVsIGdpdmVzIHRoZSBvcmRlciBieSBoZXJhbGQgdG8gc2l0IGRvd24gLS0gdGhpcyBpcyB0aGVpciBtZXRob2Qgb2YgaW5zcGVjdGlvbiAtLSBhbmQgbmV4dCB0byB0YWtlIGJyZWFrZmFzdCBhbmQgdG8gcmVsaWV2ZSB0aGUgb3V0cG9zdHMgcXVpY2tseS4gQWZ0ZXIgdGhpcyB0aGVyZSBhcmUgYW11c2VtZW50cyBhbmQgcmVjcmVhdGlvbnMgdW50aWwgdGhlIGV2ZW5pbmcgZXhlcmNpc2VzLiAKPC90cmFuc2xhdGlvbj4="
translation['12.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZXNlIGJlaW5nIGZpbmlzaGVkLCB0aGUgaGVyYWxkIGdpdmVzIHRoZSBvcmRlciB0byB0YWtlIHRoZSBldmVuaW5nIG1lYWwsIGFuZCwgYXMgc29vbiBhcyB0aGV5IGhhdmUgc3VuZyB0byB0aGUgcHJhaXNlIG9mIHRoZSBnb2RzIHRvIHdob20gdGhleSBoYXZlIHNhY3JpZmljZWQgd2l0aCBnb29kIG9tZW5zLCB0byByZXN0IGJ5IHRoZSBhcm1zLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZXQgbm90IHRoZSBsZW5ndGggdG8gd2hpY2ggSSBydW4gb2NjYXNpb24gc3VycHJpc2UsIGZvciBpdCBpcyBhbG1vc3QgaW1wb3NzaWJsZSB0byBmaW5kIGFueSBkZXRhaWwgaW4gbWlsaXRhcnkgbWF0dGVycyByZXF1aXJpbmcgYXR0ZW50aW9uIHRoYXQgaXMgb3Zlcmxvb2tlZCBieSB0aGUgTGFjZWRhZW1vbmlhbnMuCjwvdHJhbnNsYXRpb24+"
translation['13.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSB3aWxsIGFsc28gZ2l2ZSBhbiBhY2NvdW50IG9mIHRoZSBwb3dlciBhbmQgaG9ub3VyIHRoYXQgTHljdXJndXMgY29uZmVycmVkIG9uIHRoZSBLaW5nIGluIHRoZSBmaWVsZC4gSW4gdGhlIGZpcnN0IHBsYWNlLCB3aGlsZSBvbiBtaWxpdGFyeSBzZXJ2aWNlIHRoZSBLaW5nIGFuZCBoaXMgc3RhZmYgYXJlIG1haW50YWluZWQgYnkgdGhlIHN0YXRlLiBUaGUgY29sb25lbHMgbWVzcyB3aXRoIHRoZSBLaW5nLCBpbiBvcmRlciB0aGF0IGNvbnN0YW50IGludGVyY291cnNlIG1heSBnaXZlIGJldHRlciBvcHBvcnR1bml0aWVzIGZvciB0YWtpbmcgY291bnNlbCB0b2dldGhlciBpbiBjYXNlIG9mIG5lZWQuIFRocmVlIG9mIHRoZSBwZWVycyBhbHNvIGF0dGVuZCB0aGUgS2luZydzIG1lc3MuIFRoZXNlIHRocmVlIHRha2UgZW50aXJlIGNoYXJnZSBvZiB0aGUgY29tbWlzc2FyaWF0IGZvciB0aGUgS2luZyBhbmQgaGlzIHN0YWZmLCBzbyB0aGF0IHRoZXNlIG1heSBkZXZvdGUgYWxsIHRoZWlyIHRpbWUgdG8gYWZmYWlycyBvZiB3YXIuCjwvdHJhbnNsYXRpb24+"
translation['13.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgSSB3aWxsIGdvIGJhY2sgdG8gdGhlIGJlZ2lubmluZywgYW5kIGV4cGxhaW4gaG93IHRoZSBLaW5nIHNldHMgb3V0IHdpdGggYW4gYXJteS4gRmlyc3QgaGUgb2ZmZXJzIHVwIHNhY3JpZmljZSBhdCBob21lIHRvIFpldXMgdGhlIExlYWRlciBhbmQgdG8gdGhlIGdvZHMgYXNzb2NpYXRlZCB3aXRoIGhpbS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+T3IsIGlmIHdlIHJlYWQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/hvLEgz4PhvbrOvSDOseG9kM+E4b+3PC9mb3JlaWduPiB3aXRoIEhhYXNlLCDigJxoZSBhbmQgaGlzIHN0YWZmLuKAnSBCeSDigJx0aGUgYXNzb2NpYXRlZCBnb2Rz4oCdIHdlIHNob3VsZCB1bmRlcnN0YW5kIENhc3RvciBhbmQgUG9sbHV4LCB0aGUgRGlvc2N1cmkuIEluIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTkzMSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExOTMxIj5PeGZvcmQ8L3BsYWNlTmFtZT4gdGV4dCBJIGdhdmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4TOv+G/ls69IM+DzrnOv+G/ls69PC9mb3JlaWduPiwg4oCcdGhlIHR3aW4gZ29kcy7igJ08L25vdGU+IElmIHRoZSBzYWNyaWZpY2UgYXBwZWFycyBwcm9waXRpb3VzLCB0aGUgRmlyZS1iZWFyZXIgdGFrZXMgZmlyZSBmcm9tIHRoZSBhbHRhciBhbmQgbGVhZHMgdGhlIHdheSB0byB0aGUgYm9yZGVycyBvZiB0aGUgbGFuZC4gVGhlcmUgdGhlIEtpbmcgb2ZmZXJzIHNhY3JpZmljZSBhZ2FpbiB0byBaZXVzIGFuZCBBdGhlbmEuIAo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ov+G8sSDPg+G9us69IM6x4b2Qz4Thv7c8L2ZvcmVpZ24+IHdpdGggSGFhc2UsIOKAnGhlIGFuZCBoaXMgc3RhZmYu4oCdIEJ5IOKAnHRoZSBhc3NvY2lhdGVkIGdvZHPigJ0gd2Ugc2hvdWxkIHVuZGVyc3RhbmQgQ2FzdG9yIGFuZCBQb2xsdXgsIHRoZSBEaW9zY3VyaS4gSW4gdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDExOTMxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTE5MzEiPk94Zm9yZDwvcGxhY2VOYW1lPiB0ZXh0IEkgZ2F2ZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM6/4b+Wzr0gz4POuc6/4b+Wzr08L2ZvcmVpZ24+LCDigJx0aGUgdHdpbiBnb2RzLuKAnTwvdHJhbnNsYXRpb24+"
translation['13.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk9ubHkgd2hlbiB0aGUgc2FjcmlmaWNlIHByb3ZlcyBhY2NlcHRhYmxlIHRvIGJvdGggdGhlc2UgZGVpdGllcyBkb2VzIGhlIGNyb3NzIHRoZSBib3JkZXJzIG9mIHRoZSBsYW5kLiBBbmQgdGhlIGZpcmUgZnJvbSB0aGVzZSBzYWNyaWZpY2VzIGxlYWRzIHRoZSB3YXkgYW5kIGlzIG5ldmVyIHF1ZW5jaGVkLCBhbmQgYW5pbWFscyBmb3Igc2FjcmlmaWNlIG9mIGV2ZXJ5IHNvcnQgZm9sbG93LiBBdCBhbGwgdGltZXMgd2hlbiBoZSBvZmZlcnMgc2FjcmlmaWNlLCB0aGUgS2luZyBiZWdpbnMgdGhlIHdvcmsgYmVmb3JlIGRhd24gb2YgZGF5LCB3aXNoaW5nIHRvIGZvcmVzdGFsbCB0aGUgZ29vZHdpbGwgb2YgdGhlIGdvZC4gCjwvdHJhbnNsYXRpb24+"
translation['13.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBhdCB0aGUgc2FjcmlmaWNlIGFyZSBhc3NlbWJsZWQgY29sb25lbHMsIGNhcHRhaW5zLCBsaWV1dGVuYW50cywgY29tbWFuZGFudHMgb2YgZm9yZWlnbiBjb250aW5nZW50cywgY29tbWFuZGVycyBvZiB0aGUgYmFnZ2FnZSB0cmFpbiwgYW5kLCBpbiBhZGRpdGlvbiwgYW55IGdlbmVyYWwgZnJvbSB0aGUgc3RhdGVzIHdobyBjaG9vc2VzIHRvIGJlIHByZXNlbnQuIAo8L3RyYW5zbGF0aW9uPg=="
translation['13.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIGFyZSBhbHNvIHByZXNlbnQgdHdvIG9mIHRoZSBFcGhvcnMsIHdobyBpbnRlcmZlcmUgaW4gbm90aGluZyBleGNlcHQgYnkgdGhlIEtpbmcncyByZXF1ZXN0LCBidXQga2VlcCBhbiBleWUgb24gdGhlIHByb2NlZWRpbmdzLCBhbmQgc2VlIHRoYXQgYWxsIGJlaGF2ZSB3aXRoIGEgZGVjb3J1bSBzdWl0YWJsZSB0byB0aGUgb2NjYXNpb24uIFdoZW4gdGhlIHNhY3JpZmljZXMgYXJlIGVuZGVkLCB0aGUgS2luZyBzdW1tb25zIGFsbCBhbmQgZGVsaXZlcnMgdGhlIG9yZGVycyBvZiB0aGUgZGF5LiBBbmQgc28sIGNvdWxkIHlvdSB3YXRjaCB0aGUgc2NlbmUsIHlvdSB3b3VsZCB0aGluayBhbGwgb3RoZXIgbWVuIG1lcmUgaW1wcm92aXNvcnMgaW4gc29sZGllcmluZyBhbmQgdGhlIExhY2VkYWVtb25pYW5zIHRoZSBvbmx5IGFydGlzdHMgaW4gd2FyZmFyZS4KPC90cmFuc2xhdGlvbj4="
translation['13.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZSBLaW5nIGxlYWRzLCBwcm92aWRlZCB0aGF0IG5vIGVuZW15IGFwcGVhcnMsIG5vIG9uZSBwcmVjZWRlcyBoaW0gZXhjZXB0IHRoZSBTY2lyaXRhZSBhbmQgdGhlIG1vdW50ZWQgdmVkZXR0ZXMuIEJ1dCBpZiBldmVyIHRoZXkgdGhpbmsgdGhlcmUgd2lsbCBiZSBmaWdodGluZywgaGUgdGFrZXMgdGhlIGxlYWQgb2YgdGhlIGZpcnN0IHJlZ2ltZW50IGFuZCB3aGVlbHMgdG8gdGhlIHJpZ2h0LCB1bnRpbCBoZSBpcyBiZXR3ZWVuIHR3byByZWdpbWVudHMgYW5kIHR3byBjb2xvbmVscy4gCjwvdHJhbnNsYXRpb24+"
translation['13.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZSB0cm9vcHMgdGhhdCBhcmUgdG8gc3VwcG9ydCB0aGVzZSBhcmUgbWFyc2hhbGxlZCBieSB0aGUgc2VuaW9yIG1lbWJlciBvZiB0aGUgS2luZydzIHN0YWZmLiBUaGUgc3RhZmYgY29uc2lzdHMgb2YgYWxsIHBlZXJzIHdobyBhcmUgbWVtYmVycyBvZiB0aGUgcm95YWwgbWVzcywgc2VlcnMsIGRvY3RvcnMsIGZsdXRlcGxheWVycywgY29tbWFuZGluZyBvZmZpY2VycyBhbmQgYW55IHZvbHVudGVlcnMgd2hvIGhhcHBlbiB0byBiZSBwcmVzZW50LiBUaHVzIG5vdGhpbmcgdGhhdCBoYXMgdG8gYmUgZG9uZSBjYXVzZXMgYW55IGRpZmZpY3VsdHksIGZvciBldmVyeXRoaW5nIGlzIGR1bHkgcHJvdmlkZWQgZm9yLgo8L3RyYW5zbGF0aW9uPg=="
translation['13.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZm9sbG93aW5nIGFycmFuZ2VtZW50czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGlzIHBhcmFncmFwaCBpcyBhbiBhZnRlcnRob3VnaHQsIHN1cHBsZW1lbnRpbmcgMTEuMy00Ljwvbm90ZT4gbWFkZSBieSBMeWN1cmd1cyB3aXRoIGEgdmlldyB0byB0aGUgYWN0dWFsIGZpZ2h0aW5nIGFyZSBhbHNvLCBpbiBteSBvcGluaW9uLCB2ZXJ5IHVzZWZ1bC4gV2hlbiBhIGdvYXQgaXMgc2FjcmlmaWNlZCwgdGhlIGVuZW15IGJlaW5nIG5lYXIgZW5vdWdoIHRvIHNlZSwgY3VzdG9tIG9yZGFpbnMgdGhhdCBhbGwgdGhlIGZsdXRlcGxheWVycyBwcmVzZW50IGFyZSB0byBwbGF5IGFuZCBldmVyeSBMYWNlZGFlbW9uaWFuIGlzIHRvIHdlYXIgYSB3cmVhdGguIEFuIG9yZGVyIGlzIGFsc28gZ2l2ZW4gdG8gcG9saXNoIGFybXMuIEl0IGlzIGFsc28gdGhlIHByaXZpbGVnZSBvZiB0aGUgeW91bmcgd2FycmlvciB0byBjb21iIGhpcyBoYWlyKD8pIGJlZm9yZSBlbnRlcmluZyBiYXR0bGUsIHRvIGxvb2sgY2hlZXJmdWwgYW5kIGVhcm4gYSBnb29kIHJlcG9ydC4gCjwvdHJhbnNsYXRpb24+"
translation['13.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk1vcmVvdmVyLCB0aGUgbWVuIHNob3V0IHdvcmRzIG9mIGVuY291cmFnZW1lbnQgdG8gdGhlIHN1YmFsdGVybiwgZm9yIGl0IGlzIGltcG9zc2libGUgZm9yIGVhY2ggc3ViYWx0ZXJuIHRvIG1ha2UgaGlzIHZvaWNlIHRyYXZlbCBhbG9uZyB0aGUgd2hvbGUgb2YgaGlzIHNlY3Rpb24gdG8gdGhlIGZhciBlbmQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldoZW4gdHdvIG9yIG1vcmUgc2VjdGlvbnMgYXJlIGFicmVhc3QgKGMuIHhpLiA0KSwgdGhlIG1lbiB0YWtlIHVwIGFuZCByZXBlYXQgdGhlIGV4aG9ydGF0aW9ucyBvZiB0aGUgc3ViYWx0ZXJuIHBvc3RlZCBhdCB0aGUgZW5kIG9mIHRoZSBsaW5lLCBhbmQgcGFzcyB0aGVtIGFsb25nIHRvIHRoZSBuZXh0IHN1YmFsdGVybiwgYW5kIHNvIG9uLiBUaGVzZSBkZXRhY2hlZCBub3RlcyBhcmUgbm90IGNsZWFybHkgZXhwcmVzc2VkLjwvbm90ZT4gVGhlIGNvbG9uZWwgaXMgcmVzcG9uc2libGUgZm9yIHNlZWluZyB0aGF0IGFsbCBpcyBkb25lIHByb3Blcmx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['13.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgdGltZSBmb3IgZW5jYW1waW5nIHNlZW1zIHRvIGhhdmUgYXJyaXZlZCwgdGhlIGRlY2lzaW9uIHJlc3RzIHdpdGggdGhlIEtpbmcsIHdobyBhbHNvIGluZGljYXRlcyB0aGUgcHJvcGVyIHBsYWNlLiBPbiB0aGUgb3RoZXIgaGFuZCB0aGUgZGlzcGF0Y2ggb2YgZW1iYXNzaWVzIHdoZXRoZXIgdG8gZnJpZW5kcyBvciBlbmVtaWVzIGlzIG5vdCB0aGUgS2luZydzIGFmZmFpci4gQWxsIHdobyBoYXZlIGFueSBidXNpbmVzcyB0byB0cmFuc2FjdCBkZWFsIGluIHRoZSBmaXJzdCBpbnN0YW5jZSB3aXRoIHRoZSBLaW5nLiAKPC90cmFuc2xhdGlvbj4="
translation['13.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5TdWl0b3JzIGZvciBqdXN0aWNlIGFyZSByZW1pdHRlZCBieSB0aGUgS2luZyB0byB0aGUgQ291cnQgb2YgSGVsbGFub2RpY2FlLCBhcHBsaWNhdGlvbnMgZm9yIG1vbmV5IHRvIHRoZSB0cmVhc3VyZXJzOyBhbmQgaWYgYW55b25lIGJyaW5ncyBib290eSwgaGUgaXMgc2VudCB0byB0aGUgYXVjdGlvbmVlcnMuIFdpdGggdGhpcyByb3V0aW5lIHRoZSBvbmx5IGR1dGllcyBsZWZ0IHRvIHRoZSBLaW5nIG9uIGFjdGl2ZSBzZXJ2aWNlIGFyZSB0byBhY3QgYXMgcHJpZXN0IGluIG1hdHRlcnMgb2YgcmVsaWdpb24gYW5kIGFzIGdlbmVyYWwgaW4gaGlzIGRlYWxpbmdzIHdpdGggdGhlIG1lbi4KPC90cmFuc2xhdGlvbj4="
translation['14.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U2hvdWxkIGFueW9uZSBhc2sgbWUgd2hldGhlciBJIHRoaW5rIHRoYXQgdGhlIGxhd3Mgb2YgTHljdXJndXMgc3RpbGwgcmVtYWluIHVuY2hhbmdlZCBhdCB0aGlzIGRheSwgSSBjZXJ0YWlubHkgY291bGQgbm90IHNheSB0aGF0IHdpdGggYW55IGNvbmZpZGVuY2Ugd2hhdGV2ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6/4b2QzrogLi4g4byUz4TOuTwvZm9yZWlnbj4gcHJvYmFibHkgZG9lcyBub3QgY29ycmVzcG9uZCB0byDigJxubyBsb25nZXLigJ0gaGVyZS4gT24gdGhpcyBjaGFwdGVyIHNlZSBJbnRyb2R1Y3Rpb24uPC9ub3RlPiAKPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/hvZDOuiAuLiDhvJTPhM65PC9mb3JlaWduPiBwcm9iYWJseSBkb2VzIG5vdCBjb3JyZXNwb25kIHRvIOKAnG5vIGxvbmdlcuKAnSBoZXJlLiBPbiB0aGlzIGNoYXB0ZXIgc2VlIEludHJvZHVjdGlvbi48L3RyYW5zbGF0aW9uPg=="
translation['14.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZvciBJIGtub3cgdGhhdCBmb3JtZXJseSB0aGUgTGFjZWRhZW1vbmlhbnMgcHJlZmVycmVkIHRvIGxpdmUgdG9nZXRoZXIgYXQgaG9tZSB3aXRoIG1vZGVyYXRlIGZvcnR1bmVzIHJhdGhlciB0aGFuIGV4cG9zZSB0aGVtc2VsdmVzIHRvIHRoZSBjb3JydXB0aW5nIGluZmx1ZW5jZXMgb2YgZmxhdHRlcnkgYXMgZ292ZXJub3JzIG9mIGRlcGVuZGVudCBzdGF0ZXMuIAo8L3RyYW5zbGF0aW9uPg=="
translation['14.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBJIGtub3cgdG9vIHRoYXQgaW4gZm9ybWVyIGRheXMgdGhleSB3ZXJlIGFmcmFpZCB0byBiZSBmb3VuZCBpbiBwb3NzZXNzaW9uIG9mIGdvbGQ7IHdoZXJlYXMgbm93YWRheXMgdGhlcmUgYXJlIHNvbWUgd2hvIGV2ZW4gYm9hc3Qgb2YgdGhlaXIgcG9zc2Vzc2lvbnMuIAo8L3RyYW5zbGF0aW9uPg=="
translation['14.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIHdlcmUgYWxpZW4gYWN0cyBpbiBmb3JtZXIgZGF5cywgYW5kIHRvIGxpdmUgYWJyb2FkIHdhcyBpbGxlZ2FsOyBhbmQgSSBoYXZlIG5vIGRvdWJ0IHRoYXQgdGhlIHB1cnBvc2Ugb2YgdGhlc2UgcmVndWxhdGlvbnMgd2FzIHRvIGtlZXAgdGhlIGNpdGl6ZW5zIGZyb20gYmVpbmcgZGVtb3JhbGl6ZWQgYnkgY29udGFjdCB3aXRoIGZvcmVpZ25lcnM7IGFuZCBub3cgSSBoYXZlIG5vIGRvdWJ0IHRoYXQgdGhlIGZpeGVkIGFtYml0aW9uIG9mIHRob3NlIHdobyBhcmUgdGhvdWdodCB0byBiZSBmaXJzdCBhbW9uZyB0aGVtIGlzIHRvIGxpdmUgdG8gdGhlaXIgZHlpbmcgZGF5IGFzIGdvdmVybm9ycyBpbiBhIGZvcmVpZ24gbGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['14.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIHdhcyBhIHRpbWUgd2hlbiB0aGV5IHdvdWxkIGZhaW4gYmUgd29ydGh5IG9mIGxlYWRlcnNoaXA7IGJ1dCBub3cgdGhleSBzdHJpdmUgZmFyIG1vcmUgZWFybmVzdGx5IHRvIGV4ZXJjaXNlIHJ1bGUgdGhhbiB0byBiZSB3b3J0aHkgb2YgaXQuIAo8L3RyYW5zbGF0aW9uPg=="
translation['14.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlZm9yZSBpbiB0aW1lcyBwYXN0IHRoZSBHcmVla3Mgd291bGQgY29tZSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTA2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMDY1Ij5MYWNlZGFlbW9uPC9wbGFjZU5hbWU+IGFuZCBiZWcgaGVyIHRvIGxlYWQgdGhlbSBhZ2FpbnN0IHJlcHV0ZWQgd3Jvbmdkb2VyczsgYnV0IG5vdyBtYW55IGFyZSBjYWxsaW5nIG9uIG9uZSBhbm90aGVyIHRvIHByZXZlbnQgYSByZXZpdmFsIG9mIExhY2VkYWVtb25pYW4gc3VwcmVtYWN5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['14.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPllldCB3ZSBuZWVkIG5vdCB3b25kZXIgaWYgdGhlc2UgcmVwcm9hY2hlcyBhcmUgbGV2ZWxsZWQgYXQgdGhlbSwgc2luY2UgaXQgaXMgbWFuaWZlc3QgdGhhdCB0aGV5IG9iZXkgbmVpdGhlciB0aGVpciBnb2Qgbm9yIHRoZSBsYXdzIG9mIEx5Y3VyZ3VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['15.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSB3aXNoIGFsc28gdG8gZ2l2ZSBhbiBhY2NvdW50IG9mIHRoZSBjb21wYWN0IG1hZGUgYnkgTHljdXJndXMgYmV0d2VlbiBLaW5nIGFuZCBzdGF0ZS4gRm9yIHRoaXMgaXMgdGhlIG9ubHkgZ292ZXJubWVudCB0aGF0IGNvbnRpbnVlcyBleGFjdGx5IGFzIGl0IHdhcyBvcmlnaW5hbGx5IGVzdGFibGlzaGVkLCB3aGVyZWFzIG90aGVyIGNvbnN0aXR1dGlvbnMgd2lsbCBiZSBmb3VuZCB0byBoYXZlIHVuZGVyZ29uZSBhbmQgc3RpbGwgdG8gYmUgdW5kZXJnb2luZyBtb2RpZmljYXRpb25zLgo8L3RyYW5zbGF0aW9uPg=="
translation['15.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSBvcmRhaW5lZCB0aGF0IHRoZSBLaW5nIHNoYWxsIG9mZmVyIGFsbCB0aGUgcHVibGljIHNhY3JpZmljZXMgb24gYmVoYWxmIG9mIHRoZSBzdGF0ZSwgaW4gdmlydHVlIG9mIGhpcyBkaXZpbmUgZGVzY2VudCwgYW5kIHRoYXQsIHdoYXRldmVyIG1heSBiZSB0aGUgZGVzdGluYXRpb24gdG8gd2hpY2ggdGhlIHN0YXRlIHNlbmRzIG91dCBhbiBhcm15LCBoZSBzaGFsbCBiZSBpdHMgbGVhZGVyLiAKPC90cmFuc2xhdGlvbj4="
translation['15.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkhlIGFsc28gZ2F2ZSBoaW0gdGhlIHJpZ2h0IHRvIHJlY2VpdmUgY2VydGFpbiBwYXJ0cyBvZiB0aGUgYmVhc3RzIHNhY3JpZmljZWQsIGFuZCBhc3NpZ25lZCB0byBoaW0gZW5vdWdoIGNob2ljZSBsYW5kIGluIG1hbnkgb2YgdGhlIG91dGxhbmRlcnMnIGNpdGllcyB0byBlbnN1cmUgaGltIGEgcmVhc29uYWJsZSBjb21wZXRlbmNlIHdpdGhvdXQgZXhjZXNzaXZlIHJpY2hlcy4gCjwvdHJhbnNsYXRpb24+"
translation['15.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkluIG9yZGVyIHRoYXQgZXZlbiB0aGUga2luZ3Mgc2hvdWxkIG1lc3MgaW4gcHVibGljLCBoZSBhc3NpZ25lZCB0byB0aGVtIGEgcHVibGljIG1lc3MgdGVudDsgaGUgYWxzbyBob25vdXJlZCB0aGVtIHdpdGggYSBkb3VibGUgcG9ydGlvbiBhdCB0aGUgbWVhbCwgbm90IHRoYXQgdGhleSBtaWdodCBlYXQgZW5vdWdoIGZvciB0d28sIGJ1dCB0aGF0IHRoZXkgbWlnaHQgaGF2ZSB0aGUgd2hlcmV3aXRoYWwgdG8gaG9ub3VyIGFueW9uZSB3aG9tIHRoZXkgY2hvc2UuCjwvdHJhbnNsYXRpb24+"
translation['15.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkhlIGFsc28gYWxsb3dlZCBlYWNoIEtpbmcgdG8gY2hvb3NlIHR3byBtZXNzbWF0ZXMsIHdobyBhcmUgY2FsbGVkIFB5dGhpaS4gRnVydGhlciwgaGUgZ3JhbnRlZCB0aGVtIHRvIHRha2Ugb2YgZXZlcnkgbGl0dGVyIG9mIHBpZ3MgYSBwb3JrZXIsIHRoYXQgYSBLaW5nIG1heSBuZXZlciB3YW50IHZpY3RpbXMsIGluIGNhc2UgaGUgd2lzaGVzIHRvIHNlZWsgY291bnNlbCBvZiB0aGUgZ29kcy4KPC90cmFuc2xhdGlvbj4="
translation['15.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BIGxha2UgbmVhciB0aGUgaG91c2Ugc3VwcGxpZXMgYWJ1bmRhbmNlIG9mIHdhdGVyOyBhbmQgaG93IHVzZWZ1bCB0aGF0IGlzIGZvciBtYW55IHB1cnBvc2VzIG5vbmUga25vdyBzbyB3ZWxsIGFzIHRob3NlIHdobyBhcmUgd2l0aG91dCBpdC4gRnVydGhlciwgYWxsIHJpc2UgZnJvbSB0aGVpciBzZWF0cyB3aGVuIHRoZSBLaW5nIGFwcGVhcnM7IG9ubHkgdGhlIEVwaG9ycyBkbyBub3QgcmlzZSBmcm9tIHRoZWlyIG9mZmljaWFsIGNoYWlycy4gCjwvdHJhbnNsYXRpb24+"
translation['15.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGV5IGV4Y2hhbmdlIG9hdGhzIG1vbnRobHksIHRoZSBFcGhvcnMgb24gYmVoYWxmIG9mIHRoZSBzdGF0ZSwgdGhlIEtpbmcgZm9yIGhpbXNlbGYuIEFuZCB0aGlzIGlzIHRoZSBLaW5nJ3Mgb2F0aDog4oCcSSB3aWxsIHJlaWduIGFjY29yZGluZyB0byB0aGUgZXN0YWJsaXNoZWQgbGF3cyBvZiB0aGUgc3RhdGUu4oCdIEFuZCB0aGlzIHRoZSBvYXRoIG9mIHRoZSBzdGF0ZTog4oCcV2hpbGUgeW91IGFiaWRlIGJ5IHlvdXIgb2F0aCwgd2Ugd2lsbCBrZWVwIHRoZSBraW5nc2hpcCB1bnNoYWtlbi7igJ0KPC90cmFuc2xhdGlvbj4="
translation['15.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVzZSB0aGVuIGFyZSB0aGUgaG9ub3VycyB0aGF0IGFyZSBiZXN0b3dlZCBvbiB0aGUgS2luZyBhdCBob21lIGR1cmluZyBoaXMgbGlmZXRpbWU7IGFuZCB0aGV5IGRvIG5vdCBncmVhdGx5IGV4Y2VlZCB0aG9zZSBvZiBwcml2YXRlIHBlcnNvbnMuIEZvciBpdCB3YXMgbm90IHRoZSB3aXNoIG9mIEx5Y3VyZ3VzIHRvIHB1dCBpbnRvIHRoZSBLaW5nJ3MgaGVhcnRzIGRlc3BvdGljIHByaWRlLCBub3IgdG8gaW1wbGFudCBpbiB0aGUgbWluZCBvZiB0aGUgY2l0aXplbnMgZW52eSBvZiB0aGVpciBwb3dlci4gCjwvdHJhbnNsYXRpb24+"
translation['15.9'] = ""
translation['1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TaW1vbmlkZXMsIHRoZSBwb2V0LCBvbmNlIHBhaWQgYSB2aXNpdCB0byBIaWVybywgdGhlIGRlc3BvdC4gV2hlbiBib3RoIGZvdW5kIHRpbWUgdG8gc3BhcmUsIFNpbW9uaWRlcyBzYWlkOiDigJxIaWVybywgd2lsbCB5b3UgcGxlYXNlIGV4cGxhaW4gc29tZXRoaW5nIHRvIG1lIHRoYXQgeW91IHByb2JhYmx5IGtub3cgYmV0dGVyIHRoYW4gST/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHByYXkgd2hhdCBpcyBpdCzigJ0gc2FpZCBIaWVybywg4oCcdGhhdCBJIGNhbiBrbm93IGJldHRlciB0aGFuIG9uZSBzbyB3aXNlIGFzIHlvdXJzZWxmP+KAnQo8L3RyYW5zbGF0aW9uPg=="
translation['1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIGtub3cgeW91IHdlcmUgYm9ybiBhIHByaXZhdGUgY2l0aXplbizigJ0gaGUgYW5zd2VyZWQsIOKAnGFuZCBhcmUgbm93IGEgZGVzcG90LiBUaGVyZWZvcmUsIGFzIHlvdSBoYXZlIGV4cGVyaWVuY2VkIGJvdGggZm9ydHVuZXMsIHlvdSBwcm9iYWJseSBrbm93IGJldHRlciB0aGFuIEkgaG93IHRoZSBsaXZlcyBvZiB0aGUgZGVzcG90IGFuZCB0aGUgY2l0aXplbiBkaWZmZXIgYXMgcmVnYXJkcyB0aGUgam95cyBhbmQgc29ycm93cyB0aGF0IGZhbGwgdG8gbWFuJ3MgbG90LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxTdXJlbHks4oCdIHNhaWQgSGllcm8sIOKAnHNlZWluZyB0aGF0IHlvdSBhcmUgc3RpbGwgYSBwcml2YXRlIGNpdGl6ZW4sIGl0IGlzIGZvciB5b3UgdG8gcmVtaW5kIG1lIG9mIHdoYXQgaGFwcGVucyBpbiBhIGNpdGl6ZW4ncyBsaWZlOyBhbmQgdGhlbiwgSSB0aGluaywgSSBjb3VsZCBiZXN0IHNob3cgeW91IHRoZSBkaWZmZXJlbmNlcyBiZXR3ZWVuIHRoZSB0d28u4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLOKAnSBzYWlkIFNpbW9uaWRlcywgdGFraW5nIHRoZSBzdWdnZXN0aW9uLCDigJxJIHRoaW5rIEkgaGF2ZSBvYnNlcnZlZCB0aGF0IHNpZ2h0cyBhZmZlY3QgcHJpdmF0ZSBjaXRpemVucyB3aXRoIHBsZWFzdXJlIGFuZCBwYWluIHRocm91Z2ggdGhlIGV5ZXMsIHNvdW5kcyB0aHJvdWdoIHRoZSBlYXJzLCBzbWVsbHMgdGhyb3VnaCB0aGUgbm9zdHJpbHMsIG1lYXQgYW5kIGRyaW5rIHRocm91Z2ggdGhlIG1vdXRoLCBjYXJuYWwgYXBwZXRpdGVz4oCUb2YgY291cnNlIHdlIGFsbCBrbm93IGhvdy4KPC90cmFuc2xhdGlvbj4="
translation['1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSBjYXNlIG9mIGNvbGQgYW5kIGhlYXQsIHRoaW5ncyBoYXJkIGFuZCBzb2Z0LCBsaWdodCBhbmQgaGVhdnksIG91ciBzZW5zYXRpb25zIG9mIHBsZWFzdXJlIGFuZCBwYWluIGRlcGVuZCBvbiB0aGUgd2hvbGUgYm9keSwgSSB0aGluay4gSW4gZ29vZCBhbmQgZXZpbCB3ZSBzZWVtIHRvIGZlZWwgcGxlYXN1cmUgb3IgcGFpbiwgYXMgdGhlIGNhc2UgbWF5IGJl4oCUc29tZXRpbWVzIHRocm91Z2ggdGhlIGluc3RydW1lbnRhbGl0eSBvZiB0aGUgbW9yYWwgYmVpbmcgb25seSwgYXQgb3RoZXIgdGltZXMgdGhyb3VnaCB0aGF0IG9mIHRoZSBtb3JhbCBhbmQgdGhlIHBoeXNpY2FsIGJlaW5nIHRvZ2V0aGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlNsZWVwLCBpdCBzZWVtcyBjbGVhciB0byBtZSwgYWZmZWN0cyB1cyB3aXRoIHBsZWFzdXJlOyBidXQgaG93IGFuZCBieSB3aGF0IG1lYW5zIGFuZCB3aGVuIGFyZSBwdXp6bGVzIHRoYXQgSSBmZWVsIGxlc3MgYWJsZSB0byBzb2x2ZS4gQW5kIHBlcmhhcHMgaXQgaXMgbm8gbWF0dGVyIGZvciBzdXJwcmlzZSBpZiBvdXIgc2Vuc2F0aW9ucyBhcmUgY2xlYXJlciB3aGVuIHdlIGFyZSBhd2FrZSB0aGFuIHdoZW4gd2UgYXJlIGFzbGVlcC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxGb3IgbXkgcGFydCwgU2ltb25pZGVzLOKAnSBzYWlkIEhpZXJvIGluIGFuc3dlciB0byB0aGlzLCDigJxJIGNhbm5vdCBzYXkgaG93IGEgZGVzcG90IGNvdWxkIGhhdmUgYW55IHNlbnNhdGlvbnMgYXBhcnQgZnJvbSB0aG9zZSB5b3UgaGF2ZSBtZW50aW9uZWQuIFNvIGZhciwgdGhlcmVmb3JlLCBJIGZhaWwgdG8gc2VlIHRoYXQgdGhlIGRlc3BvdCdzIGxpZmUgZGlmZmVycyBpbiBhbnkgcmVzcGVjdCBmcm9tIHRoZSBjaXRpemVuJ3Mu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJbiB0aGlzIHJlc3BlY3QgaXQgZG9lcyBkaWZmZXIs4oCdIHNhaWQgU2ltb25pZGVzOiDigJx0aGUgcGxlYXN1cmVzIGl0IGV4cGVyaWVuY2VzIGJ5IG1lYW5zIG9mIHRoZXNlIHZhcmlvdXMgb3JnYW5zIGFyZSBpbmZpbml0ZWx5IGdyZWF0ZXIgaW4gbnVtYmVyLCBhbmQgdGhlIHBhaW5zIGl0IHVuZGVyZ29lcyBhcmUgZmFyIGZld2VyLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJdCBpcyBub3Qgc28sIFNpbW9uaWRlcyzigJ0gcmV0b3J0ZWQgSGllcm87IOKAnEkgYXNzdXJlIHlvdSBmYXIgZmV3ZXIgcGxlYXN1cmVzIGZhbGwgdG8gZGVzcG90cyB0aGFuIHRvIGNpdGl6ZW5zIG9mIG1vZGVzdCBtZWFucywgYW5kIG1hbnkgbW9yZSBhbmQgbXVjaCBncmVhdGVyIHBhaW5zLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJbmNyZWRpYmxlIeKAnSBleGNsYWltZWQgU2ltb25pZGVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPuKAnFdlcmUgaXQgc28sIGhvdyBzaG91bGQgYSBkZXNwb3QncyB0aHJvbmUgYmUgYW4gb2JqZWN0IG9mIGRlc2lyZSB0byBtYW55LCBldmVuIG9mIHRob3NlIHdobyBhcmUgcmVwdXRlZCB0byBiZSBtZW4gb2YgYW1wbGUgbWVhbnM/IEFuZCBob3cgc2hvdWxkIGFsbCB0aGUgd29ybGQgZW52eSBkZXNwb3RzP+KAnQo8L3RyYW5zbGF0aW9uPg=="
translation['1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRm9yIHRoaXMgcmVhc29uIG9mIGNvdXJzZSzigJ0gc2FpZCBIaWVybywg4oCcdGhhdCB0aGV5IHNwZWN1bGF0ZSBvbiB0aGUgc3ViamVjdCB3aXRob3V0IGV4cGVyaWVuY2Ugb2YgYm90aCBlc3RhdGVzLiBCdXQgSSB3aWxsIHRyeSB0byBzaG93IHlvdSB0aGF0IEkgYW0gc3BlYWtpbmcgdGhlIHRydXRoLCBiZWdpbm5pbmcgd2l0aCB0aGUgc2Vuc2Ugb2Ygc2lnaHQuIFRoYXQgd2FzIHlvdXIgZmlyc3QgcG9pbnQsIGlmIEkgYW0gbm90IG1pc3Rha2VuLiAKPC90cmFuc2xhdGlvbj4="
translation['1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSW4gdGhlIGZpcnN0IHBsYWNlLCB0aGVuLCB0YWtpbmcgdGhlIG9iamVjdHMgdGhhdCB3ZSBwZXJjZWl2ZSBieSBtZWFucyBvZiB2aXNpb24sIEkgZmluZCBieSBjYWxjdWxhdGlvbiB0aGF0IGluIHJlZ2FyZCB0byBzaWdodC1zZWVpbmcsIGRlc3BvdHMgYXJlIHdvcnNlIG9mZi4gSW4gZXZlcnkgbGFuZCB0aGVyZSBhcmUgdGhpbmdzIHdvcnRoIHNlZWluZzogYW5kIGluIHNlYXJjaCBvZiB0aGVzZSBwcml2YXRlIGNpdGl6ZW5zIHZpc2l0IGFueSBjaXR5IHRoZXkgY2hvb3NlLCBhbmQgYXR0ZW5kIHRoZSBuYXRpb25hbCBmZXN0aXZhbHMsIHdoZXJlIGFsbCB0aGluZ3MgcmVwdXRlZCB0byBiZSBtb3N0IHdvcnRoIHNlZWluZyBhcmUgYXNzZW1ibGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgZGVzcG90cyBhcmUgbm90IGF0IGFsbCBjb25jZXJuZWQgd2l0aCBtaXNzaW9ucyB0byBzaG93cy4gRm9yIGl0IGlzIHJpc2t5IGZvciB0aGVtIHRvIGdvIHdoZXJlIHRoZXkgd2lsbCBiZSBubyBzdHJvbmdlciB0aGFuIHRoZSBjcm93ZCwgYW5kIHRoZWlyIHByb3BlcnR5IGF0IGhvbWUgaXMgdG9vIGluc2VjdXJlIHRvIGJlIGxlZnQgaW4gY2hhcmdlIG9mIG90aGVycyB3aGlsZSB0aGV5IGFyZSBhYnJvYWQuIEZvciB0aGV5IGZlYXIgdG8gbG9zZSB0aGVpciB0aHJvbmUsIGFuZCBhdCB0aGUgc2FtZSB0aW1lIHRvIGJlIHVuYWJsZSB0byB0YWtlIHZlbmdlYW5jZSBvbiB0aGUgYXV0aG9ycyBvZiB0aGUgd3JvbmcuIFBlcmhhcHMgeW91IG1heSBzYXk6CjwvdHJhbnNsYXRpb24+"
translation['1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5gQnV0LCBhZnRlciBhbGwsIHN1Y2ggc3BlY3RhY2xlcyBjb21lIHRvIHRoZW0gZXZlbiBpZiB0aGV5IHN0YXkgYXQgaG9tZS4nIE5vLCBubywgU2ltb25pZGVzLCBvbmx5IG9uZSBpbiBhIGh1bmRyZWQgc3VjaDsgYW5kIHdoYXQgdGhlcmUgYXJlIG9mIHRoZW0gYXJlIG9mZmVyZWQgdG8gZGVzcG90cyBhdCBhIHByaWNlIHNvIGV4b3JiaXRhbnQgdGhhdCBzaG93bWVuIHdobyBleGhpYml0IHNvbWUgdHJpZmxlIGV4cGVjdCB0byBsZWF2ZSB0aGUgY291cnQgaW4gYW4gaG91ciB3aXRoIGZhciBtb3JlIG1vbmV5IHRoYW4gdGhleSBnZXQgZnJvbSBhbGwgdGhlIHJlc3Qgb2YgdGhlIHdvcmxkIGluIGEgbGlmZXRpbWUu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQWgs4oCdIHNhaWQgU2ltb25pZGVzLCDigJxidXQgaWYgeW91IGFyZSB3b3JzZSBvZmYgaW4gdGhlIG1hdHRlciBvZiBzaWdodC1zZWVpbmcsIHRoZSBzZW5zZSBvZiBoZWFyaW5nLCB5b3Uga25vdywgZ2l2ZXMgeW91IHRoZSBhZHZhbnRhZ2UuIFByYWlzZSwgdGhlIHN3ZWV0ZXN0IG9mIGFsbCBzb3VuZHMsIGlzIG5ldmVyIGxhY2tpbmcsIGZvciBhbGwgeW91ciBjb3VydGllcnMgcHJhaXNlIGV2ZXJ5dGhpbmcgeW91IGRvIGFuZCBldmVyeSB3b3JkIHlvdSB1dHRlci4gQWJ1c2UsIG9uIHRoZSBjb250cmFyeSwgdGhhdCBtb3N0IG9mZmVuc2l2ZSBvZiBzb3VuZHMsIGlzIG5ldmVyIGluIHlvdXIgZWFycywgZm9yIG5vIG9uZSBsaWtlcyB0byBzcGVhayBldmlsIG9mIGEgZGVzcG90IGluIGhpcyBwcmVzZW5jZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHdoYXQgcGxlYXN1cmUs4oCdIGFza2VkIEhpZXJvLCDigJxjb21lcywgZG8geW91IHN1cHBvc2UsIG9mIHRoaXMgc2hyaW5raW5nIGZyb20gZXZpbCB3b3Jkcywgd2hlbiBvbmUga25vd3Mgd2VsbCB0aGF0IGFsbCBoYXJib3VyIGV2aWwgdGhvdWdodHMgYWdhaW5zdCB0aGUgZGVzcG90LCBpbiBzcGl0ZSBvZiB0aGVpciBzaWxlbmNlPyBPciB3aGF0IHBsZWFzdXJlIGNvbWVzIG9mIHRoaXMgcHJhaXNlLCBkbyB5b3UgdGhpbmssIHdoZW4gdGhlIHByYWlzZXMgc291bmQgc3VzcGljaW91c2x5IGxpa2UgZmxhdHRlcnk/4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCB5ZXMs4oCdIHJlcGxpZWQgU2ltb25pZGVzLCDigJxpbiB0aGlzIG9mIGNvdXJzZSBJIGFncmVlIHdpdGggeW91IGVudGlyZWx5LCBIaWVybywgdGhhdCBwcmFpc2UgZnJvbSB0aGUgZnJlZXN0IGlzIHN3ZWV0ZXN0LiBCdXQgdGhpcywgbm93LCB5b3Ugd2lsbCBub3QgcGVyc3VhZGUgYW55b25lIHRvIGJlbGlldmUsIHRoYXQgdGhlIHRoaW5ncyB3aGljaCBzdXBwb3J0IGh1bWFuIGxpZmUgZG8gbm90IHlpZWxkIHlvdSBhIGZhciBncmVhdGVyIG51bWJlciBvZiBwbGVhc3VyZXMu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCBTaW1vbmlkZXMsIGFuZCBJIGtub3cgdGhhdCB0aGUgcmVhc29uIHdoeSBtb3N0IG1lbiBqdWRnZSB0aGF0IHdlIGhhdmUgbW9yZSBlbmpveW1lbnQgaW4gZWF0aW5nIGFuZCBkcmlua2luZyB0aGFuIHByaXZhdGUgY2l0aXplbnMgaXMgdGhpczsgdGhleSB0aGluayB0aGF0IHRoZXkgdGhlbXNlbHZlcyB3b3VsZCBmaW5kIHRoZSBkaW5uZXIgc2VydmVkIGF0IG91ciB0YWJsZSBiZXR0ZXIgZWF0aW5nIHRoYW4gd2hhdCB0aGV5IGdldC4gQW55dGhpbmcsIGluIGZhY3QsIHRoYXQgaXMgYmV0dGVyIHRoYW4gd2hhdCB0aGV5IGFyZSBhY2N1c3RvbWVkIHRvIGdpdmVzIHRoZW0gcGxlYXN1cmUuCjwvdHJhbnNsYXRpb24+"
translation['1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIGlzIHdoeSBhbGwgbWVuIGxvb2sgZm9yd2FyZCB0byB0aGUgZmVzdGl2YWxzLCBleGNlcHQgdGhlIGRlc3BvdHMuIEZvciB0aGVpciB0YWJsZSBpcyBhbHdheXMgbGFkZW4gd2l0aCBwbGVudHksIGFuZCBhZG1pdHMgb2Ygbm8gZXh0cmFzIG9uIGZlYXN0IGRheXMuIEhlcmUgdGhlbiBpcyBvbmUgcGxlYXN1cmUgaW4gcmVzcGVjdCBvZiB3aGljaCB0aGV5IGFyZSB3b3JzZSBvZmYgdGhhbiB0aGUgcHJpdmF0ZSBjaXRpemVuLCB0aGUgcGxlYXN1cmUgb2YgYW50aWNpcGF0aW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgZnVydGhlciwgeW91ciBvd24gZXhwZXJpZW5jZSB0ZWxscyB5b3UsIEkgYW0gc3VyZSwgdGhhdCB0aGUgZ3JlYXRlciB0aGUgbnVtYmVyIG9mIHN1cGVyZmx1b3VzIGRpc2hlcyBzZXQgYmVmb3JlIGEgbWFuLCB0aGUgc29vbmVyIGEgZmVlbGluZyBvZiByZXBsZXRpb24gY29tZXMgb3ZlciBoaW07IGFuZCBzbywgYXMgcmVnYXJkcyB0aGUgZHVyYXRpb24gb2YgaGlzIHBsZWFzdXJlIHRvbywgdGhlIG1hbiB3aG8gaGFzIG1hbnkgY291cnNlcyBwdXQgYmVmb3JlIGhpbSBpcyB3b3JzZSBvZmYgdGhhbiB0aGUgbW9kZXJhdGUgbGl2ZXIu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IHN1cmVseSzigJ0gc2FpZCBTaW1vbmlkZXMsIOKAnHNvIGxvbmcgYXMgdGhlIGFwcGV0aXRlIGhvbGRzIG91dCwgdGhlIG1hbiB3aG8gZGluZXMgYXQgdGhlIGNvc3RsaWVyIGJhbnF1ZXQgaGFzIGZhciBtb3JlIHBsZWFzdXJlIHRoYW4gaGUgd2hvIGlzIHNlcnZlZCB3aXRoIHRoZSBjaGVhcGVyIG1lYWwu4oCdIAo8L3RyYW5zbGF0aW9uPg=="
translation['1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRG9uJ3QgeW91IHRoaW5rLCBTaW1vbmlkZXMsIHRoYXQgdGhlIGdyZWF0ZXIgYSBtYW4ncyBwbGVhc3VyZSBpbiBhbnkgb2NjdXBhdGlvbiB0aGUgc3Ryb25nZXIgaXMgaGlzIGRldm90aW9uIHRvIGl0P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4gZG8geW91IG5vdGljZSB0aGF0IGRlc3BvdHMgZmFsbCB0byB0aGVpciBtZWFsIHdpdGggYW55IG1vcmUgemVzdCB0aGFuIHByaXZhdGUgcGVyc29ucyB0byB0aGVpcnM/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vLCBubywgb2YgY291cnNlIG5vdDsgSSBzaG91bGQgcmF0aGVyIHNheSB3aXRoIG1vcmUgZGlzZ3VzdCwgYWNjb3JkaW5nIHRvIHRoZSBjb21tb24gb3Bpbmlvbi7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCBub3cs4oCdIHNhaWQgSGllcm8sIOKAnGhhdmUgeW91IG9ic2VydmVkIGFsbCB0aG9zZSBwaWNrbGVzIGFuZCBzYXVjZXMgdGhhdCBhcmUgcHV0IGJlZm9yZSBkZXNwb3Rz4oCUYWNpZCwgYml0dGVyLCBhc3RyaW5nZW50IGFuZCBzbyBmb3J0aD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCBjZXJ0YWlubHk7IGFuZCB2ZXJ5IHVubmF0dXJhbCBjYXRlcyBJIHRoaW5rIHRoZW0gZm9yIGh1bWFuIGJlaW5ncy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRG9uJ3QgeW91IGxvb2sgb24gdGhlc2UgY29uZGltZW50cywgdGhlbiwgYXMgbWVyZSBmYWRzIG9mIGEgamFkZWQgYW5kIHBhbXBlcmVkIGFwcGV0aXRlPyBJIGtub3cgd2VsbCBlbm91Z2gsIGFuZCBJIGV4cGVjdCB5b3Uga25vdyB0b28sIHRoYXQgaGVhcnR5IGVhdGVycyBoYXZlIG5vIG5lZWQgb2YgdGhlc2UgY29uY29jdGlvbnMu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCwgSSBjZXJ0YWlubHkgdGhpbmsgdGhhdCB0aG9zZSBjb3N0bHkgdW5ndWVudHMgd2l0aCB3aGljaCB5b3UgYW5vaW50IHlvdXIgYm9kaWVzIGFmZm9yZCBtb3JlIHNhdGlzZmFjdGlvbiB0byB0aG9zZSB3aG8gYXJlIG5lYXIgeW91IHRoYW4gdG8geW91cnNlbHZlcywganVzdCBhcyB0aGUgbWFuIHdobyBoYXMgZWF0ZW4gcmFuayBmb29kIGlzIGxlc3MgY29uc2Npb3VzIG9mIHRoZSBkaXNhZ3JlZWFibGUgc21lbGwgdGhhbiB0aG9zZSB3aG8gY29tZSBuZWFyIGhpbS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcUXVpdGUgc28sIGFuZCB3ZSBtYXkgYWRkIHRoYXQgaGUgd2hvIGhhcyBhbGwgc29ydHMgb2YgZm9vZCBhdCBhbGwgdGltZXMgaGFzIG5vIHN0b21hY2ggZm9yIGFueSBzb3J0LiBPZmZlciBhIG1hbiBhIGRpc2ggdGhhdCBoZSBzZWxkb20gdGFzdGVzLCBhbmQgaGUgZWF0cyBhIGJlbGx5ZnVsIHdpdGggZ3VzdG8u4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSXQgc2VlbXMs4oCdIHJlbWFya2VkIFNpbW9uaWRlcywg4oCcYXMgaWYgdGhlIHNhdGlzZmFjdGlvbiBvZiB0aGUgc2V4dWFsIGFwcGV0aXRlcyB3ZXJlIHRoZSBvbmx5IG1vdGl2ZSB0aGF0IHByb2R1Y2VzIGluIHlvdSB0aGUgY3JhdmluZyBmb3IgZGVzcG90aXNtLiBGb3IgaW4gdGhpcyBtYXR0ZXIgeW91IGFyZSBmcmVlIHRvIGVuam95IHRoZSBmYWlyZXN0IHRoYXQgbWVldHMgeW91ciBleWUu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSBhc3N1cmUgeW91IHRoYXQgd2UgYXJlIHdvcnNlIG9mZiB0aGFuIHByaXZhdGUgY2l0aXplbnMgaW4gdGhlIG1hdHRlciB0byB3aGljaCB5b3Ugbm93IHJlZmVyLiBGaXJzdCB0YWtlIG1hcnJpYWdlLiBJdCBpcyBjb21tb25seSBoZWxkIHRoYXQgYSBtYXJyaWFnZSBpbnRvIGEgZmFtaWx5IG9mIGdyZWF0ZXIgd2VhbHRoIGFuZCBpbmZsdWVuY2UgaXMgbW9zdCBob25vdXJhYmxlLCBhbmQgaXMgYSBzb3VyY2Ugb2YgcHJpZGUgYW5kIHBsZWFzdXJlIHRvIHRoZSBicmlkZWdyb29tLiBOZXh0IHRvIHRoYXQgY29tZXMgYSBtYXJyaWFnZSB3aXRoIGVxdWFscy4gQSBtYXJyaWFnZSB3aXRoIGluZmVyaW9ycyBpcyBjb25zaWRlcmVkIHBvc2l0aXZlbHkgZGVncmFkaW5nIGFuZCB1c2VsZXNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdW5sZXNzIGEgZGVzcG90IG1hcnJpZXMgYSBmb3JlaWduIGdpcmwsIGhlIGlzIGJvdW5kIHRvIG1hcnJ5IGJlbmVhdGggaGltOyBhbmQgc28gdGhlIHRoaW5nIHRvIGJlIGRlc2lyZWQgZG9lcyBub3QgY29tZSBoaXMgd2F5LiBBbmQgd2hlcmVhcyBpdCBpcyBleGNlZWRpbmdseSBwbGVhc2FudCB0byByZWNlaXZlIHRoZSBhdHRlbnRpb25zIG9mIHRoZSBwcm91ZGVzdCBvZiBsYWRpZXMsIHRoZSBhdHRlbnRpb25zIG9mIHNsYXZlcyBhcmUgcXVpdGUgdW5hcHByZWNpYXRlZCB3aGVuIHNob3duLCBhbmQgYW55IGxpdHRsZSBzaG9ydGNvbWluZ3MgcHJvZHVjZSBncmlldm91cyBvdXRidXJzdHMgb2YgYW5nZXIgYW5kIGFubm95YW5jZS4KPC90cmFuc2xhdGlvbj4="
translation['1.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSW4gaGlzIHJlbGF0aW9ucyB3aXRoIHlvdW5nIGJveXMsIGFnYWluLCBldmVuIG11Y2ggbW9yZSB0aGFuIGluIGhpcyByZWxhdGlvbnMgd2l0aCB3b21lbiwgdGhlIGRlc3BvdCBpcyBhdCBhIGRpc2FkdmFudGFnZS4gV2UgYWxsIGtub3csIEkgc3VwcG9zZSwgdGhhdCBwYXNzaW9uIGluY3JlYXNlcyB0aGUgc3dlZXRzIG9mIHNleCBiZXlvbmQgbWVhc3VyZS4KPC90cmFuc2xhdGlvbj4="
translation['1.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5QYXNzaW9uLCBob3dldmVyLCBpcyB2ZXJ5IHNoeSBvZiBlbnRlcmluZyB0aGUgaGVhcnQgb2YgYSBkZXNwb3QsIGZvciBwYXNzaW9uIGlzIGZhaW4gdG8gZGVzaXJlIG5vdCB0aGUgZWFzeSBwcml6ZSwgYnV0IHRoZSBob3BlZC1mb3Igam95LiBUaGVyZWZvcmUsIGp1c3QgYXMgYSBtYW4gd2hvIGlzIGEgc3RyYW5nZXIgdG8gdGhpcnN0IGNhbiBnZXQgbm8gc2F0aXNmYWN0aW9uIG91dCBvZiBkcmlua2luZywgc28gaGUgd2hvIGlzIGEgc3RyYW5nZXIgdG8gcGFzc2lvbiBpcyBhIHN0cmFuZ2VyIHRvIHRoZSBzd2VldGVzdCBwbGVhc3VyZXMgb2Ygc2V4LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['1.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG8gdGhpcyBzcGVlY2ggb2YgSGllcm8ncyBTaW1vbmlkZXMgcmVwbGllZCwgbGF1Z2hpbmc6PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEhvdyBzYXkgeW91LCBIaWVybz8gWW91IGRlbnkgdGhhdCBsb3ZlIGZvciBib3lzIHNwcmluZ3MgdXAgaW4gYSBkZXNwb3QncyBoZWFydD8gVGhlbiBob3cgYWJvdXQgeW91ciBwYXNzaW9uIGZvciBEYWlsb2NodXMsIHdob20gdGhleSBjYWxsIG1vc3QgZmFpcj/igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2h5LCBTaW1vbmlkZXMsIHRoZSBleHBsYW5hdGlvbiwgb2YgY291cnNlLCBpcyB0aGlzOiBJIGRlc2lyZSB0byBnZXQgZnJvbSBoaW0gbm90IHdoYXQgSSBtYXkgaGF2ZSwgYXBwYXJlbnRseSwgZm9yIHRoZSBhc2tpbmcsIGJ1dCB0aGF0IHdoaWNoIGEgZGVzcG90IHNob3VsZCBiZSB0aGUgbGFzdCB0byB0YWtlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZmFjdCBpcywgSSBkZXNpcmUgb2YgRGFpbG9jaHVzIGp1c3QgdGhhdCB3aGljaCBodW1hbiBuYXR1cmUsIG1heWJlLCBkcml2ZXMgdXMgdG8gYXNrIG9mIHRoZSBmYWlyLiBCdXQgd2hhdCBJIGxvbmcgdG8gZ2V0LCBJIHZlcnkgc3Ryb25nbHkgZGVzaXJlIHRvIG9idGFpbiBieSBoaXMgZ29vZHdpbGwsIGFuZCB3aXRoIGhpcyBjb25zZW50OyBidXQgSSB0aGluayBJIGNvdWxkIHNvb25lciBkZXNpcmUgdG8gZG8gbXlzZWxmIGFuIGluanVyeSB0aGFuIHRvIHRha2UgaXQgZnJvbSBoaW0gYnkgZm9yY2UuCjwvdHJhbnNsYXRpb24+"
translation['1.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdG8gdGFrZSBmcm9tIGFuIGVuZW15IGFnYWluc3QgaGlzIHdpbGwgaXMsIEkgdGhpbmssIHRoZSBncmVhdGVzdCBvZiBhbGwgcGxlYXN1cmVzLCBidXQgZmF2b3VycyBmcm9tIGEgbG92ZWQgb25lIGFyZSB2ZXJ5IHBsZWFzYW50LCBJIGZhbmN5LCBvbmx5IHdoZW4gaGUgY29uc2VudHMuCjwvdHJhbnNsYXRpb24+"
translation['1.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaW5zdGFuY2UsIGlmIGhlIGlzIGluIHN5bXBhdGh5IHdpdGggeW91LCBob3cgcGxlYXNhbnQgYXJlIGhpcyBsb29rcywgaG93IHBsZWFzYW50IGhpcyBxdWVzdGlvbnMgYW5kIGhpcyBhbnN3ZXJzOyBob3cgdmVyeSBwbGVhc2FudCBhbmQgcmF2aXNoaW5nIGFyZSB0aGUgc3RydWdnbGVzIGFuZCBiaWNrZXJpbmdzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgYSBmYXZvdXJpdGUgYWdhaW5zdCBoaXMgd2lsbCBzZWVtcyB0byBtZSBtb3JlIGxpa2UgYnJpZ2FuZGFnZSB0aGFuIGxvdmUuIE5heSwgeW91ciBicmlnYW5kIGZpbmRzIHNvbWUgcGxlYXN1cmUgaW4gaGlzIGdhaW4gYW5kIGluIGh1cnRpbmcgaGlzIGZvZTsgYnV0IHRvIGZlZWwgcGxlYXN1cmUgaW4gaHVydGluZyBvbmUgd2hvbSB5b3UgbG92ZSwgdG8gYmUgaGF0ZWQgZm9yIHlvdXIgYWZmZWN0aW9uLCB0byBkaXNndXN0IGhpbSBieSB5b3VyIHRvdWNoLCBzdXJlbHkgdGhhdCBpcyBhIG1vcnRpZnlpbmcgZXhwZXJpZW5jZSBhbmQgcGl0aWZ1bCEKPC90cmFuc2xhdGlvbj4="
translation['1.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZmFjdCBpcywgYSBwcml2YXRlIGNpdGl6ZW4gaGFzIGluc3RhbnQgcHJvb2YgdGhhdCBhbnkgYWN0IG9mIGNvbXBsaWFuY2Ugb24gdGhlIHBhcnQgb2YgaGlzIGJlbG92ZWQgaXMgcHJvbXB0ZWQgYnkgYWZmZWN0aW9uLCBzaW5jZSBoZSBrbm93cyB0aGF0IHRoZSBzZXJ2aWNlIHJlbmRlcmVkIGlzIGR1ZSB0byBubyBjb21wdWxzaW9uOyBidXQgdGhlIGRlc3BvdCBjYW4gbmV2ZXIgZmVlbCBzdXJlIHRoYXQgaGUgaXMgbG92ZWQuCjwvdHJhbnNsYXRpb24+"
translation['1.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igd2Uga25vdyB0aGF0IGFjdHMgb2Ygc2VydmljZSBwcm9tcHRlZCBieSBmZWFyIGNvcHkgYXMgY2xvc2VseSBhcyBwb3NzaWJsZSB0aGUgbWluaXN0cmF0aW9ucyBvZiBhZmZlY3Rpb24uIEluZGVlZCwgZXZlbiBwbG90cyBhZ2FpbnN0IGRlc3BvdHMgYXMgb2Z0ZW4gYXMgbm90IGFyZSB0aGUgd29yayBvZiB0aG9zZSB3aG8gcHJvZmVzcyB0aGUgZGVlcGVzdCBhZmZlY3Rpb24gZm9yIHRoZW0u4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UbyB0aGlzIFNpbW9uaWRlcyByZXBsaWVkOiDigJxXZWxsLCB0aGUgcG9pbnRzIHRoYXQgeW91IHJhaXNlIHNlZW0gdG8gbWUgbWVyZSB0cmlmbGVzLiBGb3IgSSBub3RpY2UgdGhhdCBtYW55IHJlc3BlY3RlZCBtZW4gd2lsbGluZ2x5IGdvIHNob3J0IGluIHRoZSBtYXR0ZXIgb2YgbWVhdCBhbmQgZHJpbmsgYW5kIGRlbGljYWNpZXMsIGFuZCBkZWxpYmVyYXRlbHkgYWJzdGFpbiBmcm9tIHNleHVhbCBpbmR1bGdlbmNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBJIHdpbGwgc2hvdyB5b3Ugd2hlcmUgeW91IGhhdmUgYSBncmVhdCBhZHZhbnRhZ2Ugb3ZlciBwcml2YXRlIGNpdGl6ZW5zLiBZb3VyIG9iamVjdHMgYXJlIHZhc3QsIHlvdXIgYXR0YWlubWVudCBzd2lmdDogeW91IGhhdmUgbHV4dXJpZXMgaW4gYWJ1bmRhbmNlOiB5b3Ugb3duIGhvcnNlcyB1bmVxdWFsbGVkIGluIGV4Y2VsbGVuY2UsIGFybXMgdW5tYXRjaGVkIGluIGJlYXV0eSwgc3VwZXJiIGpld2VscnkgZm9yIHdvbWVuLCBzdGF0ZWx5IGhvdXNlcyBmdWxsIG9mIGNvc3RseSBmdXJuaXR1cmU6IG1vcmVvdmVyIHlvdSBoYXZlIHNlcnZhbnRzIG1hbnkgaW4gbnVtYmVyIGFuZCBleGNlbGxlbnQgaW4gYWNjb21wbGlzaG1lbnRzIGFuZCB5b3UgYXJlIHJpY2ggaW4gcG93ZXIgdG8gaGFybSBlbmVtaWVzIGFuZCByZXdhcmQgZnJpZW5kcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG8gdGhpcyBIaWVybyBhbnN3ZXJlZDoKPC90cmFuc2xhdGlvbj4="
translation['2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPuKAnFdlbGwsIFNpbW9uaWRlcywgdGhhdCB0aGUgbXVsdGl0dWRlIHNob3VsZCBiZSBkZWNlaXZlZCBieSBkZXNwb3RpYyBwb3dlciBzdXJwcmlzZXMgbWUgbm90IGF0IGFsbCwgc2luY2UgdGhlIG1vYiBzZWVtcyB0byBndWVzcyB3aG9sbHkgYnkgYXBwZWFyYW5jZXMgdGhhdCBvbmUgbWFuIGlzIGhhcHB5LCBhbm90aGVyIG1pc2VyYWJsZS4KPC90cmFuc2xhdGlvbj4="
translation['2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkRlc3BvdGlzbSBmbGF1bnRzIGl0cyBzZWVtaW5nIHByZWNpb3VzIHRyZWFzdXJlcyBvdXRzcHJlYWQgYmVmb3JlIHRoZSBnYXplIG9mIHRoZSB3b3JsZDogYnV0IGl0cyB0cm91YmxlcyBpdCBrZWVwcyBjb25jZWFsZWQgaW4gdGhlIGhlYXJ0IG9mIHRoZSBkZXNwb3QsIGluIHRoZSBwbGFjZSB3aGVyZSBodW1hbiBoYXBwaW5lc3MgYW5kIHVuaGFwcGluZXNzIGFyZSBzdG9yZWQgYXdheS4KPC90cmFuc2xhdGlvbj4="
translation['2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoYXQgdGhpcyBlc2NhcGVzIHRoZSBvYnNlcnZhdGlvbiBvZiB0aGUgbXVsdGl0dWRlIEkgc2F5LCBJIGFtIG5vdCBzdXJwcmlzZWQuIEJ1dCB3aGF0IGRvZXMgc2VlbSBzdXJwcmlzaW5nIHRvIG1lIGlzIHRoYXQgbWVuIGxpa2UgeW91LCB3aG9zZSBpbnRlbGxpZ2VuY2UgaXMgc3VwcG9zZWQgdG8gZ2l2ZSB5b3UgYSBjbGVhcmVyIHZpZXcgb2YgbW9zdCB0aGluZ3MgdGhhbiB5b3VyIGV5ZXMsIHNob3VsZCBiZSBlcXVhbGx5IGJsaW5kIHRvIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBJIGtub3cgd2VsbCBlbm91Z2ggYnkgZXhwZXJpZW5jZSwgU2ltb25pZGVzLCBhbmQgSSB0ZWxsIHlvdSB0aGF0IGRlc3BvdHMgZ2V0IHRoZSBzbWFsbGVzdCBzaGFyZSBvZiB0aGUgZ3JlYXRlc3QgYmxlc3NpbmdzLCBhbmQgaGF2ZSBtb3N0IG9mIHRoZSBncmVhdGVzdCBldmlscy4KPC90cmFuc2xhdGlvbj4="
translation['2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRodXMsIGZvciBpbnN0YW5jZSwgaWYgcGVhY2UgaXMgaGVsZCB0byBiZSBhIGdyZWF0ZXN0IGJsZXNzaW5nIHRvIG1hbmtpbmQsIHZlcnkgbGl0dGxlIG9mIGl0IGZhbGxzIHRvIHRoZSBzaGFyZSBvZiBkZXNwb3RzOiBpZiB3YXIgaXMgYSBncmVhdCBldmlsLCBvZiB0aGF0IGRlc3BvdHMgcmVjZWl2ZSB0aGUgbGFyZ2VzdCBzaGFyZS4KPC90cmFuc2xhdGlvbj4="
translation['2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRvIGJlZ2luIHdpdGgsIHNvIGxvbmcgYXMgdGhlaXIgc3RhdGUgaXMgbm90IGVuZ2FnZWQgaW4gYSB3YXIgaW4gd2hpY2ggYWxsIHRha2UgcGFydCwgcHJpdmF0ZSBjaXRpemVucyBhcmUgZnJlZSB0byBnbyB3aGVyZXZlciB0aGV5IGNob29zZSB3aXRob3V0IGZlYXIgb2YgYmVpbmcga2lsbGVkLiBCdXQgYWxsIGRlc3BvdHMgbW92ZSBldmVyeXdoZXJlIGFzIGluIGFuIGVuZW15J3MgY291bnRyeTsgYXQgYW55IHJhdGUgdGhleSB0aGluayB0aGV5IGFyZSBib3VuZCB0byB3ZWFyIGFybXMgY29udGludWFsbHkgdGhlbXNlbHZlcywgYW5kIHRvIHRha2UgYW4gYXJtZWQgZXNjb3J0IGFib3V0IHdpdGggdGhlbSBhdCBhbGwgdGltZXMuCjwvdHJhbnNsYXRpb24+"
translation['2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxTZWNvbmRseSwgaW4gdGhlIGV2ZW50IG9mIGFuIGV4cGVkaXRpb24gYWdhaW5zdCBhbiBlbmVteSdzIGNvdW50cnksIHByaXZhdGUgY2l0aXplbnMgYXQgbGVhc3QgdGhpbmsgdGhlbXNlbHZlcyBzYWZlIGFzIHNvb24gYXMgdGhleSBoYXZlIGNvbWUgaG9tZS4gQnV0IHdoZW4gZGVzcG90cyByZWFjaCB0aGVpciBvd24gY2l0eSwgdGhleSBrbm93IHRoYXQgdGhleSBhcmUgbm93IGFtb25nIG1vcmUgZW5lbWllcyB0aGFuIGV2ZXIuCjwvdHJhbnNsYXRpb24+"
translation['2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BZ2Fpbiwgc3VwcG9zZSB0aGF0IHN0cmFuZ2VycyBpbnZhZGUgdGhlaXIgY2l0eSBpbiBzdXBlcmlvciBmb3JjZTsgdHJ1ZSwgdGhlIHdlYWtlciBhcmUgY29uc2Npb3VzIG9mIGRhbmdlciB3aGlsZSB0aGV5IGFyZSBvdXRzaWRlIHRoZSB3YWxsczsgeWV0IG9uY2UgdGhleSBhcmUgaW5zaWRlIHRoZSBmb3J0cmVzcywgYWxsIGZlZWwgdGhlbXNlbHZlcyBiZXN0b3dlZCBpbiBzYWZldHkuIEJ1dCB0aGUgZGVzcG90IGlzIG5vdCBvdXQgb2YgZGFuZ2VyIGV2ZW4gd2hlbiBoZSBwYXNzZXMgd2l0aGluIHRoZSBwYWxhY2UgZ2F0ZXM7IG5heSwgaXQgaXMganVzdCB0aGVyZSB0aGF0IGhlIHRoaW5rcyBoZSBtdXN0IHdhbGsgbW9zdCB3YXJpbHkuCjwvdHJhbnNsYXRpb24+"
translation['2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5PbmNlIGFnYWluLCB0byBwcml2YXRlIGNpdGl6ZW5zIGEgdHJ1Y2Ugb3IgcGVhY2UgYnJpbmdzIHJlc3QgZnJvbSB3YXI7IGJ1dCBkZXNwb3RzIGFyZSBuZXZlciBhdCBwZWFjZSB3aXRoIHRoZSBwZW9wbGUgc3ViamVjdCB0byB0aGVpciBkZXNwb3Rpc20sIGFuZCBubyB0cnVjZSBjYW4gZXZlciBtYWtlIGEgZGVzcG90IGNvbmZpZGVudC4KPC90cmFuc2xhdGlvbj4="
translation['2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlcmUgYXJlLCBvZiBjb3Vyc2UsIHdhcnMgdGhhdCBhcmUgd2FnZWQgYnkgc3RhdGVzIGFnYWluc3Qgb25lIGFub3RoZXIsIGFuZCB3YXJzIHdhZ2VkIGJ5IHRoZSBkZXNwb3QgYWdhaW5zdCBoaXMgb3BwcmVzc2VkIHN1YmplY3RzLiBOb3cgdGhlIGhhcmRzaGlwcyBpbmNpZGVudGFsIHRvIHRoZXNlIHdhcnMgdGhhdCBmYWxsIG9uIHRoZSBjaXRpemVuIGZhbGwgYWxzbyBvbiB0aGUgZGVzcG90Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYm90aCBtdXN0IHdlYXIgYXJtcywgYmUgd2F0Y2hmdWwsIHJ1biByaXNrczsgYW5kIHRoZSBzdGluZyBvZiBhIGRlZmVhdCBpcyBmZWx0IGJ5IGJvdGggYWxpa2UuCjwvdHJhbnNsYXRpb24+"
translation['2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5TbyBmYXIsIHRoZW4sIGJvdGggYXJlIGVxdWFsbHkgYWZmZWN0ZWQgYnkgd2Fycy4gQnV0IHRoZSBqb3lzIHRoYXQgZmFsbCB0byB0aGUgY2l0aXplbnMgb2Ygc3RhdGVzIGF0IHdhciBhcmUgbm90IGV4cGVyaWVuY2VkIGJ5IGRlc3BvdHMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkkuZS4sIGluIHRoZSB3YXJzIHRoYXQgaGUgd2FnZXMgYWdhaW5zdCBoaXMgc3ViamVjdHMuIFRoZSB3aG9sZSBvZiB0aGlzIHBhcmFncmFwaCBpcyBvYnNjdXJlbHkgZXhwcmVzc2VkIGFuZCBoaWdobHkgYXJ0aWZpY2lhbDsgYW5kIGl0IGhhcyBiZWVuIHZhcmlvdXNseSBpbnRlcnByZXRlZC4gVGhlIHRleHQgYWxzbyBpcyB1bmNlcnRhaW4uPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IsIHlvdSBrbm93LCB3aGVuIHN0YXRlcyBkZWZlYXQgdGhlaXIgZm9lcyBpbiBhIGJhdHRsZSwgd29yZHMgZmFpbCBvbmUgdG8gZGVzY3JpYmUgdGhlIGpveSB0aGV5IGZlZWwgaW4gdGhlIHJvdXQgb2YgdGhlIGVuZW15LCBpbiB0aGUgcHVyc3VpdCwgaW4gdGhlIHNsYXVnaHRlciBvZiB0aGUgZW5lbXkuIFdoYXQgdHJhbnNwb3J0cyBvZiB0cml1bXBoYW50IHByaWRlISBXaGF0IGEgaGFsbyBvZiBnbG9yeSBhYm91dCB0aGVtISBXaGF0IGNvbWZvcnQgdG8gdGhpbmsgdGhhdCB0aGV5IGhhdmUgZXhhbHRlZCB0aGVpciBjaXR5IQo8L3RyYW5zbGF0aW9uPg=="
translation['2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5FdmVyeW9uZSBpcyBjcnlpbmc6IGBJIGhhZCBhIHNoYXJlIGluIHRoZSBwbGFuLCBJIGtpbGxlZCBtb3N0JzsgYW5kIGl0J3MgaGFyZCB0byBmaW5kIHdoZXJlIHRoZXkgZG9uJ3QgcmV2ZWwgaW4gZmFsc2Vob29kLCBjbGFpbWluZyB0byBoYXZlIGtpbGxlZCBtb3JlIHRoYW4gYWxsIHRoYXQgd2VyZSByZWFsbHkgc2xhaW4uIFNvIGdsb3Jpb3VzIGl0IHNlZW1zIHRvIHRoZW0gdG8gaGF2ZSB3b24gYSBncmVhdCB2aWN0b3J5IQo8L3RyYW5zbGF0aW9uPg=="
translation['2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBhIGRlc3BvdCBoYXJib3VycyBzdXNwaWNpb24sIGFuZCwgd2VsbCBhd2FyZSB0aGF0IG9wcG9zaXRpb24gaXMgb24gZm9vdCwgcHV0cyB0aGUgY29uc3BpcmF0b3JzIHRvIGRlYXRoLCBoZSBrbm93cyB0aGF0IGhlIGRvZXMgbm90IGV4YWx0IHRoZSBjaXR5IGFzIGEgd2hvbGU7IGhlIHVuZGVyc3RhbmRzIHRoYXQgdGhlIG51bWJlciBvZiBoaXMgc3ViamVjdHMgd2lsbCBiZSBsZXNzOyBoZSBjYW5ub3QgbG9vayBjaGVlcmZ1bDsgbm9yIGRvZXMgaGUgYm9hc3QgaGltc2VsZiBvZiBoaXMgYWNoaWV2ZW1lbnQ7IG5heSwgaGUgYmVsaXR0bGVzIHRoZSBvY2N1cnJlbmNlIGFzIG11Y2ggYXMgcG9zc2libGUsIGFuZCBleHBsYWlucywgd2hpbGUgaGUgaXMgYXQgdGhlIHdvcmssIHRoYXQgdGhlcmUgaXMgbm90aGluZyB3cm9uZyBpbiB3aGF0IGhlIGhhcyBkb25lLCBzbyBmYXIgYXJlIGhpcyBkZWVkcyBmcm9tIHNlZW1pbmcgaG9ub3VyYWJsZSBldmVuIHRvIGhpbXNlbGYuCjwvdHJhbnNsYXRpb24+"
translation['2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5FdmVuIHRoZSBkZWF0aCBvZiB0aG9zZSB3aG9tIGhlIGZlYXJlZCBkb2VzIG5vdCByZXN0b3JlIGhpbSB0byBjb25maWRlbmNlOyBoZSBpcyB5ZXQgbW9yZSBvbiBoaXMgZ3VhcmQgYWZ0ZXJ3YXJkcyB0aGFuIGJlZm9yZS4gQW5kIG5vdyBJIGhhdmUgc2hvd24geW91IHRoZSBraW5kIG9mIHdhciB0aGF0IGEgZGVzcG90IHdhZ2VzIGNvbnRpbnVhbGx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUdXJuIG5leHQgdG8gZnJpZW5kc2hpcCwgYW5kIGJlaG9sZCBob3cgZGVzcG90cyBzaGFyZSBpbiBpdC4gRmlyc3QgbGV0IHVzIGNvbnNpZGVyIHdoZXRoZXIgZnJpZW5kc2hpcCBpcyBhIGdyZWF0IGJsZXNzaW5nIHRvIG1hbmtpbmQuCjwvdHJhbnNsYXRpb24+"
translation['3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gYSBtYW4gaXMgbG92ZWQgYnkgZnJpZW5kcywgSSB0YWtlIGl0LCB0aGV5IHJlam9pY2UgYXQgaGlzIHByZXNlbmNlLCBkZWxpZ2h0IHRvIGRvIGhpbSBnb29kLCBtaXNzIGhpbSB3aGVuIGhlIGlzIGFic2VudCwgZ3JlZXQgaGltIG1vc3Qgam95ZnVsbHkgb24gaGlzIHJldHVybiwgcmVqb2ljZSB3aXRoIGhpbSBpbiBoaXMgZ29vZCBmb3J0dW5lLCB1bml0ZSBpbiBhaWRpbmcgaGltIHdoZW4gdGhleSBzZWUgaGltIHRyaXBwaW5nLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEN5cm9wLiAxLjYuMjQiIHZhbGlkPSJ5ZXMiPlhlbi4gQ3lyb3AuIDEuNi4yNDwvYmlibD48L25vdGU+IEV2ZW4gc3RhdGVzIGFyZSBub3QgYmxpbmQgdG8gdGhlIGZhY3QgdGhhdCBmcmllbmRzaGlwIGlzIGEgdmVyeSBncmVhdCBibGVzc2luZywgYW5kIHZlcnkgZGVsaWdodGZ1bCB0byBtZW4uIEF0IGFueSByYXRlLCBtYW55IHN0YXRlcyBoYXZlIGEgbGF3IHRoYXQgYWR1bHRlcmVycyBvbmx5IG1heSBiZSBwdXQgdG8gZGVhdGggd2l0aCBpbXB1bml0eSwgb2J2aW91c2x5IGZvciB0aGlzIHJlYXNvbiwgYmVjYXVzZSB0aGV5IGJlbGlldmUgdGhlbSB0byBiZSBkZXN0cm95ZXJzIG9mIHRoZSB3aWZlJ3MgZnJpZW5kc2hpcCB3aXRoIGhlciBodXNiYW5kOwo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEN5cm9wLiAxLjYuMjQiIHZhbGlkPSJ5ZXMiPlhlbi4gQ3lyb3AuIDEuNi4yNDwvYmlibD48L3RyYW5zbGF0aW9uPg=="
translation['3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPmFsdGhvdWdoLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDPgM614b22PC9mb3JlaWduPiBzaG91bGQgYmUgcmVuZGVyZWQg4oCcdGhvdWdoLOKAnSBub3Qg4oCcc2luY2XigJ0gaGVyZSwgZm9yIGl0IGludHJvZHVjZXMgYSByZWFzb24gd2h5IG9uZSBtaWdodCBzdXBwb3NlIHRoYXQgdGhlcmUgd291bGQgYmUgc29tZSByZXN0cmljdGlvbiBvbiB0aGUgcmlnaHQgdG8ga2lsbCBhbiBhZHVsdGVyZXIsIGFuZCBub3QgdGhlIHJlYXNvbiB3aHkgYWxsIGFkdWx0ZXJlcnMgbWF5IGJlIGtpbGxlZCB3aXRoIGltcHVuaXR5LiBDb21wYXJlLCBmb3IgaW5zdGFuY2UsIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFByb3QuIDMzNWMiIHZhbGlkPSJ5ZXMiPlBsYXQuIFByb3QuIDMzNWM8L2JpYmw+LiBUaGUg4oCcYWNjaWRlbnTigJ0gaXMsIG9mIGNvdXJzZSwgcmFwZS48L25vdGU+IHdoZW4gYSB3b21hbidzIGxhcHNlIGlzIHRoZSByZXN1bHQgb2Ygc29tZSBhY2NpZGVudCwgaHVzYmFuZHMgZG8gbm90IGhvbm91ciB0aGVpciB3aXZlcyBhbnkgbGVzcyBvbiB0aGF0IGFjY291bnQsIHByb3ZpZGVkIHRoYXQgd2l2ZXMgc2VlbSB0byByZXNlcnZlIHRoZWlyIGFmZmVjdGlvbiB1bmJsZW1pc2hlZC4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQz4DOteG9tjwvZm9yZWlnbj4gc2hvdWxkIGJlIHJlbmRlcmVkIOKAnHRob3VnaCzigJ0gbm90IOKAnHNpbmNl4oCdIGhlcmUsIGZvciBpdCBpbnRyb2R1Y2VzIGEgcmVhc29uIHdoeSBvbmUgbWlnaHQgc3VwcG9zZSB0aGF0IHRoZXJlIHdvdWxkIGJlIHNvbWUgcmVzdHJpY3Rpb24gb24gdGhlIHJpZ2h0IHRvIGtpbGwgYW4gYWR1bHRlcmVyLCBhbmQgbm90IHRoZSByZWFzb24gd2h5IGFsbCBhZHVsdGVyZXJzIG1heSBiZSBraWxsZWQgd2l0aCBpbXB1bml0eS4gQ29tcGFyZSwgZm9yIGluc3RhbmNlLCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBQcm90LiAzMzVjIiB2YWxpZD0ieWVzIj5QbGF0LiBQcm90LiAzMzVjPC9iaWJsPi4gVGhlIOKAnGFjY2lkZW504oCdIGlzLCBvZiBjb3Vyc2UsIHJhcGUuPC90cmFuc2xhdGlvbj4="
translation['3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkluIG15IGp1ZGdtZW50LCB0byBiZSBsb3ZlZCBpcyBhIGJsZXNzaW5nIHNvIHByZWNpb3VzIHRoYXQgSSBiZWxpZXZlIGdvb2QgdGhpbmdzIGZhbGwgbGl0ZXJhbGx5IG9mIHRoZW1zZWx2ZXMgb24gaGltIHdobyBpcyBsb3ZlZCBmcm9tIGdvZHMgYW5kIG1lbiBhbGlrZS4KPC90cmFuc2xhdGlvbj4="
translation['3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxTdWNoLCB0aGVuLCBpcyB0aGUgbmF0dXJlIG9mIHRoaXMgcG9zc2Vzc2lvbuKAlGEgcG9zc2Vzc2lvbiB3aGVyZWluIGRlc3BvdHMgYWJvdmUgYWxsIG90aGVyIG1lbiBhcmUgc3RpbnRlZC4gSWYgeW91IHdhbnQgdG8ga25vdyB0aGF0IEkgYW0gc3BlYWtpbmcgdGhlIHRydXRoLCBTaW1vbmlkZXMsIGNvbnNpZGVyIHRoZSBxdWVzdGlvbiBpbiB0aGlzIHdheS4KPC90cmFuc2xhdGlvbj4="
translation['3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBmaXJtZXN0IGZyaWVuZHNoaXBzLCBJIHRha2UgaXQsIGFyZSBzdXBwb3NlZCB0byBiZSB0aG9zZSB0aGF0IHVuaXRlIHBhcmVudHMgdG8gY2hpbGRyZW4sIGNoaWxkcmVuIHRvIHBhcmVudHMsIHdpdmVzIHRvIGh1c2JhbmRzLCBjb21yYWRlcyB0byBjb21yYWRlcy4KPC90cmFuc2xhdGlvbj4="
translation['3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB5b3Ugd2lsbCBmaW5kLCBpZiB5b3Ugd2lsbCBidXQgb2JzZXJ2ZSwgdGhhdCBwcml2YXRlIGNpdGl6ZW5zIGFyZSwgaW4gZmFjdCwgbG92ZWQgbW9zdCBkZWVwbHkgYnkgdGhlc2UuIEJ1dCB3aGF0IG9mIGRlc3BvdHM/IE1hbnkgaGF2ZSBzbGFpbiB0aGVpciBvd24gY2hpbGRyZW47IG1hbnkgaGF2ZSB0aGVtc2VsdmVzIGJlZW4gbXVyZGVyZWQgYnkgdGhlaXIgY2hpbGRyZW47IG1hbnkgYnJvdGhlcnMsIHBhcnRuZXJzIGluIGRlc3BvdGlzbSwgaGF2ZSBwZXJpc2hlZCBieSBlYWNoIG90aGVyJ3MgaGFuZDsgbWFueSBoYXZlIGJlZW4gZGVzdHJveWVkIGV2ZW4gYnkgdGhlaXIgb3duIHdpdmVzLCBheWUsIGFuZCBieSBjb21yYWRlcyB3aG9tIHRoZXkgYWNjb3VudGVkIHRoZWlyIGNsb3Nlc3QgZnJpZW5kcy4KPC90cmFuc2xhdGlvbj4="
translation['3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlNlZWluZywgdGhlbiwgdGhhdCB0aGV5IGFyZSBzbyBoYXRlZCBieSB0aG9zZSB3aG8gYXJlIGJvdW5kIGJ5IG5hdHVyYWwgdGllcyBhbmQgY29uc3RyYWluZWQgYnkgY3VzdG9tIHRvIGxvdmUgdGhlbSBtb3N0LCBob3cgYXJlIHdlIHRvIHN1cHBvc2UgdGhhdCB0aGV5IGFyZSBsb3ZlZCBieSBhbnkgb3RoZXIgYmVpbmc/CjwvdHJhbnNsYXRpb24+"
translation['4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOZXh0IHRha2UgY29uZmlkZW5jZS4gU3VyZWx5IGhlIHdobyBoYXMgdmVyeSBsaXR0bGUgb2YgdGhhdCBpcyBzdGludGVkIGluIGEgZ3JlYXQgYmxlc3Npbmc/IFdoYXQgY29tcGFuaW9uc2hpcCBpcyBwbGVhc2FudCB3aXRob3V0IG11dHVhbCB0cnVzdD8gV2hhdCBpbnRlcmNvdXJzZSBiZXR3ZWVuIGh1c2JhbmQgYW5kIHdpZmUgaXMgZGVsaWdodGZ1bCB3aXRob3V0IGNvbmZpZGVuY2U/IFdoYXQgc3F1aXJlIGlzIHBsZWFzYW50IGlmIGhlIGlzIG5vdCB0cnVzdGVkPwo8L3RyYW5zbGF0aW9uPg=="
translation['4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk5vdyBvZiB0aGlzIGNvbmZpZGVuY2UgaW4gb3RoZXJzIGRlc3BvdHMgZW5qb3kgdGhlIHNtYWxsZXN0IHNoYXJlLiBUaGV5IGdvIGluIGNvbnN0YW50IHN1c3BpY2lvbiBldmVuIG9mIHRoZWlyIG1lYXQgYW5kIGRyaW5rOyB0aGV5IGJpZCB0aGVpciBzZXJ2aXRvcnMgdGFzdGUgdGhlbSBmaXJzdCwgYmVmb3JlIHRoZSBsaWJhdGlvbiBpcyBvZmZlcmVkIHRvIHRoZSBnb2RzLCBiZWNhdXNlIG9mIHRoZWlyIG1pc2dpdmluZyB0aGF0IHRoZXkgbWF5IHN1cCBwb2lzb24gaW4gdGhlIGRpc2ggb3IgdGhlIGJvd2wuCjwvdHJhbnNsYXRpb24+"
translation['4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB0byBhbGwgb3RoZXIgbWVuIHRoZWlyIGZhdGhlcmxhbmQgaXMgdmVyeSBwcmVjaW91cy4gRm9yIGNpdGl6ZW5zIHdhcmQgb25lIGFub3RoZXIgd2l0aG91dCBwYXkgZnJvbSB0aGVpciBzbGF2ZXMgYW5kIGZyb20gZXZpbGRvZXJzLCB0byB0aGUgZW5kIHRoYXQgbm9uZSBvZiB0aGUgY2l0aXplbnMgbWF5IHBlcmlzaCBieSBhIHZpb2xlbnQgZGVhdGguCjwvdHJhbnNsYXRpb24+"
translation['4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZXkgaGF2ZSBnb25lIHNvIGZhciBpbiBtZWFzdXJlcyBvZiBwcmVjYXV0aW9uIHRoYXQgbWFueSBoYXZlIG1hZGUgYSBsYXcgd2hlcmVieSBldmVuIHRoZSBjb21wYW5pb24gb2YgdGhlIGJsb29kZ3VpbHR5IGlzIGRlZW1lZCBpbXB1cmU7IGFuZCBzb+KAlHRoYW5rcyB0byB0aGUgZmF0aGVybGFuZOKAlGV2ZXJ5IGNpdGl6ZW4gbGl2ZXMgaW4gc2VjdXJpdHkuCjwvdHJhbnNsYXRpb24+"
translation['4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBmb3IgZGVzcG90cyB0aGUgcG9zaXRpb24gaXMgdGhlIHJldmVyc2UgaW4gdGhpcyBjYXNlIHRvby4gSW5zdGVhZCBvZiBhdmVuZ2luZyB0aGVtLCB0aGUgY2l0aWVzIGhlYXAgaG9ub3VycyBvbiB0aGUgc2xheWVyIG9mIHRoZSBkZXNwb3Q7IGFuZCwgd2hlcmVhcyB0aGV5IGV4Y2x1ZGUgdGhlIG11cmRlcmVycyBvZiBwcml2YXRlIHBlcnNvbnMgZnJvbSB0aGUgdGVtcGxlcywgdGhlIGNpdGllcywgc28gZmFyIGZyb20gdHJlYXRpbmcgYXNzYXNzaW5zIGluIHRoZSBzYW1lIG1hbm5lciwgYWN0dWFsbHkgcHV0IHVwIHN0YXR1ZXMgb2YgdGhlbSBpbiB0aGUgaG9seSBwbGFjZXMuCjwvdHJhbnNsYXRpb24+"
translation['4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJZiB5b3Ugc3VwcG9zZSB0aGF0IGp1c3QgYmVjYXVzZSBoZSBoYXMgbW9yZSBwb3NzZXNzaW9ucyB0aGFuIHRoZSBwcml2YXRlIGNpdGl6ZW4sIHRoZSBkZXNwb3QgZ2V0cyBtb3JlIGVuam95bWVudCBvdXQgb2YgdGhlbSwgdGhpcyBpcyBub3Qgc28gZWl0aGVyLCBTaW1vbmlkZXMuIFRyYWluZWQgYXRobGV0ZXMgZmVlbCBubyBwbGVhc3VyZSB3aGVuIHRoZXkgcHJvdmUgc3VwZXJpb3IgdG8gYW1hdGV1cnMsIGJ1dCB0aGV5IGFyZSBjdXQgdG8gdGhlIHF1aWNrIHdoZW4gdGhleSBhcmUgYmVhdGVuIGJ5IGEgcml2YWwgYXRobGV0ZTsgaW4gbGlrZSBtYW5uZXIgdGhlIGRlc3BvdCBmZWVscyBubyBwbGVhc3VyZSB3aGVuIGhlIGlzIHNlZW4gdG8gcG9zc2VzcyBtb3JlIHRoYW4gcHJpdmF0ZSBjaXRpemVucywgYnV0IGlzIHZleGVkIHdoZW4gaGUgaGFzIGxlc3MgdGhhbiBvdGhlciBkZXNwb3RzOyBmb3IgaGUgcmVnYXJkcyB0aGVtIGFzIGhpcyByaXZhbHMgaW4gd2VhbHRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk5vciBldmVuIGRvZXMgdGhlIGRlc3BvdCBnYWluIHRoZSBvYmplY3Qgb2YgaGlzIGRlc2lyZSBhbnkgcXVpY2tlciB0aGFuIHRoZSBwcml2YXRlIGNpdGl6ZW4uIEZvciB0aGUgcHJpdmF0ZSBjaXRpemVuIGRlc2lyZXMgYSBob3VzZSBvciBhIGZhcm0gb3IgYSBzZXJ2YW50OyBidXQgdGhlIGRlc3BvdCBjb3ZldHMgY2l0aWVzIG9yIHdpZGUgdGVycml0b3J5IG9yIGhhcmJvdXJzIG9yIHN0cm9uZyBjaXRhZGVscywgYW5kIHRoZXNlIGFyZSBmYXIgbW9yZSBkaWZmaWN1bHQgYW5kIHBlcmlsb3VzIHRvIGFjcXVpcmUgdGhhbiB0aGUgb2JqZWN0cyB0aGF0IGF0dHJhY3QgdGhlIGNpdGl6ZW4uCjwvdHJhbnNsYXRpb24+"
translation['4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCwgbW9yZW92ZXIsIHlvdSB3aWxsIGZpbmQgdGhhdCBldmVuIHBvdmVydHkgaXMgcmFyZXIgYW1vbmcgcHJpdmF0ZSBjaXRpemVucyB0aGFuIGFtb25nIGRlc3BvdHMuIEZvciBtdWNoIGFuZCBsaXR0bGUgYXJlIHRvIGJlIG1lYXN1cmVkIG5vdCBieSBudW1iZXIsIGJ1dCBpbiByZWxhdGlvbiB0byB0aGUgb3duZXIncyBuZWVkczsgc28gdGhhdCB3aGF0IGlzIG1vcmUgdGhhbiBlbm91Z2ggaXMgbXVjaCwgYW5kIHdoYXQgaXMgbGVzcyB0aGFuIGVub3VnaCBpcyBsaXR0bGUuCjwvdHJhbnNsYXRpb24+"
translation['4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlZm9yZSwgdGhlIGRlc3BvdCB3aXRoIGhpcyBhYnVuZGFuY2Ugb2Ygd2VhbHRoIGhhcyBsZXNzIHRvIG1lZXQgaGlzIG5lY2Vzc2FyeSBleHBlbnNlcyB0aGFuIHRoZSBwcml2YXRlIGNpdGl6ZW4uIEZvciB3aGlsZSBwcml2YXRlIGNpdGl6ZW5zIGNhbiBjdXQgZG93biB0aGUgZGFpbHkgZXhwZW5kaXR1cmUgYXMgdGhleSBwbGVhc2UsIGRlc3BvdHMgY2Fubm90LCBzaW5jZSB0aGUgbGFyZ2VzdCBpdGVtcyBpbiB0aGVpciBleHBlbnNlcyBhbmQgdGhlIG1vc3QgZXNzZW50aWFsIGFyZSB0aGUgc3VtcyB0aGV5IHNwZW5kIG9uIHRoZSBsaWZlLWd1YXJkcywgYW5kIHRvIGN1cnRhaWwgYW55IG9mIHRoZXNlIG1lYW5zIHJ1aW4uCjwvdHJhbnNsYXRpb24+"
translation['4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5CZXNpZGVzLCB3aGVuIG1lbiBjYW4gaGF2ZSBhbGwgdGhleSBuZWVkIGJ5IGhvbmVzdCBtZWFucywgd2h5IHBpdHkgdGhlbSBhcyB0aG91Z2ggdGhleSB3ZXJlIHBvb3I/IE1heSBub3QgdGhvc2Ugd2hvIHRocm91Z2ggd2FudCBvZiBtb25leSBhcmUgZHJpdmVuIHRvIGV2aWwgYW5kIHVuc2VlbWx5IGV4cGVkaWVudHMgaW4gb3JkZXIgdG8gbGl2ZSwgbW9yZSBqdXN0bHkgYmUgYWNjb3VudGVkIHdyZXRjaGVkIGFuZCBwb3ZlcnR5LXN0cmlja2VuPwo8L3RyYW5zbGF0aW9uPg=="
translation['4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3csIGRlc3BvdHMgYXJlIG5vdCBzZWxkb20gZm9yY2VkIGludG8gdGhlIGNyaW1lIG9mIHJvYmJpbmcgdGVtcGxlcyBhbmQgdGhlaXIgZmVsbG93IG1lbiB0aHJvdWdoIGNocm9uaWMgd2FudCBvZiBjYXNoIHRvIG1lZXQgdGhlaXIgbmVjZXNzYXJ5IGV4cGVuc2VzLiBMaXZpbmcsIGFzIGl0IHdlcmUsIGluIGEgcGVycGV0dWFsIHN0YXRlIG9mIHdhciwgdGhleSBhcmUgZm9yY2VkIHRvIG1haW50YWluIGFuIGFybXksIG9yIHRoZXkgcGVyaXNoLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxEZXNwb3RzIGFyZSBvcHByZXNzZWQgYnkgeWV0IGFub3RoZXIgdHJvdWJsZSwgU2ltb25pZGVzLCB3aGljaCBJIHdpbGwgdGVsbCB5b3Ugb2YuIFRoZXkgcmVjb2duaXplIGEgc3RvdXQtaGVhcnRlZCwgYSB3aXNlIG9yIGFuIHVwcmlnaHQgbWFuIGFzIGVhc2lseSBhcyBwcml2YXRlIGNpdGl6ZW5zIGRvLiBCdXQgaW5zdGVhZCBvZiBhZG1pcmluZyBzdWNoIG1lbiwgdGhleSBmZWFyIHRoZW0s4oCUdGhlIGJyYXZlIGxlc3QgdGhleSBzdHJpa2UgYSBib2xkIHN0cm9rZSBmb3IgZnJlZWRvbSwgdGhlIHdpc2UgbGVzdCB0aGV5IGhhdGNoIGEgcGxvdCwgdGhlIHVwcmlnaHQgbGVzdCB0aGUgcGVvcGxlIGRlc2lyZSB0aGVtIGZvciBsZWFkZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSBnZXQgcmlkIG9mIHN1Y2ggbWVuIHRocm91Z2ggZmVhciwgd2hvIGFyZSBsZWZ0IGZvciB0aGVpciB1c2UsIHNhdmUgb25seSB0aGUgdW5yaWdodGVvdXMsIHRoZSB2aWNpb3VzIGFuZCB0aGUgc2VydmlsZSzigJR0aGUgdW5yaWdodGVvdXMgYmVpbmcgdHJ1c3RlZCBiZWNhdXNlLCBsaWtlIHRoZSBkZXNwb3RzLCB0aGV5IGZlYXIgdGhhdCB0aGUgY2l0aWVzIG1heSBzb21lIGRheSBzaGFrZSBvZmYgdGhlIHlva2UgYW5kIHByb3ZlIHRoZWlyIG1hc3RlcnMsIHRoZSB2aWNpb3VzIG9uIGFjY291bnQgb2YgdGhlIGxpY2VuY2UgdGhleSBlbmpveSBhcyB0aGluZ3MgYXJlLCB0aGUgc2VydmlsZSBiZWNhdXNlIGV2ZW4gdGhleSB0aGVtc2VsdmVzIGhhdmUgbm8gZGVzaXJlIGZvciBmcmVlZG9tPyBUaGlzIHRvbywgdGhlbiwgaXMgYSBoZWF2eSB0cm91YmxlLCBpbiBteSBvcGluaW9uLCB0byBzZWUgdGhlIGdvb2QgaW4gc29tZSBtZW4sIGFuZCB5ZXQgcGVyZm9yY2UgdG8gZW1wbG95IG90aGVycy4KPC90cmFuc2xhdGlvbj4="
translation['5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxGdXJ0aGVybW9yZSwgZXZlbiBhIGRlc3BvdCBtdXN0IG5lZWRzIGxvdmUgaGlzIGNpdHksIGZvciB3aXRob3V0IHRoZSBjaXR5IGhlIGNhbiBlbmpveSBuZWl0aGVyIHNhZmV0eSBub3IgaGFwcGluZXNzLiBCdXQgZGVzcG90aXNtIGZvcmNlcyBoaW0gdG8gZmluZCBmYXVsdCBldmVuIHdpdGggaGlzIGZhdGhlcmxhbmQuIEZvciBoZSBoYXMgbm8gcGxlYXN1cmUgaW4gc2VlaW5nIHRoYXQgdGhlIGNpdGl6ZW5zIGFyZSBzdG91dC1oZWFydGVkIGFuZCB3ZWxsIGFybWVkOyByYXRoZXIgaGUgZGVsaWdodHMgdG8gbWFrZSB0aGUgZm9yZWlnbmVycyBtb3JlIGZvcm1pZGFibGUgdGhhbiB0aGUgY2l0aXplbnMsIGFuZCB0aGVzZSBoZSBlbXBsb3lzIGFzIGEgYm9keS1ndWFyZC4KPC90cmFuc2xhdGlvbj4="
translation['5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCBldmVuIHdoZW4gZmF2b3VyYWJsZSBzZWFzb25zIHlpZWxkIGFidW5kYW5jZSBvZiBnb29kIHRoaW5ncywgdGhlIGRlc3BvdCBpcyBhIHN0cmFuZ2VyIHRvIHRoZSBnZW5lcmFsIGpveTsgZm9yIHRoZSBuZWVkaWVyIHRoZSBwZW9wbGUsIHRoZSBodW1ibGVyIGhlIHRoaW5rcyB0byBmaW5kIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQgbm93LCBTaW1vbmlkZXMs4oCdIGhlIGNvbnRpbnVlZCwg4oCcSSB3YW50IHRvIHNob3cgeW91IGFsbCB0aG9zZSBkZWxpZ2h0cyB0aGF0IHdlcmUgbWluZSB3aGVuIEkgd2FzIGEgcHJpdmF0ZSBjaXRpemVuLCBidXQgd2hpY2ggSSBub3cgZmluZCBhcmUgd2l0aGhlbGQgZnJvbSBtZSBzaW5jZSB0aGUgZGF5IEkgYmVjYW1lIGEgZGVzcG90Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkkgY29tbXVuZWQgd2l0aCBteSBmZWxsb3dzIHRoZW46IHRoZXkgcGxlYXNlZCBtZSBhbmQgSSBwbGVhc2VkIHRoZW0uIEkgY29tbXVuZWQgd2l0aCBteXNlbGYgd2hlbmV2ZXIgSSBkZXNpcmVkIHJlc3QuIEkgcGFzc2VkIHRoZSB0aW1lIGluIGNhcm91c2luZywgb2Z0ZW4gdGlsbCBJIGZvcmdvdCBhbGwgdGhlIHRyb3VibGVzIG9mIG1vcnRhbCBsaWZlLCBvZnRlbiB0aWxsIG15IHNvdWwgd2FzIGFic29yYmVkIGluIHNvbmdzIGFuZCByZXZlbHMgYW5kIGRhbmNlcywgb2Z0ZW4gdGlsbCB0aGUgZGVzaXJlIG9mIHNsZWVwIGZlbGwgb24gbWUgYW5kIGFsbCB0aGUgY29tcGFueS4KPC90cmFuc2xhdGlvbj4="
translation['6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBub3cgSSBhbSBjdXQgb2ZmIGZyb20gdGhvc2Ugd2hvIGhhZCBwbGVhc3VyZSBpbiBtZSwgc2luY2Ugc2xhdmVzIGluc3RlYWQgb2YgZnJpZW5kcyBhcmUgbXkgY29tcmFkZXM7IEkgYW0gY3V0IG9mZiBmcm9tIG15IHBsZWFzYW50IGludGVyY291cnNlIHdpdGggdGhlbSwgc2luY2UgSSBzZWUgaW4gdGhlbSBubyBzaWduIG9mIGdvb2Qtd2lsbCB0b3dhcmRzIG1lLiBEcmluayBhbmQgc2xlZXAgSSBhdm9pZCBhcyBhIHNuYXJlLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRvIGZlYXIgYSBjcm93ZCwgYW5kIHlldCBmZWFyIHNvbGl0dWRlLCB0byBmZWFyIHRvIGdvIHVuZ3VhcmRlZCwgYW5kIHlldCBmZWFyIHRoZSB2ZXJ5IG1lbiB3aG8gZ3VhcmQgeW91LCB0byByZWNvaWwgZnJvbSBhdHRlbmRhbnRzIHVuYXJtZWQgYW5kIHlldCBkaXNsaWtlIHRvIHNlZSB0aGVtIGFybWVk4oCUc3VyZWx5IHRoYXQgaXMgYSBjcnVlbCBwcmVkaWNhbWVudCEKPC90cmFuc2xhdGlvbj4="
translation['6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGVuLCB0byB0cnVzdCBmb3JlaWduZXJzIG1vcmUgdGhhbiBjaXRpemVucywgc3RyYW5nZXJzIG1vcmUgdGhhbiBHcmVla3MsIHRvIGxvbmcgdG8ga2VlcCBmcmVlIG1lbiBzbGF2ZXMsIGFuZCB5ZXQgYmUgZm9yY2VkIHRvIG1ha2Ugc2xhdmVzIGZyZWXigJRkbyB5b3Ugbm90IHRoaW5rIHRoYXQgYWxsIHRoZXNlIGFyZSBzdXJlIHRva2VucyBvZiBhIHNvdWwgdGhhdCBpcyBjcnVzaGVkIHdpdGggZmVhcj88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBDeXJvcC4gMy4xLjI3IiB2YWxpZD0ieWVzIj5YZW4uIEN5cm9wLiAzLjEuMjc8L2JpYmw+Ljwvbm90ZT4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBDeXJvcC4gMy4xLjI3IiB2YWxpZD0ieWVzIj5YZW4uIEN5cm9wLiAzLjEuMjc8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkZlYXIsIHlvdSBrbm93LCBpcyBub3Qgb25seSBwYWluZnVsIGluIGl0c2VsZiBieSByZWFzb24gb2YgaXRzIHByZXNlbmNlIGluIHRoZSBzb3VsLCBidXQgYnkgaGF1bnRpbmcgdXMgZXZlbiBpbiBvdXIgcGxlYXN1cmVzIGl0IHNwb2lscyB0aGVtIHV0dGVybHkuCjwvdHJhbnNsYXRpb24+"
translation['6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJZiwgbGlrZSBtZSwgeW91IGFyZSBhY3F1YWludGVkIHdpdGggd2FyLCBTaW1vbmlkZXMsIGFuZCBldmVyIGhhZCB0aGUgZW5lbXkncyBiYXR0bGUtbGluZSBjbG9zZSBpbiBmcm9udCBvZiB5b3UsIGNhbGwgdG8gbWluZCB3aGF0IHNvcnQgb2YgZm9vZCB5b3UgYXRlIGF0IHRoYXQgdGltZSwgYW5kIHdoYXQgc29ydCBvZiBzbGVlcCB5b3Ugc2xlcHQuCjwvdHJhbnNsYXRpb24+"
translation['6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkkgdGVsbCB5b3UsIHRoZSBwYWlucyB0aGF0IGRlc3BvdHMgc3VmZmVyIGFyZSBzdWNoIGFzIHlvdSBzdWZmZXJlZCB0aGVuLiBOYXksIHRoZXkgYXJlIHN0aWxsIG1vcmUgdGVycmlibGU7IGZvciBkZXNwb3RzIGJlbGlldmUgdGhhdCB0aGV5IHNlZSBlbmVtaWVzIG5vdCBpbiBmcm9udCBhbG9uZSwgYnV0IGFsbCBhcm91bmQgdGhlbS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG8gdGhpcyBTaW1vbmlkZXMgbWFkZSBhbnN3ZXI6CjwvdHJhbnNsYXRpb24+"
translation['6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPuKAnEV4Y2VsbGVudCB3b3JkcyBpbiBwYXJ0LCBJIGdyYW50ISBXYXIgaXMgaW5kZWVkIGEgZmVhcnNvbWUgdGhpbmc6IG5ldmVydGhlbGVzcywgSGllcm8sIG91ciB3YXksIHdoZW4gd2UgYXJlIG9uIGFjdGl2ZSBzZXJ2aWNlLCBpcyB0aGlzOiB3ZSBwb3N0IHNlbnRyaWVzIHRvIGd1YXJkIHVzLCBhbmQgc3VwIGFuZCBzbGVlcCB3aXRoIGEgZ29vZCBjb3VyYWdlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuIEhpZXJvIGFuc3dlcmVkOgo8L3RyYW5zbGF0aW9uPg=="
translation['6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz7igJxObyBkb3VidCB5b3UgZG8sIFNpbW9uaWRlcyEgRm9yIHlvdXIgc2VudHJpZXMgaGF2ZSBzZW50cmllcyBpbiBmcm9udCBvZiB0aGVt4oCUdGhlIGxhd3Ms4oCUYW5kIHNvIHRoZXkgZmVhciBmb3IgdGhlaXIgb3duIHNraW5zIGFuZCByZWxpZXZlIHlvdSBvZiBmZWFyLiBCdXQgZGVzcG90cyBoaXJlIHRoZWlyIGd1YXJkcyBsaWtlIGhhcnZlc3RlcnMuCjwvdHJhbnNsYXRpb24+"
translation['6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIGNoaWVmIHF1YWxpZmljYXRpb24gcmVxdWlyZWQgaW4gdGhlIGd1YXJkcywgSSBwcmVzdW1lLCBpcyBmYWl0aGZ1bG5lc3MuIEJ1dCBpdCBpcyBmYXIgaGFyZGVyIHRvIGZpbmQgb25lIGZhaXRoZnVsIGd1YXJkIHRoYW4gaHVuZHJlZHMgb2Ygd29ya21lbiBmb3IgYW55IGtpbmQgb2Ygd29yaywgZXNwZWNpYWxseSB3aGVuIG1vbmV5IHN1cHBsaWVzIHRoZSBndWFyZHMsIGFuZCB0aGV5IGhhdmUgaXQgaW4gdGhlaXIgcG93ZXIgdG8gZ2V0IGZhciBtb3JlIGluIGEgbW9tZW50IGJ5IGFzc2Fzc2luYXRpbmcgdGhlIGRlc3BvdCB0aGFuIHRoZXkgcmVjZWl2ZSBmcm9tIGhpbSBmb3IgeWVhcnMgb2Ygc2VydmljZSBhbW9uZyBoaXMgZ3VhcmRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWW91IHNhaWQgdGhhdCB5b3UgZW52eSB1cyBvdXIgdW5yaXZhbGxlZCBwb3dlciB0byBjb25mZXIgYmVuZWZpdHMgb24gb3VyIGZyaWVuZHMsIGFuZCBvdXIgdW5yaXZhbGxlZCBzdWNjZXNzIGluIGNydXNoaW5nIG91ciBlbmVtaWVzLiBCdXQgdGhhdCBpcyBhbm90aGVyIGRlbHVzaW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaG93IGNhbiB5b3UgcG9zc2libHkgZmVlbCB0aGF0IHlvdSBiZW5lZml0IGZyaWVuZHMgd2hlbiB5b3Uga25vdyB3ZWxsIHRoYXQgaGUgd2hvIHJlY2VpdmVzIG1vc3QgZnJvbSB5b3Ugd291bGQgYmUgZGVsaWdodGVkIHRvIGdldCBvdXQgb2YgeW91ciBzaWdodCBhcyBxdWlja2x5IGFzIHBvc3NpYmxlPyBGb3IsIG5vIG1hdHRlciB3aGF0IGEgbWFuIGhhcyByZWNlaXZlZCBmcm9tIGEgZGVzcG90LCBub2JvZHkgcmVnYXJkcyBpdCBhcyBoaXMgb3duLCB1bnRpbCBoZSBpcyBvdXRzaWRlIHRoZSBnaXZlcidzIGRvbWluaW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5PciBhZ2FpbiwgaG93IGNhbiB5b3Ugc2F5IHRoYXQgZGVzcG90cyBtb3JlIHRoYW4gb3RoZXJzIGFyZSBhYmxlIHRvIGNydXNoIGVuZW1pZXMsIHdoZW4gdGhleSBrbm93IHdlbGwgdGhhdCBhbGwgd2hvIGFyZSBzdWJqZWN0IHRvIHRoZWlyIGRlc3BvdGlzbSBhcmUgdGhlaXIgZW5lbWllcyBhbmQgdGhhdCBpdCBpcyBpbXBvc3NpYmxlIHRvIHB1dCB0aGVtIGFsbCB0byBkZWF0aCBvciBpbXByaXNvbiB0aGVt4oCUZWxzZSB3aG8gd2lsbCBiZSBsZWZ0IGZvciB0aGUgZGVzcG90IHRvIHJ1bGUgb3Zlcj/igJRhbmQsIGtub3dpbmcgdGhlbSB0byBiZSB0aGVpciBlbmVtaWVzLCB0aGV5IG11c3QgYmV3YXJlIG9mIHRoZW0sIGFuZCwgbmV2ZXJ0aGVsZXNzLCBtdXN0IG5lZWRzIG1ha2UgdXNlIG9mIHRoZW0/CjwvdHJhbnNsYXRpb24+"
translation['6.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgSSBjYW4gYXNzdXJlIHlvdSBvZiB0aGlzLCBTaW1vbmlkZXM6IHdoZW4gYSBkZXNwb3QgZmVhcnMgYW55IGNpdGl6ZW4sIGhlIGlzIHJlbHVjdGFudCB0byBzZWUgaGltIGFsaXZlLCBhbmQgeWV0IHJlbHVjdGFudCB0byBwdXQgaGltIHRvIGRlYXRoLiBUbyBpbGx1c3RyYXRlIG15IHBvaW50LCBzdXBwb3NlIHRoYXQgYSBnb29kIGhvcnNlIG1ha2VzIGhpcyBtYXN0ZXIgYWZyYWlkIHRoYXQgaGUgd2lsbCBkbyBoaW0gc29tZSBmYXRhbCBtaXNjaGllZjogdGhlIG1hbiB3aWxsIGZlZWwgcmVsdWN0YW50IHRvIHNsYXVnaHRlciBoaW0gb24gYWNjb3VudCBvZiBoaXMgZ29vZCBxdWFsaXRpZXMsIGFuZCB5ZXQgaGlzIGFueGlldHkgbGVzdCB0aGUgYW5pbWFsIG1heSB3b3JrIHNvbWUgZmF0YWwgbWlzY2hpZWYgaW4gYSBtb21lbnQgb2YgZGFuZ2VyIHdpbGwgbWFrZSBoaW0gcmVsdWN0YW50IHRvIGtlZXAgaGltIGFsaXZlIGFuZCB1c2UgaGltLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5ZZXMsIGFuZCB0aGlzIGlzIGVxdWFsbHkgdHJ1ZSBvZiBhbGwgcG9zc2Vzc2lvbnMgdGhhdCBhcmUgdHJvdWJsZXNvbWUgYXMgd2VsbCBhcyB1c2VmdWw6IGl0IGlzIHBhaW5mdWwgdG8gcG9zc2VzcyB0aGVtLCBhbmQgcGFpbmZ1bCB0byBnZXQgcmlkIG9mIHRoZW0u4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVzZSBzdGF0ZW1lbnRzIGRyZXcgZnJvbSBTaW1vbmlkZXMgdGhlIGZvbGxvd2luZyByZXBseTog4oCcQSBncmVhdCB0aGluZywgc3VyZWx5LCBIaWVybywgaXMgdGhlIGhvbm91ciBmb3Igd2hpY2ggbWVuIHN0cml2ZSBzbyBlYXJuZXN0bHkgdGhhdCB0aGV5IHVuZGVyZ28gYW55IHRvaWwgYW5kIGVuZHVyZSBhbnkgZGFuZ2VyIHRvIHdpbiBpdCEKPC90cmFuc2xhdGlvbj4="
translation['7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGF0IGlmIGRlc3BvdGlzbSBicmluZ3MgYWxsIHRob3NlIHRyb3VibGVzIHRoYXQgeW91IHRlbGwgb2YsIHlldCBzdWNoIG1lbiBhcyB5b3UsIGl0IHNlZW1zLCBydXNoIGhlYWRsb25nIGludG8gaXQgdGhhdCB5b3UgbWF5IGhhdmUgaG9ub3VyLCB0aGF0IGFsbCBtZW4gbWF5IGNhcnJ5IG91dCB5b3VyIGJlaGVzdHMgaW4gYWxsIHRoaW5ncyB3aXRob3V0IHF1ZXN0aW9uLCB0aGF0IHRoZSBleWVzIG9mIGFsbCBtYXkgd2FpdCBvbiB5b3UsIHRoYXQgYWxsIG1heSByaXNlIGZyb20gdGhlaXIgc2VhdHMgYW5kIG1ha2Ugd2F5IGZvciB5b3UsIHRoYXQgYWxsIGluIHlvdXIgcHJlc2VuY2UgbWF5IGdsb3JpZnkgeW91IGJ5IGRlZWQgYW5kIHdvcmQgYWxpa2UuIChTdWNoLCBpbiBmYWN0LCBpcyB0aGUgYmVoYXZpb3VyIG9mIHN1YmplY3RzIHRvIGRlc3BvdHMgYW5kIHRvIGFueW9uZSBlbHNlIHdobyBoYXBwZW5zIHRvIGJlIHRoZWlyIGhlcm8gYXQgdGhlIG1vbWVudC4pCjwvdHJhbnNsYXRpb24+"
translation['7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkZvciBpbmRlZWQgaXQgc2VlbXMgdG8gbWUsIEhpZXJvLCB0aGF0IGluIHRoaXMgbWFuIGRpZmZlcnMgZnJvbSBvdGhlciBhbmltYWxz4oCUSSBtZWFuLCBpbiB0aGlzIGNyYXZpbmcgZm9yIGhvbm91ci4gSW4gbWVhdCBhbmQgZHJpbmsgYW5kIHNsZWVwIGFuZCBzZXggYWxsIGNyZWF0dXJlcyBhbGlrZSBzZWVtIHRvIHRha2UgcGxlYXN1cmU7IGJ1dCBsb3ZlIG9mIGhvbm91ciBpcyByb290ZWQgbmVpdGhlciBpbiB0aGUgYnJ1dGUgYmVhc3RzIG5vciBpbiBldmVyeSBodW1hbiBiZWluZy4gQnV0IHRoZXkgaW4gd2hvbSBpcyBpbXBsYW50ZWQgYSBwYXNzaW9uIGZvciBob25vdXIgYW5kIHByYWlzZSwgdGhlc2UgYXJlIHRoZXkgd2hvIGRpZmZlciBtb3N0IGZyb20gdGhlIGJlYXN0cyBvZiB0aGUgZmllbGQsIHRoZXNlIGFyZSBhY2NvdW50ZWQgbWVuIGFuZCBub3QgbWVyZSBodW1hbiBiZWluZ3MuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ3lyb3AuIDEuNi4yNSIgdmFsaWQ9InllcyI+WGVuLiBDeXJvcC4gMS42LjI1PC9iaWJsPi48L25vdGU+CjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ3lyb3AuIDEuNi4yNSIgdmFsaWQ9InllcyI+WGVuLiBDeXJvcC4gMS42LjI1PC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBzbywgaW4gbXkgb3BpbmlvbiwgeW91IGhhdmUgZ29vZCByZWFzb24gZm9yIGJlYXJpbmcgYWxsIHRob3NlIGJ1cmRlbnMgdGhhdCBkZXNwb3Rpc20gbGF5cyBvbiB5b3UsIGluIHRoYXQgeW91IGFyZSBob25vdXJlZCBhYm92ZSBhbGwgb3RoZXIgbWVuLiBGb3Igbm8gaHVtYW4gam95IHNlZW1zIHRvIGJlIG1vcmUgbmVhcmx5IGFraW4gdG8gdGhhdCBvZiBoZWF2ZW4gdGhhbiB0aGUgZ2xhZG5lc3Mgd2hpY2ggYXR0ZW5kcyB1cG9uIGhvbm91cnMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRvIHRoaXMgSGllcm8gcmVwbGllZDoKPC90cmFuc2xhdGlvbj4="
translation['7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPuKAnEFoLCBTaW1vbmlkZXMsIEkgdGhpbmsgZXZlbiB0aGUgaG9ub3VycyBlbmpveWVkIGJ5IGRlc3BvdHMgYmVhciBhIGNsb3NlIHJlc2VtYmxhbmNlIHRvIHRoZWlyIGNvdXJ0c2hpcHMsIGFzIEkgaGF2ZSBkZXNjcmliZWQgdGhlbSB0byB5b3UuCjwvdHJhbnNsYXRpb24+"
translation['7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBzZXJ2aWNlcyBvZiB0aGUgaW5kaWZmZXJlbnQgc2VlbWVkIHRvIHVzIG5vdCBhY3RzIG9mIGdyYWNlLCBhbmQgZmF2b3VycyBleHRvcnRlZCBhcHBlYXJlZCB0byBnaXZlIG5vIHBsZWFzdXJlLiBBbmQgc28gaXQgaXMgd2l0aCB0aGUgc2VydmljZXMgcHJvZmZlcmVkIGJ5IG1lbiBpbiBmZWFyOiB0aGV5IGFyZSBub3QgaG9ub3Vycy4KPC90cmFuc2xhdGlvbj4="
translation['7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkZvciBob3cgY2FuIHdlIHNheSB0aGF0IG1lbiB3aG8gYXJlIGZvcmNlZCB0byByaXNlIGZyb20gdGhlaXIgc2VhdHMgcmlzZSB0byBob25vdXIgdGhlaXIgb3BwcmVzc29ycywgb3IgdGhhdCBtZW4gd2hvIG1ha2Ugd2F5IGZvciB0aGVpciBzdXBlcmlvcnMgZGVzaXJlIHRvIGhvbm91ciB0aGVpciBvcHByZXNzb3JzPwo8L3RyYW5zbGF0aW9uPg=="
translation['7.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBhcyBmb3IgcHJlc2VudHMsIG1vc3QgbWVuIG9mZmVyIHRoZW0gdG8gb25lIHdob20gdGhleSBoYXRlLCBhbmQgdGhhdCB0b28gYXQgdGhlIG1vbWVudCB3aGVuIHRoZXkgaGF2ZSBjYXVzZSB0byBmZWFyIHNvbWUgZXZpbCBhdCBoaXMgaGFuZHMuIFRoZXNlIGFjdHMsIEkgc3VwcG9zZSwgbWF5IG5vdCB1bmZhaXJseSBiZSB0YWtlbiBmb3IgYWN0cyBvZiBzZXJ2aWxpdHk7IGJ1dCBob25vdXJzLCBJIHNob3VsZCBzYXksIGV4cHJlc3MgdGhlIHZlcnkgb3Bwb3NpdGUgZmVlbGluZ3MuCjwvdHJhbnNsYXRpb24+"
translation['7.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkZvciB3aGVuZXZlciBtZW4gZmVlbCB0aGF0IHNvbWUgcGVyc29uIGlzIGNvbXBldGVudCB0byBiZSB0aGVpciBiZW5lZmFjdG9yLCBhbmQgY29tZSB0byByZWdhcmQgaGltIGFzIHRoZSBmb3VudGFpbiBvZiBibGVzc2luZ3MsIHNvIHRoYXQgaGVuY2Vmb3J3YXJkIGhpcyBwcmFpc2UgaXMgZXZlciBvbiB0aGVpciBsaXBzLCBldmVyeW9uZSBvZiB0aGVtIGxvb2tzIG9uIGhpbSBhcyBoaXMgcGVjdWxpYXIgYmxlc3NpbmcsIHRoZXkgbWFrZSB3YXkgZm9yIGhpbSBzcG9udGFuZW91c2x5IGFuZCByaXNlIGZyb20gdGhlaXIgc2VhdHMsIHRocm91Z2ggbG92ZSBhbmQgbm90IHRocm91Z2ggZmVhciwgY3Jvd24gaGltIGZvciBoaXMgZ2VuZXJvc2l0eSBhbmQgYmVuZWZpY2VuY2UsIGFuZCBicmluZyBoaW0gZnJlZXdpbGwgb2ZmZXJpbmdzLCB0aGVzZSBzYW1lIG1lbiBpbiBteSBvcGluaW9uLCBob25vdXIgdGhhdCBwZXJzb24gdHJ1bHkgYnkgc3VjaCBzZXJ2aWNlcywgYW5kIGhlIHdobyBpcyBhY2NvdW50ZWQgd29ydGh5IG9mIHRoZW0gaXMgaG9ub3VyZWQgaW4gdmVyeSBkZWVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQsIGZvciBteXNlbGYsIEkgY291bnQgaGltIGEgaGFwcHkgbWFuIHdobyBpcyBob25vdXJlZCB0aHVzOyBmb3IgSSBwZXJjZWl2ZSB0aGF0LCBpbnN0ZWFkIG9mIGJlaW5nIGV4cG9zZWQgdG8gdHJlYXNvbiwgaGUgaXMgYW4gb2JqZWN0IG9mIHNvbGljaXR1ZGUsIGxlc3QgaGFybSBiZWZhbGwgaGltLCBhbmQgaGUgbGl2ZXMgaGlzIGxpZmUgdW5hc3NhaWxlZCBieSBmZWFyIGFuZCBtYWxpY2UgYW5kIGRhbmdlciwgYW5kIGVuam95cyB1bmJyb2tlbiBoYXBwaW5lc3MuIEJ1dCB3aGF0IGlzIHRoZSBkZXNwb3QncyBsb3Q/IEkgdGVsbCB5b3UsIFNpbW9uaWRlcywgaGUgbGl2ZXMgZGF5IGFuZCBuaWdodCBsaWtlIG9uZSBjb25kZW1uZWQgYnkgdGhlIGp1ZGdtZW50IG9mIGFsbCBtZW4gdG8gZGllIGZvciBoaXMgd2lja2VkbmVzcy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBTaW1vbmlkZXMgaGFkIGxpc3RlbmVkIHRvIGFsbCB0aGlzIGhlIGFza2VkOiDigJxQcmF5LCBob3cgY29tZXMgaXQsIEhpZXJvLCBpZiBkZXNwb3Rpc20gaXMgYSB0aGluZyBzbyB2aWxlLCBhbmQgdGhpcyBpcyB5b3VyIHZlcmRpY3QsIHRoYXQgeW91IGRvIG5vdCByaWQgeW91cnNlbGYgb2Ygc28gZ3JlYXQgYW4gZXZpbCwgYW5kIHRoYXQgbm9uZSBvdGhlciwgZm9yIHRoYXQgbWF0dGVyLCB3aG8gaGFzIG9uY2UgYWNxdWlyZWQgaXQsIGV2ZXIgeWV0IHN1cnJlbmRlcmVkIGRlc3BvdGljIHBvd2VyP+KAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcU2ltb25pZGVzLOKAnSBzYWlkIGhlLCDigJx0aGlzIGlzIHRoZSBjcm93bmluZyBtaXNlcnkgb2YgZGVzcG90aWMgcG93ZXIsIHRoYXQgaXQgY2Fubm90IGV2ZW4gYmUgZ290IHJpZCBvZi4gRm9yIGhvdyBjb3VsZCBhbnkgZGVzcG90IGV2ZXIgZmluZCBtZWFucyB0byByZXBheSBpbiBmdWxsIGFsbCB3aG9tIGhlIGhhcyByb2JiZWQsIG9yIGhpbXNlbGYgc2VydmUgYWxsIHRoZSB0ZXJtcyBvZiBpbXByaXNvbm1lbnQgdGhhdCBoZSBoYXMgaW5mbGljdGVkPyBPciBob3cgY291bGQgaGUgZm9yZmVpdCBhIGxpZmUgZm9yIGV2ZXJ5IG1hbiB3aG9tIGhlIGhhcyBwdXQgdG8gZGVhdGg/CjwvdHJhbnNsYXRpb24+"
translation['7.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BaCwgU2ltb25pZGVzLOKAnSBoZSBjcmllZCwg4oCcaWYgaXQgcHJvZml0cyBhbnkgbWFuIHRvIGhhbmcgaGltc2VsZiwga25vdyB3aGF0IG15IGZpbmRpbmcgaXM6IGEgZGVzcG90IGhhcyBtb3N0IHRvIGdhaW4gYnkgaXQsIHNpbmNlIGhlIGFsb25lIGNhbiBuZWl0aGVyIGtlZXAgbm9yIGxheSBkb3duIGhpcyB0cm91YmxlcyB3aXRoIHByb2ZpdC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLCBIaWVybyzigJ0gcmV0b3J0ZWQgU2ltb25pZGVzLCDigJxJIGFtIG5vdCBzdXJwcmlzZWQgdGhhdCB5b3UgYXJlIG91dCBvZiBoZWFydCB3aXRoIGRlc3BvdGlzbSBmb3IgdGhlIG1vbWVudCwgc2luY2UgeW91IGhvbGQgdGhhdCBpdCBjdXRzIHlvdSBvZmYgZnJvbSBnYWluaW5nIHRoZSBhZmZlY3Rpb24gb2YgbWFua2luZCwgd2hpY2ggeW91IGNvdmV0LiBOZXZlcnRoZWxlc3MsIEkgdGhpbmsgSSBjYW4gc2hvdyB5b3UgdGhhdCBydWxlIHNvIGZhciBmcm9tIGJlaW5nIGEgYmFyIHRvIHBvcHVsYXJpdHksIGFjdHVhbGx5IGhhcyB0aGUgYWR2YW50YWdlIG9mIGEgY2l0aXplbidzIGxpZmUuCjwvdHJhbnNsYXRpb24+"
translation['8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkluIHRyeWluZyB0byBkaXNjb3ZlciB3aGV0aGVyIHRoaXMgaXMgc28sIGxldCB1cyBmb3IgdGhlIHRpbWUgYmVpbmcgcGFzcyBvdmVyIHRoZSBxdWVzdGlvbiB3aGV0aGVyIHRoZSBydWxlciwgYmVjYXVzZSBvZiBoaXMgZ3JlYXRlciBwb3dlciwgaXMgYWJsZSB0byBjb25mZXIgbW9yZSBmYXZvdXJzLiBBc3N1bWUgdGhhdCB0aGUgY2l0aXplbiBhbmQgdGhlIGRlc3BvdCBhY3QgYWxpa2UsIGFuZCBjb25zaWRlciB3aGljaCBvZiB0aGUgdHdvIHdpbnMgdGhlIGdyZWF0ZXIgbWVhc3VyZSBvZiBncmF0aXR1ZGUgZnJvbSB0aGUgc2FtZSBhY3Rpb25zLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZb3Ugc2hhbGwgaGF2ZSB0aGUgbW9zdCB0cmlmbGluZyBleGFtcGxlcyB0byBiZWdpbiB3aXRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkZpcnN0LCBzdXBwb3NlIHRoYXQgdHdvIG1lbiBncmVldCBzb21lb25lIHdpdGggYSBmcmllbmRseSByZW1hcmsgb24gc2VlaW5nIGhpbS4gT25lIGlzIGEgcnVsZXIsIHRoZSBvdGhlciBhIGNpdGl6ZW4uIEluIHRoaXMgY2FzZSB3aGljaCBncmVldGluZywgZG8geW91IHRoaW5rLCBpcyB0aGUgbW9yZSBkZWxpZ2h0ZnVsIHRvIHRoZSBoZWFyZXI/IE9yIGFnYWluLCBib3RoIGNvbW1lbmQgdGhlIHNhbWUgbWFuLiBXaGljaCBjb21tZW5kYXRpb24sIGRvIHlvdSB0aGluaywgaXMgdGhlIG1vcmUgd2VsY29tZT8gU3VwcG9zZSB0aGF0IGVhY2ggZG9lcyB0aGUgaG9ub3VycyB3aGVuIGhlIG9mZmVycyBzYWNyaWZpY2UuIFdoaWNoIGludml0YXRpb24sIHRoaW5rIHlvdSwgd2lsbCBiZSBhY2NlcHRlZCB3aXRoIHRoZSBtb3JlIHNpbmNlcmUgdGhhbmtzPwo8L3RyYW5zbGF0aW9uPg=="
translation['8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlN1cHBvc2UgdGhleSBhcmUgZXF1YWxseSBhdHRlbnRpdmUgdG8gYSBzaWNrIG1hbi4gSXMgaXQgbm90IG9idmlvdXMgdGhhdCB0aGUgYXR0ZW50aW9ucyBvZiB0aGUgbWlnaHRpZXN0IGJyaW5nIG1vc3QgY29tZm9ydCB0byB0aGUgcGF0aWVudD8gU3VwcG9zZSB0aGV5IGdpdmUgcHJlc2VudHMgb2YgZXF1YWwgdmFsdWUuIElzIGl0IG5vdCBjbGVhciBpbiB0aGlzIGNhc2UgdG9vIHRoYXQgaGFsZiB0aGUgbnVtYmVyIG9mIGZhdm91cnMgYmVzdG93ZWQgYnkgdGhlIG1pZ2h0aWVzdCBjb3VudCBmb3IgbW9yZSB0aGFuIHRoZSB3aG9sZSBvZiB0aGUgcGxhaW4gY2l0aXplbidzIGdpZnQ/CjwvdHJhbnNsYXRpb24+"
translation['8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk5heSwgdG8gbXkgd2F5IG9mIHRoaW5raW5nLCBldmVuIHRoZSBnb2RzIGNhdXNlIGEgcGVjdWxpYXIgaG9ub3VyIGFuZCBmYXZvdXIgdG8gZGFuY2UgYXR0ZW5kYW5jZSBvbiBhIGdyZWF0IHJ1bGVyLiBGb3Igbm90IG9ubHkgZG9lcyBydWxlIGFkZCBkaWduaXR5IG9mIHByZXNlbmNlIHRvIGEgbWFuLCBidXQgd2UgZmluZCBtb3JlIHBsZWFzdXJlIGluIHRoZSBzaWdodCBvZiB0aGF0IG1hbiB3aGVuIGhlIGlzIGEgcnVsZXIgdGhhbiB3aGVuIGhlIGlzIGEgbWVyZSBjaXRpemVuLCBhbmQgd2UgdGFrZSBtb3JlIHByaWRlIGluIHRoZSBjb252ZXJzYXRpb24gb2YgdGhvc2Ugd2hvIHJhbmsgYWJvdmUgdXMgdGhhbiBpbiB0aGF0IG9mIG91ciBlcXVhbHMuCjwvdHJhbnNsYXRpb24+"
translation['8.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBmYXZvdXJpdGVzLCBtYXJrIHlvdSwgd2hvIHdlcmUgdGhlIHN1YmplY3Qgb2YgeW91ciBiaXR0ZXJlc3QgY29tcGxhaW50IGFnYWluc3QgZGVzcG90aXNtLCBhcmUgbm90IG9mZmVuZGVkIGJ5IG9sZCBhZ2UgaW4gYSBydWxlciwgYW5kIHRha2Ugbm8gYWNjb3VudCBvZiB1Z2xpbmVzcyBpbiB0aGUgcGF0cm9uIHdpdGggd2hvbSB0aGV5IGhhcHBlbiB0byBiZSBhc3NvY2lhdGVkLiBGb3IgaGlnaCByYW5rIGluIGl0c2VsZiBpcyBhIG1vc3Qgc3RyaWtpbmcgZW1iZWxsaXNobWVudCB0byB0aGUgcGVyc29uOiBpdCBjYXN0cyBhIHNoYWRlIG92ZXIgYW55dGhpbmcgcmVwdWxzaXZlIGluIGhpbSBhbmQgc2hvd3MgdXAgaGlzIGJlc3QgZmVhdHVyZXMgaW4gYSBoaWdoIGxpZ2h0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['8.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk1vcmVvdmVyLCBpbmFzbXVjaCBhcyBlcXVhbCBzZXJ2aWNlcyByZW5kZXJlZCBieSB5b3UgcnVsZXJzIGFyZSByZXdhcmRlZCB3aXRoIGRlZXBlciBncmF0aXR1ZGUsIHN1cmVseSwgd2hlbiB5b3UgaGF2ZSB0aGUgcG93ZXIgb2YgZG9pbmcgZmFyIG1vcmUgZm9yIG90aGVycyBieSB5b3VyIGFjdGl2aXRpZXMsIGFuZCBjYW4gbGF2aXNoIGZhciBtb3JlIGdpZnRzIG9uIHRoZW0sIGl0IGlzIG5hdHVyYWwgdGhhdCB5b3Ugc2hvdWxkIGJlIG11Y2ggbW9yZSBkZWVwbHkgbG92ZWQgdGhhbiBwcml2YXRlIGNpdGl6ZW5zLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IaWVybyBpbnN0YW50bHkgcmVqb2luZWQ6CjwvdHJhbnNsYXRpb24+"
translation['8.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPuKAnEluZGVlZCBpdCBpcyBub3Qgc28sIFNpbW9uaWRlczsgZm9yIHdlIGFyZSBmb3JjZWQgdG8gZW5nYWdlIGZhciBvZnRlbmVyIHRoYW4gcHJpdmF0ZSBjaXRpemVucyBpbiB0cmFuc2FjdGlvbnMgdGhhdCBtYWtlIG1lbiBoYXRlZC4KPC90cmFuc2xhdGlvbj4="
translation['8.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRodXMsIHdlIG11c3QgZXh0b3J0IG1vbmV5IGluIG9yZGVyIHRvIGZpbmQgdGhlIGNhc2ggdG8gcGF5IGZvciB3aGF0IHdlIHdhbnQ6IHdlIG11c3QgY29tcGVsIG1lbiB0byBndWFyZCB3aGF0ZXZlciBuZWVkcyBwcm90ZWN0aW9uOiB3ZSBtdXN0IHB1bmlzaCB3cm9uZ2RvZXJzOyB3ZSBtdXN0IGNoZWNrIHRob3NlIHdobyB3b3VsZCBmYWluIHdheCBpbnNvbGVudDsgYW5kIHdoZW4gYSBjcmlzaXMgYXJpc2VzIHRoYXQgY2FsbHMgZm9yIHRoZSBpbW1lZGlhdGUgZGVzcGF0Y2ggb2YgZm9yY2VzIGJ5IGxhbmQgYW5kIHNlYSwgd2UgbXVzdCBzZWUgdGhhdCB0aGVyZSBpcyBubyBkaWxseS1kYWxseWluZy4KPC90cmFuc2xhdGlvbj4="
translation['8.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVyLCBhIGdyZWF0IGRlc3BvdCBtdXN0IG5lZWRzIGhhdmUgbWVyY2VuYXJpZXM7IGFuZCBubyBidXJkZW4gcHJlc3NlcyBtb3JlIGhlYXZpbHkgb24gdGhlIGNpdGl6ZW5zIHRoYW4gdGhhdCwgc2luY2UgdGhleSBiZWxpZXZlIHRoYXQgdGhlc2UgdHJvb3BzIGFyZSBtYWludGFpbmVkIG5vdCBpbiB0aGUgaW50ZXJlc3RzIG9mIGVxdWFsaXR5LCBidXQgZm9yIHRoZSBkZXNwb3QncyBwZXJzb25hbCBlbmRzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['9.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiBhbnN3ZXIgdG8gdGhpcyBTaW1vbmlkZXMgc2FpZDog4oCcV2VsbCwgSGllcm8sIEkgZG8gbm90IGRlbnkgdGhhdCBhbGwgdGhlc2UgbWF0dGVycyBtdXN0IHJlY2VpdmUgYXR0ZW50aW9uLiBCdXQgSSBzaG91bGQgZGl2aWRlIGEgcnVsZXIncyBhY3Rpdml0aWVzIGludG8gdHdvIGNsYXNzZXMsIHRob3NlIHRoYXQgbGVhZCBpbmV2aXRhYmx5IHRvIHVucG9wdWxhcml0eSwgYW5kIHRob3NlIHRoYXQgYXJlIGdyZWV0ZWQgd2l0aCB0aGFua3MuCjwvdHJhbnNsYXRpb24+"
translation['9.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBkdXR5IG9mIHRlYWNoaW5nIHRoZSBwZW9wbGUgd2hhdCB0aGluZ3MgYXJlIGJlc3QsIGFuZCBvZiBkaXNwZW5zaW5nIHByYWlzZSBhbmQgaG9ub3VyIHRvIHRob3NlIHdobyBhY2NvbXBsaXNoIHRoZSBzYW1lIG1vc3QgZWZmaWNpZW50bHksIGlzIGEgZm9ybSBvZiBhY3Rpdml0eSB0aGF0IGlzIGdyZWV0ZWQgd2l0aCB0aGFua3MuIFRoZSBkdXR5IG9mIHByb25vdW5jaW5nIGNlbnN1cmUsIHVzaW5nIGNvZXJjaW9uLCBpbmZsaWN0aW5nIHBhaW5zIGFuZCBwZW5hbHRpZXMgb24gdGhvc2Ugd2hvIGNvbWUgc2hvcnQgaW4gYW55IHJlc3BlY3QsIGlzIG9uZSB0aGF0IG11c3Qgb2YgbmVjZXNzaXR5IGdpdmUgcmlzZSB0byBhIGNlcnRhaW4gYW1vdW50IG9mIHVucG9wdWxhcml0eS4KPC90cmFuc2xhdGlvbj4="
translation['9.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlZm9yZSBteSBzZW50ZW5jZSBpcyB0aGF0IGEgZ3JlYXQgcnVsZXIgc2hvdWxkIGRlbGVnYXRlIHRvIG90aGVycyB0aGUgdGFzayBvZiBwdW5pc2hpbmcgdGhvc2Ugd2hvIHJlcXVpcmUgdG8gYmUgY29lcmNlZCwgYW5kIHNob3VsZCByZXNlcnZlIHRvIGhpbXNlbGYgdGhlIHByaXZpbGVnZSBvZiBhd2FyZGluZyB0aGUgcHJpemVzLiBUaGUgZXhjZWxsZW5jZSBvZiB0aGlzIGFycmFuZ2VtZW50IGlzIGVzdGFibGlzaGVkIGJ5IGRhaWx5IGV4cGVyaWVuY2UuCjwvdHJhbnNsYXRpb24+"
translation['9.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRodXMsIHdoZW4gd2Ugd2FudCB0byBoYXZlIGEgY2hvcmFsIGNvbXBldGl0aW9uLCB0aGUgcnVsZXIgb2ZmZXJzIHByaXplcywgYnV0IHRoZSB0YXNrIG9mIGFzc2VtYmxpbmcgdGhlIGNob2lycyBpcyBkZWxlZ2F0ZWQgdG8gY2hvaXItbWFzdGVycywgYW5kIG90aGVycyBoYXZlIHRoZSB0YXNrIG9mIHRyYWluaW5nIHRoZW0gYW5kIGNvZXJjaW5nIHRob3NlIHdobyBjb21lIHNob3J0IGluIGFueSByZXNwZWN0LiBPYnZpb3VzbHksIHRoZW4sIGluIHRoaXMgY2FzZSwgdGhlIHBsZWFzYW50IHBhcnQgZmFsbHMgdG8gdGhlIHJ1bGVyLCB0aGUgZGlzYWdyZWVhYmxlcyBmYWxsIHRvIG90aGVycy4KPC90cmFuc2xhdGlvbj4="
translation['9.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPldoeSwgdGhlbiwgc2hvdWxkIG5vdCBhbGwgb3RoZXIgcHVibGljIGFmZmFpcnMgYmUgbWFuYWdlZCBvbiB0aGlzIHByaW5jaXBsZT8gRm9yIGFsbCBjb21tdW5pdGllcyBhcmUgZGl2aWRlZCBpbnRvIHBhcnRz4oCUYHRyaWJlcywnIGB3YXJkcywnIGB1bmlvbnMsJyBhcyB0aGUgY2FzZSBtYXkgYmXigJRhbmQgZXZlcnkgb25lIG9mIHRoZXNlIHBhcnRzIGlzIHN1YmplY3QgdG8gaXRzIGFwcG9pbnRlZCBydWxlci4KPC90cmFuc2xhdGlvbj4="
translation['9.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPklmLCB0aGVuLCB0aGUgYW5hbG9neSBvZiB0aGUgY2hvcnVzZXMgd2VyZSBmb2xsb3dlZCBhbmQgcHJpemVzIHdlcmUgb2ZmZXJlZCB0byB0aGVzZSBwYXJ0cyBmb3IgZXhjZWxsZW5jZSBvZiBlcXVpcG1lbnQsIGdvb2QgZGlzY2lwbGluZSwgaG9yc2VtYW5zaGlwLCBjb3VyYWdlIGluIHRoZSBmaWVsZCBhbmQgZmFpciBkZWFsaW5nIGluIGJ1c2luZXNzLCB0aGUgbmF0dXJhbCBvdXRjb21lIHdvdWxkIGJlIGNvbXBldGl0aW9uLCBhbmQgY29uc2VxdWVudGx5IGFuIGVhcm5lc3QgZW5kZWF2b3VyIHRvIGltcHJvdmUgaW4gYWxsIHRoZXNlIHJlc3BlY3RzIHRvby4KPC90cmFuc2xhdGlvbj4="
translation['9.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBhcyBhIG1hdHRlciBvZiBjb3Vyc2UsIHdpdGggdGhlIHByb3NwZWN0IG9mIHJld2FyZCB0aGVyZSB3b3VsZCBiZSBtb3JlIGRlc3BhdGNoIGluIHN0YXJ0aW5nIGZvciB0aGUgYXBwb2ludGVkIHBsYWNlLCBhbmQgZ3JlYXRlciBwcm9tcHRpdHVkZSBpbiB0aGUgcGF5bWVudCBvZiB3YXIgdGF4ZXMsIHdoZW5ldmVyIG9jY2FzaW9uIHJlcXVpcmVkLiBOYXksIGFncmljdWx0dXJlIGl0c2VsZiwgbW9zdCB1c2VmdWwgb2YgYWxsIG9jY3VwYXRpb25zLCBidXQganVzdCB0aGUgb25lIGluIHdoaWNoIHRoZSBzcGlyaXQgb2YgY29tcGV0aXRpb24gaXMgY29uc3BpY3VvdXMgYnkgaXRzIGFic2VuY2UsIHdvdWxkIG1ha2UgZ3JlYXQgcHJvZ3Jlc3MgaWYgcHJpemVzIHdlcmUgb2ZmZXJlZCBmb3IgdGhlIGZhcm0gb3IgdGhlIHZpbGxhZ2UgdGhhdCBjYW4gc2hvdyB0aGUgYmVzdCBjdWx0aXZhdGlvbiwgYW5kIG1hbnkgZ29vZCByZXN1bHRzIHdvdWxkIGZvbGxvdyBmb3IgdGhvc2UgY2l0aXplbnMgd2hvIHRocmV3IHRoZW1zZWx2ZXMgdmlnb3JvdXNseSBpbnRvIHRoaXMgb2NjdXBhdGlvbi4KPC90cmFuc2xhdGlvbj4="
translation['9.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkZvciBhcGFydCBmcm9tIHRoZSBjb25zZXF1ZW50IGluY3JlYXNlIGluIHRoZSByZXZlbnVlcywgc29icmlldHkgZmFyIG1vcmUgY29tbW9ubHkgZ29lcyB3aXRoIGluZHVzdHJ5OyBhbmQgcmVtZW1iZXIsIHZpY2VzIHJhcmVseSBmbG91cmlzaCBhbW9uZyB0aGUgZnVsbHkgZW1wbG95ZWQuCjwvdHJhbnNsYXRpb24+"
translation['9.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPklmIGNvbW1lcmNlIGFsc28gYnJpbmdzIGdhaW4gdG8gYSBjaXR5LCB0aGUgYXdhcmQgb2YgaG9ub3VycyBmb3IgZGlsaWdlbmNlIGluIGJ1c2luZXNzIHdvdWxkIGF0dHJhY3QgYSBsYXJnZXIgbnVtYmVyIHRvIGEgY29tbWVyY2lhbCBjYXJlZXIuIEFuZCB3ZXJlIGl0IG1hZGUgY2xlYXIgdGhhdCB0aGUgZGlzY292ZXJ5IG9mIHNvbWUgd2F5IG9mIHJhaXNpbmcgcmV2ZW51ZSB3aXRob3V0IGh1cnRpbmcgYW55b25lIHdpbGwgYWxzbyBiZSByZXdhcmRlZCwgdGhpcyBmaWVsZCBvZiByZXNlYXJjaCB0b28gd291bGQgbm90IGJlIHVub2NjdXBpZWQuCjwvdHJhbnNsYXRpb24+"
translation['9.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5JbiBhIHdvcmQsIG9uY2UgaXQgYmVjb21lcyBjbGVhciBpbiBldmVyeSBkZXBhcnRtZW50IHRoYXQgYW55IGdvb2Qgc3VnZ2VzdGlvbiB3aWxsIG5vdCBnbyB1bnJld2FyZGVkLCBtYW55IHdpbGwgYmUgZW5jb3VyYWdlZCBieSB0aGF0IGtub3dsZWRnZSB0byBhcHBseSB0aGVtc2VsdmVzIHRvIHNvbWUgcHJvbWlzaW5nIGZvcm0gb2YgaW52ZXN0aWdhdGlvbi4gQW5kIHdoZW4gdGhlcmUgaXMgYSB3aWRlLXNwcmVhZCBpbnRlcmVzdCBpbiB1c2VmdWwgc3ViamVjdHMsIGFuIGluY3JlYXNlIG9mIGRpc2NvdmVyeSBhbmQgYWNoaWV2ZW1lbnQgaXMgYm91bmQgdG8gY29tZS4KPC90cmFuc2xhdGlvbj4="
translation['9.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSW4gY2FzZSB5b3UgZmVhciwgSGllcm8sIHRoYXQgdGhlIGNvc3Qgb2Ygb2ZmZXJpbmcgcHJpemVzIGZvciBtYW55IHN1YmplY3RzIG1heSBwcm92ZSBoZWF2eSwgeW91IHNob3VsZCByZWZsZWN0IHRoYXQgbm8gY29tbW9kaXRpZXMgYXJlIGNoZWFwZXIgdGhhbiB0aG9zZSB0aGF0IGFyZSBib3VnaHQgZm9yIGEgcHJpemUuIFRoaW5rIG9mIHRoZSBsYXJnZSBzdW1zIHRoYXQgbWVuIGFyZSBpbmR1Y2VkIHRvIHNwZW5kIG9uIGhvcnNlLXJhY2VzLCBneW1uYXN0aWMgYW5kIGNob3JhbCBjb21wZXRpdGlvbnMsIGFuZCB0aGUgbG9uZyBjb3Vyc2Ugb2YgdHJhaW5pbmcgYW5kIHByYWN0aWNlIHRoZXkgdW5kZXJnbyBmb3IgdGhlIHNha2Ugb2YgYSBwYWx0cnkgcHJpemUu4oCdCjwvdHJhbnNsYXRpb24+"
translation['10.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCwgU2ltb25pZGVzLOKAnSBzYWlkIEhpZXJvLCDigJxJIHRoaW5rIHlvdSBhcmUgcmlnaHQgaW4gc2F5aW5nIHRoYXQuIEJ1dCB3aGF0IGFib3V0IHRoZSBtZXJjZW5hcmllcz8gQ2FuIHlvdSB0ZWxsIG1lIGhvdyB0byBlbXBsb3kgdGhlbSB3aXRob3V0IGluY3VycmluZyB1bnBvcHVsYXJpdHk/IE9yIGRvIHlvdSBzYXkgdGhhdCBhIHJ1bGVyLCBvbmNlIGhlIGJlY29tZXMgcG9wdWxhciwgd2lsbCBoYXZlIG5vIGZ1cnRoZXIgbmVlZCBvZiBhIGJvZHlndWFyZD/igJ0KPC90cmFuc2xhdGlvbj4="
translation['10.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxObywgbm8sIGhlIHdpbGwgbmVlZCB0aGVtLCBvZiBjb3Vyc2Us4oCdIHNhaWQgU2ltb25pZGVzLiDigJxGb3IgSSBrbm93IHRoYXQgc29tZSBodW1hbiBiZWluZ3MgYXJlIGxpa2UgaG9yc2Vz4oCUdGhlIG1vcmUgdGhleSBnZXQgd2hhdCB0aGV5IHdhbnQsIHRoZSBtb3JlIHVucnVseSB0aGV5IGFyZSBhcHQgdG8gYmVjb21lLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZSB3YXkgdG8gbWFuYWdlIG1lbiBsaWtlIHRoYXQgaXMgdG8gcHV0IHRoZSBmZWFyIG9mIHRoZSBib2R5Z3VhcmQgaW50byB0aGVtLiBBbmQgYXMgZm9yIHRoZSBnZW50bGVtZW4sIHlvdSBjYW4gcHJvYmFibHkgY29uZmVyIGdyZWF0ZXIgYmVuZWZpdHMgb24gdGhlbSBieSBlbXBsb3lpbmcgbWVyY2VuYXJpZXMgdGhhbiBieSBhbnkgb3RoZXIgbWVhbnMuCjwvdHJhbnNsYXRpb24+"
translation['10.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkZvciBJIHByZXN1bWUgdGhhdCB5b3UgbWFpbnRhaW4gdGhlIGZvcmNlIHByaW1hcmlseSB0byBwcm90ZWN0IHlvdXJzZWxmLiBCdXQgbWFzdGVycyBoYXZlIG9mdGVuIGJlZW4gbXVyZGVyZWQgYnkgdGhlaXIgc2xhdmVzLiBJZiB0aGVyZWZvcmUgdGhlIGZpcnN0IGR1dHkgZW5qb2luZWQgb24gdGhlIG1lcmNlbmFyaWVzIHdlcmUgdG8gYWN0IGFzIHRoZSBib2R5Z3VhcmQgb2YgdGhlIHdob2xlIGNvbW11bml0eSBhbmQgcmVuZGVyIGhlbHAgdG8gYWxsLCBpbiBjYXNlIHRoZXkgZ290IHdpbmQgb2YgYW55IHN1Y2ggaW50ZW50aW9u4oCUdGhlcmUgYXJlIGJsYWNrIHNoZWVwIGluIGV2ZXJ5IGZvbGQsIGFzIHdlIGFsbCBrbm934oCUSSBzYXksIGlmIHRoZXkgd2VyZSB1bmRlciBvcmRlcnMgdG8gZ3VhcmQgdGhlIGNpdGl6ZW5zIGFzIHdlbGwgYXMgdGhlIGRlcG90LCB0aGUgY2l0aXplbnMgd291bGQga25vdyB0aGF0IHRoaXMgaXMgb25lIHNlcnZpY2UgcmVuZGVyZWQgdG8gdGhlbSBieSB0aGUgbWVyY2VuYXJpZXMuCjwvdHJhbnNsYXRpb24+"
translation['10.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk5vciBpcyB0aGlzIGFsbDogZm9yIG5hdHVyYWxseSB0aGUgbWVyY2VuYXJpZXMgd291bGQgYWxzbyBiZSBhYmxlIHRvIGdpdmUgZmVhcmxlc3NuZXNzIGFuZCBzZWN1cml0eSBpbiB0aGUgZnVsbGVzdCBtZWFzdXJlIHRvIHRoZSBsYWJvdXJlcnMgYW5kIGNhdHRsZSBpbiB0aGUgY291bnRyeSwgYW5kIHRoZSBiZW5lZml0IHdvdWxkIG5vdCBiZSBjb25maW5lZCB0byB5b3VyIG93biBlc3RhdGVzLCBidXQgd291bGQgYmUgZmVsdCB1cCBhbmQgZG93biB0aGUgY291bnRyeXNpZGUuCjwvdHJhbnNsYXRpb24+"
translation['10.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB0aGV5IGFyZSBjb21wZXRlbnQgdG8gYWZmb3JkIHRoZSBjaXRpemVucyBsZWlzdXJlIGZvciBhdHRlbmRpbmcgdG8gdGhlaXIgcHJpdmF0ZSBhZmZhaXJzIGJ5IGd1YXJkaW5nIHRoZSB2aXRhbCBwb3NpdGlvbnMuIEJlc2lkZXMsIHNob3VsZCBhbiBlbmVteSBwbGFuIGEgc2VjcmV0IGFuZCBzdWRkZW4gYXR0YWNrLCB3aGF0IGhhbmRpZXIgYWdlbnRzIGNhbiBiZSBmb3VuZCBmb3IgZGV0ZWN0aW5nIG9yIHByZXZlbnRpbmcgdGhlaXIgZGVzaWduIHRoYW4gYSBzdGFuZGluZyBmb3JjZSwgYXJtZWQgYW5kIG9yZ2FuaXplZD8gT3Igb25jZSBtb3JlLCB3aGVuIHRoZSBjaXRpemVucyBnbyBjYW1wYWlnbmluZywgd2hhdCBpcyBtb3JlIHVzZWZ1bCB0byB0aGVtIHRoYW4gbWVyY2VuYXJpZXM/IEZvciB0aGVzZSBhcmUsIGFzIGEgbWF0dGVyIG9mIGNvdXJzZSwgdGhlIHJlYWRpZXN0IHRvIGJlYXIgdGhlIGJydW50IG9mIHRvaWwgYW5kIGRhbmdlciBhbmQgd2F0Y2hpbmcuCjwvdHJhbnNsYXRpb24+"
translation['10.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBtdXN0IG5vdCB0aG9zZSB3aG8gcG9zc2VzcyBhIHN0YW5kaW5nIGZvcmNlIGltcG9zZSBvbiBib3JkZXIgc3RhdGVzIGEgc3Ryb25nIGRlc2lyZSBmb3IgcGVhY2U/IEZvciBub3RoaW5nIGVxdWFscyBhbiBvcmdhbml6ZWQgYm9keSBvZiBtZW4sIHdoZXRoZXIgZm9yIHByb3RlY3RpbmcgdGhlIHByb3BlcnR5IG9mIGZyaWVuZHMgb3IgZm9yIHRod2FydGluZyB0aGUgcGxhbnMgb2YgZW5lbWllcy4KPC90cmFuc2xhdGlvbj4="
translation['10.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkZ1cnRoZXIsIHdoZW4gdGhlIGNpdGl6ZW5zIGdldCBpdCBpbnRvIHRoZWlyIGhlYWRzIHRoYXQgdGhlc2UgdHJvb3BzIGRvIG5vIGhhcm0gdG8gdGhlIGlubm9jZW50IGFuZCBob2xkIHRoZSB3b3VsZC1iZSBtYWxlZmFjdG9yIGluIGNoZWNrLCBjb21lIHRvIHRoZSByZXNjdWUgb2YgdGhlIHdyb25nZWQsIGNhcmUgZm9yIHRoZSBjaXRpemVucyBhbmQgc2hpZWxkIHRoZW0gZnJvbSBkYW5nZXIsIHN1cmVseSB0aGV5IGFyZSBib3VuZCB0byBwYXkgdGhlIGNvc3Qgb2YgdGhlbSB3aXRoIGEgcmlnaHQgZ29vZC13aWxsLiBBdCBhbGwgZXZlbnRzIHRoZXkga2VlcCBndWFyZHMgaW4gdGhlaXIgaG9tZXMgZm9yIGxlc3MgaW1wb3J0YW50IG9iamVjdHMgdGhhbiB0aGVzZS4KPC90cmFuc2xhdGlvbj4="
translation['11.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm9yIHNob3VsZCB5b3UgaGVzaXRhdGUgdG8gZHJhdyBvbiB5b3VyIHByaXZhdGUgcHJvcGVydHksIEhpZXJvLCBmb3IgdGhlIGNvbW1vbiBnb29kLiBGb3IgaW4gbXkgb3BpbmlvbiB0aGUgc3VtcyB0aGF0IGEgZ3JlYXQgZGVzcG90IHNwZW5kcyBvbiB0aGUgY2l0eSBhcmUgbW9yZSB0cnVseSBuZWNlc3NhcnkgZXhwZW5zZXMgdGhhbiB0aGUgbW9uZXkgaGUgc3BlbmRzIG9uIGhpbXNlbGYuCjwvdHJhbnNsYXRpb24+"
translation['11.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBsZXQgdXMgZ28gaW50byBkZXRhaWxzLiBGaXJzdCwgd2hpY2ggZG8geW91IHN1cHBvc2UgaXMgbGlrZWx5IHRvIGJyaW5nIHlvdSBtb3JlIGNyZWRpdCwgdG8gb3duIGEgcGFsYWNlIGFkb3JuZWQgd2l0aCBwcmljZWxlc3Mgb2JqZWN0cyBvZiBhcnQsIG9yIHRvIGhhdmUgdGhlIHdob2xlIGNpdHkgZ2FybmlzaGVkIHdpdGggd2FsbHMgYW5kIHRlbXBsZXMgYW5kIHZlcmFuZGFocyBhbmQgbWFya2V0LXBsYWNlcyBhbmQgaGFyYm91cnM/CjwvdHJhbnNsYXRpb24+"
translation['11.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoaWNoIHdpbGwgbWFrZSB5b3UgbG9vayBtb3JlIHRlcnJpYmxlIHRvIHRoZSBlbmVteSwgdG8gZGF6emxlIGFsbCBiZWhvbGRlcnMgd2l0aCB5b3VyIG93biBnbGl0dGVyaW5nIHBhbm9wbHksIG9yIHRvIHByZXNlbnQgdGhlIHdob2xlIG9mIHlvdXIgcGVvcGxlIGluIGdvb2RseSBhcm1vdXI/CjwvdHJhbnNsYXRpb24+"
translation['11.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPldoaWNoIHBsYW4sIHRoaW5rIHlvdSwgd2lsbCB5aWVsZCByZXZlbnVlcyBtb3JlIGFib3VuZGluZywgdG8ga2VlcCBvbmx5IHlvdXIgb3duIGNhcGl0YWwgZW1wbG95ZWQsIG9yIHRvIGNvbnRyaXZlIHRvIGJyaW5nIHRoZSBjYXBpdGFsIG9mIGFsbCB0aGUgY2l0aXplbnMgaW50byBlbXBsb3ltZW50Pwo8L3RyYW5zbGF0aW9uPg=="
translation['11.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGF0IGFib3V0IHRoZSBicmVlZGluZyBvZiBjaGFyaW90IGhvcnNlcywgY29tbW9ubHkgY29uc2lkZXJlZCB0aGUgbm9ibGVzdCBhbmQgZ3JhbmRlc3QgYnVzaW5lc3MgaW4gdGhlIHdvcmxkPyBCeSB3aGljaCBtZXRob2QgZG8geW91IHRoaW5rIHlvdSB3aWxsIGdhaW4gbW9zdCBjcmVkaXQgZm9yIHRoYXQsIGlmIHlvdSBvdXQtZG8gYWxsIG90aGVyIEdyZWVrcyBpbiB0aGUgbnVtYmVyIG9mIHRlYW1zIHlvdSBicmVlZCBhbmQgc2VuZCB0byB0aGUgZmVzdGl2YWxzLCBvciBpZiB0aGUgZ3JlYXRlc3QgbnVtYmVyIG9mIGJyZWVkZXJzIGFuZCB0aGUgZ3JlYXRlc3QgbnVtYmVyIG9mIGNvbXBldGl0b3JzIGFyZSBkcmF3biBmcm9tIHlvdXIgY2l0eT8gQW5kIGhvdyBpcyB0aGUgbm9ibGVyIHZpY3RvcnkgZ2FpbmVkLCBieSB0aGUgZXhjZWxsZW5jZSBvZiB5b3VyIHRlYW0sIG9yIGJ5IHRoZSBwcm9zcGVyaXR5IG9mIHRoZSBjaXR5IG9mIHdoaWNoIHlvdSBhcmUgdGhlIGhlYWQ/CjwvdHJhbnNsYXRpb24+"
translation['11.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkluZGVlZCBteSBvd24gb3BpbmlvbiBpcyB0aGF0IGl0IGlzIG5vdCBldmVuIHNlZW1seSBmb3IgYSBncmVhdCBkZXNwb3QgdG8gY29tcGV0ZSB3aXRoIHByaXZhdGUgY2l0aXplbnMuIEZvciB5b3VyIHZpY3Rvcnkgd291bGQgZXhjaXRlIGVudnkgcmF0aGVyIHRoYW4gYWRtaXJhdGlvbiwgb24gdGhlIGdyb3VuZCB0aGF0IG1hbnkgZXN0YXRlcyBzdXBwbHkgdGhlIG1vbmV5IHRoYXQgeW91IHNwZW5kLCBhbmQgbm8gZGVmZWF0IHdvdWxkIGJlIGdyZWV0ZWQgd2l0aCBzbyBtdWNoIHJpZGljdWxlIGFzIHlvdXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkkgdGVsbCB5b3UsIEhpZXJvLCB5b3UgaGF2ZSB0byBjb21wZXRlIHdpdGggb3RoZXIgaGVhZHMgb2Ygc3RhdGVzLCBhbmQgaWYgeW91IGNhdXNlIHlvdXIgc3RhdGUgdG8gc3VycGFzcyB0aGVpcnMgaW4gcHJvc3Blcml0eSwgYmUgd2VsbCBhc3N1cmVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkJ1dCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OteG9liDhvLTPg864zrk8L2ZvcmVpZ24+IGlzIG5vdCByaWdodC4gQWxsIHRoZSBNU1MuIGhhdmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrXhvZYg4byUz4POtc65PC9mb3JlaWduPiwgd2hpY2ggcGVyaGFwcyBjb25jZWFscyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OteG9kM60zrHhvbfOvM+Jzr0g4byUz4POtc65PC9mb3JlaWduPiwg4oCceW91IHdpbGwgYmUgaGFwcHksIGJlaW5nIHRoZSB2aWN0b3Iu4oCdPC9ub3RlPiB0aGF0IHlvdSBhcmUgdGhlIHZpY3RvciBpbiB0aGUgbm9ibGVzdCBhbmQgZ3JhbmRlc3QgY29tcGV0aXRpb24gaW4gdGhlIHdvcmxkLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OteG9liDhvLTPg864zrk8L2ZvcmVpZ24+IGlzIG5vdCByaWdodC4gQWxsIHRoZSBNU1MuIGhhdmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrXhvZYg4byUz4POtc65PC9mb3JlaWduPiwgd2hpY2ggcGVyaGFwcyBjb25jZWFscyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OteG9kM60zrHhvbfOvM+Jzr0g4byUz4POtc65PC9mb3JlaWduPiwg4oCceW91IHdpbGwgYmUgaGFwcHksIGJlaW5nIHRoZSB2aWN0b3Iu4oCdPC90cmFuc2xhdGlvbj4="
translation['11.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBpbiB0aGUgZmlyc3QgcGxhY2UgeW91IHdpbGwgZm9ydGh3aXRoIGhhdmUgc2VjdXJlZCBqdXN0IHdoYXQgeW91IHJlYWxseSB3YW50LCB0aGUgYWZmZWN0aW9uIG9mIHlvdXIgc3ViamVjdHMuIFNlY29uZGx5LCB5b3VyIHZpY3Rvcnkgd2lsbCBub3QgYmUgcHJvY2xhaW1lZCBieSBvbmUgaGVyYWxkJ3Mgdm9pY2UsIGJ1dCBhbGwgdGhlIHdvcmxkIHdpbGwgdGVsbCBvZiB5b3VyIHZpcnR1ZS4KPC90cmFuc2xhdGlvbj4="
translation['11.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBvYnNlcnZlZCBvZiBhbGwgb2JzZXJ2ZXJzJyBleWVzLCB5b3Ugd2lsbCBiZSBhIGhlcm8sIG5vdCBvbmx5IHRvIHByaXZhdGUgY2l0aXplbnMsIGJ1dCB0byBtYW55IHN0YXRlczogeW91IHdpbGwgYmUgYWRtaXJlZCBub3Qgb25seSBpbiB5b3VyIGhvbWUsIGJ1dCBpbiBwdWJsaWMgYW1vbmcgYWxsIG1lbi4KPC90cmFuc2xhdGlvbj4="
translation['11.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgeW91IHdpbGwgYmUgZnJlZSB0byBnbyB3aGVyZXZlciB5b3UgY2hvb3NlLCBzbyBmYXIgYXMgc2FmZXR5IGlzIGNvbmNlcm5lZCwgdG8gc2VlIHRoZSBzaWdodHMsIGFuZCBlcXVhbGx5IGZyZWUgdG8gZW5qb3kgdGhlbSBpbiB5b3VyIGhvbWU7IGZvciB5b3Ugd2lsbCBoYXZlIGEgdGhyb25nIG9mIGFzcGlyYW50cyBiZWZvcmUgeW91LCBzb21lIGVhZ2VyIHRvIGRpc3BsYXkgc29tZXRoaW5nIHdpc2Ugb3IgYmVhdXRpZnVsIG9yIGdvb2QsIG90aGVycyBsb25naW5nIHRvIHNlcnZlIHlvdS4KPC90cmFuc2xhdGlvbj4="
translation['11.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5FdmVyeW9uZSBwcmVzZW50IHdpbGwgYmUgYW4gYWxseSwgZXZlcnlvbmUgYWJzZW50IHdpbGwgbG9uZyB0byBzZWUgeW91LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaHVzIHlvdSB3aWxsIGJlIG5vdCBvbmx5IHRoZSBsb3ZlZCwgYnV0IHRoZSBhZG9yZWQgb2YgbWFua2luZC4gWW91IHdpbGwgbmVlZCBub3QgdG8gY291cnQgdGhlIGZhaXIsIGJ1dCB0byBsaXN0ZW4gcGF0aWVudGx5IHRvIHRoZWlyIHN1aXQuIEFueGlldHkgZm9yIHlvdXIgd2VsZmFyZSB3aWxsIGZhbGwgbm90IG9uIHlvdXJzZWxmLCBidXQgb24gb3RoZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5Zb3Ugd2lsbCBoYXZlIHRoZSB3aWxsaW5nIG9iZWRpZW5jZSBvZiB5b3VyIHN1YmplY3RzOyB5b3Ugd2lsbCBtYXJrIHRoZWlyIHVuc29saWNpdGVkIGNhcmUgZm9yIHlvdTsgYW5kIHNob3VsZCBhbnkgZGFuZ2VyIGFyaXNlLCB5b3Ugd2lsbCBmaW5kIGluIHRoZW0gbm90IG1lcmVseSBhbGxpZXMsIGJ1dCBjaGFtcGlvbnMgYW5kIHplYWxvdHMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk9yIOKAmGNoYW1waW9ucyBmdWxsIG9mIHplYWwu4oCZIFRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6x4b22PC9mb3JlaWduPiBpcyBub3QgZnJlZSBmcm9tIHN1c3BpY2lvbi48L25vdGU+IEFjY291bnRlZCB3b3J0aHkgb2YgbWFueSBnaWZ0cywgYW5kIGF0IG5vIGxvc3MgZm9yIHNvbWUgbWFuIG9mIGdvb2R3aWxsIHdpdGggd2hvbSB0byBzaGFyZSB0aGVtLCB5b3Ugd2lsbCBmaW5kIGFsbCByZWpvaWNpbmcgaW4geW91ciBnb29kIGZvcnR1bmUsIGFsbCBmaWdodGluZyBmb3IgeW91ciBpbnRlcmVzdHMsIGFzIHRob3VnaCB0aGV5IHdlcmUgdGhlaXIgb3duLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6x4b22PC9mb3JlaWduPiBpcyBub3QgZnJlZSBmcm9tIHN1c3BpY2lvbi48L3RyYW5zbGF0aW9uPg=="
translation['11.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYWxsIHRoZSByaWNoZXMgaW4gdGhlIGhvdXNlcyBvZiB5b3VyIGZyaWVuZHMgd2lsbCBiZSB5b3VycyBpbiBmZWUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRha2UgaGVhcnQgdGhlbiwgSGllcm87IGVucmljaCB5b3VyIGZyaWVuZHMsIGZvciBzbyB5b3Ugd2lsbCBlbnJpY2ggeW91cnNlbGYuIEV4YWx0IHRoZSBzdGF0ZSwgZm9yIHNvIHlvdSB3aWxsIGRlY2sgeW91cnNlbGYgd2l0aCBwb3dlci4KPC90cmFuc2xhdGlvbj4="
translation['11.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5HZXQgaGVyIGFsbGllcyBbZm9yIHNvIHlvdSB3aWxsIHdpbiBzdXBwb3J0ZXJzIGZvciB5b3Vyc2VsZl0uIEFjY291bnQgdGhlIGZhdGhlcmxhbmQgeW91ciBlc3RhdGUsIHRoZSBjaXRpemVucyB5b3VyIGNvbXJhZGVzLCBmcmllbmRzIHlvdXIgb3duIGNoaWxkcmVuLCB5b3VyIHNvbnMgcG9zc2Vzc2lvbnMgZGVhciBhcyBsaWZlLiBBbmQgdHJ5IHRvIHN1cnBhc3MgYWxsIHRoZXNlIGluIGRlZWRzIG9mIGtpbmRuZXNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.15'] = ""
translation['1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbmFzbXVjaCBhcyB3ZSBoYXZlIGhhZCBhIGxvbmcgZXhwZXJpZW5jZSBvZiBjYXZhbHJ5LCBhbmQgY29uc2VxdWVudGx5IGNsYWltIGZhbWlsaWFyaXR5IHdpdGggdGhlIGFydCBvZiBob3JzZW1hbnNoaXAsIHdlIHdpc2ggdG8gZXhwbGFpbiB0byBvdXIgeW91bmdlciBmcmllbmRzIHdoYXQgd2UgYmVsaWV2ZSB0byBiZSB0aGUgY29ycmVjdCBtZXRob2Qgb2YgZGVhbGluZyB3aXRoIGhvcnNlcy4gVHJ1ZSB0aGVyZSBpcyBhbHJlYWR5IGEgdHJlYXRpc2Ugb24gaG9yc2VtYW5zaGlwIGJ5IFNpbW9uLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIGNvbnNpZGVyYWJsZSBmcmFnbWVudCBvZiB0aGlzIHdvcmsgc3Vydml2ZXMgaW4gYSBNUy4gaW4gRW1tYW51ZWwgQ29sbGVnZSwgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTE5ODAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMTk4MCI+Q2FtYnJpZGdlPC9wbGFjZU5hbWU+LiBUaGUgbW9zdCByZWNlbnQgZWRpdGlvbnMgYXJlIHRob3NlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTI4MDExIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMjgwMTEiPk9kZXI8L3BsYWNlTmFtZT4gYW5kIFJ1aGwuIFRoZSDigJxjYXZhbHJ5IGNvbW1hbmRlcuKAnSBuYW1lZCBTaW1vbiByZWZlcnJlZCB0byBpbiBBcmlzdG9waGFuZXMnIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPktuaWdodHM8L3RpdGxlPiAyNDIsIGlzIGp1c3QgYSBtZW1iZXIgb2YgdGhlIGNob3J1cywgYnV0IHRoZSBuYW1lIHByb2JhYmx5IHJlY2FsbHMgdGhlIGF1dGhvci48L25vdGU+IHdobyBhbHNvIGRlZGljYXRlZCB0aGUgYnJvbnplIGhvcnNlIGluIHRoZSBFbGV1c2luaXVtIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDExOTgwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTE5ODAiPkNhbWJyaWRnZTwvcGxhY2VOYW1lPi4gVGhlIG1vc3QgcmVjZW50IGVkaXRpb25zIGFyZSB0aG9zZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTEyODAxMSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTI4MDExIj5PZGVyPC9wbGFjZU5hbWU+IGFuZCBSdWhsLiBUaGUg4oCcY2F2YWxyeSBjb21tYW5kZXLigJ0gbmFtZWQgU2ltb24gcmVmZXJyZWQgdG8gaW4gQXJpc3RvcGhhbmVzJyA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5LbmlnaHRzPC90aXRsZT4gMjQyLCBpcyBqdXN0IGEgbWVtYmVyIG9mIHRoZSBjaG9ydXMsIGJ1dCB0aGUgbmFtZSBwcm9iYWJseSByZWNhbGxzIHRoZSBhdXRob3IuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGFuZCByZWNvcmRlZCBoaXMgb3duIGZlYXRzIGluIHJlbGllZiBvbiB0aGUgcGVkZXN0YWwuIE5ldmVydGhlbGVzcywgd2Ugc2hhbGwgbm90IGVyYXNlIGZyb20gb3VyIHdvcmsgdGhlIGNvbmNsdXNpb25zIHRoYXQgaGFwcGVuIHRvIGNvaW5jaWRlIHdpdGggaGlzLCBidXQgc2hhbGwgb2ZmZXIgdGhlbSB0byBvdXIgZnJpZW5kcyB3aXRoIGZhciBncmVhdGVyIHBsZWFzdXJlLCBpbiB0aGUgYmVsaWVmIHRoYXQgdGhleSBhcmUgbW9yZSB3b3J0aHkgb2YgYWNjZXB0YW5jZSBiZWNhdXNlIHNvIGV4cGVydCBhIGhvcnNlbWFuIGhlbGQgdGhlIHNhbWUgb3BpbmlvbnMgYXMgd2Ugb3Vyc2VsdmVzOiBtb3Jlb3Zlciwgd2Ugc2hhbGwgdHJ5IHRvIGV4cGxhaW4gYWxsIHRoZSBwb2ludHMgdGhhdCBoZSBoYXMgb21pdHRlZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Rmlyc3Qgd2Ugd2lsbCBnaXZlIGRpcmVjdGlvbnMgaG93IGJlc3QgdG8gYXZvaWQgYmVpbmcgY2hlYXRlZCBpbiBidXlpbmcgYSBob3JzZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Rm9yIGp1ZGdpbmcgYW4gdW5icm9rZW4gY29sdCwgdGhlIG9ubHkgY3JpdGVyaW9uLCBvYnZpb3VzbHksIGlzIHRoZSBib2R5LCBmb3Igbm8gY2xlYXIgc2lnbnMgb2YgdGVtcGVyIGFyZSB0byBiZSBkZXRlY3RlZCBpbiBhbiBhbmltYWwgdGhhdCBoYXMgbm90IHlldCBoYWQgYSBtYW4gb24gaGlzIGJhY2suCjwvdHJhbnNsYXRpb24+"
translation['1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiBleGFtaW5pbmcgaGlzIGJvZHksIHdlIHNheSB5b3UgbXVzdCBmaXJzdCBsb29rIGF0IGhpcyBmZWV0LiBGb3IsIGp1c3QgYXMgYSBob3VzZSBpcyBib3VuZCB0byBiZSB3b3J0aGxlc3MgbGVzcyBpZiB0aGUgZm91bmRhdGlvbnMgYXJlIHVuc291bmQsIGhvd2V2ZXIgd2VsbCB0aGUgdXBwZXIgcGFydHMgbWF5IGxvb2ssIHNvIGEgd2FyLWhvcnNlIHdpbGwgYmUgcXVpdGUgdXNlbGVzcywgZXZlbiB0aG91Z2ggYWxsIGhpcyBvdGhlciBwb2ludHMgYXJlIGdvb2QsIGlmIGhlIGhhcyBiYWQgZmVldDsgZm9yIGluIHRoYXQgY2FzZSBoZSB3aWxsIGJlIHVuYWJsZSB0byB1c2UgYW55IG9mIGhpcyBnb29kIHBvaW50cy4KPC90cmFuc2xhdGlvbj4="
translation['1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRlc3RpbmcgdGhlIGZlZXQgZmlyc3QgbG9vayB0byB0aGUgaG9vZnMuIEZvciBpdCBtYWtlcyBhIGdyZWF0IGRpZmZlcmVuY2UgaW4gdGhlIHF1YWxpdHkgb2YgdGhlIGZlZXQgaWYgdGhleSBhcmUgdGhpY2sgcmF0aGVyIHRoYW4gdGhpbi4gTmV4dCB5b3UgbXVzdCBub3QgZmFpbCB0byBub3RpY2Ugd2hldGhlciB0aGUgaG9vZnMgYXJlIGhpZ2ggYm90aCBpbiBmcm9udCBhbmQgYmVoaW5kLCBvciBsb3cuIEZvciBoaWdoIGhvb2ZzIGhhdmUgdGhlIGZyb2csIGFzIGl0IGlzIGNhbGxlZCwgd2VsbCBvZmYgdGhlIGdyb3VuZDsgYnV0IGZsYXQgaG9vZnMgdHJlYWQgd2l0aCB0aGUgc3Ryb25nZXN0IGFuZCB3ZWFrZXN0IHBhcnQgb2YgdGhlIGZvb3Qgc2ltdWx0YW5lb3VzbHksIGxpa2UgYSBib3ctbGVnZ2VkIG1hbi4gTW9yZW92ZXIsIFNpbW9uIHNheXMgdGhhdCB0aGUgcmluZywgdG9vLCBpcyBhIGNsZWFyIHRlc3Qgb2YgZ29vZCBmZWV0OiBhbmQgaGUgaXMgcmlnaHQ7IGZvciBhIGhvbGxvdyBob29mIHJpbmdzIGxpa2UgYSBjeW1iYWwgaW4gc3RyaWtpbmcgdGhlIGdyb3VuZC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+4oCcTS4gQm91cmdlbGF0LCBpbiBoaXMgcHJlZmFjZSB0byB0aGUgc2Vjb25kIHZvbHVtZSBvZiA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5MZXMgRWxlbWVucyBIaXBwaWF0cmlxdWVzPC90aXRsZT4gcmVwcmVoZW5kcyB0aGlzIHJlbWFyayBhcyB0cmlmbGluZyBhbmQgZmFsc2U7IGFuZCBpZiBvdXIgYXV0aG9yIGlzIHRvIGJlIHVuZGVyc3Rvb2QgbGl0ZXJhbGx5LCB0aGUgY3JpdGljaXNtIGlzIGNlcnRhaW5seSBqdXN0LuKAneKAlEJlcmVuZ2VyIDEuMjIxLiBZZXQgaXQgaXMgdW5saWtlbHkgdGhhdCBTaW1vbiBhbmQgWC4gd2VyZSBib3RoIG1pc3Rha2VuLjwvbm90ZT4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TGVzIEVsZW1lbnMgSGlwcGlhdHJpcXVlczwvdGl0bGU+IHJlcHJlaGVuZHMgdGhpcyByZW1hcmsgYXMgdHJpZmxpbmcgYW5kIGZhbHNlOyBhbmQgaWYgb3VyIGF1dGhvciBpcyB0byBiZSB1bmRlcnN0b29kIGxpdGVyYWxseSwgdGhlIGNyaXRpY2lzbSBpcyBjZXJ0YWlubHkganVzdC7igJ3igJRCZXJlbmdlciAxLjIyMS4gWWV0IGl0IGlzIHVubGlrZWx5IHRoYXQgU2ltb24gYW5kIFguIHdlcmUgYm90aCBtaXN0YWtlbi48L3RyYW5zbGF0aW9uPg=="
translation['1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IYXZpbmcgYmVndW4gaGVyZSwgd2Ugd2lsbCBwcm9jZWVkIHVwd2FyZHMgYnkgc3VjY2Vzc2l2ZSBzdGVwcyB0byB0aGUgcmVzdCBvZiB0aGUgYm9keS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGJvbmVzIChvZiB0aGUgcGFzdGVybikgYWJvdmUgdGhlIGhvb2ZzIGFuZCBiZWxvdyB0aGUgZmV0bG9ja3Mgc2hvdWxkIG5vdCBiZSB0b28gdXByaWdodCwgbGlrZSBhIGdvYXQnczogc3VjaCBsZWdzIGdpdmUgdG9vIGhhcmQgYSB0cmVhZCwgamFyIHRoZSByaWRlciwgYW5kIGFyZSBtb3JlIGxpYWJsZSB0byBpbmZsYW1tYXRpb24uIE5vciB5ZXQgc2hvdWxkIHRoZSBib25lcyBiZSB0b28gbG93LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj7igJxUaGUgcGFzdGVybnMgKG9mIHRoZSBoYWNrbmV5KSBzaG91bGQgbmVpdGhlciBiZSB0b28gb2JsaXF1ZSwgd2hpY2ggYmVzcGVha3Mgd2Vha25lc3M6IG5vciB0b28gc3RyYWlnaHQsIHdoaWNoIHdlYXJzIHRoZSBob3JzZSBvdXQgYW5kIGlzIHVucGxlYXNhbnQgdG8gdGhlIHJpZGVyLuKAneKAlEJsYWlyIGluIExvdWRvbidzIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkFncmljdWx0dXJlLjwvdGl0bGU+PC9ub3RlPiBlbHNlIHRoZSBmZXRsb2NrcyBhcmUgbGlrZWx5IHRvIGJlY29tZSBiYXJlIGFuZCBzb3JlIHdoZW4gdGhlIGhvcnNlIGlzIHJpZGRlbiBvdmVyIGNsb2RzIG9yIHN0b25lcy4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QWdyaWN1bHR1cmUuPC90aXRsZT48L3RyYW5zbGF0aW9uPg=="
translation['1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgYm9uZXMgb2YgdGhlIHNoYW5rcyBzaG91bGQgYmUgdGhpY2ssPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPuKAnFdpZGXigJ0gd291bGQgYmUgYSBtb3JlIHN1aXRhYmxlIHdvcmQuPC9ub3RlPiBzaW5jZSB0aGVzZSBhcmUgdGhlIHBpbGxhcnMgb2YgdGhlIGJvZHk7IGJ1dCBub3QgdGhpY2sgd2l0aCB2ZWlucyBub3Igd2l0aCBmbGVzaCwgZWxzZSB3aGVuIHRoZSBob3JzZSBpcyByaWRkZW4gb3ZlciBoYXJkIGdyb3VuZCwgdGhlc2UgcGFydHMgYXJlIGJvdW5kIHRvIGJlY29tZSBjaGFyZ2VkIHdpdGggYmxvb2QgYW5kIHZhcmljb3NlOyB0aGUgbGVncyB3aWxsIHN3ZWxsLCBhbmQgdGhlIHNraW4gd2lsbCBmYWxsIGF3YXksIGFuZCB3aGVuIHRoaXMgZ2V0cyBsb29zZSB0aGUgcGluLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgR3JlZWsgd29yZCBtZWFucyB0aGUgZmlidWxhIGluIG1hbiwgYnV0IHRoZSBmaWJ1bGEsIG9mIGNvdXJzZSwgaXMgbm8gcGFydCBvZiB0aGUgc2hhbmsgaW4gdGhlIGhvcnNlLiBNb3JnYW4gcmlnaHRseSBzYXlzIHRoYXQgWC4gd3JpdGVzIHRocm91Z2hvdXQgb2YgdGhlIGhvcnNlIGFzIGhlIGFwcGVhcnMgb3V0d2FyZGx5LCBhbmQgbm90IG9mIHRoZSBza2VsZXRvbiAod2l0aCB3aGljaCBoZSB3YXMgdW5hY3F1YWludGVkKSwgYW5kIHRoYXQgdGhlIGFsbHVzaW9uIGlzIHRvIHRoZSBiYWNrIHNpbmV3IG9mIHRoZSBzaGluLjwvbm90ZT4gdG9vLCBpcyBhcHQgdG8gZ2l2ZSB3YXkgYW5kIGxhbWUgdGhlIGhvcnNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JZiB0aGUgY29sdCdzIGtuZWVzIGFyZSBzdXBwbGUgd2hlbiBiZW5kaW5nIGFzIGhlIHdhbGtzLCB5b3UgbWF5IGd1ZXNzIHRoYXQgaGlzIGxlZ3Mgd2lsbCBiZSBzdXBwbGUgd2hlbiBoZSBpcyByaWRkZW4gdG9vLCBmb3IgYWxsIGhvcnNlcyBhY3F1aXJlIGdyZWF0ZXIgc3VwcGxlbmVzcyBhdCB0aGUga25lZSBhcyB0aW1lIGdvZXMgb24uIFN1cHBsZSBrbmVlcyBhcmUgcmlnaHRseSBhcHByb3ZlZCwgc2luY2UgdGhleSByZW5kZXIgdGhlIGhvcnNlIGxlc3MgbGlrZWx5IHRvIHN0dW1ibGUgYW5kIHRpcmUgdGhhbiBzdGlmZiBsZWdzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgYXJtcyBiZWxvdyB0aGUgc2hvdWxkZXJzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgZm9yZWFybSwgbm90IHRoZSB0cnVlIGFybSwgd2hpY2ggWC4gaW5jbHVkZXMgaW4gdGhlIGNoZXN0Ljwvbm90ZT4gYXMgaW4gbWFuLCBhcmUgc3Ryb25nZXIgYW5kIGJldHRlciBsb29raW5nIGlmIHRoZXkgYXJlIHRoaWNrLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BIGNoZXN0IG9mIHNvbWUgd2lkdGggaXMgYmV0dGVyIGZvcm1lZCBib3RoIGZvciBhcHBlYXJhbmNlIGFuZCBmb3Igc3RyZW5ndGgsIGFuZCBmb3IgY2FycnlpbmcgdGhlIGxlZ3Mgd2VsbCBhcGFydCB3aXRob3V0IGNyb3NzaW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IaXMgbmVjayBzaG91bGQgbm90IGhhbmcgZG93bndhcmRzIGZyb20gdGhlIGNoZXN0IGxpa2UgYSBib2FyJ3MsIGJ1dCBzdGFuZCBzdHJhaWdodCB1cCB0byB0aGUgY3Jlc3QsIGxpa2UgYSBjb2NrJ3M7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBob3JzZSBzaG91bGQgbm90IGJlIOKAnGNvY2stdGhyb3R0bGVkLuKAnTwvbm90ZT4gYnV0IGl0IHNob3VsZCBiZSBmbGV4aWJsZSBhdCB0aGUgYmVuZDsgYW5kIHRoZSBoZWFkIHNob3VsZCBiZSBib255LCB3aXRoIGEgc21hbGwgY2hlZWsuIFRodXMgdGhlIG5lY2sgd2lsbCBwcm90ZWN0IHRoZSByaWRlciwgYW5kIHRoZSBleWUgc2VlIHdoYXQgbGllcyBiZWZvcmUgdGhlIGZlZXQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkhlIHdpbGwgbm90IGJlIGEg4oCcc3Rhci1nYXplci7igJ08L25vdGU+IEJlc2lkZXMsIGEgaG9yc2Ugb2Ygc3VjaCBhIG1vdWxkIHdpbGwgaGF2ZSBsZWFzdCBwb3dlciBvZiBydW5uaW5nIGF3YXksIGJlIGhlIG5ldmVyIHNvIGhpZ2gtc3Bpcml0ZWQsIGZvciBob3JzZXMgZG8gbm90IGFyY2ggdGhlIG5lY2sgYW5kIGhlYWQsIGJ1dCBzdHJldGNoIHRoZW0gb3V0IHdoZW4gdGhleSB0cnkgdG8gcnVuIGF3YXkuCjwvdHJhbnNsYXRpb24+"
translation['1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Zb3Ugc2hvdWxkIG5vdGljZSwgdG9vLCB3aGV0aGVyIGJvdGggamF3cyBhcmUgc29mdCBvciBoYXJkLCBvciBvbmx5IG9uZTsgZm9yIGhvcnNlcyB3aXRoIHVuZXF1YWwgamF3cyBhcmUgZ2VuZXJhbGx5IHVuZXF1YWxseSBzZW5zaXRpdmUgaW4gdGhlIG1vdXRoLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BIHByb21pbmVudCBleWUgbG9va3MgbW9yZSBhbGVydCB0aGFuIG9uZSB0aGF0IGlzIGhvbGxvdywgYW5kLCBhcGFydCBmcm9tIHRoYXQsIGl0IGdpdmVzIHRoZSBob3JzZSBhIGdyZWF0ZXIgcmFuZ2Ugb2YgdmlzaW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2lkZSBvcGVuIG5vc3RyaWxzIGFmZm9yZCByb29tIGZvciBmcmVlciBicmVhdGhpbmcgdGhhbiBjbG9zZSBvbmVzLCBhbmQgYXQgdGhlIHNhbWUgdGltZSBtYWtlIHRoZSBob3JzZSBsb29rIGZpZXJjZXIsIGZvciB3aGVuZXZlciBhIGhvcnNlIGlzIGFuZ3J5IHdpdGggYW5vdGhlciBvciBnZXRzIGV4Y2l0ZWQgdW5kZXIgaGlzIHJpZGVyLCBoZSBkaWxhdGVzIGhpcyBub3N0cmlscy4KPC90cmFuc2xhdGlvbj4="
translation['1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QSBmYWlybHkgbGFyZ2UgY3Jlc3QgYW5kIGZhaXJseSBzbWFsbCBlYXJzIGdpdmUgdGhlIG1vcmUgY2hhcmFjdGVyaXN0aWMgc2hhcGUgdG8gYSBob3JzZSdzIGhlYWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhpZ2ggd2l0aGVycyBvZmZlciB0aGUgcmlkZXIgYSBzYWZlciBzZWF0IGFuZCBhIHN0cm9uZ2VyIGdyaXAgb24gdGhlIHNob3VsZGVycy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGRvdWJsZSBiYWNrPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPuKAnFRoYXQgd2FzIGJlZm9yZSB0aGUgZGF5cyBvZiBzYWRkbGVzLCBhbmQgaG9yc2VtZW4gaGFkIGEgdGVuZGVyIGludGVyZXN0IGluIHRoZSBkb3VibGUgYmFja+KAlHRoZSBjaGFyYWN0ZXJpc3RpYyBiYWNrIG9mIGRhcHBsZWQgaG9yc2VzLuKAneKAlFBvY29jaywgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SG9yc2VzPC90aXRsZT4sIHAuIDExOC4g4oCcRHVwbGV4IGFnaXR1ciBwZXIgbHVtYm9zIHNwaW5hLOKAnSBzYXlzIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5WaXJnaWw8L3N1cm5hbWU+PC9wZXJzTmFtZT4gPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+R2VvcmcuPC90aXRsZT4gMy44Ny48L25vdGU+IGlzIGJvdGggc29mdGVyIHRvIHNpdCBvbiB0aGFuIHRoZSBzaW5nbGUgYW5kIG1vcmUgcGxlYXNpbmcgdG8gdGhlIGV5ZS4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SG9yc2VzPC90aXRsZT4sIHAuIDExOC4g4oCcRHVwbGV4IGFnaXR1ciBwZXIgbHVtYm9zIHNwaW5hLOKAnSBzYXlzIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5WaXJnaWw8L3N1cm5hbWU+PC9wZXJzTmFtZT4gPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlZpcmdpbDwvc3VybmFtZT48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5HZW9yZy48L3RpdGxlPiAzLjg3LjwvdHJhbnNsYXRpb24+"
translation['1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGRlZXBlciB0aGUgZmxhbmtzIGFuZCB0aGUgbW9yZSBzd2VsbGluZyB0b3dhcmQgdGhlIGJlbGx5LCB0aGUgZmlybWVyIGlzIHRoZSBzZWF0IGFuZCB0aGUgc3Ryb25nZXIsIGFuZCBhcyBhIHJ1bGUsIHRoZSBiZXR0ZXIgZmVlZGVyIGlzIHRoZSBob3JzZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGJyb2FkZXIgYW5kIHNob3J0ZXIgdGhlIGxvaW5zLCB0aGUgbW9yZSBlYXNpbHkgdGhlIGhvcnNlIGxpZnRzIGhpcyBmb3JlIHF1YXJ0ZXJzIGFuZCB0aGUgbW9yZSBlYXNpbHkgaGUgYnJpbmdzIHVwIGhpcyBoaW5kIHF1YXJ0ZXJzLiBBbmQsIGFwYXJ0IGZyb20gdGhhdCwgdGhlIGJlbGx5IGxvb2tzIHNtYWxsZXN0IHNvLCBhbmQgaWYgaXQgaXMgYmlnIGl0IGRpc2ZpZ3VyZXMgdGhlIGhvcnNlIHRvIHNvbWUgZXh0ZW50LCBhbmQgYWxzbyBtYWtlcyBoaW0gdG8gc29tZSBleHRlbnQgYm90aCB3ZWFrZXIgYW5kIGNsdW1zaWVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGhhdW5jaGVzIG11c3QgYmUgYnJvYWQgYW5kIGZsZXNoeSwgdGhhdCB0aGV5IG1heSBiZSBpbiByaWdodCBwcm9wb3J0aW9uIHRvIHRoZSBmbGFua3MgYW5kIGNoZXN0LCBhbmQgaWYgdGhleSBhcmUgZmlybSBhbGwgb3ZlciwgdGhleSB3aWxsIGJlIGxpZ2h0ZXIgZm9yIHJ1bm5pbmcgYW5kIHdpbGwgbWFrZSB0aGUgaG9yc2Ugc3BlZWRpZXIuCjwvdHJhbnNsYXRpb24+"
translation['1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SWYgdGhlIGdhcCB0aGF0IHNlcGFyYXRlcyB0aGUgaGFtcyB1bmRlciB0aGUgdGFpbCBpcyBicm9hZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SGUgbXVzdCBub3QgYmUg4oCcY2F0LWhhbW1lZOKAnSAoQmVyZW5nZXIpLCB3aGljaCBtZWFucyB0aGF0IHRoZSBob2NrcyB3aWxsIGJlIHR1cm5lZCBpbndhcmRzLiBTdWNoIGhvcnNlcyBhcmUgb2Z0ZW4gZ29vZCB0cm90dGVycyAoQmxhbmUpLCBidXQgdGhlIEdyZWVrIGNhdmFscnkgcmlkZXIgZGlkIG5vdCByZXF1aXJlIHRoYXQuPC9ub3RlPiBoZSB3aWxsIGFsc28gZXh0ZW5kIGhpcyBoaW5kIGxlZ3Mgd2VsbCBhcGFydCB1bmRlciBoaXMgYmVsbHk7IGFuZCBieSBkb2luZyB0aGF0IGhlIHdpbGwgYmUgbW9yZSBmaWVyeSBhbmQgc3Ryb25nZXIgd2hlbiBoZSB0aHJvd3MgaGltc2VsZiBvbiBoaXMgaGF1bmNoZXMgYW5kIHdoZW4gaGUgaXMgcmlkZGVuLCBhbmQgd2lsbCBtYWtlIHRoZSBiZXN0IG9mIGhpbXNlbGYgaW4gYWxsIHdheXMuIE9uZSBjYW4gaW5mZXIgdGhpcyBmcm9tIHRoZSBhY3Rpb24gb2YgYSBtYW46IGZvciB3aGVuIGhlIHdhbnRzIHRvIGxpZnQgYW55dGhpbmcgZnJvbSB0aGUgZ3JvdW5kLCBhIG1hbiBpbnZhcmlhYmx5IHRyaWVzIHRvIGxpZnQgaXQgd2l0aCBoaXMgbGVncyBhcGFydCByYXRoZXIgdGhhbiBjbG9zZSB0b2dldGhlci4KPC90cmFuc2xhdGlvbj4="
translation['1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QSBob3JzZSdzIHN0b25lcyBzaG91bGQgbm90IGJlIGJpZzogYnV0IGl0IGlzIGltcG9zc2libGUgdG8gb2JzZXJ2ZSB0aGlzIGluIGEgY29sdC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIHRoZSBwYXJ0cyBiZWxvdywgdGhlIGhvY2tzLCBzaGluIGJvbmVzLCBmZXRsb2NrcyBhbmQgaG9vZnMsIHdoYXQgd2UgaGF2ZSBzYWlkIGFib3V0IHRoZSBjb3JyZXNwb25kaW5nIHBhcnRzIGluIHRoZSBmb3JlbGVncyBhcHBsaWVzIHRvIHRoZXNlIGFsc28uCjwvdHJhbnNsYXRpb24+"
translation['1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSB3YW50IGFsc28gdG8gZXhwbGFpbiBob3cgb25lIGlzIGxlYXN0IGxpa2VseSB0byBiZSBkaXNhcHBvaW50ZWQgaW4gdGhlIG1hdHRlciBvZiBzaXplLiBUaGUgY29sdCB0aGF0IGlzIGxvbmdlc3QgaW4gdGhlIHNoYW5rcyBhdCB0aGUgdGltZSBoZSBpcyBmb2FsZWQgbWFrZXMgdGhlIGJpZ2dlc3QgaG9yc2UuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPuKAnEZvciBoaXMgc3RhdHVyZSB0aGlzIGlzIGFuIGluZmFsbGlibGUgcnVsZSB0aGF0IHRoZSBzaGlubmUgYm9uZS4uLm5ldmVyIGluY3JlYXNldGgsIG5vIG5vdCBmcm9tIHRoZSBmaXJzdCBmb2FsaW5nLi4uaW5zb211Y2ggdGhhdCBpZiB0aG9zZSBib25lcyBiZSBsb25nIGFuZCBsYXJnZSwgd2UgYXJlIGV2ZXIgYXNzdXJlZCB0aGF0IHRoZSBGb2FsZSB3aWxsIHByb3ZlIGEgdGFsbCBhbmQgbGFyZ2UgSG9yc2Uu4oCdIEcuIE1hcmtoYW0sIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkNhdmFsZXJpY2UsPC90aXRsZT4gPGRhdGUgYXV0aG5hbWU9IjE2MTciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9IjE2MTciPjE2MTc8L2RhdGU+Ljwvbm90ZT4gRm9yIGluIGFsbCBxdWFkcnVwZWRzIHRoZSBzaGFua3MgaW5jcmVhc2UgYnV0IGxpdHRsZSBpbiBzaXplIGFzIHRpbWUgZ29lcyBvbiwgd2hlcmVhcyB0aGUgcmVzdCBvZiB0aGUgYm9keSBncm93cyB0byB0aGVtLCBzbyBhcyB0byBiZSBpbiB0aGUgcmlnaHQgcHJvcG9ydGlvbi4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2F2YWxlcmljZSw8L3RpdGxlPiA8ZGF0ZSBhdXRobmFtZT0iMTYxNyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iMTYxNyI+MTYxNzwvZGF0ZT4uPC90cmFuc2xhdGlvbj4="
translation['1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGUgd2hvIGFwcGxpZXMgdGhlc2UgdGVzdHMgdG8gYSBjb2x0J3Mgc2hhcGUgaXMgc3VyZSwgaW4gbXkgb3BpbmlvbiwgdG8gZ2V0IGEgYmVhc3Qgd2l0aCBnb29kIGZlZXQsIHN0cm9uZywgbXVzY3VsYXIsIG9mIHRoZSByaWdodCBsb29rIGFuZCB0aGUgcmlnaHQgc2l6ZS4gSWYgc29tZSBjaGFuZ2UgYXMgdGhleSBncm93LCBzdGlsbCB3ZSBtYXkgY29uZmlkZW50bHkgcmVseSBvbiB0aGVzZSB0ZXN0cywgZm9yIGl0IGlzIGZhciBjb21tb25lciBmb3IgYW4gdWdseSBjb2x0IHRvIG1ha2UgYSB1c2VmdWwgaG9yc2UgdGhhbiBmb3IgYSBjb2x0IGxpa2UgdGhpcyB0byB0dXJuIG91dCB1Z2x5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBkbyBub3QgdGhpbmsgaXQgbmVjZXNzYXJ5IHRvIGdpdmUgZGlyZWN0aW9uczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5PciwgcGVyaGFwcywg4oCcdG8gZ2l2ZSBtYW55IGRpcmVjdGlvbnMu4oCdIFNvbWV0aGluZyBpcyBsb3N0IGluIHRoZSBNU1MuLCBpbiB3aGljaCB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrzhvbQ8L2ZvcmVpZ24+IChhZGRlZCBieSBDb3VyaWVyKSBkb2VzIG5vdCBhcHBlYXIuPC9ub3RlPiBmb3IgYnJlYWtpbmcgYSBjb2x0LiBGb3IgaW4gb3VyIHN0YXRlcyB0aGUgY2F2YWxyeSBhcmUgcmVjcnVpdGVkIGZyb20gdGhvc2Ugd2hvIGhhdmUgYW1wbGUgbWVhbnMgYW5kIHRha2UgYSBjb25zaWRlcmFibGUgcGFydCBpbiB0aGUgZ292ZXJubWVudC4gQW5kIGl0IGlzIGZhciBiZXR0ZXIgZm9yIGEgeW91bmcgbWFuIHRvIGdldCBoaW1zZWxmIGludG8gY29uZGl0aW9uIGFuZCB3aGVuIGhlIHVuZGVyc3RhbmRzIHRoZSBhcnQgb2YgaG9yc2VtYW5zaGlwIHRvIHByYWN0aXNlIHJpZGluZyB0aGFuIHRvIGJlIGEgaG9yc2UtYnJlYWtlcjsgYW5kIGFuIG9sZGVyIG1hbiBoYWQgZmFyIGJldHRlciBkZXZvdGUgaGltc2VsZiB0byBoaXMgZXN0YXRlIGFuZCBoaXMgZnJpZW5kcyBhbmQgYWZmYWlycyBvZiBzdGF0ZSBhbmQgb2Ygd2FyIHRoYW4gc3BlbmQgaGlzIHRpbWUgaW4gaG9yc2UtYnJlYWtpbmcuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs684b20PC9mb3JlaWduPiAoYWRkZWQgYnkgQ291cmllcikgZG9lcyBub3QgYXBwZWFyLjwvdHJhbnNsYXRpb24+"
translation['2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlNvIGhlIHdobyBzaGFyZXMgbXkgb3BpbmlvbiBhYm91dCBob3JzZS1icmVha2luZyB3aWxsLCBvZiBjb3Vyc2UsIHNlbmQgaGlzIGNvbHQgb3V0LiBTdGlsbCBoZSBzaG91bGQgcHV0IGluIHdyaXRpbmcgd2hhdCB0aGUgaG9yc2UgaXMgdG8ga25vdyB3aGVuIGhlIGlzIHJldHVybmVkLCBqdXN0IGFzIHdoZW4gaGUgYXBwcmVudGljZXMgaGlzIHNvbiB0byBhIHByb2Zlc3Npb24uIEZvciB0aGVzZSBhcnRpY2xlcyB3aWxsIHNlcnZlIGFzIG5vdGVzIHRvIHJlbWluZCB0aGUgaG9yc2UtYnJlYWtlciBvZiB3aGF0IGhlIG11c3QgYXR0ZW5kIHRvIGlmIGhlIGlzIHRvIGdldCBoaXMgbW9uZXkuCjwvdHJhbnNsYXRpb24+"
translation['2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdGlsbCwgY2FyZSBtdXN0IGJlIHRha2VuIHRoYXQgdGhlIGNvbHQgaXMgZ2VudGxlLCB0cmFjdGFibGUsIGFuZCBmb25kIG9mIG1hbiB3aGVuIGhlIGlzIHNlbnQgdG8gdGhlIGhvcnNlLWJyZWFrZXIuIFRoYXQgc29ydCBvZiBidXNpbmVzcyBpcyBnZW5lcmFsbHkgZG9uZSBhdCBob21lIHRocm91Z2ggdGhlIGdyb29tLCBpZiBoZSBrbm93cyBob3cgdG8gY29udHJpdmUgdGhhdCBodW5nZXIgYW5kIHRoaXJzdCBhbmQgaG9yc2VmbGllcyBhcmUgYXNzb2NpYXRlZCBieSB0aGUgY29sdCB3aXRoIHNvbGl0dWRlLCB3aGlsZSBlYXRpbmcgYW5kIGRyaW5raW5nIGFuZCBkZWxpdmVyeSBmcm9tIGlycml0YXRpb24gY29tZSB0aHJvdWdoIG1hbidzIGFnZW5jeS4gRm9yIGluIHRoZXNlIGNpcmN1bXN0YW5jZXMgYSBmb2FsIGlzIGJvdW5kIG5vdCBvbmx5IHRvIGxpa2UgbWVuLCBidXQgdG8gaGFua2VyIGFmdGVyIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk9uZSBzaG91bGQgYWxzbyBoYW5kbGUgdGhvc2UgcGFydHMgaW4gd2hpY2ggdGhlIGhvcnNlIGxpa2VzIG1vc3QgdG8gYmUgY2hlcmlzaGVkLCB0aGF0IGlzIHRvIHNheSB0aGUgaGFpcmllc3QgcGFydHMgYW5kIHRob3NlIHdoZXJlIHRoZSBob3JzZSBoYXMgbGVhc3QgcG93ZXIgb2YgaGVscGluZyBoaW1zZWxmLCBpZiBhbnl0aGluZyB3b3JyaWVzIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkxldCB0aGUgZ3Jvb20gYmUgdW5kZXIgb3JkZXJzIGFsc28gdG8gbGVhZCBoaW0gdGhyb3VnaCBjcm93ZHMsIGFuZCBhY2N1c3RvbSBoaW0gdG8gYWxsIHNvcnRzIG9mIHNpZ2h0cyBhbmQgYWxsIHNvcnRzIG9mIG5vaXNlcy4gSWYgdGhlIGNvbHQgc2hpZXMgYXQgYW55IG9mIHRoZW0sIGhlIG11c3QgdGVhY2ggaGltLCBieSBxdWlldGluZyBoaW0gYW5kIHdpdGhvdXQgaW1wYXRpZW5jZSwgdGhhdCB0aGVyZSBpcyBub3RoaW5nIHRvIGJlIGFmcmFpZCBvZi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSB0aGluayB0aGF0IHRoZSBkaXJlY3Rpb25zIEkgaGF2ZSBnaXZlbiBvbiB0aGUgc3ViamVjdCBvZiBob3JzZS1icmVha2luZyBhcmUgc3VmZmljaWVudCBmb3IgdGhlIHByaXZhdGUgcGVyc29uLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiBjYXNlIHRoZSBpbnRlbnRpb24gaXMgdG8gYnV5IGEgaG9yc2UgYWxyZWFkeSByaWRkZW4sIHdlIHdpbGwgd3JpdGUgb3V0IHNvbWUgbm90ZXMgdGhhdCB0aGUgYnV5ZXIgbXVzdCB0aG9yb3VnaGx5IG1hc3RlciBpZiBoZSBpcyBub3QgdG8gYmUgY2hlYXRlZCBvdmVyIGhpcyBwdXJjaGFzZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Rmlyc3QsIHRoZW4sIGhlIG11c3Qgbm90IGZhaWwgdG8gYXNjZXJ0YWluIHRoZSBhZ2UuIEEgaG9yc2UgdGhhdCBoYXMgc2hlZCBhbGwgaGlzIG1pbGsgdGVldGggZG9lcyBub3QgYWZmb3JkIG11Y2ggZ3JvdW5kIGZvciBwbGVhc2luZyBleHBlY3RhdGlvbnMsIGFuZCBpcyBub3Qgc28gZWFzaWx5IGdvdCByaWQgb2YuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBrbm93bGVkZ2Ugb2YgdGhlIHRlZXRoIGFzIGEgY3JpdGVyaW9uIG9mIGFnZSBpcyBydWRpbWVudGFyeS48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JZiBoZSBpcyBjbGVhcmx5IGEgeW91bmdzdGVyLCBvbmUgbXVzdCBub3RpY2UgZnVydGhlciBob3cgaGUgcmVjZWl2ZXMgdGhlIGJpdCBpbiBoaXMgbW91dGggYW5kIHRoZSBoZWFkc3RhbGwgYWJvdXQgaGlzIGVhcnMuIFRoaXMgbWF5IGJlc3QgYmUgbm90aWNlZCBpZiB0aGUgYnV5ZXIgc2VlcyB0aGUgYnJpZGxlIHB1dCBvbiBhbmQgdGFrZW4gb2ZmIGFnYWluLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5OZXh0LCBhdHRlbnRpb24gbXVzdCBiZSBwYWlkIHRvIGhpcyBiZWhhdmlvdXIgd2hlbiBoZSByZWNlaXZlcyB0aGUgcmlkZXIgb24gaGlzIGJhY2suIEZvciBtYW55IGhvcnNlcyB3aWxsIG5vdCByZWFkaWx5IGFjY2VwdCBhIHRoaW5nIGlmIHRoZXkga25vdyBiZWZvcmVoYW5kIHRoYXQsIGlmIHRoZXkgYWNjZXB0IGl0LCB0aGV5IHdpbGwgYmUgZm9yY2VkIHRvIHdvcmsuCjwvdHJhbnNsYXRpb24+"
translation['3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Bbm90aGVyIHRoaW5nIHRvIGJlIG9ic2VydmVkIGlzIHdoZXRoZXIgd2hlbiBtb3VudGVkIGhlIGlzIHdpbGxpbmcgdG8gbGVhdmUgaGlzIGNvbXBhbmlvbnMsIG9yIHdoZXRoZXIgaW4gcGFzc2luZyBzdGFuZGluZyBob3JzZXMgaGUgZG9lcyBub3QgYm9sdCB0b3dhcmRzIHRoZW0uIFNvbWUgdG9vLCBpbiBjb25zZXF1ZW5jZSBvZiBiYWQgdHJhaW5pbmcgcnVuIGF3YXkgZnJvbSB0aGUgcmlkaW5nIGdyb3VuZCB0byB0aGUgcGF0aHMgdGhhdCBsZWFkIGhvbWUuCjwvdHJhbnNsYXRpb24+"
translation['3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BIGhvcnNlIHdpdGggamF3cyB1bmVxdWFsbHkgc2Vuc2l0aXZlIGlzIGRldGVjdGVkIGJ5IHRoZSBleGVyY2lzZSBjYWxsZWQgdGhlIOKAnHJpbmcs4oCdPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIHRoZSDigJx2b2x0ZeKAnTsgc2VlIG5vdGUgYXQgNy4xMy48L25vdGU+IGJ1dCBtdWNoIG1vcmUgYnkgY2hhbmdpbmcgdGhlIGV4ZXJjaXNlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCBieSByaWRpbmcgb24gdGhlIG90aGVyIGhhbmQuIFRoZSBhbGx1c2lvbiwgYXMgSGVybWFubiBzYXcsIGlzIG5vdCB0byB0aGUgaW52ZXJ0ZWQgdm9sdGUuPC9ub3RlPiBGb3IgbWFueSBkbyBub3QgYXR0ZW1wdCB0byBib2x0IHVubGVzcyB0aGV5IGhhdmUgYSBiYWQgbW91dGgsIGFuZCB0aGUgcm9hZCBhbG9uZyB3aGljaCB0aGV5IGNhbiBib2x0IGhvbWUgZ2l2ZXMgdGhlbSB0aGVpciBjaGFuY2UuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBtZWFuaW5nIGlzLCB0aGF0IGlmLCBmb3IgZXhhbXBsZSwgdGhlIHJvYWQgb24gdGhlIHJpZ2h0IGxlYWRzIGhvbWUsIHRoZSBob3JzZSB3aXRoIGEgbW9yZSBzZW5zaXRpdmUgcmlnaHQgamF3IHdpbGwgdHJ5IHRvIGJvbHQgZG93biBpdC48L25vdGU+IEl0IGlzIGxpa2V3aXNlIG5lY2Vzc2FyeSB0byBrbm93IHdoZXRoZXIsIHdoZW4gZ29pbmcgYXQgZnVsbCBzcGVlZCBoZSBjYW4gYmUgcHVsbGVkIHVwIHNoYXJwLCBhbmQgd2hldGhlciBoZSB0dXJucyByZWFkaWx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBpdCBpcyB3ZWxsIHRvIG1ha2Ugc3VyZSB3aGV0aGVyIGhlIGlzIGVxdWFsbHkgd2lsbGluZyB0byBvYmV5IHdoZW4gcm91c2VkIGJ5IGEgYmxvdy4gRm9yIGEgZGlzb2JlZGllbnQgc2VydmFudCBhbmQgYSBkaXNvYmVkaWVudCBhcm15IGFyZSBvZiBjb3Vyc2UgdXNlbGVzczsgYW5kIGEgZGlzb2JlZGllbnQgaG9yc2UgaXMgbm90IG9ubHkgdXNlbGVzcywgYnV0IG9mdGVuIGJlaGF2ZXMganVzdCBsaWtlIGEgdHJhaXRvci4KPC90cmFuc2xhdGlvbj4="
translation['3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyB3ZSBoYXZlIGFzc3VtZWQgdGhhdCB0aGUgaG9yc2UgdG8gYmUgYm91Z2h0IGlzIGRlc2lnbmVkIGZvciB3YXIsIGhlIG11c3QgYmUgdGVzdGVkIGluIGFsbCB0aGUgcGFydGljdWxhcnMgaW4gd2hpY2ggaGUgaXMgdGVzdGVkIGJ5IHdhci4gVGhlc2UgaW5jbHVkZSBzcHJpbmdpbmcgYWNyb3NzIGRpdGNoZXMsIGxlYXBpbmcgb3ZlciB3YWxscywgcnVzaGluZyB1cCBiYW5rcywganVtcGluZyBkb3duIGZyb20gYmFua3MuIE9uZSBtdXN0IGFsc28gdHJ5IGhpbSBieSByaWRpbmcgdXAgYW5kIGRvd24gaGlsbCBhbmQgb24gYSBzbG9wZS4gQWxsIHRoZXNlIGV4cGVyaW1lbnRzIHByb3ZlIHdoZXRoZXIgaGlzIHNwaXJpdCBpcyBzdHJvbmcgYW5kIGhpcyBib2R5IHNvdW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5OZXZlcnRoZWxlc3MsIGl0IGlzIG5vdCBuZWNlc3NhcnkgdG8gcmVqZWN0IGEgaG9yc2UgdGhhdCBpcyBub3QgcGVyZmVjdCBpbiB0aGVzZSB0cmlhbHMuIEZvciBtYW55IGJyZWFrIGRvd24gaW4gdGhlc2Ugbm90IGZyb20gd2FudCBvZiBhYmlsaXR5LCBidXQgZnJvbSBsYWNrIG9mIGV4cGVyaWVuY2UuIFdpdGggdGVhY2hpbmcsIHVzZSBhbmQgZGlzY2lwbGluZSB0aGV5IHdpbGwgcGVyZm9ybSBhbGwgdGhlc2UgZXhlcmNpc2VzIHdlbGwsIHByb3ZpZGVkIHRoZXkgYXJlIG90aGVyd2lzZSBzb3VuZCBhbmQgbm90IGZhdWx0eS4KPC90cmFuc2xhdGlvbj4="
translation['3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBvbmUgc2hvdWxkIGJld2FyZSBvZiBob3JzZXMgdGhhdCBhcmUgbmF0dXJhbGx5IHNoeS4gRm9yIHRpbWlkIGhvcnNlcyBnaXZlIG9uZSBubyBjaGFuY2Ugb2YgdXNpbmcgdGhlbSB0byBoYXJtIHRoZSBlbmVteSwgYW5kIG9mdGVuIHRocm93IHRoZWlyIHJpZGVyIGFuZCBwdXQgaGltIGluIGEgdmVyeSBhd2t3YXJkIHNpdHVhdGlvbi4KPC90cmFuc2xhdGlvbj4="
translation['3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgaXMgbmVjZXNzYXJ5IGFsc28gdG8gZmluZCBvdXQgd2hldGhlciB0aGUgaG9yc2UgaGFzIGFueSB2aWNlIHRvd2FyZHMgaG9yc2VzIG9yIHRvd2FyZHMgbWVuLCBhbmQgd2hldGhlciBoZSB3aWxsIG5vdCBzdGFuZCB0aWNrbGluZzogZm9yIGFsbCB0aGVzZSB0aGluZ3MgcHJvdmUgdHJvdWJsZXNvbWUgdG8gdGhlIG93bmVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgcmVnYXJkcyBvYmplY3Rpb24gdG8gYmVpbmcgYnJpZGxlZCBvciBtb3VudGVkLCBhbmQgdGhlIG90aGVyIHJlYWN0aW9ucywgdGhlcmUgaXMgYSBtdWNoIGJldHRlciB3YXkgc3RpbGwgb2YgZGV0ZWN0aW5nIHRoZXNlLCBuYW1lbHksIGJ5IHRyeWluZyB0byBkbyBvdmVyIGFnYWluLCBhZnRlciB0aGUgaG9yc2UgaGFzIGZpbmlzaGVkIGhpcyB3b3JrLCBqdXN0IHdoYXQgb25lIGRpZCBiZWZvcmUgc3RhcnRpbmcgb24gdGhlIHJpZGUuIEFsbCBob3JzZXMgdGhhdCBhcmUgd2lsbGluZyBhZnRlciB0aGVpciB3b3JrIHRvIGRvIGFub3RoZXIgc3BlbGwgdGhlcmVieSBnaXZlIHN1ZmZpY2llbnQgcHJvb2ZzIG9mIGEgcGF0aWVudCB0ZW1wZXIuCjwvdHJhbnNsYXRpb24+"
translation['3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG8gc3VtIHVwOiB0aGUgaG9yc2UgdGhhdCBpcyBzb3VuZCBpbiBoaXMgZmVldCwgZ2VudGxlIGFuZCBmYWlybHkgc3BlZWR5LCBoYXMgdGhlIHdpbGwgYW5kIHRoZSBzdHJlbmd0aCB0byBzdGFuZCB3b3JrLCBhbmQsIGFib3ZlIGFsbCwgaXMgb2JlZGllbnQsIGlzIHRoZSBob3JzZSB0aGF0IHdpbGwsIGFzIGEgbWF0dGVyIG9mIGNvdXJzZSwgZ2l2ZSBsZWFzdCB0cm91YmxlIGFuZCB0aGUgZ3JlYXRlc3QgbWVhc3VyZSBvZiBzYWZldHkgdG8gaGlzIHJpZGVyIGluIHdhcmZhcmUuIEJ1dCB0aG9zZSB0aGF0IHdhbnQgYSBsb3Qgb2YgZHJpdmluZyBvbiBhY2NvdW50IG9mIHRoZWlyIGxhemluZXNzLCBvciBhIGxvdCBvZiBjb2F4aW5nIGFuZCBhdHRlbnRpb24gb24gYWNjb3VudCBvZiB0aGVpciBoaWdoIHNwaXJpdCwgbWFrZSBjb25zdGFudCBkZW1hbmRzIG9uIHRoZSByaWRlcidzIGhhbmRzIGFuZCByb2IgaGltIG9mIGNvbmZpZGVuY2UgaW4gbW9tZW50cyBvZiBkYW5nZXIuCjwvdHJhbnNsYXRpb24+"
translation['4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIGEgbWFuIGhhcyBmb3VuZCBhIGhvcnNlIHRvIGhpcyBtaW5kLCBib3VnaHQgaGltIGFuZCB0YWtlbiBoaW0gaG9tZSwgaXQgaXMgd2VsbCB0byBoYXZlIHRoZSBzdGFibGUgc28gc2l0dWF0ZWQgd2l0aCByZXNwZWN0IHRvIHRoZSBob3VzZSB0aGF0IGhpcyBtYXN0ZXIgY2FuIHNlZSBoaW0gdmVyeSBvZnRlbjsgYW5kIGl0IGlzIGEgZ29vZCBwbGFuIHRvIGhhdmUgdGhlIHN0YWxsIHNvIGNvbnRyaXZlZCB0aGF0IGl0IHdpbGwgYmUgYXMgZGlmZmljdWx0IHRvIHN0ZWFsIHRoZSBob3JzZSdzIGZvZGRlcm91dCBvZiB0aGUgbWFuZ2VyIGFzIHRoZSBtYXN0ZXIncyB2aWN0dWFscyBmcm9tIHRoZSBsYXJkZXIuIEhlIHdobyBuZWdsZWN0cyB0aGlzIHNlZW1zIHRvIG1lIHRvIG5lZ2xlY3QgaGltc2VsZjsgZm9yIGl0IGlzIHBsYWluIHRoYXQgaW4gZGFuZ2VyIHRoZSBtYXN0ZXIgZW50cnVzdHMgaGlzIGxpZmUgdG8gaGlzIGhvcnNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBhIHdlbGwtc2VjdXJlZCBzdGFsbCBpcyBub3Qgb25seSBnb29kIGZvciBwcmV2ZW50aW5nIHRoZWZ0IG9mIHRoZSBmb2RkZXIgYnV0IGFsc28gYmVjYXVzZSBvbmUgY2FuIHNlZSB3aGVuIHRoZSBob3JzZSBkb2VzIG5vdCBzcGlsbCBoaXMgZm9vZC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SW4gaGVhbHRoeSBleGNpdGVtZW50LiBTZWUgSi4gSy4gQW5kZXJzb24sIGluIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkouSC5TLjwvdGl0bGU+IDgwLjEtMi48L25vdGU+IEFuZCBvbiBub3RpY2luZyB0aGlzIG9uZSBtYXkgYmUgc3VyZSB0aGF0IGVpdGhlciBoaXMgYm9keSBpcyBvdmVyZnVsbCBvZiBibG9vZCBhbmQgbmVlZHMgdHJlYXRtZW50IG9yIHRoZSBob3JzZSBpcyBvdmVyd29ya2VkIGFuZCB3YW50cyByZXN0LCBvciB0aGF0IGxhbWluaXRpczx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkouSC5TLjwvdGl0bGU+IDgwLjEtMi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U28gSi4gSy4gQW5kZXJzb24sIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkFuY2llbnQgR3JlZWsgSG9yc2VtYW5zaGlwLDwvdGl0bGU+IHBwLiAxNjIsIDIwNywgbm90LCBhcyB3YXMgb25jZSBiZWxpZXZlZCwgY29saWMuPC9ub3RlPiBvciBzb21lIG90aGVyIGFpbG1lbnQgaXMgY29taW5nIG9uLiBJdCBpcyB0aGUgc2FtZSB3aXRoIGhvcnNlcyBhcyB3aXRoIG1lbjogYWxsIGRpc3RlbXBlcnMgaW4gdGhlIGVhcmx5IHN0YWdlIGFyZSBtb3JlIGVhc2lseSBjdXJlZCB0aGFuIHdoZW4gdGhleSBoYXZlIGJlY29tZSBjaHJvbmljIGFuZCBoYXZlIGJlZW4gd3JvbmdseSB0cmVhdGVkLgo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmNpZW50IEdyZWVrIEhvcnNlbWFuc2hpcCw8L3RpdGxlPiBwcC4gMTYyLCAyMDcsIG5vdCwgYXMgd2FzIG9uY2UgYmVsaWV2ZWQsIGNvbGljLjwvdHJhbnNsYXRpb24+"
translation['4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5KdXN0IGFzIHRoZSBmb29kIGFuZCBleGVyY2lzZSBvZiB0aGUgaG9yc2UgbXVzdCBiZSBhdHRlbmRlZCB0byBpbiBvcmRlciB0aGF0IGhlIG1heSBrZWVwIHNvdW5kLCBzbyBoaXMgZmVldCBtdXN0IGJlIGNhcmVkIGZvci4gTm93IGRhbXAgYW5kIHNsaXBwZXJ5IGZsb29ycyBydWluIGV2ZW4gd2VsbC1mb3JtZWQgaG9vZnMuIEluIG9yZGVyIHRoYXQgdGhleSBtYXkgbm90IGJlIGRhbXAsIHRoZSBmbG9vcnMgc2hvdWxkIGhhdmUgYSBzbG9wZSB0byBjYXJyeSBvZmYgdGhlIHdldCwgYW5kLCB0aGF0IHRoZXkgbWF5IG5vdCBiZSBzbGlwcGVyeSwgdGhleSBzaG91bGQgYmUgcGF2ZWQgYWxsIG92ZXIgd2l0aCBzdG9uZXMsIGVhY2ggb25lIGFib3V0IHRoZSBzaXplIG9mIHRoZSBob29mLiBTdWNoIGZsb29ycywgaW5kZWVkLCBoYXZlIGFub3RoZXIgYWR2YW50YWdlIGJlY2F1c2UgdGhleSBoYXJkZW4gdGhlIGZlZXQgb2YgdGhlIGhvcnNlcyBzdGFuZGluZyBvbiB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UbyB0YWtlIHRoZSBuZXh0IHBvaW50OiB0aGUgZ3Jvb20gbXVzdCBsZWFkIG91dCB0aGUgaG9yc2UgdG8gY2xlYW4gaGltLCBhbmQgbXVzdCBsb29zZSBoaW0gZnJvbSB0aGUgc3RhbGwgYWZ0ZXIgdGhlIG1vcm5pbmcgZmVlZCwgdGhhdCBoZSBtYXkgcmV0dXJuIHRvIGhpcyBldmVuaW5nIGZlZWQgd2l0aCBtb3JlIGFwcGV0aXRlLiBOb3cgdGhlIHN0YWJsZXlhcmQgd2lsbCBiZSBvZiB0aGUgYmVzdCBmb3JtIGFuZCB3aWxsIHN0cmVuZ3RoZW4gdGhlIGZlZXQgaWYgaGUgdGhyb3dzIGRvd24gYW5kIHNwcmVhZHMgb3ZlciBpdCBmb3VyIG9yIGZpdmUgbG9hZHMgb2Ygcm91bmQgc3RvbmVzLCB0aGUgc2l6ZSBvZiBhIGZpc3QsIGFib3V0IGEgcG91bmQgaW4gd2VpZ2h0LCBhbmQgc3Vycm91bmRzIHRoZW0gd2l0aCBhIGJvcmRlciBvZiBpcm9uIHNvIHRoYXQgdGhleSBtYXkgbm90IGJlIHNjYXR0ZXJlZC4gU3RhbmRpbmcgb24gdGhlc2Ugd2lsbCBoYXZlIHRoZSBzYW1lIGVmZmVjdCBhcyBpZiB0aGUgaG9yc2Ugd2Fsa2VkIG9uIGEgc3RvbmUgcm9hZCBmb3Igc29tZSB0aW1lIGV2ZXJ5IGRheS4KPC90cmFuc2xhdGlvbj4="
translation['4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gaGUgaXMgYmVpbmcgcnViYmVkIGRvd24gYW5kIHRlYXNlZCB3aXRoIGZsaWVzIGhlIGlzIGJvdW5kIHRvIHVzZSBoaXMgaG9vZnMgaW4gdGhlIHNhbWUgd2F5IGFzIHdoZW4gaGUgd2Fsa3MuIFRoZSBmcm9ncyBhbHNvIGFyZSBoYXJkZW5lZCBieSBzdG9uZXMgc2NhdHRlcmVkIGluIHRoaXMgd2F5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgc2FtZSBjYXJlIG11c3QgYmUgdGFrZW4gdG8gbWFrZSBoaXMgbW91dGggdGVuZGVyIGFzIHRvIGhhcmRlbiBoaXMgaG9vZnMuIFRoaXMgaXMgZG9uZSBieSB0aGUgc2FtZSBtZXRob2RzIGFzIGFyZSBlbXBsb3llZCB0byBzb2Z0ZW4gaHVtYW4gZmxlc2guCjwvdHJhbnNsYXRpb24+"
translation['5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyBhIG1hcmsgb2YgYSBnb29kIGhvcnNlbWFuLCBpbiBvdXIgb3BpbmlvbiwgdG8gc2VlIHRoYXQgaGlzIGdyb29tLCBsaWtlIGhpbXNlbGYsIGlzIGluc3RydWN0ZWQgaW4gdGhlIHdheSBpbiB3aGljaCBoZSBzaG91bGQgdHJlYXQgdGhlIGhvcnNlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GaXJzdCB0aGVuIHRoZSBtYW4gb3VnaHQgdG8ga25vdyB0aGF0IGhlIHNob3VsZCBuZXZlciBtYWtlIHRoZSBrbm90IGluIHRoZSBoYWx0ZXIgYXQgdGhlIHBvaW50IHdoZXJlIHRoZSBoZWFkc3RhbGwgaXMgcHV0IG9uLiBGb3IgaWYgdGhlIGhhbHRlciBpcyBub3QgZWFzeSBhYm91dCB0aGUgZWFycywgdGhlIGhvcnNlIHdpbGwgb2Z0ZW4gcnViIGhpcyBoZWFkIGFnYWluc3QgdGhlIG1hbmdlciBhbmQgbWF5IG9mdGVuIGdldCBzb3JlcyBpbiBjb25zZXF1ZW5jZS4gTm93IGlmIHRoZXJlIGFyZSBzb3JlIHBsYWNlcyB0aGVyZWFib3V0cyB0aGUgaG9yc2UgaXMgYm91bmQgdG8gYmUgcmVzdGl2ZSBib3RoIHdoZW4gaGUgaXMgYnJpZGxlZCBhbmQgd2hlbiBoZSBpcyBydWJiZWQgZG93bi4KPC90cmFuc2xhdGlvbj4="
translation['5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkl0IGlzIHdlbGwgYWxzbyBmb3IgdGhlIGdyb29tIHRvIGhhdmUgb3JkZXJzIHRvIHJlbW92ZSB0aGUgZHVuZyBhbmQgbGl0dGVyIGRhaWx5IHRvIG9uZSBhbmQgdGhlIHNhbWUgcGxhY2UuIEZvciBieSBkb2luZyB0aGlzIGhlIHdpbGwgZ2V0IHJpZCBvZiBpdCBtb3N0IGVhc2lseSBhbmQgYXQgdGhlIHNhbWUgdGltZSByZWxpZXZlIHRoZSBob3JzZS4KPC90cmFuc2xhdGlvbj4="
translation['5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBncm9vbSBtdXN0IGFsc28ga25vdyBhYm91dCBwdXR0aW5nIHRoZSBtdXp6bGUgb24gdGhlIGhvcnNlIHdoZW4gaGUgdGFrZXMgaGltIG91dCB0byBiZSBncm9vbWVkIG9yIHRvIHRoZSByb2xsaW5nLXBsYWNlLiBJbiBmYWN0IGhlIG11c3QgYWx3YXlzIHB1dCB0aGUgbXV6emxlIG9uIHdoZW4gaGUgbGVhZHMgaGltIGFueXdoZXJlIHdpdGhvdXQgYSBicmlkbGUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBtdXp6bGUgYXBwZWFycyBvbiBzZXZlcmFsIEdyZWVrIHZhc2VzLiBUaGUgR3JlZWsgaG9yc2Ugd2FzIGdpdmVuIHRvIGJpdGluZy48L25vdGU+IEZvciB0aGUgbXV6emxlIHByZXZlbnRzIGhpbSBmcm9tIGJpdGluZyB3aXRob3V0IGhhbXBlcmluZyBoaXMgYnJlYXRoaW5nOyBhbmQgbW9yZW92ZXIsIHdoZW4gaXQgaXMgcHV0IG9uLCBpdCBnb2VzIGZhciB0b3dhcmRzIHByZXZlbnRpbmcgYW55IHByb3BlbnNpdHkgdG8gbWlzY2hpZWYuCjwvdHJhbnNsYXRpb24+"
translation['5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSBzaG91bGQgdGllIHVwIHRoZSBob3JzZSBhdCBhIHBsYWNlIGFib3ZlIHRoZSBoZWFkLCBiZWNhdXNlIHdoZW4gYW55dGhpbmcgaXJyaXRhdGVzIGhpcyBmYWNlLCB0aGUgaG9yc2UgaW5zdGluY3RpdmVseSB0cmllcyB0byBnZXQgcmlkIG9mIGl0IGJ5IHRvc3NpbmcgaGlzIGhlYWQgdXB3YXJkczsgYW5kIGlmIGhlIGlzIHRpZWQgdGh1cyBoZSBsb29zZW5zIHRoZSBoYWx0ZXIgaW5zdGVhZCBvZiBicmVha2luZyBpdCBieSB0b3NzaW5nIHVwIGhpcyBoZWFkLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiBydWJiaW5nIHRoZSBob3JzZSBkb3duLCB0aGUgbWFuIHNob3VsZCBzdGFydCBhdCB0aGUgaGVhZCBhbmQgbWFuZTsgZm9yIGlmIHRoZSB1cHBlciBwYXJ0cyBhcmUgbm90IGNsZWFuLCBpdCBpcyBpZGxlIHRvIGNsZWFuIGhpcyBsb3dlciBwYXJ0cy4gTmV4dCwgZ29pbmcgb3ZlciB0aGUgcmVzdCBvZiBoaXMgYm9keSwgaGUgc2hvdWxkIG1ha2UgdGhlIGhhaXIgc3RhbmQgdXAgd2l0aCBhbGwgdGhlIGRyZXNzaW5nIGluc3RydW1lbnRzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgaW5zdHJ1Y3Rpb25zIGFyZSByYXRoZXIgdmFndWUuPC9ub3RlPiBhbmQgZ2V0IHRoZSBkdXN0IG91dCBieSBydWJiaW5nIGhpbSB0aGUgd2F5IHRoZSBoYWlyIGxpZXMuIEJ1dCBoZSBzaG91bGQgbm90IHRvdWNoIHRoZSBoYWlyIG9uIHRoZSBiYWNrYm9uZSB3aXRoIGFueSBpbnN0cnVtZW50OyBoZSBzaG91bGQgcnViIGFuZCBzbW9vdGggaXQgZG93biB3aXRoIHRoZSBoYW5kcyB0aGUgd2F5IGl0IG5hdHVyYWxseSBncm93czsgZm9yIHNvIGhlIHdpbGwgYmUgbGVhc3QgbGlrZWx5IHRvIGluanVyZSB0aGUgcmlkZXIncyBzZWF0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkhlIG11c3Qgd2FzaCB0aGUgaGVhZCB3ZWxsIHdpdGggd2F0ZXIsIGZvciwgYXMgaXQgaXMgYm9ueSwgdG8gY2xlYW4gaXQgd2l0aCBpcm9uIG9yIHdvb2Qgd291bGQgaHVydCB0aGUgaG9yc2UuIEhlIG11c3QgYWxzbyB3ZXQgdGhlIGZvcmVsb2NrLCBmb3IgdGhpcyB0dWZ0IG9mIGhhaXIsIGV2ZW4gaWYgcHJldHR5IGxvbmcsIGRvZXMgbm90IG9ic3RydWN0IGhpcyBzaWdodCwgYnV0IGRyaXZlcyBmcm9tIGhpcyBleWVzIGFueXRoaW5nIHRoYXQgd29ycmllcyB0aGVtOyBhbmQgd2UgbXVzdCBwcmVzdW1lIHRoYXQgdGhlIGdvZHMgaGF2ZSBnaXZlbiB0aGUgaG9yc2UgdGhpcyBoYWlyIGluIGxpZXUgb2YgdGhlIGxvbmcgZWFycyB0aGF0IHRoZXkgaGF2ZSBnaXZlbiB0byBhc3NlcyBhbmQgbXVsZXMgYXMgYSBwcm90ZWN0aW9uIHRvIHRoZWlyIGV5ZXMuCjwvdHJhbnNsYXRpb24+"
translation['5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkhlIHNob3VsZCBhbHNvIHdhc2ggdGhlIHRhaWwgYW5kIG1hbmUsIGZvciBncm93dGggb2YgdGhlIHRhaWwgaXMgdG8gYmUgZW5jb3VyYWdlZCBpbiBvcmRlciB0aGF0IHRoZSBob3JzZSBtYXkgYmUgYWJsZSB0byByZWFjaCBhcyBmYXIgYXMgcG9zc2libGUgYW5kIGRyaXZlIGF3YXkgYW55dGhpbmcgdGhhdCB3b3JyaWVzIGhpbSwgYW5kIGdyb3d0aCBvZiB0aGUgbWFuZSBpbiBvcmRlciB0byBnaXZlIHRoZSByaWRlciBhcyBnb29kIGEgaG9sZCBhcyBwb3NzaWJsZS4KPC90cmFuc2xhdGlvbj4="
translation['5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJlc2lkZXMsIHRoZSBtYW5lLCBmb3JlbG9jayBhbmQgdGFpbCBoYXZlIGJlZW4gZ2l2ZW4gdG8gdGhlIGhvcnNlIGJ5IHRoZSBnb2RzIGFzIGFuIG9ybmFtZW50LiBBIHByb29mIG9mIHRoaXMgaXMgdGhhdCBicm9vZCBtYXJlcyBoZXJkaW5nIHRvZ2V0aGVyLCBzbyBsb25nIGFzIHRoZXkgaGF2ZSBmaW5lIG1hbmVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZXZlcmFsIGFsbHVzaW9ucyB0byB0aGlzIGVycm9uZW91cyBiZWxpZWYgb2YgdGhlIEdyZWVrcyBhcmUgY29sbGVjdGVkIGJ5IHRoZSBjb21tZW50YXRvcnMuPC9ub3RlPiBhcmUgcmVsdWN0YW50IHRvIGJlIGNvdmVyZWQgYnkgYXNzZXM7IGZvciB3aGljaCByZWFzb24gYWxsIGJyZWVkZXJzIG9mIG11bGVzIGN1dCBvZmYgdGhlIG1hbmVzIG9mIHRoZSBtYXJlcyBmb3IgY292ZXJpbmcuCjwvdHJhbnNsYXRpb24+"
translation['5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XYXNoaW5nIGRvd24gb2YgdGhlIGxlZ3Mgd2UgZGlzYXBwcm92ZSBvZjsgaXQgZG9lcyBubyBnb29kLCBhbmQgdGhlIGhvb2ZzIGFyZSBpbmp1cmVkIGJ5IGJlaW5nIHdldHRlZCBldmVyeSBkYXkuIEV4Y2Vzc2l2ZSBjbGVhbmluZyB1bmRlciB0aGUgYmVsbHkgYWxzbyBzaG91bGQgYmUgZGltaW5pc2hlZDsgZm9yIHRoaXMgd29ycmllcyB0aGUgaG9yc2UgdmVyeSBtdWNoLCBhbmQgdGhlIGNsZWFuZXIgdGhlc2UgcGFydHMgYXJlLCB0aGUgbW9yZSB0aGV5IGNvbGxlY3QgdW5kZXIgdGhlIGJlbGx5IHRoaW5ncyBvZmZlbnNpdmUgdG8gaXQ7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSB0ZXh0IHNob3dzIHRoYXQgdGhlIHBhcnRzIHdhc2hlZCB3ZXJlIG5vdCB0aG9yb3VnaGx5IGRyaWVkOiBpbmRlZWQsIGVmZmljaWVudCBkcnlpbmcgY2xvdGhzIHdlcmUgbm90IHVzZWQuIFNlZSBQb2xsdXggMS4xODUuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgbm90d2l0aHN0YW5kaW5nIGFsbCB0aGUgcGFpbnMgdGhhdCBtYXkgYmUgdGFrZW4gd2l0aCB0aGVzZSBwYXJ0cywgdGhlIGhvcnNlIGlzIG5vIHNvb25lciBsZWQgb3V0IHRoYW4gaGUgbG9va3MgbXVjaCB0aGUgc2FtZSBhcyBhbiB1bndhc2hlZCBhbmltYWwuIFNvIHRoZXNlIG9wZXJhdGlvbnMgc2hvdWxkIGJlIG9taXR0ZWQ7IGFuZCBhcyBmb3IgdGhlIHJ1YmJpbmcgb2YgdGhlIGxlZ3MsIGl0IGlzIGVub3VnaCB0byBkbyBpdCB3aXRoIHRoZSBiYXJlIGhhbmRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSB3aWxsIG5vdyBzaG93IGhvdyBvbmUgbWF5IHJ1YiBkb3duIGEgaG9yc2Ugd2l0aCBsZWFzdCBkYW5nZXIgdG8gb25lc2VsZiBhbmQgbW9zdCBhZHZhbnRhZ2UgdG8gdGhlIGhvcnNlLiBJZiBpbiBjbGVhbmluZyBoaW08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+V2hhdCBmb2xsb3dzIHJlZmVycyB0byBjbGVhbmluZyB0aGUgZm9yZS1sZWdzLCB0byB3aGljaCBhIHJlZmVyZW5jZSBoYXMgZG91YnRsZXNzIGRyb3BwZWQgb3V0IG9mIHRoZSB0ZXh0Ljwvbm90ZT4gdGhlIG1hbiBmYWNlcyBpbiB0aGUgc2FtZSBkaXJlY3Rpb24gYXMgdGhlIGhvcnNlLCBoZSBydW5zIHRoZSByaXNrIG9mIGdldHRpbmcgYSBibG93IGluIHRoZSBmYWNlIGZyb20gaGlzIGtuZWUgYW5kIGhpcyBob29mLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpZiBoZSBmYWNlcyBpbiB0aGUgb3Bwb3NpdGUgZGlyZWN0aW9uIHRvIHRoZSBob3JzZSBhbmQgc2l0cyBieSB0aGUgc2hvdWxkZXIgb3V0IG9mIHJlYWNoIG9mIGhpcyBsZWcgd2hlbiBoZSBjbGVhbnMgaGltLCBhbmQgcnVicyBoaW0gZG93biBzbywgdGhlbiBoZSB3aWxsIGNvbWUgdG8gbm8gaGFybSwgYW5kIGNhbiBhbHNvIGF0dGVuZCB0byB0aGUgaG9yc2UncyBmcm9nIGJ5IGxpZnRpbmcgdXAgdGhlIGhvb2YuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk9uIHRoZSB2YXNlIHJlZmVycmVkIHRvIGluIHRoZSBJbnRyb2R1Y3Rpb24gKHAuIDM0KSB0aGUgZ3Jvb20gZXhhbWluaW5nIGhpcyBmcm9nIGlzIGNyb3VjaGluZyB1bmRlciB0aGUgaG9yc2UgYW5kIGZhY2luZyB0aGUgc2FtZSB3YXkuPC9ub3RlPiBMZXQgaGltIGRvIGV4YWN0bHkgdGhlIHNhbWUgaW4gY2xlYW5pbmcgdGhlIGhpbmQtbGVncy4KPC90cmFuc2xhdGlvbj4="
translation['6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBtYW4gZW1wbG95ZWQgYWJvdXQgdGhlIGhvcnNlIGlzIHRvIGtub3cgdGhhdCBpbiB0aGVzZSBvcGVyYXRpb25zIGFuZCBpbiBhbGwgdGhhdCBoZSBoYXMgdG8gZG8gaGUgbXVzdCBiZSB2ZXJ5IGNoYXJ5IG9mIGFwcHJvYWNoaW5nIGZyb20gdGhlIGhlYWQgb3IgdGFpbCB0byBkbyBoaXMgd29yay4gRm9yIGlmIHRoZSBob3JzZSBhdHRlbXB0cyB0byBzaG93IG1pc2NoaWVmIGhlIGhhcyB0aGUgbWFuIGluIGhpcyBwb3dlciBpbiBib3RoIHRoZXNlIGRpcmVjdGlvbnM7IGJ1dCBpZiBoZSBhcHByb2FjaGVzIGZyb20gdGhlIHNpZGUgaGUgY2FuIG1hbmFnZSB0aGUgaG9yc2Ugd2l0aCBsZWFzdCBkYW5nZXIgdG8gaGltc2VsZiBhbmQgaW4gdGhlIGJlc3QgbWFubmVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIGl0IGlzIG5lY2Vzc2FyeSB0byBsZWFkIHRoZSBob3JzZSwgd2UgZG8gbm90IGFwcHJvdmUgb2YgbGVhZGluZyBoaW0gYmVoaW5kIG9uZSBmb3IgdGhpcyByZWFzb24sIHRoYXQgdGhlIG1hbiBsZWFkaW5nIGhpbSBpcyB0aGVuIGxlYXN0IGFibGUgdG8gdGFrZSBjYXJlIG9mIGhpbXNlbGYgd2hpbGUgdGhlIGhvcnNlIGhhcyB0aGUgdXRtb3N0IGZyZWVkb20gdG8gZG8gd2hhdGV2ZXIgaGUgY2hvb3Nlcy4KPC90cmFuc2xhdGlvbj4="
translation['6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBvdGhlciBoYW5kIHdlIGFsc28gZGlzYXBwcm92ZSBvZiB0cmFpbmluZyB0aGUgaG9yc2UgdG8gZ28gaW4gZnJvbnQgb24gYSBsb25nIGxlYWQgZm9yIHRoZSBmb2xsb3dpbmcgcmVhc29uczogdGhlIGhvcnNlIGhhcyB0aGUgcG93ZXIgb2YgbWlzYmVoYXZpbmcgb24gZWl0aGVyIHNpZGUgYXMgaGUgY2hvb3NlcywgYW5kIGhhcyBhbHNvIHRoZSBwb3dlciBvZiB0dXJuaW5nIHJvdW5kIGFuZCBmYWNpbmcgaGlzIGRyaXZlci4KPC90cmFuc2xhdGlvbj4="
translation['6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBpZiBzZXZlcmFsIGhvcnNlcyB0b2dldGhlciBhcmUgZHJpdmVuIGluIHRoaXMgZmFzaGlvbiwgaG93IGNhbiB0aGV5IHBvc3NpYmx5IGJlIGtlcHQgZnJvbSBpbnRlcmZlcmluZyB3aXRoIG9uZSBhbm90aGVyPyBCdXQgYSBob3JzZSB0aGF0IGlzIGFjY3VzdG9tZWQgdG8gYmVpbmcgbGVkIGZyb20gdGhlIHNpZGUgd2lsbCBoYXZlIGxlYXN0IHBvd2VyIG9mIGRvaW5nIGhhcm0gZWl0aGVyIHRvIGhvcnNlcyBvciB0byBtZW4sIGFuZCB3aWxsIGJlIGluIHRoZSBoYW5kaWVzdCBwb3NpdGlvbiBmb3IgdGhlIHJpZGVyIHNob3VsZCBoZSB3YW50IHRvIG1vdW50IHF1aWNrbHkuCjwvdHJhbnNsYXRpb24+"
translation['6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiBvcmRlciB0byBwdXQgdGhlIGJpdCBpbiBwcm9wZXJseSwgZmlyc3QgbGV0IHRoZSBncm9vbSBhcHByb2FjaCBvbiB0aGUgbmVhciBzaWRlIG9mIHRoZSBob3JzZS4gVGhlbiBsZXQgaGltIHRocm93IHRoZSByZWlucyBvdmVyIHRoZSBoZWFkIGFuZCBkcm9wIHRoZW0gb24gdGhlIHdpdGhlcnMsIGFuZCBuZXh0IGxpZnQgdGhlIGhlYWRzdGFsbCB3aXRoIHRoZSByaWdodCBoYW5kIGFuZCBvZmZlciB0aGUgYml0IHdpdGggdGhlIGxlZnQuCjwvdHJhbnNsYXRpb24+"
translation['6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPklmIGhlIHRha2VzIHRoZSBiaXQsIG9mIGNvdXJzZSB0aGUgYnJpZGxlIHNob3VsZCBiZSBwdXQgb24uIEJ1dCBpZiBoZSByZWZ1c2VzIHRvIG9wZW4gaGlzIG1vdXRoLCB0aGUgbWFuIG11c3QgaG9sZCB0aGUgYml0IHRvIGhpcyB0ZWV0aCBhbmQgcHV0IHRoZSB0aHVtYiBvZiB0aGUgbGVmdCBoYW5kIGluIHRoZSBob3JzZSdzIGphdy4gTW9zdCBob3JzZXMgb3BlbiB0aGUgbW91dGggd2hlbiB0aGlzIGlzIGRvbmUuIElmIGhlIHN0aWxsIHJlc2lzdHMsIHRoZSBtYW4gc2hvdWxkIHNxdWVlemUgaGlzIGxpcCBhZ2FpbnN0IHRoZSB0dXNrOyBhbmQgdmVyeSBmZXcgcmVzaXN0IHdoZW4gdGhleSBhcmUgdHJlYXRlZCBpbiB0aGlzIHdheS4KPC90cmFuc2xhdGlvbj4="
translation['6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBncm9vbSBzaG91bGQgYWxzbyBiZSBpbnN0cnVjdGVkIGluIHRoZSBmb2xsb3dpbmcgcG9pbnRzOiBmaXJzdCwgbmV2ZXIgdG8gbGVhZCB0aGUgaG9yc2Ugb24gdGhlIHJlaW7igJR0aGF0IGdpdmVzIHRoZSBob3JzZSBhIGhhcmQgbW91dGggb24gb25lIHNpZGXigJRhbmQgc2Vjb25kbHksIHdoYXQgaXMgdGhlIGNvcnJlY3QgZGlzdGFuY2UgZnJvbSB0aGUgYml0IHRvIHRoZSBqYXdzLiBGb3IgaWYgaXQgaXMgdG9vIGhpZ2ggdXAsIGl0IGhhcmRlbnMgdGhlIG1vdXRoIHNvIHRoYXQgaXQgbG9zZXMgaXRzIHNlbnNpdGl2ZW5lc3M7IGFuZCBpZiBpdCBsaWVzIHRvbyBsb3cgaW4gdGhlIG1vdXRoLCBpdCBnaXZlcyB0aGUgaG9yc2UgcG93ZXIgdG8gdGFrZSBpdCBiZXR3ZWVuIGhpcyB0ZWV0aCBhbmQgcmVmdXNlIHRvIG9iZXkuCjwvdHJhbnNsYXRpb24+"
translation['6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZ3Jvb20gbXVzdCBhbHNvIHBheSBzb21lIGF0dGVudGlvbiB0byBzdWNoIHBvaW50cyBhcyB0aGUgZm9sbG93aW5nOiB3aGV0aGVyIHRoZSBob3JzZSB3aWxsIG5vdCBlYXNpbHkgdGFrZSB0aGUgYml0IHdoZW4gaGUga25vd3MgdGhhdCBoZSBoYXMgd29yayB0byBkby4gV2lsbGluZ25lc3MgdG8gcmVjZWl2ZSB0aGUgYml0IGlzLCBpbiBmYWN0LCBzbyBpbXBvcnRhbnQgdGhhdCBhIGhvcnNlIHRoYXQgcmVmdXNlcyBpdCBpcyBxdWl0ZSB1c2VsZXNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaWYgaGUgaXMgYnJpZGxlZCBub3Qgb25seSB3aGVuIGhlIGlzIGdvaW5nIHRvIGJlIHJpZGRlbiwgYnV0IGFsc28gd2hlbiBoZSBpcyB0YWtlbiB0byBoaXMgZm9vZCBhbmQgd2hlbiBoZSBpcyBsZWQgaG9tZSBmcm9tIGV4ZXJjaXNlLCBpdCB3b3VsZCBub3QgYmUgYXQgYWxsIHN1cnByaXNpbmcgaWYgaGUgc2VpemVkIHRoZSBiaXQgb2YgaGlzIG93biBhY2NvcmQgd2hlbiBvZmZlcmVkIHRvIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['6.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgaXMgd2VsbCBmb3IgdGhlIGdyb29tIHRvIGtub3cgaG93IHRvIGdpdmUgYSBsZWd1cCBpbiB0aGUgUGVyc2lhbiBmYXNoaW9uLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2F2YWxyeSBDb21tYW5kZXI8L3RpdGxlPiwgMS4xNy48L25vdGU+IHNvIHRoYXQgaGlzIG1hc3RlciBoaW1zZWxmLCBpbiBjYXNlIGhlIGlzIGluZGlzcG9zZWQgb3IgaXMgZ2V0dGluZyBvbGQgbWF5IGhhdmUgc29tZW9uZSB0byBwdXQgaGltIHVwIGNvbnZlbmllbnRseSwgYW5kIG1heSwgaWYgaGUgd2lzaGVzLCBvYmxpZ2UgaGlzIGZyaWVuZCB3aXRoIGEgbWFuIHRvIGdpdmUgaGltIGEgbGlmdC11cC4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2F2YWxyeSBDb21tYW5kZXI8L3RpdGxlPiwgMS4xNy48L3RyYW5zbGF0aW9uPg=="
translation['6.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIG9uZSBiZXN0IHJ1bGUgYW5kIHByYWN0aWNlIGluIGRlYWxpbmcgd2l0aCBhIGhvcnNlIGlzIG5ldmVyIHRvIGFwcHJvYWNoIGhpbSBpbiBhbmdlcjsgZm9yIGFuZ2VyIGlzIGEgcmVja2xlc3MgdGhpbmcsIHNvIHRoYXQgaXQgb2Z0ZW4gbWFrZXMgYSBtYW4gZG8gd2hhdCBoZSBtdXN0IHJlZ3JldC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SGVsbGVuaWNhPC90aXRsZT4sIDUuMy43Ljwvbm90ZT4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SGVsbGVuaWNhPC90aXRsZT4sIDUuMy43LjwvdHJhbnNsYXRpb24+"
translation['6.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Nb3Jlb3Zlciwgd2hlbiB0aGUgaG9yc2UgaXMgc2h5IG9mIGFueXRoaW5nIGFuZCB3aWxsIG5vdCBjb21lIG5lYXIgaXQsIHlvdSBzaG91bGQgdGVhY2ggaGltIHRoYXQgdGhlcmUgaXMgbm90aGluZyB0byBiZSBhZnJhaWQgb2YsIGVpdGhlciB3aXRoIHRoZSBoZWxwIG9mIGEgcGx1Y2t5IGhvcnNl4oCUd2hpY2ggaXMgdGhlIHN1cmVzdCB3YXnigJRvciBlbHNlIGJ5IHRvdWNoaW5nIHRoZSBvYmplY3QgdGhhdCBsb29rcyBhbGFybWluZyB5b3Vyc2VsZiwgYW5kIGdlbnRseSBsZWFkaW5nIHRoZSBob3JzZSB1cCB0byBpdC4KPC90cmFuc2xhdGlvbj4="
translation['6.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UbyBmb3JjZSBoaW0gd2l0aCBibG93cyBvbmx5IGluY3JlYXNlcyBoaXMgdGVycm9yOyBmb3Igd2hlbiBob3JzZXMgZmVlbCBwYWluIGluIHN1Y2ggYSBwcmVkaWNhbWVudCwgdGhleSB0aGluayB0aGF0IHRoaXMgdG9vIGlzIGNhdXNlZCBieSB0aGUgdGhpbmcgYXQgd2hpY2ggdGhleSBzaHkuCjwvdHJhbnNsYXRpb24+"
translation['6.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgZ3Jvb20gcHJlc2VudHMgdGhlIGhvcnNlIHRvIGhpcyByaWRlciwgd2UgdGFrZSBubyBleGNlcHRpb24gdG8gaGlzIHVuZGVyc3RhbmRpbmcgaG93IHRvIGNhdXNlIHRoZSBob3JzZSB0byBjcm91Y2gsIGZvciBjb252ZW5pZW5jZSBpbiBtb3VudGluZy4gV2UgdGhpbmssIGhvd2V2ZXIsIHRoYXQgdGhlIHJpZGVyIHNob3VsZCBnZXQgdXNlZCB0byBtb3VudGluZyBldmVuIHdpdGhvdXQgaGlzIGhvcnNlJ3MgaGVscC4gRm9yIGEgcmlkZXIgZ2V0cyBhIGRpZmZlcmVudCBzb3J0IG9mIGhvcnNlIGF0IGRpZmZlcmVudCB0aW1lcywgYW5kIHRoZSBzYW1lIG9uZSBkb2VzIG5vdCBhbHdheXMgc2VydmUgaGltIGluIHRoZSBzYW1lIHdheS4KPC90cmFuc2xhdGlvbj4="
translation['7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSB3aWxsIG5vdyBkZXNjcmliZSB3aGF0IHRoZSByaWRlciBzaG91bGQgZG8gd2hlbiBoZSBoYXMgcmVjZWl2ZWQgaGlzIGhvcnNlIGFuZCBpcyBnb2luZyB0byBtb3VudCwgaWYgaGUgaXMgdG8gbWFrZSB0aGUgYmVzdCBvZiBoaW1zZWxmIGFuZCBoaXMgaG9yc2UgaW4gcmlkaW5nLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GaXJzdCwgdGhlbiwgaGUgbXVzdCBob2xkIHRoZSBsZWFkLXJvcGUgZmFzdGVuZWQgdG8gdGhlIGNoaW4tc3RyYXAgb3IgdGhlIG5vc2UtYmFuZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jYXZlc3Nvbi4gU2VlIEFuZGVyc29uIGluIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkouSC5TLjwvdGl0bGU+IDgwLjMtNi48L25vdGU+IHJlYWR5IGluIHRoZSBsZWZ0IGhhbmQsIGFuZCBzbyBsb29zZSBhcyBub3QgdG8gamVyayB0aGUgaG9yc2Ugd2hldGhlciBoZSBtZWFucyB0byBtb3VudCBieSBob2xkaW5nIG9uIHRvIHRoZSBtYW5lIG5lYXIgdGhlIGVhcnMgb3IgdG8gc3ByaW5nIHVwIHdpdGggdGhlIGhlbHAgb2YgdGhlIHNwZWFyLiBXaXRoIGhpcyByaWdodCBoYW5kIGxldCBoaW0gdGFrZSBob2xkIG9mIHRoZSByZWlucyBieSB0aGUgd2l0aGVycyBhbG9uZyB3aXRoIHRoZSBtYW5lLCBzbyB0aGF0IGhlIG1heSBub3QgamVyayB0aGUgaG9yc2UncyBtb3V0aCB3aXRoIHRoZSBiaXQgaW4gYW55IHdheSBhcyBoZSBtb3VudHMuCjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkouSC5TLjwvdGl0bGU+IDgwLjMtNi48L3RyYW5zbGF0aW9uPg=="
translation['7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gaGUgaGFzIG1hZGUgaGlzIHNwcmluZyBpbiBvcmRlciB0byBtb3VudCwgaGUgc2hvdWxkIHJhaXNlIGhpcyBib2R5IHdpdGggaGlzIGxlZnQgaGFuZCwgd2hpbGUgYXQgdGhlIHNhbWUgdGltZSBoZSBoZWxwcyBoaW1zZWxmIHVwIGJ5IHN0cmV0Y2hpbmcgb3V0IGhpcyByaWdodDsgZm9yIGJ5IG1vdW50aW5nIGluIHRoaXMgd2F5IGhlIHdpbGwgbm90IHByZXNlbnQgYW4gYXdrd2FyZCBhcHBlYXJhbmNlIGV2ZW4gZnJvbSBiZWhpbmQgYnkgYmVuZGluZyBoaXMgbGVnLiBOZWl0aGVyIG11c3QgaGUgdG91Y2ggdGhlIGhvcnNlJ3MgYmFjayB3aXRoIGhpcyBrbmVlLCBidXQgdGhyb3cgdGhlIGxlZyByaWdodCBvdmVyIHRoZSBvZmYgc2lkZS4gSGF2aW5nIGJyb3VnaHQgdGhlIGZvb3Qgb3ZlciwgaGUgbXVzdCB0aGVuIGxldCBoaXMgYnV0dG9ja3MgZG93biBvbiB0aGUgaG9yc2UncyBiYWNrLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiBjYXNlIHRoZSBob3JzZW1hbiBoYXBwZW5zIHRvIGJlIGxlYWRpbmcgdGhlIGhvcnNlIHdpdGggdGhlIGxlZnQgaGFuZCBhbmQgaG9sZGluZyBoaXMgc3BlYXIgaW4gdGhlIHJpZ2h0LCBpdCBpcyB3ZWxsLCB3ZSB0aGluaywgdG8gcHJhY3Rpc2UgbW91bnRpbmcgb24gdGhlIG9mZiBzaWRlIGFsc28uIEZvciB0aGlzIHB1cnBvc2UgYWxsIHRoYXQgaGUgbmVlZHMgdG8gbGVhcm4gaXMgdG8gZG8gd2l0aCB0aGUgbGVmdCBwYXJ0cyBvZiB0aGUgYm9keSB3aGF0IGluIHRoZSBvdGhlciBjYXNlIGhlIGRpZCB3aXRoIHRoZSByaWdodCwgYW5kIHZpY2UgdmVyc2EuCjwvdHJhbnNsYXRpb24+"
translation['7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZSByZWFzb24gd2h5IHdlIHJlY29tbWVuZCB0aGlzIG1ldGhvZCBvZiBtb3VudGluZyBhbHNvIGlzLCB0aGF0IG5vIHNvb25lciBpcyB0aGUgcmlkZXIgbW91bnRlZCB0aGFuIGhlIGlzIHF1aXRlIHJlYWR5IHRvIGZpZ2h0IHdpdGggdGhlIGVuZW15IG9uIGEgc3VkZGVuLCBpZiBvY2Nhc2lvbiByZXF1aXJlcy4KPC90cmFuc2xhdGlvbj4="
translation['7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIGhlIGlzIHNlYXRlZCwgd2hldGhlciBvbiB0aGUgYmFyZSBiYWNrIG9yIG9uIHRoZSBjbG90aCwgd2Ugd291bGQgbm90IGhhdmUgaGltIHNpdCBhcyBpZiBoZSB3ZXJlIG9uIGhpcyBjaGFpciw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SW4gdGhlIGpvY2tleSBtb2RlLiDigJxJIHRoaW5rIHRoYXQgdGhvc2UgY3JpdGljcyBhcmUgaW4gZXJyb3Igd2hvIHVuZGVyc3RhbmQgdGhhdCBYLiBtZWFudCB0aGF0IHRoZSByaWRlciBzaG91bGQgdGFrZSB0aGUgZXh0cmVtZSBgZm9yaycgc2VhdDsgZm9yIG5vdCBvbmx5IHdvdWxkIHN1Y2ggYSBwb3NpdGlvbiBiZSB2ZXJ5IGluc2VjdXJlIHVwb24gdGhlIHNpbXBsZSBzYWRkbGVzIG9mIHRoZSBHcmVla3MsIGJ1dCBpdCBpcyBpbmNvbnNpc3RlbnQgd2l0aCB0aGUgZ3JhY2VmdWwgYW5kIGZpcm0gcG9zaXRpb24gZXhoaWJpdGVkIGJ5IHRoZSBtYXJibGVzLuKAnSBFLiBMLiBBbmRlcnNvbiBpbjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlJpZGluZzwvdGl0bGU+IChCYWRtaW50b24gc2VyaWVzKS48L25vdGU+IGJ1dCBhcyB0aG91Z2ggaGUgd2VyZSBzdGFuZGluZyB1cHJpZ2h0IHdpdGggaGlzIGxlZ3MgYXN0cmlkZS4gRm9yIHRodXMgaGUgd2lsbCBnZXQgYSBiZXR0ZXIgZ3JpcCBvZiBoaXMgaG9yc2Ugd2l0aCBoaXMgdGhpZ2hzLCBhbmQgdGhlIGVyZWN0IHBvc2l0aW9uIHdpbGwgZW5hYmxlIGhpbSwgaWYgbmVlZCBiZSwgdG8gdGhyb3cgaGlzIHNwZWFyIGFuZCBkZWxpdmVyIGEgYmxvdyBvbiBob3JzZWJhY2sgd2l0aCBtb3JlIGZvcmNlLgo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5SaWRpbmc8L3RpdGxlPiAoQmFkbWludG9uIHNlcmllcykuPC90cmFuc2xhdGlvbj4="
translation['7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgbG93ZXIgbGVnIGluY2x1ZGluZyB0aGUgZm9vdCBtdXN0IGhhbmcgbGF4IGFuZCBlYXN5IGZyb20gdGhlIGtuZWUgZG93bi4gRm9yIGlmIGhlIGtlZXBzIGhpcyBsZWcgc3RpZmYgYW5kIHNob3VsZCBzdHJpa2UgaXQgYWdhaW5zdCBhbnl0aGluZywgaGUgbWF5IGJyZWFrIGl0LCB3aGVyZWFzIGEgbG9vc2UgbGVnIHdpbGwgcmVjb2lsLCB3aGF0ZXZlciBpdCBlbmNvdW50ZXJzLCB3aXRob3V0IGRpc3R1cmJpbmcgdGhlIHBvc2l0aW9uIG9mIHRoZSB0aGlnaCBhdCBhbGwuCjwvdHJhbnNsYXRpb24+"
translation['7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZSByaWRlciBtdXN0IGFsc28gYWNjdXN0b20gaGltc2VsZiB0byBrZWVwaW5nIGhpcyBib2R5IGFib3ZlIHRoZSBoaXBzIGFzIGxvb3NlIGFzIHBvc3NpYmxlLCBmb3IgdGh1cyBoZSB3aWxsIGJlIGFibGUgdG8gc3RhbmQgbW9yZSBmYXRpZ3VlIGFuZCB3aWxsIGJlIGxlc3MgbGlhYmxlIHRvIGNvbWUgb2ZmIHdoZW4gaGUgaXMgcHVsbGVkIG9yIHB1c2hlZC4KPC90cmFuc2xhdGlvbj4="
translation['7.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBzb29uIGFzIGhlIGlzIHNlYXRlZCwgaGUgbXVzdCB0ZWFjaCBoaXMgaG9yc2UgdG8gc3RhbmQgcXVpZXQgYXQgZmlyc3QsIHVudGlsIGhlIGhhcyBzaGlmdGVkIGFueXRoaW5nIHRoYXQgd2FudHMgYXJyYW5naW5nIHVuZGVybmVhdGggaGltLCBnYXRoZXJlZCB0aGUgcmVpbnMgZXZlbiBpbiBoaXMgaGFuZCBhbmQgZ3Jhc3BlZCBoaXMgc3BlYXIgaW4gdGhlIG1vc3QgY29udmVuaWVudCBtYW5uZXIuIFRoZW4gbGV0IGhpbSBrZWVwIGhpcyBsZWZ0IGFybSBjbG9zZSB0byBoaXMgc2lkZSwgZm9yIHRodXMgdGhlIGhvcnNlbWFuJ3MgZmlndXJlIHdpbGwgbG9vayBiZXN0LCBhbmQgaGlzIGhhbmQgd2lsbCBoYXZlIG1vc3QgcG93ZXIuCjwvdHJhbnNsYXRpb24+"
translation['7.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciByZWlucywgd2UgcmVjb21tZW5kIHRoYXQgdGhleSBiZSBvZiBlcXVhbCBzdHJlbmd0aCwgbm90IHdlYWsgbm9yIHNsaXBwZXJ5IG5vciB0aGljaywgaW4gb3JkZXIgdGhhdCB0aGUgc3BlYXIgbWF5IGJlIGhlbGQgaW4gdGhlIHNhbWUgaGFuZCB3aGVuIG5lY2Vzc2FyeS4KPC90cmFuc2xhdGlvbj4="
translation['7.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBoZSBkaXJlY3RzIGhpcyBob3JzZSB0byBnbyBmb3J3YXJkLCBsZXQgaGltIGJlZ2luIGF0IGEgd2FsaywgZm9yIHRoaXMgcHJldmVudHMgYW55IGZsdXJyeS4gSWYgdGhlIGhvcnNlIGNhcnJpZXMgaGlzIGhlYWQgdG9vIGxvdywgbGV0IHRoZSByaWRlciBob2xkIHRoZSBoYW5kcyBoaWdoZXI7IGlmIHRvbyBoaWdoLCBsb3dlcjsgZm9yIGluIHRoaXMgd2F5IGhlIHdpbGwgZ2l2ZSBoaW0gdGhlIG1vc3QgZ3JhY2VmdWwgY2FycmlhZ2UuCjwvdHJhbnNsYXRpb24+"
translation['7.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzLCBpZiBoZSBicmVha3MgaW50byBoaXMgbmF0dXJhbCB0cm90LCBoZSB3aWxsIHJlbGF4IGhpcyBib2R5IGluIHRoZSBlYXNpZXN0IGZhc2hpb24gYW5kIGNvbWUgdG8gdGhlIGdhbGxvcCBtb3N0IHJlYWRpbHkuIFNpbmNlLCB0b28sIHRoZSBtb3JlIGFwcHJvdmVkIG1ldGhvZCBpcyB0byBiZWdpbiB3aXRoIHRoZSBsZWZ0LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgbGVmdCBsZWFkIGNvbWVzIG5hdHVyYWwgdG8gdGhlIGhvcnNlLiBUaGUgUGFydGhlbm9uIGZpZ3VyZXMgc2hvdyB0aGUgcmlnaHQgbGVhZDsgYnV0IHRoZSBHcmVla3MgYXBwcm92ZWQgb2YgbWFueSB0aGluZ3MgaW4gYXJ0IHRoYXQgdGhleSBkaWQgbm90IHByYWN0aXNlLjwvbm90ZT4gb25lIHdpbGwgYmVzdCBiZWdpbiBvbiB0aGlzIHNpZGUsIGJ5IGdpdmluZyB0aGUgaG9yc2UgdGhlIHNpZ25hbCB0byBnYWxsb3Agd2hpbGUgdHJvdHRpbmcsIGF0IHRoZSBpbnN0YW50IHdoZW4gaGUgaXMgdHJlYWRpbmcgd2l0aCB0aGUgcmlnaHQgKGZvcmUpIGZvb3QuCjwvdHJhbnNsYXRpb24+"
translation['7.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBoZSBpcyB0aGVuIG9uIHRoZSBwb2ludCBvZiByYWlzaW5nIHRoZSBsZWZ0LCBoZSB3aWxsIGJlZ2luIHdpdGggaXQsIGFuZCwgYXMgc29vbiBhcyB0aGUgcmlkZXIgdHVybnMgaGltIHRvIHRoZSBsZWZ0LCB3aWxsIGltbWVkaWF0ZWx5IGJlZ2luIHRoZSBzdHJpZGUuIEZvciBpdCBpcyBuYXR1cmFsIGZvciB0aGUgaG9yc2UgdG8gbGVhZCB3aXRoIHRoZSByaWdodCB3aGVuIHR1cm5lZCB0byB0aGUgcmlnaHQgYW5kIHdpdGggdGhlIGxlZnQgd2hlbiB0dXJuZWQgdG8gdGhlIGxlZnQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgcmVtYXJrYWJsZSBwcm9vZiBvZiBYJ3MuIHBvd2VyIG9mIG9ic2VydmF0aW9uLiBXaGVuIHRoZSB0cm90dGluZyBob3JzZSB0cmVhZHMgd2l0aCB0aGUgcmlnaHQgZm9yZS1sZWcsIHRoZSBoaW5kLWxlZ3MgYXJlIGluIHRoZSBwb3NpdGlvbiB0aGF0IHRoZSBob3JzZSBhc3N1bWVzIHdoZW4gZ2FsbG9waW5nIG9uIHRoZSBsZWZ0IGxlYWQsIGFuZCB0aGUgaG9yc2Ugd2lsbCBzdHJpa2Ugb2ZmIHdpdGggdGhlIGxlZnQgZm9yZS1sZWcuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['7.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGV4ZXJjaXNlIHRoYXQgd2UgcmVjb21tZW5kIGlzIHRoZSBvbmUgY2FsbGVkIHRoZSByaW5nLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5MaXRlcmFsbHkg4oCcZmV0dGVyLuKAnSBUaGUgb2xkIEVuZ2xpc2ggdGVybSBpcyDigJxyaW5nLOKAnSBub3cgdm9sdGUuIE9mIGNvdXJzZSB0aGUgaG9yc2Ugd2FzIGV4ZXJjaXNlZCBmaXJzdCBpbiBvbmUgZGlyZWN0aW9uLCB0aGVuIGluIHRoZSBvdGhlci48L25vdGU+IHNpbmNlIGl0IGFjY3VzdG9tcyB0aGUgaG9yc2UgdG8gdHVybiBvbiBib3RoIGphd3MuIEl0IGlzIGFsc28gd2VsbCB0byBjaGFuZ2UgdGhlIGV4ZXJjaXNlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCByaWRlIG9uIHRoZSBvdGhlciBoYW5kOyB0aGlzIGlzIG5vdCBwYXJ0IG9mIHRoZSB2b2x0ZS48L25vdGU+IGluIG9yZGVyIHRoYXQgYm90aCBqYXdzIG1heSBiZSBlcXVhbGx5IHByYWN0aXNlZCBvbiBlYWNoIHNpZGUgb2YgdGhlIGV4ZXJjaXNlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCBtYXkgaGF2ZSBib3RoIGphd3MgZXF1YWxseSBzZW5zaXRpdmUgb24gd2hpY2hldmVyIGhhbmQgaGUgaXMgcmlkZGVuLjwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['7.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5XZSByZWNvbW1lbmQgdGhlIG1hbmFnZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JIGhhdmUgdmVudHVyZWQgdG8gdXNlIHRoaXMgdGVybSBzaW5jZSBYLiBtZWFucyBwcmVjaXNlbHkgd2hhdCBHZXJ2YXNlIE1hcmtoYW0gY2FsbHMgdGhlIOKAnG1hbmFnZeKAnSBpbiB0aGUgc3RyaWN0IHNlbnNlLCBpLmUuLCB0d28gc3RyYWlnaHQgdHJlYWRzIHdpdGggYSBzZW1pY2lyY2xlIGF0IGVpdGhlciBlbmQuPC9ub3RlPiByYXRoZXIgdGhhbiB0aGUgY29tcGxldGUgcmluZywgZm9yIHRodXMgdGhlIGhvcnNlIHdpbGwgdHVybiBtb3JlIHdpbGxpbmdseSB3aGVuIGhlIGhhcyBnb25lIHNvbWUgZGlzdGFuY2UgaW4gYSBzdHJhaWdodCBjb3Vyc2UsIGFuZCBvbmUgY2FuIHByYWN0aXNlIHRoZSBjYXJlZXIgYW5kIHRoZSB0dXJuIGF0IHRoZSBzYW1lIHRpbWUuCjwvdHJhbnNsYXRpb24+"
translation['7.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyBuZWNlc3NhcnkgdG8gY29sbGVjdCBoaW0gYXQgdGhlIHR1cm5zOyBmb3IgaXQgaXMgbmVpdGhlciBlYXN5IGZvciB0aGUgaG9yc2Ugbm9yIHNhZmUgdG8gdHVybiBzaG9ydCB3aGVuIGdvaW5nIGZhc3QsIGVzcGVjaWFsbHkgaWYgdGhlIGdyb3VuZCBpcyB1bmV2ZW4gb3Igc2xpcHBlcnkuCjwvdHJhbnNsYXRpb24+"
translation['7.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5JbiBjb2xsZWN0aW5nIGhpbSB0aGUgcmlkZXIgbXVzdCBzbGFudCB0aGUgaG9yc2UgYXMgbGl0dGxlIGFzIHBvc3NpYmxlIHdpdGggdGhlIGJpdCwgYW5kIHNsYW50IGhpcyBvd24gYm9keSBhcyBsaXR0bGUgYXMgcG9zc2libGU7IGVsc2UgaGUgbWF5IGJlIHN1cmUgdGhhdCBhIHRyaWZsaW5nIGNhdXNlIHdpbGwgYmUgZW5vdWdoIHRvIGJyaW5nIGhpbSBhbmQgaGlzIGhvcnNlIGRvd24uCjwvdHJhbnNsYXRpb24+"
translation['7.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIHRoZSBob3JzZSBmYWNlcyB0aGUgc3RyYWlnaHQgYWZ0ZXIgdHVybmluZywgcHVzaCBoaW0gYWxvbmcgYXQgb25jZS4gRm9yIG9mIGNvdXJzZSwgaW4gd2FyIHRvbywgdHVybnMgYXJlIG1hZGUgd2l0aCBhIHZpZXcgdG8gcHVyc3VpdCBvciByZXRyZWF0LiBJdCBpcyB3ZWxsLCB0aGVyZWZvcmUsIHRvIHByYWN0aXNlIGluY3JlYXNpbmcgdGhlIHBhY2UgYWZ0ZXIgdHVybmluZy4KPC90cmFuc2xhdGlvbj4="
translation['7.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5TbyBzb29uIGFzIHRoZSBob3JzZSBhcHBlYXJzIHRvIGhhdmUgYmVlbiBleGVyY2lzZWQgZW5vdWdoLCBpdCBpcyB3ZWxsIHRvIGxldCBoaW0gcmVzdCBhIGNlcnRhaW4gdGltZSwgYW5kIHRoZW4gc3VkZGVubHkgdG8gcHV0IGhpbSB0byBoaXMgdG9wIHNwZWVkIGFnYWluLCBvZiBjb3Vyc2UgYXdheSBmcm9tLCBub3QgdG93YXJkcywgb3RoZXIgaG9yc2VzLCBhbmQgdG8gcHVsbCBoaW0gdXAgYWdhaW4gaW4gdGhlIG1pZHN0IG9mIGhpcyBjYXJlZXIgYXMgc2hvcnQgYXMgcG9zc2libGUsIGFuZCB0aGVuIHRvIHR1cm4gYW5kIHN0YXJ0IGhpbSBhZ2FpbiBmcm9tIHRoZSBzdGFuZC4gRm9yIGl0IGlzIG9idmlvdXMgdGhhdCBhIHRpbWUgd2lsbCBjb21lIHdoZW4gaXQgd2lsbCBiZSBuZWNlc3NhcnkgdG8gZG8gb25lIG9yIHRoZSBvdGhlci4KPC90cmFuc2xhdGlvbj4="
translation['7.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgdGltZSBoYXMgY29tZSB0byBkaXNtb3VudCwgdGhlIHJpZGVyIG11c3QgbmV2ZXIgZGlzbW91bnQgYW1vbmcgb3RoZXIgaG9yc2VzIG9yIG5lYXIgYSBncm91cCBvZiBwZW9wbGUgb3Igb3V0c2lkZSB0aGUgcmlkaW5nLWdyb3VuZDsgYnV0IGxldCB0aGUgcGxhY2Ugd2hlcmUgdGhlIGhvcnNlIGlzIGZvcmNlZCB0byB3b3JrIGJlIHRoZSBwbGFjZSB3aGVyZSBoZSBhbHNvIHJlY2VpdmVzIGhpcyByZXdhcmQgb2YgZWFzZS4KPC90cmFuc2xhdGlvbj4="
translation['8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyB0aGUgaG9yc2Ugd2lsbCBmcmVxdWVudGx5IGhhdmUgdG8gZ2FsbG9wIGRvd24gaGlsbCBhbmQgdXAgaGlsbCBhbmQgYWxvbmcgYSBzbG9wZSwgYW5kIGFzIGhlIHdpbGwgaGF2ZSB0byBsZWFwIG92ZXIsIGFuZCB0byBsZWFwIG91dCwgYW5kIHRvIGp1bXAgZG93biBhdCB2YXJpb3VzIHRpbWVzLCB0aGUgcmlkZXIgbXVzdCB0ZWFjaCBhbmQgcHJhY3Rpc2UgYm90aCBoaW1zZWxmIGFuZCBoaXMgaG9yc2UgaW4gYWxsIHRoZXNlIHRoaW5ncy4gRm9yIHRodXMgdGhleSB3aWxsIGJlIGFibGUgdG8gaGVscCBlYWNoIG90aGVyLCBhbmQgd2lsbCBiZSB0aG91Z2h0IGFsdG9nZXRoZXIgbW9yZSBlZmZpY2llbnQuCjwvdHJhbnNsYXRpb24+"
translation['8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JZiBhbnlvbmUgdGhpbmtzIHRoYXQgd2UgYXJlIHJlcGVhdGluZyBvdXJzZWx2ZXMsIGJlY2F1c2Ugd2UgYXJlIHJlZmVycmluZyB0byBtYXR0ZXJzIGFscmVhZHkgZGVhbHQgd2l0aCwgdGhpcyBpcyBub3QgcmVwZXRpdGlvbi4gRm9yIHdlIHJlY29tbWVuZGVkIHRoZSBwdXJjaGFzZXIgdG8gdHJ5IHdoZXRoZXIgdGhlIGhvcnNlIGNvdWxkIGRvIHRoZXNlIHRoaW5ncyBhdCB0aGUgdGltZSBvZiBidXlpbmc6IGJ1dCBub3cgd2Ugc2F5IHRoYXQgYSBtYW4gc2hvdWxkIHRlYWNoIGhpcyBvd24gaG9yc2U7IGFuZCB3ZSB3aWxsIHNob3cgaG93IHRvIHRlYWNoIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIGEgbWFuIGhhcyBhIHJhdyBob3JzZSBxdWl0ZSBpZ25vcmFudCBvZiBsZWFwaW5nLCBoZSBtdXN0IGdldCBvdmVyIHRoZSBkaXRjaCBoaW1zZWxmIGZpcnN0LCBob2xkaW5nIGhpbSBsb29zZWx5IGJ5IHRoZSBsZWFkaW5nLXJlaW4sIGFuZCB0aGVuIGdpdmUgaGltIGEgcHVsbCB3aXRoIHRoZSByZWluIHRvIG1ha2UgaGltIGxlYXAgb3Zlci4KPC90cmFuc2xhdGlvbj4="
translation['8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPklmIGhlIHJlZnVzZXMsIGxldCBzb21lb25lIHN0cmlrZSBoaW0gYXMgaGFyZCBhcyBoZSBjYW4gd2l0aCBhIHdoaXAgb3IgYSBzdGljazogd2hlcmV1cG9uIGhlIHdpbGwgbGVhcCwgYW5kIG5vdCBvbmx5IHRoZSBuZWNlc3NhcnkgZGlzdGFuY2UsIGJ1dCBtdWNoIGZ1cnRoZXIgdGhhbiB3YXMgcmVxdWlyZWQuIEluIGZ1dHVyZSB0aGVyZSB3aWxsIGJlIG5vIG5lZWQgdG8gYmVhdCBoaW0sIGZvciBpZiBoZSBtZXJlbHkgc2VlcyBhIG1hbiBhcHByb2FjaGluZyBiZWhpbmQgaGltLCBoZSB3aWxsIGxlYXAuCjwvdHJhbnNsYXRpb24+"
translation['8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgaGUgaGFzIGdyb3duIGFjY3VzdG9tZWQgdG8gbGVhcCBpbiB0aGlzIHdheSwgbGV0IGhpbSBiZSBtb3VudGVkIGFuZCB0cmllZCBmaXJzdCBhdCBuYXJyb3csIGFuZCB0aGVuIGF0IHdpZGVyIGRpdGNoZXMuIEp1c3QgYXMgaGUgaXMgb24gdGhlIHBvaW50IG9mIHNwcmluZ2luZyB0b3VjaCBoaW0gd2l0aCB0aGUgc3B1ci4gU2ltaWxhcmx5IGhlIHNob3VsZCBiZSB0YXVnaHQgdG8gbGVhcCB1cCBhbmQgdG8gbGVhcCBkb3duIGJ5IGEgdG91Y2ggb2YgdGhlIHNwdXIuIEZvciBpZiBoZSBkb2VzIGFsbCB0aGVzZSB0aGluZ3Mgd2l0aCBoaXMgYm9keSBjb21wYWN0bHkgZ2F0aGVyZWQsIGl0IHdpbGwgYmUgc2FmZXIgZm9yIHRoZSBob3JzZSBhcyB3ZWxsIGFzIHRoZSByaWRlciB0aGFuIGlmIGhpcyBoaW5kLXF1YXJ0ZXJzIGxhZyBpbiB0YWtpbmcgYSBsZWFwIG92ZXIsIG9yIGluIHNwcmluZ2luZyB1cHdhcmRzIG9yIGp1bXBpbmcgZG93bndhcmRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Hb2luZyBkb3duIGhpbGwgc2hvdWxkIGZpcnN0IGJlIHRhdWdodCBvbiBzb2Z0IGdyb3VuZDsgYW5kIGluIHRoZSBlbmQsIHdoZW4gdGhlIGhvcnNlIGdldHMgdXNlZCB0byB0aGlzLCBoZSB3aWxsIGNhbnRlciBkb3duIG1vcmUgcmVhZGlseSB0aGFuIHVwIGhpbGwuIElmIHNvbWUgZmVhciB0aGF0IGhvcnNlcyBtYXkgcHV0IG91dCB0aGVpciBzaG91bGRlcnMgYnkgYmVpbmcgcmlkZGVuIGRvd24gaGlsbCwgdGhleSBtYXkgdGFrZSBjb21mb3J0IHdoZW4gdGhleSB1bmRlcnN0YW5kIHRoYXQgdGhlIFBlcnNpYW5zIGFuZCBPZHJ5c2lhbnMgYWxsIHJpZGUgcmFjZXMgZG93biBoaWxsLCBhbmQgeWV0IGtlZXAgdGhlaXIgaG9yc2VzIGp1c3QgYXMgc291bmQgYXMgdGhlIEdyZWVrcy4KPC90cmFuc2xhdGlvbj4="
translation['8.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3Igd2lsbCB3ZSBvbWl0IHRvIHN0YXRlIGhvdyB0aGUgcmlkZXIgaXMgdG8gYXNzaXN0IGluIGFsbCB0aGVzZSBtb3ZlbWVudHMuIElmIHRoZSBob3JzZSBzcHJpbmdzIHN1ZGRlbmx5LCBoZSBzaG91bGQgbGVhbiBmb3J3YXJkOyBmb3Igc28gdGhlIGhvcnNlIGlzIGxlc3MgbGlrZWx5IHRvIHNsaXAgYXdheSBhbmQgdGhyb3cgdGhlIHJpZGVyIG9mZi4gQnV0IGluIHB1bGxpbmcgaGltIHVwIHNob3J0IGhlIHNob3VsZCBsZWFuIGJhY2s7IGZvciBzbyBoZSBoaW1zZWxmIHdpbGwgYmUgbGVzcyBqb2x0ZWQuCjwvdHJhbnNsYXRpb24+"
translation['8.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPldoZW4ganVtcGluZyBhIGRpdGNoIG9yIHJpZGluZyB1cCBoaWxsIGl0IGlzIHdlbGw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+T2YgY291cnNlIG5vIG1vZGVybiByaWRlciB3b3VsZCBhcHByb3ZlIG9mIHRoaXMuPC9ub3RlPiB0byB0YWtlIGhvbGQgb2YgdGhlIG1hbmUsIHRoYXQgdGhlIGhvcnNlIG1heSBub3QgYmUgYnVyZGVuZWQgYnkgaGlzIGJyaWRsZSBhbmQgdGhlIGRpZmZpY3VsdHkgb2YgdGhlIGdyb3VuZCBhdCB0aGUgc2FtZSB0aW1lLiBXaGVuIGdvaW5nIGRvd24gYSBzdGVlcCBpbmNsaW5lLCBoZSBzaG91bGQgdGhyb3cgaGlzIGJvZHkgYmFjayBhbmQgc3VwcG9ydCB0aGUgaG9yc2Ugd2l0aCB0aGUgYnJpZGxlLCB0aGF0IG5laXRoZXIgcmlkZXIgbm9yIGhvcnNlIG1heSBiZSB0b3NzZWQgaGVhZGxvbmcgZG93biBoaWxsLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyBjb3JyZWN0IGFsc28gdG8gZXhlcmNpc2UgdGhlIGhvcnNlIHNvbWV0aW1lcyBpbiBvbmUgcGxhY2UsIHNvbWV0aW1lcyBpbiBhbm90aGVyLCBhbmQgdG8gbWFrZSB0aGUgZXhlcmNpc2VzIHNvbWV0aW1lcyBsb25nIGFuZCBzb21ldGltZXMgc2hvcnQ7IGZvciB0aGlzIGlzIGxlc3MgaXJrc29tZSB0byB0aGUgaG9yc2UgdGhhbiBiZWluZyBleGVyY2lzZWQgYWx3YXlzIGluIHRoZSBzYW1lIHBsYWNlIGFuZCBmb3IgdGhlIHNhbWUgbGVuZ3RoIG9mIHRpbWUuCjwvdHJhbnNsYXRpb24+"
translation['8.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U2luY2UgaXQgaXMgbmVjZXNzYXJ5IHRoYXQgdGhlIHJpZGVyIHNob3VsZCBoYXZlIGEgZmlybSBzZWF0IHdoZW4gcmlkaW5nIGF0IHRvcCBzcGVlZCBvdmVyIGFsbCBzb3J0cyBvZiBjb3VudHJ5LCBhbmQgc2hvdWxkIGJlIGFibGUgdG8gdXNlIGhpcyB3ZWFwb25zIHByb3Blcmx5IG9uIGhvcnNlYmFjaywgdGhlIHByYWN0aWNlIG9mIGhvcnNlbWFuc2hpcCBieSBodW50aW5nIGlzIHRvIGJlIHJlY29tbWVuZGVkIHdoZXJlIHRoZSBjb3VudHJ5IGlzIHN1aXRhYmxlIGFuZCBiaWcgZ2FtZSBpcyB0byBiZSBmb3VuZC4gV2hlcmUgdGhlc2UgY29uZGl0aW9ucyBhcmUgbGFja2luZywgaXQgaXMgYSBnb29kIG1ldGhvZCBvZiB0cmFpbmluZyBmb3IgdHdvIHJpZGVycyB0byB3b3JrIHRvZ2V0aGVyIHRodXM6IG9uZSBmbGllcyBvbiBoaXMgaG9yc2Ugb3ZlciBhbGwga2luZHMgb2YgZ3JvdW5kIGFuZCByZXRyZWF0cywgcmV2ZXJzaW5nIGhpcyBzcGVhciBzbyB0aGF0IGl0IHBvaW50cyBiYWNrd2FyZHMsIHdoaWxlIHRoZSBvdGhlciBwdXJzdWVzLCBoYXZpbmcgYnV0dG9ucyBvbiBoaXMgamF2ZWxpbnMgYW5kIGhvbGRpbmcgaGlzIHNwZWFyIGluIHRoZSBzYW1lIHBvc2l0aW9uLCBhbmQgd2hlbiBoZSBnZXRzIHdpdGhpbiBqYXZlbGluIHNob3QsIHRyaWVzIHRvIGhpdCB0aGUgZnVnaXRpdmUgd2l0aCB0aGUgYmx1bnRlZCB3ZWFwb25zLCBhbmQgaWYgaGUgZ2V0cyBuZWFyIGVub3VnaCB0byB1c2UgaGlzIHNwZWFyLCBzdHJpa2VzIGhpcyBjYXB0aXZlIHdpdGggaXQuCjwvdHJhbnNsYXRpb24+"
translation['8.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyBhbHNvIGEgZ29vZCBwbGFuLCBpbiBjYXNlIG9mIGEgY29sbGlzaW9uIGJldHdlZW4gdGhlbSwgZm9yIG9uZSB0byBwdWxsIGhpcyBhZHZlcnNhcnkgdG93YXJkcyBoaW0gYW5kIHN1ZGRlbmx5IHB1c2ggaGltIGJhY2sgYWdhaW4sIHNpbmNlIHRoYXQgaXMgdGhlIHdheSB0byBkaXNtb3VudCBoaW0uIFRoZSByaWdodCB0aGluZyBmb3IgdGhlIG1hbiB3aG8gaXMgYmVpbmcgcHVsbGVkIGlzIHRvIHVyZ2UgaGlzIGhvcnNlIGZvcndhcmQ7IGJ5IGRvaW5nIHRoaXMgdGhlIHB1bGxlZCBpcyBtb3JlIGxpa2VseSB0byB1bmhvcnNlIHRoZSBwdWxsZXIgdGhhbiB0byBiZSB1bmhvcnNlZCBoaW1zZWxmLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SWYgYXQgYW55IHRpbWUgd2hlbiBhbiBlbmVteSdzIGNhbXAgbGllcyBpbiBmcm9udCB0aGVyZSBpcyBhIGNhdmFscnkgc2tpcm1pc2gsIGFuZCBvbmUgc2lkZSBwcmVzc2VzIHRoZSBwdXJzdWl0IHJpZ2h0IHVwIHRvIHRoZSBlbmVteSdzIGxpbmUgb2YgYmF0dGxlLCBidXQgdGhlbiByZXRyZWF0cyBoYXN0aWx5IHRvIGl0cyBvd24gbWFpbiBib2R5LCBpdCBpcyB3ZWxsIHRvIGtub3cgaW4gdGhhdCBjYXNlIHRoYXQgc28gbG9uZyBhcyB5b3UgYXJlIGJ5IHlvdXIgZnJpZW5kcywgaXQgaXMgcHJvcGVyIGFuZCBzYWZlIHRvIGJlIGFtb25nIHRoZSBmaXJzdCB0byB3aGVlbCBhbmQgbWFrZSBmb3IgdGhlIGVuZW15IGF0IGZ1bGwgc3BlZWQ7IGJ1dCB3aGVuIHlvdSBjb21lIG5lYXIgdGhlIGVuZW15IHRvIGtlZXAgeW91ciBob3JzZSB3ZWxsIGluIGhhbmQuIEZvciBpbiB0aGlzIHdheSB5b3UgaGF2ZSB0aGUgYmVzdCBjaGFuY2Ugb2YgaW5qdXJpbmcgdGhlIGVuZW15IHdpdGhvdXQgY29taW5nIHRvIGhhcm0geW91cnNlbGYuCjwvdHJhbnNsYXRpb24+"
translation['8.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93LCB3aGVyZWFzIHRoZSBnb2RzIGhhdmUgZ2l2ZW4gdG8gbWVuIHRoZSBwb3dlciBvZiBpbnN0cnVjdGluZyBvbmUgYW5vdGhlciBpbiB0aGVpciBkdXR5IGJ5IHdvcmQgb2YgbW91dGgsIGl0IGlzIG9idmlvdXMgdGhhdCB5b3UgY2FuIHRlYWNoIGEgaG9yc2Ugbm90aGluZyBieSB3b3JkIG9mIG1vdXRoLiBJZiwgaG93ZXZlciwgeW91IHJld2FyZCBoaW0gd2hlbiBoZSBiZWhhdmVzIGFzIHlvdSB3aXNoLCBhbmQgcHVuaXNoIGhpbSB3aGVuIGhlIGlzIGRpc29iZWRpZW50LCBoZSB3aWxsIGJlc3QgbGVhcm4gdG8gZG8gaGlzIGR1dHkuCjwvdHJhbnNsYXRpb24+"
translation['8.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIHJ1bGUgY2FuIGJlIHN0YXRlZCBpbiBmZXcgd29yZHMsIGJ1dCBpcyBhcHBsaWVzIHRvIHRoZSB3aG9sZSBhcnQgb2YgaG9yc2VtYW5zaGlwLiBIZSB3aWxsIHJlY2VpdmUgdGhlIGJpdCwgZm9yIGV4YW1wbGUsIG1vcmUgd2lsbGluZ2x5IGlmIHNvbWV0aGluZyBnb29kIGhhcHBlbnMgdG8gaGltIGFzIHNvb24gYXMgaGUgdGFrZXMgaXQuIEhlIHdpbGwgYWxzbyBsZWFwIG92ZXIgYW5kIGp1bXAgb3V0IG9mIGFueXRoaW5nLCBhbmQgcGVyZm9ybSBhbGwgaGlzIGFjdGlvbnMgZHVseSBpZiBoZSBjYW4gZXhwZWN0IGEgcmVzdCBhcyBzb29uIGFzIGhlIGhhcyBkb25lIHdoYXQgaXMgcmVxdWlyZWQgb2YgaGltLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TbyBmYXIgd2UgaGF2ZSBkZXNjcmliZWQgaG93IHRvIGF2b2lkIGJlaW5nIGNoZWF0ZWQgaW4gYnV5aW5nIGEgY29sdCBvciBhIGhvcnNlLCBob3cgdG8gYXZvaWQgc3BvaWxpbmcgaGltIGluIHVzYWdlIGFuZCBob3cgdG8gaW1wYXJ0IHRvIGEgaG9yc2UgYWxsIHRoZSBxdWFsaXRpZXMgcmVxdWlyZWQgYnkgYSBjYXZhbHJ5bWFuIGZvciB3YXIuIEl0IGlzIHRpbWUgcGVyaGFwcyB0byBnaXZlIGRpcmVjdGlvbnMsIGluIGNhc2Ugb25lIGhhcyB0byBkZWFsIHdpdGggYSBob3JzZSB0aGF0IGlzIHRvbyBzcGlyaXRlZCBvciB0b28gc2x1Z2dpc2gsIGZvciB0aGUgY29ycmVjdCB3YXkgb2YgbWFuYWdpbmcgZWl0aGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GaXJzdCwgdGhlbiwgaXQgbXVzdCBiZSByZWFsaXNlZCB0aGF0IHNwaXJpdCBpbiBhIGhvcnNlIGlzIHByZWNpc2VseSB3aGF0IGFuZ2VyIGlzIGluIGEgbWFuLiBUaGVyZWZvcmUsIGp1c3QgYXMgeW91IGFyZSBsZWFzdCBsaWtlbHkgdG8gbWFrZSBhIG1hbiBhbmdyeSBpZiB5b3UgbmVpdGhlciBzYXkgbm9yIGRvIGFueXRoaW5nIGRpc2FncmVhYmxlIHRvIGhpbSwgc28gaGUgd2hvIGFic3RhaW5zIGZyb20gYW5ub3lpbmcgYSBzcGlyaXRlZCBob3JzZSBpcyBsZWFzdCBsaWtlbHkgdG8gcm91c2UgaGlzIGFuZ2VyLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFjY29yZGluZ2x5LCBhdCB0aGUgbW9tZW50IG9mIG1vdW50aW5nLCB0aGUgcmlkZXIgc2hvdWxkIHRha2UgY2FyZSB0byB3b3JyeSBoaW0gYXMgbGl0dGxlIGFzIHBvc3NpYmxlOyBhbmQgd2hlbiBoZSBpcyBtb3VudGVkLCBoZSBzaG91bGQgbGV0IGhpbSBzdGFuZCBzdGlsbCBsb25nZXIgdGhhbiBpcyBvdGhlcndpc2UgdXN1YWwsIGFuZCB0aGVuIGRpcmVjdCBoaW0gdG8gZ28gYnkgdGhlIG1vc3QgZ2VudGxlIGFpZHMuIFRoZW4gbGV0IGhpbSBiZWdpbiBhdCBhIHZlcnkgc2xvdyBwYWNlIGFuZCBpbmNyZWFzZSB0aGUgc3BlZWQgd2l0aCB0aGUgc2FtZSBnZW50bGUgaGVscCwgc28gdGhhdCB0aGUgaG9yc2Ugd2lsbCBub3QgYmUgYXdhcmUgb2YgdGhlIHRyYW5zaXRpb24gdG8gYSBxdWlja2VyIG1vdGlvbi4KPC90cmFuc2xhdGlvbj4="
translation['9.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFueSBzdWRkZW4gc2lnbiBkaXN0dXJicyBhIHNwaXJpdGVkIGhvcnNlLCBqdXN0IGFzIHN1ZGRlbiBzaWdodHMgYW5kIHNvdW5kcyBhbmQgc2Vuc2F0aW9ucyBkaXN0dXJiIGEgbWFuLiBJdCBpcyBpbXBvcnRhbnQgdG8gcmVhbGlzZSB0aGF0IGEgaG9yc2UgdG9vIGlzIGZsdXJyaWVkIGJ5IGFueXRoaW5nIHN1ZGRlbi4KPC90cmFuc2xhdGlvbj4="
translation['9.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPklmIHlvdSB3YW50IHRvIGNvcnJlY3QgYSBzcGlyaXRlZCBob3JzZSB3aGVuIGhlIGlzIGdvaW5nIHRvbyBmYXN0LCBkbyBub3QgcHVsbCBoaW0gc3VkZGVubHksIGJ1dCBxdWlldGx5IGNoZWNrIGhpbSB3aXRoIHRoZSBiaXQsIHNvb3RoaW5nIGhpbSwgbm90IGZvcmNpbmcgaGltLCB0byBhIHF1aWV0IHBhY2UuCjwvdHJhbnNsYXRpb24+"
translation['9.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkxvbmcgcmlkZXMgcmF0aGVyIHRoYW4gZnJlcXVlbnQgdHVybmluZ3MsIGNhbG0gaG9yc2VzOyBhbmQgcXVpZXQgb25lcyBsYXN0aW5nIGxvbmcgc29vdGhlIGFuZCBjYWxtIGEgc3Bpcml0ZWQgaG9yc2UgYW5kIGRvIG5vdCBleGNpdGUgaGltLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpZiBhbnlvbmUgc3VwcG9zZXMgdGhhdCBoZSB3aWxsIGNhbG0gYSBob3JzZSBieSBmcmVxdWVudCByaWRpbmcgYXQgYSBxdWljayBwYWNlIHNvIGFzIHRvIHRpcmUgaGltLCBoaXMgb3BpbmlvbiBpcyB0aGUgb3Bwb3NpdGUgb2YgdGhlIHRydXRoLiBGb3IgaW4gc3VjaCBjYXNlcyBhIHNwaXJpdGVkIGhvcnNlIGRvZXMgaGlzIHV0bW9zdCB0byBnZXQgdGhlIHVwcGVyIGhhbmQgYnkgZm9yY2UsIGFuZCBpbiBoaXMgZXhjaXRlbWVudCwgbGlrZSBhbiBhbmdyeSBtYW4sIGhlIG9mdGVuIGNhdXNlcyBtYW55IGlycmVwYXJhYmxlIGluanVyaWVzIGJvdGggdG8gaGltc2VsZiBhbmQgdG8gaGlzIHJpZGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk9uZSBtdXN0IHByZXZlbnQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+T3IsIHJlYWRpbmcgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4ThvbnPhM61IM+Ezr/hv6Y8L2ZvcmVpZ24+IGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM6/4b+mPC9mb3JlaWduPiB3aXRoIFBvbGxhY2sg4oCcb25lIG11c3QgdHJ5IHRvIHN0b3AgYSBzcGlyaXRlZCBob3JzZSBldmVuIHRoZW4gZnJvbSBnb2luZyBhdCBoaXMgZnVsbCBzcGVlZC7igJ0gQSBoYXMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4ThvbnPhM61PC9mb3JlaWduPiBmb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4TOv+G/pjwvZm9yZWlnbj4uPC9ub3RlPiBhIGhpZ2gtc3Bpcml0ZWQgaG9yc2UgZnJvbSBnb2luZyBhdCBoaXMgdG9wIHNwZWVkLCBhbmQgb2YgY291cnNlLCBlbnRpcmVseSBhdm9pZCBsZXR0aW5nIGhpbSByYWNlIHdpdGggYW5vdGhlciBob3JzZTsgZm9yIGFzIGEgcnVsZSB0aGUgbW9zdCBoaWdobHkgc3Bpcml0ZWQgaG9yc2VzIGFyZSBhbHNvIG1vc3QgZWFnZXIgZm9yIHZpY3RvcnkuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+E4b25z4TOtSDPhM6/4b+mPC9mb3JlaWduPiBmb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4TOv+G/pjwvZm9yZWlnbj4gd2l0aCBQb2xsYWNrIOKAnG9uZSBtdXN0IHRyeSB0byBzdG9wIGEgc3Bpcml0ZWQgaG9yc2UgZXZlbiB0aGVuIGZyb20gZ29pbmcgYXQgaGlzIGZ1bGwgc3BlZWQu4oCdIEEgaGFzIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+E4b25z4TOtTwvZm9yZWlnbj4gZm9yIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Ezr/hv6Y8L2ZvcmVpZ24+LjwvdHJhbnNsYXRpb24+"
translation['9.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBmb3IgYml0cywgdGhlIHNtb290aCBhcmUgbW9yZSBzdWl0YWJsZSB0aGFuIHRoZSByb3VnaDsgYnV0IGlmIGEgcm91Z2ggb25lIGlzIHVzZWQsIGl0IHNob3VsZCBiZSBtYWRlIHRvIHJlc2VtYmxlIGEgc21vb3RoIG9uZSBieSBsaWdodG5lc3Mgb2YgaGFuZC4gSXQgaXMgYWxzbyB3ZWxsIHRvIGFjY3VzdG9tIG9uZXNlbGYgdG8gc2l0IHN0aWxsLCBlc3BlY2lhbGx5IG9uIGEgc3Bpcml0ZWQgaG9yc2UsIGFuZCB0byB0b3VjaCBoaW0gYXMgbGl0dGxlIGFzIHBvc3NpYmxlIHdpdGggYW55dGhpbmcgb3RoZXIgdGhhbiB0aGUgcGFydHMgdGhhdCBnaXZlIHVzIGEgc2FmZSBzZWF0IGJ5IGNvbnRhY3QuCjwvdHJhbnNsYXRpb24+"
translation['9.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgc2hvdWxkIGFsc28gYmUga25vd24gdGhhdCBhIGhvcnNlIGNhbiBiZSB0YXVnaHQgdG8gYmUgY2FsbSBieSBhIGNoaXJwIHdpdGggdGhlIGxpcHMgYW5kIHRvIGJlIHJvdXNlZCBieSBhIGNsdWNrIHdpdGggdGhlIHRvbmd1ZS4gQW5kIGlmIGZyb20gdGhlIGZpcnN0IHlvdSB1c2Ugd2l0aCB0aGUgY2x1Y2sgYWlkcyB0byBjYWxtIGhpbSwgYW5kIHdpdGggdGhlIGNoaXJwIGFpZHMgdG8gcm91c2UgaGltLCB0aGUgaG9yc2Ugd2lsbCBsZWFybiB0byByb3VzZSBoaW1zZWxmIGF0IHRoZSBjaGlycCBhbmQgdG8gY2FsbSBkb3duIGF0IHRoZSBjbHVjay4KPC90cmFuc2xhdGlvbj4="
translation['9.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSwgaWYgYSBzaG91dCBpcyBoZWFyZCBvciBhIHRydW1wZXQgc291bmRzLCB5b3UgbXVzdCBub3QgYWxsb3cgdGhlIGhvcnNlIHRvIG5vdGljZSBhbnkgc2lnbiBvZiBhbGFybSBpbiB5b3UsIGFuZCBtdXN0IG9uIG5vIGFjY291bnQgZG8gYW55dGhpbmcgdG8gaGltIHRvIGNhdXNlIGhpbSBhbGFybSwgYnV0IGFzIGZhciBhcyBwb3NzaWJsZSBsZXQgaGltIHJlc3QgaW4gc3VjaCBjaXJjdW1zdGFuY2VzLCBhbmQsIGlmIHlvdSBoYXZlIHRoZSBvcHBvcnR1bml0eSwgYnJpbmcgaGltIGhpcyBtb3JuaW5nIG9yIGV2ZW5pbmcgbWVhbC4KPC90cmFuc2xhdGlvbj4="
translation['9.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIGJlc3QgYWR2aWNlIGlzIG5vdCB0byBnZXQgYW4gb3Zlci1zcGlyaXRlZCBob3JzZSBmb3Igd2FyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBmb3IgYSBzbHVnZ2lzaCBiZWFzdCwgSSBtYXkgYmUgY29udGVudCB3aXRoIHRoZSByZW1hcmsgdGhhdCBpbiBldmVyeXRoaW5nIHlvdSBtdXN0IGRvIHRoZSBvcHBvc2l0ZSBvZiB3aGF0IHdlIGFkdmlzZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBhIGhpZ2gtc3Bpcml0ZWQgb25lLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SWYgYSBtYW4gd2FudHMgdG8gbWFrZSBhIHVzZWZ1bCB3YXItaG9yc2UgbG9vayBtb3JlIHN0YXRlbHkgYW5kIHNob3d5IHdoZW4gcmlkZGVuLCBoZSBtdXN0IGF2b2lkIHB1bGxpbmcgaGlzIG1vdXRoIHdpdGggdGhlIGJpdCwgYW5kIHVzaW5nIHRoZSBzcHVyIGFuZCB3aGlwLCBtZWFucyBieSB3aGljaCBtb3N0IHBlb3BsZSBpbWFnaW5lIHRoYXQgdGhleSBzaG93IG9mZiBhIGhvcnNlLiBJbiBwb2ludCBvZiBmYWN0IHRoZSByZXN1bHRzIHRoZXkgcHJvZHVjZSBhcmUgdGhlIHZlcnkgb3Bwb3NpdGUgb2Ygd2hhdCB0aGV5IGludGVuZC4KPC90cmFuc2xhdGlvbj4="
translation['10.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZvciBieSBkcmFnZ2luZyB0aGUgbW91dGggdXAgdGhleSBibGluZCB0aGVpciBob3JzZXMgaW5zdGVhZCBvZiBsZXR0aW5nIHRoZW0gc2VlIGFoZWFkLCBhbmQgYnkgc3B1cnJpbmcgYW5kIHdoaXBwaW5nLCBmbHVycnkgdGhlbSBzbyB0aGF0IHRoZXkgYXJlIHN0YXJ0bGVkIGFuZCBnZXQgaW50byBkYW5nZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk9yLCByZWFkaW5nIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs60zrnOvc614b27zrXOuc69PC9mb3JlaWduPiwgd2hpY2ggb2NjdXJyZWQgdG8gUG9sbGFjayBhbmQgdGhlIHRyYW5zbGF0b3IgaW5kZXBlbmRlbnRseSwg4oCcdHdpc3QgYWJvdXQs4oCdIOKAnGluZHVsZ2UgaW4gcmVhY3Rpb25zLuKAnSBUaGlzIGlzIG11Y2ggbW9yZSBwcm9iYWJsZS48L25vdGU+IFRoYXQgaXMgdGhlIGJlaGF2aW91ciBvZiBob3JzZXMgdGhhdCBzdHJvbmdseSBvYmplY3QgdG8gYmVpbmcgcmlkZGVuIGFuZCB0aGF0IGJlaGF2ZSBpbiBhbiB1Z2x5IGFuZCB1bnNlZW1seSBmYXNoaW9uLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtM65zr3OteG9u861zrnOvTwvZm9yZWlnbj4sIHdoaWNoIG9jY3VycmVkIHRvIFBvbGxhY2sgYW5kIHRoZSB0cmFuc2xhdG9yIGluZGVwZW5kZW50bHksIOKAnHR3aXN0IGFib3V0LOKAnSDigJxpbmR1bGdlIGluIHJlYWN0aW9ucy7igJ0gVGhpcyBpcyBtdWNoIG1vcmUgcHJvYmFibGUuPC90cmFuc2xhdGlvbj4="
translation['10.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpZiB5b3UgdGVhY2ggdGhlIGhvcnNlIHRvIGdvIHdpdGggYSBzbGFjayBicmlkbGUsIHRvIGhvbGQgaGlzIG5lY2sgdXAgYW5kIHRvIGFyY2ggaXQgdG93YXJkcyB0aGUgaGVhZCwgeW91IHdpbGwgY2F1c2UgdGhlIGhvcnNlIHRvIGRvIHRoZSB2ZXJ5IHRoaW5ncyBpbiB3aGljaCBoZSBoaW1zZWxmIGRlbGlnaHRzIGFuZCB0YWtlcyB0aGUgZ3JlYXRlc3QgcGxlYXN1cmUuCjwvdHJhbnNsYXRpb24+"
translation['10.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkEgcHJvb2YgdGhhdCBoZSBkZWxpZ2h0cyBpbiB0aGVtIGlzIHRoYXQgd2hlbmV2ZXIgaGUgaGltc2VsZiBjaG9vc2VzIHRvIHNob3cgb2ZmIGJlZm9yZSBob3JzZXMsIGFuZCBlc3BlY2lhbGx5IGJlZm9yZSBtYXJlcywgaGUgcmFpc2VzIGhpcyBuZWNrIGhpZ2hlc3QgYW5kIGFyY2hlcyBoaXMgaGVhZCBtb3N0LCBsb29raW5nIGZpZXJjZTsgaGUgbGlmdHMgaGlzIGxlZ3MgZnJlZWx5IG9mZiB0aGUgZ3JvdW5kIGFuZCB0b3NzZXMgaGlzIHRhaWwgdXAuCjwvdHJhbnNsYXRpb24+"
translation['10.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPldoZW5ldmVyLCB0aGVyZWZvcmUsIHlvdSBpbmR1Y2UgaGltIHRvIGNhcnJ5IGhpbXNlbGYgaW4gdGhlIGF0dGl0dWRlcyBoZSBuYXR1cmFsbHkgYXNzdW1lcyB3aGVuIGhlIGlzIG1vc3QgYW54aW91cyB0byBkaXNwbGF5IGhpcyBiZWF1dHksIHlvdSBtYWtlIGhpbSBsb29rIGFzIHRob3VnaCBoZSB0b29rIHBsZWFzdXJlIGluIGJlaW5nIHJpZGRlbiwgYW5kIGdpdmUgaGltIGEgbm9ibGUsIGZpZXJjZSwgYW5kIGF0dHJhY3RpdmUgYXBwZWFyYW5jZS4gSG93IHdlIHRoaW5rIHRoYXQgdGhlc2UgZWZmZWN0cyBtYXkgYmUgcHJvZHVjZWQgd2Ugd2lsbCBub3cgdHJ5IHRvIGV4cGxhaW4uCjwvdHJhbnNsYXRpb24+"
translation['10.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UbyBiZWdpbiB3aXRoLCB5b3Ugc2hvdWxkIHBvc3Nlc3MgdHdvIGJpdHMgYXQgbGVhc3QuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSBJbnRyb2R1Y3Rpb24uPC9ub3RlPiBPbmUgb2YgdGhlc2Ugc2hvdWxkIGJlIHNtb290aCBhbmQgaGF2ZSB0aGUgZGlzY3Mgb2YgYSBnb29kIHNpemU7IHRoZSBvdGhlciBzaG91bGQgaGF2ZSB0aGUgZGlzY3MgaGVhdnkgYW5kIGxvdywgYW5kIHRoZSB0ZWV0aCBzaGFycCwgc28gdGhhdCB3aGVuIHRoZSBob3JzZSBzZWl6ZXMgaXQgaGUgbWF5IGRyb3AgaXQgYmVjYXVzZSBoZSBvYmplY3RzIHRvIGl0cyByb3VnaG5lc3MsIGFuZCB3aGVuIGhlIGlzIGJpdHRlZCB3aXRoIHRoZSBzbW9vdGggb25lIGluc3RlYWQsIG1heSB3ZWxjb21lIGl0cyBzbW9vdGhuZXNzIGFuZCBtYXkgZG8gb24gdGhlIHNtb290aCBiaXQgd2hhdCBoZSBoYXMgYmVlbiB0cmFpbmVkIHRvIGRvIHdpdGggdGhlIGFpZCBvZiB0aGUgcm91Z2ggb25lLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkluIGNhc2UsIGhvd2V2ZXIsIGhlIHRha2VzIG5vIGFjY291bnQgb2YgaXQgYmVjYXVzZSBvZiBpdHMgc21vb3RobmVzcywgYW5kIGtlZXBzIGJlYXJpbmcgYWdhaW5zdCBpdCwgd2UgcHV0IGxhcmdlIGRpc2NzIG9uIHRoZSBzbW9vdGggYml0IHRvIHN0b3AgdGhpcywgc28gdGhhdCB0aGV5IG1heSBmb3JjZSBoaW0gdG8gb3BlbiBoaXMgbW91dGggYW5kIGRyb3AgdGhlIGJpdC4gSXQgaXMgcG9zc2libGUgYWxzbyB0byBtYWtlIHRoZSByb3VnaCBiaXQgYWRhcHRhYmxlIGJ5IHdyYXBwaW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNvIGFzIHRvIG1pdGlnYXRlIHRoZSByb3VnaG5lc3Mgb2YgdGhlIHRlZXRoLiBUaGlzIHdhcyBzb21ldGltZXMgZG9uZSBieSBjb3ZlcmluZyB0aGUgdGVldGggd2l0aCB3YXggKFBvbGx1eC4gMS4yMDcpLjwvbm90ZT4gaXQgdXAgYW5kIHRpZ2h0ZW5pbmcgdGhlIHJlaW5zLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgYy4gaXgsIMKnIDkuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['10.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGF0ZXZlciBiZSB0aGUgcGF0dGVybiBvZiB0aGUgYml0cywgdGhleSBtdXN0IGFsbCBiZSBmbGV4aWJsZS4gRm9yIHdoZXJldmVyIGEgaG9yc2Ugc2VpemVzIGEgc3RpZmYgb25lLCBoZSBob2xkcyB0aGUgd2hvbGUgb2YgaXQgYWdhaW5zdCBoaXMgamF3cywganVzdCBhcyB5b3UgbGlmdCB0aGUgd2hvbGUgb2YgYSBzcGl0IHdoZXJldmVyIHlvdSB0YWtlIGhvbGQgb2YgaXQuCjwvdHJhbnNsYXRpb24+"
translation['10.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGUgb3RoZXIga2luZCBvZiBiaXQgYWN0cyBsaWtlIGEgY2hhaW46IGZvciBvbmx5IHRoZSBwYXJ0IHRoYXQgeW91IGhvbGQgcmVtYWlucyB1bmJlbnQsIHdoaWxlIHRoZSByZXN0IG9mIGl0IGhhbmdzIGxvb3NlLiBBcyB0aGUgaG9yc2UgY29udGludWFsbHkgdHJpZXMgdG8gc2VpemUgdGhlIHBhcnQgdGhhdCBlbHVkZXMgaGltIGluIGhpcyBtb3V0aCwgaGUgbGV0cyB0aGUgYml0IGRyb3AgZnJvbSBoaXMgamF3cy4gVGhpcyBpcyB3aHkgbGl0dGxlIHJpbmdzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlR3byBzZXRzLCBvbmUgaGFuZ2luZyB0byBlYWNoIG9mIHRoZSB0d28gbGlua3MgdGhhdCBmb3JtIHRoZSBjZW50cmUgam9pbnQgb2YgdGhlIHR3byBheGxlcyBvZiB3aGljaCB0aGUg4oCcZmxleGlibGXigJ0gYml0IGNvbnNpc3RlZC4gVGhleSBhcmUgZm91bmQgaW4gYm90aCB0aGUgQmVybGluIGJpdHMuPC9ub3RlPiBhcmUgaHVuZyBpbiB0aGUgbWlkZGxlIG9uIHRoZSBheGxlcywgaW4gb3JkZXIgdGhhdCB0aGUgaG9yc2UgbWF5IGZlZWwgYWZ0ZXIgdGhlbSB3aXRoIGhpcyB0b25ndWUgYW5kIHRlZXRoIGFuZCBub3QgdGhpbmsgb2YgdGFraW5nIHRoZSBiaXQgdXAgYWdhaW5zdCB0aGUgamF3cy4KPC90cmFuc2xhdGlvbj4="
translation['10.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gY2FzZSB0aGUgbWVhbmluZyBvZiB0aGUgdGVybXMgZmxleGlibGUgYW5kIHN0aWZmIGFzIGFwcGxpZWQgdG8gYSBiaXQgaXMgbm90IGtub3duLCB3ZSB3aWxsIGV4cGxhaW4gdGhpcyB0b28uIOKAnEZsZXhpYmxl4oCdIG1lYW5zIHRoYXQgdGhlIGF4bGVzIGhhdmUgYnJvYWQgYW5kIHNtb290aCBsaW5rcyBzbyB0aGF0IHRoZXkgYmVuZCBlYXNpbHk7IGFuZCBpZiBldmVyeXRoaW5nIHRoYXQgZ29lcyByb3VuZCB0aGUgYXhsZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+TWVhbmluZyAoMSkgdGhlIHRvb3RoZWQgY3lsaW5kZXJzLCAoMikgdGhlIHBlbmRhbnRzIHRvIHdoaWNoIHRoZSByZWlucyB3ZXJlIGF0dGFjaGVkLCAoMykgdGhlIGN1cnZlZCBvciBTLXNoYXBlZCBicmFuY2hlcyB3aXRoIGV5ZXMgdG8gd2hpY2ggdGhlIGJyaWRsZSB3YXMgZmFzdGVuZWQuIEl0IGlzIGN1cmlvdXMgdGhhdCB3ZSBkbyBub3Qga25vdyB0aGUgR3JlZWsgdGVybXMgZm9yICgyKSBhbmQgKDMpLiDigJxMZXQgYWxsIHRoZSBwYXJ0cyBiZSBsb29zZeKAnSBpcyB3aGF0IFguIG1lYW5zLjwvbm90ZT4gaGFzIGxhcmdlIG9wZW5pbmdzLCBhbmQgZG9lcyBub3QgZml0IHRpZ2h0LCBpdCBpcyBtb3JlIGZsZXhpYmxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz7igJxTdGlmZizigJ0gb24gdGhlIG90aGVyIGhhbmQsIG1lYW5zIHRoYXQgdGhlIHBpZWNlcyBvZiB0aGUgYml0IGRvIG5vdCBydW4gb3ZlciB0aGUgYXhsZXMgYW5kIHdvcmsgaW4gY29tYmluYXRpb24gZWFzaWx5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGF0ZXZlciB0aGUgcGF0dGVybiBtYXkgYmUsIHRoZSBzYW1lIG1ldGhvZCBvZiB1c2luZyBpdCBtdXN0IGJlIGNhcnJpZWQgb3V0IGluIGFsbCB0aGUgcG9pbnRzIHRoYXQgZm9sbG93LCBhc3N1bWluZyB0aGF0IHlvdSB3YW50IHlvdXIgaG9yc2UgdG8gaGF2ZSBqdXN0IHRoZSBhcHBlYXJhbmNlIEkgaGF2ZSBkZXNjcmliZWQuCjwvdHJhbnNsYXRpb24+"
translation['10.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbW91dGggbXVzdCBuZWl0aGVyIGJlIHB1bGxlZCBzbyBoYXJkIHRoYXQgaGUgaG9sZHMgaGlzIG5vc2UgaW4gdGhlIGFpciwgbm9yIHNvIGdlbnRseSB0aGF0IGhlIHRha2VzIG5vIG5vdGljZS4gQXMgc29vbiBhcyBoZSByYWlzZXMgaGlzIG5lY2sgd2hlbiB5b3UgcHVsbCwgZ2l2ZSBoaW0gdGhlIGJpdCBhdCBvbmNlLiBJbnZhcmlhYmx5LCBpbiBmYWN0LCBhcyB3ZSBjYW5ub3QgdG9vIG9mdGVuIHJlcGVhdCwgeW91IG11c3QgaHVtb3VyIHlvdSBob3JzZSB3aGVuZXZlciBoZSByZXNwb25kcyB0byB5b3VyIHdpc2hlcy4KPC90cmFuc2xhdGlvbj4="
translation['10.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB5b3Ugbm90aWNlIHRoYXQgaGlnaCBjYXJyaWFnZSBvZiBoaXMgbmVjayBhbmQgbGlnaHRuZXNzIG9mIGhhbmQgZ2l2ZSBoaW0gcGxlYXN1cmUsIHlvdSBzaG91bGQgbm90IGRlYWwgaGFyZGx5IHdpdGggaGltIGFzIHRob3VnaCB5b3Ugd2VyZSBmb3JjaW5nIGhpbSB0byB3b3JrLCBidXQgY29heCBoaW0gYXMgd2hlbiB5b3Ugd2FudCB0byBzdG9wPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgaGFzIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8sc+Az4DhvbHPg86xz4PPhs6xzrk8L2ZvcmVpZ24+IOKAnHRvIHJpZGUs4oCdIGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM6x4b27z4POsc+Dz4bOsc65PC9mb3JlaWduPi48L25vdGU+OyBmb3IgdGh1cyBoZSB3aWxsIGJyZWFrIGludG8gYSBmYXN0IHBhY2Ugd2l0aCBtb3N0IGNvbmZpZGVuY2UuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8sc+Az4DhvbHPg86xz4PPhs6xzrk8L2ZvcmVpZ24+IOKAnHRvIHJpZGUs4oCdIGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM6x4b27z4POsc+Dz4bOsc65PC9mb3JlaWduPi48L3RyYW5zbGF0aW9uPg=="
translation['10.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBpcyBwbGFpbiBwcm9vZiB0aGF0IGEgaG9yc2UgdGFrZXMgcGxlYXN1cmUgaW4gZ29pbmcgZmFzdDogZm9yIHdoZW4gaGUgYnJlYWtzIGxvb3NlIGEgaG9yc2UgbmV2ZXIgZ29lcyBhdCBhIHdhbGtpbmcgcGFjZSwgYnV0IGFsd2F5cyBydW5zLiBIZSBpbnN0aW5jdGl2ZWx5IHRha2VzIHBsZWFzdXJlIGluIHRoaXMsIHByb3ZpZGVkIGhlIGlzIG5vdCBjb21wZWxsZWQgdG8gcnVuIHRvbyBmYXIgZm9yIGhpcyBzdHJlbmd0aC4gTm90aGluZyBpbiBleGNlc3MgaXMgZXZlciBwbGVhc2luZyBlaXRoZXIgdG8gaG9yc2Ugb3IgbWFuLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB5b3VyIGhvcnNlIGhhcyBwcm9ncmVzc2VkIHNvIGZhciBhcyB0byBiZWFyIGhpbXNlbGYgcHJvdWRseSB3aGVuIHJpZGRlbiwgaGUgaGFzLCBvZiBjb3Vyc2UsIGFscmVhZHkgYmVlbiBhY2N1c3RvbWVkIGluIHRoZSBlYXJseSBleGVyY2lzZXMgdG8gYnJlYWsgaW50byBhIHF1aWNrZXIgcGFjZSBhZnRlciB0dXJuaW5nLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj43LjE3Ljwvbm90ZT4gTm93IGlmIGFmdGVyIGhlIGhhcyBsZWFybnQgdGhpcyB5b3UgcHVsbCBoaW0gdXAgd2l0aCB0aGUgYml0IGFuZCBhdCB0aGUgc2FtZSB0aW1lIGdpdmUgaGltIG9uZSBvZiB0aGUgc2lnbnMgdG8gZ28gZm9yd2FyZCwgdGhlbiBiZWluZyBoZWxkIGJhY2sgYnkgdGhlIGJpdCBhbmQgeWV0IHJvdXNlZCBieSB0aGUgc2lnbmFsIHRvIGdvIGZvcndhcmQsIGhlIHRocm93cyBoaXMgY2hlc3Qgb3V0IGFuZCBsaWZ0cyBoaXMgbGVncyBmcm9tIHRoZSBncm91bmQgaW1wYXRpZW50bHksIGJ1dCBub3Qgd2l0aCBhIHN1cHBsZSBtb3Rpb247IGZvciB3aGVuIGhvcnNlcyBmZWVsIHVuY29tZm9ydGFibGUsIHRoZSBhY3Rpb24gb2YgdGhlaXIgbGVncyBpcyBub3QgYXQgYWxsIHN1cHBsZS4KPC90cmFuc2xhdGlvbj4="
translation['10.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaWYsIHdoZW4gaGUgaXMgdGh1cyBleGNpdGVkLCB5b3UgZ2l2ZSBoaW0gdGhlIGJpdCwgdGhlbiwgbWlzdGFraW5nIHRoZSBsb29zZW5lc3Mgb2YgdGhlIGJpdCBmb3IgYSBkZWxpdmVyYW5jZSBmcm9tIHJlc3RyYWludCwgaGUgYm91bmRzIGZvcndhcmQgZm9yIHZlcnkgam95IHdpdGggYSBwcm91ZCBiZWFyaW5nIGFuZCBzdXBwbGUgbGVncywgZXh1bHRhbnQsIGltaXRhdGluZyBleGFjdGx5IGluIGV2ZXJ5IHdheSB0aGUgZ3JhY2VzIHRoYXQgaGUgZGlzcGxheXMgYmVmb3JlIGhvcnNlcy4KPC90cmFuc2xhdGlvbj4="
translation['10.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhvc2Ugd2hvIHdhdGNoIHRoZSBob3JzZSB3aGVuIGhlIGlzIGxpa2UgdGhhdCBjYWxsIGhpbSB3ZWxsLWJyZWQsIGEgd2lsbGluZyB3b3JrZXIsIHdvcnRoIHJpZGluZywgbWV0dGxlc29tZSwgbWFnbmlmaWNlbnQsIGFuZCBkZWNsYXJlIGhpcyBhcHBlYXJhbmNlIHRvIGJlIGF0IG9uY2UgcGxlYXNpbmcgYW5kIGZpZXJ5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgaGVyZSB3ZSBjb25jbHVkZSB0aGVzZSBleHBsYW5hdGlvbnMgYWRkcmVzc2VkIHRvIHRob3NlIHdobyB3YW50IHRoaXMgc29ydCBvZiB0aGluZy4KPC90cmFuc2xhdGlvbj4="
translation['11.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGluIGNhc2UgYW55b25lIHdhbnRzIHRvIG93biBhIGhvcnNlIHN1aXRhYmxlIGZvciBwYXJhZGUsIHdpdGggYSBoaWdoIGFuZCBzaG93eSBhY3Rpb24sIHN1Y2ggcXVhbGl0aWVzIGFyZSBieSBubyBtZWFucyB0byBiZSBmb3VuZCBpbiBldmVyeSBob3JzZTogYnV0IGl0IGlzIGVzc2VudGlhbCB0aGF0IGhlIHNob3VsZCBoYXZlIHBsZW50eSBvZiBzcGlyaXQgYW5kIGEgc3Ryb25nIGJvZHkuCjwvdHJhbnNsYXRpb24+"
translation['11.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk1hbnkgc3VwcG9zZSB0aGF0IGFuIGFuaW1hbCB0aGF0IGhhcyBzdXBwbGUgbGVncyB3aWxsIGFsc28gYmUgY2FwYWJsZSBvZiByZWFyaW5nIGhpcyBib2R5LiBUaGF0LCBob3dldmVyLCBpcyBub3QgdGhlIGNhc2U6IHJhdGhlciBpdCBpcyB0aGUgaG9yc2Ugd2l0aCBzdXBwbGUsIHNob3J0LCBzdHJvbmcgbG9pbnMgdGhhdCB3aWxsIGJlIGFibGUgdG8gZXh0ZW5kIGhpcyBoaW5kLWxlZ3Mgd2VsbCB1bmRlciB0aGUgZm9yZWxlZ3MuIEJ5IOKAnGxvaW5z4oCdIHdlIGRvIG5vdCBtZWFuIHRoZSBwYXJ0cyBhYm91dCB0aGUgdGFpbCwgYnV0IHRob3NlIGJldHdlZW4gdGhlIGZsYW5rcyBhbmQgaGF1bmNoZXMgYWJvdXQgdGhlIGJlbGx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['11.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk5vdywgaWYgd2hlbiBoZSBpcyBwbGFudGluZyBoaXMgaGluZC1sZWdzIHVuZGVyIGhpbSB5b3UgcHVsbCBoaW0gdXAgd2l0aCB0aGUgYml0LCBoZSBiZW5kcyB0aGUgaGluZC1sZWdzIG9uIHRoZSBob2NrcyBhbmQgcmFpc2VzIHRoZSBmb3JlLXBhcnQgb2YgaGlzIGJvZHksIHNvIHRoYXQgYW55b25lIGZhY2luZyBoaW0gY2FuIHNlZSB0aGUgYmVsbHkgYW5kIHRoZSBzaGVhdGguIFdoZW4gaGUgZG9lcyB0aGF0IHlvdSBtdXN0IGdpdmUgaGltIHRoZSBiaXQgdGhhdCBoZSBtYXkgYXBwZWFyIHRvIHRoZSBvbmxvb2tlcnMgdG8gYmUgZG9pbmcgd2lsbGluZ2x5IHRoZSBmaW5lc3QgdGhpbmdzIHRoYXQgYSBob3JzZSBjYW4gZG8uCjwvdHJhbnNsYXRpb24+"
translation['11.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlNvbWUsIGhvd2V2ZXIsIHRlYWNoIHRoZXNlIGFjY29tcGxpc2htZW50cyBieSBzdHJpa2luZyBoaW0gdW5kZXIgdGhlIGhvY2tzIHdpdGggYSByb2QsIG90aGVycyBieSB0ZWxsaW5nIGEgbWFuIHRvIHJ1biBhbG9uZ3NpZGUgYW5kIGhpdCBoaW0gd2l0aCBhIHN0aWNrIHVuZGVyIHRoZSBnYXNraW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPldlLCBob3dldmVyLCBjb25zaWRlciB0aGF0IHRoZSBsZXNzb24gaXMgbW9zdCBzYXRpc2ZhY3RvcnkgaWYsIGFzIHdlIGhhdmUgcmVwZWF0ZWRseSBzYWlkLCB0aGUgcmlkZXIgaW52YXJpYWJseSBhbGxvd3MgaGltIHJlbGF4YXRpb24gd2hlbiBoZSBoYXMgZG9uZSBzb21ldGhpbmcgYWNjb3JkaW5nIHRvIGhpcyB3aXNoZXMuCjwvdHJhbnNsYXRpb24+"
translation['11.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkZvciB3aGF0IGEgaG9yc2UgZG9lcyB1bmRlciBjb25zdHJhaW50LCBhcyBTaW1vbiBzYXlzLCBoZSBkb2VzIHdpdGhvdXQgdW5kZXJzdGFuZGluZywgYW5kIHdpdGggbm8gbW9yZSBncmFjZSB0aGFuIGEgZGFuY2VyIHdvdWxkIHNob3cgaWYgaGUgd2FzIHdoaXBwZWQgYW5kIGdvYWRlZC4gVW5kZXIgc3VjaCB0cmVhdG1lbnQgaG9yc2UgYW5kIG1hbiBhbGlrZSB3aWxsIGRvIG11Y2ggbW9yZSB0aGF0IGlzIHVnbHkgdGhhbiBncmFjZWZ1bC4gTm8sIGEgaG9yc2UgbXVzdCBtYWtlIHRoZSBtb3N0IGdyYWNlZnVsIGFuZCBicmlsbGlhbnQgYXBwZWFyYW5jZSBpbiBhbGwgcmVzcGVjdHMgb2YgaGlzIG93biB3aWxsIHdpdGggdGhlIGhlbHAgb2YgYWlkcy4KPC90cmFuc2xhdGlvbj4="
translation['11.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkZ1cnRoZXIsIGlmIHlvdSBnYWxsb3AgaGltIGR1cmluZyBhIHJpZGUgdW50aWwgaGUgc3dlYXRzIGZyZWVseSwgYW5kIGFzIHNvb24gYXMgaGUgcHJhbmNlcyBpbiBmaW5lIHN0eWxlLCBxdWlja2x5IGRpc21vdW50IGFuZCB1bmJyaWRsZSBoaW0sIHlvdSBtYXkgYmUgc3VyZSB0aGF0IGhlIHdpbGwgY29tZSB3aWxsaW5nbHkgdG8gdGhlIHByYW5jZS4KPC90cmFuc2xhdGlvbj4="
translation['11.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGlzIGlzIHRoZSBhdHRpdHVkZSBpbiB3aGljaCBhcnRpc3RzIHJlcHJlc2VudCB0aGUgaG9yc2VzIG9uIHdoaWNoIGdvZHMgYW5kIGhlcm9lcyByaWRlLCBhbmQgbWVuIHdobyBtYW5hZ2Ugc3VjaCBob3JzZXMgZ3JhY2VmdWxseSBoYXZlIGEgbWFnbmlmaWNlbnQgYXBwZWFyYW5jZS4KPC90cmFuc2xhdGlvbj4="
translation['11.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkluZGVlZCBhIHByYW5jaW5nIGhvcnNlIGlzIGEgdGhpbmcgc28gZ3JhY2VmdWwsIHRlcnJpYmxlIGFuZCBhc3RvbmlzaGluZyB0aGF0IGl0IHJpdmV0cyB0aGUgZ2F6ZSBvZiBhbGwgYmVob2xkZXJzLCB5b3VuZyBhbmQgb2xkIGFsaWtlLiBBdCBhbGwgZXZlbnRzIG5vIG9uZSBsZWF2ZXMgaGltIG9yIGlzIHRpcmVkIG9mIGdhemluZyBhdCBoaW0gc28gbG9uZyBhcyBoZSBzaG93cyBvZmYgaGlzIGJyaWxsaWFuY2UuCjwvdHJhbnNsYXRpb24+"
translation['11.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U2hvdWxkIHRoZSBvd25lciBvZiBzdWNoIGEgaG9yc2UgaGFwcGVuIHRvIGJlIGEgY29sb25lbCBvciBhIGdlbmVyYWwsIGhlIG11c3Qgbm90IG1ha2UgaXQgaGlzIG9iamVjdCB0byBiZSB0aGUgb25lIGJyaWxsaWFudCBmaWd1cmUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ2F2LiAxLjIyIiB2YWxpZD0ieWVzIj5YZW4uIENhdmFscnkgMS4yMjwvYmlibD48L25vdGU+IGJ1dCBtdXN0IGF0dGFjaCBtdWNoIG1vcmUgaW1wb3J0YW5jZSB0byBtYWtpbmcgdGhlIHdob2xlIHRyb29wIGJlaGluZCBoaW0gd29ydGggbG9va2luZyBhdC4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBDYXYuIDEuMjIiIHZhbGlkPSJ5ZXMiPlhlbi4gQ2F2YWxyeSAxLjIyPC9iaWJsPjwvdHJhbnNsYXRpb24+"
translation['11.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaWYgYSBob3JzZSBpcyBsZWFkaW5nIGluIHRoZSBtYW5uZXIgd2hpY2ggd2lucyBtb3N0IHByYWlzZSBmb3Igc3VjaCBob3JzZXMsIHByYW5jaW5nIGhpZ2ggYW5kIHdpdGggaGlzIGJvZHkgY2xvc2VseSBnYXRoZXJlZCwgc28gdGhhdCBoZSBtb3ZlcyBmb3J3YXJkIHdpdGggdmVyeSBzaG9ydCBzdGVwcywgdGhlIHJlc3Qgb2YgdGhlIGhvcnNlcyBtdXN0IG9idmlvdXNseSBmb2xsb3cgYWxzbyBhdCBhIHdhbGtpbmcgcGFjZS4gTm93IHdoYXQgY2FuIHRoZXJlIGJlIHJlYWxseSBicmlsbGlhbnQgaW4gc3VjaCBhIHNpZ2h0Pwo8L3RyYW5zbGF0aW9uPg=="
translation['11.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaWYgeW91IHJvdXNlIHlvdXIgaG9yc2UgYW5kIGxlYWQgbmVpdGhlciB0b28gZmFzdCBub3IgdG9vIHNsb3csIGJ1dCBhdCB0aGUgcGFjZSBhdCB3aGljaCB0aGUgbW9zdCBzcGlyaXRlZCBob3JzZXMgbG9vayBtb3N0IGZpZXJ5IGFuZCBzdGF0ZWx54oCUaWYgeW91IGxlYWQgeW91ciBtZW4gaW4gdGhhdCB3YXksIHRoZXJlIHdpbGwgYmUgc3VjaCBhIGNvbnRpbnVhbCBzdGFtcGluZywgc3VjaCBhIGNvbnRpbnVhbCBuZWlnaGluZyBhbmQgc25vcnRpbmcgb2YgdGhlIGhvcnNlcyBnb2luZyBvbiBiZWhpbmQgeW91LCB0aGF0IG5vdCBvbmx5IHlvdSB5b3Vyc2VsZiBidXQgYWxsIHRoZSB0cm9vcCBiZWhpbmQgeW91IHdpbGwgYmUgd29ydGggd2F0Y2hpbmcuCjwvdHJhbnNsYXRpb24+"
translation['11.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SWYgYSBtYW4gYnV5cyBoaXMgaG9yc2VzIHdlbGwsIHRyYWlucyB0aGVtIHNvIHRoYXQgdGhleSBjYW4gc3RhbmQgd29yaywgYW5kIHVzZXMgdGhlbSBwcm9wZXJseSBpbiB0aGUgdHJhaW5pbmcgZm9yIHdhciwgaW4gdGhlIGV4aGliaXRpb24gcmlkZXMgYW5kIG9uIHRoZSBiYXR0bGUtZmllbGRzLCB3aGF0IGlzIHRoZXJlIHRoZW4gdG8gaGluZGVyIGhpbSBmcm9tIG1ha2luZyBob3JzZXMgbW9yZSB2YWx1YWJsZSB0aGFuIHRoZXkgYXJlIHdoZW4gaGUgdGFrZXMgdGhlbSBvdmVyLCBhbmQgd2h5IHNob3VsZCBoZSBub3QgYmUgdGhlIG93bmVyIG9mIGZhbW91cyBob3JzZXMsIGFuZCBhbHNvIGJlY29tZSBmYW1vdXMgaGltc2VsZiBmb3IgaGlzIGhvcnNlbWFuc2hpcCwgcHJvdmlkZWQgbm8gZGl2aW5lIHBvd2VyIHByZXZlbnRzPwo8L3RyYW5zbGF0aW9uPg=="
translation['12.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2Ugd2FudCB0byBleHBsYWluIGFsc28gaG93IGEgbWFuIHdobyBpcyB0byBmYWNlIGRhbmdlciBvbiBob3JzZWJhY2sgc2hvdWxkIGJlIGFybWVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBzYXksIHRoZW4sIHRoYXQgaW4gdGhlIGZpcnN0IHBsYWNlIGhpcyBicmVhc3RwbGF0ZSBtdXN0IGJlIG1hZGUgdG8gZml0IGhpcyBib2R5LiBGb3IgdGhlIHdlbGxmaXR0aW5nIGJyZWFzdHBsYXRlIGlzIHN1cHBvcnRlZCBieSB0aGUgd2hvbGUgYm9keSwgd2hlcmVhcyBvbmUgdGhhdCBpcyB0b28gbG9vc2UgaXMgc3VwcG9ydGVkIGJ5IHRoZSBzaG91bGRlcnMgb25seSwgYW5kIG9uZSB0aGF0IGlzIHRvbyB0aWdodCBpcyByYXRoZXIgYW4gZW5jdW1icmFuY2UgdGhhbiBhIGRlZmVuY2UuCjwvdHJhbnNsYXRpb24+"
translation['12.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCwgc2luY2UgdGhlIG5lY2sgaXMgb25lIG9mIHRoZSB2aXRhbCBwYXJ0cywgd2UgaG9sZCB0aGF0IGEgY292ZXJpbmcgc2hvdWxkIGJlIGF2YWlsYWJsZSBmb3IgaXQgYWxzbywgc3RhbmRpbmcgdXAgZnJvbSB0aGUgYnJlYXN0cGxhdGUgaXRzZWxmIGFuZCBzaGFwZWQgdG8gdGhlIG5lY2suIEZvciB0aGlzIHdpbGwgc2VydmUgYXMgYW4gb3JuYW1lbnQsIGFuZCBhdCB0aGUgc2FtZSB0aW1lLCBpZiBwcm9wZXJseSBtYWRlLCB3aWxsIGNvdmVyIHRoZSByaWRlcidzIGZhY2UsIHdoZW4gaGUgcGxlYXNlcywgYXMgaGlnaCBhcyB0aGUgbm9zZS4KPC90cmFuc2xhdGlvbj4="
translation['12.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGUgaGVsbWV0IHdlIGNvbnNpZGVyIHRoZSBCb2VvdGlhbiBwYXR0ZXJuIHRoZSBtb3N0IHNhdGlzZmFjdG9yeTogZm9yIHRoaXMsIGFnYWluLCBhZmZvcmRzIHRoZSBiZXN0IHByb3RlY3Rpb24gdG8gYWxsIHRoZSBwYXJ0cyB0aGF0IHByb2plY3QgYWJvdmUgdGhlIGJyZWFzdHBsYXRlIHdpdGhvdXQgb2JzdHJ1Y3RpbmcgdGhlIHNpZ2h0LiBBcyBmb3IgdGhlIHBhdHRlcm4gb2YgdGhlIGJyZWFzdHBsYXRlLCBpdCBzaG91bGQgYmUgc28gc2hhcGVkIGFzIG5vdCB0byBwcmV2ZW50IHRoZSB3ZWFyZXIgZnJvbSBzaXR0aW5nIGRvd24gb3Igc3Rvb3BpbmcuCjwvdHJhbnNsYXRpb24+"
translation['12.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFib3V0IHRoZSBhYmRvbWVuIGFuZCBtaWRkbGUgYW5kIHJvdW5kIHRoYXQgcmVnaW9uIGxldCB0aGUgZmxhcHMgYmUgb2Ygc3VjaCBtYXRlcmlhbCBhbmQgc3VjaCBhIHNpemUgdGhhdCB0aGV5IHdpbGwga2VlcCBvdXQgbWlzc2lsZXMuCjwvdHJhbnNsYXRpb24+"
translation['12.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBhcyBhIHdvdW5kIGluIHRoZSBsZWZ0IGhhbmQgZGlzYWJsZXMgdGhlIHJpZGVyLCB3ZSBhbHNvIHJlY29tbWVuZCB0aGUgcGllY2Ugb2YgYXJtb3VyIGludmVudGVkIGZvciBpdCBjYWxsZWQgdGhlIOKAnGhhbmQu4oCdPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIGEgZ2F1bnRsZXQuPC9ub3RlPiBGb3IgaXQgcHJvdGVjdHMgdGhlIHNob3VsZGVyLCB0aGUgYXJtLCB0aGUgZWxib3csIGFuZCB0aGUgZmluZ2VycyB0aGF0IGhvbGQgdGhlIHJlaW5zOyBpdCB3aWxsIGFsc28gZXh0ZW5kIGFuZCBmb2xkIHVwOyBhbmQgaW4gYWRkaXRpb24gaXQgY292ZXJzIHRoZSBnYXAgbGVmdCBieSB0aGUgYnJlYXN0cGxhdGUgdW5kZXIgdGhlIGFybXBpdC4KPC90cmFuc2xhdGlvbj4="
translation['12.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGUgcmlnaHQgaGFuZCBtdXN0IGJlIHJhaXNlZCB3aGVuIHRoZSBtYW4gaW50ZW5kcyB0byBmbGluZyBoaXMgamF2ZWxpbiBvciBzdHJpa2UgYSBibG93LiBDb25zZXF1ZW50bHkgdGhhdCBwb3J0aW9uIG9mIHRoZSBicmVhc3RwbGF0ZSB0aGF0IGhpbmRlcnMgaGltIGluIGRvaW5nIHRoYXQgc2hvdWxkIGJlIHJlbW92ZWQ7IGFuZCBpbiBwbGFjZSBvZiBpdCB0aGVyZSBzaG91bGQgYmUgZGV0YWNoYWJsZSBmbGFwcyBhdCB0aGUgam9pbnRzLCBpbiBvcmRlciB0aGF0LCB3aGVuIHRoZSBhcm0gaXMgZWxldmF0ZWQsIHRoZXkgbWF5IG9wZW4gY29ycmVzcG9uZGluZ2x5LCBhbmQgbWF5IGNsb3NlIHdoZW4gaXQgaXMgbG93ZXJlZC4KPC90cmFuc2xhdGlvbj4="
translation['12.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGUgZm9yZS1hcm0gaXQgc2VlbXMgdG8gdXMgdGhhdCB0aGUgcGllY2UgcHV0IG92ZXIgaXQgc2VwYXJhdGVseSBsaWtlIGEgZ3JlYXZlIGlzIGJldHRlciB0aGFuIG9uZSB0aGF0IGlzIGJvdW5kIHVwIHRvZ2V0aGVyIHdpdGggYSBwaWVjZSBvZiBhcm1vdXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIHdpdGggdGhlIGJyZWFzdHBsYXRlLiBTY2huZWlkZXIgdGhvdWdodCB0aGF0IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+E4b+3PC9mb3JlaWduPiBzaG91bGQgYmUgaW5zZXJ0ZWQgYmVmb3JlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9hc+Azrvhv7M8L2ZvcmVpZ24+PC9ub3RlPiBUaGUgcGFydCB0aGF0IGlzIGxlZnQgZXhwb3NlZCB3aGVuIHRoZSByaWdodCBhcm0gaXMgcmFpc2VkIHNob3VsZCBiZSBjb3ZlcmVkIG5lYXIgdGhlIGJyZWFzdHBsYXRlIHdpdGggY2FsZi1za2luIG9yIG1ldGFsOyBvdGhlcndpc2UgdGhlIG1vc3Qgdml0YWwgcGFydCB3aWxsIGJlIHVucHJvdGVjdGVkLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG/tzwvZm9yZWlnbj4gc2hvdWxkIGJlIGluc2VydGVkIGJlZm9yZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvYXPgM674b+zPC9mb3JlaWduPjwvdHJhbnNsYXRpb24+"
translation['12.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TaW5jZSB0aGUgcmlkZXIgaXMgc2VyaW91c2x5IGltcGVyaWxsZWQgaW4gdGhlIGV2ZW50IG9mIGhpcyBob3JzZSBiZWluZyB3b3VuZGVkLCB0aGUgaG9yc2UgYWxzbyBzaG91bGQgYmUgYXJtZWQsIGhhdmluZyBoZWFkLCBjaGVzdCwgYW5kIHRoaWdoIHBpZWNlczogdGhlIGxhc3QgYWxzbyBzZXJ2ZSB0byBjb3ZlciB0aGUgcmlkZXIncyB0aGlnaHMuIEJ1dCBhYm92ZSBhbGwgdGhlIGhvcnNlJ3MgYmVsbHkgbXVzdCBiZSBwcm90ZWN0ZWQ7IGZvciB0aGlzLCB3aGljaCBpcyB0aGUgbW9zdCB2aXRhbCBwYXJ0LCBpcyBhbHNvIHRoZSB3ZWFrZXN0LiBJdCBpcyBwb3NzaWJsZSB0byBtYWtlIHRoZSBjbG90aCBzZXJ2ZSBwYXJ0bHkgYXMgYSBwcm90ZWN0aW9uIHRvIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['12.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBxdWlsdGluZyBvZiB0aGUgY2xvdGggc2hvdWxkIGJlIHN1Y2ggYXMgdG8gZ2l2ZSB0aGUgcmlkZXIgYSBzYWZlciBzZWF0IGFuZCBub3QgdG8gZ2FsbCB0aGUgaG9yc2UncyBiYWNrLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaHVzIGhvcnNlIGFuZCBtYW4gYWxpa2Ugd2lsbCBiZSBhcm1lZCBpbiBtb3N0IHBhcnRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['12.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIHJpZGVyJ3Mgc2hpbnMgYW5kIGZlZXQgd2lsbCBvZiBjb3Vyc2UgYmUgb3V0c2lkZSB0aGUgdGhpZ2gtcGllY2VzLiBUaGVzZSB0b28gY2FuIGJlIGd1YXJkZWQgaWYgYm9vdHMgbWFkZSBvZiBzaG9lLWxlYXRoZXIgYXJlIHdvcm46IHRoZXJlIHdpbGwgdGh1cyBiZSBhcm1vdXIgZm9yIHRoZSBzaGlucyBhbmQgY292ZXJpbmcgZm9yIHRoZSBmZWV0IGF0IHRoZSBzYW1lIHRpbWUuCjwvdHJhbnNsYXRpb24+"
translation['12.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlc2UgYXJlIHRoZSBkZWZlbnNpdmUgYXJtcyB3aGljaCB3aXRoIHRoZSBncmFjaW91cyBhc3Npc3RhbmNlIG9mIGhlYXZlbiB3aWxsIGFmZm9yZCBwcm90ZWN0aW9uIGZyb20gaGFybS4gRm9yIGhhcm1pbmcgdGhlIGVuZW15IHdlIHJlY29tbWVuZCB0aGUgc2FicmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHNhYnJlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPijOvOG9sc+HzrHOuc+B4byAPC9mb3JlaWduPiB3YXMgdXNlZCBpbiB0aGUgTGFjZWRhZW1vbmlhbiBhbmQgdGhlIFBlcnNpYW4gYXJteS4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOv8+A4b23z4I8L2ZvcmVpZ24+IGlzIHRoZSBzcGVjaWFsIHRlcm0gZm9yIHRoZSBQZXJzaWFuIHdlYXBvbi48L25vdGU+IHJhdGhlciB0aGFuIHRoZSBzd29yZCwgYmVjYXVzZSwgb3dpbmcgdG8gaGlzIGxvZnR5IHBvc2l0aW9uLCB0aGUgcmlkZXIgd2lsbCBmaW5kIHRoZSBjdXQgd2l0aCB0aGUgUGVyc2lhbiBzYWJyZSBtb3JlIGVmZmljYWNpb3VzIHRoYW4gdGhlIHRocnVzdCB3aXRoIHRoZSBzd29yZC4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+KM684b2xz4fOsc65z4HhvIA8L2ZvcmVpZ24+IHdhcyB1c2VkIGluIHRoZSBMYWNlZGFlbW9uaWFuIGFuZCB0aGUgUGVyc2lhbiBhcm15LiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6/z4DhvbfPgjwvZm9yZWlnbj4gaXMgdGhlIHNwZWNpYWwgdGVybSBmb3IgdGhlIFBlcnNpYW4gd2VhcG9uLjwvdHJhbnNsYXRpb24+"
translation['12.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQsIGluIHBsYWNlIG9mIHRoZSBzcGVhciB3aXRoIGEgbG9uZyBzaGFmdCwgc2VlaW5nIHRoYXQgaXQgaXMgYm90aCB3ZWFrIGFuZCBhd2t3YXJkIHRvIG1hbmFnZSwgd2UgcmVjb21tZW5kIHJhdGhlciB0aGUgdHdvIFBlcnNpYW4gamF2ZWxpbnMgb2YgY29ybmVsIHdvb2QuIEZvciB0aGUgc2tpbGZ1bCBtYW4gbWF5IHRocm93IHRoZSBvbmUgYW5kIGNhbiB1c2UgdGhlIG90aGVyIGluIGZyb250IG9yIG9uIGVpdGhlciBzaWRlIG9yIGJlaGluZC4gVGhleSBhcmUgYWxzbyBzdHJvbmdlciB0aGFuIHRoZSBzcGVhciBhbmQgZWFzaWVyIHRvIG1hbmFnZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHR3byBQZXJzaWFuIGphdmVsaW5zIHdlcmUgc2hvcnRlciB0aGFuIHRoZSBHcmVlayBzcGVhci48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['12.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2UgcmVjb21tZW5kIHRocm93aW5nIHRoZSBqYXZlbGluIGF0IHRoZSBsb25nZXN0IHJhbmdlIHBvc3NpYmxlLiBGb3IgdGhpcyBnaXZlcyBhIG1hbiBtb3JlIHRpbWUgdG8gdHVybiBoaXMgaG9yc2UgYW5kIHRvIGdyYXNwIHRoZSBvdGhlciBqYXZlbGluLiBXZSB3aWxsIGFsc28gc3RhdGUgaW4gYSBmZXcgd29yZHMgdGhlIG1vc3QgZWZmZWN0aXZlIHdheSBvZiB0aHJvd2luZyB0aGUgamF2ZWxpbi4gSWYgYSBtYW4sIGluIHRoZSBhY3Qgb2YgYWR2YW5jaW5nIGhpcyBsZWZ0IHNpZGUsIGRyYXdpbmcgYmFjayBoaXMgcmlnaHQsIGFuZCByaXNpbmcgZnJvbSBoaXMgdGhpZ2hzLCBkaXNjaGFyZ2VzIHRoZSBqYXZlbGluIHdpdGggaXRzIHBvaW50IGEgbGl0dGxlIHVwd2FyZHMsIGhlIHdpbGwgZ2l2ZSBoaXMgd2VhcG9uIHRoZSBzdHJvbmdlc3QgaW1wZXR1cyBhbmQgdGhlIGZ1cnRoZXN0IGNhcnJ5aW5nIHBvd2VyOyBpdCB3aWxsIGJlIG1vc3QgbGlrZWx5IHRvIGhpdCB0aGUgbWFyaywgaG93ZXZlciwgaWYgYXQgdGhlIG1vbWVudCBvZiBkaXNjaGFyZ2UgdGhlIHBvaW50IGlzIGFsd2F5cyBzZXQgb24gaXQuCjwvdHJhbnNsYXRpb24+"
translation['12.14'] = ""
translation['1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5HYW1lIGFuZCBob3VuZHMgYXJlIHRoZSBpbnZlbnRpb24gb2YgZ29kcywgb2YgQXBvbGxvIGFuZCBBcnRlbWlzLiBUaGV5IGJlc3Rvd2VkIGl0IG9uIENoZWlyb24gYW5kIGhvbm91cmVkIGhpbSB0aGVyZXdpdGggZm9yIGhpcyByaWdodGVvdXNuZXNzLiBBbmQgaGUsIHJlY2VpdmluZyBpdCwgcmVqb2ljZWQgaW4gdGhlIGdpZnQsIGFuZCB1c2VkIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBoZSBoYWQgZm9yIHB1cGlscyBpbiB2ZW5lcnkgYW5kIGluIG90aGVyIG5vYmxlIHB1cnN1aXRz4oCUQ2VwaGFsdXMsIEFzY2xlcGl1cywgTWVpbGFuaW9uLCBOZXN0b3IsIEFtcGhpYXJhdXMsIFBlbGV1cywgVGVsYW1vbiwgTWVsZWFnZXIsIFRoZXNldXMsIEhpcHBvbHl0dXMsIFBhbGFtZWRlcywgT2R5c3NldXMsIE1lbmVzdGhldXMsIERpb21lZGVzLCBDYXN0b3IsIFBvbHlkZXVjZXMsIE1hY2hhb24sIFBvZGFsZWlyaXVzLCBBbnRpbG9jaHVzLCBBZW5lYXMsIEFjaGlsbGVzLCBvZiB3aG9tIGVhY2ggaW4gaGlzIHRpbWUgd2FzIGhvbm91cmVkIGJ5IGdvZHMuCjwvdHJhbnNsYXRpb24+"
translation['1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkxldCBubyBtYW4gbWFydmVsIHRoYXQgdGhlIG1vcmUgcGFydCBvZiB0aGVzZSwgZXZlbiB0aG91Z2ggdGhleSBwbGVhc2VkIGdvZHMsIGRpZWQgbm9uZSB0aGUgbGVzczsgZm9yIHRoYXQgd2FzIG5hdHVyZSdzIHdvcms7IGJ1dCB0aGUgcHJhaXNlIG9mIHRoZW0gZ3JldyBtaWdodGlseTvigJRub3IgeWV0IHRoYXQgbm90IGFsbCBvZiB0aGVzZSBmbG91cmlzaGVkIGF0IG9uZSB0aW1lLiBGb3IgQ2hlaXJvbidzIGxpZmV0aW1lIHN1ZmZpY2VkIGZvciBhbGwuCjwvdHJhbnNsYXRpb24+"
translation['1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkZvciBaZXVzIGFuZCBDaGVpcm9uIHdlcmUgYnJldGhyZW4sIHNvbnMgb2Ygb25lIHNpcmUsIGJ1dCB0aGUgbW90aGVyIG9mIHRoZSBvbmUgd2FzIFJoZWEsIG9mIHRoZSBvdGhlciB0aGUgbnltcGggTmFpczogYW5kIHNvLCB0aG91Z2ggaGUgd2FzIGJvcm4gYmVmb3JlIHRoZXNlLCBoZSBkaWVkIGFmdGVyIHRoZW0sIGZvciBoZSB0YXVnaHQgQWNoaWxsZXMuCjwvdHJhbnNsYXRpb24+"
translation['1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaHJvdWdoIHRoZSBoZWVkIHRoZXkgcGFpZCB0byBob3VuZHMgYW5kIGh1bnRpbmcgYW5kIHRoZSByZXN0IG9mIHRoZWlyIHNjaG9sYXJzaGlwIHRoZXkgZXhjZWxsZWQgZ3JlYXRseSBhbmQgd2VyZSBhZG1pcmVkIGZvciB0aGVpciB2aXJ0dWUuIENlcGhhbHVzIHdhcyBjYXJyaWVkIGF3YXkgYnkgYSBnb2RkZXNzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BdXJvcmEuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFzY2xlcGl1cyB3b24geWV0LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrhvbDOuTwvZm9yZWlnbj4gYmVmb3JlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9kc+A4b24PC9mb3JlaWduPiBpbiB0aGUgdGV4dCBzaG91bGQgcHJvYmFibHkgYmUgcGxhY2VkIGJlZm9yZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvM61zrnOtuG9uc69z4nOvTwvZm9yZWlnbj4uPC9ub3RlPiBncmVhdGVyIHByZWZlcm1lbnTigJR0byByYWlzZSB0aGUgZGVhZCwgdG8gaGVhbCB0aGUgc2ljazsgYW5kIGZvciB0aGVzZSB0aGluZ3MgaGUgaGFzIGV2ZXJsYXN0aW5nIGZhbWUgYXMgYSBnb2QgYW1vbmcgbWVuLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuuG9sM65PC9mb3JlaWduPiBiZWZvcmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2Rz4Dhvbg8L2ZvcmVpZ24+IGluIHRoZSB0ZXh0IHNob3VsZCBwcm9iYWJseSBiZSBwbGFjZWQgYmVmb3JlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs68zrXOuc624b25zr3Pic69PC9mb3JlaWduPi48L3RyYW5zbGF0aW9uPg=="
translation['1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk1laWxhbmlvbiB3YXMgc28gcGVlcmxlc3MgaW4gbG92ZSBvZiB0b2lsIHRoYXQsIHRob3VnaCB0aGUgcHJpbmNlbGllc3Qgb2YgdGhhdCBhZ2Ugd2VyZSBoaXMgcml2YWwgc3VpdG9ycyBmb3IgdGhlIGdyZWF0ZXN0IExhZHkgb2YgdGhlIHRpbWUsIG9ubHkgaGUgd29uIEF0YWxhbnRhLiBOZXN0b3IncyB2aXJ0dWUgaXMgYW4gb2xkIGZhbWlsaWFyIHRhbGUgdG8gR3JlZWsgZWFyczsgc28gdGhlcmUgaXMgbm8gbmVlZCBmb3IgbWUgdG8gdGVsbCBvZiBpdC4KPC90cmFuc2xhdGlvbj4="
translation['1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFtcGhpYXJhdXMgd2hlbiBoZSBmb3VnaHQgYWdhaW5zdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZWJlcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGhlYmVzIj5UaGViZXM8L3BsYWNlTmFtZT4sIGdhaW5lZCBncmVhdCBwcmFpc2UgYW5kIHdvbiBmcm9tIHRoZSBnb2RzIHRoZSBob25vdXIgb2YgaW1tb3J0YWxpdHkuIFBlbGV1cyBzdGlycmVkIGEgZGVzaXJlIGV2ZW4gaW4gdGhlIGdvZHMgdG8gZ2l2ZSBoaW0gVGhldGlzIGFuZCB0byBoeW1uIHRoZWlyIG1hcnJpYWdlIGluIENoZWlyb24ncyBob21lLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRlbGFtb24gd2F4ZWQgc28gbWlnaHR5IHRoYXQgaGUgd2VkZGVkIGZyb20gdGhlIGdyZWF0ZXN0IGNpdHkgdGhlIG1haWRlbiBvZiBoaXMgY2hvaWNlLCBQZXJpYm9lYSwgZGF1Z2h0ZXIgb2YgQWxjYXRodXM6IGFuZCB3aGVuIHRoZSBmaXJzdCBvZiB0aGUgR3JlZWtzLCBIZXJhY2xlcyBzb24gb2YgWmV1cywgZGlzdHJpYnV0ZWQgdGhlIHByaXplcyBvZiB2YWxvdXIgYWZ0ZXIgdGFraW5nIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJveSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVHJveSI+VHJveTwvcGxhY2VOYW1lPiwgdG8gaGltIGhlIGdhdmUgSGVzaW9uZS8uCjwvdHJhbnNsYXRpb24+"
translation['1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgTWVsZWFnZXIsIHRoZSBob25vdXJzIHRoYXQgaGUgd29uIGFyZSBtYW5pZmVzdDsgYW5kIGl0IHdhcyBub3QgYnkgaGlzIG93biBmYXVsdCB0aGF0IGhlIGNhbWUgdG8gc29ycm93IHdoZW4gaGlzIGZhdGhlciBpbiBvbGQgYWdlIGZvcmdvdCB0aGUgZ29kZGVzcy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiwgd2hlbiBoaXMgZmF0aGVyIE9lbmV1cyBmb3Jnb3QgQXJ0ZW1pcyzigJRhIGxhcHNlIHdoaWNoIGxlZCB1bHRpbWF0ZWx5IHRvIHRoZSBkZWF0aCBvZiBNZWxlYWdlci48L25vdGU+IFRoZXNldXMgc2luZ2xlLWhhbmRlZCBzbGV3IHRoZSBlbmVtaWVzIG9mIGFsbCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT47IGFuZCBiZWNhdXNlIGhlIGVubGFyZ2VkIGdyZWF0bHkgdGhlIGJvcmRlcnMgb2YgaGlzIGNvdW50cnkgaGUgaXMgYWRtaXJlZCB0byB0aGlzIGRheS4KPC90cmFuc2xhdGlvbj4="
translation['1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5IaXBwb2x5dHVzIHdhcyBob25vdXJlZCBieSBBcnRlbWlzIGFuZCBoZWxkIGNvbnZlcnNlIHdpdGggaGVyOyBhbmQgZm9yIGhpcyBwcnVkZW5jZSBhbmQgaG9saW5lc3MgaGUgd2FzIGNvdW50ZWQgaGFwcHkgd2hlbiBoZSBkaWVkLiBQYWxhbWVkZXMgZmFyIG91dHN0cmlwcGVkIHRoZSBtZW4gb2YgaGlzIGdlbmVyYXRpb24gaW4gd2lzZG9tIHdoaWxlIGhlIGxpdmVkOyBhbmQgYmVpbmcgdW5qdXN0bHkgc2xhaW4gaGUgd29uIGZyb20gdGhlIGdvZHMgc3VjaCB2ZW5nZWFuY2UgYXMgZmVsbCB0byB0aGUgbG90IG9mIG5vIG90aGVyIG1vcnRhbC4gQnV0IGhpcyBlbmQgd2FzIG5vdCBjb21wYXNzZWQgYnkgdGhvc2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+T2R5c3NldXMgYW5kIERpb21lZGVzLCB3aG8sIGFjY29yZGluZyB0byBvbmUgYWNjb3VudCwgZHJvd25lZCBQYWxhbWVkZXMgd2hlbiBoZSB3YXMgZmlzaGluZy4gVGhlIHJlZmVyZW5jZSBoZXJlIG1heSBiZSB0byB0aGlzIHZlcnNpb24uIEluIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk1lbW9yYWJpbGlhPC90aXRsZT4gNC4yLjQgWC4gZm9sbG93cyB0aGUgY29tbW9uZXIgdmVyc2lvbiB0aGF0IE9keXNzZXVzIGdvdCBQLiBwdXQgdG8gZGVhdGggYnkgYSBmYWxzZSBjaGFyZ2Ugb2YgdHJlYWNoZXJ5OyBhbmQgaW4gdGhlIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk9keXNzZXk8L3RpdGxlPiBhdHRyaWJ1dGVkIHRvIHRoZSByaGV0b3JpY2lhbiBBbGNpZGFtdXMsIERpb21lZGVzIGFuZCBTdGhlbmVsdXMgYXJlIGFzc29jaWF0ZWQgd2l0aCBPZHlzc2V1cyBpbiBicmluZ2luZyB0aGlzIGNoYXJnZS4gSW4gcmV2ZW5nZSBmb3IgaGlzIGRlYXRoIGhpcyBmYXRoZXIgTmF1cGxpdXMgY2F1c2VkIHRoZSBzaGlwd3JlY2sgb2YgdGhlIEdyZWVrIGZsZWV0IG9mZiB0aGUgc291dGggb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2NzciIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjY3NyI+RXVib2VhPC9wbGFjZU5hbWU+Ljwvbm90ZT4gd2hvbSBzb21lIGltYWdpbmUsIGVsc2UgY291bGQgbm90IHRoZSBvbmUgb2YgdGhlbSBoYXZlIGJlZW4gd2VsbC1uaWdoIHRoZSBiZXN0LCBhbmQgdGhlIG90aGVyIHRoZSBwZWVyIG9mIHRoZSBnb29kOyBidXQgYmFkIG1lbiBkaWQgdGhlIGRlZWQuCjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk1lbW9yYWJpbGlhPC90aXRsZT4gNC4yLjQgWC4gZm9sbG93cyB0aGUgY29tbW9uZXIgdmVyc2lvbiB0aGF0IE9keXNzZXVzIGdvdCBQLiBwdXQgdG8gZGVhdGggYnkgYSBmYWxzZSBjaGFyZ2Ugb2YgdHJlYWNoZXJ5OyBhbmQgaW4gdGhlIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk9keXNzZXk8L3RpdGxlPiBhdHRyaWJ1dGVkIHRvIHRoZSByaGV0b3JpY2lhbiBBbGNpZGFtdXMsIERpb21lZGVzIGFuZCBTdGhlbmVsdXMgYXJlIGFzc29jaWF0ZWQgd2l0aCBPZHlzc2V1cyBpbiBicmluZ2luZyB0aGlzIGNoYXJnZS4gSW4gcmV2ZW5nZSBmb3IgaGlzIGRlYXRoIGhpcyBmYXRoZXIgTmF1cGxpdXMgY2F1c2VkIHRoZSBzaGlwd3JlY2sgb2YgdGhlIEdyZWVrIGZsZWV0IG9mZiB0aGUgc291dGggb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2NzciIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjY3NyI+RXVib2VhPC9wbGFjZU5hbWU+LjwvdHJhbnNsYXRpb24+"
translation['1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5NZW5lc3RoZXVzIHRocm91Z2ggdGhlIGhlZWQgaGUgcGFpZCB0byBodW50aW5nLCBzbyBmYXIgc3VycGFzc2VkIG90aGVycyBpbiBsb3ZlIG9mIHRvaWwgdGhhdCB0aGUgZmlyc3Qgb2YgdGhlIEdyZWVrcyBjb25mZXNzZWQgdGhlbXNlbHZlcyBoaXMgaW5mZXJpb3JzIGluIGZlYXRzIG9mIHdhciwgYWxsIHNhdmUgTmVzdG9yOyBhbmQgaGUsIGl0IGlzIHNhaWQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkluIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPklsaWFkPC90aXRsZT4gMi41NTUuPC9ub3RlPiBvdXRkaWQgbm90LCBidXQgcml2YWxsZWQgaGltLgo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5JbGlhZDwvdGl0bGU+IDIuNTU1LjwvdHJhbnNsYXRpb24+"
translation['1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5PZHlzc2V1cyBhbmQgRGlvbWVkZXMgd2VyZSBicmlsbGlhbnQgaW4gZXZlcnkgc2luZ2xlIGRlZWQsIGFuZCBpbiBzaG9ydCwgdG8gdGhlbSB3YXMgZHVlIHRoZSBjYXB0dXJlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJveSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVHJveSI+VHJveTwvcGxhY2VOYW1lPi4gQ2FzdG9yIGFuZCBQb2x5ZGV1Y2VzLCB0aHJvdWdoIHRoZSByZW5vd24gdGhhdCB0aGV5IHdvbiBieSBkaXNwbGF5aW5nIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiB0aGUgYXJ0cyB0aGV5IGxlYXJuZWQgb2YgQ2hlaXJvbiwgYXJlIGltbW9ydGFsLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5NYWNoYW9uIGFuZCBQb2RhbGVpcml1cywgc2Nob29sZWQgaW4gYWxsIHRoZSBzZWxmc2FtZSBhcnRzLCBwcm92ZWQgaW4gY3JhZnRzIGFuZCByZWFzb25pbmdzIGFuZCB3YXJzIGdvb2QgbWVuLiBBbnRpbG9jaHVzLCBieSBnaXZpbmcgaGlzIGxpZmUgZm9yIGhpcyBmYXRoZXIsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkhvdyBBbnRpbG9jaHVzLCBzb24gb2YgTmVzdG9yLCBzYXZlZCBoaXMgZmF0aGVyJ3MgbGlmZSBpcyB0b2xkIGJ5IFBpbmRhciBpbiB0aGUgc2l4dGggPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UHl0aGlhbjwvdGl0bGU+Ljwvbm90ZT4gd29uIHN1Y2ggZ2xvcnkgdGhhdCBoZSBhbG9uZSB3YXMgcHJvY2xhaW1lZCBhbW9uZyB0aGUgR3JlZWtzIGFzIOKAnHRoZSBEZXZvdGVkIFNvbi7igJ0KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UHl0aGlhbjwvdGl0bGU+LjwvdHJhbnNsYXRpb24+"
translation['1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BZW5lYXMgc2F2ZWQgdGhlIGdvZHMgb2YgaGlzIGZhdGhlcidzIGFuZCBoaXMgbW90aGVyJ3MgZmFtaWx5LCBhbmQgd2l0aGFsIGhpcyBmYXRoZXIgaGltc2VsZjsgd2hlcmVmb3JlIGhlIGJvcmUgYXdheSBmYW1lIGZvciBoaXMgcGlldHksIHNvIHRoYXQgdG8gaGltIGFsb25lIGFtb25nIGFsbCB0aGUgdmFucXVpc2hlZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRyb3kiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRyb3kiPlRyb3k8L3BsYWNlTmFtZT4gZXZlbiB0aGUgZW5lbXkgZ3JhbnRlZCBub3QgdG8gYmUgZGVzcG9pbGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BY2hpbGxlcywgbnVyc2VkIGluIHRoaXMgc2Nob29saW5nLCBiZXF1ZWF0aGVkIHRvIHBvc3Rlcml0eSBtZW1vcmlhbHMgc28gZ3JlYXQgYW5kIGdsb3Jpb3VzIHRoYXQgbm8gbWFuIHdlYXJpZXMgb2YgdGVsbGluZyBhbmQgaGVhcmluZyBvZiBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlc2UsIHdob20gdGhlIGdvb2QgbG92ZSBldmVuIHRvIHRoaXMgZGF5IGFuZCB0aGUgZXZpbCBlbnZ5LCB3ZXJlIG1hZGUgc28gcGVyZmVjdCB0aHJvdWdoIHRoZSBjYXJlIHRoZXkgbGVhcm5lZCBvZiBDaGVpcm9uIHRoYXQsIHdoZW4gdHJvdWJsZXMgZmVsbCB1cG9uIGFueSBzdGF0ZSBvciBhbnkga2luZyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIHRoZXkgd2VyZSBjb21wb3NlZCB0aHJvdWdoIHRoZWlyIGluZmx1ZW5jZTsgb3IgaWYgYWxsIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiB3YXMgYXQgc3RyaWZlIG9yIGF0IHdhciB3aXRoIGFsbCB0aGUgQmFyYmFyaWFuIHBvd2VycywgdGhlc2UgYnJvdWdodCB2aWN0b3J5IHRvIHRoZSBHcmVla3MsIHNvIHRoYXQgdGhleSBtYWRlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiBpbnZpbmNpYmxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmVmb3JlIEkgY2hhcmdlIHRoZSB5b3VuZyBub3QgdG8gZGVzcGlzZSBodW50aW5nIG9yIGFueSBvdGhlciBzY2hvb2xpbmcuIEZvciB0aGVzZSBhcmUgdGhlIG1lYW5zIGJ5IHdoaWNoIG1lbiBiZWNvbWUgZ29vZCBpbiB3YXIgYW5kIGluIGFsbCB0aGluZ3Mgb3V0IG9mIHdoaWNoIG11c3QgY29tZSBleGNlbGxlbmNlIGluIHRob3VnaHQgYW5kIHdvcmQgYW5kIGRlZWQuCjwvdHJhbnNsYXRpb24+"
translation['2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZmlyc3QgcHVyc3VpdCwgdGhlcmVmb3JlLCB0aGF0IGEgeW91bmcgbWFuIGp1c3Qgb3V0IG9mIGhpcyBib3lob29kIHNob3VsZCB0YWtlIHVwIGlzIGh1bnRpbmcsIGFuZCBhZnRlcndhcmRzIGhlIHNob3VsZCBnbyBvbiB0byB0aGUgb3RoZXIgYnJhbmNoZXMgb2YgZWR1Y2F0aW9uLCBwcm92aWRlZCBoZSBoYXMgbWVhbnMuIEhlIG11c3QgbG9vayB0byBoaXMgbWVhbnMsIGFuZCwgaWYgdGhleSBhcmUgc3VmZmljaWVudCwgc3BlbmQgYXMgbXVjaCBhcyB0aGUgYmVuZWZpdCB0byBoaW1zZWxmIGlzIHdvcnRoOyBvciwgaWYgdGhleSBhcmUgaW5zdWZmaWNpZW50LCBhdCBsZWFzdCBsZXQgaGltIHN1cHBseSBlbnRodXNpYXNtLCBpbiBubyB3YXkgY29taW5nIHNob3J0IG9mIGhpcyBwb3dlci48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHRleHQgb2YgdGhpcyBwYXJhZ3JhcGggaXMgb3BlbiB0byBzdXNwaWNpb24uIFRoZSB3b3JkcyBmcm9tIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs614by2z4TOsTwvZm9yZWlnbj4gdG8gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byUz4fOv869z4TOsTwvZm9yZWlnbj4gbWF5IGJlIGFuIGFmdGVydGhvdWdodC48L25vdGU+Cjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs614by2z4TOsTwvZm9yZWlnbj4gdG8gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byUz4fOv869z4TOsTwvZm9yZWlnbj4gbWF5IGJlIGFuIGFmdGVydGhvdWdodC48L3RyYW5zbGF0aW9uPg=="
translation['2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHdpbGwgZ2l2ZSBhIGxpc3QgYW5kIGEgZGVzY3JpcHRpb24gb2YgdGhlIGludGVuZGluZyBodW50ZXIncyBvdXRmaXQsIGFuZCB0aGUgZXhwbGFuYXRpb24gb2YgZWFjaCBpdGVtLCBpbiBvcmRlciB0aGF0IGhlIG1heSB1bmRlcnN0YW5kIHRoZSBidXNpbmVzcyBiZWZvcmUgaGUgcHV0cyBoaXMgaGFuZCB0byBpdC4gQW5kIGxldCBubyBvbmUgcmVnYXJkIHRoZXNlIGRldGFpbHMgYXMgdHJpdmlhbDsgaW5hc211Y2ggYXMgbm90aGluZyBjYW4gYmUgZG9uZSB3aXRob3V0IHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgbmV0LWtlZXBlciBzaG91bGQgYmUgYSBtYW4gd2l0aCBhIGtlZW4gaW50ZXJlc3QgaW4gdGhlIGJ1c2luZXNzLCBvbmUgd2hvIHNwZWFrcyBHcmVlaywgYWJvdXQgdHdlbnR5IHllYXJzIG9sZCwgYWdpbGUgYW5kIHN0cm9uZywgYW5kIHJlc29sdXRlLCB0aGF0LCBiZWluZyB3ZWxsIHF1YWxpZmllZCB0byBvdmVyY29tZSBoaXMgdGFza3MsIGhlIG1heSB0YWtlIHBsZWFzdXJlIGluIHRoZSBidXNpbmVzcy4KPC90cmFuc2xhdGlvbj4="
translation['2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBwdXJzZS1uZXRzIHNob3VsZCBiZSBtYWRlIG9mIGZpbmUgUGhhc2lhbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCBDb2xjaGlhbi4gTXVjaCBmbGF4IGFuZCBsaW5lbiB3YXMgZXhwb3J0ZWQgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjY0MiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2NjQyIj5Db2xjaGlzPC9wbGFjZU5hbWU+Ljwvbm90ZT4gb3IgQ2FydGhhZ2luaWFuIGZsYXgsIGFuZCB0aGUgcm9hZC1uZXRzIGFuZCBoYXllcyBvZiB0aGUgc2FtZSBtYXRlcmlhbC48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjY0MiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2NjQyIj5Db2xjaGlzPC9wbGFjZU5hbWU+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZXQgdGhlIHB1cnNlLW5ldHMgYmUgb2YgbmluZSB0aHJlYWRzIHdvdmVuIGluIHRocmVlIHN0cmFuZHMsIGVhY2ggc3RyYW5kIGNvbnNpc3Rpbmcgb2YgdGhyZWUgdGhyZWFkcy4gVGhlIHByb3BlciBsZW5ndGggZm9yIHRoZXNlIG5ldHMgaXMgZm9ydHktZml2ZSBpbmNoZXMsIHRoZSBwcm9wZXIgd2lkdGggb2YgdGhlIG1lc2hlcyBzaXggaW5jaGVzLiBUaGUgY29yZHMgdGhhdCBydW4gcm91bmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGNvcmRzIG1lYW50IGhlcmUgYXJlIHRob3NlIHRoYXQgcmFuIHJvdW5kIHRoZSBtb3V0aCBvZiB0aGUgcHVyc2UsIGFuZCBzZXJ2ZWQgYXMgYSBydW5uaW5nIG5vb3NlIHRvIGNsb3NlIGl0IHdoZW4gdGhlIGhhcmUgZ290IGluLjwvbm90ZT4gdGhlbSBtdXN0IGJlIHdpdGhvdXQga25vdHMsIHNvIHRoYXQgdGhleSBtYXkgcnVuIGVhc2lseS4KPC90cmFuc2xhdGlvbj4="
translation['2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZSByb2FkLW5ldHMgc2hvdWxkIGJlIG9mIHR3ZWx2ZSB0aHJlYWRzLCBhbmQgdGhlIGhheWVzIG9mIHNpeHRlZW4uIFRoZSBsZW5ndGggb2YgdGhlIHJvYWQtbmV0cyBtYXkgYmUgdHdlbHZlLCB0d2VudHktZm91ciBvciB0aGlydHktZmVldDsgdGhhdCBvZiB0aGUgaGF5ZXMgc2l4dHksIGEgaHVuZHJlZCBhbmQgdHdlbnR5LCBvciBhIGh1bmRyZWQgYW5kIGVpZ2h0eSBmZWV0LiBJZiB0aGV5IGFyZSBsb25nZXIsIHRoZXkgd2lsbCBiZSB1bndpZWxkeS4gQm90aCBraW5kcyBzaG91bGQgYmUgdGhpcnR5IGtub3RzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIHRlbiBtZXNoZXMsIHNvIHRoYXQgdGhlIGV4dHJlbWUgaGVpZ2h0LCBpZiB0aGUgbmV0IHdhcyBmdWxseSBzdHJldGNoZWQsIHdvdWxkIGJlIGZpdmUgZmVldC4gUG9hY2hlcnMgbm93IHVzZSBzbGlwLWtub3RzIG9yIG5ldHMgYWJvdXQgZm91ciBmZWV0IGRlZXAgd2l0aCBhIG1lc2ggb2YgdHdvLWFuZC1hLWhhbGYgaW5jaGVzLjwvbm90ZT4gaGlnaCwgYW5kIHNob3VsZCBoYXZlIG1lc2hlcyBvZiB0aGUgc2FtZSB3aWR0aCBhcyB0aG9zZSBvZiB0aGUgcHVyc2UtbmV0cy4KPC90cmFuc2xhdGlvbj4="
translation['2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkF0IHRoZSBlbGJvd3MgYXQgZWl0aGVyIGVuZCBsZXQgdGhlIHJvYWQtbmV0cyBoYXZlIHNsaXAta25vdHMgb2Ygc3RyaW5nIGFuZCB0aGUgaGF5ZXMgbWV0YWwgcmluZ3MsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSByaW5ncyBydW5uaW5nIGRvd24gdGhlIHR3byBzaWRlcyB3ZXJlIHVzZWQgZm9yIGpvaW5pbmcgdHdvIG5ldHMgdG9nZXRoZXIuPC9ub3RlPiBhbmQgbGV0IHRoZSBjb3Jkczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCB0aGUgY29yZHMgcnVubmluZyBhbG9uZyB0aGUgdG9wIGFuZCBib3R0b20gb2YgdGhlIG5ldHMuPC9ub3RlPiBiZSBhdHRhY2hlZCBieSBsb29wcy4KPC90cmFuc2xhdGlvbj4="
translation['2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBzdGFrZXMgZm9yIHRoZSBwdXJzZS1uZXRzIHNob3VsZCBiZSB0aGlydHkgaW5jaGVzIGxvbmcsIGJ1dCBzb21lIHNob3VsZCBiZSBzaG9ydGVyLiBUaG9zZSBvZiB1bmVxdWFsIGxlbmd0aCBhcmUgZm9yIHVzZSBvbiBzbG9waW5nIGdyb3VuZCwgdG8gbWFrZSB0aGUgaGVpZ2h0IG9mIHRoZSBuZXRzIGVxdWFsLCB3aGlsZSB0aG9zZSBvZiB0aGUgc2FtZSBsZW5ndGggYXJlIHVzZWQgb24gdGhlIGxldmVsLiBUaGVzZSBzdGFrZXMgbXVzdCBiZSBzbyBzaGFwZWQgYXQgdGhlIHRvcCB0aGF0IHRoZSBuZXRzIHdpbGwgcHVsbCBvZmYgcmVhZGlseSBhbmQgdGhleSBtdXN0IGJlIHNtb290aC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGF1dGhvciBtZWFucywgSSB0aGluaywgdG8gaW1wbHkgYSBjb250cmFzdCBiZXR3ZWVuIHRoZSBzdGFrZXMgb2YgdGhlIHB1cnNlLW5ldHMgYW5kIHRob3NlIG9mIHRoZSBvdGhlciBuZXRzLiBUaGUgc2Vjb25kIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6x4b2Xz4TOsc65PC9mb3JlaWduPiBpbiB0aGUgdGV4dCBjYW4gc2NhcmNlbHkgYmUgcmlnaHQ6IHBvc3NpYmx5IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs66zrHhvbYgzrHhvZfPhM6xzrkgzrvOteG8sc6xzrk8L2ZvcmVpZ24+IHNob3VsZCBiZSBvbWl0dGVkLCBvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OseG9kM+EzrHhvbc8L2ZvcmVpZ24+LCDigJx0aGV5IHRoZW1zZWx2ZXMs4oCdIHJlYWQgd2l0aCBEaW5kb3JmLjwvbm90ZT4gVGhlIHN0YWtlcyBmb3IgdGhlIHJvYWQtbmV0cyBzaG91bGQgYmUgdHdpY2UgdGhlIGxlbmd0aCBvZiB0aGVzZSwgYW5kIHRob3NlIGZvciB0aGUgaGF5ZXMgZm9ydHktZml2ZSBpbmNoZXMgbG9uZy4gVGhlIGxhdHRlcjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6x4b2Xz4TOsc65PC9mb3JlaWduPiBpbiB0aGUgdGV4dCBjYW4gc2NhcmNlbHkgYmUgcmlnaHQ6IHBvc3NpYmx5IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs66zrHhvbYgzrHhvZfPhM6xzrkgzrvOteG8sc6xzrk8L2ZvcmVpZ24+IHNob3VsZCBiZSBvbWl0dGVkLCBvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OseG9kM+EzrHhvbc8L2ZvcmVpZ24+LCDigJx0aGV5IHRoZW1zZWx2ZXMs4oCdIHJlYWQgd2l0aCBEaW5kb3JmLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5PciBwZXJoYXBzIGhlIG1lYW5zIGJvdGggc2V0cy4gPC9ub3RlPiBzaG91bGQgaGF2ZSBsaXR0bGUgZm9ya3Mgd2l0aCBzaGFsbG93IGdyb292ZXMsIGFuZCBhbGwgc2hvdWxkIGJlIHN0b3V0LCBvZiBhIHRoaWNrbmVzcyBwcm9wb3J0aW9uZWQgdG8gdGhlIGxlbmd0aC4KPC90cmFuc2xhdGlvbj4="
translation['2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBudW1iZXIgb2Ygc3Rha2VzIHVzZWQgZm9yIHRoZSBoYXllcyBtYXkgYmUgbGFyZ2Ugb3Igc21hbGw7IGZld2VyIGFyZSByZXF1aXJlZCBpZiB0aGUgbmV0cyBhcmUgc3RyYWluZWQgdGlnaHQgd2hlbiBzZXQgdXAsIG1vcmUgaWYgdGhleSBhcmUgc2xhY2suCjwvdHJhbnNsYXRpb24+"
translation['2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkEgY2FsZi1za2luIGJhZyB3aWxsIGJlIHdhbnRlZCBmb3IgY2FycnlpbmcgdGhlIHB1cnNlLW5ldHMgYW5kIHJvYWQtbmV0cyBhbmQgaGF5ZXMgYW5kIHRoZSBiaWxsLWhvb2tzIGZvciBjdXR0aW5nIHdvb2QgYW5kIHN0b3BwaW5nIGdhcHMgd2hlcmUgbmVjZXNzYXJ5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgaG91bmRzIHVzZWQgYXJlIG9mIHR3byBraW5kcywgdGhlIENhc3RvcmlhbiBhbmQgdGhlIFZ1bHBpbmUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkJvdGggYXJlIExhY29uaWFuIHZhcmlldGllcywgdGhlIENhc3RvcmlhbiBiZWluZyBtdWNoIHRoZSBsYXJnZXIuIFRoZSBWdWxwaW5lIHJlc2VtYmxlZCBhIGZveDsgaGVuY2UgdGhlIGVycm9uZW91cyBpZGVhIHRoYXQgaXQgd2FzIGEgaHlicmlkIGJldHdlZW4gZG9nIGFuZCBmb3ggKE8uIEtlbGxlciwgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+ZGllIGFudGlrZSBUaWVyd2VsdDwvdGl0bGU+LCBpLiAxMjEpLjwvbm90ZT4gVGhlIENhc3RvcmlhbiBpcyBzbyBjYWxsZWQgYmVjYXVzZSBDYXN0b3IgcGFpZCBzcGVjaWFsIGF0dGVudGlvbiB0byB0aGUgYnJlZWQsIG1ha2luZyBhIGhvYmJ5IG9mIHRoZSBidXNpbmVzcy4gVGhlIFZ1bHBpbmUgaXMgYSBoeWJyaWQgYmV0d2VlbiB0aGUgZG9nIGFuZCB0aGUgZm94OiBoZW5jZSB0aGUgbmFtZS4gSW4gdGhlIGNvdXJzZSBvZiB0aW1lIHRoZSBuYXR1cmUgb2YgdGhlIHBhcmVudHMgaGFzIGJlY29tZSBmdXNlZC4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+ZGllIGFudGlrZSBUaWVyd2VsdDwvdGl0bGU+LCBpLiAxMjEpLjwvdHJhbnNsYXRpb24+"
translation['3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkluZmVyaW9yIHNwZWNpbWVucyAodGhhdCBpcyB0byBzYXksIHRoZSBtYWpvcml0eSkgc2hvdyBvbmUgb3IgbW9yZSBvZiB0aGUgZm9sbG93aW5nIGRlZmVjdHMuIFRoZXkgYXJlIHNtYWxsLCBob29rLW5vc2VkLCBncmV5LWV5ZWQsIGJsaW5raW5nLCB1bmdhaW5seSwgc3RpZmYsIHdlYWssIHRoaW4tY29hdGVkLCBsYW5reSwgaWxsLXByb3BvcnRpb25lZCwgY293YXJkbHksIGR1bGwtc2NlbnRlZCwgdW5zb3VuZCBpbiB0aGUgZmVldC4KPC90cmFuc2xhdGlvbj4="
translation['3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk5vdyBzbWFsbCBkb2dzIG9mdGVuIGRyb3Agb3V0IG9mIHRoZSBydW5uaW5nIHRocm91Z2ggdGhlaXIgd2FudCBvZiBzaXplOyBob29rLW5vc2VkIGRvZ3MgaGF2ZSBubyBtb3V0aCBhbmQgY2FuJ3QgaG9sZCB0aGUgaGFyZTsgZ3JleS1leWVkIGRvZ3MgYW5kIGJsaW5rZXJzIGhhdmUgYmFkIHNpZ2h0OyB1bmdhaW5seSBkb2dzIGxvb2sgdWdseTsgc3RpZmYgb25lcyBhcmUgaW4gYSBiYWQgd2F5IGF0IHRoZSBlbmQgb2YgdGhlIGh1bnQ7IG5vIHdvcmsgY2FuIGJlIGdvdCBvdXQgb2YgdGhlIHdlYWsgYW5kIHRoZSB0aGluLWNvYXRlZCBvbmVzOyB0aG9zZSB0aGF0IGFyZSBsYW5reSBhbmQgaWxsLXByb3BvcnRpb25lZCBhcmUgaGVhdnkgbW92ZXJzIGFuZCBjYXJyeSB0aGVtc2VsdmVzIGFueWhvdzsgY293YXJkcyBsZWF2ZSB0aGVpciB3b3JrIGFuZCBnaXZlIHVwIGFuZCBzbGluayBhd2F5IGZyb20gdGhlIHN1biBpbnRvIHNoYWR5IHBsYWNlcyBhbmQgbGllIGRvd247IGRvZ3Mgd2l0aCBubyBub3NlIHNlbGRvbSBzY2VudCB0aGUgaGFyZSBhbmQgb25seSB3aXRoIGRpZmZpY3VsdHk7IGFuZCB0aG9zZSB3aXRoIGJhZCBmZWV0LCBldmVuIGlmIHRoZXkgYXJlIHBsdWNreSwgY2FuJ3Qgc3RhbmQgdGhlIGhhcmQgd29yaywgYW5kIHRpcmUgYmVjYXVzZSB0aGV5IGFyZSBmb290LXNvcmUuCjwvdHJhbnNsYXRpb24+"
translation['3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Nb3Jlb3ZlciwgaG91bmRzIG9mIHRoZSBzYW1lIGJyZWVkIHZhcnkgbXVjaCBpbiBiZWhhdmlvdXIgd2hlbiB0cmFja2luZy4gU29tZSBnbyBhaGVhZCBhcyBzb29uIGFzIHRoZXkgZmluZCB0aGUgbGluZSB3aXRob3V0IGdpdmluZyBhIHNpZ24sIGFuZCB0aGVyZSBpcyBub3RoaW5nIHRvIHNob3cgdGhhdCB0aGV5IGFyZSBvbiBpdC4gU29tZSBtb3ZlIHRoZSBlYXJzIG9ubHksIGJ1dCBrZWVwIHRoZSB0YWlsIHN0aWxsOyBvdGhlcnMga2VlcCB0aGUgZWFycyBzdGlsbCBhbmQgd2FnIHRoZSB0aXAgb2YgdGhlIHRhaWwuCjwvdHJhbnNsYXRpb24+"
translation['3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk90aGVycyBwcmljayB1cCB0aGUgZWFyczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgR3JlZWsgaG91bmQgaGFkIHNob3J0IGVhcnMgKGNmLiA0LjEpIGxpa2UgYSBmb3h0ZXJyaWVyLjwvbm90ZT4gYW5kIHJ1biBmcm93bmluZyBhbG9uZyB0aGUgdHJhY2ssIGRyb3BwaW5nIHRoZWlyIHRhaWxzIGFuZCBwdXR0aW5nIHRoZW0gYmV0d2VlbiB0aGVpciBsZWdzLiBNYW55IGRvIG5vbmUgb2YgdGhlc2UgdGhpbmdzLCBidXQgcnVzaCBhYm91dCBtYWRseSByb3VuZCB0aGUgdHJhY2ssIGFuZCB3aGVuIHRoZXkgaGFwcGVuIHVwb24gaXQsIHN0dXBpZGx5IHRyYW1wbGUgb3V0IHRoZSB0cmFjZXMsIGJhcmtpbmcgYWxsIHRoZSB0aW1lLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk90aGVycyBhZ2FpbiwgY29udGludWFsbHkgY2lyY2xpbmcgYW5kIHN0cmF5aW5nLCBnZXQgYWhlYWQgb2YgdGhlIGxpbmUgd2hlbiBjbGVhbiBvZmYgaXQgYW5kIHBhc3MgdGhlIGhhcmUsIGFuZCBldmVyeSB0aW1lIHRoZXkgcnVuIGFnYWluc3QgdGhlIGxpbmUsIGJlZ2luIGd1ZXNzaW5nLCBhbmQgaWYgdGhleSBjYXRjaCBzaWdodCBvZiB0aGUgaGFyZSwgdHJlbWJsZSBhbmQgbmV2ZXIgZ28gZm9yIGhlciB1bnRpbCB0aGV5IHNlZSBoZXIgc3Rpci4KPC90cmFuc2xhdGlvbj4="
translation['3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkhvdW5kcyB0aGF0IHJ1biBmb3J3YXJkIGFuZCBmcmVxdWVudGx5IGV4YW1pbmUgdGhlIGRpc2NvdmVyaWVzIG9mIHRoZSBvdGhlcnMgd2hlbiB0aGV5IGFyZSBjYXN0aW5nIGFib3V0IGFuZCBwdXJzdWluZyBoYXZlIG5vIGNvbmZpZGVuY2UgaW4gdGhlbXNlbHZlczsgd2hpbGUgdGhvc2UgdGhhdCB3aWxsIG5vdCBsZXQgdGhlaXIgY2xldmVyZXIgbWF0ZXMgZ28gZm9yd2FyZCwgYnV0IGZ1c3MgYW5kIGtlZXAgdGhlbSBiYWNrLCBhcmUgY29uZmlkZW50IHRvIGEgZmF1bHQuIE90aGVycyB3aWxsIGRyaXZlIGFoZWFkLCBlYWdlcmx5IGZvbGxvd2luZyBmYWxzZSBsaW5lcyBhbmQgZ2V0dGluZyB3aWxkbHkgZXhjaXRlZCBvdmVyIGFueXRoaW5nIHRoYXQgdHVybnMgdXAsIHdlbGwga25vd2luZyB0aGF0IHRoZXkgYXJlIHBsYXlpbmcgdGhlIGZvb2w7IG90aGVycyB3aWxsIGRvIHRoZSBzYW1lIHRoaW5nIGluIGlnbm9yYW5jZS4gVGhvc2UgdGhhdCBzdGljayB0byBnYW1lIHBhdGhzIGFuZCBkb24ndCByZWNvZ25pc2UgdGhlIHRydWUgbGluZSBhcmUgcG9vciB0b29scy4KPC90cmFuc2xhdGlvbj4="
translation['3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkEgaG91bmQgdGhhdCBpZ25vcmVzIHRoZSB0cmFpbDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj7igJxUaGUgdHJhaWwgb2YgdGhlIGhhcmUgaXMgdGhlIHBhdGggc2hlIHRha2VzIGluIGdvaW5nIHRvIGhlciBzZWF0LuKAneKAlEJlY2tmb3JkLjwvbm90ZT4gYW5kIHJhY2VzIG92ZXIgdGhlIHRyYWNrIG9mIHRoZSBoYXJlIG9uIHRoZSBydW4gaXMgaWxsLWJyZWQuIFNvbWUsIGFnYWluLCB3aWxsIHB1cnN1ZSBob3RseSBhdCBmaXJzdCwgYW5kIHRoZW4gc2xhY2sgb2ZmIGZyb20gd2FudCBvZiBwbHVjazsgb3RoZXJzIHdpbGwgY3V0IGluIGFoZWFkIGFuZCB0aGVuIGdldCBhc3RyYXk7IHdoaWxlIG90aGVycyBmb29saXNobHkgZGFzaCBpbnRvIHJvYWRzIGFuZCBnbyBhc3RyYXksIGRlYWYgdG8gYWxsIHJlY2FsbC4KPC90cmFuc2xhdGlvbj4="
translation['3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk1hbnkgYWJhbmRvbiB0aGUgcHVyc3VpdCBhbmQgZ28gYmFjayB0aHJvdWdoIHRoZWlyIGhhdHJlZCBvZiBnYW1lLCBhbmQgbWFueSB0aHJvdWdoIHRoZWlyIGxvdmUgb2YgbWFuLiBPdGhlcnMgdHJ5IHRvIG1pc2xlYWQgYnkgYmF5aW5nIG9uIHRoZSB0cmFjaywgcmVwcmVzZW50aW5nIGZhbHNlIGxpbmVzIGFzIHRydWUgb25lcy4KPC90cmFuc2xhdGlvbj4="
translation['3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Tb21lLCB0aG91Z2ggZnJlZSBmcm9tIHRoaXMgZmF1bHQsIGxlYXZlIHRoZWlyIG93biB3b3JrIHdoZW4gdGhleSBoZWFyIGEgc2hvdXQgZnJvbSBhbm90aGVyIHF1YXJ0ZXIgd2hpbGUgdGhleSBhcmUgcnVubmluZywgYW5kIG1ha2UgZm9yIGl0IHJlY2tsZXNzbHkuIFdoZW4gcHVyc3Vpbmcgc29tZSBhcmUgZHViaW91cywgb3RoZXJzIGFyZSBmdWxsIG9mIGFzc3VtcHRpb25zIGJ1dCB0aGVpciBub3Rpb25zIGFyZSB3cm9uZy4gVGhlbiB0aGVyZSBhcmUgdGhlIHNraXJ0ZXJzLCBzb21lIG9mIHdob20gbWVyZWx5IHByZXRlbmQgdG8gaHVudCwgd2hpbGUgb3RoZXJzIG91dCBvZiBqZWFsb3VzeSBwZXJwZXR1YWxseSBzY2FtcGVyIGFib3V0IHRvZ2V0aGVyIGJlc2lkZSB0aGUgbGluZS4KPC90cmFuc2xhdGlvbj4="
translation['3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IG1vc3Qgb2YgdGhlc2UgZmF1bHRzIGFyZSBuYXR1cmFsIGRlZmVjdHMsIGJ1dCBzb21lIGJ5IHdoaWNoIGhvdW5kcyBhcmUgc3BvaWx0IGFyZSBkdWUgdG8gdW5pbnRlbGxpZ2VudCB0cmFpbmluZy4gQW55aG93IHN1Y2ggaG91bmRzIG1heSB3ZWxsIHB1dCBhIGtlZW4gaHVudGVyIG9mZiB0aGUgc3BvcnQuIFdoYXQgaG91bmRzIG9mIHRoZSBzYW1lIGJyZWVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBhdXRob3IncyBpZGVhbCBoYXJyaWVyIGlzIGNsZWFybHkgdGhlIENhc3Rvcmlhbi48L25vdGU+IG91Z2h0IHRvIGxvb2sgbGlrZSBhbmQgd2hhdCB0aGV5IHNob3VsZCBiZSBpbiBvdGhlciByZXNwZWN0cyBJIHdpbGwgbm93IGV4cGxhaW4uCjwvdHJhbnNsYXRpb24+"
translation['4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GaXJzdCwgdGhlbiwgdGhleSBzaG91bGQgYmUgYmlnLiBOZXh0LCB0aGUgaGVhZCBzaG91bGQgYmUgbGlnaHQsIGZsYXQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SW4gcHJvZmlsZS48L25vdGU+IGFuZCBtdXNjdWxhcjsgdGhlIGxvd2VyIHBhcnRzIG9mIHRoZSBmb3JlaGVhZCBzaW5ld3k7IHRoZSBleWVzIHByb21pbmVudCwgYmxhY2sgYW5kIHNwYXJrbGluZzsgdGhlIGZvcmVoZWFkIGJyb2FkLCB3aXRoIGEgZGVlcCBkaXZpZGluZyBsaW5lOyB0aGUgZWFycyBzbWFsbCBhbmQgdGhpbiB3aXRoIGxpdHRsZSBoYWlyIGJlaGluZDsgdGhlIG5lY2sgbG9uZywgbG9vc2UgYW5kIHJvdW5kOyB0aGUgY2hlc3QgYnJvYWQgYW5kIGZhaXJseSBmbGVzaHk7IHRoZSBzaG91bGRlci1ibGFkZXMgc2xpZ2h0bHkgb3V0c3RhbmRpbmcgZnJvbSB0aGUgc2hvdWxkZXJzOyB0aGUgZm9yZWxlZ3Mgc2hvcnQsIHN0cmFpZ2h0LCByb3VuZCBhbmQgZmlybTsgdGhlIGVsYm93cyBzdHJhaWdodDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCBub3QgYmVudCBpbndhcmRzIG9yIG91dHdhcmRzLjwvbm90ZT47IHRoZSByaWJzIG5vdCBsb3cgZG93biBvbiB0aGUgZ3JvdW5kLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TbyBQb2xsdXggcmVhZCwgZm9yIGhlIHNheXMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrzhvbQgz4DPgeG9uM+CIM+E4b20zr0gzrPhv4bOvSDOss6xzrjPhc69zr/OvOG9s869zrHPgi48L2ZvcmVpZ24+IFRoZSBzZW5zZSBpcyB0aGVuIHRoYXQgdGhlIHJpYnMgYXJlIG5vdCB0byBiZSBsb3cgb24gdGhlIGdyb3VuZCB3aGVuIHRoZSBob3VuZCBpcyBjb3VjaGFudCwgYnV0IHdlbGwgdHVja2VkIHVwIGJlaGluZC4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQz4DhvbfPgM6xzr0gzrLOsc64zrXhvbfOsc+CPC9mb3JlaWduPiwg4oCcZGVlcCB0aHJvdWdob3V0LOKAnSB3b3VsZCBhcHBseSB0byB0aGUgZGVwdGggZnJvbSB3YWxsIHRvIHdhbGwsIGFuZCB0aGUgbWVhbmluZyB3b3VsZCBiZSB0aGF0IHRoZSByaWJzIGFyZSB0byBjb250cmFjdCB0b3dhcmRzIHRoZSBmbGFua3MuPC9ub3RlPiBidXQgc2xvcGluZyBpbiBhbiBvYmxpcXVlIGxpbmU7IHRoZSBsb2lucyBmbGVzaHksIG9mIG1lZGl1bSBsZW5ndGgsIGFuZCBuZWl0aGVyIHRvbyBsb29zZSBub3IgdG9vIGhhcmQ7IHRoZSBmbGFua3Mgb2YgbWVkaXVtIHNpemU7IHRoZSBoaXBzIHJvdW5kIGFuZCBmbGVzaHkgYXQgdGhlIGJhY2ssIG5vdCBjbG9zZSBhdCB0aGUgdG9wLCBhbmQgc21vb3RoIG9uIHRoZSBpbnNpZGU8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvOG9tCDPgM+B4b24z4Igz4ThvbTOvSDOs+G/hs69IM6yzrHOuM+Fzr3Ov8684b2zzr3Osc+CLjwvZm9yZWlnbj4gVGhlIHNlbnNlIGlzIHRoZW4gdGhhdCB0aGUgcmlicyBhcmUgbm90IHRvIGJlIGxvdyBvbiB0aGUgZ3JvdW5kIHdoZW4gdGhlIGhvdW5kIGlzIGNvdWNoYW50LCBidXQgd2VsbCB0dWNrZWQgdXAgYmVoaW5kLiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDPgOG9t8+AzrHOvSDOss6xzrjOteG9t86xz4I8L2ZvcmVpZ24+LCDigJxkZWVwIHRocm91Z2hvdXQs4oCdIHdvdWxkIGFwcGx5IHRvIHRoZSBkZXB0aCBmcm9tIHdhbGwgdG8gd2FsbCwgYW5kIHRoZSBtZWFuaW5nIHdvdWxkIGJlIHRoYXQgdGhlIHJpYnMgYXJlIHRvIGNvbnRyYWN0IHRvd2FyZHMgdGhlIGZsYW5rcy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiwgd2l0aG91dCBmb2xkcyBpbiB0aGUgY29hdCB0b3dhcmRzIHRoZSBsb2lucy48L25vdGU+OyB0aGUgdW5kZXIgcGFydCBvZiB0aGUgYmVsbHkgaXRzZWxmIHNsaW07IHRoZSB0YWlsIGxvbmcsIHN0cmFpZ2h0IGFuZCB0aGluOyB0aGUgdGhpZ2hzIGhhcmQ7IHRoZSBzaGFua3M8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+RnJvbSB0aGUgZWxib3dzIHRvIHRoZSBmZWV0Ljwvbm90ZT4gbG9uZywgcm91bmQgYW5kIHNvbGlkOyB0aGUgaGluZC1sZWdzIG11Y2ggbG9uZ2VyIHRoYW4gdGhlIGZvcmUtbGVncyBhbmQgc2xpZ2h0bHkgYmVudDsgdGhlIGZlZXQgcm91bmQuCjwvdHJhbnNsYXRpb24+"
translation['4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkhvdW5kcyBsaWtlIHRoZXNlIHdpbGwgYmUgc3Ryb25nIGluIGFwcGVhcmFuY2UsIGFnaWxlLCB3ZWxsLXByb3BvcnRpb25lZCwgYW5kIHNwZWVkeTsgYW5kIHRoZXkgd2lsbCBoYXZlIGEgamF1bnR5IGV4cHJlc3Npb24gYW5kIGEgZ29vZCBtb3V0aC4KPC90cmFuc2xhdGlvbj4="
translation['4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRyYWNraW5nIHRoZXkgc2hvdWxkIGdldCBvdXQgb2YgdGhlIGdhbWUgcGF0aHMgcXVpY2tseSwgaG9sZCB0aGVpciBoZWFkcyB3ZWxsIGRvd24gYW5kIGFzbGFudCwgc21pbGluZyB3aGVuIHRoZXkgZmluZCB0aGUgc2NlbnQgYW5kIGxvd2VyaW5nIHRoZWlyIGVhcnM7IHRoZW4gdGhleSBzaG91bGQgYWxsIGdvIGZvcndhcmQgdG9nZXRoZXIgYWxvbmcgdGhlIHRyYWlsIHRvd2FyZHMgdGhlIGZvcm0gY2lyY2xpbmcgZnJlcXVlbnRseSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QSBwYXJ0aWNpcGxlIHRvIGdvdmVybiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuuG9u866zrvOv8+Fz4Igz4DOv867zrvOv+G9us+CPC9mb3JlaWduPiBoYXMgZHJvcHBlZCBvdXQgb2YgdGhlIHRleHQuPC9ub3RlPiB3aXRoIGV5ZXMgY29udGludWFsbHkgb24gdGhlIG1vdmUgYW5kIHRhaWxzIHdhZ2dpbmcuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs664b27zrrOu86/z4XPgiDPgM6/zrvOu86/4b26z4I8L2ZvcmVpZ24+IGhhcyBkcm9wcGVkIG91dCBvZiB0aGUgdGV4dC48L3RyYW5zbGF0aW9uPg=="
translation['4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgdGhleSBhcmUgY2xvc2Ugb24gdGhlIGhhcmUsIHRoZXkgc2hvdWxkIGxldCB0aGUgaHVudHNtYW4ga25vdywgcXVpY2tlbmluZyB0aGUgcGFjZSBhbmQgc2hvd2luZyBtb3JlIGVtcGhhdGljIHNpZ25zIGJ5IHRoZWlyIGV4Y2l0ZW1lbnQsIG1vdmVtZW50cyBvZiB0aGUgaGVhZCBhbmQgZXllcywgY2hhbmdlcyBvZiBhdHRpdHVkZSwgYnkgbG9va2luZyB1cCBhbmQgbG9va2luZyBpbnRvIHRoZSBjb3ZlcnQgYW5kIHJldHVybmluZyBhZ2FpbiBhbmQgYWdhaW4gdG8gdGhlIGhhcmUncyBmb3JtLCBieSBsZWFwcyBmb3J3YXJkLCBiYWNrd2FyZCBhbmQgdG8gdGhlIHNpZGUsIGRpc3BsYXlzIG9mIHVuYWZmZWN0ZWQgYWdpdGF0aW9uIGFuZCBvdmVycG93ZXJpbmcgZGVsaWdodCBhdCBiZWluZyBuZWFyIHRoZSBoYXJlLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGV5IHNob3VsZCBwdXJzdWUgd2l0aCB1bnJlbWl0dGluZyB2aWdvdXIsIGdpdmluZyB0b25ndWUgYW5kIGJhcmtpbmcgZnJlZWx5LCBkb2dnaW5nIHRoZSBoYXJlJ3Mgc3RlcHMgd2hlcmV2ZXIgc2hlIGdvZXMuIFRoZXkgc2hvdWxkIGJlIGZhc3QgYW5kIGJyaWxsaWFudCBpbiB0aGUgY2hhc2UsIGZyZXF1ZW50bHkgY2FzdGluZyBhYm91dCBhbmQgZ2l2aW5nIHRvbmd1ZSBpbiB0aGUgcmlnaHQgZmFzaGlvbjsgYW5kIHRoZXkgc2hvdWxkIG5vdCBsZWF2ZSB0aGUgdHJhY2sgYW5kIGdvIGJhY2sgdG8gdGhlIGh1bnRzbWFuLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbG9uZyB3aXRoIHRoaXMgYXBwZWFyYW5jZSBhbmQgYmVoYXZpb3VyIHRoZXkgc2hvdWxkIGhhdmUgcGx1Y2ssIGtlZW4gbm9zZXMsIHNvdW5kIGZlZXQgYW5kIGdvb2QgY29hdHMuIFRoZXkgd2lsbCBiZSBwbHVja3kgaWYgdGhleSBkb24ndCBsZWF2ZSB0aGUgaHVudGluZy1ncm91bmQgd2hlbiB0aGUgaGVhdCBpcyBvcHByZXNzaXZlOyBrZWVuLW5vc2VkIGlmIHRoZXkgc21lbGwgdGhlIGhhcmUgb24gYmFyZSwgcGFyY2hlZCBhbmQgc3VubnkgZ3JvdW5kIGluIHRoZSBkb2cgZGF5czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgb2xkZXIgY29tbWVudGF0b3JzIGFyZSBwcm9iYWJseSByaWdodCBpbiB1bmRlcnN0YW5kaW5nIHRoZSBhbGx1c2lvbiB0byBiZSB0byB0aGUgRG9nLXN0YXIsIG5vdCB0byB0aGUgU3VuLjwvbm90ZT47IHNvdW5kIGluIHRoZSBmZWV0IGlmIGF0IHRoZSBzYW1lIHNlYXNvbiB0aGVpciBmZWV0IGFyZSBub3QgdG9ybiB0byBiaXRzIGR1cmluZyBhIHJ1biBpbiB0aGUgbW91bnRhaW5zOyB0aGV5IHdpbGwgaGF2ZSBhIGdvb2QgY29hdCBpZiB0aGUgaGFpciBpcyBmaW5lLCB0aGljayBhbmQgc29mdC4KPC90cmFuc2xhdGlvbj4="
translation['4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBjb2xvdXIgb2YgdGhlIGhvdW5kcyBzaG91bGQgbm90IGJlIGVudGlyZWx5IHRhd255LCBibGFjayBvciB3aGl0ZTsgZm9yIHRoaXMgaXMgbm90IGEgc2lnbiBvZiBnb29kIGJyZWVkaW5nOiBvbiB0aGUgY29udHJhcnksIHVuYnJva2VuIGNvbG91ciBpbmRpY2F0ZXMgYSB3aWxkIHN0cmFpbi4KPC90cmFuc2xhdGlvbj4="
translation['4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlNvIHRoZSB0YXdueSBhbmQgdGhlIGJsYWNrIGhvdW5kcyBzaG91bGQgc2hvdyBhIHBhdGNoIG9mIHdoaXRlIGFib3V0IHRoZSBmYWNlLCBhbmQgdGhlIHdoaXRlIGhvdW5kcyBhIHRhd255IHBhdGNoLiBBdCB0aGUgdG9wIG9mIHRoZSB0aGlnaHMgdGhlIGhhaXIgc2hvdWxkIGJlIHN0cmFpZ2h0IGFuZCB0aGljaywgYW5kIG9uIHRoZSBsb2lucyBhbmQgYXQgdGhlIGxvd2VyIGVuZCBvZiB0aGUgdGFpbCwgYnV0IGl0IHNob3VsZCBiZSBtb2RlcmF0ZWx5IHRoaWNrIGhpZ2hlciB1cC4KPC90cmFuc2xhdGlvbj4="
translation['4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyBhZHZpc2FibGUgdG8gdGFrZSB0aGUgaG91bmRzIHRvIHRoZSBtb3VudGFpbnMgb2Z0ZW4sIGJ1dCBsZXNzIGZyZXF1ZW50bHkgdG8gY3VsdGl2YXRlZCBsYW5kLiBGb3IgaW4gdGhlIG1vdW50YWlucyBpdCBpcyBwb3NzaWJsZSB0byB0cmFjayBhbmQgZm9sbG93IGEgaGFyZSB3aXRob3V0IGhpbmRyYW5jZSwgd2hlcmVhcyBpdCBpcyBpbXBvc3NpYmxlIHRvIGRvIGVpdGhlciBpbiBjdWx0aXZhdGVkIGxhbmQgb3dpbmcgdG8gdGhlIGdhbWUgcGF0aHMuCjwvdHJhbnNsYXRpb24+"
translation['4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgaXMgYWxzbyB3ZWxsIHRvIHRha2UgdGhlIGhvdW5kcyBvdXQgaW50byByb3VnaCBncm91bmQsIHdoZXRoZXIgdGhleSBmaW5kIGEgaGFyZSBvciBub3Q7IGZvciB0aGV5IGdldCBzb3VuZCBpbiB0aGUgZmVldCwgYW5kIGhhcmQgd29yayBpbiBzdWNoIGNvdW50cnkgaXMgZ29vZCBmb3IgdGhlaXIgYm9kaWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5JbiBzdW1tZXIgdGhleSBzaG91bGQgYmUgb3V0IHRpbGwgbWlkZGF5LCBpbiB3aW50ZXIgYXQgYW55IGhvdXIgb2YgdGhlIGRheSwgaW4gYXV0dW1uIGF0IGFueSB0aW1lIGV4Y2VwdCBtaWRkYXksIGFuZCBiZWZvcmUgZXZlbmluZyBkdXJpbmcgdGhlIHNwcmluZzsgZm9yIGF0IHRoZXNlIHRpbWVzIHRoZSB0ZW1wZXJhdHVyZSBpcyBtaWxkLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgc2NlbnQgb2YgdGhlIGhhcmUgbGllcyBsb25nIGluIHdpbnRlciBvd2luZyB0byB0aGUgbGVuZ3RoIG9mIHRoZSBuaWdodHMsIGFuZCBmb3IgYSBzaG9ydCB0aW1lIGluIHN1bW1lciBmb3IgdGhlIG9wcG9zaXRlIHJlYXNvbi4gSW4gdGhlIHdpbnRlciwgaG93ZXZlciwgdGhlcmUgaXMgbm8gc2NlbnQgaW4gdGhlIGVhcmx5IG1vcm5pbmcgd2hlbmV2ZXIgdGhlcmUgaXMgYSB3aGl0ZSBmcm9zdCBvciB0aGUgZWFydGggaXMgZnJvemVuIGhhcmQuIEZvciBib3RoIHdoaXRlIGFuZCBibGFjayBmcm9zdCBob2xkIGhlYXQ7IHNpbmNlIHRoZSBvbmUgZHJhd3MgaXQgb3V0IGJ5IGl0cyBvd24gc3RyZW5ndGgsIGFuZCB0aGUgb3RoZXIgY29uZ2VhbHMgaXQuCjwvdHJhbnNsYXRpb24+"
translation['5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBob3VuZHMnIG5vc2VzLCB0b28sIGFyZSBudW1iZWQgYnkgdGhlIGNvbGQsIGFuZCB0aGV5IGNhbm5vdCBzbWVsbCB3aGVuIHRoZSB0cmFja3MgYXJlIGluIHN1Y2ggYSBzdGF0ZSB1bnRpbCB0aGUgdHJhY2tzIHRoYXcgaW4gdGhlIHN1biBvciBhcyBkYXkgYWR2YW5jZXMuIFRoZW4gdGhlIGRvZ3MgY2FuIHNtZWxsIGFuZCB0aGUgc2NlbnQgcmV2aXZlcy4KPC90cmFuc2xhdGlvbj4="
translation['5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkEgaGVhdnkgZGV3LCBhZ2Fpbiwgb2JsaXRlcmF0ZXMgc2NlbnQgYnkgY2FycnlpbmcgaXQgZG93bndhcmRzOyBhbmQgc3Rvcm1zLCBvY2N1cnJpbmcgYWZ0ZXIgYSBsb25nIGludGVydmFsLCBkcmF3IHNtZWxscyBmcm9tIHRoZSBncm91bmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byEzrPOtc65zr0gz4Thv4bPgiDOs+G/hs+CPC9mb3JlaWduPiBoYXMgbm8gcGFyYWxsZWwgaW4gR3JlZWsgcHJvc2U6IHBlcmhhcHMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQzro8L2ZvcmVpZ24+IGhhcyBmYWxsZW4gb3V0IG9yIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+E4b20zr0gzrPhv4bOvTwvZm9yZWlnbj4gc2hvdWxkIGJlIHJlYWQuPC9ub3RlPiBhbmQgbWFrZSB0aGUgZWFydGggYmFkIGZvciBzY2VudCB1bnRpbCBpdCBkcmllcy4gU291dGggd2luZHMgc3BvaWwgc2NlbnQsIGJlY2F1c2UgdGhlIG1vaXN0dXJlIHNjYXR0ZXJzIGl0LCBidXQgbm9ydGggd2luZHMgY29uY2VudHJhdGUgYW5kIHByZXNlcnZlIGl0LCBpZiBpdCBoYXMgbm90IGJlZW4gcHJldmlvdXNseSBkaXNzb2x2ZWQuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8hM6zzrXOuc69IM+E4b+Gz4IgzrPhv4bPgjwvZm9yZWlnbj4gaGFzIG5vIHBhcmFsbGVsIGluIEdyZWVrIHByb3NlOiBwZXJoYXBzIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM66PC9mb3JlaWduPiBoYXMgZmFsbGVuIG91dCBvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG9tM69IM6z4b+Gzr08L2ZvcmVpZ24+IHNob3VsZCBiZSByZWFkLjwvdHJhbnNsYXRpb24+"
translation['5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkhlYXZ5IHNob3dlcnMgZHJvd24gaXQsIGFuZCBzbyBkb2VzIGxpZ2h0IHJhaW4sIGFuZCB0aGUgbW9vbiBkZWFkZW5zIGl0IGJ5IGl0cyB3YXJtdGgsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk9yIOKAnGRlYWRlbnMgdGhlIGhlYXTigJ0gaWYgd2UgcmVhZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG9uCDOuM61z4HOvOG9uc69PC9mb3JlaWduPiB3aXRoIEdlc25lci4gQnV0IHRoZSBHcmVla3MgZGlkIGF0dHJpYnV0ZSBoZWF0IHRvIHRoZSBtb29uLjwvbm90ZT4gZXNwZWNpYWxseSB3aGVuIGF0IHRoZSBmdWxsLiBTY2VudCBpcyBtb3N0IGlycmVndWxhciBhdCB0aGF0IHRpbWUsIGZvciB0aGUgaGFyZXMsIGVuam95aW5nIHRoZSBsaWdodCwgZmxpbmcgdGhlbXNlbHZlcyBoaWdoIGluIHRoZSBhaXIgYW5kIGp1bXAgYSBsb25nIHdheSwgZnJvbGlja2luZyB3aXRoIG9uZSBhbm90aGVyOyBhbmQgaXQgYmVjb21lcyBjb25mdXNlZCB3aGVuIGZveGVzIGhhdmUgY3Jvc3NlZCBpdC4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4ThvbggzrjOtc+BzrzhvbnOvTwvZm9yZWlnbj4gd2l0aCBHZXNuZXIuIEJ1dCB0aGUgR3JlZWtzIGRpZCBhdHRyaWJ1dGUgaGVhdCB0byB0aGUgbW9vbi48L3RyYW5zbGF0aW9uPg=="
translation['5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlNwcmluZyB3aXRoIGl0cyBnZW5pYWwgdGVtcGVyYXR1cmUgeWllbGRzIGEgY2xlYXIgc2NlbnQsIGV4Y2VwdCB3aGVyZSB0aGUgZ3JvdW5kIGlzIHN0dWRkZWQgd2l0aCBmbG93ZXJzIGFuZCBoYW1wZXJzIHRoZSBob3VuZHMgYnkgbWluZ2xpbmcgdGhlIG9kb3VycyBvZiB0aGUgZmxvd2VycyB3aXRoIGl0LiBJbiBzdW1tZXIgaXQgaXMgdGhpbiBhbmQgZmFpbnQsIGZvciB0aGUgZ3JvdW5kLCBiZWluZyBiYWtlZCwgb2JsaXRlcmF0ZXMgd2hhdCB3YXJtdGggaXQgcG9zc2Vzc2VzLCB3aGljaCBpcyB0aGluOyBhbmQgdGhlIGhvdW5kcycgbm9zZXMgYXJlIG5vdCBzbyBnb29kIGF0IHRoYXQgc2Vhc29uLCBiZWNhdXNlIHRoZWlyIGJvZGllcyBhcmUgcmVsYXhlZC4gSW4gdGhlIGF1dHVtbiBpdCBpcyB1bmltcGVkZWQ7IGZvciB0aGUgY3VsdGl2YXRlZCBjcm9wcyBoYXZlIGJlZW4gaGFydmVzdGVkIGFuZCB0aGUgd2VlZHMgaGF2ZSB3aXRoZXJlZCwgc28gdGhhdCB0aGUgb2RvdXJzIG9mIHRoZSBoZXJiYWdlIGRvIG5vdCBjYXVzZSB0cm91YmxlIGJ5IG1pbmdsaW5nIHdpdGggaXQuCjwvdHJhbnNsYXRpb24+"
translation['5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkluIHdpbnRlciBhbmQgc3VtbWVyIGFuZCBhdXR1bW4gdGhlIHNjZW50IGxpZXMgc3RyYWlnaHQgaW4gdGhlIG1haW4uIEluIHNwcmluZyBpdCBpcyBjb21wbGljYXRlZDsgZm9yIHRob3VnaCB0aGUgYW5pbWFsIGNvdXBsZXMgYXQgYWxsIHRpbWVzLCBpdCBkb2VzIHNvIGVzcGVjaWFsbHkgYXQgdGhpcyBzZWFzb247PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSDigJxNYXJjaCBoYXJlLuKAnTwvbm90ZT4gc28gaW5zdGluY3QgcHJvbXB0cyB0aGVtIHRvIHJvYW0gYWJvdXQgdG9nZXRoZXIsIGFuZCB0aGlzIGlzIHRoZSByZXN1bHQgdGhleSBwcm9kdWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgc2NlbnQgbGVmdCBieSB0aGUgaGFyZSBpbiBnb2luZyB0byBoZXIgZm9ybSBsYXN0cyBsb25nZXIgdGhhbiB0aGUgc2NlbnQgb2YgYSBydW5uaW5nIGhhcmUuIEZvciBvbiB0aGUgd2F5IHRvIHRoZSBmb3JtIHRoZSBoYXJlIGtlZXBzIHN0b3BwaW5nLCB3aGVyZWFzIHdoZW4gb24gdGhlIHJ1biBzaGUgZ29lcyBmYXN0OyBjb25zZXF1ZW50bHkgdGhlIGdyb3VuZCBpcyBwYWNrZWQgd2l0aCBpdCBpbiB0aGUgb25lIGNhc2UsIGJ1dCBpbiB0aGUgb3RoZXIgaXMgbm90IGZpbGxlZCB3aXRoIGl0LiBJbiBjb3ZlcnRzIGl0IGlzIHN0cm9uZ2VyIHRoYW4gaW4gb3BlbiBncm91bmQsIGJlY2F1c2Ugc2hlIHRvdWNoZXMgbWFueSBvYmplY3RzIHdoaWxlIHJ1bm5pbmcgYWJvdXQgYW5kIHNpdHRpbmcgdXAuCjwvdHJhbnNsYXRpb24+"
translation['5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGV5IGZpbmQgYSByZXN0aW5nLXBsYWNlIHdoZXJlIHRoZXJlIGlzIGFueXRoaW5nIGdyb3dpbmcgb3IgbHlpbmcgb24gdGhlIGdyb3VuZCwgdW5kZXJuZWF0aCBhbnl0aGluZywgb24gdGhlIHRvcCBvZiB0aGUgb2JqZWN0cywgaW5zaWRlLCBhbG9uZ3NpZGUsIHdlbGwgYXdheSBvciBxdWl0ZSBuZWFyIG9yIGZhaXJseSBuZWFyOyBvY2Nhc2lvbmFsbHkgZXZlbiBpbiB0aGUgc2VhPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSDigJxUaGUgSGFyZSzigJ0gPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RnVyIGFuZCBGZWF0aGVyPC90aXRsZT4gU2VyaWVzLCBwLiAzOCBmLjwvbm90ZT4gYnkgc3ByaW5naW5nIG9uIHRvIGFueXRoaW5nIHNoZTx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkZ1ciBhbmQgRmVhdGhlcjwvdGl0bGU+IFNlcmllcywgcC4gMzggZi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGZsdWN0dWF0aW9uIGJldHdlZW4gcGx1cmFsIGFuZCBzaW5ndWxhciBpcyBpbiB0aGUgR3JlZWsuPC9ub3RlPiBjYW4gcmVhY2gsIG9yIGluIGZyZXNoIHdhdGVyLCBpZiB0aGVyZSBpcyBhbnl0aGluZyBzdGlja2luZyBvdXQgb3IgZ3Jvd2luZyBpbiBpdCwgdGhlIGhhcmUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBkaXN0aW5jdGlvbiBpcyBub3QsIGFzIG9mdGVuIHN1cHBvc2VkLCBiZXR3ZWVuIGhhcmVzIHdpdGggZGlmZmVyZW50IDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPmhhYml0czwvdGl0bGU+ICjigJxzcXVhdHRlcnMs4oCdIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs614b2Rzr3OseG/ls6/zrksPC9mb3JlaWduPiBhbmQg4oCccm9hbWVycyzigJ0gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTPgc6/zrzOseG/ls6/zrk8L2ZvcmVpZ24+4oCUYSBub24tZXhpc3RlbnQgZGlzdGluY3Rpb24pLCBidXQgbWVyZWx5IGJldHdlZW4gdGhlIGJlaGF2aW91ciBvZiBhbGwgaGFyZXMgaW4gZGlmZmVyZW50IGNpcmN1bXN0YW5jZXMuIFRoZSB1bnVzdWFsLCBidXQgbm90IHVuZXhhbXBsZWQsIHBvc2l0aW9uIG9mIHRoZSBhcnRpY2xl4oCUPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2BPC9mb3JlaWduPiBhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/hvLE8L2ZvcmVpZ24+4oCUaGFzIG1pc2xlZCBpbnRlcnByZXRlcnMuIEJsYW5lIHNhdyB0aGUgdHJ1ZSBtZWFuaW5nLjwvbm90ZT4gd2hlbiBnb2luZyB0byBoZXIKPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+aGFiaXRzPC90aXRsZT4gKOKAnHNxdWF0dGVycyzigJ0gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrXhvZHOvc6x4b+Wzr/OuSw8L2ZvcmVpZ24+IGFuZCDigJxyb2FtZXJzLOKAnSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtM+Bzr/OvM6x4b+Wzr/OuTwvZm9yZWlnbj7igJRhIG5vbi1leGlzdGVudCBkaXN0aW5jdGlvbiksIGJ1dCBtZXJlbHkgYmV0d2VlbiB0aGUgYmVoYXZpb3VyIG9mIGFsbCBoYXJlcyBpbiBkaWZmZXJlbnQgY2lyY3Vtc3RhbmNlcy4gVGhlIHVudXN1YWwsIGJ1dCBub3QgdW5leGFtcGxlZCwgcG9zaXRpb24gb2YgdGhlIGFydGljbGXigJQ8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvYE8L2ZvcmVpZ24+IGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ov+G8sTwvZm9yZWlnbj7igJRoYXMgbWlzbGVkIGludGVycHJldGVycy4gQmxhbmUgc2F3IHRoZSB0cnVlIG1lYW5pbmcuPC90cmFuc2xhdGlvbj4="
translation['5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPmZvcm0gZ2VuZXJhbGx5IGNob29zaW5nIGEgc2hlbHRlcmVkIHBsYWNlIGZvciBpdCBpbiBjb2xkIHdlYXRoZXIgYW5kIGEgY29vbCBvbmUgaW4gaG90LCBidXQgaW4gc3ByaW5nIGFuZCBhdXR1bW4gYSBwbGFjZSBleHBvc2VkIHRvIHRoZSBzdW47IGJ1dCBoYXJlcyBvbiB0aGUgcnVuIGRvIG5vdCBkbyB0aGF0LCBiZWNhdXNlIHRoZXkgYXJlIHNjYXJlZCBieSB0aGUgaG91bmRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHNoZSBzaXRzLCBzaGUgcHV0cyB0aGUgaGluZC1sZWdzIHVuZGVyIHRoZSBmbGFua3MsIGFuZCBtb3N0IGNvbW1vbmx5IGtlZXBzIHRoZSBmb3JlLWxlZ3MgY2xvc2UgdG9nZXRoZXIgYW5kIGV4dGVuZGVkLCByZXN0aW5nIHRoZSBjaGluIG9uIHRoZSBlbmRzIG9mIHRoZSBmZWV0LCBhbmQgc3ByZWFkaW5nIHRoZSBlYXJzIG92ZXIgdGhlIHNob3VsZGVyLWJsYWRlcywgc28gdGhhdDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JIGRvIG5vdCB0aGluayB0aGF0IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs614by3z4TOsSDOtOG9sjwvZm9yZWlnbj4gY2FuIG1lYW4gdGhpcywgYW5kIHN1c3BlY3QgdGhhdCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OteG8t8+EzrE8L2ZvcmVpZ24+IGlzIHdyb25nLjwvbm90ZT4gc2hlIGNvdmVycyB0aGUgc29mdCBwYXJ0cy4gVGhlIGhhaXIgdG9vLCBiZWluZyB0aGljayBhbmQgc29mdCwgc2VydmVzIGFzIGEgcHJvdGVjdGlvbi4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrXhvLfPhM6xIM604b2yPC9mb3JlaWduPiBjYW4gbWVhbiB0aGlzLCBhbmQgc3VzcGVjdCB0aGF0IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs614by3z4TOsTwvZm9yZWlnbj4gaXMgd3JvbmcuPC90cmFuc2xhdGlvbj4="
translation['5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGF3YWtlIHNoZSBibGlua3MgaGVyIGV5ZWxpZHM7IGJ1dCB3aGVuIHNoZSBpcyBhc2xlZXAgdGhlIGV5ZWxpZHMgYXJlIHdpZGUgb3BlbiBhbmQgbW90aW9ubGVzcywgYW5kIHRoZSBleWVzIHN0aWxsLiBTaGUgbW92ZXMgaGVyIG5vc3RyaWxzIGNvbnRpbnVhbGx5IHdoZW4gc2xlZXBpbmcsIGJ1dCBsZXNzIGZyZXF1ZW50bHkgd2hlbiBhd2FrZS4KPC90cmFuc2xhdGlvbj4="
translation['5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSBncm91bmQgaXMgYnVyc3Rpbmcgd2l0aCB2ZWdldGF0aW9uIHRoZXkgZnJlcXVlbnQgdGhlIGZpZWxkcyByYXRoZXIgdGhhbiB0aGUgbW91bnRhaW5zLiBXaGVyZXZlciBzaGUgbWF5IGJlIHNoZSByZW1haW5zIHRoZXJlIHdoZW4gdHJhY2tlZCwgZXhjZXB0IHdoZW4gc2hlIGlzIHN1ZGRlbmx5IGFsYXJtZWQgYXQgbmlnaHQ7IGluIHdoaWNoIGNhc2Ugc2hlIG1vdmVzIG9mZi4KPC90cmFuc2xhdGlvbj4="
translation['5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGFuaW1hbCBpcyBzbyBwcm9saWZpYyB0aGF0IGF0IHRoZSBzYW1lIHRpbWUgc2hlIGlzIHJlYXJpbmcgb25lIGxpdHRlciwgc2hlIHByb2R1Y2VzIGFub3RoZXIgYW5kIHNoZSBpcyBwcmVnbmFudC4gVGhlIHNjZW50IG9mIHRoZSBsaXR0bGUgbGV2ZXJldHMgaXMgc3Ryb25nZXIgdGhhbiB0aGF0IG9mIHRoZSBiaWcgb25lczsgZm9yIHdoaWxlIHRoZWlyIGxpbWJzIGFyZSBzdGlsbCBzb2Z0IHRoZXkgZHJhZyB0aGUgd2hvbGUgYm9keSBvbiB0aGUgZ3JvdW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5TcG9ydHNtZW4sIGhvd2V2ZXIsIGxlYXZlIHRoZSB2ZXJ5IHlvdW5nIG9uZXMgdG8gdGhlIGdvZGRlc3MuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFydGVtaXMuPC9ub3RlPiBZZWFybGluZ3MgZ28gdmVyeSBmYXN0IGluIHRoZSBmaXJzdCBydW4sIGJ1dCB0aGVuIGZsYWcsIGJlaW5nIGFnaWxlLCBidXQgd2Vhay4KPC90cmFuc2xhdGlvbj4="
translation['5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RmluZCB0aGUgaGFyZSdzIHRyYWNrIGJ5IGJlZ2lubmluZyB3aXRoIHRoZSBob3VuZHMgaW4gdGhlIGN1bHRpdmF0ZWQgbGFuZHMgYW5kIGdyYWR1YWxseSB3b3JraW5nIGRvd253YXJkcy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGN1bHRpdmF0ZWQgbGFuZCBpcyBvbiB0aGUgbG93ZXIgc2xvcGVzIG9mIHRoZSBtb3VudGFpbnMuPC9ub3RlPiBUbyB0cmFjayB0aG9zZSB0aGF0IGRvIG5vdCBjb21lIGludG8gY3VsdGl2YXRlZCBsYW5kLCBzZWFyY2g8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlcmUgaXMgZXZpZGVudGx5IGEgZ2FwIGluIHRoZSBHcmVlayBiZWZvcmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4TOv+G9us+CIM67zrXOuc684b+2zr3Osc+CPC9mb3JlaWduPiwgd2hpY2ggaGFzIG5vdGhpbmcgdG8gZ292ZXJuIGl0Ljwvbm90ZT4gdGhlIG1lYWRvd3MsIHZhbGxleXMsIHN0cmVhbXMsIHN0b25lcyBhbmQgd29vZHkgcGxhY2VzLiBJZiBzaGUgbW92ZXMgb2ZmLCBkb24ndCBzaG91dCwgb3IgdGhlIGhvdW5kcyBtYXkgZ2V0IHdpbGQgd2l0aCBleGNpdGVtZW50IGFuZCBmYWlsIHRvIHJlY29nbmlzZSB0aGUgdHJhY2tzLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM6/4b26z4IgzrvOtc65zrzhv7bOvc6xz4I8L2ZvcmVpZ24+LCB3aGljaCBoYXMgbm90aGluZyB0byBnb3Zlcm4gaXQuPC90cmFuc2xhdGlvbj4="
translation['5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5IYXJlcyB3aGVuIGZvdW5kIGJ5IGhvdW5kcyBhbmQgcHVyc3VlZCBzb21ldGltZXMgY3Jvc3MgYnJvb2tzIGFuZCBkb3VibGUgYmFjayBhbmQgc2xpcCBpbnRvIGd1bGxpZXMgb3IgaG9sZXMuIFRoZSBmYWN0IGlzIHRoZXkgYXJlIHRlcnJpZmllZCBub3Qgb25seSBvZiB0aGUgaG91bmRzLCBidXQgb2YgZWFnbGVzIGFzIHdlbGw7IGZvciB0aGV5IGFyZSBhcHQgdG8gYmUgc25hdGNoZWQgdXAgd2hpbGUgY3Jvc3NpbmcgaGlsbG9ja3MgYW5kIGJhcmUgZ3JvdW5kIHVudGlsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk5vdCDigJxzbyBsb25nIGFz4oCdOyBjZi4gMTQuPC9ub3RlPiB0aGV5IGFyZSB5ZWFybGluZ3MsIGFuZCB0aGUgYmlnZ2VyIG9uZXMgYXJlIHJ1biBkb3duIGFuZCBjYXVnaHQgYnkgdGhlIGhvdW5kcy4KPC90cmFuc2xhdGlvbj4="
translation['5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHN3aWZ0ZXN0IGFyZSB0aG9zZSB0aGF0IGZyZXF1ZW50IG1vdW50YWluczsgdGhvc2Ugb2YgdGhlIHBsYWluIGFyZSBub3Qgc28gc3BlZWR5OyBhbmQgdGhvc2Ugb2YgdGhlIG1hcnNoZXMgYXJlIHRoZSBzbG93ZXN0LiBUaG9zZSB0aGF0IHJvYW0gb3ZlciBhbnkgc29ydCBvZiBjb3VudHJ5IGFyZSBkaWZmaWN1bHQgdG8gY2hhc2UsIHNpbmNlIHRoZXkga25vdyB0aGUgc2hvcnQgY3V0cy4gVGhleSBydW4gbW9zdGx5IHVwaGlsbDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIHdoZW4gcHVyc3VlZC48L25vdGU+IG9yIG9uIHRoZSBsZXZlbCwgbGVzcyBmcmVxdWVudGx5IGluIHVuZXZlbiBncm91bmQsIGFuZCB2ZXJ5IHNlbGRvbSBkb3duaGlsbC4KPC90cmFuc2xhdGlvbj4="
translation['5.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGJlaW5nIHB1cnN1ZWQgdGhleSBhcmUgbW9zdCBjb25zcGljdW91cyBhY3Jvc3MgZ3JvdW5kIHRoYXQgaGFzIGJlZW4gYnJva2VuIHVwLCBpZiB0aGV5IGhhdmUgc29tZSByZWQgaW4gdGhlaXIgY29hdHMsIG9yIGFjcm9zcyBzdHViYmxlLCBvd2luZyB0byB0aGUgc2hhZG93IHRoZXkgY2FzdC4gVGhleSBhcmUgYWxzbyBjb25zcGljdW91cyBpbiBnYW1lIHBhdGhzIGFuZCBvbiByb2FkcyBpZiB0aGVzZSBhcmUgbGV2ZWwsIHNpbmNlIHRoZSBicmlnaHQgY29sb3VyIG9mIHRoZWlyIGNvYXRzIHNob3dzIHVwIGluIHRoZSBsaWdodC4gQnV0IHdoZW4gdGhlaXIgbGluZSBvZiByZXRyZWF0IGlzIGFtb25nc3Qgc3RvbmVzLCBpbiB0aGUgbW91bnRhaW5zLCBvdmVyIHJvY2t5IG9yIHRoaWNrbHkgd29vZGVkIGdyb3VuZCB0aGV5IGNhbm5vdCBiZSBzZWVuIG93aW5nIHRvIHRoZSBzaW1pbGFyaXR5IG9mIGNvbG91cmluZy4KPC90cmFuc2xhdGlvbj4="
translation['5.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgYXJlIHdlbGwgYWhlYWQgb2YgdGhlIGhvdW5kcywgdGhleSB3aWxsIHN0b3AsIGFuZCBzaXR0aW5nIHVwIHdpbGwgcmFpc2UgdGhlbXNlbHZlcyBhbmQgbGlzdGVuIGZvciB0aGUgYmF5aW5nIG9yIHRoZSBmb290ZmFsbCBvZiB0aGUgaG91bmRzIGFueXdoZXJlIG5lYXI7IGFuZCBzaG91bGQgdGhleSBoZWFyIHRoZSBzb3VuZCBvZiB0aGVtIGZyb20gYW55IHF1YXJ0ZXIsIHRoZXkgbWFrZSBvZmYuCjwvdHJhbnNsYXRpb24+"
translation['5.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5PY2Nhc2lvbmFsbHksIGV2ZW4gd2hlbiB0aGV5IGhlYXIgbm8gc291bmQsIHNvbWUgZmFuY3kgb3IgY29udmljdGlvbiBwcm9tcHRzIHRoZW0gdG8ganVtcCBoaXRoZXIgYW5kIHRoaXRoZXIgcGFzdCBhbmQgdGhyb3VnaCB0aGUgc2FtZSBvYmplY3RzLCBtaXhpbmcgdGhlIHRyYWNrcyBhcyB0aGV5IHJldHJlYXQuCjwvdHJhbnNsYXRpb24+"
translation['5.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbG9uZ2VzdCBydW5uZXJzIGFyZSB0aG9zZSB0aGF0IGFyZSBmb3VuZCBvbiBiYXJlIGxhbmQsIGJlY2F1c2UgdGhleSBhcmUgZXhwb3NlZCB0byB2aWV3OyB0aGUgc2hvcnRlc3QsIHRob3NlIGZvdW5kIGluIHRoaWNrIGNvdmVycywgc2luY2UgdGhlIGRhcmtuZXNzIGhpbmRlcnMgdGhlaXIgZmxpZ2h0LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSBhcmUgdHdvIHNwZWNpZXMgb2YgaGFyZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGNvbW1vbiBoYXJlIGFuZCBhIHNtYWxsZXIgdmFyaWV0eSBvZiB0aGUgc2FtZTsgd2hpY2ggaXMgc2FpZCB0byBiZSDigJxtb3JlIGJyaW5kbGVkIGluIGNvbG91cuKAnSB0aGFuIHRoZSBsYXJnZXIga2luZC4gU2VlIOKAnFRoZSBIYXJl4oCdIGluIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkZ1ciBhbmQgRmVhdGhlcjwvdGl0bGU+IFNlcmllcywgcC41Ljwvbm90ZT4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RnVyIGFuZCBGZWF0aGVyPC90aXRsZT4gU2VyaWVzLCBwLjUuPC90cmFuc2xhdGlvbj4="
translation['5.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbGFyZ2UgYXJlIGRhcmsgYnJvd24sIGFuZCB0aGUgd2hpdGUgcGF0Y2ggb24gdGhlIGZvcmVoZWFkIGlzIGxhcmdlOyB0aGUgc21hbGxlciBhcmUgY2hlc3RudXQsIHdpdGggYSBzbWFsbCB3aGl0ZSBwYXRjaC4KPC90cmFuc2xhdGlvbj4="
translation['5.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbGFyZ2VyIGhhdmUgc3BvdHMgcm91bmQgdGhlIHNjdXQsIHRoZSBzbWFsbGVyIGF0IHRoZSBzaWRlIG9mIGl0LiBUaGUgZXllcyBpbiB0aGUgbGFyZ2Ugc3BlY2llcyBhcmUgYmx1ZSwgaW4gdGhlIHNtYWxsIGdyZXkuIFRoZSBibGFjayBhdCB0aGUgdGlwIG9mIHRoZSBlYXIgaXMgYnJvYWQgaW4gdGhlIG9uZSBzcGVjaWVzLCBuYXJyb3cgaW4gdGhlIG90aGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgc21hbGxlciBhcmUgZm91bmQgaW4gbW9zdCBvZiB0aGUgaXNsYW5kcywgYm90aCBkZXNlcnQgYW5kIGluaGFiaXRlZC4gVGhleSBhcmUgbW9yZSBwbGVudGlmdWwgaW4gdGhlIGlzbGFuZHMgdGhhbiBvbiB0aGUgbWFpbmxhbmQsIGZvciBpbiB0aGUgbWFqb3JpdHkgb2YgdGhlc2UgdGhlcmUgYXJlIG5vIGZveGVzIHRvIGF0dGFjayBhbmQgY2Fycnkgb2ZmIHRoZSBoYXJlcyBhbmQgdGhlaXIgeW91bmc7IG5vciBlYWdsZXMsIGZvciB0aGV5IGhhdW50IGJpZyBtb3VudGFpbnMgcmF0aGVyIHRoYW4gc21hbGwsIGFuZCB0aGUgbW91bnRhaW5zIGluIHRoZSBpc2xhbmRzLCBnZW5lcmFsbHkgc3BlYWtpbmcsIGFyZSByYXRoZXIgc21hbGwuCjwvdHJhbnNsYXRpb24+"
translation['5.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5IdW50ZXJzIHNlbGRvbSB2aXNpdCB0aGUgZGVzZXJ0IGlzbGFuZHMsIGFuZCB0aGVyZSBhcmUgZmV3IHBlb3BsZSBpbiB0aGUgaW5oYWJpdGVkIG9uZXMsIGFuZCBtb3N0IG9mIHRoZW0gYXJlIG5vdCBzcG9ydHNtZW47IGFuZCBpZiBhbiBpc2xhbmQgaXMgY29uc2VjcmF0ZWQsIG9uZSBtYXkgbm90IGV2ZW4gdGFrZSBkb2dzIGludG8gaXQuIFNpbmNlLCB0aGVuLCBidXQgZmV3IG9mIHRoZSBvbGQgaGFyZXMgYW5kIHRoZSBsZXZlcmV0cyB0aGF0IHRoZXkgcHJvZHVjZSBhcmUgZXh0ZXJtaW5hdGVkIGJ5IGh1bnRpbmcsIHRoZXkgYXJlIGJvdW5kIHRvIGJlIGFidW5kYW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHNpZ2h0IG9mIHRoZSBoYXJlIGlzIG5vdCBrZWVuIGZvciBzZXZlcmFsIHJlYXNvbnMuIFRoZSBleWVzIGFyZSBwcm9taW5lbnQ7IHRoZSBsaWRzIGFyZSB0b28gc21hbGwgYW5kIGRvIG5vdCBnaXZlIHByb3RlY3Rpb24gdG8gdGhlIHB1cGlsczsgY29uc2VxdWVudGx5IHRoZSB2aXNpb24gaXMgd2VhayBhbmQgYmx1cnJlZC4KPC90cmFuc2xhdGlvbj4="
translation['5.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BZGRlZCB0byB0aGlzLCB0aG91Z2ggdGhlIGFuaW1hbCBzcGVuZHMgbXVjaCB0aW1lIGFzbGVlcCwgaXQgZ2V0cyBubyBiZW5lZml0IGZyb20gdGhhdCwgc28gZmFyIGFzIHNlZWluZyBnb2VzLiBJdHMgc3BlZWQsIHRvbywgYWNjb3VudHMgaW4gbm8gc21hbGwgZGVncmVlIGZvciBpdHMgZGltIHNpZ2h0LiBGb3IgaXQgZ2xhbmNlcyBhdCBhbiBvYmplY3QgYW5kIGlzIHBhc3QgaXQgaW4gYSBmbGFzaCwgYmVmb3JlIHJlYWxpc2luZyBpdHMgbmF0dXJlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhvc2UgdGVycm9ycywgdGhlIGhvdW5kcywgY2xvc2UgYmVoaW5kIHRoZW0gd2hlbiB0aGV5IGFyZSBwdXJzdWVkIGNvbWJpbmUgd2l0aCB0aGVzZSBjYXVzZXMgdG8gcm9iIHRoZW0gb2YgdGhlaXIgd2l0cy4gVGhlIGNvbnNlcXVlbmNlIGlzIHRoYXQgdGhlIGhhcmUgYnVtcHMgYWdhaW5zdCBtYW55IG9ic3RhY2xlcyB1bmF3YXJlcyBhbmQgcGx1bmdlcyBpbnRvIHRoZSBuZXQuCjwvdHJhbnNsYXRpb24+"
translation['5.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5JZiBzaGUgcmFuIHN0cmFpZ2h0LCBzaGUgd291bGQgc2VsZG9tIG1lZXQgd2l0aCB0aGlzIG1pc2hhcC4gQnV0IGluc3RlYWQgb2YgdGhhdCBzaGUgY29tZXMgcm91bmQgYW5kIGh1Z3MgdGhlIHBsYWNlIHdoZXJlIHNoZSB3YXMgYm9ybiBhbmQgYnJlZCwgYW5kIHNvIGlzIGNhdWdodC4gSW4gYSBmYWlyIHJ1biBzaGUgaXMgc2VsZG9tIGJlYXRlbiBieSB0aGUgaG91bmRzIG93aW5nIHRvIGhlciBzcGVlZC4gVGhvc2UgdGhhdCBhcmUgY2F1Z2h0IGFyZSBiZWF0ZW4gaW4gc3BpdGUgb2YgdGhlaXIgbmF0dXJhbCBjaGFyYWN0ZXJpc3RpY3MgdGhyb3VnaCBtZWV0aW5nIHdpdGggYW4gYWNjaWRlbnQuIEluZGVlZCwgdGhlcmUgaXMgbm90aGluZyBpbiB0aGUgd29ybGQgb2YgZXF1YWwgc2l6ZSB0byBtYXRjaCB0aGUgaGFyZSBhcyBhIHBpZWNlIG9mIG1lY2hhbmlzbS4gRm9yIHRoZSB2YXJpb3VzIHBhcnRzIHRoYXQgbWFrZSB1cCBoZXIgYm9keSBhcmUgZm9ybWVkIGFzIGZvbGxvd3MuCjwvdHJhbnNsYXRpb24+"
translation['5.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGhlYWQgaXMgbGlnaHQsIHNtYWxsLCBkcm9vcGluZywgbmFycm93IGF0IHRoZSBmcm9udDsgdGhlIGVhcnMgYXJlIHVwcmlnaHQ7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPuKAnFRoZSBlYXJzIGFyZSB1cHJpZ2h04oCdIGlzIG5vdCBpbiB0aGUgTVNTLiwgYW5kIGlzIGluc2VydGVkIGZyb20gUG9sbHV4LiBBcyBvdXIgYXV0aG9yIGlzIGVudW1lcmF0aW5nIHRob3NlIGNoYXJhY3RlcmlzdGljcyBvZiB0aGUgaGFyZSB0aGF0IG1ha2UgZm9yIHNwZWVkLCBpdCBpcyBub3QgcXVpdGUgY2VydGFpbiB0aGF0IHRoZSB3b3JkcyBhcmUgaGlzLCBidXQgc2VlIDMzLjwvbm90ZT4gdGhlIG5lY2sgaXMgdGhpbiwgcm91bmQsIG5vdCBzdGlmZiwgYW5kIGZhaXJseSBsb25nOyB0aGUgc2hvdWxkZXItYmxhZGVzIGFyZSBzdHJhaWdodCBhbmQgZnJlZSBhdCB0aGUgdG9wOyB0aGUgZm9yZS1sZWdzIGFyZSBhZ2lsZSBhbmQgY2xvc2UgdG9nZXRoZXI7IHRoZSBjaGVzdCBpcyBub3QgYnJvYWQ7IHRoZSByaWJzIGFyZSBsaWdodCBhbmQgc3ltbWV0cmljYWw7IHRoZSBsb2lucyBhcmUgY2lyY3VsYXI7IHRoZSBydW1wIGlzIGZsZXNoeTsgdGhlIGZsYW5rcyBhcmUgc29mdCBhbmQgZmFpcmx5IHNwb25neTsgdGhlIGhpcHMgYXJlIHJvdW5kLCB3ZWxsIGZpbGxlZCBvdXQsIGFuZCB0aGUgcmlnaHQgZGlzdGFuY2UgYXBhcnQgYXQgdGhlIHRvcDsgdGhlIHRoaWdocyBhcmUgc21hbGwgYW5kIGZpcm0sIG11c2N1bGFyIG9uIHRoZSBvdXRzaWRlIGFuZCBub3QgcHVmZnkgb24gdGhlIGluc2lkZTsgdGhlIHNoYW5rcyBhcmUgbG9uZyBhbmQgZmlybTsgdGhlIGZvcmUtZmVldCBhcmUgZXh0cmVtZWx5IHBsaWFudCBhbmQgbmFycm93IGFuZCBzdHJhaWdodCBhbmQgdGhlIGhpbmQtZmVldCBoYXJkIGFuZCBicm9hZDsgYW5kIGFsbCBmb3VyIGFyZSBpbmRpZmZlcmVudCB0byByb3VnaCBncm91bmQ7IHRoZSBoaW5kLWxlZ3MgYXJlIG11Y2ggbG9uZ2VyIHRoYW4gdGhlIGZvcmUtbGVncywgYW5kIHNsaWdodGx5IGJlbnQgb3V0d2FyZHM7IHRoZSBjb2F0IGlzIHNob3J0IGFuZCBsaWdodC4KPC90cmFuc2xhdGlvbj4="
translation['5.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5XaXRoIHN1Y2ggYSBmcmFtZSBzaGUgY2Fubm90IGZhaWwgdG8gYmUgc3Ryb25nLCBwbGlhbnQgYW5kIHZlcnkgYWdpbGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhlcmUgaXMgYSBwcm9vZiBvZiBoZXIgYWdpbGl0eS4gV2hlbiBnb2luZyBxdWlldGx5LCBzaGUgc3ByaW5nc+KAlG5vIG9uZSBldmVyIHNhdyBvciBldmVyIHdpbGwgc2VlIGEgaGFyZSB3YWxraW5n4oCUYnJpbmdpbmcgdGhlIGhpbmQtZmVldCBmb3J3YXJkIGluIGFkdmFuY2Ugb2YgdGhlIGZvcmUtZmVldCBhbmQgb3V0c2lkZSB0aGVtOyBhbmQgdGhhdCBpcyBob3cgc2hlIHJ1bnMuCjwvdHJhbnNsYXRpb24+"
translation['5.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIGlzIG9idmlvdXMgd2hlbiBzbm93IGlzIG9uIHRoZSBncm91bmQuIFRoZSBzY3V0IGlzIG9mIG5vIGFzc2lzdGFuY2UgaW4gcnVubmluZywgZm9yIGl0IGlzIG5vdCBhYmxlIHRvIHN0ZWVyIHRoZSBib2R5IG93aW5nIHRvIGl0cyBzaG9ydG5lc3MuIFRoZSBoYXJlIGRvZXMgdGhpcyBieSBtZWFucyBvZiBvbmUgb2YgaGVyIGVhcnM7IGFuZCB3aGVuIHNoZSBpcyByb3VzZWQgYnkgdGhlIGhvdW5kcyBzaGUgZHJvcHMgb25lIGVhciBvbiB0aGUgc2lkZSBvbiB3aGljaCBzaGUgaXMgYmVpbmcgcHJlc3NlZCBhbmQgdGhyb3dzIGl0IGFzbGFudCwgYW5kIHRoZW4gYmVhcmluZyBvbiB0aGlzIHNoZSB3aGVlbHMgcm91bmQgc2hhcnBseSBhbmQgaW4gYSBtb21lbnQgbGVhdmVzIHRoZSBhc3NhaWxhbnQgZmFyIGJlaGluZC4KPC90cmFuc2xhdGlvbj4="
translation['5.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5TbyBjaGFybWluZyBpcyB0aGUgc2lnaHQgdGhhdCB0byBzZWUgYSBoYXJlIHRyYWNrZWQsIGZvdW5kLCBwdXJzdWVkIGFuZCBjYXVnaHQgaXMgZW5vdWdoIHRvIG1ha2UgYW55IG1hbiBmb3JnZXQgaGlzIGhlYXJ0J3MgZGVzaXJlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBodW50aW5nIG9uIGN1bHRpdmF0ZWQgbGFuZCBhdm9pZCBncm93aW5nIGNyb3BzIGFuZCBsZXQgcG9vbHMgYW5kIHN0cmVhbXMgYWxvbmUuIEl0IGlzIHVuc2VlbWx5IGFuZCB3cm9uZyB0byBpbnRlcmZlcmUgd2l0aCB0aGVtLCBhbmQgdGhlcmUgaXMgYSByaXNrIG9mIGVuY291cmFnaW5nIHRob3NlIHdobyBzZWUgdG8gc2V0IHRoZW1zZWx2ZXMgYWdhaW5zdCB0aGUgbGF3Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Cb3RoIHRleHQgYW5kIG1lYW5pbmcgYXJlIGRvdWJ0ZnVsIGhlcmUuIEJ5IOKAnHRoZSBsYXfigJ0gaXMgcHJvYmFibHkgbWVhbnQgdGhlIGxhdyAob3IgY3VzdG9tPykgdGhhdCBhbGxvd2VkIGh1bnRlcnMgdG8gaHVudCBvdmVyIGdyb3dpbmcgY3JvcHMuIFNlZSAxMi41Ljwvbm90ZT4gT24gZGF5cyBvbiB3aGljaCB0aGVyZSBpcyBubyBodW50aW5nLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCBkdXJpbmcgZmVzdGl2YWxzLjwvbm90ZT4gYWxsIGh1bnRpbmcgdGFja2xlIHNob3VsZCBiZSByZW1vdmVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgdHJhcHBpbmdzIG9mIGhvdW5kcyBhcmUgY29sbGFycywgbGVhc2hlcywgYW5kIHN1cmNpbmdsZXMuIFRoZSBjb2xsYXJzIHNob3VsZCBiZSBzb2Z0IGFuZCBicm9hZCwgc28gYXMgbm90IHRvIGNoYWZlIHRoZSBob3VuZHMnIGNvYXQuIFRoZSBsZWFzaGVzIHNob3VsZCBoYXZlIGEgbm9vc2UgZm9yIHRoZSBoYW5kLCBhbmQgbm90aGluZyBlbHNlOyBmb3IgaWYgdGhlIGNvbGxhciBpcyBtYWRlIGluIG9uZSBwaWVjZSB3aXRoIHRoZSBsZWFzaCwgcGVyZmVjdCBjb250cm9sIG9mIHRoZSBob3VuZHMgaXMgaW1wb3NzaWJsZS4gVGhlIHN0cmFwcyBvZiB0aGUgc3VyY2luZ2xlcyBzaG91bGQgYmUgYnJvYWQsIHNvIGFzIG5vdCB0byBydWIgdGhlIGZsYW5rcywgYW5kIHRoZXkgc2hvdWxkIGhhdmUgbGl0dGxlIHNwdXJzIHNld2VkIG9uIHRvIHRoZW0sIHRvIGtlZXAgdGhlIGJyZWVkIHB1cmUuCjwvdHJhbnNsYXRpb24+"
translation['6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ib3VuZHMgc2hvdWxkIG5vdCBiZSB0YWtlbiBvdXQgaHVudGluZyB3aGVuIG9mZiB0aGVpciBmZWVkLCBzaW5jZSB0aGlzIGlzIGEgcHJvb2YgdGhhdCB0aGV5IGFyZSBhaWxpbmc7IG5vciB3aGVuIGEgc3Ryb25nIHdpbmQgaXMgYmxvd2luZywgc2luY2UgaXQgc2NhdHRlcnMgdGhlIHNjZW50IGFuZCB0aGV5IGNhbm5vdCBzbWVsbCwgYW5kIHRoZSBwdXJzZS1uZXRzIHdpbGwgbm90IHN0YW5kIGluIHBvc2l0aW9uLCBub3IgdGhlIGhheWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGVuIG5laXRoZXIgb2YgdGhlc2UgaGluZHJhbmNlcyBwcmV2ZW50cywgaGF2ZSB0aGUgaG91bmRzIG91dCBldmVyeSBvdGhlciBkYXkuIERvIG5vdCBsZXQgdGhlbSB0YWtlIHRvIHB1cnN1aW5nIGZveGVzOyBmb3IgaXQgaXMgdXR0ZXIgcnVpbiwgYW5kIHRoZXkgYXJlIG5ldmVyIGF0IGhhbmQgd2hlbiB3YW50ZWQuCjwvdHJhbnNsYXRpb24+"
translation['6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlZhcnkgdGhlIGh1bnRpbmctZ3JvdW5kIGZyZXF1ZW50bHksIHNvIHRoYXQgdGhlIGhvdW5kcyBtYXkgYmUgZmFtaWxpYXIgd2l0aCB0aGUgaHVudGluZy1ncm91bmRzIGFuZCB0aGUgbWFzdGVyIHdpdGggdGhlIGNvdW50cnkuIFN0YXJ0IGVhcmx5LCBhbmQgc28gZ2l2ZSB0aGUgaG91bmRzIGEgZmFpciBjaGFuY2Ugb2YgZm9sbG93aW5nIHRoZSBzY2VudC4gQSBsYXRlIHN0YXJ0IHJvYnMgdGhlIGhvdW5kcyBvZiB0aGUgZmluZCBhbmQgdGhlIGh1bnRlcnMgb2YgdGhlIHByaXplOyBmb3IgdGhlIHNjZW50IGlzIGJ5IGl0cyBuYXR1cmUgdG9vIHRoaW4gdG8gbGFzdCBhbGwgZGF5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZXQgdGhlIG5ldC1rZWVwZXIgd2VhciBsaWdodCBjbG90aGluZyB3aGVuIGhlIGdvZXMgaHVudGluZy4gTGV0IGhpbSBzZXQgdXAgdGhlIHB1cnNlLW5ldHMgaW4gd2luZGluZywgcm91Z2gsIHN0ZWVwLCBuYXJyb3csIHNoYWR5IHBhdGhzLCBicm9va3MsIHJhdmluZXMsIHJ1bm5pbmcgd2F0ZXJjb3Vyc2VzICh0aGVzZSBhcmUgdGhlIHBsYWNlcyBpbiB3aGljaCB0aGUgaGFyZSBpcyBtb3N0IGFwdCB0byB0YWtlIHJlZnVnZTogYSBsaXN0IG9mIGFsbCB0aGUgb3RoZXJzIHdvdWxkIGJlIGVuZGxlc3MpLCBsZWF2aW5nCjwvdHJhbnNsYXRpb24+"
translation['6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPnVub2JzdHJ1Y3RlZCBhbmQgbmFycm93IHBhc3NhZ2VzIHRvIGFuZCB0aHJvdWdoIHRoZXNlIHBsYWNlcywganVzdCBhYm91dCBkYXlicmVhaywgYW5kIG5vdCB0b28gZWFybHksIHNvIHRoYXQgaW4gY2FzZSB0aGUgbGluZSBvZiBuZXRzIGJlIG5lYXIgdGhlIGdyb3d0aCB0byBiZSBzZWFyY2hlZCwgdGhlIGhhcmUgbWF5IG5vdCBiZSBmcmlnaHRlbmVkIGJ5IGhlYXJpbmcgdGhlIG5vaXNlIGNsb3NlIGJ5IChpZiB0aGUgZGlzdGFuY2UgaXMgY29uc2lkZXJhYmxlLCBpdCBtYXR0ZXJzIGxlc3MgaWYgdGhlIHdvcmsgaXMgZG9uZSBlYXJseSksIHNlZWluZyB0aGF0IHRoZSBuZXRzIHN0YW5kIGNsZWFyIHNvIHRoYXQgbm90aGluZyBtYXkgY2xpbmcgdG8gdGhlbS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhpcyBwb3J0ZW50b3VzIHNlbnRlbmNlIGlzIGEgbGl0ZXJhbCBwcmVzZW50YXRpb24gb2YgdGhlIEdyZWVrIHRleHQsIHdoaWNoLCBob3dldmVyLCBpcyByYXRoZXIgdW5jZXJ0YWluLiBJZiB0aGUgbmV0cyBhcmUgZml4ZWQgbmVhciB0aGUgY292ZXJ0IGJlZm9yZSBkYXlicmVhaywgdGhlIGhhcmUgaXMgbGlrZWx5IHRvIHN0aXIgYXQgdGhlIG5vaXNlLiBBZnRlciBkYXlicmVhayBzaGUgd2lsbCBub3Qgc3Rpci48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkhlIG11c3QgZml4IHRoZSBzdGFrZXMgYXNsYW5kLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCBzbG9waW5nIHRvd2FyZHMgdGhlIHNpZGUgZnJvbSB3aGljaCB0aGUgaGFyZSB3aWxsIGNvbWUuIFRoZSBuZXRzLCBvZiBjb3Vyc2UsIGhhbmcgb24gdGhlIG90aGVyIHNpZGUgb2YgdGhlIHN0YWtlcy48L25vdGU+IHNvIHRoYXQgd2hlbiBwdWxsZWQgdGhleSBtYXkgc3RhbmQgdGhlIHN0cmFpbi4gT24gdGhlIHRvcHMgb2YgdGhlbSBsZXQgaGltIHB1dCBhbiBlcXVhbCBudW1iZXIgb2YgbWVzaGVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JZiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvLTPg86/z4XPgjwvZm9yZWlnbj4gbWVhbnMg4oCcZXF1YWwgaW4gbnVtYmVyLOKAnSBtb3JlIHRoYW4gb25lIG1lc2ggaXMgdG8gYmUgcHV0IGluIHRoZSBncm9vdmUgb2YgZWFjaCBzdGFrZSwgc28gdGhhdCB0aGUgdG9wIG9mIHRoZSByb3cgb2YgbmV0cyB3aWxsIGJlIHB1Y2tlcmVkLiBQZXJoYXBzLCBob3dldmVyLCDigJxsZXZlbCBpbiBoZWlnaHTigJ0gaXMgdGhlIHNlbnNlLjwvbm90ZT4gYW5kIHNldCB0aGUgcHJvcHM8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvLTPg86/z4XPgjwvZm9yZWlnbj4gbWVhbnMg4oCcZXF1YWwgaW4gbnVtYmVyLOKAnSBtb3JlIHRoYW4gb25lIG1lc2ggaXMgdG8gYmUgcHV0IGluIHRoZSBncm9vdmUgb2YgZWFjaCBzdGFrZSwgc28gdGhhdCB0aGUgdG9wIG9mIHRoZSByb3cgb2YgbmV0cyB3aWxsIGJlIHB1Y2tlcmVkLiBQZXJoYXBzLCBob3dldmVyLCDigJxsZXZlbCBpbiBoZWlnaHTigJ0gaXMgdGhlIHNlbnNlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TbWFsbCBzdGlja3Mgd2VyZSB1c2VkIGZvciBwcm9wcGluZyB1cCB0aGUgcHVyc2Ugb24gdGhlIGluc2lkZSwgYW5kIHRoZSBwdXJzZSB3YXMgcHJvcHBlZCBoaWdoZXIgdG93YXJkcyB0aGUgbWlkZGxlOyBpdCBlbmRlZCBpbiBhIHBvaW50LCBzbyB0aGF0IGl0IHJlc2VtYmxlZCB0aGUgbmV0IG9uIGEgd29tYW4ncyBoZWFkLjwvbm90ZT4gdW5pZm9ybWx5LCByYWlzaW5nIHRoZSBwdXJzZSB0b3dhcmRzIHRoZSBjZW50cmUuCjwvdHJhbnNsYXRpb24+"
translation['6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRvIHRoZSBjb3JkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSAyLjQuIFRoZSBzdG9uZSBzZXJ2ZXMgYXMgYW4gYW5jaG9yIHdoZW4gdGhlIG5ldCBmYWxscyBvZmYgdGhlIHN0YWtlcy48L25vdGU+IGxldCBoaW0gYXR0YWNoIGEgbG9uZywgYmlnIHN0b25lLCBzbyB0aGF0IHRoZSBuZXQgbWF5IG5vdCBwdWxsIGF3YXkgd2hlbiB0aGUgaGFyZSBpcyBpbnNpZGUuIExldCBoaW0gbWFrZSBoaXMgbGluZSBsb25nIGFuZCBoaWdoLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgc3Rha2VzIG11c3Qgbm90IGJlIHRvbyBkZWVwIGluIHRoZSBncm91bmQsIG9yIHRoZSBuZXRzIHdpbGwgbm90IGJlIGhpZ2ggZW5vdWdoLjwvbm90ZT4gc28gdGhhdCB0aGUgaGFyZSBtYXkgbm90IGp1bXAgb3Zlci48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBpdCBjb21lcyB0byB0cmFja2luZyB0aGUgaGFyZSwgaGUgbXVzdCBub3QgYmUgdG9vIHplYWxvdXMuIFRvIGRvIGV2ZXJ5dGhpbmcgcG9zc2libGUgdG8gZWZmZWN0IGEgcXVpY2sgY2FwdHVyZSBzaG93cyBwZXJzZXZlcmFuY2UsIGJ1dCBpcyBub3QgaHVudGluZy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlc2UgcmVtYXJrcyByZWFkIGxpa2UgYW4gYWZ0ZXJ0aG91Z2h0Ljwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZXQgaGltIHN0cmV0Y2ggdGhlIGhheWVzIG9uIGxldmVsIGdyb3VuZCBhbmQgcHV0IHRoZSByb2FkLW5ldHM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGhheWVzIGFuZCBwdXJzZS1uZXRzIHNlZW0gdG8gYmUgY29ubmVjdGVkIGluIHRoZSBzYW1lIHNlcmllczsgYnV0IHRoZSByb2FkLW5ldHMgc2VlbSB0byBiZSBpbmRlcGVuZGVudCBzY3JlZW5zLjwvbm90ZT4gaW4gcm9hZHMgYW5kIGZyb20gZ2FtZSB0cmFja3MgaW50byB0aGUgYWRqYWNlbnQgZ3JvdW5kLCBmYXN0ZW5pbmcgZG93biB0aGUgKGxvd2VyKSBjb3JkcyB0byB0aGUgZ3JvdW5kLCBqb2luaW5nIHRoZSBlbGJvd3MsIGZpeGluZyB0aGUgc3Rha2VzIGJldHdlZW4gdGhlIHNlbHZlZGdlcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+V2UgYXJlIHRvIHRoaW5rIG9mIGEgc2VyaWVzIG9mIG5ldHMgam9pbmVkIHRvZ2V0aGVyLiBUaGVzZSBzdGFrZXMgd2lsbCBiZSBpbnNlcnRlZCBpbiB0aGUgdG9wIGFuZCBib3R0b20gbGluZSBvZiBtZXNoZXMuIFRoZSBzZWx2ZWRnZSBydW5zIGFsb25nIHRoZSB0b3AgYW5kIGJvdHRvbSBvZiB0aGUgbmV0Ljwvbm90ZT4gcHV0dGluZyB0aGUgZW5kcyBvbiB0aGUgdG9wIG9mIHRoZSBzdGFrZXMgYW5kIHN0b3BwaW5nIHRoZSBieXdheXMuCjwvdHJhbnNsYXRpb24+"
translation['6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5MZXQgaGltIG1vdW50IGd1YXJkLCBnb2luZyByb3VuZCB0aGUgbmV0cy4gSWYgYSBwdXJzZS1uZXQgaXMgcHVsbGluZyBpdHMgc3Rha2Ugb3V0IG9mIGxpbmUsIGxldCBoaW0gcHV0IGl0IHVwLiBXaGVuIHRoZSBoYXJlIGlzIGJlaW5nIGNoYXNlZCBpbnRvIHRoZSBwdXJzZS1uZXRzIGhlIG11c3QgcnVuIGZvcndhcmQgYW5kIHNob3V0IGFzIGhlIHJ1bnMgYWZ0ZXIgaGVyLiBXaGVuIHNoZSBpcyBpbiwgaGUgbXVzdCBjYWxtIHRoZSBleGNpdGVtZW50IG9mIHRoZSBob3VuZHMsIHNvb3RoaW5nIHdpdGhvdXQgdG91Y2hpbmcgdGhlbS4gSGUgbXVzdCBhbHNvIHNob3V0IHRvIHRoZSBodW50c21hbiBhbmQgbGV0IGhpbSBrbm93IHRoYXQgdGhlIGhhcmUgaXMgY2F1Z2h0LCBvciB0aGF0IHNoZSBoYXMgcnVuIHBhc3Qgb24gdGhpcyBvciB0aGF0IHNpZGUsIG9yIHRoYXQgaGUgaGFzIG5vdCBzZWVuIGhlciwgb3Igd2hlcmUgaGUgY2F1Z2h0IHNpZ2h0IG9mIGhlci4KPC90cmFuc2xhdGlvbj4="
translation['6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TGV0IHRoZSBodW50c21hbiBnbyBvdXQgdG8gdGhlIGh1bnRpbmcgZ3JvdW5kIGluIGEgc2ltcGxlIGxpZ2h0IGRyZXNzIGFuZCBzaG9lcywgY2FycnlpbmcgYSBjdWRnZWwgaW4gaGlzIGhhbmQsIGFuZCBsZXQgdGhlIG5ldC1rZWVwZXIgZm9sbG93LiBMZXQgdGhlbSBrZWVwIHNpbGVuY2Ugd2hpbGUgYXBwcm9hY2hpbmcgdGhlIGdyb3VuZCwgc28gdGhhdCwgaW4gY2FzZSB0aGUgaGFyZSBpcyBuZWFyLCBzaGUgbWF5IG5vdCBtb3ZlIG9mZiBvbiBoZWFyaW5nIHZvaWNlcy4KPC90cmFuc2xhdGlvbj4="
translation['6.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5IYXZpbmcgdGllZCB0aGUgaG91bmRzIHNlcGFyYXRlbHkgdG8gdGhlIHRyZWVzIHNvIHRoYXQgdGhleSBjYW4gZWFzaWx5IGJlIHNsaXBwZWQsIGxldCBoaW0gc2V0IHVwIHRoZSBwdXJzZS1uZXRzIGFuZCBoYXllczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5OZWl0aGVyIGhlcmUgbm9yIGluIDI2IGlzIHRoZXJlIGFueSByZWZlcmVuY2UgdG8gdGhlIHJvYWQtbmV0cy4gSXQgaXMgaW1wb3NzaWJsZSB0byBzdWdnZXN0IGEgcmVhc29uIGZvciB0aGlzLCBhbmQgcGVyaGFwcyB0aGUgbmVjZXNzYXJ5IHdvcmRzIGhhdmUgZHJvcHBlZCBvdXQgaW4gYm90aCBwbGFjZXMsIGFzIG1pZ2h0IGVhc2lseSBoYXBwZW4uPC9ub3RlPiBpbiB0aGUgbWFubmVyIGRlc2NyaWJlZC4gQWZ0ZXIgdGhpcyBsZXQgdGhlIG5ldC1rZWVwZXIga2VlcCBndWFyZCwgYW5kIGxldCB0aGUgaHVudHNtYW4gdGFrZSB0aGUgaG91bmRzIGFuZCBnbyB0byB0aGUgcGxhY2UgaW4gdGhlIGh1bnRpbmcgZ3JvdW5kIHdoZXJlIHRoZSBoYXJlIG1heSBiZSBsdXJraW5nOyBhbmQgYWZ0ZXIKPC90cmFuc2xhdGlvbj4="
translation['6.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5yZWdpc3RlcmluZyBhIHZvdyB0byBBcG9sbG8gYW5kIEFydGVtaXMgdGhlIEh1bnRyZXNzIHRvIGdpdmUgdGhlbSBhIHNoYXJlIG9mIHRoZSBzcG9pbCwgbGV0IGhpbSBsb29zZSBvbmUgaG91bmQsIHRoZSBjbGV2ZXJlc3QgYXQgZm9sbG93aW5nIGEgdHJhY2ssIGF0IHN1bnJpc2UgaW4gd2ludGVyLCBiZWZvcmUgZGF3biBpbiBzdW1tZXIsIGFuZCBzb21lIHRpbWUgYmV0d2VlbiBhdCBvdGhlciBzZWFzb25zLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIHRoZSBob3VuZCBwaWNrcyB1cCBhIGxpbmUgZnJvbSB0aGUgbmV0d29yayBvZiB0cmFja3MgdGhhdCBsZWFkcyBzdHJhaWdodCBhaGVhZCwgbGV0IGhpbSBzbGlwIGFub3RoZXIuIElmIHRoZSB0cmFjayBnb2VzIG9uLCBsZXQgaGltIHNldCB0aGUgb3RoZXJzIGdvaW5nIG9uZSBieSBvbmUgYXQgc2hvcnQgaW50ZXJ2YWxzLCBhbmQgZm9sbG93IHdpdGhvdXQgcHJlc3NpbmcgdGhlbSwgYWNjb3N0aW5nIGVhY2ggYnkgbmFtZSwgYnV0IG5vdCBvZnRlbiwgdGhhdCB0aGV5IG1heSBub3QgZ2V0IGV4Y2l0ZWQgdG9vIHNvb24uCjwvdHJhbnNsYXRpb24+"
translation['6.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IHdpbGwgZ28gZm9yd2FyZCBmdWxsIG9mIGpveSBhbmQgYXJkb3VyLCBkaXNlbnRhbmdsaW5nIHRoZSB2YXJpb3VzIHRyYWNrcywgZG91YmxlIG9yIHRyaXBsZeKAlHNwcmluZ2luZyBmb3J3YXJkIG5vdyBiZXNpZGUsIG5vdyBhY3Jvc3MgdGhlIHNhbWUgb25lc+KAlHRyYWNrcyBpbnRlcmxhY2VkIG9yIGNpcmN1bGFyLCBzdHJhaWdodCBvciBjcm9va2VkLCBjbG9zZSBvciBzY2F0dGVyZWQsIGNsZWFyIG9yIG9ic2N1cmUsIHJ1bm5pbmcgcGFzdCBvbmUgYW5vdGhlciB3aXRoIHRhaWxzIHdhZ2dpbmcsIGVhcnMgZHJvcHBlZCBhbmQgZXllcyBmbGFzaGluZy4KPC90cmFuc2xhdGlvbj4="
translation['6.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIHRoZXkgYXJlIG5lYXIgdGhlIGhhcmUgdGhleSB3aWxsIGxldCB0aGUgaHVudHNtYW4ga25vdyBieSB0aGUgcXVpdmVyaW5nIG9mIHRoZSB3aG9sZSBib2R5IGFzIHdlbGwgYXMgdGhlIHRhaWwsIGJ5IG1ha2luZyBmaWVyY2UgcnVzaGVzLCBieSByYWNpbmcgcGFzdCBvbmUgYW5vdGhlciwgYnkgc2NhbXBlcmluZyBhbG9uZyB0b2dldGhlciBwZXJzaXN0ZW50bHksIG1hc3NpbmcgcXVpY2tseSwgYnJlYWtpbmcgdXAgYW5kIGFnYWluIHJ1c2hpbmcgZm9yd2FyZC4gQXQgbGVuZ3RoIHRoZXkgd2lsbCByZWFjaCB0aGUgaGFyZSdzIGZvcm0gYW5kIHdpbGwgZ28gZm9yIGhlci4KPC90cmFuc2xhdGlvbj4="
translation['6.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5TaGUgd2lsbCBzdGFydCB1cCBzdWRkZW5seSwgYW5kIHdpbGwgbGVhdmUgdGhlIGhvdW5kcyBiYXJraW5nIGFuZCBiYXlpbmcgYmVoaW5kIGhlciBhcyBzaGUgbWFrZXMgb2ZmLiBMZXQgdGhlIGh1bnRzbWFuIHNob3V0IGF0IGhlciBhcyBzaGUgcnVucywg4oCcTm93LCBob3VuZHMsIG5vdyEgV2VsbCBkb25lISBCcmF2bywgaG91bmRzISBXZWxsIGRvbmUsIGhvdW5kcyHigJ0gV3JhcHBpbmcgaGlzIGNsb2FrIHJvdW5kIGhpcyBhcm0gYW5kIHNlaXppbmcgaGlzIGN1ZGdlbCBoZSBtdXN0IGZvbGxvdyB1cCBiZWhpbmQgdGhlIGhhcmUgYW5kIG5vdCB0cnkgdG8gaGVhZCBoZXIgb2ZmLCBzaW5jZSB0aGF0IGlzIHVzZWxlc3MuCjwvdHJhbnNsYXRpb24+"
translation['6.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgaGFyZSwgbWFraW5nIG9mZiwgdGhvdWdoIG91dCBvZiBzaWdodCwgZ2VuZXJhbGx5IGRvdWJsZXMgYmFjayB0byB0aGUgcGxhY2Ugd2hlcmUgc2hlIGlzIGZvdW5kLiBMZXQgaGltIGNhbGwgb3V0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIGF0IHRoZSBtb21lbnQgd2hlbiB0aGUgaGFyZSwgbWFraW5nIGZvciB0aGUgcGxhY2Ugd2hlcmUgc2hlIHdhcyBmb3VuZCwgY29tZXMgbmVhciB0aGUgbmV0cy4gU29tZXRoaW5nIGlzIGFtaXNzIHdpdGggdGhlIHRleHQgaGVyZS4gVGhlIOKAnG1hbuKAnSBpcywgb2YgY291cnNlLCB0aGUgbmV0LWtlZXBlci4gSGUsIHRvbywgaGFzIGEgY3VkZ2VsLCBidXQgdGhlIGF1dGhvciBoYXMgbm90IHNhaWQgc28uPC9ub3RlPiB0byB0aGUgbWFuLCDigJxIaXQgaGVyLCBib3k7IGhpdCBoZXIsIGhpdCBoZXIh4oCdIGFuZCB0aGUgbWFuIG11c3QgbGV0IGhpbSBrbm93IHdoZXRoZXIgc2hlIGlzIGNhdWdodCBvciBub3QuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPklmIHNoZSBpcyBjYXVnaHQgaW4gdGhlIGZpcnN0IHJ1biwgbGV0IGhpbSBjYWxsIGluIHRoZSBob3VuZHMgYW5kIGxvb2sgZm9yIGFub3RoZXIuIEJ1dCBpZiBub3QsIGhlIG11c3QgZm9sbG93IHVwIGF0IHRvcCBzcGVlZCBhbmQgbm90IGxldCBoZXIgZ28sIGJ1dCBzdGljayB0byBpdCBwZXJzaXN0ZW50bHkuCjwvdHJhbnNsYXRpb24+"
translation['6.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5JZiB0aGUgaG91bmRzIGNvbWUgb24gaGVyIGFnYWluIGluIHRoZSBwdXJzdWl0LCBsZXQgaGltIGNyeSwg4oCcR29vZCwgZ29vZCwgaG91bmRzOyBhZnRlciBoZXIsIGhvdW5kcyHigJ0gSWYgdGhleSBoYXZlIGdvdCBzbyBmYXIgYWhlYWQgb2YgaGltIHRoYXQgaGUgY2Fubm90IG92ZXJ0YWtlIHRoZW0gYnkgZm9sbG93aW5nIHVwIGFuZCBpcyBxdWl0ZSBvdXQgb2YgdGhlIHJ1bm5pbmcsIG9yIGlmIGhlIGNhbm5vdCBzZWUgdGhlbSB0aG91Z2ggdGhleSBhcmUgbW92aW5nIGFib3V0IHNvbWV3aGVyZSBuZWFyIG9yIHN0aWNraW5nIHRvIHRoZSB0cmFja3MsIGxldCBoaW0gZmluZCBvdXQgYnkgc2hvdXRpbmcgYXMgaGUgcnVucyBwYXN0IHRvIGFueW9uZSBuZWFyLCDigJxIdWxsbyEgaGF2ZSB5b3Ugc2VlbiB0aGUgaG91bmRzP+KAnQo8L3RyYW5zbGF0aW9uPg=="
translation['6.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIGhlIGhhcyBmb3VuZCBvdXQsIGxldCBoaW0gc3RhbmQgbmVhciBpZiB0aGV5IGFyZSBvbiB0aGUgdHJhY2ssIGFuZCBjaGVlciB0aGVtIG9uLCBydW5uaW5nIHRocm91Z2ggdGhlIGhvdW5kcycgbmFtZXMsIHVzaW5nIGFsbCB0aGUgdmFyaWF0aW9ucyBvZiB0b25lIGhlIGNhbiBwcm9kdWNlLCBwaXRjaGluZyBoaXMgdm9pY2UgaGlnaCBhbmQgbG93LCBzb2Z0IGFuZCBsb3VkLiBBbW9uZ3N0IG90aGVyIGNhbGxzLCBpZiB0aGUgY2hhc2UgaXMgaW4gdGhlIG1vdW50YWlucywgbGV0IGhpbSBzaW5nIG91dCwg4oCcT2hvLCBob3VuZHMsIG9obyHigJ08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SW1pdGF0aW5nIHRoZSBjYWxsIG9mIHRoZSBCYWNjaGljIHJldmVsbGVycywg4oCcdGhlIEhvdW5kcyBvZiBNYWRuZXNzLOKAnSBvbiBNb3VudCBDaXRoYWVyb24uPC9ub3RlPiBJZiB0aGV5IGFyZSBub3QgY2xpbmdpbmcgdG8gdGhlIHRyYWNrLCBidXQgYXJlIG92ZXItcnVubmluZywgbGV0IGhpbSBjYWxsIHRoZW0gaW4gd2l0aCwg4oCcQmFjaywgaG91bmRzLCBiYWNrIHdpdGggeW91IeKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['6.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIHRoZXkgYXJlIGNsb3NlIG9uIHRoZSB0cmFja3MsIGxldCBoaW0gY2FzdCB0aGVtIHJvdW5kLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Ob3dhZGF5cyBob3VuZHMgYXJlIGxlZnQgdG8gbWFrZSB0aGVpciBvd24gY2FzdCBhbmQgYXJlIG9ubHkgYXNzaXN0ZWQgd2hlbiB0aGV5IGZhaWwgdG8gcmVjb3ZlciB0aGUgbGluZS48L25vdGU+IG1ha2luZyBtYW55IGNpcmNsZXMsIGFuZCB3aGVyZXZlciB0aGV5IGZpbmQgdGhlIHRyYWNrIGRpbSwgbGV0IGhpbSBzdGljayBhIHBvbGUgaW4gdGhlIGdyb3VuZCBhcyBhIG1hcmssIGFuZCBiZWdpbm5pbmcgZnJvbSB0aGlzIG1hcmsga2VlcCB0aGVtIHRvZ2V0aGVyIHVudGlsIHRoZXkgY2xlYXJseSByZWNvZ25pc2UgdGhlIHRyYWNrLCBlbmNvdXJhZ2luZyBhbmQgY29heGluZyB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIHRoZSB0cmFjayBpcyBjbGVhciB0aGV5IHdpbGwgYmUgb2ZmIGluIGhvdCBwdXJzdWl0LCBodXJsaW5nIHRoZW1zZWx2ZXMgb24gaXQsIGp1bXBpbmcgYmVzaWRlIGl0LCB3b3JraW5nIHRvZ2V0aGVyLCBndWVzc2luZywgc2lnbmFsbGluZyB0byBvbmUgYW5vdGhlciBhbmQgc2V0dGluZyBib3VuZHMgZm9yIG9uZSBhbm90aGVyIHRoYXQgdGhleSBjYW4gcmVjb2duaXNlLiBXaGVuIHRoZXkgYXJlIHRodXMgc2N1cnJ5aW5nIGluIGEgYnVuY2ggYWxvbmcgdGhlIHRyYWNrLCBsZXQgaGltIGZvbGxvdyB1cCB3aXRob3V0IHByZXNzaW5nIHRoZW0sIG9yIHRoZXkgbWF5IG92ZXItcnVuIHRoZSBsaW5lIHRocm91Z2ggZXhjZXNzIG9mIHplYWwuCjwvdHJhbnNsYXRpb24+"
translation['6.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgc29vbiBhcyB0aGV5IGFyZSBuZWFyIHRoZSBoYXJlIGFuZCBnaXZlIHRoZSBodW50c21hbiBjbGVhciBldmlkZW5jZSBvZiB0aGUgZmFjdCwgbGV0IGhpbSB0YWtlIGNhcmUsIG9yIGluIGhlciB0ZXJyb3Igb2YgdGhlIGhvdW5kcyBzaGUgd2lsbCBzbGlwIGF3YXkgYW5kIGJlIG9mZi4gVGhlIGhvdW5kcywgd2FnZ2luZyB0aGVpciB0YWlscywgY29sbGlkaW5nIGFuZCBmcmVxdWVudGx5IGp1bXBpbmcgb3ZlciBvbmUgYW5vdGhlciwgYW5kIGJheWluZyBsb3VkbHksIHdpdGggaGVhZHMgdXBsaWZ0ZWQgYW5kIGdsYW5jZXMgYXQgdGhlIGh1bnRzbWFuLCBzaG93aW5nIGhpbSBwbGFpbmx5IHRoYXQgdGhleSBoYXZlIHRoZSByZWFsIHRoaW5nIG5vdywgd2lsbCByb3VzZSB0aGUgaGFyZSBmb3IgdGhlbXNlbHZlcyBhbmQgZ28gZm9yIGhlciwgZ2l2aW5nIHRvbmd1ZS4KPC90cmFuc2xhdGlvbj4="
translation['6.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5JZiBzaGUgcGx1bmdlcyBpbnRvIHRoZSBwdXJzZS1uZXRzIG9yIGJvbHRzIHBhc3QgdGhlbSBvbiB0aGUgaW5zaWRlIG9yIG91dHNpZGUsIHRoZSBuZXQta2VlcGVyIG11c3QgaW4gZWFjaCBldmVudCBtYWtlIGl0IGtub3duIGJ5IHNob3V0aW5nLiBJZiBzaGUgaXMgY2F1Z2h0LCBsb29rIGZvciBhbm90aGVyOyBpZiBub3QsIGNvbnRpbnVlIHRoZSBwdXJzdWl0LCB1c2luZyB0aGUgc2FtZSBtZXRob2RzIG9mIGVuY291cmFnZW1lbnQuCjwvdHJhbnNsYXRpb24+"
translation['6.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgc29vbiBhcyB0aGUgaG91bmRzIGFyZSBnZXR0aW5nIHRpcmVkIG9mIHB1cnN1aW5nIGFuZCB0aGUgZGF5IGlzIGZhciBhZHZhbmNlZCwgaXQgaXMgdGltZSBmb3IgdGhlIGh1bnRzbWFuIHRvIHNlYXJjaCBmb3IgdGhlIGhhcmUsIHdvcm4gb3V0IGFzIHNoZSBpcywgcGFzc2luZyBvdmVyIG5vdGhpbmcgZ3Jvd2luZyBvciBseWluZyBvbiB0aGUgZ3JvdW5kLCByZXRyYWNpbmcgaGlzIHN0ZXBzIGNvbnRpbnVhbGx5IGZvciBmZWFyIG9mIGFuIG92ZXJzaWdodOKAlHNpbmNlIHRoZSBhbmltYWwgcmVzdHMgaW4gYSBzbWFsbCBzcGFjZSBhbmQgaXMgdG9vIHRpcmVkIGFuZCBmcmlnaHRlbmVkIHRvIGdldCB1cCzigJRicmluZ2luZyB0aGUgaG91bmRzIGFsb25nLCBlbmNvdXJhZ2luZyBhbmQgZXhob3J0aW5nIHRoZSBnZW50bGUgZnJlcXVlbnRseSwgdGhlIHdpbGZ1bCBzcGFyaW5nbHksIHRoZSBhdmVyYWdlIHNvcnQgaW4gbW9kZXJhdGlvbiwgdW50aWwgaGUga2lsbHMgaGVyIGluIGEgZmFpciBydW4gb3IgZHJpdmVzIGhlciBpbnRvIHRoZSBwdXJzZS1uZXRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyB0YWtlIHVwIHRoZSBwdXJzZS1uZXRzIGFuZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5XaGVyZSBhcmUgdGhlIHJvYWQtbmV0cz88L25vdGU+IGhheWVzLCBydWIgZG93biB0aGUgaG91bmRzIGFuZCBsZWF2ZSB0aGUgaHVudGluZy1ncm91bmQsIGFmdGVyIHdhaXRpbmcsIGlmIGl0IGJlIGFuIGFmdGVybm9vbiBpbiBzdW1tZXIsIGluIG9yZGVyIHRoYXQgdGhlIGhvdW5kcycgZmVldCBtYXkgbm90IGJlIG92ZXJoZWF0ZWQgb24gdGhlIHJvYWQuCjwvdHJhbnNsYXRpb24+"
translation['7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gb3IgYnJlZWRpbmcgcHVycG9zZXMsIHJlbGlldmUgdGhlIGJpdGNoZXMgb2Ygd29yayBpbiB0aGUgd2ludGVyLCB0aGF0IHRoZSByZXN0IG1heSBoZWxwIHRoZW0gdG8gcHJvZHVjZSBhIGZpbmUgbGl0dGVyIHRvd2FyZHMgc3ByaW5nLCB3aGljaCBpcyB0aGUgYmVzdCBncm93aW5nIHNlYXNvbiBmb3IgaG91bmRzLiBUaGV5IGFyZSBpbiBoZWF0IGZvciBmb3VydGVlbiBkYXlzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk1hdGUgdGhlbSB3aXRoIGdvb2QgZG9ncyBuZWFyIHRoZSBlbmQgb2YgdGhlIHBlcmlvZCwgdGhhdCB0aGV5IG1heSB0aGUgc29vbmVyIGJlY29tZSBwcmVnbmFudC4gV2hlbiB0aGV5IGFyZSBuZWFyIHRoZWlyIHRpbWUgZG8gbm90IHRha2UgdGhlbSBvdXQgaHVudGluZyBjb250aW51YWxseSwgYnV0IG9ubHkgbm93IGFuZCB0aGVuLCBvciBsb3ZlIG9mIHdvcmsgbWF5IHJlc3VsdCBpbiBhIG1pc2NhcnJpYWdlLiBUaGUgcGVyaW9kIG9mIGdlc3RhdGlvbiBpcyBzaXh0eSBkYXlzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoZSBiaXJ0aCBvZiB0aGUgcHVwcGllcyBsZWF2ZSB0aGVtIHdpdGggdGhlIG1vdGhlciBhbmQgZG8gbm90IHBsYWNlIHRoZW0gdW5kZXIgYW5vdGhlciBiaXRjaDsgZm9yIG51cnNpbmcgYnkgYSBmb3N0ZXIgbW90aGVyIGRvZXMgbm90IHByb21vdGUgZ3Jvd3RoLCB3aGVyZWFzIHRoZSBtb3RoZXIncyBtaWxrIGFuZCBicmVhdGggZG8gdGhlbSBnb29kLCBhbmQgdGhleSBsaWtlIGhlciBjYXJlc3Nlcy4KPC90cmFuc2xhdGlvbj4="
translation['7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgdGhlIHB1cHBpZXMgY2FuIGdldCBhYm91dCwgZ2l2ZSB0aGVtIG1pbGsgZm9yIGEgeWVhciwgYW5kIHRoZSBmb29kIHRoYXQgd2lsbCBmb3JtIHRoZWlyIHJlZ3VsYXIgZGlldCwgYW5kIG5vdGhpbmcgZWxzZS4gRm9yIGhlYXZ5IGZlZWRpbmcgd2FycHMgdGhlIHB1cHBpZXMnIGxlZ3MgYW5kIHNvd3MgdGhlIHNlZWRzIG9mIGRpc2Vhc2UgaW4gdGhlIHN5c3RlbSwgYW5kIHRoZWlyIGluc2lkZXMgZ28gd3JvbmcuCjwvdHJhbnNsYXRpb24+"
translation['7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5HaXZlIHRoZSBob3VuZHMgc2hvcnQgbmFtZXMsIHNvIGFzIHRvIGJlIGFibGUgdG8gY2FsbCB0byB0aGVtIGVhc2lseS4gVGhlIGZvbGxvd2luZyBhcmUgdGhlIHJpZ2h0IHNvcnQ6IFBzeWNoZSwgVGh5bXVzLCBQb3JwYXgsIFN0eXJheCwgTG9uY2jDqiwgTG9jaHVzLCBQaHJ1cmEsIFBoeWxheCwgVGF4aXMsIFhpcGhvbiwgUGhvbmF4LCBQaGxlZ29uLCBBbGPDqiwgVGV1Y2hvbiwgSHlsZXVzLCBNZWRhcywgUG9ydGhvbiwgU3BlcmNob24sIE9yZ8OqLCBCcmVtb24sIEh5YnJpcywgVGhhbGxvbiwgUmhvbcOqLCBBbnRoZXVzLCBIZWJlLCBHZXRoZXVzLCBDaGFyYSwgTGV1c3NvbiwgQXVnbywgUG9seXMsIEJpYSwgU3RpY2hvbiwgU3B1ZMOqLCBCcnlhcywgT2VuYXMsIFN0ZXJydXMsIENyYXVnw6osIENhZW5vbiwgVHlyYmFzLCBTdGhlbm9uLCBBZXRoZXIsIEFjdGlzLCBBZWNobcOqLCBOb2VzLCBHbm9tw6osIFN0aWJvbiwgSG9ybcOqLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgbmFtZXMgYXJlIHNpZ25pZmljYW50IG9mIHRoZSBjb2xvdXIsIHN0cmVuZ3RoLCBzcGlyaXQsIHNhZ2FjaXR5IG9yIGJlaGF2aW91ciBvZiB0aGUgaG91bmRzLiBIZWJlIGFuZCBQc3ljaGUgYXJlIHN0aWxsIGluIHRoZSBsaXN0IG9mIGJpdGNoZXMnIG5hbWVzLCBhbmQgbW9kZXJuIGVxdWl2YWxlbnRzIG9mIHNldmVyYWwgb2YgdGhlIG90aGVyIG5hbWVzIGFyZSBpbiB1c2UsIGUuZy4sIExhbmNlIChMb25jaGUvKSwgU2VudGluZWwgKFBoeWxheCksIEVjc3Rhc3kgKENoYXJhKSwgQmx1ZXNraW4gKE9lbmFzKSwgQ3JhZnR5IChNZWRhcyksIEhhc3R5IChTcGVyY2hvbiksIFZpZ29yb3VzIChUaGFsbG9uKSwgSW1wZXR1cyAoSG9ybWUvKSwgQ291bnNlbGxvciAoTm9lcyksIEJ1c3RsZXIgKGRvZykgb3IgSGFzdHkgKGJpdGNoKTsgY2YuIFNwZXJjaG9uLiBGb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zqDOv8674b27z4I8L2ZvcmVpZ24+IHdlIHNob3VsZCBwcm9iYWJseSByZWFkIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6gzr/Ou8614b27z4I8L2ZvcmVpZ24+LCDigJxSb3Zlci7igJ08L25vdGU+Cjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6gzr/Ou+G9u8+CPC9mb3JlaWduPiB3ZSBzaG91bGQgcHJvYmFibHkgcmVhZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OoM6/zrvOteG9u8+CPC9mb3JlaWduPiwg4oCcUm92ZXIu4oCdPC90cmFuc2xhdGlvbj4="
translation['7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UYWtlIHRoZSBiaXRjaGVzIHRvIHRoZSBodW50aW5nIGdyb3VuZCBhdCBlaWdodCBtb250aHMsIHRoZSBkb2dzIGF0IHRlbi4gRG8gbm90IHNsaXAgdGhlbSBvbiB0aGUgdHJhaWwgdGhhdCBsZWFkcyB0byB0aGUgZm9ybSwgYnV0IGtlZXAgdGhlbSBpbiBsb25nIGxlYXNoZXMgYW5kIGZvbGxvdyB0aGUgdHJhY2tpbmcgaG91bmRzLCBsZXR0aW5nIHRoZSB5b3VuZ3N0ZXJzIHJ1biB0byBhbmQgZnJvIGluIHRoZSB0cmFja3MuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkJ1dCBob3cgaXMgdGhlIGh1bnRlciB0byBrbm93IHdoZXRoZXIgdGhlIGhvdW5kcyBhcmUgb24gdGhlIHRyYWlsIGxlYWRpbmcgdG8gdGhlIGZvcm0gb3Igb24gdGhlIHRyYWNrIG9mIGEgcnVubmluZyBoYXJlPzwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgdGhlIGhhcmUgaXMgZm91bmQsIGlmIHRoZXkgc2hhcGUgd2VsbCBmb3IgdGhlIHJ1biBkb24ndCBsZXQgdGhlbSBnbyBhdCBvbmNlOyBidXQgYXMgc29vbiBhcyB0aGUgaGFyZSBoYXMgZ290IHNvIGZhciBhaGVhZCBpbiB0aGUgcnVuIHRoYXQgdGhleSBjYW4ndCBzZWUgaGVyLCBzZW5kIHRoZW0gYWxvbmcuCjwvdHJhbnNsYXRpb24+"
translation['7.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkZvciBpZiB0aGUgaHVudHNtYW4gc2xpcHMgZ29vZC1sb29raW5nLCBwbHVja3kgcnVubmVycyBjbG9zZSB0byB0aGUgaGFyZSwgdGhlIHNpZ2h0IG9mIGhlciB3aWxsIGNhdXNlIHRoZW0gdG8gc3RyYWluIHRoZW1zZWx2ZXMgYW5kIGNyYWNrLCBzaW5jZSB0aGVpciBib2RpZXMgYXJlIG5vdCB5ZXQgZmlybS4gU28gc2hlIHNob3VsZCBiZSB2ZXJ5IGNhcmVmdWwgYWJvdXQgdGhpcy4KPC90cmFuc2xhdGlvbj4="
translation['7.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpZiB0aGV5IGFyZSBwb29yIHJ1bm5lcnMgdGhlcmUgaXMgbm8gcmVhc29uIHdoeSBoZSBzaG91bGQgbm90IGxldCB0aGVtIGdvLCBmb3IgYXMgdGhleSBoYXZlIG5vIGhvcGUgb2YgY2F0Y2hpbmcgdGhlIGhhcmUgZnJvbSB0aGUgZmlyc3QsIHRoZXkgd2lsbCBub3QgbWVldCB3aXRoIHRoaXMgYWNjaWRlbnQuIE9uIHRoZSBvdGhlciBoYW5kLCBsZXQgdGhlIHlvdW5nc3RlcnMgZm9sbG93IHRoZSB0cmFjayBvZiB0aGUgaGFyZSBvbiB0aGUgcnVuIHVudGlsIHRoZXkgY2F0Y2ggaGVyOyBhbmQgd2hlbiBzaGUgaXMgY2F1Z2h0LCBnaXZlIGhlciB0byB0aGVtIHRvIGJyZWFrIHVwLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Ob3QgdG8gZWF0LiBTb21lIGh1bnRlcnMgb2JqZWN0IG1vcmUgb3IgbGVzcyBzdHJvbmdseSB0byB0aGlzIGluanVuY3Rpb247IGJ1dCBCZWNrZm9yZCAoPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhvdWdodHMgb24gSHVudGluZzwvdGl0bGU+KSwgcXVvdGVkIGJ5IEJsYW5lLCBnb2VzIHNvIGZhciBhcyB0byBzYXksIOKAnEkgdGhpbmsgaXQgYnV0IHJlYXNvbmFibGUgdG8gZ2l2ZSB0aGUgaG91bmRzIGEgaGFyZSBzb21ldGltZXMuIEkgYWx3YXlzIGdhdmUgbWluZSB0aGUgbGFzdCB0aGV5IGtpbGxlZCwgaWYgSSB0aG91Z2h0IHRoZXkgZGVzZXJ2ZWQgaGVyLuKAnTwvbm90ZT4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhvdWdodHMgb24gSHVudGluZzwvdGl0bGU+KSwgcXVvdGVkIGJ5IEJsYW5lLCBnb2VzIHNvIGZhciBhcyB0byBzYXksIOKAnEkgdGhpbmsgaXQgYnV0IHJlYXNvbmFibGUgdG8gZ2l2ZSB0aGUgaG91bmRzIGEgaGFyZSBzb21ldGltZXMuIEkgYWx3YXlzIGdhdmUgbWluZSB0aGUgbGFzdCB0aGV5IGtpbGxlZCwgaWYgSSB0aG91Z2h0IHRoZXkgZGVzZXJ2ZWQgaGVyLuKAnTwvdHJhbnNsYXRpb24+"
translation['7.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIHRoZXkgc2hvdyByZWx1Y3RhbmNlIHRvIHN0aWNrIHRvIGl0IGFuZCBiZWdpbiBzY2F0dGVyaW5nLCBjYWxsIHRoZW4gaW4sIHVudGlsIHRoZXkgZ3JvdyBhY2N1c3RvbWVkIHRvIGtlZXAgb24gdGlsbCB0aGV5IGZpbmQgdGhlIGhhcmUsIGxlc3QgaWYgdGhleSBnZXQgaW50byB0aGUgd2F5IG9mIG1pc2JlaGF2aW5nIHdoZW4gdGhleSBzZWVrIGhlciwgdGhleSBlbmQgYnkgYmVjb21pbmcgc2tpcnRlcnPigJRhIHZpbGUgaGFiaXQuCjwvdHJhbnNsYXRpb24+"
translation['7.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+R2l2ZSB0aGVtIHRoZWlyIGZvb2QgbmVhciB0aGUgcHVyc2UtbmV0cyBzbyBsb25nIGFzIHRoZXkgYXJlIHlvdW5nLCB3aGlsZSB0aGUgbmV0cyBhcmUgYmVpbmcgdGFrZW4gdXAsIHNvIHRoYXQgaWYgdGhleSBoYXZlIGdvbmUgYXN0cmF5IGluIHRoZSBodW50aW5nIGdyb3VuZCwgdGhyb3VnaCBpbmV4cGVyaWVuY2UsIHRoZXkgbWF5IGNvbWUgYmFjayBzYWZlIGZvciB0aGVpciBtZWFsLiBUaGlzIHdpbGwgYmUgZGlzY29udGludWVkIHdoZW4gdGhleSBjb21lIHRvIHJlZ2FyZCB0aGUgZ2FtZSBhcyBhbiBlbmVteTsgdGhleSB3aWxsIGJlIHRvbyBpbnRlbnQgb24gdGhhdCB0byB3b3JyeSBhYm91dCB0aGVpciBmb29kLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBhIHJ1bGUgd2hlbiB0aGV5IGFyZSBodW5ncnkgdGhlIG1hc3RlciBzaG91bGQgZmVlZCB0aGUgaG91bmRzIGhpbXNlbGY7IGZvciB3aGVuIHRoZXkgYXJlIG5vdCBodW5ncnkgdGhleSBkbyBub3Qga25vdyB0byB3aG9tIHRoYXQgaXMgZHVlOyBidXQgd2hlbiB0aGV5IHdhbnQgZm9vZCBhbmQgZ2V0IGl0LCB0aGV5IGxvdmUgdGhlIGdpdmVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UcmFjayB0aGUgaGFyZSB3aGVuIGl0IHNub3dzIHNvIGhhcmQgdGhhdCB0aGUgZ3JvdW5kIGlzIGNvdmVyZWQ7IGJ1dCBpZiB0aGVyZSBhcmUgYmxhY2sgc3BhY2VzLCBzaGUgd2lsbCBiZSBoYXJkIHRvIGZpbmQuIFdoZW4gaXQgaXMgY2xvdWR5IGFuZCB0aGUgd2luZCBpcyBpbiB0aGUgbm9ydGgsIHRoZSB0cmFja3MgbGllIHBsYWluIG9uIHRoZSBzdXJmYWNlIGZvciBhIGxvbmcgdGltZSwgYmVjYXVzZSB0aGV5IG1lbHQgc2xvd2x5OyBidXQgb25seSBmb3IgYSBzaG9ydCB0aW1lIGlmIHRoZSB3aW5kIGlzIHNvdXRoIGFuZCB0aGUgc3VuIHNoaW5lcywgc2luY2UgdGhleSBzb29uIG1lbHQgYXdheS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHdoZW4gaXQgc25vd3Mgd2l0aG91dCBzdG9wcGluZywgZG9uJ3QgYXR0ZW1wdCBpdCwgc2luY2UgdGhlIHRyYWNrcyBhcmUgY292ZXJlZDsgbm9yIHdoZW4gdGhlcmUgaXMgYSBoaWdoIHdpbmQsIHNpbmNlIHRoZXkgYXJlIGJ1cmllZCBpbiB0aGUgc25vd2RyaWZ0cyBpdCBjYXVzZXMuCjwvdHJhbnNsYXRpb24+"
translation['8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk9uIG5vIGFjY291bnQgaGF2ZSB0aGUgaG91bmRzIG91dCB3aXRoIHlvdSBmb3IgdGhpcyBraW5kIG9mIHNwb3J0LCBmb3IgdGhlIHNub3cgZnJlZXplcyB0aGVpciBub3NlcyBhbmQgZmVldCwgYW5kIGRlc3Ryb3lzIHRoZSBzY2VudCBvZiB0aGUgaGFyZSBvd2luZyB0byB0aGUgaGFyZCBmcm9zdC4gQnV0IHRha2UgdGhlIGhheWVzLCBhbmQgZ28gd2l0aCBhIGNvbXBhbmlvbiB0byB0aGUgbW91bnRhaW5zLCBwYXNzaW5nIG92ZXIgdGhlIGN1bHRpdmF0ZWQgbGFuZCwgYW5kIGFzIHNvb24gYXMgdGhlIHRyYWNrcyBhcmUgZm91bmQsIGZvbGxvdyB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPklmIHRoZXkgYXJlIGNvbXBsaWNhdGVkLCBnbyBiYWNrIGZyb20gdGhlIHNhbWUgb25lcyB0byB0aGUgc2FtZSBwbGFjZSBhbmQgd29yayByb3VuZCBpbiBjaXJjbGVzIGFuZCBleGFtaW5lIHRoZW0sIHRyeWluZyB0byBmaW5kIHdoZXJlIHRoZXkgbGVhZC4gVGhlIGhhcmUgcm9hbXMgYWJvdXQgdW5jZXJ0YWluIHdoZXJlIHRvIHJlc3QsIGFuZCwgbW9yZW92ZXIsIGl0IGlzIGhlciBoYWJpdCB0byBiZSB0cmlja3kgaW4gaGVyIG1vdmVtZW50cywgYmVjYXVzZSBzaGUgaXMgY29uc3RhbnRseSBiZWluZyBwdXJzdWVkIGluIHRoaXMgbWFubmVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgdGhlIHRyYWNrIGlzIGNsZWFyLCBwdXNoIHN0cmFpZ2h0IGFoZWFkLiBJdCB3aWxsIGxlYWQgZWl0aGVyIHRvIGEgdGhpY2tseSB3b29kZWQgc3BvdCBvciB0byBhIHN0ZWVwIGRlY2xpdml0eS4gRm9yIHRoZSBndXN0cyBvZiB3aW5kIGNhcnJ5IHRoZSBzbm93IG92ZXIgc3VjaCBwbGFjZXM7IGNvbnNlcXVlbnRseSBtYW55IHJlc3RpbmctcGxhY2VzIGFyZSBsZWZ0LCBhbmQgc2hlIGxvb2tzIGZvciBvbmUgb2YgdGhlc2UuCjwvdHJhbnNsYXRpb24+"
translation['8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgdGhlIHRyYWNrcyBsZWFkIHRvIHN1Y2ggYSBwbGFjZSwgZG9uJ3QgZ28gbmVhciwgb3Igc2hlIHdpbGwgbW92ZSBvZmYsIGJ1dCBnbyByb3VuZCBhbmQgZXhwbG9yZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIG9iamVjdCBpcyB0byBtYWtlIHN1cmUgd2hldGhlciB0aGUgdHJhY2sgcmVhbGx5IGRvZXMgZW5kIHRoZXJlIG9yIG5vdC4gSWYgaXQgZG9lcywgaGUgaXMgdG8gZ28gb24gdG8gc2VlayBhbm90aGVyIGhhcmUuIOKAnE15IGZhdGhlciB1c2VkIHRvIHJlbGF0ZSB0aGF0IGluIGhpcyBzdHVkZW50IGRheXMgYW4gb2xkIGZvcmVzdGVyIG9uIGhpcyBicm90aGVyLWluLWxhdydzIGVzdGF0ZSwgd2hlbiBoZSB3YW50ZWQgdG8gbWFrZSBzdXJlIG9mIHN1cHBseWluZyBhIGhhcmUgZm9yIGhpcyBtYXN0ZXIncyB2aXNpdG9ycywgd291bGQgc3Vycm91bmQgdGhlIGhhcmUncyBmb3JtIGluIHRoZSBlYXJseSBtb3JuaW5nLCBhbmQgdGhlIGhhcmUgd291bGQgbm90IGxlYXZlIGhlciBmb3JtIGZvciBob3Vycy7igJ0gQS4gS29ydGUgKDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkhlcm1lcyw8L3RpdGxlPiA8ZGF0ZSBhdXRobmFtZT0iMTkxOCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iMTkxOCI+MTkxODwvZGF0ZT4sIHAuIDMxNykuPC9ub3RlPiBGb3Igc2hlIGlzIHByb2JhYmx5IHRoZXJlLCBhbmQgdGhlcmUgd2lsbCBiZSBubyBkb3VidCBhYm91dCB0aGUgbWF0dGVyLCBzaW5jZSB0aGUgdHJhY2tzIHdpbGwgbm93aGVyZSBydW4gb3V0IGZyb20gc3VjaCBwbGFjZXMuCjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkhlcm1lcyw8L3RpdGxlPiA8ZGF0ZSBhdXRobmFtZT0iMTkxOCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iMTkxOCI+MTkxODwvZGF0ZT4sIHAuIDMxNykuPC90cmFuc2xhdGlvbj4="
translation['8.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgaXQgaXMgZXZpZGVudCB0aGF0IHNoZSBpcyB0aGVyZSwgbGVhdmUgaGVy4oCUZm9yIHNoZSB3aWxsIG5vdCBzdGly4oCUYW5kIGxvb2sgZm9yIGFub3RoZXIgYmVmb3JlIHRoZSB0cmFja3MgYmVjb21lIG9ic2N1cmUsIGFuZCB0YWtlIGNhcmUsIGluIGNhc2UgeW91IGZpbmQgb3RoZXJzLCB0aGF0IHlvdSB3aWxsIGhhdmUgZW5vdWdoIGRheWxpZ2h0IGxlZnQgdG8gc3Vycm91bmQgdGhlbSB3aXRoIG5ldHMuCjwvdHJhbnNsYXRpb24+"
translation['8.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlIHRpbWUgaGFzIGNvbWUsIHN0cmV0Y2ggdGhlIGhheWVzIHJvdW5kIGVhY2ggb2YgdGhlbSBpbiB0aGUgc2FtZSB3YXkgYXMgaW4gcGxhY2VzIHdoZXJlIG5vIHNub3cgbGllcywgZW5jbG9zaW5nIGFueXRoaW5nIHNoZSBtYXkgYmUgbmVhciwgYW5kIGFzIHNvb24gYXMgdGhleSBhcmUgdXAsIGFwcHJvYWNoIGFuZCBzdGFydCBoZXIuCjwvdHJhbnNsYXRpb24+"
translation['8.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPklmIHNoZSB3cmlnZ2xlcyBvdXQgb2YgdGhlIGhheWVzLCBydW4gYWZ0ZXIgaGVyIGFsb25nIHRoZSB0cmFja3MuIFNoZSB3aWxsIG1ha2UgZm9yIG90aGVyIHBsYWNlcyBvZiB0aGUgc2FtZSBzb3J0LCB1bmxlc3MgaW5kZWVkIHNoZSBzcXVlZXplcyBoZXJzZWxmIGludG8gdGhlIHNub3cgaXRzZWxmLiBXaGVyZXZlciBzaGUgbWF5IGJlLCBtYXJrIHRoZSBwbGFjZSBhbmQgc3Vycm91bmQgaXQ7IG9yLCBpZiBzaGUgZG9lc24ndCB3YWl0LCBjb250aW51ZSB0aGUgcHVyc3VpdC4gRm9yIHNoZSB3aWxsIGJlIGNhdWdodCBldmVuIHdpdGhvdXQgdGhlIGhheWVzOyBmb3Igc2hlIHNvb24gdGlyZXMgb3dpbmcgdG8gdGhlIGRlcHRoIG9mIHRoZSBzbm93LCBhbmQgYmVjYXVzZSBsYXJnZSBsdW1wcyBvZiBpdCBjbGluZyB0byB0aGUgYm90dG9tIG9mIGhlciBoYWlyeSBmZWV0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['9.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gb3IgaHVudGluZyBmYXducyBhbmQgZGVlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgcmVkIGRlZXIgaXMgbWVhbnQuIEh1bnRpbmcgdGhlIGNhbHZlcyBpbW1lZGlhdGVseSBhZnRlciB0aGVpciBiaXJ0aCBzZWVtcyBhIHBvb3IgZ2FtZTsgYnV0IG5vIGRvdWJ0IHRoZXkgd2VyZSBnb29kIGVhdGluZy48L25vdGU+IHVzZSBJbmRpYW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhpYmV0IGRvZ3MsIGNhbGxlZCBieSBHcmF0dGl1cyAoMTU5KSBTZXJlcy48L25vdGU+IGhvdW5kczsgZm9yIHRoZXkgYXJlIHN0cm9uZywgYmlnLCBzcGVlZHkgYW5kIHBsdWNreSwgYW5kIHRoZXNlIHF1YWxpdGllcyByZW5kZXIgdGhlbSBjYXBhYmxlIG9mIGhhcmQgd29yay4gSHVudCB0aGUgY2FsdmVzIGluIHNwcmluZywgc2luY2UgdGhleSBhcmUgYm9ybiBhdCB0aGF0IHNlYXNvbi4KPC90cmFuc2xhdGlvbj4="
translation['9.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZpcnN0IGdvIHRvIHRoZSBtZWFkb3dzIGFuZCByZWNvbm5vaXRyZSwgdG8gZGlzY292ZXIgd2hlcmUgaGluZHMgYXJlIG1vc3QgcGxlbnRpZnVsLiBXaGVyZXZlciB0aGV5IGFyZSwgbGV0IHRoZSBrZWVwZXIgb2YgdGhlIGhvdW5kczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUg4oCcS2VlcGVyIG9mIGhvdW5kc+KAnSBoYXMgbm90IGJlZW4gbWVudGlvbmVkIGluIGNvbm5lY3Rpb24gd2l0aCBoYXJlIGh1bnRpbmcuIEFwcGFyZW50bHkgaGUgaXMgdGhlIHBlcnNvbiB0byB3aG9tIGFsbCB0aGVzZSBpbnN0cnVjdGlvbnMgYXJlIGFkZHJlc3NlZC48L25vdGU+IGdvIHdpdGggdGhlIGhvdW5kcyBhbmQgamF2ZWxpbnMgdG8gdGhpcyBwbGFjZSBiZWZvcmUgZGF5YnJlYWsgYW5kIHRpZSB1cCB0aGUgZG9ncyB0byB0cmVlcyBzb21lIGRpc3RhbmNlIG9mZiwgc28gdGhhdCB0aGV5IG1heSBub3QgY2F0Y2ggc2lnaHQgb2YgdGhlIGhpbmRzIGFuZCBiYXJrLCBhbmQgbGV0IGhpbSB3YXRjaCBmcm9tIGEgY29pZ24gb2YgdmFudGFnZS4KPC90cmFuc2xhdGlvbj4="
translation['9.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkF0IGRheWJyZWFrIGhlIHdpbGwgc2VlIGV2ZXJ5IGRhbSBsZWFkaW5nIGhlciBmYXduIHRvIHRoZSBwbGFjZSB3aGVyZSBzaGUgbWVhbnMgdG8gbGF5IGl0LiBXaGVuIHRoZXkgaGF2ZSBwdXQgdGhlbSBkb3duLCBzdWNrbGVkIHRoZW0sIGFuZCBsb29rZWQgYWJvdXQgdG8gbWFrZSBzdXJlIHRoYXQgdGhleSBhcmUgbm90IHNlZW4sIHRoZXkgbW92ZSBhd2F5IGludG8gdGhlIG9mZmluZyBhbmQgd2F0Y2ggdGhlaXIgY2FsdmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk9uIHNlZWluZyB0aGlzLCBsZXQgaGltIGxvb3NlIHRoZSBkb2dzLCBhbmQgdGFraW5nIHRoZSBqYXZlbGlucyBhcHByb2FjaCB0aGUgc3BvdCB3aGVyZSBoZSBzYXcgdGhlIG5lYXJlc3QgZmF3biBsYWlkLCBjYXJlZnVsbHkgb2JzZXJ2aW5nIHRoZSBwb3NpdGlvbnMgc28gYXMgbm90IHRvIG1ha2UgYSBtaXN0YWtlLCBzaW5jZSB0aGV5IGxvb2sgcXVpdGUgZGlmZmVyZW50IHdoZW4gYXBwcm9hY2hlZCBmcm9tIHdoYXQgdGhleSBzZWVtZWQgdG8gYmUgYXQgYSBkaXN0YW5jZS4KPC90cmFuc2xhdGlvbj4="
translation['9.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgaGUgc2VlcyB0aGUgZmF3biwgbGV0IGhpbSBnbyBjbG9zZSB1cCB0byBpdC4gSXQgd2lsbCBrZWVwIHN0aWxsLCBzcXVlZXppbmcgaXRzIGJvZHkgdGlnaHQgYWdhaW5zdCB0aGUgZ3JvdW5kLCBhbmQgd2lsbCBsZXQgaXRzZWxmIGJlIGxpZnRlZCwgYmxlYXRpbmcgbG91ZGx5LCB1bmxlc3MgaXQgaXMgd2V0IHRocm91Z2gsIGluIHdoaWNoIGNhc2UgaXQgd2lsbCBub3Qgc3RheSwgc2luY2UgdGhlIHJhcGlkIGNvbmRlbnNhdGlvbiBvZiB0aGUgbW9pc3R1cmUgaW4gaXRzIGJvZHkgYnkgdGhlIGNvbGQgY2F1c2VzIGl0IHRvIG1ha2Ugb2ZmLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpdCB3aWxsIGJlIGNhdWdodCBieSB0aGUgaG91bmRzIGlmIGhvdGx5IHB1cnN1ZWQuIEhhdmluZyB0YWtlbiBpdCwgbGV0IGhpbSBnaXZlIGl0IHRvIHRoZSBuZXQta2VlcGVyLiBJdCB3aWxsIGNyeSBvdXQ7IGFuZCB0aGUgc2lnaHQgYW5kIHRoZSBzb3VuZCBiZXR3ZWVuIHRoZW0gd2lsbCBicmluZyB0aGUgaGluZCBydW5uaW5nIHVwIHRvIHRoZSBob2xkZXIsIGluIGhlciBhbnhpZXR5IHRvIHJlc2N1ZSBpdC4KPC90cmFuc2xhdGlvbj4="
translation['9.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoYXQgaXMgdGhlIG1vbWVudCB0byBzZXQgdGhlIGhvdW5kcyBvbiBoZXIsIGFuZCBwbHkgdGhlIGphdmVsbXMuIEhhdmluZyBzZXR0bGVkIHRoaXMgb25lLCBsZXQgaGltIHByb2NlZWQgdG8gdGFja2xlIHRoZSByZXN0LCBodW50aW5nIHRoZW0gaW4gdGhlIHNhbWUgbWFubmVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Zb3VuZyBmYXducyBhcmUgY2F1Z2h0IGJ5IHRoaXMgbWV0aG9kOyBidXQgYmlnIG9uZXMgYXJlIGRpZmZpY3VsdCB0byBjYXRjaC4gRm9yIHRoZXkgZ3JhemUgd2l0aCB0aGVpciBkYW1zIGFuZCBvdGhlciBkZWVyOyBhbmQgd2hlbiBwdXJzdWVkIHRoZXkgbWFrZSBvZmYgaW4gdGhlIG1pZHN0IG9mIHRoZW0sIG9yIHNvbWV0aW1lcyBpbiBmcm9udCwgYnV0IHJhcmVseSBpbiB0aGUgcmVhci4KPC90cmFuc2xhdGlvbj4="
translation['9.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBoaW5kcyB0cmFtcGxlIG9uIHRoZSBob3VuZHMgaW4gdGhlaXIgZWZmb3J0cyB0byBkZWZlbmQgdGhlaXIgZmF3bnM7IGNvbnNlcXVlbnRseSBpdCBpcyBub3QgZWFzeSB0byBjYXRjaCB0aGVtLCB1bmxlc3MgYSBtYW4gZ2V0cyBhbW9uZ3N0IHRoZW0gYXQgb25jZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgYXV0aG9yIGhhcyBvbWl0dGVkIHRvIGV4cGxhaW4gaG93IHRoaXMgaXMgdG8gYmUgZG9uZS48L25vdGU+IGFuZCBzY2F0dGVycyB0aGVtLCBzbyB0aGF0IG9uZSBvZiB0aGUgZmF3bnMgaXMgaXNvbGF0ZWQuCjwvdHJhbnNsYXRpb24+"
translation['9.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcmVzdWx0IG9mIHRoaXMgc3RyYWluIG9uIHRoZSBob3VuZHMgaXMgdGhhdCB0aGV5IGFyZSBsZWZ0IGJlaGluZCBpbiB0aGUgZmlyc3QgcnVuOyBmb3IgdGhlIGFic2VuY2Ugb2YgdGhlIGhpbmRzIGZpbGxzIHRoZSBjcmVhdHVyZSB3aXRoIHRlcnJvciwgYW5kIHRoZSBzcGVlZCBvZiBmYXducyBhdCB0aGF0IGFnZSBpcyB3aXRob3V0IHBhcmFsbGVsLiBCdXQgdGhleSBhcmUgc29vbiBjYXVnaHQgaW4gdGhlIHNlY29uZCBvciB0aGlyZCBydW4sIHNpbmNlIHRoZWlyIGJvZGllcyBhcmUgc3RpbGwgdG9vIHlvdW5nIHRvIHN0YW5kIHRoZSB3b3JrLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Q2FsdHJvcHMgYXJlIHNldCBmb3IgZGVlciBpbiB0aGUgbW91bnRhaW5zLCBhYm91dCBtZWFkb3dzIGFuZCBzdHJlYW1zIGFuZCBnbGFkZXMsIGluIGFsbGV5cyBhbmQgY3VsdGl2YXRlZCBsYW5kcyB0aGF0IHRoZXkgZnJlcXVlbnQuCjwvdHJhbnNsYXRpb24+"
translation['9.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgY2FsdHJvcHMgc2hvdWxkIGJlIG1hZGUgb2YgcGxhaXRlZCB5ZXcsIHN0cmlwcGVkIG9mIHRoZSBiYXJrLCBzbyBhcyBub3QgdG8gcm90LiBUaGV5IHNob3VsZCBoYXZlIGNpcmN1bGFyIGNyb3ducywgYW5kIHRoZSBuYWlscyBzaG91bGQgYmUgb2YgaXJvbiBhbmQgd29vZCBhbHRlcm5hdGVseSwgcGxhaXRlZCBpbnRvIHRoZSByaW0sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSDigJxyaW3igJ0gKGFuIHVuc2F0aXNmYWN0b3J5IHJlbmRlcmluZykgaXMgdGhlIHNhbWUgdGhpbmcgYXMgdGhlIOKAnGNyb3duLuKAnTwvbm90ZT4gdGhlIGlyb24gbmFpbHMgYmVpbmcgdGhlIGxvbmdlciwgc28gdGhhdCB0aGUgd29vZGVuIG9uZXMgd2lsbCB5aWVsZCB0byB0aGUgZm9vdCBhbmQgdGhlIG90aGVycyBodXJ0IGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['9.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbm9vc2Ugb2YgdGhlIGNvcmQgdG8gYmUgbGFpZCBvbiB0aGUgY3Jvd24gYW5kIHRoZSBjb3JkIGl0c2VsZiBzaG91bGQgYmUgb2Ygd292ZW4gZXNwYXJ0byw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+WWF0ZXMgKDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlRleHRyaW51bSBBbnRpcXVvcnVtPC90aXRsZT4pIGJlbGlldmVzIHRoYXQgdGhlIHBsYW50IG1lYW50IGlzIFNwYW5pc2ggYnJvb20gKEdlbmlzdGEpLiBCdXQgaXQgaXMgaW5kZWVkIHRoZSBncmFzcyDigJxlc3BhcnRvLOKAnSBTdGlwYSB0ZW5hY2lzc2ltYS48L25vdGU+IHNpbmNlIHRoaXMgaXMgcm90LXByb29mLiBUaGUgbm9vc2UgaXRzZWxmIGFuZCB0aGUgY29yZCBtdXN0IGJlIHN0cm9uZzsgYW5kIHRoZSBjbG9nIGF0dGFjaGVkIG11c3QgYmUgb2YgY29tbW9uIG9yIGV2ZXJncmVlbiBvYWssIHR3ZW50eS1zZXZlbiBpbmNoZXMgbG9uZywgbm90IHN0cmlwcGVkIG9mIHRoZSBiYXJrLCBhbmQgdGhyZWUgaW5jaGVzIHRoaWNrLgo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UZXh0cmludW0gQW50aXF1b3J1bTwvdGl0bGU+KSBiZWxpZXZlcyB0aGF0IHRoZSBwbGFudCBtZWFudCBpcyBTcGFuaXNoIGJyb29tIChHZW5pc3RhKS4gQnV0IGl0IGlzIGluZGVlZCB0aGUgZ3Jhc3Mg4oCcZXNwYXJ0byzigJ0gU3RpcGEgdGVuYWNpc3NpbWEuPC90cmFuc2xhdGlvbj4="
translation['9.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG8gc2V0IHRoZSBjYWx0cm9wcyBtYWtlIGEgcm91bmQgaG9sZSBpbiB0aGUgZ3JvdW5kIGZpZnRlZW4gaW5jaGVzIGRlZXAsIG9mIHRoZSBzYW1lIHNpemUgYXQgdGhlIHRvcCBhcyB0aGUgY3Jvd25zIG9mIHRoZSB0cmFwcywgYnV0IHRhcGVyaW5nIHRvd2FyZHMgdGhlIGJvdHRvbS4gTWFrZSBzaGFsbG93IGRyaWxscyBpbiB0aGUgZ3JvdW5kIGZvciB0aGUgY29yZCBhbmQgdGhlIGNsb2cgdG8gbGllIGluLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5IYXZpbmcgZG9uZSB0aGlzIGxheSB0aGUgY2FsdHJvcCBvbiB0aGUgaG9sZSBhIGxpdHRsZSBiZWxvdyB0aGUgc3VyZmFjZSwgYW5kIGxldmVsLCBhbmQgcHV0IHRoZSBub29zZSBvZiB0aGUgY29yZCByb3VuZCB0aGUgdG9wLiBIYXZpbmcgbGFpZCB0aGUgY29yZCBhbmQgdGhlIGNsb2cgaW4gdGhlaXIgcGxhY2VzLCBsYXkgc3BpbmRsZS13b29kIHR3aWdzIG9uIHRoZSB0b3AsIG5vdCBsZXR0aW5nIHRoZW0gc3RpY2sgb3V0IGJleW9uZCB0aGUgY2lyY2xlLCBhbmQgb24gdGhlc2UgYW55IGxpZ2h0IGxlYXZlcyBpbiBzZWFzb24uCjwvdHJhbnNsYXRpb24+"
translation['9.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5OZXh0IHRocm93IHNvbWUgZWFydGggb24gdGhlbSwgYmVnaW5uaW5nIHdpdGggdGhlIHN1cmZhY2Ugc29pbCB0YWtlbiBmcm9tIHRoZSBob2xlcywgYW5kIG9uIHRvcCBvZiB0aGlzIHNvbWUgdW5icm9rZW4gc29pbCBmcm9tIGEgZGlzdGFuY2UsIGluIG9yZGVyIHRoYXQgdGhlIHBvc2l0aW9uIG1heSBiZSBjb21wbGV0ZWx5IGNvbmNlYWxlZCBmcm9tIHRoZSBkZWVyLiBSZW1vdmUgYW55IGVhcnRoIHJlbWFpbmluZyBvdmVyIHRvIGEgcGxhY2Ugc29tZSBkaXN0YW5jZSBmcm9tIHRoZSBjYWx0cm9wOyBmb3IgaWYgdGhlIGRlZXIgc21lbGxzIGVhcnRoIHJlY2VudGx5IGRpc3R1cmJlZCwgaXQgc2hpZXM7IGFuZCBpdCBpcyBub3Qgc2xvdyB0byBzbWVsbCBpdC4KPC90cmFuc2xhdGlvbj4="
translation['9.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvbXBhbmllZCBieSB0aGUgaG91bmRzLCBpbnNwZWN0IHRoZSB0cmFwcyBzZXQgaW4gdGhlIG1vdW50YWlucywgcHJlZmVyYWJseSBhdCBkYXlicmVhayAoYnV0IGl0IHNob3VsZCBiZSBkb25lIGFsc28gYXQgb3RoZXIgdGltZXMgZHVyaW5nIHRoZSBkYXkpLCBpbiB0aGUgY3VsdGl2YXRlZCBsYW5kcyBlYXJseS4gRm9yIGluIHRoZSBtb3VudGFpbnMgZGVlciBtYXkgYmUgY2F1Z2h0IGluIHRoZSBkYXl0aW1lIGFzIHdlbGwgYXMgYXQgbmlnaHQgb3dpbmcgdG8gdGhlIHNvbGl0dWRlOyBidXQgb24gY3VsdGl2YXRlZCBsYW5kIG9ubHkgYXQgbmlnaHQsIGJlY2F1c2UgdGhleSBhcmUgYWZyYWlkIG9mIGh1bWFuIGJlaW5ncyBpbiB0aGUgZGF5dGltZS4KPC90cmFuc2xhdGlvbj4="
translation['9.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gY29taW5nIGFjcm9zcyBhIGNhbHRyb3AgdXBzZXQsIHNsaXAgdGhlIGhvdW5kcywgZ2l2ZSB0aGVtIGEgaGFyay1mb3J3YXJkLCBhbmQgZm9sbG93IGFsb25nIHRoZSB0cmFjayBvZiB0aGUgY2xvZywgbm90aWNpbmcgd2hpY2ggd2F5IGl0IHJ1bnMuIFRoYXQgd2lsbCBiZSBjbGVhciBlbm91Z2ggZm9yIHRoZSBtb3N0IHBhcnQ6IGZvciB0aGUgc3RvbmVzIHdpbGwgYmUgZGlzcGxhY2VkIGFuZCB0aGUgdHJhaWwgb2YgdGhlIGNsb2cgd2lsbCBiZSBvYnZpb3VzIGluIHRoZSBjdWx0aXZhdGVkIGdyb3VuZDsgYW5kIGlmIHRoZSBkZWVyIGNyb3NzZXMgcm91Z2ggcGxhY2VzLCB0aGVyZSB3aWxsIGJlIGZyYWdtZW50cyBvZiBiYXJrIHRvcm4gZnJvbSB0aGUgY2xvZyBvbiB0aGUgcm9ja3MsIGFuZCB0aGUgcHVyc3VpdCB3aWxsIGJlIGFsbCB0aGUgZWFzaWVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SWYgdGhlIGRlZXIgaXMgY2F1Z2h0IGJ5IHRoZSBmb3JlLWZvb3QgaXQgd2lsbCBzb29uIGJlIHRha2VuLCBhcyBpdCBoaXRzIGV2ZXJ5IHBhcnQgb2YgaXRzIGJvZHkgYW5kIGl0cyBmYWNlIHdpdGggdGhlIGNsb2cgZHVyaW5nIHRoZSBydW47IG9yIGlmIGJ5IHRoZSBoaW5kbGVnLCB0aGUgZHJhZ2dpbmcgb2YgdGhlIGNsb2cgaGFtcGVycyB0aGUgd2hvbGUgYm9keTsgYW5kIHNvbWV0aW1lcyBpdCBkYXNoZXMgaW50byBmb3JrZWQgYnJhbmNoZXMgb2YgdHJlZXMsIGFuZCB1bmxlc3MgaXQgYnJlYWtzIHRoZSBjb3JkLCBpcyBjYXVnaHQgb24gdGhlIHNwb3QuCjwvdHJhbnNsYXRpb24+"
translation['9.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQsIHdoZXRoZXIgeW91IGNhdGNoIGl0IGluIHRoaXMgd2F5IG9yIGJ5IHdlYXJpbmcgaXQgb3V0LCBkb24ndCBnbyBuZWFyIGl0OyBmb3IgaXQgd2lsbCBidXR0LCBpZiBpdCdzIGEgc3RhZywgYW5kIGtpY2ssIGFuZCBpZiBpdCdzIGEgaGluZCwgaXQgd2lsbCBraWNrLiBTbyB0aHJvdyBqYXZlbGlucyBhdCBpdCBmcm9tIGEgZGlzdGFuY2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluIHRoZSBzdW1tZXIgbW9udGhzIHRoZXkgYXJlIGFsc28gY2F1Z2h0IGJ5IHB1cnN1aXQgd2l0aG91dCB0aGUgYWlkIG9mIGEgY2FsdHJvcDsgZm9yIHRoZXkgZ2V0IGRlYWQgYmVhdCwgc28gdGhhdCB0aGV5IGFyZSBoaXQgc3RhbmRpbmcuIFdoZW4gaGFyZCBwcmVzc2VkLCB0aGV5IHdpbGwgZXZlbiBwbHVuZ2UgaW50byB0aGUgc2VhIGFuZCBpbnRvIHBvb2xzIGluIHRoZWlyIGJld2lsZGVybWVudDsgYW5kIG9jY2FzaW9uYWxseSB0aGV5IGRyb3AgZnJvbSB3YW50IG9mIGJyZWF0aC4KPC90cmFuc2xhdGlvbj4="
translation['10.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Rm9yIGh1bnRpbmcgdGhlIHdpbGQgYm9hciBwcm92aWRlIHlvdXJzZWxmIHdpdGggSW5kaWFuLCBDcmV0YW4sIExvY3JpYW4gYW5kIExhY29uaWFuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIExhY29uaWFuIGhvdW5kcyBvZiB0aGUgQ2FzdG9yaWFuIHZhcmlldHk7IHNlZSAzLjUuPC9ub3RlPiBob3VuZHMsIGJvYXIgbmV0cywgamF2ZWxpbnMsIHNwZWFycyBhbmQgY2FsdHJvcHMuIEluIHRoZSBmaXJzdCBwbGFjZSB0aGUgaG91bmRzIG9mIGVhY2ggYnJlZWQgbXVzdCBiZSBvZiBoaWdoIHF1YWxpdHksIHRoYXQgdGhleSBtYXkgYmUgcXVhbGlmaWVkIHRvIGZpZ2h0IHRoZSBiZWFzdC4KPC90cmFuc2xhdGlvbj4="
translation['10.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBuZXRzIG11c3QgYmUgbWFkZSBvZiB0aGUgc2FtZSBmbGF4IGFzIHRob3NlIHVzZWQgZm9yIGhhcmVzLCBvZiBmb3J0eS1maXZlIHRocmVhZHMgd292ZW4gaW4gdGhyZWUgc3RyYW5kcywgZWFjaCBzdHJhbmQgY29udGFpbmluZyBmaWZ0ZWVuIHRocmVhZHMuIFRoZSBoZWlnaHQgc2hvdWxkIGJlIHRlbiBrbm90cywgY291bnRlZCBmcm9tIHRoZSB0b3AsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoaXMgbWVhbnMsIEkgYmVsaWV2ZSwgdGVuIG1lc2hlcywgc28gdGhhdCB0aGUgbmV0IHdvdWxkIGJlIGFib3V0IDE1MCBpbmNoZXMgaGlnaC4gT3R0byBNYW5ucyAoPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VWJlciBkaWUgSmFnZCBiZWkgZGVuIEdyaWVzY2hlbjwvdGl0bGU+KSwgaG93ZXZlciwgdGhpbmtzIHRoYXQgdGhlIG5ldCB3YXMgZml2ZSBmZWV0IGhpZ2ggb25seSwgaS5lLiwgZm91ciBtZXNoZXMgKGNmLiA0LjUpOyBidXQgKDEpIGl0IGlzIGhhcmQgdG8gc2VlIGhvdyDigJxmb3VyIG1lc2hlc+KAnSBjYW4gYmUgZ290IG91dCBvZiDigJx0ZW4ga25vdHMs4oCdIGFuZCAoMikgdGhlIOKAnGJvc29t4oCdIChzZWUgNykgcmVxdWlyZXMgYSBjb25zaWRlcmFibHkgZ3JlYXRlciBoZWlnaHQgdGhhbiBmaXZlIGZlZXQuPC9ub3RlPiBhbmQgdGhlIGRlcHRocyBvZiB0aGUgbWVzaGVzIGZpZnRlZW4gaW5jaGVzLiBUaGUgcm9wZXMgYXQgdG9wIGFuZCBib3R0b20gbXVzdCBiZSBoYWxmIGFzIHRoaWNrIGFnYWluIGFzIHRoZSBuZXRzLiBUaGVyZSBtdXN0IGJlIG1ldGFsIHJpbmdzIGF0IHRoZSBlbGJvd3MsIGFuZCB0aGUgcm9wZXMgbXVzdCBiZSBpbnNlcnRlZCB1bmRlciB0aGUgbWVzaGVzLCBhbmQgdGhlaXIgZW5kcyBtdXN0IHBhc3Mgb3V0IHRocm91Z2ggdGhlIHJpbmdzLjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlViZXIgZGllIEphZ2QgYmVpIGRlbiBHcmllc2NoZW48L3RpdGxlPiksIGhvd2V2ZXIsIHRoaW5rcyB0aGF0IHRoZSBuZXQgd2FzIGZpdmUgZmVldCBoaWdoIG9ubHksIGkuZS4sIGZvdXIgbWVzaGVzIChjZi4gNC41KTsgYnV0ICgxKSBpdCBpcyBoYXJkIHRvIHNlZSBob3cg4oCcZm91ciBtZXNoZXPigJ0gY2FuIGJlIGdvdCBvdXQgb2Yg4oCcdGVuIGtub3RzLOKAnSBhbmQgKDIpIHRoZSDigJxib3NvbeKAnSAoc2VlIDcpIHJlcXVpcmVzIGEgY29uc2lkZXJhYmx5IGdyZWF0ZXIgaGVpZ2h0IHRoYW4gZml2ZSBmZWV0Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgZW5kcyBvZiB0aGUgdXBwZXIgcm9wZXMgYXBwZWFyIHRvIGhhdmUgYmVlbiB1c2VkIGZvciBmYXN0ZW5pbmcgdGhlIG5ldHMgdG9nZXRoZXIuPC9ub3RlPiBGaWZ0ZWVuIG5ldHMgYXJlIHN1ZmZpY2llbnQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkl0IGlzIHN0cmFuZ2UgdGhhdCB0aGUgYXV0aG9yIGRvZXMgbm90IHN0YXRlIHRoZSBsZW5ndGggb2YgdGhlIG5ldHMuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['10.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgamF2ZWxpbnMgbXVzdCBiZSBvZiBldmVyeSB2YXJpZXR5LCB0aGUgYmxhZGVzIGJyb2FkIGFuZCBrZWVuLCBhbmQgdGhlIHNoYWZ0cyBzdHJvbmcuIFRoZSBzcGVhcnMgbXVzdCBoYXZlIGJsYWRlcyBmaWZ0ZWVuIGluY2hlcyBsb25nLCBhbmQgc3RvdXQgdGVldGggYXQgdGhlIG1pZGRsZSBvZiB0aGUgc29ja2V0LCBmb3JnZWQgaW4gb25lIHBpZWNlIGJ1dCBzdGFuZGluZyBvdXQ7IGFuZCB0aGVpciBzaGFmdHMgbXVzdCBiZSBvZiBjb3JuZWwgd29vZCwgYXMgdGhpY2sgYXMgYSBtaWxpdGFyeSBzcGVhci4gVGhlIGNhbHRyb3BzIG11c3QgYmUgc2ltaWxhciB0byB0aG9zZSB1c2VkIGluIGh1bnRpbmcgZGVlci4gVGhlcmUgbXVzdCBiZSBzZXZlcmFsIGh1bnRzbWVuLCBmb3IgdGhlIHRhc2sgb2YgY2FwdHVyaW5nIHRoZSBiZWFzdCBpcyBubyBsaWdodCBvbmUgZXZlbiBmb3IgYSBsYXJnZSBudW1iZXIgb2YgbWVuLiBJIHdpbGwgbm93IGV4cGxhaW4gaG93IHRvIHVzZSBlYWNoIHBvcnRpb24gb2YgdGhlIG91dGZpdCBpbiBodW50aW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GaXJzdCB0aGVuLCB3aGVuIHRoZSBjb21wYW55IHJlYWNoIHRoZSBwbGFjZSB3aGVyZSB0aGV5IHN1cHBvc2UgdGhlIGdhbWUgdG8gbHVyaywgbGV0IHRoZW0gc2xpcCBvbmUgb2YgdGhlIExhY29uaWFuIGhvdW5kcywgYW5kIHRha2luZyB0aGUgb3RoZXJzIGluIGxlYXNoLCBnbyByb3VuZCB0aGUgcGxhY2Ugd2l0aCB0aGUgaG91bmQuCjwvdHJhbnNsYXRpb24+"
translation['10.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFzIHNvb24gYXMgc2hlIGhhcyBmb3VuZCBoaXMgdHJhY2tzLCBsZXQgdGhlIGZpZWxkIGZvbGxvdywgb25lIGJlaGluZCBhbm90aGVyLCBrZWVwaW5nIGV4YWN0bHkgdG8gdGhlIGxpbmUgb2YgdGhlIHRyYWNrLiBUaGUgaHVudHNtZW4gYWxzbyB3aWxsIGZpbmQgbWFueSBldmlkZW5jZXMgb2YgdGhlIHF1YXJyeSwgdGhlIHRyYWNrcyBpbiBzb2Z0IGdyb3VuZCwgYnJva2VuIGJyYW5jaGVzIHdoZXJlIHRoZSBidXNoZXMgYXJlIHRoaWNrLCBhbmQgbWFya3Mgb2YgaGlzIHR1c2tzIHdoZXJldmVyIHRoZXJlIGFyZSB0cmVlcy4KPC90cmFuc2xhdGlvbj4="
translation['10.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBob3VuZCBmb2xsb3dpbmcgdGhlIHRyYWNrIHdpbGwsIGFzIGEgcnVsZSwgYXJyaXZlIGF0IGEgd2VsbC13b29kZWQgc3BvdC4gRm9yIHRoZSBiZWFzdCB1c3VhbGx5IGxpZXMgaW4gc3VjaCBwbGFjZXMsIHNpbmNlIHRoZXkgYXJlIHdhcm0gaW4gd2ludGVyIGFuZCBjb29sIGluIHN1bW1lci4gQXMgc29vbiBhcyB0aGUgaG91bmQgcmVhY2hlcyB0aGUgbGFpciwgc2hlIHdpbGwgYmFyay4KPC90cmFuc2xhdGlvbj4="
translation['10.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpbiBtb3N0IGNhc2VzIHRoZSBib2FyIHdpbGwgbm90IGdldCB1cC4gU28gdGFrZSB0aGUgaG91bmQgYW5kIHRpZSBoZXIgdXAgd2l0aCB0aGUgb3RoZXJzIGF0IGEgZ29vZCBkaXN0YW5jZSBmcm9tIHRoZSBsYWlyLCBhbmQgaGF2ZSB0aGUgbmV0cyBwdXQgdXAgaW4gdGhlIGNvbnZlbmllbnQgYW5jaG9yYWdlcywgaGFuZ2luZyB0aGUgbWVzaGVzIG9uIGZvcmtlZCBicmFuY2hlcyBvZiB0cmVlcy4gT3V0IG9mIHRoZSBuZXQgaXRzZWxmIG1ha2UgYSBsb25nIHByb2plY3RpbmcgYm9zb20sIHB1dHRpbmcgc3RpY2tzIGluc2lkZSB0byBwcm9wIGl0IHVwIG9uIGJvdGggc2lkZXMsIHNvIHRoYXQgdGhlIGxpZ2h0IG9mIGRheSBtYXkgcGVuZXRyYXRlIGFzIG11Y2ggYXMgcG9zc2libGUgaW50byB0aGUgYm9zb20gdGhyb3VnaCB0aGUgbWVzaGVzLCBpbiBvcmRlciB0aGF0IHRoZSBpbnRlcmlvciBtYXkgYmUgYXMgbGlnaHQgYXMgcG9zc2libGUgd2hlbiB0aGUgYm9hciBydXNoZXMgYXQgaXQuIEZhc3RlbiB0aGUgKGxvd2VyKSByb3BlIHRvIGEgc3Ryb25nIHRyZWUsIG5vdCB0byBhIGJ1c2gsIHNpbmNlIHRoZSBidXNoZXMgZ2l2ZSB3YXkgYXQgdGhlIGJhcmUgc3RlbS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHRleHQgaXMgZG91YnRmdWwuIEkgbm93IHRoaW5rIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Dz4XOs866zrvhv7bOvc+EzrHOuTwvZm9yZWlnbj4gcHJvYmFibGUgZm9yIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Dz4XOveG9s8+Hzr/Ovc+EzrHOuTwvZm9yZWlnbj4uPC9ub3RlPiBXaGVyZXZlciB0aGVyZSBpcyBhIGdhcCBiZXR3ZWVuIGEgbmV0IGFuZCB0aGUgZ3JvdW5kLDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Dz4XOs866zrvhv7bOvc+EzrHOuTwvZm9yZWlnbj4gcHJvYmFibGUgZm9yIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Dz4XOveG9s8+Hzr/Ovc+EzrHOuTwvZm9yZWlnbj4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSB0ZXh0IGlzIGFnYWluIHVuY2VydGFpbiwgYnV0IHRoZSBzZW5zZSBpcyBjbGVhci4gSSBpbmNsaW5lIHRvIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9kc+A4b24IM60KSDhvJHOuuG9sc+Dz4TOt869PC9mb3JlaWduPi48L25vdGU+IGZpbGwgaW4gdGhlIHBsYWNlcyB0aGF0IGFmZm9yZCBubyBhbmNob3JhZ2Ugd2l0aCB3b29kLCBpbiBvcmRlciB0aGF0IHRoZSBib2FyIG1heSBydXNoIGludG8gdGhlIG5ldCwgYW5kIG5vdCBzbGlwIG91dC4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2Rz4DhvbggzrQpIOG8kc664b2xz4PPhM63zr08L2ZvcmVpZ24+LjwvdHJhbnNsYXRpb24+"
translation['10.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBzb29uIGFzIHRoZXkgYXJlIGluIHBvc2l0aW9uLCBsZXQgdGhlIHBhcnR5IGdvIHRvIHRoZSBob3VuZHMgYW5kIGxvb3NlIHRoZW0gYWxsLCBhbmQgdGFrZSB0aGUgamF2ZWxpbnMgYW5kIHRoZSBzcGVhcnMgYW5kIGFkdmFuY2UuIExldCBvbmUgbWFuLCB0aGUgbW9zdCBleHBlcmllbmNlZCwgdXJnZSBvbiB0aGUgaG91bmRzLCB3aGlsZSB0aGUgb3RoZXJzIGZvbGxvdyBpbiByZWd1bGFyIG9yZGVyLCBrZWVwaW5nIHdlbGwgYmVoaW5kIG9uZSBhbm90aGVyLCBzbyB0aGF0IHRoZSBib2FyIG1heSBoYXZlIGEgZnJlZSBwYXNzYWdlIGJldHdlZW4gdGhlbTsgZm9yIHNob3VsZCBoZSBiZWF0IGEgcmV0cmVhdCBhbmQgZGFzaCBpbnRvIGEgY3Jvd2QsIHRoZXJlIGlzIGEgcmlzayBvZiBiZWluZyBnb3JlZCwgc2luY2UgaGUgc3BlbmRzIGhpcyByYWdlIG9uIGFueW9uZSBoZSBlbmNvdW50ZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBzb29uIGFzIHRoZSBob3VuZHMgYXJlIG5lYXIgdGhlIGxhaXIsIHRoZXkgd2lsbCBnbyBmb3IgaGltLiBUaGUgbm9pc2Ugd2lsbCBjYXVzZSBoaW0gdG8gZ2V0IHVwLCBhbmQgaGUgd2lsbCB0b3NzIGFueSBob3VuZCB0aGF0IGF0dGFja3MgaGltIGluIGZyb250LiBIZSB3aWxsIHJ1biBhbmQgcGx1bmdlIGludG8gdGhlIG5ldHM7IG9yIGlmIG5vdCwgeW91IG11c3QgcHVyc3VlIGhpbS4gSWYgdGhlIGdyb3VuZCB3aGVyZSBoZSBpcyBjYXVnaHQgaW4gdGhlIG5ldCBpcyBzbG9waW5nLCBoZSB3aWxsIHF1aWNrbHkgZ2V0IHVwOyBpZiBpdCBpcyBsZXZlbCwgaGUgd2lsbCBpbW1lZGlhdGVseSBzdGFuZCBzdGlsbCwgaW50ZW50IG9uIGhpbXNlbGYuCjwvdHJhbnNsYXRpb24+"
translation['10.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGlzIG1vbWVudCB0aGUgaG91bmRzIHdpbGwgcHJlc3MgdGhlaXIgYXR0YWNrLCBhbmQgdGhlIGh1bnRzbWVuIG11c3QgZmxpbmcgdGhlaXIgamF2ZWxpbnMgYXQgaGltIHdhcmlseSwgYW5kIHBlbHQgaGltIHdpdGggc3RvbmVzLCBnYXRoZXJpbmcgcm91bmQgYmVoaW5kIGFuZCBhIGdvb2Qgd2F5IG9mZiwgdGlsbCBoZSBzaG92ZXMgaGFyZCBlbm91Z2ggdG8gcHVsbCB0aGUgcm9wZSBvZiB0aGUgbmV0IHRpZ2h0LiBUaGVuIGxldCB0aGUgbW9zdCBleHBlcmllbmNlZCBhbmQgbW9zdCBwb3dlcmZ1bCBtYW4gaW4gdGhlIGZpZWxkIGFwcHJvYWNoIGhpbSBpbiBmcm9udCBhbmQgdGhydXN0IGhpcyBzcGVhciBpbnRvIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['10.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5JZiwgaW4gc3BpdGUgb2YgamF2ZWxpbnMgYW5kIHN0b25lcywgaGUgcmVmdXNlcyB0byBwdWxsIHRoZSByb3BlIHRpZ2h0LCBidXQgZHJhd3MgYmFjaywgd2hlZWxzIHJvdW5kIGFuZCBtYXJrcyBoaXMgYXNzYWlsYW50LCBpbiB0aGF0IGNhc2UgdGhlIG1hbiBtdXN0IGFwcHJvYWNoIGhpbSBzcGVhciBpbiBoYW5kLCBhbmQgZ3Jhc3AgaXQgd2l0aCB0aGUgbGVmdCBpbiBmcm9udCBhbmQgdGhlIHJpZ2h0IGJlaGluZCwgc2luY2UgdGhlIGxlZnQgc3RlYWRpZXMgd2hpbGUgdGhlIHJpZ2h0IGRyaXZlcyBpdC4gVGhlIGxlZnQgZm9vdCBtdXN0IGZvbGxvdyB0aGUgbGVmdCBoYW5kIGZvcndhcmQsIGFuZCB0aGUgcmlnaHQgZm9vdCB0aGUgb3RoZXIgaGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['10.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBoZSBhZHZhbmNlcyBsZXQgaGltIGhvbGQgdGhlIHNwZWFyIGJlZm9yZSBoaW0sIHdpdGggaGlzIGxlZ3Mgbm90IG11Y2ggZnVydGhlciBhcGFydCB0aGFuIGluIHdyZXN0bGluZywgdHVybmluZyB0aGUgbGVmdCBzaWRlIHRvd2FyZHMgdGhlIGxlZnQgaGFuZCwgYW5kIHRoZW4gd2F0Y2hpbmcgdGhlIGJlYXN0J3MgZXllIGFuZCBub3RpbmcgdGhlIG1vdmVtZW50IG9mIHRoZSBmZWxsb3cncyBoZWFkLiBMZXQgaGltIHByZXNlbnQgdGhlIHNwZWFyLCB0YWtpbmcgY2FyZSB0aGF0IHRoZSBib2FyIGRvZXNuJ3Qga25vY2sgaXQgb3V0IG9mIGhpcyBoYW5kIHdpdGggYSBqZXJrIG9mIGhpcyBoZWFkLCBzaW5jZSBoZSBmb2xsb3dzIHVwIHRoZSBpbXBldHVzIG9mIHRoZSBzdWRkZW4ga25vY2suCjwvdHJhbnNsYXRpb24+"
translation['10.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5JbiBjYXNlIHRoaXMgYWNjaWRlbnQgc2hvdWxkIGhhcHBlbiwgdGhlIG1hbiBtdXN0IGZhbGwgb24gaGlzIGZhY2UgYW5kIGNsdXRjaCB0aGUgdW5kZXJncm93dGggYmVuZWF0aCBoaW0sIGZvciwgaWYgdGhlIGJlYXN0IGF0dGFja3MgaGltIGluIHRoaXMgcG9zaXRpb24sIGhlIGlzIHVuYWJsZSB0byBsaWZ0IHRoZSBtYW4ncyBib2R5IG93aW5nIHRvIHRoZSB1cHdhcmQgY3VydmUgb2YgaGlzIHR1c2tzOyBidXQgaWYgaGlzIGJvZHkgaXMgb2ZmIHRoZSBncm91bmQsIHRoZSBtYW4gaXMgY2VydGFpbiB0byBiZSBnb3JlZC4gQ29uc2VxdWVudGx5IHRoZSBib2FyIHRyaWVzIHRvIGxpZnQgaGltIHVwLCBhbmQsIGlmIGhlIGNhbm5vdCwgaGUgc3RhbmRzIG92ZXIgYW5kIHRyYW1wbGVzIG9uIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['10.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYSBtYW4gaW4gdGhpcyBjcml0aWNhbCBzaXR1YXRpb24gdGhlcmUgaXMgb25seSBvbmUgZXNjYXBlIGZyb20gdGhlc2UgZGlzYXN0ZXJzLiBPbmUgb2YgaGlzIGZlbGxvdyBodW50c21lbiBtdXN0IGFwcHJvYWNoIHdpdGggYSBzcGVhciBhbmQgcHJvdm9rZSB0aGUgYm9hciBieSBtYWtpbmcgYXMgdGhvdWdoIGhlIHdvdWxkIGh1cmwgaXQ7IGJ1dCBoZSBtdXN0IG5vdCBodXJsIGl0LCBvciBoZSBtYXkgaGl0IHRoZSBtYW4gb24gdGhlIGdyb3VuZC4KPC90cmFuc2xhdGlvbj4="
translation['10.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5PbiBzZWVpbmcgdGhpcyB0aGUgYm9hciB3aWxsIGxlYXZlIHRoZSBtYW4gdW5kZXIgaGltIGFuZCB0dXJuIHNhdmFnZWx5IGFuZCBmdXJpb3VzbHkgb24gaGlzIHRvcm1lbnRvci4gVGhlIG90aGVyIG11c3QganVtcCB1cCBpbnN0YW50bHksIHJlbWVtYmVyaW5nIHRvIGtlZXAgaGlzIHNwZWFyIGluIGhpcyBoYW5kIGFzIGhlIHJpc2VzLCBmb3Igc2FmZXR5IHdpdGhvdXQgdmljdG9yeSBpcyBub3QgaG9ub3VyYWJsZS4KPC90cmFuc2xhdGlvbj4="
translation['10.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5IZSBtdXN0IGFnYWluIHByZXNlbnQgdGhlIHNwZWFyIGluIHRoZSBzYW1lIHdheSBhcyBiZWZvcmUsIGFuZCB0aHJ1c3QgaXQgaW5zaWRlIHRoZSBzaG91bGRlci1ibGFkZSB3aGVyZSB0aGUgdGhyb2F0IGlzLCBhbmQgcHVzaCB3aXRoIGFsbCBoaXMgbWlnaHQuIFRoZSBlbnJhZ2VkIGJlYXN0IHdpbGwgY29tZSBvbiwgYW5kIGJ1dCBmb3IgdGhlIHRlZXRoIG9mIHRoZSBibGFkZSwgd291bGQgc2hvdmUgaGltc2VsZiBmb3J3YXJkIGFsb25nIHRoZSBzaGFmdCBmYXIgZW5vdWdoIHRvIHJlYWNoIHRoZSBtYW4gaG9sZGluZyB0aGUgc3BlYXIuCjwvdHJhbnNsYXRpb24+"
translation['10.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGlzIHN0cmVuZ3RoIGlzIHNvIGdyZWF0IHRoYXQgaGUgaGFzIHNvbWUgcGVjdWxpYXIgcHJvcGVydGllcyB3aGljaCBvbmUgd291bGQgbmV2ZXIgaW1hZ2luZSBoaW0gdG8gcG9zc2Vzcy4gVGh1cywgaWYgeW91IGxheSBoYWlycyBvbiBoaXMgdHVza3MgaW1tZWRpYXRlbHkgYWZ0ZXIgaGUgaXMgZGVhZCwgdGhleSBzaHJpdmVsIHVwLCBzdWNoIGlzIHRoZSBoZWF0IG9mIHRoZSB0dXNrcy4gV2hpbGUgaGUgaXMgYWxpdmUgdGhleSBiZWNvbWUgaW50ZW5zZWx5IGhvdCB3aGVuZXZlciBoZSBpcyBwcm92b2tlZCwgb3IgdGhlIHN1cmZhY2Ugb2YgdGhlIGhvdW5kcycgY29hdHMgd291bGQgbm90IGJlIHNpbmdlZCB3aGVuIGhlIHRyaWVzIHRvIGdvcmUgdGhlbSBhbmQgbWlzc2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWxsIHRoaXMgdHJvdWJsZSwgYW5kIGV2ZW4gbW9yZSwgdGhlIG1hbGUgYW5pbWFsIGNhdXNlcyBiZWZvcmUgaGUgaXMgY2F1Z2h0LiBJZiB0aGUgY3JlYXR1cmUgaW4gdGhlIHRvaWxzIGlzIGEgc293LCBydW4gdXAgYW5kIHN0aWNrIGhlciwgdGFraW5nIGNhcmUgbm90IHRvIGJlIGtub2NrZWQgZG93bi4gU3VjaCBhbiBhY2NpZGVudCBpcyBib3VuZCB0byByZXN1bHQgaW4geW91ciBiZWluZyB0cmFtcGxlZCBhbmQgYml0dGVuLiBTbyBkb24ndCBmYWxsIHVuZGVyIGhlciwgaWYgeW91IGNhbiBoZWxwIGl0LiBJZiB5b3UgZ2V0IGludG8gdGhhdCBwb3NpdGlvbiB1bmludGVudGlvbmFsbHksIHRoZSBzYW1lIGFpZHMgdG8gcmlzZSB0aGF0IGFyZSB1c2VkIHRvIGFzc2lzdCBhIG1hbiB1bmRlciBhIGJvYXIgYXJlIGVtcGxveWVkLiBXaGVuIG9uIHlvdXIgZmVldCBhZ2FpbiwgeW91IG11c3QgcGx5IHRoZSBzcGVhciB1bnRpbCB5b3Uga2lsbCBoZXIuCjwvdHJhbnNsYXRpb24+"
translation['10.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5vdGhlciB3YXkgb2YgY2FwdHVyaW5nIHRoZW0gaXMgYXMgZm9sbG93cy4gVGhlIG5ldHMgYXJlIHNldCB1cCBmb3IgdGhlbSBhdCB0aGUgcGFzc2FnZXMgZnJvbSBnbGVucyBpbnRvIG9hayBjb3BwaWNlcywgZGVsbHMgYW5kIHJvdWdoIHBsYWNlcywgb24gdGhlIG91dHNraXJ0cyBvZiBtZWFkb3dzLCBmZW5zIGFuZCBzaGVldHMgb2Ygd2F0ZXIuIFRoZSBrZWVwZXIsIHNwZWFyIGluIGhhbmQsIHdhdGNoZXMgdGhlIG5ldHMuIFRoZSBodW50c21lbiB0YWtlIHRoZSBob3VuZHMgYW5kIHNlYXJjaCBmb3IgdGhlIGxpa2VsaWVzdCBwbGFjZXMuIEFzIHNvb24gYXMgdGhlIGJvYXIgaXMgZm91bmQsIGhlIGlzIHB1cnN1ZWQuIElmIGhlIGZhbGxzIGludG8gdGhlIG5ldCwgdGhlIG5ldC1rZWVwZXIgbXVzdCB0YWtlCjwvdHJhbnNsYXRpb24+"
translation['10.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5oaXMgc3BlYXIsIGFwcHJvYWNoIHRoZSBib2FyLCBhbmQgdXNlIGl0IGFzIEkgaGF2ZSBleHBsYWluZWQuIFRoZSBib2FyIGlzIGFsc28gY2FwdHVyZWQsIGluIGhvdCB3ZWF0aGVyLCB3aGVuIHB1cnN1ZWQgYnkgdGhlIGhvdW5kczsgZm9yIGluIHNwaXRlIG9mIGhpcyBwcm9kaWdpb3VzIHN0cmVuZ3RoLCB0aGUgYW5pbWFsIHRpcmVzIHdpdGggaGFyZCBicmVhdGhpbmcuCjwvdHJhbnNsYXRpb24+"
translation['10.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5NYW55IGhvdW5kcyBhcmUga2lsbGVkIGluIHRoaXMga2luZCBvZiBzcG9ydCwgYW5kIHRoZSBodW50c21lbiB0aGVtc2VsdmVzIHJ1biByaXNrcywgd2hlbmV2ZXIgaW4gdGhlIGNvdXJzZSBvZiB0aGUgcHVyc3VpdCB0aGV5IGFyZSBmb3JjZWQgdG8gYXBwcm9hY2ggYSBib2FyIHdpdGggdGhlaXIgc3BlYXJzIGluIHRoZWlyIGhhbmRzLCB3aGVuIGhlIGlzIHRpcmVkIG9yIHN0YW5kaW5nIGluIHdhdGVyIG9yIGhhcyBwb3N0ZWQgaGltc2VsZiBieSBhIHN0ZWVwIGRlY2xpdml0eSBvciBpcyB1bndpbGxpbmcgdG8gY29tZSBvdXQgb2YgYSB0aGlja2V0OyBmb3IgbmVpdGhlciBuZXQgbm9yIGFueXRoaW5nIGVsc2Ugc3RvcHMgaGltIGZyb20gcnVzaGluZyBhdCBhbnlvbmUgY29taW5nIG5lYXIgaGltLiBOZXZlcnRoZWxlc3MgYXBwcm9hY2ggdGhleSBtdXN0IGluIHRoZXNlIGNpcmN1bXN0YW5jZXMsIGFuZCBzaG93IHRoZSBwbHVjayB0aGF0IGxlZCB0aGVtIHRvIHRha2UgdXAgdGhpcyBob2JieS4KPC90cmFuc2xhdGlvbj4="
translation['10.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IG11c3QgdXNlIHRoZSBzcGVhciBhbmQgdGhlIGZvcndhcmQgcG9zaXRpb24gb2YgdGhlIGJvZHkgYXMgZXhwbGFpbmVkOyB0aGVuLCBpZiBhIG1hbiBkb2VzIGNvbWUgdG8gZ3JpZWYsIGl0IHdpbGwgbm90IGJlIHRocm91Z2ggZG9pbmcgdGhpbmdzIHRoZSB3cm9uZyB3YXkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkNhbHRyb3BzIGFyZSBhbHNvIHNldCBmb3IgdGhlbSBhcyBmb3IgdGhlIGRlZXIgYW5kIGluIHRoZSBzYW1lIHBsYWNlcy4gVGhlIHJvdXRpbmUgb2YgaW5zcGVjdGlvbiBhbmQgcHVyc3VpdCwgdGhlIG1ldGhvZHMgb2YgYXBwcm9hY2ggYW5kIHRoZSB1c2Ugb2YgdGhlIHNwZWFyIGFyZSB0aGUgc2FtZS4KPC90cmFuc2xhdGlvbj4="
translation['10.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHlvdW5nIHBpZ3MgYXJlIG5vdCB0byBiZSBjYXVnaHQgd2l0aG91dCBkaWZmaWN1bHR5LiBGb3IgdGhleSBhcmUgbm90IGxlZnQgYWxvbmUgc28gbG9uZyBhcyB0aGV5IGFyZSBsaXR0bGUsIGFuZCB3aGVuIHRoZSBob3VuZHMgZmluZCB0aGVtIG9yIHRoZXkgc2VlIHNvbWV0aGluZyBjb21pbmcsIHRoZXkgcXVpY2tseSB2YW5pc2ggaW50byB0aGUgd29vZDsgYW5kIHRoZXkgYXJlIGdlbmVyYWxseSBhY2NvbXBhbmllZCBieSBib3RoIHBhcmVudHMsIHdobyBhcmUgZmllcmNlIGF0IHN1Y2ggdGltZXMgYW5kIG1vcmUgcmVhZHkgdG8gZmlnaHQgZm9yIHRoZWlyIHlvdW5nIHRoYW4gZm9yIHRoZW1zZWx2ZXMuCjwvdHJhbnNsYXRpb24+"
translation['11.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TGlvbnMsIGxlb3BhcmRzLCBseW54ZXMsIHBhbnRoZXJzLCBiZWFycyBhbmQgYWxsIHNpbWlsYXIgd2lsZCBiZWFzdHMgYXJlIGNhcHR1cmVkIGluIGZvcmVpZ24gY291bnRyaWVzLCBhYm91dCBNdC4gUGFuZ2FldXMgYW5kIENpdHR1cyBiZXlvbmQgTWFjZWRvbmlhLCBvbiBNeXNpYW4gT2x5bXB1cyBhbmQgUGluZHVzLCBvbiBOeXNhIGJleW9uZCBTeXJpYSwgYW5kIGluIG90aGVyIG1vdW50YWluIHJhbmdlcyBjYXBhYmxlIG9mIHN1cHBvcnRpbmcgc3VjaCBhbmltYWxzLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBtb3VudGFpbnMgdGhleSBhcmUgc29tZXRpbWVzIHBvaXNvbmVkLCBvd2luZyB0byB0aGUgZGlmZmljdWx0eSBvZiB0aGUgZ3JvdW5kLCB3aXRoIGFjb25pdGUuIEh1bnRlcnMgcHV0IGl0IGRvd24gbWl4ZWQgd2l0aCB0aGUgYW5pbWFscycgZmF2b3VyaXRlIGZvb2Qgcm91bmQgcG9vbHMgYW5kIGluIG90aGVyIHBsYWNlcyB0aGF0IHRoZXkgZnJlcXVlbnQuCjwvdHJhbnNsYXRpb24+"
translation['11.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlNvbWV0aW1lcywgd2hpbGUgdGhleSBhcmUgZ29pbmcgZG93biB0byB0aGUgcGxhaW4gYXQgbmlnaHQsIHRoZXkgYXJlIGN1dCBvZmYgYnkgcGFydGllcyBvZiBhcm1lZCBhbmQgbW91bnRlZCBtZW4uIFRoaXMgaXMgYSBkYW5nZXJvdXMgbWV0aG9kIG9mIGNhcHR1cmluZyB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlNvbWV0aW1lcyB0aGUgaHVudGVycyBkaWcgbGFyZ2UsIHJvdW5kLCBkZWVwIGhvbGVzLCBsZWF2aW5nIGEgcGlsbGFyIG9mIGVhcnRoIGluIHRoZSBtaWRkbGUuIFRoZXkgdGllIHVwIGEgZ29hdCBhbmQgcHV0IGl0IG9uIHRoZSBwaWxsYXIgaW4gdGhlIGV2ZW5pbmcsIGFuZCBwaWxlIHdvb2Qgcm91bmQgdGhlIGhvbGUgd2l0aG91dCBsZWF2aW5nIGFuIGVudHJhbmNlLCBzbyB0aGF0IHRoZSBhbmltYWxzIGNhbm5vdCBzZWUgd2hhdCBsaWVzIGluIGZyb250LiBPbiBoZWFyaW5nIHRoZSBibGVhdGluZyBpbiB0aGUgbmlnaHQsIHRoZSBiZWFzdHMgcnVuIHJvdW5kIHRoZSBiYXJyaWVyLCBhbmQgZmluZGluZyBubyBvcGVuaW5nLCBqdW1wIG92ZXIgYW5kIGFyZSBjYXVnaHQuCjwvdHJhbnNsYXRpb24+"
translation['12.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2l0aCB0aGUgcHJhY3RpY2FsIHNpZGUgb2YgaHVudGluZyBJIGhhdmUgZmluaXNoZWQuIEJ1dCB0aGUgYWR2YW50YWdlcyB0aGF0IHRob3NlIHdobyBoYXZlIGJlZW4gYXR0cmFjdGVkIGJ5IHRoaXMgcHVyc3VpdCB3aWxsIGdhaW4gYXJlIG1hbnkuIEZvciBpdCBtYWtlcyB0aGUgYm9keSBoZWFsdGh5LCBpbXByb3ZlcyB0aGUgc2lnaHQgYW5kIGhlYXJpbmcsIGFuZCBrZWVwcyBtZW4gZnJvbSBncm93aW5nIG9sZDsgYW5kIGl0IGFmZm9yZHMgdGhlIGJlc3QgdHJhaW5pbmcgZm9yIHdhci4KPC90cmFuc2xhdGlvbj4="
translation['12.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSBmaXJzdCBwbGFjZSwgd2hlbiBtYXJjaGluZyBvdmVyIHJvdWdoIHJvYWRzIHVuZGVyIGFybXMsIHRoZXkgd2lsbCBub3QgdGlyZTogYWNjdXN0b21lZCB0byBjYXJyeSBhcm1zIGZvciBjYXB0dXJpbmcgd2lsZCBiZWFzdHMsIHRoZXkgd2lsbCBiZWFyIHVwIHVuZGVyIHRoZWlyIHRhc2tzLiBBZ2FpbiwgdGhleSB3aWxsIGJlIGNhcGFibGUgb2Ygc2xlZXBpbmcgb24gYSBoYXJkIGJlZCBhbmQgb2YgZ3VhcmRpbmcgd2VsbCB0aGUgcGxhY2UgYXNzaWduZWQgdG8gdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['12.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkluIGFuIGF0dGFjazxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgd29yZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM+B4b25z4POv860zr/PgjwvZm9yZWlnbj4gaW4gdGhpcyBzZW5zZSBpcyBhIGh1bnRlcnMnIHRlcm0uPC9ub3RlPiBvbiB0aGUgZW5lbXkgdGhleSB3aWxsIGJlIGFibGUgdG8gZ28gZm9yIGhpbSBhbmQgYXQgdGhlIHNhbWUgdGltZSB0byBjYXJyeSBvdXQgdGhlIG9yZGVycyB0aGF0IGFyZSBwYXNzZWQgYWxvbmcsIGJlY2F1c2UgdGhleSBhcmUgdXNlZCB0byBkbyB0aGUgc2FtZSB0aGluZ3Mgb24gdGhlaXIgb3duIGFjY291bnQgd2hlbiBjYXB0dXJpbmcgdGhlIGdhbWUuIElmIHRoZWlyIHBvc3QgaXMgaW4gdGhlIHZhbiB0aGV5IHdpbGwgbm90IGRlc2VydCBpdCwgYmVjYXVzZSB0aGV5IGNhbiBlbmR1cmUuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Az4HhvbnPg86/zrTOv8+CPC9mb3JlaWduPiBpbiB0aGlzIHNlbnNlIGlzIGEgaHVudGVycycgdGVybS48L3RyYW5zbGF0aW9uPg=="
translation['12.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSByb3V0IG9mIHRoZSBlbmVteSB0aGV5IHdpbGwgbWFrZSBzdHJhaWdodCBmb3IgdGhlIGZvZSB3aXRob3V0IGEgc2xpcCBvdmVyIGFueSBraW5kIG9mIGdyb3VuZCwgdGhyb3VnaCBoYWJpdC4gSWYgcGFydCBvZiB0aGVpciBvd24gYXJteSBoYXMgbWV0IHdpdGggZGlzYXN0ZXIgaW4gZ3JvdW5kIHJlbmRlcmVkIGRpZmZpY3VsdCBieSB3b29kcyBhbmQgZGVmaWxlcyBvciB3aGF0IG5vdCwgdGhleSB3aWxsIG1hbmFnZSB0byBzYXZlIHRoZW1zZWx2ZXMgd2l0aG91dCBsb3NzIG9mIGhvbm91ciBhbmQgdG8gc2F2ZSBvdGhlcnMuIEZvciB0aGVpciBmYW1pbGlhcml0eSB3aXRoIHRoZSBidXNpbmVzcyB3aWxsIGdpdmUgdGhlbSBrbm93bGVkZ2UgdGhhdCBvdGhlcnMgbGFjay4KPC90cmFuc2xhdGlvbj4="
translation['12.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkluZGVlZCwgaXQgaGFzIGhhcHBlbmVkIGJlZm9yZSBub3csIHdoZW4gYSBncmVhdCBob3N0IG9mIGFsbGllcyBoYXMgYmVlbiBwdXQgdG8gZmxpZ2h0LCB0aGF0IGEgbGl0dGxlIGJhbmQgb2Ygc3VjaCBtZW4sIHRocm91Z2ggdGhlaXIgZml0bmVzcyBhbmQgY29uZmlkZW5jZSwgaGFzIHJlbmV3ZWQgdGhlIGJhdHRsZSBhbmQgcm91dGVkIHRoZSB2aWN0b3Jpb3VzIGVuZW15IHdoZW4gaGUgaGFzIGJsdW5kZXJlZCBvd2luZyB0byBkaWZmaWN1bHRpZXMgaW4gdGhlIGdyb3VuZC4gRm9yIG1lbiB3aG8gYXJlIHNvdW5kIGluIGJvZHkgYW5kIG1pbmQgbWF5IGFsd2F5cyBzdGFuZCBvbiB0aGUgdGhyZXNob2xkIG9mIHN1Y2Nlc3MuCjwvdHJhbnNsYXRpb24+"
translation['12.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkl0IHdhcyBiZWNhdXNlIHRoZXkga25ldyB0aGF0IHRoZXkgb3dlZCB0aGVpciBzdWNjZXNzZXMgYWdhaW5zdCB0aGUgZW5lbXkgdG8gc3VjaCBxdWFsaXRpZXMgdGhhdCBvdXIgYW5jZXN0b3JzIGxvb2tlZCBhZnRlciB0aGUgeW91bmcgbWVuLiBGb3IgaW4gc3BpdGUgb2YgdGhlIHNjYXJjaXR5IG9mIGNvcm4gaXQgd2FzIHRoZWlyIGN1c3RvbSBmcm9tIHRoZSBlYXJsaWVzdCB0aW1lcyBub3QgdG8gcHJldmVudCBodW50ZXJzIGZyb20gaHVudGluZyBvdmVyIGFueSBncm93aW5nIGNyb3BzOyBhbmQsIGluIGFkZGl0aW9uLCBub3QgdG8gcGVybWl0IGh1bnRpbmcgYXQKPC90cmFuc2xhdGlvbj4="
translation['12.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPm5pZ2h0IHdpdGhpbiBhIHJhZGl1cyBvZiBtYW55IGZ1cmxvbmdzIGZyb20gdGhlIGNpdHksIHNvIHRoYXQgdGhlIG1hc3RlcnMgb2YgdGhhdCBhcnQgbWlnaHQgbm90IHJvYiB0aGUgeW91bmcgbWVuIG9mIHRoZWlyIGdhbWUuIEluIGZhY3QgdGhleSBzYXcgdGhhdCB0aGlzIGlzIHRoZSBvbmx5IG9uZSBhbW9uZyB0aGUgcGxlYXN1cmVzIG9mIHRoZSB5b3VuZ2VyIG1lbiB0aGF0IHByb2R1Y2VzIGEgcmljaCBjcm9wIG9mIGJsZXNzaW5ncy4gRm9yIGl0IG1ha2VzIHNvYmVyIGFuZCB1cHJpZ2h0IG1lbiBvZiB0aGVtLCBiZWNhdXNlIHRoZXkgYXJlIHRyYWluZWQgaW4gdGhlIHNjaG9vbCBvZiB0cnV0aDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCBhIHRyYWluaW5nIHRoYXQgcmVhbGx5IGJ1aWxkcyB1cCB0aGUgY2hhcmFjdGVyLiBUaGVyZSBpcyBhbiBpbXBsaWVkIGNvbnRyYXN0IHdpdGggdGhlIGltcG9zdHVyZSBvZiB0aGUgZWR1Y2F0aW9uIGdpdmVuIGJ5IHNvcGhpc3RzLjwvbm90ZT4gKGFuZCB0aGV5IHBlcmNlaXZlZAo8L3RyYW5zbGF0aW9uPg=="
translation['12.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPnRoYXQgdG8gdGhlc2UgbWVuIHRoZXkgb3dlZCB0aGVpciBzdWNjZXNzIGluIHdhciwgYXMgaW4gb3RoZXIgbWF0dGVycyk7IGFuZCBpdCBkb2VzIG5vdCBrZWVwIHRoZW0gZnJvbSBhbnkgb3RoZXIgaG9ub3VyYWJsZSBvY2N1cGF0aW9uIHRoZXkgd2lzaCB0byBmb2xsb3csIGxpa2Ugb3RoZXIgYW5kIGV2aWwgcGxlYXN1cmVzIHRoYXQgdGhleSBvdWdodCBub3QgdG8gbGVhcm4uIE9mIHN1Y2ggbWVuLCB0aGVyZWZvcmUsIGFyZSBnb29kIHNvbGRpZXJzIGFuZCBnb29kIGdlbmVyYWxzIG1hZGUuCjwvdHJhbnNsYXRpb24+"
translation['12.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGV5IHdob3NlIHRvaWxzIHJvb3Qgb3V0IHdoYXRldmVyIGlzIGJhc2UgYW5kIGZyb3dhcmQgZnJvbSBtaW5kIGFuZCBib2R5IGFuZCBtYWtlIGRlc2lyZSBmb3IgdmlydHVlIHRvIGZsb3VyaXNoIGluIHRoZWlyIHBsYWNl4oCUdGhleSBhcmUgdGhlIGJlc3QsIHNpbmNlIHRoZXkgd2lsbCBub3QgYnJvb2sgaW5qdXN0aWNlIHRvIHRoZWlyIG93biBjaXR5IG5vciBpbmp1cnkgdG8gaXRzIHNvaWwuCjwvdHJhbnNsYXRpb24+"
translation['12.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U29tZSBzYXkgdGhhdCBpdCBpcyBub3QgcmlnaHQgdG8gbG92ZSBodW50aW5nLCBiZWNhdXNlIGl0IG1heSBsZWFkIHRvIG5lZ2xlY3Qgb2Ygb25lJ3MgZG9tZXN0aWMgYWZmYWlycy4gVGhleSBhcmUgbm90IGF3YXJlIHRoYXQgYWxsIHdobyBiZW5lZml0IHRoZWlyIGNpdGllcyBhbmQgdGhlaXIgZnJpZW5kcyBhcmUgbW9yZSBhdHRlbnRpdmUgdG8gdGhlaXIgZG9tZXN0aWMgYWZmYWlycyB0aGFuIG90aGVyIG1lbi4KPC90cmFuc2xhdGlvbj4="
translation['12.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUsIGlmIGtlZW4gc3BvcnRzbWVuIGZpdCB0aGVtc2VsdmVzIHRvIGJlIHVzZWZ1bCB0byB0aGVpciBjb3VudHJ5IGluIG1hdHRlcnMgb2Ygdml0YWwgbW9tZW50LCBuZWl0aGVyIHdpbGwgdGhleSBiZSByZW1pc3MgaW4gdGhlaXIgcHJpdmF0ZSBhZmZhaXJzOiBmb3IgdGhlIHN0YXRlIGlzIG5lY2Vzc2FyaWx5IGNvbmNlcm5lZCBib3RoIGluIHRoZSBzYWZldHkgYW5kIGluIHRoZSBydWluIG9mIHRoZSBpbmRpdmlkdWFsJ3MgZG9tZXN0aWMgZm9ydHVuZXMuIENvbnNlcXVlbnRseSBzdWNoIG1lbiBhcyB0aGVzZSBzYXZlIHRoZSBmb3J0dW5lcyBvZiBldmVyeSBvdGhlciBpbmRpdmlkdWFsIGFzIHdlbGwgYXMgdGhlaXIgb3duLgo8L3RyYW5zbGF0aW9uPg=="
translation['12.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgbWFueSBvZiB0aG9zZSB3aG8gdGFsayBpbiB0aGlzIHdheSwgYmxpbmRlZCBieSBqZWFsb3VzeSwgY2hvb3NlIHRvIGJlIHJ1aW5lZCB0aHJvdWdoIHRoZWlyIG93biBldmlsIHJhdGhlciB0aGFuIGJlIHNhdmVkIGJ5IG90aGVyIG1lbidzIHZpcnR1ZS4gRm9yIG1vc3QgcGxlYXN1cmVzIGFyZSBldmlsLCBhbmQgYnkgeWllbGRpbmcgdG8gdGhlc2UgdGhleSBhcmUgZW5jb3VyYWdlZCBlaXRoZXIgdG8gc2F5IG9yIHRvIGRvIHdoYXQgaXMgd3JvbmcuCjwvdHJhbnNsYXRpb24+"
translation['12.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGJ5IHRoZWlyIGZyaXZvbG91cyB3b3JkcyB0aGV5IG1ha2UgZW5lbWllcywgYW5kIGJ5IHRoZWlyIGV2aWwgZGVlZHMgYnJpbmcgZGlzZWFzZXMgYW5kIGxvc3NlcyBhbmQgZGVhdGggb24gdGhlbXNlbHZlcywgdGhlaXIgY2hpbGRyZW4gYW5kIHRoZWlyIGZyaWVuZHMsIGJlaW5nIHdpdGhvdXQgcGVyY2VwdGlvbiBvZiB0aGUgZXZpbHMsIGJ1dCBtb3JlIHBlcmNlcHRpdmUgdGhhbiBvdGhlcnMgb2YgdGhlIHBsZWFzdXJlcy4gV2hvIHdvdWxkIGVtcGxveSB0aGVzZSB0byBzYXZlIGEgc3RhdGU/CjwvdHJhbnNsYXRpb24+"
translation['12.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Gcm9tIHRoZXNlIGV2aWxzLCBob3dldmVyLCBldmVyeW9uZSB3aG8gbG92ZXMgdGhhdCB3aGljaCBJIHJlY29tbWVuZCB3aWxsIGhvbGQgYWxvb2YsIHNpbmNlIGEgZ29vZCBlZHVjYXRpb24gdGVhY2hlcyBhIG1hbiB0byBvYnNlcnZlIGxhd3MsIHRvIHRhbGsgb2YgcmlnaHRlb3VzbmVzcyBhbmQgaGVhciBvZiBpdC4KPC90cmFuc2xhdGlvbj4="
translation['12.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaG9zZSwgdGhlbiwgd2hvIGhhdmUgZ2l2ZW4gdGhlbXNlbHZlcyB1cCB0byBjb250aW51YWwgdG9pbCBhbmQgbGVhcm5pbmcgaG9sZCBmb3IgdGhlaXIgb3duIHBvcnRpb24gbGFib3Jpb3VzIGxlc3NvbnMgYW5kIGV4ZXJjaXNlcywgYnV0IHRoZXkgaG9sZCBzYWZldHkgZm9yIHRoZWlyIGNpdGllcy4gQnV0IGlmIGFueSBkZWNsaW5lIHRvIHJlY2VpdmUgaW5zdHJ1Y3Rpb24gYmVjYXVzZSBvZiB0aGUgbGFib3VyIGFuZCBwcmVmZXIgdG8gbGl2ZSBhbW9uZyB1bnRpbWVseSBwbGVhc3VyZXMsIHRoZXkgYXJlIGJ5IG5hdHVyZSB1dHRlcmx5IGV2aWwuCjwvdHJhbnNsYXRpb24+"
translation['12.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhleSBvYmV5IG5laXRoZXIgbGF3cyBub3IgZ29vZCB3b3JkcywgZm9yIGJlY2F1c2UgdGhleSB0b2lsIG5vdCwgdGhleSBkbyBub3QgZGlzY292ZXIgd2hhdCBhIGdvb2QgbWFuIG91Z2h0IHRvIGJlLCBzbyB0aGF0IHRoZXkgY2Fubm90IGJlIHBpb3VzIG9yIHdpc2UgbWVuOyBhbmQgYmVpbmcgd2l0aG91dCBlZHVjYXRpb24gdGhleSBjb25zdGFudGx5IGZpbmQgZmF1bHQgd2l0aCB0aGUgZWR1Y2F0ZWQuCjwvdHJhbnNsYXRpb24+"
translation['12.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGVzZSBtZW4ncyBoYW5kcywgdGhlcmVmb3JlLCBub3RoaW5nIGNhbiBwcm9zcGVyLiBBbGwgZGlzY292ZXJpZXMgdGhhdCBoYXZlIGJlbmVmaXRlZCBtYW5raW5kIGFyZSBkdWUgdG8gdGhlIGJldHRlciBzb3J0Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgYXJndW1lbnQsIHN1Y2ggYXMgaXQgaXMsIHdvdWxkIGJlIGJldHRlciB3aXRoIOKAnHRoZSB0b2lsZXJzLOKAnSBmb3Ig4oCcdGhlIGJldHRlciBzb3J0LOKAnSBhbmQgdGhlIG5leHQgd29yZHMgd291bGQgdGhlbiBiZSDigJx0aG9zZSB3aG8gYXJlIHdpbGxpbmcgdG8gdG9pbCwgdGhlcmVmb3JlLCBhcmUgdGhlIGJldHRlciBtZW4u4oCdPC9ub3RlPiBOb3cgdGhlIGJldHRlciBzb3J0IGFyZSB0aG9zZSB3aG8gYXJlIHdpbGxpbmcgdG8gdG9pbC4gQW5kIHRoaXMgaGFzIGJlZW4gcHJvdmVkIGJ5IGEgZ3JlYXQgZXhhbXBsZS4KPC90cmFuc2xhdGlvbj4="
translation['12.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYW1vbmcgdGhlIGFuY2llbnRzIHRoZSBjb21wYW5pb25zIG9mIENoZWlyb24gdG8gd2hvbSBJIHJlZmVycmVkIGxlYXJudCBtYW55IG5vYmxlIGxlc3NvbnMgaW4gdGhlaXIgeW91dGgsIGJlZ2lubmluZyB3aXRoIGh1bnRpbmc7IGZyb20gdGhlc2UgbGVzc29ucyB0aGVyZSBzcHJhbmcgaW4gdGhlbSBncmVhdCB2aXJ0dWUsIGZvciB3aGljaCB0aGV5IGFyZSBhZG1pcmVkIGV2ZW4gdG9kYXkuIFRoYXQgYWxsIGRlc2lyZSBWaXJ0dWUgaXMgb2J2aW91cywgYnV0IGJlY2F1c2UgdGhleSBtdXN0IHRvaWwgaWYgdGhleSBhcmUgdG8gZ2FpbiBoZXIsIHRoZSBtYW55IGZhbGwgYXdheS4KPC90cmFuc2xhdGlvbj4="
translation['12.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIGFjaGlldmVtZW50IG9mIGhlciBpcyBoaWRkZW4gaW4gb2JzY3VyaXR5LCB3aGVyZWFzIHRoZSB0b2lscyBpbnNlcGFyYWJsZSBmcm9tIGhlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIHPhc+EfM+JPC9mb3JlaWduPiwg4oCcaXQs4oCdIGkuZS4sIHRoZSBhY2hpZXZlbWVudCwgd291bGQgYmUgYW4gaW1wcm92ZW1lbnQuPC9ub3RlPiBhcmUgbWFuaWZlc3QuPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byBz4XPhHzPiTwvZm9yZWlnbj4sIOKAnGl0LOKAnSBpLmUuLCB0aGUgYWNoaWV2ZW1lbnQsIHdvdWxkIGJlIGFuIGltcHJvdmVtZW50LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBtYXkgYmUgdGhhdCwgaWYgaGVyIGJvZHkgd2VyZSB2aXNpYmxlLCBtZW4gd291bGQgYmUgbGVzcyBjYXJlbGVzcyBvZiB2aXJ0dWUsIGtub3dpbmcgdGhhdCBzaGUgc2VlcyB0aGVtIGFzIGNsZWFybHkgYXMgdGhleSBzZWUgaGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['12.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igd2hlbiBoZSBpcyBzZWVuIGJ5IGhpcyBiZWxvdmVkIGV2ZXJ5IG1hbiByaXNlcyBhYm92ZSBoaW1zZWxmIGFuZCBzaHJpbmtzIGZyb20gd2hhdCBpcyB1Z2x5IGFuZCBldmlsIGluIHdvcmQgb3IgZGVlZCwgZm9yIGZlYXIgb2YgYmVpbmcgc2VlbiBieSBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['12.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaW4gdGhlIHByZXNlbmNlIG9mIFZpcnR1ZSBtZW4gZG8gbWFueSBldmlsIGFuZCB1Z2x5IHRoaW5ncywgc3VwcG9zaW5nIHRoYXQgdGhleSBhcmUgbm90IHJlZ2FyZGVkIGJ5IGhlciBiZWNhdXNlIHRoZXkgZG8gbm90IHNlZSBoZXIuIFlldCBzaGUgaXMgcHJlc2VudCBldmVyeXdoZXJlIGJlY2F1c2Ugc2hlIGlzIGltbW9ydGFsLCBhbmQgc2hlIGhvbm91cnMgdGhvc2Ugd2hvIGFyZSBnb29kIHRvIGhlciwgYnV0IGNhc3RzIG9mZiB0aGUgYmFkLiBUaGVyZWZvcmUsIGlmIG1lbiBrbmV3IHRoYXQgc2hlIGlzIHdhdGNoaW5nIHRoZW0sIHRoZXkgd291bGQgYmUgaW1wYXRpZW50IHRvIHVuZGVyZ28gdGhlIHRvaWxzIGFuZCB0aGUgZGlzY2lwbGluZSBieSB3aGljaCBzaGUgaXMgaGFyZGx5IHRvIGJlIGNhcHR1cmVkLCBhbmQgd291bGQgYWNoaWV2ZSBoZXIuCjwvdHJhbnNsYXRpb24+"
translation['13.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSBhbSBzdXJwcmlzZWQgYXQgdGhlIHNvcGhpc3RzLCBhcyB0aGV5IGFyZSBjYWxsZWQsIGJlY2F1c2UsIHRob3VnaCBtb3N0IG9mIHRoZW0gcHJvZmVzcyB0byBsZWFkIHRoZSB5b3VuZyB0byB2aXJ0dWUgdGhleSBsZWFkIHRoZW0gdG8gdGhlIHZlcnkgb3Bwb3NpdGUuIFdlIGhhdmUgbmV2ZXIgc2VlbiBhbnl3aGVyZSB0aGUgbWFuIHdob3NlIGdvb2RuZXNzIHdhcyBkdWUgdG8gdGhlIHNvcGhpc3RzIG9mIG91ciBnZW5lcmF0aW9uLiBOZWl0aGVyIGRvIHRoZWlyIGNvbnRyaWJ1dGlvbnMgdG8gbGl0ZXJhdHVyZSB0ZW5kIHRvIG1ha2UgbWVuIGdvb2Q6IGJ1dCB0aGV5IGhhdmUgd3JpdHRlbgo8L3RyYW5zbGF0aW9uPg=="
translation['13.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPm1hbnkgYm9va3Mgb24gZnJpdm9sb3VzIHN1YmplY3RzLCBib29rcyB0aGF0IG9mZmVyIHRoZSB5b3VuZyBlbXB0eSBwbGVhc3VyZXMsIGJ1dCBwdXQgbm8gdmlydHVlIGludG8gdGhlbS4gVG8gcmVhZCB0aGVtIGluIHRoZSBob3BlIG9mIGxlYXJuaW5nIHNvbWV0aGluZyBmcm9tIHRoZW0gaXMgbWVyZSB3YXN0ZSBvZiB0aW1lLCBhbmQgdGhleSBrZWVwIG9uZSBmcm9tIHVzZWZ1bCBvY2N1cGF0aW9ucyBhbmQgdGVhY2ggd2hhdCBpcyBiYWQuCjwvdHJhbnNsYXRpb24+"
translation['13.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlZm9yZSB0aGVpciBncmF2ZSBmYXVsdHMgaW5jdXIgbXkgZ3JhdmVyIGNlbnN1cmUuIEFzIGZvciB0aGUgc3R5bGUgb2YgdGhlaXIgd3JpdGluZ3MsIEkgY29tcGxhaW4gdGhhdCB0aGUgbGFuZ3VhZ2UgaXMgZmFyLWZldGNoZWQsIGFuZCB0aGVyZSBpcyBubyB0cmFjZSBpbiB0aGVtIG9mIHdob2xlc29tZSBtYXhpbXMgYnkgd2hpY2ggdGhlIHlvdW5nIG1pZ2h0IGJlIHRyYWluZWQgdG8gdmlydHVlLgo8L3RyYW5zbGF0aW9uPg=="
translation['13.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkkgYW0gbm8gcHJvZmVzc29yLCBidXQgSSBrbm93IHRoYXQgdGhlIGJlc3QgdGhpbmcgaXMgdG8gYmUgdGF1Z2h0IHdoYXQgaXMgZ29vZCBieSBvbmUncyBvd24gbmF0dXJlLCBhbmQgdGhlIG5leHQgYmVzdCB0aGluZyBpcyB0byBnZXQgaXQgZnJvbSB0aG9zZSB3aG8gcmVhbGx5IGtub3cgc29tZXRoaW5nIGdvb2QgaW5zdGVhZCBvZiBiZWluZyB0YXVnaHQgYnkgbWFzdGVycyBvZiB0aGUgYXJ0IG9mIGRlY2VwdGlvbi4KPC90cmFuc2xhdGlvbj4="
translation['13.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkkgZGFyZXNheSB0aGF0IEkgZG8gbm90IGV4cHJlc3MgbXlzZWxmIGluIHRoZSBsYW5ndWFnZSBvZiBhIHNvcGhpc3Q7IGluIGZhY3QsIHRoYXQgaXMgbm90IG15IG9iamVjdDogbXkgb2JqZWN0IGlzIHJhdGhlciB0byBnaXZlIHV0dGVyYW5jZSB0byB3aG9sZXNvbWUgdGhvdWdodHMgdGhhdCB3aWxsIG1lZXQgdGhlIG5lZWRzIG9mIHJlYWRlcnMgd2VsbCBlZHVjYXRlZCBpbiB2aXJ0dWUuIEZvciB3b3JkcyB3aWxsIG5vdCBlZHVjYXRlLCBidXQgbWF4aW1zLCBpZiB3ZWxsIGZvdW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['13.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk1hbnkgb3RoZXJzIGJlc2lkZXMgbXlzZWxmIGJsYW1lIHRoZSBzb3BoaXN0cyBvZiBvdXIgZ2VuZXJhdGlvbuKAlHBoaWxvc29waGVycyBJIHdpbGwgbm90IGNhbGwgdGhlbSDigJRiZWNhdXNlIHRoZSB3aXNkb20gdGhleSBwcm9mZXNzIGNvbnNpc3RzIG9mIHdvcmRzIGFuZCBub3Qgb2YgdGhvdWdodHMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkkgYW0gd2VsbCBhd2FyZSB0aGF0IHNvbWVvbmUsIHBlcmhhcHMgb25lIG9mIHRoaXMgc2V0LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCBhIHNvcGhpc3QuIEJ1dCB0aGUgdGV4dCBvZiB3aGF0IGZvbGxvd3MgaXMgb3BlbiB0byBzdXNwaWNpb24uPC9ub3RlPiB3aWxsIHNheSB0aGF0IHdoYXQgaXMgd2VsbCBhbmQgbWV0aG9kaWNhbGx5IHdyaXR0ZW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQzrPOvc+Jz4POvOG9s869zrEsPC9mb3JlaWduPiDigJx0aG91Z2h0LOKAnSB3b3VsZCBiZSBhIGdyZWF0IGltcHJvdmVtZW50IG9uIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6zzrXOs8+BzrHOvM684b2zzr3OsSw8L2ZvcmVpZ24+IOKAnHdyaXR0ZW4u4oCdPC9ub3RlPiBpcyBub3Qgd2VsbCBhbmQgbWV0aG9kaWNhbGx5IHdyaXR0ZW7igJRmb3IgaGFzdHkgYW5kIGZhbHNlIGNlbnN1cmUgd2lsbCBjb21lIGVhc2lseSB0byB0aGVtLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDOs869z4nPg8684b2zzr3OsSw8L2ZvcmVpZ24+IOKAnHRob3VnaHQs4oCdIHdvdWxkIGJlIGEgZ3JlYXQgaW1wcm92ZW1lbnQgb24gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrPOtc6zz4HOsc68zrzhvbPOvc6xLDwvZm9yZWlnbj4g4oCcd3JpdHRlbi7igJ08L3RyYW5zbGF0aW9uPg=="
translation['13.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBteSBhaW0gaW4gd3JpdGluZyBoYXMgYmVlbiB0byBwcm9kdWNlIHNvdW5kIHdvcmsgdGhhdCB3aWxsIG1ha2UgbWVuIG5vdCB3aXNlYWNyZXMsIGJ1dCB3aXNlIGFuZCBnb29kLiBGb3IgSSB3aXNoIG15IHdvcmsgbm90IHRvIHNlZW0gdXNlZnVsLCBidXQgdG8gYmUgc28sIHRoYXQgaXQgbWF5IHN0YW5kIGZvciBhbGwgdGltZSB1bnJlZnV0ZWQuCjwvdHJhbnNsYXRpb24+"
translation['13.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBzb3BoaXN0cyB0YWxrIHRvIGRlY2VpdmUgYW5kIHdyaXRlIGZvciB0aGVpciBvd24gZ2FpbiwgYW5kIGRvIG5vIGdvb2QgdG8gYW55b25lLiBGb3IgdGhlcmUgaXMgbm90LCBhbmQgdGhlcmUgbmV2ZXIgd2FzLCBhIHdpc2UgbWFuIGFtb25nIHRoZW07IGV2ZXJ5b25lIG9mIHRoZW0gaXMgY29udGVudCB0byBiZSBjYWxsZWQgYSBzb3BoaXN0LCB3aGljaCBpcyBhIHRlcm0gb2YgcmVwcm9hY2ggYW1vbmcgc2Vuc2libGUgbWVuLiBTbyBteSBhZHZpY2UgaXM6CjwvdHJhbnNsYXRpb24+"
translation['13.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkF2b2lkIHRoZSBiZWhlc3RzIG9mIHRoZSBzb3BoaXN0cywgYW5kIGRlc3Bpc2Ugbm90IHRoZSBjb25jbHVzaW9ucyBvZiB0aGUgcGhpbG9zb3BoZXJzOyBmb3IgdGhlIHNvcGhpc3RzIGh1bnQgdGhlIHJpY2ggYW5kIHlvdW5nLCBidXQgdGhlIHBoaWxvc29waGVycyBhcmUgZnJpZW5kcyB0byBhbGwgYWxpa2U6IGJ1dCBhcyBmb3IgbWVuJ3MgZm9ydHVuZXMsIHRoZXkgbmVpdGhlciBob25vdXIgbm9yIGRlc3Bpc2UgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['13.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RW52eSBub3QgdGhvc2UgZWl0aGVyIHdobyByZWNrbGVzc2x5IHNlZWsgdGhlaXIgb3duIGFkdmFudGFnZSB3aGV0aGVyIGluIHByaXZhdGUgb3IgaW4gcHVibGljIGxpZmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+UHJvZmVzc2lvbmFsIHBvbGl0aWNpYW5zLjwvbm90ZT4g4oCUYmVhciBpbiBtaW5kIHRoYXQgdGhlIGJlc3Qgb2YgdGhlbSwgdGhvdWdoIHRoZXkgYXJlIGZhdm91cmFibHkganVkZ2VkLCBhcmUgZW52aWVkLCBhbmQgdGhlIGJhZCBib3RoIGZhcmUgYmFkbHkgYW5kIGFyZSB1bmZhdm91cmFibHkganVkZ2VkLgo8L3RyYW5zbGF0aW9uPg=="
translation['13.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgZW5nYWdlZCBpbiByb2JiaW5nIHByaXZhdGUgcGVyc29ucyBvZiB0aGVpciBwcm9wZXJ0eSwgb3IgcGx1bmRlcmluZyB0aGUgc3RhdGUsIHRoZXkgcmVuZGVyIGxlc3Mgc2VydmljZSB0aGFuIHByaXZhdGUgcGVyc29ucyB3aGVuIHBsYW5zIGZvciBzZWN1cmluZyB0aGUgY29tbW9uIHNhZmV0eSBhcmUgYWZvb3QsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIHRoZXkgY29udHJpdmUgdG8g4oCcc2F2ZSB0aGVpciBwb2NrZXRzLuKAnTwvbm90ZT4gYW5kIGluIGJvZHkgdGhleSBhcmUgZGlzZ3JhY2VmdWxseSB1bmZpdCBmb3Igd2FyIGJlY2F1c2UgdGhleSBhcmUgaW5jYXBhYmxlIG9mIHRvaWwuIEJ1dCBodW50c21lbiBvZmZlciB0aGVpciBsaXZlcyBhbmQgdGhlaXIgcHJvcGVydHkgaW4gc291bmQgY29uZGl0aW9uIGZvciB0aGUgc2VydmljZSBvZiB0aGUgY2l0aXplbnMuCjwvdHJhbnNsYXRpb24+"
translation['13.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVzZSBhdHRhY2sgdGhlIHdpbGQgYmVhc3RzLCB0aG9zZSBvdGhlcnMgdGhlaXIgZnJpZW5kcy4gQW5kIHdoZXJlYXMgdGhvc2Ugd2hvIGF0dGFjayB0aGVpciBmcmllbmRzIGVhcm4gaW5mYW15IGJ5IGdlbmVyYWwgY29uc2VudCwgaHVudHNtZW4gYnkgYXR0YWNraW5nIHRoZSB3aWxkIGJlYXN0cyBnYWluIGEgZ29vZCByZXBvcnQuIEZvciBpZiB0aGV5IG1ha2UgYSBjYXB0dXJlLCB0aGV5IHdpbiB2aWN0b3J5IG92ZXIgZW5lbXkgZm9yY2VzOiBhbmQgaWYgdGhleSBmYWlsLCB0aGV5IGFyZSBjb21tZW5kZWQsIGluIHRoZSBmaXJzdCBwbGFjZSwgYmVjYXVzZSB0aGV5IGFzc2FpbCBwb3dlcnMgaG9zdGlsZSB0byB0aGUgd2hvbGUgY29tbXVuaXR5OyBhbmQsIHNlY29uZGx5LCBiZWNhdXNlIHRoZXkgZ28gb3V0IG5laXRoZXIgdG8gaGFybSBhIG1hbiBub3IgZm9yIHNvcmRpZCBnYWluLgo8L3RyYW5zbGF0aW9uPg=="
translation['13.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Nb3Jlb3ZlciwgdGhlIHZlcnkgYXR0ZW1wdCBtYWtlcyB0aGVtIGJldHRlciBpbiBtYW55IHdheXMgYW5kIHdpc2VyOyBhbmQgd2Ugd2lsbCBnaXZlIHRoZSByZWFzb24uIFVubGVzcyB0aGV5IGFib3VuZCBpbiBsYWJvdXJzIGFuZCBpbnZlbnRpb25zIGFuZCBwcmVjYXV0aW9ucywgdGhleSBjYW5ub3QgY2FwdHVyZSBnYW1lLgo8L3RyYW5zbGF0aW9uPg=="
translation['13.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIGZvcmNlcyBjb250ZW5kaW5nIHdpdGggdGhlbSwgZmlnaHRpbmcgZm9yIHRoZWlyIGxpZmUgYW5kIGluIHRoZWlyIG93biBob21lLCBhcmUgaW4gZ3JlYXQgc3RyZW5ndGg7IHNvIHRoYXQgdGhlIGh1bnRzbWFuJ3MgbGFib3VycyBhcmUgaW4gdmFpbiwgdW5sZXNzIGJ5IGdyZWF0ZXIgcGVyc2V2ZXJhbmNlIGFuZCBieSBtdWNoIGludGVsbGlnZW5jZSBoZSBjYW4gb3ZlcmNvbWUgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['13.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gZmluZSwgdGhlIHBvbGl0aWNpYW4gd2hvc2Ugb2JqZWN0cyBhcmUgc2VsZmlzaCBwcmFjdGlzZXMgZm9yIHZpY3Rvcnkgb3ZlciBmcmllbmRzLCB0aGUgaHVudHNtYW4gZm9yIHZpY3Rvcnkgb3ZlciBjb21tb24gZm9lcy4gVGhpcyBwcmFjdGljZSBtYWtlcyB0aGUgb25lIGEgYmV0dGVyLCB0aGUgb3RoZXIgYSBmYXIgd29yc2UgZmlnaHRlciBhZ2FpbnN0IGFsbCBvdGhlciBlbmVtaWVzLiBUaGUgb25lIHRha2VzIHBydWRlbmNlIHdpdGggaGltIGZvciBjb21wYW5pb24gaW4gdGhlIGNoYXNlLCB0aGUgb3RoZXIgYmFzZSByYXNobmVzcy4KPC90cmFuc2xhdGlvbj4="
translation['13.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgb25lIGNhbiBkZXNwaXNlIG1hbGljZSBhbmQgYXZhcmljZSwgdGhlIG90aGVyIGNhbm5vdC4gVGhlIGxhbmd1YWdlIG9mIHRoZSBvbmUgaXMgZ3JhY2lvdXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIGtpbmRseSBhbmQgcGxlYXNhbnQ7IG5vdCByZWNrbGVzcyBhbmQgc2hhbWVsZXNzIGxpa2UgdGhhdCBvZiB0aGUgcG9saXRpY2lhbnMuPC9ub3RlPiBvZiB0aGUgb3RoZXIgdWdseS4gQXMgZm9yIHJlbGlnaW9uLCBub3RoaW5nIGNoZWNrcyBpbXBpZXR5IGluIHRoZSBvbmUsIHRoZSBvdGhlciBpcyBjb25zcGljdW91cyBmb3IgaGlzIHBpZXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['13.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5JbiBmYWN0LCBhbiBhbmNpZW50IHN0b3J5IGhhcyBpdCB0aGF0IHRoZSBnb2RzIGRlbGlnaHQgaW4gdGhpcyBidXNpbmVzcywgYm90aCBhcyBmb2xsb3dlcnMgYW5kIHNwZWN0YXRvcnMgb2YgdGhlIGNoYXNlLiBUaGVyZWZvcmUsIHJlZmxlY3Rpbmcgb24gdGhlc2UgdGhpbmdzLCB0aGUgeW91bmcgd2hvIGRvIHdoYXQgSSBleGhvcnQgdGhlbSB0byBkbyB3aWxsIHB1dCB0aGVtc2VsdmVzIGluIHRoZSB3YXkgb2YgYmVpbmcgZGVhciB0byB0aGUgZ29kcyBhbmQgcGlvdXMgbWVuLCBjb25zY2lvdXMgdGhhdCBvbmUgb3Igb3RoZXIgb2YgdGhlIGdvZHMgaXMgd2F0Y2hpbmcgdGhlaXIgZGVlZHMuIFRoZXNlIHdpbGwgYmUgZ29vZCB0byBwYXJlbnRzLCBnb29kIHRvIHRoZSB3aG9sZSBjaXR5LCB0byBldmVyeSBvbmUgb2YgdGhlaXIgZnJpZW5kcyBhbmQgZmVsbG93LWNpdGl6ZW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['13.18'] = ""
translation['1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gb3IgbXkgcGFydCBJIGhhdmUgYWx3YXlzIGhlbGQgdGhhdCB0aGUgY29uc3RpdHV0aW9uIG9mIGEgc3RhdGUgcmVmbGVjdHMgdGhlIGNoYXJhY3RlciBvZiB0aGUgbGVhZGluZyBwb2xpdGljaWFucy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIEludHJvZHVjdGlvbi48L25vdGU+IEJ1dCBzb21lIG9mIHRoZSBsZWFkaW5nIG1lbiBhdCBBdGhlbnMgaGF2ZSBzdGF0ZWQgdGhhdCB0aGV5IHJlY29nbml6ZSBqdXN0aWNlIGFzIGNsZWFybHkgYXMgb3RoZXIgbWVuOyDigJxidXQs4oCdIHRoZXkgaGF2ZSBzYWlkLCDigJxvd2luZyB0byB0aGUgcG92ZXJ0eSBvZiB0aGUgbWFzc2VzLCB3ZSBhcmUgZm9yY2VkIHRvIGJlIHNvbWV3aGF0IHVuanVzdCBpbiBvdXIgdHJlYXRtZW50IG9mIHRoZSBjaXRpZXMu4oCdIFRoaXMgc2V0IG1lIHRoaW5raW5nIHdoZXRoZXIgYnkgYW55IG1lYW5zIHRoZSBjaXRpemVucyBtaWdodCBvYnRhaW4gZm9vZCBlbnRpcmVseSBmcm9tIHRoZWlyIG93biBzb2lsLCB3aGljaCB3b3VsZCBjZXJ0YWlubHkgYmUgdGhlIGZhaXJlc3Qgd2F5LiBJIGZlbHQgdGhhdCwgd2VyZSB0aGlzIHNvLCB0aGV5IHdvdWxkIGJlIHJlbGlldmVkIG9mIHRoZWlyIHBvdmVydHksIGFuZCBhbHNvIG9mIHRoZSBzdXNwaWNpb24gd2l0aCB3aGljaCB0aGV5IGFyZSByZWdhcmRlZCBieSB0aGUgR3JlZWsgd29ybGQuCjwvdHJhbnNsYXRpb24+"
translation['1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgYXMgSSB0aG91Z2h0IG92ZXIgbXkgaWRlYXMsIG9uZSB0aGluZyBzZWVtZWQgY2xlYXIgYXQgb25jZSwgdGhhdCB0aGUgY291bnRyeSBpcyBieSBpdHMgbmF0dXJlIGNhcGFibGUgb2YgZnVybmlzaGluZyBhbiBhbXBsZSByZXZlbnVlLiBUbyBkcml2ZSBob21lIHRoZSB0cnV0aCBvZiB0aGlzIHN0YXRlbWVudCBJIHdpbGwgZmlyc3QgZGVzY3JpYmUgdGhlIG5hdHVyYWwgcHJvcGVydGllcyBvZiBBdHRpY2EuCjwvdHJhbnNsYXRpb24+"
translation['1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZXh0cmVtZSBtaWxkbmVzcyBvZiB0aGUgc2Vhc29ucyBoZXJlIGlzIHNob3duIGJ5IHRoZSBhY3R1YWwgcHJvZHVjdHMuIEF0IGFueSByYXRlLCBwbGFudHMgdGhhdCB3aWxsIG5vdCBldmVuIGdyb3cgaW4gbWFueSBjb3VudHJpZXMgYmVhciBmcnVpdCBoZXJlLiBOb3QgbGVzcyBwcm9kdWN0aXZlIHRoYW4gdGhlIGxhbmQgaXMgdGhlIHNlYSBhcm91bmQgdGhlIGNvYXN0cy4gTm90aWNlIHRvbyB0aGF0IHRoZSBnb29kIHRoaW5ncyB3aGljaCB0aGUgZ29kcyBzZW5kIGluIHRoZWlyIHNlYXNvbiBhbGwgY29tZSBpbiBlYXJsaWVyIGhlcmUgYW5kIGdvIG91dCBsYXRlciB0aGFuIGVsc2V3aGVyZS4KPC90cmFuc2xhdGlvbj4="
translation['1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGUgcHJlLWVtaW5lbmNlIG9mIHRoZSBsYW5kIGlzIG5vdCBvbmx5IGluIHRoZSB0aGluZ3MgdGhhdCBibG9vbSBhbmQgd2l0aGVyIGFubnVhbGx5OiBzaGUgaGFzIG90aGVyIGdvb2QgdGhpbmdzIHRoYXQgbGFzdCBmb3IgZXZlci4gTmF0dXJlIGhhcyBwdXQgaW4gaGVyIGFidW5kYW5jZSBvZiBzdG9uZSwgZnJvbSB3aGljaCBhcmUgZmFzaGlvbmVkIGxvdmVseSB0ZW1wbGVzIGFuZCBsb3ZlbHkgYWx0YXJzLCBhbmQgZ29vZGx5IHN0YXR1ZXMgZm9yIHRoZSBnb2RzLiBNYW55IEdyZWVrcyBhbmQgYmFyYmFyaWFucyBhbGlrZSBoYXZlIG5lZWQgb2YgaXQuCjwvdHJhbnNsYXRpb24+"
translation['1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB0aGVyZSBpcyBsYW5kIHRoYXQgeWllbGRzIG5vIGZydWl0IGlmIHNvd24sIGFuZCB5ZXQsIHdoZW4gcXVhcnJpZWQsIGZlZWRzIG1hbnkgdGltZXMgdGhlIG51bWJlciBpdCBjb3VsZCBzdXBwb3J0IGlmIGl0IGdyZXcgY29ybi4gQW5kIHJlY29sbGVjdCwgdGhlcmUgaXMgc2lsdmVyIGluIHRoZSBzb2lsLCB0aGUgZ2lmdCwgYmV5b25kIGRvdWJ0LCBvZiBkaXZpbmUgcHJvdmlkZW5jZTogYXQgYW55IHJhdGUsIG1hbnkgYXMgYXJlIHRoZSBzdGF0ZXMgbmVhciB0byBoZXIgYnkgbGFuZCBhbmQgc2VhLCBpbnRvIG5vbmUgb2YgdGhlbSBkb2VzIGV2ZW4gYSB0aGluIHZlaW4gb2Ygc2lsdmVyIG9yZSBleHRlbmQuCjwvdHJhbnNsYXRpb24+"
translation['1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbmUgbWlnaHQgcmVhc29uYWJseSBzdXBwb3NlIHRoYXQgdGhlIGNpdHkgbGllcyBhdCB0aGUgY2VudHJlIG9mIEdyZWVjZSwgbmF5IG9mIHRoZSB3aG9sZSBpbmhhYml0ZWQgd29ybGQuIEZvciB0aGUgZnVydGhlciB3ZSBnbyBmcm9tIGhlciwgdGhlIG1vcmUgaW50ZW5zZSBpcyB0aGUgaGVhdCBvciBjb2xkIHdlIG1lZXQgd2l0aDsgYW5kIGV2ZXJ5IHRyYXZlbGxlciB3aG8gd291bGQgY3Jvc3MgZnJvbSBvbmUgdG8gdGhlIG90aGVyIGVuZCBvZiBHcmVlY2UgcGFzc2VzIEF0aGVucyBhcyB0aGUgY2VudHJlIG9mIGEgY2lyY2xlLCB3aGV0aGVyIGhlIGdvZXMgYnkgd2F0ZXIgb3IgYnkgcm9hZC4KPC90cmFuc2xhdGlvbj4="
translation['1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4sIHRvbywgdGhvdWdoIHNoZSBpcyBub3Qgd2hvbGx5IHNlYS1naXJ0LCBhbGwgdGhlIHdpbmRzIG9mIGhlYXZlbiBicmluZyB0byBoZXIgdGhlIGdvb2RzIHNoZSBuZWVkcyBhbmQgYmVhciBhd2F5IGhlciBleHBvcnRzLCBhcyBpZiBzaGUgd2VyZSBhbiBpc2xhbmQ7IGZvciBzaGUgbGllcyBiZXR3ZWVuIHR3byBzZWFzOiBhbmQgc2hlIGhhcyBhIHZhc3QgbGFuZCB0cmFkZSBhcyB3ZWxsOyBmb3Igc2hlIGlzIG9mIHRoZSBtYWlubGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkZ1cnRoZXIsIG9uIHRoZSBib3JkZXJzIG9mIG1vc3Qgc3RhdGVzIGR3ZWxsIGJhcmJhcmlhbnMgd2hvIHRyb3VibGUgdGhlbTogYnV0IHRoZSBuZWlnaGJvdXJpbmcgc3RhdGVzIG9mIEF0aGVucyBhcmUgdGhlbXNlbHZlcyByZW1vdGUgZnJvbSB0aGUgYmFyYmFyaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbGwgdGhlc2UgYWR2YW50YWdlcywgYXMgSSBoYXZlIHNhaWQsIGFyZSwgSSBiZWxpZXZlLCBkdWUgdG8gdGhlIGNvdW50cnkgaXRzZWxmLiBCdXQgaW5zdGVhZCBvZiBsaW1pdGluZyBvdXJzZWx2ZXMgdG8gdGhlIGJsZXNzaW5ncyB0aGF0IG1heSBiZSBjYWxsZWQgaW5kaWdlbm91cywgc3VwcG9zZSB0aGF0LCBpbiB0aGUgZmlyc3QgcGxhY2UsIHdlIHN0dWRpZWQgdGhlIGludGVyZXN0cyBvZiB0aGUgcmVzaWRlbnQgYWxpZW5zLiBGb3IgaW4gdGhlbSB3ZSBoYXZlIG9uZSBvZiB0aGUgdmVyeSBiZXN0IHNvdXJjZXMgb2YgcmV2ZW51ZSwgaW4gbXkgb3BpbmlvbiwgaW5hc211Y2ggYXMgdGhleSBhcmUgc2VsZi1zdXBwb3J0aW5nIGFuZCwgc28gZmFyIGZyb20gcmVjZWl2aW5nIHBheW1lbnQgZm9yIHRoZSBtYW55IHNlcnZpY2VzIHRoZXkgcmVuZGVyIHRvIHN0YXRlcywgdGhleSBjb250cmlidXRlIGJ5IHBheWluZyBhIHNwZWNpYWwgdGF4Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkkgdGhpbmsgdGhhdCB3ZSBzaG91bGQgc3R1ZHkgdGhlaXIgaW50ZXJlc3RzIHN1ZmZpY2llbnRseSwgaWYgd2UgcmVsaWV2ZWQgdGhlbSBvZiB0aGUgZHV0aWVzIHRoYXQgc2VlbSB0byBpbXBvc2UgYSBjZXJ0YWluIG1lYXN1cmUgb2YgZGlzYWJpbGl0eSBvbiB0aGUgcmVzaWRlbnQgYWxpZW4gd2l0aG91dCBjb25mZXJyaW5nIGFueSBiZW5lZml0IG9uIHRoZSBzdGF0ZSwgYW5kIGFsc28gb2YgdGhlIG9ibGlnYXRpb24gdG8gc2VydmUgaW4gdGhlIGluZmFudHJ5IGFsb25nIHdpdGggdGhlIGNpdGl6ZW5zLiBBcGFydCBmcm9tIHRoZSBwZXJzb25hbCByaXNrLCBpdCBpcyBubyBzbWFsbCB0aGluZyB0byBsZWF2ZSB0aGVpciB0cmFkZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIE1TUy4gaGF2ZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG/ts69IM+E4b2zzrrOvc+Jzr0sPC9mb3JlaWduPiDigJx0aGVpciBjaGlsZHJlbi7igJ08L25vdGU+IGFuZCB0aGVpciBwcml2YXRlIGFmZmFpcnMuPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4Thv7bOvSDPhOG9s866zr3Pic69LDwvZm9yZWlnbj4g4oCcdGhlaXIgY2hpbGRyZW4u4oCdPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Ez4nOvSDOv+G8sM66zrnPic69LDwvZm9yZWlnbj4g4oCcdGhlaXIgaG91c2VzLOKAnSBtYXkgcG9zc2libHkgYmUgcmlnaHQgaW4gc3BpdGUgb2Ygd2hhdCBpcyBzYWlkIGJlbG93IGluIDYuPC9ub3RlPgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM+Jzr0gzr/hvLDOus65z4nOvSw8L2ZvcmVpZ24+IOKAnHRoZWlyIGhvdXNlcyzigJ0gbWF5IHBvc3NpYmx5IGJlIHJpZ2h0IGluIHNwaXRlIG9mIHdoYXQgaXMgc2FpZCBiZWxvdyBpbiA2LjwvdHJhbnNsYXRpb24+"
translation['2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBzdGF0ZSBpdHNlbGYgdG9vIHdvdWxkIGdhaW4gaWYgdGhlIGNpdGl6ZW5zIHNlcnZlZCBpbiB0aGUgcmFua3MgdG9nZXRoZXIsIGFuZCBubyBsb25nZXIgZm91bmQgdGhlbXNlbHZlcyBpbiB0aGUgc2FtZSBjb21wYW55IHdpdGggTHlkaWFucywgUGhyeWdpYW5zLCBTeXJpYW5zLCBhbmQgYmFyYmFyaWFucyBvZiBhbGwgc29ydHMsIG9mIHdob20gYSBsYXJnZSBwYXJ0IG9mIG91ciBhbGllbiBwb3B1bGF0aW9uIGNvbnNpc3RzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkluIGFkZGl0aW9uIHRvIHRoZSBhZHZhbnRhZ2Ugb2YgZGlzcGVuc2luZyB3aXRoIHRoZSBzZXJ2aWNlcyBvZiB0aGVzZSBtZW4sIGl0IHdvdWxkIGJlIGFuIG9ybmFtZW50IHRvIHRoZSBzdGF0ZSB0aGF0IHRoZSBBdGhlbmlhbnMgc2hvdWxkIGJlIHRob3VnaHQgdG8gcmVseSBvbiB0aGVtc2VsdmVzIHJhdGhlciB0aGFuIG9uIHRoZSBoZWxwIG9mIGZvcmVpZ25lcnMgaW4gZmlnaHRpbmcgdGhlaXIgYmF0dGxlcy4KPC90cmFuc2xhdGlvbj4="
translation['2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JZiwgbW9yZW92ZXIsIHdlIGdyYW50ZWQgdGhlIHJlc2lkZW50IGFsaWVucyB0aGUgcmlnaHQgdG8gc2VydmUgaW4gdGhlIGNhdmFscnkgYW5kIHZhcmlvdXMgb3RoZXIgcHJpdmlsZWdlcyB3aGljaCBpdCBpcyBwcm9wZXIgdG8gZ3JhbnQgdGhlbSwgSSB0aGluayB0aGF0IHdlIHNob3VsZCBmaW5kIHRoZWlyIGxveWFsdHkgaW5jcmVhc2UgYW5kIGF0IHRoZSBzYW1lIHRpbWUgc2hvdWxkIGFkZCB0byB0aGUgc3RyZW5ndGggYW5kIGdyZWF0bmVzcyBvZiB0aGUgc3RhdGUuCjwvdHJhbnNsYXRpb24+"
translation['2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuIGFnYWluLCBzaW5jZSB0aGVyZSBhcmUgbWFueSB2YWNhbnQgc2l0ZXMgZm9yIGhvdXNlcyB3aXRoaW4gdGhlIHdhbGxzLCBpZiB0aGUgc3RhdGUgYWxsb3dlZCBhcHByb3ZlZCBhcHBsaWNhbnRzIHRvIGVyZWN0IGhvdXNlcyBvbiB0aGVzZSBhbmQgZ3JhbnRlZCB0aGVtIHRoZSBmcmVlaG9sZCBvZiB0aGUgbGFuZCwgSSB0aGluayB0aGF0IHdlIHNob3VsZCBmaW5kIGEgbGFyZ2VyIGFuZCBiZXR0ZXIgY2xhc3Mgb2YgcGVyc29ucyBkZXNpcmluZyB0byBsaXZlIGF0IEF0aGVucy4KPC90cmFuc2xhdGlvbj4="
translation['2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgaWYgd2UgYXBwb2ludGVkIGEgYm9hcmQgb2YgR3VhcmRpYW5zIG9mIEFsaWVucyBhbmFsb2dvdXMgdG8gdGhlIEd1YXJkaWFucyBvZiBPcnBoYW5zLCBhbmQgc29tZSBraW5kIG9mIGRpc3RpbmN0aW9uIHdlcmUgZWFybWFya2VkIGZvciBndWFyZGlhbnMgd2hvc2UgbGlzdCBvZiByZXNpZGVudCBhbGllbnMgd2FzIGxvbmdlc3QsIHRoYXQgdG9vIHdvdWxkIGFkZCB0byB0aGUgbG95YWx0eSBvZiB0aGUgYWxpZW5zLCBhbmQgcHJvYmFibHkgYWxsIHdpdGhvdXQgYSBjaXR5IHdvdWxkIGNvdmV0IHRoZSByaWdodCBvZiBzZXR0bGluZyBpbiBBdGhlbnMsIGFuZCB3b3VsZCBpbmNyZWFzZSBvdXIgcmV2ZW51ZXMuCjwvdHJhbnNsYXRpb24+"
translation['3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHNoYWxsIG5vdyBzYXkgc29tZXRoaW5nIG9mIHRoZSB1bnJpdmFsbGVkIGFtZW5pdGllcyBhbmQgYWR2YW50YWdlcyBvZiBvdXIgY2l0eSBhcyBhIGNvbW1lcmNpYWwgY2VudHJlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGUgZmlyc3QgcGxhY2UsIEkgcHJlc3VtZSwgc2hlIHBvc3Nlc3NlcyB0aGUgZmluZXN0IGFuZCBzYWZlc3QgYWNjb21vZGF0aW9uIGZvciBzaGlwcGluZywgc2luY2UgdmVzc2VscyBjYW4gYW5jaG9yIGhlcmUgYW5kIHJpZGUgc2FmZSBhdCB0aGVpciBtb29yaW5ncyBpbiBzcGl0ZSBvZiBiYWQgd2VhdGhlci4KPC90cmFuc2xhdGlvbj4="
translation['3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk1vcmVvdmVyLCBhdCBtb3N0IG90aGVyIHBvcnRzIG1lcmNoYW50cyBhcmUgY29tcGVsbGVkIHRvIHNoaXAgYSByZXR1cm4gY2FyZ28sIGJlY2F1c2UgdGhlIGxvY2FsIGN1cnJlbmN5IGhhcyBubyBjaXJjdWxhdGlvbiBpbiBvdGhlciBzdGF0ZXM7IGJ1dCBhdCBBdGhlbnMgdGhleSBoYXZlIHRoZSBvcHBvcnR1bml0eSBvZiBleGNoYW5naW5nIHRoZWlyIGNhcmdvIGFuZCBleHBvcnRpbmcgdmVyeSBtYW55IGNsYXNzZXMgb2YgZ29vZHMgdGhhdCBhcmUgaW4gZGVtYW5kLCBvciwgaWYgdGhleSBkbyBub3Qgd2FudCB0byBzaGlwIGEgcmV0dXJuIGNhcmdvIG9mIGdvb2RzLCBpdCBpcyBzb3VuZCBidXNpbmVzcyB0byBleHBvcnQgc2lsdmVyOyBmb3IsIHdoZXJldmVyIHRoZXkgc2VsbCBpdCwgdGhleSBhcmUgc3VyZSB0byBtYWtlIGEgcHJvZml0IG9uIHRoZSBjYXBpdGFsIGludmVzdGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JZiBwcml6ZXMgd2VyZSBvZmZlcmVkIHRvIHRoZSBtYWdpc3RyYXRlcyBvZiB0aGUgbWFya2V0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBtYXJrZXQgYXQgdGhlIFBlaXJhZXVzLiBUaGUgZnVuY3Rpb25zIG9mIHRoZSBCb2FyZCBhbGx1ZGVkIHRvIGFyZSB1bmtub3duLCBhcGFydCBmcm9tIHdoYXQgaXMgaW1wbGllZCBpbiB0aGUgdGV4dC48L25vdGU+IGZvciBqdXN0IGFuZCBwcm9tcHQgc2V0dGxlbWVudCBvZiBkaXNwdXRlcywgc28gdGhhdCBzYWlsaW5ncyB3ZXJlIG5vdCBkZWxheWVkLCB0aGUgZWZmZWN0IHdvdWxkIGJlIHRoYXQgYSBmYXIgbGFyZ2VyIG51bWJlciBvZiBtZXJjaGFudHMgd291bGQgdHJhZGUgd2l0aCB1cyBhbmQgd2l0aCBtdWNoIGdyZWF0ZXIgc2F0aXNmYWN0aW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkl0IHdvdWxkIGFsc28gYmUgYW4gZXhjZWxsZW50IHBsYW4gdG8gcmVzZXJ2ZSBmcm9udCBzZWF0cyBpbiB0aGUgdGhlYXRyZSBmb3IgbWVyY2hhbnRzIGFuZCBzaGlwb3duZXJzLCBhbmQgdG8gb2ZmZXIgdGhlbSBob3NwaXRhbGl0eSBvY2Nhc2lvbmFsbHksIHdoZW4gdGhlIGhpZ2ggcXVhbGl0eSBvZiB0aGVpciBzaGlwcyBhbmQgbWVyY2hhbmRpc2UgZW50aXRsZXMgdGhlbSB0byBiZSBjb25zaWRlcmVkIGJlbmVmYWN0b3JzIG9mIHRoZSBzdGF0ZS4gV2l0aCB0aGUgcHJvc3BlY3Qgb2YgdGhlc2UgaG9ub3VycyBiZWZvcmUgdGhlbSB0aGV5IHdvdWxkIGxvb2sgb24gdXMgYXMgZnJpZW5kcyBhbmQgaGFzdGVuIHRvIHZpc2l0IHVzIHRvIHdpbiB0aGUgaG9ub3VyIGFzIHdlbGwgYXMgdGhlIHByb2ZpdC4KPC90cmFuc2xhdGlvbj4="
translation['3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgcmlzZSBpbiB0aGUgbnVtYmVyIG9mIHJlc2lkZW50cyBhbmQgdmlzaXRvcnMgd291bGQgb2YgY291cnNlIGxlYWQgdG8gYSBjb3JyZXNwb25kaW5nIGV4cGFuc2lvbiBvZiBvdXIgaW1wb3J0cyBhbmQgZXhwb3J0cywgb2Ygc2FsZXMsIHJlbnRzIGFuZCBjdXN0b21zLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgc3VjaCBhZGRpdGlvbnMgdG8gb3VyIHJldmVudWVzIGFzIHRoZXNlIG5lZWQgY29zdCB1cyBub3RoaW5nIHdoYXRldmVyIGJleW9uZCBiZW5ldm9sZW50IGxlZ2lzbGF0aW9uIGFuZCBtZWFzdXJlcyBvZiBjb250cm9sLiBPdGhlciBtZXRob2RzIG9mIHJhaXNpbmcgcmV2ZW51ZSB0aGF0IEkgaGF2ZSBpbiBtaW5kIHdpbGwgcmVxdWlyZSBjYXBpdGFsLCBubyBkb3VidC4KPC90cmFuc2xhdGlvbj4="
translation['3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk5ldmVydGhlbGVzcyBJIHZlbnR1cmUgdG8gaG9wZSB0aGF0IHRoZSBjaXRpemVucyB3b3VsZCBjb250cmlidXRlIGVhZ2VybHkgdG93YXJkcyBzdWNoIG9iamVjdHMsIHdoZW4gSSByZWNhbGwgdGhlIGxhcmdlIHN1bXMgY29udHJpYnV0ZWQgYnkgdGhlIHN0YXRlIHdoZW4gTHlzaXN0cmF0dXMgd2FzIGluIGNvbW1hbmQgYW5kIHRyb29wcyB3ZXJlIHNlbnQgdG8gYWlkIHRoZSBBcmNhZGlhbnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxkYXRlIGF1dGhuYW1lPSItMzY2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY2Ij4zNjY8L2RhdGU+IEIuQy48L25vdGU+IGFuZCBhZ2FpbiBpbiB0aGUgdGltZSBvZiBIZWdlc2lsZW9zLjxkYXRlIGF1dGhuYW1lPSItMzY2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY2Ij4zNjY8L2RhdGU+IEIuQy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGRhdGUgYXV0aG5hbWU9Ii0zNjEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjEiPjM2MTwvZGF0ZT4gQi5DLiBIZWdlc2lsZW9zIGNvbW1hbmRlZCBhdCB0aGUgYmF0dGxlIG9mIE1hbnRpbmVhLjwvbm90ZT4KPGRhdGUgYXV0aG5hbWU9Ii0zNjEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjEiPjM2MTwvZGF0ZT4gQi5DLiBIZWdlc2lsZW9zIGNvbW1hbmRlZCBhdCB0aGUgYmF0dGxlIG9mIE1hbnRpbmVhLjwvdHJhbnNsYXRpb24+"
translation['3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkkgYW0gYWxzbyBhd2FyZSB0aGF0IGxhcmdlIGV4cGVuZGl0dXJlIGlzIGZyZXF1ZW50bHkgaW5jdXJyZWQgdG8gc2VuZCB3YXJzaGlwcyBhYnJvYWQsIHRob3VnaCBub25lIGNhbiB0ZWxsIHdoZXRoZXIgdGhlIHZlbnR1cmUgd2lsbCBiZSBmb3IgYmV0dGVyIG9yIHdvcnNlLCBhbmQgdGhlIG9ubHkgdGhpbmcgY2VydGFpbiBpcyB0aGF0IHRoZSBzdWJzY3JpYmVycyB3aWxsIG5ldmVyIHNlZSB0aGVpciBtb25leSBiYWNrIG5vciBldmVuIGVuam95IGFueSBwYXJ0IG9mIHdoYXQgdGhleSBjb250cmlidXRlLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBubyBpbnZlc3RtZW50IGNhbiB5aWVsZCB0aGVtIHNvIGZpbmUgYSByZXR1cm4gYXMgdGhlIG1vbmV5IGFkdmFuY2VkIGJ5IHRoZW0gdG8gZm9ybSB0aGUgY2FwaXRhbCBmdW5kLiBGb3IgZXZlcnkgc3Vic2NyaWJlciBvZiB0ZW4gbWluYWUsIGRyYXdpbmcgdGhyZWUgb2JvbHMgYSBkYXksIGdldHMgbmVhcmx5IHR3ZW50eSBwZXIgY2VudC7igJRhcyBtdWNoIGFzIGhlIHdvdWxkIGdldCBvbiBib3R0b21yeTs8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+MyBvYm9scyBhIGRheSBhcmUgdG8gYmUgcGFpZCBieSB0aGUgc3RhdGUgdG8gZXZlcnkgY2l0aXplbiwgaS5lLiwgMTgwIGRyYWNobWFlIGEgeWVhciwgb3IgbmVhcmx5IDIgbWluYWUsIHdoaWNoIGlzIG5lYXJseSAyIHBlciBjZW50LiBvbiAxMCBtaW5hZSwgYW5kIGV4YWN0bHkgMzYgcGVyIGNlbnQuIG9uIGhhbGYgdGhhdCBzdW0uPC9ub3RlPiBhbmQgZXZlcnkgc3Vic2NyaWJlciBvZiBmaXZlIG1pbmFlIGdldHMgbW9yZSB0aGFuIGEgdGhpcmQgb2YgaGlzIGNhcGl0YWwgYmFjayBpbiBpbnRlcmVzdC4KPC90cmFuc2xhdGlvbj4="
translation['3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgbW9zdCBvZiB0aGUgQXRoZW5pYW5zIHdpbGwgZ2V0IG92ZXIgYSBodW5kcmVkIHBlciBjZW50LiBpbiBhIHllYXIsIGZvciB0aG9zZSB3aG8gYWR2YW5jZSBvbmUgbWluYSB3aWxsIGRyYXcgYW4gaW5jb21lIG9mIG5lYXJseSB0d28gbWluYWUsIGd1YXJhbnRlZWQgYnkgdGhlIHN0YXRlLCB3aGljaCBpcyB0byBhbGwgYXBwZWFyYW5jZXMgdGhlIHNhZmVzdCBhbmQgbW9zdCBkdXJhYmxlIG9mIGh1bWFuIGluc3RpdHV0aW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSB0aGluaywgdG9vLCB0aGF0IGlmIHRoZWlyIG5hbWVzIHdlcmUgdG8gYmUgcmVjb3JkZWQgaW4gdGhlIHJvbGwgb2YgYmVuZWZhY3RvcnMgZm9yIGFsbCB0aW1lLCBtYW55IGZvcmVpZ25lcnMgYWxzbyB3b3VsZCBzdWJzY3JpYmUsIGFuZCBhIGNlcnRhaW4gbnVtYmVyIG9mIHN0YXRlcyB3b3VsZCBiZSBhdHRyYWN0ZWQgYnkgdGhlIHByb3NwZWN0IG9mIGVucm9sbWVudC4gSSBiZWxpZXZlIHRoYXQgZXZlbiBraW5ncyBhbmQgZGVzcG90cyBhbmQgb3JpZW50YWwgZ292ZXJub3JzIHdvdWxkIGRlc2lyZSB0byBzaGFyZSBpbiB0aGlzIHJld2FyZC4KPC90cmFuc2xhdGlvbj4="
translation['3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBmdW5kcyB3ZXJlIHN1ZmZpY2llbnQsIGl0IHdvdWxkIGJlIGEgZmluZSBwbGFuIHRvIGJ1aWxkIG1vcmUgbG9kZ2luZy1ob3VzZXMgZm9yIHNoaXBvd25lcnMgbmVhciB0aGUgaGFyYm91cnMsIGFuZCBjb252ZW5pZW50IHBsYWNlcyBvZiBleGNoYW5nZSBmb3IgbWVyY2hhbnRzLCBhbHNvIGhvdGVscyB0byBhY2NvbW9kYXRlIHZpc2l0b3JzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgaWYgaG91c2VzIGFuZCBzaG9wcyB3ZXJlIHB1dCB1cCBib3RoIGluIHRoZSBQZWlyYWV1cyBhbmQgaW4gdGhlIGNpdHkgZm9yIHJldGFpbCB0cmFkZXJzLCB0aGV5IHdvdWxkIGJlIGFuIG9ybmFtZW50IHRvIHRoZSBzdGF0ZSwgYW5kIGF0IHRoZSBzYW1lIHRpbWUgdGhlIHNvdXJjZSBvZiBhIGNvbnNpZGVyYWJsZSByZXZlbnVlLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TW9yZW92ZXIsIEkgdGhpbmsgaXQgd291bGQgYmUgYSBnb29kIHBsYW4gdG8gdGFrZSBhIGhpbnQgZnJvbSB0aGUgc3RhdGUgb3duZXJzaGlwIG9mIHB1YmxpYyB3YXJzaGlwcywgYW5kIHRvIHNlZSB3aGV0aGVyIGl0IGJlIHBvc3NpYmxlIHRvIGFjcXVpcmUgYSBmbGVldCBvZiBwdWJsaWMgbWVyY2hhbnQgdmVzc2VscyBhbmQgdG8gbGVhc2UgdGhlbSB1bmRlciBzZWN1cml0aWVzLCBsaWtlIG91ciBvdGhlciBwdWJsaWMgcHJvcGVydHkuIEZvciBpZiB0aGlzIHByb3ZlZCB0byBiZSBwcmFjdGljYWJsZSwgdGhlc2UgdmVzc2VscyB3b3VsZCB5aWVsZCBhbm90aGVyIGxhcmdlIHJldmVudWUuCjwvdHJhbnNsYXRpb24+"
translation['4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBmb3IgdGhlIHNpbHZlciBtaW5lcywgSSBiZWxpZXZlIHRoYXQgaWYgYSBwcm9wZXIgc3lzdGVtIG9mIHdvcmtpbmcgd2VyZSBpbnRyb2R1Y2VkLCBhIHZhc3QgYW1vdW50IG9mIG1vbmV5IHdvdWxkIGJlIG9idGFpbmVkIGZyb20gdGhlbSBhcGFydCBmcm9tIG91ciBvdGhlciBzb3VyY2VzIG9mIHJldmVudWUuIEkgd2FudCB0byBwb2ludCBvdXQgdGhlIHBvc3NpYmlsaXRpZXMgb2YgdGhlc2UgbWluZXMgdG8gdGhvc2Ugd2hvIGRvIG5vdCBrbm93LiBGb3IsIG9uY2UgeW91IHJlYWxpemUgdGhlaXIgcG9zc2liaWxpdGllcywgeW91IHdpbGwgYmUgaW4gYSBiZXR0ZXIgcG9zaXRpb24gdG8gY29uc2lkZXIgaG93IHRoZSBtaW5lcyBzaG91bGQgYmUgbWFuYWdlZC4KPC90cmFuc2xhdGlvbj4="
translation['4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3csIHdlIGFsbCBhZ3JlZSB0aGF0IHRoZSBtaW5lcyBoYXZlIGJlZW4gd29ya2VkIGZvciBtYW55IGdlbmVyYXRpb25zLiBBdCBhbnkgcmF0ZSwgbm8gb25lIGV2ZW4gYXR0ZW1wdHMgdG8gZGF0ZSB0aGUgYmVnaW5uaW5nIG9mIG1pbmluZyBvcGVyYXRpb25zLiBBbmQgeWV0LCBhbHRob3VnaCBkaWdnaW5nIGFuZCB0aGUgcmVtb3ZhbCBvZiB0aGUgc2lsdmVyIG9yZSBoYXZlIGJlZW4gY2FycmllZCBvbiBmb3Igc28gbG9uZyBhIHRpbWUsIG5vdGUgaG93IHNtYWxsIGlzIHRoZSBzaXplIG9mIHRoZSBkdW1wcyBjb21wYXJlZCB3aXRoIHRoZSB2aXJnaW4gYW5kIHNpbHZlci1sYWRlbiBoaWxscy4KPC90cmFuc2xhdGlvbj4="
translation['4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBpdCBpcyBjb250aW51YWxseSBiZWluZyBmb3VuZCB0aGF0LCBzbyBmYXIgZnJvbSBzaHJpbmtpbmcsIHRoZSBzaWx2ZXIteWllbGRpbmcgYXJlYSBleHRlbmRzIGZ1cnRoZXIgYW5kIGZ1cnRoZXIuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlbGwsIHNvIGxvbmcgYXMgdGhlIG1heGltdW0gbnVtYmVyIG9mIHdvcmttZW4gd2FzIGVtcGxveWVkIGluIHRoZW0sIG5vIG9uZSBldmVyIHdhbnRlZCBhIGpvYjsgaW4gZmFjdCwgdGhlcmUgd2VyZSBhbHdheXMgbW9yZSBqb2JzIHRoYW4gdGhlIGxhYm91cmVycyBjb3VsZCBkZWFsIHdpdGguCjwvdHJhbnNsYXRpb24+"
translation['4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBldmVuIGF0IHRoZSBwcmVzZW50IGRheSBubyBvd25lciBvZiBzbGF2ZXMgZW1wbG95ZWQgaW4gdGhlIG1pbmVzIHJlZHVjZXMgdGhlIG51bWJlciBvZiBoaXMgbWVuOyBvbiB0aGUgY29udHJhcnksIGV2ZXJ5IG1hc3RlciBvYnRhaW5zIGFzIG1hbnkgbW9yZSBhcyBoZSBjYW4uIFRoZSBmYWN0IGlzLCBJIGltYWdpbmUsIHRoYXQgd2hlbiB0aGVyZSBhcmUgZmV3IGRpZ2dlcnMgYW5kIHNlYXJjaGVycywgdGhlIGFtb3VudCBvZiBtZXRhbCByZWNvdmVyZWQgaXMgc21hbGwsIGFuZCB3aGVuIHRoZXJlIGFyZSBtYW55LCB0aGUgdG90YWwgb2Ygb3JlIGRpc2NvdmVyZWQgaXMgbXVsdGlwbGllZC4gSGVuY2Ugb2YgYWxsIHRoZSBpbmR1c3RyaWVzIHdpdGggd2hpY2ggSSBhbSBhY3F1YWludGVkIHRoaXMgaXMgdGhlIG9ubHkgb25lIGluIHdoaWNoIGV4cGFuc2lvbiBvZiBidXNpbmVzcyBleGNpdGVzIG5vIGplYWxvdXN5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GdXJ0aGVyIHRoYW4gdGhpcywgZXZlcnkgZmFybWVyIGNhbiB0ZWxsIGp1c3QgaG93IG1hbnkgeW9rZSBvZiBveGVuIGFyZSBlbm91Z2ggZm9yIHRoZSBmYXJtIGFuZCBob3cgbWFueSBsYWJvdXJlcnMuIFRvIHB1dCBtb3JlIG9uIHRoZSBsYW5kIHRoYW4gdGhlIHJlcXVpc2l0ZSBudW1iZXIgaXMgY291bnRlZCBsb3NzLiBJbiBtaW5pbmcgdW5kZXJ0YWtpbmdzLCBvbiB0aGUgY29udHJhcnksIGV2ZXJ5b25lIHRlbGxzIHlvdSB0aGF0IGhlIGlzIHNob3J0IG9mIGxhYm91ci4KPC90cmFuc2xhdGlvbj4="
translation['4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk1pbmluZywgaW4gZmFjdCwgaXMgcXVpdGUgZGlmZmVyZW50IGZyb20gb3RoZXIgaW5kdXN0cmllcy4gQW4gaW5jcmVhc2UgaW4gdGhlIG51bWJlciBvZiBjb3BwZXJzbWl0aHMsIGZvciBleGFtcGxlLCBwcm9kdWNlcyBhIGZhbGwgaW4gdGhlIHByaWNlIG9mIGNvcHBlciB3b3JrLCBhbmQgdGhlIGNvcHBlcnNtaXRocyByZXRpcmUgZnJvbSBidXNpbmVzcy4gVGhlIHNhbWUgdGhpbmcgaGFwcGVucyBpbiB0aGUgaXJvbiB0cmFkZS4gQWdhaW4sIHdoZW4gY29ybiBhbmQgd2luZSBhcmUgYWJ1bmRhbnQsIHRoZSBjcm9wcyBhcmUgY2hlYXAsIGFuZCB0aGUgcHJvZml0IGRlcml2ZWQgZnJvbSBncm93aW5nIHRoZW0gZGlzYXBwZWFycywgc28gdGhhdCBtYW55IGdpdmUgdXAgZmFybWluZyBhbmQgc2V0IHVwIGFzIG1lcmNoYW50cyBvciBzaG9wa2VlcGVycyBvciBtb25leWxlbmRlcnMuIEJ1dCBhbiBpbmNyZWFzZSBpbiB0aGUgYW1vdW50IG9mIHRoZSBzaWx2ZXIgb3JlIGRpc2NvdmVyZWQgYW5kIG9mIHRoZSBtZXRhbCB3b24gaXMgYWNjb21wYW5pZWQgYnkgYW4gaW5jcmVhc2UgaW4gdGhlIG51bWJlciBvZiBwZXJzb25zIHdobyB0YWtlIHVwIHRoaXMgaW5kdXN0cnkuCjwvdHJhbnNsYXRpb24+"
translation['4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk5laXRoZXIgaXMgc2lsdmVyIGxpa2UgZnVybml0dXJlLCBvZiB3aGljaCBhIG1hbiBuZXZlciBidXlzIG1vcmUgd2hlbiBvbmNlIGhlIGhhcyBnb3QgZW5vdWdoIGZvciBoaXMgaG91c2UuIE5vIG9uZSBldmVyIHlldCBwb3NzZXNzZWQgc28gbXVjaCBzaWx2ZXIgYXMgdG8gd2FudCBubyBtb3JlOyBpZiBhIG1hbiBmaW5kcyBoaW1zZWxmIHdpdGggYSBodWdlIGFtb3VudCBvZiBpdCwgaGUgdGFrZXMgYXMgbXVjaCBwbGVhc3VyZSBpbiBidXJ5aW5nIHRoZSBzdXJwbHVzIGFzIGluIHVzaW5nIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NYXJrIHRvbyB0aGF0LCB3aGVuZXZlciBzdGF0ZXMgYXJlIHByb3NwZXJvdXMsIHNpbHZlciBpcyBpbiBzdHJvbmcgZGVtYW5kLiBUaGUgbWVuIHdpbGwgc3BlbmQgbW9uZXkgb24gZmluZSBhcm1zIGFuZCBnb29kIGhvcnNlcyBhbmQgbWFnbmlmaWNlbnQgaG91c2VzIGFuZCBlc3RhYmxpc2htZW50cywgYW5kIHRoZSB3b21lbiBnbyBpbiBmb3IgZXhwZW5zaXZlIGNsb3RoZXMgYW5kIGdvbGQgamV3ZWxyeS4KPC90cmFuc2xhdGlvbj4="
translation['4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPklmLCBvbiB0aGUgb3RoZXIgaGFuZCwgdGhlIGJvZHkgcG9saXRpYyBpcyBkaXNlYXNlZCBvd2luZyB0byBmYWlsdXJlIG9mIHRoZSBoYXJ2ZXN0IG9yIHRvIHdhciwgdGhlIGxhbmQgZ29lcyBvdXQgb2YgY3VsdGl2YXRpb24gYW5kIHRoZXJlIGlzIGEgbXVjaCBtb3JlIGluc2lzdGVudCBkZW1hbmQgZm9yIGNhc2ggdG8gcGF5IGZvciBmb29kIGFuZCBtZXJjZW5hcmllcy4KPC90cmFuc2xhdGlvbj4="
translation['4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SWYgYW55b25lIHNheXMgdGhhdCBnb2xkIGlzIHF1aXRlIGFzIHVzZWZ1bCBhcyBzaWx2ZXIsIEkgYW0gbm90IGdvaW5nIHRvIGNvbnRyYWRpY3QgaGltOyBidXQgSSBrbm93IHRoaXMsIHRoYXQgd2hlbiBnb2xkIGlzIHBsZW50aWZ1bCwgc2lsdmVyIHJpc2VzIGFuZCBnb2xkIGZhbGxzIGluIHZhbHVlLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2l0aCB0aGVzZSBmYWN0cyBiZWZvcmUgdXMsIHdlIG5lZWQgbm90IGhlc2l0YXRlIHRvIGJyaW5nIGFzIG11Y2ggbGFib3VyIGFzIHdlIGNhbiBnZXQgaW50byB0aGUgbWluZXMgYW5kIGNhcnJ5IG9uIHdvcmsgaW4gdGhlbSwgZmVlbGluZyBjb25maWRlbnQgdGhhdCB0aGUgb3JlIHdpbGwgbmV2ZXIgZ2l2ZSBvdXQgYW5kIHRoYXQgc2lsdmVyIHdpbGwgbmV2ZXIgbG9zZSBpdHMgdmFsdWUuCjwvdHJhbnNsYXRpb24+"
translation['4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rLCBpbmRlZWQsIHRoYXQgdGhlIHN0YXRlIGhhcyBhbnRpY2lwYXRlZCBtZSBpbiB0aGlzIGRpc2NvdmVyeTsgYXQgYW55IHJhdGUgc2hlIHRocm93cyBvcGVuIHRoZSBtaW5pbmcgaW5kdXN0cnkgdG8gZm9yZWlnbmVycyBvbiB0aGUgc2FtZSB0ZXJtcyBhcyBhcmUgZ3JhbnRlZCB0byBjaXRpemVucy4KPC90cmFuc2xhdGlvbj4="
translation['4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG8gbWFrZSBteXNlbGYgY2xlYXJlciBvbiB0aGUgc3ViamVjdCBvZiBhbGltb255LCBJIHdpbGwgbm93IGV4cGxhaW4gaG93IHRoZSBtaW5lcyBtYXkgYmUgd29ya2VkIHdpdGggdGhlIGdyZWF0ZXN0IGFkdmFudGFnZSB0byB0aGUgc3RhdGUuIE5vdCB0aGF0IEkgZXhwZWN0IHRvIHN1cnByaXNlIHlvdSBieSB3aGF0IEkgYW0gZ29pbmcgdG8gc2F5LCBhcyBpZiBJIGhhZCBmb3VuZCB0aGUgc29sdXRpb24gb2YgYSBkaWZmaWN1bHQgcHJvYmxlbS4gRm9yIHNvbWUgdGhpbmdzIHRoYXQgSSBzaGFsbCBtZW50aW9uIGFyZSBzdGlsbCB0byBiZSBzZWVuIGJ5IGFueW9uZSBhdCB0aGUgcHJlc2VudCBkYXksIGFuZCBhcyBmb3IgY29uZGl0aW9ucyBpbiB0aGUgcGFzdCwgb3VyIGZhdGhlcnMgaGF2ZSB0b2xkIHVzIHRoYXQgdGhleSB3ZXJlIHNpbWlsYXIuCjwvdHJhbnNsYXRpb24+"
translation['4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hhdCBtYXkgd2VsbCBleGNpdGUgc3VycHJpc2UgaXMgdGhhdCB0aGUgc3RhdGUsIGJlaW5nIGF3YXJlIHRoYXQgbWFueSBwcml2YXRlIGluZGl2aWR1YWxzIGFyZSBtYWtpbmcgbW9uZXkgb3V0IG9mIGhlciwgZG9lcyBub3QgaW1pdGF0ZSB0aGVtLiBUaG9zZSBvZiB1cyB3aG8gaGF2ZSBnaXZlbiB0aG91Z2h0IHRvIHRoZSBtYXR0ZXIgaGF2ZSBoZWFyZCBsb25nIGFnbywgSSBpbWFnaW5lLCB0aGF0IE5pY2lhcyBzb24gb2YgTmljZXJhdHVzLCBvbmNlIG93bmVkIGEgdGhvdXNhbmQgbWVuIGluIHRoZSBtaW5lcywgYW5kIGxldCB0aGVtIG91dCB0byBTb2NpYXMgdGhlIFRocmFjaWFuLCBvbiBjb25kaXRpb24gdGhhdCBTb3NpYXMgcGFpZCBoaW0gYW4gb2JvbCBhIGRheSBwZXIgbWFuIG5ldCBhbmQgZmlsbGVkIGFsbCB2YWNhbmNpZXMgYXMgdGhleSBvY2N1cnJlZC4KPC90cmFuc2xhdGlvbj4="
translation['4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5IaXBwb25pY3VzLCBhZ2FpbiwgaGFkIHNpeCBodW5kcmVkIHNsYXZlcyBsZXQgb3V0IG9uIHRoZSBzYW1lIHRlcm1zIGFuZCByZWNlaXZlZCBhIHJlbnQgb2YgYSBtaW5hIGEgZGF5IG5ldC4gUGhpbGVtb25pZGVzIGhhZCB0aHJlZSBodW5kcmVkLCBhbmQgcmVjZWl2ZWQgaGFsZiBhIG1pbmEuIFRoZXJlIHdlcmUgb3RoZXJzIHRvbywgb3duaW5nIG51bWJlcnMgaW4gcHJvcG9ydGlvbiwgSSBwcmVzdW1lLCB0byB0aGVpciBjYXBpdGFsLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2h5IGR3ZWxsIG9uIHRoZSBwYXN0PyBBdCB0aGlzIGRheSB0aGVyZSBhcmUgbWFueSBtZW4gaW4gdGhlIG1pbmVzIGxldCBvdXQgaW4gdGhpcyB3YXkuCjwvdHJhbnNsYXRpb24+"
translation['4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5XZXJlIG15IHByb3Bvc2FscyBhZG9wdGVkLCB0aGUgb25seSBpbm5vdmF0aW9uIHdvdWxkIGJlLCB0aGF0IGp1c3QgYXMgcHJpdmF0ZSBpbmRpdmlkdWFscyBoYXZlIGJ1aWx0IHVwIGEgcGVybWFuZW50IGluY29tZSBieSBiZWNvbWluZyBzbGF2ZSBvd25lcnMsIHNvIHRoZSBzdGF0ZSB3b3VsZCBiZWNvbWUgcG9zc2Vzc2VkIG9mIHB1YmxpYyBzbGF2ZXMsIHVudGlsIHRoZXJlIHdlcmUgdGhyZWUgZm9yIGV2ZXJ5IGNpdGl6ZW4uCjwvdHJhbnNsYXRpb24+"
translation['4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5XaGV0aGVyIG15IHBsYW4gaXMgd29ya2FibGUsIGxldCBhbnlvbmUgd2hvIGNob29zZXMganVkZ2UgZm9yIGhpbXNlbGYgYnkgZXhhbWluaW5nIGl0IGluIGRldGFpbC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U28gbGV0IHVzIHRha2UgZmlyc3QgdGhlIGNvc3Qgb2YgdGhlIG1lbi4gQ2xlYXJseSB0aGUgdHJlYXN1cnkgaXMgaW4gYSBiZXR0ZXIgcG9zaXRpb24gdG8gcHJvdmlkZSB0aGUgbW9uZXkgdGhhbiBwcml2YXRlIGluZGl2aWR1YWxzLiBNb3Jlb3ZlciB0aGUgQ291bmNpbCBjYW4gZWFzaWx5IGlzc3VlIGEgbm90aWNlIGludml0aW5nIGFsbCBhbmQgc3VuZHJ5IHRvIGJyaW5nIHNsYXZlcywgYW5kIGNhbiBidXkgdGhvc2UgdGhhdCBhcmUgYnJvdWdodCB0byBpdC4KPC90cmFuc2xhdGlvbj4="
translation['4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIG9uY2UgdGhleSBhcmUgcHVyY2hhc2VkLCB3aHkgc2hvdWxkIHRoZXJlIGJlIG1vcmUgaGVzaXRhdGlvbiBhYm91dCBoaXJpbmcgZnJvbSB0aGUgdHJlYXN1cnkgdGhhbiBmcm9tIGEgcHJpdmF0ZSBwZXJzb24sIHRoZSB0ZXJtcyBvZmZlcmVkIGJlaW5nIHRoZSBzYW1lPyBBdCBhbnkgcmF0ZSBtZW4gaGlyZSBjb25zZWNyYXRlZCBsYW5kczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgTVNTLiBhZGQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOseG9tiDhvLHOtc+B4b2xPC9mb3JlaWduPiwg4oCcYW5kIHRlbXBsZXMs4oCdIGZvciB3aGljaCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6x4b22IOG8sc61z4HOteG/ls6xPC9mb3JlaWduPiAodmljdGltcyBmb3Igc2FjcmlmaWNlKSBoYXMgYmVlbiBjb25qZWN0dXJlZC4gQnV0ICgxKSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvM65z4POuM6/4b+mzr3PhM6xzrk8L2ZvcmVpZ24+IGlzIG5vdCDigJxjb250cmFjdCB0byBzdXBwbHks4oCdIGFuZCAoMikgaXQgYXBwZWFycyB0aGF0IHRoZSBzYWNyaWZpY2VzIHdlcmUsIGluIHBvaW50IG9mIGZhY3QsIHBhaWQgZm9yIG91dCBvZiB0aGUgcmVudHMgcmVjZWl2ZWQgZm9yIHRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM61zrzhvbPOvc63LDwvZm9yZWlnbj4gYW5kIHRoZSB2aWN0aW1zIHdlcmUgbm90IHN1cHBsaWVkIGJ5IGluZGl2aWR1YWxzIG9uIGNvbnRyYWN0LiBBcmlzdG90bGUsIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkF0aC4gUG9sLjwvdGl0bGU+IDQ3LCB3cml0aW5nIG9mIHRoZSBsZWFzZXMgb2Ygc3RhdGUgcHJvcGVydHksIHNheXMgbm90aGluZyBhYm91dCB2aWN0aW1zLjwvbm90ZT4gYW5kIGhvdXNlcywgYW5kIGZhcm0gdGF4ZXMgdW5kZXIgdGhlIHN0YXRlLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6x4b22IOG8sc61z4HhvbE8L2ZvcmVpZ24+LCDigJxhbmQgdGVtcGxlcyzigJ0gZm9yIHdoaWNoIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs66zrHhvbYg4byxzrXPgc614b+WzrE8L2ZvcmVpZ24+ICh2aWN0aW1zIGZvciBzYWNyaWZpY2UpIGhhcyBiZWVuIGNvbmplY3R1cmVkLiBCdXQgKDEpIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs68zrnPg864zr/hv6bOvc+EzrHOuTwvZm9yZWlnbj4gaXMgbm90IOKAnGNvbnRyYWN0IHRvIHN1cHBseSzigJ0gYW5kICgyKSBpdCBhcHBlYXJzIHRoYXQgdGhlIHNhY3JpZmljZXMgd2VyZSwgaW4gcG9pbnQgb2YgZmFjdCwgcGFpZCBmb3Igb3V0IG9mIHRoZSByZW50cyByZWNlaXZlZCBmb3IgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+EzrXOvOG9s869zrcsPC9mb3JlaWduPiBhbmQgdGhlIHZpY3RpbXMgd2VyZSBub3Qgc3VwcGxpZWQgYnkgaW5kaXZpZHVhbHMgb24gY29udHJhY3QuIEFyaXN0b3RsZSwgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QXRoLiBQb2wuPC90aXRsZT4gNDcsIHdyaXRpbmcgb2YgdGhlIGxlYXNlcyBvZiBzdGF0ZSBwcm9wZXJ0eSwgc2F5cyBub3RoaW5nIGFib3V0IHZpY3RpbXMuPC90cmFuc2xhdGlvbj4="
translation['4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHRyZWFzdXJ5IGNhbiBpbnN1cmUgdGhlIHNsYXZlcyBwdXJjaGFzZWQgYnkgcmVxdWlyaW5nIHNvbWUgb2YgdGhlIGxlc3NlZXMgdG8gYmVjb21lIGd1YXJhbnRvcnMsIGFzIGl0IGRvZXMgaW4gdGhlIGNhc2Ugb2YgdGhlIHRheC1mYXJtZXJzLiBJbiBmYWN0IGEgdGF4LWZhcm1lciBjYW4gc3dpbmRsZSB0aGUgc3RhdGUgbW9yZSBlYXNpbHkgdGhhbiBhIGxlc3NlZSBvZiBzbGF2ZXMuCjwvdHJhbnNsYXRpb24+"
translation['4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaG93IGFyZSB5b3UgdG8gZGV0ZWN0IHRoZSBleHBvcnQgb2YgcHVibGljIG1vbmV5PyBNb25leSBsb29rcyB0aGUgc2FtZSB3aGV0aGVyIGl0IGlzIHByaXZhdGUgcHJvcGVydHkgb3IgYmVsb25ncyB0byB0aGUgc3RhdGUuIEJ1dCBob3cgaXMgYSBtYW4gdG8gc3RlYWwgc2xhdmVzIHdoZW4gdGhleSBhcmUgYnJhbmRlZCB3aXRoIHRoZSBwdWJsaWMgbWFyayBhbmQgaXQgaXMgYSBwZW5hbCBvZmZlbmNlIHRvIHNlbGwgb3IgZXhwb3J0IHRoZW0/PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlNvIGZhciwgdGhlbiwgaXQgYXBwZWFycyB0byBiZSBwb3NzaWJsZSBmb3IgdGhlIHN0YXRlIHRvIGFjcXVpcmUgYW5kIHRvIGtlZXAgbWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQsIG9uZSBtYXkgYXNrLCB3aGVuIGxhYm91ciBpcyBhYnVuZGFudCwgaG93IHdpbGwgYSBzdWZmaWNpZW50IG51bWJlciBvZiBwZXJzb25zIGJlIGZvdW5kIHRvIGhpcmUgaXQ/IFdlbGwsIGlmIGFueW9uZSBmZWVscyBkb3VidGZ1bCBhYm91dCB0aGF0LCBsZXQgaGltIGNvbWZvcnQgaGltc2VsZiB3aXRoIHRoZSB0aG91Z2h0IHRoYXQgbWFueSBtZW4gaW4gdGhlIGJ1c2luZXNzIHdpbGwgaGlyZSB0aGUgc3RhdGUgc2xhdmVzIGFzIGFkZGl0aW9uYWwgaGFuZHMsIHNpbmNlIHRoZXkgaGF2ZSBhYnVuZGFuY2Ugb2YgY2FwaXRhbCwgYW5kIHRoYXQgYW1vbmcgdGhvc2Ugbm93IHdvcmtpbmcgaW4gdGhlIG1pbmVzIG1hbnkgYXJlIGdyb3dpbmcgb2xkLiBNb3Jlb3ZlciB0aGVyZSBhcmUgbWFueSBvdGhlcnMsIGJvdGggQXRoZW5pYW5zIGFuZCBmb3JlaWduZXJzLCB3aG8gaGF2ZSBuZWl0aGVyIHdpbGwgbm9yIHN0cmVuZ3RoIHRvIHdvcmsgd2l0aCB0aGVpciBvd24gaGFuZHMsIGJ1dCB3b3VsZCBiZSBnbGFkIHRvIHRvIG1ha2UgYSBsaXZpbmcgYnkgYmVjb21pbmcgbWFuYWdlcnMuCjwvdHJhbnNsYXRpb24+"
translation['4.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXNzdW1lLCBob3dldmVyLCB0aGF0IHRoZSB0b3RhbCBudW1iZXIgb2Ygc2xhdmVzIHRvIGJlZ2luIHdpdGggaXMgdHdlbHZlIGh1bmRyZWQuIEJ5IHVzaW5nIHRoZSByZXZlbnVlIGRlcml2ZWQgZnJvbSB0aGVzZSB0aGUgbnVtYmVyIG1pZ2h0IGluIGFsbCBwcm9iYWJpbGl0eSBiZSByYWlzZWQgdG8gc2l4IHRob3VzYW5kIGF0IHRoZSBsZWFzdCBpbiB0aGUgY291cnNlIG9mIGZpdmUgb3Igc2l4IHllYXJzLiBGdXJ0aGVyLCBpZiBlYWNoIG1hbiBicmluZ3MgaW4gYSBjbGVhciBvYm9sIGEgZGF5LCB0aGUgYW5udWFsIHJldmVudWUgZGVyaXZlZCBmcm9tIHRoYXQgbnVtYmVyIG9mIG1lbiBpcyBzaXh0eSB0YWxlbnRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5PdXQgb2YgdGhpcyBzdW0sIGlmIHR3ZW50eSB0YWxlbnRzIGFyZSBpbnZlc3RlZCBpbiBhZGRpdGlvbmFsIHNsYXZlcywgdGhlIHN0YXRlIHdpbGwgaGF2ZSBmb3J0eSB0YWxlbnRzIGF2YWlsYWJsZSBmb3IgYW55IG90aGVyIG5lY2Vzc2FyeSBwdXJwb3NlLiBBbmQgd2hlbiBhIHRvdGFsIG9mIHRlbiB0aG91c2FuZCBtZW4gaXMgcmVhY2hlZCwgdGhlIHJldmVudWUgd2lsbCBiZSBhIGh1bmRyZWQgdGFsZW50cy4KPC90cmFuc2xhdGlvbj4="
translation['4.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHRoZSBzdGF0ZSB3aWxsIHJlY2VpdmUgZmFyIG1vcmUgdGhhbiB0aGF0LCBhcyBhbnlvbmUgd2lsbCB0ZXN0aWZ5IHdobyBpcyBvbGQgZW5vdWdoIHRvIHJlbWVtYmVyIGhvdyBtdWNoIHRoZSBjaGFyZ2UgZm9yIHNsYXZlIGxhYm91ciBicm91Z2h0IGluIGJlZm9yZSB0aGUgdHJvdWJsZSBhdCBEZWNlbGVhLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JbiA8ZGF0ZSBhdXRobmFtZT0iLTQxMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMyI+NDEzPC9kYXRlPiBCLkMuLCB3aGVuIGdyZWF0IG51bWJlcnMgb2Ygc2xhdmVzIGRlc2VydGVkLCBhbmQgbGFib3VyIGluIHRoZSBtaW5lcyBkd2luZGxlZC48L25vdGU+IEFuZCB0aGVyZSBpcyBhbm90aGVyIHByb29mLiBEdXJpbmcgdGhlIGhpc3Rvcnkgb2YgdGhlIG1pbmVzIGFuIGluZmluaXRlIG51bWJlciBvZiBtZW4gaGFzIHdvcmtlZCBpbiB0aGVtOyBhbmQgeWV0IHRoZSBjb25kaXRpb24gb2YgdGhlIG1pbmVzIHRvLWRheSBpcyBleGFjdGx5IHRoZSBzYW1lIGFzIGl0IHdhcyBpbiB0aGUgdGltZSBvZiBvdXIgYW5jZXN0b3JzLCBhbmQgdGhlaXIgbWVtb3J5IHJhbiBub3QgdG8gdGhlIGNvbnRyYXJ5Lgo8ZGF0ZSBhdXRobmFtZT0iLTQxMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMyI+NDEzPC9kYXRlPiBCLkMuLCB3aGVuIGdyZWF0IG51bWJlcnMgb2Ygc2xhdmVzIGRlc2VydGVkLCBhbmQgbGFib3VyIGluIHRoZSBtaW5lcyBkd2luZGxlZC48L3RyYW5zbGF0aW9uPg=="
translation['4.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgcHJlc2VudCBjb25kaXRpb25zIGFsbCBsZWFkIHRvIHRoZSBjb25jbHVzaW9uIHRoYXQgdGhlIG51bWJlciBvZiBzbGF2ZXMgZW1wbG95ZWQgdGhlcmUgY2FuIG5ldmVyIGJlIGdyZWF0ZXIgdGhhbiB0aGUgd29ya3MgbmVlZC4gRm9yIHRoZSBtaW5lcnMgZmluZCBubyBsaW1pdCB0byBzaGFmdCBvciBnYWxsZXJ5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQsIG1hcmsgeW91LCBpdCBpcyBhcyBwb3NzaWJsZSBub3cgdG8gb3BlbiBuZXcgdmVpbnMgYXMgaW4gZm9ybWVyIHRpbWVzLiBOb3IgY2FuIG9uZSBzYXkgd2l0aCBhbnkgY2VydGFpbnR5IHdoZXRoZXIgdGhlIG9yZSBpcyBtb3JlIHBsZW50aWZ1bCBpbiB0aGUgYXJlYSBhbHJlYWR5IHVuZGVyIHdvcmsgb3IgaW4gdGhlIHVuZXhwbG9yZWQgdHJhY3RzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiB3aHksIGl0IG1heSBiZSBhc2tlZCwgYXJlIGZld2VyIG5ldyBjdXR0aW5ncyBtYWRlIG5vd2FkYXlzIHRoYW4gZm9ybWVybHk/IFNpbXBseSBiZWNhdXNlIHRob3NlIGludGVyZXN0ZWQgaW4gdGhlIG1pbmVzIGFyZSBwb29yZXIuIEZvciBvcGVyYXRpb25zIGhhdmUgb25seSBsYXRlbHkgYmVlbiByZXN1bWVkLCBhbmQgYSBtYW4gd2hvIG1ha2VzIGEgbmV3IGN1dHRpbmcgaW5jdXJzIGEgc2VyaW91cyByaXNrLiBJZiBoZSBzdHJpa2VzIGdvb2Qgc3R1ZmYgaGUgbWFrZXMgYSBmb3J0dW5lOyBidXQgaWYgaGUgaXMKPC90cmFuc2xhdGlvbj4="
translation['4.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5kaXNhcHBvaW50ZWQsIGhlIGxvc2VzIHRoZSBtb25leSBoZSBoYXMgc3BlbnQuIFRoZXJlZm9yZSBwZW9wbGUgbm93YWRheXMgYXJlIHZlcnkgY2hhcnkgb2YgdGFraW5nIHN1Y2ggYSByaXNrLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SG93ZXZlciwgSSB0aGluayBJIGNhbiBtZWV0IHRoaXMgZGlmZmljdWx0eSB0b28sIGFuZCBzdWdnZXN0IGEgcGxhbiB0aGF0IHdpbGwgbWFrZSB0aGUgb3BlbmluZyBvZiBuZXcgY3V0dGluZ3MgYSBwZXJmZWN0bHkgc2FmZSB1bmRlcnRha2luZy4gVGhlIEF0aGVuaWFucywgb2YgY291cnNlLCBhcmUgZGl2aWRlZCBpbnRvIHRlbiB0cmliZXMuIE5vdyBhc3N1bWUgdGhhdCB0aGUgc3RhdGUgd2VyZSB0byBvZmZlciBlYWNoIHRyaWJlIGFuIGVxdWFsIG51bWJlciBvZiBzbGF2ZXMsIGFuZCB0aGF0IHdoZW4gbmV3IGN1dHRpbmdzIHdlcmUgbWFkZSwgdGhlIHRyaWJlcyB3ZXJlIHRvIHBvb2wgdGhlaXIgbHVjay4KPC90cmFuc2xhdGlvbj4="
translation['4.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcmVzdWx0IHdvdWxkIGJlIHRoYXQgaWYgb25lIHRyaWJlIGZvdW5kIHNpbHZlciwgdGhlIGRpc2NvdmVyeSB3b3VsZCBiZSBwcm9maXRhYmxlIHRvIGFsbDsgYW5kIGlmIHR3bywgdGhyZWUsIGZvdXIsIG9yIGhhbGYgdGhlIHRyaWJlcyBmb3VuZCwgdGhlIHByb2ZpdHMgZnJvbSB0aGVzZSB3b3JrcyB3b3VsZCBvYnZpb3VzbHkgYmUgZ3JlYXRlci48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm90aGluZyB0aGF0IGhhcyBoYXBwZW5lZCBpbiB0aGUgcGFzdCBtYWtlcyBpdCBwcm9iYWJsZSB0aGF0IGFsbCB3b3VsZCBmYWlsIHRvIGZpbmQuCjwvdHJhbnNsYXRpb24+"
translation['4.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5PZiBjb3Vyc2UsIHByaXZhdGUgaW5kaXZpZHVhbHMgYWxzbyBhcmUgYWJsZSB0byBjb21iaW5lIG9uIHRoaXMgcHJpbmNpcGxlIGFuZCBwb29sIHRoZWlyIGZvcnR1bmVzIGluIG9yZGVyIHRvIGRpbWluaXNoIHRoZSByaXNrLiBOZXZlcnRoZWxlc3MgdGhlcmUgaXMgbm8gcmVhc29uIHRvIGZlYXIgdGhhdCBhIHB1YmxpYyBjb21wYW55IGZvcm1lZCBvbiB0aGlzIHBsYW4gd2lsbCBjb25mbGljdCB3aXRoIHRoZSBpbnRlcmVzdHMgb2YgcHJpdmF0ZSBwZXJzb25zLCBvciBiZSBoYW1wZXJlZCBieSB0aGVtLiBObywganVzdCBhcyBldmVyeSBuZXcgYWRoZXNpb24gdG8gYSBjb25mZWRlcmFjeSBicmluZ3MgYW4gaW5jcmVhc2Ugb2Ygc3RyZW5ndGggdG8gYWxsIGl0cyBtZW1iZXJzLCBzbyB0aGUgZ3JlYXRlciB0aGUgbnVtYmVyIG9mIHBlcnNvbnMgb3BlcmF0aW5nIGluIHRoZSBtaW5lcywgdGhlIG1vcmUgdHJlYXN1cmUgdGhleSB3aWxsIGRpc2NvdmVyIGFuZCB1bmVhcnRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSBoYXZlIG5vdyBleHBsYWluZWQgd2hhdCByZWd1bGF0aW9ucyBJIHRoaW5rIHNob3VsZCBiZSBpbnRyb2R1Y2VkIGludG8gdGhlIHN0YXRlIGluIG9yZGVyIHRoYXQgZXZlcnkgQXRoZW5pYW4gbWF5IHJlY2VpdmUgc3VmZmljaWVudCBtYWludGVuYW5jZSBhdCB0aGUgcHVibGljIGV4cGVuc2UuCjwvdHJhbnNsYXRpb24+"
translation['4.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5Tb21lIG1heSBpbWFnaW5lIHRoYXQgZW5vdWdoIG1vbmV5IHdvdWxkIG5ldmVyIGJlIHN1YnNjcmliZWQgdG8gcHJvdmlkZSB0aGUgaHVnZSBhbW91bnQgb2YgY2FwaXRhbCBuZWNlc3NhcnksIGFjY29yZGluZyB0byB0aGVpciBjYWxjdWxhdGlvbnMsIHRvIGZpbmFuY2UgYWxsIHRoZXNlIHNjaGVtZXMuIEJ1dCBldmVuIHNvIHRoZXkgbmVlZCBub3QgZGVzcGFpci4KPC90cmFuc2xhdGlvbj4="
translation['4.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgaXMgbm90IGVzc2VudGlhbCB0aGF0IHRoZSBwbGFuIHNob3VsZCBiZSBjYXJyaWVkIG91dCBpbiBhbGwgaXRzIGRldGFpbHMgaW4gb3JkZXIgdGhhdCBhbnkgYWR2YW50YWdlIG1heSBjb21lIG9mIGl0LiBObywgd2hhdGV2ZXIgdGhlIG51bWJlciBvZiBob3VzZXMgYnVpbHQsIG9yIG9mIHNoaXBzIGNvbnN0cnVjdGVkLCBvciBvZiBzbGF2ZXMgcHVyY2hhc2VkLCB0aGV5IHdpbGwgaW1tZWRpYXRlbHkgcHJvdmUgYSBwYXlpbmcgY29uY2Vybi4KPC90cmFuc2xhdGlvbj4="
translation['4.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5JbiBmYWN0IGluIG9uZSByZXNwZWN0IGl0IHdpbGwgYmUgZXZlbiBtb3JlIHByb2ZpdGFibGUgdG8gcHJvY2VlZCBncmFkdWFsbHkgdGhhbiB0byBkbyBldmVyeXRoaW5nIGF0IG9uY2UuIEZvciBpZiBldmVyeWJvZHkgYmVnaW5zIGJ1aWxkaW5nLCB3ZSBzaGFsbCBwYXkgbW9yZSBmb3Igd29yc2Ugd29yayB0aGFuIGlmIHdlIGNhcnJ5IG91dCB0aGUgdW5kZXJ0YWtpbmcgZ3JhZHVhbGx5OyBhbmQgaWYgd2UgdHJ5IHRvIGZpbmQgYW4gZW5vcm1vdXMgbnVtYmVyIG9mIHNsYXZlcywgd2Ugc2hhbGwgYmUgZm9yY2VkIHRvIGJ1eSBpbmZlcmlvciBtZW4gYXQgYSBoaWdoIHByaWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnkgcHJvY2VlZGluZyBhcyBvdXIgbWVhbnMgYWxsb3csIHdlIGNhbiByZXBlYXQgd2hhdGV2ZXIgaXMgd2VsbCBjb25jZWl2ZWQgYW5kIGF2b2lkIHRoZSByZXBldGl0aW9uIG9mIG1pc3Rha2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5CZXNpZGVzLCB3ZXJlIHRoZSB3aG9sZSBzY2hlbWUgcHV0IGluIGhhbmQgYXQgb25jZSwgd2Ugc2hvdWxkIGhhdmUgdG8gZmluZCB0aGUgd2hvbGUgb2YgdGhlIG1vbmV5OyBidXQgaWYgc29tZSBwYXJ0cyB3ZXJlIHByb2NlZWRlZCB3aXRoIGFuZCBvdGhlcnMgcG9zdHBvbmVkLCB0aGUgaW5jb21lIHJlYWxpc2VkIHdvdWxkIGhlbHAgdG8gcHJvdmlkZSB0aGUgYW1vdW50IHN0aWxsIHJlcXVpcmVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+UG9zc2libHkgdGhlIGdyYXZlc3QgZmVhciBpbiBldmVyeW9uZSdzIG1pbmQgaXMgdGhhdCB0aGUgd29ya3MgbWF5IGJlY29tZSBvdmVyY3Jvd2RlZCBpZiB0aGUgc3RhdGUgYWNxdWlyZXMgdG9vIG1hbnkgc2xhdmVzLiBCdXQgd2UgY2FuIHJpZCBvdXJzZWx2ZXMgb2YgdGhhdCBmZWFyIGJ5IG5vdCBwdXR0aW5nIG1vcmUgbWVuIGluIHllYXIgYnkgeWVhciB0aGFuIHRoZSB3b3JrcyB0aGVtc2VsdmVzIHJlcXVpcmUuCjwvdHJhbnNsYXRpb24+"
translation['4.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWNjb3JkaW5nbHkgSSBob2xkIHRoYXQgdGhpcywgd2hpY2ggaXMgdGhlIGVhc2llc3Qgd2F5LCBpcyBhbHNvIHRoZSBiZXN0IHdheSBvZiBkb2luZyB0aGVzZSB0aGluZ3MuIE9uIHRoZSBvdGhlciBoYW5kLCBpZiB5b3UgdGhpbmsgdGhhdCB0aGUgYnVyZGVucyBpbXBvc2VkIGR1cmluZyB0aGUgbGF0ZSB3YXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGFsbHVzaW9uIGlzIHRvIHRoZSDigJxXYXIgb2YgdGhlIEFsbGllc+KAnSB3aG8gaGFkIHJldm9sdGVkIGZyb20gQXRoZW5zLiBJdCBsYXN0ZWQgZnJvbSAzNTcgdG8gPGRhdGUgYXV0aG5hbWU9Ii0zNTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNTUiPjM1NTwvZGF0ZT4gQi5DLiBTZWUgSW50cm9kdWN0aW9uLjwvbm90ZT4gbWFrZSBpdCBpbXBvc3NpYmxlIGZvciB5b3UgdG8gY29udHJpYnV0ZSBhbnl0aGluZyBhdCBhbGzigJR3ZWxsLCBrZWVwIGRvd24gdGhlIGNvc3Qgb2YgYWRtaW5pc3RyYXRpb24gZHVyaW5nIHRoZSBuZXh0IHllYXIgdG8gdGhlIGFtb3VudCB0aGF0IHRoZSB0YXhlcyB5aWVsZGVkIGJlZm9yZSB0aGUgcGVhY2U7IGFuZCBpbnZlc3QgdGhlIGJhbGFuY2VzIG92ZXIgYW5kIGFib3ZlIHRoYXQgYW1vdW50LCB3aGljaCB5b3Ugd2lsbCBnZXQgd2l0aCBwZWFjZSwgd2l0aCBjb25zaWRlcmF0ZSB0cmVhdG1lbnQgb2YgcmVzaWRlbnQgYWxpZW5zIGFuZCBtZXJjaGFudHMsIHdpdGggdGhlIGdyb3d0aCBvZiBpbXBvcnRzIGFuZCBleHBvcnRzIGR1ZSB0byBjb25jZW50cmF0aW9uIG9mIGEgbGFyZ2VyIHBvcHVsYXRpb24sIGFuZCB3aXRoIHRoZSBleHBhbnNpb24gb2YgaGFyYm91ciBhbmQgbWFya2V0IGR1ZXMsIHNvIHRoYXQgdGhlIGludmVzdG1lbnQgd2lsbCBicmluZyBpbiB0aGUgbGFyZ2VzdCByZXZlbnVlLjxkYXRlIGF1dGhuYW1lPSItMzU1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzU1Ij4zNTU8L2RhdGU+IEIuQy4gU2VlIEludHJvZHVjdGlvbi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiwgaW52ZXN0IHRoZSBiYWxhbmNlcyBpbiB0aGUgbWluZXMsIGFuZCB1c2UgdGhlIHJldmVudWUgb2J0YWluZWQgdG8gY2Fycnkgb3V0IG15IHNjaGVtZS48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['4.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T3IgYWdhaW4sIGlmIGFueSBmZWFyIHRoYXQgdGhpcyBzY2hlbWUgd291bGQgcHJvdmUgd29ydGhsZXNzIGluIHRoZSBldmVudCBvZiB3YXIgYnJlYWtpbmcgb3V0LCB0aGV5IHNob3VsZCBvYnNlcnZlIHRoYXQsIHdpdGggdGhpcyBzeXN0ZW0gYXQgd29yaywgd2FyIGJlY29tZXMgZmFyIG1vcmUgZm9ybWlkYWJsZSB0byB0aGUgYWdncmVzc29ycyB0aGFuIHRvIHRoZSBjaXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igd2hhdCBpbnN0cnVtZW50IGlzIG1vcmUgc2VydmljZWFibGUgZm9yIHdhciB0aGFuIG1lbj8gV2Ugc2hvdWxkIGhhdmUgZW5vdWdoIG9mIHRoZW0gdG8gc3VwcGx5IGNyZXdzIHRvIG1hbnkgc2hpcHMgb2YgdGhlIHN0YXRlOyBhbmQgbWFueSBtZW4gYXZhaWxhYmxlIGZvciBzZXJ2aWNlIGluIHRoZSByYW5rcyBhcyBpbmZhbnRyeSBjb3VsZCBwcmVzcyB0aGUgZW5lbXkgaGFyZCwgaWYgdGhleSB3ZXJlIHRyZWF0ZWQgd2l0aCBjb25zaWRlcmF0aW9uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5PYnNlcnZlIHRoYXQgWGVub3Bob24gYWxsdWRlcyBoZXJlIG5vdCB0byB0aGUgcmVzaWRlbnQgYWxpZW5zLCBidXQgdG8gdGhlIHN0YXRlLW93bmVkIHNsYXZlcyBpbiB0aGUgbWluZXMuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['4.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IEkgcmVja29uIHRoYXQsIGV2ZW4gaW4gdGhlIGV2ZW50IG9mIHdhciwgdGhlIG1pbmVzIG5lZWQgbm90IGJlIGFiYW5kb25lZC4gVGhlcmUgYXJlLCBvZiBjb3Vyc2UsIHR3byBmb3J0cmVzc2VzIGluIHRoZSBtaW5pbmcgZGlzdHJpY3QsIG9uZSBhdCBBbmFwaGx5c3R1cyBvbiB0aGUgc291dGggc2lkZSwgdGhlIG90aGVyIGF0IFRob3JpY3VzIG9uIHRoZSBub3J0aC4gVGhlIGRpc3RhbmNlIGJldHdlZW4gdGhlbSBpcyBhYm91dCBzZXZlbiBtaWxlcyBhbmQgYSBoYWxmLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgc3VwcG9zZSB0aGF0IHdlIGhhZCBhIHRoaXJkIHN0cm9uZ2hvbGQgYmV0d2VlbiB0aGVtIG9uIHRoZSBoaWdoZXN0IHBvaW50IG9mIEJlc2EuIFRoZSB3b3Jrczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5PciwgYXMgc29tZSB1bmRlcnN0YW5kLCDigJx0aGUgd29ya21lbiB3b3VsZCBnYXRoZXIgZnJvbSBhbGwgdGhlIGZvcnRyZXNzZXMgaW50byBvbmUu4oCdPC9ub3RlPiB3b3VsZCB0aGVuIGJlIGxpbmtlZCB1cCBieSBhbGwgdGhlIGZvcnRyZXNzZXMsIGFuZCBhdCB0aGUgZmlyc3QgaW50aW1hdGlvbiBvZiBhIGhvc3RpbGUgbW92ZW1lbnQsIGV2ZXJ5IG1hbiB3b3VsZCBoYXZlIGJ1dCBhIHNob3J0IGRpc3RhbmNlIHRvIGdvIGluIG9yZGVyIHRvIHJlYWNoIHNhZmV0eS4KPC90cmFuc2xhdGlvbj4="
translation['4.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz5JbiBjYXNlIGFuIGVuZW15IGNhbWUgaW4gZm9yY2UsIGhlIHdvdWxkLCBubyBkb3VidCwgc2VpemUgYW55IGNvcm4gb3Igd2luZSBvciBjYXR0bGUgdGhhdCBoZSBmb3VuZCBvdXRzaWRlOyBidXQgdGhlIHNpbHZlciBvcmUsIHdoZW4gaGUgaGFkIGdvdCBpdCwgd291bGQgYmUgb2YgYXMgbXVjaCB1c2UgdG8gaGltIGFzIGEgaGVhcCBvZiBzdG9uZXMuCjwvdHJhbnNsYXRpb24+"
translation['4.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaG93IGNvdWxkIGFuIGVuZW15IGV2ZXIgZ28gZm9yIHRoZSBtaW5lcz8gVGhlIGRpc3RhbmNlIGJldHdlZW4gTWVnYXJhLCB0aGUgbmVhcmVzdCBjaXR5LCBhbmQgdGhlIHNpbHZlciBtaW5lcywgaXMgb2YgY291cnNlIG11Y2ggbW9yZSB0aGFuIGZpdmUgaHVuZHJlZCBmdXJsb25nczsgYW5kIFRoZWJlcywgd2hpY2ggaXMgbmV4dCBpbiBwcm94aW1pdHksIGxpZXMgYXQgYSBkaXN0YW5jZSBvZiBtdWNoIG1vcmUgdGhhbiBzaXggaHVuZHJlZCBmdXJsb25ncyBmcm9tIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['4.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz5MZXQgdXMgYXNzdW1lLCB0aGVuLCB0aGF0IGFuIGVuZW15IGlzIG1hcmNoaW5nIG9uIHRoZSBtaW5lcyBmcm9tIHNvbWUgc3VjaCBwb2ludC4gSGUgaXMgYm91bmQgdG8gcGFzcyBBdGhlbnM7IGFuZCBpZiBoaXMgbnVtYmVycyBhcmUgc21hbGwsIGhlIGlzIGxpa2VseSB0byBiZSBkZXN0cm95ZWQgYnkgb3VyIGNhdmFscnkgYW5kIHBhdHJvbHMuIE9uIHRoZSBvdGhlciBoYW5kLCB0byBtYXJjaCBvbiB0aGVtIHdpdGggYSBsYXJnZSBmb3JjZSwgbGVhdmluZyBoaXMgb3duIHByb3BlcnR5IHVucHJvdGVjdGVkLCBpcyBubyBlYXN5IG1hdHRlcjsgZm9yIHdoZW4gaGUgYXJyaXZlZCBhdCB0aGUgbWluZXMgdGhlIGNpdHkgb2YgQXRoZW5zIHdvdWxkIGJlIG11Y2ggbmVhcmVyIHRvIGhpcyBvd24gc3RhdGVzIHRoYW4gaGUgaGltc2VsZiB3b3VsZCBiZS4KPC90cmFuc2xhdGlvbj4="
translation['4.48'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgZXZlbiBzdXBwb3NpbmcgdGhhdCBoZSBzaG91bGQgY29tZSwgaG93IGlzIGhlIHRvIHN0YXkgd2l0aG91dCBzdXBwbGllcz8gQW5kIHRvIHNlbmQgcGFydCBvZiB0aGVpciBmb3JjZXMgaW4gc2VhcmNoIG9mIGZvb2QgbWF5IG1lYW4gZGVzdHJ1Y3Rpb24gdG8gdGhlIGZvcmFnaW5nIHBhcnR5IGFuZCBmYWlsdXJlIHRvIGFjaGlldmUgdGhlIGVuZHMgZm9yIHdoaWNoIGhlIGlzIGNvbnRlbmRpbmc7IG9yIGlmIHRoZSB3aG9sZSBmb3JjZSBpcyBjb250aW51YWxseSBmb3JhZ2luZyBpdCB3aWxsIGZpbmQgaXRzZWxmIGJsb2NrYWRlZCBpbnN0ZWFkIG9mIGJsb2NrYWRpbmcuCjwvdHJhbnNsYXRpb24+"
translation['4.49'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SG93ZXZlciwgdGhlIHJlbnQgZGVyaXZlZCBmcm9tIHRoZSBzbGF2ZXMgd291bGQgbm90IGJlIHRoZSBvbmx5IHNvdXJjZSBvZiByZWxpZWYgdG8gdGhlIGNvbW11bml0eS4gV2l0aCB0aGUgY29uY2VudHJhdGlvbiBvZiBhIGxhcmdlIHBvcHVsYXRpb24gaW4gdGhlIG1pbmluZyBkaXN0cmljdCwgYWJ1bmRhbnQgcmV2ZW51ZSB3b3VsZCBiZSBkZXJpdmVkIGZyb20gdGhlIGxvY2FsIG1hcmtldCwgZnJvbSBzdGF0ZS1vd25lZCBob3VzZXMgbmVhciB0aGUgc2lsdmVyIG1pbmVzLCBmcm9tIGZ1cm5hY2VzIGFuZCBhbGwgdGhlIG90aGVyIHNvdXJjZXMuCjwvdHJhbnNsYXRpb24+"
translation['4.50'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYSBkZW5zZWx5IHBvcHVsYXRlZCBjaXR5IHdvdWxkIGdyb3cgdXAgdGhlcmUsIGlmIGl0IHdlcmUgb3JnYW5pc2VkIG9uIHRoaXMgcGxhbjsgeWVzLCBhbmQgYnVpbGRpbmcgc2l0ZXMgd291bGQgYmVjb21lIGFzIHZhbHVhYmxlIHRoZXJlIGFzIHRoZXkgYXJlIGluIG91ciBzdWJ1cmJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.51'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SWYgdGhlIHBsYW5zIHRoYXQgSSBoYXZlIHB1dCBmb3J3YXJkIGFyZSBjYXJyaWVkIG91dCwgSSBhZ3JlZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg+G9u868z4bOt868zrk8L2ZvcmVpZ24+IG11c3QgbWVhbiDigJxhZ3JlZS7igJ0gSWYgdGhlIHRleHQgaXMgcmlnaHQsIG9uZSBuYXR1cmFsbHkgYXNrcyDigJxXaXRoIHdob20/4oCdIElzb2NyYXRlcywgRXVidWx1cywgb3IgYm90aD8gU2VlIEludHJvZHVjdGlvbi48L25vdGU+IHRoYXQsIGFwYXJ0IGZyb20gdGhlIGltcHJvdmVtZW50IGluIG91ciBmaW5hbmNpYWwgcG9zaXRpb24sIHdlIHNoYWxsIGJlY29tZSBhIHBlb3BsZSBtb3JlIG9iZWRpZW50LCBiZXR0ZXIgZGlzY2lwbGluZWQsIGFuZCBtb3JlIGVmZmljaWVudCBpbiB3YXIuPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PhvbvOvM+GzrfOvM65PC9mb3JlaWduPiBtdXN0IG1lYW4g4oCcYWdyZWUu4oCdIElmIHRoZSB0ZXh0IGlzIHJpZ2h0LCBvbmUgbmF0dXJhbGx5IGFza3Mg4oCcV2l0aCB3aG9tP+KAnSBJc29jcmF0ZXMsIEV1YnVsdXMsIG9yIGJvdGg/IFNlZSBJbnRyb2R1Y3Rpb24uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkxhYy4gUG9sLjwvdGl0bGU+IDguMS48L25vdGU+Cjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkxhYy4gUG9sLjwvdGl0bGU+IDguMS48L3RyYW5zbGF0aW9uPg=="
translation['4.52'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIGNsYXNzZXMgdW5kZXJnb2luZyBwaHlzaWNhbCB0cmFpbmluZyB3aWxsIHRha2UgbW9yZSBwYWlucyBpbiB0aGUgZ3ltbmFzaXVtIHdoZW4gdGhleSByZWNlaXZlIHRoZWlyIG1haW50ZW5hbmNlIGluIGZ1bGwgdGhhbiB0aGV5IHRha2UgdW5kZXIgdGhlIHN1cGVyaW50ZW5kZW50cyBvZiB0aGUgdG9yY2ggcmFjZXM7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBzdXBlcmludGVuZGVudHMgcGFpZCBmb3IgdGhlIHVwa2VlcCBvZiB0aGUgY29tcGV0aXRvcnMgdHJhaW5pbmcgZm9yIHB1YmxpYyBjb21wZXRpdGlvbnMuIEluIGRpZmZpY3VsdCB0aW1lcyB0aGV5IGNvdWxkIG5vdCBzdXBwbHkgZnVsbCByYXRpb25zLjwvbm90ZT4gYW5kIHRoZSBjbGFzc2VzIG9uIGdhcnJpc29uIGR1dHkgaW4gYSBmb3J0cmVzcywgb3Igc2VydmluZyBhcyB0YXJnZXRlZXJzLCBvciBwYXRyb2xsaW5nIHRoZSBjb3VudHJ5IHdpbGwgc2hvdyBncmVhdGVyIGFsYWNyaXR5IGluIGNhcnJ5aW5nIG91dCBhbGwgdGhlc2UgZHV0aWVzIHdoZW4gdGhlIG1haW50ZW5hbmNlIGlzIGR1bHkgc3VwcGxpZWQgZm9yIHRoZSB3b3JrIGRvbmUuCjwvdHJhbnNsYXRpb24+"
translation['5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JZiBpdCBzZWVtcyBjbGVhciB0aGF0IHRoZSBzdGF0ZSBjYW5ub3Qgb2J0YWluIGEgZnVsbCByZXZlbnVlIGZyb20gYWxsIHNvdXJjZXMgdW5sZXNzIHNoZSBoYXMgcGVhY2UsIGlzIGl0IG5vdCB3b3J0aCB3aGlsZSB0byBzZXQgdXAgYSBib2FyZCBvZiBndWFyZGlhbnMgb2YgcGVhY2U/IFdlcmUgc3VjaCBhIGJvYXJkIGNvbnN0aXR1dGVkLCBpdCB3b3VsZCBoZWxwIHRvIGluY3JlYXNlIHRoZSBwb3B1bGFyaXR5IG9mIHRoZSBjaXR5IGFuZCB0byBtYWtlIGl0IG1vcmUgYXR0cmFjdGl2ZSBhbmQgbW9yZSBkZW5zZWx5IHRocm9uZ2VkIHdpdGggdmlzaXRvcnMgZnJvbSBhbGwgcGFydHMuCjwvdHJhbnNsYXRpb24+"
translation['5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPklmIGFueSBhcmUgaW5jbGluZWQgdG8gdGhpbmsgdGhhdCBhIGxhc3RpbmcgcGVhY2UgZm9yIG91ciBjaXR5IHdpbGwgaW52b2x2ZSBhIGxvc3Mgb2YgaGVyIHBvd2VyIGFuZCBnbG9yeSBhbmQgZmFtZSBpbiBHcmVlY2UsIHRoZXkgdG9vLCBpbiBteSBvcGluaW9uLCBhcmUgb3V0IGluIHRoZWlyIGNhbGN1bGF0aW9ucy4gRm9yIEkgcHJlc3VtZSB0aGF0IHRob3NlIHN0YXRlcyBhcmUgcmVja29uZWQgdGhlIGhhcHBpZXN0IHRoYXQgZW5qb3kgdGhlIGxvbmdlc3QgcGVyaW9kIG9mIHVuYnJva2VuIHBlYWNlOyBhbmQgb2YgYWxsIHN0YXRlcyBBdGhlbnMgaXMgYnkgbmF0dXJlIG1vc3Qgc3VpdGVkIHRvIGZsb3VyaXNoIGluIHBlYWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkZvciBpZiB0aGUgc3RhdGUgaXMgdHJhbnF1aWwsIHdoYXQgY2xhc3Mgb2YgbWVuIHdpbGwgbm90IG5lZWQgaGVyPyBTaGlwb3duZXJzIGFuZCBtZXJjaGFudHMgd2lsbCBoZWFkIHRoZSBsaXN0LiBUaGVuIHRoZXJlIHdpbGwgYmUgdGhvc2UgcmljaCBpbiBjb3JuIGFuZCB3aW5lIGFuZCBvaWwgYW5kIGNhdHRsZTsgbWVuIHBvc3Nlc3NlZCBvZiBicmFpbnMgYW5kIG1vbmV5IHRvIGludmVzdDsgY3JhZnRzbWVuIGFuZCBwcm9mZXNzb3JzIGFuZAo8L3RyYW5zbGF0aW9uPg=="
translation['5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPnBoaWxvc29waGVyczsgcG9ldHMgYW5kIHRoZSBwZW9wbGUgd2hvIG1ha2UgdXNlIG9mIHRoZWlyIHdvcmtzOyB0aG9zZSB0byB3aG9tIGFueXRoaW5nIHNhY3JlZCBvciBzZWN1bGFyIGFwcGVhbHMgdGhhdCBpcyB3b3J0aCBzZWVpbmcgb3IgaGVhcmluZy4gQmVzaWRlcywgd2hlcmUgd2lsbCB0aG9zZSB3aG8gd2FudCB0byBidXkgb3Igc2VsbCBtYW55IHRoaW5ncyBxdWlja2x5IG1lZXQgd2l0aCBiZXR0ZXIgc3VjY2VzcyBpbiB0aGVpciBlZmZvcnRzIHRoYW4gYXQgQXRoZW5zPwo8L3RyYW5zbGF0aW9uPg=="
translation['5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5ObyBvbmUsIEkgZGFyZSBzYXksIGNvbnRlc3RzIHRoaXM7IGJ1dCB0aGVyZSBhcmUgc29tZSB3aG8gd2lzaCB0aGUgc3RhdGUgdG8gcmVjb3ZlciBoZXIgYXNjZW5kYW5jeSwgYW5kIHRoZXkgbWF5IHRoaW5rIHRoYXQgaXQgaXMgbW9yZSBsaWtlbHkgdG8gYmUgd29uIGJ5IHdhciB0aGFuIGJ5IHBlYWNlLiBMZXQgc3VjaCwgaW4gdGhlIGZpcnN0IHBsYWNlLCBjYWxsIHRvIG1pbmQgdGhlIFBlcnNpYW4gV2Fycy4gV2FzIGl0IGJ5IGNvZXJjaW5nIHRoZSBHcmVla3Mgb3IgYnkgcmVuZGVyaW5nIHNlcnZpY2VzIHRvIHRoZW0gdGhhdCB3ZSBiZWNhbWUgbGVhZGVycyBvZiB0aGUgZmxlZXQgYW5kIHRyZWFzdXJlcnMgb2YgdGhlIGxlYWd1ZSBmdW5kcz8KPC90cmFuc2xhdGlvbj4="
translation['5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkZ1cnRoZXIsIGFmdGVyIHRoZSBzdGF0ZSBoYWQgYmVlbiBzdHJpcHBlZCBvZiBoZXIgZW1waXJlIHRocm91Z2ggc2VlbWluZyB0byBleGVyY2lzZSBoZXIgYXV0aG9yaXR5IHdpdGggZXhjZXNzaXZlIGhhcnNobmVzcywgZGlkIG5vdCB0aGUgaXNsYW5kZXJzIGV2ZW4gdGhlbiByZXN0b3JlIHRvIHVzIHRoZSBwcmVzaWRlbmN5IG9mIHRoZSBmbGVldCBieSB0aGVpciBvd24gZnJlZSB3aWxsLCB3aGVuIHdlIHJlZnJhaW5lZCBmcm9tIGFjdHMgb2YgaW5qdXN0aWNlPwo8L3RyYW5zbGF0aW9uPg=="
translation['5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBhZ2FpbiwgZGlkIG5vdCB0aGUgVGhlYmFucyBwbGFjZSB0aGVtc2VsdmVzIHVuZGVyIHRoZSBsZWFkZXJzaGlwIG9mIHRoZSBBdGhlbmlhbnMgaW4gcmV0dXJuIGZvciBvdXIgZ29vZCBvZmZpY2VzPyBZZXQgb25jZSBhZ2FpbiwgaXQgd2FzIG5vdCB0aGUgZWZmZWN0IG9mIGNvZXJjaW9uIG9uIG91ciBwYXJ0LCBidXQgb2YgZ2VuZXJvdXMgdHJlYXRtZW50LCB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyBwZXJtaXR0ZWQgdGhlIEF0aGVuaWFucyB0byBhcnJhbmdlIHRoZSBsZWFkZXJzaGlwIGFzIHRoZXkgY2hvc2UuCjwvdHJhbnNsYXRpb24+"
translation['5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBub3csIG93aW5nIHRvIHRoZSBjb25mdXNpb24gcHJldmFsZW50IGluIEdyZWVjZSwgYW4gb3Bwb3J0dW5pdHksIEkgdGhpbmssIGhhcyBmYWxsZW4gdG8gdGhlIHN0YXRlIHRvIHdpbiBiYWNrIHRoZSBHcmVla3Mgd2l0aG91dCB0cm91YmxlLCB3aXRob3V0IGRhbmdlciwgYW5kIHdpdGhvdXQgZXhwZW5zZS4gRm9yIHNoZSBoYXMgaXQgaW4gaGVyIHBvd2VyIHRvIHRyeSB0byByZWNvbmNpbGUgdGhlIHdhcnJpbmcgc3RhdGVzLCBzaGUgaGFzIGl0IGluIGhlciBwb3dlciB0byBjb21wb3NlIHRoZSBmYWN0aW9ucyBjb250ZW5kaW5nIGluIHRoZWlyIG1pZHN0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3ZXJlIGl0IGFwcGFyZW50IHRoYXQgeW91IGFyZSBzdHJpdmluZyB0byBtYWtlIHRoZSBEZWxwaGljIHNocmluZSBpbmRlcGVuZGVudCwgYXMgaXQgdXNlZCB0byBiZSwgbm90IGJ5IGpvaW5pbmcgaW4gd2FyLCBidXQgYnkgc2VuZGluZyBlbWJhc3NpZXMgdXAgYW5kIGRvd24gR3JlZWNlLCBJIGZvciBteSBwYXJ0IHNob3VsZCBub3QgYmUgaW4gdGhlIGxlYXN0IHN1cnByaXNlZCBpZiB5b3UgZm91bmQgdGhlIEdyZWVrcyBhbGwgb2Ygb25lIG1pbmQsIGJhbmRlZCB0b2dldGhlciBieSBvYXRoIGFuZCB1bml0ZWQgaW4gYWxsaWFuY2UgYWdhaW5zdCBhbnkgdGhhdCBhdHRlbXB0ZWQgdG8gc2VpemUgdGhlIHNocmluZSBpbiB0aGUgZXZlbnQgb2YgdGhlIFBob2NpYW5zIGFiYW5kb25pbmcgaXQuCjwvdHJhbnNsYXRpb24+"
translation['5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5XZXJlIHlvdSB0byBzaG93IGFsc28gdGhhdCB5b3UgYXJlIHN0cml2aW5nIGZvciBwZWFjZSBpbiBldmVyeSBsYW5kIGFuZCBvbiBldmVyeSBzZWEsIEkgZG8gdGhpbmsgdGhhdCwgbmV4dCB0byB0aGUgc2FmZXR5IG9mIHRoZWlyIG93biBjb3VudHJ5LCBhbGwgbWVuIHdvdWxkIHB1dCB0aGUgc2FmZXR5IG9mIEF0aGVucyBmaXJzdCBpbiB0aGVpciBwcmF5ZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SWYsIG9uIHRoZSBvdGhlciBoYW5kLCBhbnkgb25lIHN1cHBvc2VzIHRoYXQgZmluYW5jaWFsbHkgd2FyIGlzIG1vcmUgcHJvZml0YWJsZSB0byB0aGUgc3RhdGUgdGhhbiBwZWFjZSwgSSByZWFsbHkgZG8gbm90IGtub3cgaG93IHRoZSB0cnV0aCBvZiB0aGlzIGNhbiBiZSB0ZXN0ZWQgYmV0dGVyIHRoYW4gYnkgY29uc2lkZXJpbmcgb25jZSBtb3JlIHdoYXQgaGFzIGJlZW4gdGhlIGV4cGVyaWVuY2Ugb2Ygb3VyIHN0YXRlIGluIHRoZSBwYXN0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5IZSB3aWxsIGZpbmQgdGhhdCBpbiBvbGQgZGF5cyBhIHZlcnkgZ3JlYXQgYW1vdW50IG9mIG1vbmV5IHdhcyBwYWlkIGludG8gdGhlIHRyZWFzdXJ5IGluIHRpbWUgb2YgcGVhY2UsIGFuZCB0aGF0IHRoZSB3aG9sZSBvZiBpdCB3YXMgc3BlbnQgaW4gdGltZSBvZiB3YXI7IGhlIHdpbGwgY29uY2x1ZGUgb24gY29uc2lkZXJhdGlvbiB0aGF0IGluIG91ciBvd24gdGltZSB0aGUgZWZmZWN0IG9mIHRoZSBsYXRlIHdhciBvbiBvdXIgcmV2ZW51ZXMgd2FzIHRoYXQgbWFueSBvZiB0aGVtIGNlYXNlZCwgd2hpbGUgdGhvc2UgdGhhdCBjYW1lIGluIHdlcmUgZXhoYXVzdGVkIGJ5IHRoZSBtdWx0aXR1ZGUgb2YgZXhwZW5zZXM7IHdoZXJlYXMgdGhlIGNlc3NhdGlvbiBvZiB3YXIgYnkgc2VhIGhhcyBiZWVuIGZvbGxvd2VkIGJ5IGEgcmlzZSBpbiB0aGUgcmV2ZW51ZXMsIGFuZCBoYXMgYWxsb3dlZCB0aGUgY2l0aXplbnMgdG8gZGV2b3RlIHRoZW0gdG8gYW55IHB1cnBvc2UgdGhleSBjaG9vc2UuCjwvdHJhbnNsYXRpb24+"
translation['5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHNvbWUgb25lIG1heSBhc2sgbWUsIERvIHlvdSBtZWFuIHRvIHNheSB0aGF0LCBldmVuIGlmIHNoZSBpcyB3cm9uZ2VkLCB0aGUgc3RhdGUgc2hvdWxkIHJlbWFpbiBhdCBwZWFjZSB3aXRoIHRoZSBvZmZlbmRlcj8gTm8sIGNlcnRhaW5seSBub3Q7IGJ1dCBJIGRvIHNheSB0aGF0IG91ciB2ZW5nZWFuY2Ugd291bGQgZm9sbG93IGZhciBtb3JlIHN3aWZ0bHkgb24gb3VyIGVuZW1pZXMgaWYgd2UgcHJvdm9rZWQgbm9ib2R5IGJ5IHdyb25nLWRvaW5nOyBmb3IgdGhlbiB0aGV5IHdvdWxkIGxvb2sgaW4gdmFpbiBmb3IgYW4gYWxseS4KPC90cmFuc2xhdGlvbj4="
translation['6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZWxsIG5vdywgc3VyZWx5LCBpZiBub25lIG9mIHRoZXNlIHByb3Bvc2FscyBpcyBpbXBvc3NpYmxlIG9yIGV2ZW4gZGlmZmljdWx0LCBpZiBieSBjYXJyeWluZyB0aGVtIGludG8gZWZmZWN0IHdlIHNoYWxsIGJlIHJlZ2FyZGVkIHdpdGggbW9yZSBhZmZlY3Rpb24gYnkgdGhlIEdyZWVrcywgc2hhbGwgbGl2ZSBpbiBncmVhdGVyIHNlY3VyaXR5LCBhbmQgYmUgbW9yZSBnbG9yaW91czsgaWYgdGhlIHBlb3BsZSB3aWxsIGJlIG1haW50YWluZWQgaW4gY29tZm9ydCBhbmQgdGhlIHJpY2ggbm8gbW9yZSBidXJkZW5lZCB3aXRoIHRoZSBleHBlbnNlcyBvZiB3YXI7IGlmIHdpdGggYSBsYXJnZSBzdXJwbHVzIGluIGhhbmQgd2Ugc2hhbGwgY2VsZWJyYXRlIG91ciBmZXN0aXZhbHMgd2l0aCBldmVuIG1vcmUgc3BsZW5kb3VyIHRoYW4gYXQgcHJlc2VudCwgc2hhbGwgcmVzdG9yZSB0aGUgdGVtcGxlcywgYW5kIHJlcGFpciB0aGUgd2FsbHMgYW5kIGRvY2tzLCBhbmQgc2hhbGwgZ2l2ZSBiYWNrIHRvIHByaWVzdHMsIGNvdW5jaWxsb3JzLCBtYWdpc3RyYXRlcywga25pZ2h0cyB0aGVpciBhbmNpZW50IHByaXZpbGVnZXM7IHN1cmVseSwgSSBzYXksIG91ciBwcm9wZXIgY291cnNlIGlzIHRvIHByb2NlZWQgd2l0aCB0aGlzIHNjaGVtZSBmb3J0aHdpdGgsIHRoYXQgYWxyZWFkeSBpbiBvdXIgZ2VuZXJhdGlvbiB3ZSBtYXkgY29tZSB0byBzZWUgb3VyIGNpdHkgc2VjdXJlIGFuZCBwcm9zcGVyb3VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GdXJ0aGVybW9yZSwgaWYgeW91IGRlY2lkZSB0byBnbyBmb3J3YXJkIHdpdGggdGhlIHBsYW4sIEkgc2hvdWxkIGFkdmlzZSB5b3UgdG8gc2VuZCB0byBEb2RvbmEgYW5kIERlbHBoaSwgYW5kIGlucXVpcmUgb2YgdGhlIGdvZHMgd2hldGhlciBzdWNoIGEgZGVzaWduIGlzIGZyYXVnaHQgd2l0aCB3ZWFsIGZvciB0aGUgc3RhdGUgYm90aCBub3cgYW5kIGluIGRheXMgdG8gY29tZS4KPC90cmFuc2xhdGlvbj4="
translation['6.3'] = ""
translation['1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIGtub3cgaG93IGRpZmZpY3VsdCBpdCBpcyB0byB3cml0ZSBhbiBhcHByZWNpYXRpb24gb2YgQWdlc2lsYXVzIHRoYXQgc2hhbGwgYmUgd29ydGh5IG9mIGhpcyB2aXJ0dWUgYW5kIGdsb3J5LiBOZXZlcnRoZWxlc3MgdGhlIGF0dGVtcHQgbXVzdCBiZSBtYWRlLiBGb3IgaXQgd291bGQgbm90IGJlIHNlZW1seSB0aGF0IHNvIGdvb2QgYSBtYW4sIGp1c3QgYmVjYXVzZSBvZiBoaXMgcGVyZmVjdGlvbiwgc2hvdWxkIHJlY2VpdmUgbm8gdHJpYnV0ZXMgb2YgcHJhaXNlLCBob3dldmVyIGluYWRlcXVhdGUuCjwvdHJhbnNsYXRpb24+"
translation['1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgY29uY2VybmluZyBoaXMgaGlnaCBiaXJ0aCB3aGF0IGdyZWF0ZXIgYW5kIG5vYmxlciBjb3VsZCBiZSBzYWlkIHRoYW4gdGhpcywgdGhhdCBldmVuIHRvLWRheSB0aGUgbGluZSBvZiBoaXMgZGVzY2VudCBmcm9tIEhlcmFjbGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFnZXNpbGF1cyB3YXMgdHdlbnR5LWZpZnRoIGluIGxpbmUgb2YgZGVzY2VudCBmcm9tIEhlcmFjbGVzICg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIZHQuIDguMTMxIiB2YWxpZD0ieWVzIj5IZHQuIDguMTMxPC9iaWJsPjsgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyI+UGx1dC4gTHljLjwvYmlibD4gYy4gaTsgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyI+UGx1dC4gQWdlcy48L2JpYmw+IGMuIGkpLjwvbm90ZT4gaXMgdHJhY2VkIHRocm91Z2ggdGhlIHJvbGwgb2YgaGlzIGFuY2VzdG9ycywgYW5kIHRob3NlIG5vIHNpbXBsZSBjaXRpemVucywgYnV0IGtpbmdzIGFuZCBzb25zIG9mIGtpbmdzPwo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIZHQuIDguMTMxIiB2YWxpZD0ieWVzIj5IZHQuIDguMTMxPC9iaWJsPjsgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyI+UGx1dC4gTHljLjwvYmlibD4gYy4gaTsgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyI+UGx1dC4gQWdlcy48L2JpYmw+IGMuIGkpLjwvdHJhbnNsYXRpb24+"
translation['1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk5vciBhcmUgdGhleSBvcGVuIHRvIHRoZSByZXByb2FjaCB0aGF0IHRob3VnaCB0aGV5IHdlcmUga2luZ3MsIHRoZXkgcnVsZWQgb3ZlciBhIHBldHR5IHN0YXRlLiBPbiB0aGUgY29udHJhcnksIGFzIHRoZWlyIGZhbWlseSBpcyBob25vdXJlZCBhYm92ZSBhbGwgaW4gdGhlaXIgZmF0aGVybGFuZCwgc28gaXMgdGhlaXIgc3RhdGUgZ2xvcmlvdXMgYWJvdmUgYWxsIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPjsgdGh1cyB0aGV5IGFyZSBub3QgZmlyc3QgaW4gdGhlIHNlY29uZCByYW5rLCBidXQgbGVhZGVycyBpbiBhIGNvbW11bml0eSBvZiBsZWFkZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk9uIG9uZSBhY2NvdW50IGhpcyBmYXRoZXJsYW5kIGFuZCBoaXMgZmFtaWx5IGFyZSB3b3J0aHkgdG8gYmUgcHJhaXNlZCB0b2dldGhlciwgZm9yIG5ldmVyIGF0IGFueSB0aW1lIGhhcyB0aGUgc3RhdGUgYmVlbiBtb3ZlZCBieSBqZWFsb3VzeSBvZiB0aGVpciBwcmUtZW1pbmVuY2UgdG8gYXR0ZW1wdCB0aGUgb3ZlcnRocm93IG9mIHRoZWlyIGdvdmVybm1lbnQsIGFuZCBuZXZlciBhdCBhbnkgdGltZSBoYXZlIHRoZSBraW5ncyBzdHJpdmVuIHRvIG9idGFpbiBncmVhdGVyIHBvd2VycyB0aGFuIHdlcmUgY29uZmVycmVkIG9uIHRoZW0gb3JpZ2luYWxseSBhdCB0aGVpciBzdWNjZXNzaW9uIHRvIHRoZSB0aHJvbmUuIEZvciB0aGlzIHJlYXNvbiwgd2hpbGUgbm8gb3RoZXIgZ292ZXJubWVudCDigJQgZGVtb2NyYWN5LCBvbGlnYWNoeSwgZGVzcG90aXNtIG9yIGtpbmdkb20g4oCUIGNhbiBjYW4gbGF5IGNsYWltIHRvIGFuIHVuYnJva2VuIGV4aXN0ZW5jZSwgdGhpcyBraW5nZG9tIGFsb25lIHN0YW5kcyBmYXN0IGNvbnRpbnVhbGx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ib3dldmVyLCB0aGVyZSBhcmUgbm90IHdhbnRpbmcgc2lnbnMgdGhhdCBldmVuIGJlZm9yZSBoaXMgcmVpZ24gYmVnYW4gQWdlc2lsYXVzIHdhcyBkZWVtZWQgd29ydGh5IHRvIGJlIGtpbmcuIEZvciBvbiB0aGUgZGVhdGggb2YgS2luZyBBZ2lzIHRoZXJlIHdhcyBhIHN0cnVnZ2xlIGZvciB0aGUgdGhyb25lIGJldHdlZW4gTGVvdHljaGlkYXMsIGFzIHRoZSBzb24gb2YgQWdpcywgYW5kIEFnZXNpbGF1cywgYXMgdGhlIHNvbiBvZiBBcmNoaWRhbXVzLiBUaGUgc3RhdGUgZGVjaWRlZCBpbiBmYXZvdXIgb2YgQWdlc2lsYXVzLCBqdWRnaW5nIGhpbSB0byBiZSB0aGUgbW9yZSBlbGlnaWJsZSBpbiBwb2ludCBvZiBiaXJ0aCBhbmQgY2hhcmFjdGVyIGFsaWtlLiBTdXJlbHkgdG8gaGF2ZSBiZWVuIHByb25vdW5jZWQgd29ydGh5IG9mIHRoZSBoaWdoZXN0IHByaXZpbGVnZSBieSB0aGUgYmVzdCBtZW4gaW4gdGhlIG1pZ2h0aWVzdCBzdGF0ZSBpcyBwcm9vZiBzdWZmaWNpZW50IG9mIGhpcyB2aXJ0dWUsIGF0IGxlYXN0IGJlZm9yZSBoZSBiZWdhbiB0byByZWlnbi4KPC90cmFuc2xhdGlvbj4="
translation['1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHdpbGwgbm93IGdpdmUgYW4gYWNjb3VudCBvZiB0aGUgYWNoaWV2ZW1lbnRzIG9mIGhpcyByZWlnbiwgZm9yIEkgYmVsaWV2ZSB0aGF0IGhpcyBkZWVkcyB3aWxsIHRocm93IHRoZSBjbGVhcmVzdCBsaWdodCBvbiBoaXMgcXVhbGl0aWVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgQWdlc2lsYXVzIHdhcyBzdGlsbCBhIHlvdW5nIG1hbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5IZSB3YXMgb3ZlciBmb3J0eTsgYnV0IHNlZSB0aGUgSW50cm9kdWN0aW9uLjwvbm90ZT4gd2hlbiBoZSBnYWluZWQgdGhlIHRocm9uZS4gSGUgaGFkIGJlZW4gYnV0IGEgc2hvcnQgdGltZSBpbiBwb3dlciB3aGVuIHRoZSBuZXdzIGxlYWtlZCBvdXQgdGhhdCB0aGUga2luZyBvZiB0aGUgUGVyc2lhbnMgd2FzIGFzc2VtYmxpbmcgYSBncmVhdCBuYXZ5IGFuZCBhcm15IGZvciBhbiBhdHRhY2sgb24gdGhlIEdyZWVrcy4KPC90cmFuc2xhdGlvbj4="
translation['1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPldoaWxlIHRoZSBMYWNlZGFlbW9uaWFucyBhbmQgdGhlaXIgYWxsaWVzIHdlcmUgY29uc2lkZXJpbmcgdGhlIG1hdHRlciwgQWdlc2lsYXVzIGRlY2xhcmVkLCB0aGF0IGlmIHRoZXkgd291bGQgZ2l2ZSBoaW0gdGhpcnR5IFNwYXJ0YW5zLCB0d28gdGhvdXNhbmQgbmV3bHkgZW5yb2xsZWQgY2l0aXplbnMsIGFuZCBhIGNvbnRpbmdlbnQgb2Ygc2l4IHRob3VzYW5kIGFsbGllcywgaGUgd291bGQgY3Jvc3MgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPiBhbmQgdHJ5IHRvIGVmZmVjdCBhIHBlYWNlLCBvciwgaW4gY2FzZSB0aGUgYmFyYmFyaWFuIHdhbnRlZCB0byBmaWdodCwgd291bGQga2VlcCBoaW0gc28gYnVzeSB0aGF0IGhlIHdvdWxkIGhhdmUgbm8gdGltZSBmb3IgYW4gYXR0YWNrIG9uIHRoZSBHcmVla3MuCjwvdHJhbnNsYXRpb24+"
translation['1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkhpcyBlYWdlcm5lc3MgdG8gcGF5IGJhY2sgdGhlIFBlcnNpYW4gaW4gaGlzIG93biBjb2luIGZvciB0aGUgZm9ybWVyIGludmFzaW9uIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgaGlzIGRldGVybWluYXRpb24gdG8gd2FnZSBhbiBvZmZlbnNpdmUgcmF0aGVyIHRoYW4gYSBkZWZlbnNpdmUgd2FyLCBhbmQgaGlzIHdpc2ggdG8gbWFrZSB0aGUgZW5lbXkgcGF5IGZvciBpdCByYXRoZXIgdGhhbiB0aGUgR3JlZWtzLCB3ZXJlIGVub3VnaCB0byBhcm91c2UgYW4gaW1tZWRpYXRlIGFuZCB3aWRlc3ByZWFkIGVudGh1c2lhc20gZm9yIGhpcyBwcm9qZWN0LiBCdXQgd2hhdCBhcHBlYWxlZCBtb3N0IHRvIHRoZSBpbWFnaW5hdGlvbiB3YXMgdGhlIGlkZWEgb2YgZW50ZXJpbmcgb24gYSBzdHJ1Z2dsZSBub3QgdG8gc2F2ZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIGJ1dCB0byBzdWJkdWUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgd2hhdCBvZiBoaXMgc3RyYXRlZ3kgYWZ0ZXIgaGUgaGFkIHJlY2VpdmVkIHRoZSBhcm15IGFuZCBoYWQgc2FpbGVkIG91dD8gQSBzaW1wbGUgbmFycmF0aXZlIG9mIGhpcyBhY3Rpb25zIHdpbGwgYXNzdXJlZGx5IGNvbnZleSB0aGUgY2xlYXJlc3QgaW1wcmVzc2lvbiBvZiBpdC4KPC90cmFuc2xhdGlvbj4="
translation['1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzLCB0aGVuLCB3YXMgaGlzIGZpcnN0IGFjdCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDA0Ij5Bc2lhPC9wbGFjZU5hbWU+LiBUaXNzYXBoZXJuZXMgaGFkIHN3b3JuIHRoZSBmb2xsb3dpbmcgb2F0aCB0byBBZ2VzaWxhdXM6IOKAnElmIHlvdSB3aWxsIGFycmFuZ2UgYW4gYXJtaXN0aWNlIHRvIGxhc3QgdW50aWwgdGhlIHJldHVybiBvZiB0aGUgbWVzc2VuZ2VycyB3aG9tIEkgd2lsbCBzZW5kIHRvIHRoZSBLaW5nLCBJIHdpbGwgZG8gbXkgdXRtb3N0IHRvIG9idGFpbiBpbmRlcGVuZGVuY2UgZm9yIHRoZSBHcmVlayBjaXRpZXMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPuKAnTsgYW5kIEFnZXNpbGF1cyBvbiBoaXMgcGFydCBoYWQgc3dvcm4gdG8gb2JzZXJ2ZSB0aGUgYXJtaXN0aWNlIGhvbmVzdGx5LCBhbGxvd2luZyB0aHJlZSBtb250aHMgZm9yIHRoZSB0cmFuc2FjdGlvbi4gV2hhdCBmb2xsb3dlZD8KPC90cmFuc2xhdGlvbj4="
translation['1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaXNzYXBoZXJuZXMgZm9ydGh3aXRoIGJyb2tlIGhpcyBvYXRoLCBhbmQgaW5zdGVhZCBvZiBhcnJhbmdpbmcgYSBwZWFjZSwgYXBwbGllZCB0byB0aGUgS2luZyBmb3IgYSBsYXJnZSBhcm15IGluIGFkZGl0aW9uIHRvIHRoYXQgd2hpY2ggaGUgaGFkIGJlZm9yZS4gQXMgZm9yIEFnZXNpbGF1cywgdGhvdWdoIHdlbGwgYXdhcmUgb2YgdGhpcywgaGUgbm9uZSB0aGUgbGVzcyBjb250aW51ZWQgdG8ga2VlcCB0aGUgYXJtaXN0aWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rLCB0aGVyZWZvcmUsIHRoYXQgaGVyZSB3ZSBoYXZlIGhpcyBmaXJzdCBub2JsZSBhY2hpZXZlbWVudC4gQnkgc2hvd2luZyB1cCBUaXNzYXBoZXJuZXMgYXMgYSBwZXJqdXJlciwgaGUgbWFkZSBoaW0gZGlzdHJ1c3RlZCBldmVyeXdoZXJlOyBhbmQsIGNvbnRyYXJpd2lzZSwgYnkgcHJvdmluZyBoaW1zZWxmIHRvIGJlIGEgbWFuIG9mIGhpcyB3b3JkIGFuZCB0cnVlIHRvIGhpcyBhZ3JlZW1lbnRzLCBoZSBlbmNvdXJhZ2VkIGFsbCwgR3JlZWtzIGFuZCBiYXJiYXJpYW5zIGFsaWtlLCB0byBlbnRlciBpbnRvIGFuIGFncmVlbWVudCB3aXRoIGhpbSB3aGVuZXZlciBoZSB3aXNoZWQgaXQuCjwvdHJhbnNsYXRpb24+"
translation['1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGFycml2YWwgb2YgdGhlIG5ldyBhcm15IGVtYm9sZGVuZWQgVGlzc2FwaGVybmVzIHRvIHNlbmQgYW4gdWx0aW1hdHVtIHRvIEFnZXNpbGF1cywgdGhyZWF0ZW5pbmcgd2FzIHVubGVzcyBoZSB3aXRoZHJldyBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwMDQiPkFzaWE8L3BsYWNlTmFtZT47IGFuZCB0aGUgYWxsaWVzIGFuZCB0aGUgTGFjZWRhZW1vbmlhbnMgcHJlc2VudCBtYWRlIG5vIGNvbmNlYWxtZW50IG9mIHRoZWlyIGNoYWdyaW4sIGJlbGlldmluZyB0aGF0IHRoZSBzdHJlbmd0aCBvZiBBZ2VzaWxhdXMgd2FzIHdlYWtlciB0aGFuIHRoZSBQZXJzaWFuIGtpbmcncyBhcm1hbWVudC4gQnV0IEFnZXNpbGF1cyB3aXRoIGEgYmVhbWluZyBmYWNlIGJhZGUgdGhlIGVudm95cyBvZiBUaXNzYXBoZXJuZXMgaW5mb3JtIHRoZWlyIG1hc3RlciB0aGF0IGhlIHdhcyBwcm9mb3VuZGx5IGdyYXRlZnVsIHRvIGhpbSBmb3IgaGlzIHBlcmp1cnksIGJ5IHdoaWNoIGhlIGhhZCBnYWluZWQgdGhlIGhvc3RpbGl0eSBvZiB0aGUgZ29kcyBmb3IgaGltc2VsZiBhbmQgaGFkIG1hZGUgdGhlbSBhbGxpZXMgb2YgdGhlIEdyZWVrcy4KPC90cmFuc2xhdGlvbj4="
translation['1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5XaXRob3V0IGEgbW9tZW50J3MgZGVsYXkgaGUgZ2F2ZSB0aGUgd29yZCB0byBoaXMgdHJvb3BzIHRvIHBhY2sgdXAgaW4gcHJlcGFyYXRpb24gZm9yIGEgY2FtcGFpZ24sIGFuZCB3YXJuZWQgdGhlIGNpdGllcyB0aGF0IGxheSBvbiB0aGUgbGluZXMgb2YgbWFyY2ggdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDIzNTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjM1OCI+Q2FyaWE8L3BsYWNlTmFtZT4gdG8gaGF2ZSB0aGVpciBtYXJrZXRzIHJlYWR5IHN0b2NrZWQuIEhlIGFkdmlzZWQgYnkgbGV0dGVyIHRoZSBHcmVla3Mgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDI3NjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwMjc2NSI+SW9uaWE8L3BsYWNlTmFtZT4sIHRoZSBBZW9saWQgYW5kIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjYzOCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjM4Ij5IZWxsZXNwb250PC9wbGFjZU5hbWU+LCB0byBzZW5kIHRoZWlyIGNvbnRpbmdlbnRzIGZvciB0aGUgY2FtcGFpZ24gdG8gaGlzIGhlYWRxdWFydGVycyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEVwaGVzb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEVwaGVzb3MiPkVwaGVzdXM8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IFRpc3NhcGhlcm5lcyByZWZsZWN0ZWQgdGhhdCBBZ2VzaWxhdXMgd2FzIHdpdGhvdXQgY2F2YWxyeSwgd2hpbGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDIzNTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjM1OCI+Q2FyaWE8L3BsYWNlTmFtZT4gd2FzIGEgZGlmZmljdWx0IGNvdW50cnkgZm9yIG1vdW50ZWQgbWVuLCBhbmQgaGUgdGhvdWdodCB0aGF0IEFnZXNpbGF1cyB3YXMgd3JvdGggd2l0aCBoaW0gb24gYWNjb3VudCBvZiBoaXMgZGVjZWl0LiBDb25jbHVkaW5nLCB0aGVyZWZvcmUsIHRoYXQgaGlzIGVzdGF0ZSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjM1OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzU4Ij5DYXJpYTwvcGxhY2VOYW1lPiB3YXMgdGhlIHJlYWwgb2JqZWN0IG9mIHRoZSBjb21pbmcgYXR0YWNrLCBoZSBzZW50IHRoZSB3aG9sZSBvZiBoaXMgaW5mYW50cnkgYWNyb3NzIHRvIHRoYXQgZGlzdHJpY3QgYW5kIHRvb2sgaGlzIGNhdmFscnkgcm91bmQgaW50byB0aGUgcGxhaW4gb2YgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTIxNTYxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMjE1NjEiPk1hZWFuZGVyPC9wbGFjZU5hbWU+LCBjb25maWRlbnQgdGhhdCBoZSBjb3VsZCByaWRlIGRvd24gdGhlIEdyZWVrcyBiZWZvcmUgdGhleSByZWFjaGVkIHRoZSBjb3VudHJ5IHdoZXJlIGNhdmFscnkgY291bGQgbm90IG9wZXJhdGUuCjwvdHJhbnNsYXRpb24+"
translation['1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaW5zdGVhZCBvZiBtYXJjaGluZyBvbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjM1OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzU4Ij5DYXJpYTwvcGxhY2VOYW1lPiwgQWdlc2lsYXVzIGZvcnRod2l0aCB0dXJuZWQgcm91bmQgYW5kIG1hZGUgZm9yIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjEzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2MTMiPlBocnlnaWE8L3BsYWNlTmFtZT4uIFBpY2tpbmcgdXAgdGhlIHZhcmlvdXMgZm9yY2VzIHRoYXQgbWV0IGhpbSBvbiB0aGUgcm91dGUsIGhlIHByb2NlZWRlZCB0byByZWR1Y2UgdGhlIGNpdGllcyBhbmQgY2FwdHVyZWQgYSB2YXN0IHF1YW50aXR5IG9mIGJvb3R5IGJ5IHN1ZGRlbiBhdHRhY2tzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhpcyBhY2hpZXZlbWVudCBhbHNvIHdhcyB0aG91Z2h0IHRvIGJlIGEgcHJvb2Ygb2Ygc291bmQgZ2VuZXJhbHNoaXAsIHRoYXQgd2hlbiB3YXIgd2FzIGRlY2xhcmVkIGFuZCBjb3plbmluZyBpbiBjb25zZXF1ZW5jZSBiZWNhbWUgcmlnaHRlb3VzIGFuZCBmYWlyIGRlYWxpbmcsIGhlIHNob3dlZCBUaXNzYXBoZXJuZXMgdG8gYmUgYSBjaGlsZCBhdCBkZWNlcHRpb24uIEl0IHdhcyB0aG91Z2h0LCB0b28sIHRoYXQgaGUgbWFkZSBzaHJld2QgICB1c2Ugb2YgdGhpcyBvY2Nhc2lvbiB0byBlbnJpY2ggaGlzIGZyaWVuZHMuCjwvdHJhbnNsYXRpb24+"
translation['1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIGFjY3VtdWxhdGlvbiBvZiBwbHVuZGVyIHdhcyBzbyBncmVhdCB0aGF0IHRoaW5ncyB3ZXJlIHNlbGxpbmcgZm9yIG5leHQgdG8gbm90aGluZy4gU28gaGUgZ2F2ZSBoaXMgZnJpZW5kcyB0aGUgd29yZCB0byBidXksIHNheWluZyB0aGF0IGhlIHdhcyBzaG9ydGx5IGdvaW5nIGRvd24gdG8gdGhlIGNvYXN0IHdpdGggaGlzIGFybXkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldoZXJlIHRoZSBnb29kcyB3b3VsZCBiZSByZS1zb2xkIGF0IGEgcHJvZml0Ljwvbm90ZT4gVGhlIGF1Y3Rpb25lZXJzIHdlcmUgb3JkZXJlZCB0byBoYXZlIGEgc2NoZWR1bGUgbWFkZSBvZiB0aGUgcHJpY2VzIG9idGFpbmVkIGFuZCB0byBnaXZlIGRlbGl2ZXJ5IG9mIHRoZSBnb29kcy4gVGh1cyB3aXRob3V0IGNhcGl0YWwgb3V0bGF5LCBhbmQgd2l0aG91dCBhbnkgbG9zcyB0byB0aGUgdHJlYXN1cnksIGFsbCBoaXMgZnJpZW5kcyBtYWRlIGEgcHJvZGlnaW91cyBhbW91bnQgb2YgbW9uZXkuCjwvdHJhbnNsYXRpb24+"
translation['1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVyLCB3aGVuZXZlciBkZXNlcnRlcnMgb2ZmZXJlZCB0byBnaXZlIGluZm9ybWF0aW9uIHdoZXJlIHBsdW5kZXIgbWlnaHQgYmUgdGFrZW4sIHRoZXkgbmF0dXJhbGx5IHdlbnQgdG8gdGhlIGtpbmcuIEluIHN1Y2ggYSBjYXNlIGhlIHRvb2sgY2FyZSB0aGF0IHRoZSBjYXB0dXJlIHNob3VsZCBiZSBlZmZlY3RlZCBieSBoaXMgZnJpZW5kcywgc28gdGhhdCB0aGV5IG1pZ2h0IGF0IG9uZSBhbmQgdGhlIHNhbWUgdGltZSBtYWtlIG1vbmV5IGFuZCBhZGQgdG8gdGhlaXIgbGF1cmVscy4gVGhlIGltbWVkaWF0ZSByZXN1bHQgd2FzIHRoYXQgaGUgaGFkIG1hbnkgYXJkZW50IHN1aXRvcnMgZm9yIGhpcyBmcmllbmRzaGlwLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+UmVjb2duaXppbmcgdGhhdCBhIGNvdW50cnkgcGx1bmRlcmVkIGFuZCBkZXBvcHVsYXRlZCBjb3VsZCBub3QgbG9uZyBzdXBwb3J0IGFuIGFybXksIHdoZXJlYXMgYW4gaW5oYWJpdGVkIGFuZCBjdWx0aXZhdGVkIGxhbmQgd291bGQgeWllbGQgaW5leGhhdXN0aWJsZSBzdXBwbGllcywgaGUgdG9vayBwYWlucyBub3Qgb25seSB0byBjcnVzaCBoaXMgZW5lbWllcyBieSBmb3JjZSwgYnV0IGFsc28gdG8gd2luIHRoZW0gb3ZlciBieSBnZW50bGVuZXNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5IZSB3b3VsZCBvZnRlbiB3YXJuIGhpcyBtZW4gbm90IHRvIHB1bmlzaCB0aGVpciBwcmlzb25lcnMgYXMgY3JpbWluYWxzLCBidXQgdG8gZ3VhcmQgdGhlbSBhcyBodW1hbiBiZWluZ3M7IGFuZCBvZnRlbiB3aGVuIHNoaWZ0aW5nIGNhbXAsIGlmIGhlIG5vdGljZWQgbGl0dGxlIGNoaWxkcmVuLCB0aGUgcHJvcGVydHkgb2YgbWVyY2hhbnRzLCBsZWZ0IGJlaGluZCDigJQgbWFueSBtZXJjaGFudHMgb2ZmZXJlZCBjaGlsZHJlbiBmb3Igc2FsZSBiZWNhdXNlIHRoZXkgdGhvdWdodCB0aGV5IHdvdWxkIG5vdCBiZSBhYmxlIHRvIGNhcnJ5IGFuZCBmZWVkIHRoZW08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGRlYWxlcnMgb2Z0ZW4gZmFpbGVkIHRvIGZpbmQgYSBidXllciBhbmQgY29uc2VxdWVudGx5IGFiYW5kb25lZCB0aGVzZSBjYXB0dXJlZCBjaGlsZHJlbi48L25vdGU+IOKAlCBoZSBsb29rZWQgYWZ0ZXIgdGhlbSB0b28sIGFuZCBoYWQgdGhlbSBjb252ZXllZCB0byBzb21lIHBsYWNlIG9mIHJlZnVnZS4KPC90cmFuc2xhdGlvbj4="
translation['1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgaGUgYXJyYW5nZWQgdGhhdCBwcmlzb25lcnMgICBvZiB3YXIgd2hvIHdlcmUgdG9vIG9sZCB0byBhY2NvbXBhbnkgdGhlIGFybXkgd2VyZSB0byBiZSBsb29rZWQgYWZ0ZXIsIHRoYXQgdGhleSBtaWdodCBub3QgZmFsbCBhIHByZXkgdG8gZG9ncyBvciB3b2x2ZXMuIEl0IHRodXMgY2FtZSBhYm91dCB0aGF0IGhlIHdvbiB0aGUgZ29vZHdpbGwgbm90IG9ubHkgb2YgdGhvc2Ugd2hvIGhlYXJkIG9mIHRoZXNlIGZhY3RzLCBidXQgZXZlbiBvZiB0aGUgcHJpc29uZXJzIHRoZW1zZWx2ZXMuIEluIGhpcyBzZXR0bGVtZW50IHdpdGggdGhlIGNpdGllcyB0aGF0IGhlIHdvbiBvdmVyLCBoZSBpbnZhcmlhYmx5IGV4Y3VzZWQgdGhlbSBmcm9tIGFsbCBzZXJ2aWxlIGR1dGllcyBhbmQgcmVxdWlyZWQgb25seSBzdWNoIG9iZWRpZW5jZSBhcyBmcmVlbWVuIG93ZSB0byB0aGVpciBydWxlczsgYW5kIGJ5IGhpcyBjbGVtZW5jeSBoZSBtYWRlIGhpbXNlbGYgbWFzdGVyIG9mIGZvcnRyZXNzZXMgaW1wcmVnbmFibGUgdG8gYXNzYXVsdC4KPC90cmFuc2xhdGlvbj4="
translation['1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SG93ZXZlciwgc2luY2UgYSBjYW1wYWlnbiBpbiB0aGUgcGxhaW5zIHdhcyBpbXBvc3NpYmxlIGV2ZW4gaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2MTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjYxMyI+UGhyeWdpYTwvcGxhY2VOYW1lPiwgb3dpbmcgdG8gUGhhcm5hYmF6dXMnIGNhdmFscnksIGhlIGRlY2lkZWQgdGhhdCBoZSBtdXN0IHJhaXNlIGEgbW91bnRlZCBmb3JjZSwgaWYgaGUgd2FzIHRvIGF2b2lkIGNvbnRpbnVhbGx5IHJ1bm5pbmcgYXdheSBmcm9tIHRoZSBlbmVteS4gSGUgdGhlcmVmb3JlIGVucm9sbGVkIHRoZSB3ZWFsdGhpZXN0IG1lbiBpbiBhbGwgdGhlIGNpdGllcyB0aGVyZWFib3V0cyBhcyBicmVlZGVycyBvZiBob3JzZXMsIGFuZCBpc3N1ZWQgYSBwcm9jbGFtYXRpb24gdGhhdAo8L3RyYW5zbGF0aW9uPg=="
translation['1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5hbnlvbmUgd2hvIHN1cHBsaWVkIGEgaG9yc2UgYW5kIGFybXMgYW5kIGFuIGVmZmljaWVudCBtYW4gc2hvdWxkIGJlIGV4ZW1wdCBmcm9tIHBlcnNvbmFsIHNlcnZpY2UuIEluIHRoaXMgd2F5IGhlIGJyb3VnaHQgaXQgYWJvdXQgdGhhdCBldmVyeSBvbmUgb2YgdGhlbSBjYXJyaWVkIG91dCB0aGVzZSByZXF1aXJlbWVudHMgd2l0aCB0aGUgemVhbCBvZiBhIG1hbiBpbiBxdWVzdCBvZiBzb21lb25lIHRvIGRpZSBpbiBoaXMgc3RlYWQuIEhlIGFsc28gc3BlY2lmaWVkIGNpdGllcyB0aGF0IHdlcmUgdG8gZnVybmlzaCBjb250aW5nZW50cyBvZiBjYXZhbHJ5LCBmZWVsaW5nIHN1cmUgdGhhdCBmcm9tIHRoZSBob3JzZWJyZWVkaW5nIGNpdGllcyByaWRlcnMgcHJvdWQgb2YgdGhlaXIgaG9yc2VtYW5zaGlwIHdvdWxkIGJlIGZvcnRoY29taW5nLiBUaGlzIGFnYWluIHdhcyBjb25zaWRlcmVkIGFuIGFkbWlyYWJsZSBzdHJva2Ugb24gaGlzIHBhcnQsIHRoYXQgbm8gc29vbmVyIGhhZCBoZSByYWlzZWQgaGlzIGNhdmFscnkgdGhhbiBpdCBiZWNhbWUgYSBwb3dlcmZ1bCBib2R5IHJlYWR5IGZvciBhY3Rpb24uCjwvdHJhbnNsYXRpb24+"
translation['1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhlIGZpcnN0IHNpZ24gb2Ygc3ByaW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxkYXRlIGF1dGhuYW1lPSItMzk1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk1Ij4zOTU8L2RhdGU+IEIuQy48L25vdGU+IGhlIGNvbGxlY3RlZCB0aGUgd2hvbGUgb2YgaGlzIGZvcmNlcyBhdCA8ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1PC9kYXRlPiBCLkMuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxFcGhlc29zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxFcGhlc29zIj5FcGhlc3VzPC9wbGFjZU5hbWU+LiBXaXRoIGEgdmlldyB0byB0aGVpciB0cmFpbmluZyBoZSBvZmZlcmVkIHByaXplcyBmb3IgdGhlIGNhdmFscnkgc3F1YWRyb24gdGhhdCByb2RlIGJlc3QsIGFuZCBmb3IgdGhlIGNvbXBhbnkgb2YgaGVhdnkgICBpbmZhbnRyeSB0aGF0IHJlYWNoZWQgdGhlIGhpZ2hlc3QgbGV2ZWwgb2YgcGh5c2ljYWwgZml0bmVzcy4gSGUgYWxzbyBvZmZlcmVkIHByaXplcyB0byB0aGUgdGFyZ2V0ZWVycyBhbmQgdGhlIGFyY2hlcnMgd2hvIHNob3dlZCB0aGUgZ3JlYXRlc3QgZWZmaWNpZW5jeSBpbiB0aGVpciBwYXJ0aWN1bGFyIGR1dGllcy4gVGhlcmV1cG9uIG9uZSBtaWdodCBzZWUgZXZlcnkgZ3ltbmFzaXVtIGNyb3dkZWQgd2l0aCB0aGUgbWVuIGV4ZXJjaXNpbmcsIHRoZSByYWNlY291cnNlIHRocm9uZ2VkIHdpdGggY2F2YWxyeW1lbiByaWRpbmcsIGFuZCB0aGUgamF2ZWxpbi1tZW4gYW5kIGFyY2hlcnMgc2hvb3RpbmcgYXQgdGhlIG1hcmsuCjwvdHJhbnNsYXRpb24+"
translation['1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5JbmRlZWQgaGUgbWFkZSB0aGUgd2hvbGUgY2l0eSBpbiB3aGljaCBoZSB3YXMgcXVhcnRlcmVkIGEgc2lnaHQgdG8gc2VlLiBGb3IgdGhlIG1hcmtldCB3YXMgZnVsbCBvZiBhcm1zIGFuZCBob3JzZXMgb2YgYWxsIHNvcnRzIG9uIHNhbGUsIGFuZCB0aGUgY29wcGVyc21pdGhzLCBjYXJwZW50ZXJzLCB3b3JrZXJzIGluIGlyb24sIGNvYmJsZXJzLCBhbmQgcGFpbnRlcnMgd2VyZSBhbGwgYnVzeSBtYWtpbmcgd2VhcG9ucyBvZiB3YXIsIHNvIHRoYXQgeW91IG1pZ2h0IGhhdmUgdGhvdWdodCB0aGF0IHRoZSBjaXR5IHdhcyByZWFsbHkgYSB3YXIgZmFjdG9yeS4KPC90cmFuc2xhdGlvbj4="
translation['1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYW4gaW5zcGlyaW5nIHNpZ2h0IGl0IHdvdWxkIGhhdmUgYmVlbiB0byB3YXRjaCBBZ2VzaWxhdXMgYW5kIGFsbCBoaXMgc29sZGllcnMgYmVoaW5kIGhpbSByZXR1cm5pbmcgZ2FybGFuZGVkIGZyb20gdGhlIGd5bW5hc2l1bSBhbmQgZGVkaWNhdGluZyB0aGVpciBnYXJsYW5kcyB0byBBcnRlbWlzLiBGb3Igd2hlcmUgbWVuIHJldmVyZW5jZSB0aGUgZ29kcywgdHJhaW4gdGhlbXNlbHZlcyBpbiB3YXJmYXJlIGFuZCBwcmFjdGlzZSBvYmVkaWVuY2UsIHRoZXJlIHlvdSBzdXJlbHkgZmluZCBoaWdoIGhvcGVzIGFib3VuZGluZy4KPC90cmFuc2xhdGlvbj4="
translation['1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5Nb3Jlb3ZlciwgYmVsaWV2aW5nIHRoYXQgY29udGVtcHQgZm9yIHRoZSBlbmVteSB3b3VsZCBraW5kbGUgdGhlIGZpZ2h0aW5nIHNwaXJpdCwgaGUgZ2F2ZSBpbnN0cnVjdGlvbnMgdG8gaGlzIGhlcmFsZHMgdGhhdCB0aGUgYmFyYmFyaWFucyBjYXB0dXJlZCBpbiB0aGUgcmFpZHMgc2hvdWxkIGJlIGV4cG9zZWQgZm9yIHNhbGUgbmFrZWQuIFNvIHdoZW4gaGlzIHNvbGRpZXJzIHNhdyB0aGVtIHdoaXRlIGJlY2F1c2UgdGhleSBuZXZlciBzdHJpcHBlZCwgYW5kIGZhdCBhbmQgbGF6eSB0aHJvdWdoIGNvbnN0YW50IHJpZGluZyBpbiBjYXJyaWFnZXMsIHRoZXkgYmVsaWV2ZWQgdGhhdCB0aGUgd2FyIHdvdWxkIGJlIGV4YWN0bHkgbGlrZSBmaWdodGluZyB3aXRoIHdvbWVuLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSBhbHNvIGdhdmUgbm90aWNlIHRvIHRoZSB0cm9vcHMgdGhhdCBoZSB3b3VsZCBpbW1lZGlhdGVseSBsZWFkIHRoZW0gYnkgdGhlIHNob3J0ZXN0IHJvdXRlIHRvIHRoZSBtb3N0IGZlcnRpbGUgcGFydHMgb2YgdGhlIGNvdW50cnksIHNvIHRoYXQgaGUgbWlnaHQgYXQgb25jZSBmaW5kIHRoZW0gcHJlcGFyaW5nIHRoZW1zZWx2ZXMgaW4gYm9keSBhbmQgICBtaW5kIGZvciB0aGUgY29taW5nIHN0cnVnZ2xlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5UaXNzYXBoZXJuZXMsIGhvd2V2ZXIsIGJlbGlldmVkIHRoYXQgaW4gc2F5aW5nIHRoaXMgaGUgbWVhbnQgdG8gZGVjZWl2ZSBoaW0gYWdhaW4sIGFuZCB0aGF0IG5vdyBoZSB3b3VsZCByZWFsbHkgaW52YWRlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyMzU4IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDIzNTgiPkNhcmlhPC9wbGFjZU5hbWU+LiBBY2NvcmRpbmdseSBoZSBzZW50IGhpcyBpbmZhbnRyeSBhY3Jvc3MgaW50byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjM1OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzU4Ij5DYXJpYTwvcGxhY2VOYW1lPiBhcyBiZWZvcmUsIGFuZCBzdGF0aW9uZWQgaGlzIGNhdmFscnkgaW4gdGhlIHBsYWluIG9mIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTEyMTU2MSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMTIxNTYxIj5NYWVhbmRlcjwvcGxhY2VOYW1lPi4gQnV0IEFnZXNpbGF1cyBkaWQgbm90IHBsYXkgZmFsc2U6IGluIGFjY29yZGFuY2Ugd2l0aCBoaXMgbm90aWNlIGhlIG1hcmNoZWQgc3RyYWlnaHQgdG8gdGhlIG5laWdoYm91cmhvb2Qgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTYXJkaXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNhcmRpcyI+U2FyZGlzPC9wbGFjZU5hbWU+OyBhbmQgZm9yIHRocmVlIGRheXMgaGlzIHJvdXRlIGxheSB0aHJvdWdoIGEgY291bnRyeSBiYXJlIG9mIGVuZW1pZXMsIHNvIHRoYXQgaGUgc3VwcGxpZWQgaGlzIGFybXkgd2l0aCBhYnVuZGFuY2Ugb2YgcHJvdmlzaW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['1.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgZm91cnRoIGRheSB0aGUgZW5lbXkncyBjYXZhbHJ5IGNhbWUgdXAuIFRoZWlyIGxlYWRlciB0b2xkIHRoZSBvZmZpY2VyIGluIGNvbW1hbmQgb2YgdGhlIGJhZ2dhZ2UtdHJhaW4gdG8gY3Jvc3MgdGhlIHJpdmVyIFBhY3RvbHVzIGFuZCBlbmNhbXAuIFRoZSBjYXZhbHJ5LCBtZWFudGltZSwgY2F0Y2hpbmcgc2lnaHQgb2YgdGhlIEdyZWVrIGNhbXAtZm9sbG93ZXJzIHBsdW5kZXJpbmcgaW4gc2NhdHRlcmVkIGJhbmRzLCBraWxsZWQgYSBsYXJnZSBudW1iZXIgb2YgdGhlbS4gT24gbm90aWNpbmcgdGhpcywgQWdlc2lsYXVzIG9yZGVyZWQgaGlzIGNhdmFscnkgdG8gZ28gdG8gdGhlaXIgaGVscC4gVGhlIFBlcnNpYW5zIGluIHR1cm4sIHNlZWluZyB0aGUgc3VwcG9ydHMgY29taW5nLCBnYXRoZXJlZCBpbiBhIG1hc3MgYW5kIGNvbmZyb250ZWQgdGhlbSB3aXRoIHRoZSBmdWxsIHN0cmVuZ3RoIG9mIHRoZWlyIGhvcnNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIEFnZXNpbGF1cywgcmVhbGlzaW5nIHRoYXQgdGhlIGVuZW15J3MgaW5mYW50cnkgd2FzIG5vdCB5ZXQgdXAsIHdoaWxlIGhlIGhhZCBhbGwgaGlzIHJlc291cmNlcyBvbiB0aGUgc3BvdCwgdGhvdWdodCB0aGUgbW9tZW50IHdhcyBjb21lIHRvIGpvaW4gYmF0dGxlIGlmIGhlIGNvdWxkLiBUaGVyZWZvcmUsIGFmdGVyIG9mZmVyaW5nIHNhY3JpZmljZSwgaGUgbGVkIGZvcndhcmQgdGhlIGJhdHRsZSBsaW5lIGltbWVkaWF0ZWx5IGFnYWluc3QgdGhlIG9wcG9zaW5nIGNhdmFscnksIHRoZSBoZWF2eSBpbmZhbnRyeW1lbiBvZiB0ZW4geWVhcnMgc2VydmljZSBoYXZpbmcgb3JkZXJzIHRvIHJ1biB0byBjbG9zZSBxdWFydGVycyB3aXRoIHRoZSBlbmVteSwgd2hpbGUgdGhlIHRhcmdldGVlcnMgd2VyZSB0byBsZWFkIHRoZSBhZHZhbmNlIGF0IHRoZSBkb3VibGUuIEhlIGFsc28gc2VudCB3b3JkIHRvIHRoZSBjYXZhbHJ5IHRvIGF0dGFjayBpbiB0aGUga25vd2xlZGdlIHRoYXQgaGUgaGltc2VsZiB3YXMgZm9sbG93aW5nIHdpdGggdGhlIHdob2xlIGFybXkuCjwvdHJhbnNsYXRpb24+"
translation['1.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgY2hhcmdlIG9mIHRoZSBjYXZhbHJ5IHdhcyBtZXQgYnkgdGhlIGZsb3dlciBvZiB0aGUgUGVyc2lhbnM6IGJ1dCBhcyBzb29uIGFzIHRoZSBmdWxsIHdlaWdodCBvZiB0aGUgYXR0YWNrIGZlbGwgb24gdGhlbSwgdGhleSBzd2F5ZWQsIGFuZCAgIHNvbWUgd2VyZSBjdXQgZG93biBpbW1lZGlhdGVseSBpbiB0aGUgcml2ZXIsIHdoaWxlIHRoZSByZXN0IGZsZWQuIFRoZSBHcmVla3MgZm9sbG93ZWQgdXAgdGhlaXIgc3VjY2VzcyBhbmQgY2FwdHVyZWQgdGhlaXIgY2FtcC4gVGhlIHRhcmdldGVlcnMgbmF0dXJhbGx5IGZlbGwgdG8gcGlsbGFnaW5nOyBidXQgQWdlc2lsYXVzIGRyZXcgdGhlIGxpbmVzIG9mIGhpcyBjYW1wIHJvdW5kIHNvIGFzIHRvIGVuY2xvc2UgdGhlIHByb3BlcnR5IG9mIGFsbCwgZnJpZW5kcyBhbmQgZm9lcyBhbGlrZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiBoZSBpbnRyZW5jaGVkLjwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['1.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gaGVhcmluZyB0aGF0IHRoZXJlIHdhcyBjb25mdXNpb24gYW1vbmcgdGhlIGVuZW15LCBiZWNhdXNlIGV2ZXJ5b25lIHB1dCB0aGUgYmxhbWUgZm9yIHdoYXQgaGFkIGhhcHBlbmVkIG9uIGhpcyBuZWlnaGJvdXIsIGhlIGFkdmFuY2VkIGZvcnRod2l0aCBvbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNhcmRpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU2FyZGlzIj5TYXJkaXM8L3BsYWNlTmFtZT4uIFRoZXJlIGhlIGJlZ2FuIGJ1cm5pbmcgYW5kIHBpbGxhZ2luZyB0aGUgc3VidXJicywgYW5kIG1lYW50aW1lIGlzc3VlZCBhIHByb2NsYW1hdGlvbiBjYWxsaW5nIG9uIHRob3NlIHdobyB3YW50ZWQgZnJlZWRvbSB0byBqb2luIGhpcyBzdGFuZGFyZCwgYW5kIGNoYWxsZW5naW5nIGFueSB3aG8gY2xhaW1lZCBhIHJpZ2h0IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwMDQiPkFzaWE8L3BsYWNlTmFtZT4gdG8gc2VlayBhIGRlY2lzaW9uIGJldHdlZW4gdGhlbXNlbHZlcyBhbmQgdGhlIGxpYmVyYXRvcnMgYnkgYW4gYXBwZWFsIHRvIGFybXMuCjwvdHJhbnNsYXRpb24+"
translation['1.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBubyBvbmUgY2FtZSBvdXQgdG8gb3Bwb3NlIGhpbSwgaGUgcHJvc2VjdXRlZCB0aGUgY2FtcGFpZ24gaGVuY2Vmb3J3YXJkIGluIGNvbXBsZXRlIGNvbmZpZGVuY2U6IGhlIGJlaGVsZCB0aGUgR3JlZWtzLCBjb21wZWxsZWQgZXJzdHdoaWxlIHRvIGNyaW5nZSwgbm93IGhvbm91cmVkIGJ5IHRoZWlyIG9wcHJlc3NvcnM7IGNhdXNlZCB0aG9zZSB3aG8gYXJyb2dhbnRseSBjbGFpbWVkIGZvciB0aGVtc2VsdmVzIHRoZSBob25vdXJzIHBhaWQgdG8gdGhlIGdvZHMgdG8gc2hyaW5rIGV2ZW4gZnJvbSBsb29raW5nIHRoZSBHcmVla3MgaW4gdGhlIGZhY2U7IHJlbmRlcmVkIHRoZSBjb3VudHJ5IG9mIGhpcyBmcmllbmRzIGludmlvbGF0ZSwgYW5kIHN0cmlwcGVkIHRoZSBlbmVteSdzIGNvdW50cnkgc28gdGhvcm91Z2hseSB0aGF0IGluIHR3byB5ZWFycyBoZSBjb25zZWNyYXRlZCB0byB0aGUgZ29kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVscGhpIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxEZWxwaGkiPkRlbHBoaTwvcGxhY2VOYW1lPiBtb3JlIHRoYW4gdHdvIGh1bmRyZWQgdGFsZW50cyBhcyB0aXRoZS4KPC90cmFuc2xhdGlvbj4="
translation['1.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHRoZSBQZXJzaWFuIGtpbmcsIGJlbGlldmluZyB0aGF0IFRpc3NhcGhlcm5lcyB3YXMgcmVzcG9uc2libGUgZm9yIHRoZSBiYWQgdHVybiBpbiBoaXMgYWZmYWlycywgc2VudCBkb3duIFRpdGhyYXVzdGVzIGFuZCBiZWhlYWRlZCBUaXNzYXBoZXJuZXMuIEFmdGVyIHRoaXMgdGhlIG91dGxvb2sgYmVjYW1lIHN0aWxsIG1vcmUgaG9wZWxlc3MgZm9yIHRoZSBiYXJiYXJpYW5zLCB3aGlsZSBBZ2VzaWxhdXMgcmVjZWl2ZWQgbGFyZ2UgYWNjZXNzaW9ucyAgIG9mIHN0cmVuZ3RoLiBGb3IgYWxsIHRoZSBuYXRpb25zIG9mIHRoZSBlbXBpcmUgc2VudCBlbWJhc3NpZXMgc2Vla2luZyBoaXMgZnJpZW5kc2hpcCwgYW5kIHRoZSBkZXNpcmUgZm9yIGZyZWVkb20gY2F1c2VkIG1hbnkgdG8gcmV2b2x0IHRvIGhpbSwgc28gdGhhdCBub3QgR3JlZWtzIGFsb25lLCBidXQgbWFueSBiYXJiYXJpYW5zIGFsc28gbm93IGFja25vd2xlZGdlZCB0aGUgbGVhZGVyc2hpcCBvZiBBZ2VzaWxhdXMuCjwvdHJhbnNsYXRpb24+"
translation['1.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGlzIGNvbmR1Y3QgYXQgdGhpcyBqdW5jdHVyZSBhbHNvIG1lcml0cyB1bnN0aW50ZWQgYWRtaXJhdGlvbi4gVGhvdWdoIHJ1bGVyIG9mIGNvdW50bGVzcyBjaXRpZXMgb24gdGhlIG1haW5sYW5kLCBhbmQgbWFzdGVyIG9mIGlzbGFuZHMg4oCUIGZvciB0aGUgc3RhdGUgaGFkIG5vdyBhZGRlZCB0aGUgZmxlZXQgdG8gaGlzIGNvbW1hbmQg4oCUIGJlY29taW5nIGRhaWx5IG1vcmUgZmFtb3VzIGFuZCBtb3JlIHBvd2VyZnVsOyBwbGFjZWQgaW4gYSBwb3NpdGlvbiB0byBtYWtlIHdoYXQgdXNlIGhlIHdvdWxkIG9mIGhpcyBtYW55IG9wcG9ydHVuaXRpZXM7IGFuZCBkZXNpZ25pbmcgYW5kIGV4cGVjdGluZyB0byBjcm93biBoaXMgYWNoaWV2ZW1lbnRzIGJ5IGRpc3NvbHZpbmcgdGhlIGVtcGlyZSB0aGF0IGhhZCBhdHRhY2tlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gaW4gdGhlIHBhc3Q6IGhlIHN1cHByZXNzZWQgYWxsIHRob3VnaHQgb2YgdGhlc2UgdGhpbmdzLCBhbmQgYXMgc29vbiBhcyBoZSByZWNlaXZlZCBhIHJlcXVlc3QgZnJvbSB0aGUgaG9tZSBnb3Zlcm5tZW50IHRvIGNvbWUgdG8gdGhlIGFpZCBvZiBoaXMgZmF0aGVybGFuZCwgaGUgb2JleWVkIHRoZSBjYWxsIG9mIHRoZSBzdGF0ZSwganVzdCBhcyB0aG91Z2ggaGUgd2VyZSBzdGFuZGluZyBpbiB0aGUgRXBob3IncyBwYWxhY2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SW4gdGhlIG1hcmtldCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4uIFRoZSBGaXZlIEVwaG9ycyBzYXQgdGhlcmUgZGFpbHksIGFuZCBpdCB3YXMgaW4gdGhlaXIgcG93ZXIgdG8gY2Vuc3VyZSB0aGUga2luZ3MuPC9ub3RlPiBhbG9uZSBiZWZvcmUgdGhlIEZpdmUsIHRodXMgc2hvd2luZyBjbGVhcmx5IHRoYXQgaGUgd291bGQgbm90IHRha2UgdGhlIHdob2xlIGVhcnRoIGluIGV4Y2hhbmdlIGZvciBoaXMgZmF0aGVybGFuZCwgbm9yIG5ldy1mb3VuZCBmcmllbmRzIGZvciBvbGQsIGFuZCB0aGF0IGhlIHNjb3JuZWQgdG8gY2hvb3NlIGJhc2UgYW5kIHNlY3VyZSBnYWlucyByYXRoZXIgdGhhbiB0aGF0IHdoaWNoIHdhcyByaWdodCBhbmQgaG9ub3VyYWJsZSwgZXZlbiB0aG91Z2ggaXQgd2FzIGRhbmdlcm91cy4KPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LiBUaGUgRml2ZSBFcGhvcnMgc2F0IHRoZXJlIGRhaWx5LCBhbmQgaXQgd2FzIGluIHRoZWlyIHBvd2VyIHRvIGNlbnN1cmUgdGhlIGtpbmdzLjwvdHJhbnNsYXRpb24+"
translation['1.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhyb3VnaG91dCB0aGUgdGltZSB0aGF0IGhlIHJlbWFpbmVkIGluIGhpcyBjb21tYW5kLCBhbm90aGVyIGFjaGlldmVtZW50IG9mIGhpcyBzaG93ZWQgYmV5b25kIHF1ZXN0aW9uIGhvdyBhZG1pcmFibGUgd2FzIGhpcyBza2lsbCBpbiBraW5nY3JhZnQuIEhhdmluZyBmb3VuZCBhbGwgdGhlIGNpdGllcyB0aGF0IGhlIGhhZCBnb25lIG91dCB0byBnb3Zlcm4gcmVudCBieSBmYWN0aW9uIGluIGNvbnNlcXVlbmNlIG9mIHRoZSBwb2xpdGljYWwgZGlzdHVyYmFuY2VzIHRoYXQgZm9sbG93ZWQgb24gdGhlIGNvbGxhcHNlIG9mIHRoZSBBdGhlbmlhbiBlbXBpcmUsIGhlIGJyb3VnaHQgaXQgYWJvdXQgYnkgdGhlIGluZmx1ZW5jZSBvZiBoaXMgcHJlc2VuY2UgdGhhdCB0aGUgY29tbXVuaXRpZXMgbGl2ZWQgaW4gdW5icm9rZW4gaGFybW9ueSBhbmQgcHJvc3Blcml0eSB3aXRob3V0IHJlY291cnNlIHRvIGJhbmlzaG1lbnQgb3IgZXhlY3V0aW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['1.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUgdGhlIEdyZWVrcyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDA0Ij5Bc2lhPC9wbGFjZU5hbWU+IG1vdXJuZWQgaGlzIGRlcGFydHVyZSBhcyB0aG91Z2ggdGhleSB3ZXJlIGJpZGRpbmcgZmFyZXdlbGwgbm90IG1lcmVseSB0byBhIHJ1bGVyLCBidXQgdG8gYSBmYXRoZXIgb3IgYSBjb21yYWRlLiBBbmQgYXQgdGhlIGVuZCB0aGV5IHNob3dlZCB0aGF0IHRoZWlyIGFmZmVjdGlvbiB3YXMgdW5mZWlnbmVkLiBBdCBhbnkgcmF0ZSB0aGV5IHdlbnQgd2l0aCBoaW0gdm9sdW50YXJpbHkgdG8gYWlkIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiwga25vd2luZyBhcyB0aGV5IGRpZCB0aGF0IHRoZXkgbXVzdCBtZWV0IGFuIGVuZW15IG5vdCBpbmZlcmlvciB0byB0aGVtc2VsdmVzLiBUaGlzIHRoZW4gd2FzIHRoZSBlbmQgb2YgaGlzIGFjdGl2aXRpZXMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciBjcm9zc2luZyB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2MzgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjYzOCI+SGVsbGVzcG9udDwvcGxhY2VOYW1lPiwgaGUgcGFzc2VkIHRocm91Z2ggdGhlIHZlcnkgc2FtZSB0cmliZXMgYXMgdGhlIFBlcnNpYW4ga2luZyB3aXRoIGhpcyBtaWdodHkgaG9zdDsgYW5kIHRoZSBkaXN0YW5jZSB0aGF0IGhhZCBiZWVuIHRyYXZlcnNlZCBieSB0aGUgYmFyYmFyaWFuIGluIGEgeWVhciB3YXMgY292ZXJlZCBieSBBZ2VzaWxhdXMgaW4gbGVzcyB0aGFuIGEgbW9udGguIEZvciBoZSBoYWQgbm8gaW50ZW50aW9uIG9mIGFycml2aW5nIHRvbyBsYXRlIHRvIGFpZCBoaXMgZmF0aGVybGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gaGUgaGFkIHBhc3NlZCB0aHJvdWdoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA2NjY3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDY2NjciPk1hY2Vkb25pYTwvcGxhY2VOYW1lPiBhbmQgcmVhY2hlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAxMzk5Ij5UaGVzc2FseTwvcGxhY2VOYW1lPiwgdGhlIHBlb3BsZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLExhcmlzYSxBZW9saXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLExhcmlzYSxBZW9saXMiPkxhcmlzYTwvcGxhY2VOYW1lPiwgQ3Jhbm5vbiwgU2NvdHVzc2EgYW5kIFBoYXJzYWx1cywgd2hvIHdlcmUgYWxsaWVzIG9mIHRoZSBCb2VvdGlhbnMsIGFsbCB0aGUgVGhlc3NhbGlhbnMsIGluIGZhY3QsIGV4Y2VwdCB0aG9zZSB3aG8gaGFwcGVuZWQgdG8gYmUgaW4gZXhpbGUgYXQgdGhlIHRpbWUsIGZvbGxvd2VkIGF0IGhpcyBoZWVscyBhbmQga2VwdCBtb2xlc3RpbmcgaGltLiBGb3IgYSB0aW1lIGhlIGxlZCB0aGUgYXJteSBpbiBhIGhvbGxvdyBzcXVhcmUsIHdpdGggb25lIGhhbGYgb2YgdGhlIGNhdmFscnkgaW4gZnJvbnQgYW5kIHRoZSBvdGhlciBoYWxmIGluIHRoZSByZWFyOyBidXQgZmluZGluZyBoaXMgcHJvZ3Jlc3MgaGFtcGVyZWQgYnkgVGhlc3NhbGlhbiBhdHRhY2tzIG9uIGhpcyByZWFyZ3VhcmQsIGhlIHNlbnQgcm91bmQgYWxsIHRoZSBjYXZhbHJ5IGZyb20gdGhlIHZhbmd1YXJkIHRvIHRoZSByZWFyLCBleGNlcHQgaGlzIG93biBlc2NvcnQuCjwvdHJhbnNsYXRpb24+"
translation['2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlIHR3byBmb3JjZXMgZmFjZWQgb25lIGFub3RoZXIgaW4gbGluZSBvZiBiYXR0bGUsIHRoZSBUaGVzc2FsaWFucywgYmVsaWV2aW5nIGl0IGluZXhwZWRpZW50IHRvIGVuZ2FnZSBoZWF2eSBpbmZhbnRyeSB3aXRoIGNhdmFscnksIHdoZWVsZWQgcm91bmQgYW5kIHNsb3dseSByZXRpcmVkLCB0aGVpciBlbmVteSBmb2xsb3dpbmcgdmVyeSBjYXV0aW91c2x5LiBBZ2VzaWxhdXMsIG5vdGljaW5nIHRoZSBlcnJvcnMgaW50byB3aGljaCBib3RoIHNpZGVzIHdlcmUgZmFsbGluZywgbm93IHNlbnQgcm91bmQgaGlzIG93biBlc2NvcnQgb2Ygc3RhbHdhcnQgaG9yc2VtZW4sIHdpdGggb3JkZXJzIHRvIGJpZCB0aGUgb3RoZXJzIHRvIGNoYXJnZSBhdCBmdWxsIHNwZWVkLCBhbmQgdG8gZG8gdGhlIHNhbWUgdGhlbXNlbHZlcywgICBhbmQgbm90IHRvIGdpdmUgdGhlIGVuZW15IGEgY2hhbmNlIG9mIHJhbGx5aW5nLiBBcyBmb3IgdGhlIFRoZXNzYWxpYW5zLCBvbiBzZWVpbmcgdGhlIHVuZXhwZWN0ZWQgY2hhcmdlIHRoZXkgZWl0aGVyIGRpZCBub3QgcmFsbHkgYXQgYWxsLCBvciB3ZXJlIGNhcHR1cmVkIGluIHRoZSBhdHRlbXB0IHRvIGRvIHNvIHdpdGggdGhlaXIgaG9yc2VzIGJyb2Fkc2lkZSB0byB0aGUgZW5lbXkuCjwvdHJhbnNsYXRpb24+"
translation['2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlBvbHljaGFybXVzIHRoZSBQaGFyc2FsaWFuLCBjb21tYW5kZXIgb2YgdGhlIGNhdmFscnksIGRpZCBpbmRlZWQgdHVybiwgYW5kIGZlbGwgZmlnaHRpbmcgYWxvbmcgd2l0aCB0aG9zZSBhYm91dCBoaW0uIEhlcmV1cG9uIGVuc3VlZCBhIHdpbGQgZmxpZ2h0LCBzbyB0aGF0IHNvbWUgb2YgdGhlIGVuZW15IHdlcmUga2lsbGVkIGFuZCBzb21lIHdlcmUgdGFrZW4gcHJpc29uZXJzOiBhdCBhbnkgcmF0ZSB0aGV5IG5ldmVyIGhhbHRlZCB1bnRpbCB0aGV5IHJlYWNoZWQgTXQuIE5hcnRoYWNpdW0uCjwvdHJhbnNsYXRpb24+"
translation['2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoYXQgZGF5IEFnZXNpbGF1cyBzZXQgdXAgYSB0cm9waHkgYmV0d2VlbiBQcmFzIGFuZCBOYXJ0aGFjaXVtLCBhbmQgaGVyZSBmb3IgdGhlIG1vbWVudCBoZSBwYXVzZWQsIG1pZ2h0aWx5IHBsZWFzZWQgd2l0aCBoaXMgZXhwbG9pdCwgc2luY2UgaGUgaGFkIGRlZmVhdGVkIGFuIGVuZW15IGlub3JkaW5hdGVseSBwcm91ZCBvZiBoaXMgaG9yc2VtYW5zaGlwIHdpdGggdGhlIGNhdmFscnkgdGhhdCBoZSBoYWQgaGltc2VsZiBjcmVhdGVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbiB0aGUgbW9ycm93IGhlIGNyb3NzZWQgdGhlIEFjaGFlYW4gbW91bnRhaW5zIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGh0aGlhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQaHRoaWEiPlBodGhpYTwvcGxhY2VOYW1lPiwgYW5kIG5vdyBoaXMgcm91dGUgbGVkIGhpbSB0aHJvdWdoIGZyaWVuZGx5IGNvdW50cnkgdGlsbCBoZSByZWFjaGVkIHRoZSBib3JkZXJzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjgzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2ODMiPkJvZW90aWE8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkhlcmUgaGUgZm91bmQgYXJyYXllZCBhZ2FpbnN0IGhpbSB0aGUgVGhlYmFucywgQXRoZW5pYW5zLCBBcmdpdmVzLCBDb3JpbnRoaWFucywgQWVuaWFuaWFucywgRXVib2VhbnMsIGFuZCBib3RoIHRoZSBMb2NyaWFuIHRyaWJlcy4gV2l0aG91dCBhIG1vbWVudCdzIGRlbGF5LCBpbiBmdWxsIHZpZXcgb2YgdGhlIGVuZW15LCBoZSBkcmV3IHVwIGhpcyBhcm15IGZvciBiYXR0bGUuIEluIGFkZGl0aW9uIHRvIHRoZSBhcm15IHRoYXQgaGUgaGFkIGJyb3VnaHQgd2l0aCBoaW0gaGUgaGFkIGEgcmVnaW1lbnQgYW5kIGEgaGFsZiBvZiBMYWNlZGFlbW9uaWFucywgYW5kIG9mIHRoZSBsb2NhbCBhbGxpZXMgb25seSB0aGUgUGhvY2lhbnMgYW5kIE9yY2hvbWVuaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk5vdyBJIGFtIG5vdCBnb2luZyB0byBzYXkgdGhhdCBoaXMgZm9yY2VzIHdlcmUgZmFyIGluZmVyaW9yIGluIG51bWJlcnMgYW5kIGluIHF1YWxpdHksIGFuZCB0aGF0IG5ldmVydGhlbGVzcyBoZSBhY2NlcHRlZCBiYXR0bGUuIFRoYXQgc3RhdGVtZW50LCBJIHRoaW5rLCB3b3VsZCBidXQgc2hvdyBhIHdhbnQgb2YgY29tbW9uIHNlbnNlIGluIEFnZXNpbGF1cyBhbmQgbXkgb3duIGZvbGx5IGluIHByYWlzaW5nIGEgbGVhZGVyIHdobyB3YW50b25seSBqZW9wYXJkaXNlZCBpbnRlcmVzdHMgb2Ygdml0YWwgbW9tZW50LiBPbiB0aGUgY29udHJhcnkg4oCUIGFuZCB0aGlzIGlzIHdoYXQgSSBkbyBhZG1pcmUgaGltIGZvciDigJQgaGUgYnJvdWdodCBpbnRvICAgdGhlIGZpZWxkIGFuIGFybXkgbm90IGEgd2hpdCBpbmZlcmlvciB0byB0aGUgZW5lbXknczsgaGUgc28gYXJtZWQgaXQgdGhhdCBpdCBsb29rZWQgb25lIHNvbGlkIG1hc3Mgb2YgYnJvbnplIGFuZCBzY2FybGV0OyBoZSB0b29rIGNhcmUgdG8gcmVuZGVyIGhpcyBtZW4KPC90cmFuc2xhdGlvbj4="
translation['2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPmNhcGFibGUgb2YgbWVldGluZyBhbGwgY2FsbHMgb24gdGhlaXIgZW5kdXJhbmNlOyBoZSBmaWxsZWQgdGhlaXIgaGVhcnRzIHdpdGggY29uZmlkZW5jZSB0aGF0IHRoZXkgd2VyZSBhYmxlIHRvIHdpdGhzdGFuZCBhbnkgYW5kIGV2ZXJ5IGVuZW15OyBoZSBpbnNwaXJlZCB0aGVtIGFsbCB3aXRoIGFuIGVhZ2VyIGRldGVybWluYXRpb24gdG8gb3V0LWRvIG9uZSBhbm90aGVyIGluIHZhbG91cjsgYW5kIGxhc3RseSBoZSBmaWxsZWQgYWxsIHdpdGggYW50aWNpcGF0aW9uIHRoYXQgbWFueSBnb29kIHRoaW5ncyB3b3VsZCBiZWZhbGwgdGhlbSwgaWYgb25seSB0aGV5IHByb3ZlZCBnb29kIG1lbi4gRm9yIGhlIGJlbGlldmVkIHRoYXQgbWVuIHNvIHByZXBhcmVkIGZpZ2h0IHdpdGggYWxsIHRoZWlyIG1pZ2h0OyBub3IgaW4gcG9pbnQgb2YgZmFjdCBkaWQgaGUgZGVjZWl2ZSBoaW1zZWxmLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHdpbGwgZGVzY3JpYmUgdGhlIGJhdHRsZSwgZm9yIHRoZXJlIGhhcyBiZWVuIG5vbmUgbGlrZSBpdCBpbiBvdXIgdGltZS4gVGhlIHR3byBhcm1pZXMgbWV0IGluIHRoZSBwbGFpbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTIzNSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMjM1Ij5Db3JvbmVhPC9wbGFjZU5hbWU+LCBBZ2VzaWxhdXMgYWR2YW5jaW5nIGZyb20gdGhlIENlcGhpc3VzLCB0aGUgVGhlYmFucyBhbmQgdGhlaXIgYWxsaWVzIGZyb20gSGVsaWNvbi4gVGhlaXIgZXllcyB0b2xkIHRoZW0gdGhhdCB0aGUgb3Bwb3NpbmcgbGluZXMgb2YgYmF0dGxlIHdlcmUgZXhhY3RseSBtYXRjaGVkIGluIHN0cmVuZ3RoLCBhbmQgdGhlIG51bWJlciBvZiBjYXZhbHJ5IG9uIGJvdGggc2lkZXMgd2FzIGFib3V0IHRoZSBzYW1lLiBBZ2VzaWxhdXMgd2FzIG9uIHRoZSByaWdodCB3aW5nIG9mIGhpcyBhcm15IGFuZCBoYWQgdGhlIE9yY2hvbWVuaWFucyBvbiBoaXMgZXh0cmVtZSBsZWZ0LiBPbiB0aGUgb3RoZXIgc2lkZSB0aGUgVGhlYmFucyB0aGVtc2VsdmVzIHdlcmUgb24gdGhlIHJpZ2h0IHdpbmcgYW5kIHRoZSBBcmdpdmVzIGhlbGQgdGhlIGxlZnQuCjwvdHJhbnNsYXRpb24+"
translation['2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyB0aGV5IGFwcHJvYWNoZWQgYm90aCBzaWRlcyBmb3IgYSB0aW1lIG1haW50YWluZWQgY29tcGxldGUgc2lsZW5jZSwgYnV0IHdoZW4gdGhleSB3ZXJlIGFib3V0IGEgZnVybG9uZyBhcGFydCwgdGhlIFRoZWJhbnMgcmFpc2VkIHRoZSBiYXR0bGUtY3J5IGFuZCBydXNoZWQgZm9yd2FyZCBhdCB0aGUgZG91YmxlLiBUaGUgZGlzdGFuY2UgYmV0d2VlbiB0aGVtIHdhcyBzdGlsbCBhYm91dCBvbmUgaHVuZHJlZCB5YXJkcyB3aGVuIHRoZSBtZXJjZW5hcnkgdHJvb3BzIHVuZGVyIEhlcmlwcGlkYXMsIGNvbnNpc3Rpbmcgb2YgdGhlCjwvdHJhbnNsYXRpb24+"
translation['2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5tZW4gd2hvIGhhZCBnb25lIHdpdGggQWdlc2lsYXVzIGZyb20gaG9tZSBhbmQgc29tZSBvZiB0aGUgQ3lyZWlhbnMsIGRhc2hlZCBvdXQgaW4gdHVybiBmcm9tIHRoZWlyIG1haW4gYm9keSwgY2xvc2VseSBmb2xsb3dlZCBieSBJb25pYW5zLCBBZW9saWFucyBhbmQgICBIZWxsZXNwb250aW5lcy4gQWxsIHRoZXNlIHRvb2sgcGFydCBpbiB0aGUgZGFzaCwgYW5kIGNvbWluZyB3aXRoaW4gc3BlYXItdGhydXN0IHB1dCB0byBmbGlnaHQgdGhlIGZvcmNlIGluIGZyb250IG9mIHRoZW0uIEFzIGZvciB0aGUgQXJnaXZlcywgdGhleSBmbGVkIHRvd2FyZHMgSGVsaWNvbiB3aXRob3V0IGF3YWl0aW5nIHRoZSBhdHRhY2sgb2YgQWdlc2lsYXVzLiBBbmQgbm93IHNvbWUgb2YgdGhlIG1lcmNlbmFyaWVzIHdlcmUgaW4gdGhlIGFjdCBvZiBjcm93bmluZyBBZ2VzaWxhdXMgd2l0aCBhIHdyZWF0aCwgd2hlbiBhIG1hbiByZXBvcnRlZCB0byBoaW0gdGhhdCB0aGUgVGhlYmFucyBoYWQgY3V0IHRoZWlyIHdheSB0aHJvdWdoIHRoZSBPcmNob21lbmlhbnMgYW5kIHdlcmUgYW1vbmcgdGhlIGJhZ2dhZ2UgdHJhaW4uIFNvIGhlIGltbWVkaWF0ZWx5IHdoZWVsZWQgaGlzIG1haW4gYm9keSBhbmQgYWR2YW5jZWQgYWdhaW5zdCB0aGVtOyBhbmQgdGhlIFRoZWJhbnMgaW4gdGhlaXIgdHVybiwgc2VlaW5nIHRoYXQgdGhlaXIgYWxsaWVzIGhhZCBzb3VnaHQgcmVmdWdlIGF0IHRoZSBmb290IG9mIE10LiBIZWxpY29uLCBhbmQgd2FudGluZyB0byBicmVhayB0aHJvdWdoIGFuZCBqb2luIHRoZWlyIGZyaWVuZHMsIG1hZGUgYSBzdHJvbmcgbW92ZSBmb3J3YXJkLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyBqdW5jdHVyZSBvbmUgbWF5IHNheSB3aXRob3V0IGZlYXIgb2YgY29udHJhZGljdGlvbiB0aGF0IEFnZXNpbGF1cyBzaG93ZWQgY291cmFnZTsgYnV0IHRoZSBjb3Vyc2UgdGhhdCBoZSBhZG9wdGVkIHdhcyBub3QgdGhlIHNhZmVzdC4gRm9yIGhlIG1pZ2h0IGhhdmUgYWxsb3dlZCB0aGUgbWVuIHdobyB3ZXJlIHRyeWluZyB0byBicmVhayB0aHJvdWdoIHRvIHBhc3MsIGFuZCB0aGVuIGhhdmUgZm9sbG93ZWQgdGhlbSBhbmQgYW5uaWhpbGF0ZWQgdGhvc2UgaW4gdGhlIHJlYXIuIEluc3RlYWQgb2YgZG9pbmcgdGhhdCBoZSBtYWRlIGEgZnVyaW91cyBmcm9udGFsIGF0dGFjayBvbiB0aGUgVGhlYmFucy4gVGhydXN0aW5nIHNoaWVsZCBhZ2FpbnN0IHNoaWVsZCwgdGhleSBzaG92ZWQgYW5kIGZvdWdodCBhbmQga2lsbGVkIGFuZCBmZWxsLiBUaGVyZSB3YXMgbm8gc2hvdXRpbmcsIG5vciB3YXMgdGhlcmUgc2lsZW5jZSwgYnV0IHRoZSBzdHJhbmdlIG5vaXNlIHRoYXQgd3JhdGggYW5kIGJhdHRsZSB0b2dldGhlciB3aWxsIHByb2R1Y2UuIEluIHRoZSBlbmQgc29tZSBvZiB0aGUgVGhlYmFucyBicm9rZSB0aHJvdWdoIGFuZCByZWFjaGVkIEhlbGljb24sIGJ1dCBtYW55IGZlbGwgZHVyaW5nIHRoZSByZXRyZWF0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHZpY3RvcnkgbGF5IHdpdGggQWdlc2lsYXVzOyBidXQgaGUgaGltc2VsZiBoYWQgYmVlbiBjYXJyaWVkIHdvdW5kZWQgdG8gaGlzIGJhdHRsZS1saW5lLCB3aGVuIHNvbWUgaG9yc2VtZW4gcm9kZSB1cCwgYW5kIHRvbGQgaGltIHRoYXQgZWlnaHR5IG9mIHRoZSBlbmVteSByZXRhaW5pbmcgdGhlaXIgYXJtcyBoYWQgdGFrZW4gY292ZXIgaW4gdGhlIHRlbXBsZSwgYW5kIHRoZXkgYXNrZWQgd2hhdCB0aGV5IHNob3VsZCBkby4gVGhvdWdoIHdvdW5kZWQgaW4gZXZlcnkgcGFydCBvZiBoaXMgYm9keSB3aXRoIGV2ZXJ5IHNvcnQgb2Ygd2VhcG9uLCBoZSBkaWQgbm90ICAgZm9yZ2V0IGhpcyBkdXR5IHRvd2FyZHMgdGhlIGdvZHMsIGJ1dCBnYXZlIG9yZGVycyB0aGF0IHRoZXNlIG1lbiBzaG91bGQgYmUgc3VmZmVyZWQgdG8gZ28gd2hpdGhlcnNvZXZlciB0aGV5IHdpc2hlZCwgYW5kIHdvdWxkIG5vdCBzdWZmZXIgdGhlbSB0byBiZSBoYXJtZWQsIGFuZCBjaGFyZ2VkIGhpcyBlc2NvcnQgb2YgY2F2YWxyeSB0byBjb25kdWN0IHRoZW0gdG8gYSBwbGFjZSBvZiBzYWZldHkuCjwvdHJhbnNsYXRpb24+"
translation['2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHRoYXQgdGhlIGZpZ2h0aW5nIHdhcyBhdCBhbiBlbmQsIGEgd2VpcmQgc3BlY3RhY2xlIG1ldCB0aGUgZXllLCBhcyBvbmUgc3VydmV5ZWQgdGhlIHNjZW5lIG9mIHRoZSBjb25mbGljdCDigJQgdGhlIGVhcnRoIHN0YWluZWQgd2l0aCBibG9vZCwgZnJpZW5kIGFuZCBmb2UgbHlpbmcgZGVhZCBzaWRlIGJ5IHNpZGUsIHNoaWVsZHMgc21hc2hlZCB0byBwaWVjZXMsIHNwZWFycyBzbmFwcGVkIGluIHR3bywgZGFnZ2VycyBiYXJlZCBvZiB0aGVpciBzaGVhdGhzLCBzb21lIG9uIHRoZSBncm91bmQsIHNvbWUgZW1iZWRkZWQgaW4gdGhlIGJvZGllcywgc29tZSB5ZXQgZ3JpcHBlZCBieSB0aGUgaGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuLCBhcyB0aGUgZGF5IHdhcyBmYXIgc3BlbnQsIGhhdmluZyBkcmFnZ2VkIHRoZSBlbmVteSdzIGRlYWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SW4gb3JkZXIgdGhhdCB0aGUgVGhlYmFucyBtaWdodCBub3QgcmVjb3ZlciB0aGVtLiBCdXQgc29tZSB0aGluayA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG/ts69IM+Azr/Ou861zrzhvbfPic69PC9mb3JlaWduPiBjb3JydXB0Ljwvbm90ZT4gd2l0aGluIHRoZWlyIGJhdHRsZSBsaW5lLCB0aGV5IHN1cHBlZCBhbmQgc2xlcHQuIEVhcmx5IG5leHQgbW9ybmluZyBBZ2VzaWxhdXMgb3JkZXJlZCBHeWxpcywgdGhlIHBvbGVtYXJjaCwgdG8gZHJhdyB1cCB0aGUgYXJteSBpbiBiYXR0bGUgb3JkZXIgYW5kIHRvIHNldCB1cCBhIHRyb3BoeSwgYW5kIHRvIGNvbW1hbmQgZXZlcnkgbWFuIHRvIHdlYXIgYSB3cmVhdGggaW4gaG9ub3VyIG9mIHRoZSBnb2Q8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG/ts69IM+Azr/Ou861zrzhvbfPic69PC9mb3JlaWduPiBjb3JydXB0Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BcG9sbG8uPC9ub3RlPiBhbmQgYWxsIHRoZSBmbHV0ZS1wbGF5ZXJzIHRvIHBsYXkuCjwvdHJhbnNsYXRpb24+"
translation['2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoaWxlIHRoZXkgd2VyZSBjYXJyeWluZyBvdXQgdGhlc2Ugb3JkZXJzIHRoZSBUaGViYW5zIHNlbnQgYSBoZXJhbGQsIGFza2luZyBsZWF2ZSB0byBidXJ5IHRoZWlyIGRlYWQgdW5kZXIgcHJvdGVjdGlvbiBvZiBhIHRydWNlLiBBbmQgc28gYSB0cnVjZSB3YXMgbWFkZSwgYW5kIEFnZXNpbGF1cyBsZWZ0IGZvciBob21lLCBjaG9vc2luZywgaW5zdGVhZCBvZiBzdXByZW1lIHBvd2VyIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwMDQiPkFzaWE8L3BsYWNlTmFtZT4sIHRvIHJ1bGUgYW5kIHRvIGJlIHJ1bGVkIGF0IGhvbWUgYWNjb3JkaW5nIHRvIHRoZSBjb25zdGl0dXRpb24uCjwvdHJhbnNsYXRpb24+"
translation['2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U29tZSB0aW1lIGFmdGVyd2FyZHMsIGZpbmRpbmcgdGhhdCB0aGUgQXJnaXZlcyB3ZXJlIGVuam95aW5nIHRoZSBmcnVpdHMgb2YgdGhlaXIgbGFuZCwgdGhhdCB0aGV5IGhhZCBhcHByb3ByaWF0ZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb3JpbnRoIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDb3JpbnRoIj5Db3JpbnRoPC9wbGFjZU5hbWU+IGFuZCB3ZXJlIGZpbmRpbmcgdGhlIHdhciBhIHBsZWFzYW50IG9jY3VwYXRpb24sIGhlIG1hZGUgYW4gZXhwZWRpdGlvbiBhZ2FpbnN0IHRoZW0uIEhlIGZpcnN0IGxhaWQgd2FzdGUgYWxsIHRoZWlyIHRlcnJpdG9yeSwgdGhlbiAgIGNyb3NzZWQgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb3JpbnRoIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDb3JpbnRoIj5Db3JpbnRoPC9wbGFjZU5hbWU+IGJ5IHRoZSBwYXNzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBNU1MuIG9mIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gNC40LjE5IiB2YWxpZD0ieWVzIj5YZW4uIEhlbGwuIDQuNC4xOTwvYmlibD4gZ2l2ZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6xz4ThvbAgzqTOtc6z4b2zzrHOvTwvZm9yZWlnbj4gaW4gdGhlIGNvcnJlc3BvbmRpbmcgcGFzc2FnZTsgdGhpcyBpcyBjb3JyZWN0ZWQgdG8gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOsc+E4b2wIM6kzrXOveG9s86xzr08L2ZvcmVpZ24+IOKAnGJ5IHdheSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRlbmVhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUZW5lYSI+VGVuZWE8L3BsYWNlTmFtZT4s4oCdIHdoaWNoIGlzIHByb2JhYmx5IHRoZSByaWdodCByZWFkaW5nIGhlcmUuPC9ub3RlPiBhbmQgY2FwdHVyZWQgdGhlIHdhbGxzIGxlYWRpbmcgdG8gTGVjaGFldW0uIEhhdmluZyB0aHVzIHVuYmFycmVkIHRoZSBnYXRlcyBvZiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEhlbGwuIDQuNC4xOSIgdmFsaWQ9InllcyI+WGVuLiBIZWxsLiA0LjQuMTk8L2JpYmw+IGdpdmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOsc+E4b2wIM6kzrXOs+G9s86xzr08L2ZvcmVpZ24+IGluIHRoZSBjb3JyZXNwb25kaW5nIHBhc3NhZ2U7IHRoaXMgaXMgY29ycmVjdGVkIHRvIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs66zrHPhOG9sCDOpM61zr3hvbPOsc69PC9mb3JlaWduPiDigJxieSB3YXkgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUZW5lYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGVuZWEiPlRlbmVhPC9wbGFjZU5hbWU+LOKAnSB3aGljaCBpcyBwcm9iYWJseSB0aGUgcmlnaHQgcmVhZGluZyBoZXJlLjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE3MDc2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTcwNzYiPlBlbG9wb25uZXNlPC9wbGFjZU5hbWU+LCBoZSByZXR1cm5lZCBob21lIGZvciB0aGUgZmVzdGl2YWwgb2YgSHlhY2ludGh1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DZWxlYnJhdGVkIGFubnVhbGx5IGF0IEFteWNsYWUsIGVhcmx5IGluIHRoZSBzdW1tZXIuPC9ub3RlPiBhbmQgam9pbmVkIGluIHNpbmdpbmcgdGhlIHBhZWFuIGluIGhvbm91ciBvZiB0aGUgZ29kLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BcG9sbG8sIHdobyBoYWQgYWNjaWRlbnRhbGx5IGtpbGxlZCBIeWFjaW50aHVzLjwvbm90ZT4gdGFraW5nIHRoZSBwbGFjZSBhc3NpZ25lZCB0byBoaW0gYnkgdGhlIGNob2lybWFzdGVyLgogICAgPC90cmFuc2xhdGlvbj4="
translation['2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgYSB0aW1lLCBkaXNjb3ZlcmluZyB0aGF0IHRoZSBDb3JpbnRoaWFucyB3ZXJlIGtlZXBpbmcgYWxsIHRoZWlyIGNhdHRsZSBzYWZlIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGVyYWNob3JhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQZXJhY2hvcmEiPlBlaXJhZXVtPC9wbGFjZU5hbWU+LCBhbmQgc293aW5nIGFuZCByZWFwaW5nIHRoZSBjcm9wcyB0aHJvdWdob3V0IHRoYXQgZGlzdHJpY3QsIGFuZCDigJQgd2hhdCBoZSB0aG91Z2h0IG1vc3Qgc2VyaW91cyDigJQgdGhhdCB0aGUgQm9lb3RpYW5zIHdlcmUgZmluZGluZyB0aGlzIHJvdXRlIGNvbnZlbmllbnQgZm9yIHNlbmRpbmcgc3VwcG9ydCB0byB0aGUgQ29yaW50aGlhbnMsIHdpdGggQ3JldXNpcyBhcyB0aGVpciBiYXNlLCBoZSBtYXJjaGVkIGFnYWluc3QgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxQZXJhY2hvcmEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFBlcmFjaG9yYSI+UGVpcmFldW08L3BsYWNlTmFtZT4uIFNlZWluZyB0aGF0IGl0IHdhcyBzdHJvbmdseSBndWFyZGVkLCBoZSBtb3ZlZCBoaXMgY2FtcCBhZnRlciB0aGUgbW9ybmluZyBtZWFsIHRvIGEgcG9zaXRpb24gYmVmb3JlIHRoZSBjYXBpdGFsLCBhcyB0aG91Z2ggdGhlIGNpdHkgd2FzIGFib3V0IHRvIHN1cnJlbmRlci4KICAgIDwvdHJhbnNsYXRpb24+"
translation['2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgYmVjb21pbmcgYXdhcmUgdGhhdCBzdXBwb3J0cyBoYWQgYmVlbiBodXJyaWVkbHkgcG91cmVkIGludG8gdGhlIGNpdHkgZHVyaW5nIHRoZSBuaWdodCBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGVyYWNob3JhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQZXJhY2hvcmEiPlBlaXJhZXVtPC9wbGFjZU5hbWU+LCBoZSB0dXJuZWQgYWJvdXQgYXQgZGF5YnJlYWsgYW5kIGNhcHR1cmVkIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGVyYWNob3JhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQZXJhY2hvcmEiPlBlaXJhZXVtPC9wbGFjZU5hbWU+LCBmaW5kaW5nIGl0IHVuZGVmZW5kZWQsIGFuZCBldmVyeXRoaW5nIGluIGl0LCBhbG9uZyB3aXRoIHRoZSBmb3J0cmVzc2VzIHRoYXQgc3Rvb2QgdGhlcmUsIGZlbGwgaW50byBoaXMgaGFuZHMuIEhhdmluZyBkb25lIHRoaXMsIGhlIHJldHVybmVkIGhvbWUuCjwvdHJhbnNsYXRpb24+"
translation['2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhlc2UgZXZlbnRzLCB0aGUgQWNoYWVhbnMsIHdobyB3ZXJlIHplYWxvdXMgYWR2b2NhdGVzIG9mIHRoZSBhbGxpYW5jZSwgYmVnZ2VkIGhpbSB0byBqb2luIHRoZW0gaW4gYW4gZXhwZWRpdGlvbiBhZ2FpbnN0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjc5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzkiPkFjYXJuYW5pYTwvcGxhY2VOYW1lPjxnYXAgY2xhc3M9InRyYW5zbGF0aW9uIiAvPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U29tZXRoaW5nIHNlZW1zIHRvIGJlIGxvc3QgaGVyZSwgcHJvYmFibHkgYSBwYXNzYWdlIHRoYXQgZW5kZWQgd2l0aCB0aGUgd29yZHMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PPhc+Dz4TPgc6xz4TOteG9u861zrkgzrHhvZDPhM6/4b+Wz4IgzrXhvLDPgiDhvIjOus6xz4HOvc6xzr3hvbfOsc69LjwvZm9yZWlnbj48L25vdGU+IEFuZCB3aGVuIHRoZSBBY2FybmFuaWFucyBhdHRhY2tlZCBoaW0gaW4gYSBtb3VudGFpbiBwYXNzIGhlIHNlaXplZCB0aGUgaGVpZ2h0cyBhYm92ZSB0aGVpciBoZWFkcyB3aXRoIGhpcyBsaWdodCBpbmZhbnRyeSw8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg8+Fz4PPhM+BzrHPhM614b27zrXOuSDOseG9kM+Ezr/hv5bPgiDOteG8sM+CIOG8iM66zrHPgc69zrHOveG9t86xzr0uPC9mb3JlaWduPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgd29yZHMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4TOv+G/ls+CIM+IzrnOu86/4b+Wz4I8L2ZvcmVpZ24+IGFyZSBwcm9iYWJseSBhIGNvcnJlY3Rpb24gYnkgWC47IGhlIHNheXMgdGhlIGhlaWdodHMgd2VyZSB0YWtlbiBieSB0aGUgaGVhdnkgaW5mYW50cnkgaW4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiA0LjYuMTEiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gNC42LjExPC9iaWJsPi48L25vdGU+IGZvdWdodCBhbiBlbmdhZ2VtZW50IGFuZCwgYWZ0ZXIgaW5mbGljdGluZyAgIHNldmVyZSBsb3NzZXMgb24gdGhlbSwgc2V0IHVwIGEgdHJvcGh5OyBub3IgZGlkIGhlIGNlYXNlIHVudGlsIGhlIGhhZCBpbmR1Y2VkIHRoZSBBY2FybmFuaWFucywgQWV0b2xpYW5zIGFuZCBBcmdpdmVzIHRvIGVudGVyIGludG8gZnJpZW5kc2hpcCB3aXRoIHRoZSBBY2hhZWFucyBhbmQgYWxsaWFuY2Ugd2l0aCBoaW1zZWxmLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM6/4b+Wz4Igz4jOuc67zr/hv5bPgjwvZm9yZWlnbj4gYXJlIHByb2JhYmx5IGEgY29ycmVjdGlvbiBieSBYLjsgaGUgc2F5cyB0aGUgaGVpZ2h0cyB3ZXJlIHRha2VuIGJ5IHRoZSBoZWF2eSBpbmZhbnRyeSBpbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEhlbGwuIDQuNi4xMSIgdmFsaWQ9InllcyI+WGVuLiBIZWxsLiA0LjYuMTE8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iY29tIj5QZWFjZSBvZiBBbnRhbGNpZGFzLjwvbm90ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODciPjM4NzwvZGF0ZT4gQi5DLjwvbm90ZT48ZGF0ZSBhdXRobmFtZT0iLTM4NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4NyI+Mzg3PC9kYXRlPiBCLkMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldoZW4gdGhlIGVuZW15IHNlbnQgZW1iYXNzaWVzIGRlc2lyaW5nIHBlYWNlLCBBZ2VzaWxhdXMgb3Bwb3NlZCB0aGUgcGVhY2UgdW50aWwgaGUgZm9yY2VkIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ29yaW50aCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ29yaW50aCI+Q29yaW50aDwvcGxhY2VOYW1lPiBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUaGViZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRoZWJlcyI+VGhlYmVzPC9wbGFjZU5hbWU+IHRvIHJlc3RvcmUgdG8gdGhlaXIgaG9tZXMgdGhlIGNpdGl6ZW5zIHdobyBoYWQgYmVlbiBleGlsZWQgb24gYWNjb3VudCBvZiB0aGVpciBzeW1wYXRoeTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4MSI+MzgxPC9kYXRlPiBCLkMuPC9ub3RlPiB3aXRoIHRoZSBMYWNlZGFlbW9uaWFucy4gQW5kIGFnYWluIGxhdGVyLCBoYXZpbmcgbGVkIGFuIGV4cGVkaXRpb24gaW4gcGVyc29uIGFnYWluc3QgUGhsZWl1cywgaGUgYWxzbyByZXN0b3JlZCB0aGUgUGhsZWlhc2lhbiBleGlsZXMgd2hvIGhhZCBzdWZmZXJlZCBpbiB0aGUgc2FtZSBjYXVzZS4gUG9zc2libHkgc29tZSBtYXkgY2Vuc3VyZSB0aGVzZSBhY3Rpb25zIG9uIG90aGVyIGdyb3VuZHMsIGJ1dCBhdCBsZWFzdCBpdCBpcyBvYnZpb3VzIHRoYXQgdGhleSB3ZXJlIHByb21wdGVkIGJ5IGEgc3Bpcml0IG9mIHRydWUgY29tcmFkZXNoaXAuCjxkYXRlIGF1dGhuYW1lPSItMzgxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgxIj4zODE8L2RhdGU+IEIuQy48L3RyYW5zbGF0aW9uPg=="
translation['2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgaW4gdGhlIHNhbWUgc3Bpcml0IHRoYXQgaGUgc3Vic2VxdWVudGx5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc3Ij4zNzc8L2RhdGU+IEIuQy48L25vdGU+IG1hZGUgYW4gZXhwZWRpdGlvbiBhZ2FpbnN0IDxkYXRlIGF1dGhuYW1lPSItMzc3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc3Ij4zNzc8L2RhdGU+IEIuQy48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZWJlcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGhlYmVzIj5UaGViZXM8L3BsYWNlTmFtZT4sIHRvIHJlbGlldmUgdGhlIExhY2VkYWVtb25pYW5zIGluIHRoYXQgY2l0eSB3aGVuIHRoZWlyIG9wcG9uZW50cyBoYWQgdGFrZW4gdG8gbXVyZGVyaW5nIHRoZW0uIEZpbmRpbmcgdGhlIGNpdHkgcHJvdGVjdGVkIG9uIGFsbCBzaWRlcyBieSBhIHRyZW5jaCBhbmQgc3RvY2thZGUsIGhlIGNyb3NzZWQgdGhlIFBhc3Mgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDE2MzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwMTYzMyI+Q3lub3NjZXBoYWxhZTwvcGxhY2VOYW1lPiwgYW5kIGxhaWQgd2FzdGUgdGhlIGNvdW50cnkgdXAgdG8gdGhlIGNpdHkgd2FsbHMsIG9mZmVyaW5nIGJhdHRsZSB0byB0aGUgVGhlYmFucyBib3RoIG9uIHRoZSBwbGFpbiBhbmQgb24gdGhlIGhpbGxzLCBpZiB0aGV5IGNob3NlIHRvIGZpZ2h0LiBJbiB0aGUgZm9sbG93aW5nIHllYXIgaGUgbWFkZSBhbm90aGVyIGV4cGVkaXRpb24gYWdhaW5zdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZWJlcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGhlYmVzIj5UaGViZXM8L3BsYWNlTmFtZT4sIGFuZCwgYWZ0ZXIgY3Jvc3NpbmcgdGhlIHN0b2NrYWRlIGFuZCB0cmVuY2hlcyBhdCBTY29sdXMsIGxhaWQgd2FzdGUgdGhlIHJlc3Qgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2ODMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjY4MyI+Qm9lb3RpYTwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXAgdG8gdGhpcyB0aW1lIGhlIGFuZCBoaXMgY2l0eSBlbmpveWVkIHVuYnJva2VuIHN1Y2Nlc3M7IGFuZCB0aG91Z2ggdGhlIGZvbGxvd2luZyB5ZWFycyBicm91Z2h0IGEgc2VyaWVzIG9mIHRyb3VibGVzLCBpdCBjYW5ub3QgYmUgc2FpZCB0aGF0IHRoZXkgd2VyZSBpbmN1cnJlZCB1bmRlciB0aGUgbGVhZGVyc2hpcCBvZiBBZ2VzaWxhdXMuIE9uIHRoZSBvdGhlciBoYW5kLCBhZnRlciB0aGUgZGlzYXN0ZXIgYXQgTGV1Y3RyYSwgd2hlbiBoaXMgYWR2ZXJzYXJpZXMgaW4gbGVhZ3VlIHdpdGggdGhlIE1hbnRpbmVhbnMgd2VyZSBtdXJkZXJpbmcgaGlzIGZyaWVuZHMgYW5kIGFjcXVhaW50YW5jZXMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUZWdlYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGVnZWEiPlRlZ2VhPC9wbGFjZU5hbWU+LCBhbmQgYSBjb2FsaXRpb24gb2YgYWxsIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjgzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2ODMiPkJvZW90aWE8L3BsYWNlTmFtZT4sIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNzM1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI3MzUiPkFyY2FkaWE8L3BsYWNlTmFtZT4gYW5kIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRWxpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRWxpcyI+RWxpczwvcGxhY2VOYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwPC9kYXRlPiBCLkMuPC9ub3RlPiBoYWQgYmVlbiBmb3JtZWQsIGhlIHRvb2sgdGhlIGZpZWxkIHdpdGggdGhlIExhY2VkYWVtb25pYW4gZm9yY2VzIG9ubHksIHRodXMgZGlzYXBwb2ludGluZyB0aGUgZ2VuZXJhbCBleHBlY3RhdGlvbiB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyB3b3VsZCBub3QgZXZlbiBnbyBvdXRzaWRlIHRoZWlyIG93biBib3JkZXJzIGZvciBhIGxvbmcgdGltZSB0byBjb21lLiBJdCB3YXMgbm90IHVudGlsIGhlIGhhZCBsYWlkIHdhc3RlIHRoZSBjb3VudHJ5IG9mIHRob3NlIHdobyBoYWQgbXVyZGVyZWQgaGlzIGZyaWVuZHMgdGhhdCBoZSByZXR1cm5lZCBob21lIG9uY2UgbW9yZS4KPGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MDwvZGF0ZT4gQi5DLjwvdHJhbnNsYXRpb24+"
translation['2.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gd2FzIGF0dGFja2VkIGJ5IGFsbCB0aGUgQXJjYWRpYW5zLCBBcmdpdmVzLCBFbGVpYW5zIGFuZCBCb2VvdGlhbnMsIHdobyBoYWQgdGhlIHN1cHBvcnQgb2YgdGhlIFBob2NpYW5zLCBib3RoIHRoZSBMb2NyaWFuIHBlb3BsZXMsIHRoZSBUaGVzc2FsaWFucywgQWVuaWFuaWFucywgQWNhcm5hbmlhbnMgYW5kIEV1Ym9lYW5zLiBJbiBhZGRpdGlvbiB0aGUgc2xhdmVzIGFuZCBtYW55IG9mIHRoZSBvdXRsYW5kZXIgY29tbXVuaXRpZXMgd2VyZSBpbiByZXZvbHQsIGFuZCBhdCBsZWFzdCBhcyBtYW55IG9mIHRoZSBTcGFydGFuIG5vYmxlcyBoYWQgZmFsbGVuIGluIHRoZSBiYXR0bGUgb2YgTGV1Y3RyYSBhcyBzdXJ2aXZlZC4gSGUga2VwdCB0aGUgY2l0eSBzYWZlIG5vdHdpdGhzdGFuZGluZywgYW5kIHRoYXQgdGhvdWdoIGl0IHdhcyB3aXRob3V0IHdhbGxzLCBub3QgZ29pbmcgb3V0IGludG8gdGhlIG9wZW4gd2hlcmUgdGhlIGFkdmFudGFnZSB3b3VsZCBoYXZlIGxhaW4gd2hvbGx5IHdpdGggdGhlIGVuZW15LCBhbmQga2VlcGluZyBoaXMgYXJteSBzdHJvbmdseSBwb3N0ZWQgd2hlcmUgdGhlIGNpdGl6ZW5zIHdvdWxkIGhhdmUgdGhlIGFkdmFudGFnZTsgZm9yIGhlIGJlbGlldmVkIHRoYXQgaGUgd291bGQgYmUgc3Vycm91bmRlZCBvbiBhbGwgc2lkZXMgaWYgaGUgY2FtZSBvdXQgaW50byB0aGUgcGxhaW4sIGJ1dCB0aGF0IGlmIGhlIG1hZGUgYSBzdGFuZCBpbiB0aGUgZGVmaWxlcyBhbmQgdGhlIGhlaWdodHMsIGhlIHdvdWxkIGJlIG1hc3RlciBvZiB0aGUgc2l0dWF0aW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhlIHJldGlyZW1lbnQgb2YgdGhlIGVuZW15LCBub25lIHdpbGwgZGVueSB0aGF0IGhpcyBjb25kdWN0IHdhcyBtYXJrZWQgYnkgZ29vZCBzZW5zZS4gVGhlIG1hcmNoaW5nIGFuZCByaWRpbmcgaW5jaWRlbnRhbCB0byBhY3RpdmUgc2VydmljZSB3ZXJlIG5vIGxvbmdlciBwb3NzaWJsZSB0byBhIG1hbiBvZiBoaXMgeWVhcnMsIGJ1dCBoZSBzYXcgdGhhdCB0aGUgc3RhdGUgbXVzdCBoYXZlIG1vbmV5IGlmIHNoZSB3YXMgdG8gZ2FpbiBhbiBhbGx5IGFueXdoZXJlLiBTbyBoZSBhcHBsaWVkIGhpbXNlbGYgdG8gdGhlIGJ1c2luZXNzIG9mIHJhaXNpbmcgbW9uZXkuIEF0IGhvbWUgaGUgZGlkIGFsbCB0aGF0IGluZ2VudWl0eSBjb3VsZCBzdWdnZXN0OyBhbmQsIGlmIGhlIHNhdyBhbnkgcHJvc3BlY3Qgb2Ygc2VydmluZyB0aGUgc3RhdGUgYWJyb2FkLCBzaHJhbmsgZnJvbSBubyBtZWFzdXJlcyB0aGF0IGNpcmN1bXN0YW5jZXMgY2FsbGVkIGZvciwgYW5kIGhlIHdhcyBub3QgYXNoYW1lZCB0byBnbyBvdXQsIG5vdCBhcyBhIGdlbmVyYWwsIGJ1dCBhcyBhbiAgIGVudm95Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZXZlbiBhcyBhbiBlbnZveSBoZSBhY2NvbXBsaXNoZWQgd29yayB3b3J0aHkgb2YgYSBncmVhdCBnZW5lcmFsLiBGb3IgaW5zdGFuY2UsIEF1dG9waHJhZGF0ZXMgbGF5aW5nIHNpZWdlIHRvIEFyaW9iYXJ6YW5lcywgYW4gYWxseSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXNzb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFzc29zIj5Bc3NvczwvcGxhY2VOYW1lPiwgdG9vayB0byBoaXMgaGVlbHMgZnJvbSBmZWFyIG9mIEFnZXNpbGF1cy4gQ290eXMgZm9yIGhpcyBwYXJ0LCBiZXNpZWdpbmcgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTZXN0b3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNlc3RvcyI+U2VzdG9zPC9wbGFjZU5hbWU+LCB3aGlsZSBpdCB3YXMgc3RpbGwgaW4gdGhlIGhhbmRzIG9mIEFyaW9iYXJ6YW5lcywgYnJva2UgdXAgdGhlIHNpZWdlIGFuZCBtYWRlIG9mZi4gV2l0aCBnb29kIHJlYXNvbiwgdGhlcmVmb3JlLCBtaWdodCB0aGUgdmljdG9yaW91cyBlbnZveSBoYXZlIHNldCB1cCBhIHRyb3BoeSBvbmNlIGFnYWluIHRvIHJlY29yZCB0aGVzZSBibG9vZGxlc3Mgc3VjY2Vzc2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgTWF1c29sdXMsIGxheWluZyBzaWVnZSB0byBib3RoIHRoZXNlIHBsYWNlcyB3aXRoIGEgZmxlZXQgb2YgYSBodW5kcmVkIHZlc3NlbHMsIHdhcyBpbmR1Y2VkLCBub3QgaW5kZWVkIGJ5IGZlYXIsIGJ1dCBieSBwZXJzdWFzaW9uLCB0byBzYWlsIGZvciBob21lLiBJbiB0aGlzIGFmZmFpciB0b28gaGlzIHN1Y2Nlc3Mgd2FzIGFkbWlyYWJsZTsgZm9yIHRob3NlIHdobyBjb25zaWRlcmVkIHRoYXQgdGhleSB3ZXJlIHVuZGVyIGFuIG9ibGlnYXRpb24gdG8gaGltIGFuZCB0aG9zZSB3aG8gZmxlZCBiZWZvcmUgaGltLCBib3RoIHBhaWQuIFlldCBhZ2FpbiwgVGFjaG9zIGFuZCBNYXVzb2x1cyAoYW5vdGhlciBvZiB0aG9zZSB3aG8gY29udHJpYnV0ZWQgbW9uZXkgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LCBvd2luZyB0byBoaXMgb2xkIHRpZXMgb2YgaG9zcGl0YWxpdHkgd2l0aCBBZ2VzaWxhdXMpLCBzZW50IGhpbSBob21lIHdpdGggYSBtYWduaWZpY2VudCBlc2NvcnQuCjwvdHJhbnNsYXRpb24+"
translation['2.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3Vic2VxdWVudGx5LCB3aGVuIGhlIHdhcyBub3cgYWJvdXQgZWlnaHR5IHllYXJzIG9mIGFnZSwgaGUgYmVjYW1lIGF3YXJlIHRoYXQgdGhlIGtpbmcgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjgzMyI+RWd5cHQ8L3BsYWNlTmFtZT4gd2FzIGJlbnQgb24gd2FyIHdpdGggPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDAyMzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMDIzMSI+UGVyc2lhPC9wbGFjZU5hbWU+LCBhbmQgd2FzIHBvc3Nlc3NlZCBvZiBsYXJnZSBmb3JjZXMgb2YgaW5mYW50cnkgYW5kIGNhdmFscnkgYW5kIHBsZW50eSBvZiBtb25leS4gSGUgd2FzIGRlbGlnaHRlZCB3aGVuIGEgc3VtbW9ucyBmb3IgaGVscCByZWFjaGVkIGhpbSBmcm9tIHRoZSBFZ3lwdGlhbiBraW5nLCB3aG8gYWN0dWFsbHkgcHJvbWlzZWQgaGltIHRoZSBjaGllZiBjb21tYW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaGUgYmVsaWV2ZWQgdGhhdCBhdCBvbmUgc3Ryb2tlIGhlIHdvdWxkIHJlcGF5IHRoZSBFZ3lwdGlhbiBmb3IgaGlzIGdvb2Qgb2ZmaWNlcyB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIHdvdWxkIGFnYWluIHNldCBmcmVlIHRoZSBHcmVla3MgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPiwgYW5kIHdvdWxkIGNoYXN0aXNlIHRoZSBQZXJzaWFuIGZvciBoaXMgZm9ybWVyIGhvc3RpbGl0eSwgYW5kIGZvciBkZW1hbmRpbmcgbm93LCB3aGVuIGhlIHByb2Zlc3NlZCB0byBiZSBhbiBhbGx5IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiwgdGhhdCBoZXIgY2xhaW0gdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNZXNzZW5lIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNZXNzZW5lIj5NZXNzZW5lPC9wbGFjZU5hbWU+IHNob3VsZCBiZSBnaXZlbiB1cC4KPC90cmFuc2xhdGlvbj4="
translation['2.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5Ib3dldmVyLCB3aGVuIHRoaXMgc3VpdG9yIGZvciBoaXMgYXNzaXN0YW5jZSBmYWlsZWQgdG8gZ2l2ZSBoaW0gICB0aGUgY29tbWFuZCBBZ2VzaWxhdXMgZmVsdCB0aGF0IGhlIGhhZCBiZWVuIGdyb3NzbHkgZGVjZWl2ZWQsIGFuZCB3YXMgaW4gZG91YnQgd2hhdCBoZSBvdWdodCB0byBkby4gQXQgdGhpcyBqdW5jdHVyZSBmaXJzdCBhIHBvcnRpb24gb2YgdGhlIEVneXB0aWFuIHRyb29wcywgb3BlcmF0aW5nIGFzIGEgc2VwYXJhdGUgYXJteSwgcmV2b2x0ZWQgZnJvbSB0aGUga2luZywgYW5kIHRoZW4gdGhlIHJlc3Qgb2YgaGlzIGZvcmNlcyBkZXNlcnRlZCBoaW0uIFRoZSBraW5nIGxlZnQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjgzMyI+RWd5cHQ8L3BsYWNlTmFtZT4gYW5kIGZsZWQgaW4gdGVycm9yIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyODYxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI4NjEiPlNpZG9uPC9wbGFjZU5hbWU+IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw2MDA0Njg3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDYwMDQ2ODciPlBob2VuaWNpYTwvcGxhY2VOYW1lPiwgd2hpbGUgdGhlIEVneXB0aWFucyBzcGxpdCB1cCBpbnRvIHR3byBwYXJ0aWVzLCBhbmQgZWFjaCBjaG9zZSBpdHMgb3duIGtpbmcuCjwvdHJhbnNsYXRpb24+"
translation['2.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BZ2VzaWxhdXMgbm93IHJlYWxpc2VkIHRoYXQgaWYgaGUgaGVscGVkIG5laXRoZXIga2luZywgbmVpdGhlciBvZiB0aGVtIHdvdWxkIHBheSB0aGUgR3JlZWtzIHRoZWlyIHdhZ2VzLCBuZWl0aGVyIHdvdWxkIHByb3ZpZGUgYSBtYXJrZXQsIGFuZCB0aGUgY29ucXVlcm9yLCB3aGljaGV2ZXIgaGUgcHJvdmVkIHRvIGJlLCB3b3VsZCBiZSBob3N0aWxlLCBidXQgaWYgaGUgY28tb3BlcmF0ZWQgd2l0aCBvbmUgb2YgdGhlbSwgdGhhdCBvbmUsIGJlaW5nIHVuZGVyIGFuIG9ibGlnYXRpb24gdG8gaGltLCB3b3VsZCBpbiBhbGwgcHJvYmFiaWxpdHkgYWRvcHQgYSBmcmllbmRseSBhdHRpdHVkZS4gQWNjb3JkaW5nbHksIGhhdmluZyBkZWNpZGVkIHdoaWNoIG9mIHRoZW0gc2hvd2VkIHRoZSBzdHJvbmdlciBzaWducyBvZiBiZWluZyBhIGZyaWVuZCB0byB0aGUgR3JlZWtzLCBoZSB0b29rIHRoZSBmaWVsZCB3aXRoIGhpbS4gSGUgaW5mbGljdGVkIGEgY3J1c2hpbmcgZGVmZWF0IG9uIHRoZSBlbmVteSBvZiB0aGUgR3JlZWtzLCBhbmQgaGVscGVkIHRvIGVzdGFibGlzaCBoaXMgcml2YWw7IGFuZCBzbyBoYXZpbmcgbWFkZSBoaW0gdGhlIGZyaWVuZCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIGFuZCBoYXZpbmcgcmVjZWl2ZWQgYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MiI+MzYyPC9kYXRlPiBCLkMuPC9ub3RlPiBncmVhdCBzdW0gb2YgbW9uZXkgaW4gYWRkaXRpb24sIGhlIHNhaWxlZCBob21lLCB0aG91Z2ggaXQgd2FzIG1pZC13aW50ZXIsIHdpdGggYWxsIGhhc3RlLCBpbiBvcmRlciB0aGF0IHRoZSBzdGF0ZSBtaWdodCBiZSBpbiBhIHBvc2l0aW9uIHRvIHRha2UgYWN0aW9uIGFnYWluc3QgaGVyIGVuZW1pZXMgaW4gdGhlIGNvbWluZyBzdW1tZXIuCjxkYXRlIGF1dGhuYW1lPSItMzYyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzYyIj4zNjI8L2RhdGU+IEIuQy48L3RyYW5zbGF0aW9uPg=="
translation['3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoLCB0aGVuLCBpcyB0aGUgcmVjb3JkIG9mIG15IGhlcm8ncyBkZWVkcywgc28gZmFyIGFzIHRoZXkgd2VyZSBkb25lIGJlZm9yZSBhIGNyb3dkIG9mIHdpdG5lc3Nlcy4gQWN0aW9ucyBsaWtlIHRoZXNlIG5lZWQgbm8gcHJvb2ZzOyB0aGUgbWVyZSBtZW50aW9uIG9mIHRoZW0gaXMgZW5vdWdoIGFuZCB0aGV5IGNvbW1hbmQgYmVsaWVmIGltbWVkaWF0ZWx5LiBCdXQgbm93IEkgd2lsbCBhdHRlbXB0IHRvIHNob3cgdGhlIHZpcnR1ZSB0aGF0IHdhcyBpbiBoaXMgc291bCwgdGhlIHZpcnR1ZSB0aHJvdWdoIHdoaWNoIGhlIHdyb3VnaHQgdGhvc2UgZGVlZHMgYW5kIGxvdmVkIGFsbCB0aGF0IGlzIGhvbm91cmFibGUgYW5kIHB1dCBhd2F5IGFsbCB0aGF0IGlzIGJhc2UuCjwvdHJhbnNsYXRpb24+"
translation['3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZ2VzaWxhdXMgaGFkIHN1Y2ggcmV2ZXJlbmNlIGZvciByZWxpZ2lvbiwgdGhhdCBldmVuIGhpcyBlbmVtaWVzIGNvbnNpZGVyZWQgaGlzIG9hdGhzIGFuZCBoaXMgICB0cmVhdGllcyBtb3JlIHRvIGJlIHJlbGllZCBvbiB0aGFuIHRoZWlyIG93biBmcmllbmRzaGlwIHdpdGggb25lIGFub3RoZXI6IGZvciB0aGVyZSB3ZXJlIHRpbWVzIHdoZW4gdGhleSBzaHJhbmsgZnJvbSBtZWV0aW5nIHRvZ2V0aGVyLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgdGV4dCBoZXJlIGlzIHF1aXRlIHVuY2VydGFpbjogdGhlcmUgaXMgYSBnYXAgaW4gdGhlIG1hbnVzY3JpcHRzIGFmdGVyIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+GzrnOu+G9t86xzr08L2ZvcmVpZ24+Ljwvbm90ZT4gYW5kIHlldCB3b3VsZCBwbGFjZSB0aGVtc2VsdmVzIGluIHRoZSBwb3dlciBvZiBBZ2VzaWxhdXMuIEFuZCBsZXN0IGFueW9uZSBzaG91bGQgdGhpbmsgdGhpcyBzdGF0ZW1lbnQgaW5jcmVkaWJsZSwgSSB3aXNoIHRvIG5hbWUgdGhlIG1vc3QgZmFtb3VzIGFtb25nIHRoZW0uIFNwaXRocmlkYXRlcyB0aGUgUGVyc2lhbiwgZm9yIGV4YW1wbGUsIGtuZXcgdGhhdAo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Phs65zrvhvbfOsc69PC9mb3JlaWduPi48L3RyYW5zbGF0aW9uPg=="
translation['3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlBoYXJuYWJhenVzIHdhcyBuZWdvdGlhdGluZyBmb3IgYSBtYXJyaWFnZSB3aXRoIHRoZSBHcmVhdCBLaW5nJ3MgZGF1Z2h0ZXIsIGFuZCBpbnRlbmRlZCB0byB0YWtlIGhpcywgU3BpdGhyaWRhdGVzJywgZGF1Z2h0ZXIgYXMgYSBjb25jdWJpbmUuIFJlZ2FyZGluZyB0aGlzIGFzIGFuIG91dHJhZ2UsIGhlIGRlbGl2ZXJlZCBoaW1zZWxmLCBoaXMgd2lmZSwgaGlzIGNoaWxkcmVuIGFuZCBhbGwgdGhhdCBoZSBoYWQgaW50byBBZ2VzaWxhdXMnIGhhbmRzLiBDb3R5cywgcnVsZXIgb2YgdGhlIFBhcGhsYWdvbmlhbnMsIHdobyBoYWQgZGlzb2JleWVkCjwvdHJhbnNsYXRpb24+"
translation['3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPnRoZSBjb21tYW5kIG9mIHRoZSBHcmVhdCBLaW5nLCB0aG91Z2ggaXQgd2FzIGFjY29tcGFuaWVkIHdpdGggdGhlIHN5bWJvbCBvZiBmcmllbmRzaGlwLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUg4oCccmlnaHQgaGFuZCzigJ0gb2Z0ZW4gbWVudGlvbmVkIGFzIGEgcGxlZGdlIG9mIGdvb2QgZmFpdGggb3IgZnJpZW5kc2hpcC48L25vdGU+IGZlYXJlZCB0aGF0IGhlIHdvdWxkIGJlIHNlaXplZCBhbmQgZWl0aGVyIGJlIGZpbmVkIGhlYXZpbHkgb3IgZXZlbiBwdXQgdG8gZGVhdGg7IGJ1dCBoZSB0b28sIHRydXN0aW5nIGluIHRoZSBhcm1pc3RpY2Ugd2l0aCBBZ2VzaWxhdXMsIGNhbWUgdG8gaGlzIGNhbXAgYW5kIGhhdmluZyBlbnRlcmVkIGludG8gYWxsaWFuY2UgZWxlY3RlZCB0byB0YWtlIHRoZSBmaWVsZCBhdCBBZ2VzaWxhdXMnIHNpZGUgd2l0aCBhIHRob3VzYW5kIGhvcnNlIGFuZCB0d28gdGhvdXNhbmQgdGFyZ2V0ZWVycy4KPC90cmFuc2xhdGlvbj4="
translation['3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBQaGFybmFiYXp1cyB0b28gY2FtZSBhbmQgcGFybGV5ZWQgd2l0aCBBZ2VzaWxhdXMsIGFuZCBtYWRlIGFncmVlbWVudCB3aXRoIGhpbSB0aGF0IGlmIGhlIHdlcmUgbm90IGhpbXNlbGYgYXBwb2ludGVkIHRoZSBQZXJzaWFuIGdlbmVyYWwsIGhlIHdvdWxkIHJldm9sdCBmcm9tIHRoZSBHcmVhdCBLaW5nLiDigJxCdXQs4oCdIGhlIHNhaWQsIOKAnGlmIEkgYmVjb21lIGdlbmVyYWwsIEkgc2hhbGwgbWFrZSB3YXIgb24geW91LCBBZ2VzaWxhdXMsIHdpdGggYWxsIG15IG1pZ2h0LuKAnSBIZSB1c2VkIHRoaXMgbGFuZ3VhZ2UgaW4gZnVsbCBjb25maWRlbmNlIHRoYXQgbm90aGluZyBjb250cmFyeSB0byB0aGUgdGVybXMgb2YgdGhlIGFybWlzdGljZSB3b3VsZCBoYXBwZW4gdG8gaGltLiBTbyBncmVhdCBhbmQgc28gbm9ibGUgYSB0cmVhc3VyZSBoYXMgZXZlcnkgbWFuLCBhbmQgYWJvdmUgYWxsIGEgZ2VuZXJhbCwgd2hvIGlzIHVwcmlnaHQgYW5kIHRydXN0d29ydGh5IGFuZCBpcyBrbm93biB0byBiZSBzby4gU28gbXVjaCwgdGhlbiwgZm9yIHRoZSB2aXJ0dWUgb2YgUGlldHkuIAo8L3RyYW5zbGF0aW9uPg=="
translation['4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5OZXh0IGNvbWVzIGhpcyBKdXN0aWNlIGluIG1vbmV5IG1hdHRlcnMuIE9mIHRoaXMgd2hhdCBwcm9vZnMgY2FuIGJlIG1vcmUgY29udmluY2luZyB0aGFuIHRoZSBmb2xsb3dpbmc/IE5vIG1hbiBldmVyIG1hZGUgYW55IGNvbXBsYWludCB0aGF0IGhlIGhhZCBiZWVuIGRlZnJhdWRlZCBieSBBZ2VzaWxhdXM6IGJ1dCBtYW55IGFja25vd2xlZGdlZCB0aGF0IHRoZXkgaGFkIHJlY2VpdmVkIG1hbnkgYmVuZWZpdHMgZnJvbSBoaW0uIE9uZSB3aG8gZGVsaWdodGVkIHRvIGdpdmUgYXdheSBoaXMgb3duIGZvciB0aGUgZ29vZCBvZiBvdGhlcnMgY291bGQgbm90IHBvc3NpYmx5IGJlIG1pbmRlZCB0byBkZWZyYXVkIG90aGVycyBhdCB0aGUgcHJpY2Ugb2YgZGlzZ3JhY2UuIEZvciBpZiBoZSBoYWQgY292ZXRlZCBtb25leSBpdCB3b3VsZCBoYXZlIGNvc3QgaGltIGZhciBsZXNzIHRyb3VibGUgdG8ga2VlcCBoaXMgb3duIHRoYW4gdG8gdGFrZSB3aGF0IGRpZCBub3QgYmVsb25nIHRvIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkEgbWFuIHdobyB3b3VsZCBub3QgbGVhdmUgdW5wYWlkIGRlYnRzIG9mIGdyYXRpdHVkZSwgd2hpY2ggYXJlIG5vdCByZWNvdmVyYWJsZSBpbiB0aGUgY291cnRzLCBjYW5ub3QgaGF2ZSBiZWVuIG1pbmRlZCB0byBjb21taXQgdGhlZnRzIHRoYXQgYXJlIGZvcmJpZGRlbiBieSBsYXcuIEFuZCBBZ2VzaWxhdXMgaGVsZCBpdCB3cm9uZyBub3Qgb25seSB0byByZXB1ZGlhdGUgYSBkZWJ0IG9mIGdyYXRpdHVkZSwgYnV0LCBoYXZpbmcgZ3JlYXRlciBtZWFucywgbm90IHRvIHJlbmRlciBpbiByZXR1cm4gYSBtdWNoIGdyZWF0ZXIga2luZG5lc3MuCjwvdHJhbnNsYXRpb24+"
translation['4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB3aXRoIHdoYXQgc2hvdyBvZiByZWFzb24gY291bGQgZW1iZXp6bGVtZW50IG9mIHB1YmxpYyBwcm9wZXJ0eSBiZSBjaGFyZ2VkIGFnYWluc3QgYSBtYW4gd2hvIGJlc3Rvd2VkIG9uIGhpcyBmYXRoZXJsYW5kIHRoZSByZXdhcmRzIGR1ZSB0byBoaW1zZWxmPyBBbmQgaXMgaXQgbm90IGEgc3RyaWtpbmcgcHJvb2Ygb2YgaGlzIGZyZWVkb20gZnJvbSBhdmFyaWNlIHRoYXQgaGUgd2FzIGFibGUgdG8gZ2V0IG1vbmV5IGZyb20gb3RoZXJzLCB3aGVuZXZlciBoZSB3YW50ZWQsIGZvciB0aGUgcHVycG9zZSBvZiByZW5kZXJpbmcgZmluYW5jaWFsIGFzc2lzdGFuY2UgdG8gdGhlIHN0YXRlIG9yIGhpcyBmcmllbmRzPwo8L3RyYW5zbGF0aW9uPg=="
translation['4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkZvciBoYWQgaGUgYmVlbiBpbiB0aGUgaGFiaXQgb2Ygc2VsbGluZyBoaXMgZmF2b3VycyBvciB0YWtpbmcgcGF5bWVudCBmb3IgaGlzIGJlbmVmYWN0aW9ucywgbm8gb25lIHdvdWxkIGhhdmUgZmVsdCB0aGF0IGhlIG93ZWQgaGltIGFueXRoaW5nLiBJdCBpcyB0aGUgcmVjaXBpZW50IG9mIHVuYm91Z2h0LCBncmF0dWl0b3VzIGJlbmVmaXRzIHdobyBpcyBhbHdheXMgZ2xhZCB0byBvYmxpZ2UgaGlzIGJlbmVmYWN0b3IgaW4gcmV0dXJuIGZvciB0aGUga2luZG5lc3MgaGUgaGFzIHJlY2VpdmVkIGFuZCBpbiBhY2tub3dsZWRnbWVudCBvZiB0aGUgdHJ1c3QgcmVwb3NlZCBpbiBoaW0gYXMgYSB3b3J0aHkgYW5kIGZhaXRoZnVsIGd1YXJkaWFuIG9mIGEgZmF2b3VyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIFN5bS4gOC4zNiIgdmFsaWQ9InllcyI+WGVuLiBTeW0uIDguMzY8L2JpYmw+PC9ub3RlPgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIFN5bS4gOC4zNiIgdmFsaWQ9InllcyI+WGVuLiBTeW0uIDguMzY8L2JpYmw+PC90cmFuc2xhdGlvbj4="
translation['4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GdXJ0aGVyLCBpcyBpdCBub3QgY2VydGFpbiB0aGF0IHRoZSBtYW4gd2hvIGJ5IGEgbm9ibGUgaW5zdGluY3QgcmVmdXNlZCB0byB0YWtlIG1vcmUgYW5kIHByZWZlcnJlZCB0byB0YWtlIGxlc3MgdGhhbiBoaXMganVzdCBzaGFyZSB3YXMgZmFyIGJleW9uZCB0aGUgcmVhY2ggICBvZiBjb3ZldG91c25lc3M/IE5vdyB3aGVuIHRoZSBzdGF0ZSBwcm9ub3VuY2VkIGhpbSBzb2xlIGhlaXIgdG8gdGhlIHByb3BlcnR5IG9mIEFnaXMsIGhlIGdhdmUgaGFsZiBvZiBpdCB0byBoaXMgbW90aGVyJ3Mga2luc2ZvbGssIGJlY2F1c2UgaGUgc2F3IHRoYXQgdGhleSB3ZXJlIGluIHdhbnQ7IGFuZCBhbGwgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEwNjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMTA2NSI+TGFjZWRhZW1vbjwvcGxhY2VOYW1lPiBiZWFycyB3aXRuZXNzIHRoYXQgbXkgc3RhdGVtZW50IGlzIHRydWUuCjwvdHJhbnNsYXRpb24+"
translation['4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk9uIHJlY2VpdmluZyBmcm9tIFRpdGhyYXVzdGVzIGFuIG9mZmVyIG9mIGdpZnRzIHVubnVtYmVyZWQgaWYgb25seSBoZSB3b3VsZCBsZWF2ZSBoaXMgY291bnRyeSwgQWdlc2lsYXVzIGFuc3dlcmVkOiDigJxBbW9uZyB1cywgVGl0aHJhdXN0ZXMsIGEgcnVsZXIncyBob25vdXIgcmVxdWlyZXMgaGltIHRvIGVucmljaCBoaXMgYXJteSByYXRoZXIgdGhhbiBoaW1zZWxmLCBhbmQgdG8gdGFrZSBzcG9pbHMgcmF0aGVyIHRoYW4gZ2lmdHMgZnJvbSB0aGUgZW5lbXku4oCdCjwvdHJhbnNsYXRpb24+"
translation['5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZ2FpbiwgYW1vbmcgYWxsIHRoZSBwbGVhc3VyZXMgdGhhdCBwcm92ZSB0b28gc3Ryb25nIGZvciBtYW55IG1lbiwgd2hvIGNhbiBtZW50aW9uIG9uZSB0byB3aGljaCBBZ2VzaWxhdXMgeWllbGRlZD8gRHJ1bmtlbm5lc3MsIGhlIHRob3VnaHQsIHNob3VsZCBiZSBhdm9pZGVkIGxpa2UgbWFkbmVzcywgb3ZlcmVhdGluZyBsaWtlIGlkbGVuZXNzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvM6xzr3hvbfOsc+CPC9mb3JlaWduPiBhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAz4HOs+G9t86xz4I8L2ZvcmVpZ24+IGFyZSBhZG9wdGVkIGZyb20gdGhlIHRleHQgb2YgQXRoZW5hZXVzLCB3aG8gcmVmZXJzIHRvIHRoaXMgcGFzc2FnZSAocC4gNjEzIGMpLiBUaGUgTVNTLiBvZiB0aGUgQWdlc2lsYXVzIGhhdmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrvOsc65zrzOsc+BzrPhvbfOsc+CPC9mb3JlaWduPiwg4oCcZ2x1dHRvbnks4oCdIGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIHOvM6xz4HPhOG9t86xz4I8L2ZvcmVpZ24+LCDigJxlcnJvci7igJ08L25vdGU+IE1vcmVvdmVyLCBoZSByZWNlaXZlZCBhIGRvdWJsZSByYXRpb24gYXQgdGhlIHB1YmxpYyBtZWFscywgYnV0IGluc3RlYWQgb2YgY29uc3VtaW5nIGJvdGggcG9ydGlvbnMgaGltc2VsZiwgaGUgZGlzdHJpYnV0ZWQgYm90aCBhbmQgbGVmdCBuZWl0aGVyIGZvciBoaW1zZWxmLCBob2xkaW5nIHRoYXQgdGhlIHB1cnBvc2Ugb2YgdGhpcyBkb3VibGUgYWxsb3dhbmNlIHRvIHRoZSBraW5nIHdhcyBub3QgdG8gcHJvdmlkZSBoaW0gd2l0aCBhIGhlYXZ5IG1lYWwsIGJ1dCB0byBnaXZlIGhpbSB0aGUgb3Bwb3J0dW5pdHkgb2YgaG9ub3VyaW5nIHdob21zb2V2ZXIgaGUgd291bGQuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs68zrHOveG9t86xz4I8L2ZvcmVpZ24+IGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDPgc6z4b23zrHPgjwvZm9yZWlnbj4gYXJlIGFkb3B0ZWQgZnJvbSB0aGUgdGV4dCBvZiBBdGhlbmFldXMsIHdobyByZWZlcnMgdG8gdGhpcyBwYXNzYWdlIChwLiA2MTMgYykuIFRoZSBNU1MuIG9mIHRoZSBBZ2VzaWxhdXMgaGF2ZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ou86xzrnOvM6xz4HOs+G9t86xz4I8L2ZvcmVpZ24+LCDigJxnbHV0dG9ueSzigJ0gYW5kIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gc68zrHPgc+E4b23zrHPgjwvZm9yZWlnbj4sIOKAnGVycm9yLuKAnTwvdHJhbnNsYXRpb24+"
translation['5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciBzbGVlcCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBDb25zdC4gTGFjLiAxNS40IiB2YWxpZD0ieWVzIj5YZW4uIENvbnN0LiBMYWMuIDE1LjQ8L2JpYmw+OyA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEN5cm9wLiA4LjIuNCIgdmFsaWQ9InllcyI+WGVuLiBDeXJvcC4gOC4yLjQ8L2JpYmw+PC9ub3RlPiBpdCB3YXMgbm90IGhpcyBtYXN0ZXIsIGJ1dCB0aGUgc2VydmFudCBvZiBoaXMgYWN0aXZpdGllczsgYW5kIHVubGVzcyBoZSBvY2N1cGllZCB0aGUgaHVtYmxlc3QgYmVkIGFtb25nIGhpcyBjb21yYWRlcywgaGUgY291bGQgbm90IGNvbmNlYWwgaGlzIHNoYW1lOiBmb3IgaGUgdGhvdWdodCB0aGF0IGEgcnVsZXIncyBzdXBlcmlvcml0eSBvdmVyIG9yZGluYXJ5IG1lbiBzaG91bGQgYmUgc2hvd24gbm90IGJ5IHdlYWtuZXNzIGJ1dCBieSBlbmR1cmFuY2UuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ29uc3QuIExhYy4gMTUuNCIgdmFsaWQ9InllcyI+WGVuLiBDb25zdC4gTGFjLiAxNS40PC9iaWJsPjsgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBDeXJvcC4gOC4yLjQiIHZhbGlkPSJ5ZXMiPlhlbi4gQ3lyb3AuIDguMi40PC9iaWJsPjwvdHJhbnNsYXRpb24+"
translation['5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSB3ZXJlIHRoaW5ncywgdG8gYmUgc3VyZSwgb2Ygd2hpY2ggaGUgd2FzIG5vdCBhc2hhbWVkIHRvIHRha2UgbW9yZSB0aGFuIGhpcyBzaGFyZSDigJQgZm9yIGluc3RhbmNlLCB0aGUgc3VtbWVyJ3MgaGVhdCBhbmQgdGhlIHdpbnRlcidzIGNvbGQ6PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ3lyb3AuIDEuNC4yNSIgdmFsaWQ9InllcyI+WGVuLiBDeXJvcC4gMS40LjI1PC9iaWJsPjwvbm90ZT4gYW5kIHdoZW5ldmVyIGhpcyBhcm15IHdhcyBmYWNlZCB3aXRoIGEgaGFyZCB0YXNrLCAgIGhlIHRvaWxlZCB3aWxsaW5nbHkgYmV5b25kIGFsbCBvdGhlcnMsIGJlbGlldmluZyB0aGF0IGFsbCBzdWNoIGFjdGlvbnMgd2VyZSBhbiBlbmNvdXJhZ2VtZW50IHRvIHRoZSBtZW4uIE5vdCB0byBsYWJvdXIgdGhlIHBvaW50LCBBZ2VzaWxhdXMgZ2xvcmllZCBpbiBoYXJkIHdvcmssIGFuZCBzaG93ZWQgYSBzdHJvbmcgZGlzdGFzdGUgZm9yIGluZG9sZW5jZS4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBDeXJvcC4gMS40LjI1IiB2YWxpZD0ieWVzIj5YZW4uIEN5cm9wLiAxLjQuMjU8L2JpYmw+PC90cmFuc2xhdGlvbj4="
translation['5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IaXMgaGFiaXR1YWwgY29udHJvbCBvZiBoaXMgYWZmZWN0aW9ucyBzdXJlbHkgZGVzZXJ2ZXMgYSB0cmlidXRlIG9mIGFkbWlyYXRpb24sIGlmIHdvcnRoeSBvZiBtZW50aW9uIG9uIG5vIG90aGVyIGdyb3VuZC4gVGhhdCBoZSBzaG91bGQga2VlcCBhdCBhcm1zJyBsZW5ndGggdGhvc2Ugd2hvc2UgaW50aW1hY3kgaGUgZGlkIG5vdCBkZXNpcmUgbWF5IGJlIHRob3VnaHQgb25seSBodW1hbi4gQnV0IGhlIGxvdmVkIE1lZ2FiYXRlcywgdGhlIGhhbmRzb21lIHNvbiBvZiBTcGl0aHJpZGF0ZXMsIHdpdGggYWxsIHRoZSBpbnRlbnNpdHkgb2YgYW4gYXJkZW50IG5hdHVyZS4gTm93IGl0IGlzIHRoZSBjdXN0b208bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBDeXJvcC4gMS40LjI3IiB2YWxpZD0ieWVzIj5YZW4uIEN5cm9wLiAxLjQuMjc8L2JpYmw+PC9ub3RlPiBhbW9uZyB0aGUgUGVyc2lhbnMgdG8gYmVzdG93IGEga2lzcyBvbiB0aG9zZSB3aG9tIHRoZXkgaG9ub3VyLiBZZXQgd2hlbiBNZWdhYmF0ZXMgYXR0ZW1wdGVkIHRvIGtpc3MgaGltLCBBZ2VzaWxhdXMgcmVzaXN0ZWQgaGlzIGFkdmFuY2VzIHdpdGggYWxsIGhpcyBtaWdodCDigJQgYW4gYWN0IG9mIHB1bmN0aWxpb3VzIG1vZGVyYXRpb24gc3VyZWx5IQo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEN5cm9wLiAxLjQuMjciIHZhbGlkPSJ5ZXMiPlhlbi4gQ3lyb3AuIDEuNC4yNzwvYmlibD48L3RyYW5zbGF0aW9uPg=="
translation['5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk1lZ2FiYXRlcywgZmVlbGluZyBoaW1zZWxmIHNsaWdodGVkLCB0cmllZCBubyBtb3JlIHRvIGtpc3MgaGltLCBhbmQgQWdlc2lsYXVzIGFwcHJvYWNoZWQgb25lIG9mIGhpcyBjb21wYW5pb25zIHdpdGggYSByZXF1ZXN0IHRoYXQgaGUgd291bGQgcGVyc3VhZGUgTWVnYWJhdGVzIHRvIHNob3cgaGltIGhvbm91ciBvbmNlIGFnYWluLiDigJxXaWxsIHlvdSBraXNzIGhpbSzigJ0gYXNrZWQgaGlzIGNvbXBhbmlvbiwg4oCcaWYgTWVnYWJhdGVzIHlpZWxkcz/igJ0gQWZ0ZXIgYSBkZWVwIHNpbGVuY2UsIEFnZXNpbGF1cyBnYXZlIGhpcyByZXBseTog4oCcQnkgdGhlIHR3aW4gZ29kcywgbm8sIG5vdCBpZiBJIHdlcmUgc3RyYWlnaHR3YXkgdG8gYmUgdGhlIGZhaXJlc3QgYW5kIHN0cm9uZ2VzdCBhbmQgZmxlZXRlc3QgbWFuIG9uIGVhcnRoISBCeSBhbGwgdGhlIGdvZHMgSSBzd2VhciB0aGF0IEkgd291bGQgcmF0aGVyIGZpZ2h0IHRoYXQgc2FtZSBiYXR0bGUgb3ZlciBhZ2FpbiB0aGFuIHRoYXQgZXZlcnl0aGluZyBJIHNlZSBzaG91bGQgdHVybiBpbnRvIGdvbGQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPldoYXQgb3BpbmlvbiBzb21lIGhvbGQgaW4gcmVnYXJkIHRvIHRoZXNlIG1hdHRlcnMgSSBrbm93IHdlbGwgZW5vdWdoOyBidXQgZm9yIG15IHBhcnQgSSBhbSBwZXJzdWFkZWQgdGhhdCBtYW55IG1vcmUgbWVuIGNhbiBnYWluIHRoZSBtYXN0ZXJ5IG92ZXIgdGhlaXIgZW5lbWllcyB0aGFuIG92ZXIgaW1wdWxzZXMgc3VjaCBhcyB0aGVzZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBbmFiLiAyLjYuMjgiIHZhbGlkPSJ5ZXMiPlhlbi4gQW5hYi4gMi42LjI4PC9iaWJsPjwvbm90ZT4gTm8gZG91YnQgd2hlbiB0aGVzZSB0aGluZ3MgYXJlIGtub3duIHRvIGZldywgbWFueSBoYXZlIGEgcmlnaHQgdG8gYmUgc2NlcHRpY2FsOiBidXQgd2UgYWxsIGtub3cgdGhpcywgdGhhdCB0aGUgICBncmVhdGVyIGEgbWFuJ3MgZmFtZSwgdGhlIGZpZXJjZXIgaXMgdGhlIGxpZ2h0IHRoYXQgYmVhdHMgb24gYWxsIGhpcyBhY3Rpb25zOzxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQW5hYi4gMi42LjI4IiB2YWxpZD0ieWVzIj5YZW4uIEFuYWIuIDIuNi4yODwvYmlibD48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBNZW0uIDEuMS4xMSIgdmFsaWQ9InllcyI+WGVuLiBNZW0uIDEuMS4xMTwvYmlibD48L25vdGU+IHdlIGtub3cgdG9vIHRoYXQgbm8gb25lIGV2ZXIgcmVwb3J0ZWQgdGhhdCBoZSBoYWQgc2VlbiBBZ2VzaWxhdXMgZG8gYW55IHN1Y2ggdGhpbmcsIGFuZCB0aGF0IG5vIHNjYW5kYWwgYmFzZWQgb24gY29uamVjdHVyZSB3b3VsZCBoYXZlIGdhaW5lZCBjcmVkZW5jZTsgZm9yIGl0IHdhcyBub3QgaGlzCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gTWVtLiAxLjEuMTEiIHZhbGlkPSJ5ZXMiPlhlbi4gTWVtLiAxLjEuMTE8L2JpYmw+PC90cmFuc2xhdGlvbj4="
translation['5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPmhhYml0LCB3aGVuIGFicm9hZCwgdG8gbG9kZ2UgYXBhcnQgaW4gYSBwcml2YXRlIGhvdXNlLCBidXQgaGUgd2FzIGFsd2F5cyBlaXRoZXIgaW4gYSB0ZW1wbGUsIHdoZXJlIGNvbmR1Y3Qgb2YgdGhpcyBzb3J0IGlzLCBvZiBjb3Vyc2UsIGltcG9zc2libGUsIG9yIGVsc2UgaW4gYSBwdWJsaWMgcGxhY2Ugd2hlcmUgYWxsIG1lbidzIGV5ZXMgYmVjYW1lIHdpdG5lc3NlcyBvZiBoaXMgcmVjdGl0dWRlLiBJZiBJIHNwZWFrIHRoaXMgZmFsc2VseSBhZ2FpbnN0IHRoZSBrbm93bGVkZ2Ugb2YgdGhlIEdyZWVrIHdvcmxkLCBJIGFtIGluIG5vIHdheSBwcmFpc2luZyBteSBoZXJvOyBidXQgSSBhbSBjZW5zdXJpbmcgbXlzZWxmLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBmb3IgQ291cmFnZSwgaGUgc2VlbXMgdG8gbWUgdG8gaGF2ZSBhZmZvcmRlZCBjbGVhciBwcm9vZnMgb2YgdGhhdCBieSBhbHdheXMgZW5nYWdpbmcgaGltc2VsZiB0byBmaWdodCBhZ2FpbnN0IHRoZSBzdHJvbmdlc3QgZW5lbWllcyBvZiBoaXMgc3RhdGUgYW5kIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgYW5kIGJ5IGFsd2F5cyBwbGFjaW5nIGhpbXNlbGYgaW4gdGhlIGZvcmVmcm9udCBvZiB0aGUgc3RydWdnbGUuCjwvdHJhbnNsYXRpb24+"
translation['6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlIGVuZW15IHdlcmUgd2lsbGluZyB0byBqb2luIGJhdHRsZSB3aXRoIGhpbSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHJlZmVyZW5jZSBpcyBub3QgZ2VuZXJhbCwgYnV0IGRlZmluaXRlbHkgdG8gdGhlIGJhdHRsZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTIzNSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMjM1Ij5Db3JvbmVhPC9wbGFjZU5hbWU+OyBzZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBZ2VzLiAyLjExIiB2YWxpZD0ieWVzIj5YZW4uIEFnZXMuIDIuMTEtMTM8L2JpYmw+PC9ub3RlPiBpdCB3YXMgbm90IGJ5IHRoZWlyIHBhbmljIGZsaWdodCB0aGF0IGhlIHdvbiB2aWN0b3J5LCBidXQgaXQgd2FzIGFmdGVyIG92ZXJjb21pbmcgdGhlbSBpbiBzdHViYm9ybiBmaWdodGluZyB0aGF0IGhlIHNldCB1cCBhIHRyb3BoeSwgbGVhdmluZyBiZWhpbmQgaGltIGltcGVyaXNoYWJsZSBtZW1vcmlhbHMgb2YgaGlzIG93biB2YWxvdXIsIGFuZCBiZWFyaW5nIGluIGhpcyBvd24gYm9keSB2aXNpYmxlIHRva2VucyBvZiB0aGUgZnVyeSBvZiBoaXMgZmlnaHRpbmcsIHNvIHRoYXQgbm90IGJ5IGhlYXJzYXkgYnV0IGJ5IHRoZSBldmlkZW5jZSBvZiB0aGVpciBvd24gZXllcyBtZW4gY291bGQganVkZ2Ugd2hhdCBtYW5uZXIgb2YgbWFuIGhlIHdhcy4KPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEyMzUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMTIzNSI+Q29yb25lYTwvcGxhY2VOYW1lPjsgc2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQWdlcy4gMi4xMSIgdmFsaWQ9InllcyI+WGVuLiBBZ2VzLiAyLjExLTEzPC9iaWJsPjwvdHJhbnNsYXRpb24+"
translation['6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkluIHRydXRoIHRoZSB0cm9waGllcyBvZiBBZ2VzaWxhdXMgYXJlIG5vdCB0byBiZSBjb3VudGVkIGJ5IHRlbGxpbmcgaG93IG1hbnkgaGUgc2V0IHVwOyB0aGUgbnVtYmVyIG9mIGhpcyBjYW1wYWlnbnMgaXMgdGhlIG51bWJlciBvZiB0aGVtLiBIaXMgbWFzdGVyeSB3YXMgaW4gbm8gd2F5IGxlc3MgY29tcGxldGUgd2hlbiB0aGUgZW5lbXkgd2VyZSB1bndpbGxpbmcgdG8gYWNjZXB0IGJhdHRsZSwgYnV0IGl0IHdhcyBnYWluZWQgYXQgbGVzcyByaXNrIGFuZCB3aXRoIG1vcmUgcHJvZml0IHRvIHRoZSBzdGF0ZSBhbmQgdG8gdGhlIGFsbGllcy4gU28gaW4gdGhlIEdyZWF0IEdhbWVzIHRoZSB1bmNoYWxsZW5nZWQgY2hhbXBpb24gaXMgY3Jvd25lZCBubyBsZXNzIHRoYW4gaGUgd2hvIGhhcyBmb3VnaHQgdG8gY29ucXVlci4gCjwvdHJhbnNsYXRpb24+"
translation['6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PZiBoaXMgV2lzZG9tIEkgZmluZCB0aGUgZXZpZGVuY2UgaW4gZXZlcnkgb25lIG9mIGhpcyBkZWVkcy4gVG93YXJkcyBoaXMgZmF0aGVybGFuZCBoZSBiZWhhdmVkIGluIHN1Y2ggYSBtYW5uZXIgdGhhdCwgYmVpbmcgZW50aXJlbHkgb2JlZGllbnQgdG8gaGVyLCBoZSB3b24gdGhlIG9iZWRpZW5jZSBvZiB0aGUgY2l0aXplbnMsIGFuZCBieSBoaXMgemVhbCBmb3IgaGlzIGNvbXJhZGVzIGhlIGhlbGQgdGhlIHVucXVlc3Rpb25pbmcgZGV2b3Rpb24gb2YgaGlzIGZyaWVuZHM6IGFuZCBhcyBmb3IgaGlzIHRyb29wcywgaGUgZ2FpbmVkIGF0IG9uY2UgdGhlaXIgb2JlZGllbmNlIGFuZCB0aGVpciBhZmZlY3Rpb24uIFN1cmVseSBub3RoaW5nIGlzIHdhbnRpbmcgdG8gdGhlIHN0cmVuZ3RoIG9mIHRoYXQgYmF0dGxlLWxpbmUgaW4gd2hpY2ggb2JlZGllbmNlIHJlc3VsdHMgaW4gcGVyZmVjdCBkaXNjaXBsaW5lLCBhbmQgYWZmZWN0aW9uIGZvciB0aGUgZ2VuZXJhbCBwcm9kdWNlcyBmYWl0aGZ1bCBwcm9tcHRpdHVkZS4KPC90cmFuc2xhdGlvbj4="
translation['6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciB0aGUgZW5lbXksIHRob3VnaCB0aGV5IHdlcmUgZm9yY2VkIHRvIGhhdGUsIGhlIGdhdmUgdGhlbSBubyBjaGFuY2UgdG8gZGlzcGFyYWdlIGhpbS4gRm9yIGhlIGNvbnRyaXZlZCB0aGF0IGhpcyBhbGxpZXMgYWx3YXlzIGhhZCB0aGUgYmV0dGVyIG9mIHRoZW0sIGJ5IHRoZSB1c2Ugb2YgZGVjZXB0aW9uIHdoZW4gb2NjYXNpb24gb2ZmZXJlZCwgYnkgYW50aWNpcGF0aW5nIHRoZWlyIGFjdGlvbiBpZiBzcGVlZCB3YXMgbmVjZXNzYXJ5LCBieSBoaWRpbmcgd2hlbiBpdCBzdWl0ZWQgaGlzIHB1cnBvc2UsIGFuZCBieSBwcmFjdGlzaW5nIGFsbCB0aGUgb3Bwb3NpdGUgbWV0aG9kcyB3aGVuIGRlYWxpbmcgd2l0aCBlbmVtaWVzIHRvIHRob3NlIHdoaWNoIGhlIGFwcGxpZWQgd2hlbiBkZWFsaW5nIHdpdGggZnJpZW5kcy4KPC90cmFuc2xhdGlvbj4="
translation['6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk5pZ2h0LCBmb3IgZXhhbXBsZSwgd2FzIHRvIGhpbSBhcyBkYXksIGFuZCBkYXkgYXMgbmlnaHQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gNi4xLjE1IiB2YWxpZD0ieWVzIj5YZW4uIEhlbGwuIDYuMS4xNTwvYmlibD47IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ29uc3QuIExhYy4gNS43IiB2YWxpZD0ieWVzIj5YZW4uIENvbnN0LiBMYWMuIDUuNzwvYmlibD47IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ3lyb3AuIDEuNS4xMiIgdmFsaWQ9InllcyI+WGVuLiBDeXJvcC4gMS41LjEyPC9iaWJsPi48L25vdGU+IGZvciBoZSBvZnRlbiB2ZWlsZWQgaGlzIG1vdmVtZW50cyBzbyBjb21wbGV0ZWx5IHRoYXQgbm9uZSBjb3VsZCBndWVzcyB3aGVyZSBoZSB3YXMsIHdoaXRoZXIgaGUgd2FzIGdvaW5nLCBvciB3aGF0IGhlIG1lYW50IHRvIGRvLiBUaHVzIGhlIG1hZGUgZXZlbiBzdHJvbmcgcG9zaXRpb25zIHVudGVuYWJsZSB0byB0aGUgZW5lbXksIHR1cm5pbmcgb25lLCBzY2FsaW5nIGFub3RoZXIsIHNuYXRjaGluZyBhIHRoaXJkIGJ5IHN0ZWFsdGguCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gNi4xLjE1IiB2YWxpZD0ieWVzIj5YZW4uIEhlbGwuIDYuMS4xNTwvYmlibD47IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ29uc3QuIExhYy4gNS43IiB2YWxpZD0ieWVzIj5YZW4uIENvbnN0LiBMYWMuIDUuNzwvYmlibD47IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQ3lyb3AuIDEuNS4xMiIgdmFsaWQ9InllcyI+WGVuLiBDeXJvcC4gMS41LjEyPC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBtYXJjaCwgd2hlbmV2ZXIgaGUga25ldyB0aGF0IHRoZSBlbmVteSBjb3VsZCBicmluZyBoaW0gdG8gYW4gZW5nYWdlbWVudCBpZiB0aGV5IGNob3NlLCBoZSB3b3VsZCBsZWFkIGhpcyBhcm15IGluIGNsb3NlIG9yZGVyLCBhbGVydCBhbmQgcmVhZHkgdG8gZGVmZW5kIGhpbXNlbGYsIG1vdmluZyBvbiBhcyBxdWlldGx5IGFzIGEgbW9kZXN0IG1haWRlbiwgc2luY2UgaGUgaGVsZCB0aGF0IHRoaXMgd2FzIHRoZSBiZXN0IG1lYW5zIG9mIG1haW50YWluaW5nIGNhbG0sIG9mIGF2b2lkaW5nIHBhbmljLCBjb25mdXNpb24sIGFuZCBibHVuZGVyaW5nLCBhbmQgb2YgZ3VhcmRpbmcgYWdhaW5zdCBhIHN1cnByaXNlIGF0dGFjay4KPC90cmFuc2xhdGlvbj4="
translation['6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgc28sIGJ5IHVzaW5nIHN1Y2ggbWV0aG9kcywgaGUgd2FzIGZvcm1pZGFibGUgdG8gaGlzIGVuZW1pZXMsIGFuZCBpbnNwaXJlZCBoaXMgZnJpZW5kcyB3aXRoIHN0cmVuZ3RoIGFuZCBjb25maWRlbmNlLiBUaHVzIGhlIHdhcyBuZXZlciBkZXNwaXNlZCBieSBoaXMgZm9lcywgbmV2ZXIgYnJvdWdodCB0byBhY2NvdW50IGJ5IHRoZSBjaXRpemVucywgbmV2ZXIgYmxhbWVkIGJ5IGhpcyBmcmllbmRzLCBidXQgdGhyb3VnaG91dCBoaXMgY2FyZWVyIGhlIHdhcyBwcmFpc2VkIGFuZCBpZG9saXNlZCBieSBhbGwgdGhlIHdvcmxkLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PZiBoaXMgUGF0cmlvdGlzbSBpdCB3b3VsZCBiZSBhIGxvbmcgdGFzayB0byB3cml0ZSBpbiBjb21wbGV0ZSBkZXRhaWwsIGZvciB0aGVyZSBpcyBubyBzaW5nbGUgYWN0aW9uIG9mIGhpcywgSSB0aGluaywgdGhhdCBkb2VzIG5vdCBpbGx1c3RyYXRlIHRoYXQgcXVhbGl0eS4gVG8gc3BlYWsgYnJpZWZseSwgd2UgYWxsIGtub3cgdGhhdCB3aGVuIEFnZXNpbGF1cyB0aG91Z2h0IGhlIHdvdWxkIGJlIHNlcnZpbmcgaGlzIGZhdGhlcmxhbmQgaGUgbmV2ZXIgc2hpcmtlZCB0b2lsLCBuZXZlciBzaHJhbmsgZnJvbSBkYW5nZXIsIG5ldmVyIHNwYXJlZCBtb25leSwgbmV2ZXIgZXhjdXNlZCBoaW1zZWxmIG9uIHRoZSBzY29yZSBvZiBib2RpbHkgd2Vha25lc3Mgb3Igb2xkIGFnZTs8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBNZW0uIDMuMiIgdmFsaWQ9InllcyI+WGVuLiBNZW0uIDMuMjwvYmlibD48L25vdGU+IGJ1dCBiZWxpZXZlZCB0aGF0IGl0IGlzIHRoZSBkdXR5IG9mIGEgZ29vZCBraW5nIHRvIGRvIGFzIG11Y2ggZ29vZCBhcyBwb3NzaWJsZSB0byBoaXMgc3ViamVjdHMuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gTWVtLiAzLjIiIHZhbGlkPSJ5ZXMiPlhlbi4gTWVtLiAzLjI8L2JpYmw+PC90cmFuc2xhdGlvbj4="
translation['7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFtb25nIHRoZSBncmVhdGVzdCBzZXJ2aWNlcyBoZSByZW5kZXJlZCB0byBoaXMgZmF0aGVybGFuZCBJIHJlY2tvbiB0aGUgZmFjdCB0aGF0LCB0aG91Z2ggdGhlIG1vc3QgcG93ZXJmdWwgbWFuIGluIHRoZSBzdGF0ZSwgaGUgd2FzIGNsZWFybHkgYSBkZXZvdGVkIHNlcnZhbnQgb2YgdGhlIGxhd3MuIEZvciB3aG8gd291bGQgYmUgbWluZGVkIHRvIGRpc29iZXkgd2hlbiBoZSBzYXcgdGhlIGtpbmcgb2JleWluZz8gV2hvIHdvdWxkIHR1cm4gcmV2b2x1dGlvbmlzdCwgdGhpbmtpbmcgaGltc2VsZiBkZWZyYXVkZWQgb2YgaGlzIGR1ZSwgd2hlbiBoZSBrbmV3IHRoYXQgdGhlIGtpbmcgd2FzIHJlYWR5IHRvIHlpZWxkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgbGF3cz8KPC90cmFuc2xhdGlvbj4="
translation['7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkhlcmUgd2FzIGEgbWFuIHdob3NlIGJlaGF2aW91ciB0byBoaXMgcG9saXRpY2FsIG9wcG9uZW50cyB3YXMgdGhhdCBvZiBhIGZhdGhlciB0byBoaXMgY2hpbGRyZW46IHRob3VnaCBoZSB3b3VsZCBjaGlkZSB0aGVtIGZvciB0aGVpciBlcnJvcnMgaGUgaG9ub3VyZWQgdGhlbSB3aGVuIHRoZXkgZGlkIGEgZ29vZCBkZWVkLCBhbmQgc3Rvb2QgYnkgdGhlbSB3aGVuIGFueSBkaXNhc3RlciBiZWZlbGwgdGhlbSwgZGVlbWluZyBubyBjaXRpemVuIGFuIGVuZW15LCB3aWxsaW5nIHRvIHByYWlzZSBhbGwsIGNvdW50aW5nIHRoZSBzYWZldHkgb2YgYWxsIGEgZ2FpbiwgYW5kIHJlY2tvbmluZyB0aGUgZGVzdHJ1Y3Rpb24gZXZlbiBvZiBhIG1hbiBvZiBsaXR0bGUgd29ydGggYXMgYSBsb3NzLiBIZSBjbGVhcmx5IHJlY2tvbmVkIHRoYXQgaWYgdGhlIGNpdGl6ZW5zIHNob3VsZCBjb250aW51ZSB0byBsaXZlIGluIHBlYWNlZnVsIHN1Ym1pc3Npb24gICB0byB0aGUgbGF3cywgdGhlIGZhdGhlcmxhbmQgd291bGQgYWx3YXlzIHByb3NwZXIgYW5kIHRoYXQgc2hlIHdvdWxkIGJlIHN0cm9uZyB3aGVuIHRoZSBHcmVla3Mgd2VyZSBwcnVkZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZ2FpbiwgaWYgaXQgaXMgaG9ub3VyYWJsZSBpbiBvbmUgd2hvIGlzIGEgR3JlZWsgdG8gYmUgYSBmcmllbmQgdG8gdGhlIEdyZWVrcywgd2hhdCBvdGhlciBnZW5lcmFsIGhhcyB0aGUgd29ybGQgc2VlbiB1bndpbGxpbmcgdG8gdGFrZSBhIGNpdHkgd2hlbiBoZSB0aG91Z2h0IHRoYXQgaXQgd291bGQgYmUgc2Fja2VkLCBvciB3aG8gbG9va2VkIG9uIHZpY3RvcnkgaW4gYSB3YXIgYWdhaW5zdCBHcmVla3MgYXMgYSBkaXNhc3Rlcj8KPC90cmFuc2xhdGlvbj4="
translation['7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGVuIGEgcmVwb3J0IHJlYWNoZWQgQWdlc2lsYXVzIHRoYXQgZWlnaHQgTGFjZWRhZW1vbmlhbnMgYW5kIG5lYXIgdGVuIHRob3VzYW5kIG9mIHRoZSBlbmVteSBoYWQgZmFsbGVuIGF0IHRoZSBiYXR0bGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb3JpbnRoIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDb3JpbnRoIj5Db3JpbnRoPC9wbGFjZU5hbWU+LCBpbnN0ZWFkIG9mIHNob3dpbmcgcGxlYXN1cmUsIGhlIGFjdHVhbGx5IGV4Y2xhaW1lZDog4oCcQWxhcyBmb3IgdGhlZSwgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+SGVsbGFzPC9wbGFjZU5hbWU+ISB0aG9zZSB3aG8gbm93IGxpZSBkZWFkIHdlcmUgZW5vdWdoIHRvIGRlZmVhdCBhbGwgdGhlIGJhcmJhcmlhbnMgaW4gYmF0dGxlIGhhZCB0aGV5IGxpdmVkIeKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZSBDb3JpbnRoaWFuIGV4aWxlcyB0b2xkIGhpbSB0aGF0IHRoZSBjaXR5IHdhcyBhYm91dCB0byBiZSBzdXJyZW5kZXJlZCB0byB0aGVtIGFuZCBwb2ludGVkIHRvIHRoZSBlbmdpbmVzIHdpdGggd2hpY2ggdGhleSB3ZXJlIGNvbmZpZGVudCBvZiB0YWtpbmcgdGhlIHdhbGxzLCBoZSB3b3VsZCBub3QgbWFrZSBhbiBhc3NhdWx0LCBkZWNsYXJpbmcgdGhhdCBHcmVlayBjaXRpZXMgb3VnaHQgbm90IHRvIGJlIGVuc2xhdmVkLCBidXQgY2hhc3RlbmVkLiDigJxBbmQgaWYs4oCdIGhlIGFkZGVkLCDigJx3ZSBhcmUgZ29pbmcgdG8gYW5uaWhpbGF0ZSB0aGUgZXJyaW5nIG1lbWJlcnMgb2Ygb3VyIG93biByYWNlLCBsZXQgdXMgYmV3YXJlIGxlc3Qgd2UgbGFjayBtZW4gdG8gaGVscCBpbiB0aGUgY29ucXVlc3Qgb2YgdGhlIGJhcmJhcmlhbnMu4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PciBhZ2FpbiwgaWYgaXQgaXMgaG9ub3VyYWJsZSB0byBoYXRlIHRoZSBQZXJzaWFuIGJlY2F1c2UgaW4gb2xkIGRheXMgaGUgc2V0IG91dCB0byBlbnNsYXZlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgYW5kIG5vdyBhbGxpZXMgaGltc2VsZiB3aXRoIHRoYXQgc2lkZSB3aGljaCBvZmZlcnMgaGltIHRoZSBwcm9zcGVjdCBvZiB3b3JraW5nIHRoZSBncmVhdGVyIG1pc2NoaWVmLCBtYWtlcyBnaWZ0cyB0byB0aG9zZSB3aG8sIGFzIGhlIGJlbGlldmVzLCB3aWxsIGluanVyZSB0aGUgR3JlZWtzIG1vc3QgaW4gcmV0dXJuLCBuZWdvdGlhdGVzIHRoZSBwZWFjZSB0aGF0IGhlIHRoaW5rcyBtb3N0IGNlcnRhaW4gdG8gcHJvZHVjZSB3YXIgYW1vbmcgdXMg4oCUIHdlbGwsIGV2ZXJ5b25lIGNhbiBzZWUgdGhlc2UgdGhpbmdzLCBidXQgd2hvIGV4Y2VwdCBBZ2VzaWxhdXMgaGFzIGV2ZXIgc3RyaXZlbiBlaXRoZXIgdG8gYnJpbmcgYWJvdXQgICB0aGUgcmV2b2x0IG9mIGEgdHJpYmUgZnJvbSB0aGUgUGVyc2lhbiwgb3IgdG8gc2F2ZSBhIHJldm9sdGluZyB0cmliZSBmcm9tIGRlc3RydWN0aW9uLCBvciBieSBzb21lIG1lYW5zIG9yIG90aGVyIHRvIGludm9sdmUgdGhlIEdyZWF0IEtpbmcgaW4gdHJvdWJsZSBzbyB0aGF0IGhlIHdpbGwgYmUgdW5hYmxlIHRvIGFubm95IHRoZSBHcmVla3M/IE5heSwgd2hlbiBoaXMgZmF0aGVybGFuZCB3YXMgYWN0dWFsbHkgYXQgd2FyIHdpdGggR3JlZWtzLCBoZSBkaWQgbm90IG5lZ2xlY3QgdGhlIGNvbW1vbiBnb29kIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgYnV0IHdlbnQgb3V0IHdpdGggYSBmbGVldCB0byBkbyB3aGF0IGhhcm0gaGUgY291bGQgdG8gdGhlIGJhcmJhcmlhbi4KPC90cmFuc2xhdGlvbj4="
translation['8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Bbm90aGVyIHF1YWxpdHkgdGhhdCBzaG91bGQgbm90IGdvIHVucmVjb3JkZWQgaXMgaGlzIHVyYmFuaXR5LiBGb3IgYWx0aG91Z2ggaGUgaGVsZCBob25vdXIgaW4gZmVlLCBhbmQgaGFkIHBvd2VyIGF0IGhpcyBiZWNrLCBhbmQgdG8gdGhlc2UgYWRkZWQgc292ZXJlaWdudHkg4oCUIHNvdmVyZWlnbnR5IG5vdCBwbG90dGVkIGFnYWluc3QgYnV0IHJlZ2FyZGVkIHdpdGggYWZmZWN0aW9uIOKAlCB5ZXQgbm8gdHJhY2VzIG9mIGFycm9nYW5jZSBjb3VsZCBoYXZlIGJlZW4gZGV0ZWN0ZWQgaW4gaGltLCB3aGVyZWFzIHNpZ25zIG9mIGEgZmF0aGVybHkgYWZmZWN0aW9uIGFuZCByZWFkaW5lc3MgdG8gc2VydmUgaGlzIGZyaWVuZHMsIGV2ZW4gaWYgdW5zb3VnaHQsIHdlcmUgZXZpZGVudC4KPC90cmFuc2xhdGlvbj4="
translation['8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkhlIGRlbGlnaHRlZCwgbW9yZW92ZXIsIHRvIHRha2UgaGlzIHBhcnQgaW4gbGlnaHQgdGFsaywgeWV0IGhlIHNob3dlZCBhbiBlYWdlciBzeW1wYXRoeSB3aXRoIGZyaWVuZHMgaW4gYWxsIHRoZWlyIHNlcmlvdXMgY29uY2VybnMuIFRoYW5rcyB0byBoaXMgb3B0aW1pc20sIGdvb2QgaHVtb3VyLCBhbmQgY2hlZXJmdWxuZXNzIGhlIHdhcyBhIGNlbnRyZSBvZiBhdHRyYWN0aW9uIHRvIG1hbnksIHdobyBjYW1lIG5vdCBtZXJlbHkgZm9yIHB1cnBvc2VzIG9mIGJ1c2luZXNzLCBidXQgdG8gcGFzcyB0aGUgZGF5IG1vcmUgcGxlYXNhbnRseS4gTGl0dGxlIGluY2xpbmVkIHRvIGJvYXN0ZnVsbmVzcyBoaW1zZWxmLCBoZSBoZWFyZCB3aXRob3V0IGFubm95YW5jZSB0aGUgc2VsZi1wcmFpc2Ugb2Ygb3RoZXJzLCB0aGlua2luZyB0aGF0LCBieSBpbmR1bGdpbmcgaW4gaXQsIHRoZXkgZGlkIG5vIGhhcm0gYW5kIGdhdmUgZWFybmVzdCBvZiBoaWdoIGVuZGVhdm91ci4KPC90cmFuc2xhdGlvbj4="
translation['8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBvdGhlciBoYW5kLCBvbmUgbXVzdCBub3Qgb21pdCBhIHJlZmVyZW5jZSB0byB0aGUgZGlnbml0eSB0aGF0IGhlIHNob3dlZCBvbiBhcHByb3ByaWF0ZSBvY2Nhc2lvbnMuIFRodXMsIHdoZW4gdGhlIFBlcnNpYW4gZW52b3kgd2hvIGNhbWUgd2l0aCBDYWxsZWFzLCB0aGUgTGFjZWRhZW1vbmlhbiwgaGFuZGVkIGhpbSBhIGxldHRlciBmcm9tIHRoZSBHcmVhdCBLaW5nIGNvbnRhaW5pbmcgb2ZmZXJzIG9mIGZyaWVuZHNoaXAgYW5kIGhvc3BpdGFsaXR5LCBoZSBkZWNsaW5lZCB0byBhY2NlcHQgaXQuIOKAnFRlbGwgaGlzIE1hamVzdHks4oCdIGhlIHNhaWQgdG8gdGhlIGJlYXJlciwg4oCcdGhhdCB0aGVyZSBpcyBubyBuZWVkIGZvciBoaW0gdG8gc2VuZCBtZSBwcml2YXRlIGxldHRlcnMsIGJ1dCwgaWYgaGUgICBnaXZlcyBwcm9vZiBvZiBmcmllbmRzaGlwIGZvciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTA2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMDY1Ij5MYWNlZGFlbW9uPC9wbGFjZU5hbWU+LCBhbmQgZ29vZHdpbGwgdG93YXJkcyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIEkgb24gbXkgcGFydCB3aWxsIGJlIGhpcyBmcmllbmQgd2l0aCBhbGwgbXkgaGVhcnQuIEJ1dCBpZiBoZSBpcyBmb3VuZCBwbG90dGluZyBhZ2FpbnN0IHRoZW0sIGxldCBoaW0gbm90IGhvcGUgdG8gaGF2ZSBhIGZyaWVuZCBpbiBtZSwgaG93ZXZlciBtYW55IGxldHRlcnMgSSBtYXkgcmVjZWl2ZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkluIHRoaXMgY29udGVtcHQgZm9yIHRoZSBraW5nJ3MgaG9zcGl0YWxpdHksIGFzIG5vdGhpbmcgaW4gY29tcGFyaXNvbiB3aXRoIHRoZSBhcHByb3ZhbCBvZiB0aGUgR3JlZWtzLCBJIGZpbmQgb25lIG1vcmUgcmVhc29uIGZvciBwcmFpc2luZyBBZ2VzaWxhdXMuIEFkbWlyYWJsZSB0b28gd2FzIGhpcyBvcGluaW9uIHRoYXQgaXQgaXMgbm90IGZvciB0aGUgcnVsZXIgd2l0aCB0aGUgZGVlcGVyIGNvZmZlcnMgYW5kIHRoZSBsb25nZXIgcm9sbCBvZiBzdWJqZWN0cyB0byBzZXQgaGltc2VsZiBhYm92ZSBoaXMgcml2YWwsIGJ1dCBmb3IgaGltIHdobyBpcyB0aGUgYmV0dGVyIGxlYWRlciBvZiB0aGUgYmV0dGVyIHBlb3BsZS4KPC90cmFuc2xhdGlvbj4="
translation['8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZ2FpbiwgYW4gaW5zdGFuY2Ugb2YgaGlzIGZvcmVzaWdodCB0aGF0IEkgZmluZCB3b3J0aHkgb2YgcHJhaXNlIGlzIHRoaXM6IGJlbGlldmluZyBpdCB0byBiZSBnb29kIGZvciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gdGhhdCBhcyBtYW55IHNhdHJhcHMgYXMgcG9zc2libGUgc2hvdWxkIHJldm9sdCBmcm9tIHRoZSBraW5nLCBoZSB3YXMgbm90IHByZXZhaWxlZCBvbiBlaXRoZXIgYnkgZ2lmdHMgb3IgYnkgdGhlIGtpbmcncyBwb3dlciB0byBhY2NlcHQgaGlzIGhvc3BpdGFsaXR5LCBidXQgd2FzIGNhcmVmdWwgbm90IHRvIGdpdmUgY2F1c2UgdG8gdGhvc2Ugd2hvIHdhbnRlZCB0byByZXZvbHQgZm9yIG1pc3RydXN0aW5nIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['8.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSBpcyB5ZXQgYW5vdGhlciBzaWRlIG9mIGhpcyBjaGFyYWN0ZXIgdGhhdCBldmVyeW9uZSBtdXN0IGFkbWlyZS4gSXQgd2FzIHRoZSBiZWxpZWYgb2YgdGhlIFBlcnNpYW4ga2luZyB0aGF0IGJ5IHBvc3Nlc3NpbmcgaGltc2VsZiBvZiBjb2xvc3NhbCB3ZWFsdGgsIGhlIHdvdWxkIHB1dCBhbGwgdGhpbmdzIGluIHN1YmplY3Rpb24gdG8gaGltc2VsZi4gSW4gdGhpcyBiZWxpZWYgaGUgdHJpZWQgdG8gZW5ncm9zcyBhbGwgdGhlIGdvbGQsIGFsbCB0aGUgc2lsdmVyIGFuZCBhbGwgdGhlIG1vc3QgY29zdGx5IHRoaW5ncyBpbiB0aGUgd29ybGQuIEFnZXNpbGF1cywgb24gdGhlIGNvbnRyYXJ5LCBhZG9wdGVkIHN1Y2ggYSBzaW1wbGUgc3R5bGUgaW4gaGlzIGhvbWUgdGhhdCBoZSBuZWVkZWQgbm9uZSBvZiB0aGVzZSB0aGluZ3MuCjwvdHJhbnNsYXRpb24+"
translation['8.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPklmIGFueW9uZSBkb3VidHMgdGhpcywgbGV0IGhpbSBtYXJrIHdoYXQgc29ydCBvZiBhIGhvdXNlIGNvbnRlbnRlZCBoaW0sIGFuZCBpbiBwYXJ0aWN1bGFyLCBsZXQgaGltIGxvb2sgYXQgdGhlIGRvb3JzOiBvbmUgbWlnaHQgaW1hZ2luZSB0aGF0IHRoZXkgd2VyZSB0aGUgdmVyeSBkb29ycyB0aGF0IEFyaXN0b2RlbXVzLCB0aGUgZGVzY2VuZGFudCBvZiBIZXJhY2xlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BcmlzdG9kZW11cyB3YXMgZ3JlYXQtZ3JhbmRzb24gb2YgSHlsbHVzLCBzb24gb2YgSGVyYWNsZXMuIFhlbm9waG9uIGZvbGxvd3MgdGhlIExhY2VkYWVtb25pYW4gYWNjb3VudCwgYWNjb3JkaW5nIHRvIHdoaWNoIEFyaXN0b2RlbXVzIGhpbXNlbGYgd2FzIGxlYWRlciBhdCB0aGUgdGltZSB3aGVuIHRoZSBMYWNlZGFlbW9uaWFucyBvYnRhaW5lZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gKDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhkdC4gNi41MiIgdmFsaWQ9InllcyI+SGR0LiA2LjUyPC9iaWJsPikuIEhpcyBzb25zLCBFdXJ5c3RoZW5lcyBhbmQgUHJvY2xlcywgYmVjYW1lIHRoZSBmaXJzdCBqb2ludC1raW5ncy48L25vdGU+IHNldCB1cCB3aXRoIGhpcyAgIG93biBoYW5kcyBpbiB0aGUgZGF5cyBvZiBoaXMgaG9tZS1jb21pbmcuIExldCBoaW0gdHJ5IHRvIHBpY3R1cmUgdGhlIHNjZW5lIHdpdGhpbjsgbm90ZSBob3cgaGUgZW50ZXJ0YWluZWQgb24gZGF5cyBvZiBzYWNyaWZpY2UsIGhlYXIgaG93IGhpcyBkYXVnaHRlciB1c2VkIHRvIGdvIGRvd24gdG8gQW15Y2xhZTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiAoPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGR0LiA2LjUyIiB2YWxpZD0ieWVzIj5IZHQuIDYuNTI8L2JpYmw+KS4gSGlzIHNvbnMsIEV1cnlzdGhlbmVzIGFuZCBQcm9jbGVzLCBiZWNhbWUgdGhlIGZpcnN0IGpvaW50LWtpbmdzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UbyB0aGUgZmVhc3Qgb2YgSHlhY2ludGh1czsgc2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gQWdlcy4gMi4xNyIgdmFsaWQ9InllcyI+WGVuLiBBZ2VzLiAyLjE3PC9iaWJsPi48L25vdGU+IGluIGEgcHVibGljIGNhci4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBBZ2VzLiAyLjE3IiB2YWxpZD0ieWVzIj5YZW4uIEFnZXMuIDIuMTc8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['8.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBzbywgdGhhbmtzIHRvIHRoaXMgbmljZSBhZGp1c3RtZW50IG9mIGhpcyBleHBlbmRpdHVyZSB0byBoaXMgaW5jb21lLCBoZSB3YXMgbmV2ZXIgY29tcGVsbGVkIHRvIGNvbW1pdCBhbiBhY3Qgb2YgaW5qdXN0aWNlIGZvciB0aGUgc2FrZSBvZiBtb25leS4gRG91YnRsZXNzIGl0IGlzIHRob3VnaHQgbm9ibGUgdG8gYnVpbGQgb25lc2VsZiBmb3J0cmVzc2VzIGltcHJlZ25hYmxlIHRvIGFuIGVuZW15OiBidXQgaW4gbXkganVkZ21lbnQgaXQgaXMgZmFyIG5vYmxlciB0byBmb3J0aWZ5IG9uZSdzIG93biBzb3VsIGFnYWluc3QgYWxsIHRoZSBhc3NhdWx0cyBvZiBsdWNyZSwgb2YgcGxlYXN1cmUsIGFuZCBvZiBmZWFyLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHdpbGwgbmV4dCBwb2ludCBvdXQgdGhlIGNvbnRyYXN0IGJldHdlZW4gaGlzIGJlaGF2aW91ciBhbmQgdGhlIGltcG9zdHVyZSBvZiB0aGUgUGVyc2lhbiBraW5nLiBJbiB0aGUgZmlyc3QgcGxhY2UgdGhlIFBlcnNpYW4gdGhvdWdodCBoaXMgZGlnbml0eSByZXF1aXJlZCB0aGF0IGhlIHNob3VsZCBiZSBzZWxkb20gc2VlbjogQWdlc2lsYXVzIGRlbGlnaHRlZCB0byBiZSBjb25zdGFudGx5IHZpc2libGUsIGJlbGlldmluZyB0aGF0LCB3aGVyZWFzIHNlY3JlY3kgd2FzIGJlY29taW5nIHRvIGFuIHVnbHkgY2FyZWVyLCB0aGUgbGlnaHQgc2hlZCBsdXN0cmUgb24gYSBsaWZlIG9mIG5vYmxlIHB1cnBvc2UuCjwvdHJhbnNsYXRpb24+"
translation['9.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSBzZWNvbmQgcGxhY2UsIHRoZSBvbmUgcHJpZGVkIGhpbXNlbGYgb24gYmVpbmcgZGlmZmljdWx0IG9mIGFwcHJvYWNoOiB0aGUgb3RoZXIgd2FzIGdsYWQgdG8gbWFrZSBoaW1zZWxmIGFjY2Vzc2libGUgdG8gYWxsLiBBbmQgdGhlIG9uZSBhZmZlY3RlZCB0YXJkaW5lc3MgaW4gbmVnb3RpYXRpb246IHRoZSBvdGhlciB3YXMgYmVzdCBwbGVhc2VkIHdoZW4gaGUgY291bGQgZGlzbWlzcyBoaXMgc3VpdG9ycyBxdWlja2x5IHdpdGggdGhlaXIgcmVxdWVzdHMgZ3JhbnRlZC4KPC90cmFuc2xhdGlvbj4="
translation['9.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGUgbWF0dGVyIG9mIHBlcnNvbmFsIGNvbWZvcnQsIG1vcmVvdmVyLCBpdCBpcyB3b3J0aCBub3RpY2luZyBob3cgbXVjaCBzaW1wbGVyIGFuZCBob3cgbXVjaCBtb3JlIGVhc2lseSBzYXRpc2ZpZWQgd2VyZSB0aGUgdGFzdGVzIG9mIEFnZXNpbGF1cy4gVGhlIFBlcnNpYW4ga2luZyBoYXMgdmludG5lcnMgc2NvdXJpbmcgZXZlcnkgbGFuZCB0byBmaW5kIHNvbWUgZHJpbmsgdGhhdCB3aWxsIHRpY2tsZSBoaXMgcGFsYXRlOyBhbiBhcm15IG9mIGNvb2tzIGNvbnRyaXZlcyBkaXNoZXMgZm9yIGhpcyBkZWxpZ2h0OyBhbmQgdGhlIHRyb3VibGUgaGlzIGxhY2tleXMgdGFrZSB0aGF0IGhlIG1heSBzbGVlcCBpcyBpbmRlc2NyaWJhYmxlLiBCdXQgQWdlc2lsYXVzLCB0aGFua3MgdG8gaGlzIGxvdmUgb2YgICB0b2lsLCBlbmpveWVkIGFueSBkcmluayB0aGF0IHdhcyBhdCBoYW5kIGFuZCBhbnkgZm9vZCB0aGF0IGNhbWUgaGlzIHdheTsgYW5kIGFueSBwbGFjZSB3YXMgZ29vZCBlbm91Z2ggdG8gZ2l2ZSBoaW0gc29mdCByZXBvc2UuCjwvdHJhbnNsYXRpb24+"
translation['9.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk5vciB3YXMgaGUgaGFwcHkgb25seSBpbiB0aGlzIGJlaGF2aW91cjogaGUgd2FzIGFsc28gcHJvdWQgdG8gcmVmbGVjdCB0aGF0LCB3aGlsZSBoZSB3YXMgc3Vycm91bmRlZCB3aXRoIGdvb2QgY2hlZXIsIGhlIHNhdyB0aGUgYmFyYmFyaWFuIGNvbnN0cmFpbmVkIHRvIGRyYXcgZnJvbSB0aGUgZW5kcyBvZiB0aGUgd29ybGQgdGhlIG1hdGVyaWFsIGZvciBoaXMgZW5qb3ltZW50LCBpZiBoZSB3b3VsZCBsaXZlIHdpdGhvdXQgZGlzY29tZm9ydC4KPC90cmFuc2xhdGlvbj4="
translation['9.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBpdCBjaGVlcmVkIGhpcyBoZWFydCB0byBrbm93IHRoYXQgaGUgY291bGQgYWNjb21tb2RhdGUgaGltc2VsZiB0byB0aGUgZGl2aW5lIG9yZGVyaW5nIG9mIHRoZSB3b3JsZCwgd2hlcmVhcyBoZSBzYXcgaGlzIHJpdmFsIHNodW5uaW5nIGhlYXQgYW5kIHNodW5uaW5nIGNvbGQgdGhyb3VnaCB3ZWFrbmVzcyBvZiBjaGFyYWN0ZXIsIGltaXRhdGluZyB0aGUgbGlmZSwgbm90IG9mIGJyYXZlIG1lbiwgYnV0IG9mIHRoZSB3ZWFrZXN0IG9mIHRoZSBicnV0ZXMuCjwvdHJhbnNsYXRpb24+"
translation['9.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdXJlbHksIHRvbywgaGUgZGlkIHdoYXQgd2FzIHNlZW1seSBhbmQgZGlnbmlmaWVkIHdoZW4gaGUgYWRvcm5lZCBoaXMgb3duIGVzdGF0ZSB3aXRoIHdvcmtzIGFuZCBwb3NzZXNzaW9ucyB3b3J0aHkgb2YgYSBtYW4sIGtlZXBpbmcgbWFueSBob3VuZHMgYW5kIHdhciBob3JzZXMsIGJ1dCBwZXJzdWFkZWQgaGlzIHNpc3RlciBDeW5pc2NhIHRvIGJyZWVkIGNoYXJpb3QgaG9yc2VzLCBhbmQgc2hvd2VkIGJ5IGhlciB2aWN0b3J5IHRoYXQgc3VjaCBhIHN0dWQgbWFya3MgdGhlIG93bmVyIGFzIGEgcGVyc29uIG9mIHdlYWx0aCwgYnV0IG5vdCBuZWNlc3NhcmlseSBvZiBtZXJpdC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIaWVybyAxMS41IiB2YWxpZD0ieWVzIj5YZW4uIEhpZXJvIDExLjU8L2JpYmw+PC9ub3RlPgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEhpZXJvIDExLjUiIHZhbGlkPSJ5ZXMiPlhlbi4gSGllcm8gMTEuNTwvYmlibD48L3RyYW5zbGF0aW9uPg=="
translation['9.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkhvdyBjbGVhcmx5IGhpcyB0cnVlIG5vYmlsaXR5IGNvbWVzIG91dCBpbiBoaXMgb3BpbmlvbiB0aGF0IGEgdmljdG9yeSBpbiB0aGUgY2hhcmlvdCByYWNlIG92ZXIgcHJpdmF0ZSBjaXRpemVucyB3b3VsZCBhZGQgbm90IGEgd2hpdCB0byBoaXMgcmVub3duOyBidXQgaWYgaGUgaGVsZCB0aGUgZmlyc3QgcGxhY2UgaW4gdGhlIGFmZmVjdGlvbiBvZiB0aGUgcGVvcGxlLCBnYWluZWQgdGhlIG1vc3QgZnJpZW5kcyBhbmQgYmVzdCBhbGwgb3ZlciB0aGUgd29ybGQsIG91dHN0cmlwcGVkIGFsbCBvdGhlcnMgaW4gc2VydmluZyBoaXMgZmF0aGVybGFuZCBhbmQgaGlzIGNvbXJhZGVzIGFuZCBpbiBwdW5pc2hpbmcgaGlzIGFkdmVyc2FyaWVzLCB0aGVuIGhlIHdvdWxkIGJlIHZpY3RvciBpbiB0aGUgbm9ibGVzdCBhbmQgbW9zdCBzcGxlbmRpZCBjb250ZXN0cywgYW5kIHdvdWxkIGdhaW4gaGlnaCByZW5vd24gYm90aCBpbiBsaWZlIGFuZCBhZnRlciBkZWF0aC4KPC90cmFuc2xhdGlvbj4="
translation['10.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3VjaCwgdGhlbiwgYXJlIHRoZSBxdWFsaXRpZXMgZm9yIHdoaWNoIEkgcHJhaXNlICAgQWdlc2lsYXVzLiBUaGVzZSBhcmUgdGhlIG1hcmtzIHRoYXQgZGlzdGluZ3Vpc2ggaGltLCBzYXksIGZyb20gdGhlIG1hbiB3aG8sIGxpZ2h0aW5nIG9uIGEgdHJlYXN1cmUsIGJlY29tZXMgd2VhbHRoaWVyIGJ1dCBub3Qgd2lzZXIgaW4gYnVzaW5lc3MsIG9yIGZyb20gdGhlIG1hbiB3aG8gd2lucyB2aWN0b3J5IHRocm91Z2ggYW4gb3V0YnJlYWsgb2Ygc2lja25lc3MgYW1vbmcgdGhlIGVuZW15LCBhbmQgYWRkcyB0byBoaXMgc3VjY2VzcyBidXQgbm90IHRvIGhpcyBrbm93bGVkZ2Ugb2Ygc3RyYXRlZ3kuIFRoZSBtYW4gd2hvIGlzIGZvcmVtb3N0IGluIGVuZHVyYW5jZSB3aGVuIHRoZSBob3VyIGNvbWVzIGZvciB0b2lsLCBpbiB2YWxvdXIgd2hlbiB0aGUgY29udGVzdCBjYWxscyBmb3IgY291cmFnZSwgaW4gd2lzZG9tIHdoZW4gdGhlIG5lZWQgaXMgZm9yIGNvdW5zZWwg4oCUIGhlIGlzIHRoZSBtYW4sIEkgdGhpbmssIHdobyBtYXkgZmFpcmx5IGJlIHJlZ2FyZGVkIGFzIHRoZSBwZXJmZWN0IGVtYm9kaW1lbnQgb2YgZ29vZG5lc3MuCjwvdHJhbnNsYXRpb24+"
translation['10.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPklmIGxpbmUgYW5kIHJ1bGUgYXJlIGEgbm9ibGUgZGlzY292ZXJ5IG9mIG1hbiBhcyBhaWRzIHRvIHRoZSBwcm9kdWN0aW9uIG9mIGdvb2Qgd29yaywgSSB0aGluayB0aGF0IHRoZSB2aXJ0dWUgb2YgQWdlc2lsYXVzIG1heSB3ZWxsIHN0YW5kIGFzIGEgbm9ibGUgZXhhbXBsZSBmb3IgdGhvc2UgdG8gZm9sbG93IHdobyB3aXNoIHRvIG1ha2UgbW9yYWwgZ29vZG5lc3MgYSBoYWJpdC4gRm9yIHdobyB0aGF0IGltaXRhdGVzIGEgcGlvdXMsIGEganVzdCwgYSBzb2JlciwgYSBzZWxmLWNvbnRyb2xsZWQgbWFuLCBjYW4gY29tZSB0byBiZSB1bnJpZ2h0ZW91cywgdW5qdXN0LCB2aW9sZW50LCB3YW50b24/IEluIHBvaW50IG9mIGZhY3QsIEFnZXNpbGF1cyBwcmlkZWQgaGltc2VsZiBsZXNzIG9uIHJlaWduaW5nIG92ZXIgb3RoZXJzIHRoYW4gb24gcnVsaW5nIGhpbXNlbGYsIGxlc3Mgb24gbGVhZGluZyB0aGUgcGVvcGxlIGFnYWluc3QgdGhlaXIgZW5lbWllcyB0aGFuIG9uIGd1aWRpbmcgdGhlbSB0byBhbGwgdmlydHVlLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ib3dldmVyLCBsZXQgaXQgbm90IGJlIHRob3VnaHQsIGJlY2F1c2Ugb25lIHdob3NlIGxpZmUgaXMgZW5kZWQgaXMgdGhlIHRoZW1lIG9mIG15IHByYWlzZSwgdGhhdCB0aGVzZSB3b3JkcyBhcmUgbWVhbnQgZm9yIGEgZnVuZXJhbCBkaXJnZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHJlZmVyZW5jZSBpcyB0byB0aGUgY2VyZW1vbmlhbCBoeW1ucyBzdW5nIGF0IG9yIGFmdGVyIGZ1bmVyYWxzLCB3aGljaCBvZiBjb3Vyc2UgY29udGFpbmVkIG11Y2ggdGhhdCB3b3VsZCBub3QgaGF2ZSBiZWVuIHNhaWQgb3Igc3VuZyBpbiB0aGUgaGVybydzIGxpZmUtdGltZS48L25vdGU+IFRoZXkgYXJlIGZhciBtb3JlIHRydWx5IHRoZSBsYW5ndWFnZSBvZiBldWxvZ3kuIEluIHRoZSBmaXJzdCBwbGFjZSB0aGUgd29yZHMgbm93IGFwcGxpZWQgdG8gaGltIGFyZSB0aGUgdmVyeSBzYW1lIHRoYXQgaGUgaGVhcmQgaW4gaGlzIGxpZmV0aW1lLiBBbmQsIGluIHRoZSBzZWNvbmQgcGxhY2UsIHdoYXQgdGhlbWUgaXMgbGVzcyBhcHByb3ByaWF0ZSB0byBhIGRpcmdlIHRoYW4gYSBsaWZlIG9mIGZhbWUgYW5kIGEgZGVhdGggd2VsbC10aW1lZD8gV2hhdCBtb3JlIHdvcnRoeSBvZiBldWxvZ2llcyB0aGFuIHZpY3RvcmllcyBtb3N0IGdsb3Jpb3VzIGFuZCBkZWVkcyBvZiBzb3ZlcmVpZ24gd29ydGg/CjwvdHJhbnNsYXRpb24+"
translation['10.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkp1c3RseSBtYXkgdGhlIG1hbiBiZSBjb3VudGVkIGJsZXNzZWQgd2hvIHdhcyBpbiBsb3ZlIHdpdGggZ2xvcnkgZnJvbSBlYXJseSB5b3V0aCBhbmQgd29uIG1vcmUgb2YgaXQgdGhhbiBhbnkgbWFuIG9mIGhpcyBhZ2U7IHdobywgYmVpbmcgYnkgbmF0dXJlIHZlcnkgY292ZXRvdXMgICBvZiBob25vdXIsIG5ldmVyIG9uY2Uga25ldyBkZWZlYXQgZnJvbSB0aGUgZGF5IHRoYXQgaGUgYmVjYW1lIGEga2luZzsgd2hvLCBhZnRlciBsaXZpbmcgdG8gdGhlIHV0bW9zdCBsaW1pdCBvZiBodW1hbiBsaWZlLCBkaWVkIHdpdGhvdXQgb25lIGJsdW5kZXIgdG8gaGlzIGFjY291bnQsIGVpdGhlciBjb25jZXJuaW5nIHRoZSBtZW4gd2hvbSBoZSBsZWQgb3IgaW4gZGVhbGluZyB3aXRoIHRob3NlIG9uIHdob20gaGUgbWFkZSB3YXIuCjwvdHJhbnNsYXRpb24+"
translation['11.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSBwcm9wb3NlIHRvIGdvIHRocm91Z2ggdGhlIHN0b3J5IG9mIGhpcyB2aXJ0dWUgYWdhaW4sIGFuZCB0byBzdW1tYXJpemUgaXQsIGluIG9yZGVyIHRoYXQgdGhlIHByYWlzZSBvZiBpdCBtYXkgYmUgbW9yZSBlYXNpbHkgcmVtZW1iZXJlZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWdlc2lsYXVzIHJldmVyZW5jZWQgaG9seSBwbGFjZXMgZXZlbiB3aGVuIHRoZXkgYmVsb25nZWQgdG8gYW4gZW5lbXksIHRoaW5raW5nIHRoYXQgaGUgb3VnaHQgdG8gbWFrZSBhbGxpZXMgb2YgdGhlIGdvZHMgbm8gbGVzcyBpbiBob3N0aWxlIHRoYW4gaW4gZnJpZW5kbHkgY291bnRyaWVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UbyBzdXBwbGlhbnRzIG9mIHRoZSBnb2RzLCBldmVuIGlmIGhpcyBmb2VzLCBoZSBkaWQgbm8gdmlvbGVuY2UsIGJlbGlldmluZyBpdCB1bnJlYXNvbmFibGUgdG8gY2FsbCByb2JiZXJzIG9mIHRlbXBsZXMgc2FjcmlsZWdpb3VzIGFuZCB5ZXQgdG8gY29uc2lkZXIgdGhvc2Ugd2hvIGRyYWdnZWQgc3VwcGxpYW50cyBmcm9tIGFsdGFycyBwaW91cyBtZW4uCjwvdHJhbnNsYXRpb24+"
translation['11.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NeSBoZXJvIG5ldmVyIGZhaWxlZCB0byBkd2VsbCBvbiBoaXMgb3BpbmlvbiB0aGF0IHRoZSBnb2RzIGhhdmUgcGxlYXN1cmUgaW4gcmlnaHRlb3VzIGRlZWRzIG5vIGxlc3MgdGhhbiBpbiBob2x5IHRlbXBsZXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluIHRoZSBob3VyIG9mIHN1Y2Nlc3MgaGUgd2FzIG5vdCBwdWZmZWQgdXAgd2l0aCBwcmlkZSwgYnV0IGdhdmUgdGhhbmtzIHRvIHRoZSBnb2RzLiBIZSBvZmZlcmVkIG1vcmUgc2FjcmlmaWNlcyB3aGVuIGNvbmZpZGVudCB0aGFuIHByYXllcnMgd2hlbiBpbiBkb3VidC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGUgd2FzIHdvbnQgdG8gbG9vayBjaGVlcmZ1bCB3aGVuIGluIGZlYXIsIGFuZCB0byBiZSBodW1ibGUgd2hlbiBzdWNjZXNzZnVsLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PZiBoaXMgZnJpZW5kcyBoZSB3ZWxjb21lZCBtb3N0IGhlYXJ0aWx5IG5vdCB0aGUgbW9zdCBwb3dlcmZ1bCwgYnV0IHRoZSBtb3N0IGRldm90ZWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhlIGhhdGVkIG5vdCB0aGUgbWFuIHdobyBkZWZlbmRlZCBoaW1zZWxmIHdoZW4gaW5qdXJlZCwgYnV0IHN1Y2ggYXMgc2hvd2VkIG5vIGdyYXRpdHVkZSBmb3IgYSBmYXZvdXIuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhlIHJlam9pY2VkIHRvIHNlZSB0aGUgYXZhcmljaW91cyBwb29yIGFuZCB0byBlbnJpY2ggdGhlIHVwcmlnaHQsIGRlc2lyaW5nIHRvIHJlbmRlciByaWdodCBtb3JlIHByb2ZpdGFibGUgdGhhbiB3cm9uZy4KPC90cmFuc2xhdGlvbj4="
translation['11.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3YXMgaGlzIGhhYml0IHRvIGFzc29jaWF0ZSB3aXRoIGFsbCBzb3J0cyBhbmQgY29uZGl0aW9ucyBvZiBtZW4sIGJ1dCB0byBiZSBpbnRpbWF0ZSB3aXRoIHRoZSBnb29kLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuZXZlciBoZSBoZWFyZCBtZW4gcHJhaXNlIG9yIGJsYW1lIG90aGVycywgaGUgdGhvdWdodCB0aGF0IGhlIGdhaW5lZCBhcyBtdWNoIGluc2lnaHQgaW50byB0aGUgY2hhcmFjdGVyIG9mIHRoZSBjcml0aWNzIGFzIG9mIHRoZSBwZXJzb25zIHRoZXkgY3JpdGljaXplZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SWYgZnJpZW5kcyBwcm92ZWQgZGVjZWl2ZXJzIGhlIGZvcmVib3JlIHRvIGJsYW1lIHRoZWlyIHZpY3RpbXMsIGJ1dCBoZSBoZWFwZWQgcmVwcm9hY2hlcyBvbiB0aG9zZSB3aG8gbGV0IGFuIGVuZW15IGRlY2VpdmUgdGhlbTsgYW5kIGhlIHByb25vdW5jZWQgZGVjZXB0aW9uIGNsZXZlciBvciB3aWNrZWQgYWNjb3JkaW5nIGFzIGl0IHdhcyBwcmFjdGlzZWQgb24gdGhlIHN1c3BpY2lvdXMgb3IgdGhlIGNvbmZpZGluZy4KPC90cmFuc2xhdGlvbj4="
translation['11.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgcHJhaXNlIG9mIHRob3NlIHdobyB3ZXJlIHByZXBhcmVkIHRvIGNlbnN1cmUgZmF1bHRzIHRoZXkgZGlzYXBwcm92ZWQgd2FzIHBsZWFzaW5nIHRvIGhpbSwgYW5kIGhlIG5ldmVyIHJlc2VudGVkIGNhbmRvdXIsIGJ1dCBhdm9pZGVkIGRpc3NpbXVsYXRpb24gbGlrZSBhIHNuYXJlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TbGFuZGVyZXJzIGhlIGhhdGVkIG1vcmUgdGhhbiB0aGlldmVzLCBkZWVtaW5nIGxvc3Mgb2YgZnJpZW5kcyBncmF2ZXIgdGhhbiBsb3NzIG9mIG1vbmV5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBtaXN0YWtlcyBvZiBwcml2YXRlIHBlcnNvbnMgaGUganVkZ2VkIGxlbmllbnRseSwgYmVjYXVzZSBmZXcgaW50ZXJlc3RzIHN1ZmZlciBieSB0aGVpciBpbmNvbXBldGVuY2U7IGJ1dCB0aGUgZXJyb3JzIG9mIHJ1bGVycyBoZSB0cmVhdGVkIGFzIHNlcmlvdXMsIHNpbmNlIHRoZXkgbGVhZCB0byBtYW55IHRyb3VibGVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5LaW5nc2hpcCwgaGUgaGVsZCwgZGVtYW5kcyBub3QgaW5kb2xlbmNlLCBidXQgbWFubHkgdmlydHVlLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSB3b3VsZCBub3QgYWxsb3cgYSBzdGF0dWUgb2YgaGltc2VsZiB0byBiZSBzZXQgdXAsIHRob3VnaCBtYW55IHdhbnRlZCB0byBnaXZlIGhpbSBvbmUsIGJ1dCBvbiBtZW1vcmlhbHMgb2YgaGlzIG1pbmQgaGUgbGFib3VyZWQgdW5jZWFzaW5nbHksIHRoaW5raW5nIHRoZSBvbmUgdG8gYmUgdGhlIHNjdWxwdG9yJ3Mgd29yaywgdGhlIG90aGVyIGhpcyBvd24sIHRoZSBvbmUgYXBwcm9wcmlhdGUgdG8gdGhlIHJpY2gsIHRoZSBvdGhlciB0byB0aGUgZ29vZC4KPC90cmFuc2xhdGlvbj4="
translation['11.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGUgdXNlIG9mIG1vbmV5IGhlIHdhcyBub3Qgb25seSBqdXN0IGJ1dCBnZW5lcm91cywgdGhpbmtpbmcgdGhhdCBhIGp1c3QgbWFuIG1heSBiZSBjb250ZW50IHRvIGxlYXZlIG90aGVyIG1lbidzIG1vbmV5IGFsb25lLCBidXQgdGhlIGdlbmVyb3VzIG1hbiBpcyByZXF1aXJlZCBhbHNvIHRvIHNwZW5kIGhpcyBvd24gaW4gdGhlIHNlcnZpY2Ugb2Ygb3RoZXJzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSB3YXMgZXZlciBnb2QtZmVhcmluZywgYmVsaWV2aW5nIHRoYXQgdGhleSB3aG8gYXJlIGxpdmluZyBsaWZlIHdlbGwgYXJlIG5vdCB5ZXQgaGFwcHksIGJ1dCBvbmx5IHRoZXkgd2hvIGhhdmUgZGllZCBnbG9yaW91c2x5IGFyZSBibGVzc2VkLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSBoZWxkIGl0IGEgZ3JlYXRlciBjYWxhbWl0eSB0byBuZWdsZWN0IHRoYXQgd2hpY2ggaXMgZ29vZCBrbm93aW5nbHkgdGhhbiBpbiBpZ25vcmFuY2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vIGZhbWUgYXR0cmFjdGVkIGhpbSB1bmxlc3MgaGUgZGlkIHRoZSByaWdodCB3b3JrIHRvIGFjaGlldmUgaXQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhlIHNlZW1lZCB0byBtZSBvbmUgb2YgdGhlIGZldyBtZW4gd2hvIGNvdW50IHZpcnR1ZSBub3QgYSB0YXNrIHRvIGJlIGVuZHVyZWQgYnV0IGEgY29tZm9ydCB0byBiZSBlbmpveWVkLiBBdCBhbnkgcmF0ZSBwcmFpc2UgZ2F2ZSBoaW0gbW9yZSBwbGVhc3VyZSB0aGFuIG1vbmV5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Db3VyYWdlLCBhcyBoZSBkaXNwbGF5ZWQgaXQsIHdhcyBqb2luZWQgd2l0aCBwcnVkZW5jZSByYXRoZXIgdGhhbiBib2xkbmVzcywgYW5kIHdpc2RvbSBoZSBjdWx0aXZhdGVkIG1vcmUgYnkgYWN0aW9uIHRoYW4gaW4gd29yZHMuCjwvdHJhbnNsYXRpb24+"
translation['11.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VmVyeSBnZW50bGUgd2l0aCBmcmllbmRzLCBoZSB3YXMgdmVyeSBmb3JtaWRhYmxlIHRvIGVuZW1pZXM7IGFuZCB3aGlsZSBoZSByZXNpc3RlZCBmYXRpZ3VlIG9ic3RpbmF0ZWx5LCBoZSB5aWVsZGVkIG1vc3QgcmVhZGlseSB0byBhIGNvbXJhZGUsIHRob3VnaCBmYWlyIGRlZWRzIGFwcGVhbGVkIG1vcmUgdG8gaGlzIGhlYXJ0IHRoYW4gZmFpciBmYWNlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG8gbW9kZXJhdGlvbiBpbiB0aW1lcyBvZiBwcm9zcGVyaXR5IGhlIGFkZGVkIGNvbmZpZGVuY2UgaW4gdGhlIG1pZHN0IG9mIGRhbmdlci4KPC90cmFuc2xhdGlvbj4="
translation['11.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGlzIHVyYmFuaXR5IGZvdW5kIGl0cyBoYWJpdHVhbCBleHByZXNzaW9uIG5vdCBpbiBqb2tlcyBidXQgaW4gaGlzIG1hbm5lcjsgYW5kIHdoZW4gb24gaGlzIGRpZ25pdHksIGhlIHdhcyBuZXZlciBhcnJvZ2FudCwgYnV0IGFsd2F5cyByZWFzb25hYmxlOyBhdCBsZWFzdCwgaWYgaGUgc2hvd2VkIGhpcyBjb250ZW1wdCBmb3IgdGhlIGhhdWdodHksIGhlIHdhcyBodW1ibGVyIHRoYW4gdGhlIGF2ZXJhZ2UgbWFuLiBGb3IgaGUgcHJpZGVkIGhpbXNlbGYgb24gdGhlIHNpbXBsaWNpdHkgb2YgaGlzIG93biBkcmVzcyBhbmQgdGhlIHNwbGVuZGlkIGVxdWlwbWVudCBvZiBoaXMgYXJteSwgb24gYSBzdHJpY3QgbGltaXRhdGlvbiBvZiBoaXMgb3duIG5lZWRzIGFuZCBhIGJvdW5kbGVzcyBnZW5lcm9zaXR5IHRvIGhpcyBmcmllbmRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BZGRlZCB0byB0aGlzLCBoZSB3YXMgdGhlIGJpdHRlcmVzdCBvZiBhZHZlcnNhcmllcywgYnV0IHRoZSBtaWxkZXN0IG9mIGNvbnF1ZXJvcnM7IHdhcnkgd2l0aCBlbmVtaWVzLCBidXQgdmVyeSBjb21wbGlhbnQgdG8gZnJpZW5kcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hpbGUgZXZlciBlbnN1cmluZyBzZWN1cml0eSB0byBoaXMgb3duIHNpZGUsIGhlIGV2ZXIgbWFkZSBpdCBoaXMgYnVzaW5lc3MgdG8gYnJpbmcgdG8gbm91Z2h0IHRoZSBkZXNpZ25zIG9mIGhpcyBlbmVteS4KPC90cmFuc2xhdGlvbj4="
translation['11.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnkgaGlzIHJlbGF0aXZlcyBoZSB3YXMgZGVzY3JpYmVkIGFzIOKAnGRldm90ZWQgdG8gaGlzIGZhbWlseSzigJ0gYnkgaGlzIGludGltYXRlcyBhcyDigJxhbiB1bmZhaWxpbmcgZnJpZW5kLOKAnTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEhlbGwuIDUuNS40NSIgdmFsaWQ9InllcyI+WGVuLiBIZWxsLiA1LjUuNDU8L2JpYmw+PC9ub3RlPiBieSB0aG9zZSB3aG8gc2VydmVkIGhpbSBhcyDigJx1bmZvcmdldGZ1bCzigJ0gYnkgdGhlIG9wcHJlc3NlZCBhcyDigJxhIGNoYW1waW9uLOKAnSBieSBoaXMgY29tcmFkZXMgaW4gZGFuZ2VyIGFzIOKAnGEgc2F2aW91ciBzZWNvbmQgdG8gdGhlIGdvZHMu4oCdPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiA1LjUuNDUiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gNS41LjQ1PC9iaWJsPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiBvbmUgcmVzcGVjdCwgSSB0aGluaywgaGUgd2FzIHVuaXF1ZS4KPC90cmFuc2xhdGlvbj4="
translation['11.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5IZSBwcm92ZWQgdGhhdCwgdGhvdWdoIHRoZSBib2RpbHkgc3RyZW5ndGggZGVjYXlzLCB0aGUgdmlnb3VyIG9mIGdvb2QgbWVuJ3Mgc291bHMgaXMgYWdlbGVzcy4gQXQgYW55IHJhdGUsIGhlIG5ldmVyIHdlYXJpZWQgaW4gdGhlIHB1cnN1aXQgb2YgZ3JlYXQgYW5kIG5vYmxlIGdsb3J5IHNvIGxvbmcgYXMgaGlzIGJvZHkgY291bGQgc3VwcG9ydCB0aGUgdmlnb3VyIG9mIGhpcyBzb3VsLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5XaGF0IG1hbidzIHlvdXRoLCB0aGVuLCBkaWQgbm90IHNlZW0gd2Vha2VyIHRoYW4gaGlzIG9sZCBhZ2U/IEZvciB3aG8gaW4gaGlzIHByaW1lIHdhcyBzbyBmb3JtaWRhYmxlIHRvIGhpcyBmb2VzIGFzIEFnZXNpbGF1cyBhdCB0aGUgdmVyeSBsaW1pdCBvZiBodW1hbiBsaWZlPyBXaG9zZSByZW1vdmFsIGJyb3VnaHQgc3VjaCB3ZWxjb21lIHJlbGllZiB0byB0aGUgZW5lbXkgYXMgdGhlIGRlYXRoIG9mIEFnZXNpbGF1cywgZGVzcGl0ZSBoaXMgeWVhcnM/IFdobyBnYXZlIHN1Y2ggY29uZmlkZW5jZSB0byBhbGxpZXMgYXMgQWdlc2lsYXVzLCB0aG91Z2ggbm93IG9uIHRoZSB0aHJlc2hvbGQgb2YgZGVhdGg/IFdoYXQgeW91bmcgbWFuIHdhcyBtb3JlIHJlZ3JldHRlZCBieSBoaXMgZnJpZW5kcyB0aGFuIEFnZXNpbGF1cywgdGhvdWdoIGhlIGRpZWQgZnVsbCBvZiB5ZWFycz8KPC90cmFuc2xhdGlvbj4="
