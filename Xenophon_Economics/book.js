var translations = [];
var translatedSection = null;
var current = 0;

function updateScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  console.log(page)

  var bookmarkedPageFieldName = book + "Page";
  var bookmarkedPage = localStorage.getItem(bookmarkedPageFieldName);
  if (bookmarkedPage == null) {
    localStorage.setItem(bookmarkedPageFieldName, page);
  }

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";

  var scrollPosition = localStorage.getItem(positionOnPage);
  if (scrollPosition == null) {
    scrollPosition = window.pageYOffset;
    localStorage.setItem(positionOnPage, scrollPosition);
    return;
  }

  if (bookmarkedPage == page) {
    window.scrollTo(0, scrollPosition)
    return;
  }
  window.location = bookmarkedPage;
}

function storeScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  localStorage.setItem(book + "Page", page);

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";
  scrollPosition = window.pageYOffset;
  localStorage.setItem(positionOnPage, scrollPosition);
}

function showNextOnHelper(evt) {
  current++;
  if (current > translations.length - 1) {
    current = 0;
  }
  var translation = translations[current];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = (current + 1) + "/" + translations.length;
    helper.appendChild(transCount);
  }
}

function updateHelper(evt, lineNumber, translationsForWord) {
  if (typeof updateHelper.currentWord === 'object') {
    updateHelper.currentWord.style.textDecoration = "none";
  }
  
  if (evt.target == updateHelper.currentWord) {
    displayTranslation(lineNumber);
    return;
  }

  evt.target.style.textDecoration = "underline red";
  updateHelper.currentWord = evt.target;

  if (typeof updateHelper.previousCommentBubble === 'object' 
      && updateHelper.previousCommentBubble != null) {
    updateHelper.previousCommentBubble.style.display = "none";
  }
  var commentBubble = document.getElementById("indicator-" + lineNumber);
  if (commentBubble != null) {
    commentBubble.style.display = "inline";
  }
  updateHelper.previousCommentBubble = commentBubble;

  showTitle(lineNumber);

  translations = translationsForWord;
  var translation = translations[0];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  helper.style.display = "block";

  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = "1/" + translations.length;
    helper.appendChild(transCount);
  }

  storeScrollPosition();
}

function showTitle(lineNumber) {
  if (Array.isArray(lineNumber)) {
    lineNumber = lineNumber[0];
  }
  lineNumber = lineNumber.replace(/\./g, '');
  var page = parseInt(parseInt(lineNumber, 10) / 100, 10);
  if (isNaN(page)) {
    return;
  }
  var result = page % 2;
  
  var titleToShow = titleElements[result];
  var innerHTML = "<span class=\"title\">" + titleToShow + "</span>";
  masthead.innerHTML = innerHTML;
}

function displayTranslation(refs) {
  if (translatedSection) {
    for (var i = 0; i < translatedSection.length; i++) {
        translatedSection[i].style.backgroundColor = "";
    }
  }
  translatedSection = null;
  for (var i = 0; i < refs.length; i++) {
    var ref = refs[i];
    translatedSection = document.getElementsByClassName(ref);
    if (translatedSection)
      break;
  }
  if (!translatedSection) {
    return;
  }
  if (!translation.hasOwnProperty(ref)) {
    return;
  }
  for (var i = 0; i < translatedSection.length; i++) {
      translatedSection[i].style.backgroundColor = "yellow";
  }
  parallel_translation.innerHTML = atobUTF8(translation[ref]);
  parallel_translation.style.display = "block";
}

function hideTranslation() {
  for (var i = 0; i < translatedSection.length; i++) {
      translatedSection[i].style.backgroundColor = "";
  }
  parallel_translation.style.display = "none";
}


function displayComment(line) {
  comment.innerHTML = atobUTF8(commentary[line]);
  comment.style.display = "block";
}

function hideComment() {
  comment.style.display = "none";
}

if ('serviceWorker' in navigator) {
  window.addEventListener('load', function() {
    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {
      // Registration was successful
      console.log('ServiceWorker registration successful with scope: ', registration.scope);
    }, function(err) {
      // registration failed :(
      console.log('ServiceWorker registration failed: ', err);
    });
  });
}

window.onload = updateScrollPosition;
var translation={}
var translation={}
translation['34.1'] = ""
translation['23.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIG9uY2UgaGVhcmQgaGltIGRpc2N1c3MgdGhlIHN1YmplY3Qgb2YgZXN0YXRlIG1hbmFnZW1lbnQgaW4gdGhlIGZvbGxvd2luZyBtYW5uZXIuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRlbGwgbWUsIENyaXRvYnVsdXMsIGlzIGVzdGF0ZSBtYW5hZ2VtZW50IHRoZSBuYW1lIG9mIGEgYnJhbmNoIG9mIGtub3dsZWRnZSwgbGlrZSBtZWRpY2luZSwgc21pdGhpbmcgYW5kIGNhcnBlbnRyeT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSB0aGluayBzbyzigJ0gcmVwbGllZCBDcml0b2J1bHVzLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIGNhbiB3ZSBzYXkgd2hhdCB0aGUgZnVuY3Rpb24gb2YgZXN0YXRlIG1hbmFnZW1lbnQgaXMsIGp1c3QgYXMgd2UgY2FuIHNheSB3aGF0IGlzIHRoZSBmdW5jdGlvbiBvZiBlYWNoIG9mIHRoZXNlIGFydHM/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdlbGwsIEkgc3VwcG9zZSB0aGF0IHRoZSBidXNpbmVzcyBvZiBhIGdvb2QgZXN0YXRlIG1hbmFnZXIgaXMgdG8gbWFuYWdlIGhpcyBvd24gZXN0YXRlIHdlbGwu4oCdCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMsIGFuZCBpbiBjYXNlIGhlIHdlcmUgcHV0IGluIGNoYXJnZSBvZiBhbm90aGVyIG1hbidzIGVzdGF0ZSwgY291bGQgaGUgbm90LCBpZiBoZSBjaG9zZSwgbWFuYWdlIGl0IGFzIHdlbGwgYXMgaGUgbWFuYWdlcyBoaXMgb3duPyBBbnlvbmUgd2hvIHVuZGVyc3RhbmRzIGNhcnBlbnRyeSBjYW4gZG8gZm9yIGFub3RoZXIgZXhhY3RseSB0aGUgc2FtZSB3b3JrIGFzIGhlIGRvZXMgZm9yIGhpbXNlbGY7IGFuZCBzbywgSSBwcmVzdW1lLCBjYW4gYSBnb29kIGVzdGF0ZSBtYW5hZ2VyLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIHRoaW5rIHNvLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4u4oCdCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSXMgaXQgcG9zc2libGUsIHRoZW4sIGZvciBvbmUgd2hvIHVuZGVyc3RhbmRzIHRoaXMgYXJ0LCBldmVuIGlmIGhlIGhhcyBubyBwcm9wZXJ0eSBvZiBoaXMgb3duLCB0byBlYXJuIG1vbmV5IGJ5IG1hbmFnaW5nIGFub3RoZXIgbWFuJ3MgZXN0YXRlLCBqdXN0IGFzIGhlIG1pZ2h0IGRvIGJ5IGJ1aWxkaW5nIGhpbSBhIGhvdXNlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMsIG9mIGNvdXJzZTsgYW5kIGhlIHdvdWxkIGdldCBhIGdvb2Qgc2FsYXJ5IGlmLCBhZnRlciB0YWtpbmcgb3ZlciBhbiBlc3RhdGUsIGhlIGNvbnRpbnVlZCB0byBwYXkgYWxsIG91dGdvaW5ncywgYW5kIHRvIGluY3JlYXNlIHRoZSBlc3RhdGUgYnkgc2hvd2luZyBhIGJhbGFuY2Uu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEJ1dCB3aGF0IGRvIHdlIG1lYW4gbm93IGJ5IGFuIGVzdGF0ZT8KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjUiIHVuaXQ9InNlY3Rpb24iIC8+SXMgaXQgdGhlIHNhbWUgdGhpbmcgYXMgYSBob3VzZSwgb3IgaXMgYWxsIHByb3BlcnR5IHRoYXQgb25lIHBvc3Nlc3NlcyBvdXRzaWRlIHRoZSBob3VzZSBhbHNvIHBhcnQgb2YgdGhlIGVzdGF0ZT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCwgSSB0aGluayB0aGF0IGV2ZW4gaWYgdGhlIHByb3BlcnR5IGlzIHNpdHVhdGVkIGluIGRpZmZlcmVudCBjaXRpZXMsIGV2ZXJ5dGhpbmcgYSBtYW4gcG9zc2Vzc2VzIGlzIHBhcnQgb2YgaGlzIGVzdGF0ZS7igJ0KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjYiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnERvIG5vdCBzb21lIG1lbiBwb3NzZXNzIGVuZW1pZXM/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE9mIGNvdXJzZTsgc29tZSBpbiBmYWN0IHBvc3Nlc3MgbWFueS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcU2hhbGwgd2UgaW5jbHVkZSB0aGVpciBlbmVtaWVzIGluIHRoZWlyIHBvc3Nlc3Npb25zP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJdCB3b3VsZCBiZSByaWRpY3Vsb3VzLCBzdXJlbHksIGlmIG9uZSBhY3R1YWxseSByZWNlaXZlZCBhIHNhbGFyeSBmb3IgaW5jcmVhc2luZyB0aGUgbnVtYmVyIG9mIGEgbWFuJ3MgZW5lbWllcyHigJ0KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjciIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEJlY2F1c2UsIHlvdSBrbm93LCB3ZSBzdXBwb3NlZCBhIG1hbidzIGVzdGF0ZSB0byBiZSB0aGUgc2FtZSBhcyBoaXMgcHJvcGVydHku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRvIGJlIHN1cmXigJRtZWFuaW5nIHRoZXJlYnkgdGhlIGdvb2QgdGhpbmdzIHRoYXQgaGUgcG9zc2Vzc2VzLiBObywgb2YgY291cnNlIEkgZG9uJ3QgY2FsbCBhbnkgYmFkIHRoaW5nIHRoYXQgaGUgbWF5IHBvc3Nlc3MgcHJvcGVydHku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFlvdSBzZWVtIHRvIHVzZSB0aGUgd29yZCBwcm9wZXJ0eSBvZiB3aGF0ZXZlciBpcyBwcm9maXRhYmxlIHRvIGl0cyBvd25lci7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5OyBidXQgd2hhdCBpcyBoYXJtZnVsIEkgcmVnYXJkIGFzIGxvc3MgcmF0aGVyIHRoYW4gd2VhbHRoLuKAnQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCBhbmQgY29uc2VxdWVudGx5IGlmIGEgbWFuIGJ1eXMgYSBob3JzZSBhbmQgZG9lc24ndCBrbm93IGhvdyB0byBtYW5hZ2UgaXQsIGFuZCBzbyBrZWVwcyBvbiBnZXR0aW5nIHRocm93biBhbmQgaW5qdXJpbmcgaGltc2VsZiBieSB0cnlpbmcgdG8gcmlkZSBpdCwgdGhlIGhvcnNlIGlzIG5vdCB3ZWFsdGggdG8gaGltLCBJIHByZXN1bWU/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vLCBpZiB3ZSBhc3N1bWUgdGhhdCB3ZWFsdGggaXMgYSBnb29kIHRoaW5nLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJdCBmb2xsb3dzIHRoYXQgbGFuZCBpcyBub3Qgd2VhbHRoIGVpdGhlciB0byBhIG1hbiB3aG8gd29ya3MgaXQgaW4gc3VjaCBhIHdheSB0aGF0IGhpcyB3b3JrIHJlc3VsdHMgaW4gbG9zcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVG8gYmUgc3VyZTogZXZlbiBsYW5kIGlzIG5vdCB3ZWFsdGggaWYgaXQgbWFrZXMgdXMgc3RhcnZlIGluc3RlYWQgb2Ygc3VwcG9ydGluZyB1cy7igJ0KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjkiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCB0aGUgc2FtZSB3aWxsIGhvbGQgZ29vZCBvZiBzaGVlcCwgd2lsbCBpdCBub3Q/IGlmIGEgbWFuIGxvc2VzIHRocm91Z2ggaWdub3JhbmNlIG9mIHNoZWVwIGZhcm1pbmcsIGhpcyBzaGVlcCB0b28gd2lsbCBub3QgYmUgd2VhbHRoIHRvIGhpbT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSB0aGluayBub3Qu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEl0IHNlZW1zLCB0aGVuLCB0aGF0IHlvdXIgdmlldyBpcyB0aGlzOiB3aGF0IGlzIHByb2ZpdGFibGUgaXMgd2VhbHRoLCB3aGF0IGlzIGhhcm1mdWwgaXMgbm90IHdlYWx0aC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcUXVpdGUgc28u4oCdCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhhdCBpcyB0byBzYXksIHRoZSBzYW1lIHRoaW5ncyBhcmUgd2VhbHRoIGFuZCBub3Qgd2VhbHRoLCBhY2NvcmRpbmcgYXMgb25lIHVuZGVyc3RhbmRzIG9yIGRvZXMgbm90IHVuZGVyc3RhbmQgaG93IHRvIHVzZSB0aGVtLiBBIGZsdXRlLCBmb3IgZXhhbXBsZSwgaXMgd2VhbHRoIHRvIG9uZSB3aG8gaXMgY29tcGV0ZW50IHRvIHBsYXkgaXQsIGJ1dCB0byBhbiBpbmNvbXBldGVudCBwZXJzb24gaXQgaXMgbm8gYmV0dGVyIHRoYW4gdXNlbGVzcyBzdG9uZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRydWXigJR1bmxlc3MgaGUgc2VsbHMgaXQu4oCdCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2Ugbm93IHNlZSB0aGF0IHRvIHBlcnNvbnMgd2hvIGRvbid0IHVuZGVyc3RhbmQgaXRzIHVzZSwgYSBmbHV0ZSBpcyB3ZWFsdGggaWYgdGhleSBzZWxsIGl0LCBidXQgbm90IHdlYWx0aCBpZiB0aGV5IGtlZXAgaXQgaW5zdGVhZCBvZiBzZWxsaW5nLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgYW5kIG91ciBhcmd1bWVudCBydW5zIGNvbnNpc3RlbnRseSwgc2luY2Ugd2UgaGF2ZSBzYWlkIHRoYXQgd2hhdCBpcyBwcm9maXRhYmxlIGlzIHdlYWx0aC4gRm9yIGEgZmx1dGUsIGlmIG5vdCBwdXQgdXAgZm9yIHNhbGUsIGlzIG5vdCB3ZWFsdGgsIGJlY2F1c2UgaXQgaXMgdXNlbGVzczogaWYgcHV0IHVwIGZvciBzYWxlIGl0IGJlY29tZXMgd2VhbHRoLuKAnQogICAgICAgIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFllcyzigJ0gY29tbWVudGVkIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwg4oCccHJvdmlkZWQgaGUga25vd3MgaG93IHRvIHNlbGw7IGJ1dCBhZ2FpbiwgaW4gY2FzZSBoZSBzZWxscyBpdCBmb3Igc29tZXRoaW5nIGhlIGRvZXNuJ3Qga25vdyBob3cgdG8gdXNlLCBldmVuIHRoZW4gdGhlIHNhbGUgZG9lc24ndCBjb252ZXJ0IGl0IGludG8gd2VhbHRoLCBhY2NvcmRpbmcgdG8geW91LuKAnTxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWW91IGltcGx5LCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIHRoYXQgZXZlbiBtb25leSBpc24ndCB3ZWFsdGggdG8gb25lIHdobyBkb2Vzbid0IGtub3cgaG93IHRvIHVzZSBpdC7igJ0KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHlvdSwgSSB0aGluaywgYWdyZWUgd2l0aCBtZSB0byB0aGlzIGV4dGVudCwgdGhhdCB3ZWFsdGggaXMgdGhhdCBmcm9tIHdoaWNoIGEgbWFuIGNhbiBkZXJpdmUgcHJvZml0LiBBdCBhbnkgcmF0ZSwgaWYgYSBtYW4gdXNlcyBoaXMgbW9uZXkgdG8gYnV5IGEgbWlzdHJlc3Mgd2hvIG1ha2VzIGhpbSB3b3JzZSBvZmYgaW4gYm9keSBhbmQgc291bCBhbmQgZXN0YXRlLCBob3cgY2FuIGhpcyBtb25leSBiZSBwcm9maXRhYmxlIHRvIGhpbSB0aGVuP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCeSBubyBtZWFucywgdW5sZXNzIHdlIGFyZSByZWFkeSB0byBtYWludGFpbiB0aGF0IHRoZSB3ZWVkIGNhbGxlZCBuaWdodHNoYWRlLCB3aGljaCBkcml2ZXMgeW91IG1hZCBpZiB5b3UgZWF0IGl0LCBpcyB3ZWFsdGgu4oCdCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiBtb25leSBpcyB0byBiZSBrZXB0IGF0IGEgZGlzdGFuY2UsIENyaXRvYnVsdXMsIGlmIG9uZSBkb2Vzbid0IGtub3cgaG93IHRvIHVzZSBpdCwgYW5kIG5vdCB0byBiZSBpbmNsdWRlZCBpbiB3ZWFsdGguIEJ1dCBob3cgYWJvdXQgZnJpZW5kcz8gSWYgb25lIGtub3dzIGhvdyB0byBtYWtlIHVzZSBvZiB0aGVtIHNvIGFzIHRvIHByb2ZpdCBieSB0aGVtLCB3aGF0IGFyZSB0aGV5IHRvIGJlIGNhbGxlZD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VhbHRoLCBvZiBjb3Vyc2UsIGFuZCBtdWNoIG1vcmUgc28gdGhhbiBjYXR0bGUsIGlmIGl0IGJlIHRydWUgdGhhdCB0aGV5IGFyZSBtb3JlIHByb2ZpdGFibGUgdGhhbiBjYXR0bGUu4oCdCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCBhbmQgaXQgZm9sbG93cyBmcm9tIHdoYXQgeW91IHNheSB0aGF0IGVuZW1pZXMgdG9vIGFyZSB3ZWFsdGggdG8gYW55b25lIHdobyBjYW4gZGVyaXZlIHByb2ZpdCBmcm9tIHRoZW0u4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdlbGwsIHRoYXQgaXMgbXkgb3Bpbmlvbi7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ29uc2VxdWVudGx5IGl0IGlzIHRoZSBidXNpbmVzcyBvZiBhIGdvb2QgZXN0YXRlIG1hbmFnZXIgdG8ga25vdyBob3cgdG8gZGVhbCB3aXRoIGVuZW1pZXMgc28gYXMgdG8gZGVyaXZlIHByb2ZpdCBmcm9tIHRoZW0gdG9vLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxNb3N0IGRlY2lkZWRseS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSW4gZmFjdCwgQ3JpdG9idWx1cywgeW91IGNhbm5vdCBmYWlsIHRvIG5vdGljZSB0aGF0IG1hbnkgcHJpdmF0ZSBwZXJzb25zIGhhdmUgYmVlbiBpbmRlYnRlZCB0byB3YXIgZm9yIHRoZSBpbmNyZWFzZSBvZiB0aGVpciBlc3RhdGVzLCBhbmQgbWFueSBwcmluY2VzIHRvby7igJ0KICAgICAgICA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTYiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFllcywgc28gZmFyIHNvIGdvb2QsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPi4gQnV0IHNvbWV0aW1lcyB3ZSBjb21lIGFjcm9zcyBwZXJzb25zIHBvc3Nlc3NlZCBvZiBrbm93bGVkZ2UgYW5kIG1lYW5zIHdoZXJlYnkgdGhleSBjYW4gaW5jcmVhc2UgdGhlaXIgZXN0YXRlcyBpZiB0aGV5IHdvcmssIGFuZCB3ZSBmaW5kIHRoYXQgdGhleSBhcmUgdW53aWxsaW5nIHRvIGRvIHNvOyBhbmQgY29uc2VxdWVudGx5IHdlIHNlZSB0aGF0IHRoZWlyIGtub3dsZWRnZSBwcm9maXRzIHRoZW0gbm90aGluZy4gV2hhdCBhcmUgd2UgdG8gbWFrZSBvZiB0aGF0PyBJbiB0aGVzZSBjYXNlcywgc3VyZWx5LCBuZWl0aGVyIHRoZWlyIGtub3dsZWRnZSBub3IgdGhlaXIgcHJvcGVydHkgaXMgd2VhbHRoP+KAnQo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBcmUgeW91IHRyeWluZyB0byByYWlzZSBhIGRpc2N1c3Npb24gYWJvdXQgc2xhdmVzLCBDcml0b2J1bHVzP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxPaCBubywgbm90IGF0IGFsbDogSSBhbSByZWZlcnJpbmcgdG8gcGVyc29ucyBvZiB3aG9tIHNvbWUsIGF0IGFueSByYXRlLCBhcmUgY29uc2lkZXJlZCBtZW4gb2YgdGhlIGhpZ2hlc3QgbGluZWFnZS4gSSBvYnNlcnZlIHRoYXQgdGhlcmUgYXJlIHBlcnNvbnMgc2tpbGxlZCBpbiB0aGUgYXJ0cyBvZiB3YXIgb3IgcGVhY2UsIGFzIHRoZSBjYXNlIG1heSBiZSwgd2hvIGFyZSB1bndpbGxpbmcgdG8gcHJhY3RpY2UgdGhlbSwgYW5kIHRoZSByZWFzb24sIEkgdGhpbmssIGlzIGp1c3QgdGhpcywgdGhhdCB0aGV5IGhhdmUgbm8gbWFzdGVyIG92ZXIgdGhlbS7igJ0KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXaGF0LCBubyBtYXN0ZXIgb3ZlciB0aGVtLCB3aGVuLCBpbiBzcGl0ZSBvZiB0aGVpciBwcmF5ZXJzIGZvciBwcm9zcGVyaXR5IGFuZCB0aGVpciBkZXNpcmUgdG8gZG8gd2hhdCB3aWxsIGJyaW5nIHRoZW0gZ29vZCwgdGhleSBhcmUgdGh3YXJ0ZWQgaW4gdGhlaXIgaW50ZW50aW9ucyBieSB0aGUgcG93ZXJzIHRoYXQgcnVsZSB0aGVtP+KAnQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTkiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCB3aG8sIHByYXksIG1heSB0aGVzZSB1bnNlZW4gcnVsZXJzIGJlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxObywgbm90IHVuc2VlbiwgYnV0IG9wZW4gYW5kIHVuZGlzZ3Vpc2VkLCBzdXJlbHkhIEFuZCB2ZXJ5IHZpY2lvdXMgcnVsZXJzIHRoZXkgYXJlIHRvbywgYXMgeW91IHlvdXJzZWxmIG11c3Qgc2VlLCBpZiBhdCBsZWFzdCB5b3UgcmVnYXJkIGlkbGVuZXNzIGFuZCBtb3JhbCBjb3dhcmRpY2UgYW5kIG5lZ2xpZ2VuY2UgYXMgdmljZS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIwIiB1bml0PSJzZWN0aW9uIiAvPkF5ZSwgYW5kIHRoZW4gdGhlcmUgaXMgYSBzZXQgb2YgZGVjZWl0ZnVsIG1pc3RyZXNzZXMgdGhhdCBwcmV0ZW5kIHRvIGJlIHBsZWFzdXJlc+KAlHN1Y2ggYXMgZ2FtYmxpbmcgYW5kIGNvbnNvcnRpbmcgd2l0aCBiYWQgY29tcGFuaW9uczogZXZlbiB0aGUgdmljdGltcyBvZiB0aGVpciBkZWNlcHRpb24gZmluZCBhcyB0aW1lIGdvZXMgb24gdGhhdCB0aGVzZSwgYWZ0ZXIgYWxsLCBhcmUgcmVhbGx5IHBhaW5zIGNvbmNlYWxlZCBiZW5lYXRoIGEgdGhpbiB2ZW5lZXIgb2YgcGxlYXN1cmVzLCBhbmQgdGhhdCB0aGV5IGFyZSBoaW5kZXJpbmcgdGhlbSBmcm9tIGFsbCBwcm9maXRhYmxlIHdvcmsgYnkgdGhlaXIgaW5mbHVlbmNlIG92ZXIgdGhlbS7igJ0KICAgICAgICA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEJ1dCB0aGVyZSBhcmUgb3RoZXIgbWVuLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIHdob3NlIGVuZXJneSBpcyBub3QgaGluZGVyZWQgYnkgdGhlc2UgaW5mbHVlbmNlcywgaW4gZmFjdCB0aGV5IGhhdmUgYW4gZWFnZXIgZGVzaXJlIHRvIHdvcmsgYW5kIHRvIG1ha2UgYW4gaW5jb21lOiBuZXZlcnRoZWxlc3MgdGhleSBleGhhdXN0IHRoZWlyIGVzdGF0ZXMgYW5kIGFyZSBiZXNldCB3aXRoIGRpZmZpY3VsdGllcy7igJ0KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCB0aGV5IHRvbyBhcmUgc2xhdmVzLCBhbmQgaGFyZCBpbmRlZWQgYXJlIHRoZWlyIG1hc3RlcnM6IHNvbWUgYXJlIGluIGJvbmRhZ2UgdG8gZ2x1dHRvbnksIHNvbWUgdG8gbGVjaGVyeSwgc29tZSB0byBkcmluaywgYW5kIHNvbWUgdG8gZm9vbGlzaCBhbmQgY29zdGx5IGFtYml0aW9ucy4gQW5kIHNvIGhhcmQgaXMgdGhlIHJ1bGUgb2YgdGhlc2UgcGFzc2lvbnMgb3ZlciBldmVyeSBtYW4gd2hvIGZhbGxzIGludG8gdGhlaXIgY2x1dGNoZXMsIHRoYXQgc28gbG9uZyBhcyB0aGV5IHNlZSB0aGF0IGhlIGlzIHN0cm9uZyBhbmQgY2FwYWJsZSBvZiB3b3JrLCB0aGV5IGZvcmNlIGhpbSB0byBwYXkgb3ZlciBhbGwgdGhlIHByb2ZpdHMgb2YgaGlzIHRvaWwsIGFuZCB0byBzcGVuZCBpdCBvbiB0aGVpciBvd24gZGVzaXJlczsgYnV0IG5vIHNvb25lciBkbyB0aGV5IGZpbmQgdGhhdCBoZSBpcyB0b28gb2xkIHRvIHdvcmssIHRoYW4gdGhleSBsZWF2ZSBoaW0gdG8gYW4gb2xkIGFnZSBvZiBtaXNlcnksIGFuZCB0cnkgdG8gZmFzdGVuIHRoZSB5b2tlIG9uIG90aGVyIHNob3VsZGVycy4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIzIiB1bml0PSJzZWN0aW9uIiAvPkFoLCBDcml0b2J1bHVzLCB3ZSBtdXN0IGZpZ2h0IGZvciBvdXIgZnJlZWRvbSBhZ2FpbnN0IHRoZXNlIHR5cmFudHMgYXMgcGVyc2lzdGVudGx5IGFzIGlmIHRoZXkgd2VyZSBhcm1lZCBtZW4gdHJ5aW5nIHRvIGVuc2xhdmUgdXMuIEluZGVlZCwgb3BlbiBlbmVtaWVzIG1heSBiZSBnZW50bGVtZW4sIGFuZCB3aGVuIHRoZXkgZW5zbGF2ZSB1cywgbWF5LCBieSBjaGFzdGVuaW5nLCBwdXJnZSB1cyBvZiBvdXIgZmF1bHRzIGFuZCBjYXVzZSB1cyB0byBsaXZlIGJldHRlciBsaXZlcyBpbiBmdXR1cmUuIEJ1dCBzdWNoIG1pc3RyZXNzZXMgYXMgdGhlc2UgbmV2ZXIgY2Vhc2UgdG8gcGxhZ3VlIG1lbiBpbiBib2R5IGFuZCBzb3VsIGFuZCBlc3RhdGUgYWxsIHRoZSB0aW1lIHRoYXQgdGhleSBoYXZlIGRvbWluaW9uIG92ZXIgdGhlbS7igJ0KICAgICAgICA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMiIgdW5pdD0iY2hhcHRlciIgLz48L3RyYW5zbGF0aW9uPg=="
translation['18.3'] = ""
translation['16.4'] = ""
translation['25.5'] = ""
translation['20.6'] = ""
translation['17.7'] = ""
translation['43.8'] = ""
translation['23.9'] = ""
translation['19.10'] = ""
translation['13.11'] = ""
translation['25.12'] = ""
translation['20.13'] = ""
translation['12.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXaGVuIHlvdSBoYXZlIGltcHJlc3NlZCBvbiBhIG1hbizigJkgSSByZXN1bWVkLCDigJh0aGUgbmVjZXNzaXR5IG9mIGNhcmVmdWwgYXR0ZW50aW9uIHRvIHRoZSBkdXRpZXMgeW91IGFzc2lnbiB0byBoaW0sIHdpbGwgaGUgdGhlbiBiZSBjb21wZXRlbnQgdG8gYWN0IGFzIGJhaWxpZmYsIG9yIG11c3QgaGUgbGVhcm4gc29tZXRoaW5nIGJlc2lkZXMsIGlmIGhlIGlzIHRvIGJlIGVmZmljaWVudD/igJkKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmE9mIGNvdXJzZSzigJkgYW5zd2VyZWQgSXNjaG9tYWNodXMsIOKAmGhlIGhhcyBzdGlsbCB0byB1bmRlcnN0YW5kIHdoYXQgaGUgaGFzIHRvIGRvLCBhbmQgd2hlbiBhbmQgaG93IHRvIGRvIGl0LiBPdGhlcndpc2UgaG93IGNvdWxkIGEgYmFpbGlmZiBiZSBvZiBtb3JlIHVzZSB0aGFuIGEgZG9jdG9yIHdobyB0YWtlcyBjYXJlIHRvIHZpc2l0IGEgcGF0aWVudCBlYXJseSBhbmQgbGF0ZSwgYnV0IGhhcyBubyBub3Rpb24gb2YgdGhlIHJpZ2h0IHdheSB0byB0cmVhdCBoaXMgaWxsbmVzcz/igJkKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFdlbGwsIGJ1dCBzdXBwb3NlIGhlIGhhcyBsZWFybmVkIGhvdyBmYXJtLXdvcmsgaXMgdG8gYmUgZG9uZSwgd2lsbCBoZSB3YW50IHNvbWV0aGluZyBtb3JlIHlldCwgb3Igd2lsbCB5b3VyIG1hbiBub3cgYmUgYSBwZXJmZWN0IGJhaWxpZmY/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmEkgdGhpbmsgaGUgbXVzdCBsZWFybiB0byBydWxlIHRoZSBsYWJvdXJlcnMu4oCZCiAgICAgICAgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmEFuZCBkbyB5b3UgdHJhaW4geW91ciBiYWlsaWZmcyB0byBiZSBjb21wZXRlbnQgdG8gcnVsZSB0b28/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFllcywgSSB0cnksIGFueWhvdy7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQW5kIHByYXkgdGVsbCBtZSBob3cgeW91IHRyYWluIHRoZW0gdG8gYmUgcnVsZXJzIG9mIG1lbi7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQnkgYSBjaGlsZGlzaGx5IGVhc3kgbWV0aG9kLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4uIEkgZGFyZXNheSB5b3UnbGwgbGF1Z2ggaWYgSSB0ZWxsIHlvdS7igJkKPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhPaCwgYnV0IGl0IGlzIGNlcnRhaW5seSBub3QgYSBsYXVnaGluZyBtYXR0ZXIsIElzY2hvbWFjaHVzLiBGb3IgYW55b25lIHdobyBjYW4gbWFrZSBtZW4gZml0IHRvIHJ1bGUgb3RoZXJzIGNhbiBhbHNvIHRlYWNoIHRoZW0gdG8gYmUgbWFzdGVycyBvZiBvdGhlcnM7IGFuZCBpZiBoZSBjYW4gbWFrZSB0aGVtIGZpdCB0byBiZSBtYXN0ZXJzLCBoZSBjYW4gbWFrZSB0aGVtIGZpdCB0byBiZSBraW5ncy4gU28gYW55b25lIHdobyBjYW4gZG8gdGhhdCBzZWVtcyB0byBtZSB0byBkZXNlcnZlIGhpZ2ggcHJhaXNlIHJhdGhlciB0aGFuIGxhdWdodGVyLuKAmQogICAgICAgIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsIG5vdywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBvdGhlciBjcmVhdHVyZXMgbGVhcm4gb2JlZGllbmNlIGluIHR3byB3YXlz4oCUYnkgYmVpbmcgcHVuaXNoZWQgd2hlbiB0aGV5IHRyeSB0byBkaXNvYmV5LCBhbmQgYnkgYmVpbmcgcmV3YXJkZWQgd2hlbiB0aGV5IGFyZSBlYWdlciB0byBzZXJ2ZSB5b3UuCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNyIgdW5pdD0ic2VjdGlvbiIgLz5Db2x0cywgZm9yIGV4YW1wbGUsIGxlYXJuIHRvIG9iZXkgdGhlIGhvcnNlYnJlYWtlciBieSBnZXR0aW5nIHNvbWV0aGluZyB0aGV5IGxpa2Ugd2hlbiB0aGV5IGFyZSBvYmVkaWVudCwgYW5kIHN1ZmZlcmluZyBpbmNvbnZlbmllbmNlIHdoZW4gdGhleSBhcmUgZGlzb2JlZGllbnQsIHVudGlsIHRoZXkgY2Fycnkgb3V0IHRoZSBob3JzZWJyZWFrZXIncyBpbnRlbnRpb25zLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOCIgdW5pdD0ic2VjdGlvbiIgLz5QdXBwaWVzLCBhZ2FpbiwgYXJlIG11Y2ggaW5mZXJpb3IgdG8gbWVuIGluIGludGVsbGlnZW5jZSBhbmQgcG93ZXIgb2YgZXhwcmVzc2lvbjsgYW5kIHlldCB0aGV5IGxlYXJuIHRvIHJ1biBpbiBjaXJjbGVzIGFuZCB0dXJuIHNvbWVyc2F1bHRzIGFuZCBkbyBtYW55IG90aGVyIHRyaWNrcyBpbiB0aGUgc2FtZSB3YXk7IGZvciB3aGVuIHRoZXkgb2JleSB0aGV5IGdldCBzb21ldGhpbmcgdGhhdCB0aGV5IHdhbnQsIGFuZCB3aGVuIHRoZXkgYXJlIGNhcmVsZXNzLCB0aGV5IGFyZSBwdW5pc2hlZC4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjkiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIG1lbiBjYW4gYmUgbWFkZSBtb3JlIG9iZWRpZW50IGJ5IHdvcmQgb2YgbW91dGggbWVyZWx5LCBieSBiZWluZyBzaG93biB0aGF0IGl0IGlzIGdvb2QgZm9yIHRoZW0gdG8gb2JleS4gQnV0IGluIGRlYWxpbmcgd2l0aCBzbGF2ZXMgdGhlIHRyYWluaW5nIHRob3VnaHQgc3VpdGFibGUgZm9yIHdpbGQgYW5pbWFscyBpcyBhbHNvIGEgdmVyeSBlZmZlY3RpdmUgd2F5IG9mIHRlYWNoaW5nIG9iZWRpZW5jZTsgZm9yIHlvdSB3aWxsIGRvIG11Y2ggd2l0aCB0aGVtIGJ5IGZpbGxpbmcgdGhlaXIgYmVsbGllcyB3aXRoIHRoZSBmb29kIHRoZXkgaGFua2VyIGFmdGVyLiBUaG9zZSBvZiBhbiBhbWJpdGlvdXMgZGlzcG9zaXRpb24gYXJlIGFsc28gc3B1cnJlZCBvbiBieSBwcmFpc2UsIHNvbWUgbmF0dXJlcyBiZWluZyBodW5ncnkgZm9yIHByYWlzZSBhcyBvdGhlcnMgZm9yIG1lYXQgYW5kIGRyaW5rLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTAiIHVuaXQ9InNlY3Rpb24iIC8+Tm93IHRoZXNlIGFyZSBwcmVjaXNlbHkgdGhlIHRoaW5ncyB0aGF0IEkgZG8gbXlzZWxmIHdpdGggYSB2aWV3IHRvIG1ha2luZyBtZW4gbW9yZSBvYmVkaWVudDsgYnV0IHRoZXkgYXJlIG5vdCB0aGUgb25seSBsZXNzb25zIEkgZ2l2ZSB0byB0aG9zZSB3aG9tIEkgd2FudCB0byBhcHBvaW50IG15IGJhaWxpZmZzLiBJIGhhdmUgb3RoZXIgd2F5cyBvZiBoZWxwaW5nIHRoZW0gb24uIEZvciB0aGUgY2xvdGhlcyB0aGF0IEkgbXVzdCBwcm92aWRlIGZvciBteSB3b3JrLXBlb3BsZSBhbmQgdGhlIHNob2VzIGFyZSBub3QgYWxsIGFsaWtlLiBTb21lIGFyZSBiZXR0ZXIgdGhhbiBvdGhlcnMsIHNvbWUgd29yc2UsIGluIG9yZGVyIHRoYXQgSSBtYXkgcmV3YXJkIHRoZSBiZXR0ZXIgc2VydmFudCB3aXRoIHRoZSBzdXBlcmlvciBhcnRpY2xlcywgYW5kIGdpdmUgdGhlIGluZmVyaW9yIHRoaW5ncyB0byB0aGUgbGVzcyBkZXNlcnZpbmcuCiAgICAgICAgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExIiB1bml0PSJzZWN0aW9uIiAvPkZvciBJIHRoaW5rIGl0IGlzIHZlcnkgZGlzaGVhcnRlbmluZyB0byBnb29kIHNlcnZhbnRzLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIHdoZW4gdGhleSBzZWUgdGhhdCB0aGV5IGRvIGFsbCB0aGUgd29yaywgYW5kIG90aGVycyB3aG8gYXJlIG5vdCB3aWxsaW5nIHRvIHdvcmsgaGFyZCBhbmQgcnVuIHJpc2tzIHdoZW4gbmVlZCBiZSwgZ2V0IHRoZSBzYW1lIGFzIHRoZXkuCiAgICAgICAgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgbXkgcGFydCwgdGhlbiwgSSBkb24ndCBjaG9vc2UgdG8gcHV0IHRoZSBkZXNlcnZpbmcgb24gYSBsZXZlbCB3aXRoIHRoZSB3b3J0aGxlc3MsIGFuZCB3aGVuIEkga25vdyB0aGF0IG15IGJhaWxpZmZzIGhhdmUgZGlzdHJpYnV0ZWQgdGhlIGJlc3QgdGhpbmdzIHRvIHRoZSBtb3N0IGRlc2VydmluZywgSSBjb21tZW5kIHRoZW07IGFuZCBpZiBJIHNlZSB0aGF0IGZsYXR0ZXJ5IG9yIGFueSBvdGhlciBmdXRpbGUgc2VydmljZSB3aW5zIHNwZWNpYWwgZmF2b3VyLCBJIGRvbid0IG92ZXJsb29rIGl0LCBidXQgcmVwcm92ZSB0aGUgYmFpbGlmZiwgYW5kIHRyeSB0byBzaG93IGhpbSwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCB0aGF0IHN1Y2ggZmF2b3VyaXRpc20gaXMgbm90IGV2ZW4gaW4gaGlzIG93biBpbnRlcmVzdC7igJnigJ0KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0iY2hhcHRlciIgLz48L3RyYW5zbGF0aW9uPg=="
translation['10.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhOb3csIElzY2hvbWFjaHVzLOKAmSBzYWlkIEksIOKAmHdoZW4geW91IGZpbmQgeW91ciBtYW4gc28gY29tcGV0ZW50IHRvIHJ1bGUgdGhhdCBoZSBjYW4gbWFrZSB0aGVtIG9iZWRpZW50LCBkbyB5b3UgdGhpbmsgaGltIGEgcGVyZmVjdCBiYWlsaWZmLCBvciBkb2VzIGhlIHdhbnQgYW55dGhpbmcgZWxzZSwgZXZlbiB3aXRoIHRoZSBxdWFsaWZpY2F0aW9ucyB5b3UgaGF2ZSBtZW50aW9uZWQ/4oCZCiAgICAgICAgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmE9mIGNvdXJzZSwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LOKAmSByZXR1cm5lZCBJc2Nob21hY2h1cywg4oCYaGUgbXVzdCBiZSBob25lc3QgYW5kIG5vdCB0b3VjaCBoaXMgbWFzdGVyJ3MgcHJvcGVydHkuIEZvciBpZiB0aGUgbWFuIHdobyBoYW5kbGVzIHRoZSBjcm9wcyBkYXJlcyB0byBtYWtlIGF3YXkgd2l0aCB0aGVtLCBhbmQgZG9lc24ndCBsZWF2ZSBlbm91Z2ggdG8gZ2l2ZSBhIHByb2ZpdCBvbiB0aGUgdW5kZXJ0YWtpbmcsIHdoYXQgZ29vZCBjYW4gY29tZSBvZiBmYXJtaW5nIHVuZGVyIGhpcyBtYW5hZ2VtZW50P+KAmQo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFRoZW4gZG8geW91IHRha2UgaXQgb24geW91cnNlbGYgdG8gdGVhY2ggdGhpcyBraW5kIG9mIGp1c3RpY2UgdG9vP+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhDZXJ0YWlubHk6IEkgZG9uJ3QgZmluZCwgaG93ZXZlciwgdGhhdCBhbGwgcmVhZGlseSBwYXkgaGVlZCB0byB0aGlzIGxlc3Nvbi4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQiIHVuaXQ9InNlY3Rpb24iIC8+TmV2ZXJ0aGVsZXNzIEkgZ3VpZGUgdGhlIHNlcnZhbnRzIGludG8gdGhlIHBhdGggb2YganVzdGljZSB3aXRoIHRoZSBhaWQgb2YgbWF4aW1zIGRyYXduIGZyb20gdGhlIGxhd3Mgb2YgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkRyYWNvPC9zdXJuYW1lPjwvcGVyc05hbWU+IGFuZCA8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+RHJhY288L3N1cm5hbWU+PHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvbG9uPC9zdXJuYW1lPjwvcGVyc05hbWU+LiBGb3IgaXQgc2VlbXMgdG8gbWUgdGhhdCB0aGVzZSBmYW1vdXMgbWVuIGVuYWN0ZWQgbWFueSBvZiB0aGVpciBsYXdzIHdpdGggYW4gZXllIG9uIHRoaXMgcGFydGljdWxhciBraW5kIG9mIGp1c3RpY2UuCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2xvbjwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgaXMgd3JpdHRlbjog4oCcdGhpZXZlcyBzaGFsbCBiZSBmaW5lZCBmb3IgdGhlaXIgdGhlZnRzLOKAnSBhbmQg4oCcYW55b25lIGd1aWx0eSBvZiBhdHRlbXB0IHNoYWxsIGJlIGltcHJpc29uZWQgaWYgdGFrZW4gaW4gdGhlIGFjdCwgYW5kIHB1dCB0byBkZWF0aC7igJ08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhpcyBpcyBuZWl0aGVyIGEgY2xlYXIgbm9yIGFuIGV4YWN0IHN0YXRlbWVudCBvZiB0aGUgbGF3IGF0dHJpYnV0ZWQgdG8gU29sb24gaW4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRGVtLiAyNC4xMTMiIHZhbGlkPSJ5ZXMiPkRlbS4gMjQuMTEzPC9iaWJsPjsgYW5kIHNvbWUgc3VzcGVjdCBhIGNvcnJ1cHRpb24gaW4gdGhlIHRleHQuPC9ub3RlPiBUaGUgb2JqZWN0IG9mIHRoZXNlIGVuYWN0bWVudHMgd2FzIGNsZWFybHkgdG8gbWFrZSBjb3ZldG91c25lc3MgdW5wcm9maXRhYmxlIHRvIHRoZSBvZmZlbmRlci4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRGVtLiAyNC4xMTMiIHZhbGlkPSJ5ZXMiPkRlbS4gMjQuMTEzPC9iaWJsPjsgYW5kIHNvbWUgc3VzcGVjdCBhIGNvcnJ1cHRpb24gaW4gdGhlIHRleHQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjYiIHVuaXQ9InNlY3Rpb24iIC8+QnkgYXBwbHlpbmcgc29tZSBvZiB0aGVzZSBjbGF1c2VzIGFuZCBvdGhlciBlbmFjdG1lbnRzIGZvdW5kIGluIHRoZSBQZXJzaWFuIGtpbmcncyBjb2RlLCBJIHRyeSB0byBtYWtlIG15IHNlcnZhbnRzIHVwcmlnaHQgaW4gdGhlIG1hdHRlcnMgdGhhdCBwYXNzIHRocm91Z2ggdGhlaXIgaGFuZHMuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkZvciB3aGlsZSB0aG9zZSBsYXdzIG9ubHkgcGVuYWxpc2UgdGhlIHdyb25nZG9lciw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TWVtPC90aXRsZT4uIElJSS4gaXYuIDguPC9ub3RlPiB0aGUga2luZydzIGNvZGUgbm90IG9ubHkgcHVuaXNoZXMgdGhlIGd1aWx0eSwgYnV0IGFsc28gYmVuZWZpdHMgdGhlIHVwcmlnaHQuIFRodXMsIHNlZWluZyB0aGF0IHRoZSBob25lc3QgZ3JvdyByaWNoZXIgdGhhbiB0aGUgZGlzaG9uZXN0LCBtYW55LCBkZXNwaXRlIHRoZWlyIGxvdmUgb2YgbHVjcmUsIGFyZSBjYXJlZnVsIHRvIHJlbWFpbiBmcmVlIGZyb20gZGlzaG9uZXN0eS4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TWVtPC90aXRsZT4uIElJSS4gaXYuIDguPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjgiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIGlmIEkgZmluZCBhbnkgYXR0ZW1wdGluZyB0byBwZXJzaXN0IGluIGRpc2hvbmVzdHksIGFsdGhvdWdoIHRoZXkgYXJlIHdlbGwgdHJlYXRlZCwgSSByZWdhcmQgdGhlbSBhcyBpbmNvcnJpZ2libHkgZ3JlZWR5LCBhbmQgaGF2ZSBub3RoaW5nIG1vcmUgdG8gZG8gd2l0aCB0aGVtLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOSIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgb3RoZXIgaGFuZCwgaWYgSSBkaXNjb3ZlciB0aGF0IGEgbWFuIGlzIGluY2xpbmVkIHRvIGJlIGhvbmVzdCBub3Qgb25seSBiZWNhdXNlIGhlIGdhaW5zIGJ5IGhpcyBob25lc3R5LCBidXQgYWxzbyBmcm9tIGEgZGVzaXJlIHRvIHdpbiBteSBhcHByb2JhdGlvbiwgSSB0cmVhdCBoaW0gbGlrZSBhIGZyZWUgbWFuIGJ5IG1ha2luZyBoaW0gcmljaDsgYW5kIG5vdCBvbmx5IHNvLCBidXQgSSBob25vdXIgaGltIGFzIGEgZ2VudGxlbWFuLgogICAgICAgIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgSSB0aGluaywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCB0aGF0IHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gYW1iaXRpb24gYW5kIGdyZWVkIGNvbnNpc3RzIGluIHRoaXMsIHRoYXQgZm9yIHRoZSBzYWtlIG9mIHByYWlzZSBhbmQgaG9ub3VyIHRoZSBhbWJpdGlvdXMgYXJlIHdpbGxpbmcgdG8gd29yayBwcm9wZXJseSwgdG8gdGFrZSByaXNrcyBhbmQgcmVmcmFpbiBmcm9tIGRpc2hvbmVzdCBnYWluLuKAmeKAnQo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE1IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['13.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsLCB3ZWxsLCBJIHdvbid0IGdvIG9uIHRvIGFzayB3aGV0aGVyIGFueXRoaW5nIG1vcmUgaXMgd2FudGluZyB0byB5b3VyIG1hbiwgYWZ0ZXIgeW91IGhhdmUgaW1wbGFudGVkIGluIGhpbSBhIGRlc2lyZSBmb3IgeW91ciBwcm9zcGVyaXR5IGFuZCBoYXZlIG1hZGUgaGltIGFsc28gY2FyZWZ1bCB0byBzZWUgdGhhdCB5b3UgYWNoaWV2ZSBpdCwgYW5kIGhhdmUgb2J0YWluZWQgZm9yIGhpbSwgYmVzaWRlcywgdGhlIGtub3dsZWRnZSBuZWVkZnVsIHRvIGVuc3VyZSB0aGF0IGV2ZXJ5IHBpZWNlIG9mIHdvcmsgZG9uZSBzaGFsbCBhZGQgdG8gdGhlIHByb2ZpdHMsIGFuZCwgZnVydGhlciwgaGF2ZSBtYWRlIGhpbSBjYXBhYmxlIG9mIHJ1bGluZywgYW5kIHdoZW4sIGJlc2lkZXMgYWxsIHRoaXMsIGhlIHRha2VzIGFzIG11Y2ggZGVsaWdodCBpbiBwcm9kdWNpbmcgaGVhdnkgY3JvcHMgZm9yIHlvdSBpbiBkdWUgc2Vhc29uIGFzIHlvdSB3b3VsZCB0YWtlIGlmIHlvdSBkaWQgdGhlIHdvcmsgeW91cnNlbGYuIEZvciBpdCBzZWVtcyB0byBtZSB0aGF0IGEgbWFuIGxpa2UgdGhhdCB3b3VsZCBtYWtlIGEgdmVyeSB2YWx1YWJsZSBiYWlsaWZmLiBOZXZlcnRoZWxlc3MsIElzY2hvbWFjaHVzLCBkb24ndCBsZWF2ZSBhIGdhcCBpbiB0aGF0IHBhcnQgb2YgdGhlIHN1YmplY3QgdG8gd2hpY2ggd2UgaGF2ZSBnaXZlbiB0aGUgbW9zdCBjdXJzb3J5IGF0dGVudGlvbi7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2hpY2ggaXMgaXQ/4oCZIGFza2VkIElzY2hvbWFjaHVzLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWW91IHNhaWQsIHlvdSBrbm93LCB0aGF0IHRoZSBncmVhdGVzdCBsZXNzb24gdG8gbGVhcm4gaXMgaG93IHRoaW5ncyBvdWdodCB0byBiZSBkb25lOyBhbmQgYWRkZWQgdGhhdCwgaWYgYSBtYW4gaXMgaWdub3JhbnQgd2hhdCB0byBkbyBhbmQgaG93IHRvIGRvIGl0LCBubyBnb29kIGNhbiBjb21lIG9mIGhpcyBtYW5hZ2VtZW50LuKAmQogICAgICAgIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIGhlIHNhaWQsIOKAmDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgYXJlIHlvdSBpbnNpc3Rpbmcgbm93IHRoYXQgSSBzaG91bGQgdGVhY2ggdGhlIHdob2xlIGFydCBhbmQgbXlzdGVyeSBvZiBhZ3JpY3VsdHVyZT/igJk8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFllcyzigJkgc2FpZCBJOyDigJhmb3IgbWF5YmUgaXQgaXMganVzdCB0aGlzIHRoYXQgbWFrZXMgcmljaCBtZW4gb2YgdGhvc2Ugd2hvIHVuZGVyc3RhbmQgaXQsIGFuZCBjb25kZW1ucyB0aGUgaWdub3JhbnQgdG8gYSBsaWZlIG9mIHBlbnVyeSwgZm9yIGFsbCB0aGVpciB0b2lsLuKAmQogICAgICAgIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIHlvdSBzaGFsbCBub3cgaGVhciBob3cga2luZGx5IGEgdGhpbmcgaXMgdGhpcyBhcnQuIEhlbHBmdWwsIHBsZWFzYW50LCBob25vdXJhYmxlLCBkZWFyIHRvIGdvZHMgYW5kIG1lbiBpbiB0aGUgaGlnaGVzdCBkZWdyZWUsIGl0IGlzIGFsc28gaW4gdGhlIGhpZ2hlc3QgZGVncmVlIGVhc3kgdG8gbGVhcm4uIE5vYmxlIHF1YWxpdGllcyBzdXJlbHkhIEFzIHlvdSBrbm93LCB3ZSBjYWxsIHRob3NlIGNyZWF0dXJlcyBub2JsZSB0aGF0IGFyZSBiZWF1dGlmdWwsIGdyZWF0IGFuZCBoZWxwZnVsLCBhbmQgeWV0IGdlbnRsZSB0b3dhcmRzIG1lbi7igJkKPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBaCwgYnV0IEkgdGhpbmssIElzY2hvbWFjaHVzLCB0aGF0IEkgcXVpdGUgdW5kZXJzdGFuZCB5b3VyIGFjY291bnQgb2YgdGhlc2UgbWF0dGVyc+KAlEkgbWVhbiBob3cgdG8gdGVhY2ggYSBiYWlsaWZmOyBmb3IgSSB0aGluayBJIGZvbGxvdyB5b3VyIHN0YXRlbWVudCB0aGF0IHlvdSBtYWtlIGhpbSBsb3lhbCB0byB5b3UsIGFuZCBjYXJlZnVsIGFuZCBjYXBhYmxlIG9mIHJ1bGluZyBhbmQgaG9uZXN0Lgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgeW91IHNhaWQgdGhhdCBvbmUgd2hvIGlzIHRvIGJlIHN1Y2Nlc3NmdWwgaW4gdGhlIG1hbmFnZW1lbnQgb2YgYSBmYXJtIG11c3QgbGVhcm4gd2hhdCB0byBkbyBhbmQgaG93IGFuZCB3aGVuIHRvIGRvIGl0LiBUaGF0IGlzIHRoZSBzdWJqZWN0IHRoYXQgd2UgaGF2ZSB0cmVhdGVkLCBpdCBzZWVtcyB0byBtZSwgaW4gYSByYXRoZXIgY3Vyc29yeSBmYXNoaW9uLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNyIgdW5pdD0ic2VjdGlvbiIgLz5hcyBpZiB5b3Ugc2FpZCB0aGF0IGFueW9uZSB3aG8gaXMgdG8gYmUgY2FwYWJsZSBvZiB3cml0aW5nIGZyb20gZGljdGF0aW9uIGFuZCByZWFkaW5nIHdoYXQgaXMgd3JpdHRlbiBtdXN0IGtub3cgdGhlIGFscGhhYmV0LiBGb3IgaGFkIEkgYmVlbiB0b2xkIHRoYXQsIEkgc2hvdWxkIGhhdmUgYmVlbiB0b2xkLCB0byBiZSBzdXJlLCB0aGF0IEkgbXVzdCBrbm93IHRoZSBhbHBoYWJldCwgYnV0IEkgZG9uJ3QgdGhpbmsgdGhhdCBwaWVjZSBvZiBpbmZvcm1hdGlvbiB3b3VsZCBoZWxwIG1lIHRvIGtub3cgaXQuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlNvIHRvbyBub3c7IEkgYW0gZWFzaWx5IGNvbnZpbmNlZCB0aGF0IGEgbWFuIHdobyBpcyB0byBtYW5hZ2UgYSBmYXJtIHN1Y2Nlc3NmdWxseSBtdXN0IHVuZGVyc3RhbmQgZmFybWluZywgYnV0IHRoYXQga25vd2xlZGdlIGRvZXNuJ3QgaGVscCBtZSB0byB1bmRlcnN0YW5kIGhvdyB0byBmYXJtLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOSIgdW5pdD0ic2VjdGlvbiIgLz5XZXJlIEkgdG8gZGVjaWRlIHRoaXMgdmVyeSBtb21lbnQgdG8gYmUgYSBmYXJtZXIsIEkgdGhpbmsgSSBzaG91bGQgYmUgbGlrZSB0aGF0IGRvY3RvciB3aG8gZ29lcyByb3VuZCB2aXNpdGluZyB0aGUgc2ljaywgYnV0IGhhcyBubyBrbm93bGVkZ2Ugb2YgdGhlIHJpZ2h0IHdheSB0byB0cmVhdCB0aGVtLiBUaGVyZWZvcmUsIHRoYXQgSSBtYXkgbm90IGJlIGxpa2UgaGltLCB5b3UgbXVzdCB0ZWFjaCBtZSB0aGUgYWN0dWFsIG9wZXJhdGlvbnMgb2YgZmFybWluZy7igJkKICAgICAgICA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTAiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFdoeSwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBmYXJtaW5nIGlzIG5vdCB0cm91Ymxlc29tZSB0byBsZWFybiwgbGlrZSBvdGhlciBhcnRzLCB3aGljaCB0aGUgcHVwaWwgbXVzdCBzdHVkeSB0aWxsIGhlIGlzIHdvcm4gb3V0IGJlZm9yZSBoZSBjYW4gZWFybiBoaXMga2VlcCBieSBoaXMgd29yay4gU29tZSB0aGluZ3MgeW91IGNhbiB1bmRlcnN0YW5kIGJ5IHdhdGNoaW5nIG1lbiBhdCB3b3JrLCBvdGhlcnMgYnkganVzdCBiZWluZyB0b2xkLCB3ZWxsIGVub3VnaCB0byB0ZWFjaCBhbm90aGVyIGlmIHlvdSB3aXNoLiBBbmQgSSBiZWxpZXZlIHRoYXQgeW91IGtub3cgYSBnb29kIGRlYWwgYWJvdXQgaXQgeW91cnNlbGYsIHdpdGhvdXQgYmVpbmcgYXdhcmUgb2YgdGhlIGZhY3QuCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIHRydXRoIGlzIHRoYXQsIHdoZXJlYXMgb3RoZXIgYXJ0aXN0cyBjb25jZWFsIG1vcmUgb3IgbGVzcyB0aGUgbW9zdCBpbXBvcnRhbnQgcG9pbnRzIGluIHRoZWlyIG93biBhcnQsIHRoZSBmYXJtZXIgd2hvIHBsYW50cyBiZXN0IGlzIG1vc3QgcGxlYXNlZCB3aGVuIGhlIGlzIGJlaW5nIHdhdGNoZWQsIHNvIGlzIGhlIHdobyBzb3dzIGJlc3QuIFF1ZXN0aW9uIGhpbSBhYm91dCBhbnkgcGllY2Ugb2Ygd29yayB3ZWxsIGRvbmU6IGFuZCBoZSB3aWxsIHRlbGwgeW91IGV4YWN0bHkgaG93IGhlIGRpZCBpdC4KICAgICAgICA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIiIHVuaXQ9InNlY3Rpb24iIC8+U28gZmFybWluZywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBtb3JlIHRoYW4gYW55IG90aGVyIGNhbGxpbmcsIHNlZW1zIHRvIHByb2R1Y2UgYSBnZW5lcm91cyBkaXNwb3NpdGlvbiBpbiBpdHMgZm9sbG93ZXJzLuKAmQo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBbiBleGNlbGxlbnQgcHJlYW1ibGUs4oCZIEkgY3JpZWQsIOKAmGFuZCBub3Qgb2YgYSBzb3J0IHRvIGRhbXAgdGhlIGhlYXJlcidzIGN1cmlvc2l0eS4gQ29tZSwgZGVzY3JpYmUgaXQgdG8gbWUsIGFsbCB0aGUgbW9yZSBiZWNhdXNlIGl0IGlzIHNvIHNpbXBsZSB0byBsZWFybi4gRm9yIGl0IGlzIG5vIGRpc2dyYWNlIHRvIHlvdSB0byB0ZWFjaCBlbGVtZW50YXJ5IGxlc3NvbnMsIGJ1dCBmYXIgbW9yZSBhIGRpc2dyYWNlIHRvIG1lIG5vdCB0byB1bmRlcnN0YW5kIHRoZW0sIGVzcGVjaWFsbHkgaWYgdGhleSBhcmUgcmVhbGx5IHVzZWZ1bC7igJnigJ0KICAgICAgICA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTYiIHVuaXQ9ImNoYXB0ZXIiIC8+PC90cmFuc2xhdGlvbj4="
translation['15.17'] = ""
translation['15.18'] = ""
translation['10.19'] = ""
translation['19.20'] = ""
translation['29.21'] = ""
translation['12.1'] = ""
translation['16.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UbyBteSBtaW5kIGl0IGlzIHdvcnRoIHdoaWxlIHRvIHJlbGF0ZSBub3Qgb25seSB0aGUgc2VyaW91cyBhY3RzIG9mIGdyZWF0IGFuZCBnb29kIG1lbiBidXQgYWxzbyB3aGF0IHRoZXkgZG8gaW4gdGhlaXIgbGlnaHRlciBtb29kcy4gSSBzaG91bGQgbGlrZSB0byBuYXJyYXRlIGFuIGV4cGVyaWVuY2Ugb2YgbWluZSB0aGF0IGdpdmVzIG1lIHRoaXMgY29udmljdGlvbi4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IHdhcyBvbiB0aGUgb2NjYXNpb24gb2YgdGhlIGhvcnNlLXJhY2VzIGF0IHRoZSBncmVhdGVyIFBhbmF0aGVuYWljIGdhbWVzOyBDYWxsaWFzLCBIaXBwb25pY3VzJyBzb24sIHdhcyBlbmFtb3VyZWQsIGFzIGl0IGhhcHBlbmVkLCBvZiB0aGUgYm95IEF1dG9seWN1cywgYW5kIGluIGhvbm91ciBvZiBoaXMgdmljdG9yeSBpbiB0aGUgcGFuY3JhdGl1bTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgcGFuY3JhdGl1bSB3YXMgYSBzZXZlcmUgYXRobGV0aWMgY29udGVzdCBpbnZvbHZpbmcgYSBjb21iaW5hdGlvbiBvZiBib3hpbmcgYW5kIHdyZXN0bGluZywgYW5kIHJlcXVpcmluZyBvbiB0aGUgcGFydCBvZiB0aGUgY29udGVzdGFudHMgdW51c3VhbCBwaHlzaXF1ZSBhbmQgY29uZGl0aW9uLiBUaGVyZSB3ZXJlIHNlcGFyYXRlIGV2ZW50cyBvcGVuIHRvIG1lbiBhbmQgdG8gYm95cy48L25vdGU+IGhhZCBicm91Z2h0IGhpbSB0byBzZWUgdGhlIHNwZWN0YWNsZS4gV2hlbiB0aGUgcmFjaW5nIHdhcyBvdmVyLCBDYWxsaWFzIHByb2NlZWRlZCBvbiBoaXMgd2F5IHRvIGhpcyBob3VzZSBpbiB0aGUgUGVpcmFldXMgd2l0aCBBdXRvbHljdXMgYW5kIHRoZSBib3kncyBmYXRoZXI7IE5pY2VyYXR1cyBhbHNvIHdhcyBpbiBoaXMgY29tcGFueS4KICAgICAgICA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgb24gY2F0Y2hpbmcgc2lnaHQgb2YgYSBncm91cCBjb21wcmlzaW5nIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgQ3JpdG9idWx1cywgSGVybW9nZW5lcywgQW50aXN0aGVuZXMsIGFuZCBDaGFybWlkZXMsIENhbGxpYXMgYmFkZSBvbmUgb2YgaGlzIHNlcnZhbnRzIGVzY29ydCBBdXRvbHljdXMgYW5kIHRoZSBvdGhlcnMsIGFuZCBoaW1zZWxmIGdvaW5nIG92ZXIgdG8gPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiBhbmQgaGlzIGNvbXBhbmlvbnMsIHNhaWQsCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNCIgdW5pdD0ic2VjdGlvbiIgLz7igJxUaGlzIGlzIGFuIG9wcG9ydHVuZSBtZWV0aW5nLCBmb3IgSSBhbSBhYm91dCB0byBnaXZlIGEgZGlubmVyIGluIGhvbm91ciBvZiBBdXRvbHljdXMgYW5kIGhpcyBmYXRoZXI7IGFuZCBJIHRoaW5rIHRoYXQgbXkgZW50ZXJ0YWlubWVudCB3b3VsZCBwcmVzZW50IGEgZ3JlYXQgZGVhbCBtb3JlIGJyaWxsaWFuY2UgaWYgbXkgZGluaW5nLXJvb20gd2VyZSBncmFjZWQgd2l0aCB0aGUgcHJlc2VuY2Ugb2YgbWVuIGxpa2UgeW91LCB3aG9zZSBoZWFydHMgaGF2ZSB1bmRlcmdvbmUgcGhpbG9zb3BoeSdzIHB1cmlmaWNhdGlvbiwgdGhhbiBpdCB3b3VsZCB3aXRoIGdlbmVyYWxzIGFuZCBjYXZhbHJ5IGNvbW1hbmRlcnMgYW5kIG9mZmljZS1zZWVrZXJzLuKAnQogICAgICAgIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZb3UgYXJlIGFsd2F5cyBxdWl6emluZyB1cyzigJ0gcmVwbGllZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT47IOKAnGZvciB5b3UgaGF2ZSB5b3Vyc2VsZiBwYWlkIGEgZ29vZCBkZWFsIG9mIG1vbmV5IGZvciB3aXNkb20gdG8gUHJvdGFnb3JhcywgR29yZ2lhcywgUHJvZGljdXMsIGFuZCBtYW55IG90aGVycywgd2hpbGUgeW91IHNlZSB0aGF0IHdlIGFyZSB3aGF0IHlvdSBtaWdodCBjYWxsIGFtYXRldXJzIGluIHBoaWxvc29waHk7IGFuZCBzbyB5b3UgZmVlbCBzdXBlcmNpbGlvdXMgdG93YXJkIHVzLuKAnQo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjYiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFllcyzigJ0gc2FpZCBDYWxsaWFzLCDigJxzbyBmYXIsIEkgYWRtaXQsIEkgaGF2ZSBiZWVuIGtlZXBpbmcgeW91IGlnbm9yYW50IG9mIG15IGFiaWxpdHkgYXQgcHJvZm91bmQgYW5kIGxlbmd0aHkgZGlzY291cnNlOyBidXQgbm93LCBpZiB5b3Ugd2lsbCBmYXZvdXIgbWUgd2l0aCB5b3VyIGNvbXBhbnksIEkgd2lsbCBwcm92ZSB0byB5b3UgdGhhdCBJIGFtIGEgcGVyc29uIG9mIHNvbWUgY29uc2VxdWVuY2Uu4oCdCiAgICAgICAgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjciIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBhdCBmaXJzdCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4gYW5kIGhpcyBjb21wYW5pb25zIHRoYW5rZWQgaGltIGZvciB0aGUgaW52aXRhdGlvbiwgYXMgbWlnaHQgYmUgZXhwZWN0ZWQsIGJ1dCB3b3VsZCBub3QgcHJvbWlzZSB0byBhdHRlbmQgdGhlIGJhbnF1ZXQ7IHdoZW4gaXQgYmVjYW1lIGNsZWFyLCBob3dldmVyLCB0aGF0IGhlIHdhcyB0YWtpbmcgdGhlaXIgcmVmdXNhbCB2ZXJ5IG11Y2ggdG8gaGVhcnQsIHRoZXkgd2VudCB3aXRoIGhpbS4gQW5kIHNvIGhpcyBndWVzdHMgYXJyaXZlZCwgc29tZSBoYXZpbmcgZmlyc3QgdGFrZW4gdGhlaXIgZXhlcmNpc2UgYW5kIHRoZWlyIHJ1Yi1kb3duLCBvdGhlcnMgd2l0aCB0aGUgYWRkaXRpb24gb2YgYSBiYXRoLgo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjgiIHVuaXQ9InNlY3Rpb24iIC8+QXV0b2x5Y3VzIHRvb2sgYSBzZWF0IGJ5IGhpcyBmYXRoZXIncyBzaWRlOyB0aGUgb3RoZXJzLCBvZiBjb3Vyc2UsIHJlY2xpbmVkLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BdHRpYyByZWxpZWZzIGRlcGljdGluZyBiYW5xdWV0IHNjZW5lcyBzaG93IHRoYXQgaXQgd2FzIGN1c3RvbWFyeSBmb3IgdGhlIG1lbiB0byByZWNsaW5lIGF0IHRhYmxlLCBidXQgZm9yIHRoZSB3b21lbiBhbmQgY2hpbGRyZW4sIGlmIHByZXNlbnQsIHRvIHNpdC48L25vdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkEgcGVyc29uIHdobyB0b29rIG5vdGUgb2YgdGhlIGNvdXJzZSBvZiBldmVudHMgd291bGQgaGF2ZSBjb21lIGF0IG9uY2UgdG8gdGhlIGNvbmNsdXNpb24gdGhhdCBiZWF1dHkgaXMgaW4gaXRzIGVzc2VuY2Ugc29tZXRoaW5nIHJlZ2FsLCBlc3BlY2lhbGx5IHdoZW4sIGFzIGluIHRoZSBwcmVzZW50IGNhc2Ugb2YgQXV0b2x5Y3VzLCBpdHMgcG9zc2Vzc29yIGpvaW5zIHdpdGggaXQgbW9kZXN0eSBhbmQgc29icmlldHkuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkZvciBpbiB0aGUgZmlyc3QgcGxhY2UsIGp1c3QgYXMgdGhlIHN1ZGRlbiBnbG93IG9mIGEgbGlnaHQgYXQgbmlnaHQgZHJhd3MgYWxsIGV5ZXMgdG8gaXRzZWxmLCBzbyBub3cgdGhlIGJlYXV0eSBvZiBBdXRvbHljdXMgY29tcGVsbGVkIGV2ZXJ5IG9uZSB0byBsb29rIGF0IGhpbS4gQW5kIGFnYWluLCB0aGVyZSB3YXMgbm90IG9uZSBvZiB0aGUgb25sb29rZXJzIHdobyBkaWQgbm90IGZlZWwgaGlzIHNvdWwgc3RyYW5nZWx5IHN0aXJyZWQgYnkgdGhlIGJveTsgc29tZSBvZiB0aGVtIGdyZXcgcXVpZXRlciB0aGFuIGJlZm9yZSwgb3RoZXJzIGV2ZW4gYXNzdW1lZCBzb21lIGtpbmQgb2YgYSBwb3NlLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTAiIHVuaXQ9InNlY3Rpb24iIC8+Tm93IGl0IGlzIHRydWUgdGhhdCBhbGwgd2hvIGFyZSB1bmRlciB0aGUgaW5mbHVlbmNlIG9mIGFueSBvZiB0aGUgZ29kcyBzZWVtIHdlbGwgd29ydGggZ2F6aW5nIGF0OyBidXQgd2hlcmVhcyB0aG9zZSB3aG8gYXJlIHBvc3Nlc3NlZCBvZiB0aGUgb3RoZXIgZ29kcyBoYXZlIGEgdGVuZGVuY3kgdG8gYmUgc3Rlcm5lciBvZiBjb3VudGVuYW5jZSwgbW9yZSB0ZXJyaWZ5aW5nIG9mIHZvaWNlLCBhbmQgbW9yZSB2ZWhlbWVudCwgdGhvc2Ugd2hvIGFyZSBpbnNwaXJlZCBieSBjaGFzdGUgTG92ZSBoYXZlIGEgbW9yZSB0ZW5kZXIgbG9vaywgc3ViZHVlIHRoZWlyIHZvaWNlcyB0byBtb3JlIGdlbnRsZSB0b25lcywgYW5kIGFzc3VtZSBhIHN1cHJlbWVseSBub2JsZSBiZWFyaW5nLiBTdWNoIHdhcyB0aGUgZGVtZWFub3VyIG9mIENhbGxpYXMgYXQgdGhpcyB0aW1lIHVuZGVyIHRoZSBpbmZsdWVuY2Ugb2YgTG92ZTsgYW5kIHRoZXJlZm9yZSBoZSB3YXMgYW4gb2JqZWN0IHdlbGwgd29ydGggdGhlIGdhemUgb2YgdGhvc2UgaW5pdGlhdGVkIGludG8gdGhlIHdvcnNoaXAgb2YgdGhpcyBnb2QuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGNvbXBhbnksIHRoZW4sIHdlcmUgZmVhc3RpbmcgaW4gc2lsZW5jZSwgYXMgdGhvdWdoIHNvbWUgb25lIGluIGF1dGhvcml0eSBoYWQgY29tbWFuZGVkIHRoZW0gdG8gZG8gc28sIHdoZW4gUGhpbGlwIHRoZSBidWZmb29uIGtub2NrZWQgYXQgdGhlIGRvb3IgYW5kIHRvbGQgdGhlIHBvcnRlciB0byBhbm5vdW5jZSB3aG8gaGUgd2FzIGFuZCB0aGF0IGhlIGRlc2lyZWQgdG8gYmUgYWRtaXR0ZWQ7IGhlIGFkZGVkIHRoYXQgd2l0aCByZWdhcmQgdG8gZm9vZCBoZSBoYWQgY29tZSBhbGwgcHJlcGFyZWQsIGluIGFsbCB2YXJpZXRpZXPigJR0byBkaW5lIG9uIHNvbWUgb3RoZXIgcGVyc29uJ3Ms4oCUYW5kIHRoYXQgaGlzIHNlcnZhbnQgd2FzIGluIGdyZWF0IGRpc3RyZXNzIHdpdGggdGhlIGxvYWQgaGUgY2FycmllZCBvZuKAlG5vdGhpbmcsIGFuZCB3aXRoIGhhdmluZyBhbiBlbXB0eSBzdG9tYWNoLiBIZWFyaW5nIHRoaXMsIENhbGxpYXMgc2FpZCwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyIiB1bml0PSJzZWN0aW9uIiAvPuKAnFdlbGwsIGdlbnRsZW1lbiwgd2UgY2Fubm90IGRlY2VudGx5IGJlZ3J1ZGdlIGhpbSBhdCB0aGUgbGVhc3QgdGhlIHNoZWx0ZXIgb2Ygb3VyIHJvb2Y7IHNvIGxldCBoaW0gY29tZSBpbi7igJ0gV2l0aCB0aGUgd29yZHMgaGUgY2FzdCBhIGdsYW5jZSBhdCBBdXRvbHljdXMsIG9idmlvdXNseSB0cnlpbmcgdG8gbWFrZSBvdXQgd2hhdCBoZSBoYWQgdGhvdWdodCBvZiB0aGUgcGxlYXNhbnRyeS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBQaGlsaXAsIHN0YW5kaW5nIGF0IHRoZSB0aHJlc2hvbGQgb2YgdGhlIG1lbidzIGhhbGwgd2hlcmUgdGhlIGJhbnF1ZXQgd2FzIHNlcnZlZCwgYW5ub3VuY2VkOjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZb3UgYWxsIGtub3cgdGhhdCBJIGFtIGEgamVzdGVyOyBhbmQgc28gSSBoYXZlIGNvbWUgaGVyZSB3aXRoIGEgd2lsbCwgdGhpbmtpbmcgaXQgbW9yZSBvZiBhIGpva2UgdG8gY29tZSB0byB5b3VyIGRpbm5lciB1bmludml0ZWQgdGhhbiB0byBjb21lIGJ5IGludml0YXRpb24u4oCdIOKAnFdlbGwsIHRoZW4s4oCdIHNhaWQgQ2FsbGlhcywg4oCcdGFrZSBhIHBsYWNlOyBmb3IgdGhlIGd1ZXN0cywgdGhvdWdoIHdlbGwgZmVkLCBhcyB5b3Ugb2JzZXJ2ZSwgb24gc2VyaW91c25lc3MsIGFyZSBwZXJoYXBzIHJhdGhlciBpbGwgc3VwcGxpZWQgd2l0aCBsYXVnaHRlci7igJ0KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5ObyBzb29uZXIgd2VyZSB0aGV5IGVuZ2FnZWQgaW4gdGhlaXIgZGlubmVyIHRoYW4gUGhpbGlwIGF0dGVtcHRlZCBhIHdpdHRpY2lzbSwgd2l0aCBhIHZpZXcgdG8gcmVuZGVyaW5nIHRoZSBzZXJ2aWNlIHRoYXQgc2VjdXJlZCBoaW0gYWxsIGhpcyBkaW5uZXIgZW5nYWdlbWVudHM7IGJ1dCBvbiBmaW5kaW5nIHRoYXQgaGUgZGlkIG5vdCBleGNpdGUgYW55IGxhdWdodGVyLCBoZSBzaG93ZWQgaGltc2VsZiwgZm9yIHRoZSB0aW1lLCBjb25zaWRlcmFibHkgdmV4ZWQuIEEgbGl0dGxlIGxhdGVyLCBob3dldmVyLCBoZSBtdXN0IHRyeSBhbm90aGVyIGplc3Q7IGJ1dCB3aGVuIHRoZXkgd291bGQgbm90IGxhdWdoIGF0IGhpbSB0aGlzIHRpbWUgZWl0aGVyLCBoZSBzdG9wcGVkIHdoaWxlIHRoZSBkaW5uZXIgd2FzIGluIGZ1bGwgc3dpbmcsIGNvdmVyZWQgaGlzIGhlYWQgd2l0aCBoaXMgY2xvYWssIGFuZCBsYXkgZG93biBvbiBoaXMgY291Y2guCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz7igJxXaGF0IGRvZXMgdGhpcyBtZWFuLCBQaGlsaXA/4oCdIENhbGxpYXMgaW5xdWlyZWQuIOKAnEFyZSB5b3Ugc2VpemVkIHdpdGggYSBwYWluP+KAnSBQaGlsaXAgcmVwbGllZCB3aXRoIGEgZ3JvYW4sIOKAnFllcywgQ2FsbGlhcywgYnkgSGVhdmVuLCB3aXRoIGEgc2V2ZXJlIG9uZTsgZm9yIHNpbmNlIGxhdWdodGVyIGhhcyBwZXJpc2hlZCBmcm9tIHRoZSB3b3JsZCwgbXkgYnVzaW5lc3MgaXMgcnVpbmVkLiBGb3IgaW4gdGltZXMgcGFzdCwgdGhlIHJlYXNvbiB3aHkgSSBnb3QgaW52aXRhdGlvbnMgdG8gZGlubmVyIHdhcyB0aGF0IEkgbWlnaHQgc3RpciB1cCBsYXVnaHRlciBhbW9uZyB0aGUgZ3Vlc3RzIGFuZCBtYWtlIHRoZW0gbWVycnk7IGJ1dCBub3csIHdoYXQgd2lsbCBpbmR1Y2UgYW55IG9uZSB0byBpbnZpdGUgbWU/IEZvciBJIGNvdWxkIG5vIG1vcmUgdHVybiBzZXJpb3VzIHRoYW4gSSBjb3VsZCBiZWNvbWUgaW1tb3J0YWw7IGFuZCBjZXJ0YWlubHkgbm8gb25lIHdpbGwgaW52aXRlIG1lIGluIHRoZSBob3BlIG9mIGEgcmV0dXJuIGludml0YXRpb24sIGFzIGV2ZXJ5IG9uZSBrbm93cyB0aGF0IHRoZXJlIGlzIG5vdCBhIHZlc3RpZ2Ugb2YgdHJhZGl0aW9uIG9mIGJyaW5naW5nIGRpbm5lciBpbnRvIG15IGhvdXNlLuKAnSBBcyBoZSBzYWlkIHRoaXMsIGhlIHdpcGVkIGhpcyBub3NlLCBhbmQgdG8ganVkZ2UgYnkgdGhlIHNvdW5kLCBoZSB3YXMgZXZpZGVudGx5IHdlZXBpbmcuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BbGwgdHJpZWQgdG8gY29tZm9ydCBoaW0gd2l0aCB0aGUgcHJvbWlzZSB0aGF0IHRoZXkgd291bGQgbGF1Z2ggbmV4dCB0aW1lLCBhbmQgdXJnZWQgaGltIHRvIGVhdDsgYW5kIENyaXRvYnVsdXMgYWN0dWFsbHkgYnVyc3Qgb3V0IGludG8gYSBndWZmYXcgYXQgaGlzIGx1Z3VicmlvdXMgbW9hbmluZy4gVGhlIG1vbWVudCBQaGlsaXAgaGVhcmQgdGhlIGxhdWdodGVyIGhlIHVuY292ZXJlZCBoaXMgaGVhZCwgYW5kIGV4aG9ydGluZyBoaXMgc3Bpcml0IHRvIGJlIG9mIGdvb2QgY291cmFnZSwgaW4gdmlldyBvZiBhcHByb2FjaGluZyBlbmdhZ2VtZW50cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+UGhpbGlwIHB1bnMgb24gdGhlIGFtYmlndW91cyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg8+FzrzOss6/zrvOseG9tyw8L2ZvcmVpZ24+IHdoaWNoIG1lYW5zIGVpdGhlciBob3N0aWxlIGVuY291bnRlcnMgb3IgYSBiYW5xdWV0IHRvIHdoaWNoIHRoZSB2aWFuZHMgYXJlIGNvbnRyaWJ1dGVkIGJ5IHRoZSBndWVzdHMuIEhpcyBleGhvcnRhdGlvbiB0byBoaXMgc3Bpcml0IGlzIHF1aXRlIE9keXNzZWFuLjwvbm90ZT4gaGUgZmVsbCB0byBlYXRpbmcgYWdhaW4uCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Dz4XOvM6yzr/Ou86x4b23LDwvZm9yZWlnbj4gd2hpY2ggbWVhbnMgZWl0aGVyIGhvc3RpbGUgZW5jb3VudGVycyBvciBhIGJhbnF1ZXQgdG8gd2hpY2ggdGhlIHZpYW5kcyBhcmUgY29udHJpYnV0ZWQgYnkgdGhlIGd1ZXN0cy4gSGlzIGV4aG9ydGF0aW9uIHRvIGhpcyBzcGlyaXQgaXMgcXVpdGUgT2R5c3NlYW4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIiIHVuaXQ9ImNoYXB0ZXIiIC8+PC90cmFuc2xhdGlvbj4="
translation['27.3'] = ""
translation['14.4'] = ""
translation['64.5'] = ""
translation['10.6'] = ""
translation['10.7'] = ""
translation['5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuIHNvbWUgYW1vbmcgdGhlIHJlc3Qgb2YgdGhlIGJhbnF1ZXRlcnMga2VwdCB1cmdpbmcgUGhpbGlwIHRvIGdvIG9uIHdpdGggaGlzIGNvbXBhcmlzb25zLCB3aGlsZSBvdGhlcnMgb3Bwb3NlZC4gQXMgdGhlIGNsYW1vdXIgcm9zZSB0byBzb21lIGhlaWdodCwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+IG9uY2UgbW9yZSBpbnRlcnBvc2VkLCBzYXlpbmc6IOKAnFNpbmNlIHdlIGFsbCB3YW50IHRvIHRhbGssIHdvdWxkIHRoaXMgbm90IGJlIGEgZmluZSB0aW1lIHRvIGpvaW4gaW4gc2luZ2luZz/igJ0gQW5kIHdpdGggdGhlIHdvcmRzIGhlIGJlZ2FuIGEgc29uZy4KICAgICAgICA8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIiIHVuaXQ9InNlY3Rpb24iIC8+V2hlbiB0aGV5IGhhZCBmaW5pc2hlZCwgYSBwb3R0ZXIncyB3aGVlbCB3YXMgYnJvdWdodCBpbiBmb3IgdGhlIGRhbmNpbmcgZ2lybCBvbiB3aGljaCBzaGUgaW50ZW5kZWQgcGVyZm9ybWluZyBzb21lIGZlYXRzIG9mIGp1Z2dsZXJ5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGlzIHByb21wdGVkIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiB0byBvYnNlcnZlIHRvIHRoZSBTeXJhY3VzYW46IOKAnFNpciwgaXQgaXMgcXVpdGUgcHJvYmFibGUgdGhhdCwgdG8gdXNlIHlvdXIgd29yZHMsIEkgYW0gaW5kZWVkIGEg4oCYdGhpbmtlcuKAmTsgYXQgYW55IHJhdGUsIEkgYW0gbm93IGNvbnNpZGVyaW5nIGhvdyBpdCBtaWdodCBiZSBwb3NzaWJsZSBmb3IgdGhpcyBsYWQgb2YgeW91cnMgYW5kIHRoaXMgbWFpZCB0byBleGVydCBhcyBsaXR0bGUgZWZmb3J0IGFzIG1heSBiZSwgYW5kIGF0IHRoZSBzYW1lIHRpbWUgZ2l2ZSB1cyB0aGUgZ3JlYXRlc3QgcG9zc2libGUgYW1vdW50IG9mIHBsZWFzdXJlIGluIHdhdGNoaW5nIHRoZW0s4oCUdGhpcyBiZWluZyB5b3VyIHB1cnBvc2UsIGFsc28sIEkgYW0gc3VyZS4KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk5vdywgdHVybmluZyBzb21lcnNhdWx0cyBpbiBhbW9uZyBrbml2ZXMgc2VlbXMgdG8gbWUgdG8gYmUgYSBkYW5nZXJvdXMgZXhoaWJpdGlvbiwgd2hpY2ggaXMgdXR0ZXJseSBvdXQgb2YgcGxhY2UgYXQgYSBiYW5xdWV0LiBBbHNvLCB0byB3cml0ZSBvciByZWFkIGFsb3VkIG9uIGEgd2hpcmxpbmcgcG90dGVyJ3Mgd2hlZWwgbWF5IHBlcmhhcHMgYmUgc29tZXRoaW5nIG9mIGEgZmVhdDsgeWV0IEkgY2Fubm90IGNvbmNlaXZlIHdoYXQgcGxlYXN1cmUgZXZlbiB0aGlzIGNhbiBhZmZvcmQuIE5vciBpcyBpdCBhbnkgbW9yZSBkaXZlcnRpbmcgdG8gd2F0Y2ggdGhlIHlvdW5nIGFuZCBiZWF1dGlmdWwgZ29pbmcgdGhyb3VnaCBib2RpbHkgY29udG9ydGlvbnMgYW5kIGltaXRhdGluZyBob29wcyB0aGFuIHRvIGNvbnRlbXBsYXRlIHRoZW0gaW4gcmVwb3NlLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgaXMgb2YgY291cnNlIG5vIHJhcmUgZXZlbnQgdG8gbWVldCB3aXRoIG1hcnZlbHMsIGlmIHRoYXQgaXMgd2hhdCBvbmUncyBtaW5kIGlzIHNldCBvbi4gSGUgbWF5IG1hcnZlbCBhdCB3aGF0IGhlIGZpbmRzIGltbWVkaWF0ZWx5IGF0IGhhbmQs4oCUZm9yIGluc3RhbmNlLCB3aHkgdGhlIGxhbXAgZ2l2ZXMgbGlnaHQgb3dpbmcgdG8gaXRzIGhhdmluZyBhIGJyaWdodCBmbGFtZSwgd2hpbGUgYSBicm9uemUgbWlycm9yLCBsaWtld2lzZSBicmlnaHQsIGRvZXMgbm90IHByb2R1Y2UgbGlnaHQgYnV0IGluc3RlYWQgcmVmbGVjdHMgb3RoZXIgdGhpbmdzIHRoYXQgYXBwZWFyIGluIGl0OyBvciBob3cgaXQgY29tZXMgYWJvdXQgdGhhdCBvbGl2ZSBvaWwsIHRob3VnaCB3ZXQsIG1ha2VzIHRoZSBmbGFtZSBoaWdoZXIsIHdoaWxlIHdhdGVyLCBiZWNhdXNlIGl0IGlzIHdldCwgcHV0cyB0aGUgZmlyZSBvdXQuCiAgICAgICAgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjUiIHVuaXQ9InNlY3Rpb24iIC8+SG93ZXZlciwgdGhlc2UgcXVlc3Rpb25zIGFsc28gZmFpbCB0byBwcm9tb3RlIHRoZSBzYW1lIG9iamVjdCB0aGF0IHdpbmUgZG9lczsgYnV0IGlmIHRoZSB5b3VuZyBwZW9wbGUgd2VyZSB0byBoYXZlIGEgZmx1dGUgYWNjb21wYW5pbWVudCBhbmQgZGFuY2UgZmlndXJlcyBkZXBpY3RpbmcgdGhlIEdyYWNlcywgdGhlIEhvcmFlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5PciwgdGhlIFNlYXNvbnMuIE9yIGl0IG1heSBiZSB1c2VkIGhlcmUgaW4gdGhlIEhvbWVyaWMgc2Vuc2Ugb2YgdGhlIG1haWRlbnMgd2hvIGtlcHQgdGhlIGNsb3VkIGdhdGUgb2YgSGVhdmVuLjwvbm90ZT4gYW5kIHRoZSBOeW1waHMsIEkgYmVsaWV2ZSB0aGF0IHRoZXkgd291bGQgYmUgZmFyIGxlc3Mgd2VhcmllZCB0aGVtc2VsdmVzIGFuZCB0aGF0IHRoZSBjaGFybXMgb2YgdGhlIGJhbnF1ZXQgd291bGQgYmUgZ3JlYXRseSBlbmhhbmNlZC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVXBvbiBteSB3b3JkLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4s4oCdIHJlcGxpZWQgdGhlIFN5cmFjdXNhbiwg4oCceW91IGFyZSBxdWl0ZSByaWdodDsgYW5kIEkgd2lsbCBicmluZyBpbiBhIHNwZWN0YWNsZSB0aGF0IHdpbGwgZGVsaWdodCB5b3Uu4oCdCiAgICAgICAgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['43.9'] = ""
translation['1.1'] = ""
translation['1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgY2FuIHdlIHNheSB3aGF0IHRoZSBmdW5jdGlvbiBvZiBlc3RhdGUgbWFuYWdlbWVudCBpcywganVzdCBhcyB3ZSBjYW4gc2F5IHdoYXQgaXMgdGhlIGZ1bmN0aW9uIG9mIGVhY2ggb2YgdGhlc2UgYXJ0cz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCwgSSBzdXBwb3NlIHRoYXQgdGhlIGJ1c2luZXNzIG9mIGEgZ29vZCBlc3RhdGUgbWFuYWdlciBpcyB0byBtYW5hZ2UgaGlzIG93biBlc3RhdGUgd2VsbC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMsIGFuZCBpbiBjYXNlIGhlIHdlcmUgcHV0IGluIGNoYXJnZSBvZiBhbm90aGVyIG1hbidzIGVzdGF0ZSwgY291bGQgaGUgbm90LCBpZiBoZSBjaG9zZSwgbWFuYWdlIGl0IGFzIHdlbGwgYXMgaGUgbWFuYWdlcyBoaXMgb3duPyBBbnlvbmUgd2hvIHVuZGVyc3RhbmRzIGNhcnBlbnRyeSBjYW4gZG8gZm9yIGFub3RoZXIgZXhhY3RseSB0aGUgc2FtZSB3b3JrIGFzIGhlIGRvZXMgZm9yIGhpbXNlbGY7IGFuZCBzbywgSSBwcmVzdW1lLCBjYW4gYSBnb29kIGVzdGF0ZSBtYW5hZ2VyLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIHRoaW5rIHNvLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4u4oCdCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJcyBpdCBwb3NzaWJsZSwgdGhlbiwgZm9yIG9uZSB3aG8gdW5kZXJzdGFuZHMgdGhpcyBhcnQsIGV2ZW4gaWYgaGUgaGFzIG5vIHByb3BlcnR5IG9mIGhpcyBvd24sIHRvIGVhcm4gbW9uZXkgYnkgbWFuYWdpbmcgYW5vdGhlciBtYW4ncyBlc3RhdGUsIGp1c3QgYXMgaGUgbWlnaHQgZG8gYnkgYnVpbGRpbmcgaGltIGEgaG91c2U/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFllcywgb2YgY291cnNlOyBhbmQgaGUgd291bGQgZ2V0IGEgZ29vZCBzYWxhcnkgaWYsIGFmdGVyIHRha2luZyBvdmVyIGFuIGVzdGF0ZSwgaGUgY29udGludWVkIHRvIHBheSBhbGwgb3V0Z29pbmdzLCBhbmQgdG8gaW5jcmVhc2UgdGhlIGVzdGF0ZSBieSBzaG93aW5nIGEgYmFsYW5jZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IHdoYXQgZG8gd2UgbWVhbiBub3cgYnkgYW4gZXN0YXRlPwo8L3RyYW5zbGF0aW9uPg=="
translation['1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPklzIGl0IHRoZSBzYW1lIHRoaW5nIGFzIGEgaG91c2UsIG9yIGlzIGFsbCBwcm9wZXJ0eSB0aGF0IG9uZSBwb3NzZXNzZXMgb3V0c2lkZSB0aGUgaG91c2UgYWxzbyBwYXJ0IG9mIHRoZSBlc3RhdGU/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdlbGwsIEkgdGhpbmsgdGhhdCBldmVuIGlmIHRoZSBwcm9wZXJ0eSBpcyBzaXR1YXRlZCBpbiBkaWZmZXJlbnQgY2l0aWVzLCBldmVyeXRoaW5nIGEgbWFuIHBvc3Nlc3NlcyBpcyBwYXJ0IG9mIGhpcyBlc3RhdGUu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxEbyBub3Qgc29tZSBtZW4gcG9zc2VzcyBlbmVtaWVzP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxPZiBjb3Vyc2U7IHNvbWUgaW4gZmFjdCBwb3NzZXNzIG1hbnku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFNoYWxsIHdlIGluY2x1ZGUgdGhlaXIgZW5lbWllcyBpbiB0aGVpciBwb3NzZXNzaW9ucz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSXQgd291bGQgYmUgcmlkaWN1bG91cywgc3VyZWx5LCBpZiBvbmUgYWN0dWFsbHkgcmVjZWl2ZWQgYSBzYWxhcnkgZm9yIGluY3JlYXNpbmcgdGhlIG51bWJlciBvZiBhIG1hbidzIGVuZW1pZXMh4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCZWNhdXNlLCB5b3Uga25vdywgd2Ugc3VwcG9zZWQgYSBtYW4ncyBlc3RhdGUgdG8gYmUgdGhlIHNhbWUgYXMgaGlzIHByb3BlcnR5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUbyBiZSBzdXJl4oCUbWVhbmluZyB0aGVyZWJ5IHRoZSBnb29kIHRoaW5ncyB0aGF0IGhlIHBvc3Nlc3Nlcy4gTm8sIG9mIGNvdXJzZSBJIGRvbid0IGNhbGwgYW55IGJhZCB0aGluZyB0aGF0IGhlIG1heSBwb3NzZXNzIHByb3BlcnR5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZb3Ugc2VlbSB0byB1c2UgdGhlIHdvcmQgcHJvcGVydHkgb2Ygd2hhdGV2ZXIgaXMgcHJvZml0YWJsZSB0byBpdHMgb3duZXIu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seTsgYnV0IHdoYXQgaXMgaGFybWZ1bCBJIHJlZ2FyZCBhcyBsb3NzIHJhdGhlciB0aGFuIHdlYWx0aC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMsIGFuZCBjb25zZXF1ZW50bHkgaWYgYSBtYW4gYnV5cyBhIGhvcnNlIGFuZCBkb2Vzbid0IGtub3cgaG93IHRvIG1hbmFnZSBpdCwgYW5kIHNvIGtlZXBzIG9uIGdldHRpbmcgdGhyb3duIGFuZCBpbmp1cmluZyBoaW1zZWxmIGJ5IHRyeWluZyB0byByaWRlIGl0LCB0aGUgaG9yc2UgaXMgbm90IHdlYWx0aCB0byBoaW0sIEkgcHJlc3VtZT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm8sIGlmIHdlIGFzc3VtZSB0aGF0IHdlYWx0aCBpcyBhIGdvb2QgdGhpbmcu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEl0IGZvbGxvd3MgdGhhdCBsYW5kIGlzIG5vdCB3ZWFsdGggZWl0aGVyIHRvIGEgbWFuIHdobyB3b3JrcyBpdCBpbiBzdWNoIGEgd2F5IHRoYXQgaGlzIHdvcmsgcmVzdWx0cyBpbiBsb3NzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUbyBiZSBzdXJlOiBldmVuIGxhbmQgaXMgbm90IHdlYWx0aCBpZiBpdCBtYWtlcyB1cyBzdGFydmUgaW5zdGVhZCBvZiBzdXBwb3J0aW5nIHVzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgdGhlIHNhbWUgd2lsbCBob2xkIGdvb2Qgb2Ygc2hlZXAsIHdpbGwgaXQgbm90PyBpZiBhIG1hbiBsb3NlcyB0aHJvdWdoIGlnbm9yYW5jZSBvZiBzaGVlcCBmYXJtaW5nLCBoaXMgc2hlZXAgdG9vIHdpbGwgbm90IGJlIHdlYWx0aCB0byBoaW0/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEkgdGhpbmsgbm90LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJdCBzZWVtcywgdGhlbiwgdGhhdCB5b3VyIHZpZXcgaXMgdGhpczogd2hhdCBpcyBwcm9maXRhYmxlIGlzIHdlYWx0aCwgd2hhdCBpcyBoYXJtZnVsIGlzIG5vdCB3ZWFsdGgu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFF1aXRlIHNvLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhhdCBpcyB0byBzYXksIHRoZSBzYW1lIHRoaW5ncyBhcmUgd2VhbHRoIGFuZCBub3Qgd2VhbHRoLCBhY2NvcmRpbmcgYXMgb25lIHVuZGVyc3RhbmRzIG9yIGRvZXMgbm90IHVuZGVyc3RhbmQgaG93IHRvIHVzZSB0aGVtLiBBIGZsdXRlLCBmb3IgZXhhbXBsZSwgaXMgd2VhbHRoIHRvIG9uZSB3aG8gaXMgY29tcGV0ZW50IHRvIHBsYXkgaXQsIGJ1dCB0byBhbiBpbmNvbXBldGVudCBwZXJzb24gaXQgaXMgbm8gYmV0dGVyIHRoYW4gdXNlbGVzcyBzdG9uZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRydWXigJR1bmxlc3MgaGUgc2VsbHMgaXQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2Ugbm93IHNlZSB0aGF0IHRvIHBlcnNvbnMgd2hvIGRvbid0IHVuZGVyc3RhbmQgaXRzIHVzZSwgYSBmbHV0ZSBpcyB3ZWFsdGggaWYgdGhleSBzZWxsIGl0LCBidXQgbm90IHdlYWx0aCBpZiB0aGV5IGtlZXAgaXQgaW5zdGVhZCBvZiBzZWxsaW5nLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgYW5kIG91ciBhcmd1bWVudCBydW5zIGNvbnNpc3RlbnRseSwgc2luY2Ugd2UgaGF2ZSBzYWlkIHRoYXQgd2hhdCBpcyBwcm9maXRhYmxlIGlzIHdlYWx0aC4gRm9yIGEgZmx1dGUsIGlmIG5vdCBwdXQgdXAgZm9yIHNhbGUsIGlzIG5vdCB3ZWFsdGgsIGJlY2F1c2UgaXQgaXMgdXNlbGVzczogaWYgcHV0IHVwIGZvciBzYWxlIGl0IGJlY29tZXMgd2VhbHRoLuKAnQogICAgICAgIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLOKAnSBjb21tZW50ZWQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCDigJxwcm92aWRlZCBoZSBrbm93cyBob3cgdG8gc2VsbDsgYnV0IGFnYWluLCBpbiBjYXNlIGhlIHNlbGxzIGl0IGZvciBzb21ldGhpbmcgaGUgZG9lc24ndCBrbm93IGhvdyB0byB1c2UsIGV2ZW4gdGhlbiB0aGUgc2FsZSBkb2Vzbid0IGNvbnZlcnQgaXQgaW50byB3ZWFsdGgsIGFjY29yZGluZyB0byB5b3Uu4oCdPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZb3UgaW1wbHksIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgdGhhdCBldmVuIG1vbmV5IGlzbid0IHdlYWx0aCB0byBvbmUgd2hvIGRvZXNuJ3Qga25vdyBob3cgdG8gdXNlIGl0LuKAnQo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHlvdSwgSSB0aGluaywgYWdyZWUgd2l0aCBtZSB0byB0aGlzIGV4dGVudCwgdGhhdCB3ZWFsdGggaXMgdGhhdCBmcm9tIHdoaWNoIGEgbWFuIGNhbiBkZXJpdmUgcHJvZml0LiBBdCBhbnkgcmF0ZSwgaWYgYSBtYW4gdXNlcyBoaXMgbW9uZXkgdG8gYnV5IGEgbWlzdHJlc3Mgd2hvIG1ha2VzIGhpbSB3b3JzZSBvZmYgaW4gYm9keSBhbmQgc291bCBhbmQgZXN0YXRlLCBob3cgY2FuIGhpcyBtb25leSBiZSBwcm9maXRhYmxlIHRvIGhpbSB0aGVuP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCeSBubyBtZWFucywgdW5sZXNzIHdlIGFyZSByZWFkeSB0byBtYWludGFpbiB0aGF0IHRoZSB3ZWVkIGNhbGxlZCBuaWdodHNoYWRlLCB3aGljaCBkcml2ZXMgeW91IG1hZCBpZiB5b3UgZWF0IGl0LCBpcyB3ZWFsdGgu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiBtb25leSBpcyB0byBiZSBrZXB0IGF0IGEgZGlzdGFuY2UsIENyaXRvYnVsdXMsIGlmIG9uZSBkb2Vzbid0IGtub3cgaG93IHRvIHVzZSBpdCwgYW5kIG5vdCB0byBiZSBpbmNsdWRlZCBpbiB3ZWFsdGguIEJ1dCBob3cgYWJvdXQgZnJpZW5kcz8gSWYgb25lIGtub3dzIGhvdyB0byBtYWtlIHVzZSBvZiB0aGVtIHNvIGFzIHRvIHByb2ZpdCBieSB0aGVtLCB3aGF0IGFyZSB0aGV5IHRvIGJlIGNhbGxlZD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VhbHRoLCBvZiBjb3Vyc2UsIGFuZCBtdWNoIG1vcmUgc28gdGhhbiBjYXR0bGUsIGlmIGl0IGJlIHRydWUgdGhhdCB0aGV5IGFyZSBtb3JlIHByb2ZpdGFibGUgdGhhbiBjYXR0bGUu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCBhbmQgaXQgZm9sbG93cyBmcm9tIHdoYXQgeW91IHNheSB0aGF0IGVuZW1pZXMgdG9vIGFyZSB3ZWFsdGggdG8gYW55b25lIHdobyBjYW4gZGVyaXZlIHByb2ZpdCBmcm9tIHRoZW0u4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdlbGwsIHRoYXQgaXMgbXkgb3Bpbmlvbi7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ29uc2VxdWVudGx5IGl0IGlzIHRoZSBidXNpbmVzcyBvZiBhIGdvb2QgZXN0YXRlIG1hbmFnZXIgdG8ga25vdyBob3cgdG8gZGVhbCB3aXRoIGVuZW1pZXMgc28gYXMgdG8gZGVyaXZlIHByb2ZpdCBmcm9tIHRoZW0gdG9vLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxNb3N0IGRlY2lkZWRseS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSW4gZmFjdCwgQ3JpdG9idWx1cywgeW91IGNhbm5vdCBmYWlsIHRvIG5vdGljZSB0aGF0IG1hbnkgcHJpdmF0ZSBwZXJzb25zIGhhdmUgYmVlbiBpbmRlYnRlZCB0byB3YXIgZm9yIHRoZSBpbmNyZWFzZSBvZiB0aGVpciBlc3RhdGVzLCBhbmQgbWFueSBwcmluY2VzIHRvby7igJ0KICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCBzbyBmYXIgc28gZ29vZCwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LiBCdXQgc29tZXRpbWVzIHdlIGNvbWUgYWNyb3NzIHBlcnNvbnMgcG9zc2Vzc2VkIG9mIGtub3dsZWRnZSBhbmQgbWVhbnMgd2hlcmVieSB0aGV5IGNhbiBpbmNyZWFzZSB0aGVpciBlc3RhdGVzIGlmIHRoZXkgd29yaywgYW5kIHdlIGZpbmQgdGhhdCB0aGV5IGFyZSB1bndpbGxpbmcgdG8gZG8gc287IGFuZCBjb25zZXF1ZW50bHkgd2Ugc2VlIHRoYXQgdGhlaXIga25vd2xlZGdlIHByb2ZpdHMgdGhlbSBub3RoaW5nLiBXaGF0IGFyZSB3ZSB0byBtYWtlIG9mIHRoYXQ/IEluIHRoZXNlIGNhc2VzLCBzdXJlbHksIG5laXRoZXIgdGhlaXIga25vd2xlZGdlIG5vciB0aGVpciBwcm9wZXJ0eSBpcyB3ZWFsdGg/4oCdCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQXJlIHlvdSB0cnlpbmcgdG8gcmFpc2UgYSBkaXNjdXNzaW9uIGFib3V0IHNsYXZlcywgQ3JpdG9idWx1cz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcT2ggbm8sIG5vdCBhdCBhbGw6IEkgYW0gcmVmZXJyaW5nIHRvIHBlcnNvbnMgb2Ygd2hvbSBzb21lLCBhdCBhbnkgcmF0ZSwgYXJlIGNvbnNpZGVyZWQgbWVuIG9mIHRoZSBoaWdoZXN0IGxpbmVhZ2UuIEkgb2JzZXJ2ZSB0aGF0IHRoZXJlIGFyZSBwZXJzb25zIHNraWxsZWQgaW4gdGhlIGFydHMgb2Ygd2FyIG9yIHBlYWNlLCBhcyB0aGUgY2FzZSBtYXkgYmUsIHdobyBhcmUgdW53aWxsaW5nIHRvIHByYWN0aWNlIHRoZW0sIGFuZCB0aGUgcmVhc29uLCBJIHRoaW5rLCBpcyBqdXN0IHRoaXMsIHRoYXQgdGhleSBoYXZlIG5vIG1hc3RlciBvdmVyIHRoZW0u4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2hhdCwgbm8gbWFzdGVyIG92ZXIgdGhlbSwgd2hlbiwgaW4gc3BpdGUgb2YgdGhlaXIgcHJheWVycyBmb3IgcHJvc3Blcml0eSBhbmQgdGhlaXIgZGVzaXJlIHRvIGRvIHdoYXQgd2lsbCBicmluZyB0aGVtIGdvb2QsIHRoZXkgYXJlIHRod2FydGVkIGluIHRoZWlyIGludGVudGlvbnMgYnkgdGhlIHBvd2VycyB0aGF0IHJ1bGUgdGhlbT/igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHdobywgcHJheSwgbWF5IHRoZXNlIHVuc2VlbiBydWxlcnMgYmU/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vLCBub3QgdW5zZWVuLCBidXQgb3BlbiBhbmQgdW5kaXNndWlzZWQsIHN1cmVseSEgQW5kIHZlcnkgdmljaW91cyBydWxlcnMgdGhleSBhcmUgdG9vLCBhcyB5b3UgeW91cnNlbGYgbXVzdCBzZWUsIGlmIGF0IGxlYXN0IHlvdSByZWdhcmQgaWRsZW5lc3MgYW5kIG1vcmFsIGNvd2FyZGljZSBhbmQgbmVnbGlnZW5jZSBhcyB2aWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BeWUsIGFuZCB0aGVuIHRoZXJlIGlzIGEgc2V0IG9mIGRlY2VpdGZ1bCBtaXN0cmVzc2VzIHRoYXQgcHJldGVuZCB0byBiZSBwbGVhc3VyZXPigJRzdWNoIGFzIGdhbWJsaW5nIGFuZCBjb25zb3J0aW5nIHdpdGggYmFkIGNvbXBhbmlvbnM6IGV2ZW4gdGhlIHZpY3RpbXMgb2YgdGhlaXIgZGVjZXB0aW9uIGZpbmQgYXMgdGltZSBnb2VzIG9uIHRoYXQgdGhlc2UsIGFmdGVyIGFsbCwgYXJlIHJlYWxseSBwYWlucyBjb25jZWFsZWQgYmVuZWF0aCBhIHRoaW4gdmVuZWVyIG9mIHBsZWFzdXJlcywgYW5kIHRoYXQgdGhleSBhcmUgaGluZGVyaW5nIHRoZW0gZnJvbSBhbGwgcHJvZml0YWJsZSB3b3JrIGJ5IHRoZWlyIGluZmx1ZW5jZSBvdmVyIHRoZW0u4oCdCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IHRoZXJlIGFyZSBvdGhlciBtZW4sIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgd2hvc2UgZW5lcmd5IGlzIG5vdCBoaW5kZXJlZCBieSB0aGVzZSBpbmZsdWVuY2VzLCBpbiBmYWN0IHRoZXkgaGF2ZSBhbiBlYWdlciBkZXNpcmUgdG8gd29yayBhbmQgdG8gbWFrZSBhbiBpbmNvbWU6IG5ldmVydGhlbGVzcyB0aGV5IGV4aGF1c3QgdGhlaXIgZXN0YXRlcyBhbmQgYXJlIGJlc2V0IHdpdGggZGlmZmljdWx0aWVzLuKAnQo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCB0aGV5IHRvbyBhcmUgc2xhdmVzLCBhbmQgaGFyZCBpbmRlZWQgYXJlIHRoZWlyIG1hc3RlcnM6IHNvbWUgYXJlIGluIGJvbmRhZ2UgdG8gZ2x1dHRvbnksIHNvbWUgdG8gbGVjaGVyeSwgc29tZSB0byBkcmluaywgYW5kIHNvbWUgdG8gZm9vbGlzaCBhbmQgY29zdGx5IGFtYml0aW9ucy4gQW5kIHNvIGhhcmQgaXMgdGhlIHJ1bGUgb2YgdGhlc2UgcGFzc2lvbnMgb3ZlciBldmVyeSBtYW4gd2hvIGZhbGxzIGludG8gdGhlaXIgY2x1dGNoZXMsIHRoYXQgc28gbG9uZyBhcyB0aGV5IHNlZSB0aGF0IGhlIGlzIHN0cm9uZyBhbmQgY2FwYWJsZSBvZiB3b3JrLCB0aGV5IGZvcmNlIGhpbSB0byBwYXkgb3ZlciBhbGwgdGhlIHByb2ZpdHMgb2YgaGlzIHRvaWwsIGFuZCB0byBzcGVuZCBpdCBvbiB0aGVpciBvd24gZGVzaXJlczsgYnV0IG5vIHNvb25lciBkbyB0aGV5IGZpbmQgdGhhdCBoZSBpcyB0b28gb2xkIHRvIHdvcmssIHRoYW4gdGhleSBsZWF2ZSBoaW0gdG8gYW4gb2xkIGFnZSBvZiBtaXNlcnksIGFuZCB0cnkgdG8gZmFzdGVuIHRoZSB5b2tlIG9uIG90aGVyIHNob3VsZGVycy4KPC90cmFuc2xhdGlvbj4="
translation['1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BaCwgQ3JpdG9idWx1cywgd2UgbXVzdCBmaWdodCBmb3Igb3VyIGZyZWVkb20gYWdhaW5zdCB0aGVzZSB0eXJhbnRzIGFzIHBlcnNpc3RlbnRseSBhcyBpZiB0aGV5IHdlcmUgYXJtZWQgbWVuIHRyeWluZyB0byBlbnNsYXZlIHVzLiBJbmRlZWQsIG9wZW4gZW5lbWllcyBtYXkgYmUgZ2VudGxlbWVuLCBhbmQgd2hlbiB0aGV5IGVuc2xhdmUgdXMsIG1heSwgYnkgY2hhc3RlbmluZywgcHVyZ2UgdXMgb2Ygb3VyIGZhdWx0cyBhbmQgY2F1c2UgdXMgdG8gbGl2ZSBiZXR0ZXIgbGl2ZXMgaW4gZnV0dXJlLiBCdXQgc3VjaCBtaXN0cmVzc2VzIGFzIHRoZXNlIG5ldmVyIGNlYXNlIHRvIHBsYWd1ZSBtZW4gaW4gYm9keSBhbmQgc291bCBhbmQgZXN0YXRlIGFsbCB0aGUgdGltZSB0aGF0IHRoZXkgaGF2ZSBkb21pbmlvbiBvdmVyIHRoZW0u4oCdCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgd29yZCB3YXMgbm93IHdpdGggQ3JpdG9idWx1cywgd2hvIGNvbnRpbnVlZCB0aHVzOjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLCBJIHRoaW5rIHlvdSBoYXZlIHRvbGQgbWUgcXVpdGUgZW5vdWdoIGFib3V0IHN1Y2ggcGFzc2lvbnMgYXMgdGhlc2UsIGFuZCB3aGVuIEkgZXhhbWluZSBteXNlbGYgSSBmaW5kLCBJIHRoaW5rLCB0aGF0IEkgaGF2ZSB0aGVtIGZhaXJseSB3ZWxsIHVuZGVyIGNvbnRyb2w7IGFuZCB0aGVyZWZvcmUsIGlmIHlvdSB3aWxsIGFkdmlzZSBtZSB3aGF0IEkgc2hvdWxkIGRvIHRvIGluY3JlYXNlIG15IGVzdGF0ZSwgSSBkb24ndCB0aGluayB0aG9zZSBtaXN0cmVzc2VzLCBhcyB5b3UgY2FsbCB0aGVtLCBhcmUgbGlrZWx5IHRvIGhpbmRlciBtZS4gU28gZG8gbm90IGhlc2l0YXRlIHRvIGdpdmUgbWUgYW55IGdvb2QgYWR2aWNlIHlvdSBjYW46IHVubGVzcywgaW5kZWVkLCB5b3UgaGF2ZSBtYWRlIHVwIHlvdXIgbWluZCB0aGF0IHdlIGFyZSByaWNoIGVub3VnaCBhbHJlYWR5LCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIGFuZCB0aGluayB3ZSBoYXZlIG5vIG5lZWQgb2YgbW9yZSBtb25leT/igJ0KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxPaCwgaWYgeW91IG1lYW4gdG8gaW5jbHVkZSBtZSwgSSBjZXJ0YWlubHkgdGhpbmsgSSBoYXZlIG5vIG5lZWQgb2YgbW9yZSBtb25leSBhbmQgYW0gcmljaCBlbm91Z2guIEJ1dCB5b3Ugc2VlbSB0byBtZSB0byBiZSBxdWl0ZSBwb29yLCBDcml0b2J1bHVzLCBhbmQgYXQgdGltZXMsIEkgYXNzdXJlIHlvdSwgSSBmZWVsIHF1aXRlIHNvcnJ5IGZvciB5b3Uu4oCdCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgaG93IG11Y2gsIHByYXks4oCdIGFza2VkIENyaXRvYnVsdXMsIGxhdWdoaW5nLCDigJx3b3VsZCB5b3VyIHByb3BlcnR5IGZldGNoIGF0IGEgc2FsZSwgZG8geW91IHN1cHBvc2UsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgYW5kIGhvdyBtdWNoIHdvdWxkIG1pbmU/4oCdPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLCBpZiBJIGZvdW5kIGEgZ29vZCBidXllciwgSSB0aGluayB0aGUgd2hvbGUgb2YgbXkgZ29vZHMgYW5kIGNoYXR0ZWxzLCBpbmNsdWRpbmcgdGhlIGhvdXNlLCBtaWdodCByZWFkaWx5IHNlbGwgZm9yIGZpdmUgbWluYWUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgbGl0dGxlIG1vcmUgdGhhbiAyMCBwb3VuZHMuPC9ub3RlPiBZb3VycywgSSBmZWVsIHN1cmUsIHdvdWxkIGZldGNoIG1vcmUgdGhhbiBhIGh1bmRyZWQgdGltZXMgdGhhdCBzdW0u4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgaW4gc3BpdGUgb2YgdGhhdCBlc3RpbWF0ZSwgeW91IHJlYWxseSB0aGluayB5b3UgaGF2ZSBubyBuZWVkIG9mIG1vbmV5IGFuZCBwaXR5IG1lIGZvciBteSBwb3ZlcnR5P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMsIGJlY2F1c2UgbXkgcHJvcGVydHkgaXMgc3VmZmljaWVudCB0byBzYXRpc2Z5IG15IHdhbnRzLCBidXQgSSBkb24ndCB0aGluayB5b3Ugd291bGQgaGF2ZSBlbm91Z2ggdG8ga2VlcCB1cCB0aGUgc3R5bGUgeW91IGFyZSBsaXZpbmcgaW4gYW5kIHRvIHN1cHBvcnQgeW91ciByZXB1dGF0aW9uLCBldmVuIGlmIHlvdXIgZm9ydHVuZSB3ZXJlIHRocmVlIHRpbWVzIHdoYXQgaXQgaXMu4oCdCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxIb3cgY2FuIHRoYXQgYmU/4oCdIGV4Y2xhaW1lZCBDcml0b2J1bHVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCZWNhdXNlLCBpbiB0aGUgZmlyc3QgcGxhY2Us4oCdIGV4cGxhaW5lZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIOKAnEkgbm90aWNlIHRoYXQgeW91IGFyZSBib3VuZCB0byBvZmZlciBtYW55IGxhcmdlIHNhY3JpZmljZXM7IGVsc2UsIEkgZmFuY3ksIHlvdSB3b3VsZCBnZXQgaW50byB0cm91YmxlIHdpdGggZ29kcyBhbmQgbWVuIGFsaWtlLiBTZWNvbmRseSwgaXQgaXMgeW91ciBkdXR5IHRvIGVudGVydGFpbiBtYW55IHN0cmFuZ2Vycywgb24gYSBnZW5lcm91cyBzY2FsZSB0b28uIFRoaXJkbHksIHlvdSBoYXZlIHRvIGdpdmUgZGlubmVycyBhbmQgcGxheSB0aGUgYmVuZWZhY3RvciB0byB0aGUgY2l0aXplbnMsIG9yIHlvdSBsb3NlIHlvdXIgZm9sbG93aW5nLgo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk1vcmVvdmVyLCBJIG9ic2VydmUgdGhhdCBhbHJlYWR5IHRoZSBzdGF0ZSBpcyBleGFjdGluZyBoZWF2eSBjb250cmlidXRpb25zIGZyb20geW91OiB5b3UgbXVzdCBuZWVkcyBrZWVwIGhvcnNlcywgcGF5IGZvciBjaG9ydXNlcyBhbmQgZ3ltbmFzdGljIGNvbXBldGl0aW9ucywgYW5kIGFjY2VwdCBwcmVzaWRlbmNpZXM7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkl0IGlzIHVubGlrZWx5IHRoYXQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DPgc6/z4PPhM6xz4TOteG9t86xz4I8L2ZvcmVpZ24+IGlzIHVzZWQgaGVyZSBmb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DPgc6/z4PPhM6xz4PhvbfOsc+CLDwvZm9yZWlnbj4gdGhlIGNoYXJnZSBvZiByZXNpZGVudCBhbGllbnMsIHNpbmNlIHRoZXJlIGlzIG5vIHByb29mIHRoYXQgdGhpcyBkdXR5IGludm9sdmVkIGV4cGVuc2UgdG8gdGhlIHBhdHJvbi48L25vdGU+IGFuZCBpZiB3YXIgYnJlYWtzIG91dCwgSSBrbm93IHRoZXkgd2lsbCByZXF1aXJlIHlvdSB0byBtYWludGFpbiBhIHNoaXAgYW5kIHBheSB0YXhlcyB0aGF0IHdpbGwgbmVhcmx5IGNydXNoIHlvdS4gV2hlbmV2ZXIgeW91IHNlZW0gdG8gZmFsbCBzaG9ydCBvZiB3aGF0IGlzIGV4cGVjdGVkIG9mIHlvdSwgdGhlIEF0aGVuaWFucyB3aWxsIGNlcnRhaW5seSBwdW5pc2ggeW91IGFzIHRob3VnaCB0aGV5IGhhZCBjYXVnaHQgeW91IHJvYmJpbmcgdGhlbS4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DPgc6/z4PPhM6xz4TOteG9t86xz4I8L2ZvcmVpZ24+IGlzIHVzZWQgaGVyZSBmb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DPgc6/z4PPhM6xz4PhvbfOsc+CLDwvZm9yZWlnbj4gdGhlIGNoYXJnZSBvZiByZXNpZGVudCBhbGllbnMsIHNpbmNlIHRoZXJlIGlzIG5vIHByb29mIHRoYXQgdGhpcyBkdXR5IGludm9sdmVkIGV4cGVuc2UgdG8gdGhlIHBhdHJvbi48L3RyYW5zbGF0aW9uPg=="
translation['2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkJlc2lkZXMgYWxsIHRoaXMsIEkgbm90aWNlIHRoYXQgeW91IGltYWdpbmUgeW91cnNlbGYgdG8gYmUgYSByaWNoIG1hbjsgeW91IGFyZSBpbmRpZmZlcmVudCB0byBtb25leSwgYW5kIHlldCBnbyBjb3VydGluZyBtaW5pb25zLCBhcyB0aG91Z2ggdGhlIGNvc3Qgd2VyZSBub3RoaW5nIHRvIHlvdS4gQW5kIHRoYXQgaXMgd2h5IEkgcGl0eSB5b3UsIGFuZCBmZWFyIHRoYXQgeW91IG1heSBjb21lIHRvIGdyaWVmIGFuZCBmaW5kIHlvdXJzZWxmIHJlZHVjZWQgdG8gcGVudXJ5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk5vdywgaWYgSSByYW4gc2hvcnQgb2YgbW9uZXksIG5vIGRvdWJ0IHlvdSBrbm93IGFzIHdlbGwgYXMgSSBkbyB0aGF0IEkgc2hvdWxkIG5vdCBsYWNrIGhlbHBlcnMgd2hvIHdvdWxkIG5lZWQgdG8gY29udHJpYnV0ZSB2ZXJ5IGxpdHRsZSB0byBmaWxsIG15IGN1cCB0byBvdmVyZmxvd2luZy4gQnV0IHlvdXIgZnJpZW5kcywgdGhvdWdoIGZhciBiZXR0ZXIgc3VwcGxpZWQgd2l0aCBtZWFucyB0byBzdXBwb3J0IHRoZWlyIGVzdGFibGlzaG1lbnQgdGhhbiB5b3UsIHlldCBsb29rIHRvIHJlY2VpdmUgaGVscCBmcm9tIHlvdS7igJ0KICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIGNhbm5vdCBkaXNwdXRlIHRoaXMsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPizigJ0gc2FpZCBDcml0b2J1bHVzLCDigJxidXQgaXQgaXMgdGltZSBmb3IgeW91IHRvIHRha2UgbWUgaW4gaGFuZCwgYW5kIHNlZSB0aGF0IEkgZG9uJ3QgYmVjb21lIGEgcmVhbCBvYmplY3Qgb2YgcGl0eS7igJ08c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkF0IHRoaXMgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+IGV4Y2xhaW1lZCwg4oCcV2hhdCwgZG9uJ3QgeW91IHRoaW5rIGl0IHN0cmFuZ2UsIENyaXRvYnVsdXMsIHRoYXQgYSBsaXR0bGUgd2hpbGUgYWdvLCB3aGVuIEkgc2FpZCBJIHdhcyByaWNoLCB5b3UgbGF1Z2hlZCBhdCBtZSwgYXMgdGhvdWdoIEkgZGlkIG5vdCBldmVuIGtub3cgdGhlIG1lYW5pbmcgb2YgcmljaGVzLCBhbmQgd291bGQgbm90IGNlYXNlIHVudGlsIHlvdSBoYWQgcHJvdmVkIG1lIHdyb25nIGFuZCBtYWRlIG1lIG93biB0aGF0IG15IHBvc3Nlc3Npb25zIHdlcmUgbGVzcyB0aGFuIG9uZS1odW5kcmVkdGggcGFydCBvZiB5b3VycywgYW5kIHlldCBub3cgeW91IGJpZCBtZSB0YWtlIHlvdSBpbiBoYW5kIGFuZCBzZWUgdGhhdCB5b3UgZG9uJ3QgYmVjb21lIGluIGxpdGVyYWwgdHJ1dGggYSBwb29yIG1hbj/igJ0KICAgICAgICA8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBJIHNlZSB0aGF0IHlvdSB1bmRlcnN0YW5kIG9uZSBwcm9jZXNzIGJ5IHdoaWNoIHdlYWx0aCBpcyBjcmVhdGVk4oCUaG93IHRvIGNyZWF0ZSBhIGJhbGFuY2UuIFNvIGEgbWFuIHdobyBzYXZlcyBvbiBhIHNtYWxsIGluY29tZSBjYW4sIEkgc3VwcG9zZSwgdmVyeSBlYXNpbHkgc2hvdyBhIGxhcmdlIHN1cnBsdXMgd2l0aCBhIGxhcmdlIG9uZS7igJ0KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiBkb24ndCB5b3UgcmVtZW1iZXIgc2F5aW5nIGp1c3Qgbm93IGluIG91ciBjb252ZXJzYXRpb24sIHdoZW4geW91IHdvdWxkbid0IGdpdmUgbWUgbGVhdmUgdG8gdXR0ZXIgYSBzeWxsYWJsZSwgdGhhdCBpZiBhIG1hbiBkb2Vzbid0IGtub3cgaG93IHRvIG1hbmFnZSBob3JzZXMsIGhpcyBob3JzZXMgYXJlIG5vdCB3ZWFsdGggdG8gaGltLCBub3IgaGlzIGxhbmQsIHNoZWVwLCBtb25leSBvciBhbnl0aGluZyBlbHNlLCBpZiBoZSBkb2Vzbid0IGtub3cgaG93IHRvIG1hbmFnZSB0aGVtPyBOb3cgdGhlc2UgYXJlIHRoZSBzb3VyY2VzIGZyb20gd2hpY2ggaW5jb21lIGlzIGRlcml2ZWQ6IGFuZCBob3cgZG8geW91IHN1cHBvc2UgdGhhdCBJIGNhbiBwb3NzaWJseSBrbm93IGhvdyB0byBtYW5hZ2UgYW55IG9mIHRoZXNlIHRoaW5ncywgc2VlaW5nIHRoYXQgSSBuZXZlciB5ZXQgcG9zc2Vzc2VkIGFueSBvbmUgb2YgdGhlbT/igJ0KPC90cmFuc2xhdGlvbj4="
translation['2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcU3RpbGwgd2UgaGVsZCB0aGF0LCBldmVuIGlmIGEgbWFuIGhhcHBlbnMgdG8gaGF2ZSBubyB3ZWFsdGgsIHRoZXJlIGlzIHN1Y2ggYSB0aGluZyBhcyBhIHNjaWVuY2Ugb2YgaG91c2Vob2xkIG1hbmFnZW1lbnQuIFRoZW4gd2hhdCByZWFzb24gaXMgdGhlcmUgd2h5IHlvdSBzaG91bGQgbm90IGtub3cgaXQ/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEV4YWN0bHkgdGhlIHNhbWUgcmVhc29uLCBvZiBjb3Vyc2UsIHRoYXQgYSBtYW4gd291bGQgaGF2ZSBmb3Igbm90IGtub3dpbmcgaG93IHRvIHBsYXkgb24gdGhlIGZsdXRlIGlmIGhlIGhhZCBuZXZlciBwb3NzZXNzZWQgb25lIGhpbXNlbGYgYW5kIGhhZCBuZXZlciBib3Jyb3dlZCBvbmUgdG8gbGVhcm4gb24uCjwvdHJhbnNsYXRpb24+"
translation['2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGF0IGlzIGp1c3QgbXkgY2FzZSB3aXRoIHJlZ2FyZCB0byBlc3RhdGUgbWFuYWdlbWVudDsgZm9yIG5ldmVyIGhhdmluZyBwb3NzZXNzZWQgd2VhbHRoIG15c2VsZiwgSSBoYXZlIG5vdCBoYWQgYW4gb3Bwb3J0dW5pdHkgb2YgbGVhcm5pbmcgb24gYW4gaW5zdHJ1bWVudCBvZiBteSBvd24sIGFuZCBub2JvZHkgaGFzIGV2ZXIgbGV0IG1lIGhhbmRsZSBoaXMsIHVudGlsIHlvdSBtYWRlIHlvdXIgb2ZmZXIuIEJlZ2lubmVycywgSSBmYW5jeSwgYXJlIGFwdCB0byBzcG9pbCB0aGUgbHlyZXMgdGhleSBsZWFybiBvbjsgYW5kIGlmIEkgYXR0ZW1wdGVkIHRvIGxlYXJuIHRvIG1hbmFnZSBlc3RhdGVzIGJ5IHByYWN0aXNpbmcgb24geW91cnMsIHBvc3NpYmx5IEkgbWlnaHQgc3BvaWwgaXQgZW50aXJlbHkgZm9yIHlvdS7igJ0KICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQWgsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiHigJ0gcmVqb2luZWQgQ3JpdG9idWx1cywg4oCcSSBzZWUgeW91IGFyZSBlYWdlciB0byBhdm9pZCBnaXZpbmcgbWUgYW55IGhlbHAgdG93YXJkcyBsaWdodGVuaW5nIHRoZSB3ZWlnaHQgb2YgbXkgdHJvdWJsZXNvbWUgZHV0aWVzLuKAnTxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm90IGF0IGFsbCwgbm90IGF0IGFsbCzigJ0gc2FpZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIOKAnEkgYW0gYWxsIGVhZ2VybmVzcyB0byB0ZWxsIHlvdSBhbGwgSSBrbm93Lgo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5TdXBwb3NlIHRoYXQgeW91IGhhZCBjb21lIHRvIG1lIGZvciBmaXJlLCBhbmQgSSwgaGF2aW5nIG5vbmUgYnkgbWUsIGhhZCB0YWtlbiB5b3UgdG8gc29tZSBwbGFjZSB3aGVyZSB5b3UgY291bGQgZ2V0IGl0OyB5b3Ugd291bGQgbm90LCBJIHRoaW5rLCBoYXZlIGZvdW5kIGZhdWx0IHdpdGggbWU6IG9yLCBpZiB5b3UgaGFkIGFza2VkIGZvciB3YXRlciwgYW5kIEksIGhhdmluZyBub25lIG15c2VsZiwgaGFkIGJyb3VnaHQgeW91IHRvIHNvbWUgb3RoZXIgcGxhY2UgZm9yIGl0LCBJIGZlZWwgc3VyZSB0aGF0IHlvdSB3b3VsZCBub3QgaGF2ZSBmb3VuZCBmYXVsdCB3aXRoIG1lIGZvciB0aGF0IGVpdGhlcjogb3IsIHN1cHBvc2UgeW91IHdhbnRlZCB0byBsZWFybiBtdXNpYyB3aXRoIG1lIGFuZCBJIGRpcmVjdGVkIHlvdSB0byBwZXJzb25zIGZhciBtb3JlIHNraWxsZWQgaW4gbXVzaWMgdGhhbiBJIGFtLCB3aG8gd291bGQgYmUgZ3JhdGVmdWwgdG8geW91IGZvciB0YWtpbmcgbGVzc29ucyB3aXRoIHRoZW0sIHdoYXQgZmF1bHQgY291bGQgeW91IGZpbmQgd2l0aCBtZSBmb3IgZG9pbmcgc28/4oCdCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm9uZSwgaWYgSSB3ZXJlIGZhaXIsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPi7igJ08c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdlbGwgdGhlbiwgQ3JpdG9idWx1cywgSSB3aWxsIGRpcmVjdCB5b3UgdG8gb3RoZXJzIGZhciBtb3JlIHNraWxsZWQgdGhhbiBJIGluIHRoZSB0aGluZ3MgeW91IG5vdyBzZWVrIHRvIGxlYXJuIGZyb20gbWUuIEkgY29uZmVzcyB0aGF0IEkgaGF2ZSBtYWRlIGEgcG9pbnQgb2YgZmluZGluZyBvdXQgd2hvIGFyZSB0aGUgZ3JlYXRlc3QgbWFzdGVycyBvZiB2YXJpb3VzIHNjaWVuY2VzIHRvIGJlIGZvdW5kIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igb2JzZXJ2aW5nIG9uY2UgdGhhdCB0aGUgc2FtZSBwdXJzdWl0cyBsZWFkIGluIG9uZSBjYXNlIHRvIGdyZWF0IHBvdmVydHkgYW5kIGluIGFub3RoZXIgdG8gZ3JlYXQgcmljaGVzLCBJIHdhcyBmaWxsZWQgd2l0aCBhbWF6ZW1lbnQsIGFuZCB0aG91Z2h0IGl0IHdvcnRoIHdoaWxlIHRvIGNvbnNpZGVyIHdoYXQgdGhpcyBjb3VsZCBtZWFuLiBBbmQgb24gY29uc2lkZXJhdGlvbiBJIGZvdW5kIHRoYXQgdGhlc2UgdGhpbmdzIGhhcHBlbiBxdWl0ZSBuYXR1cmFsbHkuCjwvdHJhbnNsYXRpb24+"
translation['2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgSSBzYXcgdGhhdCB0aG9zZSB3aG8gZm9sbG93IHRoZXNlIHB1cnN1aXRzIGNhcmVsZXNzbHkgc3VmZmVyIGxvc3MsIGFuZCBJIGRpc2NvdmVyZWQgdGhhdCB0aG9zZSB3aG8gZGV2b3RlIHRoZW1zZWx2ZXMgZWFybmVzdGx5IHRvIHRoZW0gYWNjb21wbGlzaCB0aGVtIG1vcmUgcXVpY2tseSwgbW9yZSBlYXNpbHkgYW5kIHdpdGggbW9yZSBwcm9maXQuIEkgdGhpbmsgdGhhdCBpZiB5b3Ugd291bGQgZWxlY3QgdG8gbGVhcm4gZnJvbSB0aGVzZSwgeW91IHRvbyB3aXRoIEdvZCdzIGZhdm91ciB3b3VsZCB0dXJuIG91dCBhIGNsZXZlciBtYW4gb2YgYnVzaW5lc3Mu4oCdCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJw8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4s4oCdIGV4Y2xhaW1lZCBDcml0b2J1bHVzIG9uIGhlYXJpbmcgdGhpcywg4oCcSSBkb24ndCBpbnRlbmQgdG8gbGV0IHlvdSBnbyBub3csIHVudGlsIHlvdSBoYXZlIHByb3ZlZCB0byBteSBzYXRpc2ZhY3Rpb24gd2hhdCB5b3UgaGF2ZSBwcm9taXNlZCBpbiB0aGUgcHJlc2VuY2Ugb2Ygb3VyIGZyaWVuZHMgaGVyZSB0byBwcm92ZS7igJ08c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdlbGwgdGhlbizigJ0gc2FpZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIOKAnHdoYXQgaWYgSSBwcm92ZSB0byB5b3VyIHNhdGlzZmFjdGlvbiwgQ3JpdG9idWx1cywgdG8gYmVnaW4gd2l0aCwgdGhhdCBzb21lIG1lbiBzcGVuZCBsYXJnZSBzdW1zIGluIGJ1aWxkaW5nIGhvdXNlcyB0aGF0IGFyZSB1c2VsZXNzLCB3aGlsZSBvdGhlcnMgYnVpbGQgaG91c2VzIHBlcmZlY3QgaW4gYWxsIHJlc3BlY3RzIGZvciBtdWNoIGxlc3M/IFdpbGwgeW91IHRoaW5rIHRoYXQgSSBhbSBwdXR0aW5nIGJlZm9yZSB5b3Ugb25lIG9mIHRoZSBvcGVyYXRpb25zIHRoYXQgY29uc3RpdHV0ZSBlc3RhdGUgbWFuYWdlbWVudD/igJ08c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFllcywgY2VydGFpbmx5LuKAnQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgd2hhdCBpZiBJIHNob3cgeW91IG5leHQgdGhlIGNvbXBhbmlvbiB0byB0aGlz4oCUdGhhdCBzb21lIHBvc3Nlc3MgbWFueSBjb3N0bHkgYmVsb25naW5ncyBhbmQgY2Fubm90IHVzZSB0aGVtIGF0IG5lZWQsIGFuZCBkbyBub3QgZXZlbiBrbm93IHdoZXRoZXIgdGhleSBhcmUgc2FmZSBhbmQgc291bmQsIGFuZCBzbyBhcmUgY29udGludWFsbHkgd29ycmllZCB0aGVtc2VsdmVzIGFuZCB3b3JyeWluZyB0aGVpciBzZXJ2YW50cywgd2hlcmVhcyBvdGhlcnMsIHRob3VnaCB0aGV5IHBvc3Nlc3Mgbm90IG1vcmUsIGJ1dCBldmVuIGxlc3MsIGhhdmUgd2hhdGV2ZXIgdGhleSB3YW50IHJlYWR5IGZvciB1c2U/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdoYXQgaXMgdGhlIHJlYXNvbiBvZiB0aGlzLCB0aGVuLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4/CjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPklzIGl0IG5vdCBzaW1wbHkgdGhpcywgdGhhdCB0aGUgZm9ybWVyIHN0b3cgdGhlaXIgdGhpbmdzIGF3YXkgYW55d2hlcmUgYW5kIHRoZSBsYXR0ZXIgaGF2ZSBldmVyeXRoaW5nIG5lYXRseSBhcnJhbmdlZCBpbiBzb21lIHBsYWNlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMsIG9mIGNvdXJzZSwgYXJyYW5nZWQgY2FyZWZ1bGx5IGluIHRoZSBwcm9wZXIgcGxhY2UsIG5vdCBqdXN0IGFueXdoZXJlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZb3VyIHBvaW50LCBJIHRha2UgaXQsIGlzIHRoYXQgdGhpcyB0b28gaXMgYW4gZWxlbWVudCBpbiBlc3RhdGUgbWFuYWdlbWVudC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIHdoYXQgaWYgSSBzaG93IHlvdSBiZXNpZGVzIHRoYXQgaW4gc29tZSBob3VzZWhvbGRzIG5lYXJseSBhbGwgdGhlIHNlcnZhbnRzIGFyZSBpbiBmZXR0ZXJzIGFuZCB5ZXQgY29udGludWFsbHkgdHJ5IHRvIHJ1biBhd2F5LCB3aGVyZWFzIGluIG90aGVycyB0aGV5IGFyZSB1bmRlciBubyByZXN0cmFpbnQgYW5kIGFyZSB3aWxsaW5nIHRvIHdvcmsgYW5kIHRvIHN0YXkgYXQgdGhlaXIgcG9zdHM/IFdvbid0IHlvdSB0aGluayB0aGF0IGhlcmUgdG9vIEkgYW0gcG9pbnRpbmcgb3V0IHRvIHlvdSBhIG5vdGFibGUgZWZmZWN0IG9mIGVzdGF0ZSBtYW5hZ2VtZW50P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMsIG9mIGNvdXJzZTsgdmVyeSBtdWNoIHNvLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgdGhhdCB3aGVuIG1lbiBmYXJtIHRoZSBzYW1lIGtpbmQgb2YgbGFuZCwgc29tZSBhcmUgcG92ZXJ0eS1zdHJpY2tlbiBhbmQgZGVjbGFyZSB0aGF0IHRoZXkgYXJlIHJ1aW5lZCBieSBmYXJtaW5nLCBhbmQgb3RoZXJzIGRvIHdlbGwgd2l0aCB0aGUgZmFybSBhbmQgaGF2ZSBhbGwgdGhleSB3YW50IGluIGFidW5kYW5jZT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCBvZiBjb3Vyc2U7IGZvciBtYXliZSBzb21lIHNwZW5kIG1vbmV5IG5vdCBvbiBuZWNlc3NhcnkgcHVycG9zZXMgb25seSBidXQgb24gd2hhdCBicmluZ3MgaGFybSB0byB0aGUgb3duZXIgYW5kIHRoZSBlc3RhdGUu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFBlcmhhcHMgdGhlcmUgYXJlIHN1Y2ggcGVvcGxlLgogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBJIGFtIHJlZmVycmluZyByYXRoZXIgdG8gdGhvc2Ugd2hvIGhhdmVuJ3QgdGhlIG1vbmV5IHRvIG1lZXQgZXZlbiB0aGUgbmVjZXNzYXJ5IGV4cGVuc2VzLCB0aG91Z2ggcHJvZmVzc2luZyB0byBiZSBmYXJtZXJzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgd2hhdCBjYW4gYmUgdGhlIHJlYXNvbiBvZiB0aGF0LCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4/4oCdPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIHdpbGwgdGFrZSB5b3UgdG8gdGhlc2UgdG9vOyBhbmQgd2hlbiB5b3Ugd2F0Y2ggdGhlbSwgeW91IHdpbGwgZmluZCBvdXQsIEkgZmFuY3ku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE9mIGNvdXJzZTsgdGhhdCBpcywgaWYgSSBjYW4u4oCdCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIHlvdSBtdXN0IHdhdGNoLCBhbmQgdHJ5IGJ5IGV4cGVyaW1lbnQgd2hldGhlciB5b3UgYXJlIGNhcGFibGUgb2YgdW5kZXJzdGFuZGluZy4gQXQgcHJlc2VudCBJIG9ic2VydmUgdGhhdCB3aGVuIGEgY29tZWR5IGlzIHRvIGJlIHNlZW4sIHlvdSBnZXQgdXAgdmVyeSBlYXJseSBhbmQgd2FsayBhIHZlcnkgbG9uZyB3YXkgYW5kIHByZXNzIG1lIGVhZ2VybHkgdG8gZ28gdG8gdGhlIHBsYXkgd2l0aCB5b3UuIEJ1dCB5b3UgaGF2ZSBuZXZlciB5ZXQgaW52aXRlZCBtZSB0byBzZWUgYSBkcmFtYSBvZiByZWFsIGxpZmUgbGlrZSB0aGlzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZb3UgdGhpbmsgbWUgcmlkaWN1bG91cywgZG9uJ3QgeW91LCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4/4oCdPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZb3UgdGhpbmsgeW91cnNlbGYgZmFyIG1vcmUgc28sIEkgYW0gc3VyZS4KPC90cmFuc2xhdGlvbj4="
translation['3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBzdXBwb3NlIEkgc2hvdyB5b3UgdGhhdCBzb21lIGhhdmUgYmVlbiBicm91Z2h0IHRvIHBlbnVyeSBieSBrZWVwaW5nIGhvcnNlcywgd2hpbGUgb3RoZXJzIHByb3NwZXIgYnkgZG9pbmcgc28sIGFuZCBtb3Jlb3ZlciBnbG9yeSBpbiB0aGVpciBnYWluP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLCBJIHRvbyBzZWUgYW5kIGtub3cgaW5zdGFuY2VzIG9mIGJvdGg7IEkgYW0gbm90IG9uZSBvZiB0aGUgZ2FpbmVycyBmb3IgYWxsIHRoYXQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGUgZmFjdCBpcyB5b3Ugd2F0Y2ggdGhlbSBqdXN0IGFzIHlvdSB3YXRjaCB0aGUgYWN0b3JzIGluIHRyYWdlZHkgb3IgY29tZWR5LCBub3QsIEkgc3VwcG9zZSwgdG8gYmVjb21lIGEgcGxheXdyaWdodCwgYnV0IGZvciB0aGUgcGxlYXN1cmUgb2Ygc2VlaW5nIGFuZCBoZWFyaW5nIHNvbWV0aGluZy4gQW5kIHBlcmhhcHMgdGhlcmUgaXMgbm8gaGFybSBpbiB0aGF0LCBiZWNhdXNlIHlvdSBkb24ndCB3YW50IHRvIHdyaXRlIHBsYXlzOyBidXQgc2VlaW5nIHRoYXQgeW91IGFyZSBmb3JjZWQgdG8gbWVkZGxlIHdpdGggaG9yc2VzLCBkb24ndCB5b3UgdGhpbmsgdGhhdCBjb21tb24tc2Vuc2UgcmVxdWlyZXMgeW91IHRvIHNlZSB0aGF0IHlvdSBhcmUgbm90IGlnbm9yYW50IG9mIHRoZSBidXNpbmVzcywgdGhlIG1vcmUgc28gYXMgdGhlIHNlbGYtc2FtZSBob3JzZXMgYXJlIGJvdGggZ29vZCB0byB1c2UgYW5kIHByb2ZpdGFibGUgdG8gc2VsbD/igJ0KICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV291bGQgeW91IGhhdmUgbWUgYnJlYWsgaW4gY29sdHMsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPj/igJ08c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE9mIGNvdXJzZSBub3QsIG5vIG1vcmUgdGhhbiBJIHdvdWxkIGhhdmUgeW91IGJ1eSBjaGlsZHJlbiB0byB0cmFpbiBhcyBhZ3JpY3VsdHVyYWwgbGFib3VyZXJzOyBidXQgaG9yc2VzIGFuZCBodW1hbiBiZWluZ3MgYWxpa2UsIEkgdGhpbmssIG9uIHJlYWNoaW5nIGEgY2VydGFpbiBhZ2UgZm9ydGh3aXRoIGJlY29tZSB1c2VmdWwgYW5kIGdvIG9uIGltcHJvdmluZy4gSSBjYW4gYWxzbyBzaG93IHlvdSB0aGF0IGh1c2JhbmRzIGRpZmZlciB3aWRlbHkgaW4gdGhlaXIgdHJlYXRtZW50IG9mIHRoZWlyIHdpdmVzLCBhbmQgc29tZSBzdWNjZWVkIGluIHdpbm5pbmcgdGhlaXIgY28tb3BlcmF0aW9uIGFuZCB0aGVyZWJ5IGluY3JlYXNlIHRoZWlyIGVzdGF0ZXMsIHdoaWxlIG90aGVycyBicmluZyB1dHRlciBydWluIG9uIHRoZWlyIGhvdXNlcyBieSB0aGVpciBiZWhhdmlvdXIgdG8gdGhlbS7igJ0KICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIG91Z2h0IG9uZSB0byBibGFtZSB0aGUgaHVzYmFuZCBvciB0aGUgd2lmZSBmb3IgdGhhdCwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+P+KAnTxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2hlbiBhIHNoZWVwIGlzIGFpbGluZyzigJ0gc2FpZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIOKAnHdlIGdlbmVyYWxseSBibGFtZSB0aGUgc2hlcGhlcmQsIGFuZCB3aGVuIGEgaG9yc2UgaXMgdmljaW91cywgd2UgZ2VuZXJhbGx5IGZpbmQgZmF1bHQgd2l0aCBoaXMgcmlkZXIuIEluIHRoZSBjYXNlIG9mIGEgd2lmZSwgaWYgc2hlIHJlY2VpdmVzIGluc3RydWN0aW9uIGluIHRoZSByaWdodCB3YXkgZnJvbSBoZXIgaHVzYmFuZCBhbmQgeWV0IGRvZXMgYmFkbHksIHBlcmhhcHMgc2hlIHNob3VsZCBiZWFyIHRoZSBibGFtZTsgYnV0IGlmIHRoZSBodXNiYW5kIGRvZXMgbm90IGluc3RydWN0IGhpcyB3aWZlIGluIHRoZSByaWdodCB3YXkgb2YgZG9pbmcgdGhpbmdzLCBhbmQgc28gZmluZHMgaGVyIGlnbm9yYW50LCBzaG91bGQgaGUgbm90IGJlYXIgdGhlIGJsYW1lIGhpbXNlbGY/CjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5Bbnlob3csIENyaXRvYnVsdXMsIHlvdSBzaG91bGQgdGVsbCB1cyB0aGUgdHJ1dGgsIGZvciB3ZSBhcmUgYWxsIGZyaWVuZHMgaGVyZS4gSXMgdGhlcmUgYW55b25lIHRvIHdob20geW91IGNvbW1pdCBtb3JlIGFmZmFpcnMgb2YgaW1wb3J0YW5jZSB0aGFuIHlvdSBjb21taXQgdG8geW91ciB3aWZlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVyZSBpcyBub3Qu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnElzIHRoZXJlIGFueW9uZSB3aXRoIHdob20geW91IHRhbGsgbGVzcz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlcmUgYXJlIGZldyBvciBub25lLCBJIGNvbmZlc3Mu4oCdCjwvdHJhbnNsYXRpb24+"
translation['3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHlvdSBtYXJyaWVkIGhlciB3aGVuIHNoZSB3YXMgYSBtZXJlIGNoaWxkIGFuZCBoYWQgc2VlbiBhbmQgaGVhcmQgYWxtb3N0IG5vdGhpbmc/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiBpdCB3b3VsZCBiZSBmYXIgbW9yZSBzdXJwcmlzaW5nIGlmIHNoZSB1bmRlcnN0b29kIHdoYXQgc2hlIHNob3VsZCBzYXkgb3IgZG8gdGhhbiBpZiBzaGUgbWFkZSBtaXN0YWtlcy7igJ0KICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IHdoYXQgb2YgdGhlIGh1c2JhbmRzIHdobywgYXMgeW91IHNheSwgaGF2ZSBnb29kIHdpdmVzLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4/IERpZCB0aGV5IHRyYWluIHRoZW0gdGhlbXNlbHZlcz/igJ08c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZXJlJ3Mgbm90aGluZyBsaWtlIGludmVzdGlnYXRpb24uIEkgd2lsbCBpbnRyb2R1Y2UgQXNwYXNpYSB0byB5b3UsIGFuZCBzaGUgd2lsbCBleHBsYWluIHRoZSB3aG9sZSBtYXR0ZXIgdG8geW91IHdpdGggbW9yZSBrbm93bGVkZ2UgdGhhbiBJIHBvc3Nlc3MuCjwvdHJhbnNsYXRpb24+"
translation['3.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rIHRoYXQgdGhlIHdpZmUgd2hvIGlzIGEgZ29vZCBwYXJ0bmVyIGluIHRoZSBob3VzZWhvbGQgY29udHJpYnV0ZXMganVzdCBhcyBtdWNoIGFzIGhlciBodXNiYW5kIHRvIGl0cyBnb29kOyBiZWNhdXNlIHRoZSBpbmNvbWluZ3MgZm9yIHRoZSBtb3N0IHBhcnQgYXJlIHRoZSByZXN1bHQgb2YgdGhlIGh1c2JhbmQncyBleGVydGlvbnMsIGJ1dCB0aGUgb3V0Z29pbmdzIGFyZSBjb250cm9sbGVkIG1vc3RseSBieSB0aGUgd2lmZSdzIGRpc3BlbnNhdGlvbi4gSWYgYm90aCBkbyB0aGVpciBwYXJ0IHdlbGwsIHRoZSBlc3RhdGUgaXMgaW5jcmVhc2VkOyBpZiB0aGV5IGFjdCBpbmNvbXBldGVudGx5LCBpdCBpcyBkaW1pbmlzaGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5JZiB5b3UgdGhpbmsgeW91IHdhbnQgdG8ga25vdyBhYm91dCBvdGhlciBicmFuY2hlcyBvZiBrbm93bGVkZ2UsIEkgZmFuY3kgSSBjYW4gc2hvdyB5b3UgcGVvcGxlIHdobyBhY3F1aXQgdGhlbXNlbHZlcyBjcmVkaXRhYmx5IGluIGFueSBvbmUgb2YgdGhlbS7igJ0KICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxTdXJlbHksIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgdGhlcmUgaXMgbm8gbmVlZCB0byBnbyB0aHJvdWdoIHRoZSB3aG9sZSBsaXN0LiBGb3IgaXQgaXMgbm90IGVhc3kgdG8gZ2V0IHdvcmttZW4gd2hvIGFyZSBza2lsbGVkIGluIGFsbCB0aGUgYXJ0cywgbm9yIGlzIGl0IHBvc3NpYmxlIHRvIGJlY29tZSBhbiBleHBlcnQgaW4gdGhlbS4gUHJheSBzZWxlY3QgdGhlIGJyYW5jaGVzIG9mIGtub3dsZWRnZSB0aGF0IHNlZW0gdGhlIG5vYmxlc3QgYW5kIHdvdWxkIGJlIG1vc3Qgc3VpdGFibGUgZm9yIG1lIHRvIGN1bHRpdmF0ZTogc2hvdyBtZSB0aGVzZSwgYW5kIHRob3NlIHdobyBwcmFjdGlzZSB0aGVtOyBhbmQgZ2l2ZSBtZSBmcm9tIHlvdXIgb3duIGtub3dsZWRnZSBhbnkgaGVscCB5b3UgY2FuIHRvd2FyZHMgbGVhcm5pbmcgdGhlbS7igJ0KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxWZXJ5IGdvb2QsIENyaXRvYnVsdXM7IGZvciwgdG8gYmUgc3VyZSwgdGhlIGlsbGliZXJhbCBhcnRzLCBhcyB0aGV5IGFyZSBjYWxsZWQsIGFyZSBzcG9rZW4gYWdhaW5zdCwgYW5kIGFyZSwgbmF0dXJhbGx5IGVub3VnaCwgaGVsZCBpbiB1dHRlciBkaXNkYWluIGluIG91ciBzdGF0ZXMuIEZvciB0aGV5IHNwb2lsIHRoZSBib2RpZXMgb2YgdGhlIHdvcmttZW4gYW5kIHRoZSBmb3JlbWVuLCBmb3JjaW5nIHRoZW0gdG8gc2l0IHN0aWxsIGFuZCBsaXZlIGluZG9vcnMsIGFuZCBpbiBzb21lIGNhc2VzIHRvIHNwZW5kIHRoZSBkYXkgYXQgdGhlIGZpcmUuIFRoZSBzb2Z0ZW5pbmcgb2YgdGhlIGJvZHkgaW52b2x2ZXMgYSBzZXJpb3VzIHdlYWtlbmluZyBvZiB0aGUgbWluZC4KPC90cmFuc2xhdGlvbj4="
translation['4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk1vcmVvdmVyLCB0aGVzZSBzby1jYWxsZWQgaWxsaWJlcmFsIGFydHMgbGVhdmUgbm8gc3BhcmUgdGltZSBmb3IgYXR0ZW50aW9uIHRvIG9uZSdzIGZyaWVuZHMgYW5kIGNpdHksIHNvIHRoYXQgdGhvc2Ugd2hvIGZvbGxvdyB0aGVtIGFyZSByZXB1dGVkIGJhZCBhdCBkZWFsaW5nIHdpdGggZnJpZW5kczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5PciwgbGVzcyBwcm9iYWJseSwg4oCcYmFkIGZvciBmcmllbmRzIHRvIGRlYWwgd2l0aC7igJ08L25vdGU+IGFuZCBiYWQgZGVmZW5kZXJzIG9mIHRoZWlyIGNvdW50cnkuIEluIGZhY3QsIGluIHNvbWUgb2YgdGhlIHN0YXRlcywgYW5kIGVzcGVjaWFsbHkgaW4gdGhvc2UgcmVwdXRlZCB3YXJsaWtlLCBpdCBpcyBub3QgZXZlbiBsYXdmdWwgZm9yIGFueSBvZiB0aGUgY2l0aXplbnMgdG8gd29yayBhdCBpbGxpYmVyYWwgYXJ0cy7igJ0KICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQgd2hhdCBhcnRzLCBwcmF5LCBkbyB5b3UgYWR2aXNlIHVzIHRvIGZvbGxvdywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+P+KAnTxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTmVlZCB3ZSBiZSBhc2hhbWVkIG9mIGltaXRhdGluZyB0aGUga2luZyBvZiB0aGUgUGVyc2lhbnM/IEZvciB0aGV5IHNheSB0aGF0IGhlIHBheXMgY2xvc2UgYXR0ZW50aW9uIHRvIGh1c2JhbmRyeSBhbmQgdGhlIGFydCBvZiB3YXIsIGhvbGRpbmcgdGhhdCB0aGVzZSBhcmUgdHdvIG9mIHRoZSBub2JsZXN0IGFuZCBtb3N0IG5lY2Vzc2FyeSBwdXJzdWl0cy7igJ0KICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgZG8geW91IHJlYWxseSBiZWxpZXZlLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4s4oCdIGV4Y2xhaW1lZCBDcml0b2J1bHVzIG9uIGhlYXJpbmcgdGhpcywg4oCcdGhhdCB0aGUga2luZyBvZiB0aGUgUGVyc2lhbnMgaW5jbHVkZXMgaHVzYmFuZHJ5IGFtb25nIGhpcyBvY2N1cGF0aW9ucz/igJ08c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFBlcmhhcHMsIENyaXRvYnVsdXMsIHRoZSBmb2xsb3dpbmcgY29uc2lkZXJhdGlvbnMgd2lsbCBlbmFibGUgdXMgdG8gZGlzY292ZXIgd2hldGhlciBoZSBkb2VzIHNvLiBXZSBhbGxvdyB0aGF0IGhlIHBheXMgY2xvc2UgYXR0ZW50aW9uIHRvIHdhcmZhcmUsIGJlY2F1c2UgaGUgaGFzIGdpdmVuIGEgc3RhbmRpbmcgb3JkZXIgdG8gZXZlcnkgZ292ZXJub3Igb2YgdGhlIG5hdGlvbnMgZnJvbSB3aGljaCBoZSByZWNlaXZlcyB0cmlidXRlLCB0byBzdXBwbHkgbWFpbnRlbmFuY2UgZm9yIGEgc3BlY2lmaWVkIG51bWJlciBvZiBob3JzZW1lbiBhbmQgYXJjaGVycyBhbmQgc2xpbmdlcnMgYW5kIGxpZ2h0IGluZmFudHJ5LCB0aGF0IHRoZXkgbWF5IGJlIHN0cm9uZyBlbm91Z2ggdG8gY29udHJvbCBoaXMgc3ViamVjdHMgYW5kIHRvIHByb3RlY3QgdGhlIGNvdW50cnkgaW4gdGhlIGV2ZW50IG9mIGFuIGludmFzaW9uOyBhbmQsCjwvdHJhbnNsYXRpb24+"
translation['4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPmFwYXJ0IGZyb20gdGhlc2UsIGhlIG1haW50YWlucyBnYXJyaXNvbnMgaW4gdGhlIGNpdGFkZWxzLiBNYWludGVuYW5jZSBmb3IgdGhlc2UgaXMgc3VwcGxpZWQgYnkgdGhlIGdvdmVybm9yIGNoYXJnZWQgd2l0aCB0aGlzIGR1dHksIGFuZCB0aGUga2luZyBhbm51YWxseSByZXZpZXdzIHRoZSBtZXJjZW5hcmllcyBhbmQgYWxsIHRoZSBvdGhlciB0cm9vcHMgb3JkZXJlZCB0byBiZSB1bmRlciBhcm1zLCBhc3NlbWJsaW5nIGFsbCBidXQgdGhlIG1lbiBpbiB0aGUgY2l0YWRlbHMgYXQgdGhlIHBsYWNlIG9mIG11c3RlciwgYXMgaXQgaXMgY2FsbGVkOiBoZSBwZXJzb25hbGx5IGluc3BlY3RzIHRoZSBtZW4gd2hvIGFyZSBuZWFyIGhpcyByZXNpZGVuY2UsIGFuZCBzZW5kcyB0cnVzdGVkIGFnZW50cyB0byByZXZpZXcgdGhvc2Ugd2hvIGxpdmUgZmFyIGF3YXkuCjwvdHJhbnNsYXRpb24+"
translation['4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBvZmZpY2Vycywgd2hldGhlciBjb21tYW5kZXJzIG9mIGdhcnJpc29ucyBvciBvZiByZWdpbWVudHMgb3IgdmljZXJveXMsIHdobyB0dXJuIG91dCB3aXRoIGEgZnVsbCBjb21wbGVtZW50IG9mIG1lbiBhbmQgcGFyYWRlIHRoZW0gZXF1aXBwZWQgd2l0aCBob3JzZXMgYW5kIGFybXMgaW4gZ29vZCBjb25kaXRpb24sIGhlIHByb21vdGVzIGluIHRoZSBzY2FsZSBvZiBob25vdXIgYW5kIGVucmljaGVzIHdpdGggbGFyZ2UgZ3JhbnRzIG9mIG1vbmV5OyBidXQgdGhvc2Ugb2ZmaWNlcnMgd2hvbSBoZSBmaW5kcyB0byBiZSBuZWdsZWN0aW5nIHRoZSBnYXJyaXNvbnMgb3IgbWFraW5nIHByb2ZpdCBvdXQgb2YgdGhlbSBoZSBwdW5pc2hlcyBzZXZlcmVseSwgYW5kIGFwcG9pbnRzIG90aGVycyB0byB0YWtlIHRoZWlyIG9mZmljZS4gVGhlc2UgYWN0aW9ucywgdGhlbiwgc2VlbSB0byB1cyB0byBsZWF2ZSBubyByb29tIGZvciBxdWVzdGlvbiB0aGF0IGhlIHBheXMgYXR0ZW50aW9uIHRvIHdhcmZhcmUuCjwvdHJhbnNsYXRpb24+"
translation['4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBcyBmb3IgdGhlIGNvdW50cnksIGhlIHBlcnNvbmFsbHkgZXhhbWluZXMgc28gbXVjaCBvZiBpdCBhcyBoZSBzZWVzIGluIHRoZSBjb3Vyc2Ugb2YgaGlzIHByb2dyZXNzIHRocm91Z2ggaXQ7IGFuZCBoZSByZWNlaXZlcyByZXBvcnRzIGZyb20gaGlzIHRydXN0ZWQgYWdlbnRzIG9uIHRoZSB0ZXJyaXRvcmllcyB0aGF0IGhlIGRvZXMgbm90IHNlZSBmb3IgaGltc2VsZi4gVG8gdGhvc2UgZ292ZXJub3JzIHdobyBhcmUgYWJsZSB0byBzaG93IGhpbSB0aGF0IHRoZWlyIGNvdW50cnkgaXMgZGVuc2VseSBwb3B1bGF0ZWQgYW5kIHRoYXQgdGhlIGxhbmQgaXMgaW4gY3VsdGl2YXRpb24gYW5kIHdlbGwgc3RvY2tlZCB3aXRoIHRoZSB0cmVlcyBvZiB0aGUgZGlzdHJpY3QgYW5kIHdpdGggdGhlIGNyb3BzLCBoZSBhc3NpZ25zIG1vcmUgdGVycml0b3J5IGFuZCBnaXZlcyBwcmVzZW50cywgYW5kIHJld2FyZHMgdGhlbSB3aXRoIHNlYXRzIG9mIGhvbm91ci48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lyb3BhZWRpYSw8L3RpdGxlPiBWSUlJLiBpLiAzOS48L25vdGU+IFRob3NlIHdob3NlIHRlcnJpdG9yeSBoZSBmaW5kcyB1bmN1bHRpdmF0ZWQgYW5kIHRoaW5seSBwb3B1bGF0ZWQgZWl0aGVyIHRocm91Z2ggaGFyc2ggYWRtaW5pc3RyYXRpb24gb3IgdGhyb3VnaCBjb250ZW1wdCBvciB0aHJvdWdoIGNhcmVsZXNzbmVzcywgaGUgcHVuaXNoZXMsIGFuZCBhcHBvaW50cyBvdGhlcnMgdG8gdGFrZSB0aGVpciBvZmZpY2UuCjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cm9wYWVkaWEsPC90aXRsZT4gVklJSS4gaS4gMzkuPC90cmFuc2xhdGlvbj4="
translation['4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkJ5IHN1Y2ggYWN0aW9uLCBkb2VzIGhlIHNlZW0gdG8gcHJvdmlkZSBsZXNzIGZvciB0aGUgY3VsdGl2YXRpb24gb2YgdGhlIGxhbmQgYnkgdGhlIGluaGFiaXRhbnRzIHRoYW4gZm9yIGl0cyBwcm90ZWN0aW9uIGJ5IHRoZSBnYXJyaXNvbnM/IE1vcmVvdmVyLCBlYWNoIG9mIHRoZXNlIGR1dGllcyBpcyBlbnRydXN0ZWQgdG8gYSBzZXBhcmF0ZSBjbGFzcyBvZiBvZmZpY2Vyczsgb25lIGNsYXNzIGdvdmVybnMgdGhlIHJlc2lkZW50cyBhbmQgdGhlIGxhYm91cmVycywgYW5kIGNvbGxlY3RzIHRyaWJ1dGUgZnJvbSB0aGVtLCB0aGUgb3RoZXIgY29tbWFuZHMgdGhlIG1lbiB1bmRlciBhcm1zIGFuZCB0aGUgZ2Fycmlzb25zLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5JZiB0aGUgY29tbWFuZGVyIG9mIGEgZ2Fycmlzb24gYWZmb3JkcyBpbnN1ZmZpY2llbnQgcHJvdGVjdGlvbiB0byB0aGUgY291bnRyeSwgdGhlIGNpdmlsIGdvdmVybm9yIGFuZCBjb250cm9sbGVyIG9mIGFncmljdWx0dXJlIGRlbm91bmNlcyB0aGUgY29tbWFuZGVyLCBzZXR0aW5nIG91dCB0aGF0IHRoZSBpbmhhYml0YW50cyBhcmUgdW5hYmxlIHRvIHdvcmsgdGhlIGZhcm1zIGZvciB3YW50IG9mIHByb3RlY3Rpb24uIElmLCBvbiB0aGUgb3RoZXIgaGFuZCwgdGhlIGNvbW1hbmRlciBicmluZ3MgcGVhY2UgdG8gdGhlIGZhcm1zLCBhbmQgdGhlIGdvdmVybm9yIG5ldmVydGhlbGVzcyBjYXVzZXMgdGhlIGxhbmQgdG8gYmUgc3BhcnNlbHkgcG9wdWxhdGVkIGFuZCBpZGxlLCB0aGUgY29tbWFuZGVyIGluIHR1cm4gZGVub3VuY2VzIHRoZSBnb3Zlcm5vci4KPC90cmFuc2xhdGlvbj4="
translation['4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IsIHJvdWdobHkgc3BlYWtpbmcsIHdoZXJlIGN1bHRpdmF0aW9uIGlzIGluZWZmaWNpZW50LCB0aGUgZ2Fycmlzb25zIGFyZSBub3QgbWFpbnRhaW5lZCBhbmQgdGhlIHRyaWJ1dGUgY2Fubm90IGJlIHBhaWQuIFdoZXJldmVyIGEgdmljZXJveSBpcyBhcHBvaW50ZWQsIGhlIGF0dGVuZHMgdG8gYm90aCB0aGVzZSBtYXR0ZXJzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BdCB0aGlzIHBvaW50IENyaXRvYnVsdXMgc2FpZDoKICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz7igJxXZWxsLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIGlmIHRoZSBHcmVhdCBLaW5nIGRvZXMgdGhpcywgaXQgc2VlbXMgdG8gbWUgdGhhdCBoZSBwYXlzIGFzIG11Y2ggYXR0ZW50aW9uIHRvIGh1c2JhbmRyeSBhcyB0byB3YXJmYXJlLuKAnQogICAgICAgIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWV0IGZ1cnRoZXIs4oCdIGNvbnRpbnVlZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIOKAnGluIGFsbCB0aGUgZGlzdHJpY3RzIGhlIHJlc2lkZXMgaW4gYW5kIHZpc2l0cyBoZSB0YWtlcyBjYXJlIHRoYXQgdGhlcmUgYXJlIOKAmHBhcmFkaXNlcyzigJkgYXMgdGhleSBjYWxsIHRoZW0sIGZ1bGwgb2YgYWxsIHRoZSBnb29kIGFuZCBiZWF1dGlmdWwgdGhpbmdzIHRoYXQgdGhlIHNvaWwgd2lsbCBwcm9kdWNlLCBhbmQgaW4gdGhpcyBoZSBoaW1zZWxmIHNwZW5kcyBtb3N0IG9mIGhpcyB0aW1lLCBleGNlcHQgd2hlbiB0aGUgc2Vhc29uIHByZWNsdWRlcyBpdC7igJ0KICAgICAgICA8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiBpdCBpcyBvZiBjb3Vyc2UgbmVjZXNzYXJ5LCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIHRvIHRha2UgY2FyZSB0aGF0IHRoZXNlIHBhcmFkaXNlcyBpbiB3aGljaCB0aGUga2luZyBzcGVuZHMgaGlzIHRpbWUgc2hhbGwgY29udGFpbiBhIGZpbmUgc3RvY2sgb2YgdHJlZXMgYW5kIGFsbCBvdGhlciBiZWF1dGlmdWwgdGhpbmdzIHRoYXQgdGhlIHNvaWwgcHJvZHVjZXMu4oCdCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHNvbWUgc2F5LCBDcml0b2J1bHVzLCB0aGF0IHdoZW4gdGhlIGtpbmcgbWFrZXMgZ2lmdHMsIGhlIGZpcnN0IGludml0ZXMgdGhvc2Ugd2hvIGhhdmUgZGlzdGluZ3Vpc2hlZCB0aGVtc2VsdmVzIGluIHdhciwgYmVjYXVzZSBpdCBpcyB1c2VsZXNzIHRvIGhhdmUgYnJvYWQgYWNyZXMgdW5kZXIgdGlsbGFnZSB1bmxlc3MgdGhlcmUgYXJlIG1lbiB0byBkZWZlbmQgdGhlbTsgYW5kIG5leHQgdG8gdGhlbSwgdGhvc2Ugd2hvIHN0b2NrIGFuZCBjdWx0aXZhdGUgdGhlIGxhbmQgYmVzdCwgc2F5aW5nIHRoYXQgZXZlbiBzdG91dC1oZWFydGVkIHdhcnJpb3JzIGNhbm5vdCBsaXZlIHdpdGhvdXQgdGhlIGFpZCBvZiB3b3JrZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBpcyBhIHN0b3J5IHRoYXQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkN5cnVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBsYXRlbHkgdGhlIG1vc3QgaWxsdXN0cmlvdXMgb2YgcHJpbmNlcywgb25jZSBzYWlkIHRvIHRoZSBjb21wYW55IGludml0ZWQgdG8gcmVjZWl2ZSBoaXMgZ2lmdHMsIOKAmEkgbXlzZWxmIGRlc2VydmUgdG8gcmVjZWl2ZSB0aGUgZ2lmdHMgYXdhcmRlZCBpbiBib3RoIGNsYXNzZXM7IGZvciBJIGFtIHRoZSBiZXN0IGF0IHN0b2NraW5nIGxhbmQgYW5kIHRoZSBiZXN0IGF0IHByb3RlY3RpbmcgdGhlIHN0b2NrLuKAmeKAnQogICAgICAgIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5DeXJ1czwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCwgaWYgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkN5cnVzPC9zdXJuYW1lPjwvcGVyc05hbWU+IHNhaWQgdGhhdCwgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkN5cnVzPC9zdXJuYW1lPjxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgaGUgdG9vayBhcyBtdWNoIHByaWRlIGluIGN1bHRpdmF0aW5nIGFuZCBzdG9ja2luZyBsYW5kIGFzIGluIGJlaW5nIGEgd2Fycmlvci7igJ0KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCBhbmQsIHVwb24gbXkgd29yZCwgaWYgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkN5cnVzPC9zdXJuYW1lPjwvcGVyc05hbWU+IGhhZCBvbmx5IGxpdmVkLCBpdCBzZWVtcyB0aGF0IGhlIHdvdWxkIGhhdmUgcHJvdmVkIGFuIGV4Y2VsbGVudCBydWxlci4gT25lIG9mIHRoZSBtYW55IHByb29mcyB0aGF0IGhlIGhhcyBnaXZlbiBvZiB0aGlzIGlzIHRoZSBmYWN0IHRoYXQsIHdoZW4gaGUgd2FzIG9uIGhpcyB3YXkgdG8gZmlnaHQgaGlzIGJyb3RoZXIgZm9yIHRoZSB0aHJvbmUsIGl0IGlzIHNhaWQgdGhhdCBub3QgYSBtYW4gZGVzZXJ0ZWQgZnJvbSA8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+Q3lydXM8L3N1cm5hbWU+PHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkN5cnVzPC9zdXJuYW1lPjwvcGVyc05hbWU+IHRvIHRoZSBraW5nLCB3aGVyZWFzIHRlbnMgb2YgdGhvdXNhbmRzIGRlc2VydGVkIGZyb20gdGhlIGtpbmcgdG8gPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkN5cnVzPC9zdXJuYW1lPjxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5DeXJ1czwvc3VybmFtZT48L3BlcnNOYW1lPi4KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkN5cnVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rIHlvdSBoYXZlIG9uZSBjbGVhciBwcm9vZiBvZiBhIHJ1bGVyJ3MgZXhjZWxsZW5jZSwgd2hlbiBtZW4gb2JleSBoaW0gd2lsbGluZ2x5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk1lbTwvdGl0bGU+IElJSS4gaWlpLiA5Ljwvbm90ZT4gYW5kIGNob29zZSB0byBzdGFuZCBieSBoaW0gaW4gbW9tZW50cyBvZiBkYW5nZXIuIE5vdyBoaXMgZnJpZW5kcyBhbGwgZm91Z2h0IGF0IGhpcyBzaWRlIGFuZCBmZWxsIGF0IGhpcyBzaWRlIHRvIGEgbWFuLCBmaWdodGluZyByb3VuZCBoaXMgYm9keSwgd2l0aCB0aGUgb25lIGV4Y2VwdGlvbiBvZiBBcmlhZXVzLCB3aG9zZSBwbGFjZSBpbiB0aGUgYmF0dGxlIHdhcywgaW4gcG9pbnQgb2YgZmFjdCwgb24gdGhlIGxlZnQgd2luZy48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5NZW08L3RpdGxlPiBJSUkuIGlpaS4gOS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5hYmFzaXMsPC90aXRsZT4gSS4gaXguIDMxLiBBcmlhZXVzIGZsZWQgd2hlbiBoZSBzYXcgdGhhdCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+Q3lydXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4gaGFkIGZhbGxlbi48L25vdGU+Cjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkFuYWJhc2lzLDwvdGl0bGU+IEkuIGl4LiAzMS4gQXJpYWV1cyBmbGVkIHdoZW4gaGUgc2F3IHRoYXQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkN5cnVzPC9zdXJuYW1lPjwvcGVyc05hbWU+IGhhZCBmYWxsZW4uPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkN5cnVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRnVydGhlciwgdGhlIHN0b3J5IGdvZXMgdGhhdCB3aGVuIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5MeXNhbmRlcjwvc3VybmFtZT48L3BlcnNOYW1lPiBjYW1lIHRvIGhpbSBicmluZ2luZyB0aGUgZ2lmdHMgZm9ybSB0aGUgYWxsaWVzLCB0aGlzIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5MeXNhbmRlcjwvc3VybmFtZT48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+Q3lydXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4gc2hvd2VkIGhpbSB2YXJpb3VzIG1hcmtzIG9mIGZyaWVuZGxpbmVzcywgYXMgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkN5cnVzPC9zdXJuYW1lPjxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5MeXNhbmRlcjwvc3VybmFtZT48L3BlcnNOYW1lPiBoaW1zZWxmIHJlbGF0ZWQgb25jZSB0byBhIHN0cmFuZ2VyIGF0IDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5MeXNhbmRlcjwvc3VybmFtZT48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1lZ2FyYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTWVnYXJhIj5NZWdhcmE8L3BsYWNlTmFtZT4sIGFkZGluZyBiZXNpZGVzIHRoYXQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkN5cnVzPC9zdXJuYW1lPjwvcGVyc05hbWU+IHBlcnNvbmFsbHkgc2hvd2VkIGhpbSByb3VuZCBoaXMgcGFyYWRpc2UgYXQgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkN5cnVzPC9zdXJuYW1lPjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU2FyZGlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTYXJkaXMiPlNhcmRpczwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkx5c2FuZGVyPC9zdXJuYW1lPjwvcGVyc05hbWU+IGFkbWlyZWQgdGhlIGJlYXV0eSBvZiB0aGUgdHJlZXMgaW4gaXQsIHRoZSBhY2N1cmFjeSBvZiB0aGUgc3BhY2luZywgdGhlIHN0cmFpZ2h0bmVzcyBvZiB0aGUgcm93cywgdGhlIHJlZ3VsYXJpdHkgb2YgdGhlIGFuZ2xlcyBhbmQgdGhlIG11bHRpdHVkZSBvZiB0aGUgc3dlZXQgc2NlbnRzIHRoYXQgY2x1bmcgcm91bmQgdGhlbSBhcyB0aGV5IHdhbGtlZDsgYW5kIGZvciB3b25kZXIgb2YgdGhlc2UgdGhpbmdzIGhlIGNyaWVkLCDigJg8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+THlzYW5kZXI8L3N1cm5hbWU+PHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkN5cnVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBJIHJlYWxseSBkbyBhZG1pcmUgYWxsIHRoZXNlIGxvdmVseSB0aGluZ3MsIGJ1dCBJIGFtIGZhciBtb3JlIGltcHJlc3NlZCB3aXRoIHlvdXIgYWdlbnQncyBza2lsbCBpbiBtZWFzdXJpbmcgYW5kIGFycmFuZ2luZyBldmVyeXRoaW5nIHNvIGV4YWN0bHku4oCZCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5DeXJ1czwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5DeXJ1cyB3YXMgZGVsaWdodGVkIHRvIGhlYXIgdGhpcyBhbmQgc2FpZDog4oCYV2VsbCwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkx5c2FuZGVyPC9zdXJuYW1lPjwvcGVyc05hbWU+LCB0aGUgd2hvbGUgb2YgdGhlIG1lYXN1cmVtZW50IGFuZCBhcnJhbmdlbWVudCBpcyBteSBvd24gd29yaywgYW5kIEkgZGlkIHNvbWUgb2YgdGhlIHBsYW50aW5nIG15c2VsZi7igJkKPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkx5c2FuZGVyPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['4.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz7igJhXaGF0LCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+Q3lydXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4/4oCZIGV4Y2xhaW1lZCBMeXNhbmRlciwgbG9va2luZyBhdCBoaW0sIGFuZCBtYXJraW5nIHRoZSBiZWF1dHkgYW5kIHBlcmZ1bWUgb2YgaGlzIHJvYmVzLCBhbmQgdGhlIHNwbGVuZG91ciBvZiB0aGUgbmVja2xhY2VzIGFuZCBiYW5nbGVzIGFuZCBvdGhlciBqZXdlbHMgdGhhdCBoZSB3YXMgd2VhcmluZzsg4oCYZGlkIHlvdSByZWFsbHkgcGxhbnQgcGFydCBvZiB0aGlzIHdpdGggeW91ciBvd24gaGFuZHM/4oCZCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5DeXJ1czwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['4.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz7igJhEb2VzIHRoYXQgc3VycHJpc2UgeW91LCBMeXNhbmRlcj/igJkgYXNrZWQgQ3lydXMgaW4gcmVwbHkuIOKAmEkgc3dlYXIgYnkgdGhlIFN1bi1nb2QgdGhhdCBJIG5ldmVyIHlldCBzYXQgZG93biB0byBkaW5uZXIgd2hlbiBpbiBzb3VuZCBoZWFsdGgsIHdpdGhvdXQgZmlyc3Qgd29ya2luZyBoYXJkIGF0IHNvbWUgdGFzayBvZiB3YXIgb3IgYWdyaWN1bHR1cmUsIG9yIGV4ZXJ0aW5nIG15c2VsZiBzb21laG93LuKAmQo8L3RyYW5zbGF0aW9uPg=="
translation['4.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTHlzYW5kZXIgaGltc2VsZiBkZWNsYXJlZCwgSSBzaG91bGQgYWRkLCB0aGF0IG9uIGhlYXJpbmcgdGhpcywgaGUgY29uZ3JhdHVsYXRlZCBoaW0gaW4gdGhlc2Ugd29yZHM6IOKAmEkgdGhpbmsgeW91IGRlc2VydmUgeW91ciBoYXBwaW5lc3MsIEN5cnVzLCBmb3IgeW91IGVhcm4gaXQgYnkgeW91ciB2aXJ0dWVzLuKAmeKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgSSB0ZWxsIHlvdSB0aGlzLOKAnSBjb250aW51ZWQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCDigJxiZWNhdXNlIGV2ZW4gdGhlIHdlYWx0aGllc3QgY2Fubm90IGhvbGQgYWxvb2YgZnJvbSBodXNiYW5kcnkuIEZvciB0aGUgcHVyc3VpdCBvZiBpdCBpcyBpbiBzb21lIHNlbnNlIGEgbHV4dXJ5IGFzIHdlbGwgYXMgYSBtZWFucyBvZiBpbmNyZWFzaW5nIG9uZSdzIGVzdGF0ZSBhbmQgb2YgdHJhaW5pbmcgdGhlIGJvZHkgaW4gYWxsIHRoYXQgYSBmcmVlIG1hbiBzaG91bGQgYmUgYWJsZSB0byBkby4KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZvciwgaW4gdGhlIGZpcnN0IHBsYWNlLCB0aGUgZWFydGggeWllbGRzIHRvIGN1bHRpdmF0b3JzIHRoZSBmb29kIGJ5IHdoaWNoIG1lbiBsaXZlOyBzaGUgeWllbGRzIGJlc2lkZXMgdGhlIGx1eHVyaWVzIHRoZXkgZW5qb3kuCjwvdHJhbnNsYXRpb24+"
translation['5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlNlY29uZGx5LCBzaGUgc3VwcGxpZXMgYWxsIHRoZSB0aGluZ3Mgd2l0aCB3aGljaCB0aGV5IGRlY29yYXRlIGFsdGFycyBhbmQgc3RhdHVlcyBhbmQgdGhlbXNlbHZlcywgYWxvbmcgd2l0aCBtb3N0IHBsZWFzYW50IHNpZ2h0cyBhbmQgc2NlbnRzLiBUaGlyZGx5LCBzaGUgcHJvZHVjZXMgb3IgZmVlZHMgdGhlIGluZ3JlZGllbnRzIG9mIG1hbnkgZGVsaWNhdGUgZGlzaGVzOyBmb3IgdGhlIGFydCBvZiBicmVlZGluZyBzdG9jayBpcyBjbG9zZWx5IGxpbmtlZCB3aXRoIGh1c2JhbmRyeTsgc28gdGhhdCBtZW4gaGF2ZSB2aWN0aW1zIGZvciBwcm9waXRpYXRpbmcgdGhlIGdvZHMgd2l0aCBzYWNyaWZpY2UgYW5kIGNhdHRsZSBmb3IgdGhlaXIgb3duIHVzZS4KPC90cmFuc2xhdGlvbj4="
translation['5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aG91Z2ggc2hlIHN1cHBsaWVzIGdvb2QgdGhpbmdzIGluIGFidW5kYW5jZSwgc2hlIHN1ZmZlcnMgdGhlbSBub3QgdG8gYmUgd29uIHdpdGhvdXQgdG9pbCwgYnV0IGFjY3VzdG9tcyBtZW4gdG8gZW5kdXJlIHdpbnRlcidzIGNvbGQgYW5kIHN1bW1lcidzIGhlYXQuIFNoZSBnaXZlcyBpbmNyZWFzZWQgc3RyZW5ndGggdGhyb3VnaCBleGVyY2lzZSB0byB0aGUgbWVuIHRoYXQgbGFib3VyIHdpdGggdGhlaXIgb3duIGhhbmRzLCBhbmQgaGFyZGVucyB0aGUgb3ZlcnNlZXJzIG9mIHRoZSB3b3JrIGJ5IHJvdXNpbmcgdGhlbSBlYXJseSBhbmQgZm9yY2luZyB0aGVtIHRvIG1vdmUgYWJvdXQgYnJpc2tseS4gRm9yIG9uIGEgZmFybSBubyBsZXNzIHRoYW4gaW4gYSB0b3duIHRoZSBtb3N0IGltcG9ydGFudCBvcGVyYXRpb25zIGhhdmUgdGhlaXIgZml4ZWQgdGltZXMuCjwvdHJhbnNsYXRpb24+"
translation['5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCBpZiBhIG1hbiB3YW50cyB0byBzZXJ2ZSBpbiB0aGUgY2F2YWxyeSwgZmFybWluZyBpcyBoaXMgbW9zdCBlZmZpY2llbnQgcGFydG5lciBpbiBmdXJuaXNoaW5nIGtlZXAgZm9yIGhpcyBob3JzZTsgaWYgb24gZm9vdCwgaXQgbWFrZXMgaGlzIGJvZHkgYnJpc2suIEFuZCB0aGUgbGFuZCBoZWxwcyBpbiBzb21lIG1lYXN1cmUgdG8gYXJvdXNlIGEgbGlraW5nIGZvciB0aGUgdG9pbCBvZiBodW50aW5nLCBzaW5jZSBpdCBhZmZvcmRzIGZhY2lsaXRpZXMgZm9yIGtlZXBpbmcgaG91bmRzIGFuZCBhdCB0aGUgc2FtZSB0aW1lIHN1cHBsaWVzIGZvb2QgZm9yIHRoZSB3aWxkIGdhbWUgdGhhdCBwcmV5cyBvbiB0aGUgbGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBpZiBodXNiYW5kcnkgYmVuZWZpdHMgaG9yc2VzIGFuZCBob3VuZHMsIHRoZXkgYmVuZWZpdCB0aGUgZmFybSBubyBsZXNzLCB0aGUgaG9yc2VzIGJ5IGNhcnJ5aW5nIHRoZSBvdmVyc2VlciBlYXJseSB0byB0aGUgc2NlbmUgb2YgaGlzIGR1dGllcyBhbmQgZW5hYmxpbmcgaGltIHRvIGxlYXZlIGl0IGxhdGUsIHRoZSBob3VuZHMgYnkga2VlcGluZyB0aGUgd2lsZCBhbmltYWxzIGZyb20gaW5qdXJpbmcgY3JvcHMgYW5kIHNoZWVwLCBhbmQgYnkgaGVscGluZyB0byBnaXZlIHNhZmV0eSB0byBzb2xpdHVkZS4KPC90cmFuc2xhdGlvbj4="
translation['5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBsYW5kIGFsc28gc3RpbXVsYXRlcyBhcm1lZCBwcm90ZWN0aW9uIG9mIHRoZSBjb3VudHJ5IG9uIHRoZSBwYXJ0IG9mIHRoZSBodXNiYW5kbWVuLCBieSBub3VyaXNoaW5nIGhlciBjcm9wcyBpbiB0aGUgb3BlbiBmb3IgdGhlIHN0cm9uZ2VzdCB0byB0YWtlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGF0IGFydCBwcm9kdWNlcyBiZXR0ZXIgcnVubmVycywgdGhyb3dlcnMgYW5kIGp1bXBlcnMgdGhhbiBodXNiYW5kcnk/IFdoYXQgYXJ0IHJld2FyZHMgdGhlIGxhYm91cmVyIG1vcmUgZ2VuZXJvdXNseT8gV2hhdCBhcnQgd2VsY29tZXMgaGVyIGZvbGxvd2VyIG1vcmUgZ2xhZGx5LCBpbnZpdGluZyBoaW0gdG8gY29tZSBhbmQgdGFrZSB3aGF0ZXZlciBoZSB3YW50cz8gV2hhdCBhcnQgZW50ZXJ0YWlucyBzdHJhbmdlcnMgbW9yZSBnZW5lcm91c2x5Pwo8L3RyYW5zbGF0aW9uPg=="
translation['5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPldoZXJlIGlzIHRoZXJlIGdyZWF0ZXIgZmFjaWxpdHkgZm9yIHBhc3NpbmcgdGhlIHdpbnRlciBjb21mb3J0ZWQgYnkgZ2VuZXJvdXMgZmlyZSBhbmQgd2FybSBiYXRocywgdGhhbiBvbiBhIGZhcm0/IFdoZXJlIGlzIGl0IHBsZWFzYW50ZXIgdG8gc3BlbmQgdGhlIHN1bW1lciBlbmpveWluZyB0aGUgY29vbCB3YXRlcnMgYW5kIGJyZWV6ZXMgYW5kIHNoYWRlLCB0aGFuIGluIHRoZSBjb3VudHJ5Pwo8L3RyYW5zbGF0aW9uPg=="
translation['5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5XaGF0IG90aGVyIGFydCB5aWVsZHMgbW9yZSBzZWVtbHkgZmlyc3QtZnJ1aXRzIGZvciB0aGUgZ29kcywgb3IgZ2l2ZXMgb2NjYXNpb24gZm9yIG1vcmUgY3Jvd2RlZCBmZXN0aXZhbHM/IFdoYXQgYXJ0IGlzIGRlYXJlciB0byBzZXJ2YW50cywgb3IgcGxlYXNhbnRlciB0byBhIHdpZmUsIG9yIG1vcmUgZGVsaWdodGZ1bCB0byBjaGlsZHJlbiwgb3IgbW9yZSBhZ3JlZWFibGUgdG8gZnJpZW5kcz8KPC90cmFuc2xhdGlvbj4="
translation['5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UbyBtZSBpbmRlZWQgaXQgc2VlbXMgc3RyYW5nZSwgaWYgYW55IGZyZWUgbWFuIGhhcyBjb21lIGJ5IGEgcG9zc2Vzc2lvbiBwbGVhc2FudGVyIHRoYW4gdGhpcywgb3IgaGFzIGZvdW5kIG91dCBhbiBvY2N1cGF0aW9uIHBsZWFzYW50ZXIgdGhhbiB0aGlzIG9yIG1vcmUgdXNlZnVsIGZvciB3aW5uaW5nIGEgbGl2ZWxpaG9vZC4KPC90cmFuc2xhdGlvbj4="
translation['5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWV0IGFnYWluLCB0aGUgZWFydGggd2lsbGluZ2x5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk9yIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs64zrXhvbjPgiDOv+G9ls6xLDwvZm9yZWlnbj4g4oCcaXMgYSBnb2RkZXNzIGFuZC7igJ08L25vdGU+IHRlYWNoZXMgcmlnaHRlb3VzbmVzcyB0byB0aG9zZSB3aG8gY2FuIGxlYXJuOyBmb3IgdGhlIGJldHRlciBzaGUgaXMgc2VydmVkLCB0aGUgbW9yZSBnb29kIHRoaW5ncyBzaGUgZ2l2ZXMgaW4gcmV0dXJuLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuM614b24z4Igzr/hvZbOsSw8L2ZvcmVpZ24+IOKAnGlzIGEgZ29kZGVzcyBhbmQu4oCdPC90cmFuc2xhdGlvbj4="
translation['5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaWYgaGFwbHkgdGhvc2Ugd2hvIGFyZSBvY2N1cGllZCBpbiBmYXJtaW5nLCBhbmQgYXJlIHJlY2VpdmluZyBhIHJpZ29yb3VzIGFuZCBtYW5seSB0ZWFjaGluZywgYXJlIGZvcmNlZCBhdCBhbnkgdGltZSB0byBxdWl0IHRoZWlyIGxhbmRzIGJ5IGdyZWF0IGFybWllcywgdGhleSwgYXMgbWVuIHdlbGwtZm91bmQgaW4gbWluZCBhbmQgaW4gYm9keSwgY2FuIGVudGVyIHRoZSBjb3VudHJ5IG9mIHRob3NlIHdobyBoaW5kZXIgdGhlbSwgYW5kIHRha2Ugc3VmZmljaWVudCBmb3IgdGhlaXIgc3VwcG9ydC4gT2Z0ZW4gaW4gdGltZSBvZiB3YXIgaXQgaXMgc2FmZXIgdG8gZ28gYXJtZWQgaW4gc2VhcmNoIG9mIGZvb2QgdGhhbiB0byBnYXRoZXIgaXQgd2l0aCBmYXJtaW5nIGltcGxlbWVudHMuCjwvdHJhbnNsYXRpb24+"
translation['5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTW9yZW92ZXIsIGh1c2JhbmRyeSBoZWxwcyB0byB0cmFpbiBtZW4gZm9yIGNvcnBvcmF0ZSBlZmZvcnQuIEZvciBtZW4gYXJlIGVzc2VudGlhbCB0byBhbiBleHBlZGl0aW9uIGFnYWluc3QgYW4gZW5lbXksIGFuZCB0aGUgY3VsdGl2YXRpb24gb2YgdGhlIHNvaWwgZGVtYW5kcyB0aGUgYWlkIG9mIG1lbi4KPC90cmFuc2xhdGlvbj4="
translation['5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUgbm9ib2R5IGNhbiBiZSBhIGdvb2QgZmFybWVyIHVubGVzcyBoZSBtYWtlcyBoaXMgbGFib3VyZXJzIGJvdGggZWFnZXIgYW5kIG9iZWRpZW50OyBhbmQgdGhlIGNhcHRhaW4gd2hvIGxlYWRzIG1lbiBhZ2FpbnN0IGFuIGVuZW15IG11c3QgY29udHJpdmUgdG8gc2VjdXJlIHRoZSBzYW1lIHJlc3VsdHMgYnkgcmV3YXJkaW5nIHRob3NlIHdobyBhY3QgYXMgYnJhdmUgbWVuIHNob3VsZCBhY3QgYW5kIHB1bmlzaGluZyB0aGUgZGlzb2JlZGllbnQuCjwvdHJhbnNsYXRpb24+"
translation['5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaXQgaXMgbm8gbGVzcyBuZWNlc3NhcnkgZm9yIGEgZmFybWVyIHRvIGVuY291cmFnZSBoaXMgbGFib3VyZXJzIG9mdGVuLCB0aGFuIGZvciBhIGdlbmVyYWwgdG8gZW5jb3VyYWdlIGhpcyBtZW4uIEFuZCBzbGF2ZXMgbmVlZCB0aGUgc3RpbXVsdXMgb2YgZ29vZCBob3BlcyBubyBsZXNzLCBuYXksIGV2ZW4gbW9yZSB0aGFuIGZyZWUgbWVuLCB0byBtYWtlIHRoZW0gc3RlYWRmYXN0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5JdCBoYXMgYmVlbiBub2JseSBzYWlkIHRoYXQgaHVzYmFuZHJ5IGlzIHRoZSBtb3RoZXIgYW5kIG51cnNlIG9mIHRoZSBvdGhlciBhcnRzLiBGb3Igd2hlbiBodXNiYW5kcnkgZmxvdXJpc2hlcywgYWxsIHRoZSBvdGhlciBhcnRzIGFyZSBpbiBnb29kIGZldHRsZTsgYnV0IHdoZW5ldmVyIHRoZSBsYW5kIGlzIGNvbXBlbGxlZCB0byBsaWUgd2FzdGUsIHRoZSBvdGhlciBhcnRzIG9mIGxhbmRzbWVuIGFuZCBtYXJpbmVycyBhbGlrZSB3ZWxsLW5pZ2ggcGVyaXNoLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['5.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LOKAnSByZXBsaWVkIENyaXRvYnVsdXMgdG8gdGhpcywg4oCcSSB0aGluayB5b3UgYXJlIHJpZ2h0IHNvIGZhci4gQnV0IGluIGh1c2JhbmRyeSBhIG1hbiBjYW4gcmVseSB2ZXJ5IGxpdHRsZSBvbiBmb3JlY2FzdC4gRm9yIGhhaWxzdG9ybXMgYW5kIGZyb3N0cyBzb21ldGltZXMsIGFuZCBkcm91Z2h0cyBhbmQgcmFpbnMgYW5kIGJsaWdodCBydWluIHNjaGVtZXMgd2VsbCBwbGFubmVkIGFuZCB3ZWxsIGNhcnJpZWQgb3V0OyBhbmQgc29tZXRpbWVzIHdlbGwtYnJlZCBzdG9jayBpcyBtaXNlcmFibHkgZGVzdHJveWVkIGJ5IGFuIG91dGJyZWFrIG9mIGRpc2Vhc2Uu4oCdCiAgICAgICAgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['5.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCzigJ0gc2FpZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4gaW4gcmVwbHksPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5NZW0uPC90aXRsZT4gSS4gaXYuIDE1OyBpdi4gaWlpLiAxMi4gPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lyb3AuPC90aXRsZT4gSS4gdmkuIDQ2Ljwvbm90ZT4g4oCcSSB0aG91Z2h0IHlvdSBrbmV3LCBDcml0b2J1bHVzLCB0aGF0IHRoZSBvcGVyYXRpb25zIG9mIGh1c2JhbmRyeSBubyBsZXNzIHRoYW4gdGhvc2Ugb2Ygd2FyIGFyZSBpbiB0aGUgaGFuZHMgb2YgdGhlIGdvZHMuIEFuZCB5b3Ugb2JzZXJ2ZSwgSSBzdXBwb3NlLCB0aGF0IG1lbiBlbmdhZ2VkIGluIHdhciB0cnkgdG8gcHJvcGl0YXRlIHRoZSBnb2RzIGJlZm9yZSB0YWtpbmcgYWN0aW9uOyBhbmQgd2l0aCBzYWNyaWZpY2VzIGFuZCBvbWVucyBzZWVrIHRvIGtub3cgd2hhdCB0aGV5IG91Z2h0IHRvIGRvIGFuZCB3aGF0IHRoZXkgb3VnaHQgbm90IHRvIGRvOwo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5NZW0uPC90aXRsZT4gSS4gaXYuIDE1OyBpdi4gaWlpLiAxMi4gPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lyb3AuPC90aXRsZT4gSS4gdmkuIDQ2LjwvdHJhbnNsYXRpb24+"
translation['5.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgZm9yIHRoZSBidXNpbmVzcyBvZiBodXNiYW5kcnkgZG8geW91IHRoaW5rIGl0IGxlc3MgbmVjZXNzYXJ5IHRvIGFzayB0aGUgYmxlc3Npbmcgb2YgdGhlIGdvZHM/IEtub3cgb2YgYSBzdXJldHkgdGhhdCByaWdodC1taW5kZWQgbWVuIG9mZmVyIHByYXllciBmb3IgZnJ1aXRzIGFuZCBjcm9wcyBhbmQgY2F0dGxlIGFuZCBob3JzZXMgYW5kIHNoZWVwLCBheWUgYW5kIGZvciBhbGwgdGhhdCB0aGV5IHBvc3Nlc3Mu4oCdCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIEkgdGhpbmsgeW91IGFyZSByaWdodCB3aGVuIHlvdSBiaWQgbWUgdHJ5IHRvIGJlZ2luIGV2ZXJ5IHVuZGVydGFraW5nIHdpdGggdGhlIGdvZHMnIGhlbHAsIHNpbmNlIHRoZSBnb2RzIGNvbnRyb2wgdGhlIHdvcmtzIG9mIHBlYWNlIG5vIGxlc3MgdGhhbiBvZiB3YXIuIFdlIHdpbGwgdHJ5LCB0aGVuLCB0byBkbyBzby4gQnV0IG5vdyBnbyBiYWNrIHRvIHRoZSBwb2ludCB3aGVyZSB5b3UgYnJva2Ugb2ZmIGluIHlvdXIgdGFsayBhYm91dCBlc3RhdGUgbWFuYWdlbWVudCwgYW5kIHRyeSB0byBleHBvdW5kIHRoZSBzdWJqZWN0IGNvbXBsZXRlbHkgc3RlcCBieSBzdGVwLCBzaW5jZSBhZnRlciBoZWFyaW5nIHdoYXQgeW91IGhhdmUgc2FpZCBzbyBmYXIsIEkgc2VlbSBldmVuIG5vdyB0byBkaXNjZXJuIHJhdGhlciBtb3JlIGNsZWFybHkgdGhhbiBiZWZvcmUgd2hhdCBJIG11c3QgZG8gdG8gZWFybiBteSBsaXZpbmcu4oCdCiAgICAgICAgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIHN1Z2dlc3QgdGhlbizigJ0gcmVzdW1lZCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIOKAnHRoYXQgd2Ugc2hvdWxkIGZpcnN0IHJlY2FwaXR1bGF0ZSB0aG9zZSBwb2ludHMgb2Ygb3VyIGRpc2N1c3Npb24gb24gd2hpY2ggd2UgaGF2ZSBhbHJlYWR5IHJlYWNoZWQgYWdyZWVtZW50LCBpbiBvcmRlciB0aGF0IHdlIG1heSB0cnkgdG8gYWdyZWUgYXMgdGhvcm91Z2hseSwgaWYgcG9zc2libGUsIHdoZW4gd2UgZ28gdGhyb3VnaCB0aGUgcmVtYWluaW5nIHN0ZXBzLuKAnQo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxPIHllczsgd2hlbiBzZXZlcmFsIGFyZSBqb2ludGx5IGludGVyZXN0ZWQgaW4gbW9uZXksIGl0IGlzIHBsZWFzYW50IHRvIGhhdmUgbm8gZGlzYWdyZWVtZW50IGluIGdvaW5nIG92ZXIgdGhlIGFjY291bnRzOyBhbmQgaXQgaXMgZXF1YWxseSBwbGVhc2FudCBmb3IgdXMsIGFzIHRoZSBpbnRlcmVzdGVkIHBhcnRpZXMgaW4gYSBkaXNjdXNzaW9uLCB0byBhZ3JlZSBhcyB3ZSBnbyBvdmVyIHRoZSBzZXZlcmFsIHN0ZXBzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsIG5vdywgd2UgdGhvdWdodCB0aGF0IGVzdGF0ZSBtYW5hZ2VtZW50IGlzIHRoZSBuYW1lIG9mIGEgYnJhbmNoIG9mIGtub3dsZWRnZSwgYW5kIHRoaXMga25vd2xlZGdlIGFwcGVhcmVkIHRvIGJlIHRoYXQgYnkgd2hpY2ggbWVuIGNhbiBpbmNyZWFzZSBlc3RhdGVzLCBhbmQgYW4gZXN0YXRlIGFwcGVhcmVkIHRvIGJlIGlkZW50aWNhbCB3aXRoIHRoZSB0b3RhbCBvZiBvbmUncyBwcm9wZXJ0eSwgYW5kIHdlIHNhaWQgdGhhdCBwcm9wZXJ0eSBpcyB0aGF0IHdoaWNoIGlzIHVzZWZ1bCBmb3Igc3VwcGx5aW5nIGEgbGl2ZWxpaG9vZCwgYW5kIHVzZWZ1bCB0aGluZ3MgdHVybmVkIG91dCB0byBiZSBhbGwgdGhvc2UgdGhpbmdzIHRoYXQgb25lIGtub3dzIGhvdyB0byB1c2UuCjwvdHJhbnNsYXRpb24+"
translation['6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3ZSB0aG91Z2h0IHRoYXQgaXQgaXMgaW1wb3NzaWJsZSB0byBsZWFybiBhbGwgdGhlIHNjaWVuY2VzLCBhbmQgd2UgYWdyZWVkIHdpdGggb3VyIHN0YXRlcyBpbiByZWplY3RpbmcgdGhlIHNvLWNhbGxlZCBpbGxpYmVyYWwgYXJ0cywgYmVjYXVzZSB0aGV5IHNlZW0gdG8gc3BvaWwgdGhlIGJvZHkgYW5kIHVubmVydmUgdGhlIG1pbmQuCjwvdHJhbnNsYXRpb24+"
translation['6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPldlIHNhaWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Tm90aGluZyB0byB0aGlzIGVmZmVjdCBvY2N1cnMgaW4gYy4gaXYuPC9ub3RlPiB0aGF0IHRoZSBjbGVhcmVzdCBwcm9vZiBvZiB0aGlzIHdvdWxkIGJlIGZvcnRoY29taW5nLCBpZiBpbiB0aGUgY291cnNlIG9mIGEgaG9zdGlsZSBpbnZhc2lvbiB0aGUgaHVzYmFuZG1lbiBhbmQgY3JhZnRzbWVuIHdlcmUgbWFkZSB0byBzaXQgYXBhcnQsIGFuZCBlYWNoIGdyb3VwIHdlcmUgYXNrZWQgd2hldGhlciB0aGV5IHZvdGVkIGZvciBkZWZlbmRpbmcgdGhlIGNvdW50cnkgb3Igd2l0aGRyYXdpbmcgZnJvbSB0aGUgb3BlbiBhbmQgZ3VhcmRpbmcgdGhlIGZvcnRyZXNzZXMuCjwvdHJhbnNsYXRpb24+"
translation['6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPldlIHRob3VnaHQgdGhhdCBpbiB0aGVzZSBjaXJjdW1zdGFuY2VzIHRoZSBtZW4gd2hvIGhhdmUgdG8gZG8gd2l0aCB0aGUgbGFuZCB3b3VsZCBnaXZlIHRoZWlyIHZvdGUgZm9yIGRlZmVuZGluZyBpdCwgdGhlIGNyYWZ0c21lbiBmb3Igbm90IGZpZ2h0aW5nLCBidXQgc2l0dGluZyBzdGlsbCwgYXMgdGhleSBoYXZlIGJlZW4gYnJvdWdodCB1cCB0byBkbywgYWxvb2YgZnJvbSB0b2lsIGFuZCBkYW5nZXIuCjwvdHJhbnNsYXRpb24+"
translation['6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPldlIGNhbWUgdG8gdGhlIGNvbmNsdXNpb24gdGhhdCBmb3IgYSBnZW50bGVtYW4gdGhlIGJlc3Qgb2NjdXBhdGlvbiBhbmQgdGhlIGJlc3Qgc2NpZW5jZSBpcyBodXNiYW5kcnksIGZyb20gd2hpY2ggbWVuIG9idGFpbiB3aGF0IGlzIG5lY2Vzc2FyeSB0byB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGlzIG9jY3VwYXRpb24gc2VlbWVkIHRvIGJlIHRoZSBlYXNpZXN0IHRvIGxlYXJuIGFuZCB0aGUgcGxlYXNhbnRlc3QgdG8gd29yayBhdCwgdG8gZ2l2ZSB0byB0aGUgYm9keSB0aGUgZ3JlYXRlc3QgbWVhc3VyZSBvZiBzdHJlbmd0aCBhbmQgYmVhdXR5LCBhbmQgdG8gbGVhdmUgdG8gdGhlIG1pbmQgdGhlIGdyZWF0ZXN0IGFtb3VudCBvZiBzcGFyZSB0aW1lIGZvciBhdHRlbmRpbmcgdG8gdGhlIGludGVyZXN0cyBvZiBvbmUncyBmcmllbmRzIGFuZCBjaXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Nb3Jlb3Zlciwgc2luY2UgdGhlIGNyb3BzIGdyb3cgYW5kIHRoZSBjYXR0bGUgb24gYSBmYXJtIGdyYXplIG91dHNpZGUgdGhlIHdhbGxzLCBodXNiYW5kcnkgc2VlbWVkIHRvIHVzIHRvIGhlbHAgaW4gc29tZSBtZWFzdXJlIHRvIG1ha2UgdGhlIHdvcmtlcnMgdmFsaWFudC4gQW5kIHNvIHRoaXMgd2F5IG9mIG1ha2luZyBhIGxpdmluZyBhcHBlYXJlZCB0byBiZSBoZWxkIGluIHRoZSBoaWdoZXN0IGVzdGltYXRpb24gYnkgb3VyIHN0YXRlcywgYmVjYXVzZSBpdCBzZWVtcyB0byB0dXJuIG91dCB0aGUgYmVzdCBjaXRpemVucyBhbmQgbW9zdCBsb3lhbCB0byB0aGUgY29tbXVuaXR5LuKAnQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSBoYXZlIGFscmVhZHkgaGVhcmQgZW5vdWdoLCBJIHRoaW5rLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIHRvIGNvbnZpbmNlIG1lIHRoYXQgaXQgaXMgaW4gdGhlIGhpZ2hlc3QgZGVncmVlIGhvbm91cmFibGUsIGdvb2QgYW5kIHBsZWFzYW50IHRvIGdldCBhIGxpdmluZyBieSBodXNiYW5kcnkuIEJ1dCB5b3UgdG9sZCBtZSB0aGF0IHlvdSBoYXZlIGRpc2NvdmVyZWQgdGhlIHJlYXNvbnMgd2h5IHNvbWUgZmFybWVycyBhcmUgc28gc3VjY2Vzc2Z1bCB0aGF0IGh1c2JhbmRyeSB5aWVsZHMgdGhlbSBhbGwgdGhleSBuZWVkIGluIGFidW5kYW5jZSwgYW5kIG90aGVycyBhcmUgc28gaW5lZmZpY2llbnQgdGhhdCB0aGV5IGZpbmQgZmFybWluZyB1bnByb2ZpdGFibGUuIEkgc2hvdWxkIGxpa2UgdG8gaGVhciB0aGUgcmVhc29ucyBpbiBlYWNoIGNhc2UsIGluIG9yZGVyIHRoYXQgd2UgbWF5IGRvIHdoYXQgaXMgZ29vZCBhbmQgYXZvaWQgd2hhdCBpcyBoYXJtZnVsLuKAnQogICAgICAgIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['6.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCB0aGVuLCBDcml0b2J1bHVzLCBJIHByb3Bvc2UgdG8gZ2l2ZSB5b3UgYSBjb21wbGV0ZSBhY2NvdW50IG9mIGFuIGludGVydmlldyBJIG9uY2UgaGFkIHdpdGggYSBtYW4gd2hvbSBJIHRvb2sgdG8gYmUgcmVhbGx5IG9uZSBvZiB0aG9zZSB3aG8gYXJlIGp1c3RseSBzdHlsZWQg4oCYZ2VudGxlbWVuLuKAmeKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIHNob3VsZCBncmVhdGx5IGxpa2UgdG8gaGVhciBpdCwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBmb3IgSSBsb25nIHRvIGRlc2VydmUgdGhhdCB0aXRsZSBteXNlbGYu4oCdCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['6.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiBJIHdpbGwgdGVsbCB5b3UgaG93IEkgY2FtZSB0byB0YWtlIG5vdGUgb2YgaGltLiBGb3IgaXQgdG9vayBtZSBhIHZlcnkgbGl0dGxlIHRpbWUgdG8gdmlzaXQgb3VyIGdvb2QgYnVpbGRlcnMsIGdvb2Qgc21pdGhzLCBnb29kIHBhaW50ZXJzLCBnb29kIHNjdWxwdG9ycywgYW5kIG90aGVyIHBlb3BsZSBvZiB0aGUga2luZCwgYW5kIHRvIGluc3BlY3QgdGhvc2Ugb2YgdGhlaXIgd29ya3MgdGhhdCBhcmUgZGVjbGFyZWQgdG8gYmUgYmVhdXRpZnVsOwo8L3RyYW5zbGF0aW9uPg=="
translation['6.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5idXQgSSBmZWx0IGEgZGVzaXJlIHRvIG1lZXQgb25lIG9mIHRob3NlIHdobyBhcmUgY2FsbGVkIGJ5IHRoYXQgZ3JhbmQgbmFtZSDigJhnZW50bGVtYW4s4oCZIHdoaWNoIGltcGxpZXMg4oCYYmVhdXRpZnVsJyBhcyB3ZWxsIGFzIOKAmGdvb2Qs4oCZIGluIG9yZGVyIHRvIGNvbnNpZGVyIHdoYXQgdGhleSBkaWQgdG8gZGVzZXJ2ZSBpdC4KPC90cmFuc2xhdGlvbj4="
translation['6.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQsIGZpcnN0LCBiZWNhdXNlIHRoZSBlcGl0aGV0IOKAmGJlYXV0aWZ1bOKAmSBpcyBhZGRlZCB0byDigJhnb29kLOKAmSBJIHdlbnQgdXAgdG8gZXZlcnkgcGVyc29uIEkgbm90aWNlZCwgYW5kIHRyaWVkIHRvIGRpc2NvdmVyIHdoZXRoZXIgSSBjb3VsZCBhbnl3aGVyZSBzZWUgZ29vZG5lc3MgaW4gY29tYmluYXRpb24gd2l0aCBiZWF1dHkuCjwvdHJhbnNsYXRpb24+"
translation['6.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgYWZ0ZXIgYWxsLCBpdCB3YXMgbm90IHNvOiBJIHRob3VnaHQgSSBkaXNjb3ZlcmVkIHRoYXQgc29tZSB3aG8gd2VyZSBiZWF1dGlmdWwgdG8gbG9vayBhdCB3ZXJlIHRob3JvdWdobHkgZGVwcmF2ZWQgaW4gdGhlaXIgbWluZHMuIFNvIEkgZGVjaWRlZCB0byBsZXQgZ29vZCBsb29rcyBhbG9uZSwgYW5kIHRvIHNlZWsgb3V0IHNvbWVvbmUga25vd24gYXMg4oCYYSBnZW50bGVtYW4u4oCZCjwvdHJhbnNsYXRpb24+"
translation['6.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSwgc2luY2UgSSBoZWFyZCB0aGUgbmFtZSBhcHBsaWVkIHRvIElzY2hvbWFjaHVzIGJ5IG1lbiwgd29tZW4sIGNpdGl6ZW5zIGFuZCBzdHJhbmdlcnMgYWxpa2UsIEkgZGVjaWRlZCB0byBtZWV0IGhpbSwgaWYgSSBjb3VsZC4KPC90cmFuc2xhdGlvbj4="
translation['7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxTbywgaGFwcGVuaW5nIG9uZSBkYXkgdG8gc2VlIGhpbSBzaXR0aW5nIGluIHRoZSBjbG9pc3RlciBvZiB0aGUgdGVtcGxlIG9mIFpldXMgRWxldXRoZXJpdXMgYXBwYXJlbnRseSBhdCBsZWlzdXJlLCBJIGFwcHJvYWNoZWQsIGFuZCBzaXR0aW5nIGRvd24gYXQgaGlzIHNpZGUsIHNhaWQ6PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFdoeSBzaXR0aW5nIHN0aWxsLCBJc2Nob21hY2h1cz8gWW91IGFyZSBub3QgbXVjaCBpbiB0aGUgaGFiaXQgb2YgZG9pbmcgbm90aGluZzsgZm9yIGdlbmVyYWxseSB3aGVuIEkgc2VlIHlvdSBpbiB0aGUgbWFya2V0LXBsYWNlIHlvdSBhcmUgZWl0aGVyIGJ1c3kgb3IgYXQgbGVhc3Qgbm90IHdob2xseSBpZGxlLuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhUcnVlLCBhbmQgeW91IHdvdWxkIG5vdCBoYXZlIHNlZW4gbWUgc28gbm93LCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIGhhZCBJIG5vdCBtYWRlIGFuIGFwcG9pbnRtZW50IHdpdGggc29tZSBzdHJhbmdlcnMgaGVyZS7igJk8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFByYXkgd2hlcmUgZG8geW91IHNwZW5kIHlvdXIgdGltZSzigJkgc2FpZCBJLCDigJhhbmQgd2hhdCBkbyB5b3UgZG8gd2hlbiB5b3UgYXJlIG5vdCBlbmdhZ2VkIGluIHNvbWUgc3VjaCBvY2N1cGF0aW9uPyBGb3IgSSB3YW50IHZlcnkgbXVjaCB0byBsZWFybiBob3cgeW91IGNhbWUgdG8gYmUgY2FsbGVkIGEgZ2VudGxlbWFuLCBzaW5jZSB5b3UgZG8gbm90IHBhc3MgeW91ciB0aW1lIGluZG9vcnMsIGFuZCB5b3VyIGNvbmRpdGlvbiBkb2VzIG5vdCBzdWdnZXN0IHRoYXQgeW91IGRvIHNvLuKAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxTbWlsaW5nIGF0IG15IHF1ZXN0aW9uLAogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPuKAmEhvdyBjYW1lIHlvdSB0byBiZSBjYWxsZWQgYSBnZW50bGVtYW4/4oCZLCBhbmQgYXBwYXJlbnRseSB3ZWxsIHBsZWFzZWQsIElzY2hvbWFjaHVzIGFuc3dlcmVkOiDigJhXZWxsLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIHdoZXRoZXIgY2VydGFpbiBwZXJzb25zIGNhbGwgbWUgc28gd2hlbiB0aGV5IHRhbGsgdG8geW91IGFib3V0IG1lLCBJIGtub3cgbm90LiBBc3N1cmVkbHkgd2hlbiB0aGV5IGNoYWxsZW5nZSBtZSB0byBhbiBleGNoYW5nZSBvZiBwcm9wZXJ0eSBpbiBvcmRlciB0byBlc2NhcGUgc29tZSBwdWJsaWMgYnVyZGVuLCBmaXR0aW5nIGEgd2Fyc2hpcCBvciBwcm92aWRpbmcgYSBjaG9ydXMsIG5vYm9keSBsb29rcyBmb3IgdGhlIOKAnGdlbnRsZW1hbizigJ0gYnV0IHRoZSBjaGFsbGVuZ2UgcmVmZXJzIHRvIG1lIGFzIHBsYWluIOKAnElzY2hvbWFjaHVzLOKAnSBteSBmYXRoZXIncyBzb24uIFdlbGwgbm93LCA8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBhcyB5b3UgYXNrIHRoZSBxdWVzdGlvbiwgSSBjZXJ0YWlubHkgZG8gbm90IHBhc3MgbXkgdGltZSBpbmRvb3JzOyBmb3IsIHlvdSBrbm93LCBteSB3aWZlIGlzIHF1aXRlIGNhcGFibGUgb2YgbG9va2luZyBhZnRlciB0aGUgaG91c2UgYnkgaGVyc2VsZi7igJkKPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBaCwgSXNjaG9tYWNodXMs4oCZIHNhaWQgSSwg4oCYdGhhdCBpcyBqdXN0IHdoYXQgSSB3YW50IHRvIGhlYXIgZnJvbSB5b3UuIERpZCB5b3UgeW91cnNlbGYgdHJhaW4geW91ciB3aWZlIHRvIGJlIG9mIHRoZSByaWdodCBzb3J0LCBvciBkaWQgc2hlIGtub3cgaGVyIGhvdXNlaG9sZCBkdXRpZXMgd2hlbiB5b3UgcmVjZWl2ZWQgaGVyIGZyb20gaGVyIHBhcmVudHM/4oCZCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXaHksIHdoYXQga25vd2xlZGdlIGNvdWxkIHNoZSBoYXZlIGhhZCwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCB3aGVuIEkgdG9vayBoZXIgZm9yIG15IHdpZmU/IFNoZSB3YXMgbm90IHlldCBmaWZ0ZWVuIHllYXJzIG9sZCB3aGVuIHNoZSBjYW1lIHRvIG1lLCBhbmQgdXAgdG8gdGhhdCB0aW1lIHNoZSBoYWQgbGl2ZWQgaW4gbGVhZGluZy1zdHJpbmdzLCBzZWVpbmcsIGhlYXJpbmcgYW5kIHNheWluZyBhcyBsaXR0bGUgYXMgcG9zc2libGUuCiAgICAgICAgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPklmIHdoZW4gc2hlIGNhbWUgc2hlIGtuZXcgbm8gbW9yZSB0aGFuIGhvdywgd2hlbiBnaXZlbiB3b29sLCB0byB0dXJuIG91dCBhIGNsb2FrLCBhbmQgaGFkIHNlZW4gb25seSBob3cgdGhlIHNwaW5uaW5nIGlzIGdpdmVuIG91dCB0byB0aGUgbWFpZHMsIGlzIG5vdCB0aGF0IGFzIG11Y2ggYXMgY291bGQgYmUgZXhwZWN0ZWQ/IEZvciBpbiBjb250cm9sIG9mIGhlciBhcHBldGl0ZSwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBzaGUgaGFkIGJlZW4gZXhjZWxsZW50bHkgdHJhaW5lZDsgYW5kIHRoaXMgc29ydCBvZiB0cmFpbmluZyBpcywgaW4gbXkgb3BpbmlvbiwgdGhlIG1vc3QgaW1wb3J0YW50IHRvIG1hbiBhbmQgd29tYW4gYWxpa2Uu4oCZCiAgICAgICAgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhCdXQgaW4gb3RoZXIgcmVzcGVjdHMgZGlkIHlvdSB0cmFpbiB5b3VyIHdpZmUgeW91cnNlbGYsIElzY2hvbWFjaHVzLCBzbyB0aGF0IHNoZSBzaG91bGQgYmUgY29tcGV0ZW50IHRvIHBlcmZvcm0gaGVyIGR1dGllcz/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYT2ggbm8sIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPjsgbm90IHVudGlsIEkgaGFkIGZpcnN0IG9mZmVyZWQgc2FjcmlmaWNlIGFuZCBwcmF5ZWQgdGhhdCBJIG1pZ2h0IHJlYWxseSB0ZWFjaCwgYW5kIHNoZSBsZWFybiB3aGF0IHdhcyBiZXN0IGZvciB1cyBib3RoLuKAmQo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['7.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhEaWQgbm90IHlvdXIgd2lmZSBqb2luIHdpdGggeW91IGluIHRoZXNlIHNhbWUgc2FjcmlmaWNlcyBhbmQgcHJheWVycz/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYT2ggeWVzLCBlYXJuZXN0bHkgcHJvbWlzaW5nIGJlZm9yZSBoZWF2ZW4gdG8gYmVoYXZlIGFzIHNoZSBvdWdodCB0byBkbzsgYW5kIGl0IHdhcyBlYXN5IHRvIHNlZSB0aGF0IHNoZSB3b3VsZCBub3QgbmVnbGVjdCB0aGUgbGVzc29ucyBJIHRhdWdodCBoZXIu4oCZCjwvdHJhbnNsYXRpb24+"
translation['7.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhQcmF5IHRlbGwgbWUsIElzY2hvbWFjaHVzLCB3aGF0IHdhcyB0aGUgZmlyc3QgbGVzc29uIHlvdSB0YXVnaHQgaGVyLCBzaW5jZSBJIHdvdWxkIHNvb25lciBoZWFyIHRoaXMgZnJvbSB5b3VyIGxpcHMgdGhhbiBhbiBhY2NvdW50IG9mIHRoZSBub2JsZXN0IGF0aGxldGljIGV2ZW50IG9yIGhvcnNlLXJhY2U/4oCZCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['7.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2VsbCwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBhcyBzb29uIGFzIEkgZm91bmQgaGVyIGRvY2lsZSBhbmQgc3VmZmljaWVudGx5IGRvbWVzdGljYXRlZCB0byBjYXJyeSBvbiBjb252ZXJzYXRpb24sIEkgcXVlc3Rpb25lZCBoZXIgdG8gdGhpcyBlZmZlY3Q6PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJzigJhUZWxsIG1lLCBkZWFyLCBoYXZlIHlvdSByZWFsaXNlZCBmb3Igd2hhdCByZWFzb24gSSB0b29rIHlvdSBhbmQgeW91ciBwYXJlbnRzIGdhdmUgeW91IHRvIG1lPwo8L3RyYW5zbGF0aW9uPg=="
translation['7.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgaXMgb2J2aW91cyB0byB5b3UsIEkgYW0gc3VyZSwgdGhhdCB3ZSBzaG91bGQgaGF2ZSBoYWQgbm8gZGlmZmljdWx0eSBpbiBmaW5kaW5nIHNvbWVvbmUgZWxzZSB0byBzaGFyZSBvdXIgYmVkcy4gQnV0IEkgZm9yIG15c2VsZiBhbmQgeW91ciBwYXJlbnRzIGZvciB5b3UgY29uc2lkZXJlZCB3aG8gd2FzIHRoZSBiZXN0IHBhcnRuZXIgb2YgaG9tZSBhbmQgY2hpbGRyZW4gdGhhdCB3ZSBjb3VsZCBnZXQuIE15IGNob2ljZSBmZWxsIG9uIHlvdSwgYW5kIHlvdXIgcGFyZW50cywgaXQgYXBwZWFycywgY2hvc2UgbWUgYXMgdGhlIGJlc3QgdGhleSBjb3VsZCBmaW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaWYgR29kIGdyYW50cyB1cyBjaGlsZHJlbiwgd2Ugd2lsbCB0aGVuIHRoaW5rIG91dCBob3cgd2Ugc2hhbGwgYmVzdCB0cmFpbiB0aGVtLiBGb3Igb25lIG9mIHRoZSBibGVzc2luZ3MgaW4gd2hpY2ggd2Ugc2hhbGwgc2hhcmUgaXMgdGhlIGFjcXVpc2l0aW9uIG9mIHRoZSB2ZXJ5IGJlc3Qgb2YgYWxsaWVzIGFuZCB0aGUgdmVyeSBiZXN0IG9mIHN1cHBvcnQgaW4gb2xkIGFnZTsgYnV0IGF0IHByZXNlbnQgd2Ugc2hhcmUgaW4gdGhpcyBvdXIgaG9tZS4KPC90cmFuc2xhdGlvbj4="
translation['7.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgSSBhbSBwYXlpbmcgaW50byB0aGUgY29tbW9uIHN0b2NrIGFsbCB0aGF0IEkgaGF2ZSwgYW5kIHlvdSBoYXZlIHB1dCBpbiBhbGwgdGhhdCB5b3UgYnJvdWdodCB3aXRoIHlvdS4gQW5kIHdlIGFyZSBub3QgdG8gcmVja29uIHVwIHdoaWNoIG9mIHVzIGhhcyBhY3R1YWxseSBjb250cmlidXRlZCB0aGUgZ3JlYXRlciBhbW91bnQsIGJ1dCB3ZSBzaG91bGQga25vdyBvZiBhIHN1cmV0eSB0aGF0IHRoZSBvbmUgd2hvIHByb3ZlcyB0aGUgYmV0dGVyIHBhcnRuZXIgbWFrZXMgdGhlIG1vcmUgdmFsdWFibGUgY29udHJpYnV0aW9uLuKAnQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['7.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYTXkgd2lmZSdzIGFuc3dlciB3YXMgYXMgZm9sbG93cywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+OiDigJxIb3cgY2FuIEkgcG9zc2libHkgaGVscCB5b3U/IFdoYXQgcG93ZXIgaGF2ZSBJPyBOYXksIGFsbCBkZXBlbmRzIG9uIHlvdS4gTXkgZHV0eSwgYXMgbXkgbW90aGVyIHRvbGQgbWUsIGlzIHRvIGJlIGRpc2NyZWV0LuKAnQo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['7.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYWWVzLCBvZiBjb3Vyc2UsIGRlYXIs4oCdIEkgc2FpZCwg4oCcbXkgZmF0aGVyIHNhaWQgdGhlIHNhbWUgdG8gbWUuIEJ1dCBkaXNjcmV0aW9uIGJvdGggaW4gYSBtYW4gYW5kIGEgd29tYW4sIG1lYW5zIGFjdGluZyBpbiBzdWNoIGEgbWFubmVyIHRoYXQgdGhlaXIgcG9zc2Vzc2lvbnMgc2hhbGwgYmUgaW4gdGhlIGJlc3QgY29uZGl0aW9uIHBvc3NpYmxlLCBhbmQgdGhhdCBhcyBtdWNoIGFzIHBvc3NpYmxlIHNoYWxsIGJlIGFkZGVkIHRvIHRoZW0gYnkgZmFpciBhbmQgaG9ub3VyYWJsZSBtZWFucy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYQW5kIHdoYXQgZG8geW91IHNlZSB0aGF0IEkgY2FuIHBvc3NpYmx5IGRvIHRvIGhlbHAgaW4gdGhlIGltcHJvdmVtZW50IG9mIG91ciBwcm9wZXJ0eT/igJ0gYXNrZWQgbXkgd2lmZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYV2h5LOKAnSBzYWlkIEksIOKAnG9mIGNvdXJzZSB5b3UgbXVzdCB0cnkgdG8gZG8gYXMgd2VsbCBhcyBwb3NzaWJsZSB3aGF0IHRoZSBnb2RzIG1hZGUgeW91IGNhcGFibGUgb2YgZG9pbmcgYW5kIHRoZSBsYXcgc2FuY3Rpb25zLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJzigJhBbmQgcHJheSwgd2hhdCBpcyB0aGF0P+KAnSBzYWlkIHNoZS4KPC90cmFuc2xhdGlvbj4="
translation['7.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYVGhpbmdzIG9mIG5vIHNtYWxsIG1vbWVudCwgSSBmYW5jeSzigJ0gcmVwbGllZCBJLCDigJx1bmxlc3MsIGluZGVlZCwgdGhlIHRhc2tzIG92ZXIgd2hpY2ggdGhlIHF1ZWVuIGJlZSBpbiB0aGUgaGl2ZSBwcmVzaWRlcyBhcmUgb2Ygc21hbGwgbW9tZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgc2VlbXMgdG8gbWUsIGRlYXIsIHRoYXQgdGhlIGdvZHMgd2l0aCBncmVhdCBkaXNjZXJubWVudCBoYXZlIGNvdXBsZWQgdG9nZXRoZXIgbWFsZSBhbmQgZmVtYWxlLCBhcyB0aGV5IGFyZSBjYWxsZWQsIGNoaWVmbHkgaW4gb3JkZXIgdGhhdCB0aGV5IG1heSBmb3JtIGEgcGVyZmVjdCBwYXJ0bmVyc2hpcCBpbiBtdXR1YWwgc2VydmljZS4KPC90cmFuc2xhdGlvbj4="
translation['7.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IsIGluIHRoZSBmaXJzdCBwbGFjZSwgdGhhdCB0aGUgdmFyaW91cyBzcGVjaWVzIG9mIGxpdmluZyBjcmVhdHVyZXMgbWF5IG5vdCBmYWlsLCB0aGV5IGFyZSBqb2luZWQgaW4gd2VkbG9jayBmb3IgdGhlIHByb2R1Y3Rpb24gb2YgY2hpbGRyZW4uIFNlY29uZGx5LCBvZmZzcHJpbmcgdG8gc3VwcG9ydCB0aGVtIGluIG9sZCBhZ2UgaXMgcHJvdmlkZWQgYnkgdGhpcyB1bmlvbiwgdG8gaHVtYW4gYmVpbmdzLCBhdCBhbnkgcmF0ZS4gVGhpcmRseSwgaHVtYW4gYmVpbmdzIGxpdmUgbm90IGluIHRoZSBvcGVuIGFpciwgbGlrZSBiZWFzdHMsIGJ1dCBvYnZpb3VzbHkgbmVlZCBzaGVsdGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5OZXZlcnRoZWxlc3MsIHRob3NlIHdobyBtZWFuIHRvIHdpbiBzdG9yZSB0byBmaWxsIHRoZSBjb3ZlcmVkIHBsYWNlLCBoYXZlIG5lZWQgb2Ygc29tZW9uZSB0byB3b3JrIGF0IHRoZSBvcGVuLWFpciBvY2N1cGF0aW9uczsgc2luY2UgcGxvdWdoaW5nLCBzb3dpbmcsIHBsYW50aW5nIGFuZCBncmF6aW5nIGFyZSBhbGwgc3VjaCBvcGVuLWFpciBlbXBsb3ltZW50czsgYW5kIHRoZXNlIHN1cHBseSB0aGUgbmVlZGZ1bCBmb29kLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGFnYWluLCBhcyBzb29uIGFzIHRoaXMgaXMgc3RvcmVkIGluIHRoZSBjb3ZlcmVkIHBsYWNlLCB0aGVuIHRoZXJlIGlzIG5lZWQgb2Ygc29tZW9uZSB0byBrZWVwIGl0IGFuZCB0byB3b3JrIGF0IHRoZSB0aGluZ3MgdGhhdCBtdXN0IGJlIGRvbmUgdW5kZXIgY292ZXIuIENvdmVyIGlzIG5lZWRlZCBmb3IgdGhlIG51cnNpbmcgb2YgdGhlIGluZmFudHM7IGNvdmVyIGlzIG5lZWRlZCBmb3IgdGhlIG1ha2luZyBvZiB0aGUgY29ybiBpbnRvIGJyZWFkLCBhbmQgbGlrZXdpc2UgZm9yIHRoZSBtYW51ZmFjdHVyZSBvZiBjbG90aGVzIGZyb20gdGhlIHdvb2wuCjwvdHJhbnNsYXRpb24+"
translation['7.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgc2luY2UgYm90aCB0aGUgaW5kb29yIGFuZCB0aGUgb3V0ZG9vciB0YXNrcyBkZW1hbmQgbGFib3VyIGFuZCBhdHRlbnRpb24sIEdvZCBmcm9tIHRoZSBmaXJzdCBhZGFwdGVkIHRoZSB3b21hbidzIG5hdHVyZSwgSSB0aGluaywgdG8gdGhlIGluZG9vciBhbmQgbWFuJ3MgdG8gdGhlIG91dGRvb3IgdGFza3MgYW5kIGNhcmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYRm9yIGhlIG1hZGUgdGhlIG1hbidzIGJvZHkgYW5kIG1pbmQgbW9yZSBjYXBhYmxlIG9mIGVuZHVyaW5nIGNvbGQgYW5kIGhlYXQsIGFuZCBqb3VybmV5cyBhbmQgY2FtcGFpZ25zOyBhbmQgdGhlcmVmb3JlIGltcG9zZWQgb24gaGltIHRoZSBvdXRkb29yIHRhc2tzLiBUbyB0aGUgd29tYW4sIHNpbmNlIGhlIGhhcyBtYWRlIGhlciBib2R5IGxlc3MgY2FwYWJsZSBvZiBzdWNoIGVuZHVyYW5jZSwgSSB0YWtlIGl0IHRoYXQgR29kIGhhcyBhc3NpZ25lZCB0aGUgaW5kb29yIHRhc2tzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQga25vd2luZyB0aGF0IGhlIGhhZCBjcmVhdGVkIGluIHRoZSB3b21hbiBhbmQgaGFkIGltcG9zZWQgb24gaGVyIHRoZSBub3VyaXNobWVudCBvZiB0aGUgaW5mYW50cywgaGUgbWV0ZWQgb3V0IHRvIGhlciBhIGxhcmdlciBwb3J0aW9uIG9mIGFmZmVjdGlvbiBmb3IgbmV3LWJvcm4gYmFiZXMgdGhhbiB0byB0aGUgbWFuLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgc2luY2UgaGUgaW1wb3NlZCBvbiB0aGUgd29tYW4gdGhlIHByb3RlY3Rpb24gb2YgdGhlIHN0b3JlcyBhbHNvLCBrbm93aW5nIHRoYXQgZm9yIHByb3RlY3Rpb24gYSBmZWFyZnVsIGRpc3Bvc2l0aW9uIGlzIG5vIGRpc2FkdmFudGFnZSwgR29kIG1ldGVkIG91dCBhIGxhcmdlciBzaGFyZSBvZiBmZWFyIHRvIHRoZSB3b21hbiB0aGFuIHRvIHRoZSBtYW47IGFuZCBrbm93aW5nIHRoYXQgaGUgd2hvIGRlYWxzIHdpdGggdGhlIG91dGRvb3IgdGFza3Mgd2lsbCBoYXZlIHRvIGJlIHRoZWlyIGRlZmVuZGVyIGFnYWluc3QgYW55IHdyb25nLWRvZXIsIGhlIG1ldGVkIG91dCB0byBoaW0gYWdhaW4gYSBsYXJnZXIgc2hhcmUgb2YgY291cmFnZS4KPC90cmFuc2xhdGlvbj4="
translation['7.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgYmVjYXVzZSBib3RoIG11c3QgZ2l2ZSBhbmQgdGFrZSwgaGUgZ3JhbnRlZCB0byBib3RoIGltcGFydGlhbGx5IG1lbW9yeSBhbmQgYXR0ZW50aW9uOyBhbmQgc28geW91IGNvdWxkIG5vdCBkaXN0aW5ndWlzaCB3aGV0aGVyIHRoZSBtYWxlIG9yIHRoZSBmZW1hbGUgc2V4IGhhcyB0aGUgbGFyZ2VyIHNoYXJlIG9mIHRoZXNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgR29kIGFsc28gZ2F2ZSB0byBib3RoIGltcGFydGlhbGx5IHRoZSBwb3dlciB0byBwcmFjdGlzZSBkdWUgc2VsZi1jb250cm9sLCBhbmQgZ2F2ZSBhdXRob3JpdHkgdG8gd2hpY2hldmVyIGlzIHRoZSBiZXR0ZXLigJR3aGV0aGVyIGl0IGJlIHRoZSBtYW4gb3IgdGhlIHdvbWFu4oCUdG8gd2luIGEgbGFyZ2VyIHBvcnRpb24gb2YgdGhlIGdvb2QgdGhhdCBjb21lcyBmcm9tIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQganVzdCBiZWNhdXNlIGJvdGggaGF2ZSBub3QgdGhlIHNhbWUgYXB0aXR1ZGVzLCB0aGV5IGhhdmUgdGhlIG1vcmUgbmVlZCBvZiBlYWNoIG90aGVyLCBhbmQgZWFjaCBtZW1iZXIgb2YgdGhlIHBhaXIgaXMgdGhlIG1vcmUgdXNlZnVsIHRvIHRoZSBvdGhlciwgdGhlIG9uZSBiZWluZyBjb21wZXRlbnQgd2hlcmUgdGhlIG90aGVyIGlzIGRlZmljaWVudC4KPC90cmFuc2xhdGlvbj4="
translation['7.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYTm93IHNpbmNlIHdlIGtub3csIGRlYXIsIHdoYXQgZHV0aWVzIGhhdmUgYmVlbiBhc3NpZ25lZCB0byBlYWNoIG9mIHVzIGJ5IEdvZCwgd2UgbXVzdCBlbmRlYXZvdXIsIGVhY2ggb2YgdXMsIHRvIGRvIHRoZSBkdXRpZXMgYWxsb3R0ZWQgdG8gdXMgYXMgd2VsbCBhcyBwb3NzaWJsZS4KPC90cmFuc2xhdGlvbj4="
translation['7.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbGF3LCBtb3Jlb3ZlciwgYXBwcm92ZXMgb2YgdGhlbSwgZm9yIGl0IGpvaW5zIHRvZ2V0aGVyIG1hbiBhbmQgd29tYW4uIEFuZCBhcyBHb2QgaGFzIG1hZGUgdGhlbSBwYXJ0bmVycyBpbiB0aGVpciBjaGlsZHJlbiwgc28gdGhlIGxhdyBhcHBvaW50cyB0aGVtIHBhcnRuZXJzIGluIHRoZSBob21lLiBBbmQgYmVzaWRlcywgdGhlIGxhdyBkZWNsYXJlcyB0aG9zZSB0YXNrcyB0byBiZSBob25vdXJhYmxlIGZvciBlYWNoIG9mIHRoZW0gd2hlcmVpbiBHb2QgaGFzIG1hZGUgdGhlIG9uZSB0byBleGNlbCB0aGUgb3RoZXIuIFRodXMsIHRvIGJlIHdvbWFuIGl0IGlzIG1vcmUgaG9ub3VyYWJsZSB0byBzdGF5IGluZG9vcnMgdGhhbiB0byBhYmlkZSBpbiB0aGUgZmllbGRzLCBidXQgdG8gdGhlIG1hbiBpdCBpcyB1bnNlZW1seSByYXRoZXIgdG8gc3RheSBpbmRvb3JzIHRoYW4gdG8gYXR0ZW5kIHRvIHRoZSB3b3JrIG91dHNpZGUuCjwvdHJhbnNsYXRpb24+"
translation['7.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5JZiBhIG1hbiBhY3RzIGNvbnRyYXJ5IHRvIHRoZSBuYXR1cmUgR29kIGhhcyBnaXZlbiBoaW0sIHBvc3NpYmx5IGhpcyBkZWZpYW5jZSBpcyBkZXRlY3RlZCBieSB0aGUgZ29kcyBhbmQgaGUgaXMgcHVuaXNoZWQgZm9yIG5lZ2xlY3RpbmcgaGlzIG93biB3b3JrLCBvciBtZWRkbGluZyB3aXRoIGhpcyB3aWZlJ3MuCjwvdHJhbnNsYXRpb24+"
translation['7.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rIHRoYXQgdGhlIHF1ZWVuIGJlZSBpcyBidXN5IGFib3V0IGp1c3Qgc3VjaCBvdGhlciB0YXNrcyBhcHBvaW50ZWQgYnkgR29kLuKAnTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJvcC48L3RpdGxlPnYuIGkuIDI0Ljwvbm90ZT48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJvcC48L3RpdGxlPnYuIGkuIDI0LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJzigJhBbmQgcHJheSzigJ0gc2FpZCBzaGUsIOKAnGhvdyBkbyB0aGUgcXVlZW4gYmVlJ3MgdGFza3MgcmVzZW1ibGUgdGhvc2UgdGhhdCBJIGhhdmUgdG8gZG8/4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYSG93PyBzaGUgc3RheXMgaW4gdGhlIGhpdmUs4oCdIEkgYW5zd2VyZWQsIOKAnGFuZCBkb2VzIG5vdCBzdWZmZXIgdGhlIGJlZXMgdG8gYmUgaWRsZTsgYnV0IHRob3NlIHdob3NlIGR1dHkgaXQgaXMgdG8gd29yayBvdXRzaWRlIHNoZSBzZW5kcyBmb3J0aCB0byB0aGVpciB3b3JrOyBhbmQgd2hhdGV2ZXIgZWFjaCBvZiB0aGVtIGJyaW5ncyBpbiwgc2hlIGtub3dzIGFuZCByZWNlaXZlcyBpdCwgYW5kIGtlZXBzIGl0IHRpbGwgaXQgaXMgd2FudGVkLiBBbmQgd2hlbiB0aGUgdGltZSBpcyBjb21lIHRvIHVzZSBpdCwgc2hlIHBvcnRpb25zIG91dCB0aGUganVzdCBzaGFyZSB0byBlYWNoLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5TaGUgbGlrZXdpc2UgcHJlc2lkZXMgb3ZlciB0aGUgd2VhdmluZyBvZiB0aGUgY29tYnMgaW4gdGhlIGhpdmUsIHRoYXQgdGhleSBtYXkgYmUgd2VsbCBhbmQgcXVpY2tseSB3b3ZlbiwgYW5kIGNhcmVzIGZvciB0aGUgYnJvb2Qgb2YgbGl0dGxlIG9uZXMsIHRoYXQgaXQgYmUgZHVseSByZWFyZWQgdXAuIEFuZCB3aGVuIHRoZSB5b3VuZyBiZWVzIGhhdmUgYmVlbiBkdWx5IHJlYXJlZCBhbmQgYXJlIGZpdCBmb3Igd29yaywgc2hlIHNlbmRzIHRoZW0gZm9ydGggdG8gZm91bmQgYSBjb2xvbnksIHdpdGggYSBsZWFkZXIgdG8gZ3VpZGUgdGhlIHlvdW5nIGFkdmVudHVyZXJzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYVGhlbiBzaGFsbCBJIHRvbyBoYXZlIHRvIGRvIHRoZXNlIHRoaW5ncz/igJ0gc2FpZCBteSB3aWZlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJzigJhJbmRlZWQgeW91IHdpbGws4oCdIHNhaWQgSTsg4oCceW91ciBkdXR5IHdpbGwgYmUgdG8gcmVtYWluIGluZG9vcnMgYW5kIHNlbmQgb3V0IHRob3NlIHNlcnZhbnRzIHdob3NlIHdvcmsgaXMgb3V0c2lkZSwgYW5kIHN1cGVyaW50ZW5kIHRob3NlIHdobyBhcmUgdG8gd29yayBpbmRvb3JzLCBhbmQgdG8gcmVjZWl2ZSB0aGUgaW5jb21pbmdzLAo8L3RyYW5zbGF0aW9uPg=="
translation['7.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgZGlzdHJpYnV0ZSBzbyBtdWNoIG9mIHRoZW0gYXMgbXVzdCBiZSBzcGVudCwgYW5kIHdhdGNoIG92ZXIgc28gbXVjaCBhcyBpcyB0byBiZSBrZXB0IGluIHN0b3JlLCBhbmQgdGFrZSBjYXJlIHRoYXQgdGhlIHN1bSBsYWlkIGJ5IGZvciBhIHllYXIgYmUgbm90IHNwZW50IGluIGEgbW9udGguIEFuZCB3aGVuIHdvb2wgaXMgYnJvdWdodCB0byB5b3UsIHlvdSBtdXN0IHNlZSB0aGF0IGNsb2FrcyBhcmUgbWFkZSBmb3IgdGhvc2UgdGhhdCB3YW50IHRoZW0uIFlvdSBtdXN0IHNlZSB0b28gdGhhdCB0aGUgZHJ5IGNvcm4gaXMgaW4gZ29vZCBjb25kaXRpb24gZm9yIG1ha2luZyBmb29kLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5PbmUgb2YgdGhlIGR1dGllcyB0aGF0IGZhbGwgdG8geW91LCBob3dldmVyLCB3aWxsIHBlcmhhcHMgc2VlbSByYXRoZXIgdGhhbmtsZXNzOiB5b3Ugd2lsbCBoYXZlIHRvIHNlZSB0aGF0IGFueSBzZXJ2YW50IHdobyBpcyBpbGwgaXMgY2FyZWQgZm9yLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJzigJhPaCBubyzigJ0gY3JpZWQgbXkgd2lmZSwg4oCcaXQgd2lsbCBiZSBkZWxpZ2h0ZnVsLCBhc3N1bWluZyB0aGF0IHRob3NlIHdobyBhcmUgd2VsbCBjYXJlZCBmb3IgYXJlIGdvaW5nIHRvIGZlZWwgZ3JhdGVmdWwgYW5kIGJlIG1vcmUgbG95YWwgdGhhbiBiZWZvcmUu4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYV2h5LCBteSBkZWFyLOKAnSBjcmllZCBJLCBkZWxpZ2h0ZWQgd2l0aCBoZXIgYW5zd2VyLCDigJx3aGF0IG1ha2VzIHRoZSBiZWVzIHNvIGRldm90ZWQgdG8gdGhlaXIgbGVhZGVyIGluIHRoZSBoaXZlLCB0aGF0IHdoZW4gc2hlIGZvcnNha2VzIGl0LCB0aGV5IGFsbCBmb2xsb3cgaGVyLCBhbmQgbm90IG9uZSB0aGlua3Mgb2Ygc3RheWluZyBiZWhpbmQ/IElzIGl0IG5vdCB0aGUgcmVzdWx0IG9mIHNvbWUgc3VjaCB0aG91Z2h0ZnVsIGFjdHMgb24gaGVyIHBhcnQ/4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYSXQgd291bGQgc3VycHJpc2UgbWUs4oCdIGFuc3dlcmVkIG15IHdpZmUsIOKAnGlmIHRoZSBsZWFkZXIncyBhY3Rpdml0aWVzIGRpZCBub3QgY29uY2VybiB5b3UgbW9yZSB0aGFuIG1lLiBGb3IgbXkgY2FyZSBvZiB0aGUgZ29vZHMgaW5kb29ycyBhbmQgbXkgbWFuYWdlbWVudCB3b3VsZCBsb29rIHJhdGhlciByaWRpY3Vsb3VzLCBJIGZhbmN5LCBpZiB5b3UgZGlkIG5vdCBzZWUgdGhhdCBzb21ldGhpbmcgaXMgZ2F0aGVyZWQgaW4gZnJvbSBvdXRzaWRlLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYQW5kIG15IGluZ2F0aGVyaW5nIHdvdWxkIGxvb2sgcmlkaWN1bG91cyzigJ0gSSBjb3VudGVyZWQsIOKAnGlmIHRoZXJlIHdlcmUgbm90IHNvbWVvbmUgdG8ga2VlcCB3aGF0IGlzIGdhdGhlcmVkIGluLiBEb24ndCB5b3Ugc2VlIGhvdyB0aGV5IHdobyDigJhkcmF3IHdhdGVyIGluIGEgbGVha3kgamFyLOKAmSBhcyB0aGUgc2F5aW5nIGdvZXMsIGFyZSBwaXRpZWQsIGJlY2F1c2UgdGhleSBzZWVtIHRvIGxhYm91ciBpbiB2YWluP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJzigJhPZiBjb3Vyc2Us4oCdIHNoZSBzYWlkLCDigJxmb3IgdGhleSBhcmUgaW5kZWVkIGluIGEgbWlzZXJhYmxlIHBsaWdodCBpZiB0aGV5IGRvIHRoYXQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYQnV0IEkgYXNzdXJlIHlvdSwgZGVhciwgdGhlcmUgYXJlIG90aGVyIGR1dGllcyBwZWN1bGlhciB0byB5b3UgdGhhdCBhcmUgcGxlYXNhbnQgdG8gcGVyZm9ybS4gSXQgaXMgZGVsaWdodGZ1bCB0byB0ZWFjaCBzcGlubmluZyB0byBhIG1haWQgd2hvIGhhZCBubyBrbm93bGVkZ2Ugb2YgaXQgd2hlbiB5b3UgcmVjZWl2ZWQgaGVyLCBhbmQgdG8gZG91YmxlIGhlciB3b3J0aCB0byB5b3U6IHRvIHRha2UgaW4gaGFuZCBhIGdpcmwgd2hvIGlzIGlnbm9yYW50IG9mIGhvdXNla2VlcGluZyBhbmQgc2VydmljZSwgYW5kIGFmdGVyIHRlYWNoaW5nIGhlciBhbmQgbWFraW5nIGhlciB0cnVzdHdvcnRoeSBhbmQgc2VydmljZWFibGUgdG8gZmluZCBoZXIgd29ydGggYW55IGFtb3VudDogdG8gaGF2ZSB0aGUgcG93ZXIgb2YgcmV3YXJkaW5nIHRoZSBkaXNjcmVldCBhbmQgdXNlZnVsIG1lbWJlcnMgb2YgeW91ciBob3VzZWhvbGQsIGFuZCBvZiBwdW5pc2hpbmcgYW55b25lIHdobyB0dXJucyBvdXQgdG8gYmUgYSByb2d1ZS4KPC90cmFuc2xhdGlvbj4="
translation['7.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIHBsZWFzYW50ZXN0IGV4cGVyaWVuY2Ugb2YgYWxsIGlzIHRvIHByb3ZlIHlvdXJzZWxmIGJldHRlciB0aGFuIEkgYW0sIHRvIG1ha2UgbWUgeW91ciBzZXJ2YW50OyBhbmQsIHNvIGZhciBmcm9tIGhhdmluZyBjYXVzZSB0byBmZWFyIHRoYXQgYXMgeW91IGdyb3cgb2xkZXIgeW91IG1heSBiZSBsZXNzIGhvbm91cmVkIGluIHRoZSBob3VzZWhvbGQsIHRvIGZlZWwgY29uZmlkZW50IHRoYXQgd2l0aCBhZHZhbmNpbmcgeWVhcnMsIHRoZSBiZXR0ZXIgcGFydG5lciB5b3UgcHJvdmUgdG8gbWUgYW5kIHRoZSBiZXR0ZXIgaG91c2V3aWZlIHRvIG91ciBjaGlsZHJlbiwgdGhlIGdyZWF0ZXIgd2lsbCBiZSB0aGUgaG9ub3VyIHBhaWQgdG8geW91IGluIG91ciBob21lLgogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['7.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgaXMgbm90IHRocm91Z2ggb3V0d2FyZCBjb21lbGluZXNzIHRoYXQgdGhlIHN1bSBvZiB0aGluZ3MgZ29vZCBhbmQgYmVhdXRpZnVsIGlzIGluY3JlYXNlZCBpbiB0aGUgd29ybGQsIGJ1dCBieSB0aGUgZGFpbHkgcHJhY3RpY2Ugb2YgdGhlIHZpcnR1ZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFN1Y2ggd2FzIHRoZSB0ZW5vciBvZiBteSBlYXJsaWVzdCB0YWxrcyB3aXRoIGhlciwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBzbyBmYXIgYXMgSSBjYW4gcmVjYWxsIHRoZW0u4oCZ4oCdCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBbmQgZGlkIHlvdSBmaW5kLCBJc2Nob21hY2h1cywgdGhhdCB0aGV5IGFjdGVkIGFzIGEgc3RpbXVsdXMgdG8gaGVyIGRpbGlnZW5jZT/igJkgSSBhc2tlZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWWVzLCBpbmRlZWQs4oCZIGFuc3dlcmVkIElzY2hvbWFjaHVzLCDigJhhbmQgSSByZWNvbGxlY3QgdGhhdCBzaGUgd2FzIHZleGVkIGFuZCBibHVzaGVkIGNyaW1zb24sIGJlY2F1c2Ugc2hlIGNvdWxkIG5vdCBnaXZlIG1lIHNvbWV0aGluZyBmcm9tIHRoZSBzdG9yZXMgd2hlbiBJIGFza2VkIGZvciBpdC4KPC90cmFuc2xhdGlvbj4="
translation['8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBzZWVpbmcgdGhhdCBzaGUgd2FzIGFubm95ZWQsIEkgc2FpZDog4oCcRG9uJ3Qgd29ycnksIGRlYXIsIGJlY2F1c2UgeW91IGNhbm5vdCBnaXZlIG1lIHdoYXQgSSBhbSBhc2tpbmcgZm9yLiBGb3Igbm90IHRvIGJlIGFibGUgdG8gdXNlIGEgdGhpbmcgd2hlbiB5b3Ugd2FudCBpdCBpcyBwb3ZlcnR5IHVucXVlc3Rpb25hYmx5OyBidXQgYSBmYWlsdXJlIHRvIGdldCB0aGUgdGhpbmcgdGhhdCB5b3Ugc2VlayBpcyBsZXNzIGdyaWV2b3VzIHRoYW4gbm90IHRvIHNlZWsgaXQgYXQgYWxsIGJlY2F1c2UgeW91IGtub3cgdGhhdCBpdCBkb2VzIG5vdCBleGlzdC4gVGhlIGZhY3QgaXMsIHlvdSBhcmUgbm90IHRvIGJsYW1lIGZvciB0aGlzLCBidXQgSSwgYmVjYXVzZSBJIGhhbmRlZCBvdmVyIHRoZSB0aGluZ3MgdG8geW91IHdpdGhvdXQgZ2l2aW5nIGRpcmVjdGlvbnMgd2hlcmUgdGhleSB3ZXJlIHRvIGJlIHB1dCwgc28gdGhhdCB5b3UgbWlnaHQga25vdyB3aGVyZSB0byBwdXQgdGhlbSBhbmQgd2hlcmUgdG8gZmluZCB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk15IGRlYXIsIHRoZXJlIGlzIG5vdGhpbmcgc28gY29udmVuaWVudCBvciBzbyBnb29kIGZvciBodW1hbiBiZWluZ3MgYXMgb3JkZXIuIFRodXMsIGEgY2hvcnVzIGlzIGEgY29tYmluYXRpb24gb2YgaHVtYW4gYmVpbmdzOyBidXQgd2hlbiB0aGUgbWVtYmVycyBvZiBpdCBkbyBhcyB0aGV5IGNob29zZSwgaXQgYmVjb21lcyBtZXJlIGNvbmZ1c2lvbiwgYW5kIHRoZXJlIGlzIG5vIHBsZWFzdXJlIGluIHdhdGNoaW5nIGl0OyBidXQgd2hlbiB0aGV5IGFjdCBhbmQgY2hhbnQgaW4gYW4gb3JkZXJseSBmYXNoaW9uLCB0aGVuIHRob3NlIHNhbWUgbWVuIGF0IG9uY2Ugc2VlbSB3b3J0aCBzZWVpbmcgYW5kIHdvcnRoIGhlYXJpbmcuCjwvdHJhbnNsYXRpb24+"
translation['8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCBteSBkZWFyLCBhbiBhcm15IGluIGRpc29yZGVyIGlzIGEgY29uZnVzZWQgbWFzcywgYW4gZWFzeSBwcmV5IHRvIGVuZW1pZXMsIGEgZGlzZ3VzdGluZyBzaWdodCB0byBmcmllbmRzIGFuZCB1dHRlcmx5IHVzZWxlc3MsIOKAlGRvbmtleSwgdHJvb3BlciwgY2FycmllciwgbGlnaHQtYXJtZWQsIGhvcnNlbWFuLCBjaGFyaW90LCBodWRkbGVkIHRvZ2V0aGVyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJvcG9lZGlhLDwvdGl0bGU+IFZJLiBpaWkuIDI1OyA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5NZW0uPC90aXRsZT4gSUlJLiBpLiA3Ljwvbm90ZT4gRm9yIGhvdyBhcmUgdGhleSB0byBtYXJjaCBpbiBzdWNoIGEgcGxpZ2h0LCB3aGVuIHRoZXkgaGFtcGVyIG9uZSBhbm90aGVyLCBzb21lIHdhbGtpbmcgd2hpbGUgb3RoZXJzIHJ1biwgc29tZSBydW5uaW5nIHdoaWxlIG90aGVycyBoYWx0LCBjaGFyaW90IGNvbGxpZGluZyB3aXRoIGhvcnNlbWFuLCBkb25rZXkgd2l0aCBjaGFyaW90LCBjYXJyaWVyIHdpdGggdHJvb3Blcj8KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lyb3BvZWRpYSw8L3RpdGxlPiBWSS4gaWlpLiAyNTsgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TWVtLjwvdGl0bGU+IElJSS4gaS4gNy48L3RyYW5zbGF0aW9uPg=="
translation['8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPklmIHRoZXJlIGlzIGZpZ2h0aW5nIHRvIGJlIGRvbmUsIGhvdyBjYW4gdGhleSBmaWdodCBpbiBzdWNoIGEgc3RhdGU/IEZvciB0aGUgdW5pdHMgdGhhdCBtdXN0IG5lZWRzIHJ1biBhd2F5IHdoZW4gYXR0YWNrZWQgYXJlIGVub3VnaCB0byB0cmFtcGxlIHVuZGVyZm9vdCB0aGUgaGVhdnkgaW5mYW50cnkuCjwvdHJhbnNsYXRpb24+"
translation['8.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBhbiBhcm15IGluIG9yZGVybHkgYXJyYXkgaXMgYSBub2JsZSBzaWdodCB0byBmcmllbmRzLCBhbmQgYW4gdW53ZWxjb21lIHNwZWN0YWNsZSB0byB0aGUgZW5lbXkuIFdoYXQgZnJpZW5kIHdvdWxkIG5vdCByZWpvaWNlIGFzIGhlIHdhdGNoZXMgYSBzdHJvbmcgYm9keSBvZiB0cm9vcGVycyBtYXJjaGluZyBpbiBvcmRlciwgd291bGQgbm90IGFkbWlyZSBjYXZhbHJ5IHJpZGluZyBpbiBzcXVhZHJvbnM/IEFuZCB3aGF0IGVuZW15IHdvdWxkIG5vdCBmZWFyIHRyb29wZXJzLCBob3JzZW1lbiwgbGlnaHQtYXJtZWQsIGFyY2hlcnMsIHNsaW5nZXJzIGRpc3Bvc2VkIGluIHNlcnJpZWQgcmFua3MgYW5kIGZvbGxvd2luZyB0aGVpciBvZmZpY2VycyBpbiBvcmRlcmx5IGZhc2hpb24/CjwvdHJhbnNsYXRpb24+"
translation['8.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk5heSwgZXZlbiBvbiB0aGUgbWFyY2ggd2hlcmUgb3JkZXIgaXMga2VwdCwgdGhvdWdoIHRoZXkgbnVtYmVyIHRlbnMgb2YgdGhvdXNhbmRzLCBhbGwgbW92ZSBzdGVhZGlseSBmb3J3YXJkIGFzIG9uZSBtYW47IGZvciB0aGUgbGluZSBiZWhpbmQgaXMgY29udGludWFsbHkgZmlsbGluZyB1cCB0aGUgZ2FwLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk9yLCBhZ2Fpbiwgd2h5IGlzIGEgbWFuLW9mLXdhciBsYWRlbiB3aXRoIG1lbiB0ZXJyaWJsZSB0byBhbiBlbmVteSBhbmQgYSBnb29kbHkgc2lnaHQgdG8gZnJpZW5kcywgaWYgbm90IGZvciBpdHMgc3BlZWQ/IFdoeSBkbyB0aGUgbWVuIG9uIGJvYXJkIG5vdCBoYW1wZXIgb25lIGFub3RoZXI/IElzIGl0IG5vdCBqdXN0IGJlY2F1c2UgdGhleSBhcmUgc2VhdGVkIGluIG9yZGVyLCBzd2luZyBmb3J3YXJkIGFuZCBiYWNrd2FyZCBpbiBvcmRlciwgZW1iYXJrIGFuZCBkaXNlbWJhcmsgaW4gb3JkZXI/CjwvdHJhbnNsYXRpb24+"
translation['8.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPklmIEkgd2FudCBhIHR5cGUgb2YgZGlzb3JkZXIsIEkgdGhpbmsgb2YgYSBmYXJtZXIgd2hvIGhhcyBzdG9yZWQgYmFybGV5LCB3aGVhdCBhbmQgcHVsc2UgaW4gb25lIGJpbjsgYW5kIHRoZW4gd2hlbiBoZSB3YW50cyBhIGJhbm5vY2sgb3IgYSBsb2FmIG9yIGEgcHVkZGluZywgbXVzdCBwaWNrIG91dCB0aGUgZ3JhaW4gaW5zdGVhZCBvZiBmaW5kaW5nIGl0IHNlcGFyYXRlIGFuZCByZWFkeSBmb3IgdXNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['8.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYQW5kIHNvLCBteSBkZWFyLCBpZiB5b3UgZG8gbm90IHdhbnQgdGhpcyBjb25mdXNpb24sIGFuZCB3aXNoIHRvIGtub3cgZXhhY3RseSBob3cgdG8gbWFuYWdlIG91ciBnb29kcywgYW5kIHRvIGZpbmQgd2l0aCBlYXNlIHdoYXRldmVyIGlzIHdhbnRlZCwgYW5kIHRvIHNhdGlzZnkgbWUgYnkgZ2l2aW5nIG1lIGFueXRoaW5nIEkgYXNrIGZvciwgbGV0IHVzIGNob29zZSB0aGUgcGxhY2UgdGhhdCBlYWNoIHBvcnRpb24gc2hvdWxkIG9jY3VweTsgYW5kLCBoYXZpbmcgcHV0IHRoZSB0aGluZ3MgaW4gdGhlaXIgcGxhY2UsIGxldCB1cyBpbnN0cnVjdCB0aGUgbWFpZCB0byB0YWtlIHRoZW0gZnJvbSBpdCBhbmQgcHV0IHRoZW0gYmFjayBhZ2Fpbi4gVGh1cyB3ZSBzaGFsbCBrbm93IHdoYXQgaXMgc2FmZSBhbmQgc291bmQgYW5kIHdoYXQgaXMgbm90OyBmb3IgdGhlIHBsYWNlIGl0c2VsZiB3aWxsIG1pc3Mgd2hhdGV2ZXIgaXMgbm90IGluIGl0LCBhbmQgYSBnbGFuY2Ugd2lsbCByZXZlYWwgYW55dGhpbmcgdGhhdCB3YW50cyBhdHRlbnRpb24sIGFuZCB0aGUga25vd2xlZGdlIHdoZXJlIGVhY2ggdGhpbmcgaXMgd2lsbCBxdWlja2x5IGJyaW5nIGl0IHRvIGhhbmQsIHNvIHRoYXQgd2UgY2FuIHVzZSBpdCB3aXRob3V0IHRyb3VibGUu4oCdCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['8.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYT25jZSBJIGhhZCBhbiBvcHBvcnR1bml0eSBvZiBsb29raW5nIG92ZXIgdGhlIGdyZWF0IFBob2VuaWNpYW4gbWVyY2hhbnRtYW4sIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgYW5kIEkgdGhvdWdodCBJIGhhZCBuZXZlciBzZWVuIHRhY2tsZSBzbyBleGNlbGxlbnRseSBhbmQgYWNjdXJhdGVseSBhcnJhbmdlZC4gRm9yIEkgbmV2ZXIgc2F3IHNvIG1hbnkgYml0cyBvZiBzdHVmZiBwYWNrZWQgYXdheSBzZXBhcmF0ZWx5IGluIHNvIHNtYWxsIGEgcmVjZXB0YWNsZS4KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['8.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BcyB5b3Uga25vdywgYSBzaGlwIG5lZWRzIGEgZ3JlYXQgcXVhbnRpdHkgb2Ygd29vZGVuIGFuZCBjb3JkZWQgaW1wbGVtZW50cyB3aGVuIHNoZSBjb21lcyBpbnRvIHBvcnQgb3IgcHV0cyB0byBzZWEsIG11Y2ggcmlnZ2luZywgYXMgaXQgaXMgY2FsbGVkLCB3aGVuIHNoZSBzYWlscywgbWFueSBjb250cml2YW5jZXMgdG8gcHJvdGVjdCBoZXIgYWdhaW5zdCBlbmVteSB2ZXNzZWxzOyBzaGUgY2FycmllcyBhIGxhcmdlIHN1cHBseSBvZiBhcm1zIGZvciB0aGUgbWVuLCBhbmQgY29udGFpbnMgYSBzZXQgb2YgaG91c2Vob2xkIHV0ZW5zaWxzIGZvciBlYWNoIG1lc3MuIEluIGFkZGl0aW9uIHRvIGFsbCB0aGlzLCBzaGUgaXMgbGFkZW4gd2l0aCBjYXJnbyB3aGljaCB0aGUgc2tpcHBlciBjYXJyaWVzIGZvciBwcm9maXQuCjwvdHJhbnNsYXRpb24+"
translation['8.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYWxsIHRoZSB0aGluZ3MgSSBtZW50aW9uIHdlcmUgY29udGFpbmVkIGluIGEgY2hhbWJlciBvZiBsaXR0bGUgbW9yZSB0aGFuIGEgaHVuZHJlZCBzcXVhcmUgY3ViaXRzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtM61zrrhvbHOus67zrnOvc6/z4I8L2ZvcmVpZ24+IGlzIGxpdGVyYWxseSDigJxoYXZpbmcgc3BhY2UgZm9yIHRlbiBjb3VjaGVz4oCdOyBidXQgaXQgc2VlbXMgdGhhdCBzdWNoIGNvbXBvdW5kcyBvZiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous674b23zr3OtzwvZm9yZWlnbj4gKOKAnGEgY291Y2jigJ0pIHdlcmUgdXNlZCB0byBkZW5vdGUgYSBkZWZpbml0ZSBtZWFzdXJlIG9mIHNpemUuPC9ub3RlPiBBbmQgSSBub3RpY2VkIHRoYXQgZWFjaCBraW5kIG9mIHRoaW5nIHdhcyBzbyBuZWF0bHkgc3Rvd2VkIGF3YXkgdGhhdCB0aGVyZSB3YXMgbm8gY29uZnVzaW9uLCBubyB3b3JrIGZvciBhIHNlYXJjaGVyLCBub3RoaW5nIG91dCBvZiBwbGFjZSwgbm8gdHJvdWJsZXNvbWUgdW50eWluZyB0byBjYXVzZSBkZWxheSB3aGVuIGFueXRoaW5nIHdhcyB3YW50ZWQgZm9yIGltbWVkaWF0ZSB1c2UuCiAgICAgICAgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTOtc664b2xzrrOu865zr3Ov8+CPC9mb3JlaWduPiBpcyBsaXRlcmFsbHkg4oCcaGF2aW5nIHNwYWNlIGZvciB0ZW4gY291Y2hlc+KAnTsgYnV0IGl0IHNlZW1zIHRoYXQgc3VjaCBjb21wb3VuZHMgb2YgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOu+G9t869zrc8L2ZvcmVpZ24+ICjigJxhIGNvdWNo4oCdKSB3ZXJlIHVzZWQgdG8gZGVub3RlIGEgZGVmaW5pdGUgbWVhc3VyZSBvZiBzaXplLjwvdHJhbnNsYXRpb24+"
translation['8.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5JIGZvdW5kIHRoYXQgdGhlIHN0ZWVyc21hbidzIHNlcnZhbnQsIHdobyBpcyBjYWxsZWQgdGhlIG1hdGUsIGtub3dzIGVhY2ggcGFydGljdWxhciBzZWN0aW9uIHNvIGV4YWN0bHksIHRoYXQgaGUgY2FuIHRlbGwgZXZlbiB3aGVuIGF3YXkgd2hlcmUgZXZlcnl0aGluZyBpcyBrZXB0IGFuZCBob3cgbXVjaCB0aGVyZSBpcyBvZiBpdCwganVzdCBhcyB3ZWxsIGFzIGEgbWFuIHdobyBrbm93cyBob3cgdG8gc3BlbGwgY2FuIHRlbGwgaG93IG1hbnkgbGV0dGVycyB0aGVyZSBhcmUgaW4gPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+IGFuZCBpbiB3aGF0IG9yZGVyIHRoZXkgY29tZS4KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['8.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgSSBzYXcgdGhpcyBtYW4gaW4gaGlzIHNwYXJlIHRpbWUgaW5zcGVjdGluZyBhbGwgdGhlIHN0b3JlcyB0aGF0IGFyZSB3YW50ZWQsIGFzIGEgbWF0dGVyIG9mIGNvdXJzZSwgaW4gdGhlIHNoaXAuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk9yLCBtb3JlIHByb2JhYmx5LCDigJxkdXJpbmcgdGhlIHZveWFnZS7igJ08L25vdGU+IEkgd2FzIHN1cnByaXNlZCB0byBzZWUgaGltIGxvb2tpbmcgb3ZlciB0aGVtLCBhbmQgYXNrZWQgd2hhdCBoZSB3YXMgZG9pbmcuIOKAnFNpcizigJ0gaGUgYW5zd2VyZWQsIOKAnEkgYW0gbG9va2luZyB0byBzZWUgaG93IHRoZSBzaGlwJ3MgdGFja2xlIGlzIHN0b3JlZCwgaW4gY2FzZSBvZiBhY2NpZGVudCwgb3Igd2hldGhlciBhbnl0aGluZyBpcyBtaXNzaW5nIG9yIG1peGVkIHVwIHdpdGggb3RoZXIgc3R1ZmYuCjwvdHJhbnNsYXRpb24+"
translation['8.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igd2hlbiBHb2Qgc2VuZHMgYSBzdG9ybSBhdCBzZWEsIHRoZXJlJ3Mgbm8gdGltZSB0byBzZWFyY2ggYWJvdXQgZm9yIHdoYXQgeW91IHdhbnQgb3IgdG8gc2VydmUgaXQgb3V0IGlmIGl0J3MgaW4gYSBtdWRkbGUuIEZvciBHb2QgdGhyZWF0ZW5zIGFuZCBwdW5pc2hlcyBjYXJlbGVzcyBmZWxsb3dzLCBhbmQgeW91J3JlIGx1Y2t5IGlmIGhlIG1lcmVseSByZWZyYWlucyBmcm9tIGRlc3Ryb3lpbmcgdGhlIGlubm9jZW50OyBhbmQgaWYgaGUgc2F2ZXMgeW91IHdoZW4geW91IGRvIHlvdXIgd29yayB3ZWxsLCB5b3UgaGF2ZSBtdWNoIGNhdXNlIHRvIHRoYW5rIGhlYXZlbi7igJ0KPC90cmFuc2xhdGlvbj4="
translation['8.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYTm93IGFmdGVyIHNlZWluZyB0aGUgc2hpcCdzIHRhY2tsZSBpbiBzdWNoIHBlcmZlY3Qgb3JkZXIsIEkgdG9sZCBteSB3aWZlOiDigJxDb25zaWRlcmluZyB0aGF0IGZvbGsgYWJvYXJkIGEgbWVyY2hhbnQgdmVzc2VsLCBldmVuIHRob3VnaCBpdCBiZSBhIGxpdHRsZSBvbmUsIGZpbmQgcm9vbSBmb3IgdGhpbmdzIGFuZCBrZWVwIG9yZGVyLCB0aG91Z2ggdG9zc2VkIHZpb2xlbnRseSB0byBhbmQgZnJvLCBhbmQgZmluZCB3aGF0IHRoZXkgd2FudCB0byBnZXQsIHRob3VnaCB0ZXJyb3Itc3RyaWNrZW4sIGl0IHdvdWxkIGJlIGRvd25yaWdodCBjYXJlbGVzc25lc3Mgb24gb3VyIHBhcnQgaWYgd2UsIHdobyBoYXZlIGxhcmdlIHN0b3Jlcm9vbXMgaW4gb3VyIGhvdXNlIHRvIGtlZXAgZXZlcnl0aGluZyBzZXBhcmF0ZSBhbmQgd2hvc2UgaG91c2UgcmVzdHMgb24gc29saWQgZ3JvdW5kLCBmYWlsIHRvIGZpbmQgYSBnb29kIGFuZCBoYW5keSBwbGFjZSBmb3IgZXZlcnl0aGluZy4gV291bGQgaXQgbm90IGJlIHNoZWVyIHN0dXBpZGl0eSBvbiBvdXIgcGFydD8KPC90cmFuc2xhdGlvbj4="
translation['8.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYSG93IGdvb2QgaXQgaXMgdG8ga2VlcCBvbmUncyBzdG9jayBvZiB1dGVuc2lscyBpbiBvcmRlciwgYW5kIGhvdyBlYXN5IHRvIGZpbmQgYSBzdWl0YWJsZSBwbGFjZSBpbiBhIGhvdXNlIHRvIHB1dCBlYWNoIHNldCBpbiwgSSBoYXZlIGFscmVhZHkgc2FpZC4KPC90cmFuc2xhdGlvbj4="
translation['8.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hhdCBhIGJlYXV0aWZ1bCBzaWdodCBpcyBhZmZvcmRlZCBieSBib290cyBvZiBhbGwgc29ydHMgYW5kIGNvbmRpdGlvbnMgcmFuZ2VkIGluIHJvd3MhIEhvdyBiZWF1dGlmdWwgaXQgaXMgdG8gc2VlIGNsb2FrcyBvZiBhbGwgc29ydHMgYW5kIGNvbmRpdGlvbnMga2VwdCBzZXBhcmF0ZSwgb3IgYmxhbmtldHMsIG9yIGJyYXplbiB2ZXNzZWxzLCBvciB0YWJsZSBmdXJuaXR1cmUhIFllcywgbm8gc2VyaW91cyBtYW4gd2lsbCBzbWlsZSB3aGVuIEkgY2xhaW0gdGhhdCB0aGVyZSBpcyBiZWF1dHkgaW4gdGhlIG9yZGVyIGV2ZW4gb2YgcG90cyBhbmQgcGFucyBzZXQgb3V0IGluIG5lYXQgYXJyYXksIGhvd2V2ZXIgbXVjaCBpdCBtYXkgbW92ZSB0aGUgbGF1Z2h0ZXIgb2YgYSB3aXQuCjwvdHJhbnNsYXRpb24+"
translation['8.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBpcyBub3RoaW5nLCBpbiBzaG9ydCwgdGhhdCBkb2VzIG5vdCBnYWluIGluIGJlYXV0eSB3aGVuIHNldCBvdXQgaW4gb3JkZXIuIEZvciBlYWNoIHNldCBsb29rcyBsaWtlIGEgdHJvb3Agb2YgdXRlbnNpbHMsIGFuZCB0aGUgc3BhY2UgYmV0d2VlbiB0aGUgc2V0cyBpcyBiZWF1dGlmdWwgdG8gc2VlLCB3aGVuIGVhY2ggc2V0IGlzIGtlcHQgY2xlYXIgb2YgaXQsIGp1c3QgYXMgYSB0cm9vcCBvZiBkYW5jZXJzIGFib3V0IHRoZSBhbHRhciBpcyBhIGJlYXV0aWZ1bCBzcGVjdGFjbGUgaW4gaXRzZWxmLCBhbmQgZXZlbiB0aGUgZnJlZSBzcGFjZSBsb29rcyBiZWF1dGlmdWwgYW5kIHVuZW5jdW1iZXJlZC4KPC90cmFuc2xhdGlvbj4="
translation['8.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCc4oCYV2UgY2FuIHRlc3QgdGhlIHRydXRoIG9mIHdoYXQgSSBzYXksIGRlYXIsIHdpdGhvdXQgYW55IGluY29udmVuaWVuY2UgYW5kIHdpdGggdmVyeSBsaXR0bGUgdHJvdWJsZS4gTW9yZW92ZXIsIG15IGRlYXIsIHRoZXJlIGlzIG5vIGdyb3VuZCBmb3IgYW55IG1pc2dpdmluZyB0aGF0IGl0IGlzIGhhcmQgdG8gZmluZCBzb21lb25lIHdobyB3aWxsIGdldCB0byBrbm93IHRoZSB2YXJpb3VzIHBsYWNlcyBhbmQgcmVtZW1iZXIgdG8gcHV0IGVhY2ggc2V0IGluIGl0cyBwcm9wZXIgcGxhY2UuCjwvdHJhbnNsYXRpb24+"
translation['8.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igd2Uga25vdywgSSB0YWtlIGl0LCB0aGF0IHRoZSBjaXR5IGFzIGEgd2hvbGUgaGFzIHRlbiB0aG91c2FuZCB0aW1lcyBhcyBtdWNoIG9mIGV2ZXJ5dGhpbmcgYXMgd2UgaGF2ZTsgYW5kIHlldCB5b3UgbWF5IG9yZGVyIGFueSBzb3J0IG9mIHNlcnZhbnQgdG8gYnV5IHNvbWV0aGluZyBpbiB0aGUgbWFya2V0IGFuZCB0byBicmluZyBpdCBob21lLCBhbmQgaGUgd2lsbCBiZSBhdCBubyBsb3NzOiBldmVyeSBvbmUgb2YgdGhlbSBpcyBib3VuZCB0byBrbm93IHdoZXJlIGhlIHNob3VsZCBnbyB0byBnZXQgZWFjaCBhcnRpY2xlLiBOb3cgdGhlIG9ubHkgcmVhc29uIGZvciB0aGlzIGlzIHRoYXQgZXZlcnl0aGluZyBpcyBrZXB0IGluIGEgZml4ZWQgcGxhY2UuCjwvdHJhbnNsYXRpb24+"
translation['8.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB5b3UgYXJlIHNlYXJjaGluZyBmb3IgYSBwZXJzb24sIHlvdSBvZnRlbiBmYWlsIHRvIGZpbmQgaGltLCB0aG91Z2ggaGUgbWF5IGJlIHNlYXJjaGluZyBmb3IgeW91IGhpbXNlbGYuIEFuZCBmb3IgdGhpcyBhZ2FpbiB0aGUgb25lIHJlYXNvbiBpcyB0aGF0IG5vIHBsYWNlIG9mIG1lZXRpbmcgaGFzIGJlZW4gZml4ZWQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFN1Y2ggaXMgdGhlIGdpc3Qgb2YgdGhlIGNvbnZlcnNhdGlvbiBJIHRoaW5rIEkgcmVtZW1iZXIgaGF2aW5nIHdpdGggaGVyIGFib3V0IHRoZSBhcnJhbmdlbWVudCBvZiB1dGVuc2lscyBhbmQgdGhlaXIgdXNlLuKAmeKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['9.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBbmQgd2hhdCB3YXMgdGhlIHJlc3VsdD/igJkgSSBhc2tlZDsg4oCYZGlkIHlvdSB0aGluaywgSXNjaG9tYWNodXMsIHRoYXQgeW91ciB3aWZlIHBhaWQgYW55IGhlZWQgdG8gdGhlIGxlc3NvbnMgeW91IHRyaWVkIHNvIGVhcm5lc3RseSB0byB0ZWFjaCBoZXI/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFdoeSwgc2hlIHByb21pc2VkIHRvIGF0dGVuZCB0byB0aGVtLCBhbmQgd2FzIGV2aWRlbnRseSBwbGVhc2VkIGJleW9uZCBtZWFzdXJlIHRvIGZlZWwgdGhhdCBzaGUgaGFkIGZvdW5kIGEgc29sdXRpb24gb2YgaGVyIGRpZmZpY3VsdGllcywgYW5kIHNoZSBiZWdnZWQgbWUgdG8gbG9zZSBubyB0aW1lIGluIGFycmFuZ2luZyB0aGluZ3MgYXMgSSBoYWQgc3VnZ2VzdGVkLuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['9.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBbmQgaG93IGRpZCB5b3UgYXJyYW5nZSB0aGluZ3MgZm9yIGhlciwgSXNjaG9tYWNodXM/4oCZIEkgYXNrZWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFdoeSwgSSBkZWNpZGVkIGZpcnN0IHRvIHNob3cgaGVyIHRoZSBwb3NzaWJpbGl0aWVzIG9mIG91ciBob3VzZS4gRm9yIGl0IGNvbnRhaW5zIGZldyBlbGFib3JhdGUgZGVjb3JhdGlvbnMsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPjsgYnV0IHRoZSByb29tcyBhcmUgZGVzaWduZWQgc2ltcGx5IHdpdGggdGhlIG9iamVjdCBvZiBwcm92aWRpbmcgYXMgY29udmVuaWVudCByZWNlcHRhY2xlcyBhcyBwb3NzaWJsZSBmb3IgdGhlIHRoaW5ncyB0aGF0IGFyZSB0byBmaWxsIHRoZW0sIGFuZCB0aHVzIGVhY2ggcm9vbSBpbnZpdGVkIGp1c3Qgd2hhdCB3YXMgc3VpdGVkIHRvIGl0Lgo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['9.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRodXMgdGhlIHN0b3JlLXJvb20gYnkgdGhlIHNlY3VyaXR5IG9mIGl0cyBwb3NpdGlvbiBjYWxsZWQgZm9yIHRoZSBtb3N0IHZhbHVhYmxlIGJsYW5rZXRzIGFuZCB1dGVuc2lscywgdGhlIGRyeSBjb3ZlcmVkIHJvb21zIGZvciB0aGUgY29ybiwgdGhlIGNvb2wgZm9yIHRoZSB3aW5lLCB0aGUgd2VsbC1saXQgZm9yIHRob3NlIHdvcmtzIG9mIGFydCBhbmQgdmVzc2VscyB0aGF0IG5lZWQgbGlnaHQuCjwvdHJhbnNsYXRpb24+"
translation['9.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkkgc2hvd2VkIGhlciBkZWNvcmF0ZWQgbGl2aW5nLXJvb21zIGZvciB0aGUgZmFtaWx5IHRoYXQgYXJlIGNvb2wgaW4gc3VtbWVyIGFuZCB3YXJtIGluIHdpbnRlci48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TWVtLjwvdGl0bGU+IElJSS4gdmlpaS4gOS48L25vdGU+IEkgc2hvd2VkIGhlciB0aGF0IHRoZSB3aG9sZSBob3VzZSBmcm9udHMgc291dGgsIHNvIHRoYXQgaXQgd2FzIG9idmlvdXMgdGhhdCBpdCBpcyBzdW5ueSBpbiB3aW50ZXIgYW5kIHNoYWR5IGluIHN1bW1lci4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TWVtLjwvdGl0bGU+IElJSS4gdmlpaS4gOS48L3RyYW5zbGF0aW9uPg=="
translation['9.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkkgc2hvd2VkIGhlciB0aGUgd29tZW4ncyBxdWFydGVycyB0b28sIHNlcGFyYXRlZCBieSBhIGJvbHRlZCBkb29yIGZyb20gdGhlIG1lbidzLCBzbyB0aGF0IG5vdGhpbmcgd2hpY2ggb3VnaHQgbm90IHRvIGJlIG1vdmVkIG1heSBiZSB0YWtlbiBvdXQsIGFuZCB0aGF0IHRoZSBzZXJ2YW50cyBtYXkgbm90IGJyZWVkIHdpdGhvdXQgb3VyIGxlYXZlLiBGb3IgaG9uZXN0IHNlcnZhbnRzIGdlbmVyYWxseSBwcm92ZSBtb3JlIGxveWFsIGlmIHRoZXkgaGF2ZSBhIGZhbWlseTsgYnV0IHJvZ3VlcywgaWYgdGhleSBsaXZlIGluIHdlZGxvY2ssIGJlY29tZSBhbGwgdGhlIG1vcmUgcHJvbmUgdG8gbWlzY2hpZWYuCjwvdHJhbnNsYXRpb24+"
translation['9.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBbmQgbm93IHRoYXQgd2UgaGFkIGNvbXBsZXRlZCB0aGUgbGlzdCwgd2UgZm9ydGh3aXRoIHNldCBhYm91dCBzZXBhcmF0aW5nIHRoZSBmdXJuaXR1cmUgdHJpYmUgYnkgdHJpYmUuIFdlIGJlZ2FuIGJ5IGNvbGxlY3RpbmcgdG9nZXRoZXIgdGhlIHZlc3NlbHMgd2UgdXNlIGluIHNhY3JpZmljaW5nLiBBZnRlciB0aGF0IHdlIHB1dCB0b2dldGhlciB0aGUgd29tZW4ncyBob2xpZGF5IGZpbmVyeSwgYW5kIHRoZSBtZW4ncyBob2xpZGF5IGFuZCB3YXIgZ2FyYiwgYmxhbmtldHMgaW4gdGhlIHdvbWVuJ3MsIGJsYW5rZXRzIGluIHRoZSBtZW4ncyBxdWFydGVycywgd29tZW4ncyBzaG9lcywgbWVuJ3Mgc2hvZXMuCjwvdHJhbnNsYXRpb24+"
translation['9.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFub3RoZXIgdHJpYmUgY29uc2lzdGVkIG9mIGFybXMsIGFuZCB0aHJlZSBvdGhlcnMgb2YgaW1wbGVtZW50cyBmb3Igc3Bpbm5pbmcsIGZvciBicmVhZC1tYWtpbmcgYW5kIGZvciBjb29raW5nOyBvdGhlcnMsIGFnYWluLCBvZiB0aGUgdGhpbmdzIHJlcXVpcmVkIGZvciB3YXNoaW5nLCBhdCB0aGUga25lYWRpbmctdHJvdWdoLCBhbmQgZm9yIHRhYmxlIHVzZS4gQWxsIHRoZXNlIHdlIGRpdmlkZWQgaW50byB0d28gc2V0cywgdGhpbmdzIGluIGNvbnN0YW50IHVzZSBhbmQgdGhpbmdzIHJlc2VydmVkIGZvciBmZXN0aXZpdGllcy4KPC90cmFuc2xhdGlvbj4="
translation['9.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPldlIGFsc28gcHV0IGJ5IHRoZW1zZWx2ZXMgdGhlIHRoaW5ncyBjb25zdW1lZCBtb250aCBieSBtb250aCwgYW5kIHNldCBhcGFydCB0aGUgc3VwcGxpZXMgY2FsY3VsYXRlZCB0byBsYXN0IGZvciBhIHllYXIuIEZvciB0aGlzIHBsYW4gbWFrZXMgaXQgZWFzaWVyIHRvIHRlbGwgaG93IHRoZXkgd2lsbCBsYXN0IHRvIHRoZSBlbmQgb2YgdGhlIHRpbWUuIFdoZW4gd2UgaGFkIGRpdmlkZWQgYWxsIHRoZSBwb3J0YWJsZSBwcm9wZXJ0eSB0cmliZSBieSB0cmliZSwgd2UgYXJyYW5nZWQgZXZlcnl0aGluZyBpbiBpdHMgcHJvcGVyIHBsYWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoYXQgd2Ugc2hvd2VkIHRoZSBzZXJ2YW50cyB3aG8gaGF2ZSB0byB1c2UgdGhlbSB3aGVyZSB0byBrZWVwIHRoZSB1dGVuc2lscyB0aGV5IHJlcXVpcmUgZGFpbHksIGZvciBiYWtpbmcsIGNvb2tpbmcsIHNwaW5uaW5nIGFuZCBzbyBmb3J0aDsgaGFuZGVkIHRoZW0gb3ZlciB0byB0aGVpciBjYXJlIGFuZCBjaGFyZ2VkIHRoZW0gdG8gc2VlIHRoYXQgdGhleSB3ZXJlIHNhZmUgYW5kIHNvdW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgdGhpbmdzIHRoYXQgd2UgdXNlIG9ubHkgZm9yIGZlc3RpdmFscyBvciBlbnRlcnRhaW5tZW50cywgb3Igb24gcmFyZSBvY2Nhc2lvbnMsIHdlIGhhbmRlZCBvdmVyIHRvIHRoZSBob3VzZWtlZXBlciwgYW5kIGFmdGVyIHNob3dpbmcgaGVyIHRoZWlyIHBsYWNlcyBhbmQgY291bnRpbmcgYW5kIG1ha2luZyBhIHdyaXR0ZW4gbGlzdCBvZiBhbGwgdGhlIGl0ZW1zLCB3ZSB0b2xkIGhlciB0byBnaXZlIHRoZW0gb3V0IHRvIHRoZSByaWdodCBzZXJ2YW50cywgdG8gcmVtZW1iZXIgd2hhdCBzaGUgZ2F2ZSB0byBlYWNoIG9mIHRoZW0sIGFuZCB3aGVuIHJlY2VpdmluZyB0aGVtIGJhY2sgdG8gcHV0IGV2ZXJ5dGhpbmcgaW4gdGhlIHBsYWNlIGZyb20gd2hpY2ggc2hlIHRvb2sgaXQuCjwvdHJhbnNsYXRpb24+"
translation['9.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSW4gYXBwb2ludGluZyB0aGUgaG91c2VrZWVwZXIsIHdlIGNob3NlIHRoZSB3b21hbiB3aG9tIG9uIGNvbnNpZGVyYXRpb24gd2UganVkZ2VkIHRvIGJlIHRoZSBtb3N0IHRlbXBlcmF0ZSBpbiBlYXRpbmcgYW5kIHdpbmUgZHJpbmtpbmcgYW5kIHNsZWVwaW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk1lbS48L3RpdGxlPiBJLiB2LiAxOyA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXJvcGFlZGlhLDwvdGl0bGU+IEkuIHZpLiA4Ljwvbm90ZT4gYW5kIHRoZSBtb3N0IG1vZGVzdCB3aXRoIG1lbiwgdGhlIG9uZSwgdG9vLCB3aG8gc2VlbWVkIHRvIGhhdmUgdGhlIGJlc3QgbWVtb3J5LCB0byBiZSBtb3N0IGNhcmVmdWwgbm90IHRvIG9mZmVuZCB1cyBieSBuZWdsZWN0aW5nIGhlciBkdXRpZXMsIGFuZCB0byB0aGluayBtb3N0IGhvdyBzaGUgY291bGQgZWFybiBzb21lIHJld2FyZCBieSBvYmxpZ2luZyB1cy4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TWVtLjwvdGl0bGU+IEkuIHYuIDE7IDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cm9wYWVkaWEsPC90aXRsZT4gSS4gdmkuIDguPC90cmFuc2xhdGlvbj4="
translation['9.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5XZSBhbHNvIHRhdWdodCBoZXIgdG8gYmUgbG95YWwgdG8gdXMgYnkgbWFraW5nIGhlciBhIHBhcnRuZXIgaW4gYWxsIG91ciBqb3lzIGFuZCBjYWxsaW5nIG9uIGhlciB0byBzaGFyZSBvdXIgdHJvdWJsZXMuIE1vcmVvdmVyLCB3ZSB0cmFpbmVkIGhlciB0byBiZSBlYWdlciBmb3IgdGhlIGltcHJvdmVtZW50IG9mIG91ciBlc3RhdGUsIGJ5IG1ha2luZyBoZXIgZmFtaWxpYXIgd2l0aCBpdCBhbmQgYnkgYWxsb3dpbmcgaGVyIHRvIHNoYXJlIGluIG91ciBzdWNjZXNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['9.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZnVydGhlciwgd2UgcHV0IGp1c3RpY2UgaW50byBoZXIsIGJ5IGdpdmluZyBtb3JlIGhvbm91ciB0byB0aGUganVzdCB0aGFuIHRvIHRoZSB1bmp1c3QsIGFuZCBieSBzaG93aW5nIGhlciB0aGF0IHRoZSBqdXN0IGxpdmUgaW4gZ3JlYXRlciB3ZWFsdGggYW5kIGZyZWVkb20gdGhhbiB0aGUgdW5qdXN0OyBhbmQgd2UgcGxhY2VkIGhlciBpbiB0aGF0IHBvc2l0aW9uIG9mIHN1cGVyaW9yaXR5LgogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['9.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2hlbiBhbGwgdGhpcyB3YXMgZG9uZSwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBJIHRvbGQgbXkgd2lmZSB0aGF0IGFsbCB0aGVzZSBtZWFzdXJlcyB3ZXJlIGZ1dGlsZSwgdW5sZXNzIHNoZSBzYXcgdG8gaXQgaGVyc2VsZiB0aGF0IG91ciBhcnJhbmdlbWVudCB3YXMgc3RyaWN0bHkgYWRoZXJlZCB0byBpbiBldmVyeSBkZXRhaWwuIEkgZXhwbGFpbmVkIHRoYXQgaW4gd2VsbC1vcmRlcmVkIGNpdGllcyB0aGUgY2l0aXplbnMgYXJlIG5vdCBzYXRpc2ZpZWQgd2l0aCBwYXNzaW5nIGdvb2QgbGF3czsgdGhleSBnbyBmdXJ0aGVyLCBhbmQgY2hvb3NlIGd1YXJkaWFucyBvZiB0aGUgbGF3cywgd2hvIGFjdCBhcyBvdmVyc2VlcnMsIGNvbW1lbmRpbmcgdGhlIGxhdy1hYmlkaW5nIGFuZCBwdW5pc2hpbmcgbGF3LWJyZWFrZXJzLgo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['9.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5TbyBJIGNoYXJnZWQgbXkgd2lmZSB0byBjb25zaWRlciBoZXJzZWxmIGd1YXJkaWFuIG9mIHRoZSBsYXdzIHRvIG91ciBob3VzZWhvbGQuIEFuZCBqdXN0IGFzIHRoZSBjb21tYW5kZXIgb2YgYSBnYXJyaXNvbiBpbnNwZWN0cyBoaXMgZ3VhcmRzLCBzbyBtdXN0IHNoZSBpbnNwZWN0IHRoZSBjaGF0dGVscyB3aGVuZXZlciBzaGUgdGhvdWdodCBpdCB3ZWxsIHRvIGRvIHNvOyBhcyB0aGUgQ291bmNpbCBzY3J1dGluaXNlcyB0aGUgY2F2YWxyeSBhbmQgdGhlIGhvcnNlcywgc28gc2hlIHdhcyB0byBtYWtlIHN1cmUgdGhhdCBldmVyeXRoaW5nIHdhcyBpbiBnb29kIGNvbmRpdGlvbjogbGlrZSBhIHF1ZWVuLCBzaGUgbXVzdCByZXdhcmQgdGhlIHdvcnRoeSB3aXRoIHByYWlzZSBhbmQgaG9ub3VyLCBzbyBmYXIgYXMgaW4gaGVyIGxheSwgYW5kIG5vdCBzcGFyZSByZWJ1a2UgYW5kIHB1bmlzaG1lbnQgd2hlbiB0aGV5IHdlcmUgY2FsbGVkIGZvci4KPC90cmFuc2xhdGlvbj4="
translation['9.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYTW9yZW92ZXIsIEkgdGF1Z2h0IGhlciB0aGF0IHNoZSBzaG91bGQgbm90IGJlIHZleGVkIHRoYXQgSSBhc3NpZ25lZCBoZWF2aWVyIGR1dGllcyB0byBoZXIgdGhhbiB0byB0aGUgc2VydmFudHMgaW4gcmVzcGVjdCBvZiBvdXIgcG9zc2Vzc2lvbnMuIFNlcnZhbnRzLCBJIHBvaW50ZWQgb3V0LCBjYXJyeSwgdGVuZCBhbmQgZ3VhcmQgdGhlaXIgbWFzdGVyJ3MgcHJvcGVydHksIGFuZCBvbmx5IGluIHRoaXMgc2Vuc2UgaGF2ZSBhIHNoYXJlIGluIGl0OyB0aGV5IGhhdmUgbm8gcmlnaHQgdG8gdXNlIGFueXRoaW5nIGV4Y2VwdCBieSB0aGUgb3duZXIncyBsZWF2ZTsgYnV0IGV2ZXJ5dGhpbmcgYmVsb25ncyB0byB0aGUgbWFzdGVyLCB0byB1c2UgaXQgYXMgaGUgd2lsbC4KPC90cmFuc2xhdGlvbj4="
translation['9.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUsIEkgZXhwbGFpbmVkLCBoZSB3aG8gZ2FpbnMgbW9zdCBieSB0aGUgcHJlc2VydmF0aW9uIG9mIHRoZSBnb29kcyBhbmQgbG9zZXMgbW9zdCBieSB0aGVpciBkZXN0cnVjdGlvbiwgaXMgdGhlIG9uZSB3aG8gaXMgYm91bmQgdG8gdGFrZSBtb3N0IGNhcmUgb2YgdGhlbS7igJkKICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['9.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2VsbCwgbm93LCBJc2Nob21hY2h1cyzigJkgc2FpZCBJLCDigJh3YXMgeW91ciB3aWZlIGluY2xpbmVkIHRvIHBheSBoZWVkIHRvIHlvdXIgd29yZHM/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFdoeSwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LOKAmSBoZSBjcmllZCwg4oCYc2hlIGp1c3QgdG9sZCBtZSB0aGF0IEkgd2FzIG1pc3Rha2VuIGlmIEkgc3VwcG9zZWQgdGhhdCBJIHdhcyBsYXlpbmcgYSBoYXJkIHRhc2sgb24gaGVyIGluIHRlbGxpbmcgaGVyIHRoYXQgc2hlIG11c3QgdGFrZSBjYXJlIG9mIG91ciB0aGluZ3MuIEl0IHdvdWxkIGhhdmUgYmVlbiBoYXJkZXIsIHNoZSBzYWlkLCBoYWQgSSByZXF1aXJlZCBoZXIgdG8gbmVnbGVjdCBoZXIgb3duIHBvc3Nlc3Npb25zLCB0aGFuIHRvIGhhdmUgdGhlIGR1dHkgb2YgYXR0ZW5kaW5nIHRvIGhlciBvd24gcGVjdWxpYXIgYmxlc3NpbmdzLgo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['9.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZmFjdCBpcyzigJkgaGUgYWRkZWQsIOKAmGp1c3QgYXMgaXQgbmF0dXJhbGx5IGNvbWVzIGVhc2llciB0byBhIGdvb2Qgd29tYW4gdG8gY2FyZSBmb3IgaGVyIG93biBjaGlsZHJlbiB0aGFuIHRvIG5lZ2xlY3QgdGhlbSwgc28sIEkgaW1hZ2luZSwgYSBnb29kIHdvbWFuIGZpbmRzIGl0IHBsZWFzYW50ZXIgdG8gbG9vayBhZnRlciBoZXIgb3duIHBvc3Nlc3Npb25zIHRoYW4gdG8gbmVnbGVjdCB0aGVtLuKAmeKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['10.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IHdoZW4gSSBoZWFyZCB0aGF0IGhpcyB3aWZlIGhhZCBnaXZlbiBoaW0gdGhpcyBhbnN3ZXIsIEkgZXhjbGFpbWVkOyDigJhVcG9uIG15IHdvcmQsIElzY2hvbWFjaHVzLCB5b3VyIHdpZmUgaGFzIGEgdHJ1bHkgbWFzY3VsaW5lIG1pbmQgYnkgeW91ciBzaG93aW5nISc8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWWVzLOKAmSBzYWlkIElzY2hvbWFjaHVzLCDigJhhbmQgSSBhbSBwcmVwYXJlZCB0byBnaXZlIHlvdSBvdGhlciBleGFtcGxlcyBvZiBoaWdoLW1pbmRlZG5lc3Mgb24gaGVyIHBhcnQsIHdoZW4gYSB3b3JkIGZyb20gbWUgd2FzIGVub3VnaCB0byBzZWN1cmUgaGVyIGluc3RhbnQgb2JlZGllbmNlLuKAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhUZWxsIG1lIHdoYXQgdGhleSBhcmUs4oCZIEkgY3JpZWQ7IOKAmGZvciBpZiBaZXV4aXMgc2hvd2VkIG1lIGEgZmFpciB3b21hbidzIHBvcnRyYWl0IHBhaW50ZWQgYnkgaGlzIG93biBoYW5kLCBpdCB3b3VsZCBub3QgZ2l2ZSBtZSBoYWxmIHRoZSBwbGVhc3VyZSBJIGRlcml2ZSBmcm9tIHRoZSBjb250ZW1wbGF0aW9uIG9mIGEgbGl2aW5nIHdvbWFuJ3MgdmlydHVlcy7igJkKICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['10.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVyZXVwb24gSXNjaG9tYWNodXMgdG9vayB1cCBoaXMgcGFyYWJsZS4g4oCYV2VsbCwgb25lIGRheSwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBJIG5vdGljZWQgdGhhdCBoZXIgZmFjZSB3YXMgbWFkZSB1cDogc2hlIGhhZCBydWJiZWQgaW4gd2hpdGUgbGVhZCBpbiBvcmRlciB0byBsb29rIGV2ZW4gd2hpdGVyIHRoYW4gc2hlIGlzLCBhbmQgYWxrYW5ldCBqdWljZSB0byBoZWlnaHRlbiB0aGUgcm9zeSBjb2xvdXIgb2YgaGVyIGNoZWVrczsgYW5kIHNoZSB3YXMgd2VhcmluZyBib290cyB3aXRoIHRoaWNrIHNvbGVzIHRvIGluY3JlYXNlIGhlciBoZWlnaHQuCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['10.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlNvIEkgc2FpZCB0byBoZXIsIOKAnFRlbGwgbWUsIG15IGRlYXIsIGhvdyBzaG91bGQgSSBhcHBlYXIgbW9yZSB3b3J0aHkgb2YgeW91ciBsb3ZlIGFzIGEgcGFydG5lciBpbiBvdXIgZ29vZHMsIGJ5IGRpc2Nsb3NpbmcgdG8geW91IG91ciBiZWxvbmdpbmdzIGp1c3QgYXMgdGhleSBhcmUsIHdpdGhvdXQgYm9hc3Rpbmcgb2YgaW1hZ2luYXJ5IHBvc3Nlc3Npb25zIG9yIGNvbmNlYWxpbmcgYW55IHBhcnQgb2Ygd2hhdCB3ZSBoYXZlLCBvciBieSB0cnlpbmcgdG8gdHJpY2sgeW91IHdpdGggYW4gZXhhZ2dlcmF0ZWQgYWNjb3VudCwgc2hvd2luZyB5b3UgYmFkIG1vbmV5IGFuZCBnaWx0IG5lY2tsYWNlcyBhbmQgZGVzY3JpYmluZyBjbG90aGVzIHRoYXQgd2lsbCBmYWRlIGFzIHJlYWwgcHVycGxlP+KAnQo8L3RyYW5zbGF0aW9uPg=="
translation['10.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJzigJhIdXNoIeKAnSBzaGUgYnJva2UgaW4gaW1tZWRpYXRlbHksIOKAnHByYXkgZG9uJ3QgYmUgbGlrZSB0aGF04oCUSSBjb3VsZCBub3QgbG92ZSB5b3Ugd2l0aCBhbGwgbXkgaGVhcnQgaWYgeW91IHdlcmUgbGlrZSB0aGF0IeKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJzigJhUaGVuLCBhcmUgd2Ugbm90IGpvaW5lZCB0b2dldGhlciBieSBhbm90aGVyIGJvbmQgb2YgdW5pb24sIGRlYXIsIHRvIGJlIHBhcnRuZXJzIGluIG91ciBib2RpZXM/4oCdCjwvdHJhbnNsYXRpb24+"
translation['10.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJzigJhUaGUgd29ybGQgc2F5cyBzbywgYXQgYW55IHJhdGUu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAnOKAmEhvdyB0aGVuIHNob3VsZCBJIHNlZW0gbW9yZSB3b3J0aHkgb2YgeW91ciBsb3ZlIGluIHRoaXMgcGFydG5lcnNoaXAgb2YgdGhlIGJvZHnigJRieSBzdHJpdmluZyB0byBoYXZlIG15IGJvZHkgaGFsZSBhbmQgc3Ryb25nIHdoZW4gSSBwcmVzZW50IGl0IHRvIHlvdSwgYW5kIHNvIGxpdGVyYWxseSB0byBiZSBvZiBhIGdvb2QgY291bnRlbmFuY2UgaW4geW91ciBzaWdodCwgb3IgYnkgc21lYXJpbmcgbXkgY2hlZWtzIHdpdGggcmVkIGxlYWQgYW5kIHBhaW50aW5nIG15c2VsZiB1bmRlciB0aGUgZXllcyB3aXRoIHJvdWdlIGJlZm9yZSBJIHNob3cgbXlzZWxmIHRvIHlvdSBhbmQgY2xhc3AgeW91IGluIG15IGFybXMsIGNoZWF0aW5nIHlvdSBhbmQgb2ZmZXJpbmcgdG8geW91ciBleWVzIGFuZCBoYW5kcyByZWQgbGVhZCBpbnN0ZWFkIG9mIG15IHJlYWwgZmxlc2g/4oCdCjwvdHJhbnNsYXRpb24+"
translation['10.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJzigJhPaCzigJ0gc2hlIGNyaWVkLCDigJxJIHdvdWxkIHNvb25lciB0b3VjaCB5b3UgdGhhbiByZWQgbGVhZCwgd291bGQgc29vbmVyIHNlZSB5b3VyIG93biBjb2xvdXIgdGhhbiByb3VnZSwgd291bGQgc29vbmVyIHNlZSB5b3VyIGV5ZXMgYnJpZ2h0IHRoYW4gc21lYXJlZCB3aXRoIGdyZWFzZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['10.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJzigJhUaGVuIHBsZWFzZSBhc3N1bWUsIG15IGRlYXIsIHRoYXQgSSBkbyBub3QgcHJlZmVyIHdoaXRlIHBhaW50IGFuZCBkeWUgb2YgYWxrYW5ldCB0byB5b3VyIHJlYWwgY29sb3VyOyBidXQganVzdCBhcyB0aGUgZ29kcyBoYXZlIG1hZGUgaG9yc2VzIHRvIGRlbGlnaHQgaW4gaG9yc2VzLCBjYXR0bGUgaW4gY2F0dGxlLCBzaGVlcCBpbiBzaGVlcCwgc28gaHVtYW4gYmVpbmdzIGZpbmQgdGhlIGh1bWFuIGJvZHkgdW5kaXNndWlzZWQgbW9zdCBkZWxpZ2h0ZnVsLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRyaWNrcyBsaWtlIHRoZXNlIG1heSBzZXJ2ZSB0byBndWxsIG91dHNpZGVycywgYnV0IHBlb3BsZSB3aG8gbGl2ZSB0b2dldGhlciBhcmUgYm91bmQgdG8gYmUgZm91bmQgb3V0LCBpZiB0aGV5IHRyeSB0byBkZWNlaXZlIG9uZSBhbm90aGVyLiBGb3IgdGhleSBhcmUgZm91bmQgb3V0IHdoaWxlIHRoZXkgYXJlIGRyZXNzaW5nIGluIHRoZSBtb3JuaW5nOyB0aGV5IHBlcnNwaXJlIGFuZCBhcmUgbG9zdDsgYSB0ZWFyIGNvbnZpY3RzIHRoZW07IHRoZSBiYXRoIHJldmVhbHMgdGhlbSBhcyB0aGV5IGFyZSHigJnigJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQW5kLCBwcmF5LCB3aGF0IGRpZCBzaGUgc2F5IHRvIHRoYXQ/4oCZCjwvdHJhbnNsYXRpb24+"
translation['10.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkkgYXNrZWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmE5vdGhpbmcs4oCZIGhlIHNhaWQsIOKAmG9ubHkgc2hlIGdhdmUgdXAgc3VjaCBwcmFjdGljZXMgZnJvbSB0aGF0IGRheSBmb3J3YXJkLCBhbmQgdHJpZWQgdG8gbGV0IG1lIHNlIGhlciB1bmRpc2d1aXNlZCBhbmQgYXMgc2hlIHNob3VsZCBiZS4gU3RpbGwsIHNoZSBkaWQgYXNrIHdoZXRoZXIgSSBjb3VsZCBhZHZpc2UgaGVyIG9uIG9uZSBwb2ludDogaG93IHNoZSBtaWdodCBtYWtlIGhlcnNlbGYgcmVhbGx5IGJlYXV0aWZ1bCwgaW5zdGVhZCBvZiBtZXJlbHkgc2VlbWluZyB0byBiZSBzby4KICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['10.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhpcyB3YXMgbXkgYWR2aWNlLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT46IOKAnERvbid0IHNpdCBhYm91dCBmb3IgZXZlciBsaWtlIGEgc2xhdmUsIGJ1dCB0cnksIEdvZCBoZWxwaW5nIHlvdSwgdG8gYmVoYXZlIGFzIGEgbWlzdHJlc3M6IHN0YW5kIGJlZm9yZSB0aGUgbG9vbSBhbmQgYmUgcmVhZHkgdG8gaW5zdHJ1Y3QgdGhvc2Ugd2hvIGtub3cgbGVzcyB0aGFuIHlvdSwgYW5kIHRvIGxlYXJuIGZyb20gdGhvc2Ugd2hvIGtub3cgbW9yZTogbG9vayBhZnRlciB0aGUgYmFraW5nbWFpZDogc3RhbmQgYnkgdGhlIGhvdXNla2VlcGVyIHdoZW4gc2hlIGlzIHNlcnZpbmcgb3V0IHN0b3JlczogZ28gcm91bmQgYW5kIHNlZSB3aGV0aGVyIGV2ZXJ5dGhpbmcgaXMgaW4gaXRzIHBsYWNlLuKAnSBGb3IgSSB0aG91Z2h0IHRoYXQgd291bGQgZ2l2ZSBoZXIgYSB3YWxrIGFzIHdlbGwgYXMgb2NjdXBhdGlvbi4KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['10.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5JIGFsc28gc2FpZCBpdCB3YXMgZXhjZWxsZW50IGV4ZXJjaXNlIHRvIG1peCBmbG91ciBhbmQga25lYWQgZG91Z2g7IGFuZCB0byBzaGFrZSBhbmQgZm9sZCBjbG9ha3MgYW5kIGJlZGNsb3RoZXM7IHN1Y2ggZXhjZXJjaXNlIHdvdWxkIGdpdmUgaGVyIGEgYmV0dGVyIGFwcGV0aXRlLCBpbXByb3ZlIGhlciBoZWFsdGgsIGFuZCBhZGQgbmF0dXJhbCBjb2xvdXIgdG8gaGVyIGNoZWVrcy4KPC90cmFuc2xhdGlvbj4="
translation['10.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5CZXNpZGVzLCB3aGVuIGEgd2lmZSdzIGxvb2tzIG91dHNoaW5lIGEgbWFpZCdzIGFuZCBzaGUgaXMgZnJlc2hlciBhbmQgbW9yZSBiZWNvbWluZ2x5IGRyZXNzZWQsIHRoZXkncmUgYSByYXZpc2hpbmcgc2lnaHQsIGVzcGVjaWFsbHkgd2hlbiB0aGUgd2lmZSBpcyBhbHNvIHdpbGxpbmcgdG8gb2JsaWdlLCB3aGVyZWFzIHRoZSBnaXJsJ3Mgc2VydmljZXMgYXJlIGNvbXB1bHNvcnkuCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['10.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2l2ZXMgd2hvIHNpdCBhYm91dCBsaWtlIGZpbmUgbGFkaWVzLCBleHBvc2UgdGhlbXNlbHZlcyB0byBjb21wYXJpc29uIHdpdGggcGFpbnRlZCBhbmQgZnJhdWR1bGVudCBodXNzaWVzLiBBbmQgbm93LCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIHlvdSBtYXkgYmUgc3VyZSwgbXkgd2lmZSdzIGRyZXNzIGFuZCBhcHBlYXJhbmNlIGFyZSBpbiBhY2NvcmQgd2l0aCBteSBpbnN0cnVjdGlvbnMgYW5kIHdpdGggbXkgcHJlc2VudCBkZXNjcmlwdGlvbi7igJnigJ0KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['11.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQXQgdGhpcyBwb2ludCBJIHNhaWQsIOKAmElzY2hvbWFjaHVzLCBJIHRoaW5rIHlvdXIgYWNjb3VudCBvZiB5b3VyIHdpZmUncyBvY2N1cGF0aW9ucyBpcyBzdWZmaWNpZW50IGZvciB0aGUgcHJlc2VudOKAlGFuZCB2ZXJ5IGNyZWRpdGFibGUgaXQgaXMgdG8gYm90aCBvZiB5b3UuIEJ1dCBub3cgdGVsbCBtZSBvZiB5b3VyIG93bjogdGh1cyB5b3Ugd2lsbCBoYXZlIHRoZSBzYXRpc2ZhY3Rpb24gb2Ygc3RhdGluZyB0aGUgcmVhc29ucyB3aHkgeW91IGFyZSBzbyBoaWdobHkgcmVzcGVjdGVkLCBhbmQgSSBzaGFsbCBiZSBtdWNoIGJlaG9sZGVuIHRvIHlvdSBmb3IgYSBjb21wbGV0ZSBhY2NvdW50IG9mIGEgZ2VudGxlbWFuJ3Mgb2NjdXBhdGlvbnMsIGFuZCBpZiBteSB1bmRlcnN0YW5kaW5nIHNlcnZlcywgZm9yIGEgdGhvcm91Z2gga25vd2xlZGdlIG9mIHRoZW0u4oCZCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['11.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsIHRoZW4sIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPizigJkgYW5zd2VyZWQgSXNjaG9tYWNodXMsIOKAmGl0IHdpbGwgYmUgYSB2ZXJ5IGdyZWF0IHBsZWFzdXJlIHRvIG1lIHRvIGdpdmUgeW91IGFuIGFjY291bnQgb2YgbXkgZGFpbHkgb2NjdXBhdGlvbnMsIHRoYXQgeW91IG1heSBjb3JyZWN0IG1lIGlmIHlvdSB0aGluayB0aGVyZSBpcyBhbnl0aGluZyBhbWlzcyBpbiBteSBjb25kdWN0LuKAmQogICAgICAgIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['11.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBcyB0byB0aGF0LOKAmSBzYWlkIEksIOKAmGhvdyBjb3VsZCBJIHByZXN1bWUgdG8gY29ycmVjdCBhIHBlcmZlY3QgZ2VudGxlbWFuLCBJIHdobyBhbSBzdXBwb3NlZCB0byBiZSBhIG1lcmUgY2hhdHRlcmVyIHdpdGggbXkgaGVhZCBpbiB0aGUgYWlyLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDOtM67zrXPg8+HzrXhv5bOvSwg4byAzrXPgc6/zrzOtc+Ez4HOteG/ls69OzwvZm9yZWlnbj4gdGhlc2UgYXJlIHRhdW50cyBjb21tb25seSBsZXZlbGxlZCBhdCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT47IHRodXMsIGZvciBpbnN0YW5jZSwgQXJpc3RvcGhhbmVzLCA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5DbG91ZHM8L3RpdGxlPiwgMjI1OiDigJxXaGF0IGFyZSB5b3UgYXQsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPj/igJ0g4oCcSSdtIHdhbGtpbmcgdGhlIGFpciBhbmQgcG9uZGVyaW5nIG9uIHRoZSBzdW7igJ07IGFuZCA8ZGF0ZSBhdXRobmFtZT0iMTQ4MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iMTQ4MCI+MTQ4MDwvZGF0ZT46IFNvY3IuLCDigJxFeGN1c2UgbXkgc2lsbHkgY2hhdHRlci7igJ08L25vdGU+IEkgd2hvIGFtIGNhbGxlZOKAlHRoZSBtb3N0IHNlbnNlbGVzcyBvZiBhbGwgdGF1bnRz4oCUYSBwb29yIGJlZ2dhcj8KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzrTOu861z4PPh8614b+Wzr0sIOG8gM61z4HOv868zrXPhM+BzrXhv5bOvTs8L2ZvcmVpZ24+IHRoZXNlIGFyZSB0YXVudHMgY29tbW9ubHkgbGV2ZWxsZWQgYXQgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+OyB0aHVzLCBmb3IgaW5zdGFuY2UsIEFyaXN0b3BoYW5lcywgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkNsb3VkczwvdGl0bGU+LCAyMjU6IOKAnFdoYXQgYXJlIHlvdSBhdCwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+P+KAnSDigJxJJ20gd2Fsa2luZyB0aGUgYWlyIGFuZCBwb25kZXJpbmcgb24gdGhlIHN1buKAnTsgYW5kIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48ZGF0ZSBhdXRobmFtZT0iMTQ4MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iMTQ4MCI+MTQ4MDwvZGF0ZT46IFNvY3IuLCDigJxFeGN1c2UgbXkgc2lsbHkgY2hhdHRlci7igJ08L3RyYW5zbGF0aW9uPg=="
translation['11.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkkgZG8gYXNzdXJlIHlvdSwgSXNjaG9tYWNodXMsIHRoaXMgbGFzdCBpbXB1dGF0aW9uIHdvdWxkIGhhdmUgZHJpdmVuIG1lIHRvIGRlc3BhaXIsIHdlcmUgaXQgbm90IHRoYXQgYSBkYXkgb3IgdHdvIGFnbyBJIGNhbWUgdXBvbiB0aGUgaG9yc2Ugb2YgTmljaWFzIHRoZSBmb3JlaWduZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPklmIHRoZSB0ZXh0IGlzIHJpZ2h0LCB0aGlzIHBlcnNvbiBjYW5ub3QgYmUgdGhlIHdlbGwta25vd24gTmljaWFzLjwvbm90ZT4gSSBzYXcgYSBjcm93ZCB3YWxraW5nIGJlaGluZCB0aGUgY3JlYXR1cmUgYW5kIHN0YXJpbmcsIGFuZCBoZWFyZCBzb21lIG9mIHRoZW0gdGFsa2luZyB2b2x1Ymx5IGFib3V0IGhpbS4gV2VsbCwgSSB3ZW50IHVwIHRvIHRoZSBncm9vbSBhbmQgYXNrZWQgaGltIGlmIHRoZSBob3JzZSBoYWQgbWFueSBwb3NzZXNzaW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['11.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBtYW4gbG9va2VkIGF0IG1lIGFzIGlmIEkgbXVzdCBiZSBtYWQgdG8gYXNrIHN1Y2ggYSBxdWVzdGlvbiwgYW5kIGFza2VkIG1lIGhvdyBhIGhvcnNlIGNvdWxkIG93biBwcm9wZXJ0eS4gQXQgdGhhdCBJIHJlY292ZXJlZCwgZm9yIGhpcyBhbnN3ZXIgc2hvd2VkIHRoYXQgaXQgaXMgcG9zc2libGUgZXZlbiBmb3IgYSBwb29yIGhvcnNlIHRvIGJlIGEgZ29vZCBvbmUsIGlmIG5hdHVyZSBoYXMgZ2l2ZW4gaGltIGEgZ29vZCBzcGlyaXQuCjwvdHJhbnNsYXRpb24+"
translation['11.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFzc3VtZSwgdGhlcmVmb3JlLCB0aGF0IGl0IGlzIHBvc3NpYmxlIGZvciBtZSB0byBiZSBhIGdvb2QgbWFuLCBhbmQgZ2l2ZSBtZSBhIGNvbXBsZXRlIGFjY291bnQgb2YgeW91ciBvY2N1cGF0aW9ucywgdGhhdCwgc28gZmFyIGFzIG15IHVuZGVyc3RhbmRpbmcgYWxsb3dzIG1lLCBJIG1heSBlbmRlYXZvdXIgdG8gZm9sbG93IHlvdXIgZXhhbXBsZSBmcm9tIHRvLW1vcnJvdyBtb3JuaW5nOyBmb3IgdGhhdCdzIGEgZ29vZCBkYXkgZm9yIGVudGVyaW5nIG9uIGEgY291cnNlIG9mIHZpcnR1ZS7igJkKICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['11.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhZb3UncmUgam9raW5nLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4s4oCZIHNhaWQgSXNjaG9tYWNodXM7IOKAmG5ldmVydGhlbGVzcyBJIHdpbGwgdGVsbCB5b3Ugd2hhdCBwcmluY2lwbGVzIEkgdHJ5IG15IGJlc3QgdG8gZm9sbG93IGNvbnNpc3RlbnRseSBpbiBsaWZlLgo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['11.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkZvciBJIHNlZW0gdG8gcmVhbGlzZSB0aGF0LCB3aGlsZSB0aGUgZ29kcyBoYXZlIG1hZGUgaXQgaW1wb3NzaWJsZSBmb3IgbWVuIHRvIHByb3NwZXIgd2l0aG91dCBrbm93aW5nIGFuZCBhdHRlbmRpbmcgdG8gdGhlIHRoaW5ncyB0aGV5IG91Z2h0IHRvIGRvLCB0byBzb21lIG9mIHRoZSB3aXNlIGFuZCBjYXJlZnVsIHRoZXkgZ3JhbnQgcHJvc3Blcml0eSwgYW5kIHRvIHNvbWUgZGVueSBpdDsgYW5kIHRoZXJlZm9yZSBJIGJlZ2luIGJ5IHdvcnNoaXBwaW5nIHRoZSBnb2RzLCBhbmQgdHJ5IHRvIGNvbmR1Y3QgbXlzZWxmIGluIHN1Y2ggYSB3YXkgdGhhdCBJIG1heSBoYXZlIGhlYWx0aCBhbmQgc3RyZW5ndGggaW4gYW5zd2VyIHRvIG15IHByYXllcnMsIHRoZSByZXNwZWN0IG9mIG15IGZlbGxvdy1jaXRpemVucywgdGhlIGFmZmVjdGlvbiBvZiBteSBmcmllbmRzLCBzYWZldHkgd2l0aCBob25vdXIgaW4gd2FyLCBhbmQgd2VhbHRoIGluY3JlYXNlZCBieSBob25lc3QgbWVhbnMu4oCZCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['11.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXaGF0LCBJc2Nob21hY2h1cyzigJkgSSBhc2tlZCBvbiBoZWFyaW5nIHRoYXQsIOKAmGRvIHlvdSByZWFsbHkgd2FudCB0byBiZSByaWNoIGFuZCB0byBoYXZlIG11Y2gsIGFsb25nIHdpdGggbXVjaCB0cm91YmxlIHRvIHRha2UgY2FyZSBvZiBpdD/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVGhlIGFuc3dlciB0byB5b3VyIHF1ZXN0aW9ucyzigJkgc2FpZCBoZSwg4oCYaXMsIFllcywgSSBkbyBpbmRlZWQuIEZvciBJIHdvdWxkIGZhaW4gaG9ub3VyIHRoZSBnb2RzIHdpdGhvdXQgY291bnRpbmcgdGhlIGNvc3QsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgaGVscCBmcmllbmRzIGluIG5lZWQsIGFuZCBsb29rIHRvIGl0IHRoYXQgdGhlIGNpdHkgbGFja3Mgbm8gYWRvcm5tZW50IHRoYXQgbXkgbWVhbnMgY2FuIHN1cHBseS7igJkKPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['11.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVHJ1bHkgbm9ibGUgYXNwaXJhdGlvbnMsIElzY2hvbWFjaHVzLOKAmSBJIGNyaWVkLCDigJhhbmQgd29ydGh5IG9mIGEgbWFuIG9mIG1lYW5zLCBubyBkb3VidCEgU2VlaW5nIHRoYXQgdGhlcmUgYXJlIG1hbnkgd2hvIGNhbm5vdCBsaXZlIHdpdGhvdXQgaGVscCBmcm9tIG90aGVycywgYW5kIG1hbnkgYXJlIGNvbnRlbnQgaWYgdGhleSBjYW4gZ2V0IGVub3VnaCBmb3IgdGhlaXIgb3duIG5lZWRzLCBzdXJlbHkgdGhvc2Ugd2hvIGNhbiBtYWludGFpbiB0aGVpciBvd24gZXN0YXRlIGFuZCB5ZXQgaGF2ZSBlbm91Z2ggbGVmdCB0byBhZG9ybiB0aGUgY2l0eSBhbmQgcmVsaWV2ZSB0aGVpciBmcmllbmRzIG1heSB3ZWxsIGJlIHRob3VnaHQgaGlnaCBhbmQgbWlnaHR5IG1lbi4KPC90cmFuc2xhdGlvbj4="
translation['11.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Ib3dldmVyLOKAmSBJIGFkZGVkLCDigJhwcmFpc2Ugb2Ygc3VjaCBtZW4gaXMgYSBjb21tb25wbGFjZSBhbW9uZyB1cy4gUGxlYXNlIHJldHVybiB0byB5b3VyIGZpcnN0IHN0YXRlbWVudCwgSXNjaG9tYWNodXMsIGFuZCB0ZWxsIG1lIGhvdyB5b3UgdGFrZSBjYXJlIG9mIHlvdXIgaGVhbHRoIGFuZCB5b3VyIHN0cmVuZ3RoLCBob3cgeW91IG1ha2UgaXQgcG9zc2libGUgdG8gY29tZSB0aHJvdWdoIHdhciB3aXRoIHNhZmV0eSBhbmQgaG9ub3VyLiBJIHNoYWxsIGJlIGNvbnRlbnQgdG8gaGVhciBhYm91dCB5b3VyIG1vbmV5LW1ha2luZyBhZnRlcndhcmRzLuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['11.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2VsbCwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LOKAmSByZXBsaWVkIElzY2hvbWFjaHVzLCDigJhhbGwgdGhlc2UgdGhpbmdzIGhhbmcgdG9nZXRoZXIsIHNvIGZhciBhcyBJIGNhbiBzZWUuIEZvciBpZiBhIG1hbiBoYXMgcGxlbnR5IHRvIGVhdCwgYW5kIHdvcmtzIG9mZiB0aGUgZWZmZWN0czxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lyb3BhZWRpYTwvdGl0bGU+IEkuIGlpLCAxMC48L25vdGU+IHByb3Blcmx5LCBJIHRha2UgaXQgdGhhdCBoZSBib3RoIGluc3VyZXMgaGlzIGhlYWx0aCBhbmQgYWRkcyB0byBoaXMgc3RyZW5ndGguIEJ5IHRyYWluaW5nIGhpbXNlbGYgaW4gdGhlIGFydHMgb2Ygd2FyIGhlIGlzIG1vcmUgcXVhbGlmaWVkIHRvIHNhdmUgaGltc2VsZiBob25vdXJhYmx5LCBhbmQgYnkgZHVlIGRpbGlnZW5jZSBhbmQgYXZvaWRhbmNlIG9mIGxvb3NlIGhhYml0cywgaGUgaXMgbW9yZSBsaWtlbHkgdG8gaW5jcmVhc2UgaGlzIGVzdGF0ZS7igJkKPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lyb3BhZWRpYTwvdGl0bGU+IEkuIGlpLCAxMC48L3RyYW5zbGF0aW9uPg=="
translation['11.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYU28gZmFyLCBJc2Nob21hY2h1cywgSSBmb2xsb3cgeW91LOKAmSBJIGFuc3dlcmVkLiDigJhZb3UgbWVhbiB0aGF0IGJ5IHdvcmtpbmcgYWZ0ZXIgbWVhbHMsIGJ5IGRpbGlnZW5jZSBhbmQgYnkgdHJhaW5pbmcsIGEgbWFuIGlzIG1vcmUgYXB0IHRvIG9idGFpbiB0aGUgZ29vZCB0aGluZ3Mgb2YgbGlmZS4gQnV0IG5vdyBJIHNob3VsZCBsaWtlIHlvdSB0byBnaXZlIG1lIGRldGFpbHMuIEJ5IHdoYXQga2luZCBvZiB3b3JrIGRvIHlvdSBlbmRlYXZvdXIgdG8ga2VlcCB5b3VyIGhlYWx0aCBhbmQgc3RyZW5ndGg/IEhvdyBkbyB5b3UgdHJhaW4geW91cnNlbGYgaW4gdGhlIGFydHMgb2Ygd2FyPyBXaGF0IGRpbGlnZW5jZSBkbyB5b3UgdXNlIHRvIGhhdmUgYSBzdXJwbHVzIGZyb20gd2hpY2ggdG8gaGVscCBmcmllbmRzIGFuZCBzdHJlbmd0aGVuIHRoZSBjaXR5P+KAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['11.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2VsbCBub3csIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPizigJkgcmVwbGllZCBJc2Nob21hY2h1cywg4oCYSSByaXNlIGZyb20gbXkgYmVkIGF0IGFuIGhvdXIgd2hlbiwgaWYgSSB3YW50IHRvIGNhbGwgb24gYW55b25lLCBJIGFtIHN1cmUgdG8gZmluZCBoaW0gc3RpbGwgYXQgaG9tZS4gSWYgSSBoYXZlIGFueSBidXNpbmVzcyB0byBkbyBpbiB0b3duLCBJIG1ha2UgaXQgYW4gb3Bwb3J0dW5pdHkgZm9yIGdldHRpbmcgYSB3YWxrLgogICAgICAgIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['11.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5JZiB0aGVyZSBpcyBub3RoaW5nIHByZXNzaW5nIHRvIGJlIGRvbmUgaW4gdG93biwgbXkgc2VydmFudCBsZWFkcyBteSBob3JzZSB0byB0aGUgZmFybSwgYW5kIEkgbWFrZSBteSB3YWxrIGJ5IGdvaW5nIHRvIGl0IG9uIGZvb3QsIHdpdGggbW9yZSBiZW5lZml0LCBwZXJoYXBzLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIHRoYW4gaWYgSSB0b29rIGEgdHVybiBpbiB0aGUgYXJjYWRlLgo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['11.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIEkgcmVhY2ggdGhlIGZhcm0sIEkgbWF5IGZpbmQgcGxhbnRpbmcsIGNsZWFyaW5nLCBzb3dpbmcgb3IgaGFydmVzdGluZyBpbiBwcm9ncmVzcy4gSSBzdXBlcmludGVuZCBhbGwgdGhlIGRldGFpbHMgb2YgdGhlIHdvcmssIGFuZCBtYWtlIGFueSBpbXByb3ZlbWVudHMgaW4gbWV0aG9kIHRoYXQgSSBjYW4gc3VnZ2VzdC4KPC90cmFuc2xhdGlvbj4="
translation['11.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzLCBJIHVzdWFsbHkgbW91bnQgbXkgaG9yc2UgYW5kIGdvIHRocm91Z2ggZXhlcmNpc2VzLCBpbWl0YXRpbmcgYXMgY2xvc2VseSBhcyBJIGNhbiB0aGUgZXhlcmNpc2VzIG5lZWRlZCBpbiB3YXJmYXJlLiBJIGF2b2lkIG5laXRoZXIgc2xvcGUgbm9yIHN0ZWVwIGluY2xpbmUsIGRpdGNoIG5vciB3YXRlcmNvdXJzZSwgYnV0IEkgdXNlIGFsbCBwb3NzaWJsZSBjYXJlIG5vdCB0byBsYW1lIG15IGhvcnNlIHdoZW4gaGUgdGFrZXMgdGhlbS4KICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['11.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciBJIGhhdmUgZmluaXNoZWQsIHRoZSBzZXJ2YW50IGdpdmVzIHRoZSBob3JzZSBhIHJvbGwgYW5kIGxlYWRzIGhpbSBob21lLCBicmluZ2luZyB3aXRoIGhpbSBmcm9tIHRoZSBmYXJtIGFueXRoaW5nIHdlIGhhcHBlbiB0byB3YW50IGluIHRoZSBjaXR5LiBJIGRpdmlkZSB0aGUgcmV0dXJuIGhvbWUgYmV0d2VlbiB3YWxraW5nIGFuZCBydW5uaW5nLiBBcnJpdmVkLCBJIGNsZWFuIG15c2VsZiB3aXRoIGEgc3RyaWdpbCwgYW5kIHRoZW4gSSBoYXZlIGx1bmNoZW9uLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIGVhdGluZyBqdXN0IGVub3VnaCB0byBnZXQgdGhyb3VnaCB0aGUgZGF5IG5laXRoZXIgZW1wdHktYmVsbGllZCBub3IgdG9vIGZ1bGwu4oCZCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['11.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVXBvbiBteSB3b3JkLCBJc2Nob21hY2h1cyzigJkgY3JpZWQgSSwg4oCYSSBhbSBkZWxpZ2h0ZWQgd2l0aCB5b3VyIGFjdGl2aXRpZXMuIEZvciB5b3UgaGF2ZSBhIHBhY2sgb2YgYXBwbGlhbmNlcyBmb3Igc2VjdXJpbmcgaGVhbHRoIGFuZCBzdHJlbmd0aCwgb2YgZXhlcmNpc2VzIGZvciB3YXIgYW5kIHNwZWNpZmllcyBmb3IgZ2V0dGluZyByaWNoLCBhbmQgeW91IHVzZSB0aGVtIGFsbCBhdCB0aGUgc2FtZSB0aW1lISBUaGF0IGRvZXMgc2VlbSB0byBtZSBhZG1pcmFibGUhCjwvdHJhbnNsYXRpb24+"
translation['11.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaW4gZmFjdCB5b3UgYWZmb3JkIGNvbnZpbmNpbmcgcHJvb2ZzIHRoYXQgeW91ciBtZXRob2QgaW4gcHVyc3VpbmcgZWFjaCBvZiB0aGVzZSBvYmplY3RzIGlzIHNvdW5kLiBGb3Igd2Ugc2VlIHlvdSBnZW5lcmFsbHkgaW4gdGhlIGVuam95bWVudCBvZiBoZWFsdGggYW5kIHN0cmVuZ3RoLCB0aGFua3MgdG8gdGhlIGdvZHMsIGFuZCB3ZSBrbm93IHRoYXQgeW91IGFyZSBjb25zaWRlcmVkIG9uZSBvZiBvdXIgYmVzdCBob3JzZW1lbiBhbmQgd2VhbHRoaWVzdCBjaXRpemVucy7igJkKICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['11.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQW5kIHdoYXQgY29tZXMgb2YgdGhlc2UgYWN0aXZpdGllcywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+PyBOb3QsIGFzIHlvdSBwZXJoYXBzIGV4cGVjdGVkIHRvIGhlYXIsIHRoYXQgSSBhbSBnZW5lcmFsbHkgZHViYmVkIGEgZ2VudGxlbWFuLCBidXQgdGhhdCBJIGFtIHBlcnNpc3RlbnRseSBzbGFuZGVyZWQu4oCZCiAgICAgICAgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['11.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQWgs4oCZIHNhaWQgSSwg4oCYYnV0IEkgd2FzIG1lYW5pbmcgdG8gYXNrIHlvdSwgSXNjaG9tYWNodXMsIHdoZXRoZXIgeW91IGluY2x1ZGUgaW4geW91ciBzeXN0ZW0gYWJpbGl0eSB0byBjb25kdWN0IGEgcHJvc2VjdXRpb24gYW5kIGRlZmVuY2UsIGluIGNhc2UgeW91IGhhdmUgdG8gYXBwZWFyIGluIHRoZSBjb3VydHM/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFdoeSwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LOKAmSBoZSBhbnN3ZXJlZCwg4oCYZG8geW91IG5vdCBzZWU8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk1lbS48L3RpdGxlPiBJVi4gdmlpaS4gNC48L25vdGU+IHRoYXQgdGhpcyBpcyBqdXN0IHdoYXQgSSBhbSBjb25zdGFudGx5IHByYWN0aXNpbmfigJRzaG93aW5nIG15IHRyYWR1Y2VycyB0aGF0IEkgd3Jvbmcgbm8gbWFuIGFuZCBkbyBhbGwgdGhlIGdvb2QgSSBjYW4gdG8gbWFueT8gQW5kIGRvIHlvdSBub3QgdGhpbmsgdGhhdCBJIHByYWN0aXNlIG15c2VsZiBpbiBhY2N1c2luZywgYnkgdGFraW5nIGNhcmVmdWwgbm90ZSBvZiBjZXJ0YWluIHBlcnNvbnMgd2hvIGFyZSBkb2luZyB3cm9uZyB0byBtYW55IGluZGl2aWR1YWxzIGFuZCB0byB0aGUgc3RhdGUsIGFuZCBhcmUgZG9pbmcgbm8gZ29vZCB0byBhbnlvbmU/4oCZCiAgICAgICAgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TWVtLjwvdGl0bGU+IElWLiB2aWlpLiA0LjwvdHJhbnNsYXRpb24+"
translation['11.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQnV0IHRlbGwgbWUgb25lIHRoaW5nIG1vcmUsIElzY2hvbWFjaHVzLOKAmSBJIHNhaWQ7IOKAmGRvIHlvdSBhbHNvIHByYWN0aXNlIHRoZSBhcnQgb2YgZXhwb3VuZGluZyB0aGVzZSBtYXR0ZXJzP+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXaHksIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPizigJkgaGUgcmVwbGllZCwg4oCYSSBhc3NpZHVvdXNseSBwcmFjdGlzZSB0aGUgYXJ0IG9mIHNwZWFraW5nLiBGb3IgSSBnZXQgb25lIG9mIHRoZSBzZXJ2YW50cyB0byBhY3QgYXMgcHJvc2VjdXRvciBvciBkZWZlbmRhbnQsIGFuZCB0cnkgdG8gY29uZnV0ZSBoaW07IG9yIEkgcHJhaXNlIG9yIGJsYW1lIHNvbWVvbmUgYmVmb3JlIGhpcyBmcmllbmRzOyBvciBJIGFjdCBhcyBwZWFjZS1tYWtlciBiZXR3ZWVuIHNvbWUgb2YgbXkgYWNxdWFpbnRhbmNlcyBieSB0cnlpbmcgdG8gc2hvdyB0aGVtIHRoYXQgaXQgaXMgdG8gdGhlaXIgaW50ZXJlc3QgdG8gYmUgZnJpZW5kcyByYXRoZXIgdGhhbiBlbmVtaWVzLgo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['11.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5JIGFzc2lzdCBhdCBhIGNvdXJ0LW1hcnRpYWwgYW5kIGNlbnN1cmUgYSBzb2xkaWVyLCBvciB0YWtlIHR1cm5zIGluIGRlZmVuZGluZyBhIG1hbiB3aG8gaXMgdW5qdXN0bHkgYmxhbWVkLCBvciBpbiBhY2N1c2luZyBvbmUgd2hvIGlzIHVuanVzdGx5IGhvbm91cmVkLiBXZSBvZnRlbiBzaXQgaW4gY291bnNlbCBhbmQgc3BlYWsgaW4gc3VwcG9ydCBvZiB0aGUgY291cnNlIHdlIHdhbnQgdG8gYWRvcHQgYW5kIGFnYWluc3QgdGhlIGNvdXJzZSB3ZSB3YW50IHRvIGF2b2lkLgogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['11.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5JIGhhdmUgb2Z0ZW4gYmVlbiBzaW5nbGVkIG91dCBiZWZvcmUgbm93LCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIGFuZCBjb25kZW1uZWQgdG8gc3VmZmVyIHB1bmlzaG1lbnQgb3IgcGF5IGRhbWFnZXMu4oCZPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhCeSB3aG9tLCBJc2Nob21hY2h1cz/igJkgSSBhc2tlZDsg4oCYSSBhbSBpbiB0aGUgZGFyayBhYm91dCB0aGF0ISc8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQnkgbXkgd2lmZSzigJkgd2FzIGhpcyBhbnN3ZXIuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmEFuZCwgcHJheSwgaG93IGRvIHlvdSBwbGVhZD/igJkgc2FpZCBJLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhQcmV0dHkgd2VsbCwgd2hlbiBpdCBpcyB0byBteSBpbnRlcmVzdCB0byBzcGVhayB0aGUgdHJ1dGguIEJ1dCB3aGVuIGx5aW5nIGlzIGNhbGxlZCBmb3IsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgSSBjYW4ndCBtYWtlIHRoZSB3b3JzZSBjYXVzZSBhcHBlYXIgdGhlIGJldHRlcuKAlG9oIG5vLCBub3QgYXQgYWxsLuKAmTxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYUGVyaGFwcywgSXNjaG9tYWNodXMs4oCZIEkgY29tbWVudGVkLCDigJh5b3UgY2FuJ3QgbWFrZSB0aGUgZmFsc2Vob29kIGludG8gdGhlIHRydXRoIeKAmeKAnQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['12.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQnV0IHBlcmhhcHMgSSBhbSBrZWVwaW5nIHlvdSwgSXNjaG9tYWNodXMs4oCZIEkgY29udGludWVkLCDigJhhbmQgeW91IHdhbnQgdG8gZ2V0IGF3YXkgbm93P+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhPaCBubywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LOKAmSBoZSBhbnN3ZXJlZDsg4oCYSSBzaG91bGQgbm90IHRoaW5rIG9mIGdvaW5nIGJlZm9yZSB0aGUgbWFya2V0IGVtcHRpZXMu4oCZCiAgICAgICAgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['12.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhUbyBiZSBzdXJlLOKAmSBJIGNvbnRpbnVlZDsg4oCYeW91IHRha2UgdGhlIHV0bW9zdCBjYXJlIG5vdCB0byBmb3JmZWl0IHlvdXIgcmlnaHQgdG8gYmUgY2FsbGVkIGEgZ2VudGxlbWFuISBGb3IgSSBkYXJlc2F5IHRoZXJlIGFyZSBtYW55IHRoaW5ncyBjbGFpbWluZyB5b3VyIGF0dGVudGlvbiBub3c7IGJ1dCwgYXMgeW91IGhhdmUgbWFkZSBhbiBhcHBvaW50bWVudCB3aXRoIHRob3NlIHN0cmFuZ2VycywgeW91IGFyZSBkZXRlcm1pbmVkIG5vdCB0byBicmVhayBpdC7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQnV0IEkgYXNzdXJlIHlvdSwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBJIGFtIG5vdCBuZWdsZWN0aW5nIHRoZSBtYXR0ZXJzIHlvdSByZWZlciB0bywgZWl0aGVyOyBmb3IgSSBrZWVwIGJhaWxpZmYncyBvbiBteSBmYXJtcy7igJkKPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['12.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBbmQgd2hlbiB5b3Ugd2FudCBhIGJhaWxpZmYsIElzY2hvbWFjaHVzLCBkbyB5b3UgbG9vayBvdXQgZm9yIGEgbWFuIHF1YWxpZmllZCBmb3Igc3VjaCBhIHBvc3QsIGFuZCB0aGVuIHRyeSB0byBidXkgaGlt4oCUd2hlbiB5b3Ugd2FudCBhIGJ1aWxkZXIsIEkgZmVlbCBzdXJlIHlvdSBpbnF1aXJlIGZvciBhIHF1YWxpZmllZCBtYW4gYW5kIHRyeSB0byBnZXQgaGlt4oCUb3IgZG8geW91IHRyYWluIHlvdXIgYmFpbGlmZidzIHlvdXJzZWxmP+KAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['12.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhPZiBjb3Vyc2UgSSB0cnkgdG8gdHJhaW4gdGhlbSBteXNlbGYsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPi4gRm9yIHRoZSBtYW4gaGFzIHRvIGJlIGNhcGFibGUgb2YgdGFraW5nIGNoYXJnZSBpbiBteSBhYnNlbmNlOyBzbyB3aHkgbmVlZCBoZSBrbm93IGFueXRoaW5nIGJ1dCB3aGF0IEkga25vdyBteXNlbGY/IEZvciBpZiBJIGFtIGZpdCB0byBtYW5hZ2UgdGhlIGZhcm0sIEkgcHJlc3VtZSBJIGNhbiB0ZWFjaCBhbm90aGVyIG1hbiB3aGF0IEkga25vdyBteXNlbGYu4oCZCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['12.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhUaGVuIHRoZSBmaXJzdCByZXF1aXJlbWVudCB3aWxsIGJlIHRoYXQgaGUgc2hvdWxkIGJlIGxveWFsIHRvIHlvdSBhbmQgeW91cnMsIGlmIGhlIGlzIHRvIHJlcHJlc2VudCB5b3UgaW4geW91ciBhYnNlbmNlLiBGb3IgaWYgYSBzdGV3YXJkIGlzIG5vdCBsb3lhbCwgd2hhdCBpcyB0aGUgZ29vZCBvZiBhbnkga25vd2xlZGdlIGhlIG1heSBwb3NzZXNzP+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhOb25lLCBvZiBjb3Vyc2U7IGJ1dCBJIG1heSB0ZWxsIHlvdSwgbG95YWx0eSB0byBtZSBhbmQgdG8gbWluZSBpcyB0aGUgZmlyc3QgbGVzc29uIEkgdHJ5IHRvIHRlYWNoLuKAmQo8L3RyYW5zbGF0aW9uPg=="
translation['12.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBbmQgaG93LCBpbiBoZWF2ZW4ncyBuYW1lLCBkbyB5b3UgdGVhY2ggeW91ciBtYW4gdG8gYmUgbG95YWwgdG8geW91IGFuZCB5b3Vycz/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQnkgcmV3YXJkaW5nIGhpbSwgb2YgY291cnNlLCB3aGVuZXZlciB0aGUgZ29kcyBiZXN0b3cgc29tZSBnb29kIHRoaW5nIG9uIHVzIGluIGFidW5kYW5jZS7igJkKICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['12.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhZb3UgbWVhbiwgdGhlbiwgdGhhdCB0aG9zZSB3aG8gZW5qb3kgYSBzaGFyZSBvZiB5b3VyIGdvb2QgdGhpbmdzIGFyZSBsb3lhbCB0byB5b3UgYW5kIHdhbnQgeW91IHRvIHByb3NwZXI/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFllcywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBJIGZpbmQgdGhhdCBpcyB0aGUgYmVzdCBpbnN0cnVtZW50IGZvciBwcm9kdWNpbmcgbG95YWx0eS7igJkKPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['12.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhCdXQsIG5vdywgaWYgaGUgaXMgbG95YWwgdG8geW91LCBJc2Nob21hY2h1cywgd2lsbCB0aGF0IGJlIGVub3VnaCB0byBtYWtlIGhpbSBhIGNvbXBldGVudCBiYWlsaWZmPyBEb24ndCB5b3Ugc2VlIHRoYXQgdGhvdWdoIGFsbCBtZW4sIHByYWN0aWNhbGx5LCB3aXNoIHRoZW1zZWx2ZXMgd2VsbCwgeWV0IHRoZXJlIGFyZSBtYW55IHdobyB3b24ndCB0YWtlIHRoZSB0cm91YmxlIHRvIGdldCBmb3IgdGhlbXNlbHZlcyB0aGUgZ29vZCB0aGluZ3MgdGhleSB3YW50IHRvIGhhdmU/4oCZCjwvdHJhbnNsYXRpb24+"
translation['12.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsLCB3aGVuIEkgd2FudCB0byBtYWtlIGJhaWxpZmZzIG9mIHN1Y2ggbWVuLCBvZiBjb3Vyc2UgSSB0ZWFjaCB0aGVtIGFsc28gdG8gYmUgY2FyZWZ1bC7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYUHJheSBob3cgZG8geW91IGRvIHRoYXQ/CiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['12.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5JIHdhcyB1bmRlciB0aGUgaW1wcmVzc2lvbiB0aGF0IGNhcmVmdWxuZXNzIGlzIGEgdmlydHVlIHRoYXQgY2FuJ3QgcG9zc2libHkgYmUgdGF1Z2h0LuKAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhUcnVlLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIGl0IGlzbid0IHBvc3NpYmxlIHRvIHRlYWNoIGV2ZXJ5b25lIHlvdSBjb21lIGFjcm9zcyB0byBiZSBjYXJlZnVsLuKAmQogICAgICAgIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['12.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVmVyeSB3ZWxsOyB3aGF0IHNvcnQgb2YgbWVuIGNhbiBiZSB0YXVnaHQ/IFBvaW50IHRoZXNlIG91dCB0byBtZSwgYXQgYWxsIGV2ZW50cy7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSW4gdGhlIGZpcnN0IHBsYWNlLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIHlvdSBjYW4ndCBtYWtlIGNhcmVmdWwgbWVuIG9mIGhhcmQgZHJpbmtlcnM7IGZvciBkcmluayBtYWtlcyB0aGVtIGZvcmdldCBldmVyeXRoaW5nIHRoZXkgb3VnaHQgdG8gZG8u4oCZCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['12.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVGhlbiBhcmUgZHJ1bmthcmRzIHRoZSBvbmx5IG1lbiB3aG8gd2lsbCBuZXZlciBiZWNvbWUgY2FyZWZ1bCwgb3IgYXJlIHRoZXJlIG90aGVycz/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYT2YgY291cnNlIHRoZXJlIGFyZeKAlHNsdWdnYXJkcyBtdXN0IGJlIGluY2x1ZGVkOyBmb3IgeW91IGNhbid0IGRvIHlvdXIgb3duIGJ1c2luZXNzIHdoZW4geW91IGFyZSBhc2xlZXAsIG5vciBtYWtlIG90aGVycyBkbyB0aGVpcnMu4oCZCjwvdHJhbnNsYXRpb24+"
translation['12.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2VsbCwgdGhlbiwgd2lsbCB0aGVzZSBtYWtlIHVwIHRoZSB0b3RhbCBvZiBwZXJzb25zIGluY2FwYWJsZSBvZiBsZWFybmluZyB0aGlzIGxlc3Nvbiwgb3IgYXJlIHRoZXJlIHlldCBvdGhlcnMgYmVzaWRlcz/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSSBzaG91bGQgYWRkIHRoYXQgaW4gbXkgb3BpbmlvbiBhIG1hbiB3aG8gZmFsbHMgZGVzcGVyYXRlbHkgaW4gbG92ZSBpcyBpbmNhcGFibGUgb2YgZ2l2aW5nIG1vcmUgYXR0ZW50aW9uIHRvIGFueXRoaW5nIHRoYW4gaGUgZ2l2ZXMgdG8gdGhlIG9iamVjdCBvZiBoaXMgcGFzc2lvbi4KPC90cmFuc2xhdGlvbj4="
translation['12.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgaXNuJ3QgZWFzeSB0byBmaW5kIGhvcGUgb3Igb2NjdXBhdGlvbiBtb3JlIGRlbGlnaHRmdWwgdGhhbiBkZXZvdGlvbiB0byB0aGUgZGFybGluZyEgYXllLCBhbmQgd2hlbiB0aGUgdGhpbmcgdG8gYmUgZG9uZSBwcmVzc2VzLCBubyBoYXJkZXIgcHVuaXNobWVudCBjYW4gZWFzaWx5IGJlIHRob3VnaHQgb2YgdGhhbiB0aGUgcHJldmVudGlvbiBvZiBpbnRlcmNvdXJzZSB3aXRoIHRoZSBiZWxvdmVkISBUaGVyZWZvcmUgSSBzaHJpbmsgZnJvbSBhdHRlbXB0aW5nIHRvIG1ha2UgYSBtYW5hZ2VyIG9mIHRoYXQgc29ydCBvZiBtYW4gdG9vLuKAmQo8L3RyYW5zbGF0aW9uPg=="
translation['12.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQW5kIHdoYXQgYWJvdXQgdGhlIG1lbiB3aG8gaGF2ZSBhIHBhc3Npb24gZm9yIGx1Y3JlPyBBcmUgdGhleSBhbHNvIGluY2FwYWJsZSBvZiBiZWluZyB0cmFpbmVkIHRvIHRha2UgY2hhcmdlIG9mIHRoZSB3b3JrIG9mIGEgZmFybT/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYTm90IGF0IGFsbDsgb2YgY291cnNlIG5vdC4gSW4gZmFjdCwgdGhleSB2ZXJ5IGVhc2lseSBxdWFsaWZ5IGZvciB0aGUgd29yay4gSXQgaXMgbWVyZWx5IG5lY2Vzc2FyeSB0byBwb2ludCBvdXQgdG8gdGhlbSB0aGF0IGRpbGlnZW5jZSBpcyBwcm9maXRhYmxlLuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['12.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQW5kIGFzc3VtaW5nIHRoYXQgdGhlIG90aGVycyBhcmUgZnJlZSBmcm9tIHRoZSBmYXVsdHMgdGhhdCB5b3UgY29uZGVtbiBhbmQgYXJlIGNvdmV0b3VzIG9mIGdhaW4gaW4gYSBtb2RlcmF0ZSBkZWdyZWUsIGhvdyBkbyB5b3UgdGVhY2ggdGhlbSB0byBiZSBjYXJlZnVsIGluIHRoZSBhZmZhaXJzIHlvdSB3YW50IHRoZW0gdG8gc3VwZXJpbnRlbmQ/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmEJ5IGEgdmVyeSBzaW1wbGUgcGxhbiwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LiBXaGVuZXZlciBJIG5vdGljZSB0aGF0IHRoZXkgYXJlIGNhcmVmdWwsIEkgY29tbWVuZCB0aGVtIGFuZCB0cnkgdG8gc2hvdyB0aGVtIGhvbm91cjsgYnV0IHdoZW4gdGhleSBhcHBlYXIgY2FyZWxlc3MsIEkgdHJ5IHRvIHNheSBhbmQgZG8gdGhlIHNvcnQgb2YgdGhpbmdzIHRoYXQgd2lsbCBzdGluZyB0aGVtLuKAmQo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['12.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVHVybiBub3csIElzY2hvbWFjaHVzLCBmcm9tIHRoZSBzdWJqZWN0IG9mIHRoZSBtZW4gaW4gdHJhaW5pbmcgZm9yIHRoZSBvY2N1cGF0aW9uLCBhbmQgdGVsbCBtZSBhYm91dCB0aGUgc3lzdGVtOiBpcyBpdCBwb3NzaWJsZSBmb3IgYW55b25lIHRvIG1ha2Ugb3RoZXJzIGNhcmVmdWwgaWYgaGUgaXMgY2FyZWxlc3MgaGltc2VsZj/igJkKPC90cmFuc2xhdGlvbj4="
translation['12.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYT2YgY291cnNlIG5vdDogYW4gdW5tdXNpY2FsIHBlcnNvbiBjb3VsZCBhcyBzb29uIHRlYWNoIG11c2ljLiBGb3IgaXQgaXMgaGFyZCB0byBsZWFybiB0byBkbyBhIHRoaW5nIHdlbGwgd2hlbiB0aGUgdGVhY2hlciBwcm9tcHRzIHlvdSBiYWRseTsgYW5kIHdoZW4gYSBtYXN0ZXIgcHJvbXB0cyBhIHNlcnZhbnQgdG8gYmUgY2FyZWxlc3MsIGl0IGlzIGRpZmZpY3VsdCBmb3IgdGhlIG1hbiB0byBiZWNvbWUgYSBnb29kIHNlcnZhbnQuCjwvdHJhbnNsYXRpb24+"
translation['12.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5UbyBwdXQgaXQgc2hvcnRseSwgSSBkb24ndCB0aGluayBJIGhhdmUgZGlzY292ZXJlZCBhIGJhZCBtYXN0ZXIgd2l0aCBnb29kIHNlcnZhbnRzOiBJIGhhdmUsIGhvd2V2ZXIsIGNvbWUgYWNyb3NzIGEgZ29vZCBtYXN0ZXIgd2l0aCBiYWQgc2VydmFudHPigJRidXQgdGhleSBzdWZmZXJlZCBmb3IgaXQhIElmIHlvdSB3YW50IHRvIG1ha2UgbWVuIGZpdCB0byB0YWtlIGNoYXJnZSwgeW91IG11c3Qgc3VwZXJ2aXNlIHRoZWlyIHdvcmsgYW5kIGV4YW1pbmUgaXQsIGFuZCBiZSByZWFkeSB0byByZXdhcmQgd29yayB3ZWxsIGNhcnJpZWQgdGhyb3VnaCwgYW5kIG5vdCBzaHJpbmsgZnJvbSBwdW5pc2hpbmcgY2FyZWxlc3NuZXNzIGFzIGl0IGRlc2VydmVzLgogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['12.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5JIGxpa2UgdGhlIGFuc3dlciB0aGF0IGlzIGF0dHJpYnV0ZWQgdG8gdGhlIFBlcnNpYW4uIFRoZSBraW5nLCB5b3Uga25vdywgaGFkIGhhcHBlbmVkIG9uIGEgZ29vZCBob3JzZSwgYW5kIHdhbnRlZCB0byBmYXR0ZW4gaGltIGFzIHNwZWVkaWx5IGFzIHBvc3NpYmxlLiBTbyBoZSBhc2tlZCBvbmUgd2hvIHdhcyByZXB1dGVkIGNsZXZlciB3aXRoIGhvcnNlcyB3aGF0IGlzIHRoZSBxdWlja2VzdCB3YXkgb2YgZmF0dGVuaW5nIGEgaG9yc2UuIOKAnFRoZSBtYXN0ZXIncyBleWUs4oCdIHJlcGxpZWQgdGhlIG1hbi4gSSB0aGluayB3ZSBtYXkgYXBwbHkgdGhlIGFuc3dlciBnZW5lcmFsbHksIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgYW5kIHNheSB0aGF0IHRoZSBtYXN0ZXIncyBleWUgaW4gdGhlIG1haW4gZG9lcyB0aGUgZ29vZCBhbmQgd29ydGh5IHdvcmsu4oCZ4oCdCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['13.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2hlbiB5b3UgaGF2ZSBpbXByZXNzZWQgb24gYSBtYW4s4oCZIEkgcmVzdW1lZCwg4oCYdGhlIG5lY2Vzc2l0eSBvZiBjYXJlZnVsIGF0dGVudGlvbiB0byB0aGUgZHV0aWVzIHlvdSBhc3NpZ24gdG8gaGltLCB3aWxsIGhlIHRoZW4gYmUgY29tcGV0ZW50IHRvIGFjdCBhcyBiYWlsaWZmLCBvciBtdXN0IGhlIGxlYXJuIHNvbWV0aGluZyBiZXNpZGVzLCBpZiBoZSBpcyB0byBiZSBlZmZpY2llbnQ/4oCZCjwvdHJhbnNsYXRpb24+"
translation['13.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhPZiBjb3Vyc2Us4oCZIGFuc3dlcmVkIElzY2hvbWFjaHVzLCDigJhoZSBoYXMgc3RpbGwgdG8gdW5kZXJzdGFuZCB3aGF0IGhlIGhhcyB0byBkbywgYW5kIHdoZW4gYW5kIGhvdyB0byBkbyBpdC4gT3RoZXJ3aXNlIGhvdyBjb3VsZCBhIGJhaWxpZmYgYmUgb2YgbW9yZSB1c2UgdGhhbiBhIGRvY3RvciB3aG8gdGFrZXMgY2FyZSB0byB2aXNpdCBhIHBhdGllbnQgZWFybHkgYW5kIGxhdGUsIGJ1dCBoYXMgbm8gbm90aW9uIG9mIHRoZSByaWdodCB3YXkgdG8gdHJlYXQgaGlzIGlsbG5lc3M/4oCZCjwvdHJhbnNsYXRpb24+"
translation['13.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsLCBidXQgc3VwcG9zZSBoZSBoYXMgbGVhcm5lZCBob3cgZmFybS13b3JrIGlzIHRvIGJlIGRvbmUsIHdpbGwgaGUgd2FudCBzb21ldGhpbmcgbW9yZSB5ZXQsIG9yIHdpbGwgeW91ciBtYW4gbm93IGJlIGEgcGVyZmVjdCBiYWlsaWZmP+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhJIHRoaW5rIGhlIG11c3QgbGVhcm4gdG8gcnVsZSB0aGUgbGFib3VyZXJzLuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['13.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBbmQgZG8geW91IHRyYWluIHlvdXIgYmFpbGlmZnMgdG8gYmUgY29tcGV0ZW50IHRvIHJ1bGUgdG9vP+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhZZXMsIEkgdHJ5LCBhbnlob3cu4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmEFuZCBwcmF5IHRlbGwgbWUgaG93IHlvdSB0cmFpbiB0aGVtIHRvIGJlIHJ1bGVycyBvZiBtZW4u4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmEJ5IGEgY2hpbGRpc2hseSBlYXN5IG1ldGhvZCwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LiBJIGRhcmVzYXkgeW91J2xsIGxhdWdoIGlmIEkgdGVsbCB5b3Uu4oCZCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['13.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhPaCwgYnV0IGl0IGlzIGNlcnRhaW5seSBub3QgYSBsYXVnaGluZyBtYXR0ZXIsIElzY2hvbWFjaHVzLiBGb3IgYW55b25lIHdobyBjYW4gbWFrZSBtZW4gZml0IHRvIHJ1bGUgb3RoZXJzIGNhbiBhbHNvIHRlYWNoIHRoZW0gdG8gYmUgbWFzdGVycyBvZiBvdGhlcnM7IGFuZCBpZiBoZSBjYW4gbWFrZSB0aGVtIGZpdCB0byBiZSBtYXN0ZXJzLCBoZSBjYW4gbWFrZSB0aGVtIGZpdCB0byBiZSBraW5ncy4gU28gYW55b25lIHdobyBjYW4gZG8gdGhhdCBzZWVtcyB0byBtZSB0byBkZXNlcnZlIGhpZ2ggcHJhaXNlIHJhdGhlciB0aGFuIGxhdWdodGVyLuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['13.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsIG5vdywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBvdGhlciBjcmVhdHVyZXMgbGVhcm4gb2JlZGllbmNlIGluIHR3byB3YXlz4oCUYnkgYmVpbmcgcHVuaXNoZWQgd2hlbiB0aGV5IHRyeSB0byBkaXNvYmV5LCBhbmQgYnkgYmVpbmcgcmV3YXJkZWQgd2hlbiB0aGV5IGFyZSBlYWdlciB0byBzZXJ2ZSB5b3UuCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['13.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkNvbHRzLCBmb3IgZXhhbXBsZSwgbGVhcm4gdG8gb2JleSB0aGUgaG9yc2VicmVha2VyIGJ5IGdldHRpbmcgc29tZXRoaW5nIHRoZXkgbGlrZSB3aGVuIHRoZXkgYXJlIG9iZWRpZW50LCBhbmQgc3VmZmVyaW5nIGluY29udmVuaWVuY2Ugd2hlbiB0aGV5IGFyZSBkaXNvYmVkaWVudCwgdW50aWwgdGhleSBjYXJyeSBvdXQgdGhlIGhvcnNlYnJlYWtlcidzIGludGVudGlvbnMuCjwvdHJhbnNsYXRpb24+"
translation['13.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlB1cHBpZXMsIGFnYWluLCBhcmUgbXVjaCBpbmZlcmlvciB0byBtZW4gaW4gaW50ZWxsaWdlbmNlIGFuZCBwb3dlciBvZiBleHByZXNzaW9uOyBhbmQgeWV0IHRoZXkgbGVhcm4gdG8gcnVuIGluIGNpcmNsZXMgYW5kIHR1cm4gc29tZXJzYXVsdHMgYW5kIGRvIG1hbnkgb3RoZXIgdHJpY2tzIGluIHRoZSBzYW1lIHdheTsgZm9yIHdoZW4gdGhleSBvYmV5IHRoZXkgZ2V0IHNvbWV0aGluZyB0aGF0IHRoZXkgd2FudCwgYW5kIHdoZW4gdGhleSBhcmUgY2FyZWxlc3MsIHRoZXkgYXJlIHB1bmlzaGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['13.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBtZW4gY2FuIGJlIG1hZGUgbW9yZSBvYmVkaWVudCBieSB3b3JkIG9mIG1vdXRoIG1lcmVseSwgYnkgYmVpbmcgc2hvd24gdGhhdCBpdCBpcyBnb29kIGZvciB0aGVtIHRvIG9iZXkuIEJ1dCBpbiBkZWFsaW5nIHdpdGggc2xhdmVzIHRoZSB0cmFpbmluZyB0aG91Z2h0IHN1aXRhYmxlIGZvciB3aWxkIGFuaW1hbHMgaXMgYWxzbyBhIHZlcnkgZWZmZWN0aXZlIHdheSBvZiB0ZWFjaGluZyBvYmVkaWVuY2U7IGZvciB5b3Ugd2lsbCBkbyBtdWNoIHdpdGggdGhlbSBieSBmaWxsaW5nIHRoZWlyIGJlbGxpZXMgd2l0aCB0aGUgZm9vZCB0aGV5IGhhbmtlciBhZnRlci4gVGhvc2Ugb2YgYW4gYW1iaXRpb3VzIGRpc3Bvc2l0aW9uIGFyZSBhbHNvIHNwdXJyZWQgb24gYnkgcHJhaXNlLCBzb21lIG5hdHVyZXMgYmVpbmcgaHVuZ3J5IGZvciBwcmFpc2UgYXMgb3RoZXJzIGZvciBtZWF0IGFuZCBkcmluay4KPC90cmFuc2xhdGlvbj4="
translation['13.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlc2UgYXJlIHByZWNpc2VseSB0aGUgdGhpbmdzIHRoYXQgSSBkbyBteXNlbGYgd2l0aCBhIHZpZXcgdG8gbWFraW5nIG1lbiBtb3JlIG9iZWRpZW50OyBidXQgdGhleSBhcmUgbm90IHRoZSBvbmx5IGxlc3NvbnMgSSBnaXZlIHRvIHRob3NlIHdob20gSSB3YW50IHRvIGFwcG9pbnQgbXkgYmFpbGlmZnMuIEkgaGF2ZSBvdGhlciB3YXlzIG9mIGhlbHBpbmcgdGhlbSBvbi4gRm9yIHRoZSBjbG90aGVzIHRoYXQgSSBtdXN0IHByb3ZpZGUgZm9yIG15IHdvcmstcGVvcGxlIGFuZCB0aGUgc2hvZXMgYXJlIG5vdCBhbGwgYWxpa2UuIFNvbWUgYXJlIGJldHRlciB0aGFuIG90aGVycywgc29tZSB3b3JzZSwgaW4gb3JkZXIgdGhhdCBJIG1heSByZXdhcmQgdGhlIGJldHRlciBzZXJ2YW50IHdpdGggdGhlIHN1cGVyaW9yIGFydGljbGVzLCBhbmQgZ2l2ZSB0aGUgaW5mZXJpb3IgdGhpbmdzIHRvIHRoZSBsZXNzIGRlc2VydmluZy4KICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['13.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgSSB0aGluayBpdCBpcyB2ZXJ5IGRpc2hlYXJ0ZW5pbmcgdG8gZ29vZCBzZXJ2YW50cywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCB3aGVuIHRoZXkgc2VlIHRoYXQgdGhleSBkbyBhbGwgdGhlIHdvcmssIGFuZCBvdGhlcnMgd2hvIGFyZSBub3Qgd2lsbGluZyB0byB3b3JrIGhhcmQgYW5kIHJ1biByaXNrcyB3aGVuIG5lZWQgYmUsIGdldCB0aGUgc2FtZSBhcyB0aGV5LgogICAgICAgIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['13.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgbXkgcGFydCwgdGhlbiwgSSBkb24ndCBjaG9vc2UgdG8gcHV0IHRoZSBkZXNlcnZpbmcgb24gYSBsZXZlbCB3aXRoIHRoZSB3b3J0aGxlc3MsIGFuZCB3aGVuIEkga25vdyB0aGF0IG15IGJhaWxpZmZzIGhhdmUgZGlzdHJpYnV0ZWQgdGhlIGJlc3QgdGhpbmdzIHRvIHRoZSBtb3N0IGRlc2VydmluZywgSSBjb21tZW5kIHRoZW07IGFuZCBpZiBJIHNlZSB0aGF0IGZsYXR0ZXJ5IG9yIGFueSBvdGhlciBmdXRpbGUgc2VydmljZSB3aW5zIHNwZWNpYWwgZmF2b3VyLCBJIGRvbid0IG92ZXJsb29rIGl0LCBidXQgcmVwcm92ZSB0aGUgYmFpbGlmZiwgYW5kIHRyeSB0byBzaG93IGhpbSwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCB0aGF0IHN1Y2ggZmF2b3VyaXRpc20gaXMgbm90IGV2ZW4gaW4gaGlzIG93biBpbnRlcmVzdC7igJnigJ0KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['14.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYTm93LCBJc2Nob21hY2h1cyzigJkgc2FpZCBJLCDigJh3aGVuIHlvdSBmaW5kIHlvdXIgbWFuIHNvIGNvbXBldGVudCB0byBydWxlIHRoYXQgaGUgY2FuIG1ha2UgdGhlbSBvYmVkaWVudCwgZG8geW91IHRoaW5rIGhpbSBhIHBlcmZlY3QgYmFpbGlmZiwgb3IgZG9lcyBoZSB3YW50IGFueXRoaW5nIGVsc2UsIGV2ZW4gd2l0aCB0aGUgcXVhbGlmaWNhdGlvbnMgeW91IGhhdmUgbWVudGlvbmVkP+KAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['14.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhPZiBjb3Vyc2UsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPizigJkgcmV0dXJuZWQgSXNjaG9tYWNodXMsIOKAmGhlIG11c3QgYmUgaG9uZXN0IGFuZCBub3QgdG91Y2ggaGlzIG1hc3RlcidzIHByb3BlcnR5LiBGb3IgaWYgdGhlIG1hbiB3aG8gaGFuZGxlcyB0aGUgY3JvcHMgZGFyZXMgdG8gbWFrZSBhd2F5IHdpdGggdGhlbSwgYW5kIGRvZXNuJ3QgbGVhdmUgZW5vdWdoIHRvIGdpdmUgYSBwcm9maXQgb24gdGhlIHVuZGVydGFraW5nLCB3aGF0IGdvb2QgY2FuIGNvbWUgb2YgZmFybWluZyB1bmRlciBoaXMgbWFuYWdlbWVudD/igJkKPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['14.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhUaGVuIGRvIHlvdSB0YWtlIGl0IG9uIHlvdXJzZWxmIHRvIHRlYWNoIHRoaXMga2luZCBvZiBqdXN0aWNlIHRvbz/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQ2VydGFpbmx5OiBJIGRvbid0IGZpbmQsIGhvd2V2ZXIsIHRoYXQgYWxsIHJlYWRpbHkgcGF5IGhlZWQgdG8gdGhpcyBsZXNzb24uCjwvdHJhbnNsYXRpb24+"
translation['14.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk5ldmVydGhlbGVzcyBJIGd1aWRlIHRoZSBzZXJ2YW50cyBpbnRvIHRoZSBwYXRoIG9mIGp1c3RpY2Ugd2l0aCB0aGUgYWlkIG9mIG1heGltcyBkcmF3biBmcm9tIHRoZSBsYXdzIG9mIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5EcmFjbzwvc3VybmFtZT48L3BlcnNOYW1lPiBhbmQgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPkRyYWNvPC9zdXJuYW1lPjxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2xvbjwvc3VybmFtZT48L3BlcnNOYW1lPi4gRm9yIGl0IHNlZW1zIHRvIG1lIHRoYXQgdGhlc2UgZmFtb3VzIG1lbiBlbmFjdGVkIG1hbnkgb2YgdGhlaXIgbGF3cyB3aXRoIGFuIGV5ZSBvbiB0aGlzIHBhcnRpY3VsYXIga2luZCBvZiBqdXN0aWNlLgo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29sb248L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['14.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkZvciBpdCBpcyB3cml0dGVuOiDigJx0aGlldmVzIHNoYWxsIGJlIGZpbmVkIGZvciB0aGVpciB0aGVmdHMs4oCdIGFuZCDigJxhbnlvbmUgZ3VpbHR5IG9mIGF0dGVtcHQgc2hhbGwgYmUgaW1wcmlzb25lZCBpZiB0YWtlbiBpbiB0aGUgYWN0LCBhbmQgcHV0IHRvIGRlYXRoLuKAnTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGlzIGlzIG5laXRoZXIgYSBjbGVhciBub3IgYW4gZXhhY3Qgc3RhdGVtZW50IG9mIHRoZSBsYXcgYXR0cmlidXRlZCB0byBTb2xvbiBpbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJEZW0uIDI0LjExMyIgdmFsaWQ9InllcyI+RGVtLiAyNC4xMTM8L2JpYmw+OyBhbmQgc29tZSBzdXNwZWN0IGEgY29ycnVwdGlvbiBpbiB0aGUgdGV4dC48L25vdGU+IFRoZSBvYmplY3Qgb2YgdGhlc2UgZW5hY3RtZW50cyB3YXMgY2xlYXJseSB0byBtYWtlIGNvdmV0b3VzbmVzcyB1bnByb2ZpdGFibGUgdG8gdGhlIG9mZmVuZGVyLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJEZW0uIDI0LjExMyIgdmFsaWQ9InllcyI+RGVtLiAyNC4xMTM8L2JpYmw+OyBhbmQgc29tZSBzdXNwZWN0IGEgY29ycnVwdGlvbiBpbiB0aGUgdGV4dC48L3RyYW5zbGF0aW9uPg=="
translation['14.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkJ5IGFwcGx5aW5nIHNvbWUgb2YgdGhlc2UgY2xhdXNlcyBhbmQgb3RoZXIgZW5hY3RtZW50cyBmb3VuZCBpbiB0aGUgUGVyc2lhbiBraW5nJ3MgY29kZSwgSSB0cnkgdG8gbWFrZSBteSBzZXJ2YW50cyB1cHJpZ2h0IGluIHRoZSBtYXR0ZXJzIHRoYXQgcGFzcyB0aHJvdWdoIHRoZWlyIGhhbmRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['14.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkZvciB3aGlsZSB0aG9zZSBsYXdzIG9ubHkgcGVuYWxpc2UgdGhlIHdyb25nZG9lciw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TWVtPC90aXRsZT4uIElJSS4gaXYuIDguPC9ub3RlPiB0aGUga2luZydzIGNvZGUgbm90IG9ubHkgcHVuaXNoZXMgdGhlIGd1aWx0eSwgYnV0IGFsc28gYmVuZWZpdHMgdGhlIHVwcmlnaHQuIFRodXMsIHNlZWluZyB0aGF0IHRoZSBob25lc3QgZ3JvdyByaWNoZXIgdGhhbiB0aGUgZGlzaG9uZXN0LCBtYW55LCBkZXNwaXRlIHRoZWlyIGxvdmUgb2YgbHVjcmUsIGFyZSBjYXJlZnVsIHRvIHJlbWFpbiBmcmVlIGZyb20gZGlzaG9uZXN0eS4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TWVtPC90aXRsZT4uIElJSS4gaXYuIDguPC90cmFuc2xhdGlvbj4="
translation['14.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBpZiBJIGZpbmQgYW55IGF0dGVtcHRpbmcgdG8gcGVyc2lzdCBpbiBkaXNob25lc3R5LCBhbHRob3VnaCB0aGV5IGFyZSB3ZWxsIHRyZWF0ZWQsIEkgcmVnYXJkIHRoZW0gYXMgaW5jb3JyaWdpYmx5IGdyZWVkeSwgYW5kIGhhdmUgbm90aGluZyBtb3JlIHRvIGRvIHdpdGggdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['14.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBvdGhlciBoYW5kLCBpZiBJIGRpc2NvdmVyIHRoYXQgYSBtYW4gaXMgaW5jbGluZWQgdG8gYmUgaG9uZXN0IG5vdCBvbmx5IGJlY2F1c2UgaGUgZ2FpbnMgYnkgaGlzIGhvbmVzdHksIGJ1dCBhbHNvIGZyb20gYSBkZXNpcmUgdG8gd2luIG15IGFwcHJvYmF0aW9uLCBJIHRyZWF0IGhpbSBsaWtlIGEgZnJlZSBtYW4gYnkgbWFraW5nIGhpbSByaWNoOyBhbmQgbm90IG9ubHkgc28sIGJ1dCBJIGhvbm91ciBoaW0gYXMgYSBnZW50bGVtYW4uCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['14.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgSSB0aGluaywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCB0aGF0IHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gYW1iaXRpb24gYW5kIGdyZWVkIGNvbnNpc3RzIGluIHRoaXMsIHRoYXQgZm9yIHRoZSBzYWtlIG9mIHByYWlzZSBhbmQgaG9ub3VyIHRoZSBhbWJpdGlvdXMgYXJlIHdpbGxpbmcgdG8gd29yayBwcm9wZXJseSwgdG8gdGFrZSByaXNrcyBhbmQgcmVmcmFpbiBmcm9tIGRpc2hvbmVzdCBnYWluLuKAmeKAnQo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['15.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2VsbCwgd2VsbCwgSSB3b24ndCBnbyBvbiB0byBhc2sgd2hldGhlciBhbnl0aGluZyBtb3JlIGlzIHdhbnRpbmcgdG8geW91ciBtYW4sIGFmdGVyIHlvdSBoYXZlIGltcGxhbnRlZCBpbiBoaW0gYSBkZXNpcmUgZm9yIHlvdXIgcHJvc3Blcml0eSBhbmQgaGF2ZSBtYWRlIGhpbSBhbHNvIGNhcmVmdWwgdG8gc2VlIHRoYXQgeW91IGFjaGlldmUgaXQsIGFuZCBoYXZlIG9idGFpbmVkIGZvciBoaW0sIGJlc2lkZXMsIHRoZSBrbm93bGVkZ2UgbmVlZGZ1bCB0byBlbnN1cmUgdGhhdCBldmVyeSBwaWVjZSBvZiB3b3JrIGRvbmUgc2hhbGwgYWRkIHRvIHRoZSBwcm9maXRzLCBhbmQsIGZ1cnRoZXIsIGhhdmUgbWFkZSBoaW0gY2FwYWJsZSBvZiBydWxpbmcsIGFuZCB3aGVuLCBiZXNpZGVzIGFsbCB0aGlzLCBoZSB0YWtlcyBhcyBtdWNoIGRlbGlnaHQgaW4gcHJvZHVjaW5nIGhlYXZ5IGNyb3BzIGZvciB5b3UgaW4gZHVlIHNlYXNvbiBhcyB5b3Ugd291bGQgdGFrZSBpZiB5b3UgZGlkIHRoZSB3b3JrIHlvdXJzZWxmLiBGb3IgaXQgc2VlbXMgdG8gbWUgdGhhdCBhIG1hbiBsaWtlIHRoYXQgd291bGQgbWFrZSBhIHZlcnkgdmFsdWFibGUgYmFpbGlmZi4gTmV2ZXJ0aGVsZXNzLCBJc2Nob21hY2h1cywgZG9uJ3QgbGVhdmUgYSBnYXAgaW4gdGhhdCBwYXJ0IG9mIHRoZSBzdWJqZWN0IHRvIHdoaWNoIHdlIGhhdmUgZ2l2ZW4gdGhlIG1vc3QgY3Vyc29yeSBhdHRlbnRpb24u4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFdoaWNoIGlzIGl0P+KAmSBhc2tlZCBJc2Nob21hY2h1cy4KPC90cmFuc2xhdGlvbj4="
translation['15.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhZb3Ugc2FpZCwgeW91IGtub3csIHRoYXQgdGhlIGdyZWF0ZXN0IGxlc3NvbiB0byBsZWFybiBpcyBob3cgdGhpbmdzIG91Z2h0IHRvIGJlIGRvbmU7IGFuZCBhZGRlZCB0aGF0LCBpZiBhIG1hbiBpcyBpZ25vcmFudCB3aGF0IHRvIGRvIGFuZCBob3cgdG8gZG8gaXQsIG5vIGdvb2QgY2FuIGNvbWUgb2YgaGlzIG1hbmFnZW1lbnQu4oCZCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['15.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIGhlIHNhaWQsIOKAmDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgYXJlIHlvdSBpbnNpc3Rpbmcgbm93IHRoYXQgSSBzaG91bGQgdGVhY2ggdGhlIHdob2xlIGFydCBhbmQgbXlzdGVyeSBvZiBhZ3JpY3VsdHVyZT/igJk8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFllcyzigJkgc2FpZCBJOyDigJhmb3IgbWF5YmUgaXQgaXMganVzdCB0aGlzIHRoYXQgbWFrZXMgcmljaCBtZW4gb2YgdGhvc2Ugd2hvIHVuZGVyc3RhbmQgaXQsIGFuZCBjb25kZW1ucyB0aGUgaWdub3JhbnQgdG8gYSBsaWZlIG9mIHBlbnVyeSwgZm9yIGFsbCB0aGVpciB0b2lsLuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['15.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIHlvdSBzaGFsbCBub3cgaGVhciBob3cga2luZGx5IGEgdGhpbmcgaXMgdGhpcyBhcnQuIEhlbHBmdWwsIHBsZWFzYW50LCBob25vdXJhYmxlLCBkZWFyIHRvIGdvZHMgYW5kIG1lbiBpbiB0aGUgaGlnaGVzdCBkZWdyZWUsIGl0IGlzIGFsc28gaW4gdGhlIGhpZ2hlc3QgZGVncmVlIGVhc3kgdG8gbGVhcm4uIE5vYmxlIHF1YWxpdGllcyBzdXJlbHkhIEFzIHlvdSBrbm93LCB3ZSBjYWxsIHRob3NlIGNyZWF0dXJlcyBub2JsZSB0aGF0IGFyZSBiZWF1dGlmdWwsIGdyZWF0IGFuZCBoZWxwZnVsLCBhbmQgeWV0IGdlbnRsZSB0b3dhcmRzIG1lbi7igJkKPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['15.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBaCwgYnV0IEkgdGhpbmssIElzY2hvbWFjaHVzLCB0aGF0IEkgcXVpdGUgdW5kZXJzdGFuZCB5b3VyIGFjY291bnQgb2YgdGhlc2UgbWF0dGVyc+KAlEkgbWVhbiBob3cgdG8gdGVhY2ggYSBiYWlsaWZmOyBmb3IgSSB0aGluayBJIGZvbGxvdyB5b3VyIHN0YXRlbWVudCB0aGF0IHlvdSBtYWtlIGhpbSBsb3lhbCB0byB5b3UsIGFuZCBjYXJlZnVsIGFuZCBjYXBhYmxlIG9mIHJ1bGluZyBhbmQgaG9uZXN0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['15.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB5b3Ugc2FpZCB0aGF0IG9uZSB3aG8gaXMgdG8gYmUgc3VjY2Vzc2Z1bCBpbiB0aGUgbWFuYWdlbWVudCBvZiBhIGZhcm0gbXVzdCBsZWFybiB3aGF0IHRvIGRvIGFuZCBob3cgYW5kIHdoZW4gdG8gZG8gaXQuIFRoYXQgaXMgdGhlIHN1YmplY3QgdGhhdCB3ZSBoYXZlIHRyZWF0ZWQsIGl0IHNlZW1zIHRvIG1lLCBpbiBhIHJhdGhlciBjdXJzb3J5IGZhc2hpb24sCjwvdHJhbnNsYXRpb24+"
translation['15.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPmFzIGlmIHlvdSBzYWlkIHRoYXQgYW55b25lIHdobyBpcyB0byBiZSBjYXBhYmxlIG9mIHdyaXRpbmcgZnJvbSBkaWN0YXRpb24gYW5kIHJlYWRpbmcgd2hhdCBpcyB3cml0dGVuIG11c3Qga25vdyB0aGUgYWxwaGFiZXQuIEZvciBoYWQgSSBiZWVuIHRvbGQgdGhhdCwgSSBzaG91bGQgaGF2ZSBiZWVuIHRvbGQsIHRvIGJlIHN1cmUsIHRoYXQgSSBtdXN0IGtub3cgdGhlIGFscGhhYmV0LCBidXQgSSBkb24ndCB0aGluayB0aGF0IHBpZWNlIG9mIGluZm9ybWF0aW9uIHdvdWxkIGhlbHAgbWUgdG8ga25vdyBpdC4KPC90cmFuc2xhdGlvbj4="
translation['15.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlNvIHRvbyBub3c7IEkgYW0gZWFzaWx5IGNvbnZpbmNlZCB0aGF0IGEgbWFuIHdobyBpcyB0byBtYW5hZ2UgYSBmYXJtIHN1Y2Nlc3NmdWxseSBtdXN0IHVuZGVyc3RhbmQgZmFybWluZywgYnV0IHRoYXQga25vd2xlZGdlIGRvZXNuJ3QgaGVscCBtZSB0byB1bmRlcnN0YW5kIGhvdyB0byBmYXJtLgo8L3RyYW5zbGF0aW9uPg=="
translation['15.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPldlcmUgSSB0byBkZWNpZGUgdGhpcyB2ZXJ5IG1vbWVudCB0byBiZSBhIGZhcm1lciwgSSB0aGluayBJIHNob3VsZCBiZSBsaWtlIHRoYXQgZG9jdG9yIHdobyBnb2VzIHJvdW5kIHZpc2l0aW5nIHRoZSBzaWNrLCBidXQgaGFzIG5vIGtub3dsZWRnZSBvZiB0aGUgcmlnaHQgd2F5IHRvIHRyZWF0IHRoZW0uIFRoZXJlZm9yZSwgdGhhdCBJIG1heSBub3QgYmUgbGlrZSBoaW0sIHlvdSBtdXN0IHRlYWNoIG1lIHRoZSBhY3R1YWwgb3BlcmF0aW9ucyBvZiBmYXJtaW5nLuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['15.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2h5LCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIGZhcm1pbmcgaXMgbm90IHRyb3VibGVzb21lIHRvIGxlYXJuLCBsaWtlIG90aGVyIGFydHMsIHdoaWNoIHRoZSBwdXBpbCBtdXN0IHN0dWR5IHRpbGwgaGUgaXMgd29ybiBvdXQgYmVmb3JlIGhlIGNhbiBlYXJuIGhpcyBrZWVwIGJ5IGhpcyB3b3JrLiBTb21lIHRoaW5ncyB5b3UgY2FuIHVuZGVyc3RhbmQgYnkgd2F0Y2hpbmcgbWVuIGF0IHdvcmssIG90aGVycyBieSBqdXN0IGJlaW5nIHRvbGQsIHdlbGwgZW5vdWdoIHRvIHRlYWNoIGFub3RoZXIgaWYgeW91IHdpc2guIEFuZCBJIGJlbGlldmUgdGhhdCB5b3Uga25vdyBhIGdvb2QgZGVhbCBhYm91dCBpdCB5b3Vyc2VsZiwgd2l0aG91dCBiZWluZyBhd2FyZSBvZiB0aGUgZmFjdC4KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['15.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgdHJ1dGggaXMgdGhhdCwgd2hlcmVhcyBvdGhlciBhcnRpc3RzIGNvbmNlYWwgbW9yZSBvciBsZXNzIHRoZSBtb3N0IGltcG9ydGFudCBwb2ludHMgaW4gdGhlaXIgb3duIGFydCwgdGhlIGZhcm1lciB3aG8gcGxhbnRzIGJlc3QgaXMgbW9zdCBwbGVhc2VkIHdoZW4gaGUgaXMgYmVpbmcgd2F0Y2hlZCwgc28gaXMgaGUgd2hvIHNvd3MgYmVzdC4gUXVlc3Rpb24gaGltIGFib3V0IGFueSBwaWVjZSBvZiB3b3JrIHdlbGwgZG9uZTogYW5kIGhlIHdpbGwgdGVsbCB5b3UgZXhhY3RseSBob3cgaGUgZGlkIGl0LgogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['15.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5TbyBmYXJtaW5nLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIG1vcmUgdGhhbiBhbnkgb3RoZXIgY2FsbGluZywgc2VlbXMgdG8gcHJvZHVjZSBhIGdlbmVyb3VzIGRpc3Bvc2l0aW9uIGluIGl0cyBmb2xsb3dlcnMu4oCZCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['15.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQW4gZXhjZWxsZW50IHByZWFtYmxlLOKAmSBJIGNyaWVkLCDigJhhbmQgbm90IG9mIGEgc29ydCB0byBkYW1wIHRoZSBoZWFyZXIncyBjdXJpb3NpdHkuIENvbWUsIGRlc2NyaWJlIGl0IHRvIG1lLCBhbGwgdGhlIG1vcmUgYmVjYXVzZSBpdCBpcyBzbyBzaW1wbGUgdG8gbGVhcm4uIEZvciBpdCBpcyBubyBkaXNncmFjZSB0byB5b3UgdG8gdGVhY2ggZWxlbWVudGFyeSBsZXNzb25zLCBidXQgZmFyIG1vcmUgYSBkaXNncmFjZSB0byBtZSBub3QgdG8gdW5kZXJzdGFuZCB0aGVtLCBlc3BlY2lhbGx5IGlmIHRoZXkgYXJlIHJlYWxseSB1c2VmdWwu4oCZ4oCdCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['16.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYRmlyc3QgdGhlbiwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBJIHdhbnQgdG8gc2hvdyB5b3UgdGhhdCB3aGF0IGlzIGNhbGxlZCB0aGUgbW9zdCBjb21wbGljYXRlZCBwcm9ibGVtIGluIGFncmljdWx0dXJlIGJ5IHRoZSBhdXRob3JzIHdobyB3cml0ZSBtb3N0IGFjY3VyYXRlbHkgb24gdGhlIHRoZW9yeSBvZiB0aGUgc3ViamVjdCwgYnV0IGFyZSBub3QgcHJhY3RpY2FsIGZhcm1lcnMsIGlzIHJlYWxseSBhIHNpbXBsZSBtYXR0ZXIuCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['16.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGV5IHRlbGwgdXMgdGhhdCB0byBiZSBhIHN1Y2Nlc3NmdWwgZmFybWVyIG9uZSBtdXN0IGZpcnN0IGtub3cgdGhlIG5hdHVyZSBvZiB0aGUgc29pbC7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWWVzLCBhbmQgdGhleSBhcmUgcmlnaHQs4oCZIEkgcmVtYXJrZWQ7IOKAmGZvciBpZiB5b3UgZG9uJ3Qga25vdyB3aGF0IHRoZSBzb2lsIGlzIGNhcGFibGUgb2YgZ3Jvd2luZywgeW91IGNhbid0IGtub3csIEkgc3VwcG9zZSwgd2hhdCB0byBwbGFudCBvciB3aGF0IHRvIHNvdy7igJkKPC90cmFuc2xhdGlvbj4="
translation['16.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsIHRoZW4s4oCZIHNhaWQgSXNjaG9tYWNodXMsIOKAmHlvdSBjYW4gdGVsbCBieSBsb29raW5nIGF0IHRoZSBjcm9wcyBhbmQgdHJlZXMgb24gYW5vdGhlciBtYW4ncyBsYW5kIHdoYXQgdGhlIHNvaWwgY2FuIGFuZCB3aGF0IGl0IGNhbm5vdCBncm93LiBCdXQgd2hlbiB5b3UgaGF2ZSBmb3VuZCBvdXQsIGl0IGlzIHVzZWxlc3MgdG8gZmlnaHQgYWdhaW5zdCB0aGUgZ29kcy4gRm9yIHlvdSBhcmUgbm90IGxpa2VseSB0byBnZXQgYSBiZXR0ZXIgeWllbGQgZnJvbSB0aGUgbGFuZCBieSBzb3dpbmcgYW5kIHBsYW50aW5nIHdoYXQgeW91IHdhbnQgaW5zdGVhZCBvZiB0aGUgY3JvcHMgYW5kIHRyZWVzIHRoYXQgdGhlIGxhbmQgcHJlZmVycy4KPC90cmFuc2xhdGlvbj4="
translation['16.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPklmIGl0IGhhcHBlbnMgdGhhdCB0aGUgbGFuZCBkb2VzIG5vdCBkZWNsYXJlIGl0cyBvd24gY2FwYWJpbGl0aWVzIGJlY2F1c2UgdGhlIG93bmVycyBhcmUgbGF6eSwgeW91IGNhbiBvZnRlbiBnYXRoZXIgbW9yZSBjb3JyZWN0IGluZm9ybWF0aW9uIGZyb20gYSBuZWlnaGJvdXJpbmcgcGxvdCB0aGFuIGZyb20gYSBuZWlnaGJvdXJpbmcgcHJvcHJpZXRvci4KPC90cmFuc2xhdGlvbj4="
translation['16.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlllcywgYW5kIGV2ZW4gaWYgdGhlIGxhbmQgbGllcyB3YXN0ZSwgaXQgcmV2ZWFscyBpdHMgbmF0dXJlLiBGb3IgaWYgdGhlIHdpbGQgc3R1ZmYgZ3Jvd2luZyBvbiB0aGUgbGFuZCBpcyBvZiBmaW5lIHF1YWxpdHksIHRoZW4gYnkgZ29vZCBmYXJtaW5nIHRoZSBzb2lsIGlzIGNhcGFibGUgb2YgeWllbGRpbmcgY3VsdGl2YXRlZCBjcm9wcyBvZiBmaW5lIHF1YWxpdHkuIFNvIHRoZSBuYXR1cmUgb2YgdGhlIHNvaWwgY2FuIGJlIGFzY2VydGFpbmVkIGV2ZW4gYnkgdGhlIG5vdmljZSB3aG8gaGFzIG5vIGV4cGVyaWVuY2Ugb2YgZmFybWluZy7igJkKPC90cmFuc2xhdGlvbj4="
translation['16.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsLCBJIHRoaW5rIEkgYW0gbm93IGNvbmZpZGVudCwgSXNjaG9tYWNodXMsIHRoYXQgSSBuZWVkIG5vdCBhdm9pZCBmYXJtaW5nIGZyb20gZmVhciBvZiBub3Qga25vd2luZyB0aGUgbmF0dXJlIG9mIHRoZSBzb2lsLgo8L3RyYW5zbGF0aW9uPg=="
translation['16.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBmYWN0IGlzLCBJIGFtIHJlbWluZGVkIHRoYXQgZmlzaGVybWVuLCB0aG91Z2ggdGhlaXIgYnVzaW5lc3MgaXMgaW4gdGhlIHNlYSwgYW5kIHRoZXkgbmVpdGhlciBzdG9wIHRoZSBib2F0IHRvIHRha2UgYSBsb29rIG5vciBzbG93IGRvd24sIG5ldmVydGhlbGVzcywgd2hlbiB0aGV5IHNlZSB0aGUgY3JvcHMgYXMgdGhleSBzY3VkIHBhc3QgdGhlIGZhcm1zLCBkbyBub3QgaGVzaXRhdGUgdG8gZXhwcmVzcyBhbiBvcGluaW9uIGFib3V0IHRoZSBsYW5kLCB3aGljaCBpcyB0aGUgZ29vZCBhbmQgd2hpY2ggaXMgdGhlIGJhZCBzb3J0LCBub3cgY29uZGVtbmluZywgbm93IHByYWlzaW5nIGl0LiBBbmQsIHdoYXQgaXMgbW9yZSwgSSBub3RpY2UgdGhhdCBpbiB0aGVpciBvcGluaW9uIGFib3V0IHRoZSBnb29kIGxhbmQgdGhleSBnZW5lcmFsbHkgYWdyZWUgZXhhY3RseSB3aXRoIGV4cGVyaWVuY2VkIGZhcm1lcnMu4oCZCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['16.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhUaGVuLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIGxldCBtZSByZWZyZXNoIHlvdXIgbWVtb3J5IG9uIHRoZSBzdWJqZWN0IG9mIGFncmljdWx0dXJlOyBidXQgd2hlcmUgZG8geW91IHdpc2ggbWUgdG8gYmVnaW4/IEZvciBJIGFtIGF3YXJlIHRoYXQgSSBzaGFsbCB0ZWxsIHlvdSB2ZXJ5IG11Y2ggdGhhdCB5b3Uga25vdyBhbHJlYWR5IGFib3V0IHRoZSByaWdodCBtZXRob2Qgb2YgZmFybWluZy7igJkKPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['16.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhGaXJzdCwgSXNjaG9tYWNodXMsIEkgdGhpbmsgSSBzaG91bGQgYmUgZ2xhZCB0byBsZWFybiwgZm9yIHRoaXMgaXMgdGhlIHBoaWxvc29waGVyJ3Mgd2F5LCBob3cgSSBhbSB0byBjdWx0aXZhdGUgdGhlIGxhbmQgaWYgSSB3YW50IHRvIGdldCB0aGUgaGVhdmllc3QgY3JvcHMgb2Ygd2hlYXQgYW5kIGJhcmxleSBvdXQgb2YgaXQu4oCZCjwvdHJhbnNsYXRpb24+"
translation['16.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2VsbCwgeW91IGtub3csIEkgdGFrZSBpdCwgdGhhdCBmYWxsb3cgbXVzdCBiZSBwcmVwYXJlZCBmb3Igc293aW5nP+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhZZXMsIEkga25vdy7igJkKPC90cmFuc2xhdGlvbj4="
translation['16.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYU3VwcG9zZSwgdGhlbiwgd2Ugc3RhcnQgcGxvdWdoaW5nIGluIHdpbnRlcj/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2h5LCB0aGUgbGFuZCB3aWxsIGJlIGEgYm9nISc8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSG93IGFib3V0IHN0YXJ0aW5nIGluIHN1bW1lcj/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVGhlIGxhbmQgd2lsbCBiZSBoYXJkIHRvIHBsb3VnaCB1cC7igJkKPC90cmFuc2xhdGlvbj4="
translation['16.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSXQgc2VlbXMgdGhhdCBzcHJpbmcgaXMgdGhlIHNlYXNvbiBmb3IgYmVnaW5uaW5nIHRoaXMgd29yay7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWWVzLCB0aGUgbGFuZCBpcyBsaWtlbHkgdG8gYmUgbW9yZSBmcmlhYmxlIGlmIGl0IGlzIGJyb2tlbiB1cCB0aGVuLuKAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhZZXMsIGFuZCB0aGUgZ3Jhc3MgdHVybmVkIHVwIGlzIGxvbmcgZW5vdWdoIGF0IHRoYXQgc2Vhc29uIHRvIHNlcnZlIGFzIG1hbnVyZSwgYnV0LCBub3QgaGF2aW5nIHNoZWQgc2VlZCwgaXQgd2lsbCBub3QgZ3Jvdy4KPC90cmFuc2xhdGlvbj4="
translation['16.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Zb3Uga25vdyBhbHNvLCBJIHByZXN1bWUsIHRoYXQgZmFsbG93IGxhbmQgY2FuJ3QgYmUgc2F0aXNmYWN0b3J5IHVubGVzcyBpdCBpcyBjbGVhciBvZiB3ZWVkcyBhbmQgdGhvcm91Z2hseSBiYWtlZCBpbiB0aGUgc3VuP+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhZZXMsIGNlcnRhaW5seTsgdGhhdCBpcyBlc3NlbnRpYWwsIEkgdGhpbmsu4oCZCjwvdHJhbnNsYXRpb24+"
translation['16.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYRG8geW91IHRoaW5rIHRoYXQgdGhlcmUgaXMgYW55IGJldHRlciB3YXkgb2Ygc2VjdXJpbmcgdGhhdCB0aGFuIGJ5IHR1cm5pbmcgdGhlIGxhbmQgb3ZlciBhcyBvZnRlbiBhcyBwb3NzaWJsZSBpbiBzdW1tZXI/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmE5heSwgSSBrbm93IGZvciBjZXJ0YWluIHRoYXQgaWYgeW91IHdhbnQgdGhlIHdlZWRzIHRvIGxpZSBvbiB0aGUgc3VyZmFjZSBhbmQgd2l0aGVyIGluIHRoZSBoZWF0LCBhbmQgdGhlIGxhbmQgdG8gYmUgYmFrZWQgYnkgdGhlIHN1biwgdGhlIHN1cmVzdCB3YXkgaXMgdG8gcGxvdWdoIGl0IHVwIGF0IG1pZGRheSBpbiBtaWRzdW1tZXIu4oCZCjwvdHJhbnNsYXRpb24+"
translation['16.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQW5kIGlmIG1lbiBwcmVwYXJlIHRoZSBmYWxsb3cgYnkgZGlnZ2luZywgaXMgaXQgbm90IG9idmlvdXMgdGhhdCB0aGV5IHRvbyBtdXN0IHNlcGFyYXRlIHRoZSB3ZWVkcyBmcm9tIHRoZSBzb2lsP+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhZZXMsIGFuZCB0aGV5IG11c3QgdGhyb3cgdGhlIHdlZWRzIG9uIHRoZSBzdXJmYWNlIHRvIHdpdGhlciwgYW5kIHR1cm4gdXAgdGhlIGdyb3VuZCBzbyB0aGF0IHRoZSBsb3dlciBzcGl0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkxpdGVyYWxseSwgdGhlIOKAnGNydWRlIGxhbmQu4oCdPC9ub3RlPiBtYXkgYmUgYmFrZWQu4oCZ4oCdCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['17.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWW91IHNlZSwgdGhlbiwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCB0aGF0IHdlIGFncmVlIGFib3V0IHRoZSBmYWxsb3cu4oCZPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhJdCBkb2VzIHNlZW0gc28sIHRvIGJlIHN1cmUu4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmEFuZCBub3cgYXMgdG8gdGhlIHRpbWUgZm9yIHNvd2luZywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LiBJcyBpdCBub3QgeW91ciBvcGluaW9uIHRoYXQgdGhlIHRpbWUgdG8gc293IGlzIHRoYXQgd2hpY2ggaGFzIGJlZW4gaW52YXJpYWJseSBmb3VuZCB0byBiZSB0aGUgYmVzdCBieSBwYXN0IGV4cGVyaWVuY2UsIGFuZCBpcyB1bml2ZXJzYWxseSBhcHByb3ZlZCBieSBwcmVzZW50IHByYWN0aWNlPwo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['17.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZvciBhcyBzb29uIGFzIGF1dHVtbiBlbmRzLCBhbGwgbWVuLCBJIHN1cHBvc2UsIGxvb2sgYW54aW91c2x5IHRvIEdvZCwgdG8gc2VlIHdoZW4gaGUgd2lsbCBzZW5kIHJhaW4gb24gdGhlIGVhcnRoIGFuZCBtYWtlIHRoZW0gZnJlZSB0byBzb3cu4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFllcywgSXNjaG9tYWNodXMsIGFsbCBtZW4gaGF2ZSBtYWRlIHVwIHRoZWlyIG1pbmRzLCBvZiBjb3Vyc2UsIG5vdCB0byBzb3cgaW4gZHJ5IGdyb3VuZCBpZiB0aGV5IGNhbiBoZWxwIGl0LCB0aG9zZSB3aG8gc293ZWQgd2l0aG91dCB3YWl0aW5nIHRvIGJlIGJpZGRlbiBieSBHb2QgaGF2aW5nIGhhZCB0byB3cmVzdGxlIHdpdGggbWFueSBsb3NzZXMu4oCZCjwvdHJhbnNsYXRpb24+"
translation['17.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhTbyBmYXIsIHRoZW4s4oCZIHNhaWQgSXNjaG9tYWNodXMsIOKAmGFsbCB0aGUgd29ybGQgaXMgb2Ygb25lIG1pbmQu4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFllcyzigJkgc2FpZCBJLCDigJh3aGVyZSBHb2QgaXMgb3VyIHRlYWNoZXIgd2UgYWxsIGNvbWUgdG8gdGhpbmsgYWxpa2UuIEZvciBleGFtcGxlLCBhbGwgYWdyZWUgdGhhdCBpdCBpcyBiZXR0ZXIgdG8gd2VhciB3YXJtIGNsb3RoZXMgaW4gd2ludGVyLCBpZiB0aGV5IGNhbiwgYW5kIGFsbCBhZ3JlZSBvbiB0aGUgZGVzaXJhYmlsaXR5IG9mIGhhdmluZyBhIGZpcmUsIGlmIHRoZXkgaGF2ZSB3b29kLuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['17.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhCdXQs4oCZIHNhaWQgSXNjaG9tYWNodXMsIOKAmHdoZW4gd2UgY29tZSB0byB0aGUgcXVlc3Rpb24gd2hldGhlciBzb3dpbmcgaXMgYmVzdCBkb25lIGVhcmx5IG9yIHZlcnkgbGF0ZSBvciBhdCB0aGUgbWlkLXNlYXNvbiwgd2UgZmluZCBtdWNoIGRpZmZlcmVuY2Ugb2Ygb3BpbmlvbiwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LuKAmSBieSBmaXhlZCBsYXdzOyBidXQgaW4gb25lIHllYXIgaXQgbWF5IGJlIGFkdmFudGFnZW91cyB0byBzb3cgZWFybHksIGluIGFub3RoZXIgdmVyeSBsYXRlLCBpbiBhbm90aGVyIGF0IG1pZC1zZWFzb24u4oCZCiAgICAgICAgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['17.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhUaGVuIGRvIHlvdSB0aGluaywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCB0aGF0IGl0IGlzIGJldHRlciB0byBzZWxlY3Qgb25lIG9mIHRoZXNlIHRpbWVzIGZvciBzb3dpbmcsIHdoZXRoZXIgeW91IHNvdyBtdWNoIG9yIGxpdHRsZSwgb3IgdG8gYmVnaW4gYXQgdGhlIGVhcmxpZXN0IG1vbWVudCBhbmQgY29udGludWUgc293aW5nIHRvIHRoZSBsYXRlc3Q/4oCZCiAgICAgICAgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['17.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhGb3IgbXkgcGFydCwgSXNjaG9tYWNodXMsIEkgdGhpbmsgaXQgaXMgYmVzdCB0byBzb3cgZm9yIHN1Y2Nlc3Npb24gdGhyb3VnaG91dCB0aGUgc2Vhc29uLiBGb3IgaW4gbXkgb3BpbmlvbiBpdCBpcyBtdWNoIGJldHRlciB0byBnZXQgZW5vdWdoIGZvb2QgYXQgYWxsIHRpbWVzIHRoYW4gdG9vIG11Y2ggYXQgb25lIHRpbWUgYW5kIG5vdCBlbm91Z2ggYXQgYW5vdGhlci7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSGVyZSBhZ2FpbiwgdGhlbiwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LCBwdXBpbCBhbmQgdGVhY2hlciBhcmUgb2Ygb25lIG9waW5pb247IGFuZCwgbW9yZW92ZXIsIHlvdSwgdGhlIHB1cGlsLCBhcmUgZmlyc3QgaW4gc3RhdGluZyB0aGlzIG9waW5pb24u4oCZCiAgICAgICAgPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['17.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsIG5vdywgaXMgY2FzdGluZyB0aGUgc2VlZCBhIGNvbXBsaWNhdGVkIHByb2JsZW0/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmEJ5IGFsbCBtZWFucyBsZXQgdXMgdGFrZSB0aGF0IGFsc28gaW50byBjb25zaWRlcmF0aW9uLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4uIEkgcHJlc3VtZSB0aGF0IHlvdSBrbm93IGFzIHdlbGwgYXMgSSB0aGF0IHRoZSBzZWVkIG11c3QgYmUgY2FzdCBieSB0aGUgaGFuZD/igJk8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFllcywgSSBoYXZlIHNlZW4gaXQu4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmEFoLOKAmSBoZSBzYWlkLCDigJhidXQgc29tZSBtZW4gY2FuIGNhc3QgZXZlbmx5LCBhbmQgc29tZSBjYW5ub3Qu4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFRoZW4gc293ZXJzIG5vIGxlc3MgdGhhbiBseXJlLXBsYXllcnMgbmVlZCBwcmFjdGljZSwgdGhhdCB0aGUgaGFuZCBtYXkgYmUgdGhlIHNlcnZhbnQgb2YgdGhlIHdpbGwu4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmENlcnRhaW5seS4KPC90cmFuc2xhdGlvbj4="
translation['17.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBzdXBwb3NlIHRoYXQgc29tZSBvZiB0aGUgbGFuZCBpcyByYXRoZXIgbGlnaHQgYW5kIHNvbWUgcmF0aGVyIGhlYXZ5P+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXaGF0IGRvIHlvdSBtZWFuIGJ5IHRoYXQ/4oCZIEkgaW50ZXJydXB0ZWQuIOKAmEJ5IOKAnGxpZ2h04oCdIGRvIHlvdSBtZWFuIOKAnHdlYWss4oCdIGFuZCBieSDigJxoZWF2eSzigJ0g4oCcc3Ryb25n4oCdP+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhZZXMsIEkgZG87IGFuZCBJIGFzayB5b3Ugd2hldGhlciB5b3Ugd291bGQgZ2l2ZSB0aGUgc2FtZSBxdWFudGl0eSBvZiBzZWVkIHRvIGJvdGgga2luZHMsIG9yIHRvIHdoaWNoIHlvdSB3b3VsZCBnaXZlIG1vcmU/4oCZCjwvdHJhbnNsYXRpb24+"
translation['17.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsLCBteSBwcmluY2lwbGUgaXMgdGhpczogdGhlIHN0cm9uZ2VyIHRoZSB3aW5lLCB0aGUgbW9yZSB3YXRlciBJIGFkZDsgdGhlIHN0cm9uZ2VyIHRoZSBiZWFyZXIsIHRoZSBoZWF2aWVyIHRoZSBidXJkZW4gSSBwdXQgb24gaGlzIGJhY2s7IGFuZCBpZiBpdCBpcyBuZWNlc3NhcnkgdG8gZmVlZCBvdGhlcnMsIEkgc2hvdWxkIHJlcXVpcmUgdGhlIHJpY2hlc3QgbWVuIHRvIGZlZWQgdGhlIGdyZWF0ZXN0IG51bWJlci4gQnV0IHRlbGwgbWUgd2hldGhlciB3ZWFrIGxhbmQsIGxpa2UgZHJhdWdodCBhbmltYWxzLCBiZWNvbWVzIHN0cm9uZ2VyIHdoZW4geW91IHB1dCBtb3JlIGNvcm4gaW50byBpdC7igJkKICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['17.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQWgsIHlvdSdyZSBqb2tpbmcsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPizigJkgaGUgc2FpZCwgbGF1Z2hpbmcsIOKAmGJ1dCBhbGxvdyBtZSB0byB0ZWxsIHlvdSB0aGF0LCBpZiBhZnRlciBwdXR0aW5nIGluIHRoZSBzZWVkIHlvdSBwbG91Z2ggaXQgaW4gYWdhaW4gYXMgc29vbiBhcyB0aGUgYmxhZGUgYXBwZWFycyB3aGVuIHRoZSBsYW5kIGlzIG9idGFpbmluZyBwbGVudHkgb2Ygbm91cmlzaG1lbnQgZnJvbSB0aGUgc2t5LCBpdCBtYWtlcyBmb29kIGZvciB0aGUgc29pbCwgYW5kIHN0cmVuZ3RoZW5zIGl0IGxpa2UgbWFudXJlLiBJZiwgb24gdGhlIG90aGVyIGhhbmQsIHlvdSBsZXQgdGhlIHNlZWQgZ28gb24gZ3Jvd2luZyBvbiB0aGUgbGFuZCB1bnRpbCBpdCBpcyBib2xsZWQsIGl0J3MgaGFyZCBmb3Igd2VhayBsYW5kIHRvIHlpZWxkIG11Y2ggZ3JhaW4gaW4gdGhlIGVuZC4gSXQncyBoYXJkLCB5b3Uga25vdywgZm9yIGEgd2VhayBzb3cgdG8gcmVhciBhIGJpZyBsaXR0ZXIgb2YgZmluZSBwaWdzLuKAmQogICAgICAgIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['17.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYRG8geW91IG1lYW4sIElzY2hvbWFjaHVzLCB0aGF0IHRoZSB3ZWFrZXIgdGhlIHNvaWwgdGhlIGxlc3Mgc2VlZCBzaG91bGQgYmUgcHV0IGludG8gaXQ/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFllcywgb2YgY291cnNlLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT47IGFuZCB5b3UgYWdyZWUgd2hlbiB5b3Ugc2F5IHRoYXQgeW91ciBpbnZhcmlhYmxlIGN1c3RvbSBpcyB0byBtYWtlIHRoZSBidXJkZW4gbGlnaHQgdGhhdCBpcyB0byBiZSBib3JuZSBieSB0aGUgd2Vhay7igJkKPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['17.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQnV0IHRoZSBob2Vycywgbm93LCBJc2Nob21hY2h1cywgd2h5IGRvIHlvdSBwdXQgdGhlbSBvbiB0aGUgY29ybj/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSSBwcmVzdW1lIHlvdSBrbm93IHRoYXQgaW4gd2ludGVyIHRoZXJlIGlzIGEgaGVhdnkgcmFpbmZhbGw/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmE9mIGNvdXJzZS7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYTGV0IHVzIGFzc3VtZSwgdGhlbiwgdGhhdCBwYXJ0IG9mIHRoZSBjb3JuIGlzIHdhdGVybG9nZ2VkIGFuZCBjb3ZlcmVkIHdpdGggbXVkLCBhbmQgc29tZSBvZiB0aGUgcm9vdHMgYXJlIGV4cG9zZWQgYnkgZmxvb2RpbmcuIEFuZCBpdCBvZnRlbiBoYXBwZW5zLCB5b3Uga25vdywgdGhhdCBpbiBjb25zZXF1ZW5jZSBvZiByYWluIHdlZWRzIHNwcmluZyB1cCBhbW9uZyB0aGUgY29ybiBhbmQgY2hva2UgaXQu4oCZCjwvdHJhbnNsYXRpb24+"
translation['17.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQWxsIHRoZXNlIHRoaW5ncyBhcmUgbGlrZWx5IHRvIGhhcHBlbi7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVGhlbiBkb24ndCB5b3UgdGhpbmsgdGhhdCBpbiBzdWNoIGNpcmN1bXN0YW5jZXMgdGhlIGNvcm4gbmVlZHMgcHJvbXB0IHN1Y2NvdXI/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmENlcnRhaW5seS7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2hhdCBzaG91bGQgYmUgZG9uZSwgZG8geW91IHRoaW5rLCB0byBzdWNjb3VyIHRoZSBwYXJ0IHRoYXQgaXMgdW5kZXIgdGhlIG11ZD/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVGhlIHNvaWwgc2hvdWxkIGJlIGxpZnRlZC7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQW5kIHRoZSBwYXJ0IHRoYXQgaGFzIGl0cyByb290cyBleHBvc2VkP+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhJdCBzaG91bGQgYmUgZWFydGhlZCB1cC7igJkKPC90cmFuc2xhdGlvbj4="
translation['17.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYV2hhdCBpZiB3ZWVkcyBhcmUgc3ByaW5naW5nIHVwLCBjaG9raW5nIHRoZSBjb3JuIGFuZCByb2JiaW5nIGl0IG9mIGl0cyBmb29kLCBtdWNoIGFzIHVzZWxlc3MgZHJvbmVzIHJvYiBiZWVzIG9mIHRoZSBmb29kIHRoZXkgaGF2ZSBsYWlkIGluIHN0b3JlIGJ5IHRoZWlyIGluZHVzdHJ5P+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhUaGUgd2VlZHMgbXVzdCBiZSBjdXQsIG9mIGNvdXJzZSwganVzdCBhcyB0aGUgZHJvbmVzIG11c3QgYmUgcmVtb3ZlZCBmcm9tIHRoZSBoaXZlLuKAmQo8L3RyYW5zbGF0aW9uPg=="
translation['17.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYRG9uJ3QgeW91IHRoaW5rLCB0aGVuLCB0aGF0IHdlIGhhdmUgZ29vZCByZWFzb24gZm9yIHB1dHRpbmcgb24gbWVuIHRvIGhvZT/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYTm8gZG91YnQ7IGJ1dCBJIGFtIHJlZmxlY3RpbmcsIElzY2hvbWFjaHVzLCBvbiB0aGUgYWR2YW50YWdlIG9mIGJyaW5naW5nIGluIGFuIGFwdCBzaW1pbGUuIEZvciB5b3Ugcm91c2VkIG15IHdyYXRoIGFnYWluc3QgdGhlIHdlZWRzIGJ5IG1lbnRpb25pbmcgdGhlIGRyb25lcywgbXVjaCBtb3JlIHRoYW4gd2hlbiB5b3Ugc3Bva2Ugb2YgbWVyZSB3ZWVkcy7igJnigJ0KPC90cmFuc2xhdGlvbj4="
translation['18.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSG93ZXZlcizigJkgSSBjb250aW51ZWQsIOKAmGFmdGVyIHRoaXMgY29tZXMgcmVhcGluZywgSSBmYW5jeS4gU28gZ2l2ZSBtZSBhbnkgaW5mb3JtYXRpb24geW91IGNhbiB3aXRoIHJlZ2FyZCB0byB0aGF0IHRvby7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWWVz4oCUdW5sZXNzIEkgZmluZCB0aGF0IHlvdSBrbm93IGp1c3Qgd2hhdCBJIGRvIGFib3V0IHRoYXQgc3ViamVjdCB0b28uIFlvdSBrbm93LCB0aGVuLCB0aGF0IHRoZSBjb3JuIG11c3QgYmUgY3V0LuKAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhJIGtub3cgdGhhdCwgbmF0dXJhbGx5LuKAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBcmUgeW91IGZvciBzdGFuZGluZyB3aXRoIHlvdXIgYmFjayB0byB0aGUgd2luZCB3aGVuIHlvdSBjdXQgY29ybiwgb3IgZmFjaW5nIGl0P+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhOb3QgZmFjaW5nIGl0LCBubyEgSSB0aGluayBpdCBpcyBpcnJpdGF0aW5nIGJvdGggdG8gdGhlIGV5ZXMgYW5kIHRvIHRoZSBoYW5kcyB0byByZWFwIHdpdGggY29ybnN0YWxrcyBhbmQgc3Bpa2VzIGJsb3dpbmcgaW4geW91ciBmYWNlLuKAmQo8L3RyYW5zbGF0aW9uPg=="
translation['18.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBbmQgd291bGQgeW91IGN1dCBuZWFyIHRoZSB0b3Agb3IgY2xvc2UgdG8gdGhlIGdyb3VuZD/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSWYgdGhlIHN0YWxrIGlzIHNob3J0LCBJIHNob3VsZCBjdXQgbG93IGRvd24sIHNvIHRoYXQgdGhlIHN0cmF3IG1heSBiZSBtb3JlIHVzZWZ1bDsgYnV0IGlmIGl0IGlzIGxvbmcsIEkgdGhpbmsgaXQgd291bGQgYmUgcmlnaHQgdG8gY3V0IGluIHRoZSBtaWRkbGUsIGluIG9yZGVyIHRoYXQgdGhlIHRocmVzaGVycyBhbmQgd2lubm93ZXJzIG1heSBub3Qgc3BlbmQgbmVlZGxlc3MgdHJvdWJsZSBvbiB3aGF0IHRoZXkgZG9uJ3Qgd2FudC4gSSBpbWFnaW5lIHRoYXQgdGhlIHN0dWJibGUgbWF5IGJlIGJ1cm50IHdpdGggYWR2YW50YWdlIHRvIHRoZSBsYW5kLCBvciB0aHJvd24gb24gdGhlIG1hbnVyZSBoZWFwIHRvIGluY3JlYXNlIGl0cyBidWxrLuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['18.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhEbyB5b3Ugbm90aWNlLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIHRoYXQgeW91IHN0YW5kIGNvbnZpY3RlZCBvZiBrbm93aW5nIGp1c3Qgd2hhdCBJIGtub3cgYWJvdXQgcmVhcGluZyB0b28/4oCZPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhZZXMsIGl0IHNlZW1zIHNvOyBhbmQgSSB3YW50IHRvIGtub3cgYmVzaWRlcyB3aGV0aGVyIEkgdW5kZXJzdGFuZCB0aHJlc2hpbmcgYXMgd2VsbC7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVGhlbiB5b3Uga25vdyB0aGlzIG11Y2gsIHRoYXQgZHJhdWdodCBhbmltYWxzIGFyZSB1c2VkIGluIHRocmVzaGluZz/igJkKPC90cmFuc2xhdGlvbj4="
translation['18.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhZZXMsIG9mIGNvdXJzZSBJIGRvOyBhbmQgdGhhdCB0aGUgdGVybSBkcmF1Z2h0IGFuaW1hbHMgaW5jbHVkZXMgb3hlbiwgbXVsZXMgYW5kIGhvcnNlcy7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVGhlbiBkbyB5b3Ugbm90IHRoaW5rIHRoYXQgYWxsIHRoZSBiZWFzdHMga25vdyBpcyBob3cgdG8gdHJhbXBsZSBvbiB0aGUgY29ybiBhcyB0aGV5IGFyZSBkcml2ZW4/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFdoeSwgd2hhdCBtb3JlIHNob3VsZCBkcmF1Z2h0IGFuaW1hbHMga25vdz/igJkKICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['18.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBbmQgd2hvIHNlZXMgdGhhdCB0aGV5IHRyZWFkIG91dCB0aGUgcmlnaHQgY29ybiwgYW5kIHRoYXQgdGhlIHRocmVzaGluZyBpcyBsZXZlbCwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+P+KAmTxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVGhlIHRocmVzaGVycywgY2xlYXJseS4gQnkgY29udGludWFsbHkgdHVybmluZyB0aGUgdW50cm9kZGVuIGNvcm4gYW5kIHRocm93aW5nIGl0IHVuZGVyIHRoZSBhbmltYWwncyBmZWV0IHRoZXkgd2lsbCwgb2YgY291cnNlLCBrZWVwIGl0IGxldmVsIG9uIHRoZSBmbG9vciBhbmQgdGFrZSBsZWFzdCB0aW1lIG92ZXIgdGhlIHdvcmsu4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFNvIGZhciwgdGhlbiwgeW91ciBrbm93bGVkZ2UgaXMgcXVpdGUgYXMgZ29vZCBhcyBtaW5lLuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['18.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXaWxsIG5vdCBvdXIgbmV4dCB0YXNrIGJlIHRvIGNsZWFuIHRoZSBjb3JuIGJ5IHdpbm5vd2luZywgSXNjaG9tYWNodXM/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFllcywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+OyBhbmQgdGVsbCBtZSwgZG8geW91IGtub3cgdGhhdCBpZiB5b3Ugc3RhcnQgb24gdGhlIHdpbmR3YXJkIHNpZGUgb2YgdGhlIGZsb29yLCB5b3Ugd2lsbCBmaW5kIHRoZSBodXNrcyBjYXJyaWVkIHJpZ2h0IGFjcm9zcyB0aGUgZmxvb3I/4oCZPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhJdCBtdXN0IGJlIHNvLuKAmQo8L3RyYW5zbGF0aW9uPg=="
translation['18.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhJcyBpdCBub3QgbGlrZWx5LCB0aGVuLCB0aGF0IHNvbWUgd2lsbCBmYWxsIG9uIHRoZSBncmFpbj/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWWVzLCBpdCBpcyBhIGxvbmcgd2F5IGZvciB0aGUgaHVza3MgdG8gYmUgYmxvd24sIHJpZ2h0IG92ZXIgdGhlIGdyYWluIHRvIHRoZSBlbXB0eSBwYXJ0IG9mIHRoZSBmbG9vci7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQnV0IHdoYXQgaWYgeW91IHN0YXJ0IHdpbm5vd2luZyBhZ2FpbnN0IHRoZSB3aW5kP+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhDbGVhcmx5IHRoZSBjaGFmZiB3aWxsIGF0IG9uY2UgZmFsbCBpbiB0aGUgcmlnaHQgcGxhY2Uu4oCZCjwvdHJhbnNsYXRpb24+"
translation['18.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBbmQgYXMgc29vbiBhcyB5b3UgaGF2ZSBjbGVhbmVkIHRoZSBjb3JuIG92ZXIgb25lIGhhbGYgb2YgdGhlIGZsb29yLCB3aWxsIHlvdSBhdCBvbmNlIGdvIG9uIHRocm93aW5nIHVwIHRoZSByZXN0IG9mIHRoZSBjaGFmZiB3aGlsZSB0aGUgY29ybiBsaWVzIGFib3V0IGp1c3QgYXMgaXQgaXMsIG9yIHdpbGwgeW91IGZpcnN0IHN3ZWVwIHRoZSBjbGVhbiBjb3JuIHRvd2FyZHMgdGhlIGVkZ2UsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBtZWFuaW5nIG9mIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+A4b25zrvOv8+CPC9mb3JlaWduPiBoZXJlIGlzIHJlYWxseSB1bmtub3duLCBJIGJlbGlldmUuPC9ub3RlPiBzbyBhcyB0byBvY2N1cHkgdGhlIHNtYWxsZXN0IHNwYWNlP+KAmTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+A4b25zrvOv8+CPC9mb3JlaWduPiBoZXJlIGlzIHJlYWxseSB1bmtub3duLCBJIGJlbGlldmUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmE9mIGNvdXJzZSBJIHNoYWxsIGZpcnN0IHN3ZWVwIHRoZSBjbGVhbiBjb3JuIHVwLCBzbyB0aGF0IG15IGNoYWZmIG1heSBiZSBjYXJyaWVkIGFjcm9zcyBpbnRvIHRoZSBlbXB0eSBzcGFjZSwgYW5kIEkgbWF5IG5vdCBoYXZlIHRvIHRocm93IHVwIHRoZSBzYW1lIGNoYWZmIHR3aWNlLuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['18.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIGl0IHNlZW1zIHlvdSBhcmUgY2FwYWJsZSBvZiB0ZWFjaGluZyB0aGUgcXVpY2tlc3Qgd2F5IG9mIGNsZWFuaW5nIGNvcm4u4oCZIHRoaW5nczsgYW5kIHNvIEkgaGF2ZSBiZWVuIHRoaW5raW5nIGZvciBzb21lIHRpbWUgd2hldGhlciBteSBrbm93bGVkZ2UgZXh0ZW5kcyB0byBzbWVsdGluZyBnb2xkLCBwbGF5aW5nIHRoZSBmbHV0ZSwgYW5kIHBhaW50aW5nIHBpY3R1cmVzLiBGb3IgSSBoYXZlIG5ldmVyIGJlZW4gdGF1Z2h0IHRoZXNlIHRoaW5ncyBhbnkgbW9yZSB0aGFuIEkgaGF2ZSBiZWVuIHRhdWdodCBmYXJtaW5nOyBidXQgSSBoYXZlIHdhdGNoZWQgbWVuIHdvcmtpbmcgYXQgdGhlc2UgYXJ0cywganVzdCBhcyBJIGhhdmUgd2F0Y2hlZCB0aGVtIGZhcm1pbmcu4oCZCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['18.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQW5kIGRpZG4ndCBJIHRlbGwgeW91IGp1c3Qgbm93IHRoYXQgZmFybWluZyBpcyB0aGUgbm9ibGVzdCBhcnQgZm9yIHRoaXMgYW1vbmcgb3RoZXIgcmVhc29ucywgYmVjYXVzZSBpdCBpcyB0aGUgZWFzaWVzdCB0byBsZWFybj/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYRW5vdWdoLCBJc2Nob21hY2h1czsgSSBrbm93LiBJIHVuZGVyc3Rvb2QgYWJvdXQgc293aW5nLCBpdCBzZWVtcywgYnV0IEkgd2Fzbid0IGF3YXJlIHRoYXQgSSB1bmRlcnN0b29kLuKAmeKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['19.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSG93ZXZlciwgaXMgdGhlIHBsYW50aW5nIG9mIGZydWl0IHRyZWVzIGFub3RoZXIgYnJhbmNoIG9mIGFncmljdWx0dXJlP+KAmSBJIGNvbnRpbnVlZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSXQgaXMsIGluZGVlZCzigJkgYW5zd2VyZWQgSXNjaG9tYWNodXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmFRoZW4gaG93IGNhbiBJIHVuZGVyc3RhbmQgYWxsIGFib3V0IHNvd2luZywgYW5kIHlldCBrbm93IG5vdGhpbmcgb2YgcGxhbnRpbmc/4oCZCjwvdHJhbnNsYXRpb24+"
translation['19.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXaGF0LCBkb24ndCB5b3UgdW5kZXJzdGFuZCBpdD/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSG93IGNhbiBJLCB3aGVuIEkgZG9uJ3Qga25vdyB3aGF0IGtpbmQgb2Ygc29pbCB0byBwbGFudCBpbiwgbm9yIGhvdyBkZWVwIGEgaG9sZSB0byBkaWcsIG5vciBob3cgYnJvYWQsIG5vciBob3cgbXVjaCBvZiB0aGUgcGxhbnQgc2hvdWxkIGJlIGJ1cmllZCwgbm9yIGhvdyBpdCBtdXN0IGJlIHNldCBpbiB0aGUgZ3JvdW5kIHRvIGdyb3cgYmVzdD/igJkKPC90cmFuc2xhdGlvbj4="
translation['19.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhDb21lIHRoZW4sIGxlYXJuIHdoYXRldmVyIHlvdSBkb24ndCBrbm93LiBJIGFtIHN1cmUgeW91IGhhdmUgc2VlbiB0aGUgc29ydCBvZiB0cmVuY2hlcyB0aGV5IGRpZyBmb3IgcGxhbnRzLuKAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhZZXMsIG9mdGVuIGVub3VnaC7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYRGlkIHlvdSBldmVyIHNlZSBvbmUgbW9yZSB0aGFuIHRocmVlIGZlZXQgZGVlcD/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYTm8sIG9mIGNvdXJzZSBub3TigJRub3IgbW9yZSB0aGFuIHR3byBhbmQgYSBoYWxmLuKAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhXZWxsLCBkaWQgeW91IGV2ZXIgc2VlIG9uZSBtb3JlIHRoYW4gdGhyZWUgZmVldCBicm9hZD/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYT2YgY291cnNlIG5vdCwgbm9yIG1vcmUgdGhhbiB0d28gZmVldC7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQ29tZSB0aGVuLCBhbnN3ZXIgdGhpcyBxdWVzdGlvbiB0b28uCjwvdHJhbnNsYXRpb24+"
translation['19.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkRpZCB5b3UgZXZlciBzZWUgb25lIGxlc3MgdGhhbiBhIGZvb3QgZGVlcD/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYTmV2ZXIgbGVzcyB0aGFuIGEgZm9vdCBhbmQgYSBoYWxmLCBvZiBjb3Vyc2UuIEZvciB0aGUgcGxhbnRzIHdvdWxkIGNvbWUgb3V0IG9mIHRoZSBncm91bmQgd2hlbiBpdCBpcyBzdGlycmVkIGFib3V0IHRoZW0gaWYgdGhleSB3ZXJlIHB1dCBpbiBzbyBtdWNoIHRvbyBzaGFsbG93LuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['19.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhUaGVuIHlvdSBrbm93IHRoaXMgd2VsbCBlbm91Z2gsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgdGhhdCB0aGUgdHJlbmNoZXMgYXJlIG5ldmVyIG1vcmUgdGhhbiB0d28gYW5kIGEgaGFsZiBmZWV0IGRlZXAsIG5vciBsZXNzIHRoYW4gYSBmb290IGFuZCBhIGhhbGYu4oCZPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBIHRoaW5nIHNvIG9idmlvdXMgYXMgdGhhdCBjYW4ndCBlc2NhcGUgb25lJ3MgZXllcy7igJkKPC90cmFuc2xhdGlvbj4="
translation['19.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBZ2FpbiwgY2FuIHlvdSBkaXN0aW5ndWlzaCBiZXR3ZWVuIGRyeSBhbmQgd2V0IGdyb3VuZCBieSB1c2luZyB5b3VyIGV5ZXM/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmE9oLCBJIHNob3VsZCB0aGluayB0aGF0IHRoZSBsYW5kIHJvdW5kIEx5Y2FiZXR0dXMgYW5kIGFueSBsaWtlIGl0IGlzIGFuIGV4YW1wbGUgb2YgZHJ5IGdyb3VuZCwgYW5kIHRoZSBsb3ctbHlpbmcgbGFuZCBhdCBQaGFsZXJ1bSBhbmQgYW55IGxpa2UgaXQgb2Ygd2V0LuKAmQo8L3RyYW5zbGF0aW9uPg=="
translation['19.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhJbiB3aGljaCB0aGVuIHdvdWxkIHlvdSBkaWcgdGhlIGhvbGUgZGVlcCBmb3IgeW91ciBwbGFudCwgaW4gdGhlIGRyeSBvciB0aGUgd2V0IGdyb3VuZD/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSW4gdGhlIGRyeSwgb2YgY291cnNlOyBiZWNhdXNlIGlmIHlvdSBkdWcgZGVlcCBpbiB0aGUgd2V0LCB5b3Ugd291bGQgY29tZSBvbiB3YXRlciwgYW5kIHdhdGVyIHdvdWxkIHN0b3AgeW91ciBwbGFudGluZy7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSSB0aGluayB5b3UgYXJlIHF1aXRlIHJpZ2h0LiBOb3cgc3VwcG9zZSB0aGUgaG9sZXMgYXJlIGR1ZzsgaGF2ZSB5b3UgZXZlciBub3RpY2VkIGhvdzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGVyZSBtdXN0IGJlIHNvbWV0aGluZyB3cm9uZyB3aXRoIHRoZSB0ZXh0IGhlcmUuIFRoZSBNU1MuIGdpdmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2Bz4DOt8694b23zrrOsTwvZm9yZWlnbj4sIOKAnGp1c3Qgd2hlbizigJ0gYnV0IHRoYXQgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCB0aGUgbWF0dGVyIGluIGhhbmQuIElzIHNvbWV0aGluZyBsb3N0Pzwvbm90ZT4gdGhlIHBsYW50cyBmb3IgZWFjaCBraW5kIG9mIHNvaWwgc2hvdWxkIGJlIHB1dCBpbj/igJk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvYHPgM63zr3hvbfOus6xPC9mb3JlaWduPiwg4oCcanVzdCB3aGVuLOKAnSBidXQgdGhhdCBoYXMgbm90aGluZyB0byBkbyB3aXRoIHRoZSBtYXR0ZXIgaW4gaGFuZC4gSXMgc29tZXRoaW5nIGxvc3Q/PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmE9oLCB5ZXMu4oCZCjwvdHJhbnNsYXRpb24+"
translation['19.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhUaGVuIGFzc3VtaW5nIHRoYXQgeW91IHdhbnQgdGhlbSB0byBncm93IGFzIHF1aWNrbHkgYXMgcG9zc2libGUsIGRvIHlvdSB0aGluayB0aGF0IGlmIHlvdSBwdXQgc29tZSBwcmVwYXJlZCBzb2lsIHVuZGVyIHRoZW0gdGhlIGN1dHRpbmdzIHdpbGwgc3RyaWtlIHNvb25lciB0aHJvdWdoIHNvZnQgZWFydGggaW50byB0aGUgaGFyZCBzdHVmZiwgb3IgdGhyb3VnaCB1bmJyb2tlbiBncm91bmQ/4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmENsZWFybHksIHRoZXkgd2lsbCBmb3JtIHJvb3RzIG1vcmUgcXVpY2tseSBpbiBwcmVwYXJlZCBzb2lsIHRoYW4gaW4gdW5icm9rZW4gZ3JvdW5kLuKAmQo8L3RyYW5zbGF0aW9uPg=="
translation['19.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhUaGVuIHNvaWwgbXVzdCBiZSBwbGFjZWQgYmVsb3cgdGhlIHBsYW50P+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhObyBkb3VidCBpdCBtdXN0LuKAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhBbmQgaWYgeW91IHNldCB0aGUgd2hvbGUgY3V0dGluZyB1cHJpZ2h0LCBwb2ludGluZyB0byB0aGUgc2t5LCBkbyB5b3UgdGhpbmsgaXQgd291bGQgdGFrZSByb290IGJldHRlciwgb3Igd291bGQgeW91IGxheSBwYXJ0IG9mIGl0IHNsYW50aW5nIHVuZGVyIHRoZSBzb2lsIHRoYXQgaGFzIGJlZW4gcHV0IGJlbG93LCBzbyB0aGF0IGl0IGxpZXMgbGlrZSBhIGdhbW1hIHVwc2lkZSBkb3duP+KAmQo8L3RyYW5zbGF0aW9uPg=="
translation['19.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYT2YgY291cnNlIEkgd291bGQ7IGZvciB0aGVuIHRoZXJlIHdvdWxkIGJlIG1vcmUgYnVkcyB1bmRlcmdyb3VuZDsgYW5kIEkgbm90aWNlIHRoYXQgcGxhbnRzIHNob290IGZyb20gdGhlIGJ1ZHMgYWJvdmUgZ3JvdW5kLCBzbyBJIHN1cHBvc2UgdGhhdCB0aGUgYnVkcyB1bmRlciB0aGUgZ3JvdW5kIGRvIGp1c3QgdGhlIHNhbWU7IGFuZCB3aXRoIG1hbnkgc2hvb3RzIGZvcm1pbmcgdW5kZXJncm91bmQsIHRoZSBwbGFudCB3aWxsIG1ha2Ugc3Ryb25nIGFuZCByYXBpZCBncm93dGgsIEkgc3VwcG9zZS7igJkKPC90cmFuc2xhdGlvbj4="
translation['19.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVGhlbiBpdCB0dXJucyBvdXQgdGhhdCBvbiB0aGVzZSBwb2ludHMgdG9vIHlvdXIgb3BpbmlvbiBhZ3JlZXMgd2l0aCBtaW5lLiBCdXQgd291bGQgeW91IG1lcmVseSBoZWFwIHVwIHRoZSBlYXJ0aCwgb3IgbWFrZSBpdCBmaXJtIHJvdW5kIHRoZSBwbGFudD/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYSSBzaG91bGQgbWFrZSBpdCBmaXJtLCBvZiBjb3Vyc2U7IGZvciBpZiBpdCB3ZXJlIG5vdCBmaXJtLCBJIGZlZWwgc3VyZSB0aGF0IHRoZSByYWluIHdvdWxkIG1ha2UgbXVkIG9mIHRoZSBsb29zZSBlYXJ0aCwgYW5kIHRoZSBzdW4gd291bGQgZHJ5IGl0IHVwIGZyb20gdG9wIHRvIGJvdHRvbTsgc28gdGhlIHBsYW50cyB3b3VsZCBydW4gdGhlIHJpc2sgb2YgZGFtcGluZyBvZmYgdGhyb3VnaCB0b28gbXVjaCB3YXRlciwgb3Igd2l0aGVyaW5nIGZyb20gdG9vIG11Y2ggaGVhdCBhdCB0aGUgcm9vdHMu4oCZCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['19.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQWJvdXQgdmluZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgbWVudGlvbiBvZiB0aGUgdmluZSBjb21lcyBpbiBzbyBhYnJ1cHRseSB0aGF0IG9uZSBhZ2FpbiBzdXNwZWN0cyB0aGUgbG9zcyBvZiBzb21ldGhpbmcgaW4gdGhlIHRleHQuPC9ub3RlPiBwbGFudGluZyB0aGVuLCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIHlvdXIgdmlld3MgYXJlIGFnYWluIGV4YWN0bHkgdGhlIHNhbWUgYXMgbWluZS7igJkgdG9vP+KAmSBJIGFza2VkLjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWWVzLCBhbmQgdG8gYWxsIG90aGVyIGZydWl0IHRyZWVzLCBJIHRoaW5rOyBmb3IgaW4gcGxhbnRpbmcgb3RoZXIgdHJlZXMgd2h5IGRpc2NhcmQgYW55dGhpbmcgdGhhdCBnaXZlcyBnb29kIHJlc3VsdHMgd2l0aCB0aGUgdmluZT/igJkKPC90cmFuc2xhdGlvbj4="
translation['19.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQnV0IHRoZSBvbGl2ZeKAlGhvdyBzaGFsbCB3ZSBwbGFudCB0aGF0LCBJc2Nob21hY2h1cz/igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWW91IGtub3cgcXVpdGUgd2VsbCwgYW5kIGFyZSBvbmx5IHRyeWluZyB0byBkcmF3IG1lIG91dCBhZ2Fpbi4gRm9yIEkgYW0gc3VyZSB5b3Ugc2VlIHRoYXQgYSBkZWVwZXIgaG9sZSBpcyBkdWcgZm9yIHRoZSBvbGl2ZSAoaXQgaXMgY29uc3RhbnRseSBiZWluZyBkb25lIG9uIHRoZSByb2Fkc2lkZSk7IHlvdSBzZWUgYWxzbyB0aGF0IGFsbCB0aGUgZ3Jvd2luZyBzaG9vdHMgaGF2ZSBzdHVtcHMgYWRoZXJpbmcgdG8gdGhlbTsgYW5kIHlvdSBzZWUgdGhhdCBhbGwgdGhlIGhlYWRzIG9mIHRoZSBwbGFudHMgYXJlIGNvYXRlZCB3aXRoIGNsYXksIGFuZCB0aGUgcGFydCBvZiB0aGUgcGxhbnQgdGhhdCBpcyBhYm92ZSBncm91bmQgaXMgd3JhcHBlZCB1cC7igJkKICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['19.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWWVzLCBJIHNlZSBhbGwgdGhpcy7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWW91IGRvISBUaGVuIHdoYXQgaXMgdGhlcmUgaW4gaXQgdGhhdCB5b3UgZG9uJ3QgdW5kZXJzdGFuZD8gSXMgaXQgdGhhdCB5b3UgZG9uJ3Qga25vdyBob3cgdG8gcHV0IHRoZSBjcm9ja3Mgb24gdGhlIHRvcCBvZiB0aGUgY2xheSwgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+P+KAmTxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYT2YgY291cnNlIHRoZXJlIGlzIG5vdGhpbmcgaW4gd2hhdCB5b3UgaGF2ZSBzYWlkIHRoYXQgSSBkb24ndCBrbm93LCBJc2Nob21hY2h1cy4gQnV0IEkgYW0gYWdhaW4gc2V0IHRoaW5raW5nIHdoYXQgY2FuIGhhdmUgbWFkZSBtZSBhbnN3ZXIg4oCYTm/igJkgdG8gdGhlIHF1ZXN0aW9uIHlvdSBwdXQgdG8gbWUgYSB3aGlsZSBhZ28sIHdoZW4geW91IGFza2VkIG1lIGJyaWVmbHksIERpZCBJIHVuZGVyc3RhbmQgcGxhbnRpbmc/IEZvciBJIHRob3VnaHQgSSBzaG91bGQgaGF2ZSBub3RoaW5nIHRvIHNheSBhYm91dCB0aGUgcmlnaHQgbWV0aG9kIG9mIHBsYW50aW5nLiBCdXQgbm93IHRoYXQgeW91IGhhdmUgdW5kZXJ0YWtlbiB0byBxdWVzdGlvbiBtZSBpbiBwYXJ0aWN1bGFyLCBteSBhbnN3ZXJzLCB5b3UgdGVsbCBtZSwgYWdyZWUgZXhhY3RseSB3aXRoIHRoZSB2aWV3cyBvZiBhIGZhcm1lciBzbyBmYW1vdXMgZm9yIGhpcyBza2lsbCBhcyB5b3Vyc2VsZiEKPC90cmFuc2xhdGlvbj4="
translation['19.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5DYW4gaXQgYmUgdGhhdCBxdWVzdGlvbmluZyBpcyBhIGtpbmQgb2YgdGVhY2hpbmcsIElzY2hvbWFjaHVzPyBUaGUgZmFjdCBpcywgSSBoYXZlIGp1c3QgZGlzY292ZXJlZCB0aGUgcGxhbiBvZiB5b3VyIHNlcmllcyBvZiBxdWVzdGlvbnMhIFlvdSBsZWFkIG1lIGJ5IHBhdGhzIG9mIGtub3dsZWRnZSBmYW1pbGlhciB0byBtZSwgcG9pbnQgb3V0IHRoaW5ncyBsaWtlIHdoYXQgSSBrbm93LCBhbmQgYnJpbmcgbWUgdG8gdGhpbmsgdGhhdCBJIHJlYWxseSBrbm93IHRoaW5ncyB0aGF0IEkgdGhvdWdodCBJIGhhZCBubyBrbm93bGVkZ2Ugb2Yu4oCZCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['19.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYTm93IHN1cHBvc2UgSSBxdWVzdGlvbmVkIHlvdSBhYm91dCBtb25leSzigJkgc2FpZCBJc2Nob21hY2h1cywg4oCYd2hldGhlciBpdCBpcyBnb29kIG9yIGJhZCwgY291bGQgSSBwZXJzdWFkZSB5b3UgdGhhdCB5b3Uga25vdyBob3cgdG8gZGlzdGluZ3Vpc2ggZ29vZCBmcm9tIGZhbHNlIGJ5IHRlc3Q/IEFuZCBieSBwdXR0aW5nIHF1ZXN0aW9ucyBhYm91dCBmbHV0ZS1wbGF5ZXJzIGNvdWxkIEkgY29udmluY2UgeW91IHRoYXQgeW91IHVuZGVyc3RhbmQgZmx1dGUtcGxheWluZzsgYW5kIGJ5IG1lYW5zIG9mIHF1ZXN0aW9ucyBhYm91dCBwYWludGVycyBhbmQgb3RoZXIgYXJ0aXN0c+KAlCc8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWW91IG1pZ2h0LCBzaW5jZSB5b3UgaGF2ZSBjb252aW5jZWQgbWUgdGhhdCBJIHVuZGVyc3RhbmQgYWdyaWN1bHR1cmUsIHRob3VnaCBJIGtub3cgdGhhdCBJIGhhdmUgbmV2ZXIgYmVlbiB0YXVnaHQgdGhpcyBhcnQu4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmE5vLCBpdCBpc24ndCBzbywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+Lgo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['19.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5JIHRvbGQgeW91IGEgd2hpbGUgYWdvIHRoYXQgYWdyaWN1bHR1cmUgaXMgc3VjaCBhIGh1bWFuZSwgZ2VudGxlIGFydCB0aGF0IHlvdSBoYXZlIGJ1dCB0byBzZWUgaGVyIGFuZCBsaXN0ZW4gdG8gaGVyLCBhbmQgc2hlIGF0IG9uY2UgbWFrZXMgeW91IHVuZGVyc3RhbmQgaGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['19.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5TaGUgaGVyc2VsZiBnaXZlcyB5b3UgbWFueSBsZXNzb25zIGluIHRoZSBiZXN0IHdheSBvZiB0cmVhdGluZyBoZXIuIEZvciBpbnN0YW5jZSwgdGhlIHZpbmUgY2xpbWJzIHRoZSBuZWFyZXN0IHRyZWUsIGFuZCBzbyB0ZWFjaGVzIHlvdSB0aGF0IHNoZSB3YW50cyBzdXBwb3J0LiBBbmQgd2hlbiBoZXIgY2x1c3RlcnMgYXJlIHlldCB0ZW5kZXIsIHNoZSBzcHJlYWRzIGhlciBsZWF2ZXMgYWJvdXQgdGhlbSwgYW5kIHRlYWNoZXMgeW91IHRvIHNoYWRlIHRoZSBleHBvc2VkIHBhcnRzIGZyb20gdGhlIHN1bidzIHJheXMgZHVyaW5nIHRoYXQgcGVyaW9kLgo8L3RyYW5zbGF0aW9uPg=="
translation['19.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBpdCBpcyBub3cgdGltZSBmb3IgaGVyIGdyYXBlcyB0byBiZSBzd2VldGVuZWQgYnkgdGhlIHN1biwgc2hlIHNoZWRzIGhlciBsZWF2ZXMsIHRlYWNoaW5nIHlvdSB0byBzdHJpcCBoZXIgYW5kIHJpcGVuIGhlciBmcnVpdC4gQW5kIHRoYW5rcyB0byBoZXIgdGVlbWluZyBmZXJ0aWxpdHksIHNoZSBzaG93cyBzb21lIG1lbGxvdyBjbHVzdGVycyB3aGlsZSBzaGUgY2FycmllcyBvdGhlcnMgeWV0IHNvdXIsIHNvIHNheWluZyB0byB5b3U6IFBsdWNrIG15IGdyYXBlcyBhcyBtZW4gcGx1Y2sgZmlncyzigJRjaG9vc2UgdGhlIGx1c2Npb3VzIG9uZXMgYXMgdGhleSBjb21lLuKAmeKAnQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['20.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIG5vdyBJIGFza2VkLCDigJhIb3cgaXMgaXQgdGhlbiwgSXNjaG9tYWNodXMsIGlmIHRoZSBvcGVyYXRpb25zIG9mIGh1c2JhbmRyeSBhcmUgc28gZWFzeSB0byBsZWFybiBhbmQgYWxsIGFsaWtlIGtub3cgd2hhdCBtdXN0IG5lZWRzIGJlIGRvbmUsIHRoYXQgYWxsIGhhdmUgbm90IHRoZSBzYW1lIGZvcnR1bmU/IEhvdyBpcyBpdCB0aGF0IHNvbWUgZmFybWVycyBsaXZlIGluIGFidW5kYW5jZSBhbmQgaGF2ZSBtb3JlIHRoYW4gdGhleSB3YW50LCB3aGlsZSBvdGhlcnMgY2Fubm90IGdldCB0aGUgYmFyZSBuZWNlc3NhcmllcyBvZiBsaWZlLCBhbmQgZXZlbiBydW4gaW50byBkZWJ0P+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhPaCwgSSB3aWxsIHRlbGwgeW91LCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4uCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['20.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkl0IGlzIG5vdCBrbm93bGVkZ2Ugbm9yIHdhbnQgb2Yga25vd2xlZGdlIG9uIHRoZSBwYXJ0IG9mIGZhcm1lcnMgdGhhdCBjYXVzZXMgb25lIHRvIHRocml2ZSB3aGlsZSBhbm90aGVyIGlzIG5lZWR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['20.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPllvdSB3b24ndCBoZWFyIGEgc3RvcnkgbGlrZSB0aGlzIHJ1bm5pbmcgYWJvdXQ6IFRoZSBlc3RhdGUgaGFzIGdvbmUgdG8gcnVpbiBiZWNhdXNlIHRoZSBzb3dlciBzb3dlZCB1bmV2ZW5seSwgb3IgYmVjYXVzZSBoZSBkaWRuJ3QgcGxhbnQgdGhlIHJvd3Mgc3RyYWlnaHQsIG9yIGJlY2F1c2Ugc29tZW9uZSwgbm90IGtub3dpbmcgdGhlIHJpZ2h0IHNvaWwgZm9yIHZpbmVzLCBwbGFudGVkIHRoZW0gaW4gYmFycmVuIGdyb3VuZCwgb3IgYmVjYXVzZSBzb21lb25lIGRpZG4ndCBrbm93IHRoYXQgaXQgaXMgd2VsbCB0byBwcmVwYXJlIHRoZSBmYWxsb3cgZm9yIHNvd2luZywgb3IgYmVjYXVzZSBzb21lb25lIGRpZG4ndCBrbm93IHRoYXQgaXQgaXMgd2VsbCB0byBtYW51cmUgdGhlIGxhbmQuCjwvdHJhbnNsYXRpb24+"
translation['20.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk5vLCB5b3UgYXJlIG11Y2ggbW9yZSBsaWtlbHkgdG8gaGVhciBpdCBzYWlkOiBUaGUgbWFuIGdldHMgbm8gY29ybiBmcm9tIGhpcyBmaWVsZCBiZWNhdXNlIGhlIHRha2VzIG5vIHRyb3VibGUgdG8gc2VlIHRoYXQgaXQgaXMgc293biBvciBtYW51cmVkLiBPciwgVGhlIG1hbiBoYXMgZ290IG5vIHdpbmUsIGZvciBoZSB0YWtlcyBubyB0cm91YmxlIHRvIHBsYW50IHZpbmVzIG9yIHRvIG1ha2UgaGlzIG9sZCBzdG9jayBiZWFyLiBPciwgVGhlIG1hbiBoYXMgbmVpdGhlciBvbGl2ZXMgbm9yIGZpZ3MsIGJlY2F1c2UgaGUgZG9lc24ndCB0YWtlIHRoZSB0cm91YmxlOyBoZSBkb2VzIG5vdGhpbmcgdG8gZ2V0IHRoZW0uCiAgICAgICAgPC90cmFuc2xhdGlvbj4="
translation['20.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkl0IGlzIG5vdCB0aGUgZmFybWVycyByZXB1dGVkIHRvIGhhdmUgbWFkZSBzb21lIGNsZXZlciBkaXNjb3ZlcnkgaW4gYWdyaWN1bHR1cmUgd2hvIGRpZmZlciBpbiBmb3J0dW5lIGZyb20gb3RoZXJzOiBpdCBpcyB0aGluZ3Mgb2YgdGhpcyBzb3J0IHRoYXQgbWFrZSBhbGwgdGhlIGRpZmZlcmVuY2UsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPi4KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['20.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoaXMgaXMgdHJ1ZSBvZiBnZW5lcmFscyBhbHNvOiB0aGVyZSBhcmUgc29tZSBicmFuY2hlcyBvZiBzdHJhdGVneSBpbiB3aGljaCBvbmUgaXMgYmV0dGVyIG9yIHdvcnNlIHRoYW4gYW5vdGhlciwgbm90IGJlY2F1c2UgaGUgZGlmZmVycyBpbiBpbnRlbGxpZ2VuY2UsIGJ1dCBpbiBwb2ludCBvZiBjYXJlZnVsbmVzcywgdW5kb3VidGVkbHkuIEZvciB0aGUgdGhpbmdzIHRoYXQgYWxsIGdlbmVyYWxzIGtub3csIGFuZCBtb3N0IHByaXZhdGVzLCBhcmUgZG9uZSBieSBzb21lIGNvbW1hbmRlcnMgYW5kIGxlZnQgdW5kb25lIGJ5IG90aGVycy4KPC90cmFuc2xhdGlvbj4="
translation['20.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkZvciBleGFtcGxlLCB0aGV5IGFsbCBrbm93IHRoYXQgd2hlbiBtYXJjaGluZyB0aHJvdWdoIGFuIGVuZW15J3MgY291bnRyeSwgdGhlIHJpZ2h0IHdheSBpcyB0byBtYXJjaCBpbiB0aGUgZm9ybWF0aW9uIGluIHdoaWNoIHRoZXkgd2lsbCBmaWdodCBiZXN0LCBpZiBuZWVkIGJlLiBXZWxsLCBrbm93aW5nIHRoaXMsIHNvbWUgb2JzZXJ2ZSB0aGUgcnVsZSwgb3RoZXJzIGJyZWFrIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['20.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFsbCBrbm93IHRoYXQgaXQgaXMgcmlnaHQgdG8gcG9zdCBzZW50cmllcyBieSBkYXkgYW5kIG5pZ2h0IGJlZm9yZSB0aGUgY2FtcDsgYnV0IHRoaXMgdG9vIGlzIGEgZHV0eSB0aGF0IHNvbWUgYXR0ZW5kIHRvLCB3aGlsZSBvdGhlcnMgbmVnbGVjdCBpdC4KPC90cmFuc2xhdGlvbj4="
translation['20.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB3aGVyZSB3aWxsIHlvdSBmaW5kIHRoZSBtYW4gd2hvIGRvZXMgbm90IGtub3cgdGhhdCwgaW4gbWFyY2hpbmcgdGhyb3VnaCBhIGRlZmlsZSwgaXQgaXMgYmV0dGVyIHRvIG9jY3VweSB0aGUgcG9pbnRzIG9mIHZhbnRhZ2UgZmlyc3Q/IFlldCB0aGlzIG1lYXN1cmUgb2YgcHJlY2F1dGlvbiB0b28gaXMgZHVseSB0YWtlbiBieSBzb21lIGFuZCBuZWdsZWN0ZWQgYnkgb3RoZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['20.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5TbywgdG9vLCBldmVyeW9uZSB3aWxsIHNheSB0aGF0IGluIGFncmljdWx0dXJlIHRoZXJlIGlzIG5vdGhpbmcgc28gZ29vZCBhcyBtYW51cmUsIGFuZCB0aGVpciBleWVzIHRlbGwgdGhlbSB0aGF0IG5hdHVyZSBwcm9kdWNlcyBpdC4gQWxsIGtub3cgZXhhY3RseSBob3cgaXQgaXMgcHJvZHVjZWQsIGFuZCBpdCBpcyBlYXN5IHRvIGdldCBhbnkgYW1vdW50IG9mIGl0OyBhbmQgeWV0LCB3aGlsZSBzb21lIHRha2UgY2FyZSB0byBoYXZlIGl0IGNvbGxlY3RlZCwgb3RoZXJzIGNhcmUgbm90aGluZyBhYm91dCBpdC4KPC90cmFuc2xhdGlvbj4="
translation['20.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5ZZXQgdGhlIHJhaW4gaXMgc2VudCBmcm9tIGhlYXZlbiwgYW5kIGFsbCB0aGUgaG9sbG93cyBiZWNvbWUgcG9vbHMgb2Ygd2F0ZXIsIGFuZCB0aGUgZWFydGggeWllbGRzIGhlcmJhZ2Ugb2YgZXZlcnkga2luZCB3aGljaCBtdXN0IGJlIGNsZWFyZWQgb2ZmIHRoZSBncm91bmQgYnkgdGhlIHNvd2VyIGJlZm9yZSBzb3dpbmc7IGFuZCB0aGUgcnViYmlzaCBoZSByZW1vdmVzIGhhcyBidXQgdG8gYmUgdGhyb3duIGludG8gd2F0ZXIsIGFuZCB0aW1lIG9mIGl0c2VsZiB3aWxsIG1ha2Ugd2hhdCB0aGUgc29pbCBsaWtlcy4gRm9yIGV2ZXJ5IGtpbmQgb2YgdmVnZXRhdGlvbiwgZXZlcnkga2luZCBvZiBzb2lsIGluIHN0YWduYW50IHdhdGVyIHR1cm5zIGludG8gbWFudXJlLgo8L3RyYW5zbGF0aW9uPg=="
translation['20.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQW5kIGFnYWluLCBhbGwgdGhlIHdheXMgb2YgdHJlYXRpbmcgdGhlIHNvaWwgd2hlbiBpdCBpcyB0b28gd2V0IGZvciBzb3dpbmcgb3IgdG9vIHNhbHQgZm9yIHBsYW50aW5nIGFyZSBmYW1pbGlhciB0byBhbGwgbWVu4oCUaG93IHRoZSBsYW5kIGlzIGRyYWluZWQgYnkgZGl0Y2hlcywgaG93IHRoZSBzYWx0IGlzIGNvcnJlY3RlZCBieSBiZWluZyBtaXhlZCB3aXRoIHNhbHRsZXNzIHN1YnN0YW5jZXMsIGxpcXVpZCBvciBkcnkuIFlldCB0aGVzZSBtYXR0ZXJzLCBhZ2FpbiwgZG8gbm90IGFsd2F5cyByZWNlaXZlIGF0dGVudGlvbi4KPC90cmFuc2xhdGlvbj4="
translation['20.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5TdXBwb3NlIGEgbWFuIHRvIGJlIHdob2xseSBpZ25vcmFudCBhcyB0byB3aGF0IHRoZSBsYW5kIGNhbiBwcm9kdWNlLCBhbmQgdG8gYmUgdW5hYmxlIHRvIHNlZSBjcm9wIG9yIHRyZWUgb24gaXQsIG9yIHRvIGhlYXIgZnJvbSBhbnlvbmUgdGhlIHRydXRoIGFib3V0IGl0LCB5ZXQgaXMgaXQgbm90IGZhciBlYXNpZXIgZm9yIGFueSBtYW4gdG8gcHJvdmUgYSBwYXJjZWwgb2YgbGFuZCB0aGFuIHRvIHRlc3QgYSBob3JzZSBvciB0byB0ZXN0IGEgaHVtYW4gYmVpbmc/IEZvciB0aGUgbGFuZCBuZXZlciBwbGF5cyB0cmlja3MsIGJ1dCByZXZlYWxzIGZyYW5rbHkgYW5kIHRydXRoZnVsbHkgd2hhdCBzaGUgY2FuIGFuZCB3aGF0IHNoZSBjYW5ub3QgZG8uCjwvdHJhbnNsYXRpb24+"
translation['20.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rIHRoYXQganVzdCBiZWNhdXNlIHNoZSBjb25jZWFscyBub3RoaW5nIGZyb20gb3VyIGtub3dsZWRnZSBhbmQgdW5kZXJzdGFuZGluZywgdGhlIGxhbmQgaXMgdGhlIHN1cmVzdCB0ZXN0ZXIgb2YgZ29vZCBhbmQgYmFkIG1lbi4gRm9yIHRoZSBzbG90aGZ1bCBjYW5ub3QgcGxlYWQgaWdub3JhbmNlLCBhcyBpbiBvdGhlciBhcnRzOiBsYW5kLCBhcyBhbGwgbWVuIGtub3csIHJlc3BvbmRzIHRvIGdvb2QgdHJlYXRtZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['20.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5IdXNiYW5kcnkgaXMgdGhlIGNsZWFyIGFjY3VzZXIgb2YgdGhlIHJlY3JlYW50IHNvdWwuIEZvciBubyBvbmUgcGVyc3VhZGVzIGhpbXNlbGYgdGhhdCBtYW4gY291bGQgbGl2ZSB3aXRob3V0IGJyZWFkOyB0aGVyZWZvcmUgaWYgYSBtYW4gd2lsbCBub3QgZGlnIGFuZCBrbm93cyBubyBvdGhlciBwcm9maXQtZWFybmluZyB0cmFkZSwgaGUgaXMgY2xlYXJseSBtaW5kZWQgdG8gbGl2ZSBieSBzdGVhbGluZyBvciByb2JiZXJ5IG9yIGJlZ2dpbmfigJRvciBoZSBpcyBhbiB1dHRlciBmb29sLgo8L3RyYW5zbGF0aW9uPg=="
translation['20.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYRmFybWluZyzigJkgaGUgYWRkZWQsIOKAmG1heSByZXN1bHQgaW4gcHJvZml0IG9yIGluIGxvc3M7IGl0IG1ha2VzIGEgZ3JlYXQgZGlmZmVyZW5jZSB0byB0aGUgcmVzdWx0LCBldmVuIHdoZW4gbWFueSBsYWJvdXJlcnMgYXJlIGVtcGxveWVkLCB3aGV0aGVyIHRoZSBmYXJtZXIgdGFrZXMgY2FyZSB0aGF0IHRoZSBtZW4gYXJlIHdvcmtpbmcgZHVyaW5nIHRoZSB3b3JraW5nIGhvdXJzIG9yIGlzIGNhcmVsZXNzIGFib3V0IGl0LiBGb3Igb25lIG1hbiBpbiB0ZW4gYnkgd29ya2luZyBhbGwgdGhlIHRpbWUgbWF5IGVhc2lseSBtYWtlIGEgZGlmZmVyZW5jZSwgYW5kIGFub3RoZXIgYnkga25vY2tpbmcgb2ZmIGJlZm9yZSB0aGUgdGltZTsKPC90cmFuc2xhdGlvbj4="
translation['20.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQsIG9mIGNvdXJzZSwgaWYgdGhlIG1lbiBhcmUgYWxsb3dlZCB0byBiZSBzbGFjayBhbGwgdGhlIGRheSBsb25nLCB0aGUgZGVjcmVhc2UgaW4gdGhlIHdvcmsgZG9uZSBtYXkgZWFzaWx5IGFtb3VudCB0byBvbmUgaGFsZiBvZiB0aGUgd2hvbGUuCjwvdHJhbnNsYXRpb24+"
translation['20.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5KdXN0IGFzIHR3byB0cmF2ZWxsZXJzIG9uIHRoZSByb2FkLCBib3RoIHlvdW5nIGFuZCBpbiBnb29kIGhlYWx0aCwgd2lsbCBkaWZmZXIgc28gbXVjaCBpbiBwYWNlIHRoYXQgb25lIHdpbGwgY292ZXIgdHdvIGh1bmRyZWQgZnVybG9uZ3MgdG8gdGhlIG90aGVyJ3MgaHVuZHJlZCwgYmVjYXVzZSB0aGUgb25lIGRvZXMgd2hhdCBoZSBzZXQgb3V0IHRvIGRvLCBieSBnb2luZyBhaGVhZCwgd2hpbGUgdGhlIG90aGVyIGlzIGFsbCBmb3IgZWFzZSwgbm93IHJlc3RpbmcgYnkgYSBmb3VudGFpbiBvciBpbiB0aGUgc2hhZGUsIG5vdyBnYXppbmcgYXQgdGhlIHZpZXcsIG5vdyB3b29pbmcgdGhlIHNvZnQgYnJlZXplOwo8L3RyYW5zbGF0aW9uPg=="
translation['20.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5zbyBpbiBmYXJtIHdvcmsgdGhlcmUgaXMgYSB2YXN0IGRpZmZlcmVuY2UgaW4gZWZmZWN0aXZlbmVzcyBiZXR3ZWVuIHRoZSBtZW4gd2hvIGRvIHRoZSBqb2IgdGhleSBhcmUgcHV0IG9uIHRvIGRvIGFuZCB0aG9zZSB3aG8sIGluc3RlYWQgb2YgZG9pbmcgaXQsIGludmVudCBleGN1c2VzIGZvciBub3Qgd29ya2luZyBhbmQgYXJlIGFsbG93ZWQgdG8gYmUgc2xhY2suCjwvdHJhbnNsYXRpb24+"
translation['20.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5JbiBmYWN0LCBiZXR3ZWVuIGdvb2Qgd29yayBhbmQgZGlzaG9uZXN0IHNsb3RoZnVsbmVzcyB0aGVyZSBpcyBhcyB3aWRlIGEgZGlmZmVyZW5jZSBhcyBiZXR3ZWVuIGFjdHVhbCB3b3JrIGFuZCBhY3R1YWwgaWRsZW5lc3MuIFN1cHBvc2UgdGhlIHZpbmVzIGFyZSBiZWluZyBob2VkIHRvIGNsZWFyIHRoZSBncm91bmQgb2Ygd2VlZHM6IGlmIHRoZSBob2VpbmcgaXMgc28gYmFkbHkgZG9uZSB0aGF0IHRoZSB3ZWVkcyBncm93IHJhbmtlciBhbmQgbW9yZSBhYnVuZGFudCwgaG93IGNhbiB5b3UgY2FsbCB0aGF0IGFueXRoaW5nIGJ1dCBpZGxlbmVzcz/igJkKPC90cmFuc2xhdGlvbj4="
translation['20.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYVGhlc2UsIHRoZW4sIGFyZSB0aGUgZXZpbHMgdGhhdCBjcnVzaCBlc3RhdGVzIGZhciBtb3JlIHRoYW4gc2hlZXIgbGFjayBvZiBrbm93bGVkZ2UuIEZvciB0aGUgb3V0Z29pbmcgZXhwZW5zZXMgb2YgdGhlIGVzdGF0ZSBhcmUgbm90IGEgcGVubnkgbGVzczsgYnV0IHRoZSB3b3JrIGRvbmUgaXMgaW5zdWZmaWNpZW50IHRvIHNob3cgYSBwcm9maXQgb24gdGhlIGV4cGVuZGl0dXJlOyBhZnRlciB0aGF0IHRoZXJlJ3Mgbm8gbmVlZCB0byB3b25kZXIgaWYgdGhlIGV4cGVjdGVkIHN1cnBsdXMgaXMgY29udmVydGVkIGludG8gYSBsb3NzLgo8L3RyYW5zbGF0aW9uPg=="
translation['20.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgb3RoZXIgaGFuZCwgdG8gYSBjYXJlZnVsIG1hbiwgd2hvIHdvcmtzIHN0cmVudW91c2x5IGF0IGFncmljdWx0dXJlLCBubyBidXNpbmVzcyBnaXZlcyBxdWlja2VyIHJldHVybnMgdGhhbiBmYXJtaW5nLiBNeSBmYXRoZXIgdGF1Z2h0IG1lIHRoYXQgYW5kIHByb3ZlZCBpdCBieSBoaXMgb3duIHByYWN0aWNlLiBGb3IgaGUgbmV2ZXIgYWxsb3dlZCBtZSB0byBidXkgYSBwaWVjZSBvZiBsYW5kIHRoYXQgd2FzIHdlbGwgZmFybWVkOyBidXQgcHJlc3NlZCBtZSB0byBidXkgYW55IHRoYXQgd2FzIHVuY3VsdGl2YXRlZCBhbmQgdW5wbGFudGVkIG93aW5nIHRvIHRoZSBvd25lcidzIG5lZ2xlY3Qgb3IgaW5jYXBhY2l0eS4KPC90cmFuc2xhdGlvbj4="
translation['20.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz7igJxXZWxsIGZhcm1lZCBsYW5kLOKAnSBoZSB3b3VsZCBzYXksIOKAnGNvc3RzIGEgbGFyZ2Ugc3VtIGFuZCBjYW4ndCBiZSBpbXByb3ZlZDvigJ0gYW5kIGhlIGhlbGQgdGhhdCB3aGVyZSB0aGVyZSBpcyBubyByb29tIGZvciBpbXByb3ZlbWVudCB0aGVyZSBpcyBub3QgbXVjaCBwbGVhc3VyZSB0byBiZSBnb3QgZnJvbSB0aGUgbGFuZDogbGFuZGVkIGVzdGF0ZSBhbmQgbGl2ZXN0b2NrIG11c3QgYmUgY29udGludWFsbHkgY29taW5nIG9uIHRvIGdpdmUgdGhlIGZ1bGxlc3QgbWVhc3VyZSBvZiBzYXRpc2ZhY3Rpb24uIE5vdyBub3RoaW5nIGltcHJvdmVzIG1vcmUgdGhhbiBhIGZhcm0gdGhhdCBpcyBiZWluZyB0cmFuc2Zvcm1lZCBmcm9tIGEgd2lsZGVybmVzcyBpbnRvIGZydWl0ZnVsIGZpZWxkcy4KICAgICAgICA8L3RyYW5zbGF0aW9uPg=="
translation['20.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5JIGFzc3VyZSB5b3UsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgdGhhdCB3ZSBoYXZlIG9mdGVuIGFkZGVkIGEgaHVuZHJlZGZvbGQgdG8gdGhlIHZhbHVlIG9mIGEgZmFybS4gVGhlcmUgaXMgc28gbXVjaCBtb25leSBpbiB0aGlzIGlkZWEsIDxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIGFuZCBpdCBpcyBzbyBlYXN5IHRvIGxlYXJuLCB0aGF0IG5vIHNvb25lciBoYXZlIHlvdSBoZWFyZCBvZiBpdCBmcm9tIG1lIHRoYW4geW91IGtub3cgYXMgbXVjaCBhcyBJIGRvLCBhbmQgY2FuIGdvIGhvbWUgYW5kIHRlYWNoIGl0IHRvIHNvbWVvbmUgZWxzZSwgaWYgeW91IGxpa2UuCjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3RyYW5zbGF0aW9uPg=="
translation['20.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5Nb3Jlb3ZlciwgbXkgZmF0aGVyIGRpZCBub3QgZ2V0IGhpcyBrbm93bGVkZ2Ugb2YgaXQgYXQgc2Vjb25kaGFuZCwgbm9yIGRpZCBoZSBkaXNjb3ZlciBpdCBieSBtdWNoIHRob3VnaHQ7IGJ1dCBoZSB3b3VsZCBzYXkgdGhhdCwgdGhhbmtzIHRvIGhpcyBsb3ZlIG9mIGh1c2JhbmRyeSBhbmQgaGFyZCB3b3JrLCBoZSBoYWQgY292ZXRlZCBhIGZhcm0gb2YgdGhpcyBzb3J0IGluIG9yZGVyIHRoYXQgaGUgbWlnaHQgaGF2ZSBzb21ldGhpbmcgdG8gZG8sIGFuZCBjb21iaW5lIHByb2ZpdCB3aXRoIHBsZWFzdXJlLgogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['20.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgSSBhc3N1cmUgeW91LCA8cGVyc05hbWUgY2xhc3M9InRyYW5zbGF0aW9uIj48c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC9wZXJzTmFtZT4sIG5vIEF0aGVuaWFuLCBJIGJlbGlldmUsIGhhZCBzdWNoIGEgc3Ryb25nIG5hdHVyYWwgbG92ZSBvZiBhZ3JpY3VsdHVyZSBhcyBteSBmYXRoZXIu4oCZPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgb24gaGVhcmluZyB0aGlzIEkgYXNrZWQsIOKAmERpZCB5b3VyIGZhdGhlciBrZWVwIGFsbCB0aGUgZmFybXMgdGhhdCBoZSBjdWx0aXZhdGVkLCBJc2Nob21hY2h1cywgb3IgZGlkIGhlIHNlbGwgd2hlbiBoZSBjb3VsZCBnZXQgYSBnb29kIHByaWNlP+KAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhIZSBzb2xkLCBvZiBjb3Vyc2Us4oCZIGFuc3dlcmVkIElzY2hvbWFjaHVzLCDigJhidXQsIHlvdSBzZWUsIG93aW5nIHRvIGhpcyBpbmR1c3RyaW91cyBoYWJpdHMsIGhlIHdvdWxkIHByb21wdGx5IGJ1eSBhbm90aGVyIHRoYXQgd2FzIG91dCBvZiBjdWx0aXZhdGlvbi7igJkKPC90cmFuc2xhdGlvbj4="
translation['20.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWW91IG1lYW4sIElzY2hvbWFjaHVzLCB0aGF0IHlvdXIgZmF0aGVyIHJlYWxseSBsb3ZlZCBhZ3JpY3VsdHVyZSBhcyBpbnRlbnNlbHkgYXMgbWVyY2hhbnRzIGxvdmUgY29ybi4gU28gZGVlcCBpcyB0aGVpciBsb3ZlIG9mIGNvcm4gdGhhdCBvbiByZWNlaXZpbmcgcmVwb3J0cyB0aGF0IGl0IGlzIGFidW5kYW50IGFueXdoZXJlLCBtZXJjaGFudHMgd2lsbCB2b3lhZ2UgaW4gcXVlc3Qgb2YgaXQ6IHRoZXkgd2lsbCBjcm9zcyB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2NzUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjY3NSI+QWVnZWFuPC9wbGFjZU5hbWU+LCB0aGUgRXV4aW5lLCB0aGUgU2ljaWxpYW4gc2VhOwo8L3RyYW5zbGF0aW9uPg=="
translation['20.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgd2hlbiB0aGV5IGhhdmUgZ290IGFzIG11Y2ggYXMgcG9zc2libGUsIHRoZXkgY2FycnkgaXQgb3ZlciB0aGUgc2VhLCBhbmQgdGhleSBhY3R1YWxseSBzdG93IGl0IGluIHRoZSB2ZXJ5IHNoaXAgaW4gd2hpY2ggdGhleSBzYWlsIHRoZW1zZWx2ZXMuIEFuZCB3aGVuIHRoZXkgd2FudCBtb25leSwgdGhleSBkb24ndCB0aHJvdyB0aGUgY29ybiBhd2F5IGFueXdoZXJlIGF0IGhhcGhhemFyZCwgYnV0IHRoZXkgY2FycnkgaXQgdG8gdGhlIHBsYWNlIHdoZXJlIHRoZXkgaGVhciB0aGF0IGNvcm4gaXMgbW9zdCB2YWx1ZWQgYW5kIHRoZSBwZW9wbGUgcHJpemUgaXQgbW9zdCBoaWdobHksIGFuZCBkZWxpdmVyIGl0IHRvIHRoZW0gdGhlcmUuIFllcywgeW91ciBmYXRoZXIncyBsb3ZlIG9mIGFncmljdWx0dXJlIHNlZW1zIHRvIGJlIHNvbWV0aGluZyBsaWtlIHRoYXQu4oCZCjwvdHJhbnNsYXRpb24+"
translation['20.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYWW91J3JlIGpva2luZywgPHBlcnNOYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvcGVyc05hbWU+LOKAmSByZWpvaW5lZCBJc2Nob21hY2h1czsg4oCYYnV0IEkgaG9sZCB0aGF0IGEgbWFuIGhhcyBhIG5vIGxlc3MgZ2VudWluZSBsb3ZlIG9mIGJ1aWxkaW5nIHdobyBzZWxscyBoaXMgaG91c2VzIGFzIHNvb24gYXMgdGhleSBhcmUgZmluaXNoZWQgYW5kIHByb2NlZWRzIHRvIGJ1aWxkIG90aGVycy7igJk8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnOKAmE9mIGNvdXJzZTsgYW5kIEkgZGVjbGFyZSwgSXNjaG9tYWNodXMsIG9uIG15IG9hdGggdGhhdCBJIGJlbGlldmUgeW91LCB0aGF0IGFsbCBtZW4gbmF0dXJhbGx5IGxvdmUgd2hhdGV2ZXIgdGhleSB0aGluayB3aWxsIGJyaW5nIHRoZW0gcHJvZml0LuKAmeKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['21.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCc4oCYQnV0IEkgYW0gcG9uZGVyaW5nIG92ZXIgdGhlIHNraWxsIHdpdGggd2hpY2ggeW91IGhhdmUgcHJlc2VudGVkIHRoZSB3aG9sZSBhcmd1bWVudCBpbiBzdXBwb3J0IG9mIHlvdXIgcHJvcG9zaXRpb24sIElzY2hvbWFjaHVzLiBGb3IgeW91IHN0YXRlZCB0aGF0IGh1c2JhbmRyeSBpcyB0aGUgZWFzaWVzdCBvZiBhbGwgYXJ0cyB0byBsZWFybiwgYW5kIGFmdGVyIGhlYXJpbmcgYWxsIHRoYXQgeW91IGhhdmUgc2FpZCwgSSBhbSBxdWl0ZSBjb252aW5jZWQgdGhhdCB0aGlzIGlzIHNvLuKAmQogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['21.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhPZiBjb3Vyc2UgaXQgaXMs4oCZIGNyaWVkIElzY2hvbWFjaHVzOyDigJhidXQgSSBncmFudCB5b3UsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgdGhhdCBpbiByZXNwZWN0IG9mIGFwdGl0dWRlIGZvciBjb21tYW5kLCB3aGljaCBpcyBjb21tb24gdG8gYWxsIGZvcm1zIG9mIGJ1c2luZXNzIGFsaWtl4oCUYWdyaWN1bHR1cmUsIHBvbGl0aWNzLCBlc3RhdGUtbWFuYWdlbWVudCwgd2FyZmFyZeKAlGluIHRoYXQgcmVzcGVjdCB0aGUgaW50ZWxsaWdlbmNlIHNob3duIGJ5IGRpZmZlcmVudCBjbGFzc2VzIG9mIG1lbiB2YXJpZXMgZ3JlYXRseS4KPHN1cm5hbWUgY2xhc3M9InRyYW5zbGF0aW9uIiBmdWxsPSJ5ZXMiPlNvY3JhdGVzPC9zdXJuYW1lPjwvdHJhbnNsYXRpb24+"
translation['21.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkZvciBleGFtcGxlLCBvbiBhIG1hbi1vZi13YXIsIHdoZW4gdGhlIHNoaXAgaXMgb24gdGhlIGhpZ2ggc2VhcyBhbmQgdGhlIHJvd2VycyBtdXN0IHRvaWwgYWxsIGRheSB0byByZWFjaCBwb3J0LCBzb21lIGJvYXRzd2FpbnMgY2FuIHNheSBhbmQgZG8gdGhlIHJpZ2h0IHRoaW5nIHRvIHNoYXJwZW4gdGhlIG1lbidzIHNwaXJpdHMgYW5kIG1ha2UgdGhlbSB3b3JrIHdpdGggYSB3aWxsLCB3aGlsZSBvdGhlcnMgYXJlIHNvIHVuaW50ZWxsaWdlbnQgdGhhdCBpdCB0YWtlcyB0aGVtIG1vcmUgdGhhbiB0d2ljZSB0aGUgdGltZSB0byBmaW5pc2ggdGhlIHNhbWUgdm95YWdlLiBIZXJlIHRoZXkgbGFuZCBiYXRoZWQgaW4gc3dlYXQsIHdpdGggbXV0dWFsIGNvbmdyYXR1bGF0aW9ucywgYm9hdHN3YWluIGFuZCBzZWFtZW4uIFRoZXJlIHRoZXkgYXJyaXZlIHdpdGggYSBkcnkgc2tpbjsgdGhleSBoYXRlIHRoZWlyIG1hc3RlciBhbmQgaGUgaGF0ZXMgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['21.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkdlbmVyYWxzLCB0b28sIGRpZmZlciBmcm9tIG9uZSBhbm90aGVyIGluIHRoaXMgcmVzcGVjdC4gRm9yIHNvbWUgbWFrZSB0aGVpciBtZW4gdW53aWxsaW5nIHRvIHdvcmsgYW5kIHRvIHRha2Ugcmlza3MsIGRpc2luY2xpbmVkIGFuZCB1bndpbGxpbmcgdG8gb2JleSwgZXhjZXB0IHVuZGVyIGNvbXB1bHNpb24sIGFuZCBhY3R1YWxseSBwcm91ZCBvZiBkZWZ5aW5nIHRoZWlyIGNvbW1hbmRlcjogYXllLCBhbmQgdGhleSBjYXVzZSB0aGVtIHRvIGhhdmUgbm8gc2Vuc2Ugb2YgZGlzaG9ub3VyIHdoZW4gc29tZXRoaW5nIGRpc2dyYWNlZnVsIG9jY3Vycy4KPC90cmFuc2xhdGlvbj4="
translation['21.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkNvbnRyYXN0IHRoZSBnZW5pdXMsIHRoZSBicmF2ZSBhbmQgc2NpZW50aWZpYyBsZWFkZXI6IGxldCBoaW0gdGFrZSBvdmVyIHRoZSBjb21tYW5kIG9mIHRoZXNlIHNhbWUgdHJvb3BzLCBvciBvZiBvdGhlcnMgaWYgeW91IGxpa2UuIFdoYXQgZWZmZWN0IGhhcyBoZSBvbiB0aGVtPyBUaGV5IGFyZSBhc2hhbWVkIHRvIGRvIGEgZGlzZ3JhY2VmdWwgYWN0LCB0aGluayBpdCBiZXR0ZXIgdG8gb2JleSwgYW5kIHRha2UgYSBwcmlkZSBpbiBvYmVkaWVuY2UsIHdvcmtpbmcgY2hlZXJmdWxseSwgZXZlcnkgbWFuIGFuZCBhbGwgdG9nZXRoZXIsIHdoZW4gaXQgaXMgbmVjZXNzYXJ5IHRvIHdvcmsuCjwvdHJhbnNsYXRpb24+"
translation['21.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkp1c3QgYXMgYSBsb3ZlIG9mIHdvcmsgbWF5IHNwcmluZyB1cCBpbiB0aGUgbWluZCBvZiBhIHByaXZhdGUgc29sZGllciBoZXJlIGFuZCB0aGVyZSwgc28gYSB3aG9sZSBhcm15IHVuZGVyIHRoZSBpbmZsdWVuY2Ugb2YgYSBnb29kIGxlYWRlciBpcyBpbnNwaXJlZCB3aXRoIGxvdmUgb2Ygd29yayBhbmQgYW1iaXRpb24gdG8gZGlzdGluZ3Vpc2ggaXRzZWxmIHVuZGVyIHRoZSBjb21tYW5kZXIncyBleWUuCjwvdHJhbnNsYXRpb24+"
translation['21.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkxldCB0aGlzIGJlIHRoZSBmZWVsaW5nIG9mIHRoZSByYW5rIGFuZCBmaWxlIGZvciB0aGVpciBjb21tYW5kZXI7IGFuZCBJIHRlbGwgeW91LCBoZSBpcyB0aGUgc3Ryb25nIGxlYWRlciwgaGUsIGFuZCBub3QgdGhlIHN0dXJkaWVzdCBzb2xkaWVyLCBub3QgdGhlIGJlc3Qgd2l0aCBib3cgYW5kIGphdmVsaW4sIG5vdCB0aGUgbWFuIHdobyByaWRlcyB0aGUgYmVzdCBob3JzZSBhbmQgaXMgZm9yZW1vc3QgaW4gZmFjaW5nIGRhbmdlciwgbm90IHRoZSBpZGVhbCBvZiBrbmlnaHQgb3IgdGFyZ2V0ZWVyLCBidXQgaGUgd2hvIGNhbiBtYWtlIGhpcyBzb2xkaWVycyBmZWVsIHRoYXQgdGhleSBhcmUgYm91bmQgdG8gZm9sbG93IGhpbSB0aHJvdWdoIGZpcmUgYW5kIGluIGFueSBhZHZlbnR1cmUuCjwvdHJhbnNsYXRpb24+"
translation['21.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkhpbSB5b3UgbWF5IGp1c3RseSBjYWxsIGhpZ2gtbWluZGVkIHdobyBoYXMgbWFueSBmb2xsb3dlcnMgb2YgbGlrZSBtaW5kOyBhbmQgd2l0aCByZWFzb24gbWF5IGhlIGJlIHNhaWQgdG8gbWFyY2gg4oCcd2l0aCBhIHN0cm9uZyBhcm3igJ0gd2hvc2Ugd2lsbCBtYW55IGFuIGFybSBpcyByZWFkeSB0byBzZXJ2ZTsgYW5kIHRydWx5IGdyZWF0IGlzIGhlIHdobyBjYW4gZG8gZ3JlYXQgZGVlZHMgYnkgaGlzIHdpbGwgcmF0aGVyIHRoYW4gaGlzIHN0cmVuZ3RoLgo8L3RyYW5zbGF0aW9uPg=="
translation['21.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJzigJhTbyB0b28gaW4gcHJpdmF0ZSBpbmR1c3RyaWVzLCB0aGUgbWFuIGluIGF1dGhvcml0eSDigJRiYWlsaWZmIG9yIG1hbmFnZXLigJR3aG8gY2FuIG1ha2UgdGhlIHdvcmtlcnMga2VlbiwgaW5kdXN0cmlvdXMgYW5kIHBlcnNldmVyaW5n4oCUaGUgaXMgdGhlIG1hbiB3aG8gZ2l2ZXMgYSBsaWZ0IHRvIHRoZSBidXNpbmVzcyBhbmQgc3dlbGxzIHRoZSBzdXJwbHVzLgogICAgICAgIDwvdHJhbnNsYXRpb24+"
translation['21.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQsIDxwZXJzTmFtZSBjbGFzcz0idHJhbnNsYXRpb24iPjxzdXJuYW1lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnVsbD0ieWVzIj5Tb2NyYXRlczwvc3VybmFtZT48L3BlcnNOYW1lPiwgaWYgdGhlIGFwcGVhcmFuY2Ugb2YgdGhlIG1hc3RlciBpbiB0aGUgZmllbGQsIG9mIHRoZSBtYW4gd2hvIGhhcyB0aGUgZnVsbGVzdCBwb3dlciB0byBwdW5pc2ggdGhlIGJhZCBhbmQgcmV3YXJkIHRoZSBzdHJlbnVvdXMgd29ya21lbiwgbWFrZXMgbm8gc3RyaWtpbmcgaW1wcmVzc2lvbiBvbiB0aGUgbWVuIGF0IHdvcmssIEkgZm9yIG9uZSBjYW5ub3QgZW52eSBoaW0uIEJ1dCBpZiBhdCBzaWdodCBvZiBoaW0gdGhleSBiZXN0aXIgdGhlbXNlbHZlcywgYW5kIGEgc3Bpcml0IG9mIGRldGVybWluYXRpb24gYW5kIHJpdmFscnkgYW5kIGVhZ2VybmVzcyB0byBleGNlbCBmYWxscyBvbiBldmVyeSB3b3JrbWFuLCB0aGVuIEkgc2hvdWxkIHNheTogdGhpcyBtYW4gaGFzIGEgdG91Y2ggb2YgdGhlIGtpbmdseSBuYXR1cmUgaW4gaGltLgo8c3VybmFtZSBjbGFzcz0idHJhbnNsYXRpb24iIGZ1bGw9InllcyI+U29jcmF0ZXM8L3N1cm5hbWU+PC90cmFuc2xhdGlvbj4="
translation['21.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhpcywgaW4gbXkganVkZ21lbnQsIGlzIHRoZSBncmVhdGVzdCB0aGluZyBpbiBldmVyeSBvcGVyYXRpb24gdGhhdCBtYWtlcyBhbnkgZGVtYW5kIG9uIHRoZSBsYWJvdXIgb2YgbWVuLCBhbmQgdGhlcmVmb3JlIGluIGFncmljdWx0dXJlLiBNaW5kIHlvdSwgSSBkbyBub3QgZ28gc28gZmFyIGFzIHRvIHNheSB0aGF0IHRoaXMgY2FuIGJlIGxlYXJudCBhdCBzaWdodCBvciBhdCBhIHNpbmdsZSBoZWFyaW5nLiBPbiB0aGUgY29udHJhcnksIHRvIGFjcXVpcmUgdGhlc2UgcG93ZXJzIGEgbWFuIG5lZWRzIGVkdWNhdGlvbjsgaGUgbXVzdCBiZSBwb3NzZXNzZWQgb2YgZ3JlYXQgbmF0dXJhbCBnaWZ0czsgYWJvdmUgYWxsLCBoZSBtdXN0IGJlIGEgZ2VuaXVzLgo8L3RyYW5zbGF0aW9uPg=="
