var translations = [];
var translatedSection = null;
var current = 0;

function updateScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  console.log(page)

  var bookmarkedPageFieldName = book + "Page";
  var bookmarkedPage = localStorage.getItem(bookmarkedPageFieldName);
  if (bookmarkedPage == null) {
    localStorage.setItem(bookmarkedPageFieldName, page);
  }

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";

  var scrollPosition = localStorage.getItem(positionOnPage);
  if (scrollPosition == null) {
    scrollPosition = window.pageYOffset;
    localStorage.setItem(positionOnPage, scrollPosition);
    return;
  }

  if (bookmarkedPage == page) {
    window.scrollTo(0, scrollPosition)
    return;
  }
  window.location = bookmarkedPage;
}

function storeScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  localStorage.setItem(book + "Page", page);

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";
  scrollPosition = window.pageYOffset;
  localStorage.setItem(positionOnPage, scrollPosition);
}

function showNextOnHelper(evt) {
  current++;
  if (current > translations.length - 1) {
    current = 0;
  }
  var translation = translations[current];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = (current + 1) + "/" + translations.length;
    helper.appendChild(transCount);
  }
}

function updateHelper(evt, lineNumber, translationsForWord) {
  if (typeof updateHelper.currentWord === 'object') {
    updateHelper.currentWord.style.textDecoration = "none";
  }
  
  if (evt.target == updateHelper.currentWord) {
    displayTranslation(lineNumber);
    return;
  }

  evt.target.style.textDecoration = "underline red";
  updateHelper.currentWord = evt.target;

  if (typeof updateHelper.previousCommentBubble === 'object' 
      && updateHelper.previousCommentBubble != null) {
    updateHelper.previousCommentBubble.style.display = "none";
  }
  var commentBubble = document.getElementById("indicator-" + lineNumber);
  if (commentBubble != null) {
    commentBubble.style.display = "inline";
  }
  updateHelper.previousCommentBubble = commentBubble;

  showTitle(lineNumber);

  translations = translationsForWord;
  var translation = translations[0];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  helper.style.display = "block";

  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = "1/" + translations.length;
    helper.appendChild(transCount);
  }

  storeScrollPosition();
}

function showTitle(lineNumber) {
  lineNumber = lineNumber.replace(/\./g, '');
  var page = parseInt(parseInt(lineNumber, 10) / 100, 10);
  if (isNaN(page)) {
    return;
  }
  var result = page % 2;
  
  var titleToShow = titleElements[result];
  var innerHTML = "<span class=\"title\">" + titleToShow + "</span>";
  masthead.innerHTML = innerHTML;
}

function displayTranslation(line) {
  if (translatedSection) {
    translatedSection.style.backgroundColor = "";
  }
  translatedSection = document.getElementById(line);
  translatedSection.style.backgroundColor = "yellow";
  parallel_translation.innerHTML = atobUTF8(translation[line]);
  parallel_translation.style.display = "block";
}

function hideTranslation() {
  translatedSection.style.backgroundColor = "";
  parallel_translation.style.display = "none";
}


function displayComment(line) {
  comment.innerHTML = atobUTF8(commentary[line]);
  comment.style.display = "block";
}

function hideComment() {
  comment.style.display = "none";
}

if ('serviceWorker' in navigator) {
  window.addEventListener('load', function() {
    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {
      // Registration was successful
      console.log('ServiceWorker registration successful with scope: ', registration.scope);
    }, function(err) {
      // registration failed :(
      console.log('ServiceWorker registration failed: ', err);
    });
  });
}

window.onload = updateScrollPosition;
var translation={}
translation['1.1252a.1'] = "PHRyYW5zbGF0aW9uPjxkaXYxIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMSIgb3JnPSJ1bmlmb3JtIiBzYW1wbGU9ImNvbXBsZXRlIiB0eXBlPSJCb29rIj4KCQkJCTxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNTJhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5FdmVyeSBzdGF0ZSBpcyBhcyB3ZSBzZWUgYSBzb3J0IG9mIHBhcnRuZXJzaGlwLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIEdyZWVrIHdvcmQgaGFkIG5vdCBhY3F1aXJlZCBhIHNwZWNpYWxseSBwb2xpdGljYWwKCQkJCQkJY29ubm90YXRpb24gYXMgdGhlIEVuZ2xpc2ggd29yZCDigJhjb21tdW5pdHnigJkgaGFzLjwvbm90ZT4KCQkJCQlhbmQgZXZlcnkgcGFydG5lcnNoaXAgaXMgZm9ybWVkIHdpdGggYSB2aWV3IHRvIHNvbWUgZ29vZCDvvIhzaW5jZSBhbGwgdGhlCgkJCQkJYWN0aW9ucyBvZiBhbGwgbWFua2luZCBhcmUgZG9uZSB3aXRoIGEgdmlldyB0byB3aGF0IHRoZXkgdGhpbmsgdG8gYmUKCQkJCQlnb29k77yJLiBJdCBpcyB0aGVyZWZvcmUgZXZpZGVudCB0aGF0LCB3aGlsZSBhbGwgcGFydG5lcnNoaXBzIGFpbSBhdCBzb21lCgkJCQkJZ29vZCB0aGUgcGFydG5lcnNoaXAgdGhhdCBpcyB0aGUgbW9zdCBzdXByZW1lIG9mIGFsbCBhbmQgaW5jbHVkZXMgYWxsIHRoZSBvdGhlcnMKCQkJCQlkb2VzIHNvIG1vc3Qgb2YgYWxsLCBhbmQgYWltcyBhdCB0aGUgbW9zdCBzdXByZW1lIG9mIGFsbCBnb29kczsgYW5kIHRoaXMgaXMgdGhlCgkJCQkJcGFydG5lcnNoaXAgZW50aXRsZWQgdGhlIHN0YXRlLCB0aGUgcG9saXRpY2FsIGFzc29jaWF0aW9uLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaG9zZSB0aGVuIHdobyB0aGluayB0aGF0IHRoZSBuYXR1cmVzIG9mIHRoZQoJCQkJCXN0YXRlc21hbiwgdGhlIHJveWFsIHJ1bGVyLCB0aGUgaGVhZCBvZiBhbiBlc3RhdGU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxmb3JlaWduIGxhbmc9ImdyZWVrIj7Ov+G8sM66zr/OveG9uc68zr/PgjwvZm9yZWlnbj4gZGVub3RpbmcgYSBoaWdoZXIKCQkJCQkJZ3JhZGUgdGhhbiA8Zm9yZWlnbiBsYW5nPSJncmVlayI+zrTOtc+Dz4DhvbnPhM63z4I8L2ZvcmVpZ24+IGlzIHVudXN1YWwuIEZvciB0aGVpcgoJCQkJCQlvcmRpbmFyeSB1c2Ugc2VlIDIuMSBmaW4uPC9ub3RlPiBhbmQgdGhlIG1hc3RlciBvZiBhIGZhbWlseSBhcmUgdGhlIHNhbWUsCgkJCQkJYXJlIG1pc3Rha2VuIO+8iHRoZXkgaW1hZ2luZSB0aGF0IHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlc2UgdmFyaW91cwoJCQkJCWZvcm1zIG9mIGF1dGhvcml0eSBpcyBvbmUgb2YgZ3JlYXRlciBhbmQgc21hbGxlciBudW1iZXJzLCBub3QgYSBkaWZmZXJlbmNlIGluCgkJCQkJdGhlIGtpbmTigJR0aGF0IGlzLCB0aGF0IHRoZSBydWxlciBvdmVyIGEgZmV3IHBlb3BsZSBpcyBhIG1hc3Rlciwgb3ZlcgoJCQkJCW1vcmUgdGhlIGhlYWQgb2YgYW4gZXN0YXRlLCBvdmVyIG1vcmUgc3RpbGwgYSBzdGF0ZXNtYW4gb3Igcm95YWwgcnVsZXIsIGFzIGlmCgkJCQkJdGhlcmUgd2VyZSBubyBkaWZmZXJlbmNlIGJldHdlZW4gYSBsYXJnZSBob3VzZWhvbGQgYW5kIGEgc21hbGwgY2l0eTsgYW5kIGFsc28gYXMKCQkJCQl0byB0aGUgc3RhdGVzbWFuIGFuZCB0aGUgcm95YWwgcnVsZXIsIHRoZXkgdGhpbmsgdGhhdCBvbmUgd2hvIGdvdmVybnMgYXMgc29sZQoJCQkJCWhlYWQgaXMgcm95YWwsIGFuZCBvbmUgd2hvLCB3aGlsZSB0aGUgZ292ZXJubWVudCBmb2xsb3dzIHRoZSBwcmluY2lwbGVzIG9mIHRoZQoJCQkJCXNjaWVuY2Ugb2Ygcm95YWx0eSwgdGFrZXMgdHVybnMgdG8gZ292ZXJuIGFuZCBiZSBnb3Zlcm5lZCBpcyBhIHN0YXRlc21hbjsgYnV0CgkJCQkJdGhlc2Ugdmlld3MgYXJlIG5vdCB0cnVl77yJLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgYSBwcm9vZiB0aGF0IHRoZXNlIHBlb3BsZSBhcmUgbWlzdGFrZW4gd2lsbCBhcHBlYXIgaWYgd2UgZXhhbWluZSB0aGUKCQkJCQlxdWVzdGlvbiBpbiBhY2NvcmRhbmNlIHdpdGggb3VyIHJlZ3VsYXIgbWV0aG9kIG9mIGludmVzdGlnYXRpb24uIEluIGV2ZXJ5IG90aGVyCgkJCQkJbWF0dGVyIGl0IGlzIG5lY2Vzc2FyeSB0byBhbmFseXplIHRoZSBjb21wb3NpdGUgd2hvbGUgZG93biB0byBpdHMgdW5jb21wb3VuZGVkCgkJCQkJZWxlbWVudHMg77yIZm9yIHRoZXNlIGFyZSB0aGUgc21hbGxlc3QgPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5wYXJ0cyBvZiB0aGUgd2hvbGXvvIk7IHNvIHRvbyB3aXRoIHRoZSBzdGF0ZSwgYnkKCQkJCQlleGFtaW5pbmcgdGhlIGVsZW1lbnRzIG9mIHdoaWNoIGl0IGlzIGNvbXBvc2VkIHdlIHNoYWxsIGJldHRlciBkaXNjZXJuIGluCgkJCQkJcmVsYXRpb24gdG8gdGhlc2UgZGlmZmVyZW50IGtpbmRzIG9mIHJ1bGVycyB3aGF0IGlzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlbSwKCQkJCQlhbmQgd2hldGhlciBpdCBpcyBwb3NzaWJsZSB0byBvYnRhaW4gYW55IHNjaWVudGlmaWMgcHJlY2lzaW9uIGluIHJlZ2FyZCB0byB0aGUKCQkJCQl2YXJpb3VzIHN0YXRlbWVudHMgbWFkZSBhYm92ZS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluIHRoaXMgc3ViamVjdCBhcwoJCQkJCWluIG90aGVycyB0aGUgYmVzdCBtZXRob2Qgb2YgaW52ZXN0aWdhdGlvbiBpcyB0byBzdHVkeSB0aGluZ3MgaW4gdGhlIHByb2Nlc3Mgb2YKCQkJCQlkZXZlbG9wbWVudCBmcm9tIHRoZSBiZWdpbm5pbmcuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZQoJCQkJCWZpcnN0IGNvdXBsaW5nIHRvZ2V0aGVyIG9mIHBlcnNvbnMgdGhlbiB0byB3aGljaCBuZWNlc3NpdHkgZ2l2ZXMgcmlzZSBpcyB0aGF0CgkJCQkJYmV0d2VlbiB0aG9zZSB3aG8gYXJlIHVuYWJsZSB0byBleGlzdCB3aXRob3V0IG9uZSBhbm90aGVyOiBmb3IgaW5zdGFuY2UgdGhlCgkJCQkJdW5pb24gb2YgZmVtYWxlIGFuZCBtYWxlIGZvciB0aGUgY29udGludWFuY2Ugb2YgdGhlIHNwZWNpZXMg77yIYW5kIHRoaXMKCQkJCQlub3Qgb2YgZGVsaWJlcmF0ZSBwdXJwb3NlLCBidXQgd2l0aCBtYW4gYXMgd2l0aCB0aGUgb3RoZXIgYW5pbWFscyBhbmQgd2l0aAoJCQkJCXBsYW50cyB0aGVyZSBpcyBhIG5hdHVyYWwgaW5zdGluY3QgdG8gZGVzaXJlIHRvIGxlYXZlIGJlaGluZCBvbmUgYW5vdGhlciBiZWluZwoJCQkJCW9mIHRoZSBzYW1lIHNvcnQgYXMgb25lc2VsZu+8iTsgYW5kIHRoZSB1bmlvbiBvZiBuYXR1cmFsIHJ1bGVyIGFuZAoJCQkJCW5hdHVyYWwgc3ViamVjdCBmb3IgdGhlIHNha2Ugb2Ygc2VjdXJpdHkg77yIZm9yIGhlIHRoYXQgY2FuIGZvcmVzZWUgd2l0aAoJCQkJCWhpcyBtaW5kIGlzIG5hdHVyYWxseSBydWxlciBhbmQgbmF0dXJhbGx5IG1hc3RlciwgYW5kIGhlIHRoYXQgY2FuIGRvIHRoZXNlCgkJCQkJCXRoaW5nczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBwcm9iYWJsZSBlbWVuZGF0aW9uIGdpdmVzCgkJCQkJCeKAmHRoYXQgY2FuIGNhcnJ5IG91dCBsYWJvci7igJk8L25vdGU+IHdpdGggaGlzIGJvZHkgaXMKCQkJCQlzdWJqZWN0IGFuZCBuYXR1cmFsbHkgYSBzbGF2ZTsgc28gdGhhdCBtYXN0ZXIgYW5kIHNsYXZlIGhhdmUgdGhlIHNhbWUKCQkJCQlpbnRlcmVzdO+8iS4gPG1pbGVzdG9uZSBuPSIxMjUyYiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iMS41IiB1bml0PSJMb2ViIGNoYXAiIC8+VGh1cwoJCQkJCXRoZSBmZW1hbGUgYW5kIHRoZSBzbGF2ZSBhcmUgYnkgbmF0dXJlIGRpc3RpbmN0IO+8iGZvciBuYXR1cmUgbWFrZXMKCQkJCQlub3RoaW5nIGFzIHRoZSBjdXRsZXJzIG1ha2UgdGhlIERlbHBoaWMga25pZmUsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5VbmNlcnRhaW46IHBvc3NpYmx5IGEgZGFnZ2VyIGFuZCBhIGNhcnZpbmcta25pZmUgaW4KCQkJCQkJb25lLjwvbm90ZT4gaW4gYSBuaWdnYXJkbHkgd2F5LCBidXQgb25lIHRoaW5nIGZvciBvbmUgcHVycG9zZTsgZm9yIHNvIGVhY2gKCQkJCQl0b29sIHdpbGwgYmUgdHVybmVkIG91dCBpbiB0aGUgZmluZXN0IHBlcmZlY3Rpb24sIGlmIGl0IHNlcnZlcyBub3QgbWFueSB1c2VzIGJ1dAoJCQkJCW9uZe+8iS4gWWV0IGFtb25nIGJhcmJhcmlhbnMgdGhlIGZlbWFsZSBhbmQgdGhlIHNsYXZlIGhhdmUgdGhlIHNhbWUgcmFuazsKCQkJCQlhbmQgdGhlIGNhdXNlIG9mIHRoaXMgaXMgdGhhdCBiYXJiYXJpYW5zIGhhdmUgbm8gY2xhc3Mgb2YgbmF0dXJhbCBydWxlcnMsIGJ1dAoJCQkJCXdpdGggdGhlbSB0aGUgY29uanVnYWwgcGFydG5lcnNoaXAgaXMgYSBwYXJ0bmVyc2hpcCBvZiBmZW1hbGUgc2xhdmUgYW5kIG1hbGUKCQkJCQlzbGF2ZS4gSGVuY2UgdGhlIHNheWluZyBvZiB0aGUgcG9ldHM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJFdXIuIElBIDE0MDAiIHZhbGlkPSJ5ZXMiPkV1ci4gSUEgMTQwMDwvYmlibD4uPC9ub3RlPuKAlCA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9ImlhbWJpYyI+J1RpcyBtZWV0IHRoYXQgR3JlZWtzIHNob3VsZCBydWxlIGJhcmJhcmlhbnMs4oCUPC9sPgoJCQkJCTwvcXVvdGU+IGltcGx5aW5nIHRoYXQgYmFyYmFyaWFuIGFuZCBzbGF2ZSBhcmUgdGhlIHNhbWUgaW4gbmF0dXJlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Gcm9tIHRoZXNlIHR3byBwYXJ0bmVyc2hpcHMgdGhlbiBpcyBmaXJzdAoJCQkJCWNvbXBvc2VkIHRoZSBob3VzZWhvbGQsIGFuZCBIZXNpb2Q8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJIZXMuIFdEIDQwNSIgdmFsaWQ9InllcyI+SGVzLiBXRCA0MDU8L2JpYmw+Ljwvbm90ZT4gd2FzIHJpZ2h0IHdoZW4gaGUgd3JvdGUKCQkJCQkJPHF1b3RlIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgbWV0PSJkYWN0eWxpYyI+Rmlyc3QgYW5kIGZvcmVtb3N0IGEgaG91c2UgYW5kIGEgd2lmZSBhbmQgYW4gb3ggZm9yIHRoZQoJCQkJCQkJcGxvdWdoaW5n4oCUPC9sPgoJCQkJCTwvcXVvdGU+IGZvciB0aGUgb3ggc2VydmVzIGluc3RlYWQgb2YgYSBzZXJ2YW50IGZvciB0aGUgcG9vci4gVGhlIHBhcnRuZXJzaGlwCgkJCQkJdGhlcmVmb3JlIHRoYXQgY29tZXMgYWJvdXQgaW4gdGhlIGNvdXJzZSBvZiBuYXR1cmUgZm9yIGV2ZXJ5ZGF5IHB1cnBvc2VzIGlzIHRoZQoJCQkJCeKAmGhvdXNlLOKAmSB0aGUgcGVyc29ucyB3aG9tIENoYXJvbmRhczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBsYXctZ2l2ZXIgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDYXRhbmEiIGtleT0icGVyc2V1cyxDYXRhbmEiPkNhdGFuYTwvcGxhY2VOYW1lPiBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzEyMiIga2V5PSJ0Z24sNzAwMzEyMiI+U2ljaWx5PC9wbGFjZU5hbWU+LAoJCQkJCQk2dGggY2VudHVyeSBCLkMuIG9yIGVhcmxpZXIuPC9ub3RlPiBzcGVha3Mgb2YgYXMKCQkJCQnigJhtZWFsLXR1Yi1mZWxsb3dz4oCZIGFuZCB0aGUgQ3JldGFuIEVwaW1lbmlkZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgcG9ldCBhbmQgcHJvcGhldCBpbnZpdGVkIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4KCQkJCQkJPGRhdGUgYXV0aG5hbWU9Ii01OTYiIHZhbHVlPSItNTk2Ij41OTY8L2RhdGU+IEIuQy4gdG8gcHVyaWZ5IGl0IG9mIHBsYWd1ZS48L25vdGU+IGFzCgkJCQkJCeKAmG1hbmdlci1mZWxsb3dzLuKAmTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlCgkJCQkJCXZhcmlhbnQgcmVhZGluZyA8Zm9yZWlnbiBsYW5nPSJncmVlayI+4b2BzrzOv8664b2xz4DOvc6/z4XPgjwvZm9yZWlnbj4sCgkJCQkJCeKAmHNtb2tlLXNoYXJlcnMs4oCZIHNlZW1zIHRvIG1lYW4KCQkJCQkJ4oCYaGVhcnRoLWZlbGxvd3Mu4oCZPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjEuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24KCQkJCQl0aGUgb3RoZXIgaGFuZCB0aGUgcHJpbWFyeSBwYXJ0bmVyc2hpcCBtYWRlIHVwIG9mIHNldmVyYWwgaG91c2Vob2xkcyBmb3IgdGhlCgkJCQkJc2F0aXNmYWN0aW9uIG9mIG5vdCBtZXJlIGRhaWx5IG5lZWRzIGlzIHRoZSB2aWxsYWdlLiBUaGUgdmlsbGFnZSBhY2NvcmRpbmcgdG8KCQkJCQl0aGUgbW9zdCBuYXR1cmFsIGFjY291bnQgc2VlbXMgdG8gYmUgYSBjb2xvbnkgZnJvbTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUgR3JlZWsgc2hvdWxkIGJlIGFsdGVyZWQgdG8gZ2l2ZQoJCQkJCQnigJhjb25zaXN0cyBvZiBjb2xvbmllcyBmcm9tLuKAmTwvbm90ZT4gYSBob3VzZWhvbGQsIGZvcm1lZAoJCQkJCW9mIHRob3NlIHdob20gc29tZSBwZW9wbGUgc3BlYWsgb2YgYXMg4oCYZmVsbG93LXN1Y2tsaW5ncyzigJkKCQkJCQlzb25zIGFuZCBzb25zJyBzb25zLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHdvcmRzCgkJCQkJCeKAmHNvbnMgYW5kIHNvbnMnIHNvbnPigJkgYXJlIHByb2JhYmx5IGFuIGludGVycG9sYXRlZAoJCQkJCQlub3RlLjwvbm90ZT4gSXQgaXMgb3dpbmcgdG8gdGhpcyB0aGF0IG91ciBjaXRpZXMgd2VyZSBhdCBmaXJzdCB1bmRlciByb3lhbAoJCQkJCXN3YXkgYW5kIHRoYXQgZm9yZWlnbiByYWNlcyBhcmUgc28gc3RpbGwsPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5iZWNhdXNlIHRoZXkgd2VyZSBtYWRlIHVwIG9mIHBhcnRzIHRoYXQgd2VyZSB1bmRlciByb3lhbCBydWxlOwoJCQkJCWZvciBldmVyeSBob3VzZWhvbGQgaXMgdW5kZXIgdGhlIHJveWFsIHJ1bGUgb2YgaXRzIGVsZGVzdCBtZW1iZXIsIHNvIHRoYXQgdGhlCgkJCQkJY29sb25pZXMgZnJvbSB0aGUgaG91c2Vob2xkIHdlcmUgc28gdG9vLCBiZWNhdXNlIG9mIHRoZSBraW5zaGlwIG9mIHRoZWlyCgkJCQkJbWVtYmVycy4gQW5kIHRoaXMgaXMgd2hhdCBIb21lcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgZGVmYXVsdD0iTk8iIG49IkhvbS4gT2QuIDkuMTE0IiB2YWxpZD0ieWVzIj5Ib20uIE9kLiA5LjExNCBmLjwvYmlibD4gb24gdGhlIEN5Y2xvcGVzLjwvbm90ZT4KCQkJCQltZWFuczogPHF1b3RlIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgbWV0PSJkYWN0eWxpYyI+QW5kIGVhY2ggb25lIGdpdmV0aCBsYXc8L2w+CgkJCQkJCTxsPlRvIHNvbnMgYW5kIGVrZSB0byBzcG91c2Vz4oCUPC9sPgoJCQkJCTwvcXVvdGU+IGZvciBoaXMgQ3ljbG9wZXMgbGl2ZSBpbiBzY2F0dGVyZWQgZmFtaWxpZXM7IGFuZCB0aGF0IGlzIHRoZSB3YXkgaW4KCQkJCQl3aGljaCBwZW9wbGUgdXNlZCB0byBsaXZlIGluIGVhcmx5IHRpbWVzLiBBbHNvIHRoaXMgZXhwbGFpbnMgd2h5IGFsbCByYWNlcyBzcGVhawoJCQkJCW9mIHRoZSBnb2RzIGFzIHJ1bGVkIGJ5IGEga2luZywgYmVjYXVzZSB0aGV5IHRoZW1zZWx2ZXMgdG9vIGFyZSBzb21lIG9mIHRoZW0KCQkJCQlhY3R1YWxseSBub3cgc28gcnVsZWQgYW5kIGluIG90aGVyIGNhc2VzIHVzZWQgdG8gYmUgb2Ygb2xkOyBhbmQgYXMgbWVuIGltYWdpbmUKCQkJCQl0aGUgZ29kcyBpbiBodW1hbiBmb3JtLCBzbyBhbHNvIHRoZXkgc3VwcG9zZSB0aGVpciBtYW5uZXIgb2YgbGlmZSB0byBiZSBsaWtlCgkJCQkJdGhlaXIgb3duLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBwYXJ0bmVyc2hpcCBmaW5hbGx5IGNvbXBvc2VkIG9mIHNldmVyYWwgdmlsbGFnZXMgaXMgdGhlCgkJCQkJY2l0eS1zdGF0ZTsgaXQgaGFzIGF0IGxhc3QgYXR0YWluZWQgdGhlIGxpbWl0IG9mIHZpcnR1YWxseSBjb21wbGV0ZQoJCQkJCXNlbGYtc3VmZmljaWVuY3ksIGFuZCB0aHVzLCB3aGlsZSBpdCBjb21lcyBpbnRvIGV4aXN0ZW5jZSBmb3IgdGhlIHNha2Ugb2YgbGlmZSwKCQkJCQlpdCBleGlzdHMgZm9yIHRoZSBnb29kIGxpZmUuIEhlbmNlIGV2ZXJ5IGNpdHktc3RhdGUgZXhpc3RzIGJ5IG5hdHVyZSwgaW5hc211Y2gKCQkJCQlhcyB0aGUgZmlyc3QgcGFydG5lcnNoaXBzIHNvIGV4aXN0OyBmb3IgdGhlIGNpdHktc3RhdGUgaXMgdGhlIGVuZCBvZiB0aGUgb3RoZXIKCQkJCQlwYXJ0bmVyc2hpcHMsIGFuZCBuYXR1cmUgaXMgYW4gZW5kLCBzaW5jZSB0aGF0IHdoaWNoIGVhY2ggdGhpbmcgaXMgd2hlbiBpdHMKCQkJCQlncm93dGggaXMgY29tcGxldGVkIHdlIHNwZWFrIG9mIGFzIGJlaW5nIHRoZSBuYXR1cmUgb2YgZWFjaCB0aGluZywgZm9yIGluc3RhbmNlCgkJCQkJb2YgYSBtYW4sIGEgaG9yc2UsIGEgaG91c2Vob2xkLiBBZ2FpbiwgdGhlIG9iamVjdCBmb3Igd2hpY2ggYSB0aGluZyBleGlzdHMsIGl0cwoJCQkJCWVuZCwgaXMgaXRzIGNoaWVmIGdvb2Q7IDxtaWxlc3RvbmUgbj0iMTI1M2EiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBzZWxmLXN1ZmZpY2llbmN5IGlzIGFuIGVuZCwgYW5kIGEgY2hpZWYgZ29vZC4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMS45IiB1bml0PSJMb2ViIGNoYXAiIC8+RnJvbSB0aGVzZSB0aGluZ3MgdGhlcmVmb3JlIGl0CgkJCQkJaXMgY2xlYXIgdGhhdCB0aGUgY2l0eS1zdGF0ZSBpcyBhIG5hdHVyYWwgZ3Jvd3RoLCBhbmQgdGhhdCBtYW4gaXMgYnkgbmF0dXJlIGEKCQkJCQlwb2xpdGljYWwgYW5pbWFsLCBhbmQgYSBtYW4gdGhhdCBpcyBieSBuYXR1cmUgYW5kIG5vdCBtZXJlbHkgYnkgZm9ydHVuZSBjaXRpbGVzcwoJCQkJCWlzIGVpdGhlciBsb3cgaW4gdGhlIHNjYWxlIG9mIGh1bWFuaXR5IG9yIGFib3ZlIGl0IO+8iGxpa2UgdGhlIDxxdW90ZSB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIG1ldD0iZGFjdHlsaWMiPmNsYW5sZXNzLCBsYXdsZXNzLCBoZWFydGhsZXNzPC9sPgoJCQkJCTwvcXVvdGU+IG1hbiByZXZpbGVkIGJ5IEhvbWVyLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDkuNjMiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDkuNjM8L2JpYmw+OyB0aGUgcGFzc2FnZSBnb2VzIG9uOiA8Zm9yZWlnbiBsYW5nPSJncmVlayI+4byQz4PPhOG9ts69IOG8kM66zrXhv5bOvc6/z4IgfCDhvYPPgiDPgM6/zrvhvbPOvM6/z4UKCQkJCQkJ4byUz4HOsc+EzrHOuTwvZm9yZWlnbj4uPC9ub3RlPiBmb3Igb25lIGJ5IG5hdHVyZSB1bnNvY2lhbCBpcyBhbHNvIOKAmGEKCQkJCQlsb3ZlciBvZiB3YXLigJnvvIkgaW5hc211Y2ggYXMgaGUgaXMgc29saXRhcnksIGxpa2UgYW4gaXNvbGF0ZWQKCQkJCQlwaWVjZSBhdCBkcmF1Z2h0cy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB3aHkgbWFuIGlzIGEKCQkJCQlwb2xpdGljYWwgYW5pbWFsIGluIGEgZ3JlYXRlciBtZWFzdXJlIHRoYW4gYW55IGJlZSBvciBhbnkgZ3JlZ2FyaW91cyBhbmltYWwgaXMKCQkJCQljbGVhci4gRm9yIG5hdHVyZSwgYXMgd2UgZGVjbGFyZSwgZG9lcyBub3RoaW5nIHdpdGhvdXQgcHVycG9zZTsgYW5kIG1hbiBhbG9uZSBvZgoJCQkJCXRoZSBhbmltYWxzIHBvc3Nlc3NlcyBzcGVlY2guIFRoZSBtZXJlIHZvaWNlLCBpdCBpcyB0cnVlLCBjYW4gaW5kaWNhdGUgcGFpbiBhbmQKCQkJCQlwbGVhc3VyZSwgYW5kIHRoZXJlZm9yZSBpcyBwb3NzZXNzZWQgYnkgdGhlIG90aGVyIGFuaW1hbHMgYXMgd2VsbCDvvIhmb3IKCQkJCQl0aGVpciBuYXR1cmUgaGFzIGJlZW4gZGV2ZWxvcGVkIHNvIGZhciBhcyB0byBoYXZlIHNlbnNhdGlvbnMgb2Ygd2hhdCBpcyBwYWluZnVsCgkJCQkJYW5kIHBsZWFzYW50IGFuZCB0byBpbmRpY2F0ZSB0aG9zZSBzZW5zYXRpb25zIHRvIG9uZSBhbm90aGVy77yJLCBidXQKCQkJCQlzcGVlY2ggaXMgZGVzaWduZWQgdG8gaW5kaWNhdGUgdGhlIGFkdmFudGFnZW91cyBhbmQgdGhlIGhhcm1mdWwsIGFuZCB0aGVyZWZvcmUKCQkJCQlhbHNvIHRoZSByaWdodCBhbmQgdGhlIHdyb25nOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjExIiB1bml0PSJMb2ViIGNoYXAiIC8+Zm9yCgkJCQkJaXQgaXMgdGhlIHNwZWNpYWwgcHJvcGVydHkgb2YgbWFuIGluIGRpc3RpbmN0aW9uIGZyb20gdGhlIG90aGVyIGFuaW1hbHMgdGhhdCBoZQoJCQkJCWFsb25lIGhhcyBwZXJjZXB0aW9uIG9mIGdvb2QgYW5kIGJhZCBhbmQgcmlnaHQgYW5kIHdyb25nIGFuZCB0aGUgb3RoZXIgbW9yYWwKCQkJCQlxdWFsaXRpZXMsIGFuZCBpdCBpcyBwYXJ0bmVyc2hpcCBpbiB0aGVzZSB0aGluZ3MgdGhhdCBtYWtlcyBhIGhvdXNlaG9sZCBhbmQgYQoJCQkJCQljaXR5LXN0YXRlLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGh1cyBhbHNvIHRoZSBjaXR5LXN0YXRlIGlzIHByaW9yCgkJCQkJaW4gbmF0dXJlIHRvIHRoZSBob3VzZWhvbGQgYW5kIHRvIGVhY2ggb2YgdXMgaW5kaXZpZHVhbGx5LjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+Rm9yIHRoZSB3aG9sZSBtdXN0IG5lY2Vzc2FyaWx5IGJlIHByaW9yIHRvIHRoZQoJCQkJCXBhcnQ7IHNpbmNlIHdoZW4gdGhlIHdob2xlIGJvZHkgaXMgZGVzdHJveWVkLCBmb290IG9yIGhhbmQgd2lsbCBub3QgZXhpc3QgZXhjZXB0CgkJCQkJaW4gYW4gZXF1aXZvY2FsIHNlbnNlLCBsaWtlIHRoZSBzZW5zZSBpbiB3aGljaCBvbmUgc3BlYWtzIG9mIGEgaGFuZCBzY3VscHR1cmVkCgkJCQkJaW4gc3RvbmUgYXMgYSBoYW5kOyBiZWNhdXNlIGEgaGFuZCBpbiB0aG9zZSBjaXJjdW1zdGFuY2VzIHdpbGwgYmUgYSBoYW5kCgkJCQkJc3BvaWxlZCwgYW5kIGFsbCB0aGluZ3MgYXJlIGRlZmluZWQgYnkgdGhlaXIgZnVuY3Rpb24gYW5kIGNhcGFjaXR5LCBzbyB0aGF0IHdoZW4KCQkJCQl0aGV5IGFyZSBubyBsb25nZXIgc3VjaCBhcyB0byBwZXJmb3JtIHRoZWlyIGZ1bmN0aW9uIHRoZXkgbXVzdCBub3QgYmUgc2FpZCB0byBiZQoJCQkJCXRoZSBzYW1lIHRoaW5ncywgYnV0IHRvIGJlYXIgdGhlaXIgbmFtZXMgaW4gYW4gZXF1aXZvY2FsIHNlbnNlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgY2xlYXIgdGhlcmVmb3JlIHRoYXQgdGhlIHN0YXRlIGlzCgkJCQkJYWxzbyBwcmlvciBieSBuYXR1cmUgdG8gdGhlIGluZGl2aWR1YWw7IGZvciBpZiBlYWNoIGluZGl2aWR1YWwgd2hlbiBzZXBhcmF0ZSBpcwoJCQkJCW5vdCBzZWxmLXN1ZmZpY2llbnQsIGhlIG11c3QgYmUgcmVsYXRlZCB0byB0aGUgd2hvbGUgc3RhdGUgYXMgb3RoZXIgcGFydHMgYXJlIHRvCgkJCQkJdGhlaXIgd2hvbGUsIHdoaWxlIGEgbWFuIHdobyBpcyBpbmNhcGFibGUgb2YgZW50ZXJpbmcgaW50byBwYXJ0bmVyc2hpcCwgb3Igd2hvCgkJCQkJaXMgc28gc2VsZi1zdWZmaWNpbmcgdGhhdCBoZSBoYXMgbm8gbmVlZCB0byBkbyBzbywgaXMgbm8gcGFydCBvZiBhIHN0YXRlLCBzbwoJCQkJCXRoYXQgaGUgbXVzdCBiZSBlaXRoZXIgYSBsb3dlciBhbmltYWwgb3IgYSBnb2QuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZWZvcmUgdGhlIGltcHVsc2UgdG8gZm9ybSBhIHBhcnRuZXJzaGlwIG9mIHRoaXMga2luZCBpcyBwcmVzZW50IGluIGFsbCBtZW4KCQkJCQlieSBuYXR1cmU7IGJ1dCB0aGUgbWFuIHdobyBmaXJzdCB1bml0ZWQgcGVvcGxlIGluIHN1Y2ggYSBwYXJ0bmVyc2hpcCB3YXMgdGhlCgkJCQkJZ3JlYXRlc3Qgb2YgYmVuZWZhY3RvcnMuIEZvciBhcyBtYW4gaXMgdGhlIGJlc3Qgb2YgdGhlIGFuaW1hbHMgd2hlbiBwZXJmZWN0ZWQsCgkJCQkJc28gaGUgaXMgdGhlIHdvcnN0IG9mIGFsbCB3aGVuIHN1bmRlcmVkIGZyb20gbGF3IGFuZCBqdXN0aWNlLiBGb3IKCQkJCQl1bnJpZ2h0ZW91c25lc3MgaXMgbW9zdCBwZXJuaWNpb3VzIHdoZW4gcG9zc2Vzc2VkIG9mIHdlYXBvbnMsIGFuZCBtYW4gaXMgYm9ybgoJCQkJCXBvc3Nlc3Npbmcgd2VhcG9ucyBmb3IgdGhlIHVzZSBvZiB3aXNkb20gYW5kIHZpcnR1ZSwgd2hpY2ggaXQgaXMgcG9zc2libGUgdG8KCQkJCQllbXBsb3kgZW50aXJlbHkgZm9yIHRoZSBvcHBvc2l0ZSBlbmRzLiBIZW5jZSB3aGVuIGRldm9pZCBvZiB2aXJ0dWUgbWFuIGlzIHRoZQoJCQkJCW1vc3QgdW5ob2x5IGFuZCBzYXZhZ2Ugb2YgYW5pbWFscywgYW5kIHRoZSB3b3JzdCBpbiByZWdhcmQgdG8gc2V4dWFsIGluZHVsZ2VuY2UKCQkJCQlhbmQgZ2x1dHRvbnkuIEp1c3RpY2Ugb24gdGhlIG90aGVyIGhhbmQgaXMgYW4gZWxlbWVudCBvZiB0aGUgc3RhdGU7IGZvciBqdWRpY2lhbAoJCQkJCXByb2NlZHVyZSwgd2hpY2ggbWVhbnMgdGhlIGRlY2lzaW9uIG9mIHdoYXQgaXMganVzdCwgaXMgdGhlIHJlZ3VsYXRpb24gb2YgdGhlCgkJCQkJcG9saXRpY2FsIHBhcnRuZXJzaGlwLiA8bWlsZXN0b25lIG49IjEyNTNiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGVkPSJQIiBuPSIyLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBub3cgdGhhdCBpdCBpcyBjbGVhciB3aGF0IGFyZSB0aGUKCQkJCQljb21wb25lbnQgcGFydHMgb2YgdGhlIHN0YXRlLCB3ZSBoYXZlIGZpcnN0IG9mIGFsbCB0byBkaXNjdXNzIGhvdXNlaG9sZAoJCQkJCW1hbmFnZW1lbnQ7IGZvciBldmVyeSBzdGF0ZSBpcyBjb21wb3NlZCBvZiBob3VzZWhvbGRzLiBIb3VzZWhvbGQgbWFuYWdlbWVudAoJCQkJCWZhbGxzIGludG8gZGVwYXJ0bWVudHMgY29ycmVzcG9uZGluZyB0byB0aGUgcGFydHMgb2Ygd2hpY2ggdGhlIGhvdXNlaG9sZCBpbiBpdHMKCQkJCQl0dXJuIGlzIGNvbXBvc2VkOyBhbmQgdGhlIGhvdXNlaG9sZCBpbiBpdHMgcGVyZmVjdCBmb3JtIGNvbnNpc3RzIG9mIHNsYXZlcyBhbmQKCQkJCQlmcmVlbWVuLiBUaGUgaW52ZXN0aWdhdGlvbiBvZiBldmVyeXRoaW5nIHNob3VsZCBiZWdpbiB3aXRoIGl0cyBzbWFsbGVzdCBwYXJ0cywKCQkJCQlhbmQgdGhlIHByaW1hcnkgYW5kIHNtYWxsZXN0IHBhcnRzIG9mIHRoZSBob3VzZWhvbGQgYXJlIG1hc3RlciBhbmQgc2xhdmUsCgkJCQkJaHVzYmFuZCBhbmQgd2lmZSwgZmF0aGVyIGFuZCBjaGlsZHJlbjsgd2Ugb3VnaHQgdGhlcmVmb3JlIHRvIGV4YW1pbmUgdGhlIHByb3BlcgoJCQkJCWNvbnN0aXR1dGlvbiBhbmQgY2hhcmFjdGVyIG9mIGVhY2ggb2YgdGhlc2UgdGhyZWUgcmVsYXRpb25zaGlwcywgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+SSBtZWFuIHRoYXQgb2YgbWFzdGVyc2hpcCwgdGhhdCBvZgoJCQkJCQltYXJyaWFnZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIEdyZWVrIHdvcmQgcHJvcGVybHkgZGVub3RlcwoJCQkJCQl0aGUgbWFycmlhZ2UgY2VyZW1vbnksIG5vdCB0aGUgbWFycmllZCBzdGF0ZS48L25vdGU+IO+8iHRoZXJlIGlzIG5vCgkJCQkJZXhhY3QgdGVybSBkZW5vdGluZyB0aGUgcmVsYXRpb24gdW5pdGluZyB3aWZlIGFuZCBodXNiYW5k77yJLCBhbmQgdGhpcmRseQoJCQkJCXRoZSBwcm9nZW5pdGl2ZSByZWxhdGlvbnNoaXAg77yIdGhpcyB0b28gaGFzIG5vdCBiZWVuIGRlc2lnbmF0ZWQgYnkgYQoJCQkJCXNwZWNpYWwgbmFtZe+8iS4gTGV0IHVzIHRoZW4gYWNjZXB0IHRoZXNlIHRocmVlIHJlbGF0aW9uc2hpcHMgdGhhdCB3ZQoJCQkJCWhhdmUgbWVudGlvbmVkLiBUaGVyZSBpcyBhbHNvIGEgZGVwYXJ0bWVudCB3aGljaCBzb21lIHBlb3BsZSBjb25zaWRlciB0aGUgc2FtZQoJCQkJCWFzIGhvdXNlaG9sZCBtYW5hZ2VtZW50IGFuZCBvdGhlcnMgdGhlIG1vc3QgaW1wb3J0YW50IHBhcnQgb2YgaXQsIGFuZCB0aGUgdHJ1ZQoJCQkJCXBvc2l0aW9uIG9mIHdoaWNoIHdlIHNoYWxsIGhhdmUgdG8gY29uc2lkZXI6IEkgbWVhbiB3aGF0IGlzIGNhbGxlZCB0aGUgYXJ0IG9mCgkJCQkJZ2V0dGluZyB3ZWFsdGguPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5ObyBFbmdsaXNoIHdvcmQgY292ZXJzIGFsbAoJCQkJCQl0aGUgYXNzb2NpYXRpb25zIG9mIHRoZSBHcmVlaywgd2hpY2ggbWVhbnMg4oCYZGVhbGluZyBpbiA8Zm9yZWlnbiBsYW5nPSJncmVlayI+z4fPgeG9tc68zrHPhM6xPC9mb3JlaWduPizigJkKCQkJCQkJ4oCYdGhpbmdzLOKAmeKAlGdvb2RzLCBwcm9wZXJ0eSwgbW9uZXnigJRhbmQKCQkJCQkJc28g4oCYYnVzaW5lc3Mu4oCZPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TGV0IHVzIGJlZ2luIGJ5IGRpc2N1c3NpbmcgdGhlIHJlbGF0aW9uIG9mIG1hc3RlcgoJCQkJCWFuZCBzbGF2ZSwgaW4gb3JkZXIgdG8gb2JzZXJ2ZSB0aGUgZmFjdHMgdGhhdCBoYXZlIGEgYmVhcmluZyBvbiBwcmFjdGljYWwKCQkJCQl1dGlsaXR5LCBhbmQgYWxzbyBpbiB0aGUgaG9wZSB0aGF0IHdlIG1heSBiZSBhYmxlIHRvIG9idGFpbiBzb21ldGhpbmcgYmV0dGVyCgkJCQkJdGhhbiB0aGUgbm90aW9ucyBhdCBwcmVzZW50IGVudGVydGFpbmVkLCB3aXRoIGEgdmlldyB0byBhIHRoZW9yZXRpYyBrbm93bGVkZ2Ugb2YKCQkJCQl0aGUgc3ViamVjdC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIHNvbWUgdGhpbmtlcnMgaG9sZAoJCQkJCXRoZSBmdW5jdGlvbiBvZiB0aGUgbWFzdGVyIHRvIGJlIGEgZGVmaW5pdGUgc2NpZW5jZSwgYW5kIG1vcmVvdmVyIHRoaW5rIHRoYXQKCQkJCQlob3VzZWhvbGQgbWFuYWdlbWVudCwgbWFzdGVyc2hpcCwgc3RhdGVzbWFuc2hpcCBhbmQgbW9uYXJjaHkgYXJlIHRoZSBzYW1lCgkJCQkJCXRoaW5nLDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YXMgd2Ugc2FpZCBhdCB0aGUgYmVnaW5uaW5nCgkJCQkJb2YgdGhlIHRyZWF0aXNlOyBvdGhlcnMgaG93ZXZlciBtYWludGFpbiB0aGF0IGZvciBvbmUgbWFuIHRvIGJlIGFub3RoZXIgbWFuJ3MKCQkJCQltYXN0ZXIgaXMgY29udHJhcnkgdG8gbmF0dXJlLCBiZWNhdXNlIGl0IGlzIG9ubHkgY29udmVudGlvbiB0aGF0IG1ha2VzIHRoZSBvbmUgYQoJCQkJCXNsYXZlIGFuZCB0aGUgb3RoZXIgYSBmcmVlbWFuIGFuZCB0aGVyZSBpcyBubyBkaWZmZXJlbmNlIGJldHdlZW4gdGhlbSBieSBuYXR1cmUsCgkJCQkJYW5kIHRoYXQgdGhlcmVmb3JlIGl0IGlzIHVuanVzdCwgZm9yIGl0IGlzIGJhc2VkIG9uIGZvcmNlLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U2luY2UgdGhlcmVmb3JlIHByb3BlcnR5IGlzIGEgcGFydCBvZiBhIGhvdXNlaG9sZCBhbmQgdGhlIGFydAoJCQkJCW9mIGFjcXVpcmluZyBwcm9wZXJ0eSBhIHBhcnQgb2YgaG91c2Vob2xkIG1hbmFnZW1lbnQg77yIZm9yIHdpdGhvdXQgdGhlCgkJCQkJbmVjZXNzYXJpZXMgZXZlbiBsaWZlLCBhcyB3ZWxsIGFzIHRoZSBnb29kIGxpZmUsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj7igJhBcyB3ZWxsIGFzIHRoZSBnb29kIGxpZmXigJkgaXMgcHJvYmFibHkgYW4KCQkJCQkJaW50ZXJwb2xhdGlvbi48L25vdGU+IGlzIGltcG9zc2libGXvvIksIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBzaW5jZSwganVzdCBhcyBmb3IgdGhlIHBhcnRpY3VsYXIgYXJ0cyBpdCB3b3VsZCBiZQoJCQkJCW5lY2Vzc2FyeSBmb3IgdGhlIHByb3BlciB0b29scyB0byBiZSBmb3J0aGNvbWluZyBpZiB0aGVpciB3b3JrIGlzIHRvIGJlCgkJCQkJYWNjb21wbGlzaGVkLCBzbyBhbHNvIHRoZSBtYW5hZ2VyIG9mIGEgaG91c2Vob2xkIG11c3QgaGF2ZSBoaXMgdG9vbHMsIGFuZCBvZgoJCQkJCXRvb2xzIHNvbWUgYXJlIGxpZmVsZXNzIGFuZCBvdGhlcnMgbGl2aW5nIO+8iGZvciBleGFtcGxlLCBmb3IgYSBoZWxtc21hbgoJCQkJCXRoZSBydWRkZXIgaXMgYSBsaWZlbGVzcyB0b29sIGFuZCB0aGUgbG9vay1vdXQgbWFuIGEgbGl2ZSB0b29s4oCUZm9yIGFuCgkJCQkJYXNzaXN0YW50IGluIHRoZSBhcnRzIGJlbG9uZ3MgdG8gdGhlIGNsYXNzIG9mIHRvb2xz77yJLCBzbyBhbHNvIGFuCgkJCQkJYXJ0aWNsZSBvZiBwcm9wZXJ0eSBpcyBhIHRvb2wgZm9yIHRoZSBwdXJwb3NlIG9mIGxpZmUsIGFuZCBwcm9wZXJ0eSBnZW5lcmFsbHkgaXMKCQkJCQlhIGNvbGxlY3Rpb24gb2YgdG9vbHMsIGFuZCBhIHNsYXZlIGlzIGEgbGl2ZSBhcnRpY2xlIG9mIHByb3BlcnR5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgZXZlcnkgYXNzaXN0YW50IGlzIGFzIGl0IHdlcmUgYSB0b29sCgkJCQkJdGhhdCBzZXJ2ZXMgZm9yIHNldmVyYWwgdG9vbHM7IGZvciBpZiBldmVyeSB0b29sIGNvdWxkIHBlcmZvcm0gaXRzIG93biB3b3JrIHdoZW4KCQkJCQlvcmRlcmVkLCBvciBieSBzZWVpbmcgd2hhdCB0byBkbyBpbiBhZHZhbmNlLCBsaWtlIHRoZSBzdGF0dWVzIG9mIERhZWRhbHVzIGluIHRoZQoJCQkJCQlzdG9yeSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgbGVnZW5kYXJ5IHNjdWxwdG9yIGZpcnN0CgkJCQkJCXJlcHJlc2VudGVkIHRoZSBleWVzIGFzIG9wZW4gYW5kIHRoZSBsaW1icyBhcyBpbiBtb3Rpb24sIHNvIGhpcyBzdGF0dWVzIGhhZAoJCQkJCQl0byBiZSBjaGFpbmVkIHRvIHByZXZlbnQgdGhlbSBmcm9tIHJ1bm5pbmcgYXdheSDvvIg8YmlibCBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gTWVubyA5N2QiIHZhbGlkPSJ5ZXMiPlBsYXQuIE1lbm8gOTdkPC9iaWJsPu+8iS48L25vdGU+IG9yIHRoZQoJCQkJCXRyaXBvZHMgb2YgSGVwaGFlc3R1cyB3aGljaCB0aGUgcG9ldCBzYXlzIOKAmGVudGVyIHNlbGYtbW92ZWQgdGhlCgkJCQkJY29tcGFueSBkaXZpbmUs4oCZPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJPGJpYmwgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDE4LjM2OSIgdmFsaWQ9InllcyI+SG9tLiBJbC4gMTguMzY5PC9iaWJsPgoJCQkJCTwvbm90ZT7igJRpZiB0aHVzIHNodXR0bGVzIHdvdmUgYW5kIHF1aWxscyBwbGF5ZWQgaGFycHMgb2YgdGhlbXNlbHZlcywKCQkJCQltYXN0ZXItY3JhZnRzbWVuIHdvdWxkIGhhdmUgbm8gbmVlZCBvZiBhc3Npc3RhbnRzIGFuZCBtYXN0ZXJzIG5vIG5lZWQgb2Ygc2xhdmVzLgoJCQkJCQk8bWlsZXN0b25lIG49IjEyNTRhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5Ob3cgdGhlIHRvb2xzIG1lbnRpb25lZCBhcmUgaW5zdHJ1bWVudHMgb2YgcHJvZHVjdGlvbiwgd2hlcmVhcwoJCQkJCWFuIGFydGljbGUgb2YgcHJvcGVydHkgaXMgYW4gaW5zdHJ1bWVudCBvZiBhY3Rpb248bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gd2l0aCBpdCB3ZSBkbyBub3QgPGVtcGg+bWFrZTwvZW1waD4gc29tZXRoaW5nIGJ1dAoJCQkJCQkJPGVtcGg+ZG88L2VtcGg+IHNvbWV0aGluZyDvvIhlLmcuIHdlYXIgYSBkcmVzcywgbGllIGluIGEKCQkJCQkJYmVk77yJLjwvbm90ZT47IGZvciBmcm9tIGEgc2h1dHRsZSB3ZSBnZXQgc29tZXRoaW5nIGVsc2UgYmVzaWRlIHRoZQoJCQkJCW1lcmUgdXNlIG9mIHRoZSBzaHV0dGxlLCBidXQgZnJvbSBhIGdhcm1lbnQgb3IgYSBiZWQgd2UgZ2V0IG9ubHkgdGhlaXIgdXNlLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgYWxzbyBpbmFzbXVjaCBhcyB0aGVyZSBpcyBhCgkJCQkJZGlmZmVyZW5jZSBpbiBraW5kIGJldHdlZW4gcHJvZHVjdGlvbiBhbmQgYWN0aW9uLCBhbmQgYm90aCBuZWVkIHRvb2xzLCBpdAoJCQkJCWZvbGxvd3MgdGhhdCB0aG9zZSB0b29scyBhbHNvIG11c3QgcG9zc2VzcyB0aGUgc2FtZSBkaWZmZXJlbmNlLiBCdXQgbGlmZSBpcwoJCQkJCWRvaW5nIHRoaW5ncywgbm90IG1ha2luZyB0aGluZ3M7IGhlbmNlIHRoZSBzbGF2ZSBpcyBhbiBhc3Npc3RhbnQgaW4gdGhlIGNsYXNzIG9mCgkJCQkJaW5zdHJ1bWVudHMgb2YgYWN0aW9uLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHRoZSB0ZXJtCgkJCQkJ4oCYYXJ0aWNsZSBvZiBwcm9wZXJ0eeKAmSBpcyB1c2VkIGluIHRoZSBzYW1lIHdheSBhcyB0aGUgdGVybQoJCQkJCeKAmHBhcnTigJk6IGEgdGhpbmcgdGhhdCBpcyBhIHBhcnQgaXMgbm90IG9ubHkgYSBwYXJ0IG9mIGFub3RoZXIKCQkJCQl0aGluZyBidXQgYWJzb2x1dGVseSBiZWxvbmdzIHRvIGFub3RoZXIgdGhpbmcsIGFuZCBzbyBhbHNvIGRvZXMgYW4gYXJ0aWNsZSBvZgoJCQkJCXByb3BlcnR5LiBIZW5jZSB3aGVyZWFzIHRoZSBtYXN0ZXIgaXMgbWVyZWx5IHRoZSBzbGF2ZSdzIG1hc3RlciBhbmQgZG9lcyBub3QKCQkJCQliZWxvbmcgdG8gdGhlIHNsYXZlLCB0aGUgc2xhdmUgaXMgbm90IG1lcmVseSB0aGUgc2xhdmUgb2YgdGhlIG1hc3RlciBidXQgd2hvbGx5CgkJCQkJYmVsb25ncyB0byB0aGUgbWFzdGVyLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVzZQoJCQkJCWNvbnNpZGVyYXRpb25zIHRoZXJlZm9yZSBtYWtlIGNsZWFyIHRoZSBuYXR1cmUgb2YgdGhlIHNsYXZlIGFuZCBoaXMgZXNzZW50aWFsCgkJCQkJcXVhbGl0eTogb25lIHdobyBpcyBhIGh1bWFuIGJlaW5nIGJlbG9uZ2luZyBieSBuYXR1cmUgbm90IHRvIGhpbXNlbGYgYnV0IHRvCgkJCQkJYW5vdGhlciBpcyBieSBuYXR1cmUgYSBzbGF2ZSwgYW5kIGEgcGVyc29uIGlzIGEgaHVtYW4gYmVpbmcgYmVsb25naW5nIHRvIGFub3RoZXIKCQkJCQlpZiBiZWluZyBhIG1hbiBoZSBpcyBhbiBhcnRpY2xlIG9mIHByb3BlcnR5LCBhbmQgYW4gYXJ0aWNsZSBvZiBwcm9wZXJ0eQoJCQkJCWlzIGFuIGluc3RydW1lbnQgZm9yIGFjdGlvbiBzZXBhcmFibGUgZnJvbSBpdHMgb3duZXIuIEJ1dCB3ZSBtdXN0IG5leHQgY29uc2lkZXIKCQkJCQl3aGV0aGVyIG9yIG5vdCBhbnlvbmUgZXhpc3RzIHdobyBpcyBieSBuYXR1cmUgb2YgdGhpcyBjaGFyYWN0ZXIsIGFuZCB3aGV0aGVyIGl0CgkJCQkJaXMgYWR2YW50YWdlb3VzIGFuZCBqdXN0IGZvciBhbnlvbmUgdG8gYmUgYSBzbGF2ZSwgb3Igd2hldGhlciBvbiB0aGUgY29udHJhcnkKCQkJCQlhbGwgc2xhdmVyeSBpcyBhZ2FpbnN0IG5hdHVyZS48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpdCBpcyBub3QgZGlmZmljdWx0IGVpdGhlcgoJCQkJCXRvIGRpc2Nlcm4gdGhlIGFuc3dlciBieSB0aGVvcnkgb3IgdG8gbGVhcm4gaXQgZW1waXJpY2FsbHkuIEF1dGhvcml0eSBhbmQKCQkJCQlzdWJvcmRpbmF0aW9uIGFyZSBjb25kaXRpb25zIG5vdCBvbmx5IGluZXZpdGFibGUgYnV0IGFsc28gZXhwZWRpZW50OyBpbiBzb21lCgkJCQkJY2FzZXMgdGhpbmdzIGFyZSBtYXJrZWQgb3V0IGZyb20gdGhlIG1vbWVudCBvZiBiaXJ0aCB0byBydWxlIG9yIHRvIGJlIHJ1bGVkLiBBbmQKCQkJCQl0aGVyZSBhcmUgbWFueSB2YXJpZXRpZXMgYm90aCBvZiBydWxlcnMgYW5kIG9mIHN1YmplY3RzIO+8iGFuZCB0aGUgaGlnaGVyCgkJCQkJdGhlIHR5cGUgb2YgdGhlIHN1YmplY3RzLCB0aGUgbG9mdGllciBpcyB0aGUgbmF0dXJlIG9mIHRoZSBhdXRob3JpdHkgZXhlcmNpc2VkCgkJCQkJb3ZlciB0aGVtLCBmb3IgZXhhbXBsZSB0byBjb250cm9sIGEgaHVtYW4gYmVpbmcgaXMgYSBoaWdoZXIgdGhpbmcgdGhhbiB0byB0YW1lIGEKCQkJCQl3aWxkIGJlYXN0OyBmb3IgdGhlIGhpZ2hlciB0aGUgdHlwZSBvZiB0aGUgcGFydGllcyB0byB0aGUgcGVyZm9ybWFuY2Ugb2YgYQoJCQkJCWZ1bmN0aW9uLCB0aGUgaGlnaGVyIGlzIHRoZSBmdW5jdGlvbiwgYW5kIHdoZW4gb25lIHBhcnR5IHJ1bGVzIGFuZCBhbm90aGVyIGlzCgkJCQkJcnVsZWQsIHRoZXJlIGlzIGEgZnVuY3Rpb24gcGVyZm9ybWVkIGJldHdlZW4gdGhlbe+8ieKAlDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPmJlY2F1c2UgaW4gZXZlcnkgY29tcG9zaXRlIHRoaW5nLCB3aGVyZSBhCgkJCQkJcGx1cmFsaXR5IG9mIHBhcnRzLCB3aGV0aGVyIGNvbnRpbnVvdXMgb3IgZGlzY3JldGUsIGlzIGNvbWJpbmVkIHRvIG1ha2UgYSBzaW5nbGUKCQkJCQljb21tb24gd2hvbGUsIHRoZXJlIGlzIGFsd2F5cyBmb3VuZCBhIHJ1bGluZyBhbmQgYSBzdWJqZWN0IGZhY3RvciwgYW5kIHRoaXMKCQkJCQljaGFyYWN0ZXJpc3RpYyBvZiBsaXZpbmcgdGhpbmdzIGlzIHByZXNlbnQgaW4gdGhlbSBhcyBhbiBvdXRjb21lIG9mIHRoZSB3aG9sZSBvZgoJCQkJCW5hdHVyZSwgc2luY2UgZXZlbiBpbiB0aGluZ3MgdGhhdCBkbyBub3QgcGFydGFrZSBvZiBsaWZlIHRoZXJlIGlzIGEgcnVsaW5nCgkJCQkJcHJpbmNpcGxlLCBhcyBpbiB0aGUgY2FzZSBvZiBhIG11c2ljYWwgc2NhbGUuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5FYWNoIOKAmG1vZGXigJkg77yIRG9yaWFuLCB0aGUgbW9kZXJuIG1pbm9yIHNjYWxlLAoJCQkJCQlQaHJ5Z2lhbiBhbmQgTHlkaWFuLCB0d28gZm9ybXMgb2YgbWFqb3LvvIkgd2FzIHJ1bGVkIGJ5IGl0cwoJCQkJCQlrZXktbm90ZS48L25vdGU+IEhvd2V2ZXIsIHRoaXMgbWF0dGVyIHBlcmhhcHMgYmVsb25ncyB0byBhbiBpbnZlc3RpZ2F0aW9uCgkJCQkJbHlpbmcgc29tZXdoYXQgb3V0c2lkZSBvdXIgc3ViamVjdDsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCBhbiBhbmltYWwgY29uc2lzdHMgcHJpbWFyaWx5IG9mIHNvdWwgYW5kIGJvZHksIG9mIHdoaWNoIHRoZSBmb3JtZXIgaXMgYnkKCQkJCQluYXR1cmUgdGhlIHJ1bGluZyBhbmQgdGhlIGxhdHRlciB0aGUgc3ViamVjdCBmYWN0b3IuIEFuZCB0byBkaXNjb3ZlciB3aGF0IGlzCgkJCQkJbmF0dXJhbCB3ZSBtdXN0IHN0dWR5IGl0IHByZWZlcmFibHkgaW4gdGhpbmdzIHRoYXQgYXJlIGluIGEgbmF0dXJhbCBzdGF0ZSwgYW5kCgkJCQkJbm90IGluIHNwZWNpbWVucyB0aGF0IGFyZSBkZWdlbmVyYXRlLiBIZW5jZSBpbiBzdHVkeWluZyBtYW4gd2UgbXVzdCBjb25zaWRlciBhCgkJCQkJbWFuIHRoYXQgaXMgaW4gdGhlIGJlc3QgcG9zc2libGUgY29uZGl0aW9uIGluIHJlZ2FyZCB0byBib3RoIGJvZHkgYW5kIHNvdWwsIGFuZAoJCQkJCWluIGhpbSB0aGUgcHJpbmNpcGxlIHN0YXRlZCB3aWxsIGNsZWFybHkgYXBwZWFyLOKAlCA8bWlsZXN0b25lIG49IjEyNTRiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5zaW5jZSBpbiB0aG9zZQoJCQkJCXRoYXQgYXJlIGJhZCBvciBpbiBhIGJhZCBjb25kaXRpb24gaXQgbWlnaHQgYmUgdGhvdWdodCB0aGF0IHRoZSBib2R5IG9mdGVuIHJ1bGVzCgkJCQkJdGhlIHNvdWwgYmVjYXVzZSBvZiBpdHMgdmljaW91cyBhbmQgdW5uYXR1cmFsIGNvbmRpdGlvbi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0byByZXN1bWXigJRpdCBpcyBpbiBhIGxpdmluZyBjcmVhdHVyZSwKCQkJCQlhcyB3ZSBzYXksIHRoYXQgaXQgaXMgZmlyc3QgcG9zc2libGUgdG8gZGlzY2VybiB0aGUgcnVsZSBib3RoIG9mIG1hc3RlciBhbmQgb2YKCQkJCQlzdGF0ZXNtYW4gdGhlIHNvdWwgcnVsZXMgdGhlIGJvZHkgd2l0aCB0aGUgc3dheSBvZiBhIG1hc3RlciwgdGhlIGludGVsbGlnZW5jZQoJCQkJCXJ1bGVzIHRoZSBhcHBldGl0ZXMgd2l0aCB0aGF0IG9mIGEgc3RhdGVzbWFuIG9yIGEga2luZyBhbmQgaW4gdGhlc2UgZXhhbXBsZXMgaXQKCQkJCQlpcyBtYW5pZmVzdCB0aGF0IGl0IGlzIG5hdHVyYWwgYW5kIGV4cGVkaWVudCBmb3IgdGhlIGJvZHkgdG8gYmUgZ292ZXJuZWQgYnkgdGhlCgkJCQkJc291bCBhbmQgZm9yIHRoZSBlbW90aW9uYWwgcGFydCB0byBiZSBnb3Zlcm5lZCBieSB0aGUgaW50ZWxsZWN0LCB0aGUgcGFydAoJCQkJCXBvc3Nlc3NpbmcgcmVhc29uLCB3aGVyZWFzIGZvciB0aGUgdHdvIHBhcnRpZXMgdG8gYmUgb24gYW4gZXF1YWwgZm9vdGluZyBvciBpbgoJCQkJCXRoZSBjb250cmFyeSBwb3NpdGlvbnMgaXMgaGFybWZ1bCBpbiBhbGwgY2FzZXMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BZ2FpbiwgdGhlIHNhbWUgaG9sZHMgZ29vZCBiZXR3ZWVuIG1hbiBhbmQgdGhlIG90aGVyCgkJCQkJYW5pbWFsczogdGFtZSBhbmltYWxzIGFyZSBzdXBlcmlvciBpbiB0aGVpciBuYXR1cmUgdG8gd2lsZCBhbmltYWxzLCB5ZXQgZm9yIGFsbAoJCQkJCXRoZSBmb3JtZXIgaXQgaXMgYWR2YW50YWdlb3VzIHRvIGJlIHJ1bGVkIGJ5IG1hbiwgc2luY2UgdGhpcyBnaXZlcyB0aGVtCgkJCQkJc2VjdXJpdHkuIEFnYWluLCBhcyBiZXR3ZWVuIHRoZSBzZXhlcywgdGhlIG1hbGUgaXMgYnkgbmF0dXJlIHN1cGVyaW9yIGFuZCB0aGUKCQkJCQlmZW1hbGUgaW5mZXJpb3IsIHRoZSBtYWxlIHJ1bGVyIGFuZCB0aGUgZmVtYWxlIHN1YmplY3QuIEFuZCB0aGUgc2FtZSBtdXN0IGFsc28KCQkJCQluZWNlc3NhcmlseSBhcHBseSBpbiB0aGUgY2FzZSBvZiBtYW5raW5kIGFzIGEgd2hvbGU7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMTMiIHVuaXQ9IkxvZWIgY2hhcCIgLz50aGVyZWZvcmUgYWxsIG1lbiB0aGF0IGRpZmZlciBhcyB3aWRlbHkgYXMgdGhlIHNvdWwgZG9lcwoJCQkJCWZyb20gdGhlIGJvZHkgYW5kIHRoZSBodW1hbiBiZWluZyBmcm9tIHRoZSBsb3dlciBhbmltYWwg77yIYW5kIHRoaXMgaXMKCQkJCQl0aGUgY29uZGl0aW9uIG9mIHRob3NlIHdob3NlIGZ1bmN0aW9uIGlzIHRoZSB1c2Ugb2YgdGhlIGJvZHkgYW5kIGZyb20gd2hvbSB0aGlzCgkJCQkJaXMgdGhlIGJlc3QgdGhhdCBpcyBmb3J0aGNvbWluZ++8iSB0aGVzZSBhcmUgYnkgbmF0dXJlIHNsYXZlcywgZm9yIHdob20KCQkJCQl0byBiZSBnb3Zlcm5lZCBieSB0aGlzIGtpbmQgb2YgYXV0aG9yaXR5PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5pcyBhZHZhbnRhZ2VvdXMsIGluYXNtdWNoIGFzIGl0IGlzIGFkdmFudGFnZW91cyB0byB0aGUgc3ViamVjdAoJCQkJCXRoaW5ncyBhbHJlYWR5IG1lbnRpb25lZC4gRm9yIGhlIGlzIGJ5IG5hdHVyZSBhIHNsYXZlIHdobyBpcyBjYXBhYmxlIG9mCgkJCQkJYmVsb25naW5nIHRvIGFub3RoZXIg77yIYW5kIHRoYXQgaXMgd2h5IGhlIGRvZXMgc28gYmVsb25n77yJLCBhbmQKCQkJCQl3aG8gcGFydGljaXBhdGVzIGluIHJlYXNvbiBzbyBmYXIgYXMgdG8gYXBwcmVoZW5kIGl0IGJ1dCBub3QgdG8gcG9zc2VzcyBpdDsgZm9yCgkJCQkJdGhlIGFuaW1hbHMgb3RoZXIgdGhhbiBtYW4gYXJlIHN1YnNlcnZpZW50IG5vdCB0byByZWFzb24sIGJ5IGFwcHJlaGVuZGluZyBpdCwKCQkJCQlidXQgdG8gZmVlbGluZ3MuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgYWxzbyB0aGUKCQkJCQl1c2VmdWxuZXNzIG9mIHNsYXZlcyBkaXZlcmdlcyBsaXR0bGUgZnJvbSB0aGF0IG9mIGFuaW1hbHM7IGJvZGlseSBzZXJ2aWNlIGZvcgoJCQkJCXRoZSBuZWNlc3NpdGllcyBvZiBsaWZlIGlzIGZvcnRoY29taW5nIGZyb20gYm90aCwgZnJvbSBzbGF2ZXMgYW5kIGZyb20gZG9tZXN0aWMKCQkJCQlhbmltYWxzIGFsaWtlLiBUaGUgaW50ZW50aW9uIG9mIG5hdHVyZSB0aGVyZWZvcmUgaXMgdG8gbWFrZSB0aGUgYm9kaWVzIGFsc28gb2YKCQkJCQlmcmVlbWVuIGFuZCBvZiBzbGF2ZXMgZGlmZmVyZW504oCUdGhlIGxhdHRlciBzdHJvbmcgZm9yIG5lY2Vzc2FyeQoJCQkJCXNlcnZpY2UsIHRoZSBmb3JtZXIgZXJlY3QgYW5kIHVuc2VydmljZWFibGUgZm9yIHN1Y2ggb2NjdXBhdGlvbnMsIGJ1dAoJCQkJCXNlcnZpY2VhYmxlIGZvciBhIGxpZmUgb2YgY2l0aXplbnNoaXAg77yIYW5kIHRoYXQgYWdhaW4gZGl2aWRlcyBpbnRvIHRoZQoJCQkJCWVtcGxveW1lbnRzIG9mIHdhciBhbmQgdGhvc2Ugb2YgcGVhY2XvvIk7IGJ1dCBhcyBhIG1hdHRlciBvZiBmYWN0IG9mdGVuCgkJCQkJdGhlIHZlcnkgb3Bwb3NpdGUgY29tZXMgYWJvdXTigJRzb21lIHBlcnNvbnMgaGF2ZSB0aGUgYm9kaWVzIG9mIGZyZWUgbWVuCgkJCQkJYW5kIG90aGVycyB0aGUgc291bHM7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMTUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5zaW5jZSB0aGlzIGlzCgkJCQkJY2VydGFpbmx5IGNsZWFyLCB0aGF0IGlmIHBlcnNvbnMgd2VyZSBib3JuIGFzIGRpc3Rpbmd1aXNoZWQgb25seSBpbiBib2R5IGFzIGFyZQoJCQkJCXRoZSBzdGF0dWVzIG9mIHRoZSBnb2RzLCBldmVyeW9uZSB3b3VsZCBzYXkgdGhhdCB0aG9zZSB3aG8gd2VyZSBpbmZlcmlvcgoJCQkJCWRlc2VydmVkIHRvIGJlIHRoZXNlIG1lbidzIHNsYXZlcy4gQW5kIGlmIHRoaXMgaXMgdHJ1ZSBpbiB0aGUgY2FzZSBvZiB0aGUgYm9keSwKCQkJCQl0aGVyZSBpcyBmYXIganVzdGVyIHJlYXNvbiBmb3IgdGhpcyBydWxlIGJlaW5nIGxhaWQgZG93biBpbiB0aGUgY2FzZSBvZiB0aGUKCQkJCQlzb3VsOyBidXQgYmVhdXR5IG9mIHNvdWwgaXMgbm90IHNvIGVhc3kgdG8gc2VlIGFzIGJlYXV0eSBvZiBib2R5LiA8bWlsZXN0b25lIG49IjEyNTVhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5JdCBpcwoJCQkJCW1hbmlmZXN0IHRoZXJlZm9yZSB0aGF0IHRoZXJlIGFyZSBjYXNlcyBvZiBwZW9wbGUgb2Ygd2hvbSBzb21lIGFyZSBmcmVlbWVuIGFuZAoJCQkJCXRoZSBvdGhlcnMgc2xhdmVzIGJ5IG5hdHVyZSwgYW5kIGZvciB0aGVzZSBzbGF2ZXJ5IGlzIGFuIGluc3RpdHV0aW9uIGJvdGgKCQkJCQlleHBlZGllbnQgYW5kIGp1c3QuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMTYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgYXQgdGhlIHNhbWUKCQkJCQl0aW1lIGl0IGlzIG5vdCBkaWZmaWN1bHQgdG8gc2VlIHRoYXQgdGhvc2Ugd2hvIGFzc2VydCB0aGUgb3Bwb3NpdGUgYXJlIGFsc28KCQkJCQlyaWdodCBpbiBhIG1hbm5lci4gVGhlIGZhY3QgaXMgdGhhdCB0aGUgdGVybXMg4oCYc2xhdmVyeeKAmSBhbmQKCQkJCQnigJhzbGF2ZeKAmSBhcmUgYW1iaWd1b3VzOyBmb3IgdGhlcmUgaXMgYWxzbyBzdWNoIGEgdGhpbmcgYXMgYQoJCQkJCXNsYXZlIG9yIGEgbWFuIHRoYXQgaXMgaW4gc2xhdmVyeSBieSBsYXcsIGZvciB0aGUgbGF3IGlzIGEgc29ydCBvZiBhZ3JlZW1lbnQKCQkJCQl1bmRlciB3aGljaCB0aGUgdGhpbmdzIGNvbnF1ZXJlZCBpbiB3YXIgYXJlIHNhaWQgdG8gYmVsb25nIHRvIHRoZWlyIGNvbnF1ZXJvcnMuCgkJCQkJTm93IHRoaXMgY29udmVudGlvbmFsIHJpZ2h0IGlzIGFycmFpZ25lZCBieSBtYW55IGp1cmlzdHMganVzdCBhcyBhIHN0YXRlc21hbiBpcwoJCQkJCWltcGVhY2hlZCBmb3IgcHJvcG9zaW5nIGFuIHVuY29uc3RpdHV0aW9uYWwgbWVhc3VyZTsgdGhleSBzYXkgdGhhdCBpdCBpcwoJCQkJCW1vbnN0cm91cyBpZiB0aGUgcGVyc29uIHBvd2VyZnVsIGVub3VnaCB0byB1c2UgZm9yY2UsIGFuZCBzdXBlcmlvciBpbiBwb3dlciwgaXMKCQkJCQl0byBoYXZlIHRoZSB2aWN0aW0gb2YgaGlzIGZvcmNlIGFzIGhpcyBzbGF2ZSBhbmQgc3ViamVjdDsgYW5kIGV2ZW4gYW1vbmcgdGhlCgkJCQkJbGVhcm5lZCBzb21lIGhvbGQgdGhpcyB2aWV3LCB0aG91Z2ggb3RoZXJzIGhvbGQgdGhlIG90aGVyLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjE3IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZSByZWFzb24gb2YgdGhpcyBkaXNwdXRlIGFuZCB3aGF0IG1ha2VzIHRoZQoJCQkJCXRoZW9yaWVzIG92ZXJsYXAgaXMgdGhlIGZhY3QgdGhhdCBpbiBhIGNlcnRhaW4gbWFubmVyIHZpcnR1ZSB3aGVuIGl0IG9idGFpbnMKCQkJCQlyZXNvdXJjZXMgaGFzIGluIGZhY3QgdmVyeSBncmVhdCBwb3dlciB0byB1c2UgZm9yY2UsIGFuZCB0aGUgc3Ryb25nZXIgcGFydHkKCQkJCQlhbHdheXMgcG9zc2Vzc2VzIHN1cGVyaW9yaXR5IGluIHNvbWV0aGluZyB0aGF0IGlzIGdvb2QsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgZGlmZmljdWx0eSB0dXJucyBvbiB0aGUgYW1iaWd1aXR5IG9mIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7hvIDPgc61z4ThvbU8L2ZvcmVpZ24+LCDvvIhh77yJIG1vcmFsIGdvb2RuZXNzLAoJCQkJCQl2aXJ0dWUsIO+8iGLvvIkgZ29vZG5lc3Mgb2YgYW55IGtpbmQsIGUuZy4gc3RyZW5ndGguPC9ub3RlPiBzbwoJCQkJCXRoYXQgaXQgaXMgdGhvdWdodCB0aGF0IGZvcmNlIGNhbm5vdCBiZSBkZXZvaWQgb2YgZ29vZG5lc3MsIGJ1dCB0aGF0IHRoZSBkaXNwdXRlCgkJCQkJaXMgbWVyZWx5IGFib3V0IHRoZSBqdXN0aWNlIG9mIHRoZSBtYXR0ZXIg77yIZm9yIGl0IGlzIGR1ZSB0byB0aGUgb25lCgkJCQkJcGFydHkgaG9sZGluZyB0aGF0IHRoZSBqdXN0aWZpY2F0aW9uIG9mIGF1dGhvcml0eSBpcyBnb29kLXdpbGwsIHdoaWxlIHRoZSBvdGhlcgoJCQkJCWlkZW50aWZpZXMganVzdGljZSB3aXRoIHRoZSBtZXJlIHJ1bGUgb2YgdGhlIHN0cm9uZ2Vy77yJOyBiZWNhdXNlCgkJCQkJb2J2aW91c2x5IGlmIHRoZXNlIHRoZW9yaWVzIGJlIHNlcGFyYXRlZCBhcGFydCw8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRoZSBvdGhlciB0aGVvcmllcyBoYXZlIG5vIGZvcmNlIG9yIHBsYXVzaWJpbGl0eSBhdCBhbGwsCgkJCQkJaW1wbHlpbmcgdGhhdCB0aGUgc3VwZXJpb3IgaW4gZ29vZG5lc3MgaGFzIG5vIGNsYWltIHRvIHJ1bGUgYW5kIGJlIG1hc3Rlci4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBzb21lIHBlcnNvbnMsIHNpbXBseQoJCQkJCWNsaW5naW5nLCBhcyB0aGV5IHRoaW5rLCB0byBwcmluY2lwbGUgb2YganVzdGljZSDvvIhmb3IgdGhlIGxhdyBpcyBhCgkJCQkJcHJpbmNpcGxlIG9mIGp1c3RpY2XvvIksIGFzc2VydCB0aGF0IHRoZSBlbnNsYXZlbWVudCBvZiBwcmlzb25lcnMgb2Ygd2FyCgkJCQkJaXMganVzdDsgeWV0IGF0IHRoZSBzYW1lIHRpbWUgdGhleSBkZW55IHRoZSBhc3NlcnRpb24sIGZvciB0aGVyZSBpcyB0aGUKCQkJCQlwb3NzaWJpbGl0eSB0aGF0IHdhcnMgbWF5IGJlIHVuanVzdCBpbiB0aGVpciBvcmlnaW4gYW5kIG9uZSB3b3VsZCBieSBubyBtZWFucwoJCQkJCWFkbWl0IHRoYXQgYSBtYW4gdGhhdCBkb2VzIG5vdCBkZXNlcnZlIHNsYXZlcnkgY2FuIGJlIHJlYWxseSBhCgkJCQkJc2xhdmXigJRvdGhlcndpc2Ugd2Ugc2hhbGwgaGF2ZSB0aGUgcmVzdWx0IHRoYXQgcGVyc29ucyByZXB1dGVkIG9mIHRoZQoJCQkJCWhpZ2hlc3Qgbm9iaWxpdHkgYXJlIHNsYXZlcyBhbmQgdGhlIGRlc2NlbmRhbnRzIG9mIHNsYXZlcyBpZiB0aGV5IGhhcHBlbiB0byBiZQoJCQkJCXRha2VuIHByaXNvbmVycyBvZiB3YXIgYW5kIHNvbGQuIFRoZXJlZm9yZSB0aGV5IGRvIG5vdCBtZWFuIHRvIGFzc2VydCB0aGF0CgkJCQkJR3JlZWtzIHRoZW1zZWx2ZXMgaWYgdGFrZW4gcHJpc29uZXJzIGFyZSBzbGF2ZXMsIGJ1dCB0aGF0IGJhcmJhcmlhbnMgYXJlLiBZZXQKCQkJCQl3aGVuIHRoZXkgc2F5IHRoaXMsIHRoZXkgYXJlIG1lcmVseSBzZWVraW5nIGZvciB0aGUgcHJpbmNpcGxlcyBvZiBuYXR1cmFsCgkJCQkJc2xhdmVyeSBvZiB3aGljaCB3ZSBzcG9rZSBhdCB0aGUgb3V0c2V0OyBmb3IgdGhleSBhcmUgY29tcGVsbGVkIHRvIHNheSB0aGF0CgkJCQkJdGhlcmUgZXhpc3QgY2VydGFpbiBwZXJzb25zIHdobyBhcmUgZXNzZW50aWFsbHkgc2xhdmVzIGV2ZXJ5d2hlcmUgYW5kIGNlcnRhaW4KCQkJCQlvdGhlcnMgd2hvIGFyZSBzbyBub3doZXJlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjE5IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZQoJCQkJCXNhbWUgYXBwbGllcyBhbHNvIGFib3V0IG5vYmlsaXR5OiBvdXIgbm9ibGVzIGNvbnNpZGVyIHRoZW1zZWx2ZXMgbm9ibGUgbm90IG9ubHkKCQkJCQlpbiB0aGVpciBvd24gY291bnRyeSBidXQgZXZlcnl3aGVyZSwgYnV0IHRoZXkgdGhpbmsgdGhhdCBiYXJiYXJpYW4gbm9ibGVtZW4gYXJlCgkJCQkJb25seSBub2JsZSBpbiB0aGVpciBvd24gY291bnRyeeKAlHdoaWNoIGltcGxpZXMgdGhhdCB0aGVyZSBhcmUgdHdvIGtpbmRzCgkJCQkJb2Ygbm9iaWxpdHkgYW5kIG9mIGZyZWVkb20sIG9uZSBhYnNvbHV0ZSBhbmQgdGhlIG90aGVyIHJlbGF0aXZlLCBhcyBIZWxlbiBzYXlzCgkJCQkJaW4gVGhlb2RlY3Rlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSB0cmFnaWMgcG9ldCwgYSBmcmllbmQgb2YKCQkJCQkJQXJpc3RvdGxlLjwvbm90ZT46IDxxdW90ZSB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIG1ldD0iaWFtYmljIj5CdXQgd2hvIHdvdWxkIGRhcmUgdG8gY2FsbCBtZSBtZW5pYWwsPC9sPgoJCQkJCQk8bD5UaGUgc2Npb24gb2YgYSB0d29mb2xkIHN0b2NrIGRpdmluZT88L2w+CgkJCQkJPC9xdW90ZT4gWWV0IGluIHNvIHNwZWFraW5nIHRoZXkgbWFrZSBub3RoaW5nIGJ1dCB2aXJ0dWUgYW5kIHZpY2UgdGhlCgkJCQkJZGlzdGluY3Rpb24gYmV0d2VlbiBzbGF2ZSBhbmQgZnJlZSwgdGhlIG5vYmxlIGFuZCB0aGUgYmFzZS1ib3JuOyA8bWlsZXN0b25lIG49IjEyNTViIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5mb3IgdGhleQoJCQkJCWFzc3VtZSB0aGF0IGp1c3QgYXMgZnJvbSBhIG1hbiBzcHJpbmdzIGEgbWFuIGFuZCBmcm9tIGJydXRlcyBhIGJydXRlLCBzbyBhbHNvCgkJCQkJZnJvbSBnb29kIHBhcmVudHMgY29tZXMgYSBnb29kIHNvbiBidXQgYXMgYSBtYXR0ZXIgb2YgZmFjdCBuYXR1cmUgZnJlcXVlbnRseQoJCQkJCXdoaWxlIGludGVuZGluZyB0byBkbyB0aGlzIGlzIHVuYWJsZSB0byBicmluZyBpdCBhYm91dC48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGlzIGNsZWFyIHRoZXJlZm9yZSB0aGF0IHRoZXJlIGlzIHNvbWUgcmVhc29uIGZvciB0aGlzCgkJCQkJZGlzcHV0ZSwgYW5kIHRoYXQgaW4gc29tZSBpbnN0YW5jZXMgaXQgaXMgbm90IHRoZSBjYXNlIHRoYXQgb25lIHNldCBhcmUgc2xhdmVzCgkJCQkJYW5kIHRoZSBvdGhlciBmcmVlbWVuIGJ5IG5hdHVyZTsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4yMCIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBhbHNvIHRoYXQgaW4gc29tZSBpbnN0YW5jZXMgc3VjaCBhIGRpc3RpbmN0aW9uIGRvZXMgZXhpc3QsIHdoZW4gc2xhdmVyeQoJCQkJCWZvciB0aGUgb25lIGFuZCBtYXN0ZXJzaGlwIGZvciB0aGUgb3RoZXIgYXJlIGFkdmFudGFnZW91cyBhbmQganVzdCwgYW5kIGl0IGlzCgkJCQkJcHJvcGVyIGZvciB0aGUgb25lIHBhcnR5IHRvIGJlIGdvdmVybmVkIGFuZCBmb3IgdGhlIG90aGVyIHRvIGdvdmVybiBieSB0aGUgZm9ybQoJCQkJCW9mIGdvdmVybm1lbnQgZm9yIHdoaWNoIHRoZXkgYXJlIGJ5IG5hdHVyZSBmaXR0ZWQsIGFuZCB0aGVyZWZvcmUgYnkgdGhlIGV4ZXJjaXNlCgkJCQkJb2YgbWFzdGVyc2hpcCwgd2hpbGUgdG8gZ292ZXJuIGJhZGx5IGlzIHRvIGdvdmVybiBkaXNhZHZhbnRhZ2VvdXNseSBmb3IgYm90aAoJCQkJCXBhcnRpZXMg77yIZm9yIHRoZSBzYW1lIHRoaW5nIGlzIGFkdmFudGFnZW91cyBmb3IgYSBwYXJ0IGFuZCBmb3IgdGhlCgkJCQkJd2hvbGUgYm9keSBvciB0aGUgd2hvbGUgc291bCwgYW5kIHRoZSBzbGF2ZSBpcyBhIHBhcnQgb2YgdGhlIG1hc3RlcuKAlGhlCgkJCQkJaXMsIGFzIGl0IHdlcmUsIGEgcGFydCBvZiB0aGUgYm9keSwgYWxpdmUgYnV0IHlldCBzZXBhcmF0ZWQgZnJvbSBpdDsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4yMSIgdW5pdD0iTG9lYiBjaGFwIiAvPmhlbmNlIHRoZXJlIGlzIGEgY2VydGFpbiBjb21tdW5pdHkgb2YKCQkJCQlpbnRlcmVzdCBhbmQgZnJpZW5kc2hpcCBiZXR3ZWVuIHNsYXZlIGFuZCBtYXN0ZXIgaW4gY2FzZXMgd2hlbiB0aGV5IGhhdmUgYmVlbgoJCQkJCXF1YWxpZmllZCBieSBuYXR1cmUgZm9yIHRob3NlIHBvc2l0aW9ucywgYWx0aG91Z2ggd2hlbiB0aGV5IGRvIG5vdCBob2xkIHRoZW0gaW4KCQkJCQl0aGF0IHdheSBidXQgYnkgbGF3IGFuZCBieSBjb25zdHJhaW50IG9mIGZvcmNlIHRoZSBvcHBvc2l0ZSBpcyB0aGUKCQkJCQkJY2FzZe+8iS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBldmVuIGZyb20gdGhlc2UKCQkJCQljb25zaWRlcmF0aW9ucyBpdCBpcyBjbGVhciB0aGF0IHRoZSBhdXRob3JpdHkgb2YgYSBtYXN0ZXIgb3ZlciBzbGF2ZXMgaXMgbm90IHRoZQoJCQkJCXNhbWUgYXMgdGhlIGF1dGhvcml0eSBvZiBhIG1hZ2lzdHJhdGUgaW4gYSByZXB1YmxpYywgbm9yIGFyZSBhbGwgZm9ybXMgb2YKCQkJCQlnb3Zlcm5tZW50IHRoZSBzYW1lLCBhcyBzb21lIGFzc2VydC4gUmVwdWJsaWNhbiBnb3Zlcm5tZW50IGNvbnRyb2xzIG1lbiB3aG8gYXJlCgkJCQkJYnkgbmF0dXJlIGZyZWUsIHRoZSBtYXN0ZXIncyBhdXRob3JpdHkgbWVuIHdobyBhcmUgYnkgbmF0dXJlIHNsYXZlczsgYW5kIHRoZQoJCQkJCWdvdmVybm1lbnQgb2YgYSBob3VzZWhvbGQgaXMgbW9uYXJjaHkg77yIc2luY2UgZXZlcnkgaG91c2UgaXMgZ292ZXJuZWQgYnkKCQkJCQlhIHNpbmdsZSBydWxlcu+8iSw8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPndoZXJlYXMKCQkJCQlzdGF0ZXNtYW5zaGlwIGlzIHRoZSBnb3Zlcm5tZW50IG9mIG1lbiBmcmVlIGFuZCBlcXVhbC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4yMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSB0ZXJtIOKAmG1hc3RlcuKAmSB0aGVyZWZvcmUKCQkJCQlkZW5vdGVzIHRoZSBwb3NzZXNzaW9uIG5vdCBvZiBhIGNlcnRhaW4gYnJhbmNoIG9mIGtub3dsZWRnZSBidXQgb2YgYSBjZXJ0YWluCgkJCQkJY2hhcmFjdGVyLCBhbmQgc2ltaWxhcmx5IGFsc28gdGhlIHRlcm1zIOKAmHNsYXZl4oCZIGFuZAoJCQkJCeKAmGZyZWVtYW4u4oCZIFlldCB0aGVyZSBtaWdodCBiZSBhIHNjaWVuY2Ugb2YgbWFzdGVyc2hpcCBhbmQgYQoJCQkJCXNsYXZlJ3Mgc2NpZW5jZeKAlHRoZSBsYXR0ZXIgYmVpbmcgdGhlIHNvcnQgb2Yga25vd2xlZGdlIHRoYXQgdXNlZCB0byBiZQoJCQkJCWltcGFydGVkIGJ5IHRoZSBwcm9mZXNzb3IgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPiDvvIhmb3IgdGhlcmUgdXNlZCB0byBiZSBhIG1hbiB0aGVyZSB3aG8gZm9yIGEKCQkJCQlmZWUgZ2F2ZSBsZXNzb25zIHRvIHNlcnZhbnRzIGluIHRoZWlyIG9yZGluYXJ5IGR1dGllc++8iTsgYW5kIGluZGVlZAoJCQkJCXRoZXJlIG1pZ2h0IGJlIG1vcmUgYWR2YW5jZWQgc2NpZW50aWZpYyBzdHVkeSBvZiBzdWNoIG1hdHRlcnMsIGZvciBpbnN0YW5jZSBhCgkJCQkJc2NpZW5jZSBvZiBjb29rZXJ5IGFuZCB0aGUgb3RoZXIgc3VjaCBraW5kcyBvZiBkb21lc3RpYyBzZXJ2aWNl4oCUZm9yCgkJCQkJZGlmZmVyZW50IHNlcnZhbnRzIGhhdmUgZGlmZmVyZW50IGZ1bmN0aW9ucywgc29tZSBtb3JlIGhvbm9yYWJsZSBhbmQgc29tZSBtb3JlCgkJCQkJbWVuaWFsLCBhbmQgYXMgdGhlIHByb3ZlcmIgc2F5cywgPHF1b3RlIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgbWV0PSJpYW1iaWMiPlNsYXZlIGJlZm9yZSBzbGF2ZSBhbmQgbWFzdGVyIGJlZm9yZSBtYXN0ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Qcm9iYWJseSBmcm9tIGEgY29tZWR5IG9mIEFyaXN0b3RsZSdzCgkJCQkJCQkJY29udGVtcG9yYXJ5IFBoaWxlbW9uLjwvbm90ZT48L2w+CgkJCQkJPC9xdW90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjIzIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHNsYXZlJ3Mgc2NpZW5jZXMgdGhlbiBhcmUgYWxsCgkJCQkJdGhlIHZhcmlvdXMgYnJhbmNoZXMgb2YgZG9tZXN0aWMgd29yazsgdGhlIG1hc3RlcidzIHNjaWVuY2UgaXMgdGhlIHNjaWVuY2Ugb2YKCQkJCQllbXBsb3lpbmcgc2xhdmVz4oCUZm9yIHRoZSBtYXN0ZXIncyBmdW5jdGlvbiBjb25zaXN0cyBub3QgaW4gYWNxdWlyaW5nCgkJCQkJc2xhdmVzIGJ1dCBpbiBlbXBsb3lpbmcgdGhlbS4gVGhpcyBzY2llbmNlIGhvd2V2ZXIgaXMgb25lIG9mIG5vIHBhcnRpY3VsYXIKCQkJCQlpbXBvcnRhbmNlIG9yIGRpZ25pdHk6IHRoZSBtYXN0ZXIgbXVzdCBrbm93IGhvdyB0byBkaXJlY3QgdGhlIHRhc2tzIHdoaWNoIHRoZQoJCQkJCXNsYXZlIG11c3Qga25vdyBob3cgdG8gZXhlY3V0ZS4gVGhlcmVmb3JlIGFsbCBwZW9wbGUgcmljaCBlbm91Z2ggdG8gYmUgYWJsZSB0bwoJCQkJCWF2b2lkIHBlcnNvbmFsIHRyb3VibGUgaGF2ZSBhIHN0ZXdhcmQgd2hvIHRha2VzIHRoaXMgb2ZmaWNlLCB3aGlsZSB0aGV5CgkJCQkJdGhlbXNlbHZlcyBlbmdhZ2UgaW4gcG9saXRpY3Mgb3IgcGhpbG9zb3BoeS4gVGhlIHNjaWVuY2Ugb2YgYWNxdWlyaW5nIHNsYXZlcyBpcwoJCQkJCWRpZmZlcmVudCBib3RoIGZyb20gdGhlaXIgb3duZXJzaGlwIGFuZCB0aGVpciBkaXJlY3Rpb27igJR0aGF0IGlzLCB0aGUKCQkJCQlqdXN0IGFjcXVpcmluZyBvZiBzbGF2ZXMsIHdoaWNoIGlzIGFraW4gdG8gdGhlIGFydCBvZiB3YXIgb3IgdGhhdCBvZiB0aGUgY2hhc2UuCgkJCQkJTGV0IHRoaXMgdGhlbiBzdGFuZCBhcyBvdXIgZGVmaW5pdGlvbiBvZiBzbGF2ZSBhbmQgbWFzdGVyLiA8bWlsZXN0b25lIG49IjEyNTZhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGVkPSJQIiBuPSIzLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgbGV0IHVzIGZvbGxvdyBvdXIgbm9ybWFsIG1ldGhvZCBhbmQgaW52ZXN0aWdhdGUKCQkJCQlnZW5lcmFsbHkgdGhlIG5hdHVyZSBvZiBhbGwga2luZHMgb2YgcHJvcGVydHkgYW5kIHRoZSBhcnQgb2YgZ2V0dGluZyB3ZWFsdGgsCgkJCQkJaW5hc211Y2ggYXMgd2Ugc2F3IHRoZSBzbGF2ZSB0byBiZSBvbmUgZGl2aXNpb24gb2YgcHJvcGVydHkuIEluIHRoZSBmaXJzdCBwbGFjZQoJCQkJCXRoZXJlZm9yZSBvbmUgbWlnaHQgcmFpc2UgdGhlIHF1ZXN0aW9uIHdoZXRoZXIgdGhlIGFydCBvZiBnZXR0aW5nIHdlYWx0aCBpcyB0aGUKCQkJCQlzYW1lIGFzIHRoYXQgb2YgaG91c2Vob2xkIG1hbmFnZW1lbnQsIG9yIGEgcGFydCBvZiBpdCwgb3Igc3Vic2lkaWFyeSB0byBpdDsgYW5kCgkJCQkJaWYgc3Vic2lkaWFyeSwgd2hldGhlciBpdCBpcyBzbyBpbiB0aGUgc2Vuc2UgaW4gd2hpY2ggdGhlIGFydCBvZiBtYWtpbmcgc2h1dHRsZXMKCQkJCQlpcyBzdWJzaWRpYXJ5IHRvIHRoZSBhcnQgb2Ygd2VhdmluZyBvciBpbiB0aGF0IGluIHdoaWNoIHRoZSBhcnQgb2YgY2FzdGluZwoJCQkJCWJyb256ZSBpcyBzdWJzaWRpYXJ5IHRvIHRoZSBtYWtpbmcgb2Ygc3RhdHVlcyDvvIhmb3IgdGhlIHR3byBhcmUgbm90CgkJCQkJc3Vic2lkaWFyeSBpbiB0aGUgc2FtZSB3YXksIGJ1dCBzaHV0dGxlLW1ha2luZyBzdXBwbGllcyB0b29scyB3aGVyZWFzCgkJCQkJYnJvbnplLWZvdW5kaW5nIHN1cHBsaWVzIG1hdGVyaWFs4oCUYW5kIGJ5IG1hdGVyaWFsIEkgbWVhbiB0aGUgc3Vic3RhbmNlCgkJCQkJb3V0IG9mIHdoaWNoIGNlcnRhaW4gd29yayBpcyBwcm9kdWNlZCwgZm9yIGV4YW1wbGUgZmxlZWNlcyBhcmUgbWF0ZXJpYWwgZm9yIGEKCQkJCQl3ZWF2ZXIgYW5kIGJyb256ZSBmb3IgYSBzdGF0dWFyee+8iS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+Tm93IGl0IGlzIGNsZWFyIHRoYXQgd2VhbHRoLWdldHRpbmcgaXMgbm90IHRoZSBzYW1lIGFydCBhcwoJCQkJCWhvdXNlaG9sZCBtYW5hZ2VtZW50LCBmb3IgdGhlIGZ1bmN0aW9uIG9mIHRoZSBmb3JtZXIgaXMgdG8gcHJvdmlkZSBhbmQgdGhhdCBvZgoJCQkJCXRoZSBsYXR0ZXIgdG8gdXNl4oCUZm9yIHdoYXQgd2lsbCBiZSB0aGUgYXJ0IHRoYXQgd2lsbCB1c2UgdGhlIGNvbnRlbnRzCgkJCQkJb2YgdGhlIGhvdXNlIGlmIG5vdCB0aGUgYXJ0IG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50PyBidXQgd2hldGhlciB3ZWFsdGgtZ2V0dGluZwoJCQkJCWlzIGEgcGFydCBvZiB0aGUgYXJ0IG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50LCBvciBhIGRpZmZlcmVudCBzb3J0IG9mIHNjaWVuY2UsIGlzCgkJCQkJb3BlbiB0byBkZWJhdGUuIEZvciBpZiBpdCBpcyB0aGUgZnVuY3Rpb24gb2YgdGhlIGdldHRlciBvZiB3ZWFsdGggdG8gc3R1ZHkgdGhlCgkJCQkJc291cmNlIGZyb20gd2hpY2ggbW9uZXkgYW5kIHByb3BlcnR5IGFyZSB0byBiZSBwcm9jdXJlZCwgLiAuIC48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNvbWUgd29yZHMgc2VlbSB0byBoYXZlIGZhbGxlbiBvdXQgaW4gdGhlCgkJCQkJCUdyZWVrLjwvbm90ZT4gQnV0IHByb3BlcnR5IGFuZCByaWNoZXMgY29tcHJpc2UgbWFueSBkaXZpc2lvbnM7IGhlbmNlIGZpcnN0CgkJCQkJb2YgYWxsIGlzIGh1c2JhbmRyeSBhIGRpdmlzaW9uIG9mIHRoZSBob3VzZWhvbGQgYXJ0LCBvciBpcyBpdCBhIGRpZmZlcmVudCBraW5kCgkJCQkJb2Ygc2NpZW5jZT8gYW5kIHNvIGluIGdlbmVyYWwgb2YgdGhlIHN1cGVyaW50ZW5kZW5jZSBhbmQgYWNxdWlzaXRpb24gb2YgYXJ0aWNsZXMKCQkJCQlvZiBmb29kLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgZnVydGhlcm1vcmUsIHRoZXJlIGFyZQoJCQkJCW1hbnkgc29ydHMgb2YgZm9vZCw8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm93aW5nIHRvIHdoaWNoCgkJCQkJYm90aCBhbmltYWxzIGFuZCBtZW4gaGF2ZSBtYW55IG1vZGVzIG9mIGxpZmU7IGZvciBpdCBpcyBpbXBvc3NpYmxlIHRvIGxpdmUKCQkJCQl3aXRob3V0IGZvb2QsIHNvIHRoYXQgdGhlIGRpZmZlcmVuY2VzIG9mIGZvb2QgaGF2ZSBtYWRlIHRoZSBsaXZlcyBvZiBhbmltYWxzCgkJCQkJZGlmZmVyZW50LiBBbW9uZyB3aWxkIGFuaW1hbHMgc29tZSBhcmUgbm9tYWRpYyBhbmQgb3RoZXJzIHNvbGl0YXJ5LCBhY2NvcmRpbmcgdG8KCQkJCQl3aGljaGV2ZXIgaGFiaXQgaXMgYWR2YW50YWdlb3VzIGZvciB0aGVpciBzdXBwbHkgb2YgZm9vZCwgYmVjYXVzZSBzb21lIG9mIHRoZW0KCQkJCQlhcmUgY2Fybml2b3JvdXMsIG90aGVycyBncmFtaW5pdm9yb3VzLCBhbmQgb3RoZXJzIGVhdCBhbGwga2luZHMgb2YgZm9vZDsgc28gdGhhdAoJCQkJCW5hdHVyZSBoYXMgZGlmZmVyZW50aWF0ZWQgdGhlaXIgbW9kZXMgb2YgbGlmZSB0byBzdWl0IHRoZWlyIGZhY2lsaXRpZXMgYW5kIHRoZWlyCgkJCQkJcHJlZGlsZWN0aW9uIGZvciB0aG9zZSBhcnRpY2xlcyBvZiBmb29kLiBBbmQgYXMgZGlmZmVyZW50IGtpbmRzIG9mIGFuaW1hbHMgYnkKCQkJCQluYXR1cmUgcmVsaXNoIGRpZmZlcmVudCBzb3J0cyBvZiBmb29kLCBhbmQgbm90IGVhY2gga2luZCB0aGUgc2FtZSwgZXZlbiB3aXRoaW4KCQkJCQl0aGUgY2xhc3NlcyBvZiBjYXJuaXZvcm91cyBhbmQgZ3JhbWluaXZvcm91cyBhbmltYWxzIHRoZWlyIG1vZGVzIG9mIGxpZmUgZGlmZmVyCgkJCQkJZnJvbSBvbmUgYW5vdGhlci4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHNpbWlsYXJseSBpbgoJCQkJCXRoZSBodW1hbiByYWNlIGFsc28sIGZvciB0aGVyZSBhcmUgd2lkZSBkaWZmZXJlbmNlcyBvZiBsaWZlIGFtb25nIG1hbmtpbmQuIFRoZQoJCQkJCWlkbGVzdCBtZW4gYXJlIG5vbWFkcyDvvIhmb3IgdG8gcHJvY3VyZSBmb29kIGZyb20gZG9tZXN0aWNhdGVkIGFuaW1hbHMKCQkJCQlpbnZvbHZlcyBubyB0b2lsIG9yIGluZHVzdHJ5LCBidXQgYXMgaXQgaXMgbmVjZXNzYXJ5IGZvciB0aGUgaGVyZHMgdG8gbW92ZSBmcm9tCgkJCQkJcGxhY2UgdG8gcGxhY2UgYmVjYXVzZSBvZiB0aGUgcGFzdHVyZXMsIHRoZSBwZW9wbGUgdGhlbXNlbHZlcyBhcmUgZm9yY2VkIHRvCgkJCQkJZm9sbG93IGFsb25nIHdpdGggdGhlbSwgYXMgdGhvdWdoIHRoZXkgd2VyZSBmYXJtaW5nIGEgbGl2ZSBmYXJt77yJLiBPdGhlcgoJCQkJCW1lbiBsaXZlIGZyb20gaHVudGluZywgYW5kIGRpZmZlcmVudCBwZW9wbGUgZnJvbSBkaWZmZXJlbnQga2luZHMgb2YgaHVudGluZywgZm9yCgkJCQkJaW5zdGFuY2Ugc29tZSBmcm9tIGJyaWdhbmRhZ2UsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzCgkJCQkJCeKAmHNsYXZlLXJhaWRpbmcs4oCZIGNmLiAzLjksIHRoZSBhcHByb3ByaWF0aW9uIG9mIHRoZQoJCQkJCQnigJhsaXZlIHRvb2xz4oCZIHRoYXQgYXJlIGEgcGFydCBvZiBuYXR1cmUncyBzdXBwbGllczsgYnV0CgkJCQkJCQk8YmlibCBkZWZhdWx0PSJOTyIgbj0iVGh1Yy4gMS41IiB2YWxpZD0ieWVzIj5UaHVjLiAxLjU8L2JpYmw+IHNwZWFrcyBvZiBicmlnYW5kYWdlIGFuZCBwaXJhY3kgYXMKCQkJCQkJY29tbW9uIGluIGVhcmxpZXIgdGltZXMsIGFuZCBhcyBzdGlsbCBkZWVtZWQgcmVzcGVjdGFibGUgcHJvZmVzc2lvbnMgaW4KCQkJCQkJTm9ydGhlcm4gR3JlZWNlLjwvbm90ZT4gb3RoZXJzIGZyb20gZmlzaGluZ+KAlHRoZXNlIGFyZSB0aG9zZSB0aGF0CgkJCQkJZHdlbGwgb24gdGhlIGJhbmtzIG9mIGxha2VzLCBtYXJzaGVzIGFuZCByaXZlcnMgb3Igb2YgYSBzZWEgc3VpdGFibGUgZm9yCgkJCQkJZmlzaGluZyzigJRhbmQgb3RoZXJzIGxpdmUgb24gd2lsZCBiaXJkcyBhbmQgYW5pbWFscy4gQnV0IHRoZSBsYXJnZXN0CgkJCQkJY2xhc3Mgb2YgbWVuIGxpdmUgZnJvbSB0aGUgbGFuZCBhbmQgdGhlIGZydWl0cyBvZiBjdWx0aXZhdGlvbi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy41IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhpcyB0aGVuIHZpcnR1YWxseSBjb21wbGV0ZXMgdGhlIGxpc3Qgb2YKCQkJCQl0aGUgdmFyaW91cyBtb2RlcyBvZiBsaWZlLCB0aG9zZSBhdCBsZWFzdCB0aGF0IGhhdmUgdGhlaXIgaW5kdXN0cnkgc3BydW5nIGZyb20KCQkJCQl0aGVtc2VsdmVzIGFuZCBkbyBub3QgcHJvY3VyZSB0aGVpciBmb29kIGJ5IGJhcnRlciBhbmQgdHJhZGXigJQKCQkJCQkJPG1pbGVzdG9uZSBuPSIxMjU2YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+dGhlIGxpdmVzIG9mIHRoZSBoZXJkc21hbiwgdGhlIGJyaWdhbmQsIHRoZSBmaXNoZXJtYW4sIHRoZQoJCQkJCWh1bnRlciwgdGhlIGh1c2JhbmQtbWFuLiBPdGhlcnMgYWxzbyBsaXZlIHBsZWFzYW50bHkgYnkgY29tYmluaW5nIHNvbWUgb2YgdGhlc2UKCQkJCQlwdXJzdWl0cywgc3VwcGxlbWVudGluZyB0aGUgbW9yZSBkZWZpY2llbnQgbGlmZSB3aGVyZSBpdCBoYXBwZW5zIHRvIGZhbGwgc2hvcnQKCQkJCQlpbiByZWdhcmQgdG8gYmVpbmcgc2VsZi1zdWZmaWNpbmc6IGZvciBpbnN0YW5jZSwgc29tZSBjb21iaW5lIGEgcGFzdG9yYWwgbGlmZQoJCQkJCWFuZCBicmlnYW5kYWdlLCBvdGhlcnMgaHVzYmFuZHJ5IGFuZCBodW50aW5nLCBhbmQgc2ltaWxhcmx5IHdpdGggdGhlCgkJCQkJb3RoZXJz4oCUdGhleSBwYXNzIHRoZWlyIHRpbWUgaW4gc3VjaCBhIGNvbWJpbmF0aW9uIG9mIHB1cnN1aXRzIGFzIHRoZWlyCgkJCQkJbmVlZCBjb21wZWxzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Qcm9wZXJ0eSBvZiB0aGlzIHNvcnQKCQkJCQl0aGVuIHNlZW1zIHRvIGJlIGJlc3Rvd2VkIGJ5IG5hdHVyZSBoZXJzZWxmIHVwb24gYWxsLCBhcyBpbW1lZGlhdGVseSB1cG9uIHRoZWlyCgkJCQkJZmlyc3QgY29taW5nIGludG8gZXhpc3RlbmNlLCBzbyBhbHNvIHdoZW4gdGhleSBoYXZlIHJlYWNoZWQgbWF0dXJpdHkuIEZvciBldmVuCgkJCQkJYXQgdGhlIG9yaWdpbmFsIGNvbWluZyBpbnRvIGV4aXN0ZW5jZSBvZiB0aGUgeW91bmcgc29tZSBraW5kcyBvZiBhbmltYWxzIGJyaW5nCgkJCQkJZm9ydGggd2l0aCB0aGVtIGF0IGJpcnRoIGVub3VnaCBzdXN0ZW5hbmNlIHRvIHN1ZmZpY2UgdW50aWwgdGhlIG9mZnNwcmluZyBjYW4KCQkJCQlwcm92aWRlIGZvciBpdHNlbGYsIGZvciBleGFtcGxlIGFsbCB0aGUgc3BlY2llcyB0aGF0IGJlYXIgdGhlaXIgeW91bmcgaW4gdGhlCgkJCQkJZm9ybSBvZiBsYXJ2YWUgb3IgaW4gZWdncy4gVGhlIHZpdmlwYXJvdXMgc3BlY2llcyBoYXZlIHN1c3RlbmFuY2UgZm9yIHRoZWlyCgkJCQkJb2Zmc3ByaW5nIGluc2lkZSB0aGVtc2VsdmVzIGZvciBhIGNlcnRhaW4gcGVyaW9kLCB0aGUgc3Vic3RhbmNlIGNhbGxlZCBtaWxrLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5TbyB0aGF0IGNsZWFybHkgd2UgbXVzdCBzdXBwb3NlCgkJCQkJdGhhdCBuYXR1cmUgYWxzbyBwcm92aWRlcyBmb3IgdGhlbSBpbiBhIHNpbWlsYXIgd2F5IHdoZW4gZ3Jvd24gdXAsIGFuZCB0aGF0CgkJCQkJcGxhbnRzIGV4aXN0IGZvciB0aGUgc2FrZSBvZiBhbmltYWxzIGFuZCB0aGUgb3RoZXIgYW5pbWFscyBmb3IgdGhlIGdvb2Qgb2YgbWFuLAoJCQkJCXRoZSBkb21lc3RpYyBzcGVjaWVzIGJvdGggZm9yIGhpcyBzZXJ2aWNlIGFuZCBmb3IgaGlzIGZvb2QsIGFuZCBpZiBub3QgYWxsIGF0CgkJCQkJYWxsIGV2ZW50cyBtb3N0IG9mIHRoZSB3aWxkIG9uZXMgZm9yIHRoZSBzYWtlIG9mIGhpcyBmb29kIGFuZCBvZiBoaXMgc3VwcGxpZXMgb2YKCQkJCQlvdGhlciBraW5kcywgaW4gb3JkZXIgdGhhdDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhleSBtYXkKCQkJCQlmdXJuaXNoIGhpbSBib3RoIHdpdGggY2xvdGhpbmcgYW5kIHdpdGggb3RoZXIgYXBwbGlhbmNlcy4gSWYgdGhlcmVmb3JlIG5hdHVyZQoJCQkJCW1ha2VzIG5vdGhpbmcgd2l0aG91dCBwdXJwb3NlIG9yIGluIHZhaW4sIGl0IGZvbGxvd3MgdGhhdCBuYXR1cmUgaGFzIG1hZGUgYWxsCgkJCQkJdGhlIGFuaW1hbHMgZm9yIHRoZSBzYWtlIG9mIG1lbi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy44IiB1bml0PSJMb2ViIGNoYXAiIC8+SGVuY2UgZXZlbiB0aGUgYXJ0IG9mIHdhciB3aWxsIGJ5IG5hdHVyZSBiZSBpbiBhIG1hbm5lciBhbiBhcnQgb2YgYWNxdWlzaXRpb24KCQkJCQnvvIhmb3IgdGhlIGFydCBvZiBodW50aW5nIGlzIGEgcGFydCBvZiBpdO+8iSB0aGF0IGlzIHByb3Blcmx5CgkJCQkJZW1wbG95ZWQgYm90aCBhZ2FpbnN0IHdpbGQgYW5pbWFscyBhbmQgYWdhaW5zdCBzdWNoIG9mIG1hbmtpbmQgYXMgdGhvdWdoCgkJCQkJZGVzaWduZWQgYnkgbmF0dXJlIGZvciBzdWJqZWN0aW9uIHJlZnVzZSB0byBzdWJtaXQgdG8gaXQsIGluYXNtdWNoIGFzIHRoaXMKCQkJCQl3YXJmYXJlIGlzIGJ5IG5hdHVyZSBqdXN0LjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T25lIGtpbmQgb2YgYWNxdWlzaXRpb24KCQkJCQl0aGVyZWZvcmUgaW4gdGhlIG9yZGVyIG9mIG5hdHVyZSBpcyBhIHBhcnQgb2YgdGhlIGhvdXNlaG9sZCBhcnQsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5SYXNzb3cgd291bGQgdHJhbnNwb3NlIHRoZSBjbGF1c2UKCQkJCQkJ77yId2l0aCBhIHNsaWdodCBhbHRlcmF0aW9u77yJIHRvIGdpdmUg4oCYb2YgdGhlCgkJCQkJCWhvdXNlaG9sZCBhcnQsIHRoYXQgaXMsIHRoZSBhY3F1aXNpdGlvbiBvZiB0aG9zZSBnb29kcyBjYXBhYmxlIG9mCgkJCQkJCWFjY3VtdWxhdGlvbiB0aGF0IGFyZSBuZWNlc3NhcnkgZm9yIGxpZmUgYW5kIHVzZWZ1bCBmb3IgdGhlIGNvbW11bml0eSBvZgoJCQkJCQljaXR5IGFuZCBob3VzZWhvbGQsIGEgc3VwcGx5IG9mIHdoaWNoIG11c3QgYmUgZm9ydGhjb21pbmcgb3IgZWxzZSB0aGUgYXJ0CgkJCQkJCW11c3QgcHJvY3VyZSBpdCB0byBiZSBmb3J0aGNvbWluZy7igJk8L25vdGU+IGluIGFjY29yZGFuY2Ugd2l0aAoJCQkJCXdoaWNoIGVpdGhlciB0aGVyZSBtdXN0IGJlIGZvcnRoY29taW5nIG9yIGVsc2UgdGhhdCBhcnQgbXVzdCBwcm9jdXJlIHRvIGJlCgkJCQkJZm9ydGhjb21pbmcgYSBzdXBwbHkgb2YgdGhvc2UgZ29vZHMsIGNhcGFibGUgb2YgYWNjdW11bGF0aW9uLCB3aGljaCBhcmUKCQkJCQluZWNlc3NhcnkgZm9yIGxpZmUgYW5kIHVzZWZ1bCBmb3IgdGhlIGNvbW11bml0eSBvZiBjaXR5IG9yIGhvdXNlaG9sZC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy45IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGl0IGlzIG9mIHRoZXNlIGdvb2RzIHRoYXQgcmljaGVzIGluIHRoZQoJCQkJCXRydWUgc2Vuc2UgYXQgYWxsIGV2ZW50cyBzZWVtIHRvIGNvbnNpc3QuIEZvciB0aGUgYW1vdW50IG9mIHN1Y2ggcHJvcGVydHkKCQkJCQlzdWZmaWNpZW50IGluIGl0c2VsZiBmb3IgYSBnb29kIGxpZmUgaXMgbm90IHVubGltaXRlZCwgYXMgU29sb24gPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iU29sLiBGci4gMTMuNzEiPlNvbG9uCgkJCQkJCTEzLjcxPC9iaWJsPi48L25vdGU+IHNheXMgdGhhdCBpdCBpcyBpbiB0aGUgdmVyc2UgPHF1b3RlIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgbWV0PSJkYWN0eWxpYyI+QnV0IG9mIHJpY2hlcyBubyBib3VuZCBoYXMgYmVlbiBmaXhlZCBvciByZXZlYWxlZCB0bwoJCQkJCQkJbWVuOzwvbD4KCQkJCQk8L3F1b3RlPiBmb3IgYSBsaW1pdCBoYXMgYmVlbiBmaXhlZCwgYXMgd2l0aCB0aGUgb3RoZXIgYXJ0cywgc2luY2Ugbm8gdG9vbAoJCQkJCWJlbG9uZ2luZyB0byBhbnkgYXJ0IGlzIHdpdGhvdXQgYSBsaW1pdCB3aGV0aGVyIGluIG51bWJlciBvciBpbiBzaXplLCBhbmQgcmljaGVzCgkJCQkJYXJlIGEgY29sbGVjdGlvbiBvZiB0b29scyBmb3IgdGhlIGhvdXNlaG9sZGVyIGFuZCB0aGUgc3RhdGVzbWFuLiBUaGVyZWZvcmUgdGhhdAoJCQkJCXRoZXJlIGlzIGEgY2VydGFpbiBhcnQgb2YgYWNxdWlzaXRpb24gYmVsb25naW5nIGluIHRoZSBvcmRlciBvZiBuYXR1cmUgdG8KCQkJCQlob3VzZWhvbGRlcnMgYW5kIHRvIHN0YXRlc21lbiwgYW5kIGZvciB3aGF0IHJlYXNvbiB0aGlzIGlzIHNvLCBpcyBjbGVhci4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGVyZSBpcyBhbm90aGVyIGtpbmQgb2YKCQkJCQlhY3F1aXNpdGlvbiB0aGF0IGlzIHNwZWNpYWxseSBjYWxsZWQgd2VhbHRoLWdldHRpbmcsIGFuZCB0aGF0IGlzIHNvIGNhbGxlZCB3aXRoCgkJCQkJanVzdGljZSBhbmQgdG8gdGhpcyBraW5kIGl0IGlzIGR1ZSB0aGF0IHRoZXJlIGlzIHRob3VnaHQgdG8gYmUgbm8gbGltaXQgdG8KCQkJCQlyaWNoZXMgYW5kIHByb3BlcnR5LiA8bWlsZXN0b25lIG49IjEyNTdhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5Pd2luZyB0byBpdHMgYWZmaW5pdHkgdG8gdGhlIGFydCBvZiBhY3F1aXNpdGlvbiBvZgoJCQkJCXdoaWNoIHdlIHNwb2tlLCBpdCBpcyBzdXBwb3NlZCBieSBtYW55IHBlb3BsZSB0byBiZSBvbmUgYW5kIHRoZSBzYW1lIGFzIHRoYXQ7CgkJCQkJYW5kIGFzIGEgbWF0dGVyIG9mIGZhY3QsIHdoaWxlIGl0IGlzIG5vdCB0aGUgc2FtZSBhcyB0aGUgYWNxdWlzaXRpb24gc3Bva2VuIG9mLAoJCQkJCWl0IGlzIG5vdCBmYXIgcmVtb3ZlZCBmcm9tIGl0LiBPbmUgb2YgdGhlbSBpcyBuYXR1cmFsLCB0aGUgb3RoZXIgaXMgbm90IG5hdHVyYWwsCgkJCQkJYnV0IGNhcnJpZWQgb24gcmF0aGVyIGJ5IG1lYW5zIG9mIGEgY2VydGFpbiBhY3F1aXJlZCBza2lsbCBvciBhcnQuIFdlIG1heSB0YWtlCgkJCQkJb3VyIHN0YXJ0aW5nLXBvaW50IGZvciBpdHMgc3R1ZHkgZnJvbSB0aGUgZm9sbG93aW5nIGNvbnNpZGVyYXRpb246IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz53aXRoIGV2ZXJ5IGFydGljbGUgb2YgcHJvcGVydHkgdGhlcmUgaXMgYQoJCQkJCWRvdWJsZSB3YXkgb2YgdXNpbmcgaXQ7IGJvdGggdXNlcyBhcmUgcmVsYXRlZCB0byB0aGUgYXJ0aWNsZSBpdHNlbGYsIGJ1dCBub3QKCQkJCQlyZWxhdGVkIHRvIGl0IGluIHRoZSBzYW1lIG1hbm5lcuKAlG9uZSBpcyBwZWN1bGlhciB0byB0aGUgdGhpbmcgYW5kIHRoZQoJCQkJCW90aGVyIGlzIG5vdCBwZWN1bGlhciB0byBpdC4gVGFrZSBmb3IgZXhhbXBsZSBhIHNob2XigJR0aGVyZSBpcyBpdHMgd2VhcgoJCQkJCWFzIGEgc2hvZSBhbmQgdGhlcmUgaXMgaXRzIHVzZSBhcyBhbiBhcnRpY2xlIG9mIGV4Y2hhbmdlOyBmb3IgYm90aCBhcmUgd2F5cyBvZgoJCQkJCXVzaW5nIGEgc2hvZSwgaW5hc211Y2ggYXMgZXZlbiBoZSB0aGF0IGJhcnRlcnMgYSBzaG9lIGZvciBtb25leSBvciBmb29kIHdpdGggdGhlCgkJCQkJY3VzdG9tZXIgdGhhdCB3YW50cyBhIHNob2UgdXNlcyBpdCBhcyBhIHNob2UsIHRob3VnaCBub3QgZm9yIHRoZSB1c2UgcGVjdWxpYXIgdG8KCQkJCQlhIHNob2UsIHNpbmNlIHNob2VzIGhhdmUgbm90IGNvbWUgaW50byBleGlzdGVuY2UgZm9yIHRoZSBwdXJwb3NlIG9mIGJhcnRlci4gQW5kCgkJCQkJdGhlIHNhbWUgYWxzbyBob2xkcyBnb29kIGFib3V0IHRoZSBvdGhlciBhcnRpY2xlcyBvZiBwcm9wZXJ0eTsgZm9yIGFsbCBvZiB0aGVtCgkJCQkJaGF2ZSBhbiBhcnQgb2YgZXhjaGFuZ2UgcmVsYXRlZCB0byB0aGVtLCB3aGljaCBiZWdhbiBpbiB0aGUgZmlyc3QgaW5zdGFuY2UgZnJvbQoJCQkJCXRoZSBuYXR1cmFsIG9yZGVyIG9mIHRoaW5ncywgYmVjYXVzZSBtZW4gaGFkIG1vcmUgdGhhbiBlbm91Z2ggb2Ygc29tZSB0aGluZ3MgYW5kCgkJCQkJbGVzcyB0aGFuIGVub3VnaCBvZiBvdGhlcnMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGlzCgkJCQkJY29uc2lkZXJhdGlvbiBhbHNvIHNob3dzIHRoYXQgdGhlIGFydCBvZiB0cmFkZSBpcyBub3QgYnkgbmF0dXJlIGEgcGFydCBvZiB0aGUKCQkJCQlhcnQgb2Ygd2VhbHRoLWdldHRpbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgQXJpc3RvdGxlIHdyb3RlCgkJCQkJCeKAmG9mIHRoZSBhcnQgb2YgZXhjaGFuZ2XigJk6IEJlcm5heXMgc3VnZ2VzdHMgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs68zrXPhM6xzrLOu863z4TOuc664b+Gz4I8L2ZvcmVpZ24+IGZvciA8Zm9yZWlnbiBsYW5nPSJncmVlayI+z4fPgc63zrzOsc+EzrnPg8+EzrnOuuG/hs+CPC9mb3JlaWduPi48L25vdGU+OyBmb3IgdGhlIHByYWN0aWNlIG9mIGJhcnRlciB3YXMKCQkJCQluZWNlc3Nhcnkgb25seSBzbyBmYXIgYXMgdG8gc2F0aXNmeSBtZW4ncyBvd24gbmVlZHMuIEluIHRoZSBwcmltYXJ5PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hc3NvY2lhdGlvbiB0aGVyZWZvcmUg77yISSBtZWFuIHRoZQoJCQkJCWhvdXNlaG9sZO+8iSB0aGVyZSBpcyBubyBmdW5jdGlvbiBmb3IgdHJhZGUsIGJ1dCBpdCBvbmx5IGFyaXNlcyBhZnRlciB0aGUKCQkJCQlhc3NvY2lhdGlvbiBoYXMgYmVjb21lIG1vcmUgbnVtZXJvdXMuIEZvciB0aGUgbWVtYmVycyBvZiB0aGUgcHJpbWl0aXZlIGhvdXNlaG9sZAoJCQkJCXVzZWQgdG8gc2hhcmUgY29tbW9kaXRpZXMgdGhhdCB3ZXJlIGFsbCB0aGVpciBvd24sIHdoZXJlYXMgb24gdGhlIGNvbnRyYXJ5IGEKCQkJCQlncm91cCBkaXZpZGVkIGludG8gc2V2ZXJhbCBob3VzZWhvbGRzIHBhcnRpY2lwYXRlZCBhbHNvIGluIGEgbnVtYmVyIG9mCgkJCQkJY29tbW9kaXRpZXMgYmVsb25naW5nIHRvIHRoZWlyIG5laWdoYm9ycywgYWNjb3JkaW5nIHRvIHRoZWlyIG5lZWRzIGZvciB3aGljaAoJCQkJCXRoZXkgd2VyZSBmb3JjZWQgdG8gbWFrZSB0aGVpciBpbnRlcmNoYW5nZXMgYnkgd2F5IG9mIGJhcnRlciwgYXMgYWxzbyBtYW55CgkJCQkJYmFyYmFyaWFuIHRyaWJlcyBkbyBzdGlsbDsgZm9yIHN1Y2ggdHJpYmVzIGRvIG5vdCBnbyBiZXlvbmQgZXhjaGFuZ2luZyBhY3R1YWwKCQkJCQljb21tb2RpdGllcyBmb3IgYWN0dWFsIGNvbW1vZGl0aWVzLCBmb3IgZXhhbXBsZSBnaXZpbmcgYW5kIHRha2luZyB3aW5lIGZvciBjb3JuLAoJCQkJCWFuZCBzbyB3aXRoIHRoZSB2YXJpb3VzIG90aGVyIHRoaW5ncyBvZiB0aGUgc29ydC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkV4Y2hhbmdlIG9uIHRoZXNlIGxpbmVzIHRoZXJlZm9yZSBpcyBub3QgY29udHJhcnkgdG8KCQkJCQluYXR1cmUsIG5vciBpcyBpdCBhbnkgYnJhbmNoIG9mIHRoZSBhcnQgb2Ygd2VhbHRoLWdldHRpbmcsIGZvciBpdCBleGlzdGVkIGZvcgoJCQkJCXRoZSByZXBsZW5pc2htZW50IG9mIG5hdHVyYWwgc2VsZi1zdWZmaWNpZW5jeTsgeWV0IG91dCBvZiBpdCB0aGUgYXJ0IG9mIGJ1c2luZXNzCgkJCQkJaW4gZHVlIGNvdXJzZSBhcm9zZS4gRm9yIHdoZW4gdGhleSBoYWQgY29tZSB0byBzdXBwbHkgdGhlbXNlbHZlcyBtb3JlIGZyb20KCQkJCQlhYnJvYWQgYnkgaW1wb3J0aW5nIHRoaW5ncyBpbiB3aGljaCB0aGV5IHdlcmUgZGVmaWNpZW50IGFuZCBleHBvcnRpbmcgdGhvc2Ugb2YKCQkJCQl3aGljaCB0aGV5IGhhZCBhIHN1cnBsdXMsIHRoZSBlbXBsb3ltZW50IG9mIG1vbmV5IG5lY2Vzc2FyaWx5IGNhbWUgdG8gYmUKCQkJCQlkZXZpc2VkLiBGb3IgdGhlIG5hdHVyYWwgbmVjZXNzYXJpZXMgYXJlIG5vdCBpbiBldmVyeSBjYXNlIHJlYWRpbHkgcG9ydGFibGU7CgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5oZW5jZSBmb3IgdGhlIHB1cnBvc2Ugb2YgYmFydGVyCgkJCQkJbWVuIG1hZGUgYSBtdXR1YWwgY29tcGFjdCB0byBnaXZlIGFuZCBhY2NlcHQgc29tZSBzdWJzdGFuY2Ugb2Ygc3VjaCBhIHNvcnQgYXMKCQkJCQliZWluZyBpdHNlbGYgYSB1c2VmdWwgY29tbW9kaXR5IHdhcyBlYXN5IHRvIGhhbmRsZSBpbiB1c2UgZm9yIGdlbmVyYWwgbGlmZSwgaXJvbgoJCQkJCWZvciBpbnN0YW5jZSwgc2lsdmVyIGFuZCBvdGhlciBtZXRhbHMsIGF0IHRoZSBmaXJzdCBzdGFnZSBkZWZpbmVkIG1lcmVseSBieSBzaXplCgkJCQkJYW5kIHdlaWdodCwgYnV0IGZpbmFsbHkgYWxzbyBieSBpbXByZXNzaW5nIG9uIGl0IGEgc3RhbXAgaW4gb3JkZXIgdGhhdCB0aGlzCgkJCQkJbWlnaHQgcmVsaWV2ZSB0aGVtIG9mIGhhdmluZyB0byBtZWFzdXJlIGl0OyBmb3IgdGhlIHN0YW1wIHdhcyBwdXQgb24gYXMgYSB0b2tlbgoJCQkJCW9mIHRoZSBhbW91bnQuIDxtaWxlc3RvbmUgbj0iMTI1N2IiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMTUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5TbyB3aGVuIGN1cnJlbmN5CgkJCQkJaGFkIGJlZW4gbm93IGludmVudGVkIGFzIGFuIG91dGNvbWUgb2YgdGhlIG5lY2Vzc2FyeSBpbnRlcmNoYW5nZSBvZiBnb29kcywgdGhlcmUKCQkJCQljYW1lIGludG8gZXhpc3RlbmNlIHRoZSBvdGhlciBmb3JtIG9mIHdlYWx0aC1nZXR0aW5nLCB0cmFkZSwgd2hpY2ggYXQgZmlyc3Qgbm8KCQkJCQlkb3VidCB3ZW50IG9uIGluIGEgc2ltcGxlIGZvcm0sIGJ1dCBsYXRlciBiZWNhbWUgbW9yZSBoaWdobHkgb3JnYW5pemVkIGFzCgkJCQkJZXhwZXJpZW5jZSBkaXNjb3ZlcmVkIHRoZSBzb3VyY2VzIGFuZCBtZXRob2RzIG9mIGV4Y2hhbmdlIHRoYXQgd291bGQgY2F1c2UgbW9zdAoJCQkJCXByb2ZpdC4gSGVuY2UgYXJpc2VzIHRoZSBpZGVhIHRoYXQgdGhlIGFydCBvZiB3ZWFsdGgtZ2V0dGluZyBkZWFscyBzcGVjaWFsbHkKCQkJCQl3aXRoIG1vbmV5LCBhbmQgdGhhdCBpdHMgZnVuY3Rpb24gaXMgdG8gYmUgYWJsZSB0byBkaXNjZXJuIGZyb20gd2hhdCBzb3VyY2UgYQoJCQkJCWxhcmdlIHN1cHBseSBjYW4gYmUgcHJvY3VyZWQsIGFzIHRoaXMgYXJ0IGlzIHN1cHBvc2VkIHRvIGJlIGNyZWF0aXZlIG9mIHJpY2hlcwoJCQkJCWFuZCB3ZWFsdGg7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMTYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5pbmRlZWQgcmljaGVzIGFyZSBvZnRlbgoJCQkJCWFzc3VtZWQgdG8gY29uc2lzdCBvZiBhIHF1YW50aXR5IG9mIG1vbmV5LCBiZWNhdXNlIG1vbmV5IGlzIHRoZSB0aGluZyB3aXRoIHdoaWNoCgkJCQkJdGhlIGFydCBvZiBidXNpbmVzcyBhbmQgb2YgdHJhZGUgZGVhbHMuIEJ1dCBhdCBvdGhlciB0aW1lcywgb24gdGhlIGNvbnRyYXJ5LCBpdAoJCQkJCWlzIHRob3VnaHQgdGhhdCBtb25leSBpcyBub25zZW5zZSwgYW5kIG5vdGhpbmcgYnkgbmF0dXJlIGJ1dCBlbnRpcmVseSBhCgkJCQkJY29udmVudGlvbiwgYmVjYXVzZSB3aGVuIHRob3NlIHdobyB1c2UgaXQgaGF2ZSBjaGFuZ2VkIHRoZSBjdXJyZW5jeSBpdCBpcyB3b3J0aAoJCQkJCW5vdGhpbmcsIGFuZCBiZWNhdXNlIGl0IGlzIG9mIG5vIHVzZSBmb3IgYW55IG9mIHRoZSBuZWNlc3NhcnkgbmVlZHMgb2YgbGlmZSBhbmQKCQkJCQlhIG1hbiB3ZWxsIHN1cHBsaWVkIHdpdGggbW9uZXkgbWF5IG9mdGVuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5lLmcuCgkJCQkJCW9uIGEgZGVzZXJ0IGlzbGFuZC48L25vdGU+IGJlIGRlc3RpdHV0ZSBvZiB0aGUgYmFyZSBuZWNlc3NpdGllcyBvZgoJCQkJCXN1YnNpc3RlbmNlLCB5ZXQgaXQgaXMgYW5vbWFsb3VzIHRoYXQgd2VhbHRoIHNob3VsZCBiZSBvZiBzdWNoIGEga2luZCB0aGF0IGEgbWFuCgkJCQkJbWF5IGJlIHdlbGwgc3VwcGxpZWQgd2l0aCBpdCBhbmQgeWV0IGRpZSBvZiBodW5nZXIsIGxpa2UgdGhlIGZhbW91cyBNaWRhcyBpbiB0aGUKCQkJCQlsZWdlbmQsIHdoZW4gb3dpbmcgdG8gdGhlIGluc2F0aWFibGUgY292ZXRvdXNuZXNzIG9mIGhpcyBwcmF5ZXIgYWxsIHRoZSB2aWFuZHMKCQkJCQlzZXJ2ZWQgdXAgdG8gaGltIHR1cm5lZCBpbnRvIGdvbGQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMTciIHVuaXQ9IkxvZWIgY2hhcCIgLz5IZW5jZSBwZW9wbGUgc2VlayBmb3IgYSBkaWZmZXJlbnQgZGVmaW5pdGlvbiBvZiByaWNoZXMgYW5kIHRoZSBhcnQgb2YgZ2V0dGluZwoJCQkJCXdlYWx0aCwgYW5kIHJpZ2h0bHk7IGZvciBuYXR1cmFsIHdlYWx0aC1nZXR0aW5nIGFuZCBuYXR1cmFsIHJpY2hlcyBhcmUKCQkJCQkJZGlmZmVyZW50OjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+bmF0dXJhbCB3ZWFsdGgtZ2V0dGluZwoJCQkJCWJlbG9uZ3MgdG8gaG91c2Vob2xkIG1hbmFnZW1lbnQsIHdoZXJlYXMgdGhlIG90aGVyIGtpbmQgYmVsb25ncyB0byB0cmFkZSwKCQkJCQlwcm9kdWNpbmcgZ29vZHMgbm90IGluIGV2ZXJ5IHdheSBidXQgb25seSBieSB0aGUgbWV0aG9kIG9mIGV4Y2hhbmdpbmcgZ29vZHMuIEl0CgkJCQkJaXMgdGhpcyBhcnQgb2Ygd2VhbHRoLWdldHRpbmcgdGhhdCBpcyB0aG91Z2h0IHRvIGJlIGNvbmNlcm5lZCB3aXRoIG1vbmV5LCBmb3IKCQkJCQltb25leSBpcyB0aGUgZmlyc3QgcHJpbmNpcGxlIGFuZCBsaW1pdCBvZiBjb21tZXJjZS4gQW5kIHRoZXNlIHJpY2hlcywgdGhhdCBhcmUKCQkJCQlkZXJpdmVkIGZyb20gdGhpcyBhcnQgb2Ygd2VhbHRoLWdldHRpbmcsIGFyZSB0cnVseSB1bmxpbWl0ZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gYSB0cmFkZXIgY2Fubm90IGdldCB0b28gbXVjaCBvZiBoaXMgZ29vZHMsIGFueSBtb3JlIHRoYW4KCQkJCQkJYSBkb2N0b3IgY2FuIG1ha2UgaGlzIHBhdGllbnQgdG9vIGhlYWx0aHkuPC9ub3RlPjsgZm9yIGp1c3QgYXMgdGhlIGFydCBvZgoJCQkJCW1lZGljaW5lIGlzIHdpdGhvdXQgbGltaXQgaW4gcmVzcGVjdCBvZiBoZWFsdGgsIGFuZCBlYWNoIG9mIHRoZSBhcnRzIGlzIHdpdGhvdXQKCQkJCQlsaW1pdCBpbiByZXNwZWN0IG9mIGl0cyBlbmQg77yIZm9yIHRoZXkgZGVzaXJlIHRvIHByb2R1Y2UgdGhhdCBpbiB0aGUKCQkJCQloaWdoZXN0IGRlZ3JlZSBwb3NzaWJsZe+8iSwgd2hlcmVhcyB0aGV5IGFyZSBub3Qgd2l0aG91dCBsaW1pdCBhcyByZWdhcmRzCgkJCQkJdGhlIG1lYW5zIHRvIHRoZWlyIGVuZCDvvIhmb3Igd2l0aCBhbGwgb2YgdGhlbSB0aGUgZW5kIGlzIGEgbGltaXQgdG8gdGhlCgkJCQkJbWVhbnPvvIksIHNvIGFsc28gdGhpcyB3ZWFsdGgtZ2V0dGluZyBoYXMgbm8gbGltaXQgaW4gcmVzcGVjdCBvZiBpdHMgZW5kLAoJCQkJCWFuZCBpdHMgZW5kIGlzIHJpY2hlcyBhbmQgdGhlIGFjcXVpc2l0aW9uIG9mIGdvb2RzIGluIHRoZSBjb21tZXJjaWFsIHNlbnNlLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjE4IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZSBob3VzZWhvbGQgYnJhbmNoIG9mCgkJCQkJd2VhbHRoLWdldHRpbmcgaGFzIGEgbGltaXQsIHNpbmNlIHRoZSBhY3F1aXNpdGlvbiBvZiBjb21tZXJjaWFsIHJpY2hlcyBpcyBub3QKCQkJCQl0aGUgZnVuY3Rpb24gb2YgaG91c2Vob2xkIG1hbmFnZW1lbnQuIEhlbmNlIGZyb20gdGhpcyBwb2ludCBvZiB2aWV3IGl0IGFwcGVhcnMKCQkJCQluZWNlc3NhcnkgdGhhdCB0aGVyZSBzaG91bGQgYmUgYSBsaW1pdCB0byBhbGwgcmljaGVzLCB5ZXQgaW4gYWN0dWFsIGZhY3Qgd2UKCQkJCQlvYnNlcnZlIHRoYXQgdGhlIG9wcG9zaXRlIHRha2VzIHBsYWNlOyBmb3IgYWxsIG1lbiBlbmdhZ2VkIGluIHdlYWx0aC1nZXR0aW5nIHRyeQoJCQkJCXRvIGluY3JlYXNlIHRoZWlyIG1vbmV5IHRvIGFuIHVubGltaXRlZCBhbW91bnQuIFRoZSByZWFzb24gb2YgdGhpcyBpcyB0aGUgY2xvc2UKCQkJCQlhZmZpbml0eSBvZiB0aGUgdHdvIGJyYW5jaGVzIG9mIHRoZSBhcnQgb2YgYnVzaW5lc3MuIFRoZWlyIGNvbW1vbiBncm91bmQgaXMgdGhhdAoJCQkJCXRoZSB0aGluZyB0aGF0IGVhY2ggbWFrZXMgdXNlIG9mIGlzIHRoZSBzYW1lOyB0aGV5IHVzZSB0aGUgc2FtZSBwcm9wZXJ0eSwKCQkJCQlhbHRob3VnaCBub3QgaW4gdGhlIHNhbWUgd2F54oCUdGhlIG9uZSBoYXMgYW5vdGhlciBlbmQgaW4gdmlldywgdGhlIGFpbQoJCQkJCW9mIHRoZSBvdGhlciBpcyB0aGUgaW5jcmVhc2Ugb2YgdGhlIHByb3BlcnR5LiBDb25zZXF1ZW50bHkgc29tZSBwZW9wbGUgc3VwcG9zZQoJCQkJCXRoYXQgaXQgaXMgdGhlIGZ1bmN0aW9uIG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50IHRvIGluY3JlYXNlIHByb3BlcnR5LCBhbmQgdGhleQoJCQkJCWFyZSBjb250aW51YWxseSB1bmRlciB0aGUgaWRlYSB0aGF0IGl0IGlzIHRoZWlyIGR1dHkgdG8gYmUgZWl0aGVyIHNhZmVndWFyZGluZwoJCQkJCXRoZWlyIHN1YnN0YW5jZSBpbiBtb25leSBvciBpbmNyZWFzaW5nIGl0IHRvIGFuIHVubGltaXRlZCBhbW91bnQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMTkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgY2F1c2Ugb2YgdGhpcyBzdGF0ZSBvZiBtaW5kIGlzIHRoYXQKCQkJCQl0aGVpciBpbnRlcmVzdHMgYXJlIHNldCB1cG9uIGxpZmUgYnV0IG5vdCB1cG9uIHRoZSBnb29kIGxpZmU7IDxtaWxlc3RvbmUgbj0iMTI1OGEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFzCgkJCQkJdGhlcmVmb3JlIHRoZSBkZXNpcmUgZm9yIGxpZmUgaXMgdW5saW1pdGVkLCB0aGV5IGFsc28gZGVzaXJlIHdpdGhvdXQgbGltaXQgdGhlCgkJCQkJbWVhbnMgcHJvZHVjdGl2ZSBvZiBsaWZlLiBBbmQgZXZlbiB0aG9zZSB3aG8gZml4IHRoZWlyIGFpbSBvbiB0aGUgZ29vZCBsaWZlIHNlZWsKCQkJCQl0aGUgZ29vZCBsaWZlIGFzIG1lYXN1cmVkIGJ5IGJvZGlseSBlbmpveW1lbnRzLCBzbyB0aGF0IGluYXNtdWNoIGFzIHRoaXMgYWxzbwoJCQkJCXNlZW1zIHRvIGJlIGZvdW5kIGluIHRoZSBwb3NzZXNzaW9uIG9mIHByb3BlcnR5LCBhbGwgdGhlaXIgZW5lcmdpZXMgYXJlIG9jY3VwaWVkCgkJCQkJaW4gdGhlIGJ1c2luZXNzIG9mIGdldHRpbmcgd2VhbHRoOyBhbmQgb3dpbmcgdG8gdGhpcyB0aGUgc2Vjb25kIGtpbmQgb2YgdGhlIGFydAoJCQkJCW9mIHdlYWx0aC1nZXR0aW5nIGhhcyBhcmlzZW4uIEZvciBhcyB0aGVpciBlbmpveW1lbnQgaXMgaW4gZXhjZXNzLCB0aGV5IHRyeSB0bwoJCQkJCWRpc2NvdmVyIHRoZSBhcnQgdGhhdCBpcyBwcm9kdWN0aXZlIG9mIGVuam95YWJsZSBleGNlc3M7IGFuZCBpZiB0aGV5IGNhbm5vdAoJCQkJCXByb2N1cmUgaXQgYnkgdGhlIGFydCBvZiB3ZWFsdGgtZ2V0dGluZywgdGhleSB0cnkgdG8gZG8gc28gYnkgc29tZSBvdGhlciBtZWFucywKCQkJCQllbXBsb3lpbmcgZWFjaCBvZiB0aGUgZmFjdWx0aWVzIGluIGFuIHVubmF0dXJhbCB3YXkuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMjAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Gb3IgaXQgaXMgbm90IHRoZSBmdW5jdGlvbiBvZiBjb3VyYWdlIHRvIHByb2R1Y2Ugd2VhbHRoLAoJCQkJCWJ1dCB0byBpbnNwaXJlIGRhcmluZzsgbm9yIGlzIGl0IHRoZSBmdW5jdGlvbiBvZiB0aGUgbWlsaXRhcnkgYXJ0IG5vciBvZiB0aGUKCQkJCQltZWRpY2FsIGFydCwgYnV0IGl0IGJlbG9uZ3MgdG8gdGhlIGZvcm1lciB0byBicmluZyB2aWN0b3J5IGFuZCB0byB0aGUgbGF0dGVyIHRvCgkJCQkJY2F1c2UgaGVhbHRoLiBZZXQgdGhlc2UgcGVvcGxlIG1ha2UgYWxsIHRoZXNlIGZhY3VsdGllcyBtZWFucyBmb3IgdGhlIGJ1c2luZXNzCgkJCQkJb2YgcHJvdmlkaW5nIHdlYWx0aCwgaW4gdGhlIGJlbGllZiB0aGF0IHdlYWx0aCBpcyB0aGUgZW5kIGFuZCB0aGF0IGV2ZXJ5dGhpbmcKCQkJCQltdXN0IGJlIGRpcmVjdGVkIHRvIHRoZSBlbmQuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBoYXZlIHRoZXJlZm9yZQoJCQkJCWRpc2N1c3NlZCBib3RoIHRoZSB1bm5lY2Vzc2FyeSBicmFuY2ggb2Ygd2VhbHRoLWdldHRpbmcsIGRlZmluaW5nIGl0IGFuZCBhbHNvCgkJCQkJZXhwbGFpbmluZyB0aGUgY2F1c2Ugd2h5IHdlIHJlcXVpcmUgaXQsIGFuZCB0aGUgbmVjZXNzYXJ5IGJyYW5jaCwgc2hvd2luZyB0aGF0CgkJCQkJdGhpcyBicmFuY2ggd2hpY2ggaGFzIHRvIGRvIHdpdGggZm9vZCBpcyBkaWZmZXJlbnQgZnJvbSB0aGUgdW5uZWNlc3NhcnkgYnJhbmNoCgkJCQkJYW5kIGlzIGJ5IG5hdHVyZSBhIHBhcnQgb2YgaG91c2Vob2xkIG1hbmFnZW1lbnQsIG5vdCBiZWluZyBsaWtlIHRoYXQgYnJhbmNoCgkJCQkJdW5saW1pdGVkIGJ1dCBoYXZpbmcgYSBsaW1pdC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4yMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZAoJCQkJCXdlIGNhbiBhbHNvIHNlZSB0aGUgYW5zd2VyIHRvIHRoZSBxdWVzdGlvbiByYWlzZWQgYXQgdGhlIGJlZ2lubmluZyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAzLjEuPC9ub3RlPiB3aGV0aGVyPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50aGUgYXJ0IG9mIHdlYWx0aC1nZXR0aW5nIGJlbG9uZ3MgdG8gdGhlCgkJCQkJaG91c2Vob2xkZXIgYW5kIHRoZSBzdGF0ZXNtYW4sIG9yIHdoZXRoZXIgb24gdGhlIGNvbnRyYXJ5IHN1cHBsaWVzIG91Z2h0IHRvIGJlCgkJCQkJcHJvdmlkZWQgYWxyZWFkeSDvvIhmb3IganVzdCBhcyBzdGF0ZXNtYW5zaGlwIGRvZXMgbm90IGNyZWF0ZSBodW1hbgoJCQkJCWJlaW5ncyBidXQgaGF2aW5nIHJlY2VpdmVkIHRoZW0gZnJvbSBuYXR1cmUgbWFrZXMgdXNlIG9mIHRoZW0sIHNvIGFsc28gaXQgaXMKCQkJCQluZWNlc3NhcnkgZm9yIG5hdHVyZSB0byBiZXN0b3cgZm9vZCBieSBiZXN0b3dpbmcgbGFuZCBvciBzZWEgb3Igc29tZXRoaW5nCgkJCQkJZWxzZe+8iSwgYW5kIHRoZSB0YXNrIG9mIHRoZSBob3VzZWhvbGRlciBpcywgc3RhcnRpbmcgd2l0aCB0aGVzZSBzdXBwbGllcwoJCQkJCWdpdmVuLCB0byBkaXNwb3NlIG9mIHRoZW0gaW4gdGhlIHByb3BlciB3YXkuIEZvciBpdCBkb2VzIG5vdCBiZWxvbmcgdG8gdGhlIGFydAoJCQkJCW9mIHdlYXZpbmcgdG8gbWFrZSBmbGVlY2VzLCBidXQgdG8gdXNlIHRoZW0sIGFuZCBhbHNvIHRvIGtub3cgd2hhdCBzb3J0IG9mCgkJCQkJZmxlZWNlIGlzIGdvb2QgYW5kIHN1aXRhYmxlIG9yIGJhZCBhbmQgdW5zdWl0YWJsZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4yMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkluIGZhY3QgdGhlIHF1ZXN0aW9uIG1pZ2h0IGJlIHJhaXNlZCwgd2h5IHRoZSBnZXR0aW5nIG9mCgkJCQkJd2VhbHRoIGlzIGEgcGFydCBvZiB0aGUgaG91c2Vob2xkIGFydCB3aGVyZWFzIHRoZSBhcnQgb2YgbWVkaWNpbmUgaXMgbm90IGEgcGFydAoJCQkJCW9mIGl0LCBhbHRob3VnaCB0aGUgbWVtYmVycyBvZiB0aGUgaG91c2Vob2xkIG91Z2h0IHRvIGJlIGhlYWx0aHksIGp1c3QgYXMgdGhleQoJCQkJCW11c3QgYmUgYWxpdmUgb3IgZnVsZmlsIGFueSBvZiB0aGUgb3RoZXIgZXNzZW50aWFsIGNvbmRpdGlvbnMuIEJ1dCBpbmFzbXVjaCBhcwoJCQkJCWFsdGhvdWdoIGluIGEgd2F5IGl0IGRvZXMgYmVsb25nIHRvIHRoZSBob3VzZWhvbGRlciBhbmQgdGhlIHJ1bGVyIHRvIHNlZSBldmVuIHRvCgkJCQkJaGVhbHRoLCB5ZXQgaW4gYSB3YXkgaXQgZG9lcyBub3QgYmVsb25nIHRvIHRoZW0gYnV0IHRvIHRoZSBwaHlzaWNpYW4sIHNvIGFsc28KCQkJCQl3aXRoIHJlZ2FyZCB0byB3ZWFsdGgsIGFsdGhvdWdoIGluIGEgd2F5IGl0IGlzIHRoZSBhZmZhaXIgb2YgdGhlIGhvdXNlLWhvbGRlciwKCQkJCQlpbiBhIHdheSBpdCBpcyBub3QsIGJ1dCBpcyBhIG1hdHRlciBmb3IgdGhlIHN1YnNpZGlhcnkgYXJ0LiBCdXQgYmVzdCBvZiBhbGwsIGFzCgkJCQkJaGFzIGJlZW4gc2FpZCBiZWZvcmUsIHRoaXMgcHJvdmlzaW9uIG91Z2h0IHRvIGJlIG1hZGUgaW4gYWR2YW5jZSBieSBuYXR1cmUuIEZvcgoJCQkJCWl0IGlzIHRoZSB3b3JrIG9mIG5hdHVyZSB0byBzdXBwbHkgbm91cmlzaG1lbnQgZm9yIGhlciBvZmZzcHJpbmcsIHNpbmNlIGV2ZXJ5CgkJCQkJY3JlYXR1cmUgaGFzIGZvciBub3VyaXNobWVudCB0aGUgcmVzaWR1ZSBvZiB0aGUgc3Vic3RhbmNlIGZyb20gd2hpY2ggaXQKCQkJCQkJc3ByaW5ncy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gYW5pbWFscyBhcmUgbWFkZSBvZiBlYXJ0aAoJCQkJCQlhbmQgd2F0ZXIgYW5kIGxpdmUgb24gdGhlIHByb2R1Y3RzIG9mIGVhcnRoIGFuZCB3YXRlci48L25vdGU+IEhlbmNlIHRoZQoJCQkJCWJ1c2luZXNzIG9mIGRyYXdpbmcgcHJvdmlzaW9uIGZyb20gdGhlIGZydWl0cyBvZiB0aGUgc29pbCBhbmQgZnJvbSBhbmltYWxzIGlzCgkJCQkJbmF0dXJhbCB0byBhbGwuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQsIGFzIHdlIHNhaWQsCgkJCQkJdGhpcyBhcnQgaXMgdHdvZm9sZCwgb25lIGJyYW5jaCBiZWluZyBvZiB0aGUgbmF0dXJlIG9mIHRyYWRlIHdoaWxlIHRoZSBvdGhlcgoJCQkJCWJlbG9uZ3MgdG8gdGhlIGhvdXNlaG9sZCBhcnQ7IGFuZCB0aGUgbGF0dGVyIGJyYW5jaCBpcyBuZWNlc3NhcnkgYW5kIGluIGdvb2QKCQkJCQllc3RlZW0sIGJ1dCB0aGUgYnJhbmNoIGNvbm5lY3RlZCB3aXRoIGV4Y2hhbmdlIGlzIGp1c3RseSBkaXNjcmVkaXRlZCA8bWlsZXN0b25lIG49IjEyNThiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz7vvIhmb3IgaXQgaXMgbm90IGluIGFjY29yZGFuY2Ugd2l0aCBuYXR1cmUsIGJ1dCBpbnZvbHZlcyBtZW4ncyB0YWtpbmcKCQkJCQl0aGluZ3MgZnJvbSBvbmUgYW5vdGhlcu+8iS4gQXMgdGhpcyBpcyBzbywgdXN1cnkgaXMgbW9zdCByZWFzb25hYmx5CgkJCQkJaGF0ZWQsIGJlY2F1c2UgaXRzIGdhaW4gY29tZXMgZnJvbSBtb25leSBpdHNlbGYgYW5kIG5vdCBmcm9tIHRoYXQgZm9yIHRoZSBzYWtlCgkJCQkJb2Ygd2hpY2ggbW9uZXkgd2FzIGludmVudGVkLiBGb3IgbW9uZXkgd2FzIGJyb3VnaHQgaW50byBleGlzdGVuY2UgZm9yIHRoZQoJCQkJCXB1cnBvc2Ugb2YgZXhjaGFuZ2UsIGJ1dCBpbnRlcmVzdCBpbmNyZWFzZXMgdGhlIGFtb3VudCBvZiB0aGUgbW9uZXkgaXRzZWxmCgkJCQkJ77yIYW5kIHRoaXMgaXMgdGhlIGFjdHVhbCBvcmlnaW4gb2YgdGhlIEdyZWVrIHdvcmQ6IG9mZnNwcmluZyByZXNlbWJsZXMKCQkJCQlwYXJlbnQsIGFuZCBpbnRlcmVzdCBpcyBtb25leSBib3JuIG9mIG1vbmV577yJOyBjb25zZXF1ZW50bHkgdGhpcyBmb3JtIG9mCgkJCQkJdGhlIGJ1c2luZXNzIG9mIGdldHRpbmcgd2VhbHRoIGlzIG9mIGFsbCBmb3JtcyB0aGUgbW9zdCBjb250cmFyeSB0byBuYXR1cmUuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzaW5jZSB3ZSBoYXZlIGFkZXF1YXRlbHkKCQkJCQlkZWZpbmVkIHRoZSBzY2llbnRpZmljIHNpZGUgb2YgdGhlIHN1YmplY3QsIHdlIG91Z2h0IHRvIGRpc2N1c3MgaXQgZnJvbSB0aGUKCQkJCQlwb2ludCBvZiB2aWV3IG9mIHByYWN0aWNlOyBhbHRob3VnaCwgd2hlcmVhcyB0aGUgdGhlb3J5IG9mIHN1Y2ggbWF0dGVycyBpcyBhCgkJCQkJbGliZXJhbCBzdHVkeSwgdGhlIHByYWN0aWNhbCBwdXJzdWl0IG9mIHRoZW0gaXMgbmFycm93aW5nLiBUaGUgcHJhY3RpY2FsbHkKCQkJCQl1c2VmdWwgYnJhbmNoZXMgb2YgdGhlIGFydCBvZiB3ZWFsdGgtZ2V0dGluZyBhcmUgZmlyc3QsIGFuIGV4cGVydCBrbm93bGVkZ2Ugb2YKCQkJCQlzdG9jaywgd2hhdCBicmVlZHMgYXJlIG1vc3QgcHJvZml0YWJsZSBhbmQgaW4gd2hhdCBsb2NhbGl0aWVzIGFuZCB1bmRlciB3aGF0CgkJCQkJY29uZGl0aW9ucywgZm9yIGluc3RhbmNlIHdoYXQgcGFydGljdWxhciBzdG9jayBpbiBob3JzZXMgb3IgY2F0dGxlIG9yIHNoZWVwLCBhbmQKCQkJCQlzaW1pbGFybHkgb2YgdGhlIG90aGVyIGFuaW1hbHMgYWxzbyDvvIhmb3IgdGhlIGZhcm1lciBtdXN0IGJlIGFuIGV4cGVydAoJCQkJCWFzIHRvIHdoaWNoIG9mIHRoZXNlIGFuaW1hbHMgYXJlIG1vc3QgcHJvZml0YWJsZSBjb21wYXJlZCB3aXRoIG9uZSBhbm90aGVyLCBhbmQKCQkJCQlhbHNvIGFzIHRvIHdoYXQgYnJlZWRzIGFyZSBtb3N0IHByb2ZpdGFibGUgb24gd2hhdCBzb3J0cyBvZiBsYW5kLCBzaW5jZQoJCQkJCWRpZmZlcmVudCBicmVlZHMgZmxvdXJpc2ggaW4gZGlmZmVyZW50IHBsYWNlc++8iTsgc2Vjb25kbHksIHRoZSBzdWJqZWN0CgkJCQkJb2YgYWdyaWN1bHR1cmUsIGFuZCB0aGlzIGFnYWluIGlzIGRpdmlkZWQgaW50byBjb3JuLWdyb3dpbmcgYW5kIGZydWl0LWZhcm1pbmc7CgkJCQkJYWxzbyBiZWUta2VlcGluZywgYW5kIHRoZSBicmVlZGluZyBvZiB0aGUgb3RoZXIgY3JlYXR1cmVzIGZpbm5lZCBhbmQKCQkJCQkJZmVhdGhlcmVkPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz53aGljaCBjYW4gYmUgdXNlZCB0bwoJCQkJCWZ1cm5pc2ggc3VwcGxpZXMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXNlIHRoZW4gYXJlIHRoZQoJCQkJCWJyYW5jaGVzIGFuZCBwcmltYXJ5IHBhcnRzIG9mIHdlYWx0aC1nZXR0aW5nIGluIHRoZSBtb3N0IHByb3BlciBzZW5zZS4gT2YgdGhlCgkJCQkJa2luZCB0aGF0IGRlYWxzIHdpdGggZXhjaGFuZ2UsIHRoZSBsYXJnZXN0IGJyYW5jaCBpcyBjb21tZXJjZSDvvIh3aGljaAoJCQkJCWhhcyB0aHJlZSBkZXBhcnRtZW50cywgc2hpcC1vd25pbmcsIHRyYW5zcG9ydCBhbmQgbWFya2V0aW5nOiB0aGVzZSBkZXBhcnRtZW50cwoJCQkJCWRpZmZlciBmcm9tIGVhY2ggb3RoZXIgaW4gdGhlIGZhY3QgdGhhdCBzb21lIGFyZSBzYWZlciBhbmQgb3RoZXJzIGNhcnJ5IGxhcmdlcgoJCQkJCXByb2ZpdHPvvIk7IHRoZSBzZWNvbmQgYnJhbmNoIGlzIG1vbmV5LWxlbmRpbmcsIGFuZCB0aGUgdGhpcmQgbGFib3IgZm9yCgkJCQkJaGlyZSwgb25lIGRlcGFydG1lbnQgb2Ygd2hpY2ggaXMgdGhhdCBvZiB0aGUgbWVjaGFuaWM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxmb3JlaWduIGxhbmc9ImdyZWVrIj7OsuG9sc69zrHPhc+Dzr/PgjwvZm9yZWlnbj7vvIhzYWlkIHRvIGJlCgkJCQkJCWZyb20gPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs6yzrHhv6bOvc6/z4I8L2ZvcmVpZ24+4oCYZnVybmFjZSzigJkKCQkJCQkJCTxmb3JlaWduIGxhbmc9ImdyZWVrIj7OseG9lM+JPC9mb3JlaWduPuKAmHRvCgkJCQkJCWRyeeKAme+8iSwg4oCYYXJ0aXNhbuKAmSDvvIhyYW5nZWQKCQkJCQkJd2l0aCBmYXJtZXJzLCB0cmFkZXJzLCBhbmQgbGFib3JlcnMsIGFzIGZvcm1pbmcgdGhlIGNvbW1vbiBwZW9wbGUgMTMyMWEKCQkJCQkJNu+8iTsgaXQgYWNxdWlyZXMgdGhlIHNlbnNlcyBvZiDigJhjcmFtcGVkIGluIGJvZHnigJkKCQkJCQkJ77yIMTM0MWEgN++8iSBhbmQg4oCYdnVsZ2FyIGluIHRhc3Rl4oCZCgkJCQkJCe+8iDEzMzdiIDjvvIkuPC9ub3RlPiBhcnRzIGFuZCB0aGUgb3RoZXIgdGhhdCBvZiB1bnNraWxsZWQKCQkJCQlsYWJvcmVycyB3aG8gYXJlIHVzZWZ1bCBvbmx5IGZvciBib2RpbHkgc2VydmljZS4gQW5kIHRoZXJlIGlzIGEgdGhpcmQgZm9ybSBvZgoJCQkJCXdlYWx0aC1nZXR0aW5nIHRoYXQgbGllcyBiZXR3ZWVuIHRoZSBsYXR0ZXIgYW5kIHRoZSBvbmUgcGxhY2VkIGZpcnN0LCBzaW5jZSBpdAoJCQkJCXBvc3Nlc3NlcyBtZWRpYXRlIGFuIGVsZW1lbnQgYm90aCBvZiBuYXR1cmFsIHdlYWx0aC1nZXR0aW5nIGFuZCBvZiB0aGUgc29ydCB0aGF0CgkJCQkJZW1wbG95cyBleGNoYW5nZTsgaXQgZGVhbHMgd2l0aCBhbGwgdGhlIGNvbW1vZGl0aWVzIHRoYXQgYXJlIG9idGFpbmVkIGZyb20gdGhlCgkJCQkJZWFydGggYW5kIGZyb20gdGhvc2UgZnJ1aXRsZXNzIGJ1dCB1c2VmdWwgdGhpbmdzIHRoYXQgY29tZSBmcm9tIHRoZQoJCQkJCWVhcnRo4oCUZXhhbXBsZXMgYXJlIHRoZSBmZWxsaW5nIG9mIHRpbWJlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+YSB2ZXJ5IHByb2JhYmxlIHZhcmlhbnQgZ2l2ZXMg4oCYdGhlIHF1YXJyeWluZyBvZgoJCQkJCQlzdG9uZS7igJk8L25vdGU+IGFuZCBhbGwgc29ydHMgb2YgbWluaW5nOyBhbmQgb2YgbWluaW5nIGl0c2VsZiB0aGVyZQoJCQkJCWFyZSBtYW55IGNsYXNzZXMsIHNpbmNlIHRoZXJlIGFyZSBtYW55IHNvcnRzIG9mIG1ldGFscyBvYnRhaW5lZCBvdXQgb2YgdGhlCgkJCQkJZWFydGguIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SW4gdGhlIG1zcy4gdGhpcyBzZW50ZW5jZSBmb2xsb3dzIHRoZSBuZXh0IG9uZS48L25vdGU+IG1vc3QKCQkJCQlzY2llbnRpZmljIG9mIHRoZXNlIGluZHVzdHJpZXMgYXJlIHRob3NlIHdoaWNoIGludm9sdmUgdGhlIHNtYWxsZXN0IGVsZW1lbnQgb2YKCQkJCQljaGFuY2UsIHRoZSBtb3N0IG1lY2hhbmljIHRob3NlIGluIHdoaWNoIHRoZSBvcGVyYXRpdmVzIHVuZGVyZ28gdGhlIGdyZWF0ZXN0CgkJCQkJYW1vdW50IG9mIGJvZGlseSBkZWdyYWRhdGlvbiwgdGhlIG1vc3Qgc2VydmlsZSB0aG9zZSBpbiB3aGljaCB0aGUgbW9zdCB1c2VzIGFyZQoJCQkJCW1hZGUgb2YgdGhlIGJvZHksIGFuZCB0aGUgbW9zdCBpZ25vYmxlIHRob3NlIGluIHdoaWNoIHRoZXJlIGlzIHRoZSBsZWFzdAoJCQkJCXJlcXVpcmVtZW50IG9mIHZpcnR1ZSBhcyBhbiBhY2Nlc3NvcnkuIEJ1dCB3aGlsZSB3ZSBoYXZlIGV2ZW4gbm93IGdpdmVuIGEKCQkJCQlnZW5lcmFsIGRlc2NyaXB0aW9uIG9mIHRoZXNlIHZhcmlvdXMgYnJhbmNoZXMsIHlldCBhIGRldGFpbGVkIGFuZCBwYXJ0aWN1bGFyCgkJCQkJYWNjb3VudCBvZiB0aGVtLCB0aG91Z2ggdXNlZnVsIGZvciB0aGUgcHJhY3RpY2Ugb2YgdGhlIGluZHVzdHJpZXMsIHdvdWxkIGJlCgkJCQkJaWxsaWJlcmFsIGFzIGEgc3ViamVjdCBvZiBwcm9sb25nZWQgc3R1ZHkuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXJlIGFyZSBib29rcyBvbiB0aGVzZSBzdWJqZWN0cyBieSBjZXJ0YWluIGF1dGhvcnMsIGZvcgoJCQkJCWV4YW1wbGUgQ2hhcmV0aWRlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3RoZXJ3aXNlIHVua25vd24uPC9ub3RlPgoJCQkJCW9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGFyb3MgQ2l0eSIga2V5PSJwZXJzZXVzLFBhcm9zIENpdHkiPlBhcm9zPC9wbGFjZU5hbWU+CgkJCQkJPG1pbGVzdG9uZSBuPSIxMjU5YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+YW5kIEFwb2xsb2RvcnVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BbHNvIG1lbnRpb25lZCBieSBWYXJybyBhbmQKCQkJCQkJUGxpbnkuPC9ub3RlPiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTE3MyIga2V5PSJ0Z24sNzAxMTE3MyI+TGVtbm9zPC9wbGFjZU5hbWU+IGhhdmUKCQkJCQl3cml0dGVuIGFib3V0IGJvdGggYWdyaWN1bHR1cmUgYW5kIGZydWl0LWZhcm1pbmcsIGFuZCBzaW1pbGFybHkgb3RoZXJzIGFsc28gb24KCQkJCQlvdGhlciB0b3BpY3MsIHNvIHRoZXNlIHN1YmplY3RzIG1heSBiZSBzdHVkaWVkIGZyb20gdGhlc2UgYXV0aG9ycyBieSBhbnlib2R5CgkJCQkJY29uY2VybmVkIHRvIGRvIHNvOyBidXQgaW4gYWRkaXRpb24gYSBjb2xsZWN0aW9uIG91Z2h0IGFsc28gdG8gYmUgbWFkZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIGF1dGhvciBvZiB0aGUgU2Vjb25kIEJvb2sgb2YgdGhlCgkJCQkJCXBzZXVkby1BcmlzdG90ZWxpYW4gPHRpdGxlPk9lY29ub21pY2E8L3RpdGxlPiBzZWVtcyB0byBoYXZlIHRha2VuIHRoZQoJCQkJCQloaW50Ljwvbm90ZT4gb2YgdGhlIHNjYXR0ZXJlZCBhY2NvdW50cyBvZiBtZXRob2RzIHRoYXQgaGF2ZSBicm91Z2h0IHN1Y2Nlc3MKCQkJCQlpbiBidXNpbmVzcyB0byBjZXJ0YWluIGluZGl2aWR1YWxzLiBBbGwgdGhlc2UgbWV0aG9kcyBhcmUgc2VydmljZWFibGUgZm9yIHRob3NlCgkJCQkJd2hvIHZhbHVlIHdlYWx0aC1nZXR0aW5nLCA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5mb3IKCQkJCQlleGFtcGxlIHRoZSBwbGFuIG9mIFRoYWxlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIGZvdW5kZXIgb2YKCQkJCQkJR3JlZWsgcGhpbG9zb3BoeSBhbmQgbWF0aGVtYXRpY3MsIGFuZCBvbmUgb2YgdGhlIFNldmVuIFNhZ2VzLCA2dGgtNXRoIGNlbnQuCgkJCQkJCUIuQy48L25vdGU+IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWlsZXR1cyIga2V5PSJwZXJzZXVzLE1pbGV0dXMiPk1pbGV0dXM8L3BsYWNlTmFtZT4sIHdoaWNoIGlzIGEKCQkJCQlkZXZpY2UgZm9yIHRoZSBidXNpbmVzcyBvZiBnZXR0aW5nIHdlYWx0aCwgYnV0IHdoaWNoLCB0aG91Z2ggaXQgaXMgYXR0cmlidXRlZCB0bwoJCQkJCWhpbSBiZWNhdXNlIG9mIGhpcyB3aXNkb20sIGlzIHJlYWxseSBvZiB1bml2ZXJzYWwgYXBwbGljYXRpb24uIFRoYWxlcywgc28gdGhlCgkJCQkJc3RvcnkgZ29lcywgYmVjYXVzZSBvZiBoaXMgcG92ZXJ0eSB3YXMgdGF1bnRlZCB3aXRoIHRoZSB1c2VsZXNzbmVzcyBvZgoJCQkJCXBoaWxvc29waHk7IGJ1dCBmcm9tIGhpcyBrbm93bGVkZ2Ugb2YgYXN0cm9ub215IGhlIGhhZCBvYnNlcnZlZCB3aGlsZSBpdCB3YXMKCQkJCQlzdGlsbCB3aW50ZXIgdGhhdCB0aGVyZSB3YXMgZ29pbmcgdG8gYmUgYSBsYXJnZSBjcm9wIG9mIG9saXZlcywgc28gaGUgcmFpc2VkIGEKCQkJCQlzbWFsbCBzdW0gb2YgbW9uZXkgYW5kIHBhaWQgcm91bmQgZGVwb3NpdHMgZm9yIHRoZSB3aG9sZSBvZiB0aGUgb2xpdmUtcHJlc3NlcyBpbgoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1pbGV0dXMiIGtleT0icGVyc2V1cyxNaWxldHVzIj5NaWxldHVzPC9wbGFjZU5hbWU+IGFuZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENoaW9zIENpdHkiIGtleT0icGVyc2V1cyxDaGlvcyBDaXR5Ij5DaGlvczwvcGxhY2VOYW1lPiwgd2hpY2ggaGUgaGlyZWQgYXQgYSBsb3cgcmVudCBhcyBub2JvZHkKCQkJCQl3YXMgcnVubmluZyBoaW0gdXA7IGFuZCB3aGVuIHRoZSBzZWFzb24gYXJyaXZlZCwgdGhlcmUgd2FzIGEgc3VkZGVuIGRlbWFuZCBmb3IgYQoJCQkJCW51bWJlciBvZiBwcmVzc2VzIGF0IHRoZSBzYW1lIHRpbWUsIGFuZCBieSBsZXR0aW5nIHRoZW0gb3V0IG9uIHdoYXQgdGVybXMgaGUKCQkJCQlsaWtlZCBoZSByZWFsaXplZCBhIGxhcmdlIHN1bSBvZiBtb25leSwgc28gcHJvdmluZyB0aGF0IGl0IGlzIGVhc3kgZm9yCgkJCQkJcGhpbG9zb3BoZXJzIHRvIGJlIHJpY2ggaWYgdGhleSBjaG9vc2UsIGJ1dCB0aGlzIGlzIG5vdCB3aGF0IHRoZXkgY2FyZSBhYm91dC4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iNC42IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhhbGVzIHRoZW4gaXMgcmVwb3J0ZWQgdG8gaGF2ZQoJCQkJCXRodXMgZGlzcGxheWVkIGhpcyB3aXNkb20sIGJ1dCBhczxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YQoJCQkJCW1hdHRlciBvZiBmYWN0IHRoaXMgZGV2aWNlIG9mIHRha2luZyBhbiBvcHBvcnR1bml0eSB0byBzZWN1cmUgYSBtb25vcG9seSBpcyBhCgkJCQkJdW5pdmVyc2FsIHByaW5jaXBsZSBvZiBidXNpbmVzczsgaGVuY2UgZXZlbiBzb21lIHN0YXRlcyBoYXZlIHJlY291cnNlIHRvIHRoaXMKCQkJCQlwbGFuIGFzIGEgbWV0aG9kIG9mIHJhaXNpbmcgcmV2ZW51ZSB3aGVuIHNob3J0IG9mIGZ1bmRzOiB0aGV5IGludHJvZHVjZSBhCgkJCQkJbW9ub3BvbHkgb2YgbWFya2V0YWJsZSBnb29kcy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNC43IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmUKCQkJCQl3YXMgYSBtYW4gaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDMxMjIiIGtleT0idGduLDcwMDMxMjIiPlNpY2lseTwvcGxhY2VOYW1lPiB3aG8gdXNlZCBhIHN1bSBvZgoJCQkJCW1vbmV5IGRlcG9zaXRlZCB3aXRoIGhpbSB0byBidXkgdXAgYWxsIHRoZSBpcm9uIGZyb20gdGhlIGlyb24gbWluZXMsIGFuZAoJCQkJCWFmdGVyd2FyZHMgd2hlbiB0aGUgZGVhbGVycyBjYW1lIGZyb20gdGhlIHRyYWRpbmctY2VudGVycyBoZSB3YXMgdGhlIG9ubHkKCQkJCQlzZWxsZXIsIHRob3VnaCBoZSBkaWQgbm90IGdyZWF0bHkgcmFpc2UgdGhlIHByaWNlLCBidXQgYWxsIHRoZSBzYW1lIGhlIG1hZGUgYQoJCQkJCXByb2ZpdCBvZiBhIGh1bmRyZWQgdGFsZW50czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHRhbGVudCB3YXMKCQkJCQkJYWJvdXQgMjQwIHBvdW5kcy48L25vdGU+IG9uIGhpcyBjYXBpdGFsIG9mIGZpZnR5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5XaGVuIERpb255c2l1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+RGlvbnlzaXVzIHRoZSBlbGRlciwgdHlyYW50IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3lyYWN1c2UiIGtleT0icGVyc2V1cyxTeXJhY3VzZSI+U3lyYWN1c2U8L3BsYWNlTmFtZT4KCQkJCQkJPGRhdGVSYW5nZSBhdXRobmFtZT0iLTQwNS8tMzY3IiBmcm9tPSItNDA1IiB0bz0iLTM2NyI+NDA1PC9kYXRlUmFuZ2U+LTM2NyBCLkMuPC9ub3RlPiBjYW1lIHRvCgkJCQkJa25vdyBvZiBpdCBoZSBvcmRlcmVkIHRoZSBtYW4gdG8gdGFrZSBoaXMgbW9uZXkgd2l0aCBoaW0gYnV0IGNsZWFyIG91dCBvZgoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5cmFjdXNlIiBrZXk9InBlcnNldXMsU3lyYWN1c2UiPlN5cmFjdXNlPC9wbGFjZU5hbWU+IG9uIHRoZSBzcG90LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Y2YuIFRodWN5ZGlkZXMgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs6/4byxIM604oCZCgkJCQkJCQnOv+G9kM664b2zz4TOuSDhvJTOvM61zrnOvc6xzr0g4byAzrvOu+G9sCAuIC4gLjwvZm9yZWlnbj48L25vdGU+IHNpbmNlIGhlIHdhcyBpbnZlbnRpbmcKCQkJCQltZWFucyBvZiBwcm9maXQgZGV0cmltZW50YWwgdG8gdGhlIHR5cmFudCdzIG93biBhZmZhaXJzLiBZZXQgcmVhbGx5IHRoaXMgZGV2aWNlCgkJCQkJaXMgdGhlIHNhbWUgYXMgdGhlIGRpc2NvdmVyeSBvZiBUaGFsZXMsIGZvciBib3RoIG1lbiBhbGlrZSBjb250cml2ZWQgdG8gc2VjdXJlCgkJCQkJdGhlbXNlbHZlcyBhIG1vbm9wb2x5LiBBbiBhY3F1YWludGFuY2Ugd2l0aCB0aGVzZSBkZXZpY2VzIGlzIGFsc28gc2VydmljZWFibGUKCQkJCQlmb3Igc3RhdGVzbWVuLCBmb3IgbWFueSBzdGF0ZXMgbmVlZCBmaW5hbmNpYWwgYWlkIGFuZCBtb2RlcyBvZiByZXZlbnVlIGxpa2UKCQkJCQl0aG9zZSBkZXNjcmliZWQsIGp1c3QgYXMgYSBob3VzZWhvbGQgbWF5LCBidXQgaW4gZ3JlYXRlciBkZWdyZWU7IGhlbmNlIHNvbWUKCQkJCQlzdGF0ZXNtZW4gZXZlbiBkZXZvdGUgdGhlaXIgcG9saXRpY2FsIGFjdGl2aXR5IGV4Y2x1c2l2ZWx5IHRvIGZpbmFuY2UuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzaW5jZSwgYXMgd2Ugc2F3LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+MiBpbml0Ljwvbm90ZT4gdGhlIHNjaWVuY2Ugb2YgaG91c2Vob2xkCgkJCQkJbWFuYWdlbWVudCBoYXMgdGhyZWUgZGl2aXNpb25zLCBvbmUgdGhlIHJlbGF0aW9uIG9mIG1hc3RlciB0byBzbGF2ZSwgb2Ygd2hpY2ggd2UKCQkJCQloYXZlIHNwb2tlbiBiZWZvcmUsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4zIGZpbi4sIDQuPC9ub3RlPiBvbmUgdGhlCgkJCQkJcGF0ZXJuYWwgcmVsYXRpb24sIGFuZCB0aGUgdGhpcmQgdGhlIGNvbmp1Z2FsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgY29uc3RydWN0aW9uIG9mIHRoZSBzZW50ZW5jZSBpcyBpbnRlcnJ1cHRlZCwgYW5kIG5ldmVyCgkJCQkJCWNvbXBsZXRlZC48L25vdGU+4oCUZm9yIGl0IGlzIGEgcGFydCBvZiB0aGUgaG91c2Vob2xkIHNjaWVuY2UgdG8KCQkJCQlydWxlIG92ZXIgd2lmZSBhbmQgY2hpbGRyZW4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+77yIb3ZlciBib3RoIGFzIG92ZXIgZnJlZW1lbiwgeWV0IG5vdCB3aXRoIHRoZSBzYW1lIG1vZGUgb2YgZ292ZXJubWVudCwKCQkJCQlidXQgb3ZlciB0aGUgd2lmZSB0byBleGVyY2lzZSByZXB1YmxpY2FuIGdvdmVybm1lbnQgYW5kIG92ZXIgdGhlIGNoaWxkcmVuCgkJCQkJbW9uYXJjaGljYWzvvIk7IDxtaWxlc3RvbmUgbj0iMTI1OWIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGUgbWFsZSBpcyBieSBuYXR1cmUgYmV0dGVyIGZpdHRlZCB0byBjb21tYW5kCgkJCQkJdGhhbiB0aGUgZmVtYWxlIO+8iGV4Y2VwdCBpbiBzb21lIGNhc2VzIHdoZXJlIHRoZWlyIHVuaW9uIGhhcyBiZWVuIGZvcm1lZAoJCQkJCWNvbnRyYXJ5IHRvIG5hdHVyZe+8iSBhbmQgdGhlIG9sZGVyIGFuZCBmdWxseSBkZXZlbG9wZWQgcGVyc29uIHRoYW4gdGhlCgkJCQkJeW91bmdlciBhbmQgaW1tYXR1cmUuIEl0IGlzIHRydWUgdGhhdCBpbiBtb3N0IGNhc2VzIG9mIHJlcHVibGljYW4gZ292ZXJubWVudCB0aGUKCQkJCQlydWxlciBhbmQgdGhlIHJ1bGVkIGludGVyY2hhbmdlIGluIHR1cm4g77yIZm9yIHRoZXkgdGVuZCB0byBiZSBvbiBpbgoJCQkJCWVxdWFsIGxldmVsIGluIHRoZWlyIG5hdHVyZSBhbmQgdG8gaGF2ZSBubyBkaWZmZXJlbmNlIGF0IGFsbO+8iSwgYWx0aG91Z2gKCQkJCQluZXZlcnRoZWxlc3MgZHVyaW5nIHRoZSBwZXJpb2Qgd2hlbiBvbmUgaXMgcnVsZXIgYW5kIHRoZSBvdGhlciBydWxlZCB0aGV5IHNlZWsKCQkJCQl0byBoYXZlIGEgZGlzdGluY3Rpb24gYnkgbWVhbnMgb2YgaW5zaWduaWEgYW5kIHRpdGxlcyBhbmQgaG9ub3JzLCBqdXN0IGFzIEFtYXNpcwoJCQkJCW1hZGUgaGlzIHNwZWVjaCBhYm91dCB0aGUgZm9vdC1iYXRoPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iSGR0LiAxLjE3MiIgdmFsaWQ9InllcyI+SGR0LiAxLjE3MjwvYmlibD4uIEFtYXNpcyBraW5nIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2ODMzIiBrZXk9InRnbiw3MDE2ODMzIj5FZ3lwdDwvcGxhY2VOYW1lPiB3YXMgZGVzcGlzZWQgYnkgaGlzIHN1YmplY3RzIGZvciBoaXMKCQkJCQkJbG93IGJpcnRoLCBzbyBoZSBoYWQgYSBzdGF0dWUgbWFkZSBvdXQgb2YgYSBnb2xkIGZvb3QtYmF0aCBhbmQgc2V0IGl0IHVwIGZvcgoJCQkJCQl0aGVtIHRvIHdvcnNoaXAsIGFmdGVyd2FyZHMgZXhwbGFpbmluZyB0byB0aGVtIGl0cyBsb3dseSBvcmlnaW4uPC9ub3RlPjsgYnV0CgkJCQkJdGhlIG1hbGUgc3RhbmRzIGluIHRoaXMgcmVsYXRpb25zaGlwIHRvIHRoZSBmZW1hbGUgY29udGludW91c2x5LiBUaGUgcnVsZSBvZiB0aGUKCQkJCQlmYXRoZXIgb3ZlciB0aGUgY2hpbGRyZW4gb24gdGhlIG90aGVyIGhhbmQgaXMgdGhhdCBvZiBhIGtpbmc7IGZvciB0aGUgbWFsZQoJCQkJCXBhcmVudCBpcyB0aGUgcnVsZXIgaW4gdmlydHVlIGJvdGggb2YgYWZmZWN0aW9uIGFuZCBvZiBzZW5pb3JpdHksIHdoaWNoIGlzCgkJCQkJY2hhcmFjdGVyaXN0aWMgb2Ygcm95YWwgZ292ZXJubWVudCDvvIhhbmQgdGhlcmVmb3JlIEhvbWVyPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gMS41NDQiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuCgkJCQkJCTEuNTQ0PC9iaWJsPi48L25vdGU+IGZpbmVseSBkZXNpZ25hdGVkIFpldXMgYnkgdGhlIHdvcmRzIDxxdW90ZSB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIG1ldD0iZGFjdHlsaWMiPmZhdGhlciBvZiBtZW4gYW5kIGdvZHMsPC9sPgoJCQkJCTwvcXVvdGU+IGFzIHRoZSBraW5nIG9mIHRoZW0gYWxs77yJLiBGb3IgdGhvdWdoIGluIG5hdHVyZSB0aGUga2luZyBtdXN0CgkJCQkJYmUgc3VwZXJpb3IsIGluIHJhY2UgaGUgc2hvdWxkIGJlIHRoZSBzYW1lIGFzIGhpcyBzdWJqZWN0cywgYW5kIHRoaXMgaXMgdGhlCgkJCQkJcG9zaXRpb24gb2YgdGhlIGVsZGVyIGluIHJlbGF0aW9uIHRvIHRoZSB5b3VuZ2VyIGFuZCBvZiB0aGUgZmF0aGVyIGluIHJlbGF0aW9uCgkJCQkJdG8gdGhlIGNoaWxkLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JdCBpcyBjbGVhciB0aGVuIHRoYXQKCQkJCQlob3VzZWhvbGQgbWFuYWdlbWVudCB0YWtlcyBtb3JlIGludGVyZXN0IGluIHRoZSBodW1hbiBtZW1iZXJzIG9mIHRoZSBob3VzZWhvbGQKCQkJCQl0aGFuIGluIGl0cyBpbmFuaW1hdGUgcHJvcGVydHksIGFuZDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+aW4KCQkJCQl0aGUgZXhjZWxsZW5jZSBvZiB0aGVzZSB0aGFuIGluIHRoYXQgb2YgaXRzIHByb3BlcnR5LCB3aGljaCB3ZSBzdHlsZSByaWNoZXMsIGFuZAoJCQkJCW1vcmUgaW4gdGhhdCBvZiBpdHMgZnJlZSBtZW1iZXJzIHRoYW4gaW4gdGhhdCBvZiBzbGF2ZXMuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5GaXJzdCBvZiBhbGwgdGhlbiBhcyB0byBzbGF2ZXMgdGhlIGRpZmZpY3VsdHkgbWlnaHQgYmUgcmFpc2VkLAoJCQkJCWRvZXMgYSBzbGF2ZSBwb3NzZXNzIGFueSBvdGhlciBleGNlbGxlbmNlLCBiZXNpZGVzIGhpcyBtZXJpdHMgYXMgYSB0b29sIGFuZCBhCgkJCQkJc2VydmFudCwgbW9yZSB2YWx1YWJsZSB0aGFuIHRoZXNlLCBmb3IgaW5zdGFuY2UgdGVtcGVyYW5jZSwgaGF2ZSB0aGUgY291cmFnZSwKCQkJCQlqdXN0aWNlIGFuZCBhbnkgb2YgdGhlIG90aGVyIG1vcmFsIHZpcnR1ZXMsIG9yIGhhcyBoZSBubyBleGNlbGxlbmNlIGJlc2lkZSBoaXMKCQkJCQlib2RpbHkgc2VydmljZT8gRm9yIGVpdGhlciB3YXkgdGhlcmUgaXMgZGlmZmljdWx0eTsgaWYgc2xhdmVzIGRvIHBvc3Nlc3MgbW9yYWwKCQkJCQl2aXJ0dWUsIHdoZXJlaW4gd2lsbCB0aGV5IGRpZmZlciBmcm9tIGZyZWVtZW4/IG9yIGlmIHRoZXkgZG8gbm90LCB0aGlzIGlzCgkJCQkJc3RyYW5nZSwgYXMgdGhleSBhcmUgaHVtYW4gYmVpbmdzIGFuZCBwYXJ0aWNpcGF0ZSBpbiByZWFzb24uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBuZWFybHkgdGhlIHNhbWUgaXMgdGhlIHF1ZXN0aW9uIGFsc28gcmFpc2VkCgkJCQkJYWJvdXQgdGhlIHdvbWFuIGFuZCB0aGUgY2hpbGQ6IGhhdmUgdGhleSB0b28gdmlydHVlcywgYW5kIG91Z2h0IGEgd29tYW4gdG8gYmUKCQkJCQl0ZW1wZXJhdGUsIGJyYXZlIGFuZCBqdXN0LCBhbmQgY2FuIGEgY2hpbGQgYmUgaW50ZW1wZXJhdGUgb3IgdGVtcGVyYXRlLCBvciBub3Q/CgkJCQkJVGhpcyBwb2ludCB0aGVyZWZvcmUgcmVxdWlyZXMgZ2VuZXJhbCBjb25zaWRlcmF0aW9uIGluIHJlbGF0aW9uIHRvIG5hdHVyYWwgcnVsZXIKCQkJCQlhbmQgc3ViamVjdDogaXMgdmlydHVlIHRoZSBzYW1lIGZvciBydWxlciBhbmQgcnVsZWQsIG9yIGRpZmZlcmVudD8gSWYgaXQgaXMKCQkJCQlwcm9wZXIgZm9yIGJvdGggdG8gcGFydGFrZSBpbiBub2JpbGl0eSBvZiBjaGFyYWN0ZXIsIGhvdyBjb3VsZCBpdCBiZSBwcm9wZXIgZm9yCgkJCQkJdGhlIG9uZSB0byBydWxlIGFuZCB0aGUgb3RoZXIgdG8gYmUgcnVsZWQgdW5jb25kaXRpb25hbGx5PyB3ZSBjYW5ub3Qgc2F5IHRoYXQKCQkJCQl0aGUgZGlmZmVyZW5jZSBpcyB0byBiZSBvbmUgb2YgZGVncmVlLCBmb3IgcnVsaW5nIGFuZCBiZWluZyBydWxlZCBkaWZmZXIgaW4KCQkJCQlraW5kLCBhbmQgZGlmZmVyZW5jZSBvZiBkZWdyZWUgaXMgbm90IGEgZGlmZmVyZW5jZSBpbiBraW5kIGF0IGFsbC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS41IiB1bml0PSJMb2ViIGNoYXAiIC8+V2hlcmVhcyBpZiBvbiB0aGUgY29udHJhcnkgaXQgaXMgcHJvcGVyIGZvcgoJCQkJCXRoZSBvbmUgdG8gaGF2ZSBtb3JhbCBub2JpbGl0eSBidXQgbm90IGZvciB0aGUgb3RoZXIsIHRoaXMgaXMgc3VycHJpc2luZy4gRm9yIGlmCgkJCQkJdGhlIHJ1bGVyIGlzIG5vdCB0ZW1wZXJhdGUgYW5kIGp1c3QsIGhvdyB3aWxsIGhlIHJ1bGUgd2VsbD8gQW5kIGlmIHRoZSBydWxlZCwKCQkJCQlob3cgd2lsbCBoZSBvYmV5IHdlbGw/IDxtaWxlc3RvbmUgbj0iMTI2MGEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPklmIGludGVtcGVyYXRlIGFuZCBjb3dhcmRseSBoZSB3aWxsIG5vdCBwZXJmb3JtIGFueQoJCQkJCW9mIHRoZSBkdXRpZXMgb2YgaGlzIHBvc2l0aW9uLiBJdCBpcyBldmlkZW50IHRoZXJlZm9yZSB0aGF0IGJvdGggbXVzdCBwb3NzZXNzCgkJCQkJdmlydHVlLCBidXQgdGhhdCB0aGVyZSBhcmUgZGlmZmVyZW5jZXMgaW4gdGhlaXIgdmlydHVlIO+8iGFzIGFsc28gdGhlcmUKCQkJCQlhcmUgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aG9zZSB3aG8gYXJlIGJ5IG5hdHVyZSBydWxlZO+8iS48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgY2xhdXNlIHNlZW1zIHRvIGhhdmUgYmVlbiBpbnRlcnBvbGF0ZWQ7CgkJCQkJCW9uZSBtcy4gaGFzIGEgbWFyZ2luYWwgY29ycmVjdGlvbiwg4oCYYnkgbmF0dXJlIHJ1bGVycyBhbmQKCQkJCQkJcnVsZWQu4oCZPC9ub3RlPiBBbmQgb2YgdGhpcyB3ZSBzdHJhaWdodHdheSBmaW5kIGFuIGluZGljYXRpb24gaW4KCQkJCQljb25uZWN0aW9uIHdpdGggdGhlIHNvdWw7IGZvciB0aGUgc291bCBieSBuYXR1cmUgY29udGFpbnMgYSBwYXJ0IHRoYXQgcnVsZXMgYW5kCgkJCQkJYSBwYXJ0IHRoYXQgaXMgcnVsZWQsIHRvIHdoaWNoIHdlIGFzc2lnbiBkaWZmZXJlbnQgdmlydHVlcywgdGhhdCBpcywgdGhlIHZpcnR1ZQoJCQkJCW9mIHRoZSByYXRpb25hbCBhbmQgdGhhdCBvZiB0aGUgaXJyYXRpb25hbC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS42IiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgY2xlYXIgdGhlbiB0aGF0IHRoZSBjYXNlIGlzIHRoZSBzYW1lIGFsc28gd2l0aCB0aGUKCQkJCQlvdGhlciBpbnN0YW5jZXMgb2YgcnVsZXIgYW5kIHJ1bGVkLiBIZW5jZSB0aGVyZSBhcmUgYnkgbmF0dXJlIHZhcmlvdXMgY2xhc3NlcyBvZgoJCQkJCXJ1bGVycyBhbmQgcnVsZWQuIEZvciB0aGUgZnJlZSBydWxlcyB0aGUgc2xhdmUsIHRoZSBtYWxlIHRoZSBmZW1hbGUsIGFuZCB0aGUgbWFuCgkJCQkJdGhlIGNoaWxkIGluIGEgZGlmZmVyZW50IHdheS4gQW5kIGFsbCBwb3NzZXNzIHRoZSB2YXJpb3VzIHBhcnRzIG9mIHRoZSBzb3VsLCBidXQKCQkJCQlwb3NzZXNzIHRoZW0gaW4gZGlmZmVyZW50IHdheXM7IGZvciB0aGUgc2xhdmUgaGFzIG5vdCBnb3QgdGhlIGRlbGliZXJhdGl2ZSBwYXJ0CgkJCQkJYXQgYWxsLCBhbmQgdGhlIGZlbWFsZSBoYXMgaXQsIGJ1dCB3aXRob3V0IGZ1bGwgYXV0aG9yaXR5LCB3aGlsZSB0aGUgY2hpbGQgaGFzCgkJCQkJaXQsIGJ1dCBpbiBhbiB1bmRldmVsb3BlZCBmb3JtLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5IZW5jZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SW4gdGhlIG1zcy4gdGhpcyBzZW50ZW5jZSBmb2xsb3dzCgkJCQkJCXRoZSBuZXh0IG9uZSwg4oCYV2UgbXVzdCBzdXBwb3Nl4oCUZnVuY3Rpb24s4oCZIGFuZAoJCQkJCQliZWdpbnMg4oCYSGVuY2UgdGhlIHJ1bGVyIG11c3QgcG9zc2VzcyA8ZW1waD5tb3JhbDwvZW1waD4KCQkJCQkJdmlydHVlLuKAmTwvbm90ZT4gdGhlIHJ1bGVyIG11c3QgcG9zc2VzcyBpbnRlbGxlY3R1YWwgdmlydHVlIGluCgkJCQkJY29tcGxldGVuZXNzIO+8iGZvciBhbnkgd29yaywgdGFrZW4gYWJzb2x1dGVseSwgYmVsb25ncyB0byB0aGUKCQkJCQltYXN0ZXItY3JhZnRzbWFuLCBhbmQgcmF0aW9uYWwgcHJpbmNpcGxlIGlzIGEgbWFzdGVyLWNyYWZ0c21hbu+8iTsgd2hpbGUKCQkJCQllYWNoIG9mIHRoZSBvdGhlciBwYXJ0aWVzIG11c3QgaGF2ZSB0aGF0IHNoYXJlIG9mIHRoaXMgdmlydHVlIHdoaWNoIGlzCgkJCQkJYXBwcm9wcmlhdGUgdG8gdGhlbS4gV2UgbXVzdCBzdXBwb3NlIHRoZXJlZm9yZSB0aGF0IHRoZSBzYW1lIG5lY2Vzc2FyaWx5IGhvbGRzCgkJCQkJZ29vZCBvZiB0aGUgbW9yYWwgdmlydHVlczogYWxsIG11c3QgcGFydGFrZSBvZiB0aGVtLCBidXQgbm90IGluIHRoZSBzYW1lIHdheSwKCQkJCQlidXQgaW4gc3VjaCBtZWFzdXJlIGFzIGlzIHByb3BlciB0byBlYWNoIGluIHJlbGF0aW9uIHRvIGhpcyBvd24KCQkJCQkJZnVuY3Rpb24uPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGVkPSJQIiBuPSI1LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5IZW5jZSBpdCBpcyBtYW5pZmVzdCB0aGF0IGFsbCB0aGUgcGVyc29ucyBtZW50aW9uZWQKCQkJCQloYXZlIGEgbW9yYWwgdmlydHVlIG9mIHRoZWlyIG93biwgYW5kIHRoYXQgdGhlIHRlbXBlcmFuY2Ugb2YgYSB3b21hbiBhbmQgdGhhdCBvZgoJCQkJCWEgbWFuIGFyZSBub3QgdGhlIHNhbWUsIG5vciB0aGVpciBjb3VyYWdlIGFuZCBqdXN0aWNlLCBhcyBTb2NyYXRlcyB0aG91Z2h0LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCTxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBNZW5vIDc0YiIgdmFsaWQ9InllcyI+UGxhdC4gTWVubyA3NGJmZi48L2JpYmw+CgkJCQkJPC9ub3RlPiBidXQgdGhlIG9uZSBpcyB0aGUgY291cmFnZSBvZiBjb21tYW5kLCBhbmQgdGhlIG90aGVyIHRoYXQgb2YKCQkJCQlzdWJvcmRpbmF0aW9uLCBhbmQgdGhlIGNhc2UgaXMgc2ltaWxhciB3aXRoIHRoZSBvdGhlciB2aXJ0dWVzLiBBbmQgdGhpcyBpcyBhbHNvCgkJCQkJY2xlYXIgd2hlbiB3ZSBleGFtaW5lIHRoZSBtYXR0ZXIgbW9yZSBpbiBkZXRhaWwsIGZvciBpdCBpcyBtaXNsZWFkaW5nIHRvIGdpdmUgYQoJCQkJCWdlbmVyYWwgZGVmaW5pdGlvbiBvZiB2aXJ0dWUsIGFzIHNvbWUgZG8sIHdobyBzYXkgdGhhdCB2aXJ0dWUgaXMgYmVpbmcgaW4gZ29vZAoJCQkJCWNvbmRpdGlvbiBhcyByZWdhcmRzIHRoZSBzb3VsIG9yIGFjdGluZyB1cHJpZ2h0bHkgb3IgdGhlIGxpa2U7IHRob3NlIHdobwoJCQkJCWVudW1lcmF0ZSB0aGUgdmlydHVlcyBvZiBkaWZmZXJlbnQgcGVyc29ucyBzZXBhcmF0ZWx5LCBhcyBHb3JnaWFzIGRvZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGluCgkJCQkJCQlQbGF0bywgPHRpdGxlPk1lbm88L3RpdGxlPiDvvIhzZWUgNyBhYm92Ze+8iSwKCQkJCQkJd2hlcmUgdGhpcyBzb3BoaXN0IGZpZ3VyZXMgYXMgYSBjaGFyYWN0ZXIgaW4gdGhlIGRpYWxvZ3VlOyBzZWUgYWxzbyAzLjEuOSwKCQkJCQkJbm90ZS48L25vdGU+IGFyZSBtdWNoIG1vcmUgY29ycmVjdCB0aGFuIHRob3NlIHdobyBkZWZpbmUgdmlydHVlIGluIHRoYXQgd2F5LgoJCQkJCUhlbmNlIHdlIG11c3QgaG9sZCB0aGF0IGFsbCBvZiB0aGVzZSBwZXJzb25zIGhhdmUgdGhlaXIgYXBwcm9wcmlhdGUgdmlydHVlcywgYXMKCQkJCQl0aGUgcG9ldCBzYWlkIG9mIHdvbWFuOiA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9ImlhbWJpYyI+U2lsZW5jZSBnaXZlcyBncmFjZSB0byB3b21hbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCQkJPGJpYmwgZGVmYXVsdD0iTk8iIG49IlNvcGguIEFqLiAyOTMiIHZhbGlkPSJ5ZXMiPlNvcGguIEFqLiAyOTM8L2JpYmw+CgkJCQkJCQk8L25vdGU+4oCUPC9sPgoJCQkJCTwvcXVvdGU+IHRob3VnaCB0aGF0IGlzIG5vdCB0aGUgY2FzZSBsaWtld2lzZSB3aXRoIGEgbWFuLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbHNvIHRoZSBjaGlsZCBpcyBub3QgY29tcGxldGVseSBkZXZlbG9wZWQsIHNvIHRoYXQKCQkJCQltYW5pZmVzdGx5IGhpcyB2aXJ0dWUgYWxzbyBpcyBub3QgcGVyc29uYWwgdG8gaGltc2VsZiwgYnV0IHJlbGF0aXZlIHRvIHRoZSBmdWxseQoJCQkJCWRldmVsb3BlZCBiZWluZywgdGhhdCBpcywgdGhlIHBlcnNvbiBpbiBhdXRob3JpdHkgb3ZlciBoaW0uIEFuZCBzaW1pbGFybHkgdGhlCgkJCQkJc2xhdmUncyB2aXJ0dWUgYWxzbyBpcyBpbiByZWxhdGlvbiB0byB0aGUgbWFzdGVyLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHdlIGxhaWQgaXQgZG93biB0aGF0IHRoZSBzbGF2ZSBpcyBzZXJ2aWNlYWJsZSBmb3IgdGhlIG1lcmUgbmVjZXNzYXJpZXMgb2YKCQkJCQlsaWZlLCBzbyB0aGF0IGNsZWFybHkgaGUgbmVlZHMgb25seSBhIHNtYWxsIGFtb3VudCBvZiB2aXJ0dWUsIGluIGZhY3QganVzdAoJCQkJCWVub3VnaCB0byBwcmV2ZW50IGhpbSBmcm9tIGZhaWxpbmcgaW4gaGlzIHRhc2tzIG93aW5nIHRvIGludGVtcGVyYW5jZSBhbmQKCQkJCQljb3dhcmRpY2UuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz7vvIhCdXQgdGhlCgkJCQkJcXVlc3Rpb24gbWlnaHQgYmUgcmFpc2VkLCBzdXBwb3NpbmcgdGhhdCB3aGF0IGhhcyBqdXN0IGJlZW4gc2FpZCBpcyB0cnVlLCB3aWxsCgkJCQkJYXJ0aXNhbnMgYWxzbyBuZWVkIHRvIGhhdmUgdmlydHVlPyBmb3IgdGhleSBmcmVxdWVudGx5IGZhbGwgc2hvcnQgaW4gdGhlaXIgdGFza3MKCQkJCQlvd2luZyB0byBpbnRlbXBlcmFuY2UuIE9yIGlzIHRoZWlyIGNhc2UgZW50aXJlbHkgZGlmZmVyZW50PyBGb3IgdGhlIHNsYXZlIGlzIGEKCQkJCQlwYXJ0bmVyIGluIGhpcyBtYXN0ZXIncyBsaWZlLCBidXQgdGhlIGFydGlzYW4gaXMgbW9yZSByZW1vdGUsIGFuZCBvbmx5IHNvIG11Y2gKCQkJCQlvZiB2aXJ0dWUgZmFsbHMgdG8gaGlzIHNoYXJlIGFzIG9mIHNsYXZlcnk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gaGlzIGV4Y2VsbGVuY2VzIGFzIGFuIGFydGlzYW4gYXJlIHRoZSBxdWFsaXRpZXMgb2YgYSBzdWJvcmRpbmF0ZQoJCQkJCQnvvIhoaXMgdmlydHVlcyBhcyBhIGh1bWFuIGJlaW5nLCBhcGFydCBmcm9tIGhpcyB0cmFkZSwgYXJlIG5vdAoJCQkJCQljb25zaWRlcmVk77yJLjwvbm90ZT7igJQgPG1pbGVzdG9uZSBuPSIxMjYwYiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+Zm9yIHRoZSBtZWNoYW5pYyBhcnRpc2FuIGlzCgkJCQkJdW5kZXIgYSBzb3J0IG9mIGxpbWl0ZWQgc2xhdmVyeSwgYW5kIHdoZXJlYXMgdGhlIHNsYXZlIGlzIG9uZSBvZiB0aGUgbmF0dXJhbAoJCQkJCWNsYXNzZXMsIG5vIHNob2VtYWtlciBvciBvdGhlciBjcmFmdHNtYW4gYmVsb25ncyB0byBoaXMgdHJhZGUgYnkKCQkJCQluYXR1cmUu77yJIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JdCBpcyBtYW5pZmVzdAoJCQkJCXRoZXJlZm9yZSB0aGF0IHRoZSBtYXN0ZXIgb3VnaHQgdG8gYmUgdGhlIGNhdXNlIHRvIHRoZSBzbGF2ZSBvZiB0aGUgdmlydHVlCgkJCQkJcHJvcGVyIHRvIGEgc2xhdmUsIGJ1dCBub3QgYXMgcG9zc2Vzc2luZyB0aGF0IGFydCBvZiBtYXN0ZXJzaGlwIHdoaWNoIHRlYWNoZXMgYQoJCQkJCXNsYXZlIGhpcyB0YXNrcy4gSGVuY2UgdGhvc2UgcGVyc29ucyBhcmUgbWlzdGFrZW4gd2hvIGRlcHJpdmUgdGhlIHNsYXZlIG9mCgkJCQkJcmVhc29uaW5nIGFuZCB0ZWxsIHVzIHRvIHVzZSBjb21tYW5kIG9ubHk7IGZvciBhZG1vbml0aW9uIGlzIG1vcmUgcHJvcGVybHkKCQkJCQllbXBsb3llZCB3aXRoIHNsYXZlcyB0aGFuIHdpdGggY2hpbGRyZW4uPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgb24KCQkJCQl0aGVzZSBzdWJqZWN0cyBsZXQgdXMgY29uY2x1ZGUgb3VyIGRlY2lzaW9ucyBpbiB0aGlzIG1hbm5lcjsgd2hpbGUgdGhlIHF1ZXN0aW9uCgkJCQkJb2YgdGhlIHZpcnR1ZSBzZXZlcmFsbHkgYmVsb25naW5nIHRvIG1hbiBhbmQgd29tYW4gYW5kIGNoaWxkcmVuIGFuZCBmYXRoZXIsIGFuZAoJCQkJCW9mIHRoZSByaWdodCBhbmQgd3JvbmcgbW9kZSBvZiBjb25kdWN0aW5nIHRoZWlyIG11dHVhbCBpbnRlcmNvdXJzZSBhbmQgdGhlCgkJCQkJcHJvcGVyIHdheSBvZiBwdXJzdWluZyB0aGUgZ29vZCBtb2RlIGFuZCBhdm9pZGluZyB0aGUgYmFkIG9uZSwgYXJlIG1hdHRlcnMgdGhhdAoJCQkJCWl0IHdpbGwgYmUgbmVjZXNzYXJ5IHRvIGZvbGxvdyB1cCBpbiB0aGUgcGFydCBvZiBvdXIgdHJlYXRpc2UgZGVhbGluZyB3aXRoIHRoZQoJCQkJCXZhcmlvdXMgZm9ybXMgb2YgY29uc3RpdHV0aW9uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QXMgYSBtYXR0ZXIgb2YKCQkJCQkJZmFjdCBpbiBCb29rcyA3LCA4IGRlYWxpbmcgd2l0aCB0aGUgYmVzdCBjb25zdGl0dXRpb24gdGhpcyBzdWJqZWN0IGlzIG5vdAoJCQkJCQlyZWFjaGVkLjwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIHNpbmNlIGV2ZXJ5IGhvdXNlaG9sZCBpcyBwYXJ0CgkJCQkJb2YgYSBzdGF0ZSwgYW5kIHRoZXNlIHJlbGF0aW9uc2hpcHMgYXJlIHBhcnQgb2YgdGhlIGhvdXNlaG9sZCwgYW5kIHRoZQoJCQkJCWV4Y2VsbGVuY2Ugb2YgdGhlIHBhcnQgbXVzdCBoYXZlIHJlZ2FyZCB0byB0aGF0IG9mIHRoZSB3aG9sZSwgaXQgaXMgbmVjZXNzYXJ5CgkJCQkJdGhhdCB0aGUgZWR1Y2F0aW9uIGJvdGggb2YgdGhlIGNoaWxkcmVuIGFuZCBvZiB0aGUgd29tZW4gc2hvdWxkIGJlIGNhcnJpZWQgb24KCQkJCQl3aXRoIGEgcmVnYXJkIHRvIHRoZSBmb3JtIG9mIHRoZSBjb25zdGl0dXRpb24sIGlmIGl0IG1ha2VzIGFueSBkaWZmZXJlbmNlIGFzCgkJCQkJcmVnYXJkcyB0aGUgZ29vZG5lc3Mgb2YgdGhlIHN0YXRlIGZvciB0aGUgY2hpbGRyZW4gYW5kIHRoZSB3b21lbiB0byBiZSBnb29kLiBBbmQKCQkJCQlpdCBtdXN0IG5lY2Vzc2FyaWx5IG1ha2UgYSBkaWZmZXJlbmNlOyBmb3IgdGhlIHdvbWVuIGFyZSBhIGhhbGYgb2YgdGhlIGZyZWUKCQkJCQlwb3B1bGF0aW9uLCBhbmQgdGhlIGNoaWxkcmVuPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5ncm93IHVwCgkJCQkJdG8gYmUgdGhlIHBhcnRuZXJzIGluIHRoZSBnb3Zlcm5tZW50IG9mIHRoZSBzdGF0ZS4gU28gdGhhdCBhcyB0aGVzZSBxdWVzdGlvbnMKCQkJCQloYXZlIGJlZW4gZGVjaWRlZCwgYW5kIHRob3NlIHRoYXQgcmVtYWluIG11c3QgYmUgZGlzY3Vzc2VkIGVsc2V3aGVyZSwgbGV0IHVzCgkJCQkJcmVsaW5xdWlzaCB0aGUgcHJlc2VudCBzdWJqZWN0cyBhcyBjb21wbGV0ZWQsIGFuZCBtYWtlIGEgZnJlc2ggc3RhcnQgaW4gb3VyCgkJCQkJZGlzY291cnNlLCBhbmQgZmlyc3QgbGV0IHVzIGNvbnNpZGVyIHRob3NlIHRoaW5rZXJzIHdobyBoYXZlIGFkdmFuY2VkIHZpZXdzCgkJCQkJYWJvdXQgdGhlIElkZWFsIFN0YXRlLjwvcD4KCQkJPC9kaXYxPgoJCQk8cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjUyYSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RXZlcnkgc3RhdGUgaXMgYXMgd2Ugc2VlIGEgc29ydCBvZiBwYXJ0bmVyc2hpcCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBHcmVlayB3b3JkIGhhZCBub3QgYWNxdWlyZWQgYSBzcGVjaWFsbHkgcG9saXRpY2FsCgkJCQkJCWNvbm5vdGF0aW9uIGFzIHRoZSBFbmdsaXNoIHdvcmQg4oCYY29tbXVuaXR54oCZIGhhcy48L25vdGU+CgkJCQkJYW5kIGV2ZXJ5IHBhcnRuZXJzaGlwIGlzIGZvcm1lZCB3aXRoIGEgdmlldyB0byBzb21lIGdvb2Qg77yIc2luY2UgYWxsIHRoZQoJCQkJCWFjdGlvbnMgb2YgYWxsIG1hbmtpbmQgYXJlIGRvbmUgd2l0aCBhIHZpZXcgdG8gd2hhdCB0aGV5IHRoaW5rIHRvIGJlCgkJCQkJZ29vZO+8iS4gSXQgaXMgdGhlcmVmb3JlIGV2aWRlbnQgdGhhdCwgd2hpbGUgYWxsIHBhcnRuZXJzaGlwcyBhaW0gYXQgc29tZQoJCQkJCWdvb2QgdGhlIHBhcnRuZXJzaGlwIHRoYXQgaXMgdGhlIG1vc3Qgc3VwcmVtZSBvZiBhbGwgYW5kIGluY2x1ZGVzIGFsbCB0aGUgb3RoZXJzCgkJCQkJZG9lcyBzbyBtb3N0IG9mIGFsbCwgYW5kIGFpbXMgYXQgdGhlIG1vc3Qgc3VwcmVtZSBvZiBhbGwgZ29vZHM7IGFuZCB0aGlzIGlzIHRoZQoJCQkJCXBhcnRuZXJzaGlwIGVudGl0bGVkIHRoZSBzdGF0ZSwgdGhlIHBvbGl0aWNhbCBhc3NvY2lhdGlvbi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhvc2UgdGhlbiB3aG8gdGhpbmsgdGhhdCB0aGUgbmF0dXJlcyBvZiB0aGUKCQkJCQlzdGF0ZXNtYW4sIHRoZSByb3lhbCBydWxlciwgdGhlIGhlYWQgb2YgYW4gZXN0YXRlPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48Zm9yZWlnbiBsYW5nPSJncmVlayI+zr/hvLDOus6/zr3hvbnOvM6/z4I8L2ZvcmVpZ24+IGRlbm90aW5nIGEgaGlnaGVyCgkJCQkJCWdyYWRlIHRoYW4gPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs60zrXPg8+A4b25z4TOt8+CPC9mb3JlaWduPiBpcyB1bnVzdWFsLiBGb3IgdGhlaXIKCQkJCQkJb3JkaW5hcnkgdXNlIHNlZSAyLjEgZmluLjwvbm90ZT4gYW5kIHRoZSBtYXN0ZXIgb2YgYSBmYW1pbHkgYXJlIHRoZSBzYW1lLAoJCQkJCWFyZSBtaXN0YWtlbiDvvIh0aGV5IGltYWdpbmUgdGhhdCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZXNlIHZhcmlvdXMKCQkJCQlmb3JtcyBvZiBhdXRob3JpdHkgaXMgb25lIG9mIGdyZWF0ZXIgYW5kIHNtYWxsZXIgbnVtYmVycywgbm90IGEgZGlmZmVyZW5jZSBpbgoJCQkJCXRoZSBraW5k4oCUdGhhdCBpcywgdGhhdCB0aGUgcnVsZXIgb3ZlciBhIGZldyBwZW9wbGUgaXMgYSBtYXN0ZXIsIG92ZXIKCQkJCQltb3JlIHRoZSBoZWFkIG9mIGFuIGVzdGF0ZSwgb3ZlciBtb3JlIHN0aWxsIGEgc3RhdGVzbWFuIG9yIHJveWFsIHJ1bGVyLCBhcyBpZgoJCQkJCXRoZXJlIHdlcmUgbm8gZGlmZmVyZW5jZSBiZXR3ZWVuIGEgbGFyZ2UgaG91c2Vob2xkIGFuZCBhIHNtYWxsIGNpdHk7IGFuZCBhbHNvIGFzCgkJCQkJdG8gdGhlIHN0YXRlc21hbiBhbmQgdGhlIHJveWFsIHJ1bGVyLCB0aGV5IHRoaW5rIHRoYXQgb25lIHdobyBnb3Zlcm5zIGFzIHNvbGUKCQkJCQloZWFkIGlzIHJveWFsLCBhbmQgb25lIHdobywgd2hpbGUgdGhlIGdvdmVybm1lbnQgZm9sbG93cyB0aGUgcHJpbmNpcGxlcyBvZiB0aGUKCQkJCQlzY2llbmNlIG9mIHJveWFsdHksIHRha2VzIHR1cm5zIHRvIGdvdmVybiBhbmQgYmUgZ292ZXJuZWQgaXMgYSBzdGF0ZXNtYW47IGJ1dAoJCQkJCXRoZXNlIHZpZXdzIGFyZSBub3QgdHJ1Ze+8iS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGEgcHJvb2YgdGhhdCB0aGVzZSBwZW9wbGUgYXJlIG1pc3Rha2VuIHdpbGwgYXBwZWFyIGlmIHdlIGV4YW1pbmUgdGhlCgkJCQkJcXVlc3Rpb24gaW4gYWNjb3JkYW5jZSB3aXRoIG91ciByZWd1bGFyIG1ldGhvZCBvZiBpbnZlc3RpZ2F0aW9uLiBJbiBldmVyeSBvdGhlcgoJCQkJCW1hdHRlciBpdCBpcyBuZWNlc3NhcnkgdG8gYW5hbHl6ZSB0aGUgY29tcG9zaXRlIHdob2xlIGRvd24gdG8gaXRzIHVuY29tcG91bmRlZAoJCQkJCWVsZW1lbnRzIO+8iGZvciB0aGVzZSBhcmUgdGhlIHNtYWxsZXN0IDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+cGFydHMgb2YgdGhlIHdob2xl77yJOyBzbyB0b28gd2l0aCB0aGUgc3RhdGUsIGJ5CgkJCQkJZXhhbWluaW5nIHRoZSBlbGVtZW50cyBvZiB3aGljaCBpdCBpcyBjb21wb3NlZCB3ZSBzaGFsbCBiZXR0ZXIgZGlzY2VybiBpbgoJCQkJCXJlbGF0aW9uIHRvIHRoZXNlIGRpZmZlcmVudCBraW5kcyBvZiBydWxlcnMgd2hhdCBpcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZW0sCgkJCQkJYW5kIHdoZXRoZXIgaXQgaXMgcG9zc2libGUgdG8gb2J0YWluIGFueSBzY2llbnRpZmljIHByZWNpc2lvbiBpbiByZWdhcmQgdG8gdGhlCgkJCQkJdmFyaW91cyBzdGF0ZW1lbnRzIG1hZGUgYWJvdmUuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGlzIHN1YmplY3QgYXMKCQkJCQlpbiBvdGhlcnMgdGhlIGJlc3QgbWV0aG9kIG9mIGludmVzdGlnYXRpb24gaXMgdG8gc3R1ZHkgdGhpbmdzIGluIHRoZSBwcm9jZXNzIG9mCgkJCQkJZGV2ZWxvcG1lbnQgZnJvbSB0aGUgYmVnaW5uaW5nLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUKCQkJCQlmaXJzdCBjb3VwbGluZyB0b2dldGhlciBvZiBwZXJzb25zIHRoZW4gdG8gd2hpY2ggbmVjZXNzaXR5IGdpdmVzIHJpc2UgaXMgdGhhdAoJCQkJCWJldHdlZW4gdGhvc2Ugd2hvIGFyZSB1bmFibGUgdG8gZXhpc3Qgd2l0aG91dCBvbmUgYW5vdGhlcjogZm9yIGluc3RhbmNlIHRoZQoJCQkJCXVuaW9uIG9mIGZlbWFsZSBhbmQgbWFsZSBmb3IgdGhlIGNvbnRpbnVhbmNlIG9mIHRoZSBzcGVjaWVzIO+8iGFuZCB0aGlzCgkJCQkJbm90IG9mIGRlbGliZXJhdGUgcHVycG9zZSwgYnV0IHdpdGggbWFuIGFzIHdpdGggdGhlIG90aGVyIGFuaW1hbHMgYW5kIHdpdGgKCQkJCQlwbGFudHMgdGhlcmUgaXMgYSBuYXR1cmFsIGluc3RpbmN0IHRvIGRlc2lyZSB0byBsZWF2ZSBiZWhpbmQgb25lIGFub3RoZXIgYmVpbmcKCQkJCQlvZiB0aGUgc2FtZSBzb3J0IGFzIG9uZXNlbGbvvIk7IGFuZCB0aGUgdW5pb24gb2YgbmF0dXJhbCBydWxlciBhbmQKCQkJCQluYXR1cmFsIHN1YmplY3QgZm9yIHRoZSBzYWtlIG9mIHNlY3VyaXR5IO+8iGZvciBoZSB0aGF0IGNhbiBmb3Jlc2VlIHdpdGgKCQkJCQloaXMgbWluZCBpcyBuYXR1cmFsbHkgcnVsZXIgYW5kIG5hdHVyYWxseSBtYXN0ZXIsIGFuZCBoZSB0aGF0IGNhbiBkbyB0aGVzZQoJCQkJCQl0aGluZ3M8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgcHJvYmFibGUgZW1lbmRhdGlvbiBnaXZlcwoJCQkJCQnigJh0aGF0IGNhbiBjYXJyeSBvdXQgbGFib3Iu4oCZPC9ub3RlPiB3aXRoIGhpcyBib2R5IGlzCgkJCQkJc3ViamVjdCBhbmQgbmF0dXJhbGx5IGEgc2xhdmU7IHNvIHRoYXQgbWFzdGVyIGFuZCBzbGF2ZSBoYXZlIHRoZSBzYW1lCgkJCQkJaW50ZXJlc3TvvIkuIDxtaWxlc3RvbmUgbj0iMTI1MmIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIG49IjEuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPlRodXMKCQkJCQl0aGUgZmVtYWxlIGFuZCB0aGUgc2xhdmUgYXJlIGJ5IG5hdHVyZSBkaXN0aW5jdCDvvIhmb3IgbmF0dXJlIG1ha2VzCgkJCQkJbm90aGluZyBhcyB0aGUgY3V0bGVycyBtYWtlIHRoZSBEZWxwaGljIGtuaWZlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VW5jZXJ0YWluOiBwb3NzaWJseSBhIGRhZ2dlciBhbmQgYSBjYXJ2aW5nLWtuaWZlIGluCgkJCQkJCW9uZS48L25vdGU+IGluIGEgbmlnZ2FyZGx5IHdheSwgYnV0IG9uZSB0aGluZyBmb3Igb25lIHB1cnBvc2U7IGZvciBzbyBlYWNoCgkJCQkJdG9vbCB3aWxsIGJlIHR1cm5lZCBvdXQgaW4gdGhlIGZpbmVzdCBwZXJmZWN0aW9uLCBpZiBpdCBzZXJ2ZXMgbm90IG1hbnkgdXNlcyBidXQKCQkJCQlvbmXvvIkuIFlldCBhbW9uZyBiYXJiYXJpYW5zIHRoZSBmZW1hbGUgYW5kIHRoZSBzbGF2ZSBoYXZlIHRoZSBzYW1lIHJhbms7CgkJCQkJYW5kIHRoZSBjYXVzZSBvZiB0aGlzIGlzIHRoYXQgYmFyYmFyaWFucyBoYXZlIG5vIGNsYXNzIG9mIG5hdHVyYWwgcnVsZXJzLCBidXQKCQkJCQl3aXRoIHRoZW0gdGhlIGNvbmp1Z2FsIHBhcnRuZXJzaGlwIGlzIGEgcGFydG5lcnNoaXAgb2YgZmVtYWxlIHNsYXZlIGFuZCBtYWxlCgkJCQkJc2xhdmUuIEhlbmNlIHRoZSBzYXlpbmcgb2YgdGhlIHBvZXRzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iRXVyLiBJQSAxNDAwIiB2YWxpZD0ieWVzIj5FdXIuIElBIDE0MDA8L2JpYmw+Ljwvbm90ZT7igJQgPHF1b3RlIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgbWV0PSJpYW1iaWMiPidUaXMgbWVldCB0aGF0IEdyZWVrcyBzaG91bGQgcnVsZSBiYXJiYXJpYW5zLOKAlDwvbD4KCQkJCQk8L3F1b3RlPiBpbXBseWluZyB0aGF0IGJhcmJhcmlhbiBhbmQgc2xhdmUgYXJlIHRoZSBzYW1lIGluIG5hdHVyZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMS42IiB1bml0PSJMb2ViIGNoYXAiIC8+RnJvbSB0aGVzZSB0d28gcGFydG5lcnNoaXBzIHRoZW4gaXMgZmlyc3QKCQkJCQljb21wb3NlZCB0aGUgaG91c2Vob2xkLCBhbmQgSGVzaW9kPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iSGVzLiBXRCA0MDUiIHZhbGlkPSJ5ZXMiPkhlcy4gV0QgNDA1PC9iaWJsPi48L25vdGU+IHdhcyByaWdodCB3aGVuIGhlIHdyb3RlCgkJCQkJCTxxdW90ZSB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIG1ldD0iZGFjdHlsaWMiPkZpcnN0IGFuZCBmb3JlbW9zdCBhIGhvdXNlIGFuZCBhIHdpZmUgYW5kIGFuIG94IGZvciB0aGUKCQkJCQkJCXBsb3VnaGluZ+KAlDwvbD4KCQkJCQk8L3F1b3RlPiBmb3IgdGhlIG94IHNlcnZlcyBpbnN0ZWFkIG9mIGEgc2VydmFudCBmb3IgdGhlIHBvb3IuIFRoZSBwYXJ0bmVyc2hpcAoJCQkJCXRoZXJlZm9yZSB0aGF0IGNvbWVzIGFib3V0IGluIHRoZSBjb3Vyc2Ugb2YgbmF0dXJlIGZvciBldmVyeWRheSBwdXJwb3NlcyBpcyB0aGUKCQkJCQnigJhob3VzZSzigJkgdGhlIHBlcnNvbnMgd2hvbSBDaGFyb25kYXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgbGF3LWdpdmVyIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ2F0YW5hIiBrZXk9InBlcnNldXMsQ2F0YW5hIj5DYXRhbmE8L3BsYWNlTmFtZT4gaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDMxMjIiIGtleT0idGduLDcwMDMxMjIiPlNpY2lseTwvcGxhY2VOYW1lPiwKCQkJCQkJNnRoIGNlbnR1cnkgQi5DLiBvciBlYXJsaWVyLjwvbm90ZT4gc3BlYWtzIG9mIGFzCgkJCQkJ4oCYbWVhbC10dWItZmVsbG93c+KAmSBhbmQgdGhlIENyZXRhbiBFcGltZW5pZGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIHBvZXQgYW5kIHByb3BoZXQgaW52aXRlZCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+CgkJCQkJCTxkYXRlIGF1dGhuYW1lPSItNTk2IiB2YWx1ZT0iLTU5NiI+NTk2PC9kYXRlPiBCLkMuIHRvIHB1cmlmeSBpdCBvZiBwbGFndWUuPC9ub3RlPiBhcwoJCQkJCQnigJhtYW5nZXItZmVsbG93cy7igJk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZQoJCQkJCQl2YXJpYW50IHJlYWRpbmcgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPuG9gc68zr/OuuG9sc+Azr3Ov8+Fz4I8L2ZvcmVpZ24+LAoJCQkJCQnigJhzbW9rZS1zaGFyZXJzLOKAmSBzZWVtcyB0byBtZWFuCgkJCQkJCeKAmGhlYXJ0aC1mZWxsb3dzLuKAmTwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPk9uCgkJCQkJdGhlIG90aGVyIGhhbmQgdGhlIHByaW1hcnkgcGFydG5lcnNoaXAgbWFkZSB1cCBvZiBzZXZlcmFsIGhvdXNlaG9sZHMgZm9yIHRoZQoJCQkJCXNhdGlzZmFjdGlvbiBvZiBub3QgbWVyZSBkYWlseSBuZWVkcyBpcyB0aGUgdmlsbGFnZS4gVGhlIHZpbGxhZ2UgYWNjb3JkaW5nIHRvCgkJCQkJdGhlIG1vc3QgbmF0dXJhbCBhY2NvdW50IHNlZW1zIHRvIGJlIGEgY29sb255IGZyb208bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdGhlIEdyZWVrIHNob3VsZCBiZSBhbHRlcmVkIHRvIGdpdmUKCQkJCQkJ4oCYY29uc2lzdHMgb2YgY29sb25pZXMgZnJvbS7igJk8L25vdGU+IGEgaG91c2Vob2xkLCBmb3JtZWQKCQkJCQlvZiB0aG9zZSB3aG9tIHNvbWUgcGVvcGxlIHNwZWFrIG9mIGFzIOKAmGZlbGxvdy1zdWNrbGluZ3Ms4oCZCgkJCQkJc29ucyBhbmQgc29ucycgc29ucy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSB3b3JkcwoJCQkJCQnigJhzb25zIGFuZCBzb25zJyBzb25z4oCZIGFyZSBwcm9iYWJseSBhbiBpbnRlcnBvbGF0ZWQKCQkJCQkJbm90ZS48L25vdGU+IEl0IGlzIG93aW5nIHRvIHRoaXMgdGhhdCBvdXIgY2l0aWVzIHdlcmUgYXQgZmlyc3QgdW5kZXIgcm95YWwKCQkJCQlzd2F5IGFuZCB0aGF0IGZvcmVpZ24gcmFjZXMgYXJlIHNvIHN0aWxsLDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YmVjYXVzZSB0aGV5IHdlcmUgbWFkZSB1cCBvZiBwYXJ0cyB0aGF0IHdlcmUgdW5kZXIgcm95YWwgcnVsZTsKCQkJCQlmb3IgZXZlcnkgaG91c2Vob2xkIGlzIHVuZGVyIHRoZSByb3lhbCBydWxlIG9mIGl0cyBlbGRlc3QgbWVtYmVyLCBzbyB0aGF0IHRoZQoJCQkJCWNvbG9uaWVzIGZyb20gdGhlIGhvdXNlaG9sZCB3ZXJlIHNvIHRvbywgYmVjYXVzZSBvZiB0aGUga2luc2hpcCBvZiB0aGVpcgoJCQkJCW1lbWJlcnMuIEFuZCB0aGlzIGlzIHdoYXQgSG9tZXI8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIE9kLiA5LjExNCIgdmFsaWQ9InllcyI+SG9tLiBPZC4gOS4xMTQgZi48L2JpYmw+IG9uIHRoZSBDeWNsb3Blcy48L25vdGU+CgkJCQkJbWVhbnM6IDxxdW90ZSB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIG1ldD0iZGFjdHlsaWMiPkFuZCBlYWNoIG9uZSBnaXZldGggbGF3PC9sPgoJCQkJCQk8bD5UbyBzb25zIGFuZCBla2UgdG8gc3BvdXNlc+KAlDwvbD4KCQkJCQk8L3F1b3RlPiBmb3IgaGlzIEN5Y2xvcGVzIGxpdmUgaW4gc2NhdHRlcmVkIGZhbWlsaWVzOyBhbmQgdGhhdCBpcyB0aGUgd2F5IGluCgkJCQkJd2hpY2ggcGVvcGxlIHVzZWQgdG8gbGl2ZSBpbiBlYXJseSB0aW1lcy4gQWxzbyB0aGlzIGV4cGxhaW5zIHdoeSBhbGwgcmFjZXMgc3BlYWsKCQkJCQlvZiB0aGUgZ29kcyBhcyBydWxlZCBieSBhIGtpbmcsIGJlY2F1c2UgdGhleSB0aGVtc2VsdmVzIHRvbyBhcmUgc29tZSBvZiB0aGVtCgkJCQkJYWN0dWFsbHkgbm93IHNvIHJ1bGVkIGFuZCBpbiBvdGhlciBjYXNlcyB1c2VkIHRvIGJlIG9mIG9sZDsgYW5kIGFzIG1lbiBpbWFnaW5lCgkJCQkJdGhlIGdvZHMgaW4gaHVtYW4gZm9ybSwgc28gYWxzbyB0aGV5IHN1cHBvc2UgdGhlaXIgbWFubmVyIG9mIGxpZmUgdG8gYmUgbGlrZQoJCQkJCXRoZWlyIG93bi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMS44IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgcGFydG5lcnNoaXAgZmluYWxseSBjb21wb3NlZCBvZiBzZXZlcmFsIHZpbGxhZ2VzIGlzIHRoZQoJCQkJCWNpdHktc3RhdGU7IGl0IGhhcyBhdCBsYXN0IGF0dGFpbmVkIHRoZSBsaW1pdCBvZiB2aXJ0dWFsbHkgY29tcGxldGUKCQkJCQlzZWxmLXN1ZmZpY2llbmN5LCBhbmQgdGh1cywgd2hpbGUgaXQgY29tZXMgaW50byBleGlzdGVuY2UgZm9yIHRoZSBzYWtlIG9mIGxpZmUsCgkJCQkJaXQgZXhpc3RzIGZvciB0aGUgZ29vZCBsaWZlLiBIZW5jZSBldmVyeSBjaXR5LXN0YXRlIGV4aXN0cyBieSBuYXR1cmUsIGluYXNtdWNoCgkJCQkJYXMgdGhlIGZpcnN0IHBhcnRuZXJzaGlwcyBzbyBleGlzdDsgZm9yIHRoZSBjaXR5LXN0YXRlIGlzIHRoZSBlbmQgb2YgdGhlIG90aGVyCgkJCQkJcGFydG5lcnNoaXBzLCBhbmQgbmF0dXJlIGlzIGFuIGVuZCwgc2luY2UgdGhhdCB3aGljaCBlYWNoIHRoaW5nIGlzIHdoZW4gaXRzCgkJCQkJZ3Jvd3RoIGlzIGNvbXBsZXRlZCB3ZSBzcGVhayBvZiBhcyBiZWluZyB0aGUgbmF0dXJlIG9mIGVhY2ggdGhpbmcsIGZvciBpbnN0YW5jZQoJCQkJCW9mIGEgbWFuLCBhIGhvcnNlLCBhIGhvdXNlaG9sZC4gQWdhaW4sIHRoZSBvYmplY3QgZm9yIHdoaWNoIGEgdGhpbmcgZXhpc3RzLCBpdHMKCQkJCQllbmQsIGlzIGl0cyBjaGllZiBnb29kOyA8bWlsZXN0b25lIG49IjEyNTNhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5hbmQgc2VsZi1zdWZmaWNpZW5jeSBpcyBhbiBlbmQsIGFuZCBhIGNoaWVmIGdvb2QuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjEuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkZyb20gdGhlc2UgdGhpbmdzIHRoZXJlZm9yZSBpdAoJCQkJCWlzIGNsZWFyIHRoYXQgdGhlIGNpdHktc3RhdGUgaXMgYSBuYXR1cmFsIGdyb3d0aCwgYW5kIHRoYXQgbWFuIGlzIGJ5IG5hdHVyZSBhCgkJCQkJcG9saXRpY2FsIGFuaW1hbCwgYW5kIGEgbWFuIHRoYXQgaXMgYnkgbmF0dXJlIGFuZCBub3QgbWVyZWx5IGJ5IGZvcnR1bmUgY2l0aWxlc3MKCQkJCQlpcyBlaXRoZXIgbG93IGluIHRoZSBzY2FsZSBvZiBodW1hbml0eSBvciBhYm92ZSBpdCDvvIhsaWtlIHRoZSA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9ImRhY3R5bGljIj5jbGFubGVzcywgbGF3bGVzcywgaGVhcnRobGVzczwvbD4KCQkJCQk8L3F1b3RlPiBtYW4gcmV2aWxlZCBieSBIb21lciw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiA5LjYzIiB2YWxpZD0ieWVzIj5Ib20uIElsLiA5LjYzPC9iaWJsPjsgdGhlIHBhc3NhZ2UgZ29lcyBvbjogPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPuG8kM+Dz4ThvbbOvSDhvJDOus614b+Wzr3Ov8+CIHwg4b2Dz4Igz4DOv8674b2zzrzOv8+FCgkJCQkJCeG8lM+BzrHPhM6xzrk8L2ZvcmVpZ24+Ljwvbm90ZT4gZm9yIG9uZSBieSBuYXR1cmUgdW5zb2NpYWwgaXMgYWxzbyDigJhhCgkJCQkJbG92ZXIgb2Ygd2Fy4oCZ77yJIGluYXNtdWNoIGFzIGhlIGlzIHNvbGl0YXJ5LCBsaWtlIGFuIGlzb2xhdGVkCgkJCQkJcGllY2UgYXQgZHJhdWdodHMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgd2h5IG1hbiBpcyBhCgkJCQkJcG9saXRpY2FsIGFuaW1hbCBpbiBhIGdyZWF0ZXIgbWVhc3VyZSB0aGFuIGFueSBiZWUgb3IgYW55IGdyZWdhcmlvdXMgYW5pbWFsIGlzCgkJCQkJY2xlYXIuIEZvciBuYXR1cmUsIGFzIHdlIGRlY2xhcmUsIGRvZXMgbm90aGluZyB3aXRob3V0IHB1cnBvc2U7IGFuZCBtYW4gYWxvbmUgb2YKCQkJCQl0aGUgYW5pbWFscyBwb3NzZXNzZXMgc3BlZWNoLiBUaGUgbWVyZSB2b2ljZSwgaXQgaXMgdHJ1ZSwgY2FuIGluZGljYXRlIHBhaW4gYW5kCgkJCQkJcGxlYXN1cmUsIGFuZCB0aGVyZWZvcmUgaXMgcG9zc2Vzc2VkIGJ5IHRoZSBvdGhlciBhbmltYWxzIGFzIHdlbGwg77yIZm9yCgkJCQkJdGhlaXIgbmF0dXJlIGhhcyBiZWVuIGRldmVsb3BlZCBzbyBmYXIgYXMgdG8gaGF2ZSBzZW5zYXRpb25zIG9mIHdoYXQgaXMgcGFpbmZ1bAoJCQkJCWFuZCBwbGVhc2FudCBhbmQgdG8gaW5kaWNhdGUgdGhvc2Ugc2Vuc2F0aW9ucyB0byBvbmUgYW5vdGhlcu+8iSwgYnV0CgkJCQkJc3BlZWNoIGlzIGRlc2lnbmVkIHRvIGluZGljYXRlIHRoZSBhZHZhbnRhZ2VvdXMgYW5kIHRoZSBoYXJtZnVsLCBhbmQgdGhlcmVmb3JlCgkJCQkJYWxzbyB0aGUgcmlnaHQgYW5kIHRoZSB3cm9uZzsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMS4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPmZvcgoJCQkJCWl0IGlzIHRoZSBzcGVjaWFsIHByb3BlcnR5IG9mIG1hbiBpbiBkaXN0aW5jdGlvbiBmcm9tIHRoZSBvdGhlciBhbmltYWxzIHRoYXQgaGUKCQkJCQlhbG9uZSBoYXMgcGVyY2VwdGlvbiBvZiBnb29kIGFuZCBiYWQgYW5kIHJpZ2h0IGFuZCB3cm9uZyBhbmQgdGhlIG90aGVyIG1vcmFsCgkJCQkJcXVhbGl0aWVzLCBhbmQgaXQgaXMgcGFydG5lcnNoaXAgaW4gdGhlc2UgdGhpbmdzIHRoYXQgbWFrZXMgYSBob3VzZWhvbGQgYW5kIGEKCQkJCQkJY2l0eS1zdGF0ZS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRodXMgYWxzbyB0aGUgY2l0eS1zdGF0ZSBpcyBwcmlvcgoJCQkJCWluIG5hdHVyZSB0byB0aGUgaG91c2Vob2xkIGFuZCB0byBlYWNoIG9mIHVzIGluZGl2aWR1YWxseS48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPkZvciB0aGUgd2hvbGUgbXVzdCBuZWNlc3NhcmlseSBiZSBwcmlvciB0byB0aGUKCQkJCQlwYXJ0OyBzaW5jZSB3aGVuIHRoZSB3aG9sZSBib2R5IGlzIGRlc3Ryb3llZCwgZm9vdCBvciBoYW5kIHdpbGwgbm90IGV4aXN0IGV4Y2VwdAoJCQkJCWluIGFuIGVxdWl2b2NhbCBzZW5zZSwgbGlrZSB0aGUgc2Vuc2UgaW4gd2hpY2ggb25lIHNwZWFrcyBvZiBhIGhhbmQgc2N1bHB0dXJlZAoJCQkJCWluIHN0b25lIGFzIGEgaGFuZDsgYmVjYXVzZSBhIGhhbmQgaW4gdGhvc2UgY2lyY3Vtc3RhbmNlcyB3aWxsIGJlIGEgaGFuZAoJCQkJCXNwb2lsZWQsIGFuZCBhbGwgdGhpbmdzIGFyZSBkZWZpbmVkIGJ5IHRoZWlyIGZ1bmN0aW9uIGFuZCBjYXBhY2l0eSwgc28gdGhhdCB3aGVuCgkJCQkJdGhleSBhcmUgbm8gbG9uZ2VyIHN1Y2ggYXMgdG8gcGVyZm9ybSB0aGVpciBmdW5jdGlvbiB0aGV5IG11c3Qgbm90IGJlIHNhaWQgdG8gYmUKCQkJCQl0aGUgc2FtZSB0aGluZ3MsIGJ1dCB0byBiZWFyIHRoZWlyIG5hbWVzIGluIGFuIGVxdWl2b2NhbCBzZW5zZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMS4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IGlzIGNsZWFyIHRoZXJlZm9yZSB0aGF0IHRoZSBzdGF0ZSBpcwoJCQkJCWFsc28gcHJpb3IgYnkgbmF0dXJlIHRvIHRoZSBpbmRpdmlkdWFsOyBmb3IgaWYgZWFjaCBpbmRpdmlkdWFsIHdoZW4gc2VwYXJhdGUgaXMKCQkJCQlub3Qgc2VsZi1zdWZmaWNpZW50LCBoZSBtdXN0IGJlIHJlbGF0ZWQgdG8gdGhlIHdob2xlIHN0YXRlIGFzIG90aGVyIHBhcnRzIGFyZSB0bwoJCQkJCXRoZWlyIHdob2xlLCB3aGlsZSBhIG1hbiB3aG8gaXMgaW5jYXBhYmxlIG9mIGVudGVyaW5nIGludG8gcGFydG5lcnNoaXAsIG9yIHdobwoJCQkJCWlzIHNvIHNlbGYtc3VmZmljaW5nIHRoYXQgaGUgaGFzIG5vIG5lZWQgdG8gZG8gc28sIGlzIG5vIHBhcnQgb2YgYSBzdGF0ZSwgc28KCQkJCQl0aGF0IGhlIG11c3QgYmUgZWl0aGVyIGEgbG93ZXIgYW5pbWFsIG9yIGEgZ29kLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmVmb3JlIHRoZSBpbXB1bHNlIHRvIGZvcm0gYSBwYXJ0bmVyc2hpcCBvZiB0aGlzIGtpbmQgaXMgcHJlc2VudCBpbiBhbGwgbWVuCgkJCQkJYnkgbmF0dXJlOyBidXQgdGhlIG1hbiB3aG8gZmlyc3QgdW5pdGVkIHBlb3BsZSBpbiBzdWNoIGEgcGFydG5lcnNoaXAgd2FzIHRoZQoJCQkJCWdyZWF0ZXN0IG9mIGJlbmVmYWN0b3JzLiBGb3IgYXMgbWFuIGlzIHRoZSBiZXN0IG9mIHRoZSBhbmltYWxzIHdoZW4gcGVyZmVjdGVkLAoJCQkJCXNvIGhlIGlzIHRoZSB3b3JzdCBvZiBhbGwgd2hlbiBzdW5kZXJlZCBmcm9tIGxhdyBhbmQganVzdGljZS4gRm9yCgkJCQkJdW5yaWdodGVvdXNuZXNzIGlzIG1vc3QgcGVybmljaW91cyB3aGVuIHBvc3Nlc3NlZCBvZiB3ZWFwb25zLCBhbmQgbWFuIGlzIGJvcm4KCQkJCQlwb3NzZXNzaW5nIHdlYXBvbnMgZm9yIHRoZSB1c2Ugb2Ygd2lzZG9tIGFuZCB2aXJ0dWUsIHdoaWNoIGl0IGlzIHBvc3NpYmxlIHRvCgkJCQkJZW1wbG95IGVudGlyZWx5IGZvciB0aGUgb3Bwb3NpdGUgZW5kcy4gSGVuY2Ugd2hlbiBkZXZvaWQgb2YgdmlydHVlIG1hbiBpcyB0aGUKCQkJCQltb3N0IHVuaG9seSBhbmQgc2F2YWdlIG9mIGFuaW1hbHMsIGFuZCB0aGUgd29yc3QgaW4gcmVnYXJkIHRvIHNleHVhbCBpbmR1bGdlbmNlCgkJCQkJYW5kIGdsdXR0b255LiBKdXN0aWNlIG9uIHRoZSBvdGhlciBoYW5kIGlzIGFuIGVsZW1lbnQgb2YgdGhlIHN0YXRlOyBmb3IganVkaWNpYWwKCQkJCQlwcm9jZWR1cmUsIHdoaWNoIG1lYW5zIHRoZSBkZWNpc2lvbiBvZiB3aGF0IGlzIGp1c3QsIGlzIHRoZSByZWd1bGF0aW9uIG9mIHRoZQoJCQkJCXBvbGl0aWNhbCBwYXJ0bmVyc2hpcC4gPG1pbGVzdG9uZSBuPSIxMjUzYiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgbm93IHRoYXQgaXQgaXMgY2xlYXIgd2hhdCBhcmUgdGhlCgkJCQkJY29tcG9uZW50IHBhcnRzIG9mIHRoZSBzdGF0ZSwgd2UgaGF2ZSBmaXJzdCBvZiBhbGwgdG8gZGlzY3VzcyBob3VzZWhvbGQKCQkJCQltYW5hZ2VtZW50OyBmb3IgZXZlcnkgc3RhdGUgaXMgY29tcG9zZWQgb2YgaG91c2Vob2xkcy4gSG91c2Vob2xkIG1hbmFnZW1lbnQKCQkJCQlmYWxscyBpbnRvIGRlcGFydG1lbnRzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHBhcnRzIG9mIHdoaWNoIHRoZSBob3VzZWhvbGQgaW4gaXRzCgkJCQkJdHVybiBpcyBjb21wb3NlZDsgYW5kIHRoZSBob3VzZWhvbGQgaW4gaXRzIHBlcmZlY3QgZm9ybSBjb25zaXN0cyBvZiBzbGF2ZXMgYW5kCgkJCQkJZnJlZW1lbi4gVGhlIGludmVzdGlnYXRpb24gb2YgZXZlcnl0aGluZyBzaG91bGQgYmVnaW4gd2l0aCBpdHMgc21hbGxlc3QgcGFydHMsCgkJCQkJYW5kIHRoZSBwcmltYXJ5IGFuZCBzbWFsbGVzdCBwYXJ0cyBvZiB0aGUgaG91c2Vob2xkIGFyZSBtYXN0ZXIgYW5kIHNsYXZlLAoJCQkJCWh1c2JhbmQgYW5kIHdpZmUsIGZhdGhlciBhbmQgY2hpbGRyZW47IHdlIG91Z2h0IHRoZXJlZm9yZSB0byBleGFtaW5lIHRoZSBwcm9wZXIKCQkJCQljb25zdGl0dXRpb24gYW5kIGNoYXJhY3RlciBvZiBlYWNoIG9mIHRoZXNlIHRocmVlIHJlbGF0aW9uc2hpcHMsIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkkgbWVhbiB0aGF0IG9mIG1hc3RlcnNoaXAsIHRoYXQgb2YKCQkJCQkJbWFycmlhZ2U8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBHcmVlayB3b3JkIHByb3Blcmx5IGRlbm90ZXMKCQkJCQkJdGhlIG1hcnJpYWdlIGNlcmVtb255LCBub3QgdGhlIG1hcnJpZWQgc3RhdGUuPC9ub3RlPiDvvIh0aGVyZSBpcyBubwoJCQkJCWV4YWN0IHRlcm0gZGVub3RpbmcgdGhlIHJlbGF0aW9uIHVuaXRpbmcgd2lmZSBhbmQgaHVzYmFuZO+8iSwgYW5kIHRoaXJkbHkKCQkJCQl0aGUgcHJvZ2VuaXRpdmUgcmVsYXRpb25zaGlwIO+8iHRoaXMgdG9vIGhhcyBub3QgYmVlbiBkZXNpZ25hdGVkIGJ5IGEKCQkJCQlzcGVjaWFsIG5hbWXvvIkuIExldCB1cyB0aGVuIGFjY2VwdCB0aGVzZSB0aHJlZSByZWxhdGlvbnNoaXBzIHRoYXQgd2UKCQkJCQloYXZlIG1lbnRpb25lZC4gVGhlcmUgaXMgYWxzbyBhIGRlcGFydG1lbnQgd2hpY2ggc29tZSBwZW9wbGUgY29uc2lkZXIgdGhlIHNhbWUKCQkJCQlhcyBob3VzZWhvbGQgbWFuYWdlbWVudCBhbmQgb3RoZXJzIHRoZSBtb3N0IGltcG9ydGFudCBwYXJ0IG9mIGl0LCBhbmQgdGhlIHRydWUKCQkJCQlwb3NpdGlvbiBvZiB3aGljaCB3ZSBzaGFsbCBoYXZlIHRvIGNvbnNpZGVyOiBJIG1lYW4gd2hhdCBpcyBjYWxsZWQgdGhlIGFydCBvZgoJCQkJCWdldHRpbmcgd2VhbHRoLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Tm8gRW5nbGlzaCB3b3JkIGNvdmVycyBhbGwKCQkJCQkJdGhlIGFzc29jaWF0aW9ucyBvZiB0aGUgR3JlZWssIHdoaWNoIG1lYW5zIOKAmGRlYWxpbmcgaW4gPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs+Hz4HhvbXOvM6xz4TOsTwvZm9yZWlnbj4s4oCZCgkJCQkJCeKAmHRoaW5ncyzigJnigJRnb29kcywgcHJvcGVydHksIG1vbmV54oCUYW5kCgkJCQkJCXNvIOKAmGJ1c2luZXNzLuKAmTwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkxldCB1cyBiZWdpbiBieSBkaXNjdXNzaW5nIHRoZSByZWxhdGlvbiBvZiBtYXN0ZXIKCQkJCQlhbmQgc2xhdmUsIGluIG9yZGVyIHRvIG9ic2VydmUgdGhlIGZhY3RzIHRoYXQgaGF2ZSBhIGJlYXJpbmcgb24gcHJhY3RpY2FsCgkJCQkJdXRpbGl0eSwgYW5kIGFsc28gaW4gdGhlIGhvcGUgdGhhdCB3ZSBtYXkgYmUgYWJsZSB0byBvYnRhaW4gc29tZXRoaW5nIGJldHRlcgoJCQkJCXRoYW4gdGhlIG5vdGlvbnMgYXQgcHJlc2VudCBlbnRlcnRhaW5lZCwgd2l0aCBhIHZpZXcgdG8gYSB0aGVvcmV0aWMga25vd2xlZGdlIG9mCgkJCQkJdGhlIHN1YmplY3QuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciBzb21lIHRoaW5rZXJzIGhvbGQKCQkJCQl0aGUgZnVuY3Rpb24gb2YgdGhlIG1hc3RlciB0byBiZSBhIGRlZmluaXRlIHNjaWVuY2UsIGFuZCBtb3Jlb3ZlciB0aGluayB0aGF0CgkJCQkJaG91c2Vob2xkIG1hbmFnZW1lbnQsIG1hc3RlcnNoaXAsIHN0YXRlc21hbnNoaXAgYW5kIG1vbmFyY2h5IGFyZSB0aGUgc2FtZQoJCQkJCQl0aGluZyw8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFzIHdlIHNhaWQgYXQgdGhlIGJlZ2lubmluZwoJCQkJCW9mIHRoZSB0cmVhdGlzZTsgb3RoZXJzIGhvd2V2ZXIgbWFpbnRhaW4gdGhhdCBmb3Igb25lIG1hbiB0byBiZSBhbm90aGVyIG1hbidzCgkJCQkJbWFzdGVyIGlzIGNvbnRyYXJ5IHRvIG5hdHVyZSwgYmVjYXVzZSBpdCBpcyBvbmx5IGNvbnZlbnRpb24gdGhhdCBtYWtlcyB0aGUgb25lIGEKCQkJCQlzbGF2ZSBhbmQgdGhlIG90aGVyIGEgZnJlZW1hbiBhbmQgdGhlcmUgaXMgbm8gZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZW0gYnkgbmF0dXJlLAoJCQkJCWFuZCB0aGF0IHRoZXJlZm9yZSBpdCBpcyB1bmp1c3QsIGZvciBpdCBpcyBiYXNlZCBvbiBmb3JjZS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlNpbmNlIHRoZXJlZm9yZSBwcm9wZXJ0eSBpcyBhIHBhcnQgb2YgYSBob3VzZWhvbGQgYW5kIHRoZSBhcnQKCQkJCQlvZiBhY3F1aXJpbmcgcHJvcGVydHkgYSBwYXJ0IG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50IO+8iGZvciB3aXRob3V0IHRoZQoJCQkJCW5lY2Vzc2FyaWVzIGV2ZW4gbGlmZSwgYXMgd2VsbCBhcyB0aGUgZ29vZCBsaWZlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+4oCYQXMgd2VsbCBhcyB0aGUgZ29vZCBsaWZl4oCZIGlzIHByb2JhYmx5IGFuCgkJCQkJCWludGVycG9sYXRpb24uPC9ub3RlPiBpcyBpbXBvc3NpYmxl77yJLCA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgc2luY2UsIGp1c3QgYXMgZm9yIHRoZSBwYXJ0aWN1bGFyIGFydHMgaXQgd291bGQgYmUKCQkJCQluZWNlc3NhcnkgZm9yIHRoZSBwcm9wZXIgdG9vbHMgdG8gYmUgZm9ydGhjb21pbmcgaWYgdGhlaXIgd29yayBpcyB0byBiZQoJCQkJCWFjY29tcGxpc2hlZCwgc28gYWxzbyB0aGUgbWFuYWdlciBvZiBhIGhvdXNlaG9sZCBtdXN0IGhhdmUgaGlzIHRvb2xzLCBhbmQgb2YKCQkJCQl0b29scyBzb21lIGFyZSBsaWZlbGVzcyBhbmQgb3RoZXJzIGxpdmluZyDvvIhmb3IgZXhhbXBsZSwgZm9yIGEgaGVsbXNtYW4KCQkJCQl0aGUgcnVkZGVyIGlzIGEgbGlmZWxlc3MgdG9vbCBhbmQgdGhlIGxvb2stb3V0IG1hbiBhIGxpdmUgdG9vbOKAlGZvciBhbgoJCQkJCWFzc2lzdGFudCBpbiB0aGUgYXJ0cyBiZWxvbmdzIHRvIHRoZSBjbGFzcyBvZiB0b29sc++8iSwgc28gYWxzbyBhbgoJCQkJCWFydGljbGUgb2YgcHJvcGVydHkgaXMgYSB0b29sIGZvciB0aGUgcHVycG9zZSBvZiBsaWZlLCBhbmQgcHJvcGVydHkgZ2VuZXJhbGx5IGlzCgkJCQkJYSBjb2xsZWN0aW9uIG9mIHRvb2xzLCBhbmQgYSBzbGF2ZSBpcyBhIGxpdmUgYXJ0aWNsZSBvZiBwcm9wZXJ0eS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGV2ZXJ5IGFzc2lzdGFudCBpcyBhcyBpdCB3ZXJlIGEgdG9vbAoJCQkJCXRoYXQgc2VydmVzIGZvciBzZXZlcmFsIHRvb2xzOyBmb3IgaWYgZXZlcnkgdG9vbCBjb3VsZCBwZXJmb3JtIGl0cyBvd24gd29yayB3aGVuCgkJCQkJb3JkZXJlZCwgb3IgYnkgc2VlaW5nIHdoYXQgdG8gZG8gaW4gYWR2YW5jZSwgbGlrZSB0aGUgc3RhdHVlcyBvZiBEYWVkYWx1cyBpbiB0aGUKCQkJCQkJc3RvcnksPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIGxlZ2VuZGFyeSBzY3VscHRvciBmaXJzdAoJCQkJCQlyZXByZXNlbnRlZCB0aGUgZXllcyBhcyBvcGVuIGFuZCB0aGUgbGltYnMgYXMgaW4gbW90aW9uLCBzbyBoaXMgc3RhdHVlcyBoYWQKCQkJCQkJdG8gYmUgY2hhaW5lZCB0byBwcmV2ZW50IHRoZW0gZnJvbSBydW5uaW5nIGF3YXkg77yIPGJpYmwgZGVmYXVsdD0iTk8iIG49IlBsYXQuIE1lbm8gOTdkIiB2YWxpZD0ieWVzIj5QbGF0LiBNZW5vIDk3ZDwvYmlibD7vvIkuPC9ub3RlPiBvciB0aGUKCQkJCQl0cmlwb2RzIG9mIEhlcGhhZXN0dXMgd2hpY2ggdGhlIHBvZXQgc2F5cyDigJhlbnRlciBzZWxmLW1vdmVkIHRoZQoJCQkJCWNvbXBhbnkgZGl2aW5lLOKAmTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCTxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAxOC4zNjkiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDE4LjM2OTwvYmlibD4KCQkJCQk8L25vdGU+4oCUaWYgdGh1cyBzaHV0dGxlcyB3b3ZlIGFuZCBxdWlsbHMgcGxheWVkIGhhcnBzIG9mIHRoZW1zZWx2ZXMsCgkJCQkJbWFzdGVyLWNyYWZ0c21lbiB3b3VsZCBoYXZlIG5vIG5lZWQgb2YgYXNzaXN0YW50cyBhbmQgbWFzdGVycyBubyBuZWVkIG9mIHNsYXZlcy4KCQkJCQkJPG1pbGVzdG9uZSBuPSIxMjU0YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+Tm93IHRoZSB0b29scyBtZW50aW9uZWQgYXJlIGluc3RydW1lbnRzIG9mIHByb2R1Y3Rpb24sIHdoZXJlYXMKCQkJCQlhbiBhcnRpY2xlIG9mIHByb3BlcnR5IGlzIGFuIGluc3RydW1lbnQgb2YgYWN0aW9uPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHdpdGggaXQgd2UgZG8gbm90IDxlbXBoPm1ha2U8L2VtcGg+IHNvbWV0aGluZyBidXQKCQkJCQkJCTxlbXBoPmRvPC9lbXBoPiBzb21ldGhpbmcg77yIZS5nLiB3ZWFyIGEgZHJlc3MsIGxpZSBpbiBhCgkJCQkJCWJlZO+8iS48L25vdGU+OyBmb3IgZnJvbSBhIHNodXR0bGUgd2UgZ2V0IHNvbWV0aGluZyBlbHNlIGJlc2lkZSB0aGUKCQkJCQltZXJlIHVzZSBvZiB0aGUgc2h1dHRsZSwgYnV0IGZyb20gYSBnYXJtZW50IG9yIGEgYmVkIHdlIGdldCBvbmx5IHRoZWlyIHVzZS4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi42IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGFsc28gaW5hc211Y2ggYXMgdGhlcmUgaXMgYQoJCQkJCWRpZmZlcmVuY2UgaW4ga2luZCBiZXR3ZWVuIHByb2R1Y3Rpb24gYW5kIGFjdGlvbiwgYW5kIGJvdGggbmVlZCB0b29scywgaXQKCQkJCQlmb2xsb3dzIHRoYXQgdGhvc2UgdG9vbHMgYWxzbyBtdXN0IHBvc3Nlc3MgdGhlIHNhbWUgZGlmZmVyZW5jZS4gQnV0IGxpZmUgaXMKCQkJCQlkb2luZyB0aGluZ3MsIG5vdCBtYWtpbmcgdGhpbmdzOyBoZW5jZSB0aGUgc2xhdmUgaXMgYW4gYXNzaXN0YW50IGluIHRoZSBjbGFzcyBvZgoJCQkJCWluc3RydW1lbnRzIG9mIGFjdGlvbi48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCB0aGUgdGVybQoJCQkJCeKAmGFydGljbGUgb2YgcHJvcGVydHnigJkgaXMgdXNlZCBpbiB0aGUgc2FtZSB3YXkgYXMgdGhlIHRlcm0KCQkJCQnigJhwYXJ04oCZOiBhIHRoaW5nIHRoYXQgaXMgYSBwYXJ0IGlzIG5vdCBvbmx5IGEgcGFydCBvZiBhbm90aGVyCgkJCQkJdGhpbmcgYnV0IGFic29sdXRlbHkgYmVsb25ncyB0byBhbm90aGVyIHRoaW5nLCBhbmQgc28gYWxzbyBkb2VzIGFuIGFydGljbGUgb2YKCQkJCQlwcm9wZXJ0eS4gSGVuY2Ugd2hlcmVhcyB0aGUgbWFzdGVyIGlzIG1lcmVseSB0aGUgc2xhdmUncyBtYXN0ZXIgYW5kIGRvZXMgbm90CgkJCQkJYmVsb25nIHRvIHRoZSBzbGF2ZSwgdGhlIHNsYXZlIGlzIG5vdCBtZXJlbHkgdGhlIHNsYXZlIG9mIHRoZSBtYXN0ZXIgYnV0IHdob2xseQoJCQkJCWJlbG9uZ3MgdG8gdGhlIG1hc3Rlci4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi43IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlc2UKCQkJCQljb25zaWRlcmF0aW9ucyB0aGVyZWZvcmUgbWFrZSBjbGVhciB0aGUgbmF0dXJlIG9mIHRoZSBzbGF2ZSBhbmQgaGlzIGVzc2VudGlhbAoJCQkJCXF1YWxpdHk6IG9uZSB3aG8gaXMgYSBodW1hbiBiZWluZyBiZWxvbmdpbmcgYnkgbmF0dXJlIG5vdCB0byBoaW1zZWxmIGJ1dCB0bwoJCQkJCWFub3RoZXIgaXMgYnkgbmF0dXJlIGEgc2xhdmUsIGFuZCBhIHBlcnNvbiBpcyBhIGh1bWFuIGJlaW5nIGJlbG9uZ2luZyB0byBhbm90aGVyCgkJCQkJaWYgYmVpbmcgYSBtYW4gaGUgaXMgYW4gYXJ0aWNsZSBvZiBwcm9wZXJ0eSwgYW5kIGFuIGFydGljbGUgb2YgcHJvcGVydHkKCQkJCQlpcyBhbiBpbnN0cnVtZW50IGZvciBhY3Rpb24gc2VwYXJhYmxlIGZyb20gaXRzIG93bmVyLiBCdXQgd2UgbXVzdCBuZXh0IGNvbnNpZGVyCgkJCQkJd2hldGhlciBvciBub3QgYW55b25lIGV4aXN0cyB3aG8gaXMgYnkgbmF0dXJlIG9mIHRoaXMgY2hhcmFjdGVyLCBhbmQgd2hldGhlciBpdAoJCQkJCWlzIGFkdmFudGFnZW91cyBhbmQganVzdCBmb3IgYW55b25lIHRvIGJlIGEgc2xhdmUsIG9yIHdoZXRoZXIgb24gdGhlIGNvbnRyYXJ5CgkJCQkJYWxsIHNsYXZlcnkgaXMgYWdhaW5zdCBuYXR1cmUuPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGVkPSJQIiBuPSIyLjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgaXQgaXMgbm90IGRpZmZpY3VsdCBlaXRoZXIKCQkJCQl0byBkaXNjZXJuIHRoZSBhbnN3ZXIgYnkgdGhlb3J5IG9yIHRvIGxlYXJuIGl0IGVtcGlyaWNhbGx5LiBBdXRob3JpdHkgYW5kCgkJCQkJc3Vib3JkaW5hdGlvbiBhcmUgY29uZGl0aW9ucyBub3Qgb25seSBpbmV2aXRhYmxlIGJ1dCBhbHNvIGV4cGVkaWVudDsgaW4gc29tZQoJCQkJCWNhc2VzIHRoaW5ncyBhcmUgbWFya2VkIG91dCBmcm9tIHRoZSBtb21lbnQgb2YgYmlydGggdG8gcnVsZSBvciB0byBiZSBydWxlZC4gQW5kCgkJCQkJdGhlcmUgYXJlIG1hbnkgdmFyaWV0aWVzIGJvdGggb2YgcnVsZXJzIGFuZCBvZiBzdWJqZWN0cyDvvIhhbmQgdGhlIGhpZ2hlcgoJCQkJCXRoZSB0eXBlIG9mIHRoZSBzdWJqZWN0cywgdGhlIGxvZnRpZXIgaXMgdGhlIG5hdHVyZSBvZiB0aGUgYXV0aG9yaXR5IGV4ZXJjaXNlZAoJCQkJCW92ZXIgdGhlbSwgZm9yIGV4YW1wbGUgdG8gY29udHJvbCBhIGh1bWFuIGJlaW5nIGlzIGEgaGlnaGVyIHRoaW5nIHRoYW4gdG8gdGFtZSBhCgkJCQkJd2lsZCBiZWFzdDsgZm9yIHRoZSBoaWdoZXIgdGhlIHR5cGUgb2YgdGhlIHBhcnRpZXMgdG8gdGhlIHBlcmZvcm1hbmNlIG9mIGEKCQkJCQlmdW5jdGlvbiwgdGhlIGhpZ2hlciBpcyB0aGUgZnVuY3Rpb24sIGFuZCB3aGVuIG9uZSBwYXJ0eSBydWxlcyBhbmQgYW5vdGhlciBpcwoJCQkJCXJ1bGVkLCB0aGVyZSBpcyBhIGZ1bmN0aW9uIHBlcmZvcm1lZCBiZXR3ZWVuIHRoZW3vvInigJQ8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5iZWNhdXNlIGluIGV2ZXJ5IGNvbXBvc2l0ZSB0aGluZywgd2hlcmUgYQoJCQkJCXBsdXJhbGl0eSBvZiBwYXJ0cywgd2hldGhlciBjb250aW51b3VzIG9yIGRpc2NyZXRlLCBpcyBjb21iaW5lZCB0byBtYWtlIGEgc2luZ2xlCgkJCQkJY29tbW9uIHdob2xlLCB0aGVyZSBpcyBhbHdheXMgZm91bmQgYSBydWxpbmcgYW5kIGEgc3ViamVjdCBmYWN0b3IsIGFuZCB0aGlzCgkJCQkJY2hhcmFjdGVyaXN0aWMgb2YgbGl2aW5nIHRoaW5ncyBpcyBwcmVzZW50IGluIHRoZW0gYXMgYW4gb3V0Y29tZSBvZiB0aGUgd2hvbGUgb2YKCQkJCQluYXR1cmUsIHNpbmNlIGV2ZW4gaW4gdGhpbmdzIHRoYXQgZG8gbm90IHBhcnRha2Ugb2YgbGlmZSB0aGVyZSBpcyBhIHJ1bGluZwoJCQkJCXByaW5jaXBsZSwgYXMgaW4gdGhlIGNhc2Ugb2YgYSBtdXNpY2FsIHNjYWxlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+RWFjaCDigJhtb2Rl4oCZIO+8iERvcmlhbiwgdGhlIG1vZGVybiBtaW5vciBzY2FsZSwKCQkJCQkJUGhyeWdpYW4gYW5kIEx5ZGlhbiwgdHdvIGZvcm1zIG9mIG1ham9y77yJIHdhcyBydWxlZCBieSBpdHMKCQkJCQkJa2V5LW5vdGUuPC9ub3RlPiBIb3dldmVyLCB0aGlzIG1hdHRlciBwZXJoYXBzIGJlbG9uZ3MgdG8gYW4gaW52ZXN0aWdhdGlvbgoJCQkJCWx5aW5nIHNvbWV3aGF0IG91dHNpZGUgb3VyIHN1YmplY3Q7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQgYW4gYW5pbWFsIGNvbnNpc3RzIHByaW1hcmlseSBvZiBzb3VsIGFuZCBib2R5LCBvZiB3aGljaCB0aGUgZm9ybWVyIGlzIGJ5CgkJCQkJbmF0dXJlIHRoZSBydWxpbmcgYW5kIHRoZSBsYXR0ZXIgdGhlIHN1YmplY3QgZmFjdG9yLiBBbmQgdG8gZGlzY292ZXIgd2hhdCBpcwoJCQkJCW5hdHVyYWwgd2UgbXVzdCBzdHVkeSBpdCBwcmVmZXJhYmx5IGluIHRoaW5ncyB0aGF0IGFyZSBpbiBhIG5hdHVyYWwgc3RhdGUsIGFuZAoJCQkJCW5vdCBpbiBzcGVjaW1lbnMgdGhhdCBhcmUgZGVnZW5lcmF0ZS4gSGVuY2UgaW4gc3R1ZHlpbmcgbWFuIHdlIG11c3QgY29uc2lkZXIgYQoJCQkJCW1hbiB0aGF0IGlzIGluIHRoZSBiZXN0IHBvc3NpYmxlIGNvbmRpdGlvbiBpbiByZWdhcmQgdG8gYm90aCBib2R5IGFuZCBzb3VsLCBhbmQKCQkJCQlpbiBoaW0gdGhlIHByaW5jaXBsZSBzdGF0ZWQgd2lsbCBjbGVhcmx5IGFwcGVhcizigJQgPG1pbGVzdG9uZSBuPSIxMjU0YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+c2luY2UgaW4gdGhvc2UKCQkJCQl0aGF0IGFyZSBiYWQgb3IgaW4gYSBiYWQgY29uZGl0aW9uIGl0IG1pZ2h0IGJlIHRob3VnaHQgdGhhdCB0aGUgYm9keSBvZnRlbiBydWxlcwoJCQkJCXRoZSBzb3VsIGJlY2F1c2Ugb2YgaXRzIHZpY2lvdXMgYW5kIHVubmF0dXJhbCBjb25kaXRpb24uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdG8gcmVzdW1l4oCUaXQgaXMgaW4gYSBsaXZpbmcgY3JlYXR1cmUsCgkJCQkJYXMgd2Ugc2F5LCB0aGF0IGl0IGlzIGZpcnN0IHBvc3NpYmxlIHRvIGRpc2Nlcm4gdGhlIHJ1bGUgYm90aCBvZiBtYXN0ZXIgYW5kIG9mCgkJCQkJc3RhdGVzbWFuIHRoZSBzb3VsIHJ1bGVzIHRoZSBib2R5IHdpdGggdGhlIHN3YXkgb2YgYSBtYXN0ZXIsIHRoZSBpbnRlbGxpZ2VuY2UKCQkJCQlydWxlcyB0aGUgYXBwZXRpdGVzIHdpdGggdGhhdCBvZiBhIHN0YXRlc21hbiBvciBhIGtpbmcgYW5kIGluIHRoZXNlIGV4YW1wbGVzIGl0CgkJCQkJaXMgbWFuaWZlc3QgdGhhdCBpdCBpcyBuYXR1cmFsIGFuZCBleHBlZGllbnQgZm9yIHRoZSBib2R5IHRvIGJlIGdvdmVybmVkIGJ5IHRoZQoJCQkJCXNvdWwgYW5kIGZvciB0aGUgZW1vdGlvbmFsIHBhcnQgdG8gYmUgZ292ZXJuZWQgYnkgdGhlIGludGVsbGVjdCwgdGhlIHBhcnQKCQkJCQlwb3NzZXNzaW5nIHJlYXNvbiwgd2hlcmVhcyBmb3IgdGhlIHR3byBwYXJ0aWVzIHRvIGJlIG9uIGFuIGVxdWFsIGZvb3Rpbmcgb3IgaW4KCQkJCQl0aGUgY29udHJhcnkgcG9zaXRpb25zIGlzIGhhcm1mdWwgaW4gYWxsIGNhc2VzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+QWdhaW4sIHRoZSBzYW1lIGhvbGRzIGdvb2QgYmV0d2VlbiBtYW4gYW5kIHRoZSBvdGhlcgoJCQkJCWFuaW1hbHM6IHRhbWUgYW5pbWFscyBhcmUgc3VwZXJpb3IgaW4gdGhlaXIgbmF0dXJlIHRvIHdpbGQgYW5pbWFscywgeWV0IGZvciBhbGwKCQkJCQl0aGUgZm9ybWVyIGl0IGlzIGFkdmFudGFnZW91cyB0byBiZSBydWxlZCBieSBtYW4sIHNpbmNlIHRoaXMgZ2l2ZXMgdGhlbQoJCQkJCXNlY3VyaXR5LiBBZ2FpbiwgYXMgYmV0d2VlbiB0aGUgc2V4ZXMsIHRoZSBtYWxlIGlzIGJ5IG5hdHVyZSBzdXBlcmlvciBhbmQgdGhlCgkJCQkJZmVtYWxlIGluZmVyaW9yLCB0aGUgbWFsZSBydWxlciBhbmQgdGhlIGZlbWFsZSBzdWJqZWN0LiBBbmQgdGhlIHNhbWUgbXVzdCBhbHNvCgkJCQkJbmVjZXNzYXJpbHkgYXBwbHkgaW4gdGhlIGNhc2Ugb2YgbWFua2luZCBhcyBhIHdob2xlOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+dGhlcmVmb3JlIGFsbCBtZW4gdGhhdCBkaWZmZXIgYXMgd2lkZWx5IGFzIHRoZSBzb3VsIGRvZXMKCQkJCQlmcm9tIHRoZSBib2R5IGFuZCB0aGUgaHVtYW4gYmVpbmcgZnJvbSB0aGUgbG93ZXIgYW5pbWFsIO+8iGFuZCB0aGlzIGlzCgkJCQkJdGhlIGNvbmRpdGlvbiBvZiB0aG9zZSB3aG9zZSBmdW5jdGlvbiBpcyB0aGUgdXNlIG9mIHRoZSBib2R5IGFuZCBmcm9tIHdob20gdGhpcwoJCQkJCWlzIHRoZSBiZXN0IHRoYXQgaXMgZm9ydGhjb21pbmfvvIkgdGhlc2UgYXJlIGJ5IG5hdHVyZSBzbGF2ZXMsIGZvciB3aG9tCgkJCQkJdG8gYmUgZ292ZXJuZWQgYnkgdGhpcyBraW5kIG9mIGF1dGhvcml0eTxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+aXMgYWR2YW50YWdlb3VzLCBpbmFzbXVjaCBhcyBpdCBpcyBhZHZhbnRhZ2VvdXMgdG8gdGhlIHN1YmplY3QKCQkJCQl0aGluZ3MgYWxyZWFkeSBtZW50aW9uZWQuIEZvciBoZSBpcyBieSBuYXR1cmUgYSBzbGF2ZSB3aG8gaXMgY2FwYWJsZSBvZgoJCQkJCWJlbG9uZ2luZyB0byBhbm90aGVyIO+8iGFuZCB0aGF0IGlzIHdoeSBoZSBkb2VzIHNvIGJlbG9uZ++8iSwgYW5kCgkJCQkJd2hvIHBhcnRpY2lwYXRlcyBpbiByZWFzb24gc28gZmFyIGFzIHRvIGFwcHJlaGVuZCBpdCBidXQgbm90IHRvIHBvc3Nlc3MgaXQ7IGZvcgoJCQkJCXRoZSBhbmltYWxzIG90aGVyIHRoYW4gbWFuIGFyZSBzdWJzZXJ2aWVudCBub3QgdG8gcmVhc29uLCBieSBhcHByZWhlbmRpbmcgaXQsCgkJCQkJYnV0IHRvIGZlZWxpbmdzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjE0IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGFsc28gdGhlCgkJCQkJdXNlZnVsbmVzcyBvZiBzbGF2ZXMgZGl2ZXJnZXMgbGl0dGxlIGZyb20gdGhhdCBvZiBhbmltYWxzOyBib2RpbHkgc2VydmljZSBmb3IKCQkJCQl0aGUgbmVjZXNzaXRpZXMgb2YgbGlmZSBpcyBmb3J0aGNvbWluZyBmcm9tIGJvdGgsIGZyb20gc2xhdmVzIGFuZCBmcm9tIGRvbWVzdGljCgkJCQkJYW5pbWFscyBhbGlrZS4gVGhlIGludGVudGlvbiBvZiBuYXR1cmUgdGhlcmVmb3JlIGlzIHRvIG1ha2UgdGhlIGJvZGllcyBhbHNvIG9mCgkJCQkJZnJlZW1lbiBhbmQgb2Ygc2xhdmVzIGRpZmZlcmVudOKAlHRoZSBsYXR0ZXIgc3Ryb25nIGZvciBuZWNlc3NhcnkKCQkJCQlzZXJ2aWNlLCB0aGUgZm9ybWVyIGVyZWN0IGFuZCB1bnNlcnZpY2VhYmxlIGZvciBzdWNoIG9jY3VwYXRpb25zLCBidXQKCQkJCQlzZXJ2aWNlYWJsZSBmb3IgYSBsaWZlIG9mIGNpdGl6ZW5zaGlwIO+8iGFuZCB0aGF0IGFnYWluIGRpdmlkZXMgaW50byB0aGUKCQkJCQllbXBsb3ltZW50cyBvZiB3YXIgYW5kIHRob3NlIG9mIHBlYWNl77yJOyBidXQgYXMgYSBtYXR0ZXIgb2YgZmFjdCBvZnRlbgoJCQkJCXRoZSB2ZXJ5IG9wcG9zaXRlIGNvbWVzIGFib3V04oCUc29tZSBwZXJzb25zIGhhdmUgdGhlIGJvZGllcyBvZiBmcmVlIG1lbgoJCQkJCWFuZCBvdGhlcnMgdGhlIHNvdWxzOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjE1IiB1bml0PSJMb2ViIGNoYXAiIC8+c2luY2UgdGhpcyBpcwoJCQkJCWNlcnRhaW5seSBjbGVhciwgdGhhdCBpZiBwZXJzb25zIHdlcmUgYm9ybiBhcyBkaXN0aW5ndWlzaGVkIG9ubHkgaW4gYm9keSBhcyBhcmUKCQkJCQl0aGUgc3RhdHVlcyBvZiB0aGUgZ29kcywgZXZlcnlvbmUgd291bGQgc2F5IHRoYXQgdGhvc2Ugd2hvIHdlcmUgaW5mZXJpb3IKCQkJCQlkZXNlcnZlZCB0byBiZSB0aGVzZSBtZW4ncyBzbGF2ZXMuIEFuZCBpZiB0aGlzIGlzIHRydWUgaW4gdGhlIGNhc2Ugb2YgdGhlIGJvZHksCgkJCQkJdGhlcmUgaXMgZmFyIGp1c3RlciByZWFzb24gZm9yIHRoaXMgcnVsZSBiZWluZyBsYWlkIGRvd24gaW4gdGhlIGNhc2Ugb2YgdGhlCgkJCQkJc291bDsgYnV0IGJlYXV0eSBvZiBzb3VsIGlzIG5vdCBzbyBlYXN5IHRvIHNlZSBhcyBiZWF1dHkgb2YgYm9keS4gPG1pbGVzdG9uZSBuPSIxMjU1YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+SXQgaXMKCQkJCQltYW5pZmVzdCB0aGVyZWZvcmUgdGhhdCB0aGVyZSBhcmUgY2FzZXMgb2YgcGVvcGxlIG9mIHdob20gc29tZSBhcmUgZnJlZW1lbiBhbmQKCQkJCQl0aGUgb3RoZXJzIHNsYXZlcyBieSBuYXR1cmUsIGFuZCBmb3IgdGhlc2Ugc2xhdmVyeSBpcyBhbiBpbnN0aXR1dGlvbiBib3RoCgkJCQkJZXhwZWRpZW50IGFuZCBqdXN0LiA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjE2IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGF0IHRoZSBzYW1lCgkJCQkJdGltZSBpdCBpcyBub3QgZGlmZmljdWx0IHRvIHNlZSB0aGF0IHRob3NlIHdobyBhc3NlcnQgdGhlIG9wcG9zaXRlIGFyZSBhbHNvCgkJCQkJcmlnaHQgaW4gYSBtYW5uZXIuIFRoZSBmYWN0IGlzIHRoYXQgdGhlIHRlcm1zIOKAmHNsYXZlcnnigJkgYW5kCgkJCQkJ4oCYc2xhdmXigJkgYXJlIGFtYmlndW91czsgZm9yIHRoZXJlIGlzIGFsc28gc3VjaCBhIHRoaW5nIGFzIGEKCQkJCQlzbGF2ZSBvciBhIG1hbiB0aGF0IGlzIGluIHNsYXZlcnkgYnkgbGF3LCBmb3IgdGhlIGxhdyBpcyBhIHNvcnQgb2YgYWdyZWVtZW50CgkJCQkJdW5kZXIgd2hpY2ggdGhlIHRoaW5ncyBjb25xdWVyZWQgaW4gd2FyIGFyZSBzYWlkIHRvIGJlbG9uZyB0byB0aGVpciBjb25xdWVyb3JzLgoJCQkJCU5vdyB0aGlzIGNvbnZlbnRpb25hbCByaWdodCBpcyBhcnJhaWduZWQgYnkgbWFueSBqdXJpc3RzIGp1c3QgYXMgYSBzdGF0ZXNtYW4gaXMKCQkJCQlpbXBlYWNoZWQgZm9yIHByb3Bvc2luZyBhbiB1bmNvbnN0aXR1dGlvbmFsIG1lYXN1cmU7IHRoZXkgc2F5IHRoYXQgaXQgaXMKCQkJCQltb25zdHJvdXMgaWYgdGhlIHBlcnNvbiBwb3dlcmZ1bCBlbm91Z2ggdG8gdXNlIGZvcmNlLCBhbmQgc3VwZXJpb3IgaW4gcG93ZXIsIGlzCgkJCQkJdG8gaGF2ZSB0aGUgdmljdGltIG9mIGhpcyBmb3JjZSBhcyBoaXMgc2xhdmUgYW5kIHN1YmplY3Q7IGFuZCBldmVuIGFtb25nIHRoZQoJCQkJCWxlYXJuZWQgc29tZSBob2xkIHRoaXMgdmlldywgdGhvdWdoIG90aGVycyBob2xkIHRoZSBvdGhlci4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4xNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGUgcmVhc29uIG9mIHRoaXMgZGlzcHV0ZSBhbmQgd2hhdCBtYWtlcyB0aGUKCQkJCQl0aGVvcmllcyBvdmVybGFwIGlzIHRoZSBmYWN0IHRoYXQgaW4gYSBjZXJ0YWluIG1hbm5lciB2aXJ0dWUgd2hlbiBpdCBvYnRhaW5zCgkJCQkJcmVzb3VyY2VzIGhhcyBpbiBmYWN0IHZlcnkgZ3JlYXQgcG93ZXIgdG8gdXNlIGZvcmNlLCBhbmQgdGhlIHN0cm9uZ2VyIHBhcnR5CgkJCQkJYWx3YXlzIHBvc3Nlc3NlcyBzdXBlcmlvcml0eSBpbiBzb21ldGhpbmcgdGhhdCBpcyBnb29kLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIGRpZmZpY3VsdHkgdHVybnMgb24gdGhlIGFtYmlndWl0eSBvZiA8Zm9yZWlnbiBsYW5nPSJncmVlayI+4byAz4HOtc+E4b21PC9mb3JlaWduPiwg77yIYe+8iSBtb3JhbCBnb29kbmVzcywKCQkJCQkJdmlydHVlLCDvvIhi77yJIGdvb2RuZXNzIG9mIGFueSBraW5kLCBlLmcuIHN0cmVuZ3RoLjwvbm90ZT4gc28KCQkJCQl0aGF0IGl0IGlzIHRob3VnaHQgdGhhdCBmb3JjZSBjYW5ub3QgYmUgZGV2b2lkIG9mIGdvb2RuZXNzLCBidXQgdGhhdCB0aGUgZGlzcHV0ZQoJCQkJCWlzIG1lcmVseSBhYm91dCB0aGUganVzdGljZSBvZiB0aGUgbWF0dGVyIO+8iGZvciBpdCBpcyBkdWUgdG8gdGhlIG9uZQoJCQkJCXBhcnR5IGhvbGRpbmcgdGhhdCB0aGUganVzdGlmaWNhdGlvbiBvZiBhdXRob3JpdHkgaXMgZ29vZC13aWxsLCB3aGlsZSB0aGUgb3RoZXIKCQkJCQlpZGVudGlmaWVzIGp1c3RpY2Ugd2l0aCB0aGUgbWVyZSBydWxlIG9mIHRoZSBzdHJvbmdlcu+8iTsgYmVjYXVzZQoJCQkJCW9idmlvdXNseSBpZiB0aGVzZSB0aGVvcmllcyBiZSBzZXBhcmF0ZWQgYXBhcnQsPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50aGUgb3RoZXIgdGhlb3JpZXMgaGF2ZSBubyBmb3JjZSBvciBwbGF1c2liaWxpdHkgYXQgYWxsLAoJCQkJCWltcGx5aW5nIHRoYXQgdGhlIHN1cGVyaW9yIGluIGdvb2RuZXNzIGhhcyBubyBjbGFpbSB0byBydWxlIGFuZCBiZSBtYXN0ZXIuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMTgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgc29tZSBwZXJzb25zLCBzaW1wbHkKCQkJCQljbGluZ2luZywgYXMgdGhleSB0aGluaywgdG8gcHJpbmNpcGxlIG9mIGp1c3RpY2Ug77yIZm9yIHRoZSBsYXcgaXMgYQoJCQkJCXByaW5jaXBsZSBvZiBqdXN0aWNl77yJLCBhc3NlcnQgdGhhdCB0aGUgZW5zbGF2ZW1lbnQgb2YgcHJpc29uZXJzIG9mIHdhcgoJCQkJCWlzIGp1c3Q7IHlldCBhdCB0aGUgc2FtZSB0aW1lIHRoZXkgZGVueSB0aGUgYXNzZXJ0aW9uLCBmb3IgdGhlcmUgaXMgdGhlCgkJCQkJcG9zc2liaWxpdHkgdGhhdCB3YXJzIG1heSBiZSB1bmp1c3QgaW4gdGhlaXIgb3JpZ2luIGFuZCBvbmUgd291bGQgYnkgbm8gbWVhbnMKCQkJCQlhZG1pdCB0aGF0IGEgbWFuIHRoYXQgZG9lcyBub3QgZGVzZXJ2ZSBzbGF2ZXJ5IGNhbiBiZSByZWFsbHkgYQoJCQkJCXNsYXZl4oCUb3RoZXJ3aXNlIHdlIHNoYWxsIGhhdmUgdGhlIHJlc3VsdCB0aGF0IHBlcnNvbnMgcmVwdXRlZCBvZiB0aGUKCQkJCQloaWdoZXN0IG5vYmlsaXR5IGFyZSBzbGF2ZXMgYW5kIHRoZSBkZXNjZW5kYW50cyBvZiBzbGF2ZXMgaWYgdGhleSBoYXBwZW4gdG8gYmUKCQkJCQl0YWtlbiBwcmlzb25lcnMgb2Ygd2FyIGFuZCBzb2xkLiBUaGVyZWZvcmUgdGhleSBkbyBub3QgbWVhbiB0byBhc3NlcnQgdGhhdAoJCQkJCUdyZWVrcyB0aGVtc2VsdmVzIGlmIHRha2VuIHByaXNvbmVycyBhcmUgc2xhdmVzLCBidXQgdGhhdCBiYXJiYXJpYW5zIGFyZS4gWWV0CgkJCQkJd2hlbiB0aGV5IHNheSB0aGlzLCB0aGV5IGFyZSBtZXJlbHkgc2Vla2luZyBmb3IgdGhlIHByaW5jaXBsZXMgb2YgbmF0dXJhbAoJCQkJCXNsYXZlcnkgb2Ygd2hpY2ggd2Ugc3Bva2UgYXQgdGhlIG91dHNldDsgZm9yIHRoZXkgYXJlIGNvbXBlbGxlZCB0byBzYXkgdGhhdAoJCQkJCXRoZXJlIGV4aXN0IGNlcnRhaW4gcGVyc29ucyB3aG8gYXJlIGVzc2VudGlhbGx5IHNsYXZlcyBldmVyeXdoZXJlIGFuZCBjZXJ0YWluCgkJCQkJb3RoZXJzIHdobyBhcmUgc28gbm93aGVyZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4xOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB0aGUKCQkJCQlzYW1lIGFwcGxpZXMgYWxzbyBhYm91dCBub2JpbGl0eTogb3VyIG5vYmxlcyBjb25zaWRlciB0aGVtc2VsdmVzIG5vYmxlIG5vdCBvbmx5CgkJCQkJaW4gdGhlaXIgb3duIGNvdW50cnkgYnV0IGV2ZXJ5d2hlcmUsIGJ1dCB0aGV5IHRoaW5rIHRoYXQgYmFyYmFyaWFuIG5vYmxlbWVuIGFyZQoJCQkJCW9ubHkgbm9ibGUgaW4gdGhlaXIgb3duIGNvdW50cnnigJR3aGljaCBpbXBsaWVzIHRoYXQgdGhlcmUgYXJlIHR3byBraW5kcwoJCQkJCW9mIG5vYmlsaXR5IGFuZCBvZiBmcmVlZG9tLCBvbmUgYWJzb2x1dGUgYW5kIHRoZSBvdGhlciByZWxhdGl2ZSwgYXMgSGVsZW4gc2F5cwoJCQkJCWluIFRoZW9kZWN0ZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgdHJhZ2ljIHBvZXQsIGEgZnJpZW5kIG9mCgkJCQkJCUFyaXN0b3RsZS48L25vdGU+OiA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9ImlhbWJpYyI+QnV0IHdobyB3b3VsZCBkYXJlIHRvIGNhbGwgbWUgbWVuaWFsLDwvbD4KCQkJCQkJPGw+VGhlIHNjaW9uIG9mIGEgdHdvZm9sZCBzdG9jayBkaXZpbmU/PC9sPgoJCQkJCTwvcXVvdGU+IFlldCBpbiBzbyBzcGVha2luZyB0aGV5IG1ha2Ugbm90aGluZyBidXQgdmlydHVlIGFuZCB2aWNlIHRoZQoJCQkJCWRpc3RpbmN0aW9uIGJldHdlZW4gc2xhdmUgYW5kIGZyZWUsIHRoZSBub2JsZSBhbmQgdGhlIGJhc2UtYm9ybjsgPG1pbGVzdG9uZSBuPSIxMjU1YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+Zm9yIHRoZXkKCQkJCQlhc3N1bWUgdGhhdCBqdXN0IGFzIGZyb20gYSBtYW4gc3ByaW5ncyBhIG1hbiBhbmQgZnJvbSBicnV0ZXMgYSBicnV0ZSwgc28gYWxzbwoJCQkJCWZyb20gZ29vZCBwYXJlbnRzIGNvbWVzIGEgZ29vZCBzb24gYnV0IGFzIGEgbWF0dGVyIG9mIGZhY3QgbmF0dXJlIGZyZXF1ZW50bHkKCQkJCQl3aGlsZSBpbnRlbmRpbmcgdG8gZG8gdGhpcyBpcyB1bmFibGUgdG8gYnJpbmcgaXQgYWJvdXQuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyBjbGVhciB0aGVyZWZvcmUgdGhhdCB0aGVyZSBpcyBzb21lIHJlYXNvbiBmb3IgdGhpcwoJCQkJCWRpc3B1dGUsIGFuZCB0aGF0IGluIHNvbWUgaW5zdGFuY2VzIGl0IGlzIG5vdCB0aGUgY2FzZSB0aGF0IG9uZSBzZXQgYXJlIHNsYXZlcwoJCQkJCWFuZCB0aGUgb3RoZXIgZnJlZW1lbiBieSBuYXR1cmU7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMjAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgYWxzbyB0aGF0IGluIHNvbWUgaW5zdGFuY2VzIHN1Y2ggYSBkaXN0aW5jdGlvbiBkb2VzIGV4aXN0LCB3aGVuIHNsYXZlcnkKCQkJCQlmb3IgdGhlIG9uZSBhbmQgbWFzdGVyc2hpcCBmb3IgdGhlIG90aGVyIGFyZSBhZHZhbnRhZ2VvdXMgYW5kIGp1c3QsIGFuZCBpdCBpcwoJCQkJCXByb3BlciBmb3IgdGhlIG9uZSBwYXJ0eSB0byBiZSBnb3Zlcm5lZCBhbmQgZm9yIHRoZSBvdGhlciB0byBnb3Zlcm4gYnkgdGhlIGZvcm0KCQkJCQlvZiBnb3Zlcm5tZW50IGZvciB3aGljaCB0aGV5IGFyZSBieSBuYXR1cmUgZml0dGVkLCBhbmQgdGhlcmVmb3JlIGJ5IHRoZSBleGVyY2lzZQoJCQkJCW9mIG1hc3RlcnNoaXAsIHdoaWxlIHRvIGdvdmVybiBiYWRseSBpcyB0byBnb3Zlcm4gZGlzYWR2YW50YWdlb3VzbHkgZm9yIGJvdGgKCQkJCQlwYXJ0aWVzIO+8iGZvciB0aGUgc2FtZSB0aGluZyBpcyBhZHZhbnRhZ2VvdXMgZm9yIGEgcGFydCBhbmQgZm9yIHRoZQoJCQkJCXdob2xlIGJvZHkgb3IgdGhlIHdob2xlIHNvdWwsIGFuZCB0aGUgc2xhdmUgaXMgYSBwYXJ0IG9mIHRoZSBtYXN0ZXLigJRoZQoJCQkJCWlzLCBhcyBpdCB3ZXJlLCBhIHBhcnQgb2YgdGhlIGJvZHksIGFsaXZlIGJ1dCB5ZXQgc2VwYXJhdGVkIGZyb20gaXQ7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5oZW5jZSB0aGVyZSBpcyBhIGNlcnRhaW4gY29tbXVuaXR5IG9mCgkJCQkJaW50ZXJlc3QgYW5kIGZyaWVuZHNoaXAgYmV0d2VlbiBzbGF2ZSBhbmQgbWFzdGVyIGluIGNhc2VzIHdoZW4gdGhleSBoYXZlIGJlZW4KCQkJCQlxdWFsaWZpZWQgYnkgbmF0dXJlIGZvciB0aG9zZSBwb3NpdGlvbnMsIGFsdGhvdWdoIHdoZW4gdGhleSBkbyBub3QgaG9sZCB0aGVtIGluCgkJCQkJdGhhdCB3YXkgYnV0IGJ5IGxhdyBhbmQgYnkgY29uc3RyYWludCBvZiBmb3JjZSB0aGUgb3Bwb3NpdGUgaXMgdGhlCgkJCQkJCWNhc2XvvIkuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgZXZlbiBmcm9tIHRoZXNlCgkJCQkJY29uc2lkZXJhdGlvbnMgaXQgaXMgY2xlYXIgdGhhdCB0aGUgYXV0aG9yaXR5IG9mIGEgbWFzdGVyIG92ZXIgc2xhdmVzIGlzIG5vdCB0aGUKCQkJCQlzYW1lIGFzIHRoZSBhdXRob3JpdHkgb2YgYSBtYWdpc3RyYXRlIGluIGEgcmVwdWJsaWMsIG5vciBhcmUgYWxsIGZvcm1zIG9mCgkJCQkJZ292ZXJubWVudCB0aGUgc2FtZSwgYXMgc29tZSBhc3NlcnQuIFJlcHVibGljYW4gZ292ZXJubWVudCBjb250cm9scyBtZW4gd2hvIGFyZQoJCQkJCWJ5IG5hdHVyZSBmcmVlLCB0aGUgbWFzdGVyJ3MgYXV0aG9yaXR5IG1lbiB3aG8gYXJlIGJ5IG5hdHVyZSBzbGF2ZXM7IGFuZCB0aGUKCQkJCQlnb3Zlcm5tZW50IG9mIGEgaG91c2Vob2xkIGlzIG1vbmFyY2h5IO+8iHNpbmNlIGV2ZXJ5IGhvdXNlIGlzIGdvdmVybmVkIGJ5CgkJCQkJYSBzaW5nbGUgcnVsZXLvvIksPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz53aGVyZWFzCgkJCQkJc3RhdGVzbWFuc2hpcCBpcyB0aGUgZ292ZXJubWVudCBvZiBtZW4gZnJlZSBhbmQgZXF1YWwuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgdGVybSDigJhtYXN0ZXLigJkgdGhlcmVmb3JlCgkJCQkJZGVub3RlcyB0aGUgcG9zc2Vzc2lvbiBub3Qgb2YgYSBjZXJ0YWluIGJyYW5jaCBvZiBrbm93bGVkZ2UgYnV0IG9mIGEgY2VydGFpbgoJCQkJCWNoYXJhY3RlciwgYW5kIHNpbWlsYXJseSBhbHNvIHRoZSB0ZXJtcyDigJhzbGF2ZeKAmSBhbmQKCQkJCQnigJhmcmVlbWFuLuKAmSBZZXQgdGhlcmUgbWlnaHQgYmUgYSBzY2llbmNlIG9mIG1hc3RlcnNoaXAgYW5kIGEKCQkJCQlzbGF2ZSdzIHNjaWVuY2XigJR0aGUgbGF0dGVyIGJlaW5nIHRoZSBzb3J0IG9mIGtub3dsZWRnZSB0aGF0IHVzZWQgdG8gYmUKCQkJCQlpbXBhcnRlZCBieSB0aGUgcHJvZmVzc29yIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3lyYWN1c2UiIGtleT0icGVyc2V1cyxTeXJhY3VzZSI+U3lyYWN1c2U8L3BsYWNlTmFtZT4g77yIZm9yIHRoZXJlIHVzZWQgdG8gYmUgYSBtYW4gdGhlcmUgd2hvIGZvciBhCgkJCQkJZmVlIGdhdmUgbGVzc29ucyB0byBzZXJ2YW50cyBpbiB0aGVpciBvcmRpbmFyeSBkdXRpZXPvvIk7IGFuZCBpbmRlZWQKCQkJCQl0aGVyZSBtaWdodCBiZSBtb3JlIGFkdmFuY2VkIHNjaWVudGlmaWMgc3R1ZHkgb2Ygc3VjaCBtYXR0ZXJzLCBmb3IgaW5zdGFuY2UgYQoJCQkJCXNjaWVuY2Ugb2YgY29va2VyeSBhbmQgdGhlIG90aGVyIHN1Y2gga2luZHMgb2YgZG9tZXN0aWMgc2VydmljZeKAlGZvcgoJCQkJCWRpZmZlcmVudCBzZXJ2YW50cyBoYXZlIGRpZmZlcmVudCBmdW5jdGlvbnMsIHNvbWUgbW9yZSBob25vcmFibGUgYW5kIHNvbWUgbW9yZQoJCQkJCW1lbmlhbCwgYW5kIGFzIHRoZSBwcm92ZXJiIHNheXMsIDxxdW90ZSB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIG1ldD0iaWFtYmljIj5TbGF2ZSBiZWZvcmUgc2xhdmUgYW5kIG1hc3RlciBiZWZvcmUgbWFzdGVyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UHJvYmFibHkgZnJvbSBhIGNvbWVkeSBvZiBBcmlzdG90bGUncwoJCQkJCQkJCWNvbnRlbXBvcmFyeSBQaGlsZW1vbi48L25vdGU+PC9sPgoJCQkJCTwvcXVvdGU+CgkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4yMyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSBzbGF2ZSdzIHNjaWVuY2VzIHRoZW4gYXJlIGFsbAoJCQkJCXRoZSB2YXJpb3VzIGJyYW5jaGVzIG9mIGRvbWVzdGljIHdvcms7IHRoZSBtYXN0ZXIncyBzY2llbmNlIGlzIHRoZSBzY2llbmNlIG9mCgkJCQkJZW1wbG95aW5nIHNsYXZlc+KAlGZvciB0aGUgbWFzdGVyJ3MgZnVuY3Rpb24gY29uc2lzdHMgbm90IGluIGFjcXVpcmluZwoJCQkJCXNsYXZlcyBidXQgaW4gZW1wbG95aW5nIHRoZW0uIFRoaXMgc2NpZW5jZSBob3dldmVyIGlzIG9uZSBvZiBubyBwYXJ0aWN1bGFyCgkJCQkJaW1wb3J0YW5jZSBvciBkaWduaXR5OiB0aGUgbWFzdGVyIG11c3Qga25vdyBob3cgdG8gZGlyZWN0IHRoZSB0YXNrcyB3aGljaCB0aGUKCQkJCQlzbGF2ZSBtdXN0IGtub3cgaG93IHRvIGV4ZWN1dGUuIFRoZXJlZm9yZSBhbGwgcGVvcGxlIHJpY2ggZW5vdWdoIHRvIGJlIGFibGUgdG8KCQkJCQlhdm9pZCBwZXJzb25hbCB0cm91YmxlIGhhdmUgYSBzdGV3YXJkIHdobyB0YWtlcyB0aGlzIG9mZmljZSwgd2hpbGUgdGhleQoJCQkJCXRoZW1zZWx2ZXMgZW5nYWdlIGluIHBvbGl0aWNzIG9yIHBoaWxvc29waHkuIFRoZSBzY2llbmNlIG9mIGFjcXVpcmluZyBzbGF2ZXMgaXMKCQkJCQlkaWZmZXJlbnQgYm90aCBmcm9tIHRoZWlyIG93bmVyc2hpcCBhbmQgdGhlaXIgZGlyZWN0aW9u4oCUdGhhdCBpcywgdGhlCgkJCQkJanVzdCBhY3F1aXJpbmcgb2Ygc2xhdmVzLCB3aGljaCBpcyBha2luIHRvIHRoZSBhcnQgb2Ygd2FyIG9yIHRoYXQgb2YgdGhlIGNoYXNlLgoJCQkJCUxldCB0aGlzIHRoZW4gc3RhbmQgYXMgb3VyIGRlZmluaXRpb24gb2Ygc2xhdmUgYW5kIG1hc3Rlci4gPG1pbGVzdG9uZSBuPSIxMjU2YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGxldCB1cyBmb2xsb3cgb3VyIG5vcm1hbCBtZXRob2QgYW5kIGludmVzdGlnYXRlCgkJCQkJZ2VuZXJhbGx5IHRoZSBuYXR1cmUgb2YgYWxsIGtpbmRzIG9mIHByb3BlcnR5IGFuZCB0aGUgYXJ0IG9mIGdldHRpbmcgd2VhbHRoLAoJCQkJCWluYXNtdWNoIGFzIHdlIHNhdyB0aGUgc2xhdmUgdG8gYmUgb25lIGRpdmlzaW9uIG9mIHByb3BlcnR5LiBJbiB0aGUgZmlyc3QgcGxhY2UKCQkJCQl0aGVyZWZvcmUgb25lIG1pZ2h0IHJhaXNlIHRoZSBxdWVzdGlvbiB3aGV0aGVyIHRoZSBhcnQgb2YgZ2V0dGluZyB3ZWFsdGggaXMgdGhlCgkJCQkJc2FtZSBhcyB0aGF0IG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50LCBvciBhIHBhcnQgb2YgaXQsIG9yIHN1YnNpZGlhcnkgdG8gaXQ7IGFuZAoJCQkJCWlmIHN1YnNpZGlhcnksIHdoZXRoZXIgaXQgaXMgc28gaW4gdGhlIHNlbnNlIGluIHdoaWNoIHRoZSBhcnQgb2YgbWFraW5nIHNodXR0bGVzCgkJCQkJaXMgc3Vic2lkaWFyeSB0byB0aGUgYXJ0IG9mIHdlYXZpbmcgb3IgaW4gdGhhdCBpbiB3aGljaCB0aGUgYXJ0IG9mIGNhc3RpbmcKCQkJCQlicm9uemUgaXMgc3Vic2lkaWFyeSB0byB0aGUgbWFraW5nIG9mIHN0YXR1ZXMg77yIZm9yIHRoZSB0d28gYXJlIG5vdAoJCQkJCXN1YnNpZGlhcnkgaW4gdGhlIHNhbWUgd2F5LCBidXQgc2h1dHRsZS1tYWtpbmcgc3VwcGxpZXMgdG9vbHMgd2hlcmVhcwoJCQkJCWJyb256ZS1mb3VuZGluZyBzdXBwbGllcyBtYXRlcmlhbOKAlGFuZCBieSBtYXRlcmlhbCBJIG1lYW4gdGhlIHN1YnN0YW5jZQoJCQkJCW91dCBvZiB3aGljaCBjZXJ0YWluIHdvcmsgaXMgcHJvZHVjZWQsIGZvciBleGFtcGxlIGZsZWVjZXMgYXJlIG1hdGVyaWFsIGZvciBhCgkJCQkJd2VhdmVyIGFuZCBicm9uemUgZm9yIGEgc3RhdHVhcnnvvIkuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPk5vdyBpdCBpcyBjbGVhciB0aGF0IHdlYWx0aC1nZXR0aW5nIGlzIG5vdCB0aGUgc2FtZSBhcnQgYXMKCQkJCQlob3VzZWhvbGQgbWFuYWdlbWVudCwgZm9yIHRoZSBmdW5jdGlvbiBvZiB0aGUgZm9ybWVyIGlzIHRvIHByb3ZpZGUgYW5kIHRoYXQgb2YKCQkJCQl0aGUgbGF0dGVyIHRvIHVzZeKAlGZvciB3aGF0IHdpbGwgYmUgdGhlIGFydCB0aGF0IHdpbGwgdXNlIHRoZSBjb250ZW50cwoJCQkJCW9mIHRoZSBob3VzZSBpZiBub3QgdGhlIGFydCBvZiBob3VzZWhvbGQgbWFuYWdlbWVudD8gYnV0IHdoZXRoZXIgd2VhbHRoLWdldHRpbmcKCQkJCQlpcyBhIHBhcnQgb2YgdGhlIGFydCBvZiBob3VzZWhvbGQgbWFuYWdlbWVudCwgb3IgYSBkaWZmZXJlbnQgc29ydCBvZiBzY2llbmNlLCBpcwoJCQkJCW9wZW4gdG8gZGViYXRlLiBGb3IgaWYgaXQgaXMgdGhlIGZ1bmN0aW9uIG9mIHRoZSBnZXR0ZXIgb2Ygd2VhbHRoIHRvIHN0dWR5IHRoZQoJCQkJCXNvdXJjZSBmcm9tIHdoaWNoIG1vbmV5IGFuZCBwcm9wZXJ0eSBhcmUgdG8gYmUgcHJvY3VyZWQsIC4gLiAuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Tb21lIHdvcmRzIHNlZW0gdG8gaGF2ZSBmYWxsZW4gb3V0IGluIHRoZQoJCQkJCQlHcmVlay48L25vdGU+IEJ1dCBwcm9wZXJ0eSBhbmQgcmljaGVzIGNvbXByaXNlIG1hbnkgZGl2aXNpb25zOyBoZW5jZSBmaXJzdAoJCQkJCW9mIGFsbCBpcyBodXNiYW5kcnkgYSBkaXZpc2lvbiBvZiB0aGUgaG91c2Vob2xkIGFydCwgb3IgaXMgaXQgYSBkaWZmZXJlbnQga2luZAoJCQkJCW9mIHNjaWVuY2U/IGFuZCBzbyBpbiBnZW5lcmFsIG9mIHRoZSBzdXBlcmludGVuZGVuY2UgYW5kIGFjcXVpc2l0aW9uIG9mIGFydGljbGVzCgkJCQkJb2YgZm9vZC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGZ1cnRoZXJtb3JlLCB0aGVyZSBhcmUKCQkJCQltYW55IHNvcnRzIG9mIGZvb2QsPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5vd2luZyB0byB3aGljaAoJCQkJCWJvdGggYW5pbWFscyBhbmQgbWVuIGhhdmUgbWFueSBtb2RlcyBvZiBsaWZlOyBmb3IgaXQgaXMgaW1wb3NzaWJsZSB0byBsaXZlCgkJCQkJd2l0aG91dCBmb29kLCBzbyB0aGF0IHRoZSBkaWZmZXJlbmNlcyBvZiBmb29kIGhhdmUgbWFkZSB0aGUgbGl2ZXMgb2YgYW5pbWFscwoJCQkJCWRpZmZlcmVudC4gQW1vbmcgd2lsZCBhbmltYWxzIHNvbWUgYXJlIG5vbWFkaWMgYW5kIG90aGVycyBzb2xpdGFyeSwgYWNjb3JkaW5nIHRvCgkJCQkJd2hpY2hldmVyIGhhYml0IGlzIGFkdmFudGFnZW91cyBmb3IgdGhlaXIgc3VwcGx5IG9mIGZvb2QsIGJlY2F1c2Ugc29tZSBvZiB0aGVtCgkJCQkJYXJlIGNhcm5pdm9yb3VzLCBvdGhlcnMgZ3JhbWluaXZvcm91cywgYW5kIG90aGVycyBlYXQgYWxsIGtpbmRzIG9mIGZvb2Q7IHNvIHRoYXQKCQkJCQluYXR1cmUgaGFzIGRpZmZlcmVudGlhdGVkIHRoZWlyIG1vZGVzIG9mIGxpZmUgdG8gc3VpdCB0aGVpciBmYWNpbGl0aWVzIGFuZCB0aGVpcgoJCQkJCXByZWRpbGVjdGlvbiBmb3IgdGhvc2UgYXJ0aWNsZXMgb2YgZm9vZC4gQW5kIGFzIGRpZmZlcmVudCBraW5kcyBvZiBhbmltYWxzIGJ5CgkJCQkJbmF0dXJlIHJlbGlzaCBkaWZmZXJlbnQgc29ydHMgb2YgZm9vZCwgYW5kIG5vdCBlYWNoIGtpbmQgdGhlIHNhbWUsIGV2ZW4gd2l0aGluCgkJCQkJdGhlIGNsYXNzZXMgb2YgY2Fybml2b3JvdXMgYW5kIGdyYW1pbml2b3JvdXMgYW5pbWFscyB0aGVpciBtb2RlcyBvZiBsaWZlIGRpZmZlcgoJCQkJCWZyb20gb25lIGFub3RoZXIuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzaW1pbGFybHkgaW4KCQkJCQl0aGUgaHVtYW4gcmFjZSBhbHNvLCBmb3IgdGhlcmUgYXJlIHdpZGUgZGlmZmVyZW5jZXMgb2YgbGlmZSBhbW9uZyBtYW5raW5kLiBUaGUKCQkJCQlpZGxlc3QgbWVuIGFyZSBub21hZHMg77yIZm9yIHRvIHByb2N1cmUgZm9vZCBmcm9tIGRvbWVzdGljYXRlZCBhbmltYWxzCgkJCQkJaW52b2x2ZXMgbm8gdG9pbCBvciBpbmR1c3RyeSwgYnV0IGFzIGl0IGlzIG5lY2Vzc2FyeSBmb3IgdGhlIGhlcmRzIHRvIG1vdmUgZnJvbQoJCQkJCXBsYWNlIHRvIHBsYWNlIGJlY2F1c2Ugb2YgdGhlIHBhc3R1cmVzLCB0aGUgcGVvcGxlIHRoZW1zZWx2ZXMgYXJlIGZvcmNlZCB0bwoJCQkJCWZvbGxvdyBhbG9uZyB3aXRoIHRoZW0sIGFzIHRob3VnaCB0aGV5IHdlcmUgZmFybWluZyBhIGxpdmUgZmFybe+8iS4gT3RoZXIKCQkJCQltZW4gbGl2ZSBmcm9tIGh1bnRpbmcsIGFuZCBkaWZmZXJlbnQgcGVvcGxlIGZyb20gZGlmZmVyZW50IGtpbmRzIG9mIGh1bnRpbmcsIGZvcgoJCQkJCWluc3RhbmNlIHNvbWUgZnJvbSBicmlnYW5kYWdlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcwoJCQkJCQnigJhzbGF2ZS1yYWlkaW5nLOKAmSBjZi4gMy45LCB0aGUgYXBwcm9wcmlhdGlvbiBvZiB0aGUKCQkJCQkJ4oCYbGl2ZSB0b29sc+KAmSB0aGF0IGFyZSBhIHBhcnQgb2YgbmF0dXJlJ3Mgc3VwcGxpZXM7IGJ1dAoJCQkJCQkJPGJpYmwgZGVmYXVsdD0iTk8iIG49IlRodWMuIDEuNSIgdmFsaWQ9InllcyI+VGh1Yy4gMS41PC9iaWJsPiBzcGVha3Mgb2YgYnJpZ2FuZGFnZSBhbmQgcGlyYWN5IGFzCgkJCQkJCWNvbW1vbiBpbiBlYXJsaWVyIHRpbWVzLCBhbmQgYXMgc3RpbGwgZGVlbWVkIHJlc3BlY3RhYmxlIHByb2Zlc3Npb25zIGluCgkJCQkJCU5vcnRoZXJuIEdyZWVjZS48L25vdGU+IG90aGVycyBmcm9tIGZpc2hpbmfigJR0aGVzZSBhcmUgdGhvc2UgdGhhdAoJCQkJCWR3ZWxsIG9uIHRoZSBiYW5rcyBvZiBsYWtlcywgbWFyc2hlcyBhbmQgcml2ZXJzIG9yIG9mIGEgc2VhIHN1aXRhYmxlIGZvcgoJCQkJCWZpc2hpbmcs4oCUYW5kIG90aGVycyBsaXZlIG9uIHdpbGQgYmlyZHMgYW5kIGFuaW1hbHMuIEJ1dCB0aGUgbGFyZ2VzdAoJCQkJCWNsYXNzIG9mIG1lbiBsaXZlIGZyb20gdGhlIGxhbmQgYW5kIHRoZSBmcnVpdHMgb2YgY3VsdGl2YXRpb24uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoaXMgdGhlbiB2aXJ0dWFsbHkgY29tcGxldGVzIHRoZSBsaXN0IG9mCgkJCQkJdGhlIHZhcmlvdXMgbW9kZXMgb2YgbGlmZSwgdGhvc2UgYXQgbGVhc3QgdGhhdCBoYXZlIHRoZWlyIGluZHVzdHJ5IHNwcnVuZyBmcm9tCgkJCQkJdGhlbXNlbHZlcyBhbmQgZG8gbm90IHByb2N1cmUgdGhlaXIgZm9vZCBieSBiYXJ0ZXIgYW5kIHRyYWRl4oCUCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTI1NmIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnRoZSBsaXZlcyBvZiB0aGUgaGVyZHNtYW4sIHRoZSBicmlnYW5kLCB0aGUgZmlzaGVybWFuLCB0aGUKCQkJCQlodW50ZXIsIHRoZSBodXNiYW5kLW1hbi4gT3RoZXJzIGFsc28gbGl2ZSBwbGVhc2FudGx5IGJ5IGNvbWJpbmluZyBzb21lIG9mIHRoZXNlCgkJCQkJcHVyc3VpdHMsIHN1cHBsZW1lbnRpbmcgdGhlIG1vcmUgZGVmaWNpZW50IGxpZmUgd2hlcmUgaXQgaGFwcGVucyB0byBmYWxsIHNob3J0CgkJCQkJaW4gcmVnYXJkIHRvIGJlaW5nIHNlbGYtc3VmZmljaW5nOiBmb3IgaW5zdGFuY2UsIHNvbWUgY29tYmluZSBhIHBhc3RvcmFsIGxpZmUKCQkJCQlhbmQgYnJpZ2FuZGFnZSwgb3RoZXJzIGh1c2JhbmRyeSBhbmQgaHVudGluZywgYW5kIHNpbWlsYXJseSB3aXRoIHRoZQoJCQkJCW90aGVyc+KAlHRoZXkgcGFzcyB0aGVpciB0aW1lIGluIHN1Y2ggYSBjb21iaW5hdGlvbiBvZiBwdXJzdWl0cyBhcyB0aGVpcgoJCQkJCW5lZWQgY29tcGVscy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy42IiB1bml0PSJMb2ViIGNoYXAiIC8+UHJvcGVydHkgb2YgdGhpcyBzb3J0CgkJCQkJdGhlbiBzZWVtcyB0byBiZSBiZXN0b3dlZCBieSBuYXR1cmUgaGVyc2VsZiB1cG9uIGFsbCwgYXMgaW1tZWRpYXRlbHkgdXBvbiB0aGVpcgoJCQkJCWZpcnN0IGNvbWluZyBpbnRvIGV4aXN0ZW5jZSwgc28gYWxzbyB3aGVuIHRoZXkgaGF2ZSByZWFjaGVkIG1hdHVyaXR5LiBGb3IgZXZlbgoJCQkJCWF0IHRoZSBvcmlnaW5hbCBjb21pbmcgaW50byBleGlzdGVuY2Ugb2YgdGhlIHlvdW5nIHNvbWUga2luZHMgb2YgYW5pbWFscyBicmluZwoJCQkJCWZvcnRoIHdpdGggdGhlbSBhdCBiaXJ0aCBlbm91Z2ggc3VzdGVuYW5jZSB0byBzdWZmaWNlIHVudGlsIHRoZSBvZmZzcHJpbmcgY2FuCgkJCQkJcHJvdmlkZSBmb3IgaXRzZWxmLCBmb3IgZXhhbXBsZSBhbGwgdGhlIHNwZWNpZXMgdGhhdCBiZWFyIHRoZWlyIHlvdW5nIGluIHRoZQoJCQkJCWZvcm0gb2YgbGFydmFlIG9yIGluIGVnZ3MuIFRoZSB2aXZpcGFyb3VzIHNwZWNpZXMgaGF2ZSBzdXN0ZW5hbmNlIGZvciB0aGVpcgoJCQkJCW9mZnNwcmluZyBpbnNpZGUgdGhlbXNlbHZlcyBmb3IgYSBjZXJ0YWluIHBlcmlvZCwgdGhlIHN1YnN0YW5jZSBjYWxsZWQgbWlsay4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy43IiB1bml0PSJMb2ViIGNoYXAiIC8+U28gdGhhdCBjbGVhcmx5IHdlIG11c3Qgc3VwcG9zZQoJCQkJCXRoYXQgbmF0dXJlIGFsc28gcHJvdmlkZXMgZm9yIHRoZW0gaW4gYSBzaW1pbGFyIHdheSB3aGVuIGdyb3duIHVwLCBhbmQgdGhhdAoJCQkJCXBsYW50cyBleGlzdCBmb3IgdGhlIHNha2Ugb2YgYW5pbWFscyBhbmQgdGhlIG90aGVyIGFuaW1hbHMgZm9yIHRoZSBnb29kIG9mIG1hbiwKCQkJCQl0aGUgZG9tZXN0aWMgc3BlY2llcyBib3RoIGZvciBoaXMgc2VydmljZSBhbmQgZm9yIGhpcyBmb29kLCBhbmQgaWYgbm90IGFsbCBhdAoJCQkJCWFsbCBldmVudHMgbW9zdCBvZiB0aGUgd2lsZCBvbmVzIGZvciB0aGUgc2FrZSBvZiBoaXMgZm9vZCBhbmQgb2YgaGlzIHN1cHBsaWVzIG9mCgkJCQkJb3RoZXIga2luZHMsIGluIG9yZGVyIHRoYXQ8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRoZXkgbWF5CgkJCQkJZnVybmlzaCBoaW0gYm90aCB3aXRoIGNsb3RoaW5nIGFuZCB3aXRoIG90aGVyIGFwcGxpYW5jZXMuIElmIHRoZXJlZm9yZSBuYXR1cmUKCQkJCQltYWtlcyBub3RoaW5nIHdpdGhvdXQgcHVycG9zZSBvciBpbiB2YWluLCBpdCBmb2xsb3dzIHRoYXQgbmF0dXJlIGhhcyBtYWRlIGFsbAoJCQkJCXRoZSBhbmltYWxzIGZvciB0aGUgc2FrZSBvZiBtZW4uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlIGV2ZW4gdGhlIGFydCBvZiB3YXIgd2lsbCBieSBuYXR1cmUgYmUgaW4gYSBtYW5uZXIgYW4gYXJ0IG9mIGFjcXVpc2l0aW9uCgkJCQkJ77yIZm9yIHRoZSBhcnQgb2YgaHVudGluZyBpcyBhIHBhcnQgb2YgaXTvvIkgdGhhdCBpcyBwcm9wZXJseQoJCQkJCWVtcGxveWVkIGJvdGggYWdhaW5zdCB3aWxkIGFuaW1hbHMgYW5kIGFnYWluc3Qgc3VjaCBvZiBtYW5raW5kIGFzIHRob3VnaAoJCQkJCWRlc2lnbmVkIGJ5IG5hdHVyZSBmb3Igc3ViamVjdGlvbiByZWZ1c2UgdG8gc3VibWl0IHRvIGl0LCBpbmFzbXVjaCBhcyB0aGlzCgkJCQkJd2FyZmFyZSBpcyBieSBuYXR1cmUganVzdC48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPk9uZSBraW5kIG9mIGFjcXVpc2l0aW9uCgkJCQkJdGhlcmVmb3JlIGluIHRoZSBvcmRlciBvZiBuYXR1cmUgaXMgYSBwYXJ0IG9mIHRoZSBob3VzZWhvbGQgYXJ0LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UmFzc293IHdvdWxkIHRyYW5zcG9zZSB0aGUgY2xhdXNlCgkJCQkJCe+8iHdpdGggYSBzbGlnaHQgYWx0ZXJhdGlvbu+8iSB0byBnaXZlIOKAmG9mIHRoZQoJCQkJCQlob3VzZWhvbGQgYXJ0LCB0aGF0IGlzLCB0aGUgYWNxdWlzaXRpb24gb2YgdGhvc2UgZ29vZHMgY2FwYWJsZSBvZgoJCQkJCQlhY2N1bXVsYXRpb24gdGhhdCBhcmUgbmVjZXNzYXJ5IGZvciBsaWZlIGFuZCB1c2VmdWwgZm9yIHRoZSBjb21tdW5pdHkgb2YKCQkJCQkJY2l0eSBhbmQgaG91c2Vob2xkLCBhIHN1cHBseSBvZiB3aGljaCBtdXN0IGJlIGZvcnRoY29taW5nIG9yIGVsc2UgdGhlIGFydAoJCQkJCQltdXN0IHByb2N1cmUgaXQgdG8gYmUgZm9ydGhjb21pbmcu4oCZPC9ub3RlPiBpbiBhY2NvcmRhbmNlIHdpdGgKCQkJCQl3aGljaCBlaXRoZXIgdGhlcmUgbXVzdCBiZSBmb3J0aGNvbWluZyBvciBlbHNlIHRoYXQgYXJ0IG11c3QgcHJvY3VyZSB0byBiZQoJCQkJCWZvcnRoY29taW5nIGEgc3VwcGx5IG9mIHRob3NlIGdvb2RzLCBjYXBhYmxlIG9mIGFjY3VtdWxhdGlvbiwgd2hpY2ggYXJlCgkJCQkJbmVjZXNzYXJ5IGZvciBsaWZlIGFuZCB1c2VmdWwgZm9yIHRoZSBjb21tdW5pdHkgb2YgY2l0eSBvciBob3VzZWhvbGQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpdCBpcyBvZiB0aGVzZSBnb29kcyB0aGF0IHJpY2hlcyBpbiB0aGUKCQkJCQl0cnVlIHNlbnNlIGF0IGFsbCBldmVudHMgc2VlbSB0byBjb25zaXN0LiBGb3IgdGhlIGFtb3VudCBvZiBzdWNoIHByb3BlcnR5CgkJCQkJc3VmZmljaWVudCBpbiBpdHNlbGYgZm9yIGEgZ29vZCBsaWZlIGlzIG5vdCB1bmxpbWl0ZWQsIGFzIFNvbG9uIDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgZGVmYXVsdD0iTk8iIG49IlNvbC4gRnIuIDEzLjcxIj5Tb2xvbgoJCQkJCQkxMy43MTwvYmlibD4uPC9ub3RlPiBzYXlzIHRoYXQgaXQgaXMgaW4gdGhlIHZlcnNlIDxxdW90ZSB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIG1ldD0iZGFjdHlsaWMiPkJ1dCBvZiByaWNoZXMgbm8gYm91bmQgaGFzIGJlZW4gZml4ZWQgb3IgcmV2ZWFsZWQgdG8KCQkJCQkJCW1lbjs8L2w+CgkJCQkJPC9xdW90ZT4gZm9yIGEgbGltaXQgaGFzIGJlZW4gZml4ZWQsIGFzIHdpdGggdGhlIG90aGVyIGFydHMsIHNpbmNlIG5vIHRvb2wKCQkJCQliZWxvbmdpbmcgdG8gYW55IGFydCBpcyB3aXRob3V0IGEgbGltaXQgd2hldGhlciBpbiBudW1iZXIgb3IgaW4gc2l6ZSwgYW5kIHJpY2hlcwoJCQkJCWFyZSBhIGNvbGxlY3Rpb24gb2YgdG9vbHMgZm9yIHRoZSBob3VzZWhvbGRlciBhbmQgdGhlIHN0YXRlc21hbi4gVGhlcmVmb3JlIHRoYXQKCQkJCQl0aGVyZSBpcyBhIGNlcnRhaW4gYXJ0IG9mIGFjcXVpc2l0aW9uIGJlbG9uZ2luZyBpbiB0aGUgb3JkZXIgb2YgbmF0dXJlIHRvCgkJCQkJaG91c2Vob2xkZXJzIGFuZCB0byBzdGF0ZXNtZW4sIGFuZCBmb3Igd2hhdCByZWFzb24gdGhpcyBpcyBzbywgaXMgY2xlYXIuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdGhlcmUgaXMgYW5vdGhlciBraW5kIG9mCgkJCQkJYWNxdWlzaXRpb24gdGhhdCBpcyBzcGVjaWFsbHkgY2FsbGVkIHdlYWx0aC1nZXR0aW5nLCBhbmQgdGhhdCBpcyBzbyBjYWxsZWQgd2l0aAoJCQkJCWp1c3RpY2UgYW5kIHRvIHRoaXMga2luZCBpdCBpcyBkdWUgdGhhdCB0aGVyZSBpcyB0aG91Z2h0IHRvIGJlIG5vIGxpbWl0IHRvCgkJCQkJcmljaGVzIGFuZCBwcm9wZXJ0eS4gPG1pbGVzdG9uZSBuPSIxMjU3YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+T3dpbmcgdG8gaXRzIGFmZmluaXR5IHRvIHRoZSBhcnQgb2YgYWNxdWlzaXRpb24gb2YKCQkJCQl3aGljaCB3ZSBzcG9rZSwgaXQgaXMgc3VwcG9zZWQgYnkgbWFueSBwZW9wbGUgdG8gYmUgb25lIGFuZCB0aGUgc2FtZSBhcyB0aGF0OwoJCQkJCWFuZCBhcyBhIG1hdHRlciBvZiBmYWN0LCB3aGlsZSBpdCBpcyBub3QgdGhlIHNhbWUgYXMgdGhlIGFjcXVpc2l0aW9uIHNwb2tlbiBvZiwKCQkJCQlpdCBpcyBub3QgZmFyIHJlbW92ZWQgZnJvbSBpdC4gT25lIG9mIHRoZW0gaXMgbmF0dXJhbCwgdGhlIG90aGVyIGlzIG5vdCBuYXR1cmFsLAoJCQkJCWJ1dCBjYXJyaWVkIG9uIHJhdGhlciBieSBtZWFucyBvZiBhIGNlcnRhaW4gYWNxdWlyZWQgc2tpbGwgb3IgYXJ0LiBXZSBtYXkgdGFrZQoJCQkJCW91ciBzdGFydGluZy1wb2ludCBmb3IgaXRzIHN0dWR5IGZyb20gdGhlIGZvbGxvd2luZyBjb25zaWRlcmF0aW9uOiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjExIiB1bml0PSJMb2ViIGNoYXAiIC8+d2l0aCBldmVyeSBhcnRpY2xlIG9mIHByb3BlcnR5IHRoZXJlIGlzIGEKCQkJCQlkb3VibGUgd2F5IG9mIHVzaW5nIGl0OyBib3RoIHVzZXMgYXJlIHJlbGF0ZWQgdG8gdGhlIGFydGljbGUgaXRzZWxmLCBidXQgbm90CgkJCQkJcmVsYXRlZCB0byBpdCBpbiB0aGUgc2FtZSBtYW5uZXLigJRvbmUgaXMgcGVjdWxpYXIgdG8gdGhlIHRoaW5nIGFuZCB0aGUKCQkJCQlvdGhlciBpcyBub3QgcGVjdWxpYXIgdG8gaXQuIFRha2UgZm9yIGV4YW1wbGUgYSBzaG9l4oCUdGhlcmUgaXMgaXRzIHdlYXIKCQkJCQlhcyBhIHNob2UgYW5kIHRoZXJlIGlzIGl0cyB1c2UgYXMgYW4gYXJ0aWNsZSBvZiBleGNoYW5nZTsgZm9yIGJvdGggYXJlIHdheXMgb2YKCQkJCQl1c2luZyBhIHNob2UsIGluYXNtdWNoIGFzIGV2ZW4gaGUgdGhhdCBiYXJ0ZXJzIGEgc2hvZSBmb3IgbW9uZXkgb3IgZm9vZCB3aXRoIHRoZQoJCQkJCWN1c3RvbWVyIHRoYXQgd2FudHMgYSBzaG9lIHVzZXMgaXQgYXMgYSBzaG9lLCB0aG91Z2ggbm90IGZvciB0aGUgdXNlIHBlY3VsaWFyIHRvCgkJCQkJYSBzaG9lLCBzaW5jZSBzaG9lcyBoYXZlIG5vdCBjb21lIGludG8gZXhpc3RlbmNlIGZvciB0aGUgcHVycG9zZSBvZiBiYXJ0ZXIuIEFuZAoJCQkJCXRoZSBzYW1lIGFsc28gaG9sZHMgZ29vZCBhYm91dCB0aGUgb3RoZXIgYXJ0aWNsZXMgb2YgcHJvcGVydHk7IGZvciBhbGwgb2YgdGhlbQoJCQkJCWhhdmUgYW4gYXJ0IG9mIGV4Y2hhbmdlIHJlbGF0ZWQgdG8gdGhlbSwgd2hpY2ggYmVnYW4gaW4gdGhlIGZpcnN0IGluc3RhbmNlIGZyb20KCQkJCQl0aGUgbmF0dXJhbCBvcmRlciBvZiB0aGluZ3MsIGJlY2F1c2UgbWVuIGhhZCBtb3JlIHRoYW4gZW5vdWdoIG9mIHNvbWUgdGhpbmdzIGFuZAoJCQkJCWxlc3MgdGhhbiBlbm91Z2ggb2Ygb3RoZXJzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhpcwoJCQkJCWNvbnNpZGVyYXRpb24gYWxzbyBzaG93cyB0aGF0IHRoZSBhcnQgb2YgdHJhZGUgaXMgbm90IGJ5IG5hdHVyZSBhIHBhcnQgb2YgdGhlCgkJCQkJYXJ0IG9mIHdlYWx0aC1nZXR0aW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIEFyaXN0b3RsZSB3cm90ZQoJCQkJCQnigJhvZiB0aGUgYXJ0IG9mIGV4Y2hhbmdl4oCZOiBCZXJuYXlzIHN1Z2dlc3RzIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7OvM61z4TOsc6yzrvOt8+EzrnOuuG/hs+CPC9mb3JlaWduPiBmb3IgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs+Hz4HOt868zrHPhM65z4PPhM65zrrhv4bPgjwvZm9yZWlnbj4uPC9ub3RlPjsgZm9yIHRoZSBwcmFjdGljZSBvZiBiYXJ0ZXIgd2FzCgkJCQkJbmVjZXNzYXJ5IG9ubHkgc28gZmFyIGFzIHRvIHNhdGlzZnkgbWVuJ3Mgb3duIG5lZWRzLiBJbiB0aGUgcHJpbWFyeTxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YXNzb2NpYXRpb24gdGhlcmVmb3JlIO+8iEkgbWVhbiB0aGUKCQkJCQlob3VzZWhvbGTvvIkgdGhlcmUgaXMgbm8gZnVuY3Rpb24gZm9yIHRyYWRlLCBidXQgaXQgb25seSBhcmlzZXMgYWZ0ZXIgdGhlCgkJCQkJYXNzb2NpYXRpb24gaGFzIGJlY29tZSBtb3JlIG51bWVyb3VzLiBGb3IgdGhlIG1lbWJlcnMgb2YgdGhlIHByaW1pdGl2ZSBob3VzZWhvbGQKCQkJCQl1c2VkIHRvIHNoYXJlIGNvbW1vZGl0aWVzIHRoYXQgd2VyZSBhbGwgdGhlaXIgb3duLCB3aGVyZWFzIG9uIHRoZSBjb250cmFyeSBhCgkJCQkJZ3JvdXAgZGl2aWRlZCBpbnRvIHNldmVyYWwgaG91c2Vob2xkcyBwYXJ0aWNpcGF0ZWQgYWxzbyBpbiBhIG51bWJlciBvZgoJCQkJCWNvbW1vZGl0aWVzIGJlbG9uZ2luZyB0byB0aGVpciBuZWlnaGJvcnMsIGFjY29yZGluZyB0byB0aGVpciBuZWVkcyBmb3Igd2hpY2gKCQkJCQl0aGV5IHdlcmUgZm9yY2VkIHRvIG1ha2UgdGhlaXIgaW50ZXJjaGFuZ2VzIGJ5IHdheSBvZiBiYXJ0ZXIsIGFzIGFsc28gbWFueQoJCQkJCWJhcmJhcmlhbiB0cmliZXMgZG8gc3RpbGw7IGZvciBzdWNoIHRyaWJlcyBkbyBub3QgZ28gYmV5b25kIGV4Y2hhbmdpbmcgYWN0dWFsCgkJCQkJY29tbW9kaXRpZXMgZm9yIGFjdHVhbCBjb21tb2RpdGllcywgZm9yIGV4YW1wbGUgZ2l2aW5nIGFuZCB0YWtpbmcgd2luZSBmb3IgY29ybiwKCQkJCQlhbmQgc28gd2l0aCB0aGUgdmFyaW91cyBvdGhlciB0aGluZ3Mgb2YgdGhlIHNvcnQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMTMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5FeGNoYW5nZSBvbiB0aGVzZSBsaW5lcyB0aGVyZWZvcmUgaXMgbm90IGNvbnRyYXJ5IHRvCgkJCQkJbmF0dXJlLCBub3IgaXMgaXQgYW55IGJyYW5jaCBvZiB0aGUgYXJ0IG9mIHdlYWx0aC1nZXR0aW5nLCBmb3IgaXQgZXhpc3RlZCBmb3IKCQkJCQl0aGUgcmVwbGVuaXNobWVudCBvZiBuYXR1cmFsIHNlbGYtc3VmZmljaWVuY3k7IHlldCBvdXQgb2YgaXQgdGhlIGFydCBvZiBidXNpbmVzcwoJCQkJCWluIGR1ZSBjb3Vyc2UgYXJvc2UuIEZvciB3aGVuIHRoZXkgaGFkIGNvbWUgdG8gc3VwcGx5IHRoZW1zZWx2ZXMgbW9yZSBmcm9tCgkJCQkJYWJyb2FkIGJ5IGltcG9ydGluZyB0aGluZ3MgaW4gd2hpY2ggdGhleSB3ZXJlIGRlZmljaWVudCBhbmQgZXhwb3J0aW5nIHRob3NlIG9mCgkJCQkJd2hpY2ggdGhleSBoYWQgYSBzdXJwbHVzLCB0aGUgZW1wbG95bWVudCBvZiBtb25leSBuZWNlc3NhcmlseSBjYW1lIHRvIGJlCgkJCQkJZGV2aXNlZC4gRm9yIHRoZSBuYXR1cmFsIG5lY2Vzc2FyaWVzIGFyZSBub3QgaW4gZXZlcnkgY2FzZSByZWFkaWx5IHBvcnRhYmxlOwoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjE0IiB1bml0PSJMb2ViIGNoYXAiIC8+aGVuY2UgZm9yIHRoZSBwdXJwb3NlIG9mIGJhcnRlcgoJCQkJCW1lbiBtYWRlIGEgbXV0dWFsIGNvbXBhY3QgdG8gZ2l2ZSBhbmQgYWNjZXB0IHNvbWUgc3Vic3RhbmNlIG9mIHN1Y2ggYSBzb3J0IGFzCgkJCQkJYmVpbmcgaXRzZWxmIGEgdXNlZnVsIGNvbW1vZGl0eSB3YXMgZWFzeSB0byBoYW5kbGUgaW4gdXNlIGZvciBnZW5lcmFsIGxpZmUsIGlyb24KCQkJCQlmb3IgaW5zdGFuY2UsIHNpbHZlciBhbmQgb3RoZXIgbWV0YWxzLCBhdCB0aGUgZmlyc3Qgc3RhZ2UgZGVmaW5lZCBtZXJlbHkgYnkgc2l6ZQoJCQkJCWFuZCB3ZWlnaHQsIGJ1dCBmaW5hbGx5IGFsc28gYnkgaW1wcmVzc2luZyBvbiBpdCBhIHN0YW1wIGluIG9yZGVyIHRoYXQgdGhpcwoJCQkJCW1pZ2h0IHJlbGlldmUgdGhlbSBvZiBoYXZpbmcgdG8gbWVhc3VyZSBpdDsgZm9yIHRoZSBzdGFtcCB3YXMgcHV0IG9uIGFzIGEgdG9rZW4KCQkJCQlvZiB0aGUgYW1vdW50LiA8bWlsZXN0b25lIG49IjEyNTdiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGVkPSJQIiBuPSIzLjE1IiB1bml0PSJMb2ViIGNoYXAiIC8+U28gd2hlbiBjdXJyZW5jeQoJCQkJCWhhZCBiZWVuIG5vdyBpbnZlbnRlZCBhcyBhbiBvdXRjb21lIG9mIHRoZSBuZWNlc3NhcnkgaW50ZXJjaGFuZ2Ugb2YgZ29vZHMsIHRoZXJlCgkJCQkJY2FtZSBpbnRvIGV4aXN0ZW5jZSB0aGUgb3RoZXIgZm9ybSBvZiB3ZWFsdGgtZ2V0dGluZywgdHJhZGUsIHdoaWNoIGF0IGZpcnN0IG5vCgkJCQkJZG91YnQgd2VudCBvbiBpbiBhIHNpbXBsZSBmb3JtLCBidXQgbGF0ZXIgYmVjYW1lIG1vcmUgaGlnaGx5IG9yZ2FuaXplZCBhcwoJCQkJCWV4cGVyaWVuY2UgZGlzY292ZXJlZCB0aGUgc291cmNlcyBhbmQgbWV0aG9kcyBvZiBleGNoYW5nZSB0aGF0IHdvdWxkIGNhdXNlIG1vc3QKCQkJCQlwcm9maXQuIEhlbmNlIGFyaXNlcyB0aGUgaWRlYSB0aGF0IHRoZSBhcnQgb2Ygd2VhbHRoLWdldHRpbmcgZGVhbHMgc3BlY2lhbGx5CgkJCQkJd2l0aCBtb25leSwgYW5kIHRoYXQgaXRzIGZ1bmN0aW9uIGlzIHRvIGJlIGFibGUgdG8gZGlzY2VybiBmcm9tIHdoYXQgc291cmNlIGEKCQkJCQlsYXJnZSBzdXBwbHkgY2FuIGJlIHByb2N1cmVkLCBhcyB0aGlzIGFydCBpcyBzdXBwb3NlZCB0byBiZSBjcmVhdGl2ZSBvZiByaWNoZXMKCQkJCQlhbmQgd2VhbHRoOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjE2IiB1bml0PSJMb2ViIGNoYXAiIC8+aW5kZWVkIHJpY2hlcyBhcmUgb2Z0ZW4KCQkJCQlhc3N1bWVkIHRvIGNvbnNpc3Qgb2YgYSBxdWFudGl0eSBvZiBtb25leSwgYmVjYXVzZSBtb25leSBpcyB0aGUgdGhpbmcgd2l0aCB3aGljaAoJCQkJCXRoZSBhcnQgb2YgYnVzaW5lc3MgYW5kIG9mIHRyYWRlIGRlYWxzLiBCdXQgYXQgb3RoZXIgdGltZXMsIG9uIHRoZSBjb250cmFyeSwgaXQKCQkJCQlpcyB0aG91Z2h0IHRoYXQgbW9uZXkgaXMgbm9uc2Vuc2UsIGFuZCBub3RoaW5nIGJ5IG5hdHVyZSBidXQgZW50aXJlbHkgYQoJCQkJCWNvbnZlbnRpb24sIGJlY2F1c2Ugd2hlbiB0aG9zZSB3aG8gdXNlIGl0IGhhdmUgY2hhbmdlZCB0aGUgY3VycmVuY3kgaXQgaXMgd29ydGgKCQkJCQlub3RoaW5nLCBhbmQgYmVjYXVzZSBpdCBpcyBvZiBubyB1c2UgZm9yIGFueSBvZiB0aGUgbmVjZXNzYXJ5IG5lZWRzIG9mIGxpZmUgYW5kCgkJCQkJYSBtYW4gd2VsbCBzdXBwbGllZCB3aXRoIG1vbmV5IG1heSBvZnRlbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+ZS5nLgoJCQkJCQlvbiBhIGRlc2VydCBpc2xhbmQuPC9ub3RlPiBiZSBkZXN0aXR1dGUgb2YgdGhlIGJhcmUgbmVjZXNzaXRpZXMgb2YKCQkJCQlzdWJzaXN0ZW5jZSwgeWV0IGl0IGlzIGFub21hbG91cyB0aGF0IHdlYWx0aCBzaG91bGQgYmUgb2Ygc3VjaCBhIGtpbmQgdGhhdCBhIG1hbgoJCQkJCW1heSBiZSB3ZWxsIHN1cHBsaWVkIHdpdGggaXQgYW5kIHlldCBkaWUgb2YgaHVuZ2VyLCBsaWtlIHRoZSBmYW1vdXMgTWlkYXMgaW4gdGhlCgkJCQkJbGVnZW5kLCB3aGVuIG93aW5nIHRvIHRoZSBpbnNhdGlhYmxlIGNvdmV0b3VzbmVzcyBvZiBoaXMgcHJheWVyIGFsbCB0aGUgdmlhbmRzCgkJCQkJc2VydmVkIHVwIHRvIGhpbSB0dXJuZWQgaW50byBnb2xkLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjE3IiB1bml0PSJMb2ViIGNoYXAiIC8+SGVuY2UgcGVvcGxlIHNlZWsgZm9yIGEgZGlmZmVyZW50IGRlZmluaXRpb24gb2YgcmljaGVzIGFuZCB0aGUgYXJ0IG9mIGdldHRpbmcKCQkJCQl3ZWFsdGgsIGFuZCByaWdodGx5OyBmb3IgbmF0dXJhbCB3ZWFsdGgtZ2V0dGluZyBhbmQgbmF0dXJhbCByaWNoZXMgYXJlCgkJCQkJCWRpZmZlcmVudDo8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm5hdHVyYWwgd2VhbHRoLWdldHRpbmcKCQkJCQliZWxvbmdzIHRvIGhvdXNlaG9sZCBtYW5hZ2VtZW50LCB3aGVyZWFzIHRoZSBvdGhlciBraW5kIGJlbG9uZ3MgdG8gdHJhZGUsCgkJCQkJcHJvZHVjaW5nIGdvb2RzIG5vdCBpbiBldmVyeSB3YXkgYnV0IG9ubHkgYnkgdGhlIG1ldGhvZCBvZiBleGNoYW5naW5nIGdvb2RzLiBJdAoJCQkJCWlzIHRoaXMgYXJ0IG9mIHdlYWx0aC1nZXR0aW5nIHRoYXQgaXMgdGhvdWdodCB0byBiZSBjb25jZXJuZWQgd2l0aCBtb25leSwgZm9yCgkJCQkJbW9uZXkgaXMgdGhlIGZpcnN0IHByaW5jaXBsZSBhbmQgbGltaXQgb2YgY29tbWVyY2UuIEFuZCB0aGVzZSByaWNoZXMsIHRoYXQgYXJlCgkJCQkJZGVyaXZlZCBmcm9tIHRoaXMgYXJ0IG9mIHdlYWx0aC1nZXR0aW5nLCBhcmUgdHJ1bHkgdW5saW1pdGVkPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGEgdHJhZGVyIGNhbm5vdCBnZXQgdG9vIG11Y2ggb2YgaGlzIGdvb2RzLCBhbnkgbW9yZSB0aGFuCgkJCQkJCWEgZG9jdG9yIGNhbiBtYWtlIGhpcyBwYXRpZW50IHRvbyBoZWFsdGh5Ljwvbm90ZT47IGZvciBqdXN0IGFzIHRoZSBhcnQgb2YKCQkJCQltZWRpY2luZSBpcyB3aXRob3V0IGxpbWl0IGluIHJlc3BlY3Qgb2YgaGVhbHRoLCBhbmQgZWFjaCBvZiB0aGUgYXJ0cyBpcyB3aXRob3V0CgkJCQkJbGltaXQgaW4gcmVzcGVjdCBvZiBpdHMgZW5kIO+8iGZvciB0aGV5IGRlc2lyZSB0byBwcm9kdWNlIHRoYXQgaW4gdGhlCgkJCQkJaGlnaGVzdCBkZWdyZWUgcG9zc2libGXvvIksIHdoZXJlYXMgdGhleSBhcmUgbm90IHdpdGhvdXQgbGltaXQgYXMgcmVnYXJkcwoJCQkJCXRoZSBtZWFucyB0byB0aGVpciBlbmQg77yIZm9yIHdpdGggYWxsIG9mIHRoZW0gdGhlIGVuZCBpcyBhIGxpbWl0IHRvIHRoZQoJCQkJCW1lYW5z77yJLCBzbyBhbHNvIHRoaXMgd2VhbHRoLWdldHRpbmcgaGFzIG5vIGxpbWl0IGluIHJlc3BlY3Qgb2YgaXRzIGVuZCwKCQkJCQlhbmQgaXRzIGVuZCBpcyByaWNoZXMgYW5kIHRoZSBhY3F1aXNpdGlvbiBvZiBnb29kcyBpbiB0aGUgY29tbWVyY2lhbCBzZW5zZS4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGUgaG91c2Vob2xkIGJyYW5jaCBvZgoJCQkJCXdlYWx0aC1nZXR0aW5nIGhhcyBhIGxpbWl0LCBzaW5jZSB0aGUgYWNxdWlzaXRpb24gb2YgY29tbWVyY2lhbCByaWNoZXMgaXMgbm90CgkJCQkJdGhlIGZ1bmN0aW9uIG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50LiBIZW5jZSBmcm9tIHRoaXMgcG9pbnQgb2YgdmlldyBpdCBhcHBlYXJzCgkJCQkJbmVjZXNzYXJ5IHRoYXQgdGhlcmUgc2hvdWxkIGJlIGEgbGltaXQgdG8gYWxsIHJpY2hlcywgeWV0IGluIGFjdHVhbCBmYWN0IHdlCgkJCQkJb2JzZXJ2ZSB0aGF0IHRoZSBvcHBvc2l0ZSB0YWtlcyBwbGFjZTsgZm9yIGFsbCBtZW4gZW5nYWdlZCBpbiB3ZWFsdGgtZ2V0dGluZyB0cnkKCQkJCQl0byBpbmNyZWFzZSB0aGVpciBtb25leSB0byBhbiB1bmxpbWl0ZWQgYW1vdW50LiBUaGUgcmVhc29uIG9mIHRoaXMgaXMgdGhlIGNsb3NlCgkJCQkJYWZmaW5pdHkgb2YgdGhlIHR3byBicmFuY2hlcyBvZiB0aGUgYXJ0IG9mIGJ1c2luZXNzLiBUaGVpciBjb21tb24gZ3JvdW5kIGlzIHRoYXQKCQkJCQl0aGUgdGhpbmcgdGhhdCBlYWNoIG1ha2VzIHVzZSBvZiBpcyB0aGUgc2FtZTsgdGhleSB1c2UgdGhlIHNhbWUgcHJvcGVydHksCgkJCQkJYWx0aG91Z2ggbm90IGluIHRoZSBzYW1lIHdheeKAlHRoZSBvbmUgaGFzIGFub3RoZXIgZW5kIGluIHZpZXcsIHRoZSBhaW0KCQkJCQlvZiB0aGUgb3RoZXIgaXMgdGhlIGluY3JlYXNlIG9mIHRoZSBwcm9wZXJ0eS4gQ29uc2VxdWVudGx5IHNvbWUgcGVvcGxlIHN1cHBvc2UKCQkJCQl0aGF0IGl0IGlzIHRoZSBmdW5jdGlvbiBvZiBob3VzZWhvbGQgbWFuYWdlbWVudCB0byBpbmNyZWFzZSBwcm9wZXJ0eSwgYW5kIHRoZXkKCQkJCQlhcmUgY29udGludWFsbHkgdW5kZXIgdGhlIGlkZWEgdGhhdCBpdCBpcyB0aGVpciBkdXR5IHRvIGJlIGVpdGhlciBzYWZlZ3VhcmRpbmcKCQkJCQl0aGVpciBzdWJzdGFuY2UgaW4gbW9uZXkgb3IgaW5jcmVhc2luZyBpdCB0byBhbiB1bmxpbWl0ZWQgYW1vdW50LiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjE5IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIGNhdXNlIG9mIHRoaXMgc3RhdGUgb2YgbWluZCBpcyB0aGF0CgkJCQkJdGhlaXIgaW50ZXJlc3RzIGFyZSBzZXQgdXBvbiBsaWZlIGJ1dCBub3QgdXBvbiB0aGUgZ29vZCBsaWZlOyA8bWlsZXN0b25lIG49IjEyNThhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5hcwoJCQkJCXRoZXJlZm9yZSB0aGUgZGVzaXJlIGZvciBsaWZlIGlzIHVubGltaXRlZCwgdGhleSBhbHNvIGRlc2lyZSB3aXRob3V0IGxpbWl0IHRoZQoJCQkJCW1lYW5zIHByb2R1Y3RpdmUgb2YgbGlmZS4gQW5kIGV2ZW4gdGhvc2Ugd2hvIGZpeCB0aGVpciBhaW0gb24gdGhlIGdvb2QgbGlmZSBzZWVrCgkJCQkJdGhlIGdvb2QgbGlmZSBhcyBtZWFzdXJlZCBieSBib2RpbHkgZW5qb3ltZW50cywgc28gdGhhdCBpbmFzbXVjaCBhcyB0aGlzIGFsc28KCQkJCQlzZWVtcyB0byBiZSBmb3VuZCBpbiB0aGUgcG9zc2Vzc2lvbiBvZiBwcm9wZXJ0eSwgYWxsIHRoZWlyIGVuZXJnaWVzIGFyZSBvY2N1cGllZAoJCQkJCWluIHRoZSBidXNpbmVzcyBvZiBnZXR0aW5nIHdlYWx0aDsgYW5kIG93aW5nIHRvIHRoaXMgdGhlIHNlY29uZCBraW5kIG9mIHRoZSBhcnQKCQkJCQlvZiB3ZWFsdGgtZ2V0dGluZyBoYXMgYXJpc2VuLiBGb3IgYXMgdGhlaXIgZW5qb3ltZW50IGlzIGluIGV4Y2VzcywgdGhleSB0cnkgdG8KCQkJCQlkaXNjb3ZlciB0aGUgYXJ0IHRoYXQgaXMgcHJvZHVjdGl2ZSBvZiBlbmpveWFibGUgZXhjZXNzOyBhbmQgaWYgdGhleSBjYW5ub3QKCQkJCQlwcm9jdXJlIGl0IGJ5IHRoZSBhcnQgb2Ygd2VhbHRoLWdldHRpbmcsIHRoZXkgdHJ5IHRvIGRvIHNvIGJ5IHNvbWUgb3RoZXIgbWVhbnMsCgkJCQkJZW1wbG95aW5nIGVhY2ggb2YgdGhlIGZhY3VsdGllcyBpbiBhbiB1bm5hdHVyYWwgd2F5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjIwIiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIGl0IGlzIG5vdCB0aGUgZnVuY3Rpb24gb2YgY291cmFnZSB0byBwcm9kdWNlIHdlYWx0aCwKCQkJCQlidXQgdG8gaW5zcGlyZSBkYXJpbmc7IG5vciBpcyBpdCB0aGUgZnVuY3Rpb24gb2YgdGhlIG1pbGl0YXJ5IGFydCBub3Igb2YgdGhlCgkJCQkJbWVkaWNhbCBhcnQsIGJ1dCBpdCBiZWxvbmdzIHRvIHRoZSBmb3JtZXIgdG8gYnJpbmcgdmljdG9yeSBhbmQgdG8gdGhlIGxhdHRlciB0bwoJCQkJCWNhdXNlIGhlYWx0aC4gWWV0IHRoZXNlIHBlb3BsZSBtYWtlIGFsbCB0aGVzZSBmYWN1bHRpZXMgbWVhbnMgZm9yIHRoZSBidXNpbmVzcwoJCQkJCW9mIHByb3ZpZGluZyB3ZWFsdGgsIGluIHRoZSBiZWxpZWYgdGhhdCB3ZWFsdGggaXMgdGhlIGVuZCBhbmQgdGhhdCBldmVyeXRoaW5nCgkJCQkJbXVzdCBiZSBkaXJlY3RlZCB0byB0aGUgZW5kLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2UgaGF2ZSB0aGVyZWZvcmUKCQkJCQlkaXNjdXNzZWQgYm90aCB0aGUgdW5uZWNlc3NhcnkgYnJhbmNoIG9mIHdlYWx0aC1nZXR0aW5nLCBkZWZpbmluZyBpdCBhbmQgYWxzbwoJCQkJCWV4cGxhaW5pbmcgdGhlIGNhdXNlIHdoeSB3ZSByZXF1aXJlIGl0LCBhbmQgdGhlIG5lY2Vzc2FyeSBicmFuY2gsIHNob3dpbmcgdGhhdAoJCQkJCXRoaXMgYnJhbmNoIHdoaWNoIGhhcyB0byBkbyB3aXRoIGZvb2QgaXMgZGlmZmVyZW50IGZyb20gdGhlIHVubmVjZXNzYXJ5IGJyYW5jaAoJCQkJCWFuZCBpcyBieSBuYXR1cmUgYSBwYXJ0IG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50LCBub3QgYmVpbmcgbGlrZSB0aGF0IGJyYW5jaAoJCQkJCXVubGltaXRlZCBidXQgaGF2aW5nIGEgbGltaXQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQKCQkJCQl3ZSBjYW4gYWxzbyBzZWUgdGhlIGFuc3dlciB0byB0aGUgcXVlc3Rpb24gcmFpc2VkIGF0IHRoZSBiZWdpbm5pbmcsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMy4xLjwvbm90ZT4gd2hldGhlcjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIGFydCBvZiB3ZWFsdGgtZ2V0dGluZyBiZWxvbmdzIHRvIHRoZQoJCQkJCWhvdXNlaG9sZGVyIGFuZCB0aGUgc3RhdGVzbWFuLCBvciB3aGV0aGVyIG9uIHRoZSBjb250cmFyeSBzdXBwbGllcyBvdWdodCB0byBiZQoJCQkJCXByb3ZpZGVkIGFscmVhZHkg77yIZm9yIGp1c3QgYXMgc3RhdGVzbWFuc2hpcCBkb2VzIG5vdCBjcmVhdGUgaHVtYW4KCQkJCQliZWluZ3MgYnV0IGhhdmluZyByZWNlaXZlZCB0aGVtIGZyb20gbmF0dXJlIG1ha2VzIHVzZSBvZiB0aGVtLCBzbyBhbHNvIGl0IGlzCgkJCQkJbmVjZXNzYXJ5IGZvciBuYXR1cmUgdG8gYmVzdG93IGZvb2QgYnkgYmVzdG93aW5nIGxhbmQgb3Igc2VhIG9yIHNvbWV0aGluZwoJCQkJCWVsc2XvvIksIGFuZCB0aGUgdGFzayBvZiB0aGUgaG91c2Vob2xkZXIgaXMsIHN0YXJ0aW5nIHdpdGggdGhlc2Ugc3VwcGxpZXMKCQkJCQlnaXZlbiwgdG8gZGlzcG9zZSBvZiB0aGVtIGluIHRoZSBwcm9wZXIgd2F5LiBGb3IgaXQgZG9lcyBub3QgYmVsb25nIHRvIHRoZSBhcnQKCQkJCQlvZiB3ZWF2aW5nIHRvIG1ha2UgZmxlZWNlcywgYnV0IHRvIHVzZSB0aGVtLCBhbmQgYWxzbyB0byBrbm93IHdoYXQgc29ydCBvZgoJCQkJCWZsZWVjZSBpcyBnb29kIGFuZCBzdWl0YWJsZSBvciBiYWQgYW5kIHVuc3VpdGFibGUuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JbiBmYWN0IHRoZSBxdWVzdGlvbiBtaWdodCBiZSByYWlzZWQsIHdoeSB0aGUgZ2V0dGluZyBvZgoJCQkJCXdlYWx0aCBpcyBhIHBhcnQgb2YgdGhlIGhvdXNlaG9sZCBhcnQgd2hlcmVhcyB0aGUgYXJ0IG9mIG1lZGljaW5lIGlzIG5vdCBhIHBhcnQKCQkJCQlvZiBpdCwgYWx0aG91Z2ggdGhlIG1lbWJlcnMgb2YgdGhlIGhvdXNlaG9sZCBvdWdodCB0byBiZSBoZWFsdGh5LCBqdXN0IGFzIHRoZXkKCQkJCQltdXN0IGJlIGFsaXZlIG9yIGZ1bGZpbCBhbnkgb2YgdGhlIG90aGVyIGVzc2VudGlhbCBjb25kaXRpb25zLiBCdXQgaW5hc211Y2ggYXMKCQkJCQlhbHRob3VnaCBpbiBhIHdheSBpdCBkb2VzIGJlbG9uZyB0byB0aGUgaG91c2Vob2xkZXIgYW5kIHRoZSBydWxlciB0byBzZWUgZXZlbiB0bwoJCQkJCWhlYWx0aCwgeWV0IGluIGEgd2F5IGl0IGRvZXMgbm90IGJlbG9uZyB0byB0aGVtIGJ1dCB0byB0aGUgcGh5c2ljaWFuLCBzbyBhbHNvCgkJCQkJd2l0aCByZWdhcmQgdG8gd2VhbHRoLCBhbHRob3VnaCBpbiBhIHdheSBpdCBpcyB0aGUgYWZmYWlyIG9mIHRoZSBob3VzZS1ob2xkZXIsCgkJCQkJaW4gYSB3YXkgaXQgaXMgbm90LCBidXQgaXMgYSBtYXR0ZXIgZm9yIHRoZSBzdWJzaWRpYXJ5IGFydC4gQnV0IGJlc3Qgb2YgYWxsLCBhcwoJCQkJCWhhcyBiZWVuIHNhaWQgYmVmb3JlLCB0aGlzIHByb3Zpc2lvbiBvdWdodCB0byBiZSBtYWRlIGluIGFkdmFuY2UgYnkgbmF0dXJlLiBGb3IKCQkJCQlpdCBpcyB0aGUgd29yayBvZiBuYXR1cmUgdG8gc3VwcGx5IG5vdXJpc2htZW50IGZvciBoZXIgb2Zmc3ByaW5nLCBzaW5jZSBldmVyeQoJCQkJCWNyZWF0dXJlIGhhcyBmb3Igbm91cmlzaG1lbnQgdGhlIHJlc2lkdWUgb2YgdGhlIHN1YnN0YW5jZSBmcm9tIHdoaWNoIGl0CgkJCQkJCXNwcmluZ3MuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGFuaW1hbHMgYXJlIG1hZGUgb2YgZWFydGgKCQkJCQkJYW5kIHdhdGVyIGFuZCBsaXZlIG9uIHRoZSBwcm9kdWN0cyBvZiBlYXJ0aCBhbmQgd2F0ZXIuPC9ub3RlPiBIZW5jZSB0aGUKCQkJCQlidXNpbmVzcyBvZiBkcmF3aW5nIHByb3Zpc2lvbiBmcm9tIHRoZSBmcnVpdHMgb2YgdGhlIHNvaWwgYW5kIGZyb20gYW5pbWFscyBpcwoJCQkJCW5hdHVyYWwgdG8gYWxsLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjIzIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0LCBhcyB3ZSBzYWlkLAoJCQkJCXRoaXMgYXJ0IGlzIHR3b2ZvbGQsIG9uZSBicmFuY2ggYmVpbmcgb2YgdGhlIG5hdHVyZSBvZiB0cmFkZSB3aGlsZSB0aGUgb3RoZXIKCQkJCQliZWxvbmdzIHRvIHRoZSBob3VzZWhvbGQgYXJ0OyBhbmQgdGhlIGxhdHRlciBicmFuY2ggaXMgbmVjZXNzYXJ5IGFuZCBpbiBnb29kCgkJCQkJZXN0ZWVtLCBidXQgdGhlIGJyYW5jaCBjb25uZWN0ZWQgd2l0aCBleGNoYW5nZSBpcyBqdXN0bHkgZGlzY3JlZGl0ZWQgPG1pbGVzdG9uZSBuPSIxMjU4YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+77yIZm9yIGl0IGlzIG5vdCBpbiBhY2NvcmRhbmNlIHdpdGggbmF0dXJlLCBidXQgaW52b2x2ZXMgbWVuJ3MgdGFraW5nCgkJCQkJdGhpbmdzIGZyb20gb25lIGFub3RoZXLvvIkuIEFzIHRoaXMgaXMgc28sIHVzdXJ5IGlzIG1vc3QgcmVhc29uYWJseQoJCQkJCWhhdGVkLCBiZWNhdXNlIGl0cyBnYWluIGNvbWVzIGZyb20gbW9uZXkgaXRzZWxmIGFuZCBub3QgZnJvbSB0aGF0IGZvciB0aGUgc2FrZQoJCQkJCW9mIHdoaWNoIG1vbmV5IHdhcyBpbnZlbnRlZC4gRm9yIG1vbmV5IHdhcyBicm91Z2h0IGludG8gZXhpc3RlbmNlIGZvciB0aGUKCQkJCQlwdXJwb3NlIG9mIGV4Y2hhbmdlLCBidXQgaW50ZXJlc3QgaW5jcmVhc2VzIHRoZSBhbW91bnQgb2YgdGhlIG1vbmV5IGl0c2VsZgoJCQkJCe+8iGFuZCB0aGlzIGlzIHRoZSBhY3R1YWwgb3JpZ2luIG9mIHRoZSBHcmVlayB3b3JkOiBvZmZzcHJpbmcgcmVzZW1ibGVzCgkJCQkJcGFyZW50LCBhbmQgaW50ZXJlc3QgaXMgbW9uZXkgYm9ybiBvZiBtb25lee+8iTsgY29uc2VxdWVudGx5IHRoaXMgZm9ybSBvZgoJCQkJCXRoZSBidXNpbmVzcyBvZiBnZXR0aW5nIHdlYWx0aCBpcyBvZiBhbGwgZm9ybXMgdGhlIG1vc3QgY29udHJhcnkgdG8gbmF0dXJlLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgc2luY2Ugd2UgaGF2ZSBhZGVxdWF0ZWx5CgkJCQkJZGVmaW5lZCB0aGUgc2NpZW50aWZpYyBzaWRlIG9mIHRoZSBzdWJqZWN0LCB3ZSBvdWdodCB0byBkaXNjdXNzIGl0IGZyb20gdGhlCgkJCQkJcG9pbnQgb2YgdmlldyBvZiBwcmFjdGljZTsgYWx0aG91Z2gsIHdoZXJlYXMgdGhlIHRoZW9yeSBvZiBzdWNoIG1hdHRlcnMgaXMgYQoJCQkJCWxpYmVyYWwgc3R1ZHksIHRoZSBwcmFjdGljYWwgcHVyc3VpdCBvZiB0aGVtIGlzIG5hcnJvd2luZy4gVGhlIHByYWN0aWNhbGx5CgkJCQkJdXNlZnVsIGJyYW5jaGVzIG9mIHRoZSBhcnQgb2Ygd2VhbHRoLWdldHRpbmcgYXJlIGZpcnN0LCBhbiBleHBlcnQga25vd2xlZGdlIG9mCgkJCQkJc3RvY2ssIHdoYXQgYnJlZWRzIGFyZSBtb3N0IHByb2ZpdGFibGUgYW5kIGluIHdoYXQgbG9jYWxpdGllcyBhbmQgdW5kZXIgd2hhdAoJCQkJCWNvbmRpdGlvbnMsIGZvciBpbnN0YW5jZSB3aGF0IHBhcnRpY3VsYXIgc3RvY2sgaW4gaG9yc2VzIG9yIGNhdHRsZSBvciBzaGVlcCwgYW5kCgkJCQkJc2ltaWxhcmx5IG9mIHRoZSBvdGhlciBhbmltYWxzIGFsc28g77yIZm9yIHRoZSBmYXJtZXIgbXVzdCBiZSBhbiBleHBlcnQKCQkJCQlhcyB0byB3aGljaCBvZiB0aGVzZSBhbmltYWxzIGFyZSBtb3N0IHByb2ZpdGFibGUgY29tcGFyZWQgd2l0aCBvbmUgYW5vdGhlciwgYW5kCgkJCQkJYWxzbyBhcyB0byB3aGF0IGJyZWVkcyBhcmUgbW9zdCBwcm9maXRhYmxlIG9uIHdoYXQgc29ydHMgb2YgbGFuZCwgc2luY2UKCQkJCQlkaWZmZXJlbnQgYnJlZWRzIGZsb3VyaXNoIGluIGRpZmZlcmVudCBwbGFjZXPvvIk7IHNlY29uZGx5LCB0aGUgc3ViamVjdAoJCQkJCW9mIGFncmljdWx0dXJlLCBhbmQgdGhpcyBhZ2FpbiBpcyBkaXZpZGVkIGludG8gY29ybi1ncm93aW5nIGFuZCBmcnVpdC1mYXJtaW5nOwoJCQkJCWFsc28gYmVlLWtlZXBpbmcsIGFuZCB0aGUgYnJlZWRpbmcgb2YgdGhlIG90aGVyIGNyZWF0dXJlcyBmaW5uZWQgYW5kCgkJCQkJCWZlYXRoZXJlZDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+d2hpY2ggY2FuIGJlIHVzZWQgdG8KCQkJCQlmdXJuaXNoIHN1cHBsaWVzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVzZSB0aGVuIGFyZSB0aGUKCQkJCQlicmFuY2hlcyBhbmQgcHJpbWFyeSBwYXJ0cyBvZiB3ZWFsdGgtZ2V0dGluZyBpbiB0aGUgbW9zdCBwcm9wZXIgc2Vuc2UuIE9mIHRoZQoJCQkJCWtpbmQgdGhhdCBkZWFscyB3aXRoIGV4Y2hhbmdlLCB0aGUgbGFyZ2VzdCBicmFuY2ggaXMgY29tbWVyY2Ug77yId2hpY2gKCQkJCQloYXMgdGhyZWUgZGVwYXJ0bWVudHMsIHNoaXAtb3duaW5nLCB0cmFuc3BvcnQgYW5kIG1hcmtldGluZzogdGhlc2UgZGVwYXJ0bWVudHMKCQkJCQlkaWZmZXIgZnJvbSBlYWNoIG90aGVyIGluIHRoZSBmYWN0IHRoYXQgc29tZSBhcmUgc2FmZXIgYW5kIG90aGVycyBjYXJyeSBsYXJnZXIKCQkJCQlwcm9maXRz77yJOyB0aGUgc2Vjb25kIGJyYW5jaCBpcyBtb25leS1sZW5kaW5nLCBhbmQgdGhlIHRoaXJkIGxhYm9yIGZvcgoJCQkJCWhpcmUsIG9uZSBkZXBhcnRtZW50IG9mIHdoaWNoIGlzIHRoYXQgb2YgdGhlIG1lY2hhbmljPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48Zm9yZWlnbiBsYW5nPSJncmVlayI+zrLhvbHOvc6xz4XPg86/z4I8L2ZvcmVpZ24+77yIc2FpZCB0byBiZQoJCQkJCQlmcm9tIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7Oss6x4b+mzr3Ov8+CPC9mb3JlaWduPuKAmGZ1cm5hY2Us4oCZCgkJCQkJCQk8Zm9yZWlnbiBsYW5nPSJncmVlayI+zrHhvZTPiTwvZm9yZWlnbj7igJh0bwoJCQkJCQlkcnnigJnvvIksIOKAmGFydGlzYW7igJkg77yIcmFuZ2VkCgkJCQkJCXdpdGggZmFybWVycywgdHJhZGVycywgYW5kIGxhYm9yZXJzLCBhcyBmb3JtaW5nIHRoZSBjb21tb24gcGVvcGxlIDEzMjFhCgkJCQkJCTbvvIk7IGl0IGFjcXVpcmVzIHRoZSBzZW5zZXMgb2Yg4oCYY3JhbXBlZCBpbiBib2R54oCZCgkJCQkJCe+8iDEzNDFhIDfvvIkgYW5kIOKAmHZ1bGdhciBpbiB0YXN0ZeKAmQoJCQkJCQnvvIgxMzM3YiA477yJLjwvbm90ZT4gYXJ0cyBhbmQgdGhlIG90aGVyIHRoYXQgb2YgdW5za2lsbGVkCgkJCQkJbGFib3JlcnMgd2hvIGFyZSB1c2VmdWwgb25seSBmb3IgYm9kaWx5IHNlcnZpY2UuIEFuZCB0aGVyZSBpcyBhIHRoaXJkIGZvcm0gb2YKCQkJCQl3ZWFsdGgtZ2V0dGluZyB0aGF0IGxpZXMgYmV0d2VlbiB0aGUgbGF0dGVyIGFuZCB0aGUgb25lIHBsYWNlZCBmaXJzdCwgc2luY2UgaXQKCQkJCQlwb3NzZXNzZXMgbWVkaWF0ZSBhbiBlbGVtZW50IGJvdGggb2YgbmF0dXJhbCB3ZWFsdGgtZ2V0dGluZyBhbmQgb2YgdGhlIHNvcnQgdGhhdAoJCQkJCWVtcGxveXMgZXhjaGFuZ2U7IGl0IGRlYWxzIHdpdGggYWxsIHRoZSBjb21tb2RpdGllcyB0aGF0IGFyZSBvYnRhaW5lZCBmcm9tIHRoZQoJCQkJCWVhcnRoIGFuZCBmcm9tIHRob3NlIGZydWl0bGVzcyBidXQgdXNlZnVsIHRoaW5ncyB0aGF0IGNvbWUgZnJvbSB0aGUKCQkJCQllYXJ0aOKAlGV4YW1wbGVzIGFyZSB0aGUgZmVsbGluZyBvZiB0aW1iZXI8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmEgdmVyeSBwcm9iYWJsZSB2YXJpYW50IGdpdmVzIOKAmHRoZSBxdWFycnlpbmcgb2YKCQkJCQkJc3RvbmUu4oCZPC9ub3RlPiBhbmQgYWxsIHNvcnRzIG9mIG1pbmluZzsgYW5kIG9mIG1pbmluZyBpdHNlbGYgdGhlcmUKCQkJCQlhcmUgbWFueSBjbGFzc2VzLCBzaW5jZSB0aGVyZSBhcmUgbWFueSBzb3J0cyBvZiBtZXRhbHMgb2J0YWluZWQgb3V0IG9mIHRoZQoJCQkJCWVhcnRoLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluIHRoZSBtc3MuIHRoaXMgc2VudGVuY2UgZm9sbG93cyB0aGUgbmV4dCBvbmUuPC9ub3RlPiBtb3N0CgkJCQkJc2NpZW50aWZpYyBvZiB0aGVzZSBpbmR1c3RyaWVzIGFyZSB0aG9zZSB3aGljaCBpbnZvbHZlIHRoZSBzbWFsbGVzdCBlbGVtZW50IG9mCgkJCQkJY2hhbmNlLCB0aGUgbW9zdCBtZWNoYW5pYyB0aG9zZSBpbiB3aGljaCB0aGUgb3BlcmF0aXZlcyB1bmRlcmdvIHRoZSBncmVhdGVzdAoJCQkJCWFtb3VudCBvZiBib2RpbHkgZGVncmFkYXRpb24sIHRoZSBtb3N0IHNlcnZpbGUgdGhvc2UgaW4gd2hpY2ggdGhlIG1vc3QgdXNlcyBhcmUKCQkJCQltYWRlIG9mIHRoZSBib2R5LCBhbmQgdGhlIG1vc3QgaWdub2JsZSB0aG9zZSBpbiB3aGljaCB0aGVyZSBpcyB0aGUgbGVhc3QKCQkJCQlyZXF1aXJlbWVudCBvZiB2aXJ0dWUgYXMgYW4gYWNjZXNzb3J5LiBCdXQgd2hpbGUgd2UgaGF2ZSBldmVuIG5vdyBnaXZlbiBhCgkJCQkJZ2VuZXJhbCBkZXNjcmlwdGlvbiBvZiB0aGVzZSB2YXJpb3VzIGJyYW5jaGVzLCB5ZXQgYSBkZXRhaWxlZCBhbmQgcGFydGljdWxhcgoJCQkJCWFjY291bnQgb2YgdGhlbSwgdGhvdWdoIHVzZWZ1bCBmb3IgdGhlIHByYWN0aWNlIG9mIHRoZSBpbmR1c3RyaWVzLCB3b3VsZCBiZQoJCQkJCWlsbGliZXJhbCBhcyBhIHN1YmplY3Qgb2YgcHJvbG9uZ2VkIHN0dWR5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVyZSBhcmUgYm9va3Mgb24gdGhlc2Ugc3ViamVjdHMgYnkgY2VydGFpbiBhdXRob3JzLCBmb3IKCQkJCQlleGFtcGxlIENoYXJldGlkZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk90aGVyd2lzZSB1bmtub3duLjwvbm90ZT4KCQkJCQlvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFBhcm9zIENpdHkiIGtleT0icGVyc2V1cyxQYXJvcyBDaXR5Ij5QYXJvczwvcGxhY2VOYW1lPgoJCQkJCTxtaWxlc3RvbmUgbj0iMTI1OWEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBBcG9sbG9kb3J1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QWxzbyBtZW50aW9uZWQgYnkgVmFycm8gYW5kCgkJCQkJCVBsaW55Ljwvbm90ZT4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTExNzMiIGtleT0idGduLDcwMTExNzMiPkxlbW5vczwvcGxhY2VOYW1lPiBoYXZlCgkJCQkJd3JpdHRlbiBhYm91dCBib3RoIGFncmljdWx0dXJlIGFuZCBmcnVpdC1mYXJtaW5nLCBhbmQgc2ltaWxhcmx5IG90aGVycyBhbHNvIG9uCgkJCQkJb3RoZXIgdG9waWNzLCBzbyB0aGVzZSBzdWJqZWN0cyBtYXkgYmUgc3R1ZGllZCBmcm9tIHRoZXNlIGF1dGhvcnMgYnkgYW55Ym9keQoJCQkJCWNvbmNlcm5lZCB0byBkbyBzbzsgYnV0IGluIGFkZGl0aW9uIGEgY29sbGVjdGlvbiBvdWdodCBhbHNvIHRvIGJlIG1hZGU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBhdXRob3Igb2YgdGhlIFNlY29uZCBCb29rIG9mIHRoZQoJCQkJCQlwc2V1ZG8tQXJpc3RvdGVsaWFuIDx0aXRsZT5PZWNvbm9taWNhPC90aXRsZT4gc2VlbXMgdG8gaGF2ZSB0YWtlbiB0aGUKCQkJCQkJaGludC48L25vdGU+IG9mIHRoZSBzY2F0dGVyZWQgYWNjb3VudHMgb2YgbWV0aG9kcyB0aGF0IGhhdmUgYnJvdWdodCBzdWNjZXNzCgkJCQkJaW4gYnVzaW5lc3MgdG8gY2VydGFpbiBpbmRpdmlkdWFscy4gQWxsIHRoZXNlIG1ldGhvZHMgYXJlIHNlcnZpY2VhYmxlIGZvciB0aG9zZQoJCQkJCXdobyB2YWx1ZSB3ZWFsdGgtZ2V0dGluZywgPG1pbGVzdG9uZSBlZD0iUCIgbj0iNC41IiB1bml0PSJMb2ViIGNoYXAiIC8+Zm9yCgkJCQkJZXhhbXBsZSB0aGUgcGxhbiBvZiBUaGFsZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBmb3VuZGVyIG9mCgkJCQkJCUdyZWVrIHBoaWxvc29waHkgYW5kIG1hdGhlbWF0aWNzLCBhbmQgb25lIG9mIHRoZSBTZXZlbiBTYWdlcywgNnRoLTV0aCBjZW50LgoJCQkJCQlCLkMuPC9ub3RlPiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1pbGV0dXMiIGtleT0icGVyc2V1cyxNaWxldHVzIj5NaWxldHVzPC9wbGFjZU5hbWU+LCB3aGljaCBpcyBhCgkJCQkJZGV2aWNlIGZvciB0aGUgYnVzaW5lc3Mgb2YgZ2V0dGluZyB3ZWFsdGgsIGJ1dCB3aGljaCwgdGhvdWdoIGl0IGlzIGF0dHJpYnV0ZWQgdG8KCQkJCQloaW0gYmVjYXVzZSBvZiBoaXMgd2lzZG9tLCBpcyByZWFsbHkgb2YgdW5pdmVyc2FsIGFwcGxpY2F0aW9uLiBUaGFsZXMsIHNvIHRoZQoJCQkJCXN0b3J5IGdvZXMsIGJlY2F1c2Ugb2YgaGlzIHBvdmVydHkgd2FzIHRhdW50ZWQgd2l0aCB0aGUgdXNlbGVzc25lc3Mgb2YKCQkJCQlwaGlsb3NvcGh5OyBidXQgZnJvbSBoaXMga25vd2xlZGdlIG9mIGFzdHJvbm9teSBoZSBoYWQgb2JzZXJ2ZWQgd2hpbGUgaXQgd2FzCgkJCQkJc3RpbGwgd2ludGVyIHRoYXQgdGhlcmUgd2FzIGdvaW5nIHRvIGJlIGEgbGFyZ2UgY3JvcCBvZiBvbGl2ZXMsIHNvIGhlIHJhaXNlZCBhCgkJCQkJc21hbGwgc3VtIG9mIG1vbmV5IGFuZCBwYWlkIHJvdW5kIGRlcG9zaXRzIGZvciB0aGUgd2hvbGUgb2YgdGhlIG9saXZlLXByZXNzZXMgaW4KCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNaWxldHVzIiBrZXk9InBlcnNldXMsTWlsZXR1cyI+TWlsZXR1czwvcGxhY2VOYW1lPiBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDaGlvcyBDaXR5IiBrZXk9InBlcnNldXMsQ2hpb3MgQ2l0eSI+Q2hpb3M8L3BsYWNlTmFtZT4sIHdoaWNoIGhlIGhpcmVkIGF0IGEgbG93IHJlbnQgYXMgbm9ib2R5CgkJCQkJd2FzIHJ1bm5pbmcgaGltIHVwOyBhbmQgd2hlbiB0aGUgc2Vhc29uIGFycml2ZWQsIHRoZXJlIHdhcyBhIHN1ZGRlbiBkZW1hbmQgZm9yIGEKCQkJCQludW1iZXIgb2YgcHJlc3NlcyBhdCB0aGUgc2FtZSB0aW1lLCBhbmQgYnkgbGV0dGluZyB0aGVtIG91dCBvbiB3aGF0IHRlcm1zIGhlCgkJCQkJbGlrZWQgaGUgcmVhbGl6ZWQgYSBsYXJnZSBzdW0gb2YgbW9uZXksIHNvIHByb3ZpbmcgdGhhdCBpdCBpcyBlYXN5IGZvcgoJCQkJCXBoaWxvc29waGVycyB0byBiZSByaWNoIGlmIHRoZXkgY2hvb3NlLCBidXQgdGhpcyBpcyBub3Qgd2hhdCB0aGV5IGNhcmUgYWJvdXQuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoYWxlcyB0aGVuIGlzIHJlcG9ydGVkIHRvIGhhdmUKCQkJCQl0aHVzIGRpc3BsYXllZCBoaXMgd2lzZG9tLCBidXQgYXM8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmEKCQkJCQltYXR0ZXIgb2YgZmFjdCB0aGlzIGRldmljZSBvZiB0YWtpbmcgYW4gb3Bwb3J0dW5pdHkgdG8gc2VjdXJlIGEgbW9ub3BvbHkgaXMgYQoJCQkJCXVuaXZlcnNhbCBwcmluY2lwbGUgb2YgYnVzaW5lc3M7IGhlbmNlIGV2ZW4gc29tZSBzdGF0ZXMgaGF2ZSByZWNvdXJzZSB0byB0aGlzCgkJCQkJcGxhbiBhcyBhIG1ldGhvZCBvZiByYWlzaW5nIHJldmVudWUgd2hlbiBzaG9ydCBvZiBmdW5kczogdGhleSBpbnRyb2R1Y2UgYQoJCQkJCW1vbm9wb2x5IG9mIG1hcmtldGFibGUgZ29vZHMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXJlCgkJCQkJd2FzIGEgbWFuIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAzMTIyIiBrZXk9InRnbiw3MDAzMTIyIj5TaWNpbHk8L3BsYWNlTmFtZT4gd2hvIHVzZWQgYSBzdW0gb2YKCQkJCQltb25leSBkZXBvc2l0ZWQgd2l0aCBoaW0gdG8gYnV5IHVwIGFsbCB0aGUgaXJvbiBmcm9tIHRoZSBpcm9uIG1pbmVzLCBhbmQKCQkJCQlhZnRlcndhcmRzIHdoZW4gdGhlIGRlYWxlcnMgY2FtZSBmcm9tIHRoZSB0cmFkaW5nLWNlbnRlcnMgaGUgd2FzIHRoZSBvbmx5CgkJCQkJc2VsbGVyLCB0aG91Z2ggaGUgZGlkIG5vdCBncmVhdGx5IHJhaXNlIHRoZSBwcmljZSwgYnV0IGFsbCB0aGUgc2FtZSBoZSBtYWRlIGEKCQkJCQlwcm9maXQgb2YgYSBodW5kcmVkIHRhbGVudHM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSB0YWxlbnQgd2FzCgkJCQkJCWFib3V0IDI0MCBwb3VuZHMuPC9ub3RlPiBvbiBoaXMgY2FwaXRhbCBvZiBmaWZ0eS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNC44IiB1bml0PSJMb2ViIGNoYXAiIC8+V2hlbiBEaW9ueXNpdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkRpb255c2l1cyB0aGUgZWxkZXIsIHR5cmFudCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5cmFjdXNlIiBrZXk9InBlcnNldXMsU3lyYWN1c2UiPlN5cmFjdXNlPC9wbGFjZU5hbWU+CgkJCQkJCTxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii00MDUvLTM2NyIgZnJvbT0iLTQwNSIgdG89Ii0zNjciPjQwNTwvZGF0ZVJhbmdlPi0zNjcgQi5DLjwvbm90ZT4gY2FtZSB0bwoJCQkJCWtub3cgb2YgaXQgaGUgb3JkZXJlZCB0aGUgbWFuIHRvIHRha2UgaGlzIG1vbmV5IHdpdGggaGltIGJ1dCBjbGVhciBvdXQgb2YKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPiBvbiB0aGUgc3BvdCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmNmLiBUaHVjeWRpZGVzIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7Ov+G8sSDOtOKAmQoJCQkJCQkJzr/hvZDOuuG9s8+Ezrkg4byUzrzOtc65zr3Osc69IOG8gM67zrvhvbAgLiAuIC48L2ZvcmVpZ24+PC9ub3RlPiBzaW5jZSBoZSB3YXMgaW52ZW50aW5nCgkJCQkJbWVhbnMgb2YgcHJvZml0IGRldHJpbWVudGFsIHRvIHRoZSB0eXJhbnQncyBvd24gYWZmYWlycy4gWWV0IHJlYWxseSB0aGlzIGRldmljZQoJCQkJCWlzIHRoZSBzYW1lIGFzIHRoZSBkaXNjb3Zlcnkgb2YgVGhhbGVzLCBmb3IgYm90aCBtZW4gYWxpa2UgY29udHJpdmVkIHRvIHNlY3VyZQoJCQkJCXRoZW1zZWx2ZXMgYSBtb25vcG9seS4gQW4gYWNxdWFpbnRhbmNlIHdpdGggdGhlc2UgZGV2aWNlcyBpcyBhbHNvIHNlcnZpY2VhYmxlCgkJCQkJZm9yIHN0YXRlc21lbiwgZm9yIG1hbnkgc3RhdGVzIG5lZWQgZmluYW5jaWFsIGFpZCBhbmQgbW9kZXMgb2YgcmV2ZW51ZSBsaWtlCgkJCQkJdGhvc2UgZGVzY3JpYmVkLCBqdXN0IGFzIGEgaG91c2Vob2xkIG1heSwgYnV0IGluIGdyZWF0ZXIgZGVncmVlOyBoZW5jZSBzb21lCgkJCQkJc3RhdGVzbWVuIGV2ZW4gZGV2b3RlIHRoZWlyIHBvbGl0aWNhbCBhY3Rpdml0eSBleGNsdXNpdmVseSB0byBmaW5hbmNlLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgc2luY2UsIGFzIHdlIHNhdyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjIgaW5pdC48L25vdGU+IHRoZSBzY2llbmNlIG9mIGhvdXNlaG9sZAoJCQkJCW1hbmFnZW1lbnQgaGFzIHRocmVlIGRpdmlzaW9ucywgb25lIHRoZSByZWxhdGlvbiBvZiBtYXN0ZXIgdG8gc2xhdmUsIG9mIHdoaWNoIHdlCgkJCQkJaGF2ZSBzcG9rZW4gYmVmb3JlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+MyBmaW4uLCA0Ljwvbm90ZT4gb25lIHRoZQoJCQkJCXBhdGVybmFsIHJlbGF0aW9uLCBhbmQgdGhlIHRoaXJkIHRoZSBjb25qdWdhbDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIGNvbnN0cnVjdGlvbiBvZiB0aGUgc2VudGVuY2UgaXMgaW50ZXJydXB0ZWQsIGFuZCBuZXZlcgoJCQkJCQljb21wbGV0ZWQuPC9ub3RlPuKAlGZvciBpdCBpcyBhIHBhcnQgb2YgdGhlIGhvdXNlaG9sZCBzY2llbmNlIHRvCgkJCQkJcnVsZSBvdmVyIHdpZmUgYW5kIGNoaWxkcmVuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPu+8iG92ZXIgYm90aCBhcyBvdmVyIGZyZWVtZW4sIHlldCBub3Qgd2l0aCB0aGUgc2FtZSBtb2RlIG9mIGdvdmVybm1lbnQsCgkJCQkJYnV0IG92ZXIgdGhlIHdpZmUgdG8gZXhlcmNpc2UgcmVwdWJsaWNhbiBnb3Zlcm5tZW50IGFuZCBvdmVyIHRoZSBjaGlsZHJlbgoJCQkJCW1vbmFyY2hpY2Fs77yJOyA8bWlsZXN0b25lIG49IjEyNTliIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5mb3IgdGhlIG1hbGUgaXMgYnkgbmF0dXJlIGJldHRlciBmaXR0ZWQgdG8gY29tbWFuZAoJCQkJCXRoYW4gdGhlIGZlbWFsZSDvvIhleGNlcHQgaW4gc29tZSBjYXNlcyB3aGVyZSB0aGVpciB1bmlvbiBoYXMgYmVlbiBmb3JtZWQKCQkJCQljb250cmFyeSB0byBuYXR1cmXvvIkgYW5kIHRoZSBvbGRlciBhbmQgZnVsbHkgZGV2ZWxvcGVkIHBlcnNvbiB0aGFuIHRoZQoJCQkJCXlvdW5nZXIgYW5kIGltbWF0dXJlLiBJdCBpcyB0cnVlIHRoYXQgaW4gbW9zdCBjYXNlcyBvZiByZXB1YmxpY2FuIGdvdmVybm1lbnQgdGhlCgkJCQkJcnVsZXIgYW5kIHRoZSBydWxlZCBpbnRlcmNoYW5nZSBpbiB0dXJuIO+8iGZvciB0aGV5IHRlbmQgdG8gYmUgb24gaW4KCQkJCQllcXVhbCBsZXZlbCBpbiB0aGVpciBuYXR1cmUgYW5kIHRvIGhhdmUgbm8gZGlmZmVyZW5jZSBhdCBhbGzvvIksIGFsdGhvdWdoCgkJCQkJbmV2ZXJ0aGVsZXNzIGR1cmluZyB0aGUgcGVyaW9kIHdoZW4gb25lIGlzIHJ1bGVyIGFuZCB0aGUgb3RoZXIgcnVsZWQgdGhleSBzZWVrCgkJCQkJdG8gaGF2ZSBhIGRpc3RpbmN0aW9uIGJ5IG1lYW5zIG9mIGluc2lnbmlhIGFuZCB0aXRsZXMgYW5kIGhvbm9ycywganVzdCBhcyBBbWFzaXMKCQkJCQltYWRlIGhpcyBzcGVlY2ggYWJvdXQgdGhlIGZvb3QtYmF0aDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgZGVmYXVsdD0iTk8iIG49IkhkdC4gMS4xNzIiIHZhbGlkPSJ5ZXMiPkhkdC4gMS4xNzI8L2JpYmw+LiBBbWFzaXMga2luZyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjgzMyIga2V5PSJ0Z24sNzAxNjgzMyI+RWd5cHQ8L3BsYWNlTmFtZT4gd2FzIGRlc3Bpc2VkIGJ5IGhpcyBzdWJqZWN0cyBmb3IgaGlzCgkJCQkJCWxvdyBiaXJ0aCwgc28gaGUgaGFkIGEgc3RhdHVlIG1hZGUgb3V0IG9mIGEgZ29sZCBmb290LWJhdGggYW5kIHNldCBpdCB1cCBmb3IKCQkJCQkJdGhlbSB0byB3b3JzaGlwLCBhZnRlcndhcmRzIGV4cGxhaW5pbmcgdG8gdGhlbSBpdHMgbG93bHkgb3JpZ2luLjwvbm90ZT47IGJ1dAoJCQkJCXRoZSBtYWxlIHN0YW5kcyBpbiB0aGlzIHJlbGF0aW9uc2hpcCB0byB0aGUgZmVtYWxlIGNvbnRpbnVvdXNseS4gVGhlIHJ1bGUgb2YgdGhlCgkJCQkJZmF0aGVyIG92ZXIgdGhlIGNoaWxkcmVuIG9uIHRoZSBvdGhlciBoYW5kIGlzIHRoYXQgb2YgYSBraW5nOyBmb3IgdGhlIG1hbGUKCQkJCQlwYXJlbnQgaXMgdGhlIHJ1bGVyIGluIHZpcnR1ZSBib3RoIG9mIGFmZmVjdGlvbiBhbmQgb2Ygc2VuaW9yaXR5LCB3aGljaCBpcwoJCQkJCWNoYXJhY3RlcmlzdGljIG9mIHJveWFsIGdvdmVybm1lbnQg77yIYW5kIHRoZXJlZm9yZSBIb21lcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDEuNTQ0IiB2YWxpZD0ieWVzIj5Ib20uIElsLgoJCQkJCQkxLjU0NDwvYmlibD4uPC9ub3RlPiBmaW5lbHkgZGVzaWduYXRlZCBaZXVzIGJ5IHRoZSB3b3JkcyA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9ImRhY3R5bGljIj5mYXRoZXIgb2YgbWVuIGFuZCBnb2RzLDwvbD4KCQkJCQk8L3F1b3RlPiBhcyB0aGUga2luZyBvZiB0aGVtIGFsbO+8iS4gRm9yIHRob3VnaCBpbiBuYXR1cmUgdGhlIGtpbmcgbXVzdAoJCQkJCWJlIHN1cGVyaW9yLCBpbiByYWNlIGhlIHNob3VsZCBiZSB0aGUgc2FtZSBhcyBoaXMgc3ViamVjdHMsIGFuZCB0aGlzIGlzIHRoZQoJCQkJCXBvc2l0aW9uIG9mIHRoZSBlbGRlciBpbiByZWxhdGlvbiB0byB0aGUgeW91bmdlciBhbmQgb2YgdGhlIGZhdGhlciBpbiByZWxhdGlvbgoJCQkJCXRvIHRoZSBjaGlsZC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgY2xlYXIgdGhlbiB0aGF0CgkJCQkJaG91c2Vob2xkIG1hbmFnZW1lbnQgdGFrZXMgbW9yZSBpbnRlcmVzdCBpbiB0aGUgaHVtYW4gbWVtYmVycyBvZiB0aGUgaG91c2Vob2xkCgkJCQkJdGhhbiBpbiBpdHMgaW5hbmltYXRlIHByb3BlcnR5LCBhbmQ8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmluCgkJCQkJdGhlIGV4Y2VsbGVuY2Ugb2YgdGhlc2UgdGhhbiBpbiB0aGF0IG9mIGl0cyBwcm9wZXJ0eSwgd2hpY2ggd2Ugc3R5bGUgcmljaGVzLCBhbmQKCQkJCQltb3JlIGluIHRoYXQgb2YgaXRzIGZyZWUgbWVtYmVycyB0aGFuIGluIHRoYXQgb2Ygc2xhdmVzLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Rmlyc3Qgb2YgYWxsIHRoZW4gYXMgdG8gc2xhdmVzIHRoZSBkaWZmaWN1bHR5IG1pZ2h0IGJlIHJhaXNlZCwKCQkJCQlkb2VzIGEgc2xhdmUgcG9zc2VzcyBhbnkgb3RoZXIgZXhjZWxsZW5jZSwgYmVzaWRlcyBoaXMgbWVyaXRzIGFzIGEgdG9vbCBhbmQgYQoJCQkJCXNlcnZhbnQsIG1vcmUgdmFsdWFibGUgdGhhbiB0aGVzZSwgZm9yIGluc3RhbmNlIHRlbXBlcmFuY2UsIGhhdmUgdGhlIGNvdXJhZ2UsCgkJCQkJanVzdGljZSBhbmQgYW55IG9mIHRoZSBvdGhlciBtb3JhbCB2aXJ0dWVzLCBvciBoYXMgaGUgbm8gZXhjZWxsZW5jZSBiZXNpZGUgaGlzCgkJCQkJYm9kaWx5IHNlcnZpY2U/IEZvciBlaXRoZXIgd2F5IHRoZXJlIGlzIGRpZmZpY3VsdHk7IGlmIHNsYXZlcyBkbyBwb3NzZXNzIG1vcmFsCgkJCQkJdmlydHVlLCB3aGVyZWluIHdpbGwgdGhleSBkaWZmZXIgZnJvbSBmcmVlbWVuPyBvciBpZiB0aGV5IGRvIG5vdCwgdGhpcyBpcwoJCQkJCXN0cmFuZ2UsIGFzIHRoZXkgYXJlIGh1bWFuIGJlaW5ncyBhbmQgcGFydGljaXBhdGUgaW4gcmVhc29uLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgbmVhcmx5IHRoZSBzYW1lIGlzIHRoZSBxdWVzdGlvbiBhbHNvIHJhaXNlZAoJCQkJCWFib3V0IHRoZSB3b21hbiBhbmQgdGhlIGNoaWxkOiBoYXZlIHRoZXkgdG9vIHZpcnR1ZXMsIGFuZCBvdWdodCBhIHdvbWFuIHRvIGJlCgkJCQkJdGVtcGVyYXRlLCBicmF2ZSBhbmQganVzdCwgYW5kIGNhbiBhIGNoaWxkIGJlIGludGVtcGVyYXRlIG9yIHRlbXBlcmF0ZSwgb3Igbm90PwoJCQkJCVRoaXMgcG9pbnQgdGhlcmVmb3JlIHJlcXVpcmVzIGdlbmVyYWwgY29uc2lkZXJhdGlvbiBpbiByZWxhdGlvbiB0byBuYXR1cmFsIHJ1bGVyCgkJCQkJYW5kIHN1YmplY3Q6IGlzIHZpcnR1ZSB0aGUgc2FtZSBmb3IgcnVsZXIgYW5kIHJ1bGVkLCBvciBkaWZmZXJlbnQ/IElmIGl0IGlzCgkJCQkJcHJvcGVyIGZvciBib3RoIHRvIHBhcnRha2UgaW4gbm9iaWxpdHkgb2YgY2hhcmFjdGVyLCBob3cgY291bGQgaXQgYmUgcHJvcGVyIGZvcgoJCQkJCXRoZSBvbmUgdG8gcnVsZSBhbmQgdGhlIG90aGVyIHRvIGJlIHJ1bGVkIHVuY29uZGl0aW9uYWxseT8gd2UgY2Fubm90IHNheSB0aGF0CgkJCQkJdGhlIGRpZmZlcmVuY2UgaXMgdG8gYmUgb25lIG9mIGRlZ3JlZSwgZm9yIHJ1bGluZyBhbmQgYmVpbmcgcnVsZWQgZGlmZmVyIGluCgkJCQkJa2luZCwgYW5kIGRpZmZlcmVuY2Ugb2YgZGVncmVlIGlzIG5vdCBhIGRpZmZlcmVuY2UgaW4ga2luZCBhdCBhbGwuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPldoZXJlYXMgaWYgb24gdGhlIGNvbnRyYXJ5IGl0IGlzIHByb3BlciBmb3IKCQkJCQl0aGUgb25lIHRvIGhhdmUgbW9yYWwgbm9iaWxpdHkgYnV0IG5vdCBmb3IgdGhlIG90aGVyLCB0aGlzIGlzIHN1cnByaXNpbmcuIEZvciBpZgoJCQkJCXRoZSBydWxlciBpcyBub3QgdGVtcGVyYXRlIGFuZCBqdXN0LCBob3cgd2lsbCBoZSBydWxlIHdlbGw/IEFuZCBpZiB0aGUgcnVsZWQsCgkJCQkJaG93IHdpbGwgaGUgb2JleSB3ZWxsPyA8bWlsZXN0b25lIG49IjEyNjBhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5JZiBpbnRlbXBlcmF0ZSBhbmQgY293YXJkbHkgaGUgd2lsbCBub3QgcGVyZm9ybSBhbnkKCQkJCQlvZiB0aGUgZHV0aWVzIG9mIGhpcyBwb3NpdGlvbi4gSXQgaXMgZXZpZGVudCB0aGVyZWZvcmUgdGhhdCBib3RoIG11c3QgcG9zc2VzcwoJCQkJCXZpcnR1ZSwgYnV0IHRoYXQgdGhlcmUgYXJlIGRpZmZlcmVuY2VzIGluIHRoZWlyIHZpcnR1ZSDvvIhhcyBhbHNvIHRoZXJlCgkJCQkJYXJlIGRpZmZlcmVuY2VzIGJldHdlZW4gdGhvc2Ugd2hvIGFyZSBieSBuYXR1cmUgcnVsZWTvvIkuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIGNsYXVzZSBzZWVtcyB0byBoYXZlIGJlZW4gaW50ZXJwb2xhdGVkOwoJCQkJCQlvbmUgbXMuIGhhcyBhIG1hcmdpbmFsIGNvcnJlY3Rpb24sIOKAmGJ5IG5hdHVyZSBydWxlcnMgYW5kCgkJCQkJCXJ1bGVkLuKAmTwvbm90ZT4gQW5kIG9mIHRoaXMgd2Ugc3RyYWlnaHR3YXkgZmluZCBhbiBpbmRpY2F0aW9uIGluCgkJCQkJY29ubmVjdGlvbiB3aXRoIHRoZSBzb3VsOyBmb3IgdGhlIHNvdWwgYnkgbmF0dXJlIGNvbnRhaW5zIGEgcGFydCB0aGF0IHJ1bGVzIGFuZAoJCQkJCWEgcGFydCB0aGF0IGlzIHJ1bGVkLCB0byB3aGljaCB3ZSBhc3NpZ24gZGlmZmVyZW50IHZpcnR1ZXMsIHRoYXQgaXMsIHRoZSB2aXJ0dWUKCQkJCQlvZiB0aGUgcmF0aW9uYWwgYW5kIHRoYXQgb2YgdGhlIGlycmF0aW9uYWwuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IGlzIGNsZWFyIHRoZW4gdGhhdCB0aGUgY2FzZSBpcyB0aGUgc2FtZSBhbHNvIHdpdGggdGhlCgkJCQkJb3RoZXIgaW5zdGFuY2VzIG9mIHJ1bGVyIGFuZCBydWxlZC4gSGVuY2UgdGhlcmUgYXJlIGJ5IG5hdHVyZSB2YXJpb3VzIGNsYXNzZXMgb2YKCQkJCQlydWxlcnMgYW5kIHJ1bGVkLiBGb3IgdGhlIGZyZWUgcnVsZXMgdGhlIHNsYXZlLCB0aGUgbWFsZSB0aGUgZmVtYWxlLCBhbmQgdGhlIG1hbgoJCQkJCXRoZSBjaGlsZCBpbiBhIGRpZmZlcmVudCB3YXkuIEFuZCBhbGwgcG9zc2VzcyB0aGUgdmFyaW91cyBwYXJ0cyBvZiB0aGUgc291bCwgYnV0CgkJCQkJcG9zc2VzcyB0aGVtIGluIGRpZmZlcmVudCB3YXlzOyBmb3IgdGhlIHNsYXZlIGhhcyBub3QgZ290IHRoZSBkZWxpYmVyYXRpdmUgcGFydAoJCQkJCWF0IGFsbCwgYW5kIHRoZSBmZW1hbGUgaGFzIGl0LCBidXQgd2l0aG91dCBmdWxsIGF1dGhvcml0eSwgd2hpbGUgdGhlIGNoaWxkIGhhcwoJCQkJCWl0LCBidXQgaW4gYW4gdW5kZXZlbG9wZWQgZm9ybS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS43IiB1bml0PSJMb2ViIGNoYXAiIC8+SGVuY2U8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluIHRoZSBtc3MuIHRoaXMgc2VudGVuY2UgZm9sbG93cwoJCQkJCQl0aGUgbmV4dCBvbmUsIOKAmFdlIG11c3Qgc3VwcG9zZeKAlGZ1bmN0aW9uLOKAmSBhbmQKCQkJCQkJYmVnaW5zIOKAmEhlbmNlIHRoZSBydWxlciBtdXN0IHBvc3Nlc3MgPGVtcGg+bW9yYWw8L2VtcGg+CgkJCQkJCXZpcnR1ZS7igJk8L25vdGU+IHRoZSBydWxlciBtdXN0IHBvc3Nlc3MgaW50ZWxsZWN0dWFsIHZpcnR1ZSBpbgoJCQkJCWNvbXBsZXRlbmVzcyDvvIhmb3IgYW55IHdvcmssIHRha2VuIGFic29sdXRlbHksIGJlbG9uZ3MgdG8gdGhlCgkJCQkJbWFzdGVyLWNyYWZ0c21hbiwgYW5kIHJhdGlvbmFsIHByaW5jaXBsZSBpcyBhIG1hc3Rlci1jcmFmdHNtYW7vvIk7IHdoaWxlCgkJCQkJZWFjaCBvZiB0aGUgb3RoZXIgcGFydGllcyBtdXN0IGhhdmUgdGhhdCBzaGFyZSBvZiB0aGlzIHZpcnR1ZSB3aGljaCBpcwoJCQkJCWFwcHJvcHJpYXRlIHRvIHRoZW0uIFdlIG11c3Qgc3VwcG9zZSB0aGVyZWZvcmUgdGhhdCB0aGUgc2FtZSBuZWNlc3NhcmlseSBob2xkcwoJCQkJCWdvb2Qgb2YgdGhlIG1vcmFsIHZpcnR1ZXM6IGFsbCBtdXN0IHBhcnRha2Ugb2YgdGhlbSwgYnV0IG5vdCBpbiB0aGUgc2FtZSB3YXksCgkJCQkJYnV0IGluIHN1Y2ggbWVhc3VyZSBhcyBpcyBwcm9wZXIgdG8gZWFjaCBpbiByZWxhdGlvbiB0byBoaXMgb3duCgkJCQkJCWZ1bmN0aW9uLjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iNS44IiB1bml0PSJMb2ViIGNoYXAiIC8+SGVuY2UgaXQgaXMgbWFuaWZlc3QgdGhhdCBhbGwgdGhlIHBlcnNvbnMgbWVudGlvbmVkCgkJCQkJaGF2ZSBhIG1vcmFsIHZpcnR1ZSBvZiB0aGVpciBvd24sIGFuZCB0aGF0IHRoZSB0ZW1wZXJhbmNlIG9mIGEgd29tYW4gYW5kIHRoYXQgb2YKCQkJCQlhIG1hbiBhcmUgbm90IHRoZSBzYW1lLCBub3IgdGhlaXIgY291cmFnZSBhbmQganVzdGljZSwgYXMgU29jcmF0ZXMgdGhvdWdodCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPgoJCQkJCQk8YmlibCBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gTWVubyA3NGIiIHZhbGlkPSJ5ZXMiPlBsYXQuIE1lbm8gNzRiZmYuPC9iaWJsPgoJCQkJCTwvbm90ZT4gYnV0IHRoZSBvbmUgaXMgdGhlIGNvdXJhZ2Ugb2YgY29tbWFuZCwgYW5kIHRoZSBvdGhlciB0aGF0IG9mCgkJCQkJc3Vib3JkaW5hdGlvbiwgYW5kIHRoZSBjYXNlIGlzIHNpbWlsYXIgd2l0aCB0aGUgb3RoZXIgdmlydHVlcy4gQW5kIHRoaXMgaXMgYWxzbwoJCQkJCWNsZWFyIHdoZW4gd2UgZXhhbWluZSB0aGUgbWF0dGVyIG1vcmUgaW4gZGV0YWlsLCBmb3IgaXQgaXMgbWlzbGVhZGluZyB0byBnaXZlIGEKCQkJCQlnZW5lcmFsIGRlZmluaXRpb24gb2YgdmlydHVlLCBhcyBzb21lIGRvLCB3aG8gc2F5IHRoYXQgdmlydHVlIGlzIGJlaW5nIGluIGdvb2QKCQkJCQljb25kaXRpb24gYXMgcmVnYXJkcyB0aGUgc291bCBvciBhY3RpbmcgdXByaWdodGx5IG9yIHRoZSBsaWtlOyB0aG9zZSB3aG8KCQkJCQllbnVtZXJhdGUgdGhlIHZpcnR1ZXMgb2YgZGlmZmVyZW50IHBlcnNvbnMgc2VwYXJhdGVseSwgYXMgR29yZ2lhcyBkb2VzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBpbgoJCQkJCQkJUGxhdG8sIDx0aXRsZT5NZW5vPC90aXRsZT4g77yIc2VlIDcgYWJvdmXvvIksCgkJCQkJCXdoZXJlIHRoaXMgc29waGlzdCBmaWd1cmVzIGFzIGEgY2hhcmFjdGVyIGluIHRoZSBkaWFsb2d1ZTsgc2VlIGFsc28gMy4xLjksCgkJCQkJCW5vdGUuPC9ub3RlPiBhcmUgbXVjaCBtb3JlIGNvcnJlY3QgdGhhbiB0aG9zZSB3aG8gZGVmaW5lIHZpcnR1ZSBpbiB0aGF0IHdheS4KCQkJCQlIZW5jZSB3ZSBtdXN0IGhvbGQgdGhhdCBhbGwgb2YgdGhlc2UgcGVyc29ucyBoYXZlIHRoZWlyIGFwcHJvcHJpYXRlIHZpcnR1ZXMsIGFzCgkJCQkJdGhlIHBvZXQgc2FpZCBvZiB3b21hbjogPHF1b3RlIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgbWV0PSJpYW1iaWMiPlNpbGVuY2UgZ2l2ZXMgZ3JhY2UgdG8gd29tYW48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPgoJCQkJCQkJCTxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJTb3BoLiBBai4gMjkzIiB2YWxpZD0ieWVzIj5Tb3BoLiBBai4gMjkzPC9iaWJsPgoJCQkJCQkJPC9ub3RlPuKAlDwvbD4KCQkJCQk8L3F1b3RlPiB0aG91Z2ggdGhhdCBpcyBub3QgdGhlIGNhc2UgbGlrZXdpc2Ugd2l0aCBhIG1hbi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS45IiB1bml0PSJMb2ViIGNoYXAiIC8+QWxzbyB0aGUgY2hpbGQgaXMgbm90IGNvbXBsZXRlbHkgZGV2ZWxvcGVkLCBzbyB0aGF0CgkJCQkJbWFuaWZlc3RseSBoaXMgdmlydHVlIGFsc28gaXMgbm90IHBlcnNvbmFsIHRvIGhpbXNlbGYsIGJ1dCByZWxhdGl2ZSB0byB0aGUgZnVsbHkKCQkJCQlkZXZlbG9wZWQgYmVpbmcsIHRoYXQgaXMsIHRoZSBwZXJzb24gaW4gYXV0aG9yaXR5IG92ZXIgaGltLiBBbmQgc2ltaWxhcmx5IHRoZQoJCQkJCXNsYXZlJ3MgdmlydHVlIGFsc28gaXMgaW4gcmVsYXRpb24gdG8gdGhlIG1hc3Rlci48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCB3ZSBsYWlkIGl0IGRvd24gdGhhdCB0aGUgc2xhdmUgaXMgc2VydmljZWFibGUgZm9yIHRoZSBtZXJlIG5lY2Vzc2FyaWVzIG9mCgkJCQkJbGlmZSwgc28gdGhhdCBjbGVhcmx5IGhlIG5lZWRzIG9ubHkgYSBzbWFsbCBhbW91bnQgb2YgdmlydHVlLCBpbiBmYWN0IGp1c3QKCQkJCQllbm91Z2ggdG8gcHJldmVudCBoaW0gZnJvbSBmYWlsaW5nIGluIGhpcyB0YXNrcyBvd2luZyB0byBpbnRlbXBlcmFuY2UgYW5kCgkJCQkJY293YXJkaWNlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+77yIQnV0IHRoZQoJCQkJCXF1ZXN0aW9uIG1pZ2h0IGJlIHJhaXNlZCwgc3VwcG9zaW5nIHRoYXQgd2hhdCBoYXMganVzdCBiZWVuIHNhaWQgaXMgdHJ1ZSwgd2lsbAoJCQkJCWFydGlzYW5zIGFsc28gbmVlZCB0byBoYXZlIHZpcnR1ZT8gZm9yIHRoZXkgZnJlcXVlbnRseSBmYWxsIHNob3J0IGluIHRoZWlyIHRhc2tzCgkJCQkJb3dpbmcgdG8gaW50ZW1wZXJhbmNlLiBPciBpcyB0aGVpciBjYXNlIGVudGlyZWx5IGRpZmZlcmVudD8gRm9yIHRoZSBzbGF2ZSBpcyBhCgkJCQkJcGFydG5lciBpbiBoaXMgbWFzdGVyJ3MgbGlmZSwgYnV0IHRoZSBhcnRpc2FuIGlzIG1vcmUgcmVtb3RlLCBhbmQgb25seSBzbyBtdWNoCgkJCQkJb2YgdmlydHVlIGZhbGxzIHRvIGhpcyBzaGFyZSBhcyBvZiBzbGF2ZXJ5PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGhpcyBleGNlbGxlbmNlcyBhcyBhbiBhcnRpc2FuIGFyZSB0aGUgcXVhbGl0aWVzIG9mIGEgc3Vib3JkaW5hdGUKCQkJCQkJ77yIaGlzIHZpcnR1ZXMgYXMgYSBodW1hbiBiZWluZywgYXBhcnQgZnJvbSBoaXMgdHJhZGUsIGFyZSBub3QKCQkJCQkJY29uc2lkZXJlZO+8iS48L25vdGU+4oCUIDxtaWxlc3RvbmUgbj0iMTI2MGIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGUgbWVjaGFuaWMgYXJ0aXNhbiBpcwoJCQkJCXVuZGVyIGEgc29ydCBvZiBsaW1pdGVkIHNsYXZlcnksIGFuZCB3aGVyZWFzIHRoZSBzbGF2ZSBpcyBvbmUgb2YgdGhlIG5hdHVyYWwKCQkJCQljbGFzc2VzLCBubyBzaG9lbWFrZXIgb3Igb3RoZXIgY3JhZnRzbWFuIGJlbG9uZ3MgdG8gaGlzIHRyYWRlIGJ5CgkJCQkJbmF0dXJlLu+8iSA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgbWFuaWZlc3QKCQkJCQl0aGVyZWZvcmUgdGhhdCB0aGUgbWFzdGVyIG91Z2h0IHRvIGJlIHRoZSBjYXVzZSB0byB0aGUgc2xhdmUgb2YgdGhlIHZpcnR1ZQoJCQkJCXByb3BlciB0byBhIHNsYXZlLCBidXQgbm90IGFzIHBvc3Nlc3NpbmcgdGhhdCBhcnQgb2YgbWFzdGVyc2hpcCB3aGljaCB0ZWFjaGVzIGEKCQkJCQlzbGF2ZSBoaXMgdGFza3MuIEhlbmNlIHRob3NlIHBlcnNvbnMgYXJlIG1pc3Rha2VuIHdobyBkZXByaXZlIHRoZSBzbGF2ZSBvZgoJCQkJCXJlYXNvbmluZyBhbmQgdGVsbCB1cyB0byB1c2UgY29tbWFuZCBvbmx5OyBmb3IgYWRtb25pdGlvbiBpcyBtb3JlIHByb3Blcmx5CgkJCQkJZW1wbG95ZWQgd2l0aCBzbGF2ZXMgdGhhbiB3aXRoIGNoaWxkcmVuLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IG9uCgkJCQkJdGhlc2Ugc3ViamVjdHMgbGV0IHVzIGNvbmNsdWRlIG91ciBkZWNpc2lvbnMgaW4gdGhpcyBtYW5uZXI7IHdoaWxlIHRoZSBxdWVzdGlvbgoJCQkJCW9mIHRoZSB2aXJ0dWUgc2V2ZXJhbGx5IGJlbG9uZ2luZyB0byBtYW4gYW5kIHdvbWFuIGFuZCBjaGlsZHJlbiBhbmQgZmF0aGVyLCBhbmQKCQkJCQlvZiB0aGUgcmlnaHQgYW5kIHdyb25nIG1vZGUgb2YgY29uZHVjdGluZyB0aGVpciBtdXR1YWwgaW50ZXJjb3Vyc2UgYW5kIHRoZQoJCQkJCXByb3BlciB3YXkgb2YgcHVyc3VpbmcgdGhlIGdvb2QgbW9kZSBhbmQgYXZvaWRpbmcgdGhlIGJhZCBvbmUsIGFyZSBtYXR0ZXJzIHRoYXQKCQkJCQlpdCB3aWxsIGJlIG5lY2Vzc2FyeSB0byBmb2xsb3cgdXAgaW4gdGhlIHBhcnQgb2Ygb3VyIHRyZWF0aXNlIGRlYWxpbmcgd2l0aCB0aGUKCQkJCQl2YXJpb3VzIGZvcm1zIG9mIGNvbnN0aXR1dGlvbi48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkFzIGEgbWF0dGVyIG9mCgkJCQkJCWZhY3QgaW4gQm9va3MgNywgOCBkZWFsaW5nIHdpdGggdGhlIGJlc3QgY29uc3RpdHV0aW9uIHRoaXMgc3ViamVjdCBpcyBub3QKCQkJCQkJcmVhY2hlZC48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciBzaW5jZSBldmVyeSBob3VzZWhvbGQgaXMgcGFydAoJCQkJCW9mIGEgc3RhdGUsIGFuZCB0aGVzZSByZWxhdGlvbnNoaXBzIGFyZSBwYXJ0IG9mIHRoZSBob3VzZWhvbGQsIGFuZCB0aGUKCQkJCQlleGNlbGxlbmNlIG9mIHRoZSBwYXJ0IG11c3QgaGF2ZSByZWdhcmQgdG8gdGhhdCBvZiB0aGUgd2hvbGUsIGl0IGlzIG5lY2Vzc2FyeQoJCQkJCXRoYXQgdGhlIGVkdWNhdGlvbiBib3RoIG9mIHRoZSBjaGlsZHJlbiBhbmQgb2YgdGhlIHdvbWVuIHNob3VsZCBiZSBjYXJyaWVkIG9uCgkJCQkJd2l0aCBhIHJlZ2FyZCB0byB0aGUgZm9ybSBvZiB0aGUgY29uc3RpdHV0aW9uLCBpZiBpdCBtYWtlcyBhbnkgZGlmZmVyZW5jZSBhcwoJCQkJCXJlZ2FyZHMgdGhlIGdvb2RuZXNzIG9mIHRoZSBzdGF0ZSBmb3IgdGhlIGNoaWxkcmVuIGFuZCB0aGUgd29tZW4gdG8gYmUgZ29vZC4gQW5kCgkJCQkJaXQgbXVzdCBuZWNlc3NhcmlseSBtYWtlIGEgZGlmZmVyZW5jZTsgZm9yIHRoZSB3b21lbiBhcmUgYSBoYWxmIG9mIHRoZSBmcmVlCgkJCQkJcG9wdWxhdGlvbiwgYW5kIHRoZSBjaGlsZHJlbjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+Z3JvdyB1cAoJCQkJCXRvIGJlIHRoZSBwYXJ0bmVycyBpbiB0aGUgZ292ZXJubWVudCBvZiB0aGUgc3RhdGUuIFNvIHRoYXQgYXMgdGhlc2UgcXVlc3Rpb25zCgkJCQkJaGF2ZSBiZWVuIGRlY2lkZWQsIGFuZCB0aG9zZSB0aGF0IHJlbWFpbiBtdXN0IGJlIGRpc2N1c3NlZCBlbHNld2hlcmUsIGxldCB1cwoJCQkJCXJlbGlucXVpc2ggdGhlIHByZXNlbnQgc3ViamVjdHMgYXMgY29tcGxldGVkLCBhbmQgbWFrZSBhIGZyZXNoIHN0YXJ0IGluIG91cgoJCQkJCWRpc2NvdXJzZSwgYW5kIGZpcnN0IGxldCB1cyBjb25zaWRlciB0aG9zZSB0aGlua2VycyB3aG8gaGF2ZSBhZHZhbmNlZCB2aWV3cwoJCQkJCWFib3V0IHRoZSBJZGVhbCBTdGF0ZS48L3A+CgkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjUyYSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1252a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkV2ZXJ5IHN0YXRlIGlzIGFzIHdlIHNlZSBhIHNvcnQgb2YgcGFydG5lcnNoaXAsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBHcmVlayB3b3JkIGhhZCBub3QgYWNxdWlyZWQgYSBzcGVjaWFsbHkgcG9saXRpY2FsCgkJCQkJCWNvbm5vdGF0aW9uIGFzIHRoZSBFbmdsaXNoIHdvcmQg4oCYY29tbXVuaXR54oCZIGhhcy48L25vdGU+CgkJCQkJYW5kIGV2ZXJ5IHBhcnRuZXJzaGlwIGlzIGZvcm1lZCB3aXRoIGEgdmlldyB0byBzb21lIGdvb2Qg77yIc2luY2UgYWxsIHRoZQoJCQkJCWFjdGlvbnMgb2YgYWxsIG1hbmtpbmQgYXJlIGRvbmUgd2l0aCBhIHZpZXcgdG8gd2hhdCB0aGV5IHRoaW5rIHRvIGJlCgkJCQkJZ29vZO+8iS4gSXQgaXMgdGhlcmVmb3JlIGV2aWRlbnQgdGhhdCwgd2hpbGUgYWxsIHBhcnRuZXJzaGlwcyBhaW0gYXQgc29tZQoJCQkJCWdvb2QgdGhlIHBhcnRuZXJzaGlwIHRoYXQgaXMgdGhlIG1vc3Qgc3VwcmVtZSBvZiBhbGwgYW5kIGluY2x1ZGVzIGFsbCB0aGUgb3RoZXJzCgkJCQkJZG9lcyBzbyBtb3N0IG9mIGFsbCwgYW5kIGFpbXMgYXQgdGhlIG1vc3Qgc3VwcmVtZSBvZiBhbGwgZ29vZHM7IGFuZCB0aGlzIGlzIHRoZQoJCQkJCXBhcnRuZXJzaGlwIGVudGl0bGVkIHRoZSBzdGF0ZSwgdGhlIHBvbGl0aWNhbCBhc3NvY2lhdGlvbi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaG9zZSB0aGVuIHdobyB0aGluayB0aGF0IHRoZSBuYXR1cmVzIG9mIHRoZQoJCQkJCXN0YXRlc21hbiwgdGhlIHJveWFsIHJ1bGVyLCB0aGUgaGVhZCBvZiBhbiBlc3RhdGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/hvLDOus6/zr3hvbnOvM6/z4I8L2ZvcmVpZ24+IGRlbm90aW5nIGEgaGlnaGVyCgkJCQkJCWdyYWRlIHRoYW4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTOtc+Dz4DhvbnPhM63z4I8L2ZvcmVpZ24+IGlzIHVudXN1YWwuIEZvciB0aGVpcgoJCQkJCQlvcmRpbmFyeSB1c2Ugc2VlIDIuMSBmaW4uPC9ub3RlPiBhbmQgdGhlIG1hc3RlciBvZiBhIGZhbWlseSBhcmUgdGhlIHNhbWUsCgkJCQkJYXJlIG1pc3Rha2VuIO+8iHRoZXkgaW1hZ2luZSB0aGF0IHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlc2UgdmFyaW91cwoJCQkJCWZvcm1zIG9mIGF1dGhvcml0eSBpcyBvbmUgb2YgZ3JlYXRlciBhbmQgc21hbGxlciBudW1iZXJzLCBub3QgYSBkaWZmZXJlbmNlIGluCgkJCQkJdGhlIGtpbmTigJR0aGF0IGlzLCB0aGF0IHRoZSBydWxlciBvdmVyIGEgZmV3IHBlb3BsZSBpcyBhIG1hc3Rlciwgb3ZlcgoJCQkJCW1vcmUgdGhlIGhlYWQgb2YgYW4gZXN0YXRlLCBvdmVyIG1vcmUgc3RpbGwgYSBzdGF0ZXNtYW4gb3Igcm95YWwgcnVsZXIsIGFzIGlmCgkJCQkJdGhlcmUgd2VyZSBubyBkaWZmZXJlbmNlIGJldHdlZW4gYSBsYXJnZSBob3VzZWhvbGQgYW5kIGEgc21hbGwgY2l0eTsgYW5kIGFsc28gYXMKCQkJCQl0byB0aGUgc3RhdGVzbWFuIGFuZCB0aGUgcm95YWwgcnVsZXIsIHRoZXkgdGhpbmsgdGhhdCBvbmUgd2hvIGdvdmVybnMgYXMgc29sZQoJCQkJCWhlYWQgaXMgcm95YWwsIGFuZCBvbmUgd2hvLCB3aGlsZSB0aGUgZ292ZXJubWVudCBmb2xsb3dzIHRoZSBwcmluY2lwbGVzIG9mIHRoZQoJCQkJCXNjaWVuY2Ugb2Ygcm95YWx0eSwgdGFrZXMgdHVybnMgdG8gZ292ZXJuIGFuZCBiZSBnb3Zlcm5lZCBpcyBhIHN0YXRlc21hbjsgYnV0CgkJCQkJdGhlc2Ugdmlld3MgYXJlIG5vdCB0cnVl77yJLiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ov+G8sM66zr/OveG9uc68zr/PgjwvZm9yZWlnbj4gZGVub3RpbmcgYSBoaWdoZXIKCQkJCQkJZ3JhZGUgdGhhbiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtM61z4PPgOG9uc+EzrfPgjwvZm9yZWlnbj4gaXMgdW51c3VhbC4gRm9yIHRoZWlyCgkJCQkJCW9yZGluYXJ5IHVzZSBzZWUgMi4xIGZpbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhIHByb29mIHRoYXQgdGhlc2UgcGVvcGxlIGFyZSBtaXN0YWtlbiB3aWxsIGFwcGVhciBpZiB3ZSBleGFtaW5lIHRoZQoJCQkJCXF1ZXN0aW9uIGluIGFjY29yZGFuY2Ugd2l0aCBvdXIgcmVndWxhciBtZXRob2Qgb2YgaW52ZXN0aWdhdGlvbi4gSW4gZXZlcnkgb3RoZXIKCQkJCQltYXR0ZXIgaXQgaXMgbmVjZXNzYXJ5IHRvIGFuYWx5emUgdGhlIGNvbXBvc2l0ZSB3aG9sZSBkb3duIHRvIGl0cyB1bmNvbXBvdW5kZWQKCQkJCQllbGVtZW50cyDvvIhmb3IgdGhlc2UgYXJlIHRoZSBzbWFsbGVzdCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+cGFydHMgb2YgdGhlIHdob2xl77yJOyBzbyB0b28gd2l0aCB0aGUgc3RhdGUsIGJ5CgkJCQkJZXhhbWluaW5nIHRoZSBlbGVtZW50cyBvZiB3aGljaCBpdCBpcyBjb21wb3NlZCB3ZSBzaGFsbCBiZXR0ZXIgZGlzY2VybiBpbgoJCQkJCXJlbGF0aW9uIHRvIHRoZXNlIGRpZmZlcmVudCBraW5kcyBvZiBydWxlcnMgd2hhdCBpcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZW0sCgkJCQkJYW5kIHdoZXRoZXIgaXQgaXMgcG9zc2libGUgdG8gb2J0YWluIGFueSBzY2llbnRpZmljIHByZWNpc2lvbiBpbiByZWdhcmQgdG8gdGhlCgkJCQkJdmFyaW91cyBzdGF0ZW1lbnRzIG1hZGUgYWJvdmUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluIHRoaXMgc3ViamVjdCBhcwoJCQkJCWluIG90aGVycyB0aGUgYmVzdCBtZXRob2Qgb2YgaW52ZXN0aWdhdGlvbiBpcyB0byBzdHVkeSB0aGluZ3MgaW4gdGhlIHByb2Nlc3Mgb2YKCQkJCQlkZXZlbG9wbWVudCBmcm9tIHRoZSBiZWdpbm5pbmcuIDwvdHJhbnNsYXRpb24+"
translation['1.1252b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS40IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlCgkJCQkJZmlyc3QgY291cGxpbmcgdG9nZXRoZXIgb2YgcGVyc29ucyB0aGVuIHRvIHdoaWNoIG5lY2Vzc2l0eSBnaXZlcyByaXNlIGlzIHRoYXQKCQkJCQliZXR3ZWVuIHRob3NlIHdobyBhcmUgdW5hYmxlIHRvIGV4aXN0IHdpdGhvdXQgb25lIGFub3RoZXI6IGZvciBpbnN0YW5jZSB0aGUKCQkJCQl1bmlvbiBvZiBmZW1hbGUgYW5kIG1hbGUgZm9yIHRoZSBjb250aW51YW5jZSBvZiB0aGUgc3BlY2llcyDvvIhhbmQgdGhpcwoJCQkJCW5vdCBvZiBkZWxpYmVyYXRlIHB1cnBvc2UsIGJ1dCB3aXRoIG1hbiBhcyB3aXRoIHRoZSBvdGhlciBhbmltYWxzIGFuZCB3aXRoCgkJCQkJcGxhbnRzIHRoZXJlIGlzIGEgbmF0dXJhbCBpbnN0aW5jdCB0byBkZXNpcmUgdG8gbGVhdmUgYmVoaW5kIG9uZSBhbm90aGVyIGJlaW5nCgkJCQkJb2YgdGhlIHNhbWUgc29ydCBhcyBvbmVzZWxm77yJOyBhbmQgdGhlIHVuaW9uIG9mIG5hdHVyYWwgcnVsZXIgYW5kCgkJCQkJbmF0dXJhbCBzdWJqZWN0IGZvciB0aGUgc2FrZSBvZiBzZWN1cml0eSDvvIhmb3IgaGUgdGhhdCBjYW4gZm9yZXNlZSB3aXRoCgkJCQkJaGlzIG1pbmQgaXMgbmF0dXJhbGx5IHJ1bGVyIGFuZCBuYXR1cmFsbHkgbWFzdGVyLCBhbmQgaGUgdGhhdCBjYW4gZG8gdGhlc2UKCQkJCQkJdGhpbmdzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgcHJvYmFibGUgZW1lbmRhdGlvbiBnaXZlcwoJCQkJCQnigJh0aGF0IGNhbiBjYXJyeSBvdXQgbGFib3Iu4oCZPC9ub3RlPiB3aXRoIGhpcyBib2R5IGlzCgkJCQkJc3ViamVjdCBhbmQgbmF0dXJhbGx5IGEgc2xhdmU7IHNvIHRoYXQgbWFzdGVyIGFuZCBzbGF2ZSBoYXZlIHRoZSBzYW1lCgkJCQkJaW50ZXJlc3TvvIkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjUyYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1252b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1252b.20'] = ""
translation['1.1253a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS44IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBwYXJ0bmVyc2hpcCBmaW5hbGx5IGNvbXBvc2VkIG9mIHNldmVyYWwgdmlsbGFnZXMgaXMgdGhlCgkJCQkJY2l0eS1zdGF0ZTsgaXQgaGFzIGF0IGxhc3QgYXR0YWluZWQgdGhlIGxpbWl0IG9mIHZpcnR1YWxseSBjb21wbGV0ZQoJCQkJCXNlbGYtc3VmZmljaWVuY3ksIGFuZCB0aHVzLCB3aGlsZSBpdCBjb21lcyBpbnRvIGV4aXN0ZW5jZSBmb3IgdGhlIHNha2Ugb2YgbGlmZSwKCQkJCQlpdCBleGlzdHMgZm9yIHRoZSBnb29kIGxpZmUuIEhlbmNlIGV2ZXJ5IGNpdHktc3RhdGUgZXhpc3RzIGJ5IG5hdHVyZSwgaW5hc211Y2gKCQkJCQlhcyB0aGUgZmlyc3QgcGFydG5lcnNoaXBzIHNvIGV4aXN0OyBmb3IgdGhlIGNpdHktc3RhdGUgaXMgdGhlIGVuZCBvZiB0aGUgb3RoZXIKCQkJCQlwYXJ0bmVyc2hpcHMsIGFuZCBuYXR1cmUgaXMgYW4gZW5kLCBzaW5jZSB0aGF0IHdoaWNoIGVhY2ggdGhpbmcgaXMgd2hlbiBpdHMKCQkJCQlncm93dGggaXMgY29tcGxldGVkIHdlIHNwZWFrIG9mIGFzIGJlaW5nIHRoZSBuYXR1cmUgb2YgZWFjaCB0aGluZywgZm9yIGluc3RhbmNlCgkJCQkJb2YgYSBtYW4sIGEgaG9yc2UsIGEgaG91c2Vob2xkLiBBZ2FpbiwgdGhlIG9iamVjdCBmb3Igd2hpY2ggYSB0aGluZyBleGlzdHMsIGl0cwoJCQkJCWVuZCwgaXMgaXRzIGNoaWVmIGdvb2Q7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjUzYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1253a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBzZWxmLXN1ZmZpY2llbmN5IGlzIGFuIGVuZCwgYW5kIGEgY2hpZWYgZ29vZC4KCQkJCQkJPC90cmFuc2xhdGlvbj4="
translation['1.1253a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS45IiB1bml0PSJMb2ViIGNoYXAiIC8+RnJvbSB0aGVzZSB0aGluZ3MgdGhlcmVmb3JlIGl0CgkJCQkJaXMgY2xlYXIgdGhhdCB0aGUgY2l0eS1zdGF0ZSBpcyBhIG5hdHVyYWwgZ3Jvd3RoLCBhbmQgdGhhdCBtYW4gaXMgYnkgbmF0dXJlIGEKCQkJCQlwb2xpdGljYWwgYW5pbWFsLCBhbmQgYSBtYW4gdGhhdCBpcyBieSBuYXR1cmUgYW5kIG5vdCBtZXJlbHkgYnkgZm9ydHVuZSBjaXRpbGVzcwoJCQkJCWlzIGVpdGhlciBsb3cgaW4gdGhlIHNjYWxlIG9mIGh1bWFuaXR5IG9yIGFib3ZlIGl0IO+8iGxpa2UgdGhlIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5jbGFubGVzcywgbGF3bGVzcywgaGVhcnRobGVzczwvbD4KCQkJCQk8L3F1b3RlPiBtYW4gcmV2aWxlZCBieSBIb21lciw8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPmNsYW5sZXNzLCBsYXdsZXNzLCBoZWFydGhsZXNzPC9sPgoJCQkJCTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiA5LjYzIiB2YWxpZD0ieWVzIj5Ib20uIElsLiA5LjYzPC9iaWJsPjsgdGhlIHBhc3NhZ2UgZ29lcyBvbjogPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQz4PPhOG9ts69IOG8kM66zrXhv5bOvc6/z4IgfCDhvYPPgiDPgM6/zrvhvbPOvM6/z4UKCQkJCQkJ4byUz4HOsc+EzrHOuTwvZm9yZWlnbj4uPC9ub3RlPiBmb3Igb25lIGJ5IG5hdHVyZSB1bnNvY2lhbCBpcyBhbHNvIOKAmGEKCQkJCQlsb3ZlciBvZiB3YXLigJnvvIkgaW5hc211Y2ggYXMgaGUgaXMgc29saXRhcnksIGxpa2UgYW4gaXNvbGF0ZWQKCQkJCQlwaWVjZSBhdCBkcmF1Z2h0cy4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gOS42MyIgdmFsaWQ9InllcyI+SG9tLiBJbC4gOS42MzwvYmlibD47IHRoZSBwYXNzYWdlIGdvZXMgb246IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM+Dz4ThvbbOvSDhvJDOus614b+Wzr3Ov8+CIHwg4b2Dz4Igz4DOv8674b2zzrzOv8+FCgkJCQkJCeG8lM+BzrHPhM6xzrk8L2ZvcmVpZ24+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB3aHkgbWFuIGlzIGEKCQkJCQlwb2xpdGljYWwgYW5pbWFsIGluIGEgZ3JlYXRlciBtZWFzdXJlIHRoYW4gYW55IGJlZSBvciBhbnkgZ3JlZ2FyaW91cyBhbmltYWwgaXMKCQkJCQljbGVhci4gRm9yIG5hdHVyZSwgYXMgd2UgZGVjbGFyZSwgZG9lcyBub3RoaW5nIHdpdGhvdXQgcHVycG9zZTsgYW5kIG1hbiBhbG9uZSBvZgoJCQkJCXRoZSBhbmltYWxzIHBvc3Nlc3NlcyBzcGVlY2guIFRoZSBtZXJlIHZvaWNlLCBpdCBpcyB0cnVlLCBjYW4gaW5kaWNhdGUgcGFpbiBhbmQKCQkJCQlwbGVhc3VyZSwgYW5kIHRoZXJlZm9yZSBpcyBwb3NzZXNzZWQgYnkgdGhlIG90aGVyIGFuaW1hbHMgYXMgd2VsbCDvvIhmb3IKCQkJCQl0aGVpciBuYXR1cmUgaGFzIGJlZW4gZGV2ZWxvcGVkIHNvIGZhciBhcyB0byBoYXZlIHNlbnNhdGlvbnMgb2Ygd2hhdCBpcyBwYWluZnVsCgkJCQkJYW5kIHBsZWFzYW50IGFuZCB0byBpbmRpY2F0ZSB0aG9zZSBzZW5zYXRpb25zIHRvIG9uZSBhbm90aGVy77yJLCBidXQKCQkJCQlzcGVlY2ggaXMgZGVzaWduZWQgdG8gaW5kaWNhdGUgdGhlIGFkdmFudGFnZW91cyBhbmQgdGhlIGhhcm1mdWwsIGFuZCB0aGVyZWZvcmUKCQkJCQlhbHNvIHRoZSByaWdodCBhbmQgdGhlIHdyb25nOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5mb3IKCQkJCQlpdCBpcyB0aGUgc3BlY2lhbCBwcm9wZXJ0eSBvZiBtYW4gaW4gZGlzdGluY3Rpb24gZnJvbSB0aGUgb3RoZXIgYW5pbWFscyB0aGF0IGhlCgkJCQkJYWxvbmUgaGFzIHBlcmNlcHRpb24gb2YgZ29vZCBhbmQgYmFkIGFuZCByaWdodCBhbmQgd3JvbmcgYW5kIHRoZSBvdGhlciBtb3JhbAoJCQkJCXF1YWxpdGllcywgYW5kIGl0IGlzIHBhcnRuZXJzaGlwIGluIHRoZXNlIHRoaW5ncyB0aGF0IG1ha2VzIGEgaG91c2Vob2xkIGFuZCBhCgkJCQkJCWNpdHktc3RhdGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRodXMgYWxzbyB0aGUgY2l0eS1zdGF0ZSBpcyBwcmlvcgoJCQkJCWluIG5hdHVyZSB0byB0aGUgaG91c2Vob2xkIGFuZCB0byBlYWNoIG9mIHVzIGluZGl2aWR1YWxseS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+Rm9yIHRoZSB3aG9sZSBtdXN0IG5lY2Vzc2FyaWx5IGJlIHByaW9yIHRvIHRoZQoJCQkJCXBhcnQ7IHNpbmNlIHdoZW4gdGhlIHdob2xlIGJvZHkgaXMgZGVzdHJveWVkLCBmb290IG9yIGhhbmQgd2lsbCBub3QgZXhpc3QgZXhjZXB0CgkJCQkJaW4gYW4gZXF1aXZvY2FsIHNlbnNlLCBsaWtlIHRoZSBzZW5zZSBpbiB3aGljaCBvbmUgc3BlYWtzIG9mIGEgaGFuZCBzY3VscHR1cmVkCgkJCQkJaW4gc3RvbmUgYXMgYSBoYW5kOyBiZWNhdXNlIGEgaGFuZCBpbiB0aG9zZSBjaXJjdW1zdGFuY2VzIHdpbGwgYmUgYSBoYW5kCgkJCQkJc3BvaWxlZCwgYW5kIGFsbCB0aGluZ3MgYXJlIGRlZmluZWQgYnkgdGhlaXIgZnVuY3Rpb24gYW5kIGNhcGFjaXR5LCBzbyB0aGF0IHdoZW4KCQkJCQl0aGV5IGFyZSBubyBsb25nZXIgc3VjaCBhcyB0byBwZXJmb3JtIHRoZWlyIGZ1bmN0aW9uIHRoZXkgbXVzdCBub3QgYmUgc2FpZCB0byBiZQoJCQkJCXRoZSBzYW1lIHRoaW5ncywgYnV0IHRvIGJlYXIgdGhlaXIgbmFtZXMgaW4gYW4gZXF1aXZvY2FsIHNlbnNlLiA8L3RyYW5zbGF0aW9uPg=="
translation['1.1253b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IGlzIGNsZWFyIHRoZXJlZm9yZSB0aGF0IHRoZSBzdGF0ZSBpcwoJCQkJCWFsc28gcHJpb3IgYnkgbmF0dXJlIHRvIHRoZSBpbmRpdmlkdWFsOyBmb3IgaWYgZWFjaCBpbmRpdmlkdWFsIHdoZW4gc2VwYXJhdGUgaXMKCQkJCQlub3Qgc2VsZi1zdWZmaWNpZW50LCBoZSBtdXN0IGJlIHJlbGF0ZWQgdG8gdGhlIHdob2xlIHN0YXRlIGFzIG90aGVyIHBhcnRzIGFyZSB0bwoJCQkJCXRoZWlyIHdob2xlLCB3aGlsZSBhIG1hbiB3aG8gaXMgaW5jYXBhYmxlIG9mIGVudGVyaW5nIGludG8gcGFydG5lcnNoaXAsIG9yIHdobwoJCQkJCWlzIHNvIHNlbGYtc3VmZmljaW5nIHRoYXQgaGUgaGFzIG5vIG5lZWQgdG8gZG8gc28sIGlzIG5vIHBhcnQgb2YgYSBzdGF0ZSwgc28KCQkJCQl0aGF0IGhlIG11c3QgYmUgZWl0aGVyIGEgbG93ZXIgYW5pbWFsIG9yIGEgZ29kLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZWZvcmUgdGhlIGltcHVsc2UgdG8gZm9ybSBhIHBhcnRuZXJzaGlwIG9mIHRoaXMga2luZCBpcyBwcmVzZW50IGluIGFsbCBtZW4KCQkJCQlieSBuYXR1cmU7IGJ1dCB0aGUgbWFuIHdobyBmaXJzdCB1bml0ZWQgcGVvcGxlIGluIHN1Y2ggYSBwYXJ0bmVyc2hpcCB3YXMgdGhlCgkJCQkJZ3JlYXRlc3Qgb2YgYmVuZWZhY3RvcnMuIEZvciBhcyBtYW4gaXMgdGhlIGJlc3Qgb2YgdGhlIGFuaW1hbHMgd2hlbiBwZXJmZWN0ZWQsCgkJCQkJc28gaGUgaXMgdGhlIHdvcnN0IG9mIGFsbCB3aGVuIHN1bmRlcmVkIGZyb20gbGF3IGFuZCBqdXN0aWNlLiBGb3IKCQkJCQl1bnJpZ2h0ZW91c25lc3MgaXMgbW9zdCBwZXJuaWNpb3VzIHdoZW4gcG9zc2Vzc2VkIG9mIHdlYXBvbnMsIGFuZCBtYW4gaXMgYm9ybgoJCQkJCXBvc3Nlc3Npbmcgd2VhcG9ucyBmb3IgdGhlIHVzZSBvZiB3aXNkb20gYW5kIHZpcnR1ZSwgd2hpY2ggaXQgaXMgcG9zc2libGUgdG8KCQkJCQllbXBsb3kgZW50aXJlbHkgZm9yIHRoZSBvcHBvc2l0ZSBlbmRzLiBIZW5jZSB3aGVuIGRldm9pZCBvZiB2aXJ0dWUgbWFuIGlzIHRoZQoJCQkJCW1vc3QgdW5ob2x5IGFuZCBzYXZhZ2Ugb2YgYW5pbWFscywgYW5kIHRoZSB3b3JzdCBpbiByZWdhcmQgdG8gc2V4dWFsIGluZHVsZ2VuY2UKCQkJCQlhbmQgZ2x1dHRvbnkuIEp1c3RpY2Ugb24gdGhlIG90aGVyIGhhbmQgaXMgYW4gZWxlbWVudCBvZiB0aGUgc3RhdGU7IGZvciBqdWRpY2lhbAoJCQkJCXByb2NlZHVyZSwgd2hpY2ggbWVhbnMgdGhlIGRlY2lzaW9uIG9mIHdoYXQgaXMganVzdCwgaXMgdGhlIHJlZ3VsYXRpb24gb2YgdGhlCgkJCQkJcG9saXRpY2FsIHBhcnRuZXJzaGlwLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI1M2IiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['1.1253b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1253b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBub3cgdGhhdCBpdCBpcyBjbGVhciB3aGF0IGFyZSB0aGUKCQkJCQljb21wb25lbnQgcGFydHMgb2YgdGhlIHN0YXRlLCB3ZSBoYXZlIGZpcnN0IG9mIGFsbCB0byBkaXNjdXNzIGhvdXNlaG9sZAoJCQkJCW1hbmFnZW1lbnQ7IGZvciBldmVyeSBzdGF0ZSBpcyBjb21wb3NlZCBvZiBob3VzZWhvbGRzLiBIb3VzZWhvbGQgbWFuYWdlbWVudAoJCQkJCWZhbGxzIGludG8gZGVwYXJ0bWVudHMgY29ycmVzcG9uZGluZyB0byB0aGUgcGFydHMgb2Ygd2hpY2ggdGhlIGhvdXNlaG9sZCBpbiBpdHMKCQkJCQl0dXJuIGlzIGNvbXBvc2VkOyBhbmQgdGhlIGhvdXNlaG9sZCBpbiBpdHMgcGVyZmVjdCBmb3JtIGNvbnNpc3RzIG9mIHNsYXZlcyBhbmQKCQkJCQlmcmVlbWVuLiBUaGUgaW52ZXN0aWdhdGlvbiBvZiBldmVyeXRoaW5nIHNob3VsZCBiZWdpbiB3aXRoIGl0cyBzbWFsbGVzdCBwYXJ0cywKCQkJCQlhbmQgdGhlIHByaW1hcnkgYW5kIHNtYWxsZXN0IHBhcnRzIG9mIHRoZSBob3VzZWhvbGQgYXJlIG1hc3RlciBhbmQgc2xhdmUsCgkJCQkJaHVzYmFuZCBhbmQgd2lmZSwgZmF0aGVyIGFuZCBjaGlsZHJlbjsgd2Ugb3VnaHQgdGhlcmVmb3JlIHRvIGV4YW1pbmUgdGhlIHByb3BlcgoJCQkJCWNvbnN0aXR1dGlvbiBhbmQgY2hhcmFjdGVyIG9mIGVhY2ggb2YgdGhlc2UgdGhyZWUgcmVsYXRpb25zaGlwcywgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JIG1lYW4gdGhhdCBvZiBtYXN0ZXJzaGlwLCB0aGF0IG9mCgkJCQkJCW1hcnJpYWdlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBHcmVlayB3b3JkIHByb3Blcmx5IGRlbm90ZXMKCQkJCQkJdGhlIG1hcnJpYWdlIGNlcmVtb255LCBub3QgdGhlIG1hcnJpZWQgc3RhdGUuPC9ub3RlPiDvvIh0aGVyZSBpcyBubwoJCQkJCWV4YWN0IHRlcm0gZGVub3RpbmcgdGhlIHJlbGF0aW9uIHVuaXRpbmcgd2lmZSBhbmQgaHVzYmFuZO+8iSwgYW5kIHRoaXJkbHkKCQkJCQl0aGUgcHJvZ2VuaXRpdmUgcmVsYXRpb25zaGlwIO+8iHRoaXMgdG9vIGhhcyBub3QgYmVlbiBkZXNpZ25hdGVkIGJ5IGEKCQkJCQlzcGVjaWFsIG5hbWXvvIkuIExldCB1cyB0aGVuIGFjY2VwdCB0aGVzZSB0aHJlZSByZWxhdGlvbnNoaXBzIHRoYXQgd2UKCQkJCQloYXZlIG1lbnRpb25lZC4gVGhlcmUgaXMgYWxzbyBhIGRlcGFydG1lbnQgd2hpY2ggc29tZSBwZW9wbGUgY29uc2lkZXIgdGhlIHNhbWUKCQkJCQlhcyBob3VzZWhvbGQgbWFuYWdlbWVudCBhbmQgb3RoZXJzIHRoZSBtb3N0IGltcG9ydGFudCBwYXJ0IG9mIGl0LCBhbmQgdGhlIHRydWUKCQkJCQlwb3NpdGlvbiBvZiB3aGljaCB3ZSBzaGFsbCBoYXZlIHRvIGNvbnNpZGVyOiBJIG1lYW4gd2hhdCBpcyBjYWxsZWQgdGhlIGFydCBvZgoJCQkJCWdldHRpbmcgd2VhbHRoLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5ObyBFbmdsaXNoIHdvcmQgY292ZXJzIGFsbAoJCQkJCQl0aGUgYXNzb2NpYXRpb25zIG9mIHRoZSBHcmVlaywgd2hpY2ggbWVhbnMg4oCYZGVhbGluZyBpbiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ph8+B4b21zrzOsc+EzrE8L2ZvcmVpZ24+LOKAmQoJCQkJCQnigJh0aGluZ3Ms4oCZ4oCUZ29vZHMsIHByb3BlcnR5LCBtb25leeKAlGFuZAoJCQkJCQlzbyDigJhidXNpbmVzcy7igJk8L25vdGU+CgkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4fPgeG9tc68zrHPhM6xPC9mb3JlaWduPizigJkKCQkJCQkJ4oCYdGhpbmdzLOKAmeKAlGdvb2RzLCBwcm9wZXJ0eSwgbW9uZXnigJRhbmQKCQkJCQkJc28g4oCYYnVzaW5lc3Mu4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkxldCB1cyBiZWdpbiBieSBkaXNjdXNzaW5nIHRoZSByZWxhdGlvbiBvZiBtYXN0ZXIKCQkJCQlhbmQgc2xhdmUsIGluIG9yZGVyIHRvIG9ic2VydmUgdGhlIGZhY3RzIHRoYXQgaGF2ZSBhIGJlYXJpbmcgb24gcHJhY3RpY2FsCgkJCQkJdXRpbGl0eSwgYW5kIGFsc28gaW4gdGhlIGhvcGUgdGhhdCB3ZSBtYXkgYmUgYWJsZSB0byBvYnRhaW4gc29tZXRoaW5nIGJldHRlcgoJCQkJCXRoYW4gdGhlIG5vdGlvbnMgYXQgcHJlc2VudCBlbnRlcnRhaW5lZCwgd2l0aCBhIHZpZXcgdG8gYSB0aGVvcmV0aWMga25vd2xlZGdlIG9mCgkJCQkJdGhlIHN1YmplY3QuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIHNvbWUgdGhpbmtlcnMgaG9sZAoJCQkJCXRoZSBmdW5jdGlvbiBvZiB0aGUgbWFzdGVyIHRvIGJlIGEgZGVmaW5pdGUgc2NpZW5jZSwgYW5kIG1vcmVvdmVyIHRoaW5rIHRoYXQKCQkJCQlob3VzZWhvbGQgbWFuYWdlbWVudCwgbWFzdGVyc2hpcCwgc3RhdGVzbWFuc2hpcCBhbmQgbW9uYXJjaHkgYXJlIHRoZSBzYW1lCgkJCQkJCXRoaW5nLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hcyB3ZSBzYWlkIGF0IHRoZSBiZWdpbm5pbmcKCQkJCQlvZiB0aGUgdHJlYXRpc2U7IG90aGVycyBob3dldmVyIG1haW50YWluIHRoYXQgZm9yIG9uZSBtYW4gdG8gYmUgYW5vdGhlciBtYW4ncwoJCQkJCW1hc3RlciBpcyBjb250cmFyeSB0byBuYXR1cmUsIGJlY2F1c2UgaXQgaXMgb25seSBjb252ZW50aW9uIHRoYXQgbWFrZXMgdGhlIG9uZSBhCgkJCQkJc2xhdmUgYW5kIHRoZSBvdGhlciBhIGZyZWVtYW4gYW5kIHRoZXJlIGlzIG5vIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGVtIGJ5IG5hdHVyZSwKCQkJCQlhbmQgdGhhdCB0aGVyZWZvcmUgaXQgaXMgdW5qdXN0LCBmb3IgaXQgaXMgYmFzZWQgb24gZm9yY2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlNpbmNlIHRoZXJlZm9yZSBwcm9wZXJ0eSBpcyBhIHBhcnQgb2YgYSBob3VzZWhvbGQgYW5kIHRoZSBhcnQKCQkJCQlvZiBhY3F1aXJpbmcgcHJvcGVydHkgYSBwYXJ0IG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50IO+8iGZvciB3aXRob3V0IHRoZQoJCQkJCW5lY2Vzc2FyaWVzIGV2ZW4gbGlmZSwgYXMgd2VsbCBhcyB0aGUgZ29vZCBsaWZlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj7igJhBcyB3ZWxsIGFzIHRoZSBnb29kIGxpZmXigJkgaXMgcHJvYmFibHkgYW4KCQkJCQkJaW50ZXJwb2xhdGlvbi48L25vdGU+IGlzIGltcG9zc2libGXvvIksIDwvdHJhbnNsYXRpb24+"
translation['1.1254a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHNpbmNlLCBqdXN0IGFzIGZvciB0aGUgcGFydGljdWxhciBhcnRzIGl0IHdvdWxkIGJlCgkJCQkJbmVjZXNzYXJ5IGZvciB0aGUgcHJvcGVyIHRvb2xzIHRvIGJlIGZvcnRoY29taW5nIGlmIHRoZWlyIHdvcmsgaXMgdG8gYmUKCQkJCQlhY2NvbXBsaXNoZWQsIHNvIGFsc28gdGhlIG1hbmFnZXIgb2YgYSBob3VzZWhvbGQgbXVzdCBoYXZlIGhpcyB0b29scywgYW5kIG9mCgkJCQkJdG9vbHMgc29tZSBhcmUgbGlmZWxlc3MgYW5kIG90aGVycyBsaXZpbmcg77yIZm9yIGV4YW1wbGUsIGZvciBhIGhlbG1zbWFuCgkJCQkJdGhlIHJ1ZGRlciBpcyBhIGxpZmVsZXNzIHRvb2wgYW5kIHRoZSBsb29rLW91dCBtYW4gYSBsaXZlIHRvb2zigJRmb3IgYW4KCQkJCQlhc3Npc3RhbnQgaW4gdGhlIGFydHMgYmVsb25ncyB0byB0aGUgY2xhc3Mgb2YgdG9vbHPvvIksIHNvIGFsc28gYW4KCQkJCQlhcnRpY2xlIG9mIHByb3BlcnR5IGlzIGEgdG9vbCBmb3IgdGhlIHB1cnBvc2Ugb2YgbGlmZSwgYW5kIHByb3BlcnR5IGdlbmVyYWxseSBpcwoJCQkJCWEgY29sbGVjdGlvbiBvZiB0b29scywgYW5kIGEgc2xhdmUgaXMgYSBsaXZlIGFydGljbGUgb2YgcHJvcGVydHkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGV2ZXJ5IGFzc2lzdGFudCBpcyBhcyBpdCB3ZXJlIGEgdG9vbAoJCQkJCXRoYXQgc2VydmVzIGZvciBzZXZlcmFsIHRvb2xzOyBmb3IgaWYgZXZlcnkgdG9vbCBjb3VsZCBwZXJmb3JtIGl0cyBvd24gd29yayB3aGVuCgkJCQkJb3JkZXJlZCwgb3IgYnkgc2VlaW5nIHdoYXQgdG8gZG8gaW4gYWR2YW5jZSwgbGlrZSB0aGUgc3RhdHVlcyBvZiBEYWVkYWx1cyBpbiB0aGUKCQkJCQkJc3RvcnksPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgbGVnZW5kYXJ5IHNjdWxwdG9yIGZpcnN0CgkJCQkJCXJlcHJlc2VudGVkIHRoZSBleWVzIGFzIG9wZW4gYW5kIHRoZSBsaW1icyBhcyBpbiBtb3Rpb24sIHNvIGhpcyBzdGF0dWVzIGhhZAoJCQkJCQl0byBiZSBjaGFpbmVkIHRvIHByZXZlbnQgdGhlbSBmcm9tIHJ1bm5pbmcgYXdheSDvvIg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBNZW5vIDk3ZCIgdmFsaWQ9InllcyI+UGxhdC4gTWVubyA5N2Q8L2JpYmw+77yJLjwvbm90ZT4gb3IgdGhlCgkJCQkJdHJpcG9kcyBvZiBIZXBoYWVzdHVzIHdoaWNoIHRoZSBwb2V0IHNheXMg4oCYZW50ZXIgc2VsZi1tb3ZlZCB0aGUKCQkJCQljb21wYW55IGRpdmluZSzigJk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBNZW5vIDk3ZCIgdmFsaWQ9InllcyI+UGxhdC4gTWVubyA5N2Q8L2JpYmw+77yJLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gMTguMzY5IiB2YWxpZD0ieWVzIj5Ib20uIElsLiAxOC4zNjk8L2JpYmw+CgkJCQkJPC9ub3RlPuKAlGlmIHRodXMgc2h1dHRsZXMgd292ZSBhbmQgcXVpbGxzIHBsYXllZCBoYXJwcyBvZiB0aGVtc2VsdmVzLAoJCQkJCW1hc3Rlci1jcmFmdHNtZW4gd291bGQgaGF2ZSBubyBuZWVkIG9mIGFzc2lzdGFudHMgYW5kIG1hc3RlcnMgbm8gbmVlZCBvZiBzbGF2ZXMuCgkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDE4LjM2OSIgdmFsaWQ9InllcyI+SG9tLiBJbC4gMTguMzY5PC9iaWJsPgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjU0YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1254a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPk5vdyB0aGUgdG9vbHMgbWVudGlvbmVkIGFyZSBpbnN0cnVtZW50cyBvZiBwcm9kdWN0aW9uLCB3aGVyZWFzCgkJCQkJYW4gYXJ0aWNsZSBvZiBwcm9wZXJ0eSBpcyBhbiBpbnN0cnVtZW50IG9mIGFjdGlvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHdpdGggaXQgd2UgZG8gbm90IDxlbXBoIGNsYXNzPSJ0cmFuc2xhdGlvbiI+bWFrZTwvZW1waD4gc29tZXRoaW5nIGJ1dAoJCQkJCQkJPGVtcGggY2xhc3M9InRyYW5zbGF0aW9uIj5kbzwvZW1waD4gc29tZXRoaW5nIO+8iGUuZy4gd2VhciBhIGRyZXNzLCBsaWUgaW4gYQoJCQkJCQliZWTvvIkuPC9ub3RlPjsgZm9yIGZyb20gYSBzaHV0dGxlIHdlIGdldCBzb21ldGhpbmcgZWxzZSBiZXNpZGUgdGhlCgkJCQkJbWVyZSB1c2Ugb2YgdGhlIHNodXR0bGUsIGJ1dCBmcm9tIGEgZ2FybWVudCBvciBhIGJlZCB3ZSBnZXQgb25seSB0aGVpciB1c2UuCgkJCQkJCTxlbXBoIGNsYXNzPSJ0cmFuc2xhdGlvbiI+bWFrZTwvZW1waD4gc29tZXRoaW5nIGJ1dAoJCQkJCQkJPGVtcGggY2xhc3M9InRyYW5zbGF0aW9uIj5kbzwvZW1waD4gc29tZXRoaW5nIO+8iGUuZy4gd2VhciBhIGRyZXNzLCBsaWUgaW4gYQoJCQkJCQliZWTvvIkuPC90cmFuc2xhdGlvbj4="
translation['1.1254a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi42IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGFsc28gaW5hc211Y2ggYXMgdGhlcmUgaXMgYQoJCQkJCWRpZmZlcmVuY2UgaW4ga2luZCBiZXR3ZWVuIHByb2R1Y3Rpb24gYW5kIGFjdGlvbiwgYW5kIGJvdGggbmVlZCB0b29scywgaXQKCQkJCQlmb2xsb3dzIHRoYXQgdGhvc2UgdG9vbHMgYWxzbyBtdXN0IHBvc3Nlc3MgdGhlIHNhbWUgZGlmZmVyZW5jZS4gQnV0IGxpZmUgaXMKCQkJCQlkb2luZyB0aGluZ3MsIG5vdCBtYWtpbmcgdGhpbmdzOyBoZW5jZSB0aGUgc2xhdmUgaXMgYW4gYXNzaXN0YW50IGluIHRoZSBjbGFzcyBvZgoJCQkJCWluc3RydW1lbnRzIG9mIGFjdGlvbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHRoZSB0ZXJtCgkJCQkJ4oCYYXJ0aWNsZSBvZiBwcm9wZXJ0eeKAmSBpcyB1c2VkIGluIHRoZSBzYW1lIHdheSBhcyB0aGUgdGVybQoJCQkJCeKAmHBhcnTigJk6IGEgdGhpbmcgdGhhdCBpcyBhIHBhcnQgaXMgbm90IG9ubHkgYSBwYXJ0IG9mIGFub3RoZXIKCQkJCQl0aGluZyBidXQgYWJzb2x1dGVseSBiZWxvbmdzIHRvIGFub3RoZXIgdGhpbmcsIGFuZCBzbyBhbHNvIGRvZXMgYW4gYXJ0aWNsZSBvZgoJCQkJCXByb3BlcnR5LiBIZW5jZSB3aGVyZWFzIHRoZSBtYXN0ZXIgaXMgbWVyZWx5IHRoZSBzbGF2ZSdzIG1hc3RlciBhbmQgZG9lcyBub3QKCQkJCQliZWxvbmcgdG8gdGhlIHNsYXZlLCB0aGUgc2xhdmUgaXMgbm90IG1lcmVseSB0aGUgc2xhdmUgb2YgdGhlIG1hc3RlciBidXQgd2hvbGx5CgkJCQkJYmVsb25ncyB0byB0aGUgbWFzdGVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXNlCgkJCQkJY29uc2lkZXJhdGlvbnMgdGhlcmVmb3JlIG1ha2UgY2xlYXIgdGhlIG5hdHVyZSBvZiB0aGUgc2xhdmUgYW5kIGhpcyBlc3NlbnRpYWwKCQkJCQlxdWFsaXR5OiBvbmUgd2hvIGlzIGEgaHVtYW4gYmVpbmcgYmVsb25naW5nIGJ5IG5hdHVyZSBub3QgdG8gaGltc2VsZiBidXQgdG8KCQkJCQlhbm90aGVyIGlzIGJ5IG5hdHVyZSBhIHNsYXZlLCBhbmQgYSBwZXJzb24gaXMgYSBodW1hbiBiZWluZyBiZWxvbmdpbmcgdG8gYW5vdGhlcgoJCQkJCWlmIGJlaW5nIGEgbWFuIGhlIGlzIGFuIGFydGljbGUgb2YgcHJvcGVydHksIGFuZCBhbiBhcnRpY2xlIG9mIHByb3BlcnR5CgkJCQkJaXMgYW4gaW5zdHJ1bWVudCBmb3IgYWN0aW9uIHNlcGFyYWJsZSBmcm9tIGl0cyBvd25lci4gQnV0IHdlIG11c3QgbmV4dCBjb25zaWRlcgoJCQkJCXdoZXRoZXIgb3Igbm90IGFueW9uZSBleGlzdHMgd2hvIGlzIGJ5IG5hdHVyZSBvZiB0aGlzIGNoYXJhY3RlciwgYW5kIHdoZXRoZXIgaXQKCQkJCQlpcyBhZHZhbnRhZ2VvdXMgYW5kIGp1c3QgZm9yIGFueW9uZSB0byBiZSBhIHNsYXZlLCBvciB3aGV0aGVyIG9uIHRoZSBjb250cmFyeQoJCQkJCWFsbCBzbGF2ZXJ5IGlzIGFnYWluc3QgbmF0dXJlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1254b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi44IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGl0IGlzIG5vdCBkaWZmaWN1bHQgZWl0aGVyCgkJCQkJdG8gZGlzY2VybiB0aGUgYW5zd2VyIGJ5IHRoZW9yeSBvciB0byBsZWFybiBpdCBlbXBpcmljYWxseS4gQXV0aG9yaXR5IGFuZAoJCQkJCXN1Ym9yZGluYXRpb24gYXJlIGNvbmRpdGlvbnMgbm90IG9ubHkgaW5ldml0YWJsZSBidXQgYWxzbyBleHBlZGllbnQ7IGluIHNvbWUKCQkJCQljYXNlcyB0aGluZ3MgYXJlIG1hcmtlZCBvdXQgZnJvbSB0aGUgbW9tZW50IG9mIGJpcnRoIHRvIHJ1bGUgb3IgdG8gYmUgcnVsZWQuIEFuZAoJCQkJCXRoZXJlIGFyZSBtYW55IHZhcmlldGllcyBib3RoIG9mIHJ1bGVycyBhbmQgb2Ygc3ViamVjdHMg77yIYW5kIHRoZSBoaWdoZXIKCQkJCQl0aGUgdHlwZSBvZiB0aGUgc3ViamVjdHMsIHRoZSBsb2Z0aWVyIGlzIHRoZSBuYXR1cmUgb2YgdGhlIGF1dGhvcml0eSBleGVyY2lzZWQKCQkJCQlvdmVyIHRoZW0sIGZvciBleGFtcGxlIHRvIGNvbnRyb2wgYSBodW1hbiBiZWluZyBpcyBhIGhpZ2hlciB0aGluZyB0aGFuIHRvIHRhbWUgYQoJCQkJCXdpbGQgYmVhc3Q7IGZvciB0aGUgaGlnaGVyIHRoZSB0eXBlIG9mIHRoZSBwYXJ0aWVzIHRvIHRoZSBwZXJmb3JtYW5jZSBvZiBhCgkJCQkJZnVuY3Rpb24sIHRoZSBoaWdoZXIgaXMgdGhlIGZ1bmN0aW9uLCBhbmQgd2hlbiBvbmUgcGFydHkgcnVsZXMgYW5kIGFub3RoZXIgaXMKCQkJCQlydWxlZCwgdGhlcmUgaXMgYSBmdW5jdGlvbiBwZXJmb3JtZWQgYmV0d2VlbiB0aGVt77yJ4oCUPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5iZWNhdXNlIGluIGV2ZXJ5IGNvbXBvc2l0ZSB0aGluZywgd2hlcmUgYQoJCQkJCXBsdXJhbGl0eSBvZiBwYXJ0cywgd2hldGhlciBjb250aW51b3VzIG9yIGRpc2NyZXRlLCBpcyBjb21iaW5lZCB0byBtYWtlIGEgc2luZ2xlCgkJCQkJY29tbW9uIHdob2xlLCB0aGVyZSBpcyBhbHdheXMgZm91bmQgYSBydWxpbmcgYW5kIGEgc3ViamVjdCBmYWN0b3IsIGFuZCB0aGlzCgkJCQkJY2hhcmFjdGVyaXN0aWMgb2YgbGl2aW5nIHRoaW5ncyBpcyBwcmVzZW50IGluIHRoZW0gYXMgYW4gb3V0Y29tZSBvZiB0aGUgd2hvbGUgb2YKCQkJCQluYXR1cmUsIHNpbmNlIGV2ZW4gaW4gdGhpbmdzIHRoYXQgZG8gbm90IHBhcnRha2Ugb2YgbGlmZSB0aGVyZSBpcyBhIHJ1bGluZwoJCQkJCXByaW5jaXBsZSwgYXMgaW4gdGhlIGNhc2Ugb2YgYSBtdXNpY2FsIHNjYWxlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5FYWNoIOKAmG1vZGXigJkg77yIRG9yaWFuLCB0aGUgbW9kZXJuIG1pbm9yIHNjYWxlLAoJCQkJCQlQaHJ5Z2lhbiBhbmQgTHlkaWFuLCB0d28gZm9ybXMgb2YgbWFqb3LvvIkgd2FzIHJ1bGVkIGJ5IGl0cwoJCQkJCQlrZXktbm90ZS48L25vdGU+IEhvd2V2ZXIsIHRoaXMgbWF0dGVyIHBlcmhhcHMgYmVsb25ncyB0byBhbiBpbnZlc3RpZ2F0aW9uCgkJCQkJbHlpbmcgc29tZXdoYXQgb3V0c2lkZSBvdXIgc3ViamVjdDsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IGFuIGFuaW1hbCBjb25zaXN0cyBwcmltYXJpbHkgb2Ygc291bCBhbmQgYm9keSwgb2Ygd2hpY2ggdGhlIGZvcm1lciBpcyBieQoJCQkJCW5hdHVyZSB0aGUgcnVsaW5nIGFuZCB0aGUgbGF0dGVyIHRoZSBzdWJqZWN0IGZhY3Rvci4gQW5kIHRvIGRpc2NvdmVyIHdoYXQgaXMKCQkJCQluYXR1cmFsIHdlIG11c3Qgc3R1ZHkgaXQgcHJlZmVyYWJseSBpbiB0aGluZ3MgdGhhdCBhcmUgaW4gYSBuYXR1cmFsIHN0YXRlLCBhbmQKCQkJCQlub3QgaW4gc3BlY2ltZW5zIHRoYXQgYXJlIGRlZ2VuZXJhdGUuIEhlbmNlIGluIHN0dWR5aW5nIG1hbiB3ZSBtdXN0IGNvbnNpZGVyIGEKCQkJCQltYW4gdGhhdCBpcyBpbiB0aGUgYmVzdCBwb3NzaWJsZSBjb25kaXRpb24gaW4gcmVnYXJkIHRvIGJvdGggYm9keSBhbmQgc291bCwgYW5kCgkJCQkJaW4gaGltIHRoZSBwcmluY2lwbGUgc3RhdGVkIHdpbGwgY2xlYXJseSBhcHBlYXIs4oCUIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjU0YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1254b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnNpbmNlIGluIHRob3NlCgkJCQkJdGhhdCBhcmUgYmFkIG9yIGluIGEgYmFkIGNvbmRpdGlvbiBpdCBtaWdodCBiZSB0aG91Z2h0IHRoYXQgdGhlIGJvZHkgb2Z0ZW4gcnVsZXMKCQkJCQl0aGUgc291bCBiZWNhdXNlIG9mIGl0cyB2aWNpb3VzIGFuZCB1bm5hdHVyYWwgY29uZGl0aW9uLiA8L3RyYW5zbGF0aW9uPg=="
translation['1.1254b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0byByZXN1bWXigJRpdCBpcyBpbiBhIGxpdmluZyBjcmVhdHVyZSwKCQkJCQlhcyB3ZSBzYXksIHRoYXQgaXQgaXMgZmlyc3QgcG9zc2libGUgdG8gZGlzY2VybiB0aGUgcnVsZSBib3RoIG9mIG1hc3RlciBhbmQgb2YKCQkJCQlzdGF0ZXNtYW4gdGhlIHNvdWwgcnVsZXMgdGhlIGJvZHkgd2l0aCB0aGUgc3dheSBvZiBhIG1hc3RlciwgdGhlIGludGVsbGlnZW5jZQoJCQkJCXJ1bGVzIHRoZSBhcHBldGl0ZXMgd2l0aCB0aGF0IG9mIGEgc3RhdGVzbWFuIG9yIGEga2luZyBhbmQgaW4gdGhlc2UgZXhhbXBsZXMgaXQKCQkJCQlpcyBtYW5pZmVzdCB0aGF0IGl0IGlzIG5hdHVyYWwgYW5kIGV4cGVkaWVudCBmb3IgdGhlIGJvZHkgdG8gYmUgZ292ZXJuZWQgYnkgdGhlCgkJCQkJc291bCBhbmQgZm9yIHRoZSBlbW90aW9uYWwgcGFydCB0byBiZSBnb3Zlcm5lZCBieSB0aGUgaW50ZWxsZWN0LCB0aGUgcGFydAoJCQkJCXBvc3Nlc3NpbmcgcmVhc29uLCB3aGVyZWFzIGZvciB0aGUgdHdvIHBhcnRpZXMgdG8gYmUgb24gYW4gZXF1YWwgZm9vdGluZyBvciBpbgoJCQkJCXRoZSBjb250cmFyeSBwb3NpdGlvbnMgaXMgaGFybWZ1bCBpbiBhbGwgY2FzZXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFnYWluLCB0aGUgc2FtZSBob2xkcyBnb29kIGJldHdlZW4gbWFuIGFuZCB0aGUgb3RoZXIKCQkJCQlhbmltYWxzOiB0YW1lIGFuaW1hbHMgYXJlIHN1cGVyaW9yIGluIHRoZWlyIG5hdHVyZSB0byB3aWxkIGFuaW1hbHMsIHlldCBmb3IgYWxsCgkJCQkJdGhlIGZvcm1lciBpdCBpcyBhZHZhbnRhZ2VvdXMgdG8gYmUgcnVsZWQgYnkgbWFuLCBzaW5jZSB0aGlzIGdpdmVzIHRoZW0KCQkJCQlzZWN1cml0eS4gQWdhaW4sIGFzIGJldHdlZW4gdGhlIHNleGVzLCB0aGUgbWFsZSBpcyBieSBuYXR1cmUgc3VwZXJpb3IgYW5kIHRoZQoJCQkJCWZlbWFsZSBpbmZlcmlvciwgdGhlIG1hbGUgcnVsZXIgYW5kIHRoZSBmZW1hbGUgc3ViamVjdC4gQW5kIHRoZSBzYW1lIG11c3QgYWxzbwoJCQkJCW5lY2Vzc2FyaWx5IGFwcGx5IGluIHRoZSBjYXNlIG9mIG1hbmtpbmQgYXMgYSB3aG9sZTsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+dGhlcmVmb3JlIGFsbCBtZW4gdGhhdCBkaWZmZXIgYXMgd2lkZWx5IGFzIHRoZSBzb3VsIGRvZXMKCQkJCQlmcm9tIHRoZSBib2R5IGFuZCB0aGUgaHVtYW4gYmVpbmcgZnJvbSB0aGUgbG93ZXIgYW5pbWFsIO+8iGFuZCB0aGlzIGlzCgkJCQkJdGhlIGNvbmRpdGlvbiBvZiB0aG9zZSB3aG9zZSBmdW5jdGlvbiBpcyB0aGUgdXNlIG9mIHRoZSBib2R5IGFuZCBmcm9tIHdob20gdGhpcwoJCQkJCWlzIHRoZSBiZXN0IHRoYXQgaXMgZm9ydGhjb21pbmfvvIkgdGhlc2UgYXJlIGJ5IG5hdHVyZSBzbGF2ZXMsIGZvciB3aG9tCgkJCQkJdG8gYmUgZ292ZXJuZWQgYnkgdGhpcyBraW5kIG9mIGF1dGhvcml0eTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5pcyBhZHZhbnRhZ2VvdXMsIGluYXNtdWNoIGFzIGl0IGlzIGFkdmFudGFnZW91cyB0byB0aGUgc3ViamVjdAoJCQkJCXRoaW5ncyBhbHJlYWR5IG1lbnRpb25lZC4gRm9yIGhlIGlzIGJ5IG5hdHVyZSBhIHNsYXZlIHdobyBpcyBjYXBhYmxlIG9mCgkJCQkJYmVsb25naW5nIHRvIGFub3RoZXIg77yIYW5kIHRoYXQgaXMgd2h5IGhlIGRvZXMgc28gYmVsb25n77yJLCBhbmQKCQkJCQl3aG8gcGFydGljaXBhdGVzIGluIHJlYXNvbiBzbyBmYXIgYXMgdG8gYXBwcmVoZW5kIGl0IGJ1dCBub3QgdG8gcG9zc2VzcyBpdDsgZm9yCgkJCQkJdGhlIGFuaW1hbHMgb3RoZXIgdGhhbiBtYW4gYXJlIHN1YnNlcnZpZW50IG5vdCB0byByZWFzb24sIGJ5IGFwcHJlaGVuZGluZyBpdCwKCQkJCQlidXQgdG8gZmVlbGluZ3MuIDwvdHJhbnNsYXRpb24+"
translation['1.1255a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhbHNvIHRoZQoJCQkJCXVzZWZ1bG5lc3Mgb2Ygc2xhdmVzIGRpdmVyZ2VzIGxpdHRsZSBmcm9tIHRoYXQgb2YgYW5pbWFsczsgYm9kaWx5IHNlcnZpY2UgZm9yCgkJCQkJdGhlIG5lY2Vzc2l0aWVzIG9mIGxpZmUgaXMgZm9ydGhjb21pbmcgZnJvbSBib3RoLCBmcm9tIHNsYXZlcyBhbmQgZnJvbSBkb21lc3RpYwoJCQkJCWFuaW1hbHMgYWxpa2UuIFRoZSBpbnRlbnRpb24gb2YgbmF0dXJlIHRoZXJlZm9yZSBpcyB0byBtYWtlIHRoZSBib2RpZXMgYWxzbyBvZgoJCQkJCWZyZWVtZW4gYW5kIG9mIHNsYXZlcyBkaWZmZXJlbnTigJR0aGUgbGF0dGVyIHN0cm9uZyBmb3IgbmVjZXNzYXJ5CgkJCQkJc2VydmljZSwgdGhlIGZvcm1lciBlcmVjdCBhbmQgdW5zZXJ2aWNlYWJsZSBmb3Igc3VjaCBvY2N1cGF0aW9ucywgYnV0CgkJCQkJc2VydmljZWFibGUgZm9yIGEgbGlmZSBvZiBjaXRpemVuc2hpcCDvvIhhbmQgdGhhdCBhZ2FpbiBkaXZpZGVzIGludG8gdGhlCgkJCQkJZW1wbG95bWVudHMgb2Ygd2FyIGFuZCB0aG9zZSBvZiBwZWFjZe+8iTsgYnV0IGFzIGEgbWF0dGVyIG9mIGZhY3Qgb2Z0ZW4KCQkJCQl0aGUgdmVyeSBvcHBvc2l0ZSBjb21lcyBhYm91dOKAlHNvbWUgcGVyc29ucyBoYXZlIHRoZSBib2RpZXMgb2YgZnJlZSBtZW4KCQkJCQlhbmQgb3RoZXJzIHRoZSBzb3VsczsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjE1IiB1bml0PSJMb2ViIGNoYXAiIC8+c2luY2UgdGhpcyBpcwoJCQkJCWNlcnRhaW5seSBjbGVhciwgdGhhdCBpZiBwZXJzb25zIHdlcmUgYm9ybiBhcyBkaXN0aW5ndWlzaGVkIG9ubHkgaW4gYm9keSBhcyBhcmUKCQkJCQl0aGUgc3RhdHVlcyBvZiB0aGUgZ29kcywgZXZlcnlvbmUgd291bGQgc2F5IHRoYXQgdGhvc2Ugd2hvIHdlcmUgaW5mZXJpb3IKCQkJCQlkZXNlcnZlZCB0byBiZSB0aGVzZSBtZW4ncyBzbGF2ZXMuIEFuZCBpZiB0aGlzIGlzIHRydWUgaW4gdGhlIGNhc2Ugb2YgdGhlIGJvZHksCgkJCQkJdGhlcmUgaXMgZmFyIGp1c3RlciByZWFzb24gZm9yIHRoaXMgcnVsZSBiZWluZyBsYWlkIGRvd24gaW4gdGhlIGNhc2Ugb2YgdGhlCgkJCQkJc291bDsgYnV0IGJlYXV0eSBvZiBzb3VsIGlzIG5vdCBzbyBlYXN5IHRvIHNlZSBhcyBiZWF1dHkgb2YgYm9keS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNTVhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1255a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkl0IGlzCgkJCQkJbWFuaWZlc3QgdGhlcmVmb3JlIHRoYXQgdGhlcmUgYXJlIGNhc2VzIG9mIHBlb3BsZSBvZiB3aG9tIHNvbWUgYXJlIGZyZWVtZW4gYW5kCgkJCQkJdGhlIG90aGVycyBzbGF2ZXMgYnkgbmF0dXJlLCBhbmQgZm9yIHRoZXNlIHNsYXZlcnkgaXMgYW4gaW5zdGl0dXRpb24gYm90aAoJCQkJCWV4cGVkaWVudCBhbmQganVzdC4gPC90cmFuc2xhdGlvbj4="
translation['1.1255a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBhdCB0aGUgc2FtZQoJCQkJCXRpbWUgaXQgaXMgbm90IGRpZmZpY3VsdCB0byBzZWUgdGhhdCB0aG9zZSB3aG8gYXNzZXJ0IHRoZSBvcHBvc2l0ZSBhcmUgYWxzbwoJCQkJCXJpZ2h0IGluIGEgbWFubmVyLiBUaGUgZmFjdCBpcyB0aGF0IHRoZSB0ZXJtcyDigJhzbGF2ZXJ54oCZIGFuZAoJCQkJCeKAmHNsYXZl4oCZIGFyZSBhbWJpZ3VvdXM7IGZvciB0aGVyZSBpcyBhbHNvIHN1Y2ggYSB0aGluZyBhcyBhCgkJCQkJc2xhdmUgb3IgYSBtYW4gdGhhdCBpcyBpbiBzbGF2ZXJ5IGJ5IGxhdywgZm9yIHRoZSBsYXcgaXMgYSBzb3J0IG9mIGFncmVlbWVudAoJCQkJCXVuZGVyIHdoaWNoIHRoZSB0aGluZ3MgY29ucXVlcmVkIGluIHdhciBhcmUgc2FpZCB0byBiZWxvbmcgdG8gdGhlaXIgY29ucXVlcm9ycy4KCQkJCQlOb3cgdGhpcyBjb252ZW50aW9uYWwgcmlnaHQgaXMgYXJyYWlnbmVkIGJ5IG1hbnkganVyaXN0cyBqdXN0IGFzIGEgc3RhdGVzbWFuIGlzCgkJCQkJaW1wZWFjaGVkIGZvciBwcm9wb3NpbmcgYW4gdW5jb25zdGl0dXRpb25hbCBtZWFzdXJlOyB0aGV5IHNheSB0aGF0IGl0IGlzCgkJCQkJbW9uc3Ryb3VzIGlmIHRoZSBwZXJzb24gcG93ZXJmdWwgZW5vdWdoIHRvIHVzZSBmb3JjZSwgYW5kIHN1cGVyaW9yIGluIHBvd2VyLCBpcwoJCQkJCXRvIGhhdmUgdGhlIHZpY3RpbSBvZiBoaXMgZm9yY2UgYXMgaGlzIHNsYXZlIGFuZCBzdWJqZWN0OyBhbmQgZXZlbiBhbW9uZyB0aGUKCQkJCQlsZWFybmVkIHNvbWUgaG9sZCB0aGlzIHZpZXcsIHRob3VnaCBvdGhlcnMgaG9sZCB0aGUgb3RoZXIuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGUgcmVhc29uIG9mIHRoaXMgZGlzcHV0ZSBhbmQgd2hhdCBtYWtlcyB0aGUKCQkJCQl0aGVvcmllcyBvdmVybGFwIGlzIHRoZSBmYWN0IHRoYXQgaW4gYSBjZXJ0YWluIG1hbm5lciB2aXJ0dWUgd2hlbiBpdCBvYnRhaW5zCgkJCQkJcmVzb3VyY2VzIGhhcyBpbiBmYWN0IHZlcnkgZ3JlYXQgcG93ZXIgdG8gdXNlIGZvcmNlLCBhbmQgdGhlIHN0cm9uZ2VyIHBhcnR5CgkJCQkJYWx3YXlzIHBvc3Nlc3NlcyBzdXBlcmlvcml0eSBpbiBzb21ldGhpbmcgdGhhdCBpcyBnb29kLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgZGlmZmljdWx0eSB0dXJucyBvbiB0aGUgYW1iaWd1aXR5IG9mIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gM+BzrXPhOG9tTwvZm9yZWlnbj4sIO+8iGHvvIkgbW9yYWwgZ29vZG5lc3MsCgkJCQkJCXZpcnR1ZSwg77yIYu+8iSBnb29kbmVzcyBvZiBhbnkga2luZCwgZS5nLiBzdHJlbmd0aC48L25vdGU+IHNvCgkJCQkJdGhhdCBpdCBpcyB0aG91Z2h0IHRoYXQgZm9yY2UgY2Fubm90IGJlIGRldm9pZCBvZiBnb29kbmVzcywgYnV0IHRoYXQgdGhlIGRpc3B1dGUKCQkJCQlpcyBtZXJlbHkgYWJvdXQgdGhlIGp1c3RpY2Ugb2YgdGhlIG1hdHRlciDvvIhmb3IgaXQgaXMgZHVlIHRvIHRoZSBvbmUKCQkJCQlwYXJ0eSBob2xkaW5nIHRoYXQgdGhlIGp1c3RpZmljYXRpb24gb2YgYXV0aG9yaXR5IGlzIGdvb2Qtd2lsbCwgd2hpbGUgdGhlIG90aGVyCgkJCQkJaWRlbnRpZmllcyBqdXN0aWNlIHdpdGggdGhlIG1lcmUgcnVsZSBvZiB0aGUgc3Ryb25nZXLvvIk7IGJlY2F1c2UKCQkJCQlvYnZpb3VzbHkgaWYgdGhlc2UgdGhlb3JpZXMgYmUgc2VwYXJhdGVkIGFwYXJ0LDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gM+BzrXPhOG9tTwvZm9yZWlnbj4sIO+8iGHvvIkgbW9yYWwgZ29vZG5lc3MsCgkJCQkJCXZpcnR1ZSwg77yIYu+8iSBnb29kbmVzcyBvZiBhbnkga2luZCwgZS5nLiBzdHJlbmd0aC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIG90aGVyIHRoZW9yaWVzIGhhdmUgbm8gZm9yY2Ugb3IgcGxhdXNpYmlsaXR5IGF0IGFsbCwKCQkJCQlpbXBseWluZyB0aGF0IHRoZSBzdXBlcmlvciBpbiBnb29kbmVzcyBoYXMgbm8gY2xhaW0gdG8gcnVsZSBhbmQgYmUgbWFzdGVyLgoJCQkJCQk8L3RyYW5zbGF0aW9uPg=="
translation['1.1255b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBzb21lIHBlcnNvbnMsIHNpbXBseQoJCQkJCWNsaW5naW5nLCBhcyB0aGV5IHRoaW5rLCB0byBwcmluY2lwbGUgb2YganVzdGljZSDvvIhmb3IgdGhlIGxhdyBpcyBhCgkJCQkJcHJpbmNpcGxlIG9mIGp1c3RpY2XvvIksIGFzc2VydCB0aGF0IHRoZSBlbnNsYXZlbWVudCBvZiBwcmlzb25lcnMgb2Ygd2FyCgkJCQkJaXMganVzdDsgeWV0IGF0IHRoZSBzYW1lIHRpbWUgdGhleSBkZW55IHRoZSBhc3NlcnRpb24sIGZvciB0aGVyZSBpcyB0aGUKCQkJCQlwb3NzaWJpbGl0eSB0aGF0IHdhcnMgbWF5IGJlIHVuanVzdCBpbiB0aGVpciBvcmlnaW4gYW5kIG9uZSB3b3VsZCBieSBubyBtZWFucwoJCQkJCWFkbWl0IHRoYXQgYSBtYW4gdGhhdCBkb2VzIG5vdCBkZXNlcnZlIHNsYXZlcnkgY2FuIGJlIHJlYWxseSBhCgkJCQkJc2xhdmXigJRvdGhlcndpc2Ugd2Ugc2hhbGwgaGF2ZSB0aGUgcmVzdWx0IHRoYXQgcGVyc29ucyByZXB1dGVkIG9mIHRoZQoJCQkJCWhpZ2hlc3Qgbm9iaWxpdHkgYXJlIHNsYXZlcyBhbmQgdGhlIGRlc2NlbmRhbnRzIG9mIHNsYXZlcyBpZiB0aGV5IGhhcHBlbiB0byBiZQoJCQkJCXRha2VuIHByaXNvbmVycyBvZiB3YXIgYW5kIHNvbGQuIFRoZXJlZm9yZSB0aGV5IGRvIG5vdCBtZWFuIHRvIGFzc2VydCB0aGF0CgkJCQkJR3JlZWtzIHRoZW1zZWx2ZXMgaWYgdGFrZW4gcHJpc29uZXJzIGFyZSBzbGF2ZXMsIGJ1dCB0aGF0IGJhcmJhcmlhbnMgYXJlLiBZZXQKCQkJCQl3aGVuIHRoZXkgc2F5IHRoaXMsIHRoZXkgYXJlIG1lcmVseSBzZWVraW5nIGZvciB0aGUgcHJpbmNpcGxlcyBvZiBuYXR1cmFsCgkJCQkJc2xhdmVyeSBvZiB3aGljaCB3ZSBzcG9rZSBhdCB0aGUgb3V0c2V0OyBmb3IgdGhleSBhcmUgY29tcGVsbGVkIHRvIHNheSB0aGF0CgkJCQkJdGhlcmUgZXhpc3QgY2VydGFpbiBwZXJzb25zIHdobyBhcmUgZXNzZW50aWFsbHkgc2xhdmVzIGV2ZXJ5d2hlcmUgYW5kIGNlcnRhaW4KCQkJCQlvdGhlcnMgd2hvIGFyZSBzbyBub3doZXJlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuMTkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhlCgkJCQkJc2FtZSBhcHBsaWVzIGFsc28gYWJvdXQgbm9iaWxpdHk6IG91ciBub2JsZXMgY29uc2lkZXIgdGhlbXNlbHZlcyBub2JsZSBub3Qgb25seQoJCQkJCWluIHRoZWlyIG93biBjb3VudHJ5IGJ1dCBldmVyeXdoZXJlLCBidXQgdGhleSB0aGluayB0aGF0IGJhcmJhcmlhbiBub2JsZW1lbiBhcmUKCQkJCQlvbmx5IG5vYmxlIGluIHRoZWlyIG93biBjb3VudHJ54oCUd2hpY2ggaW1wbGllcyB0aGF0IHRoZXJlIGFyZSB0d28ga2luZHMKCQkJCQlvZiBub2JpbGl0eSBhbmQgb2YgZnJlZWRvbSwgb25lIGFic29sdXRlIGFuZCB0aGUgb3RoZXIgcmVsYXRpdmUsIGFzIEhlbGVuIHNheXMKCQkJCQlpbiBUaGVvZGVjdGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgdHJhZ2ljIHBvZXQsIGEgZnJpZW5kIG9mCgkJCQkJCUFyaXN0b3RsZS48L25vdGU+OiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJpYW1iaWMiPkJ1dCB3aG8gd291bGQgZGFyZSB0byBjYWxsIG1lIG1lbmlhbCw8L2w+CgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlIHNjaW9uIG9mIGEgdHdvZm9sZCBzdG9jayBkaXZpbmU/PC9sPgoJCQkJCTwvcXVvdGU+IFlldCBpbiBzbyBzcGVha2luZyB0aGV5IG1ha2Ugbm90aGluZyBidXQgdmlydHVlIGFuZCB2aWNlIHRoZQoJCQkJCWRpc3RpbmN0aW9uIGJldHdlZW4gc2xhdmUgYW5kIGZyZWUsIHRoZSBub2JsZSBhbmQgdGhlIGJhc2UtYm9ybjsgPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImlhbWJpYyI+QnV0IHdobyB3b3VsZCBkYXJlIHRvIGNhbGwgbWUgbWVuaWFsLDwvbD4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUgc2Npb24gb2YgYSB0d29mb2xkIHN0b2NrIGRpdmluZT88L2w+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNTViIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1255b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGV5CgkJCQkJYXNzdW1lIHRoYXQganVzdCBhcyBmcm9tIGEgbWFuIHNwcmluZ3MgYSBtYW4gYW5kIGZyb20gYnJ1dGVzIGEgYnJ1dGUsIHNvIGFsc28KCQkJCQlmcm9tIGdvb2QgcGFyZW50cyBjb21lcyBhIGdvb2Qgc29uIGJ1dCBhcyBhIG1hdHRlciBvZiBmYWN0IG5hdHVyZSBmcmVxdWVudGx5CgkJCQkJd2hpbGUgaW50ZW5kaW5nIHRvIGRvIHRoaXMgaXMgdW5hYmxlIHRvIGJyaW5nIGl0IGFib3V0LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyBjbGVhciB0aGVyZWZvcmUgdGhhdCB0aGVyZSBpcyBzb21lIHJlYXNvbiBmb3IgdGhpcwoJCQkJCWRpc3B1dGUsIGFuZCB0aGF0IGluIHNvbWUgaW5zdGFuY2VzIGl0IGlzIG5vdCB0aGUgY2FzZSB0aGF0IG9uZSBzZXQgYXJlIHNsYXZlcwoJCQkJCWFuZCB0aGUgb3RoZXIgZnJlZW1lbiBieSBuYXR1cmU7IDwvdHJhbnNsYXRpb24+"
translation['1.1255b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yMCIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBhbHNvIHRoYXQgaW4gc29tZSBpbnN0YW5jZXMgc3VjaCBhIGRpc3RpbmN0aW9uIGRvZXMgZXhpc3QsIHdoZW4gc2xhdmVyeQoJCQkJCWZvciB0aGUgb25lIGFuZCBtYXN0ZXJzaGlwIGZvciB0aGUgb3RoZXIgYXJlIGFkdmFudGFnZW91cyBhbmQganVzdCwgYW5kIGl0IGlzCgkJCQkJcHJvcGVyIGZvciB0aGUgb25lIHBhcnR5IHRvIGJlIGdvdmVybmVkIGFuZCBmb3IgdGhlIG90aGVyIHRvIGdvdmVybiBieSB0aGUgZm9ybQoJCQkJCW9mIGdvdmVybm1lbnQgZm9yIHdoaWNoIHRoZXkgYXJlIGJ5IG5hdHVyZSBmaXR0ZWQsIGFuZCB0aGVyZWZvcmUgYnkgdGhlIGV4ZXJjaXNlCgkJCQkJb2YgbWFzdGVyc2hpcCwgd2hpbGUgdG8gZ292ZXJuIGJhZGx5IGlzIHRvIGdvdmVybiBkaXNhZHZhbnRhZ2VvdXNseSBmb3IgYm90aAoJCQkJCXBhcnRpZXMg77yIZm9yIHRoZSBzYW1lIHRoaW5nIGlzIGFkdmFudGFnZW91cyBmb3IgYSBwYXJ0IGFuZCBmb3IgdGhlCgkJCQkJd2hvbGUgYm9keSBvciB0aGUgd2hvbGUgc291bCwgYW5kIHRoZSBzbGF2ZSBpcyBhIHBhcnQgb2YgdGhlIG1hc3RlcuKAlGhlCgkJCQkJaXMsIGFzIGl0IHdlcmUsIGEgcGFydCBvZiB0aGUgYm9keSwgYWxpdmUgYnV0IHlldCBzZXBhcmF0ZWQgZnJvbSBpdDsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjIxIiB1bml0PSJMb2ViIGNoYXAiIC8+aGVuY2UgdGhlcmUgaXMgYSBjZXJ0YWluIGNvbW11bml0eSBvZgoJCQkJCWludGVyZXN0IGFuZCBmcmllbmRzaGlwIGJldHdlZW4gc2xhdmUgYW5kIG1hc3RlciBpbiBjYXNlcyB3aGVuIHRoZXkgaGF2ZSBiZWVuCgkJCQkJcXVhbGlmaWVkIGJ5IG5hdHVyZSBmb3IgdGhvc2UgcG9zaXRpb25zLCBhbHRob3VnaCB3aGVuIHRoZXkgZG8gbm90IGhvbGQgdGhlbSBpbgoJCQkJCXRoYXQgd2F5IGJ1dCBieSBsYXcgYW5kIGJ5IGNvbnN0cmFpbnQgb2YgZm9yY2UgdGhlIG9wcG9zaXRlIGlzIHRoZQoJCQkJCQljYXNl77yJLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgZXZlbiBmcm9tIHRoZXNlCgkJCQkJY29uc2lkZXJhdGlvbnMgaXQgaXMgY2xlYXIgdGhhdCB0aGUgYXV0aG9yaXR5IG9mIGEgbWFzdGVyIG92ZXIgc2xhdmVzIGlzIG5vdCB0aGUKCQkJCQlzYW1lIGFzIHRoZSBhdXRob3JpdHkgb2YgYSBtYWdpc3RyYXRlIGluIGEgcmVwdWJsaWMsIG5vciBhcmUgYWxsIGZvcm1zIG9mCgkJCQkJZ292ZXJubWVudCB0aGUgc2FtZSwgYXMgc29tZSBhc3NlcnQuIFJlcHVibGljYW4gZ292ZXJubWVudCBjb250cm9scyBtZW4gd2hvIGFyZQoJCQkJCWJ5IG5hdHVyZSBmcmVlLCB0aGUgbWFzdGVyJ3MgYXV0aG9yaXR5IG1lbiB3aG8gYXJlIGJ5IG5hdHVyZSBzbGF2ZXM7IGFuZCB0aGUKCQkJCQlnb3Zlcm5tZW50IG9mIGEgaG91c2Vob2xkIGlzIG1vbmFyY2h5IO+8iHNpbmNlIGV2ZXJ5IGhvdXNlIGlzIGdvdmVybmVkIGJ5CgkJCQkJYSBzaW5nbGUgcnVsZXLvvIksPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPndoZXJlYXMKCQkJCQlzdGF0ZXNtYW5zaGlwIGlzIHRoZSBnb3Zlcm5tZW50IG9mIG1lbiBmcmVlIGFuZCBlcXVhbC4gPC90cmFuc2xhdGlvbj4="
translation['1.1256a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSB0ZXJtIOKAmG1hc3RlcuKAmSB0aGVyZWZvcmUKCQkJCQlkZW5vdGVzIHRoZSBwb3NzZXNzaW9uIG5vdCBvZiBhIGNlcnRhaW4gYnJhbmNoIG9mIGtub3dsZWRnZSBidXQgb2YgYSBjZXJ0YWluCgkJCQkJY2hhcmFjdGVyLCBhbmQgc2ltaWxhcmx5IGFsc28gdGhlIHRlcm1zIOKAmHNsYXZl4oCZIGFuZAoJCQkJCeKAmGZyZWVtYW4u4oCZIFlldCB0aGVyZSBtaWdodCBiZSBhIHNjaWVuY2Ugb2YgbWFzdGVyc2hpcCBhbmQgYQoJCQkJCXNsYXZlJ3Mgc2NpZW5jZeKAlHRoZSBsYXR0ZXIgYmVpbmcgdGhlIHNvcnQgb2Yga25vd2xlZGdlIHRoYXQgdXNlZCB0byBiZQoJCQkJCWltcGFydGVkIGJ5IHRoZSBwcm9mZXNzb3IgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3lyYWN1c2UiPlN5cmFjdXNlPC9wbGFjZU5hbWU+IO+8iGZvciB0aGVyZSB1c2VkIHRvIGJlIGEgbWFuIHRoZXJlIHdobyBmb3IgYQoJCQkJCWZlZSBnYXZlIGxlc3NvbnMgdG8gc2VydmFudHMgaW4gdGhlaXIgb3JkaW5hcnkgZHV0aWVz77yJOyBhbmQgaW5kZWVkCgkJCQkJdGhlcmUgbWlnaHQgYmUgbW9yZSBhZHZhbmNlZCBzY2llbnRpZmljIHN0dWR5IG9mIHN1Y2ggbWF0dGVycywgZm9yIGluc3RhbmNlIGEKCQkJCQlzY2llbmNlIG9mIGNvb2tlcnkgYW5kIHRoZSBvdGhlciBzdWNoIGtpbmRzIG9mIGRvbWVzdGljIHNlcnZpY2XigJRmb3IKCQkJCQlkaWZmZXJlbnQgc2VydmFudHMgaGF2ZSBkaWZmZXJlbnQgZnVuY3Rpb25zLCBzb21lIG1vcmUgaG9ub3JhYmxlIGFuZCBzb21lIG1vcmUKCQkJCQltZW5pYWwsIGFuZCBhcyB0aGUgcHJvdmVyYiBzYXlzLCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJpYW1iaWMiPlNsYXZlIGJlZm9yZSBzbGF2ZSBhbmQgbWFzdGVyIGJlZm9yZSBtYXN0ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlByb2JhYmx5IGZyb20gYSBjb21lZHkgb2YgQXJpc3RvdGxlJ3MKCQkJCQkJCQljb250ZW1wb3JhcnkgUGhpbGVtb24uPC9ub3RlPjwvbD4KCQkJCQk8L3F1b3RlPgoJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJpYW1iaWMiPlNsYXZlIGJlZm9yZSBzbGF2ZSBhbmQgbWFzdGVyIGJlZm9yZSBtYXN0ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlByb2JhYmx5IGZyb20gYSBjb21lZHkgb2YgQXJpc3RvdGxlJ3MKCQkJCQkJCQljb250ZW1wb3JhcnkgUGhpbGVtb24uPC9ub3RlPjwvbD4KCQkJCQk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UHJvYmFibHkgZnJvbSBhIGNvbWVkeSBvZiBBcmlzdG90bGUncwoJCQkJCQkJCWNvbnRlbXBvcmFyeSBQaGlsZW1vbi48L25vdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjIzIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHNsYXZlJ3Mgc2NpZW5jZXMgdGhlbiBhcmUgYWxsCgkJCQkJdGhlIHZhcmlvdXMgYnJhbmNoZXMgb2YgZG9tZXN0aWMgd29yazsgdGhlIG1hc3RlcidzIHNjaWVuY2UgaXMgdGhlIHNjaWVuY2Ugb2YKCQkJCQllbXBsb3lpbmcgc2xhdmVz4oCUZm9yIHRoZSBtYXN0ZXIncyBmdW5jdGlvbiBjb25zaXN0cyBub3QgaW4gYWNxdWlyaW5nCgkJCQkJc2xhdmVzIGJ1dCBpbiBlbXBsb3lpbmcgdGhlbS4gVGhpcyBzY2llbmNlIGhvd2V2ZXIgaXMgb25lIG9mIG5vIHBhcnRpY3VsYXIKCQkJCQlpbXBvcnRhbmNlIG9yIGRpZ25pdHk6IHRoZSBtYXN0ZXIgbXVzdCBrbm93IGhvdyB0byBkaXJlY3QgdGhlIHRhc2tzIHdoaWNoIHRoZQoJCQkJCXNsYXZlIG11c3Qga25vdyBob3cgdG8gZXhlY3V0ZS4gVGhlcmVmb3JlIGFsbCBwZW9wbGUgcmljaCBlbm91Z2ggdG8gYmUgYWJsZSB0bwoJCQkJCWF2b2lkIHBlcnNvbmFsIHRyb3VibGUgaGF2ZSBhIHN0ZXdhcmQgd2hvIHRha2VzIHRoaXMgb2ZmaWNlLCB3aGlsZSB0aGV5CgkJCQkJdGhlbXNlbHZlcyBlbmdhZ2UgaW4gcG9saXRpY3Mgb3IgcGhpbG9zb3BoeS4gVGhlIHNjaWVuY2Ugb2YgYWNxdWlyaW5nIHNsYXZlcyBpcwoJCQkJCWRpZmZlcmVudCBib3RoIGZyb20gdGhlaXIgb3duZXJzaGlwIGFuZCB0aGVpciBkaXJlY3Rpb27igJR0aGF0IGlzLCB0aGUKCQkJCQlqdXN0IGFjcXVpcmluZyBvZiBzbGF2ZXMsIHdoaWNoIGlzIGFraW4gdG8gdGhlIGFydCBvZiB3YXIgb3IgdGhhdCBvZiB0aGUgY2hhc2UuCgkJCQkJTGV0IHRoaXMgdGhlbiBzdGFuZCBhcyBvdXIgZGVmaW5pdGlvbiBvZiBzbGF2ZSBhbmQgbWFzdGVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI1NmEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['1.1256a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1256a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGxldCB1cyBmb2xsb3cgb3VyIG5vcm1hbCBtZXRob2QgYW5kIGludmVzdGlnYXRlCgkJCQkJZ2VuZXJhbGx5IHRoZSBuYXR1cmUgb2YgYWxsIGtpbmRzIG9mIHByb3BlcnR5IGFuZCB0aGUgYXJ0IG9mIGdldHRpbmcgd2VhbHRoLAoJCQkJCWluYXNtdWNoIGFzIHdlIHNhdyB0aGUgc2xhdmUgdG8gYmUgb25lIGRpdmlzaW9uIG9mIHByb3BlcnR5LiBJbiB0aGUgZmlyc3QgcGxhY2UKCQkJCQl0aGVyZWZvcmUgb25lIG1pZ2h0IHJhaXNlIHRoZSBxdWVzdGlvbiB3aGV0aGVyIHRoZSBhcnQgb2YgZ2V0dGluZyB3ZWFsdGggaXMgdGhlCgkJCQkJc2FtZSBhcyB0aGF0IG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50LCBvciBhIHBhcnQgb2YgaXQsIG9yIHN1YnNpZGlhcnkgdG8gaXQ7IGFuZAoJCQkJCWlmIHN1YnNpZGlhcnksIHdoZXRoZXIgaXQgaXMgc28gaW4gdGhlIHNlbnNlIGluIHdoaWNoIHRoZSBhcnQgb2YgbWFraW5nIHNodXR0bGVzCgkJCQkJaXMgc3Vic2lkaWFyeSB0byB0aGUgYXJ0IG9mIHdlYXZpbmcgb3IgaW4gdGhhdCBpbiB3aGljaCB0aGUgYXJ0IG9mIGNhc3RpbmcKCQkJCQlicm9uemUgaXMgc3Vic2lkaWFyeSB0byB0aGUgbWFraW5nIG9mIHN0YXR1ZXMg77yIZm9yIHRoZSB0d28gYXJlIG5vdAoJCQkJCXN1YnNpZGlhcnkgaW4gdGhlIHNhbWUgd2F5LCBidXQgc2h1dHRsZS1tYWtpbmcgc3VwcGxpZXMgdG9vbHMgd2hlcmVhcwoJCQkJCWJyb256ZS1mb3VuZGluZyBzdXBwbGllcyBtYXRlcmlhbOKAlGFuZCBieSBtYXRlcmlhbCBJIG1lYW4gdGhlIHN1YnN0YW5jZQoJCQkJCW91dCBvZiB3aGljaCBjZXJ0YWluIHdvcmsgaXMgcHJvZHVjZWQsIGZvciBleGFtcGxlIGZsZWVjZXMgYXJlIG1hdGVyaWFsIGZvciBhCgkJCQkJd2VhdmVyIGFuZCBicm9uemUgZm9yIGEgc3RhdHVhcnnvvIkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+Tm93IGl0IGlzIGNsZWFyIHRoYXQgd2VhbHRoLWdldHRpbmcgaXMgbm90IHRoZSBzYW1lIGFydCBhcwoJCQkJCWhvdXNlaG9sZCBtYW5hZ2VtZW50LCBmb3IgdGhlIGZ1bmN0aW9uIG9mIHRoZSBmb3JtZXIgaXMgdG8gcHJvdmlkZSBhbmQgdGhhdCBvZgoJCQkJCXRoZSBsYXR0ZXIgdG8gdXNl4oCUZm9yIHdoYXQgd2lsbCBiZSB0aGUgYXJ0IHRoYXQgd2lsbCB1c2UgdGhlIGNvbnRlbnRzCgkJCQkJb2YgdGhlIGhvdXNlIGlmIG5vdCB0aGUgYXJ0IG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50PyBidXQgd2hldGhlciB3ZWFsdGgtZ2V0dGluZwoJCQkJCWlzIGEgcGFydCBvZiB0aGUgYXJ0IG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50LCBvciBhIGRpZmZlcmVudCBzb3J0IG9mIHNjaWVuY2UsIGlzCgkJCQkJb3BlbiB0byBkZWJhdGUuIEZvciBpZiBpdCBpcyB0aGUgZnVuY3Rpb24gb2YgdGhlIGdldHRlciBvZiB3ZWFsdGggdG8gc3R1ZHkgdGhlCgkJCQkJc291cmNlIGZyb20gd2hpY2ggbW9uZXkgYW5kIHByb3BlcnR5IGFyZSB0byBiZSBwcm9jdXJlZCwgLiAuIC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U29tZSB3b3JkcyBzZWVtIHRvIGhhdmUgZmFsbGVuIG91dCBpbiB0aGUKCQkJCQkJR3JlZWsuPC9ub3RlPiBCdXQgcHJvcGVydHkgYW5kIHJpY2hlcyBjb21wcmlzZSBtYW55IGRpdmlzaW9uczsgaGVuY2UgZmlyc3QKCQkJCQlvZiBhbGwgaXMgaHVzYmFuZHJ5IGEgZGl2aXNpb24gb2YgdGhlIGhvdXNlaG9sZCBhcnQsIG9yIGlzIGl0IGEgZGlmZmVyZW50IGtpbmQKCQkJCQlvZiBzY2llbmNlPyBhbmQgc28gaW4gZ2VuZXJhbCBvZiB0aGUgc3VwZXJpbnRlbmRlbmNlIGFuZCBhY3F1aXNpdGlvbiBvZiBhcnRpY2xlcwoJCQkJCW9mIGZvb2QuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGZ1cnRoZXJtb3JlLCB0aGVyZSBhcmUKCQkJCQltYW55IHNvcnRzIG9mIGZvb2QsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm93aW5nIHRvIHdoaWNoCgkJCQkJYm90aCBhbmltYWxzIGFuZCBtZW4gaGF2ZSBtYW55IG1vZGVzIG9mIGxpZmU7IGZvciBpdCBpcyBpbXBvc3NpYmxlIHRvIGxpdmUKCQkJCQl3aXRob3V0IGZvb2QsIHNvIHRoYXQgdGhlIGRpZmZlcmVuY2VzIG9mIGZvb2QgaGF2ZSBtYWRlIHRoZSBsaXZlcyBvZiBhbmltYWxzCgkJCQkJZGlmZmVyZW50LiBBbW9uZyB3aWxkIGFuaW1hbHMgc29tZSBhcmUgbm9tYWRpYyBhbmQgb3RoZXJzIHNvbGl0YXJ5LCBhY2NvcmRpbmcgdG8KCQkJCQl3aGljaGV2ZXIgaGFiaXQgaXMgYWR2YW50YWdlb3VzIGZvciB0aGVpciBzdXBwbHkgb2YgZm9vZCwgYmVjYXVzZSBzb21lIG9mIHRoZW0KCQkJCQlhcmUgY2Fybml2b3JvdXMsIG90aGVycyBncmFtaW5pdm9yb3VzLCBhbmQgb3RoZXJzIGVhdCBhbGwga2luZHMgb2YgZm9vZDsgc28gdGhhdAoJCQkJCW5hdHVyZSBoYXMgZGlmZmVyZW50aWF0ZWQgdGhlaXIgbW9kZXMgb2YgbGlmZSB0byBzdWl0IHRoZWlyIGZhY2lsaXRpZXMgYW5kIHRoZWlyCgkJCQkJcHJlZGlsZWN0aW9uIGZvciB0aG9zZSBhcnRpY2xlcyBvZiBmb29kLiBBbmQgYXMgZGlmZmVyZW50IGtpbmRzIG9mIGFuaW1hbHMgYnkKCQkJCQluYXR1cmUgcmVsaXNoIGRpZmZlcmVudCBzb3J0cyBvZiBmb29kLCBhbmQgbm90IGVhY2gga2luZCB0aGUgc2FtZSwgZXZlbiB3aXRoaW4KCQkJCQl0aGUgY2xhc3NlcyBvZiBjYXJuaXZvcm91cyBhbmQgZ3JhbWluaXZvcm91cyBhbmltYWxzIHRoZWlyIG1vZGVzIG9mIGxpZmUgZGlmZmVyCgkJCQkJZnJvbSBvbmUgYW5vdGhlci4gPC90cmFuc2xhdGlvbj4="
translation['1.1256b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHNpbWlsYXJseSBpbgoJCQkJCXRoZSBodW1hbiByYWNlIGFsc28sIGZvciB0aGVyZSBhcmUgd2lkZSBkaWZmZXJlbmNlcyBvZiBsaWZlIGFtb25nIG1hbmtpbmQuIFRoZQoJCQkJCWlkbGVzdCBtZW4gYXJlIG5vbWFkcyDvvIhmb3IgdG8gcHJvY3VyZSBmb29kIGZyb20gZG9tZXN0aWNhdGVkIGFuaW1hbHMKCQkJCQlpbnZvbHZlcyBubyB0b2lsIG9yIGluZHVzdHJ5LCBidXQgYXMgaXQgaXMgbmVjZXNzYXJ5IGZvciB0aGUgaGVyZHMgdG8gbW92ZSBmcm9tCgkJCQkJcGxhY2UgdG8gcGxhY2UgYmVjYXVzZSBvZiB0aGUgcGFzdHVyZXMsIHRoZSBwZW9wbGUgdGhlbXNlbHZlcyBhcmUgZm9yY2VkIHRvCgkJCQkJZm9sbG93IGFsb25nIHdpdGggdGhlbSwgYXMgdGhvdWdoIHRoZXkgd2VyZSBmYXJtaW5nIGEgbGl2ZSBmYXJt77yJLiBPdGhlcgoJCQkJCW1lbiBsaXZlIGZyb20gaHVudGluZywgYW5kIGRpZmZlcmVudCBwZW9wbGUgZnJvbSBkaWZmZXJlbnQga2luZHMgb2YgaHVudGluZywgZm9yCgkJCQkJaW5zdGFuY2Ugc29tZSBmcm9tIGJyaWdhbmRhZ2UsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMKCQkJCQkJ4oCYc2xhdmUtcmFpZGluZyzigJkgY2YuIDMuOSwgdGhlIGFwcHJvcHJpYXRpb24gb2YgdGhlCgkJCQkJCeKAmGxpdmUgdG9vbHPigJkgdGhhdCBhcmUgYSBwYXJ0IG9mIG5hdHVyZSdzIHN1cHBsaWVzOyBidXQKCQkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlRodWMuIDEuNSIgdmFsaWQ9InllcyI+VGh1Yy4gMS41PC9iaWJsPiBzcGVha3Mgb2YgYnJpZ2FuZGFnZSBhbmQgcGlyYWN5IGFzCgkJCQkJCWNvbW1vbiBpbiBlYXJsaWVyIHRpbWVzLCBhbmQgYXMgc3RpbGwgZGVlbWVkIHJlc3BlY3RhYmxlIHByb2Zlc3Npb25zIGluCgkJCQkJCU5vcnRoZXJuIEdyZWVjZS48L25vdGU+IG90aGVycyBmcm9tIGZpc2hpbmfigJR0aGVzZSBhcmUgdGhvc2UgdGhhdAoJCQkJCWR3ZWxsIG9uIHRoZSBiYW5rcyBvZiBsYWtlcywgbWFyc2hlcyBhbmQgcml2ZXJzIG9yIG9mIGEgc2VhIHN1aXRhYmxlIGZvcgoJCQkJCWZpc2hpbmcs4oCUYW5kIG90aGVycyBsaXZlIG9uIHdpbGQgYmlyZHMgYW5kIGFuaW1hbHMuIEJ1dCB0aGUgbGFyZ2VzdAoJCQkJCWNsYXNzIG9mIG1lbiBsaXZlIGZyb20gdGhlIGxhbmQgYW5kIHRoZSBmcnVpdHMgb2YgY3VsdGl2YXRpb24uIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlRodWMuIDEuNSIgdmFsaWQ9InllcyI+VGh1Yy4gMS41PC9iaWJsPiBzcGVha3Mgb2YgYnJpZ2FuZGFnZSBhbmQgcGlyYWN5IGFzCgkJCQkJCWNvbW1vbiBpbiBlYXJsaWVyIHRpbWVzLCBhbmQgYXMgc3RpbGwgZGVlbWVkIHJlc3BlY3RhYmxlIHByb2Zlc3Npb25zIGluCgkJCQkJCU5vcnRoZXJuIEdyZWVjZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoaXMgdGhlbiB2aXJ0dWFsbHkgY29tcGxldGVzIHRoZSBsaXN0IG9mCgkJCQkJdGhlIHZhcmlvdXMgbW9kZXMgb2YgbGlmZSwgdGhvc2UgYXQgbGVhc3QgdGhhdCBoYXZlIHRoZWlyIGluZHVzdHJ5IHNwcnVuZyBmcm9tCgkJCQkJdGhlbXNlbHZlcyBhbmQgZG8gbm90IHByb2N1cmUgdGhlaXIgZm9vZCBieSBiYXJ0ZXIgYW5kIHRyYWRl4oCUCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjU2YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1256b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnRoZSBsaXZlcyBvZiB0aGUgaGVyZHNtYW4sIHRoZSBicmlnYW5kLCB0aGUgZmlzaGVybWFuLCB0aGUKCQkJCQlodW50ZXIsIHRoZSBodXNiYW5kLW1hbi4gT3RoZXJzIGFsc28gbGl2ZSBwbGVhc2FudGx5IGJ5IGNvbWJpbmluZyBzb21lIG9mIHRoZXNlCgkJCQkJcHVyc3VpdHMsIHN1cHBsZW1lbnRpbmcgdGhlIG1vcmUgZGVmaWNpZW50IGxpZmUgd2hlcmUgaXQgaGFwcGVucyB0byBmYWxsIHNob3J0CgkJCQkJaW4gcmVnYXJkIHRvIGJlaW5nIHNlbGYtc3VmZmljaW5nOiBmb3IgaW5zdGFuY2UsIHNvbWUgY29tYmluZSBhIHBhc3RvcmFsIGxpZmUKCQkJCQlhbmQgYnJpZ2FuZGFnZSwgb3RoZXJzIGh1c2JhbmRyeSBhbmQgaHVudGluZywgYW5kIHNpbWlsYXJseSB3aXRoIHRoZQoJCQkJCW90aGVyc+KAlHRoZXkgcGFzcyB0aGVpciB0aW1lIGluIHN1Y2ggYSBjb21iaW5hdGlvbiBvZiBwdXJzdWl0cyBhcyB0aGVpcgoJCQkJCW5lZWQgY29tcGVscy4gPC90cmFuc2xhdGlvbj4="
translation['1.1256b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy42IiB1bml0PSJMb2ViIGNoYXAiIC8+UHJvcGVydHkgb2YgdGhpcyBzb3J0CgkJCQkJdGhlbiBzZWVtcyB0byBiZSBiZXN0b3dlZCBieSBuYXR1cmUgaGVyc2VsZiB1cG9uIGFsbCwgYXMgaW1tZWRpYXRlbHkgdXBvbiB0aGVpcgoJCQkJCWZpcnN0IGNvbWluZyBpbnRvIGV4aXN0ZW5jZSwgc28gYWxzbyB3aGVuIHRoZXkgaGF2ZSByZWFjaGVkIG1hdHVyaXR5LiBGb3IgZXZlbgoJCQkJCWF0IHRoZSBvcmlnaW5hbCBjb21pbmcgaW50byBleGlzdGVuY2Ugb2YgdGhlIHlvdW5nIHNvbWUga2luZHMgb2YgYW5pbWFscyBicmluZwoJCQkJCWZvcnRoIHdpdGggdGhlbSBhdCBiaXJ0aCBlbm91Z2ggc3VzdGVuYW5jZSB0byBzdWZmaWNlIHVudGlsIHRoZSBvZmZzcHJpbmcgY2FuCgkJCQkJcHJvdmlkZSBmb3IgaXRzZWxmLCBmb3IgZXhhbXBsZSBhbGwgdGhlIHNwZWNpZXMgdGhhdCBiZWFyIHRoZWlyIHlvdW5nIGluIHRoZQoJCQkJCWZvcm0gb2YgbGFydmFlIG9yIGluIGVnZ3MuIFRoZSB2aXZpcGFyb3VzIHNwZWNpZXMgaGF2ZSBzdXN0ZW5hbmNlIGZvciB0aGVpcgoJCQkJCW9mZnNwcmluZyBpbnNpZGUgdGhlbXNlbHZlcyBmb3IgYSBjZXJ0YWluIHBlcmlvZCwgdGhlIHN1YnN0YW5jZSBjYWxsZWQgbWlsay4KCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5TbyB0aGF0IGNsZWFybHkgd2UgbXVzdCBzdXBwb3NlCgkJCQkJdGhhdCBuYXR1cmUgYWxzbyBwcm92aWRlcyBmb3IgdGhlbSBpbiBhIHNpbWlsYXIgd2F5IHdoZW4gZ3Jvd24gdXAsIGFuZCB0aGF0CgkJCQkJcGxhbnRzIGV4aXN0IGZvciB0aGUgc2FrZSBvZiBhbmltYWxzIGFuZCB0aGUgb3RoZXIgYW5pbWFscyBmb3IgdGhlIGdvb2Qgb2YgbWFuLAoJCQkJCXRoZSBkb21lc3RpYyBzcGVjaWVzIGJvdGggZm9yIGhpcyBzZXJ2aWNlIGFuZCBmb3IgaGlzIGZvb2QsIGFuZCBpZiBub3QgYWxsIGF0CgkJCQkJYWxsIGV2ZW50cyBtb3N0IG9mIHRoZSB3aWxkIG9uZXMgZm9yIHRoZSBzYWtlIG9mIGhpcyBmb29kIGFuZCBvZiBoaXMgc3VwcGxpZXMgb2YKCQkJCQlvdGhlciBraW5kcywgaW4gb3JkZXIgdGhhdDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50aGV5IG1heQoJCQkJCWZ1cm5pc2ggaGltIGJvdGggd2l0aCBjbG90aGluZyBhbmQgd2l0aCBvdGhlciBhcHBsaWFuY2VzLiBJZiB0aGVyZWZvcmUgbmF0dXJlCgkJCQkJbWFrZXMgbm90aGluZyB3aXRob3V0IHB1cnBvc2Ugb3IgaW4gdmFpbiwgaXQgZm9sbG93cyB0aGF0IG5hdHVyZSBoYXMgbWFkZSBhbGwKCQkJCQl0aGUgYW5pbWFscyBmb3IgdGhlIHNha2Ugb2YgbWVuLiA8L3RyYW5zbGF0aW9uPg=="
translation['1.1257a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy44IiB1bml0PSJMb2ViIGNoYXAiIC8+SGVuY2UgZXZlbiB0aGUgYXJ0IG9mIHdhciB3aWxsIGJ5IG5hdHVyZSBiZSBpbiBhIG1hbm5lciBhbiBhcnQgb2YgYWNxdWlzaXRpb24KCQkJCQnvvIhmb3IgdGhlIGFydCBvZiBodW50aW5nIGlzIGEgcGFydCBvZiBpdO+8iSB0aGF0IGlzIHByb3Blcmx5CgkJCQkJZW1wbG95ZWQgYm90aCBhZ2FpbnN0IHdpbGQgYW5pbWFscyBhbmQgYWdhaW5zdCBzdWNoIG9mIG1hbmtpbmQgYXMgdGhvdWdoCgkJCQkJZGVzaWduZWQgYnkgbmF0dXJlIGZvciBzdWJqZWN0aW9uIHJlZnVzZSB0byBzdWJtaXQgdG8gaXQsIGluYXNtdWNoIGFzIHRoaXMKCQkJCQl3YXJmYXJlIGlzIGJ5IG5hdHVyZSBqdXN0LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbmUga2luZCBvZiBhY3F1aXNpdGlvbgoJCQkJCXRoZXJlZm9yZSBpbiB0aGUgb3JkZXIgb2YgbmF0dXJlIGlzIGEgcGFydCBvZiB0aGUgaG91c2Vob2xkIGFydCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UmFzc293IHdvdWxkIHRyYW5zcG9zZSB0aGUgY2xhdXNlCgkJCQkJCe+8iHdpdGggYSBzbGlnaHQgYWx0ZXJhdGlvbu+8iSB0byBnaXZlIOKAmG9mIHRoZQoJCQkJCQlob3VzZWhvbGQgYXJ0LCB0aGF0IGlzLCB0aGUgYWNxdWlzaXRpb24gb2YgdGhvc2UgZ29vZHMgY2FwYWJsZSBvZgoJCQkJCQlhY2N1bXVsYXRpb24gdGhhdCBhcmUgbmVjZXNzYXJ5IGZvciBsaWZlIGFuZCB1c2VmdWwgZm9yIHRoZSBjb21tdW5pdHkgb2YKCQkJCQkJY2l0eSBhbmQgaG91c2Vob2xkLCBhIHN1cHBseSBvZiB3aGljaCBtdXN0IGJlIGZvcnRoY29taW5nIG9yIGVsc2UgdGhlIGFydAoJCQkJCQltdXN0IHByb2N1cmUgaXQgdG8gYmUgZm9ydGhjb21pbmcu4oCZPC9ub3RlPiBpbiBhY2NvcmRhbmNlIHdpdGgKCQkJCQl3aGljaCBlaXRoZXIgdGhlcmUgbXVzdCBiZSBmb3J0aGNvbWluZyBvciBlbHNlIHRoYXQgYXJ0IG11c3QgcHJvY3VyZSB0byBiZQoJCQkJCWZvcnRoY29taW5nIGEgc3VwcGx5IG9mIHRob3NlIGdvb2RzLCBjYXBhYmxlIG9mIGFjY3VtdWxhdGlvbiwgd2hpY2ggYXJlCgkJCQkJbmVjZXNzYXJ5IGZvciBsaWZlIGFuZCB1c2VmdWwgZm9yIHRoZSBjb21tdW5pdHkgb2YgY2l0eSBvciBob3VzZWhvbGQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy45IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGl0IGlzIG9mIHRoZXNlIGdvb2RzIHRoYXQgcmljaGVzIGluIHRoZQoJCQkJCXRydWUgc2Vuc2UgYXQgYWxsIGV2ZW50cyBzZWVtIHRvIGNvbnNpc3QuIEZvciB0aGUgYW1vdW50IG9mIHN1Y2ggcHJvcGVydHkKCQkJCQlzdWZmaWNpZW50IGluIGl0c2VsZiBmb3IgYSBnb29kIGxpZmUgaXMgbm90IHVubGltaXRlZCwgYXMgU29sb24gPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlNvbC4gRnIuIDEzLjcxIj5Tb2xvbgoJCQkJCQkxMy43MTwvYmlibD4uPC9ub3RlPiBzYXlzIHRoYXQgaXQgaXMgaW4gdGhlIHZlcnNlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlNvbC4gRnIuIDEzLjcxIj5Tb2xvbgoJCQkJCQkxMy43MTwvYmlibD4uPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPkJ1dCBvZiByaWNoZXMgbm8gYm91bmQgaGFzIGJlZW4gZml4ZWQgb3IgcmV2ZWFsZWQgdG8KCQkJCQkJCW1lbjs8L2w+CgkJCQkJPC9xdW90ZT4gZm9yIGEgbGltaXQgaGFzIGJlZW4gZml4ZWQsIGFzIHdpdGggdGhlIG90aGVyIGFydHMsIHNpbmNlIG5vIHRvb2wKCQkJCQliZWxvbmdpbmcgdG8gYW55IGFydCBpcyB3aXRob3V0IGEgbGltaXQgd2hldGhlciBpbiBudW1iZXIgb3IgaW4gc2l6ZSwgYW5kIHJpY2hlcwoJCQkJCWFyZSBhIGNvbGxlY3Rpb24gb2YgdG9vbHMgZm9yIHRoZSBob3VzZWhvbGRlciBhbmQgdGhlIHN0YXRlc21hbi4gVGhlcmVmb3JlIHRoYXQKCQkJCQl0aGVyZSBpcyBhIGNlcnRhaW4gYXJ0IG9mIGFjcXVpc2l0aW9uIGJlbG9uZ2luZyBpbiB0aGUgb3JkZXIgb2YgbmF0dXJlIHRvCgkJCQkJaG91c2Vob2xkZXJzIGFuZCB0byBzdGF0ZXNtZW4sIGFuZCBmb3Igd2hhdCByZWFzb24gdGhpcyBpcyBzbywgaXMgY2xlYXIuCgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+QnV0IG9mIHJpY2hlcyBubyBib3VuZCBoYXMgYmVlbiBmaXhlZCBvciByZXZlYWxlZCB0bwoJCQkJCQkJbWVuOzwvbD4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdGhlcmUgaXMgYW5vdGhlciBraW5kIG9mCgkJCQkJYWNxdWlzaXRpb24gdGhhdCBpcyBzcGVjaWFsbHkgY2FsbGVkIHdlYWx0aC1nZXR0aW5nLCBhbmQgdGhhdCBpcyBzbyBjYWxsZWQgd2l0aAoJCQkJCWp1c3RpY2UgYW5kIHRvIHRoaXMga2luZCBpdCBpcyBkdWUgdGhhdCB0aGVyZSBpcyB0aG91Z2h0IHRvIGJlIG5vIGxpbWl0IHRvCgkJCQkJcmljaGVzIGFuZCBwcm9wZXJ0eS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNTdhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1257a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPk93aW5nIHRvIGl0cyBhZmZpbml0eSB0byB0aGUgYXJ0IG9mIGFjcXVpc2l0aW9uIG9mCgkJCQkJd2hpY2ggd2Ugc3Bva2UsIGl0IGlzIHN1cHBvc2VkIGJ5IG1hbnkgcGVvcGxlIHRvIGJlIG9uZSBhbmQgdGhlIHNhbWUgYXMgdGhhdDsKCQkJCQlhbmQgYXMgYSBtYXR0ZXIgb2YgZmFjdCwgd2hpbGUgaXQgaXMgbm90IHRoZSBzYW1lIGFzIHRoZSBhY3F1aXNpdGlvbiBzcG9rZW4gb2YsCgkJCQkJaXQgaXMgbm90IGZhciByZW1vdmVkIGZyb20gaXQuIE9uZSBvZiB0aGVtIGlzIG5hdHVyYWwsIHRoZSBvdGhlciBpcyBub3QgbmF0dXJhbCwKCQkJCQlidXQgY2FycmllZCBvbiByYXRoZXIgYnkgbWVhbnMgb2YgYSBjZXJ0YWluIGFjcXVpcmVkIHNraWxsIG9yIGFydC4gV2UgbWF5IHRha2UKCQkJCQlvdXIgc3RhcnRpbmctcG9pbnQgZm9yIGl0cyBzdHVkeSBmcm9tIHRoZSBmb2xsb3dpbmcgY29uc2lkZXJhdGlvbjogPC90cmFuc2xhdGlvbj4="
translation['1.1257a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPndpdGggZXZlcnkgYXJ0aWNsZSBvZiBwcm9wZXJ0eSB0aGVyZSBpcyBhCgkJCQkJZG91YmxlIHdheSBvZiB1c2luZyBpdDsgYm90aCB1c2VzIGFyZSByZWxhdGVkIHRvIHRoZSBhcnRpY2xlIGl0c2VsZiwgYnV0IG5vdAoJCQkJCXJlbGF0ZWQgdG8gaXQgaW4gdGhlIHNhbWUgbWFubmVy4oCUb25lIGlzIHBlY3VsaWFyIHRvIHRoZSB0aGluZyBhbmQgdGhlCgkJCQkJb3RoZXIgaXMgbm90IHBlY3VsaWFyIHRvIGl0LiBUYWtlIGZvciBleGFtcGxlIGEgc2hvZeKAlHRoZXJlIGlzIGl0cyB3ZWFyCgkJCQkJYXMgYSBzaG9lIGFuZCB0aGVyZSBpcyBpdHMgdXNlIGFzIGFuIGFydGljbGUgb2YgZXhjaGFuZ2U7IGZvciBib3RoIGFyZSB3YXlzIG9mCgkJCQkJdXNpbmcgYSBzaG9lLCBpbmFzbXVjaCBhcyBldmVuIGhlIHRoYXQgYmFydGVycyBhIHNob2UgZm9yIG1vbmV5IG9yIGZvb2Qgd2l0aCB0aGUKCQkJCQljdXN0b21lciB0aGF0IHdhbnRzIGEgc2hvZSB1c2VzIGl0IGFzIGEgc2hvZSwgdGhvdWdoIG5vdCBmb3IgdGhlIHVzZSBwZWN1bGlhciB0bwoJCQkJCWEgc2hvZSwgc2luY2Ugc2hvZXMgaGF2ZSBub3QgY29tZSBpbnRvIGV4aXN0ZW5jZSBmb3IgdGhlIHB1cnBvc2Ugb2YgYmFydGVyLiBBbmQKCQkJCQl0aGUgc2FtZSBhbHNvIGhvbGRzIGdvb2QgYWJvdXQgdGhlIG90aGVyIGFydGljbGVzIG9mIHByb3BlcnR5OyBmb3IgYWxsIG9mIHRoZW0KCQkJCQloYXZlIGFuIGFydCBvZiBleGNoYW5nZSByZWxhdGVkIHRvIHRoZW0sIHdoaWNoIGJlZ2FuIGluIHRoZSBmaXJzdCBpbnN0YW5jZSBmcm9tCgkJCQkJdGhlIG5hdHVyYWwgb3JkZXIgb2YgdGhpbmdzLCBiZWNhdXNlIG1lbiBoYWQgbW9yZSB0aGFuIGVub3VnaCBvZiBzb21lIHRoaW5ncyBhbmQKCQkJCQlsZXNzIHRoYW4gZW5vdWdoIG9mIG90aGVycy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhpcwoJCQkJCWNvbnNpZGVyYXRpb24gYWxzbyBzaG93cyB0aGF0IHRoZSBhcnQgb2YgdHJhZGUgaXMgbm90IGJ5IG5hdHVyZSBhIHBhcnQgb2YgdGhlCgkJCQkJYXJ0IG9mIHdlYWx0aC1nZXR0aW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgQXJpc3RvdGxlIHdyb3RlCgkJCQkJCeKAmG9mIHRoZSBhcnQgb2YgZXhjaGFuZ2XigJk6IEJlcm5heXMgc3VnZ2VzdHMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrzOtc+EzrHOss67zrfPhM65zrrhv4bPgjwvZm9yZWlnbj4gZm9yIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Hz4HOt868zrHPhM65z4PPhM65zrrhv4bPgjwvZm9yZWlnbj4uPC9ub3RlPjsgZm9yIHRoZSBwcmFjdGljZSBvZiBiYXJ0ZXIgd2FzCgkJCQkJbmVjZXNzYXJ5IG9ubHkgc28gZmFyIGFzIHRvIHNhdGlzZnkgbWVuJ3Mgb3duIG5lZWRzLiBJbiB0aGUgcHJpbWFyeTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs68zrXPhM6xzrLOu863z4TOuc664b+Gz4I8L2ZvcmVpZ24+IGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ph8+BzrfOvM6xz4TOuc+Dz4TOuc664b+Gz4I8L2ZvcmVpZ24+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hc3NvY2lhdGlvbiB0aGVyZWZvcmUg77yISSBtZWFuIHRoZQoJCQkJCWhvdXNlaG9sZO+8iSB0aGVyZSBpcyBubyBmdW5jdGlvbiBmb3IgdHJhZGUsIGJ1dCBpdCBvbmx5IGFyaXNlcyBhZnRlciB0aGUKCQkJCQlhc3NvY2lhdGlvbiBoYXMgYmVjb21lIG1vcmUgbnVtZXJvdXMuIEZvciB0aGUgbWVtYmVycyBvZiB0aGUgcHJpbWl0aXZlIGhvdXNlaG9sZAoJCQkJCXVzZWQgdG8gc2hhcmUgY29tbW9kaXRpZXMgdGhhdCB3ZXJlIGFsbCB0aGVpciBvd24sIHdoZXJlYXMgb24gdGhlIGNvbnRyYXJ5IGEKCQkJCQlncm91cCBkaXZpZGVkIGludG8gc2V2ZXJhbCBob3VzZWhvbGRzIHBhcnRpY2lwYXRlZCBhbHNvIGluIGEgbnVtYmVyIG9mCgkJCQkJY29tbW9kaXRpZXMgYmVsb25naW5nIHRvIHRoZWlyIG5laWdoYm9ycywgYWNjb3JkaW5nIHRvIHRoZWlyIG5lZWRzIGZvciB3aGljaAoJCQkJCXRoZXkgd2VyZSBmb3JjZWQgdG8gbWFrZSB0aGVpciBpbnRlcmNoYW5nZXMgYnkgd2F5IG9mIGJhcnRlciwgYXMgYWxzbyBtYW55CgkJCQkJYmFyYmFyaWFuIHRyaWJlcyBkbyBzdGlsbDsgZm9yIHN1Y2ggdHJpYmVzIGRvIG5vdCBnbyBiZXlvbmQgZXhjaGFuZ2luZyBhY3R1YWwKCQkJCQljb21tb2RpdGllcyBmb3IgYWN0dWFsIGNvbW1vZGl0aWVzLCBmb3IgZXhhbXBsZSBnaXZpbmcgYW5kIHRha2luZyB3aW5lIGZvciBjb3JuLAoJCQkJCWFuZCBzbyB3aXRoIHRoZSB2YXJpb3VzIG90aGVyIHRoaW5ncyBvZiB0aGUgc29ydC4gPC90cmFuc2xhdGlvbj4="
translation['1.1257b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkV4Y2hhbmdlIG9uIHRoZXNlIGxpbmVzIHRoZXJlZm9yZSBpcyBub3QgY29udHJhcnkgdG8KCQkJCQluYXR1cmUsIG5vciBpcyBpdCBhbnkgYnJhbmNoIG9mIHRoZSBhcnQgb2Ygd2VhbHRoLWdldHRpbmcsIGZvciBpdCBleGlzdGVkIGZvcgoJCQkJCXRoZSByZXBsZW5pc2htZW50IG9mIG5hdHVyYWwgc2VsZi1zdWZmaWNpZW5jeTsgeWV0IG91dCBvZiBpdCB0aGUgYXJ0IG9mIGJ1c2luZXNzCgkJCQkJaW4gZHVlIGNvdXJzZSBhcm9zZS4gRm9yIHdoZW4gdGhleSBoYWQgY29tZSB0byBzdXBwbHkgdGhlbXNlbHZlcyBtb3JlIGZyb20KCQkJCQlhYnJvYWQgYnkgaW1wb3J0aW5nIHRoaW5ncyBpbiB3aGljaCB0aGV5IHdlcmUgZGVmaWNpZW50IGFuZCBleHBvcnRpbmcgdGhvc2Ugb2YKCQkJCQl3aGljaCB0aGV5IGhhZCBhIHN1cnBsdXMsIHRoZSBlbXBsb3ltZW50IG9mIG1vbmV5IG5lY2Vzc2FyaWx5IGNhbWUgdG8gYmUKCQkJCQlkZXZpc2VkLiBGb3IgdGhlIG5hdHVyYWwgbmVjZXNzYXJpZXMgYXJlIG5vdCBpbiBldmVyeSBjYXNlIHJlYWRpbHkgcG9ydGFibGU7CgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPmhlbmNlIGZvciB0aGUgcHVycG9zZSBvZiBiYXJ0ZXIKCQkJCQltZW4gbWFkZSBhIG11dHVhbCBjb21wYWN0IHRvIGdpdmUgYW5kIGFjY2VwdCBzb21lIHN1YnN0YW5jZSBvZiBzdWNoIGEgc29ydCBhcwoJCQkJCWJlaW5nIGl0c2VsZiBhIHVzZWZ1bCBjb21tb2RpdHkgd2FzIGVhc3kgdG8gaGFuZGxlIGluIHVzZSBmb3IgZ2VuZXJhbCBsaWZlLCBpcm9uCgkJCQkJZm9yIGluc3RhbmNlLCBzaWx2ZXIgYW5kIG90aGVyIG1ldGFscywgYXQgdGhlIGZpcnN0IHN0YWdlIGRlZmluZWQgbWVyZWx5IGJ5IHNpemUKCQkJCQlhbmQgd2VpZ2h0LCBidXQgZmluYWxseSBhbHNvIGJ5IGltcHJlc3Npbmcgb24gaXQgYSBzdGFtcCBpbiBvcmRlciB0aGF0IHRoaXMKCQkJCQltaWdodCByZWxpZXZlIHRoZW0gb2YgaGF2aW5nIHRvIG1lYXN1cmUgaXQ7IGZvciB0aGUgc3RhbXAgd2FzIHB1dCBvbiBhcyBhIHRva2VuCgkJCQkJb2YgdGhlIGFtb3VudC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNTdiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1257b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1257b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPlNvIHdoZW4gY3VycmVuY3kKCQkJCQloYWQgYmVlbiBub3cgaW52ZW50ZWQgYXMgYW4gb3V0Y29tZSBvZiB0aGUgbmVjZXNzYXJ5IGludGVyY2hhbmdlIG9mIGdvb2RzLCB0aGVyZQoJCQkJCWNhbWUgaW50byBleGlzdGVuY2UgdGhlIG90aGVyIGZvcm0gb2Ygd2VhbHRoLWdldHRpbmcsIHRyYWRlLCB3aGljaCBhdCBmaXJzdCBubwoJCQkJCWRvdWJ0IHdlbnQgb24gaW4gYSBzaW1wbGUgZm9ybSwgYnV0IGxhdGVyIGJlY2FtZSBtb3JlIGhpZ2hseSBvcmdhbml6ZWQgYXMKCQkJCQlleHBlcmllbmNlIGRpc2NvdmVyZWQgdGhlIHNvdXJjZXMgYW5kIG1ldGhvZHMgb2YgZXhjaGFuZ2UgdGhhdCB3b3VsZCBjYXVzZSBtb3N0CgkJCQkJcHJvZml0LiBIZW5jZSBhcmlzZXMgdGhlIGlkZWEgdGhhdCB0aGUgYXJ0IG9mIHdlYWx0aC1nZXR0aW5nIGRlYWxzIHNwZWNpYWxseQoJCQkJCXdpdGggbW9uZXksIGFuZCB0aGF0IGl0cyBmdW5jdGlvbiBpcyB0byBiZSBhYmxlIHRvIGRpc2Nlcm4gZnJvbSB3aGF0IHNvdXJjZSBhCgkJCQkJbGFyZ2Ugc3VwcGx5IGNhbiBiZSBwcm9jdXJlZCwgYXMgdGhpcyBhcnQgaXMgc3VwcG9zZWQgdG8gYmUgY3JlYXRpdmUgb2YgcmljaGVzCgkJCQkJYW5kIHdlYWx0aDsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjE2IiB1bml0PSJMb2ViIGNoYXAiIC8+aW5kZWVkIHJpY2hlcyBhcmUgb2Z0ZW4KCQkJCQlhc3N1bWVkIHRvIGNvbnNpc3Qgb2YgYSBxdWFudGl0eSBvZiBtb25leSwgYmVjYXVzZSBtb25leSBpcyB0aGUgdGhpbmcgd2l0aCB3aGljaAoJCQkJCXRoZSBhcnQgb2YgYnVzaW5lc3MgYW5kIG9mIHRyYWRlIGRlYWxzLiBCdXQgYXQgb3RoZXIgdGltZXMsIG9uIHRoZSBjb250cmFyeSwgaXQKCQkJCQlpcyB0aG91Z2h0IHRoYXQgbW9uZXkgaXMgbm9uc2Vuc2UsIGFuZCBub3RoaW5nIGJ5IG5hdHVyZSBidXQgZW50aXJlbHkgYQoJCQkJCWNvbnZlbnRpb24sIGJlY2F1c2Ugd2hlbiB0aG9zZSB3aG8gdXNlIGl0IGhhdmUgY2hhbmdlZCB0aGUgY3VycmVuY3kgaXQgaXMgd29ydGgKCQkJCQlub3RoaW5nLCBhbmQgYmVjYXVzZSBpdCBpcyBvZiBubyB1c2UgZm9yIGFueSBvZiB0aGUgbmVjZXNzYXJ5IG5lZWRzIG9mIGxpZmUgYW5kCgkJCQkJYSBtYW4gd2VsbCBzdXBwbGllZCB3aXRoIG1vbmV5IG1heSBvZnRlbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5lLmcuCgkJCQkJCW9uIGEgZGVzZXJ0IGlzbGFuZC48L25vdGU+IGJlIGRlc3RpdHV0ZSBvZiB0aGUgYmFyZSBuZWNlc3NpdGllcyBvZgoJCQkJCXN1YnNpc3RlbmNlLCB5ZXQgaXQgaXMgYW5vbWFsb3VzIHRoYXQgd2VhbHRoIHNob3VsZCBiZSBvZiBzdWNoIGEga2luZCB0aGF0IGEgbWFuCgkJCQkJbWF5IGJlIHdlbGwgc3VwcGxpZWQgd2l0aCBpdCBhbmQgeWV0IGRpZSBvZiBodW5nZXIsIGxpa2UgdGhlIGZhbW91cyBNaWRhcyBpbiB0aGUKCQkJCQlsZWdlbmQsIHdoZW4gb3dpbmcgdG8gdGhlIGluc2F0aWFibGUgY292ZXRvdXNuZXNzIG9mIGhpcyBwcmF5ZXIgYWxsIHRoZSB2aWFuZHMKCQkJCQlzZXJ2ZWQgdXAgdG8gaGltIHR1cm5lZCBpbnRvIGdvbGQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlIHBlb3BsZSBzZWVrIGZvciBhIGRpZmZlcmVudCBkZWZpbml0aW9uIG9mIHJpY2hlcyBhbmQgdGhlIGFydCBvZiBnZXR0aW5nCgkJCQkJd2VhbHRoLCBhbmQgcmlnaHRseTsgZm9yIG5hdHVyYWwgd2VhbHRoLWdldHRpbmcgYW5kIG5hdHVyYWwgcmljaGVzIGFyZQoJCQkJCQlkaWZmZXJlbnQ6PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm5hdHVyYWwgd2VhbHRoLWdldHRpbmcKCQkJCQliZWxvbmdzIHRvIGhvdXNlaG9sZCBtYW5hZ2VtZW50LCB3aGVyZWFzIHRoZSBvdGhlciBraW5kIGJlbG9uZ3MgdG8gdHJhZGUsCgkJCQkJcHJvZHVjaW5nIGdvb2RzIG5vdCBpbiBldmVyeSB3YXkgYnV0IG9ubHkgYnkgdGhlIG1ldGhvZCBvZiBleGNoYW5naW5nIGdvb2RzLiBJdAoJCQkJCWlzIHRoaXMgYXJ0IG9mIHdlYWx0aC1nZXR0aW5nIHRoYXQgaXMgdGhvdWdodCB0byBiZSBjb25jZXJuZWQgd2l0aCBtb25leSwgZm9yCgkJCQkJbW9uZXkgaXMgdGhlIGZpcnN0IHByaW5jaXBsZSBhbmQgbGltaXQgb2YgY29tbWVyY2UuIEFuZCB0aGVzZSByaWNoZXMsIHRoYXQgYXJlCgkJCQkJZGVyaXZlZCBmcm9tIHRoaXMgYXJ0IG9mIHdlYWx0aC1nZXR0aW5nLCBhcmUgdHJ1bHkgdW5saW1pdGVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gYSB0cmFkZXIgY2Fubm90IGdldCB0b28gbXVjaCBvZiBoaXMgZ29vZHMsIGFueSBtb3JlIHRoYW4KCQkJCQkJYSBkb2N0b3IgY2FuIG1ha2UgaGlzIHBhdGllbnQgdG9vIGhlYWx0aHkuPC9ub3RlPjsgZm9yIGp1c3QgYXMgdGhlIGFydCBvZgoJCQkJCW1lZGljaW5lIGlzIHdpdGhvdXQgbGltaXQgaW4gcmVzcGVjdCBvZiBoZWFsdGgsIGFuZCBlYWNoIG9mIHRoZSBhcnRzIGlzIHdpdGhvdXQKCQkJCQlsaW1pdCBpbiByZXNwZWN0IG9mIGl0cyBlbmQg77yIZm9yIHRoZXkgZGVzaXJlIHRvIHByb2R1Y2UgdGhhdCBpbiB0aGUKCQkJCQloaWdoZXN0IGRlZ3JlZSBwb3NzaWJsZe+8iSwgd2hlcmVhcyB0aGV5IGFyZSBub3Qgd2l0aG91dCBsaW1pdCBhcyByZWdhcmRzCgkJCQkJdGhlIG1lYW5zIHRvIHRoZWlyIGVuZCDvvIhmb3Igd2l0aCBhbGwgb2YgdGhlbSB0aGUgZW5kIGlzIGEgbGltaXQgdG8gdGhlCgkJCQkJbWVhbnPvvIksIHNvIGFsc28gdGhpcyB3ZWFsdGgtZ2V0dGluZyBoYXMgbm8gbGltaXQgaW4gcmVzcGVjdCBvZiBpdHMgZW5kLAoJCQkJCWFuZCBpdHMgZW5kIGlzIHJpY2hlcyBhbmQgdGhlIGFjcXVpc2l0aW9uIG9mIGdvb2RzIGluIHRoZSBjb21tZXJjaWFsIHNlbnNlLgoJCQkJCQk8L3RyYW5zbGF0aW9uPg=="
translation['1.1258a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGUgaG91c2Vob2xkIGJyYW5jaCBvZgoJCQkJCXdlYWx0aC1nZXR0aW5nIGhhcyBhIGxpbWl0LCBzaW5jZSB0aGUgYWNxdWlzaXRpb24gb2YgY29tbWVyY2lhbCByaWNoZXMgaXMgbm90CgkJCQkJdGhlIGZ1bmN0aW9uIG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50LiBIZW5jZSBmcm9tIHRoaXMgcG9pbnQgb2YgdmlldyBpdCBhcHBlYXJzCgkJCQkJbmVjZXNzYXJ5IHRoYXQgdGhlcmUgc2hvdWxkIGJlIGEgbGltaXQgdG8gYWxsIHJpY2hlcywgeWV0IGluIGFjdHVhbCBmYWN0IHdlCgkJCQkJb2JzZXJ2ZSB0aGF0IHRoZSBvcHBvc2l0ZSB0YWtlcyBwbGFjZTsgZm9yIGFsbCBtZW4gZW5nYWdlZCBpbiB3ZWFsdGgtZ2V0dGluZyB0cnkKCQkJCQl0byBpbmNyZWFzZSB0aGVpciBtb25leSB0byBhbiB1bmxpbWl0ZWQgYW1vdW50LiBUaGUgcmVhc29uIG9mIHRoaXMgaXMgdGhlIGNsb3NlCgkJCQkJYWZmaW5pdHkgb2YgdGhlIHR3byBicmFuY2hlcyBvZiB0aGUgYXJ0IG9mIGJ1c2luZXNzLiBUaGVpciBjb21tb24gZ3JvdW5kIGlzIHRoYXQKCQkJCQl0aGUgdGhpbmcgdGhhdCBlYWNoIG1ha2VzIHVzZSBvZiBpcyB0aGUgc2FtZTsgdGhleSB1c2UgdGhlIHNhbWUgcHJvcGVydHksCgkJCQkJYWx0aG91Z2ggbm90IGluIHRoZSBzYW1lIHdheeKAlHRoZSBvbmUgaGFzIGFub3RoZXIgZW5kIGluIHZpZXcsIHRoZSBhaW0KCQkJCQlvZiB0aGUgb3RoZXIgaXMgdGhlIGluY3JlYXNlIG9mIHRoZSBwcm9wZXJ0eS4gQ29uc2VxdWVudGx5IHNvbWUgcGVvcGxlIHN1cHBvc2UKCQkJCQl0aGF0IGl0IGlzIHRoZSBmdW5jdGlvbiBvZiBob3VzZWhvbGQgbWFuYWdlbWVudCB0byBpbmNyZWFzZSBwcm9wZXJ0eSwgYW5kIHRoZXkKCQkJCQlhcmUgY29udGludWFsbHkgdW5kZXIgdGhlIGlkZWEgdGhhdCBpdCBpcyB0aGVpciBkdXR5IHRvIGJlIGVpdGhlciBzYWZlZ3VhcmRpbmcKCQkJCQl0aGVpciBzdWJzdGFuY2UgaW4gbW9uZXkgb3IgaW5jcmVhc2luZyBpdCB0byBhbiB1bmxpbWl0ZWQgYW1vdW50LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMTkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgY2F1c2Ugb2YgdGhpcyBzdGF0ZSBvZiBtaW5kIGlzIHRoYXQKCQkJCQl0aGVpciBpbnRlcmVzdHMgYXJlIHNldCB1cG9uIGxpZmUgYnV0IG5vdCB1cG9uIHRoZSBnb29kIGxpZmU7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjU4YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1258a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFzCgkJCQkJdGhlcmVmb3JlIHRoZSBkZXNpcmUgZm9yIGxpZmUgaXMgdW5saW1pdGVkLCB0aGV5IGFsc28gZGVzaXJlIHdpdGhvdXQgbGltaXQgdGhlCgkJCQkJbWVhbnMgcHJvZHVjdGl2ZSBvZiBsaWZlLiBBbmQgZXZlbiB0aG9zZSB3aG8gZml4IHRoZWlyIGFpbSBvbiB0aGUgZ29vZCBsaWZlIHNlZWsKCQkJCQl0aGUgZ29vZCBsaWZlIGFzIG1lYXN1cmVkIGJ5IGJvZGlseSBlbmpveW1lbnRzLCBzbyB0aGF0IGluYXNtdWNoIGFzIHRoaXMgYWxzbwoJCQkJCXNlZW1zIHRvIGJlIGZvdW5kIGluIHRoZSBwb3NzZXNzaW9uIG9mIHByb3BlcnR5LCBhbGwgdGhlaXIgZW5lcmdpZXMgYXJlIG9jY3VwaWVkCgkJCQkJaW4gdGhlIGJ1c2luZXNzIG9mIGdldHRpbmcgd2VhbHRoOyBhbmQgb3dpbmcgdG8gdGhpcyB0aGUgc2Vjb25kIGtpbmQgb2YgdGhlIGFydAoJCQkJCW9mIHdlYWx0aC1nZXR0aW5nIGhhcyBhcmlzZW4uIEZvciBhcyB0aGVpciBlbmpveW1lbnQgaXMgaW4gZXhjZXNzLCB0aGV5IHRyeSB0bwoJCQkJCWRpc2NvdmVyIHRoZSBhcnQgdGhhdCBpcyBwcm9kdWN0aXZlIG9mIGVuam95YWJsZSBleGNlc3M7IGFuZCBpZiB0aGV5IGNhbm5vdAoJCQkJCXByb2N1cmUgaXQgYnkgdGhlIGFydCBvZiB3ZWFsdGgtZ2V0dGluZywgdGhleSB0cnkgdG8gZG8gc28gYnkgc29tZSBvdGhlciBtZWFucywKCQkJCQllbXBsb3lpbmcgZWFjaCBvZiB0aGUgZmFjdWx0aWVzIGluIGFuIHVubmF0dXJhbCB3YXkuIDwvdHJhbnNsYXRpb24+"
translation['1.1258a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4yMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciBpdCBpcyBub3QgdGhlIGZ1bmN0aW9uIG9mIGNvdXJhZ2UgdG8gcHJvZHVjZSB3ZWFsdGgsCgkJCQkJYnV0IHRvIGluc3BpcmUgZGFyaW5nOyBub3IgaXMgaXQgdGhlIGZ1bmN0aW9uIG9mIHRoZSBtaWxpdGFyeSBhcnQgbm9yIG9mIHRoZQoJCQkJCW1lZGljYWwgYXJ0LCBidXQgaXQgYmVsb25ncyB0byB0aGUgZm9ybWVyIHRvIGJyaW5nIHZpY3RvcnkgYW5kIHRvIHRoZSBsYXR0ZXIgdG8KCQkJCQljYXVzZSBoZWFsdGguIFlldCB0aGVzZSBwZW9wbGUgbWFrZSBhbGwgdGhlc2UgZmFjdWx0aWVzIG1lYW5zIGZvciB0aGUgYnVzaW5lc3MKCQkJCQlvZiBwcm92aWRpbmcgd2VhbHRoLCBpbiB0aGUgYmVsaWVmIHRoYXQgd2VhbHRoIGlzIHRoZSBlbmQgYW5kIHRoYXQgZXZlcnl0aGluZwoJCQkJCW11c3QgYmUgZGlyZWN0ZWQgdG8gdGhlIGVuZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2UgaGF2ZSB0aGVyZWZvcmUKCQkJCQlkaXNjdXNzZWQgYm90aCB0aGUgdW5uZWNlc3NhcnkgYnJhbmNoIG9mIHdlYWx0aC1nZXR0aW5nLCBkZWZpbmluZyBpdCBhbmQgYWxzbwoJCQkJCWV4cGxhaW5pbmcgdGhlIGNhdXNlIHdoeSB3ZSByZXF1aXJlIGl0LCBhbmQgdGhlIG5lY2Vzc2FyeSBicmFuY2gsIHNob3dpbmcgdGhhdAoJCQkJCXRoaXMgYnJhbmNoIHdoaWNoIGhhcyB0byBkbyB3aXRoIGZvb2QgaXMgZGlmZmVyZW50IGZyb20gdGhlIHVubmVjZXNzYXJ5IGJyYW5jaAoJCQkJCWFuZCBpcyBieSBuYXR1cmUgYSBwYXJ0IG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50LCBub3QgYmVpbmcgbGlrZSB0aGF0IGJyYW5jaAoJCQkJCXVubGltaXRlZCBidXQgaGF2aW5nIGEgbGltaXQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4yMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZAoJCQkJCXdlIGNhbiBhbHNvIHNlZSB0aGUgYW5zd2VyIHRvIHRoZSBxdWVzdGlvbiByYWlzZWQgYXQgdGhlIGJlZ2lubmluZyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDMuMS48L25vdGU+IHdoZXRoZXI8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIGFydCBvZiB3ZWFsdGgtZ2V0dGluZyBiZWxvbmdzIHRvIHRoZQoJCQkJCWhvdXNlaG9sZGVyIGFuZCB0aGUgc3RhdGVzbWFuLCBvciB3aGV0aGVyIG9uIHRoZSBjb250cmFyeSBzdXBwbGllcyBvdWdodCB0byBiZQoJCQkJCXByb3ZpZGVkIGFscmVhZHkg77yIZm9yIGp1c3QgYXMgc3RhdGVzbWFuc2hpcCBkb2VzIG5vdCBjcmVhdGUgaHVtYW4KCQkJCQliZWluZ3MgYnV0IGhhdmluZyByZWNlaXZlZCB0aGVtIGZyb20gbmF0dXJlIG1ha2VzIHVzZSBvZiB0aGVtLCBzbyBhbHNvIGl0IGlzCgkJCQkJbmVjZXNzYXJ5IGZvciBuYXR1cmUgdG8gYmVzdG93IGZvb2QgYnkgYmVzdG93aW5nIGxhbmQgb3Igc2VhIG9yIHNvbWV0aGluZwoJCQkJCWVsc2XvvIksIGFuZCB0aGUgdGFzayBvZiB0aGUgaG91c2Vob2xkZXIgaXMsIHN0YXJ0aW5nIHdpdGggdGhlc2Ugc3VwcGxpZXMKCQkJCQlnaXZlbiwgdG8gZGlzcG9zZSBvZiB0aGVtIGluIHRoZSBwcm9wZXIgd2F5LiBGb3IgaXQgZG9lcyBub3QgYmVsb25nIHRvIHRoZSBhcnQKCQkJCQlvZiB3ZWF2aW5nIHRvIG1ha2UgZmxlZWNlcywgYnV0IHRvIHVzZSB0aGVtLCBhbmQgYWxzbyB0byBrbm93IHdoYXQgc29ydCBvZgoJCQkJCWZsZWVjZSBpcyBnb29kIGFuZCBzdWl0YWJsZSBvciBiYWQgYW5kIHVuc3VpdGFibGUuIDwvdHJhbnNsYXRpb24+"
translation['1.1258b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4yMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkluIGZhY3QgdGhlIHF1ZXN0aW9uIG1pZ2h0IGJlIHJhaXNlZCwgd2h5IHRoZSBnZXR0aW5nIG9mCgkJCQkJd2VhbHRoIGlzIGEgcGFydCBvZiB0aGUgaG91c2Vob2xkIGFydCB3aGVyZWFzIHRoZSBhcnQgb2YgbWVkaWNpbmUgaXMgbm90IGEgcGFydAoJCQkJCW9mIGl0LCBhbHRob3VnaCB0aGUgbWVtYmVycyBvZiB0aGUgaG91c2Vob2xkIG91Z2h0IHRvIGJlIGhlYWx0aHksIGp1c3QgYXMgdGhleQoJCQkJCW11c3QgYmUgYWxpdmUgb3IgZnVsZmlsIGFueSBvZiB0aGUgb3RoZXIgZXNzZW50aWFsIGNvbmRpdGlvbnMuIEJ1dCBpbmFzbXVjaCBhcwoJCQkJCWFsdGhvdWdoIGluIGEgd2F5IGl0IGRvZXMgYmVsb25nIHRvIHRoZSBob3VzZWhvbGRlciBhbmQgdGhlIHJ1bGVyIHRvIHNlZSBldmVuIHRvCgkJCQkJaGVhbHRoLCB5ZXQgaW4gYSB3YXkgaXQgZG9lcyBub3QgYmVsb25nIHRvIHRoZW0gYnV0IHRvIHRoZSBwaHlzaWNpYW4sIHNvIGFsc28KCQkJCQl3aXRoIHJlZ2FyZCB0byB3ZWFsdGgsIGFsdGhvdWdoIGluIGEgd2F5IGl0IGlzIHRoZSBhZmZhaXIgb2YgdGhlIGhvdXNlLWhvbGRlciwKCQkJCQlpbiBhIHdheSBpdCBpcyBub3QsIGJ1dCBpcyBhIG1hdHRlciBmb3IgdGhlIHN1YnNpZGlhcnkgYXJ0LiBCdXQgYmVzdCBvZiBhbGwsIGFzCgkJCQkJaGFzIGJlZW4gc2FpZCBiZWZvcmUsIHRoaXMgcHJvdmlzaW9uIG91Z2h0IHRvIGJlIG1hZGUgaW4gYWR2YW5jZSBieSBuYXR1cmUuIEZvcgoJCQkJCWl0IGlzIHRoZSB3b3JrIG9mIG5hdHVyZSB0byBzdXBwbHkgbm91cmlzaG1lbnQgZm9yIGhlciBvZmZzcHJpbmcsIHNpbmNlIGV2ZXJ5CgkJCQkJY3JlYXR1cmUgaGFzIGZvciBub3VyaXNobWVudCB0aGUgcmVzaWR1ZSBvZiB0aGUgc3Vic3RhbmNlIGZyb20gd2hpY2ggaXQKCQkJCQkJc3ByaW5ncy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBhbmltYWxzIGFyZSBtYWRlIG9mIGVhcnRoCgkJCQkJCWFuZCB3YXRlciBhbmQgbGl2ZSBvbiB0aGUgcHJvZHVjdHMgb2YgZWFydGggYW5kIHdhdGVyLjwvbm90ZT4gSGVuY2UgdGhlCgkJCQkJYnVzaW5lc3Mgb2YgZHJhd2luZyBwcm92aXNpb24gZnJvbSB0aGUgZnJ1aXRzIG9mIHRoZSBzb2lsIGFuZCBmcm9tIGFuaW1hbHMgaXMKCQkJCQluYXR1cmFsIHRvIGFsbC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjIzIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0LCBhcyB3ZSBzYWlkLAoJCQkJCXRoaXMgYXJ0IGlzIHR3b2ZvbGQsIG9uZSBicmFuY2ggYmVpbmcgb2YgdGhlIG5hdHVyZSBvZiB0cmFkZSB3aGlsZSB0aGUgb3RoZXIKCQkJCQliZWxvbmdzIHRvIHRoZSBob3VzZWhvbGQgYXJ0OyBhbmQgdGhlIGxhdHRlciBicmFuY2ggaXMgbmVjZXNzYXJ5IGFuZCBpbiBnb29kCgkJCQkJZXN0ZWVtLCBidXQgdGhlIGJyYW5jaCBjb25uZWN0ZWQgd2l0aCBleGNoYW5nZSBpcyBqdXN0bHkgZGlzY3JlZGl0ZWQgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNThiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1258b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPu+8iGZvciBpdCBpcyBub3QgaW4gYWNjb3JkYW5jZSB3aXRoIG5hdHVyZSwgYnV0IGludm9sdmVzIG1lbidzIHRha2luZwoJCQkJCXRoaW5ncyBmcm9tIG9uZSBhbm90aGVy77yJLiBBcyB0aGlzIGlzIHNvLCB1c3VyeSBpcyBtb3N0IHJlYXNvbmFibHkKCQkJCQloYXRlZCwgYmVjYXVzZSBpdHMgZ2FpbiBjb21lcyBmcm9tIG1vbmV5IGl0c2VsZiBhbmQgbm90IGZyb20gdGhhdCBmb3IgdGhlIHNha2UKCQkJCQlvZiB3aGljaCBtb25leSB3YXMgaW52ZW50ZWQuIEZvciBtb25leSB3YXMgYnJvdWdodCBpbnRvIGV4aXN0ZW5jZSBmb3IgdGhlCgkJCQkJcHVycG9zZSBvZiBleGNoYW5nZSwgYnV0IGludGVyZXN0IGluY3JlYXNlcyB0aGUgYW1vdW50IG9mIHRoZSBtb25leSBpdHNlbGYKCQkJCQnvvIhhbmQgdGhpcyBpcyB0aGUgYWN0dWFsIG9yaWdpbiBvZiB0aGUgR3JlZWsgd29yZDogb2Zmc3ByaW5nIHJlc2VtYmxlcwoJCQkJCXBhcmVudCwgYW5kIGludGVyZXN0IGlzIG1vbmV5IGJvcm4gb2YgbW9uZXnvvIk7IGNvbnNlcXVlbnRseSB0aGlzIGZvcm0gb2YKCQkJCQl0aGUgYnVzaW5lc3Mgb2YgZ2V0dGluZyB3ZWFsdGggaXMgb2YgYWxsIGZvcm1zIHRoZSBtb3N0IGNvbnRyYXJ5IHRvIG5hdHVyZS4KCQkJCQkJPC90cmFuc2xhdGlvbj4="
translation['1.1258b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHNpbmNlIHdlIGhhdmUgYWRlcXVhdGVseQoJCQkJCWRlZmluZWQgdGhlIHNjaWVudGlmaWMgc2lkZSBvZiB0aGUgc3ViamVjdCwgd2Ugb3VnaHQgdG8gZGlzY3VzcyBpdCBmcm9tIHRoZQoJCQkJCXBvaW50IG9mIHZpZXcgb2YgcHJhY3RpY2U7IGFsdGhvdWdoLCB3aGVyZWFzIHRoZSB0aGVvcnkgb2Ygc3VjaCBtYXR0ZXJzIGlzIGEKCQkJCQlsaWJlcmFsIHN0dWR5LCB0aGUgcHJhY3RpY2FsIHB1cnN1aXQgb2YgdGhlbSBpcyBuYXJyb3dpbmcuIFRoZSBwcmFjdGljYWxseQoJCQkJCXVzZWZ1bCBicmFuY2hlcyBvZiB0aGUgYXJ0IG9mIHdlYWx0aC1nZXR0aW5nIGFyZSBmaXJzdCwgYW4gZXhwZXJ0IGtub3dsZWRnZSBvZgoJCQkJCXN0b2NrLCB3aGF0IGJyZWVkcyBhcmUgbW9zdCBwcm9maXRhYmxlIGFuZCBpbiB3aGF0IGxvY2FsaXRpZXMgYW5kIHVuZGVyIHdoYXQKCQkJCQljb25kaXRpb25zLCBmb3IgaW5zdGFuY2Ugd2hhdCBwYXJ0aWN1bGFyIHN0b2NrIGluIGhvcnNlcyBvciBjYXR0bGUgb3Igc2hlZXAsIGFuZAoJCQkJCXNpbWlsYXJseSBvZiB0aGUgb3RoZXIgYW5pbWFscyBhbHNvIO+8iGZvciB0aGUgZmFybWVyIG11c3QgYmUgYW4gZXhwZXJ0CgkJCQkJYXMgdG8gd2hpY2ggb2YgdGhlc2UgYW5pbWFscyBhcmUgbW9zdCBwcm9maXRhYmxlIGNvbXBhcmVkIHdpdGggb25lIGFub3RoZXIsIGFuZAoJCQkJCWFsc28gYXMgdG8gd2hhdCBicmVlZHMgYXJlIG1vc3QgcHJvZml0YWJsZSBvbiB3aGF0IHNvcnRzIG9mIGxhbmQsIHNpbmNlCgkJCQkJZGlmZmVyZW50IGJyZWVkcyBmbG91cmlzaCBpbiBkaWZmZXJlbnQgcGxhY2Vz77yJOyBzZWNvbmRseSwgdGhlIHN1YmplY3QKCQkJCQlvZiBhZ3JpY3VsdHVyZSwgYW5kIHRoaXMgYWdhaW4gaXMgZGl2aWRlZCBpbnRvIGNvcm4tZ3Jvd2luZyBhbmQgZnJ1aXQtZmFybWluZzsKCQkJCQlhbHNvIGJlZS1rZWVwaW5nLCBhbmQgdGhlIGJyZWVkaW5nIG9mIHRoZSBvdGhlciBjcmVhdHVyZXMgZmlubmVkIGFuZAoJCQkJCQlmZWF0aGVyZWQ8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+d2hpY2ggY2FuIGJlIHVzZWQgdG8KCQkJCQlmdXJuaXNoIHN1cHBsaWVzLiA8L3RyYW5zbGF0aW9uPg=="
translation['1.1259a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlc2UgdGhlbiBhcmUgdGhlCgkJCQkJYnJhbmNoZXMgYW5kIHByaW1hcnkgcGFydHMgb2Ygd2VhbHRoLWdldHRpbmcgaW4gdGhlIG1vc3QgcHJvcGVyIHNlbnNlLiBPZiB0aGUKCQkJCQlraW5kIHRoYXQgZGVhbHMgd2l0aCBleGNoYW5nZSwgdGhlIGxhcmdlc3QgYnJhbmNoIGlzIGNvbW1lcmNlIO+8iHdoaWNoCgkJCQkJaGFzIHRocmVlIGRlcGFydG1lbnRzLCBzaGlwLW93bmluZywgdHJhbnNwb3J0IGFuZCBtYXJrZXRpbmc6IHRoZXNlIGRlcGFydG1lbnRzCgkJCQkJZGlmZmVyIGZyb20gZWFjaCBvdGhlciBpbiB0aGUgZmFjdCB0aGF0IHNvbWUgYXJlIHNhZmVyIGFuZCBvdGhlcnMgY2FycnkgbGFyZ2VyCgkJCQkJcHJvZml0c++8iTsgdGhlIHNlY29uZCBicmFuY2ggaXMgbW9uZXktbGVuZGluZywgYW5kIHRoZSB0aGlyZCBsYWJvciBmb3IKCQkJCQloaXJlLCBvbmUgZGVwYXJ0bWVudCBvZiB3aGljaCBpcyB0aGF0IG9mIHRoZSBtZWNoYW5pYzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OsuG9sc69zrHPhc+Dzr/PgjwvZm9yZWlnbj7vvIhzYWlkIHRvIGJlCgkJCQkJCWZyb20gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrLOseG/ps69zr/PgjwvZm9yZWlnbj7igJhmdXJuYWNlLOKAmQoJCQkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrHhvZTPiTwvZm9yZWlnbj7igJh0bwoJCQkJCQlkcnnigJnvvIksIOKAmGFydGlzYW7igJkg77yIcmFuZ2VkCgkJCQkJCXdpdGggZmFybWVycywgdHJhZGVycywgYW5kIGxhYm9yZXJzLCBhcyBmb3JtaW5nIHRoZSBjb21tb24gcGVvcGxlIDEzMjFhCgkJCQkJCTbvvIk7IGl0IGFjcXVpcmVzIHRoZSBzZW5zZXMgb2Yg4oCYY3JhbXBlZCBpbiBib2R54oCZCgkJCQkJCe+8iDEzNDFhIDfvvIkgYW5kIOKAmHZ1bGdhciBpbiB0YXN0ZeKAmQoJCQkJCQnvvIgxMzM3YiA477yJLjwvbm90ZT4gYXJ0cyBhbmQgdGhlIG90aGVyIHRoYXQgb2YgdW5za2lsbGVkCgkJCQkJbGFib3JlcnMgd2hvIGFyZSB1c2VmdWwgb25seSBmb3IgYm9kaWx5IHNlcnZpY2UuIEFuZCB0aGVyZSBpcyBhIHRoaXJkIGZvcm0gb2YKCQkJCQl3ZWFsdGgtZ2V0dGluZyB0aGF0IGxpZXMgYmV0d2VlbiB0aGUgbGF0dGVyIGFuZCB0aGUgb25lIHBsYWNlZCBmaXJzdCwgc2luY2UgaXQKCQkJCQlwb3NzZXNzZXMgbWVkaWF0ZSBhbiBlbGVtZW50IGJvdGggb2YgbmF0dXJhbCB3ZWFsdGgtZ2V0dGluZyBhbmQgb2YgdGhlIHNvcnQgdGhhdAoJCQkJCWVtcGxveXMgZXhjaGFuZ2U7IGl0IGRlYWxzIHdpdGggYWxsIHRoZSBjb21tb2RpdGllcyB0aGF0IGFyZSBvYnRhaW5lZCBmcm9tIHRoZQoJCQkJCWVhcnRoIGFuZCBmcm9tIHRob3NlIGZydWl0bGVzcyBidXQgdXNlZnVsIHRoaW5ncyB0aGF0IGNvbWUgZnJvbSB0aGUKCQkJCQllYXJ0aOKAlGV4YW1wbGVzIGFyZSB0aGUgZmVsbGluZyBvZiB0aW1iZXI8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OsuG9sc69zrHPhc+Dzr/PgjwvZm9yZWlnbj7vvIhzYWlkIHRvIGJlCgkJCQkJCWZyb20gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrLOseG/ps69zr/PgjwvZm9yZWlnbj7igJhmdXJuYWNlLOKAmQoJCQkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrHhvZTPiTwvZm9yZWlnbj7igJh0bwoJCQkJCQlkcnnigJnvvIksIOKAmGFydGlzYW7igJkg77yIcmFuZ2VkCgkJCQkJCXdpdGggZmFybWVycywgdHJhZGVycywgYW5kIGxhYm9yZXJzLCBhcyBmb3JtaW5nIHRoZSBjb21tb24gcGVvcGxlIDEzMjFhCgkJCQkJCTbvvIk7IGl0IGFjcXVpcmVzIHRoZSBzZW5zZXMgb2Yg4oCYY3JhbXBlZCBpbiBib2R54oCZCgkJCQkJCe+8iDEzNDFhIDfvvIkgYW5kIOKAmHZ1bGdhciBpbiB0YXN0ZeKAmQoJCQkJCQnvvIgxMzM3YiA477yJLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5hIHZlcnkgcHJvYmFibGUgdmFyaWFudCBnaXZlcyDigJh0aGUgcXVhcnJ5aW5nIG9mCgkJCQkJCXN0b25lLuKAmTwvbm90ZT4gYW5kIGFsbCBzb3J0cyBvZiBtaW5pbmc7IGFuZCBvZiBtaW5pbmcgaXRzZWxmIHRoZXJlCgkJCQkJYXJlIG1hbnkgY2xhc3Nlcywgc2luY2UgdGhlcmUgYXJlIG1hbnkgc29ydHMgb2YgbWV0YWxzIG9idGFpbmVkIG91dCBvZiB0aGUKCQkJCQllYXJ0aC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SW4gdGhlIG1zcy4gdGhpcyBzZW50ZW5jZSBmb2xsb3dzIHRoZSBuZXh0IG9uZS48L25vdGU+IG1vc3QKCQkJCQlzY2llbnRpZmljIG9mIHRoZXNlIGluZHVzdHJpZXMgYXJlIHRob3NlIHdoaWNoIGludm9sdmUgdGhlIHNtYWxsZXN0IGVsZW1lbnQgb2YKCQkJCQljaGFuY2UsIHRoZSBtb3N0IG1lY2hhbmljIHRob3NlIGluIHdoaWNoIHRoZSBvcGVyYXRpdmVzIHVuZGVyZ28gdGhlIGdyZWF0ZXN0CgkJCQkJYW1vdW50IG9mIGJvZGlseSBkZWdyYWRhdGlvbiwgdGhlIG1vc3Qgc2VydmlsZSB0aG9zZSBpbiB3aGljaCB0aGUgbW9zdCB1c2VzIGFyZQoJCQkJCW1hZGUgb2YgdGhlIGJvZHksIGFuZCB0aGUgbW9zdCBpZ25vYmxlIHRob3NlIGluIHdoaWNoIHRoZXJlIGlzIHRoZSBsZWFzdAoJCQkJCXJlcXVpcmVtZW50IG9mIHZpcnR1ZSBhcyBhbiBhY2Nlc3NvcnkuIEJ1dCB3aGlsZSB3ZSBoYXZlIGV2ZW4gbm93IGdpdmVuIGEKCQkJCQlnZW5lcmFsIGRlc2NyaXB0aW9uIG9mIHRoZXNlIHZhcmlvdXMgYnJhbmNoZXMsIHlldCBhIGRldGFpbGVkIGFuZCBwYXJ0aWN1bGFyCgkJCQkJYWNjb3VudCBvZiB0aGVtLCB0aG91Z2ggdXNlZnVsIGZvciB0aGUgcHJhY3RpY2Ugb2YgdGhlIGluZHVzdHJpZXMsIHdvdWxkIGJlCgkJCQkJaWxsaWJlcmFsIGFzIGEgc3ViamVjdCBvZiBwcm9sb25nZWQgc3R1ZHkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC40IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmUgYXJlIGJvb2tzIG9uIHRoZXNlIHN1YmplY3RzIGJ5IGNlcnRhaW4gYXV0aG9ycywgZm9yCgkJCQkJZXhhbXBsZSBDaGFyZXRpZGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk90aGVyd2lzZSB1bmtub3duLjwvbm90ZT4KCQkJCQlvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFBhcm9zIENpdHkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFBhcm9zIENpdHkiPlBhcm9zPC9wbGFjZU5hbWU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNTlhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1259a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBBcG9sbG9kb3J1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BbHNvIG1lbnRpb25lZCBieSBWYXJybyBhbmQKCQkJCQkJUGxpbnkuPC9ub3RlPiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTE3MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMTczIj5MZW1ub3M8L3BsYWNlTmFtZT4gaGF2ZQoJCQkJCXdyaXR0ZW4gYWJvdXQgYm90aCBhZ3JpY3VsdHVyZSBhbmQgZnJ1aXQtZmFybWluZywgYW5kIHNpbWlsYXJseSBvdGhlcnMgYWxzbyBvbgoJCQkJCW90aGVyIHRvcGljcywgc28gdGhlc2Ugc3ViamVjdHMgbWF5IGJlIHN0dWRpZWQgZnJvbSB0aGVzZSBhdXRob3JzIGJ5IGFueWJvZHkKCQkJCQljb25jZXJuZWQgdG8gZG8gc287IGJ1dCBpbiBhZGRpdGlvbiBhIGNvbGxlY3Rpb24gb3VnaHQgYWxzbyB0byBiZSBtYWRlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBhdXRob3Igb2YgdGhlIFNlY29uZCBCb29rIG9mIHRoZQoJCQkJCQlwc2V1ZG8tQXJpc3RvdGVsaWFuIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk9lY29ub21pY2E8L3RpdGxlPiBzZWVtcyB0byBoYXZlIHRha2VuIHRoZQoJCQkJCQloaW50Ljwvbm90ZT4gb2YgdGhlIHNjYXR0ZXJlZCBhY2NvdW50cyBvZiBtZXRob2RzIHRoYXQgaGF2ZSBicm91Z2h0IHN1Y2Nlc3MKCQkJCQlpbiBidXNpbmVzcyB0byBjZXJ0YWluIGluZGl2aWR1YWxzLiBBbGwgdGhlc2UgbWV0aG9kcyBhcmUgc2VydmljZWFibGUgZm9yIHRob3NlCgkJCQkJd2hvIHZhbHVlIHdlYWx0aC1nZXR0aW5nLCA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5PZWNvbm9taWNhPC90aXRsZT4gc2VlbXMgdG8gaGF2ZSB0YWtlbiB0aGUKCQkJCQkJaGludC48L3RyYW5zbGF0aW9uPg=="
translation['1.1259a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC41IiB1bml0PSJMb2ViIGNoYXAiIC8+Zm9yCgkJCQkJZXhhbXBsZSB0aGUgcGxhbiBvZiBUaGFsZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIGZvdW5kZXIgb2YKCQkJCQkJR3JlZWsgcGhpbG9zb3BoeSBhbmQgbWF0aGVtYXRpY3MsIGFuZCBvbmUgb2YgdGhlIFNldmVuIFNhZ2VzLCA2dGgtNXRoIGNlbnQuCgkJCQkJCUIuQy48L25vdGU+IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWlsZXR1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTWlsZXR1cyI+TWlsZXR1czwvcGxhY2VOYW1lPiwgd2hpY2ggaXMgYQoJCQkJCWRldmljZSBmb3IgdGhlIGJ1c2luZXNzIG9mIGdldHRpbmcgd2VhbHRoLCBidXQgd2hpY2gsIHRob3VnaCBpdCBpcyBhdHRyaWJ1dGVkIHRvCgkJCQkJaGltIGJlY2F1c2Ugb2YgaGlzIHdpc2RvbSwgaXMgcmVhbGx5IG9mIHVuaXZlcnNhbCBhcHBsaWNhdGlvbi4gVGhhbGVzLCBzbyB0aGUKCQkJCQlzdG9yeSBnb2VzLCBiZWNhdXNlIG9mIGhpcyBwb3ZlcnR5IHdhcyB0YXVudGVkIHdpdGggdGhlIHVzZWxlc3NuZXNzIG9mCgkJCQkJcGhpbG9zb3BoeTsgYnV0IGZyb20gaGlzIGtub3dsZWRnZSBvZiBhc3Ryb25vbXkgaGUgaGFkIG9ic2VydmVkIHdoaWxlIGl0IHdhcwoJCQkJCXN0aWxsIHdpbnRlciB0aGF0IHRoZXJlIHdhcyBnb2luZyB0byBiZSBhIGxhcmdlIGNyb3Agb2Ygb2xpdmVzLCBzbyBoZSByYWlzZWQgYQoJCQkJCXNtYWxsIHN1bSBvZiBtb25leSBhbmQgcGFpZCByb3VuZCBkZXBvc2l0cyBmb3IgdGhlIHdob2xlIG9mIHRoZSBvbGl2ZS1wcmVzc2VzIGluCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWlsZXR1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTWlsZXR1cyI+TWlsZXR1czwvcGxhY2VOYW1lPiBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDaGlvcyBDaXR5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDaGlvcyBDaXR5Ij5DaGlvczwvcGxhY2VOYW1lPiwgd2hpY2ggaGUgaGlyZWQgYXQgYSBsb3cgcmVudCBhcyBub2JvZHkKCQkJCQl3YXMgcnVubmluZyBoaW0gdXA7IGFuZCB3aGVuIHRoZSBzZWFzb24gYXJyaXZlZCwgdGhlcmUgd2FzIGEgc3VkZGVuIGRlbWFuZCBmb3IgYQoJCQkJCW51bWJlciBvZiBwcmVzc2VzIGF0IHRoZSBzYW1lIHRpbWUsIGFuZCBieSBsZXR0aW5nIHRoZW0gb3V0IG9uIHdoYXQgdGVybXMgaGUKCQkJCQlsaWtlZCBoZSByZWFsaXplZCBhIGxhcmdlIHN1bSBvZiBtb25leSwgc28gcHJvdmluZyB0aGF0IGl0IGlzIGVhc3kgZm9yCgkJCQkJcGhpbG9zb3BoZXJzIHRvIGJlIHJpY2ggaWYgdGhleSBjaG9vc2UsIGJ1dCB0aGlzIGlzIG5vdCB3aGF0IHRoZXkgY2FyZSBhYm91dC4KCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGFsZXMgdGhlbiBpcyByZXBvcnRlZCB0byBoYXZlCgkJCQkJdGh1cyBkaXNwbGF5ZWQgaGlzIHdpc2RvbSwgYnV0IGFzPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmEKCQkJCQltYXR0ZXIgb2YgZmFjdCB0aGlzIGRldmljZSBvZiB0YWtpbmcgYW4gb3Bwb3J0dW5pdHkgdG8gc2VjdXJlIGEgbW9ub3BvbHkgaXMgYQoJCQkJCXVuaXZlcnNhbCBwcmluY2lwbGUgb2YgYnVzaW5lc3M7IGhlbmNlIGV2ZW4gc29tZSBzdGF0ZXMgaGF2ZSByZWNvdXJzZSB0byB0aGlzCgkJCQkJcGxhbiBhcyBhIG1ldGhvZCBvZiByYWlzaW5nIHJldmVudWUgd2hlbiBzaG9ydCBvZiBmdW5kczogdGhleSBpbnRyb2R1Y2UgYQoJCQkJCW1vbm9wb2x5IG9mIG1hcmtldGFibGUgZ29vZHMuIDwvdHJhbnNsYXRpb24+"
translation['1.1259b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC43IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmUKCQkJCQl3YXMgYSBtYW4gaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDMxMjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMzEyMiI+U2ljaWx5PC9wbGFjZU5hbWU+IHdobyB1c2VkIGEgc3VtIG9mCgkJCQkJbW9uZXkgZGVwb3NpdGVkIHdpdGggaGltIHRvIGJ1eSB1cCBhbGwgdGhlIGlyb24gZnJvbSB0aGUgaXJvbiBtaW5lcywgYW5kCgkJCQkJYWZ0ZXJ3YXJkcyB3aGVuIHRoZSBkZWFsZXJzIGNhbWUgZnJvbSB0aGUgdHJhZGluZy1jZW50ZXJzIGhlIHdhcyB0aGUgb25seQoJCQkJCXNlbGxlciwgdGhvdWdoIGhlIGRpZCBub3QgZ3JlYXRseSByYWlzZSB0aGUgcHJpY2UsIGJ1dCBhbGwgdGhlIHNhbWUgaGUgbWFkZSBhCgkJCQkJcHJvZml0IG9mIGEgaHVuZHJlZCB0YWxlbnRzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSB0YWxlbnQgd2FzCgkJCQkJCWFib3V0IDI0MCBwb3VuZHMuPC9ub3RlPiBvbiBoaXMgY2FwaXRhbCBvZiBmaWZ0eS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5XaGVuIERpb255c2l1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5EaW9ueXNpdXMgdGhlIGVsZGVyLCB0eXJhbnQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3lyYWN1c2UiPlN5cmFjdXNlPC9wbGFjZU5hbWU+CgkJCQkJCTxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii00MDUvLTM2NyIgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItNDA1IiB0bz0iLTM2NyI+NDA1PC9kYXRlUmFuZ2U+LTM2NyBCLkMuPC9ub3RlPiBjYW1lIHRvCgkJCQkJa25vdyBvZiBpdCBoZSBvcmRlcmVkIHRoZSBtYW4gdG8gdGFrZSBoaXMgbW9uZXkgd2l0aCBoaW0gYnV0IGNsZWFyIG91dCBvZgoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5cmFjdXNlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTeXJhY3VzZSI+U3lyYWN1c2U8L3BsYWNlTmFtZT4KCQkJCQkJPGRhdGVSYW5nZSBhdXRobmFtZT0iLTQwNS8tMzY3IiBjbGFzcz0idHJhbnNsYXRpb24iIGZyb209Ii00MDUiIHRvPSItMzY3Ij40MDU8L2RhdGVSYW5nZT4tMzY3IEIuQy48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5cmFjdXNlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTeXJhY3VzZSI+U3lyYWN1c2U8L3BsYWNlTmFtZT4gb24gdGhlIHNwb3QsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmNmLiBUaHVjeWRpZGVzIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6/4byxIM604oCZCgkJCQkJCQnOv+G9kM664b2zz4TOuSDhvJTOvM61zrnOvc6xzr0g4byAzrvOu+G9sCAuIC4gLjwvZm9yZWlnbj48L25vdGU+IHNpbmNlIGhlIHdhcyBpbnZlbnRpbmcKCQkJCQltZWFucyBvZiBwcm9maXQgZGV0cmltZW50YWwgdG8gdGhlIHR5cmFudCdzIG93biBhZmZhaXJzLiBZZXQgcmVhbGx5IHRoaXMgZGV2aWNlCgkJCQkJaXMgdGhlIHNhbWUgYXMgdGhlIGRpc2NvdmVyeSBvZiBUaGFsZXMsIGZvciBib3RoIG1lbiBhbGlrZSBjb250cml2ZWQgdG8gc2VjdXJlCgkJCQkJdGhlbXNlbHZlcyBhIG1vbm9wb2x5LiBBbiBhY3F1YWludGFuY2Ugd2l0aCB0aGVzZSBkZXZpY2VzIGlzIGFsc28gc2VydmljZWFibGUKCQkJCQlmb3Igc3RhdGVzbWVuLCBmb3IgbWFueSBzdGF0ZXMgbmVlZCBmaW5hbmNpYWwgYWlkIGFuZCBtb2RlcyBvZiByZXZlbnVlIGxpa2UKCQkJCQl0aG9zZSBkZXNjcmliZWQsIGp1c3QgYXMgYSBob3VzZWhvbGQgbWF5LCBidXQgaW4gZ3JlYXRlciBkZWdyZWU7IGhlbmNlIHNvbWUKCQkJCQlzdGF0ZXNtZW4gZXZlbiBkZXZvdGUgdGhlaXIgcG9saXRpY2FsIGFjdGl2aXR5IGV4Y2x1c2l2ZWx5IHRvIGZpbmFuY2UuCgkJCQkJCTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6/4byxIM604oCZCgkJCQkJCQnOv+G9kM664b2zz4TOuSDhvJTOvM61zrnOvc6xzr0g4byAzrvOu+G9sCAuIC4gLjwvZm9yZWlnbj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzaW5jZSwgYXMgd2Ugc2F3LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4yIGluaXQuPC9ub3RlPiB0aGUgc2NpZW5jZSBvZiBob3VzZWhvbGQKCQkJCQltYW5hZ2VtZW50IGhhcyB0aHJlZSBkaXZpc2lvbnMsIG9uZSB0aGUgcmVsYXRpb24gb2YgbWFzdGVyIHRvIHNsYXZlLCBvZiB3aGljaCB3ZQoJCQkJCWhhdmUgc3Bva2VuIGJlZm9yZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+MyBmaW4uLCA0Ljwvbm90ZT4gb25lIHRoZQoJCQkJCXBhdGVybmFsIHJlbGF0aW9uLCBhbmQgdGhlIHRoaXJkIHRoZSBjb25qdWdhbDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgY29uc3RydWN0aW9uIG9mIHRoZSBzZW50ZW5jZSBpcyBpbnRlcnJ1cHRlZCwgYW5kIG5ldmVyCgkJCQkJCWNvbXBsZXRlZC48L25vdGU+4oCUZm9yIGl0IGlzIGEgcGFydCBvZiB0aGUgaG91c2Vob2xkIHNjaWVuY2UgdG8KCQkJCQlydWxlIG92ZXIgd2lmZSBhbmQgY2hpbGRyZW4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz7vvIhvdmVyIGJvdGggYXMgb3ZlciBmcmVlbWVuLCB5ZXQgbm90IHdpdGggdGhlIHNhbWUgbW9kZSBvZiBnb3Zlcm5tZW50LAoJCQkJCWJ1dCBvdmVyIHRoZSB3aWZlIHRvIGV4ZXJjaXNlIHJlcHVibGljYW4gZ292ZXJubWVudCBhbmQgb3ZlciB0aGUgY2hpbGRyZW4KCQkJCQltb25hcmNoaWNhbO+8iTsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNTliIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1259b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGUgbWFsZSBpcyBieSBuYXR1cmUgYmV0dGVyIGZpdHRlZCB0byBjb21tYW5kCgkJCQkJdGhhbiB0aGUgZmVtYWxlIO+8iGV4Y2VwdCBpbiBzb21lIGNhc2VzIHdoZXJlIHRoZWlyIHVuaW9uIGhhcyBiZWVuIGZvcm1lZAoJCQkJCWNvbnRyYXJ5IHRvIG5hdHVyZe+8iSBhbmQgdGhlIG9sZGVyIGFuZCBmdWxseSBkZXZlbG9wZWQgcGVyc29uIHRoYW4gdGhlCgkJCQkJeW91bmdlciBhbmQgaW1tYXR1cmUuIEl0IGlzIHRydWUgdGhhdCBpbiBtb3N0IGNhc2VzIG9mIHJlcHVibGljYW4gZ292ZXJubWVudCB0aGUKCQkJCQlydWxlciBhbmQgdGhlIHJ1bGVkIGludGVyY2hhbmdlIGluIHR1cm4g77yIZm9yIHRoZXkgdGVuZCB0byBiZSBvbiBpbgoJCQkJCWVxdWFsIGxldmVsIGluIHRoZWlyIG5hdHVyZSBhbmQgdG8gaGF2ZSBubyBkaWZmZXJlbmNlIGF0IGFsbO+8iSwgYWx0aG91Z2gKCQkJCQluZXZlcnRoZWxlc3MgZHVyaW5nIHRoZSBwZXJpb2Qgd2hlbiBvbmUgaXMgcnVsZXIgYW5kIHRoZSBvdGhlciBydWxlZCB0aGV5IHNlZWsKCQkJCQl0byBoYXZlIGEgZGlzdGluY3Rpb24gYnkgbWVhbnMgb2YgaW5zaWduaWEgYW5kIHRpdGxlcyBhbmQgaG9ub3JzLCBqdXN0IGFzIEFtYXNpcwoJCQkJCW1hZGUgaGlzIHNwZWVjaCBhYm91dCB0aGUgZm9vdC1iYXRoPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhkdC4gMS4xNzIiIHZhbGlkPSJ5ZXMiPkhkdC4gMS4xNzI8L2JpYmw+LiBBbWFzaXMga2luZyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjgzMyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2ODMzIj5FZ3lwdDwvcGxhY2VOYW1lPiB3YXMgZGVzcGlzZWQgYnkgaGlzIHN1YmplY3RzIGZvciBoaXMKCQkJCQkJbG93IGJpcnRoLCBzbyBoZSBoYWQgYSBzdGF0dWUgbWFkZSBvdXQgb2YgYSBnb2xkIGZvb3QtYmF0aCBhbmQgc2V0IGl0IHVwIGZvcgoJCQkJCQl0aGVtIHRvIHdvcnNoaXAsIGFmdGVyd2FyZHMgZXhwbGFpbmluZyB0byB0aGVtIGl0cyBsb3dseSBvcmlnaW4uPC9ub3RlPjsgYnV0CgkJCQkJdGhlIG1hbGUgc3RhbmRzIGluIHRoaXMgcmVsYXRpb25zaGlwIHRvIHRoZSBmZW1hbGUgY29udGludW91c2x5LiBUaGUgcnVsZSBvZiB0aGUKCQkJCQlmYXRoZXIgb3ZlciB0aGUgY2hpbGRyZW4gb24gdGhlIG90aGVyIGhhbmQgaXMgdGhhdCBvZiBhIGtpbmc7IGZvciB0aGUgbWFsZQoJCQkJCXBhcmVudCBpcyB0aGUgcnVsZXIgaW4gdmlydHVlIGJvdGggb2YgYWZmZWN0aW9uIGFuZCBvZiBzZW5pb3JpdHksIHdoaWNoIGlzCgkJCQkJY2hhcmFjdGVyaXN0aWMgb2Ygcm95YWwgZ292ZXJubWVudCDvvIhhbmQgdGhlcmVmb3JlIEhvbWVyPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGR0LiAxLjE3MiIgdmFsaWQ9InllcyI+SGR0LiAxLjE3MjwvYmlibD4uIEFtYXNpcyBraW5nIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2ODMzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY4MzMiPkVneXB0PC9wbGFjZU5hbWU+IHdhcyBkZXNwaXNlZCBieSBoaXMgc3ViamVjdHMgZm9yIGhpcwoJCQkJCQlsb3cgYmlydGgsIHNvIGhlIGhhZCBhIHN0YXR1ZSBtYWRlIG91dCBvZiBhIGdvbGQgZm9vdC1iYXRoIGFuZCBzZXQgaXQgdXAgZm9yCgkJCQkJCXRoZW0gdG8gd29yc2hpcCwgYWZ0ZXJ3YXJkcyBleHBsYWluaW5nIHRvIHRoZW0gaXRzIGxvd2x5IG9yaWdpbi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gMS41NDQiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuCgkJCQkJCTEuNTQ0PC9iaWJsPi48L25vdGU+IGZpbmVseSBkZXNpZ25hdGVkIFpldXMgYnkgdGhlIHdvcmRzIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDEuNTQ0IiB2YWxpZD0ieWVzIj5Ib20uIElsLgoJCQkJCQkxLjU0NDwvYmlibD4uPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPmZhdGhlciBvZiBtZW4gYW5kIGdvZHMsPC9sPgoJCQkJCTwvcXVvdGU+IGFzIHRoZSBraW5nIG9mIHRoZW0gYWxs77yJLiBGb3IgdGhvdWdoIGluIG5hdHVyZSB0aGUga2luZyBtdXN0CgkJCQkJYmUgc3VwZXJpb3IsIGluIHJhY2UgaGUgc2hvdWxkIGJlIHRoZSBzYW1lIGFzIGhpcyBzdWJqZWN0cywgYW5kIHRoaXMgaXMgdGhlCgkJCQkJcG9zaXRpb24gb2YgdGhlIGVsZGVyIGluIHJlbGF0aW9uIHRvIHRoZSB5b3VuZ2VyIGFuZCBvZiB0aGUgZmF0aGVyIGluIHJlbGF0aW9uCgkJCQkJdG8gdGhlIGNoaWxkLiA8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPmZhdGhlciBvZiBtZW4gYW5kIGdvZHMsPC9sPgoJCQkJCTwvdHJhbnNsYXRpb24+"
translation['1.1259b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgY2xlYXIgdGhlbiB0aGF0CgkJCQkJaG91c2Vob2xkIG1hbmFnZW1lbnQgdGFrZXMgbW9yZSBpbnRlcmVzdCBpbiB0aGUgaHVtYW4gbWVtYmVycyBvZiB0aGUgaG91c2Vob2xkCgkJCQkJdGhhbiBpbiBpdHMgaW5hbmltYXRlIHByb3BlcnR5LCBhbmQ8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+aW4KCQkJCQl0aGUgZXhjZWxsZW5jZSBvZiB0aGVzZSB0aGFuIGluIHRoYXQgb2YgaXRzIHByb3BlcnR5LCB3aGljaCB3ZSBzdHlsZSByaWNoZXMsIGFuZAoJCQkJCW1vcmUgaW4gdGhhdCBvZiBpdHMgZnJlZSBtZW1iZXJzIHRoYW4gaW4gdGhhdCBvZiBzbGF2ZXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZpcnN0IG9mIGFsbCB0aGVuIGFzIHRvIHNsYXZlcyB0aGUgZGlmZmljdWx0eSBtaWdodCBiZSByYWlzZWQsCgkJCQkJZG9lcyBhIHNsYXZlIHBvc3Nlc3MgYW55IG90aGVyIGV4Y2VsbGVuY2UsIGJlc2lkZXMgaGlzIG1lcml0cyBhcyBhIHRvb2wgYW5kIGEKCQkJCQlzZXJ2YW50LCBtb3JlIHZhbHVhYmxlIHRoYW4gdGhlc2UsIGZvciBpbnN0YW5jZSB0ZW1wZXJhbmNlLCBoYXZlIHRoZSBjb3VyYWdlLAoJCQkJCWp1c3RpY2UgYW5kIGFueSBvZiB0aGUgb3RoZXIgbW9yYWwgdmlydHVlcywgb3IgaGFzIGhlIG5vIGV4Y2VsbGVuY2UgYmVzaWRlIGhpcwoJCQkJCWJvZGlseSBzZXJ2aWNlPyBGb3IgZWl0aGVyIHdheSB0aGVyZSBpcyBkaWZmaWN1bHR5OyBpZiBzbGF2ZXMgZG8gcG9zc2VzcyBtb3JhbAoJCQkJCXZpcnR1ZSwgd2hlcmVpbiB3aWxsIHRoZXkgZGlmZmVyIGZyb20gZnJlZW1lbj8gb3IgaWYgdGhleSBkbyBub3QsIHRoaXMgaXMKCQkJCQlzdHJhbmdlLCBhcyB0aGV5IGFyZSBodW1hbiBiZWluZ3MgYW5kIHBhcnRpY2lwYXRlIGluIHJlYXNvbi4gPC90cmFuc2xhdGlvbj4="
translation['1.1260a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIG5lYXJseSB0aGUgc2FtZSBpcyB0aGUgcXVlc3Rpb24gYWxzbyByYWlzZWQKCQkJCQlhYm91dCB0aGUgd29tYW4gYW5kIHRoZSBjaGlsZDogaGF2ZSB0aGV5IHRvbyB2aXJ0dWVzLCBhbmQgb3VnaHQgYSB3b21hbiB0byBiZQoJCQkJCXRlbXBlcmF0ZSwgYnJhdmUgYW5kIGp1c3QsIGFuZCBjYW4gYSBjaGlsZCBiZSBpbnRlbXBlcmF0ZSBvciB0ZW1wZXJhdGUsIG9yIG5vdD8KCQkJCQlUaGlzIHBvaW50IHRoZXJlZm9yZSByZXF1aXJlcyBnZW5lcmFsIGNvbnNpZGVyYXRpb24gaW4gcmVsYXRpb24gdG8gbmF0dXJhbCBydWxlcgoJCQkJCWFuZCBzdWJqZWN0OiBpcyB2aXJ0dWUgdGhlIHNhbWUgZm9yIHJ1bGVyIGFuZCBydWxlZCwgb3IgZGlmZmVyZW50PyBJZiBpdCBpcwoJCQkJCXByb3BlciBmb3IgYm90aCB0byBwYXJ0YWtlIGluIG5vYmlsaXR5IG9mIGNoYXJhY3RlciwgaG93IGNvdWxkIGl0IGJlIHByb3BlciBmb3IKCQkJCQl0aGUgb25lIHRvIHJ1bGUgYW5kIHRoZSBvdGhlciB0byBiZSBydWxlZCB1bmNvbmRpdGlvbmFsbHk/IHdlIGNhbm5vdCBzYXkgdGhhdAoJCQkJCXRoZSBkaWZmZXJlbmNlIGlzIHRvIGJlIG9uZSBvZiBkZWdyZWUsIGZvciBydWxpbmcgYW5kIGJlaW5nIHJ1bGVkIGRpZmZlciBpbgoJCQkJCWtpbmQsIGFuZCBkaWZmZXJlbmNlIG9mIGRlZ3JlZSBpcyBub3QgYSBkaWZmZXJlbmNlIGluIGtpbmQgYXQgYWxsLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPldoZXJlYXMgaWYgb24gdGhlIGNvbnRyYXJ5IGl0IGlzIHByb3BlciBmb3IKCQkJCQl0aGUgb25lIHRvIGhhdmUgbW9yYWwgbm9iaWxpdHkgYnV0IG5vdCBmb3IgdGhlIG90aGVyLCB0aGlzIGlzIHN1cnByaXNpbmcuIEZvciBpZgoJCQkJCXRoZSBydWxlciBpcyBub3QgdGVtcGVyYXRlIGFuZCBqdXN0LCBob3cgd2lsbCBoZSBydWxlIHdlbGw/IEFuZCBpZiB0aGUgcnVsZWQsCgkJCQkJaG93IHdpbGwgaGUgb2JleSB3ZWxsPyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI2MGEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['1.1260a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPklmIGludGVtcGVyYXRlIGFuZCBjb3dhcmRseSBoZSB3aWxsIG5vdCBwZXJmb3JtIGFueQoJCQkJCW9mIHRoZSBkdXRpZXMgb2YgaGlzIHBvc2l0aW9uLiBJdCBpcyBldmlkZW50IHRoZXJlZm9yZSB0aGF0IGJvdGggbXVzdCBwb3NzZXNzCgkJCQkJdmlydHVlLCBidXQgdGhhdCB0aGVyZSBhcmUgZGlmZmVyZW5jZXMgaW4gdGhlaXIgdmlydHVlIO+8iGFzIGFsc28gdGhlcmUKCQkJCQlhcmUgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aG9zZSB3aG8gYXJlIGJ5IG5hdHVyZSBydWxlZO+8iS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBjbGF1c2Ugc2VlbXMgdG8gaGF2ZSBiZWVuIGludGVycG9sYXRlZDsKCQkJCQkJb25lIG1zLiBoYXMgYSBtYXJnaW5hbCBjb3JyZWN0aW9uLCDigJhieSBuYXR1cmUgcnVsZXJzIGFuZAoJCQkJCQlydWxlZC7igJk8L25vdGU+IEFuZCBvZiB0aGlzIHdlIHN0cmFpZ2h0d2F5IGZpbmQgYW4gaW5kaWNhdGlvbiBpbgoJCQkJCWNvbm5lY3Rpb24gd2l0aCB0aGUgc291bDsgZm9yIHRoZSBzb3VsIGJ5IG5hdHVyZSBjb250YWlucyBhIHBhcnQgdGhhdCBydWxlcyBhbmQKCQkJCQlhIHBhcnQgdGhhdCBpcyBydWxlZCwgdG8gd2hpY2ggd2UgYXNzaWduIGRpZmZlcmVudCB2aXJ0dWVzLCB0aGF0IGlzLCB0aGUgdmlydHVlCgkJCQkJb2YgdGhlIHJhdGlvbmFsIGFuZCB0aGF0IG9mIHRoZSBpcnJhdGlvbmFsLiA8L3RyYW5zbGF0aW9uPg=="
translation['1.1260a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS42IiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgY2xlYXIgdGhlbiB0aGF0IHRoZSBjYXNlIGlzIHRoZSBzYW1lIGFsc28gd2l0aCB0aGUKCQkJCQlvdGhlciBpbnN0YW5jZXMgb2YgcnVsZXIgYW5kIHJ1bGVkLiBIZW5jZSB0aGVyZSBhcmUgYnkgbmF0dXJlIHZhcmlvdXMgY2xhc3NlcyBvZgoJCQkJCXJ1bGVycyBhbmQgcnVsZWQuIEZvciB0aGUgZnJlZSBydWxlcyB0aGUgc2xhdmUsIHRoZSBtYWxlIHRoZSBmZW1hbGUsIGFuZCB0aGUgbWFuCgkJCQkJdGhlIGNoaWxkIGluIGEgZGlmZmVyZW50IHdheS4gQW5kIGFsbCBwb3NzZXNzIHRoZSB2YXJpb3VzIHBhcnRzIG9mIHRoZSBzb3VsLCBidXQKCQkJCQlwb3NzZXNzIHRoZW0gaW4gZGlmZmVyZW50IHdheXM7IGZvciB0aGUgc2xhdmUgaGFzIG5vdCBnb3QgdGhlIGRlbGliZXJhdGl2ZSBwYXJ0CgkJCQkJYXQgYWxsLCBhbmQgdGhlIGZlbWFsZSBoYXMgaXQsIGJ1dCB3aXRob3V0IGZ1bGwgYXV0aG9yaXR5LCB3aGlsZSB0aGUgY2hpbGQgaGFzCgkJCQkJaXQsIGJ1dCBpbiBhbiB1bmRldmVsb3BlZCBmb3JtLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluIHRoZSBtc3MuIHRoaXMgc2VudGVuY2UgZm9sbG93cwoJCQkJCQl0aGUgbmV4dCBvbmUsIOKAmFdlIG11c3Qgc3VwcG9zZeKAlGZ1bmN0aW9uLOKAmSBhbmQKCQkJCQkJYmVnaW5zIOKAmEhlbmNlIHRoZSBydWxlciBtdXN0IHBvc3Nlc3MgPGVtcGggY2xhc3M9InRyYW5zbGF0aW9uIj5tb3JhbDwvZW1waD4KCQkJCQkJdmlydHVlLuKAmTwvbm90ZT4gdGhlIHJ1bGVyIG11c3QgcG9zc2VzcyBpbnRlbGxlY3R1YWwgdmlydHVlIGluCgkJCQkJY29tcGxldGVuZXNzIO+8iGZvciBhbnkgd29yaywgdGFrZW4gYWJzb2x1dGVseSwgYmVsb25ncyB0byB0aGUKCQkJCQltYXN0ZXItY3JhZnRzbWFuLCBhbmQgcmF0aW9uYWwgcHJpbmNpcGxlIGlzIGEgbWFzdGVyLWNyYWZ0c21hbu+8iTsgd2hpbGUKCQkJCQllYWNoIG9mIHRoZSBvdGhlciBwYXJ0aWVzIG11c3QgaGF2ZSB0aGF0IHNoYXJlIG9mIHRoaXMgdmlydHVlIHdoaWNoIGlzCgkJCQkJYXBwcm9wcmlhdGUgdG8gdGhlbS4gV2UgbXVzdCBzdXBwb3NlIHRoZXJlZm9yZSB0aGF0IHRoZSBzYW1lIG5lY2Vzc2FyaWx5IGhvbGRzCgkJCQkJZ29vZCBvZiB0aGUgbW9yYWwgdmlydHVlczogYWxsIG11c3QgcGFydGFrZSBvZiB0aGVtLCBidXQgbm90IGluIHRoZSBzYW1lIHdheSwKCQkJCQlidXQgaW4gc3VjaCBtZWFzdXJlIGFzIGlzIHByb3BlciB0byBlYWNoIGluIHJlbGF0aW9uIHRvIGhpcyBvd24KCQkJCQkJZnVuY3Rpb24uPGVtcGggY2xhc3M9InRyYW5zbGF0aW9uIj5tb3JhbDwvZW1waD4KCQkJCQkJdmlydHVlLuKAmTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1260b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS44IiB1bml0PSJMb2ViIGNoYXAiIC8+SGVuY2UgaXQgaXMgbWFuaWZlc3QgdGhhdCBhbGwgdGhlIHBlcnNvbnMgbWVudGlvbmVkCgkJCQkJaGF2ZSBhIG1vcmFsIHZpcnR1ZSBvZiB0aGVpciBvd24sIGFuZCB0aGF0IHRoZSB0ZW1wZXJhbmNlIG9mIGEgd29tYW4gYW5kIHRoYXQgb2YKCQkJCQlhIG1hbiBhcmUgbm90IHRoZSBzYW1lLCBub3IgdGhlaXIgY291cmFnZSBhbmQganVzdGljZSwgYXMgU29jcmF0ZXMgdGhvdWdodCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIE1lbm8gNzRiIiB2YWxpZD0ieWVzIj5QbGF0LiBNZW5vIDc0YmZmLjwvYmlibD4KCQkJCQk8L25vdGU+IGJ1dCB0aGUgb25lIGlzIHRoZSBjb3VyYWdlIG9mIGNvbW1hbmQsIGFuZCB0aGUgb3RoZXIgdGhhdCBvZgoJCQkJCXN1Ym9yZGluYXRpb24sIGFuZCB0aGUgY2FzZSBpcyBzaW1pbGFyIHdpdGggdGhlIG90aGVyIHZpcnR1ZXMuIEFuZCB0aGlzIGlzIGFsc28KCQkJCQljbGVhciB3aGVuIHdlIGV4YW1pbmUgdGhlIG1hdHRlciBtb3JlIGluIGRldGFpbCwgZm9yIGl0IGlzIG1pc2xlYWRpbmcgdG8gZ2l2ZSBhCgkJCQkJZ2VuZXJhbCBkZWZpbml0aW9uIG9mIHZpcnR1ZSwgYXMgc29tZSBkbywgd2hvIHNheSB0aGF0IHZpcnR1ZSBpcyBiZWluZyBpbiBnb29kCgkJCQkJY29uZGl0aW9uIGFzIHJlZ2FyZHMgdGhlIHNvdWwgb3IgYWN0aW5nIHVwcmlnaHRseSBvciB0aGUgbGlrZTsgdGhvc2Ugd2hvCgkJCQkJZW51bWVyYXRlIHRoZSB2aXJ0dWVzIG9mIGRpZmZlcmVudCBwZXJzb25zIHNlcGFyYXRlbHksIGFzIEdvcmdpYXMgZG9lcyw8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBNZW5vIDc0YiIgdmFsaWQ9InllcyI+UGxhdC4gTWVubyA3NGJmZi48L2JpYmw+CgkJCQkJPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gaW4KCQkJCQkJCVBsYXRvLCA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5NZW5vPC90aXRsZT4g77yIc2VlIDcgYWJvdmXvvIksCgkJCQkJCXdoZXJlIHRoaXMgc29waGlzdCBmaWd1cmVzIGFzIGEgY2hhcmFjdGVyIGluIHRoZSBkaWFsb2d1ZTsgc2VlIGFsc28gMy4xLjksCgkJCQkJCW5vdGUuPC9ub3RlPiBhcmUgbXVjaCBtb3JlIGNvcnJlY3QgdGhhbiB0aG9zZSB3aG8gZGVmaW5lIHZpcnR1ZSBpbiB0aGF0IHdheS4KCQkJCQlIZW5jZSB3ZSBtdXN0IGhvbGQgdGhhdCBhbGwgb2YgdGhlc2UgcGVyc29ucyBoYXZlIHRoZWlyIGFwcHJvcHJpYXRlIHZpcnR1ZXMsIGFzCgkJCQkJdGhlIHBvZXQgc2FpZCBvZiB3b21hbjogPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TWVubzwvdGl0bGU+IO+8iHNlZSA3IGFib3Zl77yJLAoJCQkJCQl3aGVyZSB0aGlzIHNvcGhpc3QgZmlndXJlcyBhcyBhIGNoYXJhY3RlciBpbiB0aGUgZGlhbG9ndWU7IHNlZSBhbHNvIDMuMS45LAoJCQkJCQlub3RlLjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImlhbWJpYyI+U2lsZW5jZSBnaXZlcyBncmFjZSB0byB3b21hbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJTb3BoLiBBai4gMjkzIiB2YWxpZD0ieWVzIj5Tb3BoLiBBai4gMjkzPC9iaWJsPgoJCQkJCQkJPC9ub3RlPuKAlDwvbD4KCQkJCQk8L3F1b3RlPiB0aG91Z2ggdGhhdCBpcyBub3QgdGhlIGNhc2UgbGlrZXdpc2Ugd2l0aCBhIG1hbi4gPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImlhbWJpYyI+U2lsZW5jZSBnaXZlcyBncmFjZSB0byB3b21hbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJTb3BoLiBBai4gMjkzIiB2YWxpZD0ieWVzIj5Tb3BoLiBBai4gMjkzPC9iaWJsPgoJCQkJCQkJPC9ub3RlPuKAlDwvbD4KCQkJCQk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iU29waC4gQWouIDI5MyIgdmFsaWQ9InllcyI+U29waC4gQWouIDI5MzwvYmlibD4KCQkJCQkJCTwvbm90ZT7igJQ8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJTb3BoLiBBai4gMjkzIiB2YWxpZD0ieWVzIj5Tb3BoLiBBai4gMjkzPC9iaWJsPgoJCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbHNvIHRoZSBjaGlsZCBpcyBub3QgY29tcGxldGVseSBkZXZlbG9wZWQsIHNvIHRoYXQKCQkJCQltYW5pZmVzdGx5IGhpcyB2aXJ0dWUgYWxzbyBpcyBub3QgcGVyc29uYWwgdG8gaGltc2VsZiwgYnV0IHJlbGF0aXZlIHRvIHRoZSBmdWxseQoJCQkJCWRldmVsb3BlZCBiZWluZywgdGhhdCBpcywgdGhlIHBlcnNvbiBpbiBhdXRob3JpdHkgb3ZlciBoaW0uIEFuZCBzaW1pbGFybHkgdGhlCgkJCQkJc2xhdmUncyB2aXJ0dWUgYWxzbyBpcyBpbiByZWxhdGlvbiB0byB0aGUgbWFzdGVyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgd2UgbGFpZCBpdCBkb3duIHRoYXQgdGhlIHNsYXZlIGlzIHNlcnZpY2VhYmxlIGZvciB0aGUgbWVyZSBuZWNlc3NhcmllcyBvZgoJCQkJCWxpZmUsIHNvIHRoYXQgY2xlYXJseSBoZSBuZWVkcyBvbmx5IGEgc21hbGwgYW1vdW50IG9mIHZpcnR1ZSwgaW4gZmFjdCBqdXN0CgkJCQkJZW5vdWdoIHRvIHByZXZlbnQgaGltIGZyb20gZmFpbGluZyBpbiBoaXMgdGFza3Mgb3dpbmcgdG8gaW50ZW1wZXJhbmNlIGFuZAoJCQkJCWNvd2FyZGljZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+77yIQnV0IHRoZQoJCQkJCXF1ZXN0aW9uIG1pZ2h0IGJlIHJhaXNlZCwgc3VwcG9zaW5nIHRoYXQgd2hhdCBoYXMganVzdCBiZWVuIHNhaWQgaXMgdHJ1ZSwgd2lsbAoJCQkJCWFydGlzYW5zIGFsc28gbmVlZCB0byBoYXZlIHZpcnR1ZT8gZm9yIHRoZXkgZnJlcXVlbnRseSBmYWxsIHNob3J0IGluIHRoZWlyIHRhc2tzCgkJCQkJb3dpbmcgdG8gaW50ZW1wZXJhbmNlLiBPciBpcyB0aGVpciBjYXNlIGVudGlyZWx5IGRpZmZlcmVudD8gRm9yIHRoZSBzbGF2ZSBpcyBhCgkJCQkJcGFydG5lciBpbiBoaXMgbWFzdGVyJ3MgbGlmZSwgYnV0IHRoZSBhcnRpc2FuIGlzIG1vcmUgcmVtb3RlLCBhbmQgb25seSBzbyBtdWNoCgkJCQkJb2YgdmlydHVlIGZhbGxzIHRvIGhpcyBzaGFyZSBhcyBvZiBzbGF2ZXJ5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gaGlzIGV4Y2VsbGVuY2VzIGFzIGFuIGFydGlzYW4gYXJlIHRoZSBxdWFsaXRpZXMgb2YgYSBzdWJvcmRpbmF0ZQoJCQkJCQnvvIhoaXMgdmlydHVlcyBhcyBhIGh1bWFuIGJlaW5nLCBhcGFydCBmcm9tIGhpcyB0cmFkZSwgYXJlIG5vdAoJCQkJCQljb25zaWRlcmVk77yJLjwvbm90ZT7igJQgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNjBiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1260b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGUgbWVjaGFuaWMgYXJ0aXNhbiBpcwoJCQkJCXVuZGVyIGEgc29ydCBvZiBsaW1pdGVkIHNsYXZlcnksIGFuZCB3aGVyZWFzIHRoZSBzbGF2ZSBpcyBvbmUgb2YgdGhlIG5hdHVyYWwKCQkJCQljbGFzc2VzLCBubyBzaG9lbWFrZXIgb3Igb3RoZXIgY3JhZnRzbWFuIGJlbG9uZ3MgdG8gaGlzIHRyYWRlIGJ5CgkJCQkJbmF0dXJlLu+8iSA8L3RyYW5zbGF0aW9uPg=="
translation['2.1260b.27'] = ""
translation['2.1261a.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBzaW5jZSB3ZSB0YWtlIGZvciBvdXIgc3BlY2lhbCBjb25zaWRlcmF0aW9uIHRoZSBzdHVkeSBvZiB0aGUgZm9ybSBvZgoJCQkJCXBvbGl0aWNhbCBjb21tdW5pdHkgdGhhdCBpcyB0aGUgYmVzdCBvZiBhbGwgdGhlIGZvcm1zIGZvciBhIHBlb3BsZSBhYmxlIHRvCgkJCQkJcHVyc3VlIHRoZSBtb3N0IGlkZWFsIG1vZGUgb2YgbGlmZSwgd2UgbXVzdCBhbHNvIGV4YW1pbmUgdGhlIG90aGVyIGNvbnN0aXR1dGlvbnMKCQkJCQlhY3R1YWxseSBlbXBsb3llZCBieSBjZXJ0YWluIG9mIHRoZSBzdGF0ZXMgc2FpZCB0byBiZSB3ZWxsIGdvdmVybmVkLCBhcyB3ZWxsIGFzCgkJCQkJYW55IG90aGVycyBwcm9wb3VuZGVkIGJ5IGNlcnRhaW4gdGhpbmtlcnMgYW5kIHJlcHV0ZWQgdG8gYmUgb2YgbWVyaXQsIGluIG9yZGVyCgkJCQkJdGhhdCB3ZSBtYXkgZGlzY2VybiB3aGF0IHRoZXJlIGlzIGluIHRoZW0gdGhhdCBpcyByaWdodCBhbmQgZXhwZWRpZW50LCBhbmQgYWxzbwoJCQkJCWluIG9yZGVyIHRoYXQgaXQgbWF5IG5vdCBiZSB0aG91Z2h0IHRoYXQgdG8gc2VlayBmb3Igc29tZXRoaW5nIGRpZmZlcmVudCBmcm9tCgkJCQkJdGhlbSBzcHJpbmdzIGVudGlyZWx5IGZyb20gYSBkZXNpcmUgdG8gZGlzcGxheSBpbmdlbnVpdHksIGJ1dCB0aGF0IHdlIG1heSBiZQoJCQkJCXRob3VnaHQgdG8gZW50ZXIgdXBvbiB0aGlzIGlucXVpcnkgYmVjYXVzZSB0aGVzZSBmb3JtcyBvZiBjb25zdGl0dXRpb24gdGhhdAoJCQkJCWFscmVhZHkgZXhpc3QgYXJlIG5vdCBzYXRpc2ZhY3RvcnkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlIG11c3QgZmlyc3QgYWRvcHQgYXMgYSBzdGFydGluZy1wb2ludAoJCQkJCXRoYXQgd2hpY2ggaXMgdGhlIG5hdHVyYWwgcG9pbnQgb2YgZGVwYXJ0dXJlIGZvciB0aGlzIGlucXVpcnkuIFRoZXJlIGFyZSB0aHJlZQoJCQkJCXBvc3NpYmxlIHN5c3RlbXMgb2YgcHJvcGVydHk6IGVpdGhlciBhbGwgdGhlIGNpdGl6ZW5zIG11c3Qgb3duIGV2ZXJ5dGhpbmcgaW4KCQkJCQljb21tb24sIG9yIHRoZXkgbXVzdCBvd24gbm90aGluZyBpbiBjb21tb24sIG9yIHNvbWUgdGhpbmdzIG11c3QgYmUgY29tbW9uCgkJCQkJcHJvcGVydHkgYW5kIG90aGVycyBub3QuIFRvIGhhdmUgbm90aGluZyBpbiBjb21tb24gaXMgY2xlYXJseSBpbXBvc3NpYmxlIGZvciB0aGUKCQkJCQlzdGF0ZSBpcyBlc3NlbnRpYWxseSBhIGZvcm0gb2YgY29tbXVuaXR5LCBhbmQgdG8gYmVnaW4gd2l0aCB0aGVyZSBpcyBib3VuZCB0byBiZQoJCQkJCWEgY29tbW9uIGxvY2FsaXR5OiBhIHNpbmdsZSBjaXR5IG9jY3VwaWVzIGEgc2luZ2xlIHNpdGUsIGFuZCB0aGUgc2luZ2xlIGNpdHkKCQkJCQliZWxvbmdzIHRvIGl0cyBjaXRpemVucyBpbiBjb21tb24uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjYxYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1261a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkJ1dCBpcyBpdCBiZXR0ZXIgZm9yIGEgY2l0eSB0aGF0CgkJCQkJaXMgdG8gYmUgd2VsbCBvcmRlcmVkIHRvIGhhdmUgY29tbXVuaXR5IGluIGV2ZXJ5dGhpbmcgd2hpY2ggY2FuIHBvc3NpYmx5IGJlIG1hZGUKCQkJCQljb21tb24gcHJvcGVydHksIG9yIGlzIGl0IGJldHRlciB0byBoYXZlIHNvbWUgdGhpbmdzIGluIGNvbW1vbiBhbmQgb3RoZXJzIG5vdD8KCQkJCQlGb3IgZXhhbXBsZSwgaXQgaXMgcG9zc2libGUgZm9yIHRoZSBjaXRpemVucyB0byBoYXZlIGNoaWxkcmVuLCB3aXZlcyBhbmQKCQkJCQlwb3NzZXNzaW9ucyBpbiBjb21tb24gd2l0aCBlYWNoIG90aGVyLCBhcyBpbiBQbGF0bydzIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlJlcHVibGljPC90aXRsZT4sIGluCgkJCQkJd2hpY2ggU29jcmF0ZXMgc2F5cyB0aGF0IHRoZXJlIG11c3QgYmUKCQkJCQljb21tdW5pdHkgb2YgY2hpbGRyZW4sIHdvbWVuIGFuZCBwb3NzZXNzaW9ucy4gV2VsbCB0aGVuLCB3aGljaCBpcyBwcmVmZXJhYmxlLAoJCQkJCXRoZSBzeXN0ZW0gdGhhdCBub3cgb2J0YWlucywgb3Igb25lIGNvbmZvcm1pbmcgd2l0aCB0aGUgcmVndWxhdGlvbiBkZXNjcmliZWQgaW4KCQkJCQl0aGUgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UmVwdWJsaWM8L3RpdGxlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PbiB0aGUgZm9sbG93aW5nCgkJCQkJCWNyaXRpY2lzbXMgc2VlIEdyb3RlLCA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5QbGF0bzwvdGl0bGU+LCAzLCBwcC4gMjExLTIzMy48L25vdGU+PwoJCQkJCQk8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5QbGF0bzwvdGl0bGU+LCAzLCBwcC4gMjExLTIzMy48L3RyYW5zbGF0aW9uPg=="
translation['2.1261a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBmb3IgYWxsIHRoZSBjaXRpemVucyB0byBoYXZlIHRoZWlyIHdpdmVzIGluIGNvbW1vbiBpbnZvbHZlcyBhIHZhcmlldHkgb2YKCQkJCQlkaWZmaWN1bHRpZXM7IGluIHBhcnRpY3VsYXIsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPu+8iDHvvIkgMS4zLTc7IO+8iDLvvIkgMS44LTIuMTE7CgkJCQkJCe+8iDPvvIkgMi4xMS0xMzsgYWxzbyDvvIg077yJIG90aGVyIG9iamVjdGlvbnMKCQkJCQkJMi4xNS0xNi48L25vdGU+IO+8iDHvvIkgdGhlIG9iamVjdCB3aGljaAoJCQkJCQlTb2NyYXRlcyBhZHZhbmNlcyBhcyB0aGUgcmVhc29uIHdoeSB0aGlzCgkJCQkJZW5hY3RtZW50IHNob3VsZCBiZSBtYWRlIGNsZWFybHkgZG9lcyBub3QgZm9sbG93IGZyb20gaGlzIGFyZ3VtZW50czsgYWxzbwoJCQkJCe+8iDLvvIkgYXMgYSBtZWFucyB0byB0aGUgZW5kIHdoaWNoIGhlIGFzc2VydHMgc2hvdWxkIGJlIHRoZQoJCQkJCWZ1bmRhbWVudGFsIG9iamVjdCBvZiB0aGUgY2l0eSwgdGhlIHNjaGVtZSBhcyBhY3R1YWxseSBzZXQgZm9ydGggaW4gdGhlIGRpYWxvZ3VlCgkJCQkJaXMgbm90IHByYWN0aWNhYmxlOyB5ZXQg77yIM++8iSBob3cgaXQgaXMgdG8gYmUgZnVydGhlciB3b3JrZWQgb3V0CgkJCQkJaGFzIGJlZW4gbm93aGVyZSBkZWZpbml0ZWx5IHN0YXRlZC4gSSByZWZlciB0byB0aGUgaWRlYWwgb2YgdGhlIGZ1bGxlc3QgcG9zc2libGUKCQkJCQl1bml0eSBvZiB0aGUgZW50aXJlIHN0YXRlLCB3aGljaAoJCQkJCQlTb2NyYXRlcyB0YWtlcyBhcyBoaXMgZnVuZGFtZW50YWwgcHJpbmNpcGxlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5ZZXQgaXQgaXMgY2xlYXIgdGhhdAoJCQkJCWlmIHRoZSBwcm9jZXNzIG9mIHVuaWZpY2F0aW9uIGFkdmFuY2VzIGJleW9uZCBhIGNlcnRhaW4gcG9pbnQsIHRoZSBjaXR5IHdpbGwgbm90CgkJCQkJYmUgYSBjaXR5IGF0IGFsbCBmb3IgYSBzdGF0ZSBlc3NlbnRpYWxseSBjb25zaXN0cyBvZiBhIG11bHRpdHVkZSBvZiBwZXJzb25zLCBhbmQKCQkJCQlpZiBpdHMgdW5pZmljYXRpb24gaXMgY2FycmllZCBiZXlvbmQgYSBjZXJ0YWluIHBvaW50LCBjaXR5IHdpbGwgYmUgcmVkdWNlZCB0bwoJCQkJCWZhbWlseSBhbmQgZmFtaWx5IHRvIGluZGl2aWR1YWwsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmZvcgoJCQkJCXdlIHNob3VsZCBwcm9ub3VuY2UgdGhlIGZhbWlseSB0byBiZSBhIG1vcmUgY29tcGxldGUgdW5pdHkgdGhhbiB0aGUgY2l0eSwgYW5kCgkJCQkJdGhlIHNpbmdsZSBwZXJzb24gdGhhbiB0aGUgZmFtaWx5OyBzbyB0aGF0IGV2ZW4gaWYgYW55IGxhd2dpdmVyIHdlcmUgYWJsZSB0bwoJCQkJCXVuaWZ5IHRoZSBzdGF0ZSwgaGUgbXVzdCBub3QgZG8gc28sIGZvciBoZSB3aWxsIGRlc3Ryb3kgaXQgaW4gdGhlIHByb2Nlc3MuIEFuZAoJCQkJCW5vdCBvbmx5IGRvZXMgYSBjaXR5IGNvbnNpc3Qgb2YgYSBtdWx0aXR1ZGUgb2YgaHVtYW4gYmVpbmdzLCBpdCBjb25zaXN0cyBvZgoJCQkJCWh1bWFuIGJlaW5ncyBkaWZmZXJpbmcgaW4ga2luZC4gQSBjb2xsZWN0aW9uIG9mIHBlcnNvbnMgYWxsIGFsaWtlIGRvZXMgbm90CgkJCQkJY29uc3RpdHV0ZSBhIHN0YXRlLiBGb3IgYSBjaXR5IGlzIG5vdCB0aGUgc2FtZSB0aGluZyBhcyBhIGxlYWd1ZTsgYSBsZWFndWUgaXMgb2YKCQkJCQl2YWx1ZSBieSBpdHMgcXVhbnRpdHksIGV2ZW4gdGhvdWdoIGl0IGlzIGFydCB0aGUgc2FtZSBpbiBraW5kIO+8iHNpbmNlCgkJCQkJdGhlIGVzc2VudGlhbCBvYmplY3Qgb2YgdGhlIGxlYWd1ZSBpcyBtaWxpdGFyeSBzdHJlbmd0aO+8iSwganVzdCBhcyBhCgkJCQkJd2VpZ2h0IHdvdWxkIGJlIHdvcnRoIG1vcmUgaWYgaXQgd2VpZ2hlZCBtb3JlLCB3aGVyZWFzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluIHRoZSBtc3MuIG9mIHRoZSBHcmVlawoJCQkJCQnigJh3aGVyZWFz4oCUa2luZOKAmSBjb21lcyBiZWxvdyBhZnRlcgoJCQkJCQkJ4oCYCgkJCQkJCUFyY2FkaWFuLuKAmTwvbm90ZT4gY29tcG9uZW50cyB3aGljaCBhcmUgdG8gbWFrZSB1cCBhCgkJCQkJdW5pdHkgbXVzdCBkaWZmZXIgaW4ga2luZCA8L3RyYW5zbGF0aW9uPg=="
translation['2.1261b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS41IiB1bml0PSJMb2ViIGNoYXAiIC8+77yIYW5kIGl0IGlzIGJ5IHRoaXMgY2hhcmFjdGVyaXN0aWMgdGhhdCBhIGNpdHkgd2lsbCBhbHNvIHN1cnBhc3MgYQoJCQkJCXRyaWJlIG9mIHdoaWNoIHRoZSBwb3B1bGF0aW9uIGlzIG5vdCBzY2F0dGVyZWQgYW1vbmcgdmlsbGFnZXMgYnV0IG9yZ2FuaXplZCBsaWtlCgkJCQkJdGhlIEFyY2FkaWFuc++8iS4gSGVuY2UgcmVjaXByb2NhbCBlcXVhbGl0eTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BcyB0aGUgYmVzdCBzdGF0ZSBjb25zaXN0cyBvZiBkaWZmZXJlbnQgY2xhc3NlcywgaXRzIHVuaXR5IGlzCgkJCQkJCXNlY3VyZWQgYnkgZWFjaCBjaXRpemVuIGdpdmluZyBzZXJ2aWNlcyB0byBzb2NpZXR5IGFuZCByZWNlaXZpbmcgaW4gcmV0dXJuCgkJCQkJCWJlbmVmaXRzIHByb3BvcnRpb25hdGUgdG8gaGlzIHNlcnZpY2UuIFByb2JhYmx5IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+E4b24CgkJCQkJCQnhvLTPg86/zr08L2ZvcmVpZ24+IGlzIGFuIGludGVycG9sYXRpb24g77yIdGhvdWdoCgkJCQkJCQlOZXdtYW4gZXhwbGFpbnMgaXQgYXMgJ3RoZSByZWNpcHJvY2FsCgkJCQkJCXJlbmRlcmluZyBvZiBhbiBlcXVhbCBhbW91bnQgb2YgZGlzc2ltaWxhciB0aGluZ3Mn77yJOiBvbWl0dGluZwoJCQkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4Thvbgg4by0z4POv869PC9mb3JlaWduPiwgd2UgcmVuZGVyCgkJCQkJCeKAmHJlY2lwcm9jaXR54oCZIGFuZCBub3Qg4oCYcmVjaXByb2NhbAoJCQkJCQllcXVhbGl0eeKAmTsgY2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTMyYiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLgoJCQkJCQkJRXRoLiAxMTMyYiAzMzwvYmlibD4sIOKAmEluIHRoZSBpbnRlcmNoYW5nZSBvZiBzZXJ2aWNlcyBKdXN0aWNlCgkJCQkJCWluIHRoZSBmb3JtIG9mIFJlY2lwcm9jaXR5IGlzIHRoZSBib25kIHRoYXQgbWFpbnRhaW5zIHRoZSBhc3NvY2lhdGlvbjoKCQkJCQkJcmVjaXByb2NpdHksIHRoYXQgaXMsIG9uIHRoZSBiYXNpcyBvZiBwcm9wb3J0aW9uLCBub3Qgb24gdGhlIGJhc2lzIG9mCgkJCQkJCWVxdWFsaXR5LuKAmTwvbm90ZT4gaXMgdGhlIHByZXNlcnZhdGl2ZSBvZiBzdGF0ZXMsIGFzIGhhcyBiZWVuIHNhaWQKCQkJCQliZWZvcmUgaW4gdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+E4b24CgkJCQkJCQnhvLTPg86/zr08L2ZvcmVpZ24+IGlzIGFuIGludGVycG9sYXRpb24g77yIdGhvdWdoCgkJCQkJCQlOZXdtYW4gZXhwbGFpbnMgaXQgYXMgJ3RoZSByZWNpcHJvY2FsCgkJCQkJCXJlbmRlcmluZyBvZiBhbiBlcXVhbCBhbW91bnQgb2YgZGlzc2ltaWxhciB0aGluZ3Mn77yJOiBvbWl0dGluZwoJCQkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4Thvbgg4by0z4POv869PC9mb3JlaWduPiwgd2UgcmVuZGVyCgkJCQkJCeKAmHJlY2lwcm9jaXR54oCZIGFuZCBub3Qg4oCYcmVjaXByb2NhbAoJCQkJCQllcXVhbGl0eeKAmTsgY2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTMyYiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLgoJCQkJCQkJRXRoLiAxMTMyYiAzMzwvYmlibD4sIOKAmEluIHRoZSBpbnRlcmNoYW5nZSBvZiBzZXJ2aWNlcyBKdXN0aWNlCgkJCQkJCWluIHRoZSBmb3JtIG9mIFJlY2lwcm9jaXR5IGlzIHRoZSBib25kIHRoYXQgbWFpbnRhaW5zIHRoZSBhc3NvY2lhdGlvbjoKCQkJCQkJcmVjaXByb2NpdHksIHRoYXQgaXMsIG9uIHRoZSBiYXNpcyBvZiBwcm9wb3J0aW9uLCBub3Qgb24gdGhlIGJhc2lzIG9mCgkJCQkJCWVxdWFsaXR5LuKAmTx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkV0aGljczwvdGl0bGU+LiBGb3IgZXZlbiBhbW9uZyB0aGUgZnJlZSBhbmQgZXF1YWwgdGhpcwoJCQkJCXByaW5jaXBsZSBtdXN0IG5lY2Vzc2FyaWx5IG9idGFpbiwgc2luY2UgYWxsIGNhbm5vdCBnb3Zlcm4gYXQgb25jZTogdGhleSBtdXN0CgkJCQkJaG9sZCBvZmZpY2UgZm9yIGEgeWVhciBhdCBhIHRpbWUgb3IgYnkgc29tZSBvdGhlciBhcnJhbmdlbWVudCBvciBwZXJpb2Q7IGFuZCBpbgoJCQkJCXRoaXMgbWFubmVyIGl0IGRvZXMgYWN0dWFsbHkgY29tZSBhYm91dCB0aGF0IGFsbCBnb3Zlcm4sIGp1c3QgYXMgYWxsIHNob2VtYWtlcnMKCQkJCQl3b3VsZCBiZSBhbHNvIGNhcnBlbnRlcnMgaWYgdGhlIHNob2VtYWtlcnMgYW5kIHRoZSBjYXJwZW50ZXJzIGtlcHQgb24gY2hhbmdpbmcKCQkJCQl0cmFkZXMgaW5zdGVhZCBvZiB0aGUgc2FtZSBwZXJzb25zIGJlaW5nIHNob2VtYWtlcnMgYW5kIGNhcnBlbnRlcnMgYWx3YXlzLgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBzaW5jZSBzdWNoIHBlcm1hbmVuY2Ugb2YKCQkJCQlmdW5jdGlvbiBpcyBiZXR0ZXIgZm9yIHRoZSBwb2xpdGljYWwgY29tbXVuaXR5IGFsc28sIGl0IGlzIGNsZWFyIHRoYXQgaXQgaXMKCQkJCQliZXR0ZXIgZm9yIHRoZSBzYW1lIHBlcnNvbnMgdG8gZ292ZXJuIGFsd2F5cywgaWYgcG9zc2libGU7IGFuZCBhbW9uZyBwZW9wbGVzCgkJCQkJd2hlcmUgaXQgaXMgaW1wb3NzaWJsZSBiZWNhdXNlIGFsbCB0aGUgY2l0aXplbnMgYXJlIGVxdWFsIGluIHRoZWlyIG5hdHVyZSwKCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNjFiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1261b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnlldCBhdCB0aGUgc2FtZSB0aW1lIGl0IGlzIG9ubHkganVzdCwgd2hldGhlciBnb3Zlcm5pbmcgaXMgYQoJCQkJCWdvb2QgdGhpbmcgb3IgYSBiYWQsIHRoYXQgYWxsIHNob3VsZCBwYXJ0YWtlIGluIGl0LCBhbmQgZm9yIGVxdWFscyB0aHVzIHRvCgkJCQkJc3VibWl0IHRvIGF1dGhvcml0eSBpbiB0dXJuIGltaXRhdGVzIHRoZWlyIGJlaW5nIG9yaWdpbmFsbHkgZGlzc2ltaWxhcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgYmVzdCBmb3JtIG9mIGNvbnN0aXR1dGlvbiBpcyB3aGVyZSB0aGVyZQoJCQkJCQlpcyBhIHN1cGVyaW9yIGNsYXNzIHRoYXQgZ292ZXJucyBjb250aW51b3VzbHnigJRhbiBhcmlzdG9jcmFjeTsgc28KCQkJCQkJd2hlcmUgdGhlcmUgYXJlIG5vIGNsYXNzLWRpc3RpbmN0aW9ucywgdGhlIG5leHQgYmVzdCB0aGluZyBpcyBmb3IgYWxsIHRoZQoJCQkJCQljaXRpemVucyB0byB0YWtlIHR1cm5zIGluIGdvdmVybmluZyBhbmQgYmVpbmcgZ292ZXJuZWQsIHRob3NlIGluIG9mZmljZSBmb3IKCQkJCQkJdGhlIHRpbWUgYmVpbmcgZm9ybWluZyBhIHNvcnQgb2YgYXJpc3RvY3JhY3kuCgkJCQkJCVJpY2hhcmRzJ3MgYWx0ZXJhdGlvbiBvZiB0aGUgdGV4dCBnaXZlcyDigJh0byB0YWtlCgkJCQkJCXR1cm5zIHRvIGdvdmVybiBpcyBhbiBpbWl0YXRpb24gb2Ygb3JpZ2luYWwgaW5lcXVhbGl0eSBhbmQKCQkJCQkJY2xhc3MtZGlzdGluY3Rpb24u4oCYPC9ub3RlPjsgZm9yIHNvbWUgZ292ZXJuIGFuZCBvdGhlcnMgYXJlCgkJCQkJZ292ZXJuZWQgYnkgdHVybiwgYXMgdGhvdWdoIGJlY29taW5nIG90aGVyIHBlcnNvbnM7IGFuZCBhbHNvIHNpbWlsYXJseSB3aGVuIHRoZXkKCQkJCQlob2xkIG9mZmljZSB0aGUgaG9sZGVycyBvZiBkaWZmZXJlbnQgb2ZmaWNlcyBhcmUgZGlmZmVyZW50IHBlcnNvbnMuIDwvdHJhbnNsYXRpb24+"
translation['2.1261b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS43IiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgY2xlYXIgdGhlbiBmcm9tIHRoZXNlIGNvbnNpZGVyYXRpb25zCgkJCQkJdGhhdCBpdCBpcyBub3QgYW4gb3V0Y29tZSBvZiBuYXR1cmUgZm9yIHRoZSBzdGF0ZSB0byBiZSBhIHVuaXR5IGluIHRoZSBtYW5uZXIgaW4KCQkJCQl3aGljaCBjZXJ0YWluIHBlcnNvbnMgc2F5IHRoYXQgaXQgaXMsIGFuZCB0aGF0IHdoYXQgaGFzIGJlZW4gc2FpZCB0byBiZSB0aGUKCQkJCQlncmVhdGVzdCBnb29kIGluIHN0YXRlcyByZWFsbHkgZGVzdHJveXMgc3RhdGVzOyB5ZXQgc3VyZWx5IGEgdGhpbmcncyBwYXJ0aWN1bGFyCgkJCQkJZ29vZCBhY3RzIGFzIGl0cyBwcmVzZXJ2YXRpdmUu4oCUQW5vdGhlciBsaW5lIG9mIGNvbnNpZGVyYXRpb24gYWxzbwoJCQkJCXNob3dzIHRoYXQgdG8gc2VlayB0byB1bmlmeSB0aGUgc3RhdGUgZXhjZXNzaXZlbHkgaXMgbm90IGJlbmVmaWNpYWwuIEluIHBvaW50IG9mCgkJCQkJc2VsZi1zdWZmaWNpZW5jeSB0aGUgaW5kaXZpZHVhbCBpcyBzdXJwYXNzZWQgYnkgdGhlIGZhbWlseSBhbmQgdGhlIGZhbWlseSBieSB0aGUKCQkJCQlzdGF0ZSwgYW5kIGluIHByaW5jaXBsZSBhIHN0YXRlIGlzIGZ1bGx5IHJlYWxpemVkIG9ubHkgd2hlbiBpdCBjb21lcyB0byBwYXNzCgkJCQkJdGhhdCB0aGUgY29tbXVuaXR5IG9mIG51bWJlcnMgaXMgc2VsZi1zdWZmaWNpbmc7IGlmIHRoZXJlZm9yZSB0aGUgbW9yZQoJCQkJCXNlbGYtc3VmZmljaW5nIGEgY29tbXVuaXR5IGlzLCB0aGUgbW9yZSBkZXNpcmFibGUgaXMgaXRzIGNvbmRpdGlvbiwgdGhlbiBhIGxlc3MKCQkJCQlkZWdyZWUgb2YgdW5pdHkgaXMgbW9yZSBkZXNpcmFibGUgdGhhbiBhIGdyZWF0ZXIuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS44IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFnYWluLCBldmVuIGdyYW50aW5nIHRoYXQKCQkJCQlpdCBpcyBiZXN0IGZvciB0aGUgY29tbXVuaXR5IHRvIGJlIGFzIGNvbXBsZXRlIGEgdW5pdHkgYXMgcG9zc2libGUsIGNvbXBsZXRlCgkJCQkJdW5pdHkgZG9lcyBub3Qgc2VlbSB0byBiZSBwcm92ZWQgYnkgdGhlIGZvcm11bGEg4oCYaWYgYWxsIHRoZSBjaXRpemVucwoJCQkJCXNheSDigJxNaW5l4oCdIGFuZCDigJxOb3QgbWluZeKAnSBhdCB0aGUgc2FtZQoJCQkJCXRpbWUs4oCZIHdoaWNoIFNvY3JhdGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSByZWZlcmVuY2UgaXMgdG8gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gUmVwLiA0NjJjIiB2YWxpZD0ieWVzIj5QbGF0LiBSZXAuIDQ2MmM8L2JpYmw+LiBVbml0eSBpcyBzZWN1cmVkIHdoZW4gZXZlcnlvbmUgdGhpbmtzIHRoYXQKCQkJCQkJZXZlcnl0aGluZyBiZWxvbmdzIGVxdWFsbHkgdG8gaGltIGFuZCB0byBldmVyeWJvZHkgZWxzZSwgaS5lLiBldmVyeXRoaW5nIGlzCgkJCQkJCWNvbW1vbiBwcm9wZXJ0eS48L25vdGU+IHRoaW5rcyB0byBiZSBhIHNpZ24gb2YgdGhlPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gUmVwLiA0NjJjIiB2YWxpZD0ieWVzIj5QbGF0LiBSZXAuIDQ2MmM8L2JpYmw+LiBVbml0eSBpcyBzZWN1cmVkIHdoZW4gZXZlcnlvbmUgdGhpbmtzIHRoYXQKCQkJCQkJZXZlcnl0aGluZyBiZWxvbmdzIGVxdWFsbHkgdG8gaGltIGFuZCB0byBldmVyeWJvZHkgZWxzZSwgaS5lLiBldmVyeXRoaW5nIGlzCgkJCQkJCWNvbW1vbiBwcm9wZXJ0eS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+Y2l0eSdzIGJlaW5nIGNvbXBsZXRlbHkgb25lLgoJCQkJCeKAmEFsbOKAmSBpcyBhbiBhbWJpZ3VvdXMgdGVybS4gSWYgaXQgbWVhbnMg4oCYZWFjaAoJCQkJCXNldmVyYWxseSzigJkgdmVyeSBsaWtlbHkgdGhpcyB3b3VsZCBtb3JlIGZ1bGx5IHJlYWxpemUgdGhlIHN0YXRlIG9mCgkJCQkJdGhpbmdzIHdoaWNoIFNvY3JhdGVzIHdpc2hlcyB0byBwcm9kdWNlCgkJCQkJ77yIZm9yIGluIHRoYXQgY2FzZSBldmVyeSBjaXRpemVuIHdpbGwgY2FsbCB0aGUgc2FtZSBib3kgaGlzIHNvbiBhbmQgYWxzbwoJCQkJCXRoZSBzYW1lIHdvbWFuIGhpcyB3aWZlLCBhbmQgd2lsbCBzcGVhayBpbiB0aGUgc2FtZSB3YXkgb2YgcHJvcGVydHkgYW5kIGluZGVlZAoJCQkJCW9mIGVhY2ggb2YgdGhlIGFjY2Vzc29yaWVzIG9mIGxpZmXvvIkgPC90cmFuc2xhdGlvbj4="
translation['2.1262a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS45IiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IDxlbXBoIGNsYXNzPSJ0cmFuc2xhdGlvbiI+ZXggaHlwb3RoZXNpPC9lbXBoPiB0aGUgY2l0aXplbnMsIGhhdmluZwoJCQkJCWNvbW11bml0eSBvZiB3b21lbiBhbmQgY2hpbGRyZW4sIHdpbGwgbm90IGNhbGwgdGhlbSDigJh0aGVpcnPigJkKCQkJCQlpbiB0aGlzIHNlbnNlLCBidXQgd2lsbCBtZWFuIHRoZWlycyBjb2xsZWN0aXZlbHkgYW5kIG5vdCBzZXZlcmFsbHksIGFuZAoJCQkJCXNpbWlsYXJseSB0aGV5IHdpbGwgY2FsbCBwcm9wZXJ0eSDigJh0aGVpcnPigJkgbWVhbmluZyB0aGUKCQkJCQlwcm9wZXJ0eSBvZiB0aGVtIGFsbCwgbm90IG9mIGVhY2ggb2YgdGhlbSBzZXZlcmFsbHkuIFdlIHNlZSB0aGVuIHRoYXQgdGhlIHBocmFzZQoJCQkJCeKAmGFsbCBzYXnigJkgaXMgZXF1aXZvY2FsIO+8iGluIGZhY3QgdGhlIHdvcmRzCgkJCQkJ4oCYYWxsLOKAmSDigJhib3RoLOKAmQoJCQkJCeKAmG9kZCzigJkg4oCYZXZlbizigJkgb3dpbmcgdG8gdGhlaXIgYW1iaWd1aXR5LAoJCQkJCW9jY2FzaW9uIGFyZ3VtZW50YXRpdmUgcXVpYmJsaW5nIGV2ZW4gaW4gcGhpbG9zb3BoaWNhbCBkaXNjdXNzaW9uc++8iTsKCQkJCQloZW5jZSByZWFsbHkgZm9yIGFsbCB0byBzYXkgdGhlIHNhbWUgdGhpbmcgaXMgaW4gb25lIHNlbnNlIGFkbWlyYWJsZSwgYWx0aG91Z2gKCQkJCQlpbXByYWN0aWNhYmxlLCBidXQgaW4gYW5vdGhlciBzZW5zZSBpcyBub3QgYXQgYWxsIGEgc2lnbiBvZiBjb25jb3JkLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgZnVydGhlcm1vcmUsIHRoZSBwcm9wb3NhbCBoYXMgYW5vdGhlcgoJCQkJCWRpc2FkdmFudGFnZS4gUHJvcGVydHkgdGhhdCBpcyBjb21tb24gdG8gdGhlIGdyZWF0ZXN0IG51bWJlciBvZiBvd25lcnMgcmVjZWl2ZXMKCQkJCQl0aGUgbGVhc3QgYXR0ZW50aW9uOyBtZW4gY2FyZSBtb3N0IGZvciB0aGVpciBwcml2YXRlIHBvc3Nlc3Npb25zLCBhbmQgZm9yIHdoYXQKCQkJCQl0aGV5IG93biBpbiBjb21tb24gbGVzcywgb3Igb25seSBzbyBmYXIgYXMgaXQgZmFsbHMgdG8gdGhlaXIgb3duIGluZGl2aWR1YWwKCQkJCQlzaGFyZSBmb3IgaW4gYWRkaXRpb24gdG8gdGhlIG90aGVyIHJlYXNvbnMsIHRoZXkgdGhpbmsgbGVzcyBvZiBpdCBvbiB0aGUgZ3JvdW5kCgkJCQkJdGhhdCBzb21lb25lIGVsc2UgaXMgdGhpbmtpbmcgYWJvdXQgaXQsIGp1c3QgYXMgaW4gaG91c2Vob2xkIHNlcnZpY2UgYSBsYXJnZQoJCQkJCW51bWJlciBvZiBkb21lc3RpY3Mgc29tZXRpbWVzIGdpdmUgd29yc2UgYXR0ZW5kYW5jZSB0aGFuIGEgc21hbGxlciBudW1iZXIuCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpdCByZXN1bHRzIGluIGVhY2gKCQkJCQljaXRpemVuJ3MgaGF2aW5nIGEgdGhvdXNhbmQgc29ucywgYW5kIHRoZXNlIGRvIG5vdCBiZWxvbmcgdG8gdGhlbSBhcyBpbmRpdmlkdWFscwoJCQkJCWJ1dCBhbnkgY2hpbGQgaXMgZXF1YWxseSB0aGUgc29uIG9mIGFueW9uZSwgc28gdGhhdCBhbGwgYWxpa2Ugd2lsbCByZWdhcmQgdGhlbQoJCQkJCXdpdGggaW5kaWZmZXJlbmNlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI2MmEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1262a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZ2FpbiwgZWFjaCBzcGVha3MKCQkJCQlvZiBvbmUgb2YgaGlzIGZlbGxvdy1jaXRpemVucyB3aG8gaXMgcHJvc3BlcmluZyBvciBnZXR0aW5nIG9uIGJhZGx5IGFzCgkJCQkJ4oCYbXkgc29u4oCZIG9ubHkgaW4gdGhlIHNlbnNlIG9mIHRoZSBmcmFjdGlvbmFsIHBhcnQgd2hpY2ggaGUKCQkJCQlmb3JtcyBvZiB0aGUgd2hvbGUgbnVtYmVy4oCUdGhhdCBpcywgaGUgc2F5cyDigJhteQoJCQkJCXNvbuKAmSBvciDigJhzby1hbmQtc28ncyBzb24s4oCZIHNwZWNpZnlpbmcgYXMgdGhlCgkJCQkJZmF0aGVyIGFueSBpbmRpdmlkdWFsIG9mIHRoZSB0aG91c2FuZCBjaXRpemVucyBvciB3aGF0ZXZlciB0aGUgbnVtYmVyIGJlIG9mCgkJCQkJd2hpY2ggdGhlIHN0YXRlIGNvbnNpc3RzLCBhbmQgZXZlbiB0aGlzIGR1YmlvdXNseSwgZm9yIGl0IGlzIHVuY2VydGFpbiB3aG8gaGFzCgkJCQkJY2hhbmNlZCB0byBoYXZlIGhhZCBhIHNvbiBib3JuIHRvIGhpbSBhbmQgd2hlbiBib3JuIHNhZmVseSByZWFyZWQuIDwvdHJhbnNsYXRpb24+"
translation['2.1262a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPllldCB3aGljaCBpcyB0aGUgYmV0dGVyIHdheSB0byB1c2UgdGhlCgkJCQkJd29yZCDigJhtaW5l4oCZ4oCUdGhpcyB3YXksIGVhY2ggb2YgdHdvIHRob3VzYW5kIG9yIHRlbgoJCQkJCXRob3VzYW5kIHBlb3BsZSBhcHBseWluZyBpdCB0byB0aGUgc2FtZSB0aGluZywgb3IgcmF0aGVyIHRoZSB3YXkgaW4gd2hpY2ggdGhleQoJCQkJCXNheSDigJhtaW5l4oCZIGluIHRoZSBhY3R1YWwgc3RhdGVzIG5vdz8gZm9yIHRoZSBzYW1lIHBlcnNvbiBpcwoJCQkJCWNhbGxlZCDigJhteSBzb27igJkgYnkgb25lIG1hbiBhbmQg4oCYbXkKCQkJCQlicm90aGVy4oCZIGJ5IGFub3RoZXIsIGFuZCBhbm90aGVyIGNhbGxzIGhpbQoJCQkJCeKAmG5lcGhldyzigJkgb3IgYnkgc29tZSBvdGhlciByZWxhdGlvbnNoaXAsIHdoZXRoZXIgb2YgYmxvb2Qgb3IKCQkJCQlieSBhZmZpbml0eSBhbmQgbWFycmlhZ2UsIHRoZSBzcGVha2VyJ3Mgb3duIGluIHRoZSBmaXJzdCBwbGFjZSwgb3IgdGhhdCBvZiBoaXMKCQkJCQlyZWxhdGlvbnM7IGFuZCBpbiBhZGRpdGlvbiBzb21lb25lIGVsc2UgY2FsbHMgaGltCgkJCQkJ4oCYZmVsbG93LWNsYW5zbWFu4oCZIG9yIOKAmGZlbGxvdy10cmliZXNtYW4u4oCZCgkJCQkJRm9yIGl0IGlzIGJldHRlciBmb3IgYSBib3kgdG8gYmUgb25lJ3Mgb3duIHByaXZhdGUgbmVwaGV3IHRoYW4gb25lJ3Mgc29uIGluIHRoZQoJCQkJCXdheSBkZXNjcmliZWQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPk1vcmVvdmVyIGl0IHdvdWxkCgkJCQkJYWxzbyBiZSBpbXBvc3NpYmxlIHRvIGF2b2lkIG1lbidzIHN1cHBvc2luZyBjZXJ0YWluIHBlcnNvbnMgdG8gYmUgdGhlaXIgcmVhbAoJCQkJCWJyb3RoZXJzIGFuZCBzb25zIGFuZCBmYXRoZXJzIGFuZCBtb3RoZXJzOyBmb3IgdGhleSB3b3VsZCBiZSBib3VuZCB0byBmb3JtIHRoZWlyCgkJCQkJYmVsaWVmIGFib3V0IGVhY2ggb3RoZXIgYnkgdGhlIHJlc2VtYmxhbmNlcyB3aGljaCBvY2N1ciBiZXR3ZWVuIGNoaWxkcmVuIGFuZAoJCQkJCXBhcmVudHMuIFRoaXMgaW5kZWVkIGlzIHNhaWQgYnkgc29tZSBvZiB0aG9zZSB3aG8gd3JpdGUgb2YgdHJhdmVscyByb3VuZCB0aGUKCQkJCQkJd29ybGQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Qm9va3Mgb2YgZ2VvZ3JhcGh5LCBmb3VuZGVkIG9uCgkJCQkJCXRyYXZlbGxlcnMnIHJlcG9ydHPigJRhIGZhbW91cyBvbmUgYnkgSGVjYXRhZXVzLCBzY29mZmVkIGF0IGJ5IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhkdC4gNC4zNiIgdmFsaWQ9InllcyI+SGR0LiA0LjM2PC9iaWJsPi48L25vdGU+IGFjdHVhbGx5IHRvIG9jY3VyOzxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhkdC4gNC4zNiIgdmFsaWQ9InllcyI+SGR0LiA0LjM2PC9iaWJsPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhleSBzYXkgdGhhdCBzb21lIG9mIHRoZSBwZW9wbGUgb2YgVXBwZXIKCQkJCQlMaWJ5YSBoYXZlIHRoZWlyIHdpdmVzIGluIGNvbW1vbiwgeWV0IHRoZSBjaGlsZHJlbiBib3JuIGFyZSBkaXZpZGVkIGFtb25nIHRoZW0KCQkJCQlhY2NvcmRpbmcgdG8gdGhlaXIgcGVyc29uYWwgcmVzZW1ibGFuY2VzLiBBbmQgdGhlcmUgYXJlIHNvbWUgZmVtYWxlcyBib3RoIG9mIHRoZQoJCQkJCWh1bWFuIHJhY2UgYW5kIG9mIHRoZSBvdGhlciBhbmltYWxzLCBmb3IgaW5zdGFuY2UgaG9yc2VzIGFuZCBjYXR0bGUsIHdobyBoYXZlIGEKCQkJCQlzdHJvbmcgbmF0dXJhbCB0ZW5kZW5jeSB0byBwcm9kdWNlIG9mZi1zcHJpbmcgcmVzZW1ibGluZyB0aGUgbWFsZSBwYXJlbnRzLCBhcwoJCQkJCXdhcyB0aGUgY2FzZSB3aXRoIHRoZSBtYXJlIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGhhcnNhbG9zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQaGFyc2Fsb3MiPlBoYXJzYWx1czwvcGxhY2VOYW1lPgoJCQkJCW5hbWVkIEhvbmVzdCBMYWR5Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciBwb3NzaWJseQoJCQkJCQnigJhEb2NpbGXigJkg77yICgkJCQkJCQlKYWNrc29u77yJLCBjZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIdW50LiA3LjQiIHZhbGlkPSJ5ZXMiPlhlbi4gSHVudC4KCQkJCQkJCTcuNDwvYmlibD4uPC9ub3RlPgoJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSHVudC4gNy40IiB2YWxpZD0ieWVzIj5YZW4uIEh1bnQuCgkJCQkJCQk3LjQ8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['2.1262b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Nb3Jlb3ZlciBpdCBpcyBub3QgZWFzeSBmb3IgdGhvc2Ugd2hvIGluc3RpdHV0ZSB0aGlzIGNvbW11bmlzbSB0byBndWFyZAoJCQkJCWFnYWluc3Qgc3VjaCBvYmplY3Rpb25hYmxlIG9jY3VycmVuY2VzIGFzIG91dHJhZ2UsIGludm9sdW50YXJ5IGFuZCBpbiBzb21lIGNhc2VzCgkJCQkJdm9sdW50YXJ5IGhvbWljaWRlLCBmaWdodHMsIGFidXNpdmUgbGFuZ3VhZ2U7IGFsbCBvZiB3aGljaCBhcmUgdmlvbGF0aW9ucyBvZgoJCQkJCXBpZXR5IHdoZW4gY29tbWl0dGVkIGFnYWluc3QgZmF0aGVycywgbW90aGVycyBhbmQgbmVhciByZWxhdGl2ZXMgYXMgaWYgdGhleSB3ZXJlCgkJCQkJbm90IHJlbGF0aXZlczsgYnV0IHRoZXNlIGFyZSBib3VuZCB0byBvY2N1ciBtb3JlIGZyZXF1ZW50bHkgd2hlbiBwZW9wbGUgZG8gbm90CgkJCQkJa25vdyB0aGVpciByZWxhdGlvbnMgdGhhbiB3aGVuIHRoZXkgZG8sIGFuZCBhbHNvLCB3aGVuIHRoZXkgZG8gb2NjdXIsIGlmIHRoZQoJCQkJCW9mZmVuZGVycyBrbm93IHRoZWlyIHJlbGF0aW9uc2hpcCBpdCBpcyBwb3NzaWJsZSBmb3IgdGhlbSB0byBoYXZlIHRoZSBjdXN0b21hcnkKCQkJCQlleHBpYXRpb25zIHBlcmZvcm1lZCwgYnV0IGZvciB0aG9zZSB3aG8gZG8gbm90IG5vIGV4cGlhdGlvbiBpcyBwb3NzaWJsZS4KCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjE1IiB1bml0PSJMb2ViIGNoYXAiIC8+QWxzbyBpdCBpcyBjdXJpb3VzIHRoYXQgYQoJCQkJCXRoZW9yaXN0IHdobyBtYWtlcyB0aGUgc29ucyBjb21tb24gcHJvcGVydHkgb25seSBkZWJhcnMgbG92ZXJzIGZyb20gaW50ZXJjb3Vyc2UKCQkJCQlhbmQgZG9lcyBub3QgcHJvaGliaXQgbG92ZSwgbm9yIHRoZSBvdGhlciBmYW1pbGlhcml0aWVzLCB3aGljaCBiZXR3ZWVuIGZhdGhlcgoJCQkJCWFuZCBzb24gb3IgYnJvdGhlciBhbmQgYnJvdGhlciBhcmUgbW9zdCB1bnNlZW1seSwgc2luY2UgZXZlbiB0aGUgZmFjdCBvZiBsb3ZlCgkJCQkJYmV0d2VlbiB0aGVtIGlzIHVuc2VlbWx5LiBBbmQgaXQgaXMgYWxzbyBzdHJhbmdlIHRoYXQgaGUgZGVwcml2ZXMgdGhlbSBvZgoJCQkJCWludGVyY291cnNlIGZvciBubyBvdGhlciByZWFzb24gZXhjZXB0IGJlY2F1c2UgdGhlIHBsZWFzdXJlIGlzIHRvbyB2aW9sZW50OyBhbmQKCQkJCQl0aGF0IGhlIHRoaW5rcyBpdCBtYWtlcyBubyBkaWZmZXJlbmNlIHRoYXQgdGhlIHBhcnRpZXMgYXJlIGluIHRoZSBvbmUgY2FzZQoJCQkJCWZhdGhlciBvciBzb24gYW5kIGluIHRoZSBvdGhlciBjYXNlIGJyb3RoZXJzIG9mIG9uZSBhbm90aGVyLiBBbmQgaXQgc2VlbXMgdGhhdAoJCQkJCXRoaXMgY29tbXVuaXR5IG9mIHdpdmVzIGFuZCBzb25zIGlzIG1vcmUgc2VydmljZWFibGUgZm9yIHRoZSBGYXJtZXIgY2xhc3MgdGhhbgoJCQkJCWZvciB0aGUgR3VhcmRpYW5zOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI2MmIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1262b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGVyZSB3aWxsIGJlIGxlc3MgZnJpZW5kc2hpcCBhbW9uZyB0aGVtIGlmCgkJCQkJdGhlaXIgY2hpbGRyZW4gYW5kIHdvbWVuIGFyZSBpbiBjb21tb24sIGFuZCB1bmZyaWVuZGxpbmVzcyBpbiB0aGUgc3ViamVjdAoJCQkJCWNsYXNzZXMgaXMgYSBnb29kIHRoaW5nIHdpdGggYSB2aWV3IHRvIHRoZWlyIGJlaW5nIHN1Ym1pc3NpdmUgdG8gYXV0aG9yaXR5IGFuZAoJCQkJCW5vdCBtYWtpbmcgcmV2b2x1dGlvbi4gPC90cmFuc2xhdGlvbj4="
translation['2.1262b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBzcGVha2luZwoJCQkJCWdlbmVyYWxseSBzdWNoIGEgbGF3IGlzIGJvdW5kIHRvIGJyaW5nIGFib3V0IHRoZSBvcHBvc2l0ZSBzdGF0ZSBvZiB0aGluZ3MgdG8KCQkJCQl0aGF0IHdoaWNoIHJpZ2h0bHkgZW5hY3RlZCBsYXdzIG91Z2h0IHByb3Blcmx5IHRvIGNhdXNlLCBhbmQgYmVjYXVzZSBvZiB3aGljaAoJCQkJCQlTb2NyYXRlcyB0aGlua3MgaXQgbmVjZXNzYXJ5IHRvCgkJCQkJbWFrZSB0aGVzZSByZWd1bGF0aW9ucyBhYm91dCB0aGUgY2hpbGRyZW4gYW5kIHdvbWVuLiBGb3Igd2UgdGhpbmsgdGhhdAoJCQkJCWZyaWVuZHNoaXAgaXMgdGhlIGdyZWF0ZXN0IG9mIGJsZXNzaW5ncyBmb3IgdGhlIHN0YXRlLCBzaW5jZSBpdCBpcyB0aGUgYmVzdAoJCQkJCXNhZmVndWFyZCBhZ2FpbnN0IHJldm9sdXRpb24sIGFuZCB0aGUgdW5pdHkgb2YgdGhlIHN0YXRlLCB3aGljaAoJCQkJCVNvY3JhdGVzIHByYWlzZXMgbW9zdCBoaWdobHksIGJvdGggYXBwZWFycyB0bwoJCQkJCWJlIGFuZCBpcyBzYWlkIGJ5IGhpbSB0byBiZSB0aGUgZWZmZWN0IG9mIGZyaWVuZHNoaXAsIGp1c3QgYXMgd2Uga25vdyB0aGF0CgkJCQkJCUFyaXN0b3BoYW5lczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgY29taWMgcG9ldCwgZmlndXJpbmcgYXMKCQkJCQkJYSBjaGFyYWN0ZXIgaW4gUGxhdG8ncwoJCQkJCQkJPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U3ltcG9zaXVtLDwvdGl0bGU+IHNlZSBlc3BlY2lhbGx5IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFN5bS4gMTkyYyIgdmFsaWQ9InllcyI+UGxhdC4KCQkJCQkJCVN5bS4gMTkyYyBmZi48L2JpYmw+Ljwvbm90ZT4gaW4gdGhlIGRpc2NvdXJzZXMgb24gbG92ZSBkZXNjcmliZXMgaG93IHRoZQoJCQkJCWxvdmVycyBvd2luZyB0byB0aGVpciBleHRyZW1lIGFmZmVjdGlvbiBkZXNpcmUgdG8gZ3JvdyB0b2dldGhlciBhbmQgYm90aCBiZWNvbWUKCQkJCQlvbmUgaW5zdGVhZCBvZiBiZWluZyB0d28uIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlN5bXBvc2l1bSw8L3RpdGxlPiBzZWUgZXNwZWNpYWxseSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBTeW0uIDE5MmMiIHZhbGlkPSJ5ZXMiPlBsYXQuCgkJCQkJCQlTeW0uIDE5MmMgZmYuPC9iaWJsPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMTciIHVuaXQ9IkxvZWIgY2hhcCIgLz5JbiBzdWNoIGEKCQkJCQl1bmlvbiBpdCB3b3VsZCBiZSBpbmV2aXRhYmxlIHRoYXQgYm90aCB3b3VsZCBiZSBzcG9pbGVkLCBvciBhdCBsZWFzdCBvbmUsIGFuZCBpbgoJCQkJCXRoZSBzdGF0ZSBmcmllbmRzaGlwIHdvdWxkIGluZXZpdGFibHkgYmVjb21lIHdhdGVyeSBpbiBjb25zZXF1ZW5jZSBvZiBzdWNoCgkJCQkJYXNzb2NpYXRpb24sIGFuZCB0aGUgZXhwcmVzc2lvbnMg4oCYbXkgZmF0aGVy4oCZIGFuZAoJCQkJCeKAmG15IHNvbuKAmSB3b3VsZCBxdWl0ZSBnbyBvdXQuIEZvciBqdXN0IGFzIHB1dHRpbmcgYSBsaXR0bGUKCQkJCQlzdWdhciBpbnRvIGEgcXVhbnRpdHkgb2Ygd2F0ZXIgbWFrZXMgdGhlIG1peHR1cmUgaW1wZXJjZXB0aWJsZSwgc28gaXQgYWxzbyBtdXN0CgkJCQkJY29tZSBhYm91dCB0aGF0IHRoZSBtdXR1YWwgcmVsYXRpb25zaGlwIGJhc2VkIG9uIHRoZXNlIG5hbWVzIG11c3QgYmVjb21lCgkJCQkJCWltcGVyY2VwdGlibGUsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnNpbmNlIGluIHRoZQoJCQkJCXJlcHVibGljIGRlc2NyaWJlZCBieSBQbGF0byB0aGVyZSB3aWxsCgkJCQkJYmUgdGhlIGxlYXN0IHBvc3NpYmxlIG5lY2Vzc2l0eSBmb3IgcGVvcGxlIHRvIGNhcmUgZm9yIG9uZSBhbm90aGVyIGFzIGZhdGhlciBmb3IKCQkJCQlzb25zIG9yIGFzIHNvbiBmb3IgZmF0aGVyIG9yIGFzIGJyb3RoZXIgZm9yIGJyb3RoZXIuIEZvciB0aGVyZSBhcmUgdHdvIHRoaW5ncwoJCQkJCXRoYXQgbW9zdCBjYXVzZSBtZW4gdG8gY2FyZSBmb3IgYW5kIHRvIGxvdmUgZWFjaCBvdGhlciwgdGhlIHNlbnNlIG9mIG93bmVyc2hpcAoJCQkJCWFuZCB0aGUgc2Vuc2Ugb2YgcHJlY2lvdXNuZXNzOyBhbmQgbmVpdGhlciBtb3RpdmUgY2FuIGJlIHByZXNlbnQgd2l0aCB0aGUKCQkJCQljaXRpemVucyBvZiBhIHN0YXRlIHNvIGNvbnN0aXR1dGVkLiA8L3RyYW5zbGF0aW9uPg=="
translation['2.1263a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFnYWluLCBhcyB0byB0aGUgdHJhbnNmZXJlbmNlIG9mIHNvbWUgb2YgdGhlIGNoaWxkcmVuIGF0IGJpcnRoIGZyb20gdGhlCgkJCQkJRmFybWVycyBhbmQgQXJ0aXNhbnMgdG8gdGhlIEd1YXJkaWFuczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUKCQkJCQkJdGhyZWUgY2xhc3NlcyBpbiBQbGF0bydzIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlJlcHVibGljPC90aXRsZT4uPC9ub3RlPiBhbmQgb2Ygb3RoZXJzIGZyb20KCQkJCQl0aGUgR3VhcmRpYW5zIHRvIHRoZSBGYXJtZXJzIGFuZCBBcnRpc2FucywgdGhlcmUgaXMgbXVjaCBjb25mdXNpb24gYXMgdG8gaG93IGl0CgkJCQkJaXMgdG8gYmUgZG9uZTsgYW5kIHRoZSBwYXJlbnRzIHdobyBnaXZlIHRoZSBjaGlsZHJlbiBhbmQgdGhlIG9mZmljaWFscyB3aG8KCQkJCQl0cmFuc2ZlciB0aGVtIGFyZSBib3VuZCB0byBrbm93IHdoaWNoIHRoZXkgZ2l2ZSB0byB3aG9tLiBBbmQgYWdhaW4sIHRoZSB0aGluZ3MKCQkJCQlzcG9rZW4gb2YgYWJvdmUgYXJlIGJvdW5kIHRvIG9jY3VyIGV2ZW4gbW9yZSB3aXRoIHRoZXNlIHRyYW5zZmVycmVkIGNoaWxkcmVuLAoJCQkJCXN1Y2ggYXMgb3V0cmFnZSwgbG92ZS1tYWtpbmcgYW5kIG11cmRlcjsgZm9yIHRoZSBjaGlsZHJlbiBvZiB0aGUgR3VhcmRpYW5zCgkJCQkJdHJhbnNmZXJyZWQgdG8gdGhlIG90aGVyIGNpdGl6ZW5zIHdpbGwgbm8gbG9uZ2VyIHNwZWFrIG9mIHRoZSBHdWFyZGlhbnMgYXMKCQkJCQlicm90aGVycyBhbmQgY2hpbGRyZW4gYW5kIGZhdGhlcnMgYW5kIG1vdGhlcnMsIG5vciB5ZXQgd2lsbCB0aG9zZSBsaXZpbmcgYW1vbmcKCQkJCQl0aGUgR3VhcmRpYW5zIHNvIHNwZWFrIG9mIHRoZSBvdGhlciBjbGFzc2VzLCBzbyBhcyB0byBiZSBjYXJlZnVsIG5vdCB0byBjb21taXQKCQkJCQlhbnkgc3VjaCBvZmZlbmNlIGJlY2F1c2Ugb2YgdGhlaXIgcmVsYXRpb25zaGlwLjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlJlcHVibGljPC90aXRsZT4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlN1Y2ggdGhlcmVmb3JlIG1heSBiZSBvdXIgZGVjaXNpb24gYXMgdG8gY29tbXVuaXR5IG9mIGNoaWxkcmVuIGFuZCB3b21lbi4KCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gY29ubmVjdGlvbiB3aXRoIHRoaXMgd2UgaGF2ZSB0byBjb25zaWRlciB0aGUgZHVlIHJlZ3VsYXRpb24gb2YgcHJvcGVydHkgaW4KCQkJCQlhIGNvbW11bml0eSB0aGF0IGlzIHRvIGhhdmUgdGhlIGJlc3QgcG9saXRpY2FsIGluc3RpdHV0aW9uczogc2hvdWxkIHByb3BlcnR5IGJlCgkJCQkJb3duZWQgaW4gY29tbW9uIG9yIHByaXZhdGVseT8gVGhpcyBxdWVzdGlvbiBtaWdodCBpbmRlZWQgYmUgY29uc2lkZXJlZAoJCQkJCXNlcGFyYXRlbHkgZnJvbSB0aGUgc3lzdGVtIGxhaWQgZG93biBieSBsYXcgd2l0aCByZWdhcmQgdG8gdGhlIGNoaWxkcmVuIGFuZCB0aGUKCQkJCQl3b21lbjogPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNjNhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1263a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkkgbWVhbiwgZXZlbiBpZiB0aGVyZSBiZSBzZXBhcmF0ZSBmYW1pbGllcyBhcyBpcyBub3cgdGhlIGNhc2UKCQkJCQl3aXRoIGFsbCBuYXRpb25zLCBpcyBpdCBiZXR0ZXIgZm9yIGJvdGggdGhlIG93bmVyc2hpcCBhbmQgdGhlIGVtcGxveW1lbnQgb2YKCQkJCQlwcm9wZXJ0eSB0byBiZSBpbiBjb21tb24uIC4gLiAsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNvbWV0aGluZyBoYXMKCQkJCQkJY2xlYXJseSBiZWVuIGxvc3QgaGVyZSwgc2lnbmlmeWluZyDigJhvciBzaG91bGQgdGhlcmUgYmUgc29tZQoJCQkJCQlsaW1pdGVkIGZvcm0gb2YgY29tbXVuaXNtP+KAmTwvbm90ZT4gZm9yIGV4YW1wbGUsIHNob3VsZCB0aGUgZmFybXMKCQkJCQliZSBzZXBhcmF0ZSBwcm9wZXJ0eSBidXQgdGhlIGZhcm0tcHJvZHVjZSBiZSBicm91Z2h0IGludG8gdGhlIGNvbW1vbiBzdG9jayBmb3IKCQkJCQljb25zdW1wdGlvbiDvvIhhcyBpcyB0aGUgcHJhY3RpY2Ugd2l0aCBzb21lIG5vbi1HcmVlayByYWNlc++8iTsgb3IKCQkJCQlvbiB0aGUgY29udHJhcnkgc2hvdWxkIHRoZSBsYW5kIGJlIGNvbW1vbiBhbmQgZmFybWVkIGluIGNvbW1vbiwgYnV0IHRoZSBwcm9kdWNlCgkJCQkJYmUgZGl2aWRlZCBmb3IgcHJpdmF0ZSB1c2Ug77yIYW5kIHRoaXMgZm9ybSBvZiBjb21tdW5pc20gYWxzbyBpcyBzYWlkIHRvCgkJCQkJcHJldmFpbCBhbW9uZyBzb21lIG9mIHRoZSBiYXJiYXJpYW5z77yJOyBvciBzaG91bGQgYm90aCBmYXJtcyBhbmQgcHJvZHVjZQoJCQkJCWJlIGNvbW1vbiBwcm9wZXJ0eT8gPC90cmFuc2xhdGlvbj4="
translation['2.1263a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+Tm93IGlmIHRoZQoJCQkJCXRpbGxlcnMgb2YgdGhlIHNvaWwgYmUgb2YgYSBkaWZmZXJlbnQgY2xhc3M8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBhIGNsYXNzIG9mIHNlcmZzLCBsaWtlIHRoZSBIZWxvdHMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+Ljwvbm90ZT4gdGhlcmUgbWlnaHQgYmUgYW5vdGhlciBhbmQgZWFzaWVyIHN5c3RlbSwKCQkJCQlidXQgaWYgdGhlIGNpdGl6ZW5zIGRvIHRoZSB3b3JrIGZvciB0aGVtc2VsdmVzLCB0aGUgcmVndWxhdGlvbnMgZm9yIHRoZSBjb21tb24KCQkJCQlvd25lcnNoaXAgb2YgcHJvcGVydHkgd291bGQgZ2l2ZSBtb3JlIGNhdXNlcyBmb3IgZGlzY29udGVudDsgZm9yIGlmIGJvdGggaW4gdGhlCgkJCQkJZW5qb3ltZW50IG9mIHRoZSBwcm9kdWNlIGFuZCBpbiB0aGUgd29yayBvZiBwcm9kdWN0aW9uIHRoZXkgcHJvdmUgbm90IGVxdWFsIGJ1dAoJCQkJCXVuZXF1YWwsIGNvbXBsYWludHMgYXJlIGJvdW5kIHRvIGFyaXNlIGJldHdlZW4gdGhvc2Ugd2hvIGVuam95IG9yIHRha2UgbXVjaCBidXQKCQkJCQl3b3JrIGxpdHRsZSBhbmQgdGhvc2Ugd2hvIHRha2UgbGVzcyBidXQgd29yayBtb3JlLiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgaW4gZ2VuZXJhbCB0byBsaXZlIHRvZ2V0aGVyIGFuZCBzaGFyZSBhbGwgb3VyIGh1bWFuCgkJCQkJYWZmYWlycyBpcyBkaWZmaWN1bHQsIGFuZCBlc3BlY2lhbGx5IHRvIHNoYXJlIHN1Y2ggdGhpbmdzIGFzIHRoZXNlLiBBbmQgdGhpcyBpcwoJCQkJCXNob3duIGluIHRoZSBwYXJ0bmVyc2hpcHMgb2YgZmVsbG93LXRyYXZlbGxlcnMsIGZvciBhbG1vc3QgdGhlIGdyZWF0ZXN0IG51bWJlcgoJCQkJCW9mIHRoZW0gcXVhcnJlbCBiZWNhdXNlIHRoZXkgY29tZSBpbnRvIGNvbGxpc2lvbiB3aXRoIG9uZSBhbm90aGVyIGFzIGEgcmVzdWx0IG9mCgkJCQkJb3JkaW5hcnkgbWF0dGVycyBhbmQgdHJpZmxlczsgYW5kIGFsc28gd2UgY29tZSBpbnRvIGNvbGxpc2lvbiBtb3N0IHdpdGggdGhvc2Ugb2YKCQkJCQlvdXIgc2VydmFudHM8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+d2hvbSB3ZSBlbXBsb3kgbW9zdCBvZnRlbgoJCQkJCWZvciBvcmRpbmFyeSBhdHRlbmRhbmNlLiA8L3RyYW5zbGF0aW9uPg=="
translation['2.1263b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+Q29tbXVuaXR5CgkJCQkJb2YgcHJvcGVydHkgdGhlcmVmb3JlIGludm9sdmVzIHRoZXNlIGFuZCBvdGhlciBzaW1pbGFyIGRpZmZpY3VsdGllczsgYW5kIHRoZQoJCQkJCXByZXNlbnQgc3lzdGVtLCBpZiBmdXJ0aGVyIGltcHJvdmVkIGJ5IGdvb2QgbW9yYWxzIGFuZCBieSB0aGUgcmVndWxhdGlvbiBvZgoJCQkJCWNvcnJlY3QgbGVnaXNsYXRpb24sIHdvdWxkIGJlIGdyZWF0bHkgc3VwZXJpb3IuIEZvciBpdCB3aWxsIHBvc3Nlc3MgdGhlIG1lcml0IG9mCgkJCQkJYm90aCBzeXN0ZW1zLCBieSB3aGljaCBJIG1lYW4gdGhlIGFkdmFudGFnZSBvZiBwcm9wZXJ0eSBiZWluZyBjb21tb24gYW5kIHRoZQoJCQkJCWFkdmFudGFnZSBvZiBpdHMgYmVpbmcgcHJpdmF0ZS4gRm9yIHByb3BlcnR5IG91Z2h0IHRvIGJlIGNvbW1vbiBpbiBhIHNlbnNlIGJ1dAoJCQkJCXByaXZhdGUgc3BlYWtpbmcgYWJzb2x1dGVseS4gRm9yIHRoZSBzdXBlcmludGVuZGVuY2Ugb2YgcHJvcGVydGllcyBiZWluZyBkaXZpZGVkCgkJCQkJYW1vbmcgdGhlIG93bmVycyB3aWxsIG5vdCBjYXVzZSB0aGVzZSBtdXR1YWwgY29tcGxhaW50cywgYW5kIHdpbGwgaW1wcm92ZSB0aGUKCQkJCQltb3JlIGJlY2F1c2UgZWFjaCB3aWxsIGFwcGx5IGhpbXNlbGYgdG8gaXQgYXMgdG8gcHJpdmF0ZSBidXNpbmVzcyBvZiBoaXMgb3duOwoJCQkJCXdoaWxlIG9uIHRoZSBvdGhlciBoYW5kIHZpcnR1ZSB3aWxsIGJlIGV4ZXJjaXNlZCB0byBtYWtlIOKAmGZyaWVuZHMnCgkJCQkJZ29vZHMgY29tbW9uIGdvb2RzLOKAmSBhcyB0aGUgcHJvdmVyYjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgc2F5aW5nIHdhcyBhc2NyaWJlZCB0byBQeXRoZ2Fnb3Jhcy48L25vdGU+IGdvZXMsIGZvciB0aGUgcHVycG9zZSBvZgoJCQkJCXVzZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5TdWNoIGEgc3lzdGVtIGV4aXN0cyBldmVuIG5vdwoJCQkJCWluIG91dGxpbmUgaW4gc29tZSBzdGF0ZXMsIHNob3dpbmcgdGhhdCBpdCBpcyBub3QgaW1wcmFjdGljYWJsZSwgYW5kIGVzcGVjaWFsbHkKCQkJCQlpbiB0aGUgb25lcyB0aGF0IGFyZSB3ZWxsLWFkbWluaXN0ZXJlZCBwYXJ0cyBvZiBpdCBhcmUgcmVhbGl6ZWQgYWxyZWFkeSBhbmQKCQkJCQlwYXJ0cyBtaWdodCBiZSByZWFsaXplZDsgZm9yIGluZGl2aWR1YWxzIHdoaWxlIG93bmluZyB0aGVpciBwcm9wZXJ0eSBwcml2YXRlbHkKCQkJCQlwdXQgdGhlaXIgb3duIHBvc3Nlc3Npb25zIGF0IHRoZSBzZXJ2aWNlIG9mIHRoZWlyIGZyaWVuZHMgYW5kIG1ha2UgdXNlIG9mIHRoZWlyCgkJCQkJZnJpZW5kcycgcG9zc2Vzc2lvbnMgYXMgY29tbW9uIHByb3BlcnR5OyBmb3IgaW5zdGFuY2UgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idHBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idHBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gcGVvcGxlIHVzZSBvbmUgYW5vdGhlcidzIHNsYXZlcyBhcwoJCQkJCXZpcnR1YWxseSB0aGVpciBvd24sIGFzIHdlbGwgYXMgaG9yc2VzIGFuZCBob3VuZHMsIGFuZCBhbHNvIHVzZSB0aGUgcHJvZHVjZSBpbgoJCQkJCXRoZSBmaWVsZHMgdGhyb3VnaG91dCB0aGUgY291bnRyeSBpZiB0aGV5IG5lZWQgcHJvdmlzaW9ucyBvbiBhIGpvdXJuZXkuIEl0IGlzCgkJCQkJY2xlYXIgdGhlcmVmb3JlIHRoYXQgaXQgaXMgYmV0dGVyIGZvciBwb3NzZXNzaW9ucyB0byBiZSBwcml2YXRlbHkgb3duZWQsIGJ1dCB0bwoJCQkJCW1ha2UgdGhlbSBjb21tb24gcHJvcGVydHkgaW4gdXNlOyBhbmQgdG8gdHJhaW4gdGhlIGNpdGl6ZW5zIHRvIHRoaXMgaXMgdGhlCgkJCQkJc3BlY2lhbCB0YXNrIG9mIHRoZSBsZWdpc2xhdG9yLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZAoJCQkJCW1vcmVvdmVyIHRvIGZlZWwgdGhhdCBhIHRoaW5nIGlzIG9uZSdzIHByaXZhdGUgcHJvcGVydHkgbWFrZXMgYW4gaW5leHByZXNzaWJseQoJCQkJCWdyZWF0IGRpZmZlcmVuY2UgZm9yIHBsZWFzdXJlOyBmb3IgdGhlIHVuaXZlcnNhbCBmZWVsaW5nIG9mIGxvdmUgZm9yIG9uZXNlbGYgaXMKCQkJCQlzdXJlbHkgbm90IHB1cnBvc2VsZXNzLCBidXQgYSBuYXR1cmFsIGluc3RpbmN0LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI2M2IiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1263b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPlNlbGZpc2huZXNzIG9uIHRoZQoJCQkJCW90aGVyIGhhbmQgaXMganVzdGx5IGJsYW1lZDsgYnV0IHRoaXMgaXMgbm90IHRvIGxvdmUgb25lc2VsZiBidXQgdG8gbG92ZSBvbmVzZWxmCgkJCQkJbW9yZSB0aGFuIG9uZSBvdWdodCwganVzdCBhcyBjb3ZldG91c25lc3MgbWVhbnMgbG92aW5nIG1vbmV5IHRvCgkJCQkJZXhjZXNz4oCUc2luY2Ugc29tZSBsb3ZlIG9mIHNlbGYsIG1vbmV5IGFuZCBzbyBvbiBpcyBwcmFjdGljYWxseQoJCQkJCXVuaXZlcnNhbC4gTW9yZW92ZXIsIHRvIGJlc3RvdyBmYXZvcnMgYW5kIGFzc2lzdGFuY2Ugb24gZnJpZW5kcyBvciB2aXNpdG9ycyBvcgoJCQkJCWNvbXJhZGVzIGlzIGEgZ3JlYXQgcGxlYXN1cmUsIGFuZCBhIGNvbmRpdGlvbiBvZiB0aGlzIGlzIHRoZSBwcml2YXRlIG93bmVyc2hpcAoJCQkJCW9mIHByb3BlcnR5LiA8L3RyYW5zbGF0aW9uPg=="
translation['2.1263b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi43IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlc2UgYWR2YW50YWdlcwoJCQkJCXRoZXJlZm9yZSBkbyBub3QgY29tZSB0byB0aG9zZSB3aG8gY2FycnkgdGhlIHVuaWZpY2F0aW9uIG9mIHRoZSBzdGF0ZSB0b28gZmFyOwoJCQkJCWFuZCBpbiBhZGRpdGlvbiB0byB0aGlzIHRoZXkgbWFuaWZlc3RseSBkbyBhd2F5IHdpdGggdGhlIHByYWN0aWNlIG9mIHR3bwoJCQkJCXZpcnR1ZXMsIHRlbXBlcmFuY2UgaW4gcmVsYXRpb24gdG8gd29tZW4g77yIZm9yIGl0IGlzIGEgbm9ibGUgZGVlZCB0bwoJCQkJCXJlZnJhaW4gZnJvbSBvbmUgdGhyb3VnaCB0ZW1wZXJhbmNlIHdoZW4gc2hlIGJlbG9uZ3MgdG8gYW5vdGhlcu+8iSBhbmQKCQkJCQlsaWJlcmFsaXR5IGluIHJlbGF0aW9uIHRvIHBvc3Nlc3Npb25zIO+8iGZvciBvbmUgd2lsbCBub3QgYmUgYWJsZSB0bwoJCQkJCWRpc3BsYXkgbGliZXJhbGl0eSBub3IgcGVyZm9ybSBhIHNpbmdsZSBsaWJlcmFsIGFjdGlvbiwgc2luY2UgdGhlIGFjdGl2ZQoJCQkJCWV4ZXJjaXNlIG9mIGxpYmVyYWxpdHkgdGFrZXMgcGxhY2UgaW4gdGhlIHVzZSBvZgoJCQkJCQlwb3NzZXNzaW9uc++8iS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoIGxlZ2lzbGF0aW9uIHRoZXJlZm9yZSBoYXMgYW4gYXR0cmFjdGl2ZSBhcHBlYXJhbmNlLAoJCQkJCWFuZCBtaWdodCBiZSB0aG91Z2h0IHRvIGJlIGh1bWFuZTsgZm9yIGhlIHdobyBpcyB0b2xkIGFib3V0IGl0IHdlbGNvbWVzIGl0IHdpdGgKCQkJCQlnbGFkbmVzcywgdGhpbmtpbmcgdGhhdCBpdCB3aWxsIHJlc3VsdCBpbiBhIG1hcnZlbGxvdXMgZnJpZW5kbGluZXNzIG9mIGV2ZXJ5Ym9keQoJCQkJCXRvd2FyZHMgZXZlcnlib2R5LCBlc3BlY2lhbGx5IHdoZW4gc29tZWJvZHkgZGVub3VuY2VzIHRoZSBldmlscyBhdCBwcmVzZW50CgkJCQkJZXhpc3RpbmcgaW4gc3RhdGVzIGFzIGR1ZSB0byB0aGUgZmFjdCB0aGF0PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPndlYWx0aCBpcyBub3Qgb3duZWQgaW4gY29tbW9u4oCUIEkgbWVhbiBsYXdzdWl0cwoJCQkJCWJldHdlZW4gY2l0aXplbnMgYWJvdXQgYnJlYWNoIG9mIGNvbnRyYWN0LCBhbmQgdHJpYWxzIGZvciBwZXJqdXJ5LCBhbmQgdGhlCgkJCQkJZmxhdHRlcnkgb2YgdGhlIHJpY2guIDwvdHJhbnNsYXRpb24+"
translation['2.1264a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi45IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZSByZWFsCgkJCQkJY2F1c2Ugb2YgYWxsIHRoZXNlIGV2aWxzIGlzIG5vdCB0aGUgYWJzZW5jZSBvZiBjb21tdW5pc20sIGJ1dCB3aWNrZWRuZXNzLCBzaW5jZQoJCQkJCXdlIHNlZSBmYXIgbW9yZSBxdWFycmVscyBvY2N1cnJpbmcgYW1vbmcgdGhvc2Ugd2hvIG93biBvciB1c2UgcHJvcGVydHkgaW4gY29tbW9uCgkJCQkJdGhhbiBhbW9uZyB0aG9zZSB3aG8gaGF2ZSB0aGVpciBlc3RhdGVzIHNlcGFyYXRlOyBidXQgd2Ugbm90aWNlIHRoYXQgdGhvc2Ugd2hvCgkJCQkJcXVhcnJlbCBhcyBhIHJlc3VsdCBvZiB0aGVpciBwYXJ0bmVyc2hpcHMgYXJlIGZldyB3aGVuIGNvbXBhcmVkIHdpdGggdGhlIHRvdGFsCgkJCQkJbnVtYmVyIG9mIHByaXZhdGUgb3duZXJzLiBBbmQgYWdhaW4gaXQgaXMganVzdCB0byBzdGF0ZSBub3Qgb25seSBhbGwgdGhlIGV2aWxzCgkJCQkJdGhhdCBtZW4gd2lsbCBsb3NlIGJ5IGFkb3B0aW5nIGNvbW11bmlzbSwgYnV0IGFsc28gYWxsIHRoZSBnb29kIHRoaW5nczsgYW5kIGxpZmUKCQkJCQlpbiBzdWNoIGNpcmN1bXN0YW5jZXMgaXMgc2VlbiB0byBiZSB1dHRlcmx5IGltcG9zc2libGUuIFRoZSBjYXVzZSBvZgoJCQkJCVNvY3JhdGVzJyBlcnJvciBtdXN0IGJlIGRlZW1lZCB0byBiZSB0aGF0IGhpcwoJCQkJCWZ1bmRhbWVudGFsIGFzc3VtcHRpb24gd2FzIGluY29ycmVjdC4gSXQgaXMgY2VydGFpbiB0aGF0IGluIGEgd2F5IGJvdGggdGhlCgkJCQkJaG91c2Vob2xkIGFuZCB0aGUgc3RhdGUgc2hvdWxkIGJlIGEgdW5pdCwgYnV0IHRoZXkgc2hvdWxkIG5vdCBiZSBzbyBpbiBldmVyeQoJCQkJCXdheS4gRm9yIGluIG9uZSB3YXkgdGhlIHN0YXRlIGFzIGl0cyB1bmlmaWNhdGlvbiBwcm9jZWVkcyB3aWxsIGNlYXNlIHRvIGJlIGEKCQkJCQlzdGF0ZSwgYW5kIGluIGFub3RoZXIgd2F5LCB0aG91Z2ggaXQgY29udGludWVzIGEgc3RhdGUsIHlldCBieSBjb21pbmcgbmVhciB0bwoJCQkJCWNlYXNpbmcgdG8gYmUgb25lIGl0IHdpbGwgYmUgYSB3b3JzZSBzdGF0ZSwganVzdCBhcyBpZiBvbmUgdHVybmVkIGEgaGFybW9ueSBpbnRvCgkJCQkJdW5pc29uIG9yIGEgcmh5dGhtIGludG8gYSBzaW5nbGUgZm9vdC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHByb3BlciB0aGluZyBpcyBmb3IgdGhlIHN0YXRlLCB3aGlsZSBiZWluZyBhCgkJCQkJbXVsdGl0dWRlLCB0byBiZSBtYWRlIGEgcGFydG5lcnNoaXAgYW5kIGEgdW5pdHkgYnkgbWVhbnMgb2YgZWR1Y2F0aW9uLCBhcyBoYXMKCQkJCQliZWVuIHNhaWQgYmVmb3JlIGFuZCBpdCBpcyBzdHJhbmdlIHRoYXQgdGhlIHZlcnkgcGhpbG9zb3BoZXIgd2hvIGludGVuZHMgdG8KCQkJCQlpbnRyb2R1Y2UgYSBzeXN0ZW0gb2YgZWR1Y2F0aW9uIGFuZCB0aGlua3MgdGhhdCB0aGlzIHdpbGwgbWFrZSB0aGUgY2l0eSBtb3JhbGx5CgkJCQkJZ29vZCBzaG91bGQgZmFuY3kgdGhhdCBoZSBjYW4gcmVndWxhdGUgc29jaWV0eSBieSBzdWNoIG1lYXN1cmVzIGFzIGhhdmUgYmVlbgoJCQkJCW1lbnRpb25lZCBpbnN0ZWFkIG9mIGJ5IG1hbm5lcnMgYW5kIGN1bHR1cmUgYW5kIGxhd3MsIGp1c3QgYXMgdGhlIGxlZ2lzbGF0b3IKCQkJCQlpbnRyb2R1Y2VkIGNvbW11bml0eSBvZiBwcm9wZXJ0eSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gYW5kIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTIwNTYiPkNyZXRlPC9wbGFjZU5hbWU+IGJ5CgkJCQkJdGhlIGluc3RpdHV0aW9uIG9mIHB1YmxpYyBtZXNzZXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjY0YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1264a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkFuZCB0aGlzIHZlcnkgcG9pbnQgYWxzbyBtdXN0CgkJCQkJbm90IGJlIGlnbm9yZWQsIHRoYXQgYXR0ZW50aW9uIG11c3QgYmUgcGFpZCB0byBsZW5ndGggb2YgdGltZSBhbmQgdG8gdGhlIGxvbmcKCQkJCQlwZXJpb2Qgb2YgeWVhcnMsIGluIHdoaWNoIGl0IHdvdWxkIG5vdCBoYXZlIGVzY2FwZWQgbm90aWNlIGlmIHRoZXNlIG1lYXN1cmVzCgkJCQkJd2VyZSBnb29kIG9uZXM7IGZvciBuZWFybHkgYWxsIG9mIHRoZW0gaGF2ZSBiZWVuIGRpc2NvdmVyZWQgYWxyZWFkeSwgYWx0aG91Z2gKCQkJCQlzb21lIG9mIHRoZW0gaGF2ZSBub3QgYmVlbiBjb2xsZWN0ZWQgdG9nZXRoZXIgYW5kIG90aGVycyB0aG91Z2ggYnJvdWdodCB0bwoJCQkJCWtub3dsZWRnZSBhcmUgbm90IHB1dCBpbnRvIHByYWN0aWNlLiA8L3RyYW5zbGF0aW9uPg=="
translation['2.1264a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB0aGVpciB2YWx1ZSB3b3VsZCBiZWNvbWUgbW9zdCBtYW5pZmVzdCBpZiBvbmUgY291bGQgc2VlIHN1Y2ggYQoJCQkJCWNvbnN0aXR1dGlvbiBpbiBhY3R1YWwgcHJvY2VzcyBvZiBmb3JtYXRpb247IGZvciBvbmUgd2lsbCBvbmx5IGJlIGFibGUgdG8KCQkJCQljb25zdHJ1Y3QgUGxhdG8ncyBzdGF0ZSBieSBpbnRyb2R1Y2luZyBpdHMgcGFydGl0aW9ucyBhbmQgZGl2aWRpbmcgdXAgdGhlCgkJCQkJY29tbXVuaXR5IGludG8gY29tbW9uIG1lc3NlcyBhbmQgYWxzbyBpbnRvIGJyb3RoZXJob29kcyBhbmQgdHJpYmVzLiBTbyB0aGF0IGluCgkJCQkJdGhlIHVwc2hvdCBubyBvdGhlciByZWd1bGF0aW9uIHdpbGwgaGF2ZSBiZWVuIGVuYWN0ZWQgZXhjZXB0IHRoZSBleGVtcHRpb24gb2YKCQkJCQl0aGUgR3VhcmRpYW5zIGZyb20gdGhlIHdvcmsgb2YgYWdyaWN1bHR1cmUsIHdoaWNoIGlzIGEgbWVhc3VyZSB0aGF0IGV2ZW4gbm93IHRoZQoJCQkJCVNwYXJ0YW5zIGF0dGVtcHQgdG8gaW50cm9kdWNlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Nb3Jlb3ZlciwgdGhlCgkJCQkJd29ya2luZyBvZiB0aGUgY29uc3RpdHV0aW9uIGFzIGEgd2hvbGUgaW4gcmVnYXJkIHRvIHRoZSBtZW1iZXJzIG9mIHRoZSBzdGF0ZSBoYXMKCQkJCQlhbHNvIG5vdCBiZWVuIGRlc2NyaWJlZCBieSBTb2NyYXRlcywKCQkJCQlub3IgaXMgaXQgZWFzeSB0byBzYXkgd2hhdCBpdCB3aWxsIGJlLiBZZXQgdGhlIGdlbmVyYWwgbWFzcyBvZiB0aGUgY2l0aXplbnMgb2YKCQkJCQl0aGUgb3RoZXIgY2xhc3NlcyBtYWtlIGFsbW9zdCB0aGUgYnVsayBvZiB0aGUgc3RhdGUsIGFuZCBhYm91dCB0aGVzZSBubyBkZWZpbml0ZQoJCQkJCXJlZ3VsYXRpb25zIGFyZSBsYWlkIGRvd24sIGFzIHRvIHdoZXRoZXIgdGhlIEZhcm1lcnMgYWxzbyBhcmUgdG8gaGF2ZSB0aGVpcgoJCQkJCXByb3BlcnR5IGluIGNvbW1vbiBvciB0byBob2xkIGl0IGluIHByaXZhdGUgb3duZXJzaGlwLCBhbmQgYWxzbyB3aGV0aGVyCgkJCQkJY29tbXVuaXR5IG9mIHdpdmVzIGFuZCBjaGlsZHJlbiBpcyB0byBhcHBseSB0byB0aGVtIG9yIG5vdC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIGlmIHRoZSBGYXJtZXJzIGFyZSB0byBoYXZlIHRoZSBzYW1lIGNvbXBsZXRlCgkJCQkJY29tbXVuaXNtLCB3aGF0IHdpbGwgYmUgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGVtIGFuZCB0aGUgR3VhcmRpYW4gY2xhc3M/IG9yCgkJCQkJd2hhdCBhZHZhbnRhZ2Ugd2lsbCB0aGV5IGdhaW4gYnkgc3VibWl0dGluZyB0byB0aGVpciBnb3Zlcm5tZW50PyBvciB3aGF0CgkJCQkJY29uc2lkZXJhdGlvbiB3aWxsIGluZHVjZSB0aGVtIHRvIHN1Ym1pdCB0bzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50aGUgZ292ZXJubWVudCwgdW5sZXNzIHRoZSBHdWFyZGlhbnMgYWRvcHQgc29tZSBjbGV2ZXIgZGV2aWNlCgkJCQkJbGlrZSB0aGF0IG9mIHRoZSBDcmV0YW5zPyBUaGVzZSBoYXZlIGNvbmNlZGVkIHRvIHRoZWlyIHNsYXZlcyBhbGwgdGhlIHNhbWUKCQkJCQlyaWdodHMgYXMgdGhleSBoYXZlIHRoZW1zZWx2ZXMgZXhjZXB0IHRoYXQgdGhleSBhcmUgZm9yYmlkZGVuIGd5bW5hc3RpYwoJCQkJCWV4ZXJjaXNlcyBhbmQgdGhlIHBvc3Nlc3Npb24gb2YgYXJtcy4gQnV0IGlmIHRoZSBmYW1pbHkgbGlmZSBhbmQgcHJvcGVydHkgb2YgdGhlCgkJCQkJRmFybWVycyBhcmUgdG8gYmUgc3VjaCBhcyB0aGV5IGFyZSBpbiBvdGhlciBzdGF0ZXMsIHdoYXQgc29ydCBvZiBjb21tdW5pc20gd2lsbAoJCQkJCXRoZXJlIGJlPyBGb3IgdGhlcmUgd2lsbCBpbmV2aXRhYmx5IGJlIHR3byBzdGF0ZXMgaW4gb25lLCBhbmQgdGhlc2UgYW50YWdvbmlzdGljCgkJCQkJdG8gb25lIGFub3RoZXIuIEZvciBTb2NyYXRlcyBtYWtlcyB0aGUKCQkJCQlHdWFyZGlhbnMgYSBzb3J0IG9mIGdhcnJpc29uLCB3aGlsZSB0aGUgRmFybWVycywgQXJ0aXNhbnMgYW5kIG90aGVyIGNsYXNzZXMgYXJlCgkJCQkJdGhlIGNpdGl6ZW5zLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciDvvIhvbWl0dGluZyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM6/4b26z4I8L2ZvcmVpZ24+IGJlZm9yZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM61z4fOveG9t8+EzrHPgjwvZm9yZWlnbj7vvIkg4oCYRm9yCgkJCQkJCQlTb2NyYXRlcyBtYWtlcyBvbmUgc2V0IG9mIG1lbiBndWFyZGlhbnMsIGEKCQkJCQkJc29ydCBvZiBnYXJyaXNvbiwgYW5kIGFub3RoZXIgc2V0IGZhcm1lcnMgYW5kIGFydGlzYW5zIGFuZCBjaXRpemVucyBvZiB0aGUKCQkJCQkJb3RoZXIgc29ydHMu4oCZPC9ub3RlPgoJCQkJCTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Ezr/hvbrPgjwvZm9yZWlnbj4gYmVmb3JlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+EzrXPh8694b23z4TOsc+CPC9mb3JlaWduPu+8iSDigJhGb3IKCQkJCQkJCVNvY3JhdGVzIG1ha2VzIG9uZSBzZXQgb2YgbWVuIGd1YXJkaWFucywgYQoJCQkJCQlzb3J0IG9mIGdhcnJpc29uLCBhbmQgYW5vdGhlciBzZXQgZmFybWVycyBhbmQgYXJ0aXNhbnMgYW5kIGNpdGl6ZW5zIG9mIHRoZQoJCQkJCQlvdGhlciBzb3J0cy7igJk8L3RyYW5zbGF0aW9uPg=="
translation['2.1264b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBxdWFycmVscyBhbmQgbGF3c3VpdHMgYW5kIGFsbAoJCQkJCXRoZSBvdGhlciBldmlscyB3aGljaCBhY2NvcmRpbmcgdG8KCQkJCQlTb2NyYXRlcyBleGlzdCBpbiBhY3R1YWwgc3RhdGVzIHdpbGwgYWxsIGJlIGZvdW5kIGFtb25nIGhpcwoJCQkJCWNpdGl6ZW5zIHRvby4gWWV0IGhlIHNheXMgdGhhdCBvd2luZyB0byB0aGVpciBlZHVjYXRpb24gdGhleSB3aWxsIG5vdCBuZWVkIG1hbnkKCQkJCQlyZWd1bGF0aW9ucyBzdWNoIGFzIGNpdHkgYW5kIG1hcmtldCBieS1sYXdzIGFuZCB0aGUgb3RoZXIgcmVndWxhdGlvbnMgb2YgdGhhdAoJCQkJCXNvcnQsIGFsdGhvdWdoIGhlIGFzc2lnbnMgaGlzIGVkdWNhdGlvbiBvbmx5IHRvIHRoZSBHdWFyZGlhbnMuIEFnYWluLCBoZSBtYWtlcwoJCQkJCXRoZSBGYXJtZXJzIHRoZSBtYXN0ZXJzIG9mIHRoZSBlc3RhdGVzLCBmb3Igd2hpY2ggdGhleSBwYXkgcmVudDsgYnV0IHRoZXkgYXJlCgkJCQkJbGlrZWx5IHRvIGJlIGZhciBtb3JlIHVubWFuYWdlYWJsZSBhbmQgcmViZWxsaW91cyB0aGFuIHRoZSBjbGFzc2VzIG9mIGhlbG90cywKCQkJCQlzZXJmcyBhbmQgc2xhdmVzIGluIGNlcnRhaW4gc3RhdGVzIHRvZGF5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ib3dldmVyLCB3aGV0aGVyIHRoaXMgY29tbXVuaXNtIGlzIHRvIGJlIGNvbXB1bHNvcnkgZm9yCgkJCQkJdGhlIEZhcm1lcnMgaW4gdGhlIHNhbWUgd2F5IGFzIGZvciB0aGUgR3VhcmRpYW5zIG9yIHdoZXRoZXIgaXQgaXMgbm90LCBoYXMgYXMgYQoJCQkJCW1hdHRlciBvZiBmYWN0IG5vdCBiZWVuIGRlZmluaXRlbHkgc3RhdGVkIGFueXdoZXJlLCBub3IgaXMgdGhlcmUgYW55IGluZm9ybWF0aW9uCgkJCQkJYWJvdXQgdGhlIGNvbm5lY3RlZCBxdWVzdGlvbnMsIHdoYXQgYXJlIHRvIGJlIHRoZSBwb2xpdGljYWwgZnVuY3Rpb25zIGFuZCB0aGUKCQkJCQllZHVjYXRpb24gb2YgdGhlIGxvd2VyIGNsYXNzZXMsIGFuZCB0aGUgbGF3cyBhZmZlY3RpbmcgdGhlbS4gQnV0IGl0IGlzIG5vdCBlYXN5CgkJCQkJdG8gZGlzY292ZXIgdGhlIGFuc3dlcnMgdG8gdGhlc2UgcXVlc3Rpb25zLCB5ZXQgdGhlIGNoYXJhY3RlciBvZiB0aGUgbG93ZXIKCQkJCQljbGFzc2VzIGlzIG9mIG5vIHNtYWxsIGltcG9ydGFuY2UgZm9yIHRoZSBwcmVzZXJ2YXRpb24gb2YgdGhlIGNvbW11bml0eSBvZiB0aGUKCQkJCQlHdWFyZGlhbnMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjY0YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1264b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkJ1dCBhZ2FpbiwgaWYgU29jcmF0ZXMKCQkJCQlpbnRlbmRzIHRvIG1ha2UgdGhlIEZhcm1lcnMgaGF2ZSB0aGVpciB3aXZlcyBpbiBjb21tb24gYnV0IHRoZWlyIHByb3BlcnR5CgkJCQkJcHJpdmF0ZSwgd2hvIGlzIHRvIG1hbmFnZSB0aGUgaG91c2Vob2xkIGluIHRoZSB3YXkgaW4gd2hpY2ggdGhlIHdvbWVuJ3MgaHVzYmFuZHMKCQkJCQl3aWxsIGNhcnJ5IG9uIHRoZSB3b3JrIG9mIHRoZSBmYXJtcz8gQW5kIGlmIHRoZSBwcm9wZXJ0eSBhbmQgdGhlIHdpdmVzIG9mIHRoZQoJCQkJCUZhcm1lcnMgYXJlIHRvIGJlIGNvbW1vbiAuIC4gLiA8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBwYXNzYWdlIGhhcwoJCQkJCQliZWVuIGxvc3QgaGVyZS48L25vdGU+CgkJCQkJPC90cmFuc2xhdGlvbj4="
translation['2.1264b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdAoJCQkJCWlzIGFsc28gc3RyYW5nZSB0aGF0IFNvY3JhdGVzIGVtcGxveXMKCQkJCQl0aGUgY29tcGFyaXNvbiBvZiB0aGUgbG93ZXIgYW5pbWFscyB0byBzaG93IHRoYXQgdGhlIHdvbWVuIGFyZSB0byBoYXZlIHRoZSBzYW1lCgkJCQkJb2NjdXBhdGlvbnMgYXMgdGhlIG1lbiwgY29uc2lkZXJpbmcgdGhhdCBhbmltYWxzIGhhdmUgbm8gaG91c2Vob2xkcyB0byBtYW5hZ2UuCgkJCQkJQWxzbyBTb2NyYXRlcycgbWV0aG9kIG9mIGFwcG9pbnRpbmcgdGhlCgkJCQkJbWFnaXN0cmF0ZXMgaXMgbm90IGEgc2FmZSBvbmUuIEZvciBoZSBtYWtlcyB0aGUgc2FtZSBwZXJzb25zIGhvbGQgb2ZmaWNlIGFsd2F5czsKCQkJCQlidXQgdGhpcyBvY2Nhc2lvbnMgcmViZWxsaW9uIGV2ZW4gYW1vbmcgcGVvcGxlIG9mIG5vIHNwZWNpYWwgZGlzdGluY3Rpb24sIG11Y2gKCQkJCQltb3JlIHNvIHRoZW4gYW1vbmcgaGlnaC1zcGlyaXRlZCBhbmQgd2FybGlrZSBtZW4uIEJ1dCBpdCBpcyBjbGVhciB0aGF0IGhlIGlzCgkJCQkJY29tcGVsbGVkIHRvIG1ha2UgdGhlIHNhbWUgcGVyc29ucyBnb3Zlcm4gYWx3YXlzLCBmb3IgdGhlIGdvZC1naXZlbiBhZG1peHR1cmUgb2YKCQkJCQlnb2xkIGluIHRoZSBzb3VsIGlzIG5vdCBiZXN0b3dlZCBvbiBzb21lIGF0IG9uZSB0aW1lIGFuZCBvdGhlcnMgYXQgYW5vdGhlciB0aW1lLAoJCQkJCWJ1dCBpcyBhbHdheXMgaW4gdGhlIHNhbWUgbWVuLCBhbmQKCQkJCQlTb2NyYXRlcyBzYXlzIHRoYXQgYXQgdGhlIG1vbWVudCBvZiBiaXJ0aCBzb21lIG1lbiByZWNlaXZlIGFuCgkJCQkJYWRtaXh0dXJlIG9mIGdvbGQgYW5kIG90aGVycyBvZiBzaWx2ZXIgYW5kIHRob3NlIHdobyBhcmUgdG8gYmUgdGhlIEFydGlzYW5zIGFuZAoJCQkJCUZhcm1lcnMgYW4gYWRtaXh0dXJlIG9mIGNvcHBlciBhbmQgaXJvbi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjE2IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGFnYWluLCBhbHRob3VnaCBoZSBkZXByaXZlcyB0aGUgR3VhcmRpYW5zIG9mCgkJCQkJaGFwcGluZXNzLCBoZSBzYXlzIHRoYXQgaXQgaXMgdGhlIGR1dHkgb2YgdGhlIGxhdy1naXZlciB0byBtYWtlIHRoZSB3aG9sZSBjaXR5CgkJCQkJaGFwcHkuIEJ1dCBpdCBpcyBub3QgcG9zc2libGUgZm9yIHRoZSB3aG9sZSB0byBiZSBoYXBweSB1bmxlc3MgbW9zdCBvciBhbGwgb2YKCQkJCQlpdHMgcGFydHMsIG9yIHNvbWUgb2YgdGhlbSwgcG9zc2VzcyBoYXBwaW5lc3MuIEZvciBoYXBwaW5lc3MgaXMgbm90IGEgdGhpbmcgb2YKCQkJCQl0aGUgc2FtZSBzb3J0PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFzIGJlaW5nIGFuIGV2ZW4gbnVtYmVyOgoJCQkJCXRoYXQgbWF5IGJlbG9uZyB0byBhIHdob2xlIGJ1dCBub3QgdG8gZWl0aGVyIG9mIGl0cyBwYXJ0cywgYnV0IGhhcHBpbmVzcyBjYW5ub3QKCQkJCQliZWxvbmcgdG8gdGhlIHdob2xlIGFuZCBub3QgdG8gaXRzIHBhcnRzLiBCdXQgeWV0LCBpZiB0aGUgR3VhcmRpYW5zIGFyZSBub3QKCQkJCQloYXBweSwgd2hhdCBvdGhlciBjbGFzcyBpcz8gRm9yIGNsZWFybHkgdGhlIEFydGlzYW5zIGFuZCB0aGUgZ2VuZXJhbCBtYXNzIG9mIHRoZQoJCQkJCXZ1bGdhciBjbGFzc2VzIGFyZSBub3QuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBSZXB1YmxpYyBkaXNjdXNzZWQgYnkKCQkJCQkJU29jcmF0ZXMgdGhlcmVmb3JlIHBvc3Nlc3NlcyB0aGVzZQoJCQkJCWRpZmZpY3VsdGllcyBhbmQgYWxzbyBvdGhlcnMgbm90IHNtYWxsZXIgdGhhbiB0aGVzZS48L3RyYW5zbGF0aW9uPg=="
translation['2.1265a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBhbG1vc3QgdGhlIHNhbWUgaG9sZHMKCQkJCQlnb29kIG9mIHRoZSA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5MYXdzPC90aXRsZT4gYWxzbywgd2hpY2ggd2FzIHdyaXR0ZW4gbGF0ZXIsIHNvIHRoYXQgaXQgd2lsbAoJCQkJCWJlIGFkdmFudGFnZW91cyB0byBtYWtlIHNvbWUgc21hbGwgZXhhbWluYXRpb24gb2YgdGhlIGNvbnN0aXR1dGlvbiBkZXNjcmliZWQgaW4KCQkJCQl0aGF0IGJvb2sgYXMgd2VsbC4gRm9yIGluIHRoZSA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5SZXB1YmxpYzwvdGl0bGU+CgkJCQkJU29jcmF0ZXMgaGFzIGxhaWQgZG93biBkZXRhaWxzIGFib3V0CgkJCQkJdmVyeSBmZXcgbWF0dGVyc+KAlHJlZ3VsYXRpb25zIGFib3V0IGNvbW11bml0eSBvZiB3aXZlcyBhbmQgY2hpbGRyZW4gYW5kCgkJCQkJYWJvdXQgcHJvcGVydHksIGFuZCB0aGUgc3RydWN0dXJlIG9mIHRoZSBjb25zdGl0dXRpb24g77yIZm9yIHRoZSBtYXNzIG9mCgkJCQkJdGhlIHBvcHVsYXRpb24gaXMgZGl2aWRlZCBpbnRvIHR3byBwYXJ0cywgb25lIGZvcm1pbmcgdGhlIEZhcm1lciBjbGFzcyBhbmQgdGhlCgkJCQkJb3RoZXIgdGhlIGNsYXNzIHRoYXQgZGVmZW5kcyB0aGUgc3RhdGUgaW4gd2FyLCBhbmQgdGhlcmUgaXMgYSB0aGlyZCBjbGFzcyBkcmF3bgoJCQkJCWZyb20gdGhlc2UgbGF0dGVyIHRoYXQgZm9ybXMgdGhlIGNvdW5jaWwgYW5kIGdvdmVybnMgdGhlIHN0YXRl77yJLCBidXQKCQkJCQlhYm91dCB0aGUgRmFybWVycyBhbmQgdGhlIEFydGlzYW5zLCB3aGV0aGVyIHRoZXkgYXJlIGV4Y2x1ZGVkIGZyb20gZ292ZXJubWVudCBvcgoJCQkJCWhhdmUgc29tZSBwYXJ0IGluIGl0LCBhbmQgd2hldGhlciB0aGVzZSBjbGFzc2VzIGFsc28gYXJlIHRvIHBvc3Nlc3MgYXJtcyBhbmQgdG8KCQkJCQlzZXJ2ZSBpbiB3YXIgd2l0aCB0aGUgb3RoZXJzIG9yIG5vdCwgb24gdGhlc2UgcG9pbnRzCgkJCQkJU29jcmF0ZXMgaGFzIG1hZGUgbm8gZGVjaXNpb24sIGJ1dCB0aG91Z2ggaGUKCQkJCQl0aGlua3MgdGhhdCB0aGUgd29tZW4gb3VnaHQgdG8gc2VydmUgaW4gd2FyIHdpdGggdGhlIEd1YXJkaWFucyBhbmQgc2hhcmUgdGhlCgkJCQkJc2FtZSBlZHVjYXRpb24sIHRoZSByZXN0IG9mIHRoZSBkaXNjb3Vyc2UgaGUgaGFzIGZpbGxlZCB1cCB3aXRoIGV4dGVybmFsIHRvcGljcywKCQkJCQlhbmQgYWJvdXQgdGhlIHNvcnQgb2YgZWR1Y2F0aW9uIHdoaWNoIGl0IGlzIHByb3BlciBmb3IgdGhlIEd1YXJkaWFucyB0bwoJCQkJCQloYXZlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgbGFzdCBjbGF1c2UsIOKAmGFuZAoJCQkJCQlhYm91dOKAlHRvIGhhdmUs4oCZIGhhcyBhbG1vc3QgY2VydGFpbmx5IGJlZW4gbWlzcGxhY2VkIGJ5IGEKCQkJCQkJY29weWlzdCwgYW5kIHNob3VsZCBjb21lIG5lYXIgdGhlIGJlZ2lubmluZyBvZiB0aGUgc2VudGVuY2UsIGFmdGVyCgkJCQkJCeKAmGFib3V0IHByb3BlcnR5LuKAmTwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI2NWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1265a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1265a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRob3VnaCB0aGUKCQkJCQkJPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TGF3czwvdGl0bGU+IGNvbnNpc3RzIGZvciB0aGUgbW9zdCBwYXJ0IG9mIGEgdHJlYXRpc2Ugb24gbGF3LCB0aGUKCQkJCQlhdXRob3IgaGFzIHNhaWQgYSBsaXR0bGUgYWJvdXQgdGhlIGZvcm0gb2YgdGhlIGNvbnN0aXR1dGlvbiwgYW5kIGluIGEgZGVzaXJlIHRvCgkJCQkJbWFrZSB0aGlzIG1vcmUgc3VpdGFibGUgZm9yIGFkb3B0aW9uIGJ5IGFjdHVhbCBzdGF0ZXMgaGUgYnJpbmdzIGl0IHJvdW5kIGJ5CgkJCQkJZGVncmVlcyBiYWNrIHRvIHRoZSBvdGhlciBmb3JtLCB0aGF0IG9mIHRoZSA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5SZXB1YmxpYzwvdGl0bGU+LiBGb3IgZXhjZXB0CgkJCQkJY29tbXVuaXR5IGluIHdpdmVzIGFuZCBwcm9wZXJ0eSwgaGUgYXNzaWducyBhbGwgaGlzIG90aGVyIHJlZ3VsYXRpb25zIGluIHRoZQoJCQkJCXNhbWUgZm9ybSB0byBib3RoIHN0YXRlcywgZm9yIGhlIHByZXNjcmliZXMgZm9yIGJvdGggdGhlIHNhbWUgc2NoZW1lIG9mCgkJCQkJZWR1Y2F0aW9uLCBhbmQgYSBsaWZlIGRldGFjaGVkIGZyb20gbWVuaWFsIHRhc2tzLCBhbmQgc2ltaWxhcmx5IGFzIHJlZ2FyZHMKCQkJCQljb21tb24gbWVhbHMsIGV4Y2VwdCB0aGF0IGluIHRoZSBzdGF0ZSBkZXNjcmliZWQgaW4gdGhlIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkxhd3M8L3RpdGxlPiBoZQoJCQkJCXNheXMgdGhlcmUgYXJlIHRvIGJlIGNvbW1vbiBtZWFscyBmb3Igd29tZW4gYWxzbywgYW5kIGhlIG1ha2VzIHRoZSBSZXB1YmxpYwoJCQkJCWNvbnNpc3Qgb2YgYSBjbGFzcyBwb3NzZXNzaW5nIGFybXMgdGhhdCBudW1iZXJzIGEgdGhvdXNhbmQsIGJ1dCB0aGUgc3RhdGUgb2YgdGhlCgkJCQkJCTx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkxhd3M8L3RpdGxlPiBoYXMgZml2ZSB0aG91c2FuZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgaXQgaXMgdHJ1ZSB0aGF0IGFsbCB0aGUKCQkJCQlkaXNjb3Vyc2VzIG9mIFNvY3JhdGVzIHBvc3Nlc3MgYnJpbGxpYW5jZSwgY2xldmVybmVzcywgb3JpZ2luYWxpdHkgYW5kIGtlZW5uZXNzCgkJCQkJb2YgaW5xdWlyeSwgYnV0IGl0IGlzIG5vIGRvdWJ0IGRpZmZpY3VsdCB0byBiZSByaWdodCBhYm91dCBldmVyeXRoaW5nOiBmb3IKCQkJCQlpbnN0YW5jZSB3aXRoIHJlZ2FyZCB0byB0aGUgc2l6ZSBvZiBwb3B1bGF0aW9uIGp1c3QgbWVudGlvbmVkIGl0IG11c3Qgbm90IGJlCgkJCQkJb3Zlci1sb29rZWQgdGhhdCBhIHRlcnJpdG9yeSBhcyBsYXJnZSBhcyB0aGF0IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjI2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2MjYiPkJhYnlsb248L3BsYWNlTmFtZT4gd2lsbCBiZSBuZWVkZWQgZm9yIHNvIG1hbnkgaW5oYWJpdGFudHMsIG9yIHNvbWUgb3RoZXIKCQkJCQljb3VudHJ5IG9mIHVubGltaXRlZCBleHRlbnQsIHRvIHN1cHBvcnQgZml2ZSB0aG91c2FuZCBtZW4gaW4gaWRsZW5lc3MgYW5kCgkJCQkJYW5vdGhlciBzd2FybSBvZiB3b21lbiBhbmQgc2VydmFudHMgYXJvdW5kIHRoZW0gbWFueSB0aW1lcyBhcyBudW1lcm91cy4gSXQgaXMKCQkJCQlwcm9wZXIgbm8gZG91YnQgdG8gYXNzdW1lIGlkZWFsIGNvbmRpdGlvbnMsIGJ1dCBub3QgdG8gZ28gYmV5b25kIGFsbCBib3VuZHMgb2YKCQkJCQlwb3NzaWJpbGl0eS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgaXQgaXMgc2FpZCB0aGF0IGluCgkJCQkJbGF5aW5nIGRvd24gdGhlIGxhd3MgdGhlIGxlZ2lzbGF0b3IgbXVzdCBoYXZlIGhpcyBhdHRlbnRpb24gZml4ZWQgb24gdHdvCgkJCQkJCXRoaW5ncyw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIHRlcnJpdG9yeSBhbmQgdGhlCgkJCQkJcG9wdWxhdGlvbi4gQnV0IGFsc28gaXQgd291bGQgYmUgd2VsbCB0byBhZGQgdGhhdCBoZSBtdXN0IHRha2UgaW50byBhY2NvdW50IHRoZQoJCQkJCW5laWdoYm9yaW5nIHJlZ2lvbnMgYWxzbywgaWYgdGhlIGNpdHkgaXMgdG8gbGl2ZSBhIGxpZmUgb2YgcG9saXRpY3M8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBhIGxpZmUgb2YgaW50ZXJjb3Vyc2Ugd2l0aCBvdGhlciBzdGF0ZXMsCgkJCQkJCWNmLiAxMzI3YiA1LiBTb21lIG1zcy4gYWRkIOKAmG5vdCBvbmUgb2YgaXNvbGF0aW9u4oCZOyB0aGlzCgkJCQkJCWxvb2tzIGxpa2UgYW4gZXhwbGFuYXRvcnkgbm90ZSBpbnRlcnBvbGF0ZWQuPC9ub3RlPiDvvIhmb3IgaXQgaXMKCQkJCQluZWNlc3NhcnkgZm9yIGl0IHRvIHVzZSBmb3Igd2FyIG5vdCBvbmx5IHN1Y2ggYXJtcyBhcyBhcmUgc2VydmljZWFibGUgd2l0aGluIGl0cwoJCQkJCW93biB0ZXJyaXRvcnkgYnV0IGFsc28gc3VjaCBhcyBhcmUgc2VydmljZWFibGUgYWdhaW5zdCBwbGFjZXMgb3V0c2lkZQoJCQkJCWl077yJOyBhbmQgaWYgb25lIGRvZXMgbm90IGFjY2VwdCBzdWNoIGEgZGVzY3JpcHRpb24gd2hldGhlciBmb3IgdGhlIGxpZmUKCQkJCQlvZiB0aGUgaW5kaXZpZHVhbCBvciBmb3IgdGhlIGNvbW1vbiBsaWZlIG9mIHRoZSBzdGF0ZSwgeWV0IGl0IGlzIG5vbmUgdGhlIGxlc3MKCQkJCQluZWNlc3NhcnkgZm9yIHRoZSBjaXRpemVucyB0byBiZSBmb3JtaWRhYmxlIHRvIHRoZWlyIGVuZW1pZXMgbm90IG9ubHkgd2hlbiB0aGV5CgkJCQkJaGF2ZSBlbnRlcmVkIHRoZSBjb3VudHJ5IGJ1dCBhbHNvIHdoZW4gdGhleSBoYXZlIGxlZnQgaXQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdGhlIEdyZWVrIHNob3VsZCBiZSBhbHRlcmVkIHRvIGdpdmUg4oCYd2hlbgoJCQkJCQl0aGV5IGFyZSBhd2F5IGZyb20gaXQu4oCZPC9ub3RlPgoJCQkJCTwvdHJhbnNsYXRpb24+"
translation['2.1265b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy41IiB1bml0PSJMb2ViIGNoYXAiIC8+QWxzbyB0aGUgYW1vdW50IG9mIHByb3BlcnR5IHJlcXVpcmVzCgkJCQkJY29uc2lkZXJhdGlvbjogd291bGQgaXQgbm90IHBlcmhhcHMgYmUgYmV0dGVyIHRvIGRlZmluZSBpdCBkaWZmZXJlbnRseSwgYnkgYQoJCQkJCWNsZWFyZXIgZm9ybXVsYT8gVGhlIHdyaXRlciBzYXlzIHRoYXQgaXQgb3VnaHQgdG8gYmUgc3VmZmljaWVudGx5IGxhcmdlIGZvciB0aGUKCQkJCQljaXRpemVucyDigJh0byBsaXZlIGEgdGVtcGVyYXRlIGxpZmXigJnigJRhcyBpZiBvbmUgd2VyZQoJCQkJCXRvIHNheSDigJh0byBsaXZlIGEgZ29vZCBsaWZl4oCZOyBidXQgcmVhbGx5IHRoYXQgcGhyYXNlIGlzIHRvbwoJCQkJCWdlbmVyYWwsIHNpbmNlIGl0IGlzIHBvc3NpYmxlIHRvIGxpdmUgdGVtcGVyYXRlbHkgeWV0IG1pc2VyYWJseS4gQnV0IGEgYmV0dGVyCgkJCQkJZGVmaW5pdGlvbiB3b3VsZCBiZSDigJh0byBsaXZlIHRlbXBlcmF0ZWx5IGFuZCBsaWJlcmFsbHnigJkKCQkJCQnvvIhmb3IgaWYgdGhlIHR3byBhcmUgc2VwYXJhdGVkIGEgbGliZXJhbCBtb2RlIG9mIGxpZmUgaXMgbGlhYmxlIHRvIHNsaXAKCQkJCQlpbnRvIGx1eHVyeSBhbmQgYSB0ZW1wZXJhdGUgb25lIGludG8gYSBsaWZlIG9mIGhhcmRzaGlw77yJLCBzaW5jZSBzdXJlbHkKCQkJCQl0aGVzZSBhcmUgdGhlIG9ubHkgZGVzaXJhYmxlIHF1YWxpdGllcyByZWxhdGluZyB0byB0aGUgdXNlIG9mCgkJCQkJd2VhbHRo4oCUZm9yIGluc3RhbmNlIHlvdSBjYW5ub3QgdXNlIHdlYWx0aCBnZW50bHkgb3IgYnJhdmVseSwgYnV0IHlvdQoJCQkJCWNhbiB1c2UgaXQgdGVtcGVyYXRlbHkgYW5kIGxpYmVyYWxseSwgc28gdGhhdCBpdCBmb2xsb3dzIHRoYXQgdGhlc2UgYXJlCgkJCQkJcXVhbGl0aWVzIHRoYXQgaGF2ZSB0byBkbyB3aXRoIHdlYWx0aC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgaXQgaXMgYWxzbyBzdHJhbmdlIHRoYXQgYWx0aG91Z2ggZXF1YWxpemluZyBwcm9wZXJ0aWVzCgkJCQkJdGhlIHdyaXRlciBkb2VzIG5vdCByZWd1bGF0ZSB0aGUgbnVtYmVyIG9mIHRoZSBjaXRpemVucywgYnV0IGxlYXZlcyB0aGUKCQkJCQliaXJ0aC1yYXRlIHVuY29udHJvbGxlZCwgb24gdGhlIGFzc3VtcHRpb24gdGhhdCBpdCB3aWxsIGJlIHN1ZmZpY2llbnRseSBsZXZlbGxlZAoJCQkJCXVwIHRvIHRoZSBzYW1lIHRvdGFsIG93aW5nIHRvIGNoaWxkbGVzcyBtYXJyaWFnZXMsIGhvd2V2ZXIgbWFueSBjaGlsZHJlbiBhcmUKCQkJCQliZWdvdHRlbiwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNjViIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1265b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJlY2F1c2UgdGhpcyBzZWVtcyB0byB0YWtlIHBsYWNlIGluIHRoZSBzdGF0ZXMgYXQgcHJlc2VudC4gQnV0CgkJCQkJdGhpcyBvdWdodCB0byBiZSByZWd1bGF0ZWQgbXVjaCBtb3JlIGluIHRoZSBzdXBwb3NlZCBjYXNlIHRoYW4gaXQgaXMgbm93LCBmb3IKCQkJCQlub3cgbm9ib2R5IGlzIGRlc3RpdHV0ZSwgYmVjYXVzZSBlc3RhdGVzIGFyZSBkaXZpZGVkIGFtb25nIGFueSBudW1iZXIsIGJ1dCB0aGVuLAoJCQkJCWFzIGRpdmlzaW9uIG9mIGVzdGF0ZXMgd2lsbCBub3QgYmUgYWxsb3dlZCwgdGhlIGV4dHJhIGNoaWxkcmVuIHdpbGwgbmVjZXNzYXJpbHkKCQkJCQloYXZlIG5vdGhpbmcsIHdoZXRoZXIgdGhleSBhcmUgZmV3ZXIgaW4gbnVtYmVyIG9yIG1vcmUuIDwvdHJhbnNsYXRpb24+"
translation['2.1265b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy43IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIG9uZSBtaWdodCB0aGluayB0aGF0IHJlc3RyaWN0aW9uIG91Z2h0IHRvIGJlCgkJCQkJcHV0IG9uIHRoZSBiaXJ0aC1yYXRlIHJhdGhlciB0aGFuIG9uIHByb3BlcnR5LCBzbyBhcyBub3QgdG8gYWxsb3cgbW9yZSB0aGFuIGEKCQkJCQljZXJ0YWluIG51bWJlciBvZiBjaGlsZHJlbiB0byBiZSBwcm9kdWNlZCwgYW5kIHRoYXQgaW4gZml4aW5nIHRoZWlyIG51bWJlcgoJCQkJCWNvbnNpZGVyYXRpb24gc2hvdWxkIGJlIHBhaWQgdG8gdGhlIGNoYW5jZXMgb2YgaXRzIGhhcHBlbmluZyB0aGF0IHNvbWUgb2YgdGhlCgkJCQkJY2hpbGRyZW4gYm9ybiBtYXkgZGllLCBhbmQgdG8gdGhlIGFic2VuY2Ugb2YgY2hpbGRyZW4gaW4gdGhlIG90aGVyIG1hcnJpYWdlczsKCQkJCQlidXQgZm9yIHRoZSBtYXR0ZXIgdG8gYmUgbGVmdCBhbG9uZSwgYXMgaXQgaXMgaW4gbW9zdCBzdGF0ZXMsIGlzIGJvdW5kIHRvIGxlYWQKCQkJCQl0byBwb3ZlcnR5IGFtb25nIHRoZSBjaXRpemVucywgYW5kIHBvdmVydHkgcHJvZHVjZXMgc2VkaXRpb24gYW5kIGNyaW1lLiBUaGUKCQkJCQlDb3JpbnRoaWFuIFBoaWRvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PdGhlcndpc2UgdW5rbm93bi48L25vdGU+CgkJCQkJaW4gZmFjdCwgb25lIG9mIHRoZSBtb3N0IGFuY2llbnQgbGF3Z2l2ZXJzLCB0aG91Z2h0IHRoYXQgdGhlIGhvdXNlLWhvbGRzIGFuZCB0aGUKCQkJCQljaXRpemVuIHBvcHVsYXRpb24gb3VnaHQgdG8gcmVtYWluIGF0IHRoZSBzYW1lIG51bWJlcnMsIGV2ZW4gdGhvdWdoIGF0IHRoZQoJCQkJCW91dHNldCB0aGUgZXN0YXRlcyBvZiBhbGwgd2VyZSB1bmVxdWFsIGluIHNpemU7IGJ1dCBpbiBQbGF0bydzCgkJCQkJCTx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkxhd3M8L3RpdGxlPiB0aGUgb3Bwb3NpdGUgaXMgdGhlIGNhc2UuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIGVzdGF0ZXMgYXJlIGVxdWFsLCBhbmQgdGhlIG51bWJlciBvZiBob3VzZWhvbGRzCgkJCQkJCWZpeGVkLCBidXQgbm90IHRoZSBudW1iZXIgb2YgY2l0aXplbnMuPC9ub3RlPiBIb3dldmVyLCB3ZSBtdXN0IHNheSBsYXRlcgoJCQkJCXdoYXQgd2UgdGhpbmsgd291bGQgYmUgYSBiZXR0ZXIgc3lzdGVtIGluIHRoZXNlIG1hdHRlcnM7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy44IiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IGFub3RoZXIgcXVlc3Rpb24gb21pdHRlZCBpbiB0aGUKCQkJCQkJPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TGF3czwvdGl0bGU+IGlzIGhvdyB0aGUgcnVsZXJzIHdpbGwgYmUgZGlmZmVyZW50IGZyb20gdGhlIGNsYXNzZXMKCQkJCQlydWxlZDsgdGhlIHdyaXRlciBwcmVzY3JpYmVzPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRoYXQgdGhlCgkJCQkJcnVsZXJzIGFyZSB0byBzdGFuZCBpbiB0aGUgc2FtZSByZWxhdGlvbiB0byB0aGUgcnVsZWQgYXMgdGhlIHdhcnAgb2YgY2xvdGgKCQkJCQlzdGFuZHMgdG8gdGhlIHdvb2YgYnkgYmVpbmcgbWFkZSBvZiBkaWZmZXJlbnQgd29vbC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gTGF3cyA3MzRlIiB2YWxpZD0ieWVzIj5QbGF0LiBMYXdzIDczNGUgZmYuPC9iaWJsPiBJbgoJCQkJCQl3ZWF2aW5nIGNsb3RoIHRoZSB3YXJwIO+8iHRoZSB0aHJlYWRzIHNldCB1cCBmaXJzdO+8iSBtdXN0IGJlCgkJCQkJCW9mIHN0cm9uZyB3b29sLCB0aGUgd29vZiDvvIh0aGUgdGhyZWFkcyB3b3ZlbiBhY3Jvc3MgdGhlCgkJCQkJCXdhcnDvvIkgbXVzdCBiZSBzb2Z0ZXIuPC9ub3RlPiBBbmQgaW5hc211Y2ggYXMgaGUgYWxsb3dzIGEgbWFuJ3MKCQkJCQl0b3RhbCBwcm9wZXJ0eSB0byBiZSBpbmNyZWFzZWQgdXAgdG8gZml2ZSB0aW1lcyBpdHMgb3JpZ2luYWwgdmFsdWUsIGZvciB3aGF0CgkJCQkJcmVhc29uIHNob3VsZCBub3QgYW4gaW5jcmVhc2UgaW4gaGlzIGxhbmRlZCBlc3RhdGUgYmUgYWxsb3dlZCB1cCB0byBhIGNlcnRhaW4KCQkJCQlwb2ludD8gQWxzbyBpdCBtdXN0IGJlIGNvbnNpZGVyZWQgd2hldGhlciB0aGUgcHJvcG9zZWQgc2VwYXJhdGlvbiBvZiBob21lc3RlYWRzCgkJCQkJaXMgbm90IGluZXhwZWRpZW50IGZvciBob3VzZWhvbGQgZWNvbm9teeKAlGZvciB0aGUgd3JpdGVyIGFsbG90dGVkIHR3bwoJCQkJCWhvbWVzdGVhZHMgc2VwYXJhdGUgZnJvbSBvbmUgYW5vdGhlciB0byBlYWNoIGNpdGl6ZW47IGJ1dCBpdCBpcyBkaWZmaWN1bHQgdG8KCQkJCQltYW5hZ2UgdHdvIGhvdXNlaG9sZHMuPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gTGF3cyA3MzRlIiB2YWxpZD0ieWVzIj5QbGF0LiBMYXdzIDczNGUgZmYuPC9iaWJsPiBJbgoJCQkJCQl3ZWF2aW5nIGNsb3RoIHRoZSB3YXJwIO+8iHRoZSB0aHJlYWRzIHNldCB1cCBmaXJzdO+8iSBtdXN0IGJlCgkJCQkJCW9mIHN0cm9uZyB3b29sLCB0aGUgd29vZiDvvIh0aGUgdGhyZWFkcyB3b3ZlbiBhY3Jvc3MgdGhlCgkJCQkJCXdhcnDvvIkgbXVzdCBiZSBzb2Z0ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBvYmplY3Qgd2FzIHRvCgkJCQkJCXByb3ZpZGUgYSBzZXBhcmF0ZSBlc3RhYmxpc2htZW50IGZvciBhIG1hcnJpZWQgc29uLCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBMYXdzIDc3NmEiIHZhbGlkPSJ5ZXMiPlBsYXQuIExhd3MgNzc2YTwvYmlibD4uPC9ub3RlPgoJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIExhd3MgNzc2YSIgdmFsaWQ9InllcyI+UGxhdC4gTGF3cyA3NzZhPC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['2.1266a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy45IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZSB3aG9sZSBjb25zdGl0dXRpb24gaXMKCQkJCQlpbnRlbmRlZCwgaXQgaXMgdHJ1ZSwgdG8gYmUgbmVpdGhlciBhIGRlbW9jcmFjeSBub3IgYW4gb2xpZ2FyY2h5LCBidXQgb2YgdGhlCgkJCQkJZm9ybSBpbnRlcm1lZGlhdGUgYmV0d2VlbiB0aGVtIHdoaWNoIGlzIHRlcm1lZCBhIHJlcHVibGljLCBmb3IgdGhlIGdvdmVybm1lbnQgaXMKCQkJCQljb25zdGl0dXRlZCBmcm9tIHRoZSBjbGFzcyB0aGF0IGJlYXJzIGFybXMuIElmIHRoZXJlZm9yZSBoZSBpbnRyb2R1Y2VzIHRoaXMKCQkJCQljb25zdGl0dXRpb24gYXMgdGhlIG9uZSBtb3N0IGNvbW1vbmx5IGV4aXN0aW5nIG9mIGFsbCBmb3JtcyBvZiBjb25zdGl0dXRpb24gaW4KCQkJCQl0aGUgYWN0dWFsIHN0YXRlcywgaGUgaGFzIHBlcmhhcHMgbWFkZSBhIGdvb2QgcHJvcG9zYWwsIGJ1dCBpZiBoZSBpbnRyb2R1Y2VzIGl0CgkJCQkJYXMgdGhlIG5leHQgYmVzdCB0byB0aGUgZmlyc3QgZm9ybSBvZiBjb25zdGl0dXRpb24sIGl0IGlzIG5vdCBhIGdvb2QgcHJvcG9zYWw7CgkJCQkJZm9yIHZlcnkgbGlrZWx5IG9uZSBtaWdodCBhcHByb3ZlIHRoZSBTcGFydGFuIGNvbnN0aXR1dGlvbiBtb3JlIGhpZ2hseSwgb3IKCQkJCQlwZXJoYXBzIHNvbWUgb3RoZXIgZm9ybSBuZWFyZXIgdG8gYW4gYXJpc3RvY3JhY3kuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkluIGZhY3Qgc29tZSBwZW9wbGUgYXNzZXJ0IHRoYXQgdGhlIGJlc3QgY29uc3RpdHV0aW9uIG11c3QKCQkJCQliZSBhIGNvbWJpbmF0aW9uIG9mIGFsbCB0aGUgZm9ybXMgb2YgY29uc3RpdHV0aW9uLCBhbmQgdGhlcmVmb3JlIHByYWlzZSB0aGUKCQkJCQljb25zdGl0dXRpb24gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IO+8iGZvcgoJCQkJCXNvbWUgcGVvcGxlIHNheSB0aGF0IGl0IGNvbnNpc3RzIG9mIG9saWdhcmNoeSwgbW9uYXJjaHkgYW5kIGRlbW9jcmFjeSwgbWVhbmluZwoJCQkJCXRoYXQgdGhlIGtpbmdzaGlwIGlzIG1vbmFyY2h5IGFuZCB0aGUgcnVsZSBvZiB0aGUgZXBob3JzIG9saWdhcmNoeSwgYnV0IHRoYXQgYW4KCQkJCQllbGVtZW50IG9mIGRlbW9jcmFjeSBpcyBpbnRyb2R1Y2VkIGJ5IHRoZSBydWxlIG9mIHRoZSBlcGhvcnMgYmVjYXVzZSB0aGUgZXBob3JzCgkJCQkJY29tZSBmcm9tIHRoZSBjb21tb24gcGVvcGxlOyB3aGlsZSBvdGhlcnMgcHJvbm91bmNlIHRoZSBlcGhvcmF0ZSBhIHR5cmFubnkgYnV0CgkJCQkJZmluZCBhbiBlbGVtZW50IG9mIGRlbW9jcmFjeSBpbiB0aGUgcHVibGljIG1lc3MtdGFibGVzIGFuZCBpbiB0aGUgb3RoZXIKCQkJCQlyZWd1bGF0aW9ucyBvZiBkYWlseSBsaWZl77yJLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI2NmEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1266a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1266a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkluIFBsYXRvJ3MgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TGF3czwvdGl0bGU+IG9uIHRoZSBvdGhlciBoYW5kIGl0IGlzCgkJCQkJc3RhdGVkIHRoYXQgdGhlIGJlc3QgY29uc3RpdHV0aW9uIG11c3QgY29uc2lzdCBvZiBhIGNvbWJpbmF0aW9uIG9mIGRlbW9jcmFjeSBhbmQKCQkJCQkJdHlyYW5ueSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGxhdG8gd3JvdGUKCQkJCQkJ4oCYbW9uYXJjaHks4oCZIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIExhd3MgNjkzZCIgdmFsaWQ9InllcyI+UGxhdC4gTGF3cwoJCQkJCQkJNjkzZDwvYmlibD4g77yIY2YuIGhlcmUgMy4xM++8iS48L25vdGU+IHdoaWNoIG9uZSBtaWdodAoJCQkJCXJlZnVzZSB0byBjb3VudCBhcyBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50cyBhdCBhbGwsIG9yIGVsc2UgcmFuayBhcyB0aGUgd29yc3QKCQkJCQlvZiBhbGwgY29uc3RpdHV0aW9ucy4gQSBiZXR0ZXIgdGhlb3J5IHRoZXJlZm9yZSBpcyBwdXQgZm9yd2FyZCBieSB0aG9zZSB3aG8KCQkJCQlpbnRlcm1pbmdsZSBhIGxhcmdlciBudW1iZXIgb2YgZm9ybXMsIGZvciB0aGUgY29uc3RpdHV0aW9uIGNvbXBvc2VkIG9mIGEKCQkJCQljb21iaW5hdGlvbiBvZiBhIGxhcmdlciBudW1iZXIgb2YgZm9ybXMgaXMgYmV0dGVyLiBJbiB0aGUgbmV4dCBwbGFjZSwgdGhlCgkJCQkJY29uc3RpdHV0aW9uIGluIHRoZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBMYXdzIDY5M2QiIHZhbGlkPSJ5ZXMiPlBsYXQuIExhd3MKCQkJCQkJCTY5M2Q8L2JpYmw+IO+8iGNmLiBoZXJlIDMuMTPvvIkuPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TGF3czwvdGl0bGU+IHByb3ZlcyBhcyBhIG1hdHRlciBvZiBmYWN0IG5vdCB0bwoJCQkJCWNvbnRhaW4gYW55IGVsZW1lbnQgb2YgbW9uYXJjaHkgYXQgYWxsLCBidXQgaXRzIGZhY3RvcnMgYXJlIHRha2VuIGZyb20gb2xpZ2FyY2h5CgkJCQkJYW5kIGRlbW9jcmFjeSwgYW5kIGZvciB0aGUgbW9zdCBwYXJ0IGl0IHRlbmRzIHRvIGluY2xpbmUgdG93YXJkcyBvbGlnYXJjaHkuIFRoaXMKCQkJCQlhcHBlYXJzIGZyb20gdGhlIHJlZ3VsYXRpb25zIGZvciB0aGUgYXBwb2ludG1lbnQgb2YgdGhlIG1hZ2lzdHJhdGVzOyBmb3IgdGhlaXIKCQkJCQlzZWxlY3Rpb24gYnkgbG90IGZyb20gYSBsaXN0IHByZXZpb3VzbHkgZWxlY3RlZCBieSB2b3RlIGlzIGEgZmVhdHVyZSBjb21tb24gdG8KCQkJCQlib3RoIG9saWdhcmNoeSBhbmQgZGVtb2NyYWN5LCBidXQgdGhlIGNvbXB1bHNpb24gcHV0IHVwb24gdGhlIHJpY2hlciBjaXRpemVucyB0bwoJCQkJCWF0dGVuZCB0aGUgYXNzZW1ibHkgYW5kIHZvdGUgZm9yIG1hZ2lzdHJhdGVzIG9yIHBlcmZvcm0gYW55IG90aGVyIHBvbGl0aWNhbAoJCQkJCWZ1bmN0aW9uLCB3aGlsZSB0aGUgb3RoZXJzIGFyZSBhbGxvd2VkIHRvIGRvIGFzIHRoZXkgbGlrZSwgaXMgb2xpZ2FyY2hpY2FsLCBhcwoJCQkJCWlzIHRoZSBlbmRlYXZvciB0byBzZWN1cmUgdGhhdCBhIG1ham9yaXR5IG9mIHRoZSBtYWdpc3RyYXRlcyBzaGFsbCBiZSBkcmF3biBmcm9tCgkJCQkJdGhlIHdlYWx0aHkgYW5kIHRoYXQgdGhlIGhpZ2hlc3Qgb2ZmaWNlcyBzaGFsbCBiZSBmaWxsZWQgZnJvbSB0aGUgaGlnaGVzdCBvZiB0aGUKCQkJCQljbGFzc2VzIGFzc2Vzc2VkIGJ5IHdlYWx0aC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZQoJCQkJCXdyaXRlciBhbHNvIG1ha2VzIHRoZSBlbGVjdGlvbiBvZiB0aGUgY291bmNpbCBvbGlnYXJjaGljYWwgZm9yIGV2ZXJ5Ym9keSBpcwoJCQkJCWNvbXBlbGxlZCB0byBlbGVjdCwgYnV0IGZyb20gdGhlIGZpcnN0IHByb3BlcnR5LWNsYXNzLCBhbmQgdGhlbiBhZ2FpbiBhbiBlcXVhbAoJCQkJCW51bWJlciBmcm9tIHRoZSBzZWNvbmQgY2xhc3MsIGFuZCB0aGVuIGZyb20gdGhlIG1lbWJlcnMgb2YgdGhlIHRoaXJkIGNsYXNzLAoJCQkJCWV4Y2VwdCB0aGF0IGl0IHdhcyBub3QgdG8gYmUgY29tcHVsc29yeSBmb3IgYWxsIHRvIHZvdGUgZm9yIHRob3NlIHRvIGJlIGVsZWN0ZWQKCQkJCQlmcm9tIHRoZSBtZW1iZXJzIG9mIHRoZSB0aGlyZCBvciB0aGUgZm91cnRoIGNsYXNzLCBhbmQgdG8gZWxlY3QgZnJvbSB0aGUgZm91cnRoCgkJCQkJY2xhc3Mgd2FzIG9ubHkgY29tcHVsc29yeSBmb3IgdGhlIG1lbWJlcnMgb2YgdGhlIGZpcnN0IGFuZCBzZWNvbmQgY2xhc3NlczsgYW5kCgkJCQkJYWZ0ZXJ3YXJkcyBmcm9tIHRob3NlIHRodXMgc2VsZWN0ZWQgaGUgc2F5cyB0aGF0IHRoZXkgYXJlIHRvIGFwcG9pbnQ8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW4gZXF1YWwgbnVtYmVyIGZyb20gZWFjaCBjbGFzcy4gVGh1cyB0aG9zZQoJCQkJCXdobyBlbGVjdCB0aGUgbWVtYmVycyBmcm9tIHRoZSBoaWdoZXN0IHByb3BlcnR5IGNsYXNzZXMgd2lsbCBiZSBtb3JlIG51bWVyb3VzCgkJCQkJYW5kIGJldHRlciw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBhIGJldHRlciBlbGxlY3RpdmUgYm9keQoJCQkJCQliZWNhdXNlIHJlcHJlc2VudGF0aXZlIG9mIGFsbCBjbGFzc2VzLjwvbm90ZT4gYmVjYXVzZSBzb21lIG9mIHRoZSBsb3dlcgoJCQkJCW9yZGVycyB3aWxsIGFic3RhaW4gZnJvbSB2b3Rpbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBmcm9tCgkJCQkJCXZvdGluZyBmb3IgdGhlIHByZWxpbWluYXJ5IGxpc3QgZnJvbSB0aGUgdGhpcmQgYW5kIGZvdXJ0aCBjbGFzc2VzLjwvbm90ZT4gYXMKCQkJCQlpdCBpcyBub3QgY29tcHVsc29yeS4gPC90cmFuc2xhdGlvbj4="
translation['2.1266b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFjY29yZGluZ2x5CgkJCQkJdGhhdCBpdCBpcyBub3QgcHJvcGVyIHRvIGVzdGFibGlzaCBhIGNvbnN0aXR1dGlvbiBvZiB0aGlzIGNoYXJhY3RlciBmcm9tIGEgYmxlbmQKCQkJCQlvZiBkZW1vY3JhY3kgYW5kIG1vbmFyY2h5IGFwcGVhcnMgY2xlYXJseSBmcm9tIHRoZXNlIGNvbnNpZGVyYXRpb25zLCBhbmQgZnJvbQoJCQkJCXdoYXQgd2lsbCBiZSBzYWlkIGxhdGVyIHdoZW4gb3VyIGlucXVpcnkgY29tZXMgdG8gZGVhbCB3aXRoIHRoaXMgY2xhc3Mgb2YKCQkJCQljb25zdGl0dXRpb247IGFsc28gdGhlIHByb3Zpc2lvbiBmb3IgdGhlIGVsZWN0aW9uIG9mIHRoZSBydWxlcnMgZnJvbSBhbW9uZwoJCQkJCWNhbmRpZGF0ZXMgY2hvc2VuIGF0IGEgcHJlbGltaW5hcnkgZWxlY3Rpb24gaXMgZGFuZ2Vyb3VzLCBmb3IgaWYgZXZlbiBhIG1vZGVyYXRlCgkJCQkJbnVtYmVyIG9mIHBlb3BsZSBjaG9vc2UgdG8gY29tYmluZSBpbnRvIGEgcGFydHksIHRoZSBlbGVjdGlvbnMgd2lsbCBhbHdheXMgZ28KCQkJCQlhY2NvcmRpbmcgdG8gdGhlaXIgd2lzaC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3VjaCBhcmUgdGhlIHBvaW50cyBhcyB0bwoJCQkJCXRoZSBjb25zdGl0dXRpb24gaW4gdGhlIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkxhd3MuPC90aXRsZT4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZQoJCQkJCWFyZSBhbHNvIGNlcnRhaW4gb3RoZXIgY29uc3RpdHV0aW9uYWwgc2NoZW1lcywgc29tZSBkcmF3biB1cCBieSBhbWF0ZXVycyBhbmQKCQkJCQlvdGhlcnMgYnkgcGhpbG9zb3BoZXJzIGFuZCBzdGF0ZXNtZW4sIGJ1dCBhbGwgb2YgdGhlbSBhcmUgbmVhcmVyIHRvIHRob3NlIHdoaWNoCgkJCQkJaGF2ZSBiZWVuIGFjdHVhbGx5IGVzdGFibGlzaGVkIGFuZCBieSB3aGljaCBzdGF0ZXMgYXJlIGdvdmVybmVkIGF0IHByZXNlbnQgdGhhbgoJCQkJCWFyZSBib3RoIG9mIHRob3NlIHdoaWNoIGhhdmUgYmVlbiBjb25zaWRlcmVkOyBmb3Igbm9ib2R5IGVsc2UgaGFzIGludHJvZHVjZWQgdGhlCgkJCQkJaW5ub3ZhdGlvbiBvZiBjb21tdW5pdHkgb2YgY2hpbGRyZW4gYW5kIHdvbWVuLCBub3IgdGhhdCBvZiBwdWJsaWMgbWVhbHMgZm9yIHRoZQoJCQkJCXdvbWVuLCBidXQgdGhleSBzdGFydCByYXRoZXIgd2l0aCB0aGUgbmVjZXNzYXJ5IHJlZm9ybXMuIEZvciBzb21lIHBlcnNvbnMgdGhpbmsKCQkJCQl0aGF0IHRoZSByaWdodCByZWd1bGF0aW9uIG9mIHByb3BlcnR5IGlzIHRoZSBtb3N0IGltcG9ydGFudDsgZm9yIHRoZSBxdWVzdGlvbiBvZgoJCQkJCXByb3BlcnR5LCB0aGV5IHNheSwgaXMgdW5pdmVyc2FsbHkgdGhlIGNhdXNlIG9mIHBhcnR5IHN0cmlmZS4gVGhlcmVmb3JlIHRoZQoJCQkJCUNoYWxjZWRvbmlhbiBQaGFsZWFzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk90aGVyd2lzZQoJCQkJCQl1bmtub3duLjwvbm90ZT4gd2FzIHRoZSBmaXJzdCB3aG8gaW50cm9kdWNlZCB0aGlzIGV4cGVkaWVudDsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5mb3IgaGUgc2F5cyB0aGF0IHRoZSBjaXRpemVucycgZXN0YXRlcwoJCQkJCW91Z2h0IHRvIGJlIGVxdWFsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjY2YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1266b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBoZSB0aG91Z2h0IHRoYXQgdGhpcyB3b3VsZCBub3QgYmUgZGlmZmljdWx0IHRvCgkJCQkJc2VjdXJlIGF0IHRoZSBvdXRzZXQgZm9yIGNpdGllcyBpbiBwcm9jZXNzIG9mIGZvdW5kYXRpb24sIHdoaWxlIGluIHRob3NlIGFscmVhZHkKCQkJCQlzZXR0bGVkLCBhbHRob3VnaCBpdCB3b3VsZCBiZSBhIG1vcmUgaXJrc29tZSB0YXNrLCBuZXZlcnRoZWxlc3MgYSBsZXZlbGxpbmcKCQkJCQl3b3VsZCBtb3N0IGVhc2lseSBiZSBlZmZlY3RlZCBieSB0aGUgcmljaCBnaXZpbmcgZG93cmllcyBidXQgbm90IHJlY2VpdmluZyB0aGVtCgkJCQkJYW5kIHRoZSBwb29yIHJlY2VpdmluZyBidXQgbm90IGdpdmluZyB0aGVtLiBQbGF0byB3aGVuIHdyaXRpbmcgdGhlCgkJCQkJCTx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkxhd3M8L3RpdGxlPiB0aG91Z2h0IHRoYXQgdXAgdG8gYSBjZXJ0YWluIHBvaW50IGluZXF1YWxpdHkgb3VnaHQgdG8KCQkJCQliZSBhbGxvd2VkLCBidXQgdGhhdCBubyBjaXRpemVuIHNob3VsZCBiZSBwZXJtaXR0ZWQgdG8gYWNxdWlyZSBtb3JlIGxhbmQgdGhhbgoJCQkJCXdvdWxkIG1ha2UgaGlzIGVzdGF0ZSBmaXZlIHRpbWVzIHRoZSBzaXplIG9mIHRoZSBzbWFsbGVzdCwgYXMgaGFzIGFsc28gYmVlbiBzYWlkCgkJCQkJCWJlZm9yZS48L3RyYW5zbGF0aW9uPg=="
translation['2.1266b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCB0aG9zZSB3aG8gYnJpbmcgaW4gbGVnaXNsYXRpb24gb2YgdGhpcyBzb3J0IG11c3QgYWxzbyBub3QKCQkJCQlvdmVybG9vayB0aGlzIHBvaW50LCB3aGljaCBpcyBvdmVybG9va2VkIGF0IHByZXNlbnQsIHRoYXQgd2hlbiByZWd1bGF0aW5nIHRoZQoJCQkJCWFtb3VudCBvZiBwcm9wZXJ0eSBsZWdpc2xhdG9ycyBvdWdodCBhbHNvIHRvIHJlZ3VsYXRlIHRoZSBzaXplIG9mIHRoZSBmYW1pbHk7CgkJCQkJZm9yIGlmIHRoZSBudW1iZXIgb2YgY2hpbGRyZW4gYmVjb21lcyB0b28gbGFyZ2UgZm9yIHRoZSBwcm9wZXJ0eSwgdGhlIGxhdyBpcwoJCQkJCXF1aXRlIHN1cmUgdG8gYmUgYnJva2VuLCBhbmQgYXBhcnQgZnJvbSB0aGUgYnJlYWNoIG9mIHRoZSBsYXcgaXQgaXMgYSBiYWQgdGhpbmcKCQkJCQl0aGF0IG1hbnkgY2l0aXplbnMgd2hvIHdlcmUgcmljaCBzaG91bGQgYmVjb21lIHBvb3IsIGZvciBpdCBpcyBkaWZmaWN1bHQgZm9yCgkJCQkJc3VjaCBtZW4gbm90IHRvIGJlIGFkdm9jYXRlcyBvZiBhIG5ldyBvcmRlci4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGF0IGEgbGV2ZWwgc3RhbmRhcmQgb2YgcHJvcGVydHkgYWZmZWN0cyB0aGUgY29tbXVuaXR5IG9mCgkJCQkJdGhlIGNpdGl6ZW5zIGluIGFuIGltcG9ydGFudCBtYW5uZXIgc29tZSBtZW4gZXZlbiBpbiBvbGQgdGltZXMgY2xlYXJseSBoYXZlCgkJCQkJcmVjb2duaXplZDsgZm9yIGV4YW1wbGUgdGhlcmUgaXMgdGhlIGxlZ2lzbGF0aW9uIG9mIFNvbG9uLCBhbmQgb3RoZXIgc3RhdGVzIGhhdmUKCQkJCQlhIGxhdyBwcm9oaWJpdGluZyB0aGUgYWNxdWlzaXRpb24gb2YgbGFuZCB0byBhbnkgYW1vdW50IHRoYXQgdGhlIGluZGl2aWR1YWwgbWF5CgkJCQkJZGVzaXJlOyBhbmQgc2ltaWxhcmx5IHRoZXJlIGlzIGxlZ2lzbGF0aW9uIHRvIHByZXZlbnQgdGhlIHNhbGUgb2YgZXN0YXRlcywgYXMgYXQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxMb2NyaSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTG9jcmkiPkxvY3JpPC9wbGFjZU5hbWU+IHRoZXJlIGlzIGEgbGF3PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRoYXQgYSBtYW4gc2hhbGwgbm90IHNlbGwgdW5sZXNzIGhlIGNhbgoJCQkJCXByb3ZlIHRoYXQgbWFuaWZlc3QgbWlzZm9ydHVuZSBoYXMgYmVmYWxsZW4gaGltIGFuZCBhbHNvIHRoZXJlIGlzIGxlZ2lzbGF0aW9uIHRvCgkJCQkJcHJlc2VydmUgdGhlIG9sZCBhbGxvdG1lbnRzLCBhbmQgdGhlIHJlcGVhbCBvZiB0aGlzIHJlc3RyaWN0aW9uIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNzEyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI3MTIiPkxldWNhczwvcGxhY2VOYW1lPiBtYWRlIHRoZSBMZXVjYWRpYW4gY29uc3RpdHV0aW9uCgkJCQkJZXhjZXNzaXZlbHkgZGVtb2NyYXRpYywgZm9yIGl0IGNhbWUgYWJvdXQgdGhhdCB0aGUgb2ZmaWNlcyB3ZXJlIG5vIGxvbmdlciBmaWxsZWQKCQkJCQlmcm9tIHRoZSBlc3RhYmxpc2hlZCBwcm9wZXJ0eS1xdWFsaWZpY2F0aW9ucy4gPC90cmFuc2xhdGlvbj4="
translation['2.1267a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGl0IGlzIHBvc3NpYmxlIHRoYXQgZXF1YWxpdHkgb2YgZXN0YXRlcyBtYXkgYmUKCQkJCQltYWludGFpbmVkLCBidXQgdGhlaXIgc2l6ZSBtYXkgYmUgZWl0aGVyIHRvbyBsYXJnZSBhbmQgcHJvbW90ZSBsdXh1cnksIG9yIHRvbwoJCQkJCXNtYWxsLCBjYXVzaW5nIGEgcGVudXJpb3VzIHN0YW5kYXJkIG9mIGxpdmluZzsgaXQgaXMgY2xlYXIgdGhlcmVmb3JlIHRoYXQgaXQgaXMKCQkJCQlub3QgZW5vdWdoIGZvciB0aGUgbGF3Z2l2ZXIgdG8gbWFrZSB0aGUgZXN0YXRlcyBlcXVhbCwgYnV0IGhlIG11c3QgYWltIGF0CgkJCQkJc2VjdXJpbmcgYSBtZWRpdW0gc2l6ZS4gQW5kIGFnYWluLCBldmVuIGlmIG9uZSBwcmVzY3JpYmVkIGEgbW9kZXJhdGUgcHJvcGVydHkKCQkJCQlmb3IgYWxsLCBpdCB3b3VsZCBiZSBvZiBubyBhdmFpbCwgc2luY2UgaXQgaXMgbW9yZSBuZWVkZnVsIHRvIGxldmVsIG1lbidzCgkJCQkJZGVzaXJlcyB0aGFuIHRoZWlyIHByb3BlcnRpZXMsIGFuZCB0aGlzIGNhbiBvbmx5IGJlIGRvbmUgYnkgYW4gYWRlcXVhdGUgc3lzdGVtCgkJCQkJb2YgZWR1Y2F0aW9uIGVuZm9yY2VkIGJ5IGxhdy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQKCQkJCQlwZXJoYXBzIFBoYWxlYXMgd291bGQgc2F5IHRoYXQgaGUgaGltc2VsZiBhY3R1YWxseSBwcmVzY3JpYmVzIHRoaXMsIGFzIGhlCgkJCQkJY29uc2lkZXJzIGl0IGZ1bmRhbWVudGFsbHkgbmVjZXNzYXJ5IGZvciBzdGF0ZXMgdG8gaGF2ZSBlcXVhbGl0eSBpbiB0aGVzZSB0d28KCQkJCQl0aGluZ3MsIHByb3BlcnR5IGFuZCBlZHVjYXRpb24uIEJ1dCB0aGUgbmF0dXJlIG9mIHRoZSBlZHVjYXRpb24gbmVlZHMgdG8gYmUKCQkJCQlkZWZpbmVkOiBpdCBpcyBubyB1c2UgbWVyZWx5IGZvciBpdCB0byBiZSBvbmUgYW5kIHRoZSBzYW1lIGZvciBhbGwsIGZvciBpdCBpcwoJCQkJCXBvc3NpYmxlIGZvciBhbGwgdG8gaGF2ZSBvbmUgYW5kIHRoZSBzYW1lIGVkdWNhdGlvbiBidXQgZm9yIHRoaXMgdG8gYmUgb2Ygc3VjaCBhCgkJCQkJbmF0dXJlIGFzIHRvIG1ha2UgdGhlbSBkZXNpcm91cyBvZiBnZXR0aW5nIG1vcmUgdGhhbiB0aGVpciBzaGFyZSBvZiBtb25leSBvcgoJCQkJCWhvbm9yIG9yIGJvdGg7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC43IiB1bml0PSJMb2ViIGNoYXAiIC8+bW9yZW92ZXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UHJvYmFibHkgdGhlIEdyZWVrIHNob3VsZCBiZSBhbHRlcmVkIHRvIGdpdmUKCQkJCQkJ4oCYYmVjYXVzZeKAmSBpbnN0ZWFkIG9mCgkJCQkJCeKAmG1vcmVvdmVyLuKAmTwvbm90ZT4gY2l2aWwgc3RyaWZlIGlzIGNhdXNlZCBub3Qgb25seSBieQoJCQkJCWluZXF1YWxpdHkgb2YgcHJvcGVydHkgYnV0IGFsc28gYnkgaW5lcXVhbGl0eSBvZiBob25vcnMsIHRob3VnaCB0aGUgdHdvIG1vdGl2ZXMKCQkJCQlvcGVyYXRlIGluIG9wcG9zaXRlIHdheXPigJR0aGUgbWFzc2VzIGFyZSBkaXNjb250ZW50ZWQgaWYgcG9zc2Vzc2lvbnMKCQkJCQlhcmUgdW5lcXVhbGx5IGRpc3RyaWJ1dGVkLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI2N2EiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1267a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnRoZSB1cHBlciBjbGFzc2VzIGlmIGhvbm9ycyBhcmUgZXF1YWxseQoJCQkJCWRpc3RyaWJ1dGVkLCBicmluZ2luZyBpdCBhYm91dCB0aGF0IDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5Ob2JsZSBhbmQgYmFzZSBpbiBlcXVhbCBob25vciBzdGFuZC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gOS4zMTkiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDkuMzE5PC9iaWJsPgoJCQkJCQkJPC9ub3RlPjwvbD4KCQkJCQk8L3F1b3RlPiBOb3IgZG8gbWVuIGRvIHdyb25nIGZvciB0aGUgc2FrZSBvZiB0aGUgYmFyZSBuZWNlc3NpdGllcyBvbmx5LCB0aGUgc29ydAoJCQkJCW9mIHdyb25nZG9pbmcgZm9yIHdoaWNoIFBoYWxlYXMgdGhpbmtzIHRoYXQgZXF1YWxpdHkgb2Ygc3Vic3RhbmNlIGlzIGEKCQkJCQljdXJl4oCUcHJldmVudGluZyBoaWdod2F5IHJvYmJlcnkgYnkgcmVtb3ZpbmcgdGhlIG1vdGl2ZSBvZiBjb2xkIG9yCgkJCQkJaHVuZ2VyOyBtZW4gYWxzbyBkbyB3cm9uZyB0byBnYWluIHBsZWFzdXJlIGFuZCB0byBzYXRpc2Z5IGRlc2lyZS4gRm9yIGlmIHRoZXkKCQkJCQloYXZlIGEgZGVzaXJlIGFib3ZlIHRoZSBiYXJlIG5lY2Vzc2l0aWVzIG9mIGV4aXN0ZW5jZSwgdGhleSB3aWxsIHRyYW5zZ3Jlc3MgdG8KCQkJCQljdXJlIHRoaXMgZGVzaXJlOyBhbmQgbW9yZW92ZXIgbm90IGJlY2F1c2Ugb2YgZGVzaXJlIG9ubHksIGJ1dCBpbiBvcmRlciB0aGF0CgkJCQkJdGhleSBtYXkgZW5qb3kgdGhlIHBsZWFzdXJlcyB0aGF0IGFyZSBub3QgYXNzb2NpYXRlZCB3aXRoIHBhaW5zLiA8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPk5vYmxlIGFuZCBiYXNlIGluIGVxdWFsIGhvbm9yIHN0YW5kLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiA5LjMxOSIgdmFsaWQ9InllcyI+SG9tLiBJbC4gOS4zMTk8L2JpYmw+CgkJCQkJCQk8L25vdGU+PC9sPgoJCQkJCTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiA5LjMxOSIgdmFsaWQ9InllcyI+SG9tLiBJbC4gOS4zMTk8L2JpYmw+CgkJCQkJCQk8L25vdGU+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gOS4zMTkiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDkuMzE5PC9iaWJsPgoJCQkJCQkJPC90cmFuc2xhdGlvbj4="
translation['2.1267a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC44IiB1bml0PSJMb2ViIGNoYXAiIC8+V2hhdCByZW1lZHkgdGhlbiBpcyB0aGVyZSBmb3IgdGhlc2UgdGhyZWUKCQkJCQljbGFzc2VzIG9mIG9mZmVuZGVycz8gRm9yIHRoZSBmaXJzdCBjbGFzcywgYSBtb2Rlc3QgY29tcGV0ZW5jZSBhbmQgd29yazsgZm9yIHRoZQoJCQkJCXNlY29uZCwgdGVtcGVyYW5jZTsgYW5kIGFzIGZvciB0aGUgdGhpcmQgc29ydCwgYW55IHBlb3BsZSB3aG8gZGVzaXJlIHBsZWFzdXJlcwoJCQkJCXRoYXQgZGVwZW5kIG9uIHRoZW1zZWx2ZXMgd291bGQgcmVxdWlyZSBubyBjdXJlIGZvciB0aGVpciBkZXNpcmVzIHNhdmUgdGhhdAoJCQkJCXdoaWNoIGlzIGRlcml2ZWQgZnJvbSBwaGlsb3NvcGh5LCBmb3IgdGhlIG90aGVyIHBsZWFzdXJlcyByZXF1aXJlIHRoZSBhaWQgb2YKCQkJCQlmZWxsb3ctY3JlYXR1cmVzLiBTaW5jZSBjbGVhcmx5IHRoZSBncmVhdGVzdCB0cmFuc2dyZXNzaW9ucyBzcHJpbmcgZnJvbSBhIGRlc2lyZQoJCQkJCWZvciBzdXBlcmZsdWl0aWVzLCBub3QgZm9yIGJhcmUgbmVjZXNzYXJpZXMg77yIZm9yIGV4YW1wbGUsIG1lbiBkbyBub3QKCQkJCQliZWNvbWUgdHlyYW50cyBpbiBvcmRlciB0byBhdm9pZCBzaGl2ZXJpbmcgd2l0aCBjb2xkLCBhbmQgYWNjb3JkaW5nbHkgaGlnaAoJCQkJCWhvbm9ycyBhcmUgYXdhcmRlZCB0byBvbmUgd2hvIGtpbGxzIGEgdHlyYW50LCBidXQgbm90IHRvIG9uZSB3aG8ga2lsbHMgYQoJCQkJCXRoaWVm77yJOyBzbyB0aGF0IHRoZSBtZXRob2Qgb2YgdGhlIGNvbnN0aXR1dGlvbiBvZiBQaGFsZWFzIGlzCgkJCQkJZWZmaWNhY2lvdXMgb25seSBhZ2FpbnN0IHRoZSBtaW5vciBzb2NpYWwgZGlzb3JkZXJzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFnYWluLCBQaGFsZWFzIGRlc2lyZXMgdG8gZnJhbWUgaW5zdGl0dXRpb25zIGZvciB0aGUgbW9zdAoJCQkJCXBhcnQgd2hpY2ggd2lsbCBsZWFkIHRvIGEgcmlnaHQgc3RhdGUgb2YgYWZmYWlycyBpbiB0aGUgaW50ZXJuYWwgcmVsYXRpb25zIG9mCgkJCQkJdGhlIGNpdGl6ZW5zLCBidXQgdGhlIGxlZ2lzbGF0b3Igc2hvdWxkIGFsc28gaGF2ZSByZWdhcmQgdG8gcmVsYXRpb25zIHdpdGggdGhlCgkJCQkJbmVpZ2hib3JpbmcgcGVvcGxlcyBhbmQgd2l0aCBhbGwgZm9yZWlnbiBuYXRpb25zLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5JdCBpcyBlc3NlbnRpYWwgdGhlcmVmb3JlIGZvciB0aGUgY29uc3RpdHV0aW9uIHRvIGJlIGZyYW1lZAoJCQkJCXdpdGggYSB2aWV3IHRvIG1pbGl0YXJ5IHN0cmVuZ3RoLCBhYm91dCB3aGljaCBQaGFsZWFzIGhhcyBzYWlkIG5vdGhpbmcuIEFuZCB0aGUKCQkJCQlzYW1lIGlzIHRydWUgYWxzbyBhYm91dCBwcm9wZXJ0eTsgZm9yIHRoZSBjaXRpemVucyBzaG91bGQgbm90IG9ubHkgcG9zc2VzcwoJCQkJCWVub3VnaCB0byBtZWV0IHRoZWlyIHJlcXVpcmVtZW50cyBpbiBjaXZpYyBsaWZlLCBidXQgYWxzbyB0byBlbmNvdW50ZXIgdGhlCgkJCQkJcGVyaWxzIHRoYXQgZmFjZSB0aGVtIGZyb20gb3V0c2lkZTsgaGVuY2UgdGhleSBzaG91bGQgcG9zc2VzcyBuZWl0aGVyIHNvIGxhcmdlCgkJCQkJYW4gYW1vdW50IG9mIHdlYWx0aCB0aGF0IGl0IHdpbGwgYmUgY292ZXRlZCBieSB0aGVpciBuZWlnaGJvcnMgYW5kIGJ5IHN0cm9uZ2VyCgkJCQkJc3RhdGVzIHdoaWxlIGl0cyBwb3NzZXNzb3JzIHdpbGwgYmUgdW5hYmxlIHRvIHJlcGVsIHRoZWlyIGFzc2FpbGFudHMsIG5vciB5ZXQgc28KCQkJCQlzbWFsbCBhbiBhbW91bnQgYXMgbm90IHRvIGJlIGNhcGFibGUgb2Ygc3VzdGFpbmluZyBhIHdhciBldmVuIGFnYWluc3QgZXF1YWwgYW5kCgkJCQkJc2ltaWxhciBzdGF0ZXMuIDwvdHJhbnNsYXRpb24+"
translation['2.1267b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPlBoYWxlYXMsIGl0IGlzCgkJCQkJdHJ1ZSwgaGFzIGxhaWQgZG93biBubyBydWxlIGF0IGFsbCwgYnV0IHRoZSBxdWVzdGlvbiBtdXN0IG5vdCBiZSBvdmVybG9va2VkLAoJCQkJCXdoYXQgYW1vdW50IG9mIHdlYWx0aCBpcyBhZHZhbnRhZ2VvdXMuIFBlcmhhcHMgdGhlcmVmb3JlIHRoZSBiZXN0IGxpbWl0IHRvCgkJCQkJcHJlc2NyaWJlIGlzIHRoYXQgaXQgbXVzdCBub3QgcHJvZml0IGEgc3Ryb25nZXIgcGVvcGxlIHRvIG1ha2Ugd2FyIHVwb24gdGhlCgkJCQkJc3RhdGUgYmVjYXVzZSBvZiBpdHMgZXhjZXNzaXZlIHdlYWx0aCwgYnV0IG9ubHkganVzdCBhcyBpdCBtaWdodCBkbyBldmVuIGlmIHRoZQoJCQkJCWNpdGl6ZW5zIGhhZCBub3QgZ290IHNvIG11Y2ggcHJvcGVydHkuIEZvciBleGFtcGxlLCB3aGVuIEF1dG9waHJhZGF0ZXMgd2FzIGFib3V0CgkJCQkJdG8gbGF5IHNpZWdlIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRhcm5ldXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0YXJuZXVzIj5BdGFybmV1czwvcGxhY2VOYW1lPiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBzdHJvbmdob2xkIG9uIHRoZSBjb2FzdCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjI5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMjk0Ij5Bc2lhIE1pbm9yPC9wbGFjZU5hbWU+IGFjcXVpcmVkIGJ5IEV1YnVsdXMsIGEKCQkJCQkJQml0aHluaWFuIGJhbmtlciwgd2hlbiB0aGUgUGVyc2lhbiBlbXBpcmUgd2FzIGJyZWFraW5nIHVwLCBtaWRkbGUgNHRoCgkJCQkJCWNlbnR1cnkgQi5DLjsgQXV0b3BocmFkYXRlcyB3YXMgYSBQZXJzaWFuIGdlbmVyYWwuPC9ub3RlPiBFdWJ1bHVzIGJhZGUgaGltCgkJCQkJY29uc2lkZXIgaG93IGxvbmcgaXQgd291bGQgdGFrZSBoaW0gdG8gY2FwdHVyZSB0aGUgcGxhY2UsIGFuZCB0aGVuIGNhbGN1bGF0ZQoJCQkJCXdoYXQgaGlzIGV4cGVuZGl0dXJlIHdvdWxkIGJlIGZvciB0aGF0IHBlcmlvZCwgZm9yIGhlIGhpbXNlbGYgd2FzIHdpbGxpbmcgZm9yCgkJCQkJdGhlIHBheW1lbnQgb2YgYSBzbWFsbGVyIHN1bSB0aGFuIHRoYXQgdG8gZXZhY3VhdGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDIyOTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjI5NCI+QXNpYSBNaW5vcjwvcGxhY2VOYW1lPiBhY3F1aXJlZCBieSBFdWJ1bHVzLCBhCgkJCQkJCUJpdGh5bmlhbiBiYW5rZXIsIHdoZW4gdGhlIFBlcnNpYW4gZW1waXJlIHdhcyBicmVha2luZyB1cCwgbWlkZGxlIDR0aAoJCQkJCQljZW50dXJ5IEIuQy47IEF1dG9waHJhZGF0ZXMgd2FzIGEgUGVyc2lhbiBnZW5lcmFsLjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRhcm5ldXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0YXJuZXVzIj5BdGFybmV1czwvcGxhY2VOYW1lPiBhdCBvbmNlOyB0aGVzZSB3b3JkcyBjYXVzZWQKCQkJCQlBdXRvcGhyYWRhdGVzIHRvIHBvbmRlciBhbmQgbGVkIGhpbSB0byBhYmFuZG9uIHRoZSBzaWVnZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+Tm93IGVxdWFsaXR5IG9mIHByb3BlcnR5IGFtb25nIHRoZSBjaXRpemVucyBpcwoJCQkJCWNlcnRhaW5seSBvbmUgb2YgdGhlIGZhY3RvcnMgdGhhdCBjb250cmlidXRlIHRvIHRoZSBhdm9pZGFuY2Ugb2YgcGFydHkgZmFjdGlvbjsKCQkJCQlpdCBpcyBub3QgaG93ZXZlciBhIHBhcnRpY3VsYXJseSBpbXBvcnRhbnQgb25lLiBGb3IgdGhlIHVwcGVyIGNsYXNzZXMgbWF5IHJlc2VudAoJCQkJCWl0IG9uIHRoZSBncm91bmQgdGhhdCB0aGVpciBtZXJpdHMgYXJlIG5vdCBlcXVhbCwgb3dpbmcgdG8gd2hpY2ggd2UgYWN0dWFsbHkgc2VlCgkJCQkJdGhlbSBvZnRlbiBhdHRhY2tpbmcgdGhlIGdvdmVybm1lbnQgYW5kIHJlYmVsbGluZzsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNjdiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1267b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBhbHNvIHRoZQoJCQkJCWJhc2VuZXNzIG9mIGh1bWFuIGJlaW5ncyBpcyBhIHRoaW5nIGluc2F0aWFibGUsIGFuZCB0aG91Z2ggYXQgdGhlIGZpcnN0IGEgZG9sZQoJCQkJCW9mIG9ubHkgdHdvIG9ib2xzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlR3b3BlbmNlLWhhbGZwZW5ueSBmb3IgYQoJCQkJCQlzZWF0IGluIHRoZSB0aGVhdGVyIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPgoJCQkJCQlwYWlkIGZvciBjaXRpemVucyBieSB0aGUgU3RhdGUgYWZ0ZXIgdGhlIHRpbWUgb2YgUGVyaWNsZXMuPC9ub3RlPiBpcyBlbm91Z2gsCgkJCQkJeWV0IHdoZW4gdGhpcyBoYXMgbm93IGJlY29tZSBhbiBlc3RhYmxpc2hlZCBjdXN0b20sIHRoZXkgYWx3YXlzIHdhbnQgbW9yZSwgdW50aWwKCQkJCQl0aGV5IGdldCB0byBhbiB1bmxpbWl0ZWQgYW1vdW50OyBmb3IgYXBwZXRpdGUgaXMgaW4gaXRzIG5hdHVyZSB1bmxpbWl0ZWQsIGFuZAoJCQkJCXRoZSBtYWpvcml0eSBvZiBtYW5raW5kIGxpdmUgZm9yIHRoZSBzYXRpc2ZhY3Rpb24gb2YgYXBwZXRpdGUuIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPgoJCQkJCQlwYWlkIGZvciBjaXRpemVucyBieSB0aGUgU3RhdGUgYWZ0ZXIgdGhlIHRpbWUgb2YgUGVyaWNsZXMuPC90cmFuc2xhdGlvbj4="
translation['2.1267b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSBzdGFydGluZy1wb2ludCBpbiBzdWNoIG1hdHRlcnMKCQkJCQl0aGVyZWZvcmUsIHJhdGhlciB0aGFuIGxldmVsbGluZyBlc3RhdGVzLCBpcyB0byB0cmFpbiB0aG9zZSB0aGF0IGFyZSByZXNwZWN0YWJsZQoJCQkJCWJ5IG5hdHVyZSBzbyB0aGF0IHRoZXkgbWF5IG5vdCB3aXNoIGZvciBleGNlc3NpdmUgd2VhbHRoLCBhbmQgdG8gY29udHJpdmUgdGhhdAoJCQkJCXRoZSBiYXNlIG1heSBub3QgYmUgYWJsZSB0byBkbyBzbywgYW5kIHRoaXMgaXMgc2VjdXJlZCBpZiB0aGV5IGFyZSBpbmZlcmlvciBpbgoJCQkJCW51bWJlciBhbmQgbm90IHVuanVzdGx5IHRyZWF0ZWQuIEFuZCBhbHNvIHdlIGNhbm5vdCBhcHByb3ZlIHdoYXQgUGhhbGVhcyBoYXMKCQkJCQlzYWlkIGFib3V0IGVxdWFsaXR5IG9mIHByb3BlcnR5LCBmb3IgaGUgbWFrZXMgdGhlIGNpdGl6ZW5zIGVxdWFsIGluIHJlc3BlY3Qgb2YKCQkJCQlsYW5kZWQgZXN0YXRlIG9ubHksIGJ1dCB3ZWFsdGggYWxzbyBjb25zaXN0cyBpbiBzbGF2ZXMgYW5kIGNhdHRsZSBhbmQgbW9uZXksIGFuZAoJCQkJCXRoZXJlIGlzIGFuIGFidW5kYW5jZSBvZiBwcm9wZXJ0eSBpbiB0aGUgc2hhcGUgb2Ygd2hhdCBpcyBjYWxsZWQgZnVybml0dXJlOyB3ZQoJCQkJCW11c3QgdGhlcmVmb3JlIGVpdGhlciBzZWVrIHRvIHNlY3VyZSBlcXVhbGl0eSBvciBzb21lIG1vZGVyYXRlIHJlZ3VsYXRpb24gYXMKCQkJCQlyZWdhcmRzIGFsbCB0aGVzZSB0aGluZ3MsIG9yIHdlIG11c3QgcGVybWl0IGFsbCBmb3JtcyBvZiB3ZWFsdGguIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpdCBpcyBjbGVhciBmcm9tIFBoYWxlYXMncyBsZWdpc2xhdGlvbgoJCQkJCXRoYXQgaGUgbWFrZXMgdGhlIGNpdGl6ZW4tcG9wdWxhdGlvbiBhIHNtYWxsIG9uZSwgaW5hc211Y2ggYXMgYWxsIHRoZSBhcnRpc2FucwoJCQkJCWFyZSB0byBiZSBwdWJsaWNseSBvd25lZCBzbGF2ZXMgYW5kIGFyZSBub3QgdG8gZnVybmlzaCBhbnkgY29tcGxlbWVudCBvZiB0aGUKCQkJCQljaXRpemVuLWJvZHkuIEJ1dCBpZiBpdCBpcyBwcm9wZXIgdG8gaGF2ZSBwdWJsaWMgc2xhdmVzLCB0aGUgbGFib3JlcnMgZW1wbG95ZWQKCQkJCQl1cG9uIHRoZSBwdWJsaWMgd29ya3Mgb3VnaHQgdG8gYmUgb2YgdGhhdCBzdGF0dXMg77yIYXMgaXMgdGhlIGNhc2UgYXQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxFcGlkYW1ub3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEVwaWRhbW5vcyI+RXBpZGFtbnVzPC9wbGFjZU5hbWU+IGFuZCBhcyBEaW9waGFudHVzIG9uY2UKCQkJCQl0cmllZCB0byBpbnN0aXR1dGUgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+77yJLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVzZSByZW1hcmtzCgkJCQkJbWF5IHNlcnZlIGZhaXJseSB3ZWxsIHRvIGluZGljYXRlIHN1Y2ggbWVyaXRzPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZCBkZWZlY3RzIGFzIG1heSBiZSBjb250YWluZWQgaW4gdGhlIGNvbnN0aXR1dGlvbiBvZgoJCQkJCQlQaGFsZWFzLjwvdHJhbnNsYXRpb24+"
translation['2.1268a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhpcHBvZGFtdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBmYW1vdXMKCQkJCQkJYXJjaGl0ZWN0IGFuZCB0b3duLXBsYW5uZXIg77yIc2VlIDEzMzBiIDI077yJIGNpcmNhIDxkYXRlIGF1dGhuYW1lPSItNDc1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDc1Ij40NzU8L2RhdGU+IEIuQy48L25vdGU+IHNvbiBvZiBFdXJ5cGhvbiwgYSBNaWxlc2lhbgoJCQkJCe+8iHdobyBpbnZlbnRlZCB0aGUgZGl2aXNpb24gb2YgY2l0aWVzIGludG8gYmxvY2tzIGFuZCBjdXQgdXAgPGRhdGUgYXV0aG5hbWU9Ii00NzUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00NzUiPjQ3NTwvZGF0ZT4gQi5DLjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGlyYWV1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsUGlyYWV1cyI+UGlyYWV1czwvcGxhY2VOYW1lPiwgYW5kIHdobyBhbHNvIGJlY2FtZSBzb21ld2hhdAoJCQkJCWVjY2VudHJpYyBpbiBoaXMgZ2VuZXJhbCBtb2RlIG9mIGxpZmUgb3dpbmcgdG8gYSBkZXNpcmUgZm9yIGRpc3RpbmN0aW9uLCBzbyB0aGF0CgkJCQkJc29tZSBwZW9wbGUgdGhvdWdodCB0aGF0IGhlIGxpdmVkIHRvbyBmdXNzaWx5LCB3aXRoIGEgcXVhbnRpdHkgb2YgaGFpcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gbWVuIHdvcmUgdGhlaXIgaGFpciBsb25nLCBidXQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IHRoaXMgd2FzIHRoZSBtYXJrIG9mIGEKCQkJCQkJZGFuZHkuPC9ub3RlPiBhbmQgZXhwZW5zaXZlIG9ybmFtZW50cywgYW5kIGFsc28gYSBxdWFudGl0eSBvZiBjaGVhcCB5ZXQgd2FybQoJCQkJCWNsb3RoZXMgbm90IG9ubHkgaW4gd2ludGVyIGJ1dCBhbHNvIGluIHRoZSBzdW1tZXIgcGVyaW9kcywgYW5kIHdobyB3aXNoZWQgdG8gYmUKCQkJCQlhIG1hbiBvZiBsZWFybmluZyBpbiBuYXR1cmFsIHNjaWVuY2UgZ2VuZXJhbGx577yJLCB3YXMgdGhlIGZpcnN0IG1hbiBub3QKCQkJCQllbmdhZ2VkIGluIHBvbGl0aWNzIHdobyBhdHRlbXB0ZWQgdG8gc3BlYWsgb24gdGhlIHN1YmplY3Qgb2YgdGhlIGJlc3QgZm9ybSBvZgoJCQkJCWNvbnN0aXR1dGlvbi4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IG1lbiB3b3JlIHRoZWlyIGhhaXIgbG9uZywgYnV0IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiB0aGlzIHdhcyB0aGUgbWFyayBvZiBhCgkJCQkJCWRhbmR5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+SGlzIHN5c3RlbSB3YXMgZm9yIGEKCQkJCQljaXR5IHdpdGggYSBwb3B1bGF0aW9uIG9mIHRlbiB0aG91c2FuZCwgZGl2aWRlZCBpbnRvIHRocmVlIGNsYXNzZXM7IGZvciBoZSBtYWRlCgkJCQkJb25lIGNsYXNzIG9mIGFydGlzYW5zLCBvbmUgb2YgZmFybWVycywgYW5kIHRoZSB0aGlyZCB0aGUgY2xhc3MgdGhhdCBmb3VnaHQgZm9yCgkJCQkJdGhlIHN0YXRlIGluIHdhciBhbmQgd2FzIHRoZSBhcm1lZCBjbGFzcy4gSGUgZGl2aWRlZCB0aGUgbGFuZCBpbnRvIHRocmVlIHBhcnRzLAoJCQkJCW9uZSBzYWNyZWQsIG9uZSBwdWJsaWMgYW5kIG9uZSBwcml2YXRlOiBzYWNyZWQgbGFuZCB0byBzdXBwbHkgdGhlIGN1c3RvbWFyeQoJCQkJCW9mZmVyaW5ncyB0byB0aGUgZ29kcywgY29tbW9uIGxhbmQgdG8gcHJvdmlkZSB0aGUgd2FycmlvciBjbGFzcyB3aXRoIGZvb2QsIGFuZAoJCQkJCXByaXZhdGUgbGFuZCB0byBiZSBvd25lZCBieSB0aGUgZmFybWVycy4gSGUgdGhvdWdodCB0aGF0IHRoZXJlIGFyZSBvbmx5IHRocmVlCgkJCQkJZGl2aXNpb25zIG9mIHRoZSBsYXcsIHNpbmNlIHRoZSBtYXR0ZXJzIGFib3V0IHdoaWNoIGxhd3N1aXRzIHRha2UgcGxhY2UgYXJlCgkJCQkJdGhyZWUgaW4gbnVtYmVy4oCUb3V0cmFnZSwgZGFtYWdlLCBob21pY2lkZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5IZSBhbHNvIHByb3Bvc2VkIHRvIGVzdGFibGlzaCBvbmUgc3VwcmVtZSBjb3VydCBvZgoJCQkJCWp1c3RpY2UsIHRvIHdoaWNoIHdlcmUgdG8gYmUgY2FycmllZCB1cCBhbGwgdGhlIGNhc2VzIGF0IGxhdyB0aG91Z2h0IHRvIGhhdmUKCQkJCQliZWVuIGRlY2lkZWQgd3JvbmdseSwgYW5kIHRoaXMgY291cnQgaGUgbWFkZSB0byBjb25zaXN0IG9mIGNlcnRhaW4gc2VsZWN0ZWQKCQkJCQllbGRlcnMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjY4YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1268a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkhlIGhlbGQgdGhhdCB0aGUgdmVyZGljdHMgaW4gdGhlIGNvdXJ0cyBvdWdodCBub3QgdG8gYmUgZ2l2ZW4KCQkJCQlieSBiYWxsb3QsIGJ1dCB0aGF0IGVhY2gganVyeW1hbiBzaG91bGQgYnJpbmcgYSB0YWJsZXQgb24gd2hpY2ggaWYgaGUgZm91bmQgYQoJCQkJCXNpbXBsZSB2ZXJkaWN0IG9mIGd1aWx0eSBoZSBzaG91bGQgd3JpdGUgdGhlIHBlbmFsdHksIGFuZCBpZiBzaW1wbHkgbm90IGd1aWx0eQoJCQkJCWxlYXZlIGEgYmxhbmssIGJ1dCBpZiBoZSBmb3VuZCB0aGUgcHJpc29uZXIgZ3VpbHR5IG9uIHNvbWUgY291bnRzIGJ1dCBub3Qgb24KCQkJCQlvdGhlcnMgaGUgc2hvdWxkIHN0YXRlIHRoaXM7IGZvciB0aGUgcHJlc2VudCBzdGF0ZSBvZiB0aGUgbGF3IGhlIHRob3VnaHQKCQkJCQl1bnNhdGlzZmFjdG9yeSwgc2luY2UgaXQgZm9yY2VzIGp1cm9ycyB0byBjb21taXQgcGVyanVyeSBieSBnaXZpbmcgZWl0aGVyIHRoZQoJCQkJCW9uZSB2ZXJkaWN0IG9yIHRoZSBvdGhlci4gPC90cmFuc2xhdGlvbj4="
translation['2.1268a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+SGUKCQkJCQlwcm9wb3NlZCBhIGxhdyB0aGF0IHRob3NlIHdobyBkaXNjb3ZlcmVkIHNvbWV0aGluZyBvZiBhZHZhbnRhZ2UgdG8gdGhlIHN0YXRlCgkJCQkJc2hvdWxkIHJlY2VpdmUgaG9ub3IsIGFuZCB0aGF0IHRoZSBjaGlsZHJlbiBvZiB0aG9zZSB3aG8gZGllZCBpbiB3YXIgc2hvdWxkIGhhdmUKCQkJCQl0aGVpciBtYWludGVuYW5jZSBmcm9tIHRoZSBzdGF0ZSwgaW4gdGhlIGJlbGllZiB0aGF0IHRoaXMgaGFkIG5ldmVyIHlldCBiZWVuCgkJCQkJcHJvdmlkZWQgYnkgbGF3IGFtb25nIG90aGVyIHBlb3BsZeKAlGJ1dCBhcyBhIG1hdHRlciBvZiBmYWN0IHRoaXMgbGF3CgkJCQkJZXhpc3RzIGF0IHByZXNlbnQgYm90aCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gYW5kCgkJCQkJaW4gb3RoZXJzIG9mIHRoZSBjaXRpZXMuIFRoZSBnb3Zlcm5pbmcgb2ZmaWNpYWxzIHdlcmUgYWxsIHRvIGJlIGNob3NlbiBieSB0aGUKCQkJCQlhc3NlbWJseSBvZiB0aGUgcGVvcGxlLCBhbmQgdGhpcyBoZSBtYWRlIHRvIGNvbnNpc3Qgb2YgdGhlIHRocmVlIGNsYXNzZXMgb2YgdGhlCgkJCQkJY2l0eTsgYW5kIHRoZSBvZmZpY2lhbHMgZWxlY3RlZCB3ZXJlIHRvIHN1cGVyaW50ZW5kIHRoZSBidXNpbmVzcyBvZiB0aGUKCQkJCQljb21tdW5pdHkgYW5kIHRoZSBhZmZhaXJzIG9mIGZvcmVpZ24gcmVzaWRlbnRzIGFuZCBvZiBvcnBoYW5zLiBUaGVzZSB0aGVuIGFyZQoJCQkJCXRoZSBncmVhdGVzdCBudW1iZXIgYW5kIHRoZSBtb3N0IG5vdGV3b3J0aHkgb2YgdGhlIHByb3Zpc2lvbnMgaW4gdGhlIHN5c3RlbSBvZgoJCQkJCUhpcHBvZGFtdXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGRvdWJ0IG1pZ2h0IGJlCgkJCQkJcmFpc2VkIGZpcnN0IG9mIGFsbCBhYm91dCB0aGUgZGl2aXNpb24gb2YgdGhlIGdlbmVyYWwgbWFzcyBvZiB0aGUgY2l0aXplbnMuIFRoZQoJCQkJCWFydGlzYW5zLCB0aGUgZmFybWVycyBhbmQgdGhlIG1pbGl0YXJ5IGNsYXNzIGFsbCBwYXJ0aWNpcGF0ZSBpbiB0aGUgZ292ZXJubWVudCwKCQkJCQl0aG91Z2ggdGhlIGZhcm1lcnMgaGF2ZSBub3QgZ290IGFybXMgYW5kIHRoZSBhcnRpc2FucyBuZWl0aGVyIGFybXMgbm9yCgkJCQkJCWxhbmQsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPndoaWNoIG1ha2VzIHRoZW0gYWxtb3N0IHRoZQoJCQkJCXNsYXZlcyBvZiB0aG9zZSB3aG8gcG9zc2VzcyB0aGUgYXJtcy4gVGhlcmVmb3JlIGZvciB0aGVtIHRvIHNoYXJlIGluIGFsbCB0aGUKCQkJCQlvZmZpY2VzIGlzIGltcG9zc2libGUg77yIZm9yIGl0IGlzIGluZXZpdGFibGUgdGhhdCBib3RoIG1pbGl0YXJ5CgkJCQkJY29tbWFuZGVycyBhbmQgY2l2aWMgZ3VhcmRzIGFuZCBpbiBnZW5lcmFsIHRoZSBtb3N0IGltcG9ydGFudCBvZmZpY2VzIHNob3VsZCBiZQoJCQkJCWFwcG9pbnRlZCBmcm9tIHRob3NlIHRoYXQgaGF2ZSB0aGUgYXJtc++8iTsgYnV0IGlmIHRoZXkgZG8gbm90IHNoYXJlIGluCgkJCQkJdGhlIGdvdmVybm1lbnQgb2YgdGhlIHN0YXRlLCBob3cgaXMgaXQgcG9zc2libGUgZm9yIHRoZW0gdG8gYmUgZnJpZW5kbHkgdG93YXJkcwoJCQkJCXRoZSBjb25zdGl0dXRpb24/IDwvdHJhbnNsYXRpb24+"
translation['2.1268b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS42IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGl0IG1heSBiZSBzYWlkCgkJCQkJdGhhdCB0aGUgcnVsaW5nIGNsYXNzIGFzIHBvc3Nlc3NpbmcgdGhlIGFybXMgaXMgYm91bmQgdG8gYmUgc3Ryb25nZXIgdGhhbiBib3RoCgkJCQkJY2xhc3Nlcy4gQnV0IHRoaXMgaXMgbm90IGVhc3kgaWYgdGhleSBhcmUgbm90IG51bWVyb3VzIGFuZCBpZiB0aGlzIGJlIHRoZSBjYXNlLAoJCQkJCXdoeSBzaG91bGQgdGhlIG90aGVyIGNsYXNzZXMgcGFydGljaXBhdGUgaW4gdGhlIGdvdmVybm1lbnQgYW5kIGNvbnRyb2wgdGhlCgkJCQkJYXBwb2ludG1lbnQgb2YgdGhlIHJ1bGVycz88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QXMgbWlsaXRhcnkgcG9zdHMKCQkJCQkJbXVzdCBiZSBmaWxsZWQgYnkgdGhlIG1pbGl0YXJ5IGNsYXNzLCB0aGUgY2l2aWxpYW5zIHdpbGwgZmVlbCBleGNsdWRlZCBhbmQKCQkJCQkJYmUgZGlzYWZmZWN0ZWQ7IGFuZCB0aGUgbWlsaXRhcnkgY2xhc3MgbWF5IG5vdCBiZSBzdHJvbmcgZW5vdWdoIHRvIGNvbnRyb2wKCQkJCQkJdGhlbS4gQmV0dGVyLCB0aGVuLCBub3QgdG8gZ2l2ZSBmdWxsIGNpdGl6ZW5zaGlwIHRvIGNpdmlsaWFucy48L25vdGU+IEFnYWluLAoJCQkJCXdoYXQgdXNlIGFyZSB0aGUgZmFybWVycyB0byB0aGUgc3RhdGU/IGFydGlzYW5zIHRoZXJlIG11c3QgbmVjZXNzYXJpbHkgYmUKCQkJCQnvvIhmb3IgZXZlcnkgc3RhdGUgcmVxdWlyZXMgYXJ0aXNhbnPvvIksIGFuZCB0aGV5IGNhbiBtYWtlIGEKCQkJCQlsaXZpbmcgYXMgaW4gdGhlIG90aGVyIHN0YXRlcyBmcm9tIHRoZSBwcmFjdGljZSBvZiB0aGVpciBjcmFmdDsgYnV0IGFzIGZvciB0aGUKCQkJCQlmYXJtZXJzLCBhbHRob3VnaCBpdCB3b3VsZCBoYXZlIGJlZW4gcmVhc29uYWJsZSBmb3IgdGhlbSB0byBiZSBhIHBvcnRpb24gb2YgdGhlCgkJCQkJc3RhdGUgaWYgdGhleSBwcm92aWRlZCB0aGUgY2xhc3MgcG9zc2Vzc2luZyB0aGUgYXJtcyB3aXRoIGl0cyBmb29kLCBhcyBpdCBpcwoJCQkJCXRoZXkgaGF2ZSBwcml2YXRlIGxhbmQgb2YgdGhlaXIgb3duIGFuZCBmYXJtIGl0IGZvciB0aGVtc2VsdmVzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhZ2FpbiwgaWYgdGhlIGNvbW1vbiBsYW5kIGZyb20gd2hpY2gKCQkJCQl0aG9zZSB3aG8gZmlnaHQgZm9yIHRoZSBzdGF0ZSBhcmUgdG8gaGF2ZSB0aGVpciBmb29kIGlzIHRvIGJlIGZhcm1lZCBieQoJCQkJCXRoZW1zZWx2ZXMsIHRoZSBtaWxpdGFyeSBjbGFzcyB3b3VsZCBub3QgYmUgZGlmZmVyZW50IGZyb20gdGhlIGFncmljdWx0dXJhbCwgYnV0CgkJCQkJdGhlIGxlZ2lzbGF0b3IgaW50ZW5kcyBpdCB0byBiZTsgd2hpbGUgaWYgdGhlIGN1bHRpdmF0b3JzIG9mIHRoZSBjb21tb24gbGFuZCBhcmUKCQkJCQl0byBiZSBhIGRpZmZlcmVudCBzZXQgb2YgcGVvcGxlIGZyb20gYm90aCB0aG9zZSB3aG8gY3VsdGl2YXRlIHRoZSBwcml2YXRlIGZhcm1zCgkJCQkJYW5kIHRoZSBzb2xkaWVycywgdGhpcyB3aWxsIGJlIHlldCBhIGZvcnRoIHNlY3Rpb24gb2YgdGhlIHN0YXRlLCBob2xkaW5nIG5vIHBhcnQKCQkJCQlpbiBpdCBidXQgcXVpdGUgZXN0cmFuZ2VkIGZyb20gdGhlIGdvdmVybm1lbnQuIEJ1dCB5ZXQgaWYgb25lIGlzIHRvIG1ha2UgdGhvc2UKCQkJCQl3aG8gY3VsdGl2YXRlIHRoZSBwcml2YXRlIGFuZCB0aGUgY29tbW9uIGxhbmQgdGhlIHNhbWUgcGVvcGxlLCB0aGUgYW1vdW50IG9mIHRoZQoJCQkJCXByb2R1Y2UgZnJvbSB0aGUgZmFybXMgd2hpY2ggZWFjaCBtYW4gd2lsbCBjdWx0aXZhdGUgd2lsbCBiZSBzY2FudHkgZm9yIHR3bwoJCQkJCWhvdXNlaG9sZHMsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjY4YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1268b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBtb3Jlb3ZlciB3aHkgYXJlIHRoZXkgbm90IGJvdGggdG8gdGFrZSBmb29kIGZvciB0aGVtc2VsdmVzCgkJCQkJYW5kIHRvIHN1cHBseSBpdCB0byB0aGUgc29sZGllcnMgZGlyZWN0IGZyb20gdGhlIGxhbmQgYW5kIGZyb20gdGhlIHNhbWUKCQkJCQlhbGxvdG1lbnRzPyA8L3RyYW5zbGF0aW9uPg=="
translation['2.1268b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS44IiB1bml0PSJMb2ViIGNoYXAiIC8+QWxsIHRoZXNlIHBvaW50cwoJCQkJCXRoZXJlZm9yZSBpbnZvbHZlIG11Y2ggY29uZnVzaW9uLiBBbHNvIHRoZSBsYXcgYWJvdXQgdHJpYWxzIGlzCgkJCQkJdW5zYXRpc2ZhY3RvcnnigJR0aGUgcmVxdWlyZW1lbnQgdGhhdCB0aGUgdmVyZGljdCBzaGFsbCBiZSBnaXZlbiBvbgoJCQkJCXNlcGFyYXRlIGNvdW50cyB3aGVuIHRoZSBjaGFyZ2UgaW4gdGhlIGluZGljdG1lbnQgaXMgc2luZ2xlLCBhbmQgdGhlIGNvbnZlcnNpb24KCQkJCQlvZiB0aGUganVyb3IgaW50byBhbiBhcmJpdHJhdG9yLiBBIHF1YWxpZmllZCB2ZXJkaWN0IGlzIHByYWN0aWNhYmxlIGluIGFuCgkJCQkJYXJiaXRyYXRpb24gZXZlbiB3aGVuIHRoZXJlIGFyZSBzZXZlcmFsIGFyYml0cmF0b3JzIO+8iGZvciB0aGV5IGNvbmZlcgoJCQkJCXdpdGggb25lIGFub3RoZXIgYWJvdXQgdGhlaXIgdmVyZGljdO+8iSwgYnV0IGl0IGlzIG5vdCBwcmFjdGljYWJsZSBpbiB0aGUKCQkJCQlsYXctY291cnRzLCBidXQgdGhlIGNvbnRyYXJ5IHRvIHRoaXMgaXMgYWN0dWFsbHkgcHJvdmlkZWQgZm9yIGJ5IG1vc3QgbGF3Z2l2ZXJzLAoJCQkJCXdobyBwcm9oaWJpdCBjb25zdWx0YXRpb24gYmV0d2VlbiB0aGUganVyeW1lbi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVuIHRoZSB2ZXJkaWN0IHdpbGwgaW5ldml0YWJseSBiZSBhIGNvbmZ1c2VkIG9uZSB3aGVuCgkJCQkJdGhlIGp1cm9yIHRoaW5rcyB0aGF0IHRoZSBkZWZlbmRhbnQgaXMgbGlhYmxlIGZvciBkYW1hZ2VzIGJ1dCBub3QgaW4gc28gbGFyZ2UgYW4KCQkJCQlhbW91bnQgYXMgdGhlIHBsYWludGlmZiBjbGFpbXM7IGZvciB0aGUgcGxhaW50aWZmIHdpbGwgc3VlIGZvciB0d2VudHkgbWluYWU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIG1pbmEsIDEwMCBkcmFjaG1hcywgbWF5IGJlIHB1dCBhdCA0IHBvdW5kcwoJCQkJCQnvvIhnb2xk77yJLjwvbm90ZT4gYW5kIHRoZSBqdXJvciB3aWxsIGFkanVkZ2UgdGVuIG1pbmFlCgkJCQkJ77yIb3IgdGhlIGZvcm1lciBzb21lIGxhcmdlciBhbmQgdGhlIGxhdHRlciBzb21lIHNtYWxsZXIgc3Vt77yJLAoJCQkJCWFuZCBhbm90aGVyIGp1cm9yIGZpdmUgbWluYWUsIGFuZCB5ZXQgYW5vdGhlciBmb3VyIO+8iGFuZCBzbyB0aGV5IHdpbGwKCQkJCQlvYnZpb3VzbHkgZ28gb24gbWFraW5nIGZyYWN0aW9uc++8iSwgd2hpbGUgb3RoZXJzIHdpbGwgYXdhcmQgdGhlIHdob2xlCgkJCQkJc3VtLCBhbmQgb3RoZXJzIG5vdGhpbmc7IHdoYXQgdGhlbiB3aWxsIGJlIHRoZSBtZXRob2Qgb2YgY291bnRpbmcgdGhlIHZvdGVzPwoJCQkJCUFnYWluLCBub2JvZHkgY29tcGVscyB0aGUganVyb3IgdG8gY29tbWl0IHBlcmp1cnkgd2hvLCBpZiB0aGUgaW5kaWN0bWVudCBoYXMKCQkJCQliZWVuIGRyYXduIGluIHNpbXBsZSBmb3JtLCBnaXZlcyBhIHNpbXBsZSB2ZXJkaWN0IG9mIGFjcXVpdHRhbCBvciBjb25kZW1uYXRpb24sCgkJCQkJYW5kIGdpdmVzIGl0IGp1c3RseTsgZm9yIHRoZSBqdXJvcjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz53aG8KCQkJCQlnaXZlcyBhIHZlcmRpY3Qgb2YgYWNxdWl0dGFsIGRvZXMgbm90IGdpdmUganVkZ2VtZW50IHRoYXQgdGhlIGRlZmVuZGFudCBvd2VzCgkJCQkJbm90aGluZywgYnV0IHRoYXQgaGUgZG9lcyBub3Qgb3dlIHRoZSB0d2VudHkgbWluYWUgZm9yIHdoaWNoIGhlIGlzIHN1ZWQ7IGl0IGlzCgkJCQkJb25seSB0aGUganVyb3Igd2hvIGdpdmVzIGEgdmVyZGljdCBjb25kZW1uaW5nIHRoZSBkZWZlbmRhbnQgd2hlbiBoZSBkb2VzIG5vdAoJCQkJCXRoaW5rIHRoYXQgaGUgb3dlcyB0d2VudHkgbWluYWUgd2hvIGNvbW1pdHMgcGVyanVyeS4gPC90cmFuc2xhdGlvbj4="
translation['2.1269a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFzIGZvciB0aGUgdmlldyB0aGF0IGFuIGhvbm9yIG91Z2h0IHRvIGJlIGF3YXJkZWQgdG8gdGhvc2UKCQkJCQl3aG8gaW52ZW50IHNvbWV0aGluZyBhZHZhbnRhZ2VvdXMgdG8gdGhlIHN0YXRlLCBsZWdpc2xhdGlvbiB0byB0aGlzIGVmZmVjdCBpcwoJCQkJCW5vdCBzYWZlLCBidXQgb25seSBzcGVjaW91cyB0byB0aGUgZWFyOyBmb3IgaXQgaW52b2x2ZXMgbWFsaWNpb3VzIHByb3NlY3V0aW9ucwoJCQkJCWFuZCwgaXQgbWF5IGV2ZW4gaGFwcGVuLCBjb25zdGl0dXRpb25hbCB1cGhlYXZhbHMuIEFuZCB0aGUgbWF0dGVyIGxlYWRzIHRvCgkJCQkJYW5vdGhlciBwcm9ibGVtIGFuZCBhIGRpZmZlcmVudCBpbnF1aXJ5OiBzb21lIHBlcnNvbnMgcmFpc2UgdGhlIHF1ZXN0aW9uIHdoZXRoZXIKCQkJCQl0byBhbHRlciB0aGUgYW5jZXN0cmFsIGxhd3MsIHN1cHBvc2luZyBhbm90aGVyIGxhdyBpcyBiZXR0ZXIsIGlzIGhhcm1mdWwgb3IKCQkJCQlhZHZhbnRhZ2VvdXMgdG8gc3RhdGVzLiBIZW5jZSBpdCBpcyBub3QgZWFzeSB0byBnaXZlIGEgc3BlZWR5IGFncmVlbWVudCB0byB0aGUKCQkJCQlhYm92ZSBwcm9wb3NhbCB0byBob25vciByZWZvcm1lcnMsIGlmIHJlYWxseSBpdCBpcyBkaXNhZHZhbnRhZ2VvdXMgdG8gYWx0ZXIgdGhlCgkJCQkJbGF3czsgeWV0IGl0IGlzIHBvc3NpYmxlIHRoYXQgcGVyc29ucyBtYXkgYnJpbmcgZm9yd2FyZCB0aGUgcmVwZWFsIG9mIGxhd3Mgb3Igb2YKCQkJCQl0aGUgY29uc3RpdHV0aW9uIGFzIGEgYmVuZWZpdCB0byB0aGUgY29tbXVuaXR5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgc2luY2Ugd2UgaGF2ZSBtYWRlIG1lbnRpb24gb2YgdGhpcyBxdWVzdGlvbiwgaXQgd2lsbAoJCQkJCWJlIGJldHRlciBpZiB3ZSBzZXQgb3V0IGEgZmV3IGZ1cnRoZXIgb2JzZXJ2YXRpb25zIGFib3V0IGl0LCBmb3IsIGFzIHdlIHNhaWQsIGl0CgkJCQkJaW52b2x2ZXMgZGlmZmljdWx0eS4gQW5kIGl0IG1pZ2h0IGJlIHRob3VnaHQgdGhhdCBpdCB3b3VsZCBiZSBiZXR0ZXIgZm9yCgkJCQkJYWx0ZXJhdGlvbiB0byB0YWtlIHBsYWNlOyBhdCBhbGwgZXZlbnRzIGluIHRoZSBvdGhlciBmaWVsZHMgb2Yga25vd2xlZGdlIHRoaXMKCQkJCQloYXMgcHJvdmVkIGJlbmVmaWNpYWzigJRmb3IgZXhhbXBsZSwgbWVkaWNpbmUgaGFzIGJlZW4gaW1wcm92ZWQgYnkgYmVpbmcKCQkJCQlhbHRlcmVkIGZyb20gdGhlIGFuY2VzdHJhbCBzeXN0ZW0sIGFuZCBneW1uYXN0aWMgdHJhaW5pbmcsIGFuZCBpbiBnZW5lcmFsIGFsbAoJCQkJCXRoZSBhcnRzIGFuZCBmYWN1bHRpZXMgc28gdGhhdCBzaW5jZSBzdGF0ZXNtYW5zaGlwIGFsc28gaXMgdG8gYmUgY291bnRlZCBhcyBvbmUKCQkJCQlvZiB0aGVzZSwgaXQgaXMgY2xlYXIgdGhhdCB0aGUgc2FtZSB0aGluZyBuZWNlc3NhcmlseSBob2xkcyBnb29kIGluIHJlZ2FyZCB0byBpdAoJCQkJCWFzIHdlbGwuIEFuZCBpdCBtaWdodCBiZSBzYWlkIHRoYXQgYSBzaWduIG9mIHRoaXMgaGFzIG9jY3VycmVkIGluIHRoZSBhY3R1YWwKCQkJCQlldmVudHMgb2YgaGlzdG9yeSwgZm9yIO+8iG9uZSBtaWdodCBhcmd1Ze+8iSB0aGUgbGF3cyBvZiBhbmNpZW50CgkJCQkJdGltZXMgd2VyZSB0b28gc2ltcGxlIGFuZCB1bmNpdmlsaXplZDogdGhlIEhlbGxlbmVzLCBmb3IgaW5zdGFuY2UsIHVzZWQgYm90aCB0bwoJCQkJCWNhcnJ5IGFybXMgYW5kIHRvIHB1cmNoYXNlIHRoZWlyIHdpdmVzIGZyb20gb25lIGFub3RoZXIsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBhbGwgdGhlIHN1cnZpdmFscyBvZiB0aGUgY3VzdG9tcyBvZiBhbnRpcXVpdHkKCQkJCQlleGlzdGluZyBhbnl3aGVyZSBhcmUgdXR0ZXJseSBmb29saXNoLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI2OWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1269a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFzIGZvciBleGFtcGxlIGF0IEN5bWUgdGhlcmUgaXMKCQkJCQlhIGxhdyByZWxhdGluZyB0byB0cmlhbHMgZm9yIG11cmRlciwgdGhhdCBpZiB0aGUgcHJvc2VjdXRvciBvbiB0aGUgY2hhcmdlIG9mCgkJCQkJbXVyZGVyIHByb2R1Y2VzIGEgY2VydGFpbiBudW1iZXIgb2YgaGlzIG93biByZWxhdGl2ZXMgYXMgd2l0bmVzc2VzLCB0aGUKCQkJCQlkZWZlbmRhbnQgaXMgZ3VpbHR5IG9mIHRoZSBtdXJkZXIuIEFuZCBpbiBnZW5lcmFsIGFsbCBtZW4gcmVhbGx5IHNlZWsgd2hhdCBpcwoJCQkJCWdvb2QsIG5vdCB3aGF0IHdhcyBjdXN0b21hcnkgd2l0aCB0aGVpciBmb3JlZmF0aGVyczsgYW5kIGl0IGlzIHByb2JhYmxlIHRoYXQKCQkJCQlwcmltaXRpdmUgbWFua2luZCwgd2hldGhlciBzcHJ1bmcgZnJvbSB0aGUgZWFydGg8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U28gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGVzLiBXRCAxMDgiIHZhbGlkPSJ5ZXMiPkhlcy4gV0QgMTA4PC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGluZC4gTi4gNiIgdmFsaWQ9InllcyI+UGluZC4gTi4gNi4xPC9iaWJsPi48L25vdGU+IG9yIHRoZSBzdXJ2aXZvcnMgb2Ygc29tZQoJCQkJCWRlc3RydWN0aXZlIGNhdGFjbHlzbSw8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIZXMuIFdEIDEwOCIgdmFsaWQ9InllcyI+SGVzLiBXRCAxMDg8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQaW5kLiBOLiA2IiB2YWxpZD0ieWVzIj5QaW5kLiBOLiA2LjE8L2JpYmw+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TbyA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBMYXdzIDY3NiIgdmFsaWQ9InllcyI+UGxhdC4gTGF3cyA2NzYgZmYuPC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gVGltLiAyMiIgdmFsaWQ9InllcyI+UGxhdC4gVGltLiAyMiBmZi48L2JpYmw+IEFyaXN0b3RsZSBiZWxpZXZlZCB0aGF0IG1hbiBoYWQgZXhpc3RlZCBmb3IKCQkJCQkJZXZlciwgYW5kIHRoYXQgdGhlIHdvcmxkIGhhZCBleHBlcmllbmNlZCBvbmx5IGxvY2FsIGNhdGFjbHlzbXMuPC9ub3RlPiB3ZXJlCgkJCQkJanVzdCBsaWtlIG9yZGluYXJ5IGZvb2xpc2ggcGVvcGxlLCBhcyBpbmRlZWQgaXMgYWN0dWFsbHkgc2FpZCBvZiB0aGUgZWFydGgtYm9ybgoJCQkJCXJhY2UsIHNvIHRoYXQgaXQgaXMgb2RkIHRoYXQgd2Ugc2hvdWxkIGFiaWRlIGJ5IHRoZWlyIG5vdGlvbnMuIE1vcmVvdmVyIGV2ZW4KCQkJCQl3cml0dGVuIGNvZGVzIG9mIGxhdyBtYXkgd2l0aCBhZHZhbnRhZ2Ugbm90IGJlIGxlZnQgdW5hbHRlcmVkLiBGb3IganVzdCBhcyBpbgoJCQkJCXRoZSBvdGhlciBhcnRzIGFzIHdlbGwsIHNvIHdpdGggdGhlIHN0cnVjdHVyZSBvZiB0aGUgc3RhdGUgaXQgaXMgaW1wb3NzaWJsZSB0aGF0CgkJCQkJaXQgc2hvdWxkIGhhdmUgYmVlbiBmcmFtZWQgYXJpZ2h0IGluIGFsbCBpdHMgZGV0YWlsczsgZm9yIGl0IG11c3Qgb2YgbmVjZXNzaXR5CgkJCQkJYmUgY291Y2hlZCBpbiBnZW5lcmFsIHRlcm1zLCBidXQgb3VyIGFjdGlvbnMgZGVhbCB3aXRoIHBhcnRpY3VsYXIgdGhpbmdzLiBUaGVzZQoJCQkJCWNvbnNpZGVyYXRpb25zIHRoZXJlZm9yZSBtYWtlIGl0IGNsZWFyIHRoYXQgaXQgaXMgcHJvcGVyIGZvciBzb21lIGxhd3Mgc29tZXRpbWVzCgkJCQkJdG8gYmUgYWx0ZXJlZC4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gTGF3cyA2NzYiIHZhbGlkPSJ5ZXMiPlBsYXQuIExhd3MgNjc2IGZmLjwvYmlibD4sIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFRpbS4gMjIiIHZhbGlkPSJ5ZXMiPlBsYXQuIFRpbS4gMjIgZmYuPC9iaWJsPiBBcmlzdG90bGUgYmVsaWV2ZWQgdGhhdCBtYW4gaGFkIGV4aXN0ZWQgZm9yCgkJCQkJCWV2ZXIsIGFuZCB0aGF0IHRoZSB3b3JsZCBoYWQgZXhwZXJpZW5jZWQgb25seSBsb2NhbCBjYXRhY2x5c21zLjwvdHJhbnNsYXRpb24+"
translation['2.1269a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBpZiB3ZSBjb25zaWRlcgoJCQkJCXRoZSBtYXR0ZXIgaW4gYW5vdGhlciB3YXksIGl0IHdvdWxkIHNlZW0gdG8gYmUgYSB0aGluZyB0aGF0IG5lZWRzIG11Y2ggY2F1dGlvbi4KCQkJCQlGb3Igd2hlbiBpdCBpcyB0aGUgY2FzZSB0aGF0IHRoZSBpbXByb3ZlbWVudCB3b3VsZCBiZSBzbWFsbCwgYnV0IGl0IGlzIGEgYmFkCgkJCQkJdGhpbmcgdG8gYWNjdXN0b20gbWVuIHRvIHJlcGVhbCB0aGUgbGF3cyBsaWdodGx5LCBpdCBpcyBjbGVhciB0aGF0IHNvbWUgbWlzdGFrZXMKCQkJCQlib3RoIG9mIHRoZSBsZWdpc2xhdG9yIGFuZCBvZiB0aGUgbWFnaXN0cmF0ZSBzaG91bGQgYmUgcGFzc2VkIG92ZXI7IGZvciB0aGUKCQkJCQlwZW9wbGUgd2lsbCBub3QgYmUgYXMgbXVjaCBiZW5lZml0ZWQgYnkgbWFraW5nIGFuIGFsdGVyYXRpb24gYXMgdGhleSB3aWxsIGJlCgkJCQkJaGFybWVkIGJ5IGJlY29taW5nIGFjY3VzdG9tZWQgdG8gZGlzdHJ1c3QgdGhlaXIgcnVsZXJzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbHNvLCB0aGUgZXhhbXBsZSBmcm9tIHRoZSBjYXNlIG9mIHRoZSBhcnRzIGlzIGEKCQkJCQkJbWlzdGFrZSw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YXMgdG8gY2hhbmdlIHRoZSBwcmFjdGljZQoJCQkJCW9mIGFuIGFydCBpcyBhIGRpZmZlcmVudCB0aGluZyBmcm9tIGFsdGVyaW5nIGEgbGF3OyBmb3IgdGhlIGxhdyBoYXMgbm8gcG93ZXIgdG8KCQkJCQljb21wZWwgb2JlZGllbmNlIGJlc2lkZSB0aGUgZm9yY2Ugb2YgY3VzdG9tLCBhbmQgY3VzdG9tIG9ubHkgZ3Jvd3MgdXAgaW4gbG9uZwoJCQkJCWxhcHNlIG9mIHRpbWUsIHNvIHRoYXQgbGlnaHRseSB0byBjaGFuZ2UgZnJvbSB0aGUgZXhpc3RpbmcgbGF3cyB0byBvdGhlciBuZXcKCQkJCQlsYXdzIGlzIHRvIHdlYWtlbiB0aGUgcG93ZXIgb2YgdGhlIGxhdy4gQWdhaW4sIGV2ZW4gaWYgYWx0ZXJhdGlvbiBvZiB0aGUgbGF3cyBpcwoJCQkJCXByb3BlciwgYXJlIGFsbCB0aGUgbGF3cyB0byBiZSBvcGVuIHRvIGFsdGVyYXRpb24sIGFuZCBpbiBldmVyeSBmb3JtIG9mCgkJCQkJY29uc3RpdHV0aW9uLCBvciBub3Q/IGFuZCBpcyBhbnkgY2hhbmNlIHBlcnNvbiB0byBiZSBjb21wZXRlbnQgdG8gaW50cm9kdWNlCgkJCQkJYWx0ZXJhdGlvbnMgb3Igb25seSBjZXJ0YWluIHBlb3BsZT8gZm9yIHRoZXJlIGlzIGEgZ3JlYXQgZGlmZmVyZW5jZSBiZXR3ZWVuCgkJCQkJdGhlc2UgYWx0ZXJuYXRpdmVzLiBUaGVyZWZvcmUgbGV0IHVzIGFiYW5kb24gdGhpcyBpbnF1aXJ5IGZvciB0aGUgcHJlc2VudCwgc2luY2UKCQkJCQlpdCBiZWxvbmdzIHRvIG90aGVyIG9jY2FzaW9ucy48L3RyYW5zbGF0aW9uPg=="
translation['2.1269b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk9uIHRoZSBzdWJqZWN0IG9mIHRoZSBjb25zdGl0dXRpb24gb2YKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IGFuZCB0aGF0IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTIwNTYiPkNyZXRlPC9wbGFjZU5hbWU+LCBhbmQgdmlydHVhbGx5IGluIHJlZ2FyZCB0byB0aGUgb3RoZXIKCQkJCQlmb3JtcyBvZiBjb25zdGl0dXRpb24gYWxzbywgdGhlIHF1ZXN0aW9ucyB0aGF0IGFyaXNlIGZvciBjb25zaWRlcmF0aW9uIGFyZSB0d28sCgkJCQkJb25lIHdoZXRoZXIgdGhlaXIgbGVnYWwgc3RydWN0dXJlIGhhcyBhbnkgZmVhdHVyZSB0aGF0IGlzIGFkbWlyYWJsZSBvciB0aGUKCQkJCQlyZXZlcnNlIGluIGNvbXBhcmlzb24gd2l0aCB0aGUgYmVzdCBzeXN0ZW0sIGFub3RoZXIgd2hldGhlciBpdCBjb250YWlucyBhbnkKCQkJCQlwcm92aXNpb24gdGhhdCBpcyByZWFsbHkgb3Bwb3NlZCB0byB0aGUgZnVuZGFtZW50YWwgcHJpbmNpcGxlIGFuZCBjaGFyYWN0ZXIgb2YKCQkJCQl0aGUgY29uc3RpdHV0aW9uIHRoYXQgdGhlIGZvdW5kZXJzIGhhZCBpbiB2aWV3LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBpdCBpcyBhIHRoaW5nIGFkbWl0dGVkCgkJCQkJdGhhdCBhIHN0YXRlIHRoYXQgaXMgdG8gYmUgd2VsbCBnb3Zlcm5lZCBtdXN0IGJlIHByb3ZpZGVkIHdpdGggbGVpc3VyZSBmcm9tCgkJCQkJbWVuaWFsIG9jY3VwYXRpb25zOyBidXQgaG93IHRoaXMgaXMgdG8gYmUgcHJvdmlkZWQgaXQgaXMgbm90IGVhc3kgdG8gYXNjZXJ0YWluLgoJCQkJCVRoZSBzZXJmIGNsYXNzIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDEzOTkiPlRoZXNzYWx5PC9wbGFjZU5hbWU+IHJlcGVhdGVkbHkKCQkJCQlyb3NlIGFnYWluc3QgaXRzIG1hc3RlcnMsIGFuZCBzbyBkaWQgdGhlIEhlbG90cyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIHdoZXJlIHRoZXkgYXJlIGxpa2UgYW4gZW5lbXkKCQkJCQljb25zdGFudGx5IHNpdHRpbmcgaW4gd2FpdCBmb3IgdGhlIGRpc2FzdGVycyBvZiB0aGUgU3BhcnRpYXRlcy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ob3RoaW5nIG9mIHRoZSBraW5kIGhhcyBoaXRoZXJ0byBvY2N1cnJlZAoJCQkJCWluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTIwNTYiPkNyZXRlPC9wbGFjZU5hbWU+LCB0aGUgcmVhc29uIHBlcmhhcHMgYmVpbmcgdGhhdAoJCQkJCXRoZSBuZWlnaGJvcmluZyBjaXRpZXMsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjY5YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1269b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmV2ZW4gd2hlbiBhdCB3YXIgd2l0aCBvbmUgYW5vdGhlciwgaW4gbm8gaW5zdGFuY2UKCQkJCQlhbGx5IHRoZW1zZWx2ZXMgd2l0aCB0aGUgcmViZWxzLCBiZWNhdXNlIGFzIHRoZXkgdGhlbXNlbHZlcyBhbHNvIHBvc3Nlc3MgYSBzZXJmCgkJCQkJY2xhc3MgdGhpcyB3b3VsZCBub3QgYmUgZm9yIHRoZWlyIGludGVyZXN0OyB3aGVyZWFzIHRoZSBMYWNvbmlhbnMgd2VyZSBlbnRpcmVseQoJCQkJCXN1cnJvdW5kZWQgYnkgaG9zdGlsZSBuZWlnaGJvcnMsIEFyZ2l2ZXMsIE1lc3NlbmlhbnMgYW5kIEFyY2FkaWFucy4gRm9yIHdpdGggdGhlCgkJCQkJVGhlc3NhbGlhbnMgdG9vIHRoZSBzZXJmIHJpc2luZ3Mgb3JpZ2luYWxseSBiZWdhbiBiZWNhdXNlIHRoZXkgd2VyZSBzdGlsbCBhdCB3YXIKCQkJCQl3aXRoIHRoZWlyIG5laWdoYm9ycywgdGhlIEFjaGFlYW5zLCBQZXJyYWViaSBhbmQgTWFnbmVzaWFucy4gPC90cmFuc2xhdGlvbj4="
translation['2.1269b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi40IiB1bml0PSJMb2ViIGNoYXAiIC8+QWxzbywgYXBhcnQgZnJvbSBvdGhlciBkcmF3YmFja3MsIHRoZSBtZXJlCgkJCQkJbmVjZXNzaXR5IG9mIHBvbGljaW5nIGEgc2VyZiBjbGFzcyBpcyBhbiBpcmtzb21lIGJ1cmRlbuKAlHRoZSBwcm9ibGVtIG9mCgkJCQkJaG93IGludGVyY291cnNlIHdpdGggdGhlbSBpcyB0byBiZSBjYXJyaWVkIG9uOiBpZiBhbGxvd2VkIGZyZWVkb20gdGhleSBncm93CgkJCQkJaW5zb2xlbnQgYW5kIGNsYWltIGVxdWFsIHJpZ2h0cyB3aXRoIHRoZWlyIG1hc3RlcnMsIGFuZCBpZiBtYWRlIHRvIGxpdmUgYSBoYXJkCgkJCQkJbGlmZSB0aGV5IHBsb3QgYWdhaW5zdCB0aGVtIGFuZCBoYXRlIHRoZW0uIEl0IGlzIGNsZWFyIHRoZXJlZm9yZSB0aGF0IHRob3NlCgkJCQkJd2hvc2UgaGVsb3Qtc3lzdGVtIHdvcmtzIG91dCBpbiB0aGlzIHdheSBkbyBub3QgZGlzY292ZXIgdGhlIGJlc3QgbW9kZSBvZgoJCQkJCXRyZWF0aW5nIHRoZSBwcm9ibGVtLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFnYWluLCB0aGUKCQkJCQlmcmVlZG9tIGluIHJlZ2FyZCB0byB3b21lbiBpcyBkZXRyaW1lbnRhbCBib3RoIGluIHJlZ2FyZCB0byB0aGUgcHVycG9zZSBvZiB0aGUKCQkJCQljb25zdGl0dXRpb24gYW5kIGluIHJlZ2FyZCB0byB0aGUgaGFwcGluZXNzIG9mIHRoZSBzdGF0ZS4gRm9yIGp1c3QgYXMgbWFuIGFuZAoJCQkJCXdpZmUgYXJlIHBhcnQgb2YgYSBob3VzZWhvbGQsIGl0IGlzIGNsZWFyIHRoYXQgdGhlIHN0YXRlIGFsc28gaXMgZGl2aWRlZCBuZWFybHkKCQkJCQlpbiBoYWxmIGludG8gaXRzIG1hbGUgYW5kIGZlbWFsZSBwb3B1bGF0aW9uLCBzbyB0aGF0IGluIGFsbCBjb25zdGl0dXRpb25zIGluCgkJCQkJd2hpY2ggdGhlIHBvc2l0aW9uIG9mIHRoZSB3b21lbiBpcyBiYWRseSByZWd1bGF0ZWQgb25lIGhhbGYgb2YgdGhlIHN0YXRlIG11c3QgYmUKCQkJCQlkZWVtZWQgdG8gaGF2ZSBiZWVuIG5lZ2xlY3RlZCBpbiBmcmFtaW5nIHRoZSBsYXcuIEFuZCB0aGlzIGhhcyB0YWtlbiBwbGFjZSBpbgoJCQkJCXRoZSBzdGF0ZSB1bmRlciBjb25zaWRlcmF0aW9uLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3IgdGhlCgkJCQkJbGF3Z2l2ZXIgd2lzaGluZyB0aGUgd2hvbGUgY2l0eSB0byBiZSBvZiBzdHJvbmcgY2hhcmFjdGVyIGRpc3BsYXlzIGhpcyBpbnRlbnRpb24KCQkJCQljbGVhcmx5IGluIHJlbGF0aW9uIHRvIHRoZSBtZW4sIGJ1dCBpbiB0aGUgY2FzZSBvZiB0aGUgd29tZW4gaGFzIGVudGlyZWx5CgkJCQkJbmVnbGVjdGVkIHRoZSBtYXR0ZXI7IGZvciB0aGV5IGxpdmUgZGlzc29sdXRlbHk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHRleHR1YWwgZW1lbmRhdGlvbiBnaXZpbmcg4oCYbGl2ZSB3aXRob3V0CgkJCQkJCXJlc3RyYWludOKAmSBpcyBwcm9iYWJseSBjb3JyZWN0Ljwvbm90ZT4gaW4gcmVzcGVjdCBvZiBldmVyeSBzb3J0IG9mCgkJCQkJZGlzc29sdXRlbmVzcywgYW5kIGx1eHVyaW91c2x5LiA8L3RyYW5zbGF0aW9uPg=="
translation['2.1270a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi42IiB1bml0PSJMb2ViIGNoYXAiIC8+U28KCQkJCQl0aGF0IHRoZSBpbmV2aXRhYmxlIHJlc3VsdCBpcyB0aGF0IGluIGEgc3RhdGUgdGh1cyBjb25zdGl0dXRlZCB3ZWFsdGggaXMgaGVsZCBpbgoJCQkJCWhvbm9yLCBlc3BlY2lhbGx5IGlmIGl0IGlzIHRoZSBjYXNlIHRoYXQgdGhlIHBlb3BsZSBhcmUgdW5kZXIgdGhlIHN3YXkgb2YgdGhlaXIKCQkJCQl3b21lbiwgYXMgbW9zdCBvZiB0aGUgbWlsaXRhcnkgYW5kIHdhcmxpa2UgcmFjZXMgYXJlLCBleGNlcHQgdGhlIENlbHRzIGFuZCBzdWNoCgkJCQkJb3RoZXIgcmFjZXMgYXMgaGF2ZSBvcGVubHkgaGVsZCBpbiBob25vciBwYXNzaW9uYXRlIGZyaWVuZHNoaXAgYmV0d2VlbiBtYWxlcy4KCQkJCQlGb3IgaXQgYXBwZWFycyB0aGF0IHRoZSBvcmlnaW5hbCB0ZWxsZXIgb2YgdGhlIGxlZ2VuZCBoYWQgZ29vZCByZWFzb24gZm9yCgkJCQkJdW5pdGluZyBBcmVzIHdpdGggQXBocm9kaXRlLCBmb3IgYWxsIG1lbiBvZiBtYXJ0aWFsIHNwaXJpdCBhcHBlYXIgdG8gYmUKCQkJCQlhdHRyYWN0ZWQgdG8gdGhlIGNvbXBhbmlvbnNoaXAgZWl0aGVyIG9mIG1hbGUgYXNzb2NpYXRlcyBvciBvZiB3b21lbi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5IZW5jZSB0aGlzIGNoYXJhY3RlcmlzdGljIGV4aXN0ZWQgYW1vbmcgdGhlCgkJCQkJU3BhcnRhbnMsIGFuZCBpbiB0aGUgdGltZSBvZiB0aGVpciBlbXBpcmUgbWFueSB0aGluZ3Mgd2VyZSBjb250cm9sbGVkIGJ5IHRoZQoJCQkJCXdvbWVuOyB5ZXQgd2hhdCBkaWZmZXJlbmNlIGRvZXMgaXQgbWFrZSB3aGV0aGVyIHRoZSB3b21lbiBydWxlIG9yIHRoZSBydWxlcnMgYXJlCgkJCQkJcnVsZWQgYnkgdGhlIHdvbWVuPyBUaGUgcmVzdWx0IGlzIHRoZSBzYW1lLiBBbmQgYWx0aG91Z2ggYnJhdmVyeSBpcyBvZiBzZXJ2aWNlCgkJCQkJZm9yIG5vbmUgb2YgdGhlIHJlZ3VsYXIgZHV0aWVzIG9mIGxpZmUsIGJ1dCBpZiBhdCBhbGwsIGluIHdhciwgZXZlbiBpbiB0aGlzCgkJCQkJcmVzcGVjdCB0aGUgU3BhcnRhbnMnIHdvbWVuIHdlcmUgbW9zdCBoYXJtZnVsOyBhbmQgdGhleSBzaG93ZWQgdGhpcyBhdCB0aGUgdGltZQoJCQkJCW9mIHRoZSBUaGViYW4gaW52YXNpb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlVuZGVyIEVwYW1pbm9uZGFzLAoJCQkJCQkJPGRhdGUgYXV0aG5hbWU9Ii0zNjkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjkiPjM2OTwvZGF0ZT4gQi5DLjwvbm90ZT4gZm9yIHRoZXkgcmVuZGVyZWQgbm8gdXNlZnVsCgkJCQkJc2VydmljZSwgYXMgdGhlIHdvbWVuIGRvIGluIG90aGVyIHN0YXRlcywgd2hpbGUgdGhleSBjYXVzZWQgbW9yZSBjb25mdXNpb24gdGhhbgoJCQkJCXRoZSBlbmVteS4gPGRhdGUgYXV0aG5hbWU9Ii0zNjkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjkiPjM2OTwvZGF0ZT4gQi5DLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi44IiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgdHJ1ZSB0aGVyZWZvcmUgdGhhdAoJCQkJCWF0IHRoZSBvdXRzZXQgdGhlIGZyZWVkb20gYWxsb3dlZCB0byB3b21lbiBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gc2VlbXMgdG8gaGF2ZSBjb21lIGFib3V0IHdpdGggZ29vZCByZWFzb24sIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjcwYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1270a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGUKCQkJCQlTcGFydGFucyB1c2VkIHRvIGJlIGF3YXkgaW4gZXhpbGUgYWJyb2FkIGZvciBsb25nIHBlcmlvZHMgb24gYWNjb3VudCBvZiB0aGVpcgoJCQkJCW1pbGl0YXJ5IGV4cGVkaXRpb25zLCBib3RoIHdoZW4gZmlnaHRpbmcgdGhlIHdhciBhZ2FpbnN0IHRoZSBBcmdpdmVzIGFuZCBhZ2FpbgoJCQkJCWR1cmluZyB0aGUgd2FyIGFnYWluc3QgdGhlIEFyY2FkaWFucyBhbmQgTWVzc2VuaWFuczsgYnV0IHdoZW4gdGhleSBoYWQgdHVybmVkIHRvCgkJCQkJcGVhY2VmdWwgcHVyc3VpdHMsIGFsdGhvdWdoIHRoZXkgaGFuZGVkIG92ZXIgdGhlbXNlbHZlcyB0byB0aGUgbGF3Z2l2ZXIgYWxyZWFkeQoJCQkJCXByZXBhcmVkIGZvciBvYmVkaWVuY2UgYnkgbWlsaXRhcnkgbGlmZSDvvIhmb3IgdGhpcyBoYXMgbWFueSBlbGVtZW50cyBvZgoJCQkJCXZpcnR1Ze+8iSwgYXMgZm9yIHRoZSB3b21lbiBpdCBpcyBzYWlkIHRoYXQgTHljdXJndXMgZGlkIGF0dGVtcHQgdG8gYnJpbmcKCQkJCQl0aGVtIHVuZGVyIHRoZSBsYXdzLCBidXQgc2luY2UgdGhleSByZXNpc3RlZCBoZSBnYXZlIGl0IHVwLiA8L3RyYW5zbGF0aW9uPg=="
translation['2.1270a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi45IiB1bml0PSJMb2ViIGNoYXAiIC8+U28gdGhlIFNwYXJ0YW4gd29tZW4gYXJlLCBpdCBpcyB0cnVlLCByZXNwb25zaWJsZQoJCQkJCWZvciB3aGF0IHRvb2sgcGxhY2UsIGFuZCB0aGVyZWZvcmUgbWFuaWZlc3RseSBmb3IgdGhpcyBtaXN0YWtlIGFtb25nIHRoZSByZXN0OwoJCQkJCWFsdGhvdWdoIGZvciBvdXIgb3duIHBhcnQgd2UgYXJlIG5vdCBjb25zaWRlcmluZyB0aGUgcXVlc3Rpb24gd2hvIGRlc2VydmVzCgkJCQkJZXhjdXNlIG9yIGRvZXMgbm90LCBidXQgd2hhdCBpcyB0aGUgcmlnaHQgb3Igd3JvbmcgbW9kZSBvZiBhY3Rpb24uIEJ1dCwgYXMgd2FzCgkJCQkJYWxzbyBzYWlkIGJlZm9yZSwgZXJyb3JzIGFzIHJlZ2FyZHMgdGhlIHN0YXR1cyBvZiB3b21lbiBzZWVtIG5vdCBvbmx5IHRvIGNhdXNlIGEKCQkJCQljZXJ0YWluIHVuc2VlbWxpbmVzcyBpbiB0aGUgYWN0dWFsIGNvbmR1Y3Qgb2YgdGhlIHN0YXRlIGJ1dCB0byBjb250cmlidXRlIGluCgkJCQkJc29tZSBkZWdyZWUgdG8gdW5kdWUgbG92ZSBvZiBtb25leS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIG5leHQgdG8gdGhlIHRoaW5ncyBqdXN0IHNwb2tlbiBvZiBvbmUgbWlnaHQgY2Vuc3VyZSB0aGUgU3BhcnRhbgoJCQkJCWluc3RpdHV0aW9ucyB3aXRoIHJlc3BlY3QgdG8gdGhlIHVuZXF1YWwgZGlzdHJpYnV0aW9uIG9mIHdlYWx0aC4gSXQgaGFzIGNvbWUKCQkJCQlhYm91dCB0aGF0IHNvbWUgb2YgdGhlIFNwYXJ0YW5zIG93biB0b28gbXVjaCBwcm9wZXJ0eSBhbmQgc29tZSBleHRyZW1lbHkgbGl0dGxlOwoJCQkJCW93aW5nIHRvIHdoaWNoIHRoZSBsYW5kIGhhcyBmYWxsZW4gaW50byBmZXcgaGFuZHMsIGFuZCB0aGlzIGhhcyBhbHNvIGJlZW4gYmFkbHkKCQkJCQlyZWd1bGF0ZWQgYnkgdGhlIGxhd3M7PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmZvciB0aGUKCQkJCQlsYXdnaXZlciBtYWRlIGl0IGRpc2hvbm9yYWJsZSB0byBzZWxsIGEgZmFtaWx5J3MgZXhpc3RpbmcgZXN0YXRlLCBhbmQgZGlkIHNvCgkJCQkJcmlnaHRseSwgYnV0IGhlIGdyYW50ZWQgbGliZXJ0eSB0byBhbGllbmF0ZSBsYW5kIGF0IHdpbGwgYnkgZ2lmdCBvciBiZXF1ZXN0OyB5ZXQKCQkJCQl0aGUgcmVzdWx0IHRoYXQgaGFzIGhhcHBlbmVkIHdhcyBib3VuZCB0byBmb2xsb3cgaW4gdGhlIG9uZSBjYXNlIGFzIHdlbGwgYXMgaW4KCQkJCQl0aGUgb3RoZXIuIDwvdHJhbnNsYXRpb24+"
translation['2.1270b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhbHNvIG5lYXJseQoJCQkJCXR3by1maWZ0aHMgb2YgdGhlIHdob2xlIGFyZWEgb2YgdGhlIGNvdW50cnkgaXMgb3duZWQgYnkgd29tZW4sIGJlY2F1c2Ugb2YgdGhlCgkJCQkJbnVtYmVyIG9mIHdvbWVuIHdobyBpbmhlcml0IGVzdGF0ZXMgYW5kIHRoZSBwcmFjdGljZSBvZiBnaXZpbmcgbGFyZ2UgZG93cmllczsKCQkJCQl5ZXQgaXQgd291bGQgaGF2ZSBiZWVuIGJldHRlciBpZiBkb3dyaWVzIGhhZCBiZWVuIHByb2hpYml0ZWQgYnkgbGF3IG9yIGxpbWl0ZWQKCQkJCQl0byBhIHNtYWxsIG9yIG1vZGVyYXRlIGFtb3VudCAuIC4gLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIGNsYXVzZQoJCQkJCQlzZWVtcyB0byBoYXZlIGJlZW4gbG9zdDog4oCYQWxzbyBpdCB3b3VsZCBoYXZlIGJlZW4gYmV0dGVyIHRvCgkJCQkJCXJlZ3VsYXRlIGJ5IGxhdyB0aGUgbWFycmlhZ2Ugb2YgaGVpcmVzc2VzLuKAmTwvbm90ZT4gQnV0IGFzIGl0IGlzIGhlCgkJCQkJaXMgYWxsb3dlZCB0byBnaXZlIGFuIGhlaXJlc3MgaW4gbWFycmlhZ2UgdG8gd2hvbWV2ZXIgaGUgbGlrZXM7IGFuZCBpZiBoZSBkaWVzCgkJCQkJd2l0aG91dCBoYXZpbmcgbWFkZSBkaXJlY3Rpb25zIGFzIHRvIHRoaXMgYnkgd2lsbCwgd2hvZXZlciBoZSBsZWF2ZXMgYXMgaGlzCgkJCQkJZXhlY3V0b3IgYmVzdG93cyBoZXIgdXBvbiB3aG9tIGhlIGNob29zZXMuIEFzIGEgcmVzdWx0IG9mIHRoaXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGUgY29uc2VxdWVudCBmYWxsIGluIHRoZSBudW1iZXIgb2YgbWVuCgkJCQkJCXJpY2ggZW5vdWdoIHRvIGtlZXAgYSBob3JzZSBvciBldmVuIHRvIHByb3ZpZGUgdGhlbXNlbHZlcyB3aXRoIGhlYXZ5CgkJCQkJCWFybXMuPC9ub3RlPiBhbHRob3VnaCB0aGUgY291bnRyeSBpcyBjYXBhYmxlIG9mIHN1cHBvcnRpbmcgZmlmdGVlbiBodW5kcmVkCgkJCQkJY2F2YWxyeSBhbmQgdGhpcnR5IHRob3VzYW5kIGhlYXZ5LWFybWVkIHRyb29wZXJzLCB0aGV5IG51bWJlcmVkIG5vdCBldmVuIGEKCQkJCQl0aG91c2FuZC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZSBkZWZlY3RpdmUgbmF0dXJlCgkJCQkJb2YgdGhlaXIgc3lzdGVtIG9mIGxhbmQtdGVudXJlIGhhcyBiZWVuIHByb3ZlZCBieSB0aGUgYWN0dWFsIGZhY3RzIG9mIGhpc3Rvcnk6CgkJCQkJdGhlIHN0YXRlIGRpZCBub3Qgc3VjY2VlZCBpbiBlbmR1cmluZyBhIHNpbmdsZSBibG93LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgYmF0dGxlIG9mIExldWN0cmEsIDxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzE8L2RhdGU+CgkJCQkJCUIuQy48L25vdGU+IGJ1dCBwZXJpc2hlZCBvd2luZyB0byB0aGUgc21hbGxuZXNzIG9mIGl0cyBwb3B1bGF0aW9uLiBUaGV5IGhhdmUKCQkJCQlhIHRyYWRpdGlvbiB0aGF0IGluIHRoZSBlYXJsaWVyIHJlaWducyB0aGV5IHVzZWQgdG8gYWRtaXQgZm9yZWlnbmVycyB0byB0aGVpcgoJCQkJCWNpdGl6ZW5zaGlwLCB3aXRoIHRoZSByZXN1bHQgdGhhdCBkZWFydGggb2YgcG9wdWxhdGlvbiBkaWQgbm90IG9jY3VyIGluIHRob3NlCgkJCQkJZGF5cywgYWx0aG91Z2ggdGhleSB3ZXJlIGF0IHdhciBmb3IgYSBsb25nIHBlcmlvZDsgYW5kIGl0IGlzIHN0YXRlZCB0aGF0IGF0IG9uZQoJCQkJCXRpbWUgdGhlIFNwYXJ0aWF0ZXMgbnVtYmVyZWQgYXMgbWFueSBhcyB0ZW4gdGhvdXNhbmQuIEhvd2V2ZXIsIHdoZXRoZXIgdGhpcyBpcwoJCQkJCXRydWUgb3Igbm90LCBpdCBpcyBiZXR0ZXIgZm9yIGEgc3RhdGUncyBtYWxlIHBvcHVsYXRpb24gdG8gYmUga2VwdCB1cCBieQoJCQkJCW1lYXN1cmVzIHRvIGVxdWFsaXplIHByb3BlcnR5LiA8ZGF0ZSBhdXRobmFtZT0iLTM3MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MSI+MzcxPC9kYXRlPgoJCQkJCQlCLkMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlCgkJCQkJbGF3IGluIHJlbGF0aW9uIHRvIHBhcmVudGFnZSBpcyBhbHNvIHNvbWV3aGF0IGFkdmVyc2UgdG8gdGhlIGNvcnJlY3Rpb24gb2YgdGhpcwoJCQkJCWV2aWwuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjcwYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1270b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkZvciB0aGUgbGF3Z2l2ZXIgZGVzaXJpbmcgdG8gbWFrZSB0aGUgU3BhcnRpYXRlcyBhcyBudW1lcm91cyBhcwoJCQkJCXBvc3NpYmxlIGhvbGRzIG91dCBpbmR1Y2VtZW50cyB0byB0aGUgY2l0aXplbnMgdG8gaGF2ZSBhcyBtYW55IGNoaWxkcmVuIGFzCgkJCQkJcG9zc2libGU6IGZvciB0aGV5IGhhdmUgYSBsYXcgcmVsZWFzaW5nIHRoZSBtYW4gd2hvIGhhcyBiZWVuIGZhdGhlciBvZiB0aHJlZQoJCQkJCXNvbnMgZnJvbSBtaWxpdGFyeSBzZXJ2aWNlLCBhbmQgZXhlbXB0aW5nIHRoZSBmYXRoZXIgb2YgZm91ciBmcm9tIGFsbCB0YXhlcy4gWWV0CgkJCQkJaXQgaXMgY2xlYXIgdGhhdCBpZiBhIG51bWJlciBvZiBzb25zIGFyZSBib3JuIGFuZCB0aGUgbGFuZCBpcyBjb3JyZXNwb25kaW5nbHkKCQkJCQlkaXZpZGVkIHRoZXJlIHdpbGwgaW5ldml0YWJseSBjb21lIHRvIGJlIG1hbnkgcG9vciBtZW4uPC90cmFuc2xhdGlvbj4="
translation['2.1270b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Nb3Jlb3ZlciB0aGUKCQkJCQlyZWd1bGF0aW9ucyBmb3IgdGhlIEVwaG9yYXRlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBmaXZlIEVwaG9ycywKCQkJCQkJZWxlY3RlZCBmb3IgYSB5ZWFyIGJ5IHRoZSBwZW9wbGUsIHdlcmUgdGhlIHJlYWwgcnVsZXJzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPi4gVGhlIHR3byBraW5ncyB3ZXJlIGhlcmVkaXRhcnk7CgkJCQkJCXRoZSBzZW5hdGUgb2YgdHdlbnR5LWVpZ2h0IG5vYmxlcyBhZHZpc2VkIHRoZW0sIGFuZCB0aGUgRXBob3JzIHByZXNpZGVkIGF0CgkJCQkJCXRoZSBBc3NlbWJseSBvZiBjaXRpemVucyBvdmVyIHRoaXJ0eSB5ZWFycyBvbGQsIHdobyB2b3RlZCBvbiB0aGUgbWVhc3VyZXMgb2YKCQkJCQkJdGhlIEtpbmdzIGFuZCBFcGhvcnMgYnV0IGNvdWxkIG5vdCBkaXNjdXNzIHRoZW0uIFRoZSBzbWFsbCBmbGVldCB3YXMKCQkJCQkJY29tbWFuZGVkIGJ5IGEgc2luZ2xlIGFkbWlyYWwgYXBwb2ludGVkIGZvciBhIHllYXIgYnkgdGhlIEVwaG9ycyBhbmQgbm90CgkJCQkJCWFsbG93ZWQgdG8gaG9sZCBvZmZpY2UgdHdpY2UuPC9ub3RlPiBhcmUgYWxzbyBiYWQuIEZvciB0aGlzIG9mZmljZSBoYXMKCQkJCQlhYnNvbHV0ZSBjb250cm9sIG92ZXIgdGhlaXIgbW9zdCBpbXBvcnRhbnQgYWZmYWlycywgYnV0IHRoZSBFcGhvcnMgYXJlIGFwcG9pbnRlZAoJCQkJCWZyb20gdGhlIGVudGlyZSBwZW9wbGUsIHNvIHRoYXQgcXVpdGUgcG9vciBtZW4gb2Z0ZW4gaGFwcGVuIHRvIGdldCBpbnRvIHRoZQoJCQkJCW9mZmljZSwgd2hvIG93aW5nIHRvIHRoZWlyIHBvdmVydHkgdXNlZCB0byBiZTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPi4gVGhlIHR3byBraW5ncyB3ZXJlIGhlcmVkaXRhcnk7CgkJCQkJCXRoZSBzZW5hdGUgb2YgdHdlbnR5LWVpZ2h0IG5vYmxlcyBhZHZpc2VkIHRoZW0sIGFuZCB0aGUgRXBob3JzIHByZXNpZGVkIGF0CgkJCQkJCXRoZSBBc3NlbWJseSBvZiBjaXRpemVucyBvdmVyIHRoaXJ0eSB5ZWFycyBvbGQsIHdobyB2b3RlZCBvbiB0aGUgbWVhc3VyZXMgb2YKCQkJCQkJdGhlIEtpbmdzIGFuZCBFcGhvcnMgYnV0IGNvdWxkIG5vdCBkaXNjdXNzIHRoZW0uIFRoZSBzbWFsbCBmbGVldCB3YXMKCQkJCQkJY29tbWFuZGVkIGJ5IGEgc2luZ2xlIGFkbWlyYWwgYXBwb2ludGVkIGZvciBhIHllYXIgYnkgdGhlIEVwaG9ycyBhbmQgbm90CgkJCQkJCWFsbG93ZWQgdG8gaG9sZCBvZmZpY2UgdHdpY2UuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdGhlIEdyZWVrIHNob3VsZCBiZSBhbHRlcmVkIHRvIGdpdmUKCQkJCQkJ4oCYYXJlLuKAmTwvbm90ZT4gZWFzaWx5IGJvdWdodC4gVGhpcyB3YXMgb2Z0ZW4gbWFuaWZlc3RlZAoJCQkJCWluIGVhcmxpZXIgdGltZXMsIGFuZCBhbHNvIGxhdGVseSBpbiB0aGUgYWZmYWlyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlVua25vd248L25vdGU+IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQW5kcm9zIENpdHkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFuZHJvcyBDaXR5Ij5BbmRyb3M8L3BsYWNlTmFtZT47IGZvciBjZXJ0YWluIEVwaG9ycyB3ZXJlIGNvcnJ1cHRlZCB3aXRoIG1vbmV5IGFuZCBzbyBmYXIKCQkJCQlhcyBsYXkgaW4gdGhlaXIgcG93ZXIgcnVpbmVkIHRoZSB3aG9sZSBzdGF0ZS4gQW5kIGJlY2F1c2UgdGhlIG9mZmljZSB3YXMgdG9vCgkJCQkJcG93ZXJmdWwsIGFuZCBlcXVhbCB0byBhIHR5cmFubnksIHRoZSBraW5ncyBhbHNvIHdlcmUgY29tcGVsbGVkIHRvIGN1bHRpdmF0ZQoJCQkJCXBvcHVsYXIgZmF2b3IsIHNvIHRoYXQgaW4gdGhpcyB3YXkgdG9vIHRoZSBjb25zdGl0dXRpb24gd2FzIGpvaW50bHkgaW5qdXJlZCwgZm9yCgkJCQkJb3V0IG9mIGFuIGFyaXN0b2NyYWN5IGNhbWUgdG8gYmUgZXZvbHZlZCBhIGRlbW9jcmFjeS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjE1IiB1bml0PSJMb2ViIGNoYXAiIC8+VGh1cyB0aGlzIG9mZmljZSBkb2VzLCBpdCBpcyB0cnVlLCBob2xkIHRvZ2V0aGVyIHRoZQoJCQkJCWNvbnN0aXR1dGlvbuKAlGZvciB0aGUgY29tbW9uIHBlb3BsZSBrZWVwIHF1aWV0IGJlY2F1c2UgdGhleSBoYXZlIGEKCQkJCQlzaGFyZSBpbiB0aGUgaGlnaGVzdCBvZmZpY2Ugb2Ygc3RhdGUsIHNvIHRoYXQgd2hldGhlciB0aGlzIGlzIGR1ZSB0byB0aGUKCQkJCQlsYXdnaXZlciBvcjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5oYXMgY29tZSBhYm91dCBieSBjaGFuY2UsCgkJCQkJdGhlIEVwaG9yYXRlIGlzIGFkdmFudGFnZW91cyBmb3IgdGhlIGNvbmR1Y3Qgb2YgYWZmYWlyczsgZm9yIGlmIGEgY29uc3RpdHV0aW9uCgkJCQkJaXMgdG8gYmUgcHJlc2VydmVkLCBhbGwgdGhlIHNlY3Rpb25zIG9mIHRoZSBzdGF0ZSBtdXN0IHdpc2ggaXQgdG8gZXhpc3QgYW5kIHRvCgkJCQkJY29udGludWUgb24gdGhlIHNhbWUgbGluZXM7IHNvIHRoZSBraW5ncyBhcmUgaW4gdGhpcyBmcmFtZSBvZiBtaW5kIG93aW5nIHRvCgkJCQkJdGhlaXIgb3duIGhvbm9yYWJsZSByYW5rLCB0aGUgbm9iaWxpdHkgb3dpbmcgdG8gdGhlIG9mZmljZSBvZiB0aGUgRWxkZXJzLCB3aGljaAoJCQkJCWlzIGEgcHJpemUgb2YgdmlydHVlLCBhbmQgdGhlIGNvbW1vbiBwZW9wbGUgYmVjYXVzZSBvZiB0aGUgRXBob3JhdGUsIHdoaWNoIGlzCgkJCQkJYXBwb2ludGVkIGZyb20gdGhlIHdob2xlIHBvcHVsYXRpb27igJQ8L3RyYW5zbGF0aW9uPg=="
translation['2.1271a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCB5ZXQgdGhlIEVwaG9yYXRlLCB0aG91Z2ggcmlnaHRseSBvcGVuIHRvIGFsbCB0aGUKCQkJCQljaXRpemVucywgb3VnaHQgbm90IHRvIGJlIGVsZWN0ZWQgYXMgaXQgaXMgbm93LCBmb3IgdGhlIG1ldGhvZCBpcyB0b28KCQkJCQkJY2hpbGRpc2guPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZXJlIGlzIG5vIGNsZWFyIGV2aWRlbmNlIHdoYXQKCQkJCQkJdGhlIG1ldGhvZCB3YXMuPC9ub3RlPiBBbmQgZnVydGhlciB0aGUgRXBob3JzIGhhdmUganVyaXNkaWN0aW9uIGluIGxhd3N1aXRzCgkJCQkJb2YgaGlnaCBpbXBvcnRhbmNlLCBhbHRob3VnaCB0aGV5IGFyZSBhbnkgY2hhbmNlIHBlb3BsZSwgc28gdGhhdCBpdCB3b3VsZCBiZQoJCQkJCWJldHRlciBpZiB0aGV5IGRpZCBub3QgZGVjaWRlIGNhc2VzIG9uIHRoZWlyIG93biBqdWRnZW1lbnQgYnV0IGJ5IHdyaXR0ZW4gcnVsZXMKCQkJCQlhbmQgYWNjb3JkaW5nIHRvIHRoZSBsYXdzLiBBbHNvIHRoZSBtb2RlIG9mIGxpZmUgb2YgdGhlIEVwaG9ycyBpcyBub3QgaW4KCQkJCQljb25mb3JtaXR5IHdpdGggdGhlIGFpbSBvZiB0aGUgc3RhdGUsIGZvciBpdCBpcyBpdHNlbGYgdG9vIGx1eHVyaW91cywgd2hlcmVhcyBpbgoJCQkJCXRoZSBjYXNlIG9mIHRoZSBvdGhlciBjaXRpemVucyB0aGUgcHJlc2NyaWJlZCBsaWZlIGdvZXMgdG9vIGZhciBpbiB0aGUgZGlyZWN0aW9uCgkJCQkJb2YgaGFyc2huZXNzLCBzbyB0aGF0IHRoZXkgYXJlIHVuYWJsZSB0byBlbmR1cmUgaXQsIGFuZCBzZWNyZXRseSBkZXNlcnQgdGhlIGxhdwoJCQkJCWFuZCBlbmpveSB0aGUgcGxlYXN1cmVzIG9mIHRoZSBib2R5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuMTciIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbHNvIHRoZWlyIHJlZ3VsYXRpb25zIGZvciB0aGUgb2ZmaWNlIG9mIHRoZSBFbGRlcnMgYXJlIG5vdCBnb29kOyBpdCBpcyB0cnVlCgkJCQkJdGhhdCBpZiB0aGVzZSB3ZXJlIHBlcnNvbnMgb2YgYSBoaWdoIGNsYXNzIHdobyBoYWQgYmVlbiBhZGVxdWF0ZWx5IHRyYWluZWQgaW4KCQkJCQltYW5seSB2YWxvciwgb25lIG1pZ2h0IHBlcmhhcHMgc2F5IHRoYXQgdGhlIGluc3RpdHV0aW9uIHdhcyBhZHZhbnRhZ2VvdXMgdG8gdGhlCgkJCQkJc3RhdGUsIGFsdGhvdWdoIHRoZWlyIGxpZmUtdGVudXJlIG9mIHRoZSBqdWRnZXNoaXAgaW4gaW1wb3J0YW50IHRyaWFscyBpcyBpbmRlZWQKCQkJCQlhIHF1ZXN0aW9uYWJsZSBmZWF0dXJlIO+8iGZvciB0aGVyZSBpcyBvbGQgYWdlIG9mIG1pbmQgYXMgd2VsbCBhcyBvZgoJCQkJCWJvZHnvvIk7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjcxYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1271a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCBhcyB0aGVpciBlZHVjYXRpb24gaGFzIGJlZW4gb24gc3VjaCBsaW5lcyB0aGF0CgkJCQkJZXZlbiB0aGUgbGF3Z2l2ZXIgaGltc2VsZiBjYW5ub3QgdHJ1c3QgaW4gdGhlbSBhcyBtZW4gb2YgdmlydHVlLCBpdCBpcyBhCgkJCQkJZGFuZ2Vyb3VzIGluc3RpdHV0aW9uLiA8L3RyYW5zbGF0aW9uPg=="
translation['2.1271a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpdCBpcwoJCQkJCWtub3duIHRoYXQgdGhvc2Ugd2hvIGhhdmUgYmVlbiBhZG1pdHRlZCB0byB0aGlzIG9mZmljZSB0YWtlIGJyaWJlcyBhbmQgYmV0cmF5CgkJCQkJbWFueSBvZiB0aGUgcHVibGljIGludGVyZXN0cyBieSBmYXZvcml0aXNtOyBzbyB0aGF0IGl0IHdvdWxkIGJlIGJldHRlciBpZiB0aGV5CgkJCQkJd2VyZSBub3QgZXhlbXB0IGZyb20gaGF2aW5nIHRvIHJlbmRlciBhbiBhY2NvdW50IG9mIHRoZWlyIG9mZmljZSwgYnV0IGF0IHByZXNlbnQKCQkJCQl0aGV5IGFyZS4gQW5kIGl0IG1pZ2h0IGJlIGhlbGQgdGhhdCB0aGUgbWFnaXN0cmFjeSBvZiB0aGUgRXBob3JzIHNlcnZlcyB0byBob2xkCgkJCQkJYWxsIHRoZSBvZmZpY2VzIHRvIGFjY291bnQ7IGJ1dCB0aGlzIGdpdmVzIGFsdG9nZXRoZXIgdG9vIG11Y2ggdG8gdGhlIEVwaG9yYXRlLAoJCQkJCWFuZCBpdCBpcyBub3QgdGhlIHdheSBpbiB3aGljaCwgYXMgd2UgbWFpbnRhaW4sIG9mZmljaWFscyBvdWdodCB0byBiZSBjYWxsZWQgdG8KCQkJCQlhY2NvdW50LiBBZ2FpbiwgdGhlIHByb2NlZHVyZSBpbiB0aGUgZWxlY3Rpb24gb2YgdGhlIEVsZGVycyBhcyBhIG1vZGUgb2YKCQkJCQlzZWxlY3Rpb24gaXMgbm90IG9ubHkgY2hpbGRpc2gsIGJ1dCBpdCBpcyB3cm9uZyB0aGF0IG9uZSB3aG8gaXMgdG8gYmUgdGhlIGhvbGRlcgoJCQkJCW9mIHRoaXMgaG9ub3JhYmxlIG9mZmljZSBzaG91bGQgY2FudmFzcyBmb3IgaXQsIGZvciB0aGUgbWFuIHdvcnRoeSBvZiB0aGUgb2ZmaWNlCgkJCQkJb3VnaHQgdG8gaG9sZCBpdCB3aGV0aGVyIGhlIHdhbnRzIHRvIG9yIG5vdC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjE5IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGFzIGl0IGlzIHRoZSBsYXdnaXZlciBjbGVhcmx5IGRvZXMgdGhlIHNhbWUgaGVyZSBhcyBpbgoJCQkJCXRoZSByZXN0IG9mIHRoZSBjb25zdGl0dXRpb246IGhlIG1ha2VzIHRoZSBjaXRpemVucyBhbWJpdGlvdXMgYW5kIGhhcyB1c2VkIHRoaXMKCQkJCQlmb3IgdGhlIGVsZWN0aW9uIG9mIHRoZSBFbGRlcnMsIGZvciBub2JvZHkgd291bGQgYXNrIGZvciBvZmZpY2UgaWYgaGUgd2VyZSBub3QKCQkJCQlhbWJpdGlvdXM7IHlldCBzdXJlbHkgYW1iaXRpb24gYW5kIGxvdmUgb2YgbW9uZXkgYXJlIHRoZSBtb3RpdmVzIHRoYXQgYnJpbmcKCQkJCQlhYm91dCBhbG1vc3QgdGhlIGdyZWF0ZXN0IHBhcnQgb2YgdGhlIHZvbHVudGFyeSB3cm9uZ2RvaW5nIHRoYXQgdGFrZXMgcGxhY2UKCQkJCQlhbW9uZyBtYW5raW5kLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuMjAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BcyB0byBtb25hcmNoeSwgdGhlCgkJCQkJcXVlc3Rpb24gd2hldGhlciBpdCBpcyBub3Qgb3IgaXMgYW4gYWR2YW50YWdlb3VzIGluc3RpdHV0aW9uIGZvciBzdGF0ZXMgdG8KCQkJCQkJcG9zc2VzczxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5tYXkgYmUgbGVmdCB0byBhbm90aGVyCgkJCQkJZGlzY3Vzc2lvbjsgYnV0IGF0IGFsbCBldmVudHMgaXQgd291bGQgYmUgYWR2YW50YWdlb3VzIHRoYXQga2luZ3Mgc2hvdWxkIG5vdCBiZQoJCQkJCWFwcG9pbnRlZCBhcyB0aGV5IGFyZSBub3csIGJ1dCBjaG9zZW4gaW4gZWFjaCBjYXNlIHdpdGggcmVnYXJkIHRvIHRoZWlyIG93biBsaWZlCgkJCQkJYW5kIGNvbmR1Y3QuIEJ1dCBpdCBpcyBjbGVhciB0aGF0IGV2ZW4gdGhlIGxhd2dpdmVyIGhpbXNlbGYgZG9lcyBub3Qgc3VwcG9zZQoJCQkJCXRoYXQgaGUgY2FuIG1ha2UgdGhlIGtpbmdzIG1lbiBvZiBoaWdoIGNoYXJhY3RlcjogYXQgYWxsIGV2ZW50cyBoZSBkaXN0cnVzdHMKCQkJCQl0aGVtIGFzIG5vdCBiZWluZyBwZXJzb25zIG9mIHN1ZmZpY2llbnQgd29ydGggb3dpbmcgdG8gd2hpY2ggdGhlIFNwYXJ0YW5zIHVzZWQKCQkJCQl0byBzZW5kIGtpbmdzIHdobyB3ZXJlIGVuZW1pZXMgYXMgY29sbGVhZ3VlcyBvbiBlbWJhc3NpZXMsIGFuZCB0aG91Z2h0IHRoYXQgdGhlCgkJCQkJc2FmZXR5IG9mIHRoZSBzdGF0ZSBkZXBlbmRlZCBvbiBkaXZpc2lvbiBiZXR3ZWVuIHRoZSBraW5ncy4gPC90cmFuc2xhdGlvbj4="
translation['2.1271b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4yMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFsc28gdGhlIHJlZ3VsYXRpb25zIGZvciB0aGUgdGhlIHB1YmxpYyBtZXNzLXRhYmxlcwoJCQkJCWNhbGxlZCBQaGlkaXRpYSBoYXZlIGJlZW4gYmFkbHkgbGFpZCBkb3duIGJ5IHRoZWlyIG9yaWdpbmF0b3IuIFRoZSByZXZlbnVlIGZvcgoJCQkJCXRoZXNlIG91Z2h0IHRvIGNvbWUgcmF0aGVyIGZyb20gcHVibGljIGZ1bmRzLCBhcyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMjA1NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEyMDU2Ij5DcmV0ZTwvcGxhY2VOYW1lPjsgYnV0IGFtb25nIHRoZSBTcGFydGFucyBldmVyeWJvZHkgaGFzIHRvIGNvbnRyaWJ1dGUsCgkJCQkJYWx0aG91Z2ggc29tZSBvZiB0aGVtIGFyZSB2ZXJ5IHBvb3IgYW5kIHVuYWJsZSB0byBmaW5kIG1vbmV5IGZvciB0aGlzIGNoYXJnZSwgc28KCQkJCQl0aGF0IHRoZSByZXN1bHQgaXMgdGhlIG9wcG9zaXRlIG9mIHdoYXQgdGhlIGxhd2dpdmVyIHB1cnBvc2VkLiBGb3IgaGUgaW50ZW5kcwoJCQkJCXRoZSBvcmdhbml6YXRpb24gb2YgdGhlIGNvbW1vbiB0YWJsZXMgdG8gYmUgZGVtb2NyYXRpYywgYnV0IHdoZW4gcmVndWxhdGVkIGJ5CgkJCQkJdGhlIGxhdyBpbiB0aGlzIG1hbm5lciBpdCB3b3JrcyBvdXQgYXMgYnkgbm8gbWVhbnMgZGVtb2NyYXRpYzsgZm9yIGl0IGlzIG5vdAoJCQkJCWVhc3kgZm9yIHRoZSB2ZXJ5IHBvb3IgdG8gcGFydGljaXBhdGUsIHlldCB0aGVpciBhbmNlc3RyYWwgcmVndWxhdGlvbiBvZiB0aGUKCQkJCQljaXRpemVuc2hpcCBpcyB0aGF0IGl0IGlzIG5vdCB0byBiZWxvbmcgdG8gb25lIHdobyBpcyB1bmFibGUgdG8gcGF5IHRoaXMgdGF4LgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuMjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgbGF3IGFib3V0IHRoZSBBZG1pcmFscyBoYXMKCQkJCQliZWVuIGNyaXRpY2l6ZWQgYnkgc29tZSBvdGhlciB3cml0ZXJzIGFsc28sIGFuZCByaWdodGx5IGNyaXRpY2l6ZWQ7IGZvciBpdCBhY3RzCgkJCQkJYXMgYSBjYXVzZSBvZiBzZWRpdGlvbiwgc2luY2UgaW4gYWRkaXRpb24gdG8gdGhlIGtpbmdzIHdobyBhcmUgbWlsaXRhcnkKCQkJCQljb21tYW5kZXJzIHRoZSBvZmZpY2Ugb2YgQWRtaXJhbCBzdGFuZHMgYWxtb3N0IGFzIGFub3RoZXIga2luZ3NoaXAuIEFub3RoZXIKCQkJCQljcml0aWNpc20gdGhhdCBtYXkgYmUgbWFkZSBhZ2FpbnN0IHRoZSBmdW5kYW1lbnRhbCBwcmluY2lwbGUgb2YgdGhlIGxhd2dpdmVyCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjcxYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1271b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmlzIG9uZSB0aGF0IFBsYXRvIGhhcyBtYWRlIGluIHRoZSA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5MYXdzPC90aXRsZT4uIFRoZQoJCQkJCWVudGlyZSBzeXN0ZW0gb2YgdGhlIGxhd3MgaXMgZGlyZWN0ZWQgdG93YXJkcyBvbmUgcGFydCBvZiB2aXJ0dWUgb25seSwgbWlsaXRhcnkKCQkJCQl2YWxvciwgYmVjYXVzZSB0aGlzIGlzIHNlcnZpY2VhYmxlIGZvciBjb25xdWVzdC4gT3dpbmcgdG8gdGhpcyB0aGV5IHJlbWFpbmVkCgkJCQkJc2VjdXJlIHdoaWxlIGF0IHdhciwgYnV0IGJlZ2FuIHRvIGRlY2xpbmUgd2hlbiB0aGV5IGhhZCB3b24gYW4gZW1waXJlLCBiZWNhdXNlCgkJCQkJdGhleSBkaWQgbm90IGtub3cgaG93IHRvIGxpdmUgYSBsaWZlIG9mIGxlaXN1cmUsIGFuZCBoYWQgYmVlbiB0cmFpbmVkIGluIG5vCgkJCQkJb3RoZXIgZm9ybSBvZiB0cmFpbmluZyBtb3JlIGltcG9ydGFudCB0aGFuIHRoZSBhcnQgb2Ygd2FyLiA8L3RyYW5zbGF0aW9uPg=="
translation['2.1271b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4yMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhbm90aGVyIGVycm9yIG5vIGxlc3Mgc2VyaW91cyB0aGFuIHRoYXQgb25lIGlzCgkJCQkJdGhpczogdGhleSB0aGluayB0aGF0IHRoZSBjb3ZldGVkIHByaXplcyBvZiBsaWZlIGFyZSB3b24gYnkgdmFsb3IgbW9yZSB0aGFuIGJ5CgkJCQkJY293YXJkaWNlLCBhbmQgaW4gdGhpcyB0aGV5IGFyZSByaWdodCwgeWV0IHRoZXkgaW1hZ2luZSB3cm9uZ2x5IHRoYXQgdGhlc2UKCQkJCQlwcml6ZXMgYXJlIHdvcnRoIG1vcmUgdGhhbiB0aGUgdmFsb3IgdGhhdCB3aW5zIHRoZW0uIFRoZSBwdWJsaWMgZmluYW5jZSBvZgoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gaXMgYWxzbyBiYWRseSByZWd1bGF0ZWQ6CgkJCQkJd2hlbiBjb21wZWxsZWQgdG8gY2Fycnkgb24gd2FycyBvbiBhIGxhcmdlIHNjYWxlIHNoZSBoYXMgbm90aGluZyBpbiB0aGUgc3RhdGUKCQkJCQl0cmVhc3VyeSwgYW5kIHRoZSBTcGFydGlhdGVzIHBheSB3YXIgdGF4ZXMgYmFkbHkgYmVjYXVzZSwgYXMgbW9zdCBvZiB0aGUgbGFuZCBpcwoJCQkJCW93bmVkIGJ5IHRoZW0sIHRoZXkgZG8gbm90IHNjcnV0aW5pemUgZWFjaCBvdGhlcidzIGNvbnRyaWJ1dGlvbnMuIEFuZCB0aGUKCQkJCQlsYXdnaXZlciBoYXMgYWNoaWV2ZWQgdGhlIG9wcG9zaXRlIHJlc3VsdCB0byB3aGF0IGlzIGFkdmFudGFnZW91c+KAlGhlCgkJCQkJaGFzIG1hZGUgdGhlIHN0YXRlIHBvb3IgYW5kIHRoZSBpbmRpdmlkdWFsIGNpdGl6ZW4gY292ZXRvdXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlNvIG11Y2ggZm9yIGEgZGlzY3Vzc2lvbiBvZiB0aGUgY29uc3RpdHV0aW9uIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPjogZm9yIHRoZXNlIGFyZSB0aGUgbWFpbiBwb2ludHMgaW4gaXQKCQkJCQlmb3IgY3JpdGljaXNtLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1272a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBDcmV0YW4KCQkJCQljb25zdGl0dXRpb24gYXBwcm94aW1hdGVzIHRvIHRoYXQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LCBidXQgdGhvdWdoIGluIGEgZmV3IHBvaW50cyBpdCBpcyBub3Qgd29yc2UgZnJhbWVkLCBmb3IKCQkJCQl0aGUgbGFyZ2VyIHBhcnQgaXQgaGFzIGEgbGVzcyBwZXJmZWN0IGZpbmlzaC4gRm9yIHRoZSBTcGFydGFuIGNvbnN0aXR1dGlvbgoJCQkJCWFwcGVhcnMgYW5kIGluZGVlZCBpcyBhY3R1YWxseSBzdGF0ZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+ZS5nLiBieQoJCQkJCQlIZHQgMS42NS48L25vdGU+IHRvIGhhdmUgYmVlbiBjb3BpZWQgaW4gbW9zdCBvZiBpdHMgcHJvdmlzaW9ucyBmcm9tIHRoZQoJCQkJCUNyZXRhbjsgYW5kIGFzIGEgcnVsZSBvbGQgdGhpbmdzIGhhdmUgYmVlbiBsZXNzIGZ1bGx5IGVsYWJvcmF0ZWQgdGhhbiBuZXdlcgoJCQkJCW9uZXMuIEZvciBpdCBpcyBzYWlkIHRoYXQgd2hlbiBMeWN1cmd1cyByZWxpbnF1aXNoZWQgaGlzIHBvc3QgYXMgZ3VhcmRpYW4gb2YKCQkJCQlLaW5nIENoYXJpbGF1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Qb3N0aHVtb3VzIHNvbiBvZiBMeWN1cmd1cydzCgkJCQkJCWVsZGVyIGJyb3RoZXIgS2luZyBQb2x5ZGVjdGVzOyBjZi4xMzE2YSAzNC48L25vdGU+IGFuZCB3ZW50IGFicm9hZCwgaGUKCQkJCQlzdWJzZXF1ZW50bHkgcGFzc2VkIG1vc3Qgb2YgaGlzIHRpbWUgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIwNTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjA1NiI+Q3JldGU8L3BsYWNlTmFtZT4gYmVjYXVzZSBvZiB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gdGhlIENyZXRhbnMgYW5kIHRoZQoJCQkJCVNwYXJ0YW5zOyBmb3IgdGhlIEx5Y3RpYW5zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTHljdHVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxMeWN0dXMiPkx5Y3R1czwvcGxhY2VOYW1lPiB3YXMgYW4gaW5sYW5kIGNpdHkgaW4gdGhlIGVhc3QKCQkJCQkJb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIwNTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjA1NiI+Q3JldGU8L3BsYWNlTmFtZT4sIG5vdCBmYXIgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMDg3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEwODcwIj5Dbm9zc3VzPC9wbGFjZU5hbWU+Ljwvbm90ZT4gd2VyZSBjb2xvbmlzdHMgZnJvbQoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEx5Y3R1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTHljdHVzIj5MeWN0dXM8L3BsYWNlTmFtZT4gd2FzIGFuIGlubGFuZCBjaXR5IGluIHRoZSBlYXN0CgkJCQkJCW9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTIwNTYiPkNyZXRlPC9wbGFjZU5hbWU+LCBub3QgZmFyIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTA4NzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMDg3MCI+Q25vc3N1czwvcGxhY2VOYW1lPi48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIGFuZCB0aGUgc2V0dGxlcnMgdGhhdAoJCQkJCXdlbnQgb3V0IHRvIHRoZSBjb2xvbnkgZm91bmQgdGhlIHN5c3RlbSBvZiBsYXdzIGFscmVhZHkgZXhpc3RpbmcgYW1vbmcgdGhlCgkJCQkJcHJldmlvdXMgaW5oYWJpdGFudHMgb2YgdGhlIHBsYWNlOyBvd2luZyB0byB3aGljaCB0aGUgbmVpZ2hib3JpbmcgdmlsbGFnZXJzIGV2ZW4KCQkJCQlub3cgdXNlIHRoZXNlIGxhd3MgaW4gdGhlIHNhbWUgbWFubmVyLCBpbiB0aGUgYmVsaWVmIHRoYXQgTWlub3M8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+TGVnZW5kYXJ5IHJ1bGVyIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTIwNTYiPkNyZXRlPC9wbGFjZU5hbWU+LCBzb24gb2YgWmV1cyBhbmQgRXVyb3BhLCBhbmQgYWZ0ZXIKCQkJCQkJZGVhdGggYSBqdWRnZSBpbiB0aGUgbG93ZXIgd29ybGQuPC9ub3RlPiBmaXJzdCBpbnN0aXR1dGVkIHRoaXMgY29kZSBvZiBsYXdzLgoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMjA1NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEyMDU2Ij5DcmV0ZTwvcGxhY2VOYW1lPiwgc29uIG9mIFpldXMgYW5kIEV1cm9wYSwgYW5kIGFmdGVyCgkJCQkJCWRlYXRoIGEganVkZ2UgaW4gdGhlIGxvd2VyIHdvcmxkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGFsc28gdGhlIGlzbGFuZCBhcHBlYXJzIHRvCgkJCQkJaGF2ZSBiZWVuIGRlc2lnbmVkIGJ5IG5hdHVyZSBhbmQgdG8gYmUgd2VsbCBzaXR1YXRlZCB0byBiZSB1bmRlciBHcmVlayBydWxlLCBhcwoJCQkJCWl0IGxpZXMgYWNyb3NzIHRoZSB3aG9sZSBvZiB0aGUgc2VhLCByb3VuZCB3aGljaCBhbG1vc3QgYWxsIHRoZSBHcmVla3MgYXJlCgkJCQkJc2V0dGxlZDsgZm9yIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTIwNTYiPkNyZXRlPC9wbGFjZU5hbWU+IGlzIG9ubHkgYSBzaG9ydAoJCQkJCWRpc3RhbmNlIGZyb20gdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE3MDc2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTcwNzYiPlBlbG9wb25uZXNlPC9wbGFjZU5hbWU+IGluIG9uZQoJCQkJCWRpcmVjdGlvbiwgYW5kIGZyb20gdGhlIHBhcnQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDAwNCI+QXNpYTwvcGxhY2VOYW1lPgoJCQkJCWFyb3VuZCBUcmlvcGl1bSBhbmQgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTI2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMjY1Ij5SaG9kZXM8L3BsYWNlTmFtZT4gaW4gdGhlCgkJCQkJb3RoZXIuIE93aW5nIHRvIHRoaXMgTWlub3Mgd29uIHRoZSBlbXBpcmUgb2YgdGhlIHNlYSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlRodWMuIDEuNCIgdmFsaWQ9InllcyI+VGh1Yy4gMS40LCA4PC9iaWJsPi4gVGhlIHRyYWRpdGlvbiBvZgoJCQkJCQl0aGUgd2VhbHRoIG9mIE1pbm9zIGlzIHN1cHBvcnRlZCBieSB0aGUgcmVjZW50IGV4Y2F2YXRpb25zIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEwODcwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTA4NzAiPkNub3NzdXM8L3BsYWNlTmFtZT4uPC9ub3RlPiBhbmQgbWFkZSBzb21lIG9mIHRoZQoJCQkJCWlzbGFuZHMgc3ViamVjdCB0byBoaW0gYW5kIHNldHRsZWQgY29sb25pZXMgaW4gb3RoZXJzLCBidXQgZmluYWxseSB3aGVuIG1ha2luZwoJCQkJCWFuIGF0dGFjayBvbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJUaHVjLiAxLjQiIHZhbGlkPSJ5ZXMiPlRodWMuIDEuNCwgODwvYmlibD4uIFRoZSB0cmFkaXRpb24gb2YKCQkJCQkJdGhlIHdlYWx0aCBvZiBNaW5vcyBpcyBzdXBwb3J0ZWQgYnkgdGhlIHJlY2VudCBleGNhdmF0aW9ucyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMDg3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEwODcwIj5Dbm9zc3VzPC9wbGFjZU5hbWU+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAzMTIyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDMxMjIiPlNpY2lseTwvcGxhY2VOYW1lPiBoZSBlbmRlZCBoaXMgbGlmZQoJCQkJCXRoZXJlIG5lYXIgQ2FtaWN1cy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgQ3JldGFuIG9yZ2FuaXphdGlvbiBpcyBvbiB0aGUgc2FtZSBsaW5lcyBhcyB0aGF0IG9mCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPi4gSW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IHRoZSBsYW5kIGlzIHRpbGxlZCBieSB0aGUgSGVsb3RzIGFuZAoJCQkJCWluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTIwNTYiPkNyZXRlPC9wbGFjZU5hbWU+IGJ5IHRoZSBzZXJmczsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNzJhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1272a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBhbHNvCgkJCQkJYm90aCBoYXZlIHB1YmxpYyBtZXNzLXRhYmxlcywgYW5kIGluIG9sZCBkYXlzIHRoZSBTcGFydGFucyBjYWxsZWQgdGhlbSBub3QKCQkJCQnigJhwaGlkaXRpYeKAmSBidXQg4oCYbWVuJ3MgbWVzc2VzLOKAmSBhcyB0aGUKCQkJCQlDcmV0YW5zIGRvLCB3aGljaCBpcyBhIHByb29mIHRoYXQgdGhleSBjYW1lIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIwNTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjA1NiI+Q3JldGU8L3BsYWNlTmFtZT4uIEFuZCBzbyBhbHNvIGRpZCB0aGUgc3lzdGVtIG9mIGdvdmVybm1lbnQ7IGZvciB0aGUgRXBob3JzCgkJCQkJaGF2ZSB0aGUgc2FtZSBwb3dlciBhcyB0aGUgbWFnaXN0cmF0ZXMgY2FsbGVkIENvc21pIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTIwNTYiPkNyZXRlPC9wbGFjZU5hbWU+LCBleGNlcHQgdGhhdCB0aGUgRXBob3JzIGFyZSBmaXZlIGluCgkJCQkJbnVtYmVyIGFuZCB0aGUgQ29zbWkgdGVuOyBhbmQgdGhlIEVsZGVycyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gYXJlIGVxdWFsIGluIG51bWJlciB0byB0aGUgRWxkZXJzIHdob20gdGhlIENyZXRhbnMgY2FsbAoJCQkJCXRoZSBDb3VuY2lsOyBhbmQgbW9uYXJjaHkgZXhpc3RlZCBpbiBmb3JtZXIgdGltZXMsIGJ1dCB0aGVuIHRoZSBDcmV0YW5zCgkJCQkJYWJvbGlzaGVkIGl0LCBhbmQgdGhlIENvc21pIGhvbGQgdGhlIGxlYWRlcnNoaXAgaW4gd2FyOyA8L3RyYW5zbGF0aW9uPg=="
translation['2.1272a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy40IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGFsbCBhcmUgbWVtYmVycyBvZiB0aGUgQXNzZW1ibHksIHRob3VnaCBpdCBoYXMKCQkJCQlubyBwb3dlcnMgZXhjZXB0IHRoZSBmdW5jdGlvbiBvZiBjb25maXJtaW5nIGJ5IHZvdGUgdGhlIHJlc29sdXRpb25zIGFscmVhZHkKCQkJCQlmb3JtZWQgYnkgdGhlIEVsZGVycyBhbmQgdGhlIENvc21pLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgdGhlIENyZXRhbgoJCQkJCWFycmFuZ2VtZW50cyBmb3IgdGhlIHB1YmxpYyBtZXNzLXRhYmxlcyBhcmUgYmV0dGVyIHRoYW4gdGhlIFNwYXJ0YW47IGZvciBhdAoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gZWFjaCBjaXRpemVuIHBheXMgYSBmaXhlZAoJCQkJCXBvbGwtdGF4LCBmYWlsaW5nIHdoaWNoIGhlIGlzIHByZXZlbnRlZCBieSBsYXcgZnJvbSB0YWtpbmcgcGFydCBpbiB0aGUKCQkJCQlnb3Zlcm5tZW50LCBhcyBoYXMgYmVlbiBzYWlkIGJlZm9yZTsgYnV0IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTIwNTYiPkNyZXRlPC9wbGFjZU5hbWU+IHRoZSBzeXN0ZW0gaXMgbW9yZSBjb21tdW5hbCwgZm9yIG91dCBvZiBhbGwgdGhlIGNyb3BzIGFuZAoJCQkJCWNhdHRsZSBwcm9kdWNlZCBmcm9tIHRoZSBwdWJsaWMgbGFuZHMsIGFuZCB0aGUgdHJpYnV0ZXMgcGFpZCBieSB0aGUgc2VyZnMsIG9uZQoJCQkJCXBhcnQgaXMgYXNzaWduZWQgZm9yIHRoZSB3b3JzaGlwIG9mIHRoZSBnb2RzIGFuZCB0aGUgbWFpbnRlbmFuY2Ugb2YgdGhlIHB1YmxpYwoJCQkJCQlzZXJ2aWNlcyw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIHRoZSBvdGhlciBmb3IgdGhlCgkJCQkJcHVibGljIG1lc3MtdGFibGVzLCBzbyB0aGF0IGFsbCB0aGUgY2l0aXplbnMgYXJlIG1haW50YWluZWQgZnJvbSB0aGUgY29tbW9uCgkJCQkJZnVuZHMsIHdvbWVuIGFuZCBjaGlsZHJlbiBhcyB3ZWxsIGFzIG1lbjsgPC90cmFuc2xhdGlvbj4="
translation['2.1272b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy41IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHRoZSBsYXdnaXZlciBoYXMgZGV2aXNlZCBtYW55IHdpc2UgbWVhc3VyZXMgdG8gc2VjdXJlCgkJCQkJdGhlIGJlbmVmaXQgb2YgbW9kZXJhdGlvbiBhdCB0YWJsZSwgYW5kIHRoZSBzZWdyZWdhdGlvbiBvZiB0aGUgd29tZW4gaW4gb3JkZXIKCQkJCQl0aGF0IHRoZXkgbWF5IG5vdCBiZWFyIG1hbnkgY2hpbGRyZW4sIGZvciB3aGljaCBwdXJwb3NlIGhlIGluc3RpdHV0ZWQKCQkJCQlhc3NvY2lhdGlvbiB3aXRoIHRoZSBtYWxlIHNleCwgYXMgdG8gd2hpY2ggdGhlcmUgd2lsbCBiZSBhbm90aGVyIG9jY2FzaW9uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgcHJvbWlzZSBpcyBub3QgZnVsZmlsbGVkPC9ub3RlPiB0bwoJCQkJCWNvbnNpZGVyIHdoZXRoZXIgaXQgd2FzIGEgYmFkIHRoaW5nIG9yIGEgZ29vZCBvbmUuIFRoYXQgdGhlIHJlZ3VsYXRpb25zIGZvciB0aGUKCQkJCQljb21tb24gbWVzcy10YWJsZXMgdGhlcmVmb3JlIGFyZSBiZXR0ZXIgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIwNTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjA1NiI+Q3JldGU8L3BsYWNlTmFtZT4gdGhhbiBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gaXMgbWFuaWZlc3Q7IGJ1dCB0aGUgcmVndWxhdGlvbnMgZm9yIHRoZSBDb3NtaSBhcmUgZXZlbgoJCQkJCXdvcnNlIHRoYW4gdGhvc2UgcmVnYXJkaW5nIHRoZSBFcGhvcnMuIEZvciB0aGUgZXZpbCBhdHRhY2hpbmcgdG8gdGhlIG9mZmljZSBvZgoJCQkJCXRoZSBFcGhvcnMgYmVsb25ncyB0byB0aGUgQ29zbWkgYWxzbywgYXMgdGhlIHBvc3QgaXMgZmlsbGVkIGJ5IGFueSBjaGFuY2UKCQkJCQlwZXJzb25zLCB3aGlsZSB0aGUgYmVuZWZpdCBjb25mZXJyZWQgb24gdGhlIGdvdmVybm1lbnQgYnkgdGhpcyBvZmZpY2UgYXQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IGlzIGxhY2tpbmcgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIwNTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjA1NiI+Q3JldGU8L3BsYWNlTmFtZT4uIEF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiwgYXMgdGhlIGVsZWN0aW9uIGlzIG1hZGUgZnJvbSBhbGwgdGhlIGNpdGl6ZW5zLCB0aGUKCQkJCQljb21tb24gcGVvcGxlIHNoYXJpbmcgaW4gdGhlIGhpZ2hlc3Qgb2ZmaWNlIGRlc2lyZSB0aGUgbWFpbnRlbmFuY2Ugb2YgdGhlCgkJCQkJY29uc3RpdHV0aW9uLCBidXQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIwNTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjA1NiI+Q3JldGU8L3BsYWNlTmFtZT4gdGhleSBkbyBub3QKCQkJCQllbGVjdCB0aGUgQ29zbWkgZnJvbSBhbGwgdGhlIGNpdGl6ZW5zIGJ1dCBmcm9tIGNlcnRhaW4gY2xhbnMsIGFuZCB0aGUgRWxkZXJzCgkJCQkJZnJvbSB0aG9zZSB3aG8gaGF2ZSBoZWxkIHRoZSBvZmZpY2Ugb2YgQ29zbW9zLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPmFib3V0IHdoaWNoIHJlZ3VsYXRpb25zIHRoZSBzYW1lIGNvbW1lbnRzIG1pZ2h0IGJlIG1hZGUgYXMKCQkJCQlhYm91dCB3aGF0IHRha2VzIHBsYWNlIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPjoKCQkJCQl0aGVpciBmcmVlZG9tIGZyb20gYmVpbmcgY2FsbGVkIHRvIGFjY291bnQgYW5kIHRoZWlyIHRlbnVyZSBmb3IgbGlmZSBnaXZlcyB0aGVtCgkJCQkJZ3JlYXRlciByYW5rIHRoYW4gdGhlaXIgbWVyaXQgZGVzZXJ2ZXMsIGFuZCB0aGVpciBhZG1pbmlzdHJhdGlvbiBvZiB0aGVpciBvZmZpY2UKCQkJCQlhdCB0aGVpciBvd24gZGlzY3JldGlvbiBhbmQgbm90IHVuZGVyIHRoZSBndWlkYW5jZSBvZiBhIHdyaXR0ZW4gY29kZSBpcwoJCQkJCWRhbmdlcm91cy4gQW5kIHRoZSBmYWN0IHRoYXQgdGhlIGNvbW1vbiBwZW9wbGUgcXVpZXRseSB0b2xlcmF0ZSB0aGVpciBleGNsdXNpb24KCQkJCQlpcyBubyBwcm9vZiB0aGF0IHRoZSBhcnJhbmdlbWVudCBpcyBhIHNvdW5kIG9uZTsgZm9yIHRoZSBDb3NtaSB1bmxpa2UgdGhlIEVwaG9ycwoJCQkJCW1ha2Ugbm8gc29ydCBvZiBwcm9maXQsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjcyYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1272b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFzIHRoZXkgbGl2ZSBpbiBhbiBpc2xhbmQgcmVtb3RlIGZyb20gYW55IHBlb3BsZSB0bwoJCQkJCWNvcnJ1cHQgdGhlbS4gQWxzbyB0aGUgcmVtZWR5IHdoaWNoIHRoZXkgZW1wbG95IGZvciB0aGlzIGRlZmVjdDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRoZSBkZWZlY3Qgb2YgdGhlIHVuZHVlIHJlc3RyaWN0aW9uIG9mCgkJCQkJCXRoZSBvZmZpY2UuPC9ub3RlPiBpcyBhIGN1cmlvdXMgb25lLCBhbmQgbGVzcyBjaGFyYWN0ZXJpc3RpYyBvZiBhIHJlcHVibGljCgkJCQkJdGhhbiBvZiBhIGR5bmFzdHk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEyOTJiIDEwIG4uPC9ub3RlPjoKCQkJCQkJPC90cmFuc2xhdGlvbj4="
translation['2.1272b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy43IiB1bml0PSJMb2ViIGNoYXAiIC8+b2Z0ZW4gdGhlIENvc21pIGFyZSBleHBlbGxlZCBieQoJCQkJCWEgY29uc3BpcmFjeSBmb3JtZWQgYW1vbmcgc29tZSBvZiB0aGVpciBhY3R1YWwgY29sbGVhZ3VlcyBvciB0aGUgcHJpdmF0ZQoJCQkJCWNpdGl6ZW5zLiBBbHNvIHRoZSBDb3NtaSBhcmUgYWxsb3dlZCB0byByZXNpZ24gZHVyaW5nIHRoZWlyIHRlcm0gb2Ygb2ZmaWNlLiBOb3cKCQkJCQlpdCB3b3VsZCBiZSBwcmVmZXJhYmxlIGZvciBhbGwgdGhlc2UgZXhwZWRpZW50cyB0byBiZSBwdXQgaW4gZm9yY2UgYnkgbGF3IHJhdGhlcgoJCQkJCXRoYW4gYXQgdGhlIGRpc2NyZXRpb24gb2YgaW5kaXZpZHVhbHMsIGZvciB0aGF0IGlzIGEgZGFuZ2Vyb3VzIHByaW5jaXBsZS4gQW5kCgkJCQkJdGhlIHdvcnN0IGV4cGVkaWVudCBvZiBhbGwgaXMgdGhhdCBvZiB0aGUgc3VzcGVuc2lvbiBvZiB0aGUgb2ZmaWNlIG9mIENvc21pLAoJCQkJCXdoaWNoIGlzIG9mdGVuIGJyb3VnaHQgYWJvdXQgYnkgbWVtYmVycyBvZiB0aGUgcG93ZXJmdWwgY2xhc3Mgd2hvIHdpc2ggdG8gZXNjYXBlCgkJCQkJYmVpbmcgcHVuaXNoZWQ7IHRoaXMgcHJvdmVzIHRoYXQgdGhlIGNvbnN0aXR1dGlvbiBoYXMgYSByZXB1YmxpY2FuIGVsZW1lbnQsCgkJCQkJYWx0aG91Z2ggaXQgaXMgbm90IGFjdHVhbGx5IGEgcmVwdWJsaWMgYnV0IHJhdGhlciBhIGR5bmFzdHkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMjkyYiAxMCBuLjwvbm90ZT4gQW5kIHRoZSBub2JsZXMgZnJlcXVlbnRseSBmb3JtIHBhcnRpZXMKCQkJCQlhbW9uZyB0aGUgY29tbW9uIHBlb3BsZSBhbmQgYW1vbmcgdGhlaXIgZnJpZW5kcyBhbmQgc28gYnJpbmcgYWJvdXQgYSBzdXNwZW5zaW9uCgkJCQkJb2YgZ292ZXJubWVudCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIE1TUy4gZ2l2ZSDigJhicmluZwoJCQkJCQlhYm91dCBhIG1vbmFyY2h5LuKAmTwvbm90ZT4gYW5kIGZvcm0gZmFjdGlvbnMgYW5kIGVuZ2FnZSBpbiB3YXIgd2l0aAoJCQkJCW9uZSBhbm90aGVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPllldCBzdWNoIGEgc3RhdGUgb2YKCQkJCQl0aGluZ3MgaXMgdmlydHVhbGx5IHRoZSBzYW1lIGFzIGlmIGZvciBhIHBlcmlvZCBvZiB0aW1lIHRoZSBzdGF0ZSB1bmRlcndlbnQgYW4KCQkJCQllbnRpcmUgcmV2b2x1dGlvbiwgYW5kIHRoZSBib25kcyBvZiBjaXZpbCBzb2NpZXR5IHdlcmUgbG9vc2VuZWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBpdCBpcyBhIHByZWNhcmlvdXMgcG9zaXRpb24gZm9yIGEgc3RhdGUgdG8gYmUgaW4sCgkJCQkJd2hlbiB0aG9zZSB3aG8gd2lzaCB0byBhdHRhY2sgaXQgYWxzbyBoYXZlIHRoZSBwb3dlciB0byBkbyBzby4gQnV0LCBhcyBoYXMgYmVlbgoJCQkJCXNhaWQsIGl0IGlzIHNhdmVkIGJ5IGl0cyBsb2NhbGl0eTsgZm9yIGRpc3RhbmNlIGhhcyBoYWQgdGhlIHNhbWUgZWZmZWN0IGFzCgkJCQkJCWFsaWVuLWFjdHMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkFsaWVucyByZXF1aXJlZCBzcGVjaWFsCgkJCQkJCXBlcm1pc3Npb24gdG8gcmVzaWRlIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiwKCQkJCQkJYW5kIHRoZSBlcGhvcnMgaGFkIHBvd2VycyB0byBleHBlbCB0aGVtIGZvciB1bmRlc2lyYWJsZSBjb25kdWN0Ljwvbm90ZT4gQQoJCQkJCXJlc3VsdCBvZiB0aGlzIGlzIHRoYXQgd2l0aCB0aGUgQ3JldGFucyB0aGUgc2VyZiBwb3B1bGF0aW9uIHN0YW5kcyBmaXJtLCB3aGVyZWFzCgkJCQkJdGhlIEhlbG90cyBvZnRlbiByZXZvbHQ7IGZvciB0aGUgQ3JldGFuczxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiwKCQkJCQkJYW5kIHRoZSBlcGhvcnMgaGFkIHBvd2VycyB0byBleHBlbCB0aGVtIGZvciB1bmRlc2lyYWJsZSBjb25kdWN0LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50YWtlIG5vIHBhcnQgaW4gZm9yZWlnbiBlbXBpcmUsIGFuZCBhbHNvIHRoZSBpc2xhbmQgaGFzIG9ubHkKCQkJCQlsYXRlbHkgYmVlbiBpbnZhZGVkIGJ5IHdhcmZhcmUgZnJvbSBhYnJvYWQsIHJlbmRlcmluZyBtYW5pZmVzdCB0aGUgd2Vha25lc3Mgb2YKCQkJCQl0aGUgbGVnYWwgc3lzdGVtIHRoZXJlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZXQgdGhpcyBzdWZmaWNlIGZvciBvdXIKCQkJCQlkaXNjdXNzaW9uIG9mIHRoaXMgZm9ybSBvZiBjb25zdGl0dXRpb24uPC90cmFuc2xhdGlvbj4="
translation['2.1273a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ2FydGhhZ2UiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLENhcnRoYWdlIj5DYXJ0aGFnZTwvcGxhY2VOYW1lPiBhbHNvIGFwcGVhcnMgdG8gaGF2ZSBhIGdvb2QKCQkJCQljb25zdGl0dXRpb24sIHdpdGggbWFueSBvdXRzdGFuZGluZyBmZWF0dXJlcyBhcyBjb21wYXJlZCB3aXRoIHRob3NlIG9mIG90aGVyCgkJCQkJbmF0aW9ucywgYnV0IG1vc3QgbmVhcmx5IHJlc2VtYmxpbmcgdGhlIFNwYXJ0YW4gaW4gc29tZSBwb2ludHMuIEZvciB0aGVzZSB0aHJlZQoJCQkJCWNvbnN0aXR1dGlvbnMgYXJlIGluIGEgd2F5IG5lYXIgdG8gb25lIGFub3RoZXIgYW5kIGFyZSB3aWRlbHkgZGlmZmVyZW50IGZyb20gdGhlCgkJCQkJb3RoZXJz4oCUdGhlIENyZXRhbiwgdGhlIFNwYXJ0YW4gYW5kLCB0aGlyZGx5LCB0aGF0IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ2FydGhhZ2UiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLENhcnRoYWdlIj5DYXJ0aGFnZTwvcGxhY2VOYW1lPi4gTWFueSByZWd1bGF0aW9ucyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENhcnRoYWdlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDYXJ0aGFnZSI+Q2FydGhhZ2U8L3BsYWNlTmFtZT4gYXJlIGdvb2Q7IGFuZCBhIHByb29mIG9mIGEKCQkJCQl3ZWxsLXJlZ3VsYXRlZCBjb25zdGl0dXRpb24gaXMgdGhhdCB0aGUgcG9wdWxhY2Ugd2lsbGluZ2x5IHJlbWFpbiBmYWl0aGZ1bCB0bwoJCQkJCXRoZSBjb25zdGl0dXRpb25hbCBzeXN0ZW0sIGFuZCB0aGF0IG5laXRoZXIgY2l2aWwgc3RyaWZlIGhhcyBhcmlzZW4gaW4gYW55CgkJCQkJZGVncmVlIHdvcnRoIG1lbnRpb25pbmcsIG5vciB5ZXQgYSB0eXJhbnQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+UG9pbnRzIGluIHdoaWNoIHRoZQoJCQkJCUNhcnRoYWdpbmlhbiBjb25zdGl0dXRpb24gcmVzZW1ibGVzIHRoZSBTcGFydGFuIGFyZSB0aGUgY29tbW9uIG1lc3MtdGFibGVzIG9mCgkJCQkJaXRzIENvbXJhZGVzaGlwcyBjb3JyZXNwb25kaW5nIHRvIHRoZSBQaGlkaXRpYSwgYW5kIHRoZSBtYWdpc3RyYWN5IG9mIHRoZQoJCQkJCUh1bmRyZWQgYW5kIEZvdXIgY29ycmVzcG9uZGluZyB0byB0aGUgRXBob3JzIO+8iGV4Y2VwdCBvbmUgcG9pbnQgb2YKCQkJCQlzdXBlcmlvcml0eeKAlHRoZSBFcGhvcnMgYXJlIGRyYXduIGZyb20gYW55IGNsYXNzLCBidXQgdGhlIENhcnRoYWdpbmlhbnMKCQkJCQllbGVjdCB0aGlzIG1hZ2lzdHJhY3kgYnkgbWVyaXTvvIk7IHRoZSBraW5ncyBhbmQgdGhlIGNvdW5jaWwgb2YgRWxkZXJzCgkJCQkJY29ycmVzcG9uZCB0byB0aGUga2luZ3MgYW5kIEVsZGVycyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIGFuZCBpdCBpcyBhbm90aGVyIHN1cGVyaW9yIGZlYXR1cmUgdGhhdCB0aGUKCQkJCQlDYXJ0aGFnaW5pYW4ga2luZ3MgYXJlIG5vdCBjb25maW5lZCB0byB0aGUgc2FtZSBmYW1pbHkgYW5kIHRoYXQgb25lIG9mIG5vCgkJCQkJcGFydGljdWxhciBkaXN0aW5jdGlvbiwgYW5kIGFsc28gdGhhdCBpZiBhbnkgZmFtaWx5IGRpc3Rpbmd1aXNoZXMgaXRzZWxmIC4gLgoJCQkJCQkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNsYXVzZXMgc2VlbSB0byBoYXZlIGJlZW4gbG9zdAoJCQkJCQljb25jbHVkaW5nIHRoZSBhY2NvdW50IG9mIHRoZSBhcHBvaW50bWVudCBvZiB0aGUgS2luZ3MgYW5kIHR1cm5pbmcgdG8gdGhlCgkJCQkJCUVsZGVycyBhbmQgdGhlaXIgc2VsZWN0aW9uIG9uIGdyb3VuZHMgb2Ygd2VhbHRoLjwvbm90ZT4gdGhlIEVsZGVycyBhcmUgdG8gYmUKCQkJCQljaG9zZW4gZnJvbSB0aGVzZSByYXRoZXIgdGhhbiBieSBhZ2U7IGZvciBhcyB0aGV5IGFyZSBwdXQgaW4gY29udHJvbCBvZgoJCQkJCWltcG9ydGFudCBtYXR0ZXJzLCBpZiB0aGV5IGFyZSBtZW4gb2Ygbm8gdmFsdWUgdGhleSBkbyBncmVhdCBoYXJtLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI3M2EiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1273a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGV5CgkJCQkJaGF2ZSBhbHJlYWR5IGluanVyZWQgdGhlIFNwYXJ0YW4gU3RhdGUuPC90cmFuc2xhdGlvbj4="
translation['2.1273a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk1vc3Qgb2YgdGhlIHBvaW50cwoJCQkJCXRoZXJlZm9yZSBpbiB0aGUgQ2FydGhhZ2luaWFuIHN5c3RlbSB0aGF0IHdvdWxkIGJlIGNyaXRpY2l6ZWQgb24gdGhlIGdyb3VuZCBvZgoJCQkJCXRoZWlyIGRpdmVyZ2VuY2VzIGhhcHBlbiB0byBiZSBjb21tb24gdG8gYWxsIHRoZSBjb25zdGl0dXRpb25zIG9mIHdoaWNoIHdlIGhhdmUKCQkJCQlzcG9rZW47IGJ1dCB0aGUgZmVhdHVyZXMgb3BlbiB0byBjcml0aWNpc20gYXMganVkZ2VkIGJ5IHRoZSBwcmluY2lwbGUgb2YgYW4KCQkJCQlhcmlzdG9jcmFjeSBvciByZXB1YmxpYyBhcmUgc29tZSBvZiB0aGVtIGRlcGFydHVyZXMgaW4gdGhlIGRpcmVjdGlvbiBvZgoJCQkJCWRlbW9jcmFjeSBhbmQgb3RoZXJzIGluIHRoZSBkaXJlY3Rpb24gb2Ygb2xpZ2FyY2h5LiBUaGUgcmVmZXJlbmNlIG9mIHNvbWUKCQkJCQltYXR0ZXJzIGFuZCBub3Qgb2Ygb3RoZXJzIHRvIHRoZSBwb3B1bGFyIGFzc2VtYmx5IHJlc3RzIHdpdGggdGhlIGtpbmdzIGluCgkJCQkJY29uc3VsdGF0aW9uIHdpdGggdGhlIEVsZGVycyBpbiBjYXNlIHRoZXkgYWdyZWU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBhZ3JlZSB0byByZWZlciBvciBub3QgdG8gcmVmZXI8L25vdGU+IHVuYW5pbW91c2x5LCBidXQKCQkJCQlmYWlsaW5nIHRoYXQsIHRoZXNlIG1hdHRlcnMgYWxzbyBsaWUgd2l0aCB0aGUgcGVvcGxlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gZXZlbiB3aGVuIHRoZSBLaW5ncyBvbmx5IG9yIHRoZSBFbGRlcnMgb25seSBkZXNpcmUKCQkJCQkJcmVmZXJlbmNlLCBpdCB0YWtlcyBwbGFjZTwvbm90ZT47IGFuZCB3aGVuIHRoZSBraW5ncyBpbnRyb2R1Y2UgYnVzaW5lc3MgaW4KCQkJCQl0aGUgYXNzZW1ibHksIHRoZXkgZG8gbm90IG1lcmVseSBsZXQgdGhlIHBlb3BsZSBzaXQgYW5kIGxpc3RlbiB0byB0aGUgZGVjaXNpb25zCgkJCQkJdGhhdCBoYXZlIGJlZW4gdGFrZW4gYnkgdGhlaXIgcnVsZXJzLCBidXQgdGhlIHBlb3BsZSBoYXZlIHRoZSBzb3ZlcmVpZ24KCQkJCQlkZWNpc2lvbiwgYW5kIGFueWJvZHkgd2hvIHdpc2hlcyBtYXkgc3BlYWsgYWdhaW5zdCB0aGUgcHJvcG9zYWxzIGludHJvZHVjZWQsIGEKCQkJCQlyaWdodCB0aGF0IGRvZXMgbm90IGV4aXN0IHVuZGVyIHRoZSBvdGhlciBjb25zdGl0dXRpb25zLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguNCIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSBhcHBvaW50bWVudCBieSBjby1vcHRhdGlvbiBvZiB0aGUgQm9hcmRzIG9mCgkJCQkJRml2ZSB3aGljaCBjb250cm9sIG1hbnkgaW1wb3J0YW50IG1hdHRlcnMsIGFuZCB0aGUgZWxlY3Rpb24gYnkgdGhlc2UgYm9hcmRzIG9mCgkJCQkJdGhlIHN1cHJlbWUgbWFnaXN0cmFjeSBvZiB0aGUgSHVuZHJlZCwgYW5kIGFsc28gdGhlaXIgbG9uZ2VyIHRlbnVyZSBvZiBhdXRob3JpdHkKCQkJCQl0aGFuIHRoYXQgb2YgYW55IG90aGVyIG9mZmljZXJzIO+8iGZvciB0aGV5IGFyZSBpbiBwb3dlciBhZnRlciB0aGV5IGhhdmUKCQkJCQlnb25lIG91dCBvZiBvZmZpY2UgYW5kIGJlZm9yZSB0aGV5IGhhdmUgYWN0dWFsbHkgZW50ZXJlZCB1cG9uIGl077yJIGFyZQoJCQkJCW9saWdhcmNoaWNhbCBmZWF0dXJlczsgdGhlaXIgcmVjZWl2aW5nIG5vIHBheSBhbmQgbm90IGJlaW5nIGNob3NlbiBieSBsb3QgYW5kCgkJCQkJb3RoZXIgc2ltaWxhciByZWd1bGF0aW9ucyBtdXN0IGJlIHNldCBkb3duIGFzIGFyaXN0b2NyYXRpYywgYW5kIHNvIG11c3QgdGhlIGZhY3QKCQkJCQl0aGF0IHRoZSBtZW1iZXJzIG9mIHRoZSBCb2FyZHMgYXJlIHRoZSBqdWRnZXMgaW4gYWxsIGxhd3N1aXRzLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5pbnN0ZWFkIG9mIGRpZmZlcmVudCBzdWl0cyBiZWluZyB0cmllZCBieSBkaWZmZXJlbnQKCQkJCQljb3VydHMgYXMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LiA8L3RyYW5zbGF0aW9uPg=="
translation['2.1273b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZSBDYXJ0aGFnaW5pYW4gc3lzdGVtIGRpdmVyZ2VzIGZyb20KCQkJCQlhcmlzdG9jcmFjeSBpbiB0aGUgZGlyZWN0aW9uIG9mIG9saWdhcmNoeSBtb3N0IHNpZ25hbGx5IGluIHJlc3BlY3Qgb2YgYSBjZXJ0YWluCgkJCQkJaWRlYSB0aGF0IGlzIHNoYXJlZCBieSB0aGUgbWFzcyBvZiBtYW5raW5kOyB0aGV5IHRoaW5rIHRoYXQgdGhlIHJ1bGVycyBzaG91bGQgYmUKCQkJCQljaG9zZW4gbm90IG9ubHkgZm9yIHRoZWlyIG1lcml0IGJ1dCBhbHNvIGZvciB0aGVpciB3ZWFsdGgsIGFzIGl0IGlzIG5vdCBwb3NzaWJsZQoJCQkJCWZvciBhIHBvb3IgbWFuIHRvIGdvdmVybiB3ZWxsIG9yIHRvIGhhdmUgbGVpc3VyZSBmb3IgaGlzIGR1dGllcy4gSWYgdGhlcmVmb3JlCgkJCQkJZWxlY3Rpb24gYnkgd2VhbHRoIGlzIG9saWdhcmNoaWNhbCBhbmQgZWxlY3Rpb24gYnkgbWVyaXQgYXJpc3RvY3JhdGljLCB0aGlzIHdpbGwKCQkJCQliZSBhIHRoaXJkIHN5c3RlbSBleGhpYml0ZWQgaW4gdGhlIG9yZ2FuaXphdGlvbiBvZiB0aGUgY29uc3RpdHV0aW9uIG9mCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ2FydGhhZ2UiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLENhcnRoYWdlIj5DYXJ0aGFnZTwvcGxhY2VOYW1lPiwgZm9yIHRoZXJlIGVsZWN0aW9ucwoJCQkJCWFyZSBtYWRlIHdpdGggYW4gZXllIHRvIHRoZXNlIHR3byBxdWFsaWZpY2F0aW9ucywgYW5kIGVzcGVjaWFsbHkgZWxlY3Rpb25zIHRvCgkJCQkJdGhlIG1vc3QgaW1wb3J0YW50IG9mZmljZXMsIHRob3NlIG9mIHRoZSBraW5ncyBhbmQgb2YgdGhlIGdlbmVyYWxzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBpdCBtdXN0IGJlIGhlbGQgdGhhdCB0aGlzIGRpdmVyZ2VuY2UKCQkJCQlmcm9tIGFyaXN0b2NyYWN5IGlzIGFuIGVycm9yIG9uIHRoZSBwYXJ0IG9mIGEgbGF3Z2l2ZXI7IGZvciBvbmUgb2YgdGhlIG1vc3QKCQkJCQlpbXBvcnRhbnQgcG9pbnRzIHRvIGtlZXAgaW4gdmlldyBmcm9tIHRoZSBvdXRzZXQgaXMgdGhhdCB0aGUgYmVzdCBjaXRpemVucyBtYXkKCQkJCQliZSBhYmxlIHRvIGhhdmUgbGVpc3VyZSBhbmQgbWF5IG5vdCBoYXZlIHRvIGVuZ2FnZSBpbiBhbnkgdW5zZWVtbHkgb2NjdXBhdGlvbiwKCQkJCQlub3Qgb25seSB3aGVuIGluIG9mZmljZSBidXQgYWxzbyB3aGVuIGxpdmluZyBpbiBwcml2YXRlIGxpZmUuIEFuZCBpZiBpdCBpcwoJCQkJCW5lY2Vzc2FyeSB0byBsb29rIHRvIHRoZSBxdWVzdGlvbiBvZiBtZWFucyBmb3IgdGhlIHNha2Ugb2YgbGVpc3VyZSwgaXQgaXMgYSBiYWQKCQkJCQl0aGluZyB0aGF0IHRoZSBncmVhdGVzdCBvZmZpY2VzIG9mIHN0YXRlLCB0aGUga2luZ3NoaXAgYW5kIHRoZSBnZW5lcmFsc2hpcCwKCQkJCQlzaG91bGQgYmUgZm9yIHNhbGUuIEZvciB0aGlzIGxhdyBtYWtlcyB3ZWFsdGggbW9yZSBob25vcmVkIHRoYW4gd29ydGgsIGFuZAoJCQkJCXJlbmRlcnMgdGhlIHdob2xlIHN0YXRlIGF2YXJpY2lvdXM7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC43IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHdoYXRldmVyIHRoZSBob2xkZXJzIG9mIHN1cHJlbWUgcG93ZXIgZGVlbSBob25vcmFibGUsIHRoZSBvcGluaW9uIG9mIHRoZQoJCQkJCW90aGVyIGNpdGl6ZW5zIGFsc28gaXMgY2VydGFpbiB0byBmb2xsb3cgdGhlbSwgYW5kIGEgc3RhdGUgaW4gd2hpY2ggdmlydHVlIGlzCgkJCQkJbm90IGhlbGQgaW4gdGhlIGhpZ2hlc3QgaG9ub3IgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNzNiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1273b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmNhbm5vdCBiZSBzZWN1cmVseSBnb3Zlcm5lZCBieSBhbgoJCQkJCWFyaXN0b2NyYWN5LiBBbmQgaXQgaXMgcHJvYmFibGUgdGhhdCB0aG9zZSB3aG8gcHVyY2hhc2Ugb2ZmaWNlIHdpbGwgbGVhcm4gYnkKCQkJCQlkZWdyZWVzIHRvIG1ha2UgYSBwcm9maXQgb3V0IG9mIGl0LCB3aGVuIHRoZXkgaG9sZCBvZmZpY2UgZm9yIG1vbmV5IHNwZW50OyBmb3IKCQkJCQlpdCB3b3VsZCBiZSBvZGQgaWYgYSBtYW4gb2Ygc21hbGwgbWVhbnMgYnV0IHJlc3BlY3RhYmxlIHNob3VsZCB3YW50IHRvIG1ha2UgYQoJCQkJCXByb2ZpdCBidXQgYW4gaW5mZXJpb3IgcGVyc29uIHdoZW4gaGUgaGFzIHNwZW50IG1vbmV5IHRvIGdldCBlbGVjdGVkIHNob3VsZCBub3QKCQkJCQl3YW50IHRvLiBIZW5jZSB0aGUgcGVyc29ucyB3aG8gc2hvdWxkIGJlIGluIG9mZmljZSBhcmUgdGhvc2UgbW9zdCBjYXBhYmxlIG9mCgkJCQkJaG9sZGluZyBvZmZpY2UuIEFuZCBldmVuIGlmIHRoZSBsYXdnaXZlciBuZWdsZWN0ZWQgdG8gc2VjdXJlIGNvbWZvcnRhYmxlIG1lYW5zCgkJCQkJZm9yIHJlc3BlY3RhYmxlIHBlb3BsZSwgaXQgd291bGQgYXQgYWxsIGV2ZW50cyBiZSBiZXR0ZXIgdGhhdCBoZSBzaG91bGQgcHJvdmlkZQoJCQkJCWZvciB0aGVpciBsZWlzdXJlIHdoaWxlIGluIG9mZmljZS48L3RyYW5zbGF0aW9uPg=="
translation['2.1273b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC44IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBpdCBtaWdodCBhbHNvIGJlIHRob3VnaHQgYSBiYWQgdGhpbmcKCQkJCQlmb3IgdGhlIHNhbWUgcGVyc29uIHRvIGhvbGQgc2V2ZXJhbCBvZmZpY2VzLCB3aGljaCBpcyBjb25zaWRlcmVkIGEgZGlzdGluY3Rpb24KCQkJCQlhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENhcnRoYWdlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDYXJ0aGFnZSI+Q2FydGhhZ2U8L3BsYWNlTmFtZT4uIE9uZSBtYW4gb25lIGpvYiBpcwoJCQkJCXRoZSBiZXN0IHJ1bGUgZm9yIGVmZmljaWVuY3ksIGFuZCB0aGUgbGF3Z2l2ZXIgb3VnaHQgdG8gc2VlIHRoYXQgdGhpcyBtYXkgYmUKCQkJCQlzZWN1cmVkLCBhbmQgbm90IGFwcG9pbnQgdGhlIHNhbWUgbWFuIHRvIHBsYXkgdGhlIGZsdXRlIGFuZCBtYWtlIHNob2VzLiBIZW5jZQoJCQkJCWV4Y2VwdCBpbiBhIHNtYWxsIGNpdHkgaXQgaXMgbW9yZSBzdGF0ZXNtYW5saWtlIGZvciBhIGxhcmdlciBudW1iZXIgdG8gc2hhcmUgaW4KCQkJCQl0aGUgb2ZmaWNlcyBhbmQgbW9yZSBkZW1vY3JhdGljLCBmb3IgaXQgaXMgZmFpcmVyIHRvIGFsbCwgYXMgd2Ugc2FpZCwgYW5kIGFsc28KCQkJCQlmdW5jdGlvbnMgYXJlIHBlcmZvcm1lZCBiZXR0ZXIgYW5kIG1vcmUgcXVpY2tseSB3aGVuIHNlcGFyYXRlIHRoYW4gYnkgdGhlIHNhbWUKCQkJCQlwZW9wbGUuIFRoaXMgaXMgY2xlYXIgaW4gbWlsaXRhcnkgYW5kIG5hdmFsIG1hdHRlcnM7IGZvciBpbiBib3RoIG9mIHRoZXNlCgkJCQkJZGVwYXJ0bWVudHMgY29tbWFuZCBhbmQgc3Vib3JkaW5hdGlvbiBwZW5ldHJhdGUgdGhyb3VnaG91dCBhbG1vc3QgdGhlIHdob2xlCgkJCQkJCWJvZHkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gZXZlcnlvbmUgaW4gY29tbWFuZAoJCQkJCQnvvIhleGNlcHQgdGhlIGNvbW1hbmRlci1pbi1jaGllZu+8iSBoYXMgc29tZW9uZSBvZiBoaWdoZXIgcmFuawoJCQkJCQlvdmVyIGhpbS48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0CgkJCQkJdGhlIGNvbnN0aXR1dGlvbiBiZWluZyBvbGlnYXJjaGljYWwgdGhleSBiZXN0IGVzY2FwZSB0aGUgZGFuZ2VycyBieSBiZWluZwoJCQkJCXdlYWx0aHksIGFzIHRoZXkgY29uc3RhbnRseSBzZW5kIG91dCBhIHBvcnRpb24gb2YgdGhlIGNvbW1vbiBwZW9wbGUgdG88bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YXBwb2ludG1lbnRzIGluIHRoZSBjaXRpZXM7IGJ5IHRoaXMgbWVhbnMKCQkJCQl0aGV5IGhlYWwgdGhlIHNvY2lhbCBzb3JlIGFuZCBtYWtlIHRoZSBjb25zdGl0dXRpb24gc3RhYmxlLiBIb3dldmVyLCB0aGlzIGlzIHRoZQoJCQkJCWFjaGlldmVtZW50IG9mIGZvcnR1bmUsIHdoZXJlYXMgZnJlZWRvbSBmcm9tIGNpdmlsIHN0cmlmZSBvdWdodCB0byBiZSBzZWN1cmVkIGJ5CgkJCQkJdGhlIGxhd2dpdmVyOyBidXQgYXMgaXQgaXMsIHN1cHBvc2Ugc29tZSBtaXNmb3J0dW5lIG9jY3VycyBhbmQgdGhlIG11bHRpdHVkZSBvZgoJCQkJCXRoZSBzdWJqZWN0IGNsYXNzIHJldm9sdHMsIHRoZXJlIGlzIG5vIHJlbWVkeSBwcm92aWRlZCBieSB0aGUgbGF3cyB0byByZXN0b3JlCgkJCQkJCXRyYW5xdWlsbGl0eS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhpcyB0aGVuIGlzIHRoZSBjaGFyYWN0ZXIgb2YKCQkJCQl0aGUgU3BhcnRhbiwgQ3JldGFuIGFuZCBDYXJ0aGFnaW5pYW4gY29uc3RpdHV0aW9ucywgd2hpY2ggYXJlIGp1c3RseQoJCQkJCQlmYW1vdXMuPC90cmFuc2xhdGlvbj4="
translation['2.1274a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk9mIHRob3NlIHRoYXQgaGF2ZSBwdXQgZm9yd2FyZCB2aWV3cyBhYm91dCBwb2xpdGljcywgc29tZSBoYXZlCgkJCQkJdGFrZW4gbm8gcGFydCBpbiBhbnkgcG9saXRpY2FsIGFjdGl2aXRpZXMgd2hhdGV2ZXIgYnV0IGhhdmUgcGFzc2VkIHRoZWlyIHdob2xlCgkJCQkJbGlmZSBhcyBwcml2YXRlIGNpdGl6ZW5zOyBhbmQgc29tZXRoaW5nIGhhcyBiZWVuIHNhaWQgYWJvdXQgYWxtb3N0IGFsbCB0aGUKCQkJCQl3cml0ZXJzIG9mIHRoaXMgY2xhc3MgYWJvdXQgd2hvbSB0aGVyZSBpcyBhbnl0aGluZyBub3Rld29ydGh5LiBTb21lIG9uIHRoZSBvdGhlcgoJCQkJCWhhbmQgaGF2ZSBiZWVuIGxhd2dpdmVycywgZWl0aGVyIGZvciB0aGVpciBuYXRpdmUgY2l0aWVzIG9yIGV2ZW4gZm9yIGNlcnRhaW4KCQkJCQlmb3JlaWduIHBlb3BsZXMsIGFmdGVyIGhhdmluZyB0aGVtc2VsdmVzIGJlZW4gYWN0aXZlbHkgZW5nYWdlZCBpbiBnb3Zlcm5tZW50OwoJCQkJCWFuZCBvZiB0aGVzZSBzb21lIGhhdmUgYmVlbiBmcmFtZXJzIG9mIGxhd3Mgb25seSwgYW5kIG90aGVycyBvZiBhIGNvbnN0aXR1dGlvbgoJCQkJCWFsc28sIGZvciBpbnN0YW5jZSBTb2xvbiBhbmQgTHljdXJndXMsIHdobyBpbnN0aXR1dGVkIGJvdGggbGF3cyBhbmQKCQkJCQljb25zdGl0dXRpb25zLiBUaGUgU3BhcnRhbiBjb25zdGl0dXRpb24gaGFzIGJlZW4gZGlzY3Vzc2VkLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjkuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFzIGZvciBTb2xvbiwgaGUgaXMgY29uc2lkZXJlZCBieSBzb21lIHBlb3BsZSB0bwoJCQkJCWhhdmUgYmVlbiBhIGdvb2QgbGF3Z2l2ZXIsIGFzIGhhdmluZyBwdXQgYW4gZW5kIHRvIG9saWdhcmNoeSB3aGVuIGl0IHdhcyB0b28KCQkJCQl1bnF1YWxpZmllZCBhbmQgaGF2aW5nIGxpYmVyYXRlZCB0aGUgcGVvcGxlIGZyb20gc2xhdmVyeSBhbmQgcmVzdG9yZWQgdGhlCgkJCQkJYW5jZXN0cmFsIGRlbW9jcmFjeSB3aXRoIGEgc2tpbGZ1bCBibGVuZGluZyBvZiB0aGUgY29uc3RpdHV0aW9uOiB0aGUgQ291bmNpbCBvbgoJCQkJCXRoZSBBcmVvcGFndXMgYmVpbmcgYW4gb2xpZ2FyY2hpYyBlbGVtZW50LCB0aGUgZWxlY3RpdmUgbWFnaXN0cmFjaWVzCgkJCQkJYXJpc3RvY3JhdGljIGFuZCB0aGUgbGF3LWNvdXJ0cyBkZW1vY3JhdGljLiBBbmQgYWx0aG91Z2ggcmVhbGx5IGluIHJlZ2FyZCB0bwoJCQkJCWNlcnRhaW4gb2YgdGhlc2UgZmVhdHVyZXMsIHRoZSBDb3VuY2lsIGFuZCB0aGUgZWxlY3Rpb24gb2YgbWFnaXN0cmF0ZXMsCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjc0YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1274a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPlNvbG9uIHNlZW1zIG1lcmVseSB0byBoYXZlIGFic3RhaW5lZCBmcm9tIGRlc3Ryb3lpbmcKCQkJCQlpbnN0aXR1dGlvbnMgdGhhdCBleGlzdGVkIGFscmVhZHksIGhlIGRvZXMgYXBwZWFyIHRvIGhhdmUgZm91bmRlZCB0aGUgZGVtb2NyYWN5CgkJCQkJYnkgY29uc3RpdHV0aW5nIHRoZSBqdXJ5LWNvdXJ0cyBmcm9tIGFsbCB0aGUgY2l0aXplbnMuIDwvdHJhbnNsYXRpb24+"
translation['2.1274a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIHRoaXMgaGUgaXMgYWN0dWFsbHkgYmxhbWVkIGJ5IHNvbWUgcGVyc29ucywgYXMgaGF2aW5nCgkJCQkJZGlzc29sdmVkIHRoZSBwb3dlciBvZiB0aGUgb3RoZXIgcGFydHMgb2YgdGhlIGNvbW11bml0eSBieSBtYWtpbmcgdGhlIGxhdy1jb3VydCwKCQkJCQl3aGljaCB3YXMgZWxlY3RlZCBieSBsb3QsIGFsbC1wb3dlcmZ1bC4gRm9yIGFzIHRoZSBsYXctY291cnQgZ3JldyBzdHJvbmcsIG1lbgoJCQkJCWNvdXJ0ZWQgZmF2b3Igd2l0aCB0aGUgcGVvcGxlIGFzIHdpdGggYSB0eXJhbnQsIGFuZCBzbyBicm91Z2h0IHRoZSBjb25zdGl0dXRpb24KCQkJCQl0byB0aGUgcHJlc2VudCBkZW1vY3JhY3k7IGFuZCBFcGhpYWx0ZXMgYW5kIFBlcmljbGVzIGRvY2tlZCB0aGUgcG93ZXIgb2YgdGhlCgkJCQkJQ291bmNpbCBvbiB0aGUgQXJlb3BhZ3VzLCB3aGlsZSBQZXJpY2xlcyBpbnN0aXR1dGVkIHBheW1lbnQgZm9yIHNlcnZpbmcgaW4gdGhlCgkJCQkJbGF3LWNvdXJ0cywgYW5kIGluIHRoaXMgbWFubmVyIGZpbmFsbHkgdGhlIHN1Y2Nlc3NpdmUgbGVhZGVycyBvZiB0aGUgcGVvcGxlIGxlZAoJCQkJCXRoZW0gb24gYnkgZ3Jvd2luZyBzdGFnZXMgdG8gdGhlIHByZXNlbnQgZGVtb2NyYWN5LiBCdXQgdGhpcyBkb2VzIG5vdCBzZWVtIHRvCgkJCQkJaGF2ZSBjb21lIGFib3V0IGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgaW50ZW50aW9uIG9mIFNvbG9uLCBidXQgcmF0aGVyIGFzIGEKCQkJCQlyZXN1bHQgb2YgYWNjaWRlbnQgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz7vvIhmb3IgdGhlCgkJCQkJY29tbW9uIHBlb3BsZSBoYXZpbmcgYmVlbiB0aGUgY2F1c2Ugb2YgdGhlIG5hdmFsIHZpY3RvcmllcyBhdCB0aGUgdGltZSBvZiB0aGUKCQkJCQlQZXJzaWFuIGludmFzaW9uIGJlY2FtZSBwcm91ZCBhbmQgYWRvcHRlZCBiYWQgbWVuIGFzIHBvcHVsYXIgbGVhZGVycyB3aGVuIHRoZQoJCQkJCXJlc3BlY3RhYmxlIGNsYXNzZXMgb3Bwb3NlZCB0aGVpciBwb2xpY3nvvIk7IGluYXNtdWNoIGFzIFNvbG9uIGZvciBoaXMKCQkJCQlwYXJ0IGFwcGVhcnMgdG8gYmVzdG93IG9ubHkgdGhlIG1pbmltdW0gb2YgcG93ZXIgdXBvbiB0aGUgcGVvcGxlLCB0aGUgZnVuY3Rpb24KCQkJCQlvZiBlbGVjdGluZyB0aGUgbWFnaXN0cmF0ZXMgYW5kIG9mIGNhbGxpbmcgdGhlbSB0byBhY2NvdW50IO+8iGZvciBpZiBldmVuCgkJCQkJdGhpcyB3ZXJlIG5vdCB1bmRlciB0aGUgY29udHJvbCBvZiB0aGUgcG9wdWxhY2UgaXQgd291bGQgYmUgYSBtZXJlIHNsYXZlIGFuZCBhCgkJCQkJZm9yZWlnbiBlbmVtee+8iSwgd2hlcmVhcyBoZSBhcHBvaW50ZWQgYWxsIHRoZSBvZmZpY2VzIGZyb20gdGhlIG5vdGFibGUKCQkJCQlhbmQgdGhlIHdlYWx0aHksIHRoZSBGaXZlLWh1bmRyZWQtYnVzaGVsIGNsYXNzPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZCB0aGUgVGVhbXN0ZXJzIGFuZCBhIHRoaXJkIHByb3BlcnR5LWNsYXNzIGNhbGxlZCB0aGUKCQkJCQlLbmlnaHRob29kOyB3aGlsZSB0aGUgZm91cnRoIGNsYXNzLCB0aGUgVGhldGVzLCB3ZXJlIGFkbWl0dGVkIHRvIG5vIG9mZmljZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Rm9yIFNvbG9uJ3MgY2xhc3NpZmljYXRpb24gb2YgdGhlIGNpdGl6ZW5zIGJ5CgkJCQkJCXRoZSBhbm51YWwgaW5jb21lIG9mIHRoZWlyIGVzdGF0ZXMgc2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEF0aC4gUG9sLiA3IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBBdGguIFBvbC4gNzwvYmlibD4uPC9ub3RlPgoJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEF0aC4gUG9sLiA3IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBBdGguIFBvbC4gNzwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['2.1274b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS41IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkxhd3MKCQkJCQl3ZXJlIGdpdmVuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgPGRhdGUgYXV0aG5hbWU9Ii02NjQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii02NjQiPjY2NDwvZGF0ZT4gQi5DLjwvbm90ZT4gYnkgWmFsZXVjdXMgdG8gdGhlIEVwaXplcGh5cmlhbjxkYXRlIGF1dGhuYW1lPSItNjY0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNjY0Ij42NjQ8L2RhdGU+IEIuQy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxaZXBoeXJpb24iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFplcGh5cmlvbiI+WmVwaHlyaXVtPC9wbGFjZU5hbWU+LCBhIHByb21vbnRvcnkgaW4gUy4gSXRhbHkuPC9ub3RlPiBMb2NyaWFucyBhbmQgYnkKCQkJCQkJQ2hhcm9uZGFzPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxaZXBoeXJpb24iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFplcGh5cmlvbiI+WmVwaHlyaXVtPC9wbGFjZU5hbWU+LCBhIHByb21vbnRvcnkgaW4gUy4gSXRhbHkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMjUyYiAxNC48L25vdGU+IG9mCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ2F0YW5hIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDYXRhbmEiPkNhdGFuYTwvcGxhY2VOYW1lPiB0byBoaXMgZmVsbG93LWNpdGl6ZW5zCgkJCQkJYW5kIHRvIHRoZSBvdGhlciBDaGFsY2lkaWMgY2l0aWVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNvbG9uaWVzCgkJCQkJCWZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDaGFsY2lzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDaGFsY2lzIj5DaGFsY2lzPC9wbGFjZU5hbWU+IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjc3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzciPkV1Ym9lYTwvcGxhY2VOYW1lPi48L25vdGU+IG9uIHRoZSBjb2FzdHMgb2YgSXRhbHkgYW5kCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ2hhbGNpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ2hhbGNpcyI+Q2hhbGNpczwvcGxhY2VOYW1lPiBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjY3NyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjc3Ij5FdWJvZWE8L3BsYWNlTmFtZT4uPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDMxMjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMzEyMiI+U2ljaWx5PC9wbGFjZU5hbWU+LiBTb21lIHBlcnNvbnMgdHJ5IHRvIGNvbm5lY3QKCQkJCQlaYWxldWN1cyBhbmQgQ2hhcm9uZGFzIHRvZ2V0aGVyOiB0aGV5IHNheSB0aGF0IE9ub21hY3JpdHVzIGZpcnN0IGFyb3NlIGFzIGFuCgkJCQkJYWJsZSBsYXdnaXZlciwgYW5kIHRoYXQgaGUgd2FzIHRyYWluZWQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIwNTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjA1NiI+Q3JldGU8L3BsYWNlTmFtZT4sIGJlaW5nIGEgTG9jcmlhbiBhbmQgdHJhdmVsbGluZyB0aGVyZSB0byBwcmFjdGlzZSB0aGUgYXJ0CgkJCQkJb2Ygc29vdGhzYXlpbmcsIGFuZCBUaGFsZXMgYmVjYW1lIGhpcyBjb21wYW5pb24sIGFuZCBMeWN1cmd1cyBhbmQgWmFsZXVjdXMgd2VyZQoJCQkJCXB1cGlscyBvZiBUaGFsZXMsIGFuZCBDaGFyb25kYXMgb2YgWmFsZXVjdXM7IGJ1dCB0aGVzZSBzdG9yaWVzIGdpdmUgdG9vIGxpdHRsZQoJCQkJCWF0dGVudGlvbiB0byB0aGUgZGF0ZXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS42IiB1bml0PSJMb2ViIGNoYXAiIC8+UGhpbG9sYXVzIG9mCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ29yaW50aCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ29yaW50aCI+Q29yaW50aDwvcGxhY2VOYW1lPiBhbHNvIGFyb3NlIGFzIGxhd2dpdmVyCgkJCQkJYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUaGViZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRoZWJlcyI+VGhlYmVzPC9wbGFjZU5hbWU+LiBQaGlsb2xhdXMgYmVsb25nZWQgYnkKCQkJCQliaXJ0aCB0byB0aGUgQmFjY2hpYWQgZmFtaWx5OyBoZSBiZWNhbWUgdGhlIGxvdmVyIG9mIERpb2NsZXMgdGhlIHdpbm5lcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JbiA8ZGF0ZSBhdXRobmFtZT0iLTcyOCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTcyOCI+NzI4PC9kYXRlPiBCLkMuPC9ub3RlPgoJCQkJCWF0IDxkYXRlIGF1dGhuYW1lPSItNzI4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNzI4Ij43Mjg8L2RhdGU+IEIuQy48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE9seW1waWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE9seW1waWEiPk9seW1waWE8L3BsYWNlTmFtZT4sIGJ1dCB3aGVuIERpb2NsZXMKCQkJCQlxdWl0dGVkIHRoZSBjaXR5IGJlY2F1c2Ugb2YgaGlzIGxvYXRoaW5nIGZvciB0aGUgcGFzc2lvbiBvZiBoaXMgbW90aGVyIEFsY3lvbmUsCgkJCQkJaGUgd2VudCBhd2F5IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVGhlYmVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUaGViZXMiPlRoZWJlczwvcGxhY2VOYW1lPiwgYW5kIHRoZXJlCgkJCQkJdGhleSBib3RoIGVuZGVkIHRoZWlyIGxpZmUuIEV2ZW4gbm93IHBlb3BsZSBzdGlsbCBzaG93IHRoZWlyIHRvbWJzLCBpbiBmdWxsIHZpZXcKCQkJCQlvZiBlYWNoIG90aGVyIGFuZCBvbmUgb2YgdGhlbSBmdWxseSBvcGVuIHRvIHZpZXcgaW4gdGhlIGRpcmVjdGlvbiBvZiB0aGUKCQkJCQlDb3JpbnRoaWFuIGNvdW50cnkgYnV0IHRoZSBvdGhlciBvbmUgbm90OyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjkuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPmZvciB0aGUgc3RvcnkgZ29lcyB0aGF0IHRoZXkgYXJyYW5nZWQgdG8gYmUgYnVyaWVkIGluIHRoaXMKCQkJCQltYW5uZXIsIERpb2NsZXMgb3dpbmcgdG8gaGlzIGhhdHJlZCBmb3IgaGlzIG1pc2ZvcnR1bmUgc2VjdXJpbmcgdGhhdCB0aGUgbGFuZCBvZgoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENvcmludGgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLENvcmludGgiPkNvcmludGg8L3BsYWNlTmFtZT4gbWlnaHQgbm90IGJlIHZpc2libGUKCQkJCQlmcm9tIGhpcyB0b21iLCBhbmQgUGhpbG9sYXVzIHRoYXQgaXQgbWlnaHQgYmUgZnJvbSBoaXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjc0YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1274b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkl0IHdhcyBkdWUgdGhlbiB0bwoJCQkJCWEgcmVhc29uIG9mIHRoaXMgbmF0dXJlIHRoYXQgdGhleSB3ZW50IHRvIGxpdmUgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUaGViZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRoZWJlcyI+VGhlYmVzPC9wbGFjZU5hbWU+OyBidXQgUGhpbG9sYXVzIGJlY2FtZSB0aGUgVGhlYmFucycKCQkJCQlsYXdnaXZlciBpbiByZWdhcmQgdG8gdmFyaW91cyBtYXR0ZXJzLCBhbW9uZyBvdGhlcnMgdGhlIHNpemUgb2YKCQkJCQlmYW1pbGllcyzigJR0aGUgbGF3cyBjYWxsZWQgYnkgdGhlIFRoZWJhbnMgbGF3cyBvZiBhZG9wdGlvbjsgYWJvdXQgdGhpcwoJCQkJCVBoaWxvbGF1cyBlbmFjdGVkIHNwZWNpYWwgbGVnaXNsYXRpb24sIGluIG9yZGVyIHRoYXQgdGhlIG51bWJlciBvZiB0aGUgZXN0YXRlcwoJCQkJCWluIGxhbmQgbWlnaHQgYmUgcHJlc2VydmVkLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1274b.32'] = ""
translation['3.1275a.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZvciB0aGUgc3R1ZGVudCBvZiBnb3Zlcm5tZW50LCBhbmQgb2YgbmF0dXJlIGFuZCBjaGFyYWN0ZXJpc3RpY3Mgb2YgdGhlCgkJCQkJdmFyaW91cyBmb3JtcyBvZiBjb25zdGl0dXRpb24sIGFsbW9zdCB0aGUgZmlyc3QgcXVlc3Rpb24gdG8gY29uc2lkZXIgaXMgaW4KCQkJCQlyZWdhcmQgdG8gdGhlIHN0YXRlOiB3aGF0IGV4YWN0bHkgaXMgdGhlIGVzc2VudGlhbCBuYXR1cmUgb2YgYSBzdGF0ZT8gQXMgaXQgaXMsCgkJCQkJdGhpcyBpcyBhIG1hdHRlciBvZiBkaXNwdXRlOiBhIHB1YmxpYyBhY3QgaXMgc3Bva2VuIG9mIGJ5IHNvbWUgcGVvcGxlIGFzIHRoZQoJCQkJCWFjdGlvbiBvZiB0aGUgc3RhdGUsIG90aGVycyBzcGVhayBvZiBpdCBhcyB0aGUgYWN0aW9uIG5vdCBvZiB0aGUgc3RhdGUgYnV0IG9mCgkJCQkJdGhlIG9saWdhcmNoeSBvciB0aGUgdHlyYW50IGluIHBvd2VyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNvIHdlCgkJCQkJCXNwZWFrIG9mIGFuIGFjdGlvbiBwbGFubmVkIGFuZCBjYXJyaWVkIGJ5IHRoZSBwYXJ0eSBpbiBwb3dlciBhcyBhbiBBY3Qgb2YKCQkJCQkJUGFybGlhbWVudCwgYW5kIHRlY2huaWNhbGx5IGFzIGFuIGFjdCBvZiB0aGUgc292ZXJlaWduLjwvbm90ZT47IGFuZCB3ZSBzZWUKCQkJCQl0aGF0IHRoZSBhY3Rpdml0eSBvZiB0aGUgc3RhdGVzbWFuIGFuZCBsYXdnaXZlciBpcyBlbnRpcmVseSBjb25jZXJuZWQgd2l0aCBhCgkJCQkJc3RhdGUgYXMgaXRzIG9iamVjdCwgYW5kIGEgY29uc3RpdHV0aW9uIGlzIGEgZm9ybSBvZiBvcmdhbml6YXRpb24gb2YgdGhlCgkJCQkJaW5oYWJpdGFudHMgb2YgYSBzdGF0ZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgYSBzdGF0ZQoJCQkJCWlzIGEgY29tcG9zaXRlIHRoaW5nLCBpbiB0aGUgc2FtZSBzZW5zZSBhcyBhbnkgb3RoZXIgb2YgdGhlIHRoaW5ncyB0aGF0IGFyZQoJCQkJCXdob2xlcyBidXQgY29uc2lzdCBvZiBtYW55IHBhcnRzOyBpdCBpcyB0aGVyZWZvcmUgY2xlYXIgdGhhdCB3ZSBtdXN0IGZpcnN0CgkJCQkJaW5xdWlyZSBpbnRvIHRoZSBuYXR1cmUgb2YgYSBjaXRpemVuOyBmb3IgYSBzdGF0ZSBpcyBhIGNvbGxlY3Rpb24gb2YgY2l0aXplbnMsCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjc1YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1275a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnNvIHRoYXQgd2UgaGF2ZSB0byBjb25zaWRlciB3aG8gaXMgZW50aXRsZWQgdG8gdGhlIG5hbWUgb2YKCQkJCQljaXRpemVuLCBhbmQgd2hhdCB0aGUgZXNzZW50aWFsIG5hdHVyZSBvZiBhIGNpdGl6ZW4gaXMuIEZvciB0aGVyZSBpcyBvZnRlbiBhCgkJCQkJZGlmZmVyZW5jZSBvZiBvcGluaW9uIGFzIHRvIHRoaXM6IHBlb3BsZSBkbyBub3QgYWxsIGFncmVlIHRoYXQgdGhlIHNhbWUgcGVyc29uCgkJCQkJaXMgYSBjaXRpemVuOyBvZnRlbiBzb21lYm9keSB3aG8gd291bGQgYmUgYSBjaXRpemVuIGluIGEgZGVtb2NyYWN5IGlzIG5vdCBhCgkJCQkJY2l0aXplbiB1bmRlciBhbiBvbGlnYXJjaHkuIDwvdHJhbnNsYXRpb24+"
translation['3.1275a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+V2UgbmVlZAoJCQkJCW5vdCBoZXJlIGNvbnNpZGVyIHRob3NlIHdobyBhY3F1aXJlIHRoZSB0aXRsZSBvZiBjaXRpemVuIGluIHNvbWUgZXhjZXB0aW9uYWwKCQkJCQltYW5uZXIsIGZvciBleGFtcGxlIHRob3NlIHdobyBhcmUgY2l0aXplbnMgYnkgYWRvcHRpb247IGFuZCBjaXRpemVuc2hpcCBpcyBub3QKCQkJCQljb25zdGl0dXRlZCBieSBkb21pY2lsZSBpbiBhIGNlcnRhaW4gcGxhY2Ug77yIZm9yIHJlc2lkZW50IGFsaWVucyBhbmQKCQkJCQlzbGF2ZXMgc2hhcmUgdGhlIGRvbWljaWxlIG9mIGNpdGl6ZW5z77yJLCBub3IgYXJlIHRob3NlIGNpdGl6ZW5zIHdobwoJCQkJCXBhcnRpY2lwYXRlIGluIGEgY29tbW9uIHN5c3RlbSBvZiBqdXN0aWNlLCBjb25mZXJyaW5nIHRoZSByaWdodCB0byBkZWZlbmQgYW4KCQkJCQlhY3Rpb24gYW5kIHRvIGJyaW5nIG9uZSBpbiB0aGUgbGF3LWNvdXJ0cyDvvIhmb3IgdGhpcyByaWdodCBiZWxvbmdzIGFsc28KCQkJCQl0byB0aGUgcGFydGllcyB1bmRlciBhIGNvbW1lcmNpYWwgdHJlYXR5LCBhcyB0aGV5IHRvbyBjYW4gc3VlIGFuZCBiZSBzdWVkIGF0CgkJCQkJbGF3LOKAlG9yIHJhdGhlciwgaW4gbWFueSBwbGFjZXMgZXZlbiB0aGUgcmlnaHQgb2YgbGVnYWwgYWN0aW9uIGlzIG5vdAoJCQkJCXNoYXJlZCBjb21wbGV0ZWx5IGJ5IHJlc2lkZW50IGFsaWVucywgYnV0IHRoZXkgYXJlIG9ibGlnZWQgdG8gcHJvZHVjZSBhIHBhdHJvbiwKCQkJCQlzbyB0aGF0IHRoZXkgb25seSBzaGFyZSBpbiBhIGNvbW1vbiBsZWdhbCBwcm9jZWR1cmUgdG8gYW4gaW5jb21wbGV0ZQoJCQkJCWRlZ3JlZe+8iSwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQgdGhlc2UgYXJlIG9ubHkKCQkJCQljaXRpemVucyBpbiB0aGUgbWFubmVyIGluIHdoaWNoIGNoaWxkcmVuIHdobyBhcmUgYXMgeWV0IHRvbyB5b3VuZyB0byBoYXZlIGJlZW4KCQkJCQllbnJvbGxlZCBpbiB0aGUgbGlzdCBhbmQgb2xkIG1lbiB3aG8gaGF2ZSBiZWVuIGRpc2NoYXJnZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBzZWVtcyB0byBpbXBseSB0aGF0IGFnZWQgY2l0aXplbnMgd2VyZSBleGN1c2VkCgkJCQkJCWF0dGVuZGFuY2UgYXQgdGhlIGFzc2VtYmx5IGFuZCBsYXctY291cnRzLCBhcyB3ZWxsIGFzIG1pbGl0YXJ5CgkJCQkJCXNlcnZpY2U8L25vdGU+IG11c3QgYmUgcHJvbm91bmNlZCB0byBiZSBjaXRpemVucyBpbiBhIHNlbnNlLCB5ZXQgbm90IHF1aXRlCgkJCQkJYWJzb2x1dGVseSwgYnV0IHdpdGggdGhlIGFkZGVkIHF1YWxpZmljYXRpb24gb2Yg4oCYdW5kZXIgYWdl4oCZCgkJCQkJaW4gdGhlIGNhc2Ugb2YgdGhlIGZvcm1lciBhbmQg4oCYc3VwZXJhbm51YXRlZOKAmSBvciBzb21lIG90aGVyCgkJCQkJc2ltaWxhciB0ZXJtIO+8iGl0IG1ha2VzIG5vIGRpZmZlcmVuY2UsIHRoZSBtZWFuaW5nIGJlaW5nIGNsZWFy77yJCgkJCQkJaW4gdGhhdCBvZiB0aGUgbGF0dGVyLiBGb3Igd2Ugc2VlayB0byBkZWZpbmUgYSBjaXRpemVuIGluIHRoZSBhYnNvbHV0ZSBzZW5zZSwKCQkJCQlhbmQgb25lIHBvc3Nlc3Npbmcgbm88bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+ZGlzcXVhbGlmaWNhdGlvbgoJCQkJCW9mIHRoaXMgbmF0dXJlIHRoYXQgcmVxdWlyZXMgYSBjb3JyZWN0aW5nIHRlcm0sIHNpbmNlIHNpbWlsYXIgZGlmZmljdWx0aWVzIG1heQoJCQkJCWFsc28gYmUgcmFpc2VkLCBhbmQgc29sdmVkLCBhYm91dCBjaXRpemVucyB3aG8gaGF2ZSBiZWVuIGRpc2ZyYW5jaGlzZWQgb3IKCQkJCQlleGlsZWQuIEEgY2l0aXplbiBwdXJlIGFuZCBzaW1wbGUgaXMgZGVmaW5lZCBieSBub3RoaW5nIGVsc2Ugc28gbXVjaCBhcyBieSB0aGUKCQkJCQlyaWdodCB0byBwYXJ0aWNpcGF0ZSBpbiBqdWRpY2lhbCBmdW5jdGlvbnMgYW5kIGluIG9mZmljZS4gQnV0IHNvbWUgb2ZmaWNlcyBvZgoJCQkJCWdvdmVybm1lbnQgYXJlIGRlZmluaXRlbHkgbGltaXRlZCBpbiByZWdhcmQgdG8gdGltZSwgc28gdGhhdCBzb21lIG9mIHRoZW0gYXJlCgkJCQkJbm90IGFsbG93ZWQgdG8gYmUgaGVsZCB0d2ljZSBieSB0aGUgc2FtZSBwZXJzb24gYXQgYWxsLCBvciBvbmx5IGFmdGVyIGNlcnRhaW4KCQkJCQlmaXhlZCBpbnRlcnZhbHMgb2YgdGltZTsgb3RoZXIgb2ZmaWNpYWxzIGFyZSB3aXRob3V0IGxpbWl0IG9mIHRlbnVyZSwgZm9yCgkJCQkJZXhhbXBsZSB0aGUganVyeW1hbiBhbmQgdGhlIG1lbWJlciBvZiB0aGUgYXNzZW1ibHkuIDwvdHJhbnNsYXRpb24+"
translation['3.1275b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS41IiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgbWlnaHQgcGVyaGFwcyBiZSBzYWlkIHRoYXQgc3VjaCBwZXJzb25zIGFyZSBub3QKCQkJCQlvZmZpY2lhbHMgYXQgYWxsLCBhbmQgdGhhdCB0aGUgZXhlcmNpc2Ugb2YgdGhlc2UgZnVuY3Rpb25zIGRvZXMgbm90IGNvbnN0aXR1dGUKCQkJCQl0aGUgaG9sZGluZyBvZiBvZmZpY2U7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yLCBhbWVuZGluZyB0aGUgdGV4dCwKCQkJCQkJ4oCYYW5kIHlldCB0aGF0IGl0IGlzIGFic3VyZCB0byBkZW55IHRoZSB0aXRsZSBvZiBjaXRpemVuIHRvCgkJCQkJCXRob3Nl4oCU4oCZPC9ub3RlPiBhbmQgeWV0IGl0IGlzIGFic3VyZCB0byBkZW55IHRoZSB0aXRsZSBvZgoJCQkJCW9mZmljaWFsIHRvIHRob3NlIHdobyBoYXZlIHRoZSBncmVhdGVzdCBwb3dlciBpbiB0aGUgc3RhdGUuIEJ1dCBpdCBuZWVkIG5vdCBtYWtlCgkJCQkJYW55IGRpZmZlcmVuY2UsIGFzIGl0IGlzIG9ubHkgdGhlIHF1ZXN0aW9uIG9mIGEgbmFtZSwgc2luY2UgdGhlcmUgaXMgbm8gY29tbW9uCgkJCQkJbmFtZSBmb3IgYSBqdXJ5bWFuIGFuZCBhIG1lbWJlciBvZiB0aGUgYXNzZW1ibHkgdGhhdCBpcyBwcm9wZXJseSBhcHBsaWVkIHRvCgkJCQkJYm90aC4gRm9yIHRoZSBzYWtlIG9mIGRpc3RpbmN0aW9uIHRoZXJlZm9yZSBsZXQgdXMgY2FsbCB0aGUgY29tYmluYXRpb24gb2YgdGhlCgkJCQkJdHdvIGZ1bmN0aW9ucyDigJhvZmZpY2XigJkgd2l0aG91dCBsaW1pdGF0aW9uLiBBY2NvcmRpbmdseSB3ZQoJCQkJCWxheSBpdCBkb3duIHRoYXQgdGhvc2UgYXJlIGNpdGl6ZW5zIHdobyBwYXJ0aWNpcGF0ZSBpbiBvZmZpY2UgaW4gdGhpcwoJCQkJCQltYW5uZXIuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlN1Y2ggbW9yZSBvciBsZXNzIGlzIHRoZSBkZWZpbml0aW9uIG9mCgkJCQkJ4oCYY2l0aXplbuKAmSB0aGF0IHdvdWxkIGJlc3QgZml0IHdpdGggYWxsIG9mIHRob3NlIHRvIHdob20gdGhlCgkJCQkJbmFtZSBpcyBhcHBsaWVkLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBpdCBtdXN0IG5vdCBiZQoJCQkJCWZvcmdvdHRlbiB0aGF0IHRoaW5ncyBpbiB0aGUgY2FzZSBvZiB3aGljaCB0aGUgdGhpbmdzIHRvIHdoaWNoIHRoZXkgYXJlIHJlbGF0ZWQKCQkJCQlkaWZmZXIgaW4ga2luZCwgb25lIG9mIHRoZW0gYmVpbmcgcHJpbWFyeSwgYW5vdGhlciBvbmUgc2Vjb25kYXJ5IGFuZCBzbyBvbiwKCQkJCQllaXRoZXIgZG8gbm90IGNvbnRhaW4gYSBjb21tb24gbmF0dXJlIGF0IGFsbCwgYXMgYmVpbmcgd2hhdCB0aGV5IGFyZSwgb3IgYmFyZWx5CgkJCQkJZG8gc28uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBtZWFuaW5nIG9mIHRoaXMgYWJzdHJhY3QgcHJpbmNpcGxlCgkJCQkJCWlzIG1vc3QgZWFzaWx5IHNlZW4gZnJvbSBpdHMgYXBwbGljYXRpb24gaGVyZTogaWYgc3RhdGVzIGFyZSBnZW5lcmljYWxseQoJCQkJCQlkaWZmZXJlbnQgZnJvbSBvbmUgYW5vdGhlciwgbWVtYmVyc2hpcCBvZiBhIHN0YXRlLCBjaXRpemVuc2hpcCwgY2FuIGhhcmRseQoJCQkJCQliZSBhIHNpbmdsZSB0aGluZywgYW5kIGNvbWUgdW5kZXIgYSBzaW5nbGUgZGVmaW5pdGlvbi48L25vdGU+IE5vdyB3ZSBzZWUKCQkJCQl0aGF0IGNvbnN0aXR1dGlvbnMgZGlmZmVyIGZyb20gb25lIGFub3RoZXIgaW4ga2luZCwgYW5kIHRoYXQgc29tZSBhcmUgc3Vic2VxdWVudAoJCQkJCWFuZCBvdGhlcnMgcHJpb3I7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjc1YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1275b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBlcnJvbmVvdXMgYW5kIGRpdmVyZ2VudCBmb3JtcyBhcmUgbmVjZXNzYXJpbHkKCQkJCQlzdWJzZXF1ZW50IHRvIGNvcnJlY3QgZm9ybXMg77yIaW4gd2hhdCBzZW5zZSB3ZSBlbXBsb3kgdGhlIHRlcm1zCgkJCQkJ4oCYZGl2ZXJnZW504oCZIG9mIGNvbnN0aXR1dGlvbnMgd2lsbCBhcHBlYXIgbGF0ZXLvvIkuCgkJCQkJSGVuY2UgdGhlIGNpdGl6ZW4gY29ycmVzcG9uZGluZyB0byBlYWNoIGZvcm0gb2YgY29uc3RpdHV0aW9uIHdpbGwgYWxzbwoJCQkJCW5lY2Vzc2FyaWx5IGJlIGRpZmZlcmVudC4gVGhlcmVmb3JlIHRoZSBkZWZpbml0aW9uIG9mIGEgY2l0aXplbiB0aGF0IHdlIGhhdmUKCQkJCQlnaXZlbiBhcHBsaWVzIGVzcGVjaWFsbHkgdG8gY2l0aXplbnNoaXAgaW4gYSBkZW1vY3JhY3k7IHVuZGVyIG90aGVyIGZvcm1zIG9mCgkJCQkJZ292ZXJubWVudCBpdCBtYXkgaG9sZCBnb29kLCBidXQgd2lsbCBub3QgbmVjZXNzYXJpbHkgZG8gc28uIDwvdHJhbnNsYXRpb24+"
translation['3.1275b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS43IiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIGluIHNvbWUgc3RhdGVzIHRoZXJlIGlzIG5vIGJvZHkgb2YgY29tbW9uCgkJCQkJY2l0aXplbnMsIGFuZCB0aGV5IGRvIG5vdCBoYXZlIHRoZSBjdXN0b20gb2YgYSBwb3B1bGFyIGFzc2VtYmx5IGJ1dCBjb3VuY2lscyBvZgoJCQkJCXNwZWNpYWxseSBjb252ZW5lZCBtZW1iZXJzLCBhbmQgdGhlIG9mZmljZSBvZiB0cnlpbmcgbGF3LXN1aXRzIGdvZXMgYnkKCQkJCQlzZWN0aW9uc+KAlGZvciBleGFtcGxlIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiBzdWl0cyBmb3IgYnJlYWNoIG9mIGNvbnRyYWN0IGFyZSB0cmllZCBieSBkaWZmZXJlbnQKCQkJCQllcGhvcnMgaW4gZGlmZmVyZW50IGNhc2VzLCB3aGlsZSBjYXNlcyBvZiBob21pY2lkZSBhcmUgdHJpZWQgYnkgdGhlIGVwaG9ycyBhbmQKCQkJCQlkb3VidGxlc3Mgb3RoZXIgc3VpdHMgYnkgc29tZSBvdGhlciBtYWdpc3RyYXRlLiBUaGUgc2FtZSBtZXRob2QgaXMgbm90PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBuZWdhdGl2ZSBpcyBhIGNvbmplY3R1cmFsIGluc2VydGlvbiwgY2YuCgkJCQkJCTEyNzNhIDIwLjwvbm90ZT4gZm9sbG93ZWQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDYXJ0aGFnZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ2FydGhhZ2UiPkNhcnRoYWdlPC9wbGFjZU5hbWU+LCB3aGVyZSBjZXJ0YWluIG1hZ2lzdHJhdGVzIGp1ZGdlIGFsbCB0aGUgbGF3LXN1aXRzLgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBzdGlsbCwgb3VyIGRlZmluaXRpb24gb2YgYQoJCQkJCWNpdGl6ZW4gYWRtaXRzIG9mIGNvcnJlY3Rpb24uIEZvciB1bmRlciB0aGUgb3RoZXIgZm9ybXMgb2YgY29uc3RpdHV0aW9uIGEgbWVtYmVyCgkJCQkJb2YgdGhlIGFzc2VtYmx5IGFuZCBvZiBhIGp1cnktY291cnQgaXMgbm90IOKAmGFuIG9mZmljaWFs4oCZCgkJCQkJd2l0aG91dCByZXN0cmljdGlvbiwgYnV0IGFuIG9mZmljaWFsIGRlZmluZWQgYWNjb3JkaW5nIHRvIGhpcyBvZmZpY2U7IGVpdGhlciBhbGwKCQkJCQlvZiB0aGVtIG9yIHNvbWUgYW1vbmcgdGhlbSBhcmUgYXNzaWduZWQgZGVsaWJlcmF0aXZlIGFuZCBqdWRpY2lhbCBkdXRpZXMgZWl0aGVyCgkJCQkJaW4gYWxsIG1hdHRlcnMgb3IgaW4gY2VydGFpbiBtYXR0ZXJzLiBXaGF0IGNvbnN0aXR1dGVzIGEgY2l0aXplbiBpcyB0aGVyZWZvcmUKCQkJCQljbGVhciBmcm9tIHRoZXNlIGNvbnNpZGVyYXRpb25zOiB3ZSBub3cgZGVjbGFyZSB0aGF0IG9uZSB3aG8gaGFzIHRoZSByaWdodCB0bwoJCQkJCXBhcnRpY2lwYXRlIGluIGRlbGliZXJhdGl2ZSBvciBqdWRpY2lhbCBvZmZpY2UgaXMgYSBjaXRpemVuIG9mIHRoZQoJCQkJCQlzdGF0ZTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5pbiB3aGljaCBoZSBoYXMgdGhhdCByaWdodCwKCQkJCQlhbmQgYSBzdGF0ZSBpcyBhIGNvbGxlY3Rpb24gb2Ygc3VjaCBwZXJzb25zIHN1ZmZpY2llbnRseSBudW1lcm91cywgc3BlYWtpbmcKCQkJCQlicm9hZGx5LCB0byBzZWN1cmUgaW5kZXBlbmRlbmNlIG9mIGxpZmUuPC90cmFuc2xhdGlvbj4="
translation['3.1276a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS45IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBpbiBwcmFjdGljZSBjaXRpemVuc2hpcAoJCQkJCWlzIGxpbWl0ZWQgdG8gdGhlIGNoaWxkIG9mIGNpdGl6ZW5zIG9uIGJvdGggc2lkZXMsIG5vdCBvbiBvbmUgc2lkZSBvbmx5LCB0aGF0CgkJCQkJaXMsIHRoZSBjaGlsZCBvZiBhIGNpdGl6ZW4gZmF0aGVyIG9yIG9mIGEgY2l0aXplbiBtb3RoZXI7IGFuZCBvdGhlciBwZW9wbGUgY2FycnkKCQkJCQl0aGlzIHJlcXVpcmVtZW50IGZ1cnRoZXIgYmFjaywgZm9yIGV4YW1wbGUgdG8gdGhlIHNlY29uZCBvciB0aGUgdGhpcmQgcHJlY2VkaW5nCgkJCQkJZ2VuZXJhdGlvbiBvciBmdXJ0aGVyLiBCdXQgZ2l2ZW4gdGhpcyBhcyBhIHByYWN0aWNhbCBhbmQgaGFzdHkgZGVmaW5pdGlvbiwgc29tZQoJCQkJCXBlb3BsZSByYWlzZSB0aGUgZGlmZmljdWx0eSwgSG93IHdpbGwgdGhhdCBhbmNlc3RvciB0aHJlZSBvciBmb3VyIGdlbmVyYXRpb25zCgkJCQkJYmFjayBoYXZlIGJlZW4gYSBjaXRpemVuPyBHb3JnaWFzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNpY2lsaWFuCgkJCQkJCW9yYXRvciBhbmQgbmloaWxpc3RpYyBwaGlsb3NvcGhlciwgdmlzaXRlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4KCQkJCQkJPGRhdGUgYXV0aG5hbWU9Ii00MjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MjciPjQyNzwvZGF0ZT4gQi5DLjwvbm90ZT4gb2YgTGVvbnRpbmkgdGhlcmVmb3JlLCBwYXJ0bHkKCQkJCQlwZXJoYXBzIGluIGdlbnVpbmUgcGVycGxleGl0eSBidXQgcGFydGx5IGluIGplc3QsIHNhaWQgdGhhdCBqdXN0IGFzIHRoZSB2ZXNzZWxzCgkJCQkJbWFkZSBieSBtb3J0YXItbWFrZXJzIHdlcmUgbW9ydGFycywgc28gdGhlIGNpdGl6ZW5zIG1hZGUgYnkgdGhlIG1hZ2lzdHJhdGVzIHdlcmUKCQkJCQlMYXJpc2FlYW5zLCBzaW5jZSBzb21lIG9mIHRoZSBtYWdpc3RyYXRlcyB3ZXJlIGFjdHVhbGx5IGxhcmlzYS1tYWtlcnMuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+CgkJCQkJCTxkYXRlIGF1dGhuYW1lPSItNDI3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDI3Ij40Mjc8L2RhdGU+IEIuQy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxMYXJpc2EsQWVvbGlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxMYXJpc2EsQWVvbGlzIj5MYXJpc2E8L3BsYWNlTmFtZT4sIGEgY2l0eSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAxMzk5Ij5UaGVzc2FseTwvcGxhY2VOYW1lPiwgd2FzIGZhbW91cyBmb3IgdGhlIG1hbnVmYWN0dXJlIG9mIGEga2luZCBvZgoJCQkJCQlrZXR0bGUgY2FsbGVkIOKAmGxhcmlzYS7igJk8L25vdGU+IEJ1dCBpdCBpcyByZWFsbHkgYSBzaW1wbGUKCQkJCQltYXR0ZXI7IGZvciBpZiB0aGV5IHBvc3Nlc3NlZCBjaXRpemVuc2hpcCBpbiB0aGUgbWFubmVyIHN0YXRlZCBpbiBvdXIgZGVmaW5pdGlvbgoJCQkJCW9mIGEgY2l0aXplbiwgdGhleSB3ZXJlIGNpdGl6ZW5z4oCUc2luY2UgaXQgaXMgY2xlYXJseSBpbXBvc3NpYmxlIHRvCgkJCQkJYXBwbHkgdGhlIHF1YWxpZmljYXRpb24gb2YgZGVzY2VudCBmcm9tIGEgY2l0aXplbiBmYXRoZXIgb3IgbW90aGVyIHRvIHRoZQoJCQkJCW9yaWdpbmFsIGNvbG9uaXplcnMgb3IgZm91bmRlcnMgb2YgYSBjaXR5LjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTGFyaXNhLEFlb2xpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTGFyaXNhLEFlb2xpcyI+TGFyaXNhPC9wbGFjZU5hbWU+LCBhIGNpdHkgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT4sIHdhcyBmYW1vdXMgZm9yIHRoZSBtYW51ZmFjdHVyZSBvZiBhIGtpbmQgb2YKCQkJCQkJa2V0dGxlIGNhbGxlZCDigJhsYXJpc2Eu4oCZPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBwZXJoYXBzIGEgcXVlc3Rpb24KCQkJCQlyYXRoZXIgYXJpc2VzIGFib3V0IHRob3NlIHdobyB3ZXJlIGFkbWl0dGVkIHRvIGNpdGl6ZW5zaGlwIHdoZW4gYSByZXZvbHV0aW9uIGhhZAoJCQkJCXRha2VuIHBsYWNlLCBmb3IgaW5zdGFuY2Ugc3VjaCBhIGNyZWF0aW9uIG9mIGNpdGl6ZW5zIGFzIHRoYXQgY2FycmllZCBvdXQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SW4gPGRhdGUgYXV0aG5hbWU9Ii01MDkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii01MDkiPjUwOTwvZGF0ZT4gQi5DLjwvbm90ZT4KCQkJCQlhdCA8ZGF0ZSBhdXRobmFtZT0iLTUwOSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTUwOSI+NTA5PC9kYXRlPiBCLkMuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGJ5IENsZWlzdGhlbmVzIGFmdGVyIHRoZQoJCQkJCWV4cHVsc2lvbiBvZiB0aGUgdHlyYW50cywgd2hlbiBoZSBlbnJvbGxlZCBpbiBoaXMgdHJpYmVzIG1hbnkgcmVzaWRlbnQgYWxpZW5zCgkJCQkJd2hvIGhhZCBiZWVuIGZvcmVpZ25lcnMgb3Igc2xhdmVzLiBUaGUgZGlzcHV0ZSBhcyB0byB0aGVzZSBpcyBub3QgYWJvdXQgdGhlIGZhY3QKCQkJCQlvZiB0aGVpciBjaXRpemVuc2hpcCwgYnV0IHdoZXRoZXIgdGhleSByZWNlaXZlZCBpdCB3cm9uZ2x5IG9yIHJpZ2h0bHkuIFlldCBldmVuCgkJCQkJYXMgdG8gdGhpcyBvbmUgbWlnaHQgcmFpc2UgdGhlIGZ1cnRoZXIgcXVlc3Rpb24sIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjc2YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1276a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPndoZXRoZXIsIGlmIGEgbWFuCgkJCQkJaXMgbm90IHJpZ2h0bHkgYSBjaXRpemVuLCBoZSBpcyBhIGNpdGl6ZW4gYXQgYWxsLCBhcwoJCQkJCeKAmHdyb25nbHnigJkgbWVhbnMgdGhlIHNhbWUgYXMg4oCYbm90IHRydWx5LuKAmQoJCQkJCUJ1dCB3ZSBzb21ldGltZXMgc2VlIG9mZmljaWFscyBnb3Zlcm5pbmcgd3JvbmdseSwgYXMgdG8gd2hvbSB3ZSBzaGFsbCBub3QgZGVueQoJCQkJCXRoYXQgdGhleSBkbyBnb3Zlcm4sIGJ1dCBzaGFsbCBzYXkgdGhhdCB0aGV5IGRvIG5vdCBkbyBpdCByaWdodGx5LCBhbmQgYSBjaXRpemVuCgkJCQkJaXMgZGVmaW5lZCBieSBhIGNlcnRhaW4gZnVuY3Rpb24gb2YgZ292ZXJubWVudCDvvIhhIGNpdGl6ZW4sIGFzIHdlIHNhaWQsCgkJCQkJaXMgb25lIHdobyBzaGFyZXMgaW4gc3VjaCBhbmQgc3VjaCBhbiBvZmZpY2XvvIk7IHRoZXJlZm9yZSBpdCBpcyBjbGVhcgoJCQkJCXRoYXQgZXZlbiBwZXJzb25zIHdyb25nbHkgYWRtaXR0ZWQgdG8gY2l0aXplbnNoaXAgYXJlIHRvIGJlIHByb25vdW5jZWQgdG8gYmUKCQkJCQljaXRpemVucywgYWx0aG91Z2ggdGhlIHF1ZXN0aW9uIHdoZXRoZXIgdGhleSBhcmUgc28gcmlnaHRseSBvciBub3QgcmlnaHRseSBpcwoJCQkJCWNvbm5lY3RlZCB3aXRoIHRoZSBxdWVzdGlvbiB0aGF0IHdhcyBwcm9wb3VuZGVkIGJlZm9yZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHF1ZXN0aW9uLCBXaGF0IGlzIGEgc3RhdGU/IDEyNzRiIDM0Ljwvbm90ZT4gRm9yIHNvbWUKCQkJCQlwZXJzb25zIHJhaXNlIHRoZSBxdWVzdGlvbiwgV2hlbiBpcyBhbiBvY2N1cnJlbmNlIHRoZSBhY3Qgb2YgdGhlIHN0YXRlIGFuZCB3aGVuCgkJCQkJaXMgaXQgbm90PyBmb3IgZXhhbXBsZSwgd2hlbiB0aGUgZ292ZXJubWVudCBoYXMgYmVlbiBhbHRlcmVkIGZyb20gb2xpZ2FyY2h5IG9yCgkJCQkJdHlyYW5ueSB0byBkZW1vY3JhY3kuIEluIHN1Y2ggY2lyY3Vtc3RhbmNlcyBzb21lIHBlb3BsZSBjbGFpbSB0aGF0IHRoZSBuZXcKCQkJCQlnb3Zlcm5tZW50IHNob3VsZCBub3QgZGlzY2hhcmdlIHB1YmxpYyBkZWJ0cywgb24gdGhlIGdyb3VuZCB0aGF0IHRoZSBtb25leSB3YXMKCQkJCQlib3Jyb3dlZCBieSB0aGUgdHlyYW50IGFuZCBub3QgYnkgdGhlIHN0YXRlLCBhbmQgc2hvdWxkIHJlcHVkaWF0ZSBtYW55IG90aGVyCgkJCQkJc2ltaWxhciBjbGFpbXMgYWxzbywgYmVjYXVzZSBzb21lIGZvcm1zIG9mIGdvdmVybm1lbnQgcmVzdCB1cG9uIGZvcmNlIGFuZCBhcmUKCQkJCQlub3QgYWltZWQgYXQgdGhlIHdlbGZhcmUgb2YgdGhlIGNvbW11bml0eS4gPC90cmFuc2xhdGlvbj4="
translation['3.1276a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPklmIHRoZXJlZm9yZSBzb21lIGRlbW9jcmFjaWVzIGFsc28gYXJlIGdvdmVybmVkIGluIHRoYXQKCQkJCQltYW5uZXIsIHRoZSBhY3RzIG9mIHRoZSBhdXRob3JpdGllcyBpbiB0aGVpciBjYXNlIGNhbiBvbmx5IGJlIHNhaWQgdG8gYmUgdGhlCgkJCQkJYWN0cyBvZiB0aGUgc3RhdGUgaW4gdGhlIHNhbWUgc2Vuc2UgYXMgdGhlIHB1YmxpYyBhY3RzIGVtYW5hdGluZyBmcm9tIGFuCgkJCQkJb2xpZ2FyY2h5IG9yIGEgdHlyYW5ueSBhcmUgc2FpZCB0byBiZS4gQWtpbiB0byB0aGlzIGNvbnRyb3ZlcnN5IHNlZW1zIHRvIGJlIHRoZQoJCQkJCXN1YmplY3QsIFdoYXQgZXhhY3RseSBpcyB0aGUgcHJpbmNpcGxlIG9uIHdoaWNoIHdlIG91Z2h0IHRvIHByb25vdW5jZSBhIGNpdHkgdG8KCQkJCQliZSB0aGUgc2FtZSBjaXR5IGFzIGl0IHdhcyBiZWZvcmUsIG9yIG5vdCB0aGUgc2FtZSBidXQgYSBkaWZmZXJlbnQgY2l0eT8gVGhlCgkJCQkJbW9zdCBvYnZpb3VzIG1vZGUgb2YgaW5xdWlyaW5nIGludG8gdGhpcyBkaWZmaWN1bHR5PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmRlYWxzIHdpdGggcGxhY2UgYW5kIHBlb3BsZTogdGhlIHBsYWNlIGFuZCB0aGUgcGVvcGxlIG1heSBoYXZlCgkJCQkJYmVlbiBkaXZpZGVkLCBhbmQgc29tZSBtYXkgaGF2ZSBzZXR0bGVkIGluIG9uZSBwbGFjZSwgYW5kIHNvbWUgaW4gYW5vdGhlci4gSW4KCQkJCQl0aGlzIGZvcm0gdGhlIHF1ZXN0aW9uIG11c3QgYmUgY29uc2lkZXJlZCBhcyBlYXNpZXIgb2Ygc29sdXRpb247IGZvciwgYXMKCQkJCQnigJhjaXR54oCZIGhhcyBzZXZlcmFsIG1lYW5pbmdzLCB0aGUgaW5xdWlyeSBzbyBwdXQgaXMgaW4gYSB3YXkKCQkJCQlub3QgZGlmZmljdWx0Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+A4b25zrvOuc+CPC9mb3JlaWduPiBtZWFucyBib3RoIO+8iDHvvIkKCQkJCQkJ4oCYY2l0eeKAmSDvvIhhbmQgYWxzbwoJCQkJCQnigJhjaXRhZGVs4oCZ77yJIGFuZCDvvIgy77yJCgkJCQkJCeKAmHN0YXRlLOKAmSBhIGNvbGxlY3Rpb24gb2YgY2l0aXplbnM7IGFuZCBpZiB0aGUgY2l0aXplbnMKCQkJCQkJZGl2aWRlIGFuZCBzZXR0bGUgaW4gdHdvIGRpZmZlcmVudCDigJhjaXRpZXPigJkgd2l0aAoJCQkJCQlkaWZmZXJlbnQgZ292ZXJubWVudHMsIHRoZXkgYXJlIGNsZWFybHkgbm90IHRoZSBzYW1lCgkJCQkJCeKAmHN0YXRl4oCZIGFzIGJlZm9yZS48L25vdGU+CgkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DhvbnOu865z4I8L2ZvcmVpZ24+IG1lYW5zIGJvdGgg77yIMe+8iQoJCQkJCQnigJhjaXR54oCZIO+8iGFuZCBhbHNvCgkJCQkJCeKAmGNpdGFkZWzigJnvvIkgYW5kIO+8iDLvvIkKCQkJCQkJ4oCYc3RhdGUs4oCZIGEgY29sbGVjdGlvbiBvZiBjaXRpemVuczsgYW5kIGlmIHRoZSBjaXRpemVucwoJCQkJCQlkaXZpZGUgYW5kIHNldHRsZSBpbiB0d28gZGlmZmVyZW50IOKAmGNpdGllc+KAmSB3aXRoCgkJCQkJCWRpZmZlcmVudCBnb3Zlcm5tZW50cywgdGhleSBhcmUgY2xlYXJseSBub3QgdGhlIHNhbWUKCQkJCQkJ4oCYc3RhdGXigJkgYXMgYmVmb3JlLjwvdHJhbnNsYXRpb24+"
translation['3.1276b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBpdCBtYXkgc2ltaWxhcmx5IGJlIGFza2VkLAoJCQkJCVN1cHBvc2UgYSBzZXQgb2YgbWVuIGluaGFiaXQgdGhlIHNhbWUgcGxhY2UsIGluIHdoYXQgY2lyY3Vtc3RhbmNlcyBhcmUgd2UgdG8KCQkJCQljb25zaWRlciB0aGVpciBjaXR5IHRvIGJlIGEgc2luZ2xlIGNpdHk/IEl0cyB1bml0eSBjbGVhcmx5IGRvZXMgbm90IGRlcGVuZCBvbgoJCQkJCXRoZSB3YWxscywgZm9yIGl0IHdvdWxkIGJlIHBvc3NpYmxlIHRvIHRocm93IGEgc2luZ2xlIHdhbGwgcm91bmQgdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE3MDc2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTcwNzYiPlBlbG9wb25uZXN1czwvcGxhY2VOYW1lPjsgYW5kIGEgY2FzZSBpbiBwb2ludCBwZXJoYXBzIGlzCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjI2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2MjYiPkJhYnlsb248L3BsYWNlTmFtZT4sIGFuZCBhbnkgb3RoZXIgY2l0eSB0aGF0CgkJCQkJaGFzIHRoZSBjaXJjdWl0IG9mIGEgbmF0aW9uIHJhdGhlciB0aGFuIG9mIGEgY2l0eTsgZm9yIGl0IGlzIHNhaWQgdGhhdCB3aGVuCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjI2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2MjYiPkJhYnlsb248L3BsYWNlTmFtZT4gd2FzIGNhcHR1cmVkIGEgY29uc2lkZXJhYmxlCgkJCQkJcGFydCBvZiB0aGUgY2l0eSB3YXMgbm90IGF3YXJlIG9mIGl0IHRocmVlIGRheXMgbGF0ZXIuIEJ1dCB0aGUgY29uc2lkZXJhdGlvbiBvZgoJCQkJCXRoaXMgZGlmZmljdWx0eSB3aWxsIGJlIHNlcnZpY2VhYmxlIGZvciBhbm90aGVyIG9jY2FzaW9uLCBhcyB0aGUgc3R1ZGVudCBvZgoJCQkJCXBvbGl0aWNzIG11c3Qgbm90IGlnbm9yZSB0aGUgcXVlc3Rpb24sIFdoYXQgaXMgdGhlIG1vc3QgYWR2YW50YWdlb3VzIHNpemUgZm9yIGEKCQkJCQljaXR5LCBhbmQgc2hvdWxkIGl0cyBwb3B1bGF0aW9uIGJlIG9mIG9uZSByYWNlIG9yIG9mIHNldmVyYWw/IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBhcmUgd2UgdG8gcHJvbm91bmNlIGEgY2l0eSwgd2hlcmUgdGhlCgkJCQkJc2FtZSBwb3B1bGF0aW9uIGluaGFiaXQgdGhlIHNhbWUgcGxhY2UsIHRvIGJlIHRoZSBzYW1lIGNpdHkgc28gbG9uZyBhcyB0aGUKCQkJCQlwb3B1bGF0aW9uIGFyZSBvZiB0aGUgc2FtZSByYWNlLCBpbiBzcGl0ZSBvZiB0aGUgZmFjdCB0aGF0IGFsbCB0aGUgdGltZSBzb21lIGFyZQoJCQkJCWR5aW5nIGFuZCBvdGhlcnMgYmVpbmcgYm9ybiwganVzdCBhcyBpdCBpcyBvdXIgY3VzdG9tIHRvIHNheSB0aGF0IGEgcml2ZXIgb3IgYQoJCQkJCXNwcmluZyBpcyB0aGUgc2FtZSByaXZlciBvciBzcHJpbmcgYWx0aG91Z2ggb25lIHN0cmVhbSBvZiB3YXRlciBpcyBhbHdheXMgYmVpbmcKCQkJCQlhZGRlZCB0byBpdCBhbmQgYW5vdGhlciBiZWluZyB3aXRoZHJhd24gZnJvbSBpdCwgb3IgYXJlIHdlIHRvIHNheSB0aGF0IHRob3VnaAoJCQkJCXRoZSBwZW9wbGUgYXJlIHRoZSBzYW1lIHBlb3BsZSBmb3IgdGhlIHNpbWlsYXIgcmVhc29uIG9mIGNvbnRpbnVpdHksIHlldCB0aGUKCQkJCQljaXR5IGlzIGEgZGlmZmVyZW50IGNpdHk/IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjc2YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1276b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkZvciBpbmFzbXVjaCBhcyBhIHN0YXRlIGlzIGEga2luZCBvZiBwYXJ0bmVyc2hpcCwKCQkJCQlhbmQgaXMgaW4gZmFjdCBhIHBhcnRuZXJzaGlwIG9mIGNpdGl6ZW5zIGluIGEgZ292ZXJubWVudCwgd2hlbiB0aGUgZm9ybSBvZiB0aGUKCQkJCQlnb3Zlcm5tZW50IGhhcyBiZWVuIGFsdGVyZWQgYW5kIGlzIGRpZmZlcmVudCBpdCB3b3VsZCBhcHBlYXIgdG8gZm9sbG93IHRoYXQgdGhlCgkJCQkJc3RhdGUgaXMgbm8gbG9uZ2VyIHRoZSBzYW1lIHN0YXRlLCBqdXN0IGFzIHdlIHNheSB0aGF0IGEgY2hvcnVzIHdoaWNoIG9uIG9uZQoJCQkJCW9jY2FzaW9uIGFjdHMgYSBjb21lZHkgYW5kIG9uIGFub3RoZXIgYSB0cmFnZWR5IGlzIGEgZGlmZmVyZW50IGNob3J1cyBhbHRob3VnaAoJCQkJCWl0IGlzIG9mdGVuIGNvbXBvc2VkIG9mIHRoZSBzYW1lIHBlcnNvbnMsIDwvdHJhbnNsYXRpb24+"
translation['3.1276b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBzaW1pbGFybHkgd2l0aCBhbnkgb3RoZXIgY29tbW9uIHdob2xlIG9yIGNvbXBvc2l0ZQoJCQkJCXN0cnVjdHVyZSB3ZSBzYXkgaXQgaXMgZGlmZmVyZW50IGlmIHRoZSBmb3JtIG9mIGl0cyBzdHJ1Y3R1cmUgaXMKCQkJCQlkaWZmZXJlbnTigJRmb3IgaW5zdGFuY2UgYSBtdXNpY2FsIHR1bmUgY29uc2lzdGluZyBvZiB0aGUgc2FtZSBub3RlcyB3ZQoJCQkJCWNhbGwgYSBkaWZmZXJlbnQgdHVuZSBpZiBhdCBvbmUgdGltZSBpdCBpcyBwbGF5ZWQgaW4gdGhlIERvcmlhbiBtb2RlIGFuZCBhdAoJCQkJCWFub3RoZXIgaW4gdGhlIFBocnlnaWFuLiBUaGVyZWZvcmUgaWYgdGhpcyBpcyB0aGUgY2FzZSwgaXQgaXMgY2xlYXIgdGhhdCB3ZSBtdXN0CgkJCQkJc3BlYWsgb2YgYSBzdGF0ZSBhcyBiZWluZyB0aGUgc2FtZSBzdGF0ZSBjaGllZmx5IHdpdGggcmVnYXJkIHRvIGl0cwoJCQkJCWNvbnN0aXR1dGlvbjsgYW5kIGl0IGlzIHBvc3NpYmxlIGZvciBpdCB0byBiZSBjYWxsZWQgYnkgdGhlIHNhbWUgb3IgYnkgYQoJCQkJCWRpZmZlcmVudCBkZXNpZ25hdGlvbiBib3RoIHdoZW4gaXRzIGluaGFiaXRhbnRzIGFyZSB0aGUgc2FtZSBhbmQgd2hlbiB0aGV5IGFyZQoJCQkJCWVudGlyZWx5IGRpZmZlcmVudCBwZXJzb25zLiBCdXQgd2hldGhlciBhIHN0YXRlIGlzIG9yIGlzIG5vdCBib3VuZCBpbiBqdXN0aWNlIHRvCgkJCQkJZGlzY2hhcmdlIGl0cyBlbmdhZ2VtZW50cyB3aGVuIGl0IGhhcyBjaGFuZ2VkIHRvIGEgZGlmZmVyZW50IGNvbnN0aXR1dGlvbiwgaXMKCQkJCQlhbm90aGVyIHN1YmplY3QuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIG5leHQgdGhpbmcgdG8gY29uc2lkZXIgYWZ0ZXIgd2hhdCBoYXMgbm93IGJlZW4gc2FpZCBpcyB0aGUKCQkJCQlxdWVzdGlvbiB3aGV0aGVyIHdlIGFyZSB0byBob2xkIHRoYXQgdGhlIGdvb2RuZXNzIG9mIGEgZ29vZCBtYW4gaXMgdGhlIHNhbWUgYXMKCQkJCQl0aGF0IG9mIGEgZ29vZCBjaXRpemVuLCBvciBub3QgdGhlIHNhbWUuIEhvd2V2ZXIsIGlmIHRoaXMgcG9pbnQgcmVhbGx5IGlzIHRvCgkJCQkJcmVjZWl2ZSBpbnZlc3RpZ2F0aW9uLCB3ZSBtdXN0IGZpcnN0IGFzY2VydGFpbiBpbiBzb21lIGdlbmVyYWwgb3V0bGluZSB3aGF0CgkJCQkJY29uc3RpdHV0ZXMgdGhlIGV4Y2VsbGVuY2Ugb2YgYSBjaXRpemVuLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5Ob3cgYSBjaXRpemVuIHdlIHByb25vdW5jZWQgdG8gYmUgb25lIHNvcnQgb2YgcGFydG5lciBpbiBhCgkJCQkJY29tbXVuaXR5LCBhcyBpcyBhIHNhaWxvci4gQW5kIGFsdGhvdWdoIHNhaWxvcnMgZGlmZmVyIGZyb20gZWFjaCBvdGhlciBpbgoJCQkJCWZ1bmN0aW9u4oCUb25lIGlzIGFuIG9hcnNtYW4sIGFub3RoZXIgaGVsbXNtYW4sIGFub3RoZXIgbG9vay1vdXQgbWFuLAoJCQkJCWFuZCBhbm90aGVyIGhhcyBzb21lIG90aGVyIHNpbWlsYXIgc3BlY2lhbCBkZXNpZ25hdGlvbuKAlGFuZCBzbyBjbGVhcmx5CgkJCQkJdGhlIG1vc3QgZXhhY3QgZGVmaW5pdGlvbiBvZiB0aGVpciBleGNlbGxlbmNlIHdpbGwgYmUgc3BlY2lhbCB0byBlYWNoLCB5ZXQgdGhlcmUKCQkJCQl3aWxsIGFsc28gYmUgYSBjb21tb24gZGVmaW5pdGlvbiBvZiBleGNlbGxlbmNlIHRoYXQgd2lsbCBhcHBseSBhbGlrZSB0byBhbGwgb2YKCQkJCQl0aGVtOyBmb3Igc2VjdXJpdHkgaW4gbmF2aWdhdGlvbiBpcyB0aGUgYnVzaW5lc3Mgb2YgdGhlbSBhbGwsIHNpbmNlIGVhY2ggb2YgdGhlCgkJCQkJc2FpbG9ycyBhaW1zIGF0IHRoYXQuIDwvdHJhbnNsYXRpb24+"
translation['3.1277a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+U2ltaWxhcmx5CgkJCQkJdGhlcmVmb3JlIHdpdGggdGhlIGNpdGl6ZW5zLCBhbHRob3VnaCB0aGV5IGFyZSBkaXNzaW1pbGFyIGZyb20gb25lIGFub3RoZXIsCgkJCQkJdGhlaXIgYnVzaW5lc3MgaXMgdGhlIHNlY3VyaXR5IG9mIHRoZWlyIGNvbW11bml0eSwgYW5kIHRoaXMgY29tbXVuaXR5IGlzIHRoZQoJCQkJCWNvbnN0aXR1dGlvbiwgc28gdGhhdCB0aGUgZ29vZG5lc3Mgb2YgYSBjaXRpemVuIG11c3QgbmVjZXNzYXJpbHkgYmUgcmVsYXRpdmUgdG8KCQkJCQl0aGUgY29uc3RpdHV0aW9uIG9mIHRoZSBzdGF0ZS4gSWYgdGhlcmVmb3JlIHRoZXJlIGFyZSB2YXJpb3VzIGZvcm1zIG9mCgkJCQkJY29uc3RpdHV0aW9uLCBpdCBpcyBjbGVhciB0aGF0IHRoZXJlIGNhbm5vdCBiZSBvbmUgc2luZ2xlIGdvb2RuZXNzIHdoaWNoIGlzIHRoZQoJCQkJCXBlcmZlY3QgZ29vZG5lc3Mgb2YgdGhlIGdvb2QgY2l0aXplbjsgYnV0IHdoZW4gd2Ugc3BlYWsgb2YgYSBnb29kIG1hbiB3ZSBtZWFuCgkJCQkJdGhhdCBoZSBwb3NzZXNzZXMgb25lIHNpbmdsZSBnb29kbmVzcywgcGVyZmVjdCBnb29kbmVzcy4gSGVuY2UgaXQgaXMgbWFuaWZlc3RseQoJCQkJCXBvc3NpYmxlIHRvIGJlIGEgZ29vZCBjaXRpemVuIHdpdGhvdXQgcG9zc2Vzc2luZyB0aGUgZ29vZG5lc3MgdGhhdCBjb25zdGl0dXRlcyBhCgkJCQkJZ29vZCBtYW4uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+TW9yZW92ZXIgaXQgaXMgYWxzbwoJCQkJCWZlYXNpYmxlIHRvIHB1cnN1ZSB0aGUgc2FtZSB0b3BpYyBieSByYWlzaW5nIHRoZSBxdWVzdGlvbiBpbiBhbm90aGVyIG1hbm5lciBpbgoJCQkJCXJlbGF0aW9uIHRvIHRoZSBiZXN0IGZvcm0gb2YgY29uc3RpdHV0aW9uLiBJZiBpdCBpcyBpbXBvc3NpYmxlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdGhlIEdyZWVrIHNob3VsZCBiZSBhbHRlcmVkIHRvIGdpdmUKCQkJCQkJ4oCYcG9zc2libGXigJkuIElmIHdlIGVtZW5kIHRoZSB0ZXh0IHdpdGggQmVybmF5cyB0bwoJCQkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrXhvLAgzrPhvbDPgSDOtOG9u869zrHPhM6/zr0g4byQzr4g4byBz4DhvbHOvc+Ez4nOvSDPg8+Azr/Phc60zrHhvbfPic69IOG9hM69z4TPic69CgkJCQkJCQnOteG8ts69zrHOuSDPgOG9uc67zrnOvTwvZm9yZWlnbj4sIHRoZSBzZW5zZSBpczogYXNzdW1pbmcgdGhlIHBvc3NpYmlsaXR5IG9mIGEKCQkJCQkJcGVyZmVjdCBzdGF0ZSwgd2l0aCBhbGwgaXRzIGZhY3RvcnMgdGhlIGJlc3Qgb2YgdGhlaXIga2luZCwgdGhpcyBtZWFucyB0aGF0CgkJCQkJCWFsbCB0aGUgcG9wdWxhdGlvbiB3aWxsIGJlIGdvb2QgY2l0aXplbnMsIG5vdCB0aGF0IHRoZXkgd2lsbCBhbGwgYmUgcGVyZmVjdAoJCQkJCQlzcGVjaW1lbnMgb2YgdGhlIGh1bWFuIHJhY2UsIGJlY2F1c2UgdGhlIHN0YXRlIG5lZWRzIGNpdGl6ZW5zIG9mIHRoZSB3b3JraW5nCgkJCQkJCWNsYXNzZXMsIGV0Yy4sIGFuZCB0aGVzZSBjYW5ub3QgaW4gdGhlIG5hdHVyZSBvZiB0aGluZ3MgYmUgcGVyZmVjdCBodW1hbgoJCQkJCQliZWluZ3M8L25vdGU+IGZvciBhIHN0YXRlIHRvIGNvbnNpc3QgZW50aXJlbHkgb2YgZ29vZCBtZW4sIGFuZCBpZiBpdCBpcwoJCQkJCW5lY2Vzc2FyeSBmb3IgZWFjaCBwZXJzb24gdG8gcGVyZm9ybSB3ZWxsIHRoZSB3b3JrIG9mIGhpcyBwb3NpdGlvbiwgYW5kIHRvIGRvCgkJCQkJdGhpcyBzcHJpbmdzIGZyb20gZ29vZG5lc3MsIHRoZW4gYmVjYXVzZSBpdCBpcyBpbXBvc3NpYmxlIGZvciBhbGwgdGhlIGNpdGl6ZW5zCgkJCQkJdG8gYmUgYWxpa2UsIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs614bywIM6z4b2wz4EgzrThvbvOvc6xz4TOv869IOG8kM6+IOG8gc+A4b2xzr3PhM+Jzr0gz4PPgM6/z4XOtM6x4b23z4nOvSDhvYTOvc+Ez4nOvQoJCQkJCQkJzrXhvLbOvc6xzrkgz4DhvbnOu865zr08L2ZvcmVpZ24+LCB0aGUgc2Vuc2UgaXM6IGFzc3VtaW5nIHRoZSBwb3NzaWJpbGl0eSBvZiBhCgkJCQkJCXBlcmZlY3Qgc3RhdGUsIHdpdGggYWxsIGl0cyBmYWN0b3JzIHRoZSBiZXN0IG9mIHRoZWlyIGtpbmQsIHRoaXMgbWVhbnMgdGhhdAoJCQkJCQlhbGwgdGhlIHBvcHVsYXRpb24gd2lsbCBiZSBnb29kIGNpdGl6ZW5zLCBub3QgdGhhdCB0aGV5IHdpbGwgYWxsIGJlIHBlcmZlY3QKCQkJCQkJc3BlY2ltZW5zIG9mIHRoZSBodW1hbiByYWNlLCBiZWNhdXNlIHRoZSBzdGF0ZSBuZWVkcyBjaXRpemVucyBvZiB0aGUgd29ya2luZwoJCQkJCQljbGFzc2VzLCBldGMuLCBhbmQgdGhlc2UgY2Fubm90IGluIHRoZSBuYXR1cmUgb2YgdGhpbmdzIGJlIHBlcmZlY3QgaHVtYW4KCQkJCQkJYmVpbmdzPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNzdhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1277a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnRoZSBnb29kbmVzcyBvZiBhIGdvb2QgY2l0aXplbiB3b3VsZCBub3QgYmUgb25lIGFuZCB0aGUgc2FtZSBhcwoJCQkJCXRoZSBnb29kbmVzcyBvZiBhIGdvb2QgbWFuOyBmb3IgYWxsIG91Z2h0IHRvIHBvc3Nlc3MgdGhlIGdvb2RuZXNzIG9mIHRoZSBnb29kCgkJCQkJY2l0aXplbiDvvIh0aGF0IGlzIGEgbmVjZXNzYXJ5IGNvbmRpdGlvbiBvZiB0aGUgc3RhdGUncyBiZWluZyB0aGUgYmVzdAoJCQkJCXBvc3NpYmxl77yJLCBidXQgaXQgaXMgaW1wb3NzaWJsZSB0aGF0IGFsbCBzaG91bGQgcG9zc2VzcyB0aGUgZ29vZG5lc3Mgb2YKCQkJCQlhIGdvb2QgbWFuLCBpZiBpdCBpcyBub3QgbmVjZXNzYXJ5IHRoYXQgYWxsIHRoZSBjaXRpemVucyBpbiBhIGdvb2Qgc3RhdGUgc2hvdWxkCgkJCQkJYmUgZ29vZCBtZW4uIDwvdHJhbnNsYXRpb24+"
translation['3.1277a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+QWdhaW4sIHNpbmNlIHRoZSBzdGF0ZQoJCQkJCWNvbnNpc3RzIG9mIHVubGlrZSBwZXJzb25z4oCUanVzdCBhcyBhbiBhbmltYWwg77yIdG8gdGFrZSB0aGlzCgkJCQkJaW5zdGFuY2UgZmlyc3TvvIkgY29uc2lzdHMgb2Ygc291bCBhbmQgYm9keSwgYW5kIGEgc291bCBvZiByZWFzb24gYW5kCgkJCQkJYXBwZXRpdGUsIGFuZCBhIGhvdXNlaG9sZCBvZiBodXNiYW5kIGFuZCB3aWZlIGFuZCBbb3duZXJzaGlwCgkJCQkJCWludm9sdmVzXTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGVzZSB3b3JkcyBpbiB0aGUKCQkJCQkJR3JlZWsgYXJlIHByb2JhYmx5IGFuIGludGVycG9sYXRpb24uPC9ub3RlPiBhIG1hc3RlciBhbmQgc2xhdmUsIGluIHRoZSBzYW1lCgkJCQkJbWFubmVyIGEgc3RhdGUgY29uc2lzdHMgb2YgYWxsIG9mIHRoZXNlIHBlcnNvbnMgYW5kIGFsc28gb2Ygb3RoZXJzIG9mIGRpZmZlcmVudAoJCQkJCWNsYXNzZXMgaW4gYWRkaXRpb24gdG8gdGhlc2Us4oCUaXQgbmVjZXNzYXJpbHkgZm9sbG93cyB0aGF0IHRoZSBnb29kbmVzcwoJCQkJCW9mIGFsbCB0aGUgY2l0aXplbnMgaXMgbm90IG9uZSBhbmQgdGhlIHNhbWUsIGp1c3QgYXMgYW1vbmcgZGFuY2VycyB0aGUgc2tpbGwgb2YKCQkJCQlhIGhlYWQgZGFuY2VyIGlzIG5vdCB0aGUgc2FtZSBhcyB0aGF0IG9mIGEgc3Vib3JkaW5hdGUgbGVhZGVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IGlzIGNsZWFyIHRoZW4gZnJvbSB0aGVzZSBjb25zaWRlcmF0aW9ucwoJCQkJCXRoYXQgdGhlIGdvb2RuZXNzIG9mIGEgZ29vZCBjaXRpemVuIGFuZCB0aGF0IG9mIGEgZ29vZCBtYW4gYXJlIG5vdCB0aGUgc2FtZSBpbgoJCQkJCWdlbmVyYWw7IGJ1dCB3aWxsIHRoZSBnb29kbmVzcyBvZiBhIGdvb2QgY2l0aXplbiBvZiBhIHBhcnRpY3VsYXIgc29ydCBiZSB0aGUKCQkJCQlzYW1lIGFzIHRoYXQgb2YgYSBnb29kIG1hbj8gTm93IHdlIHNheSB0aGF0IGEgZ29vZCBydWxlciBpcyB2aXJ0dW91cyBhbmQgd2lzZSwKCQkJCQlhbmQgdGhhdCBhIGNpdGl6ZW4gdGFraW5nIHBhcnQgaW4gcG9saXRpY3MgbXVzdCBiZSB3aXNlLiBBbHNvIHNvbWUgcGVvcGxlIHNheQoJCQkJCXRoYXQgZXZlbiB0aGUgZWR1Y2F0aW9uIG9mIGEgcnVsZXIgbXVzdCBiZSBkaWZmZXJlbnQsIGFzIGluZGVlZCB3ZSBzZWUgdGhhdCB0aGUKCQkJCQlzb25zIG9mIGtpbmdzIGFyZSBlZHVjYXRlZCBpbiBob3JzZW1hbnNoaXAgYW5kIG1pbGl0YXJ5IGV4ZXJjaXNlcywgYW5kIEV1cmlwaWRlcwoJCQkJCQlzYXlzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkZyYWdtZW50IDE2LCBmcm9tCgkJCQkJCQk8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BZW9sdXM8L3RpdGxlPi48L25vdGU+CgkJCQkJPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QWVvbHVzPC90aXRsZT4uPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iaWFtYmljIj5ObyBzdWJ0bGV0aWVzIGZvciBtZSwgYnV0IHdoYXQgdGhlIHN0YXRlPC9sPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPlJlcXVpcmV0aOKAlDwvbD4KCQkJCQk8L3F1b3RlPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJpYW1iaWMiPk5vIHN1YnRsZXRpZXMgZm9yIG1lLCBidXQgd2hhdCB0aGUgc3RhdGU8L2w+CgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UmVxdWlyZXRo4oCUPC9sPgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5pbXBseWluZyB0aGF0IHRoZXJlIGlzIGEKCQkJCQlzcGVjaWFsIGVkdWNhdGlvbiBmb3IgYSBydWxlci4gPC90cmFuc2xhdGlvbj4="
translation['3.1277b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi42IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kCgkJCQkJaWYgdGhlIGdvb2RuZXNzIG9mIGEgZ29vZCBydWxlciBpcyB0aGUgc2FtZSBhcyB0aGUgZ29vZG5lc3Mgb2YgYSBnb29kIG1hbiwgeWV0CgkJCQkJdGhlIHBlcnNvbiBydWxlZCBpcyBhbHNvIGEgY2l0aXplbiwgc28gdGhhdCB0aGUgZ29vZG5lc3Mgb2YgYSBjaXRpemVuIGluIGdlbmVyYWwKCQkJCQl3aWxsIG5vdCBiZSB0aGUgc2FtZSBhcyB0aGF0IG9mIGEgbWFuLCBhbHRob3VnaCB0aGF0IG9mIGEgcGFydGljdWxhciBjaXRpemVuCgkJCQkJd2lsbDsgZm9yIGdvb2RuZXNzIGFzIGEgcnVsZXIgaXMgbm90IHRoZSBzYW1lIGFzIGdvb2RuZXNzIGFzIGEgY2l0aXplbiwgYW5kIG5vCgkJCQkJZG91YnQgdGhpcyBpcyB0aGUgcmVhc29uIHdoeSBKYXNvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UeXJhbnQgb2YKCQkJCQkJUGhlcmFlIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDEzOTkiPlRoZXNzYWx5PC9wbGFjZU5hbWU+LCBhc3Nhc3NpbmF0ZWQKCQkJCQkJCTxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzA8L2RhdGU+IEIuQy48L25vdGU+IHNhaWQgdGhhdCB3aGVuIGhlIHdhcyBub3QKCQkJCQl0eXJhbnQgaGUgd2VudCBodW5ncnksIG1lYW5pbmcgdGhhdCBoZSBkaWQgbm90IGtub3cgdGhlIGFydCBvZiBiZWluZyBhIHByaXZhdGUKCQkJCQlwZXJzb24uIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDEzOTkiPlRoZXNzYWx5PC9wbGFjZU5hbWU+LCBhc3Nhc3NpbmF0ZWQKCQkJCQkJCTxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzA8L2RhdGU+IEIuQy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFub3RoZXIgcG9pbnQgaXMgdGhhdCB3ZQoJCQkJCXByYWlzZSB0aGUgYWJpbGl0eSB0byBydWxlIGFuZCB0byBiZSBydWxlZCwgYW5kIGl0IGlzIGRvdWJ0bGVzcyBoZWxkIHRoYXQgdGhlCgkJCQkJZ29vZG5lc3Mgb2YgYSBjaXRpemVuIGNvbnNpc3RzIGluIGFiaWxpdHkgYm90aCB0byBydWxlIGFuZCB0byBiZSBydWxlZCB3ZWxsLiBJZgoJCQkJCXRoZW4gd2UgbGF5IGl0IGRvd24gdGhhdCB0aGUgZ29vZG5lc3Mgb2YgdGhlIGdvb2QgbWFuIGlzIGRpc3BsYXllZCBpbiBydWxpbmcsCgkJCQkJd2hlcmVhcyB0aGF0IG9mIHRoZSBjaXRpemVuIGlzIHNob3duIGluIGJvdGggY2FwYWNpdGllcywgdGhlIHR3byBjYXBhY2l0aWVzCgkJCQkJY2Fubm90IGJlIGVxdWFsbHkgbGF1ZGFibGUuIFNpbmNlIHRoZXJlZm9yZSBib3RoIHZpZXdzIGFyZSBzb21ldGltZXMgYWNjZXB0ZWQsCgkJCQkJYW5kIGl0IGlzIHRob3VnaHQgdGhhdCB0aGUgcnVsZXIgYW5kIHRoZSBzdWJqZWN0IGRvIG5vdCBoYXZlIHRvIGxlYXJuIHRoZSBzYW1lCgkJCQkJYXJ0cyBidXQgdGhhdCB0aGUgY2l0aXplbiBtdXN0IGtub3cgYm90aCBhcnRzIGFuZCBzaGFyZSBpbiBib3RoIGNhcGFjaXRpZXMsIC4gLgoJCQkJCS4gLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Tb21lIHdvcmRzIHNlZW0gdG8gaGF2ZSBiZWVuIGxvc3QsCgkJCQkJCWNvbnZleWluZyDigJh3ZSBtdXN0IGNvbnNpZGVyIGhvdyB0aGlzIGR1YWwgZml0bmVzcyBjYW4gYmUKCQkJCQkJYWNxdWlyZWQs4oCZIG9yIHBvc3NpYmx5IGNvbnNpZGVyYWJseSBtb3JlLiBCdXQgdGhlIHRleHQgYXQgdGhlCgkJCQkJCWJlZ2lubmluZyBvZiB0aGUgc2VudGVuY2UgaXMgYWxzbyBjb3JydXB0Ljwvbm90ZT4gQW5kIGl0IG1heSBiZSBkaXNjZXJuZWQKCQkJCQlmcm9tIHRoZSBmb2xsb3dpbmcgaWxsdXN0cmF0aW9uOiBvbmUgZm9ybSBvZiBhdXRob3JpdHkgaXMgdGhhdCBvZiBhIG1hc3RlcjsKCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5ieSB0aGlzIHdlIG1lYW4gdGhlIGV4ZXJjaXNlIG9mCgkJCQkJYXV0aG9yaXR5IGluIHJlZ2FyZCB0byB0aGUgbmVjZXNzYXJ5IHdvcmsgb2YgdGhlIGhvdXNlLCB3aGljaCBpdCBpcyBub3QKCQkJCQluZWNlc3NhcnkgZm9yIHRoZSBtYXN0ZXIgdG8ga25vdyBob3cgdG8gZXhlY3V0ZSwgYnV0IHJhdGhlciBob3cgdG8gdXRpbGl6ZTsgdGhlCgkJCQkJb3RoZXIgY2FwYWNpdHksIEkgbWVhbiB0aGUgYWJpbGl0eSBhY3R1YWxseSB0byBzZXJ2ZSBpbiB0aGVzZSBtZW5pYWwgdGFza3MsIGlzCgkJCQkJaW5kZWVkIGEgc2xhdmUncyBxdWFsaXR5LiBCdXQgd2UgZGlzdGluZ3Vpc2ggc2V2ZXJhbCBraW5kcyBvZiBzbGF2ZSwgYXMgdGhlaXIKCQkJCQllbXBsb3ltZW50cyBhcmUgc2V2ZXJhbC4gT25lIGRlcGFydG1lbnQgYmVsb25ncyB0byB0aGUgaGFuZGljcmFmdHNtZW4sIHdobyBhcwoJCQkJCXRoZWlyIG5hbWUgaW1wbGllcyBhcmUgdGhlIHBlcnNvbnMgdGhhdCBsaXZlIGJ5IHRoZWlyIGhhbmRzLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI3N2IiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['3.1277b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmEgY2xhc3MKCQkJCQl0aGF0IGluY2x1ZGVzIHRoZSBtZWNoYW5pYyBhcnRpc2FuLiBIZW5jZSBpbiBzb21lIHN0YXRlcyBtYW51YWwgbGFib3JlcnMgd2VyZQoJCQkJCW5vdCBhZG1pdHRlZCB0byBvZmZpY2UgaW4gb2xkIHRpbWVzLCBiZWZvcmUgdGhlIGRldmVsb3BtZW50IG9mIGV4dHJlbWUKCQkJCQlkZW1vY3JhY3kuIDwvdHJhbnNsYXRpb24+"
translation['3.1277b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi45IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHRhc2tzIG9mIHRob3NlIHdobwoJCQkJCWFyZSB1bmRlciB0aGlzIGZvcm0gb2YgYXV0aG9yaXR5IHRoZXJlZm9yZSBpdCBpcyBub3QgcHJvcGVyIGZvciB0aGUgZ29vZCBtYW4gb3IKCQkJCQl0aGUgbWFuIGZpdCBmb3IgY2l0aXplbnNoaXAgb3IgdGhlIGdvb2QgY2l0aXplbiB0byBsZWFybiwgZXhjZXB0IGZvciBoaXMgb3duCgkJCQkJcHJpdmF0ZSB1c2Ugb2NjYXNpb25hbGx5IO+8iGZvciB0aGVuIGl0IGNlYXNlcyB0byBiZSBhIGNhc2Ugb2YgdGhlIG9uZQoJCQkJCXBhcnR5IGJlaW5nIG1hc3RlciBhbmQgdGhlIG90aGVyIHNsYXZl77yJLiBCdXQgdGhlcmUgZXhpc3RzIGEgZm9ybSBvZgoJCQkJCWF1dGhvcml0eSBieSB3aGljaCBhIG1hbiBydWxlcyBvdmVyIHBlcnNvbnMgb2YgdGhlIHNhbWUgcmFjZSBhcyBoaW1zZWxmLCBhbmQKCQkJCQlmcmVlIG1lbiDvvIhmb3IgdGhhdCBpcyBob3cgd2UgZGVzY3JpYmUgcG9saXRpY2FsIGF1dGhvcml0ee+8iSwKCQkJCQlhbmQgdGhpcyB0aGUgcnVsZXIgc2hvdWxkIGxlYXJuIGJ5IGJlaW5nIHJ1bGVkLCBqdXN0IGFzIGEgbWFuIHNob3VsZCBjb21tYW5kCgkJCQkJY2F2YWxyeSBhZnRlciBoYXZpbmcgc2VydmVkIGFzIGEgdHJvb3BlciwgY29tbWFuZCBhIHJlZ2ltZW50IGFmdGVyIGhhdmluZyBzZXJ2ZWQKCQkJCQlpbiBhIHJlZ2ltZW50IGFuZCBiZWVuIGluIGNvbW1hbmQgb2YgYSBjb21wYW55IGFuZCBvZiBhIHBsYXRvb24uIEhlbmNlIHRoZXJlIGlzCgkJCQkJbXVjaCB0cnV0aCBpbiB0aGUgc2F5aW5nIHRoYXQgaXQgaXMgaW1wb3NzaWJsZSB0byBiZWNvbWUgYSBnb29kIHJ1bGVyIHdpdGhvdXQKCQkJCQloYXZpbmcgYmVlbiBhIHN1YmplY3QuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhbHRob3VnaAoJCQkJCXRoZSBnb29kbmVzcyBvZiBhIHJ1bGVyIGFuZCB0aGF0IG9mIGEgc3ViamVjdCBhcmUgZGlmZmVyZW50LCB0aGUgZ29vZCBjaXRpemVuCgkJCQkJbXVzdCBoYXZlIHRoZSBrbm93bGVkZ2UgYW5kIHRoZSBhYmlsaXR5IGJvdGggdG8gYmUgcnVsZWQgYW5kIHRvIHJ1bGUsIGFuZCB0aGUKCQkJCQltZXJpdCBvZiB0aGUgZ29vZCBjaXRpemVuIGNvbnNpc3RzIGluIGhhdmluZyBhIGtub3dsZWRnZSBvZiB0aGUgZ292ZXJubWVudCBvZgoJCQkJCWZyZWUgbWVuIG9uIGJvdGggc2lkZXMuIEFuZCB0aGVyZWZvcmUgYm90aCB0aGVzZSB2aXJ0dWVzIGFyZSBjaGFyYWN0ZXJpc3RpYyBvZiBhCgkJCQkJZ29vZCBtYW4sIGV2ZW4gaWYgdGVtcGVyYW5jZSBhbmQganVzdGljZSBpbiBhIHJ1bGVyIGFyZSBvZiBhIGRpZmZlcmVudCBraW5kIGZyb20KCQkJCQl0ZW1wZXJhbmNlIGFuZCBqdXN0aWNlIGluIGEgc3ViamVjdDsgZm9yIGNsZWFybHkgYSBnb29kIG1hbidzIHZpcnR1ZSwgZm9yCgkJCQkJZXhhbXBsZSBoaXMganVzdGljZSwgd2lsbCBub3QgYmUgb25lIGFuZCB0aGUgc2FtZSB3aGVuIGhlIGlzIHVuZGVyIGdvdmVybm1lbnQKCQkJCQlhbmQgd2hlbiBoZSBpcyBmcmVlLCBidXQgaXQgd2lsbCBiZSBvZiBkaWZmZXJlbnQga2luZHMsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm9uZSBmaXR0aW5nIGhpbSB0byBydWxlIGFuZCBvbmUgdG8gYmUgcnVsZWQsIGp1c3QKCQkJCQlhcyB0ZW1wZXJhbmNlIGFuZCBjb3VyYWdlIGFyZSBkaWZmZXJlbnQgaW4gYSBtYW4gYW5kIGluIGEgd29tYW4g77yIZm9yIGEKCQkJCQltYW4gd291bGQgYmUgdGhvdWdodCBhIGNvd2FyZCBpZiBoZSB3ZXJlIG9ubHkgYXMgYnJhdmUgYXMgYSBicmF2ZSB3b21hbiwgYW5kIGEKCQkJCQl3b21hbiBhIGNoYXR0ZXJlciBpZiBzaGUgd2VyZSBvbmx5IGFzIG1vZGVzdCBhcyBhIGdvb2QgbWFuOyBzaW5jZSBldmVuIHRoZQoJCQkJCWhvdXNlaG9sZCBmdW5jdGlvbnMgb2YgYSBtYW4gYW5kIG9mIGEgd29tYW4gYXJlIGRpZmZlcmVudOKAlGhpcyBidXNpbmVzcwoJCQkJCWlzIHRvIGdldCBhbmQgaGVycyB0byBrZWVw77yJLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1278a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBwcmFjdGljYWwgd2lzZG9tIGFsb25lIG9mIHRoZSB2aXJ0dWVzIGlzIGEgdmlydHVlCgkJCQkJcGVjdWxpYXIgdG8gYSBydWxlcjsgZm9yIHRoZSBvdGhlciB2aXJ0dWVzIHNlZW0gdG8gYmUgbmVjZXNzYXJ5IGFsaWtlIGZvciBib3RoCgkJCQkJc3ViamVjdHMgYW5kIHJ1bGVycyB0byBwb3NzZXNzLCBidXQgd2lzZG9tIGFzc3VyZWRseSBpcyBub3QgYSBzdWJqZWN0J3MgdmlydHVlLAoJCQkJCWJ1dCBvbmx5IHJpZ2h0IG9waW5pb246IHRoZSBzdWJqZWN0IGNvcnJlc3BvbmRzIHRvIHRoZSBtYW4gd2hvIG1ha2VzIGZsdXRlcyBhbmQKCQkJCQl0aGUgcnVsZXIgdG8gdGhlIGZsdXRlLXBsYXllciB3aG8gdXNlcyB0aGVtLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUKCQkJCQlxdWVzdGlvbiB3aGV0aGVyIHRoZSBnb29kbmVzcyBvZiBhIGdvb2QgbWFuIGlzIHRoZSBzYW1lIGFzIHRoYXQgb2YgYSBnb29kCgkJCQkJY2l0aXplbiBvciBkaWZmZXJlbnQsIGFuZCBob3cgdGhleSBhcmUgdGhlIHNhbWUgYW5kIGhvdyBkaWZmZXJlbnQsIGlzIGNsZWFyIGZyb20KCQkJCQl0aGVzZSBjb25zaWRlcmF0aW9ucy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgb25lIG9mIHRoZSBkaWZmaWN1bHRpZXMgYXMgdG8gd2hhdCBjb25zdGl0dXRlcyBhCgkJCQkJY2l0aXplbiBpcyBzdGlsbCBsZWZ0LiBJcyBpdCB0cnVseSB0aGUgY2FzZSB0aGF0IGEgY2l0aXplbiBpcyBhIHBlcnNvbiB3aG8gaGFzCgkJCQkJdGhlIHJpZ2h0IHRvIHNoYXJlIG9mZmljZSBpbiB0aGUgZ292ZXJubWVudCwgb3IgYXJlIHRoZSB3b3JraW5nIGNsYXNzZXMgYWxzbyB0bwoJCQkJCWJlIGNvdW50ZWQgY2l0aXplbnM/IElmIHRoZXNlIHBlcnNvbnMgYWxzbyBhcmUgdG8gYmUgY291bnRlZCB3aG8gaGF2ZSBubyBzaGFyZQoJCQkJCWluIG9mZmljZXMsIGl0IGlzIG5vdCBwb3NzaWJsZSBmb3IgZXZlcnkgY2l0aXplbiB0byBwb3NzZXNzIHRoZSBjaXRpemVuJ3MKCQkJCQl2aXJ0dWU7IGZvciB0aGUgdHJ1ZSBjaXRpemVuIGlzIHRoZSBtYW4gY2FwYWJsZSBvZiBnb3Zlcm5pbmcuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yIHBlcmhhcHMg4oCYZm9yIHRoZSB3b3JraW5nLW1hbiBpcyBhCgkJCQkJCWNpdGl6ZW4u4oCZIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6/4b2Xz4TOv8+CIM6z4b2wz4Egz4DOv8674b23z4TOt8+CPC9mb3JlaWduPi4KCQkJCQkJVGhlIHRyYW5zbGF0aW9uIHRha2VzIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Azr/Ou+G9t8+EzrfPgjwvZm9yZWlnbj4gYXMgc3ViamVjdAoJCQkJCQlhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/hvZfPhM6/z4I8L2ZvcmVpZ24+IGFzIHByZWRpY2F0ZSDvvIhtZWFuaW5nCgkJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJTPh8+Jzr0gz4ThvbTOvSDPhM6/zrnOseG9u8+EzrfOvSDhvIDPgc61z4ThvbXOvTwvZm9yZWlnbj4sCgkJCQkJCXBvc3Nlc3NpbmcgY2FwYWNpdHkgdG8gZ292ZXJu77yJLiBCdXQgcG9zc2libHkgdGhlIHByZWRpY2F0ZSBpcwoJCQkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DOv8674b23z4TOt8+CPC9mb3JlaWduPiBhbmQgdGhlIHN1YmplY3QgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/hvZfPhM6/z4I8L2ZvcmVpZ24+LCB3aGljaCB0aGVuIHN0YW5kcyBmb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2BIM6y4b2xzr3Osc+Fz4POv8+CPC9mb3JlaWduPjsgaWYgc28sIHRoZSB3aG9sZSBzZW50ZW5jZSBtZWFucwoJCQkJCQl0aGF0IGlmIHRoZSBub24tb2ZmaWNpYWwgY2xhc3NlcyBhcmUgY2l0aXplbnMsIG5vdCBhbGwgdGhlIGNpdGl6ZW5zIHdpbGwKCQkJCQkJcG9zc2VzcyBjaXZpYyB2aXJ0dWUg77yId2hpY2ggaXMgY2FwYWNpdHkgdG8gZ292ZXJu77yJLCBmb3IKCQkJCQkJdGhlIHdvcmtpbmctbWFuIHdpbGwgYmUgYSBjaXRpemVuIO+8iGFuZCBoZSBpcyBub3QgY2FwYWJsZSBvZgoJCQkJCQlnb3Zlcm5pbmfvvIkuPC9ub3RlPiBJZiBvbiB0aGUgb3RoZXIgaGFuZCBubyBvbmUgb2YgdGhlIHdvcmtpbmcKCQkJCQlwZW9wbGUgaXMgYSBjaXRpemVuLCBpbiB3aGF0IGNsYXNzIGFyZSB0aGUgdmFyaW91cyB3b3JrZXJzIHRvIGJlIHJhbmtlZD8gZm9yCgkJCQkJdGhleSBhcmUgbmVpdGhlciByZXNpZGVudCBhbGllbnMgbm9yIGZvcmVpZ25lcnMuIE9yIHNoYWxsIHdlIHNheSB0aGF0IHNvIGZhciBhcwoJCQkJCXRoYXQgYXJndW1lbnQgZ29lcyBubyBpbmNvbnNpc3RlbmN5IHJlc3VsdHM/IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6/4b2Xz4TOv8+CIM6z4b2wz4Egz4DOv8674b23z4TOt8+CPC9mb3JlaWduPi4KCQkJCQkJVGhlIHRyYW5zbGF0aW9uIHRha2VzIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Azr/Ou+G9t8+EzrfPgjwvZm9yZWlnbj4gYXMgc3ViamVjdAoJCQkJCQlhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/hvZfPhM6/z4I8L2ZvcmVpZ24+IGFzIHByZWRpY2F0ZSDvvIhtZWFuaW5nCgkJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJTPh8+Jzr0gz4ThvbTOvSDPhM6/zrnOseG9u8+EzrfOvSDhvIDPgc61z4ThvbXOvTwvZm9yZWlnbj4sCgkJCQkJCXBvc3Nlc3NpbmcgY2FwYWNpdHkgdG8gZ292ZXJu77yJLiBCdXQgcG9zc2libHkgdGhlIHByZWRpY2F0ZSBpcwoJCQkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DOv8674b23z4TOt8+CPC9mb3JlaWduPiBhbmQgdGhlIHN1YmplY3QgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/hvZfPhM6/z4I8L2ZvcmVpZ24+LCB3aGljaCB0aGVuIHN0YW5kcyBmb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2BIM6y4b2xzr3Osc+Fz4POv8+CPC9mb3JlaWduPjsgaWYgc28sIHRoZSB3aG9sZSBzZW50ZW5jZSBtZWFucwoJCQkJCQl0aGF0IGlmIHRoZSBub24tb2ZmaWNpYWwgY2xhc3NlcyBhcmUgY2l0aXplbnMsIG5vdCBhbGwgdGhlIGNpdGl6ZW5zIHdpbGwKCQkJCQkJcG9zc2VzcyBjaXZpYyB2aXJ0dWUg77yId2hpY2ggaXMgY2FwYWNpdHkgdG8gZ292ZXJu77yJLCBmb3IKCQkJCQkJdGhlIHdvcmtpbmctbWFuIHdpbGwgYmUgYSBjaXRpemVuIO+8iGFuZCBoZSBpcyBub3QgY2FwYWJsZSBvZgoJCQkJCQlnb3Zlcm5pbmfvvIkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNzhhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1278a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBzbGF2ZXMgYWxzbyBhcmUgbm90IGluIG9uZQoJCQkJCW9mIHRoZSBjbGFzc2VzIG1lbnRpb25lZCwgbm9yIGFyZSBmcmVlZG1lbi4gPC90cmFuc2xhdGlvbj4="
translation['3.1278a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIGl0IGlzIHRydWUgdGhhdCBub3QgYWxsIHRoZSBwZXJzb25zIGluZGlzcGVuc2FibGUgZm9yCgkJCQkJdGhlIGV4aXN0ZW5jZSBvZiBhIHN0YXRlIGFyZSB0byBiZSBkZWVtZWQgY2l0aXplbnMsIHNpbmNlIGV2ZW4gdGhlIHNvbnMgb2YKCQkJCQljaXRpemVucyBhcmUgbm90IGNpdGl6ZW5zIGluIHRoZSBzYW1lIHNlbnNlIGFzIHRoZSBhZHVsdHM6IHRoZSBsYXR0ZXIgYXJlCgkJCQkJY2l0aXplbnMgaW4gdGhlIGZ1bGwgc2Vuc2UsIHRoZSBmb3JtZXIgb25seSBieSBwcmVzdW1wdGlvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Pciwgd2l0aCBDYXNhdWJvbidzIHByb2JhYmxlIGNvcnJlY3Rpb24gb2YgdGhlIEdyZWVrLAoJCQkJCQnigJhvbmx5IHdpdGggYSBxdWFsaWZpY2F0aW9uLuKAmTwvbm90ZT7igJR0aGV5IGFyZQoJCQkJCWNpdGl6ZW5zLCBidXQgaW5jb21wbGV0ZSBvbmVzLiBJbiBhbmNpZW50IHRpbWVzIGluIGZhY3QgdGhlIGFydGlzYW4gY2xhc3MgaW4KCQkJCQlzb21lIHN0YXRlcyBjb25zaXN0ZWQgb2Ygc2xhdmVzIG9yIGFsaWVucywgb3dpbmcgdG8gd2hpY2ggdGhlIGdyZWF0IG1hc3Mgb2YKCQkJCQlhcnRpc2FucyBhcmUgc28gZXZlbiBub3c7IGFuZCB0aGUgYmVzdC1vcmRlcmVkIHN0YXRlIHdpbGwgbm90IG1ha2UgYW4gYXJ0aXNhbiBhCgkJCQkJY2l0aXplbi4gV2hpbGUgaWYgZXZlbiB0aGUgYXJ0aXNhbiBpcyBhIGNpdGl6ZW4sIHRoZW4gd2hhdCB3ZSBzYWlkIHRvIGJlIHRoZQoJCQkJCWNpdGl6ZW4ncyB2aXJ0dWUgbXVzdCBub3QgYmUgc2FpZCB0byBiZWxvbmcgdG8gZXZlcnkgY2l0aXplbiwgbm9yIG1lcmVseSBiZQoJCQkJCWRlZmluZWQgYXMgdGhlIHZpcnR1ZSBvZiBhIGZyZWUgbWFuLCBidXQgd2lsbCBvbmx5IGJlbG9uZyB0byB0aG9zZSB3aG8gYXJlCgkJCQkJcmVsZWFzZWQgZnJvbSBtZW5pYWwgb2NjdXBhdGlvbnMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW1vbmcgbWVuaWFsIG9jY3VwYXRpb25zIHRob3NlIHdobyByZW5kZXIgc3VjaCBzZXJ2aWNlcyB0byBhbiBpbmRpdmlkdWFsIGFyZQoJCQkJCXNsYXZlcywgYW5kIHRob3NlIHdobyBkbyBzbyBmb3IgdGhlIGNvbW11bml0eSBhcmUgYXJ0aXNhbnMgYW5kIGhpcmVkIGxhYm9yZXJzLgoJCQkJCVRoZSBzdGF0ZSBvZiB0aGUgY2FzZSBhYm91dCB0aGVtIHdpbGwgYmUgbWFuaWZlc3QgZnJvbSB3aGF0IGZvbGxvd3Mgd2hlbiB3ZQoJCQkJCWNvbnNpZGVyIGl0IGEgbGl0dGxlIGZ1cnRoZXJbLCBmb3Igd2hhdCBoYXMgYmVlbiBzYWlkIHdoZW4gbWFkZSBrbm93bgoJCQkJCWl0c2VsZiBtYWtlcyBpdCBjbGVhcl0uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZQoJCQkJCQlpbGwtZXhwcmVzc2VkIGNsYXVzZSDigJhmb3Igd2hhdOKAlGNsZWFy4oCZIHNlZW1zCgkJCQkJCWFsbW9zdCBjZXJ0YWlubHkgdG8gYmUgYW4gaW50ZXJwb2xhdGlvbi48L25vdGU+IEFzIHRoZXJlIGFyZSBzZXZlcmFsIGZvcm1zCgkJCQkJb2YgY29uc3RpdHV0aW9uLCBpdCBmb2xsb3dzIHRoYXQgdGhlcmUgYXJlIHNldmVyYWwga2luZHMgb2YgY2l0aXplbiwgYW5kCgkJCQkJZXNwZWNpYWxseSBvZiB0aGUgY2l0aXplbiBpbiBhIHN1YmplY3QgcG9zaXRpb247IGhlbmNlIHVuZGVyIG9uZSBmb3JtIG9mCgkJCQkJY29uc3RpdHV0aW9uIGNpdGl6ZW5zaGlwIHdpbGwgbmVjZXNzYXJpbHkgZXh0ZW5kIHRvIHRoZSBhcnRpc2FuIGFuZCB0aGUgaGlyZWQKCQkJCQlsYWJvcmVyLCB3aGlsZSB1bmRlciBvdGhlciBmb3JtcyB0aGlzIGlzIGltcG9zc2libGUsIGZvciBpbnN0YW5jZSBpbiBhbnkKCQkJCQljb25zdGl0dXRpb24gdGhhdCBpcyBvZiB0aGUgZm9ybSBlbnRpdGxlZCBhcmlzdG9jcmF0aWMgYW5kIGluIHdoaWNoPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRoZSBob25vcnMgYXJlIGJlc3Rvd2VkIGFjY29yZGluZyB0bwoJCQkJCWdvb2RuZXNzIGFuZCB0byBtZXJpdCwgc2luY2UgYSBwZXJzb24gbGl2aW5nIGEgbGlmZSBvZiBtYW51YWwgdG9pbCBvciBhcyBhIGhpcmVkCgkJCQkJbGFib3JlciBjYW5ub3QgcHJhY3Rpc2UgdGhlIHB1cnN1aXRzIGluIHdoaWNoIGdvb2RuZXNzIGlzIGV4ZXJjaXNlZC4gPC90cmFuc2xhdGlvbj4="
translation['3.1278b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy40IiB1bml0PSJMb2ViIGNoYXAiIC8+SW4gb2xpZ2FyY2hpZXMgb24gdGhlIG90aGVyIGhhbmQsIHRob3VnaCBpdAoJCQkJCWlzIGltcG9zc2libGUgZm9yIGEgaGlyZWQgbGFib3JlciB0byBiZSBhIGNpdGl6ZW4g77yIc2luY2UgYWRtaXNzaW9uIHRvCgkJCQkJb2ZmaWNlIG9mIHZhcmlvdXMgZ3JhZGVzIGlzIGJhc2VkIG9uIGhpZ2ggcHJvcGVydHktYXNzZXNzbWVudHPvvIksIGl0IGlzCgkJCQkJcG9zc2libGUgZm9yIGFuIGFydGlzYW47IGZvciBldmVuIHRoZSBnZW5lcmFsIG1hc3Mgb2YgdGhlIGNyYWZ0c21lbiBhcmUgcmljaC4gQXQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUaGViZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRoZWJlcyI+VGhlYmVzPC9wbGFjZU5hbWU+IHRoZXJlIHdhcyBhIGxhdyB0aGF0IG5vCgkJCQkJb25lIHdobyBoYWQgbm90IGtlcHQgb3V0IG9mIHRyYWRlIGZvciB0aGUgbGFzdCB0ZW4geWVhcnMgbWlnaHQgYmUgYWRtaXR0ZWQgdG8KCQkJCQlvZmZpY2UuIEJ1dCB1bmRlciBtYW55IGNvbnN0aXR1dGlvbnMgdGhlIGxhdyBkcmF3cyByZWNydWl0cyBldmVuIGZyb20KCQkJCQlmb3JlaWduZXJzOyBmb3IgaW4gc29tZSBkZW1vY3JhY2llcyB0aGUgc29uIG9mIGEgY2l0aXplbi1tb3RoZXIgaXMgYSBjaXRpemVuLAoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCB0aGUgc2FtZSBydWxlIGhvbGRzIGdvb2QgYXMKCQkJCQl0byBiYXNlLWJvcm4gc29ucyBpbiBtYW55IHBsYWNlcy4gTmV2ZXJ0aGVsZXNzLCBpbmFzbXVjaCBhcyBzdWNoIHBlcnNvbnMgYXJlCgkJCQkJYWRvcHRlZCBhcyBjaXRpemVucyBvd2luZyB0byBhIGxhY2sgb2YgY2l0aXplbnMgb2YgbGVnaXRpbWF0ZSBiaXJ0aAoJCQkJCe+8iGZvciBsZWdpc2xhdGlvbiBvZiB0aGlzIGtpbmQgaXMgcmVzb3J0ZWQgdG8gYmVjYXVzZSBvZgoJCQkJCXVuZGVyLXBvcHVsYXRpb27vvIksIHdoZW4gYSBzdGF0ZSBiZWNvbWVzIHdlbGwgb2ZmIGZvciBudW1iZXJzIGl0CgkJCQkJZ3JhZHVhbGx5IGRpdmVzdHMgaXRzZWxmIGZpcnN0IG9mIHRoZSBzb25zIG9mIGEgc2xhdmUgZmF0aGVyIG9yIG1vdGhlciwgdGhlbiBvZgoJCQkJCXRob3NlIHdob3NlIG1vdGhlcnMgb25seSB3ZXJlIGNpdGl6ZW5zLCBhbmQgZmluYWxseSBvbmx5IGFsbG93cyBjaXRpemVuc2hpcCB0bwoJCQkJCXRoZSBjaGlsZHJlbiBvZiBjaXRpemVucyBvbiBib3RoIHNpZGVzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXNlIGZhY3RzIHRoZW4gc2hvdyB0aGF0IHRoZXJlIGFyZSB2YXJpb3VzIGtpbmRzIG9mCgkJCQkJY2l0aXplbiwgYW5kIHRoYXQgYSBjaXRpemVuIGluIHRoZSBmdWxsZXN0IHNlbnNlIG1lYW5zIHRoZSBtYW4gd2hvIHNoYXJlcyBpbiB0aGUKCQkJCQlob25vcnMgb2YgdGhlIHN0YXRlLCBhcyBpcyBpbXBsaWVkIGluIHRoZSB2ZXJzZSBvZiBIb21lcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiA5LjY0OCIgdmFsaWQ9InllcyI+SG9tLiBJbC4gOS42NDg8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAxNi41OSIgdmFsaWQ9InllcyI+SG9tLiBJbC4gMTYuNTk8L2JpYmw+PC9ub3RlPjogPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gOS42NDgiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDkuNjQ4PC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gMTYuNTkiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDE2LjU5PC9iaWJsPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5MaWtlIHRvIHNvbWUgYWxpZW4gc2V0dGxlciB3aXRob3V0IGhvbm9yLOKAlDwvbD4KCQkJCQk8L3F1b3RlPiBzaW5jZSBhIG5hdGl2ZSBub3QgYWRtaXR0ZWQgdG8gYSBzaGFyZSBpbiB0aGUgcHVibGljIGhvbm9ycyBpcyBsaWtlIGFuCgkJCQkJYWxpZW4gZG9taWNpbGVkIGluIHRoZSBsYW5kLiBCdXQgaW4gc29tZSBwbGFjZXMgdGhpcyBleGNsdXNpb24gaXMgZGlzZ3Vpc2VkLCBmb3IKCQkJCQl0aGUgcHVycG9zZSBvZiBkZWNlaXZpbmcgdGhvc2Ugd2hvIGFyZSBhIHBhcnQgb2YgdGhlIHBvcHVsYXRpb24uPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5MaWtlIHRvIHNvbWUgYWxpZW4gc2V0dGxlciB3aXRob3V0IGhvbm9yLOKAlDwvbD4KCQkJCQk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIE1TUy4gZ2l2ZSDigJhCdXQgd2hlcmUgc3VjaAoJCQkJCQlleGNsdXNpb24gaXMgZGlzZ3Vpc2VkLCBpdCDvvIh0aGlzIGNvbmNlYWxtZW5077yJIGlzIGZvciB0aGUKCQkJCQkJcHVycG9zZSBvZiBkZWNlaXZpbmfigJkgZXRjLjwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGFuc3dlciB0aGVyZWZvcmUgdG8gdGhlIHF1ZXN0aW9uLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI3OGIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['3.1278b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPklzIHRoZQoJCQkJCWdvb2RuZXNzIHRoYXQgbWFrZXMgYSBnb29kIG1hbiB0byBiZSBkZWVtZWQgdGhlIHNhbWUgYXMgdGhhdCB3aGljaCBtYWtlcyBhCgkJCQkJd29ydGh5IGNpdGl6ZW4sIG9yIGRpZmZlcmVudD8gaXMgbm93IGNsZWFyIGZyb20gd2hhdCBoYXMgYmVlbiBzYWlkIGluIG9uZSBmb3JtCgkJCQkJb2Ygc3RhdGUgdGhlIGdvb2QgbWFuIGFuZCB0aGUgZ29vZCBjaXRpemVuIGFyZSB0aGUgc2FtZSwgYnV0IGluIGFub3RoZXIgdGhleSBhcmUKCQkJCQlkaWZmZXJlbnQsIGFuZCBhbHNvIGluIHRoZSBmb3JtZXIgY2FzZSBpdCBpcyBub3QgZXZlcnkgY2l0aXplbiBidXQgb25seSB0aGUKCQkJCQlzdGF0ZXNtYW4sIHRoZSBtYW4gd2hvIGNvbnRyb2xzIG9yIGlzIGNvbXBldGVudCB0byBjb250cm9sLCBzaW5nbHkgb3Igd2l0aAoJCQkJCWNvbGxlYWd1ZXMsIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgY29tbW9ud2VhbHRoLCB0aGF0IGlzIGVzc2VudGlhbGx5IGFsc28gYQoJCQkJCWdvb2QgbWFuLjwvdHJhbnNsYXRpb24+"
translation['3.1278b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBzaW5jZSB0aGVzZSBwb2ludHMgaGF2ZSBiZWVuIGRldGVybWluZWQsIHRoZSBuZXh0IHF1ZXN0aW9uCgkJCQkJdG8gYmUgY29uc2lkZXJlZCBpcyB3aGV0aGVyIHdlIGFyZSB0byBsYXkgaXQgZG93biB0aGF0IHRoZXJlIGlzIG9ubHkgb25lIGZvcm0gb2YKCQkJCQljb25zdGl0dXRpb24gb3Igc2V2ZXJhbCwgYW5kIGlmIHNldmVyYWwsIHdoYXQgdGhleSBhcmUgYW5kIGhvdyBtYW55IGFuZCB3aGF0IGFyZQoJCQkJCXRoZSBkaWZmZXJlbmNlcyBiZXR3ZWVuIHRoZW0uIE5vdyBhIGNvbnN0aXR1dGlvbiBpcyB0aGUgb3JkZXJpbmcgb2YgYSBzdGF0ZSBpbgoJCQkJCXJlc3BlY3Qgb2YgaXRzIHZhcmlvdXMgbWFnaXN0cmFjaWVzLCBhbmQgZXNwZWNpYWxseSB0aGUgbWFnaXN0cmFjeSB0aGF0IGlzCgkJCQkJc3VwcmVtZSBvdmVyIGFsbCBtYXR0ZXJzLiBGb3IgdGhlIGdvdmVybm1lbnQgaXMgZXZlcnl3aGVyZSBzdXByZW1lIG92ZXIgdGhlCgkJCQkJc3RhdGUgYW5kIHRoZSBjb25zdGl0dXRpb24gaXMgdGhlIGdvdmVybm1lbnQuIEkgbWVhbiB0aGF0IGluIGRlbW9jcmF0aWMgc3RhdGVzCgkJCQkJZm9yIGV4YW1wbGUgdGhlIHBlb3BsZSBhcmUgc3VwcmVtZSwgYnV0IGluIG9saWdhcmNoaWVzIG9uIHRoZSBjb250cmFyeSB0aGUgZmV3CgkJCQkJYXJlOyBhbmQgd2Ugc2F5IHRoYXQgdGhleSBoYXZlIGEgZGlmZmVyZW50IGNvbnN0aXR1dGlvbi4gQW5kIHdlIHNoYWxsIHVzZSB0aGUKCQkJCQlzYW1lIGxhbmd1YWdlIGFib3V0IHRoZSBvdGhlciBmb3JtcyBvZiBnb3Zlcm5tZW50IGFsc28uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2UgaGF2ZSB0aGVyZWZvcmUgdG8KCQkJCQlkZXRlcm1pbmUgZmlyc3QgdGhlIGZ1bmRhbWVudGFsIHBvaW50cywgd2hhdCBpcyB0aGUgb2JqZWN0IGZvciB3aGljaCBhIHN0YXRlCgkJCQkJZXhpc3RzIGFuZCBob3cgbWFueSBkaWZmZXJlbnQga2luZHMgb2Ygc3lzdGVtIHRoZXJlIGFyZSBmb3IgZ292ZXJuaW5nIG1hbmtpbmQKCQkJCQlhbmQgZm9yIGNvbnRyb2xsaW5nIHRoZSBjb21tb24gbGlmZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGl0IGhhcwoJCQkJCWJlZW4gc2FpZCBpbiBvdXIgZmlyc3QgZGlzY291cnNlcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+MTI1M2EgMQoJCQkJCQlmZi48L25vdGU+IGluIHdoaWNoIHdlIGRldGVybWluZWQgdGhlIHByaW5jaXBsZXMgY29uY2VybmluZyBob3VzZWhvbGQKCQkJCQltYW5hZ2VtZW50IGFuZCB0aGUgY29udHJvbCBvZiBzbGF2ZXMsIHRoYXQgbWFuIGlzIGJ5IG5hdHVyZSBhIHBvbGl0aWNhbAoJCQkJCQlhbmltYWw7PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZCBzbyBldmVuIHdoZW4gbWVuIGhhdmUKCQkJCQlubyBuZWVkIG9mIGFzc2lzdGFuY2UgZnJvbSBlYWNoIG90aGVyIHRoZXkgbm9uZSB0aGUgbGVzcyBkZXNpcmUgdG8gbGl2ZQoJCQkJCXRvZ2V0aGVyLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1279a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QXQgdGhlIHNhbWUgdGltZSB0aGV5IGFyZQoJCQkJCWFsc28gYnJvdWdodCB0b2dldGhlciBieSBjb21tb24gaW50ZXJlc3QsIHNvIGZhciBhcyBlYWNoIGFjaGlldmVzIGEgc2hhcmUgb2YgdGhlCgkJCQkJZ29vZCBsaWZlLiBUaGUgZ29vZCBsaWZlIHRoZW4gaXMgdGhlIGNoaWVmIGFpbSBvZiBzb2NpZXR5LCBib3RoIGNvbGxlY3RpdmVseSBmb3IKCQkJCQlhbGwgaXRzIG1lbWJlcnMgYW5kIGluZGl2aWR1YWxseTsgYnV0IHRoZXkgYWxzbyBjb21lIHRvZ2V0aGVyIGFuZCBtYWludGFpbiB0aGUKCQkJCQlwb2xpdGljYWwgcGFydG5lcnNoaXAgZm9yIHRoZSBzYWtlIG9mIGxpZmUgbWVyZWx5LCBmb3IgZG91YnRsZXNzIHRoZXJlIGlzIHNvbWUKCQkJCQllbGVtZW50IG9mIHZhbHVlIGNvbnRhaW5lZCBldmVuIGluIHRoZSBtZXJlIHN0YXRlIG9mIGJlaW5nIGFsaXZlLCBwcm92aWRlZCB0aGF0CgkJCQkJdGhlcmUgaXMgbm90IHRvbyBncmVhdCBhbiBleGNlc3Mgb24gdGhlIHNpZGUgb2YgdGhlIGhhcmRzaGlwcyBvZiBsaWZlLCBhbmQgaXQgaXMKCQkJCQljbGVhciB0aGF0IHRoZSBtYXNzIG9mIG1hbmtpbmQgY2xpbmcgdG8gbGlmZSBhdCB0aGUgY29zdCBvZiBlbmR1cmluZyBtdWNoCgkJCQkJc3VmZmVyaW5nLCB3aGljaCBzaG93cyB0aGF0IGxpZmUgY29udGFpbnMgc29tZSBtZWFzdXJlIG9mIHdlbGwtYmVpbmcgYW5kIG9mCgkJCQkJc3dlZXRuZXNzIGluIGl0cyBlc3NlbnRpYWwgbmF0dXJlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC40IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBhZ2FpbiwgdGhlIHNldmVyYWwgcmVjb2duaXplZCB2YXJpZXRpZXMKCQkJCQlvZiBnb3Zlcm5tZW50IGNhbiBlYXNpbHkgYmUgZGVmaW5lZDsgaW4gZmFjdCB3ZSBmcmVxdWVudGx5IGRpc2N1c3MgdGhlbSBpbiBvdXIKCQkJCQlleHRlcm5hbCBkaXNjb3Vyc2VzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5NZW50aW9uZWQgYXQgMTMyM2EgMjIKCQkJCQkJ77yIYW5kIGFsc28gc2l4IHRpbWVzIGluIG90aGVyIGJvb2tz77yJOyB0aGV5IGFyZSB0aGVyZQoJCQkJCQlhcHBlYWxlZCB0byBmb3IgdGhlIHRyaXBhcnRpdGUgY2xhc3NpZmljYXRpb24gb2YgZm9vZHMgd2hpY2ggaW4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDEwOThiIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4xMDk4YiAxMjwvYmlibD4gaXMKCQkJCQkJYXNjcmliZWQgdG8g4oCYY3VycmVudCBvcGluaW9uIG9mIGxvbmcgc3RhbmRpbmcgYW5kIGdlbmVyYWxseQoJCQkJCQlhY2NlcHRlZCBieSBzdHVkZW50cyBvZiBwaGlsb3NvcGh5LuKAmSBUaGUgdGVybSBtYXkgdGhlcmUgcHJlZGVub3RlCgkJCQkJCWRvY3RyaW5lcyBub3QgcGVjdWxpYXIgdG8gdGhlIFBlcmlwYXRldGljIHNjaG9vbC48L25vdGU+IFRoZSBhdXRob3JpdHkgb2YgYQoJCQkJCW1hc3RlciBvdmVyIGEgc2xhdmUsIGFsdGhvdWdoIGluIHRydXRoIHdoZW4gYm90aCBtYXN0ZXIgYW5kIHNsYXZlIGFyZSBkZXNpZ25lZAoJCQkJCWJ5IG5hdHVyZSBmb3IgdGhlaXIgcG9zaXRpb25zIHRoZWlyIGludGVyZXN0cyBhcmUgdGhlIHNhbWUsIG5ldmVydGhlbGVzcyBnb3Zlcm5zCgkJCQkJaW4gdGhlIGdyZWF0ZXIgZGVncmVlIHdpdGggYSB2aWV3IHRvIHRoZSBpbnRlcmVzdCBvZiB0aGUgbWFzdGVyLCBidXQKCQkJCQlpbmNpZGVudGFsbHkgd2l0aCBhIHZpZXcgdG8gdGhhdCBvZiB0aGUgc2xhdmUsIGZvciBpZiB0aGUgc2xhdmUgZGV0ZXJpb3JhdGVzIHRoZQoJCQkJCXBvc2l0aW9uIG9mIHRoZSBtYXN0ZXIgY2Fubm90IGJlIHNhdmVkIGZyb20gaW5qdXJ5LiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTA5OGIiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4gRXRoLjEwOThiIDEyPC9iaWJsPiBpcwoJCQkJCQlhc2NyaWJlZCB0byDigJhjdXJyZW50IG9waW5pb24gb2YgbG9uZyBzdGFuZGluZyBhbmQgZ2VuZXJhbGx5CgkJCQkJCWFjY2VwdGVkIGJ5IHN0dWRlbnRzIG9mIHBoaWxvc29waHku4oCZIFRoZSB0ZXJtIG1heSB0aGVyZSBwcmVkZW5vdGUKCQkJCQkJZG9jdHJpbmVzIG5vdCBwZWN1bGlhciB0byB0aGUgUGVyaXBhdGV0aWMgc2Nob29sLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC41IiB1bml0PSJMb2ViIGNoYXAiIC8+QXV0aG9yaXR5IG92ZXIgY2hpbGRyZW4gYW5kIHdpZmUgW2FuZCBvdmVyIHRoZQoJCQkJCXdob2xlIGhvdXNlaG9sZCwgd2hpY2ggd2UgY2FsbCB0aGUgYXJ0IG9mIGhvdXNlaG9sZCBtYW5hZ2VtZW50PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkFyaXN0b3RsZSBjYW4gaGFyZGx5IGhhdmUgd3JpdHRlbiB0aGlzIGNsYXVzZSwKCQkJCQkJYXMgaXQgaW5jbHVkZXMgbWFzdGVyc2hpcCBvdmVyIHNsYXZlcy48L25vdGU+XSBpcyBleGVyY2lzZWQgZWl0aGVyCgkJCQkJaW4gdGhlIGludGVyZXN0IG9mIHRob3NlIHJ1bGVkIG9yIGZvciBzb21lIGNvbW1vbiBpbnRlcmVzdCBvZiBib3RoCgkJCQkJcGFydGllcyzigJRlc3NlbnRpYWxseSwgaW4gdGhlIGludGVyZXN0IG9mIHRoZSBydWxlZCwgYXMgd2Ugc2VlIHRoYXQgdGhlCgkJCQkJb3RoZXIgYXJ0cyBhbHNvLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI3OWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['3.1279a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmxpa2UgbWVkaWNpbmUgYW5kIGF0aGxldGljIHRyYWluaW5nLCBhcmUgcHVyc3VlZCBpbgoJCQkJCXRoZSBpbnRlcmVzdCBvZiB0aGUgcGVyc29ucyB1cG9uIHdob20gdGhleSBhcmUgcHJhY3Rpc2VkLCBhbHRob3VnaCBpbmNpZGVudGFsbHkKCQkJCQl0aGV5IG1heSBhbHNvIGJlIGluIHRoZSBpbnRlcmVzdCBvZiB0aGUgcHJhY3RpdGlvbmVycyB0aGVtc2VsdmVzOyBmb3Igbm90aGluZwoJCQkJCXByZXZlbnRzIHRoZSB0cmFpbmVyIGZyb20gYmVpbmcgb24gb2NjYXNpb25zIGhpbXNlbGYgYWxzbyBvbmUgb2YgdGhlIHBlcnNvbnMgaW4KCQkJCQl0cmFpbmluZywganVzdCBhcyB0aGUgcGlsb3QgaXMgYWx3YXlzIGEgbWVtYmVyIG9mIHRoZSBjcmV3OyBzbyBhbHRob3VnaCB0aGUKCQkJCQl0cmFpbmVyIG9yIHBpbG90IHN0dWRpZXMgdGhlIGdvb2Qgb2YgdGhvc2UgdW5kZXIgaGlzIGF1dGhvcml0eSwgd2hlbiBoZSBoaW1zZWxmCgkJCQkJYWxzbyBiZWNvbWVzIG9uZSBhbW9uZyB0aGVtIGhlIGluY2lkZW50YWxseSBzaGFyZXMgdGhlIGJlbmVmaXQsIGZvciB0aGUgcGlsb3QgaXMKCQkJCQlhIHNhaWxvciBpbiB0aGUgc2hpcCBhbmQgdGhlIHRyYWluZXIgY2FuIGJlY29tZSBvbmUgb2YgdGhlIHBlcnNvbnMgaW4gdHJhaW5pbmcKCQkJCQl1bmRlciBoaXMgb3duIGRpcmVjdGlvbi4gPC90cmFuc2xhdGlvbj4="
translation['3.1279a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC42IiB1bml0PSJMb2ViIGNoYXAiIC8+SGVuY2UgaW4KCQkJCQlyZWdhcmQgdG8gdGhlIHBvbGl0aWNhbCBvZmZpY2VzIGFsc28sIHdoZW4gdGhlIHN0YXRlIGlzIGNvbnN0aXR1dGVkIG9uIHRoZQoJCQkJCXByaW5jaXBsZSBvZiBlcXVhbGl0eSBhbmQgb2Ygc2ltaWxhcml0eSBiZXR3ZWVuIHRoZSBjaXRpemVucywgdGhlc2UgY2xhaW0gdG8KCQkJCQlob2xkIG9mZmljZSBieSB0dXJu4oCUaW4gZWFybGllciB0aW1lcywgdW5kZXIgdGhlIG5hdHVyYWwgc3lzdGVtLAoJCQkJCWNsYWltaW5nIHRvIGRvIHB1YmxpYyBzZXJ2aWNlcyBpbiB0dXJuLCBhbmQgZm9yIHNvbWVib2R5IGluIHJldHVybiB0byBsb29rIGFmdGVyCgkJCQkJdGhlaXIgb3duIHdlbGZhcmUganVzdCBhcyBwcmV2aW91c2x5IHRoZXkgbG9va2VkIGFmdGVyIGhpcyBpbnRlcmVzdCB3aGVuIGluCgkJCQkJb2ZmaWNlIHRoZW1zZWx2ZXM7IGJ1dCBub3dhZGF5cyBvd2luZyB0byB0aGUgYmVuZWZpdHMgdG8gYmUgZ290IGZyb20gcHVibGljCgkJCQkJc291cmNlcyBhbmQgZnJvbSBob2xkaW5nIG9mZmljZSBwZW9wbGUgd2lzaCB0byBiZSBpbiBvZmZpY2UgY29udGludW91c2x5LCBqdXN0CgkJCQkJYXMgaWYgaXQgd2VyZSB0aGUgY2FzZSB0aGF0IHRob3NlIGluIG9mZmljZSBhbHRob3VnaCBzaWNrbHkgcGVvcGxlIGFsd2F5cwoJCQkJCWVuam95ZWQgZ29vZCBoZWFsdGjigJRpbiB3aGljaCBjYXNlIG9mZmljZSB3b3VsZCBubyBkb3VidCBiZSBtdWNoIHJ1bgoJCQkJCWFmdGVyIGJ5IGludmFsaWRzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC43IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGlzIGNsZWFyIHRoZW4gdGhhdCB0aG9zZSBjb25zdGl0dXRpb25zIHRoYXQgYWltIGF0IHRoZQoJCQkJCWNvbW1vbiBhZHZhbnRhZ2UgYXJlIGluIGVmZmVjdCByaWdodGx5IGZyYW1lZCBpbiBhY2NvcmRhbmNlIHdpdGggYWJzb2x1dGUKCQkJCQlqdXN0aWNlLCB3aGlsZSB0aG9zZSB0aGF0IGFpbSBhdCB0aGUgcnVsZXJzJyBvd24gYWR2YW50YWdlIG9ubHkgYXJlCgkJCQkJCWZhdWx0eSw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIGFyZSBhbGwgb2YgdGhlbQoJCQkJCWRldmlhdGlvbnMgZnJvbSB0aGUgcmlnaHQgY29uc3RpdHV0aW9uczsgZm9yIHRoZXkgaGF2ZSBhbiBlbGVtZW50IG9mIGRlc3BvdGlzbSwKCQkJCQl3aGVyZWFzIGEgY2l0eSBpcyBhIHBhcnRuZXJzaGlwIG9mIGZyZWUgbWVuLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVzZQoJCQkJCW1hdHRlcnMgaGF2aW5nIGJlZW4gZGV0ZXJtaW5lZCB0aGUgbmV4dCBzdGVwIGlzIHRvIGNvbnNpZGVyIGhvdyBtYW55IGZvcm1zIG9mCgkJCQkJY29uc3RpdHV0aW9uIHRoZXJlIGFyZSBhbmQgd2hhdCB0aGV5IGFyZTsgYW5kIGZpcnN0IHRvIHN0dWR5IHRoZSByaWdodCBmb3JtcyBvZgoJCQkJCWNvbnN0aXR1dGlvbiwgc2luY2UgdGhlIGRldmlhdGlvbnMgd2lsbCBhbHNvIGJlY29tZSBtYW5pZmVzdCB3aGVuIHRoZXNlIGFyZQoJCQkJCQlkZWZpbmVkLjwvdHJhbnNsYXRpb24+"
translation['3.1279b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBpbmFzbXVjaCBhcyDigJhjb25zdGl0dXRpb27igJkgbWVhbnMgdGhlCgkJCQkJc2FtZSBhcyDigJhnb3Zlcm5tZW50LOKAmSBhbmQgdGhlIGdvdmVybm1lbnQgaXMgdGhlIHN1cHJlbWUKCQkJCQlwb3dlciBpbiB0aGUgc3RhdGUsIGFuZCB0aGlzIG11c3QgYmUgZWl0aGVyIGEgc2luZ2xlIHJ1bGVyIG9yIGEgZmV3IG9yIHRoZSBtYXNzCgkJCQkJb2YgdGhlIGNpdGl6ZW5zLCBpbiBjYXNlcyB3aGVuIHRoZSBvbmUgb3IgdGhlIGZldyBvciB0aGUgbWFueSBnb3Zlcm4gd2l0aCBhbiBleWUKCQkJCQl0byB0aGUgY29tbW9uIGludGVyZXN0LCB0aGVzZSBjb25zdGl0dXRpb25zIG11c3QgbmVjZXNzYXJpbHkgYmUgcmlnaHQgb25lcywKCQkJCQl3aGlsZSB0aG9zZSBhZG1pbmlzdGVyZWQgd2l0aCBhbiBleWUgdG8gdGhlIHByaXZhdGUgaW50ZXJlc3Qgb2YgZWl0aGVyIHRoZSBvbmUKCQkJCQlvciB0aGUgZmV3IG9yIHRoZSBtdWx0aXR1ZGUgYXJlIGRldmlhdGlvbnMuIEZvciBlaXRoZXIgd2UgbXVzdCBub3Qgc2F5IHRoYXQKCQkJCQl0aG9zZSB3aG8gYXJlIHBhcnQgb2YgdGhlIHN0YXRlIGFyZSBjaXRpemVucywgb3IgdGhvc2Ugd2hvIGFyZSBwYXJ0IG9mIHRoZSBzdGF0ZQoJCQkJCW11c3Qgc2hhcmUgaW4gdGhlIGFkdmFudGFnZSBvZiBtZW1iZXJzaGlwLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPk91ciBjdXN0b21hcnkgZGVzaWduYXRpb24gZm9yIGEgbW9uYXJjaHkgdGhhdCBhaW1zIGF0IHRoZQoJCQkJCWNvbW1vbiBhZHZhbnRhZ2UgaXMg4oCYa2luZ3NoaXDigJk7IGZvciBhIGdvdmVybm1lbnQgb2YgbW9yZQoJCQkJCXRoYW4gb25lIHlldCBvbmx5IGEgZmV3IOKAmGFyaXN0b2NyYWN54oCZIO+8iGVpdGhlcgoJCQkJCWJlY2F1c2UgdGhlIGJlc3QgbWVuIHJ1bGUgb3IgYmVjYXVzZSB0aGV5IHJ1bGUgd2l0aCBhIHZpZXcgdG8gd2hhdCBpcyBiZXN0IGZvcgoJCQkJCXRoZSBzdGF0ZSBhbmQgZm9yIGl0cyBtZW1iZXJz77yJOyB3aGlsZSB3aGVuIHRoZSBtdWx0aXR1ZGUgZ292ZXJuIHRoZQoJCQkJCXN0YXRlIHdpdGggYSB2aWV3IHRvIHRoZSBjb21tb24gYWR2YW50YWdlLCBpdCBpcyBjYWxsZWQgYnkgdGhlIG5hbWUgY29tbW9uIHRvCgkJCQkJYWxsIHRoZSBmb3JtcyBvZiBjb25zdGl0dXRpb24sIOKAmGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQu4oCZCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+77yIQW5kIHRoaXMgY29tZXMgYWJvdXQKCQkJCQlyZWFzb25hYmx5LCBzaW5jZSBhbHRob3VnaCBpdCBpcyBwb3NzaWJsZSBmb3Igb25lIG1hbiBvciBhIGZldyB0byBleGNlbCBpbgoJCQkJCXZpcnR1ZSwgd2hlbiB0aGUgbnVtYmVyIGlzIGxhcmdlciBpdCBiZWNvbWVzIGRpZmZpY3VsdCBmb3IgdGhlbSB0byBwb3NzZXNzCgkJCQkJcGVyZmVjdCBleGNlbGxlbmNlIGluIHJlc3BlY3Qgb2YgZXZlcnkgZm9ybSBvZiB2aXJ0dWUsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjc5YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1279b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCB0aGV5IGNhbiBiZXN0CgkJCQkJZXhjZWwgaW4gbWlsaXRhcnkgdmFsb3IsIGZvciB0aGlzIGlzIGZvdW5kIHdpdGggbnVtYmVyczsgYW5kIHRoZXJlZm9yZSB3aXRoIHRoaXMKCQkJCQlmb3JtIG9mIGNvbnN0aXR1dGlvbiB0aGUgY2xhc3MgdGhhdCBmaWdodHMgZm9yIHRoZSBzdGF0ZSBpbiB3YXIgaXMgdGhlIG1vc3QKCQkJCQlwb3dlcmZ1bCwgYW5kIGl0IGlzIHRob3NlIHdobyBwb3NzZXNzIGFybXMgd2hvIGFyZSBhZG1pdHRlZCB0byB0aGUKCQkJCQlnb3Zlcm5tZW50Lu+8iSA8L3RyYW5zbGF0aW9uPg=="
translation['3.1279b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+RGV2aWF0aW9ucwoJCQkJCWZyb20gdGhlIGNvbnN0aXR1dGlvbnMgbWVudGlvbmVkIGFyZSB0eXJhbm55IGNvcnJlc3BvbmRpbmcgdG8ga2luZ3NoaXAsCgkJCQkJb2xpZ2FyY2h5IHRvIGFyaXN0b2NyYWN5LCBhbmQgZGVtb2NyYWN5IHRvIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQ7IGZvcgoJCQkJCXR5cmFubnkgaXMgbW9uYXJjaHkgcnVsaW5nIGluIHRoZSBpbnRlcmVzdCBvZiB0aGUgbW9uYXJjaCwgb2xpZ2FyY2h5IGdvdmVybm1lbnQKCQkJCQlpbiB0aGUgaW50ZXJlc3Qgb2YgdGhlIHJpY2gsIGRlbW9jcmFjeSBnb3Zlcm5tZW50IGluIHRoZSBpbnRlcmVzdCBvZiB0aGUgcG9vciwKCQkJCQlhbmQgbm9uZSBvZiB0aGVzZSBmb3JtcyBnb3Zlcm5zIHdpdGggcmVnYXJkIHRvIHRoZSBwcm9maXQgb2YgdGhlCgkJCQkJCWNvbW11bml0eS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGl0IGlzIG5lY2Vzc2FyeSB0byBzYXkgYXQgYQoJCQkJCWxpdHRsZSBncmVhdGVyIGxlbmd0aCB3aGF0IGVhY2ggb2YgdGhlc2UgY29uc3RpdHV0aW9ucyBpczsgZm9yIHRoZSBxdWVzdGlvbgoJCQkJCWludm9sdmVzIGNlcnRhaW4gZGlmZmljdWx0aWVzLCBhbmQgaXQgaXMgdGhlIHNwZWNpYWwgbWFyayBvZiBvbmUgd2hvIHN0dWRpZXMgYW55CgkJCQkJc3ViamVjdCBwaGlsb3NvcGhpY2FsbHksIGFuZCBub3Qgc29sZWx5IHdpdGggcmVnYXJkIHRvIGl0cyBwcmFjdGljYWwgYXNwZWN0LAoJCQkJCXRoYXQgaGUgZG9lcyBub3Qgb3Zlcmxvb2sgb3Igb21pdCBhbnkgcG9pbnQsIGJ1dCBicmluZ3MgdG8gbGlnaHQgdGhlIHRydXRoIGFib3V0CgkJCQkJZWFjaC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ob3cgdHlyYW5ueSwgYXMgaGFzIGJlZW4gc2FpZCwKCQkJCQlpcyBtb25hcmNoeSBleGVydGluZyBkZXNwb3RpYyBwb3dlciBvdmVyIHRoZSBwb2xpdGljYWwgY29tbXVuaXR5OyBvbGlnYXJjaHkgaXMKCQkJCQl3aGVuIHRoZSBjb250cm9sIG9mIHRoZSBnb3Zlcm5tZW50IGlzIGluIHRoZSBoYW5kcyBvZiB0aG9zZSB0aGF0IG93biB0aGUKCQkJCQlwcm9wZXJ0aWVzOyBkZW1vY3JhY3kgaXMgd2hlbiBvbiB0aGUgY29udHJhcnkgaXQgaXMgaW4gdGhlIGhhbmRzIG9mIHRob3NlIHRoYXQKCQkJCQlkbyBub3QgcG9zc2VzcyBtdWNoIHByb3BlcnR5LCBidXQgYXJlIHBvb3IuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPkEgZmlyc3QgZGlmZmljdWx0eSBpcyB3aXRoIHJlZ2FyZCB0byB0aGUgZGVmaW5pdGlvbi4gSWYgdGhlCgkJCQkJbWFqb3JpdHkgb2YgdGhlIGNpdGl6ZW5zIHdlcmUgd2VhbHRoeSBhbmQgd2VyZSBpbiBjb250cm9sIG9mIHRoZSBzdGF0ZSwgeWV0IHdoZW4KCQkJCQl0aGUgbXVsdGl0dWRlIGlzIGluIHBvd2VyIGl0IGlzIGEgZGVtb2NyYWN5LCBhbmQgc2ltaWxhcmx5LCB0byB0YWtlIHRoZSBvdGhlcgoJCQkJCWNhc2UsIGlmIGl0IHdlcmUgdG8gb2NjdXIgc29tZXdoZXJlIHRoYXQgdGhlIHBvb3Igd2VyZSBmZXdlciB0aGFuIHRoZSByaWNoIGJ1dAoJCQkJCXdlcmUgc3Ryb25nZXIgdGhhbiB0aGV5IGFuZCBhY2NvcmRpbmdseSB3ZXJlIGluIGNvbnRyb2wgb2YgdGhlIGdvdmVybm1lbnQsIHlldAoJCQkJCXdoZXJlIGEgc21hbGwgbnVtYmVyIGlzIGluIGNvbnRyb2wgaXQgaXMgc2FpZCB0byBiZSBhbiBvbGlnYXJjaHksIHRoZW4gaXQgd291bGQKCQkJCQlzZWVtIHRoYXQgb3VyIGRlZmluaXRpb24gb2YgdGhlIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiB3YXMgbm90IGEgZ29vZCBvbmUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gaXQgd291bGQgYmUgYWJzdXJkIHRvIHRlcm0gZ292ZXJubWVudCBieQoJCQkJCQl0aGUgcGVvcGxlIGRlbW9jcmFjeSBpZiB0aGUgcGVvcGxlIGhhcHBlbmVkIHRvIGJlIHZlcnkgcmljaCwgb3IgZ292ZXJubWVudAoJCQkJCQlieSBhIGZldyBvbGlnYXJjaHkgaWYgdGhlIGZldyB3ZXJlIHBvb3IgYW5kIHRoZSBtYW55IHdob20gdGhleSBnb3Zlcm5lZAoJCQkJCQlyaWNoLjwvbm90ZT4KCQkJCQk8L3RyYW5zbGF0aW9uPg=="
translation['3.1280a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS42IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIG9uY2UgYWdhaW4sIGlmIG9uZSBhc3N1bWVkIHRoZQoJCQkJCWNvbWJpbmF0aW9uIG9mIHNtYWxsIG51bWJlcnMgd2l0aCB3ZWFsdGggYW5kIG9mIG11bHRpdHVkZSB3aXRoIHBvdmVydHksIGFuZAoJCQkJCW5hbWVkIHRoZSBjb25zdGl0dXRpb25zIHRodXPigJRvbmUgaW4gd2hpY2ggdGhlIHJpY2ggYmVpbmcgZmV3IGluIG51bWJlcgoJCQkJCWhvbGQgdGhlIG9mZmljZXMsIG9saWdhcmNoeTogb25lIGluIHdoaWNoIHRoZSBwb29yIGJlaW5nIG1hbnkgaW4gbnVtYmVyIGhvbGQgdGhlCgkJCQkJb2ZmaWNlcywgZGVtb2NyYWN5LOKAlHRoaXMgaW52b2x2ZXMgYW5vdGhlciBkaWZmaWN1bHR5LiBXaGF0IG5hbWVzIGFyZQoJCQkJCXdlIHRvIGdpdmUgdG8gdGhlIGNvbnN0aXR1dGlvbnMganVzdCBkZXNjcmliZWTigJR0aGUgb25lIGluIHdoaWNoIHRoZXJlCgkJCQkJYXJlIG1vcmUgcmljaCBhbmQgdGhlIG9uZSBpbiB3aGljaCB0aGUgcG9vciBhcmUgdGhlIGZld2VyLCBhbmQgdGhlc2UgY29udHJvbAoJCQkJCXRoZWlyIHJlc3BlY3RpdmUgZ292ZXJubWVudHPigJRpZiB0aGVyZSBleGlzdHMgbm8gb3RoZXIgZm9ybSBvZgoJCQkJCWNvbnN0aXR1dGlvbiBiZXNpZGUgdGhvc2UgbWVudGlvbmVkPyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSBhcmd1bWVudCB0aGVyZWZvcmUgc2VlbXMgdG8gbWFrZSBpdCBjbGVhciB0aGF0IGZvciBmZXcgb3IgbWFueSB0byBoYXZlCgkJCQkJcG93ZXIgaXMgYW4gYWNjaWRlbnRhbCBmZWF0dXJlIG9mIG9saWdhcmNoaWVzIGluIHRoZSBvbmUgY2FzZSBhbmQgZGVtb2NyYWNpZXMgaW4KCQkJCQl0aGUgb3RoZXIsIGR1ZSB0byB0aGUgZmFjdCB0aGF0IHRoZSByaWNoIGFyZSBmZXcgYW5kIHRoZSBwb29yIGFyZSBtYW55CgkJCQkJZXZlcnl3aGVyZSDvvIhzbyB0aGF0IGl0IGlzIG5vdCByZWFsbHkgdGhlIGNhc2UgdGhhdCB0aGUgcG9pbnRzIG1lbnRpb25lZAoJCQkJCWNvbnN0aXR1dGUgYSBzcGVjaWZpYyBkaWZmZXJlbmNl77yJLCBidXQgdGhhdCB0aGUgcmVhbCB0aGluZyBpbiB3aGljaAoJCQkJCWRlbW9jcmFjeSBhbmQgb2xpZ2FyY2h5IGRpZmZlciBmcm9tIGVhY2ggb3RoZXIgaXMgcG92ZXJ0eSBhbmQgd2VhbHRoOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI4MGEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['3.1280a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBpdAoJCQkJCW5lY2Vzc2FyaWx5IGZvbGxvd3MgdGhhdCB3aGVyZXZlciB0aGUgcnVsZXJzIG93ZSB0aGVpciBwb3dlciB0byB3ZWFsdGgsIHdoZXRoZXIKCQkJCQl0aGV5IGJlIGEgbWlub3JpdHkgb3IgYSBtYWpvcml0eSwgdGhpcyBpcyBhbiBvbGlnYXJjaHksIGFuZCB3aGVuIHRoZSBwb29yIHJ1bGUsCgkJCQkJaXQgaXMgYSBkZW1vY3JhY3ksIGFsdGhvdWdoIGl0IGRvZXMgYWNjaWRlbnRhbGx5IGhhcHBlbiwgYXMgd2Ugc2FpZCwgdGhhdCB3aGVyZQoJCQkJCXRoZSBydWxlcnMgaG9sZCBwb3dlciBieSB3ZWFsdGggdGhleSBhcmUgZmV3IGFuZCB3aGVyZSB0aGV5IGhvbGQgcG93ZXIgYnkKCQkJCQlwb3ZlcnR5IHRoZXkgYXJlIG1hbnksIGJlY2F1c2UgZmV3IG1lbiBhcmUgcmljaCBidXQgYWxsIG1lbiBwb3NzZXNzIGZyZWVkb20sIGFuZAoJCQkJCXdlYWx0aCBhbmQgZnJlZWRvbSBhcmUgdGhlIGdyb3VuZHMgb24gd2hpY2ggdGhlIHR3byBjbGFzc2VzIGxheSBjbGFpbSB0byB0aGUKCQkJCQkJZ292ZXJubWVudC48L3RyYW5zbGF0aW9uPg=="
translation['3.1280a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS44IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBmaXJzdCB3ZSBtdXN0IGFzY2VydGFpbiB3aGF0IGFyZSBzdGF0ZWQgdG8gYmUgdGhlCgkJCQkJZGV0ZXJtaW5pbmcgcXVhbGl0aWVzIG9mIG9saWdhcmNoeSBhbmQgZGVtb2NyYWN5LCBhbmQgd2hhdCBpcyB0aGUgcHJpbmNpcGxlIG9mCgkJCQkJanVzdGljZSB1bmRlciB0aGUgb25lIGZvcm0gb2YgZ292ZXJubWVudCBhbmQgdW5kZXIgdGhlIG90aGVyLiBGb3IgYWxsIG1lbiBsYXkKCQkJCQlob2xkIG9uIGp1c3RpY2Ugb2Ygc29tZSBzb3J0LCBidXQgdGhleSBvbmx5IGFkdmFuY2UgdG8gYSBjZXJ0YWluIHBvaW50LCBhbmQgZG8KCQkJCQlub3QgZXhwcmVzcyB0aGUgcHJpbmNpcGxlIG9mIGFic29sdXRlIGp1c3RpY2UgaW4gaXRzIGVudGlyZXR5LiBGb3IgaW5zdGFuY2UsIGl0CgkJCQkJaXMgdGhvdWdodCB0aGF0IGp1c3RpY2UgaXMgZXF1YWxpdHksIGFuZCBzbyBpdCBpcywgdGhvdWdoIG5vdCBmb3IgZXZlcnlib2R5IGJ1dAoJCQkJCW9ubHkgZm9yIHRob3NlIHdobyBhcmUgZXF1YWxzOyBhbmQgaXQgaXMgdGhvdWdodCB0aGF0IGluZXF1YWxpdHkgaXMganVzdCwgZm9yIHNvCgkJCQkJaW5kZWVkIGl0IGlzLCB0aG91Z2ggbm90IGZvciBldmVyeWJvZHksIGJ1dCBmb3IgdGhvc2Ugd2hvIGFyZSB1bmVxdWFsOyBidXQgdGhlc2UKCQkJCQlwYXJ0aXNhbnMgc3RyaXAgYXdheSB0aGUgcXVhbGlmaWNhdGlvbiBvZiB0aGUgcGVyc29ucyBjb25jZXJuZWQsIGFuZCBqdWRnZQoJCQkJCWJhZGx5LiBBbmQgdGhlIGNhdXNlIG9mIHRoaXMgaXMgdGhhdCB0aGV5IGFyZSB0aGVtc2VsdmVzIGNvbmNlcm5lZCBpbiB0aGUKCQkJCQlkZWNpc2lvbiwgYW5kIHBlcmhhcHMgbW9zdCBtZW4gYXJlIGJhZCBqdWRnZXMgd2hlbiB0aGVpciBvd24gaW50ZXJlc3RzIGFyZSBpbgoJCQkJCXF1ZXN0aW9uLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlIGluYXNtdWNoIGFzCgkJCQkJ4oCYanVzdOKAmSBtZWFucyBqdXN0IGZvciBjZXJ0YWluIHBlcnNvbnMsIGFuZCBpdCBpcyBkaXZpZGVkIGluCgkJCQkJdGhlIHNhbWUgd2F5IGluIHJlbGF0aW9uIHRvIHRoZSB0aGluZ3MgdG8gYmUgZGlzdHJpYnV0ZWQgYW5kIHRoZSBwZXJzb25zIHRoYXQKCQkJCQlyZWNlaXZlIHRoZW0sIGFzIGhhcyBiZWVuIHNhaWQgYmVmb3JlIGluIHRoZSBFdGhpY3MsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTEzMWEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4gRXRoLgoJCQkJCQkJMTEzMWEgMTQtMjQ8L2JpYmw+Ljwvbm90ZT4gdGhlIHR3byBwYXJ0aWVzIGFncmVlIGFzIHRvIHdoYXQgY29uc3RpdHV0ZXMKCQkJCQllcXVhbGl0eSBpbiB0aGUgdGhpbmcsIGJ1dCBkaXNwdXRlIGFzIHRvIHdoYXQgY29uc3RpdHV0ZXMgZXF1YWxpdHkgaW4gdGhlCgkJCQkJCXBlcnNvbiw8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTEzMWEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4gRXRoLgoJCQkJCQkJMTEzMWEgMTQtMjQ8L2JpYmw+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5jaGllZmx5IGZvciB0aGUgcmVhc29uCgkJCQkJanVzdCBub3cgc3RhdGVkLCBiZWNhdXNlIG1lbiBhcmUgYmFkIGp1ZGdlcyB3aGVyZSB0aGV5IHRoZW1zZWx2ZXMgYXJlIGNvbmNlcm5lZCwKCQkJCQlidXQgYWxzbywgaW5hc211Y2ggYXMgYm90aCBwYXJ0aWVzIHB1dCBmb3J3YXJkIGEgcGxlYSB0aGF0IGlzIGp1c3QgdXAgdG8gYQoJCQkJCWNlcnRhaW4gcG9pbnQsIHRoZXkgdGhpbmsgdGhhdCB3aGF0IHRoZXkgc2F5IGlzIGFic29sdXRlbHkganVzdC4gRm9yIHRoZSBvbmUKCQkJCQlzaWRlIHRoaW5rIHRoYXQgaWYgdGhleSBhcmUgdW5lcXVhbCBpbiBzb21lIHJlc3BlY3RzLCBmb3IgaW5zdGFuY2UgaW4gd2VhbHRoLAoJCQkJCXRoZXkgYXJlIGVudGlyZWx5IHVuZXF1YWwsIGFuZCB0aGUgb3RoZXIgc2lkZSB0aGluayB0aGF0IGlmIHRoZXkgYXJlIGVxdWFsIGluCgkJCQkJc29tZSByZXNwZWN0cywgZm9yIGluc3RhbmNlIGluIGZyZWVkb20sIHRoZXkgYXJlIGVudGlyZWx5IGVxdWFsLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1280b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGUgbW9zdCBpbXBvcnRhbnQgdGhpbmcgdGhleSBkbyBub3QKCQkJCQltZW50aW9uLiBJZiBtZW4gZm9ybWVkIHRoZSBjb21tdW5pdHkgYW5kIGNhbWUgdG9nZXRoZXIgZm9yIHRoZSBzYWtlIG9mIHdlYWx0aCwKCQkJCQl0aGVpciBzaGFyZSBpbiB0aGUgc3RhdGUgaXMgcHJvcG9ydGlvbmF0ZSB0byB0aGVpciBzaGFyZSBpbiB0aGUgcHJvcGVydHksIHNvCgkJCQkJdGhhdCB0aGUgYXJndW1lbnQgb2YgdGhlIGNoYW1waW9ucyBvZiBvbGlnYXJjaHkgd291bGQgYXBwZWFyIHRvIGJlCgkJCQkJdmFsaWTigJRuYW1lbHkgdGhhdCBpbiBhIHBhcnRuZXJzaGlwIHdpdGggYSBjYXBpdGFsIG9mIDEwMCBtaW5hZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTI2OGIgMTQgbi48L25vdGU+IGl0IHdvdWxkIG5vdCBiZSBqdXN0CgkJCQkJZm9yIHRoZSBtYW4gd2hvIGNvbnRyaWJ1dGVkIG9uZSBtaW5hIHRvIGhhdmUgYSBzaGFyZSB3aGV0aGVyIG9mIHRoZSBwcmluY2lwYWwgb3IKCQkJCQlvZiB0aGUgcHJvZml0cyBhY2NydWluZyBlcXVhbCB0byB0aGUgc2hhcmUgb2YgdGhlIG1hbiB3aG8gc3VwcGxpZWQgdGhlIHdob2xlIG9mCgkJCQkJdGhlIHJlbWFpbmRlcjsgYnV0IGlmIG9uIHRoZSBvdGhlciBoYW5kIHRoZSBzdGF0ZSB3YXMgZm9ybWVkIG5vdCBmb3IgdGhlIHNha2Ugb2YKCQkJCQlsaWZlIG9ubHkgYnV0IHJhdGhlciBmb3IgdGhlIGdvb2QgbGlmZSDvvIhmb3Igb3RoZXJ3aXNlIGEgY29sbGVjdGlvbiBvZgoJCQkJCXNsYXZlcyBvciBvZiBsb3dlciBhbmltYWxzIHdvdWxkIGJlIGEgc3RhdGUsIGJ1dCBhcyBpdCBpcywgaXQgaXMgbm90IGEgc3RhdGUsCgkJCQkJYmVjYXVzZSBzbGF2ZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEyNjBhIDEyLCBhbmQgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExNzdhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTE3N2EgODwvYmlibD4sCgkJCQkJCeKAmGJ1dCBubyBvbmUgYWxsb3dzIGEgc2xhdmUgYW55IG1lYXN1cmUgb2YgaGFwcGluZXNzLCBhbnkgbW9yZSB0aGFuCgkJCQkJCWEgbGlmZSBvZiBoaXMgb3duLuKAmTwvbm90ZT4gYW5kIGFuaW1hbHMgaGF2ZSBubyBzaGFyZSBpbiB3ZWxsLWJlaW5nCgkJCQkJb3IgaW4gcHVycG9zaXZlIGxpZmXvvIksIGFuZCBpZiBpdHMgb2JqZWN0IGlzIG5vdCBtaWxpdGFyeSBhbGxpYW5jZSBmb3IKCQkJCQlkZWZlbmNlIGFnYWluc3QgaW5qdXJ5IGJ5IGFueWJvZHksIGFuZCBpdCBkb2VzIG5vdCBleGlzdCBmb3IgdGhlIHNha2Ugb2YgdHJhZGUKCQkJCQlhbmQgb2YgYnVzaW5lc3MgcmVsYXRpb25zPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExNzdhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTE3N2EgODwvYmlibD4sCgkJCQkJCeKAmGJ1dCBubyBvbmUgYWxsb3dzIGEgc2xhdmUgYW55IG1lYXN1cmUgb2YgaGFwcGluZXNzLCBhbnkgbW9yZSB0aGFuCgkJCQkJCWEgbGlmZSBvZiBoaXMgb3duLuKAmTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgc2VudGVuY2UgaGVyZQoJCQkJCQlicmVha3Mgb2ZmOyBUaGUgaW5mZXJlbmNlIHRoYXQgc2hvdWxkIGhhdmUgZm9ybWVkIGl0cyBjb25jbHVzaW9uIGlzIGdpdmVuIGluCgkJCQkJCTUuMTUuPC9ub3RlPuKAlGZvciBpZiBzbywgRXRydXNjYW5zIGFuZCBDYXJ0aGFnaW5pYW5zIGFuZCBhbGwgdGhlCgkJCQkJcGVvcGxlIHRoYXQgaGF2ZSBjb21tZXJjaWFsIHJlbGF0aW9ucyB3aXRoIG9uZSBhbm90aGVyIHdvdWxkIGJlIHZpcnR1YWxseQoJCQkJCWNpdGl6ZW5zIG9mIGEgc2luZ2xlIHN0YXRlOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hdCBhbGwKCQkJCQlldmVudHMgdGhleSBoYXZlIGFncmVlbWVudHMgYWJvdXQgaW1wb3J0cyBhbmQgY292ZW5hbnRzIGFzIHRvIGFic3RhaW5pbmcgZnJvbQoJCQkJCWRpc2hvbmVzdHkgYW5kIHRyZWF0aWVzIG9mIGFsbGlhbmNlIGZvciBtdXR1YWwgZGVmZW5jZTsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyODBiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1280b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCB0aGV5IGRvIG5vdAoJCQkJCWhhdmUgb2ZmaWNpYWxzIGNvbW1vbiB0byB0aGVtIGFsbCBhcHBvaW50ZWQgdG8gZW5mb3JjZSB0aGVzZSBjb3ZlbmFudHMsIGJ1dAoJCQkJCWRpZmZlcmVudCBvZmZpY2lhbHMgd2l0aCBlaXRoZXIgcGFydHksIG5vciB5ZXQgZG9lcyBlaXRoZXIgcGFydHkgdGFrZSBhbnkKCQkJCQljb25jZXJuIGFzIHRvIHRoZSBwcm9wZXIgbW9yYWwgY2hhcmFjdGVyIG9mIHRoZSBvdGhlciwgbm9yIGF0dGVtcHQgdG8gc2VjdXJlCgkJCQkJdGhhdCBub2JvZHkgaW4gdGhlIHN0YXRlcyB1bmRlciB0aGUgY292ZW5hbnQgc2hhbGwgYmUgZGlzaG9uZXN0IG9yIGluIGFueSB3YXkKCQkJCQlpbW1vcmFsLCBidXQgb25seSB0aGF0IHRoZXkgc2hhbGwgbm90IGNvbW1pdCBhbnkgd3JvbmcgYWdhaW5zdCBlYWNoIG90aGVyLiBBbGwKCQkJCQl0aG9zZSBvbiB0aGUgb3RoZXIgaGFuZCB3aG8gYXJlIGNvbmNlcm5lZCBhYm91dCBnb29kIGdvdmVybm1lbnQgZG8gdGFrZSBjaXZpYwoJCQkJCXZpcnR1ZSBhbmQgdmljZSBpbnRvIHRoZWlyIHB1cnZpZXcuIFRodXMgaXQgaXMgYWxzbyBjbGVhciB0aGF0IGFueSBzdGF0ZSB0aGF0IGlzCgkJCQkJdHJ1bHkgc28gY2FsbGVkIGFuZCBpcyBub3QgYSBzdGF0ZSBtZXJlbHkgaW4gbmFtZSBtdXN0IHBheSBhdHRlbnRpb24gdG8gdmlydHVlOwoJCQkJCWZvciBvdGhlcndpc2UgdGhlIGNvbW11bml0eSBiZWNvbWVzIG1lcmVseSBhbiBhbGxpYW5jZSwgZGlmZmVyaW5nIG9ubHkgaW4KCQkJCQlsb2NhbGl0eSBmcm9tIHRoZSBvdGhlciBhbGxpYW5jZXMsIHRob3NlIG9mIGFsbGllcyB0aGF0IGxpdmUgYXBhcnQuIEFuZCB0aGUgbGF3CgkJCQkJaXMgYSBjb3ZlbmFudCBvciwgaW4gdGhlIHBocmFzZSBvZiB0aGUgc29waGlzdCBMeWNvcGhyb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlByb2JhYmx5IGEgcHVwaWwgb2YgR29yZ2lhcywgc2VlIDEyNzViIDI2IG4uPC9ub3RlPiBhCgkJCQkJZ3VhcmFudGVlIG9mIG1lbidzIGp1c3QgY2xhaW1zIG9uIG9uZSBhbm90aGVyLCBidXQgaXQgaXMgbm90IGRlc2lnbmVkIHRvIG1ha2UKCQkJCQl0aGUgY2l0aXplbnMgdmlydHVvdXMgYW5kIGp1c3QuIDwvdHJhbnNsYXRpb24+"
translation['3.1280b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZAoJCQkJCXRoYXQgdGhpcyBpcyBob3cgdGhlIG1hdHRlciBzdGFuZHMgaXMgbWFuaWZlc3QuIEZvciBpZiBvbmUgd2VyZSBhY3R1YWxseSB0bwoJCQkJCWJyaW5nIHRoZSBzaXRlcyBvZiB0d28gY2l0aWVzIHRvZ2V0aGVyIGludG8gb25lLCBzbyB0aGF0IHRoZSBjaXR5LXdhbGxzIG9mCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWVnYXJhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNZWdhcmEiPk1lZ2FyYTwvcGxhY2VOYW1lPiBhbmQgdGhvc2Ugb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb3JpbnRoIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDb3JpbnRoIj5Db3JpbnRoPC9wbGFjZU5hbWU+IHdlcmUgY29udGlndW91cywgZXZlbiBzbyB0aGV5CgkJCQkJd291bGQgbm90IGJlIG9uZSBjaXR5OyBub3Igd291bGQgdGhleSBpZiB0aGV5IGVuYWN0ZWQgcmlnaHRzIG9mIGludGVybWFycmlhZ2UKCQkJCQl3aXRoIGVhY2ggb3RoZXIsIGFsdGhvdWdoIGludGVybWFycmlhZ2UgYmV0d2VlbiBjaXRpemVucyBpcyBvbmUgb2YgdGhlIGVsZW1lbnRzCgkJCQkJb2YgY29tbXVuaXR5IHdoaWNoIGFyZSBjaGFyYWN0ZXJpc3RpYyBvZiBzdGF0ZXMuIEFuZCBzaW1pbGFybHkgZXZlbiBpZiBjZXJ0YWluCgkJCQkJcGVvcGxlIGxpdmVkIGluIHNlcGFyYXRlIHBsYWNlcyB5ZXQgbm90IHNvIGZhciBhcGFydCBhcyBub3QgdG8gaGF2ZSBpbnRlcmNvdXJzZSwKCQkJCQlidXQgaGFkIGxhd3MgdG8gcHJldmVudCB0aGVpciB3cm9uZ2luZyBvbmUgYW5vdGhlcjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5pbiB0aGVpciBpbnRlcmNoYW5nZSBvZiBwcm9kdWN0c+KAlCBmb3IgaW5zdGFuY2UsIGlmCgkJCQkJb25lIG1hbiB3ZXJlIGEgY2FycGVudGVyLCBhbm90aGVyIGEgZmFybWVyLCBhbm90aGVyIGEgc2hvZW1ha2VyIGFuZCBhbm90aGVyCgkJCQkJc29tZXRoaW5nIGVsc2Ugb2YgdGhlIGtpbmQs4oCUYW5kIHRoZSB3aG9sZSBwb3B1bGF0aW9uIG51bWJlcmVkIHRlbgoJCQkJCXRob3VzYW5kLCBidXQgbmV2ZXJ0aGVsZXNzIHRoZXkgaGFkIG5vIG11dHVhbCBkZWFsaW5ncyBpbiBhbnl0aGluZyBlbHNlIGV4Y2VwdAoJCQkJCXN1Y2ggdGhpbmdzIGFzIGV4Y2hhbmdlIG9mIGNvbW1vZGl0aWVzIGFuZCBtaWxpdGFyeSBhbGxpYW5jZSwgZXZlbiB0aGVuIHRoaXMKCQkJCQl3b3VsZCBzdGlsbCBub3QgYmUgYSBzdGF0ZS4gPC90cmFuc2xhdGlvbj4="
translation['3.1281a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPldoYXQKCQkJCQl0aGVuIGV4YWN0bHkgaXMgdGhlIHJlYXNvbiBmb3IgdGhpcz8gZm9yIGNsZWFybHkgaXQgaXMgbm90IGJlY2F1c2UgdGhlaXIKCQkJCQlpbnRlcmNvdXJzZSBpcyBmcm9tIGEgZGlzdGFuY2Ugc2luY2UgZXZlbiBpZiB0aGV5IGNhbWUgdG9nZXRoZXIgZm9yIGludGVyY291cnNlCgkJCQkJb2YgdGhpcyBzb3J0IO+8iGVhY2ggbmV2ZXJ0aGVsZXNzIHVzaW5nIGhpcyBpbmRpdmlkdWFsIGhvdXNlIGFzIGEKCQkJCQljaXR577yJIGFuZCBmb3Igb25lIGFub3RoZXIncyBtaWxpdGFyeSBhaWQgYWdhaW5zdCB3cm9uZ2Z1bCBhZ2dyZXNzb3JzCgkJCQkJb25seSwgYXMgdW5kZXIgYSBkZWZlbnNpdmUgYWxsaWFuY2UsIG5vdCBldmVuIHRoZW4gd291bGQgdGhleSBzZWVtIHRvIHRob3NlIHdobwoJCQkJCWNvbnNpZGVyIHRoZSBtYXR0ZXIgY2FyZWZ1bGx5IHRvIGNvbnN0aXR1dGUgYSBzdGF0ZSwgaWYgdGhleSBhc3NvY2lhdGVkIG9uIHRoZQoJCQkJCXNhbWUgZm9vdGluZyB3aGVuIHRoZXkgY2FtZSB0b2dldGhlciBhcyB0aGV5IGRpZCB3aGVuIHRoZXkgd2VyZSBhcGFydC4gSXQgaXMKCQkJCQltYW5pZmVzdCB0aGVyZWZvcmUgdGhhdCBhIHN0YXRlIGlzIG5vdCBtZXJlbHkgdGhlIHNoYXJpbmcgb2YgYSBjb21tb24gbG9jYWxpdHkKCQkJCQlmb3IgdGhlIHB1cnBvc2Ugb2YgcHJldmVudGluZyBtdXR1YWwgaW5qdXJ5IGFuZCBleGNoYW5naW5nIGdvb2RzLiBUaGVzZSBhcmUKCQkJCQluZWNlc3NhcnkgcHJlY29uZGl0aW9ucyBvZiBhIHN0YXRlJ3MgZXhpc3RlbmNlLCB5ZXQgbmV2ZXJ0aGVsZXNzLCBldmVuIGlmIGFsbAoJCQkJCXRoZXNlIGNvbmRpdGlvbnMgYXJlIHByZXNlbnQsIHRoYXQgZG9lcyBub3QgdGhlcmVmb3JlIG1ha2UgYSBzdGF0ZSwgYnV0IGEgc3RhdGUKCQkJCQlpcyBhIHBhcnRuZXJzaGlwIG9mIGZhbWlsaWVzIGFuZCBvZiBjbGFucyBpbiBsaXZpbmcgd2VsbCwgYW5kIGl0cyBvYmplY3QgaXMgYQoJCQkJCWZ1bGwgYW5kIGluZGVwZW5kZW50IGxpZmUuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkF0IHRoZQoJCQkJCXNhbWUgdGltZSB0aGlzIHdpbGwgbm90IGJlIHJlYWxpemVkIHVubGVzcyB0aGUgcGFydG5lcnMgZG8gaW5oYWJpdCBvbmUgYW5kIHRoZQoJCQkJCXNhbWUgbG9jYWxpdHkgYW5kIHByYWN0aXNlIGludGVybWFycmlhZ2U7IHRoaXMgaW5kZWVkIGlzIHRoZSByZWFzb24gd2h5IGZhbWlseQoJCQkJCXJlbGF0aW9uc2hpcHMgaGF2ZSBhcmlzZW4gdGhyb3VnaG91dCB0aGUgc3RhdGVzLCBhbmQgYnJvdGhlcmhvb2RzIGFuZCBjbHVicyBmb3IKCQkJCQlzYWNyaWZpY2lhbCByaXRlcyBhbmQgc29jaWFsIHJlY3JlYXRpb25zLiBCdXQgc3VjaCBvcmdhbml6YXRpb24gaXMgcHJvZHVjZWQgYnkKCQkJCQl0aGUgZmVlbGluZyBvZiBmcmllbmRzaGlwLCBmb3IgZnJpZW5kc2hpcCBpcyB0aGUgbW90aXZlIG9mIHNvY2lhbCBsaWZlOwoJCQkJCXRoZXJlZm9yZSwgd2hpbGUgdGhlIG9iamVjdCBvZiBhIHN0YXRlIGlzIHRoZSBnb29kIGxpZmUsIHRoZXNlIHRoaW5ncyBhcmUgbWVhbnMKCQkJCQl0byB0aGF0IGVuZC4gQW5kIGEgc3RhdGUgaXMgdGhlIHBhcnRuZXJzaGlwIG9mIGNsYW5zIGFuZCB2aWxsYWdlcyBpbiBhIGZ1bGwgYW5kCgkJCQkJaW5kZXBlbmRlbnQgbGlmZSwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyODFhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1281a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPndoaWNoIGluIG91ciB2aWV3IGNvbnN0aXR1dGVzIGEgaGFwcHkgYW5kIG5vYmxlCgkJCQkJbGlmZTsgdGhlIHBvbGl0aWNhbCBmZWxsb3dzaGlwIG11c3QgdGhlcmVmb3JlIGJlIGRlZW1lZCB0byBleGlzdCBmb3IgdGhlIHNha2Ugb2YKCQkJCQlub2JsZSBhY3Rpb25zLCBub3QgbWVyZWx5IGZvciBsaXZpbmcgaW4gY29tbW9uLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1281a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlIHRob3NlIHdobyBjb250cmlidXRlIG1vc3QgdG8gc3VjaCBmZWxsb3dzaGlwIGhhdmUgYQoJCQkJCWxhcmdlciBwYXJ0IGluIHRoZSBzdGF0ZSB0aGFuIHRob3NlIHdobyBhcmUgdGhlaXIgZXF1YWxzIG9yIHN1cGVyaW9ycyBpbiBmcmVlZG9tCgkJCQkJYW5kIGJpcnRoIGJ1dCBub3QgdGhlaXIgZXF1YWxzIGluIGNpdmljIHZpcnR1ZSwgb3IgdGhhbiB0aG9zZSB3aG8gc3VycGFzcyB0aGVtCgkJCQkJaW4gd2VhbHRoIGJ1dCBhcmUgc3VycGFzc2VkIGJ5IHRoZW0gaW4gdmlydHVlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdAoJCQkJCWlzIHRoZXJlZm9yZSBjbGVhciBmcm9tIHdoYXQgaGFzIGJlZW4gc2FpZCB0aGF0IGFsbCB0aG9zZSB3aG8gZGlzcHV0ZSBhYm91dCB0aGUKCQkJCQlmb3JtcyBvZiBjb25zdGl0dXRpb24gYXNzZXJ0IGEgcGFydCBvZiB0aGUganVzdCBwcmluY2lwbGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGl0IGlzIGEgbWF0dGVyCgkJCQkJb2YgcXVlc3Rpb24gd2hhdCBvdWdodCB0byBiZSB0aGUgc292ZXJlaWduIHBvd2VyIGluIHRoZSBzdGF0ZS4gQ2xlYXJseSBpdCBtdXN0CgkJCQkJYmUgZWl0aGVyIHRoZSBtdWx0aXR1ZGUsIG9yIHRoZSByaWNoLCBvciB0aGUgZ29vZCwgb3IgdGhlIG9uZSBtYW4gd2hvIGlzIGJlc3Qgb2YKCQkJCQlhbGwsIG9yIGEgdHlyYW50LiBCdXQgYWxsIG9mIHRoZXNlIGFycmFuZ2VtZW50cyBhcHBlYXIgdG8gaW52b2x2ZSBkaXNhZ3JlZWFibGUKCQkJCQljb25zZXF1ZW5jZXMuIEZvciBpbnN0YW5jZSwgaWYgdGhlIHBvb3IgdGFrZSBhZHZhbnRhZ2Ugb2YgdGhlaXIgZ3JlYXRlciBudW1iZXJzCgkJCQkJdG8gZGl2aWRlIHVwIHRoZSBwcm9wZXJ0eSBvZiB0aGUgcmljaCwgaXMgbm90IHRoaXMgdW5qdXN0PyBObywgaXQgbWF5IGJlIHNhaWQsCgkJCQkJZm9yIGl0IHdhcyBhIHJlc29sdXRpb24gbWFkZSBieSB0aGUgc3VwcmVtZSBhdXRob3JpdHkgaW4ganVzdCBmb3JtLiBUaGVuIHdoYXQKCQkJCQltdXN0IGJlIHByb25vdW5jZWQgdG8gYmUgdGhlIGV4dHJlbWUgb2YgaW5qdXN0aWNlPyBBbmQgYWdhaW4sIHdoZW4gZXZlcnlib2R5IGlzCgkJCQkJdGFrZW4gaW50byBhY2NvdW50LCBzdXBwb3NlIHRoZSBtYWpvcml0eSBzaGFyZSBvdXQgYW1vbmcgdGhlbXNlbHZlcyB0aGUgcHJvcGVydHkKCQkJCQlvZiB0aGUgbWlub3JpdHksIGl0IGlzIG1hbmlmZXN0IHRoYXQgdGhleSBhcmUgZGVzdHJveWluZyB0aGUgc3RhdGU7IGJ1dAoJCQkJCWFzc3VyZWRseSB2aXJ0dWUgZG9lcyBub3QgZGVzdHJveTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5pdHMKCQkJCQlwb3NzZXNzb3IsIGFuZCBqdXN0aWNlIGlzIG5vdCBkZXN0cnVjdGl2ZSBvZiB0aGUgc3RhdGUsIHNvIHRoYXQgaXQgaXMgY2xlYXIgdGhhdAoJCQkJCXRoaXMgcHJpbmNpcGxlIGFsc28gY2Fubm90IGJlIGp1c3QuIDwvdHJhbnNsYXRpb24+"
translation['3.1281b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QWxzbyBpdCBmb2xsb3dzIGZyb20gaXQgdGhhdCBhbGwgdGhlIGFjdGlvbnMgZG9uZSBieSBhIHR5cmFudCBhcmUganVzdCwgZm9yCgkJCQkJaGlzIHVzZSBvZiBmb3JjZSBpcyBiYXNlZCB1cG9uIHN1cGVyaW9yIHN0cmVuZ3RoLCBhcyBpcyB0aGUgY29tcHVsc2lvbiBleGVydGVkCgkJCQkJYnkgdGhlIG11bHRpdHVkZSBhZ2FpbnN0IHRoZSByaWNoLiBCdXQgaXMgaXQganVzdCB0aGF0IHRoZSBtaW5vcml0eSBhbmQgdGhlIHJpY2gKCQkJCQlzaG91bGQgcnVsZT8gU3VwcG9zZSB0aGVyZWZvcmUgdGhleSBhbHNvIGFjdCBpbiB0aGUgc2FtZSB3YXkgYW5kIHBsdW5kZXIgYW5kCgkJCQkJdGFrZSBhd2F5IHRoZSBwcm9wZXJ0eSBvZiB0aGUgbXVsdGl0dWRlLCBpcyB0aGlzIGp1c3Q/IElmIGl0IGlzLCBzbyBhbHNvIGlzIHRoZQoJCQkJCXBsdW5kZXIgb2YgdGhlIHJpY2ggYnkgdGhlIG11bHRpdHVkZS4gSXQgaXMgY2xlYXIgdGhlcmVmb3JlIHRoYXQgYWxsIHRoZXNlCgkJCQkJdGhpbmdzIGFyZSBiYWQgYW5kIG5vdCBqdXN0LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dAoJCQkJCW91Z2h0IHRoZSBnb29kIHRvIHJ1bGUsIGFuZCBiZSBpbiBjb250cm9sIG9mIGFsbCBjbGFzc2VzPyBJZiBzbywgdGhlbiBpdCBmb2xsb3dzCgkJCQkJdGhhdCBhbGwgdGhlIG90aGVyIGNsYXNzZXMgd2lsbCBiZSBkaXNob25vcmVkLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgdGVybSBpcyB0ZWNobmljYWwgYW5kIG1lYW5zIGRpc2ZyYW5jaGlzZW1lbnQgYW5kIGxvc3Mgb2YKCQkJCQkJY2l2aWMgcmlnaHRzLjwvbm90ZT4gaWYgdGhleSBhcmUgbm90IGhvbm9yZWQgYnkgaG9sZGluZyB0aGUgb2ZmaWNlcyBvZgoJCQkJCWdvdmVybm1lbnQ7IGZvciB3ZSBzcGVhayBvZiBvZmZpY2VzIGFzIGhvbm9ycywgYW5kIGlmIHRoZSBzYW1lIHBlcnNvbnMgYXJlCgkJCQkJYWx3YXlzIGluIG9mZmljZSB0aGUgcmVzdCBtdXN0IG5lY2Vzc2FyaWx5IGJlIGV4Y2x1ZGVkIGZyb20gaG9ub3IuIEJ1dCBpcyBpdAoJCQkJCWJldHRlciBmb3IgdGhlIG1vc3QgdmlydHVvdXMgaW5kaXZpZHVhbCB0byBiZSB0aGUgcnVsZXI/IEJ1dCB0aGF0IGlzIHN0aWxsIG1vcmUKCQkJCQlvbGlnYXJjaGljYWwsIGZvciB0aGUgcGVvcGxlIGV4Y2x1ZGVkIGZyb20gaG9ub3Igd2lsbCBiZSBtb3JlIG51bWVyb3VzLiBCdXQKCQkJCQlwZXJoYXBzIHNvbWUgb25lIHdvdWxkIHNheSB0aGF0IGluIGFueSBjYXNlIGl0IGlzIGEgYmFkIHRoaW5nIGZvciBhIGh1bWFuIGJlaW5nLAoJCQkJCWhhdmluZyBpbiBoaXMgc291bCB0aGUgcGFzc2lvbnMgdGhhdCBhcmUgdGhlIGF0dHJpYnV0ZXMgb2YgaHVtYW5pdHksIHRvIGJlCgkJCQkJc292ZXJlaWduLCBhbmQgbm90IHRoZSBsYXcuIFN1cHBvc2UgdGhlcmVmb3JlIHRoYXQgbGF3IGlzIHNvdmVyZWlnbiwgYnV0IGxhdyBvZgoJCQkJCWFuIG9saWdhcmNoaWMgb3IgZGVtb2NyYXRpYyBuYXR1cmUsIHdoYXQgZGlmZmVyZW5jZSB3aWxsIGl0IG1ha2UgYXMgcmVnYXJkcyB0aGUKCQkJCQlkaWZmaWN1bHRpZXMgdGhhdCBoYXZlIGJlZW4gcmFpc2VkPyBmb3IgdGhlIHJlc3VsdHMgZGVzY3JpYmVkIGJlZm9yZSB3aWxsIGNvbWUKCQkJCQlhYm91dCBqdXN0IHRoZSBzYW1lLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi40IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk1vc3Qgb2YgdGhlc2UgcG9pbnRzIHRoZXJlZm9yZSBtdXN0IGJlIGRpc2N1c3NlZCBvbgoJCQkJCWFub3RoZXIgb2NjYXNpb247IGJ1dCB0aGUgdmlldyB0aGF0IGl0IGlzIG1vcmUgcHJvcGVyIGZvciB0aGUgbXVsdGl0dWRlIHRvIGJlCgkJCQkJc292ZXJlaWduIHRoYW4gdGhlIGZldyBvZiBncmVhdGVzdCB2aXJ0dWUgbWlnaHQgYmUgdGhvdWdodCB0byBiZSBleHBsaWNhYmxlIGFuZAoJCQkJCXRvIGhhdmUgc29tZSBqdXN0aWZpY2F0aW9uLCBhbmQgZXZlbiB0byBiZSB0aGUgdHJ1ZSB2aWV3LiBGb3IgaXQgaXMgcG9zc2libGUKCQkJCQl0aGF0IHRoZSBtYW55LCB0aG91Z2ggbm90IGluZGl2aWR1YWxseSBnb29kIG1lbiwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyODFiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1281b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnlldCB3aGVuIHRoZXkgY29tZQoJCQkJCXRvZ2V0aGVyIG1heSBiZSBiZXR0ZXIsIG5vdCBpbmRpdmlkdWFsbHkgYnV0IGNvbGxlY3RpdmVseSwgdGhhbiB0aG9zZSB3aG8gYXJlCgkJCQkJc28sIGp1c3QgYXMgcHVibGljIGRpbm5lcnMgdG8gd2hpY2ggbWFueSBjb250cmlidXRlIGFyZSBiZXR0ZXIgdGhhbiB0aG9zZQoJCQkJCXN1cHBsaWVkIGF0IG9uZSBtYW4ncyBjb3N0OyBmb3Igd2hlcmUgdGhlcmUgYXJlIG1hbnksIGVhY2ggaW5kaXZpZHVhbCwgaXQgbWF5IGJlCgkJCQkJYXJndWVkLCBoYXMgc29tZSBwb3J0aW9uIG9mIHZpcnR1ZSBhbmQgd2lzZG9tLCBhbmQgd2hlbiB0aGV5IGhhdmUgY29tZSB0b2dldGhlciwKCQkJCQlqdXN0IGFzIHRoZSBtdWx0aXR1ZGUgYmVjb21lcyBhIHNpbmdsZSBtYW4gd2l0aCBtYW55IGZlZXQgYW5kIG1hbnkgaGFuZHMgYW5kCgkJCQkJbWFueSBzZW5zZXMsIHNvIGFsc28gaXQgYmVjb21lcyBvbmUgcGVyc29uYWxpdHkgYXMgcmVnYXJkcyB0aGUgbW9yYWwgYW5kCgkJCQkJaW50ZWxsZWN0dWFsIGZhY3VsdGllcy4gVGhpcyBpcyB3aHkgdGhlIGdlbmVyYWwgcHVibGljIGlzIGEgYmV0dGVyIGp1ZGdlIG9mIHRoZQoJCQkJCXdvcmtzIG9mIG11c2ljIGFuZCB0aG9zZSBvZiB0aGUgcG9ldHMsIGJlY2F1c2UgZGlmZmVyZW50IG1lbiBjYW4ganVkZ2UgYQoJCQkJCWRpZmZlcmVudCBwYXJ0IG9mIHRoZSBwZXJmb3JtYW5jZSwgYW5kIGFsbCBvZiB0aGVtIGFsbCBvZiBpdC4gPC90cmFuc2xhdGlvbj4="
translation['3.1281b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZSBzdXBlcmlvcml0eSBvZiBnb29kIG1lbiBvdmVyIHRoZSBtYXNzIG9mCgkJCQkJbWVuIGluZGl2aWR1YWxseSwgbGlrZSB0aGF0IG9mIGhhbmRzb21lIG1lbiwgc28gaXQgaXMgc2FpZCwgb3ZlciBwbGFpbiBtZW4gYW5kCgkJCQkJb2YgdGhlIHdvcmtzIG9mIHRoZSBwYWludGVyJ3MgYXJ0IG92ZXIgdGhlIHJlYWwgb2JqZWN0cywgcmVhbGx5IGNvbnNpc3RzIGluCgkJCQkJdGhpcywgdGhhdCBhIG51bWJlciBvZiBzY2F0dGVyZWQgZ29vZCBwb2ludHMgaGF2ZSBiZWVuIGNvbGxlY3RlZCB0b2dldGhlciBpbnRvCgkJCQkJb25lIGV4YW1wbGU7IHNpbmNlIGlmIHRoZSBmZWF0dXJlcyBiZSB0YWtlbiBzZXBhcmF0ZWx5LCB0aGUgZXllIG9mIG9uZSByZWFsCgkJCQkJcGVyc29uIGlzIG1vcmUgYmVhdXRpZnVsIHRoYW4gdGhhdCBvZiB0aGUgbWFuIGluIHRoZSBwaWN0dXJlLCBhbmQgc29tZSBvdGhlcgoJCQkJCWZlYXR1cmUgb2Ygc29tZWJvZHkgZWxzZS4gSXQgaXMgbm90IGluZGVlZCBjbGVhciB3aGV0aGVyIHRoaXMgY29sbGVjdGl2ZQoJCQkJCXN1cGVyaW9yaXR5IG9mIHRoZSBtYW55IGNvbXBhcmVkIHdpdGggdGhlIGZldyBnb29kIG1lbiBjYW4gcG9zc2libHkgZXhpc3QgaW4KCQkJCQlyZWdhcmQgdG8gZXZlcnkgZGVtb2NyYWN5IGFuZCBldmVyeSBtdWx0aXR1ZGUsIGFuZCBwZXJoYXBzIGl0IG1heSBiZSB1cmdlZCB0aGF0CgkJCQkJaXQgaXMgbWFuaWZlc3RseSBpbXBvc3NpYmxlIGluIHRoZSBjYXNlIG9mIHNvbWXigJRmb3IgdGhlIHNhbWUgYXJndW1lbnQKCQkJCQl3b3VsZCBhbHNvIGFwcGx5IHRvIGFuaW1hbHMsIHlldCB3aGF0IGRpZmZlcmVuY2UgaXMgdGhlcmUsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnByYWN0aWNhbGx5LCBiZXR3ZWVuIHNvbWUgbXVsdGl0dWRlcyBhbmQKCQkJCQlhbmltYWxzP+KAlGJ1dCBub3RoaW5nIHByZXZlbnRzIHdoYXQgaGFzIGJlZW4gc2FpZCBmcm9tIGJlaW5nIHRydWUgYWJvdXQKCQkJCQlzb21lIHBhcnRpY3VsYXIgbXVsdGl0dWRlLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1282a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi42IiB1bml0PSJMb2ViIGNoYXAiIC8+T25lIG1pZ2h0CgkJCQkJdGhlcmVmb3JlIGVtcGxveSB0aGVzZSBjb25zaWRlcmF0aW9ucyB0byBzb2x2ZSBub3Qgb25seSB0aGUgcHJldmlvdXNseSBzdGF0ZWQKCQkJCQlkaWZmaWN1bHR5IGJ1dCBhbHNvIHRoZSByZWxhdGVkIHF1ZXN0aW9uLCBvdmVyIHdoYXQgbWF0dGVycyBpcyB0aGUgYXV0aG9yaXR5IG9mCgkJCQkJdGhlIGZyZWVtZW4sIHRoZSBtYXNzIG9mIHRoZSBjaXRpemVucywgdG8gZXh0ZW5kIO+8iHVzaW5nIHRoYXQgZXhwcmVzc2lvbgoJCQkJCXRvIGRlbm90ZSB0aG9zZSB3aG8gYXJlIG5vdCByaWNoIG5vciBwb3NzZXNzZWQgb2YgYW55IGRpc3Rpbmd1aXNoaW5nIGV4Y2VsbGVuY2UKCQkJCQlhdCBhbGzvvIk/IEZvciBpdCBpcyBub3Qgc2FmZSBmb3IgdGhlbSB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUgaGlnaGVzdAoJCQkJCW9mZmljZXMg77yIZm9yIGluanVzdGljZSBhbmQgZm9sbHkgd291bGQgaW5ldml0YWJseSBjYXVzZSB0aGVtIHRvIGFjdAoJCQkJCXVuanVzdGx5IGluIHNvbWUgdGhpbmdzIGFuZCB0byBtYWtlIG1pc3Rha2VzIGluIG90aGVyc++8iSwgYnV0IHlldCBub3QgdG8KCQkJCQlhZG1pdCB0aGVtIGFuZCBmb3IgdGhlbSBub3QgdG8gcGFydGljaXBhdGUgaXMgYW4gYWxhcm1pbmcgc2l0dWF0aW9uLCBmb3Igd2hlbgoJCQkJCXRoZXJlIGFyZSBhIG51bWJlciBvZiBwZXJzb25zIHdpdGhvdXQgcG9saXRpY2FsIGhvbm9ycyBhbmQgaW4gcG92ZXJ0eSwgdGhlIGNpdHkKCQkJCQl0aGVuIGlzIGJvdW5kIHRvIGJlIGZ1bGwgb2YgZW5lbWllcy4gSXQgcmVtYWlucyB0aGVyZWZvcmUgZm9yIHRoZW0gdG8gc2hhcmUgdGhlCgkJCQkJZGVsaWJlcmF0aXZlIGFuZCBqdWRpY2lhbCBmdW5jdGlvbnMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi43IiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIHRoaXMgcmVhc29uIFNvbG9uIGFuZCBjZXJ0YWluIG90aGVyIGxhd2dpdmVycyBhcHBvaW50IHRoZSBjb21tb24gY2l0aXplbnMKCQkJCQkJdG88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UHJvYmFibHkgd29yZHMgbWVhbmluZwoJCQkJCQnigJh0aGVzZSBmdW5jdGlvbnMgYW5kIHRv4oCZIGhhdmUgZmFsbGVuIG91dC48L25vdGU+IHRoZQoJCQkJCWVsZWN0aW9uIG9mIHRoZSBtYWdpc3RyYXRlcyBhbmQgdGhlIGZ1bmN0aW9uIG9mIGNhbGxpbmcgdGhlbSB0byBhdWRpdCwgYWx0aG91Z2gKCQkJCQl0aGV5IGRvIG5vdCBhbGxvdyB0aGVtIHRvIGhvbGQgb2ZmaWNlIHNpbmdseS4gRm9yIGFsbCB3aGVuIGFzc2VtYmxlZCB0b2dldGhlcgoJCQkJCWhhdmUgc3VmZmljaWVudCBkaXNjZXJubWVudCwgYW5kIGJ5IG1pbmdsaW5nIHdpdGggdGhlIGJldHRlciBjbGFzcyBhcmUgb2YKCQkJCQliZW5lZml0IHRvIHRoZSBzdGF0ZSwganVzdCBhcyBpbXB1cmUgZm9vZCBtaXhlZCB3aXRoIHdoYXQgaXMgcHVyZSBtYWtlcyB0aGUKCQkJCQl3aG9sZSBtb3JlIG5vdXJpc2hpbmcgdGhhbiB0aGUgc21hbGwgYW1vdW50IG9mIHB1cmUgZm9vZCBhbG9uZTsgYnV0IHNlcGFyYXRlbHkKCQkJCQl0aGUgaW5kaXZpZHVhbCBpcyBpbW1hdHVyZSBpbiBqdWRnZW1lbnQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi44IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhpcyBhcnJhbmdlbWVudCBvZiB0aGUgY29uc3RpdHV0aW9uIGlzIGhvd2V2ZXIgb3BlbiB0bwoJCQkJCXF1ZXN0aW9uIGluIHRoZSBmaXJzdCBwbGFjZSBvbiB0aGUgZ3JvdW5kIHRoYXQgaXQgbWlnaHQgYmUgaGVsZCB0aGF0IHRoZSBiZXN0CgkJCQkJbWFuIHRvIGp1ZGdlIHdoaWNoIHBoeXNpY2lhbiBoYXMgZ2l2ZW4gdGhlIHJpZ2h0IHRyZWF0bWVudCBpcyB0aGUgbWFuIHRoYXQgaXMKCQkJCQloaW1zZWxmIGNhcGFibGUgb2YgdHJlYXRpbmcgYW5kIGN1cmluZyB0aGUgcGF0aWVudCBvZiBoaXMgcHJlc2VudCBkaXNlYXNlLCBhbmQKCQkJCQl0aGlzIGlzIHRoZSBtYW4gd2hvIGlzIGhpbXNlbGYgYSBwaHlzaWNpYW47IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjgyYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1282a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGF0IHRoaXMgaXMgdGhlIGNhc2UKCQkJCQlzaW1pbGFybHkgd2l0aCByZWdhcmQgdG8gdGhlIG90aGVyIGFydHMgYW5kIGNyYWZ0cy4gSGVuY2UganVzdCBhcyBhIGNvdXJ0IG9mCgkJCQkJcGh5c2ljaWFucyBtdXN0IGp1ZGdlIHRoZSB3b3JrIG9mIGEgcGh5c2ljaWFuLCBzbyBhbHNvIGFsbCBvdGhlciBwcmFjdGl0aW9uZXJzCgkJCQkJb3VnaHQgdG8gYmUgY2FsbGVkIHRvIGFjY291bnQgYmVmb3JlIHRoZWlyIGZlbGxvd3MuIEJ1dAoJCQkJCeKAmHBoeXNpY2lhbuKAmSBtZWFucyBib3RoIHRoZSBvcmRpbmFyeSBwcmFjdGl0aW9uZXIsIGFuZCB0aGUKCQkJCQltYXN0ZXIgb2YgdGhlIGNyYWZ0LCBhbmQgdGhpcmRseSwgdGhlIG1hbiB3aG8gaGFzIHN0dWRpZWQgbWVkaWNpbmUgYXMgcGFydCBvZgoJCQkJCWhpcyBnZW5lcmFsIGVkdWNhdGlvbiDvvIhmb3IgaW4gYWxtb3N0IGFsbCB0aGUgYXJ0cyB0aGVyZSBhcmUgc29tZSBzdWNoCgkJCQkJc3R1ZGVudHMsIGFuZCB3ZSBhc3NpZ24gdGhlIHJpZ2h0IG9mIGp1ZGdlbWVudCBqdXN0IGFzIG11Y2ggdG8gY3VsdGl2YXRlZAoJCQkJCWFtYXRldXJzIGFzIHRvIGV4cGVydHPvvIkuIDwvdHJhbnNsYXRpb24+"
translation['3.1282a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi45IiB1bml0PSJMb2ViIGNoYXAiIC8+RnVydGhlciB0aGUgc2FtZSBtaWdodCBiZSB0aG91Z2h0IHRvIGhvbGQgZ29vZCBhbHNvIG9mIHRoZSBlbGVjdGlvbiBvZgoJCQkJCW9mZmljaWFscywgZm9yIHRvIGVsZWN0IHJpZ2h0bHkgaXMgYSB0YXNrIGZvciBleHBlcnRz4oCUZm9yIGV4YW1wbGUsIGl0CgkJCQkJaXMgZm9yIGV4cGVydHMgaW4gdGhlIHNjaWVuY2Ugb2YgbWVuc3VyYXRpb24gdG8gZWxlY3QgYSBsYW5kLXN1cnZleW9yIGFuZCBmb3IKCQkJCQlleHBlcnRzIGluIG5hdmlnYXRpb24gdG8gY2hvb3NlIGEgcGlsb3Q7IGZvciBldmVuIHRob3VnaCBpbiBzb21lIG9jY3VwYXRpb25zIGFuZAoJCQkJCWFydHMgc29tZSBsYXltZW4gYWxzbyBoYXZlIGEgdm9pY2UgaW4gYXBwb2ludG1lbnRzLCB5ZXQgdGhleSBjZXJ0YWlubHkgZG8gbm90CgkJCQkJaGF2ZSBtb3JlIHZvaWNlIHRoYW4gdGhlIGV4cGVydHMuIEhlbmNlIGFjY29yZGluZyB0byB0aGlzIGFyZ3VtZW50IHRoZSBtYXNzZXMKCQkJCQlzaG91bGQgbm90IGJlIHB1dCBpbiBjb250cm9sIG92ZXIgZWl0aGVyIHRoZSBlbGVjdGlvbiBvZiBtYWdpc3RyYXRlcyBvciB0aGVpcgoJCQkJCWF1ZGl0LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgcGVyaGFwcyB0aGlzIHN0YXRlbWVudAoJCQkJCWlzIG5vdCBlbnRpcmVseSBjb3JyZWN0LCBib3RoIGZvciB0aGUgcmVhc29uIHN0YXRlZCBhYm92ZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDYuNC48L25vdGU+IGluIGNhc2UgdGhlIHBvcHVsYWNlIGlzIG5vdCBvZiB0b28gc2xhdmlzaCBhCgkJCQkJY2hhcmFjdGVyIO+8iGZvciBhbHRob3VnaCBlYWNoIGluZGl2aWR1YWwgc2VwYXJhdGVseSB3aWxsIGJlIGEgd29yc2UKCQkJCQlqdWRnZSB0aGFuIHRoZSBleHBlcnRzLCB0aGUgd2hvbGUgb2YgdGhlbSBhc3NlbWJsZWQgdG9nZXRoZXIgd2lsbCBiZSBiZXR0ZXIgb3IKCQkJCQlhdCBsZWFzdCBhcyBnb29kIGp1ZGdlc++8iSwgYW5kIGFsc28gYmVjYXVzZSBhYm91dCBzb21lIHRoaW5ncyB0aGUgbWFuCgkJCQkJd2hvIG1hZGUgdGhlbSB3b3VsZCBub3QgYmUgdGhlIG9ubHkgbm9yIHRoZSBiZXN0IGp1ZGdlLCBpbiB0aGUgY2FzZSBvZgoJCQkJCXByb2Zlc3Npb25hbHMgd2hvc2UgcHJvZHVjdHMgY29tZSB3aXRoaW4gdGhlIGtub3dsZWRnZSBvZiBsYXltZW4gYWxzbzo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dG8ganVkZ2UgYSBob3VzZSwgZm9yIGluc3RhbmNlLCBkb2VzIG5vdAoJCQkJCWJlbG9uZyBvbmx5IHRvIHRoZSBtYW4gd2hvIGJ1aWx0IGl0LCBidXQgaW4gZmFjdCB0aGUgbWFuIHdobyB1c2VzIHRoZSBob3VzZQoJCQkJCe+8iHRoYXQgaXMsIHRoZSBob3VzZWhvbGRlcu+8iSB3aWxsIGJlIGFuIGV2ZW4gYmV0dGVyIGp1ZGdlIG9mIGl0LAoJCQkJCWFuZCBhIHN0ZWVyc21hbiBqdWRnZXMgYSBydWRkZXIgYmV0dGVyIHRoYW4gYSBjYXJwZW50ZXIsIGFuZCB0aGUgZGluZXIganVkZ2VzIGEKCQkJCQliYW5xdWV0IGJldHRlciB0aGFuIHRoZSBjb29rLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGlzIGRpZmZpY3VsdHkgdGhlbgoJCQkJCW1pZ2h0IHBlcmhhcHMgYmUgdGhvdWdodCB0byBiZSBzYXRpc2ZhY3RvcmlseSBzb2x2ZWQgaW4gdGhpcyB3YXkuIDwvdHJhbnNsYXRpb24+"
translation['3.1282b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGVyZSBpcyBhbm90aGVyIGNvbm5lY3RlZCB3aXRoIGl0OiBpdAoJCQkJCWlzIHRob3VnaHQgdG8gYmUgYWJzdXJkIHRoYXQgdGhlIGJhc2Ugc2hvdWxkIGJlIGluIGNvbnRyb2wgb3ZlciBtb3JlIGltcG9ydGFudAoJCQkJCW1hdHRlcnMgdGhhbiB0aGUgcmVzcGVjdGFibGU7IGJ1dCB0aGUgYXVkaXRzIGFuZCB0aGUgZWxlY3Rpb25zIG9mIG1hZ2lzdHJhdGVzCgkJCQkJYXJlIGEgdmVyeSBpbXBvcnRhbnQgbWF0dGVyLCB5ZXQgaW4gc29tZSBjb25zdGl0dXRpb25zLCBhcyBoYXMgYmVlbiBzYWlkLCB0aGV5CgkJCQkJYXJlIGFzc2lnbmVkIHRvIHRoZSBjb21tb24gcGVvcGxlLCBmb3IgYWxsIHN1Y2ggbWF0dGVycyBhcmUgdW5kZXIgdGhlIGNvbnRyb2wgb2YKCQkJCQl0aGUgYXNzZW1ibHksIHlldCBwZXJzb25zIG9mIGEgbG93IHByb3BlcnR5LWFzc2Vzc21lbnQgYW5kIG9mIGFueSBhZ2UgdGFrZSBwYXJ0CgkJCQkJaW4gdGhlIGFzc2VtYmx5IGFuZCB0aGUgY291bmNpbCBhbmQgc2l0IG9uIGp1cmllcywgd2hlcmVhcyB0cmVhc3VyeSBvZmZpY2lhbHMsCgkJCQkJZ2VuZXJhbHMgYW5kIHRoZSBob2xkZXJzIG9mIHRoZSBoaWdoZXN0IG1hZ2lzdHJhY2llcyBhcmUgZHJhd24gZnJvbSBhbW9uZwoJCQkJCXBlcnNvbnMgb2YgbGFyZ2UgcHJvcGVydHkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPk5vdyB0aGlzCgkJCQkJZGlmZmljdWx0eSBhbHNvIG1heSBiZSBzb2x2ZWQgaW4gYSBzaW1pbGFyIHdheTsgZm9yIHBlcmhhcHMgdGhlc2UgcmVndWxhdGlvbnMKCQkJCQlhbHNvIGFyZSBzb3VuZCwgc2luY2UgaXQgaXMgbm90IHRoZSBpbmRpdmlkdWFsIGp1cnltYW4gb3IgY291bmNpbGxvciBvciBtZW1iZXIKCQkJCQlvZiB0aGUgYXNzZW1ibHkgaW4gd2hvbSBhdXRob3JpdHkgcmVzdHMsIGJ1dCB0aGUgY291cnQsIHRoZSBjb3VuY2lsIGFuZCB0aGUKCQkJCQlwZW9wbGUsIHdoaWxlIGVhY2ggb2YgdGhlIGluZGl2aWR1YWxzIG5hbWVkIO+8iEkgbWVhbiB0aGUgY291bmNpbGxvciwgdGhlCgkJCQkJbWVtYmVycyBvZiBhc3NlbWJseSBhbmQgdGhlIGp1cnltYW7vvIkgaXMgYSBwYXJ0IG9mIHRob3NlIGJvZGllcy4gSGVuY2UKCQkJCQlqdXN0bHkgdGhlIG11bHRpdHVkZSBpcyBzb3ZlcmVpZ24gaW4gZ3JlYXRlciBtYXR0ZXJzLCBmb3IgdGhlIHBvcHVsYXIgYXNzZW1ibHksCgkJCQkJdGhlIGNvdW5jaWwgYW5kIHRoZSBqdXJ5LWNvdXJ0IGFyZSBmb3JtZWQgb2YgYSBudW1iZXIgb2YgcGVvcGxlLCBhbmQgYWxzbyB0aGUKCQkJCQlhc3Nlc3NlZCBwcm9wZXJ0eSBvZiBhbGwgdGhlc2UgbWVtYmVycyBjb2xsZWN0aXZlbHkgaXMgbW9yZSB0aGFuIHRoYXQgb2YgdGhlCgkJCQkJbWFnaXN0cmF0ZXMgaG9sZGluZyBncmVhdCBvZmZpY2VzIGluZGl2aWR1YWxseSBvciBpbiBzbWFsbCBncm91cHMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkxldCB0aGVzZQoJCQkJCXBvaW50cyB0aGVyZWZvcmUgYmUgZGVjaWRlZCBpbiB0aGlzIG1hbm5lci4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyODJiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1282b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkJ1dCB0aGUgZGlmZmljdWx0eSBmaXJzdAoJCQkJCQltZW50aW9uZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Vml6LiB0aGF0IGluIHdoYXRldmVyIGNsYXNzCgkJCQkJCXNvdmVyZWlnbnR5IGlzIHZlc3RlZCwgc29tZSBoYXJkc2hpcHMgd2lsbCByZXN1bHQsIDEyODFhIDE0IGZmLjwvbm90ZT4KCQkJCQlwcm92ZXMgbm90aGluZyBlbHNlIHNvIGNsZWFybHkgYXMgdGhhdCBpdCBpcyBwcm9wZXIgZm9yIHRoZSBsYXdzIHdoZW4gcmlnaHRseQoJCQkJCWxhaWQgZG93biB0byBiZSBzb3ZlcmVpZ24sIHdoaWxlIHRoZSBydWxlciBvciBydWxlcnMgaW4gb2ZmaWNlIHNob3VsZCBoYXZlCgkJCQkJc3VwcmVtZSBwb3dlcnMgb3ZlciBtYXR0ZXJzIGFzIHRvIHdoaWNoIHRoZSBsYXdzIGFyZSBxdWl0ZSB1bmFibGUgdG8gcHJvbm91bmNlCgkJCQkJd2l0aCBwcmVjaXNpb24gYmVjYXVzZSBvZiB0aGUgZGlmZmljdWx0eSBvZiBtYWtpbmcgYSBnZW5lcmFsIHJ1bGUgdG8gY292ZXIgYWxsCgkJCQkJY2FzZXMuIFdlIGhhdmUgbm90IGhvd2V2ZXIgeWV0IGFzY2VydGFpbmVkIGF0IGFsbCB3aGF0IHBhcnRpY3VsYXIgY2hhcmFjdGVyIGEKCQkJCQljb2RlIG9mIGxhd3MgY29ycmVjdGx5IGxhaWQgZG93biBvdWdodCB0byBwb3NzZXNzLCBidXQgdGhlIGRpZmZpY3VsdHkgcmFpc2VkIGF0CgkJCQkJdGhlIHN0YXJ0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMjgxYSAzNi48L25vdGU+IHN0aWxsCgkJCQkJCXJlbWFpbnM7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlByb2JhYmx5IHRoaXMgY2xhdXNlIHNob3VsZAoJCQkJCQlzdGFuZCBhZnRlciB0aGUgbmV4dCwg4oCYdGhvdWdo4oCUY29uc3RpdHV0aW9u4oCZCgkJCQkJCe+8iHdoaWNoIHdpbGwgYmUgYSBwYXJlbnRoZXNpc++8iSwgYW5kIHNob3VsZCBydW4KCQkJCQkJ4oCYYnV0ICZsdDt0aGUgZGlmZmljdWx0eSBpcyB0aGVyZSZndDsgZm9yCgkJCQkJCW5lY2Vzc2FyaWx54oCUc3RhdGVzLuKAmTwvbm90ZT4gZm9yIG5lY2Vzc2FyaWx5IHRoZSBsYXdzIGFyZQoJCQkJCWdvb2Qgb3IgYmFkLCBqdXN0IG9yIHVuanVzdCwgc2ltdWx0YW5lb3VzbHkgd2l0aCBhbmQgc2ltaWxhcmx5IHRvIHRoZQoJCQkJCWNvbnN0aXR1dGlvbnMgb2Ygc3RhdGVzIO+8iHRob3VnaCBvZiBjb3Vyc2UgaXQgaXMgb2J2aW91cyB0aGF0IHRoZSBsYXdzCgkJCQkJYXJlIGJvdW5kIHRvIGJlIGFkYXB0ZWQgdG8gdGhlIGNvbnN0aXR1dGlvbu+8iTsgeWV0IGlmIHNvLCBpdCBpcyBjbGVhcgoJCQkJCXRoYXQgdGhlIGxhd3MgaW4gY29uZm9ybWl0eSB3aXRoIHRoZSByaWdodCBjb25zdGl0dXRpb25zIG11c3QgbmVjZXNzYXJpbHkgYmUKCQkJCQlqdXN0IGFuZCB0aG9zZSBpbiBjb25mb3JtaXR5IHdpdGggdGhlIGRpdmVyZ2VudDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgdXN1YWwgcmVuZGVyaW5nIGlzIOKAmHBlcnZlcnRlZCzigJkgYnV0CgkJCQkJCXRoZSBHcmVlayB0ZXJtIGlzIG1vcmUgbmV1dHJhbC48L25vdGU+IGZvcm1zIG9mIGNvbnN0aXR1dGlvbgoJCQkJCQl1bmp1c3QuPC90cmFuc2xhdGlvbj4="
translation['3.1282b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5XaGF0IGZvbGxvd3MgaXMgYSBzdW1tYXJ5CgkJCQkJCW9mIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTAzYSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDI8L2JpYmw+Ljwvbm90ZT5BbmQKCQkJCQlpbmFzbXVjaCBhcyBpbiBhbGwgdGhlIHNjaWVuY2VzIGFuZCBhcnRzIHRoZSBFbmQgaXMgYSBnb29kLCBhbmQgdGhlIGdyZWF0ZXN0CgkJCQkJZ29vZCBhbmQgZ29vZCBpbiB0aGUgaGlnaGVzdCBkZWdyZWUgaW4gdGhlIG1vc3QgYXV0aG9yaXRhdGl2ZSBvZiBhbGwsIHdoaWNoIGlzCgkJCQkJdGhlIHBvbGl0aWNhbCBmYWN1bHR5LCBhbmQgdGhlIGdvb2QgaW4gdGhlIHBvbGl0aWNhbCBmaWVsZCwgdGhhdCBpcywgdGhlIGdlbmVyYWwKCQkJCQlhZHZhbnRhZ2UsIGlzIGp1c3RpY2UsIGl0IGlzIHRoZXJlZm9yZSB0aG91Z2h0IGJ5IGFsbCBtZW4gdGhhdCBqdXN0aWNlIGlzIHNvbWUKCQkJCQlzb3J0IG9mIGVxdWFsaXR5LCBhbmQgdXAgdG8gYSBjZXJ0YWluIHBvaW50IGF0IGFsbCBldmVudHMgdGhleSBhZ3JlZSB3aXRoIHRoZQoJCQkJCXBoaWxvc29waGljYWwgZGlzY291cnNlcyBpbiB3aGljaDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTAzYSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDI8L2JpYmw+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5jb25jbHVzaW9ucyBoYXZlIGJlZW4gcmVhY2hlZCBhYm91dCBxdWVzdGlvbnMgb2YgZXRoaWNzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSBhbHNvIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTMxYSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLgoJCQkJCQkJRXRoLiA1LjM8L2JpYmw+Ljwvbm90ZT47IGZvciBqdXN0aWNlIGlzIGEgcXVhbGl0eSBvZiBhIHRoaW5nIGluIHJlbGF0aW9uCgkJCQkJdG8gcGVyc29ucyw8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTEzMWEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4KCQkJCQkJCUV0aC4gNS4zPC9iaWJsPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+TGl0ZXJhbGx5LCDigJh0aGUganVzdCBpcwoJCQkJCQnvvIhhIGp1c3TvvIkgc29tZXRoaW5nIGFuZCDvvIhzb21ldGhpbmcganVzdO+8iQoJCQkJCQlmb3Igc29tZWJvZHku4oCZPC9ub3RlPiBhbmQgdGhleSBob2xkIHRoYXQgZm9yIHBlcnNvbnMgdGhhdCBhcmUKCQkJCQllcXVhbCB0aGUgdGhpbmcgbXVzdCBiZSBlcXVhbC4gQnV0IGVxdWFsaXR5IGluIHdoYXQgY2hhcmFjdGVyaXN0aWNzIGRvZXMgdGhpcwoJCQkJCW1lYW4sIGFuZCBpbmVxdWFsaXR5IGluIHdoYXQ/IFRoaXMgbXVzdCBiZSBtYWRlIGNsZWFyLCBzaW5jZSB0aGlzIHRvbyByYWlzZXMgYQoJCQkJCWRpZmZpY3VsdHksIGFuZCBjYWxscyBmb3IgcG9saXRpY2FsIHBoaWxvc29waHkuIDwvdHJhbnNsYXRpb24+"
translation['3.1283a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIHBlcmhhcHMgc29tZW9uZSBtaWdodCBzYXkgdGhhdCB0aGUgb2ZmaWNlcyBvZiBzdGF0ZQoJCQkJCW91Z2h0IHRvIGJlIGRpc3RyaWJ1dGVkIHVuZXF1YWxseSBhY2NvcmRpbmcgdG8gc3VwZXJpb3JpdHkgaW4gZXZlcnkgZ29vZAoJCQkJCXF1YWxpdHksIGV2ZW4gaWYgdGhlIGNhbmRpZGF0ZXMgaW4gYWxsIG90aGVyIHJlc3BlY3RzIGRpZCBub3QgZGlmZmVyIGF0IGFsbCBidXQKCQkJCQl3ZXJlIGV4YWN0bHkgYWxpa2UsIGJlY2F1c2UgbWVuIHRoYXQgYXJlIGRpZmZlcmVudDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGRpZmZlcmVudCBpbiBzb21lIGdvb2QgcXVhbGl0eS48L25vdGU+IGhhdmUgZGlmZmVyZW50CgkJCQkJcmlnaHRzIGFuZCBtZXJpdHMuIFlldCBpZiB0aGlzIGlzIHRydWUsIHRob3NlIHdobyBhcmUgc3VwZXJpb3IgaW4gY29tcGxleGlvbiBvcgoJCQkJCXN0YXR1cmUgb3IgYW55IGdvb2QgcXVhbGl0eSB3aWxsIGhhdmUgYW4gYWR2YW50YWdlIGluIHJlc3BlY3Qgb2YgcG9saXRpY2FsCgkJCQkJcmlnaHRzLiBCdXQgc3VyZWx5IHRoZSBlcnJvciBoZXJlIGlzIG9idmlvdXMsIGFuZCBpdCBjb21lcyBvdXQgY2xlYXJseSBpZiB3ZQoJCQkJCWNvbnNpZGVyIHRoZSBvdGhlciBzY2llbmNlcyBhbmQgZmFjdWx0aWVzLiBBbW9uZyBmbHV0ZS1wbGF5ZXJzIGVxdWFsbHkgZ29vZCBhdAoJCQkJCXRoZWlyIGFydCBpdCBpcyBub3QgcHJvcGVyIHRvIGdpdmUgYW4gYWR2YW50YWdlIGluIHJlc3BlY3Qgb2YgdGhlIGZsdXRlcyB0bwoJCQkJCXRob3NlIG9mIGJldHRlciBiaXJ0aCwgZm9yIHRoZXkgd2lsbCBub3QgcGxheSBhbnkgYmV0dGVyLCBidXQgaXQgaXMgdGhlIHN1cGVyaW9yCgkJCQkJcGVyZm9ybWVycyB3aG8gb3VnaHQgdG8gYmUgZ2l2ZW4gdGhlIHN1cGVyaW9yIGluc3RydW1lbnRzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpZiBvdXIgbWVhbmluZyBpcyBub3QgeWV0IHBsYWluLCBpdCB3aWxsIGJlY29tZQoJCQkJCXN0aWxsIGNsZWFyZXIgd2hlbiB3ZSBoYXZlIGNhcnJpZWQgdGhlIG1hdHRlciBmdXJ0aGVyLiBTdXBwb3NlIHNvbWVvbmUgaXMKCQkJCQlzdXBlcmlvciBpbiBwbGF5aW5nIHRoZSBmbHV0ZSBidXQgbXVjaCBpbmZlcmlvciBpbiBiaXJ0aCBvciBpbiBnb29kIGxvb2tzLCB0aGVuLAoJCQkJCWV2ZW4gZ3JhbnRpbmcgdGhhdCBlYWNoIG9mIHRoZXNlIHRoaW5nc+KAlGJpcnRoIGFuZCBiZWF1dHnigJRpcwoJCQkJCWEgZ3JlYXRlciBnb29kIHRoYW4gYWJpbGl0eSB0byBwbGF5IHRoZSBmbHV0ZSwgYW5kIGV2ZW4gdGhvdWdoIHRoZXkgc3VycGFzcwoJCQkJCWZsdXRlLXBsYXlpbmcgcHJvcG9ydGlvbmF0ZWx5IG1vcmUgdGhhbiB0aGUgYmVzdCBmbHV0ZS1wbGF5ZXIgc3VycGFzc2VzIHRoZQoJCQkJCW90aGVycyBpbiBmbHV0ZS1wbGF5aW5nLCBldmVuIHNvIHRoZSBiZXN0IGZsdXRlLXBsYXllciBvdWdodCB0byBiZSBnaXZlbiB0aGUKCQkJCQlvdXRzdGFuZGluZ2x5IGdvb2QgZmx1dGVzOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI4M2EiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['3.1283a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBvdGhlcndpc2Ugc3VwZXJpb3JpdHkgYm90aCBpbiB3ZWFsdGggYW5kIGluCgkJCQkJYmlydGggb3VnaHQgdG8gY29udHJpYnV0ZSB0byB0aGUgZXhjZWxsZW5jZSBvZiB0aGUgcGVyZm9ybWFuY2UsIGJ1dCB0aGV5IGRvIG5vdAoJCQkJCWRvIHNvIGF0IGFsbC4gPC90cmFuc2xhdGlvbj4="
translation['3.1283a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy40IiB1bml0PSJMb2ViIGNoYXAiIC8+TW9yZW92ZXIgb24gdGhpcwoJCQkJCXRoZW9yeSBldmVyeSBnb29kIHRoaW5nIHdvdWxkIGJlIGNvbW1lbnN1cmFibGUgd2l0aCBldmVyeSBvdGhlci4gRm9yIGlmIHRvIGJlIG9mCgkJCQkJc29tZSBwYXJ0aWN1bGFyIGhlaWdodCBnYXZlIG1vcmUgY2xhaW0sIHRoZW4gaGVpZ2h0IGluIGdlbmVyYWwgd291bGQgYmUgaW4KCQkJCQljb21wZXRpdGlvbiB3aXRoIHdlYWx0aCBhbmQgd2l0aCBmcmVlIGJpcnRoOyB0aGVyZWZvcmUgaWYgQSBleGNlbHMgaW4gaGVpZ2h0CgkJCQkJbW9yZSB0aGFuIEIgZG9lcyBpbiB2aXJ0dWUsIGFuZCBzcGVha2luZyBnZW5lcmFsbHkgc2l6ZSBnaXZlcyBtb3JlIHN1cGVyaW9yaXR5CgkJCQkJdGhhbiB2aXJ0dWUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgd2Ugc2hvdWxkIHJld3JpdGUgdGhlCgkJCQkJCUdyZWVrIHRvIGdpdmUg4oCYZXZlbiB0aG91Z2ggc3BlYWtpbmcgZ2VuZXJhbGx5IHZpcnR1ZSBnaXZlcyBtb3JlCgkJCQkJCXN1cGVyaW9yaXR5IHRoYW4gc2l6ZS7igJk8L25vdGU+IGFsbCB0aGluZ3Mgd291bGQgYmUgY29tbWVuc3VyYWJsZQoJCQkJCWZvcjsgaWYgc3VjaC1hbmQtc3VjaCBhbiBhbW91bnQgb2Ygb25lIHRoaW5nIGlzIGJldHRlciB0aGFuIHN1Y2gtYW5kLXN1Y2ggYW4KCQkJCQlhbW91bnQgb2YgYW5vdGhlciwgaXQgaXMgY2xlYXIgdGhhdCBzdWNoLWFuZC1zdWNoIGFuIGFtb3VudCBvZiB0aGUgb25lIGlzIGVxdWFsCgkJCQkJdG8gdGhhdCBhbW91bnQgb2YgYW5vdGhlci4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgc2luY2UKCQkJCQl0aGlzIGlzIGltcG9zc2libGUsIGl0IGlzIGNsZWFyIHRoYXQgaW4gcG9saXRpY3Mgd2l0aCBnb29kIHJlYXNvbiBtZW4gZG8gbm90CgkJCQkJY2xhaW0gYSByaWdodCB0byBvZmZpY2Ugb24gdGhlIGdyb3VuZCBvZiBpbmVxdWFsaXR5IG9mIGV2ZXJ5IGtpbmTigJRpZgoJCQkJCW9uZSBzZXQgb2YgbWVuIGFyZSBzbG93IHJ1bm5lcnMgYW5kIGFub3RoZXIgZmFzdCwgdGhpcyBpcyBubyBnb29kIGdyb3VuZCBmb3IgdGhlCgkJCQkJb25lIHNldCBoYXZpbmcgbW9yZSBhbmQgdGhlIG90aGVyIGxlc3M8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+RG91YnRsZXNzIHRoZSBhdXRob3IgbWVhbnQgdGhlIG90aGVyIHdheSByb3VuZCwg4oCYZm9yIHRoZSBzbG93CgkJCQkJCWhhdmluZyBsZXNzIGFuZCB0aGUgZmFzdCBtb3JlIHBvbGl0aWNhbCBwb3dlci7igJk8L25vdGU+IHBvbGl0aWNhbAoJCQkJCXBvd2VyLCBidXQgdGhlIGxhdHRlcidzIHN1cGVyaW9yaXR5IHJlY2VpdmVzIGl0cyBob25vciBpbiBhdGhsZXRpYyBjb250ZXN0czsgYnV0CgkJCQkJdGhlIGNsYWltIHRvIG9mZmljZSBtdXN0IG5lY2Vzc2FyaWx5IGJlIGJhc2VkIG9uIHN1cGVyaW9yaXR5IGluIHRob3NlIHRoaW5ncwoJCQkJCXdoaWNoIGdvIHRvIHRoZSBtYWtpbmcgb2YgdGhlIHN0YXRlLiBIZW5jZSBpdCBpcyByZWFzb25hYmxlIGZvciB0aGUgd2VsbC1ib3JuLAoJCQkJCWZyZWUgYW5kIHdlYWx0aHkgdG8gbGF5IGNsYWltIHRvIGhvbm9yOyBmb3IgdGhlcmUgbXVzdCBiZSBmcmVlIG1lbiBhbmQKCQkJCQl0YXgtcGF5ZXJzLCBzaW5jZSBhIHN0YXRlIGNvbnNpc3RpbmcgZW50aXJlbHkgb2YgcG9vciBtZW4gd291bGQgbm90IGJlIGEgc3RhdGUsCgkJCQkJYW55IG1vcmUgdGhhbiBvbmUgY29uc2lzdGluZyBvZiBzbGF2ZXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy42IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZW4sIGdyYW50aW5nIHRoZXJlIGlzIG5lZWQgb2YgdGhlc2UsIGl0IGlzIGNsZWFyCgkJCQkJCXRoYXQ8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlcmUgaXMgYWxzbyBuZWVkIG9mIGp1c3RpY2UKCQkJCQlhbmQgY2l2aWMgdmlydHVlLCBmb3IgdGhlc2UgYXJlIGFsc28gaW5kaXNwZW5zYWJsZSBpbiB0aGUgYWRtaW5pc3RyYXRpb24gb2YgYQoJCQkJCXN0YXRlOyBleGNlcHQgdGhhdCB3ZWFsdGggYW5kIGZyZWVkb20gYXJlIGluZGlzcGVuc2FibGUgZm9yIGEgc3RhdGUncyBleGlzdGVuY2UsCgkJCQkJd2hlcmVhcyBqdXN0aWNlIGFuZCBjaXZpYyB2aXJ0dWUgYXJlIGluZGlzcGVuc2FibGUgZm9yIGl0cyBnb29kCgkJCQkJCWFkbWluaXN0cmF0aW9uLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBhIG1lYW5zIHRoZXJlZm9yZSB0b3dhcmRzIGEKCQkJCQlzdGF0ZSdzIGV4aXN0ZW5jZSBhbGwgb3IgYXQgYWxsIGV2ZW50cyBzb21lIG9mIHRoZXNlIGZhY3RvcnMgd291bGQgc2VlbSB0byBtYWtlCgkJCQkJYSBnb29kIGNsYWltLCBhbHRob3VnaCBhcyBtZWFucyB0byBhIGdvb2QgbGlmZSBlZHVjYXRpb24gYW5kIHZpcnR1ZSB3b3VsZCBtYWtlCgkJCQkJdGhlIG1vc3QganVzdCBjbGFpbSwgYXMgaGFzIGJlZW4gc2FpZCBhbHNvIGJlZm9yZS4gPC90cmFuc2xhdGlvbj4="
translation['3.1283b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy43IiB1bml0PSJMb2ViIGNoYXAiIC8+T24gdGhlIG90aGVyIGhhbmQgc2luY2UgdGhvc2Ugd2hvIGFyZSBlcXVhbCBpbiBvbmUgdGhpbmcKCQkJCQlvbmx5IG91Z2h0IG5vdCB0byBoYXZlIGVxdWFsaXR5IGluIGFsbCB0aGluZ3Mgbm9yIHRob3NlIHVuZXF1YWwgYXMgcmVnYXJkcyBvbmUKCQkJCQl0aGluZyBpbmVxdWFsaXR5IGluIGFsbCwgaXQgZm9sbG93cyB0aGF0IGFsbCB0aGVzZSBmb3JtcyBvZiBjb25zdGl0dXRpb24gbXVzdCBiZQoJCQkJCWRldmlhdGlvbnMuIE5vdyBpdCBoYXMgYmVlbiBzYWlkIGJlZm9yZSB0aGF0IGFsbCBtYWtlIGEgY2xhaW0gdGhhdCBpcyBpbiBhCgkJCQkJbWFubmVyIGp1c3QsIHRob3VnaCBub3QgYWxsIGEgY2xhaW0gdGhhdCBpcyBhYnNvbHV0ZWx5IGp1c3Q7IHRoZSByaWNoIGNsYWltaW5nCgkJCQkJYmVjYXVzZSB0aGV5IGhhdmUgYSBsYXJnZXIgc2hhcmUgb2YgdGhlIGxhbmQsIGFuZCB0aGUgbGFuZCBpcyBjb21tb24gcHJvcGVydHksCgkJCQkJYW5kIGFsc28gYXMgYmVpbmcgZm9yIHRoZSBtb3N0IHBhcnQgbW9yZSBmYWl0aGZ1bCB0byB0aGVpciBjb3ZlbmFudHM7IHRoZSBmcmVlCgkJCQkJYW5kIHdlbGwtYm9ybiBhcyBiZWluZyBjbG9zZWx5IGNvbm5lY3RlZCB0b2dldGhlciDvvIhmb3IgdGhlIGJldHRlci1ib3JuCgkJCQkJYXJlIGNpdGl6ZW5zIHRvIGEgZ3JlYXRlciBkZWdyZWUgdGhhbiB0aG9zZSBvZiBjbGFpbXMsIGxvdyBiaXJ0aCwgYW5kIGdvb2QgYmlydGgKCQkJCQlpcyBpbiBldmVyeSBjb21tdW5pdHkgaGVsZCBpbiBob25vciBhdCBob21l77yJLCBhbmQgYWxzbyBiZWNhdXNlIGl0IGlzCgkJCQkJcHJvYmFibGUgdGhhdCB0aGUgY2hpbGRyZW4gb2YgYmV0dGVyIHBhcmVudHMgd2lsbCBiZSBiZXR0ZXIsIGZvciBnb29kIGJpcnRoCgkJCQkJbWVhbnMgZ29vZG5lc3Mgb2YgYnJlZWQ7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy44IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHdlCgkJCQkJc2hhbGwgYWRtaXQgdGhhdCB2aXJ0dWUgYWxzbyBtYWtlcyBhbiBlcXVhbGx5IGp1c3QgY2xhaW0sIGZvciB3ZSBob2xkIHRoYXQKCQkJCQlqdXN0aWNlIGlzIHNvY2lhbCB2aXJ0dWUsIHdoaWNoIG5lY2Vzc2FyaWx5IGJyaW5ncyBhbGwgdGhlIG90aGVyIHZpcnR1ZXMgaW4gaXRzCgkJCQkJdHJhaW47IGJ1dCBtb3Jlb3ZlciB0aGUgbWFqb3JpdHkgaGF2ZSBhIGp1c3QgY2xhaW0gYXMgY29tcGFyZWQgd2l0aCB0aGUKCQkJCQltaW5vcml0eSwgc2luY2UgdGhleSBhcmUgc3Ryb25nZXIgYW5kIHJpY2hlciBhbmQgYmV0dGVyIGlmIHRoZWlyIHN1cGVyaW9yCgkJCQkJbnVtYmVycyBhcmUgdGFrZW4gaW4gY29tcGFyaXNvbiB3aXRoIHRoZSBvdGhlcnMnIGluZmVyaW9yIG51bWJlcnMuIFRoZXJlZm9yZQoJCQkJCXN1cHBvc2luZyBhbGwgd2VyZSBpbiBvbmUgY2l0eSwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyODNiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1283b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkkgbWVhbiwgdGhhdCBpcywgdGhlIGdvb2QgYW5kIHRoZSB3ZWFsdGh5IGFuZAoJCQkJCW5vYmxlIGFuZCBhbHNvIGFuIGFkZGl0aW9uYWwgbWFzcyBvZiBjaXRpemVucywgd2lsbCB0aGVyZSBiZSBhIGRpc3B1dGUsIG9yIHdpbGwKCQkJCQl0aGVyZSBub3QsIGFzIHRvIHdobyBvdWdodCB0byBnb3Zlcm4/IDwvdHJhbnNsYXRpb24+"
translation['3.1283b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy45IiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgdHJ1ZSB0aGF0IHVuZGVyIGVhY2ggb2YgdGhlIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiB0aGF0IGhhdmUgYmVlbgoJCQkJCW1lbnRpb25lZCB0aGUgZGVjaXNpb24gYXMgdG8gd2hvIG91Z2h0IHRvIGdvdmVybiBpcyB1bmRpc3B1dGVkIO+8iGZvciB0aGUKCQkJCQlkaWZmZXJlbmNlIGJldHdlZW4gdGhlbSBsaWVzIGluIHRoZWlyIHNvdmVyZWlnbiBjbGFzc2Vz4oCUb25lIGlzCgkJCQkJZGlzdGluZ3Vpc2hlZCBieSBiZWluZyBnb3Zlcm5lZCBieSB0aGUgcmljaCBtZW4sIG9uZSBieSBiZWluZyBnb3Zlcm5lZCBieSB0aGUKCQkJCQlnb29kIG1lbiwgYW5kIHNpbWlsYXJseSBlYWNoIG9mIHRoZSBvdGhlcnPvvIk7IGJ1dCBuZXZlcnRoZWxlc3Mgd2UgYXJlCgkJCQkJY29uc2lkZXJpbmcgdGhlIHF1ZXN0aW9uIGhvdyB3ZSBhcmUgdG8gZGVjaWRlIGJldHdlZW4gdGhlc2UgY2xhc3NlcyBzdXBwb3NpbmcKCQkJCQl0aGF0IHRoZXkgYWxsIGV4aXN0IGluIHRoZSBzdGF0ZSBhdCB0aGUgc2FtZSBwZXJpb2QuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPklmIHRoZW4gdGhlIHBvc3Nlc3NvcnMgb2YKCQkJCQl2aXJ0dWUgc2hvdWxkIGJlIHF1aXRlIGZldyBpbiBudW1iZXIsIGhvdyBpcyB0aGUgZGVjaXNpb24gdG8gYmUgbWFkZT8gb3VnaHQgd2UKCQkJCQl0byBjb25zaWRlciB0aGVpciBmZXduZXNzIGluIHJlbGF0aW9uIHRvIHRoZSB0YXNrLCBhbmQgd2hldGhlciB0aGV5IGFyZSBhYmxlIHRvCgkJCQkJYWRtaW5pc3RlciB0aGUgc3RhdGUsIG9yIHN1ZmZpY2llbnRseSBudW1lcm91cyB0byBjb25zdGl0dXRlIGEgc3RhdGU/IEFuZCB0aGVyZQoJCQkJCWlzIHNvbWUgZGlmZmljdWx0eSBhcyByZWdhcmRzIGFsbCB0aGUgcml2YWwgY2xhaW1hbnRzIHRvIHBvbGl0aWNhbCBob25vcnMuIFRob3NlCgkJCQkJd2hvIGNsYWltIHRvIHJ1bGUgYmVjYXVzZSBvZiB0aGVpciB3ZWFsdGggbWlnaHQgc2VlbSB0byBoYXZlIG5vIGp1c3RpY2UgaW4gdGhlaXIKCQkJCQlwcm9wb3NhbCwgYW5kIHNpbWlsYXJseSBhbHNvIHRob3NlIHdobyBjbGFpbSBvbiB0aGUgc2NvcmUgb2YgYmlydGg7IGZvciBpdCBpcwoJCQkJCWNsZWFyIHRoYXQgaWYsIHRvIGdvIGEgc3RlcCBmdXJ0aGVyLCBhIHNpbmdsZSBpbmRpdmlkdWFsIGlzIHJpY2hlciB0aGFuIGFsbCB0aGUKCQkJCQlvdGhlcnMgdG9nZXRoZXIsIGFjY29yZGluZyB0byB0aGUgc2FtZSBwcmluY2lwbGUgb2YganVzdGljZSBpdCB3aWxsIG9idmlvdXNseSBiZQoJCQkJCXJpZ2h0IGZvciB0aGlzIG9uZSBtYW4gdG8gcnVsZSBvdmVyIGFsbCwgYW5kIHNpbWlsYXJseSB0aGUgbWFuIG9mIG91dHN0YW5kaW5nCgkJCQkJbm9iaWxpdHkgYW1vbmcgdGhlIGNsYWltYW50czxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5vbiB0aGUKCQkJCQlzY29yZSBvZiBmcmVlIGJpcnRoLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1284a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB0aGlzIHNhbWUKCQkJCQl0aGluZyB3aWxsIHBlcmhhcHMgcmVzdWx0IGluIHRoZSBjYXNlIG9mIGFyaXN0b2NyYXRpYyBnb3Zlcm5tZW50IGJhc2VkIG9uCgkJCQkJdmlydHVlOyBmb3IgaWYgdGhlcmUgYmUgc29tZSBvbmUgbWFuIHdobyBpcyBiZXR0ZXIgdGhhbiB0aGUgb3RoZXIgdmlydHVvdXMgbWVuCgkJCQkJaW4gdGhlIHN0YXRlLCBieSB0aGUgc2FtZSBwcmluY2lwbGUgb2YganVzdGljZSB0aGF0IG1hbiBtdXN0IGJlIHNvdmVyZWlnbi4KCQkJCQlBY2NvcmRpbmdseSBpZiBpdCBpcyBhY3R1YWxseSBwcm9wZXIgZm9yIHRoZSBtdWx0aXR1ZGUgdG8gYmUgc292ZXJlaWduIGJlY2F1c2UKCQkJCQl0aGV5IGFyZSBiZXR0ZXIgdGhhbiB0aGUgZmV3LCB0aGVuIGFsc28sIGlmIG9uZSBwZXJzb24gb3IgaWYgbW9yZSB0aGFuIG9uZSBidXQKCQkJCQlmZXdlciB0aGFuIHRoZSBtYW55IGFyZSBiZXR0ZXIgdGhhbiB0aGUgcmVzdCwgaXQgd291bGQgYmUgcHJvcGVyIGZvciB0aGVzZQoJCQkJCXJhdGhlciB0aGFuIHRoZSBtdWx0aXR1ZGUgdG8gYmUgc292ZXJlaWduLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbGwgdGhlc2UgY29uc2lkZXJhdGlvbnMgdGhlcmVmb3JlIHNlZW0gdG8gcHJvdmUgdGhlCgkJCQkJaW5jb3JyZWN0bmVzcyBvZiBhbGwgb2YgdGhlIHN0YW5kYXJkcyBvbiB3aGljaCBtZW4gY2xhaW0gdGhhdCB0aGV5IHRoZW1zZWx2ZXMKCQkJCQlzaGFsbCBnb3Zlcm4gYW5kIGV2ZXJ5Ym9keSBlbHNlIGJlIGdvdmVybmVkIGJ5IHRoZW0uIEZvciBzdXJlbHkgZXZlbiBhZ2FpbnN0CgkJCQkJdGhvc2Ugd2hvIGNsYWltIHRvIGJlIHNvdmVyZWlnbiBvdmVyIHRoZSBnb3Zlcm5tZW50IG9uIGFjY291bnQgb2YgdmlydHVlLCBhbmQKCQkJCQlzaW1pbGFybHkgYWdhaW5zdCB0aG9zZSB3aG8gY2xhaW0gb24gYWNjb3VudCBvZiB3ZWFsdGgsIHRoZSBtdWx0aXR1ZGVzIG1pZ2h0IGJlCgkJCQkJYWJsZSB0byBhZHZhbmNlIGEganVzdCBwbGVhOyBmb3IgaXQgaXMgcXVpdGUgcG9zc2libGUgdGhhdCBhdCBzb21lIHRpbWUgdGhlCgkJCQkJbXVsdGl0dWRlIG1heSBiZSBjb2xsZWN0aXZlbHkgYmV0dGVyIGFuZCByaWNoZXIgdGhhbiB0aGUgZmV3LCBhbHRob3VnaCBub3QKCQkJCQkJaW5kaXZpZHVhbGx5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZW5jZSBpdCBpcyBhbHNvIHBvc3NpYmxlIHRvIG1lZXQgaW4gdGhpcyB3YXkgdGhlIHF1ZXN0aW9uCgkJCQkJd2hpY2ggc29tZSBwZXJzb25zIGludmVzdGlnYXRlIGFuZCBwdXQgZm9yd2FyZCDvvIhmb3Igc29tZSByYWlzZSB0aGUKCQkJCQlxdWVzdGlvbiB3aGV0aGVyIHRoZSBsZWdpc2xhdG9yIGRlc2lyaW5nIHRvIGxheSBkb3duIHRoZSByaWdodGVzdCBsYXdzIHNob3VsZAoJCQkJCWxlZ2lzbGF0ZSB3aXRoIGEgdmlldyB0byB0aGUgYWR2YW50YWdlIG9mIHRoZSBiZXR0ZXIgcGVvcGxlIG9yIHRoYXQgb2YgdGhlCgkJCQkJbGFyZ2VyIG51bWJlcu+8iSBpbiBjYXNlcyB3aGVuIHRoZSBzaXR1YXRpb24gbWVudGlvbmVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkF0IHRoZSBlbmQgb2YgdGhlIGxhc3Qgc2VudGVuY2UsIDcuMTIuPC9ub3RlPgoJCQkJCW9jY3Vycy4gQW5kIOKAmHJpZ2h04oCZIG11c3QgYmUgdGFrZW4gaW4gdGhlIHNlbnNlIG9mCgkJCQkJ4oCYZXF1YWxseSByaWdodCzigJkgYW5kIHRoaXMgbWVhbnMgcmlnaHQgaW4gcmVnYXJkIHRvIHRoZQoJCQkJCWludGVyZXN0IG9mIHRoZSB3aG9sZSBzdGF0ZSBhbmQgaW4gcmVnYXJkIHRvIHRoZSBjb21tb24gd2VsZmFyZSBvZiB0aGUgY2l0aXplbnM7CgkJCQkJYW5kIGEgY2l0aXplbiBpcyBpbiBnZW5lcmFsIG9uZSB3aG8gc2hhcmVzIGluIGdvdmVybmluZyBhbmQgYmVpbmcgZ292ZXJuZWQsCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjg0YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1284a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFsdGhvdWdoIGhlIGlzIGRpZmZlcmVudCBhY2NvcmRpbmcgdG8gZWFjaCBmb3JtIG9mCgkJCQkJY29uc3RpdHV0aW9uLCBidXQgaW4gcmVsYXRpb24gdG8gdGhlIGJlc3QgZm9ybSBhIGNpdGl6ZW4gaXMgb25lIHdobyBoYXMgdGhlCgkJCQkJY2FwYWNpdHkgYW5kIHRoZSB3aWxsIHRvIGJlIGdvdmVybmVkIGFuZCB0byBnb3Zlcm4gd2l0aCBhIHZpZXcgdG8gdGhlIGxpZmUgaW4KCQkJCQlhY2NvcmRhbmNlIHdpdGggdmlydHVlLjwvdHJhbnNsYXRpb24+"
translation['3.1284a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBpZiB0aGVyZSBpcyBhbnkgb25lIG1hbiBzbyBncmVhdGx5IGRpc3Rpbmd1aXNoZWQgaW4KCQkJCQlvdXRzdGFuZGluZyB2aXJ0dWUsIG9yIG1vcmUgdGhhbiBvbmUgYnV0IG5vdCBlbm91Z2ggdG8gYmUgYWJsZSB0byBtYWtlIHVwIGEKCQkJCQljb21wbGV0ZSBzdGF0ZSwgc28gdGhhdCB0aGUgdmlydHVlIG9mIGFsbCB0aGUgcmVzdCBhbmQgdGhlaXIgcG9saXRpY2FsIGFiaWxpdHkKCQkJCQlpcyBub3QgY29tcGFyYWJsZSB3aXRoIHRoYXQgb2YgdGhlIG1lbiBtZW50aW9uZWQsIGlmIHRoZXkgYXJlIHNldmVyYWwsIG9yIGlmCgkJCQkJb25lLCB3aXRoIGhpcyBhbG9uZSwgaXQgaXMgbm8gbG9uZ2VyIHByb3BlciB0byBjb3VudCB0aGVzZSBleGNlcHRpb25hbCBtZW4gYQoJCQkJCXBhcnQgb2YgdGhlIHN0YXRlOyBmb3IgdGhleSB3aWxsIGJlIHRyZWF0ZWQgdW5qdXN0bHkgaWYgZGVlbWVkIHdvcnRoeSBvZiBlcXVhbAoJCQkJCXN0YXR1cywgYmVpbmcgc28gd2lkZWx5IHVuZXF1YWwgaW4gdmlydHVlIGFuZCBpbiB0aGVpciBwb2xpdGljYWwgYWJpbGl0eTogc2luY2UKCQkJCQlzdWNoIGEgbWFuIHdpbGwgbmF0dXJhbGx5IGJlIGFzIGEgZ29kIGFtb25nIG1lbi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5IZW5jZSBpdCBpcyBjbGVhciB0aGF0IGxlZ2lzbGF0aW9uIGFsc28gbXVzdCBuZWNlc3NhcmlseQoJCQkJCWJlIGNvbmNlcm5lZCB3aXRoIHBlcnNvbnMgd2hvIGFyZSBlcXVhbCBpbiBiaXJ0aCBhbmQgaW4gYWJpbGl0eSwgYnV0IHRoZXJlIGNhbgoJCQkJCWJlIG5vIGxhdyBkZWFsaW5nIHdpdGggc3VjaCBtZW4gYXMgdGhvc2UgZGVzY3JpYmVkLCBmb3IgdGhleSBhcmUgdGhlbXNlbHZlcyBhCgkJCQkJbGF3OyBpbmRlZWQgYSBtYW4gd291bGQgYmUgcmlkaWN1bG91cyBpZiBoZSB0cmllZCB0byBsZWdpc2xhdGUgZm9yIHRoZW0sIGZvcgoJCQkJCXByb2JhYmx5IHRoZXkgd291bGQgc2F5IHdoYXQgaW4gdGhlIHN0b3J5IG9mIEFudGlzdGhlbmVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlB1cGlsIG9mIFNvY3JhdGVzIGFuZCBmb3VuZGVyIG9mIHRoZSBDeW5pYyBzZWN0IG9mCgkJCQkJCXBoaWxvc29waGVycy48L25vdGU+IHRoZSBsaW9ucyBzYWlkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPuKAmFdoZXJlIGFyZSB5b3VyIGNsYXdzIGFuZCB0ZWV0aD/igJk8L25vdGU+IHdoZW4gdGhlIGhhcmVzCgkJCQkJbWFkZSBzcGVlY2hlcyBpbiB0aGUgYXNzZW1ibHkgYW5kIGRlbWFuZGVkIHRoYXQgYWxsIHNob3VsZCBoYXZlIGVxdWFsaXR5LiBUaGlzCgkJCQkJaXMgd2h5IGRlbW9jcmF0aWNhbGx5IGdvdmVybmVkIHN0YXRlcyBpbnN0aXR1dGUgdGhlIHN5c3RlbSBvZiBvc3RyYWNpc20sIGJlY2F1c2UKCQkJCQlvZiBhIHJlYXNvbiBvZiB0aGlzIG5hdHVyZTsgZm9yIHRoZXNlIGFyZSB0aGUgc3RhdGVzIGNvbnNpZGVyZWQgdG8gcHVyc3VlCgkJCQkJZXF1YWxpdHkgbW9zdCBvZiBhbGwgdGhpbmdzLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5zbyB0aGF0CgkJCQkJdGhleSB1c2VkIHRvIG9zdHJhY2l6ZSBtZW4gdGhvdWdodCB0byBiZSBvdXRzdGFuZGluZ2x5IHBvd2VyZnVsIG9uIGFjY291bnQgb2YKCQkJCQl3ZWFsdGggb3IgcG9wdWxhcml0eSBvciBzb21lIG90aGVyIGZvcm0gb2YgcG9saXRpY2FsIHN0cmVuZ3RoLCBhbmQgdXNlZCB0bwoJCQkJCWJhbmlzaCB0aGVtIG91dCBvZiB0aGUgY2l0eSBmb3IgZml4ZWQgcGVyaW9kcyBvZiB0aW1lLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1284b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZXJlIGlzIGEgbXl0aGljYWwgc3RvcnkgdGhhdCB0aGUgQXJnb25hdXRzIGxlZnQKCQkJCQlIZXJhY2xlcyBiZWhpbmQgZm9yIGEgc2ltaWxhciByZWFzb247IGZvciB0aGUgCgkJCQkJQXJnbzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXBvbGxvZC4gMS45LjE5IiB2YWxpZD0ieWVzIj5BcG9sbG9kLiAxLjkuMTk8L2JpYmw+CgkJCQkJCTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+E4b+Gz4Ig4byIz4HOs86/4b+mz4Igz4bOuM61zrPOvs6xzrzhvbPOvc63z4IgzrzhvbQgzrThvbvOvc6xz4POuM6xzrkgz4DhvbPPgc61zrnOvSDPhOG9uAoJCQkJCQkJz4TOv+G9u8+Ezr/PhSDOsuG9sc+Bzr/PgjwvZm9yZWlnbj4uIEFyZ28KCQkJCQkJd2FzIGEgbGl2ZSBjcmVhdHVyZSwgYW5kIEF0aGVuYSBoYWQgYnVpbHQgYSDigJh0YWxraW5nCgkJCQkJCXRpbWJlcuKAmSBpbnRvIGhlciBjdXR3YXRlci48L25vdGU+IHJlZnVzZWQgdG8gY2FycnkgaGltIHdpdGggdGhlCgkJCQkJb3RoZXJzIGJlY2F1c2UgaGUgd2FzIHNvIG11Y2ggaGVhdmllciB0aGFuIHRoZSBzYWlsb3JzLiBIZW5jZSBhbHNvIHRob3NlIHdobwoJCQkJCWJsYW1lIHR5cmFubnkgYW5kIFBlcmlhbmRlcidzIGFkdmljZSB0byBUaHJhc3lidWx1czxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFwb2xsb2QuIDEuOS4xOSIgdmFsaWQ9InllcyI+QXBvbGxvZC4gMS45LjE5PC9iaWJsPgoJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG/hs+CIOG8iM+BzrPOv+G/ps+CIM+GzrjOtc6zzr7Osc684b2zzr3Ot8+CIM684b20IM604b27zr3Osc+DzrjOsc65IM+A4b2zz4HOtc65zr0gz4ThvbgKCQkJCQkJCc+Ezr/hvbvPhM6/z4UgzrLhvbHPgc6/z4I8L2ZvcmVpZ24+LiBBcmdvCgkJCQkJCXdhcyBhIGxpdmUgY3JlYXR1cmUsIGFuZCBBdGhlbmEgaGFkIGJ1aWx0IGEg4oCYdGFsa2luZwoJCQkJCQl0aW1iZXLigJkgaW50byBoZXIgY3V0d2F0ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmlhbmRlciB3YXMgdHlyYW50IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ29yaW50aCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ29yaW50aCI+Q29yaW50aDwvcGxhY2VOYW1lPiBjaXJjYSA8ZGF0ZVJhbmdlIGF1dGhuYW1lPSItNjI2Ly01ODUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnJvbT0iLTYyNiIgdG89Ii01ODUiPjYyNjwvZGF0ZVJhbmdlPi01ODUgQi5DLjsgVGhyYXN5YnVsdXMgd2FzIHR5cmFudCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1pbGV0dXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1pbGV0dXMiPk1pbGV0dXM8L3BsYWNlTmFtZT4uIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhkdC4gNS45MiIgdmFsaWQ9InllcyI+SGR0LgoJCQkJCQkJNS45MjwvYmlibD4gdGVsbHMgdGhlIHN0b3J5IHdpdGggdGhlaXIgcGFydHMgcmV2ZXJzZWQuPC9ub3RlPiBtdXN0IG5vdAoJCQkJCWJlIHRob3VnaHQgdG8gYmUgYWJzb2x1dGVseSByaWdodCBpbiB0aGVpciBjZW5zdXJlIO+8iHRoZSBzdG9yeSBpcyB0aGF0CgkJCQkJUGVyaWFuZGVyIG1hZGUgbm8gcmVwbHkgdG8gdGhlIGhlcmFsZCBzZW50IHRvIGFzayBoaXMgYWR2aWNlLCBidXQgbGV2ZWxsZWQgdGhlCgkJCQkJY29ybi1maWVsZCBieSBwbHVja2luZyBvZmYgdGhlIGVhcnMgdGhhdCBzdG9vZCBvdXQgYWJvdmUgdGhlIHJlc3Q7IGFuZAoJCQkJCWNvbnNlcXVlbnRseSwgYWx0aG91Z2ggdGhlIGhlcmFsZCBkaWQgbm90IGtub3cgdGhlIHJlYXNvbiBmb3Igd2hhdCB3YXMgZ29pbmcgb24sCgkJCQkJd2hlbiBoZSBjYXJyaWVkIGJhY2sgbmV3cyBvZiB3aGF0IGhhZCBvY2N1cnJlZCwgVGhyYXN5YnVsdXMgdW5kZXJzdG9vZCB0aGF0IGhlCgkJCQkJd2FzIHRvIGRlc3Ryb3kgdGhlIG91dHN0YW5kaW5nIGNpdGl6ZW5z77yJOyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENvcmludGgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLENvcmludGgiPkNvcmludGg8L3BsYWNlTmFtZT4gY2lyY2EgPGRhdGVSYW5nZSBhdXRobmFtZT0iLTYyNi8tNTg1IiBjbGFzcz0idHJhbnNsYXRpb24iIGZyb209Ii02MjYiIHRvPSItNTg1Ij42MjY8L2RhdGVSYW5nZT4tNTg1IEIuQy47IFRocmFzeWJ1bHVzIHdhcyB0eXJhbnQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNaWxldHVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNaWxldHVzIj5NaWxldHVzPC9wbGFjZU5hbWU+LiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIZHQuIDUuOTIiIHZhbGlkPSJ5ZXMiPkhkdC4KCQkJCQkJCTUuOTI8L2JpYmw+IHRlbGxzIHRoZSBzdG9yeSB3aXRoIHRoZWlyIHBhcnRzIHJldmVyc2VkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC40IiB1bml0PSJMb2ViIGNoYXAiIC8+Zm9yIHRoaXMgcG9saWN5IGlzIGFkdmFudGFnZW91cyBub3Qgb25seSBmb3IgdHlyYW50cywgbm9yCgkJCQkJaXMgaXQgb25seSB0eXJhbnRzIHRoYXQgdXNlIGl0LCBidXQgdGhlIHNhbWUgaXMgdGhlIGNhc2Ugd2l0aCBvbGlnYXJjaGllcyBhbmQKCQkJCQlkZW1vY3JhY2llcyBhcyB3ZWxsOyBmb3Igb3N0cmFjaXNtIGhhcyBpbiBhIHdheSB0aGUgc2FtZSBlZmZlY3QgYXMgZG9ja2luZyBvZmYKCQkJCQl0aGUgb3V0c3RhbmRpbmcgbWVuIGJ5IGV4aWxlLiBBbmQgdGhlIHNhbWUgY291cnNlIGlzIGFkb3B0ZWQgaW4gcmVnYXJkIHRvIGNpdGllcwoJCQkJCWFuZCByYWNlcyBieSB0aGUgaG9sZGVycyBvZiBzb3ZlcmVpZ24gcG93ZXIsIGZvciBleGFtcGxlIHRoZSBBdGhlbmlhbnMgc28gZGVhbHQKCQkJCQl3aXRoIHRoZSBTYW1pYW5zIGFuZCBDaGlhbnMgYW5kIExlc2JpYW5zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluCgkJCQkJCTQ0MCwgNDI0IGFuZCA8ZGF0ZSBhdXRobmFtZT0iLTQyNyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQyNyI+NDI3PC9kYXRlPiBCLkMuIHJlc3BlY3RpdmVseTwvbm90ZT4KCQkJCQnvvIhmb3Igbm8gc29vbmVyIGRpZCB0aGV5IGdldCBhIHN0cm9uZyBob2xkIG9mIHRoZWlyIGVtcGlyZSB0aGFuIHRoZXkKCQkJCQlodW1ibGVkIHRoZW0gaW4gY29udHJhdmVudGlvbiBvZiB0aGVpciBjb3ZlbmFudHPvvIksIDxkYXRlIGF1dGhuYW1lPSItNDI3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDI3Ij40Mjc8L2RhdGU+IEIuQy4gcmVzcGVjdGl2ZWx5PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyODRiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1284b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGUga2luZyBvZgoJCQkJCXRoZSBQZXJzaWFucyBmcmVxdWVudGx5IHVzZWQgdG8gY3V0IGRvd24gdGhlIG51bWJlcnMgb2YgdGhlIE1lZGVzIGFuZAoJCQkJCUJhYnlsb25pYW5zIGFuZCB0aGUgb3RoZXIgcmFjZXMgdGhhdCBoYWQgd2F4ZWQgcHJvdWQgYmVjYXVzZSB0aGV5IGhhZCBvbmNlIGJlZW4KCQkJCQloZWFkIG9mIGFuIGVtcGlyZS4gPC90cmFuc2xhdGlvbj4="
translation['3.1284b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC41IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZSBwcm9ibGVtCgkJCQkJYXBwbGllcyB1bml2ZXJzYWxseSB0byBhbGwgdGhlIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiwgZXZlbiB0aGUgcmlnaHQgZm9ybXM7IGZvcgoJCQkJCXdoaWxlIHRoZSBkaXZlcmdlbnQgZm9ybXMgb2YgZ292ZXJubWVudCBkbyB0aGlzIGJlY2F1c2UgdGhlaXIgcmVnYXJkIGlzIGZpeGVkIG9uCgkJCQkJdGhlaXIgcHJpdmF0ZSBhZHZhbnRhZ2UsIG5ldmVydGhlbGVzcyB3aXRoIHRoZSBjb25zdGl0dXRpb25zIGRpcmVjdGVkIHRvIHRoZQoJCQkJCWNvbW1vbiBnb29kIHRoZSBzYW1lIGlzIHRoZSBjYXNlLiBBbmQgdGhpcyBpcyBhbHNvIGNsZWFyIGluIHRoZSBmaWVsZCBvZiB0aGUKCQkJCQlvdGhlciBhcnRzIGFuZCBzY2llbmNlczsgYSBwYWludGVyIHdvdWxkIG5vdCBsZXQgaGlzIGFuaW1hbCBoYXZlIGl0cyBmb290IG9mCgkJCQkJZGlzcHJvcG9ydGlvbmF0ZWx5IGxhcmdlIHNpemUsIGV2ZW4gdGhvdWdoIGl0IHdhcyBhbiBleGNlcHRpb25hbGx5IGJlYXV0aWZ1bAoJCQkJCWZvb3QsIG5vciB3b3VsZCBhIHNoaXBidWlsZGVyIG1ha2UgdGhlIHN0ZXJuIG9yIHNvbWUgb3RoZXIgcGFydCBvZiBhIHNoaXAKCQkJCQlkaXNwcm9wb3J0aW9uYXRlbHkgYmlnLCBub3IgeWV0IHdpbGwgYSB0cmFpbmVyIG9mIGNob3J1c2VzIGFsbG93IGEgbWFuIHdobyBzaW5ncwoJCQkJCWxvdWRlciBhbmQgbW9yZSBiZWF1dGlmdWxseSB0aGFuIHRoZSB3aG9sZSBiYW5kIHRvIGJlIGEgbWVtYmVyIG9mIGl0LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlIGFzIGZhciBhcyB0aGlzIHByYWN0aWNlIGdvZXMgbm90aGluZwoJCQkJCXByZXZlbnRzIG1vbmFyY2hzIGZyb20gYmVpbmcgaW4gaGFybW9ueSB3aXRoIHRoZSBjaXRpZXMgdGhleSBydWxlLCBpZiB0aGV5CgkJCQkJcmVzb3J0IHRvIGl0IHdoZW4gdGhlaXIgb3duIHBlcnNvbmFsIHJ1bGUgaXMgYmVuZWZpY2lhbCB0byB0aGUgY2l0aWVzLiBUaGVyZWZvcmUKCQkJCQlpbiByZWxhdGlvbiB0byBhY2tub3dsZWRnZWQgc3VwZXJpb3JpdGllcyB0aGUgYXJndW1lbnQgZm9yIG9zdHJhY2lzbSBoYXMgYQoJCQkJCWNlcnRhaW4gZWxlbWVudCBvZiBwb2xpdGljYWwganVzdGljZS4gVHJ1ZSwgaXQgaXMgYmV0dGVyIGZvciB0aGUgbGF3Z2l2ZXIgc28gdG8KCQkJCQljb25zdGl0dXRlIHRoZSBzdGF0ZSBhdCB0aGUgb3V0c2V0IHRoYXQgaXQgZG9lcyBub3QgbmVlZCB0aGlzIG1lZGljaW5lOyBidXQgdGhlCgkJCQkJbmV4dCBiZXN0IGNvdXJzZSB0byBzdGVlciwgaWYgb2NjYXNpb24gYXJpc2VzLCBpcyB0byBlbmRlYXZvciB0bwoJCQkJCQljb3JyZWN0PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRoZSBjb25zdGl0dXRpb24gYnkgc29tZQoJCQkJCXN1Y2ggbWV0aG9kIG9mIHJlY3RpZmljYXRpb24uIEJ1dCB0aGlzIHdhcyBub3Qgd2hhdCBoYXBwZW5lZCB3aXRoIHRoZSBzdGF0ZXMsCgkJCQkJZm9yIHRoZXkgd2VyZSBub3QgbG9va2luZyBhdCB3aGF0IHdhcyBhZHZhbnRhZ2VvdXMgZm9yIHRoZWlyIHByb3BlcgoJCQkJCWNvbnN0aXR1dGlvbiwgYnV0IHRoZWlyIGFjdHMgb2Ygb3N0cmFjaXNtIHdlcmUgZG9uZSBpbiBhIHJldm9sdXRpb25hcnkgc3Bpcml0LgoJCQkJCUluIHRoZSBkaXZlcmdlbnQgZm9ybXMgb2YgY29uc3RpdHV0aW9uIHRoZXJlZm9yZSBpdCBpcyBldmlkZW50IHRoYXQgb3N0cmFjaXNtIGlzCgkJCQkJYWR2YW50YWdlb3VzIGFuZCBqdXN0IHVuZGVyIHRoZSBzcGVjaWFsIGNvbnN0aXR1dGlvbiwgdGhvdWdoIHBlcmhhcHMgaXQgaXMgYWxzbwoJCQkJCWV2aWRlbnQgdGhhdCBpdCBpcyBub3Q8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcwoJCQkJCQnigJhub3TigJkgc2hvdWxkIGJlIHN0cnVjayBvdXQ7IGJ1dCBpZiBpdCBzdGFuZHMsIHRoZSBjbGF1c2UKCQkJCQkJcmVmZXJzIHRvIDguNSBpbml0LuKAlGluIHRoZXNlIGNhc2VzIG9zdHJhY2lzbSBpcyBwcmFjdGljZWQgb25seSBpbgoJCQkJCQl0aGUgaW50ZXJlc3Qgb2YgdGhvc2UgaW4gcG93ZXIuPC9ub3RlPiBqdXN0IGFic29sdXRlbHk7IDwvdHJhbnNsYXRpb24+"
translation['3.1285a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC43IiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IGluIHRoZSBjYXNlIG9mIHRoZSBiZXN0IGNvbnN0aXR1dGlvbiB0aGVyZSBpcwoJCQkJCW11Y2ggZG91YnQgYXMgdG8gd2hhdCBvdWdodCB0byBiZSBkb25lLCBub3QgYXMgcmVnYXJkcyBzdXBlcmlvcml0eSBpbiB0aGUgb3RoZXIKCQkJCQl0aGluZ3Mgb2YgdmFsdWUsIHN1Y2ggYXMgc3RyZW5ndGggYW5kIHdlYWx0aCBhbmQgcG9wdWxhcml0eSwgYnV0IGluIHRoZSBjYXNlIG9mCgkJCQkJYSBwZXJzb24gYmVjb21pbmcgZXhjZXB0aW9uYWxseSBkaXN0aW5ndWlzaGVkIGZvciB2aXJ0dWUuIEl0IGNlcnRhaW5seSB3b3VsZCBub3QKCQkJCQliZSBzYWlkIHRoYXQgc3VjaCBhIG1hbiBtdXN0IGJlIGJhbmlzaGVkIGFuZCBnb3Qgb3V0IG9mIHRoZSB3YXk7IHlldAoJCQkJCW5ldmVydGhlbGVzcyBubyBkb3VidCBtZW4gd291bGQgbm90IHRoaW5rIHRoYXQgdGhleSBvdWdodCB0byBydWxlIG92ZXIgc3VjaCBhCgkJCQkJbWFuLCBmb3IgdGhhdCB3b3VsZCBiZSB0aGUgc2FtZSBhcyBpZiB0aGV5IGNsYWltZWQgdG8gcnVsZSBvdmVyIFpldXMsIGRpdmlkaW5nCgkJCQkJdXAgaGlzIHNwaGVyZXMgb2YgZ292ZXJubWVudC4gSXQgcmVtYWlucyB0aGVyZWZvcmUsIGFuZCB0aGlzIHNlZW1zIHRvIGJlIHRoZQoJCQkJCW5hdHVyYWwgY291cnNlLCBmb3IgYWxsIHRvIG9iZXkgc3VjaCBhIG1hbiBnbGFkbHksIHNvIHRoYXQgbWVuIG9mIHRoaXMgc29ydCBtYXkKCQkJCQliZSBraW5ncyBpbiB0aGUgY2l0aWVzIGZvciBhbGwgdGltZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjkuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgcGVyaGFwcyBpdCBpcyB3ZWxsIGFmdGVyIHRoZSBzdWJqZWN0cwoJCQkJCXRoYXQgaGF2ZSBiZWVuIGRpc2N1c3NlZCB0byBwYXNzIG92ZXIgdG8gY29uc2lkZXIgcm95YWwgZ292ZXJubWVudDsgZm9yIHdlCgkJCQkJcHJvbm91bmNlIHRoaXMgdG8gYmUgb25lIG9mIHRoZSBjb3JyZWN0IGNvbnN0aXR1dGlvbnMuIEFuZCBpdCBoYXMgdG8gYmUKCQkJCQljb25zaWRlcmVkIHdoZXRoZXIgaXQgaXMgYWR2YW50YWdlb3VzIGZvciBhIGNpdHkgb3IgYSBjb3VudHJ5IHRoYXQgaXMgdG8gYmUgd2VsbAoJCQkJCWFkbWluaXN0ZXJlZCB0byBiZSBydWxlZCBieSBhIGtpbmcsIG9yIHdoZXRoZXIgaXQgaXMgbm90IHNvIGJ1dCBzb21lIG90aGVyCgkJCQkJY29uc3RpdHV0aW9uIGlzIG1vcmUgZXhwZWRpZW50LCBvciB3aGV0aGVyIHJveWFsIHJ1bGUgaXMgZXhwZWRpZW50IGZvciBzb21lCgkJCQkJc3RhdGVzIGFuZCBub3QgZm9yIG90aGVycy4gQnV0IGl0IGlzIG5lZWRmdWwgdG8gZGVjaWRlIGZpcnN0IHdoZXRoZXIgdGhlcmUgaXMKCQkJCQlvbmx5IG9uZSBzb3J0IG9mIGtpbmdzaGlwIG9yIHdoZXRoZXIgaXQgaGFzIHNldmVyYWwgdmFyaWV0aWVzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI4NWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['3.1285a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1285a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBpdCBpcyBhdCBhbGwgZXZlbnRzIGVhc3kgdG8gZGlzY2VybiB0aGF0IGtpbmdzaGlwIGluY2x1ZGVzIHNldmVyYWwga2luZHMsCgkJCQkJYW5kIHRoYXQgdGhlIG1vZGUgb2YgZ292ZXJubWVudCBpcyBub3QgdGhlIHNhbWUgaW4gYWxsLiBGb3IgdGhlIGtpbmdzaGlwIGluIHRoZQoJCQkJCVNwYXJ0YW4gY29uc3RpdHV0aW9uLCB3aGljaCBpcyBoZWxkIHRvIGJlIGEgdHlwaWNhbCByb3lhbHR5IG9mIHRoZSBraW5kIGd1aWRlZAoJCQkJCWJ5IGxhdywgZG9lcyBub3QgY2Fycnkgc292ZXJlaWdudHkgaW4gYWxsIG1hdHRlcnMsIHRob3VnaCB3aGVuIGEga2luZyBnb2VzIG9uIGEKCQkJCQlmb3JlaWduIGV4cGVkaXRpb24gaGUgaXMgdGhlIGxlYWRlciBpbiBhbGwgbWF0dGVycyByZWxhdGluZyB0byB0aGUgd2FyOyBhbmQgYWxzbwoJCQkJCW1hdHRlcnMgcmVsYXRpbmcgdG8gcmVsaWdpb24gaGF2ZSBiZWVuIGFzc2lnbmVkIHRvIHRoZSBraW5ncy4gVGhpcyBraW5nc2hpcAoJCQkJCXRoZXJlZm9yZSBpcyBhIHNvcnQgb2YgbWlsaXRhcnkgY29tbWFuZCB2ZXN0ZWQgaW4gZ2VuZXJhbHMgd2l0aCBhYnNvbHV0ZSBwb3dlcnMKCQkJCQlhbmQgaGVsZCBmb3IgbGlmZTsgZm9yIHRoZSBraW5nIGhhcyBub3QgYXV0aG9yaXR5IHRvIHB1dCBhIHN1YmplY3QgdG8gZGVhdGgsCgkJCQkJZXhjZXB0IFtpbiBhIGNlcnRhaW4gcmVpZ25dPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluZXhwbGljYWJsZSwgYW5kIG9taXR0ZWQgaW4gb25lIG9mIHRoZSBlYXJsaWVzdCBlZGl0aW9uczsgcG9zc2libHkKCQkJCQkJCTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzrHPg865zrvOteG9t+G+szwvZm9yZWlnbj4gaXMgdG8gYmUgZW1lbmRlZCB0byA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDOu+G9sc+DzrXOuTwvZm9yZWlnbj7igJhleGNlcHQgb24gc29tZQoJCQkJCQltYXJjaC1vdXQu4oCZPC9ub3RlPiBhcyBpbiBhbmNpZW50IHRpbWVzIGtpbmdzIG9uIHRoZWlyIG1pbGl0YXJ5CgkJCQkJZXhwZWRpdGlvbnMgY291bGQga2lsbCBhbiBvZmZlbmRlciBvdXQgb2YgaGFuZCwgYXMgSG9tZXIgcHJvdmVzLCBmb3IgQWdhbWVtbm9uCgkJCQkJZW5kdXJlZCBiZWluZyByZXZpbGVkIGluIHRoZSBhc3NlbWJsaWVzIGJ1dCB3aGVuIHRoZXkgd2VyZSBvbiBhbiBleHBlZGl0aW9uIGhhZAoJCQkJCWF1dGhvcml0eSB0byBwdXQgYSBtYW4gdG8gZGVhdGg6IGF0IGFsbCBldmVudHMgaGUgc2F5czxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzrHPg865zrvOteG9t+G+szwvZm9yZWlnbj4gaXMgdG8gYmUgZW1lbmRlZCB0byA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDOu+G9sc+DzrXOuTwvZm9yZWlnbj7igJhleGNlcHQgb24gc29tZQoJCQkJCQltYXJjaC1vdXQu4oCZPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPkJ1dCB3aG9tc29lJ2VyIEkgc2VlIGZhciBmcm9tIHRoZSBmcmF5IC4gLiAuPC9sPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPiBTaGFsbCBoYXZlIG5vIGhvcGUgdG8gZmx5IGZyb20gZG9ncyBhbmQgdnVsdHVyZXMsPC9sPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPkZvciBkZWF0aCBpcyBpbiBteSBoYW5kcyE8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UXVvdGVkIGZyb20KCQkJCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gMi4zOTEiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDIuMzkxPC9iaWJsPiwgYnV0IHRoZSBsYXN0CgkJCQkJCQkJbGluZSBpcyBub3QgaW4gb3VyIEhvbWVyLjwvbm90ZT48L2w+CgkJCQkJPC9xdW90ZT4KCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPkJ1dCB3aG9tc29lJ2VyIEkgc2VlIGZhciBmcm9tIHRoZSBmcmF5IC4gLiAuPC9sPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPiBTaGFsbCBoYXZlIG5vIGhvcGUgdG8gZmx5IGZyb20gZG9ncyBhbmQgdnVsdHVyZXMsPC9sPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPkZvciBkZWF0aCBpcyBpbiBteSBoYW5kcyE8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UXVvdGVkIGZyb20KCQkJCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gMi4zOTEiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDIuMzkxPC9iaWJsPiwgYnV0IHRoZSBsYXN0CgkJCQkJCQkJbGluZSBpcyBub3QgaW4gb3VyIEhvbWVyLjwvbm90ZT48L2w+CgkJCQkJPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlF1b3RlZCBmcm9tCgkJCQkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDIuMzkxIiB2YWxpZD0ieWVzIj5Ib20uIElsLiAyLjM5MTwvYmlibD4sIGJ1dCB0aGUgbGFzdAoJCQkJCQkJCWxpbmUgaXMgbm90IGluIG91ciBIb21lci48L25vdGU+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gMi4zOTEiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDIuMzkxPC9iaWJsPiwgYnV0IHRoZSBsYXN0CgkJCQkJCQkJbGluZSBpcyBub3QgaW4gb3VyIEhvbWVyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoaXMKCQkJCQl0aGVuIGlzIG9uZSBzb3J0IG9mIGtpbmdzaGlwLCBhIGxpZmVsb25nIGdlbmVyYWxzaGlwLCBhbmQgc29tZSBvZiB0aGUga2luZ3NoaXBzCgkJCQkJb2YgdGhpcyBraW5kIGFyZSBoZXJlZGl0YXJ5LCBvdGhlcnMgZWxlY3RpdmU7IGFuZCBieSBpdHMgc2lkZSB0aGVyZSBpcyBhbm90aGVyCgkJCQkJc29ydCBvZiBtb25hcmNoeSwgZXhhbXBsZXMgb2Ygd2hpY2ggYXJlIGtpbmdzaGlwcyBleGlzdGluZyBhbW9uZyBzb21lIG9mIHRoZQoJCQkJCWJhcmJhcmlhbnMuIFRoZSBwb3dlciBwb3NzZXNzZWQgYnkgYWxsIG9mIHRoZXNlIHJlc2VtYmxlcyB0aGF0IG9mIHR5cmFubmllcywgYnV0CgkJCQkJdGhleSBnb3Zlcm4gYWNjb3JkaW5nIHRvIGxhdyBhbmQgYXJlIGhlcmVkaXRhcnk7PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmZvciBiZWNhdXNlIHRoZSBiYXJiYXJpYW5zIGFyZSBtb3JlIHNlcnZpbGUgaW4gdGhlaXIgbmF0dXJlCgkJCQkJdGhhbiB0aGUgR3JlZWtzLCBhbmQgdGhlIEFzaWF0aWNzIHRoYW4gdGhlIEV1cm9wZWFucywgdGhleSBlbmR1cmUgZGVzcG90aWMgcnVsZQoJCQkJCXdpdGhvdXQgYW55IHJlc2VudG1lbnQuIFRoZXNlIGtpbmdzaGlwcyB0aGVyZWZvcmUgYXJlIGZvciB0aGVzZSByZWFzb25zIG9mIGEKCQkJCQl0eXJhbm5pY2FsIG5hdHVyZSwgYnV0IHRoZXkgYXJlIHNlY3VyZSBiZWNhdXNlIHRoZXkgYXJlIGhlcmVkaXRhcnkgYW5kIHJ1bGUgYnkKCQkJCQlsYXcuIDwvdHJhbnNsYXRpb24+"
translation['3.1285b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS40IiB1bml0PSJMb2ViIGNoYXAiIC8+QWxzbyB0aGVpciBib2R5Z3VhcmQgaXMgb2YgYQoJCQkJCXJveWFsIGFuZCBub3QgYSB0eXJhbm5pY2FsIHR5cGUgZm9yIHRoZSBzYW1lIHJlYXNvbjsgZm9yIGtpbmdzIGFyZSBndWFyZGVkIGJ5CgkJCQkJdGhlIGNpdGl6ZW5zIGluIGFybXMsIHdoZXJlYXMgdHlyYW50cyBoYXZlIGZvcmVpZ24gZ3VhcmRzLCBmb3Iga2luZ3MgcnVsZSBpbgoJCQkJCWFjY29yZGFuY2Ugd2l0aCBsYXcgYW5kIG92ZXIgd2lsbGluZyBzdWJqZWN0cywgYnV0IHR5cmFudHMgcnVsZSBvdmVyIHVud2lsbGluZwoJCQkJCXN1YmplY3RzLCBvd2luZyB0byB3aGljaCBraW5ncyB0YWtlIHRoZWlyIGd1YXJkcyBmcm9tIGFtb25nIHRoZSBjaXRpemVucyBidXQKCQkJCQl0eXJhbnRzIGhhdmUgdGhlbSB0byBndWFyZCBhZ2FpbnN0IHRoZSBjaXRpemVucy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVzZSB0aGVuIGFyZSB0d28ga2luZHMgb2YgbW9uYXJjaHk7IHdoaWxlIGFub3RoZXIgaXMKCQkJCQl0aGF0IHdoaWNoIGV4aXN0ZWQgYW1vbmcgdGhlIGFuY2llbnQgR3JlZWtzLCB0aGUgdHlwZSBvZiBydWxlcnMgY2FsbGVkCgkJCQkJCTxlbXBoIGNsYXNzPSJ0cmFuc2xhdGlvbiI+YWVzeW1uZXRhZTwvZW1waD4uIFRoaXMsIHRvIHB1dCBpdCBzaW1wbHksIGlzIGFuIGVsZWN0aXZlIHR5cmFubnksIGFuZAoJCQkJCWl0IGRpZmZlcnMgZnJvbSB0aGUgbW9uYXJjaHkgdGhhdCBleGlzdHMgYW1vbmcgYmFyYmFyaWFucyBub3QgaW4gZ292ZXJuaW5nCgkJCQkJd2l0aG91dCB0aGUgZ3VpZGFuY2Ugb2YgbGF3IGJ1dCBvbmx5IGluIG5vdCBiZWluZyBoZXJlZGl0YXJ5LiBTb21lIGhvbGRlcnMgb2YKCQkJCQl0aGlzIHR5cGUgb2YgbW9uYXJjaHkgcnVsZWQgZm9yIGxpZmUsIG90aGVycyB1bnRpbCBjZXJ0YWluIGZpeGVkIGxpbWl0cyBvZiB0aW1lCgkJCQkJb3IgdW50aWwgY2VydGFpbiB1bmRlcnRha2luZ3Mgd2VyZSBlbmRlZCwgYXMgZm9yIGV4YW1wbGUgdGhlIHBlb3BsZSBvZgoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1pdHlsZW5lIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNaXR5bGVuZSI+TWl0eWxlbmU8L3BsYWNlTmFtZT4gb25jZSBlbGVjdGVkIFBpdHRhY3VzIHRvCgkJCQkJcmVzaXN0IHRoZSBleGlsZXMgdW5kZXIgdGhlIGxlYWRlcnNoaXAgb2YgQW50aW1lbmlkZXMgYW5kIHRoZSBwb2V0IEFsY2FldXMuCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS42IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhhdCB0aGV5IGVsZWN0ZWQgUGl0dGFjdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGl0dGFjdXMgaGVsZCB0aGUgb2ZmaWNlIDxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii01ODcvLTU3OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItNTg3IiB0bz0iLTU3OSI+NTg3PC9kYXRlUmFuZ2U+LTU3OSBCLkMuIEhlIHdhcyBvbmUgb2YgdGhlIFNldmVuCgkJCQkJCVNhZ2VzLiBBbnRpbWVuaWRlcyBhbmQgQWxjYWV1cyB3ZXJlIGJyb3RoZXJzLjwvbm90ZT4gYXMgdHlyYW50IGlzIHByb3ZlZCBieQoJCQkJCUFsY2FldXMgaW4gb25lIG9mIGhpcyBjYXRjaGVzOyBmb3IgaGUgcmVidWtlcyB0aGUgcGVvcGxlIGJlY2F1c2UgPGRhdGVSYW5nZSBhdXRobmFtZT0iLTU4Ny8tNTc5IiBjbGFzcz0idHJhbnNsYXRpb24iIGZyb209Ii01ODciIHRvPSItNTc5Ij41ODc8L2RhdGVSYW5nZT4tNTc5IEIuQy4gSGUgd2FzIG9uZSBvZiB0aGUgU2V2ZW4KCQkJCQkJU2FnZXMuIEFudGltZW5pZGVzIGFuZCBBbGNhZXVzIHdlcmUgYnJvdGhlcnMuPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0ibHlyaWMiPlRoZSBiYXNlLWJvcm4gUGl0dGFjdXMgdGhleSBkaWQgc2V0IHVwPC9sPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPkFzIHR5cmFudCBvZiB0aGUgbWVlayBhbmQgbHVja2xlc3MgY2l0eSw8L2w+CgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGFsbCBkaWQgZ3JlYXRseSBwcmFpc2UgaGltLjwvbD4KCQkJCQk8L3F1b3RlPgoJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJseXJpYyI+VGhlIGJhc2UtYm9ybiBQaXR0YWN1cyB0aGV5IGRpZCBzZXQgdXA8L2w+CgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QXMgdHlyYW50IG9mIHRoZSBtZWVrIGFuZCBsdWNrbGVzcyBjaXR5LDwvbD4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgYWxsIGRpZCBncmVhdGx5IHByYWlzZSBoaW0uPC9sPgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjg1YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1285b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPlRoZXNlIG1vbmFyY2hpZXMgdGhlcmVmb3JlIG5vdyBhbmQgaW4gdGhlIHBhc3QgYXJlIG9mIHRoZSBuYXR1cmUgb2YgdHlyYW5uaWVzCgkJCQkJYmVjYXVzZSB0aGV5IGFyZSBhdXRvY3JhdGljLCBidXQgb2YgdGhlIG5hdHVyZSBvZiBraW5nc2hpcHMgYmVjYXVzZSB0aGV5IGFyZQoJCQkJCWVsZWN0aXZlIGFuZCBydWxlIG92ZXIgd2lsbGluZyBzdWJqZWN0cy4gPC90cmFuc2xhdGlvbj4="
translation['3.1285b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS43IiB1bml0PSJMb2ViIGNoYXAiIC8+QSBmb3VydGggY2xhc3Mgb2Ygcm95YWwgbW9uYXJjaHkgY29uc2lzdHMgb2YgdGhlCgkJCQkJaGVyZWRpdGFyeSBsZWdhbCBraW5nc2hpcHMgb3ZlciB3aWxsaW5nIHN1YmplY3RzIGluIHRoZSBoZXJvaWMgcGVyaW9kLiBGb3IKCQkJCQliZWNhdXNlIHRoZSBmaXJzdCBvZiB0aGUgbGluZSBoYWQgYmVlbiBiZW5lZmFjdG9ycyBvZiB0aGUgbXVsdGl0dWRlIGluIHRoZSBhcnRzCgkJCQkJb3IgaW4gd2FyLCBvciB0aHJvdWdoIGhhdmluZyBkcmF3biB0aGVtIHRvZ2V0aGVyIG9yIHByb3ZpZGVkIHRoZW0gd2l0aCBsYW5kLAoJCQkJCXRoZXNlIGtpbmdzIHVzZWQgdG8gY29tZSB0byB0aGUgdGhyb25lIHdpdGggdGhlIGNvbnNlbnQgb2YgdGhlIHN1YmplY3RzIGFuZCBoYW5kCgkJCQkJaXQgb24gdG8gdGhlaXIgc3VjY2Vzc29ycyBieSBsaW5lYWwgZGVzY2VudC4gQW5kIHRoZXkgaGFkIHN1cHJlbWUgY29tbWFuZCBpbiB3YXIKCQkJCQlhbmQgY29udHJvbCBvdmVyIGFsbCBzYWNyaWZpY2VzIHRoYXQgd2VyZSBub3QgaW4gdGhlIGhhbmRzIG9mIHRoZSBwcmllc3RseQoJCQkJCWNsYXNzLCBhbmQgaW4gYWRkaXRpb24gdG8gdGhlc2UgZnVuY3Rpb25zIHRoZXkgd2VyZSBqdWRnZXMgaW4gbGF3LXN1aXRzOyBzb21lCgkJCQkJZ2F2ZSBqdWRnZW1lbnQgbm90IG9uIG9hdGggYW5kIHNvbWUgb24gb2F0aOKAlHRoZSBvYXRoIHdhcyB0YWtlbiBieQoJCQkJCWhvbGRpbmcgdXAgdGhlIHNjZXB0cmUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgcml0dWFsIGlzCgkJCQkJCW1lbnRpb25lZCBpbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAxLjIzNCIgdmFsaWQ9InllcyI+SG9tLiBJbC4gMS4yMzQ8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiA3LjQxMiIgdmFsaWQ9InllcyI+SG9tLiBJbC4gNy40MTI8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAxMC4zMjgiIHZhbGlkPSJ5ZXMiPkhvbS4KCQkJCQkJCUlsLiAxMC4zMjg8L2JpYmw+Ljwvbm90ZT4KCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAxLjIzNCIgdmFsaWQ9InllcyI+SG9tLiBJbC4gMS4yMzQ8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiA3LjQxMiIgdmFsaWQ9InllcyI+SG9tLiBJbC4gNy40MTI8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAxMC4zMjgiIHZhbGlkPSJ5ZXMiPkhvbS4KCQkJCQkJCUlsLiAxMC4zMjg8L2JpYmw+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS44IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlc2Uga2luZ3MgdGhlbiBvZiBhbmNpZW50IHRpbWVzCgkJCQkJdXNlZCB0byBnb3Zlcm4gY29udGludW91c2x5IGluIG1hdHRlcnMgd2l0aGluIHRoZSBjaXR5IGFuZCBpbiB0aGUgY291bnRyeSBhbmQKCQkJCQlhY3Jvc3MgdGhlIGZyb250aWVyczsgYnV0IGxhdGVyIG9uIHdoZW4gZ3JhZHVhbGx5IHRoZSBraW5ncyByZWxpbnF1aXNoZWQgc29tZSBvZgoJCQkJCXRoZWlyIHBvd2VycyBhbmQgaGFkIG90aGVycyB0YWtlbiBmcm9tIHRoZW0gYnkgdGhlIG11bHRpdHVkZXMsIGluIHRoZSBjaXRpZXMgaW4KCQkJCQlnZW5lcmFsIG9ubHkgdGhlIHNhY3JpZmljZXMgd2VyZSBsZWZ0IHRvIHRoZSBraW5ncyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIG1vbmFyY2h5IHdhcyByZWR1Y2VkIHRvIGEgcHJpZXN0aG9vZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMDYzOSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAwNjM5Ij5DeXJlbmU8L3BsYWNlTmFtZT4g77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGR0LiA0LjE2MSIgdmFsaWQ9InllcyI+SGR0LgoJCQkJCQkJNC4xNjE8L2JpYmw+77yJIGFuZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEVwaGVzb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEVwaGVzb3MiPkVwaGVzdXM8L3BsYWNlTmFtZT4uPC9ub3RlPiB3aGlsZSB3aGVyZSBhbnl0aGluZyB0aGF0IGRlc2VydmVzIHRoZSBuYW1lCgkJCQkJb2Ygcm95YWx0eSBzdXJ2aXZlZCB0aGUga2luZ3Mgb25seSBoYWQgdGhlIGNvbW1hbmQgaW4gbWlsaXRhcnkgZXhwZWRpdGlvbnMKCQkJCQlhY3Jvc3MgdGhlIGZyb250aWVycy4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDA2MzkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMDYzOSI+Q3lyZW5lPC9wbGFjZU5hbWU+IO+8iDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhkdC4gNC4xNjEiIHZhbGlkPSJ5ZXMiPkhkdC4KCQkJCQkJCTQuMTYxPC9iaWJsPu+8iSBhbmQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxFcGhlc29zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxFcGhlc29zIj5FcGhlc3VzPC9wbGFjZU5hbWU+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1286a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSBhcmUKCQkJCQl0aGVuIHRoZXNlIGtpbmRzIG9mIGtpbmdzaGlwLCBmb3VyIGluIG51bWJlcjogb25lIGJlbG9uZ2luZyB0byB0aGUgaGVyb2ljIHRpbWVzLAoJCQkJCXdoaWNoIHdhcyBleGVyY2lzZWQgb3ZlciB3aWxsaW5nIHN1YmplY3RzLCBidXQgaW4gY2VydGFpbiBsaW1pdGVkIGZpZWxkcywgZm9yCgkJCQkJdGhlIGtpbmcgd2FzIGdlbmVyYWwgYW5kIGp1ZGdlIGFuZCBtYXN0ZXIgb2YgcmVsaWdpb3VzIGNlcmVtb25pZXM7IHNlY29uZCwgdGhlCgkJCQkJYmFyYmFyaWFuIG1vbmFyY2h5LCB3aGljaCBpcyBhbiBoZXJlZGl0YXJ5IGRlc3BvdGlzbSBnb3Zlcm5pbmcgaW4gY29uZm9ybWl0eQoJCQkJCXdpdGggbGF3OyB0aGlyZCwgdGhlIHJ1bGUgb2YgdGhlIGZ1bmN0aW9uYXJ5IGNhbGxlZCBhbiA8ZW1waCBjbGFzcz0idHJhbnNsYXRpb24iPmFlc3ltbmV0ZXM8L2VtcGg+LAoJCQkJCXdoaWNoIGlzIGFuIGVsZWN0aXZlIHR5cmFubnk7IGFuZCBmb3VydGggYW1vbmcgdGhlc2UgaXMgdGhlIFNwYXJ0YW4ga2luZ3NoaXAsCgkJCQkJd2hpY2ggbWF5IGJlIGRlc2NyaWJlZCBzaW1wbHkgYXMgYW4gaGVyZWRpdGFyeSBnZW5lcmFsc2hpcCBoZWxkIGZvciBsaWZlLiBUaGVzZQoJCQkJCWtpbmdzaGlwcyB0aGVuIGRpZmZlciBmcm9tIG9uZSBhbm90aGVyIGluIHRoaXMgbWFubmVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgYSBmaWZ0aCBraW5kIG9mIGtpbmdzaGlwIGlzIHdoZW4gYSBzaW5nbGUgcnVsZXIKCQkJCQlpcyBzb3ZlcmVpZ24gb3ZlciBhbGwgbWF0dGVycyBpbiB0aGUgd2F5IGluIHdoaWNoIGVhY2ggcmFjZSBhbmQgZWFjaCBjaXR5IGlzCgkJCQkJc292ZXJlaWduIG92ZXIgaXRzIGNvbW1vbiBhZmZhaXJzOyB0aGlzIG1vbmFyY2h5IHJhbmdlcyB3aXRoIHRoZSBydWxlIG9mIGEKCQkJCQltYXN0ZXIgb3ZlciBhIGhvdXNlaG9sZCwgZm9yIGp1c3QgYXMgdGhlIG1hc3RlcidzIHJ1bGUgaXMgYSBzb3J0IG9mIG1vbmFyY2h5IGluCgkJCQkJdGhlIGhvbWUsIHNvIGFic29sdXRlIG1vbmFyY2h5IGlzIGRvbWVzdGljIG1hc3RlcnNoaXAgb3ZlciBhIGNpdHksIG9yIG92ZXIgYQoJCQkJCXJhY2Ugb3Igc2V2ZXJhbCByYWNlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmUgYXJlIHRoZXJlZm9yZSwgd2UgbWF5CgkJCQkJc2F5LCB2aXJ0dWFsbHkgdHdvIGtpbmRzIG9mIGtpbmdzaGlwIHRoYXQgaGF2ZSBiZWVuIGV4YW1pbmVkLCB0aGlzIG9uZSBhbmQgdGhlCgkJCQkJU3BhcnRhbi4gRm9yIG1vc3Qgb2YgdGhlIG90aGVycyBsaWUgYmV0d2VlbiB0aGVzZSwgc2luY2Ugd2l0aCB0aGVtIHRoZSBraW5nIGlzCgkJCQkJc292ZXJlaWduIG92ZXIgZmV3ZXIgdGhpbmdzIHRoYW4gdW5kZXIgYWJzb2x1dGUgbW9uYXJjaHksIGJ1dCBvdmVyIG1vcmUgdGhhbgoJCQkJCXVuZGVyIHRoZSBTcGFydGFuIGtpbmdzaGlwLiBIZW5jZSBvdXIgaW5xdWlyeSBpcyB2aXJ0dWFsbHkgYWJvdXQgdHdvIHF1ZXN0aW9ucywKCQkJCQlvbmUgd2hldGhlciBpdCBpcyBleHBlZGllbnQgb3IgaW5leHBlZGllbnQgZm9yIHN0YXRlcyB0byBoYXZlIGEgbWlsaXRhcnkKCQkJCQljb21tYW5kZXIgaG9sZGluZyBvZmZpY2UgZm9yIGxpZmUsIGFuZCB0aGF0IGVpdGhlciBieSBkZXNjZW50IG9yIGJ5IGNsYXNzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Tb21lIE1TUy4gZ2l2ZSDigJhvciBieQoJCQkJCQllbGVjdGlvbi7igJk8L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyODZhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1286a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBvbmUgd2hldGhlciBpdCBpcyBleHBlZGllbnQgb3IgaW5leHBlZGllbnQgZm9yIG9uZSBtYW4gdG8gYmUgc292ZXJlaWduCgkJCQkJb3ZlciBldmVyeXRoaW5nLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1286a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPk5vdyB0aGUgc3R1ZHkgb2YgYQoJCQkJCW1pbGl0YXJ5IGNvbW1hbmQgb2YgdGhlIGtpbmQgbWVudGlvbmVkIGhhcyBtb3JlIHRoZSBhc3BlY3Qgb2YgYSBsZWdhbCB0aGFuIG9mIGEKCQkJCQljb25zdGl0dXRpb25hbCBpbnF1aXJ5IO+8iGZvciBpdCBpcyBwb3NzaWJsZSBmb3IgdGhpcyBmb3JtIG9mIG9mZmljZSB0bwoJCQkJCWV4aXN0IHVuZGVyIGFsbCBjb25zdGl0dXRpb25z77yJLCBzbyBsZXQgaXQgYmUgZGlzbWlzc2VkIGF0IHRoZSBmaXJzdAoJCQkJCQlzdGFnZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gMTI4OWEgMTEgZmYuOyBidXQgdGhlIHByb21pc2UKCQkJCQkJb2YgYSBmdWxsIGRpc2N1c3Npb24gb2YgbGF3IGlzIG5vdCBmdWxmaWxsZWQ8L25vdGU+OyBidXQgdGhlIHJlbWFpbmluZyBtb2RlCgkJCQkJb2Yga2luZ3NoaXAgaXMgYSBraW5kIG9mIGNvbnN0aXR1dGlvbiwgc28gdGhhdCBpdCBpcyBuZWNlc3NhcnkgdG8gY29uc2lkZXIgdGhpcwoJCQkJCW9uZSBhbmQgdG8gcnVuIG92ZXIgdGhlIGRpZmZpY3VsdGllcyB0aGF0IGl0IGludm9sdmVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgdGhlIHN0YXJ0aW5nLXBvaW50IG9mIHRoZSBpbnF1aXJ5IGlzIHRoZSBxdWVzdGlvbiB3aGV0aGVyCgkJCQkJaXQgaXMgbW9yZSBhZHZhbnRhZ2VvdXMgdG8gYmUgcnVsZWQgYnkgdGhlIGJlc3QgbWVuIG9yIGJ5IHRoZSBiZXN0IGxhd3MuCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPlRob3NlIG9mIHRoZSBvcGluaW9uIHRoYXQgaXQgaXMKCQkJCQlhZHZhbnRhZ2VvdXMgdG8gYmUgZ292ZXJuZWQgYnkgYSBraW5nIHRoaW5rIHRoYXQgbGF3cyBlbnVuY2lhdGUgb25seSBnZW5lcmFsCgkJCQkJcHJpbmNpcGxlcyBidXQgZG8gbm90IGdpdmUgZGlyZWN0aW9ucyBmb3IgZGVhbGluZyB3aXRoIGNpcmN1bXN0YW5jZXMgYXMgdGhleQoJCQkJCWFyaXNlOyBzbyB0aGF0IGluIGFuIGFydCBvZiBhbnkga2luZCBpdCBpcyBmb29saXNoIHRvIGdvdmVybiBwcm9jZWR1cmUgYnkKCQkJCQl3cml0dGVuIHJ1bGVzIO+8iGFuZCBpbmRlZWQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjgzMyI+RWd5cHQ8L3BsYWNlTmFtZT4gcGh5c2ljaWFucyBoYXZlIHRoZSByaWdodCB0byBhbHRlciB0aGVpciBwcmVzY3JpcHRpb24KCQkJCQlhZnRlciBmb3VyIGRheXMsIGFsdGhvdWdoIGlmIG9uZSBvZiB0aGVtIGFsdGVycyBpdCBiZWZvcmUgaGUgZG9lcyBzbyBhdCBoaXMgb3duCgkJCQkJcmlza++8iTsgaXQgaXMgY2xlYXIgdGhlcmVmb3JlIHRoYXQgZ292ZXJubWVudCBhY2NvcmRpbmcgdG8gd3JpdHRlbgoJCQkJCXJ1bGVzLCB0aGF0IGlzIGxhd3MsIGlzIG5vdCB0aGUgYmVzdCwgZm9yIHRoZSBzYW1lIHJlYXNvbi4gQXQgdGhlIHNhbWUgdGltZSwKCQkJCQlob3dldmVyLCBydWxlcnMgb3VnaHQgdG8gYmUgaW4gcG9zc2Vzc2lvbiBvZiB0aGUgZ2VuZXJhbCBwcmluY2lwbGUgYmVmb3JlCgkJCQkJbWVudGlvbmVkIGFzIHdlbGwuIEFuZCBhIHRoaW5nIHRoYXQgZG9lcyBub3QgY29udGFpbiB0aGUgZW1vdGlvbmFsIGVsZW1lbnQgaXMKCQkJCQlnZW5lcmFsbHkgc3VwZXJpb3IgdG8gYSB0aGluZyBpbiB3aGljaCBpdCBpcyBpbm5hdGU7IG5vdyB0aGUgbGF3IGRvZXMgbm90CgkJCQkJcG9zc2VzcyB0aGlzIGZhY3RvciwgYnV0IGV2ZXJ5IGh1bWFuIHNvdWw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+bmVjZXNzYXJpbHkgaGFzIGl0LiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1286b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBwZXJoYXBzIHNvbWVvbmUgbWlnaHQgc2F5IHRoYXQgaW4gY29tcGVuc2F0aW9uIGZvciB0aGlzIGEgc2luZ2xlIHJ1bGVyCgkJCQkJd2lsbCBkZWNpZGUgYmV0dGVyIGFib3V0IHBhcnRpY3VsYXIgY2FzZXMuIFRoZXJlZm9yZSBpdCBpcyBjbGVhciB0aGF0IG9uIHRoZSBvbmUKCQkJCQloYW5kIHRoZSBydWxlciBtdXN0IG5lY2Vzc2FyaWx5IGJlIGEgbGVnaXNsYXRvciwgYW5kIHRoYXQgdGhlcmUgbXVzdCBvciBiZSBsYXdzCgkJCQkJbGFpZCBkb3duLCBhbHRob3VnaCB0aGVzZSBtdXN0IG5vdCBiZSBzb3ZlcmVpZ248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB1bmFsdGVyYWJseSBiaW5kaW5nLCBhbmQgbm90IGJlIHNldCBhc2lkZSBieSBzcGVjaWFsCgkJCQkJCWRpc3BlbnNhdGlvbiBvZiB0aGUgcnVsZXIgd2hlbiBkZWVtZWQgdG8gYmUgdW5qdXN0IGluIHNvbWUgcGFydGljdWxhcgoJCQkJCQljYXNlLjwvbm90ZT4gd2hlcmUgdGhleSBnbyBhc3RyYXnigJRhZG1pdHRlZGx5IGluIGFsbCBvdGhlciBjYXNlcwoJCQkJCXRoZXkgb3VnaHQgdG8gYmUgc292ZXJlaWduOyBidXQgb24gdGhlIG90aGVyIGhhbmQgaW4gbWF0dGVycyB3aGljaCBpdCBpcwoJCQkJCWltcG9zc2libGUgZm9yIHRoZSBsYXcgZWl0aGVyIHRvIGRlY2lkZSBhdCBhbGwgb3IgdG8gZGVjaWRlIHdlbGwsIG91Z2h0IHRoZSBvbmUKCQkJCQliZXN0IG1hbiB0byBnb3Zlcm4gb3IgYWxsIHRoZSBjaXRpemVucz8gQXMgaXQgaXMsIHRoZSBjaXRpemVucyBhc3NlbWJsZWQgaGVhcgoJCQkJCWxhd3N1aXRzIGFuZCBkZWxpYmVyYXRlIGFuZCBnaXZlIGp1ZGdlbWVudHMsIGJ1dCB0aGVzZSBqdWRnZW1lbnRzIGFyZSBhbGwgb24KCQkJCQlwYXJ0aWN1bGFyIGNhc2VzLiBOb3cgbm8gZG91YnQgYW55IG9uZSBvZiB0aGVtIGluZGl2aWR1YWxseSBpcyBpbmZlcmlvciBjb21wYXJlZAoJCQkJCXdpdGggdGhlIGJlc3QgbWFuLCBidXQgYSBzdGF0ZSBjb25zaXN0cyBvZiBhIG51bWJlciBvZiBpbmRpdmlkdWFscywgYW5kIGp1c3QgYXMKCQkJCQlhIGJhbnF1ZXQgdG8gd2hpY2ggbWFueSBjb250cmlidXRlIGRpc2hlcyBpcyBmaW5lciB0aGFuIGEgc2luZ2xlIHBsYWluIGRpbm5lciwKCQkJCQlmb3IgdGhpcyByZWFzb24gaW4gbWFueSBjYXNlcyBhIGNyb3dkIGp1ZGdlcyBiZXR0ZXIgdGhhbiBhbnkgc2luZ2xlIHBlcnNvbi4KCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC42IiB1bml0PSJMb2ViIGNoYXAiIC8+QWxzbyB0aGUgbXVsdGl0dWRlIGlzIG1vcmUKCQkJCQlpbmNvcnJ1cHRpYmxl4oCUanVzdCBhcyB0aGUgbGFyZ2VyIHN0cmVhbSBvZiB3YXRlciBpcyBwdXJlciwgc28gdGhlIG1hc3MKCQkJCQlvZiBjaXRpemVucyBpcyBsZXNzIGNvcnJ1cHRpYmxlIHRoYW4gdGhlIGZldzsgYW5kIHRoZSBpbmRpdmlkdWFsJ3MganVkZ2VtZW50IGlzCgkJCQkJYm91bmQgdG8gYmUgY29ycnVwdGVkIHdoZW4gaGUgaXMgb3ZlcmNvbWUgYnkgYW5nZXIgb3Igc29tZSBvdGhlciBzdWNoIGVtb3Rpb24sCgkJCQkJd2hlcmVhcyBpbiB0aGUgb3RoZXIgY2FzZSBpdCBpcyBhIGRpZmZpY3VsdCB0aGluZyBmb3IgYWxsIHRoZSBwZW9wbGUgdG8gYmUKCQkJCQlyb3VzZWQgdG8gYW5nZXIgYW5kIGdvIHdyb25nIHRvZ2V0aGVyLiBCdXQgdGhlIG11bHRpdHVkZSBtdXN0IGNvbnNpc3Qgb2YgdGhlCgkJCQkJZnJlZW1lbiwgZG9pbmcgbm90aGluZyBhcGFydCBmcm9tIHRoZSBsYXcgZXhjZXB0IGFib3V0IG1hdHRlcnMgYXMgdG8gd2hpY2ggdGhlCgkJCQkJbGF3IG11c3Qgb2YgbmVjZXNzaXR5IGJlIGRlZmljaWVudC4gQW5kIGlmIHRoaXMgaXMgbm90IGluZGVlZCBlYXN5IHRvIGVuc3VyZSBpbgoJCQkJCXRoZSBjYXNlIG9mIG1hbnkgbWVuLCB5ZXQgaWYgdGhlcmUgd2VyZSBhIG1ham9yaXR5IG9mIGdvb2QgbWVuIGFuZCBnb29kCgkJCQkJY2l0aXplbnMsIHdvdWxkIGFuIGluZGl2aWR1YWwgbWFrZSBhIG1vcmUgaW5jb3JydXB0aWJsZSBydWxlciBvciByYXRoZXIgdGhvc2UKCQkJCQl3aG8gdGhvdWdoIHRoZSBtYWpvcml0eSBpbiBudW1iZXIgeWV0IGFyZSBhbGwgZ29vZD8gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyODZiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1286b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPlRoZSBtYWpvcml0eSwgaXMKCQkJCQlpdCBub3Qgb2J2aW91cz8gQnV0IGl0IHdpbGwgYmUgc2FpZCB0aGF0IHRoZXkgd2lsbCBzcGxpdCB1cCBpbnRvIGZhY3Rpb25zLAoJCQkJCXdoZXJlYXMgd2l0aCBhIHNpbmdsZSBydWxlciB0aGlzIGNhbm5vdCBoYXBwZW4uIEJ1dCBhZ2FpbnN0IHRoaXMgbXVzdCBwZXJoYXBzIGJlCgkJCQkJc2V0IHRoZSBmYWN0IHRoYXQgdGhleSBhcmUgYXMgdmlydHVvdXMgaW4gc291bCBhcyB0aGUgc2luZ2xlIHJ1bGVyLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1286b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPklmIHRoZW4gdGhlIHJ1bGUgb2YgdGhlIG1ham9yaXR5IHdoZW4KCQkJCQl0aGVzZSBhcmUgYWxsIGdvb2QgbWVuIGlzIHRvIGJlIGNvbnNpZGVyZWQgYW4gYXJpc3RvY3JhY3ksIGFuZCB0aGF0IG9mIHRoZSBvbmUKCQkJCQltYW4ga2luZ3NoaXAsIGFyaXN0b2NyYWN5IHdvdWxkIGJlIHByZWZlcmFibGUgZm9yIHRoZSBzdGF0ZXMgdG8ga2luZ3NoaXAsCgkJCQkJd2hldGhlciB0aGUgcm95YWwgb2ZmaWNlIGJlIGNvbmpvaW5lZCB3aXRoIG1pbGl0YXJ5IGZvcmNlIG9yIHdpdGhvdXQgaXQsIGlmIGl0CgkJCQkJYmUgcG9zc2libGUgdG8gZ2V0IGEgbGFyZ2VyIG51bWJlciBvZiBtZW4gdGhhbiBvbmUgd2hvIGFyZSBvZiBzaW1pbGFyIHF1YWxpdHkuCgkJCQkJQW5kIGl0IHdhcyBwZXJoYXBzIG9ubHkgb3dpbmcgdG8gdGhpcyB0aGF0IGtpbmdzaGlwcyBleGlzdGVkIGluIGVhcmxpZXIgdGltZXMsCgkJCQkJYmVjYXVzZSBpdCB3YXMgcmFyZSB0byBmaW5kIG1lbiB3aG8gZ3JlYXRseSBleGNlbGxlZCBpbiB2aXJ0dWUsIGVzcGVjaWFsbHkgYXMgaW4KCQkJCQl0aG9zZSBkYXlzIHRoZXkgZHdlbHQgaW4gc21hbGwgY2l0aWVzLiBNb3Jlb3ZlciB0aGV5IHVzZWQgdG8gYXBwb2ludCB0aGVpciBraW5ncwoJCQkJCW9uIHRoZSBncm91bmQgb2YgcHVibGljIHNlcnZpY2UsIGFuZCB0byBwZXJmb3JtIHRoaXMgaXMgYSB0YXNrIGZvciB0aGUgZ29vZCBtZW4uCgkJCQkJQnV0IGFzIGl0IGJlZ2FuIHRvIGNvbWUgYWJvdXQgdGhhdCBtYW55IG1lbiBhcm9zZSB3aG8gd2VyZSBhbGlrZSBpbiByZXNwZWN0IG9mCgkJCQkJdmlydHVlLCB0aGV5IHdvdWxkIG5vIGxvbmdlciBzdWJtaXQgdG8gcm95YWx0eSwgYnV0IHNvdWdodCBmb3Igc29tZSBmb3JtIG9mCgkJCQkJY29tbW9ud2VhbHRoLCBhbmQgc2V0IHVwIGEgcmVwdWJsaWNhbiBjb25zdGl0dXRpb24uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhcyBtZW4gYmVjb21pbmcgYmFzZXIgYmVnYW4gdG8gbWFrZSBtb25leSBvdXQgb2YgdGhlCgkJCQkJY29tbXVuaXR5LCBpdCBpcyByZWFzb25hYmxlIHRvIHN1cHBvc2UgdGhhdCBzb21lIHN1Y2ggY2F1c2UgYXMgdGhpcyBvY2Nhc2lvbmVkCgkJCQkJdGhlIHJpc2Ugb2Ygb2xpZ2FyY2hpZXM7IGZvciB0aGV5IGJyb3VnaHQgd2VhbHRoIGludG8gaG9ub3IuIEFuZCBmcm9tCgkJCQkJb2xpZ2FyY2hpZXMgdGhleSBmaXJzdCBjaGFuZ2VkIHRvIHR5cmFubmllcywgYW5kIGZyb20gdHlyYW5uaWVzIHRvIGRlbW9jcmFjeTsKCQkJCQlmb3IgYnkgY29uc3RhbnRseSBicmluZ2luZyB0aGUgZ292ZXJubWVudCBpbnRvIGZld2VyIGhhbmRzIG93aW5nIHRvIGEgYmFzZSBsb3ZlCgkJCQkJb2YgZ2FpbiwgdGhleSBtYWRlIHRoZSBtdWx0aXR1ZGUgc3Ryb25nZXIsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gbW9yZSBtZW4gb2YgYWJpbGl0eSBhbmQgcG9zaXRpb24gd2VudCBvdmVyIHRvIHRoZSBvcHBvc2l0aW9uLjwvbm90ZT4KCQkJCQlzbyB0aGF0IGl0IHNldCB1cG9uIHRoZSBvbGlnYXJjaHMsIGFuZCBkZW1vY3JhY2llcyBjYW1lIGludG8KCQkJCQkJZXhpc3RlbmNlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5CdXQgbm93IHRoYXQgdGhlIHN0YXRlcwoJCQkJCWhhdmUgY29tZSB0byBiZSBldmVuIGdyZWF0ZXIgdGhhbiB0aGV5IHdlcmUsIHBlcmhhcHMgaXQgaXMgbm90IGVhc3kgZm9yIHlldAoJCQkJCWFub3RoZXIgZm9ybSBvZiBjb25zdGl0dXRpb24gYmVzaWRlIGRlbW9jcmFjeSB0byBjb21lIGludG8gZXhpc3RlbmNlLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1287a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBldmVuIGlmIG9uZSBoZWxkIHRoYXQgcm95YWwgZ292ZXJubWVudAoJCQkJCWlzIGJlc3QgZm9yIHN0YXRlcywgd2hhdCBpcyB0byBiZSB0aGUgcG9zaXRpb24gYXMgcmVnYXJkcyB0aGUga2luZydzIGNoaWxkcmVuPwoJCQkJCWlzIHRoZSBzb3ZlcmVpZ250eSB0byBiZSBoZXJlZGl0YXJ5PyBCdXQgdGhpcyB3aWxsIGJlIGRpc2FzdHJvdXMgaWYgdGhlIGtpbmcncwoJCQkJCXNvbnMgdHVybiBvdXQgdG8gYmUgbGlrZSB3aGF0IHNvbWUgaGF2ZSBiZWVuLiBJdCBtYXkgYmUgc2FpZCB0aGF0IHRoZSBraW5nIGJlaW5nCgkJCQkJc292ZXJlaWduIHdpbGwgbm90IGluIHRoYXQgY2FzZSBiZXF1ZWF0aCB0aGUgdGhyb25lIHRvIGhpcyBjaGlsZHJlbi4gQnV0IHRoYXQgaXMKCQkJCQl0b28gbXVjaCB0byBiZSBlYXN5IHRvIGJlbGlldmU6IGl0IHdvdWxkIGJlIGRpZmZpY3VsdCBmb3IgYSBraW5nIHRvIGRpc2luaGVyaXQKCQkJCQloaXMgc29ucywgYW5kIGFuIGFjdCBvZiB2aXJ0dWUgYWJvdmUgdGhlIGxldmVsIG9mIGh1bWFuIG5hdHVyZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB0aGVyZSBpcyBhIGRpZmZpY3VsdHkgYWxzbyBhYm91dCB0aGUKCQkJCQlyb3lhbCBwb3dlcjogb3VnaHQgdGhlIG1hbiB3aG8gaXMgdG8gcmVpZ24gYXMga2luZyB0byBmb3JjZSB0byBoYXZlIGFuIGFybWVkCgkJCQkJZm9yY2UgYWJvdXQgaGltLCBieSBtZWFucyBvZiB3aGljaCBoZSB3aWxsIGhhdmUgcG93ZXIgdG8gY29tcGVsIHRob3NlIHdobyBtYXkgYmUKCQkJCQl1bndpbGxpbmcgdG8gb2JleSwgb3IgaWYgbm90LCBob3cgaXMgaXQgcG9zc2libGUgZm9yIGhpbSB0byBhZG1pbmlzdGVyIGhpcwoJCQkJCW9mZmljZT8gRm9yIGV2ZW4gaWYgaGUgd2VyZSBhIGxhdy1hYmlkaW5nIHNvdmVyZWlnbiBhbmQgbmV2ZXIgYWN0ZWQgYWNjb3JkaW5nIHRvCgkJCQkJaGlzIG93biB3aWxsIGFnYWluc3QgdGhlIGxhdywgbmV2ZXJ0aGVsZXNzIGl0IHdvdWxkIGJlIGVzc2VudGlhbCBmb3IgaGltIHRvIGhhdmUKCQkJCQlwb3dlciBiZWhpbmQgaGltIHdoZXJlYnkgdG8gc2FmZWd1YXJkIHRoZSBsYXdzLiBQcm9iYWJseSB0aGVyZWZvcmUgaXQgaXMgbm90CgkJCQkJZGlmZmljdWx0IHRvIGRlZmluZSB0aGUgcmVndWxhdGlvbnMgZm9yIGEga2luZyBvZiB0aGlzIHNvcnQ6IGhlIG11c3QgaGF2ZSBhCgkJCQkJZm9yY2Ugb2YgaGlzIG93biwgYnV0IHRoZSBmb3JjZSBtdXN0IGJlIG9ubHkgc28gbGFyZ2UgYXMgdG8gYmUgc3Ryb25nZXIgdGhhbiBhCgkJCQkJc2luZ2xlIGluZGl2aWR1YWwgb3IgZXZlbiBzZXZlcmFsIGluZGl2aWR1YWxzIGJhbmRlZCB0b2dldGhlciwgYnV0IHdlYWtlciB0aGFuCgkJCQkJdGhlIG11bHRpdHVkZSwgb24gdGhlIHByaW5jaXBsZSBvbiB3aGljaCB0aGUgbWVuIG9mIG9sZCB0aW1lcyB1c2VkIHRvIGFzc2lnbgoJCQkJCWJvZHlndWFyZHMgd2hlbmV2ZXIgdGhleSBhcHBvaW50ZWQgc29tZWJvZHkgYXMgd2hhdCB0aGV5IHRlcm1lZAoJCQkJCQk8ZW1waCBjbGFzcz0idHJhbnNsYXRpb24iPmFlc3ltbmV0ZXM8L2VtcGg+IG9yIHR5cmFudDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj7igJhPciB0eXJhbnTigJkgbG9va3MgbGlrZSBhbiBpbmNvcnJlY3Qgbm90ZSwgc2VlIDEyODViCgkJCQkJCTI1Ljwvbm90ZT4gb2YgdGhlIHN0YXRlLCBhbmQgYWxzbywgd2hlbiBEaW9ueXNpdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEyNTlhIDM5IG4uPC9ub3RlPiBhc2tlZCBmb3IgaGlzIGd1YXJkcywgc29tZWJvZHkgYWR2aXNlZAoJCQkJCWhpbSB0byBnaXZlIHRoZSBzYW1lIG51bWJlciBvZiBndWFyZHMgdG8gdGhlIGNpdGl6ZW5zIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3lyYWN1c2UiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyODdhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1287a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1287a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PdXIKCQkJCQlkaXNjdXNzaW9uIGhhcyBub3cgcmVhY2hlZCB0aGUgY2FzZSBvZiB0aGUga2luZyB3aG8gYWN0cyBpbiBhbGwgbWF0dGVycwoJCQkJCWFjY29yZGluZyB0byBoaXMgb3duIHdpbGwsIGFuZCB3ZSBtdXN0IGV4YW1pbmUgdGhpcyB0eXBlIG9mIHJveWFsdHkuIEZvciB0aGUKCQkJCQlzby1jYWxsZWQgY29uc3RpdHV0aW9uYWwgbW9uYXJjaHksIGFzIHdlIHNhaWQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMC4zLjwvbm90ZT4gaXMgbm90IGEgc3BlY2lhbCBraW5kIG9mIGNvbnN0aXR1dGlvbgoJCQkJCe+8iHNpbmNlIGl0IGlzIHBvc3NpYmxlIGZvciBhIGxpZmUtbG9uZyBnZW5lcmFsc2hpcCB0byBleGlzdCB1bmRlciBhbGwKCQkJCQljb25zdGl0dXRpb25zLCBmb3IgZXhhbXBsZSB1bmRlciBhIGRlbW9jcmFjeSBhbmQgYW4gYXJpc3RvY3JhY3ksIGFuZCBtYW55IHBlb3BsZQoJCQkJCW1ha2Ugb25lIG1hbiBzb3ZlcmVpZ24gb3ZlciB0aGUgYWRtaW5pc3RyYXRpb24sIGZvciBpbnN0YW5jZSB0aGVyZSBpcyBhCgkJCQkJZ292ZXJubWVudCBvZiB0aGlzIHNvcnQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxFcGlkYW1ub3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEVwaWRhbW5vcyI+RXBpZGFtbnVzPC9wbGFjZU5hbWU+LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJCUR1cmF6em8sIG9uIHRoZSBBZHJpYXRpYy48L25vdGU+IGFuZCBhbHNvCgkJCQkJYXQgT3B1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DaGllZiB0b3duIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTG9jcmkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLExvY3JpIj5Mb2NyaTwvcGxhY2VOYW1lPiwgbmVhciB0aGUgU3RyYWl0cyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjY3NyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjc3Ij5FdWJvZWE8L3BsYWNlTmFtZT48L25vdGU+IHRvIGEgY2VydGFpbiBzbWFsbGVyCgkJCQkJZXh0ZW5077yJOyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLExvY3JpIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxMb2NyaSI+TG9jcmk8L3BsYWNlTmFtZT4sIG5lYXIgdGhlIFN0cmFpdHMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2NzciIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjY3NyI+RXVib2VhPC9wbGFjZU5hbWU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IHdlIGhhdmUgbm93CgkJCQkJdG8gZGlzY3VzcyB3aGF0IGlzIGNhbGxlZCBBYnNvbHV0ZSBNb25hcmNoeSwgd2hpY2ggaXMgdGhlIG1vbmFyY2h5IHVuZGVyIHdoaWNoCgkJCQkJdGhlIGtpbmcgZ292ZXJucyBhbGwgbWVuIGFjY29yZGluZyB0byBoaXMgb3duIHdpbGwuIFNvbWUgcGVvcGxlIHRoaW5rIHRoYXQgaXQgaXMKCQkJCQllbnRpcmVseSBjb250cmFyeSB0byBuYXR1cmUgZm9yIG9uZSBwZXJzb24gdG8gYmUgc292ZXJlaWduIG92ZXIgYWxsIHRoZSBjaXRpemVucwoJCQkJCXdoZXJlIHRoZSBzdGF0ZSBjb25zaXN0cyBvZiBtZW4gd2hvIGFyZSBhbGlrZTsgZm9yIG5lY2Vzc2FyaWx5IHBlcnNvbnMgYWxpa2UgaW4KCQkJCQluYXR1cmUgbXVzdCBpbiBhY2NvcmRhbmNlIHdpdGggbmF0dXJlIGhhdmUgdGhlIHNhbWUgcHJpbmNpcGxlIG9mIGp1c3RpY2UgYW5kIHRoZQoJCQkJCXNhbWUgdmFsdWUsIHNvIHRoYXQgaW5hc211Y2ggYXMgZm9yIHBlcnNvbnMgd2hvIGFyZSB1bmVxdWFsIHRvIGhhdmUgYW4gZXF1YWwKCQkJCQlhbW91bnQgb2YgZm9vZCBvciBjbG90aGluZyBpcyBoYXJtZnVsIGZvciB0aGVpciBib2RpZXMsIHRoZSBzYW1lIGlzIHRoZSBjYXNlCgkJCQkJYWxzbyBpbiByZWdhcmQgdG8gaG9ub3JzOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjExLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5zaW1pbGFybHkKCQkJCQl0aGVyZWZvcmUgaXQgaXMgd3JvbmcgZm9yIHRob3NlIHdobyBhcmUgZXF1YWwgdG8gaGF2ZSBpbmVxdWFsaXR5LCBvd2luZyB0byB3aGljaAoJCQkJCWl0IGlzIGp1c3QgZm9yIG5vIG9uZSBwZXJzb24gdG8gZ292ZXJuIG9yIGJlIGdvdmVybmVkIG1vcmUgdGhhbiBhbm90aGVyLCBhbmQKCQkJCQl0aGVyZWZvcmUgZm9yIGV2ZXJ5Ym9keSB0byBnb3Zlcm4gYW5kIGJlIGdvdmVybmVkIGFsaWtlIGluIHR1cm4uIEFuZCB0aGlzCgkJCQkJY29uc3RpdHV0ZXMgbGF3IGZvciByZWd1bGF0aW9uIGlzIGxhdy4gVGhlcmVmb3JlIGl0IGlzIHByZWZlcmFibGUgZm9yIHRoZSBsYXcgdG8KCQkJCQlydWxlIHJhdGhlciB0aGFuIGFueSBvbmUgb2YgdGhlIGNpdGl6ZW5zLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgYWNjb3JkaW5nIHRvIHRoaXMgc2FtZSBwcmluY2lwbGUsIGV2ZW4gaWYgaXQgYmUgYmV0dGVyIGZvcgoJCQkJCWNlcnRhaW4gbWVuIHRvIGdvdmVybiwgdGhleSBtdXN0IGJlIGFwcG9pbnRlZCBhcyBndWFyZGlhbnMgb2YgdGhlIGxhd3MgYW5kIGluCgkJCQkJc3Vib3JkaW5hdGlvbiB0byB0aGVtOyBmb3IgdGhlcmUgbXVzdCBiZSBzb21lIGdvdmVybm1lbnQsIGJ1dCBpdCBpcyBjbGVhcmx5IG5vdAoJCQkJCWp1c3QsIG1lbiBzYXksIGZvciBvbmUgcGVyc29uIHRvIGJlIGdvdmVybm9yIHdoZW4gYWxsIHRoZSBjaXRpemVucyBhcmUgYWxpa2UuCgkJCQkJCTwvdHJhbnNsYXRpb24+"
translation['3.1287b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IG1heSBiZSBvYmplY3RlZCB0aGF0IGFueQoJCQkJCWNhc2Ugd2hpY2ggdGhlIGxhdyBhcHBlYXJzIHRvIGJlIHVuYWJsZSB0byBkZWZpbmUsIGEgaHVtYW4gYmVpbmcgYWxzbyB3b3VsZCBiZQoJCQkJCXVuYWJsZSB0byBkZWNpZGUuIEJ1dCB0aGUgbGF3IGZpcnN0IHNwZWNpYWxseSBlZHVjYXRlcyB0aGUgbWFnaXN0cmF0ZXMgZm9yIHRoZQoJCQkJCXB1cnBvc2UgYW5kIHRoZW4gY29tbWlzc2lvbnMgdGhlbSB0byBkZWNpZGUgYW5kIGFkbWluaXN0ZXIgdGhlIG1hdHRlcnMgdGhhdCBpdAoJCQkJCWxlYXZlcyBvdmVyIOKAmGFjY29yZGluZyB0byB0aGUgYmVzdCBvZiB0aGVpciBqdWRnZW1lbnQs4oCZPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgZm9ybXVsYSBjYW1lIGluIHRoZSBvYXRoIHRha2VuIGJ5IHRoZQoJCQkJCQlkaWNhc3RzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPi48L25vdGU+IGFuZAoJCQkJCWZ1cnRoZXJtb3JlIGl0IGFsbG93cyB0aGVtIHRvIGludHJvZHVjZSBmb3IgdGhlbXNlbHZlcyBhbnkgYW1lbmRtZW50IHRoYXQKCQkJCQlleHBlcmllbmNlIGxlYWRzIHRoZW0gdG8gdGhpbmsgYmV0dGVyIHRoYW4gdGhlIGVzdGFibGlzaGVkIGNvZGUuIEhlIHRoZXJlZm9yZQoJCQkJCXRoYXQgcmVjb21tZW5kcyB0aGF0IHRoZSBsYXcgc2hhbGwgZ292ZXJuIHNlZW1zIHRvIHJlY29tbWVuZCB0aGF0IEdvZCBhbmQgcmVhc29uCgkJCQkJYWxvbmUgc2hhbGwgZ292ZXJuLCBidXQgaGUgdGhhdCB3b3VsZCBoYXZlIG1hbiBnb3Zlcm4gYWRkcyBhIHdpbGQgYW5pbWFsIGFsc287CgkJCQkJZm9yIGFwcGV0aXRlIGlzIGxpa2UgYSB3aWxkIGFuaW1hbCwgYW5kIGFsc28gcGFzc2lvbiB3YXJwcyB0aGUgcnVsZSBldmVuIG9mIHRoZQoJCQkJCWJlc3QgbWVuLiBUaGVyZWZvcmUgdGhlIGxhdyBpcyB3aXNkb20gd2l0aG91dCBkZXNpcmUuIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjExLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhlcmUgc2VlbXMgdG8gYmUgbm8gdHJ1dGggaW4gdGhlIGFuYWxvZ3kgd2hpY2ggYXJndWVzCgkJCQkJZnJvbSB0aGUgYXJ0czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRoZSBwcmFjdGljYWwgc2NpZW5jZXMsIG9mCgkJCQkJCXdoaWNoIG1lZGljaW5lIGlzIHRha2VuIGFzIGFuIGV4YW1wbGUuPC9ub3RlPiB0aGF0IGl0IGlzIGEgYmFkIHRoaW5nIHRvCgkJCQkJZG9jdG9yIG9uZXNlbGYgYnkgYm9vaywgYnV0IHByZWZlcmFibGUgdG8gZW1wbG95IHRoZSBleHBlcnRzIGluIHRoZSBhcnRzLiBGb3IKCQkJCQl0aGV5IG5ldmVyIGFjdCBjb250cmFyeSB0byBwcmluY2lwbGUgZnJvbSBtb3RpdmVzIG9mIGZyaWVuZHNoaXAsIGJ1dCBlYXJuIHRoZWlyCgkJCQkJZmVlIHdoZW4g77yIZm9yIGluc3RhbmNl77yJIHRoZXkgaGF2ZSBjdXJlZCB0aGVpciBwYXRpZW50cywKCQkJCQl3aGVyZWFzIGhvbGRlcnMgb2YgcG9saXRpY2FsIG9mZmljZSB1c3VhbGx5IGRvIG1hbnkgdGhpbmdzIG91dCBvZiBzcGl0ZSBhbmQgdG8KCQkJCQl3aW4gZmF2b3I7IHNpbmNlIHdoZW4gcGVvcGxlIHN1c3BlY3QgZXZlbiB0aGUgcGh5c2ljaWFucyBvZiBiZWluZyBpbiB0aGUKCQkJCQljb25maWRlbmNlIG9mIHRoZWlyIGVuZW1pZXMgYW5kIG9mIHRyeWluZyB0byBtYWtlIGF3YXkgd2l0aCB0aGVtIGZvciBnYWluLCBpbgoJCQkJCXRoYXQgY2FzZSB0aGV5IHdvdWxkIHNvb25lciBsb29rIHVwIHRoZSB0cmVhdG1lbnQgaW4gdGhlIGJvb2tzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI4N2IiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['3.1287b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1287b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPllldCBjZXJ0YWlubHkgcGh5c2ljaWFucwoJCQkJCXRoZW1zZWx2ZXMgY2FsbCBpbiBvdGhlciBwaHlzaWNpYW5zIHRvIHRyZWF0IHRoZW0gd2hlbiB0aGV5IGFyZSBpbGwsIGFuZAoJCQkJCWd5bW5hc3RpYyB0cmFpbmVycyBwdXQgdGhlbXNlbHZlcyB1bmRlciBvdGhlciB0cmFpbmVycyB3aGVuIHRoZXkgYXJlIGRvaW5nCgkJCQkJZXhlcmNpc2VzLCBiZWxpZXZpbmcgdGhhdCB0aGV5IGFyZSB1bmFibGUgdG8ganVkZ2UgdHJ1bHkgYmVjYXVzZSB0aGV5IGFyZQoJCQkJCWp1ZGdpbmcgYWJvdXQgdGhlaXIgb3duIGNhc2VzIGFuZCB3aGVuIHRoZXkgYXJlIHVuZGVyIHRoZSBpbmZsdWVuY2Ugb2YgZmVlbGluZy4KCQkJCQlIZW5jZSBpdCBpcyBjbGVhciB0aGF0IHdoZW4gbWVuIHNlZWsgZm9yIHdoYXQgaXMganVzdCB0aGV5IHNlZWsgZm9yIHdoYXQgaXMKCQkJCQlpbXBhcnRpYWw7IGZvcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIHRoaXMgc2hvdWxkIGJlCgkJCQkJCeKAmGFuZC7igJk8L25vdGU+IHRoZSBsYXcgaXMgdGhhdCB3aGljaCBpcyBpbXBhcnRpYWwuIEFnYWluLAoJCQkJCWN1c3RvbWFyeSBsYXdzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIHJ1bGVzIG9mIGR1dHkgYW5kIG9mCgkJCQkJCW1hbm5lcnMgdGhhdCBhcmUgY3VzdG9tYXJ5IGJ1dCBub3QgZW1ib2RpZWQgaW4gbGVnaXNsYXRpb246IGNmLiAxMzE5YiA0MAoJCQkJCQnigJh0aGUgbGF3cyBib3RoIHdyaXR0ZW4gYW5kIHVud3JpdHRlbi7igJk8L25vdGU+IGFyZSBtb3JlCgkJCQkJc292ZXJlaWduIGFuZCBkZWFsIHdpdGggbW9yZSBzb3ZlcmVpZ24gbWF0dGVycyB0aGFuIHdyaXR0ZW4gbGF3cywgc28gdGhhdCBpZiBhCgkJCQkJaHVtYW4gcnVsZXIgaXMgbGVzcyBsaWFibGUgdG8gZXJyb3IgdGhhbiB3cml0dGVuIGxhd3MsIHlldCBoZSBpcyBub3QgbGVzcyBsaWFibGUKCQkJCQl0byBlcnJvciB0aGFuIHRoZSBsYXdzIG9mIGN1c3RvbS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMS43IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGFsc28gaXQgaXMgY2VydGFpbmx5IG5vdCBlYXN5IGZvciB0aGUgc2luZ2xlIHJ1bGVyIHRvIG92ZXJzZWUgYSBtdWx0aXR1ZGUKCQkJCQlvZiB0aGluZ3M7IGl0IHdpbGwgdGhlcmVmb3JlIGJlIG5lY2Vzc2FyeSBmb3IgdGhlIG9mZmljaWFscyBhcHBvaW50ZWQgYnkgaGltIHRvCgkJCQkJYmUgbnVtZXJvdXM7IHNvIHRoYXQgd2hhdCBkaWZmZXJlbmNlIGRvZXMgaXQgbWFrZSB3aGV0aGVyIHRoaXMgaGFzIGJlZW4gdGhlCgkJCQkJYXJyYW5nZW1lbnQgaW1tZWRpYXRlbHkgZnJvbSB0aGUgb3V0c2V0IG9yIHRoZSBzaW5nbGUgcnVsZXIgYXBwb2ludHMgdGhlbSBpbgoJCQkJCXRoaXMgbWFubmVyPyBBZ2FpbiwgYSB0aGluZyB0aGF0IGhhcyBhbHNvIGJlZW4gc2FpZCBiZWZvcmUsIGlmIHRoZSB2aXJ0dW91cyBtYW4KCQkJCQlqdXN0bHkgZGVzZXJ2ZXMgdG8gcnVsZSBiZWNhdXNlIGhlIGlzIGJldHRlciwgeWV0IHR3byBnb29kIG1lbiBhcmUgYmV0dGVyIHRoYW4KCQkJCQlvbmU6IGZvciB0aGF0IGlzIHRoZSBtZWFuaW5nIG9mIHRoZSBsaW5lPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDEwLjIyNCIgdmFsaWQ9InllcyI+SG9tLiBJbC4gMTAuMjI0PC9iaWJsPjogVGhlIHBhc3NhZ2UgZ29lcyBvbgoJCQkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOseG9tyDPhM61IM+Az4Hhvbgg4b2DIM+Ezr/hv6Yg4byQzr3hvbnOt8+DzrXOvSDhvYXPgM+Az4nPgiDOuuG9s8+BzrTOv8+CCgkJCQkJCQnhvJThv4M8L2ZvcmVpZ24+LCDigJh0aGVuIG9uZSBkaXNjZXJuZXRoIEJlZm9yZSB0aGUgb3RoZXIgaG93CgkJCQkJCWFkdmFudGFnZSBsaWV0aC7igJk8L25vdGU+CgkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gMTAuMjI0IiB2YWxpZD0ieWVzIj5Ib20uIElsLiAxMC4yMjQ8L2JpYmw+OiBUaGUgcGFzc2FnZSBnb2VzIG9uCgkJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6x4b23IM+EzrUgz4DPgeG9uCDhvYMgz4TOv+G/piDhvJDOveG9uc63z4POtc69IOG9hc+Az4DPic+CIM664b2zz4HOtM6/z4IKCQkJCQkJCeG8lOG/gzwvZm9yZWlnbj4sIOKAmHRoZW4gb25lIGRpc2Nlcm5ldGggQmVmb3JlIHRoZSBvdGhlciBob3cKCQkJCQkJYWR2YW50YWdlIGxpZXRoLuKAmTxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5XaGVuIHR3byB0b2dldGhlciBnb+KAlDwvbD4KCQkJCQk8L3F1b3RlPiBhbmQgb2YgdGhlIHByYXllciBvZiBBZ2FtZW1ub248bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPldoZW4gdHdvIHRvZ2V0aGVyIGdv4oCUPC9sPgoJCQkJCTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAyLjM3MiIgdmFsaWQ9InllcyI+SG9tLiBJbC4gMi4zNzI8L2JpYmw+Ljwvbm90ZT4KCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAyLjM3MiIgdmFsaWQ9InllcyI+SG9tLiBJbC4gMi4zNzI8L2JpYmw+LjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5NYXkgdGVuIHN1Y2ggZmVsbG93LWNvdW5jaWxsb3JzIGJlIG1pbmUuPC9sPgoJCQkJCTwvcXVvdGU+IEFuZCBldmVuIG5vdyB0aGUgbWFnaXN0cmF0ZXMsIGxpa2UgdGhlIEF0aGVuaWFuIGRpY2FzdCwgaGF2ZSBwb3dlciB0bwoJCQkJCWp1ZGdlIGNlcnRhaW4gY2FzZXMgYWJvdXQgd2hpY2ggdGhlIGxhdyBpcyB1bmFibGUgdG8gZ2l2ZSBhIGNsZWFyIGRlY2xhcmF0aW9uLAoJCQkJCXNpbmNlIG5vYm9keSBkaXNwdXRlcyB0aGF0IGluIG1hdHRlcnMgYWJvdXQgd2hpY2ggaXQgY2FuIGRvIHNvIHRoZSBsYXcgd291bGQgYmUKCQkJCQl0aGUgYmVzdCBydWxlciBhbmQganVkZ2UuIDxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+TWF5IHRlbiBzdWNoIGZlbGxvdy1jb3VuY2lsbG9ycyBiZSBtaW5lLjwvbD4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjExLjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQKCQkJCQlzaW5jZSwgYWx0aG91Z2ggc29tZSB0aGluZ3MgY2FuIGJlIGNvdmVyZWQgYnkgdGhlIGxhd3MsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm90aGVyIHRoaW5ncyBjYW5ub3QsIGl0IGlzIHRoZSBsYXR0ZXIgdGhhdCBjYXVzZQoJCQkJCWRvdWJ0IGFuZCByYWlzZSB0aGUgcXVlc3Rpb24gd2hldGhlciBpdCBpcyBwcmVmZXJhYmxlIGZvciB0aGUgYmVzdCBsYXcgdG8gcnVsZQoJCQkJCW9yIHRoZSBiZXN0IG1hbi4gRm9yIHRvIGxheSBkb3duIGEgbGF3IGFib3V0IHRoaW5ncyB0aGF0IGFyZSBzdWJqZWN0cyBmb3IKCQkJCQlkZWxpYmVyYXRpb24gaXMgYW4gaW1wb3NzaWJpbGl0eS4gVGhlcmVmb3JlIG1lbiBkbyBub3QgZGVueSB0aGF0IGl0IG11c3QgYmUgZm9yCgkJCQkJYSBodW1hbiBiZWluZyB0byBqdWRnZSBhYm91dCBzdWNoIG1hdHRlcnMsIGJ1dCB0aGV5IHNheSB0aGF0IGl0IG91Z2h0IG5vdCB0byBiZQoJCQkJCWEgc2luZ2xlIGh1bWFuIGJlaW5nIG9ubHkgYnV0IGEgbnVtYmVyLiBGb3IgdGhlIGluZGl2aWR1YWwgb2ZmaWNpYWwganVkZ2VzIHdlbGwKCQkJCQl3aGVuIGhlIGhhcyBiZWVuIGluc3RydWN0ZWQgYnkgdGhlIGxhdywgPC90cmFuc2xhdGlvbj4="
translation['3.1288a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBpdCB3b3VsZCBkb3VidGxlc3Mgc2VlbSBjdXJpb3VzIGlmIGEgcGVyc29uIHNhdyBiZXR0ZXIKCQkJCQl3aGVuIGp1ZGdpbmcgd2l0aCB0d28gZXllcyBhbmQgdHdvIG9yZ2FucyBvZiBoZWFyaW5nIGFuZCBhY3Rpbmcgd2l0aCB0d28gZmVldAoJCQkJCWFuZCBoYW5kcyB0aGFuIG1hbnkgcGVyc29ucyB3aXRoIG1hbnksIHNpbmNlIGV2ZW4gYXMgaXQgaXMgbW9uYXJjaHMgbWFrZSBtYW55CgkJCQkJZXllcyBhbmQgZWFycyBhbmQgaGFuZHMgYW5kIGZlZXQgdGhlaXIgb3duLCBmb3IgdGhleSBhZG9wdCBwZXJzb25zIHRoYXQgYXJlCgkJCQkJZnJpZW5kbHkgdG8gdGhlaXIgcnVsZSBhbmQgdG8gdGhlbXNlbHZlcyBhcyB0aGVpciBmZWxsb3ctcnVsZXJzLiBBbHRob3VnaAoJCQkJCXRoZXJlZm9yZSBpZiB0aGVzZSBhc3Npc3RhbnRzIGFyZSBub3QgZnJpZW5kbHkgdGhleSB3aWxsIG5vdCBhY3QgaW4gY29uZm9ybWl0eQoJCQkJCXdpdGggdGhlIG1vbmFyY2gncyBwb2xpY3ksIGlmIHRoZXkgYXJlIGZyaWVuZHMgb2YgaGltIGFuZCBvZiBoaXMgcnVsZSwgd2VsbCwgYQoJCQkJCWZyaWVuZCBpcyBvbmUncyBlcXVhbCBhbmQgbGlrZSwgc28gdGhhdCBpZiB0aGUgbW9uYXJjaCB0aGlua3MgdGhhdCBoaXMgZnJpZW5kcwoJCQkJCW91Z2h0IHRvIHJ1bGUgaGUgdGhpbmtzIHRoYXQgcGVvcGxlIHdobyBhcmUgZXF1YWwgdG8gYW5kIGxpa2UgaGltc2VsZiBvdWdodCB0bwoJCQkJCXJ1bGUgbGlrZSBoaW1zZWxmLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGlzIHRoZW4gbW9yZSBvciBsZXNzIGlzIHRoZQoJCQkJCWNhc2UgYWR2YW5jZWQgYnkgdGhvc2Ugd2hvIGFyZ3VlIGFnYWluc3Qga2luZ3NoaXAuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgcGVyaGFwcywgYWx0aG91Z2ggdGhpcwoJCQkJCWlzIGEgdHJ1ZSBhY2NvdW50IG9mIHRoZSBtYXR0ZXIgaW4gc29tZSBjYXNlcywgaXQgZG9lcyBub3QgYXBwbHkgaW4gb3RoZXJzLiBGb3IKCQkJCQl0aGVyZSBpcyBzdWNoIGEgdGhpbmcgYXMgYmVpbmcgbmF0dXJhbGx5IGZpdHRlZCB0byBiZSBjb250cm9sbGVkIGJ5IGEgbWFzdGVyLAoJCQkJCWFuZCBpbiBhbm90aGVyIGNhc2UsIHRvIGJlIGdvdmVybmVkIGJ5IGEga2luZywgYW5kIGluIGFub3RoZXIsIGZvciBjaXRpemVuc2hpcCwKCQkJCQlhbmQgdGhpcyBpcyBqdXN0IGFuZCBleHBlZGllbnQ7IGJ1dCB0aGVyZSBpcyBubyBzdWNoIHRoaW5nIGFzIG5hdHVyYWwgZml0bmVzcwoJCQkJCWZvciB0eXJhbm55LCBub3IgZm9yIGFueSBvdGhlciBvZiB0aGUgZm9ybXMgb2YgZ292ZXJubWVudCB0aGF0IGFyZSBkaXZlcmdlbmNlcywKCQkJCQlmb3IgdGhlc2UgY29tZSBhYm91dCBhZ2FpbnN0IG5hdHVyZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyODhhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1288a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkJ1dCBtZXJlbHkgZnJvbSB3aGF0IGhhcyBiZWVuCgkJCQkJc2FpZCwgaXQgaXMgY2xlYXIgdGhhdCBhbW9uZyBwZW9wbGUgd2hvIGFyZSBhbGlrZSBhbmQgZXF1YWwgaXQgaXMgbmVpdGhlcgoJCQkJCWV4cGVkaWVudCBub3IganVzdCBmb3Igb25lIHRvIGJlIHNvdmVyZWlnbiBvdmVyIGFsbOKAlG5laXRoZXIgd2hlbiB0aGVyZQoJCQkJCWFyZSBubyBsYXdzLCBidXQgaGUgaGltc2VsZiBpcyBpbiB0aGUgcGxhY2Ugb2YgbGF3LCBub3Igd2hlbiB0aGVyZSBhcmUgbGF3cywKCQkJCQluZWl0aGVyIHdoZW4gYm90aCBzb3ZlcmVpZ24gYW5kIHN1YmplY3RzIGFyZSBnb29kIG5vciB3aGVuIGJvdGggYXJlIGJhZCwgbm9yIHlldAoJCQkJCXdoZW4gdGhlIHNvdmVyZWlnbiBpcyBzdXBlcmlvciBpbiB2aXJ0dWUsIGV4Y2VwdCBpbiBhIGNlcnRhaW4gbWFubmVyLiBXaGF0IHRoaXMKCQkJCQltYW5uZXIgaXMgbXVzdCBiZSBzdGF0ZWQ7IGFuZCBpbiBhIHdheSBpdCBoYXMgYmVlbiBzdGF0ZWQgYWxyZWFkeSBldmVuIGJlZm9yZS4KCQkJCQkJPC90cmFuc2xhdGlvbj4="
translation['3.1288a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgZmlyc3Qgd2UgbXVzdCBkZWZpbmUgd2hhdAoJCQkJCWNvbnN0aXR1dGVzIGZpdG5lc3MgZm9yIHJveWFsIGdvdmVybm1lbnQsIHdoYXQgZml0bmVzcyBmb3IgYXJpc3RvY3JhY3ksIGFuZCB3aGF0CgkJCQkJZm9yIGEgcmVwdWJsaWMuIEEgZml0IHN1YmplY3QgZm9yIHJveWFsIGdvdmVybm1lbnQgaXMgYSBwb3B1bGFjZSBvZiBzdWNoIGEgc29ydAoJCQkJCWFzIHRvIGJlIG5hdHVyYWxseSBjYXBhYmxlIG9mIHByb2R1Y2luZyBhIGZhbWlseSBvZiBvdXRzdGFuZGluZyBleGNlbGxlbmNlIGZvcgoJCQkJCXBvbGl0aWNhbCBsZWFkZXJzaGlwOyBhIGNvbW11bml0eSBmaXQgZm9yIGFyaXN0b2NyYWN5IGlzIG9uZSB0aGF0IG5hdHVyYWxseQoJCQkJCXByb2R1Y2VzIGEgcG9wdWxhY2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIGNsYXVzZSB0cmFuc2xhdGVkCgkJCQkJCeKAmHRoYXTigJRwb3B1bGFjZeKAmSBzb21lIGVkaXRvcnMgZXhjaXNlIGFzIGEKCQkJCQkJc3VwZXJmbHVvdXMgaW5zZXJ0aW9uLjwvbm90ZT4gY2FwYWJsZSBvZiBiZWluZyBnb3Zlcm5lZCB1bmRlciB0aGUgZm9ybSBvZgoJCQkJCWdvdmVybm1lbnQgZml0IGZvciBmcmVlIG1lbiBieSB0aG9zZSB3aG8gYXJlIGZpdHRlZCBieSB2aXJ0dWUgZm9yIHRha2luZyB0aGUKCQkJCQlwYXJ0IG9mIGxlYWRlcnMgaW4gY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudDsgYSByZXB1YmxpY2FuIGNvbW11bml0eSwgb25lIGluCgkJCQkJd2hpY2ggdGhlcmUgbmF0dXJhbGx5IGdyb3dzIHVwIGEgbWlsaXRhcnkgcG9wdWxhY2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhleSBhbHNvIGV4Y2lzZSDigJhpbgoJCQkJCQl3aGljaC1wb3B1bGFjZeKAmTwvbm90ZT4gY2FwYWJsZSBvZiBiZWluZyBnb3Zlcm5lZCBhbmQgb2YgZ292ZXJuaW5nCgkJCQkJdW5kZXIgYSBsYXcgdGhhdCBkaXN0cmlidXRlcyB0aGUgb2ZmaWNlcyBhbW9uZyB0aGUgd2VsbC10by1kbyBpbiBhY2NvcmRhbmNlIHdpdGgKCQkJCQltZXJpdC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMS4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPldoZW4gdGhlcmVmb3JlIGl0IGNvbWVzCgkJCQkJYWJvdXQgdGhhdCB0aGVyZSBpcyBlaXRoZXIgYSB3aG9sZSBmYW1pbHkgb3IgZXZlbiBzb21lIG9uZSBpbmRpdmlkdWFsIHRoYXQKCQkJCQlkaWZmZXJzIGZyb20gdGhlIG90aGVyIGNpdGl6ZW5zIGluIHZpcnR1ZSBzbyBncmVhdGx5IHRoYXQgaGlzIHZpcnR1ZSBleGNlZWRzCgkJCQkJdGhhdCBvZiBhbGwgdGhlIG90aGVycywgdGhlbiBpdCBpcyBqdXN0IGZvciB0aGlzIGZhbWlseSB0byBiZSB0aGUgcm95YWwgZmFtaWx5CgkJCQkJb3IgdGhpcyBpbmRpdmlkdWFsIGtpbmcsIGFuZCBzb3ZlcmVpZ24gb3ZlciBhbGwgbWF0dGVycy4gRm9yLCBhcyBoYXMgYmVlbiBzYWlkCgkJCQkJCWJlZm9yZSw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhpcyBob2xkcyBnb29kIG5vdCBvbmx5CgkJCQkJaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSByaWdodCB0aGF0IGlzIHVzdWFsbHkgYnJvdWdodCBmb3J3YXJkIGJ5IHRob3NlIHdobyBhcmUKCQkJCQlmb3VuZGluZyBhcmlzdG9jcmF0aWMgYW5kIG9saWdhcmNoaWMgY29uc3RpdHV0aW9ucywgYW5kIGZyb20gdGhlIG90aGVyIHNpZGUgYnkKCQkJCQl0aG9zZSB3aG8gYXJlIGZvdW5kaW5nIGRlbW9jcmF0aWMgb25lcyDvvIhmb3IgdGhleSBhbGwgbWFrZSB0aGVpciBjbGFpbQoJCQkJCW9uIHRoZSBncm91bmQgb2Ygc3VwZXJpb3JpdHksIHRob3VnaCBub3QgdGhlIHNhbWUgc3VwZXJpb3JpdHnvvIksIGJ1dCBpdAoJCQkJCWFsc28gaG9sZHMgZ29vZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHJpZ2h0IHNwb2tlbiBvZiBiZWZvcmUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIHJpZ2h0IG9mIG1lcml0LCA4LjcuPC9ub3RlPgoJCQkJCTwvdHJhbnNsYXRpb24+"
translation['3.1288b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuMTMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Gb3IgaXQgaXMgbm90IHNlZW1seSB0byBwdXQgdG8KCQkJCQlkZWF0aCBvciBiYW5pc2gsIG5vciB5ZXQgb2J2aW91c2x5IHRvIG9zdHJhY2l6ZSwgc3VjaCBhIG1hbiwgbm9yIGlzIGl0IHNlZW1seSB0bwoJCQkJCWNhbGwgdXBvbiBoaW0gdG8gdGFrZSBoaXMgdHVybiBhcyBhIHN1YmplY3Q7IGZvciBpdCBpcyBub3QgaW4gdGhlIG9yZGVyIG9mCgkJCQkJbmF0dXJlIGZvciB0aGUgcGFydCB0byBvdmVydG9wIHRoZSB3aG9sZSwgYnV0IHRoZSBtYW4gdGhhdCBpcyBzbyBleGNlcHRpb25hbGx5CgkJCQkJb3V0c3RhbmRpbmcgaGFzIGNvbWUgdG8gb3ZlcnRvcCB0aGUgd2hvbGUgY29tbXVuaXR5LiBIZW5jZSBpdCBvbmx5IHJlbWFpbnMgZm9yCgkJCQkJdGhlIGNvbW11bml0eSB0byBvYmV5IHN1Y2ggYSBtYW4sIGFuZCBmb3IgaGltIHRvIGJlIHNvdmVyZWlnbiBub3QgaW4gdHVybiBidXQKCQkJCQkJYWJzb2x1dGVseS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TGV0IHRoaXMgYmUgb3VyIGFuc3dlciB0byB0aGUKCQkJCQlxdWVzdGlvbnMgYXMgcmVnYXJkcyBraW5nc2hpcCwgd2hhdCBhcmUgaXRzIHZhcmlldGllcywgYW5kIHdoZXRoZXIgaXQgaXMKCQkJCQlkaXNhZHZhbnRhZ2VvdXMgZm9yIHN0YXRlcyBvciBhZHZhbnRhZ2VvdXMsIGFuZCBmb3Igd2hhdCBzdGF0ZXMsIGFuZCB1bmRlciB3aGF0CgkJCQkJCWNvbmRpdGlvbnMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBzaW5jZSB3ZSBwcm9ub3VuY2UgdGhlIHJpZ2h0IGNvbnN0aXR1dGlvbnMgdG8gYmUgdGhyZWUsIGFuZAoJCQkJCW9mIHRoZXNlIHRoZSBvbmUgZ292ZXJuZWQgYnkgdGhlIGJlc3QgbWVuIG11c3QgbmVjZXNzYXJpbHkgYmUgdGhlIGJlc3QsIGFuZCBzdWNoCgkJCQkJaXMgdGhlIG9uZSBpbiB3aGljaCBpdCBoYXMgY29tZSBhYm91dCBlaXRoZXIgdGhhdCBzb21lIG9uZSBtYW4gb3IgYSB3aG9sZSBmYW1pbHkKCQkJCQlvciBhIGdyb3VwIG9mIG1lbiBpcyBzdXBlcmlvciBpbiB2aXJ0dWUgdG8gYWxsIHRoZSBjaXRpemVucyB0b2dldGhlciwgdGhlIGxhdHRlcgoJCQkJCWJlaW5nIGFibGUgdG8gYmUgZ292ZXJuZWQgYW5kIHRoZSBmb3JtZXIgdG8gZ292ZXJuIG9uIHRoZSBwcmluY2lwbGVzIG9mIHRoZSBtb3N0CgkJCQkJZGVzaXJhYmxlIGxpZmUsIGFuZCBzaW5jZSBpbiB0aGUgZmlyc3QgcGFydCBvZiB0aGUgZGlzY291cnNlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkJvb2sgMy4yLCAzLjwvbm90ZT4gaXQgd2FzIHByb3ZlZCB0aGF0IHRoZSB2aXJ0dWUgb2YgYSBtYW4KCQkJCQlhbmQgdGhhdCBvZiBhIGNpdGl6ZW4gaW4gdGhlIGJlc3Qgc3RhdGUgbXVzdCBvZiBuZWNlc3NpdHkgYmUgdGhlIHNhbWUsIGl0IGlzCgkJCQkJZXZpZGVudCB0aGF0IGEgbWFuIGJlY29tZXMgZ29vZCBpbiB0aGUgc2FtZSB3YXkgYW5kIGJ5IHRoZSBzYW1lIG1lYW5zIGFzIG9uZQoJCQkJCW1pZ2h0IGVzdGFibGlzaCBhbiBhcmlzdG9jcmF0aWNhbGx5IG9yIG1vbmFyY2hpY2FsbHkgZ292ZXJuZWQgc3RhdGUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdGhlIEdyZWVrIHNob3VsZCBiZSBhbHRlcmVkIHRvIGdpdmUKCQkJCQkJ4oCYZXN0YWJsaXNoZWQgYSBzdGF0ZSBnb3Zlcm5lZCBpbiB0aGUgYmVzdCB3YXkgYnkgYW4gYXJpc3RvY3JhY3kgb3IKCQkJCQkJYSBtb25hcmNoeS7igJk8L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyODhiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1288b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['4.1288b.10'] = "PHRyYW5zbGF0aW9uPjxkaXYxIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNCIgb3JnPSJ1bmlmb3JtIiBzYW1wbGU9ImNvbXBsZXRlIiB0eXBlPSJCb29rIj4KCQkJCTxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyODhiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxMCIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UcmFuc3Bvc2VkIGFzIEJvb2sgNiBieSBzb21lIGVkaXRvcnM7CgkJCQkJCXNlZSBCb29rIDMgZmluLiwgbm90ZS48L25vdGU+SW4gYWxsIHRoZSBhcnRzIGFuZCB0aGUgc2NpZW5jZXMgdGhhdCBhcmUgbm90CgkJCQkJbWVyZWx5IHNlY3Rpb25hbCBidXQgdGhhdCBpbiByZWxhdGlvbiB0byBzb21lIG9uZSBjbGFzcyBvZiBzdWJqZWN0IGFyZSBjb21wbGV0ZSwKCQkJCQlpdCBpcyB0aGUgZnVuY3Rpb24gb2YgYSBzaW5nbGUgYXJ0IG9yIHNjaWVuY2UgdG8gc3R1ZHkgd2hhdCBpcyBzdWl0ZWQgdG8gZWFjaAoJCQkJCQljbGFzcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdGhlIEdyZWVrIHNob3VsZCBiZQoJCQkJCQlhbHRlcmVkIHRvIGdpdmUg4oCYdG8gZWFjaCBpbmRpdmlkdWFsLuKAmTwvbm90ZT4gZm9yCgkJCQkJaW5zdGFuY2Ugd2hhdCBzb3J0IG9mIGd5bW5hc3RpYyBleGVyY2lzZSBpcyBiZW5lZmljaWFsIGZvciB3aGF0IHNvcnQgb2YgYm9kaWx5CgkJCQkJZnJhbWUsIGFuZCB3aGF0IGlzIHRoZSBiZXN0IHNvcnQg77yIZm9yIHRoZSBiZXN0IG11c3QgbmF0dXJhbGx5IHN1aXQgdGhlCgkJCQkJcGVyc29uIG9mIHRoZSBmaW5lc3QgbmF0dXJhbCBlbmRvd21lbnQgYW5kIGVxdWlwbWVudO+8iSwgYW5kIGFsc28gd2hhdAoJCQkJCW9uZSBleGVyY2lzZSB0YWtlbiBieSBhbGwgaXMgdGhlIGJlc3QgZm9yIHRoZSBsYXJnZXN0IG51bWJlciDvvIhmb3IgdGhpcwoJCQkJCWlzIGFsc28gYSBxdWVzdGlvbiBmb3IgZ3ltbmFzdGljIHNjaWVuY2XvvIksIGFuZCBpbiBhZGRpdGlvbiwgaW4gY2FzZQoJCQkJCXNvbWVvbmUgZGVzaXJlcyBhIGhhYml0IG9mIGJvZHkgYW5kIGEga25vd2xlZGdlIG9mIGF0aGxldGljIGV4ZXJjaXNlcyB0aGF0IGFyZQoJCQkJCW5vdCB0aGUgb25lcyBhZGFwdGVkIHRvIGhpbSwgaXQgaXMgY2xlYXJseSBqdXN0IGFzIG11Y2ggdGhlIHRhc2sgb2YgdGhlIHRyYWluZXIKCQkJCQlhbmQgZ3ltbmFzdGljIG1hc3RlciB0byBwcm9kdWNlIHRoaXMgY2FwYWNpdHk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gYSBib2RpbHkgYmVhcmluZyBhbmQgYXRobGV0aWMgc2tpbGwgdGhhdCBhcmUgbm90IHRoZSBvbmVzIG1vc3Qgc3VpdGVkCgkJCQkJCXRvIHRoZSBwdXBpbCdzIHBhcnRpY3VsYXIgcGh5c2lxdWUuPC9ub3RlPiBhbHNvOzxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iMS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHdlCgkJCQkJbm90aWNlIHRoaXMgYWxzbyBoYXBwZW5pbmcgc2ltaWxhcmx5IGluIHJlZ2FyZCB0byBtZWRpY2luZSwgYW5kIHNoaXBidWlsZGluZywKCQkJCQlhbmQgdGhlIG1ha2luZyBvZiBjbG90aGVzLCBhbmQgZXZlcnkgb3RoZXIgY3JhZnQuIEhlbmNlIGl0IGlzIGNsZWFyIHRoYXQgaW4gdGhlCgkJCQkJY2FzZSBvZiB0aGUgY29uc3RpdHV0aW9uIGFzIHdlbGwgaXQgaXMgdGhlIGJ1c2luZXNzIG9mIHRoZSBzYW1lIHNjaWVuY2UgdG8gc3R1ZHkKCQkJCQl3aGljaCBpcyB0aGUgYmVzdCBjb25zdGl0dXRpb24gYW5kIHdoYXQgY2hhcmFjdGVyIGl0IG11c3QgaGF2ZSB0byBiZSB0aGUgbW9zdAoJCQkJCWlkZWFsIGlmIG5vIGV4dGVybmFsIGNpcmN1bXN0YW5jZSBzdGFuZHMgaW4gdGhlIHdheSwgYW5kIHdoYXQgY29uc3RpdHV0aW9uIGlzCgkJCQkJYWRhcHRlZCB0byB3aGF0IHBlb3BsZSDvvIhzaW5jZSBmb3IgbWFueSBpdCBpcyBkb3VidGxlc3MgaW1wb3NzaWJsZSB0bwoJCQkJCWF0dGFpbiB0aGUgYmVzdCBvbmUsIHNvIHRoYXQgdGhlIGdvb2QgbGF3Z2l2ZXIgYW5kIHRoZSB0cnVlIHN0YXRlc21hbiBtdXN0IGJlCgkJCQkJYWNxdWFpbnRlZCB3aXRoIGJvdGggdGhlIGZvcm0gb2YgY29uc3RpdHV0aW9uIHRoYXQgaXMgdGhlIGhpZ2hlc3QgYWJzb2x1dGVseSBhbmQKCQkJCQl0aGF0IHdoaWNoIGlzIGJlc3QgdW5kZXIgYXNzdW1lZCBjb25kaXRpb25z77yJLCBhbmQgYWxzbyB0aGlyZGx5IHRoZSBmb3JtCgkJCQkJb2YgY29uc3RpdHV0aW9uIGJhc2VkIG9uIGEgY2VydGFpbiBzdXBwb3NpdGlvbiDvvIhmb3IgaGUgbXVzdCBiZSBhbHNvCgkJCQkJY2FwYWJsZSBvZiBjb25zaWRlcmluZyBib3RoIGhvdyBzb21lIGdpdmVuIGNvbnN0aXR1dGlvbiBjb3VsZCBiZSBicm91Z2h0IGludG8KCQkJCQlleGlzdGVuY2Ugb3JpZ2luYWxseSBhbmQgYWxzbyBpbiB3aGF0IHdheSBoYXZpbmcgYmVlbiBicm91Z2h0IGludG8gZXhpc3RlbmNlIGl0CgkJCQkJY291bGQgYmUgcHJlc2VydmVkIGZvciB0aGUgbG9uZ2VzdCB0aW1lOiBJIG1lYW4gZm9yIGV4YW1wbGUgaWYgaXQgaGFzIGJlZmFsbGVuCgkJCQkJc29tZSBzdGF0ZSBub3Qgb25seSBub3QgdG8gcG9zc2VzcyB0aGUgYmVzdCBjb25zdGl0dXRpb24gYW5kIHRvIGJlIHVucHJvdmlkZWQKCQkJCQlldmVuIHdpdGggdGhlIHRoaW5ncyBuZWNlc3NhcnkgZm9yIGl0LCBidXQgYWxzbyBub3QgdG8gaGF2ZSB0aGUgY29uc3RpdHV0aW9uCgkJCQkJdGhhdCBpcyBwcmFjdGljYWJsZSB1bmRlciB0aGUgY2lyY3Vtc3RhbmNlcyBidXQgYW4gaW5mZXJpb3Igb25l77yJOwoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgYmVzaWRlIGFsbCB0aGVzZSBtYXR0ZXJzIGhlCgkJCQkJbXVzdCBhc2NlcnRhaW4gdGhlIGZvcm0gb2YgY29uc3RpdHV0aW9uIG1vc3Qgc3VpdGVkIHRvIGFsbCBzdGF0ZXMsIHNpbmNlIG1vc3Qgb2YKCQkJCQl0aG9zZSB3aG8gbWFrZSBwcm9ub3VuY2VtZW50cyBhYm91dCB0aGUgY29uc3RpdHV0aW9uLCBldmVuIGlmIHRoZSByZXN0IG9mIHdoYXQKCQkJCQl0aGV5IHNheSBpcyBnb29kLCBlbnRpcmVseSBtaXNzIHRoZSBwb2ludHMgb2YgcHJhY3RpY2FsIHV0aWxpdHkuIEZvciBpdCBpcwoJCQkJCXByb3BlciB0byBjb25zaWRlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIGZvdXJmb2xkCgkJCQkJCWNsYXNzaWZpY2F0aW9uIGdpdmVuIGp1c3QgYmVmb3JlIGlzIHJlcGVhdGVkIGluIHJhdGhlciBsb29zZSB0ZXJtcyBpbiB0aGlzCgkJCQkJCXNlbnRlbmNlLjwvbm90ZT4gbm90IG9ubHkgd2hhdCBpcyB0aGUgYmVzdCBjb25zdGl0dXRpb24gYnV0IGFsc28gd2hhdCBpcyB0aGUKCQkJCQlvbmUgcG9zc2libGUgb2YgYWNoaWV2ZW1lbnQsIGFuZCBsaWtld2lzZSBhbHNvIHdoYXQgaXMgdGhlIG9uZSB0aGF0IGlzIGVhc2llcgoJCQkJCWFuZCBtb3JlIGdlbmVyYWxseSBzaGFyZWQgYnkgYWxsIHN0YXRlcy4gQnV0IGFzIGl0IGlzLCBzb21lIHN0dWRlbnRzIGlucXVpcmUKCQkJCQl3aGljaCBpcyB0aGUgaGlnaGVzdCBmb3JtIG9mIGFsbCBldmVuIHRob3VnaCByZXF1aXJpbmcgbXVjaCBtYXRlcmlhbAoJCQkJCQllcXVpcG1lbnQsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgd29yZCBvcmlnaW5hbGx5IGRlbm90ZWQKCQkJCQkJdGhlIGR1dHkgb2YgdGhlIHdlYWx0aHkgY2l0aXplbiBob2xkaW5nIG9mZmljZSBvZiBDaG9yZWd1cyB0byBzdXBwbHkKCQkJCQkJZHJlc3NlcywgZXRjLiwgZm9yIHRoZSBjaG9ydXMgYW5kIGFjdG9ycyBpbiBhIGRyYW1hLjwvbm90ZT4gd2hpbGUgdGhvc2Ugd2hvCgkJCQkJcmF0aGVyIHN0YXRlIHNvbWUgZ2VuZXJhbCBmb3JtIHN3ZWVwIGFzaWRlIHRoZSBjb25zdGl0dXRpb25zIGFjdHVhbGx5IGV4aXN0aW5nCgkJCQkJYW5kIHByYWlzZSB0aGF0IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gb3Igc29tZQoJCQkJCW90aGVyOyA8bWlsZXN0b25lIG49IjEyODlhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGVkPSJQIiBuPSIxLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQgdGhlIHByb3BlcgoJCQkJCWNvdXJzZSBpcyB0byBicmluZyBmb3J3YXJkIGFuIG9yZ2FuaXphdGlvbiBvZiBzdWNoIGEgc29ydCB0aGF0IG1lbiB3aWxsIGVhc2lseQoJCQkJCWJlIHBlcnN1YWRlZCBhbmQgYmUgYWJsZSBpbiB0aGUgZXhpc3RpbmcgY2lyY3Vtc3RhbmNlcyB0byB0YWtlIHBhcnQgaW4gaXQsIHNpbmNlCgkJCQkJdG8gcmVmb3JtIGEgY29uc3RpdHV0aW9uIGlzIG5vIGxlc3MgYSB0YXNrIHRoYW4gdG8gZnJhbWUgb25lIGZyb20gdGhlIGJlZ2lubmluZywKCQkJCQlqdXN0IGFzIHRvIHJlLWxlYXJuIGEgc2NpZW5jZSBpcyBqdXN0IGFzIGhhcmQgYXMgdG8gbGVhcm4gaXQgb3JpZ2luYWxseTsgaW4KCQkJCQlhZGRpdGlvbiB0aGVyZWZvcmUgdG8gdGhlIHRoaW5ncyBtZW50aW9uZWQgdGhlIHN0dWRlbnQgb2YgcG9saXRpY3MgbXVzdCBhbHNvIGJlCgkJCQkJYWJsZSB0byByZW5kZXIgYWlkIHRvIHRoZSBjb25zdGl0dXRpb25zIHRoYXQgZXhpc3QgYWxyZWFkeSwgYXMgd2FzIGFsc28gc2FpZAoJCQkJCQliZWZvcmUuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Cb29rIDMuNS48L25vdGU+IEJ1dCB0aGlzIGlzCgkJCQkJaW1wb3NzaWJsZSBpZiBoZSBkb2VzIG5vdCBrbm93IGhvdyBtYW55IGtpbmRzIG9mIGNvbnN0aXR1dGlvbiB0aGVyZSBhcmU7IGJ1dCBhdAoJCQkJCXByZXNlbnQgc29tZSBwZW9wbGUgdGhpbmsgdGhhdCB0aGVyZSBpcyBvbmx5IG9uZSBraW5kIG9mIGRlbW9jcmFjeSBhbmQgb25lIGtpbmQKCQkJCQlvZiBvbGlnYXJjaHksIGJ1dCB0aGlzIGlzIG5vdCB0cnVlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5IZW5jZSBoZSBtdXN0IHRha2UgaW4gdmlldyB0aGUgZGlmZmVyZW50IHZhcmlldGllcyBvZiB0aGUgY29uc3RpdHV0aW9ucywgYW5kCgkJCQkJa25vdyBob3cgbWFueSB0aGVyZSBhcmUgYW5kIGhvdyBtYW55IGFyZSB0aGVpciBjb21iaW5hdGlvbnMuIEFuZCBhZnRlciB0aGlzIGl0CgkJCQkJbmVlZHMgdGhpcyBzYW1lIGRpc2NyaW1pbmF0aW9uIGFsc28gdG8gZGlzY2VybiB0aGUgbGF3cyB0aGF0IGFyZSB0aGUgYmVzdCwgYW5kCgkJCQkJdGhvc2UgdGhhdCBhcmUgc3VpdGVkIHRvIGVhY2ggb2YgdGhlIGZvcm1zIG9mIGNvbnN0aXR1dGlvbi4gRm9yIHRoZSBsYXdzIHNob3VsZAoJCQkJCWJlIGxhaWQgZG93biwgYW5kIGFsbCBwZW9wbGUgbGF5IHRoZW0gZG93biwgdG8gc3VpdCB0aGUKCQkJCQljb25zdGl0dXRpb25z4oCUdGhlIGNvbnN0aXR1dGlvbnMgbXVzdCBub3QgYmUgbWFkZSB0byBzdWl0IHRoZSBsYXdzOyBmb3IKCQkJCQlhIGNvbnN0aXR1dGlvbiBpcyB0aGUgcmVndWxhdGlvbiBvZiB0aGUgb2ZmaWNlcyBvZiB0aGUgc3RhdGUgaW4gcmVnYXJkIHRvIHRoZQoJCQkJCW1vZGUgb2YgdGhlaXIgZGlzdHJpYnV0aW9uIGFuZCB0byB0aGUgcXVlc3Rpb24gd2hhdCBpcyB0aGUgc292ZXJlaWduIHBvd2VyIGluCgkJCQkJdGhlIHN0YXRlIGFuZCB3aGF0IGlzIHRoZSBvYmplY3Qgb2YgZWFjaCBjb21tdW5pdHksIGJ1dCBsYXdzIGFyZSBkaXN0aW5jdCBmcm9tCgkJCQkJdGhlIHByaW5jaXBsZXMgb2YgdGhlIGNvbnN0aXR1dGlvbiwgYW5kIHJlZ3VsYXRlIGhvdyB0aGUgbWFnaXN0cmF0ZXMgYXJlIHRvCgkJCQkJZ292ZXJuIGFuZCB0byBndWFyZCBhZ2FpbnN0IHRob3NlPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz53aG8KCQkJCQl0cmFuc2dyZXNzIHRoZW0uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPlNvIHRoYXQgY2xlYXJseSBpdAoJCQkJCWlzIG5lY2Vzc2FyeSB0byBiZSBpbiBwb3NzZXNzaW9uIG9mIHRoZSBkaWZmZXJlbnQgdmFyaWV0aWVzIG9mIGVhY2ggZm9ybSBvZgoJCQkJCWNvbnN0aXR1dGlvbiwgYW5kIHRoZSBudW1iZXIgb2YgdGhlc2UsIGV2ZW4gZm9yIHRoZSBwdXJwb3NlIG9mIGxlZ2lzbGF0aW9uOyBmb3IKCQkJCQlpdCBpcyBpbXBvc3NpYmxlIGZvciB0aGUgc2FtZSBsYXdzIHRvIGJlIGV4cGVkaWVudCBmb3IgYWxsIG9saWdhcmNoaWVzIG9yCgkJCQkJZGVtb2NyYWNpZXMgaWYgdGhlcmUgYXJlIHJlYWxseSBzZXZlcmFsIGtpbmRzIG9mIHRoZW0sIGFuZCBub3Qgb25lIHNvcnQgb2YKCQkJCQlkZW1vY3JhY3kgb3Igb2xpZ2FyY2h5IG9ubHkuPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgaW5hc211Y2ggYXMgaW4gb3VyIGZpcnN0IGlucXVpcnk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkJvb2sgMy41Ljwvbm90ZT4gYWJvdXQgdGhlIGZvcm1zIG9mIHRoZQoJCQkJCWNvbnN0aXR1dGlvbiB3ZSBjbGFzc2lmaWVkIHRoZSByaWdodCBjb25zdGl0dXRpb25zIGFzIHRocmVlLCBraW5nc2hpcCwKCQkJCQlhcmlzdG9jcmFjeSBhbmQgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCwgYW5kIHRoZSBkZXZpYXRpb25zIGZyb20gdGhlc2UgYXMKCQkJCQl0aHJlZSwgdHlyYW5ueSBmcm9tIGtpbmdzaGlwLCBvbGlnYXJjaHkgZnJvbSBhcmlzdG9jcmFjeSBhbmQgZGVtb2NyYWN5IGZyb20KCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LCBhbmQgYWJvdXQgYXJpc3RvY3JhY3kgYW5kIGtpbmdzaGlwIHdlIGhhdmUgc3Bva2VuCgkJCQkJ77yIZm9yIHRvIHN0dWR5IHRoZSBiZXN0IGNvbnN0aXR1dGlvbiBpcyB0aGUgc2FtZSB0aGluZyBhcyB0byBzcGVhayBhYm91dAoJCQkJCXRoZSBmb3JtcyB0aGF0IGJlYXIgdGhvc2UgbmFtZXMsIHNpbmNlIGVhY2ggb2YgdGhlbSBtZWFucyBhIHN5c3RlbSBiYXNlZCBvbiB0aGUKCQkJCQlxdWFsaWZpY2F0aW9uIG9mIHZpcnR1ZSBlcXVpcHBlZCB3aXRoIG1lYW5z77yJLCBhbmQgYXMgYWxzbyB0aGUgcXVlc3Rpb24KCQkJCQl3aGF0IGNvbnN0aXR1dGVzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gYXJpc3RvY3JhY3kgYW5kIGtpbmdzaGlwIGFuZCB3aGVuIGEKCQkJCQlyb3lhbCBnb3Zlcm5tZW50IGlzIHRvIGJlIGFkb3B0ZWQgaGFzIGJlZW4gZGVjaWRlZCBiZWZvcmUsIGl0IHJlbWFpbnMgdG8gZGlzY3VzcwoJCQkJCXRoZSBmb3JtIG9mIGNvbnN0aXR1dGlvbiBkZXNpZ25hdGVkIGJ5IHRoZSBuYW1lPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7PgM6/zrvOuc+EzrXhvbfOsTwvZm9yZWlnbj4sCgkJCQkJCeKAmHBvbGl0eSzigJkgd2hpY2ggZGVub3RlcyBub3Qgb25seSBhIGNvbnN0aXR1dGlvbiBvZiBhbnkKCQkJCQkJZm9ybSwgYnV0IGFsc28g77yIbGlrZSBvdXIgdGVybSDigJhjb25zdGl0dXRpb25hbAoJCQkJCQlnb3Zlcm5tZW504oCZ77yJIGEgcGFydGljdWxhciBmb3JtLCB2aXouLCBhIHJlcHVibGljLCBjZi4KCQkJCQkJQm9vayAzLjUuMi48L25vdGU+IGNvbW1vbiB0byB0aGVtIGFsbCwgYW5kIHRoZSBvdGhlciBmb3Jtcywgb2xpZ2FyY2h5LAoJCQkJCWRlbW9jcmFjeSBhbmQgdHlyYW5ueS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+Tm93IGl0IGlzCgkJCQkJbWFuaWZlc3QgYWxzbyB3aGljaCBvZiB0aGVzZSBkZXZpYXRpb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUKCQkJCQkJdGhyZWUgZm9ybXMgb2YgY29uc3RpdHV0aW9uIGxhc3QgbWVudGlvbmVkLjwvbm90ZT4gaXMgdGhlIHdvcnN0IGFuZCB3aGljaAoJCQkJCXRoZSBzZWNvbmQgd29yc3QuIEZvciBuZWNlc3NhcmlseSB0aGUgZGV2aWF0aW9uIGZyb20gdGhlIGZpcnN0IGFuZCBtb3N0IGRpdmluZQoJCQkJCW11c3QgYmUgdGhlIHdvcnN0LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGVtcGg+Q29ycnVwdGlvIG9wdGltaQoJCQkJCQkJcGVzc2ltYTwvZW1waD4sIGEgU29jcmF0aWMgbm90aW9uOiDigJh0aGUgbWVuIG9mIHRoZSBiZXN0CgkJCQkJCW5hdHVyYWwgZ2lmdHMsIHdoZW4gZWR1Y2F0ZWQsIGFyZSB0aGUgd29yc3Qs4oCZIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIE1lbS4gNC4xLjMiIHZhbGlkPSJ5ZXMiPlhlbi4gTWVtLiA0LjEuMzwvYmlibD4uPC9ub3RlPiBhbmQga2luZ3NoaXAgbXVzdCBvZgoJCQkJCW5lY2Vzc2l0eSBlaXRoZXIgcG9zc2VzcyB0aGUgbmFtZSBvbmx5LCB3aXRob3V0IHJlYWxseSBiZWluZyBraW5nc2hpcCwKCQkJCQkJPG1pbGVzdG9uZSBuPSIxMjg5YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+b3IgYmUgYmFzZWQgb24gdGhlIG91dHN0YW5kaW5nIHN1cGVyaW9yaXR5IG9mIHRoZSBtYW4gd2hvIGlzCgkJCQkJa2luZzsgc28gdGhhdCB0eXJhbm55IGJlaW5nIHRoZSB3b3JzdCBmb3JtIG11c3QgYmUgdGhlIG9uZSBmYXJ0aGVzdCByZW1vdmVkIGZyb20KCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LCBhbmQgb2xpZ2FyY2h5IG11c3QgYmUgdGhlIHNlY29uZCBmYXJ0aGVzdAoJCQkJCe+8iGZvciBhcmlzdG9jcmFjeSBpcyB3aWRlbHkgc2VwYXJhdGVkIGZyb20gdGhhdCBjb25zdGl0dXRpb27vvIksCgkJCQkJd2hpbGUgZGVtb2NyYWN5IG11c3QgYmUgdGhlIG1vc3QgbW9kZXJhdGUuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuIGFjY291bnQgb2YgdGhlaXIgcmVsYXRpdmUgbWVyaXRzIGhhcyBpbmRlZWQgYWxyZWFkeQoJCQkJCWJlZW4gZ2l2ZW4gYWxzbyBieSBvbmUgb2YgdGhlIGZvcm1lciB3cml0ZXJzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCTxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBTdGF0LiAzMDJhIiB2YWxpZD0ieWVzIj5QbGF0LiBTdGF0LiAzMDJhIGZmLjwvYmlibD4KCQkJCQk8L25vdGU+IHRob3VnaCBub3Qgb24gdGhlIHNhbWUgcHJpbmNpcGxlIGFzIG91cnM7IGZvciBoZSBpbmNsaW5lZCB0byBqdWRnZSB0aGF0CgkJCQkJdGhlcmUgd2VyZSBnb29kIHZhcmlldGllcyBvZiBhbGwgdGhlIGZvcm1zLCBmb3IgaW5zdGFuY2UgYSBnb29kIHNvcnQgb2YKCQkJCQlvbGlnYXJjaHkgYW5kIHNvIG9uLCBhbmQgdGhhdCBkZW1vY3JhY3kgd2FzIHRoZSB3b3JzdCBhbW9uZyB0aGVzZSwgYnV0IHRoZSBiZXN0CgkJCQkJYW1vbmcgdGhlIGJhZCB2YXJpZXRpZXMsIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPndoZXJlYXMgd2UKCQkJCQlzYXkgdGhhdCB0aGUgZGV2aWF0aW9ucyBhcmUgd2hvbGx5IHdyb25nLCBhbmQgdGhhdCBpdCBpcyBub3QgcmlnaHQgdG8gc3BlYWsgb2YKCQkJCQlvbmUgZm9ybSBvZiBvbGlnYXJjaHkgYXMgYmV0dGVyIHRoYW4gYW5vdGhlciwgYnV0IG9ubHkgYXMgbGVzcyBiYWQuIEJ1dCBsZXQgdXMKCQkJCQlmb3IgdGhlIHByZXNlbnQgZGlzbWlzcyB0aGUgcXVlc3Rpb24gb2YgYSBjbGFzc2lmaWNhdGlvbiBvZiB0aGlzIG5hdHVyZS4gT3VyCgkJCQkJYnVzaW5lc3MgaXMgZmlyc3QgdG8gZGlzdGluZ3Vpc2ggaG93IG1hbnkgZGlmZmVyZW50IGZvcm1zIG9mIHRoZSBjb25zdGl0dXRpb25zCgkJCQkJdGhlcmUgYXJlLCBhc3N1bWluZyB0aGF0IHRoZXJlIGRvIGV4aXN0IHNldmVyYWwga2luZHMgb2YgZGVtb2NyYWN5IGFuZCBvZgoJCQkJCW9saWdhcmNoeTsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+bmV4dCwgd2hpY2ggZm9ybSBpcyBtb3N0CgkJCQkJZ2VuZXJhbCwgYW5kIHdoaWNoIG1vc3QgZGVzaXJhYmxlIGFmdGVyIHRoZSBiZXN0IGNvbnN0aXR1dGlvbiwgYW5kIGFsc28gaWYgdGhlcmUKCQkJCQlleGlzdHMgc29tZSBvdGhlciBmb3JtIHRoYXQgaXMgYXJpc3RvY3JhdGljIGluIG5hdHVyZSBhbmQgd2VsbCBjb25zdHJ1Y3RlZCBidXQKCQkJCQlub3QgZml0dGVkIHRvIHRoZSBsYXJnZXN0IG51bWJlciBvZiBjaXRpZXMsIHdoaWNoIHRoaXMgaXM7IG5leHQsIHdoaWNoIG9mIHRoZQoJCQkJCW90aGVyIGZvcm1zIHRvbyBpcyBkZXNpcmFibGUgZm9yIHdoYXQgcGVvcGxlIO+8iHNpbmNlIHByb2JhYmx5IGZvciBzb21lCgkJCQkJZGVtb2NyYWN5IGlzIG5lY2Vzc2FyeSBtb3JlIHRoYW4gb2xpZ2FyY2h5LCBhbmQgZm9yIG90aGVycyBvbGlnYXJjaHkgbW9yZSB0aGFuCgkJCQkJCWRlbW9jcmFjee+8iTs8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZCBhZnRlcgoJCQkJCXRoaXMsIGluIHdoYXQgd2F5IHNob3VsZCBvbmUgcHJvY2VlZCB3aG8gd2lzaGVzIHRvIHNldCB1cCB0aGVzZSBjb25zdGl0dXRpb25zLCBJCgkJCQkJbWVhbiB0aGUgdmFyaW91cyBmb3JtcyBvZiBkZW1vY3JhY3kgYW5kIG9mIG9saWdhcmNoeTsgYW5kIGZpbmFsbHksIHdoZW4gYXMgZmFyCgkJCQkJYXMgcG9zc2libGUgd2UgaGF2ZSBjb25jaXNlbHkgdG91Y2hlZCB1cG9uIGFsbCB0aGVzZSBxdWVzdGlvbnMsIHdlIG11c3QgZW5kZWF2b3IKCQkJCQl0byByZXZpZXcgd2hhdCBhcmUgdGhlIGFnZW5jaWVzIHRoYXQgZGVzdHJveSBhbmQgd2hhdCBhcmUgdGhvc2UgdGhhdCBwcmVzZXJ2ZQoJCQkJCWNvbnN0aXR1dGlvbnMgZ2VuZXJhbGx5IGFuZCBlYWNoIHZhcmlldHkgb2YgY29uc3RpdHV0aW9uIGluIHBhcnRpY3VsYXIsIGFuZCB3aGF0CgkJCQkJYXJlIHRoZSBjYXVzZXMgYnkgd2hpY2ggaXQgaXMgbW9zdCBuYXR1cmFsIGZvciB0aGVzZSBldmVudHMgdG8gYmUgYnJvdWdodAoJCQkJCQlhYm91dC48bWlsZXN0b25lIGVkPSJQIiBuPSIzLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyB0aGUgcmVhc29uIG9mIHRoZXJlIGJlaW5nIHNldmVyYWwgZm9ybXMgb2YgY29uc3RpdHV0aW9uIGlzCgkJCQkJdGhhdCBldmVyeSBjaXR5IGhhcyBhIGNvbnNpZGVyYWJsZSBudW1iZXIgb2YgcGFydHMuIEZvciBpbiB0aGUgZmlyc3QgcGxhY2Ugd2UKCQkJCQlzZWUgdGhhdCBhbGwgdGhlIGNpdGllcyBhcmUgY29tcG9zZWQgb2YgaG91c2Vob2xkcywgYW5kIHRoZW4gYWdhaW4gdGhhdCBvZiB0aGlzCgkJCQkJbXVsdGl0dWRlIHNvbWUgbXVzdCBuZWNlc3NhcmlseSBiZSByaWNoIGFuZCBzb21lIHBvb3IgYW5kIHNvbWUgYmV0d2VlbiB0aGUgdHdvLAoJCQkJCWFuZCBhbHNvIG9mIHRoZSByaWNoIGFuZCB0aGUgcG9vciB0aGUgZm9ybWVyIGNsYXNzIGlzIGhlYXZ5LWFybWVkIGFuZCB0aGUgbGF0dGVyCgkJCQkJd2l0aG91dCBhcm1vci4gQW5kIHdlIHNlZSB0aGF0IG9uZSBwb3J0aW9uIG9mIHRoZSBjb21tb24gcGVvcGxlIGlzIGFncmljdWx0dXJhbCwKCQkJCQlhbm90aGVyIGVuZ2FnZWQgaW4gdHJhZGUgYW5kIGFub3RoZXIgbWVjaGFuaWMuIEFuZCB0aGUgdXBwZXIgY2xhc3NlcyBoYXZlCgkJCQkJZGlzdGluY3Rpb25zIGFsc28gY29ycmVzcG9uZGluZyB0byB0aGVpciB3ZWFsdGggYW5kIHRoZSBhbW91bnRzIG9mIHRoZWlyCgkJCQkJcHJvcGVydHkg77yIZm9yIGV4YW1wbGUgaW4gYSBzdHVkIG9mIGhvcnNlc+KAlGZvciBpdCBpcyBub3QgZWFzeQoJCQkJCXRvIHJlYXIgaG9yc2VzIHdpdGhvdXQgYmVpbmcgcmljaCwgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHRoaXMgaXMgd2h5IGluIGFuY2llbnQgdGltZXMgdGhlcmUgd2VyZSBvbGlnYXJjaGllcyBpbiBhbGwgdGhlIHN0YXRlcwoJCQkJCXdob3NlIHN0cmVuZ3RoIGxheSBpbiB0aGVpciBjYXZhbHJ5LCBhbmQgdGhleSB1c2VkIHRvIHVzZSBob3JzZXMgZm9yIHRoZWlyIHdhcnMKCQkJCQlhZ2FpbnN0IHRoZWlyIG5laWdoYm9ycywgYXMgZm9yIGluc3RhbmNlIGRpZCB0aGUgRXJldHJpYW5zIGFuZCBDaGFsY2lkaWFucyBhbmQKCQkJCQl0aGUgcGVvcGxlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWFnbmVzaWEgYWQgTWFlYW5kcnVtIiBrZXk9InBlcnNldXMsTWFnbmVzaWEgYWQgTWFlYW5kcnVtIj5NYWduZXNpYTwvcGxhY2VOYW1lPiBvbiB0aGUKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDExMjE1NjEiIGtleT0idGduLDExMjE1NjEiPk1hZWFuZGVyPC9wbGFjZU5hbWU+IGFuZCBtYW55IG9mIHRoZSBvdGhlcgoJCQkJCUFzaWF0aWMgcGVvcGxlc++8iS4gTW9yZW92ZXIgaW4gYWRkaXRpb24gdG8gZGlmZmVyZW5jZXMgaW4gd2VhbHRoIHRoZXJlCgkJCQkJaXMgdGhlIGRpZmZlcmVuY2Ugb2YgYmlydGgsIGFuZCB0aGF0IGluIHJlZ2FyZCB0byB2aXJ0dWUsIDxtaWxlc3RvbmUgbj0iMTI5MGEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBpbmRlZWQgYW55CgkJCQkJb3RoZXIgc2ltaWxhciBkaXN0aW5jdGlvbiB0aGF0IGluIHRoZSBkaXNjdXNzaW9uIG9mIGFyaXN0b2NyYWN5IGhhcyBiZWVuIHN0YXRlZAoJCQkJCXRvIGNvbnN0aXR1dGUgYSBwYXJ0IG9mIHRoZSBzdGF0ZSDvvIhmb3IgdGhlcmUgd2UgZGlzdGluZ3Vpc2hlZCBob3cgbWFueQoJCQkJCW5lY2Vzc2FyeSBwYXJ0cyB0aGVyZSBhcmUgb2Ygd2hpY2ggZXZlcnkgc3RhdGUgbXVzdCBjb25zaXN077yJOyBmb3IKCQkJCQlzb21ldGltZXMgYWxsIG9mIHRoZXNlIHBhcnRzIHBhcnRpY2lwYXRlIGluIHRoZSBjb25zdGl0dXRpb24gYW5kIHNvbWV0aW1lcyBhCgkJCQkJc21hbGxlciBvciBhIGxhcmdlciBudW1iZXIgb2YgdGhlbS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgY2xlYXIgdGhlcmVmb3JlIHRoYXQgdGhlcmUgbXVzdCBuZWNlc3NhcmlseSBiZSBzZXZlcmFsIGZvcm1zIG9mCgkJCQkJY29uc3RpdHV0aW9uIGRpZmZlcmluZyBpbiBraW5kIGZyb20gb25lIGFub3RoZXIsIGluYXNtdWNoIGFzIHRoZXNlIHBhcnRzIGRpZmZlcgoJCQkJCWluIGtpbmQgYW1vbmcgdGhlbXNlbHZlcy4gRm9yIGEgY29uc3RpdHV0aW9uIG1lYW5zIHRoZSBhcnJhbmdlbWVudCBvZiB0aGUKCQkJCQltYWdpc3RyYWNpZXMsIGFuZCB0aGlzIGFsbCBwZW9wbGUgcGxhbiBvdXQgZWl0aGVyIGFjY29yZGluZyB0byB0aGUgcG93ZXIgb2YKCQkJCQl0aG9zZSB3aG8gc2hhcmUgcG9saXRpY2FsIHJpZ2h0cywgb3IgYWNjb3JkaW5nIHRvIHNvbWUgY29tbW9uIGVxdWFsaXR5IGJldHdlZW4KCQkJCQl0aGVtLCBJIG1lYW4gZm9yIGV4YW1wbGUgYmV0d2VlbiB0aGUgcG9vciBvciBiZXR3ZWVuIHRoZSByaWNoLCBvciBzb21lIGVxdWFsaXR5CgkJCQkJY29tbW9uIHRvIHRoZW0gYm90aC48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgY2xhdXNlIGxvb2tzIGxpa2UKCQkJCQkJYW4gaW50ZXJwb2xhdGlvbi48L25vdGU+IEl0IGZvbGxvd3MgdGhlcmVmb3JlIHRoYXQgdGhlcmUgYXJlIGFzIG1hbnkgZm9ybXMKCQkJCQlvZiBjb25zdGl0dXRpb24gYXMgdGhlcmUgYXJlIG1vZGVzIG9mIGFycmFuZ2VtZW50IGFjY29yZGluZyB0byB0aGUgc3VwZXJpb3JpdGllcwoJCQkJCWFuZCB0aGUgZGlmZmVyZW5jZXMgb2YgdGhlIHNlY3Rpb25zLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdGhlIGZvcm1zIG1vc3RseSBhcmUgdGhvdWdodCB0byBiZSB0d2/igJRqdXN0IGFzIGluIHRoZSBjYXNlIG9mCgkJCQkJdGhlIHdpbmRzIHdlIHNwZWFrIG9mIHNvbWUgYXMgbm9ydGggYW5kIHNvbWUgYXMgc291dGggYW5kIHJlZ2FyZCB0aGUgcmVzdCBhcwoJCQkJCWRldmlhdGlvbnMgZnJvbSB0aGVzZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkFyaXN0b3RsZSByZWZlcnMgdG8KCQkJCQkJdGhpcyB2aWV3IGluIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBNZXRlLiAzNjRhLjE5Ij5BcmlzdG90LiBNZXRlb3IuIDM2NGEKCQkJCQkJCTE5PC9iaWJsPiwgc2F5aW5nIHRoYXQgd2VzdCB3aW5kcyBhcmUgY2xhc3NlZCB3aXRoIG5vcnRoIGFuZCBlYXN0IHdpbmRzCgkJCQkJCXdpdGggc291dGgsIGJlY2F1c2Ugd2luZCBmcm9tIHRoZSBzZXR0aW5nIHN1biBpcyBjb29sZXIgYW5kIGZyb20gdGhlIHJpc2luZwoJCQkJCQlzdW4gd2FybWVyLiBIZSBub3RlcyB0aGF0IG5vcnRoIGFuZCBzb3V0aCB3aW5kcyBhcmUgdGhlIG1vc3QgZnJlcXVlbnQsIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBNZXRlLiAzNjFhLjYiPkFyaXN0b3QuIE1ldGVvci4gMzYxYSA2PC9iaWJsPjsgdGhpcyBtYXkgaGF2ZQoJCQkJCQlzdWdnZXN0ZWQgdGhlIGlkZWEgdGhhdCB0aGV5IHdlcmUgdGhlIHR5cGljYWwgd2luZHMuPC9ub3RlPiBzbyBhbHNvIG9mCgkJCQkJY29uc3RpdHV0aW9ucyB0aGVyZSBhcmUgaGVsZCB0byBiZSB0d28gZm9ybXMsIGRlbW9jcmFjeSBhbmQgb2xpZ2FyY2h5OyBmb3IgbWVuCgkJCQkJcmVja29uIGFyaXN0b2NyYWN5IGFzIGEga2luZCBvZiBvbGlnYXJjaHkgYmVjYXVzZSBpdCBpcyBvbGlnYXJjaHkgb2YgYSBzb3J0LCBhbmQKCQkJCQl3aGF0IGlzIGNhbGxlZCBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50IGFzIGRlbW9jcmFjeSwganVzdCBhcyBpbiB0aGUgY2FzZSBvZgoJCQkJCXRoZSB3aW5kcyB0aGV5IHJlY2tvbiB0aGUgd2VzdCB3aW5kIGFzIGEga2luZCBvZiBub3J0aCB3aW5kIGFuZCB0aGUgZWFzdCB3aW5kIGFzCgkJCQkJYSBraW5kIG9mIHNvdXRoIHdpbmQuPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5BbmQgdGhlIGNhc2UgaXMKCQkJCQlzaW1pbGFyIHdpdGggbXVzaWNhbCBtb2RlcywgYXMgc29tZSBwZW9wbGUgc2F5OiBmb3IgdGhlcmUgdG9vIHRoZXkgcG9zaXQgdHdvCgkJCQkJa2luZHMsIHRoZSBEb3JpYW4gbW9kZSBhbmQgdGhlIFBocnlnaWFuLCBhbmQgY2FsbCB0aGUgb3RoZXIgc2NhbGVzIHNvbWUgb2YgdGhlbQoJCQkJCURvcmlhbiBhbmQgdGhlIG90aGVycyBQaHJ5Z2lhbi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy41IiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yCgkJCQkJdGhlIG1vc3QgcGFydCB0aGVyZWZvcmUgdGhleSBhcmUgYWNjdXN0b21lZCB0byB0aGluayBpbiB0aGlzIHdheSBhYm91dCB0aGUKCQkJCQljb25zdGl0dXRpb25zOyBidXQgaXQgaXMgdHJ1ZXIgYW5kIGJldHRlciB0byBjbGFzcyB0aGVtIGFzIHdlIGRpZCwgYW5kIGFzc3VtaW5nCgkJCQkJdGhhdCB0aGVyZSBhcmUgdHdvIHdlbGwtY29uc3RydWN0ZWQgZm9ybXMsIG9yIGVsc2Ugb25lLCB0byBzYXkgdGhhdCB0aGUgb3RoZXJzCgkJCQkJYXJlIGRldmlhdGlvbnMsIHNvbWUgZnJvbSB0aGUgd2VsbC1ibGVuZGVkIGNvbnN0aXR1dGlvbiBhbmQgdGhlIG90aGVycyBmcm9tIHRoZQoJCQkJCWJlc3Qgb25lLCB0aGUgbW9yZSB0ZW5zZSBhbmQgbWFzdGVyZnVsIGNvbnN0aXR1dGlvbnMgYmVpbmcgb2xpZ2FyY2hpYyBhbmQgdGhlCgkJCQkJcmVsYXhlZCBhbmQgc29mdCBvbmVzIGRlbW90aWMuPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy42IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgaXQgaXMgbm90IHJpZ2h0IHRvIGRlZmluZSBkZW1vY3JhY3ksIGFzCgkJCQkJc29tZSBwZW9wbGUgYXJlIGluIHRoZSBjdXN0b20gb2YgZG9pbmcgbm93LCBtZXJlbHkgYXMgdGhlIGNvbnN0aXR1dGlvbiBpbiB3aGljaAoJCQkJCXRoZSBtdWx0aXR1ZGUgaXMgc292ZXJlaWduIO+8iGZvciBldmVuIGluIG9saWdhcmNoaWVzIGFuZCBldmVyeXdoZXJlIHRoZQoJCQkJCW1ham9yaXR5IGlzIHNvdmVyZWlnbu+8iSBub3Igb2xpZ2FyY2h5IGFzIHRoZSBjb25zdGl0dXRpb24gaW4gd2hpY2ggYSBmZXcKCQkJCQlhcmUgc292ZXJlaWduIG92ZXIgdGhlIGdvdmVybm1lbnQuIEZvciBpZiB0aGUgd2hvbGUgbnVtYmVyIHdlcmUgdGhpcnRlZW4KCQkJCQlodW5kcmVkLCBhbmQgYSB0aG91c2FuZCBvZiB0aGVzZSB3ZXJlIHJpY2ggYW5kIGRpZCBub3QgZ2l2ZSB0aGUgdGhyZWUgaHVuZHJlZAoJCQkJCXBvb3IgYSBzaGFyZSBpbiB0aGUgZ292ZXJubWVudCBhbHRob3VnaCB0aGV5IHdlcmUgZnJlZS1ib3JuIGFuZCBsaWtlIHRoZW1zZWx2ZXMKCQkJCQlpbiBhbGwgb3RoZXIgcmVzcGVjdHMsIG5vIG9uZSB3b3VsZCBzYXkgdGhhdCB0aGlzIHBlb3BsZSB3YXMgZ292ZXJuZWQKCQkJCQlkZW1vY3JhdGljYWxseTsgYW5kIHNpbWlsYXJseSBhbHNvIGlmIHRoZXJlIHdlcmUgZmV3IHBvb3IsIGJ1dCB0aGVzZSBtb3JlCgkJCQkJcG93ZXJmdWwgdGhhbiB0aGUgcmljaCB3aG8gd2VyZSBtb3JlIG51bWVyb3VzLCBubyBvbmUgd291bGQgY2FsbCBzdWNoIGEKCQkJCQlnb3Zlcm5tZW50IGEgZGVtb2NyYWN5IGVpdGhlciwgaWYgdGhlIG90aGVyIGNpdGl6ZW5zIGJlaW5nIHJpY2ggaGFkIG5vIHNoYXJlIGluCgkJCQkJdGhlIGhvbm9ycy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy43IiB1bml0PSJMb2ViIGNoYXAiIC8+UmF0aGVyIHRoZXJlZm9yZSBvdWdodAoJCQkJCXdlIHRvIHNheSB0aGF0IGl0IGlzIGEgZGVtb2NyYWN5IDxtaWxlc3RvbmUgbj0iMTI5MGIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPndoZW4gdGhlIGZyZWUgYXJlIHNvdmVyZWlnbiBhbmQgYW4gb2xpZ2FyY2h5CgkJCQkJd2hlbiB0aGUgcmljaCBhcmUsIGJ1dCB0aGF0IGl0IGNvbWVzIGFib3V0IHRoYXQgdGhlIHNvdmVyZWlnbiBjbGFzcyBpbiBhCgkJCQkJZGVtb2NyYWN5IGlzIG51bWVyb3VzIGFuZCB0aGF0IGluIGFuIG9saWdhcmNoeSBzbWFsbCBiZWNhdXNlIHRoZXJlIGFyZSBtYW55IG1lbgoJCQkJCW9mIGZyZWUgYmlydGggYW5kIGZldyByaWNoLiBGb3Igb3RoZXJ3aXNlLCBzdXBwb3NlIHBlb3BsZSBhc3NpZ25lZCB0aGUgb2ZmaWNlcwoJCQkJCWJ5IGhlaWdodCwgYXMgc29tZSBwZXJzb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5lLmcuIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJIZHQuIDMuMjAiIHZhbGlkPSJ5ZXMiPkhkdC4gMy4yMDwvYmlibD4uPC9ub3RlPiBzYXkgaXMgZG9uZSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMDQ4OSIga2V5PSJ0Z24sNzAwMDQ4OSI+RXRoaW9waWE8L3BsYWNlTmFtZT4sIG9yIGJ5IGJlYXV0eSwgdGhhdCB3b3VsZCBiZSBhbgoJCQkJCW9saWdhcmNoeSwgYmVjYXVzZSBib3RoIHRoZSBoYW5kc29tZSBhbmQgdGhlIHRhbGwgYXJlIGZldyBpbiBudW1iZXIuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPk5ldmVydGhlbGVzcyBpdCBpcyBub3QgZW5vdWdoIHRvIGRlZmluZQoJCQkJCXRoZXNlIGNvbnN0aXR1dGlvbnMgZXZlbiBieSB3ZWFsdGggYW5kIGZyZWUgYmlydGggb25seTsgYnV0IGluYXNtdWNoIGFzIHRoZXJlCgkJCQkJYXJlIG1vcmUgZWxlbWVudHMgdGhhbiBvbmUgYm90aCBpbiBkZW1vY3JhY3kgYW5kIGluIG9saWdhcmNoeSwgd2UgbXVzdCBhZGQgdGhlCgkJCQkJZnVydGhlciBkaXN0aW5jdGlvbiB0aGF0IG5laXRoZXIgaXMgaXQgYSBkZW1vY3JhY3kgaWYgdGhlIGZyZWU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhvc2Ugb2YgY2l0aXplbiBiaXJ0aC48L25vdGU+IGJlaW5nIGZldwoJCQkJCWdvdmVybiB0aGUgbWFqb3JpdHkgd2hvIGFyZSBub3Qgb2YgZnJlZSBiaXJ0aCwgYXMgZm9yIGluc3RhbmNlIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXBvbGxvbmlhIiBrZXk9InBlcnNldXMsQXBvbGxvbmlhIj5BcG9sbG9uaWE8L3BsYWNlTmFtZT4gb24gdGhlIElvbmlhbiBHdWxmIGFuZCBhdAoJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVGhlcmEgQ2l0eSIga2V5PSJwZXJzZXVzLFRoZXJhIENpdHkiPlRoZXJhPC9wbGFjZU5hbWU+IO+8iGZvciBpbiBlYWNoIG9mCgkJCQkJdGhlc2UgY2l0aWVzIHRoZSBvZmZpY2VzIG9mIGhvbm9yIHdlcmUgZmlsbGVkIGJ5IHRoZSBzcGVjaWFsbHkgbm9ibGUgZmFtaWxpZXMKCQkJCQl3aG8gaGFkIGJlZW4gdGhlIGZpcnN0IHNldHRsZXJzIG9mIHRoZSBjb2xvbmllcywgYW5kIHRoZXNlIHdlcmUgZmV3IG91dCBvZgoJCQkJCW1hbnnvvIksIG5vciBpcyBpdCBhIGRlbW9jcmFjeTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcwoJCQkJCQl0aGUgR3JlZWsgc2hvdWxkIGJlIGFsdGVyZWQgaGVyZSB0byBnaXZlIOKAmGFuCgkJCQkJCW9saWdhcmNoeS7igJk8L25vdGU+IGlmIHRoZSByaWNoIHJ1bGUgYmVjYXVzZSB0aGV5IGFyZSBpbiBhCgkJCQkJbWFqb3JpdHksIGFzIGluIGFuY2llbnQgdGltZXMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb2xvcGhvbiIga2V5PSJwZXJzZXVzLENvbG9waG9uIj5Db2xvcGhvbjwvcGxhY2VOYW1lPiDvvIhmb3IgdGhlcmUgdGhlIG1ham9yaXR5IG9mIHRoZSBwb3B1bGF0aW9uCgkJCQkJb3duZWQgbGFyZ2UgcHJvcGVydHkgYmVmb3JlIHRoZSB3YXIgYWdhaW5zdCB0aGUgTHlkaWFucyB0b29rIHBsYWNl77yJLAoJCQkJCWJ1dCBpdCBpcyBhIGRlbW9jcmFjeSB3aGVuIHRob3NlIHdobyBhcmUgZnJlZSBhcmUgaW4gdGhlIG1ham9yaXR5IGFuZCBoYXZlCgkJCQkJc292ZXJlaWdudHkgb3ZlciB0aGUgZ292ZXJubWVudCwgYW5kIGFuIG9saWdhcmNoeSB3aGVuIHRoZSByaWNoIGFuZCBtb3JlIHdlbGwKCQkJCQkJYm9ybjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YXJlIGZldyBhbmQgc292ZXJlaWduLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGhhcyB0aGVuIGJlZW4gc3RhdGVkIHRoYXQgdGhlcmUgYXJlIHNldmVyYWwgZm9ybXMgb2YgY29uc3RpdHV0aW9uLCBhbmQgd2hhdAoJCQkJCWlzIHRoZSBjYXVzZSBvZiB0aGlzOyBidXQgbGV0IHVzIHRha2UgdGhlIHN0YXJ0aW5nLXBvaW50IHRoYXQgd2FzIGxhaWQgZG93bgoJCQkJCQliZWZvcmU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAzLjEuPC9ub3RlPiBhbmQgc2F5IHRoYXQgdGhlcmUKCQkJCQlhcmUgbW9yZSBmb3JtcyB0aGFuIHRob3NlIG1lbnRpb25lZCwgYW5kIHdoYXQgdGhlc2UgZm9ybXMgYXJlLCBhbmQgd2h5IHRoZXkKCQkJCQl2YXJ5LiBGb3Igd2UgYWdyZWUgdGhhdCBldmVyeSBzdGF0ZSBwb3NzZXNzZXMgbm90IG9uZSBwYXJ0IGJ1dCBzZXZlcmFsLgoJCQkJCVRoZXJlZm9yZSBqdXN0IGFzLCBpbiBjYXNlIHdlIGludGVuZGVkIHRvIG9idGFpbiBhIGNsYXNzaWZpY2F0aW9uIG9mIGFuaW1hbHMsIHdlCgkJCQkJc2hvdWxkIGZpcnN0IGRlZmluZSB0aGUgcHJvcGVydGllcyBuZWNlc3NhcmlseSBiZWxvbmdpbmcgdG8gZXZlcnkgYW5pbWFsCgkJCQkJ77yIZm9yIGluc3RhbmNlIHNvbWUgb2YgdGhlIHNlbnNlIG9yZ2FucywgYW5kIHRoZSBtYWNoaW5lcnkgZm9yCgkJCQkJbWFzdGljYXRpbmcgYW5kIGZvciByZWNlaXZpbmcgZm9vZCwgc3VjaCBhcyBhIG1vdXRoIGFuZCBhIHN0b21hY2gsIGFuZCBpbgoJCQkJCWFkZGl0aW9uIHRvIHRoZXNlIHRoZSBsb2NvbW90aXZlIG9yZ2FucyBvZiB0aGUgdmFyaW91cyBzcGVjaWVz77yJLAoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGlmIHRoZXJlIHdlcmUgb25seSBzbyBtYW55CgkJCQkJbmVjZXNzYXJ5IHBhcnRzLCBidXQgdGhlcmUgd2VyZSBkaWZmZXJlbnQgdmFyaWV0aWVzIG9mIHRoZXNlIO+8iEkgbWVhbgoJCQkJCWZvciBpbnN0YW5jZSBjZXJ0YWluIHZhcmlvdXMga2luZHMgb2YgbW91dGggYW5kIHN0b21hY2ggYW5kIHNlbnNvcnkgb3JnYW5zLCBhbmQKCQkJCQlhbHNvIG9mIHRoZSBsb2NvbW90aXZlIHBhcnRzIGFzIHdlbGzvvIksIHRoZSBudW1iZXIgb2YgcG9zc2libGUKCQkJCQljb21iaW5hdGlvbnMgb2YgdGhlc2UgdmFyaWF0aW9ucyB3aWxsIG5lY2Vzc2FyaWx5IHByb2R1Y2UgYSB2YXJpZXR5IG9mIGtpbmRzIG9mCgkJCQkJYW5pbWFscyDvvIhmb3IgaXQgaXMgbm90IHBvc3NpYmxlIGZvciB0aGUgc2FtZSBhbmltYWwgdG8gaGF2ZSBzZXZlcmFsCgkJCQkJZGlmZmVyZW50IHNvcnRzIG9mIG1vdXRoLCBub3Igc2ltaWxhcmx5IG9mIGVhcnMgZWl0aGVy77yJLCBzbyB0aGF0IHdoZW4KCQkJCQlhbGwgdGhlIHBvc3NpYmxlIGNvbWJpbmF0aW9ucyBvZiB0aGVzZSBhcmUgdGFrZW4gdGhleSB3aWxsIGFsbCBwcm9kdWNlIGFuaW1hbAoJCQkJCXNwZWNpZXMsIGFuZCB0aGVyZSB3aWxsIGJlIGFzIG1hbnkgc3BlY2llcyBvZiB0aGUgYW5pbWFsIGFzIHRoZXJlIGFyZQoJCQkJCWNvbWJpbmF0aW9ucyBvZiB0aGUgbmVjZXNzYXJ5IHBhcnRzOuKAlDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5zbyBpbiB0aGUgc2FtZSB3YXkgYWxzbyB3ZSBzaGFsbCBjbGFzc2lmeSB0aGUgdmFyaWV0aWVzIG9mCgkJCQkJdGhlIGNvbnN0aXR1dGlvbnMgdGhhdCBoYXZlIGJlZW4gbWVudGlvbmVkLiBGb3Igc3RhdGVzIGFsc28gYXJlIGNvbXBvc2VkIG5vdCBvZgoJCQkJCW9uZSBidXQgb2Ygc2V2ZXJhbCBwYXJ0cywgYXMgaGFzIGJlZW4gc2FpZCBvZnRlbi4gT25lIG9mIHRoZXNlIHBhcnRzIHRoZXJlZm9yZQoJCQkJCWlzIHRoZSBtYXNzIG9mIHBlcnNvbnMgY29uY2VybmVkIHdpdGggZm9vZCB3aG8gYXJlIGNhbGxlZCBmYXJtZXJzLCA8bWlsZXN0b25lIG49IjEyOTFhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5hbmQKCQkJCQlzZWNvbmQgaXMgd2hhdCBpcyBjYWxsZWQgdGhlIG1lY2hhbmljIGNsYXNzIO+8iGFuZCB0aGlzIGlzIHRoZSBncm91cAoJCQkJCWVuZ2FnZWQgaW4gdGhlIGFydHMgd2l0aG91dCB3aGljaCBpdCBpcyBpbXBvc3NpYmxlIGZvciBhIGNpdHkgdG8gYmUgaW5oYWJpdGVkLAoJCQkJCWFuZCBzb21lIG9mIHRoZXNlIGFydHMgYXJlIGluZGlzcGVuc2FibHkgbmVjZXNzYXJ5LCB3aGlsZSBvdGhlcnMgY29udHJpYnV0ZSB0bwoJCQkJCWx1eHVyeSBvciBub2JsZSBsaXZpbmfvvIksIGFuZCB0aGlyZCBpcyBhIGNvbW1lcmNpYWwgY2xhc3Mg77yIYnkKCQkJCQl3aGljaCBJIG1lYW4gdGhlIGNsYXNzIHRoYXQgaXMgZW5nYWdlZCBpbiBzZWxsaW5nIGFuZCBidXlpbmcgYW5kIGluIHdob2xlc2FsZQoJCQkJCWFuZCByZXRhaWwgdHJhZGXvvIksIGFuZCBmb3VydGggaXMgdGhlIGNsYXNzIG9mIG1hbnVhbCBsYWJvcmVycywgYW5kIHRoZQoJCQkJCWZpZnRoIGNsYXNzIGlzIHRoZSBvbmUgdG8gZGVmZW5kIHRoZSBzdGF0ZSBpbiB3YXIsIHdoaWNoIGlzIG5vIGxlc3MKCQkJCQlpbmRpc3BlbnNhYmxlIHRoYW4gdGhlIG90aGVycyBpZiB0aGUgcGVvcGxlIGFyZSBub3QgdG8gYmVjb21lIHRoZSBzbGF2ZXMgb2YKCQkJCQl0aG9zZSB3aG8gY29tZSBhZ2FpbnN0IHRoZW07IGZvciBzdXJlbHkgaXQgaXMgcXVpdGUgb3V0IG9mIHRoZSBxdWVzdGlvbiB0aGF0IGl0CgkJCQkJc2hvdWxkIGJlIHByb3BlciB0byBnaXZlIHRoZSBuYW1lIG9mIHN0YXRlIHRvIGEgY29tbXVuaXR5IHRoYXQgaXMgYnkgbmF0dXJlIGEKCQkJCQlzbGF2ZSwgZm9yIGEgc3RhdGUgaXMgc2VsZi1zdWZmaWNpZW50LCBidXQgdGhhdCB3aGljaCBpcyBhIHNsYXZlIGlzIG5vdAoJCQkJCXNlbGYtc3VmZmljaWVudC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXJlZm9yZSB0aGUKCQkJCQlzdGF0ZW1lbnQgbWFkZSBpbiB0aGUgPHRpdGxlPlJlcHVibGljPC90aXRsZT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPgoJCQkJCQk8YmlibCBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gUmVwLiAzNjliIiB2YWxpZD0ieWVzIj5QbGF0LiBSZXAuIDM2OWItMzcxZTwvYmlibD4KCQkJCQk8L25vdGU+IGlzIHdpdHR5IGJ1dCBub3QgYWRlcXVhdGUuIEZvciBTb2NyYXRlcyBzYXlzIHRoYXQgdGhlIG1vc3QgbmVjZXNzYXJ5CgkJCQkJZWxlbWVudHMgb2Ygd2hpY2ggYSBzdGF0ZSBpcyBjb21wb3NlZCBhcmUgZm91ciwgYW5kIGhlIHNwZWNpZmllcyB0aGVzZSBhcyBhCgkJCQkJd2VhdmVyLCBhIGZhcm1lciwgYSBzaG9lbWFrZXIgYW5kIGEgYnVpbGRlcjsgYW5kIHRoZW4gYWdhaW4gaGUgYWRkcywgb24gdGhlCgkJCQkJZ3JvdW5kIHRoYXQgdGhlc2UgYXJlIG5vdCBzZWxmLXN1ZmZpY2llbnQsIGEgY29wcGVyLXNtaXRoIGFuZCB0aGUgcGVvcGxlIHRvIGxvb2sKCQkJCQlhZnRlciB0aGUgbmVjZXNzYXJ5IGxpdmUtc3RvY2ssIGFuZCBpbiBhZGRpdGlvbiBhIG1lcmNoYW50IGFuZCBhIHJldGFpbCB0cmFkZXIuCgkJCQkJVGhlc2UgZWxlbWVudHMgdG9nZXRoZXIgY29uc3RpdHV0ZSB0aGUgZnVsbCBjb21wbGVtZW50IG9mIGhpcyBmaXJzdCBjaXR5LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGUgZmlyc3Qgc2tldGNoIG9mIHRoZSBDaXR5LXN0YXRlLCBsb2MuCgkJCQkJCWNpdC48L25vdGU+IGltcGx5aW5nIHRoYXQgZXZlcnkgY2l0eSBpcyBmb3JtZWQgZm9yIHRoZSBzYWtlIG9mIHRoZQoJCQkJCW5lY2Vzc2FyaWVzIG9mIGxpZmUgYW5kIG5vdCByYXRoZXIgZm9yIHRoZSBzYWtlIG9mIHdoYXQgaXMgbm9ibGUsIGFuZCB0aGF0IGl0CgkJCQkJaGFzIGVxdWFsIG5lZWQgb2YgYm90aCBzaG9lbWFrZXJzIGFuZCBmYXJtZXJzOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IHRoZSB3YXJyaW9yIGNsYXNzPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5oZSBkb2VzIG5vdCBhc3NpZ24gdG8gaXQgdW50aWwgYXMgdGhlIHRlcnJpdG9yeSBpcyBpbmNyZWFzZWQKCQkJCQlhbmQgY29tZXMgaW50byBjb250YWN0IHdpdGggdGhhdCBvZiB0aGUgbmVpZ2hib3JzIHRoZXkgYXJlIGJyb3VnaHQgaW50byB3YXIuIEJ1dAoJCQkJCXlldCBldmVuIGFtb25nIHRoZSBmb3VyIHBhcnRuZXJzIG9yIHdoYXRldmVyIHRoZWlyIG51bWJlciBiZSB0aGVyZSBtdXN0CgkJCQkJbmVjZXNzYXJpbHkgYmUgc29tZWJvZHkgdG8gYXNzaWduIGp1c3RpY2UgYW5kIHRvIGp1ZGdlIHRoZWlyIGNsYWltczsgaW5hc211Y2gKCQkJCQl0aGVyZWZvcmUgYXMgb25lIHdvdWxkIGNvdW50IHRoZSBzb3VsIG9mIGFuIGFuaW1hbCB0byBiZSBtb3JlIGEgcGFydCBvZiBpdCB0aGFuCgkJCQkJdGhlIGJvZHksIHNvIGFsc28gdGhlIGZhY3RvcnMgaW4gc3RhdGVzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHNvdWwgbXVzdCBiZSBkZWVtZWQKCQkJCQl0byBiZSBwYXJ0cyBvZiB0aGVtIG1vcmUgdGhhbiB0aG9zZSBmYWN0b3JzIHdoaWNoIGNvbnRyaWJ1dGUgdG8gbmVjZXNzYXJ5CgkJCQkJdXRpbGl0eSzigJR0aGUgZm9ybWVyIGJlaW5nIHRoZSBtaWxpdGFyeSBjbGFzcyBhbmQgdGhlIGNsYXNzIHRoYXQgcGxheXMKCQkJCQlhIHBhcnQgaW4ganVkaWNpYWwganVzdGljZSwgYW5kIGluIGFkZGl0aW9uIHRvIHRoZXNlIHRoZSBkZWxpYmVyYXRpdmUgY2xhc3MsCgkJCQkJZGVsaWJlcmF0aW9uIGJlaW5nIGEgZnVuY3Rpb24gb2YgcG9saXRpY2FsIGludGVsbGlnZW5jZS4gQW5kIGl0IG1ha2VzIG5vCgkJCQkJZGlmZmVyZW5jZSB0byB0aGUgYXJndW1lbnQgd2hldGhlciB0aGVzZSBmdW5jdGlvbnMgYXJlIGhlbGQgYnkgc3BlY2lhbCBjbGFzc2VzCgkJCQkJc2VwYXJhdGVseSBvciBieSB0aGUgc2FtZSBwZXJzb25zOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjE0IiB1bml0PSJMb2ViIGNoYXAiIC8+Zm9yIGl0IG9mdGVuIGhhcHBlbnMgZm9yIHRoZSBzYW1lIG1lbiB0byBiZSBib3RoIHNvbGRpZXJzIGFuZCBmYXJtZXJzLiBIZW5jZQoJCQkJCWluYXNtdWNoIGFzIGJvdGggZ3JvdXBzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgZmlyc3QgZm91cgoJCQkJCQljbGFzc2VzIGFuZCB0aGUgZmlmdGggYW5kIHNpeHRoIO+8iHRoZSBtaWxpdGFyeSBhbmQKCQkJCQkJanVkaWNpYWzvvIkuPC9ub3RlPiBvZiBjbGFzc2VzIG11c3QgYmUgY291bnRlZCBwYXJ0cyBvZiB0aGUgc3RhdGUsIGl0CgkJCQkJaXMgY2xlYXIgdGhhdCB0aGUgaGVhdnktYXJtZWQgc29sZGllcnkgYXQgYW55IHJhdGU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkxvd2VyIGdyYWRlcyBvZiB0aGUgZm9yY2VzIG1heSBiZSBleGNsdWRlZCBmcm9tIGNpdGl6ZW5zaGlwLAoJCQkJCQllLmcuIHRoZSByb3dlcnMgb2YgdGhlIHRyaXJlbWVzIO+8iHNlZSBiZWxvdywgMTM3NmIKCQkJCQkJMTXvvIkuPC9ub3RlPiBtdXN0IGJlIGEgcGFydCBvZiB0aGUgc3RhdGUuIEFuZCBhIHNldmVudGggY2xhc3MgaXMgdGhlCgkJCQkJb25lIHRoYXQgc2VydmVzIHRoZSBjb21tdW5pdHkgYnkgbWVhbnMgb2YgaXRzIHByb3BlcnR5LCB0aGUgY2xhc3MgdGhhdCB3ZSBjYWxsCgkJCQkJdGhlIHJpY2guIEFuZCBhbiBlaWdodGggaXMgdGhlIGNsYXNzIG9mIHB1YmxpYyBzZXJ2YW50cywgdGhhdCBpcywgdGhvc2Ugd2hvCgkJCQkJc2VydmUgaW4gdGhlIG1hZ2lzdHJhY2llcywgaW5hc211Y2ggYXMgd2l0aG91dCBydWxlcnMgaXQgaXMgaW1wb3NzaWJsZSBmb3IgYQoJCQkJCWNpdHkgdG8gZXhpc3Q7IGl0IGlzIHRoZXJlZm9yZSBuZWNlc3NhcnkgdGhhdCB0aGVyZSBzaG91bGQgYmUgc29tZSBtZW4gd2hvIGFyZQoJCQkJCWFibGUgdG8gZ292ZXJuIGFuZCB3aG8gcmVuZGVyIHRoaXMgc2VydmljZSB0byB0aGUgc3RhdGUgZWl0aGVyIGNvbnRpbnVvdXNseSBvcgoJCQkJCWluIHR1cm4uIEFuZCB0aGVyZSByZW1haW4gdGhlIGNsYXNzZXMgd2hpY2ggd2UgaGFwcGVuIHRvIGhhdmUgZGVmaW5lZCBqdXN0CgkJCQkJYmVmb3JlLCB0aGUgZGVsaWJlcmF0aXZlIGNsYXNzIGFuZCB0aGUgb25lIHRoYXQganVkZ2VzIHRoZSBjbGFpbXMgb2YgbGl0aWdhbnRzLgoJCQkJCUlmIHRoZXJlZm9yZSBpdCBpcyBwcm9wZXIgZm9yIHRoZSBzdGF0ZXMgdG8gaGF2ZSB0aGVzZSBmdW5jdGlvbnMgcGVyZm9ybWVkLCBhbmQKCQkJCQl3ZWxsIGFuZCBqdXN0bHkgcGVyZm9ybWVkLCA8bWlsZXN0b25lIG49IjEyOTFiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5pdCBpcyBuZWNlc3NhcnkgZm9yIHRoZXJlIGFsc28gdG8gYmUgc29tZSBtZW4KCQkJCQlwb3NzZXNzaW5nIHZpcnR1ZSBpbiB0aGUgZm9ybSBvZiBwb2xpdGljYWwgZXhjZWxsZW5jZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPk5vdyBhcyB0byB0aGUgb3RoZXIgY2FwYWNpdGllcyBtYW55IHBlb3BsZSB0aGluawoJCQkJCXRoYXQgaXQgaXMgcG9zc2libGUgZm9yIHRoZW0gdG8gYmUgcG9zc2Vzc2VkIGluIGNvbWJpbmF0aW9uLCBmb3IgZXhhbXBsZSwgZm9yCgkJCQkJdGhlIHNhbWUgbWVuIHRvIGJlIHRoZSBzb2xkaWVycyB0aGF0IGRlZmVuZCB0aGUgc3RhdGUgaW4gd2FyIGFuZCB0aGUgZmFybWVycwoJCQkJCXRoYXQgdGlsbCB0aGUgbGFuZCBhbmQgdGhlIGFydGlzYW5zLCBhbmQgYWxzbyB0aGUgY291bmNpbGxvcnMgYW5kIGp1ZGdlcywgYW5kCgkJCQkJaW5kZWVkIGFsbCBtZW4gY2xhaW0gdG8gcG9zc2VzcyB2aXJ0dWUgYW5kIHRoaW5rIHRoZW1zZWx2ZXMgY2FwYWJsZSBvZiBmaWxsaW5nCgkJCQkJbW9zdCBvZiB0aGUgb2ZmaWNlcyBvZiBzdGF0ZTsgYnV0IGl0IGlzIG5vdCBwb3NzaWJsZSBmb3IgdGhlIHNhbWUgbWVuIHRvIGJlIHBvb3IKCQkJCQlhbmQgcmljaC4gSGVuY2UgdGhlc2Ugc2VlbSB0byBiZSBpbiB0aGUgZnVsbGVzdCBzZW5zZSB0aGUgcGFydHMgb2YgdGhlIHN0YXRlLAoJCQkJCXRoZSByaWNoIGFuZCB0aGUgcG9vci4gQW5kIGFsc28gdGhlIGZhY3QgdGhhdCB0aGUgcmljaCBhcmUgdXN1YWxseSBmZXcgYW5kIHRoZQoJCQkJCXBvb3IgbWFueSBtYWtlcyB0aGVzZSB0d28gYW1vbmcgdGhlIHBhcnRzIG9mIHRoZSBzdGF0ZSBhcHBlYXIgYXMgb3Bwb3NpdGUKCQkJCQlzZWN0aW9uczsgc28gdGhhdCB0aGUgc3VwZXJpb3IgY2xhaW1zPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4KCQkJCQkJMy4xMSwgMTIgZmluLjwvbm90ZT4gb2YgdGhlc2UgY2xhc3NlcyBhcmUgZXZlbiBtYWRlIHRoZSBndWlkaW5nIHByaW5jaXBsZXMKCQkJCQl1cG9uIHdoaWNoIGNvbnN0aXR1dGlvbnMgYXJlIGNvbnN0cnVjdGVkLCBhbmQgaXQgaXMgdGhvdWdodCB0aGF0IHRoZXJlIGFyZSB0d28KCQkJCQlmb3JtcyBvZiBjb25zdGl0dXRpb24sIGRlbW9jcmFjeSBhbmQgb2xpZ2FyY2h5LjxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhhdCB0aGVyZSBhcmUgdGhlbiBzZXZlcmFsCgkJCQkJZm9ybXMgb2YgY29uc3RpdHV0aW9uLCBhbmQgd2hhdCBhcmUgdGhlIHJlYXNvbnMgZm9yIHRoaXMsIGhhcyBiZWVuIHN0YXRlZAoJCQkJCWJlZm9yZTsgbGV0IHVzIG5vdyBzYXkgdGhhdCB0aGVyZSBhcmUgc2V2ZXJhbCB2YXJpZXRpZXMgYm90aCBvZiBkZW1vY3JhY3kgYW5kIG9mCgkJCQkJb2xpZ2FyY2h5LiBBbmQgdGhpcyBpcyBjbGVhciBldmVuIGZyb20gd2hhdCBoYXMgYmVlbiBzYWlkIGFscmVhZHkuIEZvciB0aGVyZSBhcmUKCQkJCQlzZXZlcmFsIGNsYXNzZXMgYm90aCBvZiB0aGUgcGVvcGxlIGFuZCBvZiB0aG9zZSBjYWxsZWQgdGhlIG5vdGFibGVzOyBmb3IKCQkJCQlpbnN0YW5jZSBjbGFzc2VzIG9mIHRoZSBwZW9wbGUgYXJlLCBvbmUgdGhlIGZhcm1lcnMsIGFub3RoZXIgdGhlIGNsYXNzIGRlYWxpbmcKCQkJCQl3aXRoIHRoZSBhcnRzIGFuZCBjcmFmdHMsIGFub3RoZXIgdGhlIGNvbW1lcmNpYWwgY2xhc3M8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm9jY3VwaWVkIGluIGJ1eWluZyBhbmQgc2VsbGluZyBhbmQgYW5vdGhlciB0aGUgb25lCgkJCQkJb2NjdXBpZWQgd2l0aCB0aGUgc2Vh4oCUYW5kIHRoaXMgaXMgZGl2aWRlZCBpbnRvIHRoZSBjbGFzc2VzIGNvbmNlcm5lZAoJCQkJCXdpdGggbmF2YWwgd2FyZmFyZSwgd2l0aCB0cmFkZSwgd2l0aCBmZXJyeWluZyBwYXNzZW5nZXJzIGFuZCB3aXRoIGZpc2hpbmcKCQkJCQnvvIhmb3IgZWFjaCBvZiB0aGVzZSBjbGFzc2VzIGlzIGV4dHJlbWVseSBudW1lcm91cyBpbiB2YXJpb3VzIHBsYWNlcywgZm9yCgkJCQkJaW5zdGFuY2UgZmlzaGVybWVuIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA0MTAwIiBrZXk9InRnbiw3MDA0MTAwIj5UYXJlbnR1bTwvcGxhY2VOYW1lPiBhbmQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxCeXphbnRpdW0iIGtleT0icGVyc2V1cyxCeXphbnRpdW0iPkJ5emFudGl1bTwvcGxhY2VOYW1lPiwgbmF2eSBtZW4gYXQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhlIG1lcmNhbnRpbGUgY2xhc3MgYXQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEwODciIGtleT0idGduLDcwMTEwODciPkFlZ2luYTwvcGxhY2VOYW1lPiBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2NzAiIGtleT0idGduLDcwMDI2NzAiPkNoaW9zPC9wbGFjZU5hbWU+LCBhbmQgdGhlIGZlcnJ5bWFuLWNsYXNzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVGVuZWRvcyIga2V5PSJwZXJzZXVzLFRlbmVkb3MiPlRlbmVkb3M8L3BsYWNlTmFtZT7vvIksIGFuZCBpbiBhZGRpdGlvbiB0bwoJCQkJCXRoZXNlIHRoZSBoYW5kLXdvcmtpbmcgY2xhc3MgYW5kIHRoZSBwZW9wbGUgcG9zc2Vzc2luZyBsaXR0bGUgc3Vic3RhbmNlIHNvIHRoYXQKCQkJCQl0aGV5IGNhbm5vdCBsaXZlIGEgbGlmZSBvZiBsZWlzdXJlLCBhbHNvIHRob3NlIHRoYXQgYXJlIG5vdCBmcmVlIG1lbiBvZiBjaXRpemVuCgkJCQkJcGFyZW50YWdlIG9uIGJvdGggc2lkZXMsIGFuZCBhbnkgb3RoZXIgc2ltaWxhciBjbGFzcyBvZiBjb21tb24gcGVvcGxlOyB3aGlsZQoJCQkJCWFtb25nIHRoZSBub3RhYmxlcyB3ZWFsdGgsIGJpcnRoLCB2aXJ0dWUsIGVkdWNhdGlvbiwgYW5kIHRoZSBkaXN0aW5jdGlvbnMgdGhhdAoJCQkJCWFyZSBzcG9rZW4gb2YgaW4gdGhlIHNhbWUgZ3JvdXAgYXMgdGhlc2UsIGZvcm0gdGhlIGNsYXNzZXMuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZmlyc3Qga2luZCBvZgoJCQkJCWRlbW9jcmFjeSB0aGVyZWZvcmUgaXMgdGhlIG9uZSB3aGljaCByZWNlaXZlcyB0aGUgbmFtZSBjaGllZmx5IGluIHJlc3BlY3Qgb2YKCQkJCQllcXVhbGl0eS4gRm9yIHRoZSBsYXcgb2YgdGhpcyBzb3J0IG9mIGRlbW9jcmFjeSBhc2NyaWJlcyBlcXVhbGl0eSB0byB0aGUgc3RhdGUKCQkJCQlvZiB0aGluZ3MgaW4gd2hpY2ggdGhlIHBvb3IgaGF2ZSBubyBtb3JlIHByb21pbmVuY2UgdGhhbiB0aGUgcmljaCwgYW5kIG5laXRoZXIKCQkJCQljbGFzcyBpcyBzb3ZlcmVpZ24sIGJ1dCBib3RoIGFyZSBhbGlrZTsgZm9yIGFzc3VtaW5nIHRoYXQgZnJlZWRvbSBpcyBjaGllZmx5CgkJCQkJZm91bmQgaW4gYSBkZW1vY3JhY3ksIGFzIHNvbWUgcGVyc29ucyBzdXBwb3NlLCBhbmQgYWxzbyBlcXVhbGl0eSwgdGhpcyB3b3VsZCBiZQoJCQkJCXNvIG1vc3QgZnVsbHkgd2hlbiB0byB0aGUgZnVsbGVzdCBleHRlbnQgYWxsIGFsaWtlIHNoYXJlIGVxdWFsbHkgaW4gdGhlCgkJCQkJZ292ZXJubWVudC4gQW5kIHNpbmNlIHRoZSBwZW9wbGUgYXJlIGluIHRoZSBtYWpvcml0eSwgYW5kIGEgcmVzb2x1dGlvbiBwYXNzZWQgYnkKCQkJCQlhIG1ham9yaXR5IGlzIHBhcmFtb3VudCwgdGhpcyBtdXN0IG5lY2Vzc2FyaWx5IGJlIGEgZGVtb2NyYWN5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGlzIHRoZXJlZm9yZSBpcyBvbmUga2luZCBvZiBkZW1vY3JhY3ksCgkJCQkJd2hlcmUgdGhlIG9mZmljZXMgYXJlIGhlbGQgb24gcHJvcGVydHkgcXVhbGlmaWNhdGlvbnMsIGJ1dCB0aGVzZSBsb3cgb25lcywKCQkJCQlhbHRob3VnaCBpdCBpcyBlc3NlbnRpYWwgdGhhdCB0aGUgbWFuIHdobyBhY3F1aXJlcyB0aGUgc3BlY2lmaWVkIGFtb3VudCBzaG91bGQKCQkJCQloYXZlIHRoZSByaWdodCB0byBob2xkIG9mZmljZSwgYW5kIHRoZSBtYW4gd2hvIGxvc2VzIGl0IHNob3VsZCBub3QgaG9sZCBvZmZpY2UuCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTI5MmEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkFuZCBhbm90aGVyIGtpbmQgb2YgZGVtb2NyYWN5IGlzIGZvciBhbGwgdGhlIGNpdGl6ZW5zIHRoYXQgYXJlCgkJCQkJbm90IG9wZW4gdG8gY2hhbGxlbmdlPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIG9uIHRoZSBzY29yZSBvZgoJCQkJCQliaXJ0aCwgY2YuIDUuNC48L25vdGU+IHRvIGhhdmUgYSBzaGFyZSBpbiBvZmZpY2UsIGJ1dCBmb3IgdGhlIGxhdyB0byBydWxlOwoJCQkJCWFuZCBhbm90aGVyIGtpbmQgb2YgZGVtb2NyYWN5IGlzIGZvciBhbGwgdG8gc2hhcmUgaW4gdGhlIG9mZmljZXMgb24gdGhlIG1lcmUKCQkJCQlxdWFsaWZpY2F0aW9uIG9mIGJlaW5nIGEgY2l0aXplbiwgYnV0IGZvciB0aGUgbGF3IHRvIHJ1bGUuIEFub3RoZXIga2luZCBvZgoJCQkJCWRlbW9jcmFjeSBpcyB3aGVyZSBhbGwgdGhlIG90aGVyIHJlZ3VsYXRpb25zIGFyZSB0aGUgc2FtZSwgYnV0IHRoZSBtdWx0aXR1ZGUgaXMKCQkJCQlzb3ZlcmVpZ24gYW5kIG5vdCB0aGUgbGF3OyA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgdGhpcwoJCQkJCWNvbWVzIGFib3V0IHdoZW4gdGhlIGRlY3JlZXMgb2YgdGhlIGFzc2VtYmx5IG92ZXItcmlkZSB0aGUgbGF3LiBUaGlzIHN0YXRlIG9mCgkJCQkJdGhpbmdzIGlzIGJyb3VnaHQgYWJvdXQgYnkgdGhlIGRlbWFnb2d1ZXM7IGZvciBpbiB0aGUgc3RhdGVzIHVuZGVyIGRlbW9jcmF0aWMKCQkJCQlnb3Zlcm5tZW50IGd1aWRlZCBieSBsYXcgYSBkZW1hZ29ndWUgZG9lcyBub3QgYXJpc2UsIGJ1dCB0aGUgYmVzdCBjbGFzc2VzIG9mCgkJCQkJY2l0aXplbnMgYXJlIGluIHRoZSBtb3N0IHByb21pbmVudCBwb3NpdGlvbjsgYnV0IHdoZXJlIHRoZSBsYXdzIGFyZSBub3QKCQkJCQlzb3ZlcmVpZ24sIHRoZW4gZGVtYWdvZ3VlcyBhcmlzZTsgZm9yIHRoZSBjb21tb24gcGVvcGxlIGJlY29tZSBhIHNpbmdsZQoJCQkJCWNvbXBvc2l0ZSBtb25hcmNoLCBzaW5jZSB0aGUgbWFueSBhcmUgc292ZXJlaWduIG5vdCBhcyBpbmRpdmlkdWFscyBidXQKCQkJCQljb2xsZWN0aXZlbHkuIFlldCB3aGF0IGtpbmQgb2YgZGVtb2NyYWN5IEhvbWVyPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJPGJpYmwgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDIuMjA0IiB2YWxpZD0ieWVzIj5Ib20uIElsLiAyLjIwNDwvYmlibD4KCQkJCQk8L25vdGU+IG1lYW5zIGJ5IHRoZSB3b3JkcyDigJhubyBibGVzc2luZyBpcyB0aGUgbG9yZHNoaXAgb2YgdGhlCgkJCQkJbWFueeKAmeKAlHdoZXRoZXIgaGUgbWVhbnMgdGhpcyBraW5kIG9yIHdoZW4gdGhvc2Ugd2hvIHJ1bGUgYXMKCQkJCQlpbmRpdmlkdWFscyBhcmUgbW9yZSBudW1lcm91cywgaXMgbm90IGNsZWFyLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ib3dldmVyLCBhIHBlb3BsZSBvZiB0aGlzIHNvcnQsIGFzIGJlaW5nIG1vbmFyY2gsIHNlZWtzIHRvCgkJCQkJZXhlcmNpc2UgbW9uYXJjaGljIHJ1bGUgdGhyb3VnaCBub3QgYmVpbmcgcnVsZWQgYnkgdGhlIGxhdywgYW5kIGJlY29tZXMKCQkJCQlkZXNwb3RpYywgc28gdGhhdCBmbGF0dGVyZXJzIGFyZSBoZWxkIGluIGhvbm9yLiBBbmQgYSBkZW1vY3JhY3kgb2YgdGhpcyBuYXR1cmUKCQkJCQlpcyBjb21wYXJhYmxlIHRvIHRoZSB0eXJhbm5pY2FsIGZvcm0gb2YgbW9uYXJjaHksIGJlY2F1c2UgdGhlaXIgc3Bpcml0IGlzIHRoZQoJCQkJCXNhbWUsIGFuZCBib3RoIGV4ZXJjaXNlIGRlc3BvdGljIGNvbnRyb2wgb3ZlciB0aGUgYmV0dGVyIGNsYXNzZXMsIGFuZCB0aGUKCQkJCQlkZWNyZWVzIHZvdGVkIGJ5IHRoZSBhc3NlbWJseTxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YXJlIGxpa2UKCQkJCQl0aGUgY29tbWFuZHMgaXNzdWVkIGluIGEgdHlyYW5ueSwgYW5kIHRoZSBkZW1hZ29ndWVzIGFuZCB0aGUgZmxhdHRlcmVycyBhcmUgdGhlCgkJCQkJc2FtZSBwZW9wbGUgb3IgYSBjb3JyZXNwb25kaW5nIGNsYXNzLCBhbmQgZWl0aGVyIHNldCBoYXMgdGhlIHZlcnkgc3Ryb25nZXN0CgkJCQkJaW5mbHVlbmNlIHdpdGggdGhlIHJlc3BlY3RpdmUgcnVsaW5nIHBvd2VyLCB0aGUgZmxhdHRlcmVycyB3aXRoIHRoZSB0eXJhbnRzIGFuZAoJCQkJCXRoZSBkZW1hZ29ndWVzIHdpdGggZGVtb2NyYWNpZXMgb2YgdGhpcyBraW5kLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhlc2UgbWVuIGNhdXNlIHRoZSByZXNvbHV0aW9ucyBvZiB0aGUgYXNzZW1ibHkgdG8gYmUKCQkJCQlzdXByZW1lIGFuZCBub3QgdGhlIGxhd3MsIGJ5IHJlZmVycmluZyBhbGwgdGhpbmdzIHRvIHRoZSBwZW9wbGU7IGZvciB0aGV5IG93ZQoJCQkJCXRoZWlyIHJpc2UgdG8gZ3JlYXRuZXNzIHRvIHRoZSBmYWN0IHRoYXQgdGhlIHBlb3BsZSBpcyBzb3ZlcmVpZ24gb3ZlciBhbGwgdGhpbmdzCgkJCQkJd2hpbGUgdGhleSBhcmUgc292ZXJlaWduIG92ZXIgdGhlIG9waW5pb24gb2YgdGhlIHBlb3BsZSwgZm9yIHRoZSBtdWx0aXR1ZGUKCQkJCQliZWxpZXZlcyB0aGVtLiBNb3Jlb3ZlciB0aG9zZSB3aG8gYnJpbmcgY2hhcmdlcyBhZ2FpbnN0IHRoZSBtYWdpc3RyYXRlcyBzYXkgdGhhdAoJCQkJCXRoZSBwZW9wbGUgb3VnaHQgdG8ganVkZ2UgdGhlIHN1aXRzLCBhbmQgdGhlIHBlb3BsZSByZWNlaXZlIHRoZSBpbnZpdGF0aW9uCgkJCQkJZ2xhZGx5LCBzbyB0aGF0IGFsbCB0aGUgbWFnaXN0cmFjaWVzIGFyZSBwdXQgZG93bi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNC43IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGl0IHdvdWxkIHNlZW0gdG8gYmUgYSByZWFzb25hYmxlIGNyaXRpY2lzbSB0byBzYXkgdGhhdAoJCQkJCXN1Y2ggYSBkZW1vY3JhY3kgaXMgbm90IGEgY29uc3RpdHV0aW9uIGF0IGFsbDsgZm9yIHdoZXJlIHRoZSBsYXdzIGRvIG5vdCBnb3Zlcm4KCQkJCQl0aGVyZSBpcyBubyBjb25zdGl0dXRpb24sIGFzIHRoZSBsYXcgb3VnaHQgdG8gZ292ZXJuIGFsbCB0aGluZ3Mgd2hpbGUgdGhlCgkJCQkJbWFnaXN0cmF0ZXMgY29udHJvbCBwYXJ0aWN1bGFycywgYW5kIHdlIG91Z2h0IHRvIGp1ZGdlIHRoaXMgdG8gYmUgY29uc3RpdHV0aW9uYWwKCQkJCQlnb3Zlcm5tZW50OyBpZiB0aGVuIGRlbW9jcmFjeSByZWFsbHkgaXMgb25lIG9mIHRoZSBmb3JtcyBvZiBjb25zdGl0dXRpb24sIGl0IGlzCgkJCQkJbWFuaWZlc3QgdGhhdCBhbiBvcmdhbml6YXRpb24gb2YgdGhpcyBraW5kLCBpbiB3aGljaCBhbGwgdGhpbmdzIGFyZSBhZG1pbmlzdGVyZWQKCQkJCQlieSByZXNvbHV0aW9ucyBvZiB0aGUgYXNzZW1ibHksIGlzIG5vdCBldmVuIGEgZGVtb2NyYWN5IGluIHRoZSBwcm9wZXIgc2Vuc2UsIGZvcgoJCQkJCWl0IGlzIGltcG9zc2libGUgZm9yIGEgdm90ZWQgcmVzb2x1dGlvbiB0byBiZSBhIHVuaXZlcnNhbCBydWxlLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TGV0IHRoaXMgYmUgb3VyIGRpc2N1c3Npb24gb2YgdGhlIGRpZmZlcmVudCBraW5kcyBvZgoJCQkJCQlkZW1vY3JhY3kuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5PZiB0aGUga2luZHMgb2Ygb2xpZ2FyY2h5LCBvbmUgaXMgZm9yIHRoZSBtYWdpc3RyYWNpZXMgdG8gYmUKCQkJCQlhcHBvaW50ZWQgZnJvbSBwcm9wZXJ0eS1hc3Nlc3NtZW50cyBzbyBoaWdoIHRoYXQgdGhlIHBvb3Igd2hvIGFyZSB0aGUgbWFqb3JpdHkKCQkJCQloYXZlIG5vIHNoYXJlIGluIHRoZSBnb3Zlcm5tZW50LCBidXQgZm9yIHRoZSBtYW4gd2hvIGFjcXVpcmVzIHRoZSByZXF1aXNpdGUKCQkJCQlhbW91bnQgb2YgcHJvcGVydHkgdG8gYmUgYWxsb3dlZCB0byB0YWtlIHBhcnQgaW4gaXQ7IDxtaWxlc3RvbmUgbj0iMTI5MmIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFub3RoZXIgaXMgd2hlbgoJCQkJCXRoZSBtYWdpc3RyYWNpZXMgYXJlIGZpbGxlZCBmcm9tIGhpZ2ggYXNzZXNzbWVudHMgYW5kIHRoZSBtYWdpc3RyYXRlcyB0aGVtc2VsdmVzCgkJCQkJZWxlY3QgdG8gZmlsbCB2YWNhbmNpZXMg77yIc28gdGhhdCBpZiB0aGV5IGRvIHNvIGZyb20gYWxsIHRoZSBjaXRpemVucyBvZgoJCQkJCXRoaXMgYXNzZXNzbWVudCwgdGhpcyBhcHBlYXJzIHJhdGhlciB0byBiZSBvZiB0aGUgbmF0dXJlIG9mIGFuIGFyaXN0b2NyYWN5LCBidXQKCQkJCQlpZiBmcm9tIGEgcGFydGljdWxhciBzZWN0aW9uIG9mIHRoZW0sIGl0IGlzIG9saWdhcmNoaWNhbO+8iTsgYW5vdGhlcgoJCQkJCXZhcmlldHkgb2Ygb2xpZ2FyY2h5IGlzIHdoZW4gc29uIHN1Y2NlZWRzIGZhdGhlciBpbiBvZmZpY2U7IGFuZCBhIGZvdXJ0aCBraW5kIGlzCgkJCQkJd2hlbiB0aGUgaGVyZWRpdGFyeSBzeXN0ZW0ganVzdCBtZW50aW9uZWQgZXhpc3RzIGFuZCBhbHNvIHRoZSBtYWdpc3RyYXRlcyBnb3Zlcm4KCQkJCQlhbmQgbm90IHRoZSBsYXcuIFRoaXMgYW1vbmcgb2xpZ2FyY2hpZXMgaXMgdGhlIGZvcm0gY29ycmVzcG9uZGluZyB0byB0eXJhbm55CgkJCQkJYW1vbmcgbW9uYXJjaGllcyBhbmQgdG8gdGhlIGZvcm0gb2YgZGVtb2NyYWN5IGFib3V0IHdoaWNoIHdlIHNwb2tlIGxhc3QgYW1vbmcKCQkJCQlkZW1vY3JhY2llcywgYW5kIGluZGVlZCBvbGlnYXJjaHkgb2YgdGhpcyBzb3J0IGhhcyB0aGUgc3BlY2lhbCBuYW1lIG9mCgkJCQkJCWR5bmFzdHkuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Hb3Zlcm5tZW50IGNvbnRyb2xsZWQgYnkgYSBmZXcKCQkJCQkJcG93ZXJmdWwgZmFtaWxpZXMuIENmLiA8YmlibCBkZWZhdWx0PSJOTyIgbj0iVGh1Yy4gMy42Mi40IiB2YWxpZD0ieWVzIj5UaHVjLiAzLjYyLjQ8L2JpYmw+LCB3aGVyZSB0aGUKCQkJCQkJVGhlYmFucyBzYXksIOKAmEluIHRob3NlIGRheXMgb3VyIHN0YXRlIHdhcyBub3QgZ292ZXJuZWQgYnkgYW4KCQkJCQkJb2xpZ2FyY2h5IHRoYXQgZ3JhbnRlZCBlcXVhbCBqdXN0aWNlIHRvIGFsbCwgbm9yIHlldCBieSBhIGRlbW9jcmFjeTsgdGhlCgkJCQkJCXBvd2VyIHdhcyBpbiB0aGUgaGFuZHMgb2YgYSBzbWFsbCBjYWJhbCDvvIggPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs60z4XOvc6xz4PPhM614b23zrEg4b2AzrvhvbfOs8+Jzr0g4byAzr3OtM+B4b+2zr08L2ZvcmVpZ24+77yJLCB0aGFuIHdoaWNoIG5vdGhpbmcgaXMKCQkJCQkJbW9yZSBvcHBvc2VkIHRvIGxhdyBvciB0byB0cnVlIHBvbGl0aWNhbCBvcmRlciwgb3IgbW9yZSBuZWFybHkgcmVzZW1ibGVzIGEKCQkJCQkJdHlyYW5ueeKAmSDvvIhKb3dldHTvvIkuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U28KCQkJCQltYW55IHRoZXJlZm9yZSBhcmUgdGhlIGtpbmRzIG9mIG9saWdhcmNoeSBhbmQgb2YgZGVtb2NyYWN5OyBidXQgaXQgbXVzdCBub3QKCQkJCQllc2NhcGUgbm90aWNlIHRoYXQgaW4gbWFueSBwbGFjZXMgaXQgaGFzIGNvbWUgYWJvdXQgdGhhdCBhbHRob3VnaCB0aGUKCQkJCQljb25zdGl0dXRpb24gYXMgZnJhbWVkIGJ5IHRoZSBsYXdzIGlzIG5vdCBkZW1vY3JhdGljLCB5ZXQgb3dpbmcgdG8gY3VzdG9tIGFuZAoJCQkJCXRoZSBzb2NpYWwgc3lzdGVtIGl0IGlzIGRlbW9jcmF0aWNhbGx5IGFkbWluaXN0ZXJlZCwgYW5kIHNpbWlsYXJseSBieSBhIHJldmVyc2UKCQkJCQlwcm9jZXNzIGluIG90aGVyIHN0YXRlcyBhbHRob3VnaCB0aGUgbGVnYWwgY29uc3RpdHV0aW9uIGlzIG1vcmUgZGVtb2NyYXRpYywgeWV0CgkJCQkJYnkgbWVhbnMgb2YgdGhlIHNvY2lhbCBzeXN0ZW0gYW5kIGN1c3RvbXMgaXQgaXMgY2FycmllZCBvbiByYXRoZXIgYXMgYW4KCQkJCQlvbGlnYXJjaHkuIFRoaXMgb2NjdXJzIGNoaWVmbHkgYWZ0ZXIgYWx0ZXJhdGlvbnMgb2YgdGhlIGNvbnN0aXR1dGlvbnMgaGF2ZSB0YWtlbgoJCQkJCXBsYWNlOyBmb3IgdGhlIHBlb3BsZSBkbyBub3QgY2hhbmdlIG92ZXIgdG8gdGhlIG5ldyBzeXN0ZW0gaW1tZWRpYXRlbHkgYnV0IGFyZQoJCQkJCWNvbnRlbnQgYXQgdGhlIGZpcnN0IHN0YWdlcyB0byBnYWluIHNtYWxsIGFkdmFudGFnZXMgZnJvbSB0aGUgb3RoZXIKCQkJCQkJcGFydHksPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5zbyB0aGF0IHRoZSBwcmV2aW91c2x5CgkJCQkJZXhpc3RpbmcgbGF3cyBjb250aW51ZSBhbHRob3VnaCBwb3dlciBpcyBpbiB0aGUgaGFuZHMgb2YgdGhlIHBhcnR5IHRoYXQgaXMKCQkJCQljaGFuZ2luZyB0aGUgY29uc3RpdHV0aW9uLjxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHRoYXQgdGhlc2UgdmFyaW91cyBraW5kcyBvZiBkZW1vY3JhY3kgYW5kIG9saWdhcmNoeQoJCQkJCWV4aXN0IGlzIG1hbmlmZXN0IGZyb20gdGhlIGFjdHVhbCB0aGluZ3MgdGhhdCBoYXZlIGJlZW4gc2FpZC4gRm9yIG5lY2Vzc2FyaWx5CgkJCQkJZWl0aGVyIGFsbCB0aGUgcGFydHMgb2YgdGhlIHBvcHVsYXRpb24gdGhhdCBoYXZlIGJlZW4gbWVudGlvbmVkIG11c3QgaGF2ZSBhCgkJCQkJc2hhcmUgaW4gdGhlIGdvdmVybm1lbnQsIG9yIHNvbWUgYW5kIG5vdCBvdGhlcnMuIFdoZW4gdGhlcmVmb3JlIHRoZSBmYXJtZXIgY2xhc3MKCQkJCQlhbmQgdGhlIGNsYXNzIHBvc3Nlc3NlZCBvZiBtb2RlcmF0ZSBwcm9wZXJ0eSBpcyBzb3ZlcmVpZ24gb3ZlciB0aGUgZ292ZXJubWVudCwKCQkJCQl0aGV5IGdvdmVybiBhY2NvcmRpbmcgdG8gbGF3czsgZm9yIHRoZXkgaGF2ZSBhIGxpdmVsaWhvb2QgaWYgdGhleSB3b3JrLCBidXQgYXJlCgkJCQkJbm90IGFibGUgdG8gYmUgYXQgbGVpc3VyZSwgc28gdGhhdCB0aGV5IHB1dCB0aGUgbGF3IGluIGNvbnRyb2wgYW5kIGhvbGQgdGhlCgkJCQkJbWluaW11bSBvZiBhc3NlbWJsaWVzIG5lY2Vzc2FyeTsgYW5kIHRoZSBvdGhlciBwZXJzb25zIGhhdmUgdGhlIHJpZ2h0IHRvIHRha2UKCQkJCQlwYXJ0IHdoZW4gdGhleSBoYXZlIGFjcXVpcmVkIHRoZSBwcm9wZXJ0eS1hc3Nlc3NtZW50IGZpeGVkIGJ5IHRoZSBsYXdzLCBzbyB0aGF0CgkJCQkJdG8gdGFrZSBwYXJ0IGluIHRoZSBnb3Zlcm5tZW50IGlzIG9wZW4gdG8gYWxsIHdobyBoYXZlIGdvdCB0aGF0IGFtb3VudCBvZgoJCQkJCXByb3BlcnR5OyBzaW5jZSBmb3IgaXQgbm90IHRvIGJlIG9wZW4gdG8gZXZlcnlib2R5IG9uIGFueSB0ZXJtcyBhdCBhbGwgaXMgYQoJCQkJCWNoYXJhY3RlcmlzdGljIG9mIG9saWdhcmNoeSwgYnV0IHRoZW4gb24gdGhlIG90aGVyIGhhbmQgaXQgaXMgaW1wb3NzaWJsZSBmb3IgaXQKCQkJCQl0byBiZSBvcGVuIHRvIHRoZW0gdG8gaGF2ZSBsZWlzdXJlIGlmIHRoZXJlIGFyZSBubyByZXZlbnVlcy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gcmV2ZW51ZXMgZnJvbSBhYnJvYWQ7IHRoZSBwb29yIGNhbiBvbmx5IGF0dGVuZCBvZnRlbiBpZgoJCQkJCQlwYWlkIGZvciBhdHRlbmRhbmNlLCBhbmQgdGhpcyBjYW4gb25seSBiZSBmaW5hbmNlZCBpZiB0aGUgc3RhdGUgaGFzIGluY29tZQoJCQkJCQlmcm9tIHRyaWJ1dGUgb3IgZm9yZWlnbiBwcm9wZXJ0eS48L25vdGU+IFRoaXMgdGhlbiBpcyBvbmUga2luZCBvZiBkZW1vY3JhY3kKCQkJCQlmb3IgdGhlc2UgcmVhc29ucy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5vdGhlciBraW5kIGlzCgkJCQkJZHVlIHRvIHRoZSBkaXN0aW5jdGlvbiB0aGF0IGNvbWVzIG5leHQ6IGl0IGlzIHBvc3NpYmxlIHRoYXQgYWxsIHRoZSBjaXRpemVucyBub3QKCQkJCQlsaWFibGUgdG8gb2JqZWN0aW9uIG9uIHRoZSBzY29yZSBvZiBiaXJ0aCBtYXkgaGF2ZSB0aGUgcmlnaHQgdG8gdGFrZSBwYXJ0IGluIHRoZQoJCQkJCWFzc2VtYmx5LCBidXQgbWF5IGFjdHVhbGx5IHRha2UgcGFydCBvbmx5IHdoZW4gdGhleSBhcmUgYWJsZSB0byBiZSBhdCBsZWlzdXJlOwoJCQkJCWhlbmNlIGluIGEgZGVtb2NyYWN5IG9mIHRoaXMgbmF0dXJlIHRoZSBsYXdzIGdvdmVybiBiZWNhdXNlIHRoZXJlIGlzIG5vIHJldmVudWUuCgkJCQkJQSB0aGlyZCBraW5kIGlzIHdoZW4gYWxsIHRob3NlIHdobyBhcmUgZnJlZSBtZW4gaGF2ZSB0aGUgcmlnaHQgdG8gdGFrZSBwYXJ0IGluCgkJCQkJdGhlIGdvdmVybm1lbnQgeWV0IGRvIG5vdCBkbyBzbyBiZWNhdXNlIG9mIHRoZSBhZm9yZXNhaWQgcmVhc29uLCBzbyB0aGF0IGl0CgkJCQkJZm9sbG93cyB0aGF0IGluIHRoaXMgZm9ybSBvZiBkZW1vY3JhY3kgYWxzbyB0aGUgbGF3IGdvdmVybnMuIDxtaWxlc3RvbmUgbj0iMTI5M2EiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhIGZvdXJ0aCBraW5kIG9mIGRlbW9jcmFjeQoJCQkJCWlzIHRoZSBvbmUgdGhhdCBoYXMgYmVlbiB0aGUgbGFzdCBpbiBwb2ludCBvZiB0aW1lIHRvIGNvbWUgaW50byBleGlzdGVuY2UgaW4gdGhlCgkJCQkJc3RhdGVzLiBCZWNhdXNlIHRoZSBzdGF0ZXMgaGF2ZSBiZWNvbWUgbXVjaCBncmVhdGVyIHRoYW4gdGhlIG9yaWdpbmFsIG9uZXMgYW5kCgkJCQkJcG9zc2VzcyBsYXJnZSBzdXBwbGllcyBvZiByZXZlbnVlLCB3aGlsZSBhbGwgdGhlIGNpdGl6ZW5zIGhhdmUgYSBzaGFyZSBpbiB0aGUKCQkJCQlnb3Zlcm5tZW50IGJlY2F1c2Ugb2YgdGhlIHN1cGVyaW9yaXR5PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4KCQkJCQkJMTI4OGEgMjAgZmYuPC9ub3RlPiBvZiB0aGUgbXVsdGl0dWRlLCBhbGwgYWN0dWFsbHkgdGFrZSBwYXJ0IGluIGl0IGFuZAoJCQkJCWV4ZXJjaXNlIHRoZWlyIGNpdGl6ZW5zaGlwIGJlY2F1c2UgZXZlbiB0aGUgcG9vciBhcmUgZW5hYmxlZCB0byBiZSBhdCBsZWlzdXJlIGJ5CgkJCQkJcmVjZWl2aW5nIHBheS4gSW5kZWVkIHRoZSBtdWx0aXR1ZGUgaW4gdGhpcyBraW5kIG9mIHN0YXRlIGhhcyBhIHZlcnkgZ3JlYXQgZGVhbAoJCQkJCW9mIGxlaXN1cmUsIGZvciB0aGV5IGFyZSBub3QgaGFtcGVyZWQgYXQgYWxsIGJ5IHRoZSBjYXJlIG9mIHRoZWlyIHByaXZhdGUKCQkJCQlhZmZhaXJzLCBidXQgdGhlIHJpY2ggYXJlLCBzbyB0aGF0IG9mdGVuIHRoZXkgdGFrZSBubyBwYXJ0IGluIHRoZSBhc3NlbWJseSBub3IKCQkJCQlpbiBqdWRnaW5nIGxhd3N1aXRzLiBPd2luZyB0byB0aGlzIHRoZSBtdWx0aXR1ZGUgb2YgdGhlIHBvb3IgYmVjb21lcyBzb3ZlcmVpZ24KCQkJCQlvdmVyIHRoZSBnb3Zlcm5tZW50LCBpbnN0ZWFkIG9mIHRoZSBsYXdzLiBTdWNoIGluIG51bWJlciBhbmQgaW4gbmF0dXJlIGFyZSB0aGUKCQkJCQlraW5kcyBvZiBkZW1vY3JhY3kgdGhhdCB0aGVzZSBjYXVzZXMgbmVjZXNzYXJpbHkgYnJpbmcgaW50byBleGlzdGVuY2UuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRvIHR1cm4gdG8gdGhlIHZhcmlldGllcyBhbmQgb2YKCQkJCQlvbGlnYXJjaHksIHdoZW4gbW9yZSBtZW4gcG9zc2VzcyBwcm9wZXJ0eSwgYnV0IGxlc3Mgb2YgaXQgYW5kIG5vdCBhIHZlcnkgbGFyZ2UKCQkJCQlhbW91bnQsIHRoaXMgaXMgdGhlIGZpcnN0IGZvcm0gb2Ygb2xpZ2FyY2h5OyBmb3IgdGhleSBhbGxvdyB0aGUgbWFuIHRoYXQKCQkJCQlhY3F1aXJlcyBwcm9wZXJ0eSB0aGUgcmlnaHQgdG8gcGFydGljaXBhdGUsIGFuZCBiZWNhdXNlIHRoZXJlIGlzIGEgbGFyZ2UgbnVtYmVyCgkJCQkJb2YgcGVyc29ucyBwYXJ0aWNpcGF0aW5nIGluIHRoZSBnb3Zlcm5tZW50IGl0IG5lY2Vzc2FyaWx5IGZvbGxvd3MgdGhhdCBub3QgdGhlCgkJCQkJbWVuIGJ1dCB0aGUgbGF3IGlzIHNvdmVyZWlnbiDvvIhmb3IgdGhlIGZhcnRoZXIgcmVtb3ZlZCB0aGV5IGFyZSBmcm9tCgkJCQkJbW9uYXJjaHksIGFuZCBhcyB0aGV5IGhhdmUgbm90IHNvIG11Y2ggcHJvcGVydHkgYXMgdG8gYmUgaWRsZSBhbmQgbmVnbGVjdCBpdCwKCQkJCQlub3IgeWV0IHNvIGxpdHRsZSBhcyB0byBiZSBrZXB0IGF0IHRoZSBleHBlbnNlIG9mIHRoZSBzdGF0ZSw8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRoZXkgYXJlIGNvbXBlbGxlZCB0byBjYWxsIHVwb24gdGhlIGxhdyB0byBydWxlCgkJCQkJaW5zdGVhZCBvZiBydWxpbmcgdGhlbXNlbHZlc++8iS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS43IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZW4gaWYgdGhlIG93bmVycyBvZiB0aGUgcHJvcGVydGllcyBhcmUgZmV3ZXIgdGhhbgoJCQkJCXRob3NlIHdobyBvd25lZCB0aGVtIHByZXZpb3VzbHksIGFuZCBvd24gbW9yZSwgdGhlIHNlY29uZCBmb3JtIG9mIG9saWdhcmNoeQoJCQkJCWNvbWVzIGludG8gYmVpbmc7IGZvciBhcyB0aGV5IGJlY29tZSBzdHJvbmdlciB0aGV5IGNsYWltIHRvIGhhdmUgYSBsYXJnZXIgc2hhcmUsCgkJCQkJYW5kIHRoZXJlZm9yZSB0aGV5IHRoZW1zZWx2ZXMgc2VsZWN0IHRob3NlIGZyb20gYW1vbmcgdGhlIHJlc3Qgb2YgdGhlIGNpdGl6ZW5zCgkJCQkJd2hvIGdvIGludG8gdGhlIGdvdmVybm1lbnQsIGJ1dCBhcyB0aGV5IGFyZSBub3QgeWV0IHN0cm9uZyBlbm91Z2ggdG8gcnVsZQoJCQkJCXdpdGhvdXQgbGF3IHRoZXkgbWFrZSB0aGUgbGF3IGNvbmZvcm0gd2l0aCB0aGlzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGV5IGxlZ2FsaXplIHRoZSByZWNydWl0aW5nIG9mIHRoZSBydWxpbmcgY2xhc3MgYnkKCQkJCQkJY28tb3B0YXRpb247IG9yIHRoZSB3b3JkcyBtYXkgbWVhbiDigJh0aGV5IG1ha2UgdGhlIGxhdwoJCQkJCQlydWxlci7igJk8L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS44IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGlmIHRoZXkgY2FycnkgbWF0dGVycyBmdXJ0aGVyIGJ5CgkJCQkJYmVjb21pbmcgZmV3ZXIgYW5kIGhvbGRpbmcgbGFyZ2VyIHByb3BlcnRpZXMsIHRoZXJlIGNvbWVzIGFib3V0IHRoZSB0aGlyZAoJCQkJCWFkdmFuY2UgaW4gb2xpZ2FyY2h5LCB3aGljaCBjb25zaXN0cyBpbiB0aGVpciBrZWVwaW5nIHRoZSBvZmZpY2VzIGluIHRoZWlyIG93bgoJCQkJCWhhbmRzLCBidXQgdW5kZXIgYSBsYXcgZW5hY3RpbmcgdGhhdCB0aGV5IGFyZSB0byBiZSBoZXJlZGl0YXJ5LiBBbmQgd2hlbiBmaW5hbGx5CgkJCQkJdGhleSBhdHRhaW4gdmVyeSBncmVhdCBwcmUtZW1pbmVuY2UgYnkgdGhlaXIgd2VhbHRoIGFuZCB0aGVpciBtdWx0aXR1ZGUgb2YKCQkJCQlmcmllbmRzLCBhIGR5bmFzdHkgb2YgdGhpcyBuYXR1cmUgaXMgbmVhciB0byBtb25hcmNoeSwgYW5kIG1lbiBiZWNvbWUgc3VwcmVtZQoJCQkJCWluc3RlYWQgb2YgdGhlIGxhdzsgYW5kIHRoaXMgaXMgdGhlIGZvdXJ0aCBraW5kIG9mIG9saWdhcmNoeSwgdGhlIGNvdW50ZXJwYXJ0IG9mCgkJCQkJdGhlIGxhc3Qga2luZCBvZiBkZW1vY3JhY3kuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS45IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5GdXJ0aGVybW9yZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+V2Ugbm93IHBhc3MgZnJvbSB0aGUgdmFyaWV0aWVzIG9mIE9saWdhcmNoeSBhbmQgb2YgRGVtb2NyYWN5CgkJCQkJCXRvIHRob3NlIG9mIHRoZSBvdGhlciBhY3R1YWxseSBleGlzdGluZyBjb25zdGl0dXRpb25zLCBBcmlzdG9jcmFjeSBzby1jYWxsZWQKCQkJCQkJYW5kIENvbnN0aXR1dGlvbmFsIEdvdmVybm1lbnQuPC9ub3RlPiB0aGVyZSBhcmUgdHdvIGNvbnN0aXR1dGlvbnMgYnkgdGhlCgkJCQkJc2lkZSBvZiBkZW1vY3JhY3kgYW5kIG9saWdhcmNoeSwgb25lPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuCgkJCQkJCWFyaXN0b2NyYWN5Ljwvbm90ZT4gb2Ygd2hpY2ggaXMgY291bnRlZCBieSBldmVyeWJvZHkgYW5kIGhhcyBiZWVuIHJlZmVycmVkCgkJCQkJdG8gYXMgb25lIG9mIHRoZSBmb3VyIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiDvvIhhbmQgdGhlIGZvdXIgbWVhbnQgYXJlCgkJCQkJbW9uYXJjaHksIG9saWdhcmNoeSwgZGVtb2NyYWN5IGFuZCBmb3VydGggdGhlIGZvcm0gY2FsbGVkIGFyaXN0b2NyYWN577yJLAoJCQkJCWJ1dCB0aGVyZSBpcyBhIGZpZnRoLCBlbnRpdGxlZCBieSB0aGUgY29tbW9uIG5hbWUgb2YgdGhlbSBhbGwg77yIZm9yIGl0CgkJCQkJaXMgY2FsbGVkIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnTvvIksIGJ1dCBhcyBpdCBkb2VzIG5vdCBvZnRlbiBvY2N1ciBpdAoJCQkJCWlzIG92ZXJsb29rZWQgYnkgdGhvc2Ugd2hvIHRyeSB0byBlbnVtZXJhdGUgdGhlIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiwgYW5kIHRoZXkKCQkJCQl1c2UgdGhlIGZvdXIgbmFtZXMgb25seSDvvIhhcyBkb2VzIFBsYXRv77yJIGluIHRoZSBsaXN0IG9mCgkJCQkJY29uc3RpdHV0aW9ucy4gPG1pbGVzdG9uZSBuPSIxMjkzYiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPk5vdyB0aGUgbmFtZSBvZgoJCQkJCWFyaXN0b2NyYWN5IGlzIGluZGVlZCBwcm9wZXJseSBnaXZlbiB0byB0aGUgY29uc3RpdHV0aW9uIHRoYXQgd2UgZGlzY3Vzc2VkIGluCgkJCQkJb3VyIGZpcnN0IGRpc2NvdXJzZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkJvb2sgMy4gMTI3OWEgMzUgZmYuLAoJCQkJCQkxMjg2YiAzIGZmLjwvbm90ZT4g77yIZm9yIGl0IGlzIHJpZ2h0IHRvIGFwcGx5IHRoZSBuYW1lCgkJCQkJ4oCYYXJpc3RvY3JhY3nigJnigJTigJhnb3Zlcm5tZW50IG9mIHRoZQoJCQkJCWJlc3TigJnigJRvbmx5IHRvIHRoZSBjb25zdGl0dXRpb24gb2Ygd2hpY2ggdGhlIGNpdGl6ZW5zIGFyZQoJCQkJCWJlc3QgaW4gdmlydHVlIGFic29sdXRlbHkgYW5kIG5vdCBtZXJlbHkgZ29vZCBtZW4gaW4gcmVsYXRpb24gdG8gc29tZSBhcmJpdHJhcnkKCQkJCQlzdGFuZGFyZCwgZm9yIHVuZGVyIGl0IGFsb25lIHRoZSBzYW1lIHBlcnNvbiBpcyBhIGdvb2QgbWFuIGFuZCBhIGdvb2QgY2l0aXplbgoJCQkJCWFic29sdXRlbHksIHdoZXJlYXMgdGhvc2Ugd2hvIGFyZSBnb29kIHVuZGVyIHRoZSBvdGhlciBjb25zdGl0dXRpb25zIGFyZSBnb29kCgkJCQkJcmVsYXRpdmVseSB0byB0aGVpciBvd24gZm9ybSBvZiBjb25zdGl0dXRpb27vvIk7IG5ldmVydGhlbGVzcyB0aGVyZSBhcmUKCQkJCQlhbHNvIHNvbWUgY29uc3RpdHV0aW9ucyB0aGF0IGhhdmUgZGlmZmVyZW5jZXMgYm90aCBpbiBjb21wYXJpc29uIHdpdGgKCQkJCQlvbGlnYXJjaGljYWxseSBnb3Zlcm5lZCBzdGF0ZXMgYW5kIHdpdGggd2hhdCBpcyB0ZXJtZWQgY29uc3RpdHV0aW9uYWwKCQkJCQlnb3Zlcm5tZW50LCBpbmFzbXVjaCBhcyBpbiB0aGVtIHRoZXkgZWxlY3QgdGhlIG9mZmljaWFscyBub3Qgb25seSBieSB3ZWFsdGggYnV0CgkJCQkJYWxzbyBieSBnb29kbmVzczsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPnRoaXMgZm9ybSBvZgoJCQkJCWNvbnN0aXR1dGlvbiBkaWZmZXJzIGZyb20gYm90aCBhbmQgaXMgY2FsbGVkIGFyaXN0b2NyYXRpYy4gRm9yIGV2ZW4gaW4gdGhlCgkJCQkJc3RhdGVzIHRoYXQgZG8gbm90IHBheSBhbnkgcHVibGljIGF0dGVudGlvbiB0byB2aXJ0dWUgdGhlcmUgYXJlIG5ldmVydGhlbGVzcwoJCQkJCXNvbWUgbWVuIHRoYXQgYXJlIGhlbGQgaW4gaGlnaCBlc3RlZW0gYW5kIGFyZSB0aG91Z2h0IHdvcnRoeSBvZiByZXNwZWN0LiBXaGVyZQoJCQkJCXRoZW4gdGhlIGNvbnN0aXR1dGlvbiB0YWtlcyBpbiB2aWV3IHdlYWx0aCBhbmQgdmlydHVlIGFzIHdlbGwgYXMgdGhlIGNvbW1vbgoJCQkJCXBlb3BsZSwgYXMgZm9yIGluc3RhbmNlIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ2FydGhhZ2UiIGtleT0icGVyc2V1cyxDYXJ0aGFnZSI+Q2FydGhhZ2U8L3BsYWNlTmFtZT4sIHRoaXMgaXMgb2YgdGhlIG5hdHVyZSBvZiBhbiBhcmlzdG9jcmFjeTsgYW5kIHNvIGFsc28KCQkJCQlhcmUgdGhlIHN0YXRlcywgaW4gd2hpY2ggdGhlIGNvbnN0aXR1dGlvbiwgbGlrZSB0aGF0IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIHRha2VzIGluIHZpZXcgdHdvIG9mIHRoZXNlIHRoaW5ncwoJCQkJCW9ubHksIHZpcnR1ZSBhbmQgdGhlIGNvbW1vbiBwZW9wbGUsIGFuZCB0aGVyZSBpcyBhIG1pbmdsaW5nIG9mIHRoZXNlIHR3bwoJCQkJCWZhY3RvcnMsIGRlbW9jcmFjeSBhbmQgdmlydHVlLiBUaGVzZSB0aGVuIGFyZSB0d28ga2luZHMgb2YgYXJpc3RvY3JhY3kgYmVzaWRlCgkJCQkJdGhlIGZpcnN0LCB3aGljaCBpcyB0aGUgYmVzdCBjb25zdGl0dXRpb24sPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgYSB0aGlyZCBraW5kIGlzIHRob3NlIGluc3RhbmNlcyBvZiB3aGF0IGlzIGNhbGxlZAoJCQkJCWNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQgdGhhdCBpbmNsaW5lIG1vcmUgaW4gdGhlIGRpcmVjdGlvbiBvZgoJCQkJCQlvbGlnYXJjaHkuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCByZW1haW5zIGZvciB1cyB0byBzcGVhayBhYm91dCB3aGF0IGlzIHRlcm1lZCBjb25zdGl0dXRpb25hbAoJCQkJCWdvdmVybm1lbnQgYW5kIGFsc28gYWJvdXQgdHlyYW5ueS4gVGhvdWdoIG5laXRoZXIgdGhlIGZvcm1lciBub3IgdGhlCgkJCQkJYXJpc3RvY3JhY2llcyBzcG9rZW4gb2YganVzdCBub3cgYXJlIHJlYWxseSBkZXZpYXRpb25zLCB3ZSBoYXZlIGNsYXNzZWQgdGhlbQoJCQkJCXRodXMgYmVjYXVzZSBpbiBhY3R1YWwgdHJ1dGggdGhleSBoYXZlIGFsbCBmYWxsZW4gYXdheSBmcm9tIHRoZSBtb3N0IGNvcnJlY3QKCQkJCQljb25zdGl0dXRpb24sIGFuZCBjb25zZXF1ZW50bHkgYXJlIGNvdW50ZWQgd2l0aCB0aGUgZGV2aWF0aW9uLWZvcm1zLCBhbmQgdGhvc2UKCQkJCQlhcmUgZGV2aWF0aW9ucyBmcm9tIHRoZW0sIGFzIHdlIHNhaWQgaW4gb3VyIHJlbWFya3MgYXQgdGhlIGJlZ2lubmluZy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMjc5YiA0IGZmLiBBY3R1YWwgYXJpc3RvY3JhY2llcyBhcmUgYQoJCQkJCQlmYWxsaW5nLW9mZiBmcm9tIHRoZSBBcmlzdG9jcmFjeSBhbmQgUG9saXR5IGlzIGEgZGVjbGluZSBmcm9tIE1vbmFyY2h5IGFuZAoJCQkJCQlBcmlzdG9jcmFjeTsgYnV0IHRoZXkgYXJlIG5vdCBkZXZpYXRpb25zIGluIHRoZSB0ZWNobmljYWwgc2Vuc2UuPC9ub3RlPgoJCQkJCVR5cmFubnkgaXMgcmVhc29uYWJseSBtZW50aW9uZWQgbGFzdCBiZWNhdXNlIGl0IGlzIHRoZSBsZWFzdCBjb25zdGl0dXRpb25hbCBvZgoJCQkJCWFsbCBnb3Zlcm5tZW50cywgd2hlcmVhcyBvdXIgaW52ZXN0aWdhdGlvbiBpcyBhYm91dCBjb25zdGl0dXRpb25hbAoJCQkJCQlnb3Zlcm5tZW50LjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGF2aW5nIHRoZW4gc3RhdGVkIHRoZSByZWFzb24gZm9yCgkJCQkJdGhpcyBtb2RlIG9mIGNsYXNzaWZpY2F0aW9uLCB3ZSBoYXZlIG5vdyB0byBzZXQgZm9ydGggb3VyIHZpZXcgYWJvdXQKCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI2LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Gb3IgaXRzCgkJCQkJbWVhbmluZyBpcyBjbGVhcmVyIG5vdyB0aGF0IHRoZSBjaGFyYWN0ZXJpc3RpY3Mgb2Ygb2xpZ2FyY2h5IGFuZCBkZW1vY3JhY3kgaGF2ZQoJCQkJCWJlZW4gZGVmaW5lZDsgc2luY2UgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCBpcywgdG8gcHV0IGl0IHNpbXBseSwgYSBtaXh0dXJlIG9mCgkJCQkJb2xpZ2FyY2h5IGFuZCBkZW1vY3JhY3kuIEJ1dCBwZW9wbGUgY3VzdG9tYXJpbHkgZ2l2ZSB0aGUgbmFtZSBvZiBjb25zdGl0dXRpb25hbAoJCQkJCWdvdmVybm1lbnQgb25seSB0byB0aG9zZSBhbW9uZyBzdWNoIG1peGVkIGNvbnN0aXR1dGlvbnMgdGhhdCBpbmNsaW5lIHRvd2FyZHMKCQkJCQlkZW1vY3JhY3ksIGFuZCBlbnRpdGxlIHRob3NlIHRoYXQgaW5jbGluZSBtb3JlIHRvd2FyZHMgb2xpZ2FyY2h5IGFyaXN0b2NyYWNpZXMsCgkJCQkJYmVjYXVzZSBlZHVjYXRpb24gYW5kIGdvb2QgYmlydGggZ28gbW9yZSB3aXRoIHRoZSB3ZWFsdGhpZXIgY2xhc3NlcywgYW5kIGFsc28KCQkJCQl0aGUgd2VhbHRoeSBhcmUgdGhvdWdodCB0byBoYXZlIGFscmVhZHkgdGhlIHRoaW5ncyB0byBnZXQgd2hpY2ggd3Jvbmdkb2VycwoJCQkJCWNvbW1pdCB3cm9uZzsgb3dpbmcgdG8gd2hpY2ggcGVvcGxlIGFwcGx5IHRoZSB0ZXJtcyDigJhnZW50cnnigJkKCQkJCQlhbmQg4oCYbm90YWJpbGl0aWVz4oCZIHRvIHRoZSByaWNoLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI2LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5TaW5jZSB0aGVyZWZvcmUgYXJpc3RvY3JhY3kgbWVhbnMgdGhlIGFzc2lnbm1lbnQgb2YgdGhlCgkJCQkJaGlnaGVzdCBwbGFjZSB0byB0aGUgYmVzdCBvZiB0aGUgY2l0aXplbnMsIG9saWdhcmNoaWVzIGFsc28gYXJlIHNhaWQgdG8gYmUgZHJhd24KCQkJCQlyYXRoZXIgZnJvbSB0aGUgZ2VudHJ5LiA8bWlsZXN0b25lIG49IjEyOTRhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5BbmQgaXQgc2VlbXMgYW4gaW1wb3NzaWJpbGl0eSBmb3IgYSBjaXR5IGdvdmVybmVkCgkJCQkJbm90IGJ5IHRoZSBhcmlzdG9jcmFjeSBidXQgYnkgdGhlIGJhc2UgdG8gaGF2ZSB3ZWxsLW9yZGVyZWQgZ292ZXJubWVudCwgYW5kCgkJCQkJc2ltaWxhcmx5IGFsc28gZm9yIGEgY2l0eSB0aGF0IGhhcyBub3QgYSB3ZWxsLW9yZGVyZWQgZ292ZXJubWVudCB0byBiZSBnb3Zlcm5lZAoJCQkJCWFyaXN0b2NyYXRpY2FsbHkuIEJ1dCB0byBoYXZlIGdvb2QgbGF3cyBlbmFjdGVkIGJ1dCBub3Qgb2JleSB0aGVtIGRvZXMgbm90CgkJCQkJY29uc3RpdHV0ZSB3ZWxsLW9yZGVyZWQgZ292ZXJubWVudC4gSGVuY2Ugb25lIGZvcm0gb2YgZ29vZCBnb3Zlcm5tZW50IG11c3QgYmUKCQkJCQl1bmRlcnN0b29kIHRvIGNvbnNpc3QgaW4gdGhlIGxhd3MgZW5hY3RlZCBiZWluZyBvYmV5ZWQsIGFuZCBhbm90aGVyIGZvcm0gaW4gdGhlCgkJCQkJbGF3cyB3aGljaCB0aGUgY2l0aXplbnMga2VlcCBiZWluZyB3ZWxsIGVuYWN0ZWQg77yIZm9yIGl0IGlzIHBvc3NpYmxlIHRvCgkJCQkJb2JleSBiYWRseSBlbmFjdGVkIGxhd3PvvIkuIEFuZCBmb3IgbGF3cyB0byBiZSB3ZWxsIGVuYWN0ZWQgaXMgcG9zc2libGUKCQkJCQlpbiB0d28gd2F5czogdGhleSBtdXN0IGVpdGhlciBiZSB0aGUgYmVzdCBsYXdzIHBvc3NpYmxlIGZvciB0aGUgZ2l2ZW4gcGVvcGxlIG9yCgkJCQkJdGhlIGJlc3QgYWJzb2x1dGVseS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNi40IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGFyaXN0b2NyYWN5CgkJCQkJaW4gdGhlIGZ1bGxlc3Qgc2Vuc2Ugc2VlbXMgdG8gY29uc2lzdCBpbiB0aGUgZGlzdHJpYnV0aW9uIG9mIHRoZSBob25vcnMKCQkJCQlhY2NvcmRpbmcgdG8gdmlydHVlOyBmb3IgdmlydHVlIGlzIHRoZSBkZWZpbmluZyBmYWN0b3Igb2YgYXJpc3RvY3JhY3ksIGFzIHdlYWx0aAoJCQkJCWlzIG9mIG9saWdhcmNoeSwgYW5kIGZyZWVkb20gb2YgZGVtb2NyYWN5IO+8iHdoaWxlIHRoZSBwcmluY2lwbGUgdGhhdCBhCgkJCQkJZGVjaXNpb24gb2YgdGhlIG1ham9yaXR5IGlzIHN1cHJlbWUgaXMgZm91bmQgaW4gdGhlbSBhbGw6IGZvciBpbiBib3RoIG9saWdhcmNoeQoJCQkJCWFuZCBhcmlzdG9jcmFjeSBhbmQgZGVtb2NyYWNpZXMgd2hhdGV2ZXIgdGhlIGxhcmdlciBwYXJ0IG9mIHRob3NlIHdobyBoYXZlIGEKCQkJCQlzaGFyZSBpbiB0aGUgZ292ZXJubWVudCBkZWNpZGVzIGlzIHN1cHJlbWXvvIkuIEluIG1vc3Qgc3RhdGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGluIG1vc3Qgc3RhdGVzIHRoYXQgYXJlIGNvbnNpZGVyZWQKCQkJCQkJYXJpc3RvY3JhY2llcy48L25vdGU+IHRoZW4gdGhlIG5hbWUgb2YgYXJpc3RvY3JhY3kgaXMgZ2l2ZW4gdG8gdGhhdCBmb3JtIG9mCgkJCQkJY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIG1vcmUKCQkJCQkJb2xpZ2FyY2hpY2FsIGZvcm0sIDEyOTNiIDM2Ljwvbm90ZT4gZm9yIHRoZSBjb21iaW5hdGlvbiBhaW1zIG9ubHkgYXQgdGhlCgkJCQkJd2VsbC1vZmYgYW5kIHRoZSBwb29yLCB3ZWFsdGggYW5kIGZyZWVkb20g77yIc2luY2UgaW4gYWxtb3N0IHRoZSBsYXJnZXN0CgkJCQkJbnVtYmVyIG9mIHN0YXRlcyB0aGUgcmljaCBzZWVtIHRvIG9jY3VweSB0aGUgcGxhY2Ugb2YgdGhlIGdlbnRyee+8iTsKCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iNi41IiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IGFzIHRoZXJlIGFyZSB0aHJlZSB0aGluZ3MKCQkJCQl0aGF0IGNsYWltIGVxdWFsIHBhcnRpY2lwYXRpb248bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmluIHRoZQoJCQkJCWNvbnN0aXR1dGlvbiwgZnJlZWRvbSwgd2VhbHRoIGFuZCB2aXJ0dWUg77yIZm9yIHRoZSBmb3VydGgsIHdoYXQgaXMKCQkJCQljYWxsZWQgbm9iaWxpdHksIGFjY29tcGFuaWVzIHRoZSB0d28gbGF0dGVy4oCUbm9iaWxpdHkgbWVhbnMgYW5jaWVudAoJCQkJCXdlYWx0aCBhbmQgdmlydHVl77yJLCBpdCBpcyBtYW5pZmVzdCB0aGF0IHRoZSBtaXh0dXJlIG9mIHRoZSB0d28gZmFjdG9ycywKCQkJCQl0aGUgcmljaCBhbmQgdGhlIHBvb3IsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Mb29zZWx5IHB1dCBmb3IKCQkJCQkJ4oCYd2VhbHRoIGFuZCBmcmVlIGJpcnRoLuKAmTwvbm90ZT4gb3VnaHQgdG8gYmUgdGVybWVkCgkJCQkJY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCwgd2hpbGUgdGhlIG1peHR1cmUgb2YgdGhlIHRocmVlIGZhY3RvcnMgZGVzZXJ2ZXMgdGhlCgkJCQkJbmFtZSBvZiBhcmlzdG9jcmFjeSBtb3N0IG9mIGFsbCB0aGUgdmFyaW91cyBmb3JtcyBvZiBhcmlzdG9jcmFjeSBiZXNpZGUgdGhlIHRydWUKCQkJCQlhbmQgYmVzdCBmb3JtLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgaGFzIHRoZW4gYmVlbiBzdGF0ZWQgdGhhdCBvdGhlcgoJCQkJCWZvcm1zIG9mIGNvbnN0aXR1dGlvbiBhbHNvIGV4aXN0IGJlc2lkZXMgbW9uYXJjaHksIGRlbW9jcmFjeSBhbmQgb2xpZ2FyY2h5LCBhbmQKCQkJCQl3aGF0IHRoZWlyIGNoYXJhY3RlcmlzdGljcyBhcmUsIGFuZCBob3cgdGhlIHZhcmlvdXMgc29ydHMgb2YgYXJpc3RvY3JhY3kgYW5kIG9mCgkJCQkJY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCBkaWZmZXIgZnJvbSBvbmUgYW5vdGhlcjsgYW5kIGl0IGlzIG1hbmlmZXN0IHRoYXQKCQkJCQlhcmlzdG9jcmFjeSBhbmQgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCBhcmUgbm90IHdpZGVseSBhcGFydCBmcm9tIG9uZQoJCQkJCQlhbm90aGVyLjxtaWxlc3RvbmUgZWQ9IlAiIG49IjcuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TmV4dCB0byB3aGF0IGhhcyBiZWVuIHNhaWQgbGV0IHVzIHN0YXRlIHRoZSB3YXkgaW4gd2hpY2ggd2hhdAoJCQkJCWlzIGNhbGxlZCBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50IGNvbWVzIGludG8gZXhpc3RlbmNlIGJ5IHRoZSBzaWRlIG9mCgkJCQkJZGVtb2NyYWN5IGFuZCBvbGlnYXJjaHksIGFuZCBob3cgaXQgaXMgcHJvcGVyIHRvIGVzdGFibGlzaCBpdC4gQXQgdGhlIHNhbWUgdGltZQoJCQkJCXRoZSBkZWZpbmluZyBjaGFyYWN0ZXJpc3RpY3Mgb2YgZGVtb2NyYWN5IGFuZCBvbGlnYXJjaHkgd2lsbCBhbHNvIGJlIGNsZWFyOyBmb3IKCQkJCQl3ZSBtdXN0IGdyYXNwIHRoZSBkaXN0aW5jdGlvbiBiZXR3ZWVuIHRoZXNlIGFuZCB0aGVuIG1ha2UgYSBjb21iaW5hdGlvbiBvdXQgb2YKCQkJCQl0aGVtLCB0YWtpbmcsIHNvIHRvIHNheSwgYSBjb250cmlidXRpb24gZnJvbSBlYWNoLiBBbmQgdGhlcmUgYXJlIHRocmVlCgkJCQkJcHJpbmNpcGxlcyBkZXRlcm1pbmluZyB0aGlzIGNvbWJpbmF0aW9uIG9yIG1peHR1cmUuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjcuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlVuZGVyIG9uZSBwbGFuIHdlIG11c3QgYWRvcHQgYm90aCBmZWF0dXJlcyBmcm9tIHRoZQoJCQkJCWxlZ2lzbGF0aXZlIHNjaGVtZXMgb2YgdGhlIHR3byBkaWZmZXJlbnQgY29uc3RpdHV0aW9uczogZm9yIGV4YW1wbGUsIGluIHJlZ2FyZAoJCQkJCXRvIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiBqdXN0aWNlLCBpbiBvbGlnYXJjaGllcyB0aGV5IGluc3RpdHV0ZSBhIGZpbmUgZm9yIHRoZQoJCQkJCXJpY2ggaWYgdGhleSBkbyBub3Qgc2VydmUgb24ganVyaWVzIGJ1dCBubyBwYXkgZm9yIHRoZSBwb29yIGZvciBzZXJ2aW5nLCB3aGlsZQoJCQkJCWluIGRlbW9jcmFjaWVzIHRoZXkgYXNzaWduIHBheSBmb3IgdGhlIHBvb3IgYnV0IG5vIGZpbmUgZm9yIHRoZSByaWNoLCBidXQgYQoJCQkJCWNvbW1vbiBhbmQgaW50ZXJtZWRpYXRlIHByaW5jaXBsZSBpcyB0byBoYXZlIGJvdGggcGF5bWVudCBhbmQgZmluZSwgYW5kCgkJCQkJdGhlcmVmb3JlIHRoaXMgaXMgYSBtYXJrIG9mIGEgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCwgc2luY2UgaXQgaXMgYSBtaXh0dXJlCgkJCQkJb2YgZWxlbWVudHMgZnJvbSBib3RoIG9saWdhcmNoeSBhbmQgZGVtb2NyYWN5LiA8bWlsZXN0b25lIG49IjEyOTRiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGVkPSJQIiBuPSI3LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGlzIHRoZW4gaXMgb25lIG1vZGUgb2YgY29tYmluaW5nIHRoZSB0d28uIEFub3RoZXIKCQkJCQlpcyB0byB0YWtlIHRoZSBtaWRkbGUgY291cnNlIGJldHdlZW4gdGhlIHJlZ3VsYXRpb25zIG9mIGVhY2g6IGZvciBleGFtcGxlLAoJCQkJCWRlbW9jcmFjaWVzIHBlcm1pdCBtZW1iZXJzaGlwIG9mIHRoZSBhc3NlbWJseSBvbiBubyBwcm9wZXJ0eS1xdWFsaWZpY2F0aW9uIGF0CgkJCQkJYWxsIG9yIGEgcXVpdGUgc21hbGwgb25lLCBvbGlnYXJjaGllcyBvbiBhIGxhcmdlIHByb3BlcnR5LXF1YWxpZmljYXRpb24sIGJ1dCB0aGUKCQkJCQljb21iaW5hdGlvbiBjbGVhcmx5IGlzIHRvIGhhdmUgbmVpdGhlciBwcmluY2lwbGUsIGJ1dCBvbmUgd2hpY2ggbGllcyBpbiB0aGUKCQkJCQltaWRkbGUgYmV0d2VlbiBlaXRoZXIgb2YgdGhlc2UgdHdvIHF1YWxpZmljYXRpb25zLiBJbiB0aGUgdGhpcmQgcGxhY2UgaXMgYQoJCQkJCWNvbWJpbmF0aW9uIG9mIHRoZSB0d28gc3lzdGVtcywgdGFraW5nIHNvbWUgZmVhdHVyZXMgZnJvbSB0aGUgb2xpZ2FyY2hpY2FsIGxhdwoJCQkJCWFuZCBzb21lIGZyb20gdGhlIGRlbW9jcmF0aWM7IEkgbWVhbiwgZm9yIGV4YW1wbGUsIHRoYXQgaXQgaXMgdGhvdWdodCB0byBiZQoJCQkJCWRlbW9jcmF0aWMgZm9yIHRoZSBvZmZpY2VzIHRvIGJlIGFzc2lnbmVkIGJ5IGxvdCwgZm9yIHRoZW0gdG8gYmUgZWxlY3RlZAoJCQkJCW9saWdhcmNoaWMsIGFuZCBkZW1vY3JhdGljIGZvciB0aGVtIG5vdCB0byBoYXZlIGEgcHJvcGVydHktcXVhbGlmaWNhdGlvbiwKCQkJCQlvbGlnYXJjaGljIHRvIGhhdmUgb25lOyB0aGVyZWZvcmUgaXQgaXMgYXJpc3RvY3JhdGljIGFuZCBjb25zdGl0dXRpb25hbCB0byB0YWtlCgkJCQkJb25lIGZlYXR1cmUgZnJvbSBvbmUgZm9ybSBhbmQgdGhlIG90aGVyIGZyb20gdGhlIG90aGVyLCBmcm9tIG9saWdhcmNoeSB0aGF0CgkJCQkJb2ZmaWNlcyBhcmUgdG8gYmUgZWxlY3RlZCwgYW5kIGZyb20gZGVtb2NyYWN5IHRoYXQgdGhpcyBpcyBub3QgdG8gYmUgb24gYQoJCQkJCXByb3BlcnR5LXF1YWxpZmljYXRpb24uIFRoaXMgdGhlbiBpcyB0aGUgbW9kZSBvZiB0aGUgbWl4dHVyZTsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy40IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHRoZSBtYXJrIG9mIGEgZ29vZCBtaXh0dXJlIG9mIGRlbW9jcmFjeSBhbmQKCQkJCQlvbGlnYXJjaHkgaXMgd2hlbiBpdCBpcyBwb3NzaWJsZSB0byBzcGVhayBvZiB0aGUgc2FtZSBjb25zdGl0dXRpb24gYXMgYQoJCQkJCWRlbW9jcmFjeSBhbmQgYXMgYW4gb2xpZ2FyY2h5OyBmb3IgbWFuaWZlc3RseSB0aGlzIGlzIHNvIHdoZW4gaXQgaXMgc2FpZCBiZWNhdXNlCgkJCQkJdGhleSBoYXZlIGJlZW4gbWl4ZWQgd2VsbCwgYW5kIHRoaXMgaXMgdGhlIGNhc2Ugd2l0aCB0aGUgZm9ybSB0aGF0IGxpZXMgaW4gdGhlCgkJCQkJbWlkZGxlLCBmb3IgZWFjaCBvZiB0aGUgdHdvIGV4dHJlbWUgZm9ybXMgY2FuIGJlIHNlZW4gaW4gaXQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjcuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoaXMgaXMgdGhlIGNhc2Ugd2l0aCB0aGUgY29uc3RpdHV0aW9uIG9mCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4uIEZvciBtYW55CgkJCQkJCXBlb3BsZTxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+ZW5kZWF2b3IgdG8gZGVzY3JpYmUgaXQgYXMKCQkJCQliZWluZyBhIGRlbW9jcmFjeSwgYmVjYXVzZSBpdHMgc3lzdGVtIGhhcyBtYW55IGRlbW9jcmF0aWMgZmVhdHVyZXMsIGZvciBpbnN0YW5jZQoJCQkJCWZpcnN0IG9mIGFsbCBpdHMgcmVndWxhdGlvbiBmb3IgdGhlIHJlYXJpbmcgb2YgYm95cywgc2luY2UgdGhlIHNvbnMgb2YgdGhlIHJpY2gKCQkJCQlhcmUgYnJvdWdodCB1cCBpbiB0aGUgc2FtZSB3YXkgYXMgdGhvc2Ugb2YgdGhlIHBvb3IsIGFuZCBhcmUgZWR1Y2F0ZWQgaW4gYQoJCQkJCW1hbm5lciBpbiB3aGljaCB0aGUgc29ucyBvZiB0aGUgcG9vciBhbHNvIGNvdWxkIGJlIGVkdWNhdGVkLCBhbmQgdGhleSBhcmUgYWxzbwoJCQkJCXRyZWF0ZWQgc2ltaWxhcmx5IGF0IHRoZSBuZXh0IGFnZSwgYW5kIGluIHRoZSBzYW1lIG1hbm5lciB3aGVuIHRoZXkgYXJlIGdyb3duCgkJCQkJdXAsIGZvciB0aGVyZSBpcyBub3RoaW5nIHRoYXQgZGlzdGluZ3Vpc2hlcyB0aGUgcmljaCBtYW4gZnJvbSB0aGUgcG9vcgoJCQkJCW1hbuKAlHRodXMgdGhlIGFycmFuZ2VtZW50cyBmb3IgZm9vZCBhcmUgdGhlIHNhbWUgZm9yIGFsbCBhdCB0aGUgY29tbW9uCgkJCQkJbWVzc2VzLCBhbmQgdGhlIHJpY2ggd2VhciBjbG90aGVzIHN1Y2ggYXMgZXZlbiBhbnkgcG9vciBtYW4gY291bGQgcHJvY3VyZSwgYW5kCgkJCQkJYWxzbyBiZWNhdXNlIG9mIHRoZSB0d28gZ3JlYXRlc3Qgb2ZmaWNlcyB0aGUgY29tbW9uIHBlb3BsZSBlbGVjdCB0byBvbmUgYW5kCgkJCQkJc2hhcmUgaW4gdGhlIG90aGVyIO+8iHRoZXkgZWxlY3QgdGhlIEVsZGVycyBhbmQgc2hhcmUgaW4gdGhlCgkJCQkJRXBob3JhdGXvvIk7IGJ1dCBvdGhlcnMgY2FsbCBpdCBhbiBvbGlnYXJjaHksIGJlY2F1c2UgaXQgaGFzIG1hbnkKCQkJCQlvbGlnYXJjaGljYWwgZmVhdHVyZXMsIGZvciBpbnN0YW5jZSB0aGF0IGFsbCB0aGUgb2ZmaWNlcyBhcmUgZWxlY3RpdmUgYW5kIG5vbmUKCQkJCQlhcHBvaW50ZWQgYnkgbG90IGFuZCBmZXcgcGVyc29ucyBoYXZlIHRoZSBwb3dlciB0byBzZW50ZW5jZSB0byBkZWF0aCBhbmQgZXhpbGUsCgkJCQkJYW5kIGEgbnVtYmVyIG9mIG90aGVyIHN1Y2ggbWF0dGVycy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy42IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGluIGEgd2VsbC1jb25zdHJ1Y3RlZCBtaXhlZCBjb25zdGl0dXRpb24gYm90aCBvZiB0aGUgdHdvIGZhY3RvcnMsIGFuZAoJCQkJCW5laXRoZXIgb2YgdGhlbSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgY29uamVjdHVyYWwgZW1lbmRhdGlvbgoJCQkJCQlyZW1vdmVzIHRoaXMgbXlzdGVyaW91cyBlcGlncmFtLCBnaXZpbmcg4oCYYW5kIG5vdCBvbmUgb2YgdGhlIHR3bwoJCQkJCQnvvIhvbmx577yJLuKAmTwvbm90ZT4gc2hvdWxkIHNlZW0gdG8gYmUgcHJlc2VudCwgYW5kCgkJCQkJaXQgc2hvdWxkIGJlIGtlcHQgc2FmZSBieSBpdHMgb3duIG1lYW5zIGFuZCBub3QgYnkgb3V0c2lkZSBhaWQsIGFuZCBieSBpdHMgb3duCgkJCQkJbWVhbnMgbm90IGJlY2F1c2UgdGhvc2Ugd2hvIGRlc2lyZSBpdHMgc2VjdXJpdHkgYXJlIG1vcmUgbnVtZXJvdXMgb3V0c2lkZQoJCQkJCQlpdDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IsIGlmIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7hvJTOvs+JzrjOtc69PC9mb3JlaWduPiBpcyBhbiBpbnRlcnBvbGF0aW9uLCDigJhub3QgbWVyZWx5IGJlY2F1c2UKCQkJCQkJdGhvc2Ug77yIY2l0aXplbnPvvIkgd2hvIHdpc2ggaXQgdG8gc3Vydml2ZSBhcmUgbW9yZSBudW1lcm91cwoJCQkJCQnvvIh0aGFuIHRob3NlIHdobyBkbyBub3TvvIku4oCZPC9ub3RlPiDvvIhmb3IKCQkJCQlldmVuIGEgYmFkIGNvbnN0aXR1dGlvbiBtaWdodCBwb3NzZXNzIHRoaXMgcXVhbGl0ee+8iSwgYnV0IGJlY2F1c2Ugbm8KCQkJCQlzZWN0aW9uIG9mIHRoZSBzdGF0ZSB3aGF0ZXZlciB3b3VsZCBldmVuIHdpc2ggZm9yIGFub3RoZXIKCQkJCQkJY29uc3RpdHV0aW9uLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHByb3BlciB3YXkgdGhlcmVmb3JlIHRvCgkJCQkJZXN0YWJsaXNoIGEgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCwgYW5kIHNpbWlsYXJseSBhbHNvIHRoZSBnb3Zlcm5tZW50cyBuYW1lZAoJCQkJCWFyaXN0b2NyYWNpZXMsIGhhcyBub3cgYmVlbiBzdGF0ZWQuIDxtaWxlc3RvbmUgbj0iMTI5NWEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIG49IjguMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgcmVtYWluZWQgZm9yIHVzIHRvIHNwZWFrCgkJCQkJb2YgdHlyYW5ueSwgbm90IGJlY2F1c2UgdGhlcmUgaXMgbXVjaCB0aGF0IGNhbiBiZSBzYWlkIGFib3V0IGl0LCBidXQgaW4gb3JkZXIKCQkJCQl0aGF0IGl0IG1heSByZWNlaXZlIGl0cyBwYXJ0IGluIG91ciBpbnF1aXJ5LCBzaW5jZSB3ZSByYW5rIHRoaXMgYWxzbyBhcyBvbmUKCQkJCQlhbW9uZyB0aGUga2luZHMgb2YgY29uc3RpdHV0aW9uLiBUaGUgbmF0dXJlIG9mIGtpbmdzaGlwIHdlIGhhdmUgZGVmaW5lZCBpbiBvdXIKCQkJCQlmaXJzdCBkaXNjb3Vyc2VzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Qm9vayAzLjktMTIuPC9ub3RlPiBpbgoJCQkJCXdoaWNoIHdlIGV4YW1pbmVkIHRoZSBxdWVzdGlvbiBpbiByZWxhdGlvbiB0byB0aGUgY29uc3RpdHV0aW9uIG1vc3QgY29tbW9ubHkKCQkJCQlkZW5vdGVkIGJ5IHRoZSB0ZXJtIOKAmGtpbmdzaGlwLOKAmSB3aGV0aGVyIGl0IGlzCgkJCQkJZGlzYWR2YW50YWdlb3VzIG9yIGFuIGFkdmFudGFnZSB0byBzdGF0ZXMsIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjguMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCB3aGF0IHBlcnNvbiBvdWdodCB0byBiZSBzZXQgdXAgYXMga2luZywgYW5kIGZyb20gd2hhdAoJCQkJCXNvdXJjZSwgYW5kIGJ5IHdoYXQgcHJvY2VkdXJlOyBhbmQgaW4gdGhlIHBhc3NhZ2UgaW4gd2hpY2ggd2Ugd2VyZSBjb25zaWRlcmluZwoJCQkJCWtpbmdzaGlwIHdlIGRpc3Rpbmd1aXNoZWQgdHdvIGtpbmRzIG9mIHR5cmFubnksIGJlY2F1c2UgdGhlaXIgcG93ZXIgaW4gYSBtYW5uZXIKCQkJCQlib3JkZXJzIHVwb24gcm95YWx0eSwgYmVjYXVzZSBib3RoIHRoZXNlIGZvcm1zIG9mIHJ1bGUgYXJlIGluIGFjY29yZGFuY2Ugd2l0aAoJCQkJCWxhdyDvvIhmb3IgYW1vbmcgc29tZSBvZiB0aGUgYmFyYmFyaWFucyB0aGV5IGVsZWN0IG1vbmFyY2hpYyBydWxlcnMgd2l0aAoJCQkJCWF1dG9jcmF0aWMgcG93ZXJzLCBhbmQgYWxzbyBpbiBvbGQgdGltZXMgYW1vbmcgdGhlIGFuY2llbnQgR3JlZWtzIHNvbWUgbWVuIHVzZWQKCQkJCQl0byBiZWNvbWUgbW9uYXJjaHMgb2YgdGhpcyBzb3J0LCB0aGUgcnVsZXJzIGNhbGxlZAoJCQkJCTxlbXBoPmFlc3ltbmV0YWU8L2VtcGg+77yJLCBidXQgdGhlc2UgdHdvIGZvcm1zIG9mIHR5cmFubnkgaGF2ZSBjZXJ0YWluCgkJCQkJZGlmZmVyZW5jZXMgZnJvbSBvbmUgYW5vdGhlciwgYWx0aG91Z2ggdGhleSB3ZXJlIG9uIHRoZSBvbmUgaGFuZCBvZiB0aGUgbmF0dXJlCgkJCQkJb2Ygcm95YWx0eSBiZWNhdXNlIHRoZXkgd2VyZSBpbiBhY2NvcmRhbmNlIHdpdGggbGF3IGFuZCBiZWNhdXNlIHRoZXkgZXhlcmNpc2VkCgkJCQkJbW9uYXJjaGljIHJ1bGUgb3ZlciB3aWxsaW5nIHN1YmplY3RzLCBhbmQgb24gdGhlIG90aGVyIGhhbmQgb2YgdGhlIG5hdHVyZSBvZiBhCgkJCQkJdHlyYW5ueSBiZWNhdXNlIHRoZXkgcnVsZWQgZGVzcG90aWNhbGx5IGFuZCBhY2NvcmRpbmcgdG8gdGhlaXIgb3duIGp1ZGdlbWVudC4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iOC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZXJlIGlzIGEgdGhpcmQga2luZCBvZgoJCQkJCXR5cmFubnkgd2hpY2ggaXMgdGhvdWdodCB0byBiZSB0eXJhbm55IGluIHRoZSBmdWxsZXN0IGRlZ3JlZSwgYmVpbmcgdGhlCgkJCQkJY291bnRlcnBhcnQgb2YgdW5pdmVyc2FsIGtpbmdzaGlwOyB0byB0aGlzIHNvcnQgb2YgdHlyYW5ueSBtdXN0IG5lY2Vzc2FyaWx5CgkJCQkJYmVsb25nIGEgbW9uYXJjaHk8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRoYXQgZXhlcmNpc2VzCgkJCQkJaXJyZXNwb25zaWJsZSBydWxlIG92ZXIgc3ViamVjdHMgYWxsIG9mIHRoZSBzYW1lIG9yIG9mIGEgaGlnaGVyIGNsYXNzIHdpdGggYQoJCQkJCXZpZXcgdG8gaXRzIG93biBwcml2YXRlIGludGVyZXN0IGFuZCBub3QgaW4gdGhlIGludGVyZXN0IG9mIHRoZSBwZXJzb25zIHJ1bGVkLgoJCQkJCUhlbmNlIGl0IGlzIGhlbGQgYWdhaW5zdCB0aGUgd2lsbCBvZiB0aGUgc3ViamVjdHMsIHNpbmNlIG5vIGZyZWUgbWFuIHdpbGxpbmdseQoJCQkJCWVuZHVyZXMgc3VjaCBydWxlLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlc2UgdGhlbiBhcmUgdGhlIGtpbmRzIG9mCgkJCQkJdHlyYW5ueSBhbmQgc3VjaCBpcyB0aGVpciBudW1iZXIsIGZvciB0aGUgcmVhc29ucyBzdGF0ZWQ8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCB3aGF0IGlzIHRoZSBiZXN0CgkJCQkJY29uc3RpdHV0aW9uIGFuZCB3aGF0IGlzIHRoZSBiZXN0IG1vZGUgb2YgbGlmZSBmb3IgbW9zdCBjaXRpZXMgYW5kIG1vc3Qgb2YKCQkJCQltYW5raW5kLCBpZiB3ZSBkbyBub3QganVkZ2UgYnkgdGhlIHN0YW5kYXJkIG9mIGEgdmlydHVlIHRoYXQgaXMgYWJvdmUgdGhlIGxldmVsCgkJCQkJb2YgcHJpdmF0ZSBjaXRpemVucyBvciBvZiBhbiBlZHVjYXRpb24gdGhhdCBuZWVkcyBuYXR1cmFsIGdpZnRzIGFuZCBtZWFucwoJCQkJCXN1cHBsaWVkIGJ5IGZvcnR1bmUsIG5vciBieSB0aGUgc3RhbmRhcmQgb2YgdGhlIGlkZWFsIGNvbnN0aXR1dGlvbiwgYnV0IG9mIGEKCQkJCQltb2RlIG9mIGxpZmUgYWJsZSB0byBiZSBzaGFyZWQgYnkgbW9zdCBtZW4gYW5kIGEgY29uc3RpdHV0aW9uIHBvc3NpYmxlIGZvciBtb3N0CgkJCQkJc3RhdGVzIHRvIGF0dGFpbj8gPG1pbGVzdG9uZSBlZD0iUCIgbj0iOS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIHRoZQoJCQkJCWNvbnN0aXR1dGlvbnMgY2FsbGVkIGFyaXN0b2NyYWNpZXMsIG9mIHdoaWNoIHdlIHNwb2tlIGp1c3Qgbm93LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEyOTNiIDctMjEsIGNmLiAxMjkzYiAzNi0xMjk0YSAyNS48L25vdGU+CgkJCQkJaW4gc29tZSBjYXNlcyBmYWxsIHNvbWV3aGF0IG91dCBvZiB0aGUgc2NvcGUgb2YgbW9zdCBzdGF0ZXMsIGFuZCBpbiBvdGhlcnMKCQkJCQlhcHByb3hpbWF0ZSB0byB3aGF0IGlzIGNhbGxlZCBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LCBzbyB0aGF0IGl0IGlzIHByb3BlciB0bwoJCQkJCXNwZWFrIG9mIHRoZXNlIHR3byBmb3JtcyBhcyBpZiB0aGV5IHdlcmUgb25lLiBBbmQgaW5kZWVkIHRoZSBkZWNpc2lvbiBpbiByZWdhcmQKCQkJCQl0byBhbGwgdGhlc2UgcXVlc3Rpb25zIGlzIGJhc2VkIG9uIHRoZSBzYW1lIGVsZW1lbnRhcnkgcHJpbmNpcGxlcy4gRm9yIGlmIGl0IGhhcwoJCQkJCWJlZW4gcmlnaHRseSBzYWlkIGluIHRoZTx0aXRsZT5FdGhpY3M8L3RpdGxlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTAxYSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDExMDFhCgkJCQkJCTE0PC9iaWJsPi48L25vdGU+IHRoYXQgdGhlIGhhcHB5IGxpZmUgaXMgdGhlIGxpZmUgdGhhdCBpcyBsaXZlZCB3aXRob3V0CgkJCQkJaW1wZWRpbWVudCBpbiBhY2NvcmRhbmNlIHdpdGggdmlydHVlLCBhbmQgdGhhdCB2aXJ0dWUgaXMgYSBtaWRkbGUgY291cnNlLCBpdAoJCQkJCW5lY2Vzc2FyaWx5IGZvbGxvd3MgdGhhdCB0aGUgbWlkZGxlIGNvdXJzZSBvZiBsaWZlIGlzIHRoZSBiZXN04oCUc3VjaCBhCgkJCQkJbWlkZGxlIGNvdXJzZSBhcyBpdCBpcyBwb3NzaWJsZSBmb3IgZWFjaCBjbGFzcyBvZiBtZW4gdG8gYXR0YWluLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhlc2Ugc2FtZSBjcml0ZXJpYSBtdXN0IGFsc28KCQkJCQluZWNlc3NhcmlseSBhcHBseSB0byB0aGUgZ29vZG5lc3MgYW5kIGJhZG5lc3Mgb2YgYSBzdGF0ZSwgYW5kIG9mIGEKCQkJCQljb25zdGl0dXRpb27igJRmb3IgYSBjb25zdGl0dXRpb24gaXMgYSBjZXJ0YWluIG1vZGUgb2YgbGlmZSBvZiBhIHN0YXRlLgoJCQkJCQk8bWlsZXN0b25lIG49IjEyOTViIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5JbiBhbGwgc3RhdGVzIHRoZXJlZm9yZSB0aGVyZSBleGlzdCB0aHJlZSBkaXZpc2lvbnMgb2YgdGhlCgkJCQkJc3RhdGUsIHRoZSB2ZXJ5IHJpY2gsIHRoZSB2ZXJ5IHBvb3IsIGFuZCB0aGlyZGx5IHRob3NlIHdobyBhcmUgYmV0d2VlbiB0aGUgdHdvLgoJCQkJCVNpbmNlIHRoZW4gaXQgaXMgYWRtaXR0ZWQgdGhhdCB3aGF0IGlzIG1vZGVyYXRlIG9yIGluIHRoZSBtaWRkbGUgaXMgYmVzdCwgaXQgaXMKCQkJCQltYW5pZmVzdCB0aGF0IHRoZSBtaWRkbGUgYW1vdW50IG9mIGFsbCBvZiB0aGUgZ29vZCB0aGluZ3Mgb2YgZm9ydHVuZSBpcyB0aGUgYmVzdAoJCQkJCWFtb3VudCB0byBwb3NzZXNzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Gb3IgdGhpcyBkZWdyZWUKCQkJCQlvZiB3ZWFsdGggaXMgdGhlIHJlYWRpZXN0IHRvIG9iZXkgcmVhc29uLCB3aGVyZWFzIGZvciBhIHBlcnNvbiB3aG8gaXMKCQkJCQlleGNlZWRpbmdseSBiZWF1dGlmdWwgb3Igc3Ryb25nIG9yIG5vYmx5IGJvcm4gb3IgcmljaCwgb3IgdGhlCgkJCQkJb3Bwb3NpdGXigJRleGNlZWRpbmdseSBwb29yIG9yIHdlYWsgb3Igb2YgdmVyeSBtZWFuIHN0YXRpb24sIGl0IGlzCgkJCQkJZGlmZmljdWx0IHRvIGZvbGxvdyB0aGUgYmlkZGluZyBvZiByZWFzb247IGZvciB0aGUgZm9ybWVyIHR1cm4gbW9yZSB0byBpbnNvbGVuY2UKCQkJCQlhbmQgZ3JhbmQgd2lja2VkbmVzcywgYW5kIHRoZSBsYXR0ZXIgb3Zlcm11Y2ggdG8gbWFsaWNlIGFuZCBwZXR0eSB3aWNrZWRuZXNzLAoJCQkJCWFuZCB0aGUgbW90aXZlIG9mIGFsbCB3cm9uZ2RvaW5nIGlzIGVpdGhlciBpbnNvbGVuY2Ugb3IgbWFsaWNlLiBBbmQgbW9yZW92ZXIgdGhlCgkJCQkJbWlkZGxlIGNsYXNzIGFyZSB0aGUgbGVhc3QgaW5jbGluZWQgdG8gc2h1biBvZmZpY2UgYW5kIHRvIGNvdmV0IG9mZmljZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSB0ZXh0IGlzIGFuIGVtZW5kYXRpb247IHNvbWUgTVNTLiBnaXZlCgkJCQkJCeKAmHRvIHJ1bGUgdGhlIHRyaWJlIGFuZCB0byBydWxlIHRoZSBjb3VuY2lsLOKAmSBidXQgbW9zdAoJCQkJCQloYXZlIOKAmHRvIGxvdmUgb2ZmaWNlIGFuZCBydWxlIHRoZSBjb3VuY2lsLOKAmSBhcHBhcmVudGx5CgkJCQkJCXRoaW5raW5nIHRoYXQgdGhlIHZlcmIgdHJhbnNsYXRlZCDigJhydWxlIHRoZSBjb3VuY2ls4oCZCgkJCQkJCW1lYW50IOKAmHdpc2ggb2ZmaWNlLuKAmTwvbm90ZT4gYW5kIGJvdGggdGhlc2UgdGVuZGVuY2llcwoJCQkJCWFyZSBpbmp1cmlvdXMgdG8gc3RhdGVzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgaW4KCQkJCQlhZGRpdGlvbiB0byB0aGVzZSBwb2ludHMsIHRob3NlIHdobyBoYXZlIGFuIGV4Y2VzcyBvZiBmb3J0dW5lJ3MgZ29vZHMsIHN0cmVuZ3RoLAoJCQkJCXdlYWx0aCwgZnJpZW5kcyBhbmQgdGhlIGxpa2UsIGFyZSBub3Qgd2lsbGluZyB0byBiZSBnb3Zlcm5lZCBhbmQgZG8gbm90IGtub3cgaG93CgkJCQkJdG8gYmUg77yIYW5kIHRoZXkgaGF2ZSBhY3F1aXJlZCB0aGlzIHF1YWxpdHkgZXZlbiBpbiB0aGVpciBib3lob29kIGZyb20KCQkJCQl0aGVpciBob21lbGlmZSwgd2hpY2ggd2FzIHNvIGx1eHVyaW91cyB0aGF0IHRoZXkgaGF2ZSBub3QgZ290IHVzZWQgdG8gc3VibWl0dGluZwoJCQkJCXRvIGF1dGhvcml0eSBldmVuIGluIHNjaG9vbO+8iSwgd2hpbGUgdGhvc2Ugd2hvIGFyZSBleGNlc3NpdmVseSBpbiBuZWVkCgkJCQkJb2YgdGhlc2UgdGhpbmdzIGFyZSB0b28gaHVtYmxlLiBIZW5jZSB0aGUgbGF0dGVyIGNsYXNzIGRvIG5vdCBrbm93IGhvdyB0byBnb3Zlcm4KCQkJCQlidXQga25vdyBob3cgdG8gc3VibWl0IHRvPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5nb3Zlcm5tZW50CgkJCQkJb2YgYSBzZXJ2aWxlIGtpbmQsIHdoaWxlIHRoZSBmb3JtZXIgY2xhc3MgZG8gbm90IGtub3cgaG93IHRvIHN1Ym1pdCB0byBhbnkKCQkJCQlnb3Zlcm5tZW50LCBhbmQgb25seSBrbm93IGhvdyB0byBnb3Zlcm4gaW4gdGhlIG1hbm5lciBvZiBhIG1hc3Rlci4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iOS42IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHJlc3VsdCBpcyBhIHN0YXRlIGNvbnNpc3Rpbmcgb2Ygc2xhdmVzCgkJCQkJYW5kIG1hc3RlcnMsIG5vdCBvZiBmcmVlIG1lbiwgYW5kIG9mIG9uZSBjbGFzcyBlbnZpb3VzIGFuZCBhbm90aGVyIGNvbnRlbXB0dW91cwoJCQkJCW9mIHRoZWlyIGZlbGxvd3MuIFRoaXMgY29uZGl0aW9uIG9mIGFmZmFpcnMgaXMgdmVyeSBmYXIgcmVtb3ZlZCBmcm9tCgkJCQkJZnJpZW5kbGluZXNzLCBhbmQgZnJvbSBwb2xpdGljYWwgcGFydG5lcnNoaXDigJRmb3IgZnJpZW5kbGluZXNzIGlzIGFuCgkJCQkJZWxlbWVudCBvZiBwYXJ0bmVyc2hpcCwgc2luY2UgbWVuIGFyZSBub3Qgd2lsbGluZyB0byBiZSBwYXJ0bmVycyB3aXRoIHRoZWlyCgkJCQkJZW5lbWllcyBldmVuIG9uIGEgam91cm5leS4gQnV0IHN1cmVseSB0aGUgaWRlYWwgb2YgdGhlIHN0YXRlIGlzIHRvIGNvbnNpc3QgYXMKCQkJCQltdWNoIGFzIHBvc3NpYmxlIG9mIHBlcnNvbnMgdGhhdCBhcmUgZXF1YWwgYW5kIGFsaWtlLCBhbmQgdGhpcyBzaW1pbGFyaXR5IGlzCgkJCQkJbW9zdCBmb3VuZCBpbiB0aGUgbWlkZGxlIGNsYXNzZXM7IHRoZXJlZm9yZSB0aGUgbWlkZGxlLWNsYXNzIHN0YXRlIHdpbGwKCQkJCQluZWNlc3NhcmlseSBiZSBiZXN0IGNvbnN0aXR1dGVkIGluIHJlc3BlY3Qgb2YgdGhvc2UgZWxlbWVudHM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlByb2JhYmx5IExhbWJpbnVzJ3MgYWx0ZXJhdGlvbiBvZiB0aGUgR3JlZWsgc2hvdWxkIGJlCgkJCQkJCWFjY2VwdGVkLCBnaXZpbmcg4oCYaGVuY2UgdGhhdCBzdGF0ZSB3aWxsIG5lY2Vzc2FyaWx5IGJlIGJlc3QKCQkJCQkJZ292ZXJuZWQgd2hpY2ggY29uc2lzdHMgb2YgdGhvc2UgZWxlbWVudHPigJQu4oCZPC9ub3RlPiBvZgoJCQkJCXdoaWNoIHdlIHNheSB0aGF0IHRoZSBzdGF0ZSBpcyBieSBuYXR1cmUgY29tcG9zZWQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhbHNvIHRoaXMgY2xhc3Mgb2YgY2l0aXplbnMgaGF2ZSB0aGUgZ3JlYXRlc3Qgc2VjdXJpdHkKCQkJCQlpbiB0aGUgc3RhdGVzOyBmb3IgdGhleSBkbyBub3QgdGhlbXNlbHZlcyBjb3ZldCBvdGhlciBtZW4ncyBnb29kcyBhcyBkbyB0aGUKCQkJCQlwb29yLCBub3IgZG8gdGhlIG90aGVyIGNsYXNzZXMgY292ZXQgdGhlaXIgc3Vic3RhbmNlIGFzIHRoZSBwb29yIGNvdmV0IHRoYXQgb2YKCQkJCQl0aGUgcmljaDsgYW5kIGJlY2F1c2UgdGhleSBhcmUgbmVpdGhlciBwbG90dGVkIGFnYWluc3Qgbm9yIHBsb3R0aW5nIHRoZXkgbGl2ZQoJCQkJCWZyZWUgZnJvbSBkYW5nZXIuIEJlY2F1c2Ugb2YgdGhpcyBpdCB3YXMgYSBnb29kIHByYXllciBvZiBQaG9jeWxpZGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIGdub21pYyBwb2V0IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWlsZXR1cyIga2V5PSJwZXJzZXVzLE1pbGV0dXMiPk1pbGV0dXM8L3BsYWNlTmFtZT4sIGJvcm4gPGRhdGUgYXV0aG5hbWU9Ii01NjAiIHZhbHVlPSItNTYwIj41NjA8L2RhdGU+IEIuQy48L25vdGU+4oCUIDxxdW90ZSB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIG1ldD0iZGFjdHlsaWMiPkluIG1hbnkgdGhpbmdzIHRoZSBtaWRkbGUgaGF2ZSB0aGUgYmVzdDs8L2w+CgkJCQkJCTxsPkJlIG1pbmUgYSBtaWRkbGUgc3RhdGlvbi48L2w+CgkJCQkJPC9xdW90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JdCBpcyBjbGVhciB0aGVyZWZvcmUgYWxzbyB0aGF0IHRoZQoJCQkJCXBvbGl0aWNhbCBjb21tdW5pdHkgYWRtaW5pc3RlcmVkIGJ5IHRoZSBtaWRkbGUgY2xhc3MgaXMgdGhlIGJlc3QsIGFuZCB0aGF0IGl0IGlzCgkJCQkJcG9zc2libGUgZm9yIHRob3NlIHN0YXRlcyB0byBiZSB3ZWxsIGdvdmVybmVkIHRoYXQgYXJlIG9mIHRoZSBraW5kIGluIHdoaWNoIHRoZQoJCQkJCW1pZGRsZSBjbGFzcyBpcyBudW1lcm91cywgYW5kIHByZWZlcmFibHkgc3Ryb25nZXIgdGhhbiBib3RoIHRoZSBvdGhlciB0d28KCQkJCQljbGFzc2VzLCBvciBhdCBhbGwgZXZlbnRzIHRoYW4gb25lIG9mIHRoZW0sIGZvciBieSB0aHJvd2luZyBpbiBpdHMgd2VpZ2h0IGl0CgkJCQkJc3dheXMgdGhlIGJhbGFuY2UgYW5kIHByZXZlbnRzIHRoZSBvcHBvc2l0ZSBleHRyZW1lczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBleHRyZW1lIGRlbW9jcmFjeSBhbmQgdmVyeSBsaW1pdGVkIG9saWdhcmNoeS48L25vdGU+CgkJCQkJZnJvbSBjb21pbmcgaW50byBleGlzdGVuY2UuIEhlbmNlIGl0IGlzIHRoZSBncmVhdGVzdCBnb29kIGZvcnR1bmUgaWYgdGhlIG1lbgoJCQkJCXRoYXQgaGF2ZSBwb2xpdGljYWwgcG93ZXIgcG9zc2VzcyBhIG1vZGVyYXRlIGFuZCBzdWZmaWNpZW50IHN1YnN0YW5jZSwKCQkJCQkJPG1pbGVzdG9uZSBuPSIxMjk2YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+c2luY2Ugd2hlcmUgc29tZSBvd24gYSB2ZXJ5IGdyZWF0IGRlYWwgb2YgcHJvcGVydHkgYW5kIG90aGVycwoJCQkJCW5vbmUgdGhlcmUgY29tZXMgYWJvdXQgZWl0aGVyIGFuIGV4dHJlbWUgZGVtb2NyYWN5IG9yIGFuIHVubWl4ZWQgb2xpZ2FyY2h5LCBvciBhCgkJCQkJdHlyYW5ueSBtYXkgcmVzdWx0IGZyb20gYm90aCBvZiB0aGUgdHdvIGV4dHJlbWVzLCBmb3IgdHlyYW5ueSBzcHJpbmdzIGZyb20gYm90aAoJCQkJCWRlbW9jcmFjeSBhbmQgb2xpZ2FyY2h5IG9mIHRoZSBtb3N0IHVuYnJpZGxlZCBraW5kLCBidXQgbXVjaCBsZXNzIG9mdGVuIGZyb20gdGhlCgkJCQkJbWlkZGxlIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiBhbmQgdGhvc2UgbmVhciB0byB0aGVtLiBUaGUgY2F1c2Ugb2YgdGhpcyB3ZSB3aWxsCgkJCQkJc3BlYWsgb2YgbGF0ZXIgaW4gb3VyIHRyZWF0bWVudCBvZiBwb2xpdGljYWwgcmV2b2x1dGlvbnMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoYXQgdGhlIG1pZGRsZSBmb3JtIG9mIGNvbnN0aXR1dGlvbiBpcyB0aGUgYmVzdCBpcwoJCQkJCWV2aWRlbnQ7IGZvciBpdCBhbG9uZSBpcyBmcmVlIGZyb20gZmFjdGlvbiwgc2luY2Ugd2hlcmUgdGhlIG1pZGRsZSBjbGFzcyBpcwoJCQkJCW51bWVyb3VzLCBmYWN0aW9ucyBhbmQgcGFydHkgZGl2aXNpb25zIGFtb25nIHRoZSBjaXRpemVucyBhcmUgbGVhc3QgbGlrZWx5IHRvCgkJCQkJb2NjdXIuIEFuZCB0aGUgZ3JlYXQgc3RhdGVzIGFyZSBtb3JlIGZyZWUgZnJvbSBmYWN0aW9uIGZvciB0aGUgc2FtZSByZWFzb24sCgkJCQkJYmVjYXVzZSB0aGUgbWlkZGxlIGNsYXNzIGlzIG51bWVyb3VzLCB3aGVyZWFzIGluIHRoZSBzbWFsbCBzdGF0ZXMgaXQgaXMgZWFzeSB0bwoJCQkJCWRpdmlkZSB0aGUgd2hvbGUgcGVvcGxlIGludG8gdHdvIHBhcnRpZXMgbGVhdmluZyBub3RoaW5nIGluIGJldHdlZW4sIGFuZCBhbHNvCgkJCQkJYWxtb3N0IGV2ZXJ5Ym9keSBpcyBuZWVkeSBvciB3ZWFsdGh5LiBBbHNvIGRlbW9jcmFjaWVzIGFyZSBtb3JlIHNlY3VyZSBhbmQgbW9yZQoJCQkJCWxvbmctbGl2ZWQgdGhhbiBvbGlnYXJjaGllcyBvd2luZyB0byB0aGUgY2l0aXplbnMgb2YgdGhlIG1pZGRsZSBjbGFzcwoJCQkJCe+8iGZvciB0aGV5IGFyZSBtb3JlIG51bWVyb3VzIGFuZCBoYXZlIGEgbGFyZ2VyIHNoYXJlIG9mIHRoZSBob25vcnMgaW4KCQkJCQlkZW1vY3JhY2llcyB0aGFuIGluIG9saWdhcmNoaWVz77yJLCBzaW5jZSB3aGVuIHRoZSBwb29yIGFyZSBpbiBhIG1ham9yaXR5CgkJCQkJd2l0aG91dCB0aGUgbWlkZGxlIGNsYXNzLCBhZHZlcnNpdHkgc2V0cyBpbiBhbmQgdGhleSBhcmUgc29vbiBydWluZWQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgaXQgbXVzdCBiZSBkZWVtZWQgYSBzaWduaWZpY2FudCBmYWN0CgkJCQkJdGhhdCB0aGUgYmVzdCBsYXdnaXZlcnMgYXJlIGZyb20gYW1vbmcgdGhlIG1pZGRsZSBjaXRpemVuczsgZm9yIFNvbG9uIHdhcyBvZgoJCQkJCXRoYXQgY2xhc3MsPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hcyBhcHBlYXJzIGZyb20gaGlzCgkJCQkJcG9ldHJ5LCBhbmQgc28gd2FzIEx5Y3VyZ3VzIO+8iGZvciBoZSB3YXMgbm90IGEga2luZ++8iSBhbmQKCQkJCQlDaGFyb25kYXMgYW5kIGFsbW9zdCB0aGUgZ3JlYXRlc3QgbnVtYmVyIG9mIHRoZSBvdGhlciBsYXdnaXZlcnMuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgdGhlc2UgY29uc2lkZXJhdGlvbnMgYWxzbyBzaG93IHRoZSByZWFzb24gd2h5IHRoZQoJCQkJCWNvbnN0aXR1dGlvbnMgb2YgbW9zdCBzdGF0ZXMgYXJlIGVpdGhlciBkZW1vY3JhdGljIG9yIG9saWdhcmNoaWNhbDsgb3dpbmcgdG8gdGhlCgkJCQkJbWlkZGxlIGNsYXNzIGluIHRoZXNlIHN0YXRlcyBiZWluZyBvZnRlbiBhIHNtYWxsIG9uZSwgdGhlIGNsYXNzZXMgZGl2ZXJnaW5nIGZyb20KCQkJCQl0aGUgbWlkZGxlIHN0YXR1c+KAlHdoaWNoZXZlciBvZiB0aGUgdHdvLCB0aGUgb3duZXJzIG9mIHRoZSBlc3RhdGVzIG9yCgkJCQkJdGhlIHBlb3BsZSwgZnJvbSB0aW1lIHRvIHRpbWUgaGFzIHRoZSB1cHBlciBoYW5k4oCUY29uZHVjdCB0aGUKCQkJCQlnb3Zlcm5tZW50IG9uIHRoZWlyIG93biBsaW5lcywgc28gdGhhdCBpdCBiZWNvbWVzIGVpdGhlciBhIGRlbW9jcmFjeSBvciBhbgoJCQkJCW9saWdhcmNoeS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iOS4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpbiBhZGRpdGlvbiB0byB0aGlzLAoJCQkJCWJlY2F1c2UgZmFjdGlvbnMgb2NjdXIgYW5kIGZpZ2h0cyBiZXR3ZWVuIHRoZSBwZW9wbGUgYW5kIHRoZSB3ZWFsdGh5LCB3aGljaGV2ZXIKCQkJCQlwYXJ0eSBoYXBwZW5zIHRvIGdhaW4gdGhlIHVwcGVyIGhhbmQgb3ZlciBpdHMgb3Bwb25lbnRzIGRvZXMgbm90IGVzdGFibGlzaCBhCgkJCQkJY29tbW9uIG9yIGVxdWFsIGdvdmVybm1lbnQsIGJ1dCB0YWtlcyB0aGUgc3VwZXJpb3Igc2hhcmUgaW4gdGhlIGdvdmVybm1lbnQgYXMgYQoJCQkJCXByaXplIG9mIHZpY3RvcnksIGFuZCBtYWtlcyBpdCBhIGRlbW9jcmFjeSBpbiB0aGUgb25lIGNhc2UgYW5kIGFuIG9saWdhcmNoeSBpbgoJCQkJCXRoZSBvdGhlci4gTW9yZW92ZXIgZWFjaCBvZiB0aGUgdHdvIHN0YXRlcyB0aGF0IGluIHRoZSBwYXN0IGhlbGQgdGhlIGxlYWRlcnNoaXAKCQkJCQlvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IHRvb2sgYXMgYSBwYXR0ZXJuIHRoZSBmb3JtIG9mCgkJCQkJZ292ZXJubWVudCB0aGF0IGV4aXN0ZWQgYW1vbmcgdGhlbXNlbHZlcyBhbmQgc2V0IHVwIGluIHRoZSBvbmUgY2FzZSBkZW1vY3JhY2llcwoJCQkJCWFuZCBpbiB0aGUgb3RoZXIgb2xpZ2FyY2hpZXMgaW4gdGhlIGNpdGllcywgbm90IGNvbnNpZGVyaW5nIHRoZSBpbnRlcmVzdCBvZiB0aGUKCQkJCQljaXRpZXMgYnV0IHRoZWlyIG93biBhZHZhbnRhZ2UuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5IZW5jZSBvd2luZyB0byB0aGVzZSBjYXVzZXMgdGhlIG1pZGRsZSBmb3JtIG9mIGNvbnN0aXR1dGlvbiBlaXRoZXIgbmV2ZXIgY29tZXMKCQkJCQlpbnRvIGV4aXN0ZW5jZSBvciBzZWxkb20gYW5kIGluIGZldyBwbGFjZXM7IGZvciBvbmUgbWFuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JdCBpcyBxdWl0ZSB1bmNlcnRhaW4gd2hvIGlzIG1lYW50LCBwb3NzaWJseSBTb2xvbiBvcgoJCQkJCQlUaGVyYW1lbmVzLjwvbm90ZT4gb25seSBhbW9uZyB0aGUgc3RhdGVzIHRoYXQgaGF2ZSBmb3JtZXJseSBoZWxkIHRoZQoJCQkJCWxlYWRlcnNoaXAgd2FzIGluZHVjZWQgdG8gZ3JhbnQgdGhpcyBmb3JtIG9mIG9yZ2FuaXphdGlvbiwgYW5kIGJ5IHRoaXMgdGltZSBpdAoJCQkJCWhhcyBiZWNvbWUgYSBmaXhlZCBoYWJpdCB3aXRoIHRoZSBwZW9wbGUgb2YgdGhlIHNlcGFyYXRlIGNpdGllcyBhbHNvIG5vdCBldmVuIHRvCgkJCQkJZGVzaXJlIGVxdWFsaXR5LCA8bWlsZXN0b25lIG49IjEyOTZiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5idXQgZWl0aGVyIHRvIHNlZWsgdG8gcnVsZSBvciB0byBlbmR1cmUgYmVpbmcgdW5kZXIKCQkJCQlhIG1hc3Rlci48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIGNvbnNpZGVyYXRpb25zIHRoZXJlZm9yZSBtYWtlIGl0CgkJCQkJY2xlYXIgd2hpY2ggaXMgdGhlIGJlc3QgY29uc3RpdHV0aW9uLCBhbmQgd2h5IGl0IGlzIHRoZSBiZXN0OyA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIG5vdyB0aGF0IHRoZSBiZXN0IGhhcyBiZWVuIGRlZmluZWQsIGl0CgkJCQkJaXMgbm90IGRpZmZpY3VsdCB0byBzZWUsIGFtb25nIHRoZSBvdGhlciBmb3JtcyBvZiBjb25zdGl0dXRpb24KCQkJCQnvvIhpbmFzbXVjaCBhcyB3ZSBwcm9ub3VuY2UgdGhhdCB0aGVyZSBhcmUgdmFyaW91cyBmb3JtcyBvZiBkZW1vY3JhY3kgYW5kCgkJCQkJdmFyaW91cyBvbGlnYXJjaGllc++8iSwgd2hhdCBraW5kIGlzIHRvIGJlIHBsYWNlZCBmaXJzdCwgd2hhdCBzZWNvbmQsIGFuZAoJCQkJCXdoYXQgbmV4dCBpbiB0aGlzIG9yZGVyLCBieSByZWFzb24gb2Ygb25lIGJlaW5nIGJldHRlciBhbmQgYW5vdGhlciB3b3JzZS4gRm9yIGF0CgkJCQkJZWFjaCBzdGFnZSB0aGUgZm9ybSBuZWFyZXN0IHRvIHRoZSBiZXN0IG9uZSBtdXN0IG5lY2Vzc2FyaWx5IGJlIHN1cGVyaW9yLCBhbmQKCQkJCQl0aGUgZm9ybSB0aGF0IGlzIG1vcmUgcmVtb3RlIGZyb20gdGhlIG1pZGRsZSBtdXN0IGJlIGluZmVyaW9y4oCUdW5sZXNzCgkJCQkJb25lIGlzIGp1ZGdpbmcgcmVsYXRpdmVseSB0byBnaXZlbiBjb25kaXRpb25zOiBJIG1ha2UgdGhpcyByZXNlcnZhdGlvbiBiZWNhdXNlCgkJCQkJaXQgaXMgcXVpdGUgcG9zc2libGUgdGhhdCBhbHRob3VnaCBvbmUgZm9ybSBvZiBjb25zdGl0dXRpb24gaXMgcHJlZmVyYWJsZSBpdCBtYXkKCQkJCQlvZnRlbiBiZSBtb3JlIGFkdmFudGFnZW91cyBmb3IgY2VydGFpbiBwZW9wbGUgdG8gaGF2ZSBhbm90aGVyIGZvcm0uPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIG5leHQKCQkJCQl0aGluZyBhZnRlciB3aGF0IGhhcyBiZWVuIHNhaWQgaXMgdG8gZGlzY3VzcyB3aGljaCBjb25zdGl0dXRpb24gaXMgYWR2YW50YWdlb3VzCgkJCQkJZm9yIHdoaWNoIHBlb3BsZSwgYW5kIHdoYXQgc29ydCBvZiBjb25zdGl0dXRpb24gZm9yIHdoYXQgc29ydCBvZiBwZW9wbGUuIE5vdyB3ZQoJCQkJCW11c3QgZmlyc3QgZ3Jhc3AgYSBnZW5lcmFsIHByaW5jaXBsZSB0aGF0IGFwcGxpZXMgZXF1YWxseSB0byBhbGwgc29ydHMgb2YKCQkJCQljb25zdGl0dXRpb246IGl0IGlzIGVzc2VudGlhbCB0aGF0IHRoZSBwYXJ0IG9mIHRoZSBzdGF0ZSB0aGF0IHdpc2hlcyB0aGUKCQkJCQljb25zdGl0dXRpb24gdG8gcmVtYWluIHNob3VsZCBiZSBzdHJvbmdlciB0aGFuIHRoZSBwYXJ0IHRoYXQgZG9lcyBub3Qgd2lzaCBpdC4KCQkJCQlCdXQgZXZlcnkgc3RhdGUgY29uc2lzdHMgb2YgYm90aCBxdWFsaXR5IGFuZCBxdWFudGl0eTogYnkgcXVhbGl0eSBJIG1lYW4KCQkJCQlmcmVlZG9tLCB3ZWFsdGgsIGVkdWNhdGlvbiwgZ29vZCBiaXJ0aCwgYW5kIGJ5IHF1YW50aXR5IHRoZSBzdXBlcmlvciBudW1iZXJzIG9mCgkJCQkJdGhlIG11bHRpdHVkZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpdCBpcyBwb3NzaWJsZQoJCQkJCQl0aGF0LDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+d2hpbGUgdGhlIHF1YWxpdHkgb2YgdGhlCgkJCQkJc3RhdGUgYmVsb25ncyB0byBvbmUgYW1vbmcgdGhlIHBhcnRzIG9mIHdoaWNoIHRoZSBzdGF0ZSBjb25zaXN0cyBhbmQgaXRzCgkJCQkJcXVhbnRpdHkgdG8gYW5vdGhlciBwYXJ04oCUZm9yIGV4YW1wbGUgdGhlIGxvdy1ib3JuIG1heSBiZSBtb3JlIG51bWVyb3VzCgkJCQkJdGhhbiB0aGUgbm9ibGUgb3IgdGhlIHBvb3IgdGhhbiB0aGUgcmljaCwgeWV0IHRoZSBtb3JlIG51bWVyb3VzIGNsYXNzIG1heSBub3QKCQkJCQlleGNlZWQgaW4gcXVhbnRpdHkgYXMgbXVjaCBhcyB0aGV5IGZhbGwgYmVoaW5kIGluIHF1YWxpdHkuIEhlbmNlIHRoZXNlIHR3bwoJCQkJCWZhY3RvcnMgaGF2ZSB0byBiZSBqdWRnZWQgaW4gY29tcGFyaXNvbiB3aXRoIG9uZSBhbm90aGVyLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlcmUgdGhlcmVmb3JlIHRoZSBtdWx0aXR1ZGUgb2YgdGhlIHBvb3IgZXhjZWVkcyBpbiB0aGUKCQkJCQlwcm9wb3J0aW9uIHN0YXRlZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gc28gYXMgdG8gb3V0YmFsYW5jZQoJCQkJCQl0aGVpciBpbmZlcmlvcml0eSBpbiBxdWFsaXR5Ljwvbm90ZT4gaGVyZSBpdCBpcyBuYXR1cmFsIGZvciB0aGVyZSB0byBiZQoJCQkJCWRlbW9jcmFjeSwgYW5kIGVhY2gga2luZCBvZiBkZW1vY3JhY3kgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBzdXBlcmlvciBudW1iZXIgb2YKCQkJCQl0aGUgY29tbW9uIHBlb3BsZSBvZiBlYWNoIHNvcnQsIGZvciBleGFtcGxlIGlmIHRoZSBudW1iZXIgb2YgdGhlIGZhcm1pbmcgY2xhc3MKCQkJCQlleGNlZWRzLCB0aGUgZmlyc3Qgc29ydCBvZiBkZW1vY3JhY3ksIGJ1dCBpZiB0aGF0IG9mIHRoZSBjb21tb24gbGFib3JlcnMgYW5kCgkJCQkJd2FnZS1lYXJuZXJzLCB0aGUgbGFzdCBzb3J0LCBhbmQgc2ltaWxhcmx5IGFsc28gd2l0aCB0aGUgb3RoZXIgc29ydHMgdGhhdCBsaWUKCQkJCQliZXR3ZWVuIHRoZXNlIHR3bzsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCB3aGVyZSB0aGUKCQkJCQljbGFzcyBvZiB0aGUgd2VsbC10by1kbyBhbmQgbm90YWJsZSBleGNlZWRzIGluIHF1YWxpdHkgbW9yZSB0aGFuIGl0IGZhbGxzIGJlaGluZAoJCQkJCWluIHF1YW50aXR5LCBoZXJlIGl0IGlzIG5hdHVyYWwgZm9yIHRoZXJlIHRvIGJlIGFuIG9saWdhcmNoeSwgYW5kIGxpa2V3aXNlIHRoZQoJCQkJCXZhcmlvdXMga2luZHMgb2Ygb2xpZ2FyY2h5IGFjY29yZGluZyB0byB0aGUgZGVncmVlIG9mIHN1cGVyaW9yaXR5PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHN1cGVyaW9yaXR5IGluIHF1YWxpdHkuPC9ub3RlPiBvZiB0aGUKCQkJCQlvbGlnYXJjaGljYWwgbXVsdGl0dWRlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHdvcmQgaXMgbG9vc2VseQoJCQkJCQl1c2VkIG9mIHRoaXMgc21hbGwgY2xhc3MuPC9ub3RlPiBCdXQgdGhlIGxhd2dpdmVyIGluIGhpcyBjb25zdGl0dXRpb24gbXVzdAoJCQkJCWFsd2F5cyB0YWtlIGluIHRoZSBtaWRkbGUgY2xhc3M7IGlmIGhlIGlzIG1ha2luZyB0aGUgbGF3cyBvZiBhbiBvbGlnYXJjaGljYWwKCQkJCQljaGFyYWN0ZXIgaGUgbXVzdCBrZWVwIHRoZSBtaWRkbGUgY2xhc3MgaW4gdmlldywgYW5kIGlmIGRlbW9jcmF0aWMsIGhlIG11c3QKCQkJCQlsZWdpc2xhdGUgc28gYXMgdG8gYnJpbmcgdGhlbSBpbi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB3aGVyZSB0aGUgbnVtYmVyIG9mIHRoZSBtaWRkbGUgY2xhc3MgZXhjZWVkcyBib3RoIHRoZSBleHRyZW1lIGNsYXNzZXMKCQkJCQl0b2dldGhlciwgb3IgZXZlbiBvbmUgb2YgdGhlbSBvbmx5LCBoZXJlIGl0IGlzIHBvc3NpYmxlIGZvciBhIGNvbnN0aXR1dGlvbmFsCgkJCQkJZ292ZXJubWVudCB0byBiZSBsYXN0aW5nOyA8bWlsZXN0b25lIG49IjEyOTdhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5mb3IgdGhlcmUgaXMgbm8gZmVhciBvZiB0aGUgcmljaCBldmVyIGNvbWluZyB0bwoJCQkJCXRlcm1zIHdpdGggdGhlIHBvb3IgYWdhaW5zdCB0aGlzIG51bWVyb3VzIG1pZGRsZSBjbGFzczsgZm9yIG5laXRoZXIgY2xhc3Mgd2lsbAoJCQkJCWV2ZXIgd2lzaCB0byBiZSBzdWJqZWN0IHRvIHRoZSBvdGhlciwgYW5kIGlmIHRoZXkgbG9vayBmb3IgYW5vdGhlciBjb25zdGl0dXRpb24KCQkJCQlmYWlyZXIgdG8gYm90aCB0aGFuIHRoaXMgdGhleSB3aWxsIG5vdCBmaW5kIG9uZSwgZm9yIHRoZXkgd291bGQgbm90IGVuZHVyZSB0bwoJCQkJCXRha2UgdHVybnMgdG8gZ292ZXJuIGJlY2F1c2UgdGhleSBkaXN0cnVzdCBlYWNoIG90aGVyOiBldmVyeXdoZXJlIGl0IGlzIHRoZQoJCQkJCWFyYml0cmF0b3IgdGhhdCBpcyBtb3N0IHRydXN0ZWQsIGFuZCB0aGUgbWFuIGluIHRoZSBtaWRkbGUgaXMgYW4gYXJiaXRyYXRvci4gQW5kCgkJCQkJdGhlIGJldHRlciB0aGUgY29uc3RpdHV0aW9uIGlzIG1peGVkLCB0aGUgbW9yZSBwZXJtYW5lbnQgaXQgaXM7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEwLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgbWFueSBldmVuIG9mIHRob3NlIHdobyB3YW50IHRvCgkJCQkJZXN0YWJsaXNoIGFyaXN0b2NyYXRpYyBmb3JtcyBvZiBjb25zdGl0dXRpb24gbWFrZSBhIGdyZWF0IG1pc3Rha2Ugbm90IG9ubHkgaW4KCQkJCQlnaXZpbmcgdG9vIGxhcmdlIGEgc2hhcmUgdG8gdGhlIHdlbGwtdG8tZG8gYnV0IGFsc28gaW4gY2hlYXRpbmcgdGhlIHBlb3BsZTsgZm9yCgkJCQkJZmFsc2UgYmVuZWZpdHMgaW5ldml0YWJseSByZXN1bHQgdWx0aW1hdGVseSBpbiB0cnVlIGV2aWwsIGFzIHRoZSBlbmNyb2FjaG1lbnRzCgkJCQkJb2YgdGhlIHJpY2ggcnVpbiB0aGUgY29uc3RpdHV0aW9uIG1vcmUgdGhhbiB0aG9zZSBvZiB0aGUgcGVvcGxlLjxtaWxlc3RvbmUgZWQ9IlAiIG49IjEwLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZQoJCQkJCWFydGlmaWNlcyBlbXBsb3llZCBpbiBjb25zdGl0dXRpb25zIGFzIGEgcHJldGV4dCBpbiByZWdhcmQgdG8gdGhlIHBlb3BsZSBhcmUKCQkJCQlmaXZlIGluIG51bWJlciwgYW5kIGFyZSBjb25jZXJuZWQgd2l0aCB0aGUgYXNzZW1ibHksIHRoZSBtYWdpc3RyYWNpZXMsIHRoZQoJCQkJCWxhdy1jb3VydHMsIHRoZSBiZWFyaW5nIG9mIGhlYXZ5IGFybXMsIGFuZCBneW1uYXN0aWMgZXhlcmNpc2VzOyBpbiByZWxhdGlvbiB0bwoJCQkJCXRoZSBhc3NlbWJseSwgdGhlIGdyYW50aW5nIHRvIGFsbCBvZiB0aGUgcmlnaHQgdG8gYXR0ZW5kIGJ1dCB0aGUgaW1wb3NpdGlvbiBvZiBhCgkJCQkJZmluZSBmb3Igbm9uLWF0dGVuZGFuY2Ugb24gdGhlIHdlbGwtdG8tZG8gb25seSwgb3IgYSBtdWNoIGxhcmdlciBmaW5lIG9uIHRoZW0KCQkJCQl0aGFuIG90aGVyczsgaW4gcmVsYXRpb24gdG8gdGhlIG1hZ2lzdHJhY2llcyw8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRoZSBkZW5pYWwgdG8gdGhlIG93bmVycyBvZiByYXRlZCBwcm9wZXJ0eSBvZiB0aGUgcmlnaHQgdG8KCQkJCQlzd2VhciBvZmYgc2VydmluZywgd2hpbGUgdGhlIHBvb3IgaGF2ZSB0aGlzIHJpZ2h0OyBpbiByZWxhdGlvbiB0byB0aGUKCQkJCQlsYXctY291cnRzLCB0aGUgaW1wb3NpdGlvbiBvZiBhIGZpbmUgb24gdGhlIHdlbGwtdG8tZG8gaWYgdGhleSBkbyBub3Qgc2VydmUgb24gYQoJCQkJCWp1cnksIGJ1dCBubyBwZW5hbHR5IGZvciB0aGUgcG9vciwgb3IgZWxzZSBhIGxhcmdlIGZpbmUgZm9yIHRoZSBvbmUgY2xhc3MgYW5kIGEKCQkJCQlzbWFsbCBvbmUgZm9yIHRoZSBvdGhlcnMsIGFzIGluIHRoZSBsYXdzIG9mIENoYXJvbmRhcy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkluIHNvbWUgcGxhY2VzIGFsbCBoYXZlIHRoZSByaWdodCB0byBzZXJ2ZSBpbiB0aGUKCQkJCQlhc3NlbWJseSBhbmQgb24ganVyaWVzIGFmdGVyIGhhdmluZyB0aGVpciBuYW1lcyBwdXQgb24gYSByZWdpc3RlciwgYnV0IGxhcmdlCgkJCQkJZmluZXMgYXJlIGltcG9zZWQgb24gdGhvc2Ugd2hvIGFmdGVyIHNvIHJlZ2lzdGVyaW5nIGZhaWwgdG8gYXR0ZW5kIGluIGVpdGhlcgoJCQkJCWNhcGFjaXR5LCBpbiBvcmRlciB0aGF0IHRoZSBmaW5lIG1heSBjYXVzZSB0aGVtIHRvIGF2b2lkIHJlZ2lzdHJhdGlvbiBhbmQgdGhhdAoJCQkJCW93aW5nIHRvIHRoZWlyIG5vdCByZWdpc3RlcmluZyB0aGV5IG1heSBub3Qgc2VydmUgb24ganVyaWVzIG9yIGluIHRoZSBhc3NlbWJseS4KCQkJCQlUaGV5IGFsc28gbGVnaXNsYXRlIGluIHRoZSBzYW1lIG1hbm5lciBhYm91dCBvd25pbmcgaGVhdnkgYXJtcyBhbmQgZW5nYWdpbmcgaW4KCQkJCQlneW1uYXN0aWMgZXhlcmNpc2VzOiB0aGUgcG9vciBhcmUgbm90IGFsbG93ZWQgdG8gcG9zc2VzcyBhcm1zLCBidXQgdGhlCgkJCQkJd2VsbC10by1kbyBhcmUgbGlhYmxlIHRvIGEgZmluZSBpZiB0aGV5IGhhdmUgbm90IGdvdCB0aGVtLCBhbmQgdGhlcmUgaXMgbm8gZmluZQoJCQkJCWZvciB0aGUgZm9ybWVyIGNsYXNzIGlmIHRoZXkgYWJzdGFpbiBmcm9tIGd5bW5hc3RpY3MsIGJ1dCB0aGUgd2VsbC10by1kbyBhcmUKCQkJCQlsaWFibGUgdG8gYSBmaW5lLCBpbiBvcmRlciB0aGF0IHRoZSBvbmUgY2xhc3MgYmVjYXVzZSBvZiB0aGUgZmluZSBtYXkgdGFrZSBwYXJ0CgkJCQkJaW4gdGhlbSBhbmQgdGhlIG90aGVyIGJlY2F1c2UgdGhleSBoYXZlIG5vIHBlbmFsdHkgdG8gZmVhciBtYXkgbm90LiBUaGVzZQoJCQkJCWFydGlmaWNlcyBvZiBsZWdpc2xhdGlvbiB0aGVuIGFyZSBvZiBhbiBvbGlnYXJjaGljIG5hdHVyZTsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPmluIGRlbW9jcmFjaWVzIHRoZXkgaW50cm9kdWNlIGNvbnRyYXJ5IGRldmljZXMgaW4KCQkJCQlyZWdhcmQgdG8gdGhlc2UgbWF0dGVyczogdGhleSBwcm92aWRlIHBheSBmb3IgdGhlIHBvb3IgZm9yIHNlcnZpbmcgaW4gdGhlCgkJCQkJYXNzZW1ibHkgYW5kIG9uIGp1cmllcyBhbmQgaW1wb3NlIG5vIGZpbmUgdXBvbiB0aGUgd2VsbC10by1kbyBmb3IgYWJzdGFpbmluZy4KCQkJCQlIZW5jZSBpdCBpcyBtYW5pZmVzdCB0aGF0IGlmIGFueWJvZHkgd2lzaGVzIHRvIG1ha2UgYSBqdXN0IGJsZW5kLCBoZSBtdXN0IGJyaW5nCgkJCQkJdG9nZXRoZXIgdGhlIHJlZ3VsYXRpb25zIGV4aXN0aW5nIGluIGVhY2ggb2YgdGhlIHR3byBmb3JtcyBvZiBjb25zdGl0dXRpb24sIGFuZAoJCQkJCXByb3ZpZGUgcGF5IGZvciBhdHRlbmRhbmNlIGFuZCBhIGZpbmUgZm9yIG5vbi1hdHRlbmRhbmNlOyBmb3IgdGh1cyBhbGwgd291bGQKCQkJCQlwYXJ0aWNpcGF0ZSwgd2hlcmVhcyBpbiB0aGUgb3RoZXIgd2F5IHRoZSBnb3Zlcm5tZW50IGNvbWVzIHRvIGJlIGluIHRoZSBoYW5kcyBvZgoJCQkJCW9ubHkgb25lIG9mIHRoZSB0d28gY2xhc3Nlcy4gPG1pbGVzdG9uZSBuPSIxMjk3YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+QW5kIGFsdGhvdWdoIGl0IGlzIHByb3BlciB0aGF0IHRoZSBnb3Zlcm5tZW50CgkJCQkJc2hvdWxkIGJlIGRyYXduIG9ubHkgZnJvbSB0aG9zZSB3aG8gcG9zc2VzcyBoZWF2eSBhcm1vciwgeWV0IGl0IGlzIG5vdCBwb3NzaWJsZQoJCQkJCXRvIGRlZmluZSB0aGUgYW1vdW50IG9mIHRoZSBwcm9wZXJ0eS1xdWFsaWZpY2F0aW9uIGFic29sdXRlbHkgYW5kIHRvIHNheSB0aGF0CgkJCQkJdGhleSBtdXN0IHBvc3Nlc3Mgc28gbXVjaCwgYnV0IG9ubHkgdG8gY29uc2lkZXIgd2hhdCBzb3J0IG9mIGFtb3VudCBpcyB0aGUKCQkJCQloaWdoZXN0IHRoYXQgaXMgY29tcGF0aWJsZSB3aXRoIG1ha2luZyB0aG9zZSB3aG8gaGF2ZSBhIHNoYXJlIGluIHRoZQoJCQkJCWNvbnN0aXR1dGlvbiBtb3JlIG51bWVyb3VzIHRoYW4gdGhvc2Ugd2hvIGhhdmUgbm90LCBhbmQgdG8gZml4IHRoYXQgbGltaXQuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjEwLjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Gb3IgdGhvc2Ugd2hvIGFyZSBwb29yIGFuZCBoYXZlCgkJCQkJbm8gc2hhcmUgaW4gdGhlIGhvbm9ycyBhcmUgd2lsbGluZyB0byBrZWVwIHF1aWV0IGlmIG5vIG9uZSBpbnN1bHRzIHRoZW0gb3IgdGFrZXMKCQkJCQlhd2F5IGFueSBwYXJ0IG9mIHRoZWlyIHN1YnN0YW5jZTsgYnV0IHRoaXMgaXMgbm90IGVhc3kgdG8gc2VjdXJlLCBmb3IgaXQgZG9lcwoJCQkJCW5vdCBhbHdheXMgaGFwcGVuIHRoYXQgdGhvc2Ugd2hvIGFyZSBpbiB0aGUgZ292ZXJuaW5nIGNsYXNzIGFyZSBnZW50bGVtZW4uIEFsc28KCQkJCQlwZW9wbGUgaGF2ZSBhIHdheSBvZiBiZWluZyByZWx1Y3RhbnQgdG8gc2VydmUgd2hlbiB0aGVyZSBpcyBhIHdhciBpZiB0aGV5IGRvIG5vdAoJCQkJCWdldCByYXRpb25zIGFuZCBhcmUgcG9vciBtZW4gYnV0OyBpZiBzb21lYm9keSBwcm92aWRlcyBmb29kIHRoZXkgd2FudCB0byBmaWdodC4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JbiBzb21lIHN0YXRlcyB0aGUKCQkJCQljaXRpemVuLWJvZHkgY29uc2lzdHMgbm90IG9ubHkgb2YgdGhvc2Ugd2hvIGFyZSBzZXJ2aW5nIGFzIGhlYXZ5LWFybWVkIHNvbGRpZXJzLAoJCQkJCWJ1dCBhbHNvIG9mIHRob3NlIHdobyBoYXZlIHNvIHNlcnZlZDsgYW5kIGF0IE1hbGVhIHRoZSBjaXRpemVuLWJvZHkgY29uc2lzdGVkIG9mCgkJCQkJdGhlc2UsIHdoaWxlIHRoZSBtYWdpc3RyYXRlcyB3ZXJlIGVsZWN0ZWQgZnJvbSB0aG9zZSB3aG8gd2VyZSBhY3R1YWxseSBvbgoJCQkJCXNlcnZpY2UuIEFuZCBpbmRlZWQgdGhlIGVhcmxpZXN0IGZvcm0gb2YgY29uc3RpdHV0aW9uIGFtb25nIHRoZSBHcmVla3MgYWZ0ZXIgdGhlCgkJCQkJa2luZ3NoaXBzIGNvbnNpc3RlZCBvZiB0aG9zZSB3aG8gd2VyZSBhY3R1YWxseSBzb2xkaWVycywgdGhlIG9yaWdpbmFsIGZvcm0KCQkJCQljb25zaXN0aW5nIG9mIHRoZSBjYXZhbHJ5IO+8iGZvciB3YXIgaGFkIGl0cyBzdHJlbmd0aCBhbmQgaXRzCgkJCQkJcHJlLWVtaW5lbmNlIGluIGNhdmFscnksIHNpbmNlIHdpdGhvdXQgb3JkZXJseSBmb3JtYXRpb24gaGVhdnktYXJtZWQKCQkJCQkJaW5mYW50cnk8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmlzIHVzZWxlc3MsIGFuZCB0aGUKCQkJCQlzY2llbmNlcyBhbmQgc3lzdGVtcyBkZWFsaW5nIHdpdGggdGFjdGljcyBkaWQgbm90IGV4aXN0IGFtb25nIHRoZSBtZW4gb2Ygb2xkCgkJCQkJdGltZXMsIHNvIHRoYXQgdGhlaXIgc3RyZW5ndGggbGF5IGluIHRoZWlyIGNhdmFscnnvvIk7IGJ1dCBhcyB0aGUgc3RhdGVzCgkJCQkJZ3JldyBhbmQgdGhlIHdlYXJlcnMgb2YgaGVhdnkgYXJtb3IgaGFkIGJlY29tZSBzdHJvbmdlciwgbW9yZSBwZXJzb25zIGNhbWUgdG8KCQkJCQloYXZlIGEgcGFydCBpbiB0aGUgZ292ZXJubWVudC4gSGVuY2Ugd2hhdCB3ZSBub3cgY2FsbCBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50cwoJCQkJCXRoZSBtZW4gb2YgZm9ybWVyIHRpbWVzIGNhbGxlZCBkZW1vY3JhY2llczsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQgdGhlIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnRzIG9mIGVhcmx5IGRheXMgd2VyZQoJCQkJCW5hdHVyYWxseSBvbGlnYXJjaGljYWwgYW5kIHJveWFsLCBmb3Igb3dpbmcgdG8gdGhlIHNtYWxsbmVzcyBvZiB0aGUgcG9wdWxhdGlvbnMKCQkJCQl0aGVpciBtaWRkbGUgY2xhc3Mgd2FzIG5vdCBudW1lcm91cywgc28gdGhhdCBiZWNhdXNlIG9mIHRoZWlyIHNtYWxsIG51bWJlcnMgYXMKCQkJCQl3ZWxsIGFzIGluIGNvbmZvcm1pdHkgd2l0aCB0aGUgc3RydWN0dXJlIG9mIHRoZSBzdGF0ZSB0aGUgbWlkZGxlIGNsYXNzIG1vcmUKCQkJCQlyZWFkaWx5IGVuZHVyZWQgYmVpbmcgaW4gYSBzdWJqZWN0IHBvc2l0aW9uLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQKCQkJCQloYXMgdGhlbiBiZWVuIHNhaWQgd2hhdCBpcyB0aGUgcmVhc29uIG9mIHRoZXJlIGJlaW5nIHNldmVyYWwgZm9ybXMgb2YKCQkJCQljb25zdGl0dXRpb24sIGFuZCB3aHkgdGhlcmUgYXJlIG90aGVycyBiZXNpZGVzIHRob3NlIGRlc2lnbmF0ZWQgYnkgbmFtZQoJCQkJCe+8iGZvciB0aGVyZSBpcyBub3Qgb25lIHNpbmdsZSBkZW1vY3JhY3kgb25seSwgYW5kIHNpbWlsYXJseSB0aGVyZSBhcmUKCQkJCQltb3JlIHRoYW4gb25lIG9mIHRoZSBvdGhlciBmb3Jtc++8iSwgYW5kIGFsc28gd2hhdCBhcmUgdGhlIGRpZmZlcmVuY2VzCgkJCQkJYmV0d2VlbiB0aGVtIGFuZCB3aGF0IGlzIHRoZSByZWFzb24gd2h5IHRoZXNlIGRpZmZlcmVuY2VzIG9jY3VyLCBhbmQgaW4gYWRkaXRpb24KCQkJCQl0byB0aGVzZSBwb2ludHMsIHdoaWNoIGlzIHRoZSBiZXN0IG9mIHRoZSBjb25zdGl0dXRpb25zIHNwZWFraW5nIGdlbmVyYWxseSwgYW5kCgkJCQkJb2YgdGhlIG90aGVyIGNvbnN0aXR1dGlvbnMgd2hpY2ggc29ydCBpcyBzdWl0ZWQgdG8gd2hpY2ggc29ydCBvZgoJCQkJCQlwZW9wbGUuPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTEuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIGFnYWluLCBsZXQgdXMgc3BlYWsgYWJvdXQgdGhlIHBvaW50cyB0aGF0IGNvbWUgbmV4dCwgYm90aAoJCQkJCWdlbmVyYWxseSBhbmQgd2l0aCByZWZlcmVuY2UgdG8gZWFjaCBjb25zdGl0dXRpb24gc2VwYXJhdGVseSwgdGFraW5nIHRoZWlyCgkJCQkJYXBwcm9wcmlhdGUgc3RhcnRpbmctcG9pbnQuIEFsbCBmb3JtcyBvZiBjb25zdGl0dXRpb24gdGhlbiBoYXZlIHRocmVlIGZhY3RvcnMgaW4KCQkJCQlyZWZlcmVuY2UgdG8gd2hpY2ggdGhlIGdvb2QgbGF3Z2l2ZXIgaGFzIHRvIGNvbnNpZGVyIHdoYXQgaXMgZXhwZWRpZW50IGZvciBlYWNoCgkJCQkJY29uc3RpdHV0aW9uOyBhbmQgaWYgdGhlc2UgZmFjdG9ycyBhcmUgd2VsbC1vcmRlcmVkIHRoZSBjb25zdGl0dXRpb24gbXVzdCBvZgoJCQkJCW5lY2Vzc2l0eSBiZSB3ZWxsLW9yZGVyZWQsIGFuZCB0aGUgc3VwZXJpb3JpdHkgb2Ygb25lIGNvbnN0aXR1dGlvbiBvdmVyIGFub3RoZXIKCQkJCQluZWNlc3NhcmlseSBjb25zaXN0cyBpbiB0aGUgc3VwZXJpb3JpdHkgb2YgZWFjaCBvZiB0aGVzZSBmYWN0b3JzLiBPZiB0aGVzZSB0aHJlZQoJCQkJCWZhY3RvcnMgb25lIGlzLCB3aGF0IGlzIHRvIGJlIHRoZSBib2R5IHRoYXQgZGVsaWJlcmF0ZXMgYWJvdXQgdGhlIGNvbW1vbgoJCQkJCWludGVyZXN0cywgPG1pbGVzdG9uZSBuPSIxMjk4YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+c2Vjb25kIHRoZSBvbmUgY29ubmVjdGVkIHdpdGggdGhlIG1hZ2lzdHJhY2llcywgdGhhdCBpcywgd2hhdAoJCQkJCXRoZXJlIGFyZSB0byBiZSBhbmQgd2hhdCBtYXR0ZXJzIHRoZXkgYXJlIHRvIGNvbnRyb2wsIGFuZCB3aGF0IGlzIHRvIGJlIHRoZQoJCQkJCW1ldGhvZCBvZiB0aGVpciBlbGVjdGlvbiwgYW5kIGEgdGhpcmQgaXMsIHdoYXQgaXMgdG8gYmUgdGhlIGp1ZGljaWFyeS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBkZWxpYmVyYXRpdmUgZmFjdG9yIGlzIHNvdmVyZWlnbiBhYm91dCB3YXIgYW5kIHBlYWNlCgkJCQkJYW5kIHRoZSBmb3JtYXRpb24gYW5kIGRpc3NvbHV0aW9uIG9mIGFsbGlhbmNlcywgYW5kIGFib3V0IGxhd3MsIGFuZCBhYm91dAoJCQkJCXNlbnRlbmNlcyBvZiBkZWF0aCBhbmQgZXhpbGUgYW5kIGNvbmZpc2NhdGlvbiBvZiBwcm9wZXJ0eSwgYW5kIGFib3V0IHRoZSBhdWRpdHMKCQkJCQlvZiBtYWdpc3RyYXRlcy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTEuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBuZWNlc3NhcmlseQoJCQkJCWVpdGhlciBhbGwgdGhlc2UgZGVjaXNpb25zIG11c3QgYmUgYXNzaWduZWQgdG8gYWxsIHRoZSBjaXRpemVucywgb3IgYWxsIHRvIHNvbWUKCQkJCQlvZiB0aGVtIO+8iGZvciBpbnN0YW5jZSB0byBzb21lIG9uZSBtYWdpc3RyYWN5IG9yIHRvIHNldmVyYWzvvIksCgkJCQkJb3IgZGlmZmVyZW50IG9uZXMgdG8gZGlmZmVyZW50IG1hZ2lzdHJhY2llcywgb3Igc29tZSBvZiB0aGVtIHRvIGFsbCB0aGUgY2l0aXplbnMKCQkJCQlhbmQgc29tZSB0byBjZXJ0YWluIHBlcnNvbnMuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gb3IgYWxsIHRoZSBjaXRpemVucwoJCQkJCXRvIGJlIG1lbWJlcnMgb2YgdGhlIGRlbGliZXJhdGl2ZSBib2R5IGFuZCB0byBkZWNpZGUgYWxsIHRoZXNlIG1hdHRlcnMgaXMgYSBtYXJrCgkJCQkJb2YgYSBwb3B1bGFyIGdvdmVybm1lbnQsIGZvciB0aGUgY29tbW9uIHBlb3BsZSBzZWVrIGZvciBlcXVhbGl0eSBvZiB0aGlzIG5hdHVyZS4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTEuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGVyZSBhcmUgc2V2ZXJhbCBtb2RlcyBvZgoJCQkJCXN1Y2ggdW5pdmVyc2FsIG1lbWJlcnNoaXAuIE9uZSBpcyBmb3IgdGhlIGNpdGl6ZW5zIHRvIHNlcnZlIGluIHJvdGF0aW9uIGFuZCBub3QKCQkJCQlhbGwgaW4gYSBib2R5IO+8iGFzIGlzIGVuYWN0ZWQgaW4gdGhlIGNvbnN0aXR1dGlvbiBvZiB0aGUgTWlsZXNpYW4KCQkJCQkJVGVsZWNsZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PdGhlcndpc2UgdW5rbm93bjwvbm90ZT4gYW5kIGluCgkJCQkJb3RoZXIgY29uc3RpdHV0aW9ucyBhbHNvIHRoZSBib2FyZHMgb2YgbWFnaXN0cmF0ZXMgZGVsaWJlcmF0ZSBpbiBqb2ludAoJCQkJCWFzc2VtYmxpZXMgYnV0IGFsbCB0aGUgY2l0aXplbnMgZW50ZXIgaW50byB0aGUgbWFnaXN0cmFjaWVzIGZyb20gdGhlIHRyaWJlcyBvcgoJCQkJCWZyb20gdGhlIHZlcnkgc21hbGxlc3Qgc2VjdGlvbnMgb2YgdGhlIGNpdGl6ZW4tYm9keSBpbiByb3RhdGlvbiB1bnRpbCBvZmZpY2UgaGFzCgkJCQkJZ29uZSB0aHJvdWdoIHRoZSB3aG9sZSBib2R577yJLCBhbmQgZm9yIHRoZXJlIHRvIGJlIGpvaW50IGFzc2VtYmxpZXMgb25seQoJCQkJCXRvIGNvbnNpZGVyIGxlZ2lzbGF0aW9uIGFuZCByZWZvcm1zIG9mIHRoZSBjb25zdGl0dXRpb24gYW5kIHRvIGhlYXIgdGhlIHJlcG9ydHMKCQkJCQlzdWJtaXR0ZWQgYnkgdGhlIG1hZ2lzdHJhdGVzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMS40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5vdGhlciBtb2RlIGlzPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3IgYWxsIHRvIGFzc2VtYmxlCgkJCQkJaW4gYSBib2R5LCBidXQgb25seSBmb3IgdGhlIHB1cnBvc2Ugb2YgZWxlY3RpbmcgbWFnaXN0cmF0ZXMsIGVuYWN0aW5nIGxhd3MsCgkJCQkJY29uc2lkZXJpbmcgdGhlIGRlY2xhcmF0aW9uIG9mIHdhciBhbmQgdGhlIGNvbmNsdXNpb24gb2YgcGVhY2UgYW5kIGhvbGRpbmcgdGhlCgkJCQkJYXVkaXQgb2YgbWFnaXN0cmF0ZXMsIGJ1dCBmb3IgYWxsIG90aGVyIG1hdHRlcnMgdG8gYmUgY29uc2lkZXJlZCBieSB0aGUKCQkJCQltYWdpc3RyYXRlcyBhcHBvaW50ZWQgdG8gZGVhbCB3aXRoIGVhY2ggcmVzcGVjdGl2ZWx5IGFuZCBlbGVjdGVkIGJ5IHN1ZmZyYWdlIG9yCgkJCQkJYnkgbG90IGZyb20gYWxsIHRoZSBjaXRpemVucy4gQW5vdGhlciBtb2RlIGlzIGZvciB0aGUgY2l0aXplbnMgdG8gbWVldCBhYm91dCB0aGUKCQkJCQltYWdpc3RyYWNpZXMgYW5kIHRoZSBhdWRpdHMgYW5kIGluIG9yZGVyIHRvIGRlbGliZXJhdGUgYWJvdXQgZGVjbGFyaW5nIHdhciBhbmQKCQkJCQljb25jbHVkaW5nIGFuIGFsbGlhbmNlLCBidXQgZm9yIGFsbCBvdGhlciBtYXR0ZXJzIHRvIGJlIGRlYWx0IHdpdGggYnkgdGhlCgkJCQkJbWFnaXN0cmF0ZXMsIGVsZWN0ZWQgYnkgc3VmZnJhZ2UgaW4gYXMgbWFueSBjYXNlcyBhcyBjaXJjdW1zdGFuY2VzIGFsbG93LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBpbiBhbiBhZHZhbmNlZCBkZW1vY3JhY3kuPC9ub3RlPiBhbmQgc3VjaAoJCQkJCW1hZ2lzdHJhY2llcyBhcmUgYWxsIHRob3NlIHdoaWNoIG11c3Qgb2YgbmVjZXNzaXR5IGJlIGZpbGxlZCBieSBleHBlcnRzLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxMS41IiB1bml0PSJMb2ViIGNoYXAiIC8+QSBmb3VydGggbW9kZSBpcyBmb3IgYWxsIHRvCgkJCQkJbWVldCBpbiBjb3VuY2lsIGFib3V0IGFsbCBtYXR0ZXJzLCBhbmQgZm9yIHRoZSBtYWdpc3RyYWNpZXMgdG8gZGVjaWRlIGFib3V0CgkJCQkJbm90aGluZyBidXQgb25seSB0byBtYWtlIHByZWxpbWluYXJ5IGRlY2lzaW9uczsgdGhpcyBpcyB0aGUgbW9kZSBpbiB3aGljaAoJCQkJCWRlbW9jcmFjeSBpbiBpdHMgbGFzdCBmb3JtIGlzIGFkbWluaXN0ZXJlZCBhdCB0aGUgcHJlc2VudCBkYXnigJR0aGUgZm9ybQoJCQkJCW9mIGRlbW9jcmFjeSB3aGljaCB3ZSBwcm9ub3VuY2UgdG8gY29ycmVzcG9uZCB0byBkeW5hc3RpYyBvbGlnYXJjaHkgYW5kIHRvCgkJCQkJdHlyYW5uaWNhbCBtb25hcmNoeS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTEuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXNlIG1vZGVzCgkJCQkJdGhlbiBhcmUgYWxsIG9mIHRoZW0gZGVtb2NyYXRpYy4gT24gdGhlIG90aGVyIGhhbmQgZm9yIHNvbWUgcGVyc29ucyB0bwoJCQkJCWRlbGliZXJhdGUgdXBvbiBhbGwgbWF0dGVycyBpcyBvbGlnYXJjaGljLiBCdXQgdGhpcyBhbHNvIGhhcyBzZXZlcmFsIHZhcmlhdGlvbnMuCgkJCQkJRm9yIHdoZW4gdGhlIG1lbWJlcnMgb2YgdGhlIGRlbGliZXJhdGl2ZSBib2R5IGFyZSBlbGVjdGVkIG9uIGNvbXBhcmF0aXZlbHkKCQkJCQltb2RlcmF0ZSBwcm9wZXJ0eS1xdWFsaWZpY2F0aW9ucywgYW5kIHRoZSBlbGlnaWJsZSBwZXJzb25zIGFyZSBjb21wYXJhdGl2ZWx5CgkJCQkJbnVtZXJvdXMgYmVjYXVzZSBvZiB0aGUgbW9kZXJhdGVuZXNzIG9mIHRoZSBxdWFsaWZpY2F0aW9uLCBhbmQgd2hlbiB0aGV5IGRvIG5vdAoJCQkJCW1ha2UgY2hhbmdlcyBpbiB0aGluZ3MgaW4gd2hpY2ggdGhlIGxhdyBmb3JiaWRzIGl0IGJ1dCBmb2xsb3cgdGhlIGxhdywgYW5kIHdoZW4KCQkJCQlhbnlib2R5IGFjcXVpcmluZyB0aGUgcHJvcGVydHktcXVhbGlmaWNhdGlvbiBpcyBhbGxvd2VkIHRvIGJlY29tZSBhIG1lbWJlciwgYQoJCQkJCWNvbnN0aXR1dGlvbiBvZiB0aGlzIHNvcnQgaXMgaW5kZWVkIGFuIG9saWdhcmNoeSwgYnV0IG9uZSBvZiB0aGUgbmF0dXJlIG9mCgkJCQkJY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCwgYmVjYXVzZSBvZiBpdHMgbW9kZXJhdGlvbi4gV2hlbiBvbiB0aGUgb3RoZXIgaGFuZCBub3QKCQkJCQlldmVyeWJvZHkgdGh1cyBxdWFsaWZpZWQgcGFydGljaXBhdGVzIGluIGRlbGliZXJhdGlvbiBidXQgb25seSBjZXJ0YWluIHBlcnNvbnMKCQkJCQlwcmV2aW91c2x5IGNob3NlbiBieSBlbGVjdGlvbiwgPG1pbGVzdG9uZSBuPSIxMjk4YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+YW5kIHRoZXNlIGdvdmVybiBpbiBhY2NvcmRhbmNlIHdpdGggbGF3IGFzIGluCgkJCQkJdGhlIGZvcm1lciBjYXNlLCB0aGlzIGlzIG9saWdhcmNoaWNhbDsgYW5kIGFsc28gd2hlbiB0aGUgZGVsaWJlcmF0aXZlIG9mZmljaWFscwoJCQkJCWFyZSBlbGVjdGVkIGJ5IGNvLW9wdGF0aW9uLCBhbmQgd2hlbiB0aGUgb2ZmaWNlIGlzIGhlcmVkaXRhcnkgYW5kIGhhcyBzdXByZW1lCgkJCQkJY29udHJvbCBvdmVyIHRoZSBsYXdzLCB0aGlzIHN5c3RlbSBpcyBib3VuZCB0byBiZSBvbGlnYXJjaGljYWwuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjExLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgd2hlbiBjZXJ0YWluIHBlcnNvbnMgY29udHJvbCBjZXJ0YWluCgkJCQkJbWF0dGVycywgZm9yIGluc3RhbmNlIHdoZW4gYWxsIHRoZSBjaXRpemVucyBjb250cm9sIGRlY2lzaW9ucyBhcyB0byB3YXIgYW5kCgkJCQkJcGVhY2UgYW5kIHRoZSBhdWRpdCBvZiBvZmZpY2lhbHMgd2hpbGUgZXZlcnl0aGluZyBlbHNlIGlzIGNvbnRyb2xsZWQgYnkKCQkJCQltYWdpc3RyYXRlcyBhbmQgdGhlc2UgYXJlIGVsZWN0ZWQgYnkgdm90ZSwgbm90IGJ5IGxvdCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBNU1MuIGdpdmUg4oCYb3IgYnkgbG90LuKAmTwvbm90ZT4gdGhlCgkJCQkJY29uc3RpdHV0aW9uIGlzIGFuIGFyaXN0b2NyYWN5OyB3aGlsZSBpZiBzb21lIG1hdHRlcnMgYXJlIGNvbnRyb2xsZWQgYnkKCQkJCQltYWdpc3RyYXRlcyBlbGVjdGVkIGJ5IHZvdGUgYW5kIG90aGVycyBieSBtYWdpc3RyYXRlcyBjaG9zZW4gYnkgbG90LCBhbmQgdGhpcwoJCQkJCWVpdGhlciBkaXJlY3RseSBvciBmcm9tIGEgbGlzdCBwcmV2aW91c2x5IHNlbGVjdGVkIGJ5IHZvdGUsIG9yIGlmIG1hZ2lzdHJhdGVzCgkJCQkJZWxlY3RlZCBieSB2b3RlIGFuZCBieSBsb3Qgc2l0IGluIGEgam9pbnQgYm9keSwgc29tZSBvZiB0aGVzZSByZWd1bGF0aW9ucyBhcmUKCQkJCQlmZWF0dXJlcyBvZiBhbiBhcmlzdG9jcmF0aWMgY29uc3RpdHV0aW9uIGFuZCBvdGhlcnMgb2YgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudAoJCQkJCQlpdHNlbGYuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBoYXZlIHRoZW4gaW4gdGhpcyB3YXkgZGlzdGluZ3Vpc2hlZAoJCQkJCXRoZSBkaWZmZXJlbnQga2luZHMgb2YgZGVsaWJlcmF0aXZlIGJvZHkgaW4gcmVsYXRpb24gdG8gdGhlIGZvcm1zIG9mCgkJCQkJY29uc3RpdHV0aW9uLCBhbmQgZWFjaCBmb3JtIG9mIGNvbnN0aXR1dGlvbiBjYXJyaWVzIG9uIHRoZSBhZG1pbmlzdHJhdGlvbiBpbgoJCQkJCWFjY29yZGFuY2Ugd2l0aCB0aGUgZGlzdGluY3Rpb24gc3RhdGVkLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMS44IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGZvciBhIGRlbW9jcmFjeSBvZiB0aGUgZm9ybSB0aGF0IGF0IHRoZSBwcmVzZW50IGRheSBpcwoJCQkJCWNvbnNpZGVyZWQgdG8gYmUgZGVtb2NyYWN5IGluIHRoZSBmdWxsZXN0IGRlZ3JlZSDvvIhhbmQgSSBtZWFuIG9uZSBvZiB0aGUKCQkJCQlzb3J0IGluIHdoaWNoIHRoZSBwZW9wbGUgaXMgc292ZXJlaWduIGV2ZW4gb3ZlciB0aGUgbGF3c++8iSBpdCBpcwoJCQkJCWFkdmFudGFnZW91cyBmb3IgdGhlIGltcHJvdmVtZW50IG9mIGl0cyBkZWxpYmVyYXRpdmUgZnVuY3Rpb24gZm9yIGl0IHRvIGRvIHRoZQoJCQkJCXNhbWUgYXMgaXMgZG9uZSBpbiBvbGlnYXJjaGllcyBpbiB0aGUgbWF0dGVyIG9mIHRoZSBsYXctY291cnRzIO+8iGZvcgoJCQkJCXRoZXkgZW5hY3QgYSBmaW5lIHRvIGNvbXBlbCB0aGUgYXR0ZW5kYW5jZSBvbiBqdXJpZXMgb2YgdGhvc2Ugd2hvbSB0aGV5IHdhbnQgdG8KCQkJCQlhdHRlbmQsIHdoZXJlYXMgZGVtb2NyYXRpYyBzdGF0ZXMgaW5zdGl0dXRlIHBheW1lbnQgZm9yIGF0dGVuZGFuY2UgZm9yIHRoZQoJCQkJCWJlbmVmaXQgb2YgdGhlIHBvb3LvvIksIGFuZCBhbHNvIHRvIGRvIHRoaXMgaW4gcmVzcGVjdCBvZiB0aGUKCQkJCQkJYXNzZW1ibGllczxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+77yIZm9yIHRoZXkgd2lsbAoJCQkJCWRlbGliZXJhdGUgYmV0dGVyIHdoZW4gYWxsIGFyZSBkZWxpYmVyYXRpbmcgam9pbnRseSwgdGhlIGNvbW1vbiBwZW9wbGUgd2hlbiB3aXRoCgkJCQkJdGhlIG5vdGFibGVzIGFuZCB0aGVzZSB3aGVuIHdpdGggdGhlIG1hc3Nlc++8iSwgYW5kIGl0IGlzIGFsc28KCQkJCQlhZHZhbnRhZ2VvdXMgZm9yIHRob3NlIHdobyBkZWxpYmVyYXRlIHRvIGJlIGVsZWN0ZWQgYnkgdm90ZSBvciBieSBsb3QgZXF1YWxseQoJCQkJCWZyb20gdGhlIGRpZmZlcmVudCBzZWN0aW9ucywgYW5kLCBpZiB0aGUgbWVuIG9mIHRoZSBwZW9wbGUgZmFyIGV4Y2VlZCB0aGUKCQkJCQlwb2xpdGljYWwgY2xhc3MgaW4gbnVtYmVyLCBpdCBpcyBhZHZhbnRhZ2VvdXMgZWl0aGVyIG5vdCB0byBnaXZlIHBheSB0byBhbGwgYnV0CgkJCQkJb25seSB0byBhcyBtYW55IGFzIGFyZSBjb21tZW5zdXJhdGUgd2l0aCB0aGUgbnVtYmVyIG9mIHRoZSBub3RhYmxlcywgb3IgdG8KCQkJCQlkaXNjYXJkIGJ5IGxvdCB0aG9zZSB3aG8gZXhjZWVkIHRoaXMgbnVtYmVyLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMS45IiB1bml0PSJMb2ViIGNoYXAiIC8+SW4gb2xpZ2FyY2hpZXMgb24gdGhlIG90aGVyIGhhbmQgaXQgaXMgYWR2YW50YWdlb3VzIGVpdGhlcgoJCQkJCXRvIGNvLW9wdCBzb21lIHBlcnNvbnMgZnJvbSB0aGUgbXVsdGl0dWRlLCBvciB0byBpbnN0aXR1dGUgYW4gb2ZmaWNlIGxpa2UgdGhlCgkJCQkJb25lIHRoYXQgZXhpc3RzIGluIGNlcnRhaW4gY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudHMgdW5kZXIgdGhlIGZsYW1lIG9mCgkJCQkJUHJlbGltaW5hcnkgQ291bmNpbGxvcnMgb3IgR3VhcmRpYW5zIG9mIHRoZSBMYXcsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGVyZSB3ZXJlIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7PgM+B4b25zrLOv8+FzrvOv865PC9mb3JlaWduPiBhdAoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb3JpbnRoIiBrZXk9InBlcnNldXMsQ29yaW50aCI+Q29yaW50aDwvcGxhY2VOYW1lPiBhcyB3ZWxsIGFzIGEKCQkJCQkJCTxmb3JlaWduIGxhbmc9ImdyZWVrIj7Oss6/z4XOu+G9tTwvZm9yZWlnbj4gYW5kIGFuIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7hvJDOus66zrvOt8+D4b23zrE8L2ZvcmVpZ24+OyBhbmQgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs69zr/OvM6/z4bhvbvOu86xzrrOtc+CPC9mb3JlaWduPgoJCQkJCQlhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGFuZCBlbHNld2hlcmU6IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gdGhleSBzYXQgd2l0aCB0aGUgcHJlc2lkZW50cyBvZgoJCQkJCQl0aGUgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiBhbmQgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPuG8kM66zrrOu863z4PhvbfOsTwvZm9yZWlnbj4gdG8gY2hlY2sgaWxsZWdhbCBwcm9jZWR1cmUuPC9ub3RlPiBhbmQgZGVhbCB3aXRoCgkJCQkJdGhlIG1hdHRlcnMgYWJvdXQgd2hpY2ggdGhlc2Ugb2ZmaWNpYWxzIGhhdmUgaGVsZCBhIHByZWxpbWluYXJ5IGRlbGliZXJhdGlvbgoJCQkJCe+8iGZvciB0aHVzIHRoZSBjb21tb24gcGVvcGxlIHdpbGwgaGF2ZSBhIHNoYXJlIGluIGRlbGliZXJhdGlvbiBhbmQgd2lsbAoJCQkJCW5vdCBoYXZlIHRoZSBwb3dlciB0byBhYm9saXNoIGFueSBwYXJ0IG9mIHRoZSBjb25zdGl0dXRpb27vvIksIGFuZCB0aGVuCgkJCQkJZm9yIHRoZSBwZW9wbGUgYnkgdGhlaXIgdm90ZSBlaXRoZXIgdG8gY29uZmlybSBvciBhdCBhbGwgZXZlbnRzIG5vdCB0byBwYXNzCgkJCQkJYW55dGhpbmcgY29udHJhcnkgdG8gdGhlIHJlc29sdXRpb25zIGJyb3VnaHQgYmVmb3JlIHRoZW0sIG9yIHRvIGFsbG93IGFsbCB0bwoJCQkJCXRha2UgcGFydCBpbiBkZWJhdGUgYnV0IG9ubHkgdGhlIG1hZ2lzdHJhdGVzIHRvIGZyYW1lIHJlc29sdXRpb25zOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBpbiBmYWN0IGl0IGlzIHByb3BlciB0byBkbyBqdXN0IHRoZQoJCQkJCW9wcG9zaXRlIG9mIHdoYXQgdGFrZXMgcGxhY2UgaW4gY29uc3RpdHV0aW9uYWxseSBnb3Zlcm5lZCBzdGF0ZXM7IGZvciB0aGUgY29tbW9uCgkJCQkJcGVvcGxlIG91Z2h0IHRvIGJlIGdpdmVuIHBvd2VyIHRvIHZvdGUgdGhlIHJlamVjdGlvbiBvZiBhIG1lYXN1cmUsIGJ1dCBub3QgdG8KCQkJCQl2b3RlIGl0cyByYXRpZmljYXRpb24sIGJ1dCBpdCBzaG91bGQgYmUgcmVmZXJyZWQgYmFjayB0byB0aGUgbWFnaXN0cmF0ZXMuIEluCgkJCQkJY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudHMgdGhlIHByb2NlZHVyZSBpcyB0aGUgcmV2ZXJzZTsgdGhlIGZldyBhcmUgY29tcGV0ZW50CgkJCQkJdG8gdm90ZSB0aGUgcmVqZWN0aW9uIG9mIGEgcmVzb2x1dGlvbiBidXQgYXJlIG5vdCBjb21wZXRlbnQgdG8gdm90ZSBpdHMKCQkJCQlyYXRpZmljYXRpb24sIHRoaXMgYmVpbmcgYWx3YXlzIHJlZmVycmVkIGJhY2sgdG8gdGhlIG1vc3QgbnVtZXJvdXMgYm9keS4KCQkJCQkJPG1pbGVzdG9uZSBuPSIxMjk5YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZXQgdXMgdGhlbiBkZWNpZGUgaW4gdGhpcwoJCQkJCW1hbm5lciBhYm91dCB0aGUgZGVsaWJlcmF0aXZlIGJvZHksIHdoaWNoIGluIGZhY3QgaXMgdGhlIHNvdmVyZWlnbiBwb3dlciBpbiB0aGUKCQkJCQkJY29uc3RpdHV0aW9uLjxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkNvbm5lY3RlZCB3aXRoIHRoaXMgc3ViamVjdCBpcyB0aGUgZGV0ZXJtaW5hdGlvbiBpbiByZWdhcmQgdG8KCQkJCQl0aGUgbWFnaXN0cmFjaWVzIO+8iGZvciB0aGlzIHBhcnQgb2YgdGhlIGNvbnN0aXR1dGlvbiBhbHNvIGhhcyBtYW55CgkJCQkJdmFyaWV0aWVz77yJLCBob3cgbWFueSBtYWdpc3RyYWNpZXMgdGhlcmUgYXJlIHRvIGJlLCBhbmQgd2hhdCBhcmUgdG8gYmUKCQkJCQl0aGVpciBwb3dlcnMsIGFuZCB3aGF0IHRoZWlyIHZhcmlvdXMgcGVyaW9kcyBvZiB0ZW51cmUg77yIZm9yIHNvbWUgcGVvcGxlCgkJCQkJbWFrZSB0aGVpciBtYWdpc3RyYWNpZXMgdGVuYWJsZSBmb3Igc2l4IG1vbnRocywgb3RoZXJzIGZvciBsZXNzLCBvdGhlcnMgZm9yIGEKCQkJCQl5ZWFyIGFuZCBvdGhlcnMgZm9yIGEgbG9uZ2VyIHBlcmlvZO+8ieKAlHNoYWxsIHRoZSBtYWdpc3RyYWNpZXMKCQkJCQliZSBmb3IgbGlmZSBvciBmb3IgYSBsb25nIHBlcmlvZCwgb3IgaWYgZm9yIGEgc2hvcnRlciB0ZXJtIHNoYWxsIHRoZSBzYW1lIHBlb3BsZQoJCQkJCWJlIGFsbG93ZWQgdG8gaG9sZCB0aGVtIHNldmVyYWwgdGltZXMgb3Igbm90IHRoZSBzYW1lIG1hbiB0d2ljZSBidXQgb25jZSBvbmx5PwoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGFsc28gYXMgdG8gdGhlIGFwcG9pbnRtZW50CgkJCQkJb2YgbWFnaXN0cmF0ZXMsIHdobyBzaGFsbCBiZSBlbGlnaWJsZSwgd2hvIHRoZSBlbGVjdG9ycywgYW5kIHdoYXQgdGhlIG1vZGUgb2YKCQkJCQllbGVjdGlvbj8gRm9yIG9uIGFsbCB0aGVzZSBwb2ludHMgaXQgaXMgbmVlZGZ1bCB0byBiZSBhYmxlIHRvIGRldGVybWluZSBob3cgbWFueQoJCQkJCW1vZGVzIG9mIHByb2NlZHVyZSBhcmUgcG9zc2libGUsIGFuZCB0aGVuIHRvIHNldHRsZSB3aGF0IG1vZGVzIGFyZSBleHBlZGllbnQgZm9yCgkJCQkJd2hhdCBzb3J0cyBvZiBjb25zdGl0dXRpb24uIE5vciBpcyBpdCBlYXN5IHRvIGRlY2lkZSB0byB3aGF0IGtpbmRzIG9mIG9mZmljZSB0aGUKCQkJCQluYW1lIG9mIG1hZ2lzdHJhY3kgb3VnaHQgdG8gYmUgYXBwbGllZDsgZm9yIHRoZSBwb2xpdGljYWwgY29tbXVuaXR5IHJlcXVpcmVzIGEKCQkJCQlncmVhdCBtYW55IG9mZmljaWFscywgb3dpbmcgdG8gd2hpY2ggaXQgaXMgbm90IHByb3BlciB0byByZWNrb24gYWxsIG9mIHRoZW0KCQkJCQltYWdpc3RyYXRlcywgd2hldGhlciBlbGVjdGVkIGJ5IHZvdGUgb3IgYnkgbG90LOKAlGZvciBpbnN0YW5jZSBmaXJzdCB0aGUKCQkJCQlwcmllc3RzIO+8iGZvciB0aGlzIG9mZmljZSBtdXN0IGJlIGNvbnNpZGVyZWQgYXMgc29tZXRoaW5nIGRpZmZlcmVudCBmcm9tCgkJCQkJdGhlIHBvbGl0aWNhbCBtYWdpc3RyYWNpZXPvvIksIGFuZCBhZ2FpbiB0aGVyZSBhcmUgbGVhZGVycyBvZiBjaG9ydXNlcywKCQkJCQlhbmQgaGVyYWxkcywgYW5kIHBlcnNvbnMgYXJlIGFsc28gZWxlY3RlZCBhcyBhbWJhc3NhZG9ycy48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgb2YKCQkJCQl0aGUgb2ZmaWNlcyBleGVyY2lzaW5nIHN1cGVyaW50ZW5kZW5jZSBzb21lIGFyZSBwb2xpdGljYWwsIGFuZCBhcmUgZXhlcmNpc2VkCgkJCQkJZWl0aGVyIG92ZXIgdGhlIHdob2xlIG9mIHRoZSBjaXRpemVucyBpbiByZWdhcmQgdG8gc29tZSBvcGVyYXRpb27igJRmb3IKCQkJCQlpbnN0YW5jZSBhIGdlbmVyYWwgc3VwZXJpbnRlbmRzIHRoZW0gd2hlbiBzZXJ2aW5nIGFzIHNvbGRpZXJzLCBvciBvdmVyIGEKCQkJCQlzZWN0aW9u4oCUZm9yIGluc3RhbmNlIHRoZSBzdXBlcmludGVuZGVudCBvZiB3b21lbiBvciBvZiBjaGlsZHJlbjsgd2hpbGUKCQkJCQlvdGhlcnMgYXJlIGVjb25vbWljIO+8iGZvciBzdGF0ZXMgb2Z0ZW4gZWxlY3Qgb2ZmaWNlcnMgdG8gZG9sZSBvdXQKCQkJCQkJY29ybjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+RGlzdHJpYnV0aW9ucyBvZiBjb3JuIHdlcmUgbWFkZSBhdAoJCQkJCQl0aW1lcyBvZiBzY2FyY2l0eSwgb3Igd2hlbiB0aGUgc3RhdGUgaGFkIHJlY2VpdmVkIGEgcHJlc2VudCBvZgoJCQkJCWNvcm4uPC9ub3RlPu+8iTsgYW5kIG90aGVycyBhcmUgc3Vib3JkaW5hdGUsIGFuZCBhcmUgdGhlIHNvcnQgb2Ygc2VydmljZXMKCQkJCQl0byB3aGljaCBwZW9wbGUgd2hlbiB3ZWxsIG9mZiBhcHBvaW50IHNsYXZlcy4gQnV0IHRoZSB0aXRsZSBvZiBtYWdpc3RyYWN5LCB0bwoJCQkJCXB1dCBpdCBzaW1wbHksIGlzIGNoaWVmbHkgdG8gYmUgYXBwbGllZCB0byBhbGwgdGhvc2Ugb2ZmaWNlcyB0byB3aGljaCBoYXZlIGJlZW4KCQkJCQlhc3NpZ25lZCB0aGUgZHV0aWVzIG9mIGRlbGliZXJhdGluZyBhYm91dCBjZXJ0YWluIG1hdHRlcnMgYW5kIG9mIGFjdGluZyBhcwoJCQkJCWp1ZGdlcyBhbmQgb2YgaXNzdWluZyBvcmRlcnMsIGFuZCBlc3BlY2lhbGx5IHRoZSBsYXN0LCBmb3IgdG8gZ2l2ZSBvcmRlcnMgaXMKCQkJCQltb3N0IGNoYXJhY3RlcmlzdGljIG9mIGF1dGhvcml0eS4gQnV0IHRoaXMgcXVlc3Rpb24gaXMgb2YgdmlydHVhbGx5IG5vIHByYWN0aWNhbAoJCQkJCWltcG9ydGFuY2Ug77yIZm9yIG5vIGRlY2lzaW9uIGhhcyB5ZXQgYmVlbiBnaXZlbiwgb3VyIGRpc2N1c3Npb24gYmVpbmcKCQkJCQltZXJlbHkgYWJvdXQgdGhlIG5hbWXvvIksIGFsdGhvdWdoIGl0IGRvZXMgYWRtaXQgb2Ygc29tZSBmdXJ0aGVyIGlucXVpcnkKCQkJCQlvZiBhIHNwZWN1bGF0aXZlIGtpbmQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5PbiB0aGUgb3RoZXIKCQkJCQloYW5kIHRoZSBxdWVzdGlvbnMgd2hhdCBraW5kcyBhbmQgd2hhdCBudW1iZXIgb2YgbWFnaXN0cmFjaWVzIGFyZSBuZWNlc3NhcnkgdG8KCQkJCQljb25zdGl0dXRlIGEgc3RhdGUgYXQgYWxsLCBhbmQgd2hhdCBraW5kcyBhbHRob3VnaCBub3QgbmVjZXNzYXJ5IGFyZQoJCQkJCWFkdmFudGFnZW91cyBmb3IgYSBnb29kIGNvbnN0aXR1dGlvbiwgYXJlIHF1ZXN0aW9ucyB0aGF0IG1pZ2h0IHByZWZlcmFibHkgYmUKCQkJCQlkaXNjdXNzZWQsIGJvdGggaW5kZWVkIGFzIHJlZ2FyZHMgZXZlcnkgZm9ybSBvZiBjb25zdGl0dXRpb24gYW5kIHBhcnRpY3VsYXJseSBpbgoJCQkJCXJlZ2FyZCB0byB0aGUgc21hbGwgc3RhdGVzLiBGb3IgaXQgaXMgdHJ1ZSB0aGF0IGluIHRoZSBsYXJnZSBzdGF0ZXMgaXQgaXMKCQkJCQlwb3NzaWJsZSBhbmQgcHJvcGVyIGZvciBvbmUgbWFnaXN0cmFjeSB0byBiZSBhc3NpZ25lZCB0byBvbmUgZnVuY3Rpb24KCQkJCQnvvIhmb3IgdGhlIGxhcmdlIG51bWJlciBvZiB0aGUgY2l0aXplbnMgbWFrZXMgaXQgcG9zc2libGUgZm9yIG1hbnkgcGVvcGxlCgkJCQkJdG8gZW50ZXIgb24gYW4gb2ZmaWNpYWwgY2FyZWVyLCBzbyBhcyB0byBpbnRlcm1pdCB0aGVpciB0ZW51cmUgb2Ygc29tZSBvZmZpY2VzCgkJCQkJZm9yIGEgbG9uZyB0aW1lIGFuZCB0byBob2xkIG90aGVycyBvbmx5IG9uY2UsIGFuZCBhbHNvIGV2ZXJ5IHRhc2sgaXMgYmV0dGVyCgkJCQkJYXR0ZW5kZWQgdG8gaWYgdGhlIGF0dGVudGlvbiBpcyBkaXJlY3RlZCB0byBvbmUgdGhpbmcgb25seSB0aGFuIGlmIGl0IGlzIGJ1c3kKCQkJCQl3aXRoIG1hbnnvvIk7IDxtaWxlc3RvbmUgbj0iMTI5OWIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQgaW4KCQkJCQl0aGUgc21hbGwgc3RhdGVzIGl0IGlzIGluZXZpdGFibGUgdGhhdCBtYW55IG9mZmljZXMgbXVzdCBiZSBnYXRoZXJlZCBpbnRvIGZldwoJCQkJCWhhbmRzIO+8iGZvciBvd2luZyB0byBzaG9ydGFnZSBvZiBtYW5wb3dlciBpdCBpcyBub3QgZWFzeSBmb3IgbWFueSBwZW9wbGUKCQkJCQl0byBiZSBpbiBvZmZpY2UsIHNpbmNlIHdobyB3aWxsIHRha2Ugb3ZlciB0aGUgcG9zdHMgYXMgdGhlaXIKCQkJCQlzdWNjZXNzb3JzP++8iS4gQnV0IHNvbWV0aW1lcyBzbWFsbCBzdGF0ZXMgcmVxdWlyZSB0aGUgc2FtZSBtYWdpc3RyYWNpZXMKCQkJCQlhbmQgbGF3cyBhcyBsYXJnZSBvbmVzIGV4Y2VwdCB0aGF0IHRoZSBsYXR0ZXIgcmVxdWlyZSB0aGUgc2FtZSBwZXJzb25zIHRvIHNlcnZlCgkJCQkJb2Z0ZW4sIGJ1dCBpbiB0aGUgZm9ybWVyIHRoaXMgb25seSBvY2N1cnMgYWZ0ZXIgYSBsb25nIGludGVydmFsLiBIZW5jZSBpdCBpcwoJCQkJCXBvc3NpYmxlIHRvIGFzc2lnbiBzZXZlcmFsIGR1dGllcyB0byBvbmUgbWFuIGF0IHRoZSBzYW1lIHRpbWUg77yIc2luY2UKCQkJCQl0aGV5IHdpbGwgbm90IGludGVyZmVyZSB3aXRoIG9uZSBhbm90aGVy77yJLCBhbmQgdG8gbWVldCB0aGUgc2hvcnRhZ2Ugb2YKCQkJCQltYW4tcG93ZXIgaXQgaXMgbmVjZXNzYXJ5IHRvIG1ha2UgdGhlIG1hZ2lzdHJhY2llcyBsaWtlIHNwaXQtbGFtcGhvbGRlcnMuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BbiBpbXBsZW1lbnQg77yIaXRzIGV4YWN0IHNoYXBlIGRvZXMKCQkJCQkJbm90IGFwcGVhciB0byBiZSBrbm93bu+8iSB1c2VkIGJ5IHNvbGRpZXJzIG9uIGNhbXBhaWduLCBoZXJlCgkJCQkJCW1lbnRpb25lZCBhcyBhbiBpbGx1c3RyYXRpb24gb2Ygb25lIHRvb2wgc2VydmluZyB0d28gcHVycG9zZXMsIGNmLiAxMjUyYgoJCQkJCQkxLjwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxMi42IiB1bml0PSJMb2ViIGNoYXAiIC8+SWYgdGhlcmVmb3JlIHdlIGFyZSBhYmxlIHRvIHNheSBob3cKCQkJCQltYW55IG1hZ2lzdHJhY2llcyBldmVyeSBzdGF0ZSBtdXN0IG5lY2Vzc2FyaWx5IHBvc3Nlc3MgYW5kIGhvdyBtYW55LCB0aG91Z2ggbm90CgkJCQkJYWJzb2x1dGVseSBuZWNlc3NhcnksIGl0IG91Z2h0IHRvIHBvc3Nlc3MsIGtub3dpbmcgdGhlc2UgcG9pbnRzIG9uZSBtaWdodCBtb3JlCgkJCQkJZWFzaWx5IG1ha2UgYSBjb21iaW5hdGlvbiBvZiB0aG9zZSBtYWdpc3RyYWNpZXMgd2hpY2ggYXJlIG9mIGEgc3VpdGFibGUgbmF0dXJlCgkJCQkJdG8gYmUgY29tYmluZWQgaW50byBhIHNpbmdsZSBvZmZpY2UuIEFuZCBpdCBpcyBzdWl0YWJsZSBmb3IgdGhlIGZ1cnRoZXIgcXVlc3Rpb24KCQkJCQlub3QgdG8gYmUgb3Zlcmxvb2tlZCwgd2hhdCBraW5kcyBvZiBtYXR0ZXJzIG91Z2h0IHRvIGJlIGF0dGVuZGVkIHRvIGJ5IGEgbnVtYmVyCgkJCQkJb2Ygb2ZmaWNpYWxzIGxvY2FsbHkgZGlzdHJpYnV0ZWQgYW5kIHdoYXQgb3VnaHQgdG8gYmUgdW5kZXIgdGhlIGF1dGhvcml0eSBvZiBvbmUKCQkJCQltYWdpc3RyYXRlIGZvciBhbGwgbG9jYWxpdGllcywgZm9yIGV4YW1wbGUgc2hvdWxkIGdvb2Qgb3JkZXIgYmUgc2VlbiB0byBpbiB0aGUKCQkJCQltYXJrZXQtcGxhY2UgYnkgYSBDb250cm9sbGVyIG9mIHRoZSBNYXJrZXQgYW5kIGVsc2V3aGVyZSBieSBhbm90aGVyIG9mZmljaWFsLCBvcgoJCQkJCWV2ZXJ5d2hlcmUgYnkgdGhlIHNhbWUgb25lPyBhbmQgb3VnaHQgdGhlIG9mZmljZXMgdG8gYmUgZGl2aWRlZCBhY2NvcmRpbmcgdG8gdGhlCgkJCQkJZnVuY3Rpb24gb3IgYWNjb3JkaW5nIHRvIHRoZSBwZXJzb25zIGNvbmNlcm5lZOKAlEkgbWVhbiwgZm9yIGluc3RhbmNlLAoJCQkJCXNob3VsZCB0aGVyZSBiZSBhIHNpbmdsZSBvZmZpY2lhbCBpbiBjb250cm9sIG9mIGdvb2Qgb3JkZXIsIG9yIGEgZGlmZmVyZW50CgkJCQkJCW9uZTxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+Zm9yIGNoaWxkcmVuIGFuZCBmb3Igd29tZW4/CgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgYWxzbyB1bmRlciB0aGUgdmFyaW91cwoJCQkJCWNvbnN0aXR1dGlvbnMgZG9lcyB0aGUgbmF0dXJlIG9mIHRoZSBtYWdpc3RyYWNpZXMgdmFyeSBpbiBhY2NvcmRhbmNlIHdpdGggZWFjaAoJCQkJCW9yIGRvZXMgaXQgbm90IHZhcnkgYXQgYWxs4oCUZm9yIGV4YW1wbGUgaW4gZGVtb2NyYWN5LCBvbGlnYXJjaHksCgkJCQkJYXJpc3RvY3JhY3kgYW5kIG1vbmFyY2h5IGFyZSB0aGUgbWFnaXN0cmFjaWVzIHRoZSBzYW1lIGluIHRoZWlyIHBvd2VycywgYWx0aG91Z2gKCQkJCQl0aGV5IGFyZSBub3QgZmlsbGVkIGZyb20gZXF1YWwgcmFua3Mgbm9yIGZyb20gc2ltaWxhciBjbGFzc2VzIGJ1dCBhcmUgZGlmZmVyZW50CgkJCQkJaW4gZGlmZmVyZW50IGNvbnN0aXR1dGlvbnMg77yIZm9yIGV4YW1wbGUgaW4gYXJpc3RvY3JhY2llcyBkcmF3biBmcm9tIHRoZQoJCQkJCWVkdWNhdGVkLCBpbiBvbGlnYXJjaGllcyBmcm9tIHRoZSB3ZWFsdGh5LCBhbmQgaW4gZGVtb2NyYWNpZXMgZnJvbSB0aGUKCQkJCQlmcmVl77yJLCBvciBhbHRob3VnaCBzb21lIGNvbnN0aXR1dGlvbnMgaGFwcGVuIHRvIGJlIGNvcnJlc3BvbmRlbnQgd2l0aAoJCQkJCXRoZSBhY3R1YWwgZGlmZmVyZW5jZXMgb2YgdGhlaXIgbWFnaXN0cmFjaWVzLCB5ZXQgaW4gb3RoZXIgY2FzZXMgYXJlIHRoZSBzYW1lCgkJCQkJbWFnaXN0cmFjaWVzIGFkdmFudGFnZW91cyBldmVuIHdoZXJlIHRoZSBjb25zdGl0dXRpb25zIGRpZmZlciDvvIhmb3IgaW4KCQkJCQlzb21lIHBsYWNlcyBpdCBpcyBzdWl0YWJsZSBmb3IgdGhlIHNhbWUgbWFnaXN0cmFjaWVzIHRvIGhhdmUgbGFyZ2UgZnVuY3Rpb25zIGFuZAoJCQkJCWluIG90aGVyIHBsYWNlcyBzbWFsbCBvbmVz77yJPyA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMi44IiB1bml0PSJMb2ViIGNoYXAiIC8+Tm90IGJ1dCB3aGF0IHRoZXJlIGFyZSBhbHNvIHNvbWUgb2ZmaWNlcyBwZWN1bGlhciB0bwoJCQkJCXNwZWNpYWwgZm9ybXMgb2YgY29uc3RpdHV0aW9uLCBmb3IgaW5zdGFuY2UgdGhlIG9mZmljZSBvZiBQcmVsaW1pbmFyeQoJCQkJCQlDb3VuY2lsbG9ycy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMjk4YiAyOSBuLjwvbm90ZT4gVGhpcwoJCQkJCWlzIHVuZGVtb2NyYXRpYywgYWx0aG91Z2ggYSBDb3VuY2lsIGlzIGEgcG9wdWxhciBib2R5LCBmb3IgdGhlcmUgaXMgYm91bmQgdG8gYmUKCQkJCQlzb21lIGJvZHkgb2YgdGhpcyBuYXR1cmUgdG8gaGF2ZSB0aGUgZHV0eSBvZiBwcmVwYXJpbmcgbWVhc3VyZXMgZm9yIHRoZSBwb3B1bGFyCgkJCQkJYXNzZW1ibHksIGluIG9yZGVyIHRoYXQgaXQgbWF5IGJlIGFibGUgdG8gYXR0ZW5kIHRvIGl0cyBidXNpbmVzczsgYnV0IGEKCQkJCQlwcmVwYXJhdG9yeSBjb21taXR0ZWUsIGlmIHNtYWxsLCBpcyBvbGlnYXJjaGljYWwsIGFuZCBQcmVsaW1pbmFyeSBDb3VuY2lsbG9ycwoJCQkJCW11c3QgbmVjZXNzYXJpbHkgYmUgZmV3IGluIG51bWJlciwgc28gdGhhdCB0aGV5IGFyZSBhbiBvbGlnYXJjaGljYWwgZWxlbWVudC4gQnV0CgkJCQkJd2hlcmUgYm90aCBvZiB0aGVzZSBtYWdpc3RyYWNpZXMgZXhpc3QsIHRoZSBQcmVsaW1pbmFyeSBDb3VuY2lsbG9ycyBhcmUgaW4KCQkJCQlhdXRob3JpdHkgb3ZlciB0aGUgQ291bmNpbGxvcnMsIHNpbmNlIGEgY291bmNpbGxvciBpcyBhIGRlbW9jcmF0aWMgb2ZmaWNpYWwsIGJ1dAoJCQkJCWEgcHJlbGltaW5hcnkgY291bmNpbGxvciBpcyBhbiBvbGlnYXJjaGljIG9uZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTIuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFsc28gdGhlIHBvd2VyIG9mIHRoZSBDb3VuY2lsIGlzIHdlYWtlbmVkIGluIGRlbW9jcmFjaWVzCgkJCQkJb2YgdGhlIHNvcnQgaW4gd2hpY2ggdGhlIHBlb3BsZSBpbiBhc3NlbWJseSBkZWFscyB3aXRoIGV2ZXJ5dGhpbmcgaXRzZWxmOwoJCQkJCQk8bWlsZXN0b25lIG49IjEzMDBhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5hbmQgdGhpcyB1c3VhbGx5IGhhcHBlbnMgd2hlbiB0aGVyZSBpcyBhIHBsZW50aWZ1bCBzdXBwbHkgb2YKCQkJCQlwYXkgZm9yIHRob3NlIHdobyBhdHRlbmQgdGhlIGFzc2VtYmx5LCBmb3IgYmVpbmcgYXQgbGVpc3VyZSB0aGV5IG1lZXQgZnJlcXVlbnRseQoJCQkJCWFuZCBkZWNpZGUgYWxsIHRoaW5ncyB0aGVtc2VsdmVzLiBCdXQgYSBTdXBlcmludGVuZGVudCBvZiBDaGlsZHJlbiBhbmQgYQoJCQkJCVN1cGVyaW50ZW5kZW50IG9mIFdvbWVuLCBhbmQgYW55IG90aGVyIG1hZ2lzdHJhdGVzIHRoYXQgZXhlcmNpc2UgYSBzaW1pbGFyIHNvcnQKCQkJCQlvZiBzdXBlcnZpc2lvbiwgYXJlIGFuIGFyaXN0b2NyYXRpYyBmZWF0dXJlLCBhbmQgbm90IGRlbW9jcmF0aWMg77yIZm9yCgkJCQkJaG93IGlzIGl0IHBvc3NpYmxlIHRvIHByZXZlbnQgdGhlIHdpdmVzIG9mIHRoZSBwb29yIGZyb20gZ29pbmcgb3V0IG9mIGRvb3JzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciBwb3NzaWJseSDigJhmcm9tIGdvaW5nIGluCgkJCQkJCXByb2Nlc3Npb25z4oCZOiBTb2xvbiBtYWRlIHJlZ3VsYXRpb25zIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7PhM6x4b+Wz4IKCQkJCQkJCeG8kM6+4b25zrTOv865z4Igz4Thv7bOvSDOs8+Fzr3Osc65zrrhv7bOvSDOus6x4b22IM+Ezr/hv5bPgiDPgOG9s869zrjOtc+DzrkgzrrOseG9tiDPhM6x4b+Wz4IKCQkJCQkJCeG8kc6/z4HPhM6x4b+Wz4I8L2ZvcmVpZ24+77yIPGJpYmwgZGVmYXVsdD0iTk8iIG49IlBsdXQuIFNvbC4gMjEiIHZhbGlkPSJ5ZXMiPlBsdXQuIFNvbC4KCQkJCQkJCTIxPC9iaWJsPu+8iS48L25vdGU+P++8iSBub3IgeWV0IG9saWdhcmNoaWMg77yIZm9yCgkJCQkJdGhlIHdpdmVzIG9mIG9saWdhcmNoaWMgcnVsZXJzIGFyZSBsdXh1cmlvdXPvvIkuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGxldCB0aGUgZGlzY3Vzc2lvbiBvZiB0aGVzZSBtYXR0ZXJzIGdvIG5vCgkJCQkJZnVydGhlciBhdCBwcmVzZW50LCBhbmQgbGV0IHVzIGF0dGVtcHQgdG8gZ28gdGhyb3VnaCBmcm9tIHRoZSBiZWdpbm5pbmcgdGhlCgkJCQkJcXVlc3Rpb24gb2YgdGhlIHdheXMgb2YgYXBwb2ludGluZyB0aGUgbWFnaXN0cmF0ZXMuIFRoZSB2YXJpZXRpZXMgaGVyZSBkZXBlbmQgb24KCQkJCQl0aHJlZSBkZXRlcm1pbmFudHMsIHRoZSBjb21iaW5hdGlvbnMgb2Ygd2hpY2ggbXVzdCBnaXZlIGFsbCB0aGUgcG9zc2libGUgbW9kZXMuCgkJCQkJT25lIG9mIHRoZXNlIHRocmVlIGRldGVybWluaW5nIHBvaW50cyBpcywgd2hvIGFyZSB0aGUgcGVyc29ucyB3aG8gYXBwb2ludCB0aGUKCQkJCQltYWdpc3RyYXRlcz8gdGhlIHNlY29uZCBpcywgZnJvbSB3aG9tPyBhbmQgbGFzdCwgaW4gd2hhdCBtYW5uZXI/IEFuZCBvZiBlYWNoIG9mCgkJCQkJdGhlc2UgdGhyZWUgZGV0ZXJtaW5hbnRzIHRoZXJlIGFyZSB0aHJlZSB2YXJpYXRpb25zOiBlaXRoZXIgYWxsIHRoZSBjaXRpemVucwoJCQkJCWFwcG9pbnQgb3Igc29tZSwgYW5kIGVpdGhlciBmcm9tIGFsbCBvciBmcm9tIGEgY2VydGFpbiBjbGFzcyDvvIhkZWZpbmVkCgkJCQkJZm9yIGluc3RhbmNlIGJ5IHByb3BlcnR5LWFzc2Vzc21lbnQgb3IgYmlydGggb3IgdmlydHVlIG9yIHNvbWUgb3RoZXIgc3VjaAoJCQkJCXF1YWxpZmljYXRpb24sIGFzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWVnYXJhIiBrZXk9InBlcnNldXMsTWVnYXJhIj5NZWdhcmE8L3BsYWNlTmFtZT4gb25seQoJCQkJCXRob3NlIHdlcmUgZWxpZ2libGUgd2hvIHJldHVybmVkIGluIGEgYm9keSBmcm9tIGV4aWxlIGFuZCBmb3VnaHQgdG9nZXRoZXIKCQkJCQlhZ2FpbnN0IHRoZSBjb21tb24gcGVvcGxl77yJLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SXQgaXMKCQkJCQkJcXVpdGUgdW5jZXJ0YWluIHdoZW4gdGhpcyBldmVudCB0b29rIHBsYWNlIGFuZCB3aGV0aGVyIGl0IGlzIHRoZSBzYW1lIGFzCgkJCQkJCXRob3NlIHJlZmVycmVkIHRvIGF0IDEzMDJiIDMwIGYuIGFuZCBsMzA0YiAzNCBmZi48L25vdGU+IGFuZCB0aGUgbW9kZSBvZgoJCQkJCWFwcG9pbnRtZW50IG1heSBiZSBlaXRoZXIgYnkgdm90ZSBvciBieSBsb3Q7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjExIiB1bml0PSJMb2ViIGNoYXAiIC8+YWdhaW4sIHRoZXNlIHN5c3RlbXMgbWF5IGJlIGNvdXBsZWQKCQkJCQkJdG9nZXRoZXLigJQ8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPkkgbWVhbiB0aGF0CgkJCQkJc29tZSBjaXRpemVucyBtYXkgYXBwb2ludCB0byBzb21lIG9mZmljZXMgYnV0IGFsbCB0byBvdGhlcnMsIGFuZCB0byBzb21lIG9mZmljZXMKCQkJCQlhbGwgY2l0aXplbnMgbWF5IGJlIGVsaWdpYmxlIGJ1dCB0byBvdGhlcnMgb25seSBhIGNlcnRhaW4gY2xhc3MsIGFuZCB0byBzb21lCgkJCQkJYXBwb2ludG1lbnQgbWF5IGJlIGJ5IHZvdGUgYnV0IHRvIG90aGVycyBieSBsb3QuIEFuZCBvZiBlYWNoIHZhcmlhdGlvbiBvZiB0aGVzZQoJCQkJCWRldGVybWluYW50cyB0aGVyZSB3aWxsIGJlIGZvdXIgbW9kZXM6IGVpdGhlciBhbGwgY2l0aXplbnMgbWF5IGFwcG9pbnQgZnJvbSBhbGwKCQkJCQlieSB2b3RlLCBvciBhbGwgZnJvbSBhbGwgYnkgbG904oCUYW5kIGZyb20gYWxsIGVpdGhlciBzZWN0aW9uIGJ5CgkJCQkJc2VjdGlvbiwgZm9yIGluc3RhbmNlIGJ5IHRyaWJlcyBvciBkZW1lcyBvciBicm90aGVyaG9vZHMgdW50aWwgdGhlIHByb2NlZHVyZSBoYXMKCQkJCQlnb25lIHRocm91Z2ggYWxsIHRoZSBjaXRpemVucywgb3IgZnJvbSB0aGUgd2hvbGUgbnVtYmVyIGV2ZXJ5IHRpbWUs4oCUb3IKCQkJCQllbHNlIHBhcnRseSBpbiBvbmUgd2F5IGFuZCBwYXJ0bHkgaW4gdGhlIG90aGVyLiBBZ2FpbiwgaWYgdGhlIGVsZWN0b3JzIGFyZSBzb21lCgkJCQkJb2YgdGhlIGNpdGl6ZW5zLCB0aGV5IG11c3QgZWl0aGVyIGFwcG9pbnQgZnJvbSBhbGwgYnkgdm90ZSwgb3IgZnJvbSBhbGwgYnkgbG90LAoJCQkJCW9yIGZyb20gc29tZSBieSB2b3RlLCBvciBmcm9tIHNvbWUgYnkgbG90LCBvciBwYXJ0bHkgaW4gb25lIHdheSBhbmQgcGFydGx5IGluCgkJCQkJdGhlIG90aGVy4oCUSSBtZWFuIHBhcnRseSBieSB2b3RlIGFuZCBwYXJ0bHkgYnkgbG90LiBIZW5jZSB0aGUgbW9kZXMKCQkJCQlwcm92ZSB0byBiZSB0d2VsdmUsIGFwYXJ0IGZyb20gdGhlIHR3byBjb21iaW5hdGlvbnMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGFtb25nIHRoZXNlLCB0d28gd2F5cyBvZiBhcHBvaW50bWVudCBhcmUKCQkJCQlkZW1vY3JhdGlj4oCUZm9yIGFsbCB0byBhcHBvaW50IGZyb20gYWxsIGJ5IHZvdGUsIG9yIGJ5IGxvdCwgb3IgYnkKCQkJCQlib3Ro4oCUc29tZSBvZmZpY2VzIGJ5IGxvdCBhbmQgb3RoZXJzIGJ5IHZvdGU7IGJ1dCBmb3Igbm90IGFsbCB0byBiZSB0aGUKCQkJCQllbGVjdG9ycyBhbmQgZm9yIHRoZW0gdG8gYXBwb2ludCBzaW11bHRhbmVvdXNseSwgYW5kIGVpdGhlciBmcm9tIGFsbCBvciBmcm9tCgkJCQkJc29tZSBlaXRoZXIgYnkgbG90IG9yIGJ5IHZvdGUgb3IgYnkgYm90aCwgb3Igc29tZSBvZmZpY2VzIGZyb20gYWxsIGFuZCBvdGhlcnMKCQkJCQlmcm9tIHNvbWUgYnkgYm90aCDvvIhieSB3aGljaCBJIG1lYW4gc29tZSBieSBsb3QgYW5kIG90aGVycyBieQoJCQkJCXZvdGXvvIkgaXMgY29uc3RpdHV0aW9uYWwuIEFuZCBmb3Igc29tZSB0byBhcHBvaW50IGZyb20gYWxsLCB0byBzb21lCgkJCQkJb2ZmaWNlcyBieSB2b3RlIGFuZCB0byBvdGhlcnMgYnkgbG90IG9yIGJ5IGJvdGg8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdGhlIEdyZWVrIHNob3VsZCBiZSByZXdyaXR0ZW4gdG8gZ2l2ZSDigJhmb3IKCQkJCQkJc29tZSB0byBhcHBvaW50IGZyb20gYWxsIGVpdGhlciBieSB2b3RlIG9yIGJ5IGxvdCBvciBieQoJCQkJCQlib3RoLuKAmTwvbm90ZT4g77yIdG8gc29tZSBieSBsb3QgYW5kIHRvIG90aGVycyBieQoJCQkJCXZvdGXvvIkgaXMgb2xpZ2FyY2hpY2FsOyBhbmQgaXQgaXMgZXZlbiBtb3JlIG9saWdhcmNoaWNhbCB0byBhcHBvaW50IGZyb20KCQkJCQlib3RoIGNsYXNzZXMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRvIGFwcG9pbnQgc29tZQoJCQkJCW9mZmljZXMgZnJvbSBhbGwgYW5kIHRoZSBvdGhlcnMgZnJvbSBhIGNlcnRhaW4gY2xhc3MgaXMgY29uc3RpdHV0aW9uYWwgd2l0aCBhbgoJCQkJCWFyaXN0b2NyYXRpYyBiaWFzOyA8bWlsZXN0b25lIG49IjEzMDBiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5vciB0byBhcHBvaW50IHNvbWUgYnkgdm90ZSBhbmQgb3RoZXJzIGJ5IGxvdC4gQW5kCgkJCQkJZm9yIGEgY2VydGFpbiBjbGFzcyB0byBhcHBvaW50IGZyb20gYSBjZXJ0YWluIGNsYXNzICZsdDtieSB2b3RlJmd0Ozxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBpbnNlcnRpb24gYnkgTGFtYmludXMgc2VlbXMKCQkJCQkJY2VydGFpbi48L25vdGU+IGlzIG9saWdhcmNoaWNhbCwgYW5kIHNvIGl0IGlzIGZvciBhIGNlcnRhaW4gY2xhc3MgdG8gYXBwb2ludAoJCQkJCWZyb20gYSBjZXJ0YWluIGNsYXNzIGJ5IGxvdCDvvIhhbHRob3VnaCBub3Qgd29ya2luZyBvdXQgaW4gdGhlIHNhbWUKCQkJCQl3YXnvvIksIGFuZCBmb3IgYSBjZXJ0YWluIGNsYXNzIHRvIGFwcG9pbnQgZnJvbSBhIGNlcnRhaW4gY2xhc3MgYnkgYm90aAoJCQkJCW1ldGhvZHMuIEFuZCBmb3IgYSBjZXJ0YWluIGNsYXNzIHRvIG1ha2UgYSBwcmVsaW1pbmFyeSBzZWxlY3Rpb24gZnJvbSB0aGUgd2hvbGUKCQkJCQlib2R5IGFuZCB0aGVuIGZvciBhbGwgdG8gYXBwb2ludCBmcm9tIGFtb25nIGNlcnRhaW4gcGVyc29ucyDvvIh0aHVzCgkJCQkJc2VsZWN0ZWTvvIkgaXMgYXJpc3RvY3JhdGljLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U28gbWFueSBpbgoJCQkJCW51bWJlciB0aGVyZWZvcmUgYXJlIHRoZSBtb2RlcyBvZiBhcHBvaW50aW5nIHRvIHRoZSBtYWdpc3RyYWNpZXMsIGFuZCB0aGlzIGlzCgkJCQkJaG93IHRoZSBtb2RlcyBhcmUgY2xhc3NpZmllZCBhY2NvcmRpbmcgdG8gdGhlIGRpZmZlcmVudCBjb25zdGl0dXRpb25zOyBhbmQgd2hhdAoJCQkJCXJlZ3VsYXRpb25zIGFyZSBhZHZhbnRhZ2VvdXMgZm9yIHdoYXQgcGVvcGxlIGFuZCBob3cgdGhlIGFwcG9pbnRtZW50cyBvdWdodCB0bwoJCQkJCWJlIGNvbmR1Y3RlZCB3aWxsIGJlIG1hZGUgY2xlYXIgYXQgdGhlIHNhbWUgdGltZSBhcyB3ZSBjb25zaWRlciB3aGF0IGFyZSB0aGUKCQkJCQlwb3dlcnMgb2YgdGhlIG9mZmljZXMuIEJ5IHRoZSBwb3dlciBvZiBhbiBvZmZpY2UgSSBtZWFuIGZvciBpbnN0YW5jZSB0aGUgY29udHJvbAoJCQkJCW9mIHRoZSByZXZlbnVlcyBhbmQgdGhlIGNvbnRyb2wgb2YgdGhlIGd1YXJkOyBzaW5jZSBhIGRpZmZlcmVudCBzb3J0IG9mIHBvd2VyCgkJCQkJYmVsb25ncyBmb3IgZXhhbXBsZSB0byBhIGdlbmVyYWxzaGlwIGFuZCB0byB0aGUgb2ZmaWNlIHRoYXQgY29udHJvbHMgbWFya2V0CgkJCQkJCWNvbnRyYWN0cy48bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5PZiB0aGUgdGhyZWUgZmFjdG9ycyBvZiBhIGNvbnN0aXR1dGlvbiBpdCByZW1haW5zIHRvIHNwZWFrIG9mCgkJCQkJdGhlIGp1ZGljaWFyeSwgYW5kIG9mIGp1ZGljaWFsIGJvZGllcyBhbHNvIHdlIG11c3QgY29uc2lkZXIgdGhlIHZhcmlvdXMgbW9kZXMsCgkJCQkJaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBzYW1lIHBsYW4uIEFuZCBhIGRpZmZlcmVuY2UgYW1vbmcganVkaWNpYWwgY291cnRzIHJlc3RzCgkJCQkJdXBvbiB0aHJlZSBkZXRlcm1pbmFudHPigJRjb25zdGl0dWVudHMsIHNwaGVyZSBvZiBhY3Rpb24sIGFuZCBtb2RlIG9mCgkJCQkJYXBwb2ludG1lbnQuIEFzIHRvIHRoZWlyIGNvbnN0aXR1ZW50cyBJIG1lYW4gYXJlIHRoZSBjb3VydHMgZHJhd24gZnJvbSBhbGwgdGhlCgkJCQkJY2l0aXplbnMgb3IgZnJvbSBhIGNlcnRhaW4gY2xhc3M/IGFzIHRvIHNwaGVyZSBvZiBhY3Rpb24sIGhvdyBtYW55IGtpbmRzIG9mCgkJCQkJY291cnRzIGFyZSB0aGVyZT8gYW5kIGFzIHRvIG1vZGUgb2YgYXBwb2ludG1lbnQsIGFyZSB0aGV5IGFwcG9pbnRlZCBieSBsb3Qgb3IgYnkKCQkJCQl2b3RlPyBGaXJzdCB0aGVuIGxldCB1cyBkaXN0aW5ndWlzaCBob3cgbWFueSBraW5kcyBvZiBjb3VydHMgdGhlcmUgYXJlLiBUaGV5IGFyZQoJCQkJCWVpZ2h0IGluIG51bWJlciwgb25lIGEgY291cnQgb2YgYXVkaXQsPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbm90aGVyIHRvIGRlYWwgd2l0aCBvZmZlbmRlcnMgYWdhaW5zdCBhbnkgcHVibGljIGludGVyZXN0LCBhbm90aGVyIHdpdGgKCQkJCQltYXR0ZXJzIHRoYXQgYmVhciBvbiB0aGUgY29uc3RpdHV0aW9uLCBhIGZvdXJ0aCBmb3IgYm90aCBtYWdpc3RyYXRlcyBhbmQgcHJpdmF0ZQoJCQkJCXBlcnNvbnMgaW4gZGlzcHV0ZXMgYWJvdXQgcGVuYWx0aWVzLCBmaWZ0aCB0aGUgY291cnQgZGVhbGluZyB3aXRoIHByaXZhdGUKCQkJCQljb250cmFjdHMgdGhhdCBhcmUgb24gYW4gaW1wb3J0YW50IHNjYWxlLCBhbmQgYmVzaWRlIHRoZXNlIHRoZXJlIGlzCgkJCQkJ77yINu+8iSB0aGUgY291cnQgdGhhdCB0cmllcyBob21pY2lkZSwgYW5kIO+8iDfvvIkKCQkJCQl0aGF0IHdoaWNoIGhlYXJzIGFsaWVuIHN1aXRzIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz7vvIhvZiBjb3VydHMgb2YgaG9taWNpZGUgdGhlcmUgYXJlIGZvdXIga2luZHMsIHdoZXRoZXIgdGhlIGp1cnkgaXMgdGhlCgkJCQkJc2FtZSBvciBkaWZmZXJlbnTigJRuYW1lbHksIGZvciBjYXNlcyBvZiBkZWxpYmVyYXRlIGhvbWljaWRlLCBvZgoJCQkJCWludm9sdW50YXJ5IGhvbWljaWRlLCBvZiBob21pY2lkZSBhZG1pdHRlZCBidXQgY2xhaW1lZCB0byBiZSBqdXN0aWZpYWJsZSwgYW5kCgkJCQkJZm91cnRoIHRvIGRlYWwgd2l0aCBjaGFyZ2VzIG9mIGhvbWljaWRlIGJyb3VnaHQgYWdhaW5zdCBtZW4gdGhhdCBoYXZlIGZsZWQgZnJvbQoJCQkJCXRoZSBjb3VudHJ5IGZvciBob21pY2lkZSwgdXBvbiB0aGVpciByZXR1cm4sPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIG1lbiB0aGF0IGhhZCBiZWVuIGFsbG93ZWQgdG8gZmxlZSB0aGUgY291bnRyeSB3aGVuIGNoYXJnZWQgd2l0aAoJCQkJCQlhY2NpZGVudGFsIGhvbWljaWRlLCBhbmQgb24gdGhlaXIgcmV0dXJuIHdlcmUgYWNjdXNlZCBvZiBhbm90aGVyIGhvbWljaWRlLCBhCgkJCQkJCXdpbGxmdWwgbXVyZGVyLjwvbm90ZT4gc3VjaCBhcyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGZvciBpbnN0YW5jZSB0aGUgQ291cnQgYXQgUGhyZWF0dG8gaXMgc2FpZCB0byBiZSwKCQkJCQlhbHRob3VnaCBzdWNoIGNhc2VzIGFyZSBvZiByYXJlIG9jY3VycmVuY2UgaW4gdGhlIHdob2xlIGNvdXJzZSBvZiBoaXN0b3J5LCBldmVuCgkJCQkJaW4gdGhlIGdyZWF0IHN0YXRlcyBhbmQgb2YgdGhlIGFsaWVucycgY291cnQgb25lIGJyYW5jaCBoZWFycyBzdWl0cyBvZiBhbGllbnMKCQkJCQlhZ2FpbnN0IGFsaWVucyBhbmQgYW5vdGhlciBvZiBhbGllbnMgYWdhaW5zdCBjaXRpemVuc++8iTsgYW5kIGFsc28gYmVzaWRlCgkJCQkJYWxsIG9mIHRoZXNlIHRoZXJlIGFyZSDvvIg477yJIGNvdXJ0cyB0byB0cnkgY2FzZXMgb2YgcGV0dHkKCQkJCQljb250cmFjdHMsIGludm9sdmluZyBzdW1zIG9mIG9uZSBkcmFjaG1hLCBmaXZlIGRyYWNobWFzIG9yIGEgbGl0dGxlCgkJCQkJbW9yZeKAlGZvciBldmVuIHRoZXNlIGNhc2VzIGhhdmUgdG8gYmUgdHJpZWQsIHRob3VnaCB0aGV5IGFyZSBub3QKCQkJCQlzdWl0YWJsZSBmb3IgYSBudW1lcm91cyBqdXJ5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0CgkJCQkJbGV0IHVzIGRpc21pc3MgdGhlIHN1YmplY3Qgb2YgdGhlc2UgcGV0dHkgc3VpdHMsIGFuZCB0aGUgY291cnRzIGZvciBob21pY2lkZSBhbmQKCQkJCQl0aG9zZSBmb3IgYWxpZW5zLCBhbmQgbGV0IHVzIHNwZWFrIGFib3V0IHBvbGl0aWNhbCB0cmlhbHMsIHdoaWNoIHdoZW4gbm90IHdlbGwKCQkJCQljb25kdWN0ZWQgY2F1c2UgcGFydHkgZGl2aXNpb25zIGFuZCByZXZvbHV0aW9uYXJ5IGRpc3R1cmJhbmNlcy4gQW5kIG5lY2Vzc2FyaWx5CgkJCQkJZWl0aGVyIGFsbCB0aGUganVkZ2VzIG9mIGFsbCB0aGUgY2FzZXMgdGhhdCBoYXZlIGJlZW4gY2xhc3NpZmllZCB3aWxsIGJlCgkJCQkJYXBwb2ludGVkIGJ5IHZvdGUsIG9yIGJ5IGxvdCwgb3IgYWxsIGluIGFsbCBjYXNlcyBwYXJ0bHkgYnkgbG90IGFuZCBwYXJ0bHkgYnkKCQkJCQl2b3RlLCBvciBpbiBzb21lIGNhc2VzIHNvbWUganVkZ2VzIHdpbGwgYmUgYXBwb2ludGVkIGJ5IGxvdCBhbmQgb3RoZXJzIGJ5IHZvdGUKCQkJCQlmb3IgdGhlIHNhbWUgY2FzZS4gPG1pbGVzdG9uZSBuPSIxMzAxYSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+VGhlc2UgbW9kZXMgdGhlbiBhcmUgZm91ciBpbiBudW1iZXIsIGFuZCB0aGUKCQkJCQlzZWN0aW9uYWwgbW9kZXMgYWxzbyBtYWtlIGFzIG1hbnkgb3RoZXJzOyBmb3IgaGVyZSBhZ2FpbiB0aGUganVkZ2VzIGZvciBhbGwKCQkJCQljYXNlcyBtYXkgYmUgZHJhd24gYnkgdm90ZSBmcm9tIGEgY2VydGFpbiBjbGFzcywgb3IgZm9yIGFsbCBjYXNlcyBieSBsb3QgZnJvbSBhCgkJCQkJY2VydGFpbiBjbGFzcywgb3Igc29tZSBjb3VydHMgbWF5IGJlIGFwcG9pbnRlZCBieSBsb3QgYW5kIG90aGVycyBieSB2b3RlLCBvcgoJCQkJCXNvbWUgY291cnRzIG1heSBiZSBjb21wb3NlZCBvZiBqdWRnZXMgY2hvc2VuIGJ5IGxvdCBhbmQgYnkgdm90ZSBmb3IgdGhlIHNhbWUKCQkJCQljYXNlcy4gVGhlc2UgdGhlbiBhcmUgdGhlIG1vZGVzLCBhcyB3YXMgc2FpZCwgY29ycmVzcG9uZGluZyB0byB0aG9zZSBtZW50aW9uZWQuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhlcmUgYXJlIGFsc28gdGhlIHNhbWUKCQkJCQljb3VydHMgaW4gY29tYmluYXRpb27igJRJIG1lYW4gZm9yIGV4YW1wbGUgc29tZSBkcmF3biBmcm9tIHRoZSB3aG9sZQoJCQkJCWJvZHkgYW5kIHNvbWUgZnJvbSBhIGNsYXNzIGFuZCBzb21lIGZyb20gYm90aCwgYXMgZm9yIGluc3RhbmNlIGlmIHRoZSBzYW1lIGNvdXJ0CgkJCQkJY29udGFpbmVkIHNvbWUgbWVtYmVycyBmcm9tIHRoZSB3aG9sZSBib2R5IGFuZCBvdGhlcnMgZnJvbSBhIGNsYXNzLCBhbmQKCQkJCQlhcHBvaW50ZWQgZWl0aGVyIGJ5IGxvdCBvciBieSB2b3RlIG9yIGJvdGguIFdlIGhhdmUgdGhlbiBzdGF0ZWQgYWxsIHRoZSBtb2RlcyBpbgoJCQkJCXdoaWNoIGl0IGlzIHBvc3NpYmxlIGZvciB0aGUgY291cnRzIHRvIGJlIGNvbXBvc2VkOyBhbmQgb2YgdGhlc2UgdGhlIGZpcnN0IHNldCwKCQkJCQlkcmF3biBmcm9tIGFsbCB0aGUgY2l0aXplbnMgYW5kIGRlYWxpbmcgd2l0aCBhbGwgY2FzZXMsIGFyZSBwb3B1bGFyLCB0aGUgc2Vjb25kLAoJCQkJCWRyYXduIGZyb20gYSBjZXJ0YWluIGNsYXNzIHRvIGRlYWwgd2l0aCBhbGwgY2FzZXMsIGFyZSBvbGlnYXJjaGljLCBhbmQgdGhlCgkJCQkJdGhpcmQsIGRyYXduIHBhcnRseSBmcm9tIGFsbCBhbmQgcGFydGx5IGZyb20gYSBjZXJ0YWluIGNsYXNzLCBhcmUgc3VpdGVkIHRvIGFuCgkJCQkJYXJpc3RvY3JhY3kgYW5kIHRvIGEgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudC48L3A+CgkJCTwvZGl2MT4KCQkJPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI4OGIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjEwIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRyYW5zcG9zZWQgYXMgQm9vayA2IGJ5IHNvbWUgZWRpdG9yczsKCQkJCQkJc2VlIEJvb2sgMyBmaW4uLCBub3RlLjwvbm90ZT5JbiBhbGwgdGhlIGFydHMgYW5kIHRoZSBzY2llbmNlcyB0aGF0IGFyZSBub3QKCQkJCQltZXJlbHkgc2VjdGlvbmFsIGJ1dCB0aGF0IGluIHJlbGF0aW9uIHRvIHNvbWUgb25lIGNsYXNzIG9mIHN1YmplY3QgYXJlIGNvbXBsZXRlLAoJCQkJCWl0IGlzIHRoZSBmdW5jdGlvbiBvZiBhIHNpbmdsZSBhcnQgb3Igc2NpZW5jZSB0byBzdHVkeSB3aGF0IGlzIHN1aXRlZCB0byBlYWNoCgkJCQkJCWNsYXNzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUgR3JlZWsgc2hvdWxkIGJlCgkJCQkJCWFsdGVyZWQgdG8gZ2l2ZSDigJh0byBlYWNoIGluZGl2aWR1YWwu4oCZPC9ub3RlPiBmb3IKCQkJCQlpbnN0YW5jZSB3aGF0IHNvcnQgb2YgZ3ltbmFzdGljIGV4ZXJjaXNlIGlzIGJlbmVmaWNpYWwgZm9yIHdoYXQgc29ydCBvZiBib2RpbHkKCQkJCQlmcmFtZSwgYW5kIHdoYXQgaXMgdGhlIGJlc3Qgc29ydCDvvIhmb3IgdGhlIGJlc3QgbXVzdCBuYXR1cmFsbHkgc3VpdCB0aGUKCQkJCQlwZXJzb24gb2YgdGhlIGZpbmVzdCBuYXR1cmFsIGVuZG93bWVudCBhbmQgZXF1aXBtZW5077yJLCBhbmQgYWxzbyB3aGF0CgkJCQkJb25lIGV4ZXJjaXNlIHRha2VuIGJ5IGFsbCBpcyB0aGUgYmVzdCBmb3IgdGhlIGxhcmdlc3QgbnVtYmVyIO+8iGZvciB0aGlzCgkJCQkJaXMgYWxzbyBhIHF1ZXN0aW9uIGZvciBneW1uYXN0aWMgc2NpZW5jZe+8iSwgYW5kIGluIGFkZGl0aW9uLCBpbiBjYXNlCgkJCQkJc29tZW9uZSBkZXNpcmVzIGEgaGFiaXQgb2YgYm9keSBhbmQgYSBrbm93bGVkZ2Ugb2YgYXRobGV0aWMgZXhlcmNpc2VzIHRoYXQgYXJlCgkJCQkJbm90IHRoZSBvbmVzIGFkYXB0ZWQgdG8gaGltLCBpdCBpcyBjbGVhcmx5IGp1c3QgYXMgbXVjaCB0aGUgdGFzayBvZiB0aGUgdHJhaW5lcgoJCQkJCWFuZCBneW1uYXN0aWMgbWFzdGVyIHRvIHByb2R1Y2UgdGhpcyBjYXBhY2l0eTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBhIGJvZGlseSBiZWFyaW5nIGFuZCBhdGhsZXRpYyBza2lsbCB0aGF0IGFyZSBub3QgdGhlIG9uZXMgbW9zdCBzdWl0ZWQKCQkJCQkJdG8gdGhlIHB1cGlsJ3MgcGFydGljdWxhciBwaHlzaXF1ZS48L25vdGU+IGFsc287PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGVkPSJQIiBuPSIxLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgd2UKCQkJCQlub3RpY2UgdGhpcyBhbHNvIGhhcHBlbmluZyBzaW1pbGFybHkgaW4gcmVnYXJkIHRvIG1lZGljaW5lLCBhbmQgc2hpcGJ1aWxkaW5nLAoJCQkJCWFuZCB0aGUgbWFraW5nIG9mIGNsb3RoZXMsIGFuZCBldmVyeSBvdGhlciBjcmFmdC4gSGVuY2UgaXQgaXMgY2xlYXIgdGhhdCBpbiB0aGUKCQkJCQljYXNlIG9mIHRoZSBjb25zdGl0dXRpb24gYXMgd2VsbCBpdCBpcyB0aGUgYnVzaW5lc3Mgb2YgdGhlIHNhbWUgc2NpZW5jZSB0byBzdHVkeQoJCQkJCXdoaWNoIGlzIHRoZSBiZXN0IGNvbnN0aXR1dGlvbiBhbmQgd2hhdCBjaGFyYWN0ZXIgaXQgbXVzdCBoYXZlIHRvIGJlIHRoZSBtb3N0CgkJCQkJaWRlYWwgaWYgbm8gZXh0ZXJuYWwgY2lyY3Vtc3RhbmNlIHN0YW5kcyBpbiB0aGUgd2F5LCBhbmQgd2hhdCBjb25zdGl0dXRpb24gaXMKCQkJCQlhZGFwdGVkIHRvIHdoYXQgcGVvcGxlIO+8iHNpbmNlIGZvciBtYW55IGl0IGlzIGRvdWJ0bGVzcyBpbXBvc3NpYmxlIHRvCgkJCQkJYXR0YWluIHRoZSBiZXN0IG9uZSwgc28gdGhhdCB0aGUgZ29vZCBsYXdnaXZlciBhbmQgdGhlIHRydWUgc3RhdGVzbWFuIG11c3QgYmUKCQkJCQlhY3F1YWludGVkIHdpdGggYm90aCB0aGUgZm9ybSBvZiBjb25zdGl0dXRpb24gdGhhdCBpcyB0aGUgaGlnaGVzdCBhYnNvbHV0ZWx5IGFuZAoJCQkJCXRoYXQgd2hpY2ggaXMgYmVzdCB1bmRlciBhc3N1bWVkIGNvbmRpdGlvbnPvvIksIGFuZCBhbHNvIHRoaXJkbHkgdGhlIGZvcm0KCQkJCQlvZiBjb25zdGl0dXRpb24gYmFzZWQgb24gYSBjZXJ0YWluIHN1cHBvc2l0aW9uIO+8iGZvciBoZSBtdXN0IGJlIGFsc28KCQkJCQljYXBhYmxlIG9mIGNvbnNpZGVyaW5nIGJvdGggaG93IHNvbWUgZ2l2ZW4gY29uc3RpdHV0aW9uIGNvdWxkIGJlIGJyb3VnaHQgaW50bwoJCQkJCWV4aXN0ZW5jZSBvcmlnaW5hbGx5IGFuZCBhbHNvIGluIHdoYXQgd2F5IGhhdmluZyBiZWVuIGJyb3VnaHQgaW50byBleGlzdGVuY2UgaXQKCQkJCQljb3VsZCBiZSBwcmVzZXJ2ZWQgZm9yIHRoZSBsb25nZXN0IHRpbWU6IEkgbWVhbiBmb3IgZXhhbXBsZSBpZiBpdCBoYXMgYmVmYWxsZW4KCQkJCQlzb21lIHN0YXRlIG5vdCBvbmx5IG5vdCB0byBwb3NzZXNzIHRoZSBiZXN0IGNvbnN0aXR1dGlvbiBhbmQgdG8gYmUgdW5wcm92aWRlZAoJCQkJCWV2ZW4gd2l0aCB0aGUgdGhpbmdzIG5lY2Vzc2FyeSBmb3IgaXQsIGJ1dCBhbHNvIG5vdCB0byBoYXZlIHRoZSBjb25zdGl0dXRpb24KCQkJCQl0aGF0IGlzIHByYWN0aWNhYmxlIHVuZGVyIHRoZSBjaXJjdW1zdGFuY2VzIGJ1dCBhbiBpbmZlcmlvciBvbmXvvIk7CgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjEuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBiZXNpZGUgYWxsIHRoZXNlIG1hdHRlcnMgaGUKCQkJCQltdXN0IGFzY2VydGFpbiB0aGUgZm9ybSBvZiBjb25zdGl0dXRpb24gbW9zdCBzdWl0ZWQgdG8gYWxsIHN0YXRlcywgc2luY2UgbW9zdCBvZgoJCQkJCXRob3NlIHdobyBtYWtlIHByb25vdW5jZW1lbnRzIGFib3V0IHRoZSBjb25zdGl0dXRpb24sIGV2ZW4gaWYgdGhlIHJlc3Qgb2Ygd2hhdAoJCQkJCXRoZXkgc2F5IGlzIGdvb2QsIGVudGlyZWx5IG1pc3MgdGhlIHBvaW50cyBvZiBwcmFjdGljYWwgdXRpbGl0eS4gRm9yIGl0IGlzCgkJCQkJcHJvcGVyIHRvIGNvbnNpZGVyPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgZm91cmZvbGQKCQkJCQkJY2xhc3NpZmljYXRpb24gZ2l2ZW4ganVzdCBiZWZvcmUgaXMgcmVwZWF0ZWQgaW4gcmF0aGVyIGxvb3NlIHRlcm1zIGluIHRoaXMKCQkJCQkJc2VudGVuY2UuPC9ub3RlPiBub3Qgb25seSB3aGF0IGlzIHRoZSBiZXN0IGNvbnN0aXR1dGlvbiBidXQgYWxzbyB3aGF0IGlzIHRoZQoJCQkJCW9uZSBwb3NzaWJsZSBvZiBhY2hpZXZlbWVudCwgYW5kIGxpa2V3aXNlIGFsc28gd2hhdCBpcyB0aGUgb25lIHRoYXQgaXMgZWFzaWVyCgkJCQkJYW5kIG1vcmUgZ2VuZXJhbGx5IHNoYXJlZCBieSBhbGwgc3RhdGVzLiBCdXQgYXMgaXQgaXMsIHNvbWUgc3R1ZGVudHMgaW5xdWlyZQoJCQkJCXdoaWNoIGlzIHRoZSBoaWdoZXN0IGZvcm0gb2YgYWxsIGV2ZW4gdGhvdWdoIHJlcXVpcmluZyBtdWNoIG1hdGVyaWFsCgkJCQkJCWVxdWlwbWVudCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSB3b3JkIG9yaWdpbmFsbHkgZGVub3RlZAoJCQkJCQl0aGUgZHV0eSBvZiB0aGUgd2VhbHRoeSBjaXRpemVuIGhvbGRpbmcgb2ZmaWNlIG9mIENob3JlZ3VzIHRvIHN1cHBseQoJCQkJCQlkcmVzc2VzLCBldGMuLCBmb3IgdGhlIGNob3J1cyBhbmQgYWN0b3JzIGluIGEgZHJhbWEuPC9ub3RlPiB3aGlsZSB0aG9zZSB3aG8KCQkJCQlyYXRoZXIgc3RhdGUgc29tZSBnZW5lcmFsIGZvcm0gc3dlZXAgYXNpZGUgdGhlIGNvbnN0aXR1dGlvbnMgYWN0dWFsbHkgZXhpc3RpbmcKCQkJCQlhbmQgcHJhaXNlIHRoYXQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiBvciBzb21lCgkJCQkJb3RoZXI7IDxtaWxlc3RvbmUgbj0iMTI4OWEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIG49IjEuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCB0aGUgcHJvcGVyCgkJCQkJY291cnNlIGlzIHRvIGJyaW5nIGZvcndhcmQgYW4gb3JnYW5pemF0aW9uIG9mIHN1Y2ggYSBzb3J0IHRoYXQgbWVuIHdpbGwgZWFzaWx5CgkJCQkJYmUgcGVyc3VhZGVkIGFuZCBiZSBhYmxlIGluIHRoZSBleGlzdGluZyBjaXJjdW1zdGFuY2VzIHRvIHRha2UgcGFydCBpbiBpdCwgc2luY2UKCQkJCQl0byByZWZvcm0gYSBjb25zdGl0dXRpb24gaXMgbm8gbGVzcyBhIHRhc2sgdGhhbiB0byBmcmFtZSBvbmUgZnJvbSB0aGUgYmVnaW5uaW5nLAoJCQkJCWp1c3QgYXMgdG8gcmUtbGVhcm4gYSBzY2llbmNlIGlzIGp1c3QgYXMgaGFyZCBhcyB0byBsZWFybiBpdCBvcmlnaW5hbGx5OyBpbgoJCQkJCWFkZGl0aW9uIHRoZXJlZm9yZSB0byB0aGUgdGhpbmdzIG1lbnRpb25lZCB0aGUgc3R1ZGVudCBvZiBwb2xpdGljcyBtdXN0IGFsc28gYmUKCQkJCQlhYmxlIHRvIHJlbmRlciBhaWQgdG8gdGhlIGNvbnN0aXR1dGlvbnMgdGhhdCBleGlzdCBhbHJlYWR5LCBhcyB3YXMgYWxzbyBzYWlkCgkJCQkJCWJlZm9yZS48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkJvb2sgMy41Ljwvbm90ZT4gQnV0IHRoaXMgaXMKCQkJCQlpbXBvc3NpYmxlIGlmIGhlIGRvZXMgbm90IGtub3cgaG93IG1hbnkga2luZHMgb2YgY29uc3RpdHV0aW9uIHRoZXJlIGFyZTsgYnV0IGF0CgkJCQkJcHJlc2VudCBzb21lIHBlb3BsZSB0aGluayB0aGF0IHRoZXJlIGlzIG9ubHkgb25lIGtpbmQgb2YgZGVtb2NyYWN5IGFuZCBvbmUga2luZAoJCQkJCW9mIG9saWdhcmNoeSwgYnV0IHRoaXMgaXMgbm90IHRydWUuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlIGhlIG11c3QgdGFrZSBpbiB2aWV3IHRoZSBkaWZmZXJlbnQgdmFyaWV0aWVzIG9mIHRoZSBjb25zdGl0dXRpb25zLCBhbmQKCQkJCQlrbm93IGhvdyBtYW55IHRoZXJlIGFyZSBhbmQgaG93IG1hbnkgYXJlIHRoZWlyIGNvbWJpbmF0aW9ucy4gQW5kIGFmdGVyIHRoaXMgaXQKCQkJCQluZWVkcyB0aGlzIHNhbWUgZGlzY3JpbWluYXRpb24gYWxzbyB0byBkaXNjZXJuIHRoZSBsYXdzIHRoYXQgYXJlIHRoZSBiZXN0LCBhbmQKCQkJCQl0aG9zZSB0aGF0IGFyZSBzdWl0ZWQgdG8gZWFjaCBvZiB0aGUgZm9ybXMgb2YgY29uc3RpdHV0aW9uLiBGb3IgdGhlIGxhd3Mgc2hvdWxkCgkJCQkJYmUgbGFpZCBkb3duLCBhbmQgYWxsIHBlb3BsZSBsYXkgdGhlbSBkb3duLCB0byBzdWl0IHRoZQoJCQkJCWNvbnN0aXR1dGlvbnPigJR0aGUgY29uc3RpdHV0aW9ucyBtdXN0IG5vdCBiZSBtYWRlIHRvIHN1aXQgdGhlIGxhd3M7IGZvcgoJCQkJCWEgY29uc3RpdHV0aW9uIGlzIHRoZSByZWd1bGF0aW9uIG9mIHRoZSBvZmZpY2VzIG9mIHRoZSBzdGF0ZSBpbiByZWdhcmQgdG8gdGhlCgkJCQkJbW9kZSBvZiB0aGVpciBkaXN0cmlidXRpb24gYW5kIHRvIHRoZSBxdWVzdGlvbiB3aGF0IGlzIHRoZSBzb3ZlcmVpZ24gcG93ZXIgaW4KCQkJCQl0aGUgc3RhdGUgYW5kIHdoYXQgaXMgdGhlIG9iamVjdCBvZiBlYWNoIGNvbW11bml0eSwgYnV0IGxhd3MgYXJlIGRpc3RpbmN0IGZyb20KCQkJCQl0aGUgcHJpbmNpcGxlcyBvZiB0aGUgY29uc3RpdHV0aW9uLCBhbmQgcmVndWxhdGUgaG93IHRoZSBtYWdpc3RyYXRlcyBhcmUgdG8KCQkJCQlnb3Zlcm4gYW5kIHRvIGd1YXJkIGFnYWluc3QgdGhvc2U8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPndobwoJCQkJCXRyYW5zZ3Jlc3MgdGhlbS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMS42IiB1bml0PSJMb2ViIGNoYXAiIC8+U28gdGhhdCBjbGVhcmx5IGl0CgkJCQkJaXMgbmVjZXNzYXJ5IHRvIGJlIGluIHBvc3Nlc3Npb24gb2YgdGhlIGRpZmZlcmVudCB2YXJpZXRpZXMgb2YgZWFjaCBmb3JtIG9mCgkJCQkJY29uc3RpdHV0aW9uLCBhbmQgdGhlIG51bWJlciBvZiB0aGVzZSwgZXZlbiBmb3IgdGhlIHB1cnBvc2Ugb2YgbGVnaXNsYXRpb247IGZvcgoJCQkJCWl0IGlzIGltcG9zc2libGUgZm9yIHRoZSBzYW1lIGxhd3MgdG8gYmUgZXhwZWRpZW50IGZvciBhbGwgb2xpZ2FyY2hpZXMgb3IKCQkJCQlkZW1vY3JhY2llcyBpZiB0aGVyZSBhcmUgcmVhbGx5IHNldmVyYWwga2luZHMgb2YgdGhlbSwgYW5kIG5vdCBvbmUgc29ydCBvZgoJCQkJCWRlbW9jcmFjeSBvciBvbGlnYXJjaHkgb25seS48bWlsZXN0b25lIGVkPSJQIiBuPSIyLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBpbmFzbXVjaCBhcyBpbiBvdXIgZmlyc3QgaW5xdWlyeTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Qm9vayAzLjUuPC9ub3RlPiBhYm91dCB0aGUgZm9ybXMgb2YgdGhlCgkJCQkJY29uc3RpdHV0aW9uIHdlIGNsYXNzaWZpZWQgdGhlIHJpZ2h0IGNvbnN0aXR1dGlvbnMgYXMgdGhyZWUsIGtpbmdzaGlwLAoJCQkJCWFyaXN0b2NyYWN5IGFuZCBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LCBhbmQgdGhlIGRldmlhdGlvbnMgZnJvbSB0aGVzZSBhcwoJCQkJCXRocmVlLCB0eXJhbm55IGZyb20ga2luZ3NoaXAsIG9saWdhcmNoeSBmcm9tIGFyaXN0b2NyYWN5IGFuZCBkZW1vY3JhY3kgZnJvbQoJCQkJCWNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQsIGFuZCBhYm91dCBhcmlzdG9jcmFjeSBhbmQga2luZ3NoaXAgd2UgaGF2ZSBzcG9rZW4KCQkJCQnvvIhmb3IgdG8gc3R1ZHkgdGhlIGJlc3QgY29uc3RpdHV0aW9uIGlzIHRoZSBzYW1lIHRoaW5nIGFzIHRvIHNwZWFrIGFib3V0CgkJCQkJdGhlIGZvcm1zIHRoYXQgYmVhciB0aG9zZSBuYW1lcywgc2luY2UgZWFjaCBvZiB0aGVtIG1lYW5zIGEgc3lzdGVtIGJhc2VkIG9uIHRoZQoJCQkJCXF1YWxpZmljYXRpb24gb2YgdmlydHVlIGVxdWlwcGVkIHdpdGggbWVhbnPvvIksIGFuZCBhcyBhbHNvIHRoZSBxdWVzdGlvbgoJCQkJCXdoYXQgY29uc3RpdHV0ZXMgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBhcmlzdG9jcmFjeSBhbmQga2luZ3NoaXAgYW5kIHdoZW4gYQoJCQkJCXJveWFsIGdvdmVybm1lbnQgaXMgdG8gYmUgYWRvcHRlZCBoYXMgYmVlbiBkZWNpZGVkIGJlZm9yZSwgaXQgcmVtYWlucyB0byBkaXNjdXNzCgkJCQkJdGhlIGZvcm0gb2YgY29uc3RpdHV0aW9uIGRlc2lnbmF0ZWQgYnkgdGhlIG5hbWU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs+Azr/Ou865z4TOteG9t86xPC9mb3JlaWduPiwKCQkJCQkJ4oCYcG9saXR5LOKAmSB3aGljaCBkZW5vdGVzIG5vdCBvbmx5IGEgY29uc3RpdHV0aW9uIG9mIGFueQoJCQkJCQlmb3JtLCBidXQgYWxzbyDvvIhsaWtlIG91ciB0ZXJtIOKAmGNvbnN0aXR1dGlvbmFsCgkJCQkJCWdvdmVybm1lbnTigJnvvIkgYSBwYXJ0aWN1bGFyIGZvcm0sIHZpei4sIGEgcmVwdWJsaWMsIGNmLgoJCQkJCQlCb29rIDMuNS4yLjwvbm90ZT4gY29tbW9uIHRvIHRoZW0gYWxsLCBhbmQgdGhlIG90aGVyIGZvcm1zLCBvbGlnYXJjaHksCgkJCQkJZGVtb2NyYWN5IGFuZCB0eXJhbm55LiA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ob3cgaXQgaXMKCQkJCQltYW5pZmVzdCBhbHNvIHdoaWNoIG9mIHRoZXNlIGRldmlhdGlvbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZQoJCQkJCQl0aHJlZSBmb3JtcyBvZiBjb25zdGl0dXRpb24gbGFzdCBtZW50aW9uZWQuPC9ub3RlPiBpcyB0aGUgd29yc3QgYW5kIHdoaWNoCgkJCQkJdGhlIHNlY29uZCB3b3JzdC4gRm9yIG5lY2Vzc2FyaWx5IHRoZSBkZXZpYXRpb24gZnJvbSB0aGUgZmlyc3QgYW5kIG1vc3QgZGl2aW5lCgkJCQkJbXVzdCBiZSB0aGUgd29yc3QsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48ZW1waD5Db3JydXB0aW8gb3B0aW1pCgkJCQkJCQlwZXNzaW1hPC9lbXBoPiwgYSBTb2NyYXRpYyBub3Rpb246IOKAmHRoZSBtZW4gb2YgdGhlIGJlc3QKCQkJCQkJbmF0dXJhbCBnaWZ0cywgd2hlbiBlZHVjYXRlZCwgYXJlIHRoZSB3b3JzdCzigJkgPGJpYmwgZGVmYXVsdD0iTk8iIG49Ilhlbi4gTWVtLiA0LjEuMyIgdmFsaWQ9InllcyI+WGVuLiBNZW0uIDQuMS4zPC9iaWJsPi48L25vdGU+IGFuZCBraW5nc2hpcCBtdXN0IG9mCgkJCQkJbmVjZXNzaXR5IGVpdGhlciBwb3NzZXNzIHRoZSBuYW1lIG9ubHksIHdpdGhvdXQgcmVhbGx5IGJlaW5nIGtpbmdzaGlwLAoJCQkJCQk8bWlsZXN0b25lIG49IjEyODliIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5vciBiZSBiYXNlZCBvbiB0aGUgb3V0c3RhbmRpbmcgc3VwZXJpb3JpdHkgb2YgdGhlIG1hbiB3aG8gaXMKCQkJCQlraW5nOyBzbyB0aGF0IHR5cmFubnkgYmVpbmcgdGhlIHdvcnN0IGZvcm0gbXVzdCBiZSB0aGUgb25lIGZhcnRoZXN0IHJlbW92ZWQgZnJvbQoJCQkJCWNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQsIGFuZCBvbGlnYXJjaHkgbXVzdCBiZSB0aGUgc2Vjb25kIGZhcnRoZXN0CgkJCQkJ77yIZm9yIGFyaXN0b2NyYWN5IGlzIHdpZGVseSBzZXBhcmF0ZWQgZnJvbSB0aGF0IGNvbnN0aXR1dGlvbu+8iSwKCQkJCQl3aGlsZSBkZW1vY3JhY3kgbXVzdCBiZSB0aGUgbW9zdCBtb2RlcmF0ZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW4gYWNjb3VudCBvZiB0aGVpciByZWxhdGl2ZSBtZXJpdHMgaGFzIGluZGVlZCBhbHJlYWR5CgkJCQkJYmVlbiBnaXZlbiBhbHNvIGJ5IG9uZSBvZiB0aGUgZm9ybWVyIHdyaXRlcnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJPGJpYmwgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFN0YXQuIDMwMmEiIHZhbGlkPSJ5ZXMiPlBsYXQuIFN0YXQuIDMwMmEgZmYuPC9iaWJsPgoJCQkJCTwvbm90ZT4gdGhvdWdoIG5vdCBvbiB0aGUgc2FtZSBwcmluY2lwbGUgYXMgb3VyczsgZm9yIGhlIGluY2xpbmVkIHRvIGp1ZGdlIHRoYXQKCQkJCQl0aGVyZSB3ZXJlIGdvb2QgdmFyaWV0aWVzIG9mIGFsbCB0aGUgZm9ybXMsIGZvciBpbnN0YW5jZSBhIGdvb2Qgc29ydCBvZgoJCQkJCW9saWdhcmNoeSBhbmQgc28gb24sIGFuZCB0aGF0IGRlbW9jcmFjeSB3YXMgdGhlIHdvcnN0IGFtb25nIHRoZXNlLCBidXQgdGhlIGJlc3QKCQkJCQlhbW9uZyB0aGUgYmFkIHZhcmlldGllcywgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+d2hlcmVhcyB3ZQoJCQkJCXNheSB0aGF0IHRoZSBkZXZpYXRpb25zIGFyZSB3aG9sbHkgd3JvbmcsIGFuZCB0aGF0IGl0IGlzIG5vdCByaWdodCB0byBzcGVhayBvZgoJCQkJCW9uZSBmb3JtIG9mIG9saWdhcmNoeSBhcyBiZXR0ZXIgdGhhbiBhbm90aGVyLCBidXQgb25seSBhcyBsZXNzIGJhZC4gQnV0IGxldCB1cwoJCQkJCWZvciB0aGUgcHJlc2VudCBkaXNtaXNzIHRoZSBxdWVzdGlvbiBvZiBhIGNsYXNzaWZpY2F0aW9uIG9mIHRoaXMgbmF0dXJlLiBPdXIKCQkJCQlidXNpbmVzcyBpcyBmaXJzdCB0byBkaXN0aW5ndWlzaCBob3cgbWFueSBkaWZmZXJlbnQgZm9ybXMgb2YgdGhlIGNvbnN0aXR1dGlvbnMKCQkJCQl0aGVyZSBhcmUsIGFzc3VtaW5nIHRoYXQgdGhlcmUgZG8gZXhpc3Qgc2V2ZXJhbCBraW5kcyBvZiBkZW1vY3JhY3kgYW5kIG9mCgkJCQkJb2xpZ2FyY2h5OyA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5uZXh0LCB3aGljaCBmb3JtIGlzIG1vc3QKCQkJCQlnZW5lcmFsLCBhbmQgd2hpY2ggbW9zdCBkZXNpcmFibGUgYWZ0ZXIgdGhlIGJlc3QgY29uc3RpdHV0aW9uLCBhbmQgYWxzbyBpZiB0aGVyZQoJCQkJCWV4aXN0cyBzb21lIG90aGVyIGZvcm0gdGhhdCBpcyBhcmlzdG9jcmF0aWMgaW4gbmF0dXJlIGFuZCB3ZWxsIGNvbnN0cnVjdGVkIGJ1dAoJCQkJCW5vdCBmaXR0ZWQgdG8gdGhlIGxhcmdlc3QgbnVtYmVyIG9mIGNpdGllcywgd2hpY2ggdGhpcyBpczsgbmV4dCwgd2hpY2ggb2YgdGhlCgkJCQkJb3RoZXIgZm9ybXMgdG9vIGlzIGRlc2lyYWJsZSBmb3Igd2hhdCBwZW9wbGUg77yIc2luY2UgcHJvYmFibHkgZm9yIHNvbWUKCQkJCQlkZW1vY3JhY3kgaXMgbmVjZXNzYXJ5IG1vcmUgdGhhbiBvbGlnYXJjaHksIGFuZCBmb3Igb3RoZXJzIG9saWdhcmNoeSBtb3JlIHRoYW4KCQkJCQkJZGVtb2NyYWN577yJOzxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIGFmdGVyCgkJCQkJdGhpcywgaW4gd2hhdCB3YXkgc2hvdWxkIG9uZSBwcm9jZWVkIHdobyB3aXNoZXMgdG8gc2V0IHVwIHRoZXNlIGNvbnN0aXR1dGlvbnMsIEkKCQkJCQltZWFuIHRoZSB2YXJpb3VzIGZvcm1zIG9mIGRlbW9jcmFjeSBhbmQgb2Ygb2xpZ2FyY2h5OyBhbmQgZmluYWxseSwgd2hlbiBhcyBmYXIKCQkJCQlhcyBwb3NzaWJsZSB3ZSBoYXZlIGNvbmNpc2VseSB0b3VjaGVkIHVwb24gYWxsIHRoZXNlIHF1ZXN0aW9ucywgd2UgbXVzdCBlbmRlYXZvcgoJCQkJCXRvIHJldmlldyB3aGF0IGFyZSB0aGUgYWdlbmNpZXMgdGhhdCBkZXN0cm95IGFuZCB3aGF0IGFyZSB0aG9zZSB0aGF0IHByZXNlcnZlCgkJCQkJY29uc3RpdHV0aW9ucyBnZW5lcmFsbHkgYW5kIGVhY2ggdmFyaWV0eSBvZiBjb25zdGl0dXRpb24gaW4gcGFydGljdWxhciwgYW5kIHdoYXQKCQkJCQlhcmUgdGhlIGNhdXNlcyBieSB3aGljaCBpdCBpcyBtb3N0IG5hdHVyYWwgZm9yIHRoZXNlIGV2ZW50cyB0byBiZSBicm91Z2h0CgkJCQkJCWFib3V0LjxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHRoZSByZWFzb24gb2YgdGhlcmUgYmVpbmcgc2V2ZXJhbCBmb3JtcyBvZiBjb25zdGl0dXRpb24gaXMKCQkJCQl0aGF0IGV2ZXJ5IGNpdHkgaGFzIGEgY29uc2lkZXJhYmxlIG51bWJlciBvZiBwYXJ0cy4gRm9yIGluIHRoZSBmaXJzdCBwbGFjZSB3ZQoJCQkJCXNlZSB0aGF0IGFsbCB0aGUgY2l0aWVzIGFyZSBjb21wb3NlZCBvZiBob3VzZWhvbGRzLCBhbmQgdGhlbiBhZ2FpbiB0aGF0IG9mIHRoaXMKCQkJCQltdWx0aXR1ZGUgc29tZSBtdXN0IG5lY2Vzc2FyaWx5IGJlIHJpY2ggYW5kIHNvbWUgcG9vciBhbmQgc29tZSBiZXR3ZWVuIHRoZSB0d28sCgkJCQkJYW5kIGFsc28gb2YgdGhlIHJpY2ggYW5kIHRoZSBwb29yIHRoZSBmb3JtZXIgY2xhc3MgaXMgaGVhdnktYXJtZWQgYW5kIHRoZSBsYXR0ZXIKCQkJCQl3aXRob3V0IGFybW9yLiBBbmQgd2Ugc2VlIHRoYXQgb25lIHBvcnRpb24gb2YgdGhlIGNvbW1vbiBwZW9wbGUgaXMgYWdyaWN1bHR1cmFsLAoJCQkJCWFub3RoZXIgZW5nYWdlZCBpbiB0cmFkZSBhbmQgYW5vdGhlciBtZWNoYW5pYy4gQW5kIHRoZSB1cHBlciBjbGFzc2VzIGhhdmUKCQkJCQlkaXN0aW5jdGlvbnMgYWxzbyBjb3JyZXNwb25kaW5nIHRvIHRoZWlyIHdlYWx0aCBhbmQgdGhlIGFtb3VudHMgb2YgdGhlaXIKCQkJCQlwcm9wZXJ0eSDvvIhmb3IgZXhhbXBsZSBpbiBhIHN0dWQgb2YgaG9yc2Vz4oCUZm9yIGl0IGlzIG5vdCBlYXN5CgkJCQkJdG8gcmVhciBob3JzZXMgd2l0aG91dCBiZWluZyByaWNoLCA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgdGhpcyBpcyB3aHkgaW4gYW5jaWVudCB0aW1lcyB0aGVyZSB3ZXJlIG9saWdhcmNoaWVzIGluIGFsbCB0aGUgc3RhdGVzCgkJCQkJd2hvc2Ugc3RyZW5ndGggbGF5IGluIHRoZWlyIGNhdmFscnksIGFuZCB0aGV5IHVzZWQgdG8gdXNlIGhvcnNlcyBmb3IgdGhlaXIgd2FycwoJCQkJCWFnYWluc3QgdGhlaXIgbmVpZ2hib3JzLCBhcyBmb3IgaW5zdGFuY2UgZGlkIHRoZSBFcmV0cmlhbnMgYW5kIENoYWxjaWRpYW5zIGFuZAoJCQkJCXRoZSBwZW9wbGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNYWduZXNpYSBhZCBNYWVhbmRydW0iIGtleT0icGVyc2V1cyxNYWduZXNpYSBhZCBNYWVhbmRydW0iPk1hZ25lc2lhPC9wbGFjZU5hbWU+IG9uIHRoZQoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTEyMTU2MSIga2V5PSJ0Z24sMTEyMTU2MSI+TWFlYW5kZXI8L3BsYWNlTmFtZT4gYW5kIG1hbnkgb2YgdGhlIG90aGVyCgkJCQkJQXNpYXRpYyBwZW9wbGVz77yJLiBNb3Jlb3ZlciBpbiBhZGRpdGlvbiB0byBkaWZmZXJlbmNlcyBpbiB3ZWFsdGggdGhlcmUKCQkJCQlpcyB0aGUgZGlmZmVyZW5jZSBvZiBiaXJ0aCwgYW5kIHRoYXQgaW4gcmVnYXJkIHRvIHZpcnR1ZSwgPG1pbGVzdG9uZSBuPSIxMjkwYSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+YW5kIGluZGVlZCBhbnkKCQkJCQlvdGhlciBzaW1pbGFyIGRpc3RpbmN0aW9uIHRoYXQgaW4gdGhlIGRpc2N1c3Npb24gb2YgYXJpc3RvY3JhY3kgaGFzIGJlZW4gc3RhdGVkCgkJCQkJdG8gY29uc3RpdHV0ZSBhIHBhcnQgb2YgdGhlIHN0YXRlIO+8iGZvciB0aGVyZSB3ZSBkaXN0aW5ndWlzaGVkIGhvdyBtYW55CgkJCQkJbmVjZXNzYXJ5IHBhcnRzIHRoZXJlIGFyZSBvZiB3aGljaCBldmVyeSBzdGF0ZSBtdXN0IGNvbnNpc3TvvIk7IGZvcgoJCQkJCXNvbWV0aW1lcyBhbGwgb2YgdGhlc2UgcGFydHMgcGFydGljaXBhdGUgaW4gdGhlIGNvbnN0aXR1dGlvbiBhbmQgc29tZXRpbWVzIGEKCQkJCQlzbWFsbGVyIG9yIGEgbGFyZ2VyIG51bWJlciBvZiB0aGVtLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JdCBpcyBjbGVhciB0aGVyZWZvcmUgdGhhdCB0aGVyZSBtdXN0IG5lY2Vzc2FyaWx5IGJlIHNldmVyYWwgZm9ybXMgb2YKCQkJCQljb25zdGl0dXRpb24gZGlmZmVyaW5nIGluIGtpbmQgZnJvbSBvbmUgYW5vdGhlciwgaW5hc211Y2ggYXMgdGhlc2UgcGFydHMgZGlmZmVyCgkJCQkJaW4ga2luZCBhbW9uZyB0aGVtc2VsdmVzLiBGb3IgYSBjb25zdGl0dXRpb24gbWVhbnMgdGhlIGFycmFuZ2VtZW50IG9mIHRoZQoJCQkJCW1hZ2lzdHJhY2llcywgYW5kIHRoaXMgYWxsIHBlb3BsZSBwbGFuIG91dCBlaXRoZXIgYWNjb3JkaW5nIHRvIHRoZSBwb3dlciBvZgoJCQkJCXRob3NlIHdobyBzaGFyZSBwb2xpdGljYWwgcmlnaHRzLCBvciBhY2NvcmRpbmcgdG8gc29tZSBjb21tb24gZXF1YWxpdHkgYmV0d2VlbgoJCQkJCXRoZW0sIEkgbWVhbiBmb3IgZXhhbXBsZSBiZXR3ZWVuIHRoZSBwb29yIG9yIGJldHdlZW4gdGhlIHJpY2gsIG9yIHNvbWUgZXF1YWxpdHkKCQkJCQljb21tb24gdG8gdGhlbSBib3RoLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBjbGF1c2UgbG9va3MgbGlrZQoJCQkJCQlhbiBpbnRlcnBvbGF0aW9uLjwvbm90ZT4gSXQgZm9sbG93cyB0aGVyZWZvcmUgdGhhdCB0aGVyZSBhcmUgYXMgbWFueSBmb3JtcwoJCQkJCW9mIGNvbnN0aXR1dGlvbiBhcyB0aGVyZSBhcmUgbW9kZXMgb2YgYXJyYW5nZW1lbnQgYWNjb3JkaW5nIHRvIHRoZSBzdXBlcmlvcml0aWVzCgkJCQkJYW5kIHRoZSBkaWZmZXJlbmNlcyBvZiB0aGUgc2VjdGlvbnMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGUgZm9ybXMgbW9zdGx5IGFyZSB0aG91Z2h0IHRvIGJlIHR3b+KAlGp1c3QgYXMgaW4gdGhlIGNhc2Ugb2YKCQkJCQl0aGUgd2luZHMgd2Ugc3BlYWsgb2Ygc29tZSBhcyBub3J0aCBhbmQgc29tZSBhcyBzb3V0aCBhbmQgcmVnYXJkIHRoZSByZXN0IGFzCgkJCQkJZGV2aWF0aW9ucyBmcm9tIHRoZXNlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QXJpc3RvdGxlIHJlZmVycyB0bwoJCQkJCQl0aGlzIHZpZXcgaW4gPGJpYmwgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE1ldGUuIDM2NGEuMTkiPkFyaXN0b3QuIE1ldGVvci4gMzY0YQoJCQkJCQkJMTk8L2JpYmw+LCBzYXlpbmcgdGhhdCB3ZXN0IHdpbmRzIGFyZSBjbGFzc2VkIHdpdGggbm9ydGggYW5kIGVhc3Qgd2luZHMKCQkJCQkJd2l0aCBzb3V0aCwgYmVjYXVzZSB3aW5kIGZyb20gdGhlIHNldHRpbmcgc3VuIGlzIGNvb2xlciBhbmQgZnJvbSB0aGUgcmlzaW5nCgkJCQkJCXN1biB3YXJtZXIuIEhlIG5vdGVzIHRoYXQgbm9ydGggYW5kIHNvdXRoIHdpbmRzIGFyZSB0aGUgbW9zdCBmcmVxdWVudCwgPGJpYmwgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE1ldGUuIDM2MWEuNiI+QXJpc3RvdC4gTWV0ZW9yLiAzNjFhIDY8L2JpYmw+OyB0aGlzIG1heSBoYXZlCgkJCQkJCXN1Z2dlc3RlZCB0aGUgaWRlYSB0aGF0IHRoZXkgd2VyZSB0aGUgdHlwaWNhbCB3aW5kcy48L25vdGU+IHNvIGFsc28gb2YKCQkJCQljb25zdGl0dXRpb25zIHRoZXJlIGFyZSBoZWxkIHRvIGJlIHR3byBmb3JtcywgZGVtb2NyYWN5IGFuZCBvbGlnYXJjaHk7IGZvciBtZW4KCQkJCQlyZWNrb24gYXJpc3RvY3JhY3kgYXMgYSBraW5kIG9mIG9saWdhcmNoeSBiZWNhdXNlIGl0IGlzIG9saWdhcmNoeSBvZiBhIHNvcnQsIGFuZAoJCQkJCXdoYXQgaXMgY2FsbGVkIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQgYXMgZGVtb2NyYWN5LCBqdXN0IGFzIGluIHRoZSBjYXNlIG9mCgkJCQkJdGhlIHdpbmRzIHRoZXkgcmVja29uIHRoZSB3ZXN0IHdpbmQgYXMgYSBraW5kIG9mIG5vcnRoIHdpbmQgYW5kIHRoZSBlYXN0IHdpbmQgYXMKCQkJCQlhIGtpbmQgb2Ygc291dGggd2luZC48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPkFuZCB0aGUgY2FzZSBpcwoJCQkJCXNpbWlsYXIgd2l0aCBtdXNpY2FsIG1vZGVzLCBhcyBzb21lIHBlb3BsZSBzYXk6IGZvciB0aGVyZSB0b28gdGhleSBwb3NpdCB0d28KCQkJCQlraW5kcywgdGhlIERvcmlhbiBtb2RlIGFuZCB0aGUgUGhyeWdpYW4sIGFuZCBjYWxsIHRoZSBvdGhlciBzY2FsZXMgc29tZSBvZiB0aGVtCgkJCQkJRG9yaWFuIGFuZCB0aGUgb3RoZXJzIFBocnlnaWFuLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Gb3IKCQkJCQl0aGUgbW9zdCBwYXJ0IHRoZXJlZm9yZSB0aGV5IGFyZSBhY2N1c3RvbWVkIHRvIHRoaW5rIGluIHRoaXMgd2F5IGFib3V0IHRoZQoJCQkJCWNvbnN0aXR1dGlvbnM7IGJ1dCBpdCBpcyB0cnVlciBhbmQgYmV0dGVyIHRvIGNsYXNzIHRoZW0gYXMgd2UgZGlkLCBhbmQgYXNzdW1pbmcKCQkJCQl0aGF0IHRoZXJlIGFyZSB0d28gd2VsbC1jb25zdHJ1Y3RlZCBmb3Jtcywgb3IgZWxzZSBvbmUsIHRvIHNheSB0aGF0IHRoZSBvdGhlcnMKCQkJCQlhcmUgZGV2aWF0aW9ucywgc29tZSBmcm9tIHRoZSB3ZWxsLWJsZW5kZWQgY29uc3RpdHV0aW9uIGFuZCB0aGUgb3RoZXJzIGZyb20gdGhlCgkJCQkJYmVzdCBvbmUsIHRoZSBtb3JlIHRlbnNlIGFuZCBtYXN0ZXJmdWwgY29uc3RpdHV0aW9ucyBiZWluZyBvbGlnYXJjaGljIGFuZCB0aGUKCQkJCQlyZWxheGVkIGFuZCBzb2Z0IG9uZXMgZGVtb3RpYy48bWlsZXN0b25lIGVkPSJQIiBuPSIzLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBpdCBpcyBub3QgcmlnaHQgdG8gZGVmaW5lIGRlbW9jcmFjeSwgYXMKCQkJCQlzb21lIHBlb3BsZSBhcmUgaW4gdGhlIGN1c3RvbSBvZiBkb2luZyBub3csIG1lcmVseSBhcyB0aGUgY29uc3RpdHV0aW9uIGluIHdoaWNoCgkJCQkJdGhlIG11bHRpdHVkZSBpcyBzb3ZlcmVpZ24g77yIZm9yIGV2ZW4gaW4gb2xpZ2FyY2hpZXMgYW5kIGV2ZXJ5d2hlcmUgdGhlCgkJCQkJbWFqb3JpdHkgaXMgc292ZXJlaWdu77yJIG5vciBvbGlnYXJjaHkgYXMgdGhlIGNvbnN0aXR1dGlvbiBpbiB3aGljaCBhIGZldwoJCQkJCWFyZSBzb3ZlcmVpZ24gb3ZlciB0aGUgZ292ZXJubWVudC4gRm9yIGlmIHRoZSB3aG9sZSBudW1iZXIgd2VyZSB0aGlydGVlbgoJCQkJCWh1bmRyZWQsIGFuZCBhIHRob3VzYW5kIG9mIHRoZXNlIHdlcmUgcmljaCBhbmQgZGlkIG5vdCBnaXZlIHRoZSB0aHJlZSBodW5kcmVkCgkJCQkJcG9vciBhIHNoYXJlIGluIHRoZSBnb3Zlcm5tZW50IGFsdGhvdWdoIHRoZXkgd2VyZSBmcmVlLWJvcm4gYW5kIGxpa2UgdGhlbXNlbHZlcwoJCQkJCWluIGFsbCBvdGhlciByZXNwZWN0cywgbm8gb25lIHdvdWxkIHNheSB0aGF0IHRoaXMgcGVvcGxlIHdhcyBnb3Zlcm5lZAoJCQkJCWRlbW9jcmF0aWNhbGx5OyBhbmQgc2ltaWxhcmx5IGFsc28gaWYgdGhlcmUgd2VyZSBmZXcgcG9vciwgYnV0IHRoZXNlIG1vcmUKCQkJCQlwb3dlcmZ1bCB0aGFuIHRoZSByaWNoIHdobyB3ZXJlIG1vcmUgbnVtZXJvdXMsIG5vIG9uZSB3b3VsZCBjYWxsIHN1Y2ggYQoJCQkJCWdvdmVybm1lbnQgYSBkZW1vY3JhY3kgZWl0aGVyLCBpZiB0aGUgb3RoZXIgY2l0aXplbnMgYmVpbmcgcmljaCBoYWQgbm8gc2hhcmUgaW4KCQkJCQl0aGUgaG9ub3JzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5SYXRoZXIgdGhlcmVmb3JlIG91Z2h0CgkJCQkJd2UgdG8gc2F5IHRoYXQgaXQgaXMgYSBkZW1vY3JhY3kgPG1pbGVzdG9uZSBuPSIxMjkwYiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+d2hlbiB0aGUgZnJlZSBhcmUgc292ZXJlaWduIGFuZCBhbiBvbGlnYXJjaHkKCQkJCQl3aGVuIHRoZSByaWNoIGFyZSwgYnV0IHRoYXQgaXQgY29tZXMgYWJvdXQgdGhhdCB0aGUgc292ZXJlaWduIGNsYXNzIGluIGEKCQkJCQlkZW1vY3JhY3kgaXMgbnVtZXJvdXMgYW5kIHRoYXQgaW4gYW4gb2xpZ2FyY2h5IHNtYWxsIGJlY2F1c2UgdGhlcmUgYXJlIG1hbnkgbWVuCgkJCQkJb2YgZnJlZSBiaXJ0aCBhbmQgZmV3IHJpY2guIEZvciBvdGhlcndpc2UsIHN1cHBvc2UgcGVvcGxlIGFzc2lnbmVkIHRoZSBvZmZpY2VzCgkJCQkJYnkgaGVpZ2h0LCBhcyBzb21lIHBlcnNvbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmUuZy4gPGJpYmwgZGVmYXVsdD0iTk8iIG49IkhkdC4gMy4yMCIgdmFsaWQ9InllcyI+SGR0LiAzLjIwPC9iaWJsPi48L25vdGU+IHNheSBpcyBkb25lIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAwNDg5IiBrZXk9InRnbiw3MDAwNDg5Ij5FdGhpb3BpYTwvcGxhY2VOYW1lPiwgb3IgYnkgYmVhdXR5LCB0aGF0IHdvdWxkIGJlIGFuCgkJCQkJb2xpZ2FyY2h5LCBiZWNhdXNlIGJvdGggdGhlIGhhbmRzb21lIGFuZCB0aGUgdGFsbCBhcmUgZmV3IGluIG51bWJlci4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy44IiB1bml0PSJMb2ViIGNoYXAiIC8+TmV2ZXJ0aGVsZXNzIGl0IGlzIG5vdCBlbm91Z2ggdG8gZGVmaW5lCgkJCQkJdGhlc2UgY29uc3RpdHV0aW9ucyBldmVuIGJ5IHdlYWx0aCBhbmQgZnJlZSBiaXJ0aCBvbmx5OyBidXQgaW5hc211Y2ggYXMgdGhlcmUKCQkJCQlhcmUgbW9yZSBlbGVtZW50cyB0aGFuIG9uZSBib3RoIGluIGRlbW9jcmFjeSBhbmQgaW4gb2xpZ2FyY2h5LCB3ZSBtdXN0IGFkZCB0aGUKCQkJCQlmdXJ0aGVyIGRpc3RpbmN0aW9uIHRoYXQgbmVpdGhlciBpcyBpdCBhIGRlbW9jcmFjeSBpZiB0aGUgZnJlZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aG9zZSBvZiBjaXRpemVuIGJpcnRoLjwvbm90ZT4gYmVpbmcgZmV3CgkJCQkJZ292ZXJuIHRoZSBtYWpvcml0eSB3aG8gYXJlIG5vdCBvZiBmcmVlIGJpcnRoLCBhcyBmb3IgaW5zdGFuY2UgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBcG9sbG9uaWEiIGtleT0icGVyc2V1cyxBcG9sbG9uaWEiPkFwb2xsb25pYTwvcGxhY2VOYW1lPiBvbiB0aGUgSW9uaWFuIEd1bGYgYW5kIGF0CgkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUaGVyYSBDaXR5IiBrZXk9InBlcnNldXMsVGhlcmEgQ2l0eSI+VGhlcmE8L3BsYWNlTmFtZT4g77yIZm9yIGluIGVhY2ggb2YKCQkJCQl0aGVzZSBjaXRpZXMgdGhlIG9mZmljZXMgb2YgaG9ub3Igd2VyZSBmaWxsZWQgYnkgdGhlIHNwZWNpYWxseSBub2JsZSBmYW1pbGllcwoJCQkJCXdobyBoYWQgYmVlbiB0aGUgZmlyc3Qgc2V0dGxlcnMgb2YgdGhlIGNvbG9uaWVzLCBhbmQgdGhlc2Ugd2VyZSBmZXcgb3V0IG9mCgkJCQkJbWFuee+8iSwgbm9yIGlzIGl0IGEgZGVtb2NyYWN5PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzCgkJCQkJCXRoZSBHcmVlayBzaG91bGQgYmUgYWx0ZXJlZCBoZXJlIHRvIGdpdmUg4oCYYW4KCQkJCQkJb2xpZ2FyY2h5LuKAmTwvbm90ZT4gaWYgdGhlIHJpY2ggcnVsZSBiZWNhdXNlIHRoZXkgYXJlIGluIGEKCQkJCQltYWpvcml0eSwgYXMgaW4gYW5jaWVudCB0aW1lcyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENvbG9waG9uIiBrZXk9InBlcnNldXMsQ29sb3Bob24iPkNvbG9waG9uPC9wbGFjZU5hbWU+IO+8iGZvciB0aGVyZSB0aGUgbWFqb3JpdHkgb2YgdGhlIHBvcHVsYXRpb24KCQkJCQlvd25lZCBsYXJnZSBwcm9wZXJ0eSBiZWZvcmUgdGhlIHdhciBhZ2FpbnN0IHRoZSBMeWRpYW5zIHRvb2sgcGxhY2XvvIksCgkJCQkJYnV0IGl0IGlzIGEgZGVtb2NyYWN5IHdoZW4gdGhvc2Ugd2hvIGFyZSBmcmVlIGFyZSBpbiB0aGUgbWFqb3JpdHkgYW5kIGhhdmUKCQkJCQlzb3ZlcmVpZ250eSBvdmVyIHRoZSBnb3Zlcm5tZW50LCBhbmQgYW4gb2xpZ2FyY2h5IHdoZW4gdGhlIHJpY2ggYW5kIG1vcmUgd2VsbAoJCQkJCQlib3JuPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hcmUgZmV3IGFuZCBzb3ZlcmVpZ24uCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgaGFzIHRoZW4gYmVlbiBzdGF0ZWQgdGhhdCB0aGVyZSBhcmUgc2V2ZXJhbCBmb3JtcyBvZiBjb25zdGl0dXRpb24sIGFuZCB3aGF0CgkJCQkJaXMgdGhlIGNhdXNlIG9mIHRoaXM7IGJ1dCBsZXQgdXMgdGFrZSB0aGUgc3RhcnRpbmctcG9pbnQgdGhhdCB3YXMgbGFpZCBkb3duCgkJCQkJCWJlZm9yZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDMuMS48L25vdGU+IGFuZCBzYXkgdGhhdCB0aGVyZQoJCQkJCWFyZSBtb3JlIGZvcm1zIHRoYW4gdGhvc2UgbWVudGlvbmVkLCBhbmQgd2hhdCB0aGVzZSBmb3JtcyBhcmUsIGFuZCB3aHkgdGhleQoJCQkJCXZhcnkuIEZvciB3ZSBhZ3JlZSB0aGF0IGV2ZXJ5IHN0YXRlIHBvc3Nlc3NlcyBub3Qgb25lIHBhcnQgYnV0IHNldmVyYWwuCgkJCQkJVGhlcmVmb3JlIGp1c3QgYXMsIGluIGNhc2Ugd2UgaW50ZW5kZWQgdG8gb2J0YWluIGEgY2xhc3NpZmljYXRpb24gb2YgYW5pbWFscywgd2UKCQkJCQlzaG91bGQgZmlyc3QgZGVmaW5lIHRoZSBwcm9wZXJ0aWVzIG5lY2Vzc2FyaWx5IGJlbG9uZ2luZyB0byBldmVyeSBhbmltYWwKCQkJCQnvvIhmb3IgaW5zdGFuY2Ugc29tZSBvZiB0aGUgc2Vuc2Ugb3JnYW5zLCBhbmQgdGhlIG1hY2hpbmVyeSBmb3IKCQkJCQltYXN0aWNhdGluZyBhbmQgZm9yIHJlY2VpdmluZyBmb29kLCBzdWNoIGFzIGEgbW91dGggYW5kIGEgc3RvbWFjaCwgYW5kIGluCgkJCQkJYWRkaXRpb24gdG8gdGhlc2UgdGhlIGxvY29tb3RpdmUgb3JnYW5zIG9mIHRoZSB2YXJpb3VzIHNwZWNpZXPvvIksCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgaWYgdGhlcmUgd2VyZSBvbmx5IHNvIG1hbnkKCQkJCQluZWNlc3NhcnkgcGFydHMsIGJ1dCB0aGVyZSB3ZXJlIGRpZmZlcmVudCB2YXJpZXRpZXMgb2YgdGhlc2Ug77yISSBtZWFuCgkJCQkJZm9yIGluc3RhbmNlIGNlcnRhaW4gdmFyaW91cyBraW5kcyBvZiBtb3V0aCBhbmQgc3RvbWFjaCBhbmQgc2Vuc29yeSBvcmdhbnMsIGFuZAoJCQkJCWFsc28gb2YgdGhlIGxvY29tb3RpdmUgcGFydHMgYXMgd2VsbO+8iSwgdGhlIG51bWJlciBvZiBwb3NzaWJsZQoJCQkJCWNvbWJpbmF0aW9ucyBvZiB0aGVzZSB2YXJpYXRpb25zIHdpbGwgbmVjZXNzYXJpbHkgcHJvZHVjZSBhIHZhcmlldHkgb2Yga2luZHMgb2YKCQkJCQlhbmltYWxzIO+8iGZvciBpdCBpcyBub3QgcG9zc2libGUgZm9yIHRoZSBzYW1lIGFuaW1hbCB0byBoYXZlIHNldmVyYWwKCQkJCQlkaWZmZXJlbnQgc29ydHMgb2YgbW91dGgsIG5vciBzaW1pbGFybHkgb2YgZWFycyBlaXRoZXLvvIksIHNvIHRoYXQgd2hlbgoJCQkJCWFsbCB0aGUgcG9zc2libGUgY29tYmluYXRpb25zIG9mIHRoZXNlIGFyZSB0YWtlbiB0aGV5IHdpbGwgYWxsIHByb2R1Y2UgYW5pbWFsCgkJCQkJc3BlY2llcywgYW5kIHRoZXJlIHdpbGwgYmUgYXMgbWFueSBzcGVjaWVzIG9mIHRoZSBhbmltYWwgYXMgdGhlcmUgYXJlCgkJCQkJY29tYmluYXRpb25zIG9mIHRoZSBuZWNlc3NhcnkgcGFydHM64oCUPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPnNvIGluIHRoZSBzYW1lIHdheSBhbHNvIHdlIHNoYWxsIGNsYXNzaWZ5IHRoZSB2YXJpZXRpZXMgb2YKCQkJCQl0aGUgY29uc3RpdHV0aW9ucyB0aGF0IGhhdmUgYmVlbiBtZW50aW9uZWQuIEZvciBzdGF0ZXMgYWxzbyBhcmUgY29tcG9zZWQgbm90IG9mCgkJCQkJb25lIGJ1dCBvZiBzZXZlcmFsIHBhcnRzLCBhcyBoYXMgYmVlbiBzYWlkIG9mdGVuLiBPbmUgb2YgdGhlc2UgcGFydHMgdGhlcmVmb3JlCgkJCQkJaXMgdGhlIG1hc3Mgb2YgcGVyc29ucyBjb25jZXJuZWQgd2l0aCBmb29kIHdobyBhcmUgY2FsbGVkIGZhcm1lcnMsIDxtaWxlc3RvbmUgbj0iMTI5MWEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZAoJCQkJCXNlY29uZCBpcyB3aGF0IGlzIGNhbGxlZCB0aGUgbWVjaGFuaWMgY2xhc3Mg77yIYW5kIHRoaXMgaXMgdGhlIGdyb3VwCgkJCQkJZW5nYWdlZCBpbiB0aGUgYXJ0cyB3aXRob3V0IHdoaWNoIGl0IGlzIGltcG9zc2libGUgZm9yIGEgY2l0eSB0byBiZSBpbmhhYml0ZWQsCgkJCQkJYW5kIHNvbWUgb2YgdGhlc2UgYXJ0cyBhcmUgaW5kaXNwZW5zYWJseSBuZWNlc3NhcnksIHdoaWxlIG90aGVycyBjb250cmlidXRlIHRvCgkJCQkJbHV4dXJ5IG9yIG5vYmxlIGxpdmluZ++8iSwgYW5kIHRoaXJkIGlzIGEgY29tbWVyY2lhbCBjbGFzcyDvvIhieQoJCQkJCXdoaWNoIEkgbWVhbiB0aGUgY2xhc3MgdGhhdCBpcyBlbmdhZ2VkIGluIHNlbGxpbmcgYW5kIGJ1eWluZyBhbmQgaW4gd2hvbGVzYWxlCgkJCQkJYW5kIHJldGFpbCB0cmFkZe+8iSwgYW5kIGZvdXJ0aCBpcyB0aGUgY2xhc3Mgb2YgbWFudWFsIGxhYm9yZXJzLCBhbmQgdGhlCgkJCQkJZmlmdGggY2xhc3MgaXMgdGhlIG9uZSB0byBkZWZlbmQgdGhlIHN0YXRlIGluIHdhciwgd2hpY2ggaXMgbm8gbGVzcwoJCQkJCWluZGlzcGVuc2FibGUgdGhhbiB0aGUgb3RoZXJzIGlmIHRoZSBwZW9wbGUgYXJlIG5vdCB0byBiZWNvbWUgdGhlIHNsYXZlcyBvZgoJCQkJCXRob3NlIHdobyBjb21lIGFnYWluc3QgdGhlbTsgZm9yIHN1cmVseSBpdCBpcyBxdWl0ZSBvdXQgb2YgdGhlIHF1ZXN0aW9uIHRoYXQgaXQKCQkJCQlzaG91bGQgYmUgcHJvcGVyIHRvIGdpdmUgdGhlIG5hbWUgb2Ygc3RhdGUgdG8gYSBjb21tdW5pdHkgdGhhdCBpcyBieSBuYXR1cmUgYQoJCQkJCXNsYXZlLCBmb3IgYSBzdGF0ZSBpcyBzZWxmLXN1ZmZpY2llbnQsIGJ1dCB0aGF0IHdoaWNoIGlzIGEgc2xhdmUgaXMgbm90CgkJCQkJc2VsZi1zdWZmaWNpZW50LiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmVmb3JlIHRoZQoJCQkJCXN0YXRlbWVudCBtYWRlIGluIHRoZSA8dGl0bGU+UmVwdWJsaWM8L3RpdGxlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCTxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBSZXAuIDM2OWIiIHZhbGlkPSJ5ZXMiPlBsYXQuIFJlcC4gMzY5Yi0zNzFlPC9iaWJsPgoJCQkJCTwvbm90ZT4gaXMgd2l0dHkgYnV0IG5vdCBhZGVxdWF0ZS4gRm9yIFNvY3JhdGVzIHNheXMgdGhhdCB0aGUgbW9zdCBuZWNlc3NhcnkKCQkJCQllbGVtZW50cyBvZiB3aGljaCBhIHN0YXRlIGlzIGNvbXBvc2VkIGFyZSBmb3VyLCBhbmQgaGUgc3BlY2lmaWVzIHRoZXNlIGFzIGEKCQkJCQl3ZWF2ZXIsIGEgZmFybWVyLCBhIHNob2VtYWtlciBhbmQgYSBidWlsZGVyOyBhbmQgdGhlbiBhZ2FpbiBoZSBhZGRzLCBvbiB0aGUKCQkJCQlncm91bmQgdGhhdCB0aGVzZSBhcmUgbm90IHNlbGYtc3VmZmljaWVudCwgYSBjb3BwZXItc21pdGggYW5kIHRoZSBwZW9wbGUgdG8gbG9vawoJCQkJCWFmdGVyIHRoZSBuZWNlc3NhcnkgbGl2ZS1zdG9jaywgYW5kIGluIGFkZGl0aW9uIGEgbWVyY2hhbnQgYW5kIGEgcmV0YWlsIHRyYWRlci4KCQkJCQlUaGVzZSBlbGVtZW50cyB0b2dldGhlciBjb25zdGl0dXRlIHRoZSBmdWxsIGNvbXBsZW1lbnQgb2YgaGlzIGZpcnN0IGNpdHksPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRoZSBmaXJzdCBza2V0Y2ggb2YgdGhlIENpdHktc3RhdGUsIGxvYy4KCQkJCQkJY2l0Ljwvbm90ZT4gaW1wbHlpbmcgdGhhdCBldmVyeSBjaXR5IGlzIGZvcm1lZCBmb3IgdGhlIHNha2Ugb2YgdGhlCgkJCQkJbmVjZXNzYXJpZXMgb2YgbGlmZSBhbmQgbm90IHJhdGhlciBmb3IgdGhlIHNha2Ugb2Ygd2hhdCBpcyBub2JsZSwgYW5kIHRoYXQgaXQKCQkJCQloYXMgZXF1YWwgbmVlZCBvZiBib3RoIHNob2VtYWtlcnMgYW5kIGZhcm1lcnM7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMTMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQgdGhlIHdhcnJpb3IgY2xhc3M8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmhlIGRvZXMgbm90IGFzc2lnbiB0byBpdCB1bnRpbCBhcyB0aGUgdGVycml0b3J5IGlzIGluY3JlYXNlZAoJCQkJCWFuZCBjb21lcyBpbnRvIGNvbnRhY3Qgd2l0aCB0aGF0IG9mIHRoZSBuZWlnaGJvcnMgdGhleSBhcmUgYnJvdWdodCBpbnRvIHdhci4gQnV0CgkJCQkJeWV0IGV2ZW4gYW1vbmcgdGhlIGZvdXIgcGFydG5lcnMgb3Igd2hhdGV2ZXIgdGhlaXIgbnVtYmVyIGJlIHRoZXJlIG11c3QKCQkJCQluZWNlc3NhcmlseSBiZSBzb21lYm9keSB0byBhc3NpZ24ganVzdGljZSBhbmQgdG8ganVkZ2UgdGhlaXIgY2xhaW1zOyBpbmFzbXVjaAoJCQkJCXRoZXJlZm9yZSBhcyBvbmUgd291bGQgY291bnQgdGhlIHNvdWwgb2YgYW4gYW5pbWFsIHRvIGJlIG1vcmUgYSBwYXJ0IG9mIGl0IHRoYW4KCQkJCQl0aGUgYm9keSwgc28gYWxzbyB0aGUgZmFjdG9ycyBpbiBzdGF0ZXMgY29ycmVzcG9uZGluZyB0byB0aGUgc291bCBtdXN0IGJlIGRlZW1lZAoJCQkJCXRvIGJlIHBhcnRzIG9mIHRoZW0gbW9yZSB0aGFuIHRob3NlIGZhY3RvcnMgd2hpY2ggY29udHJpYnV0ZSB0byBuZWNlc3NhcnkKCQkJCQl1dGlsaXR5LOKAlHRoZSBmb3JtZXIgYmVpbmcgdGhlIG1pbGl0YXJ5IGNsYXNzIGFuZCB0aGUgY2xhc3MgdGhhdCBwbGF5cwoJCQkJCWEgcGFydCBpbiBqdWRpY2lhbCBqdXN0aWNlLCBhbmQgaW4gYWRkaXRpb24gdG8gdGhlc2UgdGhlIGRlbGliZXJhdGl2ZSBjbGFzcywKCQkJCQlkZWxpYmVyYXRpb24gYmVpbmcgYSBmdW5jdGlvbiBvZiBwb2xpdGljYWwgaW50ZWxsaWdlbmNlLiBBbmQgaXQgbWFrZXMgbm8KCQkJCQlkaWZmZXJlbmNlIHRvIHRoZSBhcmd1bWVudCB3aGV0aGVyIHRoZXNlIGZ1bmN0aW9ucyBhcmUgaGVsZCBieSBzcGVjaWFsIGNsYXNzZXMKCQkJCQlzZXBhcmF0ZWx5IG9yIGJ5IHRoZSBzYW1lIHBlcnNvbnM7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5mb3IgaXQgb2Z0ZW4gaGFwcGVucyBmb3IgdGhlIHNhbWUgbWVuIHRvIGJlIGJvdGggc29sZGllcnMgYW5kIGZhcm1lcnMuIEhlbmNlCgkJCQkJaW5hc211Y2ggYXMgYm90aCBncm91cHM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBmaXJzdCBmb3VyCgkJCQkJCWNsYXNzZXMgYW5kIHRoZSBmaWZ0aCBhbmQgc2l4dGgg77yIdGhlIG1pbGl0YXJ5IGFuZAoJCQkJCQlqdWRpY2lhbO+8iS48L25vdGU+IG9mIGNsYXNzZXMgbXVzdCBiZSBjb3VudGVkIHBhcnRzIG9mIHRoZSBzdGF0ZSwgaXQKCQkJCQlpcyBjbGVhciB0aGF0IHRoZSBoZWF2eS1hcm1lZCBzb2xkaWVyeSBhdCBhbnkgcmF0ZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+TG93ZXIgZ3JhZGVzIG9mIHRoZSBmb3JjZXMgbWF5IGJlIGV4Y2x1ZGVkIGZyb20gY2l0aXplbnNoaXAsCgkJCQkJCWUuZy4gdGhlIHJvd2VycyBvZiB0aGUgdHJpcmVtZXMg77yIc2VlIGJlbG93LCAxMzc2YgoJCQkJCQkxNe+8iS48L25vdGU+IG11c3QgYmUgYSBwYXJ0IG9mIHRoZSBzdGF0ZS4gQW5kIGEgc2V2ZW50aCBjbGFzcyBpcyB0aGUKCQkJCQlvbmUgdGhhdCBzZXJ2ZXMgdGhlIGNvbW11bml0eSBieSBtZWFucyBvZiBpdHMgcHJvcGVydHksIHRoZSBjbGFzcyB0aGF0IHdlIGNhbGwKCQkJCQl0aGUgcmljaC4gQW5kIGFuIGVpZ2h0aCBpcyB0aGUgY2xhc3Mgb2YgcHVibGljIHNlcnZhbnRzLCB0aGF0IGlzLCB0aG9zZSB3aG8KCQkJCQlzZXJ2ZSBpbiB0aGUgbWFnaXN0cmFjaWVzLCBpbmFzbXVjaCBhcyB3aXRob3V0IHJ1bGVycyBpdCBpcyBpbXBvc3NpYmxlIGZvciBhCgkJCQkJY2l0eSB0byBleGlzdDsgaXQgaXMgdGhlcmVmb3JlIG5lY2Vzc2FyeSB0aGF0IHRoZXJlIHNob3VsZCBiZSBzb21lIG1lbiB3aG8gYXJlCgkJCQkJYWJsZSB0byBnb3Zlcm4gYW5kIHdobyByZW5kZXIgdGhpcyBzZXJ2aWNlIHRvIHRoZSBzdGF0ZSBlaXRoZXIgY29udGludW91c2x5IG9yCgkJCQkJaW4gdHVybi4gQW5kIHRoZXJlIHJlbWFpbiB0aGUgY2xhc3NlcyB3aGljaCB3ZSBoYXBwZW4gdG8gaGF2ZSBkZWZpbmVkIGp1c3QKCQkJCQliZWZvcmUsIHRoZSBkZWxpYmVyYXRpdmUgY2xhc3MgYW5kIHRoZSBvbmUgdGhhdCBqdWRnZXMgdGhlIGNsYWltcyBvZiBsaXRpZ2FudHMuCgkJCQkJSWYgdGhlcmVmb3JlIGl0IGlzIHByb3BlciBmb3IgdGhlIHN0YXRlcyB0byBoYXZlIHRoZXNlIGZ1bmN0aW9ucyBwZXJmb3JtZWQsIGFuZAoJCQkJCXdlbGwgYW5kIGp1c3RseSBwZXJmb3JtZWQsIDxtaWxlc3RvbmUgbj0iMTI5MWIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPml0IGlzIG5lY2Vzc2FyeSBmb3IgdGhlcmUgYWxzbyB0byBiZSBzb21lIG1lbgoJCQkJCXBvc3Nlc3NpbmcgdmlydHVlIGluIHRoZSBmb3JtIG9mIHBvbGl0aWNhbCBleGNlbGxlbmNlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjE1IiB1bml0PSJMb2ViIGNoYXAiIC8+Tm93IGFzIHRvIHRoZSBvdGhlciBjYXBhY2l0aWVzIG1hbnkgcGVvcGxlIHRoaW5rCgkJCQkJdGhhdCBpdCBpcyBwb3NzaWJsZSBmb3IgdGhlbSB0byBiZSBwb3NzZXNzZWQgaW4gY29tYmluYXRpb24sIGZvciBleGFtcGxlLCBmb3IKCQkJCQl0aGUgc2FtZSBtZW4gdG8gYmUgdGhlIHNvbGRpZXJzIHRoYXQgZGVmZW5kIHRoZSBzdGF0ZSBpbiB3YXIgYW5kIHRoZSBmYXJtZXJzCgkJCQkJdGhhdCB0aWxsIHRoZSBsYW5kIGFuZCB0aGUgYXJ0aXNhbnMsIGFuZCBhbHNvIHRoZSBjb3VuY2lsbG9ycyBhbmQganVkZ2VzLCBhbmQKCQkJCQlpbmRlZWQgYWxsIG1lbiBjbGFpbSB0byBwb3NzZXNzIHZpcnR1ZSBhbmQgdGhpbmsgdGhlbXNlbHZlcyBjYXBhYmxlIG9mIGZpbGxpbmcKCQkJCQltb3N0IG9mIHRoZSBvZmZpY2VzIG9mIHN0YXRlOyBidXQgaXQgaXMgbm90IHBvc3NpYmxlIGZvciB0aGUgc2FtZSBtZW4gdG8gYmUgcG9vcgoJCQkJCWFuZCByaWNoLiBIZW5jZSB0aGVzZSBzZWVtIHRvIGJlIGluIHRoZSBmdWxsZXN0IHNlbnNlIHRoZSBwYXJ0cyBvZiB0aGUgc3RhdGUsCgkJCQkJdGhlIHJpY2ggYW5kIHRoZSBwb29yLiBBbmQgYWxzbyB0aGUgZmFjdCB0aGF0IHRoZSByaWNoIGFyZSB1c3VhbGx5IGZldyBhbmQgdGhlCgkJCQkJcG9vciBtYW55IG1ha2VzIHRoZXNlIHR3byBhbW9uZyB0aGUgcGFydHMgb2YgdGhlIHN0YXRlIGFwcGVhciBhcyBvcHBvc2l0ZQoJCQkJCXNlY3Rpb25zOyBzbyB0aGF0IHRoZSBzdXBlcmlvciBjbGFpbXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLgoJCQkJCQkzLjExLCAxMiBmaW4uPC9ub3RlPiBvZiB0aGVzZSBjbGFzc2VzIGFyZSBldmVuIG1hZGUgdGhlIGd1aWRpbmcgcHJpbmNpcGxlcwoJCQkJCXVwb24gd2hpY2ggY29uc3RpdHV0aW9ucyBhcmUgY29uc3RydWN0ZWQsIGFuZCBpdCBpcyB0aG91Z2h0IHRoYXQgdGhlcmUgYXJlIHR3bwoJCQkJCWZvcm1zIG9mIGNvbnN0aXR1dGlvbiwgZGVtb2NyYWN5IGFuZCBvbGlnYXJjaHkuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGF0IHRoZXJlIGFyZSB0aGVuIHNldmVyYWwKCQkJCQlmb3JtcyBvZiBjb25zdGl0dXRpb24sIGFuZCB3aGF0IGFyZSB0aGUgcmVhc29ucyBmb3IgdGhpcywgaGFzIGJlZW4gc3RhdGVkCgkJCQkJYmVmb3JlOyBsZXQgdXMgbm93IHNheSB0aGF0IHRoZXJlIGFyZSBzZXZlcmFsIHZhcmlldGllcyBib3RoIG9mIGRlbW9jcmFjeSBhbmQgb2YKCQkJCQlvbGlnYXJjaHkuIEFuZCB0aGlzIGlzIGNsZWFyIGV2ZW4gZnJvbSB3aGF0IGhhcyBiZWVuIHNhaWQgYWxyZWFkeS4gRm9yIHRoZXJlIGFyZQoJCQkJCXNldmVyYWwgY2xhc3NlcyBib3RoIG9mIHRoZSBwZW9wbGUgYW5kIG9mIHRob3NlIGNhbGxlZCB0aGUgbm90YWJsZXM7IGZvcgoJCQkJCWluc3RhbmNlIGNsYXNzZXMgb2YgdGhlIHBlb3BsZSBhcmUsIG9uZSB0aGUgZmFybWVycywgYW5vdGhlciB0aGUgY2xhc3MgZGVhbGluZwoJCQkJCXdpdGggdGhlIGFydHMgYW5kIGNyYWZ0cywgYW5vdGhlciB0aGUgY29tbWVyY2lhbCBjbGFzczxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+b2NjdXBpZWQgaW4gYnV5aW5nIGFuZCBzZWxsaW5nIGFuZCBhbm90aGVyIHRoZSBvbmUKCQkJCQlvY2N1cGllZCB3aXRoIHRoZSBzZWHigJRhbmQgdGhpcyBpcyBkaXZpZGVkIGludG8gdGhlIGNsYXNzZXMgY29uY2VybmVkCgkJCQkJd2l0aCBuYXZhbCB3YXJmYXJlLCB3aXRoIHRyYWRlLCB3aXRoIGZlcnJ5aW5nIHBhc3NlbmdlcnMgYW5kIHdpdGggZmlzaGluZwoJCQkJCe+8iGZvciBlYWNoIG9mIHRoZXNlIGNsYXNzZXMgaXMgZXh0cmVtZWx5IG51bWVyb3VzIGluIHZhcmlvdXMgcGxhY2VzLCBmb3IKCQkJCQlpbnN0YW5jZSBmaXNoZXJtZW4gYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDQxMDAiIGtleT0idGduLDcwMDQxMDAiPlRhcmVudHVtPC9wbGFjZU5hbWU+IGFuZAoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEJ5emFudGl1bSIga2V5PSJwZXJzZXVzLEJ5emFudGl1bSI+Qnl6YW50aXVtPC9wbGFjZU5hbWU+LCBuYXZ5IG1lbiBhdAoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB0aGUgbWVyY2FudGlsZSBjbGFzcyBhdAoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTA4NyIga2V5PSJ0Z24sNzAxMTA4NyI+QWVnaW5hPC9wbGFjZU5hbWU+IGFuZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjY3MCIga2V5PSJ0Z24sNzAwMjY3MCI+Q2hpb3M8L3BsYWNlTmFtZT4sIGFuZCB0aGUgZmVycnltYW4tY2xhc3MgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUZW5lZG9zIiBrZXk9InBlcnNldXMsVGVuZWRvcyI+VGVuZWRvczwvcGxhY2VOYW1lPu+8iSwgYW5kIGluIGFkZGl0aW9uIHRvCgkJCQkJdGhlc2UgdGhlIGhhbmQtd29ya2luZyBjbGFzcyBhbmQgdGhlIHBlb3BsZSBwb3NzZXNzaW5nIGxpdHRsZSBzdWJzdGFuY2Ugc28gdGhhdAoJCQkJCXRoZXkgY2Fubm90IGxpdmUgYSBsaWZlIG9mIGxlaXN1cmUsIGFsc28gdGhvc2UgdGhhdCBhcmUgbm90IGZyZWUgbWVuIG9mIGNpdGl6ZW4KCQkJCQlwYXJlbnRhZ2Ugb24gYm90aCBzaWRlcywgYW5kIGFueSBvdGhlciBzaW1pbGFyIGNsYXNzIG9mIGNvbW1vbiBwZW9wbGU7IHdoaWxlCgkJCQkJYW1vbmcgdGhlIG5vdGFibGVzIHdlYWx0aCwgYmlydGgsIHZpcnR1ZSwgZWR1Y2F0aW9uLCBhbmQgdGhlIGRpc3RpbmN0aW9ucyB0aGF0CgkJCQkJYXJlIHNwb2tlbiBvZiBpbiB0aGUgc2FtZSBncm91cCBhcyB0aGVzZSwgZm9ybSB0aGUgY2xhc3Nlcy48bWlsZXN0b25lIGVkPSJQIiBuPSI0LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBmaXJzdCBraW5kIG9mCgkJCQkJZGVtb2NyYWN5IHRoZXJlZm9yZSBpcyB0aGUgb25lIHdoaWNoIHJlY2VpdmVzIHRoZSBuYW1lIGNoaWVmbHkgaW4gcmVzcGVjdCBvZgoJCQkJCWVxdWFsaXR5LiBGb3IgdGhlIGxhdyBvZiB0aGlzIHNvcnQgb2YgZGVtb2NyYWN5IGFzY3JpYmVzIGVxdWFsaXR5IHRvIHRoZSBzdGF0ZQoJCQkJCW9mIHRoaW5ncyBpbiB3aGljaCB0aGUgcG9vciBoYXZlIG5vIG1vcmUgcHJvbWluZW5jZSB0aGFuIHRoZSByaWNoLCBhbmQgbmVpdGhlcgoJCQkJCWNsYXNzIGlzIHNvdmVyZWlnbiwgYnV0IGJvdGggYXJlIGFsaWtlOyBmb3IgYXNzdW1pbmcgdGhhdCBmcmVlZG9tIGlzIGNoaWVmbHkKCQkJCQlmb3VuZCBpbiBhIGRlbW9jcmFjeSwgYXMgc29tZSBwZXJzb25zIHN1cHBvc2UsIGFuZCBhbHNvIGVxdWFsaXR5LCB0aGlzIHdvdWxkIGJlCgkJCQkJc28gbW9zdCBmdWxseSB3aGVuIHRvIHRoZSBmdWxsZXN0IGV4dGVudCBhbGwgYWxpa2Ugc2hhcmUgZXF1YWxseSBpbiB0aGUKCQkJCQlnb3Zlcm5tZW50LiBBbmQgc2luY2UgdGhlIHBlb3BsZSBhcmUgaW4gdGhlIG1ham9yaXR5LCBhbmQgYSByZXNvbHV0aW9uIHBhc3NlZCBieQoJCQkJCWEgbWFqb3JpdHkgaXMgcGFyYW1vdW50LCB0aGlzIG11c3QgbmVjZXNzYXJpbHkgYmUgYSBkZW1vY3JhY3kuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoaXMgdGhlcmVmb3JlIGlzIG9uZSBraW5kIG9mIGRlbW9jcmFjeSwKCQkJCQl3aGVyZSB0aGUgb2ZmaWNlcyBhcmUgaGVsZCBvbiBwcm9wZXJ0eSBxdWFsaWZpY2F0aW9ucywgYnV0IHRoZXNlIGxvdyBvbmVzLAoJCQkJCWFsdGhvdWdoIGl0IGlzIGVzc2VudGlhbCB0aGF0IHRoZSBtYW4gd2hvIGFjcXVpcmVzIHRoZSBzcGVjaWZpZWQgYW1vdW50IHNob3VsZAoJCQkJCWhhdmUgdGhlIHJpZ2h0IHRvIGhvbGQgb2ZmaWNlLCBhbmQgdGhlIG1hbiB3aG8gbG9zZXMgaXQgc2hvdWxkIG5vdCBob2xkIG9mZmljZS4KCQkJCQkJPG1pbGVzdG9uZSBuPSIxMjkyYSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+QW5kIGFub3RoZXIga2luZCBvZiBkZW1vY3JhY3kgaXMgZm9yIGFsbCB0aGUgY2l0aXplbnMgdGhhdCBhcmUKCQkJCQlub3Qgb3BlbiB0byBjaGFsbGVuZ2U8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gb24gdGhlIHNjb3JlIG9mCgkJCQkJCWJpcnRoLCBjZi4gNS40Ljwvbm90ZT4gdG8gaGF2ZSBhIHNoYXJlIGluIG9mZmljZSwgYnV0IGZvciB0aGUgbGF3IHRvIHJ1bGU7CgkJCQkJYW5kIGFub3RoZXIga2luZCBvZiBkZW1vY3JhY3kgaXMgZm9yIGFsbCB0byBzaGFyZSBpbiB0aGUgb2ZmaWNlcyBvbiB0aGUgbWVyZQoJCQkJCXF1YWxpZmljYXRpb24gb2YgYmVpbmcgYSBjaXRpemVuLCBidXQgZm9yIHRoZSBsYXcgdG8gcnVsZS4gQW5vdGhlciBraW5kIG9mCgkJCQkJZGVtb2NyYWN5IGlzIHdoZXJlIGFsbCB0aGUgb3RoZXIgcmVndWxhdGlvbnMgYXJlIHRoZSBzYW1lLCBidXQgdGhlIG11bHRpdHVkZSBpcwoJCQkJCXNvdmVyZWlnbiBhbmQgbm90IHRoZSBsYXc7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCB0aGlzCgkJCQkJY29tZXMgYWJvdXQgd2hlbiB0aGUgZGVjcmVlcyBvZiB0aGUgYXNzZW1ibHkgb3Zlci1yaWRlIHRoZSBsYXcuIFRoaXMgc3RhdGUgb2YKCQkJCQl0aGluZ3MgaXMgYnJvdWdodCBhYm91dCBieSB0aGUgZGVtYWdvZ3VlczsgZm9yIGluIHRoZSBzdGF0ZXMgdW5kZXIgZGVtb2NyYXRpYwoJCQkJCWdvdmVybm1lbnQgZ3VpZGVkIGJ5IGxhdyBhIGRlbWFnb2d1ZSBkb2VzIG5vdCBhcmlzZSwgYnV0IHRoZSBiZXN0IGNsYXNzZXMgb2YKCQkJCQljaXRpemVucyBhcmUgaW4gdGhlIG1vc3QgcHJvbWluZW50IHBvc2l0aW9uOyBidXQgd2hlcmUgdGhlIGxhd3MgYXJlIG5vdAoJCQkJCXNvdmVyZWlnbiwgdGhlbiBkZW1hZ29ndWVzIGFyaXNlOyBmb3IgdGhlIGNvbW1vbiBwZW9wbGUgYmVjb21lIGEgc2luZ2xlCgkJCQkJY29tcG9zaXRlIG1vbmFyY2gsIHNpbmNlIHRoZSBtYW55IGFyZSBzb3ZlcmVpZ24gbm90IGFzIGluZGl2aWR1YWxzIGJ1dAoJCQkJCWNvbGxlY3RpdmVseS4gWWV0IHdoYXQga2luZCBvZiBkZW1vY3JhY3kgSG9tZXI8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPgoJCQkJCQk8YmlibCBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gMi4yMDQiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDIuMjA0PC9iaWJsPgoJCQkJCTwvbm90ZT4gbWVhbnMgYnkgdGhlIHdvcmRzIOKAmG5vIGJsZXNzaW5nIGlzIHRoZSBsb3Jkc2hpcCBvZiB0aGUKCQkJCQltYW554oCZ4oCUd2hldGhlciBoZSBtZWFucyB0aGlzIGtpbmQgb3Igd2hlbiB0aG9zZSB3aG8gcnVsZSBhcwoJCQkJCWluZGl2aWR1YWxzIGFyZSBtb3JlIG51bWVyb3VzLCBpcyBub3QgY2xlYXIuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkhvd2V2ZXIsIGEgcGVvcGxlIG9mIHRoaXMgc29ydCwgYXMgYmVpbmcgbW9uYXJjaCwgc2Vla3MgdG8KCQkJCQlleGVyY2lzZSBtb25hcmNoaWMgcnVsZSB0aHJvdWdoIG5vdCBiZWluZyBydWxlZCBieSB0aGUgbGF3LCBhbmQgYmVjb21lcwoJCQkJCWRlc3BvdGljLCBzbyB0aGF0IGZsYXR0ZXJlcnMgYXJlIGhlbGQgaW4gaG9ub3IuIEFuZCBhIGRlbW9jcmFjeSBvZiB0aGlzIG5hdHVyZQoJCQkJCWlzIGNvbXBhcmFibGUgdG8gdGhlIHR5cmFubmljYWwgZm9ybSBvZiBtb25hcmNoeSwgYmVjYXVzZSB0aGVpciBzcGlyaXQgaXMgdGhlCgkJCQkJc2FtZSwgYW5kIGJvdGggZXhlcmNpc2UgZGVzcG90aWMgY29udHJvbCBvdmVyIHRoZSBiZXR0ZXIgY2xhc3NlcywgYW5kIHRoZQoJCQkJCWRlY3JlZXMgdm90ZWQgYnkgdGhlIGFzc2VtYmx5PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hcmUgbGlrZQoJCQkJCXRoZSBjb21tYW5kcyBpc3N1ZWQgaW4gYSB0eXJhbm55LCBhbmQgdGhlIGRlbWFnb2d1ZXMgYW5kIHRoZSBmbGF0dGVyZXJzIGFyZSB0aGUKCQkJCQlzYW1lIHBlb3BsZSBvciBhIGNvcnJlc3BvbmRpbmcgY2xhc3MsIGFuZCBlaXRoZXIgc2V0IGhhcyB0aGUgdmVyeSBzdHJvbmdlc3QKCQkJCQlpbmZsdWVuY2Ugd2l0aCB0aGUgcmVzcGVjdGl2ZSBydWxpbmcgcG93ZXIsIHRoZSBmbGF0dGVyZXJzIHdpdGggdGhlIHR5cmFudHMgYW5kCgkJCQkJdGhlIGRlbWFnb2d1ZXMgd2l0aCBkZW1vY3JhY2llcyBvZiB0aGlzIGtpbmQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB0aGVzZSBtZW4gY2F1c2UgdGhlIHJlc29sdXRpb25zIG9mIHRoZSBhc3NlbWJseSB0byBiZQoJCQkJCXN1cHJlbWUgYW5kIG5vdCB0aGUgbGF3cywgYnkgcmVmZXJyaW5nIGFsbCB0aGluZ3MgdG8gdGhlIHBlb3BsZTsgZm9yIHRoZXkgb3dlCgkJCQkJdGhlaXIgcmlzZSB0byBncmVhdG5lc3MgdG8gdGhlIGZhY3QgdGhhdCB0aGUgcGVvcGxlIGlzIHNvdmVyZWlnbiBvdmVyIGFsbCB0aGluZ3MKCQkJCQl3aGlsZSB0aGV5IGFyZSBzb3ZlcmVpZ24gb3ZlciB0aGUgb3BpbmlvbiBvZiB0aGUgcGVvcGxlLCBmb3IgdGhlIG11bHRpdHVkZQoJCQkJCWJlbGlldmVzIHRoZW0uIE1vcmVvdmVyIHRob3NlIHdobyBicmluZyBjaGFyZ2VzIGFnYWluc3QgdGhlIG1hZ2lzdHJhdGVzIHNheSB0aGF0CgkJCQkJdGhlIHBlb3BsZSBvdWdodCB0byBqdWRnZSB0aGUgc3VpdHMsIGFuZCB0aGUgcGVvcGxlIHJlY2VpdmUgdGhlIGludml0YXRpb24KCQkJCQlnbGFkbHksIHNvIHRoYXQgYWxsIHRoZSBtYWdpc3RyYWNpZXMgYXJlIHB1dCBkb3duLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgaXQgd291bGQgc2VlbSB0byBiZSBhIHJlYXNvbmFibGUgY3JpdGljaXNtIHRvIHNheSB0aGF0CgkJCQkJc3VjaCBhIGRlbW9jcmFjeSBpcyBub3QgYSBjb25zdGl0dXRpb24gYXQgYWxsOyBmb3Igd2hlcmUgdGhlIGxhd3MgZG8gbm90IGdvdmVybgoJCQkJCXRoZXJlIGlzIG5vIGNvbnN0aXR1dGlvbiwgYXMgdGhlIGxhdyBvdWdodCB0byBnb3Zlcm4gYWxsIHRoaW5ncyB3aGlsZSB0aGUKCQkJCQltYWdpc3RyYXRlcyBjb250cm9sIHBhcnRpY3VsYXJzLCBhbmQgd2Ugb3VnaHQgdG8ganVkZ2UgdGhpcyB0byBiZSBjb25zdGl0dXRpb25hbAoJCQkJCWdvdmVybm1lbnQ7IGlmIHRoZW4gZGVtb2NyYWN5IHJlYWxseSBpcyBvbmUgb2YgdGhlIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiwgaXQgaXMKCQkJCQltYW5pZmVzdCB0aGF0IGFuIG9yZ2FuaXphdGlvbiBvZiB0aGlzIGtpbmQsIGluIHdoaWNoIGFsbCB0aGluZ3MgYXJlIGFkbWluaXN0ZXJlZAoJCQkJCWJ5IHJlc29sdXRpb25zIG9mIHRoZSBhc3NlbWJseSwgaXMgbm90IGV2ZW4gYSBkZW1vY3JhY3kgaW4gdGhlIHByb3BlciBzZW5zZSwgZm9yCgkJCQkJaXQgaXMgaW1wb3NzaWJsZSBmb3IgYSB2b3RlZCByZXNvbHV0aW9uIHRvIGJlIGEgdW5pdmVyc2FsIHJ1bGUuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZXQgdGhpcyBiZSBvdXIgZGlzY3Vzc2lvbiBvZiB0aGUgZGlmZmVyZW50IGtpbmRzIG9mCgkJCQkJCWRlbW9jcmFjeS48bWlsZXN0b25lIGVkPSJQIiBuPSI1LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPk9mIHRoZSBraW5kcyBvZiBvbGlnYXJjaHksIG9uZSBpcyBmb3IgdGhlIG1hZ2lzdHJhY2llcyB0byBiZQoJCQkJCWFwcG9pbnRlZCBmcm9tIHByb3BlcnR5LWFzc2Vzc21lbnRzIHNvIGhpZ2ggdGhhdCB0aGUgcG9vciB3aG8gYXJlIHRoZSBtYWpvcml0eQoJCQkJCWhhdmUgbm8gc2hhcmUgaW4gdGhlIGdvdmVybm1lbnQsIGJ1dCBmb3IgdGhlIG1hbiB3aG8gYWNxdWlyZXMgdGhlIHJlcXVpc2l0ZQoJCQkJCWFtb3VudCBvZiBwcm9wZXJ0eSB0byBiZSBhbGxvd2VkIHRvIHRha2UgcGFydCBpbiBpdDsgPG1pbGVzdG9uZSBuPSIxMjkyYiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+YW5vdGhlciBpcyB3aGVuCgkJCQkJdGhlIG1hZ2lzdHJhY2llcyBhcmUgZmlsbGVkIGZyb20gaGlnaCBhc3Nlc3NtZW50cyBhbmQgdGhlIG1hZ2lzdHJhdGVzIHRoZW1zZWx2ZXMKCQkJCQllbGVjdCB0byBmaWxsIHZhY2FuY2llcyDvvIhzbyB0aGF0IGlmIHRoZXkgZG8gc28gZnJvbSBhbGwgdGhlIGNpdGl6ZW5zIG9mCgkJCQkJdGhpcyBhc3Nlc3NtZW50LCB0aGlzIGFwcGVhcnMgcmF0aGVyIHRvIGJlIG9mIHRoZSBuYXR1cmUgb2YgYW4gYXJpc3RvY3JhY3ksIGJ1dAoJCQkJCWlmIGZyb20gYSBwYXJ0aWN1bGFyIHNlY3Rpb24gb2YgdGhlbSwgaXQgaXMgb2xpZ2FyY2hpY2Fs77yJOyBhbm90aGVyCgkJCQkJdmFyaWV0eSBvZiBvbGlnYXJjaHkgaXMgd2hlbiBzb24gc3VjY2VlZHMgZmF0aGVyIGluIG9mZmljZTsgYW5kIGEgZm91cnRoIGtpbmQgaXMKCQkJCQl3aGVuIHRoZSBoZXJlZGl0YXJ5IHN5c3RlbSBqdXN0IG1lbnRpb25lZCBleGlzdHMgYW5kIGFsc28gdGhlIG1hZ2lzdHJhdGVzIGdvdmVybgoJCQkJCWFuZCBub3QgdGhlIGxhdy4gVGhpcyBhbW9uZyBvbGlnYXJjaGllcyBpcyB0aGUgZm9ybSBjb3JyZXNwb25kaW5nIHRvIHR5cmFubnkKCQkJCQlhbW9uZyBtb25hcmNoaWVzIGFuZCB0byB0aGUgZm9ybSBvZiBkZW1vY3JhY3kgYWJvdXQgd2hpY2ggd2Ugc3Bva2UgbGFzdCBhbW9uZwoJCQkJCWRlbW9jcmFjaWVzLCBhbmQgaW5kZWVkIG9saWdhcmNoeSBvZiB0aGlzIHNvcnQgaGFzIHRoZSBzcGVjaWFsIG5hbWUgb2YKCQkJCQkJZHluYXN0eS48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkdvdmVybm1lbnQgY29udHJvbGxlZCBieSBhIGZldwoJCQkJCQlwb3dlcmZ1bCBmYW1pbGllcy4gQ2YuIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJUaHVjLiAzLjYyLjQiIHZhbGlkPSJ5ZXMiPlRodWMuIDMuNjIuNDwvYmlibD4sIHdoZXJlIHRoZQoJCQkJCQlUaGViYW5zIHNheSwg4oCYSW4gdGhvc2UgZGF5cyBvdXIgc3RhdGUgd2FzIG5vdCBnb3Zlcm5lZCBieSBhbgoJCQkJCQlvbGlnYXJjaHkgdGhhdCBncmFudGVkIGVxdWFsIGp1c3RpY2UgdG8gYWxsLCBub3IgeWV0IGJ5IGEgZGVtb2NyYWN5OyB0aGUKCQkJCQkJcG93ZXIgd2FzIGluIHRoZSBoYW5kcyBvZiBhIHNtYWxsIGNhYmFsIO+8iCA8Zm9yZWlnbiBsYW5nPSJncmVlayI+zrTPhc69zrHPg8+EzrXhvbfOsSDhvYDOu+G9t86zz4nOvSDhvIDOvc60z4Hhv7bOvTwvZm9yZWlnbj7vvIksIHRoYW4gd2hpY2ggbm90aGluZyBpcwoJCQkJCQltb3JlIG9wcG9zZWQgdG8gbGF3IG9yIHRvIHRydWUgcG9saXRpY2FsIG9yZGVyLCBvciBtb3JlIG5lYXJseSByZXNlbWJsZXMgYQoJCQkJCQl0eXJhbm554oCZIO+8iEpvd2V0dO+8iS48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5TbwoJCQkJCW1hbnkgdGhlcmVmb3JlIGFyZSB0aGUga2luZHMgb2Ygb2xpZ2FyY2h5IGFuZCBvZiBkZW1vY3JhY3k7IGJ1dCBpdCBtdXN0IG5vdAoJCQkJCWVzY2FwZSBub3RpY2UgdGhhdCBpbiBtYW55IHBsYWNlcyBpdCBoYXMgY29tZSBhYm91dCB0aGF0IGFsdGhvdWdoIHRoZQoJCQkJCWNvbnN0aXR1dGlvbiBhcyBmcmFtZWQgYnkgdGhlIGxhd3MgaXMgbm90IGRlbW9jcmF0aWMsIHlldCBvd2luZyB0byBjdXN0b20gYW5kCgkJCQkJdGhlIHNvY2lhbCBzeXN0ZW0gaXQgaXMgZGVtb2NyYXRpY2FsbHkgYWRtaW5pc3RlcmVkLCBhbmQgc2ltaWxhcmx5IGJ5IGEgcmV2ZXJzZQoJCQkJCXByb2Nlc3MgaW4gb3RoZXIgc3RhdGVzIGFsdGhvdWdoIHRoZSBsZWdhbCBjb25zdGl0dXRpb24gaXMgbW9yZSBkZW1vY3JhdGljLCB5ZXQKCQkJCQlieSBtZWFucyBvZiB0aGUgc29jaWFsIHN5c3RlbSBhbmQgY3VzdG9tcyBpdCBpcyBjYXJyaWVkIG9uIHJhdGhlciBhcyBhbgoJCQkJCW9saWdhcmNoeS4gVGhpcyBvY2N1cnMgY2hpZWZseSBhZnRlciBhbHRlcmF0aW9ucyBvZiB0aGUgY29uc3RpdHV0aW9ucyBoYXZlIHRha2VuCgkJCQkJcGxhY2U7IGZvciB0aGUgcGVvcGxlIGRvIG5vdCBjaGFuZ2Ugb3ZlciB0byB0aGUgbmV3IHN5c3RlbSBpbW1lZGlhdGVseSBidXQgYXJlCgkJCQkJY29udGVudCBhdCB0aGUgZmlyc3Qgc3RhZ2VzIHRvIGdhaW4gc21hbGwgYWR2YW50YWdlcyBmcm9tIHRoZSBvdGhlcgoJCQkJCQlwYXJ0eSw8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnNvIHRoYXQgdGhlIHByZXZpb3VzbHkKCQkJCQlleGlzdGluZyBsYXdzIGNvbnRpbnVlIGFsdGhvdWdoIHBvd2VyIGlzIGluIHRoZSBoYW5kcyBvZiB0aGUgcGFydHkgdGhhdCBpcwoJCQkJCWNoYW5naW5nIHRoZSBjb25zdGl0dXRpb24uPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgdGhhdCB0aGVzZSB2YXJpb3VzIGtpbmRzIG9mIGRlbW9jcmFjeSBhbmQgb2xpZ2FyY2h5CgkJCQkJZXhpc3QgaXMgbWFuaWZlc3QgZnJvbSB0aGUgYWN0dWFsIHRoaW5ncyB0aGF0IGhhdmUgYmVlbiBzYWlkLiBGb3IgbmVjZXNzYXJpbHkKCQkJCQllaXRoZXIgYWxsIHRoZSBwYXJ0cyBvZiB0aGUgcG9wdWxhdGlvbiB0aGF0IGhhdmUgYmVlbiBtZW50aW9uZWQgbXVzdCBoYXZlIGEKCQkJCQlzaGFyZSBpbiB0aGUgZ292ZXJubWVudCwgb3Igc29tZSBhbmQgbm90IG90aGVycy4gV2hlbiB0aGVyZWZvcmUgdGhlIGZhcm1lciBjbGFzcwoJCQkJCWFuZCB0aGUgY2xhc3MgcG9zc2Vzc2VkIG9mIG1vZGVyYXRlIHByb3BlcnR5IGlzIHNvdmVyZWlnbiBvdmVyIHRoZSBnb3Zlcm5tZW50LAoJCQkJCXRoZXkgZ292ZXJuIGFjY29yZGluZyB0byBsYXdzOyBmb3IgdGhleSBoYXZlIGEgbGl2ZWxpaG9vZCBpZiB0aGV5IHdvcmssIGJ1dCBhcmUKCQkJCQlub3QgYWJsZSB0byBiZSBhdCBsZWlzdXJlLCBzbyB0aGF0IHRoZXkgcHV0IHRoZSBsYXcgaW4gY29udHJvbCBhbmQgaG9sZCB0aGUKCQkJCQltaW5pbXVtIG9mIGFzc2VtYmxpZXMgbmVjZXNzYXJ5OyBhbmQgdGhlIG90aGVyIHBlcnNvbnMgaGF2ZSB0aGUgcmlnaHQgdG8gdGFrZQoJCQkJCXBhcnQgd2hlbiB0aGV5IGhhdmUgYWNxdWlyZWQgdGhlIHByb3BlcnR5LWFzc2Vzc21lbnQgZml4ZWQgYnkgdGhlIGxhd3MsIHNvIHRoYXQKCQkJCQl0byB0YWtlIHBhcnQgaW4gdGhlIGdvdmVybm1lbnQgaXMgb3BlbiB0byBhbGwgd2hvIGhhdmUgZ290IHRoYXQgYW1vdW50IG9mCgkJCQkJcHJvcGVydHk7IHNpbmNlIGZvciBpdCBub3QgdG8gYmUgb3BlbiB0byBldmVyeWJvZHkgb24gYW55IHRlcm1zIGF0IGFsbCBpcyBhCgkJCQkJY2hhcmFjdGVyaXN0aWMgb2Ygb2xpZ2FyY2h5LCBidXQgdGhlbiBvbiB0aGUgb3RoZXIgaGFuZCBpdCBpcyBpbXBvc3NpYmxlIGZvciBpdAoJCQkJCXRvIGJlIG9wZW4gdG8gdGhlbSB0byBoYXZlIGxlaXN1cmUgaWYgdGhlcmUgYXJlIG5vIHJldmVudWVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiByZXZlbnVlcyBmcm9tIGFicm9hZDsgdGhlIHBvb3IgY2FuIG9ubHkgYXR0ZW5kIG9mdGVuIGlmCgkJCQkJCXBhaWQgZm9yIGF0dGVuZGFuY2UsIGFuZCB0aGlzIGNhbiBvbmx5IGJlIGZpbmFuY2VkIGlmIHRoZSBzdGF0ZSBoYXMgaW5jb21lCgkJCQkJCWZyb20gdHJpYnV0ZSBvciBmb3JlaWduIHByb3BlcnR5Ljwvbm90ZT4gVGhpcyB0aGVuIGlzIG9uZSBraW5kIG9mIGRlbW9jcmFjeQoJCQkJCWZvciB0aGVzZSByZWFzb25zLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Bbm90aGVyIGtpbmQgaXMKCQkJCQlkdWUgdG8gdGhlIGRpc3RpbmN0aW9uIHRoYXQgY29tZXMgbmV4dDogaXQgaXMgcG9zc2libGUgdGhhdCBhbGwgdGhlIGNpdGl6ZW5zIG5vdAoJCQkJCWxpYWJsZSB0byBvYmplY3Rpb24gb24gdGhlIHNjb3JlIG9mIGJpcnRoIG1heSBoYXZlIHRoZSByaWdodCB0byB0YWtlIHBhcnQgaW4gdGhlCgkJCQkJYXNzZW1ibHksIGJ1dCBtYXkgYWN0dWFsbHkgdGFrZSBwYXJ0IG9ubHkgd2hlbiB0aGV5IGFyZSBhYmxlIHRvIGJlIGF0IGxlaXN1cmU7CgkJCQkJaGVuY2UgaW4gYSBkZW1vY3JhY3kgb2YgdGhpcyBuYXR1cmUgdGhlIGxhd3MgZ292ZXJuIGJlY2F1c2UgdGhlcmUgaXMgbm8gcmV2ZW51ZS4KCQkJCQlBIHRoaXJkIGtpbmQgaXMgd2hlbiBhbGwgdGhvc2Ugd2hvIGFyZSBmcmVlIG1lbiBoYXZlIHRoZSByaWdodCB0byB0YWtlIHBhcnQgaW4KCQkJCQl0aGUgZ292ZXJubWVudCB5ZXQgZG8gbm90IGRvIHNvIGJlY2F1c2Ugb2YgdGhlIGFmb3Jlc2FpZCByZWFzb24sIHNvIHRoYXQgaXQKCQkJCQlmb2xsb3dzIHRoYXQgaW4gdGhpcyBmb3JtIG9mIGRlbW9jcmFjeSBhbHNvIHRoZSBsYXcgZ292ZXJucy4gPG1pbGVzdG9uZSBuPSIxMjkzYSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iNS41IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGEgZm91cnRoIGtpbmQgb2YgZGVtb2NyYWN5CgkJCQkJaXMgdGhlIG9uZSB0aGF0IGhhcyBiZWVuIHRoZSBsYXN0IGluIHBvaW50IG9mIHRpbWUgdG8gY29tZSBpbnRvIGV4aXN0ZW5jZSBpbiB0aGUKCQkJCQlzdGF0ZXMuIEJlY2F1c2UgdGhlIHN0YXRlcyBoYXZlIGJlY29tZSBtdWNoIGdyZWF0ZXIgdGhhbiB0aGUgb3JpZ2luYWwgb25lcyBhbmQKCQkJCQlwb3NzZXNzIGxhcmdlIHN1cHBsaWVzIG9mIHJldmVudWUsIHdoaWxlIGFsbCB0aGUgY2l0aXplbnMgaGF2ZSBhIHNoYXJlIGluIHRoZQoJCQkJCWdvdmVybm1lbnQgYmVjYXVzZSBvZiB0aGUgc3VwZXJpb3JpdHk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLgoJCQkJCQkxMjg4YSAyMCBmZi48L25vdGU+IG9mIHRoZSBtdWx0aXR1ZGUsIGFsbCBhY3R1YWxseSB0YWtlIHBhcnQgaW4gaXQgYW5kCgkJCQkJZXhlcmNpc2UgdGhlaXIgY2l0aXplbnNoaXAgYmVjYXVzZSBldmVuIHRoZSBwb29yIGFyZSBlbmFibGVkIHRvIGJlIGF0IGxlaXN1cmUgYnkKCQkJCQlyZWNlaXZpbmcgcGF5LiBJbmRlZWQgdGhlIG11bHRpdHVkZSBpbiB0aGlzIGtpbmQgb2Ygc3RhdGUgaGFzIGEgdmVyeSBncmVhdCBkZWFsCgkJCQkJb2YgbGVpc3VyZSwgZm9yIHRoZXkgYXJlIG5vdCBoYW1wZXJlZCBhdCBhbGwgYnkgdGhlIGNhcmUgb2YgdGhlaXIgcHJpdmF0ZQoJCQkJCWFmZmFpcnMsIGJ1dCB0aGUgcmljaCBhcmUsIHNvIHRoYXQgb2Z0ZW4gdGhleSB0YWtlIG5vIHBhcnQgaW4gdGhlIGFzc2VtYmx5IG5vcgoJCQkJCWluIGp1ZGdpbmcgbGF3c3VpdHMuIE93aW5nIHRvIHRoaXMgdGhlIG11bHRpdHVkZSBvZiB0aGUgcG9vciBiZWNvbWVzIHNvdmVyZWlnbgoJCQkJCW92ZXIgdGhlIGdvdmVybm1lbnQsIGluc3RlYWQgb2YgdGhlIGxhd3MuIFN1Y2ggaW4gbnVtYmVyIGFuZCBpbiBuYXR1cmUgYXJlIHRoZQoJCQkJCWtpbmRzIG9mIGRlbW9jcmFjeSB0aGF0IHRoZXNlIGNhdXNlcyBuZWNlc3NhcmlseSBicmluZyBpbnRvIGV4aXN0ZW5jZS4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS42IiB1bml0PSJMb2ViIGNoYXAiIC8+VG8gdHVybiB0byB0aGUgdmFyaWV0aWVzIGFuZCBvZgoJCQkJCW9saWdhcmNoeSwgd2hlbiBtb3JlIG1lbiBwb3NzZXNzIHByb3BlcnR5LCBidXQgbGVzcyBvZiBpdCBhbmQgbm90IGEgdmVyeSBsYXJnZQoJCQkJCWFtb3VudCwgdGhpcyBpcyB0aGUgZmlyc3QgZm9ybSBvZiBvbGlnYXJjaHk7IGZvciB0aGV5IGFsbG93IHRoZSBtYW4gdGhhdAoJCQkJCWFjcXVpcmVzIHByb3BlcnR5IHRoZSByaWdodCB0byBwYXJ0aWNpcGF0ZSwgYW5kIGJlY2F1c2UgdGhlcmUgaXMgYSBsYXJnZSBudW1iZXIKCQkJCQlvZiBwZXJzb25zIHBhcnRpY2lwYXRpbmcgaW4gdGhlIGdvdmVybm1lbnQgaXQgbmVjZXNzYXJpbHkgZm9sbG93cyB0aGF0IG5vdCB0aGUKCQkJCQltZW4gYnV0IHRoZSBsYXcgaXMgc292ZXJlaWduIO+8iGZvciB0aGUgZmFydGhlciByZW1vdmVkIHRoZXkgYXJlIGZyb20KCQkJCQltb25hcmNoeSwgYW5kIGFzIHRoZXkgaGF2ZSBub3Qgc28gbXVjaCBwcm9wZXJ0eSBhcyB0byBiZSBpZGxlIGFuZCBuZWdsZWN0IGl0LAoJCQkJCW5vciB5ZXQgc28gbGl0dGxlIGFzIHRvIGJlIGtlcHQgYXQgdGhlIGV4cGVuc2Ugb2YgdGhlIHN0YXRlLDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhleSBhcmUgY29tcGVsbGVkIHRvIGNhbGwgdXBvbiB0aGUgbGF3IHRvIHJ1bGUKCQkJCQlpbnN0ZWFkIG9mIHJ1bGluZyB0aGVtc2VsdmVz77yJLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdGhlbiBpZiB0aGUgb3duZXJzIG9mIHRoZSBwcm9wZXJ0aWVzIGFyZSBmZXdlciB0aGFuCgkJCQkJdGhvc2Ugd2hvIG93bmVkIHRoZW0gcHJldmlvdXNseSwgYW5kIG93biBtb3JlLCB0aGUgc2Vjb25kIGZvcm0gb2Ygb2xpZ2FyY2h5CgkJCQkJY29tZXMgaW50byBiZWluZzsgZm9yIGFzIHRoZXkgYmVjb21lIHN0cm9uZ2VyIHRoZXkgY2xhaW0gdG8gaGF2ZSBhIGxhcmdlciBzaGFyZSwKCQkJCQlhbmQgdGhlcmVmb3JlIHRoZXkgdGhlbXNlbHZlcyBzZWxlY3QgdGhvc2UgZnJvbSBhbW9uZyB0aGUgcmVzdCBvZiB0aGUgY2l0aXplbnMKCQkJCQl3aG8gZ28gaW50byB0aGUgZ292ZXJubWVudCwgYnV0IGFzIHRoZXkgYXJlIG5vdCB5ZXQgc3Ryb25nIGVub3VnaCB0byBydWxlCgkJCQkJd2l0aG91dCBsYXcgdGhleSBtYWtlIHRoZSBsYXcgY29uZm9ybSB3aXRoIHRoaXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRoZXkgbGVnYWxpemUgdGhlIHJlY3J1aXRpbmcgb2YgdGhlIHJ1bGluZyBjbGFzcyBieQoJCQkJCQljby1vcHRhdGlvbjsgb3IgdGhlIHdvcmRzIG1heSBtZWFuIOKAmHRoZXkgbWFrZSB0aGUgbGF3CgkJCQkJCXJ1bGVyLuKAmTwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgaWYgdGhleSBjYXJyeSBtYXR0ZXJzIGZ1cnRoZXIgYnkKCQkJCQliZWNvbWluZyBmZXdlciBhbmQgaG9sZGluZyBsYXJnZXIgcHJvcGVydGllcywgdGhlcmUgY29tZXMgYWJvdXQgdGhlIHRoaXJkCgkJCQkJYWR2YW5jZSBpbiBvbGlnYXJjaHksIHdoaWNoIGNvbnNpc3RzIGluIHRoZWlyIGtlZXBpbmcgdGhlIG9mZmljZXMgaW4gdGhlaXIgb3duCgkJCQkJaGFuZHMsIGJ1dCB1bmRlciBhIGxhdyBlbmFjdGluZyB0aGF0IHRoZXkgYXJlIHRvIGJlIGhlcmVkaXRhcnkuIEFuZCB3aGVuIGZpbmFsbHkKCQkJCQl0aGV5IGF0dGFpbiB2ZXJ5IGdyZWF0IHByZS1lbWluZW5jZSBieSB0aGVpciB3ZWFsdGggYW5kIHRoZWlyIG11bHRpdHVkZSBvZgoJCQkJCWZyaWVuZHMsIGEgZHluYXN0eSBvZiB0aGlzIG5hdHVyZSBpcyBuZWFyIHRvIG1vbmFyY2h5LCBhbmQgbWVuIGJlY29tZSBzdXByZW1lCgkJCQkJaW5zdGVhZCBvZiB0aGUgbGF3OyBhbmQgdGhpcyBpcyB0aGUgZm91cnRoIGtpbmQgb2Ygb2xpZ2FyY2h5LCB0aGUgY291bnRlcnBhcnQgb2YKCQkJCQl0aGUgbGFzdCBraW5kIG9mIGRlbW9jcmFjeS48bWlsZXN0b25lIGVkPSJQIiBuPSI1LjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZ1cnRoZXJtb3JlPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5XZSBub3cgcGFzcyBmcm9tIHRoZSB2YXJpZXRpZXMgb2YgT2xpZ2FyY2h5IGFuZCBvZiBEZW1vY3JhY3kKCQkJCQkJdG8gdGhvc2Ugb2YgdGhlIG90aGVyIGFjdHVhbGx5IGV4aXN0aW5nIGNvbnN0aXR1dGlvbnMsIEFyaXN0b2NyYWN5IHNvLWNhbGxlZAoJCQkJCQlhbmQgQ29uc3RpdHV0aW9uYWwgR292ZXJubWVudC48L25vdGU+IHRoZXJlIGFyZSB0d28gY29uc3RpdHV0aW9ucyBieSB0aGUKCQkJCQlzaWRlIG9mIGRlbW9jcmFjeSBhbmQgb2xpZ2FyY2h5LCBvbmU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4KCQkJCQkJYXJpc3RvY3JhY3kuPC9ub3RlPiBvZiB3aGljaCBpcyBjb3VudGVkIGJ5IGV2ZXJ5Ym9keSBhbmQgaGFzIGJlZW4gcmVmZXJyZWQKCQkJCQl0byBhcyBvbmUgb2YgdGhlIGZvdXIgZm9ybXMgb2YgY29uc3RpdHV0aW9uIO+8iGFuZCB0aGUgZm91ciBtZWFudCBhcmUKCQkJCQltb25hcmNoeSwgb2xpZ2FyY2h5LCBkZW1vY3JhY3kgYW5kIGZvdXJ0aCB0aGUgZm9ybSBjYWxsZWQgYXJpc3RvY3JhY3nvvIksCgkJCQkJYnV0IHRoZXJlIGlzIGEgZmlmdGgsIGVudGl0bGVkIGJ5IHRoZSBjb21tb24gbmFtZSBvZiB0aGVtIGFsbCDvvIhmb3IgaXQKCQkJCQlpcyBjYWxsZWQgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudO+8iSwgYnV0IGFzIGl0IGRvZXMgbm90IG9mdGVuIG9jY3VyIGl0CgkJCQkJaXMgb3Zlcmxvb2tlZCBieSB0aG9zZSB3aG8gdHJ5IHRvIGVudW1lcmF0ZSB0aGUgZm9ybXMgb2YgY29uc3RpdHV0aW9uLCBhbmQgdGhleQoJCQkJCXVzZSB0aGUgZm91ciBuYW1lcyBvbmx5IO+8iGFzIGRvZXMgUGxhdG/vvIkgaW4gdGhlIGxpc3Qgb2YKCQkJCQljb25zdGl0dXRpb25zLiA8bWlsZXN0b25lIG49IjEyOTNiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGVkPSJQIiBuPSI1LjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+Tm93IHRoZSBuYW1lIG9mCgkJCQkJYXJpc3RvY3JhY3kgaXMgaW5kZWVkIHByb3Blcmx5IGdpdmVuIHRvIHRoZSBjb25zdGl0dXRpb24gdGhhdCB3ZSBkaXNjdXNzZWQgaW4KCQkJCQlvdXIgZmlyc3QgZGlzY291cnNlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Qm9vayAzLiAxMjc5YSAzNSBmZi4sCgkJCQkJCTEyODZiIDMgZmYuPC9ub3RlPiDvvIhmb3IgaXQgaXMgcmlnaHQgdG8gYXBwbHkgdGhlIG5hbWUKCQkJCQnigJhhcmlzdG9jcmFjeeKAmeKAlOKAmGdvdmVybm1lbnQgb2YgdGhlCgkJCQkJYmVzdOKAmeKAlG9ubHkgdG8gdGhlIGNvbnN0aXR1dGlvbiBvZiB3aGljaCB0aGUgY2l0aXplbnMgYXJlCgkJCQkJYmVzdCBpbiB2aXJ0dWUgYWJzb2x1dGVseSBhbmQgbm90IG1lcmVseSBnb29kIG1lbiBpbiByZWxhdGlvbiB0byBzb21lIGFyYml0cmFyeQoJCQkJCXN0YW5kYXJkLCBmb3IgdW5kZXIgaXQgYWxvbmUgdGhlIHNhbWUgcGVyc29uIGlzIGEgZ29vZCBtYW4gYW5kIGEgZ29vZCBjaXRpemVuCgkJCQkJYWJzb2x1dGVseSwgd2hlcmVhcyB0aG9zZSB3aG8gYXJlIGdvb2QgdW5kZXIgdGhlIG90aGVyIGNvbnN0aXR1dGlvbnMgYXJlIGdvb2QKCQkJCQlyZWxhdGl2ZWx5IHRvIHRoZWlyIG93biBmb3JtIG9mIGNvbnN0aXR1dGlvbu+8iTsgbmV2ZXJ0aGVsZXNzIHRoZXJlIGFyZQoJCQkJCWFsc28gc29tZSBjb25zdGl0dXRpb25zIHRoYXQgaGF2ZSBkaWZmZXJlbmNlcyBib3RoIGluIGNvbXBhcmlzb24gd2l0aAoJCQkJCW9saWdhcmNoaWNhbGx5IGdvdmVybmVkIHN0YXRlcyBhbmQgd2l0aCB3aGF0IGlzIHRlcm1lZCBjb25zdGl0dXRpb25hbAoJCQkJCWdvdmVybm1lbnQsIGluYXNtdWNoIGFzIGluIHRoZW0gdGhleSBlbGVjdCB0aGUgb2ZmaWNpYWxzIG5vdCBvbmx5IGJ5IHdlYWx0aCBidXQKCQkJCQlhbHNvIGJ5IGdvb2RuZXNzOyA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+dGhpcyBmb3JtIG9mCgkJCQkJY29uc3RpdHV0aW9uIGRpZmZlcnMgZnJvbSBib3RoIGFuZCBpcyBjYWxsZWQgYXJpc3RvY3JhdGljLiBGb3IgZXZlbiBpbiB0aGUKCQkJCQlzdGF0ZXMgdGhhdCBkbyBub3QgcGF5IGFueSBwdWJsaWMgYXR0ZW50aW9uIHRvIHZpcnR1ZSB0aGVyZSBhcmUgbmV2ZXJ0aGVsZXNzCgkJCQkJc29tZSBtZW4gdGhhdCBhcmUgaGVsZCBpbiBoaWdoIGVzdGVlbSBhbmQgYXJlIHRob3VnaHQgd29ydGh5IG9mIHJlc3BlY3QuIFdoZXJlCgkJCQkJdGhlbiB0aGUgY29uc3RpdHV0aW9uIHRha2VzIGluIHZpZXcgd2VhbHRoIGFuZCB2aXJ0dWUgYXMgd2VsbCBhcyB0aGUgY29tbW9uCgkJCQkJcGVvcGxlLCBhcyBmb3IgaW5zdGFuY2UgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDYXJ0aGFnZSIga2V5PSJwZXJzZXVzLENhcnRoYWdlIj5DYXJ0aGFnZTwvcGxhY2VOYW1lPiwgdGhpcyBpcyBvZiB0aGUgbmF0dXJlIG9mIGFuIGFyaXN0b2NyYWN5OyBhbmQgc28gYWxzbwoJCQkJCWFyZSB0aGUgc3RhdGVzLCBpbiB3aGljaCB0aGUgY29uc3RpdHV0aW9uLCBsaWtlIHRoYXQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiwgdGFrZXMgaW4gdmlldyB0d28gb2YgdGhlc2UgdGhpbmdzCgkJCQkJb25seSwgdmlydHVlIGFuZCB0aGUgY29tbW9uIHBlb3BsZSwgYW5kIHRoZXJlIGlzIGEgbWluZ2xpbmcgb2YgdGhlc2UgdHdvCgkJCQkJZmFjdG9ycywgZGVtb2NyYWN5IGFuZCB2aXJ0dWUuIFRoZXNlIHRoZW4gYXJlIHR3byBraW5kcyBvZiBhcmlzdG9jcmFjeSBiZXNpZGUKCQkJCQl0aGUgZmlyc3QsIHdoaWNoIGlzIHRoZSBiZXN0IGNvbnN0aXR1dGlvbiw8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZCBhIHRoaXJkIGtpbmQgaXMgdGhvc2UgaW5zdGFuY2VzIG9mIHdoYXQgaXMgY2FsbGVkCgkJCQkJY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCB0aGF0IGluY2xpbmUgbW9yZSBpbiB0aGUgZGlyZWN0aW9uIG9mCgkJCQkJCW9saWdhcmNoeS48bWlsZXN0b25lIGVkPSJQIiBuPSI2LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IHJlbWFpbnMgZm9yIHVzIHRvIHNwZWFrIGFib3V0IHdoYXQgaXMgdGVybWVkIGNvbnN0aXR1dGlvbmFsCgkJCQkJZ292ZXJubWVudCBhbmQgYWxzbyBhYm91dCB0eXJhbm55LiBUaG91Z2ggbmVpdGhlciB0aGUgZm9ybWVyIG5vciB0aGUKCQkJCQlhcmlzdG9jcmFjaWVzIHNwb2tlbiBvZiBqdXN0IG5vdyBhcmUgcmVhbGx5IGRldmlhdGlvbnMsIHdlIGhhdmUgY2xhc3NlZCB0aGVtCgkJCQkJdGh1cyBiZWNhdXNlIGluIGFjdHVhbCB0cnV0aCB0aGV5IGhhdmUgYWxsIGZhbGxlbiBhd2F5IGZyb20gdGhlIG1vc3QgY29ycmVjdAoJCQkJCWNvbnN0aXR1dGlvbiwgYW5kIGNvbnNlcXVlbnRseSBhcmUgY291bnRlZCB3aXRoIHRoZSBkZXZpYXRpb24tZm9ybXMsIGFuZCB0aG9zZQoJCQkJCWFyZSBkZXZpYXRpb25zIGZyb20gdGhlbSwgYXMgd2Ugc2FpZCBpbiBvdXIgcmVtYXJrcyBhdCB0aGUgYmVnaW5uaW5nLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEyNzliIDQgZmYuIEFjdHVhbCBhcmlzdG9jcmFjaWVzIGFyZSBhCgkJCQkJCWZhbGxpbmctb2ZmIGZyb20gdGhlIEFyaXN0b2NyYWN5IGFuZCBQb2xpdHkgaXMgYSBkZWNsaW5lIGZyb20gTW9uYXJjaHkgYW5kCgkJCQkJCUFyaXN0b2NyYWN5OyBidXQgdGhleSBhcmUgbm90IGRldmlhdGlvbnMgaW4gdGhlIHRlY2huaWNhbCBzZW5zZS48L25vdGU+CgkJCQkJVHlyYW5ueSBpcyByZWFzb25hYmx5IG1lbnRpb25lZCBsYXN0IGJlY2F1c2UgaXQgaXMgdGhlIGxlYXN0IGNvbnN0aXR1dGlvbmFsIG9mCgkJCQkJYWxsIGdvdmVybm1lbnRzLCB3aGVyZWFzIG91ciBpbnZlc3RpZ2F0aW9uIGlzIGFib3V0IGNvbnN0aXR1dGlvbmFsCgkJCQkJCWdvdmVybm1lbnQuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5IYXZpbmcgdGhlbiBzdGF0ZWQgdGhlIHJlYXNvbiBmb3IKCQkJCQl0aGlzIG1vZGUgb2YgY2xhc3NpZmljYXRpb24sIHdlIGhhdmUgbm93IHRvIHNldCBmb3J0aCBvdXIgdmlldyBhYm91dAoJCQkJCWNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjYuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciBpdHMKCQkJCQltZWFuaW5nIGlzIGNsZWFyZXIgbm93IHRoYXQgdGhlIGNoYXJhY3RlcmlzdGljcyBvZiBvbGlnYXJjaHkgYW5kIGRlbW9jcmFjeSBoYXZlCgkJCQkJYmVlbiBkZWZpbmVkOyBzaW5jZSBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50IGlzLCB0byBwdXQgaXQgc2ltcGx5LCBhIG1peHR1cmUgb2YKCQkJCQlvbGlnYXJjaHkgYW5kIGRlbW9jcmFjeS4gQnV0IHBlb3BsZSBjdXN0b21hcmlseSBnaXZlIHRoZSBuYW1lIG9mIGNvbnN0aXR1dGlvbmFsCgkJCQkJZ292ZXJubWVudCBvbmx5IHRvIHRob3NlIGFtb25nIHN1Y2ggbWl4ZWQgY29uc3RpdHV0aW9ucyB0aGF0IGluY2xpbmUgdG93YXJkcwoJCQkJCWRlbW9jcmFjeSwgYW5kIGVudGl0bGUgdGhvc2UgdGhhdCBpbmNsaW5lIG1vcmUgdG93YXJkcyBvbGlnYXJjaHkgYXJpc3RvY3JhY2llcywKCQkJCQliZWNhdXNlIGVkdWNhdGlvbiBhbmQgZ29vZCBiaXJ0aCBnbyBtb3JlIHdpdGggdGhlIHdlYWx0aGllciBjbGFzc2VzLCBhbmQgYWxzbwoJCQkJCXRoZSB3ZWFsdGh5IGFyZSB0aG91Z2h0IHRvIGhhdmUgYWxyZWFkeSB0aGUgdGhpbmdzIHRvIGdldCB3aGljaCB3cm9uZ2RvZXJzCgkJCQkJY29tbWl0IHdyb25nOyBvd2luZyB0byB3aGljaCBwZW9wbGUgYXBwbHkgdGhlIHRlcm1zIOKAmGdlbnRyeeKAmQoJCQkJCWFuZCDigJhub3RhYmlsaXRpZXPigJkgdG8gdGhlIHJpY2guIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjYuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPlNpbmNlIHRoZXJlZm9yZSBhcmlzdG9jcmFjeSBtZWFucyB0aGUgYXNzaWdubWVudCBvZiB0aGUKCQkJCQloaWdoZXN0IHBsYWNlIHRvIHRoZSBiZXN0IG9mIHRoZSBjaXRpemVucywgb2xpZ2FyY2hpZXMgYWxzbyBhcmUgc2FpZCB0byBiZSBkcmF3bgoJCQkJCXJhdGhlciBmcm9tIHRoZSBnZW50cnkuIDxtaWxlc3RvbmUgbj0iMTI5NGEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkFuZCBpdCBzZWVtcyBhbiBpbXBvc3NpYmlsaXR5IGZvciBhIGNpdHkgZ292ZXJuZWQKCQkJCQlub3QgYnkgdGhlIGFyaXN0b2NyYWN5IGJ1dCBieSB0aGUgYmFzZSB0byBoYXZlIHdlbGwtb3JkZXJlZCBnb3Zlcm5tZW50LCBhbmQKCQkJCQlzaW1pbGFybHkgYWxzbyBmb3IgYSBjaXR5IHRoYXQgaGFzIG5vdCBhIHdlbGwtb3JkZXJlZCBnb3Zlcm5tZW50IHRvIGJlIGdvdmVybmVkCgkJCQkJYXJpc3RvY3JhdGljYWxseS4gQnV0IHRvIGhhdmUgZ29vZCBsYXdzIGVuYWN0ZWQgYnV0IG5vdCBvYmV5IHRoZW0gZG9lcyBub3QKCQkJCQljb25zdGl0dXRlIHdlbGwtb3JkZXJlZCBnb3Zlcm5tZW50LiBIZW5jZSBvbmUgZm9ybSBvZiBnb29kIGdvdmVybm1lbnQgbXVzdCBiZQoJCQkJCXVuZGVyc3Rvb2QgdG8gY29uc2lzdCBpbiB0aGUgbGF3cyBlbmFjdGVkIGJlaW5nIG9iZXllZCwgYW5kIGFub3RoZXIgZm9ybSBpbiB0aGUKCQkJCQlsYXdzIHdoaWNoIHRoZSBjaXRpemVucyBrZWVwIGJlaW5nIHdlbGwgZW5hY3RlZCDvvIhmb3IgaXQgaXMgcG9zc2libGUgdG8KCQkJCQlvYmV5IGJhZGx5IGVuYWN0ZWQgbGF3c++8iS4gQW5kIGZvciBsYXdzIHRvIGJlIHdlbGwgZW5hY3RlZCBpcyBwb3NzaWJsZQoJCQkJCWluIHR3byB3YXlzOiB0aGV5IG11c3QgZWl0aGVyIGJlIHRoZSBiZXN0IGxhd3MgcG9zc2libGUgZm9yIHRoZSBnaXZlbiBwZW9wbGUgb3IKCQkJCQl0aGUgYmVzdCBhYnNvbHV0ZWx5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI2LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgYXJpc3RvY3JhY3kKCQkJCQlpbiB0aGUgZnVsbGVzdCBzZW5zZSBzZWVtcyB0byBjb25zaXN0IGluIHRoZSBkaXN0cmlidXRpb24gb2YgdGhlIGhvbm9ycwoJCQkJCWFjY29yZGluZyB0byB2aXJ0dWU7IGZvciB2aXJ0dWUgaXMgdGhlIGRlZmluaW5nIGZhY3RvciBvZiBhcmlzdG9jcmFjeSwgYXMgd2VhbHRoCgkJCQkJaXMgb2Ygb2xpZ2FyY2h5LCBhbmQgZnJlZWRvbSBvZiBkZW1vY3JhY3kg77yId2hpbGUgdGhlIHByaW5jaXBsZSB0aGF0IGEKCQkJCQlkZWNpc2lvbiBvZiB0aGUgbWFqb3JpdHkgaXMgc3VwcmVtZSBpcyBmb3VuZCBpbiB0aGVtIGFsbDogZm9yIGluIGJvdGggb2xpZ2FyY2h5CgkJCQkJYW5kIGFyaXN0b2NyYWN5IGFuZCBkZW1vY3JhY2llcyB3aGF0ZXZlciB0aGUgbGFyZ2VyIHBhcnQgb2YgdGhvc2Ugd2hvIGhhdmUgYQoJCQkJCXNoYXJlIGluIHRoZSBnb3Zlcm5tZW50IGRlY2lkZXMgaXMgc3VwcmVtZe+8iS4gSW4gbW9zdCBzdGF0ZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gaW4gbW9zdCBzdGF0ZXMgdGhhdCBhcmUgY29uc2lkZXJlZAoJCQkJCQlhcmlzdG9jcmFjaWVzLjwvbm90ZT4gdGhlbiB0aGUgbmFtZSBvZiBhcmlzdG9jcmFjeSBpcyBnaXZlbiB0byB0aGF0IGZvcm0gb2YKCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGUgbW9yZQoJCQkJCQlvbGlnYXJjaGljYWwgZm9ybSwgMTI5M2IgMzYuPC9ub3RlPiBmb3IgdGhlIGNvbWJpbmF0aW9uIGFpbXMgb25seSBhdCB0aGUKCQkJCQl3ZWxsLW9mZiBhbmQgdGhlIHBvb3IsIHdlYWx0aCBhbmQgZnJlZWRvbSDvvIhzaW5jZSBpbiBhbG1vc3QgdGhlIGxhcmdlc3QKCQkJCQludW1iZXIgb2Ygc3RhdGVzIHRoZSByaWNoIHNlZW0gdG8gb2NjdXB5IHRoZSBwbGFjZSBvZiB0aGUgZ2VudHJ577yJOwoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSI2LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQgYXMgdGhlcmUgYXJlIHRocmVlIHRoaW5ncwoJCQkJCXRoYXQgY2xhaW0gZXF1YWwgcGFydGljaXBhdGlvbjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+aW4gdGhlCgkJCQkJY29uc3RpdHV0aW9uLCBmcmVlZG9tLCB3ZWFsdGggYW5kIHZpcnR1ZSDvvIhmb3IgdGhlIGZvdXJ0aCwgd2hhdCBpcwoJCQkJCWNhbGxlZCBub2JpbGl0eSwgYWNjb21wYW5pZXMgdGhlIHR3byBsYXR0ZXLigJRub2JpbGl0eSBtZWFucyBhbmNpZW50CgkJCQkJd2VhbHRoIGFuZCB2aXJ0dWXvvIksIGl0IGlzIG1hbmlmZXN0IHRoYXQgdGhlIG1peHR1cmUgb2YgdGhlIHR3byBmYWN0b3JzLAoJCQkJCXRoZSByaWNoIGFuZCB0aGUgcG9vciw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkxvb3NlbHkgcHV0IGZvcgoJCQkJCQnigJh3ZWFsdGggYW5kIGZyZWUgYmlydGgu4oCZPC9ub3RlPiBvdWdodCB0byBiZSB0ZXJtZWQKCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LCB3aGlsZSB0aGUgbWl4dHVyZSBvZiB0aGUgdGhyZWUgZmFjdG9ycyBkZXNlcnZlcyB0aGUKCQkJCQluYW1lIG9mIGFyaXN0b2NyYWN5IG1vc3Qgb2YgYWxsIHRoZSB2YXJpb3VzIGZvcm1zIG9mIGFyaXN0b2NyYWN5IGJlc2lkZSB0aGUgdHJ1ZQoJCQkJCWFuZCBiZXN0IGZvcm0uPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBoYXMgdGhlbiBiZWVuIHN0YXRlZCB0aGF0IG90aGVyCgkJCQkJZm9ybXMgb2YgY29uc3RpdHV0aW9uIGFsc28gZXhpc3QgYmVzaWRlcyBtb25hcmNoeSwgZGVtb2NyYWN5IGFuZCBvbGlnYXJjaHksIGFuZAoJCQkJCXdoYXQgdGhlaXIgY2hhcmFjdGVyaXN0aWNzIGFyZSwgYW5kIGhvdyB0aGUgdmFyaW91cyBzb3J0cyBvZiBhcmlzdG9jcmFjeSBhbmQgb2YKCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50IGRpZmZlciBmcm9tIG9uZSBhbm90aGVyOyBhbmQgaXQgaXMgbWFuaWZlc3QgdGhhdAoJCQkJCWFyaXN0b2NyYWN5IGFuZCBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50IGFyZSBub3Qgd2lkZWx5IGFwYXJ0IGZyb20gb25lCgkJCQkJCWFub3RoZXIuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5OZXh0IHRvIHdoYXQgaGFzIGJlZW4gc2FpZCBsZXQgdXMgc3RhdGUgdGhlIHdheSBpbiB3aGljaCB3aGF0CgkJCQkJaXMgY2FsbGVkIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQgY29tZXMgaW50byBleGlzdGVuY2UgYnkgdGhlIHNpZGUgb2YKCQkJCQlkZW1vY3JhY3kgYW5kIG9saWdhcmNoeSwgYW5kIGhvdyBpdCBpcyBwcm9wZXIgdG8gZXN0YWJsaXNoIGl0LiBBdCB0aGUgc2FtZSB0aW1lCgkJCQkJdGhlIGRlZmluaW5nIGNoYXJhY3RlcmlzdGljcyBvZiBkZW1vY3JhY3kgYW5kIG9saWdhcmNoeSB3aWxsIGFsc28gYmUgY2xlYXI7IGZvcgoJCQkJCXdlIG11c3QgZ3Jhc3AgdGhlIGRpc3RpbmN0aW9uIGJldHdlZW4gdGhlc2UgYW5kIHRoZW4gbWFrZSBhIGNvbWJpbmF0aW9uIG91dCBvZgoJCQkJCXRoZW0sIHRha2luZywgc28gdG8gc2F5LCBhIGNvbnRyaWJ1dGlvbiBmcm9tIGVhY2guIEFuZCB0aGVyZSBhcmUgdGhyZWUKCQkJCQlwcmluY2lwbGVzIGRldGVybWluaW5nIHRoaXMgY29tYmluYXRpb24gb3IgbWl4dHVyZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+VW5kZXIgb25lIHBsYW4gd2UgbXVzdCBhZG9wdCBib3RoIGZlYXR1cmVzIGZyb20gdGhlCgkJCQkJbGVnaXNsYXRpdmUgc2NoZW1lcyBvZiB0aGUgdHdvIGRpZmZlcmVudCBjb25zdGl0dXRpb25zOiBmb3IgZXhhbXBsZSwgaW4gcmVnYXJkCgkJCQkJdG8gdGhlIGFkbWluaXN0cmF0aW9uIG9mIGp1c3RpY2UsIGluIG9saWdhcmNoaWVzIHRoZXkgaW5zdGl0dXRlIGEgZmluZSBmb3IgdGhlCgkJCQkJcmljaCBpZiB0aGV5IGRvIG5vdCBzZXJ2ZSBvbiBqdXJpZXMgYnV0IG5vIHBheSBmb3IgdGhlIHBvb3IgZm9yIHNlcnZpbmcsIHdoaWxlCgkJCQkJaW4gZGVtb2NyYWNpZXMgdGhleSBhc3NpZ24gcGF5IGZvciB0aGUgcG9vciBidXQgbm8gZmluZSBmb3IgdGhlIHJpY2gsIGJ1dCBhCgkJCQkJY29tbW9uIGFuZCBpbnRlcm1lZGlhdGUgcHJpbmNpcGxlIGlzIHRvIGhhdmUgYm90aCBwYXltZW50IGFuZCBmaW5lLCBhbmQKCQkJCQl0aGVyZWZvcmUgdGhpcyBpcyBhIG1hcmsgb2YgYSBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LCBzaW5jZSBpdCBpcyBhIG1peHR1cmUKCQkJCQlvZiBlbGVtZW50cyBmcm9tIGJvdGggb2xpZ2FyY2h5IGFuZCBkZW1vY3JhY3kuIDxtaWxlc3RvbmUgbj0iMTI5NGIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIG49IjcuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoaXMgdGhlbiBpcyBvbmUgbW9kZSBvZiBjb21iaW5pbmcgdGhlIHR3by4gQW5vdGhlcgoJCQkJCWlzIHRvIHRha2UgdGhlIG1pZGRsZSBjb3Vyc2UgYmV0d2VlbiB0aGUgcmVndWxhdGlvbnMgb2YgZWFjaDogZm9yIGV4YW1wbGUsCgkJCQkJZGVtb2NyYWNpZXMgcGVybWl0IG1lbWJlcnNoaXAgb2YgdGhlIGFzc2VtYmx5IG9uIG5vIHByb3BlcnR5LXF1YWxpZmljYXRpb24gYXQKCQkJCQlhbGwgb3IgYSBxdWl0ZSBzbWFsbCBvbmUsIG9saWdhcmNoaWVzIG9uIGEgbGFyZ2UgcHJvcGVydHktcXVhbGlmaWNhdGlvbiwgYnV0IHRoZQoJCQkJCWNvbWJpbmF0aW9uIGNsZWFybHkgaXMgdG8gaGF2ZSBuZWl0aGVyIHByaW5jaXBsZSwgYnV0IG9uZSB3aGljaCBsaWVzIGluIHRoZQoJCQkJCW1pZGRsZSBiZXR3ZWVuIGVpdGhlciBvZiB0aGVzZSB0d28gcXVhbGlmaWNhdGlvbnMuIEluIHRoZSB0aGlyZCBwbGFjZSBpcyBhCgkJCQkJY29tYmluYXRpb24gb2YgdGhlIHR3byBzeXN0ZW1zLCB0YWtpbmcgc29tZSBmZWF0dXJlcyBmcm9tIHRoZSBvbGlnYXJjaGljYWwgbGF3CgkJCQkJYW5kIHNvbWUgZnJvbSB0aGUgZGVtb2NyYXRpYzsgSSBtZWFuLCBmb3IgZXhhbXBsZSwgdGhhdCBpdCBpcyB0aG91Z2h0IHRvIGJlCgkJCQkJZGVtb2NyYXRpYyBmb3IgdGhlIG9mZmljZXMgdG8gYmUgYXNzaWduZWQgYnkgbG90LCBmb3IgdGhlbSB0byBiZSBlbGVjdGVkCgkJCQkJb2xpZ2FyY2hpYywgYW5kIGRlbW9jcmF0aWMgZm9yIHRoZW0gbm90IHRvIGhhdmUgYSBwcm9wZXJ0eS1xdWFsaWZpY2F0aW9uLAoJCQkJCW9saWdhcmNoaWMgdG8gaGF2ZSBvbmU7IHRoZXJlZm9yZSBpdCBpcyBhcmlzdG9jcmF0aWMgYW5kIGNvbnN0aXR1dGlvbmFsIHRvIHRha2UKCQkJCQlvbmUgZmVhdHVyZSBmcm9tIG9uZSBmb3JtIGFuZCB0aGUgb3RoZXIgZnJvbSB0aGUgb3RoZXIsIGZyb20gb2xpZ2FyY2h5IHRoYXQKCQkJCQlvZmZpY2VzIGFyZSB0byBiZSBlbGVjdGVkLCBhbmQgZnJvbSBkZW1vY3JhY3kgdGhhdCB0aGlzIGlzIG5vdCB0byBiZSBvbiBhCgkJCQkJcHJvcGVydHktcXVhbGlmaWNhdGlvbi4gVGhpcyB0aGVuIGlzIHRoZSBtb2RlIG9mIHRoZSBtaXh0dXJlOyA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgdGhlIG1hcmsgb2YgYSBnb29kIG1peHR1cmUgb2YgZGVtb2NyYWN5IGFuZAoJCQkJCW9saWdhcmNoeSBpcyB3aGVuIGl0IGlzIHBvc3NpYmxlIHRvIHNwZWFrIG9mIHRoZSBzYW1lIGNvbnN0aXR1dGlvbiBhcyBhCgkJCQkJZGVtb2NyYWN5IGFuZCBhcyBhbiBvbGlnYXJjaHk7IGZvciBtYW5pZmVzdGx5IHRoaXMgaXMgc28gd2hlbiBpdCBpcyBzYWlkIGJlY2F1c2UKCQkJCQl0aGV5IGhhdmUgYmVlbiBtaXhlZCB3ZWxsLCBhbmQgdGhpcyBpcyB0aGUgY2FzZSB3aXRoIHRoZSBmb3JtIHRoYXQgbGllcyBpbiB0aGUKCQkJCQltaWRkbGUsIGZvciBlYWNoIG9mIHRoZSB0d28gZXh0cmVtZSBmb3JtcyBjYW4gYmUgc2VlbiBpbiBpdC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy41IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhpcyBpcyB0aGUgY2FzZSB3aXRoIHRoZSBjb25zdGl0dXRpb24gb2YKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPi4gRm9yIG1hbnkKCQkJCQkJcGVvcGxlPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5lbmRlYXZvciB0byBkZXNjcmliZSBpdCBhcwoJCQkJCWJlaW5nIGEgZGVtb2NyYWN5LCBiZWNhdXNlIGl0cyBzeXN0ZW0gaGFzIG1hbnkgZGVtb2NyYXRpYyBmZWF0dXJlcywgZm9yIGluc3RhbmNlCgkJCQkJZmlyc3Qgb2YgYWxsIGl0cyByZWd1bGF0aW9uIGZvciB0aGUgcmVhcmluZyBvZiBib3lzLCBzaW5jZSB0aGUgc29ucyBvZiB0aGUgcmljaAoJCQkJCWFyZSBicm91Z2h0IHVwIGluIHRoZSBzYW1lIHdheSBhcyB0aG9zZSBvZiB0aGUgcG9vciwgYW5kIGFyZSBlZHVjYXRlZCBpbiBhCgkJCQkJbWFubmVyIGluIHdoaWNoIHRoZSBzb25zIG9mIHRoZSBwb29yIGFsc28gY291bGQgYmUgZWR1Y2F0ZWQsIGFuZCB0aGV5IGFyZSBhbHNvCgkJCQkJdHJlYXRlZCBzaW1pbGFybHkgYXQgdGhlIG5leHQgYWdlLCBhbmQgaW4gdGhlIHNhbWUgbWFubmVyIHdoZW4gdGhleSBhcmUgZ3Jvd24KCQkJCQl1cCwgZm9yIHRoZXJlIGlzIG5vdGhpbmcgdGhhdCBkaXN0aW5ndWlzaGVzIHRoZSByaWNoIG1hbiBmcm9tIHRoZSBwb29yCgkJCQkJbWFu4oCUdGh1cyB0aGUgYXJyYW5nZW1lbnRzIGZvciBmb29kIGFyZSB0aGUgc2FtZSBmb3IgYWxsIGF0IHRoZSBjb21tb24KCQkJCQltZXNzZXMsIGFuZCB0aGUgcmljaCB3ZWFyIGNsb3RoZXMgc3VjaCBhcyBldmVuIGFueSBwb29yIG1hbiBjb3VsZCBwcm9jdXJlLCBhbmQKCQkJCQlhbHNvIGJlY2F1c2Ugb2YgdGhlIHR3byBncmVhdGVzdCBvZmZpY2VzIHRoZSBjb21tb24gcGVvcGxlIGVsZWN0IHRvIG9uZSBhbmQKCQkJCQlzaGFyZSBpbiB0aGUgb3RoZXIg77yIdGhleSBlbGVjdCB0aGUgRWxkZXJzIGFuZCBzaGFyZSBpbiB0aGUKCQkJCQlFcGhvcmF0Ze+8iTsgYnV0IG90aGVycyBjYWxsIGl0IGFuIG9saWdhcmNoeSwgYmVjYXVzZSBpdCBoYXMgbWFueQoJCQkJCW9saWdhcmNoaWNhbCBmZWF0dXJlcywgZm9yIGluc3RhbmNlIHRoYXQgYWxsIHRoZSBvZmZpY2VzIGFyZSBlbGVjdGl2ZSBhbmQgbm9uZQoJCQkJCWFwcG9pbnRlZCBieSBsb3QgYW5kIGZldyBwZXJzb25zIGhhdmUgdGhlIHBvd2VyIHRvIHNlbnRlbmNlIHRvIGRlYXRoIGFuZCBleGlsZSwKCQkJCQlhbmQgYSBudW1iZXIgb2Ygb3RoZXIgc3VjaCBtYXR0ZXJzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgaW4gYSB3ZWxsLWNvbnN0cnVjdGVkIG1peGVkIGNvbnN0aXR1dGlvbiBib3RoIG9mIHRoZSB0d28gZmFjdG9ycywgYW5kCgkJCQkJbmVpdGhlciBvZiB0aGVtLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBjb25qZWN0dXJhbCBlbWVuZGF0aW9uCgkJCQkJCXJlbW92ZXMgdGhpcyBteXN0ZXJpb3VzIGVwaWdyYW0sIGdpdmluZyDigJhhbmQgbm90IG9uZSBvZiB0aGUgdHdvCgkJCQkJCe+8iG9ubHnvvIku4oCZPC9ub3RlPiBzaG91bGQgc2VlbSB0byBiZSBwcmVzZW50LCBhbmQKCQkJCQlpdCBzaG91bGQgYmUga2VwdCBzYWZlIGJ5IGl0cyBvd24gbWVhbnMgYW5kIG5vdCBieSBvdXRzaWRlIGFpZCwgYW5kIGJ5IGl0cyBvd24KCQkJCQltZWFucyBub3QgYmVjYXVzZSB0aG9zZSB3aG8gZGVzaXJlIGl0cyBzZWN1cml0eSBhcmUgbW9yZSBudW1lcm91cyBvdXRzaWRlCgkJCQkJCWl0PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciwgaWYgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPuG8lM6+z4nOuM61zr08L2ZvcmVpZ24+IGlzIGFuIGludGVycG9sYXRpb24sIOKAmG5vdCBtZXJlbHkgYmVjYXVzZQoJCQkJCQl0aG9zZSDvvIhjaXRpemVuc++8iSB3aG8gd2lzaCBpdCB0byBzdXJ2aXZlIGFyZSBtb3JlIG51bWVyb3VzCgkJCQkJCe+8iHRoYW4gdGhvc2Ugd2hvIGRvIG5vdO+8iS7igJk8L25vdGU+IO+8iGZvcgoJCQkJCWV2ZW4gYSBiYWQgY29uc3RpdHV0aW9uIG1pZ2h0IHBvc3Nlc3MgdGhpcyBxdWFsaXR577yJLCBidXQgYmVjYXVzZSBubwoJCQkJCXNlY3Rpb24gb2YgdGhlIHN0YXRlIHdoYXRldmVyIHdvdWxkIGV2ZW4gd2lzaCBmb3IgYW5vdGhlcgoJCQkJCQljb25zdGl0dXRpb24uPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgcHJvcGVyIHdheSB0aGVyZWZvcmUgdG8KCQkJCQllc3RhYmxpc2ggYSBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LCBhbmQgc2ltaWxhcmx5IGFsc28gdGhlIGdvdmVybm1lbnRzIG5hbWVkCgkJCQkJYXJpc3RvY3JhY2llcywgaGFzIG5vdyBiZWVuIHN0YXRlZC4gPG1pbGVzdG9uZSBuPSIxMjk1YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iOC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCByZW1haW5lZCBmb3IgdXMgdG8gc3BlYWsKCQkJCQlvZiB0eXJhbm55LCBub3QgYmVjYXVzZSB0aGVyZSBpcyBtdWNoIHRoYXQgY2FuIGJlIHNhaWQgYWJvdXQgaXQsIGJ1dCBpbiBvcmRlcgoJCQkJCXRoYXQgaXQgbWF5IHJlY2VpdmUgaXRzIHBhcnQgaW4gb3VyIGlucXVpcnksIHNpbmNlIHdlIHJhbmsgdGhpcyBhbHNvIGFzIG9uZQoJCQkJCWFtb25nIHRoZSBraW5kcyBvZiBjb25zdGl0dXRpb24uIFRoZSBuYXR1cmUgb2Yga2luZ3NoaXAgd2UgaGF2ZSBkZWZpbmVkIGluIG91cgoJCQkJCWZpcnN0IGRpc2NvdXJzZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Cb29rIDMuOS0xMi48L25vdGU+IGluCgkJCQkJd2hpY2ggd2UgZXhhbWluZWQgdGhlIHF1ZXN0aW9uIGluIHJlbGF0aW9uIHRvIHRoZSBjb25zdGl0dXRpb24gbW9zdCBjb21tb25seQoJCQkJCWRlbm90ZWQgYnkgdGhlIHRlcm0g4oCYa2luZ3NoaXAs4oCZIHdoZXRoZXIgaXQgaXMKCQkJCQlkaXNhZHZhbnRhZ2VvdXMgb3IgYW4gYWR2YW50YWdlIHRvIHN0YXRlcywgPG1pbGVzdG9uZSBlZD0iUCIgbj0iOC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHdoYXQgcGVyc29uIG91Z2h0IHRvIGJlIHNldCB1cCBhcyBraW5nLCBhbmQgZnJvbSB3aGF0CgkJCQkJc291cmNlLCBhbmQgYnkgd2hhdCBwcm9jZWR1cmU7IGFuZCBpbiB0aGUgcGFzc2FnZSBpbiB3aGljaCB3ZSB3ZXJlIGNvbnNpZGVyaW5nCgkJCQkJa2luZ3NoaXAgd2UgZGlzdGluZ3Vpc2hlZCB0d28ga2luZHMgb2YgdHlyYW5ueSwgYmVjYXVzZSB0aGVpciBwb3dlciBpbiBhIG1hbm5lcgoJCQkJCWJvcmRlcnMgdXBvbiByb3lhbHR5LCBiZWNhdXNlIGJvdGggdGhlc2UgZm9ybXMgb2YgcnVsZSBhcmUgaW4gYWNjb3JkYW5jZSB3aXRoCgkJCQkJbGF3IO+8iGZvciBhbW9uZyBzb21lIG9mIHRoZSBiYXJiYXJpYW5zIHRoZXkgZWxlY3QgbW9uYXJjaGljIHJ1bGVycyB3aXRoCgkJCQkJYXV0b2NyYXRpYyBwb3dlcnMsIGFuZCBhbHNvIGluIG9sZCB0aW1lcyBhbW9uZyB0aGUgYW5jaWVudCBHcmVla3Mgc29tZSBtZW4gdXNlZAoJCQkJCXRvIGJlY29tZSBtb25hcmNocyBvZiB0aGlzIHNvcnQsIHRoZSBydWxlcnMgY2FsbGVkCgkJCQkJPGVtcGg+YWVzeW1uZXRhZTwvZW1waD7vvIksIGJ1dCB0aGVzZSB0d28gZm9ybXMgb2YgdHlyYW5ueSBoYXZlIGNlcnRhaW4KCQkJCQlkaWZmZXJlbmNlcyBmcm9tIG9uZSBhbm90aGVyLCBhbHRob3VnaCB0aGV5IHdlcmUgb24gdGhlIG9uZSBoYW5kIG9mIHRoZSBuYXR1cmUKCQkJCQlvZiByb3lhbHR5IGJlY2F1c2UgdGhleSB3ZXJlIGluIGFjY29yZGFuY2Ugd2l0aCBsYXcgYW5kIGJlY2F1c2UgdGhleSBleGVyY2lzZWQKCQkJCQltb25hcmNoaWMgcnVsZSBvdmVyIHdpbGxpbmcgc3ViamVjdHMsIGFuZCBvbiB0aGUgb3RoZXIgaGFuZCBvZiB0aGUgbmF0dXJlIG9mIGEKCQkJCQl0eXJhbm55IGJlY2F1c2UgdGhleSBydWxlZCBkZXNwb3RpY2FsbHkgYW5kIGFjY29yZGluZyB0byB0aGVpciBvd24ganVkZ2VtZW50LgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSI4LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdGhlcmUgaXMgYSB0aGlyZCBraW5kIG9mCgkJCQkJdHlyYW5ueSB3aGljaCBpcyB0aG91Z2h0IHRvIGJlIHR5cmFubnkgaW4gdGhlIGZ1bGxlc3QgZGVncmVlLCBiZWluZyB0aGUKCQkJCQljb3VudGVycGFydCBvZiB1bml2ZXJzYWwga2luZ3NoaXA7IHRvIHRoaXMgc29ydCBvZiB0eXJhbm55IG11c3QgbmVjZXNzYXJpbHkKCQkJCQliZWxvbmcgYSBtb25hcmNoeTxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhhdCBleGVyY2lzZXMKCQkJCQlpcnJlc3BvbnNpYmxlIHJ1bGUgb3ZlciBzdWJqZWN0cyBhbGwgb2YgdGhlIHNhbWUgb3Igb2YgYSBoaWdoZXIgY2xhc3Mgd2l0aCBhCgkJCQkJdmlldyB0byBpdHMgb3duIHByaXZhdGUgaW50ZXJlc3QgYW5kIG5vdCBpbiB0aGUgaW50ZXJlc3Qgb2YgdGhlIHBlcnNvbnMgcnVsZWQuCgkJCQkJSGVuY2UgaXQgaXMgaGVsZCBhZ2FpbnN0IHRoZSB3aWxsIG9mIHRoZSBzdWJqZWN0cywgc2luY2Ugbm8gZnJlZSBtYW4gd2lsbGluZ2x5CgkJCQkJZW5kdXJlcyBzdWNoIHJ1bGUuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVzZSB0aGVuIGFyZSB0aGUga2luZHMgb2YKCQkJCQl0eXJhbm55IGFuZCBzdWNoIGlzIHRoZWlyIG51bWJlciwgZm9yIHRoZSByZWFzb25zIHN0YXRlZDxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHdoYXQgaXMgdGhlIGJlc3QKCQkJCQljb25zdGl0dXRpb24gYW5kIHdoYXQgaXMgdGhlIGJlc3QgbW9kZSBvZiBsaWZlIGZvciBtb3N0IGNpdGllcyBhbmQgbW9zdCBvZgoJCQkJCW1hbmtpbmQsIGlmIHdlIGRvIG5vdCBqdWRnZSBieSB0aGUgc3RhbmRhcmQgb2YgYSB2aXJ0dWUgdGhhdCBpcyBhYm92ZSB0aGUgbGV2ZWwKCQkJCQlvZiBwcml2YXRlIGNpdGl6ZW5zIG9yIG9mIGFuIGVkdWNhdGlvbiB0aGF0IG5lZWRzIG5hdHVyYWwgZ2lmdHMgYW5kIG1lYW5zCgkJCQkJc3VwcGxpZWQgYnkgZm9ydHVuZSwgbm9yIGJ5IHRoZSBzdGFuZGFyZCBvZiB0aGUgaWRlYWwgY29uc3RpdHV0aW9uLCBidXQgb2YgYQoJCQkJCW1vZGUgb2YgbGlmZSBhYmxlIHRvIGJlIHNoYXJlZCBieSBtb3N0IG1lbiBhbmQgYSBjb25zdGl0dXRpb24gcG9zc2libGUgZm9yIG1vc3QKCQkJCQlzdGF0ZXMgdG8gYXR0YWluPyA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Gb3IgdGhlCgkJCQkJY29uc3RpdHV0aW9ucyBjYWxsZWQgYXJpc3RvY3JhY2llcywgb2Ygd2hpY2ggd2Ugc3Bva2UganVzdCBub3csPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTI5M2IgNy0yMSwgY2YuIDEyOTNiIDM2LTEyOTRhIDI1Ljwvbm90ZT4KCQkJCQlpbiBzb21lIGNhc2VzIGZhbGwgc29tZXdoYXQgb3V0IG9mIHRoZSBzY29wZSBvZiBtb3N0IHN0YXRlcywgYW5kIGluIG90aGVycwoJCQkJCWFwcHJveGltYXRlIHRvIHdoYXQgaXMgY2FsbGVkIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQsIHNvIHRoYXQgaXQgaXMgcHJvcGVyIHRvCgkJCQkJc3BlYWsgb2YgdGhlc2UgdHdvIGZvcm1zIGFzIGlmIHRoZXkgd2VyZSBvbmUuIEFuZCBpbmRlZWQgdGhlIGRlY2lzaW9uIGluIHJlZ2FyZAoJCQkJCXRvIGFsbCB0aGVzZSBxdWVzdGlvbnMgaXMgYmFzZWQgb24gdGhlIHNhbWUgZWxlbWVudGFyeSBwcmluY2lwbGVzLiBGb3IgaWYgaXQgaGFzCgkJCQkJYmVlbiByaWdodGx5IHNhaWQgaW4gdGhlPHRpdGxlPkV0aGljczwvdGl0bGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExMDFhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTEwMWEKCQkJCQkJMTQ8L2JpYmw+Ljwvbm90ZT4gdGhhdCB0aGUgaGFwcHkgbGlmZSBpcyB0aGUgbGlmZSB0aGF0IGlzIGxpdmVkIHdpdGhvdXQKCQkJCQlpbXBlZGltZW50IGluIGFjY29yZGFuY2Ugd2l0aCB2aXJ0dWUsIGFuZCB0aGF0IHZpcnR1ZSBpcyBhIG1pZGRsZSBjb3Vyc2UsIGl0CgkJCQkJbmVjZXNzYXJpbHkgZm9sbG93cyB0aGF0IHRoZSBtaWRkbGUgY291cnNlIG9mIGxpZmUgaXMgdGhlIGJlc3TigJRzdWNoIGEKCQkJCQltaWRkbGUgY291cnNlIGFzIGl0IGlzIHBvc3NpYmxlIGZvciBlYWNoIGNsYXNzIG9mIG1lbiB0byBhdHRhaW4uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB0aGVzZSBzYW1lIGNyaXRlcmlhIG11c3QgYWxzbwoJCQkJCW5lY2Vzc2FyaWx5IGFwcGx5IHRvIHRoZSBnb29kbmVzcyBhbmQgYmFkbmVzcyBvZiBhIHN0YXRlLCBhbmQgb2YgYQoJCQkJCWNvbnN0aXR1dGlvbuKAlGZvciBhIGNvbnN0aXR1dGlvbiBpcyBhIGNlcnRhaW4gbW9kZSBvZiBsaWZlIG9mIGEgc3RhdGUuCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTI5NWIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkluIGFsbCBzdGF0ZXMgdGhlcmVmb3JlIHRoZXJlIGV4aXN0IHRocmVlIGRpdmlzaW9ucyBvZiB0aGUKCQkJCQlzdGF0ZSwgdGhlIHZlcnkgcmljaCwgdGhlIHZlcnkgcG9vciwgYW5kIHRoaXJkbHkgdGhvc2Ugd2hvIGFyZSBiZXR3ZWVuIHRoZSB0d28uCgkJCQkJU2luY2UgdGhlbiBpdCBpcyBhZG1pdHRlZCB0aGF0IHdoYXQgaXMgbW9kZXJhdGUgb3IgaW4gdGhlIG1pZGRsZSBpcyBiZXN0LCBpdCBpcwoJCQkJCW1hbmlmZXN0IHRoYXQgdGhlIG1pZGRsZSBhbW91bnQgb2YgYWxsIG9mIHRoZSBnb29kIHRoaW5ncyBvZiBmb3J0dW5lIGlzIHRoZSBiZXN0CgkJCQkJYW1vdW50IHRvIHBvc3Nlc3MuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciB0aGlzIGRlZ3JlZQoJCQkJCW9mIHdlYWx0aCBpcyB0aGUgcmVhZGllc3QgdG8gb2JleSByZWFzb24sIHdoZXJlYXMgZm9yIGEgcGVyc29uIHdobyBpcwoJCQkJCWV4Y2VlZGluZ2x5IGJlYXV0aWZ1bCBvciBzdHJvbmcgb3Igbm9ibHkgYm9ybiBvciByaWNoLCBvciB0aGUKCQkJCQlvcHBvc2l0ZeKAlGV4Y2VlZGluZ2x5IHBvb3Igb3Igd2VhayBvciBvZiB2ZXJ5IG1lYW4gc3RhdGlvbiwgaXQgaXMKCQkJCQlkaWZmaWN1bHQgdG8gZm9sbG93IHRoZSBiaWRkaW5nIG9mIHJlYXNvbjsgZm9yIHRoZSBmb3JtZXIgdHVybiBtb3JlIHRvIGluc29sZW5jZQoJCQkJCWFuZCBncmFuZCB3aWNrZWRuZXNzLCBhbmQgdGhlIGxhdHRlciBvdmVybXVjaCB0byBtYWxpY2UgYW5kIHBldHR5IHdpY2tlZG5lc3MsCgkJCQkJYW5kIHRoZSBtb3RpdmUgb2YgYWxsIHdyb25nZG9pbmcgaXMgZWl0aGVyIGluc29sZW5jZSBvciBtYWxpY2UuIEFuZCBtb3Jlb3ZlciB0aGUKCQkJCQltaWRkbGUgY2xhc3MgYXJlIHRoZSBsZWFzdCBpbmNsaW5lZCB0byBzaHVuIG9mZmljZSBhbmQgdG8gY292ZXQgb2ZmaWNlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHRleHQgaXMgYW4gZW1lbmRhdGlvbjsgc29tZSBNU1MuIGdpdmUKCQkJCQkJ4oCYdG8gcnVsZSB0aGUgdHJpYmUgYW5kIHRvIHJ1bGUgdGhlIGNvdW5jaWws4oCZIGJ1dCBtb3N0CgkJCQkJCWhhdmUg4oCYdG8gbG92ZSBvZmZpY2UgYW5kIHJ1bGUgdGhlIGNvdW5jaWws4oCZIGFwcGFyZW50bHkKCQkJCQkJdGhpbmtpbmcgdGhhdCB0aGUgdmVyYiB0cmFuc2xhdGVkIOKAmHJ1bGUgdGhlIGNvdW5jaWzigJkKCQkJCQkJbWVhbnQg4oCYd2lzaCBvZmZpY2Uu4oCZPC9ub3RlPiBhbmQgYm90aCB0aGVzZSB0ZW5kZW5jaWVzCgkJCQkJYXJlIGluanVyaW91cyB0byBzdGF0ZXMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpbgoJCQkJCWFkZGl0aW9uIHRvIHRoZXNlIHBvaW50cywgdGhvc2Ugd2hvIGhhdmUgYW4gZXhjZXNzIG9mIGZvcnR1bmUncyBnb29kcywgc3RyZW5ndGgsCgkJCQkJd2VhbHRoLCBmcmllbmRzIGFuZCB0aGUgbGlrZSwgYXJlIG5vdCB3aWxsaW5nIHRvIGJlIGdvdmVybmVkIGFuZCBkbyBub3Qga25vdyBob3cKCQkJCQl0byBiZSDvvIhhbmQgdGhleSBoYXZlIGFjcXVpcmVkIHRoaXMgcXVhbGl0eSBldmVuIGluIHRoZWlyIGJveWhvb2QgZnJvbQoJCQkJCXRoZWlyIGhvbWVsaWZlLCB3aGljaCB3YXMgc28gbHV4dXJpb3VzIHRoYXQgdGhleSBoYXZlIG5vdCBnb3QgdXNlZCB0byBzdWJtaXR0aW5nCgkJCQkJdG8gYXV0aG9yaXR5IGV2ZW4gaW4gc2Nob29s77yJLCB3aGlsZSB0aG9zZSB3aG8gYXJlIGV4Y2Vzc2l2ZWx5IGluIG5lZWQKCQkJCQlvZiB0aGVzZSB0aGluZ3MgYXJlIHRvbyBodW1ibGUuIEhlbmNlIHRoZSBsYXR0ZXIgY2xhc3MgZG8gbm90IGtub3cgaG93IHRvIGdvdmVybgoJCQkJCWJ1dCBrbm93IGhvdyB0byBzdWJtaXQgdG88bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmdvdmVybm1lbnQKCQkJCQlvZiBhIHNlcnZpbGUga2luZCwgd2hpbGUgdGhlIGZvcm1lciBjbGFzcyBkbyBub3Qga25vdyBob3cgdG8gc3VibWl0IHRvIGFueQoJCQkJCWdvdmVybm1lbnQsIGFuZCBvbmx5IGtub3cgaG93IHRvIGdvdmVybiBpbiB0aGUgbWFubmVyIG9mIGEgbWFzdGVyLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgcmVzdWx0IGlzIGEgc3RhdGUgY29uc2lzdGluZyBvZiBzbGF2ZXMKCQkJCQlhbmQgbWFzdGVycywgbm90IG9mIGZyZWUgbWVuLCBhbmQgb2Ygb25lIGNsYXNzIGVudmlvdXMgYW5kIGFub3RoZXIgY29udGVtcHR1b3VzCgkJCQkJb2YgdGhlaXIgZmVsbG93cy4gVGhpcyBjb25kaXRpb24gb2YgYWZmYWlycyBpcyB2ZXJ5IGZhciByZW1vdmVkIGZyb20KCQkJCQlmcmllbmRsaW5lc3MsIGFuZCBmcm9tIHBvbGl0aWNhbCBwYXJ0bmVyc2hpcOKAlGZvciBmcmllbmRsaW5lc3MgaXMgYW4KCQkJCQllbGVtZW50IG9mIHBhcnRuZXJzaGlwLCBzaW5jZSBtZW4gYXJlIG5vdCB3aWxsaW5nIHRvIGJlIHBhcnRuZXJzIHdpdGggdGhlaXIKCQkJCQllbmVtaWVzIGV2ZW4gb24gYSBqb3VybmV5LiBCdXQgc3VyZWx5IHRoZSBpZGVhbCBvZiB0aGUgc3RhdGUgaXMgdG8gY29uc2lzdCBhcwoJCQkJCW11Y2ggYXMgcG9zc2libGUgb2YgcGVyc29ucyB0aGF0IGFyZSBlcXVhbCBhbmQgYWxpa2UsIGFuZCB0aGlzIHNpbWlsYXJpdHkgaXMKCQkJCQltb3N0IGZvdW5kIGluIHRoZSBtaWRkbGUgY2xhc3NlczsgdGhlcmVmb3JlIHRoZSBtaWRkbGUtY2xhc3Mgc3RhdGUgd2lsbAoJCQkJCW5lY2Vzc2FyaWx5IGJlIGJlc3QgY29uc3RpdHV0ZWQgaW4gcmVzcGVjdCBvZiB0aG9zZSBlbGVtZW50czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UHJvYmFibHkgTGFtYmludXMncyBhbHRlcmF0aW9uIG9mIHRoZSBHcmVlayBzaG91bGQgYmUKCQkJCQkJYWNjZXB0ZWQsIGdpdmluZyDigJhoZW5jZSB0aGF0IHN0YXRlIHdpbGwgbmVjZXNzYXJpbHkgYmUgYmVzdAoJCQkJCQlnb3Zlcm5lZCB3aGljaCBjb25zaXN0cyBvZiB0aG9zZSBlbGVtZW50c+KAlC7igJk8L25vdGU+IG9mCgkJCQkJd2hpY2ggd2Ugc2F5IHRoYXQgdGhlIHN0YXRlIGlzIGJ5IG5hdHVyZSBjb21wb3NlZC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iOS43IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGFsc28gdGhpcyBjbGFzcyBvZiBjaXRpemVucyBoYXZlIHRoZSBncmVhdGVzdCBzZWN1cml0eQoJCQkJCWluIHRoZSBzdGF0ZXM7IGZvciB0aGV5IGRvIG5vdCB0aGVtc2VsdmVzIGNvdmV0IG90aGVyIG1lbidzIGdvb2RzIGFzIGRvIHRoZQoJCQkJCXBvb3IsIG5vciBkbyB0aGUgb3RoZXIgY2xhc3NlcyBjb3ZldCB0aGVpciBzdWJzdGFuY2UgYXMgdGhlIHBvb3IgY292ZXQgdGhhdCBvZgoJCQkJCXRoZSByaWNoOyBhbmQgYmVjYXVzZSB0aGV5IGFyZSBuZWl0aGVyIHBsb3R0ZWQgYWdhaW5zdCBub3IgcGxvdHRpbmcgdGhleSBsaXZlCgkJCQkJZnJlZSBmcm9tIGRhbmdlci4gQmVjYXVzZSBvZiB0aGlzIGl0IHdhcyBhIGdvb2QgcHJheWVyIG9mIFBob2N5bGlkZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgZ25vbWljIHBvZXQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNaWxldHVzIiBrZXk9InBlcnNldXMsTWlsZXR1cyI+TWlsZXR1czwvcGxhY2VOYW1lPiwgYm9ybiA8ZGF0ZSBhdXRobmFtZT0iLTU2MCIgdmFsdWU9Ii01NjAiPjU2MDwvZGF0ZT4gQi5DLjwvbm90ZT7igJQgPHF1b3RlIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgbWV0PSJkYWN0eWxpYyI+SW4gbWFueSB0aGluZ3MgdGhlIG1pZGRsZSBoYXZlIHRoZSBiZXN0OzwvbD4KCQkJCQkJPGw+QmUgbWluZSBhIG1pZGRsZSBzdGF0aW9uLjwvbD4KCQkJCQk8L3F1b3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IGlzIGNsZWFyIHRoZXJlZm9yZSBhbHNvIHRoYXQgdGhlCgkJCQkJcG9saXRpY2FsIGNvbW11bml0eSBhZG1pbmlzdGVyZWQgYnkgdGhlIG1pZGRsZSBjbGFzcyBpcyB0aGUgYmVzdCwgYW5kIHRoYXQgaXQgaXMKCQkJCQlwb3NzaWJsZSBmb3IgdGhvc2Ugc3RhdGVzIHRvIGJlIHdlbGwgZ292ZXJuZWQgdGhhdCBhcmUgb2YgdGhlIGtpbmQgaW4gd2hpY2ggdGhlCgkJCQkJbWlkZGxlIGNsYXNzIGlzIG51bWVyb3VzLCBhbmQgcHJlZmVyYWJseSBzdHJvbmdlciB0aGFuIGJvdGggdGhlIG90aGVyIHR3bwoJCQkJCWNsYXNzZXMsIG9yIGF0IGFsbCBldmVudHMgdGhhbiBvbmUgb2YgdGhlbSwgZm9yIGJ5IHRocm93aW5nIGluIGl0cyB3ZWlnaHQgaXQKCQkJCQlzd2F5cyB0aGUgYmFsYW5jZSBhbmQgcHJldmVudHMgdGhlIG9wcG9zaXRlIGV4dHJlbWVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGV4dHJlbWUgZGVtb2NyYWN5IGFuZCB2ZXJ5IGxpbWl0ZWQgb2xpZ2FyY2h5Ljwvbm90ZT4KCQkJCQlmcm9tIGNvbWluZyBpbnRvIGV4aXN0ZW5jZS4gSGVuY2UgaXQgaXMgdGhlIGdyZWF0ZXN0IGdvb2QgZm9ydHVuZSBpZiB0aGUgbWVuCgkJCQkJdGhhdCBoYXZlIHBvbGl0aWNhbCBwb3dlciBwb3NzZXNzIGEgbW9kZXJhdGUgYW5kIHN1ZmZpY2llbnQgc3Vic3RhbmNlLAoJCQkJCQk8bWlsZXN0b25lIG49IjEyOTZhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5zaW5jZSB3aGVyZSBzb21lIG93biBhIHZlcnkgZ3JlYXQgZGVhbCBvZiBwcm9wZXJ0eSBhbmQgb3RoZXJzCgkJCQkJbm9uZSB0aGVyZSBjb21lcyBhYm91dCBlaXRoZXIgYW4gZXh0cmVtZSBkZW1vY3JhY3kgb3IgYW4gdW5taXhlZCBvbGlnYXJjaHksIG9yIGEKCQkJCQl0eXJhbm55IG1heSByZXN1bHQgZnJvbSBib3RoIG9mIHRoZSB0d28gZXh0cmVtZXMsIGZvciB0eXJhbm55IHNwcmluZ3MgZnJvbSBib3RoCgkJCQkJZGVtb2NyYWN5IGFuZCBvbGlnYXJjaHkgb2YgdGhlIG1vc3QgdW5icmlkbGVkIGtpbmQsIGJ1dCBtdWNoIGxlc3Mgb2Z0ZW4gZnJvbSB0aGUKCQkJCQltaWRkbGUgZm9ybXMgb2YgY29uc3RpdHV0aW9uIGFuZCB0aG9zZSBuZWFyIHRvIHRoZW0uIFRoZSBjYXVzZSBvZiB0aGlzIHdlIHdpbGwKCQkJCQlzcGVhayBvZiBsYXRlciBpbiBvdXIgdHJlYXRtZW50IG9mIHBvbGl0aWNhbCByZXZvbHV0aW9ucy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iOS45IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhhdCB0aGUgbWlkZGxlIGZvcm0gb2YgY29uc3RpdHV0aW9uIGlzIHRoZSBiZXN0IGlzCgkJCQkJZXZpZGVudDsgZm9yIGl0IGFsb25lIGlzIGZyZWUgZnJvbSBmYWN0aW9uLCBzaW5jZSB3aGVyZSB0aGUgbWlkZGxlIGNsYXNzIGlzCgkJCQkJbnVtZXJvdXMsIGZhY3Rpb25zIGFuZCBwYXJ0eSBkaXZpc2lvbnMgYW1vbmcgdGhlIGNpdGl6ZW5zIGFyZSBsZWFzdCBsaWtlbHkgdG8KCQkJCQlvY2N1ci4gQW5kIHRoZSBncmVhdCBzdGF0ZXMgYXJlIG1vcmUgZnJlZSBmcm9tIGZhY3Rpb24gZm9yIHRoZSBzYW1lIHJlYXNvbiwKCQkJCQliZWNhdXNlIHRoZSBtaWRkbGUgY2xhc3MgaXMgbnVtZXJvdXMsIHdoZXJlYXMgaW4gdGhlIHNtYWxsIHN0YXRlcyBpdCBpcyBlYXN5IHRvCgkJCQkJZGl2aWRlIHRoZSB3aG9sZSBwZW9wbGUgaW50byB0d28gcGFydGllcyBsZWF2aW5nIG5vdGhpbmcgaW4gYmV0d2VlbiwgYW5kIGFsc28KCQkJCQlhbG1vc3QgZXZlcnlib2R5IGlzIG5lZWR5IG9yIHdlYWx0aHkuIEFsc28gZGVtb2NyYWNpZXMgYXJlIG1vcmUgc2VjdXJlIGFuZCBtb3JlCgkJCQkJbG9uZy1saXZlZCB0aGFuIG9saWdhcmNoaWVzIG93aW5nIHRvIHRoZSBjaXRpemVucyBvZiB0aGUgbWlkZGxlIGNsYXNzCgkJCQkJ77yIZm9yIHRoZXkgYXJlIG1vcmUgbnVtZXJvdXMgYW5kIGhhdmUgYSBsYXJnZXIgc2hhcmUgb2YgdGhlIGhvbm9ycyBpbgoJCQkJCWRlbW9jcmFjaWVzIHRoYW4gaW4gb2xpZ2FyY2hpZXPvvIksIHNpbmNlIHdoZW4gdGhlIHBvb3IgYXJlIGluIGEgbWFqb3JpdHkKCQkJCQl3aXRob3V0IHRoZSBtaWRkbGUgY2xhc3MsIGFkdmVyc2l0eSBzZXRzIGluIGFuZCB0aGV5IGFyZSBzb29uIHJ1aW5lZC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iOS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpdCBtdXN0IGJlIGRlZW1lZCBhIHNpZ25pZmljYW50IGZhY3QKCQkJCQl0aGF0IHRoZSBiZXN0IGxhd2dpdmVycyBhcmUgZnJvbSBhbW9uZyB0aGUgbWlkZGxlIGNpdGl6ZW5zOyBmb3IgU29sb24gd2FzIG9mCgkJCQkJdGhhdCBjbGFzcyw8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFzIGFwcGVhcnMgZnJvbSBoaXMKCQkJCQlwb2V0cnksIGFuZCBzbyB3YXMgTHljdXJndXMg77yIZm9yIGhlIHdhcyBub3QgYSBraW5n77yJIGFuZAoJCQkJCUNoYXJvbmRhcyBhbmQgYWxtb3N0IHRoZSBncmVhdGVzdCBudW1iZXIgb2YgdGhlIG90aGVyIGxhd2dpdmVycy48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCB0aGVzZSBjb25zaWRlcmF0aW9ucyBhbHNvIHNob3cgdGhlIHJlYXNvbiB3aHkgdGhlCgkJCQkJY29uc3RpdHV0aW9ucyBvZiBtb3N0IHN0YXRlcyBhcmUgZWl0aGVyIGRlbW9jcmF0aWMgb3Igb2xpZ2FyY2hpY2FsOyBvd2luZyB0byB0aGUKCQkJCQltaWRkbGUgY2xhc3MgaW4gdGhlc2Ugc3RhdGVzIGJlaW5nIG9mdGVuIGEgc21hbGwgb25lLCB0aGUgY2xhc3NlcyBkaXZlcmdpbmcgZnJvbQoJCQkJCXRoZSBtaWRkbGUgc3RhdHVz4oCUd2hpY2hldmVyIG9mIHRoZSB0d28sIHRoZSBvd25lcnMgb2YgdGhlIGVzdGF0ZXMgb3IKCQkJCQl0aGUgcGVvcGxlLCBmcm9tIHRpbWUgdG8gdGltZSBoYXMgdGhlIHVwcGVyIGhhbmTigJRjb25kdWN0IHRoZQoJCQkJCWdvdmVybm1lbnQgb24gdGhlaXIgb3duIGxpbmVzLCBzbyB0aGF0IGl0IGJlY29tZXMgZWl0aGVyIGEgZGVtb2NyYWN5IG9yIGFuCgkJCQkJb2xpZ2FyY2h5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGluIGFkZGl0aW9uIHRvIHRoaXMsCgkJCQkJYmVjYXVzZSBmYWN0aW9ucyBvY2N1ciBhbmQgZmlnaHRzIGJldHdlZW4gdGhlIHBlb3BsZSBhbmQgdGhlIHdlYWx0aHksIHdoaWNoZXZlcgoJCQkJCXBhcnR5IGhhcHBlbnMgdG8gZ2FpbiB0aGUgdXBwZXIgaGFuZCBvdmVyIGl0cyBvcHBvbmVudHMgZG9lcyBub3QgZXN0YWJsaXNoIGEKCQkJCQljb21tb24gb3IgZXF1YWwgZ292ZXJubWVudCwgYnV0IHRha2VzIHRoZSBzdXBlcmlvciBzaGFyZSBpbiB0aGUgZ292ZXJubWVudCBhcyBhCgkJCQkJcHJpemUgb2YgdmljdG9yeSwgYW5kIG1ha2VzIGl0IGEgZGVtb2NyYWN5IGluIHRoZSBvbmUgY2FzZSBhbmQgYW4gb2xpZ2FyY2h5IGluCgkJCQkJdGhlIG90aGVyLiBNb3Jlb3ZlciBlYWNoIG9mIHRoZSB0d28gc3RhdGVzIHRoYXQgaW4gdGhlIHBhc3QgaGVsZCB0aGUgbGVhZGVyc2hpcAoJCQkJCW9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gdG9vayBhcyBhIHBhdHRlcm4gdGhlIGZvcm0gb2YKCQkJCQlnb3Zlcm5tZW50IHRoYXQgZXhpc3RlZCBhbW9uZyB0aGVtc2VsdmVzIGFuZCBzZXQgdXAgaW4gdGhlIG9uZSBjYXNlIGRlbW9jcmFjaWVzCgkJCQkJYW5kIGluIHRoZSBvdGhlciBvbGlnYXJjaGllcyBpbiB0aGUgY2l0aWVzLCBub3QgY29uc2lkZXJpbmcgdGhlIGludGVyZXN0IG9mIHRoZQoJCQkJCWNpdGllcyBidXQgdGhlaXIgb3duIGFkdmFudGFnZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iOS4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlIG93aW5nIHRvIHRoZXNlIGNhdXNlcyB0aGUgbWlkZGxlIGZvcm0gb2YgY29uc3RpdHV0aW9uIGVpdGhlciBuZXZlciBjb21lcwoJCQkJCWludG8gZXhpc3RlbmNlIG9yIHNlbGRvbSBhbmQgaW4gZmV3IHBsYWNlczsgZm9yIG9uZSBtYW48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkl0IGlzIHF1aXRlIHVuY2VydGFpbiB3aG8gaXMgbWVhbnQsIHBvc3NpYmx5IFNvbG9uIG9yCgkJCQkJCVRoZXJhbWVuZXMuPC9ub3RlPiBvbmx5IGFtb25nIHRoZSBzdGF0ZXMgdGhhdCBoYXZlIGZvcm1lcmx5IGhlbGQgdGhlCgkJCQkJbGVhZGVyc2hpcCB3YXMgaW5kdWNlZCB0byBncmFudCB0aGlzIGZvcm0gb2Ygb3JnYW5pemF0aW9uLCBhbmQgYnkgdGhpcyB0aW1lIGl0CgkJCQkJaGFzIGJlY29tZSBhIGZpeGVkIGhhYml0IHdpdGggdGhlIHBlb3BsZSBvZiB0aGUgc2VwYXJhdGUgY2l0aWVzIGFsc28gbm90IGV2ZW4gdG8KCQkJCQlkZXNpcmUgZXF1YWxpdHksIDxtaWxlc3RvbmUgbj0iMTI5NmIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCBlaXRoZXIgdG8gc2VlayB0byBydWxlIG9yIHRvIGVuZHVyZSBiZWluZyB1bmRlcgoJCQkJCWEgbWFzdGVyLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlc2UgY29uc2lkZXJhdGlvbnMgdGhlcmVmb3JlIG1ha2UgaXQKCQkJCQljbGVhciB3aGljaCBpcyB0aGUgYmVzdCBjb25zdGl0dXRpb24sIGFuZCB3aHkgaXQgaXMgdGhlIGJlc3Q7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuMTMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgbm93IHRoYXQgdGhlIGJlc3QgaGFzIGJlZW4gZGVmaW5lZCwgaXQKCQkJCQlpcyBub3QgZGlmZmljdWx0IHRvIHNlZSwgYW1vbmcgdGhlIG90aGVyIGZvcm1zIG9mIGNvbnN0aXR1dGlvbgoJCQkJCe+8iGluYXNtdWNoIGFzIHdlIHByb25vdW5jZSB0aGF0IHRoZXJlIGFyZSB2YXJpb3VzIGZvcm1zIG9mIGRlbW9jcmFjeSBhbmQKCQkJCQl2YXJpb3VzIG9saWdhcmNoaWVz77yJLCB3aGF0IGtpbmQgaXMgdG8gYmUgcGxhY2VkIGZpcnN0LCB3aGF0IHNlY29uZCwgYW5kCgkJCQkJd2hhdCBuZXh0IGluIHRoaXMgb3JkZXIsIGJ5IHJlYXNvbiBvZiBvbmUgYmVpbmcgYmV0dGVyIGFuZCBhbm90aGVyIHdvcnNlLiBGb3IgYXQKCQkJCQllYWNoIHN0YWdlIHRoZSBmb3JtIG5lYXJlc3QgdG8gdGhlIGJlc3Qgb25lIG11c3QgbmVjZXNzYXJpbHkgYmUgc3VwZXJpb3IsIGFuZAoJCQkJCXRoZSBmb3JtIHRoYXQgaXMgbW9yZSByZW1vdGUgZnJvbSB0aGUgbWlkZGxlIG11c3QgYmUgaW5mZXJpb3LigJR1bmxlc3MKCQkJCQlvbmUgaXMganVkZ2luZyByZWxhdGl2ZWx5IHRvIGdpdmVuIGNvbmRpdGlvbnM6IEkgbWFrZSB0aGlzIHJlc2VydmF0aW9uIGJlY2F1c2UKCQkJCQlpdCBpcyBxdWl0ZSBwb3NzaWJsZSB0aGF0IGFsdGhvdWdoIG9uZSBmb3JtIG9mIGNvbnN0aXR1dGlvbiBpcyBwcmVmZXJhYmxlIGl0IG1heQoJCQkJCW9mdGVuIGJlIG1vcmUgYWR2YW50YWdlb3VzIGZvciBjZXJ0YWluIHBlb3BsZSB0byBoYXZlIGFub3RoZXIgZm9ybS48bWlsZXN0b25lIGVkPSJQIiBuPSIxMC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgbmV4dAoJCQkJCXRoaW5nIGFmdGVyIHdoYXQgaGFzIGJlZW4gc2FpZCBpcyB0byBkaXNjdXNzIHdoaWNoIGNvbnN0aXR1dGlvbiBpcyBhZHZhbnRhZ2VvdXMKCQkJCQlmb3Igd2hpY2ggcGVvcGxlLCBhbmQgd2hhdCBzb3J0IG9mIGNvbnN0aXR1dGlvbiBmb3Igd2hhdCBzb3J0IG9mIHBlb3BsZS4gTm93IHdlCgkJCQkJbXVzdCBmaXJzdCBncmFzcCBhIGdlbmVyYWwgcHJpbmNpcGxlIHRoYXQgYXBwbGllcyBlcXVhbGx5IHRvIGFsbCBzb3J0cyBvZgoJCQkJCWNvbnN0aXR1dGlvbjogaXQgaXMgZXNzZW50aWFsIHRoYXQgdGhlIHBhcnQgb2YgdGhlIHN0YXRlIHRoYXQgd2lzaGVzIHRoZQoJCQkJCWNvbnN0aXR1dGlvbiB0byByZW1haW4gc2hvdWxkIGJlIHN0cm9uZ2VyIHRoYW4gdGhlIHBhcnQgdGhhdCBkb2VzIG5vdCB3aXNoIGl0LgoJCQkJCUJ1dCBldmVyeSBzdGF0ZSBjb25zaXN0cyBvZiBib3RoIHF1YWxpdHkgYW5kIHF1YW50aXR5OiBieSBxdWFsaXR5IEkgbWVhbgoJCQkJCWZyZWVkb20sIHdlYWx0aCwgZWR1Y2F0aW9uLCBnb29kIGJpcnRoLCBhbmQgYnkgcXVhbnRpdHkgdGhlIHN1cGVyaW9yIG51bWJlcnMgb2YKCQkJCQl0aGUgbXVsdGl0dWRlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGl0IGlzIHBvc3NpYmxlCgkJCQkJCXRoYXQsPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz53aGlsZSB0aGUgcXVhbGl0eSBvZiB0aGUKCQkJCQlzdGF0ZSBiZWxvbmdzIHRvIG9uZSBhbW9uZyB0aGUgcGFydHMgb2Ygd2hpY2ggdGhlIHN0YXRlIGNvbnNpc3RzIGFuZCBpdHMKCQkJCQlxdWFudGl0eSB0byBhbm90aGVyIHBhcnTigJRmb3IgZXhhbXBsZSB0aGUgbG93LWJvcm4gbWF5IGJlIG1vcmUgbnVtZXJvdXMKCQkJCQl0aGFuIHRoZSBub2JsZSBvciB0aGUgcG9vciB0aGFuIHRoZSByaWNoLCB5ZXQgdGhlIG1vcmUgbnVtZXJvdXMgY2xhc3MgbWF5IG5vdAoJCQkJCWV4Y2VlZCBpbiBxdWFudGl0eSBhcyBtdWNoIGFzIHRoZXkgZmFsbCBiZWhpbmQgaW4gcXVhbGl0eS4gSGVuY2UgdGhlc2UgdHdvCgkJCQkJZmFjdG9ycyBoYXZlIHRvIGJlIGp1ZGdlZCBpbiBjb21wYXJpc29uIHdpdGggb25lIGFub3RoZXIuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVyZSB0aGVyZWZvcmUgdGhlIG11bHRpdHVkZSBvZiB0aGUgcG9vciBleGNlZWRzIGluIHRoZQoJCQkJCXByb3BvcnRpb24gc3RhdGVkLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBzbyBhcyB0byBvdXRiYWxhbmNlCgkJCQkJCXRoZWlyIGluZmVyaW9yaXR5IGluIHF1YWxpdHkuPC9ub3RlPiBoZXJlIGl0IGlzIG5hdHVyYWwgZm9yIHRoZXJlIHRvIGJlCgkJCQkJZGVtb2NyYWN5LCBhbmQgZWFjaCBraW5kIG9mIGRlbW9jcmFjeSBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHN1cGVyaW9yIG51bWJlciBvZgoJCQkJCXRoZSBjb21tb24gcGVvcGxlIG9mIGVhY2ggc29ydCwgZm9yIGV4YW1wbGUgaWYgdGhlIG51bWJlciBvZiB0aGUgZmFybWluZyBjbGFzcwoJCQkJCWV4Y2VlZHMsIHRoZSBmaXJzdCBzb3J0IG9mIGRlbW9jcmFjeSwgYnV0IGlmIHRoYXQgb2YgdGhlIGNvbW1vbiBsYWJvcmVycyBhbmQKCQkJCQl3YWdlLWVhcm5lcnMsIHRoZSBsYXN0IHNvcnQsIGFuZCBzaW1pbGFybHkgYWxzbyB3aXRoIHRoZSBvdGhlciBzb3J0cyB0aGF0IGxpZQoJCQkJCWJldHdlZW4gdGhlc2UgdHdvOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IHdoZXJlIHRoZQoJCQkJCWNsYXNzIG9mIHRoZSB3ZWxsLXRvLWRvIGFuZCBub3RhYmxlIGV4Y2VlZHMgaW4gcXVhbGl0eSBtb3JlIHRoYW4gaXQgZmFsbHMgYmVoaW5kCgkJCQkJaW4gcXVhbnRpdHksIGhlcmUgaXQgaXMgbmF0dXJhbCBmb3IgdGhlcmUgdG8gYmUgYW4gb2xpZ2FyY2h5LCBhbmQgbGlrZXdpc2UgdGhlCgkJCQkJdmFyaW91cyBraW5kcyBvZiBvbGlnYXJjaHkgYWNjb3JkaW5nIHRvIHRoZSBkZWdyZWUgb2Ygc3VwZXJpb3JpdHk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gc3VwZXJpb3JpdHkgaW4gcXVhbGl0eS48L25vdGU+IG9mIHRoZQoJCQkJCW9saWdhcmNoaWNhbCBtdWx0aXR1ZGUuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgd29yZCBpcyBsb29zZWx5CgkJCQkJCXVzZWQgb2YgdGhpcyBzbWFsbCBjbGFzcy48L25vdGU+IEJ1dCB0aGUgbGF3Z2l2ZXIgaW4gaGlzIGNvbnN0aXR1dGlvbiBtdXN0CgkJCQkJYWx3YXlzIHRha2UgaW4gdGhlIG1pZGRsZSBjbGFzczsgaWYgaGUgaXMgbWFraW5nIHRoZSBsYXdzIG9mIGFuIG9saWdhcmNoaWNhbAoJCQkJCWNoYXJhY3RlciBoZSBtdXN0IGtlZXAgdGhlIG1pZGRsZSBjbGFzcyBpbiB2aWV3LCBhbmQgaWYgZGVtb2NyYXRpYywgaGUgbXVzdAoJCQkJCWxlZ2lzbGF0ZSBzbyBhcyB0byBicmluZyB0aGVtIGluLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMC40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHdoZXJlIHRoZSBudW1iZXIgb2YgdGhlIG1pZGRsZSBjbGFzcyBleGNlZWRzIGJvdGggdGhlIGV4dHJlbWUgY2xhc3NlcwoJCQkJCXRvZ2V0aGVyLCBvciBldmVuIG9uZSBvZiB0aGVtIG9ubHksIGhlcmUgaXQgaXMgcG9zc2libGUgZm9yIGEgY29uc3RpdHV0aW9uYWwKCQkJCQlnb3Zlcm5tZW50IHRvIGJlIGxhc3Rpbmc7IDxtaWxlc3RvbmUgbj0iMTI5N2EiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGVyZSBpcyBubyBmZWFyIG9mIHRoZSByaWNoIGV2ZXIgY29taW5nIHRvCgkJCQkJdGVybXMgd2l0aCB0aGUgcG9vciBhZ2FpbnN0IHRoaXMgbnVtZXJvdXMgbWlkZGxlIGNsYXNzOyBmb3IgbmVpdGhlciBjbGFzcyB3aWxsCgkJCQkJZXZlciB3aXNoIHRvIGJlIHN1YmplY3QgdG8gdGhlIG90aGVyLCBhbmQgaWYgdGhleSBsb29rIGZvciBhbm90aGVyIGNvbnN0aXR1dGlvbgoJCQkJCWZhaXJlciB0byBib3RoIHRoYW4gdGhpcyB0aGV5IHdpbGwgbm90IGZpbmQgb25lLCBmb3IgdGhleSB3b3VsZCBub3QgZW5kdXJlIHRvCgkJCQkJdGFrZSB0dXJucyB0byBnb3Zlcm4gYmVjYXVzZSB0aGV5IGRpc3RydXN0IGVhY2ggb3RoZXI6IGV2ZXJ5d2hlcmUgaXQgaXMgdGhlCgkJCQkJYXJiaXRyYXRvciB0aGF0IGlzIG1vc3QgdHJ1c3RlZCwgYW5kIHRoZSBtYW4gaW4gdGhlIG1pZGRsZSBpcyBhbiBhcmJpdHJhdG9yLiBBbmQKCQkJCQl0aGUgYmV0dGVyIHRoZSBjb25zdGl0dXRpb24gaXMgbWl4ZWQsIHRoZSBtb3JlIHBlcm1hbmVudCBpdCBpczsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBtYW55IGV2ZW4gb2YgdGhvc2Ugd2hvIHdhbnQgdG8KCQkJCQllc3RhYmxpc2ggYXJpc3RvY3JhdGljIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiBtYWtlIGEgZ3JlYXQgbWlzdGFrZSBub3Qgb25seSBpbgoJCQkJCWdpdmluZyB0b28gbGFyZ2UgYSBzaGFyZSB0byB0aGUgd2VsbC10by1kbyBidXQgYWxzbyBpbiBjaGVhdGluZyB0aGUgcGVvcGxlOyBmb3IKCQkJCQlmYWxzZSBiZW5lZml0cyBpbmV2aXRhYmx5IHJlc3VsdCB1bHRpbWF0ZWx5IGluIHRydWUgZXZpbCwgYXMgdGhlIGVuY3JvYWNobWVudHMKCQkJCQlvZiB0aGUgcmljaCBydWluIHRoZSBjb25zdGl0dXRpb24gbW9yZSB0aGFuIHRob3NlIG9mIHRoZSBwZW9wbGUuPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlCgkJCQkJYXJ0aWZpY2VzIGVtcGxveWVkIGluIGNvbnN0aXR1dGlvbnMgYXMgYSBwcmV0ZXh0IGluIHJlZ2FyZCB0byB0aGUgcGVvcGxlIGFyZQoJCQkJCWZpdmUgaW4gbnVtYmVyLCBhbmQgYXJlIGNvbmNlcm5lZCB3aXRoIHRoZSBhc3NlbWJseSwgdGhlIG1hZ2lzdHJhY2llcywgdGhlCgkJCQkJbGF3LWNvdXJ0cywgdGhlIGJlYXJpbmcgb2YgaGVhdnkgYXJtcywgYW5kIGd5bW5hc3RpYyBleGVyY2lzZXM7IGluIHJlbGF0aW9uIHRvCgkJCQkJdGhlIGFzc2VtYmx5LCB0aGUgZ3JhbnRpbmcgdG8gYWxsIG9mIHRoZSByaWdodCB0byBhdHRlbmQgYnV0IHRoZSBpbXBvc2l0aW9uIG9mIGEKCQkJCQlmaW5lIGZvciBub24tYXR0ZW5kYW5jZSBvbiB0aGUgd2VsbC10by1kbyBvbmx5LCBvciBhIG11Y2ggbGFyZ2VyIGZpbmUgb24gdGhlbQoJCQkJCXRoYW4gb3RoZXJzOyBpbiByZWxhdGlvbiB0byB0aGUgbWFnaXN0cmFjaWVzLDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIGRlbmlhbCB0byB0aGUgb3duZXJzIG9mIHJhdGVkIHByb3BlcnR5IG9mIHRoZSByaWdodCB0bwoJCQkJCXN3ZWFyIG9mZiBzZXJ2aW5nLCB3aGlsZSB0aGUgcG9vciBoYXZlIHRoaXMgcmlnaHQ7IGluIHJlbGF0aW9uIHRvIHRoZQoJCQkJCWxhdy1jb3VydHMsIHRoZSBpbXBvc2l0aW9uIG9mIGEgZmluZSBvbiB0aGUgd2VsbC10by1kbyBpZiB0aGV5IGRvIG5vdCBzZXJ2ZSBvbiBhCgkJCQkJanVyeSwgYnV0IG5vIHBlbmFsdHkgZm9yIHRoZSBwb29yLCBvciBlbHNlIGEgbGFyZ2UgZmluZSBmb3IgdGhlIG9uZSBjbGFzcyBhbmQgYQoJCQkJCXNtYWxsIG9uZSBmb3IgdGhlIG90aGVycywgYXMgaW4gdGhlIGxhd3Mgb2YgQ2hhcm9uZGFzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMC43IiB1bml0PSJMb2ViIGNoYXAiIC8+SW4gc29tZSBwbGFjZXMgYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIHNlcnZlIGluIHRoZQoJCQkJCWFzc2VtYmx5IGFuZCBvbiBqdXJpZXMgYWZ0ZXIgaGF2aW5nIHRoZWlyIG5hbWVzIHB1dCBvbiBhIHJlZ2lzdGVyLCBidXQgbGFyZ2UKCQkJCQlmaW5lcyBhcmUgaW1wb3NlZCBvbiB0aG9zZSB3aG8gYWZ0ZXIgc28gcmVnaXN0ZXJpbmcgZmFpbCB0byBhdHRlbmQgaW4gZWl0aGVyCgkJCQkJY2FwYWNpdHksIGluIG9yZGVyIHRoYXQgdGhlIGZpbmUgbWF5IGNhdXNlIHRoZW0gdG8gYXZvaWQgcmVnaXN0cmF0aW9uIGFuZCB0aGF0CgkJCQkJb3dpbmcgdG8gdGhlaXIgbm90IHJlZ2lzdGVyaW5nIHRoZXkgbWF5IG5vdCBzZXJ2ZSBvbiBqdXJpZXMgb3IgaW4gdGhlIGFzc2VtYmx5LgoJCQkJCVRoZXkgYWxzbyBsZWdpc2xhdGUgaW4gdGhlIHNhbWUgbWFubmVyIGFib3V0IG93bmluZyBoZWF2eSBhcm1zIGFuZCBlbmdhZ2luZyBpbgoJCQkJCWd5bW5hc3RpYyBleGVyY2lzZXM6IHRoZSBwb29yIGFyZSBub3QgYWxsb3dlZCB0byBwb3NzZXNzIGFybXMsIGJ1dCB0aGUKCQkJCQl3ZWxsLXRvLWRvIGFyZSBsaWFibGUgdG8gYSBmaW5lIGlmIHRoZXkgaGF2ZSBub3QgZ290IHRoZW0sIGFuZCB0aGVyZSBpcyBubyBmaW5lCgkJCQkJZm9yIHRoZSBmb3JtZXIgY2xhc3MgaWYgdGhleSBhYnN0YWluIGZyb20gZ3ltbmFzdGljcywgYnV0IHRoZSB3ZWxsLXRvLWRvIGFyZQoJCQkJCWxpYWJsZSB0byBhIGZpbmUsIGluIG9yZGVyIHRoYXQgdGhlIG9uZSBjbGFzcyBiZWNhdXNlIG9mIHRoZSBmaW5lIG1heSB0YWtlIHBhcnQKCQkJCQlpbiB0aGVtIGFuZCB0aGUgb3RoZXIgYmVjYXVzZSB0aGV5IGhhdmUgbm8gcGVuYWx0eSB0byBmZWFyIG1heSBub3QuIFRoZXNlCgkJCQkJYXJ0aWZpY2VzIG9mIGxlZ2lzbGF0aW9uIHRoZW4gYXJlIG9mIGFuIG9saWdhcmNoaWMgbmF0dXJlOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMC44IiB1bml0PSJMb2ViIGNoYXAiIC8+aW4gZGVtb2NyYWNpZXMgdGhleSBpbnRyb2R1Y2UgY29udHJhcnkgZGV2aWNlcyBpbgoJCQkJCXJlZ2FyZCB0byB0aGVzZSBtYXR0ZXJzOiB0aGV5IHByb3ZpZGUgcGF5IGZvciB0aGUgcG9vciBmb3Igc2VydmluZyBpbiB0aGUKCQkJCQlhc3NlbWJseSBhbmQgb24ganVyaWVzIGFuZCBpbXBvc2Ugbm8gZmluZSB1cG9uIHRoZSB3ZWxsLXRvLWRvIGZvciBhYnN0YWluaW5nLgoJCQkJCUhlbmNlIGl0IGlzIG1hbmlmZXN0IHRoYXQgaWYgYW55Ym9keSB3aXNoZXMgdG8gbWFrZSBhIGp1c3QgYmxlbmQsIGhlIG11c3QgYnJpbmcKCQkJCQl0b2dldGhlciB0aGUgcmVndWxhdGlvbnMgZXhpc3RpbmcgaW4gZWFjaCBvZiB0aGUgdHdvIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiwgYW5kCgkJCQkJcHJvdmlkZSBwYXkgZm9yIGF0dGVuZGFuY2UgYW5kIGEgZmluZSBmb3Igbm9uLWF0dGVuZGFuY2U7IGZvciB0aHVzIGFsbCB3b3VsZAoJCQkJCXBhcnRpY2lwYXRlLCB3aGVyZWFzIGluIHRoZSBvdGhlciB3YXkgdGhlIGdvdmVybm1lbnQgY29tZXMgdG8gYmUgaW4gdGhlIGhhbmRzIG9mCgkJCQkJb25seSBvbmUgb2YgdGhlIHR3byBjbGFzc2VzLiA8bWlsZXN0b25lIG49IjEyOTdiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5BbmQgYWx0aG91Z2ggaXQgaXMgcHJvcGVyIHRoYXQgdGhlIGdvdmVybm1lbnQKCQkJCQlzaG91bGQgYmUgZHJhd24gb25seSBmcm9tIHRob3NlIHdobyBwb3NzZXNzIGhlYXZ5IGFybW9yLCB5ZXQgaXQgaXMgbm90IHBvc3NpYmxlCgkJCQkJdG8gZGVmaW5lIHRoZSBhbW91bnQgb2YgdGhlIHByb3BlcnR5LXF1YWxpZmljYXRpb24gYWJzb2x1dGVseSBhbmQgdG8gc2F5IHRoYXQKCQkJCQl0aGV5IG11c3QgcG9zc2VzcyBzbyBtdWNoLCBidXQgb25seSB0byBjb25zaWRlciB3aGF0IHNvcnQgb2YgYW1vdW50IGlzIHRoZQoJCQkJCWhpZ2hlc3QgdGhhdCBpcyBjb21wYXRpYmxlIHdpdGggbWFraW5nIHRob3NlIHdobyBoYXZlIGEgc2hhcmUgaW4gdGhlCgkJCQkJY29uc3RpdHV0aW9uIG1vcmUgbnVtZXJvdXMgdGhhbiB0aG9zZSB3aG8gaGF2ZSBub3QsIGFuZCB0byBmaXggdGhhdCBsaW1pdC4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciB0aG9zZSB3aG8gYXJlIHBvb3IgYW5kIGhhdmUKCQkJCQlubyBzaGFyZSBpbiB0aGUgaG9ub3JzIGFyZSB3aWxsaW5nIHRvIGtlZXAgcXVpZXQgaWYgbm8gb25lIGluc3VsdHMgdGhlbSBvciB0YWtlcwoJCQkJCWF3YXkgYW55IHBhcnQgb2YgdGhlaXIgc3Vic3RhbmNlOyBidXQgdGhpcyBpcyBub3QgZWFzeSB0byBzZWN1cmUsIGZvciBpdCBkb2VzCgkJCQkJbm90IGFsd2F5cyBoYXBwZW4gdGhhdCB0aG9zZSB3aG8gYXJlIGluIHRoZSBnb3Zlcm5pbmcgY2xhc3MgYXJlIGdlbnRsZW1lbi4gQWxzbwoJCQkJCXBlb3BsZSBoYXZlIGEgd2F5IG9mIGJlaW5nIHJlbHVjdGFudCB0byBzZXJ2ZSB3aGVuIHRoZXJlIGlzIGEgd2FyIGlmIHRoZXkgZG8gbm90CgkJCQkJZ2V0IHJhdGlvbnMgYW5kIGFyZSBwb29yIG1lbiBidXQ7IGlmIHNvbWVib2R5IHByb3ZpZGVzIGZvb2QgdGhleSB3YW50IHRvIGZpZ2h0LgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxMC4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkluIHNvbWUgc3RhdGVzIHRoZQoJCQkJCWNpdGl6ZW4tYm9keSBjb25zaXN0cyBub3Qgb25seSBvZiB0aG9zZSB3aG8gYXJlIHNlcnZpbmcgYXMgaGVhdnktYXJtZWQgc29sZGllcnMsCgkJCQkJYnV0IGFsc28gb2YgdGhvc2Ugd2hvIGhhdmUgc28gc2VydmVkOyBhbmQgYXQgTWFsZWEgdGhlIGNpdGl6ZW4tYm9keSBjb25zaXN0ZWQgb2YKCQkJCQl0aGVzZSwgd2hpbGUgdGhlIG1hZ2lzdHJhdGVzIHdlcmUgZWxlY3RlZCBmcm9tIHRob3NlIHdobyB3ZXJlIGFjdHVhbGx5IG9uCgkJCQkJc2VydmljZS4gQW5kIGluZGVlZCB0aGUgZWFybGllc3QgZm9ybSBvZiBjb25zdGl0dXRpb24gYW1vbmcgdGhlIEdyZWVrcyBhZnRlciB0aGUKCQkJCQlraW5nc2hpcHMgY29uc2lzdGVkIG9mIHRob3NlIHdobyB3ZXJlIGFjdHVhbGx5IHNvbGRpZXJzLCB0aGUgb3JpZ2luYWwgZm9ybQoJCQkJCWNvbnNpc3Rpbmcgb2YgdGhlIGNhdmFscnkg77yIZm9yIHdhciBoYWQgaXRzIHN0cmVuZ3RoIGFuZCBpdHMKCQkJCQlwcmUtZW1pbmVuY2UgaW4gY2F2YWxyeSwgc2luY2Ugd2l0aG91dCBvcmRlcmx5IGZvcm1hdGlvbiBoZWF2eS1hcm1lZAoJCQkJCQlpbmZhbnRyeTxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+aXMgdXNlbGVzcywgYW5kIHRoZQoJCQkJCXNjaWVuY2VzIGFuZCBzeXN0ZW1zIGRlYWxpbmcgd2l0aCB0YWN0aWNzIGRpZCBub3QgZXhpc3QgYW1vbmcgdGhlIG1lbiBvZiBvbGQKCQkJCQl0aW1lcywgc28gdGhhdCB0aGVpciBzdHJlbmd0aCBsYXkgaW4gdGhlaXIgY2F2YWxyee+8iTsgYnV0IGFzIHRoZSBzdGF0ZXMKCQkJCQlncmV3IGFuZCB0aGUgd2VhcmVycyBvZiBoZWF2eSBhcm1vciBoYWQgYmVjb21lIHN0cm9uZ2VyLCBtb3JlIHBlcnNvbnMgY2FtZSB0bwoJCQkJCWhhdmUgYSBwYXJ0IGluIHRoZSBnb3Zlcm5tZW50LiBIZW5jZSB3aGF0IHdlIG5vdyBjYWxsIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnRzCgkJCQkJdGhlIG1lbiBvZiBmb3JtZXIgdGltZXMgY2FsbGVkIGRlbW9jcmFjaWVzOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMC4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCB0aGUgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudHMgb2YgZWFybHkgZGF5cyB3ZXJlCgkJCQkJbmF0dXJhbGx5IG9saWdhcmNoaWNhbCBhbmQgcm95YWwsIGZvciBvd2luZyB0byB0aGUgc21hbGxuZXNzIG9mIHRoZSBwb3B1bGF0aW9ucwoJCQkJCXRoZWlyIG1pZGRsZSBjbGFzcyB3YXMgbm90IG51bWVyb3VzLCBzbyB0aGF0IGJlY2F1c2Ugb2YgdGhlaXIgc21hbGwgbnVtYmVycyBhcwoJCQkJCXdlbGwgYXMgaW4gY29uZm9ybWl0eSB3aXRoIHRoZSBzdHJ1Y3R1cmUgb2YgdGhlIHN0YXRlIHRoZSBtaWRkbGUgY2xhc3MgbW9yZQoJCQkJCXJlYWRpbHkgZW5kdXJlZCBiZWluZyBpbiBhIHN1YmplY3QgcG9zaXRpb24uPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdAoJCQkJCWhhcyB0aGVuIGJlZW4gc2FpZCB3aGF0IGlzIHRoZSByZWFzb24gb2YgdGhlcmUgYmVpbmcgc2V2ZXJhbCBmb3JtcyBvZgoJCQkJCWNvbnN0aXR1dGlvbiwgYW5kIHdoeSB0aGVyZSBhcmUgb3RoZXJzIGJlc2lkZXMgdGhvc2UgZGVzaWduYXRlZCBieSBuYW1lCgkJCQkJ77yIZm9yIHRoZXJlIGlzIG5vdCBvbmUgc2luZ2xlIGRlbW9jcmFjeSBvbmx5LCBhbmQgc2ltaWxhcmx5IHRoZXJlIGFyZQoJCQkJCW1vcmUgdGhhbiBvbmUgb2YgdGhlIG90aGVyIGZvcm1z77yJLCBhbmQgYWxzbyB3aGF0IGFyZSB0aGUgZGlmZmVyZW5jZXMKCQkJCQliZXR3ZWVuIHRoZW0gYW5kIHdoYXQgaXMgdGhlIHJlYXNvbiB3aHkgdGhlc2UgZGlmZmVyZW5jZXMgb2NjdXIsIGFuZCBpbiBhZGRpdGlvbgoJCQkJCXRvIHRoZXNlIHBvaW50cywgd2hpY2ggaXMgdGhlIGJlc3Qgb2YgdGhlIGNvbnN0aXR1dGlvbnMgc3BlYWtpbmcgZ2VuZXJhbGx5LCBhbmQKCQkJCQlvZiB0aGUgb3RoZXIgY29uc3RpdHV0aW9ucyB3aGljaCBzb3J0IGlzIHN1aXRlZCB0byB3aGljaCBzb3J0IG9mCgkJCQkJCXBlb3BsZS48bWlsZXN0b25lIGVkPSJQIiBuPSIxMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgYWdhaW4sIGxldCB1cyBzcGVhayBhYm91dCB0aGUgcG9pbnRzIHRoYXQgY29tZSBuZXh0LCBib3RoCgkJCQkJZ2VuZXJhbGx5IGFuZCB3aXRoIHJlZmVyZW5jZSB0byBlYWNoIGNvbnN0aXR1dGlvbiBzZXBhcmF0ZWx5LCB0YWtpbmcgdGhlaXIKCQkJCQlhcHByb3ByaWF0ZSBzdGFydGluZy1wb2ludC4gQWxsIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiB0aGVuIGhhdmUgdGhyZWUgZmFjdG9ycyBpbgoJCQkJCXJlZmVyZW5jZSB0byB3aGljaCB0aGUgZ29vZCBsYXdnaXZlciBoYXMgdG8gY29uc2lkZXIgd2hhdCBpcyBleHBlZGllbnQgZm9yIGVhY2gKCQkJCQljb25zdGl0dXRpb247IGFuZCBpZiB0aGVzZSBmYWN0b3JzIGFyZSB3ZWxsLW9yZGVyZWQgdGhlIGNvbnN0aXR1dGlvbiBtdXN0IG9mCgkJCQkJbmVjZXNzaXR5IGJlIHdlbGwtb3JkZXJlZCwgYW5kIHRoZSBzdXBlcmlvcml0eSBvZiBvbmUgY29uc3RpdHV0aW9uIG92ZXIgYW5vdGhlcgoJCQkJCW5lY2Vzc2FyaWx5IGNvbnNpc3RzIGluIHRoZSBzdXBlcmlvcml0eSBvZiBlYWNoIG9mIHRoZXNlIGZhY3RvcnMuIE9mIHRoZXNlIHRocmVlCgkJCQkJZmFjdG9ycyBvbmUgaXMsIHdoYXQgaXMgdG8gYmUgdGhlIGJvZHkgdGhhdCBkZWxpYmVyYXRlcyBhYm91dCB0aGUgY29tbW9uCgkJCQkJaW50ZXJlc3RzLCA8bWlsZXN0b25lIG49IjEyOThhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5zZWNvbmQgdGhlIG9uZSBjb25uZWN0ZWQgd2l0aCB0aGUgbWFnaXN0cmFjaWVzLCB0aGF0IGlzLCB3aGF0CgkJCQkJdGhlcmUgYXJlIHRvIGJlIGFuZCB3aGF0IG1hdHRlcnMgdGhleSBhcmUgdG8gY29udHJvbCwgYW5kIHdoYXQgaXMgdG8gYmUgdGhlCgkJCQkJbWV0aG9kIG9mIHRoZWlyIGVsZWN0aW9uLCBhbmQgYSB0aGlyZCBpcywgd2hhdCBpcyB0byBiZSB0aGUganVkaWNpYXJ5LjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGRlbGliZXJhdGl2ZSBmYWN0b3IgaXMgc292ZXJlaWduIGFib3V0IHdhciBhbmQgcGVhY2UKCQkJCQlhbmQgdGhlIGZvcm1hdGlvbiBhbmQgZGlzc29sdXRpb24gb2YgYWxsaWFuY2VzLCBhbmQgYWJvdXQgbGF3cywgYW5kIGFib3V0CgkJCQkJc2VudGVuY2VzIG9mIGRlYXRoIGFuZCBleGlsZSBhbmQgY29uZmlzY2F0aW9uIG9mIHByb3BlcnR5LCBhbmQgYWJvdXQgdGhlIGF1ZGl0cwoJCQkJCW9mIG1hZ2lzdHJhdGVzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIG5lY2Vzc2FyaWx5CgkJCQkJZWl0aGVyIGFsbCB0aGVzZSBkZWNpc2lvbnMgbXVzdCBiZSBhc3NpZ25lZCB0byBhbGwgdGhlIGNpdGl6ZW5zLCBvciBhbGwgdG8gc29tZQoJCQkJCW9mIHRoZW0g77yIZm9yIGluc3RhbmNlIHRvIHNvbWUgb25lIG1hZ2lzdHJhY3kgb3IgdG8gc2V2ZXJhbO+8iSwKCQkJCQlvciBkaWZmZXJlbnQgb25lcyB0byBkaWZmZXJlbnQgbWFnaXN0cmFjaWVzLCBvciBzb21lIG9mIHRoZW0gdG8gYWxsIHRoZSBjaXRpemVucwoJCQkJCWFuZCBzb21lIHRvIGNlcnRhaW4gcGVyc29ucy48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZvciBhbGwgdGhlIGNpdGl6ZW5zCgkJCQkJdG8gYmUgbWVtYmVycyBvZiB0aGUgZGVsaWJlcmF0aXZlIGJvZHkgYW5kIHRvIGRlY2lkZSBhbGwgdGhlc2UgbWF0dGVycyBpcyBhIG1hcmsKCQkJCQlvZiBhIHBvcHVsYXIgZ292ZXJubWVudCwgZm9yIHRoZSBjb21tb24gcGVvcGxlIHNlZWsgZm9yIGVxdWFsaXR5IG9mIHRoaXMgbmF0dXJlLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxMS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZXJlIGFyZSBzZXZlcmFsIG1vZGVzIG9mCgkJCQkJc3VjaCB1bml2ZXJzYWwgbWVtYmVyc2hpcC4gT25lIGlzIGZvciB0aGUgY2l0aXplbnMgdG8gc2VydmUgaW4gcm90YXRpb24gYW5kIG5vdAoJCQkJCWFsbCBpbiBhIGJvZHkg77yIYXMgaXMgZW5hY3RlZCBpbiB0aGUgY29uc3RpdHV0aW9uIG9mIHRoZSBNaWxlc2lhbgoJCQkJCQlUZWxlY2xlcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk90aGVyd2lzZSB1bmtub3duPC9ub3RlPiBhbmQgaW4KCQkJCQlvdGhlciBjb25zdGl0dXRpb25zIGFsc28gdGhlIGJvYXJkcyBvZiBtYWdpc3RyYXRlcyBkZWxpYmVyYXRlIGluIGpvaW50CgkJCQkJYXNzZW1ibGllcyBidXQgYWxsIHRoZSBjaXRpemVucyBlbnRlciBpbnRvIHRoZSBtYWdpc3RyYWNpZXMgZnJvbSB0aGUgdHJpYmVzIG9yCgkJCQkJZnJvbSB0aGUgdmVyeSBzbWFsbGVzdCBzZWN0aW9ucyBvZiB0aGUgY2l0aXplbi1ib2R5IGluIHJvdGF0aW9uIHVudGlsIG9mZmljZSBoYXMKCQkJCQlnb25lIHRocm91Z2ggdGhlIHdob2xlIGJvZHnvvIksIGFuZCBmb3IgdGhlcmUgdG8gYmUgam9pbnQgYXNzZW1ibGllcyBvbmx5CgkJCQkJdG8gY29uc2lkZXIgbGVnaXNsYXRpb24gYW5kIHJlZm9ybXMgb2YgdGhlIGNvbnN0aXR1dGlvbiBhbmQgdG8gaGVhciB0aGUgcmVwb3J0cwoJCQkJCXN1Ym1pdHRlZCBieSB0aGUgbWFnaXN0cmF0ZXMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjExLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Bbm90aGVyIG1vZGUgaXM8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmZvciBhbGwgdG8gYXNzZW1ibGUKCQkJCQlpbiBhIGJvZHksIGJ1dCBvbmx5IGZvciB0aGUgcHVycG9zZSBvZiBlbGVjdGluZyBtYWdpc3RyYXRlcywgZW5hY3RpbmcgbGF3cywKCQkJCQljb25zaWRlcmluZyB0aGUgZGVjbGFyYXRpb24gb2Ygd2FyIGFuZCB0aGUgY29uY2x1c2lvbiBvZiBwZWFjZSBhbmQgaG9sZGluZyB0aGUKCQkJCQlhdWRpdCBvZiBtYWdpc3RyYXRlcywgYnV0IGZvciBhbGwgb3RoZXIgbWF0dGVycyB0byBiZSBjb25zaWRlcmVkIGJ5IHRoZQoJCQkJCW1hZ2lzdHJhdGVzIGFwcG9pbnRlZCB0byBkZWFsIHdpdGggZWFjaCByZXNwZWN0aXZlbHkgYW5kIGVsZWN0ZWQgYnkgc3VmZnJhZ2Ugb3IKCQkJCQlieSBsb3QgZnJvbSBhbGwgdGhlIGNpdGl6ZW5zLiBBbm90aGVyIG1vZGUgaXMgZm9yIHRoZSBjaXRpemVucyB0byBtZWV0IGFib3V0IHRoZQoJCQkJCW1hZ2lzdHJhY2llcyBhbmQgdGhlIGF1ZGl0cyBhbmQgaW4gb3JkZXIgdG8gZGVsaWJlcmF0ZSBhYm91dCBkZWNsYXJpbmcgd2FyIGFuZAoJCQkJCWNvbmNsdWRpbmcgYW4gYWxsaWFuY2UsIGJ1dCBmb3IgYWxsIG90aGVyIG1hdHRlcnMgdG8gYmUgZGVhbHQgd2l0aCBieSB0aGUKCQkJCQltYWdpc3RyYXRlcywgZWxlY3RlZCBieSBzdWZmcmFnZSBpbiBhcyBtYW55IGNhc2VzIGFzIGNpcmN1bXN0YW5jZXMgYWxsb3csPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGluIGFuIGFkdmFuY2VkIGRlbW9jcmFjeS48L25vdGU+IGFuZCBzdWNoCgkJCQkJbWFnaXN0cmFjaWVzIGFyZSBhbGwgdGhvc2Ugd2hpY2ggbXVzdCBvZiBuZWNlc3NpdHkgYmUgZmlsbGVkIGJ5IGV4cGVydHMuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjExLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BIGZvdXJ0aCBtb2RlIGlzIGZvciBhbGwgdG8KCQkJCQltZWV0IGluIGNvdW5jaWwgYWJvdXQgYWxsIG1hdHRlcnMsIGFuZCBmb3IgdGhlIG1hZ2lzdHJhY2llcyB0byBkZWNpZGUgYWJvdXQKCQkJCQlub3RoaW5nIGJ1dCBvbmx5IHRvIG1ha2UgcHJlbGltaW5hcnkgZGVjaXNpb25zOyB0aGlzIGlzIHRoZSBtb2RlIGluIHdoaWNoCgkJCQkJZGVtb2NyYWN5IGluIGl0cyBsYXN0IGZvcm0gaXMgYWRtaW5pc3RlcmVkIGF0IHRoZSBwcmVzZW50IGRheeKAlHRoZSBmb3JtCgkJCQkJb2YgZGVtb2NyYWN5IHdoaWNoIHdlIHByb25vdW5jZSB0byBjb3JyZXNwb25kIHRvIGR5bmFzdGljIG9saWdhcmNoeSBhbmQgdG8KCQkJCQl0eXJhbm5pY2FsIG1vbmFyY2h5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMS42IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlc2UgbW9kZXMKCQkJCQl0aGVuIGFyZSBhbGwgb2YgdGhlbSBkZW1vY3JhdGljLiBPbiB0aGUgb3RoZXIgaGFuZCBmb3Igc29tZSBwZXJzb25zIHRvCgkJCQkJZGVsaWJlcmF0ZSB1cG9uIGFsbCBtYXR0ZXJzIGlzIG9saWdhcmNoaWMuIEJ1dCB0aGlzIGFsc28gaGFzIHNldmVyYWwgdmFyaWF0aW9ucy4KCQkJCQlGb3Igd2hlbiB0aGUgbWVtYmVycyBvZiB0aGUgZGVsaWJlcmF0aXZlIGJvZHkgYXJlIGVsZWN0ZWQgb24gY29tcGFyYXRpdmVseQoJCQkJCW1vZGVyYXRlIHByb3BlcnR5LXF1YWxpZmljYXRpb25zLCBhbmQgdGhlIGVsaWdpYmxlIHBlcnNvbnMgYXJlIGNvbXBhcmF0aXZlbHkKCQkJCQludW1lcm91cyBiZWNhdXNlIG9mIHRoZSBtb2RlcmF0ZW5lc3Mgb2YgdGhlIHF1YWxpZmljYXRpb24sIGFuZCB3aGVuIHRoZXkgZG8gbm90CgkJCQkJbWFrZSBjaGFuZ2VzIGluIHRoaW5ncyBpbiB3aGljaCB0aGUgbGF3IGZvcmJpZHMgaXQgYnV0IGZvbGxvdyB0aGUgbGF3LCBhbmQgd2hlbgoJCQkJCWFueWJvZHkgYWNxdWlyaW5nIHRoZSBwcm9wZXJ0eS1xdWFsaWZpY2F0aW9uIGlzIGFsbG93ZWQgdG8gYmVjb21lIGEgbWVtYmVyLCBhCgkJCQkJY29uc3RpdHV0aW9uIG9mIHRoaXMgc29ydCBpcyBpbmRlZWQgYW4gb2xpZ2FyY2h5LCBidXQgb25lIG9mIHRoZSBuYXR1cmUgb2YKCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LCBiZWNhdXNlIG9mIGl0cyBtb2RlcmF0aW9uLiBXaGVuIG9uIHRoZSBvdGhlciBoYW5kIG5vdAoJCQkJCWV2ZXJ5Ym9keSB0aHVzIHF1YWxpZmllZCBwYXJ0aWNpcGF0ZXMgaW4gZGVsaWJlcmF0aW9uIGJ1dCBvbmx5IGNlcnRhaW4gcGVyc29ucwoJCQkJCXByZXZpb3VzbHkgY2hvc2VuIGJ5IGVsZWN0aW9uLCA8bWlsZXN0b25lIG49IjEyOThiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5hbmQgdGhlc2UgZ292ZXJuIGluIGFjY29yZGFuY2Ugd2l0aCBsYXcgYXMgaW4KCQkJCQl0aGUgZm9ybWVyIGNhc2UsIHRoaXMgaXMgb2xpZ2FyY2hpY2FsOyBhbmQgYWxzbyB3aGVuIHRoZSBkZWxpYmVyYXRpdmUgb2ZmaWNpYWxzCgkJCQkJYXJlIGVsZWN0ZWQgYnkgY28tb3B0YXRpb24sIGFuZCB3aGVuIHRoZSBvZmZpY2UgaXMgaGVyZWRpdGFyeSBhbmQgaGFzIHN1cHJlbWUKCQkJCQljb250cm9sIG92ZXIgdGhlIGxhd3MsIHRoaXMgc3lzdGVtIGlzIGJvdW5kIHRvIGJlIG9saWdhcmNoaWNhbC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTEuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB3aGVuIGNlcnRhaW4gcGVyc29ucyBjb250cm9sIGNlcnRhaW4KCQkJCQltYXR0ZXJzLCBmb3IgaW5zdGFuY2Ugd2hlbiBhbGwgdGhlIGNpdGl6ZW5zIGNvbnRyb2wgZGVjaXNpb25zIGFzIHRvIHdhciBhbmQKCQkJCQlwZWFjZSBhbmQgdGhlIGF1ZGl0IG9mIG9mZmljaWFscyB3aGlsZSBldmVyeXRoaW5nIGVsc2UgaXMgY29udHJvbGxlZCBieQoJCQkJCW1hZ2lzdHJhdGVzIGFuZCB0aGVzZSBhcmUgZWxlY3RlZCBieSB2b3RlLCBub3QgYnkgbG90LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIE1TUy4gZ2l2ZSDigJhvciBieSBsb3Qu4oCZPC9ub3RlPiB0aGUKCQkJCQljb25zdGl0dXRpb24gaXMgYW4gYXJpc3RvY3JhY3k7IHdoaWxlIGlmIHNvbWUgbWF0dGVycyBhcmUgY29udHJvbGxlZCBieQoJCQkJCW1hZ2lzdHJhdGVzIGVsZWN0ZWQgYnkgdm90ZSBhbmQgb3RoZXJzIGJ5IG1hZ2lzdHJhdGVzIGNob3NlbiBieSBsb3QsIGFuZCB0aGlzCgkJCQkJZWl0aGVyIGRpcmVjdGx5IG9yIGZyb20gYSBsaXN0IHByZXZpb3VzbHkgc2VsZWN0ZWQgYnkgdm90ZSwgb3IgaWYgbWFnaXN0cmF0ZXMKCQkJCQllbGVjdGVkIGJ5IHZvdGUgYW5kIGJ5IGxvdCBzaXQgaW4gYSBqb2ludCBib2R5LCBzb21lIG9mIHRoZXNlIHJlZ3VsYXRpb25zIGFyZQoJCQkJCWZlYXR1cmVzIG9mIGFuIGFyaXN0b2NyYXRpYyBjb25zdGl0dXRpb24gYW5kIG90aGVycyBvZiBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50CgkJCQkJCWl0c2VsZi48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlIGhhdmUgdGhlbiBpbiB0aGlzIHdheSBkaXN0aW5ndWlzaGVkCgkJCQkJdGhlIGRpZmZlcmVudCBraW5kcyBvZiBkZWxpYmVyYXRpdmUgYm9keSBpbiByZWxhdGlvbiB0byB0aGUgZm9ybXMgb2YKCQkJCQljb25zdGl0dXRpb24sIGFuZCBlYWNoIGZvcm0gb2YgY29uc3RpdHV0aW9uIGNhcnJpZXMgb24gdGhlIGFkbWluaXN0cmF0aW9uIGluCgkJCQkJYWNjb3JkYW5jZSB3aXRoIHRoZSBkaXN0aW5jdGlvbiBzdGF0ZWQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjExLjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgZm9yIGEgZGVtb2NyYWN5IG9mIHRoZSBmb3JtIHRoYXQgYXQgdGhlIHByZXNlbnQgZGF5IGlzCgkJCQkJY29uc2lkZXJlZCB0byBiZSBkZW1vY3JhY3kgaW4gdGhlIGZ1bGxlc3QgZGVncmVlIO+8iGFuZCBJIG1lYW4gb25lIG9mIHRoZQoJCQkJCXNvcnQgaW4gd2hpY2ggdGhlIHBlb3BsZSBpcyBzb3ZlcmVpZ24gZXZlbiBvdmVyIHRoZSBsYXdz77yJIGl0IGlzCgkJCQkJYWR2YW50YWdlb3VzIGZvciB0aGUgaW1wcm92ZW1lbnQgb2YgaXRzIGRlbGliZXJhdGl2ZSBmdW5jdGlvbiBmb3IgaXQgdG8gZG8gdGhlCgkJCQkJc2FtZSBhcyBpcyBkb25lIGluIG9saWdhcmNoaWVzIGluIHRoZSBtYXR0ZXIgb2YgdGhlIGxhdy1jb3VydHMg77yIZm9yCgkJCQkJdGhleSBlbmFjdCBhIGZpbmUgdG8gY29tcGVsIHRoZSBhdHRlbmRhbmNlIG9uIGp1cmllcyBvZiB0aG9zZSB3aG9tIHRoZXkgd2FudCB0bwoJCQkJCWF0dGVuZCwgd2hlcmVhcyBkZW1vY3JhdGljIHN0YXRlcyBpbnN0aXR1dGUgcGF5bWVudCBmb3IgYXR0ZW5kYW5jZSBmb3IgdGhlCgkJCQkJYmVuZWZpdCBvZiB0aGUgcG9vcu+8iSwgYW5kIGFsc28gdG8gZG8gdGhpcyBpbiByZXNwZWN0IG9mIHRoZQoJCQkJCQlhc3NlbWJsaWVzPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz7vvIhmb3IgdGhleSB3aWxsCgkJCQkJZGVsaWJlcmF0ZSBiZXR0ZXIgd2hlbiBhbGwgYXJlIGRlbGliZXJhdGluZyBqb2ludGx5LCB0aGUgY29tbW9uIHBlb3BsZSB3aGVuIHdpdGgKCQkJCQl0aGUgbm90YWJsZXMgYW5kIHRoZXNlIHdoZW4gd2l0aCB0aGUgbWFzc2Vz77yJLCBhbmQgaXQgaXMgYWxzbwoJCQkJCWFkdmFudGFnZW91cyBmb3IgdGhvc2Ugd2hvIGRlbGliZXJhdGUgdG8gYmUgZWxlY3RlZCBieSB2b3RlIG9yIGJ5IGxvdCBlcXVhbGx5CgkJCQkJZnJvbSB0aGUgZGlmZmVyZW50IHNlY3Rpb25zLCBhbmQsIGlmIHRoZSBtZW4gb2YgdGhlIHBlb3BsZSBmYXIgZXhjZWVkIHRoZQoJCQkJCXBvbGl0aWNhbCBjbGFzcyBpbiBudW1iZXIsIGl0IGlzIGFkdmFudGFnZW91cyBlaXRoZXIgbm90IHRvIGdpdmUgcGF5IHRvIGFsbCBidXQKCQkJCQlvbmx5IHRvIGFzIG1hbnkgYXMgYXJlIGNvbW1lbnN1cmF0ZSB3aXRoIHRoZSBudW1iZXIgb2YgdGhlIG5vdGFibGVzLCBvciB0bwoJCQkJCWRpc2NhcmQgYnkgbG90IHRob3NlIHdobyBleGNlZWQgdGhpcyBudW1iZXIuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjExLjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JbiBvbGlnYXJjaGllcyBvbiB0aGUgb3RoZXIgaGFuZCBpdCBpcyBhZHZhbnRhZ2VvdXMgZWl0aGVyCgkJCQkJdG8gY28tb3B0IHNvbWUgcGVyc29ucyBmcm9tIHRoZSBtdWx0aXR1ZGUsIG9yIHRvIGluc3RpdHV0ZSBhbiBvZmZpY2UgbGlrZSB0aGUKCQkJCQlvbmUgdGhhdCBleGlzdHMgaW4gY2VydGFpbiBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50cyB1bmRlciB0aGUgZmxhbWUgb2YKCQkJCQlQcmVsaW1pbmFyeSBDb3VuY2lsbG9ycyBvciBHdWFyZGlhbnMgb2YgdGhlIExhdyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZXJlIHdlcmUgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs+Az4HhvbnOss6/z4XOu86/zrk8L2ZvcmVpZ24+IGF0CgkJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENvcmludGgiIGtleT0icGVyc2V1cyxDb3JpbnRoIj5Db3JpbnRoPC9wbGFjZU5hbWU+IGFzIHdlbGwgYXMgYQoJCQkJCQkJPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiBhbmQgYW4gPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPuG8kM66zrrOu863z4PhvbfOsTwvZm9yZWlnbj47IGFuZCA8Zm9yZWlnbiBsYW5nPSJncmVlayI+zr3Ov868zr/PhuG9u867zrHOus61z4I8L2ZvcmVpZ24+CgkJCQkJCWF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gYW5kIGVsc2V3aGVyZTogYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiB0aGV5IHNhdCB3aXRoIHRoZSBwcmVzaWRlbnRzIG9mCgkJCQkJCXRoZSA8Zm9yZWlnbiBsYW5nPSJncmVlayI+zrLOv8+FzrvhvbU8L2ZvcmVpZ24+IGFuZCA8Zm9yZWlnbiBsYW5nPSJncmVlayI+4byQzrrOus67zrfPg+G9t86xPC9mb3JlaWduPiB0byBjaGVjayBpbGxlZ2FsIHByb2NlZHVyZS48L25vdGU+IGFuZCBkZWFsIHdpdGgKCQkJCQl0aGUgbWF0dGVycyBhYm91dCB3aGljaCB0aGVzZSBvZmZpY2lhbHMgaGF2ZSBoZWxkIGEgcHJlbGltaW5hcnkgZGVsaWJlcmF0aW9uCgkJCQkJ77yIZm9yIHRodXMgdGhlIGNvbW1vbiBwZW9wbGUgd2lsbCBoYXZlIGEgc2hhcmUgaW4gZGVsaWJlcmF0aW9uIGFuZCB3aWxsCgkJCQkJbm90IGhhdmUgdGhlIHBvd2VyIHRvIGFib2xpc2ggYW55IHBhcnQgb2YgdGhlIGNvbnN0aXR1dGlvbu+8iSwgYW5kIHRoZW4KCQkJCQlmb3IgdGhlIHBlb3BsZSBieSB0aGVpciB2b3RlIGVpdGhlciB0byBjb25maXJtIG9yIGF0IGFsbCBldmVudHMgbm90IHRvIHBhc3MKCQkJCQlhbnl0aGluZyBjb250cmFyeSB0byB0aGUgcmVzb2x1dGlvbnMgYnJvdWdodCBiZWZvcmUgdGhlbSwgb3IgdG8gYWxsb3cgYWxsIHRvCgkJCQkJdGFrZSBwYXJ0IGluIGRlYmF0ZSBidXQgb25seSB0aGUgbWFnaXN0cmF0ZXMgdG8gZnJhbWUgcmVzb2x1dGlvbnM7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjExLjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGluIGZhY3QgaXQgaXMgcHJvcGVyIHRvIGRvIGp1c3QgdGhlCgkJCQkJb3Bwb3NpdGUgb2Ygd2hhdCB0YWtlcyBwbGFjZSBpbiBjb25zdGl0dXRpb25hbGx5IGdvdmVybmVkIHN0YXRlczsgZm9yIHRoZSBjb21tb24KCQkJCQlwZW9wbGUgb3VnaHQgdG8gYmUgZ2l2ZW4gcG93ZXIgdG8gdm90ZSB0aGUgcmVqZWN0aW9uIG9mIGEgbWVhc3VyZSwgYnV0IG5vdCB0bwoJCQkJCXZvdGUgaXRzIHJhdGlmaWNhdGlvbiwgYnV0IGl0IHNob3VsZCBiZSByZWZlcnJlZCBiYWNrIHRvIHRoZSBtYWdpc3RyYXRlcy4gSW4KCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50cyB0aGUgcHJvY2VkdXJlIGlzIHRoZSByZXZlcnNlOyB0aGUgZmV3IGFyZSBjb21wZXRlbnQKCQkJCQl0byB2b3RlIHRoZSByZWplY3Rpb24gb2YgYSByZXNvbHV0aW9uIGJ1dCBhcmUgbm90IGNvbXBldGVudCB0byB2b3RlIGl0cwoJCQkJCXJhdGlmaWNhdGlvbiwgdGhpcyBiZWluZyBhbHdheXMgcmVmZXJyZWQgYmFjayB0byB0aGUgbW9zdCBudW1lcm91cyBib2R5LgoJCQkJCQk8bWlsZXN0b25lIG49IjEyOTlhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkxldCB1cyB0aGVuIGRlY2lkZSBpbiB0aGlzCgkJCQkJbWFubmVyIGFib3V0IHRoZSBkZWxpYmVyYXRpdmUgYm9keSwgd2hpY2ggaW4gZmFjdCBpcyB0aGUgc292ZXJlaWduIHBvd2VyIGluIHRoZQoJCQkJCQljb25zdGl0dXRpb24uPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTIuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Q29ubmVjdGVkIHdpdGggdGhpcyBzdWJqZWN0IGlzIHRoZSBkZXRlcm1pbmF0aW9uIGluIHJlZ2FyZCB0bwoJCQkJCXRoZSBtYWdpc3RyYWNpZXMg77yIZm9yIHRoaXMgcGFydCBvZiB0aGUgY29uc3RpdHV0aW9uIGFsc28gaGFzIG1hbnkKCQkJCQl2YXJpZXRpZXPvvIksIGhvdyBtYW55IG1hZ2lzdHJhY2llcyB0aGVyZSBhcmUgdG8gYmUsIGFuZCB3aGF0IGFyZSB0byBiZQoJCQkJCXRoZWlyIHBvd2VycywgYW5kIHdoYXQgdGhlaXIgdmFyaW91cyBwZXJpb2RzIG9mIHRlbnVyZSDvvIhmb3Igc29tZSBwZW9wbGUKCQkJCQltYWtlIHRoZWlyIG1hZ2lzdHJhY2llcyB0ZW5hYmxlIGZvciBzaXggbW9udGhzLCBvdGhlcnMgZm9yIGxlc3MsIG90aGVycyBmb3IgYQoJCQkJCXllYXIgYW5kIG90aGVycyBmb3IgYSBsb25nZXIgcGVyaW9k77yJ4oCUc2hhbGwgdGhlIG1hZ2lzdHJhY2llcwoJCQkJCWJlIGZvciBsaWZlIG9yIGZvciBhIGxvbmcgcGVyaW9kLCBvciBpZiBmb3IgYSBzaG9ydGVyIHRlcm0gc2hhbGwgdGhlIHNhbWUgcGVvcGxlCgkJCQkJYmUgYWxsb3dlZCB0byBob2xkIHRoZW0gc2V2ZXJhbCB0aW1lcyBvciBub3QgdGhlIHNhbWUgbWFuIHR3aWNlIGJ1dCBvbmNlIG9ubHk/CgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgYWxzbyBhcyB0byB0aGUgYXBwb2ludG1lbnQKCQkJCQlvZiBtYWdpc3RyYXRlcywgd2hvIHNoYWxsIGJlIGVsaWdpYmxlLCB3aG8gdGhlIGVsZWN0b3JzLCBhbmQgd2hhdCB0aGUgbW9kZSBvZgoJCQkJCWVsZWN0aW9uPyBGb3Igb24gYWxsIHRoZXNlIHBvaW50cyBpdCBpcyBuZWVkZnVsIHRvIGJlIGFibGUgdG8gZGV0ZXJtaW5lIGhvdyBtYW55CgkJCQkJbW9kZXMgb2YgcHJvY2VkdXJlIGFyZSBwb3NzaWJsZSwgYW5kIHRoZW4gdG8gc2V0dGxlIHdoYXQgbW9kZXMgYXJlIGV4cGVkaWVudCBmb3IKCQkJCQl3aGF0IHNvcnRzIG9mIGNvbnN0aXR1dGlvbi4gTm9yIGlzIGl0IGVhc3kgdG8gZGVjaWRlIHRvIHdoYXQga2luZHMgb2Ygb2ZmaWNlIHRoZQoJCQkJCW5hbWUgb2YgbWFnaXN0cmFjeSBvdWdodCB0byBiZSBhcHBsaWVkOyBmb3IgdGhlIHBvbGl0aWNhbCBjb21tdW5pdHkgcmVxdWlyZXMgYQoJCQkJCWdyZWF0IG1hbnkgb2ZmaWNpYWxzLCBvd2luZyB0byB3aGljaCBpdCBpcyBub3QgcHJvcGVyIHRvIHJlY2tvbiBhbGwgb2YgdGhlbQoJCQkJCW1hZ2lzdHJhdGVzLCB3aGV0aGVyIGVsZWN0ZWQgYnkgdm90ZSBvciBieSBsb3Qs4oCUZm9yIGluc3RhbmNlIGZpcnN0IHRoZQoJCQkJCXByaWVzdHMg77yIZm9yIHRoaXMgb2ZmaWNlIG11c3QgYmUgY29uc2lkZXJlZCBhcyBzb21ldGhpbmcgZGlmZmVyZW50IGZyb20KCQkJCQl0aGUgcG9saXRpY2FsIG1hZ2lzdHJhY2llc++8iSwgYW5kIGFnYWluIHRoZXJlIGFyZSBsZWFkZXJzIG9mIGNob3J1c2VzLAoJCQkJCWFuZCBoZXJhbGRzLCBhbmQgcGVyc29ucyBhcmUgYWxzbyBlbGVjdGVkIGFzIGFtYmFzc2Fkb3JzLjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iMTIuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBvZgoJCQkJCXRoZSBvZmZpY2VzIGV4ZXJjaXNpbmcgc3VwZXJpbnRlbmRlbmNlIHNvbWUgYXJlIHBvbGl0aWNhbCwgYW5kIGFyZSBleGVyY2lzZWQKCQkJCQllaXRoZXIgb3ZlciB0aGUgd2hvbGUgb2YgdGhlIGNpdGl6ZW5zIGluIHJlZ2FyZCB0byBzb21lIG9wZXJhdGlvbuKAlGZvcgoJCQkJCWluc3RhbmNlIGEgZ2VuZXJhbCBzdXBlcmludGVuZHMgdGhlbSB3aGVuIHNlcnZpbmcgYXMgc29sZGllcnMsIG9yIG92ZXIgYQoJCQkJCXNlY3Rpb27igJRmb3IgaW5zdGFuY2UgdGhlIHN1cGVyaW50ZW5kZW50IG9mIHdvbWVuIG9yIG9mIGNoaWxkcmVuOyB3aGlsZQoJCQkJCW90aGVycyBhcmUgZWNvbm9taWMg77yIZm9yIHN0YXRlcyBvZnRlbiBlbGVjdCBvZmZpY2VycyB0byBkb2xlIG91dAoJCQkJCQljb3JuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5EaXN0cmlidXRpb25zIG9mIGNvcm4gd2VyZSBtYWRlIGF0CgkJCQkJCXRpbWVzIG9mIHNjYXJjaXR5LCBvciB3aGVuIHRoZSBzdGF0ZSBoYWQgcmVjZWl2ZWQgYSBwcmVzZW50IG9mCgkJCQkJY29ybi48L25vdGU+77yJOyBhbmQgb3RoZXJzIGFyZSBzdWJvcmRpbmF0ZSwgYW5kIGFyZSB0aGUgc29ydCBvZiBzZXJ2aWNlcwoJCQkJCXRvIHdoaWNoIHBlb3BsZSB3aGVuIHdlbGwgb2ZmIGFwcG9pbnQgc2xhdmVzLiBCdXQgdGhlIHRpdGxlIG9mIG1hZ2lzdHJhY3ksIHRvCgkJCQkJcHV0IGl0IHNpbXBseSwgaXMgY2hpZWZseSB0byBiZSBhcHBsaWVkIHRvIGFsbCB0aG9zZSBvZmZpY2VzIHRvIHdoaWNoIGhhdmUgYmVlbgoJCQkJCWFzc2lnbmVkIHRoZSBkdXRpZXMgb2YgZGVsaWJlcmF0aW5nIGFib3V0IGNlcnRhaW4gbWF0dGVycyBhbmQgb2YgYWN0aW5nIGFzCgkJCQkJanVkZ2VzIGFuZCBvZiBpc3N1aW5nIG9yZGVycywgYW5kIGVzcGVjaWFsbHkgdGhlIGxhc3QsIGZvciB0byBnaXZlIG9yZGVycyBpcwoJCQkJCW1vc3QgY2hhcmFjdGVyaXN0aWMgb2YgYXV0aG9yaXR5LiBCdXQgdGhpcyBxdWVzdGlvbiBpcyBvZiB2aXJ0dWFsbHkgbm8gcHJhY3RpY2FsCgkJCQkJaW1wb3J0YW5jZSDvvIhmb3Igbm8gZGVjaXNpb24gaGFzIHlldCBiZWVuIGdpdmVuLCBvdXIgZGlzY3Vzc2lvbiBiZWluZwoJCQkJCW1lcmVseSBhYm91dCB0aGUgbmFtZe+8iSwgYWx0aG91Z2ggaXQgZG9lcyBhZG1pdCBvZiBzb21lIGZ1cnRoZXIgaW5xdWlyeQoJCQkJCW9mIGEgc3BlY3VsYXRpdmUga2luZC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTIuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPk9uIHRoZSBvdGhlcgoJCQkJCWhhbmQgdGhlIHF1ZXN0aW9ucyB3aGF0IGtpbmRzIGFuZCB3aGF0IG51bWJlciBvZiBtYWdpc3RyYWNpZXMgYXJlIG5lY2Vzc2FyeSB0bwoJCQkJCWNvbnN0aXR1dGUgYSBzdGF0ZSBhdCBhbGwsIGFuZCB3aGF0IGtpbmRzIGFsdGhvdWdoIG5vdCBuZWNlc3NhcnkgYXJlCgkJCQkJYWR2YW50YWdlb3VzIGZvciBhIGdvb2QgY29uc3RpdHV0aW9uLCBhcmUgcXVlc3Rpb25zIHRoYXQgbWlnaHQgcHJlZmVyYWJseSBiZQoJCQkJCWRpc2N1c3NlZCwgYm90aCBpbmRlZWQgYXMgcmVnYXJkcyBldmVyeSBmb3JtIG9mIGNvbnN0aXR1dGlvbiBhbmQgcGFydGljdWxhcmx5IGluCgkJCQkJcmVnYXJkIHRvIHRoZSBzbWFsbCBzdGF0ZXMuIEZvciBpdCBpcyB0cnVlIHRoYXQgaW4gdGhlIGxhcmdlIHN0YXRlcyBpdCBpcwoJCQkJCXBvc3NpYmxlIGFuZCBwcm9wZXIgZm9yIG9uZSBtYWdpc3RyYWN5IHRvIGJlIGFzc2lnbmVkIHRvIG9uZSBmdW5jdGlvbgoJCQkJCe+8iGZvciB0aGUgbGFyZ2UgbnVtYmVyIG9mIHRoZSBjaXRpemVucyBtYWtlcyBpdCBwb3NzaWJsZSBmb3IgbWFueSBwZW9wbGUKCQkJCQl0byBlbnRlciBvbiBhbiBvZmZpY2lhbCBjYXJlZXIsIHNvIGFzIHRvIGludGVybWl0IHRoZWlyIHRlbnVyZSBvZiBzb21lIG9mZmljZXMKCQkJCQlmb3IgYSBsb25nIHRpbWUgYW5kIHRvIGhvbGQgb3RoZXJzIG9ubHkgb25jZSwgYW5kIGFsc28gZXZlcnkgdGFzayBpcyBiZXR0ZXIKCQkJCQlhdHRlbmRlZCB0byBpZiB0aGUgYXR0ZW50aW9uIGlzIGRpcmVjdGVkIHRvIG9uZSB0aGluZyBvbmx5IHRoYW4gaWYgaXQgaXMgYnVzeQoJCQkJCXdpdGggbWFuee+8iTsgPG1pbGVzdG9uZSBuPSIxMjk5YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iMTIuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCBpbgoJCQkJCXRoZSBzbWFsbCBzdGF0ZXMgaXQgaXMgaW5ldml0YWJsZSB0aGF0IG1hbnkgb2ZmaWNlcyBtdXN0IGJlIGdhdGhlcmVkIGludG8gZmV3CgkJCQkJaGFuZHMg77yIZm9yIG93aW5nIHRvIHNob3J0YWdlIG9mIG1hbnBvd2VyIGl0IGlzIG5vdCBlYXN5IGZvciBtYW55IHBlb3BsZQoJCQkJCXRvIGJlIGluIG9mZmljZSwgc2luY2Ugd2hvIHdpbGwgdGFrZSBvdmVyIHRoZSBwb3N0cyBhcyB0aGVpcgoJCQkJCXN1Y2Nlc3NvcnM/77yJLiBCdXQgc29tZXRpbWVzIHNtYWxsIHN0YXRlcyByZXF1aXJlIHRoZSBzYW1lIG1hZ2lzdHJhY2llcwoJCQkJCWFuZCBsYXdzIGFzIGxhcmdlIG9uZXMgZXhjZXB0IHRoYXQgdGhlIGxhdHRlciByZXF1aXJlIHRoZSBzYW1lIHBlcnNvbnMgdG8gc2VydmUKCQkJCQlvZnRlbiwgYnV0IGluIHRoZSBmb3JtZXIgdGhpcyBvbmx5IG9jY3VycyBhZnRlciBhIGxvbmcgaW50ZXJ2YWwuIEhlbmNlIGl0IGlzCgkJCQkJcG9zc2libGUgdG8gYXNzaWduIHNldmVyYWwgZHV0aWVzIHRvIG9uZSBtYW4gYXQgdGhlIHNhbWUgdGltZSDvvIhzaW5jZQoJCQkJCXRoZXkgd2lsbCBub3QgaW50ZXJmZXJlIHdpdGggb25lIGFub3RoZXLvvIksIGFuZCB0byBtZWV0IHRoZSBzaG9ydGFnZSBvZgoJCQkJCW1hbi1wb3dlciBpdCBpcyBuZWNlc3NhcnkgdG8gbWFrZSB0aGUgbWFnaXN0cmFjaWVzIGxpa2Ugc3BpdC1sYW1waG9sZGVycy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkFuIGltcGxlbWVudCDvvIhpdHMgZXhhY3Qgc2hhcGUgZG9lcwoJCQkJCQlub3QgYXBwZWFyIHRvIGJlIGtub3du77yJIHVzZWQgYnkgc29sZGllcnMgb24gY2FtcGFpZ24sIGhlcmUKCQkJCQkJbWVudGlvbmVkIGFzIGFuIGlsbHVzdHJhdGlvbiBvZiBvbmUgdG9vbCBzZXJ2aW5nIHR3byBwdXJwb3NlcywgY2YuIDEyNTJiCgkJCQkJCTEuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JZiB0aGVyZWZvcmUgd2UgYXJlIGFibGUgdG8gc2F5IGhvdwoJCQkJCW1hbnkgbWFnaXN0cmFjaWVzIGV2ZXJ5IHN0YXRlIG11c3QgbmVjZXNzYXJpbHkgcG9zc2VzcyBhbmQgaG93IG1hbnksIHRob3VnaCBub3QKCQkJCQlhYnNvbHV0ZWx5IG5lY2Vzc2FyeSwgaXQgb3VnaHQgdG8gcG9zc2Vzcywga25vd2luZyB0aGVzZSBwb2ludHMgb25lIG1pZ2h0IG1vcmUKCQkJCQllYXNpbHkgbWFrZSBhIGNvbWJpbmF0aW9uIG9mIHRob3NlIG1hZ2lzdHJhY2llcyB3aGljaCBhcmUgb2YgYSBzdWl0YWJsZSBuYXR1cmUKCQkJCQl0byBiZSBjb21iaW5lZCBpbnRvIGEgc2luZ2xlIG9mZmljZS4gQW5kIGl0IGlzIHN1aXRhYmxlIGZvciB0aGUgZnVydGhlciBxdWVzdGlvbgoJCQkJCW5vdCB0byBiZSBvdmVybG9va2VkLCB3aGF0IGtpbmRzIG9mIG1hdHRlcnMgb3VnaHQgdG8gYmUgYXR0ZW5kZWQgdG8gYnkgYSBudW1iZXIKCQkJCQlvZiBvZmZpY2lhbHMgbG9jYWxseSBkaXN0cmlidXRlZCBhbmQgd2hhdCBvdWdodCB0byBiZSB1bmRlciB0aGUgYXV0aG9yaXR5IG9mIG9uZQoJCQkJCW1hZ2lzdHJhdGUgZm9yIGFsbCBsb2NhbGl0aWVzLCBmb3IgZXhhbXBsZSBzaG91bGQgZ29vZCBvcmRlciBiZSBzZWVuIHRvIGluIHRoZQoJCQkJCW1hcmtldC1wbGFjZSBieSBhIENvbnRyb2xsZXIgb2YgdGhlIE1hcmtldCBhbmQgZWxzZXdoZXJlIGJ5IGFub3RoZXIgb2ZmaWNpYWwsIG9yCgkJCQkJZXZlcnl3aGVyZSBieSB0aGUgc2FtZSBvbmU/IGFuZCBvdWdodCB0aGUgb2ZmaWNlcyB0byBiZSBkaXZpZGVkIGFjY29yZGluZyB0byB0aGUKCQkJCQlmdW5jdGlvbiBvciBhY2NvcmRpbmcgdG8gdGhlIHBlcnNvbnMgY29uY2VybmVk4oCUSSBtZWFuLCBmb3IgaW5zdGFuY2UsCgkJCQkJc2hvdWxkIHRoZXJlIGJlIGEgc2luZ2xlIG9mZmljaWFsIGluIGNvbnRyb2wgb2YgZ29vZCBvcmRlciwgb3IgYSBkaWZmZXJlbnQKCQkJCQkJb25lPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3IgY2hpbGRyZW4gYW5kIGZvciB3b21lbj8KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTIuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBhbHNvIHVuZGVyIHRoZSB2YXJpb3VzCgkJCQkJY29uc3RpdHV0aW9ucyBkb2VzIHRoZSBuYXR1cmUgb2YgdGhlIG1hZ2lzdHJhY2llcyB2YXJ5IGluIGFjY29yZGFuY2Ugd2l0aCBlYWNoCgkJCQkJb3IgZG9lcyBpdCBub3QgdmFyeSBhdCBhbGzigJRmb3IgZXhhbXBsZSBpbiBkZW1vY3JhY3ksIG9saWdhcmNoeSwKCQkJCQlhcmlzdG9jcmFjeSBhbmQgbW9uYXJjaHkgYXJlIHRoZSBtYWdpc3RyYWNpZXMgdGhlIHNhbWUgaW4gdGhlaXIgcG93ZXJzLCBhbHRob3VnaAoJCQkJCXRoZXkgYXJlIG5vdCBmaWxsZWQgZnJvbSBlcXVhbCByYW5rcyBub3IgZnJvbSBzaW1pbGFyIGNsYXNzZXMgYnV0IGFyZSBkaWZmZXJlbnQKCQkJCQlpbiBkaWZmZXJlbnQgY29uc3RpdHV0aW9ucyDvvIhmb3IgZXhhbXBsZSBpbiBhcmlzdG9jcmFjaWVzIGRyYXduIGZyb20gdGhlCgkJCQkJZWR1Y2F0ZWQsIGluIG9saWdhcmNoaWVzIGZyb20gdGhlIHdlYWx0aHksIGFuZCBpbiBkZW1vY3JhY2llcyBmcm9tIHRoZQoJCQkJCWZyZWXvvIksIG9yIGFsdGhvdWdoIHNvbWUgY29uc3RpdHV0aW9ucyBoYXBwZW4gdG8gYmUgY29ycmVzcG9uZGVudCB3aXRoCgkJCQkJdGhlIGFjdHVhbCBkaWZmZXJlbmNlcyBvZiB0aGVpciBtYWdpc3RyYWNpZXMsIHlldCBpbiBvdGhlciBjYXNlcyBhcmUgdGhlIHNhbWUKCQkJCQltYWdpc3RyYWNpZXMgYWR2YW50YWdlb3VzIGV2ZW4gd2hlcmUgdGhlIGNvbnN0aXR1dGlvbnMgZGlmZmVyIO+8iGZvciBpbgoJCQkJCXNvbWUgcGxhY2VzIGl0IGlzIHN1aXRhYmxlIGZvciB0aGUgc2FtZSBtYWdpc3RyYWNpZXMgdG8gaGF2ZSBsYXJnZSBmdW5jdGlvbnMgYW5kCgkJCQkJaW4gb3RoZXIgcGxhY2VzIHNtYWxsIG9uZXPvvIk/IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ob3QgYnV0IHdoYXQgdGhlcmUgYXJlIGFsc28gc29tZSBvZmZpY2VzIHBlY3VsaWFyIHRvCgkJCQkJc3BlY2lhbCBmb3JtcyBvZiBjb25zdGl0dXRpb24sIGZvciBpbnN0YW5jZSB0aGUgb2ZmaWNlIG9mIFByZWxpbWluYXJ5CgkJCQkJCUNvdW5jaWxsb3JzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEyOThiIDI5IG4uPC9ub3RlPiBUaGlzCgkJCQkJaXMgdW5kZW1vY3JhdGljLCBhbHRob3VnaCBhIENvdW5jaWwgaXMgYSBwb3B1bGFyIGJvZHksIGZvciB0aGVyZSBpcyBib3VuZCB0byBiZQoJCQkJCXNvbWUgYm9keSBvZiB0aGlzIG5hdHVyZSB0byBoYXZlIHRoZSBkdXR5IG9mIHByZXBhcmluZyBtZWFzdXJlcyBmb3IgdGhlIHBvcHVsYXIKCQkJCQlhc3NlbWJseSwgaW4gb3JkZXIgdGhhdCBpdCBtYXkgYmUgYWJsZSB0byBhdHRlbmQgdG8gaXRzIGJ1c2luZXNzOyBidXQgYQoJCQkJCXByZXBhcmF0b3J5IGNvbW1pdHRlZSwgaWYgc21hbGwsIGlzIG9saWdhcmNoaWNhbCwgYW5kIFByZWxpbWluYXJ5IENvdW5jaWxsb3JzCgkJCQkJbXVzdCBuZWNlc3NhcmlseSBiZSBmZXcgaW4gbnVtYmVyLCBzbyB0aGF0IHRoZXkgYXJlIGFuIG9saWdhcmNoaWNhbCBlbGVtZW50LiBCdXQKCQkJCQl3aGVyZSBib3RoIG9mIHRoZXNlIG1hZ2lzdHJhY2llcyBleGlzdCwgdGhlIFByZWxpbWluYXJ5IENvdW5jaWxsb3JzIGFyZSBpbgoJCQkJCWF1dGhvcml0eSBvdmVyIHRoZSBDb3VuY2lsbG9ycywgc2luY2UgYSBjb3VuY2lsbG9yIGlzIGEgZGVtb2NyYXRpYyBvZmZpY2lhbCwgYnV0CgkJCQkJYSBwcmVsaW1pbmFyeSBjb3VuY2lsbG9yIGlzIGFuIG9saWdhcmNoaWMgb25lLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMi45IiB1bml0PSJMb2ViIGNoYXAiIC8+QWxzbyB0aGUgcG93ZXIgb2YgdGhlIENvdW5jaWwgaXMgd2Vha2VuZWQgaW4gZGVtb2NyYWNpZXMKCQkJCQlvZiB0aGUgc29ydCBpbiB3aGljaCB0aGUgcGVvcGxlIGluIGFzc2VtYmx5IGRlYWxzIHdpdGggZXZlcnl0aGluZyBpdHNlbGY7CgkJCQkJCTxtaWxlc3RvbmUgbj0iMTMwMGEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGlzIHVzdWFsbHkgaGFwcGVucyB3aGVuIHRoZXJlIGlzIGEgcGxlbnRpZnVsIHN1cHBseSBvZgoJCQkJCXBheSBmb3IgdGhvc2Ugd2hvIGF0dGVuZCB0aGUgYXNzZW1ibHksIGZvciBiZWluZyBhdCBsZWlzdXJlIHRoZXkgbWVldCBmcmVxdWVudGx5CgkJCQkJYW5kIGRlY2lkZSBhbGwgdGhpbmdzIHRoZW1zZWx2ZXMuIEJ1dCBhIFN1cGVyaW50ZW5kZW50IG9mIENoaWxkcmVuIGFuZCBhCgkJCQkJU3VwZXJpbnRlbmRlbnQgb2YgV29tZW4sIGFuZCBhbnkgb3RoZXIgbWFnaXN0cmF0ZXMgdGhhdCBleGVyY2lzZSBhIHNpbWlsYXIgc29ydAoJCQkJCW9mIHN1cGVydmlzaW9uLCBhcmUgYW4gYXJpc3RvY3JhdGljIGZlYXR1cmUsIGFuZCBub3QgZGVtb2NyYXRpYyDvvIhmb3IKCQkJCQlob3cgaXMgaXQgcG9zc2libGUgdG8gcHJldmVudCB0aGUgd2l2ZXMgb2YgdGhlIHBvb3IgZnJvbSBnb2luZyBvdXQgb2YgZG9vcnM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yIHBvc3NpYmx5IOKAmGZyb20gZ29pbmcgaW4KCQkJCQkJcHJvY2Vzc2lvbnPigJk6IFNvbG9uIG1hZGUgcmVndWxhdGlvbnMgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs+EzrHhv5bPggoJCQkJCQkJ4byQzr7hvbnOtM6/zrnPgiDPhOG/ts69IM6zz4XOvc6xzrnOuuG/ts69IM66zrHhvbYgz4TOv+G/ls+CIM+A4b2zzr3OuM61z4POuSDOus6x4b22IM+EzrHhv5bPggoJCQkJCQkJ4byRzr/Pgc+EzrHhv5bPgjwvZm9yZWlnbj7vvIg8YmlibCBkZWZhdWx0PSJOTyIgbj0iUGx1dC4gU29sLiAyMSIgdmFsaWQ9InllcyI+UGx1dC4gU29sLgoJCQkJCQkJMjE8L2JpYmw+77yJLjwvbm90ZT4/77yJIG5vciB5ZXQgb2xpZ2FyY2hpYyDvvIhmb3IKCQkJCQl0aGUgd2l2ZXMgb2Ygb2xpZ2FyY2hpYyBydWxlcnMgYXJlIGx1eHVyaW91c++8iS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTIuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgbGV0IHRoZSBkaXNjdXNzaW9uIG9mIHRoZXNlIG1hdHRlcnMgZ28gbm8KCQkJCQlmdXJ0aGVyIGF0IHByZXNlbnQsIGFuZCBsZXQgdXMgYXR0ZW1wdCB0byBnbyB0aHJvdWdoIGZyb20gdGhlIGJlZ2lubmluZyB0aGUKCQkJCQlxdWVzdGlvbiBvZiB0aGUgd2F5cyBvZiBhcHBvaW50aW5nIHRoZSBtYWdpc3RyYXRlcy4gVGhlIHZhcmlldGllcyBoZXJlIGRlcGVuZCBvbgoJCQkJCXRocmVlIGRldGVybWluYW50cywgdGhlIGNvbWJpbmF0aW9ucyBvZiB3aGljaCBtdXN0IGdpdmUgYWxsIHRoZSBwb3NzaWJsZSBtb2Rlcy4KCQkJCQlPbmUgb2YgdGhlc2UgdGhyZWUgZGV0ZXJtaW5pbmcgcG9pbnRzIGlzLCB3aG8gYXJlIHRoZSBwZXJzb25zIHdobyBhcHBvaW50IHRoZQoJCQkJCW1hZ2lzdHJhdGVzPyB0aGUgc2Vjb25kIGlzLCBmcm9tIHdob20/IGFuZCBsYXN0LCBpbiB3aGF0IG1hbm5lcj8gQW5kIG9mIGVhY2ggb2YKCQkJCQl0aGVzZSB0aHJlZSBkZXRlcm1pbmFudHMgdGhlcmUgYXJlIHRocmVlIHZhcmlhdGlvbnM6IGVpdGhlciBhbGwgdGhlIGNpdGl6ZW5zCgkJCQkJYXBwb2ludCBvciBzb21lLCBhbmQgZWl0aGVyIGZyb20gYWxsIG9yIGZyb20gYSBjZXJ0YWluIGNsYXNzIO+8iGRlZmluZWQKCQkJCQlmb3IgaW5zdGFuY2UgYnkgcHJvcGVydHktYXNzZXNzbWVudCBvciBiaXJ0aCBvciB2aXJ0dWUgb3Igc29tZSBvdGhlciBzdWNoCgkJCQkJcXVhbGlmaWNhdGlvbiwgYXMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNZWdhcmEiIGtleT0icGVyc2V1cyxNZWdhcmEiPk1lZ2FyYTwvcGxhY2VOYW1lPiBvbmx5CgkJCQkJdGhvc2Ugd2VyZSBlbGlnaWJsZSB3aG8gcmV0dXJuZWQgaW4gYSBib2R5IGZyb20gZXhpbGUgYW5kIGZvdWdodCB0b2dldGhlcgoJCQkJCWFnYWluc3QgdGhlIGNvbW1vbiBwZW9wbGXvvIksPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JdCBpcwoJCQkJCQlxdWl0ZSB1bmNlcnRhaW4gd2hlbiB0aGlzIGV2ZW50IHRvb2sgcGxhY2UgYW5kIHdoZXRoZXIgaXQgaXMgdGhlIHNhbWUgYXMKCQkJCQkJdGhvc2UgcmVmZXJyZWQgdG8gYXQgMTMwMmIgMzAgZi4gYW5kIGwzMDRiIDM0IGZmLjwvbm90ZT4gYW5kIHRoZSBtb2RlIG9mCgkJCQkJYXBwb2ludG1lbnQgbWF5IGJlIGVpdGhlciBieSB2b3RlIG9yIGJ5IGxvdDsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTIuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hZ2FpbiwgdGhlc2Ugc3lzdGVtcyBtYXkgYmUgY291cGxlZAoJCQkJCQl0b2dldGhlcuKAlDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+SSBtZWFuIHRoYXQKCQkJCQlzb21lIGNpdGl6ZW5zIG1heSBhcHBvaW50IHRvIHNvbWUgb2ZmaWNlcyBidXQgYWxsIHRvIG90aGVycywgYW5kIHRvIHNvbWUgb2ZmaWNlcwoJCQkJCWFsbCBjaXRpemVucyBtYXkgYmUgZWxpZ2libGUgYnV0IHRvIG90aGVycyBvbmx5IGEgY2VydGFpbiBjbGFzcywgYW5kIHRvIHNvbWUKCQkJCQlhcHBvaW50bWVudCBtYXkgYmUgYnkgdm90ZSBidXQgdG8gb3RoZXJzIGJ5IGxvdC4gQW5kIG9mIGVhY2ggdmFyaWF0aW9uIG9mIHRoZXNlCgkJCQkJZGV0ZXJtaW5hbnRzIHRoZXJlIHdpbGwgYmUgZm91ciBtb2RlczogZWl0aGVyIGFsbCBjaXRpemVucyBtYXkgYXBwb2ludCBmcm9tIGFsbAoJCQkJCWJ5IHZvdGUsIG9yIGFsbCBmcm9tIGFsbCBieSBsb3TigJRhbmQgZnJvbSBhbGwgZWl0aGVyIHNlY3Rpb24gYnkKCQkJCQlzZWN0aW9uLCBmb3IgaW5zdGFuY2UgYnkgdHJpYmVzIG9yIGRlbWVzIG9yIGJyb3RoZXJob29kcyB1bnRpbCB0aGUgcHJvY2VkdXJlIGhhcwoJCQkJCWdvbmUgdGhyb3VnaCBhbGwgdGhlIGNpdGl6ZW5zLCBvciBmcm9tIHRoZSB3aG9sZSBudW1iZXIgZXZlcnkgdGltZSzigJRvcgoJCQkJCWVsc2UgcGFydGx5IGluIG9uZSB3YXkgYW5kIHBhcnRseSBpbiB0aGUgb3RoZXIuIEFnYWluLCBpZiB0aGUgZWxlY3RvcnMgYXJlIHNvbWUKCQkJCQlvZiB0aGUgY2l0aXplbnMsIHRoZXkgbXVzdCBlaXRoZXIgYXBwb2ludCBmcm9tIGFsbCBieSB2b3RlLCBvciBmcm9tIGFsbCBieSBsb3QsCgkJCQkJb3IgZnJvbSBzb21lIGJ5IHZvdGUsIG9yIGZyb20gc29tZSBieSBsb3QsIG9yIHBhcnRseSBpbiBvbmUgd2F5IGFuZCBwYXJ0bHkgaW4KCQkJCQl0aGUgb3RoZXLigJRJIG1lYW4gcGFydGx5IGJ5IHZvdGUgYW5kIHBhcnRseSBieSBsb3QuIEhlbmNlIHRoZSBtb2RlcwoJCQkJCXByb3ZlIHRvIGJlIHR3ZWx2ZSwgYXBhcnQgZnJvbSB0aGUgdHdvIGNvbWJpbmF0aW9ucy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTIuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgYW1vbmcgdGhlc2UsIHR3byB3YXlzIG9mIGFwcG9pbnRtZW50IGFyZQoJCQkJCWRlbW9jcmF0aWPigJRmb3IgYWxsIHRvIGFwcG9pbnQgZnJvbSBhbGwgYnkgdm90ZSwgb3IgYnkgbG90LCBvciBieQoJCQkJCWJvdGjigJRzb21lIG9mZmljZXMgYnkgbG90IGFuZCBvdGhlcnMgYnkgdm90ZTsgYnV0IGZvciBub3QgYWxsIHRvIGJlIHRoZQoJCQkJCWVsZWN0b3JzIGFuZCBmb3IgdGhlbSB0byBhcHBvaW50IHNpbXVsdGFuZW91c2x5LCBhbmQgZWl0aGVyIGZyb20gYWxsIG9yIGZyb20KCQkJCQlzb21lIGVpdGhlciBieSBsb3Qgb3IgYnkgdm90ZSBvciBieSBib3RoLCBvciBzb21lIG9mZmljZXMgZnJvbSBhbGwgYW5kIG90aGVycwoJCQkJCWZyb20gc29tZSBieSBib3RoIO+8iGJ5IHdoaWNoIEkgbWVhbiBzb21lIGJ5IGxvdCBhbmQgb3RoZXJzIGJ5CgkJCQkJdm90Ze+8iSBpcyBjb25zdGl0dXRpb25hbC4gQW5kIGZvciBzb21lIHRvIGFwcG9pbnQgZnJvbSBhbGwsIHRvIHNvbWUKCQkJCQlvZmZpY2VzIGJ5IHZvdGUgYW5kIHRvIG90aGVycyBieSBsb3Qgb3IgYnkgYm90aDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUgR3JlZWsgc2hvdWxkIGJlIHJld3JpdHRlbiB0byBnaXZlIOKAmGZvcgoJCQkJCQlzb21lIHRvIGFwcG9pbnQgZnJvbSBhbGwgZWl0aGVyIGJ5IHZvdGUgb3IgYnkgbG90IG9yIGJ5CgkJCQkJCWJvdGgu4oCZPC9ub3RlPiDvvIh0byBzb21lIGJ5IGxvdCBhbmQgdG8gb3RoZXJzIGJ5CgkJCQkJdm90Ze+8iSBpcyBvbGlnYXJjaGljYWw7IGFuZCBpdCBpcyBldmVuIG1vcmUgb2xpZ2FyY2hpY2FsIHRvIGFwcG9pbnQgZnJvbQoJCQkJCWJvdGggY2xhc3Nlcy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTIuMTMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdG8gYXBwb2ludCBzb21lCgkJCQkJb2ZmaWNlcyBmcm9tIGFsbCBhbmQgdGhlIG90aGVycyBmcm9tIGEgY2VydGFpbiBjbGFzcyBpcyBjb25zdGl0dXRpb25hbCB3aXRoIGFuCgkJCQkJYXJpc3RvY3JhdGljIGJpYXM7IDxtaWxlc3RvbmUgbj0iMTMwMGIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPm9yIHRvIGFwcG9pbnQgc29tZSBieSB2b3RlIGFuZCBvdGhlcnMgYnkgbG90LiBBbmQKCQkJCQlmb3IgYSBjZXJ0YWluIGNsYXNzIHRvIGFwcG9pbnQgZnJvbSBhIGNlcnRhaW4gY2xhc3MgJmx0O2J5IHZvdGUmZ3Q7PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIGluc2VydGlvbiBieSBMYW1iaW51cyBzZWVtcwoJCQkJCQljZXJ0YWluLjwvbm90ZT4gaXMgb2xpZ2FyY2hpY2FsLCBhbmQgc28gaXQgaXMgZm9yIGEgY2VydGFpbiBjbGFzcyB0byBhcHBvaW50CgkJCQkJZnJvbSBhIGNlcnRhaW4gY2xhc3MgYnkgbG90IO+8iGFsdGhvdWdoIG5vdCB3b3JraW5nIG91dCBpbiB0aGUgc2FtZQoJCQkJCXdhee+8iSwgYW5kIGZvciBhIGNlcnRhaW4gY2xhc3MgdG8gYXBwb2ludCBmcm9tIGEgY2VydGFpbiBjbGFzcyBieSBib3RoCgkJCQkJbWV0aG9kcy4gQW5kIGZvciBhIGNlcnRhaW4gY2xhc3MgdG8gbWFrZSBhIHByZWxpbWluYXJ5IHNlbGVjdGlvbiBmcm9tIHRoZSB3aG9sZQoJCQkJCWJvZHkgYW5kIHRoZW4gZm9yIGFsbCB0byBhcHBvaW50IGZyb20gYW1vbmcgY2VydGFpbiBwZXJzb25zIO+8iHRodXMKCQkJCQlzZWxlY3RlZO+8iSBpcyBhcmlzdG9jcmF0aWMuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5TbyBtYW55IGluCgkJCQkJbnVtYmVyIHRoZXJlZm9yZSBhcmUgdGhlIG1vZGVzIG9mIGFwcG9pbnRpbmcgdG8gdGhlIG1hZ2lzdHJhY2llcywgYW5kIHRoaXMgaXMKCQkJCQlob3cgdGhlIG1vZGVzIGFyZSBjbGFzc2lmaWVkIGFjY29yZGluZyB0byB0aGUgZGlmZmVyZW50IGNvbnN0aXR1dGlvbnM7IGFuZCB3aGF0CgkJCQkJcmVndWxhdGlvbnMgYXJlIGFkdmFudGFnZW91cyBmb3Igd2hhdCBwZW9wbGUgYW5kIGhvdyB0aGUgYXBwb2ludG1lbnRzIG91Z2h0IHRvCgkJCQkJYmUgY29uZHVjdGVkIHdpbGwgYmUgbWFkZSBjbGVhciBhdCB0aGUgc2FtZSB0aW1lIGFzIHdlIGNvbnNpZGVyIHdoYXQgYXJlIHRoZQoJCQkJCXBvd2VycyBvZiB0aGUgb2ZmaWNlcy4gQnkgdGhlIHBvd2VyIG9mIGFuIG9mZmljZSBJIG1lYW4gZm9yIGluc3RhbmNlIHRoZSBjb250cm9sCgkJCQkJb2YgdGhlIHJldmVudWVzIGFuZCB0aGUgY29udHJvbCBvZiB0aGUgZ3VhcmQ7IHNpbmNlIGEgZGlmZmVyZW50IHNvcnQgb2YgcG93ZXIKCQkJCQliZWxvbmdzIGZvciBleGFtcGxlIHRvIGEgZ2VuZXJhbHNoaXAgYW5kIHRvIHRoZSBvZmZpY2UgdGhhdCBjb250cm9scyBtYXJrZXQKCQkJCQkJY29udHJhY3RzLjxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPk9mIHRoZSB0aHJlZSBmYWN0b3JzIG9mIGEgY29uc3RpdHV0aW9uIGl0IHJlbWFpbnMgdG8gc3BlYWsgb2YKCQkJCQl0aGUganVkaWNpYXJ5LCBhbmQgb2YganVkaWNpYWwgYm9kaWVzIGFsc28gd2UgbXVzdCBjb25zaWRlciB0aGUgdmFyaW91cyBtb2RlcywKCQkJCQlpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHNhbWUgcGxhbi4gQW5kIGEgZGlmZmVyZW5jZSBhbW9uZyBqdWRpY2lhbCBjb3VydHMgcmVzdHMKCQkJCQl1cG9uIHRocmVlIGRldGVybWluYW50c+KAlGNvbnN0aXR1ZW50cywgc3BoZXJlIG9mIGFjdGlvbiwgYW5kIG1vZGUgb2YKCQkJCQlhcHBvaW50bWVudC4gQXMgdG8gdGhlaXIgY29uc3RpdHVlbnRzIEkgbWVhbiBhcmUgdGhlIGNvdXJ0cyBkcmF3biBmcm9tIGFsbCB0aGUKCQkJCQljaXRpemVucyBvciBmcm9tIGEgY2VydGFpbiBjbGFzcz8gYXMgdG8gc3BoZXJlIG9mIGFjdGlvbiwgaG93IG1hbnkga2luZHMgb2YKCQkJCQljb3VydHMgYXJlIHRoZXJlPyBhbmQgYXMgdG8gbW9kZSBvZiBhcHBvaW50bWVudCwgYXJlIHRoZXkgYXBwb2ludGVkIGJ5IGxvdCBvciBieQoJCQkJCXZvdGU/IEZpcnN0IHRoZW4gbGV0IHVzIGRpc3Rpbmd1aXNoIGhvdyBtYW55IGtpbmRzIG9mIGNvdXJ0cyB0aGVyZSBhcmUuIFRoZXkgYXJlCgkJCQkJZWlnaHQgaW4gbnVtYmVyLCBvbmUgYSBjb3VydCBvZiBhdWRpdCw8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFub3RoZXIgdG8gZGVhbCB3aXRoIG9mZmVuZGVycyBhZ2FpbnN0IGFueSBwdWJsaWMgaW50ZXJlc3QsIGFub3RoZXIgd2l0aAoJCQkJCW1hdHRlcnMgdGhhdCBiZWFyIG9uIHRoZSBjb25zdGl0dXRpb24sIGEgZm91cnRoIGZvciBib3RoIG1hZ2lzdHJhdGVzIGFuZCBwcml2YXRlCgkJCQkJcGVyc29ucyBpbiBkaXNwdXRlcyBhYm91dCBwZW5hbHRpZXMsIGZpZnRoIHRoZSBjb3VydCBkZWFsaW5nIHdpdGggcHJpdmF0ZQoJCQkJCWNvbnRyYWN0cyB0aGF0IGFyZSBvbiBhbiBpbXBvcnRhbnQgc2NhbGUsIGFuZCBiZXNpZGUgdGhlc2UgdGhlcmUgaXMKCQkJCQnvvIg277yJIHRoZSBjb3VydCB0aGF0IHRyaWVzIGhvbWljaWRlLCBhbmQg77yIN++8iQoJCQkJCXRoYXQgd2hpY2ggaGVhcnMgYWxpZW4gc3VpdHMgPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTMuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPu+8iG9mIGNvdXJ0cyBvZiBob21pY2lkZSB0aGVyZSBhcmUgZm91ciBraW5kcywgd2hldGhlciB0aGUganVyeSBpcyB0aGUKCQkJCQlzYW1lIG9yIGRpZmZlcmVudOKAlG5hbWVseSwgZm9yIGNhc2VzIG9mIGRlbGliZXJhdGUgaG9taWNpZGUsIG9mCgkJCQkJaW52b2x1bnRhcnkgaG9taWNpZGUsIG9mIGhvbWljaWRlIGFkbWl0dGVkIGJ1dCBjbGFpbWVkIHRvIGJlIGp1c3RpZmlhYmxlLCBhbmQKCQkJCQlmb3VydGggdG8gZGVhbCB3aXRoIGNoYXJnZXMgb2YgaG9taWNpZGUgYnJvdWdodCBhZ2FpbnN0IG1lbiB0aGF0IGhhdmUgZmxlZCBmcm9tCgkJCQkJdGhlIGNvdW50cnkgZm9yIGhvbWljaWRlLCB1cG9uIHRoZWlyIHJldHVybiw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gbWVuIHRoYXQgaGFkIGJlZW4gYWxsb3dlZCB0byBmbGVlIHRoZSBjb3VudHJ5IHdoZW4gY2hhcmdlZCB3aXRoCgkJCQkJCWFjY2lkZW50YWwgaG9taWNpZGUsIGFuZCBvbiB0aGVpciByZXR1cm4gd2VyZSBhY2N1c2VkIG9mIGFub3RoZXIgaG9taWNpZGUsIGEKCQkJCQkJd2lsbGZ1bCBtdXJkZXIuPC9ub3RlPiBzdWNoIGFzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gZm9yIGluc3RhbmNlIHRoZSBDb3VydCBhdCBQaHJlYXR0byBpcyBzYWlkIHRvIGJlLAoJCQkJCWFsdGhvdWdoIHN1Y2ggY2FzZXMgYXJlIG9mIHJhcmUgb2NjdXJyZW5jZSBpbiB0aGUgd2hvbGUgY291cnNlIG9mIGhpc3RvcnksIGV2ZW4KCQkJCQlpbiB0aGUgZ3JlYXQgc3RhdGVzIGFuZCBvZiB0aGUgYWxpZW5zJyBjb3VydCBvbmUgYnJhbmNoIGhlYXJzIHN1aXRzIG9mIGFsaWVucwoJCQkJCWFnYWluc3QgYWxpZW5zIGFuZCBhbm90aGVyIG9mIGFsaWVucyBhZ2FpbnN0IGNpdGl6ZW5z77yJOyBhbmQgYWxzbyBiZXNpZGUKCQkJCQlhbGwgb2YgdGhlc2UgdGhlcmUgYXJlIO+8iDjvvIkgY291cnRzIHRvIHRyeSBjYXNlcyBvZiBwZXR0eQoJCQkJCWNvbnRyYWN0cywgaW52b2x2aW5nIHN1bXMgb2Ygb25lIGRyYWNobWEsIGZpdmUgZHJhY2htYXMgb3IgYSBsaXR0bGUKCQkJCQltb3Jl4oCUZm9yIGV2ZW4gdGhlc2UgY2FzZXMgaGF2ZSB0byBiZSB0cmllZCwgdGhvdWdoIHRoZXkgYXJlIG5vdAoJCQkJCXN1aXRhYmxlIGZvciBhIG51bWVyb3VzIGp1cnkuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQKCQkJCQlsZXQgdXMgZGlzbWlzcyB0aGUgc3ViamVjdCBvZiB0aGVzZSBwZXR0eSBzdWl0cywgYW5kIHRoZSBjb3VydHMgZm9yIGhvbWljaWRlIGFuZAoJCQkJCXRob3NlIGZvciBhbGllbnMsIGFuZCBsZXQgdXMgc3BlYWsgYWJvdXQgcG9saXRpY2FsIHRyaWFscywgd2hpY2ggd2hlbiBub3Qgd2VsbAoJCQkJCWNvbmR1Y3RlZCBjYXVzZSBwYXJ0eSBkaXZpc2lvbnMgYW5kIHJldm9sdXRpb25hcnkgZGlzdHVyYmFuY2VzLiBBbmQgbmVjZXNzYXJpbHkKCQkJCQllaXRoZXIgYWxsIHRoZSBqdWRnZXMgb2YgYWxsIHRoZSBjYXNlcyB0aGF0IGhhdmUgYmVlbiBjbGFzc2lmaWVkIHdpbGwgYmUKCQkJCQlhcHBvaW50ZWQgYnkgdm90ZSwgb3IgYnkgbG90LCBvciBhbGwgaW4gYWxsIGNhc2VzIHBhcnRseSBieSBsb3QgYW5kIHBhcnRseSBieQoJCQkJCXZvdGUsIG9yIGluIHNvbWUgY2FzZXMgc29tZSBqdWRnZXMgd2lsbCBiZSBhcHBvaW50ZWQgYnkgbG90IGFuZCBvdGhlcnMgYnkgdm90ZQoJCQkJCWZvciB0aGUgc2FtZSBjYXNlLiA8bWlsZXN0b25lIG49IjEzMDFhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5UaGVzZSBtb2RlcyB0aGVuIGFyZSBmb3VyIGluIG51bWJlciwgYW5kIHRoZQoJCQkJCXNlY3Rpb25hbCBtb2RlcyBhbHNvIG1ha2UgYXMgbWFueSBvdGhlcnM7IGZvciBoZXJlIGFnYWluIHRoZSBqdWRnZXMgZm9yIGFsbAoJCQkJCWNhc2VzIG1heSBiZSBkcmF3biBieSB2b3RlIGZyb20gYSBjZXJ0YWluIGNsYXNzLCBvciBmb3IgYWxsIGNhc2VzIGJ5IGxvdCBmcm9tIGEKCQkJCQljZXJ0YWluIGNsYXNzLCBvciBzb21lIGNvdXJ0cyBtYXkgYmUgYXBwb2ludGVkIGJ5IGxvdCBhbmQgb3RoZXJzIGJ5IHZvdGUsIG9yCgkJCQkJc29tZSBjb3VydHMgbWF5IGJlIGNvbXBvc2VkIG9mIGp1ZGdlcyBjaG9zZW4gYnkgbG90IGFuZCBieSB2b3RlIGZvciB0aGUgc2FtZQoJCQkJCWNhc2VzLiBUaGVzZSB0aGVuIGFyZSB0aGUgbW9kZXMsIGFzIHdhcyBzYWlkLCBjb3JyZXNwb25kaW5nIHRvIHRob3NlIG1lbnRpb25lZC4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTMuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB0aGVyZSBhcmUgYWxzbyB0aGUgc2FtZQoJCQkJCWNvdXJ0cyBpbiBjb21iaW5hdGlvbuKAlEkgbWVhbiBmb3IgZXhhbXBsZSBzb21lIGRyYXduIGZyb20gdGhlIHdob2xlCgkJCQkJYm9keSBhbmQgc29tZSBmcm9tIGEgY2xhc3MgYW5kIHNvbWUgZnJvbSBib3RoLCBhcyBmb3IgaW5zdGFuY2UgaWYgdGhlIHNhbWUgY291cnQKCQkJCQljb250YWluZWQgc29tZSBtZW1iZXJzIGZyb20gdGhlIHdob2xlIGJvZHkgYW5kIG90aGVycyBmcm9tIGEgY2xhc3MsIGFuZAoJCQkJCWFwcG9pbnRlZCBlaXRoZXIgYnkgbG90IG9yIGJ5IHZvdGUgb3IgYm90aC4gV2UgaGF2ZSB0aGVuIHN0YXRlZCBhbGwgdGhlIG1vZGVzIGluCgkJCQkJd2hpY2ggaXQgaXMgcG9zc2libGUgZm9yIHRoZSBjb3VydHMgdG8gYmUgY29tcG9zZWQ7IGFuZCBvZiB0aGVzZSB0aGUgZmlyc3Qgc2V0LAoJCQkJCWRyYXduIGZyb20gYWxsIHRoZSBjaXRpemVucyBhbmQgZGVhbGluZyB3aXRoIGFsbCBjYXNlcywgYXJlIHBvcHVsYXIsIHRoZSBzZWNvbmQsCgkJCQkJZHJhd24gZnJvbSBhIGNlcnRhaW4gY2xhc3MgdG8gZGVhbCB3aXRoIGFsbCBjYXNlcywgYXJlIG9saWdhcmNoaWMsIGFuZCB0aGUKCQkJCQl0aGlyZCwgZHJhd24gcGFydGx5IGZyb20gYWxsIGFuZCBwYXJ0bHkgZnJvbSBhIGNlcnRhaW4gY2xhc3MsIGFyZSBzdWl0ZWQgdG8gYW4KCQkJCQlhcmlzdG9jcmFjeSBhbmQgdG8gYSBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LjwvcD4KCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyODhiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxMCIgdW5pdD0ibGluZSIgLz48L3RyYW5zbGF0aW9uPg=="
translation['4.1288b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UcmFuc3Bvc2VkIGFzIEJvb2sgNiBieSBzb21lIGVkaXRvcnM7CgkJCQkJCXNlZSBCb29rIDMgZmluLiwgbm90ZS48L25vdGU+SW4gYWxsIHRoZSBhcnRzIGFuZCB0aGUgc2NpZW5jZXMgdGhhdCBhcmUgbm90CgkJCQkJbWVyZWx5IHNlY3Rpb25hbCBidXQgdGhhdCBpbiByZWxhdGlvbiB0byBzb21lIG9uZSBjbGFzcyBvZiBzdWJqZWN0IGFyZSBjb21wbGV0ZSwKCQkJCQlpdCBpcyB0aGUgZnVuY3Rpb24gb2YgYSBzaW5nbGUgYXJ0IG9yIHNjaWVuY2UgdG8gc3R1ZHkgd2hhdCBpcyBzdWl0ZWQgdG8gZWFjaAoJCQkJCQljbGFzcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUgR3JlZWsgc2hvdWxkIGJlCgkJCQkJCWFsdGVyZWQgdG8gZ2l2ZSDigJh0byBlYWNoIGluZGl2aWR1YWwu4oCZPC9ub3RlPiBmb3IKCQkJCQlpbnN0YW5jZSB3aGF0IHNvcnQgb2YgZ3ltbmFzdGljIGV4ZXJjaXNlIGlzIGJlbmVmaWNpYWwgZm9yIHdoYXQgc29ydCBvZiBib2RpbHkKCQkJCQlmcmFtZSwgYW5kIHdoYXQgaXMgdGhlIGJlc3Qgc29ydCDvvIhmb3IgdGhlIGJlc3QgbXVzdCBuYXR1cmFsbHkgc3VpdCB0aGUKCQkJCQlwZXJzb24gb2YgdGhlIGZpbmVzdCBuYXR1cmFsIGVuZG93bWVudCBhbmQgZXF1aXBtZW5077yJLCBhbmQgYWxzbyB3aGF0CgkJCQkJb25lIGV4ZXJjaXNlIHRha2VuIGJ5IGFsbCBpcyB0aGUgYmVzdCBmb3IgdGhlIGxhcmdlc3QgbnVtYmVyIO+8iGZvciB0aGlzCgkJCQkJaXMgYWxzbyBhIHF1ZXN0aW9uIGZvciBneW1uYXN0aWMgc2NpZW5jZe+8iSwgYW5kIGluIGFkZGl0aW9uLCBpbiBjYXNlCgkJCQkJc29tZW9uZSBkZXNpcmVzIGEgaGFiaXQgb2YgYm9keSBhbmQgYSBrbm93bGVkZ2Ugb2YgYXRobGV0aWMgZXhlcmNpc2VzIHRoYXQgYXJlCgkJCQkJbm90IHRoZSBvbmVzIGFkYXB0ZWQgdG8gaGltLCBpdCBpcyBjbGVhcmx5IGp1c3QgYXMgbXVjaCB0aGUgdGFzayBvZiB0aGUgdHJhaW5lcgoJCQkJCWFuZCBneW1uYXN0aWMgbWFzdGVyIHRvIHByb2R1Y2UgdGhpcyBjYXBhY2l0eTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGEgYm9kaWx5IGJlYXJpbmcgYW5kIGF0aGxldGljIHNraWxsIHRoYXQgYXJlIG5vdCB0aGUgb25lcyBtb3N0IHN1aXRlZAoJCQkJCQl0byB0aGUgcHVwaWwncyBwYXJ0aWN1bGFyIHBoeXNpcXVlLjwvbm90ZT4gYWxzbzs8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PC90cmFuc2xhdGlvbj4="
translation['4.1289a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHdlCgkJCQkJbm90aWNlIHRoaXMgYWxzbyBoYXBwZW5pbmcgc2ltaWxhcmx5IGluIHJlZ2FyZCB0byBtZWRpY2luZSwgYW5kIHNoaXBidWlsZGluZywKCQkJCQlhbmQgdGhlIG1ha2luZyBvZiBjbG90aGVzLCBhbmQgZXZlcnkgb3RoZXIgY3JhZnQuIEhlbmNlIGl0IGlzIGNsZWFyIHRoYXQgaW4gdGhlCgkJCQkJY2FzZSBvZiB0aGUgY29uc3RpdHV0aW9uIGFzIHdlbGwgaXQgaXMgdGhlIGJ1c2luZXNzIG9mIHRoZSBzYW1lIHNjaWVuY2UgdG8gc3R1ZHkKCQkJCQl3aGljaCBpcyB0aGUgYmVzdCBjb25zdGl0dXRpb24gYW5kIHdoYXQgY2hhcmFjdGVyIGl0IG11c3QgaGF2ZSB0byBiZSB0aGUgbW9zdAoJCQkJCWlkZWFsIGlmIG5vIGV4dGVybmFsIGNpcmN1bXN0YW5jZSBzdGFuZHMgaW4gdGhlIHdheSwgYW5kIHdoYXQgY29uc3RpdHV0aW9uIGlzCgkJCQkJYWRhcHRlZCB0byB3aGF0IHBlb3BsZSDvvIhzaW5jZSBmb3IgbWFueSBpdCBpcyBkb3VidGxlc3MgaW1wb3NzaWJsZSB0bwoJCQkJCWF0dGFpbiB0aGUgYmVzdCBvbmUsIHNvIHRoYXQgdGhlIGdvb2QgbGF3Z2l2ZXIgYW5kIHRoZSB0cnVlIHN0YXRlc21hbiBtdXN0IGJlCgkJCQkJYWNxdWFpbnRlZCB3aXRoIGJvdGggdGhlIGZvcm0gb2YgY29uc3RpdHV0aW9uIHRoYXQgaXMgdGhlIGhpZ2hlc3QgYWJzb2x1dGVseSBhbmQKCQkJCQl0aGF0IHdoaWNoIGlzIGJlc3QgdW5kZXIgYXNzdW1lZCBjb25kaXRpb25z77yJLCBhbmQgYWxzbyB0aGlyZGx5IHRoZSBmb3JtCgkJCQkJb2YgY29uc3RpdHV0aW9uIGJhc2VkIG9uIGEgY2VydGFpbiBzdXBwb3NpdGlvbiDvvIhmb3IgaGUgbXVzdCBiZSBhbHNvCgkJCQkJY2FwYWJsZSBvZiBjb25zaWRlcmluZyBib3RoIGhvdyBzb21lIGdpdmVuIGNvbnN0aXR1dGlvbiBjb3VsZCBiZSBicm91Z2h0IGludG8KCQkJCQlleGlzdGVuY2Ugb3JpZ2luYWxseSBhbmQgYWxzbyBpbiB3aGF0IHdheSBoYXZpbmcgYmVlbiBicm91Z2h0IGludG8gZXhpc3RlbmNlIGl0CgkJCQkJY291bGQgYmUgcHJlc2VydmVkIGZvciB0aGUgbG9uZ2VzdCB0aW1lOiBJIG1lYW4gZm9yIGV4YW1wbGUgaWYgaXQgaGFzIGJlZmFsbGVuCgkJCQkJc29tZSBzdGF0ZSBub3Qgb25seSBub3QgdG8gcG9zc2VzcyB0aGUgYmVzdCBjb25zdGl0dXRpb24gYW5kIHRvIGJlIHVucHJvdmlkZWQKCQkJCQlldmVuIHdpdGggdGhlIHRoaW5ncyBuZWNlc3NhcnkgZm9yIGl0LCBidXQgYWxzbyBub3QgdG8gaGF2ZSB0aGUgY29uc3RpdHV0aW9uCgkJCQkJdGhhdCBpcyBwcmFjdGljYWJsZSB1bmRlciB0aGUgY2lyY3Vtc3RhbmNlcyBidXQgYW4gaW5mZXJpb3Igb25l77yJOwoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBiZXNpZGUgYWxsIHRoZXNlIG1hdHRlcnMgaGUKCQkJCQltdXN0IGFzY2VydGFpbiB0aGUgZm9ybSBvZiBjb25zdGl0dXRpb24gbW9zdCBzdWl0ZWQgdG8gYWxsIHN0YXRlcywgc2luY2UgbW9zdCBvZgoJCQkJCXRob3NlIHdobyBtYWtlIHByb25vdW5jZW1lbnRzIGFib3V0IHRoZSBjb25zdGl0dXRpb24sIGV2ZW4gaWYgdGhlIHJlc3Qgb2Ygd2hhdAoJCQkJCXRoZXkgc2F5IGlzIGdvb2QsIGVudGlyZWx5IG1pc3MgdGhlIHBvaW50cyBvZiBwcmFjdGljYWwgdXRpbGl0eS4gRm9yIGl0IGlzCgkJCQkJcHJvcGVyIHRvIGNvbnNpZGVyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBmb3VyZm9sZAoJCQkJCQljbGFzc2lmaWNhdGlvbiBnaXZlbiBqdXN0IGJlZm9yZSBpcyByZXBlYXRlZCBpbiByYXRoZXIgbG9vc2UgdGVybXMgaW4gdGhpcwoJCQkJCQlzZW50ZW5jZS48L25vdGU+IG5vdCBvbmx5IHdoYXQgaXMgdGhlIGJlc3QgY29uc3RpdHV0aW9uIGJ1dCBhbHNvIHdoYXQgaXMgdGhlCgkJCQkJb25lIHBvc3NpYmxlIG9mIGFjaGlldmVtZW50LCBhbmQgbGlrZXdpc2UgYWxzbyB3aGF0IGlzIHRoZSBvbmUgdGhhdCBpcyBlYXNpZXIKCQkJCQlhbmQgbW9yZSBnZW5lcmFsbHkgc2hhcmVkIGJ5IGFsbCBzdGF0ZXMuIEJ1dCBhcyBpdCBpcywgc29tZSBzdHVkZW50cyBpbnF1aXJlCgkJCQkJd2hpY2ggaXMgdGhlIGhpZ2hlc3QgZm9ybSBvZiBhbGwgZXZlbiB0aG91Z2ggcmVxdWlyaW5nIG11Y2ggbWF0ZXJpYWwKCQkJCQkJZXF1aXBtZW50LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgd29yZCBvcmlnaW5hbGx5IGRlbm90ZWQKCQkJCQkJdGhlIGR1dHkgb2YgdGhlIHdlYWx0aHkgY2l0aXplbiBob2xkaW5nIG9mZmljZSBvZiBDaG9yZWd1cyB0byBzdXBwbHkKCQkJCQkJZHJlc3NlcywgZXRjLiwgZm9yIHRoZSBjaG9ydXMgYW5kIGFjdG9ycyBpbiBhIGRyYW1hLjwvbm90ZT4gd2hpbGUgdGhvc2Ugd2hvCgkJCQkJcmF0aGVyIHN0YXRlIHNvbWUgZ2VuZXJhbCBmb3JtIHN3ZWVwIGFzaWRlIHRoZSBjb25zdGl0dXRpb25zIGFjdHVhbGx5IGV4aXN0aW5nCgkJCQkJYW5kIHByYWlzZSB0aGF0IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiBvciBzb21lCgkJCQkJb3RoZXI7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjg5YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['4.1289a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['4.1289a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS40IiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IHRoZSBwcm9wZXIKCQkJCQljb3Vyc2UgaXMgdG8gYnJpbmcgZm9yd2FyZCBhbiBvcmdhbml6YXRpb24gb2Ygc3VjaCBhIHNvcnQgdGhhdCBtZW4gd2lsbCBlYXNpbHkKCQkJCQliZSBwZXJzdWFkZWQgYW5kIGJlIGFibGUgaW4gdGhlIGV4aXN0aW5nIGNpcmN1bXN0YW5jZXMgdG8gdGFrZSBwYXJ0IGluIGl0LCBzaW5jZQoJCQkJCXRvIHJlZm9ybSBhIGNvbnN0aXR1dGlvbiBpcyBubyBsZXNzIGEgdGFzayB0aGFuIHRvIGZyYW1lIG9uZSBmcm9tIHRoZSBiZWdpbm5pbmcsCgkJCQkJanVzdCBhcyB0byByZS1sZWFybiBhIHNjaWVuY2UgaXMganVzdCBhcyBoYXJkIGFzIHRvIGxlYXJuIGl0IG9yaWdpbmFsbHk7IGluCgkJCQkJYWRkaXRpb24gdGhlcmVmb3JlIHRvIHRoZSB0aGluZ3MgbWVudGlvbmVkIHRoZSBzdHVkZW50IG9mIHBvbGl0aWNzIG11c3QgYWxzbyBiZQoJCQkJCWFibGUgdG8gcmVuZGVyIGFpZCB0byB0aGUgY29uc3RpdHV0aW9ucyB0aGF0IGV4aXN0IGFscmVhZHksIGFzIHdhcyBhbHNvIHNhaWQKCQkJCQkJYmVmb3JlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Cb29rIDMuNS48L25vdGU+IEJ1dCB0aGlzIGlzCgkJCQkJaW1wb3NzaWJsZSBpZiBoZSBkb2VzIG5vdCBrbm93IGhvdyBtYW55IGtpbmRzIG9mIGNvbnN0aXR1dGlvbiB0aGVyZSBhcmU7IGJ1dCBhdAoJCQkJCXByZXNlbnQgc29tZSBwZW9wbGUgdGhpbmsgdGhhdCB0aGVyZSBpcyBvbmx5IG9uZSBraW5kIG9mIGRlbW9jcmFjeSBhbmQgb25lIGtpbmQKCQkJCQlvZiBvbGlnYXJjaHksIGJ1dCB0aGlzIGlzIG5vdCB0cnVlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlIGhlIG11c3QgdGFrZSBpbiB2aWV3IHRoZSBkaWZmZXJlbnQgdmFyaWV0aWVzIG9mIHRoZSBjb25zdGl0dXRpb25zLCBhbmQKCQkJCQlrbm93IGhvdyBtYW55IHRoZXJlIGFyZSBhbmQgaG93IG1hbnkgYXJlIHRoZWlyIGNvbWJpbmF0aW9ucy4gQW5kIGFmdGVyIHRoaXMgaXQKCQkJCQluZWVkcyB0aGlzIHNhbWUgZGlzY3JpbWluYXRpb24gYWxzbyB0byBkaXNjZXJuIHRoZSBsYXdzIHRoYXQgYXJlIHRoZSBiZXN0LCBhbmQKCQkJCQl0aG9zZSB0aGF0IGFyZSBzdWl0ZWQgdG8gZWFjaCBvZiB0aGUgZm9ybXMgb2YgY29uc3RpdHV0aW9uLiBGb3IgdGhlIGxhd3Mgc2hvdWxkCgkJCQkJYmUgbGFpZCBkb3duLCBhbmQgYWxsIHBlb3BsZSBsYXkgdGhlbSBkb3duLCB0byBzdWl0IHRoZQoJCQkJCWNvbnN0aXR1dGlvbnPigJR0aGUgY29uc3RpdHV0aW9ucyBtdXN0IG5vdCBiZSBtYWRlIHRvIHN1aXQgdGhlIGxhd3M7IGZvcgoJCQkJCWEgY29uc3RpdHV0aW9uIGlzIHRoZSByZWd1bGF0aW9uIG9mIHRoZSBvZmZpY2VzIG9mIHRoZSBzdGF0ZSBpbiByZWdhcmQgdG8gdGhlCgkJCQkJbW9kZSBvZiB0aGVpciBkaXN0cmlidXRpb24gYW5kIHRvIHRoZSBxdWVzdGlvbiB3aGF0IGlzIHRoZSBzb3ZlcmVpZ24gcG93ZXIgaW4KCQkJCQl0aGUgc3RhdGUgYW5kIHdoYXQgaXMgdGhlIG9iamVjdCBvZiBlYWNoIGNvbW11bml0eSwgYnV0IGxhd3MgYXJlIGRpc3RpbmN0IGZyb20KCQkJCQl0aGUgcHJpbmNpcGxlcyBvZiB0aGUgY29uc3RpdHV0aW9uLCBhbmQgcmVndWxhdGUgaG93IHRoZSBtYWdpc3RyYXRlcyBhcmUgdG8KCQkJCQlnb3Zlcm4gYW5kIHRvIGd1YXJkIGFnYWluc3QgdGhvc2U8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+d2hvCgkJCQkJdHJhbnNncmVzcyB0aGVtLiA8L3RyYW5zbGF0aW9uPg=="
translation['4.1289b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS42IiB1bml0PSJMb2ViIGNoYXAiIC8+U28gdGhhdCBjbGVhcmx5IGl0CgkJCQkJaXMgbmVjZXNzYXJ5IHRvIGJlIGluIHBvc3Nlc3Npb24gb2YgdGhlIGRpZmZlcmVudCB2YXJpZXRpZXMgb2YgZWFjaCBmb3JtIG9mCgkJCQkJY29uc3RpdHV0aW9uLCBhbmQgdGhlIG51bWJlciBvZiB0aGVzZSwgZXZlbiBmb3IgdGhlIHB1cnBvc2Ugb2YgbGVnaXNsYXRpb247IGZvcgoJCQkJCWl0IGlzIGltcG9zc2libGUgZm9yIHRoZSBzYW1lIGxhd3MgdG8gYmUgZXhwZWRpZW50IGZvciBhbGwgb2xpZ2FyY2hpZXMgb3IKCQkJCQlkZW1vY3JhY2llcyBpZiB0aGVyZSBhcmUgcmVhbGx5IHNldmVyYWwga2luZHMgb2YgdGhlbSwgYW5kIG5vdCBvbmUgc29ydCBvZgoJCQkJCWRlbW9jcmFjeSBvciBvbGlnYXJjaHkgb25seS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgaW5hc211Y2ggYXMgaW4gb3VyIGZpcnN0IGlucXVpcnk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Qm9vayAzLjUuPC9ub3RlPiBhYm91dCB0aGUgZm9ybXMgb2YgdGhlCgkJCQkJY29uc3RpdHV0aW9uIHdlIGNsYXNzaWZpZWQgdGhlIHJpZ2h0IGNvbnN0aXR1dGlvbnMgYXMgdGhyZWUsIGtpbmdzaGlwLAoJCQkJCWFyaXN0b2NyYWN5IGFuZCBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LCBhbmQgdGhlIGRldmlhdGlvbnMgZnJvbSB0aGVzZSBhcwoJCQkJCXRocmVlLCB0eXJhbm55IGZyb20ga2luZ3NoaXAsIG9saWdhcmNoeSBmcm9tIGFyaXN0b2NyYWN5IGFuZCBkZW1vY3JhY3kgZnJvbQoJCQkJCWNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQsIGFuZCBhYm91dCBhcmlzdG9jcmFjeSBhbmQga2luZ3NoaXAgd2UgaGF2ZSBzcG9rZW4KCQkJCQnvvIhmb3IgdG8gc3R1ZHkgdGhlIGJlc3QgY29uc3RpdHV0aW9uIGlzIHRoZSBzYW1lIHRoaW5nIGFzIHRvIHNwZWFrIGFib3V0CgkJCQkJdGhlIGZvcm1zIHRoYXQgYmVhciB0aG9zZSBuYW1lcywgc2luY2UgZWFjaCBvZiB0aGVtIG1lYW5zIGEgc3lzdGVtIGJhc2VkIG9uIHRoZQoJCQkJCXF1YWxpZmljYXRpb24gb2YgdmlydHVlIGVxdWlwcGVkIHdpdGggbWVhbnPvvIksIGFuZCBhcyBhbHNvIHRoZSBxdWVzdGlvbgoJCQkJCXdoYXQgY29uc3RpdHV0ZXMgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBhcmlzdG9jcmFjeSBhbmQga2luZ3NoaXAgYW5kIHdoZW4gYQoJCQkJCXJveWFsIGdvdmVybm1lbnQgaXMgdG8gYmUgYWRvcHRlZCBoYXMgYmVlbiBkZWNpZGVkIGJlZm9yZSwgaXQgcmVtYWlucyB0byBkaXNjdXNzCgkJCQkJdGhlIGZvcm0gb2YgY29uc3RpdHV0aW9uIGRlc2lnbmF0ZWQgYnkgdGhlIG5hbWU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM6/zrvOuc+EzrXhvbfOsTwvZm9yZWlnbj4sCgkJCQkJCeKAmHBvbGl0eSzigJkgd2hpY2ggZGVub3RlcyBub3Qgb25seSBhIGNvbnN0aXR1dGlvbiBvZiBhbnkKCQkJCQkJZm9ybSwgYnV0IGFsc28g77yIbGlrZSBvdXIgdGVybSDigJhjb25zdGl0dXRpb25hbAoJCQkJCQlnb3Zlcm5tZW504oCZ77yJIGEgcGFydGljdWxhciBmb3JtLCB2aXouLCBhIHJlcHVibGljLCBjZi4KCQkJCQkJQm9vayAzLjUuMi48L25vdGU+IGNvbW1vbiB0byB0aGVtIGFsbCwgYW5kIHRoZSBvdGhlciBmb3Jtcywgb2xpZ2FyY2h5LAoJCQkJCWRlbW9jcmFjeSBhbmQgdHlyYW5ueS4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DOv867zrnPhM614b23zrE8L2ZvcmVpZ24+LAoJCQkJCQnigJhwb2xpdHks4oCZIHdoaWNoIGRlbm90ZXMgbm90IG9ubHkgYSBjb25zdGl0dXRpb24gb2YgYW55CgkJCQkJCWZvcm0sIGJ1dCBhbHNvIO+8iGxpa2Ugb3VyIHRlcm0g4oCYY29uc3RpdHV0aW9uYWwKCQkJCQkJZ292ZXJubWVudOKAme+8iSBhIHBhcnRpY3VsYXIgZm9ybSwgdml6LiwgYSByZXB1YmxpYywgY2YuCgkJCQkJCUJvb2sgMy41LjIuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ob3cgaXQgaXMKCQkJCQltYW5pZmVzdCBhbHNvIHdoaWNoIG9mIHRoZXNlIGRldmlhdGlvbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlCgkJCQkJCXRocmVlIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiBsYXN0IG1lbnRpb25lZC48L25vdGU+IGlzIHRoZSB3b3JzdCBhbmQgd2hpY2gKCQkJCQl0aGUgc2Vjb25kIHdvcnN0LiBGb3IgbmVjZXNzYXJpbHkgdGhlIGRldmlhdGlvbiBmcm9tIHRoZSBmaXJzdCBhbmQgbW9zdCBkaXZpbmUKCQkJCQltdXN0IGJlIHRoZSB3b3JzdCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGVtcGggY2xhc3M9InRyYW5zbGF0aW9uIj5Db3JydXB0aW8gb3B0aW1pCgkJCQkJCQlwZXNzaW1hPC9lbXBoPiwgYSBTb2NyYXRpYyBub3Rpb246IOKAmHRoZSBtZW4gb2YgdGhlIGJlc3QKCQkJCQkJbmF0dXJhbCBnaWZ0cywgd2hlbiBlZHVjYXRlZCwgYXJlIHRoZSB3b3JzdCzigJkgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBNZW0uIDQuMS4zIiB2YWxpZD0ieWVzIj5YZW4uIE1lbS4gNC4xLjM8L2JpYmw+Ljwvbm90ZT4gYW5kIGtpbmdzaGlwIG11c3Qgb2YKCQkJCQluZWNlc3NpdHkgZWl0aGVyIHBvc3Nlc3MgdGhlIG5hbWUgb25seSwgd2l0aG91dCByZWFsbHkgYmVpbmcga2luZ3NoaXAsCgkJCQkJCTxlbXBoIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q29ycnVwdGlvIG9wdGltaQoJCQkJCQkJcGVzc2ltYTwvZW1waD4sIGEgU29jcmF0aWMgbm90aW9uOiDigJh0aGUgbWVuIG9mIHRoZSBiZXN0CgkJCQkJCW5hdHVyYWwgZ2lmdHMsIHdoZW4gZWR1Y2F0ZWQsIGFyZSB0aGUgd29yc3Qs4oCZIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gTWVtLiA0LjEuMyIgdmFsaWQ9InllcyI+WGVuLiBNZW0uIDQuMS4zPC9iaWJsPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI4OWIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['4.1289b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPm9yIGJlIGJhc2VkIG9uIHRoZSBvdXRzdGFuZGluZyBzdXBlcmlvcml0eSBvZiB0aGUgbWFuIHdobyBpcwoJCQkJCWtpbmc7IHNvIHRoYXQgdHlyYW5ueSBiZWluZyB0aGUgd29yc3QgZm9ybSBtdXN0IGJlIHRoZSBvbmUgZmFydGhlc3QgcmVtb3ZlZCBmcm9tCgkJCQkJY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCwgYW5kIG9saWdhcmNoeSBtdXN0IGJlIHRoZSBzZWNvbmQgZmFydGhlc3QKCQkJCQnvvIhmb3IgYXJpc3RvY3JhY3kgaXMgd2lkZWx5IHNlcGFyYXRlZCBmcm9tIHRoYXQgY29uc3RpdHV0aW9u77yJLAoJCQkJCXdoaWxlIGRlbW9jcmFjeSBtdXN0IGJlIHRoZSBtb3N0IG1vZGVyYXRlLiA8L3RyYW5zbGF0aW9uPg=="
translation['4.1289b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW4gYWNjb3VudCBvZiB0aGVpciByZWxhdGl2ZSBtZXJpdHMgaGFzIGluZGVlZCBhbHJlYWR5CgkJCQkJYmVlbiBnaXZlbiBhbHNvIGJ5IG9uZSBvZiB0aGUgZm9ybWVyIHdyaXRlcnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPgoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBTdGF0LiAzMDJhIiB2YWxpZD0ieWVzIj5QbGF0LiBTdGF0LiAzMDJhIGZmLjwvYmlibD4KCQkJCQk8L25vdGU+IHRob3VnaCBub3Qgb24gdGhlIHNhbWUgcHJpbmNpcGxlIGFzIG91cnM7IGZvciBoZSBpbmNsaW5lZCB0byBqdWRnZSB0aGF0CgkJCQkJdGhlcmUgd2VyZSBnb29kIHZhcmlldGllcyBvZiBhbGwgdGhlIGZvcm1zLCBmb3IgaW5zdGFuY2UgYSBnb29kIHNvcnQgb2YKCQkJCQlvbGlnYXJjaHkgYW5kIHNvIG9uLCBhbmQgdGhhdCBkZW1vY3JhY3kgd2FzIHRoZSB3b3JzdCBhbW9uZyB0aGVzZSwgYnV0IHRoZSBiZXN0CgkJCQkJYW1vbmcgdGhlIGJhZCB2YXJpZXRpZXMsIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFN0YXQuIDMwMmEiIHZhbGlkPSJ5ZXMiPlBsYXQuIFN0YXQuIDMwMmEgZmYuPC9iaWJsPgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+d2hlcmVhcyB3ZQoJCQkJCXNheSB0aGF0IHRoZSBkZXZpYXRpb25zIGFyZSB3aG9sbHkgd3JvbmcsIGFuZCB0aGF0IGl0IGlzIG5vdCByaWdodCB0byBzcGVhayBvZgoJCQkJCW9uZSBmb3JtIG9mIG9saWdhcmNoeSBhcyBiZXR0ZXIgdGhhbiBhbm90aGVyLCBidXQgb25seSBhcyBsZXNzIGJhZC4gQnV0IGxldCB1cwoJCQkJCWZvciB0aGUgcHJlc2VudCBkaXNtaXNzIHRoZSBxdWVzdGlvbiBvZiBhIGNsYXNzaWZpY2F0aW9uIG9mIHRoaXMgbmF0dXJlLiBPdXIKCQkJCQlidXNpbmVzcyBpcyBmaXJzdCB0byBkaXN0aW5ndWlzaCBob3cgbWFueSBkaWZmZXJlbnQgZm9ybXMgb2YgdGhlIGNvbnN0aXR1dGlvbnMKCQkJCQl0aGVyZSBhcmUsIGFzc3VtaW5nIHRoYXQgdGhlcmUgZG8gZXhpc3Qgc2V2ZXJhbCBraW5kcyBvZiBkZW1vY3JhY3kgYW5kIG9mCgkJCQkJb2xpZ2FyY2h5OyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPm5leHQsIHdoaWNoIGZvcm0gaXMgbW9zdAoJCQkJCWdlbmVyYWwsIGFuZCB3aGljaCBtb3N0IGRlc2lyYWJsZSBhZnRlciB0aGUgYmVzdCBjb25zdGl0dXRpb24sIGFuZCBhbHNvIGlmIHRoZXJlCgkJCQkJZXhpc3RzIHNvbWUgb3RoZXIgZm9ybSB0aGF0IGlzIGFyaXN0b2NyYXRpYyBpbiBuYXR1cmUgYW5kIHdlbGwgY29uc3RydWN0ZWQgYnV0CgkJCQkJbm90IGZpdHRlZCB0byB0aGUgbGFyZ2VzdCBudW1iZXIgb2YgY2l0aWVzLCB3aGljaCB0aGlzIGlzOyBuZXh0LCB3aGljaCBvZiB0aGUKCQkJCQlvdGhlciBmb3JtcyB0b28gaXMgZGVzaXJhYmxlIGZvciB3aGF0IHBlb3BsZSDvvIhzaW5jZSBwcm9iYWJseSBmb3Igc29tZQoJCQkJCWRlbW9jcmFjeSBpcyBuZWNlc3NhcnkgbW9yZSB0aGFuIG9saWdhcmNoeSwgYW5kIGZvciBvdGhlcnMgb2xpZ2FyY2h5IG1vcmUgdGhhbgoJCQkJCQlkZW1vY3JhY3nvvIk7PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZCBhZnRlcgoJCQkJCXRoaXMsIGluIHdoYXQgd2F5IHNob3VsZCBvbmUgcHJvY2VlZCB3aG8gd2lzaGVzIHRvIHNldCB1cCB0aGVzZSBjb25zdGl0dXRpb25zLCBJCgkJCQkJbWVhbiB0aGUgdmFyaW91cyBmb3JtcyBvZiBkZW1vY3JhY3kgYW5kIG9mIG9saWdhcmNoeTsgYW5kIGZpbmFsbHksIHdoZW4gYXMgZmFyCgkJCQkJYXMgcG9zc2libGUgd2UgaGF2ZSBjb25jaXNlbHkgdG91Y2hlZCB1cG9uIGFsbCB0aGVzZSBxdWVzdGlvbnMsIHdlIG11c3QgZW5kZWF2b3IKCQkJCQl0byByZXZpZXcgd2hhdCBhcmUgdGhlIGFnZW5jaWVzIHRoYXQgZGVzdHJveSBhbmQgd2hhdCBhcmUgdGhvc2UgdGhhdCBwcmVzZXJ2ZQoJCQkJCWNvbnN0aXR1dGlvbnMgZ2VuZXJhbGx5IGFuZCBlYWNoIHZhcmlldHkgb2YgY29uc3RpdHV0aW9uIGluIHBhcnRpY3VsYXIsIGFuZCB3aGF0CgkJCQkJYXJlIHRoZSBjYXVzZXMgYnkgd2hpY2ggaXQgaXMgbW9zdCBuYXR1cmFsIGZvciB0aGVzZSBldmVudHMgdG8gYmUgYnJvdWdodAoJCQkJCQlhYm91dC48L3RyYW5zbGF0aW9uPg=="
translation['4.1290a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyB0aGUgcmVhc29uIG9mIHRoZXJlIGJlaW5nIHNldmVyYWwgZm9ybXMgb2YgY29uc3RpdHV0aW9uIGlzCgkJCQkJdGhhdCBldmVyeSBjaXR5IGhhcyBhIGNvbnNpZGVyYWJsZSBudW1iZXIgb2YgcGFydHMuIEZvciBpbiB0aGUgZmlyc3QgcGxhY2Ugd2UKCQkJCQlzZWUgdGhhdCBhbGwgdGhlIGNpdGllcyBhcmUgY29tcG9zZWQgb2YgaG91c2Vob2xkcywgYW5kIHRoZW4gYWdhaW4gdGhhdCBvZiB0aGlzCgkJCQkJbXVsdGl0dWRlIHNvbWUgbXVzdCBuZWNlc3NhcmlseSBiZSByaWNoIGFuZCBzb21lIHBvb3IgYW5kIHNvbWUgYmV0d2VlbiB0aGUgdHdvLAoJCQkJCWFuZCBhbHNvIG9mIHRoZSByaWNoIGFuZCB0aGUgcG9vciB0aGUgZm9ybWVyIGNsYXNzIGlzIGhlYXZ5LWFybWVkIGFuZCB0aGUgbGF0dGVyCgkJCQkJd2l0aG91dCBhcm1vci4gQW5kIHdlIHNlZSB0aGF0IG9uZSBwb3J0aW9uIG9mIHRoZSBjb21tb24gcGVvcGxlIGlzIGFncmljdWx0dXJhbCwKCQkJCQlhbm90aGVyIGVuZ2FnZWQgaW4gdHJhZGUgYW5kIGFub3RoZXIgbWVjaGFuaWMuIEFuZCB0aGUgdXBwZXIgY2xhc3NlcyBoYXZlCgkJCQkJZGlzdGluY3Rpb25zIGFsc28gY29ycmVzcG9uZGluZyB0byB0aGVpciB3ZWFsdGggYW5kIHRoZSBhbW91bnRzIG9mIHRoZWlyCgkJCQkJcHJvcGVydHkg77yIZm9yIGV4YW1wbGUgaW4gYSBzdHVkIG9mIGhvcnNlc+KAlGZvciBpdCBpcyBub3QgZWFzeQoJCQkJCXRvIHJlYXIgaG9yc2VzIHdpdGhvdXQgYmVpbmcgcmljaCwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgdGhpcyBpcyB3aHkgaW4gYW5jaWVudCB0aW1lcyB0aGVyZSB3ZXJlIG9saWdhcmNoaWVzIGluIGFsbCB0aGUgc3RhdGVzCgkJCQkJd2hvc2Ugc3RyZW5ndGggbGF5IGluIHRoZWlyIGNhdmFscnksIGFuZCB0aGV5IHVzZWQgdG8gdXNlIGhvcnNlcyBmb3IgdGhlaXIgd2FycwoJCQkJCWFnYWluc3QgdGhlaXIgbmVpZ2hib3JzLCBhcyBmb3IgaW5zdGFuY2UgZGlkIHRoZSBFcmV0cmlhbnMgYW5kIENoYWxjaWRpYW5zIGFuZAoJCQkJCXRoZSBwZW9wbGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNYWduZXNpYSBhZCBNYWVhbmRydW0iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1hZ25lc2lhIGFkIE1hZWFuZHJ1bSI+TWFnbmVzaWE8L3BsYWNlTmFtZT4gb24gdGhlCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTIxNTYxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMjE1NjEiPk1hZWFuZGVyPC9wbGFjZU5hbWU+IGFuZCBtYW55IG9mIHRoZSBvdGhlcgoJCQkJCUFzaWF0aWMgcGVvcGxlc++8iS4gTW9yZW92ZXIgaW4gYWRkaXRpb24gdG8gZGlmZmVyZW5jZXMgaW4gd2VhbHRoIHRoZXJlCgkJCQkJaXMgdGhlIGRpZmZlcmVuY2Ugb2YgYmlydGgsIGFuZCB0aGF0IGluIHJlZ2FyZCB0byB2aXJ0dWUsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjkwYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['4.1290a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBpbmRlZWQgYW55CgkJCQkJb3RoZXIgc2ltaWxhciBkaXN0aW5jdGlvbiB0aGF0IGluIHRoZSBkaXNjdXNzaW9uIG9mIGFyaXN0b2NyYWN5IGhhcyBiZWVuIHN0YXRlZAoJCQkJCXRvIGNvbnN0aXR1dGUgYSBwYXJ0IG9mIHRoZSBzdGF0ZSDvvIhmb3IgdGhlcmUgd2UgZGlzdGluZ3Vpc2hlZCBob3cgbWFueQoJCQkJCW5lY2Vzc2FyeSBwYXJ0cyB0aGVyZSBhcmUgb2Ygd2hpY2ggZXZlcnkgc3RhdGUgbXVzdCBjb25zaXN077yJOyBmb3IKCQkJCQlzb21ldGltZXMgYWxsIG9mIHRoZXNlIHBhcnRzIHBhcnRpY2lwYXRlIGluIHRoZSBjb25zdGl0dXRpb24gYW5kIHNvbWV0aW1lcyBhCgkJCQkJc21hbGxlciBvciBhIGxhcmdlciBudW1iZXIgb2YgdGhlbS4gPC90cmFuc2xhdGlvbj4="
translation['4.1290a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgY2xlYXIgdGhlcmVmb3JlIHRoYXQgdGhlcmUgbXVzdCBuZWNlc3NhcmlseSBiZSBzZXZlcmFsIGZvcm1zIG9mCgkJCQkJY29uc3RpdHV0aW9uIGRpZmZlcmluZyBpbiBraW5kIGZyb20gb25lIGFub3RoZXIsIGluYXNtdWNoIGFzIHRoZXNlIHBhcnRzIGRpZmZlcgoJCQkJCWluIGtpbmQgYW1vbmcgdGhlbXNlbHZlcy4gRm9yIGEgY29uc3RpdHV0aW9uIG1lYW5zIHRoZSBhcnJhbmdlbWVudCBvZiB0aGUKCQkJCQltYWdpc3RyYWNpZXMsIGFuZCB0aGlzIGFsbCBwZW9wbGUgcGxhbiBvdXQgZWl0aGVyIGFjY29yZGluZyB0byB0aGUgcG93ZXIgb2YKCQkJCQl0aG9zZSB3aG8gc2hhcmUgcG9saXRpY2FsIHJpZ2h0cywgb3IgYWNjb3JkaW5nIHRvIHNvbWUgY29tbW9uIGVxdWFsaXR5IGJldHdlZW4KCQkJCQl0aGVtLCBJIG1lYW4gZm9yIGV4YW1wbGUgYmV0d2VlbiB0aGUgcG9vciBvciBiZXR3ZWVuIHRoZSByaWNoLCBvciBzb21lIGVxdWFsaXR5CgkJCQkJY29tbW9uIHRvIHRoZW0gYm90aC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBjbGF1c2UgbG9va3MgbGlrZQoJCQkJCQlhbiBpbnRlcnBvbGF0aW9uLjwvbm90ZT4gSXQgZm9sbG93cyB0aGVyZWZvcmUgdGhhdCB0aGVyZSBhcmUgYXMgbWFueSBmb3JtcwoJCQkJCW9mIGNvbnN0aXR1dGlvbiBhcyB0aGVyZSBhcmUgbW9kZXMgb2YgYXJyYW5nZW1lbnQgYWNjb3JkaW5nIHRvIHRoZSBzdXBlcmlvcml0aWVzCgkJCQkJYW5kIHRoZSBkaWZmZXJlbmNlcyBvZiB0aGUgc2VjdGlvbnMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy40IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZSBmb3JtcyBtb3N0bHkgYXJlIHRob3VnaHQgdG8gYmUgdHdv4oCUanVzdCBhcyBpbiB0aGUgY2FzZSBvZgoJCQkJCXRoZSB3aW5kcyB3ZSBzcGVhayBvZiBzb21lIGFzIG5vcnRoIGFuZCBzb21lIGFzIHNvdXRoIGFuZCByZWdhcmQgdGhlIHJlc3QgYXMKCQkJCQlkZXZpYXRpb25zIGZyb20gdGhlc2UsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkFyaXN0b3RsZSByZWZlcnMgdG8KCQkJCQkJdGhpcyB2aWV3IGluIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE1ldGUuIDM2NGEuMTkiPkFyaXN0b3QuIE1ldGVvci4gMzY0YQoJCQkJCQkJMTk8L2JpYmw+LCBzYXlpbmcgdGhhdCB3ZXN0IHdpbmRzIGFyZSBjbGFzc2VkIHdpdGggbm9ydGggYW5kIGVhc3Qgd2luZHMKCQkJCQkJd2l0aCBzb3V0aCwgYmVjYXVzZSB3aW5kIGZyb20gdGhlIHNldHRpbmcgc3VuIGlzIGNvb2xlciBhbmQgZnJvbSB0aGUgcmlzaW5nCgkJCQkJCXN1biB3YXJtZXIuIEhlIG5vdGVzIHRoYXQgbm9ydGggYW5kIHNvdXRoIHdpbmRzIGFyZSB0aGUgbW9zdCBmcmVxdWVudCwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTWV0ZS4gMzYxYS42Ij5BcmlzdG90LiBNZXRlb3IuIDM2MWEgNjwvYmlibD47IHRoaXMgbWF5IGhhdmUKCQkJCQkJc3VnZ2VzdGVkIHRoZSBpZGVhIHRoYXQgdGhleSB3ZXJlIHRoZSB0eXBpY2FsIHdpbmRzLjwvbm90ZT4gc28gYWxzbyBvZgoJCQkJCWNvbnN0aXR1dGlvbnMgdGhlcmUgYXJlIGhlbGQgdG8gYmUgdHdvIGZvcm1zLCBkZW1vY3JhY3kgYW5kIG9saWdhcmNoeTsgZm9yIG1lbgoJCQkJCXJlY2tvbiBhcmlzdG9jcmFjeSBhcyBhIGtpbmQgb2Ygb2xpZ2FyY2h5IGJlY2F1c2UgaXQgaXMgb2xpZ2FyY2h5IG9mIGEgc29ydCwgYW5kCgkJCQkJd2hhdCBpcyBjYWxsZWQgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCBhcyBkZW1vY3JhY3ksIGp1c3QgYXMgaW4gdGhlIGNhc2Ugb2YKCQkJCQl0aGUgd2luZHMgdGhleSByZWNrb24gdGhlIHdlc3Qgd2luZCBhcyBhIGtpbmQgb2Ygbm9ydGggd2luZCBhbmQgdGhlIGVhc3Qgd2luZCBhcwoJCQkJCWEga2luZCBvZiBzb3V0aCB3aW5kLjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE1ldGUuIDM2NGEuMTkiPkFyaXN0b3QuIE1ldGVvci4gMzY0YQoJCQkJCQkJMTk8L2JpYmw+LCBzYXlpbmcgdGhhdCB3ZXN0IHdpbmRzIGFyZSBjbGFzc2VkIHdpdGggbm9ydGggYW5kIGVhc3Qgd2luZHMKCQkJCQkJd2l0aCBzb3V0aCwgYmVjYXVzZSB3aW5kIGZyb20gdGhlIHNldHRpbmcgc3VuIGlzIGNvb2xlciBhbmQgZnJvbSB0aGUgcmlzaW5nCgkJCQkJCXN1biB3YXJtZXIuIEhlIG5vdGVzIHRoYXQgbm9ydGggYW5kIHNvdXRoIHdpbmRzIGFyZSB0aGUgbW9zdCBmcmVxdWVudCwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTWV0ZS4gMzYxYS42Ij5BcmlzdG90LiBNZXRlb3IuIDM2MWEgNjwvYmlibD47IHRoaXMgbWF5IGhhdmUKCQkJCQkJc3VnZ2VzdGVkIHRoZSBpZGVhIHRoYXQgdGhleSB3ZXJlIHRoZSB0eXBpY2FsIHdpbmRzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5BbmQgdGhlIGNhc2UgaXMKCQkJCQlzaW1pbGFyIHdpdGggbXVzaWNhbCBtb2RlcywgYXMgc29tZSBwZW9wbGUgc2F5OiBmb3IgdGhlcmUgdG9vIHRoZXkgcG9zaXQgdHdvCgkJCQkJa2luZHMsIHRoZSBEb3JpYW4gbW9kZSBhbmQgdGhlIFBocnlnaWFuLCBhbmQgY2FsbCB0aGUgb3RoZXIgc2NhbGVzIHNvbWUgb2YgdGhlbQoJCQkJCURvcmlhbiBhbmQgdGhlIG90aGVycyBQaHJ5Z2lhbi4gPC90cmFuc2xhdGlvbj4="
translation['4.1290b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy41IiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yCgkJCQkJdGhlIG1vc3QgcGFydCB0aGVyZWZvcmUgdGhleSBhcmUgYWNjdXN0b21lZCB0byB0aGluayBpbiB0aGlzIHdheSBhYm91dCB0aGUKCQkJCQljb25zdGl0dXRpb25zOyBidXQgaXQgaXMgdHJ1ZXIgYW5kIGJldHRlciB0byBjbGFzcyB0aGVtIGFzIHdlIGRpZCwgYW5kIGFzc3VtaW5nCgkJCQkJdGhhdCB0aGVyZSBhcmUgdHdvIHdlbGwtY29uc3RydWN0ZWQgZm9ybXMsIG9yIGVsc2Ugb25lLCB0byBzYXkgdGhhdCB0aGUgb3RoZXJzCgkJCQkJYXJlIGRldmlhdGlvbnMsIHNvbWUgZnJvbSB0aGUgd2VsbC1ibGVuZGVkIGNvbnN0aXR1dGlvbiBhbmQgdGhlIG90aGVycyBmcm9tIHRoZQoJCQkJCWJlc3Qgb25lLCB0aGUgbW9yZSB0ZW5zZSBhbmQgbWFzdGVyZnVsIGNvbnN0aXR1dGlvbnMgYmVpbmcgb2xpZ2FyY2hpYyBhbmQgdGhlCgkJCQkJcmVsYXhlZCBhbmQgc29mdCBvbmVzIGRlbW90aWMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGl0IGlzIG5vdCByaWdodCB0byBkZWZpbmUgZGVtb2NyYWN5LCBhcwoJCQkJCXNvbWUgcGVvcGxlIGFyZSBpbiB0aGUgY3VzdG9tIG9mIGRvaW5nIG5vdywgbWVyZWx5IGFzIHRoZSBjb25zdGl0dXRpb24gaW4gd2hpY2gKCQkJCQl0aGUgbXVsdGl0dWRlIGlzIHNvdmVyZWlnbiDvvIhmb3IgZXZlbiBpbiBvbGlnYXJjaGllcyBhbmQgZXZlcnl3aGVyZSB0aGUKCQkJCQltYWpvcml0eSBpcyBzb3ZlcmVpZ27vvIkgbm9yIG9saWdhcmNoeSBhcyB0aGUgY29uc3RpdHV0aW9uIGluIHdoaWNoIGEgZmV3CgkJCQkJYXJlIHNvdmVyZWlnbiBvdmVyIHRoZSBnb3Zlcm5tZW50LiBGb3IgaWYgdGhlIHdob2xlIG51bWJlciB3ZXJlIHRoaXJ0ZWVuCgkJCQkJaHVuZHJlZCwgYW5kIGEgdGhvdXNhbmQgb2YgdGhlc2Ugd2VyZSByaWNoIGFuZCBkaWQgbm90IGdpdmUgdGhlIHRocmVlIGh1bmRyZWQKCQkJCQlwb29yIGEgc2hhcmUgaW4gdGhlIGdvdmVybm1lbnQgYWx0aG91Z2ggdGhleSB3ZXJlIGZyZWUtYm9ybiBhbmQgbGlrZSB0aGVtc2VsdmVzCgkJCQkJaW4gYWxsIG90aGVyIHJlc3BlY3RzLCBubyBvbmUgd291bGQgc2F5IHRoYXQgdGhpcyBwZW9wbGUgd2FzIGdvdmVybmVkCgkJCQkJZGVtb2NyYXRpY2FsbHk7IGFuZCBzaW1pbGFybHkgYWxzbyBpZiB0aGVyZSB3ZXJlIGZldyBwb29yLCBidXQgdGhlc2UgbW9yZQoJCQkJCXBvd2VyZnVsIHRoYW4gdGhlIHJpY2ggd2hvIHdlcmUgbW9yZSBudW1lcm91cywgbm8gb25lIHdvdWxkIGNhbGwgc3VjaCBhCgkJCQkJZ292ZXJubWVudCBhIGRlbW9jcmFjeSBlaXRoZXIsIGlmIHRoZSBvdGhlciBjaXRpemVucyBiZWluZyByaWNoIGhhZCBubyBzaGFyZSBpbgoJCQkJCXRoZSBob25vcnMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy43IiB1bml0PSJMb2ViIGNoYXAiIC8+UmF0aGVyIHRoZXJlZm9yZSBvdWdodAoJCQkJCXdlIHRvIHNheSB0aGF0IGl0IGlzIGEgZGVtb2NyYWN5IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjkwYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['4.1290b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPndoZW4gdGhlIGZyZWUgYXJlIHNvdmVyZWlnbiBhbmQgYW4gb2xpZ2FyY2h5CgkJCQkJd2hlbiB0aGUgcmljaCBhcmUsIGJ1dCB0aGF0IGl0IGNvbWVzIGFib3V0IHRoYXQgdGhlIHNvdmVyZWlnbiBjbGFzcyBpbiBhCgkJCQkJZGVtb2NyYWN5IGlzIG51bWVyb3VzIGFuZCB0aGF0IGluIGFuIG9saWdhcmNoeSBzbWFsbCBiZWNhdXNlIHRoZXJlIGFyZSBtYW55IG1lbgoJCQkJCW9mIGZyZWUgYmlydGggYW5kIGZldyByaWNoLiBGb3Igb3RoZXJ3aXNlLCBzdXBwb3NlIHBlb3BsZSBhc3NpZ25lZCB0aGUgb2ZmaWNlcwoJCQkJCWJ5IGhlaWdodCwgYXMgc29tZSBwZXJzb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmUuZy4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGR0LiAzLjIwIiB2YWxpZD0ieWVzIj5IZHQuIDMuMjA8L2JpYmw+Ljwvbm90ZT4gc2F5IGlzIGRvbmUgaW4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGR0LiAzLjIwIiB2YWxpZD0ieWVzIj5IZHQuIDMuMjA8L2JpYmw+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAwNDg5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDA0ODkiPkV0aGlvcGlhPC9wbGFjZU5hbWU+LCBvciBieSBiZWF1dHksIHRoYXQgd291bGQgYmUgYW4KCQkJCQlvbGlnYXJjaHksIGJlY2F1c2UgYm90aCB0aGUgaGFuZHNvbWUgYW5kIHRoZSB0YWxsIGFyZSBmZXcgaW4gbnVtYmVyLiA8L3RyYW5zbGF0aW9uPg=="
translation['4.1290b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy44IiB1bml0PSJMb2ViIGNoYXAiIC8+TmV2ZXJ0aGVsZXNzIGl0IGlzIG5vdCBlbm91Z2ggdG8gZGVmaW5lCgkJCQkJdGhlc2UgY29uc3RpdHV0aW9ucyBldmVuIGJ5IHdlYWx0aCBhbmQgZnJlZSBiaXJ0aCBvbmx5OyBidXQgaW5hc211Y2ggYXMgdGhlcmUKCQkJCQlhcmUgbW9yZSBlbGVtZW50cyB0aGFuIG9uZSBib3RoIGluIGRlbW9jcmFjeSBhbmQgaW4gb2xpZ2FyY2h5LCB3ZSBtdXN0IGFkZCB0aGUKCQkJCQlmdXJ0aGVyIGRpc3RpbmN0aW9uIHRoYXQgbmVpdGhlciBpcyBpdCBhIGRlbW9jcmFjeSBpZiB0aGUgZnJlZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRob3NlIG9mIGNpdGl6ZW4gYmlydGguPC9ub3RlPiBiZWluZyBmZXcKCQkJCQlnb3Zlcm4gdGhlIG1ham9yaXR5IHdobyBhcmUgbm90IG9mIGZyZWUgYmlydGgsIGFzIGZvciBpbnN0YW5jZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEFwb2xsb25pYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXBvbGxvbmlhIj5BcG9sbG9uaWE8L3BsYWNlTmFtZT4gb24gdGhlIElvbmlhbiBHdWxmIGFuZCBhdAoJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVGhlcmEgQ2l0eSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGhlcmEgQ2l0eSI+VGhlcmE8L3BsYWNlTmFtZT4g77yIZm9yIGluIGVhY2ggb2YKCQkJCQl0aGVzZSBjaXRpZXMgdGhlIG9mZmljZXMgb2YgaG9ub3Igd2VyZSBmaWxsZWQgYnkgdGhlIHNwZWNpYWxseSBub2JsZSBmYW1pbGllcwoJCQkJCXdobyBoYWQgYmVlbiB0aGUgZmlyc3Qgc2V0dGxlcnMgb2YgdGhlIGNvbG9uaWVzLCBhbmQgdGhlc2Ugd2VyZSBmZXcgb3V0IG9mCgkJCQkJbWFuee+8iSwgbm9yIGlzIGl0IGEgZGVtb2NyYWN5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMKCQkJCQkJdGhlIEdyZWVrIHNob3VsZCBiZSBhbHRlcmVkIGhlcmUgdG8gZ2l2ZSDigJhhbgoJCQkJCQlvbGlnYXJjaHku4oCZPC9ub3RlPiBpZiB0aGUgcmljaCBydWxlIGJlY2F1c2UgdGhleSBhcmUgaW4gYQoJCQkJCW1ham9yaXR5LCBhcyBpbiBhbmNpZW50IHRpbWVzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ29sb3Bob24iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLENvbG9waG9uIj5Db2xvcGhvbjwvcGxhY2VOYW1lPiDvvIhmb3IgdGhlcmUgdGhlIG1ham9yaXR5IG9mIHRoZSBwb3B1bGF0aW9uCgkJCQkJb3duZWQgbGFyZ2UgcHJvcGVydHkgYmVmb3JlIHRoZSB3YXIgYWdhaW5zdCB0aGUgTHlkaWFucyB0b29rIHBsYWNl77yJLAoJCQkJCWJ1dCBpdCBpcyBhIGRlbW9jcmFjeSB3aGVuIHRob3NlIHdobyBhcmUgZnJlZSBhcmUgaW4gdGhlIG1ham9yaXR5IGFuZCBoYXZlCgkJCQkJc292ZXJlaWdudHkgb3ZlciB0aGUgZ292ZXJubWVudCwgYW5kIGFuIG9saWdhcmNoeSB3aGVuIHRoZSByaWNoIGFuZCBtb3JlIHdlbGwKCQkJCQkJYm9ybjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hcmUgZmV3IGFuZCBzb3ZlcmVpZ24uCgkJCQkJCTwvdHJhbnNsYXRpb24+"
translation['4.1291a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy45IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGhhcyB0aGVuIGJlZW4gc3RhdGVkIHRoYXQgdGhlcmUgYXJlIHNldmVyYWwgZm9ybXMgb2YgY29uc3RpdHV0aW9uLCBhbmQgd2hhdAoJCQkJCWlzIHRoZSBjYXVzZSBvZiB0aGlzOyBidXQgbGV0IHVzIHRha2UgdGhlIHN0YXJ0aW5nLXBvaW50IHRoYXQgd2FzIGxhaWQgZG93bgoJCQkJCQliZWZvcmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDMuMS48L25vdGU+IGFuZCBzYXkgdGhhdCB0aGVyZQoJCQkJCWFyZSBtb3JlIGZvcm1zIHRoYW4gdGhvc2UgbWVudGlvbmVkLCBhbmQgd2hhdCB0aGVzZSBmb3JtcyBhcmUsIGFuZCB3aHkgdGhleQoJCQkJCXZhcnkuIEZvciB3ZSBhZ3JlZSB0aGF0IGV2ZXJ5IHN0YXRlIHBvc3Nlc3NlcyBub3Qgb25lIHBhcnQgYnV0IHNldmVyYWwuCgkJCQkJVGhlcmVmb3JlIGp1c3QgYXMsIGluIGNhc2Ugd2UgaW50ZW5kZWQgdG8gb2J0YWluIGEgY2xhc3NpZmljYXRpb24gb2YgYW5pbWFscywgd2UKCQkJCQlzaG91bGQgZmlyc3QgZGVmaW5lIHRoZSBwcm9wZXJ0aWVzIG5lY2Vzc2FyaWx5IGJlbG9uZ2luZyB0byBldmVyeSBhbmltYWwKCQkJCQnvvIhmb3IgaW5zdGFuY2Ugc29tZSBvZiB0aGUgc2Vuc2Ugb3JnYW5zLCBhbmQgdGhlIG1hY2hpbmVyeSBmb3IKCQkJCQltYXN0aWNhdGluZyBhbmQgZm9yIHJlY2VpdmluZyBmb29kLCBzdWNoIGFzIGEgbW91dGggYW5kIGEgc3RvbWFjaCwgYW5kIGluCgkJCQkJYWRkaXRpb24gdG8gdGhlc2UgdGhlIGxvY29tb3RpdmUgb3JnYW5zIG9mIHRoZSB2YXJpb3VzIHNwZWNpZXPvvIksCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBpZiB0aGVyZSB3ZXJlIG9ubHkgc28gbWFueQoJCQkJCW5lY2Vzc2FyeSBwYXJ0cywgYnV0IHRoZXJlIHdlcmUgZGlmZmVyZW50IHZhcmlldGllcyBvZiB0aGVzZSDvvIhJIG1lYW4KCQkJCQlmb3IgaW5zdGFuY2UgY2VydGFpbiB2YXJpb3VzIGtpbmRzIG9mIG1vdXRoIGFuZCBzdG9tYWNoIGFuZCBzZW5zb3J5IG9yZ2FucywgYW5kCgkJCQkJYWxzbyBvZiB0aGUgbG9jb21vdGl2ZSBwYXJ0cyBhcyB3ZWxs77yJLCB0aGUgbnVtYmVyIG9mIHBvc3NpYmxlCgkJCQkJY29tYmluYXRpb25zIG9mIHRoZXNlIHZhcmlhdGlvbnMgd2lsbCBuZWNlc3NhcmlseSBwcm9kdWNlIGEgdmFyaWV0eSBvZiBraW5kcyBvZgoJCQkJCWFuaW1hbHMg77yIZm9yIGl0IGlzIG5vdCBwb3NzaWJsZSBmb3IgdGhlIHNhbWUgYW5pbWFsIHRvIGhhdmUgc2V2ZXJhbAoJCQkJCWRpZmZlcmVudCBzb3J0cyBvZiBtb3V0aCwgbm9yIHNpbWlsYXJseSBvZiBlYXJzIGVpdGhlcu+8iSwgc28gdGhhdCB3aGVuCgkJCQkJYWxsIHRoZSBwb3NzaWJsZSBjb21iaW5hdGlvbnMgb2YgdGhlc2UgYXJlIHRha2VuIHRoZXkgd2lsbCBhbGwgcHJvZHVjZSBhbmltYWwKCQkJCQlzcGVjaWVzLCBhbmQgdGhlcmUgd2lsbCBiZSBhcyBtYW55IHNwZWNpZXMgb2YgdGhlIGFuaW1hbCBhcyB0aGVyZSBhcmUKCQkJCQljb21iaW5hdGlvbnMgb2YgdGhlIG5lY2Vzc2FyeSBwYXJ0czrigJQ8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5zbyBpbiB0aGUgc2FtZSB3YXkgYWxzbyB3ZSBzaGFsbCBjbGFzc2lmeSB0aGUgdmFyaWV0aWVzIG9mCgkJCQkJdGhlIGNvbnN0aXR1dGlvbnMgdGhhdCBoYXZlIGJlZW4gbWVudGlvbmVkLiBGb3Igc3RhdGVzIGFsc28gYXJlIGNvbXBvc2VkIG5vdCBvZgoJCQkJCW9uZSBidXQgb2Ygc2V2ZXJhbCBwYXJ0cywgYXMgaGFzIGJlZW4gc2FpZCBvZnRlbi4gT25lIG9mIHRoZXNlIHBhcnRzIHRoZXJlZm9yZQoJCQkJCWlzIHRoZSBtYXNzIG9mIHBlcnNvbnMgY29uY2VybmVkIHdpdGggZm9vZCB3aG8gYXJlIGNhbGxlZCBmYXJtZXJzLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI5MWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['4.1291a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZAoJCQkJCXNlY29uZCBpcyB3aGF0IGlzIGNhbGxlZCB0aGUgbWVjaGFuaWMgY2xhc3Mg77yIYW5kIHRoaXMgaXMgdGhlIGdyb3VwCgkJCQkJZW5nYWdlZCBpbiB0aGUgYXJ0cyB3aXRob3V0IHdoaWNoIGl0IGlzIGltcG9zc2libGUgZm9yIGEgY2l0eSB0byBiZSBpbmhhYml0ZWQsCgkJCQkJYW5kIHNvbWUgb2YgdGhlc2UgYXJ0cyBhcmUgaW5kaXNwZW5zYWJseSBuZWNlc3NhcnksIHdoaWxlIG90aGVycyBjb250cmlidXRlIHRvCgkJCQkJbHV4dXJ5IG9yIG5vYmxlIGxpdmluZ++8iSwgYW5kIHRoaXJkIGlzIGEgY29tbWVyY2lhbCBjbGFzcyDvvIhieQoJCQkJCXdoaWNoIEkgbWVhbiB0aGUgY2xhc3MgdGhhdCBpcyBlbmdhZ2VkIGluIHNlbGxpbmcgYW5kIGJ1eWluZyBhbmQgaW4gd2hvbGVzYWxlCgkJCQkJYW5kIHJldGFpbCB0cmFkZe+8iSwgYW5kIGZvdXJ0aCBpcyB0aGUgY2xhc3Mgb2YgbWFudWFsIGxhYm9yZXJzLCBhbmQgdGhlCgkJCQkJZmlmdGggY2xhc3MgaXMgdGhlIG9uZSB0byBkZWZlbmQgdGhlIHN0YXRlIGluIHdhciwgd2hpY2ggaXMgbm8gbGVzcwoJCQkJCWluZGlzcGVuc2FibGUgdGhhbiB0aGUgb3RoZXJzIGlmIHRoZSBwZW9wbGUgYXJlIG5vdCB0byBiZWNvbWUgdGhlIHNsYXZlcyBvZgoJCQkJCXRob3NlIHdobyBjb21lIGFnYWluc3QgdGhlbTsgZm9yIHN1cmVseSBpdCBpcyBxdWl0ZSBvdXQgb2YgdGhlIHF1ZXN0aW9uIHRoYXQgaXQKCQkJCQlzaG91bGQgYmUgcHJvcGVyIHRvIGdpdmUgdGhlIG5hbWUgb2Ygc3RhdGUgdG8gYSBjb21tdW5pdHkgdGhhdCBpcyBieSBuYXR1cmUgYQoJCQkJCXNsYXZlLCBmb3IgYSBzdGF0ZSBpcyBzZWxmLXN1ZmZpY2llbnQsIGJ1dCB0aGF0IHdoaWNoIGlzIGEgc2xhdmUgaXMgbm90CgkJCQkJc2VsZi1zdWZmaWNpZW50LiA8L3RyYW5zbGF0aW9uPg=="
translation['4.1291a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXJlZm9yZSB0aGUKCQkJCQlzdGF0ZW1lbnQgbWFkZSBpbiB0aGUgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UmVwdWJsaWM8L3RpdGxlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gUmVwLiAzNjliIiB2YWxpZD0ieWVzIj5QbGF0LiBSZXAuIDM2OWItMzcxZTwvYmlibD4KCQkJCQk8L25vdGU+IGlzIHdpdHR5IGJ1dCBub3QgYWRlcXVhdGUuIEZvciBTb2NyYXRlcyBzYXlzIHRoYXQgdGhlIG1vc3QgbmVjZXNzYXJ5CgkJCQkJZWxlbWVudHMgb2Ygd2hpY2ggYSBzdGF0ZSBpcyBjb21wb3NlZCBhcmUgZm91ciwgYW5kIGhlIHNwZWNpZmllcyB0aGVzZSBhcyBhCgkJCQkJd2VhdmVyLCBhIGZhcm1lciwgYSBzaG9lbWFrZXIgYW5kIGEgYnVpbGRlcjsgYW5kIHRoZW4gYWdhaW4gaGUgYWRkcywgb24gdGhlCgkJCQkJZ3JvdW5kIHRoYXQgdGhlc2UgYXJlIG5vdCBzZWxmLXN1ZmZpY2llbnQsIGEgY29wcGVyLXNtaXRoIGFuZCB0aGUgcGVvcGxlIHRvIGxvb2sKCQkJCQlhZnRlciB0aGUgbmVjZXNzYXJ5IGxpdmUtc3RvY2ssIGFuZCBpbiBhZGRpdGlvbiBhIG1lcmNoYW50IGFuZCBhIHJldGFpbCB0cmFkZXIuCgkJCQkJVGhlc2UgZWxlbWVudHMgdG9nZXRoZXIgY29uc3RpdHV0ZSB0aGUgZnVsbCBjb21wbGVtZW50IG9mIGhpcyBmaXJzdCBjaXR5LDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFJlcC4gMzY5YiIgdmFsaWQ9InllcyI+UGxhdC4gUmVwLiAzNjliLTM3MWU8L2JpYmw+CgkJCQkJPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIGZpcnN0IHNrZXRjaCBvZiB0aGUgQ2l0eS1zdGF0ZSwgbG9jLgoJCQkJCQljaXQuPC9ub3RlPiBpbXBseWluZyB0aGF0IGV2ZXJ5IGNpdHkgaXMgZm9ybWVkIGZvciB0aGUgc2FrZSBvZiB0aGUKCQkJCQluZWNlc3NhcmllcyBvZiBsaWZlIGFuZCBub3QgcmF0aGVyIGZvciB0aGUgc2FrZSBvZiB3aGF0IGlzIG5vYmxlLCBhbmQgdGhhdCBpdAoJCQkJCWhhcyBlcXVhbCBuZWVkIG9mIGJvdGggc2hvZW1ha2VycyBhbmQgZmFybWVyczsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IHRoZSB3YXJyaW9yIGNsYXNzPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmhlIGRvZXMgbm90IGFzc2lnbiB0byBpdCB1bnRpbCBhcyB0aGUgdGVycml0b3J5IGlzIGluY3JlYXNlZAoJCQkJCWFuZCBjb21lcyBpbnRvIGNvbnRhY3Qgd2l0aCB0aGF0IG9mIHRoZSBuZWlnaGJvcnMgdGhleSBhcmUgYnJvdWdodCBpbnRvIHdhci4gQnV0CgkJCQkJeWV0IGV2ZW4gYW1vbmcgdGhlIGZvdXIgcGFydG5lcnMgb3Igd2hhdGV2ZXIgdGhlaXIgbnVtYmVyIGJlIHRoZXJlIG11c3QKCQkJCQluZWNlc3NhcmlseSBiZSBzb21lYm9keSB0byBhc3NpZ24ganVzdGljZSBhbmQgdG8ganVkZ2UgdGhlaXIgY2xhaW1zOyBpbmFzbXVjaAoJCQkJCXRoZXJlZm9yZSBhcyBvbmUgd291bGQgY291bnQgdGhlIHNvdWwgb2YgYW4gYW5pbWFsIHRvIGJlIG1vcmUgYSBwYXJ0IG9mIGl0IHRoYW4KCQkJCQl0aGUgYm9keSwgc28gYWxzbyB0aGUgZmFjdG9ycyBpbiBzdGF0ZXMgY29ycmVzcG9uZGluZyB0byB0aGUgc291bCBtdXN0IGJlIGRlZW1lZAoJCQkJCXRvIGJlIHBhcnRzIG9mIHRoZW0gbW9yZSB0aGFuIHRob3NlIGZhY3RvcnMgd2hpY2ggY29udHJpYnV0ZSB0byBuZWNlc3NhcnkKCQkJCQl1dGlsaXR5LOKAlHRoZSBmb3JtZXIgYmVpbmcgdGhlIG1pbGl0YXJ5IGNsYXNzIGFuZCB0aGUgY2xhc3MgdGhhdCBwbGF5cwoJCQkJCWEgcGFydCBpbiBqdWRpY2lhbCBqdXN0aWNlLCBhbmQgaW4gYWRkaXRpb24gdG8gdGhlc2UgdGhlIGRlbGliZXJhdGl2ZSBjbGFzcywKCQkJCQlkZWxpYmVyYXRpb24gYmVpbmcgYSBmdW5jdGlvbiBvZiBwb2xpdGljYWwgaW50ZWxsaWdlbmNlLiBBbmQgaXQgbWFrZXMgbm8KCQkJCQlkaWZmZXJlbmNlIHRvIHRoZSBhcmd1bWVudCB3aGV0aGVyIHRoZXNlIGZ1bmN0aW9ucyBhcmUgaGVsZCBieSBzcGVjaWFsIGNsYXNzZXMKCQkJCQlzZXBhcmF0ZWx5IG9yIGJ5IHRoZSBzYW1lIHBlcnNvbnM7IDwvdHJhbnNsYXRpb24+"
translation['4.1291b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPmZvciBpdCBvZnRlbiBoYXBwZW5zIGZvciB0aGUgc2FtZSBtZW4gdG8gYmUgYm90aCBzb2xkaWVycyBhbmQgZmFybWVycy4gSGVuY2UKCQkJCQlpbmFzbXVjaCBhcyBib3RoIGdyb3Vwczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgZmlyc3QgZm91cgoJCQkJCQljbGFzc2VzIGFuZCB0aGUgZmlmdGggYW5kIHNpeHRoIO+8iHRoZSBtaWxpdGFyeSBhbmQKCQkJCQkJanVkaWNpYWzvvIkuPC9ub3RlPiBvZiBjbGFzc2VzIG11c3QgYmUgY291bnRlZCBwYXJ0cyBvZiB0aGUgc3RhdGUsIGl0CgkJCQkJaXMgY2xlYXIgdGhhdCB0aGUgaGVhdnktYXJtZWQgc29sZGllcnkgYXQgYW55IHJhdGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+TG93ZXIgZ3JhZGVzIG9mIHRoZSBmb3JjZXMgbWF5IGJlIGV4Y2x1ZGVkIGZyb20gY2l0aXplbnNoaXAsCgkJCQkJCWUuZy4gdGhlIHJvd2VycyBvZiB0aGUgdHJpcmVtZXMg77yIc2VlIGJlbG93LCAxMzc2YgoJCQkJCQkxNe+8iS48L25vdGU+IG11c3QgYmUgYSBwYXJ0IG9mIHRoZSBzdGF0ZS4gQW5kIGEgc2V2ZW50aCBjbGFzcyBpcyB0aGUKCQkJCQlvbmUgdGhhdCBzZXJ2ZXMgdGhlIGNvbW11bml0eSBieSBtZWFucyBvZiBpdHMgcHJvcGVydHksIHRoZSBjbGFzcyB0aGF0IHdlIGNhbGwKCQkJCQl0aGUgcmljaC4gQW5kIGFuIGVpZ2h0aCBpcyB0aGUgY2xhc3Mgb2YgcHVibGljIHNlcnZhbnRzLCB0aGF0IGlzLCB0aG9zZSB3aG8KCQkJCQlzZXJ2ZSBpbiB0aGUgbWFnaXN0cmFjaWVzLCBpbmFzbXVjaCBhcyB3aXRob3V0IHJ1bGVycyBpdCBpcyBpbXBvc3NpYmxlIGZvciBhCgkJCQkJY2l0eSB0byBleGlzdDsgaXQgaXMgdGhlcmVmb3JlIG5lY2Vzc2FyeSB0aGF0IHRoZXJlIHNob3VsZCBiZSBzb21lIG1lbiB3aG8gYXJlCgkJCQkJYWJsZSB0byBnb3Zlcm4gYW5kIHdobyByZW5kZXIgdGhpcyBzZXJ2aWNlIHRvIHRoZSBzdGF0ZSBlaXRoZXIgY29udGludW91c2x5IG9yCgkJCQkJaW4gdHVybi4gQW5kIHRoZXJlIHJlbWFpbiB0aGUgY2xhc3NlcyB3aGljaCB3ZSBoYXBwZW4gdG8gaGF2ZSBkZWZpbmVkIGp1c3QKCQkJCQliZWZvcmUsIHRoZSBkZWxpYmVyYXRpdmUgY2xhc3MgYW5kIHRoZSBvbmUgdGhhdCBqdWRnZXMgdGhlIGNsYWltcyBvZiBsaXRpZ2FudHMuCgkJCQkJSWYgdGhlcmVmb3JlIGl0IGlzIHByb3BlciBmb3IgdGhlIHN0YXRlcyB0byBoYXZlIHRoZXNlIGZ1bmN0aW9ucyBwZXJmb3JtZWQsIGFuZAoJCQkJCXdlbGwgYW5kIGp1c3RseSBwZXJmb3JtZWQsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjkxYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['4.1291b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPml0IGlzIG5lY2Vzc2FyeSBmb3IgdGhlcmUgYWxzbyB0byBiZSBzb21lIG1lbgoJCQkJCXBvc3Nlc3NpbmcgdmlydHVlIGluIHRoZSBmb3JtIG9mIHBvbGl0aWNhbCBleGNlbGxlbmNlLiA8L3RyYW5zbGF0aW9uPg=="
translation['4.1291b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPk5vdyBhcyB0byB0aGUgb3RoZXIgY2FwYWNpdGllcyBtYW55IHBlb3BsZSB0aGluawoJCQkJCXRoYXQgaXQgaXMgcG9zc2libGUgZm9yIHRoZW0gdG8gYmUgcG9zc2Vzc2VkIGluIGNvbWJpbmF0aW9uLCBmb3IgZXhhbXBsZSwgZm9yCgkJCQkJdGhlIHNhbWUgbWVuIHRvIGJlIHRoZSBzb2xkaWVycyB0aGF0IGRlZmVuZCB0aGUgc3RhdGUgaW4gd2FyIGFuZCB0aGUgZmFybWVycwoJCQkJCXRoYXQgdGlsbCB0aGUgbGFuZCBhbmQgdGhlIGFydGlzYW5zLCBhbmQgYWxzbyB0aGUgY291bmNpbGxvcnMgYW5kIGp1ZGdlcywgYW5kCgkJCQkJaW5kZWVkIGFsbCBtZW4gY2xhaW0gdG8gcG9zc2VzcyB2aXJ0dWUgYW5kIHRoaW5rIHRoZW1zZWx2ZXMgY2FwYWJsZSBvZiBmaWxsaW5nCgkJCQkJbW9zdCBvZiB0aGUgb2ZmaWNlcyBvZiBzdGF0ZTsgYnV0IGl0IGlzIG5vdCBwb3NzaWJsZSBmb3IgdGhlIHNhbWUgbWVuIHRvIGJlIHBvb3IKCQkJCQlhbmQgcmljaC4gSGVuY2UgdGhlc2Ugc2VlbSB0byBiZSBpbiB0aGUgZnVsbGVzdCBzZW5zZSB0aGUgcGFydHMgb2YgdGhlIHN0YXRlLAoJCQkJCXRoZSByaWNoIGFuZCB0aGUgcG9vci4gQW5kIGFsc28gdGhlIGZhY3QgdGhhdCB0aGUgcmljaCBhcmUgdXN1YWxseSBmZXcgYW5kIHRoZQoJCQkJCXBvb3IgbWFueSBtYWtlcyB0aGVzZSB0d28gYW1vbmcgdGhlIHBhcnRzIG9mIHRoZSBzdGF0ZSBhcHBlYXIgYXMgb3Bwb3NpdGUKCQkJCQlzZWN0aW9uczsgc28gdGhhdCB0aGUgc3VwZXJpb3IgY2xhaW1zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLgoJCQkJCQkzLjExLCAxMiBmaW4uPC9ub3RlPiBvZiB0aGVzZSBjbGFzc2VzIGFyZSBldmVuIG1hZGUgdGhlIGd1aWRpbmcgcHJpbmNpcGxlcwoJCQkJCXVwb24gd2hpY2ggY29uc3RpdHV0aW9ucyBhcmUgY29uc3RydWN0ZWQsIGFuZCBpdCBpcyB0aG91Z2h0IHRoYXQgdGhlcmUgYXJlIHR3bwoJCQkJCWZvcm1zIG9mIGNvbnN0aXR1dGlvbiwgZGVtb2NyYWN5IGFuZCBvbGlnYXJjaHkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhhdCB0aGVyZSBhcmUgdGhlbiBzZXZlcmFsCgkJCQkJZm9ybXMgb2YgY29uc3RpdHV0aW9uLCBhbmQgd2hhdCBhcmUgdGhlIHJlYXNvbnMgZm9yIHRoaXMsIGhhcyBiZWVuIHN0YXRlZAoJCQkJCWJlZm9yZTsgbGV0IHVzIG5vdyBzYXkgdGhhdCB0aGVyZSBhcmUgc2V2ZXJhbCB2YXJpZXRpZXMgYm90aCBvZiBkZW1vY3JhY3kgYW5kIG9mCgkJCQkJb2xpZ2FyY2h5LiBBbmQgdGhpcyBpcyBjbGVhciBldmVuIGZyb20gd2hhdCBoYXMgYmVlbiBzYWlkIGFscmVhZHkuIEZvciB0aGVyZSBhcmUKCQkJCQlzZXZlcmFsIGNsYXNzZXMgYm90aCBvZiB0aGUgcGVvcGxlIGFuZCBvZiB0aG9zZSBjYWxsZWQgdGhlIG5vdGFibGVzOyBmb3IKCQkJCQlpbnN0YW5jZSBjbGFzc2VzIG9mIHRoZSBwZW9wbGUgYXJlLCBvbmUgdGhlIGZhcm1lcnMsIGFub3RoZXIgdGhlIGNsYXNzIGRlYWxpbmcKCQkJCQl3aXRoIHRoZSBhcnRzIGFuZCBjcmFmdHMsIGFub3RoZXIgdGhlIGNvbW1lcmNpYWwgY2xhc3M8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+b2NjdXBpZWQgaW4gYnV5aW5nIGFuZCBzZWxsaW5nIGFuZCBhbm90aGVyIHRoZSBvbmUKCQkJCQlvY2N1cGllZCB3aXRoIHRoZSBzZWHigJRhbmQgdGhpcyBpcyBkaXZpZGVkIGludG8gdGhlIGNsYXNzZXMgY29uY2VybmVkCgkJCQkJd2l0aCBuYXZhbCB3YXJmYXJlLCB3aXRoIHRyYWRlLCB3aXRoIGZlcnJ5aW5nIHBhc3NlbmdlcnMgYW5kIHdpdGggZmlzaGluZwoJCQkJCe+8iGZvciBlYWNoIG9mIHRoZXNlIGNsYXNzZXMgaXMgZXh0cmVtZWx5IG51bWVyb3VzIGluIHZhcmlvdXMgcGxhY2VzLCBmb3IKCQkJCQlpbnN0YW5jZSBmaXNoZXJtZW4gYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDQxMDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwNDEwMCI+VGFyZW50dW08L3BsYWNlTmFtZT4gYW5kCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQnl6YW50aXVtIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxCeXphbnRpdW0iPkJ5emFudGl1bTwvcGxhY2VOYW1lPiwgbmF2eSBtZW4gYXQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB0aGUgbWVyY2FudGlsZSBjbGFzcyBhdAoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTA4NyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMDg3Ij5BZWdpbmE8L3BsYWNlTmFtZT4gYW5kIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjcwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzAiPkNoaW9zPC9wbGFjZU5hbWU+LCBhbmQgdGhlIGZlcnJ5bWFuLWNsYXNzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVGVuZWRvcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGVuZWRvcyI+VGVuZWRvczwvcGxhY2VOYW1lPu+8iSwgYW5kIGluIGFkZGl0aW9uIHRvCgkJCQkJdGhlc2UgdGhlIGhhbmQtd29ya2luZyBjbGFzcyBhbmQgdGhlIHBlb3BsZSBwb3NzZXNzaW5nIGxpdHRsZSBzdWJzdGFuY2Ugc28gdGhhdAoJCQkJCXRoZXkgY2Fubm90IGxpdmUgYSBsaWZlIG9mIGxlaXN1cmUsIGFsc28gdGhvc2UgdGhhdCBhcmUgbm90IGZyZWUgbWVuIG9mIGNpdGl6ZW4KCQkJCQlwYXJlbnRhZ2Ugb24gYm90aCBzaWRlcywgYW5kIGFueSBvdGhlciBzaW1pbGFyIGNsYXNzIG9mIGNvbW1vbiBwZW9wbGU7IHdoaWxlCgkJCQkJYW1vbmcgdGhlIG5vdGFibGVzIHdlYWx0aCwgYmlydGgsIHZpcnR1ZSwgZWR1Y2F0aW9uLCBhbmQgdGhlIGRpc3RpbmN0aW9ucyB0aGF0CgkJCQkJYXJlIHNwb2tlbiBvZiBpbiB0aGUgc2FtZSBncm91cCBhcyB0aGVzZSwgZm9ybSB0aGUgY2xhc3Nlcy48L3RyYW5zbGF0aW9uPg=="
translation['4.1292a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBmaXJzdCBraW5kIG9mCgkJCQkJZGVtb2NyYWN5IHRoZXJlZm9yZSBpcyB0aGUgb25lIHdoaWNoIHJlY2VpdmVzIHRoZSBuYW1lIGNoaWVmbHkgaW4gcmVzcGVjdCBvZgoJCQkJCWVxdWFsaXR5LiBGb3IgdGhlIGxhdyBvZiB0aGlzIHNvcnQgb2YgZGVtb2NyYWN5IGFzY3JpYmVzIGVxdWFsaXR5IHRvIHRoZSBzdGF0ZQoJCQkJCW9mIHRoaW5ncyBpbiB3aGljaCB0aGUgcG9vciBoYXZlIG5vIG1vcmUgcHJvbWluZW5jZSB0aGFuIHRoZSByaWNoLCBhbmQgbmVpdGhlcgoJCQkJCWNsYXNzIGlzIHNvdmVyZWlnbiwgYnV0IGJvdGggYXJlIGFsaWtlOyBmb3IgYXNzdW1pbmcgdGhhdCBmcmVlZG9tIGlzIGNoaWVmbHkKCQkJCQlmb3VuZCBpbiBhIGRlbW9jcmFjeSwgYXMgc29tZSBwZXJzb25zIHN1cHBvc2UsIGFuZCBhbHNvIGVxdWFsaXR5LCB0aGlzIHdvdWxkIGJlCgkJCQkJc28gbW9zdCBmdWxseSB3aGVuIHRvIHRoZSBmdWxsZXN0IGV4dGVudCBhbGwgYWxpa2Ugc2hhcmUgZXF1YWxseSBpbiB0aGUKCQkJCQlnb3Zlcm5tZW50LiBBbmQgc2luY2UgdGhlIHBlb3BsZSBhcmUgaW4gdGhlIG1ham9yaXR5LCBhbmQgYSByZXNvbHV0aW9uIHBhc3NlZCBieQoJCQkJCWEgbWFqb3JpdHkgaXMgcGFyYW1vdW50LCB0aGlzIG11c3QgbmVjZXNzYXJpbHkgYmUgYSBkZW1vY3JhY3kuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhpcyB0aGVyZWZvcmUgaXMgb25lIGtpbmQgb2YgZGVtb2NyYWN5LAoJCQkJCXdoZXJlIHRoZSBvZmZpY2VzIGFyZSBoZWxkIG9uIHByb3BlcnR5IHF1YWxpZmljYXRpb25zLCBidXQgdGhlc2UgbG93IG9uZXMsCgkJCQkJYWx0aG91Z2ggaXQgaXMgZXNzZW50aWFsIHRoYXQgdGhlIG1hbiB3aG8gYWNxdWlyZXMgdGhlIHNwZWNpZmllZCBhbW91bnQgc2hvdWxkCgkJCQkJaGF2ZSB0aGUgcmlnaHQgdG8gaG9sZCBvZmZpY2UsIGFuZCB0aGUgbWFuIHdobyBsb3NlcyBpdCBzaG91bGQgbm90IGhvbGQgb2ZmaWNlLgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI5MmEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['4.1292a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkFuZCBhbm90aGVyIGtpbmQgb2YgZGVtb2NyYWN5IGlzIGZvciBhbGwgdGhlIGNpdGl6ZW5zIHRoYXQgYXJlCgkJCQkJbm90IG9wZW4gdG8gY2hhbGxlbmdlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gb24gdGhlIHNjb3JlIG9mCgkJCQkJCWJpcnRoLCBjZi4gNS40Ljwvbm90ZT4gdG8gaGF2ZSBhIHNoYXJlIGluIG9mZmljZSwgYnV0IGZvciB0aGUgbGF3IHRvIHJ1bGU7CgkJCQkJYW5kIGFub3RoZXIga2luZCBvZiBkZW1vY3JhY3kgaXMgZm9yIGFsbCB0byBzaGFyZSBpbiB0aGUgb2ZmaWNlcyBvbiB0aGUgbWVyZQoJCQkJCXF1YWxpZmljYXRpb24gb2YgYmVpbmcgYSBjaXRpemVuLCBidXQgZm9yIHRoZSBsYXcgdG8gcnVsZS4gQW5vdGhlciBraW5kIG9mCgkJCQkJZGVtb2NyYWN5IGlzIHdoZXJlIGFsbCB0aGUgb3RoZXIgcmVndWxhdGlvbnMgYXJlIHRoZSBzYW1lLCBidXQgdGhlIG11bHRpdHVkZSBpcwoJCQkJCXNvdmVyZWlnbiBhbmQgbm90IHRoZSBsYXc7IDwvdHJhbnNsYXRpb24+"
translation['4.1292a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC40IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHRoaXMKCQkJCQljb21lcyBhYm91dCB3aGVuIHRoZSBkZWNyZWVzIG9mIHRoZSBhc3NlbWJseSBvdmVyLXJpZGUgdGhlIGxhdy4gVGhpcyBzdGF0ZSBvZgoJCQkJCXRoaW5ncyBpcyBicm91Z2h0IGFib3V0IGJ5IHRoZSBkZW1hZ29ndWVzOyBmb3IgaW4gdGhlIHN0YXRlcyB1bmRlciBkZW1vY3JhdGljCgkJCQkJZ292ZXJubWVudCBndWlkZWQgYnkgbGF3IGEgZGVtYWdvZ3VlIGRvZXMgbm90IGFyaXNlLCBidXQgdGhlIGJlc3QgY2xhc3NlcyBvZgoJCQkJCWNpdGl6ZW5zIGFyZSBpbiB0aGUgbW9zdCBwcm9taW5lbnQgcG9zaXRpb247IGJ1dCB3aGVyZSB0aGUgbGF3cyBhcmUgbm90CgkJCQkJc292ZXJlaWduLCB0aGVuIGRlbWFnb2d1ZXMgYXJpc2U7IGZvciB0aGUgY29tbW9uIHBlb3BsZSBiZWNvbWUgYSBzaW5nbGUKCQkJCQljb21wb3NpdGUgbW9uYXJjaCwgc2luY2UgdGhlIG1hbnkgYXJlIHNvdmVyZWlnbiBub3QgYXMgaW5kaXZpZHVhbHMgYnV0CgkJCQkJY29sbGVjdGl2ZWx5LiBZZXQgd2hhdCBraW5kIG9mIGRlbW9jcmFjeSBIb21lcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gMi4yMDQiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDIuMjA0PC9iaWJsPgoJCQkJCTwvbm90ZT4gbWVhbnMgYnkgdGhlIHdvcmRzIOKAmG5vIGJsZXNzaW5nIGlzIHRoZSBsb3Jkc2hpcCBvZiB0aGUKCQkJCQltYW554oCZ4oCUd2hldGhlciBoZSBtZWFucyB0aGlzIGtpbmQgb3Igd2hlbiB0aG9zZSB3aG8gcnVsZSBhcwoJCQkJCWluZGl2aWR1YWxzIGFyZSBtb3JlIG51bWVyb3VzLCBpcyBub3QgY2xlYXIuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDIuMjA0IiB2YWxpZD0ieWVzIj5Ib20uIElsLiAyLjIwNDwvYmlibD4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkhvd2V2ZXIsIGEgcGVvcGxlIG9mIHRoaXMgc29ydCwgYXMgYmVpbmcgbW9uYXJjaCwgc2Vla3MgdG8KCQkJCQlleGVyY2lzZSBtb25hcmNoaWMgcnVsZSB0aHJvdWdoIG5vdCBiZWluZyBydWxlZCBieSB0aGUgbGF3LCBhbmQgYmVjb21lcwoJCQkJCWRlc3BvdGljLCBzbyB0aGF0IGZsYXR0ZXJlcnMgYXJlIGhlbGQgaW4gaG9ub3IuIEFuZCBhIGRlbW9jcmFjeSBvZiB0aGlzIG5hdHVyZQoJCQkJCWlzIGNvbXBhcmFibGUgdG8gdGhlIHR5cmFubmljYWwgZm9ybSBvZiBtb25hcmNoeSwgYmVjYXVzZSB0aGVpciBzcGlyaXQgaXMgdGhlCgkJCQkJc2FtZSwgYW5kIGJvdGggZXhlcmNpc2UgZGVzcG90aWMgY29udHJvbCBvdmVyIHRoZSBiZXR0ZXIgY2xhc3NlcywgYW5kIHRoZQoJCQkJCWRlY3JlZXMgdm90ZWQgYnkgdGhlIGFzc2VtYmx5PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFyZSBsaWtlCgkJCQkJdGhlIGNvbW1hbmRzIGlzc3VlZCBpbiBhIHR5cmFubnksIGFuZCB0aGUgZGVtYWdvZ3VlcyBhbmQgdGhlIGZsYXR0ZXJlcnMgYXJlIHRoZQoJCQkJCXNhbWUgcGVvcGxlIG9yIGEgY29ycmVzcG9uZGluZyBjbGFzcywgYW5kIGVpdGhlciBzZXQgaGFzIHRoZSB2ZXJ5IHN0cm9uZ2VzdAoJCQkJCWluZmx1ZW5jZSB3aXRoIHRoZSByZXNwZWN0aXZlIHJ1bGluZyBwb3dlciwgdGhlIGZsYXR0ZXJlcnMgd2l0aCB0aGUgdHlyYW50cyBhbmQKCQkJCQl0aGUgZGVtYWdvZ3VlcyB3aXRoIGRlbW9jcmFjaWVzIG9mIHRoaXMga2luZC4gPC90cmFuc2xhdGlvbj4="
translation['4.1292b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC42IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZXNlIG1lbiBjYXVzZSB0aGUgcmVzb2x1dGlvbnMgb2YgdGhlIGFzc2VtYmx5IHRvIGJlCgkJCQkJc3VwcmVtZSBhbmQgbm90IHRoZSBsYXdzLCBieSByZWZlcnJpbmcgYWxsIHRoaW5ncyB0byB0aGUgcGVvcGxlOyBmb3IgdGhleSBvd2UKCQkJCQl0aGVpciByaXNlIHRvIGdyZWF0bmVzcyB0byB0aGUgZmFjdCB0aGF0IHRoZSBwZW9wbGUgaXMgc292ZXJlaWduIG92ZXIgYWxsIHRoaW5ncwoJCQkJCXdoaWxlIHRoZXkgYXJlIHNvdmVyZWlnbiBvdmVyIHRoZSBvcGluaW9uIG9mIHRoZSBwZW9wbGUsIGZvciB0aGUgbXVsdGl0dWRlCgkJCQkJYmVsaWV2ZXMgdGhlbS4gTW9yZW92ZXIgdGhvc2Ugd2hvIGJyaW5nIGNoYXJnZXMgYWdhaW5zdCB0aGUgbWFnaXN0cmF0ZXMgc2F5IHRoYXQKCQkJCQl0aGUgcGVvcGxlIG91Z2h0IHRvIGp1ZGdlIHRoZSBzdWl0cywgYW5kIHRoZSBwZW9wbGUgcmVjZWl2ZSB0aGUgaW52aXRhdGlvbgoJCQkJCWdsYWRseSwgc28gdGhhdCBhbGwgdGhlIG1hZ2lzdHJhY2llcyBhcmUgcHV0IGRvd24uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC43IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGl0IHdvdWxkIHNlZW0gdG8gYmUgYSByZWFzb25hYmxlIGNyaXRpY2lzbSB0byBzYXkgdGhhdAoJCQkJCXN1Y2ggYSBkZW1vY3JhY3kgaXMgbm90IGEgY29uc3RpdHV0aW9uIGF0IGFsbDsgZm9yIHdoZXJlIHRoZSBsYXdzIGRvIG5vdCBnb3Zlcm4KCQkJCQl0aGVyZSBpcyBubyBjb25zdGl0dXRpb24sIGFzIHRoZSBsYXcgb3VnaHQgdG8gZ292ZXJuIGFsbCB0aGluZ3Mgd2hpbGUgdGhlCgkJCQkJbWFnaXN0cmF0ZXMgY29udHJvbCBwYXJ0aWN1bGFycywgYW5kIHdlIG91Z2h0IHRvIGp1ZGdlIHRoaXMgdG8gYmUgY29uc3RpdHV0aW9uYWwKCQkJCQlnb3Zlcm5tZW50OyBpZiB0aGVuIGRlbW9jcmFjeSByZWFsbHkgaXMgb25lIG9mIHRoZSBmb3JtcyBvZiBjb25zdGl0dXRpb24sIGl0IGlzCgkJCQkJbWFuaWZlc3QgdGhhdCBhbiBvcmdhbml6YXRpb24gb2YgdGhpcyBraW5kLCBpbiB3aGljaCBhbGwgdGhpbmdzIGFyZSBhZG1pbmlzdGVyZWQKCQkJCQlieSByZXNvbHV0aW9ucyBvZiB0aGUgYXNzZW1ibHksIGlzIG5vdCBldmVuIGEgZGVtb2NyYWN5IGluIHRoZSBwcm9wZXIgc2Vuc2UsIGZvcgoJCQkJCWl0IGlzIGltcG9zc2libGUgZm9yIGEgdm90ZWQgcmVzb2x1dGlvbiB0byBiZSBhIHVuaXZlcnNhbCBydWxlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZXQgdGhpcyBiZSBvdXIgZGlzY3Vzc2lvbiBvZiB0aGUgZGlmZmVyZW50IGtpbmRzIG9mCgkJCQkJCWRlbW9jcmFjeS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PZiB0aGUga2luZHMgb2Ygb2xpZ2FyY2h5LCBvbmUgaXMgZm9yIHRoZSBtYWdpc3RyYWNpZXMgdG8gYmUKCQkJCQlhcHBvaW50ZWQgZnJvbSBwcm9wZXJ0eS1hc3Nlc3NtZW50cyBzbyBoaWdoIHRoYXQgdGhlIHBvb3Igd2hvIGFyZSB0aGUgbWFqb3JpdHkKCQkJCQloYXZlIG5vIHNoYXJlIGluIHRoZSBnb3Zlcm5tZW50LCBidXQgZm9yIHRoZSBtYW4gd2hvIGFjcXVpcmVzIHRoZSByZXF1aXNpdGUKCQkJCQlhbW91bnQgb2YgcHJvcGVydHkgdG8gYmUgYWxsb3dlZCB0byB0YWtlIHBhcnQgaW4gaXQ7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjkyYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['4.1292b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFub3RoZXIgaXMgd2hlbgoJCQkJCXRoZSBtYWdpc3RyYWNpZXMgYXJlIGZpbGxlZCBmcm9tIGhpZ2ggYXNzZXNzbWVudHMgYW5kIHRoZSBtYWdpc3RyYXRlcyB0aGVtc2VsdmVzCgkJCQkJZWxlY3QgdG8gZmlsbCB2YWNhbmNpZXMg77yIc28gdGhhdCBpZiB0aGV5IGRvIHNvIGZyb20gYWxsIHRoZSBjaXRpemVucyBvZgoJCQkJCXRoaXMgYXNzZXNzbWVudCwgdGhpcyBhcHBlYXJzIHJhdGhlciB0byBiZSBvZiB0aGUgbmF0dXJlIG9mIGFuIGFyaXN0b2NyYWN5LCBidXQKCQkJCQlpZiBmcm9tIGEgcGFydGljdWxhciBzZWN0aW9uIG9mIHRoZW0sIGl0IGlzIG9saWdhcmNoaWNhbO+8iTsgYW5vdGhlcgoJCQkJCXZhcmlldHkgb2Ygb2xpZ2FyY2h5IGlzIHdoZW4gc29uIHN1Y2NlZWRzIGZhdGhlciBpbiBvZmZpY2U7IGFuZCBhIGZvdXJ0aCBraW5kIGlzCgkJCQkJd2hlbiB0aGUgaGVyZWRpdGFyeSBzeXN0ZW0ganVzdCBtZW50aW9uZWQgZXhpc3RzIGFuZCBhbHNvIHRoZSBtYWdpc3RyYXRlcyBnb3Zlcm4KCQkJCQlhbmQgbm90IHRoZSBsYXcuIFRoaXMgYW1vbmcgb2xpZ2FyY2hpZXMgaXMgdGhlIGZvcm0gY29ycmVzcG9uZGluZyB0byB0eXJhbm55CgkJCQkJYW1vbmcgbW9uYXJjaGllcyBhbmQgdG8gdGhlIGZvcm0gb2YgZGVtb2NyYWN5IGFib3V0IHdoaWNoIHdlIHNwb2tlIGxhc3QgYW1vbmcKCQkJCQlkZW1vY3JhY2llcywgYW5kIGluZGVlZCBvbGlnYXJjaHkgb2YgdGhpcyBzb3J0IGhhcyB0aGUgc3BlY2lhbCBuYW1lIG9mCgkJCQkJCWR5bmFzdHkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkdvdmVybm1lbnQgY29udHJvbGxlZCBieSBhIGZldwoJCQkJCQlwb3dlcmZ1bCBmYW1pbGllcy4gQ2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlRodWMuIDMuNjIuNCIgdmFsaWQ9InllcyI+VGh1Yy4gMy42Mi40PC9iaWJsPiwgd2hlcmUgdGhlCgkJCQkJCVRoZWJhbnMgc2F5LCDigJhJbiB0aG9zZSBkYXlzIG91ciBzdGF0ZSB3YXMgbm90IGdvdmVybmVkIGJ5IGFuCgkJCQkJCW9saWdhcmNoeSB0aGF0IGdyYW50ZWQgZXF1YWwganVzdGljZSB0byBhbGwsIG5vciB5ZXQgYnkgYSBkZW1vY3JhY3k7IHRoZQoJCQkJCQlwb3dlciB3YXMgaW4gdGhlIGhhbmRzIG9mIGEgc21hbGwgY2FiYWwg77yIIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs60z4XOvc6xz4PPhM614b23zrEg4b2AzrvhvbfOs8+Jzr0g4byAzr3OtM+B4b+2zr08L2ZvcmVpZ24+77yJLCB0aGFuIHdoaWNoIG5vdGhpbmcgaXMKCQkJCQkJbW9yZSBvcHBvc2VkIHRvIGxhdyBvciB0byB0cnVlIHBvbGl0aWNhbCBvcmRlciwgb3IgbW9yZSBuZWFybHkgcmVzZW1ibGVzIGEKCQkJCQkJdHlyYW5ueeKAmSDvvIhKb3dldHTvvIkuPC9ub3RlPgoJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlRodWMuIDMuNjIuNCIgdmFsaWQ9InllcyI+VGh1Yy4gMy42Mi40PC9iaWJsPiwgd2hlcmUgdGhlCgkJCQkJCVRoZWJhbnMgc2F5LCDigJhJbiB0aG9zZSBkYXlzIG91ciBzdGF0ZSB3YXMgbm90IGdvdmVybmVkIGJ5IGFuCgkJCQkJCW9saWdhcmNoeSB0aGF0IGdyYW50ZWQgZXF1YWwganVzdGljZSB0byBhbGwsIG5vciB5ZXQgYnkgYSBkZW1vY3JhY3k7IHRoZQoJCQkJCQlwb3dlciB3YXMgaW4gdGhlIGhhbmRzIG9mIGEgc21hbGwgY2FiYWwg77yIIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs60z4XOvc6xz4PPhM614b23zrEg4b2AzrvhvbfOs8+Jzr0g4byAzr3OtM+B4b+2zr08L2ZvcmVpZ24+77yJLCB0aGFuIHdoaWNoIG5vdGhpbmcgaXMKCQkJCQkJbW9yZSBvcHBvc2VkIHRvIGxhdyBvciB0byB0cnVlIHBvbGl0aWNhbCBvcmRlciwgb3IgbW9yZSBuZWFybHkgcmVzZW1ibGVzIGEKCQkJCQkJdHlyYW5ueeKAmSDvvIhKb3dldHTvvIkuPC90cmFuc2xhdGlvbj4="
translation['4.1292b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlNvCgkJCQkJbWFueSB0aGVyZWZvcmUgYXJlIHRoZSBraW5kcyBvZiBvbGlnYXJjaHkgYW5kIG9mIGRlbW9jcmFjeTsgYnV0IGl0IG11c3Qgbm90CgkJCQkJZXNjYXBlIG5vdGljZSB0aGF0IGluIG1hbnkgcGxhY2VzIGl0IGhhcyBjb21lIGFib3V0IHRoYXQgYWx0aG91Z2ggdGhlCgkJCQkJY29uc3RpdHV0aW9uIGFzIGZyYW1lZCBieSB0aGUgbGF3cyBpcyBub3QgZGVtb2NyYXRpYywgeWV0IG93aW5nIHRvIGN1c3RvbSBhbmQKCQkJCQl0aGUgc29jaWFsIHN5c3RlbSBpdCBpcyBkZW1vY3JhdGljYWxseSBhZG1pbmlzdGVyZWQsIGFuZCBzaW1pbGFybHkgYnkgYSByZXZlcnNlCgkJCQkJcHJvY2VzcyBpbiBvdGhlciBzdGF0ZXMgYWx0aG91Z2ggdGhlIGxlZ2FsIGNvbnN0aXR1dGlvbiBpcyBtb3JlIGRlbW9jcmF0aWMsIHlldAoJCQkJCWJ5IG1lYW5zIG9mIHRoZSBzb2NpYWwgc3lzdGVtIGFuZCBjdXN0b21zIGl0IGlzIGNhcnJpZWQgb24gcmF0aGVyIGFzIGFuCgkJCQkJb2xpZ2FyY2h5LiBUaGlzIG9jY3VycyBjaGllZmx5IGFmdGVyIGFsdGVyYXRpb25zIG9mIHRoZSBjb25zdGl0dXRpb25zIGhhdmUgdGFrZW4KCQkJCQlwbGFjZTsgZm9yIHRoZSBwZW9wbGUgZG8gbm90IGNoYW5nZSBvdmVyIHRvIHRoZSBuZXcgc3lzdGVtIGltbWVkaWF0ZWx5IGJ1dCBhcmUKCQkJCQljb250ZW50IGF0IHRoZSBmaXJzdCBzdGFnZXMgdG8gZ2FpbiBzbWFsbCBhZHZhbnRhZ2VzIGZyb20gdGhlIG90aGVyCgkJCQkJCXBhcnR5LDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5zbyB0aGF0IHRoZSBwcmV2aW91c2x5CgkJCQkJZXhpc3RpbmcgbGF3cyBjb250aW51ZSBhbHRob3VnaCBwb3dlciBpcyBpbiB0aGUgaGFuZHMgb2YgdGhlIHBhcnR5IHRoYXQgaXMKCQkJCQljaGFuZ2luZyB0aGUgY29uc3RpdHV0aW9uLjwvdHJhbnNsYXRpb24+"
translation['4.1293a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCB0aGF0IHRoZXNlIHZhcmlvdXMga2luZHMgb2YgZGVtb2NyYWN5IGFuZCBvbGlnYXJjaHkKCQkJCQlleGlzdCBpcyBtYW5pZmVzdCBmcm9tIHRoZSBhY3R1YWwgdGhpbmdzIHRoYXQgaGF2ZSBiZWVuIHNhaWQuIEZvciBuZWNlc3NhcmlseQoJCQkJCWVpdGhlciBhbGwgdGhlIHBhcnRzIG9mIHRoZSBwb3B1bGF0aW9uIHRoYXQgaGF2ZSBiZWVuIG1lbnRpb25lZCBtdXN0IGhhdmUgYQoJCQkJCXNoYXJlIGluIHRoZSBnb3Zlcm5tZW50LCBvciBzb21lIGFuZCBub3Qgb3RoZXJzLiBXaGVuIHRoZXJlZm9yZSB0aGUgZmFybWVyIGNsYXNzCgkJCQkJYW5kIHRoZSBjbGFzcyBwb3NzZXNzZWQgb2YgbW9kZXJhdGUgcHJvcGVydHkgaXMgc292ZXJlaWduIG92ZXIgdGhlIGdvdmVybm1lbnQsCgkJCQkJdGhleSBnb3Zlcm4gYWNjb3JkaW5nIHRvIGxhd3M7IGZvciB0aGV5IGhhdmUgYSBsaXZlbGlob29kIGlmIHRoZXkgd29yaywgYnV0IGFyZQoJCQkJCW5vdCBhYmxlIHRvIGJlIGF0IGxlaXN1cmUsIHNvIHRoYXQgdGhleSBwdXQgdGhlIGxhdyBpbiBjb250cm9sIGFuZCBob2xkIHRoZQoJCQkJCW1pbmltdW0gb2YgYXNzZW1ibGllcyBuZWNlc3Nhcnk7IGFuZCB0aGUgb3RoZXIgcGVyc29ucyBoYXZlIHRoZSByaWdodCB0byB0YWtlCgkJCQkJcGFydCB3aGVuIHRoZXkgaGF2ZSBhY3F1aXJlZCB0aGUgcHJvcGVydHktYXNzZXNzbWVudCBmaXhlZCBieSB0aGUgbGF3cywgc28gdGhhdAoJCQkJCXRvIHRha2UgcGFydCBpbiB0aGUgZ292ZXJubWVudCBpcyBvcGVuIHRvIGFsbCB3aG8gaGF2ZSBnb3QgdGhhdCBhbW91bnQgb2YKCQkJCQlwcm9wZXJ0eTsgc2luY2UgZm9yIGl0IG5vdCB0byBiZSBvcGVuIHRvIGV2ZXJ5Ym9keSBvbiBhbnkgdGVybXMgYXQgYWxsIGlzIGEKCQkJCQljaGFyYWN0ZXJpc3RpYyBvZiBvbGlnYXJjaHksIGJ1dCB0aGVuIG9uIHRoZSBvdGhlciBoYW5kIGl0IGlzIGltcG9zc2libGUgZm9yIGl0CgkJCQkJdG8gYmUgb3BlbiB0byB0aGVtIHRvIGhhdmUgbGVpc3VyZSBpZiB0aGVyZSBhcmUgbm8gcmV2ZW51ZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gcmV2ZW51ZXMgZnJvbSBhYnJvYWQ7IHRoZSBwb29yIGNhbiBvbmx5IGF0dGVuZCBvZnRlbiBpZgoJCQkJCQlwYWlkIGZvciBhdHRlbmRhbmNlLCBhbmQgdGhpcyBjYW4gb25seSBiZSBmaW5hbmNlZCBpZiB0aGUgc3RhdGUgaGFzIGluY29tZQoJCQkJCQlmcm9tIHRyaWJ1dGUgb3IgZm9yZWlnbiBwcm9wZXJ0eS48L25vdGU+IFRoaXMgdGhlbiBpcyBvbmUga2luZCBvZiBkZW1vY3JhY3kKCQkJCQlmb3IgdGhlc2UgcmVhc29ucy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Bbm90aGVyIGtpbmQgaXMKCQkJCQlkdWUgdG8gdGhlIGRpc3RpbmN0aW9uIHRoYXQgY29tZXMgbmV4dDogaXQgaXMgcG9zc2libGUgdGhhdCBhbGwgdGhlIGNpdGl6ZW5zIG5vdAoJCQkJCWxpYWJsZSB0byBvYmplY3Rpb24gb24gdGhlIHNjb3JlIG9mIGJpcnRoIG1heSBoYXZlIHRoZSByaWdodCB0byB0YWtlIHBhcnQgaW4gdGhlCgkJCQkJYXNzZW1ibHksIGJ1dCBtYXkgYWN0dWFsbHkgdGFrZSBwYXJ0IG9ubHkgd2hlbiB0aGV5IGFyZSBhYmxlIHRvIGJlIGF0IGxlaXN1cmU7CgkJCQkJaGVuY2UgaW4gYSBkZW1vY3JhY3kgb2YgdGhpcyBuYXR1cmUgdGhlIGxhd3MgZ292ZXJuIGJlY2F1c2UgdGhlcmUgaXMgbm8gcmV2ZW51ZS4KCQkJCQlBIHRoaXJkIGtpbmQgaXMgd2hlbiBhbGwgdGhvc2Ugd2hvIGFyZSBmcmVlIG1lbiBoYXZlIHRoZSByaWdodCB0byB0YWtlIHBhcnQgaW4KCQkJCQl0aGUgZ292ZXJubWVudCB5ZXQgZG8gbm90IGRvIHNvIGJlY2F1c2Ugb2YgdGhlIGFmb3Jlc2FpZCByZWFzb24sIHNvIHRoYXQgaXQKCQkJCQlmb2xsb3dzIHRoYXQgaW4gdGhpcyBmb3JtIG9mIGRlbW9jcmFjeSBhbHNvIHRoZSBsYXcgZ292ZXJucy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyOTNhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['4.1293a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['4.1293a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS41IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGEgZm91cnRoIGtpbmQgb2YgZGVtb2NyYWN5CgkJCQkJaXMgdGhlIG9uZSB0aGF0IGhhcyBiZWVuIHRoZSBsYXN0IGluIHBvaW50IG9mIHRpbWUgdG8gY29tZSBpbnRvIGV4aXN0ZW5jZSBpbiB0aGUKCQkJCQlzdGF0ZXMuIEJlY2F1c2UgdGhlIHN0YXRlcyBoYXZlIGJlY29tZSBtdWNoIGdyZWF0ZXIgdGhhbiB0aGUgb3JpZ2luYWwgb25lcyBhbmQKCQkJCQlwb3NzZXNzIGxhcmdlIHN1cHBsaWVzIG9mIHJldmVudWUsIHdoaWxlIGFsbCB0aGUgY2l0aXplbnMgaGF2ZSBhIHNoYXJlIGluIHRoZQoJCQkJCWdvdmVybm1lbnQgYmVjYXVzZSBvZiB0aGUgc3VwZXJpb3JpdHk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Q2YuCgkJCQkJCTEyODhhIDIwIGZmLjwvbm90ZT4gb2YgdGhlIG11bHRpdHVkZSwgYWxsIGFjdHVhbGx5IHRha2UgcGFydCBpbiBpdCBhbmQKCQkJCQlleGVyY2lzZSB0aGVpciBjaXRpemVuc2hpcCBiZWNhdXNlIGV2ZW4gdGhlIHBvb3IgYXJlIGVuYWJsZWQgdG8gYmUgYXQgbGVpc3VyZSBieQoJCQkJCXJlY2VpdmluZyBwYXkuIEluZGVlZCB0aGUgbXVsdGl0dWRlIGluIHRoaXMga2luZCBvZiBzdGF0ZSBoYXMgYSB2ZXJ5IGdyZWF0IGRlYWwKCQkJCQlvZiBsZWlzdXJlLCBmb3IgdGhleSBhcmUgbm90IGhhbXBlcmVkIGF0IGFsbCBieSB0aGUgY2FyZSBvZiB0aGVpciBwcml2YXRlCgkJCQkJYWZmYWlycywgYnV0IHRoZSByaWNoIGFyZSwgc28gdGhhdCBvZnRlbiB0aGV5IHRha2Ugbm8gcGFydCBpbiB0aGUgYXNzZW1ibHkgbm9yCgkJCQkJaW4ganVkZ2luZyBsYXdzdWl0cy4gT3dpbmcgdG8gdGhpcyB0aGUgbXVsdGl0dWRlIG9mIHRoZSBwb29yIGJlY29tZXMgc292ZXJlaWduCgkJCQkJb3ZlciB0aGUgZ292ZXJubWVudCwgaW5zdGVhZCBvZiB0aGUgbGF3cy4gU3VjaCBpbiBudW1iZXIgYW5kIGluIG5hdHVyZSBhcmUgdGhlCgkJCQkJa2luZHMgb2YgZGVtb2NyYWN5IHRoYXQgdGhlc2UgY2F1c2VzIG5lY2Vzc2FyaWx5IGJyaW5nIGludG8gZXhpc3RlbmNlLgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRvIHR1cm4gdG8gdGhlIHZhcmlldGllcyBhbmQgb2YKCQkJCQlvbGlnYXJjaHksIHdoZW4gbW9yZSBtZW4gcG9zc2VzcyBwcm9wZXJ0eSwgYnV0IGxlc3Mgb2YgaXQgYW5kIG5vdCBhIHZlcnkgbGFyZ2UKCQkJCQlhbW91bnQsIHRoaXMgaXMgdGhlIGZpcnN0IGZvcm0gb2Ygb2xpZ2FyY2h5OyBmb3IgdGhleSBhbGxvdyB0aGUgbWFuIHRoYXQKCQkJCQlhY3F1aXJlcyBwcm9wZXJ0eSB0aGUgcmlnaHQgdG8gcGFydGljaXBhdGUsIGFuZCBiZWNhdXNlIHRoZXJlIGlzIGEgbGFyZ2UgbnVtYmVyCgkJCQkJb2YgcGVyc29ucyBwYXJ0aWNpcGF0aW5nIGluIHRoZSBnb3Zlcm5tZW50IGl0IG5lY2Vzc2FyaWx5IGZvbGxvd3MgdGhhdCBub3QgdGhlCgkJCQkJbWVuIGJ1dCB0aGUgbGF3IGlzIHNvdmVyZWlnbiDvvIhmb3IgdGhlIGZhcnRoZXIgcmVtb3ZlZCB0aGV5IGFyZSBmcm9tCgkJCQkJbW9uYXJjaHksIGFuZCBhcyB0aGV5IGhhdmUgbm90IHNvIG11Y2ggcHJvcGVydHkgYXMgdG8gYmUgaWRsZSBhbmQgbmVnbGVjdCBpdCwKCQkJCQlub3IgeWV0IHNvIGxpdHRsZSBhcyB0byBiZSBrZXB0IGF0IHRoZSBleHBlbnNlIG9mIHRoZSBzdGF0ZSw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhleSBhcmUgY29tcGVsbGVkIHRvIGNhbGwgdXBvbiB0aGUgbGF3IHRvIHJ1bGUKCQkJCQlpbnN0ZWFkIG9mIHJ1bGluZyB0aGVtc2VsdmVz77yJLiA8L3RyYW5zbGF0aW9uPg=="
translation['4.1293b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS43IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZW4gaWYgdGhlIG93bmVycyBvZiB0aGUgcHJvcGVydGllcyBhcmUgZmV3ZXIgdGhhbgoJCQkJCXRob3NlIHdobyBvd25lZCB0aGVtIHByZXZpb3VzbHksIGFuZCBvd24gbW9yZSwgdGhlIHNlY29uZCBmb3JtIG9mIG9saWdhcmNoeQoJCQkJCWNvbWVzIGludG8gYmVpbmc7IGZvciBhcyB0aGV5IGJlY29tZSBzdHJvbmdlciB0aGV5IGNsYWltIHRvIGhhdmUgYSBsYXJnZXIgc2hhcmUsCgkJCQkJYW5kIHRoZXJlZm9yZSB0aGV5IHRoZW1zZWx2ZXMgc2VsZWN0IHRob3NlIGZyb20gYW1vbmcgdGhlIHJlc3Qgb2YgdGhlIGNpdGl6ZW5zCgkJCQkJd2hvIGdvIGludG8gdGhlIGdvdmVybm1lbnQsIGJ1dCBhcyB0aGV5IGFyZSBub3QgeWV0IHN0cm9uZyBlbm91Z2ggdG8gcnVsZQoJCQkJCXdpdGhvdXQgbGF3IHRoZXkgbWFrZSB0aGUgbGF3IGNvbmZvcm0gd2l0aCB0aGlzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRoZXkgbGVnYWxpemUgdGhlIHJlY3J1aXRpbmcgb2YgdGhlIHJ1bGluZyBjbGFzcyBieQoJCQkJCQljby1vcHRhdGlvbjsgb3IgdGhlIHdvcmRzIG1heSBtZWFuIOKAmHRoZXkgbWFrZSB0aGUgbGF3CgkJCQkJCXJ1bGVyLuKAmTwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpZiB0aGV5IGNhcnJ5IG1hdHRlcnMgZnVydGhlciBieQoJCQkJCWJlY29taW5nIGZld2VyIGFuZCBob2xkaW5nIGxhcmdlciBwcm9wZXJ0aWVzLCB0aGVyZSBjb21lcyBhYm91dCB0aGUgdGhpcmQKCQkJCQlhZHZhbmNlIGluIG9saWdhcmNoeSwgd2hpY2ggY29uc2lzdHMgaW4gdGhlaXIga2VlcGluZyB0aGUgb2ZmaWNlcyBpbiB0aGVpciBvd24KCQkJCQloYW5kcywgYnV0IHVuZGVyIGEgbGF3IGVuYWN0aW5nIHRoYXQgdGhleSBhcmUgdG8gYmUgaGVyZWRpdGFyeS4gQW5kIHdoZW4gZmluYWxseQoJCQkJCXRoZXkgYXR0YWluIHZlcnkgZ3JlYXQgcHJlLWVtaW5lbmNlIGJ5IHRoZWlyIHdlYWx0aCBhbmQgdGhlaXIgbXVsdGl0dWRlIG9mCgkJCQkJZnJpZW5kcywgYSBkeW5hc3R5IG9mIHRoaXMgbmF0dXJlIGlzIG5lYXIgdG8gbW9uYXJjaHksIGFuZCBtZW4gYmVjb21lIHN1cHJlbWUKCQkJCQlpbnN0ZWFkIG9mIHRoZSBsYXc7IGFuZCB0aGlzIGlzIHRoZSBmb3VydGgga2luZCBvZiBvbGlnYXJjaHksIHRoZSBjb3VudGVycGFydCBvZgoJCQkJCXRoZSBsYXN0IGtpbmQgb2YgZGVtb2NyYWN5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS45IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZ1cnRoZXJtb3JlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPldlIG5vdyBwYXNzIGZyb20gdGhlIHZhcmlldGllcyBvZiBPbGlnYXJjaHkgYW5kIG9mIERlbW9jcmFjeQoJCQkJCQl0byB0aG9zZSBvZiB0aGUgb3RoZXIgYWN0dWFsbHkgZXhpc3RpbmcgY29uc3RpdHV0aW9ucywgQXJpc3RvY3JhY3kgc28tY2FsbGVkCgkJCQkJCWFuZCBDb25zdGl0dXRpb25hbCBHb3Zlcm5tZW50Ljwvbm90ZT4gdGhlcmUgYXJlIHR3byBjb25zdGl0dXRpb25zIGJ5IHRoZQoJCQkJCXNpZGUgb2YgZGVtb2NyYWN5IGFuZCBvbGlnYXJjaHksIG9uZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuCgkJCQkJCWFyaXN0b2NyYWN5Ljwvbm90ZT4gb2Ygd2hpY2ggaXMgY291bnRlZCBieSBldmVyeWJvZHkgYW5kIGhhcyBiZWVuIHJlZmVycmVkCgkJCQkJdG8gYXMgb25lIG9mIHRoZSBmb3VyIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiDvvIhhbmQgdGhlIGZvdXIgbWVhbnQgYXJlCgkJCQkJbW9uYXJjaHksIG9saWdhcmNoeSwgZGVtb2NyYWN5IGFuZCBmb3VydGggdGhlIGZvcm0gY2FsbGVkIGFyaXN0b2NyYWN577yJLAoJCQkJCWJ1dCB0aGVyZSBpcyBhIGZpZnRoLCBlbnRpdGxlZCBieSB0aGUgY29tbW9uIG5hbWUgb2YgdGhlbSBhbGwg77yIZm9yIGl0CgkJCQkJaXMgY2FsbGVkIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnTvvIksIGJ1dCBhcyBpdCBkb2VzIG5vdCBvZnRlbiBvY2N1ciBpdAoJCQkJCWlzIG92ZXJsb29rZWQgYnkgdGhvc2Ugd2hvIHRyeSB0byBlbnVtZXJhdGUgdGhlIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiwgYW5kIHRoZXkKCQkJCQl1c2UgdGhlIGZvdXIgbmFtZXMgb25seSDvvIhhcyBkb2VzIFBsYXRv77yJIGluIHRoZSBsaXN0IG9mCgkJCQkJY29uc3RpdHV0aW9ucy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyOTNiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['4.1293b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['4.1293b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPk5vdyB0aGUgbmFtZSBvZgoJCQkJCWFyaXN0b2NyYWN5IGlzIGluZGVlZCBwcm9wZXJseSBnaXZlbiB0byB0aGUgY29uc3RpdHV0aW9uIHRoYXQgd2UgZGlzY3Vzc2VkIGluCgkJCQkJb3VyIGZpcnN0IGRpc2NvdXJzZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Qm9vayAzLiAxMjc5YSAzNSBmZi4sCgkJCQkJCTEyODZiIDMgZmYuPC9ub3RlPiDvvIhmb3IgaXQgaXMgcmlnaHQgdG8gYXBwbHkgdGhlIG5hbWUKCQkJCQnigJhhcmlzdG9jcmFjeeKAmeKAlOKAmGdvdmVybm1lbnQgb2YgdGhlCgkJCQkJYmVzdOKAmeKAlG9ubHkgdG8gdGhlIGNvbnN0aXR1dGlvbiBvZiB3aGljaCB0aGUgY2l0aXplbnMgYXJlCgkJCQkJYmVzdCBpbiB2aXJ0dWUgYWJzb2x1dGVseSBhbmQgbm90IG1lcmVseSBnb29kIG1lbiBpbiByZWxhdGlvbiB0byBzb21lIGFyYml0cmFyeQoJCQkJCXN0YW5kYXJkLCBmb3IgdW5kZXIgaXQgYWxvbmUgdGhlIHNhbWUgcGVyc29uIGlzIGEgZ29vZCBtYW4gYW5kIGEgZ29vZCBjaXRpemVuCgkJCQkJYWJzb2x1dGVseSwgd2hlcmVhcyB0aG9zZSB3aG8gYXJlIGdvb2QgdW5kZXIgdGhlIG90aGVyIGNvbnN0aXR1dGlvbnMgYXJlIGdvb2QKCQkJCQlyZWxhdGl2ZWx5IHRvIHRoZWlyIG93biBmb3JtIG9mIGNvbnN0aXR1dGlvbu+8iTsgbmV2ZXJ0aGVsZXNzIHRoZXJlIGFyZQoJCQkJCWFsc28gc29tZSBjb25zdGl0dXRpb25zIHRoYXQgaGF2ZSBkaWZmZXJlbmNlcyBib3RoIGluIGNvbXBhcmlzb24gd2l0aAoJCQkJCW9saWdhcmNoaWNhbGx5IGdvdmVybmVkIHN0YXRlcyBhbmQgd2l0aCB3aGF0IGlzIHRlcm1lZCBjb25zdGl0dXRpb25hbAoJCQkJCWdvdmVybm1lbnQsIGluYXNtdWNoIGFzIGluIHRoZW0gdGhleSBlbGVjdCB0aGUgb2ZmaWNpYWxzIG5vdCBvbmx5IGJ5IHdlYWx0aCBidXQKCQkJCQlhbHNvIGJ5IGdvb2RuZXNzOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz50aGlzIGZvcm0gb2YKCQkJCQljb25zdGl0dXRpb24gZGlmZmVycyBmcm9tIGJvdGggYW5kIGlzIGNhbGxlZCBhcmlzdG9jcmF0aWMuIEZvciBldmVuIGluIHRoZQoJCQkJCXN0YXRlcyB0aGF0IGRvIG5vdCBwYXkgYW55IHB1YmxpYyBhdHRlbnRpb24gdG8gdmlydHVlIHRoZXJlIGFyZSBuZXZlcnRoZWxlc3MKCQkJCQlzb21lIG1lbiB0aGF0IGFyZSBoZWxkIGluIGhpZ2ggZXN0ZWVtIGFuZCBhcmUgdGhvdWdodCB3b3J0aHkgb2YgcmVzcGVjdC4gV2hlcmUKCQkJCQl0aGVuIHRoZSBjb25zdGl0dXRpb24gdGFrZXMgaW4gdmlldyB3ZWFsdGggYW5kIHZpcnR1ZSBhcyB3ZWxsIGFzIHRoZSBjb21tb24KCQkJCQlwZW9wbGUsIGFzIGZvciBpbnN0YW5jZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENhcnRoYWdlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDYXJ0aGFnZSI+Q2FydGhhZ2U8L3BsYWNlTmFtZT4sIHRoaXMgaXMgb2YgdGhlIG5hdHVyZSBvZiBhbiBhcmlzdG9jcmFjeTsgYW5kIHNvIGFsc28KCQkJCQlhcmUgdGhlIHN0YXRlcywgaW4gd2hpY2ggdGhlIGNvbnN0aXR1dGlvbiwgbGlrZSB0aGF0IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiwgdGFrZXMgaW4gdmlldyB0d28gb2YgdGhlc2UgdGhpbmdzCgkJCQkJb25seSwgdmlydHVlIGFuZCB0aGUgY29tbW9uIHBlb3BsZSwgYW5kIHRoZXJlIGlzIGEgbWluZ2xpbmcgb2YgdGhlc2UgdHdvCgkJCQkJZmFjdG9ycywgZGVtb2NyYWN5IGFuZCB2aXJ0dWUuIFRoZXNlIHRoZW4gYXJlIHR3byBraW5kcyBvZiBhcmlzdG9jcmFjeSBiZXNpZGUKCQkJCQl0aGUgZmlyc3QsIHdoaWNoIGlzIHRoZSBiZXN0IGNvbnN0aXR1dGlvbiw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIGEgdGhpcmQga2luZCBpcyB0aG9zZSBpbnN0YW5jZXMgb2Ygd2hhdCBpcyBjYWxsZWQKCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50IHRoYXQgaW5jbGluZSBtb3JlIGluIHRoZSBkaXJlY3Rpb24gb2YKCQkJCQkJb2xpZ2FyY2h5LjwvdHJhbnNsYXRpb24+"
translation['4.1294a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IHJlbWFpbnMgZm9yIHVzIHRvIHNwZWFrIGFib3V0IHdoYXQgaXMgdGVybWVkIGNvbnN0aXR1dGlvbmFsCgkJCQkJZ292ZXJubWVudCBhbmQgYWxzbyBhYm91dCB0eXJhbm55LiBUaG91Z2ggbmVpdGhlciB0aGUgZm9ybWVyIG5vciB0aGUKCQkJCQlhcmlzdG9jcmFjaWVzIHNwb2tlbiBvZiBqdXN0IG5vdyBhcmUgcmVhbGx5IGRldmlhdGlvbnMsIHdlIGhhdmUgY2xhc3NlZCB0aGVtCgkJCQkJdGh1cyBiZWNhdXNlIGluIGFjdHVhbCB0cnV0aCB0aGV5IGhhdmUgYWxsIGZhbGxlbiBhd2F5IGZyb20gdGhlIG1vc3QgY29ycmVjdAoJCQkJCWNvbnN0aXR1dGlvbiwgYW5kIGNvbnNlcXVlbnRseSBhcmUgY291bnRlZCB3aXRoIHRoZSBkZXZpYXRpb24tZm9ybXMsIGFuZCB0aG9zZQoJCQkJCWFyZSBkZXZpYXRpb25zIGZyb20gdGhlbSwgYXMgd2Ugc2FpZCBpbiBvdXIgcmVtYXJrcyBhdCB0aGUgYmVnaW5uaW5nLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTI3OWIgNCBmZi4gQWN0dWFsIGFyaXN0b2NyYWNpZXMgYXJlIGEKCQkJCQkJZmFsbGluZy1vZmYgZnJvbSB0aGUgQXJpc3RvY3JhY3kgYW5kIFBvbGl0eSBpcyBhIGRlY2xpbmUgZnJvbSBNb25hcmNoeSBhbmQKCQkJCQkJQXJpc3RvY3JhY3k7IGJ1dCB0aGV5IGFyZSBub3QgZGV2aWF0aW9ucyBpbiB0aGUgdGVjaG5pY2FsIHNlbnNlLjwvbm90ZT4KCQkJCQlUeXJhbm55IGlzIHJlYXNvbmFibHkgbWVudGlvbmVkIGxhc3QgYmVjYXVzZSBpdCBpcyB0aGUgbGVhc3QgY29uc3RpdHV0aW9uYWwgb2YKCQkJCQlhbGwgZ292ZXJubWVudHMsIHdoZXJlYXMgb3VyIGludmVzdGlnYXRpb24gaXMgYWJvdXQgY29uc3RpdHV0aW9uYWwKCQkJCQkJZ292ZXJubWVudC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SGF2aW5nIHRoZW4gc3RhdGVkIHRoZSByZWFzb24gZm9yCgkJCQkJdGhpcyBtb2RlIG9mIGNsYXNzaWZpY2F0aW9uLCB3ZSBoYXZlIG5vdyB0byBzZXQgZm9ydGggb3VyIHZpZXcgYWJvdXQKCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciBpdHMKCQkJCQltZWFuaW5nIGlzIGNsZWFyZXIgbm93IHRoYXQgdGhlIGNoYXJhY3RlcmlzdGljcyBvZiBvbGlnYXJjaHkgYW5kIGRlbW9jcmFjeSBoYXZlCgkJCQkJYmVlbiBkZWZpbmVkOyBzaW5jZSBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50IGlzLCB0byBwdXQgaXQgc2ltcGx5LCBhIG1peHR1cmUgb2YKCQkJCQlvbGlnYXJjaHkgYW5kIGRlbW9jcmFjeS4gQnV0IHBlb3BsZSBjdXN0b21hcmlseSBnaXZlIHRoZSBuYW1lIG9mIGNvbnN0aXR1dGlvbmFsCgkJCQkJZ292ZXJubWVudCBvbmx5IHRvIHRob3NlIGFtb25nIHN1Y2ggbWl4ZWQgY29uc3RpdHV0aW9ucyB0aGF0IGluY2xpbmUgdG93YXJkcwoJCQkJCWRlbW9jcmFjeSwgYW5kIGVudGl0bGUgdGhvc2UgdGhhdCBpbmNsaW5lIG1vcmUgdG93YXJkcyBvbGlnYXJjaHkgYXJpc3RvY3JhY2llcywKCQkJCQliZWNhdXNlIGVkdWNhdGlvbiBhbmQgZ29vZCBiaXJ0aCBnbyBtb3JlIHdpdGggdGhlIHdlYWx0aGllciBjbGFzc2VzLCBhbmQgYWxzbwoJCQkJCXRoZSB3ZWFsdGh5IGFyZSB0aG91Z2h0IHRvIGhhdmUgYWxyZWFkeSB0aGUgdGhpbmdzIHRvIGdldCB3aGljaCB3cm9uZ2RvZXJzCgkJCQkJY29tbWl0IHdyb25nOyBvd2luZyB0byB3aGljaCBwZW9wbGUgYXBwbHkgdGhlIHRlcm1zIOKAmGdlbnRyeeKAmQoJCQkJCWFuZCDigJhub3RhYmlsaXRpZXPigJkgdG8gdGhlIHJpY2guIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+U2luY2UgdGhlcmVmb3JlIGFyaXN0b2NyYWN5IG1lYW5zIHRoZSBhc3NpZ25tZW50IG9mIHRoZQoJCQkJCWhpZ2hlc3QgcGxhY2UgdG8gdGhlIGJlc3Qgb2YgdGhlIGNpdGl6ZW5zLCBvbGlnYXJjaGllcyBhbHNvIGFyZSBzYWlkIHRvIGJlIGRyYXduCgkJCQkJcmF0aGVyIGZyb20gdGhlIGdlbnRyeS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyOTRhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['4.1294a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkFuZCBpdCBzZWVtcyBhbiBpbXBvc3NpYmlsaXR5IGZvciBhIGNpdHkgZ292ZXJuZWQKCQkJCQlub3QgYnkgdGhlIGFyaXN0b2NyYWN5IGJ1dCBieSB0aGUgYmFzZSB0byBoYXZlIHdlbGwtb3JkZXJlZCBnb3Zlcm5tZW50LCBhbmQKCQkJCQlzaW1pbGFybHkgYWxzbyBmb3IgYSBjaXR5IHRoYXQgaGFzIG5vdCBhIHdlbGwtb3JkZXJlZCBnb3Zlcm5tZW50IHRvIGJlIGdvdmVybmVkCgkJCQkJYXJpc3RvY3JhdGljYWxseS4gQnV0IHRvIGhhdmUgZ29vZCBsYXdzIGVuYWN0ZWQgYnV0IG5vdCBvYmV5IHRoZW0gZG9lcyBub3QKCQkJCQljb25zdGl0dXRlIHdlbGwtb3JkZXJlZCBnb3Zlcm5tZW50LiBIZW5jZSBvbmUgZm9ybSBvZiBnb29kIGdvdmVybm1lbnQgbXVzdCBiZQoJCQkJCXVuZGVyc3Rvb2QgdG8gY29uc2lzdCBpbiB0aGUgbGF3cyBlbmFjdGVkIGJlaW5nIG9iZXllZCwgYW5kIGFub3RoZXIgZm9ybSBpbiB0aGUKCQkJCQlsYXdzIHdoaWNoIHRoZSBjaXRpemVucyBrZWVwIGJlaW5nIHdlbGwgZW5hY3RlZCDvvIhmb3IgaXQgaXMgcG9zc2libGUgdG8KCQkJCQlvYmV5IGJhZGx5IGVuYWN0ZWQgbGF3c++8iS4gQW5kIGZvciBsYXdzIHRvIGJlIHdlbGwgZW5hY3RlZCBpcyBwb3NzaWJsZQoJCQkJCWluIHR3byB3YXlzOiB0aGV5IG11c3QgZWl0aGVyIGJlIHRoZSBiZXN0IGxhd3MgcG9zc2libGUgZm9yIHRoZSBnaXZlbiBwZW9wbGUgb3IKCQkJCQl0aGUgYmVzdCBhYnNvbHV0ZWx5LiA8L3RyYW5zbGF0aW9uPg=="
translation['4.1294a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi40IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGFyaXN0b2NyYWN5CgkJCQkJaW4gdGhlIGZ1bGxlc3Qgc2Vuc2Ugc2VlbXMgdG8gY29uc2lzdCBpbiB0aGUgZGlzdHJpYnV0aW9uIG9mIHRoZSBob25vcnMKCQkJCQlhY2NvcmRpbmcgdG8gdmlydHVlOyBmb3IgdmlydHVlIGlzIHRoZSBkZWZpbmluZyBmYWN0b3Igb2YgYXJpc3RvY3JhY3ksIGFzIHdlYWx0aAoJCQkJCWlzIG9mIG9saWdhcmNoeSwgYW5kIGZyZWVkb20gb2YgZGVtb2NyYWN5IO+8iHdoaWxlIHRoZSBwcmluY2lwbGUgdGhhdCBhCgkJCQkJZGVjaXNpb24gb2YgdGhlIG1ham9yaXR5IGlzIHN1cHJlbWUgaXMgZm91bmQgaW4gdGhlbSBhbGw6IGZvciBpbiBib3RoIG9saWdhcmNoeQoJCQkJCWFuZCBhcmlzdG9jcmFjeSBhbmQgZGVtb2NyYWNpZXMgd2hhdGV2ZXIgdGhlIGxhcmdlciBwYXJ0IG9mIHRob3NlIHdobyBoYXZlIGEKCQkJCQlzaGFyZSBpbiB0aGUgZ292ZXJubWVudCBkZWNpZGVzIGlzIHN1cHJlbWXvvIkuIEluIG1vc3Qgc3RhdGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gaW4gbW9zdCBzdGF0ZXMgdGhhdCBhcmUgY29uc2lkZXJlZAoJCQkJCQlhcmlzdG9jcmFjaWVzLjwvbm90ZT4gdGhlbiB0aGUgbmFtZSBvZiBhcmlzdG9jcmFjeSBpcyBnaXZlbiB0byB0aGF0IGZvcm0gb2YKCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRoZSBtb3JlCgkJCQkJCW9saWdhcmNoaWNhbCBmb3JtLCAxMjkzYiAzNi48L25vdGU+IGZvciB0aGUgY29tYmluYXRpb24gYWltcyBvbmx5IGF0IHRoZQoJCQkJCXdlbGwtb2ZmIGFuZCB0aGUgcG9vciwgd2VhbHRoIGFuZCBmcmVlZG9tIO+8iHNpbmNlIGluIGFsbW9zdCB0aGUgbGFyZ2VzdAoJCQkJCW51bWJlciBvZiBzdGF0ZXMgdGhlIHJpY2ggc2VlbSB0byBvY2N1cHkgdGhlIHBsYWNlIG9mIHRoZSBnZW50cnnvvIk7CgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi41IiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IGFzIHRoZXJlIGFyZSB0aHJlZSB0aGluZ3MKCQkJCQl0aGF0IGNsYWltIGVxdWFsIHBhcnRpY2lwYXRpb248bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+aW4gdGhlCgkJCQkJY29uc3RpdHV0aW9uLCBmcmVlZG9tLCB3ZWFsdGggYW5kIHZpcnR1ZSDvvIhmb3IgdGhlIGZvdXJ0aCwgd2hhdCBpcwoJCQkJCWNhbGxlZCBub2JpbGl0eSwgYWNjb21wYW5pZXMgdGhlIHR3byBsYXR0ZXLigJRub2JpbGl0eSBtZWFucyBhbmNpZW50CgkJCQkJd2VhbHRoIGFuZCB2aXJ0dWXvvIksIGl0IGlzIG1hbmlmZXN0IHRoYXQgdGhlIG1peHR1cmUgb2YgdGhlIHR3byBmYWN0b3JzLAoJCQkJCXRoZSByaWNoIGFuZCB0aGUgcG9vciw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+TG9vc2VseSBwdXQgZm9yCgkJCQkJCeKAmHdlYWx0aCBhbmQgZnJlZSBiaXJ0aC7igJk8L25vdGU+IG91Z2h0IHRvIGJlIHRlcm1lZAoJCQkJCWNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQsIHdoaWxlIHRoZSBtaXh0dXJlIG9mIHRoZSB0aHJlZSBmYWN0b3JzIGRlc2VydmVzIHRoZQoJCQkJCW5hbWUgb2YgYXJpc3RvY3JhY3kgbW9zdCBvZiBhbGwgdGhlIHZhcmlvdXMgZm9ybXMgb2YgYXJpc3RvY3JhY3kgYmVzaWRlIHRoZSB0cnVlCgkJCQkJYW5kIGJlc3QgZm9ybS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgaGFzIHRoZW4gYmVlbiBzdGF0ZWQgdGhhdCBvdGhlcgoJCQkJCWZvcm1zIG9mIGNvbnN0aXR1dGlvbiBhbHNvIGV4aXN0IGJlc2lkZXMgbW9uYXJjaHksIGRlbW9jcmFjeSBhbmQgb2xpZ2FyY2h5LCBhbmQKCQkJCQl3aGF0IHRoZWlyIGNoYXJhY3RlcmlzdGljcyBhcmUsIGFuZCBob3cgdGhlIHZhcmlvdXMgc29ydHMgb2YgYXJpc3RvY3JhY3kgYW5kIG9mCgkJCQkJY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCBkaWZmZXIgZnJvbSBvbmUgYW5vdGhlcjsgYW5kIGl0IGlzIG1hbmlmZXN0IHRoYXQKCQkJCQlhcmlzdG9jcmFjeSBhbmQgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCBhcmUgbm90IHdpZGVseSBhcGFydCBmcm9tIG9uZQoJCQkJCQlhbm90aGVyLjwvdHJhbnNsYXRpb24+"
translation['4.1294b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5leHQgdG8gd2hhdCBoYXMgYmVlbiBzYWlkIGxldCB1cyBzdGF0ZSB0aGUgd2F5IGluIHdoaWNoIHdoYXQKCQkJCQlpcyBjYWxsZWQgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCBjb21lcyBpbnRvIGV4aXN0ZW5jZSBieSB0aGUgc2lkZSBvZgoJCQkJCWRlbW9jcmFjeSBhbmQgb2xpZ2FyY2h5LCBhbmQgaG93IGl0IGlzIHByb3BlciB0byBlc3RhYmxpc2ggaXQuIEF0IHRoZSBzYW1lIHRpbWUKCQkJCQl0aGUgZGVmaW5pbmcgY2hhcmFjdGVyaXN0aWNzIG9mIGRlbW9jcmFjeSBhbmQgb2xpZ2FyY2h5IHdpbGwgYWxzbyBiZSBjbGVhcjsgZm9yCgkJCQkJd2UgbXVzdCBncmFzcCB0aGUgZGlzdGluY3Rpb24gYmV0d2VlbiB0aGVzZSBhbmQgdGhlbiBtYWtlIGEgY29tYmluYXRpb24gb3V0IG9mCgkJCQkJdGhlbSwgdGFraW5nLCBzbyB0byBzYXksIGEgY29udHJpYnV0aW9uIGZyb20gZWFjaC4gQW5kIHRoZXJlIGFyZSB0aHJlZQoJCQkJCXByaW5jaXBsZXMgZGV0ZXJtaW5pbmcgdGhpcyBjb21iaW5hdGlvbiBvciBtaXh0dXJlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlVuZGVyIG9uZSBwbGFuIHdlIG11c3QgYWRvcHQgYm90aCBmZWF0dXJlcyBmcm9tIHRoZQoJCQkJCWxlZ2lzbGF0aXZlIHNjaGVtZXMgb2YgdGhlIHR3byBkaWZmZXJlbnQgY29uc3RpdHV0aW9uczogZm9yIGV4YW1wbGUsIGluIHJlZ2FyZAoJCQkJCXRvIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiBqdXN0aWNlLCBpbiBvbGlnYXJjaGllcyB0aGV5IGluc3RpdHV0ZSBhIGZpbmUgZm9yIHRoZQoJCQkJCXJpY2ggaWYgdGhleSBkbyBub3Qgc2VydmUgb24ganVyaWVzIGJ1dCBubyBwYXkgZm9yIHRoZSBwb29yIGZvciBzZXJ2aW5nLCB3aGlsZQoJCQkJCWluIGRlbW9jcmFjaWVzIHRoZXkgYXNzaWduIHBheSBmb3IgdGhlIHBvb3IgYnV0IG5vIGZpbmUgZm9yIHRoZSByaWNoLCBidXQgYQoJCQkJCWNvbW1vbiBhbmQgaW50ZXJtZWRpYXRlIHByaW5jaXBsZSBpcyB0byBoYXZlIGJvdGggcGF5bWVudCBhbmQgZmluZSwgYW5kCgkJCQkJdGhlcmVmb3JlIHRoaXMgaXMgYSBtYXJrIG9mIGEgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCwgc2luY2UgaXQgaXMgYSBtaXh0dXJlCgkJCQkJb2YgZWxlbWVudHMgZnJvbSBib3RoIG9saWdhcmNoeSBhbmQgZGVtb2NyYWN5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI5NGIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['4.1294b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['4.1294b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhpcyB0aGVuIGlzIG9uZSBtb2RlIG9mIGNvbWJpbmluZyB0aGUgdHdvLiBBbm90aGVyCgkJCQkJaXMgdG8gdGFrZSB0aGUgbWlkZGxlIGNvdXJzZSBiZXR3ZWVuIHRoZSByZWd1bGF0aW9ucyBvZiBlYWNoOiBmb3IgZXhhbXBsZSwKCQkJCQlkZW1vY3JhY2llcyBwZXJtaXQgbWVtYmVyc2hpcCBvZiB0aGUgYXNzZW1ibHkgb24gbm8gcHJvcGVydHktcXVhbGlmaWNhdGlvbiBhdAoJCQkJCWFsbCBvciBhIHF1aXRlIHNtYWxsIG9uZSwgb2xpZ2FyY2hpZXMgb24gYSBsYXJnZSBwcm9wZXJ0eS1xdWFsaWZpY2F0aW9uLCBidXQgdGhlCgkJCQkJY29tYmluYXRpb24gY2xlYXJseSBpcyB0byBoYXZlIG5laXRoZXIgcHJpbmNpcGxlLCBidXQgb25lIHdoaWNoIGxpZXMgaW4gdGhlCgkJCQkJbWlkZGxlIGJldHdlZW4gZWl0aGVyIG9mIHRoZXNlIHR3byBxdWFsaWZpY2F0aW9ucy4gSW4gdGhlIHRoaXJkIHBsYWNlIGlzIGEKCQkJCQljb21iaW5hdGlvbiBvZiB0aGUgdHdvIHN5c3RlbXMsIHRha2luZyBzb21lIGZlYXR1cmVzIGZyb20gdGhlIG9saWdhcmNoaWNhbCBsYXcKCQkJCQlhbmQgc29tZSBmcm9tIHRoZSBkZW1vY3JhdGljOyBJIG1lYW4sIGZvciBleGFtcGxlLCB0aGF0IGl0IGlzIHRob3VnaHQgdG8gYmUKCQkJCQlkZW1vY3JhdGljIGZvciB0aGUgb2ZmaWNlcyB0byBiZSBhc3NpZ25lZCBieSBsb3QsIGZvciB0aGVtIHRvIGJlIGVsZWN0ZWQKCQkJCQlvbGlnYXJjaGljLCBhbmQgZGVtb2NyYXRpYyBmb3IgdGhlbSBub3QgdG8gaGF2ZSBhIHByb3BlcnR5LXF1YWxpZmljYXRpb24sCgkJCQkJb2xpZ2FyY2hpYyB0byBoYXZlIG9uZTsgdGhlcmVmb3JlIGl0IGlzIGFyaXN0b2NyYXRpYyBhbmQgY29uc3RpdHV0aW9uYWwgdG8gdGFrZQoJCQkJCW9uZSBmZWF0dXJlIGZyb20gb25lIGZvcm0gYW5kIHRoZSBvdGhlciBmcm9tIHRoZSBvdGhlciwgZnJvbSBvbGlnYXJjaHkgdGhhdAoJCQkJCW9mZmljZXMgYXJlIHRvIGJlIGVsZWN0ZWQsIGFuZCBmcm9tIGRlbW9jcmFjeSB0aGF0IHRoaXMgaXMgbm90IHRvIGJlIG9uIGEKCQkJCQlwcm9wZXJ0eS1xdWFsaWZpY2F0aW9uLiBUaGlzIHRoZW4gaXMgdGhlIG1vZGUgb2YgdGhlIG1peHR1cmU7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy40IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHRoZSBtYXJrIG9mIGEgZ29vZCBtaXh0dXJlIG9mIGRlbW9jcmFjeSBhbmQKCQkJCQlvbGlnYXJjaHkgaXMgd2hlbiBpdCBpcyBwb3NzaWJsZSB0byBzcGVhayBvZiB0aGUgc2FtZSBjb25zdGl0dXRpb24gYXMgYQoJCQkJCWRlbW9jcmFjeSBhbmQgYXMgYW4gb2xpZ2FyY2h5OyBmb3IgbWFuaWZlc3RseSB0aGlzIGlzIHNvIHdoZW4gaXQgaXMgc2FpZCBiZWNhdXNlCgkJCQkJdGhleSBoYXZlIGJlZW4gbWl4ZWQgd2VsbCwgYW5kIHRoaXMgaXMgdGhlIGNhc2Ugd2l0aCB0aGUgZm9ybSB0aGF0IGxpZXMgaW4gdGhlCgkJCQkJbWlkZGxlLCBmb3IgZWFjaCBvZiB0aGUgdHdvIGV4dHJlbWUgZm9ybXMgY2FuIGJlIHNlZW4gaW4gaXQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy41IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhpcyBpcyB0aGUgY2FzZSB3aXRoIHRoZSBjb25zdGl0dXRpb24gb2YKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LiBGb3IgbWFueQoJCQkJCQlwZW9wbGU8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+ZW5kZWF2b3IgdG8gZGVzY3JpYmUgaXQgYXMKCQkJCQliZWluZyBhIGRlbW9jcmFjeSwgYmVjYXVzZSBpdHMgc3lzdGVtIGhhcyBtYW55IGRlbW9jcmF0aWMgZmVhdHVyZXMsIGZvciBpbnN0YW5jZQoJCQkJCWZpcnN0IG9mIGFsbCBpdHMgcmVndWxhdGlvbiBmb3IgdGhlIHJlYXJpbmcgb2YgYm95cywgc2luY2UgdGhlIHNvbnMgb2YgdGhlIHJpY2gKCQkJCQlhcmUgYnJvdWdodCB1cCBpbiB0aGUgc2FtZSB3YXkgYXMgdGhvc2Ugb2YgdGhlIHBvb3IsIGFuZCBhcmUgZWR1Y2F0ZWQgaW4gYQoJCQkJCW1hbm5lciBpbiB3aGljaCB0aGUgc29ucyBvZiB0aGUgcG9vciBhbHNvIGNvdWxkIGJlIGVkdWNhdGVkLCBhbmQgdGhleSBhcmUgYWxzbwoJCQkJCXRyZWF0ZWQgc2ltaWxhcmx5IGF0IHRoZSBuZXh0IGFnZSwgYW5kIGluIHRoZSBzYW1lIG1hbm5lciB3aGVuIHRoZXkgYXJlIGdyb3duCgkJCQkJdXAsIGZvciB0aGVyZSBpcyBub3RoaW5nIHRoYXQgZGlzdGluZ3Vpc2hlcyB0aGUgcmljaCBtYW4gZnJvbSB0aGUgcG9vcgoJCQkJCW1hbuKAlHRodXMgdGhlIGFycmFuZ2VtZW50cyBmb3IgZm9vZCBhcmUgdGhlIHNhbWUgZm9yIGFsbCBhdCB0aGUgY29tbW9uCgkJCQkJbWVzc2VzLCBhbmQgdGhlIHJpY2ggd2VhciBjbG90aGVzIHN1Y2ggYXMgZXZlbiBhbnkgcG9vciBtYW4gY291bGQgcHJvY3VyZSwgYW5kCgkJCQkJYWxzbyBiZWNhdXNlIG9mIHRoZSB0d28gZ3JlYXRlc3Qgb2ZmaWNlcyB0aGUgY29tbW9uIHBlb3BsZSBlbGVjdCB0byBvbmUgYW5kCgkJCQkJc2hhcmUgaW4gdGhlIG90aGVyIO+8iHRoZXkgZWxlY3QgdGhlIEVsZGVycyBhbmQgc2hhcmUgaW4gdGhlCgkJCQkJRXBob3JhdGXvvIk7IGJ1dCBvdGhlcnMgY2FsbCBpdCBhbiBvbGlnYXJjaHksIGJlY2F1c2UgaXQgaGFzIG1hbnkKCQkJCQlvbGlnYXJjaGljYWwgZmVhdHVyZXMsIGZvciBpbnN0YW5jZSB0aGF0IGFsbCB0aGUgb2ZmaWNlcyBhcmUgZWxlY3RpdmUgYW5kIG5vbmUKCQkJCQlhcHBvaW50ZWQgYnkgbG90IGFuZCBmZXcgcGVyc29ucyBoYXZlIHRoZSBwb3dlciB0byBzZW50ZW5jZSB0byBkZWF0aCBhbmQgZXhpbGUsCgkJCQkJYW5kIGEgbnVtYmVyIG9mIG90aGVyIHN1Y2ggbWF0dGVycy4gPC90cmFuc2xhdGlvbj4="
translation['4.1295a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy42IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGluIGEgd2VsbC1jb25zdHJ1Y3RlZCBtaXhlZCBjb25zdGl0dXRpb24gYm90aCBvZiB0aGUgdHdvIGZhY3RvcnMsIGFuZAoJCQkJCW5laXRoZXIgb2YgdGhlbSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBjb25qZWN0dXJhbCBlbWVuZGF0aW9uCgkJCQkJCXJlbW92ZXMgdGhpcyBteXN0ZXJpb3VzIGVwaWdyYW0sIGdpdmluZyDigJhhbmQgbm90IG9uZSBvZiB0aGUgdHdvCgkJCQkJCe+8iG9ubHnvvIku4oCZPC9ub3RlPiBzaG91bGQgc2VlbSB0byBiZSBwcmVzZW50LCBhbmQKCQkJCQlpdCBzaG91bGQgYmUga2VwdCBzYWZlIGJ5IGl0cyBvd24gbWVhbnMgYW5kIG5vdCBieSBvdXRzaWRlIGFpZCwgYW5kIGJ5IGl0cyBvd24KCQkJCQltZWFucyBub3QgYmVjYXVzZSB0aG9zZSB3aG8gZGVzaXJlIGl0cyBzZWN1cml0eSBhcmUgbW9yZSBudW1lcm91cyBvdXRzaWRlCgkJCQkJCWl0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yLCBpZiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJTOvs+JzrjOtc69PC9mb3JlaWduPiBpcyBhbiBpbnRlcnBvbGF0aW9uLCDigJhub3QgbWVyZWx5IGJlY2F1c2UKCQkJCQkJdGhvc2Ug77yIY2l0aXplbnPvvIkgd2hvIHdpc2ggaXQgdG8gc3Vydml2ZSBhcmUgbW9yZSBudW1lcm91cwoJCQkJCQnvvIh0aGFuIHRob3NlIHdobyBkbyBub3TvvIku4oCZPC9ub3RlPiDvvIhmb3IKCQkJCQlldmVuIGEgYmFkIGNvbnN0aXR1dGlvbiBtaWdodCBwb3NzZXNzIHRoaXMgcXVhbGl0ee+8iSwgYnV0IGJlY2F1c2Ugbm8KCQkJCQlzZWN0aW9uIG9mIHRoZSBzdGF0ZSB3aGF0ZXZlciB3b3VsZCBldmVuIHdpc2ggZm9yIGFub3RoZXIKCQkJCQkJY29uc3RpdHV0aW9uLjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8lM6+z4nOuM61zr08L2ZvcmVpZ24+IGlzIGFuIGludGVycG9sYXRpb24sIOKAmG5vdCBtZXJlbHkgYmVjYXVzZQoJCQkJCQl0aG9zZSDvvIhjaXRpemVuc++8iSB3aG8gd2lzaCBpdCB0byBzdXJ2aXZlIGFyZSBtb3JlIG51bWVyb3VzCgkJCQkJCe+8iHRoYW4gdGhvc2Ugd2hvIGRvIG5vdO+8iS7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHByb3BlciB3YXkgdGhlcmVmb3JlIHRvCgkJCQkJZXN0YWJsaXNoIGEgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCwgYW5kIHNpbWlsYXJseSBhbHNvIHRoZSBnb3Zlcm5tZW50cyBuYW1lZAoJCQkJCWFyaXN0b2NyYWNpZXMsIGhhcyBub3cgYmVlbiBzdGF0ZWQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjk1YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['4.1295a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['4.1295a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IHJlbWFpbmVkIGZvciB1cyB0byBzcGVhawoJCQkJCW9mIHR5cmFubnksIG5vdCBiZWNhdXNlIHRoZXJlIGlzIG11Y2ggdGhhdCBjYW4gYmUgc2FpZCBhYm91dCBpdCwgYnV0IGluIG9yZGVyCgkJCQkJdGhhdCBpdCBtYXkgcmVjZWl2ZSBpdHMgcGFydCBpbiBvdXIgaW5xdWlyeSwgc2luY2Ugd2UgcmFuayB0aGlzIGFsc28gYXMgb25lCgkJCQkJYW1vbmcgdGhlIGtpbmRzIG9mIGNvbnN0aXR1dGlvbi4gVGhlIG5hdHVyZSBvZiBraW5nc2hpcCB3ZSBoYXZlIGRlZmluZWQgaW4gb3VyCgkJCQkJZmlyc3QgZGlzY291cnNlcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Qm9vayAzLjktMTIuPC9ub3RlPiBpbgoJCQkJCXdoaWNoIHdlIGV4YW1pbmVkIHRoZSBxdWVzdGlvbiBpbiByZWxhdGlvbiB0byB0aGUgY29uc3RpdHV0aW9uIG1vc3QgY29tbW9ubHkKCQkJCQlkZW5vdGVkIGJ5IHRoZSB0ZXJtIOKAmGtpbmdzaGlwLOKAmSB3aGV0aGVyIGl0IGlzCgkJCQkJZGlzYWR2YW50YWdlb3VzIG9yIGFuIGFkdmFudGFnZSB0byBzdGF0ZXMsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHdoYXQgcGVyc29uIG91Z2h0IHRvIGJlIHNldCB1cCBhcyBraW5nLCBhbmQgZnJvbSB3aGF0CgkJCQkJc291cmNlLCBhbmQgYnkgd2hhdCBwcm9jZWR1cmU7IGFuZCBpbiB0aGUgcGFzc2FnZSBpbiB3aGljaCB3ZSB3ZXJlIGNvbnNpZGVyaW5nCgkJCQkJa2luZ3NoaXAgd2UgZGlzdGluZ3Vpc2hlZCB0d28ga2luZHMgb2YgdHlyYW5ueSwgYmVjYXVzZSB0aGVpciBwb3dlciBpbiBhIG1hbm5lcgoJCQkJCWJvcmRlcnMgdXBvbiByb3lhbHR5LCBiZWNhdXNlIGJvdGggdGhlc2UgZm9ybXMgb2YgcnVsZSBhcmUgaW4gYWNjb3JkYW5jZSB3aXRoCgkJCQkJbGF3IO+8iGZvciBhbW9uZyBzb21lIG9mIHRoZSBiYXJiYXJpYW5zIHRoZXkgZWxlY3QgbW9uYXJjaGljIHJ1bGVycyB3aXRoCgkJCQkJYXV0b2NyYXRpYyBwb3dlcnMsIGFuZCBhbHNvIGluIG9sZCB0aW1lcyBhbW9uZyB0aGUgYW5jaWVudCBHcmVla3Mgc29tZSBtZW4gdXNlZAoJCQkJCXRvIGJlY29tZSBtb25hcmNocyBvZiB0aGlzIHNvcnQsIHRoZSBydWxlcnMgY2FsbGVkCgkJCQkJPGVtcGggY2xhc3M9InRyYW5zbGF0aW9uIj5hZXN5bW5ldGFlPC9lbXBoPu+8iSwgYnV0IHRoZXNlIHR3byBmb3JtcyBvZiB0eXJhbm55IGhhdmUgY2VydGFpbgoJCQkJCWRpZmZlcmVuY2VzIGZyb20gb25lIGFub3RoZXIsIGFsdGhvdWdoIHRoZXkgd2VyZSBvbiB0aGUgb25lIGhhbmQgb2YgdGhlIG5hdHVyZQoJCQkJCW9mIHJveWFsdHkgYmVjYXVzZSB0aGV5IHdlcmUgaW4gYWNjb3JkYW5jZSB3aXRoIGxhdyBhbmQgYmVjYXVzZSB0aGV5IGV4ZXJjaXNlZAoJCQkJCW1vbmFyY2hpYyBydWxlIG92ZXIgd2lsbGluZyBzdWJqZWN0cywgYW5kIG9uIHRoZSBvdGhlciBoYW5kIG9mIHRoZSBuYXR1cmUgb2YgYQoJCQkJCXR5cmFubnkgYmVjYXVzZSB0aGV5IHJ1bGVkIGRlc3BvdGljYWxseSBhbmQgYWNjb3JkaW5nIHRvIHRoZWlyIG93biBqdWRnZW1lbnQuCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZXJlIGlzIGEgdGhpcmQga2luZCBvZgoJCQkJCXR5cmFubnkgd2hpY2ggaXMgdGhvdWdodCB0byBiZSB0eXJhbm55IGluIHRoZSBmdWxsZXN0IGRlZ3JlZSwgYmVpbmcgdGhlCgkJCQkJY291bnRlcnBhcnQgb2YgdW5pdmVyc2FsIGtpbmdzaGlwOyB0byB0aGlzIHNvcnQgb2YgdHlyYW5ueSBtdXN0IG5lY2Vzc2FyaWx5CgkJCQkJYmVsb25nIGEgbW9uYXJjaHk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhhdCBleGVyY2lzZXMKCQkJCQlpcnJlc3BvbnNpYmxlIHJ1bGUgb3ZlciBzdWJqZWN0cyBhbGwgb2YgdGhlIHNhbWUgb3Igb2YgYSBoaWdoZXIgY2xhc3Mgd2l0aCBhCgkJCQkJdmlldyB0byBpdHMgb3duIHByaXZhdGUgaW50ZXJlc3QgYW5kIG5vdCBpbiB0aGUgaW50ZXJlc3Qgb2YgdGhlIHBlcnNvbnMgcnVsZWQuCgkJCQkJSGVuY2UgaXQgaXMgaGVsZCBhZ2FpbnN0IHRoZSB3aWxsIG9mIHRoZSBzdWJqZWN0cywgc2luY2Ugbm8gZnJlZSBtYW4gd2lsbGluZ2x5CgkJCQkJZW5kdXJlcyBzdWNoIHJ1bGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIHRoZW4gYXJlIHRoZSBraW5kcyBvZgoJCQkJCXR5cmFubnkgYW5kIHN1Y2ggaXMgdGhlaXIgbnVtYmVyLCBmb3IgdGhlIHJlYXNvbnMgc3RhdGVkPC90cmFuc2xhdGlvbj4="
translation['4.1295b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCB3aGF0IGlzIHRoZSBiZXN0CgkJCQkJY29uc3RpdHV0aW9uIGFuZCB3aGF0IGlzIHRoZSBiZXN0IG1vZGUgb2YgbGlmZSBmb3IgbW9zdCBjaXRpZXMgYW5kIG1vc3Qgb2YKCQkJCQltYW5raW5kLCBpZiB3ZSBkbyBub3QganVkZ2UgYnkgdGhlIHN0YW5kYXJkIG9mIGEgdmlydHVlIHRoYXQgaXMgYWJvdmUgdGhlIGxldmVsCgkJCQkJb2YgcHJpdmF0ZSBjaXRpemVucyBvciBvZiBhbiBlZHVjYXRpb24gdGhhdCBuZWVkcyBuYXR1cmFsIGdpZnRzIGFuZCBtZWFucwoJCQkJCXN1cHBsaWVkIGJ5IGZvcnR1bmUsIG5vciBieSB0aGUgc3RhbmRhcmQgb2YgdGhlIGlkZWFsIGNvbnN0aXR1dGlvbiwgYnV0IG9mIGEKCQkJCQltb2RlIG9mIGxpZmUgYWJsZSB0byBiZSBzaGFyZWQgYnkgbW9zdCBtZW4gYW5kIGEgY29uc3RpdHV0aW9uIHBvc3NpYmxlIGZvciBtb3N0CgkJCQkJc3RhdGVzIHRvIGF0dGFpbj8gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Gb3IgdGhlCgkJCQkJY29uc3RpdHV0aW9ucyBjYWxsZWQgYXJpc3RvY3JhY2llcywgb2Ygd2hpY2ggd2Ugc3Bva2UganVzdCBub3csPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMjkzYiA3LTIxLCBjZi4gMTI5M2IgMzYtMTI5NGEgMjUuPC9ub3RlPgoJCQkJCWluIHNvbWUgY2FzZXMgZmFsbCBzb21ld2hhdCBvdXQgb2YgdGhlIHNjb3BlIG9mIG1vc3Qgc3RhdGVzLCBhbmQgaW4gb3RoZXJzCgkJCQkJYXBwcm94aW1hdGUgdG8gd2hhdCBpcyBjYWxsZWQgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCwgc28gdGhhdCBpdCBpcyBwcm9wZXIgdG8KCQkJCQlzcGVhayBvZiB0aGVzZSB0d28gZm9ybXMgYXMgaWYgdGhleSB3ZXJlIG9uZS4gQW5kIGluZGVlZCB0aGUgZGVjaXNpb24gaW4gcmVnYXJkCgkJCQkJdG8gYWxsIHRoZXNlIHF1ZXN0aW9ucyBpcyBiYXNlZCBvbiB0aGUgc2FtZSBlbGVtZW50YXJ5IHByaW5jaXBsZXMuIEZvciBpZiBpdCBoYXMKCQkJCQliZWVuIHJpZ2h0bHkgc2FpZCBpbiB0aGU8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5FdGhpY3M8L3RpdGxlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTEwMWEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4gRXRoLiAxMTAxYQoJCQkJCQkxNDwvYmlibD4uPC9ub3RlPiB0aGF0IHRoZSBoYXBweSBsaWZlIGlzIHRoZSBsaWZlIHRoYXQgaXMgbGl2ZWQgd2l0aG91dAoJCQkJCWltcGVkaW1lbnQgaW4gYWNjb3JkYW5jZSB3aXRoIHZpcnR1ZSwgYW5kIHRoYXQgdmlydHVlIGlzIGEgbWlkZGxlIGNvdXJzZSwgaXQKCQkJCQluZWNlc3NhcmlseSBmb2xsb3dzIHRoYXQgdGhlIG1pZGRsZSBjb3Vyc2Ugb2YgbGlmZSBpcyB0aGUgYmVzdOKAlHN1Y2ggYQoJCQkJCW1pZGRsZSBjb3Vyc2UgYXMgaXQgaXMgcG9zc2libGUgZm9yIGVhY2ggY2xhc3Mgb2YgbWVuIHRvIGF0dGFpbi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExMDFhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTEwMWEKCQkJCQkJMTQ8L2JpYmw+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZXNlIHNhbWUgY3JpdGVyaWEgbXVzdCBhbHNvCgkJCQkJbmVjZXNzYXJpbHkgYXBwbHkgdG8gdGhlIGdvb2RuZXNzIGFuZCBiYWRuZXNzIG9mIGEgc3RhdGUsIGFuZCBvZiBhCgkJCQkJY29uc3RpdHV0aW9u4oCUZm9yIGEgY29uc3RpdHV0aW9uIGlzIGEgY2VydGFpbiBtb2RlIG9mIGxpZmUgb2YgYSBzdGF0ZS4KCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyOTViIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['4.1295b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkluIGFsbCBzdGF0ZXMgdGhlcmVmb3JlIHRoZXJlIGV4aXN0IHRocmVlIGRpdmlzaW9ucyBvZiB0aGUKCQkJCQlzdGF0ZSwgdGhlIHZlcnkgcmljaCwgdGhlIHZlcnkgcG9vciwgYW5kIHRoaXJkbHkgdGhvc2Ugd2hvIGFyZSBiZXR3ZWVuIHRoZSB0d28uCgkJCQkJU2luY2UgdGhlbiBpdCBpcyBhZG1pdHRlZCB0aGF0IHdoYXQgaXMgbW9kZXJhdGUgb3IgaW4gdGhlIG1pZGRsZSBpcyBiZXN0LCBpdCBpcwoJCQkJCW1hbmlmZXN0IHRoYXQgdGhlIG1pZGRsZSBhbW91bnQgb2YgYWxsIG9mIHRoZSBnb29kIHRoaW5ncyBvZiBmb3J0dW5lIGlzIHRoZSBiZXN0CgkJCQkJYW1vdW50IHRvIHBvc3Nlc3MuIDwvdHJhbnNsYXRpb24+"
translation['4.1295b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS40IiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIHRoaXMgZGVncmVlCgkJCQkJb2Ygd2VhbHRoIGlzIHRoZSByZWFkaWVzdCB0byBvYmV5IHJlYXNvbiwgd2hlcmVhcyBmb3IgYSBwZXJzb24gd2hvIGlzCgkJCQkJZXhjZWVkaW5nbHkgYmVhdXRpZnVsIG9yIHN0cm9uZyBvciBub2JseSBib3JuIG9yIHJpY2gsIG9yIHRoZQoJCQkJCW9wcG9zaXRl4oCUZXhjZWVkaW5nbHkgcG9vciBvciB3ZWFrIG9yIG9mIHZlcnkgbWVhbiBzdGF0aW9uLCBpdCBpcwoJCQkJCWRpZmZpY3VsdCB0byBmb2xsb3cgdGhlIGJpZGRpbmcgb2YgcmVhc29uOyBmb3IgdGhlIGZvcm1lciB0dXJuIG1vcmUgdG8gaW5zb2xlbmNlCgkJCQkJYW5kIGdyYW5kIHdpY2tlZG5lc3MsIGFuZCB0aGUgbGF0dGVyIG92ZXJtdWNoIHRvIG1hbGljZSBhbmQgcGV0dHkgd2lja2VkbmVzcywKCQkJCQlhbmQgdGhlIG1vdGl2ZSBvZiBhbGwgd3Jvbmdkb2luZyBpcyBlaXRoZXIgaW5zb2xlbmNlIG9yIG1hbGljZS4gQW5kIG1vcmVvdmVyIHRoZQoJCQkJCW1pZGRsZSBjbGFzcyBhcmUgdGhlIGxlYXN0IGluY2xpbmVkIHRvIHNodW4gb2ZmaWNlIGFuZCB0byBjb3ZldCBvZmZpY2UsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSB0ZXh0IGlzIGFuIGVtZW5kYXRpb247IHNvbWUgTVNTLiBnaXZlCgkJCQkJCeKAmHRvIHJ1bGUgdGhlIHRyaWJlIGFuZCB0byBydWxlIHRoZSBjb3VuY2lsLOKAmSBidXQgbW9zdAoJCQkJCQloYXZlIOKAmHRvIGxvdmUgb2ZmaWNlIGFuZCBydWxlIHRoZSBjb3VuY2lsLOKAmSBhcHBhcmVudGx5CgkJCQkJCXRoaW5raW5nIHRoYXQgdGhlIHZlcmIgdHJhbnNsYXRlZCDigJhydWxlIHRoZSBjb3VuY2ls4oCZCgkJCQkJCW1lYW50IOKAmHdpc2ggb2ZmaWNlLuKAmTwvbm90ZT4gYW5kIGJvdGggdGhlc2UgdGVuZGVuY2llcwoJCQkJCWFyZSBpbmp1cmlvdXMgdG8gc3RhdGVzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjkuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpbgoJCQkJCWFkZGl0aW9uIHRvIHRoZXNlIHBvaW50cywgdGhvc2Ugd2hvIGhhdmUgYW4gZXhjZXNzIG9mIGZvcnR1bmUncyBnb29kcywgc3RyZW5ndGgsCgkJCQkJd2VhbHRoLCBmcmllbmRzIGFuZCB0aGUgbGlrZSwgYXJlIG5vdCB3aWxsaW5nIHRvIGJlIGdvdmVybmVkIGFuZCBkbyBub3Qga25vdyBob3cKCQkJCQl0byBiZSDvvIhhbmQgdGhleSBoYXZlIGFjcXVpcmVkIHRoaXMgcXVhbGl0eSBldmVuIGluIHRoZWlyIGJveWhvb2QgZnJvbQoJCQkJCXRoZWlyIGhvbWVsaWZlLCB3aGljaCB3YXMgc28gbHV4dXJpb3VzIHRoYXQgdGhleSBoYXZlIG5vdCBnb3QgdXNlZCB0byBzdWJtaXR0aW5nCgkJCQkJdG8gYXV0aG9yaXR5IGV2ZW4gaW4gc2Nob29s77yJLCB3aGlsZSB0aG9zZSB3aG8gYXJlIGV4Y2Vzc2l2ZWx5IGluIG5lZWQKCQkJCQlvZiB0aGVzZSB0aGluZ3MgYXJlIHRvbyBodW1ibGUuIEhlbmNlIHRoZSBsYXR0ZXIgY2xhc3MgZG8gbm90IGtub3cgaG93IHRvIGdvdmVybgoJCQkJCWJ1dCBrbm93IGhvdyB0byBzdWJtaXQgdG88bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+Z292ZXJubWVudAoJCQkJCW9mIGEgc2VydmlsZSBraW5kLCB3aGlsZSB0aGUgZm9ybWVyIGNsYXNzIGRvIG5vdCBrbm93IGhvdyB0byBzdWJtaXQgdG8gYW55CgkJCQkJZ292ZXJubWVudCwgYW5kIG9ubHkga25vdyBob3cgdG8gZ292ZXJuIGluIHRoZSBtYW5uZXIgb2YgYSBtYXN0ZXIuIDwvdHJhbnNsYXRpb24+"
translation['4.1296a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS42IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHJlc3VsdCBpcyBhIHN0YXRlIGNvbnNpc3Rpbmcgb2Ygc2xhdmVzCgkJCQkJYW5kIG1hc3RlcnMsIG5vdCBvZiBmcmVlIG1lbiwgYW5kIG9mIG9uZSBjbGFzcyBlbnZpb3VzIGFuZCBhbm90aGVyIGNvbnRlbXB0dW91cwoJCQkJCW9mIHRoZWlyIGZlbGxvd3MuIFRoaXMgY29uZGl0aW9uIG9mIGFmZmFpcnMgaXMgdmVyeSBmYXIgcmVtb3ZlZCBmcm9tCgkJCQkJZnJpZW5kbGluZXNzLCBhbmQgZnJvbSBwb2xpdGljYWwgcGFydG5lcnNoaXDigJRmb3IgZnJpZW5kbGluZXNzIGlzIGFuCgkJCQkJZWxlbWVudCBvZiBwYXJ0bmVyc2hpcCwgc2luY2UgbWVuIGFyZSBub3Qgd2lsbGluZyB0byBiZSBwYXJ0bmVycyB3aXRoIHRoZWlyCgkJCQkJZW5lbWllcyBldmVuIG9uIGEgam91cm5leS4gQnV0IHN1cmVseSB0aGUgaWRlYWwgb2YgdGhlIHN0YXRlIGlzIHRvIGNvbnNpc3QgYXMKCQkJCQltdWNoIGFzIHBvc3NpYmxlIG9mIHBlcnNvbnMgdGhhdCBhcmUgZXF1YWwgYW5kIGFsaWtlLCBhbmQgdGhpcyBzaW1pbGFyaXR5IGlzCgkJCQkJbW9zdCBmb3VuZCBpbiB0aGUgbWlkZGxlIGNsYXNzZXM7IHRoZXJlZm9yZSB0aGUgbWlkZGxlLWNsYXNzIHN0YXRlIHdpbGwKCQkJCQluZWNlc3NhcmlseSBiZSBiZXN0IGNvbnN0aXR1dGVkIGluIHJlc3BlY3Qgb2YgdGhvc2UgZWxlbWVudHM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UHJvYmFibHkgTGFtYmludXMncyBhbHRlcmF0aW9uIG9mIHRoZSBHcmVlayBzaG91bGQgYmUKCQkJCQkJYWNjZXB0ZWQsIGdpdmluZyDigJhoZW5jZSB0aGF0IHN0YXRlIHdpbGwgbmVjZXNzYXJpbHkgYmUgYmVzdAoJCQkJCQlnb3Zlcm5lZCB3aGljaCBjb25zaXN0cyBvZiB0aG9zZSBlbGVtZW50c+KAlC7igJk8L25vdGU+IG9mCgkJCQkJd2hpY2ggd2Ugc2F5IHRoYXQgdGhlIHN0YXRlIGlzIGJ5IG5hdHVyZSBjb21wb3NlZC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgYWxzbyB0aGlzIGNsYXNzIG9mIGNpdGl6ZW5zIGhhdmUgdGhlIGdyZWF0ZXN0IHNlY3VyaXR5CgkJCQkJaW4gdGhlIHN0YXRlczsgZm9yIHRoZXkgZG8gbm90IHRoZW1zZWx2ZXMgY292ZXQgb3RoZXIgbWVuJ3MgZ29vZHMgYXMgZG8gdGhlCgkJCQkJcG9vciwgbm9yIGRvIHRoZSBvdGhlciBjbGFzc2VzIGNvdmV0IHRoZWlyIHN1YnN0YW5jZSBhcyB0aGUgcG9vciBjb3ZldCB0aGF0IG9mCgkJCQkJdGhlIHJpY2g7IGFuZCBiZWNhdXNlIHRoZXkgYXJlIG5laXRoZXIgcGxvdHRlZCBhZ2FpbnN0IG5vciBwbG90dGluZyB0aGV5IGxpdmUKCQkJCQlmcmVlIGZyb20gZGFuZ2VyLiBCZWNhdXNlIG9mIHRoaXMgaXQgd2FzIGEgZ29vZCBwcmF5ZXIgb2YgUGhvY3lsaWRlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIGdub21pYyBwb2V0IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWlsZXR1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTWlsZXR1cyI+TWlsZXR1czwvcGxhY2VOYW1lPiwgYm9ybiA8ZGF0ZSBhdXRobmFtZT0iLTU2MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTU2MCI+NTYwPC9kYXRlPiBCLkMuPC9ub3RlPuKAlCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1pbGV0dXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1pbGV0dXMiPk1pbGV0dXM8L3BsYWNlTmFtZT4sIGJvcm4gPGRhdGUgYXV0aG5hbWU9Ii01NjAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii01NjAiPjU2MDwvZGF0ZT4gQi5DLjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5JbiBtYW55IHRoaW5ncyB0aGUgbWlkZGxlIGhhdmUgdGhlIGJlc3Q7PC9sPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPkJlIG1pbmUgYSBtaWRkbGUgc3RhdGlvbi48L2w+CgkJCQkJPC9xdW90ZT4KCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPkluIG1hbnkgdGhpbmdzIHRoZSBtaWRkbGUgaGF2ZSB0aGUgYmVzdDs8L2w+CgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QmUgbWluZSBhIG1pZGRsZSBzdGF0aW9uLjwvbD4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjkuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IGlzIGNsZWFyIHRoZXJlZm9yZSBhbHNvIHRoYXQgdGhlCgkJCQkJcG9saXRpY2FsIGNvbW11bml0eSBhZG1pbmlzdGVyZWQgYnkgdGhlIG1pZGRsZSBjbGFzcyBpcyB0aGUgYmVzdCwgYW5kIHRoYXQgaXQgaXMKCQkJCQlwb3NzaWJsZSBmb3IgdGhvc2Ugc3RhdGVzIHRvIGJlIHdlbGwgZ292ZXJuZWQgdGhhdCBhcmUgb2YgdGhlIGtpbmQgaW4gd2hpY2ggdGhlCgkJCQkJbWlkZGxlIGNsYXNzIGlzIG51bWVyb3VzLCBhbmQgcHJlZmVyYWJseSBzdHJvbmdlciB0aGFuIGJvdGggdGhlIG90aGVyIHR3bwoJCQkJCWNsYXNzZXMsIG9yIGF0IGFsbCBldmVudHMgdGhhbiBvbmUgb2YgdGhlbSwgZm9yIGJ5IHRocm93aW5nIGluIGl0cyB3ZWlnaHQgaXQKCQkJCQlzd2F5cyB0aGUgYmFsYW5jZSBhbmQgcHJldmVudHMgdGhlIG9wcG9zaXRlIGV4dHJlbWVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gZXh0cmVtZSBkZW1vY3JhY3kgYW5kIHZlcnkgbGltaXRlZCBvbGlnYXJjaHkuPC9ub3RlPgoJCQkJCWZyb20gY29taW5nIGludG8gZXhpc3RlbmNlLiBIZW5jZSBpdCBpcyB0aGUgZ3JlYXRlc3QgZ29vZCBmb3J0dW5lIGlmIHRoZSBtZW4KCQkJCQl0aGF0IGhhdmUgcG9saXRpY2FsIHBvd2VyIHBvc3Nlc3MgYSBtb2RlcmF0ZSBhbmQgc3VmZmljaWVudCBzdWJzdGFuY2UsCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjk2YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['4.1296a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnNpbmNlIHdoZXJlIHNvbWUgb3duIGEgdmVyeSBncmVhdCBkZWFsIG9mIHByb3BlcnR5IGFuZCBvdGhlcnMKCQkJCQlub25lIHRoZXJlIGNvbWVzIGFib3V0IGVpdGhlciBhbiBleHRyZW1lIGRlbW9jcmFjeSBvciBhbiB1bm1peGVkIG9saWdhcmNoeSwgb3IgYQoJCQkJCXR5cmFubnkgbWF5IHJlc3VsdCBmcm9tIGJvdGggb2YgdGhlIHR3byBleHRyZW1lcywgZm9yIHR5cmFubnkgc3ByaW5ncyBmcm9tIGJvdGgKCQkJCQlkZW1vY3JhY3kgYW5kIG9saWdhcmNoeSBvZiB0aGUgbW9zdCB1bmJyaWRsZWQga2luZCwgYnV0IG11Y2ggbGVzcyBvZnRlbiBmcm9tIHRoZQoJCQkJCW1pZGRsZSBmb3JtcyBvZiBjb25zdGl0dXRpb24gYW5kIHRob3NlIG5lYXIgdG8gdGhlbS4gVGhlIGNhdXNlIG9mIHRoaXMgd2Ugd2lsbAoJCQkJCXNwZWFrIG9mIGxhdGVyIGluIG91ciB0cmVhdG1lbnQgb2YgcG9saXRpY2FsIHJldm9sdXRpb25zLiA8L3RyYW5zbGF0aW9uPg=="
translation['4.1296a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS45IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhhdCB0aGUgbWlkZGxlIGZvcm0gb2YgY29uc3RpdHV0aW9uIGlzIHRoZSBiZXN0IGlzCgkJCQkJZXZpZGVudDsgZm9yIGl0IGFsb25lIGlzIGZyZWUgZnJvbSBmYWN0aW9uLCBzaW5jZSB3aGVyZSB0aGUgbWlkZGxlIGNsYXNzIGlzCgkJCQkJbnVtZXJvdXMsIGZhY3Rpb25zIGFuZCBwYXJ0eSBkaXZpc2lvbnMgYW1vbmcgdGhlIGNpdGl6ZW5zIGFyZSBsZWFzdCBsaWtlbHkgdG8KCQkJCQlvY2N1ci4gQW5kIHRoZSBncmVhdCBzdGF0ZXMgYXJlIG1vcmUgZnJlZSBmcm9tIGZhY3Rpb24gZm9yIHRoZSBzYW1lIHJlYXNvbiwKCQkJCQliZWNhdXNlIHRoZSBtaWRkbGUgY2xhc3MgaXMgbnVtZXJvdXMsIHdoZXJlYXMgaW4gdGhlIHNtYWxsIHN0YXRlcyBpdCBpcyBlYXN5IHRvCgkJCQkJZGl2aWRlIHRoZSB3aG9sZSBwZW9wbGUgaW50byB0d28gcGFydGllcyBsZWF2aW5nIG5vdGhpbmcgaW4gYmV0d2VlbiwgYW5kIGFsc28KCQkJCQlhbG1vc3QgZXZlcnlib2R5IGlzIG5lZWR5IG9yIHdlYWx0aHkuIEFsc28gZGVtb2NyYWNpZXMgYXJlIG1vcmUgc2VjdXJlIGFuZCBtb3JlCgkJCQkJbG9uZy1saXZlZCB0aGFuIG9saWdhcmNoaWVzIG93aW5nIHRvIHRoZSBjaXRpemVucyBvZiB0aGUgbWlkZGxlIGNsYXNzCgkJCQkJ77yIZm9yIHRoZXkgYXJlIG1vcmUgbnVtZXJvdXMgYW5kIGhhdmUgYSBsYXJnZXIgc2hhcmUgb2YgdGhlIGhvbm9ycyBpbgoJCQkJCWRlbW9jcmFjaWVzIHRoYW4gaW4gb2xpZ2FyY2hpZXPvvIksIHNpbmNlIHdoZW4gdGhlIHBvb3IgYXJlIGluIGEgbWFqb3JpdHkKCQkJCQl3aXRob3V0IHRoZSBtaWRkbGUgY2xhc3MsIGFkdmVyc2l0eSBzZXRzIGluIGFuZCB0aGV5IGFyZSBzb29uIHJ1aW5lZC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGl0IG11c3QgYmUgZGVlbWVkIGEgc2lnbmlmaWNhbnQgZmFjdAoJCQkJCXRoYXQgdGhlIGJlc3QgbGF3Z2l2ZXJzIGFyZSBmcm9tIGFtb25nIHRoZSBtaWRkbGUgY2l0aXplbnM7IGZvciBTb2xvbiB3YXMgb2YKCQkJCQl0aGF0IGNsYXNzLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hcyBhcHBlYXJzIGZyb20gaGlzCgkJCQkJcG9ldHJ5LCBhbmQgc28gd2FzIEx5Y3VyZ3VzIO+8iGZvciBoZSB3YXMgbm90IGEga2luZ++8iSBhbmQKCQkJCQlDaGFyb25kYXMgYW5kIGFsbW9zdCB0aGUgZ3JlYXRlc3QgbnVtYmVyIG9mIHRoZSBvdGhlciBsYXdnaXZlcnMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCB0aGVzZSBjb25zaWRlcmF0aW9ucyBhbHNvIHNob3cgdGhlIHJlYXNvbiB3aHkgdGhlCgkJCQkJY29uc3RpdHV0aW9ucyBvZiBtb3N0IHN0YXRlcyBhcmUgZWl0aGVyIGRlbW9jcmF0aWMgb3Igb2xpZ2FyY2hpY2FsOyBvd2luZyB0byB0aGUKCQkJCQltaWRkbGUgY2xhc3MgaW4gdGhlc2Ugc3RhdGVzIGJlaW5nIG9mdGVuIGEgc21hbGwgb25lLCB0aGUgY2xhc3NlcyBkaXZlcmdpbmcgZnJvbQoJCQkJCXRoZSBtaWRkbGUgc3RhdHVz4oCUd2hpY2hldmVyIG9mIHRoZSB0d28sIHRoZSBvd25lcnMgb2YgdGhlIGVzdGF0ZXMgb3IKCQkJCQl0aGUgcGVvcGxlLCBmcm9tIHRpbWUgdG8gdGltZSBoYXMgdGhlIHVwcGVyIGhhbmTigJRjb25kdWN0IHRoZQoJCQkJCWdvdmVybm1lbnQgb24gdGhlaXIgb3duIGxpbmVzLCBzbyB0aGF0IGl0IGJlY29tZXMgZWl0aGVyIGEgZGVtb2NyYWN5IG9yIGFuCgkJCQkJb2xpZ2FyY2h5LiA8L3RyYW5zbGF0aW9uPg=="
translation['4.1296b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpbiBhZGRpdGlvbiB0byB0aGlzLAoJCQkJCWJlY2F1c2UgZmFjdGlvbnMgb2NjdXIgYW5kIGZpZ2h0cyBiZXR3ZWVuIHRoZSBwZW9wbGUgYW5kIHRoZSB3ZWFsdGh5LCB3aGljaGV2ZXIKCQkJCQlwYXJ0eSBoYXBwZW5zIHRvIGdhaW4gdGhlIHVwcGVyIGhhbmQgb3ZlciBpdHMgb3Bwb25lbnRzIGRvZXMgbm90IGVzdGFibGlzaCBhCgkJCQkJY29tbW9uIG9yIGVxdWFsIGdvdmVybm1lbnQsIGJ1dCB0YWtlcyB0aGUgc3VwZXJpb3Igc2hhcmUgaW4gdGhlIGdvdmVybm1lbnQgYXMgYQoJCQkJCXByaXplIG9mIHZpY3RvcnksIGFuZCBtYWtlcyBpdCBhIGRlbW9jcmFjeSBpbiB0aGUgb25lIGNhc2UgYW5kIGFuIG9saWdhcmNoeSBpbgoJCQkJCXRoZSBvdGhlci4gTW9yZW92ZXIgZWFjaCBvZiB0aGUgdHdvIHN0YXRlcyB0aGF0IGluIHRoZSBwYXN0IGhlbGQgdGhlIGxlYWRlcnNoaXAKCQkJCQlvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gdG9vayBhcyBhIHBhdHRlcm4gdGhlIGZvcm0gb2YKCQkJCQlnb3Zlcm5tZW50IHRoYXQgZXhpc3RlZCBhbW9uZyB0aGVtc2VsdmVzIGFuZCBzZXQgdXAgaW4gdGhlIG9uZSBjYXNlIGRlbW9jcmFjaWVzCgkJCQkJYW5kIGluIHRoZSBvdGhlciBvbGlnYXJjaGllcyBpbiB0aGUgY2l0aWVzLCBub3QgY29uc2lkZXJpbmcgdGhlIGludGVyZXN0IG9mIHRoZQoJCQkJCWNpdGllcyBidXQgdGhlaXIgb3duIGFkdmFudGFnZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+SGVuY2Ugb3dpbmcgdG8gdGhlc2UgY2F1c2VzIHRoZSBtaWRkbGUgZm9ybSBvZiBjb25zdGl0dXRpb24gZWl0aGVyIG5ldmVyIGNvbWVzCgkJCQkJaW50byBleGlzdGVuY2Ugb3Igc2VsZG9tIGFuZCBpbiBmZXcgcGxhY2VzOyBmb3Igb25lIG1hbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JdCBpcyBxdWl0ZSB1bmNlcnRhaW4gd2hvIGlzIG1lYW50LCBwb3NzaWJseSBTb2xvbiBvcgoJCQkJCQlUaGVyYW1lbmVzLjwvbm90ZT4gb25seSBhbW9uZyB0aGUgc3RhdGVzIHRoYXQgaGF2ZSBmb3JtZXJseSBoZWxkIHRoZQoJCQkJCWxlYWRlcnNoaXAgd2FzIGluZHVjZWQgdG8gZ3JhbnQgdGhpcyBmb3JtIG9mIG9yZ2FuaXphdGlvbiwgYW5kIGJ5IHRoaXMgdGltZSBpdAoJCQkJCWhhcyBiZWNvbWUgYSBmaXhlZCBoYWJpdCB3aXRoIHRoZSBwZW9wbGUgb2YgdGhlIHNlcGFyYXRlIGNpdGllcyBhbHNvIG5vdCBldmVuIHRvCgkJCQkJZGVzaXJlIGVxdWFsaXR5LCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI5NmIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['4.1296b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCBlaXRoZXIgdG8gc2VlayB0byBydWxlIG9yIHRvIGVuZHVyZSBiZWluZyB1bmRlcgoJCQkJCWEgbWFzdGVyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVzZSBjb25zaWRlcmF0aW9ucyB0aGVyZWZvcmUgbWFrZSBpdAoJCQkJCWNsZWFyIHdoaWNoIGlzIHRoZSBiZXN0IGNvbnN0aXR1dGlvbiwgYW5kIHdoeSBpdCBpcyB0aGUgYmVzdDsgPC90cmFuc2xhdGlvbj4="
translation['4.1296b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBub3cgdGhhdCB0aGUgYmVzdCBoYXMgYmVlbiBkZWZpbmVkLCBpdAoJCQkJCWlzIG5vdCBkaWZmaWN1bHQgdG8gc2VlLCBhbW9uZyB0aGUgb3RoZXIgZm9ybXMgb2YgY29uc3RpdHV0aW9uCgkJCQkJ77yIaW5hc211Y2ggYXMgd2UgcHJvbm91bmNlIHRoYXQgdGhlcmUgYXJlIHZhcmlvdXMgZm9ybXMgb2YgZGVtb2NyYWN5IGFuZAoJCQkJCXZhcmlvdXMgb2xpZ2FyY2hpZXPvvIksIHdoYXQga2luZCBpcyB0byBiZSBwbGFjZWQgZmlyc3QsIHdoYXQgc2Vjb25kLCBhbmQKCQkJCQl3aGF0IG5leHQgaW4gdGhpcyBvcmRlciwgYnkgcmVhc29uIG9mIG9uZSBiZWluZyBiZXR0ZXIgYW5kIGFub3RoZXIgd29yc2UuIEZvciBhdAoJCQkJCWVhY2ggc3RhZ2UgdGhlIGZvcm0gbmVhcmVzdCB0byB0aGUgYmVzdCBvbmUgbXVzdCBuZWNlc3NhcmlseSBiZSBzdXBlcmlvciwgYW5kCgkJCQkJdGhlIGZvcm0gdGhhdCBpcyBtb3JlIHJlbW90ZSBmcm9tIHRoZSBtaWRkbGUgbXVzdCBiZSBpbmZlcmlvcuKAlHVubGVzcwoJCQkJCW9uZSBpcyBqdWRnaW5nIHJlbGF0aXZlbHkgdG8gZ2l2ZW4gY29uZGl0aW9uczogSSBtYWtlIHRoaXMgcmVzZXJ2YXRpb24gYmVjYXVzZQoJCQkJCWl0IGlzIHF1aXRlIHBvc3NpYmxlIHRoYXQgYWx0aG91Z2ggb25lIGZvcm0gb2YgY29uc3RpdHV0aW9uIGlzIHByZWZlcmFibGUgaXQgbWF5CgkJCQkJb2Z0ZW4gYmUgbW9yZSBhZHZhbnRhZ2VvdXMgZm9yIGNlcnRhaW4gcGVvcGxlIHRvIGhhdmUgYW5vdGhlciBmb3JtLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgbmV4dAoJCQkJCXRoaW5nIGFmdGVyIHdoYXQgaGFzIGJlZW4gc2FpZCBpcyB0byBkaXNjdXNzIHdoaWNoIGNvbnN0aXR1dGlvbiBpcyBhZHZhbnRhZ2VvdXMKCQkJCQlmb3Igd2hpY2ggcGVvcGxlLCBhbmQgd2hhdCBzb3J0IG9mIGNvbnN0aXR1dGlvbiBmb3Igd2hhdCBzb3J0IG9mIHBlb3BsZS4gTm93IHdlCgkJCQkJbXVzdCBmaXJzdCBncmFzcCBhIGdlbmVyYWwgcHJpbmNpcGxlIHRoYXQgYXBwbGllcyBlcXVhbGx5IHRvIGFsbCBzb3J0cyBvZgoJCQkJCWNvbnN0aXR1dGlvbjogaXQgaXMgZXNzZW50aWFsIHRoYXQgdGhlIHBhcnQgb2YgdGhlIHN0YXRlIHRoYXQgd2lzaGVzIHRoZQoJCQkJCWNvbnN0aXR1dGlvbiB0byByZW1haW4gc2hvdWxkIGJlIHN0cm9uZ2VyIHRoYW4gdGhlIHBhcnQgdGhhdCBkb2VzIG5vdCB3aXNoIGl0LgoJCQkJCUJ1dCBldmVyeSBzdGF0ZSBjb25zaXN0cyBvZiBib3RoIHF1YWxpdHkgYW5kIHF1YW50aXR5OiBieSBxdWFsaXR5IEkgbWVhbgoJCQkJCWZyZWVkb20sIHdlYWx0aCwgZWR1Y2F0aW9uLCBnb29kIGJpcnRoLCBhbmQgYnkgcXVhbnRpdHkgdGhlIHN1cGVyaW9yIG51bWJlcnMgb2YKCQkJCQl0aGUgbXVsdGl0dWRlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgaXQgaXMgcG9zc2libGUKCQkJCQkJdGhhdCw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+d2hpbGUgdGhlIHF1YWxpdHkgb2YgdGhlCgkJCQkJc3RhdGUgYmVsb25ncyB0byBvbmUgYW1vbmcgdGhlIHBhcnRzIG9mIHdoaWNoIHRoZSBzdGF0ZSBjb25zaXN0cyBhbmQgaXRzCgkJCQkJcXVhbnRpdHkgdG8gYW5vdGhlciBwYXJ04oCUZm9yIGV4YW1wbGUgdGhlIGxvdy1ib3JuIG1heSBiZSBtb3JlIG51bWVyb3VzCgkJCQkJdGhhbiB0aGUgbm9ibGUgb3IgdGhlIHBvb3IgdGhhbiB0aGUgcmljaCwgeWV0IHRoZSBtb3JlIG51bWVyb3VzIGNsYXNzIG1heSBub3QKCQkJCQlleGNlZWQgaW4gcXVhbnRpdHkgYXMgbXVjaCBhcyB0aGV5IGZhbGwgYmVoaW5kIGluIHF1YWxpdHkuIEhlbmNlIHRoZXNlIHR3bwoJCQkJCWZhY3RvcnMgaGF2ZSB0byBiZSBqdWRnZWQgaW4gY29tcGFyaXNvbiB3aXRoIG9uZSBhbm90aGVyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVyZSB0aGVyZWZvcmUgdGhlIG11bHRpdHVkZSBvZiB0aGUgcG9vciBleGNlZWRzIGluIHRoZQoJCQkJCXByb3BvcnRpb24gc3RhdGVkLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHNvIGFzIHRvIG91dGJhbGFuY2UKCQkJCQkJdGhlaXIgaW5mZXJpb3JpdHkgaW4gcXVhbGl0eS48L25vdGU+IGhlcmUgaXQgaXMgbmF0dXJhbCBmb3IgdGhlcmUgdG8gYmUKCQkJCQlkZW1vY3JhY3ksIGFuZCBlYWNoIGtpbmQgb2YgZGVtb2NyYWN5IGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgc3VwZXJpb3IgbnVtYmVyIG9mCgkJCQkJdGhlIGNvbW1vbiBwZW9wbGUgb2YgZWFjaCBzb3J0LCBmb3IgZXhhbXBsZSBpZiB0aGUgbnVtYmVyIG9mIHRoZSBmYXJtaW5nIGNsYXNzCgkJCQkJZXhjZWVkcywgdGhlIGZpcnN0IHNvcnQgb2YgZGVtb2NyYWN5LCBidXQgaWYgdGhhdCBvZiB0aGUgY29tbW9uIGxhYm9yZXJzIGFuZAoJCQkJCXdhZ2UtZWFybmVycywgdGhlIGxhc3Qgc29ydCwgYW5kIHNpbWlsYXJseSBhbHNvIHdpdGggdGhlIG90aGVyIHNvcnRzIHRoYXQgbGllCgkJCQkJYmV0d2VlbiB0aGVzZSB0d287IDwvdHJhbnNsYXRpb24+"
translation['4.1297a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCB3aGVyZSB0aGUKCQkJCQljbGFzcyBvZiB0aGUgd2VsbC10by1kbyBhbmQgbm90YWJsZSBleGNlZWRzIGluIHF1YWxpdHkgbW9yZSB0aGFuIGl0IGZhbGxzIGJlaGluZAoJCQkJCWluIHF1YW50aXR5LCBoZXJlIGl0IGlzIG5hdHVyYWwgZm9yIHRoZXJlIHRvIGJlIGFuIG9saWdhcmNoeSwgYW5kIGxpa2V3aXNlIHRoZQoJCQkJCXZhcmlvdXMga2luZHMgb2Ygb2xpZ2FyY2h5IGFjY29yZGluZyB0byB0aGUgZGVncmVlIG9mIHN1cGVyaW9yaXR5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gc3VwZXJpb3JpdHkgaW4gcXVhbGl0eS48L25vdGU+IG9mIHRoZQoJCQkJCW9saWdhcmNoaWNhbCBtdWx0aXR1ZGUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSB3b3JkIGlzIGxvb3NlbHkKCQkJCQkJdXNlZCBvZiB0aGlzIHNtYWxsIGNsYXNzLjwvbm90ZT4gQnV0IHRoZSBsYXdnaXZlciBpbiBoaXMgY29uc3RpdHV0aW9uIG11c3QKCQkJCQlhbHdheXMgdGFrZSBpbiB0aGUgbWlkZGxlIGNsYXNzOyBpZiBoZSBpcyBtYWtpbmcgdGhlIGxhd3Mgb2YgYW4gb2xpZ2FyY2hpY2FsCgkJCQkJY2hhcmFjdGVyIGhlIG11c3Qga2VlcCB0aGUgbWlkZGxlIGNsYXNzIGluIHZpZXcsIGFuZCBpZiBkZW1vY3JhdGljLCBoZSBtdXN0CgkJCQkJbGVnaXNsYXRlIHNvIGFzIHRvIGJyaW5nIHRoZW0gaW4uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB3aGVyZSB0aGUgbnVtYmVyIG9mIHRoZSBtaWRkbGUgY2xhc3MgZXhjZWVkcyBib3RoIHRoZSBleHRyZW1lIGNsYXNzZXMKCQkJCQl0b2dldGhlciwgb3IgZXZlbiBvbmUgb2YgdGhlbSBvbmx5LCBoZXJlIGl0IGlzIHBvc3NpYmxlIGZvciBhIGNvbnN0aXR1dGlvbmFsCgkJCQkJZ292ZXJubWVudCB0byBiZSBsYXN0aW5nOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI5N2EiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['4.1297a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGVyZSBpcyBubyBmZWFyIG9mIHRoZSByaWNoIGV2ZXIgY29taW5nIHRvCgkJCQkJdGVybXMgd2l0aCB0aGUgcG9vciBhZ2FpbnN0IHRoaXMgbnVtZXJvdXMgbWlkZGxlIGNsYXNzOyBmb3IgbmVpdGhlciBjbGFzcyB3aWxsCgkJCQkJZXZlciB3aXNoIHRvIGJlIHN1YmplY3QgdG8gdGhlIG90aGVyLCBhbmQgaWYgdGhleSBsb29rIGZvciBhbm90aGVyIGNvbnN0aXR1dGlvbgoJCQkJCWZhaXJlciB0byBib3RoIHRoYW4gdGhpcyB0aGV5IHdpbGwgbm90IGZpbmQgb25lLCBmb3IgdGhleSB3b3VsZCBub3QgZW5kdXJlIHRvCgkJCQkJdGFrZSB0dXJucyB0byBnb3Zlcm4gYmVjYXVzZSB0aGV5IGRpc3RydXN0IGVhY2ggb3RoZXI6IGV2ZXJ5d2hlcmUgaXQgaXMgdGhlCgkJCQkJYXJiaXRyYXRvciB0aGF0IGlzIG1vc3QgdHJ1c3RlZCwgYW5kIHRoZSBtYW4gaW4gdGhlIG1pZGRsZSBpcyBhbiBhcmJpdHJhdG9yLiBBbmQKCQkJCQl0aGUgYmV0dGVyIHRoZSBjb25zdGl0dXRpb24gaXMgbWl4ZWQsIHRoZSBtb3JlIHBlcm1hbmVudCBpdCBpczsgPC90cmFuc2xhdGlvbj4="
translation['4.1297a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBtYW55IGV2ZW4gb2YgdGhvc2Ugd2hvIHdhbnQgdG8KCQkJCQllc3RhYmxpc2ggYXJpc3RvY3JhdGljIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiBtYWtlIGEgZ3JlYXQgbWlzdGFrZSBub3Qgb25seSBpbgoJCQkJCWdpdmluZyB0b28gbGFyZ2UgYSBzaGFyZSB0byB0aGUgd2VsbC10by1kbyBidXQgYWxzbyBpbiBjaGVhdGluZyB0aGUgcGVvcGxlOyBmb3IKCQkJCQlmYWxzZSBiZW5lZml0cyBpbmV2aXRhYmx5IHJlc3VsdCB1bHRpbWF0ZWx5IGluIHRydWUgZXZpbCwgYXMgdGhlIGVuY3JvYWNobWVudHMKCQkJCQlvZiB0aGUgcmljaCBydWluIHRoZSBjb25zdGl0dXRpb24gbW9yZSB0aGFuIHRob3NlIG9mIHRoZSBwZW9wbGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC42IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZQoJCQkJCWFydGlmaWNlcyBlbXBsb3llZCBpbiBjb25zdGl0dXRpb25zIGFzIGEgcHJldGV4dCBpbiByZWdhcmQgdG8gdGhlIHBlb3BsZSBhcmUKCQkJCQlmaXZlIGluIG51bWJlciwgYW5kIGFyZSBjb25jZXJuZWQgd2l0aCB0aGUgYXNzZW1ibHksIHRoZSBtYWdpc3RyYWNpZXMsIHRoZQoJCQkJCWxhdy1jb3VydHMsIHRoZSBiZWFyaW5nIG9mIGhlYXZ5IGFybXMsIGFuZCBneW1uYXN0aWMgZXhlcmNpc2VzOyBpbiByZWxhdGlvbiB0bwoJCQkJCXRoZSBhc3NlbWJseSwgdGhlIGdyYW50aW5nIHRvIGFsbCBvZiB0aGUgcmlnaHQgdG8gYXR0ZW5kIGJ1dCB0aGUgaW1wb3NpdGlvbiBvZiBhCgkJCQkJZmluZSBmb3Igbm9uLWF0dGVuZGFuY2Ugb24gdGhlIHdlbGwtdG8tZG8gb25seSwgb3IgYSBtdWNoIGxhcmdlciBmaW5lIG9uIHRoZW0KCQkJCQl0aGFuIG90aGVyczsgaW4gcmVsYXRpb24gdG8gdGhlIG1hZ2lzdHJhY2llcyw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIGRlbmlhbCB0byB0aGUgb3duZXJzIG9mIHJhdGVkIHByb3BlcnR5IG9mIHRoZSByaWdodCB0bwoJCQkJCXN3ZWFyIG9mZiBzZXJ2aW5nLCB3aGlsZSB0aGUgcG9vciBoYXZlIHRoaXMgcmlnaHQ7IGluIHJlbGF0aW9uIHRvIHRoZQoJCQkJCWxhdy1jb3VydHMsIHRoZSBpbXBvc2l0aW9uIG9mIGEgZmluZSBvbiB0aGUgd2VsbC10by1kbyBpZiB0aGV5IGRvIG5vdCBzZXJ2ZSBvbiBhCgkJCQkJanVyeSwgYnV0IG5vIHBlbmFsdHkgZm9yIHRoZSBwb29yLCBvciBlbHNlIGEgbGFyZ2UgZmluZSBmb3IgdGhlIG9uZSBjbGFzcyBhbmQgYQoJCQkJCXNtYWxsIG9uZSBmb3IgdGhlIG90aGVycywgYXMgaW4gdGhlIGxhd3Mgb2YgQ2hhcm9uZGFzLiA8L3RyYW5zbGF0aW9uPg=="
translation['4.1297b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkluIHNvbWUgcGxhY2VzIGFsbCBoYXZlIHRoZSByaWdodCB0byBzZXJ2ZSBpbiB0aGUKCQkJCQlhc3NlbWJseSBhbmQgb24ganVyaWVzIGFmdGVyIGhhdmluZyB0aGVpciBuYW1lcyBwdXQgb24gYSByZWdpc3RlciwgYnV0IGxhcmdlCgkJCQkJZmluZXMgYXJlIGltcG9zZWQgb24gdGhvc2Ugd2hvIGFmdGVyIHNvIHJlZ2lzdGVyaW5nIGZhaWwgdG8gYXR0ZW5kIGluIGVpdGhlcgoJCQkJCWNhcGFjaXR5LCBpbiBvcmRlciB0aGF0IHRoZSBmaW5lIG1heSBjYXVzZSB0aGVtIHRvIGF2b2lkIHJlZ2lzdHJhdGlvbiBhbmQgdGhhdAoJCQkJCW93aW5nIHRvIHRoZWlyIG5vdCByZWdpc3RlcmluZyB0aGV5IG1heSBub3Qgc2VydmUgb24ganVyaWVzIG9yIGluIHRoZSBhc3NlbWJseS4KCQkJCQlUaGV5IGFsc28gbGVnaXNsYXRlIGluIHRoZSBzYW1lIG1hbm5lciBhYm91dCBvd25pbmcgaGVhdnkgYXJtcyBhbmQgZW5nYWdpbmcgaW4KCQkJCQlneW1uYXN0aWMgZXhlcmNpc2VzOiB0aGUgcG9vciBhcmUgbm90IGFsbG93ZWQgdG8gcG9zc2VzcyBhcm1zLCBidXQgdGhlCgkJCQkJd2VsbC10by1kbyBhcmUgbGlhYmxlIHRvIGEgZmluZSBpZiB0aGV5IGhhdmUgbm90IGdvdCB0aGVtLCBhbmQgdGhlcmUgaXMgbm8gZmluZQoJCQkJCWZvciB0aGUgZm9ybWVyIGNsYXNzIGlmIHRoZXkgYWJzdGFpbiBmcm9tIGd5bW5hc3RpY3MsIGJ1dCB0aGUgd2VsbC10by1kbyBhcmUKCQkJCQlsaWFibGUgdG8gYSBmaW5lLCBpbiBvcmRlciB0aGF0IHRoZSBvbmUgY2xhc3MgYmVjYXVzZSBvZiB0aGUgZmluZSBtYXkgdGFrZSBwYXJ0CgkJCQkJaW4gdGhlbSBhbmQgdGhlIG90aGVyIGJlY2F1c2UgdGhleSBoYXZlIG5vIHBlbmFsdHkgdG8gZmVhciBtYXkgbm90LiBUaGVzZQoJCQkJCWFydGlmaWNlcyBvZiBsZWdpc2xhdGlvbiB0aGVuIGFyZSBvZiBhbiBvbGlnYXJjaGljIG5hdHVyZTsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC44IiB1bml0PSJMb2ViIGNoYXAiIC8+aW4gZGVtb2NyYWNpZXMgdGhleSBpbnRyb2R1Y2UgY29udHJhcnkgZGV2aWNlcyBpbgoJCQkJCXJlZ2FyZCB0byB0aGVzZSBtYXR0ZXJzOiB0aGV5IHByb3ZpZGUgcGF5IGZvciB0aGUgcG9vciBmb3Igc2VydmluZyBpbiB0aGUKCQkJCQlhc3NlbWJseSBhbmQgb24ganVyaWVzIGFuZCBpbXBvc2Ugbm8gZmluZSB1cG9uIHRoZSB3ZWxsLXRvLWRvIGZvciBhYnN0YWluaW5nLgoJCQkJCUhlbmNlIGl0IGlzIG1hbmlmZXN0IHRoYXQgaWYgYW55Ym9keSB3aXNoZXMgdG8gbWFrZSBhIGp1c3QgYmxlbmQsIGhlIG11c3QgYnJpbmcKCQkJCQl0b2dldGhlciB0aGUgcmVndWxhdGlvbnMgZXhpc3RpbmcgaW4gZWFjaCBvZiB0aGUgdHdvIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiwgYW5kCgkJCQkJcHJvdmlkZSBwYXkgZm9yIGF0dGVuZGFuY2UgYW5kIGEgZmluZSBmb3Igbm9uLWF0dGVuZGFuY2U7IGZvciB0aHVzIGFsbCB3b3VsZAoJCQkJCXBhcnRpY2lwYXRlLCB3aGVyZWFzIGluIHRoZSBvdGhlciB3YXkgdGhlIGdvdmVybm1lbnQgY29tZXMgdG8gYmUgaW4gdGhlIGhhbmRzIG9mCgkJCQkJb25seSBvbmUgb2YgdGhlIHR3byBjbGFzc2VzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI5N2IiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['4.1297b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkFuZCBhbHRob3VnaCBpdCBpcyBwcm9wZXIgdGhhdCB0aGUgZ292ZXJubWVudAoJCQkJCXNob3VsZCBiZSBkcmF3biBvbmx5IGZyb20gdGhvc2Ugd2hvIHBvc3Nlc3MgaGVhdnkgYXJtb3IsIHlldCBpdCBpcyBub3QgcG9zc2libGUKCQkJCQl0byBkZWZpbmUgdGhlIGFtb3VudCBvZiB0aGUgcHJvcGVydHktcXVhbGlmaWNhdGlvbiBhYnNvbHV0ZWx5IGFuZCB0byBzYXkgdGhhdAoJCQkJCXRoZXkgbXVzdCBwb3NzZXNzIHNvIG11Y2gsIGJ1dCBvbmx5IHRvIGNvbnNpZGVyIHdoYXQgc29ydCBvZiBhbW91bnQgaXMgdGhlCgkJCQkJaGlnaGVzdCB0aGF0IGlzIGNvbXBhdGlibGUgd2l0aCBtYWtpbmcgdGhvc2Ugd2hvIGhhdmUgYSBzaGFyZSBpbiB0aGUKCQkJCQljb25zdGl0dXRpb24gbW9yZSBudW1lcm91cyB0aGFuIHRob3NlIHdobyBoYXZlIG5vdCwgYW5kIHRvIGZpeCB0aGF0IGxpbWl0LgoJCQkJCQk8L3RyYW5zbGF0aW9uPg=="
translation['4.1297b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciB0aG9zZSB3aG8gYXJlIHBvb3IgYW5kIGhhdmUKCQkJCQlubyBzaGFyZSBpbiB0aGUgaG9ub3JzIGFyZSB3aWxsaW5nIHRvIGtlZXAgcXVpZXQgaWYgbm8gb25lIGluc3VsdHMgdGhlbSBvciB0YWtlcwoJCQkJCWF3YXkgYW55IHBhcnQgb2YgdGhlaXIgc3Vic3RhbmNlOyBidXQgdGhpcyBpcyBub3QgZWFzeSB0byBzZWN1cmUsIGZvciBpdCBkb2VzCgkJCQkJbm90IGFsd2F5cyBoYXBwZW4gdGhhdCB0aG9zZSB3aG8gYXJlIGluIHRoZSBnb3Zlcm5pbmcgY2xhc3MgYXJlIGdlbnRsZW1lbi4gQWxzbwoJCQkJCXBlb3BsZSBoYXZlIGEgd2F5IG9mIGJlaW5nIHJlbHVjdGFudCB0byBzZXJ2ZSB3aGVuIHRoZXJlIGlzIGEgd2FyIGlmIHRoZXkgZG8gbm90CgkJCQkJZ2V0IHJhdGlvbnMgYW5kIGFyZSBwb29yIG1lbiBidXQ7IGlmIHNvbWVib2R5IHByb3ZpZGVzIGZvb2QgdGhleSB3YW50IHRvIGZpZ2h0LgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+SW4gc29tZSBzdGF0ZXMgdGhlCgkJCQkJY2l0aXplbi1ib2R5IGNvbnNpc3RzIG5vdCBvbmx5IG9mIHRob3NlIHdobyBhcmUgc2VydmluZyBhcyBoZWF2eS1hcm1lZCBzb2xkaWVycywKCQkJCQlidXQgYWxzbyBvZiB0aG9zZSB3aG8gaGF2ZSBzbyBzZXJ2ZWQ7IGFuZCBhdCBNYWxlYSB0aGUgY2l0aXplbi1ib2R5IGNvbnNpc3RlZCBvZgoJCQkJCXRoZXNlLCB3aGlsZSB0aGUgbWFnaXN0cmF0ZXMgd2VyZSBlbGVjdGVkIGZyb20gdGhvc2Ugd2hvIHdlcmUgYWN0dWFsbHkgb24KCQkJCQlzZXJ2aWNlLiBBbmQgaW5kZWVkIHRoZSBlYXJsaWVzdCBmb3JtIG9mIGNvbnN0aXR1dGlvbiBhbW9uZyB0aGUgR3JlZWtzIGFmdGVyIHRoZQoJCQkJCWtpbmdzaGlwcyBjb25zaXN0ZWQgb2YgdGhvc2Ugd2hvIHdlcmUgYWN0dWFsbHkgc29sZGllcnMsIHRoZSBvcmlnaW5hbCBmb3JtCgkJCQkJY29uc2lzdGluZyBvZiB0aGUgY2F2YWxyeSDvvIhmb3Igd2FyIGhhZCBpdHMgc3RyZW5ndGggYW5kIGl0cwoJCQkJCXByZS1lbWluZW5jZSBpbiBjYXZhbHJ5LCBzaW5jZSB3aXRob3V0IG9yZGVybHkgZm9ybWF0aW9uIGhlYXZ5LWFybWVkCgkJCQkJCWluZmFudHJ5PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmlzIHVzZWxlc3MsIGFuZCB0aGUKCQkJCQlzY2llbmNlcyBhbmQgc3lzdGVtcyBkZWFsaW5nIHdpdGggdGFjdGljcyBkaWQgbm90IGV4aXN0IGFtb25nIHRoZSBtZW4gb2Ygb2xkCgkJCQkJdGltZXMsIHNvIHRoYXQgdGhlaXIgc3RyZW5ndGggbGF5IGluIHRoZWlyIGNhdmFscnnvvIk7IGJ1dCBhcyB0aGUgc3RhdGVzCgkJCQkJZ3JldyBhbmQgdGhlIHdlYXJlcnMgb2YgaGVhdnkgYXJtb3IgaGFkIGJlY29tZSBzdHJvbmdlciwgbW9yZSBwZXJzb25zIGNhbWUgdG8KCQkJCQloYXZlIGEgcGFydCBpbiB0aGUgZ292ZXJubWVudC4gSGVuY2Ugd2hhdCB3ZSBub3cgY2FsbCBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50cwoJCQkJCXRoZSBtZW4gb2YgZm9ybWVyIHRpbWVzIGNhbGxlZCBkZW1vY3JhY2llczsgPC90cmFuc2xhdGlvbj4="
translation['4.1298a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQgdGhlIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnRzIG9mIGVhcmx5IGRheXMgd2VyZQoJCQkJCW5hdHVyYWxseSBvbGlnYXJjaGljYWwgYW5kIHJveWFsLCBmb3Igb3dpbmcgdG8gdGhlIHNtYWxsbmVzcyBvZiB0aGUgcG9wdWxhdGlvbnMKCQkJCQl0aGVpciBtaWRkbGUgY2xhc3Mgd2FzIG5vdCBudW1lcm91cywgc28gdGhhdCBiZWNhdXNlIG9mIHRoZWlyIHNtYWxsIG51bWJlcnMgYXMKCQkJCQl3ZWxsIGFzIGluIGNvbmZvcm1pdHkgd2l0aCB0aGUgc3RydWN0dXJlIG9mIHRoZSBzdGF0ZSB0aGUgbWlkZGxlIGNsYXNzIG1vcmUKCQkJCQlyZWFkaWx5IGVuZHVyZWQgYmVpbmcgaW4gYSBzdWJqZWN0IHBvc2l0aW9uLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdAoJCQkJCWhhcyB0aGVuIGJlZW4gc2FpZCB3aGF0IGlzIHRoZSByZWFzb24gb2YgdGhlcmUgYmVpbmcgc2V2ZXJhbCBmb3JtcyBvZgoJCQkJCWNvbnN0aXR1dGlvbiwgYW5kIHdoeSB0aGVyZSBhcmUgb3RoZXJzIGJlc2lkZXMgdGhvc2UgZGVzaWduYXRlZCBieSBuYW1lCgkJCQkJ77yIZm9yIHRoZXJlIGlzIG5vdCBvbmUgc2luZ2xlIGRlbW9jcmFjeSBvbmx5LCBhbmQgc2ltaWxhcmx5IHRoZXJlIGFyZQoJCQkJCW1vcmUgdGhhbiBvbmUgb2YgdGhlIG90aGVyIGZvcm1z77yJLCBhbmQgYWxzbyB3aGF0IGFyZSB0aGUgZGlmZmVyZW5jZXMKCQkJCQliZXR3ZWVuIHRoZW0gYW5kIHdoYXQgaXMgdGhlIHJlYXNvbiB3aHkgdGhlc2UgZGlmZmVyZW5jZXMgb2NjdXIsIGFuZCBpbiBhZGRpdGlvbgoJCQkJCXRvIHRoZXNlIHBvaW50cywgd2hpY2ggaXMgdGhlIGJlc3Qgb2YgdGhlIGNvbnN0aXR1dGlvbnMgc3BlYWtpbmcgZ2VuZXJhbGx5LCBhbmQKCQkJCQlvZiB0aGUgb3RoZXIgY29uc3RpdHV0aW9ucyB3aGljaCBzb3J0IGlzIHN1aXRlZCB0byB3aGljaCBzb3J0IG9mCgkJCQkJCXBlb3BsZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjExLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIGFnYWluLCBsZXQgdXMgc3BlYWsgYWJvdXQgdGhlIHBvaW50cyB0aGF0IGNvbWUgbmV4dCwgYm90aAoJCQkJCWdlbmVyYWxseSBhbmQgd2l0aCByZWZlcmVuY2UgdG8gZWFjaCBjb25zdGl0dXRpb24gc2VwYXJhdGVseSwgdGFraW5nIHRoZWlyCgkJCQkJYXBwcm9wcmlhdGUgc3RhcnRpbmctcG9pbnQuIEFsbCBmb3JtcyBvZiBjb25zdGl0dXRpb24gdGhlbiBoYXZlIHRocmVlIGZhY3RvcnMgaW4KCQkJCQlyZWZlcmVuY2UgdG8gd2hpY2ggdGhlIGdvb2QgbGF3Z2l2ZXIgaGFzIHRvIGNvbnNpZGVyIHdoYXQgaXMgZXhwZWRpZW50IGZvciBlYWNoCgkJCQkJY29uc3RpdHV0aW9uOyBhbmQgaWYgdGhlc2UgZmFjdG9ycyBhcmUgd2VsbC1vcmRlcmVkIHRoZSBjb25zdGl0dXRpb24gbXVzdCBvZgoJCQkJCW5lY2Vzc2l0eSBiZSB3ZWxsLW9yZGVyZWQsIGFuZCB0aGUgc3VwZXJpb3JpdHkgb2Ygb25lIGNvbnN0aXR1dGlvbiBvdmVyIGFub3RoZXIKCQkJCQluZWNlc3NhcmlseSBjb25zaXN0cyBpbiB0aGUgc3VwZXJpb3JpdHkgb2YgZWFjaCBvZiB0aGVzZSBmYWN0b3JzLiBPZiB0aGVzZSB0aHJlZQoJCQkJCWZhY3RvcnMgb25lIGlzLCB3aGF0IGlzIHRvIGJlIHRoZSBib2R5IHRoYXQgZGVsaWJlcmF0ZXMgYWJvdXQgdGhlIGNvbW1vbgoJCQkJCWludGVyZXN0cywgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyOThhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['4.1298a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnNlY29uZCB0aGUgb25lIGNvbm5lY3RlZCB3aXRoIHRoZSBtYWdpc3RyYWNpZXMsIHRoYXQgaXMsIHdoYXQKCQkJCQl0aGVyZSBhcmUgdG8gYmUgYW5kIHdoYXQgbWF0dGVycyB0aGV5IGFyZSB0byBjb250cm9sLCBhbmQgd2hhdCBpcyB0byBiZSB0aGUKCQkJCQltZXRob2Qgb2YgdGhlaXIgZWxlY3Rpb24sIGFuZCBhIHRoaXJkIGlzLCB3aGF0IGlzIHRvIGJlIHRoZSBqdWRpY2lhcnkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBkZWxpYmVyYXRpdmUgZmFjdG9yIGlzIHNvdmVyZWlnbiBhYm91dCB3YXIgYW5kIHBlYWNlCgkJCQkJYW5kIHRoZSBmb3JtYXRpb24gYW5kIGRpc3NvbHV0aW9uIG9mIGFsbGlhbmNlcywgYW5kIGFib3V0IGxhd3MsIGFuZCBhYm91dAoJCQkJCXNlbnRlbmNlcyBvZiBkZWF0aCBhbmQgZXhpbGUgYW5kIGNvbmZpc2NhdGlvbiBvZiBwcm9wZXJ0eSwgYW5kIGFib3V0IHRoZSBhdWRpdHMKCQkJCQlvZiBtYWdpc3RyYXRlcy4gPC90cmFuc2xhdGlvbj4="
translation['4.1298a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBuZWNlc3NhcmlseQoJCQkJCWVpdGhlciBhbGwgdGhlc2UgZGVjaXNpb25zIG11c3QgYmUgYXNzaWduZWQgdG8gYWxsIHRoZSBjaXRpemVucywgb3IgYWxsIHRvIHNvbWUKCQkJCQlvZiB0aGVtIO+8iGZvciBpbnN0YW5jZSB0byBzb21lIG9uZSBtYWdpc3RyYWN5IG9yIHRvIHNldmVyYWzvvIksCgkJCQkJb3IgZGlmZmVyZW50IG9uZXMgdG8gZGlmZmVyZW50IG1hZ2lzdHJhY2llcywgb3Igc29tZSBvZiB0aGVtIHRvIGFsbCB0aGUgY2l0aXplbnMKCQkJCQlhbmQgc29tZSB0byBjZXJ0YWluIHBlcnNvbnMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZvciBhbGwgdGhlIGNpdGl6ZW5zCgkJCQkJdG8gYmUgbWVtYmVycyBvZiB0aGUgZGVsaWJlcmF0aXZlIGJvZHkgYW5kIHRvIGRlY2lkZSBhbGwgdGhlc2UgbWF0dGVycyBpcyBhIG1hcmsKCQkJCQlvZiBhIHBvcHVsYXIgZ292ZXJubWVudCwgZm9yIHRoZSBjb21tb24gcGVvcGxlIHNlZWsgZm9yIGVxdWFsaXR5IG9mIHRoaXMgbmF0dXJlLgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjExLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdGhlcmUgYXJlIHNldmVyYWwgbW9kZXMgb2YKCQkJCQlzdWNoIHVuaXZlcnNhbCBtZW1iZXJzaGlwLiBPbmUgaXMgZm9yIHRoZSBjaXRpemVucyB0byBzZXJ2ZSBpbiByb3RhdGlvbiBhbmQgbm90CgkJCQkJYWxsIGluIGEgYm9keSDvvIhhcyBpcyBlbmFjdGVkIGluIHRoZSBjb25zdGl0dXRpb24gb2YgdGhlIE1pbGVzaWFuCgkJCQkJCVRlbGVjbGVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PdGhlcndpc2UgdW5rbm93bjwvbm90ZT4gYW5kIGluCgkJCQkJb3RoZXIgY29uc3RpdHV0aW9ucyBhbHNvIHRoZSBib2FyZHMgb2YgbWFnaXN0cmF0ZXMgZGVsaWJlcmF0ZSBpbiBqb2ludAoJCQkJCWFzc2VtYmxpZXMgYnV0IGFsbCB0aGUgY2l0aXplbnMgZW50ZXIgaW50byB0aGUgbWFnaXN0cmFjaWVzIGZyb20gdGhlIHRyaWJlcyBvcgoJCQkJCWZyb20gdGhlIHZlcnkgc21hbGxlc3Qgc2VjdGlvbnMgb2YgdGhlIGNpdGl6ZW4tYm9keSBpbiByb3RhdGlvbiB1bnRpbCBvZmZpY2UgaGFzCgkJCQkJZ29uZSB0aHJvdWdoIHRoZSB3aG9sZSBib2R577yJLCBhbmQgZm9yIHRoZXJlIHRvIGJlIGpvaW50IGFzc2VtYmxpZXMgb25seQoJCQkJCXRvIGNvbnNpZGVyIGxlZ2lzbGF0aW9uIGFuZCByZWZvcm1zIG9mIHRoZSBjb25zdGl0dXRpb24gYW5kIHRvIGhlYXIgdGhlIHJlcG9ydHMKCQkJCQlzdWJtaXR0ZWQgYnkgdGhlIG1hZ2lzdHJhdGVzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjExLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Bbm90aGVyIG1vZGUgaXM8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+Zm9yIGFsbCB0byBhc3NlbWJsZQoJCQkJCWluIGEgYm9keSwgYnV0IG9ubHkgZm9yIHRoZSBwdXJwb3NlIG9mIGVsZWN0aW5nIG1hZ2lzdHJhdGVzLCBlbmFjdGluZyBsYXdzLAoJCQkJCWNvbnNpZGVyaW5nIHRoZSBkZWNsYXJhdGlvbiBvZiB3YXIgYW5kIHRoZSBjb25jbHVzaW9uIG9mIHBlYWNlIGFuZCBob2xkaW5nIHRoZQoJCQkJCWF1ZGl0IG9mIG1hZ2lzdHJhdGVzLCBidXQgZm9yIGFsbCBvdGhlciBtYXR0ZXJzIHRvIGJlIGNvbnNpZGVyZWQgYnkgdGhlCgkJCQkJbWFnaXN0cmF0ZXMgYXBwb2ludGVkIHRvIGRlYWwgd2l0aCBlYWNoIHJlc3BlY3RpdmVseSBhbmQgZWxlY3RlZCBieSBzdWZmcmFnZSBvcgoJCQkJCWJ5IGxvdCBmcm9tIGFsbCB0aGUgY2l0aXplbnMuIEFub3RoZXIgbW9kZSBpcyBmb3IgdGhlIGNpdGl6ZW5zIHRvIG1lZXQgYWJvdXQgdGhlCgkJCQkJbWFnaXN0cmFjaWVzIGFuZCB0aGUgYXVkaXRzIGFuZCBpbiBvcmRlciB0byBkZWxpYmVyYXRlIGFib3V0IGRlY2xhcmluZyB3YXIgYW5kCgkJCQkJY29uY2x1ZGluZyBhbiBhbGxpYW5jZSwgYnV0IGZvciBhbGwgb3RoZXIgbWF0dGVycyB0byBiZSBkZWFsdCB3aXRoIGJ5IHRoZQoJCQkJCW1hZ2lzdHJhdGVzLCBlbGVjdGVkIGJ5IHN1ZmZyYWdlIGluIGFzIG1hbnkgY2FzZXMgYXMgY2lyY3Vtc3RhbmNlcyBhbGxvdyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBpbiBhbiBhZHZhbmNlZCBkZW1vY3JhY3kuPC9ub3RlPiBhbmQgc3VjaAoJCQkJCW1hZ2lzdHJhY2llcyBhcmUgYWxsIHRob3NlIHdoaWNoIG11c3Qgb2YgbmVjZXNzaXR5IGJlIGZpbGxlZCBieSBleHBlcnRzLgoJCQkJCQk8L3RyYW5zbGF0aW9uPg=="
translation['4.1298b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkEgZm91cnRoIG1vZGUgaXMgZm9yIGFsbCB0bwoJCQkJCW1lZXQgaW4gY291bmNpbCBhYm91dCBhbGwgbWF0dGVycywgYW5kIGZvciB0aGUgbWFnaXN0cmFjaWVzIHRvIGRlY2lkZSBhYm91dAoJCQkJCW5vdGhpbmcgYnV0IG9ubHkgdG8gbWFrZSBwcmVsaW1pbmFyeSBkZWNpc2lvbnM7IHRoaXMgaXMgdGhlIG1vZGUgaW4gd2hpY2gKCQkJCQlkZW1vY3JhY3kgaW4gaXRzIGxhc3QgZm9ybSBpcyBhZG1pbmlzdGVyZWQgYXQgdGhlIHByZXNlbnQgZGF54oCUdGhlIGZvcm0KCQkJCQlvZiBkZW1vY3JhY3kgd2hpY2ggd2UgcHJvbm91bmNlIHRvIGNvcnJlc3BvbmQgdG8gZHluYXN0aWMgb2xpZ2FyY2h5IGFuZCB0bwoJCQkJCXR5cmFubmljYWwgbW9uYXJjaHkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXNlIG1vZGVzCgkJCQkJdGhlbiBhcmUgYWxsIG9mIHRoZW0gZGVtb2NyYXRpYy4gT24gdGhlIG90aGVyIGhhbmQgZm9yIHNvbWUgcGVyc29ucyB0bwoJCQkJCWRlbGliZXJhdGUgdXBvbiBhbGwgbWF0dGVycyBpcyBvbGlnYXJjaGljLiBCdXQgdGhpcyBhbHNvIGhhcyBzZXZlcmFsIHZhcmlhdGlvbnMuCgkJCQkJRm9yIHdoZW4gdGhlIG1lbWJlcnMgb2YgdGhlIGRlbGliZXJhdGl2ZSBib2R5IGFyZSBlbGVjdGVkIG9uIGNvbXBhcmF0aXZlbHkKCQkJCQltb2RlcmF0ZSBwcm9wZXJ0eS1xdWFsaWZpY2F0aW9ucywgYW5kIHRoZSBlbGlnaWJsZSBwZXJzb25zIGFyZSBjb21wYXJhdGl2ZWx5CgkJCQkJbnVtZXJvdXMgYmVjYXVzZSBvZiB0aGUgbW9kZXJhdGVuZXNzIG9mIHRoZSBxdWFsaWZpY2F0aW9uLCBhbmQgd2hlbiB0aGV5IGRvIG5vdAoJCQkJCW1ha2UgY2hhbmdlcyBpbiB0aGluZ3MgaW4gd2hpY2ggdGhlIGxhdyBmb3JiaWRzIGl0IGJ1dCBmb2xsb3cgdGhlIGxhdywgYW5kIHdoZW4KCQkJCQlhbnlib2R5IGFjcXVpcmluZyB0aGUgcHJvcGVydHktcXVhbGlmaWNhdGlvbiBpcyBhbGxvd2VkIHRvIGJlY29tZSBhIG1lbWJlciwgYQoJCQkJCWNvbnN0aXR1dGlvbiBvZiB0aGlzIHNvcnQgaXMgaW5kZWVkIGFuIG9saWdhcmNoeSwgYnV0IG9uZSBvZiB0aGUgbmF0dXJlIG9mCgkJCQkJY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCwgYmVjYXVzZSBvZiBpdHMgbW9kZXJhdGlvbi4gV2hlbiBvbiB0aGUgb3RoZXIgaGFuZCBub3QKCQkJCQlldmVyeWJvZHkgdGh1cyBxdWFsaWZpZWQgcGFydGljaXBhdGVzIGluIGRlbGliZXJhdGlvbiBidXQgb25seSBjZXJ0YWluIHBlcnNvbnMKCQkJCQlwcmV2aW91c2x5IGNob3NlbiBieSBlbGVjdGlvbiwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyOThiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['4.1298b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGVzZSBnb3Zlcm4gaW4gYWNjb3JkYW5jZSB3aXRoIGxhdyBhcyBpbgoJCQkJCXRoZSBmb3JtZXIgY2FzZSwgdGhpcyBpcyBvbGlnYXJjaGljYWw7IGFuZCBhbHNvIHdoZW4gdGhlIGRlbGliZXJhdGl2ZSBvZmZpY2lhbHMKCQkJCQlhcmUgZWxlY3RlZCBieSBjby1vcHRhdGlvbiwgYW5kIHdoZW4gdGhlIG9mZmljZSBpcyBoZXJlZGl0YXJ5IGFuZCBoYXMgc3VwcmVtZQoJCQkJCWNvbnRyb2wgb3ZlciB0aGUgbGF3cywgdGhpcyBzeXN0ZW0gaXMgYm91bmQgdG8gYmUgb2xpZ2FyY2hpY2FsLiA8L3RyYW5zbGF0aW9uPg=="
translation['4.1298b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB3aGVuIGNlcnRhaW4gcGVyc29ucyBjb250cm9sIGNlcnRhaW4KCQkJCQltYXR0ZXJzLCBmb3IgaW5zdGFuY2Ugd2hlbiBhbGwgdGhlIGNpdGl6ZW5zIGNvbnRyb2wgZGVjaXNpb25zIGFzIHRvIHdhciBhbmQKCQkJCQlwZWFjZSBhbmQgdGhlIGF1ZGl0IG9mIG9mZmljaWFscyB3aGlsZSBldmVyeXRoaW5nIGVsc2UgaXMgY29udHJvbGxlZCBieQoJCQkJCW1hZ2lzdHJhdGVzIGFuZCB0aGVzZSBhcmUgZWxlY3RlZCBieSB2b3RlLCBub3QgYnkgbG90LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgTVNTLiBnaXZlIOKAmG9yIGJ5IGxvdC7igJk8L25vdGU+IHRoZQoJCQkJCWNvbnN0aXR1dGlvbiBpcyBhbiBhcmlzdG9jcmFjeTsgd2hpbGUgaWYgc29tZSBtYXR0ZXJzIGFyZSBjb250cm9sbGVkIGJ5CgkJCQkJbWFnaXN0cmF0ZXMgZWxlY3RlZCBieSB2b3RlIGFuZCBvdGhlcnMgYnkgbWFnaXN0cmF0ZXMgY2hvc2VuIGJ5IGxvdCwgYW5kIHRoaXMKCQkJCQllaXRoZXIgZGlyZWN0bHkgb3IgZnJvbSBhIGxpc3QgcHJldmlvdXNseSBzZWxlY3RlZCBieSB2b3RlLCBvciBpZiBtYWdpc3RyYXRlcwoJCQkJCWVsZWN0ZWQgYnkgdm90ZSBhbmQgYnkgbG90IHNpdCBpbiBhIGpvaW50IGJvZHksIHNvbWUgb2YgdGhlc2UgcmVndWxhdGlvbnMgYXJlCgkJCQkJZmVhdHVyZXMgb2YgYW4gYXJpc3RvY3JhdGljIGNvbnN0aXR1dGlvbiBhbmQgb3RoZXJzIG9mIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQKCQkJCQkJaXRzZWxmLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBoYXZlIHRoZW4gaW4gdGhpcyB3YXkgZGlzdGluZ3Vpc2hlZAoJCQkJCXRoZSBkaWZmZXJlbnQga2luZHMgb2YgZGVsaWJlcmF0aXZlIGJvZHkgaW4gcmVsYXRpb24gdG8gdGhlIGZvcm1zIG9mCgkJCQkJY29uc3RpdHV0aW9uLCBhbmQgZWFjaCBmb3JtIG9mIGNvbnN0aXR1dGlvbiBjYXJyaWVzIG9uIHRoZSBhZG1pbmlzdHJhdGlvbiBpbgoJCQkJCWFjY29yZGFuY2Ugd2l0aCB0aGUgZGlzdGluY3Rpb24gc3RhdGVkLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjExLjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgZm9yIGEgZGVtb2NyYWN5IG9mIHRoZSBmb3JtIHRoYXQgYXQgdGhlIHByZXNlbnQgZGF5IGlzCgkJCQkJY29uc2lkZXJlZCB0byBiZSBkZW1vY3JhY3kgaW4gdGhlIGZ1bGxlc3QgZGVncmVlIO+8iGFuZCBJIG1lYW4gb25lIG9mIHRoZQoJCQkJCXNvcnQgaW4gd2hpY2ggdGhlIHBlb3BsZSBpcyBzb3ZlcmVpZ24gZXZlbiBvdmVyIHRoZSBsYXdz77yJIGl0IGlzCgkJCQkJYWR2YW50YWdlb3VzIGZvciB0aGUgaW1wcm92ZW1lbnQgb2YgaXRzIGRlbGliZXJhdGl2ZSBmdW5jdGlvbiBmb3IgaXQgdG8gZG8gdGhlCgkJCQkJc2FtZSBhcyBpcyBkb25lIGluIG9saWdhcmNoaWVzIGluIHRoZSBtYXR0ZXIgb2YgdGhlIGxhdy1jb3VydHMg77yIZm9yCgkJCQkJdGhleSBlbmFjdCBhIGZpbmUgdG8gY29tcGVsIHRoZSBhdHRlbmRhbmNlIG9uIGp1cmllcyBvZiB0aG9zZSB3aG9tIHRoZXkgd2FudCB0bwoJCQkJCWF0dGVuZCwgd2hlcmVhcyBkZW1vY3JhdGljIHN0YXRlcyBpbnN0aXR1dGUgcGF5bWVudCBmb3IgYXR0ZW5kYW5jZSBmb3IgdGhlCgkJCQkJYmVuZWZpdCBvZiB0aGUgcG9vcu+8iSwgYW5kIGFsc28gdG8gZG8gdGhpcyBpbiByZXNwZWN0IG9mIHRoZQoJCQkJCQlhc3NlbWJsaWVzPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPu+8iGZvciB0aGV5IHdpbGwKCQkJCQlkZWxpYmVyYXRlIGJldHRlciB3aGVuIGFsbCBhcmUgZGVsaWJlcmF0aW5nIGpvaW50bHksIHRoZSBjb21tb24gcGVvcGxlIHdoZW4gd2l0aAoJCQkJCXRoZSBub3RhYmxlcyBhbmQgdGhlc2Ugd2hlbiB3aXRoIHRoZSBtYXNzZXPvvIksIGFuZCBpdCBpcyBhbHNvCgkJCQkJYWR2YW50YWdlb3VzIGZvciB0aG9zZSB3aG8gZGVsaWJlcmF0ZSB0byBiZSBlbGVjdGVkIGJ5IHZvdGUgb3IgYnkgbG90IGVxdWFsbHkKCQkJCQlmcm9tIHRoZSBkaWZmZXJlbnQgc2VjdGlvbnMsIGFuZCwgaWYgdGhlIG1lbiBvZiB0aGUgcGVvcGxlIGZhciBleGNlZWQgdGhlCgkJCQkJcG9saXRpY2FsIGNsYXNzIGluIG51bWJlciwgaXQgaXMgYWR2YW50YWdlb3VzIGVpdGhlciBub3QgdG8gZ2l2ZSBwYXkgdG8gYWxsIGJ1dAoJCQkJCW9ubHkgdG8gYXMgbWFueSBhcyBhcmUgY29tbWVuc3VyYXRlIHdpdGggdGhlIG51bWJlciBvZiB0aGUgbm90YWJsZXMsIG9yIHRvCgkJCQkJZGlzY2FyZCBieSBsb3QgdGhvc2Ugd2hvIGV4Y2VlZCB0aGlzIG51bWJlci4gPC90cmFuc2xhdGlvbj4="
translation['4.1299a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkluIG9saWdhcmNoaWVzIG9uIHRoZSBvdGhlciBoYW5kIGl0IGlzIGFkdmFudGFnZW91cyBlaXRoZXIKCQkJCQl0byBjby1vcHQgc29tZSBwZXJzb25zIGZyb20gdGhlIG11bHRpdHVkZSwgb3IgdG8gaW5zdGl0dXRlIGFuIG9mZmljZSBsaWtlIHRoZQoJCQkJCW9uZSB0aGF0IGV4aXN0cyBpbiBjZXJ0YWluIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnRzIHVuZGVyIHRoZSBmbGFtZSBvZgoJCQkJCVByZWxpbWluYXJ5IENvdW5jaWxsb3JzIG9yIEd1YXJkaWFucyBvZiB0aGUgTGF3LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGVyZSB3ZXJlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Az4HhvbnOss6/z4XOu86/zrk8L2ZvcmVpZ24+IGF0CgkJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENvcmludGgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLENvcmludGgiPkNvcmludGg8L3BsYWNlTmFtZT4gYXMgd2VsbCBhcyBhCgkJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Oss6/z4XOu+G9tTwvZm9yZWlnbj4gYW5kIGFuIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM66zrrOu863z4PhvbfOsTwvZm9yZWlnbj47IGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ovc6/zrzOv8+G4b27zrvOsc66zrXPgjwvZm9yZWlnbj4KCQkJCQkJYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gYW5kIGVsc2V3aGVyZTogYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IHRoZXkgc2F0IHdpdGggdGhlIHByZXNpZGVudHMgb2YKCQkJCQkJdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiBhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQzrrOus67zrfPg+G9t86xPC9mb3JlaWduPiB0byBjaGVjayBpbGxlZ2FsIHByb2NlZHVyZS48L25vdGU+IGFuZCBkZWFsIHdpdGgKCQkJCQl0aGUgbWF0dGVycyBhYm91dCB3aGljaCB0aGVzZSBvZmZpY2lhbHMgaGF2ZSBoZWxkIGEgcHJlbGltaW5hcnkgZGVsaWJlcmF0aW9uCgkJCQkJ77yIZm9yIHRodXMgdGhlIGNvbW1vbiBwZW9wbGUgd2lsbCBoYXZlIGEgc2hhcmUgaW4gZGVsaWJlcmF0aW9uIGFuZCB3aWxsCgkJCQkJbm90IGhhdmUgdGhlIHBvd2VyIHRvIGFib2xpc2ggYW55IHBhcnQgb2YgdGhlIGNvbnN0aXR1dGlvbu+8iSwgYW5kIHRoZW4KCQkJCQlmb3IgdGhlIHBlb3BsZSBieSB0aGVpciB2b3RlIGVpdGhlciB0byBjb25maXJtIG9yIGF0IGFsbCBldmVudHMgbm90IHRvIHBhc3MKCQkJCQlhbnl0aGluZyBjb250cmFyeSB0byB0aGUgcmVzb2x1dGlvbnMgYnJvdWdodCBiZWZvcmUgdGhlbSwgb3IgdG8gYWxsb3cgYWxsIHRvCgkJCQkJdGFrZSBwYXJ0IGluIGRlYmF0ZSBidXQgb25seSB0aGUgbWFnaXN0cmF0ZXMgdG8gZnJhbWUgcmVzb2x1dGlvbnM7IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Az4HhvbnOss6/z4XOu86/zrk8L2ZvcmVpZ24+IGF0CgkJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENvcmludGgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLENvcmludGgiPkNvcmludGg8L3BsYWNlTmFtZT4gYXMgd2VsbCBhcyBhCgkJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Oss6/z4XOu+G9tTwvZm9yZWlnbj4gYW5kIGFuIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM66zrrOu863z4PhvbfOsTwvZm9yZWlnbj47IGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ovc6/zrzOv8+G4b27zrvOsc66zrXPgjwvZm9yZWlnbj4KCQkJCQkJYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gYW5kIGVsc2V3aGVyZTogYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IHRoZXkgc2F0IHdpdGggdGhlIHByZXNpZGVudHMgb2YKCQkJCQkJdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiBhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQzrrOus67zrfPg+G9t86xPC9mb3JlaWduPiB0byBjaGVjayBpbGxlZ2FsIHByb2NlZHVyZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjExLjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGluIGZhY3QgaXQgaXMgcHJvcGVyIHRvIGRvIGp1c3QgdGhlCgkJCQkJb3Bwb3NpdGUgb2Ygd2hhdCB0YWtlcyBwbGFjZSBpbiBjb25zdGl0dXRpb25hbGx5IGdvdmVybmVkIHN0YXRlczsgZm9yIHRoZSBjb21tb24KCQkJCQlwZW9wbGUgb3VnaHQgdG8gYmUgZ2l2ZW4gcG93ZXIgdG8gdm90ZSB0aGUgcmVqZWN0aW9uIG9mIGEgbWVhc3VyZSwgYnV0IG5vdCB0bwoJCQkJCXZvdGUgaXRzIHJhdGlmaWNhdGlvbiwgYnV0IGl0IHNob3VsZCBiZSByZWZlcnJlZCBiYWNrIHRvIHRoZSBtYWdpc3RyYXRlcy4gSW4KCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50cyB0aGUgcHJvY2VkdXJlIGlzIHRoZSByZXZlcnNlOyB0aGUgZmV3IGFyZSBjb21wZXRlbnQKCQkJCQl0byB2b3RlIHRoZSByZWplY3Rpb24gb2YgYSByZXNvbHV0aW9uIGJ1dCBhcmUgbm90IGNvbXBldGVudCB0byB2b3RlIGl0cwoJCQkJCXJhdGlmaWNhdGlvbiwgdGhpcyBiZWluZyBhbHdheXMgcmVmZXJyZWQgYmFjayB0byB0aGUgbW9zdCBudW1lcm91cyBib2R5LgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI5OWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['4.1299a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZXQgdXMgdGhlbiBkZWNpZGUgaW4gdGhpcwoJCQkJCW1hbm5lciBhYm91dCB0aGUgZGVsaWJlcmF0aXZlIGJvZHksIHdoaWNoIGluIGZhY3QgaXMgdGhlIHNvdmVyZWlnbiBwb3dlciBpbiB0aGUKCQkJCQkJY29uc3RpdHV0aW9uLjwvdHJhbnNsYXRpb24+"
translation['4.1299a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Db25uZWN0ZWQgd2l0aCB0aGlzIHN1YmplY3QgaXMgdGhlIGRldGVybWluYXRpb24gaW4gcmVnYXJkIHRvCgkJCQkJdGhlIG1hZ2lzdHJhY2llcyDvvIhmb3IgdGhpcyBwYXJ0IG9mIHRoZSBjb25zdGl0dXRpb24gYWxzbyBoYXMgbWFueQoJCQkJCXZhcmlldGllc++8iSwgaG93IG1hbnkgbWFnaXN0cmFjaWVzIHRoZXJlIGFyZSB0byBiZSwgYW5kIHdoYXQgYXJlIHRvIGJlCgkJCQkJdGhlaXIgcG93ZXJzLCBhbmQgd2hhdCB0aGVpciB2YXJpb3VzIHBlcmlvZHMgb2YgdGVudXJlIO+8iGZvciBzb21lIHBlb3BsZQoJCQkJCW1ha2UgdGhlaXIgbWFnaXN0cmFjaWVzIHRlbmFibGUgZm9yIHNpeCBtb250aHMsIG90aGVycyBmb3IgbGVzcywgb3RoZXJzIGZvciBhCgkJCQkJeWVhciBhbmQgb3RoZXJzIGZvciBhIGxvbmdlciBwZXJpb2TvvInigJRzaGFsbCB0aGUgbWFnaXN0cmFjaWVzCgkJCQkJYmUgZm9yIGxpZmUgb3IgZm9yIGEgbG9uZyBwZXJpb2QsIG9yIGlmIGZvciBhIHNob3J0ZXIgdGVybSBzaGFsbCB0aGUgc2FtZSBwZW9wbGUKCQkJCQliZSBhbGxvd2VkIHRvIGhvbGQgdGhlbSBzZXZlcmFsIHRpbWVzIG9yIG5vdCB0aGUgc2FtZSBtYW4gdHdpY2UgYnV0IG9uY2Ugb25seT8KCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGFsc28gYXMgdG8gdGhlIGFwcG9pbnRtZW50CgkJCQkJb2YgbWFnaXN0cmF0ZXMsIHdobyBzaGFsbCBiZSBlbGlnaWJsZSwgd2hvIHRoZSBlbGVjdG9ycywgYW5kIHdoYXQgdGhlIG1vZGUgb2YKCQkJCQllbGVjdGlvbj8gRm9yIG9uIGFsbCB0aGVzZSBwb2ludHMgaXQgaXMgbmVlZGZ1bCB0byBiZSBhYmxlIHRvIGRldGVybWluZSBob3cgbWFueQoJCQkJCW1vZGVzIG9mIHByb2NlZHVyZSBhcmUgcG9zc2libGUsIGFuZCB0aGVuIHRvIHNldHRsZSB3aGF0IG1vZGVzIGFyZSBleHBlZGllbnQgZm9yCgkJCQkJd2hhdCBzb3J0cyBvZiBjb25zdGl0dXRpb24uIE5vciBpcyBpdCBlYXN5IHRvIGRlY2lkZSB0byB3aGF0IGtpbmRzIG9mIG9mZmljZSB0aGUKCQkJCQluYW1lIG9mIG1hZ2lzdHJhY3kgb3VnaHQgdG8gYmUgYXBwbGllZDsgZm9yIHRoZSBwb2xpdGljYWwgY29tbXVuaXR5IHJlcXVpcmVzIGEKCQkJCQlncmVhdCBtYW55IG9mZmljaWFscywgb3dpbmcgdG8gd2hpY2ggaXQgaXMgbm90IHByb3BlciB0byByZWNrb24gYWxsIG9mIHRoZW0KCQkJCQltYWdpc3RyYXRlcywgd2hldGhlciBlbGVjdGVkIGJ5IHZvdGUgb3IgYnkgbG90LOKAlGZvciBpbnN0YW5jZSBmaXJzdCB0aGUKCQkJCQlwcmllc3RzIO+8iGZvciB0aGlzIG9mZmljZSBtdXN0IGJlIGNvbnNpZGVyZWQgYXMgc29tZXRoaW5nIGRpZmZlcmVudCBmcm9tCgkJCQkJdGhlIHBvbGl0aWNhbCBtYWdpc3RyYWNpZXPvvIksIGFuZCBhZ2FpbiB0aGVyZSBhcmUgbGVhZGVycyBvZiBjaG9ydXNlcywKCQkJCQlhbmQgaGVyYWxkcywgYW5kIHBlcnNvbnMgYXJlIGFsc28gZWxlY3RlZCBhcyBhbWJhc3NhZG9ycy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PC90cmFuc2xhdGlvbj4="
translation['4.1299b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBvZgoJCQkJCXRoZSBvZmZpY2VzIGV4ZXJjaXNpbmcgc3VwZXJpbnRlbmRlbmNlIHNvbWUgYXJlIHBvbGl0aWNhbCwgYW5kIGFyZSBleGVyY2lzZWQKCQkJCQllaXRoZXIgb3ZlciB0aGUgd2hvbGUgb2YgdGhlIGNpdGl6ZW5zIGluIHJlZ2FyZCB0byBzb21lIG9wZXJhdGlvbuKAlGZvcgoJCQkJCWluc3RhbmNlIGEgZ2VuZXJhbCBzdXBlcmludGVuZHMgdGhlbSB3aGVuIHNlcnZpbmcgYXMgc29sZGllcnMsIG9yIG92ZXIgYQoJCQkJCXNlY3Rpb27igJRmb3IgaW5zdGFuY2UgdGhlIHN1cGVyaW50ZW5kZW50IG9mIHdvbWVuIG9yIG9mIGNoaWxkcmVuOyB3aGlsZQoJCQkJCW90aGVycyBhcmUgZWNvbm9taWMg77yIZm9yIHN0YXRlcyBvZnRlbiBlbGVjdCBvZmZpY2VycyB0byBkb2xlIG91dAoJCQkJCQljb3JuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkRpc3RyaWJ1dGlvbnMgb2YgY29ybiB3ZXJlIG1hZGUgYXQKCQkJCQkJdGltZXMgb2Ygc2NhcmNpdHksIG9yIHdoZW4gdGhlIHN0YXRlIGhhZCByZWNlaXZlZCBhIHByZXNlbnQgb2YKCQkJCQljb3JuLjwvbm90ZT7vvIk7IGFuZCBvdGhlcnMgYXJlIHN1Ym9yZGluYXRlLCBhbmQgYXJlIHRoZSBzb3J0IG9mIHNlcnZpY2VzCgkJCQkJdG8gd2hpY2ggcGVvcGxlIHdoZW4gd2VsbCBvZmYgYXBwb2ludCBzbGF2ZXMuIEJ1dCB0aGUgdGl0bGUgb2YgbWFnaXN0cmFjeSwgdG8KCQkJCQlwdXQgaXQgc2ltcGx5LCBpcyBjaGllZmx5IHRvIGJlIGFwcGxpZWQgdG8gYWxsIHRob3NlIG9mZmljZXMgdG8gd2hpY2ggaGF2ZSBiZWVuCgkJCQkJYXNzaWduZWQgdGhlIGR1dGllcyBvZiBkZWxpYmVyYXRpbmcgYWJvdXQgY2VydGFpbiBtYXR0ZXJzIGFuZCBvZiBhY3RpbmcgYXMKCQkJCQlqdWRnZXMgYW5kIG9mIGlzc3Vpbmcgb3JkZXJzLCBhbmQgZXNwZWNpYWxseSB0aGUgbGFzdCwgZm9yIHRvIGdpdmUgb3JkZXJzIGlzCgkJCQkJbW9zdCBjaGFyYWN0ZXJpc3RpYyBvZiBhdXRob3JpdHkuIEJ1dCB0aGlzIHF1ZXN0aW9uIGlzIG9mIHZpcnR1YWxseSBubyBwcmFjdGljYWwKCQkJCQlpbXBvcnRhbmNlIO+8iGZvciBubyBkZWNpc2lvbiBoYXMgeWV0IGJlZW4gZ2l2ZW4sIG91ciBkaXNjdXNzaW9uIGJlaW5nCgkJCQkJbWVyZWx5IGFib3V0IHRoZSBuYW1l77yJLCBhbHRob3VnaCBpdCBkb2VzIGFkbWl0IG9mIHNvbWUgZnVydGhlciBpbnF1aXJ5CgkJCQkJb2YgYSBzcGVjdWxhdGl2ZSBraW5kLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEyLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5PbiB0aGUgb3RoZXIKCQkJCQloYW5kIHRoZSBxdWVzdGlvbnMgd2hhdCBraW5kcyBhbmQgd2hhdCBudW1iZXIgb2YgbWFnaXN0cmFjaWVzIGFyZSBuZWNlc3NhcnkgdG8KCQkJCQljb25zdGl0dXRlIGEgc3RhdGUgYXQgYWxsLCBhbmQgd2hhdCBraW5kcyBhbHRob3VnaCBub3QgbmVjZXNzYXJ5IGFyZQoJCQkJCWFkdmFudGFnZW91cyBmb3IgYSBnb29kIGNvbnN0aXR1dGlvbiwgYXJlIHF1ZXN0aW9ucyB0aGF0IG1pZ2h0IHByZWZlcmFibHkgYmUKCQkJCQlkaXNjdXNzZWQsIGJvdGggaW5kZWVkIGFzIHJlZ2FyZHMgZXZlcnkgZm9ybSBvZiBjb25zdGl0dXRpb24gYW5kIHBhcnRpY3VsYXJseSBpbgoJCQkJCXJlZ2FyZCB0byB0aGUgc21hbGwgc3RhdGVzLiBGb3IgaXQgaXMgdHJ1ZSB0aGF0IGluIHRoZSBsYXJnZSBzdGF0ZXMgaXQgaXMKCQkJCQlwb3NzaWJsZSBhbmQgcHJvcGVyIGZvciBvbmUgbWFnaXN0cmFjeSB0byBiZSBhc3NpZ25lZCB0byBvbmUgZnVuY3Rpb24KCQkJCQnvvIhmb3IgdGhlIGxhcmdlIG51bWJlciBvZiB0aGUgY2l0aXplbnMgbWFrZXMgaXQgcG9zc2libGUgZm9yIG1hbnkgcGVvcGxlCgkJCQkJdG8gZW50ZXIgb24gYW4gb2ZmaWNpYWwgY2FyZWVyLCBzbyBhcyB0byBpbnRlcm1pdCB0aGVpciB0ZW51cmUgb2Ygc29tZSBvZmZpY2VzCgkJCQkJZm9yIGEgbG9uZyB0aW1lIGFuZCB0byBob2xkIG90aGVycyBvbmx5IG9uY2UsIGFuZCBhbHNvIGV2ZXJ5IHRhc2sgaXMgYmV0dGVyCgkJCQkJYXR0ZW5kZWQgdG8gaWYgdGhlIGF0dGVudGlvbiBpcyBkaXJlY3RlZCB0byBvbmUgdGhpbmcgb25seSB0aGFuIGlmIGl0IGlzIGJ1c3kKCQkJCQl3aXRoIG1hbnnvvIk7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjk5YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['4.1299b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['4.1299b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCBpbgoJCQkJCXRoZSBzbWFsbCBzdGF0ZXMgaXQgaXMgaW5ldml0YWJsZSB0aGF0IG1hbnkgb2ZmaWNlcyBtdXN0IGJlIGdhdGhlcmVkIGludG8gZmV3CgkJCQkJaGFuZHMg77yIZm9yIG93aW5nIHRvIHNob3J0YWdlIG9mIG1hbnBvd2VyIGl0IGlzIG5vdCBlYXN5IGZvciBtYW55IHBlb3BsZQoJCQkJCXRvIGJlIGluIG9mZmljZSwgc2luY2Ugd2hvIHdpbGwgdGFrZSBvdmVyIHRoZSBwb3N0cyBhcyB0aGVpcgoJCQkJCXN1Y2Nlc3NvcnM/77yJLiBCdXQgc29tZXRpbWVzIHNtYWxsIHN0YXRlcyByZXF1aXJlIHRoZSBzYW1lIG1hZ2lzdHJhY2llcwoJCQkJCWFuZCBsYXdzIGFzIGxhcmdlIG9uZXMgZXhjZXB0IHRoYXQgdGhlIGxhdHRlciByZXF1aXJlIHRoZSBzYW1lIHBlcnNvbnMgdG8gc2VydmUKCQkJCQlvZnRlbiwgYnV0IGluIHRoZSBmb3JtZXIgdGhpcyBvbmx5IG9jY3VycyBhZnRlciBhIGxvbmcgaW50ZXJ2YWwuIEhlbmNlIGl0IGlzCgkJCQkJcG9zc2libGUgdG8gYXNzaWduIHNldmVyYWwgZHV0aWVzIHRvIG9uZSBtYW4gYXQgdGhlIHNhbWUgdGltZSDvvIhzaW5jZQoJCQkJCXRoZXkgd2lsbCBub3QgaW50ZXJmZXJlIHdpdGggb25lIGFub3RoZXLvvIksIGFuZCB0byBtZWV0IHRoZSBzaG9ydGFnZSBvZgoJCQkJCW1hbi1wb3dlciBpdCBpcyBuZWNlc3NhcnkgdG8gbWFrZSB0aGUgbWFnaXN0cmFjaWVzIGxpa2Ugc3BpdC1sYW1waG9sZGVycy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QW4gaW1wbGVtZW50IO+8iGl0cyBleGFjdCBzaGFwZSBkb2VzCgkJCQkJCW5vdCBhcHBlYXIgdG8gYmUga25vd27vvIkgdXNlZCBieSBzb2xkaWVycyBvbiBjYW1wYWlnbiwgaGVyZQoJCQkJCQltZW50aW9uZWQgYXMgYW4gaWxsdXN0cmF0aW9uIG9mIG9uZSB0b29sIHNlcnZpbmcgdHdvIHB1cnBvc2VzLCBjZi4gMTI1MmIKCQkJCQkJMS48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMi42IiB1bml0PSJMb2ViIGNoYXAiIC8+SWYgdGhlcmVmb3JlIHdlIGFyZSBhYmxlIHRvIHNheSBob3cKCQkJCQltYW55IG1hZ2lzdHJhY2llcyBldmVyeSBzdGF0ZSBtdXN0IG5lY2Vzc2FyaWx5IHBvc3Nlc3MgYW5kIGhvdyBtYW55LCB0aG91Z2ggbm90CgkJCQkJYWJzb2x1dGVseSBuZWNlc3NhcnksIGl0IG91Z2h0IHRvIHBvc3Nlc3MsIGtub3dpbmcgdGhlc2UgcG9pbnRzIG9uZSBtaWdodCBtb3JlCgkJCQkJZWFzaWx5IG1ha2UgYSBjb21iaW5hdGlvbiBvZiB0aG9zZSBtYWdpc3RyYWNpZXMgd2hpY2ggYXJlIG9mIGEgc3VpdGFibGUgbmF0dXJlCgkJCQkJdG8gYmUgY29tYmluZWQgaW50byBhIHNpbmdsZSBvZmZpY2UuIEFuZCBpdCBpcyBzdWl0YWJsZSBmb3IgdGhlIGZ1cnRoZXIgcXVlc3Rpb24KCQkJCQlub3QgdG8gYmUgb3Zlcmxvb2tlZCwgd2hhdCBraW5kcyBvZiBtYXR0ZXJzIG91Z2h0IHRvIGJlIGF0dGVuZGVkIHRvIGJ5IGEgbnVtYmVyCgkJCQkJb2Ygb2ZmaWNpYWxzIGxvY2FsbHkgZGlzdHJpYnV0ZWQgYW5kIHdoYXQgb3VnaHQgdG8gYmUgdW5kZXIgdGhlIGF1dGhvcml0eSBvZiBvbmUKCQkJCQltYWdpc3RyYXRlIGZvciBhbGwgbG9jYWxpdGllcywgZm9yIGV4YW1wbGUgc2hvdWxkIGdvb2Qgb3JkZXIgYmUgc2VlbiB0byBpbiB0aGUKCQkJCQltYXJrZXQtcGxhY2UgYnkgYSBDb250cm9sbGVyIG9mIHRoZSBNYXJrZXQgYW5kIGVsc2V3aGVyZSBieSBhbm90aGVyIG9mZmljaWFsLCBvcgoJCQkJCWV2ZXJ5d2hlcmUgYnkgdGhlIHNhbWUgb25lPyBhbmQgb3VnaHQgdGhlIG9mZmljZXMgdG8gYmUgZGl2aWRlZCBhY2NvcmRpbmcgdG8gdGhlCgkJCQkJZnVuY3Rpb24gb3IgYWNjb3JkaW5nIHRvIHRoZSBwZXJzb25zIGNvbmNlcm5lZOKAlEkgbWVhbiwgZm9yIGluc3RhbmNlLAoJCQkJCXNob3VsZCB0aGVyZSBiZSBhIHNpbmdsZSBvZmZpY2lhbCBpbiBjb250cm9sIG9mIGdvb2Qgb3JkZXIsIG9yIGEgZGlmZmVyZW50CgkJCQkJCW9uZTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3IgY2hpbGRyZW4gYW5kIGZvciB3b21lbj8KCQkJCQkJPC90cmFuc2xhdGlvbj4="
translation['4.1300a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBhbHNvIHVuZGVyIHRoZSB2YXJpb3VzCgkJCQkJY29uc3RpdHV0aW9ucyBkb2VzIHRoZSBuYXR1cmUgb2YgdGhlIG1hZ2lzdHJhY2llcyB2YXJ5IGluIGFjY29yZGFuY2Ugd2l0aCBlYWNoCgkJCQkJb3IgZG9lcyBpdCBub3QgdmFyeSBhdCBhbGzigJRmb3IgZXhhbXBsZSBpbiBkZW1vY3JhY3ksIG9saWdhcmNoeSwKCQkJCQlhcmlzdG9jcmFjeSBhbmQgbW9uYXJjaHkgYXJlIHRoZSBtYWdpc3RyYWNpZXMgdGhlIHNhbWUgaW4gdGhlaXIgcG93ZXJzLCBhbHRob3VnaAoJCQkJCXRoZXkgYXJlIG5vdCBmaWxsZWQgZnJvbSBlcXVhbCByYW5rcyBub3IgZnJvbSBzaW1pbGFyIGNsYXNzZXMgYnV0IGFyZSBkaWZmZXJlbnQKCQkJCQlpbiBkaWZmZXJlbnQgY29uc3RpdHV0aW9ucyDvvIhmb3IgZXhhbXBsZSBpbiBhcmlzdG9jcmFjaWVzIGRyYXduIGZyb20gdGhlCgkJCQkJZWR1Y2F0ZWQsIGluIG9saWdhcmNoaWVzIGZyb20gdGhlIHdlYWx0aHksIGFuZCBpbiBkZW1vY3JhY2llcyBmcm9tIHRoZQoJCQkJCWZyZWXvvIksIG9yIGFsdGhvdWdoIHNvbWUgY29uc3RpdHV0aW9ucyBoYXBwZW4gdG8gYmUgY29ycmVzcG9uZGVudCB3aXRoCgkJCQkJdGhlIGFjdHVhbCBkaWZmZXJlbmNlcyBvZiB0aGVpciBtYWdpc3RyYWNpZXMsIHlldCBpbiBvdGhlciBjYXNlcyBhcmUgdGhlIHNhbWUKCQkJCQltYWdpc3RyYWNpZXMgYWR2YW50YWdlb3VzIGV2ZW4gd2hlcmUgdGhlIGNvbnN0aXR1dGlvbnMgZGlmZmVyIO+8iGZvciBpbgoJCQkJCXNvbWUgcGxhY2VzIGl0IGlzIHN1aXRhYmxlIGZvciB0aGUgc2FtZSBtYWdpc3RyYWNpZXMgdG8gaGF2ZSBsYXJnZSBmdW5jdGlvbnMgYW5kCgkJCQkJaW4gb3RoZXIgcGxhY2VzIHNtYWxsIG9uZXPvvIk/IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPk5vdCBidXQgd2hhdCB0aGVyZSBhcmUgYWxzbyBzb21lIG9mZmljZXMgcGVjdWxpYXIgdG8KCQkJCQlzcGVjaWFsIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiwgZm9yIGluc3RhbmNlIHRoZSBvZmZpY2Ugb2YgUHJlbGltaW5hcnkKCQkJCQkJQ291bmNpbGxvcnMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMjk4YiAyOSBuLjwvbm90ZT4gVGhpcwoJCQkJCWlzIHVuZGVtb2NyYXRpYywgYWx0aG91Z2ggYSBDb3VuY2lsIGlzIGEgcG9wdWxhciBib2R5LCBmb3IgdGhlcmUgaXMgYm91bmQgdG8gYmUKCQkJCQlzb21lIGJvZHkgb2YgdGhpcyBuYXR1cmUgdG8gaGF2ZSB0aGUgZHV0eSBvZiBwcmVwYXJpbmcgbWVhc3VyZXMgZm9yIHRoZSBwb3B1bGFyCgkJCQkJYXNzZW1ibHksIGluIG9yZGVyIHRoYXQgaXQgbWF5IGJlIGFibGUgdG8gYXR0ZW5kIHRvIGl0cyBidXNpbmVzczsgYnV0IGEKCQkJCQlwcmVwYXJhdG9yeSBjb21taXR0ZWUsIGlmIHNtYWxsLCBpcyBvbGlnYXJjaGljYWwsIGFuZCBQcmVsaW1pbmFyeSBDb3VuY2lsbG9ycwoJCQkJCW11c3QgbmVjZXNzYXJpbHkgYmUgZmV3IGluIG51bWJlciwgc28gdGhhdCB0aGV5IGFyZSBhbiBvbGlnYXJjaGljYWwgZWxlbWVudC4gQnV0CgkJCQkJd2hlcmUgYm90aCBvZiB0aGVzZSBtYWdpc3RyYWNpZXMgZXhpc3QsIHRoZSBQcmVsaW1pbmFyeSBDb3VuY2lsbG9ycyBhcmUgaW4KCQkJCQlhdXRob3JpdHkgb3ZlciB0aGUgQ291bmNpbGxvcnMsIHNpbmNlIGEgY291bmNpbGxvciBpcyBhIGRlbW9jcmF0aWMgb2ZmaWNpYWwsIGJ1dAoJCQkJCWEgcHJlbGltaW5hcnkgY291bmNpbGxvciBpcyBhbiBvbGlnYXJjaGljIG9uZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMi45IiB1bml0PSJMb2ViIGNoYXAiIC8+QWxzbyB0aGUgcG93ZXIgb2YgdGhlIENvdW5jaWwgaXMgd2Vha2VuZWQgaW4gZGVtb2NyYWNpZXMKCQkJCQlvZiB0aGUgc29ydCBpbiB3aGljaCB0aGUgcGVvcGxlIGluIGFzc2VtYmx5IGRlYWxzIHdpdGggZXZlcnl0aGluZyBpdHNlbGY7CgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzAwYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['4.1300a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGlzIHVzdWFsbHkgaGFwcGVucyB3aGVuIHRoZXJlIGlzIGEgcGxlbnRpZnVsIHN1cHBseSBvZgoJCQkJCXBheSBmb3IgdGhvc2Ugd2hvIGF0dGVuZCB0aGUgYXNzZW1ibHksIGZvciBiZWluZyBhdCBsZWlzdXJlIHRoZXkgbWVldCBmcmVxdWVudGx5CgkJCQkJYW5kIGRlY2lkZSBhbGwgdGhpbmdzIHRoZW1zZWx2ZXMuIEJ1dCBhIFN1cGVyaW50ZW5kZW50IG9mIENoaWxkcmVuIGFuZCBhCgkJCQkJU3VwZXJpbnRlbmRlbnQgb2YgV29tZW4sIGFuZCBhbnkgb3RoZXIgbWFnaXN0cmF0ZXMgdGhhdCBleGVyY2lzZSBhIHNpbWlsYXIgc29ydAoJCQkJCW9mIHN1cGVydmlzaW9uLCBhcmUgYW4gYXJpc3RvY3JhdGljIGZlYXR1cmUsIGFuZCBub3QgZGVtb2NyYXRpYyDvvIhmb3IKCQkJCQlob3cgaXMgaXQgcG9zc2libGUgdG8gcHJldmVudCB0aGUgd2l2ZXMgb2YgdGhlIHBvb3IgZnJvbSBnb2luZyBvdXQgb2YgZG9vcnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IgcG9zc2libHkg4oCYZnJvbSBnb2luZyBpbgoJCQkJCQlwcm9jZXNzaW9uc+KAmTogU29sb24gbWFkZSByZWd1bGF0aW9ucyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM6x4b+Wz4IKCQkJCQkJCeG8kM6+4b25zrTOv865z4Igz4Thv7bOvSDOs8+Fzr3Osc65zrrhv7bOvSDOus6x4b22IM+Ezr/hv5bPgiDPgOG9s869zrjOtc+DzrkgzrrOseG9tiDPhM6x4b+Wz4IKCQkJCQkJCeG8kc6/z4HPhM6x4b+Wz4I8L2ZvcmVpZ24+77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGx1dC4gU29sLiAyMSIgdmFsaWQ9InllcyI+UGx1dC4gU29sLgoJCQkJCQkJMjE8L2JpYmw+77yJLjwvbm90ZT4/77yJIG5vciB5ZXQgb2xpZ2FyY2hpYyDvvIhmb3IKCQkJCQl0aGUgd2l2ZXMgb2Ygb2xpZ2FyY2hpYyBydWxlcnMgYXJlIGx1eHVyaW91c++8iS4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4TOseG/ls+CCgkJCQkJCQnhvJDOvuG9uc60zr/Ouc+CIM+E4b+2zr0gzrPPhc69zrHOuc664b+2zr0gzrrOseG9tiDPhM6/4b+Wz4Igz4DhvbPOvc64zrXPg865IM66zrHhvbYgz4TOseG/ls+CCgkJCQkJCQnhvJHOv8+Bz4TOseG/ls+CPC9mb3JlaWduPu+8iDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsdXQuIFNvbC4gMjEiIHZhbGlkPSJ5ZXMiPlBsdXQuIFNvbC4KCQkJCQkJCTIxPC9iaWJsPu+8iS48L3RyYW5zbGF0aW9uPg=="
translation['4.1300a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgbGV0IHRoZSBkaXNjdXNzaW9uIG9mIHRoZXNlIG1hdHRlcnMgZ28gbm8KCQkJCQlmdXJ0aGVyIGF0IHByZXNlbnQsIGFuZCBsZXQgdXMgYXR0ZW1wdCB0byBnbyB0aHJvdWdoIGZyb20gdGhlIGJlZ2lubmluZyB0aGUKCQkJCQlxdWVzdGlvbiBvZiB0aGUgd2F5cyBvZiBhcHBvaW50aW5nIHRoZSBtYWdpc3RyYXRlcy4gVGhlIHZhcmlldGllcyBoZXJlIGRlcGVuZCBvbgoJCQkJCXRocmVlIGRldGVybWluYW50cywgdGhlIGNvbWJpbmF0aW9ucyBvZiB3aGljaCBtdXN0IGdpdmUgYWxsIHRoZSBwb3NzaWJsZSBtb2Rlcy4KCQkJCQlPbmUgb2YgdGhlc2UgdGhyZWUgZGV0ZXJtaW5pbmcgcG9pbnRzIGlzLCB3aG8gYXJlIHRoZSBwZXJzb25zIHdobyBhcHBvaW50IHRoZQoJCQkJCW1hZ2lzdHJhdGVzPyB0aGUgc2Vjb25kIGlzLCBmcm9tIHdob20/IGFuZCBsYXN0LCBpbiB3aGF0IG1hbm5lcj8gQW5kIG9mIGVhY2ggb2YKCQkJCQl0aGVzZSB0aHJlZSBkZXRlcm1pbmFudHMgdGhlcmUgYXJlIHRocmVlIHZhcmlhdGlvbnM6IGVpdGhlciBhbGwgdGhlIGNpdGl6ZW5zCgkJCQkJYXBwb2ludCBvciBzb21lLCBhbmQgZWl0aGVyIGZyb20gYWxsIG9yIGZyb20gYSBjZXJ0YWluIGNsYXNzIO+8iGRlZmluZWQKCQkJCQlmb3IgaW5zdGFuY2UgYnkgcHJvcGVydHktYXNzZXNzbWVudCBvciBiaXJ0aCBvciB2aXJ0dWUgb3Igc29tZSBvdGhlciBzdWNoCgkJCQkJcXVhbGlmaWNhdGlvbiwgYXMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNZWdhcmEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1lZ2FyYSI+TWVnYXJhPC9wbGFjZU5hbWU+IG9ubHkKCQkJCQl0aG9zZSB3ZXJlIGVsaWdpYmxlIHdobyByZXR1cm5lZCBpbiBhIGJvZHkgZnJvbSBleGlsZSBhbmQgZm91Z2h0IHRvZ2V0aGVyCgkJCQkJYWdhaW5zdCB0aGUgY29tbW9uIHBlb3BsZe+8iSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SXQgaXMKCQkJCQkJcXVpdGUgdW5jZXJ0YWluIHdoZW4gdGhpcyBldmVudCB0b29rIHBsYWNlIGFuZCB3aGV0aGVyIGl0IGlzIHRoZSBzYW1lIGFzCgkJCQkJCXRob3NlIHJlZmVycmVkIHRvIGF0IDEzMDJiIDMwIGYuIGFuZCBsMzA0YiAzNCBmZi48L25vdGU+IGFuZCB0aGUgbW9kZSBvZgoJCQkJCWFwcG9pbnRtZW50IG1heSBiZSBlaXRoZXIgYnkgdm90ZSBvciBieSBsb3Q7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hZ2FpbiwgdGhlc2Ugc3lzdGVtcyBtYXkgYmUgY291cGxlZAoJCQkJCQl0b2dldGhlcuKAlDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5JIG1lYW4gdGhhdAoJCQkJCXNvbWUgY2l0aXplbnMgbWF5IGFwcG9pbnQgdG8gc29tZSBvZmZpY2VzIGJ1dCBhbGwgdG8gb3RoZXJzLCBhbmQgdG8gc29tZSBvZmZpY2VzCgkJCQkJYWxsIGNpdGl6ZW5zIG1heSBiZSBlbGlnaWJsZSBidXQgdG8gb3RoZXJzIG9ubHkgYSBjZXJ0YWluIGNsYXNzLCBhbmQgdG8gc29tZQoJCQkJCWFwcG9pbnRtZW50IG1heSBiZSBieSB2b3RlIGJ1dCB0byBvdGhlcnMgYnkgbG90LiBBbmQgb2YgZWFjaCB2YXJpYXRpb24gb2YgdGhlc2UKCQkJCQlkZXRlcm1pbmFudHMgdGhlcmUgd2lsbCBiZSBmb3VyIG1vZGVzOiBlaXRoZXIgYWxsIGNpdGl6ZW5zIG1heSBhcHBvaW50IGZyb20gYWxsCgkJCQkJYnkgdm90ZSwgb3IgYWxsIGZyb20gYWxsIGJ5IGxvdOKAlGFuZCBmcm9tIGFsbCBlaXRoZXIgc2VjdGlvbiBieQoJCQkJCXNlY3Rpb24sIGZvciBpbnN0YW5jZSBieSB0cmliZXMgb3IgZGVtZXMgb3IgYnJvdGhlcmhvb2RzIHVudGlsIHRoZSBwcm9jZWR1cmUgaGFzCgkJCQkJZ29uZSB0aHJvdWdoIGFsbCB0aGUgY2l0aXplbnMsIG9yIGZyb20gdGhlIHdob2xlIG51bWJlciBldmVyeSB0aW1lLOKAlG9yCgkJCQkJZWxzZSBwYXJ0bHkgaW4gb25lIHdheSBhbmQgcGFydGx5IGluIHRoZSBvdGhlci4gQWdhaW4sIGlmIHRoZSBlbGVjdG9ycyBhcmUgc29tZQoJCQkJCW9mIHRoZSBjaXRpemVucywgdGhleSBtdXN0IGVpdGhlciBhcHBvaW50IGZyb20gYWxsIGJ5IHZvdGUsIG9yIGZyb20gYWxsIGJ5IGxvdCwKCQkJCQlvciBmcm9tIHNvbWUgYnkgdm90ZSwgb3IgZnJvbSBzb21lIGJ5IGxvdCwgb3IgcGFydGx5IGluIG9uZSB3YXkgYW5kIHBhcnRseSBpbgoJCQkJCXRoZSBvdGhlcuKAlEkgbWVhbiBwYXJ0bHkgYnkgdm90ZSBhbmQgcGFydGx5IGJ5IGxvdC4gSGVuY2UgdGhlIG1vZGVzCgkJCQkJcHJvdmUgdG8gYmUgdHdlbHZlLCBhcGFydCBmcm9tIHRoZSB0d28gY29tYmluYXRpb25zLiA8L3RyYW5zbGF0aW9uPg=="
translation['4.1300b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgYW1vbmcgdGhlc2UsIHR3byB3YXlzIG9mIGFwcG9pbnRtZW50IGFyZQoJCQkJCWRlbW9jcmF0aWPigJRmb3IgYWxsIHRvIGFwcG9pbnQgZnJvbSBhbGwgYnkgdm90ZSwgb3IgYnkgbG90LCBvciBieQoJCQkJCWJvdGjigJRzb21lIG9mZmljZXMgYnkgbG90IGFuZCBvdGhlcnMgYnkgdm90ZTsgYnV0IGZvciBub3QgYWxsIHRvIGJlIHRoZQoJCQkJCWVsZWN0b3JzIGFuZCBmb3IgdGhlbSB0byBhcHBvaW50IHNpbXVsdGFuZW91c2x5LCBhbmQgZWl0aGVyIGZyb20gYWxsIG9yIGZyb20KCQkJCQlzb21lIGVpdGhlciBieSBsb3Qgb3IgYnkgdm90ZSBvciBieSBib3RoLCBvciBzb21lIG9mZmljZXMgZnJvbSBhbGwgYW5kIG90aGVycwoJCQkJCWZyb20gc29tZSBieSBib3RoIO+8iGJ5IHdoaWNoIEkgbWVhbiBzb21lIGJ5IGxvdCBhbmQgb3RoZXJzIGJ5CgkJCQkJdm90Ze+8iSBpcyBjb25zdGl0dXRpb25hbC4gQW5kIGZvciBzb21lIHRvIGFwcG9pbnQgZnJvbSBhbGwsIHRvIHNvbWUKCQkJCQlvZmZpY2VzIGJ5IHZvdGUgYW5kIHRvIG90aGVycyBieSBsb3Qgb3IgYnkgYm90aDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIHRoZSBHcmVlayBzaG91bGQgYmUgcmV3cml0dGVuIHRvIGdpdmUg4oCYZm9yCgkJCQkJCXNvbWUgdG8gYXBwb2ludCBmcm9tIGFsbCBlaXRoZXIgYnkgdm90ZSBvciBieSBsb3Qgb3IgYnkKCQkJCQkJYm90aC7igJk8L25vdGU+IO+8iHRvIHNvbWUgYnkgbG90IGFuZCB0byBvdGhlcnMgYnkKCQkJCQl2b3Rl77yJIGlzIG9saWdhcmNoaWNhbDsgYW5kIGl0IGlzIGV2ZW4gbW9yZSBvbGlnYXJjaGljYWwgdG8gYXBwb2ludCBmcm9tCgkJCQkJYm90aCBjbGFzc2VzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEyLjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRvIGFwcG9pbnQgc29tZQoJCQkJCW9mZmljZXMgZnJvbSBhbGwgYW5kIHRoZSBvdGhlcnMgZnJvbSBhIGNlcnRhaW4gY2xhc3MgaXMgY29uc3RpdHV0aW9uYWwgd2l0aCBhbgoJCQkJCWFyaXN0b2NyYXRpYyBiaWFzOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMwMGIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['4.1300b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPm9yIHRvIGFwcG9pbnQgc29tZSBieSB2b3RlIGFuZCBvdGhlcnMgYnkgbG90LiBBbmQKCQkJCQlmb3IgYSBjZXJ0YWluIGNsYXNzIHRvIGFwcG9pbnQgZnJvbSBhIGNlcnRhaW4gY2xhc3MgJmx0O2J5IHZvdGUmZ3Q7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgaW5zZXJ0aW9uIGJ5IExhbWJpbnVzIHNlZW1zCgkJCQkJCWNlcnRhaW4uPC9ub3RlPiBpcyBvbGlnYXJjaGljYWwsIGFuZCBzbyBpdCBpcyBmb3IgYSBjZXJ0YWluIGNsYXNzIHRvIGFwcG9pbnQKCQkJCQlmcm9tIGEgY2VydGFpbiBjbGFzcyBieSBsb3Qg77yIYWx0aG91Z2ggbm90IHdvcmtpbmcgb3V0IGluIHRoZSBzYW1lCgkJCQkJd2F577yJLCBhbmQgZm9yIGEgY2VydGFpbiBjbGFzcyB0byBhcHBvaW50IGZyb20gYSBjZXJ0YWluIGNsYXNzIGJ5IGJvdGgKCQkJCQltZXRob2RzLiBBbmQgZm9yIGEgY2VydGFpbiBjbGFzcyB0byBtYWtlIGEgcHJlbGltaW5hcnkgc2VsZWN0aW9uIGZyb20gdGhlIHdob2xlCgkJCQkJYm9keSBhbmQgdGhlbiBmb3IgYWxsIHRvIGFwcG9pbnQgZnJvbSBhbW9uZyBjZXJ0YWluIHBlcnNvbnMg77yIdGh1cwoJCQkJCXNlbGVjdGVk77yJIGlzIGFyaXN0b2NyYXRpYy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U28gbWFueSBpbgoJCQkJCW51bWJlciB0aGVyZWZvcmUgYXJlIHRoZSBtb2RlcyBvZiBhcHBvaW50aW5nIHRvIHRoZSBtYWdpc3RyYWNpZXMsIGFuZCB0aGlzIGlzCgkJCQkJaG93IHRoZSBtb2RlcyBhcmUgY2xhc3NpZmllZCBhY2NvcmRpbmcgdG8gdGhlIGRpZmZlcmVudCBjb25zdGl0dXRpb25zOyBhbmQgd2hhdAoJCQkJCXJlZ3VsYXRpb25zIGFyZSBhZHZhbnRhZ2VvdXMgZm9yIHdoYXQgcGVvcGxlIGFuZCBob3cgdGhlIGFwcG9pbnRtZW50cyBvdWdodCB0bwoJCQkJCWJlIGNvbmR1Y3RlZCB3aWxsIGJlIG1hZGUgY2xlYXIgYXQgdGhlIHNhbWUgdGltZSBhcyB3ZSBjb25zaWRlciB3aGF0IGFyZSB0aGUKCQkJCQlwb3dlcnMgb2YgdGhlIG9mZmljZXMuIEJ5IHRoZSBwb3dlciBvZiBhbiBvZmZpY2UgSSBtZWFuIGZvciBpbnN0YW5jZSB0aGUgY29udHJvbAoJCQkJCW9mIHRoZSByZXZlbnVlcyBhbmQgdGhlIGNvbnRyb2wgb2YgdGhlIGd1YXJkOyBzaW5jZSBhIGRpZmZlcmVudCBzb3J0IG9mIHBvd2VyCgkJCQkJYmVsb25ncyBmb3IgZXhhbXBsZSB0byBhIGdlbmVyYWxzaGlwIGFuZCB0byB0aGUgb2ZmaWNlIHRoYXQgY29udHJvbHMgbWFya2V0CgkJCQkJCWNvbnRyYWN0cy48L3RyYW5zbGF0aW9uPg=="
translation['4.1300b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PZiB0aGUgdGhyZWUgZmFjdG9ycyBvZiBhIGNvbnN0aXR1dGlvbiBpdCByZW1haW5zIHRvIHNwZWFrIG9mCgkJCQkJdGhlIGp1ZGljaWFyeSwgYW5kIG9mIGp1ZGljaWFsIGJvZGllcyBhbHNvIHdlIG11c3QgY29uc2lkZXIgdGhlIHZhcmlvdXMgbW9kZXMsCgkJCQkJaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBzYW1lIHBsYW4uIEFuZCBhIGRpZmZlcmVuY2UgYW1vbmcganVkaWNpYWwgY291cnRzIHJlc3RzCgkJCQkJdXBvbiB0aHJlZSBkZXRlcm1pbmFudHPigJRjb25zdGl0dWVudHMsIHNwaGVyZSBvZiBhY3Rpb24sIGFuZCBtb2RlIG9mCgkJCQkJYXBwb2ludG1lbnQuIEFzIHRvIHRoZWlyIGNvbnN0aXR1ZW50cyBJIG1lYW4gYXJlIHRoZSBjb3VydHMgZHJhd24gZnJvbSBhbGwgdGhlCgkJCQkJY2l0aXplbnMgb3IgZnJvbSBhIGNlcnRhaW4gY2xhc3M/IGFzIHRvIHNwaGVyZSBvZiBhY3Rpb24sIGhvdyBtYW55IGtpbmRzIG9mCgkJCQkJY291cnRzIGFyZSB0aGVyZT8gYW5kIGFzIHRvIG1vZGUgb2YgYXBwb2ludG1lbnQsIGFyZSB0aGV5IGFwcG9pbnRlZCBieSBsb3Qgb3IgYnkKCQkJCQl2b3RlPyBGaXJzdCB0aGVuIGxldCB1cyBkaXN0aW5ndWlzaCBob3cgbWFueSBraW5kcyBvZiBjb3VydHMgdGhlcmUgYXJlLiBUaGV5IGFyZQoJCQkJCWVpZ2h0IGluIG51bWJlciwgb25lIGEgY291cnQgb2YgYXVkaXQsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFub3RoZXIgdG8gZGVhbCB3aXRoIG9mZmVuZGVycyBhZ2FpbnN0IGFueSBwdWJsaWMgaW50ZXJlc3QsIGFub3RoZXIgd2l0aAoJCQkJCW1hdHRlcnMgdGhhdCBiZWFyIG9uIHRoZSBjb25zdGl0dXRpb24sIGEgZm91cnRoIGZvciBib3RoIG1hZ2lzdHJhdGVzIGFuZCBwcml2YXRlCgkJCQkJcGVyc29ucyBpbiBkaXNwdXRlcyBhYm91dCBwZW5hbHRpZXMsIGZpZnRoIHRoZSBjb3VydCBkZWFsaW5nIHdpdGggcHJpdmF0ZQoJCQkJCWNvbnRyYWN0cyB0aGF0IGFyZSBvbiBhbiBpbXBvcnRhbnQgc2NhbGUsIGFuZCBiZXNpZGUgdGhlc2UgdGhlcmUgaXMKCQkJCQnvvIg277yJIHRoZSBjb3VydCB0aGF0IHRyaWVzIGhvbWljaWRlLCBhbmQg77yIN++8iQoJCQkJCXRoYXQgd2hpY2ggaGVhcnMgYWxpZW4gc3VpdHMgPC90cmFuc2xhdGlvbj4="
translation['4.1301a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPu+8iG9mIGNvdXJ0cyBvZiBob21pY2lkZSB0aGVyZSBhcmUgZm91ciBraW5kcywgd2hldGhlciB0aGUganVyeSBpcyB0aGUKCQkJCQlzYW1lIG9yIGRpZmZlcmVudOKAlG5hbWVseSwgZm9yIGNhc2VzIG9mIGRlbGliZXJhdGUgaG9taWNpZGUsIG9mCgkJCQkJaW52b2x1bnRhcnkgaG9taWNpZGUsIG9mIGhvbWljaWRlIGFkbWl0dGVkIGJ1dCBjbGFpbWVkIHRvIGJlIGp1c3RpZmlhYmxlLCBhbmQKCQkJCQlmb3VydGggdG8gZGVhbCB3aXRoIGNoYXJnZXMgb2YgaG9taWNpZGUgYnJvdWdodCBhZ2FpbnN0IG1lbiB0aGF0IGhhdmUgZmxlZCBmcm9tCgkJCQkJdGhlIGNvdW50cnkgZm9yIGhvbWljaWRlLCB1cG9uIHRoZWlyIHJldHVybiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBtZW4gdGhhdCBoYWQgYmVlbiBhbGxvd2VkIHRvIGZsZWUgdGhlIGNvdW50cnkgd2hlbiBjaGFyZ2VkIHdpdGgKCQkJCQkJYWNjaWRlbnRhbCBob21pY2lkZSwgYW5kIG9uIHRoZWlyIHJldHVybiB3ZXJlIGFjY3VzZWQgb2YgYW5vdGhlciBob21pY2lkZSwgYQoJCQkJCQl3aWxsZnVsIG11cmRlci48L25vdGU+IHN1Y2ggYXMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGZvciBpbnN0YW5jZSB0aGUgQ291cnQgYXQgUGhyZWF0dG8gaXMgc2FpZCB0byBiZSwKCQkJCQlhbHRob3VnaCBzdWNoIGNhc2VzIGFyZSBvZiByYXJlIG9jY3VycmVuY2UgaW4gdGhlIHdob2xlIGNvdXJzZSBvZiBoaXN0b3J5LCBldmVuCgkJCQkJaW4gdGhlIGdyZWF0IHN0YXRlcyBhbmQgb2YgdGhlIGFsaWVucycgY291cnQgb25lIGJyYW5jaCBoZWFycyBzdWl0cyBvZiBhbGllbnMKCQkJCQlhZ2FpbnN0IGFsaWVucyBhbmQgYW5vdGhlciBvZiBhbGllbnMgYWdhaW5zdCBjaXRpemVuc++8iTsgYW5kIGFsc28gYmVzaWRlCgkJCQkJYWxsIG9mIHRoZXNlIHRoZXJlIGFyZSDvvIg477yJIGNvdXJ0cyB0byB0cnkgY2FzZXMgb2YgcGV0dHkKCQkJCQljb250cmFjdHMsIGludm9sdmluZyBzdW1zIG9mIG9uZSBkcmFjaG1hLCBmaXZlIGRyYWNobWFzIG9yIGEgbGl0dGxlCgkJCQkJbW9yZeKAlGZvciBldmVuIHRoZXNlIGNhc2VzIGhhdmUgdG8gYmUgdHJpZWQsIHRob3VnaCB0aGV5IGFyZSBub3QKCQkJCQlzdWl0YWJsZSBmb3IgYSBudW1lcm91cyBqdXJ5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEzLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQKCQkJCQlsZXQgdXMgZGlzbWlzcyB0aGUgc3ViamVjdCBvZiB0aGVzZSBwZXR0eSBzdWl0cywgYW5kIHRoZSBjb3VydHMgZm9yIGhvbWljaWRlIGFuZAoJCQkJCXRob3NlIGZvciBhbGllbnMsIGFuZCBsZXQgdXMgc3BlYWsgYWJvdXQgcG9saXRpY2FsIHRyaWFscywgd2hpY2ggd2hlbiBub3Qgd2VsbAoJCQkJCWNvbmR1Y3RlZCBjYXVzZSBwYXJ0eSBkaXZpc2lvbnMgYW5kIHJldm9sdXRpb25hcnkgZGlzdHVyYmFuY2VzLiBBbmQgbmVjZXNzYXJpbHkKCQkJCQllaXRoZXIgYWxsIHRoZSBqdWRnZXMgb2YgYWxsIHRoZSBjYXNlcyB0aGF0IGhhdmUgYmVlbiBjbGFzc2lmaWVkIHdpbGwgYmUKCQkJCQlhcHBvaW50ZWQgYnkgdm90ZSwgb3IgYnkgbG90LCBvciBhbGwgaW4gYWxsIGNhc2VzIHBhcnRseSBieSBsb3QgYW5kIHBhcnRseSBieQoJCQkJCXZvdGUsIG9yIGluIHNvbWUgY2FzZXMgc29tZSBqdWRnZXMgd2lsbCBiZSBhcHBvaW50ZWQgYnkgbG90IGFuZCBvdGhlcnMgYnkgdm90ZQoJCQkJCWZvciB0aGUgc2FtZSBjYXNlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMwMWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['4.1301a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPlRoZXNlIG1vZGVzIHRoZW4gYXJlIGZvdXIgaW4gbnVtYmVyLCBhbmQgdGhlCgkJCQkJc2VjdGlvbmFsIG1vZGVzIGFsc28gbWFrZSBhcyBtYW55IG90aGVyczsgZm9yIGhlcmUgYWdhaW4gdGhlIGp1ZGdlcyBmb3IgYWxsCgkJCQkJY2FzZXMgbWF5IGJlIGRyYXduIGJ5IHZvdGUgZnJvbSBhIGNlcnRhaW4gY2xhc3MsIG9yIGZvciBhbGwgY2FzZXMgYnkgbG90IGZyb20gYQoJCQkJCWNlcnRhaW4gY2xhc3MsIG9yIHNvbWUgY291cnRzIG1heSBiZSBhcHBvaW50ZWQgYnkgbG90IGFuZCBvdGhlcnMgYnkgdm90ZSwgb3IKCQkJCQlzb21lIGNvdXJ0cyBtYXkgYmUgY29tcG9zZWQgb2YganVkZ2VzIGNob3NlbiBieSBsb3QgYW5kIGJ5IHZvdGUgZm9yIHRoZSBzYW1lCgkJCQkJY2FzZXMuIFRoZXNlIHRoZW4gYXJlIHRoZSBtb2RlcywgYXMgd2FzIHNhaWQsIGNvcnJlc3BvbmRpbmcgdG8gdGhvc2UgbWVudGlvbmVkLgoJCQkJCQk8L3RyYW5zbGF0aW9uPg=="
translation['5.1301a.19'] = ""
translation['5.1301a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Cb29rIDUgaXMgcGxhY2VkIGFzIEJvb2sgNyBieSBzb21lCgkJCQkJCWVkaXRvcnMsIGFzIEJvb2sgOCBieSBvdGhlcnMsIHNlZSBCb29rIDMgZmluLiwgbm90ZS48L25vdGU+QWxtb3N0IGFsbCB0aGUKCQkJCQlvdGhlciBzdWJqZWN0cyB3aGljaCB3ZSBpbnRlbmRlZCB0byB0cmVhdDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5oYXZlIG5vdyBiZWVuIGRpc2N1c3NlZC4gVGhlcmUgbXVzdCBmb2xsb3cgdGhlIGNvbnNpZGVyYXRpb24gb2YKCQkJCQl0aGUgcXVlc3Rpb25zLCB3aGF0IGFyZSB0aGUgbnVtYmVyIGFuZCB0aGUgbmF0dXJlIG9mIHRoZSBjYXVzZXMgdGhhdCBnaXZlIHJpc2UKCQkJCQl0byByZXZvbHV0aW9ucyBpbiBjb25zdGl0dXRpb25zLCBhbmQgd2hhdCBhcmUgdGhlIGNhdXNlcyB0aGF0IGRlc3Ryb3kgZWFjaCBmb3JtCgkJCQkJb2YgY29uc3RpdHV0aW9uLCBhbmQgb3V0IG9mIHdoYXQgZm9ybXMgaW50byB3aGF0IGZvcm1zIGRvIHRoZXkgdXN1YWxseSBjaGFuZ2UsCgkJCQkJYW5kIGFnYWluIHdoYXQgYXJlIHRoZSBzYWZlZ3VhcmRzIG9mIGNvbnN0aXR1dGlvbnMgaW4gZ2VuZXJhbCBhbmQgb2YgZWFjaCBmb3JtCgkJCQkJaW4gcGFydGljdWxhciwgYW5kIHdoYXQgYXJlIHRoZSBtZWFucyBieSB3aGljaCB0aGUgc2FmZWd1YXJkaW5nIG9mIGVhY2ggbWF5IGJlc3QKCQkJCQliZSBwdXQgaW50byBlZmZlY3QuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkZvciB0aGlzIGRpc3RpbmN0aW9uCgkJCQkJCWJldHdlZW4gYnJvYWQgbWV0aG9kcyBvZiBndWFyZGluZyBhZ2FpbnN0IHJldm9sdXRpb24gYW5kIHRoZSBwcmFjdGljYWwgbWVhbnMKCQkJCQkJYnkgd2hpY2ggdGhvc2UgbWV0aG9kcyBjYW4gYmUgcHV0IGludG8gZWZmZWN0IE5ld21hbiBjb21wYXJlcyA5LjIgZi4sIDEwIGYuOwoJCQkJCQk0LjIuNSBmaW4uLCA2LjEuMS48L25vdGU+CgkJCQkJPC90cmFuc2xhdGlvbj4="
translation['5.1301b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZAoJCQkJCXdlIG11c3QgZmlyc3QgYXNzdW1lIHRoZSBzdGFydGluZy1wb2ludCwgdGhhdCBtYW55IGZvcm1zIG9mIGNvbnN0aXR1dGlvbiBoYXZlCgkJCQkJY29tZSBpbnRvIGV4aXN0ZW5jZSB3aXRoIGV2ZXJ5Ym9keSBhZ3JlZWluZyBhcyB0byB3aGF0IGlzIGp1c3QsIHRoYXQgaXMKCQkJCQlwcm9wb3J0aW9uYXRlIGVxdWFsaXR5LCBidXQgZmFpbGluZyB0byBhdHRhaW4gaXQg77yIYXMgaGFzIGFsc28gYmVlbiBzYWlkCgkJCQkJYmVmb3Jl77yJLiBUaHVzIGRlbW9jcmFjeSBhcm9zZSBmcm9tIG1lbidzIHRoaW5raW5nIHRoYXQgaWYgdGhleSBhcmUKCQkJCQllcXVhbCBpbiBhbnkgcmVzcGVjdCB0aGV5IGFyZSBlcXVhbCBhYnNvbHV0ZWx5IO+8iGZvciB0aGV5IHN1cHBvc2UgdGhhdAoJCQkJCWJlY2F1c2UgdGhleSBhcmUgYWxsIGFsaWtlIGZyZWUgdGhleSBhcmUgZXF1YWwgYWJzb2x1dGVsee+8iSwgb2xpZ2FyY2h5CgkJCQkJYXJvc2UgZnJvbSB0aGVpciBhc3N1bWluZyB0aGF0IGlmIHRoZXkgYXJlIHVuZXF1YWwgYXMgcmVnYXJkcyBzb21lIG9uZSB0aGluZwoJCQkJCXRoZXkgYXJlIHVuZXF1YWwgd2hvbGx5IO+8iGZvciBiZWluZyB1bmVxdWFsIGluIHByb3BlcnR5IHRoZXkgYXNzdW1lIHRoYXQKCQkJCQl0aGV5IGFyZSB1bmVxdWFsIGFic29sdXRlbHnvvIk7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHRoZW4gdGhlIGRlbW9jcmF0cyBjbGFpbSBhcyBiZWluZyBlcXVhbCB0byBwYXJ0aWNpcGF0ZQoJCQkJCWluIGFsbCB0aGluZ3MgaW4gZXF1YWwgc2hhcmVzLCB3aGlsZSB0aGUgb2xpZ2FyY2hzIGFzIGJlaW5nIHVuZXF1YWwgc2VlayB0byBoYXZlCgkJCQkJYSBsYXJnZXIgc2hhcmUsIGZvciBhIGxhcmdlciBzaGFyZSBpcyB1bmVxdWFsLiBBbGwgdGhlc2UgZm9ybXMgb2YgY29uc3RpdHV0aW9uCgkJCQkJdGhlbiBoYXZlIHNvbWUgZWxlbWVudCBvZiBqdXN0aWNlLCBidXQgZnJvbSBhbiBhYnNvbHV0ZSBwb2ludCBvZiB2aWV3IHRoZXkgYXJlCgkJCQkJZXJyb25lb3VzOyBhbmQgb3dpbmcgdG8gdGhpcyBjYXVzZSwgd2hlbiBlYWNoIG9mIHRoZSB0d28gcGFydGllcyBoYXMgbm90IGdvdCB0aGUKCQkJCQlzaGFyZSBpbiB0aGUgY29uc3RpdHV0aW9uIHdoaWNoIGFjY29yZHMgd2l0aCB0aGUgZnVuZGFtZW50YWwgYXNzdW1wdGlvbiB0aGF0CgkJCQkJdGhleSBoYXBwZW4gdG8gZW50ZXJ0YWluLCBmYWN0aW9uIGVuc3Vlcy4gQW5kIG9mIGFsbCBtZW4gdGhvc2Ugd2hvIGV4Y2VsIGluCgkJCQkJdmlydHVlIHdvdWxkIG1vc3QganVzdGlmaWFibHkgc3RpciB1cCBmYWN0aW9uLCB0aG91Z2ggdGhleSBhcmUgbGVhc3QgZ2l2ZW4gdG8KCQkJCQlkb2luZyBzbzsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMDFiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['5.1301b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGV5IGFsb25lIGNhbiB3aXRoIHRoZSBmdWxsZXN0IHJlYXNvbiBiZSBkZWVtZWQgYWJzb2x1dGVseQoJCQkJCXVuZXF1YWwuIEFuZCB0aGVyZSBhcmUgc29tZSBtZW4gd2hvIGJlaW5nIHN1cGVyaW9yIGluIGJpcnRoIGNsYWltIHVuZXF1YWwgcmlnaHRzCgkJCQkJYmVjYXVzZSBvZiB0aGlzIGluZXF1YWxpdHk7IGZvciBwZXJzb25zIHdobyBoYXZlIGFuY2VzdHJhbCB2aXJ0dWUgYW5kIHdlYWx0aAoJCQkJCWJlaGluZCB0aGVtIGFyZSB0aG91Z2h0IHRvIGJlIG5vYmxlLjwvdHJhbnNsYXRpb24+"
translation['5.1301b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS40IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIHRoZW4gcm91Z2hseSBzcGVha2luZyBhcmUgdGhlCgkJCQkJc3RhcnRpbmctcG9pbnRzIGFuZCBzb3VyY2VzIG9mIGZhY3Rpb25zLCB3aGljaCBnaXZlIHJpc2UgdG8gcGFydHkgc3RyaWZlCgkJCQkJ77yIYW5kIHJldm9sdXRpb25zIGR1ZSB0byB0aGlzIHRha2UgcGxhY2UgaW4gdHdvIHdheXM6IHNvbWV0aW1lcyB0aGV5IGFyZQoJCQkJCWluIHJlZ2FyZCB0byB0aGUgY29uc3RpdHV0aW9uLCBhbmQgYWltIGF0IGNoYW5naW5nIGZyb20gdGhlIG9uZSBlc3RhYmxpc2hlZCB0bwoJCQkJCWFub3RoZXIsIGZvciBpbnN0YW5jZSBmcm9tIGRlbW9jcmFjeSB0byBvbGlnYXJjaHksIG9yIHRvIGRlbW9jcmFjeSBmcm9tCgkJCQkJb2xpZ2FyY2h5LCBvciBmcm9tIHRoZXNlIHRvIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQgYW5kIGFyaXN0b2NyYWN5LCBvciBmcm9tCgkJCQkJdGhvc2UgdG8gdGhlc2U7IGJ1dCBzb21ldGltZXMgdGhlIHJldm9sdXRpb24gaXMgbm90IGluIHJlZ2FyZCB0byB0aGUgZXN0YWJsaXNoZWQKCQkJCQljb25zdGl0dXRpb24sIGJ1dCBpdHMgcHJvbW90ZXJzIGRlc2lyZSB0aGUgc2FtZSBmb3JtIG9mIGdvdmVybm1lbnQsIGZvciBpbnN0YW5jZQoJCQkJCW9saWdhcmNoeSBvciBtb25hcmNoeSwgYnV0IHdpc2ggaXQgdG8gYmUgaW4gdGhlaXIgb3duIGNvbnRyb2wuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS41IiB1bml0PSJMb2ViIGNoYXAiIC8+QWdhaW4gaXQgbWF5IGJlIGEgcXVlc3Rpb24gb2YgZGVncmVlOyBmb3IKCQkJCQlpbnN0YW5jZSwgd2hlbiB0aGVyZSBpcyBhbiBvbGlnYXJjaHkgdGhlIG9iamVjdCBtYXkgYmUgdG8gY2hhbmdlIHRvIGEgbW9yZQoJCQkJCW9saWdhcmNoaWNhbCBnb3Zlcm5tZW50IG9yIHRvIGEgbGVzcywgb3Igd2hlbiB0aGVyZSBpcyBhIGRlbW9jcmFjeSB0byBhIG1vcmUgb3IKCQkJCQl0byBhIGxlc3MgZGVtb2NyYXRpYyBnb3Zlcm5tZW50LCBhbmQgc2ltaWxhcmx5IGluIHRoZSBjYXNlIG9mIHRoZSByZW1haW5pbmcKCQkJCQljb25zdGl0dXRpb25zLCB0aGUgYWltIG1heSBiZSBlaXRoZXIgdG8gdGlnaHRlbiB0aGVtIHVwIG9yIHRvIHJlbGF4IHRoZW0uIE9yCgkJCQkJYWdhaW4gdGhlIGFpbSBtYXkgYmUgdG8gY2hhbmdlIGEgY2VydGFpbiBwYXJ0IG9mIHRoZSBjb25zdGl0dXRpb24sIGZvciBleGFtcGxlCgkJCQkJdG8gZXN0YWJsaXNoIG9yIGFib2xpc2ggYSBjZXJ0YWluIG1hZ2lzdHJhY3ksIGFzIGFjY29yZGluZyB0byBzb21lIGFjY291bnRzCgkJCQkJCUx5c2FuZGVyPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmF0dGVtcHRlZCB0byBhYm9saXNoIHRoZQoJCQkJCWtpbmdzaGlwIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiBhbmQgdGhlIGtpbmcKCQkJCQlQYXVzYW5pYXMgdGhlIGVwaG9yYXRlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMzA3YSAzNAoJCQkJCW4uPC9ub3RlPjsgPC90cmFuc2xhdGlvbj4="
translation['5.1302a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS42IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGFsc28gYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTA3NTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMDc1MCI+RXBpZGFtbnVzPC9wbGFjZU5hbWU+IHRoZSBjb25zdGl0dXRpb24gd2FzIGFsdGVyZWQgaW4KCQkJCQlwYXJ0LCBmb3IgdGhleSBzZXQgdXAgYSBjb3VuY2lsIGluc3RlYWQgb2YgdGhlIHRyaWJhbCBydWxlcnMsIGFuZCBpdCBpcyBzdGlsbAoJCQkJCWNvbXB1bHNvcnkgZm9yIHRoZSBtYWdpc3RyYXRlcyBhbG9uZSBvZiB0aGUgY2xhc3MgdGhhdCBoYXMgcG9saXRpY2FsIHBvd2VyIHRvCgkJCQkJY29tZSB0byB0aGUgcG9wdWxhciBhc3NlbWJseSB3aGVuIGFuIGFwcG9pbnRtZW50IHRvIGEgbWFnaXN0cmFjeSBpcyBwdXQgdG8gdGhlCgkJCQkJdm90ZTsgYW5kIHRoZSBzaW5nbGUgc3VwcmVtZSBtYWdpc3RyYXRlIHdhcyBhbHNvIGFuIG9saWdhcmNoaWNhbCBmZWF0dXJlIGluIHRoaXMKCQkJCQljb25zdGl0dXRpb27vvIkuIEZvciBwYXJ0eSBzdHJpZmUgaXMgZXZlcnl3aGVyZSBkdWUgdG8gaW5lcXVhbGl0eSwgd2hlcmUKCQkJCQljbGFzc2VzIHRoYXQgYXJlIHVuZXF1YWwgZG8gbm90IHJlY2VpdmUgYSBzaGFyZSBvZiBwb3dlciBpbiBwcm9wb3J0aW9uCgkJCQkJ77yIZm9yIGEgbGlmZWxvbmcgbW9uYXJjaHkgaXMgYW4gdW5lcXVhbCBmZWF0dXJlIHdoZW4gaXQgZXhpc3RzIGFtb25nCgkJCQkJZXF1YWxz77yJOyBmb3IgZ2VuZXJhbGx5IHRoZSBtb3RpdmUgZm9yIGZhY3Rpb3VzIHN0cmlmZSBpcyB0aGUgZGVzaXJlIGZvcgoJCQkJCWVxdWFsaXR5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBlcXVhbGl0eSBpcyBvZiB0d28KCQkJCQlraW5kcywgbnVtZXJpY2FsIGVxdWFsaXR5IGFuZCBlcXVhbGl0eSBhY2NvcmRpbmcgdG8gd29ydGjigJRieQoJCQkJCW51bWVyaWNhbGx5IGVxdWFsIEkgbWVhbiB0aGF0IHdoaWNoIGlzIHRoZSBzYW1lIGFuZCBlcXVhbCBpbiBudW1iZXIgb3IKCQkJCQlkaW1lbnNpb24sIGJ5IGVxdWFsIGFjY29yZGluZyB0byB3b3J0aCB0aGF0IHdoaWNoIGlzIGVxdWFsIGJ5IHByb3BvcnRpb248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBldGhpY2FsIGFyaXRobWV0aWMgaXMgaGVscGVkIG91dCBpbiBHcmVlawoJCQkJCQlieSB0aGUgZmFjdCB0aGF0LCBldmVuIHdpdGhvdXQgdGhlIHF1YWxpZmljYXRpb24gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOsc+E4oCZCgkJCQkJCQnhvIDOvuG9t86xzr0sIOG8tM+Dzr/PgjwvZm9yZWlnbj4gb2Z0ZW4gbWVhbnMg4oCYZXF1YWwgdG8KCQkJCQkJZGVzZXJ0LOKAmSBmYWlyLCBqdXN0Ljwvbm90ZT47IGZvciBpbnN0YW5jZSBudW1lcmljYWxseSAzIGV4Y2VlZHMgMgoJCQkJCWFuZCAyIGV4Y2VlZHMgMSBieSBhbiBlcXVhbCBhbW91bnQsIGJ1dCBieSBwcm9wb3J0aW9uIDQgZXhjZWVkcyAyIGFuZCAyIGV4Y2VlZHMKCQkJCQkxIGVxdWFsbHksIHNpbmNlIDIgYW5kIDEgYXJlIGVxdWFsIHBhcnRzIG9mIDQgYW5kIDIsIGJvdGggYmVpbmcgaGFsdmVzLiBCdXQKCQkJCQlhbHRob3VnaCBtZW4gYWdyZWUgdGhhdCB0aGUgYWJzb2x1dGVseSBqdXN0IGlzIHdoYXQgaXMgYWNjb3JkaW5nIHRvIHdvcnRoLCB0aGV5CgkJCQkJZGlzYWdyZWUg77yIYXMgd2FzIHNhaWQgYmVmb3JlPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOsc+E4oCZCgkJCQkJCQnhvIDOvuG9t86xzr0sIOG8tM+Dzr/PgjwvZm9yZWlnbj4gb2Z0ZW4gbWVhbnMg4oCYZXF1YWwgdG8KCQkJCQkJZGVzZXJ0LOKAmSBmYWlyLCBqdXN0Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUKCQkJCQkJMTMwMWEgMjcgZmYuIGFuZCBub3RlLjwvbm90ZT7vvIkgaW4gdGhhdCBzb21lIHRoaW5rIHRoYXQgaWYgdGhleSBhcmUKCQkJCQllcXVhbCBpbiBzb21ldGhpbmcgdGhleSBhcmUgd2hvbGx5IGVxdWFsLCBhbmQgb3RoZXJzIGNsYWltIHRoYXQgaWYgdGhleSBhcmUKCQkJCQl1bmVxdWFsIGluIHNvbWV0aGluZyB0aGV5IGRlc2VydmUgYW4gdW5lcXVhbCBzaGFyZSBvZiBhbGwgdGhpbmdzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPk93aW5nIHRvIHRoaXMgdHdvIHByaW5jaXBhbCB2YXJpZXRpZXMgb2YKCQkJCQljb25zdGl0dXRpb24gY29tZSBpbnRvIGV4aXN0ZW5jZSwgZGVtb2NyYWN5IGFuZCBvbGlnYXJjaHk7IGZvciBub2JsZSBiaXJ0aCBhbmQKCQkJCQl2aXJ0dWUgYXJlIGZvdW5kIGluIGZldyBtZW4sIGJ1dCB0aGUgcXVhbGlmaWNhdGlvbnMgc3BlY2lmaWVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoYXQgaXMsIG51bWJlcnMgYW5kIHdlYWx0aC48L25vdGU+IGluIG1vcmU6CgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzAyYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1302a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPm5vd2hlcmUgYXJlIHRoZXJlIGEgaHVuZHJlZCBtZW4gbm9ibHkgYm9ybiBhbmQgZ29vZCwgYnV0IHRoZXJlCgkJCQkJYXJlIHJpY2ggbWVuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdGhlIHRleHQgc2hvdWxkIGJlCgkJCQkJCWVtZW5kZWQgdG8gZ2l2ZSDigJh0aGVyZSBhcmUgbWFueSByaWNoIG1lbiBhbmQgcG9vciBtZW4gaW4gbWFueQoJCQkJCQlwbGFjZXMu4oCZPC9ub3RlPiBpbiBtYW55IHBsYWNlcy4gQnV0IGZvciB0aGUgY29uc3RpdHV0aW9uIHRvIGJlCgkJCQkJZnJhbWVkIGFic29sdXRlbHkgYW5kIGVudGlyZWx5IGFjY29yZGluZyB0byBlaXRoZXIga2luZCBvZiBlcXVhbGl0eSBpcyBiYWQuIEFuZAoJCQkJCXRoaXMgaXMgcHJvdmVkIGJ5IGV4cGVyaWVuY2UsIGZvciBub3Qgb25lIG9mIHRoZSBjb25zdGl0dXRpb25zIGZvcm1lZCBvbiBzdWNoCgkJCQkJbGluZXMgaXMgcGVybWFuZW50LiBBbmQgdGhlIGNhdXNlIG9mIHRoaXMgaXMgdGhhdCBpdCBpcyBpbXBvc3NpYmxlIGZvciBzb21lIGV2aWwKCQkJCQlub3QgdG8gb2NjdXIgdWx0aW1hdGVseSBmcm9tIHRoZSBmaXJzdCBhbmQgaW5pdGlhbCBlcnJvciB0aGF0IGhhcyBiZWVuIG1hZGUuCgkJCQkJSGVuY2UgdGhlIHByb3BlciBjb3Vyc2UgaXMgdG8gZW1wbG95IG51bWVyaWNhbCBlcXVhbGl0eSBpbiBzb21lIHRoaW5ncyBhbmQKCQkJCQllcXVhbGl0eSBhY2NvcmRpbmcgdG8gd29ydGggaW4gb3RoZXJzLiA8L3RyYW5zbGF0aW9uPg=="
translation['5.1302a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS45IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IG5ldmVydGhlbGVzcyBkZW1vY3JhY3kgaXMgc2FmZXIgYW5kIG1vcmUgZnJlZSBmcm9tCgkJCQkJY2l2aWwgc3RyaWZlIHRoYW4gb2xpZ2FyY2h5OyBmb3IgaW4gb2xpZ2FyY2hpZXMgdHdvIGtpbmRzIG9mIHN0cmlmZSBzcHJpbmcgdXAsCgkJCQkJZmFjdGlvbiBiZXR3ZWVuIGRpZmZlcmVudCBtZW1iZXJzIG9mIHRoZSBvbGlnYXJjaHkgYW5kIGFsc28gZmFjdGlvbiBiZXR3ZWVuIHRoZQoJCQkJCW9saWdhcmNocyBhbmQgdGhlIHBlb3BsZSwgd2hlcmVhcyBpbiBkZW1vY3JhY2llcyBvbmx5IHN0cmlmZSBiZXR3ZWVuIHRoZSBwZW9wbGUKCQkJCQlhbmQgdGhlIG9saWdhcmNoaWNhbCBwYXJ0eSBvY2N1cnMsIGJ1dCBwYXJ0eSBzdHJpZmUgYmV0d2VlbiBkaWZmZXJlbnQgc2VjdGlvbnMKCQkJCQlvZiB0aGUgcGVvcGxlIGl0c2VsZiBkb2VzIG5vdCBvY2N1ciB0byBhbnkgZGVncmVlIHdvcnRoIG1lbnRpb25pbmcuIEFuZCBhZ2FpbgoJCQkJCXRoZSBnb3Zlcm5tZW50IGZvcm1lZCBvZiB0aGUgbWlkZGxlIGNsYXNzZXMgaXMgbmVhcmVyIHRvIHRoZSBwZW9wbGUgdGhhbiB0byB0aGUKCQkJCQlmZXcsIGFuZCBpdCBpcyB0aGUgc2FmZXN0IG9mIHRoZSBraW5kcyBvZiBjb25zdGl0dXRpb24gbWVudGlvbmVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBzaW5jZSB3ZQoJCQkJCWFyZSBjb25zaWRlcmluZyB3aGF0IGNpcmN1bXN0YW5jZXMgZ2l2ZSByaXNlIHRvIHBhcnR5IGZhY3Rpb25zIGFuZCByZXZvbHV0aW9ucwoJCQkJCWluIGNvbnN0aXR1dGlvbnMsIHdlIG11c3QgZmlyc3QgYXNjZXJ0YWluIHRoZWlyIG9yaWdpbnMgYW5kIGNhdXNlcyBnZW5lcmFsbHkuCgkJCQkJVGhleSBhcmUsIHNwZWFraW5nIHJvdWdobHksIHRocmVlIGluIG51bWJlciw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Vml6LiB0aGUgbWF0ZXJpYWwsIGZpbmFsIGFuZCBlZmZpY2llbnQgY2F1c2VzIG9mIHJldm9sdXRpb25zCgkJCQkJCe+8iEpvd2V0dO+8iS48L25vdGU+IHdoaWNoIHdlIG11c3QgZmlyc3QgZGVmaW5lIGluIG91dGxpbmUKCQkJCQkJc2VwYXJhdGVseS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+Rm9yIHdlIG11c3QgYXNjZXJ0YWluCgkJCQkJd2hhdCBzdGF0ZSBvZiBhZmZhaXJzIGdpdmVzIHJpc2UgdG8gcGFydHkgc3RyaWZlLCBhbmQgZm9yIHdoYXQgb2JqZWN0cyBpdCBpcwoJCQkJCXdhZ2VkLCBhbmQgdGhpcmRseSB3aGF0IGFyZSB0aGUgb3JpZ2lucyBvZiBwb2xpdGljYWwgZGlzb3JkZXJzIGFuZCBpbnRlcm5hbAoJCQkJCXBhcnR5IHN0cnVnZ2xlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHRoZSBwcmluY2lwYWwgY2F1c2UsIHNwZWFraW5nCgkJCQkJZ2VuZXJhbGx5LCBvZiB0aGUgY2l0aXplbnMgYmVpbmcgdGhlbXNlbHZlcyBkaXNwb3NlZCBpbiBhIGNlcnRhaW4gbWFubmVyIHRvd2FyZHMKCQkJCQlyZXZvbHV0aW9uIGlzIHRoZSBvbmUgYWJvdXQgd2hpY2ggd2UgaGFwcGVuIHRvIGhhdmUgc3Bva2VuIGFscmVhZHkuIFRob3NlIHRoYXQKCQkJCQlkZXNpcmUgZXF1YWxpdHkgZW50ZXIgb24gcGFydHkgc3RyaWZlIGlmIHRoZXkgdGhpbmsgdGhhdCB0aGV5IGhhdmUgdG9vIGxpdHRsZQoJCQkJCWFsdGhvdWdoIHRoZXkgYXJlIHRoZSBlcXVhbHMgb2YgdGhvc2Ugd2hvIGhhdmUgbW9yZSwgd2hpbGUgdGhvc2UgdGhhdCBkZXNpcmUKCQkJCQlpbmVxdWFsaXR5IG9yIHN1cGVyaW9yaXR5IGRvIHNvIGlmIHRoZXkgc3VwcG9zZSB0aGF0IGFsdGhvdWdoIHRoZXkgYXJlIHVuZXF1YWwKCQkJCQl0aGV5IGhhdmUgbm90IGdvdCBtb3JlIGJ1dCBhbiBlcXVhbCBhbW91bnQgb3IgbGVzcyA8L3RyYW5zbGF0aW9uPg=="
translation['5.1302b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+77yIYW5kIHRoZXNlIGRlc2lyZXMgbWF5IGJlIGZlbHQganVzdGx5LCBhbmQgdGhleQoJCQkJCW1heSBhbHNvIGJlIGZlbHQgdW5qdXN0bHnvvIk7IGZvciB3aGVuIGluZmVyaW9yLCBwZW9wbGUgZW50ZXIgb24gc3RyaWZlCgkJCQkJaW4gb3JkZXIgdGhhdCB0aGV5IG1heSBiZSBlcXVhbCwgYW5kIHdoZW4gZXF1YWwsIGluIG9yZGVyIHRoYXQgdGhleSBtYXkgYmUKCQkJCQlncmVhdGVyLiBXZSBoYXZlIHRoZXJlZm9yZSBzYWlkIHdoYXQgYXJlIHRoZSBzdGF0ZXMgb2YgZmVlbGluZyBpbiB3aGljaCBtZW4KCQkJCQllbmdhZ2UgaW4gcGFydHkgc3RyaWZlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgb2JqZWN0cyBhYm91dCB3aGljaCBpdAoJCQkJCWlzIHdhZ2VkIGFyZSBnYWluIGFuZCBob25vciwgYW5kIHRoZWlyIG9wcG9zaXRlcywgZm9yIG1lbiBjYXJyeSBvbiBwYXJ0eSBmYWN0aW9uCgkJCQkJaW4gc3RhdGVzIGluIG9yZGVyIHRvIGF2b2lkIGRpc2hvbm9yIGFuZCBsb3NzLCBlaXRoZXIgb24gdGhlaXIgb3duIGJlaGFsZiBvciBvbgoJCQkJCWJlaGFsZiBvZiB0aGVpciBmcmllbmRzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCB0aGUgY2F1c2VzIGFuZCBvcmlnaW5zIG9mIHRoZSBkaXN0dXJiYW5jZXMgd2hpY2gKCQkJCQlvY2Nhc2lvbiB0aGUgYWN0dWFsIHN0YXRlcyBvZiBmZWVsaW5nIGRlc2NyaWJlZCBhbmQgdGhlaXIgZGlyZWN0aW9uIHRvIHRoZQoJCQkJCW9iamVjdHMgbWVudGlvbmVkLCBhY2NvcmRpbmcgdG8gb25lIGFjY291bnQgaGFwcGVuIHRvIGJlIHNldmVuIGluIG51bWJlciwgdGhvdWdoCgkJCQkJYWNjb3JkaW5nIHRvIGFub3RoZXIgdGhleSBhcmUgbW9yZS4gVHdvIG9mIHRoZW0gYXJlIHRoZSBzYW1lIGFzIHRob3NlIHNwb2tlbiBvZgoJCQkJCWJlZm9yZSBhbHRob3VnaCBub3Qgb3BlcmF0aW5nIGluIHRoZSBzYW1lIHdheTogdGhlIG1vdGl2ZXMgb2YgZ2FpbiBhbmQgaG9ub3IKCQkJCQlhbHNvIHN0aXIgbWVuIHVwIGFnYWluc3QgZWFjaCBvdGhlciBub3QgaW4gb3JkZXIgdGhhdCB0aGV5IG1heSBnZXQgdGhlbSBmb3IKCQkJCQl0aGVtc2VsdmVzLCBhcyBoYXMgYmVlbiBzYWlkIGJlZm9yZSwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMDJiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['5.1302b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCBiZWNhdXNlIHRoZXkgc2VlIG90aGVyIG1lbgoJCQkJCWluIHNvbWUgY2FzZXMganVzdGx5IGFuZCBpbiBvdGhlciBjYXNlcyB1bmp1c3RseSBnZXR0aW5nIGEgbGFyZ2VyIHNoYXJlIG9mIHRoZW0uCgkJCQkJT3RoZXIgY2F1c2VzIGFyZSBpbnNvbGVuY2UsIGZlYXIsIGV4Y2Vzc2l2ZSBwcmVkb21pbmFuY2UsIGNvbnRlbXB0LAoJCQkJCWRpc3Byb3BvcnRpb25hdGUgZ3Jvd3RoIG9mIHBvd2VyOyBhbmQgYWxzbyBvdGhlciBtb2RlcyBvZiBjYXVzZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgZm91ciBjYXVzZXMgbm93IG1lbnRpb25lZCBhcmUgdGhvc2UKCQkJCQkJYWxsdWRlZCB0byBqdXN0IGFib3ZlIO+8iDEzMDJhIDM477yJIGFzIGFuIGFkZGl0aW9uIHRvIHRoZQoJCQkJCQlzZXZlbiBlbnVtZXJhdGVkIGFib3ZlLCAxMzAyYSAzOC1iIDUuPC9ub3RlPiBhcmUgZWxlY3Rpb24gaW50cmlndWUsCgkJCQkJY2FyZWxlc3NuZXNzLCBwZXR0aW5lc3MsIGRpc3NpbWlsYXJpdHkuIDwvdHJhbnNsYXRpb24+"
translation['5.1302b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW1vbmcgdGhlc2UgbW90aXZlcyB0aGUgcG93ZXIgcG9zc2Vzc2VkIGJ5IGluc29sZW5jZSBhbmQKCQkJCQlnYWluLCBhbmQgdGhlaXIgbW9kZSBvZiBvcGVyYXRpb24sIGlzIGFsbW9zdCBvYnZpb3VzOyBmb3Igd2hlbiB0aGUgbWVuIGluIG9mZmljZQoJCQkJCXNob3cgaW5zb2xlbmNlIGFuZCBncmVlZCwgcGVvcGxlIHJpc2UgaW4gcmV2b2x0IGFnYWluc3Qgb25lIGFub3RoZXIgYW5kIGFnYWluc3QKCQkJCQl0aGUgY29uc3RpdHV0aW9ucyB0aGF0IGFmZm9yZCB0aGUgb3Bwb3J0dW5pdHkgZm9yIHN1Y2ggY29uZHVjdDsgYW5kIGdyZWVkCgkJCQkJc29tZXRpbWVzIHByZXlzIG9uIHByaXZhdGUgcHJvcGVydHkgYW5kIHNvbWV0aW1lcyBvbiBjb21tb24gZnVuZHMuIEl0IGlzIGNsZWFyCgkJCQkJYWxzbyB3aGF0IGlzIHRoZSBwb3dlciBvZiBob25vciBhbmQgaG93IGl0IGNhbiBjYXVzZSBwYXJ0eSBmYWN0aW9uOyBmb3IgbWVuIGZvcm0KCQkJCQlmYWN0aW9ucyBib3RoIHdoZW4gdGhleSBhcmUgdGhlbXNlbHZlcyBkaXNob25vcmVkIGFuZCB3aGVuIHRoZXkgc2VlIG90aGVycwoJCQkJCWhvbm9yZWQ7IGFuZCB0aGUgZGlzdHJpYnV0aW9uIG9mIGhvbm9ycyBpcyB1bmp1c3Qgd2hlbiBwZXJzb25zIGFyZSBlaXRoZXIKCQkJCQlob25vcmVkIG9yIGRpc2hvbm9yZWQgYWdhaW5zdCB0aGVpciBkZXNlcnRzLCBqdXN0IHdoZW4gaXQgaXMgYWNjb3JkaW5nIHRvCgkJCQkJZGVzZXJ0LiBFeGNlc3NpdmUgcHJlZG9taW5hbmNlIGNhdXNlcyBmYWN0aW9uLCB3aGVuIHNvbWUgaW5kaXZpZHVhbCBvciBib2R5IG9mCgkJCQkJbWVuIGlzIGdyZWF0ZXIgYW5kIG1vcmUgcG93ZXJmdWwgdGhhbiBpcyBzdWl0YWJsZSB0byB0aGUgc3RhdGUgYW5kIHRoZSBwb3dlciBvZgoJCQkJCXRoZSBnb3Zlcm5tZW50OyBmb3Igc3VjaCBhcmUgdGhlIGNvbmRpdGlvbnMgdGhhdCB1c3VhbGx5IHJlc3VsdCBpbiB0aGUgcmlzZSBvZiBhCgkJCQkJbW9uYXJjaHkgb3IgZHluYXN0eS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Pd2luZyB0byB0aGlzCgkJCQkJaW4gc29tZSBwbGFjZXMgdGhleSBoYXZlIHRoZSBjdXN0b20gb2YgdGVtcG9yYXJ5IGJhbmlzaG1lbnQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiAxMjg0YSAxOC48L25vdGU+IGFzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXJnb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFyZ29zIj5BcmdvczwvcGxhY2VOYW1lPiBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+OwoJCQkJCXlldCBpdCB3b3VsZCBiZSBiZXR0ZXIgdG8gcHJvdmlkZSBmcm9tIHRoZSBvdXRzZXQgdGhhdCB0aGVyZSBtYXkgYmUgbm8gcGVyc29ucwoJCQkJCWluIHRoZSBzdGF0ZTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5zbyBncmVhdGx5IHByZWRvbWluYW50LAoJCQkJCXRoYW4gZmlyc3QgdG8gYWxsb3cgdGhlbSB0byBjb21lIGludG8gZXhpc3RlbmNlIGFuZCBhZnRlcndhcmRzIHRvIGFwcGx5IGEKCQkJCQlyZW1lZHkuIEZlYXIgaXMgdGhlIG1vdGl2ZSBvZiBmYWN0aW9uIHdpdGggdGhvc2Ugd2hvIGhhdmUgaW5mbGljdGVkIHdyb25nIGFuZAoJCQkJCWFyZSBhZnJhaWQgb2YgYmVpbmcgcHVuaXNoZWQsIGFuZCBhbHNvIHdpdGggdGhvc2Ugd2hvIGFyZSBpbiBkYW5nZXIgb2Ygc3VmZmVyaW5nCgkJCQkJYSB3cm9uZyBhbmQgd2lzaCB0byBhY3QgaW4gdGltZSBiZWZvcmUgdGhlIHdyb25nIGlzIGluZmxpY3RlZCwgYXMgdGhlIG5vdGFibGVzCgkJCQkJYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEyNjYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMTI2NiI+UmhvZGVzPC9wbGFjZU5hbWU+IGJhbmRlZCB0b2dldGhlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIGluIDxkYXRlIGF1dGhuYW1lPSItMzkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkwIj4zOTA8L2RhdGU+IEIuQy4sCgkJCQkJCWNmLiAxMzAyYiAzMiBmLiBhbmQgMTMwNGIgMjcgZmYuPC9ub3RlPiBhZ2FpbnN0IHRoZSBwZW9wbGUgYmVjYXVzZSBvZiB0aGUKCQkJCQlsYXctc3VpdHMgdGhhdCB3ZXJlIGJlaW5nIGJyb3VnaHQgYWdhaW5zdCB0aGVtLiA8ZGF0ZSBhdXRobmFtZT0iLTM5MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MCI+MzkwPC9kYXRlPiBCLkMuLAoJCQkJCQljZi4gMTMwMmIgMzIgZi4gYW5kIDEzMDRiIDI3IGZmLjwvdHJhbnNsYXRpb24+"
translation['5.1303a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi42IiB1bml0PSJMb2ViIGNoYXAiIC8+Q29udGVtcHQgaXMgYSBjYXVzZSBvZiBmYWN0aW9uIGFuZCBvZiBhY3R1YWwgYXR0YWNrcywgdXBvbgoJCQkJCXRoZSBnb3Zlcm5tZW50LCBmb3IgaW5zdGFuY2UgaW4gb2xpZ2FyY2hpZXMgd2hlbiB0aG9zZSB3aG8gaGF2ZSBubyBzaGFyZSBpbiB0aGUKCQkJCQlnb3Zlcm5tZW50IGFyZSBtb3JlIG51bWVyb3VzIO+8iGZvciB0aGV5IHRoaW5rIHRoZW1zZWx2ZXMgdGhlIHN0cm9uZ2VyCgkJCQkJcGFydHnvvIksIGFuZCBpbiBkZW1vY3JhY2llcyB3aGVuIHRoZSByaWNoIGhhdmUgYmVndW4gdG8gZmVlbCBjb250ZW1wdAoJCQkJCWZvciB0aGUgZGlzb3JkZXIgYW5kIGFuYXJjaHkgdGhhdCBwcmV2YWlscywgYXMgZm9yIGV4YW1wbGUgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUaGViZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRoZWJlcyI+VGhlYmVzPC9wbGFjZU5hbWU+IHRoZSBkZW1vY3JhY3kgd2FzIGRlc3Ryb3llZCBvd2luZyB0bwoJCQkJCWJhZCBnb3Zlcm5tZW50IGFmdGVyIHRoZSBiYXR0bGUgb2YgT2Vub3BoeXRhLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BZ2FpbnN0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgPGRhdGUgYXV0aG5hbWU9Ii00NTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00NTYiPjQ1NjwvZGF0ZT4gQi5DLjwvbm90ZT4gYW5kIHRoYXQgb2YgdGhlIE1lZ2FyaWFucyB3YXMKCQkJCQlkZXN0cm95ZWQgd2hlbiB0aGV5IGhhZCBiZWVuIGRlZmVhdGVkIG93aW5nIHRvIGRpc29yZGVyIGFuZCBhbmFyY2h5LDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgPGRhdGUgYXV0aG5hbWU9Ii00NTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00NTYiPjQ1NjwvZGF0ZT4gQi5DLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTMwMGEgMTggbi48L25vdGU+IGFuZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5cmFjdXNlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTeXJhY3VzZSI+U3lyYWN1c2U8L3BsYWNlTmFtZT4gYmVmb3JlIHRoZSB0eXJhbm55PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxkYXRlIGF1dGhuYW1lPSItNDg1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDg1Ij40ODU8L2RhdGU+IEIuQy48L25vdGU+IG9mCgkJCQkJR2VsbywgYW5kIGF0IDxkYXRlIGF1dGhuYW1lPSItNDg1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDg1Ij40ODU8L2RhdGU+IEIuQy48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTI2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMjY2Ij5SaG9kZXM8L3BsYWNlTmFtZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEzMDJiIDIzIG4uPC9ub3RlPiB0aGUgY29tbW9uIHBlb3BsZSBoYWQgZmFsbGVuIGludG8KCQkJCQljb250ZW1wdCBiZWZvcmUgdGhlIHJpc2luZyBhZ2FpbnN0IHRoZW0uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi43IiB1bml0PSJMb2ViIGNoYXAiIC8+UmV2b2x1dGlvbnMgaW4gdGhlIGNvbnN0aXR1dGlvbnMgYWxzbyB0YWtlIHBsYWNlIG9uCgkJCQkJYWNjb3VudCBvZiBkaXNwcm9wb3J0aW9uYXRlIGdyb3d0aDsgZm9yIGp1c3QgYXMgdGhlIGJvZHk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SXQgaXMgbm90IGNsZWFyIHdoZXRoZXIgd2hhdCBmb2xsb3dzIHJlZmVycyB0byBhIHdvcmsgb2YgYXJ0CgkJCQkJCe+8iGNmLiAxMjg0YiA477yJIG9yIGlzIGFuIGV4YWdnZXJhdGVkIGFjY291bnQgb2YgYSBkaXNlYXNlOwoJCQkJCQlHYWxlbiBkZXNjcmliZXMgb25lIGNhbGxlZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg86xz4TPhc+B4b23zrHPg865z4I8L2ZvcmVpZ24+LCBpbgoJCQkJCQl3aGljaCB0aGUgYm9uZXMgb2YgdGhlIHRlbXBsZSBzd2VsbCBvdXQgbGlrZSBzYXR5cnMnIGhvcm5zLjwvbm90ZT4gaXMKCQkJCQljb21wb3NlZCBvZiBwYXJ0cywgYW5kIG5lZWRzIHRvIGdyb3cgcHJvcG9ydGlvbmF0ZWx5IGluIG9yZGVyIHRoYXQgaXRzIHN5bW1ldHJ5CgkJCQkJbWF5IHJlbWFpbiwgYW5kIGlmIGl0IGRvZXMgbm90IGl0IGlzIHNwb2lsZWQsIHdoZW4gdGhlIGZvb3QgaXMgZm91ciBjdWJpdHMgbG9uZwoJCQkJCWFuZCB0aGUgcmVzdCBvZiB0aGUgYm9keSB0d28gc3BhbnMsIGFuZCBzb21ldGltZXMgaXQgbWlnaHQgZXZlbiBjaGFuZ2UgaW50byB0aGUKCQkJCQlzaGFwZSBvZiBhbm90aGVyIGFuaW1hbCBpZiBpdCBpbmNyZWFzZWQgZGlzcHJvcG9ydGlvbmF0ZWx5IG5vdCBvbmx5IGluIHNpemUgYnV0CgkJCQkJYWxzbyBpbiBxdWFsaXR5LDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+DzrHPhM+Fz4HhvbfOsc+DzrnPgjwvZm9yZWlnbj4sIGluCgkJCQkJCXdoaWNoIHRoZSBib25lcyBvZiB0aGUgdGVtcGxlIHN3ZWxsIG91dCBsaWtlIHNhdHlycycgaG9ybnMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gaWYsIGZvciBleGFtcGxlLCB0aGUKCQkJCQkJZm9vdCBiZWNhbWUgYXMgaGFyZCBhcyBhIGhvb2YuPC9ub3RlPiBzbyBhbHNvIGEgc3RhdGUgaXMgY29tcG9zZWQgb2YgcGFydHMsCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzAzYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1303a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPm9uZSBvZiB3aGljaCBvZnRlbiBncm93cyB3aXRob3V0IGl0cyBiZWluZyBub3RpY2VkLCBhcyBmb3IKCQkJCQlleGFtcGxlIHRoZSBudW1iZXIgb2YgdGhlIHBvb3IgaW4gZGVtb2NyYWNpZXMgYW5kIGNvbnN0aXR1dGlvbmFsIHN0YXRlcy4KCQkJCQkJPC90cmFuc2xhdGlvbj4="
translation['5.1303a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi44IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHNvbWV0aW1lcyB0aGlzIGlzIGFsc28KCQkJCQlicm91Z2h0IGFib3V0IGJ5IGFjY2lkZW50YWwgb2NjdXJyZW5jZXMsIGFzIGZvciBpbnN0YW5jZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNDEwMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA0MTAwIj5UYXJlbnR1bTwvcGxhY2VOYW1lPiB3aGVuIGEgZ3JlYXQgbWFueSBub3RhYmxlcyB3ZXJlCgkJCQkJZGVmZWF0ZWQgYW5kIGtpbGxlZCBieSB0aGUgSWFweWdpYW5zIGEgc2hvcnQgdGltZSBhZnRlciB0aGUgUGVyc2lhbiB3YXJzIGEKCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50IHdhcyBjaGFuZ2VkIHRvIGEgZGVtb2NyYWN5LCBhbmQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBcmdvcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXJnb3MiPkFyZ29zPC9wbGFjZU5hbWU+IHdoZW4gdGhvc2UgaW4gdGhlIHNldmVudGggdHJpYmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHdvcmQgdG8gYmUgdW5kZXJzdG9vZCBoZXJlIG1heSBiZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Phs+Fzrvhv4c8L2ZvcmVpZ24+LCBvciBwb3NzaWJseSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvKHOvOG9s8+B4b6zPC9mb3JlaWduPjogdGhlIHNldmVudGggZGF5IG9mIHRoZSBtb250aCB3YXMgc2FjcmVkIHRvIEFwb2xsbywKCQkJCQkJZXNwZWNpYWxseSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4sIGFuZCBvbmUKCQkJCQkJYWNjb3VudCBhc3NpZ25zIENsZW9tZW5lcycgdmljdG9yeSB0byB0aGF0IGRheSwgaW4gd2hpY2ggY2FzZSB0aGUgY2FzdWFsdGllcwoJCQkJCQltYXkgd2VsbCBoYXZlIGJlZW4ga25vd24gYWZ0ZXJ3YXJkcyBhcyDigJh0aG9zZSB3aG8gZmVsbCBvbiB0aGUKCQkJCQkJc2V2ZW50aC7igJk8L25vdGU+IGhhZCBiZWVuIGRlc3Ryb3llZCBieSB0aGUgU3BhcnRhbiBDbGVvbWVuZXMgdGhlCgkJCQkJY2l0aXplbnMgd2VyZSBjb21wZWxsZWQgdG8gYWRtaXQgc29tZSBvZiB0aGUgc3Vycm91bmRpbmcgcGVvcGxlLCBhbmQgYXQKCQkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4bPhc674b+HPC9mb3JlaWduPiwgb3IgcG9zc2libHkgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byhzrzhvbPPgeG+szwvZm9yZWlnbj46IHRoZSBzZXZlbnRoIGRheSBvZiB0aGUgbW9udGggd2FzIHNhY3JlZCB0byBBcG9sbG8sCgkJCQkJCWVzcGVjaWFsbHkgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LCBhbmQgb25lCgkJCQkJCWFjY291bnQgYXNzaWducyBDbGVvbWVuZXMnIHZpY3RvcnkgdG8gdGhhdCBkYXksIGluIHdoaWNoIGNhc2UgdGhlIGNhc3VhbHRpZXMKCQkJCQkJbWF5IHdlbGwgaGF2ZSBiZWVuIGtub3duIGFmdGVyd2FyZHMgYXMg4oCYdGhvc2Ugd2hvIGZlbGwgb24gdGhlCgkJCQkJCXNldmVudGgu4oCZPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IHdoZW4gdGhleSBzdWZmZXJlZAoJCQkJCWRpc2FzdGVycyBieSBsYW5kIHRoZSBub3RhYmxlcyBiZWNhbWUgZmV3ZXIgYmVjYXVzZSBhdCB0aGUgdGltZSBvZiB0aGUgd2FyCgkJCQkJYWdhaW5zdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gdGhlIGFybXkgd2FzIGRyYXduCgkJCQkJZnJvbSBhIG11c3Rlci1yb2xsLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHdhcyBtYWRlIHVwIG9mCgkJCQkJCWNpdGl6ZW5zIGFuZCBub3Qgb2YgbWVyY2VuYXJpZXMuPC9ub3RlPiBBbmQgdGhpcyBoYXBwZW5zIGFsc28gaW4KCQkJCQlkZW1vY3JhY2llcywgdGhvdWdoIHRvIGEgc21hbGxlciBleHRlbnQ7IGZvciB3aGVuIHRoZSB3ZWFsdGh5IGJlY29tZSBtb3JlCgkJCQkJbnVtZXJvdXMgb3IgdGhlaXIgcHJvcGVydGllcyBpbmNyZWFzZSwgdGhlIGdvdmVybm1lbnRzIGNoYW5nZSB0byBvbGlnYXJjaGllcyBhbmQKCQkJCQkJZHluYXN0aWVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTI5MmIgMTAgbi48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgcmV2b2x1dGlvbnMgaW4gY29uc3RpdHV0aW9ucwoJCQkJCXRha2UgcGxhY2UgZXZlbiB3aXRob3V0IGZhY3Rpb3VzIHN0cmlmZSwgb3dpbmcgdG8gZWxlY3Rpb24gaW50cmlndWUsIGFzIGF0CgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsSGVyYWVhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxIZXJhZWEiPkhlcmFlYTwvcGxhY2VOYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PbiB0aGUgQWxwaGV1cywgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI3MzUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjczNSI+QXJjYWRpYTwvcGxhY2VOYW1lPi48L25vdGU+IO+8iGZvciB0aGV5IG1hZGUgdGhlaXIgbWFnaXN0cmF0ZXMKCQkJCQllbGVjdGVkIGJ5IGxvdCBpbnN0ZWFkIG9mIGJ5IHZvdGUgZm9yIHRoaXMgcmVhc29uLCBiZWNhdXNlIHRoZSBwZW9wbGUgdXNlZCB0bwoJCQkJCWVsZWN0IHRob3NlIHdobyBjYW52YXNzZWTvvIk7IGFuZCBhbHNvIG93aW5nIHRvIGNhcmVsZXNzbmVzcywgd2hlbiBwZW9wbGUKCQkJCQlhbGxvdyBtZW4gdGhhdCBhcmUgbm90IGZyaWVuZHMgb2YgdGhlIGNvbnN0aXR1dGlvbiB0byBlbnRlciBpbnRvIHRoZSBzb3ZlcmVpZ24KCQkJCQlvZmZpY2VzLCBhcyBhdCBPcmV1czxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNzM1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI3MzUiPkFyY2FkaWE8L3BsYWNlTmFtZT4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjc3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzciPkV1Ym9lYTwvcGxhY2VOYW1lPjsgaXRzIHNlY2Vzc2lvbiBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIDxkYXRlIGF1dGhuYW1lPSItMzc3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc3Ij4zNzc8L2RhdGU+CgkJCQkJCUIuQy4sIHdhcyBwZXJoYXBzIHRoZSBvY2Nhc2lvbiBvZiB0aGlzIHJldm9sdXRpb24uPC9ub3RlPiBvbGlnYXJjaHkgd2FzCgkJCQkJYnJva2VuIHVwIHdoZW4gSGVyYWNsZW9kb3J1cyBiZWNhbWUgb25lIG9mIHRoZSBtYWdpc3RyYXRlcywgd2hvIGluIHBsYWNlIG9mIGFuCgkJCQkJCW9saWdhcmNoeTxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjc3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzciPkV1Ym9lYTwvcGxhY2VOYW1lPjsgaXRzIHNlY2Vzc2lvbiBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIDxkYXRlIGF1dGhuYW1lPSItMzc3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc3Ij4zNzc8L2RhdGU+CgkJCQkJCUIuQy4sIHdhcyBwZXJoYXBzIHRoZSBvY2Nhc2lvbiBvZiB0aGlzIHJldm9sdXRpb24uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmZvcm1lZCBhIGNvbnN0aXR1dGlvbmFsCgkJCQkJZ292ZXJubWVudCwgb3IgcmF0aGVyIGEgZGVtb2NyYWN5LiBBbm90aGVyIGNhdXNlIGlzIGFsdGVyYXRpb24gYnkgc21hbGwgc3RhZ2VzOwoJCQkJCWJ5IHRoaXMgSSBtZWFuIHRoYXQgb2Z0ZW4gYSBncmVhdCBjaGFuZ2Ugb2YgaW5zdGl0dXRpb25zIHRha2VzIHBsYWNlIHVubm90aWNlZAoJCQkJCXdoZW4gcGVvcGxlIG92ZXJsb29rIGEgc21hbGwgYWx0ZXJhdGlvbiwgYXMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBbWJyYWNpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQW1icmFjaWEiPkFtYnJhY2lhPC9wbGFjZU5hbWU+IHRoZSBwcm9wZXJ0eS1xdWFsaWZpY2F0aW9uIHdhcyBzbWFsbCwgYW5kIGZpbmFsbHkgbWVuCgkJCQkJaG9sZCBvZmZpY2Ugd2l0aCBub25lIGF0IGFsbCwgYXMgYSBsaXR0bGUgaXMgbmVhciB0byBub3RoaW5nLCBvciBwcmFjdGljYWxseSB0aGUKCQkJCQlzYW1lLiA8L3RyYW5zbGF0aW9uPg=="
translation['5.1303b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFsc28gZGlmZmVyZW5jZSBvZiByYWNlIGlzIGEKCQkJCQljYXVzZSBvZiBmYWN0aW9uLCB1bnRpbCBoYXJtb255IG9mIHNwaXJpdCBpcyByZWFjaGVkOyBmb3IganVzdCBhcyBhbnkgY2hhbmNlCgkJCQkJbXVsdGl0dWRlIG9mIHBlb3BsZSBkb2VzIG5vdCBmb3JtIGEgc3RhdGUsIHNvIGEgc3RhdGUgaXMgbm90IGZvcm1lZCBpbiBhbnkKCQkJCQljaGFuY2UgcGVyaW9kIG9mIHRpbWUuIEhlbmNlIG1vc3Qgb2YgdGhlIHN0YXRlcyB0aGF0IGhhdmUgaGl0aGVydG8gYWRtaXR0ZWQKCQkJCQlqb2ludCBzZXR0bGVycyBvciBhZGRpdGlvbmFsIHNldHRsZXJzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4KCQkJCQkJY29sb25pc3RzIG5vdCBmcm9tIHRoZSBtb3RoZXItY2l0eSwgYWRtaXR0ZWQgZWl0aGVyIGF0IHRoZSBmb3VuZGF0aW9uIG9mIHRoZQoJCQkJCQljb2xvbnkgb3IgbGF0ZXIuPC9ub3RlPiBoYXZlIHNwbGl0IGludG8gZmFjdGlvbnM7IGZvciBleGFtcGxlIEFjaGFlYW5zCgkJCQkJc2V0dGxlZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5YmFyaXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFN5YmFyaXMiPlN5YmFyaXM8L3BsYWNlTmFtZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeWJhcmlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTeWJhcmlzIj5TeWJhcmlzPC9wbGFjZU5hbWU+LCBmb3VuZGVkIDxkYXRlIGF1dGhuYW1lPSItNzIwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNzIwIj43MjA8L2RhdGU+IEIuQy4sIGJlY2FtZQoJCQkJCQl2ZXJ5IHdlYWx0aHkuIFRoZSBUcm9lemVuaWFuIHBvcHVsYXRpb24gd2hlbiBleHBlbGxlZCB3ZXJlIHJlY2VpdmVkIGF0CgkJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENyb3RvbiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ3JvdG9uIj5Dcm90b248L3BsYWNlTmFtZT4sIHdoaWNoIG1hZGUgd2FyIG9uCgkJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5YmFyaXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFN5YmFyaXMiPlN5YmFyaXM8L3BsYWNlTmFtZT4gYW5kIGRlc3Ryb3llZCBpdAoJCQkJCQkJPGRhdGUgYXV0aG5hbWU9Ii01MTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii01MTAiPjUxMDwvZGF0ZT4gQi5DLiBUbyB3aGF0IGV4YWN0bHkgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4Thvbgg4byEzrPOv8+CPC9mb3JlaWduPiByZWZlcnMgaXMgdW5rbm93bi48L25vdGU+IGpvaW50bHkgd2l0aAoJCQkJCVRyb2V6ZW5pYW5zLCBhbmQgYWZ0ZXJ3YXJkcyB0aGUgQWNoYWVhbnMgaGF2aW5nIGJlY29tZSBtb3JlIG51bWVyb3VzIGV4cGVsbGVkCgkJCQkJdGhlIFRyb2V6ZW5pYW5zLCB3aGljaCB3YXMgdGhlIENhdXNlIG9mIHRoZSBjdXJzZSB0aGF0IGZlbGwgb24gdGhlIFN5YmFyaXRlczsKCQkJCQlhbmQgYXQgVGh1cmlpIFN5YmFyaXRlcyBxdWFycmVsbGVkIHdpdGggdGhvc2Ugd2hvIGhhZCBzZXR0bGVkIHRoZXJlIHdpdGggdGhlbSwKCQkJCQlmb3IgdGhleSBjbGFpbWVkIHRvIGhhdmUgdGhlIGxhcmdlciBzaGFyZSBpbiB0aGUgY291bnRyeSBhcyBiZWluZyB0aGVpciBvd24sIGFuZAoJCQkJCXdlcmUgZWplY3RlZDsgYW5kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3liYXJpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3liYXJpcyI+U3liYXJpczwvcGxhY2VOYW1lPiwgZm91bmRlZCA8ZGF0ZSBhdXRobmFtZT0iLTcyMCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTcyMCI+NzIwPC9kYXRlPiBCLkMuLCBiZWNhbWUKCQkJCQkJdmVyeSB3ZWFsdGh5LiBUaGUgVHJvZXplbmlhbiBwb3B1bGF0aW9uIHdoZW4gZXhwZWxsZWQgd2VyZSByZWNlaXZlZCBhdAoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDcm90b24iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLENyb3RvbiI+Q3JvdG9uPC9wbGFjZU5hbWU+LCB3aGljaCBtYWRlIHdhciBvbgoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeWJhcmlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTeWJhcmlzIj5TeWJhcmlzPC9wbGFjZU5hbWU+IGFuZCBkZXN0cm95ZWQgaXQKCQkJCQkJCTxkYXRlIGF1dGhuYW1lPSItNTEwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNTEwIj41MTA8L2RhdGU+IEIuQy4gVG8gd2hhdCBleGFjdGx5IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+E4b24IOG8hM6zzr/PgjwvZm9yZWlnbj4gcmVmZXJzIGlzIHVua25vd24uPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxCeXphbnRpdW0iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEJ5emFudGl1bSI+Qnl6YW50aXVtPC9wbGFjZU5hbWU+CgkJCQkJdGhlIGFkZGl0aW9uYWwgc2V0dGxlcnMgd2VyZSBkaXNjb3ZlcmVkIHBsb3R0aW5nIGFnYWluc3QgdGhlIGNvbG9uaXN0cyBhbmQgd2VyZQoJCQkJCWV4cGVsbGVkIGJ5IGZvcmNlIG9mIGFybXM7IGFuZCB0aGUgcGVvcGxlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQW50aXNzYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQW50aXNzYSI+QW50aXNzYTwvcGxhY2VOYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjY3MiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjcyIj5MZXNib3M8L3BsYWNlTmFtZT4uPC9ub3RlPiBhZnRlciBhZG1pdHRpbmcgdGhlIENoaWFuCgkJCQkJZXhpbGVzIGV4cGVsbGVkIHRoZW0gYnkgYXJtczsgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2NzIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjY3MiI+TGVzYm9zPC9wbGFjZU5hbWU+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZAoJCQkJCXRoZSBwZW9wbGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxaYW5jbGUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFphbmNsZSI+WmFuY2xlPC9wbGFjZU5hbWU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkxhdGVyIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAzODk3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDM4OTciPk1lc3NhbmE8L3BsYWNlTmFtZT4sIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAzODk3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDM4OTciPk1lc3NpbmE8L3BsYWNlTmFtZT4uPC9ub3RlPiBhZnRlciBhZG1pdHRpbmcgc2V0dGxlcnMgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzg5NyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAzODk3Ij5NZXNzYW5hPC9wbGFjZU5hbWU+LCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzg5NyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAzODk3Ij5NZXNzaW5hPC9wbGFjZU5hbWU+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjczIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzMiPlNhbW9zPC9wbGFjZU5hbWU+IHdlcmUgdGhlbXNlbHZlcyBleHBlbGxlZDsgYW5kIHRoZSBwZW9wbGUKCQkJCQlvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEFwb2xsb25pYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXBvbGxvbmlhIj5BcG9sbG9uaWE8L3BsYWNlTmFtZT4gb24gdGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NjE5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY2MTkiPkV1eGluZSBTZWE8L3BsYWNlTmFtZT4gYWZ0ZXIgYnJpbmdpbmcgaW4gYWRkaXRpb25hbAoJCQkJCXNldHRsZXJzIGZlbGwgaW50byBmYWN0aW9uOyBhbmQgdGhlIFN5cmFjdXNhbnMgYWZ0ZXIgdGhlIHBlcmlvZCBvZiB0aGUKCQkJCQkJdHlyYW50czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaHJhc3lidWx1cyBzdWNjZWVkZWQgaGlzIGJyb3RoZXIKCQkJCQkJSGllcm8gYXMgdHlyYW50IGluIDxkYXRlIGF1dGhuYW1lPSItNDY3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDY3Ij40Njc8L2RhdGU+IEIuQy4gYW5kIGZlbGwgd2l0aGluIGEKCQkJCQkJeWVhci48L25vdGU+CgkJCQkJPGRhdGUgYXV0aG5hbWU9Ii00NjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00NjciPjQ2NzwvZGF0ZT4gQi5DLiBhbmQgZmVsbCB3aXRoaW4gYQoJCQkJCQl5ZWFyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzAzYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1303b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmNvbmZlcnJlZCBjaXRpemVuc2hpcCBvbiB0aGVpciBmb3JlaWduIHRyb29wcyBhbmQgbWVyY2VuYXJpZXMgYW5kIHRoZW4gZmFjdGlvbgoJCQkJCXNldCBpbiBhbmQgdGhleSBjYW1lIHRvIGJhdHRsZTsgYW5kIHRoZSBBbXBoaXBvbGl0YW5zIGhhdmluZyByZWNlaXZlZCBzZXR0bGVycwoJCQkJCWZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDaGFsY2lzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDaGFsY2lzIj5DaGFsY2lzPC9wbGFjZU5hbWU+IHdlcmUgbW9zdCBvZiB0aGVtCgkJCQkJZHJpdmVuIG91dCBieSB0aGVtLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gMTMwNmEgMi4gVGhlIGV4YWN0CgkJCQkJCWNpcmN1bXN0YW5jZXMgYXJlIHVua25vd247IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQW1waGlwb2xpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQW1waGlwb2xpcyI+QW1waGlwb2xpczwvcGxhY2VOYW1lPiB3YXMgY29sb25pemVkIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+CgkJCQkJCTxkYXRlIGF1dGhuYW1lPSItNDM3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDM3Ij40Mzc8L2RhdGU+IEIuQy48L25vdGU+CgkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBbXBoaXBvbGlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBbXBoaXBvbGlzIj5BbXBoaXBvbGlzPC9wbGFjZU5hbWU+IHdhcyBjb2xvbml6ZWQgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4KCQkJCQkJPGRhdGUgYXV0aG5hbWU9Ii00MzciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MzciPjQzNzwvZGF0ZT4gQi5DLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7vvIhBbmQgaW4gb2xpZ2FyY2hpZXMgY2l2aWwgc3RyaWZlIGlzCgkJCQkJcmFpc2VkIGJ5IHRoZSBtYW55LCBvbiB0aGUgZ3JvdW5kIHRoYXQgdGhleSBhcmUgdHJlYXRlZCB1bmp1c3RseSBiZWNhdXNlIHRoZXkKCQkJCQlhcmUgbm90IGFkbWl0dGVkIHRvIGFuIGVxdWFsIHNoYXJlIGFsdGhvdWdoIHRoZXkgYXJlIGVxdWFsLCBhcyBoYXMgYmVlbiBzYWlkCgkJCQkJYmVmb3JlLCBidXQgaW4gZGVtb2NyYWNpZXMgaXQgYmVnaW5zIHdpdGggdGhlIG5vdGFibGVzLCBiZWNhdXNlIHRoZXkgaGF2ZSBhbgoJCQkJCWVxdWFsIHNoYXJlIGFsdGhvdWdoIHRoZXkgYXJlIG5vdCBlcXVhbC7vvIk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBzZW50ZW5jZSBpcyBvdXQgb2YgcGxhY2UgaGVyZSwgYW5kIHdvdWxkIGZpdCBpbiBiZXR0ZXIKCQkJCQkJaWYgcGxhY2VkIO+8iGFzIGl0IGlzIGJ5IE5ld21hbu+8iSBhYm92ZSBhdCAxMzAxYSAzOSwgYWZ0ZXIKCQkJCQkJCTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Dz4TOsc+DzrnhvbHOts6/z4XPg865PC9mb3JlaWduPiwgb3Ig77yId2l0aCBvdGhlcgoJCQkJCQllZGl0b3Jz77yJIDEzMDFiIDI2Ljwvbm90ZT4KCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg8+EzrHPg8654b2xzrbOv8+Fz4POuTwvZm9yZWlnbj4sIG9yIO+8iHdpdGggb3RoZXIKCQkJCQkJZWRpdG9yc++8iSAxMzAxYiAyNi48L3RyYW5zbGF0aW9uPg=="
translation['5.1303b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbHNvCgkJCQkJc3RhdGVzIHNvbWV0aW1lcyBlbnRlciBvbiBmYWN0aW9uIGZvciBnZW9ncmFwaGljYWwgcmVhc29ucywgd2hlbiB0aGUgbmF0dXJlIG9mCgkJCQkJdGhlIGNvdW50cnkgaXMgbm90IHN1aXRlZCBmb3IgdGhlcmUgYmVpbmcgYSBzaW5nbGUgY2l0eSwgYXMgZm9yIGV4YW1wbGUgYXQKCQkJCQkJQ2xhem9tZW5hZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Ub3BvZ3JhcGh5IHVuY2VydGFpbjoKCQkJCQkJQ2xhem9tZW5hZSBuZWFyIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU215cm5hIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTbXlybmEiPlNteXJuYTwvcGxhY2VOYW1lPiB3YXMKCQkJCQkJcGFydGx5IG9uIGEgc21hbGwgaXNsYW5kLCB3aGljaCBBbGV4YW5kZXIgam9pbmVkIHRvIHRoZSBtYWlubGFuZCB3aXRoIGEKCQkJCQkJY2F1c2V3YXkuPC9ub3RlPiB0aGUgcGVvcGxlIG5lYXIgQ2h5dHJ1bSBhcmUgaW4gZmV1ZCB3aXRoIHRoZSBpbmhhYml0YW50cyBvZgoJCQkJCXRoZSBpc2xhbmQsIGFuZCB0aGUgQ29sb3Bob25pYW5zIGFuZCB0aGUgTm90aWFuczxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU215cm5hIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTbXlybmEiPlNteXJuYTwvcGxhY2VOYW1lPiB3YXMKCQkJCQkJcGFydGx5IG9uIGEgc21hbGwgaXNsYW5kLCB3aGljaCBBbGV4YW5kZXIgam9pbmVkIHRvIHRoZSBtYWlubGFuZCB3aXRoIGEKCQkJCQkJY2F1c2V3YXkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTm90aXVtIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxOb3RpdW0iPk5vdGl1bTwvcGxhY2VOYW1lPiB3YXMgdGhlCgkJCQkJCXBvcnQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb2xvcGhvbiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ29sb3Bob24iPkNvbG9waG9uPC9wbGFjZU5hbWU+Ljwvbm90ZT47IGFuZAoJCQkJCWF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTm90aXVtIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxOb3RpdW0iPk5vdGl1bTwvcGxhY2VOYW1lPiB3YXMgdGhlCgkJCQkJCXBvcnQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb2xvcGhvbiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ29sb3Bob24iPkNvbG9waG9uPC9wbGFjZU5hbWU+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiB0aGUgcG9wdWxhdGlvbiBpcyBub3QKCQkJCQl1bmlmb3JtbHkgZGVtb2NyYXRpYyBpbiBzcGlyaXQsIGJ1dCB0aGUgaW5oYWJpdGFudHMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxQaXJhZXVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQaXJhZXVzIj5QaXJhZXVzPC9wbGFjZU5hbWU+IGFyZSBtb3JlIHNvIHRoYW4gdGhvc2Ugb2YgdGhlCgkJCQkJY2l0eS4gRm9yIGp1c3QgYXMgaW4gd2FycyB0aGUgZm9yZGluZyBvZiB3YXRlcmNvdXJzZXMsIGV2ZW4gcXVpdGUgc21hbGwgb25lcywKCQkJCQljYXVzZXMgdGhlIGZvcm1hdGlvbnMgdG8gbG9zZSBjb250YWN0LCBzbyBldmVyeSBkaWZmZXJlbmNlIHNlZW1zIHRvIGNhdXNlCgkJCQkJZGl2aXNpb24uIFRodXMgcGVyaGFwcyB0aGUgZ3JlYXRlc3QgZGl2aXNpb24gaXMgdGhhdCBiZXR3ZWVuIHZpcnR1ZSBhbmQgdmljZSwKCQkJCQluZXh0IHRoYXQgYmV0d2VlbiB3ZWFsdGggYW5kIHBvdmVydHksIGFuZCBzbyB3aXRoIG90aGVyIGRpZmZlcmVuY2VzIGluIHZhcnlpbmcKCQkJCQlkZWdyZWUsIG9uZSBvZiB3aGljaCBpcyB0aGUgb25lIG1lbnRpb25lZC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBkaWZmZXJlbmNlIG9mIGxvY2FsaXR5Ljwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GYWN0aW9ucyBhcmlzZSB0aGVyZWZvcmUgbm90IGFib3V0IGJ1dCBvdXQgb2Ygc21hbGwgbWF0dGVyczsgYnV0IHRoZXkgYXJlCgkJCQkJY2FycmllZCBvbiBhYm91dCBncmVhdCBtYXR0ZXJzLiBBbmQgZXZlbiB0aGUgc21hbGwgb25lcyBncm93IGV4dHJlbWVseSB2aW9sZW50CgkJCQkJd2hlbiB0aGV5IHNwcmluZyB1cCBhbW9uZyBtZW4gb2YgdGhlIHJ1bGluZyBjbGFzcyw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YXMgaGFwcGVuZWQgZm9yIGV4YW1wbGUgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3lyYWN1c2UiPlN5cmFjdXNlPC9wbGFjZU5hbWU+IGluIGFuY2llbnQgdGltZXMuIEZvciB0aGUgY29uc3RpdHV0aW9uIHVuZGVyd2VudCBhCgkJCQkJcmV2b2x1dGlvbiBhcyBhIHJlc3VsdCBvZiBhIHF1YXJyZWwgdGhhdCBhcm9zZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIHVuZGVyIHRoZSBvbGlnYXJjaCBvZiB0aGUgR2Ftb3JpLCBvdmVydGhyb3duIGJ5IHRoZQoJCQkJCQlwZW9wbGUgYW5kIGZvbGxvd2VkIGJ5IEdlbG8ncyB0eXJhbm55LCA8ZGF0ZSBhdXRobmFtZT0iLTQ4NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQ4NSI+NDg1PC9kYXRlPgoJCQkJCQlCLkMuPC9ub3RlPiBiZXR3ZWVuIHR3byB5b3VuZyBtZW4sIHdobyBiZWxvbmdlZCB0byB0aGUgcnVsaW5nIGNsYXNzLCBhYm91dCBhCgkJCQkJbG92ZSBhZmZhaXIuIFdoaWxlIG9uZSBvZiB0aGVtIHdhcyBhYnJvYWQgdGhlIG90aGVyIHdobyB3YXMgaGlzIGNvbXJhZGUgd29uIG92ZXIKCQkJCQl0aGUgeW91dGggd2l0aCB3aG9tIGhlIHdhcyBpbiBsb3ZlLCBhbmQgdGhlIGZvcm1lciBpbiBoaXMgYW5nZXIgYWdhaW5zdCBoaW0KCQkJCQlyZXRhbGlhdGVkIGJ5IHBlcnN1YWRpbmcgaGlzIHdpZmUgdG8gY29tZSB0byBoaW07IG93aW5nIHRvIHdoaWNoIHRoZXkgc3RpcnJlZCB1cAoJCQkJCWEgcGFydHkgc3RydWdnbGUgYW1vbmcgYWxsIHRoZSBwZW9wbGUgaW4gdGhlIHN0YXRlLCBlbmxpc3RpbmcgdGhlbSBvbiB0aGVpcgoJCQkJCXNpZGVzLiA8ZGF0ZSBhdXRobmFtZT0iLTQ4NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQ4NSI+NDg1PC9kYXRlPgoJCQkJCQlCLkMuPC90cmFuc2xhdGlvbj4="
translation['5.1304a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+T24gYWNjb3VudCBvZiB0aGlzIGl0IGlzCgkJCQkJbmVjZXNzYXJ5IHRvIGd1YXJkIGFnYWluc3Qgc3VjaCBhZmZhaXJzIGF0IHRoZWlyIGJlZ2lubmluZywgYW5kIHRvIGJyZWFrIHVwIHRoZQoJCQkJCWZhY3Rpb25zIG9mIHRoZSBsZWFkZXJzIGFuZCBwb3dlcmZ1bCBtZW47IGZvciB0aGUgZXJyb3Igb2NjdXJzIGF0IHRoZSBiZWdpbm5pbmcsCgkJCQkJYW5kIHRoZSBiZWdpbm5pbmcgYXMgdGhlIHByb3ZlcmIgc2F5cyBpcyBoYWxmIG9mIHRoZSB3aG9sZSwgc28gdGhhdCBldmVuIGEgc21hbGwKCQkJCQltaXN0YWtlIGF0IHRoZSBiZWdpbm5pbmcgc3RhbmRzIGluIHRoZSBzYW1lIHJhdGlvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIHJhdGlvIG9mIGJlaW5nIGEgaGFsZiB0byB0aGUgd2hvbGU6IGEgYmFkIHN0YXJ0IGRvZXMKCQkJCQkJYXMgbXVjaCB0byBoYXJtIGFzIGFsbCB0aGUgbGF0ZXIgbWlzdGFrZXMgcHV0IHRvZ2V0aGVyLjwvbm90ZT4gdG8gbWlzdGFrZXMKCQkJCQlhdCB0aGUgb3RoZXIgc3RhZ2VzLiBBbmQgaW4gZ2VuZXJhbCB0aGUgZmFjdGlvbiBxdWFycmVscyBvZiB0aGUgbm90YWJsZXMgaW52b2x2ZQoJCQkJCXRoZSB3aG9sZSBzdGF0ZSBpbiB0aGUgY29uc2VxdWVuY2VzLCBhcyBoYXBwZW5lZCBhdCBIZXN0aWFlYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BbHNvIGNhbGxlZCBPcmV1cywgc2VlIDEzMDNhIDE4Ljwvbm90ZT4gYWZ0ZXIgdGhlIFBlcnNpYW4KCQkJCQl3YXJzLCB3aGVuIHR3byBicm90aGVycyBxdWFycmVsbGVkIGFib3V0IHRoZSBkaXZpc2lvbiBvZiB0aGVpciBwYXRyaW1vbnk7IGZvcgoJCQkJCXRoZSBwb29yZXIgb2YgdGhlIHR3bywgb24gdGhlIGdyb3VuZCB0aGF0IHRoZSBvdGhlciB3b3VsZCBub3QgbWFrZSBhIHJldHVybiBvZgoJCQkJCXRoZSBlc3RhdGUgYW5kIG9mIHRoZSB0cmVhc3VyZSB0aGF0IHRoZWlyIGZhdGhlciBoYWQgZm91bmQsIGdvdCB0aGUgY29tbW9uCgkJCQkJcGVvcGxlIG9uIGhpcyBzaWRlLCBhbmQgdGhlIG90aGVyIHBvc3Nlc3NpbmcgbXVjaCBwcm9wZXJ0eSB3YXMgc3VwcG9ydGVkIGJ5IHRoZQoJCQkJCXJpY2guIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVscGhpIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxEZWxwaGkiPkRlbHBoaTwvcGxhY2VOYW1lPiB0aGUgYmVnaW5uaW5nIG9mIGFsbCB0aGUgZmFjdGlvbnMKCQkJCQl0aGF0IG9jY3VycmVkIGFmdGVyd2FyZHMgd2FzIHdoZW4gYSBxdWFycmVsIGFyb3NlIG91dCBvZiBhIG1hcnJpYWdlOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMwNGEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['5.1304a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnRoZQoJCQkJCWJyaWRlZ3Jvb20gaW50ZXJwcmV0ZWQgc29tZSBjaGFuY2Ugb2NjdXJyZW5jZSB3aGVuIGhlIGNhbWUgdG8gZmV0Y2ggdGhlIGJyaWRlIGFzCgkJCQkJYSBiYWQgb21lbiBhbmQgd2VudCBhd2F5IHdpdGhvdXQgdGFraW5nIGhlciwgYW5kIGhlciByZWxhdGl2ZXMgdGhpbmtpbmcKCQkJCQl0aGVtc2VsdmVzIGluc3VsdGVkIHRocmV3IHNvbWUgYXJ0aWNsZXMgb2Ygc2FjcmVkIHByb3BlcnR5IGludG8gdGhlIGZpcmUgd2hlbiBoZQoJCQkJCXdhcyBwZXJmb3JtaW5nIGEgc2FjcmlmaWNlIGFuZCB0aGVuIHB1dCBoaW0gdG8gZGVhdGggYXMgZ3VpbHR5IG9mIHNhY3JpbGVnZS4gQW5kCgkJCQkJYWxzbyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjY3MiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjcyIj5NaXR5bGVuZTwvcGxhY2VOYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgcmV2b2x0IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjcyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzIiPk1pdHlsZW5lPC9wbGFjZU5hbWU+CgkJCQkJCTxkYXRlIGF1dGhuYW1lPSItNDI4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDI4Ij40Mjg8L2RhdGU+IEIuQy4gaXMgYXNjcmliZWQgdG8gcHVyZWx5IHBvbGl0aWNhbCBjYXVzZXMgYnkKCQkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlRodWMuIDMuMSIgdmFsaWQ9InllcyI+VGh1Yy4gMy4xLTMwPC9iaWJsPi48L25vdGU+IGEgZmFjdGlvbiB0aGF0IGFyb3NlIG91dAoJCQkJCW9mIHNvbWUgaGVpcmVzc2VzIHdhcyB0aGUgYmVnaW5uaW5nIG9mIG1hbnkgbWlzZm9ydHVuZXMsIGFuZCBvZiB0aGUgd2FyIHdpdGggdGhlCgkJCQkJQXRoZW5pYW5zIGluIHdoaWNoIFBhY2hlcyBjYXB0dXJlZCB0aGUgY2l0eSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjY3MiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjcyIj5NaXR5bGVuZTwvcGxhY2VOYW1lPgoJCQkJCQk8ZGF0ZSBhdXRobmFtZT0iLTQyOCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQyOCI+NDI4PC9kYXRlPiBCLkMuIGlzIGFzY3JpYmVkIHRvIHB1cmVseSBwb2xpdGljYWwgY2F1c2VzIGJ5CgkJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJUaHVjLiAzLjEiIHZhbGlkPSJ5ZXMiPlRodWMuIDMuMS0zMDwvYmlibD4uPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2NzIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjY3MiI+TWl0eWxlbmU8L3BsYWNlTmFtZT46IGEgd2VhbHRoeSBjaXRpemVuIG5hbWVkIFRpbW9waGFuZXMgbGVmdCB0d28KCQkJCQlkYXVnaHRlcnMsIGFuZCBhIG1hbiB3aG8gd2FzIHJlamVjdGVkIGluIGhpcyBzdWl0IHRvIG9idGFpbiB0aGVtIGZvciBoaXMgb3duCgkJCQkJc29ucywgRG94YW5kZXIsIHN0YXJ0ZWQgdGhlIGZhY3Rpb24gYW5kIGtlcHQgb24gc3RpcnJpbmcgdXAgdGhlIEF0aGVuaWFucywgd2hvc2UKCQkJCQljb25zdWwgaGUgd2FzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjcyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzIiPk1pdHlsZW5lPC9wbGFjZU5hbWU+LiA8L3RyYW5zbGF0aW9uPg=="
translation['5.1304a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGFtb25nIHRoZSBQaG9jaWFucyB3aGVuIGEgZmFjdGlvbgoJCQkJCWFyaXNpbmcgb3V0IG9mIGFuIGhlaXJlc3Mgc3ByYW5nIHVwIGluIGNvbm5lY3Rpb24gd2l0aCBNbmFzZWFzIHRoZSBmYXRoZXIgb2YKCQkJCQlNbmFzb24gYW5kIEV1dGh5a3JhdGVzIHRoZSBmYXRoZXIgb2YgT25vbWFyY2h1cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGUgZmF0aGVycyBvZiB0aGUgdHdvIHN1aXRvcnMgZm9yIHRoZSBoZWlyZXNzJ3MgaGFuZAoJCQkJCQl0dXJuZWQgdGhlIHF1YXJyZWwgaW50byBhIGZhY3Rpb24gZmlnaHQuPC9ub3RlPiB0aGlzIGZhY3Rpb24gcHJvdmVkIHRvIGJlCgkJCQkJdGhlIGJlZ2lubmluZyBmb3IgdGhlIFBob2NpYW5zIG9mIHRoZSBIb2x5IFdhci4gQXQgRXBpZGFtbnVzIGFsc28gY2lyY3Vtc3RhbmNlcwoJCQkJCXJlbGF0aW5nIHRvIGEgbWFycmlhZ2UgZ2F2ZSByaXNlIHRvIGEgcmV2b2x1dGlvbiBpbiB0aGUgY29uc3RpdHV0aW9uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdGhlIHNhbWUgZXZlbnQgYXMgdGhhdCByZWZlcnJlZCB0bwoJCQkJCQkxMzAxYiAyMS48L25vdGU+OyBzb21lYm9keSBoYWQgYmV0cm90aGVkIGhpcyBkYXVnaHRlciwgYW5kIHRoZSBmYXRoZXIgb2YgdGhlCgkJCQkJbWFuIHRvIHdob20gaGUgaGFkIGJldHJvdGhlZCBoZXIgYmVjYW1lIGEgbWFnaXN0cmF0ZSwgYW5kIGhhZCB0byBzZW50ZW5jZSBoaW0gdG8KCQkJCQlhIGZpbmU7IHRoZSBvdGhlciB0aGlua2luZyB0aGF0IGhlIGhhZCBiZWVuIHRyZWF0ZWQgd2l0aCBpbnNvbGVuY2UgZm9ybWVkIGEKCQkJCQlwYXJ0eSBvZiB0aGUgdW5lbmZyYW5jaGlzZWQgY2xhc3NlcyB0byBhc3Npc3QgaGltLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhbHNvIHJldm9sdXRpb25zIHRvIG9saWdhcmNoeSBhbmQgZGVtb2NyYWN5IGFuZAoJCQkJCWNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQgYXJpc2UgZnJvbSB0aGUgZ3Jvd3RoIGluIHJlcHV0YXRpb24gb3IgaW4gcG93ZXIgb2YKCQkJCQlzb21lIG1hZ2lzdHJhY3kgb3Igc29tZSBzZWN0aW9uIG9mIHRoZSBzdGF0ZTs8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YXMgZm9yIGV4YW1wbGUgdGhlIENvdW5jaWwgb24gdGhlIEFyZW9wYWd1cyBoYXZpbmcgcmlzZW4gaW4KCQkJCQlyZXB1dGF0aW9uIGR1cmluZyB0aGUgUGVyc2lhbiB3YXJzIHdhcyBiZWxpZXZlZCB0byBoYXZlIG1hZGUgdGhlIGNvbnN0aXR1dGlvbgoJCQkJCW1vcmUgcmlnaWQsIGFuZCB0aGVuIGFnYWluIHRoZSBuYXZhbCBtdWx0aXR1ZGUsIGhhdmluZyBiZWVuIHRoZSBjYXVzZSBvZiB0aGUKCQkJCQl2aWN0b3J5IG9mZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjM0MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzQwIj5TYWxhbWlzPC9wbGFjZU5hbWU+IGFuZCB0aGVyZWJ5IG9mIHRoZQoJCQkJCWxlYWRlcnNoaXAgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGR1ZSB0byBoZXIKCQkJCQlwb3dlciBhdCBzZWEsIG1hZGUgdGhlIGRlbW9jcmFjeSBzdHJvbmdlcjsgYW5kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXJnb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFyZ29zIj5BcmdvczwvcGxhY2VOYW1lPiB0aGUgbm90YWJsZXMgaGF2aW5nIHJpc2VuIGluIHJlcHV0ZSBpbiBjb25uZWN0aW9uIHdpdGgKCQkJCQl0aGUgYmF0dGxlIGFnYWluc3QgdGhlIFNwYXJ0YW5zIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWFudGluZWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1hbnRpbmVhIj5NYW50aW5lYTwvcGxhY2VOYW1lPiB0b29rIGluIGhhbmQgdG8gcHV0IGRvd24gdGhlIHBlb3BsZTsgPC90cmFuc2xhdGlvbj4="
translation['5.1304b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy42IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3lyYWN1c2UiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPiB0aGUgcGVvcGxlIGhhdmluZyBiZWVuIHRoZSBjYXVzZSBvZiB0aGUgdmljdG9yeSBpbiB0aGUKCQkJCQl3YXIgYWdhaW5zdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gbWFkZSBhIHJldm9sdXRpb24KCQkJCQlmcm9tIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQgdG8gZGVtb2NyYWN5OyBhbmQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDaGFsY2lzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDaGFsY2lzIj5DaGFsY2lzPC9wbGFjZU5hbWU+IHRoZSBwZW9wbGUgd2l0aCB0aGUgYWlkIG9mIHRoZQoJCQkJCW5vdGFibGVzIG92ZXJ0aHJldyB0aGUgdHlyYW50IFBob3h1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Vbmtub3duLjwvbm90ZT4gYW5kIHRoZW4gaW1tZWRpYXRlbHkgc2VpemVkIHRoZSBnb3Zlcm5tZW50OyBhbmQgYWdhaW4gYXQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBbWJyYWNpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQW1icmFjaWEiPkFtYnJhY2lhPC9wbGFjZU5hbWU+IHNpbWlsYXJseSB0aGUgcGVvcGxlCgkJCQkJam9pbmVkIHdpdGggdGhlIGFkdmVyc2FyaWVzIG9mIHRoZSB0eXJhbnQgUGVyaWFuZGVyIGluIGV4cGVsbGluZyBoaW0gYW5kIHRoZW4KCQkJCQlicm91Z2h0IHRoZSBnb3Zlcm5tZW50IHJvdW5kIHRvIHRoZW1zZWx2ZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxkYXRlIGF1dGhuYW1lPSItNTgwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNTgwIj41ODA8L2RhdGU+IEIuQzsgY2YuIDEzMTFhIDM5IGZmLjwvbm90ZT4KCQkJCQk8ZGF0ZSBhdXRobmFtZT0iLTU4MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTU4MCI+NTgwPC9kYXRlPiBCLkM7IGNmLiAxMzExYSAzOSBmZi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpbmRlZWQgaW4gZ2VuZXJhbCBpdCBtdXN0IG5vdAoJCQkJCWVzY2FwZSBub3RpY2UgdGhhdCB0aGUgcGVyc29ucyB3aG8gaGF2ZSBjYXVzZWQgYSBzdGF0ZSB0byB3aW4gcG93ZXIsIHdoZXRoZXIKCQkJCQlwcml2YXRlIGNpdGl6ZW5zIG9yIG1hZ2lzdHJhdGVzIG9yIHRyaWJlcywgb3IgaW4gZ2VuZXJhbCBhIHNlY3Rpb24gb3IgZ3JvdXAgb2YKCQkJCQlhbnkga2luZCwgc3RpciB1cCBmYWN0aW9uOyBmb3IgZWl0aGVyIHRob3NlIHdobyBlbnZ5IHRoZXNlIG1lbiBmb3IgYmVpbmcgaG9ub3JlZAoJCQkJCWJlZ2luIHRoZSBmYWN0aW9uLCBvciB0aGVzZSBtZW4gb3dpbmcgdG8gdGhlaXIgc3VwZXJpb3JpdHkgYXJlIG5vdCB3aWxsaW5nIHRvCgkJCQkJcmVtYWluIGluIGEgcG9zaXRpb24gb2YgZXF1YWxpdHkuIEFuZCBjb25zdGl0dXRpb25zIGFsc28gdW5kZXJnbyByZXZvbHV0aW9uIHdoZW4KCQkJCQl3aGF0IGFyZSB0aG91Z2h0IG9mIGFzIG9wcG9zaW5nIHNlY3Rpb25zIG9mIHRoZSBzdGF0ZSBiZWNvbWUgZXF1YWwgdG8gb25lCgkJCQkJYW5vdGhlciwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMDRiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['5.1304b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBpbnN0YW5jZSB0aGUgcmljaCBhbmQgdGhlIHBlb3BsZSwgYW5kIHRoZXJlIGlzIG5vIG1pZGRsZQoJCQkJCWNsYXNzIG9yIG9ubHkgYW4gZXh0cmVtZWx5IHNtYWxsIG9uZTsgZm9yIGlmIGVpdGhlciBvZiB0aGUgdHdvIHNlY3Rpb25zIGJlY29tZXMKCQkJCQltdWNoIHRoZSBzdXBlcmlvciwgdGhlIHJlbWFpbmRlciBpcyBub3Qgd2lsbGluZyB0byByaXNrIGFuIGVuY291bnRlciB3aXRoIGl0cwoJCQkJCW1hbmlmZXN0bHkgc3Ryb25nZXIgb3Bwb25lbnQuIE93aW5nIHRvIHRoaXMgbWVuIHdobyBhcmUgZXhjZXB0aW9uYWwgaW4gdmlydHVlCgkJCQkJZ2VuZXJhbGx5IHNwZWFraW5nIGRvIG5vdCBjYXVzZSBmYWN0aW9uLCBiZWNhdXNlIHRoZXkgZmluZCB0aGVtc2VsdmVzIGZldwoJCQkJCWFnYWluc3QgbWFueS4gVW5pdmVyc2FsbHkgdGhlbiBpbiBjb25uZWN0aW9uIHdpdGggYWxsIHRoZSBmb3JtcyBvZiBjb25zdGl0dXRpb24KCQkJCQl0aGUgb3JpZ2lucyBhbmQgY2F1c2VzIG9mIGZhY3Rpb25zIGFuZCByZXZvbHV0aW9ucyBhcmUgb2YgdGhpcyBuYXR1cmUuPC90cmFuc2xhdGlvbj4="
translation['5.1304b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy44IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBtZWFucwoJCQkJCXVzZWQgdG8gY2F1c2UgcmV2b2x1dGlvbnMgb2YgY29uc3RpdHV0aW9ucyBhcmUgc29tZXRpbWVzIGZvcmNlIGFuZCBzb21ldGltZXMKCQkJCQlmcmF1ZC4gRm9yY2UgaXMgZW1wbG95ZWQgZWl0aGVyIHdoZW4gdGhlIHJldm9sdXRpb25hcnkgbGVhZGVycyBleGVydCBjb21wdWxzaW9uCgkJCQkJaW1tZWRpYXRlbHkgZnJvbSB0aGUgc3RhcnQgb3IgbGF0ZXIgb27igJRhcyBpbmRlZWQgdGhlIG1vZGUgb2YgdXNpbmcKCQkJCQlmcmF1ZCBpcyBhbHNvIHR3b2ZvbGQ6IHNvbWV0aW1lcyB0aGUgcmV2b2x1dGlvbmFyaWVzIGFmdGVyIGNvbXBsZXRlbHkgZGVjZWl2aW5nCgkJCQkJdGhlIHBlb3BsZSBhdCB0aGUgZmlyc3Qgc3RhZ2UgYWx0ZXIgdGhlIGNvbnN0aXR1dGlvbiB3aXRoIHRoZWlyIGNvbnNlbnQsIGJ1dAoJCQkJCXRoZW4gYXQgYSBsYXRlciBzdGFnZSByZXRhaW4gdGhlaXIgaG9sZCBvbiBpdCBieSBmb3JjZSBhZ2FpbnN0IHRoZSBwZW9wbGUncwoJCQkJCXdpbGw6IGZvciBpbnN0YW5jZSwgYXQgdGhlIHRpbWUgb2YgdGhlIEZvdXIgSHVuZHJlZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIG9saWdhcmNoeSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4KCQkJCQkJPGRhdGUgYXV0aG5hbWU9Ii00MTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MTEiPjQxMTwvZGF0ZT4gQi5DLiwgY2YuIDEzMDVhIDI3Ljwvbm90ZT4gdGhleSBkZWNlaXZlZCB0aGUKCQkJCQlwZW9wbGUgYnkgc2F5aW5nIHRoYXQgdGhlIFBlcnNpYW4gS2luZyB3b3VsZCBzdXBwbHkgbW9uZXkgZm9yIHRoZSB3YXIgYWdhaW5zdAoJCQkJCXRoZSBTcGFydGFucywgYW5kIGFmdGVyIHRlbGxpbmcgdGhlbSB0aGlzIGZhbHNlaG9vZCBlbmRlYXZvcmVkIHRvIGtlZXAgYSBob2xkCgkJCQkJdXBvbiB0aGUgZ292ZXJubWVudDsgYnV0IGluIG90aGVyIGNhc2VzIHRoZXkgYm90aCBwZXJzdWFkZSB0aGUgcGVvcGxlIGF0IHRoZQoJCQkJCXN0YXJ0IGFuZCBhZnRlcndhcmRzIHJlcGVhdCB0aGUgcGVyc3Vhc2lvbiBhbmQgZ292ZXJuIHRoZW0gd2l0aCB0aGVpcgoJCQkJCQljb25zZW50LjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPgoJCQkJCQk8ZGF0ZSBhdXRobmFtZT0iLTQxMSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMSI+NDExPC9kYXRlPiBCLkMuLCBjZi4gMTMwNWEgMjcuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlNwZWFraW5nIGdlbmVyYWxseSB0aGVyZWZvcmUgaW4KCQkJCQlyZWdhcmQgdG8gYWxsIHRoZSBmb3JtcyBvZiBjb25zdGl0dXRpb24sIHRoZSBjYXVzZXMgdGhhdCBoYXZlIGJlZW4gc3RhdGVkIGFyZQoJCQkJCXRob3NlIGZyb20gd2hpY2ggcmV2b2x1dGlvbnMgaGF2ZSBvY2N1cnJlZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgaW4gdGhlIGxpZ2h0IG9mIHRoZXNlCgkJCQkJZ2VuZXJhbCBydWxlcyB3ZSBtdXN0IGNvbnNpZGVyIHRoZSB1c3VhbCBjb3Vyc2Ugb2YgZXZlbnRzPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFzIGNsYXNzaWZpZWQgYWNjb3JkaW5nIHRvIGVhY2ggZGlmZmVyZW50IGtpbmQgb2YKCQkJCQljb25zdGl0dXRpb24uIEluIGRlbW9jcmFjaWVzIHRoZSBwcmluY2lwYWwgY2F1c2Ugb2YgcmV2b2x1dGlvbnMgaXMgdGhlIGluc29sZW5jZQoJCQkJCW9mIHRoZSBkZW1hZ29ndWVzOyBmb3IgdGhleSBjYXVzZSB0aGUgb3duZXJzIG9mIHByb3BlcnR5IHRvIGJhbmQgdG9nZXRoZXIsCgkJCQkJcGFydGx5IGJ5IG1hbGljaW91cyBwcm9zZWN1dGlvbnMgb2YgaW5kaXZpZHVhbHMgYW1vbmcgdGhlbSDvvIhmb3IgY29tbW9uCgkJCQkJZmVhciBicmluZ3MgdG9nZXRoZXIgZXZlbiB0aGUgZ3JlYXRlc3QgZW5lbWllc++8iSwgYW5kIHBhcnRseSBieSBzZXR0aW5nCgkJCQkJb24gdGhlIGNvbW1vbiBwZW9wbGUgYWdhaW5zdCB0aGVtIGFzIGEgY2xhc3MuIDwvdHJhbnNsYXRpb24+"
translation['5.1305a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIG9uZSBtYXkgc2VlIHRoaXMgdGFraW5nIHBsYWNlIGluIHRoaXMgbWFubmVyIGluIG1hbnkKCQkJCQlpbnN0YW5jZXMuIEluIENvcyB0aGUgZGVtb2NyYWN5IHdhcyBvdmVydGhyb3duPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkRhdGUgdW5rbm93bi48L25vdGU+IHdoZW4gZXZpbCBkZW1hZ29ndWVzIGhhZCBhcmlzZW4gdGhlcmUsCgkJCQkJZm9yIHRoZSBub3RhYmxlcyBiYW5kZWQgdGhlbXNlbHZlcyB0b2dldGhlcjsgYW5kIGFsc28gaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEyNjYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMTI2NiI+UmhvZGVzPC9wbGFjZU5hbWU+LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUKCQkJCQkJMTMwMmIgMjMgbi48L25vdGU+IGZvciB0aGUgZGVtYWdvZ3VlcyB1c2VkIHRvIHByb3ZpZGUgcGF5IGZvciBwdWJsaWMKCQkJCQlzZXJ2aWNlcywgYW5kIGFsc28gdG8gaGluZGVyIHRoZSBwYXltZW50IG9mIG1vbmV5IG93ZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBvd2VkIGZvciByZXBhaXJzIHRvIHRoZSBzaGlwcywgYW5kIHBlcmhhcHMgYWxzbyBmb3IKCQkJCQkJYWR2YW5jZXMgb2YgcGF5IHRvIHRoZSBjcmV3cy48L25vdGU+IHRvIHRoZSBuYXZhbCBjYXB0YWlucywgYW5kIHRoZXNlCgkJCQkJYmVjYXVzZSBvZiB0aGUgbGF3c3VpdHMgdGhhdCB3ZXJlIGJyb3VnaHQgYWdhaW5zdCB0aGVtIHdlcmUgZm9yY2VkIHRvIG1ha2UKCQkJCQljb21tb24gY2F1c2UgYW5kIG92ZXJ0aHJvdyB0aGUgcGVvcGxlLiBBbmQgYWxzbyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwODI5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA4Mjk5Ij5IZXJhY2xlYTwvcGxhY2VOYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Qcm9iYWJseSB0aGUgUG9udGljCgkJCQkJCUhlcmFjbGVhIO+8iGNmLiAxMzA1YiA1LCAzNiwgMTMwNmEgMzfvvIksIGZvdW5kZWQgbWlkZGxlIG9mCgkJCQkJCXRoZSA2dGggY2VudHVyeSBCLkMuLCBub3QgdGhlIFRyYWNoaW5pYW4uPC9ub3RlPiB0aGUgcGVvcGxlIHdlcmUgcHV0IGRvd24KCQkJCQlpbW1lZGlhdGVseSBhZnRlciB0aGUgZm91bmRhdGlvbiBvZiB0aGUgY29sb255IGJlY2F1c2Ugb2YgdGhlIHBlb3BsZSdzIGxlYWRlcnM7CgkJCQkJZm9yIHRoZSBub3RhYmxlcyBiZWluZyB1bmp1c3RseSB0cmVhdGVkIGJ5IHRoZW0gdXNlZCB0byBiZSBkcml2ZW4gb3V0LCBidXQgbGF0ZXIKCQkJCQlvbiB0aG9zZSB3aG8gd2VyZSBkcml2ZW4gb3V0IGNvbGxlY3RpbmcgdG9nZXRoZXIgZWZmZWN0ZWQgdGhlaXIgcmV0dXJuIGFuZCBwdXQKCQkJCQlkb3duIHRoZSBwZW9wbGUuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGFsc28gdGhlCgkJCQkJZGVtb2NyYWN5IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWVnYXJhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNZWdhcmEiPk1lZ2FyYTwvcGxhY2VOYW1lPiB3YXMgcHV0IGRvd24gaW4KCQkJCQlhIHNpbWlsYXIgbWFubmVyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMzAwYSAxOCBmZi4gbi48L25vdGU+OwoJCQkJCXRoZSBwZW9wbGUncyBsZWFkZXJzIGluIG9yZGVyIHRvIGhhdmUgbW9uZXkgdG8gZGlzdHJpYnV0ZSB0byB0aGUgcGVvcGxlIHdlbnQgb24KCQkJCQlleHBlbGxpbmcgbWFueSBvZiB0aGUgbm90YWJsZXMsIHVudGlsIHRoZXkgbWFkZSB0aGUgZXhpbGVzIGEgbGFyZ2UgYm9keSwgYW5kCgkJCQkJdGhlc2UgY2FtZSBiYWNrIGFuZCBkZWZlYXRlZCB0aGUgcGVvcGxlIGluIGEgYmF0dGxlIGFuZCBzZXQgdXAgdGhlIG9saWdhcmNoeS4KCQkJCQlBbmQgdGhlIHNhbWUgdGhpbmcgaGFwcGVuZWQgYWxzbyBhdCBDeW1lIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzA1YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1305a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmluIHRoZSB0aW1lIG9mIHRoZSBkZW1vY3JhY3kKCQkJCQl3aGljaCBUaHJhc3ltYWNodXMgcHV0IGRvd248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QW4gZXZlbnQKCQkJCQkJb3RoZXJ3aXNlIHVua25vd24uPC9ub3RlPiwgYW5kIGluIHRoZSBjYXNlIG9mIG90aGVyIHN0YXRlcyBhbHNvIGV4YW1pbmF0aW9uCgkJCQkJd291bGQgc2hvdyB0aGF0IHJldm9sdXRpb25zIHRha2UgcGxhY2UgdmVyeSBtdWNoIGluIHRoaXMgbWFubmVyLiBTb21ldGltZXMgdGhleQoJCQkJCW1ha2UgdGhlIG5vdGFibGVzIGNvbWJpbmUgYnkgd3JvbmdpbmcgdGhlbSBpbiBvcmRlciB0byBjdXJyeSBmYXZvciwgY2F1c2luZwoJCQkJCWVpdGhlciB0aGVpciBlc3RhdGVzIHRvIGJlIGRpdmlkZWQgdXAgb3IgdGhlaXIgcmV2ZW51ZXMgYnkgaW1wb3NpbmcgcHVibGljCgkJCQkJc2VydmljZXMsIGFuZCBzb21ldGltZXMgYnkgc28gc2xhbmRlcmluZyB0aGVtIHRoYXQgdGhleSBtYXkgaGF2ZSB0aGUgcHJvcGVydHkgb2YKCQkJCQl0aGUgd2VhbHRoeSB0byBjb25maXNjYXRlLiA8L3RyYW5zbGF0aW9uPg=="
translation['5.1305a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGluCgkJCQkJb2xkIHRpbWVzIHdoZW5ldmVyIHRoZSBzYW1lIG1hbiBiZWNhbWUgYm90aCBsZWFkZXIgb2YgdGhlIHBlb3BsZSBhbmQgZ2VuZXJhbCwKCQkJCQl0aGV5IHVzZWQgdG8gY2hhbmdlIHRoZSBjb25zdGl0dXRpb24gdG8gYSB0eXJhbm55OyBmb3IgYWxtb3N0IHRoZSBsYXJnZXN0IG51bWJlcgoJCQkJCW9mIHRoZSB0eXJhbnRzIG9mIGVhcmx5IGRheXMgaGF2ZSByaXNlbiBmcm9tIGJlaW5nIGxlYWRlcnMgb2YgdGhlIHBlb3BsZS4gQW5kCgkJCQkJdGhlIHJlYXNvbiB3aHkgdGhpcyB1c2VkIHRvIGhhcHBlbiB0aGVuIGJ1dCBkb2VzIG5vdCBkbyBzbyBub3cgaXMgYmVjYXVzZSB0aGVuCgkJCQkJdGhlIGxlYWRlcnMgb2YgdGhlIHBlb3BsZSB3ZXJlIGRyYXduIGZyb20gdGhvc2Ugd2hvIGhlbGQgdGhlIG9mZmljZSBvZiBnZW5lcmFsCgkJCQkJ77yIZm9yIHRoZXkgd2VyZSBub3QgeWV0IHNraWxsZWQgaW4gb3JhdG9yee+8iSwgYnV0IG5vdyB3aGVuCgkJCQkJcmhldG9yaWMgaGFzIGRldmVsb3BlZCB0aGUgYWJsZSBzcGVha2VycyBhcmUgbGVhZGVycyBvZiB0aGUgcGVvcGxlLCBidXQgb3dpbmcgdG8KCQkJCQl0aGVpciBpbmV4cGVyaWVuY2UgaW4gbWlsaXRhcnkgbWF0dGVycyB0aGV5IGFyZSBub3QgcHV0IGluIGNvbnRyb2wgb2YgdGhlc2UsCgkJCQkJZXhjZXB0IGluIHNvIGZhciBhcyBzb21ldGhpbmcgb2YgdGhlIGtpbmQgaGFzIHRha2VuIHBsYWNlIHRvIGEgc21hbGwgZXh0ZW50IGluCgkJCQkJc29tZSBwbGFjZXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC41IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHR5cmFubmllcyBhbHNvIHVzZWQKCQkJCQl0byBvY2N1ciBpbiBmb3JtZXIgdGltZXMgbW9yZSB0aGFuIHRoZXkgZG8gbm93IGJlY2F1c2UgaW1wb3J0YW50IG9mZmljZXMgd2VyZQoJCQkJCWVudHJ1c3RlZCB0byBjZXJ0YWluIG1lbiwgYXMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNaWxldHVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNaWxldHVzIj5NaWxldHVzPC9wbGFjZU5hbWU+IGEgdHlyYW5ueTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzCgkJCQkJCXRoYXQgb2YgVGhyYXN5YnVsdXMg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGR0LiAxLjIwIiB2YWxpZD0ieWVzIj5IZHQuCgkJCQkJCTEuMjA8L2JpYmw+77yJLCA8ZGF0ZSBhdXRobmFtZT0iLTYxMiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTYxMiI+NjEyPC9kYXRlPiBCLkMuPC9ub3RlPiBhcm9zZSBvdXQKCQkJCQlvZiB0aGUgcHJlc2lkZW5jeSDvvIhmb3IgdGhlIHByZXNpZGVudCBoYWQgY29udHJvbCBvZiBtYW55IGltcG9ydGFudAoJCQkJCW1hdHRlcnPvvIkuIEFuZCBtb3Jlb3ZlciwgYmVjYXVzZSB0aGUgY2l0aWVzIGluIHRob3NlIHRpbWVzIHdlcmUgbm90CgkJCQkJbGFyZ2UgYnV0IHRoZSBjb21tb24gcGVvcGxlIGxpdmVkIG9uIHRoZWlyIGZhcm1zPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGR0LiAxLjIwIiB2YWxpZD0ieWVzIj5IZHQuCgkJCQkJCTEuMjA8L2JpYmw+77yJLCA8ZGF0ZSBhdXRobmFtZT0iLTYxMiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTYxMiI+NjEyPC9kYXRlPiBCLkMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmJ1c2lseSBlbmdhZ2VkIGluIGFncmljdWx0dXJlLCB0aGUgcGVvcGxlJ3MgY2hhbXBpb25zIHdoZW4gdGhleQoJCQkJCWJlY2FtZSB3YXJsaWtlIHVzZWQgdG8gYWltIGF0IHR5cmFubnkuIEFuZCB0aGV5IGFsbCB1c2VkIHRvIGRvIHRoaXMgd2hlbiB0aGV5CgkJCQkJaGFkIGFjcXVpcmVkIHRoZSBjb25maWRlbmNlIG9mIHRoZSBwZW9wbGUsIGFuZCB0aGVpciBwbGVkZ2Ugb2YgY29uZmlkZW5jZSB3YXMKCQkJCQl0aGVpciBlbm1pdHkgdG93YXJkcyB0aGUgcmljaCwgYXMgYXQgQXRoZW5zIFBpc2lzdHJhdHVzIG1hZGUgaGltc2VsZiB0eXJhbnQgYnkKCQkJCQlyYWlzaW5nIHVwIGEgcGFydHkgYWdhaW5zdCB0aGUgbWVuIG9mIHRoZSBwbGFpbiwgYW5kIFRoZWFnZW5lcyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1lZ2FyYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTWVnYXJhIj5NZWdhcmE8L3BsYWNlTmFtZT4gYnkgc2xhdWdodGVyaW5nIHRoZSBjYXR0bGUgb2YgdGhlCgkJCQkJd2VsbC10by1kbyB3aGljaCBoZSBjYXB0dXJlZCBncmF6aW5nIGJ5IHRoZSByaXZlciwgYW5kIERpb255c2l1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5EaW9ueXNpdXMgdGhlIGVsZGVyLCBzZWUgMTI1OWEgMjkgbi48L25vdGU+CgkJCQkJZXN0YWJsaXNoZWQgYSBjbGFpbSB0byBiZWNvbWUgdHlyYW50IHdoZW4gaGUgYWNjdXNlZCBEYXBobmFldXMgYW5kIHRoZSByaWNoLAoJCQkJCXNpbmNlIGhpcyBob3N0aWxpdHkgdG8gdGhlbSBjYXVzZWQgaGltIHRvIGJlIHRydXN0ZWQgYXMgYSB0cnVlIG1hbiBvZiB0aGUKCQkJCQlwZW9wbGUuIDwvdHJhbnNsYXRpb24+"
translation['5.1305b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC42IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHJldm9sdXRpb25zIGFsc28gdGFrZQoJCQkJCXBsYWNlIGZyb20gdGhlIGFuY2VzdHJhbCBmb3JtIG9mIGRlbW9jcmFjeSB0byBvbmUgb2YgdGhlIG1vc3QgbW9kZXJuIGtpbmQ7IGZvcgoJCQkJCXdoZXJlIHRoZSBtYWdpc3RyYWNpZXMgYXJlIGVsZWN0aXZlLCBidXQgbm90IG9uIHByb3BlcnR5LWFzc2Vzc21lbnRzLCBhbmQgdGhlCgkJCQkJcGVvcGxlIGVsZWN0LCBtZW4gYW1iaXRpb3VzIG9mIG9mZmljZSBieSBhY3RpbmcgYXMgcG9wdWxhciBsZWFkZXJzIGJyaW5nIHRoaW5ncwoJCQkJCXRvIHRoZSBwb2ludCBvZiB0aGUgcGVvcGxlJ3MgYmVpbmcgc292ZXJlaWduIGV2ZW4gb3ZlciB0aGUgbGF3cy4gQSByZW1lZHkgdG8KCQkJCQlwcmV2ZW50IHRoaXMgb3IgdG8gcmVkdWNlIGl0cyBleHRlbnQgaXMgZm9yIHRoZSB0cmliZXMgdG8gZWxlY3QgdGhlIG1hZ2lzdHJhdGVzLAoJCQkJCWFuZCBub3QgdGhlIHBlb3BsZSBjb2xsZWN0aXZlbHkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIHRoZW4gYXJlCgkJCQkJdGhlIGNhdXNlcyB0aHJvdWdoIHdoaWNoIGFsbW9zdCBhbGwgdGhlIHJldm9sdXRpb25zIGluIGRlbW9jcmFjaWVzIHRha2UKCQkJCQkJcGxhY2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T2xpZ2FyY2hpZXMgdW5kZXJnbyByZXZvbHV0aW9uIHByaW5jaXBhbGx5IHRocm91Z2ggdHdvIHdheXMKCQkJCQl0aGF0IGFyZSB0aGUgbW9zdCBvYnZpb3VzLiBPbmUgaXMgaWYgdGhleSB0cmVhdCB0aGUgbXVsdGl0dWRlIHVuanVzdGx5OyBmb3IKCQkJCQlhbnlib2R5IG1ha2VzIGFuIGFkZXF1YXRlIHBlb3BsZSdzIGNoYW1waW9uLCBhbmQgZXNwZWNpYWxseSBzbyB3aGVuIHRoZWlyIGxlYWRlcgoJCQkJCWhhcHBlbnMgdG8gY29tZSBmcm9tIHRoZSBvbGlnYXJjaHkgaXRzZWxmLCBsaWtlIEx5Z2RhbWlzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDUzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTIwNTMiPk5heG9zPC9wbGFjZU5hbWU+LCB3aG8gYWZ0ZXJ3YXJkcyBhY3R1YWxseSBiZWNhbWUgdHlyYW50CgkJCQkJb2YgdGhlIE5heGlhbnMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzA1YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1305b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['5.1305b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+RmFjdGlvbgoJCQkJCW9yaWdpbmF0aW5nIHdpdGggb3RoZXIgcGVvcGxlIGFsc28gaGFzIHZhcmlvdXMgd2F5cyBvZiBhcmlzaW5nLiBTb21ldGltZXMgd2hlbgoJCQkJCXRoZSBob25vcnMgb2Ygb2ZmaWNlIGFyZSBzaGFyZWQgYnkgdmVyeSBmZXcsIGRpc3NvbHV0aW9uIG9yaWdpbmF0ZXMgZnJvbSB0aGUKCQkJCQl3ZWFsdGh5IHRoZW1zZWx2ZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBjb250cmFzdGVkIGNhc2UsIG9mCgkJCQkJCWRpc3NvbHV0aW9uIG9mIG9saWdhcmNoeSBhcmlzaW5nIGZyb20gdGhlIHBlb3BsZSwgc2hvdWxkIGZvbGxvdywgYnV0IGlzCgkJCQkJCW9taXR0ZWQuPC9ub3RlPiBidXQgbm90IHRob3NlIHRoYXQgYXJlIGluIG9mZmljZSwgYXMgZm9yIGV4YW1wbGUgaGFzCgkJCQkJb2NjdXJyZWQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDg3ODEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwODc4MSI+TWFyc2VpbGxlczwvcGxhY2VOYW1lPiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Q2YuIDEzMjFhIDI5IGZmLjwvbm90ZT4gYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDI3OTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwMjc5NiI+SXN0cnVzPC9wbGFjZU5hbWU+LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5OZWFyIHRoZSBtb3V0aCBvZiB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTI5MTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjkxMyI+RGFudWJlPC9wbGFjZU5hbWU+Ljwvbm90ZT4gYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTI5MTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjkxMyI+RGFudWJlPC9wbGFjZU5hbWU+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA4Mjk5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDgyOTkiPkhlcmFjbGVhPC9wbGFjZU5hbWU+LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTMwNGIgMzEKCQkJCQkJbi48L25vdGU+IGFuZCBpbiBvdGhlciBzdGF0ZXM7IGZvciB0aG9zZSB3aG8gZGlkIG5vdCBzaGFyZSBpbiB0aGUKCQkJCQltYWdpc3RyYWNpZXMgcmFpc2VkIGRpc3R1cmJhbmNlcyB1bnRpbCBhcyBhIGZpcnN0IHN0YWdlIHRoZSBvbGRlciBicm90aGVycyB3ZXJlCgkJCQkJYWRtaXR0ZWQsIGFuZCBsYXRlciB0aGUgeW91bmdlciBvbmVzIGFnYWluIO+8iGZvciBpbiBzb21lIHBsYWNlcyBhIGZhdGhlcgoJCQkJCWFuZCBhIHNvbiBtYXkgbm90IGhvbGQgb2ZmaWNlIHRvZ2V0aGVyLCBhbmQgaW4gb3RoZXJzIGFuIGVsZGVyIGFuZCBhIHlvdW5nZXIKCQkJCQlicm90aGVyIG1heSBub3TvvIkuIEF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA4NzgxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDg3ODEiPk1hcnNlaWxsZXM8L3BsYWNlTmFtZT4gdGhlIG9saWdhcmNoeSBiZWNhbWUgbW9yZSBjb25zdGl0dXRpb25hbCwgd2hpbGUgYXQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDI3OTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwMjc5NiI+SXN0cnVzPC9wbGFjZU5hbWU+IGl0IGVuZGVkIGluIGJlY29taW5nCgkJCQkJZGVtb2NyYWN5LCBhbmQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDgyOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwODI5OSI+SGVyYWNsZWE8L3BsYWNlTmFtZT4gdGhlCgkJCQkJZ292ZXJubWVudCBwYXNzZWQgZnJvbSBhIHNtYWxsZXIgbnVtYmVyIHRvIHNpeCBodW5kcmVkLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw1MDAzNzU3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDUwMDM3NTciPkNuaWR1czwvcGxhY2VOYW1lPgoJCQkJCWFsc28gdGhlcmUgd2FzIGEgcmV2b2x1dGlvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIG5vdCB0aGUKCQkJCQkJc2FtZSBhcyB0aGUgb25lIG1lbnRpb25lZCBhdCAxMzA2YiAzLjwvbm90ZT4gb2YgdGhlIG9saWdhcmNoeSBjYXVzZWQgYnkgYQoJCQkJCWZhY3Rpb24gZm9ybWVkIGJ5IHRoZSBub3RhYmxlcyBhZ2FpbnN0IG9uZSBhbm90aGVyLCBiZWNhdXNlIGZldyBzaGFyZWQgaW4gdGhlCgkJCQkJZ292ZXJubWVudCwgYW5kIHRoZSBydWxlIHN0YXRlZCBoZWxkLCB0aGF0IGlmIGEgZmF0aGVyIHdhcyBhIG1lbWJlciBhIHNvbiBjb3VsZAoJCQkJCW5vdCBiZSwgbm9yIGlmIHRoZXJlIHdlcmUgc2V2ZXJhbCBicm90aGVycyBjb3VsZCBhbnkgZXhjZXB0IHRoZSBlbGRlc3Q7IGZvciB0aGUKCQkJCQljb21tb24gcGVvcGxlIHNlaXplZCB0aGUgb3Bwb3J0dW5pdHkgb2YgdGhlaXIgcXVhcnJlbCBhbmQsIHRha2luZyBhIGNoYW1waW9uCgkJCQkJZnJvbSBhbW9uZyB0aGUgbm90YWJsZXMsIGZlbGwgdXBvbiB0aGVtIGFuZCBjb25xdWVyZWQgdGhlbSwgZm9yIGEgcGFydHkgZGl2aWRlZAoJCQkJCWFnYWluc3QgaXRzZWxmIGlzIHdlYWsuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5vdGhlciBjYXNlCgkJCQkJd2FzIGF0IEVyeXRocmFlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5KdXN0IHdlc3Qgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTbXlybmEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNteXJuYSI+U215cm5hPC9wbGFjZU5hbWU+LiBUaGUgZmFtaWx5IG5hbWUgaW1wbGllcyBhIGNsYWltCgkJCQkJCXRvIHJveWFsIGFuY2VzdHJ5Ljwvbm90ZT4gd2hlcmUgYXQgdGhlIHRpbWUgb2YgdGhlIG9saWdhcmNoeSBvZiB0aGUKCQkJCQlCYXNpbGlkYWUgaW4gYW5jaWVudCBkYXlzLCBhbHRob3VnaDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU215cm5hIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTbXlybmEiPlNteXJuYTwvcGxhY2VOYW1lPi4gVGhlIGZhbWlseSBuYW1lIGltcGxpZXMgYSBjbGFpbQoJCQkJCQl0byByb3lhbCBhbmNlc3RyeS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIHBlcnNvbnMgaW4gdGhlIGdvdmVybm1lbnQgZGlyZWN0ZWQgYWZmYWlycyB3ZWxsLCBuZXZlcnRoZWxlc3MgdGhlIGNvbW1vbgoJCQkJCXBlb3BsZSB3ZXJlIHJlc2VudGZ1bCBiZWNhdXNlIHRoZXkgd2VyZSBnb3Zlcm5lZCBieSBhIGZldywgYW5kIGJyb3VnaHQgYWJvdXQgYQoJCQkJCXJldm9sdXRpb24gb2YgdGhlIGNvbnN0aXR1dGlvbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhlIG90aGVyIGhhbmQsCgkJCQkJb2xpZ2FyY2hpZXMgYXJlIG92ZXJ0aHJvd24gZnJvbSB3aXRoaW4gdGhlbXNlbHZlcyBib3RoPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgc2VudGVuY2UgaXMgaW50ZXJydXB0ZWQgYnkgYSBwYXJlbnRoZXNpcyBhbmQgaXMgcmVzdW1lZAoJCQkJCQlpbiA1LjYsIOKAmEFuZCByZXZvbHV0aW9uIGlzIG9saWdhcmNoeQoJCQkJCQlhbHNv4oCU4oCZLjwvbm90ZT4gd2hlbiBmcm9tIG1vdGl2ZXMgb2Ygcml2YWxyeSB0aGV5IHBsYXkKCQkJCQl0aGUgZGVtYWdvZ3VlIO+8iGFuZCB0aGlzIGRlbWFnb2d5IGlzIG9mIHR3byBzb3J0cywgb25lIGFtb25nIHRoZQoJCQkJCW9saWdhcmNocyB0aGVtc2VsdmVzLCBmb3IgYSBkZW1hZ29ndWUgY2FuIGFyaXNlIGFtb25nIHRoZW0gZXZlbiB3aGVuIHRoZXkgYXJlIGEKCQkJCQl2ZXJ5IHNtYWxsIGJvZHks4oCUYXMgZm9yIGluc3RhbmNlIGluIHRoZSB0aW1lIG9mIHRoZSBUaGlydHkgYXQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB0aGUgcGFydHkgb2YgQ2hhcmljbGVzCgkJCQkJcm9zZSB0byBwb3dlciBieSBjdXJyeWluZyBwb3B1bGFyaXR5IHdpdGggdGhlIFRoaXJ0eSwgYW5kIGluIHRoZSB0aW1lIG9mIHRoZQoJCQkJCUZvdXIgSHVuZHJlZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTMwNGIgMTIgbi48L25vdGU+IHRoZSBwYXJ0eQoJCQkJCW9mIFBocnluaWNodXMgcm9zZSBpbiB0aGUgc2FtZSB3YXks4oCUPC90cmFuc2xhdGlvbj4="
translation['5.1306a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS41IiB1bml0PSJMb2ViIGNoYXAiIC8+dGhlIG90aGVyIHdoZW4gdGhlIG1lbWJlcnMgb2YgdGhlIG9saWdhcmNoeSBjdXJyeQoJCQkJCXBvcHVsYXJpdHkgd2l0aCB0aGUgbW9iLCBhcyB0aGUgQ2l2aWMgR3VhcmRzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEwODk0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTA4OTQiPkxhcmlzYTwvcGxhY2VOYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTI3NWIgMjkKCQkJCQkJbi48L25vdGU+IGNvdXJ0ZWQgcG9wdWxhcml0eSB3aXRoIHRoZSBtb2IgYmVjYXVzZSBpdCBlbGVjdGVkIHRoZW0sIGFuZCBpbgoJCQkJCWFsbCB0aGUgb2xpZ2FyY2hpZXMgaW4gd2hpY2ggdGhlIG1hZ2lzdHJhY2llcyBhcmUgbm90IGVsZWN0ZWQgYnkgdGhlIGNsYXNzIGZyb20KCQkJCQl3aGljaCB0aGUgbWFnaXN0cmF0ZXMgY29tZSBidXQgYXJlIGZpbGxlZCBmcm9tIGhpZ2ggcHJvcGVydHktZ3JhZGVzIG9yIGZyb20KCQkJCQlwb2xpdGljYWwgY2x1YnMgd2hpbGUgdGhlIGVsZWN0b3JzIGFyZSB0aGUgaGVhdnktYXJtZWQgc29sZGllcnMgb3IgdGhlIGNvbW1vbgoJCQkJCXBlb3BsZSwgYXMgdXNlZCB0byBiZSB0aGUgY2FzZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMDAzMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAwMDMwIj5BYnlkb3M8L3BsYWNlTmFtZT4sIGFuZCBpbiBwbGFjZXMgd2hlcmUgdGhlIGp1cnktY291cnRzIGFyZSBub3QgbWFkZSB1cAoJCQkJCWZyb20gdGhlIGdvdmVybm1lbnQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLgoJCQkJCQnvvIhhcHBhcmVudGx577yJIHdoZXJlIG1lbWJlcnNoaXAgaXMgbm90IGNvbmZpbmVkIHRvIHRoZSBjbGFzcwoJCQkJCQllbGlnaWJsZSBmb3IgdGhlIG1hZ2lzdHJhY2llcy48L25vdGU+4oCUZm9yIHRoZXJlIG1lbWJlcnMgb2YgdGhlCgkJCQkJb2xpZ2FyY2h5IGJ5IGNvdXJ0aW5nIHBvcHVsYXIgZmF2b3Igd2l0aCBhIHZpZXcgdG8gdGhlaXIgdHJpYWxzIGNhdXNlIGEKCQkJCQlyZXZvbHV0aW9uIG9mIHRoZSBjb25zdGl0dXRpb24sIGFzIHRvb2sgcGxhY2UgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDgyOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwODI5OSI+SGVyYWNsZWE8L3BsYWNlTmFtZT4gb24gdGhlIEV1eGluZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUKCQkJCQkJMTMwNGIgMzEgbi48L25vdGU+OyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBhCgkJCQkJZnVydGhlciBpbnN0YW5jZSBpcyB3aGVuIHNvbWUgbWVuIHRyeSB0byBuYXJyb3cgZG93biB0aGUgb2xpZ2FyY2h5IHRvIGEgc21hbGxlcgoJCQkJCW51bWJlciwgZm9yIHRob3NlIHdobyBzZWVrIGVxdWFsaXR5IGFyZSBmb3JjZWQgdG8gYnJpbmcgaW4gdGhlIHBlb3BsZSBhcyBhCgkJCQkJaGVscGVyLu+8iSBBbmQgcmV2b2x1dGlvbnMgaW4gb2xpZ2FyY2h5IGFsc28gdGFrZSBwbGFjZSB3aGVuIHRoZXkKCQkJCQlzcXVhbmRlciB0aGVpciBwcml2YXRlIG1lYW5zIGJ5IHJpb3RvdXMgbGl2aW5nOyBmb3IgYWxzbyBtZW4gb2YgdGhpcyBzb3J0IHNlZWsKCQkJCQl0byBicmluZyBhYm91dCBhIG5ldyBzdGF0ZSBvZiBhZmZhaXJzLCBhbmQgZWl0aGVyIGFpbSBhdCB0eXJhbm55IHRoZW1zZWx2ZXMgb3IKCQkJCQlzdWJvcm4gc29tZWJvZHkgZWxzZSA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMwNmEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['5.1306a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPu+8iGFzIEhpcHBhcmludXMgcHV0IGZvcndhcmQgRGlvbnlzaXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMjU5YSAyOSBuLjwvbm90ZT4gYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3lyYWN1c2UiPlN5cmFjdXNlPC9wbGFjZU5hbWU+LCBhbmQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBbXBoaXBvbGlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBbXBoaXBvbGlzIj5BbXBoaXBvbGlzPC9wbGFjZU5hbWU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMzAzYiAyIG4uPC9ub3RlPiBhIG1hbiBuYW1lZCBDbGVvdGltdXMgbGVkIHRoZQoJCQkJCWFkZGl0aW9uYWwgc2V0dGxlcnMgdGhhdCBjYW1lIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDaGFsY2lzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDaGFsY2lzIj5DaGFsY2lzPC9wbGFjZU5hbWU+IGFuZCBvbiB0aGVpciBhcnJpdmFsIHN0aXJyZWQgdGhlbSB1cCB0byBzZWRpdGlvbgoJCQkJCWFnYWluc3QgdGhlIHdlYWx0aHksIGFuZCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTA4NyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMDg3Ij5BZWdpbmE8L3BsYWNlTmFtZT4gdGhlCgkJCQkJbWFuIHdobyBjYXJyaWVkIG91dCB0aGUgdHJhbnNhY3Rpb25zIHdpdGggQ2hhcmVzIGF0dGVtcHRlZCB0byBjYXVzZSBhIHJldm9sdXRpb24KCQkJCQlpbiB0aGUgY29uc3RpdHV0aW9uIGZvciBhIHJlYXNvbiBvZiB0aGlzIHNvcnQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBoZSBoYWQgc3F1YW5kZXJlZCBoaXMgZm9ydHVuZSBpbiByaW90b3VzIGxpdmluZzsgdGhpcyBkZWFsIHdpdGggdGhlCgkJCQkJCUF0aGVuaWFuIGdlbmVyYWwgbWF5IGhhdmUgYmVlbiBpbiA8ZGF0ZSBhdXRobmFtZT0iLTM2NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NyI+MzY3PC9kYXRlPgoJCQkJCUIuQy48L25vdGU+77yJOyA8ZGF0ZSBhdXRobmFtZT0iLTM2NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NyI+MzY3PC9kYXRlPgoJCQkJCUIuQy48L3RyYW5zbGF0aW9uPg=="
translation['5.1306a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS43IiB1bml0PSJMb2ViIGNoYXAiIC8+c28gc29tZXRpbWVzCgkJCQkJdGhleSBhdHRlbXB0IGF0IG9uY2UgdG8gaW50cm9kdWNlIHNvbWUgcmVmb3JtLCBhdCBvdGhlciB0aW1lcyB0aGV5IHJvYiB0aGUKCQkJCQlwdWJsaWMgZnVuZHMgYW5kIGluIGNvbnNlcXVlbmNlIGVpdGhlciB0aGV5IG9yIHRob3NlIHdobyBmaWdodCBhZ2FpbnN0IHRoZW0gaW4KCQkJCQl0aGVpciBwZWN1bGF0aW9ucyBzdGlyIHVwIGZhY3Rpb24gYWdhaW5zdCB0aGUgZ292ZXJubWVudCwgYXMgaGFwcGVuZWQgYXQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBcG9sbG9uaWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFwb2xsb25pYSI+QXBvbGxvbmlhPC9wbGFjZU5hbWU+IG9uIHRoZSBCbGFjayBTZWEuCgkJCQkJT24gdGhlIG90aGVyIGhhbmQsIGhhcm1vbmlvdXMgb2xpZ2FyY2h5IGRvZXMgbm90IGVhc2lseSBjYXVzZSBpdHMgb3duCgkJCQkJZGVzdHJ1Y3Rpb247IGFuZCBhbiBpbmRpY2F0aW9uIG9mIHRoaXMgaXMgdGhlIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQgYXQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTA3OTciIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMDc5NyI+UGhhcnNhbHVzPC9wbGFjZU5hbWU+LCBmb3IgdGhlcmUgdGhlIHJ1bGluZwoJCQkJCWNsYXNzIHRob3VnaCBmZXcgYXJlIG1hc3RlcnMgb2YgbWFueSBtZW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLgoJCQkJCQlib3RoIG9mIHRoZSBsb3dlciBjbGFzc2VzIGFuZCBvZiB0aGUgc3ViamVjdCBjaXRpZXMuPC9ub3RlPiBiZWNhdXNlIG9uIGdvb2QKCQkJCQl0ZXJtcyB3aXRoIG9uZSBhbm90aGVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFsc28KCQkJCQlvbGlnYXJjaGljYWwgZ292ZXJubWVudHMgYnJlYWsgdXAgd2hlbiB0aGV5IGNyZWF0ZSBhIHNlY29uZCBvbGlnYXJjaHkgd2l0aGluIHRoZQoJCQkJCW9saWdhcmNoeS4gVGhpcyBpcyB3aGVuLCBhbHRob3VnaCB0aGUgd2hvbGUgY2l0aXplbiBjbGFzcyBpcyBzbWFsbCwgaXRzIGZldwoJCQkJCW1lbWJlcnMgYXJlIG5vdCBhbGwgYWRtaXR0ZWQgdG8gdGhlIGdyZWF0ZXN0IG9mZmljZXM7IHRoaXMgaXMgd2hhdCBvbmNlIG9jY3VycmVkCgkJCQkJaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxFbGlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxFbGlzIj5FbGlzPC9wbGFjZU5hbWU+LCBmb3IgdGhlIGdvdmVybm1lbnQgYmVpbmcgaW4KCQkJCQl0aGUgaGFuZHMgb2YgYSBmZXcsIHZlcnkgZmV3IG1lbiB1c2VkIHRvIGJlY29tZSBtZW1iZXJzIG9mIHRoZSBFbGRlcnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIHNtYWxsIGdvdmVybmluZyBib2R5Ljwvbm90ZT4gYmVjYXVzZQoJCQkJCXRoZXNlIG51bWJlcmluZyBuaW5ldHkgaGVsZCBvZmZpY2UgZm9yIGxpZmUsIGFuZCB0aGUgbW9kZSBvZiBlbGVjdGlvbiB3YXMgb2YgYQoJCQkJCWR5bmFzdGljIHR5cGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBsaWtlIGEKCQkJCQkJCTxlbXBoIGNsYXNzPSJ0cmFuc2xhdGlvbiI+ZHluYXN0ZWlhPC9lbXBoPiwgZmF2b3JhYmxlIHRvIHRoZSBpbnRlcmVzdCBvZiBhIGZldyB2ZXJ5IHdlYWx0aHkKCQkJCQkJZmFtaWxpZXM7IHNlZSAxMjkyYiAxMCBuLjwvbm90ZT4gYW5kIHJlc2VtYmxlZCB0aGF0IG9mIHRoZSBFbGRlcnMgYXQKCQkJCQkJPGVtcGggY2xhc3M9InRyYW5zbGF0aW9uIj5keW5hc3RlaWE8L2VtcGg+LCBmYXZvcmFibGUgdG8gdGhlIGludGVyZXN0IG9mIGEgZmV3IHZlcnkgd2VhbHRoeQoJCQkJCQlmYW1pbGllczsgc2VlIDEyOTJiIDEwIG4uPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS45IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlJldm9sdXRpb25zPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm9mIG9saWdhcmNoaWVzIG9jY3VyIGJvdGggZHVyaW5nIHdhciBhbmQgaW4KCQkJCQl0aW1lIG9mIHBlYWNl4oCUIGR1cmluZyB3YXIgc2luY2UgdGhlIG9saWdhcmNocyBhcmUgZm9yY2VkIGJ5IHRoZWlyCgkJCQkJZGlzdHJ1c3Qgb2YgdGhlIHBlb3BsZSB0byBlbXBsb3kgbWVyY2VuYXJ5IHRyb29wcyDvvIhmb3IgdGhlIG1hbiBpbiB3aG9zZQoJCQkJCWhhbmRzIHRoZXkgcGxhY2UgdGhlbSBvZnRlbiBiZWNvbWVzIHR5cmFudCwgYXMgVGltb3BoYW5lcyBkaWQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb3JpbnRoIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDb3JpbnRoIj5Db3JpbnRoPC9wbGFjZU5hbWU+LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENvcmludGgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLENvcmludGgiPkNvcmludGg8L3BsYWNlTmFtZT4gd2FzIGF0CgkJCQkJCXdhciB3aXRoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXJnb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFyZ29zIj5BcmdvczwvcGxhY2VOYW1lPiBjaXJjYSA8ZGF0ZSBhdXRobmFtZT0iLTM1MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM1MCI+MzUwPC9kYXRlPiBCLkMuIFRpbW9waGFuZXMgd2FzIGtpbGxlZCBieSBoaXMgYnJvdGhlciB0aGUKCQkJCQkJZmFtb3VzIFRpbW9sZW9uLCBpbiBvcmRlciB0byByZXN0b3JlIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQuPC9ub3RlPiBhbmQKCQkJCQlpZiB0aGV5IHB1dCBzZXZlcmFsIG1lbiBpbiBjb21tYW5kLCB0aGVzZSB3aW4gZm9yIHRoZW1zZWx2ZXMgZHluYXN0aWMKCQkJCQlwb3dlcu+8iSwgYW5kIHdoZW4gdGhyb3VnaCBmZWFyIG9mIHRoaXMgdGhleSBnaXZlIGEgc2hhcmUgaW4gdGhlCgkJCQkJY29uc3RpdHV0aW9uIHRvIHRoZSBtdWx0aXR1ZGUsIHRoZSBvbGlnYXJjaHkgZmFsbHMgYmVjYXVzZSB0aGV5IGFyZSBjb21wZWxsZWQgdG8KCQkJCQltYWtlIHVzZSBvZiB0aGUgY29tbW9uIHBlb3BsZTsgZHVyaW5nIHBlYWNlLCBvbiB0aGUgb3RoZXIgaGFuZCwgYmVjYXVzZSBvZiB0aGVpcgoJCQkJCWRpc3RydXN0IG9mIG9uZSBhbm90aGVyIHRoZXkgcGxhY2UgdGhlaXIgcHJvdGVjdGlvbiBpbiB0aGUgaGFuZHMgb2YgbWVyY2VuYXJ5CgkJCQkJdHJvb3BzIGFuZCBhIG1hZ2lzdHJhdGUgYmV0d2VlbiB0aGUgdHdvIHBhcnRpZXMsIHdobyBzb21ldGltZXMgYmVjb21lcyBtYXN0ZXIgb2YKCQkJCQlib3RoLCB3aGljaCBoYXBwZW5lZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENvcmludGgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLENvcmludGgiPkNvcmludGg8L3BsYWNlTmFtZT4gd2FzIGF0CgkJCQkJCXdhciB3aXRoIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXJnb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFyZ29zIj5BcmdvczwvcGxhY2VOYW1lPiBjaXJjYSA8ZGF0ZSBhdXRobmFtZT0iLTM1MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM1MCI+MzUwPC9kYXRlPiBCLkMuIFRpbW9waGFuZXMgd2FzIGtpbGxlZCBieSBoaXMgYnJvdGhlciB0aGUKCQkJCQkJZmFtb3VzIFRpbW9sZW9uLCBpbiBvcmRlciB0byByZXN0b3JlIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQuPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTA4OTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMDg5NCI+TGFyaXNhPC9wbGFjZU5hbWU+IGluIHRoZQoJCQkJCXRpbWUgb2YgdGhlIGdvdmVybm1lbnQgb2YgdGhlIEFsZXVhZGFlIGxlZCBieSBTaW11cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBwcm9iYWJsZSBlbWVuZGF0aW9uIG9mIHRoZSBHcmVlayBnaXZlcyDigJhoYXBwZW5lZAoJCQkJCQlhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMDg5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEwODk0Ij5MYXJpc2E8L3BsYWNlTmFtZT4gdG8gU2ltdXMgYW5kIGhpcyBwYXJ0eSBhdAoJCQkJCQl0aGUgdGltZSBvZiB0aGUgZ292ZXJubWVudCBvZiB0aGUgQWxldWFkYWUu4oCZIFRoaXMgZmFtaWx5IHdlcmUKCQkJCQkJaGVyZWRpdGFyeSBydWxlcnMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTA4OTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMDg5NCI+TGFyaXNhPC9wbGFjZU5hbWU+CgkJCQkJCe+8iHNlZSBhbHNvIDEyNzViIDI5IGZmLiBuLiwgYW5kIDEzMDViIDI5IGZmLu+8iTwvbm90ZT4gYW5kIGF0CgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEwODk0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTA4OTQiPkxhcmlzYTwvcGxhY2VOYW1lPiB0byBTaW11cyBhbmQgaGlzIHBhcnR5IGF0CgkJCQkJCXRoZSB0aW1lIG9mIHRoZSBnb3Zlcm5tZW50IG9mIHRoZSBBbGV1YWRhZS7igJkgVGhpcyBmYW1pbHkgd2VyZQoJCQkJCQloZXJlZGl0YXJ5IHJ1bGVycyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMDg5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEwODk0Ij5MYXJpc2E8L3BsYWNlTmFtZT4KCQkJCQkJ77yIc2VlIGFsc28gMTI3NWIgMjkgZmYuIG4uLCBhbmQgMTMwNWIgMjkgZmYu77yJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDAwMzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwMDAzMCI+QWJ5ZG9zPC9wbGFjZU5hbWU+IGluIHRoZSB0aW1lIG9mIHRoZSBwb2xpdGljYWwKCQkJCQljbHVicyBvZiB3aGljaCB0aGF0IG9mIElwaGlhZGVzIHdhcyBvbmUuIDwvdHJhbnNsYXRpb24+"
translation['5.1306b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBmYWN0aW9ucyBhcmlzZSBhbHNvIGluIGNvbnNlcXVlbmNlIG9mIG9uZSBzZXQgb2YgdGhlCgkJCQkJbWVtYmVycyBvZiB0aGUgb2xpZ2FyY2h5IHRoZW1zZWx2ZXMgYmVpbmcgcHVzaGVkIGFzaWRlIGJ5IGFub3RoZXIgc2V0IGFuZCBiZWluZwoJCQkJCWRyaXZlbiBpbnRvIHBhcnR5IHN0cmlmZSBpbiByZWdhcmQgdG8gbWFycmlhZ2VzIG9yIGxhdy1zdWl0czsgZXhhbXBsZXMgb2Ygc3VjaAoJCQkJCWRpc29yZGVycyBhcmlzaW5nIG91dCBvZiBhIGNhdXNlIHJlbGF0ZWQgdG8gbWFycmlhZ2UgYXJlIHRoZSBpbnN0YW5jZXMgc3Bva2VuIG9mCgkJCQkJYmVmb3JlLCBhbmQgYWxzbyB0aGUgb2xpZ2FyY2h5IG9mIHRoZSBrbmlnaHRzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRXJldHJpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRXJldHJpYSI+RXJldHJpYTwvcGxhY2VOYW1lPiB3YXMgcHV0IGRvd248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UG9zc2libHkgYmVmb3JlIHRoZSBQZXJzaWFuIHdhcnMuIFNlZSAxMjg5YiAzNiBmZi4gVGhlIHR3bwoJCQkJCQlmb2xsb3dpbmcgY2FzZXMgYXJlIHVucmVjb3JkZWQgZWxzZXdoZXJlLjwvbm90ZT4gYnkgRGlhZ29yYXMgd2hlbiBoZSBoYWQKCQkJCQliZWVuIHdyb25nZWQgaW4gcmVzcGVjdCBvZiBhIG1hcnJpYWdlLCB3aGlsZSB0aGUgZmFjdGlvbiBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwODI5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA4Mjk5Ij5IZXJhY2xlYTwvcGxhY2VOYW1lPiBhbmQgdGhhdCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZWJlcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGhlYmVzIj5UaGViZXM8L3BsYWNlTmFtZT4gYXJvc2Ugb3V0IG9mIGEganVkZ2VtZW50IG9mIGEKCQkJCQlsYXctY291cnQsIHdoZW4gdGhlIHBlb3BsZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwODI5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA4Mjk5Ij5IZXJhY2xlYTwvcGxhY2VOYW1lPgoJCQkJCWp1c3RseSBidXQgZmFjdGlvdXNseSBlbmZvcmNlZCB0aGUgcHVuaXNobWVudCBhZ2FpbnN0IEV1cnl0aW9uIG9uIGEgY2hhcmdlIG9mCgkJCQkJYWR1bHRlcnkgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMDZiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['5.1306b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aG9zZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZWJlcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGhlYmVzIj5UaGViZXM8L3BsYWNlTmFtZT4KCQkJCQlkaWQgc28gYWdhaW5zdCBBcmNoaWFzOyBmb3IgdGhlaXIgcGVyc29uYWwgZW5lbWllcyBzdGlycmVkIHVwIHBhcnR5IGZlZWxpbmcKCQkJCQlhZ2FpbnN0IHRoZW0gc28gYXMgdG8gZ2V0IHRoZW0gYm91bmQgaW4gdGhlIHBpbGxvcnkgaW4gdGhlIG1hcmtldC1wbGFjZS4KCQkJCQkJPC90cmFuc2xhdGlvbj4="
translation['5.1306b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFsc28gbWFueSBnb3Zlcm5tZW50cyBoYXZlIGJlZW4KCQkJCQlwdXQgZG93biBieSBzb21lIG9mIHRoZWlyIG1lbWJlcnMgd2hvIGhhZCBiZWNvbWUgcmVzZW50ZnVsIGJlY2F1c2UgdGhlCgkJCQkJb2xpZ2FyY2hpZXMgd2VyZSB0b28gZGVzcG90aWM7IHRoaXMgaXMgaG93IHRoZSBvbGlnYXJjaGllcyBmZWxsIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw1MDAzNzU3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDUwMDM3NTciPkNuaWR1czwvcGxhY2VOYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUKCQkJCQkJMTMwNWIgMTMgbi48L25vdGU+IGFuZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjY3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjcwIj5DaGlvczwvcGxhY2VOYW1lPi4KCQkJCQlBbmQgcmV2b2x1dGlvbnMgYWxzbyBvY2N1ciBmcm9tIGFuIGFjY2lkZW50LCBib3RoIGluIHdoYXQgaXMgY2FsbGVkIGEKCQkJCQljb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50IGFuZCBpbiB0aG9zZSBvbGlnYXJjaGllcyBpbiB3aGljaCBtZW1iZXJzaGlwIG9mIHRoZQoJCQkJCWNvdW5jaWwgYW5kIHRoZSBsYXctY291cnRzIGFuZCB0ZW51cmUgb2YgdGhlIG90aGVyIG9mZmljZXMgYXJlIGJhc2VkIG9uIGEKCQkJCQlwcm9wZXJ0eS1xdWFsaWZpY2F0aW9uLiBGb3Igb2Z0ZW4gdGhlIHF1YWxpZmljYXRpb24gZmlyc3QgaGF2aW5nIGJlZW4gZml4ZWQgdG8KCQkJCQlzdWl0IHRoZSBjaXJjdW1zdGFuY2VzIG9mIHRoZSB0aW1lLCBzbyB0aGF0IGluIGFuIG9saWdhcmNoeSBhIGZldyBtYXkgYmUgbWVtYmVycwoJCQkJCWFuZCBpbiBhIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQgdGhlIG1pZGRsZSBjbGFzc2VzLCB3aGVuIHBlYWNlIG9yIHNvbWUgb3RoZXIKCQkJCQlnb29kIGZvcnR1bmUgbGVhZHMgdG8gYSBnb29kIGhhcnZlc3QgaXQgY29tZXMgYWJvdXQgdGhhdCB0aGUgc2FtZSBwcm9wZXJ0aWVzCgkJCQkJYmVjb21lIHdvcnRoIG1hbnkgdGltZXMgYXMgbGFyZ2UgYW4gYXNzZXNzbWVudCwgc28gdGhhdCBhbGwgdGhlIGNpdGl6ZW5zIHNoYXJlCgkJCQkJaW4gYWxsIHRoZSByaWdodHMsIHRoZSBjaGFuZ2Ugc29tZXRpbWVzIHRha2luZyBwbGFjZSBncmFkdWFsbHkgYW5kIGxpdHRsZSBieQoJCQkJCWxpdHRsZSBhbmQgbm90IGJlaW5nIG5vdGljZWQsIGJ1dCBhdCBvdGhlciB0aW1lcyBtb3JlIHF1aWNrbHkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlN1Y2ggdGhlbgoJCQkJCWFyZSB0aGUgY2F1c2VzIHRoYXQgbGVhZCB0byByZXZvbHV0aW9ucyBhbmQgZmFjdGlvbnMgaW4gb2xpZ2FyY2hpZXMKCQkJCQnvvIhhbmQgZ2VuZXJhbGx5LCBib3RoIGRlbW9jcmFjaWVzIGFuZCBvbGlnYXJjaGllcyBhcmUgc29tZXRpbWVzIGFsdGVyZWQKCQkJCQlub3QgaW50byB0aGUgb3Bwb3NpdGUgZm9ybXMgb2YgY29uc3RpdHV0aW9uIGJ1dCBpbnRvIG9uZXMgb2YgdGhlIHNhbWUgY2xhc3MsIGZvcgoJCQkJCQlpbnN0YW5jZTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mcm9tIGxlZ2l0aW1hdGUKCQkJCQlkZW1vY3JhY2llcyBhbmQgb2xpZ2FyY2hpZXMgaW50byBhdXRvY3JhdGljIG9uZXMgYW5kIGZyb20gdGhlIGxhdHRlciBpbnRvIHRoZQoJCQkJCQlmb3JtZXLvvIkuPC90cmFuc2xhdGlvbj4="
translation['5.1307a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluIGFyaXN0b2NyYWNpZXMgZmFjdGlvbnMgYXJpc2UgaW4gc29tZSBjYXNlcyBiZWNhdXNlCgkJCQkJZmV3IG1lbiBzaGFyZSBpbiB0aGUgaG9ub3JzIO+8iHdoaWNoIGhhcyBhbHNvIGJlZW4gc2FpZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTMwNmEgMTMgZmYuPC9ub3RlPiB0byBiZSB0aGUgY2F1c2Ugb2YKCQkJCQlkaXN0dXJiYW5jZXMgaW4gb2xpZ2FyY2hpZXMsIGJlY2F1c2UgYW4gYXJpc3RvY3JhY3kgdG9vIGlzIGEgc29ydCBvZiBvbGlnYXJjaHksCgkJCQkJZm9yIGluIGJvdGggdGhvc2Ugd2hvIGdvdmVybiBhcmUgZmV34oCUYWx0aG91Z2ggdGhlIHJlYXNvbiBmb3IgdGhpcyBpcwoJCQkJCW5vdCB0aGUgc2FtZSBpbiBib3Ro4oCUc2luY2UgdGhpcyBkb2VzIGNhdXNlIGl0IHRvIGJlIHRob3VnaHQgdGhhdAoJCQkJCWFyaXN0b2NyYWN5IGlzIGEgZm9ybSBvZiBvbGlnYXJjaHnvvIkuIEFuZCB0aGlzIGlzIG1vc3QgYm91bmQgdG8gY29tZQoJCQkJCWFib3V0IHdoZW4gdGhlcmUgaXMgYSBjb25zaWRlcmFibGUgbnVtYmVyIG9mIHBlb3BsZSB3aG8gYXJlIHByb3VkLXNwaXJpdGVkIG9uCgkJCQkJdGhlIGdyb3VuZCBvZiBiZWluZyBlcXVhbHMgaW4gdmlydHVlIO+8iGZvciBleGFtcGxlIHRoZSBjbGFuIGNhbGxlZCB0aGUKCQkJCQlNYWlkZW5zJyBTb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNhaWQgdG8gYmUgZGVzY2VuZGVkIGZyb20KCQkJCQkJaXJyZWd1bGFyIHVuaW9ucyBhdXRob3JpemVkIGluIG9yZGVyIHRvIGtlZXAgdXAgcG9wdWxhdGlvbiBkdXJpbmcgdGhlIEZpcnN0CgkJCQkJCU1lc3NlbmlhbiBXYXIuIFRoZXkgZm91bmRlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNDEwMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA0MTAwIj5UYXJhbnRvPC9wbGFjZU5hbWU+CgkJCQkJCTxkYXRlIGF1dGhuYW1lPSItNzA4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNzA4Ij43MDg8L2RhdGU+IEIuQy48L25vdGU+IGF0IFNwYXJ0YeKAlGZvciB0aGV5IHdlcmUKCQkJCQlkZXNjZW5kZWQgZnJvbSB0aGUgRXF1YWxz4oCUd2hvbSB0aGUgU3BhcnRhbnMgZGV0ZWN0ZWQgaW4gYSBjb25zcGlyYWN5CgkJCQkJYW5kIHNlbnQgYXdheSB0byBjb2xvbml6ZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNDEwMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA0MTAwIj5UYXJhbnRvPC9wbGFjZU5hbWU+CgkJCQkJCTxkYXRlIGF1dGhuYW1lPSItNzA4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNzA4Ij43MDg8L2RhdGU+IEIuQy48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNDEwMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA0MTAwIj5UYXJlbnR1bTwvcGxhY2VOYW1lPu+8iTsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5vcgoJCQkJCXdoZW4gaW5kaXZpZHVhbHMgYWx0aG91Z2ggZ3JlYXQgbWVuIGFuZCBpbmZlcmlvciB0byBub2JvZHkgaW4gdmlydHVlIGFyZSB0cmVhdGVkCgkJCQkJZGlzaG9ub3JhYmx5IGJ5IGNlcnRhaW4gbWVuIGluIGhpZ2hlciBob25vciDvvIhmb3IgZXhhbXBsZSBMeXNhbmRlciBieQoJCQkJCXRoZSBraW5nczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5LaW5nIFBhdXNhbmlhcyBJSS4gY2hlY2tlZCBMeXNhbmRlcgoJCQkJCQlhZnRlciBoaXMgY29ucXVlc3Qgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGluCgkJCQkJCQk8ZGF0ZSBhdXRobmFtZT0iLTQwMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwMyI+NDAzPC9kYXRlPiBCLkMuIGFuZCBLaW5nIEFnZXNpbGF1cyB0aHdhcnRlZCBoaW0gb24KCQkJCQkJdGhlIGV4cGVkaXRpb24gaW50byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjI5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMjk0Ij5Bc2lhIE1pbm9yPC9wbGFjZU5hbWU+IGluCgkJCQkJCTM5Ni48L25vdGU+77yJOyBvciB3aGVuIGEgcGVyc29uIG9mIG1hbmx5IG5hdHVyZSBoYXMgbm8gc2hhcmUgaW4gdGhlCgkJCQkJaG9ub3JzIO+8iGZvciBleGFtcGxlIENpbmFkb24sPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGluCgkJCQkJCQk8ZGF0ZSBhdXRobmFtZT0iLTQwMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwMyI+NDAzPC9kYXRlPiBCLkMuIGFuZCBLaW5nIEFnZXNpbGF1cyB0aHdhcnRlZCBoaW0gb24KCQkJCQkJdGhlIGV4cGVkaXRpb24gaW50byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjI5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMjk0Ij5Bc2lhIE1pbm9yPC9wbGFjZU5hbWU+IGluCgkJCQkJCTM5Ni48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SGlzCgkJCQkJCWNvbnNwaXJhY3kgYWdhaW5zdCB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2NzrzOv865zr/OuTwvZm9yZWlnbj4gaW4gPGRhdGUgYXV0aG5hbWU9Ii0zOTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTgiPjM5ODwvZGF0ZT4gQi5DLiB3YXMgZGlzY292ZXJlZCBhbmQgaGUgd2FzIGV4ZWN1dGVkLjwvbm90ZT4KCQkJCQl3aG8gZ290IHRvZ2V0aGVyIHRoZSBhdHRhY2sgdXBvbiB0aGUgU3BhcnRhbnMgaW4gdGhlIHJlaWduIG9mCgkJCQkJQWdlc2lsYXVz77yJLiBGYWN0aW9uIGluIGFyaXN0b2NyYWNpZXMgYWxzbyBhcmlzZXMgd2hlbiBzb21lIG9mIHRoZQoJCQkJCXdlbGwtYm9ybiBhcmUgdG9vIHBvb3IgYW5kIG90aGVycyB0b28gcmljaCDvvIh3aGljaCBoYXBwZW5zIGVzcGVjaWFsbHkKCQkJCQlkdXJpbmcgd2FycywgYW5kIHRoaXMgYWxzbyBvY2N1cnJlZCBhdCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvY3OvM6/zrnOv865PC9mb3JlaWduPiBpbiA8ZGF0ZSBhdXRobmFtZT0iLTM5OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OCI+Mzk4PC9kYXRlPiBCLkMuIHdhcyBkaXNjb3ZlcmVkIGFuZCBoZSB3YXMgZXhlY3V0ZWQuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IGF0IHRoZSB0aW1lIG9mIHRoZSBNZXNzZW5pYW4gV2Fy4oCUYXMgYXBwZWFycwoJCQkJCWZyb20gdGhlIHBvZW0gb2YgVHlydGFldXMgZW50aXRsZWQ8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5MYXcgYW5kIE9yZGVyPC90aXRsZT47IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzA3YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1307a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBzb21lCgkJCQkJbWVuIGJlaW5nIGluIGRpc3RyZXNzIGJlY2F1c2Ugb2YgdGhlIHdhciBwdXQgZm9yd2FyZCBhIGNsYWltIHRvIGNhcnJ5IG91dCBhCgkJCQkJcmUtZGl2aXNpb24gb2YgdGhlIGxhbmQgb2YgdGhlIGNvdW50cnnvvIkuIEFsc28gaWYgYSBtYW4gaXMgZ3JlYXQgYW5kCgkJCQkJY2FwYWJsZSBvZiBiZWluZyB5ZXQgZ3JlYXRlciwgaGUgc3RpcnMgdXAgZmFjdGlvbiBpbiBvcmRlciB0aGF0IGhlIG1heSBiZSBzb2xlCgkJCQkJcnVsZXIg77yIYXMgUGF1c2FuaWFzIHdobyBjb21tYW5kZWQgdGhlIGFybXkgdGhyb3VnaCB0aGUgUGVyc2lhbiB3YXIKCQkJCQlzZWVtcyB0byBoYXZlIGRvbmUgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LCBhbmQKCQkJCQkJSGFubm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyBIYW5ubyB3aG8gZm91Z2h0IGluCgkJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzEyMiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAzMTIyIj5TaWNpbHk8L3BsYWNlTmFtZT4gYWdhaW5zdCB0aGUgZWxkZXIKCQkJCQkJRGlvbnlzaXVzIGNpcmNhIDRPTyBCLkMuPC9ub3RlPiBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzEyMiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAzMTIyIj5TaWNpbHk8L3BsYWNlTmFtZT4gYWdhaW5zdCB0aGUgZWxkZXIKCQkJCQkJRGlvbnlzaXVzIGNpcmNhIDRPTyBCLkMuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDYXJ0aGFnZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ2FydGhhZ2UiPkNhcnRoYWdlPC9wbGFjZU5hbWU+77yJLjwvdHJhbnNsYXRpb24+"
translation['5.1307a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCB0aGUgYWN0dWFsIG92ZXJ0aHJvdyBvZiBib3RoCgkJCQkJY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudHMgYW5kIGFyaXN0b2NyYWNpZXMgaXMgbW9zdGx5IGR1ZSB0byBhIGRlcGFydHVyZSBmcm9tCgkJCQkJanVzdGljZSBpbiB0aGUgYWN0dWFsIGZyYW1ld29yayBvZiB0aGUgY29uc3RpdHV0aW9uLiBGb3Igd2hhdCBzdGFydHMgaXQgaW4gdGhlCgkJCQkJY2FzZSBvZiBhIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQgaXMgdGhhdCBpdCBkb2VzIG5vdCBjb250YWluIGEgZ29vZCBibGVuZCBvZgoJCQkJCWRlbW9jcmFjeSBhbmQgb2xpZ2FyY2h5OyBhbmQgaW4gdGhlIGNhc2Ugb2YgYW4gYXJpc3RvY3JhY3kgaXQgaXMgdGhlIGxhY2sgb2YgYQoJCQkJCWdvb2QgYmxlbmQgb2YgdGhvc2UgdHdvIGVsZW1lbnRzIGFuZCBvZiB2aXJ0dWUsIGJ1dCBjaGllZmx5IG9mIHRoZSB0d28gZWxlbWVudHMKCQkJCQnvvIhJIG1lYW4gcG9wdWxhciBnb3Zlcm5tZW50IGFuZCBvbGlnYXJjaHnvvIksIGZvciBib3RoCgkJCQkJY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudHMgYW5kIG1vc3Qgb2YgdGhlIGNvbnN0aXR1dGlvbnMgdGhhdCBhcmUgY2FsbGVkCgkJCQkJYXJpc3RvY3JhY2llcyBhaW0gYXQgYmxlbmRpbmcgdGhlc2UuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi40IiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIHRoaXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGVpciBtb2RlIG9mIGJsZW5kaW5nCgkJCQkJCW9saWdhcmNoeSBhbmQgZGVtb2NyYWN5Ljwvbm90ZT4gaXMgdGhlIHBvaW50IG9mIGRpc3RpbmN0aW9uIGJldHdlZW4KCQkJCQlhcmlzdG9jcmFjaWVzIGFuZCB3aGF0IGFyZSBjYWxsZWQgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudHMsIGFuZCBpdCBpcyBvd2luZyB0bwoJCQkJCXRoaXMgdGhhdCBzb21lIG9mIHRoZW08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHdyaXRlciBsb29zZWx5CgkJCQkJCXNwZWFrcyBvZiBhcmlzdG9jcmFjaWVzIGFuZCBwb2xpdGllcyBhcyBhIHNpbmdsZSBjbGFzcywgZGlmZmVyaW5nIG9ubHkgaW4KCQkJCQkJZGVncmVlIG9mIGNvbmNlbnRyYXRpb24gb2YgcG93ZXIgaW4gdGhlIGhhbmRzIG9mIHRoZSB1cHBlciBjbGFzc2VzLjwvbm90ZT4KCQkJCQlhcmUgbGVzcyBhbmQgb3RoZXJzIG1vcmUgc3RhYmxlOyBmb3IgdGhlIGNvbnN0aXR1dGlvbnMgaW5jbGluaW5nIG1vcmUgdG93YXJkcwoJCQkJCW9saWdhcmNoeSBtZW4gY2FsbCBhcmlzdG9jcmFjaWVzIGFuZCB0aG9zZSBpbmNsaW5pbmcgbW9yZSB0byB0aGUgc2lkZSBvZiB0aGUKCQkJCQltdWx0aXR1ZGUgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudHMsIG93aW5nIHRvIHdoaWNoIHRob3NlIG9mIHRoZSBsYXR0ZXIgc29ydAoJCQkJCWFyZSBtb3JlIHNlY3VyZSB0aGFuIHRoZSBvdGhlcnMsIGZvciB0aGUgZ3JlYXRlciBudW1iZXIgaXMgdGhlIHN0cm9uZ2VyLCBhbmQKCQkJCQlhbHNvIG1lbiBhcmUgbW9yZSBjb250ZW50IHdoZW4gdGhleSBoYXZlIGFuIGVxdWFsIGFtb3VudCwgd2hlcmVhcyB0aGUgb3duZXJzIG9mCgkJCQkJd2VhbHRoeSBwcm9wZXJ0aWVzLCBpZiB0aGUgY29uc3RpdHV0aW9uIGdpdmVzIHRoZW0gdGhlIHN1cGVyaW9yCgkJCQkJCXBvc2l0aW9uLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5zZWVrIHRvIGJlaGF2ZQoJCQkJCWluc29sZW50bHkgYW5kIHRvIGdhaW4gbW9uZXkuIDwvdHJhbnNsYXRpb24+"
translation['5.1307b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi41IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kCgkJCQkJc3BlYWtpbmcgYnJvYWRseSwgdG8gd2hpY2hldmVyIHNpZGUgdGhlIGNvbnN0aXR1dGlvbiBsZWFucywgdGhhdCBpcyB0aGUgc2lkZSB0bwoJCQkJCXdoaWNoIGl0IHNoaWZ0cyBhcyBlaXRoZXIgb2YgdGhlIHR3byBwYXJ0aWVzIGluY3JlYXNlcyBpdHMgb3duIHNpZGXigJRhCgkJCQkJY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCBzaGlmdHMgdG8gZGVtb2NyYWN5IGFuZCBhbiBhcmlzdG9jcmFjeSB0byBvbGlnYXJjaHksCgkJCQkJb3IgdG8gdGhlIG9wcG9zaXRlIGV4dHJlbWVzLCB0aGF0IGlzLCBhcmlzdG9jcmFjeSB0byBkZW1vY3JhY3kg77yIZm9yIHRoZQoJCQkJCXBvb3JlciBwZW9wbGUgZmVlbGluZyB0aGV5IGFyZSB1bmp1c3RseSB0cmVhdGVkIHB1bGwgaXQgcm91bmQgdG8gdGhlCgkJCQkJb3Bwb3NpdGXvvIkgYW5kIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnRzIHRvIG9saWdhcmNoeSDvvIhmb3IgdGhlCgkJCQkJb25seSBsYXN0aW5nIHRoaW5nIGlzIGVxdWFsaXR5IGluIGFjY29yZGFuY2Ugd2l0aCBkZXNlcnQgYW5kIHRoZSBwb3NzZXNzaW9uIG9mCgkJCQkJd2hhdCBpcyB0aGVpciBvd27vvIkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi42IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZQoJCQkJCWNoYW5nZSBtZW50aW9uZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBmcm9tIGFyaXN0b2NyYWN5IHRvCgkJCQkJCWRlbW9jcmFjeS4gUG9zc2libHkgdGhlc2UgZXZlbnRzIG9jY3VycmVkIGFmdGVyIHRoZSBkZWZlYXQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3lyYWN1c2UiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPiBpbiA8ZGF0ZSBhdXRobmFtZT0iLTQxMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMyI+NDEzPC9kYXRlPiBCLkMuLCB3aGVuIHRoZSBBdGhlbmlhbiBwYXJ0eSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRodXJpaSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGh1cmlpIj5UaHVyaWk8L3BsYWNlTmFtZT4gd2FzIGJhbmlzaGVkIO+8iEx5c2lhcwoJCQkJCQk4MzUgRO+8iS4gVGhlIGV2ZW50cyBpbiA4IHdlcmUgcGVyaGFwcyBpbiB0aGUgZm91cnRoIGNlbnR1cnkuPC9ub3RlPgoJCQkJCWNhbWUgYWJvdXQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3lyYWN1c2UiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPiBpbiA8ZGF0ZSBhdXRobmFtZT0iLTQxMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMyI+NDEzPC9kYXRlPiBCLkMuLCB3aGVuIHRoZSBBdGhlbmlhbiBwYXJ0eSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRodXJpaSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGh1cmlpIj5UaHVyaWk8L3BsYWNlTmFtZT4gd2FzIGJhbmlzaGVkIO+8iEx5c2lhcwoJCQkJCQk4MzUgRO+8iS4gVGhlIGV2ZW50cyBpbiA4IHdlcmUgcGVyaGFwcyBpbiB0aGUgZm91cnRoIGNlbnR1cnkuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUaHVyaWkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRodXJpaSI+VGh1cmlpPC9wbGFjZU5hbWU+LCBmb3IgYmVjYXVzZQoJCQkJCXRoZSBwcm9wZXJ0eS1xdWFsaWZpY2F0aW9uIGZvciBob25vcnMgd2FzIHRvbyBoaWdoLCB0aGUgY29uc3RpdHV0aW9uIHdhcyBhbHRlcmVkCgkJCQkJdG8gYSBsb3dlciBwcm9wZXJ0eS1xdWFsaWZpY2F0aW9uIGFuZCB0byBhIGxhcmdlciBudW1iZXIgb2Ygb2ZmaWNpYWwgcG9zdHMsIGJ1dAoJCQkJCWJlY2F1c2UgdGhlIG5vdGFibGVzIGlsbGVnYWxseSBib3VnaHQgdXAgdGhlIHdob2xlIG9mIHRoZSBsYW5kIO+8iGZvciB0aGUKCQkJCQljb25zdGl0dXRpb24gd2FzIHRvbyBvbGlnYXJjaGljYWwsIHNvIHRoYXQgdGhleSB3ZXJlIGFibGUgdG8gZ3Jhc3AgYXQKCQkJCQl3ZWFsdGjvvIkgLiAuIC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UHJvYmFibHkgYSBjbGF1c2UKCQkJCQkJbWVhbmluZyDigJhjaXZpbCBzdHJpZmUgZW5zdWVk4oCZIGhhcyBiZWVuIGxvc3QuPC9ub3RlPiBBbmQKCQkJCQl0aGUgcGVvcGxlIGhhdmluZyBiZWVuIHRyYWluZWQgaW4gdGhlIHdhciBvdmVycG93ZXJlZCB0aGUgZ3VhcmRzLCB1bnRpbCB0aG9zZQoJCQkJCXdobyB3ZXJlIGluIHRoZSBwb3NpdGlvbiBvZiBoYXZpbmcgdG9vIG11Y2ggbGFuZCByZWxpbnF1aXNoZWQgaXQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QmVzaWRlcywgYXMKCQkJCQlhbGwgYXJpc3RvY3JhdGljIGNvbnN0aXR1dGlvbnMgYXJlIGluY2xpbmVkIHRvd2FyZHMgb2xpZ2FyY2h5LCB0aGUgbm90YWJsZXMKCQkJCQlncmFzcCBhdCB3ZWFsdGgg77yIZm9yIGV4YW1wbGUgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IHRoZSBlc3RhdGVzIGFyZSBjb21pbmcgaW50byBhIGZldyBoYW5kc++8iTsgYW5kCgkJCQkJdGhlIG5vdGFibGVzIGhhdmUgbW9yZSBwb3dlciB0byBkbyB3aGF0IHRoZXkgbGlrZSwgYW5kIHRvIGZvcm0gbWFycmlhZ2UKCQkJCQljb25uZWN0aW9ucyB3aXRoIHdob20gdGhleSBsaWtlIO+8iHdoaWNoIHdhcyB0aGUgY2F1c2Ugb2YgdGhlIGZhbGwgb2YgdGhlCgkJCQkJc3RhdGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxMb2NyaSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTG9jcmkiPkxvY3JpPC9wbGFjZU5hbWU+LCBhcyBhIHJlc3VsdCBvZiB0aGUKCQkJCQltYXJyaWFnZSB3aXRoIERpb255c2l1cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEyNTlhIDI4IG4uIEhlCgkJCQkJCW1hcnJpZWQgaW4gPGRhdGUgYXV0aG5hbWU9Ii0zOTciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTciPjM5NzwvZGF0ZT4gQi5DLiB0aGUgZGF1Z2h0ZXIgb2YgYSBMb2NyaWFuCgkJCQkJCWNpdGl6ZW4sIHdobyBib3JlIGhpbSB0aGUgeW91bmdlciBEaW9ueXNpdXMuPC9ub3RlPiB3aGljaCB3b3VsZCBub3QgaGF2ZQoJCQkJCXRha2VuIHBsYWNlIGluIGEgZGVtb2NyYWN5OyBub3IgaW4gYSB3ZWxsLWJsZW5kZWQgYXJpc3RvY3JhY3nvvIkuCgkJCQkJCTxkYXRlIGF1dGhuYW1lPSItMzk3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk3Ij4zOTc8L2RhdGU+IEIuQy4gdGhlIGRhdWdodGVyIG9mIGEgTG9jcmlhbgoJCQkJCQljaXRpemVuLCB3aG8gYm9yZSBoaW0gdGhlIHlvdW5nZXIgRGlvbnlzaXVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzA3YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1307b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkFuZCBhcmlzdG9jcmFjaWVzIGFyZSBtb3N0IGxpYWJsZSB0byB1bmRlcmdvIHJldm9sdXRpb24KCQkJCQl1bm9ic2VydmVkLCB0aHJvdWdoIGdyYWR1YWwgcmVsYXhhdGlvbiwganVzdCBhcyBpdCBoYXMgYmVlbiBzYWlkIGluIHdoYXQgaGFzCgkJCQkJZ29uZSBiZWZvcmUgYWJvdXQgYWxsIGZvcm1zIG9mIGNvbnN0aXR1dGlvbiBpbiBnZW5lcmFsLCB0aGF0IGV2ZW4gYSBzbWFsbCBjaGFuZ2UKCQkJCQltYXkgY2F1c2UgYSByZXZvbHV0aW9uLiBGb3Igd2hlbiB0aGV5IGdpdmUgdXAgb25lIG9mIHRoZSBkZXRhaWxzIG9mIHRoZQoJCQkJCWNvbnN0aXR1dGlvbiwgYWZ0ZXJ3YXJkcyB0aGV5IGFsc28gbWFrZSBhbm90aGVyIHNsaWdodGx5IGJpZ2dlciBjaGFuZ2UgbW9yZQoJCQkJCXJlYWRpbHksIHVudGlsIHRoZXkgYWx0ZXIgdGhlIHdob2xlIHN5c3RlbS4gPC90cmFuc2xhdGlvbj4="
translation['5.1307b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi44IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhpcyBvY2N1cnJlZCBmb3IgaW5zdGFuY2Ugd2l0aCB0aGUgY29uc3RpdHV0aW9uIG9mCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVGh1cmlpIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxUaHVyaWkiPlRodXJpaTwvcGxhY2VOYW1lPi4gVGhlcmUgd2FzIGEgbGF3IHRoYXQgdGhlCgkJCQkJb2ZmaWNlIG9mIGdlbmVyYWwgY291bGQgYmUgaGVsZCBhdCBpbnRlcnZhbHMgb2YgZm91ciB5ZWFycywgYnV0IHNvbWUgb2YgdGhlCgkJCQkJeW91bmdlciBtZW4sIGJlY29taW5nIHdhcmxpa2UgYW5kIHdpbm5pbmcgaGlnaCByZXB1dGUgd2l0aCB0aGUgbWFzcyBvZiB0aGUKCQkJCQlndWFyZHMsIGNhbWUgdG8gZGVzcGlzZSB0aGUgbWVuIGVuZ2FnZWQgaW4gYWZmYWlycywgYW5kIHRob3VnaHQgdGhhdCB0aGV5IHdvdWxkCgkJCQkJZWFzaWx5IGdldCBjb250cm9sOyBzbyBmaXJzdCB0aGV5IHRyaWVkIHRvIHJlcGVhbCB0aGUgbGF3IHJlZmVycmVkIHRvLCBzbyBhcyB0bwoJCQkJCWVuYWJsZSB0aGUgc2FtZSBwZXJzb25zIHRvIHNlcnZlIGFzIGdlbmVyYWxzIGNvbnRpbnVvdXNseSwgYXMgdGhleSBzYXcgdGhhdCB0aGUKCQkJCQlwZW9wbGUgd291bGQgdm90ZSBmb3IgdGhlbXNlbHZlcyB3aXRoIGVudGh1c2lhc20uIEFuZCB0aG91Z2ggdGhlIG1hZ2lzdHJhdGVzIGluCgkJCQkJY2hhcmdlIG9mIHRoaXMgbWF0dGVyLCBjYWxsZWQgdGhlIENvdW5jaWxsb3JzLCBhdCBmaXJzdCBtYWRlIGEgbW92ZW1lbnQgdG8KCQkJCQlvcHBvc2UgdGhlbSwgdGhleSB3ZXJlIHdvbiBvdmVyLCBiZWxpZXZpbmcgdGhhdCBhZnRlciByZXBlYWxpbmcgdGhpcyBsYXcgdGhleQoJCQkJCXdvdWxkIGFsbG93IHRoZSByZXN0IG9mIHRoZSBjb25zdGl0dXRpb24gdG8gc3RhbmQ7IGJ1dCBsYXRlciwgdGhvdWdoIHRoZXkgd2lzaGVkCgkJCQkJdG8gcHJldmVudCB0aGVtIHdoZW4gb3RoZXIgbGF3cyB3ZXJlIGJlaW5nIHJlcGVhbGVkLCB0aGV5IGNvdWxkIG5vIGxvbmdlciBkbwoJCQkJCWFueXRoaW5nIG1vcmUsIGJ1dCB0aGUgd2hvbGUgc3lzdGVtIG9mIHRoZSBjb25zdGl0dXRpb24gd2FzIGNvbnZlcnRlZCBpbnRvIGEKCQkJCQlkeW5hc3R5IG9mIHRoZSBtZW4gd2hvIGhhZCBpbml0aWF0ZWQgdGhlIGlubm92YXRpb25zLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi45IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBjb25zdGl0dXRpb25zIG9mIGFsbAoJCQkJCQlmb3JtczxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hcmUgYnJva2VuIHVwIHNvbWUgdGltZXMKCQkJCQlmcm9tIG1vdmVtZW50cyBpbml0aWF0aW5nIGZyb20gd2l0aGluIHRoZW1zZWx2ZXMsIGJ1dCBzb21ldGltZXMgZnJvbSBvdXRzaWRlLAoJCQkJCXdoZW4gdGhlcmUgaXMgYW4gb3Bwb3NpdGUgZm9ybSBvZiBjb25zdGl0dXRpb24gZWl0aGVyIG5lYXIgYnkgb3IgYSBsb25nIHdheSBvZmYKCQkJCQl5ZXQgcG9zc2Vzc2VkIG9mIHBvd2VyLiBUaGlzIHVzZWQgdG8gaGFwcGVuIGluIHRoZSBkYXlzIG9mIHRoZSBBdGhlbmlhbnMgYW5kIHRoZQoJCQkJCVNwYXJ0YW5zOyB0aGUgQXRoZW5pYW5zIHVzZWQgdG8gcHV0IGRvd24gb2xpZ2FyY2hpZXMgZXZlcnl3aGVyZSBhbmQgdGhlIFNwYXJ0YW5zCgkJCQkJCWRlbW9jcmFjaWVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBoYXZlIHRoZW4gYXBwcm94aW1hdGVseSBzdGF0ZWQKCQkJCQl0aGUgY2F1c2VzIHRoYXQgZ2l2ZSByaXNlIHRvIHJldm9sdXRpb25zIGluIHRoZSBjb25zdGl0dXRpb25zIG9mIHN0YXRlcyBhbmQgdG8KCQkJCQlwYXJ0eSBmYWN0aW9ucy48L3RyYW5zbGF0aW9uPg=="
translation['5.1308a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBuZXh0IHRoaW5nIHRvIHNwZWFrIGFib3V0IGlzIHNlY3VyaXR5IGJvdGggaW4gZ2VuZXJhbCBhbmQKCQkJCQlmb3IgZWFjaCBmb3JtIG9mIGNvbnN0aXR1dGlvbiBzZXBhcmF0ZWx5LiBGaXJzdCB0aGVuIGl0IGlzIGNsZWFyIHRoYXQgaWYgd2Uga25vdwoJCQkJCXRoZSBjYXVzZXMgYnkgd2hpY2ggY29uc3RpdHV0aW9ucyBhcmUgZGVzdHJveWVkIHdlIGFsc28ga25vdyB0aGUgY2F1c2VzIGJ5IHdoaWNoCgkJCQkJdGhleSBhcmUgcHJlc2VydmVkOyBmb3Igb3Bwb3NpdGVzIGNyZWF0ZSBvcHBvc2l0ZXMsIGFuZCBkZXN0cnVjdGlvbiBpcyB0aGUKCQkJCQlvcHBvc2l0ZSBvZiBzZWN1cml0eS4gSW4gd2VsbC1ibGVuZGVkIGNvbnN0aXR1dGlvbnMgdGhlcmVmb3JlLCBpZiBjYXJlIG11c3QgYmUKCQkJCQl0YWtlbiB0byBwcmV2ZW50IG1lbiBmcm9tIGNvbW1pdHRpbmcgYW55IG90aGVyIGJyZWFjaCBvZiB0aGUgbGF3LCBtb3N0IG9mIGFsbAoJCQkJCW11c3QgYSBzbWFsbCBicmVhY2ggYmUgZ3VhcmRlZCBhZ2FpbnN0LCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmZvciB0cmFuc2dyZXNzaW9uIG9mIHRoZSBsYXcgY3JlZXBzIGluIHVubm90aWNlZCwganVzdCBhcwoJCQkJCWEgc21hbGwgZXhwZW5kaXR1cmUgb2NjdXJyaW5nIG9mdGVuIHJ1aW5zIG1lbidzIGVzdGF0ZXM7IGZvciB0aGUgZXhwZW5zZSBpcyBub3QKCQkJCQlub3RpY2VkIGJlY2F1c2UgaXQgZG9lcyBub3QgY29tZSBhbGwgYXQgb25jZSwgZm9yIHRoZSBtaW5kIGlzIGxlZCBhc3RyYXkgYnkgdGhlCgkJCQkJcmVwZWF0ZWQgc21hbGwgb3V0bGF5cywganVzdCBsaWtlIHRoZSBzb3BoaXN0aWMgcHV6emxlLCDigJhpZiBlYWNoIGlzCgkJCQkJbGl0dGxlLCB0aGVuIGFsbCBhcmUgYSBsaXR0bGUu4oCZPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgaXMgdGhlIDxlbXBoIGNsYXNzPSJ0cmFuc2xhdGlvbiI+c29yaXRlczwvZW1waD5mYWxsYWN5OyBhZGQgdG8gb25lIHN0b25lIGFub3RoZXIsIGFuZAoJCQkJCQlhbm90aGVyLCBhbmQgYW5vdGhlcuKAlHdoZW4gZG8gdGhleSBtYWtlIGEgaGVhcCDvvIggPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PPic+B4b25z4I8L2ZvcmVpZ24+77yJPyBhbmQgdGFrZSBhd2F5IHN0b25lIGFmdGVyCgkJCQkJCXN0b25l4oCUd2hlbiBkbyB0aGV5IGNlYXNlIHRvIGJlIGEgaGVhcD8gSG9yYWNlJ3Mg4oCYcmF0aW8KCQkJCQkJcnVlbnRpcyBhY2VydWnigJkg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9yLiBFcC4gMi40NyI+SG9yLiBFcC4KCQkJCQkJCTIuNDc8L2JpYmw+Ljwvbm90ZT4gVGhpcyBpcyB0cnVlIGluIG9uZSB3YXkgYnV0IGluIGFub3RoZXIgaXQgaXMgbm90OwoJCQkJCWZvciB0aGUgd2hvbGUgb3IgdG90YWwgaXMgbm90IGxpdHRsZSwgYnV0IG1hZGUgdXAgb2YgbGl0dGxlIHBhcnRzLiBPbmUgdGhpbmcKCQkJCQl0aGVyZWZvcmUgdGhhdCB3ZSBtdXN0IGd1YXJkIGFnYWluc3QgaXMgdGhpcyBiZWdpbm5pbmc7IGFuZCB0aGUgbmV4dCBwb2ludCBpcwoJCQkJCXRoYXQgd2UgbXVzdCBub3QgcHV0IGZhaXRoIGluIHRoZSBhcmd1bWVudHMgc3RydW5nIHRvZ2V0aGVyIGZvciB0aGUgc2FrZSBvZgoJCQkJCXRyaWNraW5nIHRoZSBtdWx0aXR1ZGUsIDxlbXBoIGNsYXNzPSJ0cmFuc2xhdGlvbiI+c29yaXRlczwvZW1waD5mYWxsYWN5OyBhZGQgdG8gb25lIHN0b25lIGFub3RoZXIsIGFuZAoJCQkJCQlhbm90aGVyLCBhbmQgYW5vdGhlcuKAlHdoZW4gZG8gdGhleSBtYWtlIGEgaGVhcCDvvIggPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PPic+B4b25z4I8L2ZvcmVpZ24+77yJPyBhbmQgdGFrZSBhd2F5IHN0b25lIGFmdGVyCgkJCQkJCXN0b25l4oCUd2hlbiBkbyB0aGV5IGNlYXNlIHRvIGJlIGEgaGVhcD8gSG9yYWNlJ3Mg4oCYcmF0aW8KCQkJCQkJcnVlbnRpcyBhY2VydWnigJkg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9yLiBFcC4gMi40NyI+SG9yLiBFcC4KCQkJCQkJCTIuNDc8L2JpYmw+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzA4YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1308a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGV5IGFyZSByZWZ1dGVkIGJ5IHRoZSBmYWN0cyDvvIhhbmQKCQkJCQl3aGF0IHNvcnQgb2YgY29uc3RpdHV0aW9uYWwgc29waGlzdHJpZXMgd2UgcmVmZXIgdG8gaGFzIGJlZW4gc2FpZAoJCQkJCWJlZm9yZe+8iS4gPC90cmFuc2xhdGlvbj4="
translation['5.1308a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGFnYWluIHdlIG11c3QKCQkJCQlvYnNlcnZlIHRoYXQgbm90IG9ubHkgc29tZSBhcmlzdG9jcmFjaWVzIGJ1dCBhbHNvIHNvbWUgb2xpZ2FyY2hpZXMgZW5kdXJlIG5vdAoJCQkJCWJlY2F1c2UgdGhlIGNvbnN0aXR1dGlvbnMgYXJlIHNlY3VyZSBidXQgYmVjYXVzZSB0aG9zZSB3aG8gZ2V0IGluIHRoZSBvZmZpY2VzCgkJCQkJdHJlYXQgYm90aCB0aG9zZSBvdXRzaWRlIHRoZSBjb25zdGl0dXRpb24gYW5kIHRob3NlIGluIHRoZSBnb3Zlcm5tZW50IHdlbGwsIG9uCgkJCQkJdGhlIG9uZSBoYW5kIGJ5IG5vdCB0cmVhdGluZyB0aG9zZSB3aG8gYXJlIG5vdCBtZW1iZXJzIG9mIGl0IHVuanVzdGx5IGFuZCBieQoJCQkJCWJyaW5naW5nIHRoZWlyIGxlYWRpbmcgbWVuIGludG8gdGhlIGNvbnN0aXR1dGlvbiBhbmQgbm90IHdyb25naW5nIHRoZSBhbWJpdGlvdXMKCQkJCQlvbmVzIGluIHRoZSBtYXR0ZXIgb2YgZGlzaG9ub3Igb3IgdGhlIG11bHRpdHVkZSBpbiB0aGUgbWF0dGVyIG9mIGdhaW4sIGFuZCBvbgoJCQkJCXRoZSBvdGhlciBoYW5kLCBpbiByZWxhdGlvbiB0byB0aGVtc2VsdmVzIGFuZCB0aG9zZSB3aG8gYXJlIG1lbWJlcnMsIGJ5IHRyZWF0aW5nCgkJCQkJb25lIGFub3RoZXIgaW4gYSBkZW1vY3JhdGljIHNwaXJpdC4gRm9yIHRoYXQgZXF1YWxpdHkgd2hpY2ggbWVuIG9mIGRlbW9jcmF0aWMKCQkJCQlzcGlyaXQgc2VlayBmb3IgaW4gdGhlIGNhc2Ugb2YgdGhlIG11bHRpdHVkZSBpcyBub3Qgb25seSBqdXN0IGJ1dCBhbHNvIGV4cGVkaWVudAoJCQkJCWluIHRoZSBjYXNlIG9mIHRoZWlyIGNvbXBlZXJzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlCgkJCQkJaWYgdGhlcmUgYXJlIGEgZ3JlYXRlciBudW1iZXIgaW4gdGhlIGdvdmVybmluZyBjbGFzcywgbWFueSBvZiB0aGUgbGVnaXNsYXRpdmUKCQkJCQllbmFjdG1lbnRzIG9mIGEgZGVtb2NyYXRpYyBuYXR1cmUgYXJlIGFkdmFudGFnZW91cywgZm9yIGV4YW1wbGUgZm9yIHRoZSBvZmZpY2VzCgkJCQkJdG8gYmUgdGVuYWJsZSBmb3Igc2l4IG1vbnRocywgdG8gZW5hYmxlIGFsbCB0aGUgY29tcGVlcnMgdG8gcGFydGljaXBhdGUgaW4gdGhlbTsKCQkJCQlmb3IgdGhlIGNvbXBlZXJzIGluIHRoaXMgY2FzZSBhcmUgYXMgaXQgd2VyZSB0aGUgcGVvcGxlIO+8iG93aW5nIHRvIHdoaWNoCgkJCQkJZGVtYWdvZ3VlcyBvZnRlbiBhcmlzZSBldmVuIGFtb25nIHRoZW0sIGFzIGhhcyBiZWVuIHNhaWQgYWxyZWFkee+8iSwgYW5kCgkJCQkJYWxzbyBvbGlnYXJjaGllcyBhbmQgYXJpc3RvY3JhY2llcyBmYWxsIGludG8gZHluYXN0aWVzIGxlc3Mg77yIZm9yIGl0IGlzCgkJCQkJbm90IHNvIGVhc3kgdG8gZG8gd3JvbmdzPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPndoZW4gaW4KCQkJCQlvZmZpY2UgZm9yIGEgc2hvcnQgdGltZSBhcyB3aGVuIGluIGZvciBhIGxvbmcgdGltZSwgc2luY2UgaXQgaXMgbG9uZyB0ZW51cmUgb2YKCQkJCQlvZmZpY2UgdGhhdCBjYXVzZXMgdHlyYW5uaWVzIHRvIHNwcmluZyB1cCBpbiBvbGlnYXJjaGllcyBhbmQgZGVtb2NyYWNpZXM7IGZvcgoJCQkJCWVpdGhlciB0aG9zZSB3aG8gYXJlIHRoZSBncmVhdGVzdCBtZW4gaW4gZWl0aGVyIHNvcnQgb2Ygc3RhdGUgYWltIGF0IHR5cmFubnksIGluCgkJCQkJdGhlIG9uZSBzb3J0IHRoZSBkZW1hZ29ndWVzIGFuZCBpbiB0aGUgb3RoZXIgdGhlIGR5bmFzdHMsIG9yIHRob3NlIHdobyBob2xkIHRoZQoJCQkJCWdyZWF0ZXN0IG9mZmljZXMsIHdoZW4gdGhleSBhcmUgaW4gb2ZmaWNlIGZvciBhbG9uZyB0aW1l77yJLiA8L3RyYW5zbGF0aW9uPg=="
translation['5.1308b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy41IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGNvbnN0aXR1dGlvbnMgYXJlIGtlcHQgc2VjdXJlIG5vdCBvbmx5CgkJCQkJdGhyb3VnaCBiZWluZyBhdCBhIGRpc3RhbmNlIGZyb20gZGVzdHJveWVycyBidXQgc29tZXRpbWVzIGFsc28gdGhyb3VnaCBiZWluZwoJCQkJCW5lYXIgdGhlbSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBtb2RpZmllcyAxMjA3YSAzMS48L25vdGU+IGZvcgoJCQkJCXdoZW4gdGhleSBhcmUgYWZyYWlkIHRoZSBjaXRpemVucyBrZWVwIGEgY2xvc2VyIGhvbGQgb24gdGhlIGdvdmVybm1lbnQ7IGhlbmNlCgkJCQkJdGhvc2Ugd2hvIHRha2UgdGhvdWdodCBmb3IgdGhlIGNvbnN0aXR1dGlvbiBtdXN0IGNvbnRyaXZlIGNhdXNlcyBvZiBmZWFyLCBpbgoJCQkJCW9yZGVyIHRoYXQgdGhlIGNpdGl6ZW5zIG1heSBrZWVwIGd1YXJkIGFuZCBub3QgcmVsYXggdGhlaXIgdmlnaWxhbmNlIGZvciB0aGUKCQkJCQljb25zdGl0dXRpb24gbGlrZSBhIHdhdGNoIGluIHRoZSBuaWdodCwgYW5kIHRoZXkgbXVzdCBtYWtlIHRoZSBkaXN0YW50IG5lYXIuCgkJCQkJQWdhaW4sIHRoZXkgbXVzdCBhbHNvIGVuZGVhdm9yIHRvIGd1YXJkIGFnYWluc3QgdGhlIHF1YXJyZWxzIGFuZCBwYXJ0eSBzdHJ1Z2dsZXMKCQkJCQlvZiB0aGUgbm90YWJsZXMgYnkgbWVhbnMgb2YgbGVnaXNsYXRpb24sIGFuZCB0byBrZWVwIG91dCB0aG9zZSB3aG8gYXJlIG91dHNpZGUKCQkJCQl0aGUgcXVhcnJlbCBiZWZvcmUgdGhleSB0b28gaGF2ZSB0YWtlbiBpdCBvdmVyOyBzaW5jZSB0byBkaXNjZXJuIGEgZ3Jvd2luZyBldmlsCgkJCQkJYXQgdGhlIGNvbW1lbmNlbWVudCBpcyBub3QgYW55IG9yZGluYXJ5IHBlcnNvbidzIHdvcmsgYnV0IG5lZWRzIGEgc3RhdGVzbWFuLgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB0byBkZWFsIHdpdGggdGhlIHJldm9sdXRpb24KCQkJCQlmcm9tIG9saWdhcmNoeSBhbmQgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCB0aGF0IGFyaXNlcyBiZWNhdXNlIG9mIHRoZQoJCQkJCXByb3BlcnR5LXF1YWxpZmljYXRpb25zLCB3aGVuIHRoaXMgb2NjdXJzIHdoaWxlIHRoZSByYXRlcyBvZiBxdWFsaWZpY2F0aW9uCgkJCQkJcmVtYWluIHRoZSBzYW1lIGJ1dCBtb25leSBpcyBiZWNvbWluZyBwbGVudGlmdWwsIGl0IGlzIGFkdmFudGFnZW91cyB0byBleGFtaW5lCgkJCQkJdGhlIHRvdGFsIGFtb3VudCBvZiB0aGUgcmF0ZWQgdmFsdWUgb2YgdGhlIGNvbW11bml0eSBhcyBjb21wYXJlZCB3aXRoIHRoZSBwYXN0CgkJCQkJYW1vdW50LCBpbiBzdGF0ZXMgd2hlcmUgdGhlIGFzc2Vzc21lbnQgaXMgbWFkZSB5ZWFybHksIG92ZXIgdGhhdCBwZXJpb2QsCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzA4YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1308b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aHJlZSB5ZWFycyBvciBmaXZlIHllYXJzIGFnbyBpbiB0aGUgbGFyZ2VyIHN0YXRlcywgYW5kIGlmCgkJCQkJdGhlIG5ldyB0b3RhbCBpcyBtYW55IHRpbWVzIGxhcmdlciBvciBtYW55IHRpbWVzIHNtYWxsZXIgdGhhbiB0aGUgZm9ybWVyIG9uZSBhdAoJCQkJCXRoZSB0aW1lIHdoZW4gdGhlIHJhdGVzIHF1YWxpZnlpbmcgZm9yIGNpdGl6ZW5zaGlwIHdlcmUgZml4ZWQsIGl0IGlzCgkJCQkJYWR2YW50YWdlb3VzIHRoYXQgdGhlcmUgc2hvdWxkIGJlIGEgbGF3IGZvciB0aGUgbWFnaXN0cmF0ZXMgY29ycmVzcG9uZGluZ2x5IHRvCgkJCQkJdGlnaHRlbiB1cCBvciB0byByZWxheCB0aGUgcmF0ZXMsIHRpZ2h0ZW5pbmcgdGhlbSB1cCBpbiBwcm9wb3J0aW9uIHRvIHRoZSByYXRpbwoJCQkJCW9mIGluY3JlYXNlIGlmIHRoZSBuZXcgdG90YWwgcmF0ZWQgdmFsdWUgZXhjZWVkcyB0aGUgb2xkLCBhbmQgcmVsYXhpbmcgdGhlbSBhbmQKCQkJCQltYWtpbmcgdGhlIHF1YWxpZmljYXRpb24gbG93ZXIgaWYgdGhlIG5ldyB0b3RhbCBmYWxscyBiZWxvdyB0aGUgb2xkLiA8L3RyYW5zbGF0aW9uPg=="
translation['5.1308b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy43IiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIGluIG9saWdhcmNoaWVzIGFuZCBjb25zdGl0dXRpb25hbAoJCQkJCXN0YXRlcywgd2hlbiB0aGV5IGRvIG5vdCBkbyB0aGlzLCBpbiB0aGUgb25lIGNhc2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBpZiB0aGUgdG90YWwgdmFsdWF0aW9uIGhhcyBkZWNyZWFzZWQuPC9ub3RlPiB0aGUgcmVzdWx0CgkJCQkJaXMgdGhhdCBpbiB0aGUgbGF0dGVyIGFuIG9saWdhcmNoeSBjb21lcyBpbnRvIGV4aXN0ZW5jZSBhbmQgaW4gdGhlIGZvcm1lciBhCgkJCQkJZHluYXN0eSwgYW5kIGluIHRoZSBvdGhlciBjYXNlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gaWYgdGhlCgkJCQkJCXRvdGFsIGhhcyBpbmNyZWFzZWQuPC9ub3RlPiBhIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQgdHVybnMgaW50byBhCgkJCQkJZGVtb2NyYWN5IGFuZCBhbiBvbGlnYXJjaHkgaW50byBhIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQgb3IgYSBnb3Zlcm5tZW50IG9mCgkJCQkJdGhlIHBlb3BsZS4gQnV0IGl0IGlzIGEgcG9saWN5IGNvbW1vbiB0byBkZW1vY3JhY3kgYW5kIG9saWdhcmNoeSBbYW5kCgkJCQkJdG8gbW9uYXJjaHldLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Tb21lIE1TUy4gYW5kIG1hbnkKCQkJCQkJZWRpdG9ycyBvbWl0IHRoZXNlIHdvcmRzLjwvbm90ZT4gYW5kIGV2ZXJ5IGZvcm0gb2YgY29uc3RpdHV0aW9uIG5vdCB0byByYWlzZQoJCQkJCXVwIGFueSBtYW4gdG9vIG11Y2ggYmV5b25kIGR1ZSBwcm9wb3J0aW9uLCBidXQgcmF0aGVyIHRvIHRyeSB0byBhc3NpZ24gc21hbGwKCQkJCQlob25vcnMgYW5kIG9mIGxvbmcgdGVudXJlIG9yIGdyZWF0IG9uZXMgcXVpY2tseTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgdGV4dCBzaG91bGQgcHJvYmFibHkgYmUgZW1lbmRlZCDigJh3aXRoIGEgc2hvcnQKCQkJCQkJdGVudXJlLuKAmTwvbm90ZT4g77yIZm9yIG9mZmljaWFscyBncm93IGNvcnJ1cHQsIGFuZCBub3QKCQkJCQlldmVyeSBtYW4gY2FuIGJlYXIgZ29vZCBmb3J0dW5l77yJLCBvciBpZiBub3QsIGF0IGFsbCBldmVudHMgbm90IHRvCgkJCQkJYmVzdG93IGhvbm9ycyBpbiBjbHVzdGVycyBhbmQgdGFrZSB0aGVtIGF3YXkgYWdhaW4gaW4gY2x1c3RlcnMsIGJ1dCBieSBhIGdyYWR1YWwKCQkJCQlwcm9jZXNzOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBiZXN0IG9mIGFsbCB0byB0cnkgc28KCQkJCQl0byByZWd1bGF0ZSBwZW9wbGUgYnkgdGhlIGxhdyB0aGF0IHRoZXJlIG1heSBiZSBub2JvZHkgYW1vbmcgdGhlbSBzcGVjaWFsbHkKCQkJCQlwcmUtZW1pbmVudCBpbiBwb3dlciBkdWUgdG8gZnJpZW5kcyBvciB3ZWFsdGgsIG9yLCBmYWlsaW5nIHRoaXMsIHRvIGNhdXNlIHRoZWlyCgkJCQkJcGVyaW9kcyBvdXQgb2Ygb2ZmaWNlIHRvIGJlIHNwZW50IGFicm9hZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+QW5kIHNpbmNlIG1lbiBhbHNvIGNhdXNlIHJldm9sdXRpb25zIHRocm91Z2ggdGhlaXIgcHJpdmF0ZQoJCQkJCWxpdmVzLCBzb21lIG1hZ2lzdHJhY3kgbXVzdCBiZSBzZXQgdXAgdG8gaW5zcGVjdCB0aG9zZSB3aG9zZSBtb2RlIG9mIGxpdmluZyBpcwoJCQkJCXVuc3VpdGVkIHRvIHRoZSBjb25zdGl0dXRpb27igJR1bnN1aXRlZCB0byBkZW1vY3JhY3kgaW4gYSBkZW1vY3JhY3ksIHRvCgkJCQkJb2xpZ2FyY2h5IGluIGFuIG9saWdhcmNoeSwgYW5kIHNpbWlsYXJseSBmb3IgZWFjaCBvZiB0aGUgb3RoZXIgZm9ybXMgb2YKCQkJCQljb25zdGl0dXRpb24uIEFuZCBhbHNvIHNlY3Rpb25hbCBwcm9zcGVyaXR5IGluIHRoZSBzdGF0ZSBtdXN0IGJlIGd1YXJkZWQgYWdhaW5zdAoJCQkJCWZvciB0aGUgc2FtZSByZWFzb25zOyBhbmQgdGhlIHdheSB0byBhdmVydCB0aGlzIGlzIGFsd2F5cyB0byBlbnRydXN0IGJ1c2luZXNzCgkJCQkJYW5kIG9mZmljZSB0byB0aGUgb3Bwb3NpdGUgc2VjdGlvbnMg77yISSBtZWFuIHRoYXQgdGhlIHJlc3BlY3RhYmxlIGFyZQoJCQkJCW9wcG9zaXRlIHRvIHRoZSBtdWx0aXR1ZGUgYW5kIHRoZSBwb29yIHRvIHRoZSB3ZWFsdGh577yJLCBhbmQgdG8gZW5kZWF2b3IKCQkJCQllaXRoZXIgdG8gbWluZ2xlIHRvZ2V0aGVyIHRoZSBtdWx0aXR1ZGUgb2YgdGhlIHBvb3IgYW5kIHRoYXQgb2YgdGhlIHdlYWx0aHkgb3IKCQkJCQl0byBpbmNyZWFzZSB0aGUgbWlkZGxlIGNsYXNzIO+8iGZvciB0aGlzIGRpc3NvbHZlcyBwYXJ0eSBmYWN0aW9ucyBkdWUgdG8KCQkJCQlpbmVxdWFsaXR577yJLiA8L3RyYW5zbGF0aW9uPg=="
translation['5.1309a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy45IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGluIGV2ZXJ5CgkJCQkJZm9ybSBvZiBjb25zdGl0dXRpb24gaXQgaXMgYSB2ZXJ5IGdyZWF0IHRoaW5nIGZvciBpdCB0byBiZSBzbyBmcmFtZWQgYm90aCBieSBpdHMKCQkJCQlsYXdzIGFuZCBieSBpdHMgb3RoZXIgaW5zdGl0dXRpb25zIHRoYXQgaXQgaXMgaW1wb3NzaWJsZSBmb3IgdGhlIG1hZ2lzdHJhY2llcyB0bwoJCQkJCW1ha2UgYSBwcm9maXQuIEFuZCB0aGlzIGhhcyBtb3N0IHRvIGJlIGd1YXJkZWQgYWdhaW5zdCBpbiBvbGlnYXJjaGllczsgZm9yIHRoZQoJCQkJCW1hbnkgYXJlIG5vdCBzbyBtdWNoIGFubm95ZWQgYXQgYmVpbmcgZXhjbHVkZWQgZnJvbSBob2xkaW5nIG9mZmljZSDvvIhidXQKCQkJCQlpbiBmYWN0IHRoZXkgYXJlIGdsYWQgaWYgc29tZWJvZHkgbGV0cyB0aGVtIGhhdmUgbGVpc3VyZSB0byBzcGVuZCBvbiB0aGVpciBvd24KCQkJCQlhZmZhaXJz77yJIGFzIHRoZXkgYXJlIGlmIHRoZXkgdGhpbmsgdGhhdCB0aGUgbWFnaXN0cmF0ZXMgYXJlIHN0ZWFsaW5nCgkJCQkJdGhlIGNvbW1vbiBmdW5kcywgYnV0IHRoZW4gYm90aCB0aGluZ3MgYW5ub3kgdGhlbSwgZXhjbHVzaW9uIGZyb20gdGhlIGhvbm9ycyBvZgoJCQkJCW9mZmljZSBhbmQgZXhjbHVzaW9uIGZyb20gaXRzIHByb2ZpdHMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpbmRlZWQgdGhlIHNvbGUgd2F5IGluIHdoaWNoIGEgY29tYmluYXRpb24gb2YKCQkJCQlkZW1vY3JhY3kgYW5kIGFyaXN0b2NyYWN5IGlzIHBvc3NpYmxlIGlzIGlmIHNvbWVvbmUgY291bGQgY29udHJpdmUgdGhpcwoJCQkJCQlhcnJhbmdlbWVudDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHJlbmRlciBpdCBpbXBvc3NpYmxlIHRvCgkJCQkJCW1ha2UgbW9uZXkgb3V0IG9mIG9mZmljZTwvbm90ZT47IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzA5YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1309a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBpdCB3b3VsZCB0aGVuIGJlIHBvc3NpYmxlCgkJCQkJZm9yIHRoZSBub3RhYmxlcyBhbmQgYWxzbyB0aGUgbXVsdGl0dWRlIGJvdGggdG8gaGF2ZSB3aGF0IHRoZXkgd2FudDsgZm9yIGl0IGlzCgkJCQkJdGhlIGRlbW9jcmF0aWMgcHJpbmNpcGxlIGZvciBhbGwgdG8gaGF2ZSB0aGUgcmlnaHQgdG8gaG9sZCBvZmZpY2UgYW5kIHRoZQoJCQkJCWFyaXN0b2NyYXRpYyBvbmUgZm9yIHRoZSBvZmZpY2VzIHRvIGJlIGZpbGxlZCBieSB0aGUgbm90YWJsZXMsIGFuZCB0aGlzIHdpbGwgYmUKCQkJCQl0aGUgY2FzZSB3aGVuIGl0IGlzIGltcG9zc2libGUgdG8gbWFrZSBtb25leSBmcm9tIG9mZmljZTsgZm9yIHRoZSBwb29yIHdpbGwgbm90CgkJCQkJd2FudCB0byBob2xkIG9mZmljZSBiZWNhdXNlIG9mIG1ha2luZyBub3RoaW5nIG91dCBvZiBpdCwgYnV0IHJhdGhlciB0byBhdHRlbmQgdG8KCQkJCQl0aGVpciBvd24gYWZmYWlycywgd2hpbGUgdGhlIHdlYWx0aHkgd2lsbCBiZSBhYmxlIHRvIGhvbGQgb2ZmaWNlIGJlY2F1c2UgdGhleQoJCQkJCWhhdmUgbm8gbmVlZCB0byBhZGQgdG8gdGhlaXIgcmVzb3VyY2VzIGZyb20gdGhlIHB1YmxpYyBmdW5kczsgc28gdGhhdCB0aGUgcmVzdWx0CgkJCQkJd2lsbCBiZSB0aGF0IHRoZSBwb29yIHdpbGwgYmVjb21lIHdlbGwtb2ZmIHRocm91Z2ggc3BlbmRpbmcgdGhlaXIgdGltZSB1cG9uCgkJCQkJdGhlaXIgd29yaywgYW5kIHRoZSBub3RhYmxlcyB3aWxsIG5vdCBiZSBnb3Zlcm5lZCBieSBhbnkgY2FzdWFsIHBlcnNvbnMuCgkJCQkJCTwvdHJhbnNsYXRpb24+"
translation['5.1309a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXJlZm9yZSB0byBwcmV2ZW50IHBlY3VsYXRpb24KCQkJCQlvZiB0aGUgcHVibGljIHByb3BlcnR5LCBsZXQgdGhlIHRyYW5zZmVyIG9mIHRoZSBmdW5kcyB0YWtlIHBsYWNlIGluIHRoZSBwcmVzZW5jZQoJCQkJCW9mIGFsbCB0aGUgY2l0aXplbnMsIGFuZCBsZXQgY29waWVzIG9mIHRoZSBsaXN0cyBiZSBkZXBvc2l0ZWQgZm9yIGVhY2gKCQkJCQkJYnJvdGhlcmhvb2QsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkdyb3VwcyBvZiBjaXRpemVucyBub3JtYWxseQoJCQkJCQl0aHJlZSB0byBhIHRyaWJlLCBzdXBwb3NlZCB0byBiZSBiYXNlZCBvbiByZWxhdGlvbnNoaXAuPC9ub3RlPiBjb21wYW55PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yaWdpbmFsbHkgYSBtaWxpdGFyeSwgbGF0ZXIgYSBjaXZpbAoJCQkJCQljbGFzc2lmaWNhdGlvbi48L25vdGU+IGFuZCB0cmliZTsgYW5kIHRvIGdldCBtZW4gdG8gaG9sZCBvZmZpY2Ugd2l0aG91dAoJCQkJCXByb2ZpdCB0aGVyZSBtdXN0IGJlIGhvbm9ycyBhc3NpZ25lZCBieSBsYXcgdG8gb2ZmaWNpYWxzIG9mIGdvb2QgcmVwdXRlLiBBbmQgaW4KCQkJCQlkZW1vY3JhY2llcyBpdCBpcyBuZWNlc3NhcnkgdG8gYmUgc3BhcmluZyBvZiB0aGUgd2VhbHRoeSBub3Qgb25seSBieSBub3QgY2F1c2luZwoJCQkJCXByb3BlcnRpZXMgdG8gYmUgZGl2aWRlZCB1cCwgYnV0IG5vdCBpbmNvbWVzIGVpdGhlciDvvIh3aGljaCB1bmRlciBzb21lCgkJCQkJY29uc3RpdHV0aW9ucyB0YWtlcyBwbGFjZSB1bm5vdGljZWTvvIksIGFuZCBpdCBpcyBiZXR0ZXIgdG8gcHJldmVudCBtZW4KCQkJCQlmcm9tIHVuZGVydGFraW5nIGNvc3RseSBidXQgdXNlbGVzcyBwdWJsaWMgc2VydmljZXMgbGlrZSBlcXVpcHBpbmcgY2hvcnVzZXMgYW5kCgkJCQkJCXRvcmNoLXJhY2VzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkVxdWlwcGluZyB0aGUgY2hvcnVzIGFuZAoJCQkJCQlhY3RvcnMgZm9yIHRyYWdlZGllcyBhbmQgY29tZWRpZXMgYW5kIHByb3ZpZGluZyBmb3IgdGhlIGNlcmVtb25pYWwKCQkJCQkJdG9yY2gtcmFjZXMgd2VyZSBwdWJsaWMgc2VydmljZXMgYm9ybmUgYnkgaW5kaXZpZHVhbHMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+Ljwvbm90ZT4gYW5kIGFsbCBvdGhlciBzaW1pbGFyCgkJCQkJc2VydmljZXMsIGV2ZW4gaWYgdGhleSB3aXNoIHRvOzxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PC90cmFuc2xhdGlvbj4="
translation['5.1309b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmluIGFuIG9saWdhcmNoeSBvbiB0aGUgb3RoZXIKCQkJCQloYW5kIGl0IGlzIG5lY2Vzc2FyeSB0byB0YWtlIG11Y2ggY2FyZSBvZiB0aGUgcG9vciwgYW5kIHRvIGFsbG90IHRvIHRoZW0gdGhlCgkJCQkJb2ZmaWNlcyBvZiBwcm9maXQsIGFuZCB0aGUgcGVuYWx0eSBpZiBvbmUgb2YgdGhlIHJpY2ggY29tbWl0cyBhbiBvdXRyYWdlIGFnYWluc3QKCQkJCQl0aGVtIG11c3QgYmUgZ3JlYXRlciB0aGFuIGlmIGl0IGlzIGRvbmUgYnkgb25lIG9mIHRoZW1zZWx2ZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yIHBvc3NpYmx5IOKAmHRoYW4gaWYgaGUgZG9lcyBpdAoJCQkJCQlhZ2FpbnN0IG9uZSBvZiBoaXMgb3duIGNsYXNzLuKAmTwvbm90ZT4gYW5kIGluaGVyaXRhbmNlIG11c3Qgbm90IGdvCgkJCQkJYnkgYmVxdWVzdCBidXQgYnkgZmFtaWx5LCBhbmQgdGhlIHNhbWUgbWFuIG11c3Qgbm90IGluaGVyaXQgbW9yZSB0aGFuIG9uZQoJCQkJCWVzdGF0ZSwgZm9yIHNvIGVzdGF0ZXMgd291bGQgYmUgbW9yZSBvbiBhIGxldmVsLCBhbmQgbW9yZSBvZiB0aGUgcG9vciB3b3VsZAoJCQkJCWVzdGFibGlzaCB0aGVtc2VsdmVzIGFzIHByb3NwZXJvdXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpdCBpcyBleHBlZGllbnQgYm90aCBpbiBhIGRlbW9jcmFjeSBhbmQgaW4gYW4gb2xpZ2FyY2h5IHRvIGFzc2lnbiB0byB0aG9zZQoJCQkJCXdobyBoYXZlIGEgc21hbGxlciBzaGFyZSBpbiB0aGUgZ292ZXJubWVudOKAlGluIGEgZGVtb2NyYWN5IHRvIHRoZQoJCQkJCXdlYWx0aHkgYW5kIGluIGFuIG9saWdhcmNoeSB0byB0aGUgcG9vcuKAlGVpdGhlciBlcXVhbGl0eSBvciBwcmVjZWRlbmNlCgkJCQkJaW4gYWxsIG90aGVyIHRoaW5ncyBleGNlcHRpbmcgdGhlIHN1cHJlbWUgb2ZmaWNlcyBvZiBzdGF0ZTsgYnV0IHRoZXNlIHNob3VsZCBiZQoJCQkJCWVudHJ1c3RlZCB0byB0aG9zZSBwcmVzY3JpYmVkIGJ5IHRoZSBjb25zdGl0dXRpb24gZXhjbHVzaXZlbHksIG9yIHRvIHRoZW0gZm9yCgkJCQkJdGhlIG1vc3QgcGFydC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmUgYXJlIHNvbWUgdGhyZWUgcXVhbGl0aWVzIHdoaWNoIHRob3NlIHdobyBhcmUgdG8gaG9sZCB0aGUKCQkJCQlzdXByZW1lIG1hZ2lzdHJhY2llcyBvdWdodCB0byBwb3NzZXNzLCBmaXJzdCwgbG95YWx0eSB0byB0aGUgZXN0YWJsaXNoZWQKCQkJCQljb25zdGl0dXRpb24sIG5leHQsIHZlcnkgZ3JlYXQgY2FwYWNpdHkgdG8gZG8gdGhlIGR1dGllcyBvZiB0aGUgb2ZmaWNlLCBhbmQKCQkJCQl0aGlyZCwgdmlydHVlIGFuZCBqdXN0aWNl4oCUaW4gZWFjaCBjb25zdGl0dXRpb24gdGhlIHNvcnQgb2YganVzdGljZQoJCQkJCXN1aXRlZCB0byB0aGUgY29uc3RpdHV0aW9uIO+8iGZvciBpZiB0aGUgcnVsZXMgb2YganVzdGljZSBhcmUgbm90IHRoZQoJCQkJCXNhbWUgdW5kZXIgYWxsIGNvbnN0aXR1dGlvbnMsIGl0IGZvbGxvd3MgdGhhdCB0aGVyZSBtdXN0IGJlIGRpZmZlcmVuY2VzIGluIHRoZQoJCQkJCW5hdHVyZSBvZiBqdXN0aWNlIGFsc2/vvIkuIEl0IGlzIGEgZGlmZmljdWx0IHF1ZXN0aW9uIGhvdyB0aGUgY2hvaWNlCgkJCQkJb3VnaHQgdG8gYmUgbWFkZSB3aGVuIGl0IGhhcHBlbnMgdGhhdCBhbGwgdGhlc2UgcXVhbGl0aWVzIGFyZSBub3QgZm91bmQgaW4gdGhlCgkJCQkJc2FtZSBwZXJzb247IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzA5YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1309b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBpbnN0YW5jZSwgaWYgb25lIG1hbiBpcyBhIGdvb2QgbWlsaXRhcnkgY29tbWFuZGVyIGJ1dCBhIGJhZAoJCQkJCW1hbiBhbmQgbm8gZnJpZW5kIG9mIHRoZSBjb25zdGl0dXRpb24sIGFuZCB0aGUgb3RoZXIgaXMganVzdCBhbmQgbG95YWwsIGhvdwoJCQkJCXNob3VsZCB0aGUgY2hvaWNlIGJlIG1hZGU/IDwvdHJhbnNsYXRpb24+"
translation['5.1309b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IHNlZW1zCgkJCQkJdGhhdCB0d28gdGhpbmdzIG91Z2h0IHRvIGJlIGNvbnNpZGVyZWQsIHdoYXQgaXMgdGhlIHF1YWxpdHkgb2Ygd2hpY2ggYWxsIG1lbgoJCQkJCWhhdmUgYSBsYXJnZXIgc2hhcmUsIGFuZCB3aGF0IHRoZSBvbmUgb2Ygd2hpY2ggYWxsIGhhdmUgYSBzbWFsbGVyIHNoYXJlPwoJCQkJCVRoZXJlZm9yZSBpbiB0aGUgY2FzZSBvZiBtaWxpdGFyeSBjb21tYW5kIG9uZSBtdXN0IGNvbnNpZGVyIGV4cGVyaWVuY2UgbW9yZSB0aGFuCgkJCQkJdmlydHVlLCBmb3IgbWVuIGhhdmUgYSBzbWFsbGVyIHNoYXJlIG9mIG1pbGl0YXJ5IGV4cGVyaWVuY2UgYW5kIGEgbGFyZ2VyIHNoYXJlCgkJCQkJb2YgbW9yYWwgZ29vZG5lc3M7IGJ1dCBpbiB0aGUgY2FzZSBvZiBhIHRydXN0ZWVzaGlwIG9yIGEgc3Rld2FyZHNoaXAgdGhlCgkJCQkJb3Bwb3NpdGUsIGZvciB0aGVzZSByZXF1aXJlIG1vcmUgdmlydHVlIHRoYW4gbW9zdCBtZW4gcG9zc2VzcywgYnV0IHRoZSBrbm93bGVkZ2UKCQkJCQlyZXF1aXJlZCBpcyBjb21tb24gdG8gYWxsIG1lbi4gQW5kIHNvbWVib2R5IG1pZ2h0IHJhaXNlIHRoZSBxdWVzdGlvbiwgd2h5IGlzCgkJCQkJdmlydHVlIG5lZWRlZCBpZiBib3RoIGNhcGFjaXR5IGFuZCBsb3lhbHR5IHRvIHRoZSBjb25zdGl0dXRpb24gYXJlIGZvcnRoY29taW5nLAoJCQkJCWFzIGV2ZW4gdGhlc2UgdHdvIHF1YWxpdGllcyB3aWxsIGRvIHdoYXQgaXMgc3VpdGFibGU/IE1heSBub3QgdGhlIGFuc3dlciBiZSwKCQkJCQliZWNhdXNlIHRob3NlIHdobyBwb3NzZXNzIHRoZXNlIHR3byBxdWFsaXRpZXMgbWF5IHBvc3NpYmx5IGxhY2sgc2VsZi1jb250cm9sLCBzbwoJCQkJCXRoYXQganVzdCBhcyB0aGV5IGRvIG5vdCBzZXJ2ZSB0aGVtc2VsdmVzIHdlbGwgYWx0aG91Z2ggdGhleSBrbm93IGhvdyB0byBhbmQKCQkJCQlhbHRob3VnaCB0aGV5IGxvdmUgdGhlbXNlbHZlcywgc28gcG9zc2libHkgaW4gc29tZSBjYXNlcyB0aGV5IG1heSBiZWhhdmUgaW4gdGhpcwoJCQkJCXdheSBpbiByZWdhcmQgdG8gdGhlIGNvbW11bml0eSBhbHNvPyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMTYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgYnJvYWRseSwgd2hhdGV2ZXIgcHJvdmlzaW9ucyBpbiB0aGUgbGF3cyB3ZSBkZXNjcmliZSBhcyBhZHZhbnRhZ2VvdXMgdG8KCQkJCQljb25zdGl0dXRpb25zLCB0aGVzZSBhcmUgYWxsIHByZXNlcnZhdGl2ZSBvZiB0aGUgY29uc3RpdHV0aW9ucywgYW5kIHNvIGlzIHRoZQoJCQkJCXN1cHJlbWUgZWxlbWVudGFyeSBwcmluY2lwbGUgdGhhdCBoYXMgYmVlbiBvZnRlbiBzdGF0ZWQsIHRoYXQgb2YgdGFraW5nCgkJCQkJcHJlY2F1dGlvbnMgdGhhdCB0aGUgc2VjdGlvbiBkZXNpcm91cyBvZiB0aGUgY29uc3RpdHV0aW9uIHNoYWxsIGJlIHN0cm9uZ2VyIGluCgkJCQkJbnVtYmVycyB0aGFuIHRoZSBzZWN0aW9uIG5vdCBkZXNpcm91cyBvZmYgaXQuIEFuZCBiZXNpZGUgYWxsIHRoZXNlIG1hdHRlcnMgb25lCgkJCQkJdGhpbmcgbXVzdCBub3QgYmUgb3Zlcmxvb2tlZCB3aGljaCBhdCBwcmVzZW50IGlzIG92ZXJsb29rZWQgYnkgdGhlLAoJCQkJCQlkZXZpYXRpb24tZm9ybXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEyNzlhIDIwLjwvbm90ZT4gb2YKCQkJCQljb25zdGl0dXRpb27igJR0aGUgbWlkZGxlIHBhcnR5OzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3IgbWFueSBvZiB0aGUgaW5zdGl0dXRpb25zIHRob3VnaHQgdG8gYmUgcG9wdWxhciBkZXN0cm95CgkJCQkJZGVtb2NyYWNpZXMsIGFuZCBtYW55IG9mIHRob3NlIHRob3VnaHQgb2xpZ2FyY2hpY2FsIGRlc3Ryb3kgb2xpZ2FyY2hpZXMuCgkJCQkJCTwvdHJhbnNsYXRpb24+"
translation['5.1310a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGUgYWRoZXJlbnRzIG9mIHRoZQoJCQkJCWRldmlhdGlvbi1mb3JtLCB0aGlua2luZyB0aGF0IHRoaXMgZm9ybSBpcyB0aGUgb25seSByaWdodCB0aGluZywgZHJhZyBpdCB0bwoJCQkJCWV4Y2Vzcywgbm90IGtub3dpbmcgdGhhdCBqdXN0IGFzIHRoZXJlIGNhbiBiZSBhIG5vc2UgdGhhdCBhbHRob3VnaCBkZXZpYXRpbmcKCQkJCQlmcm9tIHRoZSBtb3N0IGhhbmRzb21lIHN0cmFpZ2h0bmVzcyB0b3dhcmRzIGJlaW5nIGhvb2tlZCBvciBzbnViIG5ldmVydGhlbGVzcyBpcwoJCQkJCXN0aWxsIGJlYXV0aWZ1bCBhbmQgYWdyZWVhYmxlIHRvIGxvb2sgYXQsIHlldCBhbGwgdGhlIHNhbWUsIGlmIGEgc2N1bHB0b3IKCQkJCQljYXJyaWVzIGl0IHN0aWxsIGZ1cnRoZXIgaW4gdGhlIGRpcmVjdGlvbiBvZiBleGNlc3MsIGhlIHdpbGwgZmlyc3QgbG9zZSB0aGUKCQkJCQlzeW1tZXRyeSBvZiB0aGUgZmVhdHVyZSBhbmQgZmluYWxseSB3aWxsIG1ha2UgaXQgbm90IGV2ZW4gbG9vayBsaWtlIGEgbm9zZSBhdAoJCQkJCWFsbCwgYmVjYXVzZSBvZiBpdHMgZXhjZXNzIGFuZCBkZWZpY2llbmN5IGluIHRoZSB0d28gb3Bwb3NpdGUgcXVhbGl0aWVzCgkJCQkJ77yIYW5kIHRoZSBzYW1lIGlzIHRoZSBlYXNlIGFsc28gaW4gcmVnYXJkIHRvIHRoZSBvdGhlciBwYXJ0cyBvZiB0aGUKCQkJCQlib2R577yJLCBzbyB0aGlzIGlzIHdoYXQgaGFwcGVucyBhYm91dCBjb25zdGl0dXRpb25zIGxpa2V3aXNlOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMTgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5mb3IgaXQgaXMgcG9zc2libGUgZm9yIGFuIG9saWdhcmNoeSBhbmQgYQoJCQkJCWRlbW9jcmFjeSB0byBiZSBzYXRpc2ZhY3RvcnkgYWx0aG91Z2ggdGhleSBoYXZlIGRpdmVyZ2VkIGZyb20gdGhlIGJlc3QKCQkJCQlzdHJ1Y3R1cmUsIGJ1dCBpZiBvbmUgc3RyYWlucyBlaXRoZXIgb2YgdGhlbSBmdXJ0aGVyLCBmaXJzdCBoZSB3aWxsIG1ha2UgdGhlCgkJCQkJY29uc3RpdHV0aW9uIHdvcnNlLCBhbmQgZmluYWxseSBoZSB3aWxsIG1ha2UgaXQgbm90IGEgY29uc3RpdHV0aW9uIGF0IGFsbC4KCQkJCQlUaGVyZWZvcmUgdGhlIGxlZ2lzbGF0b3IgYW5kIHRoZSBzdGF0ZXNtYW4gbXVzdCBub3QgZmFpbCB0byBrbm93IHdoYXQgc29ydCBvZgoJCQkJCWRlbW9jcmF0aWMgaW5zdGl0dXRpb25zIHNhdmUgYW5kIHdoYXQgZGVzdHJveSBhIGRlbW9jcmFjeSwgYW5kIHdoYXQgc29ydCBvZgoJCQkJCW9saWdhcmNoaWNhbCBpbnN0aXR1dGlvbnMgYW4gb2xpZ2FyY2h5OyBmb3IgbmVpdGhlciBjb25zdGl0dXRpb24gY2FuIGV4aXN0IGFuZAoJCQkJCWVuZHVyZSB3aXRob3V0IHRoZSB3ZWxsLXRvLWRvIGFuZCB0aGUgbXVsdGl0dWRlLCBidXQgd2hlbiBhbiBldmVuIGxldmVsIG9mCgkJCQkJcHJvcGVydHkgY29tZXMgYWJvdXQsIHRoZSBjb25zdGl0dXRpb24gcmVzdWx0aW5nIG11c3Qgb2YgbmVjZXNzaXR5IGJlIGFub3RoZXIKCQkJCQlvbmUsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzEwYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1310a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnNvIHRoYXQgd2hlbiBtZW4gZGVzdHJveSB0aGVzZSBjbGFzc2VzIGJ5IGxhd3MgY2FycmllZCB0bwoJCQkJCWV4Y2VzcyB0aGV5IGRlc3Ryb3kgdGhlIGNvbnN0aXR1dGlvbnMuIDwvdHJhbnNsYXRpb24+"
translation['5.1310a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhIG1pc3Rha2UgaXMgbWFkZSBib3RoIGluIGRlbW9jcmFjaWVzIGFuZCBpbgoJCQkJCW9saWdhcmNoaWVz4oCUaW4gZGVtb2NyYWNpZXMgYnkgdGhlIGRlbWFnb2d1ZXMsIHdoZXJlIHRoZSBtdWx0aXR1ZGUgaXMKCQkJCQlzdXByZW1lIG92ZXIgdGhlIGxhd3M7IGZvciB0aGV5IGFsd2F5cyBkaXZpZGUgdGhlIHN0YXRlIGludG8gdHdvIGJ5IGZpZ2h0aW5nCgkJCQkJd2l0aCB0aGUgd2VsbC10by1kbywgYnV0IHRoZXkgb3VnaHQgb24gdGhlIGNvbnRyYXJ5IGFsd2F5cyB0byBwcmV0ZW5kIHRvIGJlCgkJCQkJc3BlYWtpbmcgb24gYmVoYWxmIG9mIG1lbiB0aGF0IGFyZSB3ZWxsLXRvLWRvLCB3aGlsZSBpbiBkZW1vY3JhY2llcyB0aGUKCQkJCQlvbGlnYXJjaGljYWwgc3RhdGVzbWVuIG91Z2h0IHRvIHByZXRlbmQgdG8gYmUgc3BlYWtpbmcgb24gYmVoYWxmIG9mIHRoZSBwZW9wbGUsCgkJCQkJYW5kIHRoZSBvbGlnYXJjaGljcyBvdWdodCB0byB0YWtlIG9hdGggaW4gdGVybXMgZXhhY3RseSBvcHBvc2l0ZSB0byB0aG9zZSB3aGljaAoJCQkJCXRoZXkgdXNlIG5vdywgZm9yIGF0IHByZXNlbnQgaW4gc29tZSBvbGlnYXJjaGllcyB0aGV5IHN3ZWFyLCDigJxBbmQgSQoJCQkJCXdpbGwgYmUgaG9zdGlsZSB0byB0aGUgcGVvcGxlIGFuZCB3aWxsIHBsYW4gd2hhdGV2ZXIgZXZpbCBJIGNhbiBhZ2FpbnN0CgkJCQkJCXRoZW0s4oCdPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSDigJhzY29mZmluZwoJCQkJCQlhbmFwYWVzdGljIGNhZGVuY2XigJkgb2YgdGhpcyBvYXRoIGhhcyBiZWVuIG5vdGVkLiBJbiA8ZGF0ZSBhdXRobmFtZT0iLTQxMSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMSI+NDExPC9kYXRlPiBCLkMuIHRoZSBkZW1vY3JhdGljIHJlYWN0aW9uIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBzd29yZSDigJh0byBiZSBlbmVtaWVzCgkJCQkJCW9mIHRoZSBGb3VyIEh1bmRyZWQgYW5kIHRvIGhvbGQgbm8gcGFybGV5IHdpdGggdGhlbS7igJk8L25vdGU+IGJ1dAoJCQkJCXRoZXkgb3VnaHQgdG8gaG9sZCwgYW5kIHRvIGFjdCB0aGUgcGFydCBvZiBob2xkaW5nLCB0aGUgb3Bwb3NpdGUgbm90aW9uLAoJCQkJCWRlY2xhcmluZyBpbiB0aGVpciBvYXRocywg4oCcSSB3aWxsIG5vdCB3cm9uZyB0aGUgcGVvcGxlLuKAnQoJCQkJCQk8ZGF0ZSBhdXRobmFtZT0iLTQxMSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMSI+NDExPC9kYXRlPiBCLkMuIHRoZSBkZW1vY3JhdGljIHJlYWN0aW9uIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBzd29yZSDigJh0byBiZSBlbmVtaWVzCgkJCQkJCW9mIHRoZSBGb3VyIEh1bmRyZWQgYW5kIHRvIGhvbGQgbm8gcGFybGV5IHdpdGggdGhlbS7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMjAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdGhlIGdyZWF0ZXN0IG9mIGFsbCB0aGUKCQkJCQltZWFucyBzcG9rZW4gb2YgdG8gc2VjdXJlIHRoZSBzdGFiaWxpdHkgb2YgY29uc3RpdHV0aW9ucyBpcyBvbmUgdGhhdCBhdCBwcmVzZW50CgkJCQkJYWxsIHBlb3BsZSBkZXNwaXNlOiBpdCBpcyBhIHN5c3RlbSBvZiBlZHVjYXRpb24gc3VpdGVkIHRvIHRoZSBjb25zdGl0dXRpb25zLiBGb3IKCQkJCQl0aGVyZSBpcyBubyB1c2UgaW4gdGhlIG1vc3QgdmFsdWFibGUgbGF3cywgcmF0aWZpZWQgYnkgdGhlIHVuYW5pbW91cyBqdWRnZW1lbnQKCQkJCQlvZiB0aGUgd2hvbGUgYm9keSBvZiBjaXRpemVucywgaWYgdGhlc2UgYXJlIG5vdCB0cmFpbmVkIGFuZCBlZHVjYXRlZCBpbiB0aGUKCQkJCQljb25zdGl0dXRpb24sIHBvcHVsYXJseSBpZiB0aGUgbGF3cyBhcmUgcG9wdWxhciwgb2xpZ2FyY2hpY2FsbHkgaWYgdGhleSBhcmUKCQkJCQlvbGlnYXJjaGljYWw7IGZvciB0aGVyZSBpcyBzdWNoIGEgdGhpbmcgYXMgd2FudCBvZiBzZWxmLWRpc2NpcGxpbmUgaW4gYSBzdGF0ZSwKCQkJCQlhcyB3ZWxsIGFzIGluIGFuIGluZGl2aWR1YWwuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjIxIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRvCgkJCQkJaGF2ZSBiZWVuIGVkdWNhdGVkPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRvIHN1aXQgdGhlCgkJCQkJY29uc3RpdHV0aW9uIGRvZXMgbm90IG1lYW4gdG8gZG8gdGhlIHRoaW5ncyB0aGF0IGdpdmUgcGxlYXN1cmUgdG8gdGhlIGFkaGVyZW50cwoJCQkJCW9mIG9saWdhcmNoeSBvciB0byB0aGUgc3VwcG9ydGVycyBvZiBkZW1vY3JhY3ksIGJ1dCB0aGUgdGhpbmdzIHRoYXQgd2lsbCBlbmFibGUKCQkJCQl0aGUgZm9ybWVyIHRvIGdvdmVybiBvbGlnYXJjaGljYWxseSBhbmQgdGhlIGxhdHRlciB0byBnb3Zlcm4gdGhlbXNlbHZlcwoJCQkJCWRlbW9jcmF0aWNhbGx5LiBCdXQgYXQgcHJlc2VudCBpbiB0aGUgb2xpZ2FyY2hpZXMgdGhlIHNvbnMgb2YgdGhlIHJ1bGVycyBhcmUKCQkJCQlsdXh1cmlvdXMsIGFuZCB0aGUgc29ucyBvZiB0aGUgYmFkbHktb2ZmIGJlY29tZSB0cmFpbmVkIGJ5IGV4ZXJjaXNlIGFuZCBsYWJvciwKCQkJCQlzbyB0aGF0IHRoZXkgYXJlIGJvdGggbW9yZSBkZXNpcm91cyBvZiByZWZvcm0gYW5kIG1vcmUgYWJsZSB0byBicmluZyBpdCBhYm91dDsKCQkJCQkJPC90cmFuc2xhdGlvbj4="
translation['5.1310b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4yMiIgdW5pdD0iTG9lYiBjaGFwIiAvPndoaWxlIGluIHRoZSBkZW1vY3JhY2llcwoJCQkJCXRob3VnaHQgdG8gYmUgdGhlIG1vc3QgZGVtb2NyYXRpYyB0aGUgb3Bwb3NpdGUgb2Ygd2hhdCBpcyBleHBlZGllbnQgaGFzIGNvbWUKCQkJCQlhYm91dC4gQW5kIHRoZSBjYXVzZSBvZiB0aGlzIGlzIHRoYXQgdGhleSBkZWZpbmUgbGliZXJ0eSB3cm9uZ2x5IO+8iGZvcgoJCQkJCXRoZXJlIGFyZSB0d28gdGhpbmdzIHRoYXQgYXJlIHRob3VnaHQgdG8gYmUgZGVmaW5pbmcgZmVhdHVyZXMgb2YgZGVtb2NyYWN5LCB0aGUKCQkJCQlzb3ZlcmVpZ250eSBvZiB0aGUgbWFqb3JpdHkgYW5kIGxpYmVydHnvvIk7IGZvciBqdXN0aWNlIGlzIHN1cHBvc2VkIHRvIGJlCgkJCQkJZXF1YWxpdHksIGFuZCBlcXVhbGl0eSB0aGUgc292ZXJlaWdudHkgb2Ygd2hhdCBldmVyIG1heSBoYXZlIGJlZW4gZGVjaWRlZCBieSB0aGUKCQkJCQltdWx0aXR1ZGUsIGFuZCBsaWJlcnR5IGRvaW5nIGp1c3Qgd2hhdCBvbmUgbGlrZXMuIEhlbmNlIGluIGRlbW9jcmFjaWVzIG9mIHRoaXMKCQkJCQlzb3J0IGV2ZXJ5Ym9keSBsaXZlcyBhcyBoZSBsaWtlcywgYW5kIOKAmHVudG8gd2hhdCBlbmQgaGUKCQkJCQlsaXN0ZXRoLOKAmSBhcyBFdXJpcGlkZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+RnJhZ21lbnQKCQkJCQkJODgzLCBmcm9tIGFuIHVua25vd24gcGxheS48L25vdGU+IHNheXMuIEJ1dCB0aGlzIGlzIGJhZDsgZm9yIHRvIGxpdmUgaW4KCQkJCQljb25mb3JtaXR5IHdpdGggdGhlIGNvbnN0aXR1dGlvbiBvdWdodCBub3QgdG8gYmUgY29uc2lkZXJlZCBzbGF2ZXJ5IGJ1dAoJCQkJCQlzYWZldHkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoaXMgdGhlcmVmb3JlLCBzcGVha2luZyBicm9hZGx5LCBpcyBhCgkJCQkJbGlzdCBvZiB0aGUgdGhpbmdzIHRoYXQgY2F1c2UgdGhlIGFsdGVyYXRpb24gYW5kIHRoZSBkZXN0cnVjdGlvbiBvZgoJCQkJCWNvbnN0aXR1dGlvbnMsIGFuZCBvZiB0aG9zZSB0aGF0IGNhdXNlIHRoZWlyIOKAnHNlY3VyaXR5IGFuZAoJCQkJCQljb250aW51YW5jZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCByZW1haW5zIHRvIHNwZWFrIG9mIG1vbmFyY2h5LCB0aGUgY2F1c2VzCgkJCQkJdGhhdCBkZXN0cm95IGl0IGFuZCB0aGUgbmF0dXJhbCBtZWFucyBvZiBpdHMgcHJlc2VydmF0aW9uLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMxMGIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['5.1310b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkFuZCB0aGUgdGhpbmdzCgkJCQkJdGhhdCBoYXBwZW4gYWJvdXQgcm95YWwgZ292ZXJubWVudHMgYW5kIHR5cmFubmllcyBhcmUgYWxtb3N0IHNpbWlsYXIgdG8gdGhvc2UKCQkJCQl0aGF0IGhhdmUgYmVlbiBuYXJyYXRlZCBhYm91dCBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50cy4gRm9yIHJveWFsIGdvdmVybm1lbnQKCQkJCQljb3JyZXNwb25kcyB3aXRoIGFyaXN0b2NyYWN5LCB3aGlsZSB0eXJhbm55IGlzIGEgY29tYmluYXRpb24gb2YgdGhlIGxhc3QgZm9ybSBvZgoJCQkJCQlvbGlnYXJjaHk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Q2YuIDEyOTZhIDMsIDEzMTJiIDM1Ljwvbm90ZT4KCQkJCQlhbmQgb2YgZGVtb2NyYWN5OyBhbmQgZm9yIHRoYXQgdmVyeSByZWFzb24gaXQgaXMgbW9zdCBoYXJtZnVsIHRvIGl0cyBzdWJqZWN0cywKCQkJCQlpbmFzbXVjaCBhcyBpdCBpcyBhIGNvbWJpbmF0aW9uIG9mIHR3byBiYWQgdGhpbmdzLCBhbmQgaXMgbGlhYmxlIHRvIHRoZQoJCQkJCWRldmlhdGlvbnMgYW5kIGVycm9ycyB0aGF0IHNwcmluZyBmcm9tIGJvdGggZm9ybXMgb2YgY29uc3RpdHV0aW9uLiA8L3RyYW5zbGF0aW9uPg=="
translation['5.1310b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZXNlIHR3byBkaWZmZXJlbnQgc29ydHMgb2YgbW9uYXJjaHkKCQkJCQloYXZlIHRoZWlyIG9yaWdpbnMgZnJvbSBkaXJlY3RseSBvcHBvc2l0ZSBzb3VyY2VzOyByb3lhbHR5IGhhcyBjb21lIGludG8KCQkJCQlleGlzdGVuY2UgZm9yIHRoZSBhc3Npc3RhbmNlIG9mIHRoZSBkaXN0aW5ndWlzaGVkIGFnYWluc3QgdGhlIHBlb3BsZSwgYW5kIGEga2luZwoJCQkJCWlzIGFwcG9pbnRlZCBmcm9tIHRob3NlIGRpc3Rpbmd1aXNoZWQgYnkgc3VwZXJpb3JpdHkgaW4gdmlydHVlIG9yIHRoZSBhY3Rpb25zCgkJCQkJdGhhdCBzcHJpbmcgZnJvbSB2aXJ0dWUsIG9yIGJ5IHN1cGVyaW9yaXR5IGluIGNvbWluZyBmcm9tIGEgZmFtaWx5IG9mIHRoYXQKCQkJCQljaGFyYWN0ZXIsIHdoaWxlIGEgdHlyYW50IGlzIHNldCB1cCBmcm9tIGFtb25nIHRoZSBwZW9wbGUgYW5kIHRoZSBtdWx0aXR1ZGUgdG8KCQkJCQlvcHBvc2UgdGhlIG5vdGFibGVzLCBpbiBvcmRlciB0aGF0IHRoZSBwZW9wbGUgbWF5IHN1ZmZlciBubyBpbmp1c3RpY2UgZnJvbSB0aGVtLgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB0aGlzIGlzIG1hbmlmZXN0IGZyb20gdGhlCgkJCQkJZmFjdHMgb2YgaGlzdG9yeS4gRm9yIGFsbW9zdCB0aGUgZ3JlYXRlc3QgbnVtYmVyIG9mIHR5cmFudHMgaGF2ZSByaXNlbiwgaXQgbWF5CgkJCQkJYmUgc2FpZCwgZnJvbSBiZWluZyBkZW1hZ29ndWVzLCBoYXZpbmcgd29uIHRoZSBwZW9wbGUncyBjb25maWRlbmNlIGJ5IHNsYW5kZXJpbmcKCQkJCQl0aGUgbm90YWJsZXMuIEZvciBzb21lIHR5cmFubmllcyB3ZXJlIHNldCB1cCBpbiB0aGlzIG1hbm5lciB3aGVuIHRoZSBzdGF0ZXMgaGFkCgkJCQkJYWxyZWFkeSBncm93biBncmVhdCwgYnV0IG90aGVycyB0aGF0IGNhbWUgYmVmb3JlIHRoZW0gYXJvc2UgZnJvbSBraW5ncyBkZXBhcnRpbmcKCQkJCQlmcm9tIHRoZSBhbmNlc3RyYWwgY3VzdG9tcyBhbmQgYWltaW5nIGF0IGEgbW9yZSBkZXNwb3RpYyBydWxlLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgb3RoZXJzIGZyb20gdGhlIG1lbiBlbGVjdGVkIHRvIGZpbGwgdGhlIHN1cHJlbWUKCQkJCQltYWdpc3RyYWNpZXMg77yIZm9yIGluIG9sZCB0aW1lcyB0aGUgcGVvcGxlcyB1c2VkIHRvIGFwcG9pbnQgdGhlIHBvcHVsYXIKCQkJCQkJb2ZmaWNpYWxzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkhlcmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTOt868zrnOv8+Fz4HOs+G9t86xPC9mb3JlaWduPiBtZWFucyDigJhtYWdpc3RyYWN54oCZIGdlbmVyYWxseTsKCQkJCQkJCTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs60zrfOvM65zr/Phc+BzrPhvbnPgjwvZm9yZWlnbj4gd2FzIHRoZSB0aXRsZSBvZiBhIHNwZWNpYWwKCQkJCQkJb2ZmaWNlciBpbiBzb21lIFBlbG9wb25uZXNpYW4gc3RhdGVzLjwvbm90ZT4gYW5kIHRoZSBzYWNyZWQgZW1iYXNzaWVzPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTOt868zrnOv8+Fz4HOs+G9t86xPC9mb3JlaWduPiBtZWFucyDigJhtYWdpc3RyYWN54oCZIGdlbmVyYWxseTsKCQkJCQkJCTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs60zrfOvM65zr/Phc+BzrPhvbnPgjwvZm9yZWlnbj4gd2FzIHRoZSB0aXRsZSBvZiBhIHNwZWNpYWwKCQkJCQkJb2ZmaWNlciBpbiBzb21lIFBlbG9wb25uZXNpYW4gc3RhdGVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PZmZpY2lhbCBtaXNzaW9ucyB0byByZWxpZ2lvdXMgZ2FtZXMgYW5kIHRvCgkJCQkJCW9yYWNsZXMuPC9ub3RlPiBmb3IgbG9uZyB0ZXJtcyBvZiBvZmZpY2XvvIksIGFuZCBvdGhlcnMgZnJvbQoJCQkJCW9saWdhcmNoaWVzIGVsZWN0aW5nIHNvbWUgb25lIHN1cHJlbWUgb2ZmaWNpYWwgZm9yIHRoZSBncmVhdGVzdCBtYWdpc3RyYWNpZXMuCgkJCQkJCTwvdHJhbnNsYXRpb24+"
translation['5.1311a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC40IiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIGluIGFsbCB0aGVzZSBtZXRob2RzIHRoZXkKCQkJCQloYWQgaXQgaW4gdGhlaXIgcG93ZXIgdG8gZWZmZWN0IHRoZWlyIHB1cnBvc2UgZWFzaWx5LCBpZiBvbmx5IHRoZXkgd2lzaGVkLAoJCQkJCWJlY2F1c2UgdGhleSBhbHJlYWR5IHBvc3Nlc3NlZCB0aGUgcG93ZXIgb2Ygcm95YWwgcnVsZSBpbiB0aGUgb25lIHNldCBvZiBjYXNlcwoJCQkJCWFuZCBvZiB0aGVpciBob25vcmFibGUgb2ZmaWNlIGluIHRoZSBvdGhlciwgZm9yIGV4YW1wbGUgUGhpZG9uIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXJnb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFyZ29zIj5BcmdvczwvcGxhY2VOYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIGNpcmNhIDxkYXRlIGF1dGhuYW1lPSItNzUwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNzUwIj43NTA8L2RhdGU+IEIuQy48L25vdGU+IGFuZCBvdGhlcnMgYmVjYW1lCgkJCQkJdHlyYW50cyB3aGVuIHRoZXkgcG9zc2Vzc2VkIHJveWFsIHBvd2VyIGFscmVhZHksIHdoaWxlIHRoZSBJb25pYW4gdHlyYW50czxkYXRlIGF1dGhuYW1lPSItNzUwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNzUwIj43NTA8L2RhdGU+IEIuQy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+ZS5nLiBUaHJhc3lidWx1cywgdHlyYW50IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWlsZXR1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTWlsZXR1cyI+TWlsZXR1czwvcGxhY2VOYW1lPiwgPGRhdGUgYXV0aG5hbWU9Ii02MTIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii02MTIiPjYxMjwvZGF0ZT4KCQkJCQkJQi5DLjwvbm90ZT4gYW5kIFBoYWxhcmlzPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNaWxldHVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNaWxldHVzIj5NaWxldHVzPC9wbGFjZU5hbWU+LCA8ZGF0ZSBhdXRobmFtZT0iLTYxMiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTYxMiI+NjEyPC9kYXRlPgoJCQkJCQlCLkMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlR5cmFudCBvZgoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDM4MDgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMzgwOCI+QWdyaWdlbnR1bTwvcGxhY2VOYW1lPgoJCQkJCQk8ZGF0ZSBhdXRobmFtZT0iLTU3MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTU3MiI+NTcyPC9kYXRlPiBCLkMuPC9ub3RlPiBhcm9zZSBmcm9tIG9mZmljZXMgb2YgaG9ub3IsIGFuZAoJCQkJCVBhbmFldGl1cyBhdCBMZW9udGluaSBhbmQgQ3lwc2VsdXMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDM4MDgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMzgwOCI+QWdyaWdlbnR1bTwvcGxhY2VOYW1lPgoJCQkJCQk8ZGF0ZSBhdXRobmFtZT0iLTU3MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTU3MiI+NTcyPC9kYXRlPiBCLkMuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb3JpbnRoIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDb3JpbnRoIj5Db3JpbnRoPC9wbGFjZU5hbWU+IGFuZCBQaXNpc3RyYXR1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUKCQkJCQkJMTMwNWEgMjMgbi48L25vdGU+IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBhbmQKCQkJCQkJRGlvbnlzaXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMjU5YSAyOCBuLjwvbm90ZT4gYXQKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3lyYWN1c2UiPlN5cmFjdXNlPC9wbGFjZU5hbWU+IGFuZCBvdGhlcnMgaW4gdGhlCgkJCQkJc2FtZSBtYW5uZXIgZnJvbSB0aGUgcG9zaXRpb24gb2YgZGVtYWdvZ3VlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguNSIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXJlZm9yZSwgYXMgd2Ugc2FpZCwgcm95YWx0eSBpcyByYW5nZWQgaW4gY29ycmVzcG9uZGVuY2UKCQkJCQl3aXRoIGFyaXN0b2NyYWN5LCBmb3IgaXQgZ29lcyBieSBtZXJpdCwgZWl0aGVyIGJ5IHByaXZhdGUgdmlydHVlIG9yIGJ5IGZhbWlseSBvcgoJCQkJCWJ5IHNlcnZpY2VzIG9yIGJ5IGEgY29tYmluYXRpb24gb2YgdGhlc2UgdGhpbmdzIGFuZCBhYmlsaXR5LiBGb3IgaW4gZXZlcnkKCQkJCQlpbnN0YW5jZSB0aGlzIGhvbm9yIGZlbGwgdG8gbWVuIGFmdGVyIHRoZXkgaGFkIGNvbmZlcnJlZCBiZW5lZml0IG9yIGJlY2F1c2UgdGhleQoJCQkJCWhhZCB0aGUgYWJpbGl0eSB0byBjb25mZXIgYmVuZWZpdCBvbiB0aGVpciBjaXRpZXMgb3IgdGhlaXIgbmF0aW9ucywgc29tZSBoYXZpbmcKCQkJCQlwcmV2ZW50ZWQgdGhlaXIgZW5zbGF2ZW1lbnQgaW4gd2FyLCBmb3IgaW5zdGFuY2UgQ29kcnVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgdXN1YWwgdHJhZGl0aW9uIHdhcyB0aGF0IENvZHJ1cyB3YXMgYWxyZWFkeSBraW5nIHdoZW4gaGUKCQkJCQkJc2F2ZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGJ5IHNhY3JpZmljaW5nIGhpcwoJCQkJCQlsaWZlLjwvbm90ZT4gb3RoZXJzIGhhdmluZyBzZXQgdGhlbSBmcmVlLCBmb3IgaW5zdGFuY2UgQ3lydXMsPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGJ5IHNhY3JpZmljaW5nIGhpcwoJCQkJCQlsaWZlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DeXJ1cyBsaWJlcmF0ZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDAyMzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMDIzMSI+UGVyc2lhPC9wbGFjZU5hbWU+IGZyb20gdGhlIE1lZGlhbiBlbXBpcmUgPGRhdGUgYXV0aG5hbWU9Ii01NTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii01NTkiPjU1OTwvZGF0ZT4KCQkJCQkJQi5DLjwvbm90ZT4gb3IgaGF2aW5nIHNldHRsZWQgb3IgYWNxdWlyZWQgdGVycml0b3J5LCBmb3IgaW5zdGFuY2UgdGhlIGtpbmdzCgkJCQkJb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDAyMzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMDIzMSI+UGVyc2lhPC9wbGFjZU5hbWU+IGZyb20gdGhlIE1lZGlhbiBlbXBpcmUgPGRhdGUgYXV0aG5hbWU9Ii01NTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii01NTkiPjU1OTwvZGF0ZT4KCQkJCQkJQi5DLjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI3MTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjcxNSI+TWFjZWRvbjwvcGxhY2VOYW1lPiBhbmQgdGhlIE1vbG9zc2lhbnMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk5lb3B0b2xlbXVzLCBzb24gb2YgQWNoaWxsZXMsIGNvbnF1ZXJlZCB0aGUKCQkJCQkJTW9sb3NzaSBhbmQgYmVjYW1lIHRoZWlyIGtpbmcuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC42IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGEga2luZyB3aXNoZXMgdG8gYmUgYSBndWFyZGlhbiwKCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMTFhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['5.1311a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnRvIHByb3RlY3QgdGhlIG93bmVycyBvZiBlc3RhdGVzIGZyb20gc3VmZmVyaW5nIGluanVzdGljZSBhbmQKCQkJCQl0aGUgcGVvcGxlIGZyb20gc3VmZmVyaW5nIGluc3VsdCwgYnV0IHR5cmFubnksIGFzIGhhcyByZXBlYXRlZGx5IGJlZW4gc2FpZCwgcGF5cwoJCQkJCXJlZ2FyZCB0byBubyBjb21tb24gaW50ZXJlc3QgdW5sZXNzIGZvciB0aGUgc2FrZSBvZiBpdHMgcHJpdmF0ZSBiZW5lZml0OyBhbmQgdGhlCgkJCQkJYWltIG9mIHR5cmFubnkgaXMgd2hhdCBpcyBwbGVhc2FudCwgdGhhdCBvZiByb3lhbHR5IHdoYXQgaXMgbm9ibGUuIEhlbmNlIGV2ZW4gaW4KCQkJCQl0aGVpciByZXF1aXNpdGlvbnMgbW9uZXkgaXMgdGhlIGFpbSBvZiB0eXJhbnRzIGJ1dCByYXRoZXIgbWFya3Mgb2YgaG9ub3IgdGhhdCBvZgoJCQkJCWtpbmdzOyBhbmQgYSBraW5nJ3MgYm9keS1ndWFyZCBjb25zaXN0cyBvZiBjaXRpemVucywgYSB0eXJhbnQncyBvZiBmb3JlaWduCgkJCQkJbWVyY2VuYXJpZXMuIDwvdHJhbnNsYXRpb24+"
translation['5.1311a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC43IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGl0IGlzIG1hbmlmZXN0IHRoYXQKCQkJCQl0eXJhbm55IGhhcyB0aGUgZXZpbHMgb2YgYm90aCBkZW1vY3JhY3kgYW5kIG9saWdhcmNoeTsgaXQgY29waWVzIG9saWdhcmNoeSBpbgoJCQkJCW1ha2luZyB3ZWFsdGggaXRzIG9iamVjdCDvvIhmb3IgaW5ldml0YWJseSB0aGF0IGlzIHRoZSBvbmx5IHdheSBpbiB3aGljaAoJCQkJCXRoZSB0eXJhbnQncyBib2R5LWd1YXJkIGFuZCBoaXMgbHV4dXJ5IGNhbiBiZSBrZXB0IHVw77yJIGFuZCBpbiBwdXR0aW5nCgkJCQkJbm8gdHJ1c3QgaW4gdGhlIG11bHRpdHVkZSDvvIh3aGljaCBpcyB3aHkgdGhleSByZXNvcnQgdG8gdGhlIG1lYXN1cmUgb2YKCQkJCQlzdHJpcHBpbmcgdGhlIHBlb3BsZSBvZiBhcm1zLCBhbmQgd2h5IGlsbC10cmVhdG1lbnQgb2YgdGhlIG1vYiBhbmQgaXRzIGV4cHVsc2lvbgoJCQkJCWZyb20gdGhlIGNpdHkgYW5kIHNldHRsZW1lbnQgaW4gc2NhdHRlcmVkIHBsYWNlcyBpcyBjb21tb24gdG8gYm90aCBmb3JtcyBvZgoJCQkJCWdvdmVybm1lbnQsIGJvdGggb2xpZ2FyY2h5IGFuZCB0eXJhbm5577yJLCB3aGlsZSBpdCBjb3BpZXMgZGVtb2NyYWN5IGluCgkJCQkJbWFraW5nIHdhciBvbiB0aGUgbm90YWJsZXMgYW5kIGRlc3Ryb3lpbmcgdGhlbSBzZWNyZXRseSBhbmQgb3Blbmx5IGFuZCBiYW5pc2hpbmcKCQkJCQl0aGVtIGFzIHBsb3R0aW5nIGFnYWluc3QgaXQgYW5kIG9ic3RydWN0aXZlIHRvIGl0cyBydWxlLiBGb3IgaXQgaXMgZnJvbSB0aGVtCgkJCQkJdGhhdCBjb3VudGVyLW1vdmVtZW50cyBhY3R1YWxseSBzcHJpbmcsIHNvbWUgb2YgdGhlbSB3aXNoaW5nIHRoZW1zZWx2ZXMgdG8gcnVsZSwKCQkJCQlhbmQgb3RoZXJzIG5vdDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50byBiZSBzbGF2ZXMuIEhlbmNlCgkJCQkJY29tZXMgdGhlIGFkdmljZSBvZiBQZXJpYW5kZXIgdG8gVGhyYXN5YnVsdXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMjg0YSAyNiBuLjwvbm90ZT4gaGlzIGRvY2tpbmcgb2YgdGhlIHByb21pbmVudCBjb3Juc3RhbGtzLCBtZWFuaW5nCgkJCQkJdGhhdCB0aGUgcHJvbWluZW50IGNpdGl6ZW5zIG11c3QgYWx3YXlzIGJlIG1hZGUgYXdheSB3aXRoLjwvdHJhbnNsYXRpb24+"
translation['5.1311b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC44IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXJlZm9yZSwgYXMgd2FzCgkJCQkJdmlydHVhbGx5IHN0YXRlZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBoYXMgbm90IGJlZW4gc3RhdGVkLAoJCQkJCQlidXQgY2FuIGJlIGluZmVycmVkIGZyb20gd2hhdCBwcmVjZWRlcy48L25vdGU+IHRoZSBjYXVzZXMgb2YgcmV2b2x1dGlvbnMgaW4KCQkJCQljb25zdGl0dXRpb25hbCBhbmQgaW4gcm95YWwgZ292ZXJubWVudHMgbXVzdCBiZSBkZWVtZWQgdG8gYmUgdGhlIHNhbWU7IGZvcgoJCQkJCXN1YmplY3RzIGluIG1hbnkgY2FzZXMgYXR0YWNrIG1vbmFyY2hpZXMgYmVjYXVzZSBvZiB1bmp1c3QgdHJlYXRtZW50IGFuZCBmZWFyCgkJCQkJYW5kIGNvbnRlbXB0LCBhbmQgYW1vbmcgdGhlIGZvcm1zIG9mIHVuanVzdCB0cmVhdG1lbnQgbW9zdCBvZiBhbGwgYmVjYXVzZSBvZgoJCQkJCWluc29sZW5jZSwgYW5kIHNvbWV0aW1lcyB0aGUgY2F1c2UgaXMgdGhlIHNlaXp1cmUgb2YgcHJpdmF0ZSBwcm9wZXJ0eS4gQWxzbyB0aGUKCQkJCQlvYmplY3RzIGFpbWVkIGF0IGJ5IHRoZSByZXZvbHV0aW9uYXJpZXMgaW4gdGhlIGNhc2UgYm90aCBvZiB0eXJhbm5pZXMgYW5kIG9mCgkJCQkJcm95YWwgZ292ZXJubWVudHMgYXJlIHRoZSBzYW1lIGFzIGluIHJldm9sdHMgYWdhaW5zdCBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50OwoJCQkJCWZvciBtb25hcmNocyBwb3NzZXNzIGdyZWF0IHdlYWx0aCBhbmQgZ3JlYXQgaG9ub3IsIHdoaWNoIGFyZSBkZXNpcmVkIGJ5IGFsbCBtZW4uCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC45IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGluIHNvbWUgY2FzZXMgdGhlIGF0dGFjayBpcwoJCQkJCWFpbWVkIGF0IHRoZSBwZXJzb24gb2YgdGhlIHJ1bGVycywgaW4gb3RoZXJzIGF0IHRoZWlyIG9mZmljZS4gUmlzaW5ncyBwcm92b2tlZAoJCQkJCWJ5IGluc29sZW5jZSBhcmUgYWltZWQgYWdhaW5zdCB0aGUgcGVyc29uOyBhbmQgdGhvdWdoIGluc29sZW5jZSBoYXMgbWFueQoJCQkJCXZhcmlldGllcywgZWFjaCBvZiB0aGVtIGdpdmVzIHJpc2UgdG8gYW5nZXIsIGFuZCB3aGVuIG1lbiBhcmUgYW5ncnkgdGhleSBtb3N0bHkKCQkJCQlhdHRhY2sgZm9yIHRoZSBzYWtlIG9mIHJldmVuZ2UsIG5vdCBvZiBhbWJpdGlvbi4gRm9yIGV4YW1wbGUgdGhlIGF0dGFjayBvbiB0aGUKCQkJCQlQaXNpc3RyYXRpZGFlIHRvb2sgcGxhY2UgYmVjYXVzZSB0aGV5IG91dHJhZ2VkIEhhcm1vZGl1cydzIHNpc3RlciBhbmQgdHJlYXRlZAoJCQkJCUhhcm1vZGl1cyB3aXRoIGNvbnR1bWVseSDvvIhmb3IgSGFybW9kaXVzIGF0dGFja2VkIHRoZW0gYmVjYXVzZSBvZiBoaXMKCQkJCQlzaXN0ZXIgYW5kIEFyaXN0b2dpdG9uIGJlY2F1c2Ugb2YgSGFybW9kaXVzLCBhbmQgYWxzbyB0aGUgcGxvdCB3YXMgbGFpZCBhZ2FpbnN0CgkJCQkJUGVyaWFuZGVyIHRoZSB0eXJhbnQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBbWJyYWNpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQW1icmFjaWEiPkFtYnJhY2lhPC9wbGFjZU5hbWU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMzA0YSAzMQoJCQkJCQluLjwvbm90ZT4gYmVjYXVzZSB3aGVuIGRyaW5raW5nIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzExYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1311b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPndpdGggaGlzIGZhdm9yaXRlIGhlIGFza2VkIGhpbQoJCQkJCWlmIGhlIHdhcyB5ZXQgd2l0aCBjaGlsZCBieSBoaW3vvIksPC90cmFuc2xhdGlvbj4="
translation['5.1311b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCB0aGUgYXR0YWNrIG9uIFBoaWxpcCBieSBQYXVzYW5pYXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBNYWNlZG9uaWFuIHlvdXRoIG9mIGZhbWlseSwgd2hvIG11cmRlcmVkIFBoaWxpcCA8ZGF0ZSBhdXRobmFtZT0iLTMzNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTMzNiI+MzM2PC9kYXRlPiBCLkMuIEF0dGFsdXMgd2FzIHRoZSB1bmNsZSBvZiBQaGlsaXAncyB3aWZlCgkJCQkJCUNsZW9wYXRyYS48L25vdGU+IHdhcyBiZWNhdXNlIGhlIGFsbG93ZWQgaGltIHRvIGJlIGluc3VsdGVkIGJ5IEF0dGFsdXMgYW5kCgkJCQkJaGlzIGZyaWVuZHMsIGFuZCB0aGF0IG9uIEFteW50YXMgdGhlIExpdHRsZTxkYXRlIGF1dGhuYW1lPSItMzM2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzM2Ij4zMzY8L2RhdGU+IEIuQy4gQXR0YWx1cyB3YXMgdGhlIHVuY2xlIG9mIFBoaWxpcCdzIHdpZmUKCQkJCQkJQ2xlb3BhdHJhLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIHRoZSBhZGplY3RpdmUgc2hvdWxkIGJlIHRyYW5zZmVycmVkIHRvIERlcmRhcyBhbmQgZXhwdW5nZWQgYXMgYW4KCQkJCQkJaW50ZXJwb2xhdGVkIG5vdGUuIFRoZSBwZXJzb25zIHJlZmVycmVkIHRvIGFyZSB1bmNlcnRhaW4uPC9ub3RlPiBieSBEZXJkYXMKCQkJCQliZWNhdXNlIGhlIG1vY2tlZCBhdCBoaXMgeW91dGgsIGFuZCB0aGUgYXR0YWNrIG9mIHRoZSBldW51Y2ggb24gRXZhZ29yYXMgb2YKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAxMTIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDExMiI+Q3lwcnVzPC9wbGFjZU5hbWU+IHdhcyBmb3IgcmV2ZW5nZSwgZm9yIGhlCgkJCQkJbXVyZGVyZWQgaGltIGFzIGJlaW5nIGluc3VsdGVkLCBiZWNhdXNlIEV2YWdvcmFzJ3Mgc29uIGhhZCB0YWtlbiBhd2F5IGhpcyB3aWZlLgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgbWFueSByaXNpbmdzIGhhdmUgYWxzbwoJCQkJCW9jY3VycmVkIGJlY2F1c2Ugb2Ygc2hhbWVmdWwgcGVyc29uYWwgaW5kaWduaXRpZXMgY29tbWl0dGVkIGJ5IGNlcnRhaW4gbW9uYXJjaHMuCgkJCQkJT25lIGluc3RhbmNlIGlzIHRoZSBhdHRhY2sgb2YgQ3JhdGFlYXMgb24gQXJjaGVsYXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPktpbmcgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI3MTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjcxNSI+TWFjZWRvbjwvcGxhY2VOYW1lPgoJCQkJCQk8ZGF0ZVJhbmdlIGF1dGhuYW1lPSItNDEzLy0zOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnJvbT0iLTQxMyIgdG89Ii0zOTkiPjQxMzwvZGF0ZVJhbmdlPi0zOTkgQi5DLiBFdXJpcGlkZXMgd2VudCB0bwoJCQkJCQlyZXNpZGUgYXQgaGlzIGNvdXJ0IDxkYXRlIGF1dGhuYW1lPSItNDA4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA4Ij40MDg8L2RhdGU+IEIuQy4gYW5kIGRpZWQgdGhlcmUgPGRhdGUgYXV0aG5hbWU9Ii00MDYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDYiPjQwNjwvZGF0ZT4gQi5DLiBhdCB0aGUgYWdlIG9mIDc1Ljwvbm90ZT47IGZvciBoZSB3YXMgYWx3YXlzCgkJCQkJcmVzZW50ZnVsIG9mIHRoZSBhc3NvY2lhdGlvbiwgc28gdGhhdCBldmVuIGEgc21hbGxlciBleGN1c2UgYmVjYW1lIHN1ZmZpY2llbnQsCgkJCQkJb3IgcGVyaGFwcyBpdCB3YXMgYmVjYXVzZSBoZSBkaWQgbm90IGdpdmUgaGltIHRoZSBoYW5kIG9mIG9uZSBvZiBoaXMgZGF1Z2h0ZXJzCgkJCQkJYWZ0ZXIgYWdyZWVpbmcgdG8gZG8gc28sIGJ1dCBnYXZlIHRoZSBlbGRlciB0byB0aGUga2luZyBvZiBFbGltZWEgd2hlbiBoYXJkCgkJCQkJcHJlc3NlZCBpbiBhIHdhciBhZ2FpbnN0IFNpcnJhcyBhbmQgQXJyYWJhZXVzLCBhbmQgdGhlIHlvdW5nZXIgdG8gaGlzIHNvbgoJCQkJCUFteW50YXMsIHRoaW5raW5nIHRoYXQgdGh1cyBBbXludGFzIHdvdWxkIGJlIGxlYXN0IGxpa2VseSB0byBxdWFycmVsIHdpdGggaGlzCgkJCQkJc29uIGJ5IENsZW9wYXRyYTsgYnV0IGF0IGFsbCBldmVudHMgQ3JhdGFlYXMncyBlc3RyYW5nZW1lbnQgd2FzIHByaW1hcmlseSBjYXVzZWQKCQkJCQlieSByZXNlbnRtZW50IGJlY2F1c2Ugb2YgdGhlIGxvdmUgYWZmYWlyLiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjcxNSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNzE1Ij5NYWNlZG9uPC9wbGFjZU5hbWU+CgkJCQkJCTxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii00MTMvLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItNDEzIiB0bz0iLTM5OSI+NDEzPC9kYXRlUmFuZ2U+LTM5OSBCLkMuIEV1cmlwaWRlcyB3ZW50IHRvCgkJCQkJCXJlc2lkZSBhdCBoaXMgY291cnQgPGRhdGUgYXV0aG5hbWU9Ii00MDgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDgiPjQwODwvZGF0ZT4gQi5DLiBhbmQgZGllZCB0aGVyZSA8ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2PC9kYXRlPiBCLkMuIGF0IHRoZSBhZ2Ugb2YgNzUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIEhlbGxhbm9jcmF0ZXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTA4OTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMDg5NCI+TGFyaXNhPC9wbGFjZU5hbWU+IGFsc28gam9pbmVkIGluIHRoZSBhdHRhY2sgZm9yIHRoZSBzYW1lIHJlYXNvbjsgZm9yCgkJCQkJYmVjYXVzZSB3aGlsZSBlbmpveWluZyBoaXMgZmF2b3JzIEFyY2hlbGF1cyB3b3VsZCBub3QgcmVzdG9yZSBoaW0gdG8gaGlzIGhvbWUKCQkJCQlhbHRob3VnaCBoZSBoYWQgcHJvbWlzZWQgdG8gZG8gc28sIGhlIHRob3VnaHQgdGhhdCB0aGUgbW90aXZlIG9mIHRoZSBmYW1pbGlhcml0eQoJCQkJCXRoYXQgaGFkIHRha2VuIHBsYWNlPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmhhZCBiZWVuCgkJCQkJaW5zb2xlbmNlIGFuZCBub3QgcGFzc2lvbmF0ZSBkZXNpcmUuIEFuZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMDc3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEwNzcwIj5QeXRobzwvcGxhY2VOYW1lPiBhbmQgSGVyYWNsaWRlcyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNzUyOCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA3NTI4Ij5BZW51czwvcGxhY2VOYW1lPiBtYWRlIGF3YXkgd2l0aCBDb3R5czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5LaW5nIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNzU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI3NTYiPlRocmFjZTwvcGxhY2VOYW1lPgoJCQkJCQk8ZGF0ZVJhbmdlIGF1dGhuYW1lPSItMzgyLy0zNTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnJvbT0iLTM4MiIgdG89Ii0zNTgiPjM4MjwvZGF0ZVJhbmdlPi0zNTggQi5DLjwvbm90ZT4gdG8gYXZlbmdlCgkJCQkJdGhlaXIgZmF0aGVyLCBhbmQgQWRhbWFzIHJldm9sdGVkIGZyb20gQ290eXMgYmVjYXVzZSBoZSBoYWQgYmVlbiBtdXRpbGF0ZWQgYnkKCQkJCQloaW0gd2hlbiBhIGJveSwgb24gdGhlIGdyb3VuZCBvZiB0aGUgaW5zdWx0LiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjc1NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNzU2Ij5UaHJhY2U8L3BsYWNlTmFtZT4KCQkJCQkJPGRhdGVSYW5nZSBhdXRobmFtZT0iLTM4Mi8tMzU4IiBjbGFzcz0idHJhbnNsYXRpb24iIGZyb209Ii0zODIiIHRvPSItMzU4Ij4zODI8L2RhdGVSYW5nZT4tMzU4IEIuQy48L3RyYW5zbGF0aW9uPg=="
translation['5.1312a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhbHNvIG1hbnkgbWVuIHdoZW4gZW5yYWdlZCBieSB0aGUgaW5kaWduaXR5IG9mCgkJCQkJY29ycG9yYWwgY2hhc3Rpc2VtZW50IGhhdmUgYXZlbmdlZCB0aGUgaW5zdWx0IGJ5IGRlc3Ryb3lpbmcgb3IgYXR0ZW1wdGluZyB0bwoJCQkJCWRlc3Ryb3kgaXRzIGF1dGhvciwgZXZlbiB3aGVuIGEgbWFnaXN0cmF0ZSBvciBtZW1iZXIgb2YgYSByb3lhbCBkeW5hc3R5LiBGb3IKCQkJCQlleGFtcGxlIHdoZW4gdGhlIFBlbnRoaWxpZGFlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBydWxpbmcKCQkJCQkJZmFtaWx5IGluIHRoZSBlYXJseSBvbGlnYXJjaHkgdGhlcmUsIGNsYWltaW5nIGRlc2NlbnQgZnJvbSBQZW50aGlsdXMsIGFuCgkJCQkJCWlsbGVnaXRpbWF0ZSBzb24gb2YgT3Jlc3Rlcy48L25vdGU+IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjcyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzIiPk1pdHlsZW5lPC9wbGFjZU5hbWU+IHdlbnQgYWJvdXQgc3RyaWtpbmcgcGVvcGxlIHdpdGggdGhlaXIgc3RhdmVzIE1lZ2FjbGVzCgkJCQkJd2l0aCBoaXMgZnJpZW5kcyBzZXQgb24gdGhlbSBhbmQgbWFkZSBhd2F5IHdpdGggdGhlbSwgYW5kIGFmdGVyd2FyZHMgU21lcmRpcwoJCQkJCXdoZW4gaGUgaGFkIGJlZW4gYmVhdGVuIGFuZCBkcmFnZ2VkIG91dCBmcm9tIGhpcyB3aWZlJ3MgcHJlc2VuY2Uga2lsbGVkCgkJCQkJUGVudGhpbHVzLiBBbHNvIERlY2FtbmljaHVzIHRvb2sgYSBsZWFkaW5nIHBhcnQgaW4gdGhlIGF0dGFjayB1cG9uIEFyY2hlbGF1cywKCQkJCQliZWluZyB0aGUgZmlyc3QgdG8gc3RpciBvbiB0aGUgYXR0YWNrZXJzOyBhbmQgdGhlIGNhdXNlIG9mIGhpcyBhbmdlciB3YXMgdGhhdCBoZQoJCQkJCWhhZCBoYW5kZWQgaGltIG92ZXIgdG8gRXVyaXBpZGVzIHRoZSBwb2V0IHRvIGZsb2csIEV1cmlwaWRlcyBiZWluZyBhbmdyeSBiZWNhdXNlCgkJCQkJaGUgaGFkIG1hZGUgYSByZW1hcmsgYWJvdXQgaGlzIGJyZWF0aCBzbWVsbGluZy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjE0IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIG1hbnkgb3RoZXJzIGFsc28gZm9yIHNpbWlsYXIgcmVhc29ucyBoYXZlIGJlZW4gbWFkZQoJCQkJCWF3YXkgd2l0aCBvciBwbG90dGVkIGFnYWluc3QuIEFuZCBzaW1pbGFybHkgYWxzbyBmcm9tIHRoZSBtb3RpdmUgb2YgZmVhcjsgZm9yCgkJCQkJdGhpcyB3YXMgb25lIG9mIHRoZSBjYXVzZXMgd2UgbWVudGlvbmVkIGluIHRoZSBjYXNlIG9mIG1vbmFyY2hpZXMsIGFzIGFsc28gaW4KCQkJCQl0aGF0IG9mIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnRzOyBmb3IgaW5zdGFuY2UgQXJ0YXBhbmVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNhcHRhaW4gb2YgWGVyeGVzJyBib2R5LWd1YXJkLjwvbm90ZT4ga2lsbGVkIFhlcnhlcyBmZWFyaW5nCgkJCQkJdGhlIGNoYXJnZSBhYm91dCBEYXJpdXMsIGJlY2F1c2UgaGUgaGFkIGhhbmdlZCBoaW0gd2hlbiBYZXJ4ZXMgaGFkIG9yZGVyZWQgaGltCgkJCQkJbm90IHRvIGJ1dCBoZSBoYWQgdGhvdWdodCB0aGF0IGhlIHdvdWxkIGZvcmdpdmUgaGltIGJlY2F1c2UgaGUgd291bGQgZm9yZ2V0LCBhcwoJCQkJCWhlIGhhZCBiZWVuIGF0IGRpbm5lci4gQW5kIG90aGVyIGF0dGFja3Mgb24gbW9uYXJjaHMgaGF2ZSBiZWVuIG9uIGFjY291bnQgb2YKCQkJCQljb250ZW1wdCwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMTJhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['5.1312a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFzIHNvbWVib2R5IGtpbGxlZCBTYXJkYW5hcGFsbHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkxhc3Qga2luZyBvZiB0aGUgQXNzeXJpYW4gZW1waXJlIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE3OTk4IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTc5OTgiPk5pbmV2ZWg8L3BsYWNlTmFtZT4uPC9ub3RlPiB3aGVuIGhlIHNhdyBoaW0gY29tYmluZwoJCQkJCWhpcyBoYWlyIHdpdGggaGlzIHdvbWVuIO+8iGlmIHRoaXMgc3RvcnkgdG9sZCBieSB0aGUgbmFycmF0b3JzIG9mIGxlZ2VuZHMKCQkJCQlpcyB0cnVl4oCUYW5kIGlmIGl0IGRpZCBub3QgaGFwcGVuIHdpdGggU2FyZGFuYXBhbGx1cywgaXQgbWlnaHQgcXVpdGUKCQkJCQl3ZWxsIGJlIHRydWUgb2Ygc29tZWJvZHkgZWxzZe+8iSwgYW5kIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE3OTk4IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTc5OTgiPk5pbmV2ZWg8L3BsYWNlTmFtZT4uPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxEaW9uIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxEaW9uIj5EaW9uPC9wbGFjZU5hbWU+IGF0dGFja2VkIHRoZSB5b3VuZ2VyIERpb255c2l1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UeXJhbnQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3lyYWN1c2UiPlN5cmFjdXNlPC9wbGFjZU5hbWU+IDM2Ny0zNTYgYW5kIDxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii0zNDYvLTM0MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItMzQ2IiB0bz0iLTM0MyI+MzQ2PC9kYXRlUmFuZ2U+LTM0MyBCLkMuLCBjZi4gMTMxMmEgMzQgZmYuPC9ub3RlPiBiZWNhdXNlIGhlIGRlc3Bpc2VkCgkJCQkJaGltLCB3aGVuIGhlIHNhdyB0aGUgY2l0aXplbnMgZGVzcGlzaW5nIGhpbSBhbmQgdGhlIGtpbmcgaGltc2VsZiBhbHdheXMgZHJ1bmsuCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3lyYWN1c2UiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPiAzNjctMzU2IGFuZCA8ZGF0ZVJhbmdlIGF1dGhuYW1lPSItMzQ2Ly0zNDMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnJvbT0iLTM0NiIgdG89Ii0zNDMiPjM0NjwvZGF0ZVJhbmdlPi0zNDMgQi5DLiwgY2YuIDEzMTJhIDM0IGZmLjwvdHJhbnNsYXRpb24+"
translation['5.1312a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBjb250ZW1wdCBoYXMgbGVkIHNvbWUgZXZlbgoJCQkJCW9mIHRoZSBmcmllbmRzIG9mIG1vbmFyY2hzIHRvIGF0dGFjayB0aGVtLCBmb3IgdGhleSBkZXNwaXNlIHRoZW0gZm9yIHRydXN0aW5nCgkJCQkJdGhlbSBhbmQgdGhpbmsgdGhleSB3aWxsIG5vdCBiZSBmb3VuZCBvdXQuIEFuZCBjb250ZW1wdCBpcyBpbiBhIG1hbm5lciB0aGUKCQkJCQltb3RpdmUgb2YgdGhvc2Ugd2hvIGF0dGFjayBtb25hcmNocyB0aGlua2luZyB0aGF0IHRoZXkgYXJlIGFibGUgdG8gc2VpemUgdGhlCgkJCQkJZ292ZXJubWVudDsgZm9yIHRoZXkgbWFrZSB0aGUgYXR0ZW1wdCB3aXRoIGEgbGlnaHQgaGVhcnQsIGZlZWxpbmcgdGhhdCB0aGV5IGhhdmUKCQkJCQl0aGUgcG93ZXIgYW5kIGJlY2F1c2Ugb2YgdGhlaXIgcG93ZXIgZGVzcGlzaW5nIHRoZSBkYW5nZXIsIGFzIGdlbmVyYWxzCgkJCQkJY29tbWFuZGluZyB0aGUgYXJtaWVzIGF0dGFjayB0aGVpciBtb25hcmNoczsgZm9yIGluc3RhbmNlIEN5cnVzIGF0dGFja2VkCgkJCQkJCUFzdHlhZ2VzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBsYXN0IGtpbmcgb2YgTWVkaWEsIHJlaWduZWQKCQkJCQkJCTxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii01OTQvLTU1OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItNTk0IiB0bz0iLTU1OSI+NTk0PC9kYXRlUmFuZ2U+LTU1OSBCLkMuPC9ub3RlPiB3aGVuIGhlCgkJCQkJZGVzcGlzZWQgYm90aCBoaXMgbW9kZSBvZiBsaWZlIGFuZCBoaXMgcG93ZXIsIGJlY2F1c2UgaGlzIHBvd2VyIGhhZCB3YW5lZCBhbmQgaGUKCQkJCQloaW1zZWxmIHdhcyBsaXZpbmcgbHV4dXJpb3VzbHksIGFuZCB0aGUgVGhyYWNpYW4gU2V1dGhlcyBhdHRhY2tlZCBBbWFkb2N1czxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii01OTQvLTU1OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItNTk0IiB0bz0iLTU1OSI+NTk0PC9kYXRlUmFuZ2U+LTU1OSBCLkMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkJvdGggdGhlc2UgVGhyYWNpYW4ga2luZ3MgYmVjYW1lIGFsbGllcyBvZgoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+CgkJCQkJCTxkYXRlIGF1dGhuYW1lPSItMzkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkwIj4zOTA8L2RhdGU+IEIuQy4sIGJ1dCB0aGUgZXZlbnQgcmVmZXJyZWQgdG8gbWF5IGJlCgkJCQkJCWxhdGVyLjwvbm90ZT4gd2hlbiBoaXMgZ2VuZXJhbC4gT3RoZXJzIGFnYWluIGF0dGFjayBtb25hcmNocyBmb3IgbW9yZSB0aGFuCgkJCQkJb25lIG9mIHRoZXNlIG1vdGl2ZXMsIGZvciBpbnN0YW5jZSBib3RoIGJlY2F1c2UgdGhleSBkZXNwaXNlIHRoZW0gYW5kIGZvciB0aGUKCQkJCQlzYWtlIG9mIGdhaW4sIGFzIE1pdGhyaWRhdGVzPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+CgkJCQkJCTxkYXRlIGF1dGhuYW1lPSItMzkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkwIj4zOTA8L2RhdGU+IEIuQy4sIGJ1dCB0aGUgZXZlbnQgcmVmZXJyZWQgdG8gbWF5IGJlCgkJCQkJCWxhdGVyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzCgkJCQkJCU1pdGhyaWRhdGVzIElJLiwgd2hvIHN1Y2NlZWRlZCBoaXMgZmF0aGVyIEFyaW9iYXJ6YW5lcyBhcyBzYXRyYXAgb2YKCQkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2NjE5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY2MTkiPlBvbnR1czwvcGxhY2VOYW1lPgoJCQkJCQk8ZGF0ZSBhdXRobmFtZT0iLTMzNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTMzNiI+MzM2PC9kYXRlPiBCLkMuPC9ub3RlPiBhdHRhY2tlZCBBcmlvYmFyemFuZXMuPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2MTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjYxOSI+UG9udHVzPC9wbGFjZU5hbWU+CgkJCQkJCTxkYXRlIGF1dGhuYW1lPSItMzM2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzM2Ij4zMzY8L2RhdGU+IEIuQy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIGZvbGxvd2luZyBzZW50ZW5jZSBtYXkgaGF2ZSBiZWVuIHNoaWZ0ZWQKCQkJCQkJYnkgbWlzdGFrZSBmcm9tIHRoZSBlbmQgb2YgOC4xNCBhYm92ZS48L25vdGU+IEFuZCBpdCBpcyBtZW4gb2YgYm9sZCBuYXR1cmUKCQkJCQlhbmQgd2hvIGhvbGQgYSBtaWxpdGFyeSBvZmZpY2Ugd2l0aCBtb25hcmNocyB3aG8gbW9zdCBvZnRlbiBtYWtlIHRoZSBhdHRlbXB0IGZvcgoJCQkJCXRoaXMgcmVhc29uOyBmb3IgY291cmFnZSBwb3NzZXNzaW5nIHBvd2VyIGlzIGJvbGRuZXNzLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgdGhleSBtYWtlIHRoZWlyIGF0dGFja3MgdGhpbmtpbmcgdGhhdCB3aXRoCgkJCQkJY291cmFnZSBhbmQgcG93ZXIgdGhleSB3aWxsIGVhc2lseSBwcmV2YWlsLiA8L3RyYW5zbGF0aW9uPg=="
translation['5.1312b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB3aXRoIHRob3NlIHdob3NlIGF0dGFjayBpcyBwcm9tcHRlZCBieSBhbWJpdGlvbiB0aGUKCQkJCQltb3RpdmUgb3BlcmF0ZXMgaW4gYSBkaWZmZXJlbnQgd2F5IGZyb20gdGhvc2Ugc3Bva2VuIG9mIGJlZm9yZTsgc29tZSBtZW4gYXR0YWNrCgkJCQkJdHlyYW50cyBiZWNhdXNlIHRoZXkgc2VlIGdyZWF0IHByb2ZpdHMgYW5kIGdyZWF0IGhvbm9ycyBiZWxvbmdpbmcgdG8gdGhlbSwgYnV0CgkJCQkJdGhhdCBpcyBub3QgdGhlIHJlYXNvbiB0aGF0IGluIGVhY2ggY2FzZSBsZWFkcyB0aGUgcGVyc29ucyB3aG8gYXR0YWNrIGZyb20KCQkJCQltb3RpdmVzIG9mIGFtYml0aW9uIHRvIHJlc29sdmUgb24gdGhlIHZlbnR1cmU7IHRob3NlIG90aGVycyBhcmUgbGVkIGJ5IHRoZQoJCQkJCW1vdGl2ZSBzdGF0ZWQsIGJ1dCB0aGVzZSBhdHRhY2sgbW9uYXJjaHMgZnJvbSBhIHdpc2ggdG8gZ2FpbiBub3QgbW9uYXJjaHkgYnV0CgkJCQkJZ2xvcnksIGp1c3QgYXMgdGhleSB3b3VsZCB3aXNoIHRvIHRha2UgcGFydCBpbiBkb2luZyBhbnkgb3RoZXIgdW5jb21tb24gZGVlZAoJCQkJCXRoYXQgbWFrZXMgbWVuIGZhbW91cyBhbmQga25vd24gdG8gdGhlaXIgZmVsbG93cy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjE3IiB1bml0PSJMb2ViIGNoYXAiIC8+Tm90IGJ1dCB3aGF0IHRob3NlIHdobyBtYWtlIHRoZSB2ZW50dXJlIGZyb20gdGhpcyBtb3RpdmUKCQkJCQlhcmUgdmVyeSBmZXcgaW5kZWVkIGluIG51bWJlciwgZm9yIHVuZGVybHlpbmcgaXQgdGhlcmUgbXVzdCBiZSBhbiB1dHRlcgoJCQkJCWRpc3JlZ2FyZCBvZiBzYWZldHksIGlmIHJlZ2FyZCBmb3Igc2FmZXR5IGlzIG5vdCB0byBjaGVjayB0aGUgZW50ZXJwcmlzZTsgdGhleQoJCQkJCW11c3QgYWx3YXlzIGhhdmUgcHJlc2VudCBpbiB0aGVpciBtaW5kcyB0aGUgb3BpbmlvbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERpb24iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERpb24iPkRpb248L3BsYWNlTmFtZT4sIGFsdGhvdWdoIGl0IGlzIG5vdCBlYXN5IGZvciBtYW55IG1lbiB0bwoJCQkJCWhhdmUgaXQ7IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGlvbiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRGlvbiI+RGlvbjwvcGxhY2VOYW1lPiBtYXJjaGVkIHdpdGggYSBzbWFsbAoJCQkJCWZvcmNlIGFnYWluc3QgRGlvbnlzaXVzLCBzYXlpbmcgdGhhdCBoaXMgZmVlbGluZyB3YXMgdGhhdCwgd2hhdGV2ZXIgcG9pbnQgaGUKCQkJCQltaWdodCBiZSBhYmxlIHRvIGdldCB0bywgaXQgd291bGQgYmUgZW5vdWdoIGZvciBoaW0gdG8gaGF2ZSBoYWQgdGhhdCBtdWNoIHNoYXJlCgkJCQkJaW4gdGhlIGVudGVycHJpc2XigJRmb3IgaW5zdGFuY2UsIGlmIGl0IHNob3VsZCBiZWZhbGwgaGltIHRvIGRpZSBhcyBzb29uCgkJCQkJYXMgaGUgaGFkIGp1c3Qgc2V0IGZvb3QgaW4gdGhlIGNvdW50cnksIHRoYXQgZGVhdGggd291bGQgc2F0aXNmeSBoaW0uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjE4IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBvbmUgd2F5CgkJCQkJaW4gd2hpY2ggdHlyYW5ueSBpcyBkZXN0cm95ZWQsIGFzIGlzIGVhY2ggb2YgdGhlIG90aGVyIGZvcm1zIG9mIGNvbnN0aXR1dGlvbgoJCQkJCWFsc28sIGlzIGZyb20gd2l0aG91dCwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMTJiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['5.1312b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmlmIHNvbWUgc3RhdGUgd2l0aCBhbiBvcHBvc2l0ZSBjb25zdGl0dXRpb24gaXMKCQkJCQlzdHJvbmdlciDvvIhmb3IgdGhlIHdpc2ggdG8gZGVzdHJveSBpdCB3aWxsIGNsZWFybHkgYmUgcHJlc2VudCBpbiBzdWNoIGEKCQkJCQluZWlnaGJvciBiZWNhdXNlIG9mIHRoZSBvcHBvc2l0aW9uIG9mIHByaW5jaXBsZSwgYW5kIGFsbCBtZW4gZG8gd2hhdCB0aGV5IHdpc2gKCQkJCQlpZiB0aGV5IGhhdmUgdGhlIHBvd2Vy77yJ4oCUYW5kIHRoZSBjb25zdGl0dXRpb25zIG9wcG9zZWQgdG8KCQkJCQl0eXJhbm55IGFyZSwgb24gdGhlIG9uZSBoYW5kIGRlbW9jcmFjeSwgd2hpY2ggaXMgb3Bwb3NlZCB0byBpdCBhcyDvvIhpbgoJCQkJCUhlc2lvZCdzIHBocmFzZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIZXMuIFdEIDI1IiB2YWxpZD0ieWVzIj5IZXMuIFdECgkJCQkJCQkyNTwvYmlibD48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6x4b22IM66zrXPgc6xzrzOteG9us+CIM66zrXPgc6xzrzOteG/liDOus6/z4ThvbPOtc65IM66zrHhvbYKCQkJCQkJCc+E4b2zzrrPhM6/zr3OuSDPhOG9s866z4TPic69PC9mb3JlaWduPiwg4oCYdHdvIG9mIGEgdHJhZGUgbmV2ZXIKCQkJCQkJYWdyZWUu4oCZPC9ub3RlPu+8iSDigJhwb3R0ZXIgdG8gcG90dGVyLOKAmQoJCQkJCWJlY2F1c2UgdGhlIGZpbmFsIGZvcm0gb2YgZGVtb2NyYWN5IGlzIHR5cmFubnksIGFuZCBvbiB0aGUgb3RoZXIgaGFuZCByb3lhbHR5CgkJCQkJYW5kIGFyaXN0b2NyYWN5IGFyZSBvcHBvc2VkIHRvIHR5cmFubnkgYmVjYXVzZSBvZiB0aGUgb3Bwb3NpdGUgbmF0dXJlIG9mIHRoZWlyCgkJCQkJY29uc3RpdHV0aW9uYWwgc3RydWN0dXJlIO+8iG93aW5nIHRvIHdoaWNoIHRoZSBTcGFydGFucyBwdXQgZG93biBhIHZlcnkKCQkJCQlncmVhdCBtYW55IHR5cmFubmllcywgYW5kIHNvIGRpZCB0aGUgU3lyYWN1c2FucyBhdCB0aGUgcGVyaW9kIHdoZW4gdGhleSB3ZXJlCgkJCQkJZ292ZXJuZWQgd2VsbC7vvIkgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGVzLiBXRCAyNSIgdmFsaWQ9InllcyI+SGVzLiBXRAoJCQkJCQkJMjU8L2JpYmw+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOseG9tiDOus61z4HOsc68zrXhvbrPgiDOus61z4HOsc68zrXhv5YgzrrOv8+E4b2zzrXOuSDOus6x4b22CgkJCQkJCQnPhOG9s866z4TOv869zrkgz4ThvbPOus+Ez4nOvTwvZm9yZWlnbj4sIOKAmHR3byBvZiBhIHRyYWRlIG5ldmVyCgkJCQkJCWFncmVlLuKAmTwvdHJhbnNsYXRpb24+"
translation['5.1312b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBvbmUKCQkJCQl3YXkgaXMgZnJvbSB3aXRoaW4gaXRzZWxmLCB3aGVuIHRoZSBwYXJ0bmVycyBpbiBpdCBmYWxsIGludG8gZGlzY29yZCwgYXMgdGhlCgkJCQkJdHlyYW5ueSBvZiB0aGUgZmFtaWx5IG9mIEdlbG88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VHlyYW50IG9mCgkJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5cmFjdXNlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTeXJhY3VzZSI+U3lyYWN1c2U8L3BsYWNlTmFtZT4KCQkJCQkJPGRhdGVSYW5nZSBhdXRobmFtZT0iLTQ4NS8tNDc4IiBjbGFzcz0idHJhbnNsYXRpb24iIGZyb209Ii00ODUiIHRvPSItNDc4Ij40ODU8L2RhdGVSYW5nZT4tNDc4IEIuQy4sIHN1Y2NlZWRlZCBieSBoaXMKCQkJCQkJYnJvdGhlciBIaWVybyB3aG8gZGllZCA0NjcuIEdlbG8ncyBzb24gaXMgdW5rbm93bi4gQ2YuIDEzMTViIDM1IGZmLjwvbm90ZT4KCQkJCQl3YXMgZGVzdHJveWVkLCBhbmQgaW4gbW9kZXJuIHRpbWVzPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3lyYWN1c2UiPlN5cmFjdXNlPC9wbGFjZU5hbWU+CgkJCQkJCTxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii00ODUvLTQ3OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItNDg1IiB0bz0iLTQ3OCI+NDg1PC9kYXRlUmFuZ2U+LTQ3OCBCLkMuLCBzdWNjZWVkZWQgYnkgaGlzCgkJCQkJCWJyb3RoZXIgSGllcm8gd2hvIGRpZWQgNDY3LiBHZWxvJ3Mgc29uIGlzIHVua25vd24uIENmLiAxMzE1YiAzNSBmZi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGRhdGUgYXV0aG5hbWU9Ii0zNTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNTYiPjM1NjwvZGF0ZT4gQi5DLiwgYSBnb29kIG1hbnkgeWVhcnMgYmVmb3JlIHRoaXMgYm9vayB3YXMKCQkJCQkJd3JpdHRlbi48L25vdGU+IHRoYXQgb2YgdGhlIGZhbWlseSBvZiBEaW9ueXNpdXM8ZGF0ZSBhdXRobmFtZT0iLTM1NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM1NiI+MzU2PC9kYXRlPiBCLkMuLCBhIGdvb2QgbWFueSB5ZWFycyBiZWZvcmUgdGhpcyBib29rIHdhcwoJCQkJCQl3cml0dGVuLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTMxMmEgNCBuLjwvbm90ZT7igJRHZWxvJ3MsIHdoZW4gVGhyYXN5YnVsdXMgdGhlCgkJCQkJYnJvdGhlciBvZiBIaWVybyBwYWlkIGNvdXJ0IHRvIHRoZSBzb24gb2YgR2VsbyBhbmQgdXJnZWQgaGltIGludG8gaW5kdWxnZW5jZXMgaW4KCQkJCQlvcmRlciB0aGF0IGhlIGhpbXNlbGYgbWlnaHQgcnVsZSwgYW5kIHRoZSBzb24ncyBjb25uZWN0aW9ucyBiYW5kZWQgdG9nZXRoZXIgYQoJCQkJCWJvZHkgb2YgY29uZmVkZXJhdGVzIGluIG9yZGVyIHRoYXQgdGhlIHR5cmFubnkgbWlnaHQgbm90IGJlIHB1dCBkb3duIGVudGlyZWx5CgkJCQkJYnV0IG9ubHkgVGhyYXN5YnVsdXMsIGJ1dCB0aGVpciBjb25mZWRlcmF0ZXMgc2VpemluZyB0aGUgb3Bwb3J0dW5pdHkgZXhwZWxsZWQKCQkJCQl0aGVtIGFsbDsgRGlvbnlzaXVzIHdhcyBwdXQgZG93biBieSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERpb24iIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERpb24iPkRpb248L3BsYWNlTmFtZT4sIGhpcyByZWxhdGl2ZSwgd2hvIGdvdCB0aGUgcGVvcGxlIG9uIHRvIGhpcyBzaWRlIGFuZAoJCQkJCWV4cGVsbGVkIGhpbSwgYnV0IHdhcyBhZnRlcndhcmRzIGtpbGxlZC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjIwIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmUgYXJlIHR3byBjYXVzZXMgdGhhdCBjaGllZmx5IGxlYWQgbWVuIHRvIGF0dGFjawoJCQkJCXR5cmFubnksIGhhdHJlZCBhbmQgY29udGVtcHQ7IHRoZSBmb3JtZXIsIGhhdHJlZCw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YXR0YWNoZXMgdG8gdHlyYW50cyBhbHdheXMsIGJ1dCBpdCBpcyB0aGVpciBiZWluZyBkZXNwaXNlZCB0aGF0CgkJCQkJY2F1c2VzIHRoZWlyIGRvd25mYWxsIGluIG1hbnkgY2FzZXMuIEEgcHJvb2Ygb2YgdGhpcyBpcyB0aGF0IG1vc3Qgb2YgdGhvc2UgdGhhdAoJCQkJCWhhdmUgd29uIHR5cmFubmllcyBoYXZlIGFsc28ga2VwdCB0aGVpciBvZmZpY2VzIHRvIHRoZSBlbmQsIGJ1dCB0aG9zZSB0aGF0IGhhdmUKCQkJCQlpbmhlcml0ZWQgdGhlbSBhbG1vc3QgYWxsIGxvc2UgdGhlbSBhdCBvbmNlOyBmb3IgdGhleSBsaXZlIGEgbGlmZSBvZiBpbmR1bGdlbmNlLAoJCQkJCWFuZCBzbyBiZWNvbWUgZGVzcGljYWJsZSBhbmQgYWxzbyBnaXZlIG1hbnkgb3Bwb3J0dW5pdGllcyB0byB0aGVpciBhdHRhY2tlcnMuCgkJCQkJCTwvdHJhbnNsYXRpb24+"
translation['5.1313a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4yMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhbHNvIGFuZ2VyIG11c3QgYmUgY291bnRlZAoJCQkJCWFzIGFuIGVsZW1lbnQgaW4gdGhlIGhhdHJlZCBmZWx0IGZvciB0aGVtLCBmb3IgaW4gYSB3YXkgaXQgb2NjYXNpb25zIHRoZSBzYW1lCgkJCQkJYWN0aW9ucy4gQW5kIG9mdGVuIGl0IGlzIGV2ZW4gbW9yZSBhY3RpdmUgdGhhbiBoYXRyZWQsIHNpbmNlIGFuZ3J5IG1lbiBhdHRhY2sKCQkJCQltb3JlIHZpZ29yb3VzbHkgYmVjYXVzZSBwYXNzaW9uIGRvZXMgbm90IGVtcGxveSBjYWxjdWxhdGlvbiDvvIhhbmQKCQkJCQlpbnNvbGVuY2UgbW9zdCBmcmVxdWVudGx5IGNhdXNlcyBtZW4gdG8gYmUgbGVkIGJ5IHRoZWlyIGFuZ3J5IHRlbXBlcnMsIHdoaWNoIHdhcwoJCQkJCXRoZSBjYXVzZSBvZiB0aGUgZmFsbCBvZiB0aGUgdHlyYW5ueSBvZiB0aGUgUGlzaXN0cmF0aWRhZSBhbmQgbWFueQoJCQkJCW90aGVyc++8iSwgYnV0IGhhdHJlZCBjYWxjdWxhdGVzIG1vcmU7IGZvciBhbmdlciBicmluZ3Mgd2l0aCBpdCBhbgoJCQkJCWVsZW1lbnQgb2YgcGFpbiwgbWFraW5nIGNhbGN1bGF0aW9uIGRpZmZpY3VsdCwgYnV0IGVubWl0eSBpcyBub3QgYWNjb21wYW5pZWQgYnkKCQkJCQlwYWluLiBBbmQgdG8gc3BlYWsgc3VtbWFyaWx5LCBhbGwgdGhlIHRoaW5ncyB0aGF0IHdlIGhhdmUgbWVudGlvbmVkIGFzIGNhdXNpbmcKCQkJCQl0aGUgZG93biBmYWxsIG9mIHVubWl4ZWQgYW5kIGV4dHJlbWUgb2xpZ2FyY2h5IGFuZCBvZiB0aGUgbGFzdCBmb3JtIG9mIGRlbW9jcmFjeQoJCQkJCW11c3QgYmUgY291bnRlZCBhcyBkZXN0cnVjdGl2ZSBvZiB0eXJhbm55IGFzIHdlbGwsIHNpbmNlIGV4dHJlbWUgb2xpZ2FyY2h5IGFuZAoJCQkJCWRlbW9jcmFjeSBhcmUgaW4gcmVhbGl0eSBkaXZpZGVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gZGl2aWRlZAoJCQkJCQlhbW9uZyBzZXZlcmFsIHBlcnNvbnMsIOKAmHB1dCBpbnRvIGNvbW1pc3Npb24u4oCZPC9ub3RlPgoJCQkJCXR5cmFubmllcy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjIyIiB1bml0PSJMb2ViIGNoYXAiIC8+Um95YWwgZ292ZXJubWVudCBvbiB0aGUKCQkJCQlvdGhlciBoYW5kIGlzIHZlcnkgc2VsZG9tIGRlc3Ryb3llZCBieSBleHRlcm5hbCBjYXVzZXMsIHNvIHRoYXQgaXQgaXMKCQkJCQlsb25nLWxhc3Rpbmc7IGJ1dCBpbiBtb3N0IGNhc2VzIGl0cyBkZXN0cnVjdGlvbiBhcmlzZXMgb3V0IG9mIGl0c2VsZi4gQW5kIGl0IGlzCgkJCQkJZGVzdHJveWVkIGluIHR3byB3YXlzLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMxM2EiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['5.1313a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPm9uZSB3aGVuIHRob3NlIHdobyBwYXJ0aWNpcGF0ZSBpbiBpdCBxdWFycmVsLCBhbmQKCQkJCQlhbm90aGVyIHdoZW4gdGhlIGtpbmdzIHRyeSB0byBhZG1pbmlzdGVyIHRoZSBnb3Zlcm5tZW50IHRvbyB0eXJhbm5pY2FsbHksCgkJCQkJY2xhaW1pbmcgdG8gZXhlcmNpc2Ugc292ZXJlaWdudHkgaW4gbW9yZSB0aGluZ3MgYW5kIGNvbnRyYXJ5IHRvIHRoZSBsYXcuIFJveWFsCgkJCQkJZ292ZXJubWVudHMgZG8gbm90IG9jY3VyIGFueSBtb3JlIG5vdywgYnV0IGlmIGV2ZXIgbW9uYXJjaGllcyBkbyBvY2N1ciB0aGV5IGFyZQoJCQkJCXJhdGhlciB0eXJhbm5pZXMsIGJlY2F1c2Ugcm95YWx0eSBpcyBnb3Zlcm5tZW50IG92ZXIgd2lsbGluZyBzdWJqZWN0cyBidXQgd2l0aAoJCQkJCXNvdmVyZWlnbnR5IG92ZXIgZ3JlYXRlciBtYXR0ZXJzLCBidXQgbWVuIG9mIGVxdWFsIHF1YWxpdHkgYXJlIG51bWVyb3VzIGFuZCBubwoJCQkJCW9uZSBpcyBzbyBvdXRzdGFuZGluZyBhcyB0byBmaXQgdGhlIG1hZ25pdHVkZSBhbmQgZGlnbml0eSBvZiB0aGUgb2ZmaWNlOyBzbyB0aGF0CgkJCQkJZm9yIHRoaXMgcmVhc29uIHRoZSBzdWJqZWN0cyBkbyBub3Qgc3VibWl0IHdpbGxpbmdseSwgYW5kIGlmIGEgbWFuIGhhcyBtYWRlCgkJCQkJaGltc2VsZiBydWxlciBieSBkZWNlcHRpb24gb3IgZm9yY2UsIHRoZW4gdGhpcyBpcyB0aG91Z2h0IHRvIGJlIGEgdHlyYW5ueS4KCQkJCQkJPC90cmFuc2xhdGlvbj4="
translation['5.1313a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4yMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkluIGNhc2VzIG9mIGhlcmVkaXRhcnkgcm95YWx0eQoJCQkJCXdlIG11c3QgYWxzbyBzZXQgZG93biBhIGNhdXNlIG9mIHRoZWlyIGRlc3RydWN0aW9uLCBpbiBhZGRpdGlvbiB0byB0aG9zZQoJCQkJCW1lbnRpb25lZCwgdGhlIGZhY3QgdGhhdCBoZXJlZGl0YXJ5IGtpbmdzIG9mdGVuIGJlY29tZSBkZXNwaWNhYmxlLCBhbmQgdGhhdAoJCQkJCWFsdGhvdWdoIHBvc3Nlc3Npbmcgbm90IHRoZSBwb3dlciBvZiBhIHR5cmFudCBidXQgdGhlIGRpZ25pdHkgb2YgYSBraW5nIHRoZXkKCQkJCQljb21taXQgaW5zb2xlbnQgb3V0cmFnZXM7IGZvciB0aGUgZGVwb3NpdGlvbiBvZiBraW5ncyB1c2VkIHRvIGJlIGVhc3ksIHNpbmNlIGEKCQkJCQlraW5nIHdpbGwgYXQgb25jZSBjZWFzZSB0byBiZSBraW5nIGlmIGhpcyBzdWJqZWN0cyBkbyBub3Qgd2lzaCBoaW0gdG8gYmUsCgkJCQkJd2hlcmVhcyBhIHR5cmFudCB3aWxsIHN0aWxsIGJlIHR5cmFudCBldmVuIHRob3VnaCBoaXMgc3ViamVjdHMgZG8gbm90IHdpc2gKCQkJCQkJaXQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIGNhdXNlcyB0aGVuIGFuZCBvdGhlcnMgb2YgdGhlIHNhbWUKCQkJCQluYXR1cmUgYXJlIHRob3NlIHRoYXQgYnJpbmcgYWJvdXQgdGhlIGRlc3RydWN0aW9uIG9mIG1vbmFyY2hpZXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhlIG90aGVyCgkJCQkJaGFuZCBpdCBpcyBjbGVhciB0aGF0IG1vbmFyY2hpZXMsIHNwZWFraW5nIGdlbmVyYWxseSwgYXJlIHByZXNlcnZlZCBpbiBzYWZldHkgYXMKCQkJCQlhIHJlc3VsdCBvZiB0aGUgb3Bwb3NpdGUgY2F1c2VzIHRvIHRob3NlIGJ5IHdoaWNoIHRoZXkgYXJlIGRlc3Ryb3llZC4gQnV0IHRha2luZwoJCQkJCXRoZSBkaWZmZXJlbnQgc29ydHMgb2YgbW9uYXJjaHkgc2VwYXJhdGVseeKAlHJveWFsdGllcyBhcmUgcHJlc2VydmVkIGJ5CgkJCQkJYnJpbmdpbmcgdGhlbTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5pbnRvIGEgbW9yZSBtb2RlcmF0ZQoJCQkJCWZvcm07IGZvciB0aGUgZmV3ZXIgcG93ZXJzIHRoZSBraW5ncyBoYXZlLCB0aGUgbG9uZ2VyIHRpbWUgdGhlIG9mZmljZSBpbiBpdHMKCQkJCQllbnRpcmV0eSBtdXN0IGxhc3QsIGZvciB0aGV5IHRoZW1zZWx2ZXMgYmVjb21lIGxlc3MgZGVzcG90aWMgYW5kIG1vcmUgZXF1YWwgdG8KCQkJCQl0aGVpciBzdWJqZWN0cyBpbiB0ZW1wZXIsIGFuZCB0aGVpciBzdWJqZWN0cyBlbnZ5IHRoZW0gbGVzcy4gRm9yIHRoaXMgd2FzIHRoZQoJCQkJCWNhdXNlIG9mIHRoZSBsb25nIHBlcnNpc3RlbmNlIG9mIHRoZSBNb2xvc3NpYW4gcm95YWx0eSwgYW5kIHRoYXQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IGhhcyBjb250aW51ZWQgYmVjYXVzZSB0aGUgb2ZmaWNlIHdhcwoJCQkJCWZyb20gdGhlIGJlZ2lubmluZyBkaXZpZGVkIGludG8gdHdvIGhhbHZlcywgYW5kIGJlY2F1c2UgaXQgd2FzIGFnYWluIGxpbWl0ZWQgaW4KCQkJCQl2YXJpb3VzIHdheXMgYnkgVGhlb3BvbXB1cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+S2luZyBvZgoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IGNpcmNhIDxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii03NzAvLTcyMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItNzcwIiB0bz0iLTcyMCI+NzcwPC9kYXRlUmFuZ2U+LTcyMCBCLkMuPC9ub3RlPiBpbiBwYXJ0aWN1bGFyIGJ5CgkJCQkJaGlzIGluc3RpdHV0aW5nIHRoZSBvZmZpY2Ugb2YgdGhlIGVwaG9ycyB0byBrZWVwIGEgY2hlY2sgdXBvbiBpdDsgZm9yIGJ5IHRha2luZwoJCQkJCWF3YXkgc29tZSBvZiB0aGUga2luZ3MnIHBvd2VyIGhlIGluY3JlYXNlZCB0aGUgcGVybWFuZW5jZSBvZiB0aGUgcm95YWwgb2ZmaWNlLAoJCQkJCXNvIHRoYXQgaW4gYSBtYW5uZXIgaGUgZGlkIG5vdCBtYWtlIGl0IGxlc3MgYnV0IGdyZWF0ZXIuIFRoaXMgaW5kZWVkIGFzIHRoZQoJCQkJCXN0b3J5IGdvZXMgaXMgd2hhdCBoZSBzYWlkIGluIHJlcGx5IHRvIGhpcyB3aWZlLCB3aGVuIHNoZSBhc2tlZCBpZiBoZSBmZWx0IG5vCgkJCQkJc2hhbWUgaW4gYmVxdWVhdGhpbmcgdGhlIHJveWFsIHBvd2VyIHRvIGhpcyBzb25zIHNtYWxsZXIgdGhhbiBoZSBoYWQgaW5oZXJpdGVkCgkJCQkJaXQgZnJvbSBoaXMgZmF0aGVyOiDigJxJbmRlZWQgSSBkbyBub3Qs4oCdIGhlIGlzIHNhaWQgdG8gaGF2ZQoJCQkJCWFuc3dlcmVkLCDigJxmb3IgSSBoYW5kIGl0IG9uIG1vcmUgbGFzdGluZy7igJ08cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gY2lyY2EgPGRhdGVSYW5nZSBhdXRobmFtZT0iLTc3MC8tNzIwIiBjbGFzcz0idHJhbnNsYXRpb24iIGZyb209Ii03NzAiIHRvPSItNzIwIj43NzA8L2RhdGVSYW5nZT4tNzIwIEIuQy48L3RyYW5zbGF0aW9uPg=="
translation['5.1313b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlR5cmFubmllcyBvbiB0aGUKCQkJCQlvdGhlciBoYW5kIGFyZSBwcmVzZXJ2ZWQgaW4gdHdvIGV4dHJlbWVseSBvcHBvc2l0ZSB3YXlzLiBPbmUgb2YgdGhlc2UgaXMgdGhlCgkJCQkJdHJhZGl0aW9uYWwgd2F5IGFuZCB0aGUgb25lIGluIHdoaWNoIG1vc3QgdHlyYW50cyBhZG1pbmlzdGVyIHRoZWlyIG9mZmljZS4gTW9zdAoJCQkJCW9mIHRoZXNlIG9yZGluYXJ5IHNhZmVndWFyZHMgb2YgdHlyYW5ueSBhcmUgc2FpZCB0byBoYXZlIGJlZW4gaW5zdGl0dXRlZCBieQoJCQkJCQlQZXJpYW5kZXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEyODRhIDI2IG4uPC9ub3RlPiBvZgoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENvcmludGgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLENvcmludGgiPkNvcmludGg8L3BsYWNlTmFtZT4sIGFuZCBhbHNvIG1hbnkgc3VjaAoJCQkJCWRldmljZXMgbWF5IGJlIGJvcnJvd2VkIGZyb20gdGhlIFBlcnNpYW4gZW1waXJlLiBUaGVzZSBhcmUgYm90aCB0aGUgbWVhc3VyZXMKCQkJCQltZW50aW9uZWQgc29tZSB0aW1lIGJhY2sgdG8gc2VjdXJlIHRoZSBzYWZldHkgb2YgYSB0eXJhbm55IGFzIGZhciBhcwoJCQkJCXBvc3NpYmxl4oCUdGhlIGxvcHBpbmcgb2ZmIG9mIG91dHN0YW5kaW5nIG1lbiBhbmQgdGhlIGRlc3RydWN0aW9uIG9mIHRoZQoJCQkJCXByb3VkLOKAlGFuZCBhbHNvIHRoZSBwcm9oaWJpdGlvbiBvZiBjb21tb24gbWVhbHMgYW5kIGNsdWItZmVsbG93c2hpcAoJCQkJCWFuZCBlZHVjYXRpb24gYW5kIGFsbCBvdGhlciB0aGluZ3Mgb2YgdGhpcyBuYXR1cmUsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzEzYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1313b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmluIGZhY3QgdGhlIGNsb3NlCgkJCQkJd2F0Y2ggdXBvbiBhbGwgdGhpbmdzIHRoYXQgdXN1YWxseSBlbmdlbmRlciB0aGUgdHdvIGVtb3Rpb25zIG9mIHByaWRlIGFuZAoJCQkJCWNvbmZpZGVuY2UsIGFuZCB0aGUgcHJldmVudGlvbiBvZiB0aGUgZm9ybWF0aW9uIG9mIHN0dWR5LWNpcmNsZXMgYW5kIG90aGVyCgkJCQkJY29uZmVyZW5jZXMgZm9yIGRlYmF0ZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHBocmFzZXMgY292ZXIKCQkJCQkJUGxhdG8ncyBnYXRoZXJpbmdzIGluIHRoZSBBY2FkZW15LCBBcmlzdG90bGUncyBpbiB0aGUgUGVyaXBhdG9zIG9mIHRoZQoJCQkJCQlMeWNldW0sIGFuZCBvdGhlciBtZWV0aW5ncyBmb3IgdGhlIGludGVsbGVjdHVhbCB1c2Ugb2YgbGVpc3VyZSBpbiBneW1uYXNpYSwKCQkJCQkJcGFsYWVzdHJhZSBhbmQgbGVzY2hhZS48L25vdGU+IGFuZCB0aGUgZW1wbG95bWVudCBvZiBldmVyeSBtZWFucyB0aGF0IHdpbGwKCQkJCQltYWtlIHBlb3BsZSBhcyBtdWNoIGFzIHBvc3NpYmxlIHVua25vd24gdG8gb25lIGFub3RoZXIg77yIZm9yIGZhbWlsaWFyaXR5CgkJCQkJaW5jcmVhc2VzIG11dHVhbCBjb25maWRlbmNl77yJOyA8L3RyYW5zbGF0aW9uPg=="
translation['5.1313b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGZvciB0aGUgcGVvcGxlIGluIHRoZSBjaXR5IHRvIGJlIGFsd2F5cyB2aXNpYmxlIGFuZCB0bwoJCQkJCWhhbmcgYWJvdXQgdGhlIHBhbGFjZS1nYXRlcyDvvIhmb3IgdGh1cyB0aGVyZSB3b3VsZCBiZSBsZWFzdCBjb25jZWFsbWVudAoJCQkJCWFib3V0IHdoYXQgdGhleSBhcmUgZG9pbmcsIGFuZCB0aGV5IHdvdWxkIGdldCBpbnRvIGEgaGFiaXQgb2YgYmVpbmcgaHVtYmxlIGZyb20KCQkJCQlhbHdheXMgYWN0aW5nIGluIGEgc2VydmlsZSB3YXnvvIk7IGFuZCBhbGwgdGhlIG90aGVyIHNpbWlsYXIgZGV2aWNlcyBvZgoJCQkJCVBlcnNpYW4gYW5kIGJhcmJhcmlhbiB0eXJhbm55IO+8iGZvciBhbGwgaGF2ZSB0aGUgc2FtZSBlZmZlY3TvvIk7CgkJCQkJYW5kIHRvIHRyeSBub3QgdG8gYmUgdW5pbmZvcm1lZCBhYm91dCBhbnkgY2hhbmNlIHV0dGVyYW5jZXMgb3IgYWN0aW9ucyBvZiBhbnkgb2YKCQkJCQl0aGUgc3ViamVjdHMsIGJ1dCB0byBoYXZlIHNwaWVzIGxpa2UgdGhlIHdvbWVuIGNhbGxlZAoJCQkJCeKAmHByb3ZvY2F0cmljZXPigJkgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3lyYWN1c2UiPlN5cmFjdXNlPC9wbGFjZU5hbWU+IGFuZCB0aGUg4oCYc2hhcnAtZWFyc+KAmSB0aGF0IHVzZWQgdG8KCQkJCQliZSBzZW50IG91dCBieSBIaWVybyB3aGVyZXZlciB0aGVyZSB3YXMgYW55IGdhdGhlcmluZyBvciBjb25mZXJlbmNlCgkJCQkJ77yIZm9yIHdoZW4gbWVuIGFyZSBhZnJhaWQgb2Ygc3BpZXMgb2YgdGhpcyBzb3J0IHRoZXkga2VlcCBhIGNoZWNrIG9uCgkJCQkJdGhlaXIgdG9uZ3VlcywgYW5kIGlmIHRoZXkgZG8gc3BlYWsgZnJlZWx5IGFyZSBsZXNzIGxpa2VseSBub3QgdG8gYmUgZm91bmQKCQkJCQlvdXTvvIk7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS40IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHRvIHNldCBtZW4gYXQKCQkJCQl2YXJpYW5jZSB3aXRoIG9uZSBhbm90aGVyIGFuZCBjYXVzZSBxdWFycmVscyBiZXR3ZWVuIGZyaWVuZCBhbmQgZnJpZW5kIGFuZAoJCQkJCWJldHdlZW4gdGhlIHBlb3BsZSBhbmQgdGhlIG5vdGFibGVzIGFuZCBhbW9uZyB0aGUgcmljaC4gQW5kIGl0IGlzIGEgZGV2aWNlIG9mCgkJCQkJdHlyYW5ueSB0byBtYWtlIHRoZSBzdWJqZWN0cyBwb29yLCBzbyB0aGF0IGEgZ3VhcmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QXBwYXJlbnRseSB0aGlzIG1lYW5zIGEgY2l0aXplbiBmb3JjZSBzaWRlIGJ5IHNpZGUgd2l0aCB0aGUKCQkJCQkJdHlyYW50J3MgbWVyY2VuYXJpZXM7IGEgdmFyaWFudCBnaXZlcyDigJhpbiBvcmRlciB0aGF0IHRoZQoJCQkJCQnvvIh0eXJhbnQnc++8iSBndWFyZCBtYXkgYmUga2VwdC7igJk8L25vdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm1heSBub3QgYmUga2VwdCwgYW5kIGFsc28gdGhhdCB0aGUgcGVvcGxlCgkJCQkJYmVpbmcgYnVzeSB3aXRoIHRoZWlyIGRhaWx5IGFmZmFpcnMgbWF5IG5vdCBoYXZlIGxlaXN1cmUgdG8gcGxvdCBhZ2FpbnN0IHRoZWlyCgkJCQkJcnVsZXIuIEluc3RhbmNlcyBvZiB0aGlzIGFyZSB0aGUgcHlyYW1pZHMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjgzMyI+RWd5cHQ8L3BsYWNlTmFtZT4gYW5kIHRoZSB2b3RpdmUgb2ZmZXJpbmdzIG9mIHRoZSBDeXBzZWxpZHMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkN5cHNlbHVzIGFuZCBoaXMgc29uIFBlcmlhbmRlciDvvIgxMzEwYgoJCQkJCQkyOSBuLiwgMTI4NGEgMjYgbi7vvIkgZGVkaWNhdGVkIGEgY29sb3NzYWwgc3RhdHVlIG9mIFpldXMgYXQKCQkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsT2x5bXBpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsT2x5bXBpYSI+T2x5bXBpYTwvcGxhY2VOYW1lPiBhbmQgb3RoZXIgbW9udW1lbnRzCgkJCQkJCXRoZXJlIGFuZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERlbHBoaSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRGVscGhpIj5EZWxwaGk8L3BsYWNlTmFtZT4uPC9ub3RlPiBhbmQKCQkJCQl0aGUgYnVpbGRpbmcgb2YgdGhlIHRlbXBsZSBvZiBPbHltcGlhbiBaZXVzIGJ5IHRoZSBQaXNpc3RyYXRpZGFlPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxPbHltcGlhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxPbHltcGlhIj5PbHltcGlhPC9wbGFjZU5hbWU+IGFuZCBvdGhlciBtb251bWVudHMKCQkJCQkJdGhlcmUgYW5kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVscGhpIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxEZWxwaGkiPkRlbHBoaTwvcGxhY2VOYW1lPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGlzaXN0cmF0dXMgaXMgc2FpZCB0byBoYXZlIGJlZ3VuIHRoZSB0ZW1wbGUKCQkJCQkJb2YgT2x5bXBpYW4gWmV1cyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIG5vdAoJCQkJCQlmaW5pc2hlZCB0aWxsIHRoZSB0aW1lIG9mIEhhZHJpYW4uPC9ub3RlPiBhbmQgb2YgdGhlIHRlbXBsZXMgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBub3QKCQkJCQkJZmluaXNoZWQgdGlsbCB0aGUgdGltZSBvZiBIYWRyaWFuLjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjczIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzMiPlNhbW9zPC9wbGFjZU5hbWU+LCB3b3JrcyBvZiBQb2x5Y3JhdGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlR5cmFudCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjY3MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjczIj5TYW1vczwvcGxhY2VOYW1lPiwgZC4KCQkJCQkJCTxkYXRlIGF1dGhuYW1lPSItNTIyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNTIyIj41MjI8L2RhdGU+IEIuQy48L25vdGU+IO+8iGZvciBhbGwgdGhlc2UKCQkJCQl1bmRlcnRha2luZ3MgcHJvZHVjZSB0aGUgc2FtZSBlZmZlY3QsIGNvbnN0YW50IG9jY3VwYXRpb24gYW5kIHBvdmVydHkgYW1vbmcgdGhlCgkJCQkJc3ViamVjdCBwZW9wbGXvvIk7IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjczIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzMiPlNhbW9zPC9wbGFjZU5hbWU+LCBkLgoJCQkJCQkJPGRhdGUgYXV0aG5hbWU9Ii01MjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii01MjIiPjUyMjwvZGF0ZT4gQi5DLjwvdHJhbnNsYXRpb24+"
translation['5.1314a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS41IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHRoZQoJCQkJCWxldnlpbmcgb2YgdGF4ZXMsIGFzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3lyYWN1c2UiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPgoJCQkJCe+8iGZvciBpbiB0aGUgcmVpZ24gb2YgRGlvbnlzaXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZQoJCQkJCQkxMjU5YSAyOCBuLjwvbm90ZT4gdGhlIHJlc3VsdCBvZiB0YXhhdGlvbiB1c2VkIHRvIGJlIHRoYXQgaW4gZml2ZSB5ZWFycyBtZW4KCQkJCQloYWQgY29udHJpYnV0ZWQgdGhlIHdob2xlIG9mIHRoZWlyIHN1YnN0YW5jZe+8iS4gQWxzbyB0aGUgdHlyYW50IGlzIGEKCQkJCQlzdGlycmVyLXVwIG9mIHdhciwgd2l0aCB0aGUgZGVsaWJlcmF0ZSBwdXJwb3NlIG9mIGtlZXBpbmcgdGhlIHBlb3BsZSBidXN5IGFuZAoJCQkJCWFsc28gb2YgbWFraW5nIHRoZW0gY29uc3RhbnRseSBpbiBuZWVkIG9mIGEgbGVhZGVyLiBBbHNvIHdoZXJlYXMgZnJpZW5kcyBhcmUgYQoJCQkJCW1lYW5zIG9mIHNlY3VyaXR5IHRvIHJveWFsdHksIGl0IGlzIGEgbWFyayBvZiBhIHR5cmFudCB0byBiZSBleHRyZW1lbHkKCQkJCQlkaXN0cnVzdGZ1bCBvZiBoaXMgZnJpZW5kcywgb24gdGhlIGdyb3VuZCB0aGF0LCB3aGlsZSBhbGwgaGF2ZSB0aGUgd2lzaCwgdGhlc2UKCQkJCQljaGllZmx5IGhhdmUgdGhlIHBvd2VyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjkuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFsc28gdGhlCgkJCQkJdGhpbmdzIHRoYXQgb2NjdXIgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBmaW5hbCBmb3JtIG9mIGRlbW9jcmFjeTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gMTMwOWIgMjcgZmYuPC9ub3RlPiBhcmUgYWxsIGZhdm9yYWJsZSB0bwoJCQkJCXR5cmFubnnigJRkb21pbmFuY2Ugb2Ygd29tZW4gaW4gdGhlIGhvbWVzLCBpbiBvcmRlciB0aGF0IHRoZXkgbWF5IGNhcnJ5CgkJCQkJYWJyb2FkIHJlcG9ydHMgYWdhaW5zdCB0aGUgbWVuLCBhbmQgbGFjayBvZiBkaXNjaXBsaW5lIGFtb25nIHRoZSBzbGF2ZXMsIGZvciB0aGUKCQkJCQlzYW1lIHJlYXNvbjsgZm9yIHNsYXZlcyBhbmQgd29tZW4gZG8gbm90IHBsb3QgYWdhaW5zdCB0eXJhbnRzLCBhbmQgYWxzbywgaWYgdGhleQoJCQkJCXByb3NwZXIgdW5kZXIgdHlyYW5uaWVzLCBtdXN0IGZlZWwgd2VsbC1kaXNwb3NlZCB0byB0aGVtLCBhbmQgdG8gZGVtb2NyYWNpZXMgYXMKCQkJCQl3ZWxsIO+8iGZvciB0aGUgY29tbW9uIHBlb3BsZSBhbHNvIHdpc2hlcyB0byBiZSBzb2xlIHJ1bGVy77yJLgoJCQkJCUhlbmNlIGFsc28gdGhlIGZsYXR0ZXJlciBpcyBpbiBob25vciB3aXRoIGJvdGjigJR3aXRoIGRlbW9jcmFjaWVzIHRoZQoJCQkJCWRlbWFnb2d1ZSDvvIhmb3IgdGhlIGRlbWFnb2d1ZSBpcyBhIGZsYXR0ZXJlciBvZiB0aGUgcGVvcGxl77yJLAoJCQkJCWFuZCB3aXRoIHRoZSB0eXJhbnRzIHRob3NlIHdobyBhc3NvY2lhdGUgd2l0aCB0aGVtIGh1bWJseSwgd2hpY2ggaXMgdGhlIHRhc2sgb2YKCQkJCQlmbGF0dGVyeS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMTRhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['5.1314a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkluIGZhY3Qgb3dpbmcgdG8gdGhpcyB0eXJhbm55IGlzIGEgZnJpZW5kIG9mIHRoZSBiYXNlOyBmb3IKCQkJCQl0eXJhbnRzIGVuam95IGJlaW5nIGZsYXR0ZXJlZCwgYnV0IG5vYm9keSB3b3VsZCBldmVyIGZsYXR0ZXIgdGhlbSBpZiBoZQoJCQkJCXBvc3Nlc3NlZCBhIGZyZWUgc3Bpcml04oCUbWVuIG9mIGNoYXJhY3RlciBsb3ZlIHRoZWlyIHJ1bGVyLCBvciBhdCBhbGwKCQkJCQlldmVudHMgZG8gbm90IGZsYXR0ZXIgaGltLiBBbmQgdGhlIGJhc2UgYXJlIHVzZWZ1bCBmb3IgYmFzZSBidXNpbmVzcywgZm9yIG5haWwKCQkJCQlpcyBkcml2ZW4gb3V0IGJ5IG5haWwsIGFzIHRoZSBwcm92ZXJiIGdvZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBwcm92ZXJiIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8oc674b+3IOG8p867zr/PgiDhvJDOus66z4HOv+G9u861z4TOsc65PC9mb3JlaWduPgoJCQkJCQl1c3VhbGx5IG1lYW50IGRyaXZpbmcgb3V0IHNvbWV0aGluZyBieSBhIHRoaW5nIG9mIHRoZSBzYW1lIGtpbmQKCQkJCQkJ77yI4oCYc2V0IGEgdGhpZWYgdG8gY2F0Y2ggYSB0aGllZuKAme+8iSwgbm90CgkJCQkJCWFzIGhlcmUgdGhlIGV4ZWN1dGlvbiBvZiBldmlsIGRlc2lnbnMgYnkgYXBwcm9wcmlhdGUgYWdlbnRzLjwvbm90ZT4KCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvKHOu+G/tyDhvKfOu86/z4Ig4byQzrrOus+Bzr/hvbvOtc+EzrHOuTwvZm9yZWlnbj4KCQkJCQkJdXN1YWxseSBtZWFudCBkcml2aW5nIG91dCBzb21ldGhpbmcgYnkgYSB0aGluZyBvZiB0aGUgc2FtZSBraW5kCgkJCQkJCe+8iOKAmHNldCBhIHRoaWVmIHRvIGNhdGNoIGEgdGhpZWbigJnvvIksIG5vdAoJCQkJCQlhcyBoZXJlIHRoZSBleGVjdXRpb24gb2YgZXZpbCBkZXNpZ25zIGJ5IGFwcHJvcHJpYXRlIGFnZW50cy48L3RyYW5zbGF0aW9uPg=="
translation['5.1314a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS43IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGl0IGlzIGEgbWFyayBvZiBhIHR5cmFudCB0bwoJCQkJCWRpc2xpa2UgYW55b25lIHRoYXQgaXMgcHJvdWQgb3IgZnJlZS1zcGlyaXRlZDsgZm9yIHRoZSB0eXJhbnQgY2xhaW1zIGZvciBoaW1zZWxmCgkJCQkJYWxvbmUgdGhlIHJpZ2h0IHRvIGJlYXIgdGhhdCBjaGFyYWN0ZXIsIGFuZCB0aGUgbWFuIHdobyBtZWV0cyBoaXMgcHJpZGUgd2l0aAoJCQkJCXByaWRlIGFuZCBzaG93cyBhIGZyZWUgc3Bpcml0IHJvYnMgdHlyYW5ueSBvZiBpdHMgc3VwZXJpb3JpdHkgYW5kIHBvc2l0aW9uIG9mCgkJCQkJbWFzdGVyeTsgdHlyYW50cyB0aGVyZWZvcmUgaGF0ZSB0aGUgcHJvdWQgYXMgdW5kZXJtaW5pbmcgdGhlaXIgYXV0aG9yaXR5LiBBbmQgaXQKCQkJCQlpcyBhIG1hcmsgb2YgYSB0eXJhbnQgdG8gaGF2ZSBtZW4gb2YgZm9yZWlnbiBleHRyYWN0aW9uIHJhdGhlciB0aGFuIGNpdGl6ZW5zIGFzCgkJCQkJZ3Vlc3RzIGF0IHRhYmxlIGFuZCBjb21wYW5pb25zLCBmZWVsaW5nIHRoYXQgY2l0aXplbnMgYXJlIGhvc3RpbGUgYnV0IHN0cmFuZ2VycwoJCQkJCW1ha2Ugbm8gY2xhaW0gYWdhaW5zdCBoaW0uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gZG8gbm90IGNsYWltCgkJCQkJCWhvbm9ycyBhcyBhZ2FpbnN0IHRoZWlyIHBhdHJvbiwgY2xhaW0gdG8gYmUgaGlzIGVxdWFscy48L25vdGU+IFRoZXNlIGFuZAoJCQkJCXNpbWlsYXIgaGFiaXRzIGFyZSBjaGFyYWN0ZXJpc3RpYyBvZiB0eXJhbnRzIGFuZCBwcmVzZXJ2YXRpdmUgb2YgdGhlaXIgb2ZmaWNlLAoJCQkJCWJ1dCB0aGV5IGxhY2sgbm8gZWxlbWVudCBvZiBiYXNlbmVzcy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgYnJvYWRseSBzcGVha2luZywgdGhleSBhcmUgYWxsIGluY2x1ZGVkIHVuZGVyIHRocmVlIGhlYWRzOyBmb3IgdHlyYW5ueQoJCQkJCWFpbXMgYXQgdGhyZWUgdGhpbmdzLCBvbmUgdG8ga2VlcCBpdHMgc3ViamVjdHMgaHVtYmxlIO+8iGZvciBhCgkJCQkJaHVtYmxlLXNwaXJpdGVkIG1hbiB3b3VsZCBub3QgcGxvdCBhZ2FpbnN0IGFueWJvZHnvvIksIHNlY29uZCB0byBoYXZlCgkJCQkJdGhlbSBjb250aW51YWxseSBkaXN0cnVzdCBvbmUgYW5vdGhlciDvvIhmb3IgYSB0eXJhbm55IGlzIG5vdCBkZXN0cm95ZWQKCQkJCQl1bnRpbCBzb21lIG1lbiBjb21lIHRvIHRydXN0IGVhY2ggb3RoZXIsIG93aW5nIHRvIHdoaWNoIHR5cmFudHMgYWxzbyBtYWtlIHdhciBvbgoJCQkJCXRoZSByZXNwZWN0YWJsZSwgYXMgZGV0cmltZW50YWw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dG8KCQkJCQl0aGVpciBydWxlIG5vdCBvbmx5IGJlY2F1c2Ugb2YgdGhlaXIgcmVmdXNhbCB0byBzdWJtaXQgdG8gZGVzcG90aWMgcnVsZSwgYnV0CgkJCQkJYWxzbyBiZWNhdXNlIHRoZXkgYXJlIGZhaXRoZnVsIHRvIG9uZSBhbm90aGVyIGFuZCB0byB0aGUgb3RoZXIgY2l0aXplbnMsIGFuZCBkbwoJCQkJCW5vdCBpbmZvcm0gYWdhaW5zdCBvbmUgYW5vdGhlciBub3IgYWdhaW5zdCB0aGUgb3RoZXJz77yJOyBhbmQgdGhlIHRoaXJkCgkJCQkJaXMgbGFjayBvZiBwb3dlciBmb3IgcG9saXRpY2FsIGFjdGlvbiDvvIhzaW5jZSBub2JvZHkgYXR0ZW1wdHMKCQkJCQlpbXBvc3NpYmlsaXRpZXMsIHNvIHRoYXQgbm9ib2R5IHRyaWVzIHRvIHB1dCBkb3duIGEgdHlyYW5ueSBpZiBoZSBoYXMgbm90IHBvd2VyCgkJCQkJYmVoaW5kIGhpbe+8iS4gPC90cmFuc2xhdGlvbj4="
translation['5.1314b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS45IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlc2UgdGhlbiBpbgoJCQkJCWZhY3QgYXJlIHRoZSB0aHJlZSBhaW1zIHRvIHdoaWNoIHRoZSB3aXNoZXMgb2YgdHlyYW50cyBhcmUgZGlyZWN0ZWQ7IGZvciBhbGwgdGhlCgkJCQkJbWVhc3VyZXMgdGFrZW4gYnkgdHlyYW50cyBvbmUgbWlnaHQgY2xhc3MgdW5kZXIgdGhlc2UgcHJpbmNpcGxlc+KAlHNvbWUKCQkJCQlhcmUgZGVzaWduZWQgdG8gcHJldmVudCBtdXR1YWwgY29uZmlkZW5jZSBhbW9uZyB0aGUgc3ViamVjdHMsIG90aGVycyB0byBjdXJ0YWlsCgkJCQkJdGhlaXIgcG93ZXIsIGFuZCBvdGhlcnMgdG8gbWFrZSB0aGVtIGh1bWJsZS1zcGlyaXRlZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjkuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3VjaCB0aGVuIGlzIHRoZSBuYXR1cmUgb2YKCQkJCQlvbmUgbWV0aG9kIGJ5IHdoaWNoIHNlY3VyaXR5IGlzIG9idGFpbmVkIGZvciB0eXJhbm5pZXMuIFRoZSBvdGhlciB0cmllcyB0bwoJCQkJCW9wZXJhdGUgaW4gYSBtYW5uZXIgYWxtb3N0IHRoZSBvcHBvc2l0ZSBvZiB0aGUgZGV2aWNlcyBtZW50aW9uZWQuIEFuZCBpdCBjYW4gYmUKCQkJCQlhc2NlcnRhaW5lZCBmcm9tIGNvbnNpZGVyaW5nIHRoZSBkb3duZmFsbCBvZiByb3lhbCBnb3Zlcm5tZW50cy4gRm9yIGp1c3QgYXMgb25lCgkJCQkJbW9kZSBvZiBkZXN0cm95aW5nIHJveWFsdHkgaXMgdG8gbWFrZSBpdHMgZ292ZXJubWVudCBtb3JlIHR5cmFubmljYWwsIHNvIGEgbW9kZQoJCQkJCW9mIHNlY3VyaW5nIHR5cmFubnkgaXMgdG8gbWFrZSBpdCBtb3JlIHJlZ2FsLCBwcm90ZWN0aW5nIG9uZSB0aGluZyBvbmx5LCBpdHMKCQkJCQlwb3dlciwgaW4gb3JkZXIgdGhhdCB0aGUgcnVsZXIgbWF5IGdvdmVybiBub3Qgb25seSB3aXRoIHRoZSBjb25zZW50IG9mIHRoZQoJCQkJCXN1YmplY3RzIGJ1dCBldmVuIHdpdGhvdXQgaXQ7IGZvciBpZiBoZSBnaXZlcyB1cCB0aGlzLCBoZSBhbHNvIGdpdmVzIHVwIGhpcwoJCQkJCXBvc2l0aW9uIGFzIHR5cmFudC4gQnV0IHdoaWxlIHRoaXMgbXVzdCBzdGFuZCBhcyBhIGZ1bmRhbWVudGFsIHByaW5jaXBsZSwgYWxsCgkJCQkJdGhlIG90aGVyIG1lYXN1cmVzIGhlIG1heSBlaXRoZXIgYWRvcHQgb3IgcHJldGVuZCB0byBhZG9wdCBieSBjbGV2ZXJseSBhY3RpbmcKCQkJCQl0aGUgcm95YWwgcGFydC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIGZpcnN0IHN0ZXAgaXMKCQkJCQl0byBiZSBjYXJlZnVsIG9mIHRoZSBwdWJsaWMgZnVuZHMsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzE0YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1314b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPm5vdCBzcXVhbmRlcmluZyBwcmVzZW50cyBzdWNoIGFzCgkJCQkJdGhlIG11bHRpdHVkZXMgcmVzZW50LCB3aGVuIHR5cmFudHMgdGFrZSBtb25leSBmcm9tIHRoZSBwZW9wbGUgdGhlbXNlbHZlcyB3aGlsZQoJCQkJCXRoZXkgdG9pbCBhbmQgbGFib3IgaW4gcGVudXJ5IGFuZCBsYXZpc2ggaXQgb24gbWlzdHJlc3NlcyBhbmQgZm9yZWlnbmVycyBhbmQKCQkJCQljcmFmdHNtZW4sIGFuZCBhbHNvIHJlbmRlcmluZyBhY2NvdW50IG9mIHJlY2VpcHRzIGFuZCBleHBlbmRpdHVyZSwgYXMgc29tZQoJCQkJCXR5cmFudHMgaGF2ZSBkb25lIGFscmVhZHkg77yIZm9yIHRoaXMgY2FyZWZ1bCBtYW5hZ2VtZW50IHdvdWxkIG1ha2UgYQoJCQkJCXJ1bGVyIHNlZW0gYSBzdGV3YXJkIG9mIHRoZSBzdGF0ZSBhbmQgbm90IGEgdHlyYW50LCBhbmQgaGUgbmVlZCBub3QgYmUgYWZyYWlkIG9mCgkJCQkJZXZlciBiZWluZyBhdCBhIGxvc3MgZm9yIGZ1bmRzIHdoaWxlIGhlIGlzIG1hc3RlciBvZiB0aGUgc3RhdGU7IDwvdHJhbnNsYXRpb24+"
translation['5.1314b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPm9uIHRoZSBjb250cmFyeSwgZm9yIHRob3NlIHR5cmFudHMgd2hvIGdvCgkJCQkJYWJyb2FkIG9uIGZvcmVpZ24gY2FtcGFpZ25zIHRoaXMgaXMgYWN0dWFsbHkgbW9yZSBleHBlZGllbnQgdGhhbiB0byBsZWF2ZSB0aGVpcgoJCQkJCW1vbmV5IHRoZXJlIGNvbGxlY3RlZCBpbnRvIG9uZSBzdW0sIGZvciB0aGVyZSBpcyBsZXNzIGZlYXIgb2YgdGhvc2UgZ3VhcmRpbmcgaXQKCQkJCQltYWtpbmcgYW4gYXR0ZW1wdCBvbiBwb3dlcjsgc2luY2UgZm9yIHR5cmFudHMgY2FtcGFpZ25pbmcgYWJyb2FkIHRoZSBrZWVwZXJzIG9mCgkJCQkJdGhlIHRyZWFzdXJ5IGFyZSBtb3JlIHRvIGJlIGZlYXJlZCB0aGFuIHRoZSBjaXRpemVucywgZm9yIHRoZSBjaXRpemVucyBnbyBhYnJvYWQKCQkJCQl3aXRoIGhpbSBidXQgdGhlIG90aGVycyBzdGF5IGF0IGhvbWXvvIkuIFNlY29uZGx5IGhlIG11c3QgYmUgc2VlbiB0bwoJCQkJCWNvbGxlY3QgaGlzIHRheGVzIGFuZCBiZW5ldm9sZW5jZXMgZm9yIHB1cnBvc2VzIG9mIGFkbWluaXN0cmF0aW9uIGFuZCB0byBtZWV0CgkJCQkJaGlzIG9jY2FzaW9uYWwgcmVxdWlyZW1lbnRzIGZvciBtaWxpdGFyeSBlbWVyZ2VuY2llcywgYW5kIGdlbmVyYWxseSBtdXN0IHBvc2UgYXMKCQkJCQlndWFyZGlhbiBhbmQgc3Rld2FyZCBhcyBpdCB3ZXJlIG9mIGEgcHVibGljIGZ1bmQgYW5kIG5vdCBhIHByaXZhdGUgZXN0YXRlLgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjkuMTMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgaGlzIGJlYXJpbmcgbXVzdCBub3QgYmUKCQkJCQloYXJzaCBidXQgZGlnbmlmaWVkLCBhbmQgYWxzbyBzdWNoIGFzIHRvIGluc3BpcmUgbm90IGZlYXIgYnV0IHJhdGhlcgoJCQkJCQlyZXNwZWN0PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmluIHRob3NlIHdobyBlbmNvdW50ZXIKCQkJCQloaW0sIHRob3VnaCB0aGlzIGlzIG5vdCBlYXN5IHRvIGFjaGlldmUgaWYgaGUgaXMgYSBjb250ZW1wdGlibGUgcGVyc29uYWxpdHk7IHNvCgkJCQkJdGhhdCBldmVuIGlmIGhlIG5lZ2xlY3RzIHRoZSBvdGhlciB2aXJ0dWVzIGhlIGlzIGJvdW5kIHRvIGN1bHRpdmF0ZSBtaWxpdGFyeQoJCQkJCXZhbG9yLCBhbmQgdG8gbWFrZSBoaW1zZWxmIGEgcmVwdXRhdGlvbiBhcyBhIHNvbGRpZXIuIEFuZCBmdXJ0aGVyIG1vcmUgbm90IG9ubHkKCQkJCQltdXN0IGhlIGhpbXNlbGYgYmUga25vd24gbm90IHRvIG91dHJhZ2UgYW55IG9mIGhpcyBzdWJqZWN0cywgZWl0aGVyIGJveSBvciBnaXJsLAoJCQkJCWJ1dCBzbyBhbHNvIG11c3QgZXZlcnlib2R5IGFib3V0IGhpbSwgYW5kIGFsc28gdGhlaXIgd2l2ZXMgbXVzdCBzaW1pbGFybHkgc2hvdwoJCQkJCXJlc3BlY3QgdG93YXJkcyB0aGUgb3RoZXIgd29tZW4sIHNpbmNlIGV2ZW4gdGhlIGluc29sZW5jZXMgb2Ygd29tZW4gaGF2ZSBjYXVzZWQKCQkJCQl0aGUgZmFsbCBvZiBtYW55IHR5cmFubmllcy4gPC90cmFuc2xhdGlvbj4="
translation['5.1315a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpbgoJCQkJCXJlZ2FyZCB0byBib2RpbHkgZW5qb3ltZW50cyBoZSBtdXN0IGRvIHRoZSBvcHBvc2l0ZSBvZiB3aGF0IHNvbWUgdHlyYW50cyBkbyBub3cKCQkJCQnvvIhmb3IgdGhleSBub3Qgb25seSBiZWdpbiB0aGVpciBkZWJhdWNoZXJpZXMgYXQgZGF5YnJlYWsgYW5kIGNhcnJ5IHRoZW0KCQkJCQlvbiBmb3IgbWFueSBkYXlzIGF0IGEgdGltZSwgYnV0IGFsc28gd2lzaCB0byBiZSBzZWVuIGRvaW5nIHNvIGJ5IHRoZSBwdWJsaWMsIGluCgkJCQkJb3JkZXIgdGhhdCBwZW9wbGUgbWF5IGFkbWlyZSB0aGVtIGFzIGZvcnR1bmF0ZSBhbmQgaGFwcHnvvIksIGJ1dCBiZXN0IG9mCgkJCQkJYWxsIGhlIG11c3QgYmUgbW9kZXJhdGUgaW4gc3VjaCBtYXR0ZXJzLCBvciBpZiBub3QsIGhlIG11c3QgYXQgYWxsIGV2ZW50cyBhdm9pZAoJCQkJCWRpc3BsYXlpbmcgaGlzIGluZHVsZ2VuY2VzIHRvIGhpcyBmZWxsb3dzIO+8iGZvciBub3QgdGhlIHNvYmVyIG1hbiBidXQKCQkJCQl0aGUgZHJ1bmthcmQgaXMgZWFzeSB0byBhdHRhY2sgYW5kIHRvIGRlc3Bpc2UsIG5vdCB0aGUgd2FrZWZ1bCBtYW4gYnV0IHRoZQoJCQkJCXNsZWVwZXLvvIkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBoZSBtdXN0IGRvCgkJCQkJdGhlIG9wcG9zaXRlIG9mIGFsbW9zdCBhbGwgdGhlIHRoaW5ncyBtZW50aW9uZWQgc29tZSB0aW1lIGJhY2ssIGZvciBoZSBtdXN0IGxheQoJCQkJCW91dCBhbmQgYWRvcm4gdGhlIGNpdHkgYXMgaWYgaGUgd2VyZSBhIHRydXN0ZWUgYW5kIG5vdCBhIHR5cmFudC4gQW5kIGZ1cnRoZXIgaGUKCQkJCQltdXN0IGJlIHNlZW4gYWx3YXlzIHRvIGJlIGV4Y2VwdGlvbmFsbHkgemVhbG91cyBhcyByZWdhcmRzIHJlbGlnaW91cyBvYnNlcnZhbmNlcwoJCQkJCe+8iGZvciBwZW9wbGUgYXJlIGxlc3MgYWZyYWlkIG9mIHN1ZmZlcmluZyBhbnkgaWxsZWdhbCB0cmVhdG1lbnQgZnJvbSBtZW4KCQkJCQlvZiB0aGlzIHNvcnQsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzE1YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1315a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmlmIHRoZXkgdGhpbmsgdGhhdCB0aGVpciBydWxlciBoYXMgcmVsaWdpb3VzIHNjcnVwbGVzIGFuZCBwYXlzCgkJCQkJcmVnYXJkIHRvIHRoZSBnb2RzLCBhbmQgYWxzbyB0aGV5IHBsb3QgYWdhaW5zdCBoaW0gbGVzcywgdGhpbmtpbmcgdGhhdCBoZSBoYXMKCQkJCQlldmVuIHRoZSBnb2RzIGFzIGFsbGllc++8iSwgdGhvdWdoIGhlIHNob3VsZCBub3QgZGlzcGxheSBhIGZvb2xpc2gKCQkJCQlyZWxpZ2lvc2l0eS4gPC90cmFuc2xhdGlvbj4="
translation['5.1315a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBoZSBtdXN0IHBheSBzdWNoCgkJCQkJaG9ub3IgdG8gdGhvc2Ugd2hvIGRpc3BsYXkgbWVyaXQgaW4gYW55IG1hdHRlciB0aGF0IHRoZXkgbWF5IHRoaW5rIHRoYXQgdGhleQoJCQkJCWNvdWxkIG5ldmVyIGJlIG1vcmUgaG9ub3JlZCBieSB0aGUgY2l0aXplbnMgaWYgdGhleSB3ZXJlIGluIGRlcGVuZGVudDsgYW5kCgkJCQkJaG9ub3JzIG9mIHRoaXMga2luZCBoZSBzaG91bGQgYmVzdG93IGluIHBlcnNvbiwgYnV0IGluZmxpY3QgaGlzIHB1bmlzaG1lbnRzIGJ5CgkJCQkJdGhlIGFnZW5jeSBvZiBvdGhlciBtYWdpc3RyYXRlcyBhbmQgbGF3LWNvdXJ0cy4gQW5kIGl0IGlzIGEgcHJvdGVjdGlvbiBjb21tb24gdG8KCQkJCQlldmVyeSBzb3J0IG9mIG1vbmFyY2h5IHRvIG1ha2Ugbm8gb25lIG1hbiBncmVhdCwgYnV0IGlmIG5lY2Vzc2FyeSB0byBleGFsdAoJCQkJCXNldmVyYWwg77yIZm9yIHRoZXkgd2lsbCBrZWVwIHdhdGNoIG9uIG9uZSBhbm90aGVy77yJLCBhbmQgaWYKCQkJCQlhZnRlciBhbGwgdGhlIHJ1bGVyIGhhcyB0byBlbGV2YXRlIGFuIGluZGl2aWR1YWwsIGF0IGFsbCBldmVudHMgbm90IHRha2UgYSBtYW4KCQkJCQlvZiBib2xkIHNwaXJpdCDvvIhmb3Igc3VjaCBhIGNoYXJhY3RlciBpcyBtb3N0IGVudGVycHJpc2luZyBpbiBhbGwKCQkJCQl1bmRlcnRha2luZ3PvvIk7IGFuZCBpZiBoZSB0aGlua3MgZml0IHRvIHJlbW92ZSBzb21lYm9keSBmcm9tIGhpcyBwb3dlciwKCQkJCQl0byBkbyB0aGlzIGJ5IGdyYWR1YWwgc3RhZ2VzIGFuZCBub3QgdGFrZSBhd2F5IHRoZSB3aG9sZSBvZiBoaXMgYXV0aG9yaXR5IGF0CgkJCQkJb25jZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjE3IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGFnYWluIGhlIHNob3VsZCBjYXJlZnVsbHkKCQkJCQlhdm9pZCBhbGwgZm9ybXMgb2Ygb3V0cmFnZSwgYW5kIHR3byBiZXlvbmQgYWxsLCB2aW9sZW50IGJvZGlseSBwdW5pc2htZW50cyBhbmQKCQkJCQlvdXRyYWdlIG9mIHRoZSB5b3VuZy4gQW5kIHRoaXMgY2F1dGlvbiBtdXN0IGVzcGVjaWFsbHkgYmUgZXhlcmNpc2VkIGluIHJlbGF0aW9uCgkJCQkJdG8gdGhlIGFtYml0aW91cywgZm9yIHdoaWxlIHRvIGJlIHNsaWdodGVkIGluIHJlZ2FyZCB0byBwcm9wZXJ0eSBhbm5veXMgdGhlCgkJCQkJbG92ZXJzIG9mIHdlYWx0aCwgc2xpZ2h0cyB0aGF0IGludm9sdmUgZGlzaG9ub3IgYXJlIHdoYXQgbWVuIG9mIGhvbm9yYWJsZQoJCQkJCWFtYml0aW9uIGFuZCBoaWdoIGNoYXJhY3RlciByZXNlbnQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPkhlbmNlIHRoZSB0eXJhbnQgc2hvdWxkIGVpdGhlciBub3QgY29uc29ydCB3aXRoIG1lbiBvZiB0aGlzIGtpbmQsIG9yIGFwcGVhciB0bwoJCQkJCWluZmxpY3QgaGlzIHB1bmlzaG1lbnRzIHBhdGVybmFsbHkgYW5kIG5vdCBiZWNhdXNlIG9mIGNvbnRlbXB0LCBhbmQgdG8gaW5kdWxnZQoJCQkJCWluIHRoZSBzb2NpZXR5IG9mIHRoZSB5b3VuZyBmb3IgcmVhc29ucyBvZiBwYXNzaW9uLCBub3QgYmVjYXVzZSBoZSBoYXMgdGhlCgkJCQkJcG93ZXIsIGFuZCBpbiBnZW5lcmFsIGhlIHNob3VsZCBidXkgb2ZmIHdoYXQgYXJlIHRob3VnaHQgdG8gYmUgZGlzaG9ub3JzIGJ5CgkJCQkJZ3JlYXRlciBob25vcnMuIDwvdHJhbnNsYXRpb24+"
translation['5.1315b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhbW9uZyB0aG9zZSB3aG8KCQkJCQltYWtlIGF0dGVtcHRzIHVwb24gdGhlIGxpZmUgb2YgYSBydWxlciB0aGUgbW9zdCBmb3JtaWRhYmxlIGFuZCB0aG9zZSBhZ2FpbnN0CgkJCQkJd2hvbSB0aGUgZ3JlYXRlc3QgcHJlY2F1dGlvbiBpcyBuZWVkZWQgYXJlIHRob3NlIHRoYXQgYXJlIHJlYWR5IHRvIHNhY3JpZmljZQoJCQkJCXRoZWlyIGxpdmVzIGlmIHRoZXkgY2FuIGRlc3Ryb3kgaGltLiBIZW5jZSB0aGUgZ3JlYXRlc3QgY2FyZSBtdXN0IGJlIHRha2VuIHRvCgkJCQkJZ3VhcmQgYWdhaW5zdCB0aG9zZSB3aG8gdGhpbmsgdGhhdCBpbnNvbGVudCBvdXRyYWdlIGlzIGJlaW5nIGRvbmUgZWl0aGVyIHRvCgkJCQkJdGhlbXNlbHZlcyBvciB0byB0aG9zZSB3aG8gaGFwcGVuIHRvIGJlIHVuZGVyIHRoZWlyIGNhcmU7IGZvciBtZW4gYXR0YWNraW5nCgkJCQkJdW5kZXIgdGhlIGluZmx1ZW5jZSBvZiBhbmdlciBhcmUgcmVja2xlc3Mgb2YgdGhlbXNlbHZlcywgYXMgSGVyYWNsaXR1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgbmF0dXJhbCBwaGlsb3NvcGhlciBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjQ5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNDk5Ij5FcGhlc3VzPC9wbGFjZU5hbWU+LCBmbC4gY2lyY2EgPGRhdGUgYXV0aG5hbWU9Ii01MTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii01MTMiPjUxMzwvZGF0ZT4gQi5DLiwga25vd24gYXMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2BIM+DzrrOv8+EzrXOuc694b25z4I8L2ZvcmVpZ24+CgkJCQkJCWZvciBoaXMgZXBpZ3JhbW1hdGljIG9ic2N1cml0eS48L25vdGU+IGFsc28gb2JzZXJ2ZWQgd2hlbiBoZSBzYWlkIHRoYXQgYW5nZXIKCQkJCQl3YXMgaGFyZCB0byBjb21iYXQgYmVjYXVzZSBpdCB3b3VsZCBidXkgcmV2ZW5nZSB3aXRoIGEgbGlmZS4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI0OTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjQ5OSI+RXBoZXN1czwvcGxhY2VOYW1lPiwgZmwuIGNpcmNhIDxkYXRlIGF1dGhuYW1lPSItNTEzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNTEzIj41MTM8L2RhdGU+IEIuQy4sIGtub3duIGFzIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9gSDPg866zr/PhM61zrnOveG9uc+CPC9mb3JlaWduPgoJCQkJCQlmb3IgaGlzIGVwaWdyYW1tYXRpYyBvYnNjdXJpdHkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjE5IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHNpbmNlIHN0YXRlcyBjb25zaXN0IG9mIHR3byBwYXJ0cywgdGhlIHBvb3IKCQkJCQlwZW9wbGUgYW5kIHRoZSByaWNoLCB0aGUgbW9zdCBpbXBvcnRhbnQgdGhpbmcgaXMgZm9yIGJvdGggdG8gdGhpbmsgdGhhdCB0aGV5IG93ZQoJCQkJCXRoZWlyIHNhZmV0eSB0byB0aGUgZ292ZXJubWVudCBhbmQgZm9yIGl0IHRvIHByZXZlbnQgZWl0aGVyIGZyb20gYmVpbmcgd3JvbmdlZAoJCQkJCWJ5IHRoZSBvdGhlciwgYnV0IHdoaWNoZXZlciBjbGFzcyBpcyB0aGUgc3Ryb25nZXIsIHRoaXMgbXVzdCBiZSBtYWRlIHRvIGJlCgkJCQkJZW50aXJlbHkgb24gdGhlIHNpZGUgb2YgdGhlIGdvdmVybm1lbnQsIGFzLCBpZiB0aGlzIHN1cHBvcnQgZm9yIHRoZSB0eXJhbnQncwoJCQkJCWludGVyZXN0cyBpcyBzZWN1cmVkLCB0aGVyZSBpcyBubyBuZWVkIGZvciBoaW0gdG8gaW5zdGl0dXRlIGEgbGliZXJhdGlvbiBvZgoJCQkJCXNsYXZlcyBvciBhIGRpc2FybWluZyBvZiB0aGUgY2l0aXplbnMsIGZvciBvbmUgb2YgdGhlIHR3byBwYXJ0cyBvZiB0aGUgc3RhdGUKCQkJCQlhZGRlZCB0byBoaXMgcG93ZXIgd2lsbCBiZSBlbm91Z2ggdG8gbWFrZSBoaW0gYW5kIHRoZW0gc3Ryb25nZXIgdGhhbiB0aGVpcgoJCQkJCWF0dGFja2Vycy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjIwIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRvIGRpc2N1c3MgZWFjaCBvZgoJCQkJCXN1Y2ggbWF0dGVycyBzZXBhcmF0ZWx5IGlzIHN1cGVyZmx1b3VzOyBmb3IgdGhlIHRoaW5nIHRvIGFpbSBhdCBpcyBjbGVhciwKCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMTViIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['5.1315b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnRoYXQgaXQgaXMgbmVjZXNzYXJ5IHRvIGFwcGVhciB0byB0aGUgc3ViamVjdHMgdG8gYmUgbm90IGEKCQkJCQl0eXJhbm5pY2FsIHJ1bGVyIGJ1dCBhIHN0ZXdhcmQgYW5kIGEgcm95YWwgZ292ZXJub3IsIGFuZCBub3QgYW4gYXBwcm9wcmlhdG9yIG9mCgkJCQkJd2VhbHRoIGJ1dCBhIHRydXN0ZWUsIGFuZCB0byBwdXJzdWUgdGhlIG1vZGVyYXRlIHRoaW5ncyBvZiBsaWZlIGFuZCBub3QgaXRzCgkJCQkJZXh0cmF2YWdhbmNlcywgYW5kIGFsc28gdG8gbWFrZSB0aGUgbm90YWJsZXMgb25lJ3MgY29tcmFkZXMgYW5kIHRoZSBtYW55IG9uZSdzCgkJCQkJZm9sbG93ZXJzLiBGb3IgdGhlIHJlc3VsdCBvZiB0aGVzZSBtZXRob2RzIG11c3QgYmUgdGhhdCBub3Qgb25seSB0aGUgdHlyYW50J3MKCQkJCQlydWxlIHdpbGwgYmUgbW9yZSBob25vcmFibGUgYW5kIG1vcmUgZW52aWFibGUgYmVjYXVzZSBoZSB3aWxsIHJ1bGUgbm9ibGVyCgkJCQkJc3ViamVjdHMgYW5kIG5vdCBtZW4gdGhhdCBoYXZlIGJlZW4gaHVtaWxpYXRlZCwgYW5kIHdpbGwgbm90IGJlIGNvbnRpbnVhbGx5CgkJCQkJaGF0ZWQgYW5kIGZlYXJlZCwgYnV0IGFsc28gdGhhdCBoaXMgcnVsZSB3aWxsIGVuZHVyZSBsb25nZXIsIGFuZCBtb3Jlb3ZlciB0aGF0CgkJCQkJaGUgaGltc2VsZiBpbiBoaXMgcGVyc29uYWwgY2hhcmFjdGVyIHdpbGwgYmUgbm9ibHkgZGlzcG9zZWQgdG93YXJkcyB2aXJ0dWUsIG9yCgkJCQkJYXQgYWxsIGV2ZW50cyBoYWxmLXZpcnR1b3VzLCBhbmQgbm90IGJhc2UgYnV0IG9ubHkgaGFsZi1iYXNlLjwvdHJhbnNsYXRpb24+"
translation['5.1315b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4yMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5OZXZlcnRoZWxlc3MKCQkJCQlvbGlnYXJjaHkgYW5kIHR5cmFubnk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T2xpZ2FyY2h5IGlzIG5vdAoJCQkJCQltZW50aW9uZWQgaW4gd2hhdCBmb2xsb3dzLCBhbmQgdGhlIGNvbnRleHQgZGVhbHMgd2l0aCB0aGUgZm9ybXMgb2YgbW9uYXJjaHkuCgkJCQkJCVR5cmFubnkgaXMgaW5jbHVkZWQgYW1vbmcgdGhlIGNvbnN0aXR1dGlvbnMgYXQgMTMxMmEgNDAsIGJ1dCBub3QgZWxzZXdoZXJlCgkJCQkJCWluIHRoaXMgQm9vay4gU29tZSBlZGl0b3JzIGJyYWNrZXQgbGwuIDE5LTI5IGFzIHNwdXJpb3VzIG9yIG91dCBvZgoJCQkJCQlwbGFjZS48L25vdGU+IGFyZSBsZXNzIGxhc3RpbmcgdGhhbiBhbnkgb2YgdGhlIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnRzLgoJCQkJCUZvciB0aGUgbG9uZ2VzdC1saXZlZCB3YXMgdGhlIHR5cmFubnkgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEwOTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMTA5OCI+U2ljeW9uPC9wbGFjZU5hbWU+LCB0aGF0IG9mIHRoZSBzb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gZGVzY2VuZGFudHM7IENsZWlzdGhlbmVzIHdhcyBoaXMgZ3JhbmRzb24uPC9ub3RlPiBvZiBPcnRoYWdvcmFzIGFuZCBvZgoJCQkJCU9ydGhhZ29yYXMgaGltc2VsZiwgYW5kIHRoaXMgbGFzdGVkIGEgaHVuZHJlZCB5ZWFycy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+RnJvbSA8ZGF0ZSBhdXRobmFtZT0iLTY3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTY3MCI+NjcwPC9kYXRlPiBCLkMuPC9ub3RlPiBUaGUgY2F1c2Ugb2YKCQkJCQl0aGlzIHdhcyB0aGF0IHRoZXkgdHJlYXRlZCB0aGVpciBzdWJqZWN0cyBtb2RlcmF0ZWx5IGFuZCBpbiBtYW55IG1hdHRlcnMgd2VyZQoJCQkJCXN1YnNlcnZpZW50IHRvIHRoZSBsYXdzLCBhbmQgQ2xlaXN0aGVuZXMgYmVjYXVzZSBoZSB3YXMgYSB3YXJsaWtlIG1hbiB3YXMgbm90CgkJCQkJZWFzaWx5IGRlc3Bpc2VkLCBhbmQgaW4gbW9zdCB0aGluZ3MgdGhleSBrZXB0IHRoZSBsZWFkIG9mIHRoZSBwZW9wbGUgYnkgbG9va2luZwoJCQkJCWFmdGVyIHRoZWlyIGludGVyZXN0cy4gQXQgYWxsIGV2ZW50cyBpdCBpcyBzYWlkIHRoYXQgQ2xlaXN0aGVuZXMgcGxhY2VkIGEgd3JlYXRoCgkJCQkJb24gdGhlIGp1ZGdlIHdobyBhd2FyZGVkIHRoZSB2aWN0b3J5IGF3YXkgZnJvbSBoaW0sIGFuZCBzb21lIHNheSB0aGF0IHRoZQoJCQkJCQlzdGF0dWU8ZGF0ZSBhdXRobmFtZT0iLTY3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTY3MCI+NjcwPC9kYXRlPiBCLkMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm9mIGEgc2VhdGVkIGZpZ3VyZSBpbiB0aGUKCQkJCQltYXJrZXQtcGxhY2UgaXMgYSBzdGF0dWUgb2YgdGhlIG1hbiB3aG8gZ2F2ZSB0aGlzIGp1ZGdlbWVudC4gQW5kIHRoZXkgc2F5IHRoYXQKCQkJCQkJUGlzaXN0cmF0dXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEzMDVhIDIzIG4uPC9ub3RlPiBhbHNvCgkJCQkJb25jZSBzdWJtaXR0ZWQgdG8gYSBzdW1tb25zIGZvciB0cmlhbCBiZWZvcmUgdGhlIEFyZW9wYWd1cy4gPC90cmFuc2xhdGlvbj4="
translation['5.1316a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4yMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB0aGUgc2Vjb25kIGxvbmdlc3QgaXMgdGhlIHR5cmFubnkgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDb3JpbnRoIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDb3JpbnRoIj5Db3JpbnRoPC9wbGFjZU5hbWU+LCB0aGF0IG9mIHRoZSBDeXBzZWxpZHMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkZyb20gPGRhdGUgYXV0aG5hbWU9Ii02NTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii02NTUiPjY1NTwvZGF0ZT4gQi5DLjwvbm90ZT4KCQkJCQlmb3IgZXZlbiB0aGlzIGxhc3RlZCBzZXZlbnR5LXRocmVlIGFuZCBhIGhhbGYgeWVhcnMsIGFzIEN5cHNlbHVzIHdhcyB0eXJhbnQgZm9yCgkJCQkJdGhpcnR5IHllYXJzLCBQZXJpYW5kZXIgZm9yIGZvcnR5LWZvdXIsPGRhdGUgYXV0aG5hbWU9Ii02NTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii02NTUiPjY1NTwvZGF0ZT4gQi5DLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUKCQkJCQkJR3JlZWsgbWF5IGJlIGNvcnJlY3RlZCB0byDigJhmb3J0eSBhbmQgYSBoYWxm4oCZIHRvIGdpdmUgdGhlCgkJCQkJCXN0YXRlZCB0b3RhbC48L25vdGU+IGFuZCBQc2FtbWV0aWNodXMgc29uIG9mIEdvcmRpYXMgZm9yIHRocmVlIHllYXJzLiBBbmQKCQkJCQl0aGUgcmVhc29ucyBmb3IgdGhlIHBlcm1hbmVuY2Ugb2YgdGhpcyB0eXJhbm55IGFsc28gYXJlIHRoZSBzYW1lOiBDeXBzZWx1cyB3YXMgYQoJCQkJCWxlYWRlciBvZiB0aGUgcGVvcGxlIGFuZCBjb250aW51b3VzbHkgdGhyb3VnaG91dCBoaXMgcGVyaW9kIG9mIG9mZmljZSBkaXNwZW5zZWQKCQkJCQl3aXRoIGEgYm9keWd1YXJkOyBhbmQgYWx0aG91Z2ggUGVyaWFuZGVyIGJlY2FtZSB0eXJhbm5pY2FsLCB5ZXQgaGUgd2FzIHdhcmxpa2UuCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4yMyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSB0aGlyZCBsb25nZXN0IHR5cmFubnkgaXMKCQkJCQl0aGF0IG9mIHRoZSBQaXNpc3RyYXRpZGFlIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwKCQkJCQlidXQgaXQgd2FzIG5vdCBjb250aW51b3VzOyBmb3Igd2hpbGUgUGlzaXN0cmF0dXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEzMDVhIDIzIG4uPC9ub3RlPiB3YXMgdHlyYW50IGhlIHR3aWNlIGZsZWQgaW50byBleGlsZSwKCQkJCQlzbyB0aGF0IGluIGEgcGVyaW9kIG9mIHRoaXJ0eS10aHJlZSB5ZWFycyBoZSB3YXMgdHlyYW50IGZvciBzZXZlbnRlZW4geWVhcnMgb3V0CgkJCQkJb2YgdGhlIHRvdGFsLCBhbmQgaGlzIHNvbnMgZm9yIGVpZ2h0ZWVuIHllYXJzLCBzbyB0aGF0IHRoZSB3aG9sZSBkdXJhdGlvbiBvZgoJCQkJCXRoZWlyIHJ1bGUgd2FzIHRoaXJ0eS1maXZlIHllYXJzLiBBbW9uZyB0aGUgcmVtYWluaW5nIHR5cmFubmllcyBpcyB0aGUgb25lCgkJCQkJY29ubmVjdGVkIHdpdGggSGllcm8gYW5kIEdlbG88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEzMTJiIDEyCgkJCQkJCW4uPC9ub3RlPiBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5cmFjdXNlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTeXJhY3VzZSI+U3lyYWN1c2U8L3BsYWNlTmFtZT4sIGJ1dAoJCQkJCWV2ZW4gdGhpcyBkaWQgbm90IGxhc3QgbWFueSB5ZWFycywgYnV0IG9ubHkgZWlnaHRlZW4gaW4gYWxsLCBmb3IgR2VsbyBhZnRlcgoJCQkJCWJlaW5nIHR5cmFudCBmb3Igc2V2ZW4geWVhcnMgZW5kZWQgaGlzIGxpZmUgaW4gdGhlIGVpZ2h0aCwgYW5kIEhpZXJvIHJ1bGVkIHRlbgoJCQkJCXllYXJzLCBidXQgVGhyYXN5YnVsdXMgd2FzIGV4cGVsbGVkIGFmdGVyIHRlbiBtb250aHMuIEFuZCB0aGUgdXN1YWwgdHlyYW5uaWVzCgkJCQkJaGF2ZSBhbGwgb2YgdGhlbSBiZWVuIG9mIHF1aXRlIHNob3J0IGR1cmF0aW9uLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUKCQkJCQljYXVzZXMgdGhlcmVmb3JlIG9mIHRoZSBkZXN0cnVjdGlvbiBvZiBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50cyBhbmQgb2YKCQkJCQltb25hcmNoaWVzIGFuZCB0aG9zZSBhZ2FpbiBvZiB0aGVpciBwcmVzZXJ2YXRpb24gaGF2ZSBhbG1vc3QgYWxsIG9mIHRoZW0gYmVlbgoJCQkJCWRpc2N1c3NlZC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMTZhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['5.1316a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['5.1316a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgc3ViamVjdCBvZiByZXZvbHV0aW9ucyBpcyBkaXNjdXNzZWQgYnkgU29jcmF0ZXMgaW4gdGhlCgkJCQkJCVJlcHVibGljLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QbGF0bywgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UmVwdWJsaWM8L3RpdGxlPiwKCQkJCQkJQmtzLiA4LCA5IGluaXQuOyB0aGUgbWF0aGVtYXRpY2FsIGZvcm11bGEgZm9yIHRoZSBjaGFuZ2UgZnJvbSBBcmlzdG9jcmFjeSB0bwoJCQkJCQlUaW1vY3JhY3kgcXVvdGVkIGhlcmUgb2NjdXJzIGF0IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFJlcC4gNTQ2YyIgdmFsaWQ9InllcyI+UGxhdC4gUmVwLgoJCQkJCQkJNTQ2YzwvYmlibD7igJRzZWUgQWRhbSdzIG5vdGUgdGhlcmUuPC9ub3RlPiBidXQgaXMgbm90IGRpc2N1c3NlZAoJCQkJCXdlbGwuIEZvciBoaXMgYWNjb3VudCBvZiByZXZvbHV0aW9uIGluIHRoZSBjb25zdGl0dXRpb24gdGhhdCBpcyB0aGUgYmVzdCBvbmUgYW5kCgkJCQkJdGhlIGZpcnN0IGRvZXMgbm90IGFwcGx5IHRvIGl0IHBhcnRpY3VsYXJseS4gSGUgc2F5cyB0aGF0IHRoZSBjYXVzZSBpcyB0aGF0CgkJCQkJbm90aGluZyBpcyBwZXJtYW5lbnQgYnV0IGV2ZXJ5dGhpbmcgY2hhbmdlcyBpbiBhIGNlcnRhaW4gY3ljbGUsIGFuZCB0aGF0IGNoYW5nZQoJCQkJCWhhcyBpdHMgb3JpZ2luIGluIHRob3NlIG51bWJlcnMg4oCYd2hvc2UgYmFzaWMgcmF0aW8gNCA6IDMgbGlua2VkIHdpdGgKCQkJCQl0aGUgbnVtYmVyIDUgZ2l2ZXMgdHdvIGhhcm1vbmllcyzigJnigJRtZWFuaW5nIHdoZW5ldmVyIHRoZQoJCQkJCW51bWJlciBvZiB0aGlzIGZpZ3VyZSBiZWNvbWVzIGN1YmVkLOKAlGluIHRoZSBiZWxpZWYgdGhhdCBuYXR1cmUKCQkJCQlzb21ldGltZXMgZW5nZW5kZXJzIG1lbiB0aGF0IGFyZSBldmlsLCBhbmQgdG9vIHN0cm9uZyBmb3IgZWR1Y2F0aW9uIHRvCgkJCQkJaW5mbHVlbmNl4oCUc3BlYWtpbmcgcGVyaGFwcyBub3QgaWxsIGFzIGZhciBhcyB0aGlzIHBhcnRpY3VsYXIgZGljdHVtCgkJCQkJZ29lcyDvvIhmb3IgaXQgaXMgcG9zc2libGUgdGhhdCB0aGVyZSBhcmUgc29tZSBwZXJzb25zIGluY2FwYWJsZSBvZiBiZWluZwoJCQkJCWVkdWNhdGVkIGFuZCBiZWNvbWluZyBtZW4gb2Ygbm9ibGUgY2hhcmFjdGVy77yJLCBidXQgd2h5IHNob3VsZCB0aGlzCgkJCQkJcHJvY2VzcyBvZiByZXZvbHV0aW9uIGJlbG9uZyB0byB0aGUgY29uc3RpdHV0aW9uIHdoaWNoIFNvY3JhdGVzIHNwZWFrcyBvZiBhcyB0aGUKCQkJCQliZXN0LCBtb3JlIHRoYW4gdG8gYWxsIHRoZSBvdGhlciBmb3JtcyBvZiBjb25zdGl0dXRpb24sIGFuZCB0byBhbGwgbWVuIHRoYXQgY29tZQoJCQkJCWludG8gZXhpc3RlbmNlPyA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5SZXB1YmxpYzwvdGl0bGU+LAoJCQkJCQlCa3MuIDgsIDkgaW5pdC47IHRoZSBtYXRoZW1hdGljYWwgZm9ybXVsYSBmb3IgdGhlIGNoYW5nZSBmcm9tIEFyaXN0b2NyYWN5IHRvCgkJCQkJCVRpbW9jcmFjeSBxdW90ZWQgaGVyZSBvY2N1cnMgYXQgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gUmVwLiA1NDZjIiB2YWxpZD0ieWVzIj5QbGF0LiBSZXAuCgkJCQkJCQk1NDZjPC9iaWJsPuKAlHNlZSBBZGFtJ3Mgbm90ZSB0aGVyZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgd2h5IG1lcmVseSBieQoJCQkJCXRoZSBvcGVyYXRpb24gb2YgdGltZSwgd2hpY2ggaGUgc2F5cyBpcyB0aGUgY2F1c2Ugb2YgY2hhbmdlIGluIGFsbCB0aGluZ3MsIGRvCgkJCQkJZXZlbiB0aGluZ3MgdGhhdCBkaWQgbm90IGJlZ2luIHRvIGV4aXN0IHNpbXVsdGFuZW91c2x5IGNoYW5nZSBzaW11bHRhbmVvdXNseT8KCQkJCQlmb3IgaW5zdGFuY2UsIGlmIGEgdGhpbmcgY2FtZSBpbnRvIGV4aXN0ZW5jZSB0aGUgZGF5IGJlZm9yZSB0aGUgY29tcGxldGlvbiBvZgoJCQkJCXRoZSBjeWNsZSwgd2h5IGRvZXMgaXQgeWV0IGNoYW5nZSBzaW11bHRhbmVvdXNseSB3aXRoIGV2ZXJ5dGhpbmcgZWxzZT8gQW5kIGluCgkJCQkJYWRkaXRpb24gdG8gdGhlc2UgcG9pbnRzLCB3aGF0IGlzIHRoZSByZWFzb24gd2h5IHRoZSByZXB1YmxpYyBjaGFuZ2VzIGZyb20gdGhlCgkJCQkJY29uc3RpdHV0aW9uIG1lbnRpb25lZCBpbnRvIHRoZSBTcGFydGFuIGZvcm08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGltb2NyYWN5LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBSZXAuIDU0NWEiIHZhbGlkPSJ5ZXMiPlBsYXQuIFJlcC4gNTQ1YS48L2JpYmw+PC9ub3RlPj8gRm9yCgkJCQkJYWxsIGNvbnN0aXR1dGlvbnMgbW9yZSBvZnRlbiBjaGFuZ2UgaW50byB0aGUgb3Bwb3NpdGUgZm9ybSB0aGFuIGludG8KCQkJCQkJdGhlPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gUmVwLiA1NDVhIiB2YWxpZD0ieWVzIj5QbGF0LiBSZXAuIDU0NWEuPC9iaWJsPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5vbmUgbmVhciB0aGVtLiBBbmQgdGhlIHNhbWUKCQkJCQlyZW1hcmsgYXBwbGllcyB0byB0aGUgb3RoZXIgcmV2b2x1dGlvbnMgYXMgd2VsbC4gRm9yIGZyb20gdGhlIFNwYXJ0YW4KCQkJCQljb25zdGl0dXRpb24gdGhlIHN0YXRlIGNoYW5nZXMsIGhlIHNheXMsIHRvIG9saWdhcmNoeSwgYW5kIGZyb20gdGhpcyB0bwoJCQkJCWRlbW9jcmFjeSwgYW5kIGZyb20gZGVtb2NyYWN5IHRvIHR5cmFubnkuIFlldCByZXZvbHV0aW9ucyBhbHNvIG9jY3VyIHRoZSBvdGhlcgoJCQkJCXdheSBhYm91dCwgZm9yIGV4YW1wbGUgZnJvbSBkZW1vY3JhY3kgdG8gb2xpZ2FyY2h5LCBhbmQgbW9yZSBvZnRlbiBzbyB0aGFuIGZyb20KCQkJCQlkZW1vY3JhY3kgdG8gbW9uYXJjaHkuIDwvdHJhbnNsYXRpb24+"
translation['5.1316b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFnYWluIGFzIHRvCgkJCQkJdHlyYW5ueSBoZSBkb2VzIG5vdCBzYXkgd2hldGhlciBpdCB3aWxsIHVuZGVyZ28gcmV2b2x1dGlvbiBvciBub3QsIG5vciwgaWYgaXQKCQkJCQl3aWxsLCB3aGF0IHdpbGwgYmUgdGhlIGNhdXNlIG9mIGl0LCBhbmQgaW50byB3aGF0IHNvcnQgb2YgY29uc3RpdHV0aW9uIGl0IHdpbGwKCQkJCQljaGFuZ2U7IGFuZCB0aGUgcmVhc29uIGZvciB0aGlzIGlzIHRoYXQgaGUgd291bGQgbm90IGhhdmUgZm91bmQgaXQgZWFzeSB0byBzYXksCgkJCQkJZm9yIGl0IGlzIGlycmVndWxhcjsgc2luY2UgYWNjb3JkaW5nIHRvIGhpbSB0eXJhbm55IG91Z2h0IHRvIGNoYW5nZSBpbnRvIHRoZQoJCQkJCWZpcnN0IGFuZCBiZXN0IGNvbnN0aXR1dGlvbiwgZm9yIHNvIHRoZSBwcm9jZXNzIHdvdWxkIGJlIGNvbnRpbnVvdXMgYW5kIGEKCQkJCQljaXJjbGUsIGJ1dCBhcyBhIG1hdHRlciBvZiBmYWN0IHR5cmFubnkgYWxzbyBjaGFuZ2VzIGludG8gdHlyYW5ueSwgYXMgdGhlCgkJCQkJY29uc3RpdHV0aW9uIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDExMDk4IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTEwOTgiPlNpY3lvbjwvcGxhY2VOYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTMxNWIgMTMgbi48L25vdGU+IHBhc3NlZCBmcm9tIHRoZSB0eXJhbm55CgkJCQkJb2YgTXlyb24gdG8gdGhhdCBvZiBDbGVpc3RoZW5lcywgYW5kIGludG8gb2xpZ2FyY2h5LCBhcyBkaWQgdGhhdCBvZgoJCQkJCQlBbnRpbGVvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Vbmtub3duLCBjZi4gMTMwNGEgMjkgbi48L25vdGU+CgkJCQkJYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDaGFsY2lzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDaGFsY2lzIj5DaGFsY2lzPC9wbGFjZU5hbWU+LCBhbmQgaW50byBkZW1vY3JhY3ksIGFzCgkJCQkJdGhhdCBvZiB0aGUgZmFtaWx5IG9mIEdlbG88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEzMDJiIDMzCgkJCQkJCW4uPC9ub3RlPiBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5cmFjdXNlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTeXJhY3VzZSI+U3lyYWN1c2U8L3BsYWNlTmFtZT4sIGFuZAoJCQkJCWludG8gYXJpc3RvY3JhY3ksIGFzIHRoYXQgb2YgQ2hhcmlsYXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZQoJCQkJCQkxMjcxYiAyNiBuLjwvbm90ZT4gYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+CgkJCQkJW2FuZCBhcyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENhcnRoYWdlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDYXJ0aGFnZSI+Q2FydGhhZ2U8L3BsYWNlTmFtZT5dLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzCgkJCQkJCWNsYXVzZSBzZWVtcyBhbiBpbnRlcnBvbGF0aW9uOyBjZi4gYiA2Ljwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgY29uc3RpdHV0aW9ucyBjaGFuZ2UgZnJvbQoJCQkJCW9saWdhcmNoeSB0byB0eXJhbm55LCBhcyBkaWQgYWxtb3N0IHRoZSBncmVhdGVzdCBudW1iZXIgb2YgdGhlIGFuY2llbnQKCQkJCQlvbGlnYXJjaGllcyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzEyMiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAzMTIyIj5TaWNpbHk8L3BsYWNlTmFtZT4sIGF0IExlb250aW5pIHRvCgkJCQkJdGhlIHR5cmFubnkgb2YgUGFuYWV0aXVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTMxMGIgMjkKCQkJCQkJbi48L25vdGU+IGF0IEdlbG8gdG8gdGhhdCBvZiBDbGVhbmRlciwgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDQyOTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwNDI5NiI+UmhlZ2l1bTwvcGxhY2VOYW1lPiB0byB0aGF0IG9mIEFuYXhpbGF1cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VW5rbm93bi4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDUwMjAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwNTAyMCI+UmVnZ2lvPC9wbGFjZU5hbWU+IGlzCgkJCQkJCXJlbGF0ZWQgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDMxMjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMzEyMiI+U2ljaWx5PC9wbGFjZU5hbWU+IGFzIERvdmVyIGlzIHRvCgkJCQkJCUZyYW5jZS48L25vdGU+IGFuZCBpbiBtYW55IG90aGVyIGNpdGllcyBzaW1pbGFybHkuIEFuZCBpdCBpcyBhbHNvIGEgc3RyYW5nZQoJCQkJCWlkZWEgdGhhdCByZXZvbHV0aW9ucyBpbnRvIG9saWdhcmNoeSB0YWtlIHBsYWNlIGJlY2F1c2UgdGhlIG9jY3VwYW50cyBvZiB0aGUKCQkJCQlvZmZpY2VzIGFyZSBsb3ZlcnMgb2YgbW9uZXkgYW5kIGVuZ2FnZWQgaW4gbW9uZXktbWFraW5nLCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNTAyMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA1MDIwIj5SZWdnaW88L3BsYWNlTmFtZT4gaXMKCQkJCQkJcmVsYXRlZCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzEyMiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAzMTIyIj5TaWNpbHk8L3BsYWNlTmFtZT4gYXMgRG92ZXIgaXMgdG8KCQkJCQkJRnJhbmNlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzE2YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['5.1316b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCBub3QgYmVjYXVzZQoJCQkJCW93bmVycyBvZiBtdWNoIG1vcmUgdGhhbiB0aGUgYXZlcmFnZSBhbW91bnQgb2YgcHJvcGVydHkgdGhpbmsgaXQgdW5qdXN0IGZvcgoJCQkJCXRob3NlIHdobyBkbyBub3Qgb3duIGFueSBwcm9wZXJ0eSB0byBoYXZlIGFuIGVxdWFsIHNoYXJlIGluIHRoZSBzdGF0ZSB3aXRoIHRob3NlCgkJCQkJd2hvIGRvOyBhbmQgaW4gbWFueSBvbGlnYXJjaGllcyB0aG9zZSBpbiBvZmZpY2UgYXJlIG5vdCBhbGxvd2VkIHRvIGVuZ2FnZSBpbgoJCQkJCWJ1c2luZXNzLCBidXQgdGhlcmUgYXJlIGxhd3MgcHJldmVudGluZyBpdCwgd2hlcmVhcyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENhcnRoYWdlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDYXJ0aGFnZSI+Q2FydGhhZ2U8L3BsYWNlTmFtZT4sIHdoaWNoIGhhcyBhIGRlbW9jcmF0aWMKCQkJCQkJZ292ZXJubWVudCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QXBwYXJlbnRseSB0aGlzIGNsYXVzZSBhbHNvCgkJCQkJCWlzIGFuIGludGVycG9sYXRpb24sIG9yIOKAmGRlbW9jcmF0aWPigJkgaXMgYSBjb3B5aXN0J3MKCQkJCQkJbWlzdGFrZSBmb3Ig4oCYb2xpZ2FyY2hpY+KAmSBvcgoJCQkJCQnigJh0aW1vY3JhdGljLOKAmSBzZWUgMTI3MmIgMjQgZmYuPC9ub3RlPiB0aGUgbWFnaXN0cmF0ZXMgZ28KCQkJCQlpbiBmb3IgYnVzaW5lc3MsIGFuZCB0aGV5IGhhdmUgbm90IHlldCBoYWQgYSByZXZvbHV0aW9uLiA8L3RyYW5zbGF0aW9uPg=="
translation['6.1316b.31'] = ""
translation['6.1317a.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Cb29rIDcgaW4gc29tZSBlZGl0aW9ucywgQm9vayA4IGluCgkJCQkJCW90aGVycy48L25vdGU+V2UgaGF2ZSBhbHJlYWR5IGRpc2N1c3NlZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Cb29rIDQsIDEyOTdiIDM1IGZmLjwvbm90ZT4gaG93IG1hbnkgYW5kIHdoYXQgYXJlIHRoZSB2YXJpZXRpZXMgb2YgdGhlCgkJCQkJZGVsaWJlcmF0aXZlIGJvZHkgb3Igc292ZXJlaWduIHBvd2VyIGluIHRoZSBzdGF0ZSwgYW5kIG9mIHRoZSBzeXN0ZW0gb2YKCQkJCQltYWdpc3RyYWNpZXMgYW5kIG9mIGxhdy1jb3VydHMsIGFuZCB3aGljaCB2YXJpZXR5IGlzIGFkYXB0ZWQgdG8gd2hpY2ggZm9ybSBvZgoJCQkJCWNvbnN0aXR1dGlvbiwgYW5kIGFsc288bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Qm9vayA1Ljwvbm90ZT4gdGhlCgkJCQkJZGVzdHJ1Y3Rpb24gb2YgY29uc3RpdHV0aW9ucyBhbmQgdGhlaXIgcHJlc2VydmF0aW9uLCBmcm9tIHdoYXQgc29ydCBvZiBwZW9wbGUKCQkJCQl0aGV5IG9yaWdpbmF0ZSBhbmQgd2hhdCBhcmUgdGhlaXIgY2F1c2VzLiBCdXQgYXMgYSBtYXR0ZXIgb2YgZmFjdCBzaW5jZSB0aGVyZQoJCQkJCWhhdmUgY29tZSBpbnRvIGV4aXN0ZW5jZSBzZXZlcmFsIGtpbmRzIG9mIGRlbW9jcmFjeSBhbmQgc2ltaWxhcmx5IG9mIHRoZSBvdGhlcgoJCQkJCWZvcm1zIG9mIGNvbnN0aXR1dGlvbiwgaXQgd2lsbCBiZSB3ZWxsIGF0IHRoZSBzYW1lIHRpbWUgdG8gY29uc2lkZXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+MTMxOGLigJQxMzE5YSA2Ljwvbm90ZT4gYW55IHBvaW50IHRoYXQKCQkJCQlyZW1haW5zIGFib3V0IHRoZXNlIHZhcmlldGllcywgYW5kIGFsc28gZGV0ZXJtaW5lIHRoZSBtb2RlIG9mIG9yZ2FuaXphdGlvbgoJCQkJCWFwcHJvcHJpYXRlIGFuZCBhZHZhbnRhZ2VvdXMgZm9yIGVhY2guIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGZ1cnRoZXIgd2UgbXVzdCBhbHNvIGludmVzdGlnYXRlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZXNlIHRvcGljcyBkbyBub3Qgb2NjdXIgaW4gdGhlIGV4dGFudCB3b3JrLjwvbm90ZT4gdGhlCgkJCQkJY29tYmluYXRpb25zIG9mIGFsbCB0aGUgbW9kZXMgb2Ygb3JnYW5pemluZyB0aGUgYWN0dWFsIGRlcGFydG1lbnRzIG9mIHN0YXRlIHRoYXQKCQkJCQloYXZlIGJlZW4gbWVudGlvbmVkLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRoZSBkZWxpYmVyYXRpdmUsCgkJCQkJCWV4ZWN1dGl2ZSBhbmQganVkaWNpYWwsIHNlZSAxMjk3YiA0MSBmZi48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMTdhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['6.1317a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGVzZSBtb2RlcyB3aGVuIGNvdXBsZWQgdG9nZXRoZXIgbWFrZSB0aGUgY29uc3RpdHV0aW9ucyBvdmVybGFwLCBzbyBhcyB0bwoJCQkJCXByb2R1Y2Ugb2xpZ2FyY2hpY2FsIGFyaXN0b2NyYWNpZXMgYW5kIHJlcHVibGljcyBpbmNsaW5pbmcgdG93YXJkcyBkZW1vY3JhY3kuIEkKCQkJCQlyZWZlciB0byB0aGUgY29tYmluYXRpb25zIHdoaWNoIG91Z2h0IHRvIGJlIGludmVzdGlnYXRlZCBidXQgaGF2ZSBub3QgYXQgcHJlc2VudAoJCQkJCWJlZW4gc3R1ZGllZCwgZm9yIGV4YW1wbGUgaWYgdGhlIGRlbGliZXJhdGl2ZSBib2R5IGFuZCB0aGUgc3lzdGVtIG9mIGVsZWN0aW5nCgkJCQkJbWFnaXN0cmF0ZXMgYXJlIG9yZ2FuaXplZCBvbGlnYXJjaGljYWxseSBidXQgdGhlIHJlZ3VsYXRpb25zIGFzIHRvIHRoZQoJCQkJCWxhdy1jb3VydHMgYXJpc3RvY3JhdGljYWxseSwgb3IgdGhlc2UgYW5kIHRoZSBzdHJ1Y3R1cmUgb2YgdGhlIGRlbGliZXJhdGl2ZSBib2R5CgkJCQkJb2xpZ2FyY2hpY2FsbHkgYW5kIHRoZSBlbGVjdGlvbiBvZiBtYWdpc3RyYWN5IGFyaXN0b2NyYXRpY2FsbHksIG9yIGlmIGluIHNvbWUKCQkJCQlvdGhlciBtYW5uZXIgbm90IGFsbCB0aGUgcGFydHMgb2YgdGhlIGNvbnN0aXR1dGlvbiBhcmUgYXBwcm9wcmlhdGVseQoJCQkJCQljb21iaW5lZC48L3RyYW5zbGF0aW9uPg=="
translation['6.1317a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBpdCBoYXMgYmVlbiBzdGF0ZWQgYmVmb3JlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjEyOTZiIDEz4oCUMTI5N2EgMTMuPC9ub3RlPiB3aGF0IGtpbmQgb2YgZGVtb2NyYWN5IGlzCgkJCQkJc3VpdGVkIHRvIHdoYXQga2luZCBvZiBzdGF0ZSwgYW5kIHNpbWlsYXJseSB3aGljaCBvZiB0aGUga2luZHMgb2Ygb2xpZ2FyY2h5IGlzCgkJCQkJc3VpdGVkIHRvIHdoYXQga2luZCBvZiBwb3B1bGFjZSwgYW5kIGFsc28gd2hpY2ggb2YgdGhlIHJlbWFpbmluZyBjb25zdGl0dXRpb25zCgkJCQkJaXMgYWR2YW50YWdlb3VzIGZvciB3aGljaCBwZW9wbGU7IGJ1dCBuZXZlcnRoZWxlc3Mgc2luY2UgaXQgbXVzdCBub3Qgb25seSBiZQoJCQkJCW1hZGUgY2xlYXIgd2hpY2ggdmFyaWV0eSBvZiB0aGVzZSBjb25zdGl0dXRpb25zIGlzIGJlc3QgZm9yIHN0YXRlcywgYnV0IGFsc28gaG93CgkJCQkJYm90aCB0aGVzZSBiZXN0IHZhcmlldGllcyBhbmQgdGhlIG90aGVyIGZvcm1zIG11c3QgYmUgZXN0YWJsaXNoZWQsIGxldCB1cwoJCQkJCWJyaWVmbHkgcHVyc3VlIHRoZSBzdWJqZWN0LiBBbmQgZmlyc3QgbGV0IHVzIHNwZWFrIGFib3V0IGRlbW9jcmFjeTsgZm9yIGF0IHRoZQoJCQkJCXNhbWUgdGltZSB0aGUgZmFjdHMgd2lsbCBhbHNvIGJlY29tZSBjbGVhciBhYm91dCB0aGUgb3Bwb3NpdGUgZm9ybSBvZgoJCQkJCWNvbnN0aXR1dGlvbiwgdGhhdCBpcywgdGhlIGNvbnN0aXR1dGlvbiB3aGljaCBzb21lIHBlb3BsZSBjYWxsIG9saWdhcmNoeS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+4oCYUnVsZSBvZiB0aGUgZmV3LOKAmSBpLmUuCgkJCQkJCXRoZSBmZXcgcmljaCwgYnV0IHRoZSBuYW1lIGlzIG5vdCBleGFjdCwgZm9yIGluIGFyaXN0b2NyYWN5IGFsc28gdGhlIHJ1bGVycwoJCQkJCQlhcmUgZmV3Ljwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQKCQkJCQlmb3IgdGhpcyBpbnF1aXJ5IHdlIG11c3QgdGFrZSBpbnRvIHZpZXcgYWxsIHRoZSBmZWF0dXJlcyB0aGF0IGFyZSBwb3B1bGFyIGFuZAoJCQkJCXRoYXQgYXJlIHRob3VnaHQ8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dG8gZ28gd2l0aAoJCQkJCWRlbW9jcmFjaWVzOyBmb3IgaXQgY29tZXMgYWJvdXQgZnJvbSBjb21iaW5hdGlvbnMgb2YgdGhlc2UgdGhhdCB0aGUga2luZHMgb2YKCQkJCQlkZW1vY3JhY3kgYXJlIGZvcm1lZCwgYW5kIHRoYXQgdGhlcmUgYXJlIGRpZmZlcmVudCBkZW1vY3JhY2llcyBhbmQgbW9yZSB0aGFuIG9uZQoJCQkJCXNvcnQuIEluIGZhY3QgdGhlcmUgYXJlIHR3byBjYXVzZXMgZm9yIHRoZXJlIGJlaW5nIHNldmVyYWwga2luZHMgb2YgZGVtb2NyYWN5LAoJCQkJCWZpcnN0IHRoZSBvbmUgc3RhdGVkIGJlZm9yZSwgdGhlIGZhY3QgdGhhdCB0aGUgcG9wdWxhdGlvbnMgYXJlIGRpZmZlcmVudAoJCQkJCe+8iGZvciB3ZSBmaW5kIG9uZSBtdWx0aXR1ZGUgZW5nYWdlZCBpbiBhZ3JpY3VsdHVyZSBhbmQgYW5vdGhlcgoJCQkJCWNvbnNpc3Rpbmcgb2YgaGFuZGljcmFmdHNtZW4gYW5kIGRheS1sYWJvcmVycywgYW5kIHdoZW4gdGhlIGZpcnN0IG9mIHRoZXNlIGlzCgkJCQkJYWRkZWQgdG8gdGhlIHNlY29uZCBhbmQgYWdhaW4gdGhlIHRoaXJkIHRvIGJvdGggb2YgdGhlbSBpdCBub3Qgb25seSBtYWtlcyBhCgkJCQkJZGlmZmVyZW5jZSBpbiB0aGF0IHRoZSBxdWFsaXR5IG9mIHRoZSBkZW1vY3JhY3kgYmVjb21lcyBiZXR0ZXIgb3Igd29yc2UgYnV0IGFsc28KCQkJCQlieSBpdHMgYmVjb21pbmcgZGlmZmVyZW50IGluIGtpbmTvvIk7IGFuZCB0aGUgc2Vjb25kIGNhdXNlIGlzIHRoZSBvbmUKCQkJCQlhYm91dCB3aGljaCB3ZSBub3cgc3BlYWsuIDwvdHJhbnNsYXRpb24+"
translation['6.1317b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS41IiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIHRoZQoJCQkJCWluc3RpdHV0aW9ucyB0aGF0IGdvIHdpdGggZGVtb2NyYWNpZXMgYW5kIHNlZW0gdG8gYmUgYXBwcm9wcmlhdGUgdG8gdGhpcyBmb3JtIG9mCgkJCQkJY29uc3RpdHV0aW9uIG1ha2UgdGhlIGRlbW9jcmFjaWVzIGRpZmZlcmVudCBieSB0aGVpciBjb21iaW5hdGlvbnM7IGZvciBvbmUgZm9ybQoJCQkJCW9mIGRlbW9jcmFjeSB3aWxsIGJlIGFjY29tcGFuaWVkIGJ5IGZld2VyLCBhbm90aGVyIGJ5IG1vcmUsIGFuZCBhbm90aGVyIGJ5IGFsbAoJCQkJCW9mIHRoZW0uIEFuZCBpdCBpcyBzZXJ2aWNlYWJsZSB0byBhc2NlcnRhaW4gZWFjaCBvZiB0aGVtIGJvdGggZm9yIHRoZSBwdXJwb3NlIG9mCgkJCQkJaW5zdGl0dXRpbmcgd2hpY2hldmVyIG9mIHRoZXNlIGtpbmRzIG9mIGRlbW9jcmFjeSBvbmUgaGFwcGVucyB0byB3aXNoIGFuZCBmb3IKCQkJCQl0aGUgcHVycG9zZSBvZiBhbWVuZGluZyBleGlzdGluZyBvbmVzLiBGb3IgcGVvcGxlIHNldHRpbmcgdXAgY29uc3RpdHV0aW9ucyBzZWVrCgkJCQkJdG8gY29sbGVjdCB0b2dldGhlciBhbGwgdGhlIGZlYXR1cmVzIGFwcHJvcHJpYXRlIHRvIHRoZWlyIGZ1bmRhbWVudGFsIHByaW5jaXBsZSwKCQkJCQlidXQgaW4gc28gZG9pbmcgdGhleSBtYWtlIGEgbWlzdGFrZSwgYXMgaGFzIGJlZW4gc2FpZCBiZWZvcmUgaW4gdGhlIHBhc3NhZ2UKCQkJCQlkZWFsaW5nIHdpdGggdGhlIGNhdXNlcyBvZiB0aGUgZGVzdHJ1Y3Rpb24gYW5kIHRoZSBwcmVzZXJ2YXRpb24gb2YKCQkJCQljb25zdGl0dXRpb25zLiBBbmQgbm93IGxldCB1cyBzdGF0ZSB0aGUgcG9zdHVsYXRlcywgdGhlIGV0aGljYWwgY2hhcmFjdGVycyBhbmQKCQkJCQl0aGUgYWltcyBvZiB0aGUgdmFyaW91cyBmb3JtcyBvZiBkZW1vY3JhY3kuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGEgZnVuZGFtZW50YWwgcHJpbmNpcGxlCgkJCQkJb2YgdGhlIGRlbW9jcmF0aWMgZm9ybSBvZiBjb25zdGl0dXRpb24gaXMgbGliZXJ0eeKAlHRoYXQgaXMgd2hhdCBpcwoJCQkJCXVzdWFsbHkgYXNzZXJ0ZWQsIGltcGx5aW5nIHRoYXQgb25seSB1bmRlciB0aGlzIGNvbnN0aXR1dGlvbiBkbyBtZW4gcGFydGljaXBhdGUKCQkJCQlpbiBsaWJlcnR5LCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMxN2IiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['6.1317b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGV5IGFzc2VydCB0aGlzIGFzIHRoZSBhaW0gb2YgZXZlcnkgZGVtb2NyYWN5LiBCdXQgb25lCgkJCQkJZmFjdG9yIG9mIGxpYmVydHkgaXMgdG8gZ292ZXJuIGFuZCBiZSBnb3Zlcm5lZCBpbiB0dXJuOyBmb3IgdGhlIHBvcHVsYXIKCQkJCQlwcmluY2lwbGUgb2YganVzdGljZSBpcyB0byBoYXZlIGVxdWFsaXR5IGFjY29yZGluZyB0byBudW1iZXIsIG5vdCB3b3J0aCwgYW5kIGlmCgkJCQkJdGhpcyBpcyB0aGUgcHJpbmNpcGxlIG9mIGp1c3RpY2UgcHJldmFpbGluZywgdGhlIG11bHRpdHVkZSBtdXN0IG9mIG5lY2Vzc2l0eSBiZQoJCQkJCXNvdmVyZWlnbiBhbmQgdGhlIGRlY2lzaW9uIG9mIHRoZSBtYWpvcml0eSBtdXN0IGJlIGZpbmFsIGFuZCBtdXN0IGNvbnN0aXR1dGUKCQkJCQlqdXN0aWNlLCBmb3IgdGhleSBzYXkgdGhhdCBlYWNoIG9mIHRoZSBjaXRpemVucyBvdWdodCB0byBoYXZlIGFuIGVxdWFsIHNoYXJlOyBzbwoJCQkJCXRoYXQgaXQgcmVzdWx0cyB0aGF0IGluIGRlbW9jcmFjaWVzIHRoZSBwb29yIGFyZSBtb3JlIHBvd2VyZnVsIHRoYW4gdGhlIHJpY2gsCgkJCQkJYmVjYXVzZSB0aGVyZSBhcmUgbW9yZSBvZiB0aGVtIGFuZCB3aGF0ZXZlciBpcyBkZWNpZGVkIGJ5IHRoZSBtYWpvcml0eSBpcwoJCQkJCXNvdmVyZWlnbi4gPC90cmFuc2xhdGlvbj4="
translation['6.1317b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS43IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhpcyB0aGVuIGlzIG9uZSBtYXJrIG9mCgkJCQkJbGliZXJ0eSB3aGljaCBhbGwgZGVtb2NyYXRzIHNldCBkb3duIGFzIGEgcHJpbmNpcGxlIG9mIHRoZSBjb25zdGl0dXRpb24uIEFuZCBvbmUKCQkJCQlpcyBmb3IgYSBtYW4gdG8gbGl2ZSBhcyBoZSBsaWtlczsgZm9yIHRoZXkgc2F5IHRoYXQgdGhpcyBpcyB0aGUgZnVuY3Rpb24gb2YKCQkJCQlsaWJlcnR5LCBpbmFzbXVjaCBhcyB0byBsaXZlIG5vdCBhcyBvbmUgbGlrZXMgaXMgdGhlIGxpZmUgb2YgYSBtYW4gdGhhdCBpcyBhCgkJCQkJc2xhdmUuIFRoaXMgaXMgdGhlIHNlY29uZCBwcmluY2lwbGUgb2YgZGVtb2NyYWN5LCBhbmQgZnJvbSBpdCBoYXMgY29tZSB0aGUgY2xhaW0KCQkJCQlub3QgdG8gYmUgZ292ZXJuZWQsIHByZWZlcmFibHkgbm90IGJ5IGFueWJvZHksIG9yIGZhaWxpbmcgdGhhdCwgdG8gZ292ZXJuIGFuZCBiZQoJCQkJCWdvdmVybmVkIGluIHR1cm5zOyBhbmQgdGhpcyBpcyB0aGUgd2F5IGluIHdoaWNoIHRoZSBzZWNvbmQgcHJpbmNpcGxlIGNvbnRyaWJ1dGVzCgkJCQkJdG8gZXF1YWxpdGFyaWFuIGxpYmVydHkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgY2xhdXNlIGlzCgkJCQkJCW9ic2N1cmU6IHBlcmhhcHMgaXQgaXMgYW4gaW50ZXJwb2xhdGlvbi48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhlc2UgcHJpbmNpcGxlcyBoYXZpbmcgYmVlbgoJCQkJCWxhaWQgZG93biBhbmQgdGhpcyBiZWluZyB0aGUgbmF0dXJlIG9mIGRlbW9jcmF0aWMgZ292ZXJubWVudCwgdGhlIGZvbGxvd2luZwoJCQkJCWluc3RpdHV0aW9ucyBhcmUgZGVtb2NyYXRpYyBpbiBjaGFyYWN0ZXI6IGVsZWN0aW9uIG9mIG9mZmljaWFscyBieSBhbGwgZnJvbSBhbGw7CgkJCQkJZ292ZXJubWVudCBvZiBlYWNoIGJ5IGFsbCw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIG9mIGFsbAoJCQkJCWJ5IGVhY2ggaW4gdHVybjsgZWxlY3Rpb24gYnkgbG90IGVpdGhlciB0byBhbGwgbWFnaXN0cmFjaWVzIG9yIHRvIGFsbCB0aGF0IGRvCgkJCQkJbm90IG5lZWQgZXhwZXJpZW5jZSBhbmQgc2tpbGw7IG5vIHByb3BlcnR5LXF1YWxpZmljYXRpb24gZm9yIG9mZmljZSwgb3Igb25seSBhCgkJCQkJdmVyeSBsb3cgb25lOyBubyBvZmZpY2UgdG8gYmUgaGVsZCB0d2ljZSwgb3IgbW9yZSB0aGFuIGEgZmV3IHRpbWVzLCBieSB0aGUgc2FtZQoJCQkJCXBlcnNvbiwgb3IgZmV3IG9mZmljZXMgZXhjZXB0IHRoZSBtaWxpdGFyeSBvbmVzOyBzaG9ydCB0ZW51cmUgZWl0aGVyIG9mIGFsbAoJCQkJCW9mZmljZXMgb3Igb2YgYXMgbWFueSBhcyBwb3NzaWJsZTsganVkaWNpYWwgZnVuY3Rpb25zIHRvIGJlIGV4ZXJjaXNlZCBieSBhbGwKCQkJCQljaXRpemVucywgdGhhdCBpcyBieSBwZXJzb25zIHNlbGVjdGVkIGZyb20gYWxsLCBhbmQgb24gYWxsIG1hdHRlcnMsIG9yIG9uIG1vc3QKCQkJCQlhbmQgdGhlIGdyZWF0ZXN0IGFuZCBtb3N0IGltcG9ydGFudCwgZm9yIGluc3RhbmNlIHRoZSBhdWRpdCBvZiBvZmZpY2lhbAoJCQkJCWFjY291bnRzLCBjb25zdGl0dXRpb25hbCBxdWVzdGlvbnMsIHByaXZhdGUgY29udHJhY3RzOyB0aGUgYXNzZW1ibHkgdG8gYmUKCQkJCQlzb3ZlcmVpZ24gb3ZlciBhbGwgbWF0dGVycywgYnV0IG5vIG9mZmljaWFsIG92ZXIgYW55IG9yIG9ubHkgb3ZlciBleHRyZW1lbHkgZmV3OwoJCQkJCW9yIGVsc2UgYSBjb3VuY2lsIHRvIGJlIHNvdmVyZWlnbiBvdmVyIHRoZSBtb3N0IGltcG9ydGFudCBtYXR0ZXJzIDwvdHJhbnNsYXRpb24+"
translation['6.1318a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS45IiB1bml0PSJMb2ViIGNoYXAiIC8+77yIYW5kIGEgY291bmNpbCBpcyB0aGUgbW9zdAoJCQkJCWRlbW9jcmF0aWMgb2YgbWFnaXN0cmFjaWVzIGluIHN0YXRlcyB3aGVyZSB0aGVyZSBpcyBub3QgYSBwbGVudGlmdWwgc3VwcGx5IG9mCgkJCQkJcGF5IGZvciBldmVyeWJvZHnigJRmb3Igd2hlcmUgdGhlcmUgaXMsIHRoZXkgZGVwcml2ZSBldmVuIHRoaXMgb2ZmaWNlIG9mCgkJCQkJaXRzIHBvd2VyLCBzaW5jZSB0aGUgcGVvcGxlIGRyYXdzIGFsbCB0aGUgdHJpYWxzIHRvIGl0c2VsZiB3aGVuIGl0IGhhcyBwbGVudHkgb2YKCQkJCQlwYXksIGFzIGhhcyBiZWVuIHNhaWQgYmVmb3JlIGluIHRoZSB0cmVhdGlzZSBwcmVjZWRpbmcgdGhpcyBvbmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Qm9vayA0LCAxMjk5YiAzOCBmZi4g77yIQm9va3MgNC4gYW5kIDUuCgkJCQkJCWFyZSByZWdhcmRlZCBhcyBmb3JtaW5nIG9uZSB0cmVhdGlzZe+8iS48L25vdGU+77yJOyBhbHNvCgkJCQkJcGF5bWVudCBmb3IgcHVibGljIGR1dGllcywgcHJlZmVyYWJseSBpbiBhbGwgYnJhbmNoZXMsIGFzc2VtYmx5LCBsYXctY291cnRzLAoJCQkJCW1hZ2lzdHJhY2llcywgb3IgaWYgbm90LCBmb3IgdGhlIG1hZ2lzdHJhY2llcywgdGhlIGxhdy1jb3VydHMsIGNvdW5jaWwgYW5kCgkJCQkJc292ZXJlaWduIGFzc2VtYmxpZXMsIG9yIGZvciB0aG9zZSBtYWdpc3RyYWNpZXMgd2hpY2ggYXJlIGJvdW5kPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gb3dpbmcgdG8gdGhlIG5hdHVyZSBvZiB0aGVpciBkdXRpZXMsIGFuZAoJCQkJCQlieSBnZW5lcmFsIGN1c3RvbS48L25vdGU+IHRvIGhhdmUgY29tbW9uIG1lc3MgdGFibGVzLiBBbHNvIGluYXNtdWNoIGFzCgkJCQkJb2xpZ2FyY2h5IGlzIGRlZmluZWQgYnkgYmlydGgsIHdlYWx0aCBhbmQgZWR1Y2F0aW9uLCB0aGUgcG9wdWxhciBxdWFsaWZpY2F0aW9ucwoJCQkJCWFyZSB0aG91Z2h0IHRvIGJlIHRoZSBvcHBvc2l0ZSBvZiB0aGVzZSwgbG93IGJpcnRoLCBwb3ZlcnR5LCB2dWxnYXJpdHkuIEFuZCBpbgoJCQkJCXJlc3BlY3Qgb2YgdGhlIG1hZ2lzdHJhY2llcyBpdCBpcyBkZW1vY3JhdGljIHRvIGhhdmUgbm9uZSB0ZW5hYmxlIGZvciBsaWZlLAoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMxOGEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['6.1318a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBpZiBhbnkgbGlmZS1vZmZpY2UgaGFzIGJlZW4gbGVmdCBhZnRlciBhbiBhbmNpZW50CgkJCQkJcmV2b2x1dGlvbiwgYXQgYWxsIGV2ZW50cyB0byBkZXByaXZlIGl0IG9mIGl0cyBwb3dlciBhbmQgdG8gc3Vic3RpdHV0ZSBlbGVjdGlvbgoJCQkJCWJ5IGxvdCBmb3IgZWxlY3Rpb24gYnkgdm90ZS48L3RyYW5zbGF0aW9uPg=="
translation['6.1318a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVzZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgcmVzdCBvZiB0aGUgY2hhcHRlciBpcyBtb3N0IG9ic2N1cmUsIGFuZCBpdHMgYXV0aGVudGljaXR5IGlzCgkJCQkJCXF1ZXN0aW9uZWQuPC9ub3RlPiB0aGVuIGFyZSB0aGUgZmVhdHVyZXMgY29tbW9uIHRvIGRlbW9jcmFjaWVzLiBCdXQgd2hhdCBpcwoJCQkJCXRob3VnaHQgdG8gYmUgdGhlIGV4dHJlbWUgZm9ybSBvZiBkZW1vY3JhY3kgYW5kIG9mIHBvcHVsYXIgZ292ZXJubWVudCBjb21lcwoJCQkJCWFib3V0IGFzIGEgcmVzdWx0IG9mIHRoZSBwcmluY2lwbGUgb2YganVzdGljZSB0aGF0IGlzIGFkbWl0dGVkIHRvIGJlIGRlbW9jcmF0aWMsCgkJCQkJYW5kIHRoaXMgaXMgZm9yIGFsbCB0byBoYXZlIGVxdWFsaXR5IGFjY29yZGluZyB0byBudW1iZXIuIEZvciBpdCBpcyBlcXVhbGl0eSBmb3IKCQkJCQl0aGUgcG9vciB0byBoYXZlIG5vIGxhcmdlciBzaGFyZSBvZiBwb3dlciB0aGFuIHRoZSByaWNoLCBhbmQgbm90IGZvciB0aGUgcG9vcgoJCQkJCWFsb25lIHRvIGJlIHN1cHJlbWUgYnV0IGZvciBhbGwgdG8gZ292ZXJuIGVxdWFsbHk7IGZvciBpbiB0aGlzIHdheSB0aGV5IHdvdWxkCgkJCQkJZmVlbCB0aGF0IHRoZSBjb25zdGl0dXRpb24gcG9zc2Vzc2VkIGJvdGggZXF1YWxpdHkgYW5kIGxpYmVydHkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGUgcXVlc3Rpb24gZm9sbG93cywgaG93IHdpbGwgdGhleQoJCQkJCWhhdmUgZXF1YWxpdHk/IGFyZSB0aGUgcHJvcGVydHktYXNzZXNzbWVudHMgb2YgZml2ZSBodW5kcmVkIGNpdGl6ZW5zIHRvIGJlCgkJCQkJZGl2aWRlZCBhbW9uZyBhIHRob3VzYW5kIGFuZCB0aGUgdGhvdXNhbmQgdG8gaGF2ZSBlcXVhbCBwb3dlciB0byB0aGUgZml2ZQoJCQkJCQlodW5kcmVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdHdvIGdyb3VwcyBvZiB2b3RlcnMsIHdpdGgKCQkJCQkJZXF1YWwgdG90YWwgd2VhbHRoIGFuZCB0b3RhbCB2b3RpbmctcG93ZXIsIGJ1dCBvbmUgZ3JvdXAgdHdpY2UgYXMgbnVtZXJvdXMKCQkJCQkJYXMgdGhlIG90aGVyLCBzbyB0aGF0IGEgbWFuIGluIHRoZSByaWNoIGdyb3VwIGhhcyB0d28gdm90ZXMgYW5kIG9uZSBpbiB0aGUKCQkJCQkJcG9vciBncm91cCBvbmUsIHRoZSBmb3JtZXIgYmVpbmcgb24gdGhlIGF2ZXJhZ2UgdHdpY2UgYXMgcmljaCBhcyB0aGUKCQkJCQkJbGF0dGVyLjwvbm90ZT4/IG9yIGlzIGVxdWFsaXR5IG9uIHRoaXMgcHJpbmNpcGxlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4g4oCYZXF1YWxpdHkgaW4gcHJvcG9ydGlvbiB0bwoJCQkJCQludW1iZXIu4oCZPC9ub3RlPiBub3QgdG8gYmUgYXJyYW5nZWQgaW4gdGhpcyBtYW5uZXIsIGJ1dCB0aGUKCQkJCQlkaXZpc2lvbiBpbnRvIGNsYXNzZXMgdG8gYmUgb24gdGhpcyBzeXN0ZW0sIGJ1dCB0aGVuIGFuIGVxdWFsIG51bWJlciB0byBiZSB0YWtlbgoJCQkJCWZyb20gdGhlIGZpdmUgaHVuZHJlZCBhbmQgZnJvbSB0aGUgdGhvdXNhbmQgYW5kIHRoZXNlIHRvIGNvbnRyb2wgdGhlIGVsZWN0aW9ucwoJCQkJCWFuZCB0aGUgbGF3LWNvdXJ0cz8gSXMgdGhpcyB0aGVuIHRoZSBqdXN0ZXN0IGZvcm0gb2YgY29uc3RpdHV0aW9uIGluIGFjY29yZGFuY2UKCQkJCQl3aXRoIHBvcHVsYXIganVzdGljZSwgb3IgaXMgaXQgcmF0aGVyIG9uZSB0aGF0IGdvZXMgYnkgY291bnRpbmcgaGVhZHM/PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4g4oCYb25lIG1hbiBvbmUKCQkJCQkJdm90ZS7igJk8L25vdGU+IEZvciBkZW1vY3JhdHMgc2F5IHRoYXQganVzdGljZSBpcyB3aGF0ZXZlciBzZWVtcwoJCQkJCWdvb2QgdG8gdGhlIGxhcmdlciBudW1iZXIsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmJ1dAoJCQkJCWFkdm9jYXRlcyBvZiBvbGlnYXJjaHkgdGhpbmsgdGhhdCBpdCBpcyB3aGF0ZXZlciBzZWVtcyBnb29kIHRvIHRoZSBvd25lcnMgb2YgdGhlCgkJCQkJbGFyZ2VyIGFtb3VudCBvZiBwcm9wZXJ0eSwgZm9yIHRoZXkgc2F5IHRoYXQgdGhlIGRlY2lzaW9uIG91Z2h0IHRvIGdvIGJ5IGFtb3VudAoJCQkJCW9mIHByb3BlcnR5LiA8L3RyYW5zbGF0aW9uPg=="
translation['6.1318b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBib3RoIHZpZXdzIGludm9sdmUKCQkJCQlpbmVxdWFsaXR5IGFuZCBpbmp1c3RpY2U7IGZvciBpZiB0aGUgd2lsbCBvZiB0aGUgZmV3IGlzIHRvIHByZXZhaWwsIHRoaXMgbWVhbnMgYQoJCQkJCXR5cmFubnksIHNpbmNlIGlmIG9uZSBtYW4gb3ducyBtb3JlIHRoYW4gdGhlIG90aGVyIHJpY2ggbWVuLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGFwcGFyZW50bHksIG1vcmUgdGhhbiB0aGUgcHJvcGVydHkgb2YgYWxsIHRoZSBvdGhlcnMgcHV0CgkJCQkJCXRvZ2V0aGVyLjwvbm90ZT4gYWNjb3JkaW5nIHRvIHRoZSBvbGlnYXJjaGljIHByaW5jaXBsZSBvZiBqdXN0aWNlIGl0IGlzIGp1c3QKCQkJCQlmb3IgaGltIHRvIHJ1bGUgYWxvbmU7IHdoZXJlYXMgaWYgdGhlIHdpbGwgb2YgdGhlIG51bWVyaWNhbCBtYWpvcml0eSBpcyB0bwoJCQkJCXByZXZhaWwsIHRoZXkgd2lsbCBkbyBpbmp1c3RpY2UgYnkgY29uZmlzY2F0aW5nIHRoZSBwcm9wZXJ0eSBvZiB0aGUgcmljaAoJCQkJCW1pbm9yaXR5LCBhcyBoYXMgYmVlbiBzYWlkIGJlZm9yZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+MTI4MWEKCQkJCQkJMTQuPC9ub3RlPiBXaGF0IGZvcm0gb2YgZXF1YWxpdHkgdGhlcmVmb3JlIHdvdWxkIGJlIG9uZSBvbiB3aGljaCBib3RoCgkJCQkJcGFydGllcyB3aWxsIGFncmVlIG11c3QgYmUgY29uc2lkZXJlZCBpbiB0aGUgbGlnaHQgb2YgdGhlIHByaW5jaXBsZXMgb2YganVzdGljZQoJCQkJCWFzIGRlZmluZWQgYnkgYm90aCBzZXRzLiBGb3IgdGhleSBzYXkgdGhhdCB3aGF0ZXZlciBzZWVtcyBnb29kIHRvIHRoZSBtYWpvcml0eQoJCQkJCW9mIHRoZSBjaXRpemVucyBvdWdodCB0byBiZSBzb3ZlcmVpZ24uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkxldCB1cyB0aGVuIGFjY2VwdCB0aGlzIHByaW5jaXBsZSwgeWV0IG5vdCB3aG9sbHkgd2l0aG91dAoJCQkJCXF1YWxpZmljYXRpb24sIGJ1dCBpbmFzbXVjaCBhcyBmb3J0dW5lIGhhcyBicm91Z2h0IGludG8gZXhpc3RlbmNlIHR3byBjb21wb25lbnQKCQkJCQlwYXJ0cyBvZiB0aGUgc3RhdGUsIHJpY2ggYW5kIHBvb3IsIGxldCBhbnkgcmVzb2x1dGlvbiBwYXNzZWQgYnkgYm90aCBjbGFzc2VzLCBvcgoJCQkJCWJ5IGEgbWFqb3JpdHkgb2YgZWFjaCwgYmUgc292ZXJlaWduLCBidXQgaWYgdGhlIHR3byBjbGFzc2VzIGNhcnJ5IG9wcG9zaXRlCgkJCQkJcmVzb2x1dGlvbnMsIGxldCB0aGUgZGVjaXNpb24gb2YgdGhlIG1ham9yaXR5LCBpbiB0aGUgc2Vuc2Ugb2YgdGhlIGdyb3VwIHdob3NlCgkJCQkJdG90YWwgcHJvcGVydHkgYXNzZXNzbWVudCBpcyB0aGUgbGFyZ2VyLCBwcmV2YWlsOiBmb3IgaW5zdGFuY2UsIGlmIHRoZXJlIGFyZSB0ZW4KCQkJCQlyaWNoIGNpdGl6ZW5zIGFuZCB0d2VudHkgcG9vciBvbmVzLCBhbmQgb3Bwb3NpdGUgdm90ZXMgaGF2ZSBiZWVuIGNhc3QgYnkgc2l4IG9mCgkJCQkJdGhlIHJpY2ggb24gb25lIHNpZGUgYW5kIGJ5IGZpZnRlZW4gb2YgdGhlIGxlc3Mgd2VhbHRoeSBvbiB0aGUgb3RoZXIsIGZvdXIgb2YKCQkJCQl0aGUgcmljaCBoYXZlIHNpZGVkIHdpdGggdGhlIHBvb3IgYW5kIGZpdmUgb2YgdGhlIHBvb3Igd2l0aCB0aGUgcmljaDsgdGhlbiB0aGUKCQkJCQlzaWRlIHRoYXQgaGFzIHRoZSBsYXJnZXIgdG90YWwgcHJvcGVydHkgd2hlbiB0aGUgYXNzZXNzbWVudHMgb2YgYm90aCBjbGFzc2VzIG9uCgkJCQkJZWl0aGVyIHNpZGUgYXJlIGFkZGVkIHRvZ2V0aGVyIGNhcnJpZXMgdGhlIHZvdGluZy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SWYgdGhlIHJpY2ggY2l0aXplbnMgYXJlIG9uIHRoZSBhdmVyYWdlIHR3aWNlIGFzIHdlYWx0aHkgYXMKCQkJCQkJdGhlIHBvb3Ig77yIMS4xMe+8iSwgYW5kIHRoZXJlZm9yZSBhIHJpY2ggbWFuIGhhcyB0d28gdm90ZXMgdG8KCQkJCQkJYSBwb29yIG1hbidzIG9uZSwgd2hlbiA2IHJpY2ggYW5kIDUgcG9vciB2b3RlIG9uZSB3YXksIGFuZCAxNSBwb29yIGFuZCA0CgkJCQkJCXJpY2ggdGhlIG90aGVyLCB0aGUgZGl2aXNpb24gaXMgMTcgdG8gMjMsIGFuZCB0aGUgdmlldyBvZiB0aGUgbGF0dGVyIHBhcnR5LAoJCQkJCQl3aGljaCBpcyBjYXJyaWVkLCByZXByZXNlbnRzIGEgbGFyZ2VyIHRvdGFsIG9mIHdlYWx0aCBidXQgYSBsYXJnZXIKCQkJCQkJcHJvcG9ydGlvbiBvZiBwb29yIG1lbi48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjE0IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGlmIHRoZSB0b3RhbHMgZmFsbCBvdXQgZXhhY3RseQoJCQkJCWVxdWFsLCB0aGlzIGlzIHRvIGJlIGRlZW1lZCBhbiBpbXBhc3NlIGNvbW1vbiB0byBib3RoIHNpZGVzLCBhcyBpdCBpcyBhdCBwcmVzZW50CgkJCQkJaWYgdGhlIGFzc2VtYmx5IG9yIGxhdy1jb3VydCBpcyBleGFjdGx5IGRpdmlkZWQ7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzE4YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['6.1318b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmVpdGhlciBhIGRlY2lzaW9uCgkJCQkJbXVzdCBiZSBtYWRlIGJ5IGNhc3RpbmcgbG90cyBvciBzb21lIG90aGVyIHN1Y2ggZGV2aWNlIG11c3QgYmUgYWRvcHRlZC4gQnV0IG9uCgkJCQkJcXVlc3Rpb25zIG9mIGVxdWFsaXR5IGFuZCBqdXN0aWNlLCBldmVuIHRob3VnaCBpdCBpcyB2ZXJ5IGRpZmZpY3VsdCB0byBkaXNjb3ZlcgoJCQkJCXRoZSB0cnV0aCBhYm91dCB0aGVtLCBuZXZlcnRoZWxlc3MgaXQgaXMgZWFzaWVyIHRvIGhpdCB1cG9uIGl0IHRoYW4gdG8gcGVyc3VhZGUKCQkJCQlwZW9wbGUgdGhhdCBoYXZlIHRoZSBwb3dlciB0byBnZXQgYW4gYWR2YW50YWdlIHRvIGFncmVlIHRvIGl0OyBlcXVhbGl0eSBhbmQKCQkJCQlqdXN0aWNlIGFyZSBhbHdheXMgc291Z2h0IGJ5IHRoZSB3ZWFrZXIgcGFydHksIGJ1dCB0aG9zZSB0aGF0IGhhdmUgdGhlIHVwcGVyCgkJCQkJaGFuZCBwYXkgbm8gYXR0ZW50aW9uIHRvIHRoZW0uPC90cmFuc2xhdGlvbj4="
translation['6.1318b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXJlIGJlaW5nIGZvdXIga2luZHMgb2YgZGVtb2NyYWN5LCB0aGUKCQkJCQliZXN0IGlzIHRoZSBvbmUgdGhhdCBzdGFuZHMgZmlyc3QgaW4gc3RydWN0dXJlLCBhcyB3YXMgc2FpZCBpbiB0aGUgZGlzY291cnNlcwoJCQkJCXByZWNlZGluZyB0aGVzZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gNCwgMTI5MWIgMzAtNDEsIDEyOTJiCgkJCQkJCTI1LTMzLjwvbm90ZT47IGl0IGlzIGFsc28gdGhlIG9sZGVzdCBvZiB0aGVtIGFsbCwgYnV0IGJ5IGZpcnN0IEkgbWVhbiBmaXJzdAoJCQkJCWFzIGl0IHdlcmUgaW4gYSBjbGFzc2lmaWNhdGlvbiBvZiB0aGUga2luZHMgb2YgY29tbW9uIHBlb3BsZS4gVGhlIGJlc3QgY29tbW9uCgkJCQkJcGVvcGxlIGFyZSB0aGUgYWdyaWN1bHR1cmFsIHBvcHVsYXRpb24sIHNvIHRoYXQgaXQgaXMgcG9zc2libGUgdG8gaW50cm9kdWNlCgkJCQkJZGVtb2NyYWN5IGFzIHdlbGwgYXMgb3RoZXIgZm9ybXMgb2YgY29uc3RpdHV0aW9uIHdoZXJlIHRoZSBtdWx0aXR1ZGUgbGl2ZXMgYnkKCQkJCQlhZ3JpY3VsdHVyZSBvciBieSBwYXN0dXJpbmcgY2F0dGxlLiBGb3Igb3dpbmcgdG8gdGhlaXIgbm90IGhhdmluZyBtdWNoIHByb3BlcnR5CgkJCQkJdGhleSBhcmUgYnVzeSwgc28gdGhhdCB0aGV5IGNhbm5vdCBvZnRlbiBtZWV0IGluIHRoZSBhc3NlbWJseSwgd2hpbGUgb3dpbmcgdG8KCQkJCQl0aGVpciBoYXZpbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIE1TUy4gZ2l2ZSDigJhub3QKCQkJCQkJaGF2aW5nLOKAmSBidXQgZWRpdG9ycyBkbyBub3QgZXhwbGFpbiBob3cgaW4gdGhhdCBjYXNlIHBlb3BsZSB3b3VsZAoJCQkJCQlhdm9pZCBzdGFydmF0aW9uLjwvbm90ZT4gdGhlIG5lY2Vzc2FyaWVzIG9mIGxpZmUgdGhleSBwYXNzIHRoZWlyIHRpbWUKCQkJCQlhdHRlbmRpbmcgdG8gdGhlaXIgZmFybSB3b3JrIGFuZCBkbyBub3QgY292ZXQgdGhlaXIgbmVpZ2hib3JzJyBnb29kcywgYnV0IGZpbmQKCQkJCQltb3JlIHBsZWFzdXJlIGluIHdvcmtpbmcgdGhhbiBpbiB0YWtpbmcgcGFydCBpbiBwb2xpdGljcyBhbmQgaG9sZGluZyBvZmZpY2UsCgkJCQkJd2hlcmUgdGhlIHByb2ZpdHMgdG8gYmUgbWFkZSBmcm9tIHRoZSBvZmZpY2VzIGFyZSBub3QgbGFyZ2U7IGZvciB0aGUgbWFzcyBvZgoJCQkJCW1hbmtpbmQgYXJlIG1vcmUgY292ZXRvdXMgb2YgZ2FpbiB0aGFuIG9mIGhvbm9yLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB0aGlzIGlzIGluZGljYXRlZCBieSB0aGUgZmFjdCB0aGF0IG1lbiBlbmR1cmVkIHRoZQoJCQkJCXR5cmFubmllcyBvZiBmb3JtZXIgdGltZXMsIGFuZCBlbmR1cmUgb2xpZ2FyY2hpZXMsIGlmIGEgcnVsZXIgZG9lcyBub3QgcHJldmVudAoJCQkJCXRoZW0gZnJvbSB3b3JraW5nIG9yPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnJvYiB0aGVtOyBmb3IKCQkJCQl0aGVuIHNvbWUgb2YgdGhlbSBzb29uIGdldCByaWNoIGFuZCB0aGUgb3RoZXJzIGZyZWUgZnJvbSB3YW50LiBBbmQgYWxzbywgaWYgdGhleQoJCQkJCWhhdmUgYW55IGFtYml0aW9uLCB0byBoYXZlIGNvbnRyb2wgb3ZlciBlbGVjdGluZyBtYWdpc3RyYXRlcyBhbmQgY2FsbGluZyB0aGVtIHRvCgkJCQkJYWNjb3VudCBtYWtlcyB1cCBmb3IgdGhlIGxhY2sgb2Ygb2ZmaWNlLCBzaW5jZSBpbiBzb21lIGRlbW9jcmFjaWVzIGV2ZW4gaWYgdGhlCgkJCQkJcGVvcGxlIGhhdmUgbm8gcGFydCBpbiBlbGVjdGluZyB0aGUgbWFnaXN0cmF0ZXMgYnV0IHRoZXNlIGFyZSBlbGVjdGVkIGJ5IGEKCQkJCQlzcGVjaWFsIGNvbW1pdHRlZSBzZWxlY3RlZCBpbiB0dXJuIG91dCBvZiB0aGUgd2hvbGUgbnVtYmVyLCBhcyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1hbnRpbmVhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNYW50aW5lYSI+TWFudGluZWE8L3BsYWNlTmFtZT4sIHlldCBpZiB0aGV5IGhhdmUgdGhlIHBvd2VyIG9mCgkJCQkJZGVsaWJlcmF0aW5nIG9uIHBvbGljeSwgdGhlIG11bHRpdHVkZSBhcmUgc2F0aXNmaWVkLiDvvIhBbmQgdGhpcyB0b28gbXVzdAoJCQkJCWJlIGNvdW50ZWQgYXMgb25lIGZvcm0gb2YgZGVtb2NyYWN5LCBvbiB0aGUgbGluZXMgb24gd2hpY2ggaXQgb25jZSBleGlzdGVkIGF0CgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWFudGluZWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1hbnRpbmVhIj5NYW50aW5lYTwvcGxhY2VOYW1lPi7vvIkgPC90cmFuc2xhdGlvbj4="
translation['6.1319a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+SW5kZWVkIGl0IGlzIGZvciB0aGlzIHJlYXNvbiB0aGF0IGl0IGlzCgkJCQkJYWR2YW50YWdlb3VzIGZvciB0aGUgZm9ybSBvZiBkZW1vY3JhY3kgc3Bva2VuIG9mIGJlZm9yZSwgYW5kIGlzIGEgY3VzdG9tYXJ5CgkJCQkJaW5zdGl0dXRpb24gaW4gaXQsIGZvciBhbGwgdGhlIGNpdGl6ZW5zIHRvIGVsZWN0IHRoZSBtYWdpc3RyYXRlcyBhbmQgY2FsbCB0aGVtCgkJCQkJdG8gYWNjb3VudCwgYW5kIHRvIHRyeSBsYXctc3VpdHMsIGJ1dCBmb3IgdGhlIGhvbGRlcnMgb2YgdGhlIGdyZWF0ZXN0CgkJCQkJbWFnaXN0cmFjaWVzIHRvIGJlIGVsZWN0ZWQgYW5kIHRvIGhhdmUgcHJvcGVydHktcXVhbGlmaWNhdGlvbnMsIHRoZSBoaWdoZXIKCQkJCQlvZmZpY2VzIGJlaW5nIGVsZWN0ZWQgZnJvbSB0aGUgaGlnaGVyIHByb3BlcnR5LWdyYWRlcywgb3IgZWxzZSBmb3Igbm8gb2ZmaWNlIHRvCgkJCQkJYmUgZWxlY3RlZCBvbiBhIHByb3BlcnR5LXF1YWxpZmljYXRpb24sIGJ1dCBmb3Igb2ZmaWNpYWxzIHRvIGJlIGNob3NlbiBvbiB0aGUKCQkJCQlncm91bmQgb2YgY2FwYWNpdHkuIEFuZCBhIHN0YXRlIGdvdmVybmVkIGluIHRoaXMgd2F5IGlzIGJvdW5kIHRvIGJlIGdvdmVybmVkCgkJCQkJd2VsbCDvvIhmb3IgdGhlIG9mZmljZXMgd2lsbCBhbHdheXMgYmUgYWRtaW5pc3RlcmVkIGJ5IHRoZSBiZXN0IG1lbiB3aXRoCgkJCQkJdGhlIGNvbnNlbnQgb2YgdGhlIHBlb3BsZSBhbmQgd2l0aG91dCB0aGVpciBiZWluZyBqZWFsb3VzIG9mIHRoZSB1cHBlcgoJCQkJCWNsYXNzZXPvvIksIGFuZCB0aGlzIGFycmFuZ2VtZW50IGlzIGNlcnRhaW4gdG8gYmUgc2F0aXNmYWN0b3J5IGZvciB0aGUKCQkJCQl1cHBlciBjbGFzc2VzIGFuZCBub3RhYmxlcywgZm9yIHRoZXkgd2lsbCBub3QgYmUgdW5kZXIgdGhlIGdvdmVybm1lbnQgb2Ygb3RoZXJzCgkJCQkJaW5mZXJpb3IgdG8gdGhlbXNlbHZlcywgYW5kIHRoZXkgd2lsbCBnb3Zlcm4ganVzdGx5IGJlY2F1c2UgYSBkaWZmZXJlbnQgY2xhc3MKCQkJCQl3aWxsIGJlIGluIGNvbnRyb2wgb2YgdGhlIGF1ZGl0c+KAlDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+c2luY2UgaXQgaXMgZXhwZWRpZW50IHRvIGJlIGluIGEgc3RhdGUgb2Ygc3VzcGVuc2UgYW5kIG5vdAoJCQkJCXRvIGJlIGFibGUgdG8gZG8gZXZlcnl0aGluZyBleGFjdGx5IGFzIHNlZW1zIGdvb2QgdG8gb25lLCBmb3IgbGliZXJ0eSB0byBkbwoJCQkJCXdoYXRldmVyIG9uZSBsaWtlcyBjYW5ub3QgZ3VhcmQgYWdhaW5zdCB0aGUgZXZpbCB0aGF0IGlzIGluIGV2ZXJ5IG1hbidzCgkJCQkJY2hhcmFjdGVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMxOWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['6.1319a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkhlbmNlIHRoZXJlIG5lY2Vzc2FyaWx5IHJlc3VsdHMgdGhlIGNvbmRpdGlvbiBvZiBhZmZhaXJzIHRoYXQKCQkJCQlpcyB0aGUgbW9zdCBhZHZhbnRhZ2VvdXMgaW4gdGhlIGdvdmVybm1lbnQgb2Ygc3RhdGVz4oCUZm9yIHRoZSB1cHBlcgoJCQkJCWNsYXNzZXMgdG8gZ292ZXJuIHdpdGhvdXQgZG9pbmcgd3JvbmcsIHRoZSBjb21tb24gcGVvcGxlIG5vdCBiZWluZyBkZXByaXZlZCBvZgoJCQkJCWFueSByaWdodHMuIEl0IGlzIG1hbmlmZXN0IHRoZXJlZm9yZSB0aGF0IHRoaXMgaXMgdGhlIGJlc3Qgb2YgdGhlIGZvcm1zIG9mCgkJCQkJZGVtb2NyYWN5LCBhbmQgd2h5IHRoaXMgaXMgc2/igJRuYW1lbHksIGJlY2F1c2UgaW4gaXQgdGhlIGNvbW1vbiBwZW9wbGUKCQkJCQlhcmUgb2YgYSBjZXJ0YWluIGtpbmQuPC90cmFuc2xhdGlvbj4="
translation['6.1319a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZvciB0aGUgcHVycG9zZSBvZiBtYWtpbmcgdGhlIHBlb3BsZSBhbiBhZ3JpY3VsdHVyYWwKCQkJCQljb21tdW5pdHksIG5vdCBvbmx5IHdlcmUgc29tZSBvZiB0aGUgbGF3cyB0aGF0IHdlcmUgZW5hY3RlZCBpbiBtYW55IHN0YXRlcyBpbgoJCQkJCWVhcmx5IHRpbWVzIGVudGlyZWx5IHNlcnZpY2VhYmxlLCBwcm9oaWJpdGluZyB0aGUgb3duZXJzaGlwIG9mIG1vcmUgdGhhbiBhCgkJCQkJY2VydGFpbiBhbW91bnQgb2YgbGFuZCB1bmRlciBhbnkgY29uZGl0aW9ucyBvciBlbHNlIG9mIG1vcmUgdGhhbiBhIGNlcnRhaW4KCQkJCQlhbW91bnQgbHlpbmcgYmV0d2VlbiBhIGNlcnRhaW4gcGxhY2UgYW5kIHRoZSBjaXRhZGVsIG9yIGNpdHkg77yIYW5kIGluCgkJCQkJZWFybHkgdGltZXMgYXQgYWxsIGV2ZW50cyBpbiBtYW55IHN0YXRlcyB0aGVyZSB3YXMgZXZlbiBsZWdpc2xhdGlvbiBwcm9oaWJpdGluZwoJCQkJCXRoZSBzYWxlIG9mIHRoZSBvcmlnaW5hbCBhbGxvdG1lbnRzOyBhbmQgdGhlcmUgaXMgYSBsYXcgc2FpZCB0byBiZSBkdWUgdG8KCQkJCQkJT3h5bHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkxlYWRlciBvZiB0aGUgSGVyYWNsaWRhZSBpbiB0aGVpcgoJCQkJCQlpbnZhc2lvbiBvZiB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTcwNzYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNzA3NiI+UGVsb3Bvbm5lc2U8L3BsYWNlTmFtZT4sIGFuZAoJCQkJCQlhZnRlcndhcmRzIGtpbmcgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxFbGlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxFbGlzIj5FbGlzPC9wbGFjZU5hbWU+Ljwvbm90ZT4KCQkJCQl3aXRoIHNvbWUgc2ltaWxhciBwcm92aXNpb24sIGZvcmJpZGRpbmcgbG9hbnMgc2VjdXJlZCBvbiBhIGNlcnRhaW4gcG9ydGlvbiBvZiBhCgkJCQkJbWFuJ3MgZXhpc3RpbmcgZXN0YXRl77yJLCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNzA3NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE3MDc2Ij5QZWxvcG9ubmVzZTwvcGxhY2VOYW1lPiwgYW5kCgkJCQkJCWFmdGVyd2FyZHMga2luZyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEVsaXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEVsaXMiPkVsaXM8L3BsYWNlTmFtZT4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQKCQkJCQlhdCB0aGUgcHJlc2VudCBkYXkgaXQgd291bGQgYWxzbyBiZSB3ZWxsIHRvIGludHJvZHVjZSByZWZvcm0gYnkgbWVhbnMgb2YgdGhlIGxhdwoJCQkJCW9mIHRoZSBBcGh5dGFlYW5zLCBhcyBpdCBpcyBzZXJ2aWNlYWJsZSBmb3IgdGhlIHB1cnBvc2Ugb2Ygd2hpY2ggd2UgYXJlCgkJCQkJc3BlYWtpbmc7IHRoZSBjaXRpemVucyBvZiBBcGh5dGlzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkFwaHl0aXMgd2FzCgkJCQkJCW9uIHRoZSBJc3RobXVzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGFsbGVuZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsUGFsbGVuZSI+UGFsbGVuZTwvcGxhY2VOYW1lPiBpbgoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDY2NjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwNjY2NyI+TWFjZWRvbmlhPC9wbGFjZU5hbWU+Ljwvbm90ZT4gYWx0aG91Z2gKCQkJCQludW1lcm91cyBhbmQgcG9zc2Vzc2luZyBhIHNtYWxsIHRlcnJpdG9yeSBuZXZlcnRoZWxlc3MgYXJlIGFsbCBlbmdhZ2VkIGluCgkJCQkJYWdyaWN1bHR1cmUsIGZvciB0aGV5IGFyZSBhc3Nlc3NlZCBub3Qgb24gdGhlIHdob2xlIG9mIHRoZWlyIGVzdGF0ZXMsIGJ1dCBvbgoJCQkJCWRpdmlzaW9ucyBvZiB0aGVtIHNvIHNtYWxsIHRoYXQgZXZlbiB0aGUgcG9vciBjYW4gZXhjZWVkIHRoZSByZXF1aXJlZCBtaW5pbXVtIGluCgkJCQkJdGhlaXIgYXNzZXNzbWVudHMuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxQYWxsZW5lIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQYWxsZW5lIj5QYWxsZW5lPC9wbGFjZU5hbWU+IGluCgkJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNjY2NyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA2NjY3Ij5NYWNlZG9uaWE8L3BsYWNlTmFtZT4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk5vIHNhdGlzZmFjdG9yeQoJCQkJCQlleHBsYW5hdGlvbiBzZWVtcyB0byBoYXZlIGJlZW4gc3VnZ2VzdGVkIG9mIHdoYXQgdGhpcyBtZWFucy48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIKCQkJCQl0aGUgYWdyaWN1bHR1cmFsIGNvbW11bml0eTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50aGUgYmVzdAoJCQkJCWtpbmQgb2YgZGVtb2NyYWN5IGlzIHdoZXJlIHRoZSBwZW9wbGUgYXJlIGhlcmRzbWVuIGFuZCBnZXQgdGhlaXIgbGl2aW5nIGZyb20KCQkJCQljYXR0bGU7IGZvciB0aGlzIGxpZmUgaGFzIG1hbnkgcG9pbnRzIG9mIHJlc2VtYmxhbmNlIHRvIGFncmljdWx0dXJlLCBhbmQgYXMKCQkJCQlyZWdhcmRzIG1pbGl0YXJ5IGR1dGllcyBwYXN0b3JhbCBwZW9wbGUgYXJlIGluIGEgdmVyeSB3ZWxsIHRyYWluZWQgY29uZGl0aW9uIGFuZAoJCQkJCXNlcnZpY2VhYmxlIGluIGJvZHkgYW5kIGNhcGFibGUgb2YgbGl2aW5nIGluIHRoZSBvcGVuLiBCdXQgYWxtb3N0IGFsbCB0aGUgb3RoZXIKCQkJCQljbGFzc2VzIG9mIHBvcHVsYWNlLCBvZiB3aGljaCB0aGUgcmVtYWluaW5nIGtpbmRzIG9mIGRlbW9jcmFjeSBhcmUgY29tcG9zZWQsIGFyZQoJCQkJCXZlcnkgaW5mZXJpb3IgdG8gdGhlc2UsIGZvciB0aGVpciBtb2RlIG9mIGxpZmUgaXMgbWVhbiwgYW5kIHRoZXJlIGlzIG5vIGVsZW1lbnQKCQkJCQlvZiB2aXJ0dWUgaW4gYW55IG9mIHRoZSBvY2N1cGF0aW9ucyBpbiB3aGljaCB0aGUgbXVsdGl0dWRlIG9mIGFydGlzYW5zIGFuZAoJCQkJCW1hcmtldC1wZW9wbGUgYW5kIHRoZSB3YWdlLWVhcm5pbmcgY2xhc3MgdGFrZSBwYXJ0LCBhbmQgYWxzbyBvd2luZyB0byB0aGVpcgoJCQkJCWxvaXRlcmluZyBhYm91dCB0aGUgbWFya2V0LXBsYWNlIGFuZCB0aGUgY2l0eSBhbG1vc3QgYWxsIHBlb3BsZSBvZiB0aGlzIGNsYXNzCgkJCQkJZmluZCBpdCBlYXN5IHRvIGF0dGVuZCB0aGUgYXNzZW1ibHk7IHdoZXJlYXMgdGhlIGZhcm1lcnMgb3dpbmcgdG8gdGhlaXIgYmVpbmcKCQkJCQlzY2F0dGVyZWQgb3ZlciB0aGUgY291bnRyeSBkbyBub3QgYXR0ZW5kLCBhbmQgaGF2ZSBub3QgYW4gZXF1YWwgZGVzaXJlIGZvciB0aGlzCgkJCQkJb3Bwb3J0dW5pdHkgb2YgbWVldGluZy4gPC90cmFuc2xhdGlvbj4="
translation['6.1319b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi44IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHdoZXJlIGl0CgkJCQkJYWxzbyBoYXBwZW5zIHRoYXQgdGhlIGxpZSBvZiB0aGUgbGFuZCBpcyBzdWNoIHRoYXQgdGhlIGNvdW50cnkgaXMgd2lkZWx5CgkJCQkJc2VwYXJhdGVkIGZyb20gdGhlIGNpdHksIGl0IGlzIGVhc3kgdG8gZXN0YWJsaXNoIGEgZ29vZCBkZW1vY3JhY3kgYW5kIGFsc28gYQoJCQkJCWdvb2QgY29uc3RpdHV0aW9uYWwgZ292ZXJubWVudCwgZm9yIHRoZSBtdWx0aXR1ZGUgaXMgZm9yY2VkIHRvIGxpdmUgYXQgYQoJCQkJCWRpc3RhbmNlIG9uIHRoZSBmYXJtczsgYW5kIHNvLCBldmVuIGlmIHRoZXJlIGlzIGEgY3Jvd2QgdGhhdCBmcmVxdWVudHMgdGhlCgkJCQkJbWFya2V0LXBsYWNlLCBpdCBpcyBiZXN0IGluIGRlbW9jcmFjaWVzIG5vdCB0byBob2xkIGFzc2VtYmxpZXMgd2l0aG91dCB0aGUKCQkJCQltdWx0aXR1ZGUgc2NhdHRlcmVkIG92ZXIgdGhlIGNvdW50cnkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gaW4KCQkJCQkJYSBsYXJnZWx5IGFncmljdWx0dXJhbCBkZW1vY3JhY3ksIGV2ZW4gdGhvdWdoIHRoZXJlIG1heSBiZSBhIGNvbnNpZGVyYWJsZQoJCQkJCQlpZGxlIHBvcHVsYXRpb24sIHdoaWNoIHdvdWxkIGF0dGVuZCBmcmVxdWVudCBhc3NlbWJsaWVzLCBpdCBpcyBiZXN0IHRvIGhvbGQKCQkJCQkJdGhlbSBpbmZyZXF1ZW50bHksIHNvIGFzIHRvIHNlY3VyZSB0aGUgYXR0ZW5kYW5jZSBvZiB0aGUgZmFybWVycy48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGhhcyB0aGVuIGJlZW4gc3RhdGVkIGhvdyB0aGUgYmVzdCBhbmQgZmlyc3QKCQkJCQlraW5kIG9mIGRlbW9jcmFjeSBpcyB0byBiZSBvcmdhbml6ZWQsIGFuZCBpdCBpcyBjbGVhciBob3cgd2Ugb3VnaHQgdG8gb3JnYW5pemUKCQkJCQl0aGUgb3RoZXIga2luZHMgYWxzby4gRm9yIHRoZXkgbXVzdCBkaXZlcmdlIGluIGEgY29ycmVzcG9uZGluZyBvcmRlciwgYW5kIGF0CgkJCQkJZWFjaCBzdGFnZSB3ZSBtdXN0IGFkbWl0IHRoZSBuZXh0IGluZmVyaW9yIGNsYXNzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMxOWIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['6.1319b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['6.1319b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi45IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIGxhc3Qga2luZCBvZiBkZW1vY3JhY3ksIGJlY2F1c2UgYWxsIHRoZQoJCQkJCXBvcHVsYXRpb24gc2hhcmUgaW4gdGhlIGdvdmVybm1lbnQsIGl0IGlzIG5vdCB3aXRoaW4gdGhlIHBvd2VyIG9mIGV2ZXJ5IHN0YXRlIHRvCgkJCQkJZW5kdXJlLCBhbmQgaXQgaXMgbm90IGVhc3kgZm9yIGl0IHRvIHBlcnNpc3QgaWYgaXQgaXMgbm90IHdlbGwgY29uc3RpdHV0ZWQgaW4KCQkJCQlpdHMgbGF3cyBhbmQgY3VzdG9tcyDvvIhidXQgdGhlIHRoaW5ncyB0aGF0IHJlc3VsdCBpbiBkZXN0cm95aW5nIGJvdGgKCQkJCQl0aGlzIHN0YXRlIGFuZCB0aGUgb3RoZXIgZm9ybXMgb2YgY29uc3RpdHV0aW9uIGhhdmUgYmVlbiBuZWFybHkgYWxsIG9mIHRoZW0KCQkJCQlzcG9rZW4gb2YgYmVmb3JlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluIEJvb2sgNS48L25vdGU+77yJLgoJCQkJCVdpdGggYSB2aWV3IHRvIHNldHRpbmcgdXAgdGhpcyBraW5kIG9mIGRlbW9jcmFjeSBhbmQgbWFraW5nIHRoZSBwZW9wbGUgcG93ZXJmdWwKCQkJCQl0aGVpciBsZWFkZXJzIHVzdWFsbHkgYWNxdWlyZSBhcyBtYW55IHN1cHBvcnRlcnMgYXMgcG9zc2libGUgYW5kIGFkbWl0IHRvCgkJCQkJY2l0aXplbnNoaXAgbm90IG9ubHkgdGhlIGxlZ2l0aW1hdGUgY2hpbGRyZW4gb2YgY2l0aXplbnMgYnV0IGFsc28gdGhlIGJhc2UtYm9ybgoJCQkJCWFuZCB0aG9zZSBvZiBjaXRpemVuLWJpcnRoIG9uIG9uZSBzaWRlLCBJIG1lYW4gdGhvc2Ugd2hvc2UgZmF0aGVyIG9yIG1vdGhlciBpcyBhCgkJCQkJY2l0aXplbjsgZm9yIGFsbCB0aGlzIGVsZW1lbnQgaXMgc3BlY2lhbGx5IGNvbmdlbmlhbCB0byBhIHRvIGRlbW9jcmFjeSBvZiB0aGlzCgkJCQkJc29ydC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+UG9wdWxhciBsZWFkZXJzIHRoZXJlZm9yZQoJCQkJCXJlZ3VsYXJseSBpbnRyb2R1Y2Ugc3VjaCBpbnN0aXR1dGlvbnM7IHRoZXkgb3VnaHQgaG93ZXZlciBvbmx5IHRvIGdvIG9uIGFkZGluZwoJCQkJCWNpdGl6ZW5zIHVwIHRvIHRoZSBwb2ludCB3aGVyZSB0aGUgbXVsdGl0dWRlIG91dG51bWJlcnMgdGhlIG5vdGFibGVzIGFuZCB0aGUKCQkJCQltaWRkbGUgY2xhc3MgYW5kIG5vdCB0byBnbyBiZXlvbmQgdGhhdCBwb2ludDsgZm9yIGlmIHRoZXkgZXhjZWVkIGl0IHRoZXkgbWFrZQoJCQkJCXRoZSBnb3Zlcm5tZW50IG1vcmUgZGlzb3JkZXJseSwgYW5kIGFsc28gcHJvdm9rZSB0aGUgbm90YWJsZXMgZnVydGhlciBpbiB0aGUKCQkJCQlkaXJlY3Rpb24gb2YgYmVpbmcgcmVsdWN0YW50IHRvIGVuZHVyZSB0aGUgZGVtb2NyYWN5LCB3aGljaCBhY3R1YWxseSB0b29rIHBsYWNlCgkJCQkJYW5kIGNhdXNlZCB0aGUgcmV2b2x1dGlvbiBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMDYzOSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAwNjM5Ij5DeXJlbmU8L3BsYWNlTmFtZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SW4gTi4gQWZyaWNhLgoJCQkJCQlEaW9kb3J1cyDvvIg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJEaW9kLiAxNC4zNCIgdmFsaWQ9InllcyI+RGlvZC4gMTQuMzQ8L2JpYmw+77yJCgkJCQkJCWRlc2NyaWJlcyBhIHJldm9sdXRpb24gdGhlcmUgaW4gPGRhdGUgYXV0aG5hbWU9Ii00MDEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDEiPjQwMTwvZGF0ZT4gQi5DLiwgd2hlbgoJCQkJCQlmaXZlIGh1bmRyZWQgb2YgdGhlIHJpY2ggd2VyZSBwdXQgdG8gZGVhdGggYW5kIG90aGVycyBmbGVkLCBidXQgYWZ0ZXIgYQoJCQkJCQliYXR0bGUgYSBjb21wcm9taXNlIHdhcyBhcnJhbmdlZC48L25vdGU+OyBmb3IgYSBzbWFsbCBiYXNlIGVsZW1lbnQgaXMKCQkJCQlvdmVybG9va2VkLCBidXQgd2hlbiBpdCBncm93cyBudW1lcm91cyBpdCBpcyBtb3JlIGluIGV2aWRlbmNlLjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkRpb2QuIDE0LjM0IiB2YWxpZD0ieWVzIj5EaW9kLiAxNC4zNDwvYmlibD7vvIkKCQkJCQkJZGVzY3JpYmVzIGEgcmV2b2x1dGlvbiB0aGVyZSBpbiA8ZGF0ZSBhdXRobmFtZT0iLTQwMSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwMSI+NDAxPC9kYXRlPiBCLkMuLCB3aGVuCgkJCQkJCWZpdmUgaHVuZHJlZCBvZiB0aGUgcmljaCB3ZXJlIHB1dCB0byBkZWF0aCBhbmQgb3RoZXJzIGZsZWQsIGJ1dCBhZnRlciBhCgkJCQkJCWJhdHRsZSBhIGNvbXByb21pc2Ugd2FzIGFycmFuZ2VkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz48L3RyYW5zbGF0aW9uPg=="
translation['6.1320a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkEKCQkJCQlkZW1vY3JhY3kgb2YgdGhpcyBraW5kIHdpbGwgYWxzbyBmaW5kIHVzZWZ1bCBzdWNoIGluc3RpdHV0aW9ucyBhcyB3ZXJlIGVtcGxveWVkCgkJCQkJYnkgQ2xlaXN0aGVuZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEyNzViIDM2IG4uPC9ub3RlPiBhdAoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gd2hlbiBoZSB3aXNoZWQgdG8KCQkJCQlpbmNyZWFzZSB0aGUgcG93ZXIgb2YgdGhlIGRlbW9jcmFjeSwgYW5kIGJ5IHRoZSBwYXJ0eSBzZXR0aW5nIHVwIHRoZSBkZW1vY3JhY3kKCQkJCQlhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMDYzOSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAwNjM5Ij5DeXJlbmU8L3BsYWNlTmFtZT47IGRpZmZlcmVudCB0cmliZXMgYW5kCgkJCQkJYnJvdGhlcmhvb2RzIG11c3QgYmUgY3JlYXRlZCBvdXRudW1iZXJpbmcgdGhlIG9sZCBvbmVzLCBhbmQgdGhlIGNlbGVicmF0aW9ucyBvZgoJCQkJCXByaXZhdGUgcmVsaWdpb3VzIHJpdGVzIG11c3QgYmUgZ3JvdXBlZCB0b2dldGhlciBpbnRvIGEgc21hbGwgbnVtYmVyIG9mIHB1YmxpYwoJCQkJCWNlbGVicmF0aW9ucywgYW5kIGV2ZXJ5IGRldmljZSBtdXN0IGJlIGVtcGxveWVkIHRvIG1ha2UgYWxsIHRoZSBwZW9wbGUgYXMgbXVjaAoJCQkJCWFzIHBvc3NpYmxlIGludGVybWluZ2xlZCB3aXRoIG9uZSBhbm90aGVyLCBhbmQgdG8gYnJlYWsgdXAgdGhlIHByZXZpb3VzbHkKCQkJCQlleGlzdGluZyBncm91cHMgb2YgYXNzb2NpYXRlcy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+TW9yZW92ZXIgdGhlIGNoYXJhY3RlcmlzdGljcyBvZiBhIHR5cmFubnkgYWxzbyBhcmUgYWxsIHRob3VnaHQgdG8gYmUKCQkJCQlkZW1vY3JhdGljLCBJIG1lYW4gZm9yIGluc3RhbmNlIGxpY2VuY2UgYW1vbmcgc2xhdmVzLCB3aGljaCBtYXkgcmVhbGx5IGJlCgkJCQkJYWR2YW50YWdlb3VzIGZvciB0aGUgcG9wdWxhciBwYXJ0eSB1cCB0byBhIHBvaW50LCBhbmQgYW1vbmcgd29tZW4gYW5kIGNoaWxkcmVuLAoJCQkJCWFuZCBpbmR1bGdlbmNlIHRvIGxpdmUgYXMgb25lIGxpa2VzOyBhIGNvbnN0aXR1dGlvbiBvZiB0aGlzIHNvcnQgd2lsbCBoYXZlIGEKCQkJCQlsYXJnZSBudW1iZXIgb2Ygc3VwcG9ydGVycywgYXMgZGlzb3JkZXJseSBsaXZpbmcgaXMgcGxlYXNhbnRlciB0byB0aGUgbWFzcyBvZgoJCQkJCW1hbmtpbmQgdGhhbiBzb2JlciBsaXZpbmcuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGl0IGlzIG5vdCB0aGUgZ3JlYXRlc3Qgb3Igb25seSB0YXNrIG9mIHRoZQoJCQkJCWxlZ2lzbGF0b3Igb3Igb2YgdGhvc2Ugd2hvIGRlc2lyZSB0byBjb25zdHJ1Y3QgYSBjb25zdGl0dXRpb24gb2YgdGhpcyBraW5kCgkJCQkJbWVyZWx5IHRvIHNldCBpdCB1cCwgYnV0IHJhdGhlciB0byBlbnN1cmUgaXRzIHByZXNlcnZhdGlvbjsgZm9yIGl0IGlzIG5vdAoJCQkJCWRpZmZpY3VsdCBmb3IgYW55IGZvcm0gb2YgY29uc3RpdHV0aW9uIHRvIGxhc3QgZm9yIG9uZSBvciB0d28gb3IgdGhyZWUgZGF5cy4gV2UKCQkJCQltdXN0IHRoZXJlZm9yZSBlbXBsb3kgdGhlIHJlc3VsdHMgb2J0YWluZWQgaW4gdGhlIGlucXVpcmllcyB0aGF0IHdlIGhhdmUgbWFkZQoJCQkJCQlhbHJlYWR5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkJvb2sgNS48L25vdGU+IGludG8gdGhlIGNhdXNlcyBvZgoJCQkJCXRoZSBwcmVzZXJ2YXRpb24gYW5kIHRoZSBkZXN0cnVjdGlvbiBvZiBjb25zdGl0dXRpb25zLCBhbmQgYXR0ZW1wdCBpbiB0aGUgbGlnaHQKCQkJCQlvZiB0aG9zZSByZXN1bHRzIHRvIGVzdGFibGlzaCB0aGUgc2FmZXR5IG9mIHRoZSBzdGF0ZSwgY2FyZWZ1bGx5IGF2b2lkaW5nIHRoZQoJCQkJCXRoaW5ncyB0aGF0IGNhdXNlIGRlc3RydWN0aW9uLCBhbmQgZW5hY3Rpbmcgc3VjaCBsYXdzIGJvdGggd3JpdHRlbiBhbmQgdW53cml0dGVuCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzIwYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['6.1320a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFzIHNoYWxsIGJlc3QgY29tcGFzcyB0aGUgcmVzdWx0cyBwcmVzZXJ2YXRpdmUgb2YKCQkJCQljb25zdGl0dXRpb25zLCBhbmQgbm90IHRoaW5rIHRoYXQgYSBtZWFzdXJlIGlzIGRlbW9jcmF0aWMgb3Igb2xpZ2FyY2hpYyB3aGljaAoJCQkJCXdpbGwgY2F1c2UgdGhlIHN0YXRlIHRvIGJlIGRlbW9jcmF0aWNhbGx5IG9yIG9saWdhcmNoaWNhbGx5IGdvdmVybmVkIGluIHRoZQoJCQkJCWdyZWF0ZXN0IGRlZ3JlZSwgYnV0IHdoaWNoIHdpbGwgY2F1c2UgaXQgdG8gYmUgc28gZ292ZXJuZWQgZm9yIHRoZSBsb25nZXN0IHRpbWUuCgkJCQkJCTwvdHJhbnNsYXRpb24+"
translation['6.1320a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZSBkZW1hZ29ndWVzIG9mIHRvZGF5IHRvCgkJCQkJY291cnQgdGhlIGZhdm9yIG9mIHRoZSBwZW9wbGVzIG9mdGVuIHVzZSB0aGUgbGF3LWNvdXJ0cyB0byBicmluZyBhYm91dAoJCQkJCWNvbmZpc2NhdGlvbnMgb2YgcHJvcGVydHkuIEhlbmNlIHRob3NlIHdobyBhcmUgY2FyaW5nIGZvciB0aGUgc2FmZXR5IG9mIHRoZQoJCQkJCWNvbnN0aXR1dGlvbiBtdXN0IGNvdW50ZXJhY3QgdGhpcyBieSBlbmFjdGluZyB0aGF0IG5vdGhpbmcgYmVsb25naW5nIHRvIHBlcnNvbnMKCQkJCQljb25kZW1uZWQgYXQgbGF3IHNoYWxsIGJlIGNvbmZpc2NhdGVkIGFuZCBsaWFibGUgdG8gYmUgY2FycmllZCB0byB0aGUgcHVibGljCgkJCQkJdHJlYXN1cnksIGJ1dCB0aGF0IHRoZWlyIHByb3BlcnR5IHNoYWxsIGJlIGNvbnNlY3JhdGVkIHRvIHRoZSBzZXJ2aWNlIG9mCgkJCQkJcmVsaWdpb247IGZvciBtYWxlLWZhY3RvcnMgd2lsbCBiZSBubyBsZXNzIG9uIHRoZWlyIGd1YXJkLCBhcyB0aGV5IHdpbGwgYmUKCQkJCQlwdW5pc2hlZCBqdXN0IHRoZSBzYW1lLCB3aGlsZSB0aGUgbW9iIHdpbGwgbGVzcyBvZnRlbiB2b3RlIGd1aWx0eSBhZ2FpbnN0IG1lbiBvbgoJCQkJCXRyaWFsIHdoZW4gaXQgaXMgbm90IGdvaW5nIHRvIGdldCBhbnl0aGluZyBvdXQgb2YgaXQuIEFsc28gdGhleSBtdXN0IGFsd2F5cyBtYWtlCgkJCQkJdGhlIHB1YmxpYyB0cmlhbHMgdGhhdCBvY2N1ciBhcyBmZXcgYXMgcG9zc2libGUsIGNoZWNraW5nIHRob3NlIHdobyBicmluZwoJCQkJCWluZGljdG1lbnRzIGF0IHJhbmRvbSBieSBiaWcgcGVuYWx0aWVzOyBmb3IgdGhleSBkbyBub3QgdXN1YWxseSBpbmRpY3QgbWVuIG9mCgkJCQkJdGhlIHBlb3BsZSBidXQgbm90YWJsZXMsIHdoZXJlYXMgZXZlbiB3aXRoIHRoaXMgZm9ybSBvZiBjb25zdGl0dXRpb24gaXQgaXMKCQkJCQlkZXNpcmFibGUgZm9yIGFsbCB0aGUgY2l0aXplbnMgaWYgcG9zc2libGUgdG8gYmUgZnJpZW5kbHkgdG8gdGhlIHN0YXRlLCBvcgoJCQkJCWZhaWxpbmcgdGhhdCwgYXQgYWxsIGV2ZW50cyBub3QgdG8gdGhpbmsgb2YgdGhlaXIgcnVsZXJzIGFzIGVuZW1pZXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGluYXNtdWNoIGFzIHRoZSB1bHRpbWF0ZSBmb3JtcyBvZgoJCQkJCWRlbW9jcmFjeSB0ZW5kIHRvIGhhdmUgbGFyZ2UgcG9wdWxhdGlvbnMgYW5kIGl0IGlzIGRpZmZpY3VsdCBmb3IgdGhlaXIgY2l0aXplbnMKCQkJCQl0byBzaXQgaW4gdGhlIGFzc2VtYmx5IHdpdGhvdXQgcGF5LCBhbmQgdGhpcyBpbiBhIHN0YXRlIHdoZXJlIHRoZXJlIGRvIG5vdAoJCQkJCWhhcHBlbiB0byBiZSByZXZlbnVlcyBpcyBpbmltaWNhbCB0byB0aGUgbm90YWJsZXMgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPu+8iGZvciBwYXkgaGFzIHRvIGJlIG9idGFpbmVkIGZyb20gYSBwcm9wZXJ0eS10YXggYW5kCgkJCQkJY29uZmlzY2F0aW9uLCBhbmQgZnJvbSBjb3JydXB0aW9uIG9mIHRoZSBsYXctY291cnRzLCB3aGljaCBoYXMgY2F1c2VkIHRoZQoJCQkJCW92ZXJ0aHJvdyBvZiBtYW55IGRlbW9jcmFjaWVzIGJlZm9yZSBub3fvvIks4oCUd2hlcmUgdGhlcmVmb3JlCgkJCQkJdGhlcmUgaGFwcGVuIHRvIGJlIG5vIHJldmVudWVzLCBmZXcgbWVldGluZ3Mgb2YgdGhlIGFzc2VtYmx5IG11c3QgYmUgaGVsZCwgYW5kCgkJCQkJdGhlIGxhdy1jb3VydHMgbXVzdCBjb25zaXN0IG9mIG1hbnkgbWVtYmVycyBidXQgb25seSBzaXQgYSBmZXcgZGF5cwoJCQkJCe+8iGZvciB0aGlzIG5vdCBvbmx5IGNvbnRyaWJ1dGVzIHRvIHRoZSByaWNoIG5vdCBiZWluZyBpbiBmZWFyIG9mIHRoZQoJCQkJCWNvc3Qgb2YgdGhlIHN5c3RlbSBldmVuIGlmIHRoZSB3ZWxsLW9mZiBkbyBub3QgdGFrZSB0aGUgcGF5IGFuZCBvbmx5IHRoZSBwb29yCgkJCQkJZG8sIGJ1dCBhbHNvIGxlYWRzIHRvIGZhciBncmVhdGVyIGVmZmljaWVuY3kgaW4gdGhlIHRyaWFsIG9mIGxhdy1zdWl0cywgZm9yIHRoZQoJCQkJCXdlbGwtdG8tZG8sIHRob3VnaCBub3Qgd2lzaGluZyB0byBiZSBhd2F5IGZyb20gdGhlaXIgcHJpdmF0ZSBhZmZhaXJzIGZvciBtYW55CgkJCQkJZGF5cywgYXJlIHdpbGxpbmcgdG8gbGVhdmUgdGhlbSBmb3IgYSBzaG9ydCB0aW1l77yJLCA8L3RyYW5zbGF0aW9uPg=="
translation['6.1320b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy40IiB1bml0PSJMb2ViIGNoYXAiIC8+d2hpbGUgd2hlcmUgdGhlcmUgYXJlIHJldmVudWVzIG1lbiBtdXN0IG5vdCBkbyB3aGF0CgkJCQkJdGhlIHBvcHVsYXIgbGVhZGVycyBkbyBub3cg77yIZm9yIHRoZXkgdXNlIHRoZSBzdXJwbHVzIGZvciBkb2xlcywgYW5kCgkJCQkJcGVvcGxlIG5vIHNvb25lciBnZXQgdGhlbSB0aGFuIHRoZXkgd2FudCB0aGUgc2FtZSBkb2xlcyBhZ2FpbiwgYmVjYXVzZSB0aGlzIHdheQoJCQkJCW9mIGhlbHBpbmcgdGhlIHBvb3IgaXMgdGhlIGxlZ2VuZGFyeSBqYXIgd2l0aCBhIGhvbGUgaW4gaXQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIGZpZnR5IGRhdWdodGVycyBvZiBEYW5hdXMgd2VyZSBtYXJyaWVkIHRvIHRoZWlyIGNvdXNpbnMsCgkJCQkJCWFuZCBhbGwgYnV0IG9uZSBtdXJkZXJlZCB0aGVpciBodXNiYW5kcyBvbiB0aGUgYnJpZGFsIG5pZ2h0LCBhbmQgd2VyZQoJCQkJCQlwdW5pc2hlZCBpbiBIYWRlcyBieSBoYXZpbmcgdG8gcG91ciB3YXRlciBpbnRvIHRoZSBqYXIKCQkJCQlkZXNjcmliZWQuPC9ub3RlPu+8iSwgYnV0IHRoZSB0cnVseSBkZW1vY3JhdGljIHN0YXRlc21hbiBtdXN0IHN0dWR5IGhvdwoJCQkJCXRoZSBtdWx0aXR1ZGUgbWF5IGJlIHNhdmVkIGZyb20gZXh0cmVtZSBwb3ZlcnR5OyBmb3IgdGhpcyBpcyB3aGF0IGNhdXNlcwoJCQkJCWRlbW9jcmFjeSB0byBiZSBjb3JydXB0LiBNZWFzdXJlcyBtdXN0IHRoZXJlZm9yZSBiZSBjb250cml2ZWQgdGhhdCBtYXkgYnJpbmcKCQkJCQlhYm91dCBsYXN0aW5nIHByb3NwZXJpdHkuIEFuZCBzaW5jZSB0aGlzIGlzIGFkdmFudGFnZW91cyBhbHNvIGZvciB0aGUKCQkJCQl3ZWxsLXRvLWRvLCB0aGUgcHJvcGVyIGNvdXJzZSBpcyB0byBjb2xsZWN0IGFsbCB0aGUgcHJvY2VlZHMgb2YgdGhlIHJldmVudWVzCgkJCQkJaW50byBhIGZ1bmQgYW5kIGRpc3RyaWJ1dGUgdGhpcyBpbiBsdW1wIHN1bXMgdG8gdGhlIG5lZWR5LCBiZXN0IG9mIGFsbCwgaWYgb25lCgkJCQkJY2FuLCBpbiBzdW1zIGxhcmdlIGVub3VnaCBmb3IgYWNxdWlyaW5nIGEgc21hbGwgZXN0YXRlLCBvciwgZmFpbGluZyB0aGlzLCB0bwoJCQkJCXNlcnZlIGFzIGNhcGl0YWwgZm9yIHRyYWRlIG9yIGh1c2JhbmRyeSwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMjBiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['6.1320b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBpZiB0aGlzIGlzIG5vdCBwb3NzaWJsZSBmb3IKCQkJCQlhbGwsIGF0IGFsbCBldmVudHMgdG8gZGlzdHJpYnV0ZSB0aGUgbW9uZXkgYnkgdHJpYmVzIG9yIHNvbWUgb3RoZXIgZGl2aXNpb24gb2YKCQkJCQl0aGUgcG9wdWxhdGlvbiBpbiB0dXJuLCB3aGlsZSBpbiB0aGUgbWVhbnRpbWUgdGhlIHdlbGwtdG8tZG8gbXVzdCBjb250cmlidXRlIHBheQoJCQkJCWZvciBhdHRlbmRhbmNlIGF0IHRoZSBuZWNlc3NhcnkgYXNzZW1ibGllcywgYmVpbmcgdGhlbXNlbHZlcyBleGN1c2VkIGZyb20KCQkJCQl1c2VsZXNzIHB1YmxpYyBzZXJ2aWNlcy4gPC90cmFuc2xhdGlvbj4="
translation['6.1320b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnkKCQkJCQlmb2xsb3dpbmcgc29tZSBzdWNoIHBvbGljeSBhcyB0aGlzIHRoZSBDYXJ0aGFnaW5pYW5zIGhhdmUgd29uIHRoZSBmcmllbmRzaGlwIG9mCgkJCQkJdGhlIGNvbW1vbiBwZW9wbGU7IGZvciB0aGV5IGNvbnN0YW50bHkgc2VuZCBvdXQgc29tZSBvZiB0aGUgcGVvcGxlIHRvIHRoZQoJCQkJCXN1cnJvdW5kaW5nIHRlcnJpdG9yaWVzIGFuZCBzbyBtYWtlIHRoZW0gd2VsbC1vZmYuIEFuZCBpZiB0aGUgbm90YWJsZXMgYXJlIG1lbgoJCQkJCW9mIGdvb2QgZmVlbGluZyBhbmQgc2Vuc2UgdGhleSBtYXkgYWxzbyBkaXZpZGUgdGhlIG5lZWR5IGFtb25nIHRoZW0gaW4gZ3JvdXBzCgkJCQkJYW5kIHN1cHBseSB0aGVtIHdpdGggY2FwaXRhbCB0byBzdGFydCB0aGVtIGluIGJ1c2luZXNzZXMuIEl0IGlzIGFsc28gYSBnb29kIHBsYW4KCQkJCQl0byBpbWl0YXRlIHRoZSBwb2xpY3k8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Q2YuIDEyNjNhIDM1Ljwvbm90ZT4gb2YKCQkJCQl0aGUgVGFyZW50aW5lcy4gVGhleSBnZXQgdGhlIGdvb2R3aWxsIG9mIHRoZSBtdWx0aXR1ZGUgYnkgbWFraW5nIHByb3BlcnR5CgkJCQkJY29tbXVuYWwgZm9yIHRoZSBwdXJwb3NlIG9mIHVzZSBieSB0aGUgbmVlZHk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBzZWVtcyB0byBtZWFuIHRoYXQgdGhlIGxhbmQgd2FzIGluIHByaXZhdGUgb3duZXJzaGlwLCBidXQgdGhhdCB0aGVyZQoJCQkJCQl3YXMgc29tZSBzeXN0ZW0gb2YgcG9vci1yZWxpZWYsIHRvIHByb3ZpZGUgZm9yIHRoZSBkZXN0aXR1dGUgb3V0IG9mIHRoZQoJCQkJCQlwcm9kdWNlLjwvbm90ZT47IGFsc28gdGhleSBoYXZlIGRpdmlkZWQgdGhlIHdob2xlIG51bWJlciBvZiB0aGVpcgoJCQkJCW1hZ2lzdHJhY2llcyBpbnRvIHR3byBjbGFzc2VzLCBvbmUgZWxlY3RlZCBieSB2b3RlIGFuZCB0aGUgb3RoZXIgZmlsbGVkIGJ5CgkJCQkJbG90LOKAlHRoZSBsYXR0ZXIgdG8gZW5zdXJlIHRoYXQgdGhlIHBlb3BsZSBtYXkgaGF2ZSBhIHNoYXJlIGluIHRoZW0sCgkJCQkJYW5kIHRoZSBmb3JtZXIgdG8gaW1wcm92ZSB0aGUgY29uZHVjdCBvZiBwdWJsaWMgYWZmYWlycy4gQW5kIGl0IGlzIGFsc28gcG9zc2libGUKCQkJCQl0byBlZmZlY3QgdGhpcyBieSBkaXZpZGluZyB0aGUgaG9sZGVycyBvZiB0aGUgc2FtZSBtYWdpc3RyYWN5IGludG8gdHdvIGdyb3VwcywKCQkJCQlvbmUgYXBwb2ludGVkIGJ5IGxvdCBhbmQgdGhlIG90aGVyIGJ5IHZvdGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlCgkJCQkJaGF2ZSB0aGVuIHNhaWQgaG93IGRlbW9jcmFjaWVzIHNob3VsZCBiZSBvcmdhbml6ZWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgaXMgYWxzbyBmYWlybHkgY2xlYXIKCQkJCQlmcm9tIHRoZXNlIGNvbnNpZGVyYXRpb25zIGhvdyBvbGlnYXJjaGllcyBvdWdodCB0byBiZSBvcmdhbml6ZWQuIFdlIG11c3QgaW5mZXIKCQkJCQl0aGVtIGZyb20gdGhlaXIgb3Bwb3NpdGVzLCByZWFzb25pbmcgb3V0IGVhY2ggZm9ybSBvZiBvbGlnYXJjaHk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+d2l0aCByZWZlcmVuY2UgdG8gdGhlIGZvcm0gb2YgZGVtb2NyYWN5IG9wcG9zaXRlIHRvCgkJCQkJaXQsIHN0YXJ0aW5nIHdpdGggdGhlIG1vc3Qgd2VsbC1ibGVuZGVkIGFuZCBmaXJzdCBmb3JtIG9mIG9saWdhcmNoeTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JbiBjb250cmFzdCB3aXRoIHRoZSBmaXJzdCBhbmQgYmVzdCBmb3JtIG9mCgkJCQkJCWRlbW9jcmFjeSwgMiBpbml0Ljwvbm90ZT7igJRhbmQgdGhpcyBpcyB0aGUgb25lIG5lYXIgdG8gd2hhdCBpcwoJCQkJCWNhbGxlZCBhIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnQsIGFuZCBmb3IgaXQgdGhlIHByb3BlcnR5LXF1YWxpZmljYXRpb25zIG11c3QKCQkJCQliZSBkaXZpZGVkIGludG8gb25lIGdyb3VwIG9mIHNtYWxsZXIgcHJvcGVydGllcyBhbmQgYW5vdGhlciBvZiBsYXJnZXIgb25lcywKCQkJCQlzbWFsbGVyIHByb3BlcnRpZXMgcXVhbGlmeWluZyB0aGVpciBvd25lcnMgZm9yIHRoZSBpbmRpc3BlbnNhYmxlIG9mZmljZXMgYW5kCgkJCQkJbGFyZ2VyIG9uZXMgZm9yIHRoZSBtb3JlIGltcG9ydGFudDsgYW5kIGEgcGVyc29uIG93bmluZyB0aGUgcXVhbGlmeWluZyBwcm9wZXJ0eQoJCQkJCW11c3QgYmUgYWxsb3dlZCB0byB0YWtlIGEgc2hhcmUgaW4gdGhlIGdvdmVybm1lbnQs4oCUaW50cm9kdWNpbmcgYnkgdGhlCgkJCQkJYXNzZXNzbWVudCBhIGxhcmdlIGVub3VnaCBudW1iZXIgb2YgdGhlIGNvbW1vbiBwZW9wbGUgdG8gc2VjdXJlIHRoYXQgd2l0aCB0aGVtCgkJCQkJdGhlIGdvdmVybmluZyBjbGFzcyB3aWxsIGhhdmUgYSBtYWpvcml0eSBvdmVyIHRob3NlIGV4Y2x1ZGVkOyBhbmQgcGVyc29ucyB0bwoJCQkJCXNoYXJlIGluIHRoZSBnb3Zlcm5tZW50IG11c3QgY29uc3RhbnRseSBiZSBicm91Z2h0IGluIGZyb20gdGhlIGJldHRlciBjbGFzcyBvZgoJCQkJCXRoZSBjb21tb24gcGVvcGxlLiA8L3RyYW5zbGF0aW9uPg=="
translation['6.1321a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZSBuZXh0IGZvcm0KCQkJCQlvZiBvbGlnYXJjaHkgYWxzbyBtdXN0IGJlIGNvbnN0cnVjdGVkIGluIGEgc2ltaWxhciB3YXkgd2l0aCBhIHNsaWdodCB0aWdodGVuaW5nCgkJCQkJdXAgb2YgdGhlIHF1YWxpZmljYXRpb24uIEJ1dCB0aGUgZm9ybSBvZiBvbGlnYXJjaHkgdGhhdCBzdGFuZHMgb3Bwb3NpdGUgdG8gdGhlCgkJCQkJbGFzdCBmb3JtIG9mIGRlbW9jcmFjeSwgdGhlIG1vc3QgYXV0b2NyYXRpYyBhbmQgdHlyYW5uaWNhbCBvZiB0aGUgb2xpZ2FyY2hpZXMsCgkJCQkJaW4gYXMgZmFyIGFzIGl0IGlzIHRoZSB3b3JzdCByZXF1aXJlcyBhIGNvcnJlc3BvbmRpbmdseSBncmVhdCBhbW91bnQgb2YKCQkJCQlzYWZlLWd1YXJkaW5nLiBGb3IganVzdCBhcyBodW1hbiBib2RpZXMgaW4gYSBnb29kIHN0YXRlIG9mIGhlYWx0aCBhbmQgc2hpcHMgd2VsbAoJCQkJCWVxdWlwcGVkIHdpdGggdGhlaXIgY3Jld3MgZm9yIGEgdm95YWdlIGFkbWl0IG9mIG1vcmUgbWlzdGFrZXMgd2l0aG91dCBiZWluZwoJCQkJCWRlc3Ryb3llZCB0aGVyZWJ5LCBidXQgYm9kaWVzIG9mIGEgbW9yYmlkIGhhYml0IGFuZCB2ZXNzZWxzIHN0cmFpbmVkIGluIHRoZWlyCgkJCQkJdGltYmVycyBhbmQgbWFubmVkIHdpdGggYmFkIGNyZXdzIGNhbm5vdCBlbmR1cmUgZXZlbiB0aGUgc21hbGxlc3QgbWlzdGFrZXMsIHNvCgkJCQkJYWxzbyB0aGUgd29yc3QgY29uc3RpdHV0aW9ucyBuZWVkIHRoZSBtb3N0IHNhZmUtZ3VhcmRpbmcuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzIxYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['6.1321a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['6.1321a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+RGVtb2NyYWNpZXMgdGhlcmVmb3JlIGdlbmVyYWxseSBzcGVha2luZyBhcmUga2VwdAoJCQkJCXNhZmUgYnkgdGhlIGxhcmdlbmVzcyBvZiB0aGUgY2l0aXplbi1ib2R5LCBmb3IgdGhpcyBpcyB0aGUgYW50aXRoZXNpcyBvZiBqdXN0aWNlCgkJCQkJYWNjb3JkaW5nIHRvIGRlc2VydDsgYnV0IG9saWdhcmNoeSBvbiB0aGUgY29udHJhcnkgbXVzdCBtYW5pZmVzdGx5IG9idGFpbiBpdHMKCQkJCQlzZWN1cml0eSBieSBtZWFucyBvZiBnb29kIG9yZ2FuaXphdGlvbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHNpbmNlCgkJCQkJdGhlIG1hc3Mgb2YgdGhlIHBvcHVsYXRpb24gZmFsbHMgcHJpbmNpcGFsbHkgaW50byBmb3VyIGRpdmlzaW9ucywgdGhlIGZhcm1pbmcKCQkJCQljbGFzcywgYXJ0aXNhbnMsIHJldGFpbCB0cmFkZXJzIGFuZCBoaXJlZCBsYWJvcmVycywgYW5kIG1pbGl0YXJ5IGZvcmNlcyBhcmUgb2YKCQkJCQlmb3VyIGNsYXNzZXMsIGNhdmFscnksIGhlYXZ5IGluZmFudHJ5LCBsaWdodCBpbmZhbnRyeSBhbmQgbWFyaW5lcywgaW4gcGxhY2VzCgkJCQkJd2hlcmUgdGhlIGNvdW50cnkgaGFwcGVucyB0byBiZSBzdWl0YWJsZSBmb3IgaG9yc2VtYW5zaGlwLCB0aGVyZSBuYXR1cmFsCgkJCQkJY29uZGl0aW9ucyBmYXZvciB0aGUgZXN0YWJsaXNobWVudCBvZiBhbiBvbGlnYXJjaHkgdGhhdCB3aWxsIGJlIHBvd2VyZnVsCgkJCQkJ77yIZm9yIHRoZSBzZWN1cml0eSBvZiB0aGUgaW5oYWJpdGFudHMgZGVwZW5kcyBvbiB0aGUgc3RyZW5ndGggb2YgdGhpcwoJCQkJCWVsZW1lbnQsIGFuZCBrZWVwaW5nIHN0dWRzIG9mIGhvcnNlcyBpcyB0aGUgcHVyc3VpdCBvZiB0aG9zZSB3aG8gb3duIGV4dGVuc2l2ZQoJCQkJCWVzdGF0ZXPvvIk7IGFuZCB3aGVyZSB0aGUgZ3JvdW5kIGlzIHN1aXRhYmxlIGZvciBoZWF2eSBpbmZhbnRyeSwKCQkJCQljb25kaXRpb25zIGZhdm9yIHRoZSBuZXh0IGZvcm0gb2Ygb2xpZ2FyY2h5IO+8iGZvciBoZWF2eSBpbmZhbnRyeSBpcyBhCgkJCQkJc2VydmljZSBmb3IgdGhlIHdlbGwtdG8tZG8gcmF0aGVyIHRoYW4gdGhlIHBvb3LvvIk7IGJ1dCBsaWdodCBpbmZhbnRyeQoJCQkJCWFuZCBuYXZhbCBmb3JjZXMgYXJlIGFuIGVudGlyZWx5IGRlbW9jcmF0aWMgZWxlbWVudC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BcyB0aGluZ3MgYXJlIHRoZXJlZm9yZSwgd2hlcmUgdGhlcmUgaXMgYSBsYXJnZSBtdWx0aXR1ZGUKCQkJCQlvZiB0aGlzIGNsYXNzLCB3aGVuIHBhcnR5IHN0cmlmZSBvY2N1cnMgdGhlIG9saWdhcmNocyBvZnRlbiBnZXQgdGhlIHdvcnN0IG9mIHRoZQoJCQkJCXN0cnVnZ2xlOyBhbmQgYSByZW1lZHkgZm9yIHRoaXMgbXVzdCBiZSBhZG9wdGVkIGZyb20gbWlsaXRhcnkgY29tbWFuZGVycywgd2hvCgkJCQkJY29tYmluZSB3aXRoIHRoZWlyIGNhdmFscnkgYW5kIGhlYXZ5IGluZmFudHJ5IGZvcmNlcyBhIGNvbnRpbmdlbnQgb2YgbGlnaHQKCQkJCQlpbmZhbnRyeS4gQW5kIHRoaXMgaXMgdGhlIHdheTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGJ5CgkJCQkJCXN1cGVyaW9yIG1vYmlsaXR5Ljwvbm90ZT4gaW4gd2hpY2ggdGhlIGNvbW1vbiBwZW9wbGUgZ2V0IHRoZSBiZXR0ZXIgb3ZlciB0aGUKCQkJCQl3ZWxsLXRvLWRvIGluIG91dGJyZWFrcyBvZiBwYXJ0eSBzdHJpZmU6PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmJlaW5nIHVuZW5jdW1iZXJlZCB0aGV5IGZpZ2h0IGVhc2lseSBhZ2FpbnN0IGNhdmFscnkgYW5kIGhlYXZ5CgkJCQkJaW5mYW50cnkuIDwvdHJhbnNsYXRpb24+"
translation['6.1321b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC41IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmVmb3JlIHRvIGVzdGFibGlzaAoJCQkJCXRoaXMgZm9yY2Ugb3V0IG9mIHRoaXMgY2xhc3MgaXMgdG8gZXN0YWJsaXNoIGl0IGFnYWluc3QgaXRzZWxmLCBidXQgdGhlIHJpZ2h0CgkJCQkJcGxhbiBpcyBmb3IgdGhlIG1lbiBvZiBtaWxpdGFyeSBhZ2UgdG8gYmUgc2VwYXJhdGVkIGludG8gYSBkaXZpc2lvbiBvZiBvbGRlciBhbmQKCQkJCQlvbmUgb2YgeW91bmdlciBtZW4sIGFuZCB0byBoYXZlIHRoZWlyIG93biBzb25zIHdoaWxlIHN0aWxsIHlvdW5nIHRyYWluZWQgaW4gdGhlCgkJCQkJZXhlcmNpc2VzIG9mIGxpZ2h0IGFuZCB1bmFybWVkIHRyb29wcywgYW5kIGZvciB5b3V0aHMgc2VsZWN0ZWQgZnJvbSBhbW9uZyB0aGUKCQkJCQlib3lzIHRvIGJlIHRoZW1zZWx2ZXMgdHJhaW5lZCBpbiBhY3RpdmUgb3BlcmF0aW9ucy4gQW5kIHRoZSBiZXN0b3dhbCBvZiBhIHNoYXJlCgkJCQkJaW4gdGhlIGdvdmVybm1lbnQgdXBvbiB0aGUgbXVsdGl0dWRlIHNob3VsZCBlaXRoZXIgZ28gb24gdGhlIGxpbmVzIHN0YXRlZAoJCQkJCQliZWZvcmUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjQuMSwgMTMyMGIgMjUgZmYuPC9ub3RlPiBhbmQgYmUKCQkJCQltYWRlIHRvIHRob3NlIHdobyBhY3F1aXJlIHRoZSBwcm9wZXJ0eS1xdWFsaWZpY2F0aW9uLCBvciBhcyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZWJlcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGhlYmVzIj5UaGViZXM8L3BsYWNlTmFtZT4sIHRvIHBlb3BsZSBhZnRlciB0aGV5IGhhdmUgYWJzdGFpbmVkCgkJCQkJZm9yIGEgdGltZSBmcm9tIG1lY2hhbmljIGluZHVzdHJpZXMsIG9yIGFzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA4NzgxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDg3ODEiPk1hcnNlaWxsZXM8L3BsYWNlTmFtZT4sIGJ5IG1ha2luZyBhIHNlbGVjdGlvbiBhbW9uZyBtZW1iZXJzIG9mIHRoZQoJCQkJCWdvdmVybmluZyBjbGFzc2VzIGFuZCB0aG9zZSBvdXRzaWRlIGl0IG9mIHBlcnNvbnMgd2hvIGRlc2VydmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SWYgdGhlIHRleHQgaXMgY29ycmVjdGVkIGl0IHNlZW1zIHRvIG1lYW4gdGhhdAoJCQkJCQl0aGUgbGlzdCB3YXMgcmV2aXNlZCBmcm9tIHRpbWUgdG8gdGltZSBhbmQgc29tZSBvbGQgbmFtZXMgdGFrZW4gb2ZmIGFuZCBuZXcKCQkJCQkJb25lcyBwdXQgb24uPC9ub3RlPiBpbmNsdXNpb24uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC42IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGZ1cnRoZXJtb3JlIHRoZSBtb3N0IHN1cHJlbWUgb2ZmaWNlcyBhbHNvLCB3aGljaCBtdXN0IGJlIHJldGFpbmVkIGJ5IHRob3NlCgkJCQkJd2l0aGluIHRoZSBjb25zdGl0dXRpb24sIG11c3QgaGF2ZSBleHBlbnNpdmUgZHV0aWVzIGF0dGFjaGVkIHRvIHRoZW0sIGluIG9yZGVyCgkJCQkJdGhhdCB0aGUgY29tbW9uIHBlb3BsZSBtYXkgYmUgd2lsbGluZyB0byBiZSBleGNsdWRlZCBmcm9tIHRoZW0sIGFuZCBtYXkgZmVlbCBubwoJCQkJCXJlc2VudG1lbnQgYWdhaW5zdCB0aGUgcnVsaW5nIGNsYXNzLCBiZWNhdXNlIGl0IHBheXMgYSBoaWdoIHByaWNlIGZvciBvZmZpY2UuCgkJCQkJQW5kIGl0IGZpdHMgaW4gd2l0aCB0aGlzIHRoYXQgdGhleSBzaG91bGQgb2ZmZXIgc3BsZW5kaWQgc2FjcmlmaWNlcyBhbmQgYnVpbGQgdXAKCQkJCQlzb21lIHB1YmxpYyBtb251bWVudCBvbiBlbnRlcmluZyB1cG9uIG9mZmljZSwgc28gdGhhdCB0aGUgY29tbW9uIHBlb3BsZSBzaGFyaW5nCgkJCQkJaW4gdGhlIGZlc3Rpdml0aWVzIGFuZCBzZWVpbmcgdGhlIGNpdHkgZGVjb3JhdGVkIGJvdGggd2l0aCB2b3RpdmUgb2ZmZXJpbmdzIGFuZAoJCQkJCXdpdGggYnVpbGRpbmcgbWF5IGJlIGdsYWQgdG8gc2VlIHRoZSBjb25zdGl0dXRpb24gZW5kdXJpbmc7IGFuZCBhbiBhZGRpdGlvbmFsCgkJCQkJcmVzdWx0IHdpbGwgYmUgdGhhdCB0aGUgbm90YWJsZXMgd2lsbCBoYXZlIG1lbW9yaWFscyBvZiB0aGVpciBvdXRsYXkuIEJ1dCBhdAoJCQkJCXByZXNlbnQgdGhlIG1lbWJlcnMgb2Ygb2xpZ2FyY2hpZXMgZG8gbm90IGFkb3B0IHRoaXMgY291cnNlIGJ1dCB0aGUgb3Bwb3NpdGUsCgkJCQkJZm9yIHRoZXkgc2VlayB0aGUgZ2FpbnMgb2Ygb2ZmaWNlIGp1c3QgYXMgbXVjaCBhcyB0aGUgaG9ub3I7IGhlbmNlIHRoZXNlCgkJCQkJb2xpZ2FyY2hpZXMgYXJlIHdlbGwgZGVzY3JpYmVkIGFzIG1pbmlhdHVyZSBkZW1vY3JhY2llcy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHBocmFzZSBzdWdnZXN0cyB0aGF0IGluIGRlbW9jcmFjeSBwdWJsaWMgZHV0aWVzIGFyZQoJCQkJCQljaGVpZmx5IHVuZGVydGFrZW4gZm9yIHRoZWlyIGVtb2x1bWVudHMuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzIxYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['6.1321b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkxldCB0aGlzIHRoZW4gYmUgYSBkZXNjcmlwdGlvbiBvZiB0aGUgcHJvcGVyIHdheSB0byBvcmdhbml6ZSB0aGUgdmFyaW91cyBmb3JtcwoJCQkJCW9mIGRlbW9jcmFjeSBhbmQgb2Ygb2xpZ2FyY2h5LjwvdHJhbnNsYXRpb24+"
translation['6.1321b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFzIGEgY29uc2VxdWVuY2Ugb2Ygd2hhdCBoYXMgYmVlbiBzYWlkCgkJCQkJdGhlcmUgZm9sbG93IHNhdGlzZmFjdG9yeSBjb25jbHVzaW9ucyB0byB0aGUgcXVlc3Rpb25zIGNvbmNlcm5pbmcKCQkJCQltYWdpc3RyYWNpZXPigJRob3cgbWFueSBhbmQgd2hhdCB0aGV5IHNob3VsZCBiZSBhbmQgdG8gd2hvbSB0aGV5IHNob3VsZAoJCQkJCWJlbG9uZywgYXMgaGFzIGFsc28gYmVlbiBzYWlkIGJlZm9yZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Qm9vayA0CgkJCQkJCSwxMjk3YiAzNSBmZi4sIDEyOTlhIDMgZmYuPC9ub3RlPiBGb3Igd2l0aG91dCB0aGUgaW5kaXNwZW5zYWJsZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gNC4xLjwvbm90ZT4gbWFnaXN0cmFjaWVzIGEgc3RhdGUgY2Fubm90CgkJCQkJZXhpc3QsIHdoaWxlIHdpdGhvdXQgdGhvc2UgdGhhdCBjb250cmlidXRlIHRvIGdvb2Qgb3JkZXIgYW5kIHNlZW1saW5lc3MgaXQKCQkJCQljYW5ub3QgYmUgd2VsbCBnb3Zlcm5lZC4gQW5kIGZ1cnRoZXJtb3JlIHRoZSBtYWdpc3RyYWNpZXMgYXJlIGJvdW5kIHRvIGJlIGZld2VyCgkJCQkJaW4gdGhlIHNtYWxsIHN0YXRlcyBhbmQgbW9yZSBudW1lcm91cyBpbiB0aGUgbGFyZ2Ugb25lcywgYXMgaW4gZmFjdCBoYXMgYmVlbgoJCQkJCXNhaWQgYmVmb3JlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkJvb2sgNCwgMTI5OWIgMzAgZmYuPC9ub3RlPjsgaXQKCQkJCQltdXN0IHRoZXJlZm9yZSBiZSBrZXB0IGluIHZpZXcgd2hhdCBraW5kcyBvZiBtYWdpc3RyYWNpZXMgaXQgaXMgZGVzaXJhYmxlIHRvCgkJCQkJY29tYmluZSBhbmQgd2hhdCBraW5kcyB0byBrZWVwIHNlcGFyYXRlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkZpcnN0IGFtb25nIHRoZSBpbmRpc3BlbnNhYmxlIHNlcnZpY2VzIGlzIHRoZQoJCQkJCXN1cGVyaW50ZW5kZW5jZSBvZiB0aGUgbWFya2V0LCBvdmVyIHdoaWNoIHRoZXJlIG11c3QgYmUgYW4gb2ZmaWNpYWwgdG8KCQkJCQlzdXBlcmludGVuZCBjb250cmFjdHMgYW5kIGdvb2Qgb3JkZXI7IHNpbmNlIGl0IGlzIGEgbmVjZXNzaXR5IGZvciBhbG1vc3QgYWxsCgkJCQkJc3RhdGVzIHRoYXQgcGVvcGxlIHNoYWxsIHNlbGwgc29tZSB0aGluZ3MgYW5kIGJ1eSBvdGhlcnMgYWNjb3JkaW5nIHRvIG9uZQoJCQkJCWFub3RoZXIncyBuZWNlc3NhcnkgcmVxdWlyZW1lbnRzLCBhbmQgdGhpcyBpcyB0aGUgcmVhZGllc3QgbWVhbnMgb2Ygc2VjdXJpbmcKCQkJCQlzZWxmLXN1ZmZpY2llbmN5LCB3aGljaCBzZWVtcyB0byBiZSB0aGUgcmVhc29uIGZvciBtZW4ncyBoYXZpbmcgdW5pdGVkIGludG8gYQoJCQkJCXNpbmdsZSBzdGF0ZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Bbm90aGVyCgkJCQkJc3VwZXJpbnRlbmRlbmN5IGNvbm5lY3RlZCB2ZXJ5IGNsb3NlbHkgd2l0aCB0aGlzIG9uZSBpcyB0aGUgY3VyYXRvcnNoaXAgb2YKCQkJCQlwdWJsaWMgYW5kIHByaXZhdGUgcHJvcGVydGllcyBpbiB0aGUgY2l0eSw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dG8gc2VjdXJlIGdvb2Qgb3JkZXIgYW5kIHRoZSBwcmVzZXJ2YXRpb24gYW5kIHJlY3RpZmljYXRpb24gb2YKCQkJCQlmYWxsaW5nIGJ1aWxkaW5ncyBhbmQgcm9hZHMsIGFuZCBvZiB0aGUgYm91bmRzIGJldHdlZW4gZGlmZmVyZW50IHBlcnNvbnMnCgkJCQkJZXN0YXRlcywgc28gdGhhdCBkaXNwdXRlcyBtYXkgbm90IGFyaXNlIGFib3V0IHRoZW0sIGFuZCBhbGwgdGhlIG90aGVyIGR1dGllcyBvZgoJCQkJCXN1cGVyaW50ZW5kZW5jZSBzaW1pbGFyIHRvIHRoZXNlLiBBbiBvZmZpY2Ugb2YgdGhpcyBuYXR1cmUgaXMgaW4gbW9zdCBzdGF0ZXMKCQkJCQllbnRpdGxlZCB0aGF0IG9mIENpdHktY29udHJvbGxlciwgYnV0IGl0IGhhcyBzZXZlcmFsIGRlcGFydG1lbnRzLCBlYWNoIG9mIHdoaWNoCgkJCQkJaXMgZmlsbGVkIGJ5IHNlcGFyYXRlIG9mZmljaWFscyBpbiB0aGUgc3RhdGVzIHdpdGggbGFyZ2VyIHBvcHVsYXRpb25zLCBmb3IKCQkJCQlpbnN0YW5jZSBDdXJhdG9ycyBvZiBXYWxscywgU3VwZXJpbnRlbmRlbnRzIG9mIFdlbGxzLCBIYXJib3JzLWd1YXJkaWFucy4KCQkJCQkJPC90cmFuc2xhdGlvbj4="
translation['6.1322a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGFub3RoZXIgb2ZmaWNlIGFsc28gaXMKCQkJCQlpbmRpc3BlbnNhYmxlIGFuZCBjbG9zZWx5IGFraW4gdG8gdGhlc2UsIGZvciBpdCBjb250cm9scyB0aGUgc2FtZSBtYXR0ZXJzIGJ1dAoJCQkJCWRlYWxzIHdpdGggdGhlIGNvdW50cnkgYW5kIHRoZXJlIHJlZ2lvbnMgb3V0c2lkZSB0aGUgY2l0eTsgYW5kIHRoZXNlIG1hZ2lzdHJhdGVzCgkJCQkJYXJlIGNhbGxlZCBpbiBzb21lIHBsYWNlcyBMYW5kLWNvbnRyb2xsZXJzIGFuZCBpbiBvdGhlcnMgQ3VzdG9kaWFucyBvZiBGb3Jlc3RzLgoJCQkJCVRoZXNlIHRoZW4gYXJlIHRocmVlIGRlcGFydG1lbnRzIG9mIGNvbnRyb2wgb3ZlciB0aGVzZSBtYXR0ZXJzLCB3aGlsZSBhbm90aGVyCgkJCQkJb2ZmaWNlIGlzIHRoYXQgdG8gd2hpY2ggdGhlIHJldmVudWVzIG9mIHRoZSBwdWJsaWMgZnVuZHMgYXJlIHBhaWQgaW4sIHRoZQoJCQkJCW9mZmljaWFscyB3aG8gZ3VhcmQgdGhlbSBhbmQgYnkgd2hvbSB0aGV5IGFyZSBkaXZpZGVkIG91dCB0byB0aGUgc2V2ZXJhbAoJCQkJCWFkbWluaXN0cmF0aXZlIGRlcGFydG1lbnRzOyB0aGVzZSBtYWdpc3RyYXRlcyBhcmUgY2FsbGVkIFJlY2VpdmVycyBhbmQgU3Rld2FyZHMuCgkJCQkJQW5vdGhlciBtYWdpc3RyYWN5IGlzIHRoZSBvbmUgdGhhdCBoYXMgdG8gcmVjZWl2ZSBhIHdyaXR0ZW4gcmV0dXJuIG9mIHByaXZhdGUKCQkJCQljb250cmFjdHMgYW5kIG9mIHRoZSB2ZXJkaWN0cyBvZiB0aGUgbGF3LWNvdXJ0czsgYW5kIHdpdGggdGhlc2Ugc2FtZSBvZmZpY2lhbHMKCQkJCQl0aGUgcmVnaXN0cmF0aW9uIG9mIGxlZ2FsIHByb2NlZWRpbmdzIGFuZCB0aGVpciBpbnN0aXR1dGlvbiBoYXZlIGFsc28gdG8gdGFrZQoJCQkJCXBsYWNlLiBJbiBzb21lIHN0YXRlcyB0aGlzIG9mZmljZSBhbHNvIGlzIGRpdmlkZWQgaW50byBzZXZlcmFsLCBidXQgdGhlcmUgYXJlCgkJCQkJcGxhY2VzIHdoZXJlIG9uZSBtYWdpc3RyYWN5IGNvbnRyb2xzIGFsbCB0aGVzZSBtYXR0ZXJzOyBhbmQgdGhlc2Ugb2ZmaWNpYWxzIGFyZQoJCQkJCWNhbGxlZCBTYWNyZWQgUmVjb3JkZXJzLCBTdXBlcmludGVuZGVudHMsIFJlY29yZGVycywgYW5kIG90aGVyIG5hbWVzIGFraW4gdG8KCQkJCQl0aGVzZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgYWZ0ZXIgdGhlc2UgaXMgdGhlIG9mZmljZQoJCQkJCWNvbm5lY3RlZCB3aXRoIGl0IGJ1dCBwZXJoYXBzIHRoZSBtb3N0IGluZGlzcGVuc2FibGUgYW5kIG1vc3QgZGlmZmljdWx0IG9mIGFsbCwKCQkJCQl0aGUgb25lIGNvbmNlcm5lZCB3aXRoIHRoZSBleGVjdXRpb24gb2YganVkZ2VtZW50IHVwb24gcGVyc29ucyBjYXN0IGluIHN1aXRzIGFuZAoJCQkJCXRob3NlIHBvc3RlZCBhcyBkZWZhdWx0ZXJzIGFjY29yZGluZyB0byB0aGUgbGlzdHMsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzIyYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['6.1322a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB3aXRoIHRoZQoJCQkJCWN1c3RvZHkgb2YgcHJpc29uZXJzLiBUaGlzIGlzIGFuIGlya3NvbWUgb2ZmaWNlIGJlY2F1c2UgaXQgaW52b2x2ZXMgZ3JlYXQKCQkJCQl1bnBvcHVsYXJpdHksIHNvIHRoYXQgd2hlcmUgaXQgaXMgbm90IHBvc3NpYmxlIHRvIG1ha2UgYSBncmVhdCBkZWFsIG9mIHByb2ZpdAoJCQkJCW91dCBvZiBpdCBtZW4gd2lsbCBub3QgdW5kZXJ0YWtlIGl0LCBvciB3aGVuIHRoZXkgaGF2ZSB1bmRlcnRha2VuIGl0IGFyZQoJCQkJCXJlbHVjdGFudCB0byBjYXJyeSBvdXQgaXRzIGZ1bmN0aW9ucyBhY2NvcmRpbmcgdG8gdGhlIGxhd3M7IGJ1dCBpdCBpcyBuZWNlc3NhcnksCgkJCQkJYmVjYXVzZSB0aGVyZSBpcyBubyB1c2UgaW4gdHJpYWxzIGJlaW5nIGhlbGQgYWJvdXQgbWVuJ3MgcmlnaHRzIHdoZW4gdGhlCgkJCQkJdmVyZGljdHMgYXJlIG5vdCBwdXQgaW50byBleGVjdXRpb24sIHNvIHRoYXQgaWYgd2hlbiBubyBsZWdhbCB0cmlhbCBvZiBkaXNwdXRlcwoJCQkJCXRha2VzIHBsYWNlIHNvY2lhbCBpbnRlcmNvdXJzZSBpcyBpbXBvc3NpYmxlLCBzbyBhbHNvIGlzIGl0IHdoZW4ganVkZ2VtZW50cyBhcmUKCQkJCQlub3QgZXhlY3V0ZWQuIDwvdHJhbnNsYXRpb24+"
translation['6.1322a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS42IiB1bml0PSJMb2ViIGNoYXAiIC8+SGVuY2UgaXQgaXMgYmV0dGVyIGZvcgoJCQkJCXRoaXMgbWFnaXN0cmFjeSBub3QgdG8gYmUgYSBzaW5nbGUgb2ZmaWNlIGJ1dCB0byBjb25zaXN0IG9mIHNldmVyYWwgcGVyc29ucwoJCQkJCWRyYXduIGZyb20gZGlmZmVyZW50IGNvdXJ0cywgYW5kIGl0IGlzIGRlc2lyYWJsZSBzaW1pbGFybHkgdG8gdHJ5IHRvIGRpdmlkZSB1cAoJCQkJCXRoZSBmdW5jdGlvbnMgY29ubmVjdGVkIHdpdGggdGhlIHBvc3RpbmcgdXAgb2YgcGVvcGxlIHJlZ2lzdGVyZWQgYXMgcHVibGljCgkJCQkJZGVidG9ycywgYW5kIGZ1cnRoZXIgYWxzbyBpbiBzb21lIGNhc2VzIGZvciB0aGUgc2VudGVuY2VzIHRvIGJlIGV4ZWN1dGVkIGJ5CgkJCQkJbWFnaXN0cmF0ZXMsIGVzcGVjaWFsbHkgYnkgdGhlIG5ld2x5IGVsZWN0ZWQgb25lcyBwcmVmZXJhYmx5IGluIHN1aXRzIHRyaWVkIGJ5CgkJCQkJdGhlIG91dGdvaW5nIG9uZXMsIGFuZCBpbiB0aG9zZSB0cmllZCBieSBtZW4gYWN0dWFsbHkgaW4gb2ZmaWNlIGZvciB0aGUKCQkJCQltYWdpc3RyYXRlIGV4ZWN1dGluZyB0aGUgc2VudGVuY2UgdG8gYmUgZGlmZmVyZW50IGZyb20gdGhlIG9uZSB0aGF0IHBhc3NlZCBpdCwKCQkJCQlmb3IgaW5zdGFuY2UgdGhlIENpdHktY29udHJvbGxlcnMgdG8gZXhlY3V0ZSB0aGUganVkZ2VtZW50cyBwYXNzZWQgb24gZnJvbSB0aGUKCQkJCQlNYXJrZXQtY29udHJvbGxlcnMgYW5kIG90aGVyIG1hZ2lzdHJhdGVzIHRob3NlIHBhc3NlZCBvbiBieSB0aGUKCQkJCQlDaXR5LWNvbnRyb2xsZXJzLiBGb3IgdGhlIGxlc3Mgb2RpdW0gaW52b2x2ZWQgZm9yIHRob3NlIHdobyBleGVjdXRlIHRoZQoJCQkJCWp1ZGdlbWVudHMsIHRoZSBtb3JlIGFkZXF1YXRlbHkgdGhlIGp1ZGdlbWVudHMgd2lsbCBiZSBjYXJyaWVkIG91dDsgc28gZm9yIHRoZQoJCQkJCXNhbWUgbWFnaXN0cmF0ZXMgdG8gaGF2ZSBpbXBvc2VkIHRoZSBzZW50ZW5jZSBhbmQgdG8gZXhlY3V0ZSBpdCBpbnZvbHZlcyBhCgkJCQkJdHdvZm9sZCBvZGl1bSwgYW5kIGZvciB0aGUgc2FtZSBvbmVzIHRvIGV4ZWN1dGUgaXQgaW4gYWxsIGNhc2VzIG1ha2VzIHRoZW0gdGhlCgkJCQkJZW5lbWllcyBvZiBldmVyeWJvZHkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS43IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGluIG1hbnkKCQkJCQlwbGFjZXMgYWxzbyB0aGUgb2ZmaWNlIG9mIGtlZXBpbmcgY3VzdG9keSBvZiBwcmlzb25lcnMsIGZvciBleGFtcGxlIGF0CgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiB0aGUgb2ZmaWNlIG9mIHRoZQoJCQkJCW1hZ2lzdHJhdGVzIGtub3duIGFzIHRoZSBFbGV2ZW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBleGFtcGxlCgkJCQkJCWxvb2tzIGxpa2UgYSBtaXN0YWtlbiBub3RlIGludGVycG9sYXRlZCBpbiB0aGUgdGV4dC4gVGhlIEVsZXZlbiBoYWQgYm90aAoJCQkJCQlmdW5jdGlvbnMuPC9ub3RlPiw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+aXMgc2VwYXJhdGUKCQkJCQlmcm9tIHRoZSBtYWdpc3RyYWN5IHRoYXQgZXhlY3V0ZXMgc2VudGVuY2VzLiBJdCBpcyBiZXR0ZXIgdGhlcmVmb3JlIHRvIGtlZXAgdGhpcwoJCQkJCWFsc28gc2VwYXJhdGUsIGFuZCB0byBhdHRlbXB0IHRoZSBzYW1lIGRldmljZSB3aXRoIHJlZ2FyZCB0byB0aGlzIGFzIHdlbGwuIEZvcgoJCQkJCXRob3VnaCBpdCBpcyBubyBsZXNzIG5lY2Vzc2FyeSB0aGFuIHRoZSBvZmZpY2Ugb2Ygd2hpY2ggSSBzcG9rZSwgeWV0IGluIHByYWN0aWNlCgkJCQkJcmVzcGVjdGFibGUgcGVvcGxlIGF2b2lkIGl0IG1vc3Qgb2YgYWxsIG9mZmljZXMsIHdoaWxlIGl0IGlzIG5vdCBzYWZlIHRvIHB1dCBpdAoJCQkJCWludG8gdGhlIGhhbmRzIG9mIHRoZSBiYXNlLCBmb3IgdGhleSB0aGVtc2VsdmVzIG5lZWQgb3RoZXJzIHRvIGd1YXJkIHRoZW0KCQkJCQlpbnN0ZWFkIG9mIGJlaW5nIGFibGUgdG8ga2VlcCBndWFyZCBvdmVyIG90aGVycy4gSGVuY2UgdGhlcmUgbXVzdCBub3QgYmUgb25lCgkJCQkJbWFnaXN0cmFjeSBzcGVjaWFsbHkgYXNzaWduZWQgdG8gdGhlIGN1c3RvZHkgb2YgcHJpc29uZXJzIG5vciBtdXN0IHRoZSBzYW1lCgkJCQkJbWFnaXN0cmFjeSBwZXJmb3JtIHRoaXMgZHV0eSBjb250aW51b3VzbHksIGJ1dCBpdCBzaG91bGQgYmUgcGVyZm9ybWVkIGJ5IHRoZQoJCQkJCXlvdW5nLCBpbiBwbGFjZXMgd2hlcmUgdGhlcmUgaXMgYSByZWdpbWVudCBvZiBjYWRldHM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGFuZAoJCQkJCQllbHNld2hlcmUgeW91bmcgY2l0aXplbnMgZnJvbSBlaWdodGVlbiB0byB0d2VudHkgd2VyZSBlbnJvbGxlZCBpbiB0cmFpbmluZwoJCQkJCQljb3JwcyBmb3IgbWlsaXRhcnkgaW5zdHJ1Y3Rpb247IHRoZXNlIHNlcnZlZCBhcyBwb2xpY2UgYW5kIGhvbWUKCQkJCQkJdHJvb3BzLjwvbm90ZT4gb3IgZ3VhcmRzLCBhbmQgYnkgdGhlIG1hZ2lzdHJhdGVzLCBpbiBzdWNjZXNzaXZlCgkJCQkJCXNlY3Rpb25zLjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBhbmQKCQkJCQkJZWxzZXdoZXJlIHlvdW5nIGNpdGl6ZW5zIGZyb20gZWlnaHRlZW4gdG8gdHdlbnR5IHdlcmUgZW5yb2xsZWQgaW4gdHJhaW5pbmcKCQkJCQkJY29ycHMgZm9yIG1pbGl0YXJ5IGluc3RydWN0aW9uOyB0aGVzZSBzZXJ2ZWQgYXMgcG9saWNlIGFuZCBob21lCgkJCQkJCXRyb29wcy48L3RyYW5zbGF0aW9uPg=="
translation['6.1322b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS44IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIG1hZ2lzdHJhY2llcyB0aGVyZWZvcmUgbXVzdCBiZSBjb3VudGVkIGZpcnN0IGFzIHN1cHJlbWVseQoJCQkJCW5lY2Vzc2FyeSwgYW5kIG5leHQgdG8gdGhlbSBtdXN0IGJlIHB1dCB0aG9zZSB0aGF0IGFyZSBub3QgbGVzcyBuZWNlc3NhcnkgYnV0CgkJCQkJYXJlIHJhbmtlZCBvbiBhIGhpZ2hlciBncmFkZSBvZiBkaWduaXR5LCBiZWNhdXNlIHRoZXkgcmVxdWlyZSBtdWNoIGV4cGVyaWVuY2UKCQkJCQlhbmQgdHJ1c3R3b3J0aGluZXNzOyBpbiB0aGlzIGNsYXNzIHdvdWxkIGNvbWUgdGhlIG1hZ2lzdHJhY2llcyBjb25jZXJuZWQgd2l0aAoJCQkJCWd1YXJkaW5nIHRoZSBjaXR5IGFuZCB0aG9zZSBhc3NpZ25lZCB0byBtaWxpdGFyeSByZXF1aXJlbWVudHMuIEFuZCBib3RoIGluIHBlYWNlCgkJCQkJYW5kIGluIHdhciBpdCBpcyBlcXVhbGx5IG5lY2Vzc2FyeSBmb3IgdGhlcmUgdG8gYmUgbWFnaXN0cmF0ZXMgdG8gc3VwZXJpbnRlbmQKCQkJCQl0aGUgZ3VhcmRpbmcgb2YgZ2F0ZXMgYW5kIHdhbGxzIGFuZCB0aGUgaW5zcGVjdGlvbiBhbmQgZHJpbGwgb2YgdGhlIGNpdGl6ZW4KCQkJCQl0cm9vcHMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS45IiB1bml0PSJMb2ViIGNoYXAiIC8+SW4gc29tZSBwbGFjZXMgdGhlcmVmb3JlCgkJCQkJdGhlcmUgYXJlIG1vcmUgbWFnaXN0cmFjaWVzIGFzc2lnbmVkIHRvIGFsbCB0aGVzZSBkdXRpZXMsIGFuZCBpbiBvdGhlcnMKCQkJCQlmZXdlcuKAlGZvciBpbnN0YW5jZSBpbiB0aGUgc21hbGwgc3RhdGVzIHRoZXJlIGlzIG9uZSB0byBkZWFsIHdpdGggYWxsCgkJCQkJb2YgdGhlbS4gQW5kIHRoZSBvZmZpY2VycyBvZiB0aGlzIHNvcnQgYXJlIGVudGl0bGVkIEdlbmVyYWxzIG9yIFdhci1sb3Jkcy4KCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMjJiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['6.1322b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkFuZCBtb3Jlb3ZlciBpZiB0aGVyZSBhcmUgYWxzbyBjYXZhbHJ5IG9yIGxpZ2h0IGluZmFudHJ5IG9yCgkJCQkJYXJjaGVycyBvciBhIG5hdnksIHNvbWV0aW1lcyBhIG1hZ2lzdHJhY3kgaXMgYXBwb2ludGVkIHRvIGhhdmUgY2hhcmdlIG9mIGVhY2ggb2YKCQkJCQl0aGVzZSBhcm1zIGFsc28sIGFuZCB0aGV5IGNhcnJ5IHRoZSB0aXRsZXMgb2YgQWRtaXJhbCwgQ2F2YWxyeS1jb21tYW5kZXIgYW5kCgkJCQkJVGF4aWFyY2gsIGFuZCBhbHNvIHRoZSBkaXZpc2lvbmFsIGNvbW1pc3Npb25zIHN1Ym9yZGluYXRlIHRvIHRoZXNlIG9mIENhcHRhaW5zCgkJCQkJb2YgVHJpcmVtZXMsIENvbXBhbnktY29tbWFuZGVycyBhbmQgQ2FwdGFpbnMgb2YgVHJpYmVzLCBhbmQgYWxsIHRoZSBzdWJkaXZpc2lvbnMKCQkJCQlvZiB0aGVzZSBjb21tYW5kcy4gQnV0IHRoZSB3aG9sZSBvZiB0aGlzIHNvcnQgb2Ygb2ZmaWNlcnMgY29uc3RpdHV0ZWQgYSBzaW5nbGUKCQkJCQljbGFzcywgdGhhdCBvZiBtaWxpdGFyeSBjb21tYW5kLiA8L3RyYW5zbGF0aW9uPg=="
translation['6.1322b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoaXMgdGhlbiBpcyBob3cgdGhlIG1hdHRlciBzdGFuZHMgaW4gcmVnYXJkIHRvIHRoaXMgb2ZmaWNlOyBidXQgaW5hc211Y2ggYXMKCQkJCQlzb21lIG9mIHRoZSBtYWdpc3RyYWNpZXMsIGlmIG5vdCBhbGwsIGhhbmRsZSBsYXJnZSBzdW1zIG9mIHB1YmxpYyBtb25leSwgdGhlcmUKCQkJCQltdXN0IGJlIGFub3RoZXIgb2ZmaWNlIHRvIHJlY2VpdmUgYW4gYWNjb3VudCBhbmQgc3ViamVjdCBpdCB0byBhdWRpdCwgd2hpY2ggbXVzdAoJCQkJCWl0c2VsZiBoYW5kbGUgbm8gb3RoZXIgYnVzaW5lc3M7IGFuZCB0aGVzZSBvZmZpY2lhbHMgYXJlIGNhbGxlZCBBdWRpdG9ycyBieSBzb21lCgkJCQkJcGVvcGxlLCBBY2NvdW50YW50cyBieSBvdGhlcnMsIEV4YW1pbmVycyBieSBvdGhlcnMgYW5kIEFkdm9jYXRlcyBieSBvdGhlcnMuIEFuZAoJCQkJCWJ5IHRoZSBzaWRlIG9mIGFsbCB0aGVzZSBvZmZpY2VzIGlzIHRoZSBvbmUgdGhhdCBpcyBtb3N0IHN1cHJlbWUgb3ZlciBhbGwKCQkJCQltYXR0ZXJzLCBmb3Igb2Z0ZW4gdGhlIHNhbWUgbWFnaXN0cmFjeSBoYXMgdGhlIGV4ZWN1dGlvbiBvZiBidXNpbmVzcyB0aGF0CgkJCQkJY29udHJvbHMgaXRzIGludHJvZHVjdGlvbiwgb3IgcHJlc2lkZXMgb3ZlciB0aGUgZ2VuZXJhbCBhc3NlbWJseSBpbiBwbGFjZXMgd2hlcmUKCQkJCQl0aGUgcGVvcGxlIGFyZSBzdXByZW1lOyBmb3IgdGhlIG1hZ2lzdHJhY3kgdGhhdCBjb252ZW5lcyB0aGUgc292ZXJlaWduIGFzc2VtYmx5CgkJCQkJaXMgYm91bmQgdG8gYmUgdGhlIHNvdmVyZWlnbiBwb3dlciBpbiB0aGUgc3RhdGUuIEl0IGlzIHN0eWxlZCBpbiBzb21lIHBsYWNlcyB0aGUKCQkJCQlQcmVsaW1pbmFyeSBDb3VuY2lsIGJlY2F1c2UgaXQgY29uc2lkZXJzIGJ1c2luZXNzIGluIGFkdmFuY2UsIGJ1dCB3aGVyZSB0aGVyZSBpcwoJCQkJCWEgZGVtb2NyYWN5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiAxMzIzYSA5IGJlbG93LiBBcHBhcmVudGx5CgkJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM674b+GzrjhvbnPgiDhvJDPg8+Ezrk8L2ZvcmVpZ24+IHN0YW5kcyBmb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4Thvbggz4DOu+G/hs64zr/PgiDOuuG9u8+BzrnhvbnOvSDhvJDPg8+Ezrk8L2ZvcmVpZ24+LCBidXQgZWRpdG9ycyBxdW90ZSBubwoJCQkJCQlwYXJhbGxlbC48L25vdGU+IGl0IGlzIG1vcmUgdXN1YWxseSBjYWxsZWQgYSBDb3VuY2lsLiBUaGlzIG1vcmUgb3IgbGVzcwoJCQkJCWNvbXBsZXRlcyB0aGUgbnVtYmVyIG9mIHRoZSBvZmZpY2VzIG9mIGEgcG9saXRpY2FsIG5hdHVyZTsgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DOu+G/hs644b25z4Ig4byQz4PPhM65PC9mb3JlaWduPiBzdGFuZHMgZm9yIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+E4b24IM+Azrvhv4bOuM6/z4IgzrrhvbvPgc654b25zr0g4byQz4PPhM65PC9mb3JlaWduPiwgYnV0IGVkaXRvcnMgcXVvdGUgbm8KCQkJCQkJcGFyYWxsZWwuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IGFub3RoZXIga2luZCBvZiBzdXBlcmludGVuZGVuY2UgaXMgdGhhdAoJCQkJCWNvbmNlcm5lZCB3aXRoIGRpdmluZSB3b3JzaGlwOyBpbiB0aGlzIGNsYXNzIGFyZSBwcmllc3RzIGFuZCBzdXBlcmludGVuZGVudHMgb2YKCQkJCQkJbWF0dGVyczxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5jb25uZWN0ZWQgd2l0aCB0aGUKCQkJCQl0ZW1wbGVzLCB0aGUgcHJlc2VydmF0aW9uIG9mIGV4aXN0aW5nIGJ1aWxkaW5ncyBhbmQgdGhlIHJlc3RvcmF0aW9uIG9mIHRob3NlCgkJCQkJdGhhdCBhcmUgcnVpbm91cywgYW5kIHRoZSBvdGhlciBkdXRpZXMgcmVsYXRpbmcgdG8gdGhlIGdvZHMuIEluIHByYWN0aWNlIHRoaXMKCQkJCQlzdXBlcmludGVuZGVuY2UgaW4gc29tZSBwbGFjZXMgZm9ybXMgYSBzaW5nbGUgb2ZmaWNlLCBmb3IgaW5zdGFuY2UgaW4gdGhlIHNtYWxsCgkJCQkJY2l0aWVzLCBidXQgaW4gb3RoZXJzIGl0IGJlbG9uZ3MgdG8gYSBudW1iZXIgb2Ygb2ZmaWNpYWxzIHdobyBhcmUgbm90IG1lbWJlcnMgb2YKCQkJCQl0aGUgcHJpZXN0aG9vZCwgZm9yIGV4YW1wbGUgU2FjcmlmaWNpYWwgT2ZmaWNlcnMgYW5kIFRlbXBsZS1ndWFyZGlhbnMgYW5kCgkJCQkJU3Rld2FyZHMgb2YgU2FjcmVkIEZ1bmRzLiBBbmQgY29ubmVjdGVkIHdpdGggdGhpcyBpcyB0aGUgb2ZmaWNlIGRldm90ZWQgdG8gdGhlCgkJCQkJbWFuYWdlbWVudCBvZiBhbGwgdGhlIHB1YmxpYyBmZXN0aXZhbHMgd2hpY2ggdGhlIGxhdyBkb2VzIG5vdCBhc3NpZ24gdG8gdGhlCgkJCQkJcHJpZXN0cyBidXQgdGhlIG9mZmljaWFscyBpbiBjaGFyZ2Ugb2Ygd2hpY2ggZGVyaXZlIHRoZWlyIGhvbm9yIGZyb20gdGhlIGNvbW1vbgoJCQkJCXNhY3JpZmljaWFsIGhlYXJ0aCwgYW5kIHRoZXNlIG9mZmljaWFscyBhcmUgY2FsbGVkIGluIHNvbWUgcGxhY2VzIEFyY2hvbnMsIGluCgkJCQkJb3RoZXJzIEtpbmdzIGFuZCBpbiBvdGhlcnMgUHJlc2lkZW50cy4gPC90cmFuc2xhdGlvbj4="
translation['6.1323a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRvIHN1bSB1cCB0aGVyZWZvcmUsIHRoZSBuZWNlc3Nhcnkgb2ZmaWNlcyBvZgoJCQkJCXN1cGVyaW50ZW5kZW5jZSBkZWFsIHdpdGggdGhlIGZvbGxvd2luZyBtYXR0ZXJzIDogaW5zdGl0dXRpb25zIG9mIHJlbGlnaW9uLAoJCQkJCW1pbGl0YXJ5IGluc3RpdHV0aW9ucywgcmV2ZW51ZSBhbmQgZXhwZW5kaXR1cmUsIGNvbnRyb2wgb2YgdGhlIG1hcmtldCwgY2l0YWRlbCwKCQkJCQloYXJib3JzIGFuZCBjb3VudHJ5LCBhbHNvIHRoZSBhcnJhbmdlbWVudHMgb2YgdGhlIGxhdy1jb3VydHMsIHJlZ2lzdHJhdGlvbiBvZgoJCQkJCWNvbnRyYWN0cywgY29sbGVjdGlvbiBvZiBmaW5lcywgY3VzdG9keSBvZiBwcmlzb25lcnMsIHN1cGVydmlzaW9uIG9mIGFjY291bnRzCgkJCQkJYW5kIGluc3BlY3Rpb25zLCBhbmQgdGhlIGF1ZGl0aW5nIG9mIG9mZmljaWFscywgYW5kIGxhc3RseSB0aGUgb2ZmaWNlcyBjb25uZWN0ZWQKCQkJCQl3aXRoIHRoZSBib2R5IHRoYXQgZGVsaWJlcmF0ZXMgYWJvdXQgcHVibGljIGFmZmFpcnMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPk9uIHRoZSBvdGhlciBoYW5kLCBwZWN1bGlhciB0byB0aGUgc3RhdGVzIHRoYXQgaGF2ZSBtb3JlCgkJCQkJbGVpc3VyZSBhbmQgcHJvc3Blcml0eSwgYW5kIGFsc28gcGF5IGF0dGVudGlvbiB0byBwdWJsaWMgZGVjb3J1bSwgYXJlIHRoZQoJCQkJCW9mZmljZXMgb2YgU3VwZXJpbnRlbmRlbnQgb2YgV29tZW4sIEd1YXJkaWFuIG9mIHRoZSBMYXdzLCBTdXBlcmludGVuZGVudCBvZgoJCQkJCUNoaWxkcmVuLCBDb250cm9sbGVyIG9mIFBoeXNpY2FsIFRyYWluaW5nLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMyM2EiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1323a.14'] = "PHRyYW5zbGF0aW9uPjxkaXYxIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNyIgb3JnPSJ1bmlmb3JtIiBzYW1wbGU9ImNvbXBsZXRlIiB0eXBlPSJCb29rIj4KCQkJCTxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMjNhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxNCIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Cb29rIDQgaW4gc29tZSBlZGl0aW9ucy48L25vdGU+VGhlCgkJCQkJc3R1ZGVudCB3aG8gaXMgZ29pbmcgdG8gbWFrZSBhIHN1aXRhYmxlIGludmVzdGlnYXRpb24gb2YgdGhlIGJlc3QgZm9ybSBvZgoJCQkJCWNvbnN0aXR1dGlvbiBtdXN0IG5lY2Vzc2FyaWx5IGRlY2lkZSBmaXJzdCBvZiBhbGwgd2hhdCBpcyB0aGUgbW9zdCBkZXNpcmFibGUKCQkJCQltb2RlIG9mIGxpZmUuIEZvciB3aGlsZSB0aGlzIGlzIHVuY2VydGFpbiBpdCBpcyBhbHNvIGJvdW5kIHRvIGJlIHVuY2VydGFpbiB3aGF0CgkJCQkJaXMgdGhlIGJlc3QgY29uc3RpdHV0aW9uLCBzaW5jZSBpdCBpcyB0byBiZSBleHBlY3RlZCB0aGF0IHRoZSBwZW9wbGUgdGhhdCBoYXZlCgkJCQkJdGhlIGJlc3QgZm9ybSBvZiBnb3Zlcm5tZW50IGF2YWlsYWJsZSB1bmRlciB0aGVpciBnaXZlbiBjb25kaXRpb25zIHdpbGwgZmFyZSB0aGUKCQkJCQliZXN0LCBleGNlcHRpb25hbCBjaXJjdW1zdGFuY2VzIGFwYXJ0LiBIZW5jZSB3ZSBtdXN0IGZpcnN0PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hZ3JlZSB3aGF0IGxpZmUgaXMgbW9zdCBkZXNpcmFibGUgZm9yIGFsbW9zdCBhbGwKCQkJCQltZW4sIGFuZCBhZnRlciB0aGF0IHdoZXRoZXIgdGhlIHNhbWUgbGlmZSBpcyBtb3N0IGRlc2lyYWJsZSBib3RoIGZvciB0aGUKCQkJCQljb21tdW5pdHkgYW5kIGZvciB0aGUgaW5kaXZpZHVhbCwgb3IgYSBkaWZmZXJlbnQgb25lLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CZWxpZXZpbmcgdGhlcmVmb3JlIGluIHRoZSBhZGVxdWFjeSBvZiBtdWNoIG9mIHdoYXQgaXMKCQkJCQlzYWlkIGV2ZW4gaW4gZXh0cmFuZW91cyBkaXNjb3Vyc2VzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gMy42LgoJCQkJCQlJdCBpcyBkZWJhdGVkIHdoZXRoZXIgdGhlIHBocmFzZSByZWZlcnMgdG8gQXJpc3RvdGxlJ3Mgb3duIHBvcHVsYXIgd3JpdGluZ3MsCgkJCQkJCW9yIHRvIHRob3NlIG9mIG90aGVyIHBoaWxvc29waGVycywgb3IgdG8gZGlzY3Vzc2lvbnMgb2YgdGhlIHN1YmplY3QgaW4KCQkJCQkJb3JkaW5hcnkgaW50ZXJjb3Vyc2UuPC9ub3RlPiBvbiB0aGUgc3ViamVjdCBvZiB0aGUgYmVzdCBsaWZlLCBsZXQgdXMgbWFrZQoJCQkJCXVzZSBvZiB0aGVzZSBwcm9ub3VuY2VtZW50cyBub3cuIEZvciBhcyByZWdhcmRzIGF0IGFsbCBldmVudHMgb25lIGNsYXNzaWZpY2F0aW9uCgkJCQkJb2YgdGhpbmdzIGdvb2QsIHB1dHRpbmcgdGhlbSBpbiB0aHJlZSBncm91cHMsIGV4dGVybmFsIGdvb2RzLCBnb29kcyBvZiB0aGUgc291bAoJCQkJCWFuZCBnb29kcyBvZiB0aGUgYm9keSwgYXNzdXJlZGx5IG5vYm9keSB3b3VsZCBkZW55IHRoYXQgdGhlIGlkZWFsbHkgaGFwcHkgYXJlCgkJCQkJYm91bmQgdG8gcG9zc2VzcyBhbGwgdGhyZWUuIEZvciBub2JvZHkgd291bGQgY2FsbCBhIG1hbiBpZGVhbGx5IGhhcHB5IHRoYXQgaGFzCgkJCQkJbm90IGdvdCBhIHBhcnRpY2xlIG9mIGNvdXJhZ2Ugbm9yIG9mIHRlbXBlcmFuY2Ugbm9yIG9mIGp1c3RpY2Ugbm9yIG9mIHdpc2RvbSwKCQkJCQlidXQgaXMgYWZyYWlkIG9mIHRoZSBmbGllcyB0aGF0IGZsdXR0ZXIgYnkgaGltLCBjYW5ub3QgcmVmcmFpbiBmcm9tIGFueSBvZiB0aGUKCQkJCQltb3N0IG91dHJhZ2VvdXMgYWN0aW9ucyBpbiBvcmRlciB0byBncmF0aWZ5IGEgZGVzaXJlIHRvIGVhdCBvciB0byBkcmluaywgcnVpbnMKCQkJCQloaXMgZGVhcmVzdCBmcmllbmRzIGZvciB0aGUgc2FrZSBvZiBhIGZhcnRoaW5nLCBhbmQgc2ltaWxhcmx5IGluIG1hdHRlcnMgb2YgdGhlCgkJCQkJaW50ZWxsZWN0IGFsc28gaXMgYXMgc2Vuc2VsZXNzIGFuZCBtaXN0YWtlbiBhcyBhbnkgY2hpbGQgb3IgbHVuYXRpYy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGFsdGhvdWdoIHRoZXNlIGFyZSBwcm9wb3NpdGlvbnMgd2hpY2gKCQkJCQl3aGVuIHV0dGVyZWQgZXZlcnlib2R5IHdvdWxkIGFncmVlIHRvLCB5ZXQgbWVuIGRpZmZlciBhYm91dCBhbW91bnQgYW5kIGRlZ3JlZXMKCQkJCQlvZiB2YWx1ZS4gVGhleSB0aGluayBpdCBpcyBlbm91Z2ggdG8gcG9zc2VzcyBob3dldmVyIHNtYWxsIGEgcXVhbnRpdHkgb2YgdmlydHVlLAoJCQkJCWJ1dCBvZiB3ZWFsdGgsIHJpY2hlcywgcG93ZXIsIGdsb3J5IGFuZCBldmVyeXRoaW5nIG9mIHRoYXQga2luZCB0aGV5IHNlZWsgYQoJCQkJCWxhcmdlciBhbmQgbGFyZ2VyIGFtb3VudCB3aXRob3V0IGxpbWl0LiBXZSBvbiB0aGUgb3RoZXIgaGFuZCBzaGFsbCB0ZWxsIHRoZW0KCQkJCQl0aGF0IGl0IGlzIGVhc3kgdG8gYXJyaXZlIGF0IGNvbnZpY3Rpb24gb24gdGhlc2UgbWF0dGVycyBpbiB0aGUgbGlnaHQgb2YgdGhlCgkJCQkJYWN0dWFsIGZhY3RzLCB3aGVuIG9uZSBzZWVzIHRoYXQgbWVuIGRvIG5vdCBhY3F1aXJlIGFuZCBwcmVzZXJ2ZSB0aGUgdmlydHVlcyBieQoJCQkJCW1lYW5zIG9mIHRoZXNlIGV4dGVybmFsIGdvb2RzLCBidXQgZXh0ZXJuYWwgZ29vZHMgYnkgbWVhbnMgb2YgdGhlIHZpcnR1ZXMsCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTMyM2IiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGF0IHdoZXRoZXIgdGhlIGxpZmUgb2YgaGFwcGluZXNzIGNvbnNpc3RzIGZvciBtYW4gaW4KCQkJCQllbmpveW1lbnQgb3IgaW4gdmlydHVlIG9yIGluIGJvdGgsIGl0IGlzIGZvdW5kIGluIGxhcmdlciBtZWFzdXJlIHdpdGggdGhvc2Ugd2hvCgkJCQkJYXJlIG9mIHN1cnBhc3NpbmdseSBoaWdoIGN1bHRpdmF0aW9uIGluIGNoYXJhY3RlciBhbmQgaW50ZWxsZWN0IGJ1dCBvbmx5CgkJCQkJbW9kZXJhdGUgYXMgcmVnYXJkcyB0aGUgZXh0ZXJuYWwgYWNxdWlzaXRpb24gb2YgZ29vZHMsIHRoYW4gd2l0aCB0aG9zZSB3aG8gb3duCgkJCQkJbW9yZSB0aGFuIHRoZXkgY2FuIHVzZSBvZiB0aGUgbGF0dGVyIGJ1dCBhcmUgZGVmaWNpZW50IGluIHRoZSBmb3JtZXIuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPk5vdCBidXQgd2hhdCB0aGUgdHJ1dGggaXMgYWxzbyBlYXNpbHkgc2VlbgoJCQkJCWlmIHdlIGNvbnNpZGVyIHRoZSBtYXR0ZXIgaW4gdGhlIGxpZ2h0IG9mIHJlYXNvbi4gRm9yIGV4dGVybmFsIGdvb2RzIGhhdmUgYQoJCQkJCWxpbWl0LCBhcyBoYXMgYW55IGluc3RydW1lbnQg77yIYW5kIGV2ZXJ5dGhpbmcgdXNlZnVsIGlzIHVzZWZ1bCBmb3IKCQkJCQlzb21ldGhpbmfvvIksIHNvIGFuIGV4Y2Vzc2l2ZSBhbW91bnQgb2YgdGhlbSBtdXN0IG5lY2Vzc2FyaWx5IGRvIGhhcm0sIG9yCgkJCQkJZG8gbm8gZ29vZCwgdG8gaXRzIHBvc3Nlc3Nvcjsgd2hlcmVhcyB3aXRoIGFueSBvZiB0aGUgZ29vZHMgb2YgdGhlIHNvdWwsIHRoZQoJCQkJCW1vcmUgYWJ1bmRhbnQgaXQgaXMsIHRoZSBtb3JlIHVzZWZ1bCBpdCBtdXN0IGJl4oCUaWYgZXZlbiB0byBnb29kcyBvZgoJCQkJCXRoZSBzb3VsIG5vdCBvbmx5IHRoZSB0ZXJtIOKAmG5vYmxl4oCZIGJ1dCBhbHNvIHRoZSB0ZXJtCgkJCQkJ4oCYdXNlZnVs4oCZIGNhbiBiZSBwcm9wZXJseSBhcHBsaWVkLiBBbmQgYnJvYWRseSwgaXQgaXMgY2xlYXIKCQkJCQl0aGF0IHdlIHNoYWxsIGRlY2xhcmUgdGhhdCB0aGUgYmVzdCBjb25kaXRpb24gb2YgZWFjaCBwYXJ0aWN1bGFyIHRoaW5nLAoJCQkJCWNvbXBhcmluZyB0aGluZ3Mgd2l0aCBvbmUgYW5vdGhlciwgY29ycmVzcG9uZHMgaW4gcG9pbnQgb2Ygc3VwZXJpb3JpdHkgdG8gdGhlCgkJCQkJZGlzdGFuY2UgdGhhdCBzdWJzaXN0cyBiZXR3ZWVuIHRoZSB0aGluZ3Mgb2Ygd2hpY2ggd2UgZGVjbGFyZSB0aGVzZSBjb25kaXRpb25zCgkJCQkJdGhlbXNlbHZlcyB0byBiZSBjb25kaXRpb25zLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+ZS5nLiB0aGUgZmluZXN0CgkJCQkJCW1hbiBleGNlbHMgdGhlIGZpbmVzdCBtb25rZXkgdG8gdGhlIGRlZ3JlZSBpbiB3aGljaCB0aGUgc3BlY2llcyBtYW4gZXhjZWxzCgkJCQkJCXRoZSBzcGVjaWVzIG1vbmtleS48L25vdGU+IEhlbmNlIGluYXNtdWNoIGFzIG91ciBzb3VsIGlzIGEgbW9yZSB2YWx1YWJsZQoJCQkJCXRoaW5nIGJvdGggYWJzb2x1dGVseSBhbmQgcmVsYXRpdmVseSB0byBvdXJzZWx2ZXMgdGhhbiBlaXRoZXIgb3VyIHByb3BlcnR5IG9yCgkJCQkJb3VyIGJvZHksIHRoZSBiZXN0IGNvbmRpdGlvbnMgb2YgdGhlc2UgdGhpbmdzIG11c3QgbmVjZXNzYXJpbHkgc3RhbmQgaW4gdGhlIHNhbWUKCQkJCQlyZWxhdGlvbiB0byBvbmUgYW5vdGhlciBhcyB0aGUgdGhpbmdzIHRoZW1zZWx2ZXMgZG8uIE1vcmVvdmVyIGl0IGlzIGZvciB0aGUgc2FrZQoJCQkJCW9mIHRoZSBzb3VsIHRoYXQgdGhlc2UgZ29vZHMgYXJlIGluIHRoZWlyIG5hdHVyZSBkZXNpcmFibGUsIGFuZCB0aGF0IGFsbCB3aXNlCgkJCQkJbWVuIG11c3Q8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmNob29zZSB0aGVtLCBub3QgdGhlIHNvdWwgZm9yCgkJCQkJdGhlIHNha2Ugb2YgdGhvc2Ugb3RoZXIgdGhpbmdzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5MZXQKCQkJCQl1cyB0aGVuIHRha2UgaXQgYXMgYWdyZWVkIGJldHdlZW4gdXMgdGhhdCB0byBlYWNoIG1hbiB0aGVyZSBmYWxscyBqdXN0IHNvIGxhcmdlCgkJCQkJYSBtZWFzdXJlIG9mIGhhcHBpbmVzcyBhcyBoZSBhY2hpZXZlcyBvZiB2aXJ0dWUgYW5kIHdpc2RvbSBhbmQgb2YgdmlydHVvdXMgYW5kCgkJCQkJd2lzZSBhY3Rpb246IGluIGV2aWRlbmNlIG9mIHRoaXMgd2UgaGF2ZSB0aGUgY2FzZSBvZiBHb2QsIHdobyBpcyBoYXBweSBhbmQKCQkJCQlibGVzc2VkLCBidXQgaXMgc28gb24gYWNjb3VudCBvZiBubyBleHRlcm5hbCBnb29kcywgYnV0IG9uIGFjY291bnQgb2YgaGltc2VsZiwKCQkJCQlhbmQgYnkgYmVpbmcgb2YgYSBjZXJ0YWluIHF1YWxpdHkgaW4gaGlzIG5hdHVyZTsgc2luY2UgaXQgaXMgYWxzbyBmb3IgdGhpcwoJCQkJCXJlYXNvbiB0aGF0IHByb3NwZXJpdHkgaXMgbmVjZXNzYXJpbHkgZGlmZmVyZW50IGZyb20gaGFwcGluZXNz4oCUZm9yIHRoZQoJCQkJCWNhdXNlIG9mIGdvb2RzIGV4dGVybmFsIHRvIHRoZSBzb3VsIGlzIHRoZSBzcG9udGFuZW91cyBhbmQgZm9ydHVuZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkFyaXN0b3RsZSB0YXVnaHQgdGhhdCBzb21lIGV2ZW50cyBhcmUgdGhlCgkJCQkJCXJlc3VsdCBvZiB0aGUgdW5kZXNpZ25lZCBpbnRlcmFjdGlvbiBvZiB0d28gbGluZXMgb2YgY2F1c2F0aW9uIGluIG5hdHVyZSdzCgkJCQkJCWRlc2lnbjsgaGUgZGVub3RlZCB0aGlzIO+8iDHvvIkgaW4gZ2VuZXJhbCwgYnkg4oCYdGhlCgkJCQkJCWF1dG9tYXRpY+KAmSBvciBzZWxmLWFjdGluZyDvvIhyZXByZXNlbnRlZCBpbiBMYXRpbiBieQoJCQkJCQkJPGVtcGg+c3BvbnRlPC9lbXBoPiwgc3BvbnRhbmVvdXPvvIksIO+8iDLvvIkgYXMKCQkJCQkJY29uY2VybmluZyBtYW4sIGJ5IOKAmGZvcnR1bmUu4oCZPC9ub3RlPiBidXQgbm9ib2R5IGlzIGp1c3QKCQkJCQlvciB0ZW1wZXJhdGUgYXMgYSByZXN1bHQgb2Ygb3Igb3dpbmcgdG8gdGhlIGFjdGlvbiBvZiBmb3J0dW5lLiBBbmQgY29ubmVjdGVkIGlzCgkJCQkJYSB0cnV0aCByZXF1aXJpbmcgdGhlIHNhbWUgYXJndW1lbnRzIHRvIHByb3ZlIGl0LCB0aGF0IGl0IGlzIGFsc28gdGhlIGJlc3QKCQkJCQlzdGF0ZSwgYW5kIHRoZSBvbmUgdGhhdCBkb2VzIHdlbGwsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgY29tbW9uCgkJCQkJCXBsYXkgb24gdGhlIGFtYmlndWl0eSBvZiDigJhkbyB3ZWxsLOKAmSBtZWFuaW5nIGVpdGhlcgoJCQkJCQnigJhwcm9zcGVy4oCZIG9yIOKAmGFjdCByaWdodGx5LuKAmTwvbm90ZT4KCQkJCQl0aGF0IGlzIGhhcHB5LiBCdXQgdG8gZG8gd2VsbCBpcyBpbXBvc3NpYmxlIHNhdmUgZm9yIHRob3NlIHdobyBkbyBnb29kIGFjdGlvbnMsCgkJCQkJYW5kIHRoZXJlIGlzIG5vIGdvb2QgYWN0aW9uIGVpdGhlciBvZiBhIG1hbiBvciBvZiBhIHN0YXRlIHdpdGhvdXQgdmlydHVlIGFuZAoJCQkJCXdpc2RvbTsgYW5kIGNvdXJhZ2UsIGp1c3RpY2UgYW5kIHdpc2RvbSBiZWxvbmdpbmcgdG8gYSBzdGF0ZSBoYXZlIHRoZSBzYW1lCgkJCQkJbWVhbmluZyBhbmQgZm9ybSBhcyBoYXZlIHRob3NlIHZpcnR1ZXMgd2hvc2UgcG9zc2Vzc2lvbiBiZXN0b3dzIHRoZSB0aXRsZXMgb2YKCQkJCQlqdXN0IGFuZCB3aXNlIGFuZCB0ZW1wZXJhdGUgb24gYW4gaW5kaXZpZHVhbCBodW1hbiBiZWluZy48bWlsZXN0b25lIGVkPSJQIiBuPSIxLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIHJlbWFya3MKCQkJCQlob3dldmVyIG11c3Qgc3VmZmljZSBieSB3YXkgb2YgcHJlZmFjZSB0byBvdXIgZGlzY291cnNlOiBmb3IgbmVpdGhlciBpcyBpdAoJCQkJCXBvc3NpYmxlIHRvIGFic3RhaW4gZnJvbSB0b3VjaGluZyBvbiB0aGVzZSBzdWJqZWN0cyBhbHRvZ2V0aGVyLCBub3IgaXMgaXQKCQkJCQlmZWFzaWJsZSB0byBmb2xsb3cgb3V0IGFsbCB0aGUgYXJndW1lbnRzIHRoYXQgYXJlIGdlcm1hbmUgdG8gdGhlbSwgZm9yIHRoYXQgaXMKCQkJCQl0aGUgYnVzaW5lc3Mgb2YgYW5vdGhlciBjb3Vyc2Ugb2Ygc3R1ZHkuIEZvciB0aGUgcHJlc2VudCBsZXQgdXMgdGFrZSBpdCBhcwoJCQkJCWVzdGFibGlzaGVkIHRoYXQgdGhlIGJlc3QgbGlmZSwgd2hldGhlciBzZXBhcmF0ZWx5IGZvciBhbiBpbmRpdmlkdWFsIG9yCgkJCQkJY29sbGVjdGl2ZWx5IGZvciBzdGF0ZXMsIDxtaWxlc3RvbmUgbj0iMTMyNGEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmlzIHRoZSBsaWZlIGNvbmpvaW5lZCB3aXRoIHZpcnR1ZSBmdXJuaXNoZWQgd2l0aAoJCQkJCXN1ZmZpY2llbnQgbWVhbnMgZm9yIHRha2luZyBwYXJ0IGluIHZpcnR1b3VzIGFjdGlvbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTA5OWEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4gRXRoLiAxMDk5YQoJCQkJCQkJMzI8L2JpYmw+LCA8YmlibCBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExNzlhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTE3OWEgNAoJCQkJCQkJZmYuPC9iaWJsPjwvbm90ZT47IHdoaWxlIG9iamVjdGlvbnMgdG8gdGhpcyBwb3NpdGlvbiB3ZSBtdXN0IHBhc3Mgb3ZlcgoJCQkJCWluIHRoZSBjb3Vyc2Ugb2YgdGhlIHByZXNlbnQgaW5xdWlyeSwgYW5kIHJlc2VydmUgdGhlbSBmb3IgZnV0dXJlIGNvbnNpZGVyYXRpb24sCgkJCQkJaWYgYW55b25lIGJlIGZvdW5kIHRvIGRpc2FncmVlIHdpdGggd2hhdCBoYXMgYmVlbiBzYWlkLjxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhlIG90aGVyIGhhbmQgaXQKCQkJCQlyZW1haW5zIHRvIHNheSB3aGV0aGVyIHRoZSBoYXBwaW5lc3Mgb2YgYSBzdGF0ZSBpcyB0byBiZSBwcm9ub3VuY2VkIHRoZSBzYW1lIGFzCgkJCQkJdGhhdCBvZiBlYWNoIGluZGl2aWR1YWwgbWFuLCBvciB3aGV0aGVyIGl0IGlzIGRpZmZlcmVudC4gSGVyZSB0b28gdGhlIGFuc3dlciBpcwoJCQkJCWNsZWFyOiBldmVyeWJvZHkgd291bGQgYWdyZWUgdGhhdCBpdCBpcyB0aGUgc2FtZTsgZm9yIGFsbCB0aG9zZSB3aG8gYmFzZSB0aGUKCQkJCQlnb29kIGxpZmUgdXBvbiB3ZWFsdGggaW4gdGhlIGNhc2Ugb2YgdGhlIGluZGl2aWR1YWwsIGFsc28gYXNzaWduIGZlbGljaXR5IHRvIHRoZQoJCQkJCXN0YXRlIGFzIGEgd2hvbGUgaWYgaXQgaXMgd2VhbHRoeTsgYW5kIGFsbCB3aG8gdmFsdWUgdGhlIGxpZmUgb2YgdGhlIHR5cmFudAoJCQkJCWhpZ2hlc3QsIHdvdWxkIGFsc28gc2F5IHRoYXQgdGhlIHN0YXRlIHdoaWNoIHJ1bGVzIHRoZSB3aWRlc3QgZW1waXJlIGlzIHRoZQoJCQkJCWhhcHBpZXN0OyBhbmQgaWYgYW55IGJvZHkgYWNjZXB0cyB0aGUgaW5kaXZpZHVhbCBhcyBoYXBweSBvbiBhY2NvdW50IG9mIHZpcnR1ZSwKCQkJCQloZSB3aWxsIGFsc28gc2F5IHRoYXQgdGhlIHN0YXRlIHdoaWNoIGlzIHRoZSBiZXR0ZXIgbW9yYWxseSBpcyB0aGUgaGFwcGllci4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZXJlIG5vdyBhcmlzZSB0aGVzZSB0d28KCQkJCQlxdWVzdGlvbnMgdGhhdCByZXF1aXJlIGNvbnNpZGVyYXRpb246IGZpcnN0LCB3aGljaCBtb2RlIG9mIGxpZmUgaXMgdGhlIG1vcmUKCQkJCQlkZXNpcmFibGUsIHRoZSBsaWZlIG9mIGFjdGl2ZSBjaXRpemVuc2hpcCBhbmQgcGFydGljaXBhdGlvbiBpbiBwb2xpdGljcywgb3IKCQkJCQlyYXRoZXIgdGhlIGxpZmUgb2YgYW4gYWxpZW4gYW5kIHRoYXQgb2YgZGV0YWNobWVudCBmcm9tIHRoZSBwb2xpdGljYWwKCQkJCQlwYXJ0bmVyc2hpcDsgbmV4dCwgd2hhdCBjb25zdGl0dXRpb24gYW5kIHdoYXQgb3JnYW5pemF0aW9uIG9mIGEgc3RhdGUgaXMgdG8gYmUKCQkJCQlkZWVtZWQgdGhlIGJlc3Qs4oCUZWl0aGVyIG9uIHRoZSBhc3N1bXB0aW9uIHRoYXQgdG8gdGFrZSBhbiBhY3RpdmUgcGFydAoJCQkJCWluIHRoZSBzdGF0ZSBpcyBkZXNpcmFibGUgZm9yIGV2ZXJ5Ym9keSwgb3IgdGhhdCBpdCBpcyB1bmRlc2lyYWJsZSBmb3Igc29tZSBtZW4KCQkJCQlhbHRob3VnaCBkZXNpcmFibGUgZm9yIG1vc3QuIEJ1dCBhcyBpdCBpczxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIGxhdHRlciBxdWVzdGlvbiB0aGF0IGlzIHRoZSBidXNpbmVzcyBvZiBwb2xpdGljYWwgc3R1ZHkgYW5kCgkJCQkJc3BlY3VsYXRpb24sIGFuZCBub3QgdGhlIHF1ZXN0aW9uIG9mIHdoYXQgaXMgZGVzaXJhYmxlIGZvciB0aGUgaW5kaXZpZHVhbCwgYW5kCgkJCQkJYXMgaXQgaXMgdGhlIGludmVzdGlnYXRpb24gb2YgcG9saXRpY3MgdGhhdCB3ZSBoYXZlIG5vdyB0YWtlbiB1cCwgdGhlIGZvcm1lcgoJCQkJCXF1ZXN0aW9uIHdvdWxkIGJlIGEgc2lkZSBpc3N1ZSwgYW5kIHRoZSBsYXR0ZXIgaXMgdGhlIGJ1c2luZXNzIG9mIHBvbGl0aWNhbAoJCQkJCQlpbnF1aXJ5LjxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGl0IGlzIGNsZWFyIHRoYXQgdGhlIGJlc3QgY29uc3RpdHV0aW9uIGlzIHRoZSBzeXN0ZW0gdW5kZXIKCQkJCQl3aGljaCBhbnlib2R5IHdoYXRzb2V2ZXIgd291bGQgYmUgYmVzdCBvZmYgYW5kIHdvdWxkIGxpdmUgaW4gZmVsaWNpdHk7IGJ1dCB0aGUKCQkJCQlxdWVzdGlvbiBpcyByYWlzZWQgZXZlbiBvbiB0aGUgcGFydCBvZiB0aG9zZSB3aG8gYWdyZWUgdGhhdCB0aGUgbGlmZSBhY2NvbXBhbmllZAoJCQkJCWJ5IHZpcnR1ZSBpcyB0aGUgbW9zdCBkZXNpcmFibGUsIHdoZXRoZXIgdGhlIGxpZmUgb2YgY2l0aXplbnNoaXAgYW5kIGFjdGl2aXR5IGlzCgkJCQkJZGVzaXJhYmxlIG9yIHJhdGhlciBhIGxpZmUgcmVsZWFzZWQgZnJvbSBhbGwgZXh0ZXJuYWwgYWZmYWlycywgZm9yIGV4YW1wbGUgc29tZQoJCQkJCWZvcm0gb2YgY29udGVtcGxhdGl2ZSBsaWZlLCB3aGljaCBpcyBzYWlkIGJ5IHNvbWUgdG8gYmUgdGhlIG9ubHkgbGlmZSB0aGF0IGlzCgkJCQkJCXBoaWxvc29waGljLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUgR3JlZWsgc2hvdWxkIGJlCgkJCQkJCWFsdGVyZWQgdG8gZ2l2ZSDigJh3aGljaCBhbG9uZSBpcyBzYWlkIHRvIGJlIGRlc2lyYWJsZSBieSBzb21lCgkJCQkJCXBoaWxvc29waGVycy7igJk8L25vdGU+IEZvciBpdCBpcyBtYW5pZmVzdCB0aGF0IHRoZXNlIGFyZSB0aGUgdHdvCgkJCQkJbW9kZXMgb2YgbGlmZSBwcmluY2lwYWxseSBjaG9zZW4gYnkgdGhlIG1lbiBtb3N0IGFtYml0aW91cyBvZiBleGNlbGxpbmcgaW4KCQkJCQl2aXJ0dWUsIGJvdGggaW4gcGFzdCB0aW1lcyBhbmQgYXQgdGhlIHByZXNlbnQgZGF54oCUSSBtZWFuIHRoZSBsaWZlIG9mCgkJCQkJcG9saXRpY3MgYW5kIHRoZSBsaWZlIG9mIHBoaWxvc29waHkuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpdCBtYWtlcyBubyBsaXR0bGUgZGlmZmVyZW5jZSB3aGljaCB3YXkgdGhlIHRydXRoIGxpZXM7IGZvciBhc3N1cmVkbHkgdGhlCgkJCQkJd2lzZSBhcmUgYm91bmQgdG8gYXJyYW5nZSB0aGVpciBhZmZhaXJzIGluIHRoZSBkaXJlY3Rpb24gb2YgdGhlIGJldHRlcgoJCQkJCWdvYWzigJRhbmQgdGhpcyBhcHBsaWVzIHRvIHRoZSBzdGF0ZSBjb2xsZWN0aXZlbHkgYXMgd2VsbCBhcyB0byB0aGUKCQkJCQlpbmRpdmlkdWFsIGh1bWFuIGJlaW5nLiBTb21lIHBlcnNvbnMgdGhpbmsgdGhhdCBlbXBpcmUgb3ZlciBvbmUncyBuZWlnaGJvcnMsIGlmCgkJCQkJZGVzcG90aWNhbGx5IGV4ZXJjaXNlZCwgaW52b2x2ZXMgYSBkZWZpbml0ZSBpbmp1c3RpY2Ugb2YgdGhlIGdyZWF0ZXN0IGtpbmQsIGFuZAoJCQkJCWlmIGNvbnN0aXR1dGlvbmFsbHksIGFsdGhvdWdoIGl0IGNhcnJpZXMgbm8gaW5qdXN0aWNlLCB5ZXQgaXMgYSBoaW5kcmFuY2UgdG8gdGhlCgkJCQkJcnVsZXIncyBvd24gd2VsbC1iZWluZzsgYnV0IG90aGVycyBob2xkIGFsbW9zdCB0aGUgb3Bwb3NpdGUgdmlldyB0bwoJCQkJCXRoZXNl4oCUdGhleSB0aGluayB0aGF0IHRoZSBsaWZlIG9mIGFjdGlvbiBhbmQgY2l0aXplbnNoaXAgaXMgdGhlIG9ubHkKCQkJCQlsaWZlIGZpdCBmb3IgYSBtYW4sIHNpbmNlIHdpdGggZWFjaCBvZiB0aGUgdmlydHVlcyBpdHMgZXhlcmNpc2UgaW4gYWN0aW9ucyBpcwoJCQkJCWp1c3QgYXMgcG9zc2libGUgZm9yIG1lbiBlbmdhZ2VkIGluIHB1YmxpYyBhZmZhaXJzIGFuZCBpbiBwb2xpdGljcyBhcyBmb3IgdGhvc2UKCQkJCQl3aG8gbGl2ZSBhIHByaXZhdGUgbGlmZS4gPG1pbGVzdG9uZSBuPSIxMzI0YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+U29tZQoJCQkJCXBlb3BsZSB0aGVuIGhvbGQgdGhlIGZvcm1lciB2aWV3LCB3aGlsZSBvdGhlcnMgZGVjbGFyZSB0aGF0IHRoZSBkZXNwb3RpYyBhbmQKCQkJCQl0eXJhbm5pY2FsIGZvcm0gb2YgY29uc3RpdHV0aW9uIGFsb25lIGFjaGlldmVzIGhhcHBpbmVzczsgYW5kIGluIHNvbWUgc3RhdGVzIGl0CgkJCQkJaXMgYWxzbyB0aGUgZGlzdGluY3RpdmUgYWltIG9mIHRoZSBjb25zdGl0dXRpb24gYW5kIHRoZSBsYXdzIHRvIGVuYWJsZSB0aGVtIHRvCgkJCQkJZXhlcmNpc2UgZGVzcG90aWMgcnVsZSBvdmVyIHRoZWlyIG5laWdoYm9ycy4gSGVuY2UgZXZlbiB0aG91Z2ggd2l0aCBtb3N0IHBlb3BsZXMKCQkJCQltb3N0IG9mIHRoZSBsZWdhbCBvcmRpbmFuY2VzIGhhdmUgYmVlbiBsYWlkIGRvd24gdmlydHVhbGx5IGF0IHJhbmRvbSwKCQkJCQluZXZlcnRoZWxlc3MgaWYgdGhlcmUgYXJlIHBsYWNlcyB3aGVyZSB0aGUgbGF3cyBhaW0gYXQgb25lIGRlZmluaXRlIG9iamVjdCwgdGhhdAoJCQkJCW9iamVjdCBpcyBpbiBhbGwgY2FzZXMgcG93ZXIsIGFzIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gYW5kIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBrZXk9InRnbiw3MDEyMDU2Ij5DcmV0ZTwvcGxhY2VOYW1lPiBib3RoCgkJCQkJdGhlIHN5c3RlbSBvZiBlZHVjYXRpb24gYW5kIHRoZSBtYXNzIG9mIHRoZSBsYXdzIGFyZSBmcmFtZWQgaW4gdGhlIG1haW4gd2l0aCBhCgkJCQkJdmlldyB0byB3YXI7IGFuZCBhbHNvIGFtb25nIGFsbCB0aGUgbm9uLUhlbGxlbmljIG5hdGlvbnMgdGhhdCBhcmUgc3Ryb25nIGVub3VnaAoJCQkJCXRvIGV4cGFuZCBhdCB0aGUgZXhwZW5zZSBvZiBvdGhlcnMsIG1pbGl0YXJ5IHN0cmVuZ3RoIGhhcyBiZWVuIGhlbGQgaW4gaG9ub3IsCgkJCQkJZm9yIGV4YW1wbGUsIGFtb25nIHRoZSBTY3l0aGlhbnMsIFBlcnNpYW5zLCBUaHJhY2lhbnMgYW5kIENlbHRzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JbmRlZWQgYW1vbmcgc29tZSBwZW9wbGVzIHRoZXJlIGFyZSBldmVuCgkJCQkJY2VydGFpbiBsYXdzIHN0aW11bGF0aW5nIG1pbGl0YXJ5IHZhbG9yOyBmb3IgaW5zdGFuY2UgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDYXJ0aGFnZSIga2V5PSJwZXJzZXVzLENhcnRoYWdlIj5DYXJ0aGFnZTwvcGxhY2VOYW1lPiwgd2UgYXJlIHRvbGQsIHdhcnJpb3JzIHJlY2VpdmUKCQkJCQl0aGUgZGVjb3JhdGlvbiBvZiBhcm1sZXRzIG9mIHRoZSBzYW1lIG51bWJlciBhcyB0aGUgY2FtcGFpZ25zIG9uIHdoaWNoIHRoZXkgaGF2ZQoJCQkJCXNlcnZlZDsgYW5kIGF0IG9uZSB0aW1lIHRoZXJlIHdhcyBhbHNvIGEgbGF3IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA2NjY3IiBrZXk9InRnbiw3MDA2NjY3Ij5NYWNlZG9uaWE8L3BsYWNlTmFtZT4gdGhhdCBhIG1hbiB3aG8gaGFkIG5ldmVyIGtpbGxlZCBhbiBlbmVteSBtdXN0IHdlYXIKCQkJCQloaXMgaGFsdGVyIGluc3RlYWQgb2YgYSBiZWx0LiBBbW9uZyBTY3l0aGlhbiB0cmliZXMgYXQgYSBjZXJ0YWluIGZlc3RpdmFsIGEgY3VwCgkJCQkJd2FzIGNhcnJpZWQgcm91bmQgZnJvbSB3aGljaCBhIG1hbiB0aGF0IGhhZCBub3Qga2lsbGVkIGFuIGVuZW15IHdhcyBub3QgYWxsb3dlZAoJCQkJCXRvIGRyaW5rLiBBbW9uZyB0aGUgSWJlcmlhbnMsIGEgd2FybGlrZSByYWNlLCB0aGV5IGZpeCBzbWFsbCBzcGl0czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IgcGVyaGFwcyDigJhwb2ludGVkCgkJCQkJCXN0b25lcy7igJk8L25vdGU+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5pbiB0aGUKCQkJCQllYXJ0aCByb3VuZCBhIG1hbidzIGdyYXZlIGNvcnJlc3BvbmRpbmcgaW4gbnVtYmVyIHRvIHRoZSBlbmVtaWVzIGhlIGhhcyBraWxsZWQuCgkJCQkJU28gd2l0aCBvdGhlciByYWNlcyB0aGVyZSBhcmUgbWFueSBvdGhlciBwcmFjdGljZXMgb2YgYSBzaW1pbGFyIGtpbmQsIHNvbWUKCQkJCQllc3RhYmxpc2hlZCBieSBsYXcgYW5kIG90aGVycyBieSBjdXN0b20uPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi43IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5OZXZlcnRoZWxlc3MgdGhvc2Ugd2hvIHdpc2gKCQkJCQl0byBleGFtaW5lIHRoZSBtYXR0ZXIgY2xvc2VseSBtaWdodCBwZXJoYXBzIHRoaW5rIGl0IGV4Y2VlZGluZ2x5IHN0cmFuZ2UgdGhhdCBpdAoJCQkJCXNob3VsZCBiZSB0aGUgYnVzaW5lc3Mgb2YgYSBzdGF0ZXNtYW4gdG8gYmUgYWJsZSB0byBkZXZpc2UgbWVhbnMgb2YgaG9sZGluZwoJCQkJCWVtcGlyZSBhbmQgbWFzdGVyeSBvdmVyIHRoZSBuZWlnaGJvcmluZyBwZW9wbGVzIHdoZXRoZXIgdGhleSBkZXNpcmUgaXQgb3Igbm90LgoJCQkJCUhvdyBjYW4gdGhhdCBiZSB3b3J0aHkgb2YgYSBzdGF0ZXNtYW4gb3IgbGF3Z2l2ZXIgd2hpY2ggaXMgbm90IGV2ZW4gbGF3ZnVsPyBhbmQKCQkJCQlnb3Zlcm5tZW50IGlzIG5vdCBsYXdmdWwgd2hlbiBpdCBpcyBjYXJyaWVkIG9uIG5vdCBvbmx5IGp1c3RseSBidXQgYWxzbwoJCQkJCXVuanVzdGx54oCUYW5kIHN1cGVyaW9yIHN0cmVuZ3RoIG1heSBiZSB1bmp1c3RseSBleGVyY2lzZWQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPk1vcmVvdmVyIHdlIGRvIG5vdCBzZWUgdGhpcyBpbiB0aGUgb3RoZXIKCQkJCQlzY2llbmNlcyBlaXRoZXI6IGl0IGlzIG5vIHBhcnQgb2YgYSBwaHlzaWNpYW4ncyBvciBzaGlwLWNhcHRhaW4ncyBidXNpbmVzcyB0bwoJCQkJCXVzZSBlaXRoZXIgcGVyc3Vhc2lvbiBvciBjb21wdWxzaW9uIHVwb24gdGhlIHBhdGllbnRzIGluIHRoZSBvbmUgY2FzZSBhbmQgdGhlCgkJCQkJCWNyZXc8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yIHBlcmhhcHMg4oCYdGhlCgkJCQkJCXBhc3NlbmdlcnMu4oCZPC9ub3RlPiBpbiB0aGUgb3RoZXIuIFlldCBtb3N0IHBlb3BsZXMgc2VlbSB0byB0aGluawoJCQkJCXRoYXQgZGVzcG90aWMgcnVsZSBpcyBzdGF0ZXNtYW5zaGlwLCBhbmQgYXJlIG5vdCBhc2hhbWVkIHRvIHByYWN0aXNlIHRvd2FyZHMKCQkJCQlvdGhlcnMgdHJlYXRtZW50IHdoaWNoIHRoZXkgZGVjbGFyZSB0byBiZSB1bmp1c3QgYW5kIGRldHJpbWVudGFsIGZvciB0aGVtc2VsdmVzOwoJCQkJCWZvciBpbiB0aGVpciBvd24gaW50ZXJuYWwgYWZmYWlycyB0aGV5IGRlbWFuZCBqdXN0IGdvdmVybm1lbnQsIHlldCBpbiB0aGVpcgoJCQkJCXJlbGF0aW9ucyB3aXRoIG90aGVyIHBlb3BsZXMgdGhleSBwYXkgbm8gYXR0ZW50aW9uIHRvIGp1c3RpY2UuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPllldCBpdCBpcyBzdHJhbmdlIGlmIHRoZXJlIGlzIG5vdCBhIG5hdHVyYWwKCQkJCQlkaXN0aW5jdGlvbiBiZXR3ZWVuIHBlb3BsZXMgc3VpdGVkIHRvIGJlIGRlc3BvdGljYWxseSBydWxlZCBhbmQgdGhvc2Ugbm90CgkJCQkJc3VpdGVkOyBzbyB0aGF0IGlmIHRoaXMgaXMgc28sIGl0IGlzIG5vdCBwcm9wZXIgdG8gYXR0ZW1wdCB0byBleGVyY2lzZSBkZXNwb3RpYwoJCQkJCWdvdmVybm1lbnQgb3ZlciBhbGwgcGVvcGxlLCBidXQgb25seSBvdmVyIHRob3NlIHN1aXRlZCBmb3IgaXQsIGp1c3QgYXMgaXQgaXMgbm90CgkJCQkJcmlnaHQgdG8gaHVudCBodW1hbiBiZWluZ3MgZm9yIGZvb2Qgb3Igc2FjcmlmaWNlLCBidXQgb25seSB0aGUgZ2FtZSBzdWl0YWJsZSBmb3IKCQkJCQl0aGlzIHB1cnBvc2UsIHRoYXQgaXMsIHN1Y2ggd2lsZCBjcmVhdHVyZXMgYXMgYXJlIGdvb2QgdG8gZWF0LiBBbmQgbW9yZW92ZXIgaXQKCQkJCQlpcyBwb3NzaWJsZSBldmVuIGZvciBhIHNpbmdsZSBzdGF0ZSBpbiBpc29sYXRpb24gdG8gYmUgaGFwcHksIDxtaWxlc3RvbmUgbj0iMTMyNWEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnRoYXQgaXMKCQkJCQlvbmUgdGhhdCBpcyB3ZWxsIGdvdmVybmVkLCBpbiBhcyBtdWNoIGFzIGl0IGlzIGNvbmNlaXZhYmxlIHRoYXQgYSBzdGF0ZSBtaWdodCBiZQoJCQkJCWNhcnJpZWQgb24gc29tZXdoZXJlIGluIGlzb2xhdGlvbiwgZW5qb3lpbmcgZ29vZCBsYXdzLCBhbmQgaW4gc3VjaCBhIHN0YXRlIHRoZQoJCQkJCXN5c3RlbSBvZiB0aGUgY29uc3RpdHV0aW9uIHdpbGwgbm90IGJlIGZyYW1lZCBmb3IgdGhlIHB1cnBvc2Ugb2Ygd2FyIG9yIG9mCgkJCQkJb3ZlcnBvd2VyaW5nIGl0cyBlbmVtaWVz4oCUZm9yIHdlIGFyZSB0byBzdXBwb3NlIGV2ZXJ5dGhpbmcgdG8gZG8gd2l0aAoJCQkJCXdhciB0byBiZSBleGNsdWRlZC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IGlzIGV2aWRlbnQKCQkJCQl0aGVyZWZvcmUgdGhhdCB3aGlsZSBhbGwgbWlsaXRhcnkgcHVyc3VpdHMgYXJlIHRvIGJlIGRlZW1lZCBob25vcmFibGUsIHRoZXkgYXJlCgkJCQkJbm90IHNvIGFzIGJlaW5nIHRoZSB1bHRpbWF0ZSBlbmQgb2YgYWxsIHRoaW5ncyBidXQgYXMgbWVhbnMgdG8gdGhhdCBlbmQuIEFuZCBpdAoJCQkJCWlzIHRoZSBidXNpbmVzcyBvZiB0aGUgZ29vZCBsYXdnaXZlciB0byBzdHVkeSBob3cgYSBzdGF0ZSwgYSByYWNlIG9mIG1lbiBvciBhbnkKCQkJCQlvdGhlciBjb21tdW5pdHkgaXMgdG8gcGFydGFrZSBvZiB0aGUgZ29vZCBsaWZlIGFuZCB0aGUgaGFwcGluZXNzIHBvc3NpYmxlIGZvcgoJCQkJCXRoZW0uIFNvbWUgaG93ZXZlciBvZiB0aGUgcmVndWxhdGlvbnMgbGFpZCBkb3duIHdpbGwgdmFyeTsgYW5kIGluIGNhc2UgdGhlcmUKCQkJCQlleGlzdCBhbnkgbmVpZ2hib3IgcGVvcGxlcywgaXQgaXMgdGhlIGJ1c2luZXNzIG9mIHRoZSBsZWdpc2xhdGl2ZSBhcnQgdG8KCQkJCQljb25zaWRlciB3aGF0IHNvcnQgb2YgZXhlcmNpc2VzIHNob3VsZCBiZSBwcmFjdGlzZWQgaW4gcmVsYXRpb24gdG8gd2hhdCBzb3J0IG9mCgkJCQkJbmVpZ2hib3JzIG9yIGhvdyB0aGUgc3RhdGUgaXMgdG8gYWRvcHQgdGhlIHJlZ3VsYXRpb25zIHRoYXQgYXJlIHN1aXRhYmxlIGluCgkJCQkJcmVsYXRpb24gdG8gZWFjaC48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCB0aGlzIHF1ZXN0aW9uIG9mIHRoZSBwcm9wZXIKCQkJCQllbmQgZm9yIHRoZSBiZXN0IGNvbnN0aXR1dGlvbnMgdG8gYWltIGF0IG1heSByZWNlaXZlIGl0cyBkdWUgY29uc2lkZXJhdGlvbgoJCQkJCQlsYXRlci48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMywgMTQuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2UKCQkJCQl0dXJuIHRvIHRob3NlIHdobywgd2hpbGUgYWdyZWVpbmcgdGhhdCB0aGUgbGlmZSBvZiB2aXJ0dWUgaXMgdGhlIG1vc3QgZGVzaXJhYmxlLAoJCQkJCWRpZmZlciBhYm91dCB0aGUgd2F5IGluIHdoaWNoIHRoYXQgbGlmZSBzaG91bGQgYmUgcHVyc3VlZC4gU29tZSBkaXNhcHByb3ZlIG9mCgkJCQkJaG9sZGluZyBvZmZpY2UgaW4gdGhlIHN0YXRlLCB0aGlua2luZyB0aGF0IHRoZSBsaWZlIG9mIHRoZSBmcmVlIG1hbjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+aXMgZGlmZmVyZW50IGZyb20gdGhlIGxpZmUgb2YgcG9saXRpY3MgYW5kCgkJCQkJaXMgdGhlIG1vc3QgZGVzaXJhYmxlIG9mIGFueTsgd2hlcmVhcyBvdGhlcnMgdGhpbmsgdGhlIHBvbGl0aWNhbCBsaWZlIHRoZSBiZXN0CgkJCQkJbGlmZSwgZm9yIHRoZXkgYXJndWUgdGhhdCBpdCBpcyBpbXBvc3NpYmxlIGZvciB0aGUgbWFuIHdobyBkb2VzIG5vdGhpbmcgdG8gZG8KCQkJCQl3ZWxsLCBhbmQgZG9pbmcgd2VsbCBhbmQgaGFwcGluZXNzIGFyZSB0aGUgc2FtZSB0aGluZy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9uIHRoZSBhbWJpZ3VvdXMgdXNlIG9mIOKAmGRvIHdlbGzigJkgc2VlCgkJCQkJCTEzMjNiIDMyIG4uPC9ub3RlPiBUbyB0aGVzZSB0d28gcGFydGllcyB3ZSBtdXN0IHJlcGx5IHRoYXQgYm90aCBhcmUgcGFydGx5CgkJCQkJcmlnaHQgYW5kIHBhcnRseSB3cm9uZy4gVGhlIGZvcm1lciBhcmUgcmlnaHQgaW4gc2F5aW5nIHRoYXQgdGhlIGxpZmUgb2YgdGhlIGZyZWUKCQkJCQltYW4gaXMgYmV0dGVyIHRoYW4gdGhlIGxpZmUgb2YgbWFzdGVyc2hpcCwgZm9yIHRoaXMgaXMgdHJ1ZeKAlHRoZXJlIGlzCgkJCQkJbm90aGluZyBzcGVjaWFsbHkgZGlnbmlmaWVkIGluIGVtcGxveWluZyBhIHNsYXZlLCBhcyBhIHNsYXZlLCBmb3IgZ2l2aW5nIG9yZGVycwoJCQkJCWFib3V0IG1lbmlhbCBkdXRpZXMgaGFzIGluIGl0IG5vdGhpbmcgb2Ygbm9iaWxpdHk7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPnlldCB0byB0aGluayB0aGF0IGFsbCBnb3Zlcm5tZW50IGlzIGV4ZXJjaXNpbmcgdGhlCgkJCQkJYXV0aG9yaXR5IG9mIGEgbWFzdGVyIGlzIGEgbWlzdGFrZSwgZm9yIHRoZXJlIGlzIGFzIHdpZGUgYSBkaWZmZXJlbmNlIGJldHdlZW4KCQkJCQlydWxpbmcgZnJlZSBtZW4gYW5kIHJ1bGluZyBzbGF2ZXMgYXMgdGhlcmUgaXMgYmV0d2VlbiB0aGUgbmF0dXJhbCBmcmVlbWFuIGFuZAoJCQkJCXRoZSBuYXR1cmFsIHNsYXZlIHRoZW1zZWx2ZXMuIEJ1dCB0aGVzZSB0aGluZ3MgaGF2ZSBiZWVuIGFkZXF1YXRlbHkgZGVjaWRlZCBpbgoJCQkJCXRoZSBmaXJzdCBkaXNjb3Vyc2VzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBCb29rIDEuPC9ub3RlPiBCdXQKCQkJCQl0byBwcmFpc2UgaW5hY3Rpb24gbW9yZSBoaWdobHkgdGhhbiBhY3Rpb24gaXMgYW4gZXJyb3IsIGZvciBoYXBwaW5lc3MgaXMgYW4KCQkJCQlhY3Rpdml0eSwgYW5kIGZ1cnRoZXIgdGhlIGFjdGlvbnMgb2YgdGhlIGp1c3QgYW5kIHRlbXBlcmF0ZSBoYXZlIGluIHRoZW0gdGhlCgkJCQkJcmVhbGl6YXRpb24gb2YgbXVjaCB0aGF0IGlzIG5vYmxlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5ZZXQgb24gdGhlIHN0cmVuZ3RoIG9mIHRoZXNlIGRlY2lzaW9ucyBzb21lYm9keSBtaWdodCBwZXJoYXBzIHN1cHBvc2UgdGhhdCB0aGUKCQkJCQloaWdoZXN0IGdvb2QgaXMgdG8gYmUgdGhlIG1hc3RlciBvZiB0aGUgd29ybGQsIHNpbmNlIHRodXMgb25lIHdvdWxkIGhhdmUgdGhlCgkJCQkJcG93ZXIgdG8gY29tcGFzcyB0aGUgZ3JlYXRlc3QgbnVtYmVyIGFuZCB0aGUgbm9ibGVzdCBraW5kIG9mIGFjdGlvbnMsIGFuZAoJCQkJCXRoZXJlZm9yZSBpdCBpcyBub3QgdGhlIGR1dHkgb2YgdGhlIG1hbiB0aGF0IGlzIGNhcGFibGUgb2YgcnVsaW5nIHRvIHN1cnJlbmRlcgoJCQkJCW9mZmljZSB0byBoaXMgbmVpZ2hib3IsIGJ1dCByYXRoZXIgdG8gdGFrZSBpdCBmcm9tIGhpbSwgYW5kIG5vIGFjY291bnQgbXVzdCBiZQoJCQkJCXRha2VuIGJ5IGZhdGhlciBvZiBzb25zIG5vciBieSBzb25zIG9mIGZhdGhlciBub3IgaW4gZ2VuZXJhbCBieSBvbmUgZnJpZW5kIG9mCgkJCQkJYW5vdGhlciwgYW5kIG5vIGhlZWQgbXVzdCBiZSBwYWlkIHRvIHRoZW0gaW4gY29tcGFyaXNvbiB3aXRoIHRoaXM7IGZvciB0aGUgYmVzdAoJCQkJCXRoaW5nIGlzIHRoZSBtb3N0IHRvIGJlIGRlc2lyZWQsIGFuZCB0byBkbyB3ZWxsIGlzIHRoZSBiZXN0IHRoaW5nLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ob3cgdGhpcyBzdGF0ZW1lbnQgaXMgcGVyaGFwcyB0cnVlCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTMyNWIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmlmIGl0IGlzIHRoZSBjYXNlIHRoYXQgdGhlIG1vc3QgZGVzaXJhYmxlIG9mIGV4aXN0aW5nIHRoaW5ncwoJCQkJCXdpbGwgYmVsb25nIHRvIG1lbiB0aGF0IHVzZSByb2JiZXJ5IGFuZCB2aW9sZW5jZS4gQnV0IHBlcmhhcHMgaXQgY2Fubm90IGJlbG9uZwoJCQkJCXRvIHRoZW0sIGFuZCB0aGlzIGlzIGEgZmFsc2UgYXNzdW1wdGlvbi4gRm9yIGEgbWFuJ3MgYWN0cyBjYW4gbm8gbG9uZ2VyIGJlIG5vYmxlCgkJCQkJaWYgaGUgZG9lcyBub3QgZXhjZWwgYXMgZ3JlYXRseSBhcyBhIG1hbiBleGNlbHMgYSB3b21hbiBvciBhIGZhdGhlciBoaXMgY2hpbGRyZW4KCQkJCQlvciBhIG1hc3RlciBoaXMgc2xhdmVzLCBzbyB0aGF0IG9uZSB3aG8gdHJhbnNncmVzc2VzIGNhbm5vdCBhZnRlcndhcmRzIGFjaGlldmUKCQkJCQlhbnl0aGluZyBzdWZmaWNpZW50IHRvIHJlY3RpZnkgdGhlIGxhcHNlIGZyb20gdmlydHVlIHRoYXQgaGUgaGFkIGFscmVhZHkKCQkJCQljb21taXR0ZWQ7IGJlY2F1c2UgZm9yIGVxdWFscyB0aGUgbm9ibGUgYW5kIGp1c3QgY29uc2lzdHMgaW4gdGhlaXIgdGFraW5nIHR1cm5zLAoJCQkJCXNpbmNlIHRoaXMgaXMgZXF1YWwgYW5kIGFsaWtlLCBidXQgZm9yIHRob3NlIHRoYXQgYXJlIGVxdWFsIHRvIGhhdmUgYW4gdW5lcXVhbAoJCQkJCXNoYXJlIGFuZCB0aG9zZSB0aGF0IGFyZSBhbGlrZSBhbiB1bmxpa2Ugc2hhcmUgaXMgY29udHJhcnkgdG8gbmF0dXJlLCBhbmQKCQkJCQlub3RoaW5nIGNvbnRyYXJ5IHRvIG5hdHVyZSBpcyBub2JsZS4gSGVuY2UgaW4gY2FzZSB0aGVyZSBpcyBhbm90aGVyIHBlcnNvbiB3aG8KCQkJCQlpcyBvdXIgc3VwZXJpb3IgaW4gdmlydHVlIGFuZCBpbiBwcmFjdGljYWwgY2FwYWNpdHkgZm9yIHRoZSBoaWdoZXN0IGZ1bmN0aW9ucywKCQkJCQloaW0gaXQgaXMgbm9ibGUgdG8gZm9sbG93IGFuZCBoaW0gaXQgaXMganVzdCB0byBvYmV5OyB0aG91Z2ggaGUgbXVzdCBwb3NzZXNzIG5vdAoJCQkJCW9ubHkgdmlydHVlIGJ1dCBhbHNvIGNhcGFjaXR5IHRoYXQgd2lsbCByZW5kZXIgaGltIGNhcGFibGUgb2YgYWN0aW9uLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgaWYgdGhlc2UgdGhpbmdzIGFyZSB3ZWxsIHNhaWQsIGFuZCBpZgoJCQkJCWhhcHBpbmVzcyBpcyB0byBiZSBkZWZpbmVkIGFzIHdlbGwtZG9pbmcsIHRoZSBhY3RpdmUgbGlmZSBpcyB0aGUgYmVzdCBsaWZlIGJvdGgKCQkJCQlmb3IgdGhlIHdob2xlIHN0YXRlIGNvbGxlY3RpdmVseSBhbmQgZm9yIGVhY2ggbWFuIGluZGl2aWR1YWxseS4gQnV0IHRoZSBhY3RpdmUKCQkJCQlsaWZlIGlzIG5vdCBuZWNlc3NhcmlseSBhY3RpdmUgaW4gcmVsYXRpb24gdG8gb3RoZXIgbWVuLCBhcyBzb21lIHBlb3BsZSB0aGluaywKCQkJCQlub3IgYXJlIG9ubHkgdGhvc2UgcHJvY2Vzc2VzIG9mIHRob3VnaHQgYWN0aXZlIHRoYXQgYXJlIHB1cnN1ZWQgZm9yIHRoZSBzYWtlIG9mCgkJCQkJdGhlIG9iamVjdHMgdGhhdCByZXN1bHQgZnJvbSBhY3Rpb24sIGJ1dCBmYXIgbW9yZTxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhvc2Ugc3BlY3VsYXRpb25zIGFuZCB0aG91Z2h0cyB0aGF0IGhhdmUgdGhlaXIgZW5kIGluCgkJCQkJdGhlbXNlbHZlcyBhbmQgYXJlIHB1cnN1ZWQgZm9yIHRoZWlyIG93biBzYWtlOyBmb3IgdGhlIGVuZCBpcyB0byBkbyB3ZWxsLCBhbmQKCQkJCQl0aGVyZWZvcmUgaXMgYSBjZXJ0YWluIGZvcm0gb2YgYWN0aW9uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Q2YuCgkJCQkJCTEzMjNiIDMyIG4uLCAxMzI1YSAyMS48L25vdGU+IEFuZCBldmVuIHdpdGggYWN0aW9ucyBkb25lIGluIHJlbGF0aW9uIHRvCgkJCQkJZXh0ZXJuYWwgb2JqZWN0cyB3ZSBwcmVkaWNhdGUgYWN0aW9uIGluIHRoZSBmdWxsIHNlbnNlIGNoaWVmbHkgb2YgdGhlCgkJCQkJbWFzdGVyLWNyYWZ0c21lbiB3aG8gZGlyZWN0IHRoZSBhY3Rpb24gYnkgdGhlaXIgdGhvdWdodHMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPk1vcmVvdmVyIHdpdGggY2l0aWVzIGFsc28sIHRob3NlIHRoYXQgb2NjdXB5IGFuCgkJCQkJaXNvbGF0ZWQgc2l0dWF0aW9uIGFuZCBwdXJzdWUgYSBwb2xpY3kgb2YgaXNvbGF0aW9uIGFyZSBub3QgbmVjZXNzYXJpbHkKCQkJCQlpbmFjdGl2ZTsgZm9yIHN0YXRlIGFjdGl2aXRpZXMgYWxzbyBjYW4gYmUgc2VjdGlvbmFsLCBzaW5jZSB0aGUgc2VjdGlvbnMgb2YgdGhlCgkJCQkJc3RhdGUgaGF2ZSBtYW55IGNvbW1vbiByZWxhdGlvbnMgd2l0aCBvbmUgYW5vdGhlci4gQW5kIHRoaXMgaXMgYWxzbyBwb3NzaWJsZQoJCQkJCXNpbWlsYXJseSBpbiB0aGUgY2FzZSBvZiBhbnkgaW5kaXZpZHVhbCBodW1hbiBiZWluZzsgZm9yIG90aGVyd2lzZSBHb2QgYW5kIHRoZQoJCQkJCXdob2xlIHVuaXZlcnNlIGNvdWxkIGhhcmRseSBiZSB3ZWxsIGNpcmN1bXN0YW5jZWQsIHNpbmNlIHRoZXkgaGF2ZSBubyBleHRlcm5hbAoJCQkJCWFjdGl2aXRpZXMgYnkgdGhlIHNpZGUgb2YgdGhlaXIgb3duIHByaXZhdGUgYWN0aXZpdGllcy48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGlzIHRoZXJlZm9yZSBtYW5pZmVzdCB0aGF0IHRoZSBzYW1lIGxpZmUgbXVzdCBiZSB0aGUgYmVzdAoJCQkJCWJvdGggZm9yIGVhY2ggaHVtYW4gYmVpbmcgaW5kaXZpZHVhbGx5IGFuZCBmb3Igc3RhdGVzIGFuZCBtYW5raW5kCgkJCQkJCWNvbGxlY3RpdmVseS48bWlsZXN0b25lIGVkPSJQIiBuPSI0LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBhcyB3ZSBoYXZlIHByZXBhcmVkIHRoZSB3YXkgYnkgdGhpcyBwcmVmYXRvcnkgZGlzY3Vzc2lvbiBvZgoJCQkJCXRoZSBzdWJqZWN0LCBhbmQgaGF2ZSBwcmV2aW91c2x5IHN0dWRpZWQgYWxsIHRoZSBvdGhlciBmb3JtcyBvZgoJCQkJCQljb25zdGl0dXRpb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIHNlZW1zIHRvIHJlZmVyIHRvCgkJCQkJCUJvb2tzIDQtNi48L25vdGU+IHRoZSBzdGFydGluZy1wb2ludCBmb3IgdGhlIHJlbWFpbmRlciBvZiBvdXIgc3ViamVjdCBpcwoJCQkJCWZpcnN0IHRvIHNwZWNpZnkgdGhlIG5hdHVyZSBvZiB0aGUgY29uZGl0aW9ucyB0aGF0IGFyZSBuZWNlc3NhcnkgaW4gdGhlIGNhc2Ugb2YKCQkJCQl0aGUgc3RhdGUgdGhhdCBpcyB0byBiZSBjb25zdGl0dXRlZCBpbiB0aGUgaWRlYWxseSBiZXN0IG1hbm5lci4gRm9yIHRoZSBiZXN0CgkJCQkJY29uc3RpdHV0aW9uIGNhbm5vdCBiZSByZWFsaXplZCB3aXRob3V0IHN1aXRhYmxlIGVxdWlwbWVudC48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiAxMjg4YiAzOSBuLjwvbm90ZT4gV2UgbXVzdCB0aGVyZWZvcmUgcG9zaXQgYXMgZ3JhbnRlZCBpbgoJCQkJCWFkdmFuY2UgYSBudW1iZXIgb2YgYXMgaXQgd2VyZSBpZGVhbCBjb25kaXRpb25zLCBhbHRob3VnaCBub25lIG9mIHRoZXNlIG11c3QgYmUKCQkJCQlhY3R1YWxseSBpbXBvc3NpYmxlLiBJIG1lYW4gZm9yIGluc3RhbmNlIGluIHJlZmVyZW5jZSB0byBudW1iZXIgb2YgY2l0aXplbnMgYW5kCgkJCQkJdGVycml0b3J5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbGwgb3RoZXIgY3JhZnRzbWVuLCBmb3IKCQkJCQlleGFtcGxlIGEgd2VhdmVyIG9yIGEgc2hpcHdyaWdodCwgPG1pbGVzdG9uZSBuPSIxMzI2YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+aGF2ZSB0byBiZSBzdXBwbGllZCB3aXRoIHRoZWlyCgkJCQkJbWF0ZXJpYWwgaW4gYSBjb25kaXRpb24gc3VpdGFibGUgZm9yIHRoZWlyIHRyYWRlLCBmb3IgdGhlIGJldHRlciB0aGlzIG1hdGVyaWFsCgkJCQkJaGFzIGJlZW4gcHJlcGFyZWQsIHRoZSBmaW5lciBpcyBib3VuZCB0byBiZSB0aGUgcHJvZHVjdCBvZiB0aGVpciBjcmFmdDsgc28gYWxzbwoJCQkJCXRoZSBzdGF0ZXNtYW4gYW5kIHRoZSBsYXdnaXZlciBvdWdodCB0byBiZSBmdXJuaXNoZWQgd2l0aCB0aGVpciBwcm9wZXIgbWF0ZXJpYWwKCQkJCQlpbiBhIHN1aXRhYmxlIGNvbmRpdGlvbi4gVW5kZXIgdGhlIGhlYWQgb2YgbWF0ZXJpYWwgZXF1aXBtZW50IGZvciB0aGUgc3RhdGUKCQkJCQl0aGVyZSBmaXJzdCBjb21lIHRoZSBxdWVzdGlvbnMgYXMgdG8gYSBzdXBwbHkgb2YgcG9wdWxhdGlvbuKAlHdoYXQKCQkJCQlwcmVjaXNlbHkgb3VnaHQgdG8gYmUgaXRzIG51bWJlciBhbmQgd2hhdCBpdHMgbmF0dXJhbCBjaGFyYWN0ZXI/IGFuZCBzaW1pbGFybHkKCQkJCQlpbiByZWdhcmQgdG8gdGhlIHRlcnJpdG9yeSwgd2hhdCBpcyB0byBiZSBpdHMgcGFydGljdWxhciBzaXplIGFuZCBuYXR1cmU/CgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPk1vc3QgcGVvcGxlIGltYWdpbmUgdGhhdCB0aGUKCQkJCQlwcm9zcGVyb3VzIHN0YXRlIG11c3QgYmUgYSBncmVhdCBzdGF0ZTsgYnV0IGdyYW50ZWQgdGhlIHRydXRoIG9mIHRoaXMsIHRoZXkgZmFpbAoJCQkJCXRvIHJlYWxpemUgaW4gd2hhdCBxdWFsaXR5IHRoZSBncmVhdG5lc3Mgb3Igc21hbGxuZXNzIG9mIGEgc3RhdGUgY29uc2lzdHM6IHRoZXkKCQkJCQlqdWRnZSBhIGdyZWF0IHN0YXRlIGJ5IHRoZSBudW1lcmljYWwgbWFnbml0dWRlIG9mIHRoZSBwb3B1bGF0aW9uLCBidXQgcmVhbGx5IHRoZQoJCQkJCW1vcmUgcHJvcGVyIHRoaW5nIHRvIGxvb2sgYXQgaXMgbm90IG51bWJlcnMgYnV0IGVmZmljaWVuY3kuIEZvciBhIHN0YXRlIGxpa2UKCQkJCQlvdGhlciB0aGluZ3MgaGFzIGEgY2VydGFpbiBmdW5jdGlvbiB0byBwZXJmb3JtLCBzbyB0aGF0IGl0IGlzIHRoZSBzdGF0ZSBtb3N0CgkJCQkJY2FwYWJsZSBvZiBwZXJmb3JtaW5nIHRoaXMgZnVuY3Rpb24gdGhhdCBpcyB0byBiZSBkZWVtZWQgdGhlIGdyZWF0ZXN0LCBqdXN0IGFzCgkJCQkJb25lIHdvdWxkIHByb25vdW5jZSBIaXBwb2NyYXRlcyB0byBiZSBncmVhdGVyLCBub3QgYXMgYSBodW1hbiBiZWluZyBidXQgYXMgYQoJCQkJCXBoeXNpY2lhbiwgdGhhbiBzb21lYm9keSB3aG8gc3VycGFzc2VkIGhpbSBpbiBib2RpbHkgc2l6ZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNC40IiB1bml0PSJMb2ViIGNoYXAiIC8+QWxsIHRoZSBzYW1lLCBldmVuIGlmIGl0IGJlIHJpZ2h0IHRvIGp1ZGdlIHRoZQoJCQkJCXN0YXRlIGJ5IHRoZSB0ZXN0IG9mIGl0cyBtdWx0aXR1ZGUsIHRoaXMgb3VnaHQgbm90IHRvIGJlIGRvbmUgd2l0aCByZWdhcmQgdG8gdGhlCgkJCQkJbXVsdGl0dWRlIG9mIGFueSBhbmQgZXZlcnkgY2xhc3Mg77yIZm9yIHN0YXRlcyBhcmUgZG91YnRsZXNzIGJvdW5kIHRvCgkJCQkJY29udGFpbiBhIGxhcmdlIG51bWJlciBvZiBzbGF2ZXM8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZAoJCQkJCXJlc2lkZW50IGFsaWVucyBhbmQgZm9yZWlnbmVyc++8iSwgYnV0IHRoZSB0ZXN0IHNob3VsZCBiZSB0aGUgbnVtYmVyIG9mCgkJCQkJdGhvc2Ugd2hvIGFyZSBhIHBhcnQgb2YgdGhlIHN0YXRl4oCUdGhlIHNwZWNpYWwgcGFydHMgb2Ygd2hpY2ggYSBzdGF0ZQoJCQkJCWNvbnNpc3RzLiBJdCBpcyBzdXBlcmlvcml0eSBpbiB0aGUgbnVtYmVyIG9mIHRoZXNlIHRoYXQgaW5kaWNhdGVzIGEgZ3JlYXQgc3RhdGU7CgkJCQkJYSBzdGF0ZSB0aGF0IHNlbmRzIGZvcnRoIHRvIHdhciBhIGxhcmdlIG51bWJlciBvZiB0aGUgYmFzZXIgc29ydCBhbmQgYSBzbWFsbAoJCQkJCW51bWJlciBvZiBoZWF2eS1hcm1lZCBzb2xkaWVycyBjYW5ub3QgcG9zc2libHkgYmUgYSBncmVhdCBzdGF0ZeKAlGZvciBhCgkJCQkJZ3JlYXQgc3RhdGUgaXMgbm90IHRoZSBzYW1lIHRoaW5nIGFzIGEgc3RhdGUgd2l0aCBhIGxhcmdlIHBvcHVsYXRpb24uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBjZXJ0YWlubHkgZXhwZXJpZW5jZSBhbHNvIHNob3dzIHRoYXQgaXQKCQkJCQlpcyBkaWZmaWN1bHQgYW5kIHBlcmhhcHMgaW1wb3NzaWJsZSBmb3IgYSBzdGF0ZSB3aXRoIHRvbyBsYXJnZSBhIHBvcHVsYXRpb24gdG8KCQkJCQloYXZlIGdvb2QgbGVnYWwgZ292ZXJubWVudC4gQXQgYWxsIGV2ZW50cyB3ZSBzZWUgdGhhdCBub25lIG9mIHRoZSBzdGF0ZXMgcmVwdXRlZAoJCQkJCXRvIGJlIHdlbGwgZ292ZXJuZWQgaXMgd2l0aG91dCBzb21lIHJlc3RyaWN0aW9uIGluIHJlZ2FyZCB0byBudW1iZXJzLiBUaGUKCQkJCQlldmlkZW5jZSBvZiB0aGVvcnkgcHJvdmVzIHRoZSBzYW1lIHBvaW50LiBMYXcgaXMgYSBmb3JtIG9mIG9yZGVyLCBhbmQgZ29vZCBsYXcKCQkJCQltdXN0IG5lY2Vzc2FyaWx5IG1lYW4gZ29vZCBvcmRlcjsgYnV0IGFuIGV4Y2Vzc2l2ZWx5IGxhcmdlIG51bWJlciBjYW5ub3QKCQkJCQlwYXJ0aWNpcGF0ZSBpbiBvcmRlcjogdG8gZ2l2ZSBpdCBvcmRlciB3b3VsZCBzdXJlbHkgYmUgYSB0YXNrIGZvciBkaXZpbmUgcG93ZXIsCgkJCQkJd2hpY2ggaG9sZHMgZXZlbiB0aGlzIHVuaXZlcnNlIHRvZ2V0aGVyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SW4KCQkJCQkJdGhlIE1TUy4gdGhpcyBjbGF1c2UgZm9sbG93cyB0aGUgbmV4dC48L25vdGU+IEhlbmNlIHRoYXQgc3RhdGUgYWxzbyBtdXN0CgkJCQkJbmVjZXNzYXJpbHkgYmUgdGhlIG1vc3QgYmVhdXRpZnVsIHdpdGggd2hvc2UgbWFnbml0dWRlIGlzIGNvbWJpbmVkIHRoZQoJCQkJCWFib3ZlLW1lbnRpb25lZCBsaW1pdGluZyBwcmluY2lwbGU7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPmZvciBjZXJ0YWlubHkgYmVhdXR5IGlzIHVzdWFsbHkgZm91bmQgaW4gbnVtYmVyIGFuZCBtYWduaXR1ZGUsIGJ1dCB0aGVyZSBpcyBhCgkJCQkJZHVlIG1lYXN1cmUgb2YgbWFnbml0dWRlIGZvciBhIGNpdHktc3RhdGUgYXMgdGhlcmUgYWxzbyBpcyBmb3IgYWxsIG90aGVyCgkJCQkJdGhpbmdz4oCUYW5pbWFscywgcGxhbnRzLCB0b29sczsgZWFjaCBvZiB0aGVzZSBpZiB0b28gc21hbGwgb3IKCQkJCQlleGNlc3NpdmVseSBsYXJnZSB3aWxsIG5vdCBwb3NzZXNzIGl0cyBvd24gcHJvcGVyIGVmZmljaWVuY3ksIGJ1dCBpbiBzb21lIGNhc2VzCgkJCQkJd2lsbCBoYXZlIGVudGlyZWx5IGxvc3QgaXRzIHRydWUgbmF0dXJlIGFuZCBpbiBvdGhlcnMgd2lsbCBiZSBpbiBhIGRlZmVjdGl2ZQoJCQkJCWNvbmRpdGlvbjogZm9yIGluc3RhbmNlLCBhIHNoaXAgYSBzcGFuIGxvbmcgd2lsbCBub3QgYmUgYSBzaGlwIGF0IGFsbCwgbm9yIHdpbGwKCQkJCQlhIHNoaXAgYSBxdWFydGVyIG9mIGEgbWlsZSBsb25nLCBhbmQgZXZlbiB3aGVuIGl0IHJlYWNoZXMgYSBjZXJ0YWluIHNpemUsCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTMyNmIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmluIHNvbWUgY2FzZXMgc21hbGxuZXNzIGFuZCBpbiBvdGhlcnMgZXhjZXNzaXZlIGxhcmdlbmVzcyB3aWxsCgkJCQkJbWFrZSBpdCBzYWlsIGJhZGx5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5TaW1pbGFybHkgYQoJCQkJCXN0YXRlIGNvbnNpc3Rpbmcgb2YgdG9vIGZldyBwZW9wbGUgd2lsbCBub3QgYmUgc2VsZi1zdWZmaWNpbmcg77yId2hpY2ggaXMKCQkJCQlhbiBlc3NlbnRpYWwgcXVhbGl0eSBvZiBhIHN0YXRl77yJLCBhbmQgb25lIGNvbnNpc3Rpbmcgb2YgdG9vIG1hbnksCgkJCQkJdGhvdWdoIHNlbGYtc3VmZmljaW5nIGluIHRoZSBtZXJlIG5lY2Vzc2FyaWVzLCB3aWxsIGJlIHNvIGluIHRoZSB3YXkgaW4gd2hpY2ggYQoJCQkJCQluYXRpb248bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gcHJlc3VtYWJseSBhbiBFdGhub3MgaW4gdGhlCgkJCQkJCXVzdWFsIHNlbnNlLCBhIGNvbW11bml0eSBjb21wb3NlZCBvZiB2aWxsYWdlcyBsb29zZWx5IGJvdW5kIHRvZ2V0aGVyIGJ5CgkJCQkJCXJlbGF0aW9uc2hpcCBhbmQgdHJhZGUsIGFuZCB1bml0ZWQgZm9yIGRlZmVuY2UsIGJ1dCBub3QgZm9yIHBvbGl0aWNhbCBsaWZlOwoJCQkJCQlub3QgYW4gRXRobm9zIG9mIGFzc29jaWF0ZWQgY2l0aWVzLjwvbm90ZT4gaXMsIGFuZCBub3QgYXMgYSBzdGF0ZSwgc2luY2UgaXQKCQkJCQl3aWxsIG5vdCBiZSBlYXN5IGZvciBpdCB0byBwb3NzZXNzIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnTigJRmb3Igd2hvCgkJCQkJd2lsbCBjb21tYW5kIGl0cyBvdmVyLXN3b2xsZW4gbXVsdGl0dWRlIGluIHdhcj8gb3Igd2hvIHdpbGwgc2VydmUgYXMgaXRzIGhlcmFsZCwKCQkJCQl1bmxlc3MgaGUgaGF2ZSB0aGUgbHVuZ3Mgb2YgYSBTdGVudG9yPyBJdCBmb2xsb3dzIHRoYXQgdGhlIGxvd2VzdCBsaW1pdCBmb3IgdGhlCgkJCQkJZXhpc3RlbmNlIG9mIGEgc3RhdGUgaXMgd2hlbiBpdCBjb25zaXN0cyBvZiBhIHBvcHVsYXRpb24gdGhhdCByZWFjaGVzIHRoZQoJCQkJCW1pbmltdW0gbnVtYmVyIHRoYXQgaXMgc2VsZi1zdWZmaWNpZW50IGZvciB0aGUgcHVycG9zZSBvZiBsaXZpbmcgdGhlIGdvb2QgbGlmZQoJCQkJCWFmdGVyIHRoZSBtYW5uZXIgb2YgYSBwb2xpdGljYWwgY29tbXVuaXR5LiBJdCBpcyBwb3NzaWJsZSBhbHNvIGZvciBvbmUgdGhhdAoJCQkJCWV4Y2VlZHMgdGhpcyBvbmUgaW4gbnVtYmVyIHRvIGJlIGEgZ3JlYXRlciBzdGF0ZSwgYnV0LCBhcyB3ZSBzYWlkLCB0aGlzCgkJCQkJcG9zc2liaWxpdHkgb2YgaW5jcmVhc2UgaXMgbm90IHdpdGhvdXQgbGltaXQsIGFuZCB3aGF0IHRoZSBsaW1pdCBvZiB0aGUgc3RhdGUncwoJCQkJCWV4cGFuc2lvbiBpcyBjYW4gZWFzaWx5IGJlIHNlZW4gZnJvbSBwcmFjdGljYWwgY29uc2lkZXJhdGlvbnMuIFRoZSBhY3Rpdml0aWVzIG9mCgkJCQkJdGhlIHN0YXRlIGFyZSB0aG9zZSBvZiB0aGUgcnVsZXJzIGFuZCB0aG9zZSBvZiB0aGUgcGVyc29ucyBydWxlZCwgYW5kIHRoZSB3b3JrCgkJCQkJb2YgYSBydWxlciBpcyB0byBkaXJlY3QgdGhlIGFkbWluaXN0cmF0aW9uIGFuZCB0byBqdWRnZSBsYXctc3VpdHM7IGJ1dCBpbiBvcmRlcgoJCQkJCXRvIGRlY2lkZSBxdWVzdGlvbnMgb2YganVzdGljZSBhbmQgaW4gb3JkZXIgdG8gZGlzdHJpYnV0ZSB0aGUgb2ZmaWNlcyBhY2NvcmRpbmcKCQkJCQl0byBtZXJpdCBpdCBpcyBuZWNlc3NhcnkgZm9yIHRoZSBjaXRpemVucyB0byBrbm93IGVhY2ggb3RoZXIncyBwZXJzb25hbAoJCQkJCWNoYXJhY3RlcnMsIHNpbmNlIHdoZXJlIHRoaXMgZG9lcyBub3QgaGFwcGVuIHRvIGJlIHRoZSBjYXNlIHRoZSBidXNpbmVzcyBvZgoJCQkJCWVsZWN0aW5nIG9mZmljaWFscyBhbmQgdHJ5aW5nIGxhdy1zdWl0cyBpcyBib3VuZCB0byBnbyBiYWRseTsgaGFwaGF6YXJkIGRlY2lzaW9uCgkJCQkJaXMgdW5qdXN0IGluIGJvdGggbWF0dGVycywgYW5kIHRoaXM8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm11c3Qgb2J2aW91c2x5IHByZXZhaWwgaW4gYW4gZXhjZXNzaXZlbHkgbnVtZXJvdXMgY29tbXVuaXR5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbHNvIGluIHN1Y2ggYSBjb21tdW5pdHkgaXQgaXMgZWFzeSBmb3IKCQkJCQlmb3JlaWduZXJzIGFuZCByZXNpZGVudCBhbGllbnMgdG8gdXN1cnAgdGhlIHJpZ2h0cyBvZiBjaXRpemVuc2hpcCwgZm9yIHRoZQoJCQkJCWV4Y2Vzc2l2ZSBudW1iZXIgb2YgdGhlIHBvcHVsYXRpb24gbWFrZXMgaXQgbm90IGRpZmZpY3VsdCB0byBlc2NhcGUgZGV0ZWN0aW9uLgoJCQkJCUl0IGlzIGNsZWFyIHRoZXJlZm9yZSB0aGF0IHRoZSBiZXN0IGxpbWl0aW5nIHByaW5jaXBsZSBmb3IgYSBzdGF0ZSBpcyB0aGUKCQkJCQlsYXJnZXN0IGV4cGFuc2lvbiBvZiB0aGUgcG9wdWxhdGlvbiwgd2l0aCBhIHZpZXcgdG8gc2VsZi1zdWZmaWNpZW5jeSB0aGF0IGNhbgoJCQkJCXdlbGwgYmUgdGFrZW4gaW4gYXQgb25lIHZpZXcuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoIG1heSBiZSBvdXIKCQkJCQljb25jbHVzaW9uIG9uIHRoZSBxdWVzdGlvbiBvZiB0aGUgc2l6ZSBvZiB0aGUgc3RhdGUuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5WZXJ5IG11Y2ggdGhlIHNhbWUgaG9sZHMKCQkJCQlnb29kIGFib3V0IGl0cyB0ZXJyaXRvcnkuIEFzIHRvIHRoZSBxdWVzdGlvbiB3aGF0IHBhcnRpY3VsYXIga2luZCBvZiBsYW5kIGl0CgkJCQkJb3VnaHQgdG8gaGF2ZSwgaXQgaXMgY2xlYXIgdGhhdCBldmVyeWJvZHkgd291bGQgY29tbWFuZCB0aGF0IHdoaWNoIGlzIG1vc3QKCQkJCQlzZWxmLXN1ZmZpY2luZyDvvIhhbmQgc3VjaCBpcyBuZWNlc3NhcmlseSB0aGF0IHdoaWNoIGJlYXJzIGV2ZXJ5IHNvcnQgb2YKCQkJCQlwcm9kdWNlLCBmb3Igc2VsZi1zdWZmaWNpZW5jeSBtZWFucyBoYXZpbmcgYSBzdXBwbHkgb2YgZXZlcnl0aGluZyBhbmQgbGFja2luZwoJCQkJCW5vdGhpbmfvvIkuIEluIGV4dGVudCBhbmQgbWFnbml0dWRlIHRoZSBsYW5kIG91Z2h0IHRvIGJlIG9mIGEgc2l6ZSB0aGF0CgkJCQkJd2lsbCBlbmFibGUgdGhlIGluaGFiaXRhbnRzIHRvIGxpdmUgYSBsaWZlIG9mIGxpYmVyYWwgYW5kIGF0IHRoZSBzYW1lIHRpbWUKCQkJCQl0ZW1wZXJhdGUgbGVpc3VyZS4gV2hldGhlciB0aGlzIGxpbWl0aW5nIHByaW5jaXBsZSBpcyByaWdodGx5IG9yIHdyb25nbHkgc3RhdGVkCgkJCQkJbXVzdCBiZSBjb25zaWRlcmVkIG1vcmUgcHJlY2lzZWx5IGxhdGVyIG9uLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBwcm9taXNlIGlzIG5vdCBmdWxmaWxsZWQgaW4gdGhlIHdvcmsgYXMgaXQgaGFzIGNvbWUgZG93biB0byB1cy48L25vdGU+CgkJCQkJd2hlbiB3ZSBjb21lIHRvIHJhaXNlIHRoZSBnZW5lcmFsIHN1YmplY3Qgb2YgcHJvcGVydHkgYW5kIHRoZSBvd25lcnNoaXAgb2YKCQkJCQl3ZWFsdGgs4oCUaG93IGFuZCBpbiB3aGF0IHdheSBpdCBvdWdodCB0byBiZSByZWxhdGVkIHRvIHRoZSBlbXBsb3ltZW50CgkJCQkJb2Ygd2VhbHRoPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgZGlzdGluY3Rpb24gc2VlbXMgdG8gYmUgYmV0d2VlbgoJCQkJCQlvd25pbmcg77yIb3IgcGVyaGFwcyBnZXR0aW5n77yJIHdlYWx0aCBhbmQgdXNpbmcgaXQ7IGJ1dCBhCgkJCQkJCXByb2JhYmxlIGVtZW5kYXRpb24gb2YgdGhlIEdyZWVrIGdpdmVzIOKAmGhvdyB3ZSBvdWdodCB0byBzdGFuZCBpbgoJCQkJCQlyZWxhdGlvbiB0byBpdHMgZW1wbG95bWVudC7igJk8L25vdGU+OyBhYm91dCB0aGlzIHF1ZXN0aW9uIHRoZXJlIGFyZQoJCQkJCW1hbnkgY29udHJvdmVyc2llcywgb3dpbmcgdG8gdGhvc2UgdGhhdCBkcmF3IHVzIHRvd2FyZHMgZWl0aGVyIGV4dHJlbWUgb2YgbGlmZSwKCQkJCQl0aGUgb25lIHNjaG9vbCB0b3dhcmRzIHBhcnNpbW9ueSBhbmQgdGhlIG90aGVyIHRvd2FyZHMgbHV4dXJ5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgcHJvcGVyIGNvbmZpZ3VyYXRpb24gb2YgdGhlIGNvdW50cnkgaXQKCQkJCQlpcyBub3QgZGlmZmljdWx0IHRvIHN0YXRlIO+8iHRob3VnaCB0aGVyZSBhcmUgc29tZSBwb2ludHMgb24gd2hpY2ggdGhlCgkJCQkJYWR2aWNlIG9mIG1pbGl0YXJ5IGV4cGVydHMgYWxzbyBtdXN0IGJlIHRha2Vu77yJOiBvbiB0aGUgb25lIGhhbmQgaXQKCQkJCQlzaG91bGQgYmUgZGlmZmljdWx0IGZvciBlbmVtaWVzIHRvIGludmFkZSBhbmQgZWFzeSBmb3IgdGhlIHBlb3BsZSB0aGVtc2VsdmVzIHRvCgkJCQkJbWFyY2ggb3V0IGZyb20sIDxtaWxlc3RvbmUgbj0iMTMyN2EiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBpbiBhZGRpdGlvbiwgb24gdGhlIG90aGVyIGhhbmQsIHRoZSBzYW1lIHRoaW5nCgkJCQkJaG9sZHMgZ29vZCBvZiB0aGUgdGVycml0b3J5IHRoYXQgd2Ugc2FpZCBhYm91dCB0aGUgc2l6ZSBvZiB0aGUKCQkJCQlwb3B1bGF0aW9u4oCUaXQgbXVzdCBiZSB3ZWxsIGFibGUgdG8gYmUgdGFrZW4gaW4gYXQgb25lIHZpZXcsIGFuZCB0aGF0CgkJCQkJbWVhbnMgYmVpbmcgYSBjb3VudHJ5IGVhc3kgZm9yIG1pbGl0YXJ5IGRlZmVuY2UuIEFzIHRvIHRoZSBzaXRlIG9mIHRoZSBjaXR5LCBpZgoJCQkJCWl0IGlzIHRvIGJlIGlkZWFsbHkgcGxhY2VkLCBpdCBpcyBwcm9wZXIgZm9yIGl0IHRvIGJlIHdlbGwgc2l0dWF0ZWQgd2l0aCByZWdhcmQKCQkJCQlib3RoIHRvIHRoZSBzZWEgYW5kIHRvIHRoZSBjb3VudHJ5LiBPbmUgZGVmaW5pbmcgcHJpbmNpcGxlIGlzIHRoYXQgbWVudGlvbmVkCgkJCQkJCWFib3ZlPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BdCB0aGUgYmVnaW5uaW5nIG9mCgkJCQkJNS4yLjwvbm90ZT7igJR0aGUgY2l0eSBtdXN0IGJlIGluIGNvbW11bmljYXRpb24gd2l0aCBhbGwgcGFydHMgb2YgdGhlCgkJCQkJdGVycml0b3J5IGZvciB0aGUgcHVycG9zZSBvZiBzZW5kaW5nIG91dCBtaWxpdGFyeSBhc3Npc3RhbmNlOyBhbmQgdGhlIHJlbWFpbmluZwoJCQkJCXByaW5jaXBsZSBpcyB0aGF0IGl0IG11c3QgYmUgZWFzaWx5IGFjY2Vzc2libGUgZm9yIHRoZSBjb252ZXlhbmNlIHRvIGl0IG9mIHRoZQoJCQkJCWFncmljdWx0dXJhbCBwcm9kdWNlLCBhbmQgYWxzbyBvZiB0aW1iZXItd29vZCBhbmQgYW55IG90aGVyIHN1Y2ggbWF0ZXJpYWwgdGhhdAoJCQkJCXRoZSBjb3VudHJ5IGhhcHBlbnMgdG8gcG9zc2Vzcy48bWlsZXN0b25lIGVkPSJQIiBuPSI1LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFzIHRvIGNvbW11bmljYXRpb24gd2l0aCB0aGUgc2VhIGl0IGlzIGluCgkJCQkJZmFjdCBtdWNoIGRlYmF0ZWQgd2hldGhlciBpdCBpcyBhZHZhbnRhZ2VvdXMgdG8gd2VsbC1vcmRlcmVkIHN0YXRlcyBvciBoYXJtZnVsLgoJCQkJCUl0IGlzIG1haW50YWluZWQgdGhhdCB0aGUgdmlzaXRzIG9mIHBlcnNvbnMgYnJvdWdodCB1cCB1bmRlciBvdGhlciBpbnN0aXR1dGlvbnMKCQkJCQlhcmUgZGV0cmltZW50YWwgdG8gbGF3IGFuZCBvcmRlciwgYW5kIHNvIGFsc28gaXMgYSBzd29sbGVuIHBvcHVsYXRpb24sIHdoaWNoCgkJCQkJZ3Jvd3Mgb3V0IG9mIHNlbmRpbmcgb3V0IGFicm9hZCBhbmQgcmVjZWl2aW5nIGluIGEgbnVtYmVyIG9mIHRyYWRlcnMsIGJ1dCBpcwoJCQkJCXVuZmF2b3JhYmxlIHRvIGdvb2QgZ292ZXJubWVudC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+Tm93CgkJCQkJaXQgaXMgbm90IGRpZmZpY3VsdCB0byBzZWUgdGhhdCwgaWYgdGhlc2UgY29uc2VxdWVuY2VzIGFyZSBhdm9pZGVkLCBpdCBpcwoJCQkJCWFkdmFudGFnZW91cyBpbiByZXNwZWN0IG9mIGJvdGggc2VjdXJpdHkgYW5kIHRoZSBzdXBwbHkgb2YgbmVjZXNzYXJ5CgkJCQkJCWNvbW1vZGl0aWVzPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50aGF0IHRoZSBjaXR5IGFuZCB0aGUKCQkJCQljb3VudHJ5IHNob3VsZCBoYXZlIGFjY2VzcyB0byB0aGUgc2VhLiBXaXRoIGEgdmlldyB0byBlbmR1cmluZyB3YXJzIG1vcmUgZWFzaWx5CgkJCQkJcGVvcGxlIHRoYXQgYXJlIHRvIGJlIHNlY3VyZSBtdXN0IGJlIGNhcGFibGUgb2YgZGVmZW5zaXZlIG9wZXJhdGlvbnMgb24gYm90aAoJCQkJCWVsZW1lbnRzLCBsYW5kIGFuZCBzZWEsIGFuZCB3aXRoIGEgdmlldyB0byBzdHJpa2luZyBhdCBhc3NhaWxhbnRzLCBldmVuIGlmIGl0IGJlCgkJCQkJbm90IHBvc3NpYmxlIG9uIGJvdGggZWxlbWVudHMsIHlldCB0byBkbyBzbyBvbiBvbmUgb3IgdGhlIG90aGVyIHdpbGwgYmUgbW9yZSBpbgoJCQkJCXRoZSBwb3dlciBvZiBwZW9wbGUgdGhhdCBoYXZlIGFjY2VzcyB0byBib3RoLiBBbmQgdGhlIGltcG9ydGF0aW9uIG9mIGNvbW1vZGl0aWVzCgkJCQkJdGhhdCB0aGV5IGRvIG5vdCBoYXBwZW4gdG8gaGF2ZSBpbiB0aGVpciBvd24gY291bnRyeSBhbmQgdGhlIGV4cG9ydCBvZiB0aGVpcgoJCQkJCXN1cnBsdXMgcHJvZHVjdHMgYXJlIHRoaW5ncyBpbmRpc3BlbnNhYmxlOyBmb3IgdGhlIHN0YXRlIG91Z2h0IHRvIGVuZ2FnZSBpbgoJCQkJCWNvbW1lcmNlIGZvciBpdHMgb3duIGludGVyZXN0LCBidXQgbm90IGZvciB0aGUgaW50ZXJlc3Qgb2YgdGhlIGZvcmVpZ25lci4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS41IiB1bml0PSJMb2ViIGNoYXAiIC8+UGVvcGxlIHRoYXQgdGhyb3cgb3BlbiB0aGVpcgoJCQkJCW1hcmtldCB0byB0aGUgd29ybGQgZG8gc28gZm9yIHRoZSBzYWtlIG9mIHJldmVudWUsIGJ1dCBhIHN0YXRlIHRoYXQgaXMgbm90IHRvCgkJCQkJdGFrZSBwYXJ0IGluIHRoYXQgc29ydCBvZiBwcm9maXQtbWFraW5nIG5lZWQgbm90IHBvc3Nlc3MgYSBncmVhdCBjb21tZXJjaWFsCgkJCQkJcG9ydC4gQnV0IHNpbmNlIGV2ZW4gbm93IHdlIHNlZSBtYW55IGNvdW50cmllcyBhbmQgY2l0aWVzIHBvc3Nlc3Npbmcgc2VhLXBvcnRzCgkJCQkJYW5kIGhhcmJvcnMgY29udmVuaWVudGx5IHNpdHVhdGVkIHdpdGggcmVnYXJkIHRvIHRoZSBjaXR5LCBzbyBhcyBub3QgdG8gZm9ybQoJCQkJCXBhcnQgb2YgdGhlIHNhbWUgdG93bjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUgR3JlZWsKCQkJCQkJc2hvdWxkIGJlIGFsdGVyZWQgdG8gZ2l2ZSDigJhwYXJ0IG9mIHRoZSB0b3duCgkJCQkJCWl0c2VsZi7igJk8L25vdGU+IGFuZCB5ZXQgbm90IHRvIGJlIHRvbyBmYXIgb2ZmLCBidXQgY29tbWFuZGVkIGJ5CgkJCQkJd2FsbHMgYW5kIG90aGVyIGRlZmVuY2Utd29ya3Mgb2YgdGhlIGtpbmQsIGl0IGlzIG1hbmlmZXN0IHRoYXQgaWYgYW55IGFkdmFudGFnZQoJCQkJCWRvZXMgcmVzdWx0IHRocm91Z2ggdGhlIGNvbW11bmljYXRpb24gb2YgY2l0eSB3aXRoIHBvcnQgdGhlIHN0YXRlIHdpbGwgcG9zc2VzcwoJCQkJCXRoaXMgYWR2YW50YWdlLCBhbmQgaWYgdGhlcmUgaXMgYW55IGhhcm1mdWwgcmVzdWx0IGl0IGlzIGVhc3kgdG8gZ3VhcmQgYWdhaW5zdAoJCQkJCWl0IGJ5IG1lYW5zIG9mIGxhd3Mgc3RhdGluZyBhbmQgcmVndWxhdGluZyB3aGF0IHBlcnNvbnMgYXJlIG5vdCBhbmQgd2hhdCBwZXJzb25zCgkJCQkJYXJlIHRvIGhhdmUgaW50ZXJjb3Vyc2Ugd2l0aCBvbmUgYW5vdGhlci4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS42IiB1bml0PSJMb2ViIGNoYXAiIC8+T24gdGhlIHF1ZXN0aW9uIG9mIG5hdmFsIGZvcmNlcywgdGhlcmUgaXMgbm8gZG91YnQgdGhhdCB0bwoJCQkJCXBvc3Nlc3MgdGhlbSB1cCB0byBhIGNlcnRhaW4gc3RyZW5ndGggaXMgbW9zdCBkZXNpcmFibGUgPG1pbGVzdG9uZSBuPSIxMzI3YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+77yIZm9yIGEKCQkJCQlzdGF0ZSBvdWdodCB0byBiZSBmb3JtaWRhYmxlLCBhbmQgYWxzbyBjYXBhYmxlIG9mIHRoZSBkZWZlbmNlIG9mIG5vdCBvbmx5IGl0cwoJCQkJCW93biBwZW9wbGUgYnV0IGFsc28gc29tZSBvZiBpdHMgbmVpZ2hib3JzLCBieSBzZWEgYXMgd2VsbCBhcyBieSBsYW5k77yJOwoJCQkJCWJ1dCB3aGVuIHdlIGNvbWUgdG8gdGhlIHF1ZXN0aW9uIG9mIHRoZSBudW1iZXIgYW5kIHNpemUgb2YgdGhpcyBmb3JjZSwgd2UgaGF2ZQoJCQkJCXRvIGNvbnNpZGVyIHRoZSBzdGF0ZSdzIG1hbm5lciBvZiBsaWZlIGlmIGl0IGlzIHRvIGxpdmUgYSBsaWZlIG9mIGxlYWRlcnNoaXAgYW5kCgkJCQkJCWFmZmFpcnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHJlbGF0aW9ucyB3aXRoIG90aGVyCgkJCQkJCXN0YXRlc+KAlGEgYnJvYWRlciB0ZXJtIHRoYW4gaGVnZW1vbnksIGxlYWRlcnNoaXAgb2YgYW4KCQkJCQkJYWxsaWFuY2UuPC9ub3RlPiBpdCBtdXN0IHBvc3Nlc3MgbWFyaXRpbWUgYXMgd2VsbCBhcyBvdGhlciBmb3JjZXMKCQkJCQljb21tZW5zdXJhdGUgd2l0aCBpdHMgYWN0aXZpdGllcy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS43IiB1bml0PSJMb2ViIGNoYXAiIC8+T24KCQkJCQl0aGUgb3RoZXIgaGFuZCBpdCBpcyBub3QgbmVjZXNzYXJ5IGZvciBzdGF0ZXMgdG8gaW5jbHVkZSB0aGUgdGVlbWluZyBwb3B1bGF0aW9uCgkJCQkJdGhhdCBncm93cyB1cCBpbiBjb25uZWN0aW9uIHdpdGggY29tbW9uIHNhaWxvcnMsIGFzIHRoZXJlIGlzIG5vIG5lZWQgZm9yIHRoZXNlCgkJCQkJdG8gYmUgY2l0aXplbnM7IGZvciB0aGUgbWFyaW5lcyBhcmUgZnJlZSBtZW4gYW5kIGFyZSBhIHBhcnQgb2YgdGhlIGluZmFudHJ5LCBhbmQKCQkJCQlpdCBpcyB0aGV5IHdobyBoYXZlIGNvbW1hbmQgYW5kIGNvbnRyb2wgdGhlIGNyZXc7IGFuZCBpZiB0aGVyZSBleGlzdHMgYSBtYXNzIG9mCgkJCQkJdmlsbGFnZXJzIGFuZCB0aWxsZXJzIG9mIHRoZSBzb2lsLCB0aGVyZSBpcyBib3VuZCB0byBiZSBubyBsYWNrIG9mIHNhaWxvcnMgdG9vLgoJCQkJCUluIGZhY3Qgd2Ugc2VlIHRoaXMgc3RhdGUgb2YgdGhpbmcgZXhpc3RpbmcgZXZlbiBub3cgaW4gc29tZSBwbGFjZXMsIGZvcgoJCQkJCWluc3RhbmNlIGluIHRoZSBjaXR5IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA4Mjk5IiBrZXk9InRnbiw3MDA4Mjk5Ij5IZXJhY2xlYTwvcGxhY2VOYW1lPjsgdGhlCgkJCQkJSGVyYWNsZW90ZXMgbWFuIGEgbGFyZ2UgZmxlZXQgb2YgdHJpcmVtZXMsIGFsdGhvdWdoIHRoZXkgcG9zc2VzcyBhIGNpdHkgb2YgYnV0CgkJCQkJbW9kZXJhdGUgc2l6ZSBhcyBjb21wYXJlZCB3aXRoIG90aGVycy48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkxldCBzdWNoCgkJCQkJdGhlbiBiZSBvdXIgY29uY2x1c2lvbnMgYWJvdXQgdGhlIHRlcnJpdG9yaWVzIGFuZCBoYXJib3JzIG9mIGNpdGllcywgYW5kIHRoZQoJCQkJCXNlYSwgYW5kIGFib3V0IG5hdmFsIGZvcmNlcy48bWlsZXN0b25lIGVkPSJQIiBuPSI2LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFib3V0IHRoZSBjaXRpemVuIHBvcHVsYXRpb24sIHdlIHNhaWQKCQkJCQliZWZvcmUgd2hhdCBpcyBpdHMgcHJvcGVyIGxpbWl0IG9mIG51bWJlcnMuIExldCB1cyBub3cgc3BlYWs8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm9mIHdoYXQgb3VnaHQgdG8gYmUgdGhlIGNpdGl6ZW5zJyBuYXR1cmFsCgkJCQkJY2hhcmFjdGVyLiBOb3cgdGhpcyBvbmUgbWlnaHQgYWxtb3N0IGRpc2Nlcm4gYnkgbG9va2luZyBhdCB0aGUgZmFtb3VzIGNpdGllcyBvZgoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IGFuZCBieSBvYnNlcnZpbmcgaG93IHRoZQoJCQkJCXdob2xlIGluaGFiaXRlZCB3b3JsZCBpcyBkaXZpZGVkIHVwIGFtb25nIHRoZSBuYXRpb25zLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+NC4gZmluLjwvbm90ZT4gVGhlIG5hdGlvbnMgaW5oYWJpdGluZyB0aGUgY29sZCBwbGFjZXMgYW5kCgkJCQkJdGhvc2Ugb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDMiIGtleT0idGduLDEwMDAwMDMiPkV1cm9wZTwvcGxhY2VOYW1lPiBhcmUgZnVsbCBvZiBzcGlyaXQgYnV0CgkJCQkJc29tZXdoYXQgZGVmaWNpZW50IGluIGludGVsbGlnZW5jZSBhbmQgc2tpbGwsIHNvIHRoYXQgdGhleSBjb250aW51ZQoJCQkJCWNvbXBhcmF0aXZlbHkgZnJlZSwgYnV0IGxhY2tpbmcgaW4gcG9saXRpY2FsIG9yZ2FuaXphdGlvbiBhbmQgY2FwYWNpdHkgdG8gcnVsZQoJCQkJCXRoZWlyIG5laWdoYm9ycy4gVGhlIHBlb3BsZXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGtleT0idGduLDEwMDAwMDQiPkFzaWE8L3BsYWNlTmFtZT4gb24KCQkJCQl0aGUgb3RoZXIgaGFuZCBhcmUgaW50ZWxsaWdlbnQgYW5kIHNraWxsZnVsIGluIHRlbXBlcmFtZW50LCBidXQgbGFjayBzcGlyaXQsIHNvCgkJCQkJdGhhdCB0aGV5IGFyZSBpbiBjb250aW51b3VzIHN1YmplY3Rpb24gYW5kIHNsYXZlcnkuIEJ1dCB0aGUgR3JlZWsgcmFjZQoJCQkJCXBhcnRpY2lwYXRlcyBpbiBib3RoIGNoYXJhY3RlcnMsIGp1c3QgYXMgaXQgb2NjdXBpZXMgdGhlIG1pZGRsZSBwb3NpdGlvbgoJCQkJCWdlb2dyYXBoaWNhbGx5LCBmb3IgaXQgaXMgYm90aCBzcGlyaXRlZCBhbmQgaW50ZWxsaWdlbnQ7IGhlbmNlIGl0IGNvbnRpbnVlcyB0bwoJCQkJCWJlIGZyZWUgYW5kIHRvIGhhdmUgdmVyeSBnb29kIHBvbGl0aWNhbCBpbnN0aXR1dGlvbnMsIGFuZCB0byBiZSBjYXBhYmxlIG9mCgkJCQkJcnVsaW5nIGFsbCBtYW5raW5kIGlmIGl0IGF0dGFpbnMgY29uc3RpdHV0aW9uYWwgdW5pdHkuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjYuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSBzYW1lIGRpdmVyc2l0eSBhbHNvIGV4aXN0cyBhbW9uZyB0aGUgR3JlZWsgcmFjZXMKCQkJCQljb21wYXJlZCB3aXRoIG9uZSBhbm90aGVyOiBzb21lIGhhdmUgYSBvbmUtc2lkZWQgbmF0dXJlLCBvdGhlcnMgYXJlIGhhcHBpbHkKCQkJCQlibGVuZGVkIGluIHJlZ2FyZCB0byBib3RoIHRoZXNlIGNhcGFjaXRpZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGludGVsbGlnZW5jZSBhbmQgaGlnaCBzcGlyaXQsIGNhcGFjaXR5IGZvciBzZWxmLWdvdmVybm1lbnQgYW5kCgkJCQkJCWNhcGFjaXR5IGZvciBlbXBpcmUuPC9ub3RlPiBJdCBpcyBjbGVhciB0aGVyZWZvcmUgdGhhdCBwZW9wbGUgdGhhdCBhcmUgdG8gYmUKCQkJCQllYXNpbHkgZ3VpZGVkIHRvIHZpcnR1ZSBieSB0aGUgbGF3Z2l2ZXIgbXVzdCBiZSBib3RoIGludGVsbGVjdHVhbCBhbmQgc3Bpcml0ZWQKCQkJCQlpbiB0aGVpciBuYXR1cmUuIEZvciBhcyB0byB3aGF0IGlzIHNhaWQgYnkgY2VydGFpbiBwZXJzb25zIGFib3V0IHRoZSBjaGFyYWN0ZXIKCQkJCQl0aGF0IHNob3VsZCBiZWxvbmcgdG8gdGhlaXIgR3VhcmRpYW5zPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUKCQkJCQkJcnVsaW5nIGNsYXNzIGluIFBsYXRvJ3MgSWRlYWwgU3RhdGUsPGJpYmwgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFJlcC4gMzc1YyIgdmFsaWQ9InllcyI+UGxhdC4gUmVwLgoJCQkJCQkJMzc1YzwvYmlibD4uPC9ub3RlPuKAlHRoZXkgc2hvdWxkIGJlIGFmZmVjdGlvbmF0ZSB0byB0aGVpcgoJCQkJCWZyaWVuZHMgYnV0IGZpZXJjZSB0b3dhcmRzIHN0cmFuZ2Vyc+KAlGl0IGlzIHNwaXJpdCB0aGF0IGNhdXNlcwoJCQkJCWFmZmVjdGlvbmF0ZW5lc3MsIGZvciBzcGlyaXQgaXMgdGhlIGNhcGFjaXR5IG9mIHRoZSBzb3VsIHdoZXJlYnkgd2UgbG92ZS4KCQkJCQkJPG1pbGVzdG9uZSBuPSIxMzI4YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iNi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QSBzaWduIG9mIHRoaXMgaXMKCQkJCQl0aGF0IHNwaXJpdCBpcyBtb3JlIHJvdXNlZCBhZ2FpbnN0IGFzc29jaWF0ZXMgYW5kIGZyaWVuZHMgdGhhbiBhZ2FpbnN0CgkJCQkJc3RyYW5nZXJzLCB3aGVuIGl0IHRoaW5rcyBpdHNlbGYgc2xpZ2h0ZWQuIFRoZXJlZm9yZSBBcmNoaWxvY2h1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QXJjaGlsb2NodXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEwMjMiIGtleT0idGduLDcwMTEwMjMiPlBhcm9zPC9wbGFjZU5hbWU+IO+8iG9uZSBvZiB0aGUgZWFybGllc3QgbHlyaWMgcG9ldHMsIGZsLiA8ZGF0ZSBhdXRobmFtZT0iLTYwMCIgdmFsdWU9Ii02MDAiPjYwMDwvZGF0ZT4gQi5DLiwgdGhlIGludmVudG9yIG9mIHRoZSBpYW1iaWMgbWV0ZXIsIHdoaWNoIGhlCgkJCQkJCXVzZWQgZm9yIGxhbXBvb25z77yJLCBmci4gNjEgQmVyZ2ssIDY3NiBEaWVobCwgNjcKCQkJCQkJCUVkbW9uZHMsPHRpdGxlPkVsZWd5IGFuZCBJYW1idXM8L3RpdGxlPiwgMi4gMTMzLjwvbm90ZT4gZm9yIGluc3RhbmNlLAoJCQkJCXdoZW4gcmVwcm9hY2hpbmcgaGlzIGZyaWVuZHMsIGFwcHJvcHJpYXRlbHkgYXBvc3Ryb3BoaXplcyBoaXMgc3Bpcml0OiA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9Imx5cmljIj5Gb3IgJ3RpcyB0aHkgZnJpZW5kcyB0aGF0IG1ha2UgdGhlZSBjaG9rZSB3aXRoIHJhZ2UuPC9sPgoJCQkJCTwvcXVvdGU+IE1vcmVvdmVyIGl0IGlzIGZyb20gdGhpcyBmYWN1bHR5IHRoYXQgcG93ZXIgdG8gY29tbWFuZCBhbmQgbG92ZSBvZgoJCQkJCWZyZWVkb20gYXJlIGluIGFsbCBjYXNlcyBkZXJpdmVkOyBmb3Igc3Bpcml0IGlzIGEgY29tbWFuZGluZyBhbmQgaW5kb21pdGFibGUKCQkJCQllbGVtZW50LiBCdXQgaXQgaXMgYSBtaXN0YWtlIHRvIGRlc2NyaWJlIHRoZSBHdWFyZGlhbnMgYXMgY3J1ZWwgdG93YXJkcwoJCQkJCXN0cmFuZ2VyczsgaXQgaXMgbm90IHJpZ2h0IHRvIGJlIGNydWVsIHRvd2FyZHMgYW55Ym9keSwgYW5kIG1lbiBvZiBncmVhdC1zb3VsZWQKCQkJCQluYXR1cmUgYXJlIG5vdCBmaWVyY2UgZXhjZXB0IHRvd2FyZHMgd3Jvbmdkb2VycywgYW5kIHRoZWlyIGFuZ2VyIGlzIHN0aWxsCgkJCQkJZmllcmNlciBhZ2FpbnN0IHRoZWlyIGNvbXBhbmlvbnMgaWYgdGhleSB0aGluayB0aGF0IHRoZXNlIGFyZSB3cm9uZ2luZyB0aGVtLCBhcwoJCQkJCWhhcyBiZWVuIHNhaWQgYmVmb3JlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI2LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhpcyBpcwoJCQkJCXJlYXNvbmFibGUsIGJlY2F1c2UgdGhleSB0aGluayB0aGF0IGluIGFkZGl0aW9uIHRvIHRoZSBoYXJtIGRvbmUgdGhlbSB0aGV5IGFyZQoJCQkJCWFsc28gYmVpbmcgZGVmcmF1ZGVkIG9mIGEgYmVuZWZpdCBieSBwZXJzb25zIHdob20gdGhleSBiZWxpZXZlIHRvIG93ZSB0aGVtIG9uZS4KCQkJCQlIZW5jZSB0aGUgc2F5aW5ncyA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9Imx5cmljIj5Gb3IgYnJvdGhlcnMnIHdhcnMgYXJlIGNydWVsLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgZGVmYXVsdD0iTk8iIG49IkV1ci4gRnIuIDk2NSI+RXVyLiBmcmFnLgoJCQkJCQkJOTY1PC9iaWJsPi48L25vdGU+PC9sPgoJCQkJCTwvcXVvdGU+IGFuZCA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9ImlhbWJpYyI+VGhleSB0aGF0IHRvbyBkZWVwbHkgbG92ZWQgdG9vIGRlZXBseSBoYXRlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCQkJPGJpYmwgZGVmYXVsdD0iTk8iIG49IkV1ci4gRnIuIDc4Ij5OYXVjayBmcmFnLiA3ODwvYmlibD4KCQkJCQkJCTwvbm90ZT48L2w+CgkJCQkJPC9xdW90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlIGhhdmUgbm93IGFwcHJveGltYXRlbHkgZGVjaWRlZCB3aGF0IGFyZSB0aGUKCQkJCQlwcm9wZXIgbnVtYmVycyBhbmQgdGhlIG5hdHVyYWwgcXVhbGl0aWVzIG9mIHRob3NlIHdobyBleGVyY2lzZSB0aGUgcmlnaHQgb2YKCQkJCQljaXRpemVucywgYW5kIHRoZSBwcm9wZXIgZXh0ZW50IGFuZCBuYXR1cmUgb2YgdGhlIHRlcnJpdG9yeSDvvIhmb3Igd2UKCQkJCQltdXN0IG5vdDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+c2VlayB0byBhdHRhaW4gdGhlIHNhbWUKCQkJCQlleGFjdG5lc3MgYnkgbWVhbnMgb2YgdGhlb3JldGljYWwgZGlzY3Vzc2lvbnMgYXMgaXMgb2J0YWluZWQgYnkgbWVhbnMgb2YgdGhlCgkJCQkJZmFjdHMgdGhhdCBjb21lIHRvIHVzIHRocm91Z2ggc2Vuc2UtcGVyY2VwdGlvbnPvvIkuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgc2luY2UsIGp1c3QgYXMKCQkJCQl3aXRoIGFsbCBvdGhlciBuYXR1cmFsIG9yZ2FuaXNtcyB0aG9zZSB0aGluZ3MgdGhhdCBhcmUgaW5kaXNwZW5zYWJsZSBmb3IgdGhlCgkJCQkJZXhpc3RlbmNlIG9mIHRoZSB3aG9sZSBhcmUgbm90IHBhcnRzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuCgkJCQkJCXRoZXkgYXJlIG5vdCA8ZW1waD5hbGwgb2YgdGhlbTwvZW1waD5wYXJ0czogdGhlIOKAmHBhcnRz4oCZCgkJCQkJCW9mIGEgdGhpbmcgYXJlIGFtb25nIHRoZSDigJhpbmRpc3BlbnNhYmxlIGNvbmRpdGlvbnPigJkgb2YKCQkJCQkJaXRzIGV4aXN0ZW5jZSwgYnV0IHRoZXJlIGFyZSBvdGhlcnMgYWxzby48L25vdGU+IG9mIHRoZSB3aG9sZSBvcmdhbml6YXRpb24sCgkJCQkJaXQgaXMgYWxzbyBjbGVhciB0aGF0IG5vdCBhbGwgdGhlIHRoaW5ncyB0aGF0IGFyZSBuZWNlc3NhcnkgZm9yIHN0YXRlcyB0bwoJCQkJCXBvc3Nlc3MgYXJlIHRvIGJlIGNvdW50ZWQgYXMgcGFydHMgb2YgYSBzdGF0ZSDvvIhhbnkgbW9yZSB0aGFuIHRoaXMgaXMgc28KCQkJCQl3aXRoIGFueSBvdGhlciBhc3NvY2lhdGlvbiB0aGF0IGZvcm1zIHNvbWV0aGluZyBvbmUgaW4ga2luZCwgZm9yIHRoZXJlIG11c3QgYmUKCQkJCQlzb21ldGhpbmcgdGhhdCBpcyBvbmUgYW5kIGNvbW1vbiBhbmQgdGhlIHNhbWUgZm9yIHRoZSBwYXJ0bmVycywgd2hldGhlciB0aGUKCQkJCQlzaGFyZXMgdGhhdCB0aGV5IHRha2UgYmUgZXF1YWwgb3IgdW5lcXVhbDogZm9yIGV4YW1wbGUgdGhpcyBjb21tb24gcHJvcGVydHkgbWF5CgkJCQkJYmUgZm9vZCBvciBhbiBhcmVhIG9mIGxhbmQgb3Igc29tZXRoaW5nIGVsc2Ugb2YgdGhlIHNhbWUgc29ydOKAlDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHNlbnRlbmNlIGlzIHVuZmluaXNoZWQuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjcuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCB3aGVuIG9mIHR3byByZWxhdGVkIHRoaW5ncyBvbmUKCQkJCQlpcyBhIG1lYW5zIGFuZCB0aGUgb3RoZXIgYW4gZW5kLCBpbiB0aGVpciBjYXNlIHRoZXJlIGlzIG5vdGhpbmcgaW4gY29tbW9uIGV4Y2VwdAoJCQkJCWZvciB0aGUgb25lIHRvIGFjdCBhbmQgdGhlIG90aGVyIHRvIHJlY2VpdmUgdGhlIGFjdGlvbi4gSSBtZWFuIGZvciBpbnN0YW5jZSB0aGUKCQkJCQlyZWxhdGlvbiBiZXR3ZWVuIGFueSBpbnN0cnVtZW50IG9yIGFydGlmaWNlciBhbmQgdGhlIHdvcmsgdGhhdCB0aGV5IHByb2R1Y2U6CgkJCQkJYmV0d2VlbiBhIGhvdXNlIGFuZCBhIGJ1aWxkZXIgdGhlcmUgaXMgbm90aGluZyB0aGF0IGlzIHByb2R1Y2VkIGluIGNvbW1vbiwgYnV0CgkJCQkJdGhlIGJ1aWxkZXIncyBjcmFmdCBleGlzdHMgZm9yIHRoZSBzYWtlIG9mIHRoZSBob3VzZS4gSGVuY2UgYWx0aG91Z2ggc3RhdGVzIG5lZWQKCQkJCQlwcm9wZXJ0eSwgdGhlIHByb3BlcnR5IGlzIG5vIHBhcnQgb2YgdGhlIHN0YXRlLiBBbmQgdGhlcmUgYXJlIG1hbnkgbGl2aW5nIHRoaW5ncwoJCQkJCXRoYXQgZmFsbCB1bmRlciB0aGUgaGVhZCBvZiBwcm9wZXJ0eS48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBvc3NpYmx5IHRoZSB3b3JkcyBmcm9tIHRoZSBiZWdpbm5pbmcgb2YgNy4yIOKAmEJ1dCB3aGVu4oCZCgkJCQkJCXRvIHRoaXMgcG9pbnQgc2hvdWxkIGJlIHRyYW5zZmVycmVkIGJlbG93IHRvIDcuMyBtaWQuIGFmdGVyCgkJCQkJCeKAmGRpZmZlcmVudCBjb25zdGl0dXRpb25zLuKAmTwvbm90ZT4gQW5kIHRoZSBzdGF0ZSBpcyBvbmUKCQkJCQlmb3JtIG9mIHBhcnRuZXJzaGlwIG9mIHNpbWlsYXIgcGVvcGxlLCBhbmQgaXRzIG9iamVjdCBpcyB0aGUgYmVzdCBsaWZlIHRoYXQgaXMKCQkJCQlwb3NzaWJsZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHNpbmNlIHRoZSBncmVhdGVzdAoJCQkJCWdvb2QgaXMgaGFwcGluZXNzLCBhbmQgdGhpcyBpcyBzb21lIHBlcmZlY3QgYWN0aXZpdHkgb3IgZW1wbG95bWVudCBvZiB2aXJ0dWUsCgkJCQkJYW5kIHNpbmNlIGl0IGhhcyBzbyBjb21lIGFib3V0IHRoYXQgaXQgaXMgcG9zc2libGUgZm9yIHNvbWUgbWVuIHRvIHBhcnRpY2lwYXRlCgkJCQkJaW4gaXQsIGJ1dCBmb3Igb3RoZXJzIG9ubHkgdG8gYSBzbWFsbCBleHRlbnQgb3Igbm90IGF0IGFsbCwgaXQgaXMgY2xlYXIgdGhhdAoJCQkJCXRoaXMgaXMgdGhlIGNhdXNlIGZvciB0aGVyZSBhcmlzaW5nIGRpZmZlcmVudCBraW5kcyBhbmQgdmFyaWV0aWVzIG9mIHN0YXRlIGFuZAoJCQkJCXNldmVyYWwgZm9ybXMgb2YgY29uc3RpdHV0aW9uOyA8bWlsZXN0b25lIG49IjEzMjhiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5mb3IgYXMgZWFjaCBzZXQgb2YgcGVvcGxlIHB1cnN1ZXMKCQkJCQlwYXJ0aWNpcGF0aW9uIGluIGhhcHBpbmVzcyBpbiBhIGRpZmZlcmVudCBtYW5uZXIgYW5kIGJ5IGRpZmZlcmVudCBtZWFucyB0aGV5CgkJCQkJbWFrZSBmb3IgdGhlbXNlbHZlcyBkaWZmZXJlbnQgbW9kZXMgb2YgbGlmZSBhbmQgZGlmZmVyZW50IGNvbnN0aXR1dGlvbnMuIEFuZCB3ZQoJCQkJCW11c3QgYWxzbyBmdXJ0aGVyIGNvbnNpZGVyIGhvdyBtYW55IHRoZXJlIGFyZSBvZiB0aGVzZSB0aGluZ3MgcmVmZXJyZWQgdG8gdGhhdAoJCQkJCWFyZSBpbmRpc3BlbnNhYmxlIGZvciB0aGUgZXhpc3RlbmNlIG9mIGEgc3RhdGU7IGZvciBhbW9uZyB0aGVtIHdpbGwgYmUgdGhlCgkJCQkJdGhpbmdzIHdoaWNoIHdlIHByb25vdW5jZSB0byBiZSBwYXJ0cyBvZiBhIHN0YXRlLCBvd2luZyB0byB3aGljaCB0aGVpciBwcmVzZW5jZQoJCQkJCWlzIGVzc2VudGlhbC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy40IiB1bml0PSJMb2ViIGNoYXAiIC8+V2UgbXVzdCB0aGVyZWZvcmUKCQkJCQljb25zaWRlciB0aGUgbGlzdCBvZiBvY2N1cGF0aW9ucyB0aGF0IGEgc3RhdGUgcmVxdWlyZXMgOiBmb3IgZnJvbSB0aGVzZSBpdCB3aWxsCgkJCQkJYXBwZWFyIHdoYXQgdGhlIGluZGlzcGVuc2FibGUgY2xhc3NlcyBhcmUuIEZpcnN0IHRoZW4gYSBzdGF0ZSBtdXN0IGhhdmUgYSBzdXBwbHkKCQkJCQlvZiBmb29kOyBzZWNvbmRseSwgaGFuZGljcmFmdHMg77yIc2luY2UgbGlmZSBuZWVkcyBtYW55IHRvb2xz77yJOwoJCQkJCXRoaXJkLCBhcm1zIO+8iHNpbmNlIHRoZSBtZW1iZXJzIG9mIHRoZSBhc3NvY2lhdGlvbiBtdXN0IG5lY2Vzc2FyaWx5CgkJCQkJcG9zc2VzcyBhcm1zIGJvdGggdG8gdXNlIGFtb25nIHRoZW1zZWx2ZXMgYW5kIGZvciBwdXJwb3NlcyBvZiBnb3Zlcm5tZW50LCBpbgoJCQkJCWNhc2VzIG9mIGluc3Vib3JkaW5hdGlvbiwgYW5kIHRvIGVtcGxveSBhZ2FpbnN0IHRob3NlIHdobyB0cnkgdG8gbW9sZXN0IHRoZW0KCQkJCQlmcm9tIHdpdGhvdXTvvIk7IGFsc28gYSBjZXJ0YWluIGFidW5kYW5jZSBvZiBtb25leSwgaW4gb3JkZXIgdGhhdCB0aGV5CgkJCQkJbWF5IGhhdmUgZW5vdWdoIGJvdGggZm9yIHRoZWlyIGludGVybmFsIG5lZWRzIGFuZCBmb3IgcmVxdWlyZW1lbnRzIG9mIHdhcjsKCQkJCQlmaWZ0aCwgYSBwcmltYXJ5IG5lZWQsIHRoZSBzZXJ2aWNlIG9mIHJlbGlnaW9uLCB0ZXJtZWQgYSBwcmllc3Rob29kOyBhbmQgc2l4dGgKCQkJCQlpbiBudW1iZXIgYW5kIG1vc3QgbmVjZXNzYXJ5IG9mIGFsbCwgYSBwcm92aXNpb24gZm9yIGRlY2lkaW5nIHF1ZXN0aW9ucyBvZgoJCQkJCWludGVyZXN0cyBhbmQgb2YgcmlnaHRzIGJldHdlZW4gdGhlIGNpdGl6ZW5zLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVzZSB0aGVuIGFyZSB0aGUgb2NjdXBhdGlvbnMgdGhhdCB2aXJ0dWFsbHkgZXZlcnkgc3RhdGUKCQkJCQlyZXF1aXJlcyDvvIhmb3IgdGhlIHN0YXRlIGlzIG5vdCBhbnkgY2hhbmNlIG11bHRpdHVkZSBvZiBwZW9wbGUgYnV0IG9uZQoJCQkJCXNlbGYtc3VmZmljaWVudCBmb3IgdGhlIG5lZWRzIG9mIGxpZmUsIGFzIHdlIHNheSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiBCb29rcyAyLjEuNywgMy4xLjgsIDUuMi4xMC48L25vdGU+IGFuZCBpZiBhbnkgb2YgdGhlc2UKCQkJCQlpbmR1c3RyaWVzIGhhcHBlbnMgdG8gYmUgd2FudGluZywgaXQgaXMgaW1wb3NzaWJsZSBmb3IgdGhhdCBhc3NvY2lhdGlvbiB0byBiZQoJCQkJCWFic29sdXRlbHkgc2VsZi1zdWZmaWNpZW5077yJLiBJdCBpcyBuZWNlc3NhcnkgdGhlcmVmb3JlIGZvciB0aGUgc3RhdGUgdG8KCQkJCQliZSBvcmdhbml6ZWQ8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm9uIHRoZSBsaW5lcyBvZiB0aGVzZQoJCQkJCWZ1bmN0aW9uczsgY29uc2VxdWVudGx5IGl0IG11c3QgcG9zc2VzcyBhIG51bWJlciBvZiBmYXJtZXJzIHdobyB3aWxsIHByb3ZpZGUgdGhlCgkJCQkJZm9vZCwgYW5kIGNyYWZ0c21lbiwgYW5kIHRoZSBtaWxpdGFyeSBjbGFzcywgYW5kIHRoZSB3ZWFsdGh5LCBhbmQgcHJpZXN0cyBhbmQKCQkJCQlqdWRnZXMgdG8gZGVjaWRlIHF1ZXN0aW9ucyBvZiBuZWNlc3NpdHk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdGhlIHRleHQgc2hvdWxkIGJlIGFsdGVyZWQgdG8gZ2l2ZSDigJhtYXR0ZXJzIG9mCgkJCQkJCWp1c3RpY2Uu4oCZPC9ub3RlPiBhbmQgb2YgaW50ZXJlc3RzLjxtaWxlc3RvbmUgZWQ9IlAiIG49IjguMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlc2UgbWF0dGVycyBoYXZpbmcgYmVlbgoJCQkJCXNldHRsZWQsIGl0IHJlbWFpbnMgdG8gY29uc2lkZXIgd2hldGhlciBldmVyeWJvZHkgaXMgdG8gdGFrZSBwYXJ0IGluIGFsbCBvZgoJCQkJCXRoZXNlIGZ1bmN0aW9ucyDvvIhmb3IgaXQgaXMgcG9zc2libGUgZm9yIHRoZSB3aG9sZSBvZiB0aGUgcGVvcGxlIHRvIGJlCgkJCQkJYXQgb25jZSBmYXJtZXJzIGFuZCBjcmFmdHNtZW4gYW5kIHRoZSBjb3VuY2lsbG9ycyBhbmQganVkZ2Vz77yJLCBvcgoJCQkJCXdoZXRoZXIgd2UgYXJlIHRvIGFzc3VtZSBkaWZmZXJlbnQgY2xhc3NlcyBjb3JyZXNwb25kaW5nIHRvIGVhY2ggb2YgdGhlCgkJCQkJZnVuY3Rpb25zIG1lbnRpb25lZCwgb3Igd2hldGhlciBzb21lIG9mIHRoZW0gbXVzdCBuZWNlc3NhcmlseSBiZSBzcGVjaWFsaXplZCBhbmQKCQkJCQlvdGhlcnMgY29tYmluZWQuIEJ1dCBpdCB3aWxsIG5vdCBiZSB0aGUgc2FtZSBpbiBldmVyeSBmb3JtIG9mIGNvbnN0aXR1dGlvbjsgZm9yLAoJCQkJCWFzIHdlIHNhaWQsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gQm9vayA0LjQgYW5kIDE0Ljwvbm90ZT4gaXQgaXMKCQkJCQlwb3NzaWJsZSBlaXRoZXIgZm9yIGFsbCB0aGUgcGVvcGxlIHRvIHRha2UgcGFydCBpbiBhbGwgdGhlIGZ1bmN0aW9ucyBvciBmb3Igbm90CgkJCQkJYWxsIHRvIHRha2UgcGFydCBpbiBhbGwgYnV0IGZvciBjZXJ0YWluIHBlb3BsZSB0byBoYXZlIGNlcnRhaW4gZnVuY3Rpb25zLiBJbgoJCQkJCWZhY3QgdGhlc2UgZGlmZmVyZW50IGRpc3RyaWJ1dGlvbnMgb2YgZnVuY3Rpb25zIGFyZSB0aGUgY2F1c2Ugb2YgdGhlIGRpZmZlcmVuY2UKCQkJCQliZXR3ZWVuIGNvbnN0aXR1dGlvbnM6IGRlbW9jcmFjaWVzIGFyZSBzdGF0ZXMgaW4gd2hpY2ggYWxsIHRoZSBwZW9wbGUKCQkJCQlwYXJ0aWNpcGF0ZSBpbiBhbGwgdGhlIGZ1bmN0aW9ucywgb2xpZ2FyY2hpZXMgd2hlcmUgdGhlIGNvbnRyYXJ5IGlzIHRoZSBjYXNlLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSI4LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgYXQgcHJlc2VudCB3ZSBhcmUgc3R1ZHlpbmcKCQkJCQl0aGUgYmVzdCBjb25zdGl0dXRpb24sIGFuZCB0aGlzIGlzIHRoZSBjb25zdGl0dXRpb24gdW5kZXIgd2hpY2ggdGhlIHN0YXRlIHdvdWxkCgkJCQkJYmUgbW9zdCBoYXBweSwgYW5kIGl0IGhhcyBiZWVuIHN0YXRlZCBiZWZvcmU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjEuNS48L25vdGU+IHRoYXQgaGFwcGluZXNzIGNhbm5vdCBiZSBmb3J0aGNvbWluZyB3aXRob3V0IHZpcnR1ZTsgaXQgaXMKCQkJCQl0aGVyZWZvcmUgY2xlYXIgZnJvbSB0aGVzZSBjb25zaWRlcmF0aW9ucyB0aGF0IGluIHRoZSBtb3N0IG5vYmx5IGNvbnN0aXR1dGVkCgkJCQkJc3RhdGUsIGFuZCB0aGUgb25lIHRoYXQgcG9zc2Vzc2VzIG1lbiB0aGF0IGFyZSBhYnNvbHV0ZWx5IGp1c3QsIG5vdCBtZXJlbHkganVzdAoJCQkJCXJlbGF0aXZlbHkgdG8gdGhlIHByaW5jaXBsZSB0aGF0IGlzIHRoZSBiYXNpcyBvZiB0aGUgY29uc3RpdHV0aW9uLCB0aGUgY2l0aXplbnMKCQkJCQltdXN0IG5vdCBsaXZlIGEgbWVjaGFuaWMgb3IgYSBtZXJjYW50aWxlIGxpZmUg77yIZm9yIHN1Y2ggYSBsaWZlIGlzCgkJCQkJaWdub2JsZSBhbmQgaW5pbWljYWwgdG8gdmlydHVl77yJLCBub3IgeWV0IG11c3QgdGhvc2Ugd2hvIGFyZSB0byBiZQoJCQkJCWNpdGl6ZW5zIGluIHRoZSBiZXN0IHN0YXRlIGJlIHRpbGxlcnMgb2YgdGhlIHNvaWwgPG1pbGVzdG9uZSBuPSIxMzI5YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+77yIZm9yCgkJCQkJbGVpc3VyZSBpcyBuZWVkZWQgYm90aCBmb3IgdGhlIGRldmVsb3BtZW50IG9mIHZpcnR1ZSBhbmQgZm9yIGFjdGl2ZQoJCQkJCXBhcnRpY2lwYXRpb24gaW4gcG9saXRpY3PvvIkuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjguMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzaW5jZSB0aGUgc3RhdGUgYWxzbyBjb250YWlucyB0aGUgbWlsaXRhcnkgY2xhc3MgYW5kIHRoZSBjbGFzcyB0aGF0CgkJCQkJZGVsaWJlcmF0ZXMgYWJvdXQgbWF0dGVycyBvZiBwb2xpY3kgYW5kIGp1ZGdlcyBxdWVzdGlvbnMgb2YganVzdGljZSwgYW5kIHRoZXNlCgkJCQkJYXJlIG1hbmlmZXN0bHkgaW4gYSBzcGVjaWFsIHNlbnNlIHBhcnRzIG9mIHRoZSBzdGF0ZSwgYXJlIHRoZXNlIGNsYXNzZXMgYWxzbyB0bwoJCQkJCWJlIHNldCBkb3duIGFzIGRpc3RpbmN0IG9yIGFyZSBib3RoIGZ1bmN0aW9ucyB0byBiZSBhc3NpZ25lZCB0byB0aGUgc2FtZQoJCQkJCXBlcnNvbnM/IEJ1dCBoZXJlIGFsc28gdGhlIGFuc3dlciBpcyBjbGVhciwgYmVjYXVzZSBpbiBhIGNlcnRhaW4gc2Vuc2UgdGhleQoJCQkJCXNob3VsZCBiZSBhc3NpZ25lZCB0byB0aGUgc2FtZSBwZXJzb25zLCBidXQgaW4gYSBjZXJ0YWluIHNlbnNlIHRvIGRpZmZlcmVudAoJCQkJCW9uZXMuIEluYXNtdWNoIGFzIGVhY2ggb2YgdGhlc2UgdHdvIGZ1bmN0aW9ucyBiZWxvbmdzIHRvIGEgZGlmZmVyZW50IHByaW1lIG9mCgkJCQkJbGlmZSwgYW5kIG9uZSByZXF1aXJlcyB3aXNkb20sIHRoZSBvdGhlciBzdHJlbmd0aCwgdGhleSBhcmUgdG8gYmUgYXNzaWduZWQgdG8KCQkJCQlkaWZmZXJlbnQgcGVvcGxlOyBidXQgaW5hc211Y2ggYXMgaXQgaXMgYSB0aGluZyBpbXBvc3NpYmxlIHRoYXQgd2hlbiBhIHNldCBvZgoJCQkJCW1lbiBhcmUgYWJsZSB0byBlbXBsb3kgZm9yY2UgYW5kIHRvIHJlc2lzdCBjb250cm9sLCB0aGVzZSBzaG91bGQgc3VibWl0IGFsd2F5cwoJCQkJCXRvIGJlIHJ1bGVkLCBmcm9tIHRoaXMgcG9pbnQgb2YgdmlldyBib3RoIGZ1bmN0aW9ucyBtdXN0IGJlIGFzc2lnbmVkIHRvIHRoZSBzYW1lCgkJCQkJcGVvcGxlOyBmb3IgdGhvc2Ugd2hvIGhhdmUgdGhlIHBvd2VyIG9mIGFybXMgaGF2ZSB0aGUgcG93ZXIgdG8gZGVjaWRlIHdoZXRoZXIKCQkJCQl0aGUgY29uc3RpdHV0aW9uIHNoYWxsIHN0YW5kIG9yIGZhbGwuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjguNCIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSBvbmx5IGNvdXJzZSBsZWZ0IHRoZW0gaXMgdG8gYXNzaWduIHRoaXMgY29uc3RpdHV0aW9uYWwgZnVuY3Rpb24gdG8gYm90aAoJCQkJCXNldHMgb2YgbWVuIHdpdGhvdXQgZGlzdGluY3Rpb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciwgYW1lbmRpbmcKCQkJCQkJdGhpcyBjdXJpb3VzIEdyZWVrLCDigJhmb3IgdGhlIGNvbnN0aXR1dGlvbiB0byBhc3NpZ24gYm90aCB0aGVzZQoJCQkJCQlmdW5jdGlvbnMgdG8gdGhlIHNhbWUgcGVvcGxlLuKAmTwvbm90ZT4geWV0IG5vdCBzaW11bHRhbmVvdXNseSwgYnV0LAoJCQkJCWFzIGluIHRoZSBuYXR1cmFsIG9yZGVyIG9mIHRoaW5ncyBzdHJlbmd0aCBpcyBmb3VuZCBpbiB0aGUgeW91bmdlciBtZW4gYW5kCgkJCQkJd2lzZG9tIGluIHRoZSBlbGRlciwgaXQgc2VlbXMgdG8gYmUgZXhwZWRpZW50IGFuZCBqdXN0IGZvciB0aGVpciBmdW5jdGlvbnMgdG8gYmUKCQkJCQlhbGxvdHRlZCB0byBib3RoIGluIHRoaXMgd2F5LCBmb3IgdGhpcyBtb2RlIG9mIGRpdmlzaW9uIHBvc3Nlc3NlcyBjb25mb3JtaXR5CgkJCQkJd2l0aCBtZXJpdC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iOC41IiB1bml0PSJMb2ViIGNoYXAiIC8+TW9yZW92ZXIgdGhlIG93bmVyc2hpcAoJCQkJCW9mIHByb3BlcnRpZXMgYWxzbyBtdXN0IGJlIGNlbnRlcmVkIHJvdW5kIHRoZXNlIGNsYXNzZXMsIGZvciB0aGUgY2l0aXplbnMgbXVzdAoJCQkJCW5lY2Vzc2FyaWx5IHBvc3Nlc3MgcGxlbnRpZnVsIG1lYW5zLCBhbmQgdGhlc2UgYXJlIHRoZSBjaXRpemVucy4gRm9yCgkJCQkJCXRoZTxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YXJ0aXNhbiBjbGFzcyBoYXMgbm8gc2hhcmUgaW4KCQkJCQl0aGUgc3RhdGUsIG5vciBoYXMgYW55IG90aGVyIGNsYXNzIHRoYXQgaXMgbm90IOKAmGFuIGFydGlmaWNlciBvZgoJCQkJCQl2aXJ0dWUu4oCZPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIFBsYXRvbmljIHBocmFzZSwKCQkJCQkJCTxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBSZXAuIDUwMGQiIHZhbGlkPSJ5ZXMiPlBsYXQuIFJlcC4gNTAwZDwvYmlibD4uPC9ub3RlPiBBbmQgdGhpcyBpcwoJCQkJCWNsZWFyIGZyb20gb3VyIGJhc2ljIHByaW5jaXBsZTsgZm9yIGluIGNvbmp1bmN0aW9uIHdpdGggdmlydHVlIGhhcHBpbmVzcyBpcwoJCQkJCWJvdW5kIHRvIGJlIGZvcnRoY29taW5nLCBidXQgd2Ugc2hvdWxkIHByb25vdW5jZSBhIHN0YXRlIGhhcHB5IGhhdmluZyByZWdhcmQgbm90CgkJCQkJdG8gYSBwYXJ0aWN1bGFyIHNlY3Rpb24gb2YgaXQgYnV0IHRvIGFsbCBpdHMgY2l0aXplbnMuIEFuZCBpdCBpcyBhbHNvIG1hbmlmZXN0CgkJCQkJdGhhdCB0aGUgcHJvcGVydGllcyBtdXN0IGJlbG9uZyB0byB0aGVzZSBjbGFzc2VzLCBpbmFzbXVjaCBhczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QXMgdGhpcyBpcyBhIG5ldyBwb2ludCwgcGVyaGFwcyB3ZSBzaG91bGQKCQkJCQkJdHJhbnNwb3NlIOKAmGluYXNtdWNoIGFz4oCZIO+8iCA8Zm9yZWlnbiBsYW5nPSJncmVlayI+zrXhvLTPgM61z4E8L2ZvcmVpZ24+77yJIGFuZCDigJh0aGF04oCZIO+8iAoJCQkJCQkJPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPuG9hc+Ezrk8L2ZvcmVpZ24+77yJIGluIHRoZSBsaW5lCgkJCQkJCWFib3ZlLjwvbm90ZT4gaXQgaXMgbmVjZXNzYXJ5IGZvciB0aGUgdGlsbGVycyBvZiB0aGUgc29pbCB0byBiZSBzbGF2ZXMsIG9yCgkJCQkJc2VyZnMgb2YgYWxpZW4gcmFjZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iOC42IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmUgcmVtYWlucwoJCQkJCW9mIHRoZSBsaXN0IGVudW1lcmF0ZWQgdGhlIGNsYXNzIG9mIHByaWVzdHM7IGFuZCB0aGUgcG9zaXRpb24gb2YgdGhpcyBjbGFzcyBhbHNvCgkJCQkJaXMgbWFuaWZlc3QuIFByaWVzdHMgbXVzdCBiZSBhcHBvaW50ZWQgbmVpdGhlciBmcm9tIHRoZSB0aWxsZXJzIG9mIHRoZSBzb2lsIG5vcgoJCQkJCWZyb20gdGhlIGFydGlzYW5zLCBmb3IgaXQgaXMgc2VlbWx5IHRoYXQgdGhlIGdvZHMgc2hvdWxkIGJlIHdvcnNoaXBwZWQgYnkKCQkJCQljaXRpemVuczsgYW5kIHNpbmNlIHRoZSBjaXRpemVuIGJvZHkgaXMgZGl2aWRlZCBpbnRvIHR3byBwYXJ0cywgdGhlIG1pbGl0YXJ5CgkJCQkJY2xhc3MgYW5kIHRoZSBjb3VuY2lsbG9yIGNsYXNzLCBhbmQgYXMgaXQgaXMgc2VlbWx5IHRoYXQgdGhvc2Ugd2hvIGhhdmUKCQkJCQlyZWxpbnF1aXNoZWQgdGhlc2UgZHV0aWVzIG93aW5nIHRvIGFnZSBzaG91bGQgcmVuZGVyIHRvIHRoZSBnb2RzIHRoZWlyIGR1ZQoJCQkJCXdvcnNoaXAgYW5kIHNob3VsZCBzcGVuZCB0aGVpciByZXRpcmVtZW50IGluIHRoZWlyIHNlcnZpY2UsIGl0IGlzIHRvIHRoZXNlIHRoYXQKCQkJCQl0aGUgcHJpZXN0bHkgb2ZmaWNlcyBzaG91bGQgYmUgYXNzaWduZWQuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBoYXZlCgkJCQkJdGhlcmVmb3JlIHN0YXRlZCB0aGUgdGhpbmdzIGluZGlzcGVuc2FibGUgZm9yIHRoZSBjb25zdGl0dXRpb24gb2YgYSBzdGF0ZSwgYW5kCgkJCQkJdGhlIHRoaW5ncyB0aGF0IGFyZSBwYXJ0cyBvZiBhIHN0YXRlOiB0aWxsZXJzIG9mIHRoZSBzb2lsLCBjcmFmdHNtZW4gYW5kIHRoZQoJCQkJCWxhYm9yaW5nIGNsYXNzIGdlbmVyYWxseSBhcmUgYSBuZWNlc3NhcnkgYXBwdXJ0ZW5hbmNlIG9mIHN0YXRlcywgYnV0IHRoZQoJCQkJCW1pbGl0YXJ5IGFuZCBkZWxpYmVyYXRpdmUgY2xhc3NlcyBhcmUgcGFydHMgb2YgdGhlIHN0YXRlOyBhbmQgbW9yZW92ZXIgZWFjaCBvZgoJCQkJCXRoZXNlIGRpdmlzaW9ucyBpcyBzZXBhcmF0ZSBmcm9tIHRoZSBvdGhlcnMsIGVpdGhlciBwZXJtYW5lbnRseSBvciBieSB0dXJuLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGUg4oCYYXBwdXJ0ZW5hbmNlc+KAmQoJCQkJCQlhcmUgcGVybWFuZW50bHkgc2VwYXJhdGUgZm9ybSB0aGUgYXJteSBhbmQgdGhlIGRlbGliZXJhdGl2ZSwgd2hpY2ggYXJlIHRoZQoJCQkJCQnigJhwYXJ0cyzigJkgYW5kIHdoaWNoIGFyZSBzZXBhcmF0ZSBmcm9tIGVhY2ggb3RoZXIgb25seQoJCQkJCQnigJhieSB0dXJuLOKAmSBpLmUuIGEgY2l0aXplbiBwYXNzZXMgb24gZnJvbSBvbmUgdG8gdGhlCgkJCQkJCW90aGVyLjwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZAoJCQkJCXRoYXQgaXQgaXMgcHJvcGVyIGZvciB0aGUgc3RhdGUgdG8gYmUgZGl2aWRlZCB1cCBpbnRvIGNhc3RlcyBhbmQgZm9yIHRoZQoJCQkJCW1pbGl0YXJ5IGNsYXNzIHRvIGJlIGRpc3RpbmN0IGZyb20gdGhhdCBvZiB0aGUgdGlsbGVycyBvZiB0aGUgc29pbCA8bWlsZXN0b25lIG49IjEzMjliIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5kb2VzIG5vdAoJCQkJCXNlZW0gdG8gYmUgYSBkaXNjb3Zlcnkgb2YgcG9saXRpY2FsIHBoaWxvc29waGVycyBvZiB0b2RheSBvciBvbmUgbWFkZQoJCQkJCQlyZWNlbnRseS48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdG8gYmUgcmVhZCBhcyBkZW55aW5nCgkJCQkJCXRoZSBvcmlnaW5hbGl0eSBvZiBQbGF0bydzPHRpdGxlPlJlcHVibGljPC90aXRsZT4uPC9ub3RlPiBJbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjgzMyIga2V5PSJ0Z24sNzAxNjgzMyI+RWd5cHQ8L3BsYWNlTmFtZT4gdGhpcyBhcnJhbmdlbWVudCBzdGlsbCBleGlzdHMgZXZlbiBub3csCgkJCQkJYXMgYWxzbyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMjA1NiIga2V5PSJ0Z24sNzAxMjA1NiI+Q3JldGU8L3BsYWNlTmFtZT47IGl0IGlzIHNhaWQgdG8gaGF2ZQoJCQkJCWJlZW4gZXN0YWJsaXNoZWQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGtleT0idGduLDcwMTY4MzMiPkVneXB0PC9wbGFjZU5hbWU+IGJ5IHRoZQoJCQkJCWxlZ2lzbGF0aW9uIG9mIFNlc29zdHJpcyBhbmQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIwNTYiIGtleT0idGduLDcwMTIwNTYiPkNyZXRlPC9wbGFjZU5hbWU+CgkJCQkJYnkgdGhhdCBvZiBNaW5vcy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iOS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+Q29tbW9uIG1lYWxzIGFsc28KCQkJCQlzZWVtIHRvIGJlIGFuIGFuY2llbnQgaW5zdGl0dXRpb24sIHRob3NlIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBrZXk9InRnbiw3MDEyMDU2Ij5DcmV0ZTwvcGxhY2VOYW1lPiBoYXZpbmcgYmVndW4gaW4gdGhlIHJlaWduIG9mIE1pbm9zLCB3aGlsZSB0aG9zZSBpbgoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA4MCIga2V5PSJ0Z24sMTAwMDA4MCI+SXRhbHk8L3BsYWNlTmFtZT4gYXJlIG11Y2ggb2xkZXIgdGhhbiB0aGVzZS4KCQkJCQlBY2NvcmRpbmcgdG8gdGhlIGhpc3RvcmlhbnMgb25lIG9mIHRoZSBzZXR0bGVycyB0aGVyZSwgYSBjZXJ0YWluIEl0YWx1cywgYmVjYW1lCgkJCQkJa2luZyBvZiBPZW5vdHJpYSwgYW5kIGZyb20gaGltIHRoZXkgdG9vayB0aGUgbmFtZSBvZiBJdGFsaWFucyBpbnN0ZWFkIG9mIHRoYXQgb2YKCQkJCQlPZW5vdHJpYW5zLCBhbmQgdGhlIG5hbWUgb2YgSXRhbHkgd2FzIGdpdmVuIHRvIGFsbCB0aGF0IHByb21vbnRvcnk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIHNvdXRoLXdlc3QgcGVuaW5zdWxhIG9yIHRvZSBvZgoJCQkJCQlJdGFseS48L25vdGU+IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDAzIiBrZXk9InRnbiwxMDAwMDAzIj5FdXJvcGU8L3BsYWNlTmFtZT4gbHlpbmcKCQkJCQliZXR3ZWVuIHRoZSBHdWxmcyBvZiBTY3lsbGV0aXVtIGFuZCBvZiBMYW1ldHVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGUgR3VsZnMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDQyOTQiIGtleT0idGduLDcwMDQyOTQiPlNxdWlsbGFjZTwvcGxhY2VOYW1lPiBhbmQgRXVmZW1pYS48L25vdGU+IHdoaWNoIGFyZSBoYWxmIGEgZGF5J3MKCQkJCQlqb3VybmV5IGFwYXJ0LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JdCB3YXMgdGhpcyBJdGFsdXMKCQkJCQl0aGVuIHdobyBhY2NvcmRpbmcgdG8gdHJhZGl0aW9uIGNvbnZlcnRlZCB0aGUgT2Vub3RyaWFucyBmcm9tIGEgcGFzdG9yYWwgbGlmZSB0bwoJCQkJCW9uZSBvZiBhZ3JpY3VsdHVyZSBhbmQgZ2F2ZSB0aGVtIHZhcmlvdXMgb3JkaW5hbmNlcywgYmVpbmcgdGhlIGZpcnN0IHRvCgkJCQkJaW5zdGl0dXRlIHRoZWlyIHN5c3RlbSBvZiBjb21tb24gbWVhbHM7IGhlbmNlIHRoZSBjb21tb24gbWVhbHMgYW5kIHNvbWUgb2YgaGlzCgkJCQkJbGF3cyBhcmUgc3RpbGwgb2JzZXJ2ZWQgYnkgY2VydGFpbiBvZiBoaXMgc3VjY2Vzc29ycyBldmVuIHRvZGF5LiBUaGUgc2V0dGxlcnMgaW4KCQkJCQl0aGUgZGlyZWN0aW9uIG9mIFR5cnJoZW5pYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIG1vZGVybgoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDk3NjAiIGtleT0idGduLDcwMDk3NjAiPlR1c2Nhbnk8L3BsYWNlTmFtZT4sIGkuZS4gdGhlIHBlb3BsZSBvZgoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDQ2MTAiIGtleT0idGduLDcwMDQ2MTAiPkx1Y2FuaWE8L3BsYWNlTmFtZT4sIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAzMDA1IiBrZXk9InRnbiw3MDAzMDA1Ij5DYW1wYW5pYTwvcGxhY2VOYW1lPiBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDMwODAiIGtleT0idGduLDcwMDMwODAiPkxhdGl1bTwvcGxhY2VOYW1lPi48L25vdGU+IHdlcmUgT3BpY2Fucywgd2hvIHRvZGF5IGFzIGluIGZvcm1lciB0aW1lcwoJCQkJCWJlYXIgdGhlIHN1cm5hbWUgb2Y8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPkF1c29uaWFuczsgdGhlCgkJCQkJcmVnaW9uIHRvd2FyZHMgSWFweWdpYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHNvdXRoLWVhc3QKCQkJCQkJcHJvbW9udG9yeSBvciBoZWVsIG9mIEl0YWx5Ljwvbm90ZT4gYW5kIHRoZSBJb25pYW4gR3VsZiwgY2FsbGVkIFN5cnRpcywgd2FzCgkJCQkJaW5oYWJpdGVkIGJ5IHRoZSBDaG9uZXMsIHdobyBhbHNvIHdlcmUgT2Vub3RyaWFucyBieSByYWNlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JdCBpcyBmcm9tIHRoaXMgY291bnRyeSB0aGF0IHRoZSBzeXN0ZW0gb2YgY29tbW9uCgkJCQkJbWVhbHMgaGFzIGl0cyBvcmlnaW4sIHdoaWxlIHRoZSBkaXZpc2lvbiBvZiB0aGUgY2l0aXplbi1ib2R5IGJ5IGhlcmVkaXRhcnkgY2FzdGUKCQkJCQljYW1lIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGtleT0idGduLDcwMTY4MzMiPkVneXB0PC9wbGFjZU5hbWU+LCBmb3IgdGhlIHJlaWduIG9mCgkJCQkJU2Vzb3N0cmlzIGxvbmcgYW50ZWRhdGVzIHRoYXQgb2YgTWlub3MuIFdlIG1heSBhbG1vc3QgdGFrZSBpdCB0aGVyZWZvcmUgdGhhdCBhbGwKCQkJCQlvdGhlciBwb2xpdGljYWwgZGV2aWNlcyBhbHNvIGhhdmUgYmVlbiBkaXNjb3ZlcmVkIHJlcGVhdGVkbHksIG9yIHJhdGhlciBhbgoJCQkJCWluZmluaXRlIG51bWJlciBvZiB0aW1lcyBvdmVyLCBpbiB0aGUgbGFwc2Ugb2YgYWdlczsgZm9yIHRoZSBkaXNjb3ZlcmllcyBvZiBhCgkJCQkJbmVjZXNzYXJ5IGtpbmQgYXJlIHByb2JhYmx5IHRhdWdodCBieSBuZWVkIGl0c2VsZiwgYW5kIHdoZW4gdGhlIG5lY2Vzc2FyaWVzIGhhdmUKCQkJCQliZWVuIHByb3ZpZGVkIGl0IGlzIHJlYXNvbmFibGUgdGhhdCB0aGluZ3MgY29udHJpYnV0aW5nIHRvIHJlZmluZW1lbnQgYW5kIGx1eHVyeQoJCQkJCXNob3VsZCBmaW5kIHRoZWlyIGRldmVsb3BtZW50OyBzbyB0aGF0IHdlIG11c3QgYXNzdW1lIHRoYXQgdGhpcyBpcyB0aGUgd2F5IHdpdGgKCQkJCQlwb2xpdGljYWwgaW5zdGl0dXRpb25zIGFsc28uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZQoJCQkJCWFudGlxdWl0eSBvZiBhbGwgb2YgdGhlbSBpcyBpbmRpY2F0ZWQgYnkgdGhlIGhpc3Rvcnkgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGtleT0idGduLDcwMTY4MzMiPkVneXB0PC9wbGFjZU5hbWU+OyBmb3IgdGhlIEVneXB0aWFucyBhcmUgcmVwdXRlZCB0byBiZSB0aGUKCQkJCQlvbGRlc3Qgb2YgbmF0aW9ucywgYnV0IHRoZXkgaGF2ZSBhbHdheXMgaGFkIGxhd3MgYW5kIGEgcG9saXRpY2FsIHN5c3RlbS4gSGVuY2UKCQkJCQl3ZSBzaG91bGQgdXNlIHRoZSByZXN1bHRzIG9mIHByZXZpb3VzIGRpc2NvdmVyeSB3aGVuIGFkZXF1YXRlLCB3aGlsZSBlbmRlYXZvcmluZwoJCQkJCXRvIGludmVzdGlnYXRlIG1hdHRlcnMgaGl0aGVydG8gcGFzc2VkIG92ZXIuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdAoJCQkJCWhhcyBiZWVuIHN0YXRlZCBiZWZvcmUgdGhhdCB0aGUgbGFuZCBvdWdodCB0byBiZSBvd25lZCBieSB0aG9zZSB3aG8gcG9zc2VzcyBhcm1zCgkJCQkJYW5kIHRob3NlIHdobyBzaGFyZSB0aGUgcmlnaHRzIG9mIHRoZSBjb25zdGl0dXRpb24sIGFuZCB3aHkgdGhlIGN1bHRpdmF0b3JzCgkJCQkJb3VnaHQgdG8gYmUgYSBkaWZmZXJlbnQgY2FzdGUgZnJvbSB0aGVzZSwgYW5kIHdoYXQgaXMgdGhlIHByb3BlciBleHRlbnQgYW5kCgkJCQkJY29uZm9ybWF0aW9uIG9mIHRoZSBjb3VudHJ5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5XZSBoYXZlCgkJCQkJbm93IHRvIGRpc2N1c3MgZmlyc3QgdGhlIGFsbG90bWVudCBvZiB0aGUgbGFuZCwgYW5kIHRoZSBwcm9wZXIgY2xhc3MgYW5kCgkJCQkJY2hhcmFjdGVyIG9mIGl0cyBjdWx0aXZhdG9yczsgc2luY2Ugd2UgYWR2b2NhdGUgbm90IGNvbW1vbiBvd25lcnNoaXAgb2YgbGFuZCwgYXMKCQkJCQlzb21lIGhhdmUgZG9uZSwgPG1pbGVzdG9uZSBuPSIxMzMwYSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+YnV0IGNvbW11bml0eSBpbiBpdCBicm91Z2h0IGFib3V0IGluIGEgZnJpZW5kbHkgd2F5CgkJCQkJYnkgdGhlIHVzZSBvZiBpdCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgdmFndWUgcGhyYXNlCgkJCQkJCe+8iGJhc2VkIG9uIHRoZSBwcm92ZXJiIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7Ous6/zrnOveG9sCDPhOG9sCDPhOG/ts69CgkJCQkJCQnPhuG9t867z4nOvTwvZm9yZWlnbj4sIOKAmGZyaWVuZHMnIGdvb2RzIGFyZSBjb21tb24KCQkJCQkJcHJvcGVydHnigJnvvIkgc2VlbXMgdG8gZGVub3RlIHNvbWUgc29ydCBvZiBjdXN0b21hcnkKCQkJCQkJY29tbXVuaXNtIGluIHRoZSBjdWx0aXZhdGlvbiBvZiB0aGUgbGFuZCBhbmQgZW5qb3ltZW50IG9mIHRoZSBwcm9kdWNlLAoJCQkJCQljb21iaW5lZCB3aXRoIHByaXZhdGUgb3duZXJzaGlwIG9mIHRoZSBmcmVlaG9sZC48L25vdGU+IGFuZCB3ZSBob2xkIHRoYXQgbm8KCQkJCQljaXRpemVuIHNob3VsZCBiZSBpbGwgc3VwcGxpZWQgd2l0aCBtZWFucyBvZiBzdWJzaXN0ZW5jZS4gQXMgdG8gY29tbW9uIG1lYWxzLAoJCQkJCWFsbCBhZ3JlZSB0aGF0IHRoaXMgaXMgYW4gaW5zdGl0dXRpb24gYWR2YW50YWdlb3VzIGZvciB3ZWxsLW9yZ2FuaXplZCBzdGF0ZXMgdG8KCQkJCQlwb3NzZXNzOyBvdXIgb3duIHJlYXNvbnMgZm9yIHNoYXJpbmcgdGhpcyB2aWV3IHdlIHdpbGwgc3RhdGUgbGF0ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIHByb21pc2UgaXMgbm90IGZ1bGZpbGxlZC48L25vdGU+IEJ1dCB0aGUKCQkJCQljb21tb24gbWVhbHMgbXVzdCBiZSBzaGFyZWQgYnkgYWxsIHRoZSBjaXRpemVucywgYW5kIGl0IGlzIG5vdCBlYXN5IGZvciB0aGUgcG9vcgoJCQkJCXRvIGNvbnRyaWJ1dGUgdGhlaXIgYXNzZXNzZWQgc2hhcmUgZnJvbSB0aGVpciBwcml2YXRlIG1lYW5zIGFuZCBhbHNvIHRvIG1haW50YWluCgkJCQkJdGhlaXIgaG91c2Vob2xkIGFzIHdlbGwuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZAoJCQkJCW1vcmVvdmVyIHRoZSBleHBlbnNlcyBjb25uZWN0ZWQgd2l0aCByZWxpZ2lvbiBhcmUgdGhlIGNvbW1vbiBjb25jZXJuIG9mIHRoZQoJCQkJCXdob2xlIHN0YXRlLiBJdCBpcyBuZWNlc3NhcnkgdGhlcmVmb3JlIGZvciB0aGUgbGFuZCB0byBiZSBkaXZpZGVkIGludG8gdHdvCgkJCQkJcGFydHMsIG9mIHdoaWNoIG9uZSBtdXN0IGJlIGNvbW1vbiBhbmQgdGhlIG90aGVyIHRoZSBwcml2YXRlIHByb3BlcnR5IG9mCgkJCQkJaW5kaXZpZHVhbHM7IGFuZCBlYWNoIG9mIHRoZXNlIHR3byBkaXZpc2lvbnMgbXVzdCBhZ2FpbiBiZSBkaXZpZGVkIGluIHR3by4gT2YKCQkJCQl0aGUgY29tbW9uIGxhbmQgb25lIHBvcnRpb24gc2hvdWxkIGJlIGFzc2lnbmVkIHRvIHRoZSBzZXJ2aWNlcyBvZiByZWxpZ2lvbiwgYW5kCgkJCQkJdGhlIG90aGVyIHRvIGRlZnJheSB0aGUgY29zdCBvZiB0aGUgY29tbW9uIG1lYWxzOyBvZiB0aGUgbGFuZCBpbiBwcml2YXRlCgkJCQkJb3duZXJzaGlwIG9uZSBwYXJ0IHNob3VsZCBiZSB0aGUgZGlzdHJpY3QgbmVhciB0aGUgZnJvbnRpZXJzLCBhbmQgYW5vdGhlciB0aGUKCQkJCQlkaXN0cmljdCBuZWFyIHRoZSBjaXR5LCBpbiBvcmRlciB0aGF0IHR3byBwbG90cyBtYXkgYmUgYXNzaWduZWQgdG8gZWFjaCBjaXRpemVuCgkJCQkJYW5kIGFsbCBtYXkgaGF2ZSBhIHNoYXJlIGluIGJvdGggZGlzdHJpY3RzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGlzIGFycmFuZ2VtZW50IHNhdGlzZmllcyBlcXVpdHkgYW5kIGp1c3RpY2UsIGFuZCBhbHNvCgkJCQkJY29uZHVjZXMgdG8gZ3JlYXRlciB1bmFuaW1pdHkgaW4gZmFjaW5nIGJvcmRlciB3YXJmYXJlLiBXaGVyZSB0aGlzIHN5c3RlbSBpcyBub3QKCQkJCQlmb2xsb3dlZCwgb25lIHNldCBvZiBwZW9wbGUgYXJlIHJlY2tsZXNzIGFib3V0IHF1YXJyZWxsaW5nIHdpdGggdGhlIG5laWdoYm9yaW5nCgkJCQkJCXN0YXRlcyw8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZCB0aGUgb3RoZXIgc2V0IGFyZSB0b28KCQkJCQljYXV0aW91cyBhbmQgbmVnbGVjdCBjb25zaWRlcmF0aW9ucyBvZiBob25vci4gSGVuY2Ugc29tZSBwZW9wbGUgaGF2ZSBhIGxhdyB0aGF0CgkJCQkJdGhlIGNpdGl6ZW5zIHdob3NlIGxhbmQgaXMgbmVhciB0aGUgZnJvbnRpZXIgYXJlIG5vdCB0byB0YWtlIHBhcnQgaW4KCQkJCQlkZWxpYmVyYXRpb24gYXMgdG8gd2FycyBhZ2FpbnN0IG5laWdoYm9yaW5nIHN0YXRlcywgb24gdGhlIGdyb3VuZCB0aGF0IHByaXZhdGUKCQkJCQlpbnRlcmVzdCB3b3VsZCBwcmV2ZW50IHRoZW0gZnJvbSBiZWluZyBhYmxlIHRvIHRha2UgY291bnNlbCB3aXNlbHkuIFRoZSBsYW5kCgkJCQkJbXVzdCB0aGVyZWZvcmUgYmUgZGl2aWRlZCB1cCBpbiB0aGlzIG1hbm5lciBiZWNhdXNlIG9mIHRoZSByZWFzb25zCgkJCQkJCWFmb3Jlc2FpZC48bWlsZXN0b25lIGVkPSJQIiBuPSI5LjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRob3NlIHdobyBhcmUgdG8gY3VsdGl2YXRlIHRoZSBzb2lsIHNob3VsZCBiZXN0IG9mIGFsbCwgaWYgdGhlCgkJCQkJaWRlYWwgc3lzdGVtIGlzIHRvIGJlIHN0YXRlZCwgYmUgc2xhdmVzLCBub3QgZHJhd24gZnJvbSBwZW9wbGUgYWxsIG9mIG9uZSB0cmliZQoJCQkJCW5vciBvZiBhIHNwaXJpdGVkIGNoYXJhY3RlciDvvIhmb3IgdGh1cyB0aGV5IHdvdWxkIGJlIGJvdGggc2VydmljZWFibGUKCQkJCQlmb3IgdGhlaXIgd29yayBhbmQgc2FmZSB0byBhYnN0YWluIGZyb20gaW5zdXJyZWN0aW9u77yJLCBidXQgYXMgYSBzZWNvbmQKCQkJCQliZXN0IHRoZXkgc2hvdWxkIGJlIGFsaWVuIHNlcmZzIG9mIGEgc2ltaWxhciBuYXR1cmUuIE9mIHRoZXNlIGxhYm9yZXJzIHRob3NlIGluCgkJCQkJcHJpdmF0ZSBlbXBsb3ltZW50IG11c3QgYmUgYW1vbmcgdGhlIHByaXZhdGUgcG9zc2Vzc2lvbnMgb2YgdGhlIG93bmVycyBvZiB0aGUKCQkJCQllc3RhdGVzLCBhbmQgdGhvc2Ugd29ya2luZyBvbiB0aGUgY29tbW9uIGxhbmQgY29tbW9uIHByb3BlcnR5LiBIb3cgc2xhdmVzIHNob3VsZAoJCQkJCWJlIGVtcGxveWVkLCBhbmQgd2h5IGl0IGlzIGFkdmFudGFnZW91cyB0aGF0IGFsbCBzbGF2ZXMgc2hvdWxkIGhhdmUgdGhlaXIKCQkJCQlmcmVlZG9tIHNldCBiZWZvcmUgdGhlbSBhcyBhIHJld2FyZCwgd2Ugd2lsbCBzYXkgbGF0ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIHByb21pc2UgaXMgbm90IGZ1bGZpbGxlZC48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQKCQkJCQloYXMgYmVlbiBzYWlkIGJlZm9yZSB0aGF0IHRoZSBjaXR5IHNob3VsZCBzbyBmYXIgYXMgY2lyY3Vtc3RhbmNlcyBwZXJtaXQgYmUgaW4KCQkJCQljb21tdW5pY2F0aW9uIGFsaWtlIHdpdGggdGhlIG1haW5sYW5kLCB0aGUgc2VhIGFuZCB0aGUgd2hvbGUgb2YgaXRzIHRlcnJpdG9yeS4KCQkJCQlUaGUgc2l0ZSBvZiB0aGUgY2l0eSBpdHNlbGYgd2UgbXVzdCBwcmF5IHRoYXQgZm9ydHVuZSBtYXkgcGxhY2Ugb24gc2xvcGluZwoJCQkJCWdyb3VuZCwgaGF2aW5nIHJlZ2FyZCB0byBmb3VyIGNvbnNpZGVyYXRpb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BcHBhcmVudGx5IO+8iDHvvIkgZnJlc2ggYWlyLCDvvIgy77yJIHdhdGVyCgkJCQkJCXN1cHBseSwg77yIM++8iSBhZG1pbmlzdHJhdGlvbiwg77yINO+8iSBtaWxpdGFyeQoJCQkJCQlyZXF1aXJlbWVudHMuPC9ub3RlPjogZmlyc3QsIGFzIGEgdGhpbmcgZXNzZW50aWFsLCB0aGUgY29uc2lkZXJhdGlvbiBvZgoJCQkJCWhlYWx0aCDvvIhmb3IgY2l0aWVzIHdob3NlIHNpdGUgc2xvcGVzIGVhc3Qgb3IgdG93YXJkcyB0aGUgYnJlZXplcyB0aGF0CgkJCQkJYmxvdyBmcm9tIHRoZSBzdW5yaXNlIGFyZSBtb3JlIGhlYWx0aHksIGFuZCBpbiB0aGUgc2Vjb25kIGRlZ3JlZSB0aG9zZSB0aGF0IGZhY2UKCQkJCQlhd2F5IGZyb20gdGhlIG5vcnRoIHdpbmQsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5MaXRlcmFsbHksCgkJCQkJCeKAmGluIHRoZSBkaXJlY3Rpb24gaW4gd2hpY2ggdGhlIG5vcnRoIHdpbmQgYmxvd3Mu4oCZPC9ub3RlPgoJCQkJCWZvciB0aGVzZSBhcmUgbWlsZGVyIGluIHdpbnRlcu+8iTsgPG1pbGVzdG9uZSBuPSIxMzMwYiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBhbW9uZyB0aGUgcmVtYWluaW5nIGNvbnNpZGVyYXRpb25zLCBhIHNsb3Bpbmcgc2l0ZSBpcwoJCQkJCWZhdm9yYWJsZSBib3RoIGZvciBwb2xpdGljYWwgYW5kIGZvciBtaWxpdGFyeSBwdXJwb3Nlcy4gRm9yIG1pbGl0YXJ5IHB1cnBvc2VzCgkJCQkJdGhlcmVmb3JlIHRoZSBzaXRlIHNob3VsZCBiZSBlYXN5IG9mIGV4aXQgZm9yIHRoZSBjaXRpemVucyB0aGVtc2VsdmVzLCBhbmQKCQkJCQlkaWZmaWN1bHQgZm9yIHRoZSBhZHZlcnNhcnkgdG8gYXBwcm9hY2ggYW5kIHRvIGJsb2NrYWRlLCBhbmQgaXQgbXVzdCBwb3NzZXNzIGlmCgkJCQkJcG9zc2libGUgYSBwbGVudGlmdWwgbmF0dXJhbCBzdXBwbHkgb2YgcG9vbHMgYW5kIHNwcmluZ3MsIGJ1dCBmYWlsaW5nIHRoaXMsIGEKCQkJCQltb2RlIGhhcyBiZWVuIGludmVudGVkIG9mIHN1cHBseWluZyB3YXRlciBieSBtZWFucyBvZiBjb25zdHJ1Y3RpbmcgYW4gYWJ1bmRhbmNlCgkJCQkJb2YgbGFyZ2UgcmVzZXJ2b2lycyBmb3IgcmFpbi13YXRlciwgc28gdGhhdCBhIHN1cHBseSBtYXkgbmV2ZXIgZmFpbCB0aGUgY2l0aXplbnMKCQkJCQl3aGVuIHRoZXkgYXJlIGRlYmFycmVkIGZyb20gdGhlaXIgdGVycml0b3J5IGJ5IHdhci4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzaW5jZSB3ZSBoYXZlIHRvIGNvbnNpZGVyIHRoZSBoZWFsdGggb2YgdGhlCgkJCQkJaW5oYWJpdGFudHMsIGFuZCB0aGlzIGRlcGVuZHMgdXBvbiB0aGUgcGxhY2UgYmVpbmcgd2VsbCBzaXR1YXRlZCBib3RoIG9uIGhlYWx0aHkKCQkJCQlncm91bmQgYW5kIHdpdGggYSBoZWFsdGh5IGFzcGVjdCwgYW5kIHNlY29uZGx5IHVwb24gdXNpbmcgd2hvbGVzb21lCgkJCQkJd2F0ZXItc3VwcGxpZXMsIHRoZSBmb2xsb3dpbmcgbWF0dGVyIGFsc28gbXVzdCBiZSBhdHRlbmRlZCB0byBhcyBvZiBwcmltYXJ5CgkJCQkJaW1wb3J0YW5jZS4gVGhvc2UgdGhpbmdzIHdoaWNoIHdlIHVzZSBmb3IgdGhlIGJvZHkgaW4gdGhlIGxhcmdlc3QgcXVhbnRpdHksIGFuZAoJCQkJCW1vc3QgZnJlcXVlbnRseSwgY29udHJpYnV0ZSBtb3N0IHRvIGhlYWx0aDsgYW5kIHRoZSBpbmZsdWVuY2Ugb2YgdGhlCgkJCQkJd2F0ZXItc3VwcGx5IGFuZCBvZiB0aGUgYWlyIGlzIG9mIHRoaXMgbmF0dXJlLiBIZW5jZSBpbiB3aXNlIGNpdGllcyBpZiBhbGwgdGhlCgkJCQkJc291cmNlcyBvZiB3YXRlciBhcmUgbm90IGVxdWFsbHkgcHVyZSBhbmQgdGhlcmUgaXMgbm90IGFuIGFidW5kYW5jZSBvZiBzdWl0YWJsZQoJCQkJCXNwcmluZ3MsIHRoZSB3YXRlci1zdXBwbGllcyBmb3IgZHJpbmtpbmcgbXVzdCBiZSBrZXB0IHNlcGFyYXRlIGZyb20gdGhvc2UgZm9yCgkJCQkJb3RoZXIgcmVxdWlyZW1lbnRzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMC40IiB1bml0PSJMb2ViIGNoYXAiIC8+QXMgdG8gZm9ydGlmaWVkCgkJCQkJcG9zaXRpb25zLCB3aGF0IGlzIGV4cGVkaWVudCBpcyBub3QgdGhlIHNhbWUgZm9yIGFsbCBmb3JtcyBvZiBjb25zdGl0dXRpb24KCQkJCQlhbGlrZTsgZm9yIGV4YW1wbGUsIGEgY2l0YWRlbC1oaWxsIGlzIHN1aXRhYmxlIGZvciBvbGlnYXJjaHkgYW5kCgkJCQkJCW1vbmFyY2h5LDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIGEgbGV2ZWwgc2l0ZSBmb3IKCQkJCQlkZW1vY3JhY3k7IG5laXRoZXIgaXMgZmF2b3JhYmxlIHRvIGFuIGFyaXN0b2NyYWN5LCBidXQgcmF0aGVyIHNldmVyYWwgc3Ryb25nCgkJCQkJcG9zaXRpb25zLiBUaGUgYXJyYW5nZW1lbnQgb2YgdGhlIHByaXZhdGUgZHdlbGxpbmdzIGlzIHRob3VnaHQgdG8gYmUgbW9yZQoJCQkJCWFncmVlYWJsZSBhbmQgbW9yZSBjb252ZW5pZW50IGZvciBnZW5lcmFsIHB1cnBvc2VzIGlmIHRoZXkgYXJlIGxhaWQgb3V0IGluCgkJCQkJc3RyYWlnaHQgc3RyZWV0cywgYWZ0ZXIgdGhlIG1vZGVybiBmYXNoaW9uLCB0aGF0IGlzLCB0aGUgb25lIGludHJvZHVjZWQgYnkKCQkJCQkJSGlwcG9kYW11czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIEJvb2sgMi41Ljwvbm90ZT47IGJ1dCBpdAoJCQkJCWlzIG1vcmUgc3VpdGFibGUgZm9yIHNlY3VyaXR5IGluIHdhciBpZiBpdCBpcyBvbiB0aGUgY29udHJhcnkgcGxhbiwgYXMgY2l0aWVzCgkJCQkJdXNlZCB0byBiZSBpbiBhbmNpZW50IHRpbWVzOyBmb3IgdGhhdCBhcnJhbmdlbWVudCBpcyBkaWZmaWN1bHQgZm9yIGZvcmVpZ24KCQkJCQkJdHJvb3BzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGFuIGVuZW15J3MgbWVyY2VuYXJpZXM7IGJ1dAoJCQkJCQl0aGUgTVNTLiBnaXZlIOKAmGRpZmZpY3VsdCBmb3IgZm9yZWlnbiB0cm9vcHMgdG8gbWFrZSBzb3J0aWVzIGZyb20KCQkJCQkJW2kuZS4gcHJlc3VtYWJseSB0byBmaW5kIHRoZWlyIHdheSBvdXQgd2hlbiBvbmNlIHRoZXkgaGF2ZSBnb3QgaW4sCgkJCQkJCWNmLiA8YmlibCBkZWZhdWx0PSJOTyIgbj0iVGh1Yy4gMi40LjIiIHZhbGlkPSJ5ZXMiPlRodWMuIDIuNC4yPC9iaWJsPl0gYW5kIGZvciBhdHRhY2tlcnMgdG8KCQkJCQkJZmluZCB0aGVpciB3YXkgYWJvdXQgaW4u4oCZPC9ub3RlPiB0byBlbnRlciBhbmQgdG8gZmluZCB0aGVpciB3YXkKCQkJCQlhYm91dCBpbiB3aGVuIGF0dGFja2luZy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlIGl0CgkJCQkJaXMgd2VsbCB0byBjb21iaW5lIHRoZSBhZHZhbnRhZ2VzIG9mIGJvdGggcGxhbnMg77yIZm9yIHRoaXMgaXMgcG9zc2libGUKCQkJCQlpZiB0aGUgaG91c2VzIGFyZSBsYWlkIG91dCBpbiB0aGUgd2F5IHdoaWNoIGFtb25nIHRoZSBmYXJtZXJzIHNvbWUgcGVvcGxlIGNhbGwKCQkJCQnigJhvbiB0aGUgc2xhbnTigJk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBSb21hbgoJCQkJCQkJPGVtcGg+cXVpbmN1bng8L2VtcGg+LCBlYWNoIHBsYW50IG9mIG9uZSByb3cgYmVpbmcgaW4gbGluZSB3aXRoIHRoZSBnYXAKCQkJCQkJYmV0d2VlbiB0d28gcGxhbnRzIG9mIHRoZSBuZXh0IHJvdywgdGh1czo8L25vdGU+IGluIHRoZSBjYXNlIG9mCgkJCQkJdmluZXPvvIksIGFuZCBub3QgdG8gbGF5IG91dCB0aGUgd2hvbGUgY2l0eSBpbiBzdHJhaWdodCBzdHJlZXRzLCBidXQgb25seQoJCQkJCWNlcnRhaW4gcGFydHMgYW5kIGRpc3RyaWN0cywgZm9yIGluIHRoaXMgd2F5IGl0IHdpbGwgY29tYmluZSBzZWN1cml0eSB3aXRoCgkJCQkJCWJlYXV0eS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFzIHJlZ2FyZHMgd2FsbHMsIHRob3NlIHdobyBhdmVyIHRoYXQKCQkJCQljaXRpZXMgd2hpY2ggcHJldGVuZCB0byB2YWxvciBzaG91bGQgbm90IGhhdmUgdGhlbSBob2xkIHRvbyBvbGQtZmFzaGlvbmVkIGEKCQkJCQl2aWV34oCUYW5kIHRoYXQgdGhvdWdoIHRoZXkgc2VlIHRoYXQgdGhlIGNpdGllcyB0aGF0IGluZHVsZ2UgaW4gdGhhdAoJCQkJCWZvcm0gb2YgdmFuaXR5IGFyZSByZWZ1dGVkIGJ5IGV4cGVyaWVuY2UuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEwLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JdCBpcyB0cnVlIHRoYXQgYWdhaW5zdCBhbiBldmVubHkgbWF0Y2hlZCBmb2UgYW5kIG9uZQoJCQkJCWxpdHRsZSBzdXBlcmlvciBpbiBudW1iZXJzIGl0IGlzIG5vdCBob25vcmFibGUgdG8gdHJ5IHRvIHNlY3VyZSBvbmVzZWxmIGJ5IHRoZQoJCQkJCXN0cmVuZ3RoIG9mIG9uZSdzIGZvcnRpZmljYXRpb25zOyBidXQgYXMgaXQgZG9lcyBhbmQgbWF5IGhhcHBlbiB0aGF0IHRoZQoJCQkJCXN1cGVyaW9yIG51bWJlcnMgb2YgdGhlIGF0dGFja2VycyBtYXkgYmUgdG9vIG11Y2ggZm9yIHRoZSBodW1hbiB2YWxvciBvZiBhIHNtYWxsCgkJCQkJZm9yY2UsIGlmIHRoZSBjaXR5IGlzIHRvIHN1cnZpdmUgYW5kIG5vdCB0byBzdWZmZXIgZGlzYXN0ZXIgb3IgaW5zdWx0LCB0aGUKCQkJCQlzZWN1cmVzdCBmb3J0aWZpY2F0aW9uIG9mIHdhbGxzIG11c3QgYmUgZGVlbWVkIHRvIGJlIHRoZSBtb3N0IHdhcmxpa2UsCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTMzMWEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnBhcnRpY3VsYXJseSBpbiB2aWV3IG9mIHRoZSBpbnZlbnRpb25zIHRoYXQgaGF2ZSBub3cgYmVlbiBtYWRlCgkJCQkJaW4gdGhlIGRpcmVjdGlvbiBvZiBwcmVjaXNpb24gd2l0aCBtaXNzaWxlcyBhbmQgYXJ0aWxsZXJ5IGZvciBzaWVnZXMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEwLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5UbyBjbGFpbSBub3QgdG8gZW5jb21wYXNzIGNpdGllcyB3aXRoCgkJCQkJd2FsbHMgaXMgbGlrZSBkZXNpcmluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyBhIHdvcmQgc2hvdWxkCgkJCQkJCWJlIGFkZGVkIHRvIHRoZSBHcmVlayBnaXZpbmcg4oCYZGVzaXJpbmcgdG8gbWFrZSB0aGUgY291bnRyeSBlYXN5IHRvCgkJCQkJCWludmFkZSwgYW5kIHRvIHN0cmlwIGl04oCU4oCZLjwvbm90ZT4gdGhlIGNvdW50cnkgdG8gYmUgZWFzeQoJCQkJCXRvIGludmFkZSBhbmQgc3RyaXBwaW5nIGl0IG9mIGhpbGx5IHJlZ2lvbnMsIGFuZCBzaW1pbGFybHkgbm90IHN1cnJvdW5kaW5nIGV2ZW4KCQkJCQlwcml2YXRlIGR3ZWxsaW5ncyB3aXRoIGhvdXNlLXdhbGxzIG9uIHRoZSBncm91bmQgdGhhdCB0aGUgaW5oYWJpdGFudHMgd2lsbCBiZQoJCQkJCWNvd2FyZGx5LiBBbm90aGVyIHBvaW50IG1vcmVvdmVyIHRoYXQgbXVzdCBub3QgYmUgZm9yZ290dGVuIGlzIHRoYXQgdGhvc2Ugd2hvCgkJCQkJaGF2ZSB3YWxscyByb3VuZCB0aGUgY2l0eSBjYW4gdXNlIHRoZWlyIGNpdGllcyBpbiBib3RoIHdheXMsIGJvdGggYXMgd2FsbGVkCgkJCQkJY2l0aWVzIGFuZCBhcyBvcGVuIG9uZXMsIHdoZXJlYXMgY2l0aWVzIG5vdCBwb3NzZXNzaW5nIHdhbGxzIGNhbm5vdCBiZSB1c2VkIGluCgkJCQkJYm90aCB3YXlzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMC44IiB1bml0PSJMb2ViIGNoYXAiIC8+SWYgdGhlbiB0aGlzIGlzIHNvLCBub3QKCQkJCQlvbmx5IG11c3Qgd2FsbHMgYmUgcHV0IHJvdW5kIGEgY2l0eSwgYnV0IGFsc28gYXR0ZW50aW9uIG11c3QgYmUgcGFpZCB0byB0aGVtIGluCgkJCQkJb3JkZXIgdGhhdCB0aGV5IG1heSBiZSBzdWl0YWJsZSBib3RoIGluIHJlZ2FyZCB0byB0aGUgYWRvcm5tZW50IG9mIHRoZSBjaXR5IGFuZAoJCQkJCWluIHJlc3BlY3Qgb2YgbWlsaXRhcnkgcmVxdWlyZW1lbnRzLCBlc3BlY2lhbGx5IHRoZSBuZXcgZGV2aWNlcyByZWNlbnRseQoJCQkJCWludmVudGVkLiBGb3IganVzdCBhcyB0aGUgYXR0YWNrZXJzIG9mIGEgY2l0eSBhcmUgY29uY2VybmVkIHRvIHN0dWR5IHRoZSBtZWFucwoJCQkJCWJ5IHdoaWNoIHRoZXkgY2FuIGdhaW4gdGhlIGFkdmFudGFnZSwgc28gYWxzbyBmb3IgdGhlIGRlZmVuZGVycyBzb21lIGRldmljZXMKCQkJCQloYXZlIGFscmVhZHkgYmVlbiBpbnZlbnRlZCBhbmQgb3RoZXJzIHRoZXkgbXVzdCBkaXNjb3ZlciBhbmQgdGhpbmsgb3V0OyBmb3IKCQkJCQlwZW9wbGUgZG8gbm90IGV2ZW4gc3RhcnQgYXR0ZW1wdGluZyB0byBhdHRhY2sgdGhvc2Ugd2hvIGFyZSB3ZWxsCgkJCQkJCXByZXBhcmVkLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHNpbmNlIHRoZSBtdWx0aXR1ZGUgb2YgY2l0aXplbnMKCQkJCQltdXN0IGJlIGRpc3RyaWJ1dGVkPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5pbiBzZXBhcmF0ZQoJCQkJCW1lc3NlcywgYW5kIHRoZSBjaXR5IHdhbGxzIG11c3QgYmUgZGl2aWRlZCB1cCBieSBndWFyZC1wb3N0cyBhbmQgdG93ZXJzIGluCgkJCQkJc3VpdGFibGUgcGxhY2VzLCBpdCBpcyBjbGVhciB0aGF0IHRoZXNlIGZhY3RzIHRoZW1zZWx2ZXMgY2FsbCBmb3Igc29tZSBvZiB0aGUKCQkJCQltZXNzZXMgdG8gYmUgb3JnYW5pemVkIGF0IHRoZXNlIGd1YXJkLXBvc3RzLiBUaGVzZSB0aGluZ3MgdGhlbiBtaWdodCBiZSBhcnJhbmdlZAoJCQkJCWluIHRoaXMgbWFubmVyLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGl0IGlzIGZpdHRpbmcKCQkJCQl0aGF0IHRoZSBkd2VsbGluZ3MgYXNzaWduZWQgdG8gdGhlIGdvZHMgYW5kIHRoZSBtb3N0IGltcG9ydGFudCBvZiB0aGUgb2ZmaWNpYWwKCQkJCQltZXNzZXMgc2hvdWxkIGhhdmUgYSBzdWl0YWJsZSBzaXRlLCBhbmQgdGhlIHNhbWUgZm9yIGFsbCwgZXhjZXB0aW5nIHRob3NlCgkJCQkJdGVtcGxlcyB3aGljaCBhcmUgYXNzaWduZWQgYSBzcGVjaWFsIHBsYWNlIGFwYXJ0IGJ5IHRoZSBsYXcgb3IgZWxzZSBieSBzb21lCgkJCQkJdXR0ZXJhbmNlIG9mIHRoZSBQeXRoaWFuIG9yYWNsZS4gQW5kIHRoZSBzaXRlIHdvdWxkIGJlIHN1aXRhYmxlIGlmIGl0IGlzIG9uZQoJCQkJCXRoYXQgaXMgc3VmZmljaWVudGx5IGNvbnNwaWN1b3VzIGluIHJlZ2FyZCB0byB0aGUgZXhjZWxsZW5jZSBvZiBpdHMgcG9zaXRpb24sCgkJCQkJYW5kIGFsc28gb2Ygc3VwZXJpb3Igc3RyZW5ndGggaW4gcmVnYXJkIHRvIHRoZSBhZGphY2VudCBwYXJ0cyBvZiB0aGUgY2l0eS4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTEuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IGlzIGNvbnZlbmllbnQgdGhhdCBiZWxvdwoJCQkJCXRoaXMgc2l0ZSBzaG91bGQgYmUgbGFpZCBvdXQgYW4gYWdvcmEgb2YgdGhlIGtpbmQgY3VzdG9tYXJ5IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBrZXk9InRnbiw3MDAxMzk5Ij5UaGVzc2FseTwvcGxhY2VOYW1lPiB3aGljaCB0aGV5IGNhbGwgYSBmcmVlIGFnb3JhLCB0aGF0CgkJCQkJaXMsIG9uZSB3aGljaCBoYXMgdG8gYmUga2VwdCBjbGVhciBvZiBhbGwgbWVyY2hhbmRpc2UgYW5kIGludG8gd2hpY2ggbm8gYXJ0aXNhbgoJCQkJCW9yIGZhcm1lciBvciBhbnkgb3RoZXIgc3VjaCBwZXJzb24gbWF5IGludHJ1ZGUgdW5sZXNzIHN1bW1vbmVkIGJ5IHRoZQoJCQkJCW1hZ2lzdHJhdGVzLiBJdCB3b3VsZCBnaXZlIGFtZW5pdHkgdG8gdGhlIHNpdGUgaWYgdGhlIGd5bW5hc2lhIG9mIHRoZSBvbGRlciBtZW4KCQkJCQl3ZXJlIGFsc28gc2l0dWF0ZWQgaGVyZeKAlGZvciBpdCBpcyBwcm9wZXIgdG8gaGF2ZSB0aGlzIGluc3RpdHV0aW9uIGFsc28KCQkJCQlkaXZpZGVkIGFjY29yZGluZyB0byBhZ2VzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3Ig4oCYZm9yCgkJCQkJCWluIHRoaXMgbm9ibGUgcHJhY3RpY2UgZGlmZmVyZW50IGFnZXMgc2hvdWxkIGJlIHNlcGFyYXRlZOKAmQoJCQkJCQnvvIhKb3dldHTvvIkuPC9ub3RlPiBhbmQgZm9yIGNlcnRhaW4gbWFnaXN0cmF0ZXMgdG8gcGFzcyB0aGVpcgoJCQkJCXRpbWUgYW1vbmcgdGhlIHlvdXRocyB3aGlsZSB0aGUgb2xkZXIgbWVuIHNwZW5kIHRoZWlycyB3aXRoIHRoZSBtYWdpc3RyYXRlczsgZm9yCgkJCQkJdGhlIHByZXNlbmNlIG9mIHRoZSBtYWdpc3RyYXRlcyBiZWZvcmUgbWVuJ3MgZXllcyBtb3N0IGVuZ2VuZGVycyB0cnVlIHJlc3BlY3QKCQkJCQlhbmQgYSBmcmVlbWFuJ3MgYXdlLiA8bWlsZXN0b25lIG49IjEzMzFiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5UaGUgYWdvcmEgZm9yIG1lcmNoYW5kaXNlIG11c3QgYmUgZGlmZmVyZW50IGZyb20KCQkJCQl0aGUgZnJlZSBhZ29yYSwgYW5kIGluIGFub3RoZXIgcGxhY2U7IGl0IG11c3QgaGF2ZSBhIHNpdGUgY29udmVuaWVudCBmb3IgdGhlCgkJCQkJY29sbGVjdGlvbiB0aGVyZSBvZiBhbGwgdGhlIGdvb2RzIHNlbnQgZnJvbSB0aGUgc2VhcG9ydCBhbmQgZnJvbSB0aGUgY291bnRyeS4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTEuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhcyB0aGUgZGl2aXNpb25zIG9mIHRoZQoJCQkJCXN0YXRlJ3MgcG9wdWxhY2UgaW5jbHVkZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUgR3JlZWsKCQkJCQkJc2hvdWxkIGJlIGFsdGVyZWQgdG8gPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs+E4b24IM+Az4HOv861z4PPhOG9uc+CPC9mb3JlaWduPiwKCQkJCQkJ4oCYYXMgdGhlIGdvdmVybmluZyBjbGFzcyBpcyBkaXZpZGVkIGludG8u4oCZPC9ub3RlPiBwcmllc3RzCgkJCQkJYW5kIG1hZ2lzdHJhdGVzLCBpdCBpcyBzdWl0YWJsZSB0aGF0IHRoZSBwcmllc3RzJyBtZXNzLXJvb21zIGFsc28gc2hvdWxkIGhhdmUKCQkJCQl0aGVpciBwb3NpdGlvbiByb3VuZCB0aGF0IG9mIHRoZSBzYWNyZWQgYnVpbGRpbmdzLiBBbmQgYWxsIHRoZSBtYWdpc3RyYWNpZXMgdGhhdAoJCQkJCXN1cGVyaW50ZW5kIGNvbnRyYWN0cywgYW5kIHRoZSByZWdpc3RyYXRpb24gb2YgYWN0aW9ucyBhdCBsYXcsIHN1bW1vbnNlcyBhbmQKCQkJCQlvdGhlciBzdWNoIG1hdHRlcnMgb2YgYWRtaW5pc3RyYXRpb24sIGFuZCBhbHNvIHRob3NlIHRoYXQgZGVhbCB3aXRoIHRoZSBjb250cm9sCgkJCQkJb2YgdGhlIG1hcmtldHMgYW5kIHdpdGggd2hhdCBpcyB0ZXJtZWQgcG9saWNpbmcgdGhlIGNpdHksIHNob3VsZCBoYXZlIGJ1aWxkaW5ncwoJCQkJCWFkamFjZW50IHRvIGFuIGFnb3JhIG9yIHNvbWUgcHVibGljIHBsYWNlIG9mIHJlc29ydCwgYW5kIHN1Y2ggYSBwbGFjZSBpcyB0aGUKCQkJCQluZWlnaGJvcmhvb2Qgb2YgdGhlIGJ1c2luZXNzIGFnb3JhLCBmb3Igd2UgYXNzaWduIHRoZSB1cHBlciBhZ29yYSBhcyB0aGUgcGxhY2UKCQkJCQlpbiB3aGljaCB0byBzcGVuZCBsZWlzdXJlLCBhbmQgdGhpcyBvbmUgZm9yIG5lY2Vzc2FyeSBidXNpbmVzcy48bWlsZXN0b25lIGVkPSJQIiBuPSIxMS40IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUKCQkJCQlhcnJhbmdlbWVudHMgaW4gdGhlIGNvdW50cnkgYWxzbyBzaG91bGQgY29weSB0aGUgcGxhbiBkZXNjcmliZWQ7IHRoZXJlIHRvbyB0aGUKCQkJCQltYWdpc3RyYXRlcyBjYWxsZWQgaW4gc29tZSBzdGF0ZXMgV2FyZGVucyBvZiB0aGUgV29vZHMgYW5kIGluIG90aGVycwoJCQkJCUxhbmQtc3VwZXJpbnRlbmRlbnRzIG11c3QgaGF2ZSB0aGVpciBndWFyZC1wb3N0cyBhbmQgbWVzcy1yb29tcyBmb3IgcGF0cm9sIGR1dHksCgkJCQkJYW5kIGFsc28gdGVtcGxlcyBtdXN0IGJlIGRpc3RyaWJ1dGVkIG92ZXIgdGhlIGNvdW50cnksIHNvbWUgZGVkaWNhdGVkIHRvIGdvZHMKCQkJCQlhbmQgc29tZSB0byBoZXJvZXMuIEJ1dCB0byBsaW5nZXIgYXQgdGhpcyBwb2ludCBvdmVyIHRoZSBkZXRhaWxlZCBzdGF0ZW1lbnQgYW5kCgkJCQkJZGlzY3Vzc2lvbiBvZiBxdWVzdGlvbnMgb2YgdGhpcyBraW5kIGlzIHdhc3RlIG9mIHRpbWUuPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5UaGUgZGlmZmljdWx0eSB3aXRoIHN1Y2ggdGhpbmdzIGlzIG5vdCBzbyBtdWNoIGluCgkJCQkJdGhlIG1hdHRlciBvZiB0aGVvcnkgYnV0IGluIHRoYXQgb2YgcHJhY3RpY2U7IHRvIGxheSBkb3duIHByaW5jaXBsZXMgaXMgYSB3b3JrCgkJCQkJb2YgYXNwaXJhdGlvbiwgYnV0IHRoZWlyIHJlYWxpemF0aW9uIGlzIHRoZSB0YXNrIG9mIGZvcnR1bmUuIEhlbmNlIHdlIHdpbGwKCQkJCQlyZWxpbnF1aXNoIGZvciB0aGUgcHJlc2VudCB0aGUgZnVydGhlciBjb25zaWRlcmF0aW9uIG9mIG1hdHRlcnMgb2YgdGhpcwoJCQkJCQlzb3J0LjxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlIG11c3Qgbm93IGRpc2N1c3MgdGhlIGNvbnN0aXR1dGlvbiBpdHNlbGYsIGFuZCBhc2sgd2hhdCBhbmQKCQkJCQlvZiB3aGF0IGNoYXJhY3RlciBzaG91bGQgYmUgdGhlIGNvbXBvbmVudHMgb2YgdGhlIHN0YXRlIHRoYXQgaXMgdG8gaGF2ZSBmZWxpY2l0eQoJCQkJCWFuZCBnb29kIGdvdmVybm1lbnQuIFRoZXJlIGFyZSB0d28gdGhpbmdzIGluIHdoaWNoIHRoZSB3ZWxmYXJlIG9mIGFsbCBtZW4KCQkJCQljb25zaXN0czogb25lIG9mIHRoZXNlIGlzIHRoZSBjb3JyZWN0IGVzdGFibGlzaG1lbnQgb2YgdGhlIGFpbSBhbmQgZW5kIG9mIHRoZWlyCgkJCQkJYWN0aW9ucywgdGhlIG90aGVyIHRoZSBhc2NlcnRhaW5tZW50IG9mIHRoZSBhY3Rpb25zIGxlYWRpbmcgdG8gdGhhdCBlbmQuCgkJCQkJ77yIRm9yIHRoZSBlbmQgcHJvcG9zZWQgYW5kIHRoZSBtZWFucyBhZG9wdGVkIG1heSBiZSBpbmNvbnNpc3RlbnQgd2l0aAoJCQkJCW9uZSBhbm90aGVyLCBhcyBhbHNvIHRoZXkgbWF5IGJlIGNvbnNpc3RlbnQ7IHNvbWV0aW1lcyB0aGUgYWltIGhhcyBiZWVuCgkJCQkJY29ycmVjdGx5IHByb3Bvc2VkLCBidXQgcGVvcGxlIGZhaWwgdG8gYWNoaWV2ZSBpdCBpbiBhY3Rpb24sIHNvbWV0aW1lcyB0aGV5CgkJCQkJYWNoaWV2ZSBhbGwgdGhlIG1lYW5zIHN1Y2Nlc3NmdWxseSBidXQgdGhlIGVuZCB0aGF0IHRoZXkgcG9zaXRlZCB3YXMgYSBiYWQgb25lLAoJCQkJCWFuZCBzb21ldGltZXMgdGhleSBlcnIgYXMgdG8gYm90aOKAlGZvciBpbnN0YW5jZSwgaW4gbWVkaWNpbmUKCQkJCQlwcmFjdGl0aW9uZXJzIGFyZSBzb21ldGltZXMgYm90aCB3cm9uZyBpbiB0aGVpciBqdWRnZW1lbnQgb2Ygd2hhdCBxdWFsaXRpZXMgYQoJCQkJCWhlYWx0aHkgYm9keSBvdWdodCB0byBwb3NzZXNzIGFuZCB1bnN1Y2Nlc3NmdWwgaW4gaGl0dGluZyBvbiBlZmZlY3RpdmUgbWVhbnMgdG8KCQkJCQlwcm9kdWNlIHRoZSBkaXN0aW5jdGl2ZSBhaW0gdGhhdCB0aGV5IGhhdmUgc2V0IGJlZm9yZSB0aGVtOyB3aGVyZWFzIGluIHRoZSBhcnRzCgkJCQkJYW5kIHNjaWVuY2VzIGJvdGggdGhlc2UgdGhpbmdzIGhhdmUgdG8gYmUgc2VjdXJlZCwgdGhlIGVuZCBhbmQgdGhlIHByYWN0aWNhbAoJCQkJCW1lYW5zIHRvIHRoZSBlbmQu77yJIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ob3cgaXQKCQkJCQlpcyBjbGVhciB0aGF0IGFsbCBtZW4gYWltIGF0IHRoZSBnb29kIGxpZmUgYW5kIGF0IGhhcHBpbmVzcywgYnV0IHRob3VnaCBzb21lCgkJCQkJcG9zc2VzcyB0aGUgcG93ZXIgdG8gYXR0YWluIHRoZXNlIHRoaW5ncywgc29tZSBkbyBub3QsIG93aW5nIHRvIHNvbWUgZmFjdG9yIG9mCgkJCQkJZm9ydHVuZSBvciBvZiBuYXR1cmUg77yIZm9ydHVuZSBiZWNhdXNlIHRoZSBnb29kIGxpZmUgbmVlZHMgYWxzbyBhCgkJCQkJY2VydGFpbiBlcXVpcG1lbnQgb2YgbWVhbnMsIDxtaWxlc3RvbmUgbj0iMTMzMmEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBhbHRob3VnaCBpdCBuZWVkcyBsZXNzIG9mIHRoaXMgZm9yIG1lbiBvZgoJCQkJCWJldHRlciBuYXR1cmFsIGRpc3Bvc2l0aW9uIGl0IG5lZWRzIG1vcmUgZm9yIHRob3NlIG9mIHdvcnNl77yJOyB3aGlsZQoJCQkJCW90aGVycywgYWx0aG91Z2ggdGhleSBoYXZlIHRoZSBwb3dlciwgZ28gd3JvbmcgYXQgdGhlIHN0YXJ0IGluIHRoZWlyIHNlYXJjaCBmb3IKCQkJCQkJaGFwcGluZXNzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGV5IG1pc2NvbmNlaXZlIHRoZQoJCQkJCQluYXR1cmUgb2YgaGFwcGluZXNzIGFuZCBzZWxlY3QgdGhlIHdyb25nIHRoaW5nIHRvIGFpbSBhdC48L25vdGU+IEJ1dCB0aGUKCQkJCQlvYmplY3QgYmVmb3JlIHVzIGlzIHRvIGRpc2Nlcm4gdGhlIGJlc3QgY29uc3RpdHV0aW9uLCBhbmQgdGhpcyBpcyB0aGUgb25lIHVuZGVyCgkJCQkJd2hpY2ggYSBzdGF0ZSB3aWxsIGJlIGJlc3QgZ292ZXJuZWQsIGFuZCBhIHN0YXRlIHdpbGwgYmUgYmVzdCBnb3Zlcm5lZCB1bmRlciB0aGUKCQkJCQljb25zdGl0dXRpb24gdW5kZXIgd2hpY2ggaXQgaGFzIHRoZSBtb3N0IG9wcG9ydHVuaXR5IGZvciBoYXBwaW5lc3M7IGl0IGlzCgkJCQkJdGhlcmVmb3JlIGNsZWFyIHRoYXQgd2UgbXVzdCBrbm93IHdoYXQgaGFwcGluZXNzIGlzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHZpZXcgdGhhdCB3ZSBtYWludGFpbiDvvIhhbmQgdGhpcyBpcyB0aGUKCQkJCQlkZWZpbml0aW9uIHRoYXQgd2UgbGFpZCBkb3duIGluIHRoZTx0aXRsZT5FdGhpY3M8L3RpdGxlPiw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTA5OGEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4gRXRoLiAxMDk4YQoJCQkJCQkJMTY8L2JpYmw+IGFuZCA8YmlibCBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExNzZiIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4KCQkJCQkJCTExNzZiIDQ8L2JpYmw+PC9ub3RlPiBpZiB0aG9zZSBkaXNjb3Vyc2VzIGFyZSBvZiBhbnkgdmFsdWXvvIkgaXMKCQkJCQl0aGF0IGhhcHBpbmVzcyBpcyB0aGUgY29tcGxldGUgYWN0aXZpdHkgYW5kIGVtcGxveW1lbnQgb2YgdmlydHVlLCBhbmQgdGhpcyBub3QKCQkJCQljb25kaXRpb25hbGx5IGJ1dCBhYnNvbHV0ZWx5LiBXaGVuIEkgc2F5IOKAmGNvbmRpdGlvbmFsbHnigJkgSQoJCQkJCXJlZmVyIHRvIHRoaW5ncyBuZWNlc3NhcnksIGJ5IOKAmGFic29sdXRlbHnigJkgSSBtZWFuCgkJCQkJ4oCYbm9ibHnigJk6IGZvciBpbnN0YW5jZSwgdG8gdGFrZSB0aGUgY2FzZSBvZiBqdXN0IGFjdGlvbnMsCgkJCQkJanVzdCBhY3RzIG9mIHZlbmdlYW5jZSBhbmQgb2YgcHVuaXNobWVudCBzcHJpbmcgaXQgaXMgdHJ1ZSBmcm9tIHZpcnR1ZSwgYnV0IGFyZQoJCQkJCW5lY2Vzc2FyeSwgYW5kIGhhdmUgdGhlIHF1YWxpdHkgb2Ygbm9iaWxpdHkgb25seSBpbiBhIGxpbWl0ZWQgbWFubmVyCgkJCQkJ77yIc2luY2UgaXQgd291bGQgYmUgcHJlZmVyYWJsZSB0aGF0IG5laXRoZXIgaW5kaXZpZHVhbCBub3Igc3RhdGUgc2hvdWxkCgkJCQkJaGF2ZSBhbnkgbmVlZCBvZiBzdWNoIHRoaW5nc++8iSwgd2hlcmVhcyBhY3Rpb25zIGFpbWluZyBhdCBob25vcnMgYW5kCgkJCQkJCXJlc291cmNlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBjb25qZWN0dXJhbCBlbWVuZGF0aW9uIGdpdmVzCgkJCQkJCeKAmGRpc3RpbmN0aW9ucy7igJk8L25vdGU+IGFyZSB0aGUgbm9ibGVzdCBhY3Rpb25zCgkJCQkJYWJzb2x1dGVseTsgZm9yIHRoZSBmb3JtZXIgY2xhc3Mgb2YgYWN0cyBjb25zaXN0IGluIHRoZSByZW1vdmFsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIGlzIGEgY29uamVjdHVyYWwgZW1lbmRhdGlvbjsgdGhlIE1TUy4KCQkJCQkJZ2l2ZSDigJh0aGUgYWRvcHRpb24u4oCZPC9ub3RlPiBvZiBzb21ldGhpbmcgZXZpbCwgYnV0CgkJCQkJYWN0aW9ucyBvZiB0aGUgbGF0dGVyIGtpbmQgYXJlIHRoZSBvcHBvc2l0ZeKAlHRoZXkgYXJlIHRoZSBmb3VuZGF0aW9uCgkJCQkJYW5kIHRoZSBnZW5lcmF0aW9uIG9mIHRoaW5ncyBnb29kLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHZpcnR1b3VzIG1hbiB3aWxsIHVzZSBldmVuIHBvdmVydHksIGRpc2Vhc2UsIGFuZDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIG90aGVyIGZvcm1zIG9mIGJhZCBmb3J0dW5lIGluIGEgbm9ibGUgbWFubmVyLAoJCQkJCWJ1dCBmZWxpY2l0eSBjb25zaXN0cyBpbiB0aGVpciBvcHBvc2l0ZXMg77yIZm9yIGl0IGlzIGEgZGVmaW5pdGlvbgoJCQkJCWVzdGFibGlzaGVkIGJ5IG91ciBldGhpY2FsIGRpc2NvdXJzZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPgoJCQkJCQk8YmlibCBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExMTNhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTExM2EgMTUgZmYuPC9iaWJsPgoJCQkJCTwvbm90ZT4gdGhhdCB0aGUgdmlydHVvdXMgbWFuIGlzIHRoZSBtYW4gb2Ygc3VjaCBhIGNoYXJhY3RlciB0aGF0IGJlY2F1c2Ugb2YgaGlzCgkJCQkJdmlydHVlIHRoaW5ncyBhYnNvbHV0ZWx5IGdvb2QgYXJlIGdvb2QgdG8gaGltLCBhbmQgaXQgaXMgdGhlcmVmb3JlIGNsZWFyIHRoYXQKCQkJCQloaXMgZW1wbG95bWVudCBvZiB0aGVzZSBnb29kcyBtdXN0IGFsc28gYmUgdmlydHVvdXMgYW5kIG5vYmxlCgkJCQkJYWJzb2x1dGVsee+8iTsgYW5kIGhlbmNlIG1lbiBhY3R1YWxseSBzdXBwb3NlIHRoYXQgZXh0ZXJuYWwgZ29vZHMgYXJlIHRoZQoJCQkJCWNhdXNlIG9mIGhhcHBpbmVzcywganVzdCBhcyBpZiB0aGV5IHdlcmUgdG8gYXNzaWduIHRoZSBjYXVzZSBvZiBhIGJyaWxsaWFudGx5CgkJCQkJZmluZSBwZXJmb3JtYW5jZSBvbiB0aGUgaGFycCB0byB0aGUgaW5zdHJ1bWVudCByYXRoZXIgdGhhbiB0byB0aGUgc2tpbGwgb2YgdGhlCgkJCQkJcGxheWVyLiBJdCBmb2xsb3dzIHRoZXJlZm9yZSBmcm9tIHdoYXQgaGFzIGJlZW4gc2FpZCB0aGF0IHNvbWUgZ29vZHMgbXVzdCBiZQoJCQkJCWZvcnRoY29taW5nIHRvIHN0YXJ0IHdpdGggYW5kIG90aGVycyBtdXN0IGJlIHByb3ZpZGVkIGJ5IHRoZSBsZWdpc2xhdG9yLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+SGVuY2Ugd2UgcHJheSB0aGF0IHRoZQoJCQkJCW9yZ2FuaXphdGlvbiBvZiB0aGUgc3RhdGUgbWF5IGJlIHN1Y2Nlc3NmdWwgaW4gc2VjdXJpbmcgdGhvc2UgZ29vZHMgd2hpY2ggYXJlIGluCgkJCQkJdGhlIGNvbnRyb2wgb2YgZm9ydHVuZSDvvIhmb3IgdGhhdCBmb3J0dW5lIGRvZXMgY29udHJvbCBleHRlcm5hbCBnb29kcyB3ZQoJCQkJCXRha2UgYXMgYXhpb21hdGlj77yJOyBidXQgd2hlbiB3ZSBjb21lIHRvIHRoZSBzdGF0ZSdzIGJlaW5nIHZpcnR1b3VzLCB0bwoJCQkJCXNlY3VyZSB0aGlzIGlzIG5vdCB0aGUgZnVuY3Rpb24gb2YgZm9ydHVuZSBidXQgb2Ygc2NpZW5jZSBhbmQgcG9saWN5LiBCdXQgdGhlbgoJCQkJCXRoZSB2aXJ0dWUgb2YgdGhlIHN0YXRlIGlzIG9mIGNvdXJzZSBjYXVzZWQgYnkgdGhlIGNpdGl6ZW5zIHdobyBzaGFyZSBpbiBpdHMKCQkJCQlnb3Zlcm5tZW50IGJlaW5nIHZpcnR1b3VzOyBhbmQgaW4gb3VyIHN0YXRlIGFsbCB0aGUgY2l0aXplbnMgc2hhcmUgaW4gdGhlCgkJCQkJZ292ZXJubWVudC4gVGhlIHBvaW50IHdlIGhhdmUgdG8gY29uc2lkZXIgdGhlcmVmb3JlIGlzLCBob3cgZG9lcyBhIG1hbiBiZWNvbWUKCQkJCQl2aXJ0dW91cz8gRm9yIGV2ZW4gaWYgaXQgYmUgcG9zc2libGUgZm9yIHRoZSBjaXRpemVucyB0byBiZSB2aXJ0dW91cwoJCQkJCWNvbGxlY3RpdmVseSB3aXRob3V0IGJlaW5nIHNvIGluZGl2aWR1YWxseSwgdGhlIGxhdHRlciBpcyBwcmVmZXJhYmxlLCBzaW5jZSBmb3IKCQkJCQllYWNoIGluZGl2aWR1YWwgdG8gYmUgdmlydHVvdXMgZW50YWlscyBhcyBhIGNvbnNlcXVlbmNlIHRoZSBjb2xsZWN0aXZlIHZpcnR1ZSBvZgoJCQkJCWFsbC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTIuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGVyZSBhcmUgYWRtaXR0ZWRseSB0aHJlZQoJCQkJCXRoaW5ncyBieSB3aGljaCBtZW4gYXJlIG1hZGUgZ29vZCBhbmQgdmlydHVvdXMsIGFuZCB0aGVzZSB0aHJlZSB0aGluZ3MgYXJlCgkJCQkJbmF0dXJlLCBoYWJpdCBhbmQgcmVhc29uLiBGb3IgdG8gc3RhcnQgd2l0aCwgb25lIG11c3QgYmUgYm9ybiB3aXRoIHRoZSBuYXR1cmUgb2YKCQkJCQlhIGh1bWFuIGJlaW5nIGFuZCBub3Qgb2Ygc29tZSBvdGhlciBhbmltYWw7IGFuZCBzZWNvbmRseSwgb25lIG11c3QgYmUgYm9ybiBvZiBhCgkJCQkJY2VydGFpbiBxdWFsaXR5IG9mIGJvZHkgYW5kIG9mIHNvdWwuIEJ1dCB0aGVyZSBhcmUgc29tZSBxdWFsaXRpZXMgdGhhdCBpdCBpcyBvZgoJCQkJCW5vIHVzZSB0byBiZSBib3JuIHdpdGgsIDxtaWxlc3RvbmUgbj0iMTMzMmIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBvdXIgaGFiaXRzIG1ha2UgdXMgYWx0ZXIgdGhlbTogc29tZSBxdWFsaXRpZXMKCQkJCQlpbiBmYWN0IGFyZSBtYWRlIGJ5IG5hdHVyZSBsaWFibGUgdG8gYmUgbW9kaWZpZWQgYnkgdGhlIGhhYml0cyBpbiBlaXRoZXIKCQkJCQlkaXJlY3Rpb24sIGZvciB0aGUgd29yc2Ugb3IgZm9yIHRoZSBiZXR0ZXIuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ob3cgdGhlIG90aGVyIGFuaW1hbHMgbGl2ZSBjaGllZmx5IGJ5IG5hdHVyZSwgdGhvdWdoIHNvbWUKCQkJCQlpbiBzbWFsbCBkZWdyZWVzIGFyZSBndWlkZWQgYnkgaGFiaXRzIHRvbzsgYnV0IG1hbiBsaXZlcyBieSByZWFzb24gYWxzbywgZm9yIGhlCgkJCQkJYWxvbmUgb2YgYW5pbWFscyBwb3NzZXNzZXMgcmVhc29uOyBzbyB0aGF0IGluIGhpbSB0aGVzZSB0aHJlZSB0aGluZ3MgbXVzdCBiZSBpbgoJCQkJCWhhcm1vbnkgd2l0aCBvbmUgYW5vdGhlcjsgZm9yIG1lbiBvZnRlbiBhY3QgY29udHJhcnkgdG8gdGhlaXIgYWNxdWlyZWQgaGFiaXRzCgkJCQkJYW5kIHRvIHRoZWlyIG5hdHVyZSBiZWNhdXNlIG9mIHRoZWlyIHJlYXNvbiwgaWYgdGhleSBhcmUgY29udmluY2VkIHRoYXQgc29tZQoJCQkJCW90aGVyIGNvdXJzZSBvZiBhY3Rpb24gaXMgcHJlZmVyYWJsZS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyB3ZSBoYXZlCgkJCQkJCWFscmVhZHk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluIDQuPC9ub3RlPiBkZWZpbmVkIHRoZSBwcm9wZXIKCQkJCQluYXR1cmFsIGNoYXJhY3RlciBvZiB0aG9zZSB3aG8gYXJlIHRvIGJlIGFtZW5hYmxlIHRvIHRoZSBoYW5kIG9mIHRoZSBsZWdpc2xhdG9yOwoJCQkJCXdoYXQgbm93IHJlbWFpbnMgaXMgdGhlIHRhc2sgb2YgZWR1Y2F0aW9uLCBmb3IgbWVuIGxlYXJuIHNvbWUgdGhpbmdzIGJ5CgkJCQkJcHJhY3RpY2UsIG90aGVycyBieSBwcmVjZXB0LjxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBzaW5jZSBldmVyeSBwb2xpdGljYWwgY29tbXVuaXR5IGlzCgkJCQkJY29tcG9zZWQgb2YgcnVsZXJzIGFuZCBzdWJqZWN0cywgd2UgbXVzdCB0aGVyZWZvcmUgY29uc2lkZXIgd2hldGhlciB0aGUgcnVsZXJzCgkJCQkJYW5kIHRoZSBzdWJqZWN0cyBvdWdodCB0byBjaGFuZ2UsIG9yIHRvIHJlbWFpbiB0aGUgc2FtZSB0aHJvdWdoIGxpZmU7IGZvciBpdCBpcwoJCQkJCWNsZWFyIHRoYXQgdGhlaXIgZWR1Y2F0aW9uIGFsc28gd2lsbCBoYXZlIHRvIGJlIG1hZGUgdG8gY29ycmVzcG9uZCB3aXRoIHRoaXMKCQkJCQlkaXN0cmlidXRpb24gb2YgZnVuY3Rpb25zLiBJZiB0aGVuIGl0IHdlcmUgdGhlIGNhc2UgdGhhdCB0aGUgb25lIGNsYXNzIGRpZmZlcmVkCgkJCQkJZnJvbSB0aGUgb3RoZXIgYXMgd2lkZWx5IGFzIHdlIGJlbGlldmUgdGhlIGdvZHMgYW5kIGhlcm9lcyB0byBkaWZmZXIgZnJvbQoJCQkJCW1hbmtpbmQsIGhhdmluZyBmaXJzdCBhIGdyZWF0IHN1cGVyaW9yaXR5IGluIHJlZ2FyZCB0byB0aGUgYm9keSBhbmQgdGhlbiBpbgoJCQkJCXJlZ2FyZCB0bzxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIHNvdWwsIHNvIHRoYXQgdGhlCgkJCQkJcHJlLWVtaW5lbmNlIG9mIHRoZSBydWxlcnMgd2FzIGluZGlzcHV0YWJsZSBhbmQgbWFuaWZlc3QgdG8gdGhlIHN1YmplY3RzLCBpdCBpcwoJCQkJCWNsZWFyIHRoYXQgaXQgd291bGQgYmUgYmV0dGVyIGZvciB0aGUgc2FtZSBwZXJzb25zIGFsd2F5cyB0byBiZSBydWxlcnMgYW5kCgkJCQkJc3ViamVjdHMgb25jZSBmb3IgYWxsOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IGFzIHRoaXMKCQkJCQlpcyBub3QgZWFzeSB0byBzZWN1cmUsIGFuZCBhcyB3ZSBkbyBub3QgZmluZCBhbnl0aGluZyBjb3JyZXNwb25kaW5nIHRvIHRoZSBncmVhdAoJCQkJCWRpZmZlcmVuY2UgdGhhdCBTY3lsYXggc3RhdGVzIHRvIGV4aXN0IGJldHdlZW4ga2luZ3MgYW5kIHN1YmplY3RzIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAwMTk4IiBrZXk9InRnbiw3MDAwMTk4Ij5JbmRpYTwvcGxhY2VOYW1lPiwgaXQgaXMgY2xlYXIgdGhhdCBmb3IgbWFueSByZWFzb25zIGl0IGlzCgkJCQkJbmVjZXNzYXJ5IGZvciBhbGwgdG8gc2hhcmUgYWxpa2UgaW4gcnVsaW5nIGFuZCBiZWluZyBydWxlZCBpbiB0dXJuLiBGb3IgZXF1YWxpdHkKCQkJCQltZWFucyBmb3IgcGVyc29ucyB3aG8gYXJlIGFsaWtlIGlkZW50aXR5IG9mIHN0YXR1cywgYW5kIGFsc28gaXQgaXMKCQkJCQkJZGlmZmljdWx0PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgZW1lbmRhdGlvbiBzdWdnZXN0ZWQgYnkKCQkJCQkJUmljaGFyZHMgZ2l2ZXMg4oCYRm9yIGVxdWFsaXR5IGFuZCBpZGVudGl0eSDvvIhvZgoJCQkJCQlzdGF0dXPvvIkgYXJlIGp1c3QgZm9yIHBlcnNvbnMgd2hvIGFyZSBhbGlrZSwgYW5kIGl0IGlzCgkJCQkJCWRpZmZpY3VsdCzigJkgZXRjLjwvbm90ZT4gZm9yIGEgY29uc3RpdHV0aW9uIHRvIGVuZHVyZSB0aGF0IGlzCgkJCQkJZnJhbWVkIGluIGNvbnRyYXZlbnRpb24gb2YganVzdGljZS4gRm9yIGFsbCB0aGUgcGVvcGxlIHRocm91Z2hvdXQgdGhlIGNvdW50cnkKCQkJCQlhcmUgcmFuZ2VkIG9uIHRoZSBzaWRlIG9mIHRoZSBzdWJqZWN0IGNsYXNzIGluIHdpc2hpbmcgZm9yIGEgcmV2b2x1dGlvbiwgYW5kIGl0CgkJCQkJaXMgYSB0aGluZyBpbmNvbmNlaXZhYmxlIHRoYXQgdGhvc2UgaW4gdGhlIGdvdmVybm1lbnQgc2hvdWxkIGJlIHN1ZmZpY2llbnRseQoJCQkJCW51bWVyb3VzIHRvIG92ZXIgcG93ZXIgYWxsIG9mIHRoZXNlIHRvZ2V0aGVyLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHlldCBvbiB0aGUgb3RoZXIgaGFuZCB0aGF0IHRoZSBydWxlcnMgb3VnaHQgdG8gYmUKCQkJCQlzdXBlcmlvciB0byB0aGUgc3ViamVjdHMgY2Fubm90IGJlIGRpc3B1dGVkOyB0aGVyZWZvcmUgdGhlIGxhd2dpdmVyIG11c3QKCQkJCQljb25zaWRlciBob3cgdGhpcyBpcyB0byBiZSBzZWN1cmVkLCBhbmQgaG93IHRoZXkgYXJlIHRvIHBhcnRpY2lwYXRlIGluIHRoZQoJCQkJCWdvdmVybm1lbnQuIEFuZCB0aGlzIGhhcyBiZWVuIGFscmVhZHk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjguMywKCQkJCQkJMTMyOWEgNCBmZi48L25vdGU+IGRpc2N1c3NlZC4gTmF0dXJlIGhhcyBnaXZlbiB0aGUgZGlzdGluY3Rpb24gYnkgbWFraW5nIHRoZQoJCQkJCWdyb3VwIHRoYXQgaXMgaXRzZWxmIHRoZSBzYW1lIGluIHJhY2UgcGFydGx5IHlvdW5nZXIgYW5kIHBhcnRseSBvbGRlciwgb2Ygd2hpY2gKCQkJCQl0d28gc2V0cyBpdCBpcyBhcHByb3ByaWF0ZSB0byB0aGUgb25lIHRvIGJlIGdvdmVybmVkIGFuZCBmb3IgdGhlIG90aGVyIHRvCgkJCQkJZ292ZXJuOyBhbmQgbm8gb25lIGNoYWZlcyBvciB0aGlua3MgaGltc2VsZiBiZXR0ZXIgdGhhbiBoaXMgcnVsZXJzIHdoZW4gaGUgaXMKCQkJCQlnb3Zlcm5lZCBvbiB0aGUgZ3JvdW5kIG9mIGFnZSwgZXNwZWNpYWxseSBhcyBoZSBpcyBnb2luZyB0byBnZXQgYmFjayB3aGF0IGhlIGhhcwoJCQkJCXRodXMgY29udHJpYnV0ZWQgdG8gdGhlIGNvbW1vbiBzdG9jayB3aGVuIGhlIHJlYWNoZXMgdGhlIHByb3BlciBhZ2UuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JbiBhIHNlbnNlIHRoZXJlZm9yZSB3ZSBtdXN0IHNheSB0aGF0IHRoZQoJCQkJCXJ1bGVycyBhbmQgcnVsZWQgYXJlIHRoZSBzYW1lLCBhbmQgaW4gYSBzZW5zZSBkaWZmZXJlbnQuIDxtaWxlc3RvbmUgbj0iMTMzM2EiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkhlbmNlIHRoZWlyCgkJCQkJZWR1Y2F0aW9uIGFsc28gaXMgYm91bmQgdG8gYmUgaW4gb25lIHdheSB0aGUgc2FtZSBhbmQgaW4gYW5vdGhlciBkaWZmZXJlbnQuIEZvcgoJCQkJCWhlIHdobyBpcyB0byBiZSBhIGdvb2QgcnVsZXIgbXVzdCBoYXZlIGZpcnN0IGJlZW4gcnVsZWQsIGFzIHRoZSBzYXlpbmcgaXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBzZW50ZW5jZSBoZXJlIGJyZWFrcyBvZmYgaW50byBhIGxvbmcKCQkJCQkJcGFyZW50aGVzaXMsIGFmdGVyIHdoaWNoIGl0IGlzIG5vdCByZXN1bWVkLjwvbm90ZT4g77yIYW5kIGdvdmVybm1lbnQsCgkJCQkJYXMgaGFzIGJlZW4gc2FpZCBpbiB0aGUgZmlyc3QgZGlzY291cnNlcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkJvb2sgMy42LjYtMTIsIDEyNzhiIDMwIGZmLjwvbm90ZT4gaXMgb2YgdHdvIHNvcnRzLCBvbmUgY2FycmllZCBvbiBmb3IgdGhlCgkJCQkJc2FrZSBvZiB0aGUgcnVsZXIgYW5kIHRoZSBvdGhlciBmb3IgdGhlIHNha2Ugb2YgdGhlIHN1YmplY3Q7IG9mIHRoZXNlIHRoZSBmb3JtZXIKCQkJCQlpcyB3aGF0IHdlIGNhbGwgdGhlIHJ1bGUgb2YgYSBtYXN0ZXIsdGhlIGxhdHRlciBpcyB0aGUgZ292ZXJubWVudCBvZiBmcmVlIG1lbiAuCgkJCQkJLiAuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PbmUgc2VudGVuY2Ugb3IgbW9yZSBoYXMgYmVlbiBsb3N0CgkJCQkJCWhlcmUuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgc29tZSBvZiB0aGUgY29tbWFuZHMgZ2l2ZW4KCQkJCQlkaWZmZXIgbm90IGluIG5hdHVyZSBvZiB0aGUgc2VydmljZXMgY29tbWFuZGVkIGJ1dCBpbiB0aGVpciBvYmplY3QuIEhlbmNlIGEKCQkJCQludW1iZXIgb2Ygd2hhdCBhcmUgdGhvdWdodCB0byBiZSBtZW5pYWwgc2VydmljZXMgY2FuIGJlIGhvbm9yYWJseSBwZXJmb3JtZWQgZXZlbgoJCQkJCWJ5IGZyZWVtZW4gaW4geW91dGg7IHNpbmNlIGluIHJlZ2FyZCB0byBob25vciBhbmQgZGlzaG9ub3IgYWN0aW9ucyBkbyBub3QgZGlmZmVyCgkJCQkJc28gbXVjaCBpbiB0aGVtc2VsdmVzIGFzIGluIHRoZWlyIGVuZCBhbmQgb2JqZWN077yJLiBCdXQgc2luY2Ugd2Ugc2F5CgkJCQkJdGhhdCB0aGUgZ29vZG5lc3Mgb2YgYSBjaXRpemVuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIHRoZQoJCQkJCQlHcmVlayBzaG91bGQgYmUgYWx0ZXJlZCB0byBnaXZlIOKAmG9mIHRoZSBiZXN0CgkJCQkJCWNpdGl6ZW4u4oCZPC9ub3RlPiBhbmQgcnVsZXIgYXJlIHRoZSBzYW1lIGFzIHRoYXQgb2YgdGhlIGJlc3QgbWFuLAoJCQkJCWFuZCB0aGF0IHRoZSBzYW1lIHBlcnNvbiBvdWdodCB0byBiZWNvbWUgYSBzdWJqZWN0IGZpcnN0IGFuZCBhIHJ1bGVyIGFmdGVyd2FyZHMsCgkJCQkJaXQgd2lsbCBiZSBpbXBvcnRhbnQgZm9yIHRoZSBsZWdpc2xhdG9yIHRvIHN0dWR5IGhvdyBhbmQgYnkgd2hhdCBjb3Vyc2VzIG9mCgkJCQkJdHJhaW5pbmcgZ29vZCBtZW4gYXJlIHRvIGJlIHByb2R1Y2VkLCBhbmQgd2hhdCBpcyB0aGUgZW5kIG9mIHRoZSBiZXN0CgkJCQkJCWxpZmUuPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTMuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHNvdWwgaXMgZGl2aWRlZCBpbnRvIHR3byBwYXJ0cywgb2Ygd2hpY2ggb25lIGlzIGluIGl0c2VsZgoJCQkJCXBvc3Nlc3NlZCBvZiByZWFzb24sIHdoaWxlIHRoZSBvdGhlciBpcyBub3QgcmF0aW9uYWwgaW4gaXRzZWxmIGJ1dCBjYXBhYmxlIG9mCgkJCQkJb2JleWluZyByZWFzb24uIFRvIHRoZXNlIHBhcnRzIGluIG91ciB2aWV3IGJlbG9uZyB0aG9zZSB2aXJ0dWVzIGluIGFjY29yZGFuY2UKCQkJCQl3aXRoIHdoaWNoIGEgbWFuIGlzIHByb25vdW5jZWQgdG8gYmUgZ29vZCBpbiBzb21lIHdheS4gQnV0IGluIHdoaWNoIG9mCgkJCQkJCXRoZXNlPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50d28gcGFydHMgdGhlIGVuZCBvZiBtYW4KCQkJCQlyYXRoZXIgcmVzaWRlcywgdGhvc2Ugd2hvIGRlZmluZSB0aGUgcGFydHMgb2YgdGhlIHNvdWwgaW4gYWNjb3JkYW5jZSB3aXRoIG91cgoJCQkJCXZpZXcgd2lsbCBoYXZlIG5vIGRvdWJ0IGFzIHRvIGhvdyB0aGV5IHNob3VsZCBkZWNpZGUuIFRoZSB3b3JzZSBhbHdheXMgZXhpc3RzIGFzCgkJCQkJYSBtZWFucyB0byB0aGUgYmV0dGVyLCBhbmQgdGhpcyBpcyBtYW5pZmVzdCBhbGlrZSBpbiB0aGUgcHJvZHVjdHMgb2YgYXJ0IGFuZCBpbgoJCQkJCXRob3NlIG9mIG5hdHVyZTsgYnV0IHRoZSByYXRpb25hbCBwYXJ0IG9mIHRoZSBzb3VsIGlzIGJldHRlciB0aGFuIHRoZQoJCQkJCWlycmF0aW9uYWwuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhlIHJhdGlvbmFsIHBhcnQKCQkJCQlpcyBzdWJkaXZpZGVkIGludG8gdHdvLCBhY2NvcmRpbmcgdG8gb3VyIHVzdWFsIHNjaGVtZSBvZiBkaXZpc2lvbjsgZm9yIHJlYXNvbiBpcwoJCQkJCW9mIHR3byBraW5kcywgcHJhY3RpY2FsIGFuZCB0aGVvcmV0aWMsIHNvIHRoYXQgb2J2aW91c2x5IHRoZSByYXRpb25hbCBwYXJ0IG9mCgkJCQkJdGhlIHNvdWwgbXVzdCBhbHNvIGJlIHN1YmRpdmlkZWQgYWNjb3JkaW5nbHkuIEEgY29ycmVzcG9uZGluZyBjbGFzc2lmaWNhdGlvbiB3ZQoJCQkJCXNoYWxsIGFsc28gcHJvbm91bmNlIHRvIGhvbGQgYW1vbmcgaXRzIGFjdGl2aXRpZXM6IHRoZSBhY3Rpdml0aWVzIG9mIHRoZSBwYXJ0IG9mCgkJCQkJdGhlIHNvdWwgdGhhdCBpcyBieSBuYXR1cmUgc3VwZXJpb3IgbXVzdCBiZSBwcmVmZXJhYmxlIGZvciB0aG9zZSBwZXJzb25zIHdobyBhcmUKCQkJCQljYXBhYmxlIG9mIGF0dGFpbmluZyBlaXRoZXIgYWxsIHRoZSBzb3VsJ3MgYWN0aXZpdGllcyBvciB0d288bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIHR3byBsb3dlciBvbmVzLCB0aGUgdGhyZWUgYmVpbmcgdGhlIGFjdGl2aXRpZXMgb2YKCQkJCQkJdGhlIHRoZW9yZXRpYyByZWFzb24sIG9mIHRoZSBwcmFjdGljYWwgcmVhc29uLCBhbmQgb2YgdGhlIHBhc3Npb25zIHRoYXQKCQkJCQkJYWx0aG91Z2ggaXJyYXRpb25hbCBhcmUgYW1lbmFibGUgdG8gcmVhc29uLjwvbm90ZT4gb3V0IG9mIHRoZSB0aHJlZTsgc2luY2UKCQkJCQl0aGF0IHRoaW5nIGlzIGFsd2F5cyBtb3N0IGRlc2lyYWJsZSBmb3IgZWFjaCBwZXJzb24gd2hpY2ggaXMgdGhlIGhpZ2hlc3QgdG8KCQkJCQl3aGljaCBpdCBpcyBwb3NzaWJsZSBmb3IgaGltIHRvIGF0dGFpbi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTMuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFsc28gbGlmZSBhcyBhIHdob2xlIGlzIGRpdmlkZWQgaW50byBidXNpbmVzcyBhbmQgbGVpc3VyZSwKCQkJCQlhbmQgd2FyIGFuZCBwZWFjZSwgYW5kIG91ciBhY3Rpb25zIGFyZSBhaW1lZCBzb21lIG9mIHRoZW0gYXQgdGhpbmdzIG5lY2Vzc2FyeQoJCQkJCWFuZCB1c2VmdWwsIG90aGVycyBhdCB0aGluZ3Mgbm9ibGUuIEluIHRoZXNlIG1hdHRlcnMgdGhlIHNhbWUgcHJpbmNpcGxlIG9mCgkJCQkJcHJlZmVyZW5jZSB0aGF0IGFwcGxpZXMgdG8gdGhlIHBhcnRzIG9mIHRoZSBzb3VsIG11c3QgYXBwbHkgYWxzbyB0byB0aGUKCQkJCQlhY3Rpdml0aWVzIG9mIHRob3NlIHBhcnRzOiB3YXIgbXVzdCBiZSBmb3IgdGhlIHNha2Ugb2YgcGVhY2UsIGJ1c2luZXNzIGZvciB0aGUKCQkJCQlzYWtlIG9mIGxlaXN1cmUsIHRoaW5ncyBuZWNlc3NhcnkgYW5kIHVzZWZ1bCBmb3IgdGhlIHB1cnBvc2Ugb2YgdGhpbmdzIG5vYmxlLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy45IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHN0YXRlc21hbiB0aGVyZWZvcmUgbXVzdAoJCQkJCWxlZ2lzbGF0ZSB3aXRoIGFsbCB0aGVzZSBjb25zaWRlcmF0aW9ucyBpbiB2aWV3LCBib3RoIGluIHJlc3BlY3Qgb2YgdGhlIHBhcnRzIG9mCgkJCQkJdGhlIHNvdWwgYW5kIG9mIHRoZWlyIGFjdGl2aXRpZXMsIGFuZCBhaW1pbmcgbW9yZSBwYXJ0aWN1bGFybHkgYXQgdGhlIGdyZWF0ZXIKCQkJCQlnb29kcyBhbmQgdGhlIGVuZHMuIEFuZCB0aGUgc2FtZSBwcmluY2lwbGUgYXBwbGllcyBpbiByZWdhcmQgdG8gbW9kZXMgb2YgbGlmZQoJCQkJCWFuZCBjaG9pY2VzIG9mIGNvbmR1Y3Q6IGEgbWFuIHNob3VsZCBiZSBjYXBhYmxlIG9mIGVuZ2FnaW5nIGluIGJ1c2luZXNzIGFuZCB3YXIsCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTMzM2IiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCBzdGlsbCBtb3JlIGNhcGFibGUgb2YgbGl2aW5nIGluIHBlYWNlIGFuZCBsZWlzdXJlOyBhbmQgaGUKCQkJCQlzaG91bGQgZG8gd2hhdCBpcyBuZWNlc3NhcnkgYW5kIHVzZWZ1bCwgYnV0IHN0aWxsIG1vcmUgc2hvdWxkIGhlIGRvIHdoYXQgaXMKCQkJCQlub2JsZS4gVGhlc2UgdGhlbiBhcmUgdGhlIGFpbXMgdGhhdCBvdWdodCB0byBiZSBrZXB0IGluIHZpZXcgaW4gdGhlIGVkdWNhdGlvbiBvZgoJCQkJCXRoZSBjaXRpemVucyBib3RoIHdoaWxlIHN0aWxsIGNoaWxkcmVuIGFuZCBhdCB0aGUgbGF0ZXIgYWdlcyB0aGF0IHJlcXVpcmUKCQkJCQllZHVjYXRpb24uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZSBHcmVlayBwZW9wbGVzCgkJCQkJcmVwdXRlZCBhdCB0aGUgcHJlc2VudCBkYXkgdG8gaGF2ZSB0aGUgYmVzdCBjb25zdGl0dXRpb25zLCBhbmQgdGhlIGxhd2dpdmVycwoJCQkJCXRoYXQgZXN0YWJsaXNoZWQgdGhlbSwgbWFuaWZlc3RseSBkaWQgbm90IGZyYW1lIHRoZWlyIGNvbnN0aXR1dGlvbmFsIHN5c3RlbXMKCQkJCQl3aXRoIHJlZmVyZW5jZSB0byB0aGUgYmVzdCBlbmQsIG5vciBjb25zdHJ1Y3QgdGhlaXIgbGF3cyBhbmQgdGhlaXIgc2NoZW1lIG9mCgkJCQkJZWR1Y2F0aW9uIHdpdGggYSB2aWV3IHRvIGFsbCB0aGUgdmlydHVlcywgYnV0IHRoZXkgc3dlcnZlZCBhc2lkZSBpbiBhIHZ1bGdhcgoJCQkJCW1hbm5lciB0b3dhcmRzIHRob3NlIGV4Y2VsbGVuY2VzIHRoYXQgYXJlIHN1cHBvc2VkIHRvIGJlIHVzZWZ1bCBhbmQgbW9yZQoJCQkJCWNvbmR1Y2l2ZSB0byBnYWluLiBBbmQgZm9sbG93aW5nIHRoZSBzYW1lIGxpbmVzIGFzIHRoZXksIHNvbWUgbGF0ZXIgd3JpdGVycyBhbHNvCgkJCQkJaGF2ZSBwcm9ub3VuY2VkIHRoZSBzYW1lIG9waW5pb246IGluIHByYWlzaW5nIHRoZSBTcGFydGFuIGNvbnN0aXR1dGlvbiB0aGV5CgkJCQkJZXhwcmVzcyBhZG1pcmF0aW9uIGZvciB0aGUgYWltIG9mIGl0cyBmb3VuZGVyIG9uIHRoZSBncm91bmQgdGhhdCBoZSBmcmFtZWQgdGhlCgkJCQkJd2hvbGUgb2YgaGlzIGxlZ2lzbGF0aW9uIHdpdGggYSB2aWV3IHRvIGNvbnF1ZXN0IGFuZCB0byB3YXIuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjExIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlc2Ugdmlld3MgYXJlIGVhc3kgdG8gcmVmdXRlIG9uCgkJCQkJdGhlb3JldGljYWwgZ3JvdW5kcyBhbmQgYWxzbyBoYXZlIG5vdyBiZWVuIHJlZnV0ZWQgYnkgdGhlIGZhY3RzIG9mIGhpc3RvcnkuIEZvcgoJCQkJCWp1c3QgYXMgbW9zdCBvZiBtYW5raW5kIGNvdmV0IGJlaW5nIG1hc3RlciBvZiBtYW55IHNlcnZhbnRzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciBwb3NzaWJseSwg4oCYY292ZXQgYSB3aWRlCgkJCQkJCWVtcGlyZS7igJk8L25vdGU+IGJlY2F1c2UgdGhpcyBwcm9kdWNlcyBhIG1hbmlmb2xkIHN1cHBseSBvZgoJCQkJCWZvcnR1bmUncyBnb29kcywgc28gVGhpYnJvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VW5rbm93bi48L25vdGU+CgkJCQkJYW5kIGFsbCB0aGUgb3RoZXIgd3JpdGVycyBhYm91dCB0aGUgU3BhcnRhbiBjb25zdGl0dXRpb248bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnNob3cgYWRtaXJhdGlvbiBmb3IgdGhlIGxhd2dpdmVyIG9mIHRoZSBTcGFydGFucwoJCQkJCWJlY2F1c2Ugb3dpbmcgdG8gdGhlaXIgaGF2aW5nIGJlZW4gdHJhaW5lZCB0byBtZWV0IGRhbmdlcnMgdGhleSBnb3Zlcm5lZCBhIHdpZGUKCQkJCQllbXBpcmUuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+WWV0IGl0IGNsZWFybHkgZm9sbG93cwoJCQkJCXRoYXQgc2luY2UgYXMgYSBtYXR0ZXIgb2YgZmFjdCBhdCB0aGUgcHJlc2VudCBkYXkgdGhlIFNwYXJ0YW5zIG5vIGxvbmdlciBwb3NzZXNzCgkJCQkJYW4gZW1waXJlLCB0aGV5IGFyZSBub3QgaGFwcHksIGFuZCB0aGVpciBsYXdnaXZlciB3YXMgbm90IGEgZ29vZCBvbmUuIEFuZCBpdCBpcwoJCQkJCXJpZGljdWxvdXMgdGhhdCBhbHRob3VnaCB0aGV5IGhhdmUga2VwdCB0byBoaXMgbGF3cywgYW5kIGFsdGhvdWdoIG5vdGhpbmcKCQkJCQloaW5kZXJzIHRoZWlyIG9ic2VydmluZyB0aGUgbGF3cywgdGhleSBoYXZlIGxvc3QgdGhlIG5vYmxlIGxpZmUuIEFsc28gd3JpdGVycwoJCQkJCWhhdmUgYSB3cm9uZyBjb25jZXB0aW9uIG9mIHRoZSBwb3dlciBmb3Igd2hpY2ggdGhlIGxhd2dpdmVyIHNob3VsZCBkaXNwbGF5CgkJCQkJZXN0ZWVtOyB0byBnb3Zlcm4gZnJlZW1lbiBpcyBub2JsZXIgYW5kIG1vcmUgY29uam9pbmVkIHdpdGggdmlydHVlIHRoYW4gdG8gcnVsZQoJCQkJCWRlc3BvdGljYWxseS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTMuMTMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgYWdhaW4gaXQgaXMgbm90CgkJCQkJYSBwcm9wZXIgZ3JvdW5kIGZvciBkZWVtaW5nIGEgc3RhdGUgaGFwcHkgYW5kIGZvciBwcmFpc2luZyBpdHMgbGF3Z2l2ZXIsIHRoYXQgaXQKCQkJCQloYXMgcHJhY3Rpc2VkIGNvbnF1ZXN0IHdpdGggYSB2aWV3IHRvIHJ1bGluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBwcm9iYWJsZSBlbWVuZGF0aW9uIGdpdmVzIOKAmHRoYXQgaGUgaGFzIHRyYWluZWQgaXQgd2l0aCBhIHZpZXcKCQkJCQkJdG8gcnVsaW5nLuKAmTwvbm90ZT4gb3ZlciBpdHMgbmVpZ2hib3JzLiBUaGlzIHByaW5jaXBsZSBpcyBtb3N0CgkJCQkJZGlzYXN0cm91czsgaXQgZm9sbG93cyBmcm9tIGl0IHRoYXQgYW4gaW5kaXZpZHVhbCBjaXRpemVuIHdobyBoYXMgdGhlIGNhcGFjaXR5CgkJCQkJb3VnaHQgdG8gZW5kZWF2b3IgdG8gYXR0YWluIHRoZSBwb3dlciB0byBob2xkIHN3YXkgb3ZlciBoaXMgb3duIGNpdHk7IGJ1dCB0aGlzCgkJCQkJaXMganVzdCB3aGF0IHRoZSBTcGFydGFucyBjaGFyZ2UgYXMgYSByZXByb2FjaCBhZ2FpbnN0IHRoZWlyIGtpbmcgUGF1c2FuaWFzLAoJCQkJCWFsdGhvdWdoIGhlIGF0dGFpbmVkIHN1Y2ggaGlnaCBob25vci4gTm8gcHJpbmNpcGxlIHRoZXJlZm9yZSBhbmQgbm8gbGF3IG9mIHRoaXMKCQkJCQluYXR1cmUgaXMgZWl0aGVyIHN0YXRlc21hbmxpa2Ugb3IgcHJvZml0YWJsZSwgbm9yIGlzIGl0IHRydWU7IHRoZSBzYW1lIGlkZWFscwoJCQkJCWFyZSB0aGUgYmVzdCBib3RoIGZvciBpbmRpdmlkdWFscyBhbmQgZm9yIGNvbW11bml0aWVzLCBhbmQgdGhlIGxhd2dpdmVyIHNob3VsZAoJCQkJCWVuZGVhdm9yIHRvIGltcGxhbnQgdGhlbSBpbiB0aGUgc291bHMgb2YgbWFua2luZC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTMuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgcHJvcGVyIG9iamVjdCBvZiBwcmFjdGlzaW5nIG1pbGl0YXJ5IHRyYWluaW5nIGlzIG5vdAoJCQkJCWluIG9yZGVyIHRoYXQgbWVuIG1heSBlbnNsYXZlIHRob3NlIHdobyBkbyBub3QgZGVzZXJ2ZSBzbGF2ZXJ5LCBidXQgaW4gb3JkZXIKCQkJCQl0aGF0IGZpcnN0IHRoZXkgbWF5IHRoZW1zZWx2ZXMgYXZvaWQgYmVjb21pbmcgZW5zbGF2ZWQgdG8gb3RoZXJzOyB0aGVuIHNvIHRoYXQKCQkJCQl0aGV5IG1heSBzZWVrIHN1emVyYWludHkgZm9yIHRoZSBiZW5lZml0IG9mIHRoZSBzdWJqZWN0IHBlb3BsZSwgPG1pbGVzdG9uZSBuPSIxMzM0YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+YnV0IG5vdAoJCQkJCWZvciB0aGUgc2FrZSBvZiB3b3JsZC13aWRlIGRlc3BvdGlzbTsgYW5kIHRoaXJkbHkgdG8gaG9sZCBkZXNwb3RpYyBwb3dlciBvdmVyCgkJCQkJdGhvc2Ugd2hvIGRlc2VydmUgdG8gYmUgc2xhdmVzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkV4cGVyaWVuY2Ugc3VwcG9ydHMgdGhlIHRlc3RpbW9ueSBvZiB0aGVvcnksIHRoYXQgaXQgaXMgdGhlIGR1dHkgb2YgdGhlCgkJCQkJbGF3Z2l2ZXIgcmF0aGVyIHRvIHN0dWR5IGhvdyBoZSBtYXkgZnJhbWUgaGlzIGxlZ2lzbGF0aW9uIGJvdGggd2l0aCByZWdhcmQgdG8KCQkJCQl3YXJmYXJlIGFuZCBpbiBvdGhlciBkZXBhcnRtZW50cyBmb3IgdGhlIG9iamVjdCBvZiBsZWlzdXJlIGFuZCBvZiBwZWFjZS4gTW9zdAoJCQkJCW1pbGl0YXJ5IHN0YXRlcyByZW1haW4gc2FmZSB3aGlsZSBhdCB3YXIgYnV0IHBlcmlzaCB3aGVuIHRoZXkgaGF2ZSB3b24gdGhlaXIKCQkJCQllbXBpcmU7IGluIHBlYWNlLXRpbWUgdGhleSBsb3NlIHRoZWlyIGtlZW4gdGVtcGVyLCBsaWtlIGlyb24uPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGFuIGlyb24gYmxhZGUgd2hlbiBub3QgdXNlZCBsb3NlcwoJCQkJCQlrZWVubmVzcyBhbmQgaGFzIHRvIGJlIHJlLXRlbXBlcmVkLjwvbm90ZT4gVGhlIGxhd2dpdmVyIGlzIHRvIGJsYW1lLCBiZWNhdXNlCgkJCQkJaGUgZGlkIG5vdCBlZHVjYXRlIHRoZW0gdG8gYmUgYWJsZSB0byBlbXBsb3kgbGVpc3VyZS48bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHNpbmNlIGl0IGFwcGVhcnMgdGhhdAoJCQkJCW1lbiBoYXZlIHRoZSBzYW1lIGVuZCBjb2xsZWN0aXZlbHkgYW5kIGluZGl2aWR1YWxseSwgYW5kIHNpbmNlIHRoZSBzYW1lCgkJCQkJZGlzdGluY3RpdmUgYWltIG11c3QgbmVjZXNzYXJpbHkgYmVsb25nIGJvdGggdG8gdGhlIGJlc3QgbWFuIGFuZCB0byB0aGUgYmVzdAoJCQkJCWdvdmVybm1lbnQsIGl0IGlzIGNsZWFyIHRoYXQgdGhlIHZpcnR1ZXMgcmVsYXRpbmcgdG8gbGVpc3VyZSBhcmUgZXNzZW50aWFsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRvIHRoZSBzdGF0ZSBhcyB3ZWxsIGFzIHRvIHRoZQoJCQkJCQlpbmRpdmlkdWFsLjwvbm90ZT47IHNpbmNlLCBhcyBoYXMgYmVlbiBzYWlkIHJlcGVhdGVkbHksIHBlYWNlIGlzIHRoZSBlbmQgb2YKCQkJCQl3YXIsIGxlaXN1cmUgb2YgYnVzaW5lc3MuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjE3IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZQoJCQkJCXZpcnR1ZXMgdXNlZnVsIGZvciBsZWlzdXJlIGFuZCBmb3IgaXRzIGVtcGxveW1lbnQgYXJlIG5vdCBvbmx5IHRob3NlIHRoYXQKCQkJCQlvcGVyYXRlIGR1cmluZyBsZWlzdXJlIGJ1dCBhbHNvIHRob3NlIHRoYXQgb3BlcmF0ZSBpbiBidXNpbmVzczsgZm9yIG1hbnkgb2YgdGhlCgkJCQkJbmVjZXNzYXJpZXMgbXVzdCBuZWVkcyBiZSBmb3J0aGNvbWluZyB0byBnaXZlIHVzIG9wcG9ydHVuaXR5IGZvciBsZWlzdXJlLgoJCQkJCVRoZXJlZm9yZSBpdCBpcyBwcm9wZXIgZm9yIHRoZSBzdGF0ZSB0byBiZSB0ZW1wZXJhdGUsPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5icmF2ZSBhbmQgZW5kdXJpbmc7IHNpbmNlLCBhcyB0aGUgcHJvdmVyYiBnb2VzLAoJCQkJCXRoZXJlIGlzIG5vIGxlaXN1cmUgZm9yIHNsYXZlcywgYnV0IHBlb3BsZSB1bmFibGUgdG8gZmFjZSBkYW5nZXIgYnJhdmVseSBhcmUgdGhlCgkJCQkJc2xhdmVzIG9mIHRoZWlyIGFzc2FpbGFudHMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjE4IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmVmb3JlIGNvdXJhZ2UgYW5kIGZvcnRpdHVkZSBhcmUgbmVlZGVkIGZvciBidXNpbmVzcywgbG92ZSBvZiB3aXNkb20gZm9yCgkJCQkJbGVpc3VyZSwgdGVtcGVyYW5jZSBhbmQganVzdGljZSBmb3IgYm90aCBzZWFzb25zLCBhbmQgbW9yZSBlc3BlY2lhbGx5IHdoZW4gbWVuCgkJCQkJYXJlIGF0IHBlYWNlIGFuZCBoYXZlIGxlaXN1cmU7IGZvciB3YXIgY29tcGVscyBtZW4gdG8gYmUganVzdCBhbmQgdGVtcGVyYXRlLAoJCQkJCXdoZXJlYXMgdGhlIGVuam95bWVudCBvZiBwcm9zcGVyaXR5IGFuZCBwZWFjZWZ1bCBsZWlzdXJlIHRlbmQgdG8gbWFrZSB0aGVtCgkJCQkJaW5zb2xlbnQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjE5IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmVmb3JlIG11Y2gganVzdGljZQoJCQkJCWFuZCBtdWNoIHRlbXBlcmFuY2UgYXJlIG5lZWRlZCBieSB0aG9zZSB3aG8gYXJlIGRlZW1lZCB2ZXJ5IHByb3NwZXJvdXMgYW5kIHdobwoJCQkJCWVuam95IGFsbCB0aGUgdGhpbmdzIGNvdW50ZWQgYXMgYmxlc3NpbmdzLCBsaWtlIHRoZSBwZXJzb25zLCBpZiBzdWNoIHRoZXJlIGJlLAoJCQkJCWFzIHRoZSBwb2V0cyBzYXksPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJPGJpYmwgZGVmYXVsdD0iTk8iIG49Ikhlcy4gV0QgMTcwIiB2YWxpZD0ieWVzIj5IZXMuIFdEIDE3MCBmZi48L2JpYmw+CgkJCQkJPC9ub3RlPiB0aGF0IGR3ZWxsIGluIHRoZSBJc2xhbmRzIG9mIHRoZSBCbGVzdDsgdGhlc2Ugd2lsbCBtb3N0IG5lZWQgd2lzZG9tLAoJCQkJCXRlbXBlcmFuY2UgYW5kIGp1c3RpY2UsIHRoZSBtb3JlIHRoZXkgYXJlIGF0IGxlaXN1cmUgYW5kIGhhdmUgYW4gYWJ1bmRhbmNlIG9mCgkJCQkJc3VjaCBibGVzc2luZ3MuIEl0IGlzIGNsZWFyIHRoZXJlZm9yZSB3aHkgYSBzdGF0ZSB0aGF0IGlzIHRvIGJlIGhhcHB5IGFuZAoJCQkJCXJpZ2h0ZW91cyBtdXN0IHNoYXJlIGluIHRoZXNlIHZpcnR1ZXM7IGZvciBpZiBpdCBpcyBkaXNncmFjZWZ1bCB0byBiZSB1bmFibGUgdG8KCQkJCQl1c2Ugb3VyIGdvb2QgdGhpbmdzLCBpdCBpcyBzdGlsbCBtb3JlIGRpc2dyYWNlZnVsIHRvIGJlIHVuYWJsZSB0byB1c2UgdGhlbSBpbgoJCQkJCXRpbWUgb2YgbGVpc3VyZSwgYW5kIGFsdGhvdWdoIHNob3dpbmcgb3Vyc2VsdmVzIGdvb2QgbWVuIHdoZW4gZW5nYWdlZCBpbgoJCQkJCWJ1c2luZXNzIGFuZCB3YXIsIGluIHRpbWVzIG9mIHBlYWNlIGFuZCBsZWlzdXJlIHRvIHNlZW0gbm8gYmV0dGVyIHRoYW4gc2xhdmVzLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4yMCIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXJlZm9yZSB3ZSBtdXN0IG5vdAoJCQkJCWN1bHRpdmF0ZSB2aXJ0dWUgYWZ0ZXIgdGhlIG1hbm5lciBvZiB0aGUgc3RhdGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPi4gVGhlIHN1cGVyaW9yaXR5IG9mIHRoZSBTcGFydGFucwoJCQkJCW92ZXIgb3RoZXIgcmFjZXMgZG9lcyBub3QgbGllIDxtaWxlc3RvbmUgbj0iMTMzNGIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmluIHRoZWlyIGhvbGRpbmcgYSBkaWZmZXJlbnQgb3BpbmlvbiBmcm9tCgkJCQkJb3RoZXJzIGFzIHRvIHdoYXQgdGhpbmdzIGFyZSB0aGUgZ3JlYXRlc3QgZ29vZHMsIGJ1dCByYXRoZXIgaW4gdGhlaXIgYmVsaWV2aW5nCgkJCQkJdGhhdCB0aGVzZSBhcmUgb2J0YWluZWQgYnkgbWVhbnMgb2Ygb25lIHBhcnRpY3VsYXIgdmlydHVlOyB5ZXQgYmVjYXVzZSB0aGV5IGJvdGgKCQkJCQlkZWVtIHRoZXNlIHRoaW5ncyBhbmQgdGhlaXIgZW5qb3ltZW50IHRvIGJlIGdyZWF0ZXIgZ29vZHMgdGhhbiB0aGUgZW5qb3ltZW50IG9mCgkJCQkJdGhlIHZpcnR1ZXMgLiAuIC48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBlbmQgb2YgdGhpcyBzZW50ZW5jZQoJCQkJCQlhbmQgdGhlIGJlZ2lubmluZyBvZiB0aGUgbmV4dCBhcHBlYXIgdG8gaGF2ZSBiZWVuIGxvc3QuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+LiAuIC4gYW5kIHRoYXQgaXQgaXMgdG8gYmUgcHJhY3Rpc2VkIGZvciBpdHMgb3duCgkJCQkJc2FrZSBpcyBtYW5pZmVzdCBmcm9tIHRoZXNlIGNvbnNpZGVyYXRpb25zOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4yMSIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCBpdCBtdXN0IG5vdyBiZSBjb25zaWRlcmVkIGhvdyBhbmQgYnkgd2hhdCBtZWFucyB0aGlzCgkJCQkJd2lsbCBjb21lIGFib3V0LiBOb3cgd2UgaGF2ZSBpbmRlZWQgcHJldmlvdXNseSBkZWNpZGVkIHRoYXQgaXQgcmVxdWlyZXMgbmF0dXJlCgkJCQkJYW5kIGhhYml0IGFuZCByZWFzb24sIGFuZCBhbW9uZyB0aGVzZSwgd2hhdCBwYXJ0aWN1bGFyIHF1YWxpdHkgb2YgbmF0dXJlIG1lbgoJCQkJCW91Z2h0IHRvIHBvc3Nlc3MgaGFzIGJlZW4gZGVmaW5lZCBwcmV2aW91c2x5OyBidXQgaXQgcmVtYWlucyB0byBjb25zaWRlciB3aGV0aGVyCgkJCQkJbWVuIG91Z2h0IHRvIGJlIGVkdWNhdGVkIGZpcnN0IGJ5IG1lYW5zIG9mIHRoZSByZWFzb24gb3IgYnkgdGhlIGhhYml0cy4gRm9yCgkJCQkJYmV0d2VlbiByZWFzb24gYW5kIGhhYml0IHRoZSBtb3N0IHBlcmZlY3QgaGFybW9ueSBvdWdodCB0byBleGlzdCwgYXMgaXQgaXMKCQkJCQlwb3NzaWJsZSBib3RoIGZvciB0aGUgcmVhc29uIHRvIGhhdmUgbWlzc2VkIHRoZSBoaWdoZXN0IHByaW5jaXBsZSBhbmQgZm9yIG1lbiB0bwoJCQkJCWhhdmUgYmVlbiBhcyB3cm9uZ2x5IHRyYWluZWQgdGhyb3VnaCB0aGUgaGFiaXRzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4yMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoaXMgdGhlcmVmb3JlIGF0IGFsbCBldmVudHMgaXMgY2xlYXIgaW4gdGhlIGZpcnN0IHBsYWNlLAoJCQkJCWluIHRoZSBjYXNlIG9mIG1lbiBhcyBvZiBvdGhlciBjcmVhdHVyZXMsIHRoYXQgdGhlaXIgZW5nZW5kZXJpbmcgc3RhcnRzIGZyb20gYQoJCQkJCWJlZ2lubmluZywgYW5kIHRoYXQgdGhlIGVuZCBzdGFydHMgZnJvbSBhIGNlcnRhaW4gYmVnaW5uaW5nIHRoYXQgaXMgYW5vdGhlcgoJCQkJCQllbmQsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIGNvbmplY3R1cmFsIGFkZGl0aW9uIHRvIHRoZSB0ZXh0CgkJCQkJCWdpdmVzIOKAmHRoZSBlbmQgdG8gd2hpY2ggYSBjZXJ0YWluIGJlZ2lubmluZyBsZWFkcyBpcyBpdHNlbGYgdGhlCgkJCQkJCWJlZ2lubmluZyBvZiBhbm90aGVyIGVuZC7igJkgVGhlIGFjdGl2ZSB1c2Ugb2YgdGhlIHJlYXNvbiBpcyB0aGUgZW5kCgkJCQkJCe+8iGkuZS4gdGhlIGNvbXBsZXRpb24gYW5kIHRoZSBwdXJwb3Nl77yJIG9mIHRoZSBiaXJ0aCBhbmQKCQkJCQkJZ3Jvd3RoIG9mIHRoZSBodW1hbiBhbmltYWwuPC9ub3RlPiBhbmQgdGhhdCByZWFzb24gYW5kIGludGVsbGlnZW5jZSBhcmUgZm9yCgkJCQkJdXMgdGhlIGVuZCBvZiBvdXIgbmF0dXJhbCBkZXZlbG9wbWVudCwgc28gdGhhdCBpdCBpcyB3aXRoIGEgdmlldyB0byB0aGVzZSBlbmRzCgkJCQkJdGhhdCBvdXIgZW5nZW5kZXJpbmcgYW5kIHRoZSB0cmFpbmluZyBvZiBvdXIgaGFiaXRzIG11c3QgYmUgcmVndWxhdGVkLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4yMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzZWNvbmRseSwgYXMgc291bCBhbmQgYm9keQoJCQkJCWFyZSB0d28sIHNvIHdlIG9ic2VydmUgdGhhdCB0aGUgc291bCBhbHNvIGhhcyB0d28gcGFydHMsIHRoZSBpcnJhdGlvbmFsIHBhcnQgYW5kCgkJCQkJdGhlIHBhcnQgcG9zc2Vzc2luZyByZWFzb24sIGFuZCB0aGF0IHRoZSBzdGF0ZXMgd2hpY2ggdGhleSBleHBlcmllbmNlIGFyZSB0d28gaW4KCQkJCQkJbnVtYmVyLDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIG9uZSBiZWluZyBkZXNpcmUgYW5kCgkJCQkJdGhlIG90aGVyIGludGVsbGlnZW5jZTsgYW5kIGFzIHRoZSBib2R5IGlzIHByaW9yIGluIGl0cyBkZXZlbG9wbWVudCB0byB0aGUgc291bCwKCQkJCQlzbyB0aGUgaXJyYXRpb25hbCBwYXJ0IG9mIHRoZSBzb3VsIGlzIHByaW9yIHRvIHRoZSByYXRpb25hbC4gQW5kIHRoaXMgYWxzbyBpcwoJCQkJCW9idmlvdXMsIGJlY2F1c2UgcGFzc2lvbiBhbmQgd2lsbCwgYW5kIGFsc28gYXBwZXRpdGUsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGVzZSB0aHJlZSBlbW90aW9ucyBhcmUgc3ViZGl2aXNpb25zIG9mCgkJCQkJCeKAmGRlc2lyZeKAmSBhYm92ZS48L25vdGU+IGV4aXN0IGluIGNoaWxkcmVuIGV2ZW4gYXMgc29vbiBhcwoJCQkJCXRoZXkgYXJlIGJvcm4sIGJ1dCBpdCBpcyB0aGUgbmF0dXJlIG9mIHJlYXNvbmluZyBhbmQgaW50ZWxsaWdlbmNlIHRvIGFyaXNlIGluCgkJCQkJdGhlbSBhcyB0aGV5IGdyb3cgb2xkZXIuIFRoZXJlZm9yZSBpbiB0aGUgZmlyc3QgcGxhY2UgaXQgaXMgbmVjZXNzYXJ5IGZvciB0aGUKCQkJCQl0cmFpbmluZyBvZiB0aGUgYm9keSB0byBwcmVjZWRlIHRoYXQgb2YgdGhlIG1pbmQsIGFuZCBzZWNvbmRseSBmb3IgdGhlIHRyYWluaW5nCgkJCQkJb2YgdGhlIGFwcGV0aXRlIHRvIHByZWNlZGUgdGhhdCBvZiB0aGUgaW50ZWxsaWdlbmNlOyBidXQgdGhlIHRyYWluaW5nIG9mIHRoZQoJCQkJCWFwcGV0aXRlIG11c3QgYmUgZm9yIHRoZSBzYWtlIG9mIHRoZSBpbnRlbGxlY3QsIGFuZCB0aGF0IG9mIHRoZSBib2R5IGZvciB0aGUKCQkJCQlzYWtlIG9mIHRoZSBzb3VsLjxtaWxlc3RvbmUgZWQ9IlAiIG49IjE0LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluYXNtdWNoIHRoZXJlZm9yZSBhcyBpdCBpcyB0aGUgZHV0eSBvZiB0aGUgbGF3Z2l2ZXIgdG8KCQkJCQljb25zaWRlciBmcm9tIHRoZSBzdGFydCBob3cgdGhlIGNoaWxkcmVuIHJlYXJlZCBhcmUgdG8gb2J0YWluIHRoZSBiZXN0IGJvZGlseQoJCQkJCWZyYW1lcywgaGUgbXVzdCBmaXJzdCBwYXkgYXR0ZW50aW9uIHRvIHRoZSB1bmlvbiBvZiB0aGUgc2V4ZXMsIGFuZCBzZXR0bGUgd2hlbgoJCQkJCWFuZCBpbiB3aGF0IGNvbmRpdGlvbiBhIGNvdXBsZSBzaG91bGQgcHJhY3Rpc2UgbWF0cmltb25pYWwgaW50ZXJjb3Vyc2UuIEluCgkJCQkJbGVnaXNsYXRpbmcgZm9yIHRoaXMgcGFydG5lcnNoaXAgaGUgbXVzdCBwYXkgcmVnYXJkIHBhcnRseSB0byB0aGUgcGVyc29ucwoJCQkJCXRoZW1zZWx2ZXMgYW5kIHRvIHRoZWlyIHNwYW4gb2YgbGlmZSwgc28gdGhhdCB0aGV5IG1heSBhcnJpdmUgdG9nZXRoZXIgYXQgdGhlCgkJCQkJc2FtZSBwZXJpb2QgaW4gdGhlaXIgYWdlcywgYW5kIHRoZWlyIHBvd2VycyBtYXkgbm90IGJlIGF0IGRpc2NvcmQgdGhyb3VnaCB0aGUKCQkJCQltYW4gYmVpbmcgc3RpbGwgY2FwYWJsZSBvZiBwYXJlbnRhZ2UgYW5kIHRoZSB3aWZlIGluY2FwYWJsZSwgb3IgdGhlIHdpZmUgY2FwYWJsZQoJCQkJCWFuZCB0aGUgbWFuIG5vdCDvvIhmb3IgdGhpcyBjYXVzZXMgZGlmZmVyZW5jZXMgYW5kIGFjdHVhbCBkaXNjb3JkIGJldHdlZW4KCQkJCQl0aGVt77yJLCA8bWlsZXN0b25lIGVkPSJQIiBuPSIxNC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGFsc28gaGUgbXVzdAoJCQkJCWNvbnNpZGVyIGFzIHdlbGwgdGhlIHN1Y2Nlc3Npb24gb2YgdGhlIGNoaWxkcmVuLCBmb3IgdGhlIGNoaWxkcmVuIG11c3QgbmVpdGhlcgoJCQkJCWJlIHRvbyBmYXIgcmVtb3ZlZCBpbiB0aGVpciBhZ2VzIGZyb20gdGhlIGZhdGhlcnMg77yIc2luY2UgZWxkZXJseQoJCQkJCWZhdGhlcnMgZ2V0IG5vIGdvb2QgZnJvbSB0aGVpciBjaGlsZHJlbidzIHJldHVybiBvZiB0aGVpciBmYXZvcnMsIG5vciBkbyB0aGUKCQkJCQljaGlsZHJlbiBmcm9tIHRoZSBoZWxwIHRoZXkgZ2V0IGZyb20gdGhlIGZhdGhlcnPvvIksIDxtaWxlc3RvbmUgbj0iMTMzNWEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPm5vciBtdXN0IHRoZXkgYmUKCQkJCQl0b28gbmVhciB0aGVtIO+8iGZvciB0aGlzIGludm9sdmVzIG11Y2ggdW5wbGVhc2FudG5lc3MsIHNpbmNlIGluIHN1Y2gKCQkJCQlmYW1pbGllcyB0aGVyZSBpcyBsZXNzIHJlc3BlY3QgZmVsdCBiZXR3ZWVuIHRoZW0sIGFzIGJldHdlZW4gY29tcGFuaW9ucyBvZiB0aGUKCQkJCQlzYW1lIGFnZSwgYW5kIGFsc28gdGhlIG5lYXJuZXNzIG9mIGFnZSBsZWFkcyB0byBmcmljdGlvbiBpbiBob3VzZWhvbGQKCQkJCQlhZmZhaXJz77yJOyBhbmQgaW4gYWRkaXRpb24sIHRvIHJldHVybiB0byB0aGUgcG9pbnQgZnJvbSB3aGljaCB3ZSBiZWdhbgoJCQkJCXRoaXMgZGlncmVzc2lvbiwgbWVhc3VyZXMgbXVzdCBiZSB0YWtlbiB0byBlbnN1cmUgdGhhdCB0aGUgY2hpbGRyZW4gcHJvZHVjZWQgbWF5CgkJCQkJaGF2ZSBib2RpbHkgZnJhbWVzIHN1aXRlZCB0byB0aGUgd2lzaCBvZiB0aGUgbGF3Z2l2ZXIuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE0LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVzZSByZXN1bHRzIHRoZW4gYXJlIGFsbW9zdCBhbGwgYXR0YWluZWQgYnkgb25lCgkJCQkJbW9kZSBvZiByZWd1bGF0aW9uLiBGb3Igc2luY2UgdGhlIHBlcmlvZCBvZiBwYXJlbnRhZ2UgdGVybWluYXRlcywgc3BlYWtpbmcKCQkJCQlnZW5lcmFsbHksIHdpdGggbWVuIGF0IHRoZSBhZ2Ugb2Ygc2V2ZW50eSBhdCB0aGUgb3V0c2lkZSwgYW5kIHdpdGggd29tZW4gYXQKCQkJCQlmaWZ0eSwgdGhlIGNvbW1lbmNlbWVudCBvZiB0aGVpciB1bmlvbiBzaG91bGQgY29ycmVzcG9uZCBpbiByZXNwZWN0IG9mIGFnZSB3aXRoCgkJCQkJdGhlc2UgdGltZXMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE0LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdGhlIG1hdGluZyBvZiB0aGUKCQkJCQl5b3VuZyBpcyBiYWQgZm9yIGNoaWxkLWJlYXJpbmc7IGZvciBpbiBhbGwgYW5pbWFsIHNwZWNpZXMgdGhlIG9mZnNwcmluZyBvZiB0aGUKCQkJCQl5b3VuZyBhcmUgbW9yZSBpbXBlcmZlY3QgYW5kIGxpa2VseSB0byBwcm9kdWNlIGZlbWFsZSBjaGlsZHJlbiw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNvbWUgZWRpdG9ycyB3cml0ZSA8Zm9yZWlnbiBsYW5nPSJncmVlayI+zrjOt8674b27z4TOv866zrE8L2ZvcmVpZ24+IGFuZCBpbnRlcnByZXQg4oCYbW9yZSBsaWtlbHkgdG8gYmUgYm9ybgoJCQkJCQlmZW1hbGVzLuKAmSDvvIggPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs64zrfOu8+Fz4ThvbnOus6xPC9mb3JlaWduPiwKCQkJCQkJ4oCYbGlrZWx5IHRvIGJlYXIgZmVtYWxlcyzigJkgaXMgYXBwbGllZCB0byB0aGUgeW91bmcKCQkJCQkJcGFyZW50cyB0aGVtc2VsdmVzIGluIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBIQSA3NjZiLjI5Ij5BcmlzdG90LiBIaXN0LiBBbi4gNzY2YgoJCQkJCQkJMjk8L2JpYmw+Lu+8iTwvbm90ZT4gYW5kIHNtYWxsIGluIGZpZ3VyZSwgc28gdGhhdCB0aGUgc2FtZSB0aGluZwoJCQkJCW11c3QgbmVjZXNzYXJpbHkgb2NjdXIgaW4gdGhlIGh1bWFuIHJhY2UgYWxzby4gQW5kIGEgcHJvb2Ygb2YgdGhpcyBpcyB0aGF0IGluCgkJCQkJYWxsIHRoZSBzdGF0ZXMgd2hlcmUgaXQgaXMgdGhlIGxvY2FsIGN1c3RvbSB0byBtYXRlIHlvdW5nIG1lbiBhbmQgeW91bmcgd29tZW4sCgkJCQkJdGhlIHBlb3BsZSBhcmUgZGVmb3JtZWQgYW5kIHNtYWxsIG9mIGJvZHkuIEFuZCBhZ2FpbiB5b3VuZyB3b21lbiBsYWJvciBtb3JlLCBhbmQKCQkJCQltb3JlIG9mIHRoZW0gZGllIGluIGNoaWxkYmlydGg7IGluZGVlZCBhY2NvcmRpbmcgdG8gc29tZSBhY2NvdW50cyBzdWNoIHdhcyB0aGUKCQkJCQlyZWFzb24gd2h5IHRoZSBvcmFjbGU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxmb3JlaWduIGxhbmc9ImdyZWVrIj7OnOG9tCDPhOG9s868zr3OtSDOveG9s86xzr0g4byEzrvOv866zrE8L2ZvcmVpZ24+77yI4oCYY3V0IG5vdCBhIG5ldwoJCQkJCQlmdXJyb3figJnvvIkgc2Nob2wuPC9ub3RlPiB3YXMgZ2l2ZW48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRvIHRoZSBwZW9wbGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDUwMDQyODciIGtleT0idGduLDUwMDQyODciPlRyb2V6ZW48L3BsYWNlTmFtZT4sIGJlY2F1c2UgbWFueSB3ZXJlIGR5aW5nIG93aW5nIHRvIGl0cyBiZWluZyB0aGVpcgoJCQkJCWN1c3RvbSBmb3IgdGhlIHdvbWVuIHRvIG1hcnJ5IHlvdW5nLCBhbmQgaXQgZGlkIG5vdCByZWZlciB0byB0aGUgaGFydmVzdC4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTQuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhZ2FpbiBpdCBhbHNvIGNvbnRyaWJ1dGVzCgkJCQkJdG8gY2hhc3RpdHkgZm9yIHRoZSBiZXN0b3dhbCBvZiB3b21lbiBpbiBtYXJyaWFnZSB0byBiZSBtYWRlIHdoZW4gdGhleSBhcmUKCQkJCQlvbGRlciwgZm9yIGl0IGlzIHRob3VnaHQgdGhhdCB0aGV5IGFyZSBtb3JlIGxpY2VudGlvdXMgd2hlbiB0aGV5IGhhdmUgaGFkCgkJCQkJaW50ZXJjb3Vyc2UgaW4geW91dGguIEFsc28gdGhlIG1hbGVzIGFyZSB0aG91Z2h0IHRvIGJlIGFycmVzdGVkIGluIGJvZGlseSBncm93dGgKCQkJCQlpZiB0aGV5IGhhdmUgaW50ZXJjb3Vyc2Ugd2hpbGUgdGhlIHNlZWQgaXMgc3RpbGwgZ3Jvd2luZywgZm9yIHRoaXMgYWxzbyBoYXMgYQoJCQkJCWZpeGVkIHBlcmlvZCBhZnRlciBwYXNzaW5nIHdoaWNoIGl0IGlzIG5vIGxvbmdlciBwbGVudGlmdWwuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE0LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVyZWZvcmUgaXQgaXMgZml0dGluZyBmb3IgdGhlIHdvbWVuIHRvIGJlIG1hcnJpZWQKCQkJCQlhdCBhYm91dCB0aGUgYWdlIG9mIGVpZ2h0ZWVuIGFuZCB0aGUgbWVuIGF0IHRoaXJ0eS1zZXZlbiBvciBhIGxpdHRsZSBiZWZvcmU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSB3b3JkIOKAmGJlZm9yZeKAmSBpcyBhCgkJCQkJCWNvbmplY3R1cmFsIGluc2VydGlvbi48L25vdGU+4oCUZm9yIHRoYXQgd2lsbCBnaXZlIGxvbmcgZW5vdWdoIGZvcgoJCQkJCXRoZSB1bmlvbiB0byB0YWtlIHBsYWNlIHdpdGggdGhlaXIgYm9kaWx5IHZpZ29yIGF0IGl0cyBwcmltZSwgYW5kIGZvciBpdCB0bwoJCQkJCWFycml2ZSB3aXRoIGEgY29udmVuaWVudCBjb2luY2lkZW5jZSBvZiBkYXRlcyBhdCB0aGUgdGltZSB3aGVuIHByb2NyZWF0aW9uCgkJCQkJY2Vhc2VzLiBNb3Jlb3ZlciB0aGUgc3VjY2Vzc2lvbiBvZiB0aGUgY2hpbGRyZW4gdG8gdGhlIGVzdGF0ZXMsIGlmIHRoZWlyIGJpcnRoCgkJCQkJZHVseSBvY2N1cnMgc29vbiBhZnRlciB0aGUgcGFyZW50cyBtYXJyeSwgd2lsbCB0YWtlIHBsYWNlIHdoZW4gdGhleSBhcmUKCQkJCQliZWdpbm5pbmcgdGhlaXIgcHJpbWUsIGFuZCB3aGVuIHRoZSBwYXJlbnRzJyBwZXJpb2Qgb2Ygdmlnb3IgaGFzIG5vdyBjb21lIHRvIGEKCQkJCQljbG9zZSwgdG93YXJkcyB0aGUgYWdlIG9mIHNldmVudHkuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE0LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgcHJvcGVyIGFnZSB0aGVyZWZvcmUgZm9yIHVuaW9uIGhhcyBiZWVuIGRpc2N1c3NlZDsgYXMgdG8gdGhlIHByb3BlciB0aW1lcwoJCQkJCWluIHJlc3BlY3Qgb2YgdGhlIHNlYXNvbiB3ZSBtYXkgYWNjZXB0IHdoYXQgaXMgY3VzdG9tYXJ5IHdpdGggbW9zdCBwZW9wbGUsIHdobwoJCQkJCWhhdmUgcmlnaHRseSBkZWNpZGVkIGV2ZW4gYXMgaXQgaXMgdG8gcHJhY3Rpc2UgbWFyaXRhbCBjb2hhYml0YXRpb24gaW4gd2ludGVyLgoJCQkJCUFuZCBwZW9wbGUgc2hvdWxkIGFsc28gc3R1ZHkgZm9yIHRoZW1zZWx2ZXMsIHdoZW4gdGhlaXIgdGltZSBjb21lcywgdGhlCgkJCQkJdGVhY2hpbmdzIG9mIHBoeXNpY2lhbnMgYW5kIG5hdHVyYWwgcGhpbG9zb3BoZXJzIG9uIHRoZSBzdWJqZWN0IG9mIHRoZQoJCQkJCXByb2NyZWF0aW9uIG9mIGNoaWxkcmVuOyB0aGUgc3VpdGFibGUgYm9kaWx5IHNlYXNvbnMgYXJlIGFkZXF1YXRlbHkgZGlzY3Vzc2VkIGJ5CgkJCQkJdGhlIHBoeXNpY2lhbnMsIDxtaWxlc3RvbmUgbj0iMTMzNWIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGUgcXVlc3Rpb24gb2Ygd2VhdGhlciBieSB0aGUgbmF0dXJhbAoJCQkJCXBoaWxvc29waGVycywgd2hvIHNheSB0aGF0IG5vcnRoIHdpbmRzIGFyZSBtb3JlIGZhdm9yYWJsZSB0aGFuIHNvdXRoLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxNC44IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHBhcnRpY3VsYXIga2luZCBvZiBib2RpbHkgY29uc3RpdHV0aW9uCgkJCQkJaW4gdGhlIHBhcmVudHMgdGhhdCB3aWxsIGJlIG1vc3QgYmVuZWZpY2lhbCBmb3IgdGhlIG9mZnNwcmluZyBtdXN0IGJlIGR3ZWx0IG9uCgkJCQkJbW9yZSBpbiBkZXRhaWwgaW4gb3VyIGRpc2N1c3Npb24gb2YgdGhlIG1hbmFnZW1lbnQgb2YgY2hpbGRyZW48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgd2FzIG5ldmVyIHdyaXR0ZW4sIG9yIGhhcyBiZWVuCgkJCQkJCWxvc3QuPC9ub3RlPjsgaXQgaXMgc3VmZmljaWVudCB0byBzcGVhayBvZiBpdCBpbiBvdXRsaW5lIG5vdy4gVGhlIGF0aGxldGUncwoJCQkJCWhhYml0IG9mIGJvZHkgaXMgbm90IHNlcnZpY2VhYmxlIGZvciBib2RpbHkgZml0bmVzcyBhcyByZXF1aXJlZCBieSBhIGNpdGl6ZW4sCgkJCQkJbm9yIGZvciBoZWFsdGggYW5kIHBhcmVudGFnZSwgbm9yIHlldCBpcyBhIGhhYml0IHRoYXQgaXMgdG9vIHZhbGV0dWRpbmFyaWFuIGFuZAoJCQkJCXVuZml0IGZvciBsYWJvciwgYnV0IHRoZSBjb25kaXRpb24gdGhhdCBsaWVzIGJldHdlZW4gdGhlbS4gVGhlIGJvZGlseSBoYWJpdAoJCQkJCXRoZXJlZm9yZSBzaG91bGQgaGF2ZSBiZWVuIHRyYWluZWQgYnkgZXhlcmNpc2UsIGJ1dCBub3QgYnkgZXhlcmNpc2VzIHRoYXQgYXJlCgkJCQkJdmlvbGVudCwgYW5kIG5vdCBmb3Igb25lIGZvcm0gb2YgbGFib3Igb25seSwgYXMgaXMgdGhlIGF0aGxldGUncyBoYWJpdCBvZiBib2R5LAoJCQkJCWJ1dCBmb3IgdGhlIHB1cnN1aXRzIG9mIGZyZWUgbWVuLiBBbmQgdGhlc2UgYXJyYW5nZW1lbnRzIG11c3QgYmUgcHJvdmlkZWQgYWxpa2UKCQkJCQlmb3IgbWVuIGFuZCB3b21lbi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTQuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBwcmVnbmFudAoJCQkJCXdvbWVuIGFsc28gbXVzdCB0YWtlIGNhcmUgb2YgdGhlaXIgYm9kaWVzLCBub3QgYXZvaWRpbmcgZXhlcmNpc2Ugbm9yIGFkb3B0aW5nIGEKCQkJCQlsb3cgZGlldDsgdGhpcyBpdCBpcyBlYXN5IGZvciB0aGUgbGF3Z2l2ZXIgdG8gc2VjdXJlIGJ5IG9yZGVyaW5nIHRoZW0gdG8gbWFrZSBhCgkJCQkJam91cm5leSBkYWlseSBmb3IgdGhlIGR1ZSB3b3JzaGlwIG9mIHRoZSBkZWl0aWVzIHdob3NlIG9mZmljZSBpcyB0aGUgY29udHJvbCBvZgoJCQkJCWNoaWxkYmlydGguIEFzIHJlZ2FyZHMgdGhlIG1pbmQsIGhvd2V2ZXIsIG9uIHRoZSBjb250cmFyeSBpdCBzdWl0cyB0aGVtIHRvIHBhc3MKCQkJCQl0aGUgdGltZSBtb3JlIGluZG9sZW50bHkgdGhhbiBhcyByZWdhcmRzIHRoZWlyIGJvZGllczsgZm9yIGNoaWxkcmVuIGJlZm9yZSBiaXJ0aAoJCQkJCWFyZSBldmlkZW50bHkgYWZmZWN0ZWQgYnkgdGhlIG1vdGhlciBqdXN0IGFzIGdyb3dpbmcgcGxhbnRzIGFyZSBieSB0aGUKCQkJCQkJZWFydGguPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTQuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BcyB0byBleHBvc2luZwoJCQkJCQlvcjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+cmVhcmluZyB0aGUgY2hpbGRyZW4gYm9ybiwgbGV0CgkJCQkJdGhlcmUgYmUgYSBsYXcgdGhhdCBubyBkZWZvcm1lZCBjaGlsZCBzaGFsbCBiZSByZWFyZWQ7IGJ1dCBvbiB0aGUgZ3JvdW5kIG9mCgkJCQkJbnVtYmVyIG9mIGNoaWxkcmVuLCBpZiB0aGUgcmVndWxhciBjdXN0b21zIGhpbmRlciBhbnkgb2YgdGhvc2UgYm9ybiBiZWluZwoJCQkJCWV4cG9zZWQsIHRoZXJlIG11c3QgYmUgYSBsaW1pdCBmaXhlZCB0byB0aGUgcHJvY3JlYXRpb24gb2Ygb2Zmc3ByaW5nLCBhbmQgaWYgYW55CgkJCQkJcGVvcGxlIGhhdmUgYSBjaGlsZCBhcyBhIHJlc3VsdCBvZiBpbnRlcmNvdXJzZSBpbiBjb250cmF2ZW50aW9uIG9mIHRoZXNlCgkJCQkJcmVndWxhdGlvbnMsIGFib3J0aW9uIG11c3QgYmUgcHJhY3Rpc2VkIG9uIGl0IGJlZm9yZSBpdCBoYXMgZGV2ZWxvcGVkIHNlbnNhdGlvbgoJCQkJCWFuZCBsaWZlOyBmb3IgdGhlIGxpbmUgYmV0d2VlbiBsYXdmdWwgYW5kIHVubGF3ZnVsIGFib3J0aW9uIHdpbGwgYmUgbWFya2VkIGJ5CgkJCQkJdGhlIGZhY3Qgb2YgaGF2aW5nIHNlbnNhdGlvbiBhbmQgYmVpbmcgYWxpdmUuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE0LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHNpbmNlIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGZpdCBhZ2UgZm9yIGEgbWFuIGFuZCBmb3IgYQoJCQkJCXdvbWFuLCBhdCB3aGljaCB0aGV5IGFyZSB0byBiZWdpbiB0aGVpciB1bmlvbiwgaGFzIGJlZW4gZGVmaW5lZCwgbGV0IGl0IGFsc28gYmUKCQkJCQlkZWNpZGVkIGZvciBob3cgbG9uZyBhIHRpbWUgaXQgaXMgc3VpdGFibGUgZm9yIHRoZW0gdG8gc2VydmUgdGhlIHN0YXRlIGluIHRoZQoJCQkJCW1hdHRlciBvZiBwcm9kdWNpbmcgY2hpbGRyZW4uIEZvciB0aGUgb2Zmc3ByaW5nIG9mIHRvbyBlbGRlcmx5IHBhcmVudHMsIGFzIHRob3NlCgkJCQkJb2YgdG9vIHlvdW5nIG9uZXMsIGFyZSBib3JuIGltcGVyZmVjdCBib3RoIGluIGJvZHkgYW5kIG1pbmQsIGFuZCB0aGUgY2hpbGRyZW4gb2YKCQkJCQl0aG9zZSB0aGF0IGhhdmUgYXJyaXZlZCBhdCBvbGQgYWdlIGFyZSB3ZWFrbGluZ3MuIFRoZXJlZm9yZSB0aGUgcGVyaW9kIG11c3QgYmUKCQkJCQlsaW1pdGVkIHRvIGNvcnJlc3BvbmQgd2l0aCB0aGUgbWVudGFsIHByaW1lOyBhbmQgdGhpcyBpbiB0aGUgY2FzZSBvZiBtb3N0IG1lbiBpcwoJCQkJCXRoZSBhZ2Ugc3RhdGVkIGJ5IHNvbWUgb2YgdGhlIHBvZXRzLCB3aG8gbWVhc3VyZSBtZW4ncyBhZ2UgYnkgcGVyaW9kcyBvZiBzZXZlbgoJCQkJCQl5ZWFycyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPgoJCQkJCQk8YmlibCBkZWZhdWx0PSJOTyIgbj0iU29sLiBGci4gMjciPlNvbG9uIGZyLiAyNzwvYmlibD4KCQkJCQk8L25vdGU+4oCUaXQgaXMgYWJvdXQgdGhlIGFnZSBvZiBmaWZ0eS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTQuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVyZWZvcmUgcGVyc29ucyBleGNlZWRpbmcgdGhpcyBhZ2UgYnkgZm91ciBvciBmaXZlIHllYXJzCgkJCQkJbXVzdCBiZSBkaXNjaGFyZ2VkIGZyb20gdGhlIGR1dHkgb2YgcHJvZHVjaW5nIGNoaWxkcmVuIGZvciB0aGUgY29tbXVuaXR5LCBhbmQKCQkJCQlmb3IgdGhlIHJlc3Qgb2YgdGhlaXIgbGl2ZXMgaWYgdGhleSBoYXZlIGludGVyY291cnNlIGl0IG11c3QgYmUgbWFuaWZlc3RseSBmb3IKCQkJCQl0aGUgc2FrZSBvZiBoZWFsdGggb3IgZm9yIHNvbWUgb3RoZXIgc2ltaWxhciByZWFzb24uIEFzIHRvIGludGVyY291cnNlIHdpdGgKCQkJCQlhbm90aGVyIHdvbWFuIG9yIG1hbiwgaW4gZ2VuZXJhbCBpdCBtdXN0IGJlIGRpc2hvbm9yYWJsZSBmb3IgdGhlbSB0byBiZSBrbm93biB0bwoJCQkJCXRha2UgYW55IHBhcnQgaW4gaXQgaW4gYW55IGNpcmN1bXN0YW5jZXMgd2hhdHNvZXZlciBhcyBsb25nIGFzIHRoZXkgYXJlIGh1c2JhbmQKCQkJCQlhbmQgd2lmZSBhbmQgYmVhciB0aG9zZSBuYW1lcywgYnV0IGFueSB3aG8gbWF5IGJlIGRpc2NvdmVyZWQgZG9pbmcgYW55dGhpbmcgb2YKCQkJCQl0aGUgc29ydCBkdXJpbmcgdGhlaXIgcGVyaW9kIG9mIHBhcmVudGFnZSA8bWlsZXN0b25lIG49IjEzMzZhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5tdXN0IGJlIHB1bmlzaGVkIHdpdGggYSBsb3NzIG9mCgkJCQkJcHJpdmlsZWdlIHN1aXRlZCB0byB0aGUgb2ZmZW5jZS48bWlsZXN0b25lIGVkPSJQIiBuPSIxNS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZSBjaGlsZHJlbiBoYXZlIGJlZW4gYm9ybiwgdGhlCgkJCQkJcGFydGljdWxhciBtb2RlIG9mIHJlYXJpbmcgYWRvcHRlZCBtdXN0IGJlIGRlZW1lZCBhbiBpbXBvcnRhbnQgZGV0ZXJtaW5pbmcKCQkJCQlpbmZsdWVuY2UgaW4gcmVnYXJkIHRvIHRoZWlyIHBvd2VyIG9mIGJvZHkuIEl0IGFwcGVhcnMgZnJvbSBleGFtaW5pbmcgdGhlIG90aGVyCgkJCQkJYW5pbWFscywgYW5kIGlzIGFsc28gc2hvd24gYnkgdGhlIGZvcmVpZ24gcmFjZXMgdGhhdCBtYWtlIGl0IHRoZWlyIGFpbSB0byBrZWVwCgkJCQkJdXAgdGhlIG1pbGl0YXJ5IGhhYml0IG9mIGJvZHksIHRoYXQgYSBkaWV0IGdpdmluZyBhbiBhYnVuZGFuY2Ugb2YgbWlsayBpcyBtb3N0CgkJCQkJc3VpdGVkIHRvIHRoZSBib2RpZXMgb2YgY2hpbGRyZW4sIGFuZCBvbmUgdGhhdCBhbGxvd3MgcmF0aGVyIGxpdHRsZSB3aW5lIGJlY2F1c2UKCQkJCQlvZiB0aGUgZGlzZWFzZXMgdGhhdCBpdCBjYXVzZXMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE1LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Nb3Jlb3ZlciBpdCBpcyBhZHZhbnRhZ2VvdXMgdG8gc3ViamVjdCB0aGVtIHRvIGFzIG1hbnkgbW92ZW1lbnRzIGFzIGFyZQoJCQkJCXByYWN0aWNhYmxlIHdpdGggY2hpbGRyZW4gb2YgdGhhdCBhZ2UuIFRvIHByZXZlbnQgdGhlIGxpbWJzIGZyb20gYmVpbmcgZGlzdG9ydGVkCgkJCQkJb3dpbmcgdG8gc29mdG5lc3MsIHNvbWUgcmFjZXMgZXZlbiBub3cgZW1wbG95IGNlcnRhaW4gbWVjaGFuaWNhbCBhcHBsaWFuY2VzIHRoYXQKCQkJCQlrZWVwIHRoZSBib2RpZXMgb2YgaW5mYW50cyBmcm9tIGJlaW5nIHR3aXN0ZWQuIEFuZCBpdCBpcyBhbHNvIGFkdmFudGFnZW91cyB0bwoJCQkJCWFjY3VzdG9tIHRoZW0gYXQgb25jZSBmcm9tIGVhcmx5IGNoaWxkaG9vZCB0byBjb2xkLCBmb3IgdGhpcyBpcyBtb3N0IHVzZWZ1bCBib3RoCgkJCQkJZm9yIGhlYWx0aCBhbmQgd2l0aCBhIHZpZXcgdG8gbWlsaXRhcnkgc2VydmljZS4gSGVuY2UgYW1vbmcgbWFueSBub24tR3JlZWsgcmFjZXMKCQkJCQlpdCBpcyBjdXN0b21hcnkgaW4gdGhlIGNhc2Ugb2Ygc29tZSBwZW9wbGVzIHRvIHdhc2ggdGhlIGNoaWxkcmVuIGF0IGJpcnRoIGJ5CgkJCQkJZGlwcGluZyB0aGVtIGluIGEgY29sZCByaXZlciwgYW5kIHdpdGggb3RoZXJzLCBmb3IgaW5zdGFuY2UgdGhlIENlbHRzLCB0byBnaXZlCgkJCQkJdGhlbSBzY2FudHkgY292ZXJpbmcuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE1LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Gb3IgaXQgaXMKCQkJCQliZXR0ZXIgdG8gaW51cmUgdGhlbSBhdCB0aGUgdmVyeSBzdGFydCB0byBldmVyeXRoaW5nIHBvc3NpYmxlLCBidXQgdG8gaW51cmUgdGhlbQoJCQkJCQlncmFkdWFsbHk7PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgdGhlIGJvZGlseSBoYWJpdCBvZgoJCQkJCWNoaWxkcmVuIGlzIG5hdHVyYWxseSB3ZWxsIGZpdHRlZCBieSB3YXJtdGggdG8gYmUgdHJhaW5lZCB0byBiZWFyIGNvbGQuIEluIHRoZQoJCQkJCWVhcmxpZXN0IHBlcmlvZCBvZiBsaWZlIHRoZW4gaXQgaXMgZXhwZWRpZW50IHRvIGVtcGxveSB0aGlzIG9yIGEgc2ltaWxhciBtZXRob2QKCQkJCQlvZiBudXJzaW5nOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIxNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHRoZSBuZXh0IHBlcmlvZCB0bwoJCQkJCXRoaXMsIHVwIHRvIHRoZSBhZ2Ugb2YgZml2ZSwgd2hpY2ggaXQgaXMgbm90IHdlbGwgdG8gZGlyZWN0IGFzIHlldCB0byBhbnkgc3R1ZHkKCQkJCQlub3IgdG8gY29tcHVsc29yeSBsYWJvcnMsIGluIG9yZGVyIHRoYXQgdGhleSBtYXkgbm90IGhpbmRlciB0aGUgZ3Jvd3RoLCBzaG91bGQKCQkJCQluZXZlcnRoZWxlc3MgYmUgYWxsb3dlZCBlbm91Z2ggbW92ZW1lbnQgdG8gYXZvaWQgYm9kaWx5IGluYWN0aXZpdHk7IGFuZCB0aGlzCgkJCQkJZXhlcmNpc2Ugc2hvdWxkIGJlIG9idGFpbmVkIGJ5IG1lYW5zIG9mIHZhcmlvdXMgcHVyc3VpdHMsIHBhcnRpY3VsYXJseSBwbGF5LiBCdXQKCQkJCQlldmVuIHRoZSBnYW1lcyBtdXN0IG5vdCBiZSB1bmZpdCBmb3IgZnJlZW1lbiwgbm9yIGxhYm9yaW91cywgbm9yIHVuZGlzY2lwbGluZWQuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjE1LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbHNvIHRoZSBxdWVzdGlvbiBvZiB0aGUga2luZAoJCQkJCW9mIHRhbGVzIGFuZCBzdG9yaWVzIHRoYXQgc2hvdWxkIGJlIHRvbGQgdG8gY2hpbGRyZW4gb2YgdGhpcyBhZ2UgbXVzdCBiZQoJCQkJCWF0dGVuZGVkIHRvIGJ5IHRoZSBvZmZpY2lhbHMgY2FsbGVkIENoaWxkcmVuJ3MgVHV0b3JzLiBGb3IgYWxsIHN1Y2ggYW11c2VtZW50cwoJCQkJCXNob3VsZCBwcmVwYXJlIHRoZSB3YXkgZm9yIHRoZWlyIGxhdGVyIHB1cnN1aXRzOyBoZW5jZSBtb3N0IGNoaWxkcmVuJ3MgZ2FtZXMKCQkJCQlzaG91bGQgYmUgaW1pdGF0aW9ucyBvZiB0aGUgc2VyaW91cyBvY2N1cGF0aW9ucyBvZiBsYXRlciBsaWZlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxNS42IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIGxlZ2lzbGF0b3JzIGluCgkJCQkJCXRoZTx0aXRsZT5MYXdzPC90aXRsZT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBMYXdzIDc5MmEiIHZhbGlkPSJ5ZXMiPlBsYXQuIExhd3MgNzkyYTwvYmlibD4uIFBsYXRvIG1lcmVseSBzYXlzIHRoYXQgYQoJCQkJCQljaGlsZCdzIGNyeWluZyBzaG93cyBpdCB0byBiZSBhbm5veWVkLCBhbmQgdGhhdCBpdCBvdWdodCB0byBoYXZlIGFzIGxpdHRsZQoJCQkJCQlwYWluIGFzIHBvc3NpYmxlIG9yIGVsc2UgaXQgd2lsbCBncm93IHVwIG1vcm9zZS48L25vdGU+IGZvcmJpZCBhbGxvd2luZwoJCQkJCWNoaWxkcmVuIHRvIGhhdmUgcGFyb3h5c21zIG9mIGNyeWluZywgYnV0IHRoaXMgcHJvaGliaXRpb24gaXMgYSBtaXN0YWtlOyB2aW9sZW50CgkJCQkJY3J5aW5nIGNvbnRyaWJ1dGVzIHRvIGdyb3d0aCwgZm9yIGl0IHNlcnZlcyBpbiBhIHdheSBhcyBleGVyY2lzZSBmb3IgdGhlIGJvZHksCgkJCQkJc2luY2UgaG9sZGluZyB0aGUgYnJlYXRoIGlzIHRoZSBzdHJlbmd0aCBnaXZpbmcgZmFjdG9yIGluIGhhcmQgbGFib3IsIGFuZCB0aGlzCgkJCQkJdGFrZXMgcGxhY2UgYWxzbyB3aXRoIGNoaWxkcmVuIHdoZW4gdGhleSBzdHJldGNoIHRoZW1zZWx2ZXMgaW4gY3J5aW5nLiBUaGUKCQkJCQlUdXRvcnMgbXVzdCBzdXBlcnZpc2UgdGhlIGNoaWxkcmVuJ3MgcGFzdGltZXMsIGFuZCBpbiBwYXJ0aWN1bGFyIG11c3Qgc2VlIHRoYXQKCQkJCQl0aGV5IGFzc29jaWF0ZSBhcyBsaXR0bGUgYXMgcG9zc2libGUgd2l0aCBzbGF2ZXMuIEZvciBjaGlsZHJlbiBvZiB0aGlzIGFnZSwKCQkJCQkJPG1pbGVzdG9uZSBuPSIxMzM2YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+YW5kIHVwIHRvIHNldmVuIHllYXJzIG9sZCwgbXVzdCBuZWNlc3NhcmlseSBiZSByZWFyZWQgYXQgaG9tZTsKCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTUuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPnNvIGl0IGlzIHJlYXNvbmFibGUgdG8gc3VwcG9zZQoJCQkJCXRoYXQgZXZlbiBhdCB0aGlzIGFnZSB0aGV5IG1heSBhY3F1aXJlIGEgdGFpbnQgb2YgaWxsaWJlcmFsaXR5IGZyb20gd2hhdCB0aGV5CgkJCQkJaGVhciBhbmQgc2VlLiBUaGUgbGF3Z2l2ZXIgb3VnaHQgdGhlcmVmb3JlIHRvIGJhbmlzaCBpbmRlY2VudCB0YWxrLCBhcyBtdWNoIGFzCgkJCQkJYW55dGhpbmcgZWxzZSwgb3V0IG9mIHRoZSBzdGF0ZSBhbHRvZ2V0aGVyIO+8iGZvciBsaWdodCB0YWxrIGFib3V0CgkJCQkJYW55dGhpbmcgZGlzZ3JhY2VmdWwgc29vbiBwYXNzZXMgaW50byBhY3Rpb27vvInigJRzbyBtb3N0IG9mIGFsbAoJCQkJCWZyb20gYW1vbmcgdGhlIHlvdW5nLCBzbyB0aGF0IHRoZXkgbWF5IG5vdCBzYXkgbm9yIGhlYXIgYW55dGhpbmcgb2YgdGhlIHNvcnQ7CgkJCQkJYW5kIGFueWJvZHkgZm91bmQgc2F5aW5nIG9yIGRvaW5nIGFueSBvZiB0aGUgdGhpbmdzIHByb2hpYml0ZWQsIGlmIGhlIGlzIG9mIGZyZWUKCQkJCQlzdGF0aW9uIGJ1dCBub3QgeWV0IHByb21vdGVkIHRvIHJlY2xpbmluZyBhdCB0aGUgcHVibGljIG1lYWxzLCBtdXN0IGJlIHB1bmlzaGVkCgkJCQkJd2l0aCBtYXJrcyBvZiBkaXNob25vciBhbmQgd2l0aCBiZWF0aW5nLCBhbmQgYW4gb2xkZXIgb2ZmZW5kZXIgbXVzdCBiZSBwdW5pc2hlZAoJCQkJCXdpdGggbWFya3Mgb2YgZGlzaG9ub3IgZGVncmFkaW5nIHRvIGEgZnJlZSBtYW4sIGJlY2F1c2Ugb2YgaGlzIHNsYXZpc2ggYmVoYXZpb3IuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjE1LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgc2luY2Ugd2UgYmFuaXNoIGFueSB0YWxrIG9mCgkJCQkJdGhpcyBraW5kLCBjbGVhcmx5IHdlIG11c3QgYWxzbyBiYW5pc2ggdGhlIHNlZWluZyBvZiBlaXRoZXIgcGljdHVyZXMgb3IKCQkJCQlyZXByZXNlbnRhdGlvbnMgdGhhdCBhcmUgaW5kZWNlbnQuIFRoZSBvZmZpY2lhbHMgbXVzdCB0aGVyZWZvcmUgYmUgY2FyZWZ1bCB0aGF0CgkJCQkJdGhlcmUgbWF5IGJlIG5vIHNjdWxwdHVyZSBvciBwYWludGluZyB0aGF0IHJlcHJlc2VudHMgaW5kZWNlbnQgYWN0aW9ucywgZXhjZXB0CgkJCQkJaW4gdGhlIHRlbXBsZXMgb2YgYSBjZXJ0YWluIGNsYXNzIG9mIGdvZHMgdG8gd2hvbSB0aGUgbGF3IGFsbG93cyBldmVuCgkJCQkJc2N1cnJpbGl0eTsgYnV0IGluIHJlZ2FyZCB0byB0aGVzZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIE1TLgoJCQkJCQl0ZXh0IGdpdmVzIOKAmGFuZCBpbiBhZGRpdGlvbiB0byB0aGVzZeKAmTsgYW5kIHRoZSB3b3JkCgkJCQkJCeKAmHN0aWxs4oCZIG1heSBiZSBhbiBpbnRlcnBvbGF0aW9uLjwvbm90ZT4gdGhlIGxhdyBwZXJtaXRzCgkJCQkJbWVuIHN0aWxsIG9mIHN1aXRhYmxlIGFnZSB0byB3b3JzaGlwIHRoZSBnb2RzIGJvdGggb24gdGhlaXIgb3duIGJlaGFsZiBhbmQgb24KCQkJCQliZWhhbGYgb2YgdGhlIGNoaWxkcmVuIGFuZCB3b21lbi48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIG49IjE1LjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdGhlIHlvdW5nZXIgb25lcyBtdXN0IG5vdAoJCQkJCWJlIGFsbG93ZWQgaW4gdGhlIGF1ZGllbmNlIGF0IGxhbXBvb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JYW1iaWMKCQkJCQkJdmVyc2VzLCBvZnRlbiBhYnVzaXZlIGFuZCBpbmRlY2VudCwgcmVjaXRlZCBhdCBmZXN0aXZhbHMgb2YgRGlvbnlzdXMuPC9ub3RlPgoJCQkJCWFuZCBhdCBjb21lZHksIGJlZm9yZSB0aGV5IHJlYWNoIHRoZSBhZ2UgYXQgd2hpY2ggdGhleSB3aWxsIG5vdyBoYXZlIHRoZSByaWdodAoJCQkJCXRvIHJlY2xpbmUgYXQgdGFibGUgaW4gY29tcGFueSBhbmQgdG8gZHJpbmsgZGVlcGx5LCBhbmQgYXQgd2hpY2ggdGhlaXIgZWR1Y2F0aW9uCgkJCQkJd2lsbCByZW5kZXIgYWxsIG9mIHRoZW0gaW1tdW5lIHRvIHRoZSBoYXJtZnVsIGVmZmVjdHMgb2Ygc3VjaCB0aGluZ3MuIEZvciB0aGUKCQkJCQlwcmVzZW50IHRoZXJlZm9yZSB3ZSBoYXZlIG1lcmVseSBtZW50aW9uZWQgdGhlc2UgbWF0dGVycyBpbiBwYXNzaW5nLCBidXQgbGF0ZXIKCQkJCQl3ZSBtdXN0IHN0b3AgdG8gc2V0dGxlIHRoZW0gbW9yZSBkZWZpbml0ZWx5LCBmaXJzdCBkaXNjdXNzaW5nIGZ1bGx5IHdoZXRoZXIKCQkJCQlsZWdpc2xhdGlvbiBwcm9oaWJpdGluZyB0aGUgYXR0ZW5kYW5jZSBvZiB0aGUgeW91bmcgaXMgZGVzaXJhYmxlIG9yIG5vdCwgYW5kIGhvdwoJCQkJCXN1Y2ggcHJvaGliaXRpb24gc2hvdWxkIGJlIHB1dCBpbiBmb3JjZTsgYnV0IG9uIHRoZSBwcmVzZW50IG9jY2FzaW9uIHdlIGhhdmUKCQkJCQl0b3VjaGVkIG9uIHRoZSBxdWVzdGlvbiBvbmx5IGluIHRoZSBtYW5uZXIgbmVjZXNzYXJ5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciBwZXJoYXBzIHRoZSB0cmFnaWMgYWN0b3IgVGhlb2RvcnVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIGdyZWF0IEF0aGVuaWFuIHBlcmZvcm1lciBvZiBTb3Bob2NsZXM7IGhlCgkJCQkJCXRvb2sgdGhlIHBhcnQgb2YgQW50aWdvbmUuPC9ub3RlPiB1c2VkIHRvIHB1dCB0aGUgbWF0dGVyIG5vdCBiYWRseTogaGUgaGFkCgkJCQkJbmV2ZXIgb25jZSBhbGxvd2VkIGFueWJvZHkgdG8gcHJvZHVjZSBoaXMgcGFydDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+TG9vc2VseSBwdXQgZm9yIOKAmHRvIGFwcGVhciBvbiB0aGUKCQkJCQkJc3RhZ2Uu4oCZPC9ub3RlPiBiZWZvcmUgaGltLCBub3QgZXZlbiBvbmUgb2YgdGhlIHBvb3IgYWN0b3JzLCBhcyBoZQoJCQkJCXNhaWQgdGhhdCBhdWRpZW5jZXMgYXJlIGF0dHJhY3RlZCBieSB3aGF0IHRoZXkgaGVhciBmaXJzdDsgYW5kIHRoaXMgaGFwcGVucwoJCQkJCWFsaWtlIGluIHJlZ2FyZCB0byBvdXIgZGVhbGluZ3Mgd2l0aCBwZW9wbGUgYW5kIHRvIG91ciBkZWFsaW5ncyB3aXRoCgkJCQkJdGhpbmdz4oCUYWxsIHRoYXQgY29tZXMgZmlyc3Qgd2UgbGlrZSBiZXR0ZXIuIE9uIHRoaXMgYWNjb3VudCB3ZSBvdWdodAoJCQkJCXRvIG1ha2UgYWxsIGJhc2UgdGhpbmdzIHVuZmFtaWxpYXIgdG8gdGhlIHlvdW5nLCBhbmQgZXNwZWNpYWxseSB0aG9zZSB0aGF0CgkJCQkJaW52b2x2ZSBlaXRoZXIgZGVwcmF2aXR5IG9yIG1hbGlnbml0eS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCB3aGVuCgkJCQkJdGhlIGZpdmUgeWVhcnMgZnJvbSB0d28gdG8gc2V2ZW4gaGF2ZSBwYXNzZWQsIHRoZSBjaGlsZHJlbiBtdXN0IG5vdyBiZWNvbWUKCQkJCQlzcGVjdGF0b3JzIGF0IHRoZSBsZXNzb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGluIGd5bW5hc3RpY3MKCQkJCQkJYW5kIG11c2ljLjwvbm90ZT4gd2hpY2ggdGhleSB3aWxsIHRoZW1zZWx2ZXMgaGF2ZSB0byBsZWFybi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTUuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhlcmUgYXJlIHR3byBhZ2VzIGNvcnJlc3BvbmRpbmcgdG8KCQkJCQl3aGljaCBlZHVjYXRpb24gc2hvdWxkIGJlIGRpdmlkZWTigJR0aGVyZSBtdXN0IGJlIGEgYnJlYWsgYWZ0ZXIgdGhlCgkJCQkJcGVyaW9kIGZyb20gc2V2ZW4gdG8gcHViZXJ0eSwgYW5kIGFnYWluIGFmdGVyIHRoYXQgZnJvbSBwdWJlcnR5IHRvIHR3ZW50eS1vbmUuCgkJCQkJRm9yIHRob3NlIHdobyBkaXZpZGUgdGhlIGFnZXMgYnkgcGVyaW9kcyBvZiBzZXZlbiB5ZWFycyBhcmUgZ2VuZXJhbGx5IHNwZWFraW5nCgkJCQkJbm90IHdyb25nLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIE1TUy4gZ2l2ZSDigJhub3QKCQkJCQkJcmlnaHQu4oCZPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgbj0iMTMzN2EiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBpdCBpcyBwcm9wZXIgdG8gZm9sbG93IHRoZSBkaXZpc2lvbiBvZiBuYXR1cmUsIGZvciBhbGwgYXJ0IGFuZCBlZHVjYXRpb24KCQkJCQlhaW0gYXQgZmlsbGluZyB1cCBuYXR1cmUncyBkZWZpY2llbmNpZXMuIEZpcnN0IHRoZXJlZm9yZSB3ZSBtdXN0IGNvbnNpZGVyCgkJCQkJd2hldGhlciBzb21lIHJlZ3VsYXRpb24gaW4gcmVnYXJkIHRvIHRoZSBib3lzIG91Z2h0IHRvIGJlIGluc3RpdHV0ZWQsIG5leHQKCQkJCQl3aGV0aGVyIGl0IGlzIGFkdmFudGFnZW91cyBmb3IgdGhlaXIgc3VwZXJ2aXNpb24gdG8gYmUgY29uZHVjdGVkIG9uIGEgcHVibGljCgkJCQkJZm9vdGluZyBvciBpbiBhIHByaXZhdGUgbWFubmVyIGFzIGlzIGRvbmUgYXQgcHJlc2VudCBpbiBtb3N0IHN0YXRlcywgYW5kIHRoaXJkbHkKCQkJCQlvZiB3aGF0IHBhcnRpY3VsYXIgbmF0dXJlIHRoaXMgc3VwZXJ2aXNpb24gb3VnaHQgdG8gYmUuPC9wPgoJCQk8L2RpdjE+CgkJCTxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMjNhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxNCIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Cb29rIDQgaW4gc29tZSBlZGl0aW9ucy48L25vdGU+VGhlCgkJCQkJc3R1ZGVudCB3aG8gaXMgZ29pbmcgdG8gbWFrZSBhIHN1aXRhYmxlIGludmVzdGlnYXRpb24gb2YgdGhlIGJlc3QgZm9ybSBvZgoJCQkJCWNvbnN0aXR1dGlvbiBtdXN0IG5lY2Vzc2FyaWx5IGRlY2lkZSBmaXJzdCBvZiBhbGwgd2hhdCBpcyB0aGUgbW9zdCBkZXNpcmFibGUKCQkJCQltb2RlIG9mIGxpZmUuIEZvciB3aGlsZSB0aGlzIGlzIHVuY2VydGFpbiBpdCBpcyBhbHNvIGJvdW5kIHRvIGJlIHVuY2VydGFpbiB3aGF0CgkJCQkJaXMgdGhlIGJlc3QgY29uc3RpdHV0aW9uLCBzaW5jZSBpdCBpcyB0byBiZSBleHBlY3RlZCB0aGF0IHRoZSBwZW9wbGUgdGhhdCBoYXZlCgkJCQkJdGhlIGJlc3QgZm9ybSBvZiBnb3Zlcm5tZW50IGF2YWlsYWJsZSB1bmRlciB0aGVpciBnaXZlbiBjb25kaXRpb25zIHdpbGwgZmFyZSB0aGUKCQkJCQliZXN0LCBleGNlcHRpb25hbCBjaXJjdW1zdGFuY2VzIGFwYXJ0LiBIZW5jZSB3ZSBtdXN0IGZpcnN0PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hZ3JlZSB3aGF0IGxpZmUgaXMgbW9zdCBkZXNpcmFibGUgZm9yIGFsbW9zdCBhbGwKCQkJCQltZW4sIGFuZCBhZnRlciB0aGF0IHdoZXRoZXIgdGhlIHNhbWUgbGlmZSBpcyBtb3N0IGRlc2lyYWJsZSBib3RoIGZvciB0aGUKCQkJCQljb21tdW5pdHkgYW5kIGZvciB0aGUgaW5kaXZpZHVhbCwgb3IgYSBkaWZmZXJlbnQgb25lLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CZWxpZXZpbmcgdGhlcmVmb3JlIGluIHRoZSBhZGVxdWFjeSBvZiBtdWNoIG9mIHdoYXQgaXMKCQkJCQlzYWlkIGV2ZW4gaW4gZXh0cmFuZW91cyBkaXNjb3Vyc2VzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gMy42LgoJCQkJCQlJdCBpcyBkZWJhdGVkIHdoZXRoZXIgdGhlIHBocmFzZSByZWZlcnMgdG8gQXJpc3RvdGxlJ3Mgb3duIHBvcHVsYXIgd3JpdGluZ3MsCgkJCQkJCW9yIHRvIHRob3NlIG9mIG90aGVyIHBoaWxvc29waGVycywgb3IgdG8gZGlzY3Vzc2lvbnMgb2YgdGhlIHN1YmplY3QgaW4KCQkJCQkJb3JkaW5hcnkgaW50ZXJjb3Vyc2UuPC9ub3RlPiBvbiB0aGUgc3ViamVjdCBvZiB0aGUgYmVzdCBsaWZlLCBsZXQgdXMgbWFrZQoJCQkJCXVzZSBvZiB0aGVzZSBwcm9ub3VuY2VtZW50cyBub3cuIEZvciBhcyByZWdhcmRzIGF0IGFsbCBldmVudHMgb25lIGNsYXNzaWZpY2F0aW9uCgkJCQkJb2YgdGhpbmdzIGdvb2QsIHB1dHRpbmcgdGhlbSBpbiB0aHJlZSBncm91cHMsIGV4dGVybmFsIGdvb2RzLCBnb29kcyBvZiB0aGUgc291bAoJCQkJCWFuZCBnb29kcyBvZiB0aGUgYm9keSwgYXNzdXJlZGx5IG5vYm9keSB3b3VsZCBkZW55IHRoYXQgdGhlIGlkZWFsbHkgaGFwcHkgYXJlCgkJCQkJYm91bmQgdG8gcG9zc2VzcyBhbGwgdGhyZWUuIEZvciBub2JvZHkgd291bGQgY2FsbCBhIG1hbiBpZGVhbGx5IGhhcHB5IHRoYXQgaGFzCgkJCQkJbm90IGdvdCBhIHBhcnRpY2xlIG9mIGNvdXJhZ2Ugbm9yIG9mIHRlbXBlcmFuY2Ugbm9yIG9mIGp1c3RpY2Ugbm9yIG9mIHdpc2RvbSwKCQkJCQlidXQgaXMgYWZyYWlkIG9mIHRoZSBmbGllcyB0aGF0IGZsdXR0ZXIgYnkgaGltLCBjYW5ub3QgcmVmcmFpbiBmcm9tIGFueSBvZiB0aGUKCQkJCQltb3N0IG91dHJhZ2VvdXMgYWN0aW9ucyBpbiBvcmRlciB0byBncmF0aWZ5IGEgZGVzaXJlIHRvIGVhdCBvciB0byBkcmluaywgcnVpbnMKCQkJCQloaXMgZGVhcmVzdCBmcmllbmRzIGZvciB0aGUgc2FrZSBvZiBhIGZhcnRoaW5nLCBhbmQgc2ltaWxhcmx5IGluIG1hdHRlcnMgb2YgdGhlCgkJCQkJaW50ZWxsZWN0IGFsc28gaXMgYXMgc2Vuc2VsZXNzIGFuZCBtaXN0YWtlbiBhcyBhbnkgY2hpbGQgb3IgbHVuYXRpYy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGFsdGhvdWdoIHRoZXNlIGFyZSBwcm9wb3NpdGlvbnMgd2hpY2gKCQkJCQl3aGVuIHV0dGVyZWQgZXZlcnlib2R5IHdvdWxkIGFncmVlIHRvLCB5ZXQgbWVuIGRpZmZlciBhYm91dCBhbW91bnQgYW5kIGRlZ3JlZXMKCQkJCQlvZiB2YWx1ZS4gVGhleSB0aGluayBpdCBpcyBlbm91Z2ggdG8gcG9zc2VzcyBob3dldmVyIHNtYWxsIGEgcXVhbnRpdHkgb2YgdmlydHVlLAoJCQkJCWJ1dCBvZiB3ZWFsdGgsIHJpY2hlcywgcG93ZXIsIGdsb3J5IGFuZCBldmVyeXRoaW5nIG9mIHRoYXQga2luZCB0aGV5IHNlZWsgYQoJCQkJCWxhcmdlciBhbmQgbGFyZ2VyIGFtb3VudCB3aXRob3V0IGxpbWl0LiBXZSBvbiB0aGUgb3RoZXIgaGFuZCBzaGFsbCB0ZWxsIHRoZW0KCQkJCQl0aGF0IGl0IGlzIGVhc3kgdG8gYXJyaXZlIGF0IGNvbnZpY3Rpb24gb24gdGhlc2UgbWF0dGVycyBpbiB0aGUgbGlnaHQgb2YgdGhlCgkJCQkJYWN0dWFsIGZhY3RzLCB3aGVuIG9uZSBzZWVzIHRoYXQgbWVuIGRvIG5vdCBhY3F1aXJlIGFuZCBwcmVzZXJ2ZSB0aGUgdmlydHVlcyBieQoJCQkJCW1lYW5zIG9mIHRoZXNlIGV4dGVybmFsIGdvb2RzLCBidXQgZXh0ZXJuYWwgZ29vZHMgYnkgbWVhbnMgb2YgdGhlIHZpcnR1ZXMsCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTMyM2IiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGF0IHdoZXRoZXIgdGhlIGxpZmUgb2YgaGFwcGluZXNzIGNvbnNpc3RzIGZvciBtYW4gaW4KCQkJCQllbmpveW1lbnQgb3IgaW4gdmlydHVlIG9yIGluIGJvdGgsIGl0IGlzIGZvdW5kIGluIGxhcmdlciBtZWFzdXJlIHdpdGggdGhvc2Ugd2hvCgkJCQkJYXJlIG9mIHN1cnBhc3NpbmdseSBoaWdoIGN1bHRpdmF0aW9uIGluIGNoYXJhY3RlciBhbmQgaW50ZWxsZWN0IGJ1dCBvbmx5CgkJCQkJbW9kZXJhdGUgYXMgcmVnYXJkcyB0aGUgZXh0ZXJuYWwgYWNxdWlzaXRpb24gb2YgZ29vZHMsIHRoYW4gd2l0aCB0aG9zZSB3aG8gb3duCgkJCQkJbW9yZSB0aGFuIHRoZXkgY2FuIHVzZSBvZiB0aGUgbGF0dGVyIGJ1dCBhcmUgZGVmaWNpZW50IGluIHRoZSBmb3JtZXIuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPk5vdCBidXQgd2hhdCB0aGUgdHJ1dGggaXMgYWxzbyBlYXNpbHkgc2VlbgoJCQkJCWlmIHdlIGNvbnNpZGVyIHRoZSBtYXR0ZXIgaW4gdGhlIGxpZ2h0IG9mIHJlYXNvbi4gRm9yIGV4dGVybmFsIGdvb2RzIGhhdmUgYQoJCQkJCWxpbWl0LCBhcyBoYXMgYW55IGluc3RydW1lbnQg77yIYW5kIGV2ZXJ5dGhpbmcgdXNlZnVsIGlzIHVzZWZ1bCBmb3IKCQkJCQlzb21ldGhpbmfvvIksIHNvIGFuIGV4Y2Vzc2l2ZSBhbW91bnQgb2YgdGhlbSBtdXN0IG5lY2Vzc2FyaWx5IGRvIGhhcm0sIG9yCgkJCQkJZG8gbm8gZ29vZCwgdG8gaXRzIHBvc3Nlc3Nvcjsgd2hlcmVhcyB3aXRoIGFueSBvZiB0aGUgZ29vZHMgb2YgdGhlIHNvdWwsIHRoZQoJCQkJCW1vcmUgYWJ1bmRhbnQgaXQgaXMsIHRoZSBtb3JlIHVzZWZ1bCBpdCBtdXN0IGJl4oCUaWYgZXZlbiB0byBnb29kcyBvZgoJCQkJCXRoZSBzb3VsIG5vdCBvbmx5IHRoZSB0ZXJtIOKAmG5vYmxl4oCZIGJ1dCBhbHNvIHRoZSB0ZXJtCgkJCQkJ4oCYdXNlZnVs4oCZIGNhbiBiZSBwcm9wZXJseSBhcHBsaWVkLiBBbmQgYnJvYWRseSwgaXQgaXMgY2xlYXIKCQkJCQl0aGF0IHdlIHNoYWxsIGRlY2xhcmUgdGhhdCB0aGUgYmVzdCBjb25kaXRpb24gb2YgZWFjaCBwYXJ0aWN1bGFyIHRoaW5nLAoJCQkJCWNvbXBhcmluZyB0aGluZ3Mgd2l0aCBvbmUgYW5vdGhlciwgY29ycmVzcG9uZHMgaW4gcG9pbnQgb2Ygc3VwZXJpb3JpdHkgdG8gdGhlCgkJCQkJZGlzdGFuY2UgdGhhdCBzdWJzaXN0cyBiZXR3ZWVuIHRoZSB0aGluZ3Mgb2Ygd2hpY2ggd2UgZGVjbGFyZSB0aGVzZSBjb25kaXRpb25zCgkJCQkJdGhlbXNlbHZlcyB0byBiZSBjb25kaXRpb25zLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+ZS5nLiB0aGUgZmluZXN0CgkJCQkJCW1hbiBleGNlbHMgdGhlIGZpbmVzdCBtb25rZXkgdG8gdGhlIGRlZ3JlZSBpbiB3aGljaCB0aGUgc3BlY2llcyBtYW4gZXhjZWxzCgkJCQkJCXRoZSBzcGVjaWVzIG1vbmtleS48L25vdGU+IEhlbmNlIGluYXNtdWNoIGFzIG91ciBzb3VsIGlzIGEgbW9yZSB2YWx1YWJsZQoJCQkJCXRoaW5nIGJvdGggYWJzb2x1dGVseSBhbmQgcmVsYXRpdmVseSB0byBvdXJzZWx2ZXMgdGhhbiBlaXRoZXIgb3VyIHByb3BlcnR5IG9yCgkJCQkJb3VyIGJvZHksIHRoZSBiZXN0IGNvbmRpdGlvbnMgb2YgdGhlc2UgdGhpbmdzIG11c3QgbmVjZXNzYXJpbHkgc3RhbmQgaW4gdGhlIHNhbWUKCQkJCQlyZWxhdGlvbiB0byBvbmUgYW5vdGhlciBhcyB0aGUgdGhpbmdzIHRoZW1zZWx2ZXMgZG8uIE1vcmVvdmVyIGl0IGlzIGZvciB0aGUgc2FrZQoJCQkJCW9mIHRoZSBzb3VsIHRoYXQgdGhlc2UgZ29vZHMgYXJlIGluIHRoZWlyIG5hdHVyZSBkZXNpcmFibGUsIGFuZCB0aGF0IGFsbCB3aXNlCgkJCQkJbWVuIG11c3Q8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmNob29zZSB0aGVtLCBub3QgdGhlIHNvdWwgZm9yCgkJCQkJdGhlIHNha2Ugb2YgdGhvc2Ugb3RoZXIgdGhpbmdzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5MZXQKCQkJCQl1cyB0aGVuIHRha2UgaXQgYXMgYWdyZWVkIGJldHdlZW4gdXMgdGhhdCB0byBlYWNoIG1hbiB0aGVyZSBmYWxscyBqdXN0IHNvIGxhcmdlCgkJCQkJYSBtZWFzdXJlIG9mIGhhcHBpbmVzcyBhcyBoZSBhY2hpZXZlcyBvZiB2aXJ0dWUgYW5kIHdpc2RvbSBhbmQgb2YgdmlydHVvdXMgYW5kCgkJCQkJd2lzZSBhY3Rpb246IGluIGV2aWRlbmNlIG9mIHRoaXMgd2UgaGF2ZSB0aGUgY2FzZSBvZiBHb2QsIHdobyBpcyBoYXBweSBhbmQKCQkJCQlibGVzc2VkLCBidXQgaXMgc28gb24gYWNjb3VudCBvZiBubyBleHRlcm5hbCBnb29kcywgYnV0IG9uIGFjY291bnQgb2YgaGltc2VsZiwKCQkJCQlhbmQgYnkgYmVpbmcgb2YgYSBjZXJ0YWluIHF1YWxpdHkgaW4gaGlzIG5hdHVyZTsgc2luY2UgaXQgaXMgYWxzbyBmb3IgdGhpcwoJCQkJCXJlYXNvbiB0aGF0IHByb3NwZXJpdHkgaXMgbmVjZXNzYXJpbHkgZGlmZmVyZW50IGZyb20gaGFwcGluZXNz4oCUZm9yIHRoZQoJCQkJCWNhdXNlIG9mIGdvb2RzIGV4dGVybmFsIHRvIHRoZSBzb3VsIGlzIHRoZSBzcG9udGFuZW91cyBhbmQgZm9ydHVuZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkFyaXN0b3RsZSB0YXVnaHQgdGhhdCBzb21lIGV2ZW50cyBhcmUgdGhlCgkJCQkJCXJlc3VsdCBvZiB0aGUgdW5kZXNpZ25lZCBpbnRlcmFjdGlvbiBvZiB0d28gbGluZXMgb2YgY2F1c2F0aW9uIGluIG5hdHVyZSdzCgkJCQkJCWRlc2lnbjsgaGUgZGVub3RlZCB0aGlzIO+8iDHvvIkgaW4gZ2VuZXJhbCwgYnkg4oCYdGhlCgkJCQkJCWF1dG9tYXRpY+KAmSBvciBzZWxmLWFjdGluZyDvvIhyZXByZXNlbnRlZCBpbiBMYXRpbiBieQoJCQkJCQkJPGVtcGg+c3BvbnRlPC9lbXBoPiwgc3BvbnRhbmVvdXPvvIksIO+8iDLvvIkgYXMKCQkJCQkJY29uY2VybmluZyBtYW4sIGJ5IOKAmGZvcnR1bmUu4oCZPC9ub3RlPiBidXQgbm9ib2R5IGlzIGp1c3QKCQkJCQlvciB0ZW1wZXJhdGUgYXMgYSByZXN1bHQgb2Ygb3Igb3dpbmcgdG8gdGhlIGFjdGlvbiBvZiBmb3J0dW5lLiBBbmQgY29ubmVjdGVkIGlzCgkJCQkJYSB0cnV0aCByZXF1aXJpbmcgdGhlIHNhbWUgYXJndW1lbnRzIHRvIHByb3ZlIGl0LCB0aGF0IGl0IGlzIGFsc28gdGhlIGJlc3QKCQkJCQlzdGF0ZSwgYW5kIHRoZSBvbmUgdGhhdCBkb2VzIHdlbGwsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgY29tbW9uCgkJCQkJCXBsYXkgb24gdGhlIGFtYmlndWl0eSBvZiDigJhkbyB3ZWxsLOKAmSBtZWFuaW5nIGVpdGhlcgoJCQkJCQnigJhwcm9zcGVy4oCZIG9yIOKAmGFjdCByaWdodGx5LuKAmTwvbm90ZT4KCQkJCQl0aGF0IGlzIGhhcHB5LiBCdXQgdG8gZG8gd2VsbCBpcyBpbXBvc3NpYmxlIHNhdmUgZm9yIHRob3NlIHdobyBkbyBnb29kIGFjdGlvbnMsCgkJCQkJYW5kIHRoZXJlIGlzIG5vIGdvb2QgYWN0aW9uIGVpdGhlciBvZiBhIG1hbiBvciBvZiBhIHN0YXRlIHdpdGhvdXQgdmlydHVlIGFuZAoJCQkJCXdpc2RvbTsgYW5kIGNvdXJhZ2UsIGp1c3RpY2UgYW5kIHdpc2RvbSBiZWxvbmdpbmcgdG8gYSBzdGF0ZSBoYXZlIHRoZSBzYW1lCgkJCQkJbWVhbmluZyBhbmQgZm9ybSBhcyBoYXZlIHRob3NlIHZpcnR1ZXMgd2hvc2UgcG9zc2Vzc2lvbiBiZXN0b3dzIHRoZSB0aXRsZXMgb2YKCQkJCQlqdXN0IGFuZCB3aXNlIGFuZCB0ZW1wZXJhdGUgb24gYW4gaW5kaXZpZHVhbCBodW1hbiBiZWluZy48bWlsZXN0b25lIGVkPSJQIiBuPSIxLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIHJlbWFya3MKCQkJCQlob3dldmVyIG11c3Qgc3VmZmljZSBieSB3YXkgb2YgcHJlZmFjZSB0byBvdXIgZGlzY291cnNlOiBmb3IgbmVpdGhlciBpcyBpdAoJCQkJCXBvc3NpYmxlIHRvIGFic3RhaW4gZnJvbSB0b3VjaGluZyBvbiB0aGVzZSBzdWJqZWN0cyBhbHRvZ2V0aGVyLCBub3IgaXMgaXQKCQkJCQlmZWFzaWJsZSB0byBmb2xsb3cgb3V0IGFsbCB0aGUgYXJndW1lbnRzIHRoYXQgYXJlIGdlcm1hbmUgdG8gdGhlbSwgZm9yIHRoYXQgaXMKCQkJCQl0aGUgYnVzaW5lc3Mgb2YgYW5vdGhlciBjb3Vyc2Ugb2Ygc3R1ZHkuIEZvciB0aGUgcHJlc2VudCBsZXQgdXMgdGFrZSBpdCBhcwoJCQkJCWVzdGFibGlzaGVkIHRoYXQgdGhlIGJlc3QgbGlmZSwgd2hldGhlciBzZXBhcmF0ZWx5IGZvciBhbiBpbmRpdmlkdWFsIG9yCgkJCQkJY29sbGVjdGl2ZWx5IGZvciBzdGF0ZXMsIDxtaWxlc3RvbmUgbj0iMTMyNGEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmlzIHRoZSBsaWZlIGNvbmpvaW5lZCB3aXRoIHZpcnR1ZSBmdXJuaXNoZWQgd2l0aAoJCQkJCXN1ZmZpY2llbnQgbWVhbnMgZm9yIHRha2luZyBwYXJ0IGluIHZpcnR1b3VzIGFjdGlvbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTA5OWEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4gRXRoLiAxMDk5YQoJCQkJCQkJMzI8L2JpYmw+LCA8YmlibCBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExNzlhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTE3OWEgNAoJCQkJCQkJZmYuPC9iaWJsPjwvbm90ZT47IHdoaWxlIG9iamVjdGlvbnMgdG8gdGhpcyBwb3NpdGlvbiB3ZSBtdXN0IHBhc3Mgb3ZlcgoJCQkJCWluIHRoZSBjb3Vyc2Ugb2YgdGhlIHByZXNlbnQgaW5xdWlyeSwgYW5kIHJlc2VydmUgdGhlbSBmb3IgZnV0dXJlIGNvbnNpZGVyYXRpb24sCgkJCQkJaWYgYW55b25lIGJlIGZvdW5kIHRvIGRpc2FncmVlIHdpdGggd2hhdCBoYXMgYmVlbiBzYWlkLjxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhlIG90aGVyIGhhbmQgaXQKCQkJCQlyZW1haW5zIHRvIHNheSB3aGV0aGVyIHRoZSBoYXBwaW5lc3Mgb2YgYSBzdGF0ZSBpcyB0byBiZSBwcm9ub3VuY2VkIHRoZSBzYW1lIGFzCgkJCQkJdGhhdCBvZiBlYWNoIGluZGl2aWR1YWwgbWFuLCBvciB3aGV0aGVyIGl0IGlzIGRpZmZlcmVudC4gSGVyZSB0b28gdGhlIGFuc3dlciBpcwoJCQkJCWNsZWFyOiBldmVyeWJvZHkgd291bGQgYWdyZWUgdGhhdCBpdCBpcyB0aGUgc2FtZTsgZm9yIGFsbCB0aG9zZSB3aG8gYmFzZSB0aGUKCQkJCQlnb29kIGxpZmUgdXBvbiB3ZWFsdGggaW4gdGhlIGNhc2Ugb2YgdGhlIGluZGl2aWR1YWwsIGFsc28gYXNzaWduIGZlbGljaXR5IHRvIHRoZQoJCQkJCXN0YXRlIGFzIGEgd2hvbGUgaWYgaXQgaXMgd2VhbHRoeTsgYW5kIGFsbCB3aG8gdmFsdWUgdGhlIGxpZmUgb2YgdGhlIHR5cmFudAoJCQkJCWhpZ2hlc3QsIHdvdWxkIGFsc28gc2F5IHRoYXQgdGhlIHN0YXRlIHdoaWNoIHJ1bGVzIHRoZSB3aWRlc3QgZW1waXJlIGlzIHRoZQoJCQkJCWhhcHBpZXN0OyBhbmQgaWYgYW55IGJvZHkgYWNjZXB0cyB0aGUgaW5kaXZpZHVhbCBhcyBoYXBweSBvbiBhY2NvdW50IG9mIHZpcnR1ZSwKCQkJCQloZSB3aWxsIGFsc28gc2F5IHRoYXQgdGhlIHN0YXRlIHdoaWNoIGlzIHRoZSBiZXR0ZXIgbW9yYWxseSBpcyB0aGUgaGFwcGllci4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZXJlIG5vdyBhcmlzZSB0aGVzZSB0d28KCQkJCQlxdWVzdGlvbnMgdGhhdCByZXF1aXJlIGNvbnNpZGVyYXRpb246IGZpcnN0LCB3aGljaCBtb2RlIG9mIGxpZmUgaXMgdGhlIG1vcmUKCQkJCQlkZXNpcmFibGUsIHRoZSBsaWZlIG9mIGFjdGl2ZSBjaXRpemVuc2hpcCBhbmQgcGFydGljaXBhdGlvbiBpbiBwb2xpdGljcywgb3IKCQkJCQlyYXRoZXIgdGhlIGxpZmUgb2YgYW4gYWxpZW4gYW5kIHRoYXQgb2YgZGV0YWNobWVudCBmcm9tIHRoZSBwb2xpdGljYWwKCQkJCQlwYXJ0bmVyc2hpcDsgbmV4dCwgd2hhdCBjb25zdGl0dXRpb24gYW5kIHdoYXQgb3JnYW5pemF0aW9uIG9mIGEgc3RhdGUgaXMgdG8gYmUKCQkJCQlkZWVtZWQgdGhlIGJlc3Qs4oCUZWl0aGVyIG9uIHRoZSBhc3N1bXB0aW9uIHRoYXQgdG8gdGFrZSBhbiBhY3RpdmUgcGFydAoJCQkJCWluIHRoZSBzdGF0ZSBpcyBkZXNpcmFibGUgZm9yIGV2ZXJ5Ym9keSwgb3IgdGhhdCBpdCBpcyB1bmRlc2lyYWJsZSBmb3Igc29tZSBtZW4KCQkJCQlhbHRob3VnaCBkZXNpcmFibGUgZm9yIG1vc3QuIEJ1dCBhcyBpdCBpczxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIGxhdHRlciBxdWVzdGlvbiB0aGF0IGlzIHRoZSBidXNpbmVzcyBvZiBwb2xpdGljYWwgc3R1ZHkgYW5kCgkJCQkJc3BlY3VsYXRpb24sIGFuZCBub3QgdGhlIHF1ZXN0aW9uIG9mIHdoYXQgaXMgZGVzaXJhYmxlIGZvciB0aGUgaW5kaXZpZHVhbCwgYW5kCgkJCQkJYXMgaXQgaXMgdGhlIGludmVzdGlnYXRpb24gb2YgcG9saXRpY3MgdGhhdCB3ZSBoYXZlIG5vdyB0YWtlbiB1cCwgdGhlIGZvcm1lcgoJCQkJCXF1ZXN0aW9uIHdvdWxkIGJlIGEgc2lkZSBpc3N1ZSwgYW5kIHRoZSBsYXR0ZXIgaXMgdGhlIGJ1c2luZXNzIG9mIHBvbGl0aWNhbAoJCQkJCQlpbnF1aXJ5LjxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGl0IGlzIGNsZWFyIHRoYXQgdGhlIGJlc3QgY29uc3RpdHV0aW9uIGlzIHRoZSBzeXN0ZW0gdW5kZXIKCQkJCQl3aGljaCBhbnlib2R5IHdoYXRzb2V2ZXIgd291bGQgYmUgYmVzdCBvZmYgYW5kIHdvdWxkIGxpdmUgaW4gZmVsaWNpdHk7IGJ1dCB0aGUKCQkJCQlxdWVzdGlvbiBpcyByYWlzZWQgZXZlbiBvbiB0aGUgcGFydCBvZiB0aG9zZSB3aG8gYWdyZWUgdGhhdCB0aGUgbGlmZSBhY2NvbXBhbmllZAoJCQkJCWJ5IHZpcnR1ZSBpcyB0aGUgbW9zdCBkZXNpcmFibGUsIHdoZXRoZXIgdGhlIGxpZmUgb2YgY2l0aXplbnNoaXAgYW5kIGFjdGl2aXR5IGlzCgkJCQkJZGVzaXJhYmxlIG9yIHJhdGhlciBhIGxpZmUgcmVsZWFzZWQgZnJvbSBhbGwgZXh0ZXJuYWwgYWZmYWlycywgZm9yIGV4YW1wbGUgc29tZQoJCQkJCWZvcm0gb2YgY29udGVtcGxhdGl2ZSBsaWZlLCB3aGljaCBpcyBzYWlkIGJ5IHNvbWUgdG8gYmUgdGhlIG9ubHkgbGlmZSB0aGF0IGlzCgkJCQkJCXBoaWxvc29waGljLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUgR3JlZWsgc2hvdWxkIGJlCgkJCQkJCWFsdGVyZWQgdG8gZ2l2ZSDigJh3aGljaCBhbG9uZSBpcyBzYWlkIHRvIGJlIGRlc2lyYWJsZSBieSBzb21lCgkJCQkJCXBoaWxvc29waGVycy7igJk8L25vdGU+IEZvciBpdCBpcyBtYW5pZmVzdCB0aGF0IHRoZXNlIGFyZSB0aGUgdHdvCgkJCQkJbW9kZXMgb2YgbGlmZSBwcmluY2lwYWxseSBjaG9zZW4gYnkgdGhlIG1lbiBtb3N0IGFtYml0aW91cyBvZiBleGNlbGxpbmcgaW4KCQkJCQl2aXJ0dWUsIGJvdGggaW4gcGFzdCB0aW1lcyBhbmQgYXQgdGhlIHByZXNlbnQgZGF54oCUSSBtZWFuIHRoZSBsaWZlIG9mCgkJCQkJcG9saXRpY3MgYW5kIHRoZSBsaWZlIG9mIHBoaWxvc29waHkuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpdCBtYWtlcyBubyBsaXR0bGUgZGlmZmVyZW5jZSB3aGljaCB3YXkgdGhlIHRydXRoIGxpZXM7IGZvciBhc3N1cmVkbHkgdGhlCgkJCQkJd2lzZSBhcmUgYm91bmQgdG8gYXJyYW5nZSB0aGVpciBhZmZhaXJzIGluIHRoZSBkaXJlY3Rpb24gb2YgdGhlIGJldHRlcgoJCQkJCWdvYWzigJRhbmQgdGhpcyBhcHBsaWVzIHRvIHRoZSBzdGF0ZSBjb2xsZWN0aXZlbHkgYXMgd2VsbCBhcyB0byB0aGUKCQkJCQlpbmRpdmlkdWFsIGh1bWFuIGJlaW5nLiBTb21lIHBlcnNvbnMgdGhpbmsgdGhhdCBlbXBpcmUgb3ZlciBvbmUncyBuZWlnaGJvcnMsIGlmCgkJCQkJZGVzcG90aWNhbGx5IGV4ZXJjaXNlZCwgaW52b2x2ZXMgYSBkZWZpbml0ZSBpbmp1c3RpY2Ugb2YgdGhlIGdyZWF0ZXN0IGtpbmQsIGFuZAoJCQkJCWlmIGNvbnN0aXR1dGlvbmFsbHksIGFsdGhvdWdoIGl0IGNhcnJpZXMgbm8gaW5qdXN0aWNlLCB5ZXQgaXMgYSBoaW5kcmFuY2UgdG8gdGhlCgkJCQkJcnVsZXIncyBvd24gd2VsbC1iZWluZzsgYnV0IG90aGVycyBob2xkIGFsbW9zdCB0aGUgb3Bwb3NpdGUgdmlldyB0bwoJCQkJCXRoZXNl4oCUdGhleSB0aGluayB0aGF0IHRoZSBsaWZlIG9mIGFjdGlvbiBhbmQgY2l0aXplbnNoaXAgaXMgdGhlIG9ubHkKCQkJCQlsaWZlIGZpdCBmb3IgYSBtYW4sIHNpbmNlIHdpdGggZWFjaCBvZiB0aGUgdmlydHVlcyBpdHMgZXhlcmNpc2UgaW4gYWN0aW9ucyBpcwoJCQkJCWp1c3QgYXMgcG9zc2libGUgZm9yIG1lbiBlbmdhZ2VkIGluIHB1YmxpYyBhZmZhaXJzIGFuZCBpbiBwb2xpdGljcyBhcyBmb3IgdGhvc2UKCQkJCQl3aG8gbGl2ZSBhIHByaXZhdGUgbGlmZS4gPG1pbGVzdG9uZSBuPSIxMzI0YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+U29tZQoJCQkJCXBlb3BsZSB0aGVuIGhvbGQgdGhlIGZvcm1lciB2aWV3LCB3aGlsZSBvdGhlcnMgZGVjbGFyZSB0aGF0IHRoZSBkZXNwb3RpYyBhbmQKCQkJCQl0eXJhbm5pY2FsIGZvcm0gb2YgY29uc3RpdHV0aW9uIGFsb25lIGFjaGlldmVzIGhhcHBpbmVzczsgYW5kIGluIHNvbWUgc3RhdGVzIGl0CgkJCQkJaXMgYWxzbyB0aGUgZGlzdGluY3RpdmUgYWltIG9mIHRoZSBjb25zdGl0dXRpb24gYW5kIHRoZSBsYXdzIHRvIGVuYWJsZSB0aGVtIHRvCgkJCQkJZXhlcmNpc2UgZGVzcG90aWMgcnVsZSBvdmVyIHRoZWlyIG5laWdoYm9ycy4gSGVuY2UgZXZlbiB0aG91Z2ggd2l0aCBtb3N0IHBlb3BsZXMKCQkJCQltb3N0IG9mIHRoZSBsZWdhbCBvcmRpbmFuY2VzIGhhdmUgYmVlbiBsYWlkIGRvd24gdmlydHVhbGx5IGF0IHJhbmRvbSwKCQkJCQluZXZlcnRoZWxlc3MgaWYgdGhlcmUgYXJlIHBsYWNlcyB3aGVyZSB0aGUgbGF3cyBhaW0gYXQgb25lIGRlZmluaXRlIG9iamVjdCwgdGhhdAoJCQkJCW9iamVjdCBpcyBpbiBhbGwgY2FzZXMgcG93ZXIsIGFzIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gYW5kIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBrZXk9InRnbiw3MDEyMDU2Ij5DcmV0ZTwvcGxhY2VOYW1lPiBib3RoCgkJCQkJdGhlIHN5c3RlbSBvZiBlZHVjYXRpb24gYW5kIHRoZSBtYXNzIG9mIHRoZSBsYXdzIGFyZSBmcmFtZWQgaW4gdGhlIG1haW4gd2l0aCBhCgkJCQkJdmlldyB0byB3YXI7IGFuZCBhbHNvIGFtb25nIGFsbCB0aGUgbm9uLUhlbGxlbmljIG5hdGlvbnMgdGhhdCBhcmUgc3Ryb25nIGVub3VnaAoJCQkJCXRvIGV4cGFuZCBhdCB0aGUgZXhwZW5zZSBvZiBvdGhlcnMsIG1pbGl0YXJ5IHN0cmVuZ3RoIGhhcyBiZWVuIGhlbGQgaW4gaG9ub3IsCgkJCQkJZm9yIGV4YW1wbGUsIGFtb25nIHRoZSBTY3l0aGlhbnMsIFBlcnNpYW5zLCBUaHJhY2lhbnMgYW5kIENlbHRzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JbmRlZWQgYW1vbmcgc29tZSBwZW9wbGVzIHRoZXJlIGFyZSBldmVuCgkJCQkJY2VydGFpbiBsYXdzIHN0aW11bGF0aW5nIG1pbGl0YXJ5IHZhbG9yOyBmb3IgaW5zdGFuY2UgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDYXJ0aGFnZSIga2V5PSJwZXJzZXVzLENhcnRoYWdlIj5DYXJ0aGFnZTwvcGxhY2VOYW1lPiwgd2UgYXJlIHRvbGQsIHdhcnJpb3JzIHJlY2VpdmUKCQkJCQl0aGUgZGVjb3JhdGlvbiBvZiBhcm1sZXRzIG9mIHRoZSBzYW1lIG51bWJlciBhcyB0aGUgY2FtcGFpZ25zIG9uIHdoaWNoIHRoZXkgaGF2ZQoJCQkJCXNlcnZlZDsgYW5kIGF0IG9uZSB0aW1lIHRoZXJlIHdhcyBhbHNvIGEgbGF3IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA2NjY3IiBrZXk9InRnbiw3MDA2NjY3Ij5NYWNlZG9uaWE8L3BsYWNlTmFtZT4gdGhhdCBhIG1hbiB3aG8gaGFkIG5ldmVyIGtpbGxlZCBhbiBlbmVteSBtdXN0IHdlYXIKCQkJCQloaXMgaGFsdGVyIGluc3RlYWQgb2YgYSBiZWx0LiBBbW9uZyBTY3l0aGlhbiB0cmliZXMgYXQgYSBjZXJ0YWluIGZlc3RpdmFsIGEgY3VwCgkJCQkJd2FzIGNhcnJpZWQgcm91bmQgZnJvbSB3aGljaCBhIG1hbiB0aGF0IGhhZCBub3Qga2lsbGVkIGFuIGVuZW15IHdhcyBub3QgYWxsb3dlZAoJCQkJCXRvIGRyaW5rLiBBbW9uZyB0aGUgSWJlcmlhbnMsIGEgd2FybGlrZSByYWNlLCB0aGV5IGZpeCBzbWFsbCBzcGl0czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IgcGVyaGFwcyDigJhwb2ludGVkCgkJCQkJCXN0b25lcy7igJk8L25vdGU+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5pbiB0aGUKCQkJCQllYXJ0aCByb3VuZCBhIG1hbidzIGdyYXZlIGNvcnJlc3BvbmRpbmcgaW4gbnVtYmVyIHRvIHRoZSBlbmVtaWVzIGhlIGhhcyBraWxsZWQuCgkJCQkJU28gd2l0aCBvdGhlciByYWNlcyB0aGVyZSBhcmUgbWFueSBvdGhlciBwcmFjdGljZXMgb2YgYSBzaW1pbGFyIGtpbmQsIHNvbWUKCQkJCQllc3RhYmxpc2hlZCBieSBsYXcgYW5kIG90aGVycyBieSBjdXN0b20uPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi43IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5OZXZlcnRoZWxlc3MgdGhvc2Ugd2hvIHdpc2gKCQkJCQl0byBleGFtaW5lIHRoZSBtYXR0ZXIgY2xvc2VseSBtaWdodCBwZXJoYXBzIHRoaW5rIGl0IGV4Y2VlZGluZ2x5IHN0cmFuZ2UgdGhhdCBpdAoJCQkJCXNob3VsZCBiZSB0aGUgYnVzaW5lc3Mgb2YgYSBzdGF0ZXNtYW4gdG8gYmUgYWJsZSB0byBkZXZpc2UgbWVhbnMgb2YgaG9sZGluZwoJCQkJCWVtcGlyZSBhbmQgbWFzdGVyeSBvdmVyIHRoZSBuZWlnaGJvcmluZyBwZW9wbGVzIHdoZXRoZXIgdGhleSBkZXNpcmUgaXQgb3Igbm90LgoJCQkJCUhvdyBjYW4gdGhhdCBiZSB3b3J0aHkgb2YgYSBzdGF0ZXNtYW4gb3IgbGF3Z2l2ZXIgd2hpY2ggaXMgbm90IGV2ZW4gbGF3ZnVsPyBhbmQKCQkJCQlnb3Zlcm5tZW50IGlzIG5vdCBsYXdmdWwgd2hlbiBpdCBpcyBjYXJyaWVkIG9uIG5vdCBvbmx5IGp1c3RseSBidXQgYWxzbwoJCQkJCXVuanVzdGx54oCUYW5kIHN1cGVyaW9yIHN0cmVuZ3RoIG1heSBiZSB1bmp1c3RseSBleGVyY2lzZWQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPk1vcmVvdmVyIHdlIGRvIG5vdCBzZWUgdGhpcyBpbiB0aGUgb3RoZXIKCQkJCQlzY2llbmNlcyBlaXRoZXI6IGl0IGlzIG5vIHBhcnQgb2YgYSBwaHlzaWNpYW4ncyBvciBzaGlwLWNhcHRhaW4ncyBidXNpbmVzcyB0bwoJCQkJCXVzZSBlaXRoZXIgcGVyc3Vhc2lvbiBvciBjb21wdWxzaW9uIHVwb24gdGhlIHBhdGllbnRzIGluIHRoZSBvbmUgY2FzZSBhbmQgdGhlCgkJCQkJCWNyZXc8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yIHBlcmhhcHMg4oCYdGhlCgkJCQkJCXBhc3NlbmdlcnMu4oCZPC9ub3RlPiBpbiB0aGUgb3RoZXIuIFlldCBtb3N0IHBlb3BsZXMgc2VlbSB0byB0aGluawoJCQkJCXRoYXQgZGVzcG90aWMgcnVsZSBpcyBzdGF0ZXNtYW5zaGlwLCBhbmQgYXJlIG5vdCBhc2hhbWVkIHRvIHByYWN0aXNlIHRvd2FyZHMKCQkJCQlvdGhlcnMgdHJlYXRtZW50IHdoaWNoIHRoZXkgZGVjbGFyZSB0byBiZSB1bmp1c3QgYW5kIGRldHJpbWVudGFsIGZvciB0aGVtc2VsdmVzOwoJCQkJCWZvciBpbiB0aGVpciBvd24gaW50ZXJuYWwgYWZmYWlycyB0aGV5IGRlbWFuZCBqdXN0IGdvdmVybm1lbnQsIHlldCBpbiB0aGVpcgoJCQkJCXJlbGF0aW9ucyB3aXRoIG90aGVyIHBlb3BsZXMgdGhleSBwYXkgbm8gYXR0ZW50aW9uIHRvIGp1c3RpY2UuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPllldCBpdCBpcyBzdHJhbmdlIGlmIHRoZXJlIGlzIG5vdCBhIG5hdHVyYWwKCQkJCQlkaXN0aW5jdGlvbiBiZXR3ZWVuIHBlb3BsZXMgc3VpdGVkIHRvIGJlIGRlc3BvdGljYWxseSBydWxlZCBhbmQgdGhvc2Ugbm90CgkJCQkJc3VpdGVkOyBzbyB0aGF0IGlmIHRoaXMgaXMgc28sIGl0IGlzIG5vdCBwcm9wZXIgdG8gYXR0ZW1wdCB0byBleGVyY2lzZSBkZXNwb3RpYwoJCQkJCWdvdmVybm1lbnQgb3ZlciBhbGwgcGVvcGxlLCBidXQgb25seSBvdmVyIHRob3NlIHN1aXRlZCBmb3IgaXQsIGp1c3QgYXMgaXQgaXMgbm90CgkJCQkJcmlnaHQgdG8gaHVudCBodW1hbiBiZWluZ3MgZm9yIGZvb2Qgb3Igc2FjcmlmaWNlLCBidXQgb25seSB0aGUgZ2FtZSBzdWl0YWJsZSBmb3IKCQkJCQl0aGlzIHB1cnBvc2UsIHRoYXQgaXMsIHN1Y2ggd2lsZCBjcmVhdHVyZXMgYXMgYXJlIGdvb2QgdG8gZWF0LiBBbmQgbW9yZW92ZXIgaXQKCQkJCQlpcyBwb3NzaWJsZSBldmVuIGZvciBhIHNpbmdsZSBzdGF0ZSBpbiBpc29sYXRpb24gdG8gYmUgaGFwcHksIDxtaWxlc3RvbmUgbj0iMTMyNWEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnRoYXQgaXMKCQkJCQlvbmUgdGhhdCBpcyB3ZWxsIGdvdmVybmVkLCBpbiBhcyBtdWNoIGFzIGl0IGlzIGNvbmNlaXZhYmxlIHRoYXQgYSBzdGF0ZSBtaWdodCBiZQoJCQkJCWNhcnJpZWQgb24gc29tZXdoZXJlIGluIGlzb2xhdGlvbiwgZW5qb3lpbmcgZ29vZCBsYXdzLCBhbmQgaW4gc3VjaCBhIHN0YXRlIHRoZQoJCQkJCXN5c3RlbSBvZiB0aGUgY29uc3RpdHV0aW9uIHdpbGwgbm90IGJlIGZyYW1lZCBmb3IgdGhlIHB1cnBvc2Ugb2Ygd2FyIG9yIG9mCgkJCQkJb3ZlcnBvd2VyaW5nIGl0cyBlbmVtaWVz4oCUZm9yIHdlIGFyZSB0byBzdXBwb3NlIGV2ZXJ5dGhpbmcgdG8gZG8gd2l0aAoJCQkJCXdhciB0byBiZSBleGNsdWRlZC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMi4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IGlzIGV2aWRlbnQKCQkJCQl0aGVyZWZvcmUgdGhhdCB3aGlsZSBhbGwgbWlsaXRhcnkgcHVyc3VpdHMgYXJlIHRvIGJlIGRlZW1lZCBob25vcmFibGUsIHRoZXkgYXJlCgkJCQkJbm90IHNvIGFzIGJlaW5nIHRoZSB1bHRpbWF0ZSBlbmQgb2YgYWxsIHRoaW5ncyBidXQgYXMgbWVhbnMgdG8gdGhhdCBlbmQuIEFuZCBpdAoJCQkJCWlzIHRoZSBidXNpbmVzcyBvZiB0aGUgZ29vZCBsYXdnaXZlciB0byBzdHVkeSBob3cgYSBzdGF0ZSwgYSByYWNlIG9mIG1lbiBvciBhbnkKCQkJCQlvdGhlciBjb21tdW5pdHkgaXMgdG8gcGFydGFrZSBvZiB0aGUgZ29vZCBsaWZlIGFuZCB0aGUgaGFwcGluZXNzIHBvc3NpYmxlIGZvcgoJCQkJCXRoZW0uIFNvbWUgaG93ZXZlciBvZiB0aGUgcmVndWxhdGlvbnMgbGFpZCBkb3duIHdpbGwgdmFyeTsgYW5kIGluIGNhc2UgdGhlcmUKCQkJCQlleGlzdCBhbnkgbmVpZ2hib3IgcGVvcGxlcywgaXQgaXMgdGhlIGJ1c2luZXNzIG9mIHRoZSBsZWdpc2xhdGl2ZSBhcnQgdG8KCQkJCQljb25zaWRlciB3aGF0IHNvcnQgb2YgZXhlcmNpc2VzIHNob3VsZCBiZSBwcmFjdGlzZWQgaW4gcmVsYXRpb24gdG8gd2hhdCBzb3J0IG9mCgkJCQkJbmVpZ2hib3JzIG9yIGhvdyB0aGUgc3RhdGUgaXMgdG8gYWRvcHQgdGhlIHJlZ3VsYXRpb25zIHRoYXQgYXJlIHN1aXRhYmxlIGluCgkJCQkJcmVsYXRpb24gdG8gZWFjaC48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCB0aGlzIHF1ZXN0aW9uIG9mIHRoZSBwcm9wZXIKCQkJCQllbmQgZm9yIHRoZSBiZXN0IGNvbnN0aXR1dGlvbnMgdG8gYWltIGF0IG1heSByZWNlaXZlIGl0cyBkdWUgY29uc2lkZXJhdGlvbgoJCQkJCQlsYXRlci48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSAxMywgMTQuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2UKCQkJCQl0dXJuIHRvIHRob3NlIHdobywgd2hpbGUgYWdyZWVpbmcgdGhhdCB0aGUgbGlmZSBvZiB2aXJ0dWUgaXMgdGhlIG1vc3QgZGVzaXJhYmxlLAoJCQkJCWRpZmZlciBhYm91dCB0aGUgd2F5IGluIHdoaWNoIHRoYXQgbGlmZSBzaG91bGQgYmUgcHVyc3VlZC4gU29tZSBkaXNhcHByb3ZlIG9mCgkJCQkJaG9sZGluZyBvZmZpY2UgaW4gdGhlIHN0YXRlLCB0aGlua2luZyB0aGF0IHRoZSBsaWZlIG9mIHRoZSBmcmVlIG1hbjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+aXMgZGlmZmVyZW50IGZyb20gdGhlIGxpZmUgb2YgcG9saXRpY3MgYW5kCgkJCQkJaXMgdGhlIG1vc3QgZGVzaXJhYmxlIG9mIGFueTsgd2hlcmVhcyBvdGhlcnMgdGhpbmsgdGhlIHBvbGl0aWNhbCBsaWZlIHRoZSBiZXN0CgkJCQkJbGlmZSwgZm9yIHRoZXkgYXJndWUgdGhhdCBpdCBpcyBpbXBvc3NpYmxlIGZvciB0aGUgbWFuIHdobyBkb2VzIG5vdGhpbmcgdG8gZG8KCQkJCQl3ZWxsLCBhbmQgZG9pbmcgd2VsbCBhbmQgaGFwcGluZXNzIGFyZSB0aGUgc2FtZSB0aGluZy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9uIHRoZSBhbWJpZ3VvdXMgdXNlIG9mIOKAmGRvIHdlbGzigJkgc2VlCgkJCQkJCTEzMjNiIDMyIG4uPC9ub3RlPiBUbyB0aGVzZSB0d28gcGFydGllcyB3ZSBtdXN0IHJlcGx5IHRoYXQgYm90aCBhcmUgcGFydGx5CgkJCQkJcmlnaHQgYW5kIHBhcnRseSB3cm9uZy4gVGhlIGZvcm1lciBhcmUgcmlnaHQgaW4gc2F5aW5nIHRoYXQgdGhlIGxpZmUgb2YgdGhlIGZyZWUKCQkJCQltYW4gaXMgYmV0dGVyIHRoYW4gdGhlIGxpZmUgb2YgbWFzdGVyc2hpcCwgZm9yIHRoaXMgaXMgdHJ1ZeKAlHRoZXJlIGlzCgkJCQkJbm90aGluZyBzcGVjaWFsbHkgZGlnbmlmaWVkIGluIGVtcGxveWluZyBhIHNsYXZlLCBhcyBhIHNsYXZlLCBmb3IgZ2l2aW5nIG9yZGVycwoJCQkJCWFib3V0IG1lbmlhbCBkdXRpZXMgaGFzIGluIGl0IG5vdGhpbmcgb2Ygbm9iaWxpdHk7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPnlldCB0byB0aGluayB0aGF0IGFsbCBnb3Zlcm5tZW50IGlzIGV4ZXJjaXNpbmcgdGhlCgkJCQkJYXV0aG9yaXR5IG9mIGEgbWFzdGVyIGlzIGEgbWlzdGFrZSwgZm9yIHRoZXJlIGlzIGFzIHdpZGUgYSBkaWZmZXJlbmNlIGJldHdlZW4KCQkJCQlydWxpbmcgZnJlZSBtZW4gYW5kIHJ1bGluZyBzbGF2ZXMgYXMgdGhlcmUgaXMgYmV0d2VlbiB0aGUgbmF0dXJhbCBmcmVlbWFuIGFuZAoJCQkJCXRoZSBuYXR1cmFsIHNsYXZlIHRoZW1zZWx2ZXMuIEJ1dCB0aGVzZSB0aGluZ3MgaGF2ZSBiZWVuIGFkZXF1YXRlbHkgZGVjaWRlZCBpbgoJCQkJCXRoZSBmaXJzdCBkaXNjb3Vyc2VzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBCb29rIDEuPC9ub3RlPiBCdXQKCQkJCQl0byBwcmFpc2UgaW5hY3Rpb24gbW9yZSBoaWdobHkgdGhhbiBhY3Rpb24gaXMgYW4gZXJyb3IsIGZvciBoYXBwaW5lc3MgaXMgYW4KCQkJCQlhY3Rpdml0eSwgYW5kIGZ1cnRoZXIgdGhlIGFjdGlvbnMgb2YgdGhlIGp1c3QgYW5kIHRlbXBlcmF0ZSBoYXZlIGluIHRoZW0gdGhlCgkJCQkJcmVhbGl6YXRpb24gb2YgbXVjaCB0aGF0IGlzIG5vYmxlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5ZZXQgb24gdGhlIHN0cmVuZ3RoIG9mIHRoZXNlIGRlY2lzaW9ucyBzb21lYm9keSBtaWdodCBwZXJoYXBzIHN1cHBvc2UgdGhhdCB0aGUKCQkJCQloaWdoZXN0IGdvb2QgaXMgdG8gYmUgdGhlIG1hc3RlciBvZiB0aGUgd29ybGQsIHNpbmNlIHRodXMgb25lIHdvdWxkIGhhdmUgdGhlCgkJCQkJcG93ZXIgdG8gY29tcGFzcyB0aGUgZ3JlYXRlc3QgbnVtYmVyIGFuZCB0aGUgbm9ibGVzdCBraW5kIG9mIGFjdGlvbnMsIGFuZAoJCQkJCXRoZXJlZm9yZSBpdCBpcyBub3QgdGhlIGR1dHkgb2YgdGhlIG1hbiB0aGF0IGlzIGNhcGFibGUgb2YgcnVsaW5nIHRvIHN1cnJlbmRlcgoJCQkJCW9mZmljZSB0byBoaXMgbmVpZ2hib3IsIGJ1dCByYXRoZXIgdG8gdGFrZSBpdCBmcm9tIGhpbSwgYW5kIG5vIGFjY291bnQgbXVzdCBiZQoJCQkJCXRha2VuIGJ5IGZhdGhlciBvZiBzb25zIG5vciBieSBzb25zIG9mIGZhdGhlciBub3IgaW4gZ2VuZXJhbCBieSBvbmUgZnJpZW5kIG9mCgkJCQkJYW5vdGhlciwgYW5kIG5vIGhlZWQgbXVzdCBiZSBwYWlkIHRvIHRoZW0gaW4gY29tcGFyaXNvbiB3aXRoIHRoaXM7IGZvciB0aGUgYmVzdAoJCQkJCXRoaW5nIGlzIHRoZSBtb3N0IHRvIGJlIGRlc2lyZWQsIGFuZCB0byBkbyB3ZWxsIGlzIHRoZSBiZXN0IHRoaW5nLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ob3cgdGhpcyBzdGF0ZW1lbnQgaXMgcGVyaGFwcyB0cnVlCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTMyNWIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmlmIGl0IGlzIHRoZSBjYXNlIHRoYXQgdGhlIG1vc3QgZGVzaXJhYmxlIG9mIGV4aXN0aW5nIHRoaW5ncwoJCQkJCXdpbGwgYmVsb25nIHRvIG1lbiB0aGF0IHVzZSByb2JiZXJ5IGFuZCB2aW9sZW5jZS4gQnV0IHBlcmhhcHMgaXQgY2Fubm90IGJlbG9uZwoJCQkJCXRvIHRoZW0sIGFuZCB0aGlzIGlzIGEgZmFsc2UgYXNzdW1wdGlvbi4gRm9yIGEgbWFuJ3MgYWN0cyBjYW4gbm8gbG9uZ2VyIGJlIG5vYmxlCgkJCQkJaWYgaGUgZG9lcyBub3QgZXhjZWwgYXMgZ3JlYXRseSBhcyBhIG1hbiBleGNlbHMgYSB3b21hbiBvciBhIGZhdGhlciBoaXMgY2hpbGRyZW4KCQkJCQlvciBhIG1hc3RlciBoaXMgc2xhdmVzLCBzbyB0aGF0IG9uZSB3aG8gdHJhbnNncmVzc2VzIGNhbm5vdCBhZnRlcndhcmRzIGFjaGlldmUKCQkJCQlhbnl0aGluZyBzdWZmaWNpZW50IHRvIHJlY3RpZnkgdGhlIGxhcHNlIGZyb20gdmlydHVlIHRoYXQgaGUgaGFkIGFscmVhZHkKCQkJCQljb21taXR0ZWQ7IGJlY2F1c2UgZm9yIGVxdWFscyB0aGUgbm9ibGUgYW5kIGp1c3QgY29uc2lzdHMgaW4gdGhlaXIgdGFraW5nIHR1cm5zLAoJCQkJCXNpbmNlIHRoaXMgaXMgZXF1YWwgYW5kIGFsaWtlLCBidXQgZm9yIHRob3NlIHRoYXQgYXJlIGVxdWFsIHRvIGhhdmUgYW4gdW5lcXVhbAoJCQkJCXNoYXJlIGFuZCB0aG9zZSB0aGF0IGFyZSBhbGlrZSBhbiB1bmxpa2Ugc2hhcmUgaXMgY29udHJhcnkgdG8gbmF0dXJlLCBhbmQKCQkJCQlub3RoaW5nIGNvbnRyYXJ5IHRvIG5hdHVyZSBpcyBub2JsZS4gSGVuY2UgaW4gY2FzZSB0aGVyZSBpcyBhbm90aGVyIHBlcnNvbiB3aG8KCQkJCQlpcyBvdXIgc3VwZXJpb3IgaW4gdmlydHVlIGFuZCBpbiBwcmFjdGljYWwgY2FwYWNpdHkgZm9yIHRoZSBoaWdoZXN0IGZ1bmN0aW9ucywKCQkJCQloaW0gaXQgaXMgbm9ibGUgdG8gZm9sbG93IGFuZCBoaW0gaXQgaXMganVzdCB0byBvYmV5OyB0aG91Z2ggaGUgbXVzdCBwb3NzZXNzIG5vdAoJCQkJCW9ubHkgdmlydHVlIGJ1dCBhbHNvIGNhcGFjaXR5IHRoYXQgd2lsbCByZW5kZXIgaGltIGNhcGFibGUgb2YgYWN0aW9uLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgaWYgdGhlc2UgdGhpbmdzIGFyZSB3ZWxsIHNhaWQsIGFuZCBpZgoJCQkJCWhhcHBpbmVzcyBpcyB0byBiZSBkZWZpbmVkIGFzIHdlbGwtZG9pbmcsIHRoZSBhY3RpdmUgbGlmZSBpcyB0aGUgYmVzdCBsaWZlIGJvdGgKCQkJCQlmb3IgdGhlIHdob2xlIHN0YXRlIGNvbGxlY3RpdmVseSBhbmQgZm9yIGVhY2ggbWFuIGluZGl2aWR1YWxseS4gQnV0IHRoZSBhY3RpdmUKCQkJCQlsaWZlIGlzIG5vdCBuZWNlc3NhcmlseSBhY3RpdmUgaW4gcmVsYXRpb24gdG8gb3RoZXIgbWVuLCBhcyBzb21lIHBlb3BsZSB0aGluaywKCQkJCQlub3IgYXJlIG9ubHkgdGhvc2UgcHJvY2Vzc2VzIG9mIHRob3VnaHQgYWN0aXZlIHRoYXQgYXJlIHB1cnN1ZWQgZm9yIHRoZSBzYWtlIG9mCgkJCQkJdGhlIG9iamVjdHMgdGhhdCByZXN1bHQgZnJvbSBhY3Rpb24sIGJ1dCBmYXIgbW9yZTxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhvc2Ugc3BlY3VsYXRpb25zIGFuZCB0aG91Z2h0cyB0aGF0IGhhdmUgdGhlaXIgZW5kIGluCgkJCQkJdGhlbXNlbHZlcyBhbmQgYXJlIHB1cnN1ZWQgZm9yIHRoZWlyIG93biBzYWtlOyBmb3IgdGhlIGVuZCBpcyB0byBkbyB3ZWxsLCBhbmQKCQkJCQl0aGVyZWZvcmUgaXMgYSBjZXJ0YWluIGZvcm0gb2YgYWN0aW9uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Q2YuCgkJCQkJCTEzMjNiIDMyIG4uLCAxMzI1YSAyMS48L25vdGU+IEFuZCBldmVuIHdpdGggYWN0aW9ucyBkb25lIGluIHJlbGF0aW9uIHRvCgkJCQkJZXh0ZXJuYWwgb2JqZWN0cyB3ZSBwcmVkaWNhdGUgYWN0aW9uIGluIHRoZSBmdWxsIHNlbnNlIGNoaWVmbHkgb2YgdGhlCgkJCQkJbWFzdGVyLWNyYWZ0c21lbiB3aG8gZGlyZWN0IHRoZSBhY3Rpb24gYnkgdGhlaXIgdGhvdWdodHMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPk1vcmVvdmVyIHdpdGggY2l0aWVzIGFsc28sIHRob3NlIHRoYXQgb2NjdXB5IGFuCgkJCQkJaXNvbGF0ZWQgc2l0dWF0aW9uIGFuZCBwdXJzdWUgYSBwb2xpY3kgb2YgaXNvbGF0aW9uIGFyZSBub3QgbmVjZXNzYXJpbHkKCQkJCQlpbmFjdGl2ZTsgZm9yIHN0YXRlIGFjdGl2aXRpZXMgYWxzbyBjYW4gYmUgc2VjdGlvbmFsLCBzaW5jZSB0aGUgc2VjdGlvbnMgb2YgdGhlCgkJCQkJc3RhdGUgaGF2ZSBtYW55IGNvbW1vbiByZWxhdGlvbnMgd2l0aCBvbmUgYW5vdGhlci4gQW5kIHRoaXMgaXMgYWxzbyBwb3NzaWJsZQoJCQkJCXNpbWlsYXJseSBpbiB0aGUgY2FzZSBvZiBhbnkgaW5kaXZpZHVhbCBodW1hbiBiZWluZzsgZm9yIG90aGVyd2lzZSBHb2QgYW5kIHRoZQoJCQkJCXdob2xlIHVuaXZlcnNlIGNvdWxkIGhhcmRseSBiZSB3ZWxsIGNpcmN1bXN0YW5jZWQsIHNpbmNlIHRoZXkgaGF2ZSBubyBleHRlcm5hbAoJCQkJCWFjdGl2aXRpZXMgYnkgdGhlIHNpZGUgb2YgdGhlaXIgb3duIHByaXZhdGUgYWN0aXZpdGllcy48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGlzIHRoZXJlZm9yZSBtYW5pZmVzdCB0aGF0IHRoZSBzYW1lIGxpZmUgbXVzdCBiZSB0aGUgYmVzdAoJCQkJCWJvdGggZm9yIGVhY2ggaHVtYW4gYmVpbmcgaW5kaXZpZHVhbGx5IGFuZCBmb3Igc3RhdGVzIGFuZCBtYW5raW5kCgkJCQkJCWNvbGxlY3RpdmVseS48bWlsZXN0b25lIGVkPSJQIiBuPSI0LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBhcyB3ZSBoYXZlIHByZXBhcmVkIHRoZSB3YXkgYnkgdGhpcyBwcmVmYXRvcnkgZGlzY3Vzc2lvbiBvZgoJCQkJCXRoZSBzdWJqZWN0LCBhbmQgaGF2ZSBwcmV2aW91c2x5IHN0dWRpZWQgYWxsIHRoZSBvdGhlciBmb3JtcyBvZgoJCQkJCQljb25zdGl0dXRpb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIHNlZW1zIHRvIHJlZmVyIHRvCgkJCQkJCUJvb2tzIDQtNi48L25vdGU+IHRoZSBzdGFydGluZy1wb2ludCBmb3IgdGhlIHJlbWFpbmRlciBvZiBvdXIgc3ViamVjdCBpcwoJCQkJCWZpcnN0IHRvIHNwZWNpZnkgdGhlIG5hdHVyZSBvZiB0aGUgY29uZGl0aW9ucyB0aGF0IGFyZSBuZWNlc3NhcnkgaW4gdGhlIGNhc2Ugb2YKCQkJCQl0aGUgc3RhdGUgdGhhdCBpcyB0byBiZSBjb25zdGl0dXRlZCBpbiB0aGUgaWRlYWxseSBiZXN0IG1hbm5lci4gRm9yIHRoZSBiZXN0CgkJCQkJY29uc3RpdHV0aW9uIGNhbm5vdCBiZSByZWFsaXplZCB3aXRob3V0IHN1aXRhYmxlIGVxdWlwbWVudC48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiAxMjg4YiAzOSBuLjwvbm90ZT4gV2UgbXVzdCB0aGVyZWZvcmUgcG9zaXQgYXMgZ3JhbnRlZCBpbgoJCQkJCWFkdmFuY2UgYSBudW1iZXIgb2YgYXMgaXQgd2VyZSBpZGVhbCBjb25kaXRpb25zLCBhbHRob3VnaCBub25lIG9mIHRoZXNlIG11c3QgYmUKCQkJCQlhY3R1YWxseSBpbXBvc3NpYmxlLiBJIG1lYW4gZm9yIGluc3RhbmNlIGluIHJlZmVyZW5jZSB0byBudW1iZXIgb2YgY2l0aXplbnMgYW5kCgkJCQkJdGVycml0b3J5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbGwgb3RoZXIgY3JhZnRzbWVuLCBmb3IKCQkJCQlleGFtcGxlIGEgd2VhdmVyIG9yIGEgc2hpcHdyaWdodCwgPG1pbGVzdG9uZSBuPSIxMzI2YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+aGF2ZSB0byBiZSBzdXBwbGllZCB3aXRoIHRoZWlyCgkJCQkJbWF0ZXJpYWwgaW4gYSBjb25kaXRpb24gc3VpdGFibGUgZm9yIHRoZWlyIHRyYWRlLCBmb3IgdGhlIGJldHRlciB0aGlzIG1hdGVyaWFsCgkJCQkJaGFzIGJlZW4gcHJlcGFyZWQsIHRoZSBmaW5lciBpcyBib3VuZCB0byBiZSB0aGUgcHJvZHVjdCBvZiB0aGVpciBjcmFmdDsgc28gYWxzbwoJCQkJCXRoZSBzdGF0ZXNtYW4gYW5kIHRoZSBsYXdnaXZlciBvdWdodCB0byBiZSBmdXJuaXNoZWQgd2l0aCB0aGVpciBwcm9wZXIgbWF0ZXJpYWwKCQkJCQlpbiBhIHN1aXRhYmxlIGNvbmRpdGlvbi4gVW5kZXIgdGhlIGhlYWQgb2YgbWF0ZXJpYWwgZXF1aXBtZW50IGZvciB0aGUgc3RhdGUKCQkJCQl0aGVyZSBmaXJzdCBjb21lIHRoZSBxdWVzdGlvbnMgYXMgdG8gYSBzdXBwbHkgb2YgcG9wdWxhdGlvbuKAlHdoYXQKCQkJCQlwcmVjaXNlbHkgb3VnaHQgdG8gYmUgaXRzIG51bWJlciBhbmQgd2hhdCBpdHMgbmF0dXJhbCBjaGFyYWN0ZXI/IGFuZCBzaW1pbGFybHkKCQkJCQlpbiByZWdhcmQgdG8gdGhlIHRlcnJpdG9yeSwgd2hhdCBpcyB0byBiZSBpdHMgcGFydGljdWxhciBzaXplIGFuZCBuYXR1cmU/CgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPk1vc3QgcGVvcGxlIGltYWdpbmUgdGhhdCB0aGUKCQkJCQlwcm9zcGVyb3VzIHN0YXRlIG11c3QgYmUgYSBncmVhdCBzdGF0ZTsgYnV0IGdyYW50ZWQgdGhlIHRydXRoIG9mIHRoaXMsIHRoZXkgZmFpbAoJCQkJCXRvIHJlYWxpemUgaW4gd2hhdCBxdWFsaXR5IHRoZSBncmVhdG5lc3Mgb3Igc21hbGxuZXNzIG9mIGEgc3RhdGUgY29uc2lzdHM6IHRoZXkKCQkJCQlqdWRnZSBhIGdyZWF0IHN0YXRlIGJ5IHRoZSBudW1lcmljYWwgbWFnbml0dWRlIG9mIHRoZSBwb3B1bGF0aW9uLCBidXQgcmVhbGx5IHRoZQoJCQkJCW1vcmUgcHJvcGVyIHRoaW5nIHRvIGxvb2sgYXQgaXMgbm90IG51bWJlcnMgYnV0IGVmZmljaWVuY3kuIEZvciBhIHN0YXRlIGxpa2UKCQkJCQlvdGhlciB0aGluZ3MgaGFzIGEgY2VydGFpbiBmdW5jdGlvbiB0byBwZXJmb3JtLCBzbyB0aGF0IGl0IGlzIHRoZSBzdGF0ZSBtb3N0CgkJCQkJY2FwYWJsZSBvZiBwZXJmb3JtaW5nIHRoaXMgZnVuY3Rpb24gdGhhdCBpcyB0byBiZSBkZWVtZWQgdGhlIGdyZWF0ZXN0LCBqdXN0IGFzCgkJCQkJb25lIHdvdWxkIHByb25vdW5jZSBIaXBwb2NyYXRlcyB0byBiZSBncmVhdGVyLCBub3QgYXMgYSBodW1hbiBiZWluZyBidXQgYXMgYQoJCQkJCXBoeXNpY2lhbiwgdGhhbiBzb21lYm9keSB3aG8gc3VycGFzc2VkIGhpbSBpbiBib2RpbHkgc2l6ZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNC40IiB1bml0PSJMb2ViIGNoYXAiIC8+QWxsIHRoZSBzYW1lLCBldmVuIGlmIGl0IGJlIHJpZ2h0IHRvIGp1ZGdlIHRoZQoJCQkJCXN0YXRlIGJ5IHRoZSB0ZXN0IG9mIGl0cyBtdWx0aXR1ZGUsIHRoaXMgb3VnaHQgbm90IHRvIGJlIGRvbmUgd2l0aCByZWdhcmQgdG8gdGhlCgkJCQkJbXVsdGl0dWRlIG9mIGFueSBhbmQgZXZlcnkgY2xhc3Mg77yIZm9yIHN0YXRlcyBhcmUgZG91YnRsZXNzIGJvdW5kIHRvCgkJCQkJY29udGFpbiBhIGxhcmdlIG51bWJlciBvZiBzbGF2ZXM8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZAoJCQkJCXJlc2lkZW50IGFsaWVucyBhbmQgZm9yZWlnbmVyc++8iSwgYnV0IHRoZSB0ZXN0IHNob3VsZCBiZSB0aGUgbnVtYmVyIG9mCgkJCQkJdGhvc2Ugd2hvIGFyZSBhIHBhcnQgb2YgdGhlIHN0YXRl4oCUdGhlIHNwZWNpYWwgcGFydHMgb2Ygd2hpY2ggYSBzdGF0ZQoJCQkJCWNvbnNpc3RzLiBJdCBpcyBzdXBlcmlvcml0eSBpbiB0aGUgbnVtYmVyIG9mIHRoZXNlIHRoYXQgaW5kaWNhdGVzIGEgZ3JlYXQgc3RhdGU7CgkJCQkJYSBzdGF0ZSB0aGF0IHNlbmRzIGZvcnRoIHRvIHdhciBhIGxhcmdlIG51bWJlciBvZiB0aGUgYmFzZXIgc29ydCBhbmQgYSBzbWFsbAoJCQkJCW51bWJlciBvZiBoZWF2eS1hcm1lZCBzb2xkaWVycyBjYW5ub3QgcG9zc2libHkgYmUgYSBncmVhdCBzdGF0ZeKAlGZvciBhCgkJCQkJZ3JlYXQgc3RhdGUgaXMgbm90IHRoZSBzYW1lIHRoaW5nIGFzIGEgc3RhdGUgd2l0aCBhIGxhcmdlIHBvcHVsYXRpb24uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBjZXJ0YWlubHkgZXhwZXJpZW5jZSBhbHNvIHNob3dzIHRoYXQgaXQKCQkJCQlpcyBkaWZmaWN1bHQgYW5kIHBlcmhhcHMgaW1wb3NzaWJsZSBmb3IgYSBzdGF0ZSB3aXRoIHRvbyBsYXJnZSBhIHBvcHVsYXRpb24gdG8KCQkJCQloYXZlIGdvb2QgbGVnYWwgZ292ZXJubWVudC4gQXQgYWxsIGV2ZW50cyB3ZSBzZWUgdGhhdCBub25lIG9mIHRoZSBzdGF0ZXMgcmVwdXRlZAoJCQkJCXRvIGJlIHdlbGwgZ292ZXJuZWQgaXMgd2l0aG91dCBzb21lIHJlc3RyaWN0aW9uIGluIHJlZ2FyZCB0byBudW1iZXJzLiBUaGUKCQkJCQlldmlkZW5jZSBvZiB0aGVvcnkgcHJvdmVzIHRoZSBzYW1lIHBvaW50LiBMYXcgaXMgYSBmb3JtIG9mIG9yZGVyLCBhbmQgZ29vZCBsYXcKCQkJCQltdXN0IG5lY2Vzc2FyaWx5IG1lYW4gZ29vZCBvcmRlcjsgYnV0IGFuIGV4Y2Vzc2l2ZWx5IGxhcmdlIG51bWJlciBjYW5ub3QKCQkJCQlwYXJ0aWNpcGF0ZSBpbiBvcmRlcjogdG8gZ2l2ZSBpdCBvcmRlciB3b3VsZCBzdXJlbHkgYmUgYSB0YXNrIGZvciBkaXZpbmUgcG93ZXIsCgkJCQkJd2hpY2ggaG9sZHMgZXZlbiB0aGlzIHVuaXZlcnNlIHRvZ2V0aGVyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SW4KCQkJCQkJdGhlIE1TUy4gdGhpcyBjbGF1c2UgZm9sbG93cyB0aGUgbmV4dC48L25vdGU+IEhlbmNlIHRoYXQgc3RhdGUgYWxzbyBtdXN0CgkJCQkJbmVjZXNzYXJpbHkgYmUgdGhlIG1vc3QgYmVhdXRpZnVsIHdpdGggd2hvc2UgbWFnbml0dWRlIGlzIGNvbWJpbmVkIHRoZQoJCQkJCWFib3ZlLW1lbnRpb25lZCBsaW1pdGluZyBwcmluY2lwbGU7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPmZvciBjZXJ0YWlubHkgYmVhdXR5IGlzIHVzdWFsbHkgZm91bmQgaW4gbnVtYmVyIGFuZCBtYWduaXR1ZGUsIGJ1dCB0aGVyZSBpcyBhCgkJCQkJZHVlIG1lYXN1cmUgb2YgbWFnbml0dWRlIGZvciBhIGNpdHktc3RhdGUgYXMgdGhlcmUgYWxzbyBpcyBmb3IgYWxsIG90aGVyCgkJCQkJdGhpbmdz4oCUYW5pbWFscywgcGxhbnRzLCB0b29sczsgZWFjaCBvZiB0aGVzZSBpZiB0b28gc21hbGwgb3IKCQkJCQlleGNlc3NpdmVseSBsYXJnZSB3aWxsIG5vdCBwb3NzZXNzIGl0cyBvd24gcHJvcGVyIGVmZmljaWVuY3ksIGJ1dCBpbiBzb21lIGNhc2VzCgkJCQkJd2lsbCBoYXZlIGVudGlyZWx5IGxvc3QgaXRzIHRydWUgbmF0dXJlIGFuZCBpbiBvdGhlcnMgd2lsbCBiZSBpbiBhIGRlZmVjdGl2ZQoJCQkJCWNvbmRpdGlvbjogZm9yIGluc3RhbmNlLCBhIHNoaXAgYSBzcGFuIGxvbmcgd2lsbCBub3QgYmUgYSBzaGlwIGF0IGFsbCwgbm9yIHdpbGwKCQkJCQlhIHNoaXAgYSBxdWFydGVyIG9mIGEgbWlsZSBsb25nLCBhbmQgZXZlbiB3aGVuIGl0IHJlYWNoZXMgYSBjZXJ0YWluIHNpemUsCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTMyNmIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmluIHNvbWUgY2FzZXMgc21hbGxuZXNzIGFuZCBpbiBvdGhlcnMgZXhjZXNzaXZlIGxhcmdlbmVzcyB3aWxsCgkJCQkJbWFrZSBpdCBzYWlsIGJhZGx5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5TaW1pbGFybHkgYQoJCQkJCXN0YXRlIGNvbnNpc3Rpbmcgb2YgdG9vIGZldyBwZW9wbGUgd2lsbCBub3QgYmUgc2VsZi1zdWZmaWNpbmcg77yId2hpY2ggaXMKCQkJCQlhbiBlc3NlbnRpYWwgcXVhbGl0eSBvZiBhIHN0YXRl77yJLCBhbmQgb25lIGNvbnNpc3Rpbmcgb2YgdG9vIG1hbnksCgkJCQkJdGhvdWdoIHNlbGYtc3VmZmljaW5nIGluIHRoZSBtZXJlIG5lY2Vzc2FyaWVzLCB3aWxsIGJlIHNvIGluIHRoZSB3YXkgaW4gd2hpY2ggYQoJCQkJCQluYXRpb248bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gcHJlc3VtYWJseSBhbiBFdGhub3MgaW4gdGhlCgkJCQkJCXVzdWFsIHNlbnNlLCBhIGNvbW11bml0eSBjb21wb3NlZCBvZiB2aWxsYWdlcyBsb29zZWx5IGJvdW5kIHRvZ2V0aGVyIGJ5CgkJCQkJCXJlbGF0aW9uc2hpcCBhbmQgdHJhZGUsIGFuZCB1bml0ZWQgZm9yIGRlZmVuY2UsIGJ1dCBub3QgZm9yIHBvbGl0aWNhbCBsaWZlOwoJCQkJCQlub3QgYW4gRXRobm9zIG9mIGFzc29jaWF0ZWQgY2l0aWVzLjwvbm90ZT4gaXMsIGFuZCBub3QgYXMgYSBzdGF0ZSwgc2luY2UgaXQKCQkJCQl3aWxsIG5vdCBiZSBlYXN5IGZvciBpdCB0byBwb3NzZXNzIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnTigJRmb3Igd2hvCgkJCQkJd2lsbCBjb21tYW5kIGl0cyBvdmVyLXN3b2xsZW4gbXVsdGl0dWRlIGluIHdhcj8gb3Igd2hvIHdpbGwgc2VydmUgYXMgaXRzIGhlcmFsZCwKCQkJCQl1bmxlc3MgaGUgaGF2ZSB0aGUgbHVuZ3Mgb2YgYSBTdGVudG9yPyBJdCBmb2xsb3dzIHRoYXQgdGhlIGxvd2VzdCBsaW1pdCBmb3IgdGhlCgkJCQkJZXhpc3RlbmNlIG9mIGEgc3RhdGUgaXMgd2hlbiBpdCBjb25zaXN0cyBvZiBhIHBvcHVsYXRpb24gdGhhdCByZWFjaGVzIHRoZQoJCQkJCW1pbmltdW0gbnVtYmVyIHRoYXQgaXMgc2VsZi1zdWZmaWNpZW50IGZvciB0aGUgcHVycG9zZSBvZiBsaXZpbmcgdGhlIGdvb2QgbGlmZQoJCQkJCWFmdGVyIHRoZSBtYW5uZXIgb2YgYSBwb2xpdGljYWwgY29tbXVuaXR5LiBJdCBpcyBwb3NzaWJsZSBhbHNvIGZvciBvbmUgdGhhdAoJCQkJCWV4Y2VlZHMgdGhpcyBvbmUgaW4gbnVtYmVyIHRvIGJlIGEgZ3JlYXRlciBzdGF0ZSwgYnV0LCBhcyB3ZSBzYWlkLCB0aGlzCgkJCQkJcG9zc2liaWxpdHkgb2YgaW5jcmVhc2UgaXMgbm90IHdpdGhvdXQgbGltaXQsIGFuZCB3aGF0IHRoZSBsaW1pdCBvZiB0aGUgc3RhdGUncwoJCQkJCWV4cGFuc2lvbiBpcyBjYW4gZWFzaWx5IGJlIHNlZW4gZnJvbSBwcmFjdGljYWwgY29uc2lkZXJhdGlvbnMuIFRoZSBhY3Rpdml0aWVzIG9mCgkJCQkJdGhlIHN0YXRlIGFyZSB0aG9zZSBvZiB0aGUgcnVsZXJzIGFuZCB0aG9zZSBvZiB0aGUgcGVyc29ucyBydWxlZCwgYW5kIHRoZSB3b3JrCgkJCQkJb2YgYSBydWxlciBpcyB0byBkaXJlY3QgdGhlIGFkbWluaXN0cmF0aW9uIGFuZCB0byBqdWRnZSBsYXctc3VpdHM7IGJ1dCBpbiBvcmRlcgoJCQkJCXRvIGRlY2lkZSBxdWVzdGlvbnMgb2YganVzdGljZSBhbmQgaW4gb3JkZXIgdG8gZGlzdHJpYnV0ZSB0aGUgb2ZmaWNlcyBhY2NvcmRpbmcKCQkJCQl0byBtZXJpdCBpdCBpcyBuZWNlc3NhcnkgZm9yIHRoZSBjaXRpemVucyB0byBrbm93IGVhY2ggb3RoZXIncyBwZXJzb25hbAoJCQkJCWNoYXJhY3RlcnMsIHNpbmNlIHdoZXJlIHRoaXMgZG9lcyBub3QgaGFwcGVuIHRvIGJlIHRoZSBjYXNlIHRoZSBidXNpbmVzcyBvZgoJCQkJCWVsZWN0aW5nIG9mZmljaWFscyBhbmQgdHJ5aW5nIGxhdy1zdWl0cyBpcyBib3VuZCB0byBnbyBiYWRseTsgaGFwaGF6YXJkIGRlY2lzaW9uCgkJCQkJaXMgdW5qdXN0IGluIGJvdGggbWF0dGVycywgYW5kIHRoaXM8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm11c3Qgb2J2aW91c2x5IHByZXZhaWwgaW4gYW4gZXhjZXNzaXZlbHkgbnVtZXJvdXMgY29tbXVuaXR5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbHNvIGluIHN1Y2ggYSBjb21tdW5pdHkgaXQgaXMgZWFzeSBmb3IKCQkJCQlmb3JlaWduZXJzIGFuZCByZXNpZGVudCBhbGllbnMgdG8gdXN1cnAgdGhlIHJpZ2h0cyBvZiBjaXRpemVuc2hpcCwgZm9yIHRoZQoJCQkJCWV4Y2Vzc2l2ZSBudW1iZXIgb2YgdGhlIHBvcHVsYXRpb24gbWFrZXMgaXQgbm90IGRpZmZpY3VsdCB0byBlc2NhcGUgZGV0ZWN0aW9uLgoJCQkJCUl0IGlzIGNsZWFyIHRoZXJlZm9yZSB0aGF0IHRoZSBiZXN0IGxpbWl0aW5nIHByaW5jaXBsZSBmb3IgYSBzdGF0ZSBpcyB0aGUKCQkJCQlsYXJnZXN0IGV4cGFuc2lvbiBvZiB0aGUgcG9wdWxhdGlvbiwgd2l0aCBhIHZpZXcgdG8gc2VsZi1zdWZmaWNpZW5jeSB0aGF0IGNhbgoJCQkJCXdlbGwgYmUgdGFrZW4gaW4gYXQgb25lIHZpZXcuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoIG1heSBiZSBvdXIKCQkJCQljb25jbHVzaW9uIG9uIHRoZSBxdWVzdGlvbiBvZiB0aGUgc2l6ZSBvZiB0aGUgc3RhdGUuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5WZXJ5IG11Y2ggdGhlIHNhbWUgaG9sZHMKCQkJCQlnb29kIGFib3V0IGl0cyB0ZXJyaXRvcnkuIEFzIHRvIHRoZSBxdWVzdGlvbiB3aGF0IHBhcnRpY3VsYXIga2luZCBvZiBsYW5kIGl0CgkJCQkJb3VnaHQgdG8gaGF2ZSwgaXQgaXMgY2xlYXIgdGhhdCBldmVyeWJvZHkgd291bGQgY29tbWFuZCB0aGF0IHdoaWNoIGlzIG1vc3QKCQkJCQlzZWxmLXN1ZmZpY2luZyDvvIhhbmQgc3VjaCBpcyBuZWNlc3NhcmlseSB0aGF0IHdoaWNoIGJlYXJzIGV2ZXJ5IHNvcnQgb2YKCQkJCQlwcm9kdWNlLCBmb3Igc2VsZi1zdWZmaWNpZW5jeSBtZWFucyBoYXZpbmcgYSBzdXBwbHkgb2YgZXZlcnl0aGluZyBhbmQgbGFja2luZwoJCQkJCW5vdGhpbmfvvIkuIEluIGV4dGVudCBhbmQgbWFnbml0dWRlIHRoZSBsYW5kIG91Z2h0IHRvIGJlIG9mIGEgc2l6ZSB0aGF0CgkJCQkJd2lsbCBlbmFibGUgdGhlIGluaGFiaXRhbnRzIHRvIGxpdmUgYSBsaWZlIG9mIGxpYmVyYWwgYW5kIGF0IHRoZSBzYW1lIHRpbWUKCQkJCQl0ZW1wZXJhdGUgbGVpc3VyZS4gV2hldGhlciB0aGlzIGxpbWl0aW5nIHByaW5jaXBsZSBpcyByaWdodGx5IG9yIHdyb25nbHkgc3RhdGVkCgkJCQkJbXVzdCBiZSBjb25zaWRlcmVkIG1vcmUgcHJlY2lzZWx5IGxhdGVyIG9uLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBwcm9taXNlIGlzIG5vdCBmdWxmaWxsZWQgaW4gdGhlIHdvcmsgYXMgaXQgaGFzIGNvbWUgZG93biB0byB1cy48L25vdGU+CgkJCQkJd2hlbiB3ZSBjb21lIHRvIHJhaXNlIHRoZSBnZW5lcmFsIHN1YmplY3Qgb2YgcHJvcGVydHkgYW5kIHRoZSBvd25lcnNoaXAgb2YKCQkJCQl3ZWFsdGgs4oCUaG93IGFuZCBpbiB3aGF0IHdheSBpdCBvdWdodCB0byBiZSByZWxhdGVkIHRvIHRoZSBlbXBsb3ltZW50CgkJCQkJb2Ygd2VhbHRoPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgZGlzdGluY3Rpb24gc2VlbXMgdG8gYmUgYmV0d2VlbgoJCQkJCQlvd25pbmcg77yIb3IgcGVyaGFwcyBnZXR0aW5n77yJIHdlYWx0aCBhbmQgdXNpbmcgaXQ7IGJ1dCBhCgkJCQkJCXByb2JhYmxlIGVtZW5kYXRpb24gb2YgdGhlIEdyZWVrIGdpdmVzIOKAmGhvdyB3ZSBvdWdodCB0byBzdGFuZCBpbgoJCQkJCQlyZWxhdGlvbiB0byBpdHMgZW1wbG95bWVudC7igJk8L25vdGU+OyBhYm91dCB0aGlzIHF1ZXN0aW9uIHRoZXJlIGFyZQoJCQkJCW1hbnkgY29udHJvdmVyc2llcywgb3dpbmcgdG8gdGhvc2UgdGhhdCBkcmF3IHVzIHRvd2FyZHMgZWl0aGVyIGV4dHJlbWUgb2YgbGlmZSwKCQkJCQl0aGUgb25lIHNjaG9vbCB0b3dhcmRzIHBhcnNpbW9ueSBhbmQgdGhlIG90aGVyIHRvd2FyZHMgbHV4dXJ5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgcHJvcGVyIGNvbmZpZ3VyYXRpb24gb2YgdGhlIGNvdW50cnkgaXQKCQkJCQlpcyBub3QgZGlmZmljdWx0IHRvIHN0YXRlIO+8iHRob3VnaCB0aGVyZSBhcmUgc29tZSBwb2ludHMgb24gd2hpY2ggdGhlCgkJCQkJYWR2aWNlIG9mIG1pbGl0YXJ5IGV4cGVydHMgYWxzbyBtdXN0IGJlIHRha2Vu77yJOiBvbiB0aGUgb25lIGhhbmQgaXQKCQkJCQlzaG91bGQgYmUgZGlmZmljdWx0IGZvciBlbmVtaWVzIHRvIGludmFkZSBhbmQgZWFzeSBmb3IgdGhlIHBlb3BsZSB0aGVtc2VsdmVzIHRvCgkJCQkJbWFyY2ggb3V0IGZyb20sIDxtaWxlc3RvbmUgbj0iMTMyN2EiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBpbiBhZGRpdGlvbiwgb24gdGhlIG90aGVyIGhhbmQsIHRoZSBzYW1lIHRoaW5nCgkJCQkJaG9sZHMgZ29vZCBvZiB0aGUgdGVycml0b3J5IHRoYXQgd2Ugc2FpZCBhYm91dCB0aGUgc2l6ZSBvZiB0aGUKCQkJCQlwb3B1bGF0aW9u4oCUaXQgbXVzdCBiZSB3ZWxsIGFibGUgdG8gYmUgdGFrZW4gaW4gYXQgb25lIHZpZXcsIGFuZCB0aGF0CgkJCQkJbWVhbnMgYmVpbmcgYSBjb3VudHJ5IGVhc3kgZm9yIG1pbGl0YXJ5IGRlZmVuY2UuIEFzIHRvIHRoZSBzaXRlIG9mIHRoZSBjaXR5LCBpZgoJCQkJCWl0IGlzIHRvIGJlIGlkZWFsbHkgcGxhY2VkLCBpdCBpcyBwcm9wZXIgZm9yIGl0IHRvIGJlIHdlbGwgc2l0dWF0ZWQgd2l0aCByZWdhcmQKCQkJCQlib3RoIHRvIHRoZSBzZWEgYW5kIHRvIHRoZSBjb3VudHJ5LiBPbmUgZGVmaW5pbmcgcHJpbmNpcGxlIGlzIHRoYXQgbWVudGlvbmVkCgkJCQkJCWFib3ZlPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BdCB0aGUgYmVnaW5uaW5nIG9mCgkJCQkJNS4yLjwvbm90ZT7igJR0aGUgY2l0eSBtdXN0IGJlIGluIGNvbW11bmljYXRpb24gd2l0aCBhbGwgcGFydHMgb2YgdGhlCgkJCQkJdGVycml0b3J5IGZvciB0aGUgcHVycG9zZSBvZiBzZW5kaW5nIG91dCBtaWxpdGFyeSBhc3Npc3RhbmNlOyBhbmQgdGhlIHJlbWFpbmluZwoJCQkJCXByaW5jaXBsZSBpcyB0aGF0IGl0IG11c3QgYmUgZWFzaWx5IGFjY2Vzc2libGUgZm9yIHRoZSBjb252ZXlhbmNlIHRvIGl0IG9mIHRoZQoJCQkJCWFncmljdWx0dXJhbCBwcm9kdWNlLCBhbmQgYWxzbyBvZiB0aW1iZXItd29vZCBhbmQgYW55IG90aGVyIHN1Y2ggbWF0ZXJpYWwgdGhhdAoJCQkJCXRoZSBjb3VudHJ5IGhhcHBlbnMgdG8gcG9zc2Vzcy48bWlsZXN0b25lIGVkPSJQIiBuPSI1LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFzIHRvIGNvbW11bmljYXRpb24gd2l0aCB0aGUgc2VhIGl0IGlzIGluCgkJCQkJZmFjdCBtdWNoIGRlYmF0ZWQgd2hldGhlciBpdCBpcyBhZHZhbnRhZ2VvdXMgdG8gd2VsbC1vcmRlcmVkIHN0YXRlcyBvciBoYXJtZnVsLgoJCQkJCUl0IGlzIG1haW50YWluZWQgdGhhdCB0aGUgdmlzaXRzIG9mIHBlcnNvbnMgYnJvdWdodCB1cCB1bmRlciBvdGhlciBpbnN0aXR1dGlvbnMKCQkJCQlhcmUgZGV0cmltZW50YWwgdG8gbGF3IGFuZCBvcmRlciwgYW5kIHNvIGFsc28gaXMgYSBzd29sbGVuIHBvcHVsYXRpb24sIHdoaWNoCgkJCQkJZ3Jvd3Mgb3V0IG9mIHNlbmRpbmcgb3V0IGFicm9hZCBhbmQgcmVjZWl2aW5nIGluIGEgbnVtYmVyIG9mIHRyYWRlcnMsIGJ1dCBpcwoJCQkJCXVuZmF2b3JhYmxlIHRvIGdvb2QgZ292ZXJubWVudC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+Tm93CgkJCQkJaXQgaXMgbm90IGRpZmZpY3VsdCB0byBzZWUgdGhhdCwgaWYgdGhlc2UgY29uc2VxdWVuY2VzIGFyZSBhdm9pZGVkLCBpdCBpcwoJCQkJCWFkdmFudGFnZW91cyBpbiByZXNwZWN0IG9mIGJvdGggc2VjdXJpdHkgYW5kIHRoZSBzdXBwbHkgb2YgbmVjZXNzYXJ5CgkJCQkJCWNvbW1vZGl0aWVzPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50aGF0IHRoZSBjaXR5IGFuZCB0aGUKCQkJCQljb3VudHJ5IHNob3VsZCBoYXZlIGFjY2VzcyB0byB0aGUgc2VhLiBXaXRoIGEgdmlldyB0byBlbmR1cmluZyB3YXJzIG1vcmUgZWFzaWx5CgkJCQkJcGVvcGxlIHRoYXQgYXJlIHRvIGJlIHNlY3VyZSBtdXN0IGJlIGNhcGFibGUgb2YgZGVmZW5zaXZlIG9wZXJhdGlvbnMgb24gYm90aAoJCQkJCWVsZW1lbnRzLCBsYW5kIGFuZCBzZWEsIGFuZCB3aXRoIGEgdmlldyB0byBzdHJpa2luZyBhdCBhc3NhaWxhbnRzLCBldmVuIGlmIGl0IGJlCgkJCQkJbm90IHBvc3NpYmxlIG9uIGJvdGggZWxlbWVudHMsIHlldCB0byBkbyBzbyBvbiBvbmUgb3IgdGhlIG90aGVyIHdpbGwgYmUgbW9yZSBpbgoJCQkJCXRoZSBwb3dlciBvZiBwZW9wbGUgdGhhdCBoYXZlIGFjY2VzcyB0byBib3RoLiBBbmQgdGhlIGltcG9ydGF0aW9uIG9mIGNvbW1vZGl0aWVzCgkJCQkJdGhhdCB0aGV5IGRvIG5vdCBoYXBwZW4gdG8gaGF2ZSBpbiB0aGVpciBvd24gY291bnRyeSBhbmQgdGhlIGV4cG9ydCBvZiB0aGVpcgoJCQkJCXN1cnBsdXMgcHJvZHVjdHMgYXJlIHRoaW5ncyBpbmRpc3BlbnNhYmxlOyBmb3IgdGhlIHN0YXRlIG91Z2h0IHRvIGVuZ2FnZSBpbgoJCQkJCWNvbW1lcmNlIGZvciBpdHMgb3duIGludGVyZXN0LCBidXQgbm90IGZvciB0aGUgaW50ZXJlc3Qgb2YgdGhlIGZvcmVpZ25lci4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS41IiB1bml0PSJMb2ViIGNoYXAiIC8+UGVvcGxlIHRoYXQgdGhyb3cgb3BlbiB0aGVpcgoJCQkJCW1hcmtldCB0byB0aGUgd29ybGQgZG8gc28gZm9yIHRoZSBzYWtlIG9mIHJldmVudWUsIGJ1dCBhIHN0YXRlIHRoYXQgaXMgbm90IHRvCgkJCQkJdGFrZSBwYXJ0IGluIHRoYXQgc29ydCBvZiBwcm9maXQtbWFraW5nIG5lZWQgbm90IHBvc3Nlc3MgYSBncmVhdCBjb21tZXJjaWFsCgkJCQkJcG9ydC4gQnV0IHNpbmNlIGV2ZW4gbm93IHdlIHNlZSBtYW55IGNvdW50cmllcyBhbmQgY2l0aWVzIHBvc3Nlc3Npbmcgc2VhLXBvcnRzCgkJCQkJYW5kIGhhcmJvcnMgY29udmVuaWVudGx5IHNpdHVhdGVkIHdpdGggcmVnYXJkIHRvIHRoZSBjaXR5LCBzbyBhcyBub3QgdG8gZm9ybQoJCQkJCXBhcnQgb2YgdGhlIHNhbWUgdG93bjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUgR3JlZWsKCQkJCQkJc2hvdWxkIGJlIGFsdGVyZWQgdG8gZ2l2ZSDigJhwYXJ0IG9mIHRoZSB0b3duCgkJCQkJCWl0c2VsZi7igJk8L25vdGU+IGFuZCB5ZXQgbm90IHRvIGJlIHRvbyBmYXIgb2ZmLCBidXQgY29tbWFuZGVkIGJ5CgkJCQkJd2FsbHMgYW5kIG90aGVyIGRlZmVuY2Utd29ya3Mgb2YgdGhlIGtpbmQsIGl0IGlzIG1hbmlmZXN0IHRoYXQgaWYgYW55IGFkdmFudGFnZQoJCQkJCWRvZXMgcmVzdWx0IHRocm91Z2ggdGhlIGNvbW11bmljYXRpb24gb2YgY2l0eSB3aXRoIHBvcnQgdGhlIHN0YXRlIHdpbGwgcG9zc2VzcwoJCQkJCXRoaXMgYWR2YW50YWdlLCBhbmQgaWYgdGhlcmUgaXMgYW55IGhhcm1mdWwgcmVzdWx0IGl0IGlzIGVhc3kgdG8gZ3VhcmQgYWdhaW5zdAoJCQkJCWl0IGJ5IG1lYW5zIG9mIGxhd3Mgc3RhdGluZyBhbmQgcmVndWxhdGluZyB3aGF0IHBlcnNvbnMgYXJlIG5vdCBhbmQgd2hhdCBwZXJzb25zCgkJCQkJYXJlIHRvIGhhdmUgaW50ZXJjb3Vyc2Ugd2l0aCBvbmUgYW5vdGhlci4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS42IiB1bml0PSJMb2ViIGNoYXAiIC8+T24gdGhlIHF1ZXN0aW9uIG9mIG5hdmFsIGZvcmNlcywgdGhlcmUgaXMgbm8gZG91YnQgdGhhdCB0bwoJCQkJCXBvc3Nlc3MgdGhlbSB1cCB0byBhIGNlcnRhaW4gc3RyZW5ndGggaXMgbW9zdCBkZXNpcmFibGUgPG1pbGVzdG9uZSBuPSIxMzI3YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+77yIZm9yIGEKCQkJCQlzdGF0ZSBvdWdodCB0byBiZSBmb3JtaWRhYmxlLCBhbmQgYWxzbyBjYXBhYmxlIG9mIHRoZSBkZWZlbmNlIG9mIG5vdCBvbmx5IGl0cwoJCQkJCW93biBwZW9wbGUgYnV0IGFsc28gc29tZSBvZiBpdHMgbmVpZ2hib3JzLCBieSBzZWEgYXMgd2VsbCBhcyBieSBsYW5k77yJOwoJCQkJCWJ1dCB3aGVuIHdlIGNvbWUgdG8gdGhlIHF1ZXN0aW9uIG9mIHRoZSBudW1iZXIgYW5kIHNpemUgb2YgdGhpcyBmb3JjZSwgd2UgaGF2ZQoJCQkJCXRvIGNvbnNpZGVyIHRoZSBzdGF0ZSdzIG1hbm5lciBvZiBsaWZlIGlmIGl0IGlzIHRvIGxpdmUgYSBsaWZlIG9mIGxlYWRlcnNoaXAgYW5kCgkJCQkJCWFmZmFpcnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHJlbGF0aW9ucyB3aXRoIG90aGVyCgkJCQkJCXN0YXRlc+KAlGEgYnJvYWRlciB0ZXJtIHRoYW4gaGVnZW1vbnksIGxlYWRlcnNoaXAgb2YgYW4KCQkJCQkJYWxsaWFuY2UuPC9ub3RlPiBpdCBtdXN0IHBvc3Nlc3MgbWFyaXRpbWUgYXMgd2VsbCBhcyBvdGhlciBmb3JjZXMKCQkJCQljb21tZW5zdXJhdGUgd2l0aCBpdHMgYWN0aXZpdGllcy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS43IiB1bml0PSJMb2ViIGNoYXAiIC8+T24KCQkJCQl0aGUgb3RoZXIgaGFuZCBpdCBpcyBub3QgbmVjZXNzYXJ5IGZvciBzdGF0ZXMgdG8gaW5jbHVkZSB0aGUgdGVlbWluZyBwb3B1bGF0aW9uCgkJCQkJdGhhdCBncm93cyB1cCBpbiBjb25uZWN0aW9uIHdpdGggY29tbW9uIHNhaWxvcnMsIGFzIHRoZXJlIGlzIG5vIG5lZWQgZm9yIHRoZXNlCgkJCQkJdG8gYmUgY2l0aXplbnM7IGZvciB0aGUgbWFyaW5lcyBhcmUgZnJlZSBtZW4gYW5kIGFyZSBhIHBhcnQgb2YgdGhlIGluZmFudHJ5LCBhbmQKCQkJCQlpdCBpcyB0aGV5IHdobyBoYXZlIGNvbW1hbmQgYW5kIGNvbnRyb2wgdGhlIGNyZXc7IGFuZCBpZiB0aGVyZSBleGlzdHMgYSBtYXNzIG9mCgkJCQkJdmlsbGFnZXJzIGFuZCB0aWxsZXJzIG9mIHRoZSBzb2lsLCB0aGVyZSBpcyBib3VuZCB0byBiZSBubyBsYWNrIG9mIHNhaWxvcnMgdG9vLgoJCQkJCUluIGZhY3Qgd2Ugc2VlIHRoaXMgc3RhdGUgb2YgdGhpbmcgZXhpc3RpbmcgZXZlbiBub3cgaW4gc29tZSBwbGFjZXMsIGZvcgoJCQkJCWluc3RhbmNlIGluIHRoZSBjaXR5IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA4Mjk5IiBrZXk9InRnbiw3MDA4Mjk5Ij5IZXJhY2xlYTwvcGxhY2VOYW1lPjsgdGhlCgkJCQkJSGVyYWNsZW90ZXMgbWFuIGEgbGFyZ2UgZmxlZXQgb2YgdHJpcmVtZXMsIGFsdGhvdWdoIHRoZXkgcG9zc2VzcyBhIGNpdHkgb2YgYnV0CgkJCQkJbW9kZXJhdGUgc2l6ZSBhcyBjb21wYXJlZCB3aXRoIG90aGVycy48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkxldCBzdWNoCgkJCQkJdGhlbiBiZSBvdXIgY29uY2x1c2lvbnMgYWJvdXQgdGhlIHRlcnJpdG9yaWVzIGFuZCBoYXJib3JzIG9mIGNpdGllcywgYW5kIHRoZQoJCQkJCXNlYSwgYW5kIGFib3V0IG5hdmFsIGZvcmNlcy48bWlsZXN0b25lIGVkPSJQIiBuPSI2LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFib3V0IHRoZSBjaXRpemVuIHBvcHVsYXRpb24sIHdlIHNhaWQKCQkJCQliZWZvcmUgd2hhdCBpcyBpdHMgcHJvcGVyIGxpbWl0IG9mIG51bWJlcnMuIExldCB1cyBub3cgc3BlYWs8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm9mIHdoYXQgb3VnaHQgdG8gYmUgdGhlIGNpdGl6ZW5zJyBuYXR1cmFsCgkJCQkJY2hhcmFjdGVyLiBOb3cgdGhpcyBvbmUgbWlnaHQgYWxtb3N0IGRpc2Nlcm4gYnkgbG9va2luZyBhdCB0aGUgZmFtb3VzIGNpdGllcyBvZgoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IGFuZCBieSBvYnNlcnZpbmcgaG93IHRoZQoJCQkJCXdob2xlIGluaGFiaXRlZCB3b3JsZCBpcyBkaXZpZGVkIHVwIGFtb25nIHRoZSBuYXRpb25zLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+NC4gZmluLjwvbm90ZT4gVGhlIG5hdGlvbnMgaW5oYWJpdGluZyB0aGUgY29sZCBwbGFjZXMgYW5kCgkJCQkJdGhvc2Ugb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDMiIGtleT0idGduLDEwMDAwMDMiPkV1cm9wZTwvcGxhY2VOYW1lPiBhcmUgZnVsbCBvZiBzcGlyaXQgYnV0CgkJCQkJc29tZXdoYXQgZGVmaWNpZW50IGluIGludGVsbGlnZW5jZSBhbmQgc2tpbGwsIHNvIHRoYXQgdGhleSBjb250aW51ZQoJCQkJCWNvbXBhcmF0aXZlbHkgZnJlZSwgYnV0IGxhY2tpbmcgaW4gcG9saXRpY2FsIG9yZ2FuaXphdGlvbiBhbmQgY2FwYWNpdHkgdG8gcnVsZQoJCQkJCXRoZWlyIG5laWdoYm9ycy4gVGhlIHBlb3BsZXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwMDQiIGtleT0idGduLDEwMDAwMDQiPkFzaWE8L3BsYWNlTmFtZT4gb24KCQkJCQl0aGUgb3RoZXIgaGFuZCBhcmUgaW50ZWxsaWdlbnQgYW5kIHNraWxsZnVsIGluIHRlbXBlcmFtZW50LCBidXQgbGFjayBzcGlyaXQsIHNvCgkJCQkJdGhhdCB0aGV5IGFyZSBpbiBjb250aW51b3VzIHN1YmplY3Rpb24gYW5kIHNsYXZlcnkuIEJ1dCB0aGUgR3JlZWsgcmFjZQoJCQkJCXBhcnRpY2lwYXRlcyBpbiBib3RoIGNoYXJhY3RlcnMsIGp1c3QgYXMgaXQgb2NjdXBpZXMgdGhlIG1pZGRsZSBwb3NpdGlvbgoJCQkJCWdlb2dyYXBoaWNhbGx5LCBmb3IgaXQgaXMgYm90aCBzcGlyaXRlZCBhbmQgaW50ZWxsaWdlbnQ7IGhlbmNlIGl0IGNvbnRpbnVlcyB0bwoJCQkJCWJlIGZyZWUgYW5kIHRvIGhhdmUgdmVyeSBnb29kIHBvbGl0aWNhbCBpbnN0aXR1dGlvbnMsIGFuZCB0byBiZSBjYXBhYmxlIG9mCgkJCQkJcnVsaW5nIGFsbCBtYW5raW5kIGlmIGl0IGF0dGFpbnMgY29uc3RpdHV0aW9uYWwgdW5pdHkuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjYuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSBzYW1lIGRpdmVyc2l0eSBhbHNvIGV4aXN0cyBhbW9uZyB0aGUgR3JlZWsgcmFjZXMKCQkJCQljb21wYXJlZCB3aXRoIG9uZSBhbm90aGVyOiBzb21lIGhhdmUgYSBvbmUtc2lkZWQgbmF0dXJlLCBvdGhlcnMgYXJlIGhhcHBpbHkKCQkJCQlibGVuZGVkIGluIHJlZ2FyZCB0byBib3RoIHRoZXNlIGNhcGFjaXRpZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGludGVsbGlnZW5jZSBhbmQgaGlnaCBzcGlyaXQsIGNhcGFjaXR5IGZvciBzZWxmLWdvdmVybm1lbnQgYW5kCgkJCQkJCWNhcGFjaXR5IGZvciBlbXBpcmUuPC9ub3RlPiBJdCBpcyBjbGVhciB0aGVyZWZvcmUgdGhhdCBwZW9wbGUgdGhhdCBhcmUgdG8gYmUKCQkJCQllYXNpbHkgZ3VpZGVkIHRvIHZpcnR1ZSBieSB0aGUgbGF3Z2l2ZXIgbXVzdCBiZSBib3RoIGludGVsbGVjdHVhbCBhbmQgc3Bpcml0ZWQKCQkJCQlpbiB0aGVpciBuYXR1cmUuIEZvciBhcyB0byB3aGF0IGlzIHNhaWQgYnkgY2VydGFpbiBwZXJzb25zIGFib3V0IHRoZSBjaGFyYWN0ZXIKCQkJCQl0aGF0IHNob3VsZCBiZWxvbmcgdG8gdGhlaXIgR3VhcmRpYW5zPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUKCQkJCQkJcnVsaW5nIGNsYXNzIGluIFBsYXRvJ3MgSWRlYWwgU3RhdGUsPGJpYmwgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFJlcC4gMzc1YyIgdmFsaWQ9InllcyI+UGxhdC4gUmVwLgoJCQkJCQkJMzc1YzwvYmlibD4uPC9ub3RlPuKAlHRoZXkgc2hvdWxkIGJlIGFmZmVjdGlvbmF0ZSB0byB0aGVpcgoJCQkJCWZyaWVuZHMgYnV0IGZpZXJjZSB0b3dhcmRzIHN0cmFuZ2Vyc+KAlGl0IGlzIHNwaXJpdCB0aGF0IGNhdXNlcwoJCQkJCWFmZmVjdGlvbmF0ZW5lc3MsIGZvciBzcGlyaXQgaXMgdGhlIGNhcGFjaXR5IG9mIHRoZSBzb3VsIHdoZXJlYnkgd2UgbG92ZS4KCQkJCQkJPG1pbGVzdG9uZSBuPSIxMzI4YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iNi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QSBzaWduIG9mIHRoaXMgaXMKCQkJCQl0aGF0IHNwaXJpdCBpcyBtb3JlIHJvdXNlZCBhZ2FpbnN0IGFzc29jaWF0ZXMgYW5kIGZyaWVuZHMgdGhhbiBhZ2FpbnN0CgkJCQkJc3RyYW5nZXJzLCB3aGVuIGl0IHRoaW5rcyBpdHNlbGYgc2xpZ2h0ZWQuIFRoZXJlZm9yZSBBcmNoaWxvY2h1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QXJjaGlsb2NodXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEwMjMiIGtleT0idGduLDcwMTEwMjMiPlBhcm9zPC9wbGFjZU5hbWU+IO+8iG9uZSBvZiB0aGUgZWFybGllc3QgbHlyaWMgcG9ldHMsIGZsLiA8ZGF0ZSBhdXRobmFtZT0iLTYwMCIgdmFsdWU9Ii02MDAiPjYwMDwvZGF0ZT4gQi5DLiwgdGhlIGludmVudG9yIG9mIHRoZSBpYW1iaWMgbWV0ZXIsIHdoaWNoIGhlCgkJCQkJCXVzZWQgZm9yIGxhbXBvb25z77yJLCBmci4gNjEgQmVyZ2ssIDY3NiBEaWVobCwgNjcKCQkJCQkJCUVkbW9uZHMsPHRpdGxlPkVsZWd5IGFuZCBJYW1idXM8L3RpdGxlPiwgMi4gMTMzLjwvbm90ZT4gZm9yIGluc3RhbmNlLAoJCQkJCXdoZW4gcmVwcm9hY2hpbmcgaGlzIGZyaWVuZHMsIGFwcHJvcHJpYXRlbHkgYXBvc3Ryb3BoaXplcyBoaXMgc3Bpcml0OiA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9Imx5cmljIj5Gb3IgJ3RpcyB0aHkgZnJpZW5kcyB0aGF0IG1ha2UgdGhlZSBjaG9rZSB3aXRoIHJhZ2UuPC9sPgoJCQkJCTwvcXVvdGU+IE1vcmVvdmVyIGl0IGlzIGZyb20gdGhpcyBmYWN1bHR5IHRoYXQgcG93ZXIgdG8gY29tbWFuZCBhbmQgbG92ZSBvZgoJCQkJCWZyZWVkb20gYXJlIGluIGFsbCBjYXNlcyBkZXJpdmVkOyBmb3Igc3Bpcml0IGlzIGEgY29tbWFuZGluZyBhbmQgaW5kb21pdGFibGUKCQkJCQllbGVtZW50LiBCdXQgaXQgaXMgYSBtaXN0YWtlIHRvIGRlc2NyaWJlIHRoZSBHdWFyZGlhbnMgYXMgY3J1ZWwgdG93YXJkcwoJCQkJCXN0cmFuZ2VyczsgaXQgaXMgbm90IHJpZ2h0IHRvIGJlIGNydWVsIHRvd2FyZHMgYW55Ym9keSwgYW5kIG1lbiBvZiBncmVhdC1zb3VsZWQKCQkJCQluYXR1cmUgYXJlIG5vdCBmaWVyY2UgZXhjZXB0IHRvd2FyZHMgd3Jvbmdkb2VycywgYW5kIHRoZWlyIGFuZ2VyIGlzIHN0aWxsCgkJCQkJZmllcmNlciBhZ2FpbnN0IHRoZWlyIGNvbXBhbmlvbnMgaWYgdGhleSB0aGluayB0aGF0IHRoZXNlIGFyZSB3cm9uZ2luZyB0aGVtLCBhcwoJCQkJCWhhcyBiZWVuIHNhaWQgYmVmb3JlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI2LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhpcyBpcwoJCQkJCXJlYXNvbmFibGUsIGJlY2F1c2UgdGhleSB0aGluayB0aGF0IGluIGFkZGl0aW9uIHRvIHRoZSBoYXJtIGRvbmUgdGhlbSB0aGV5IGFyZQoJCQkJCWFsc28gYmVpbmcgZGVmcmF1ZGVkIG9mIGEgYmVuZWZpdCBieSBwZXJzb25zIHdob20gdGhleSBiZWxpZXZlIHRvIG93ZSB0aGVtIG9uZS4KCQkJCQlIZW5jZSB0aGUgc2F5aW5ncyA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9Imx5cmljIj5Gb3IgYnJvdGhlcnMnIHdhcnMgYXJlIGNydWVsLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgZGVmYXVsdD0iTk8iIG49IkV1ci4gRnIuIDk2NSI+RXVyLiBmcmFnLgoJCQkJCQkJOTY1PC9iaWJsPi48L25vdGU+PC9sPgoJCQkJCTwvcXVvdGU+IGFuZCA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9ImlhbWJpYyI+VGhleSB0aGF0IHRvbyBkZWVwbHkgbG92ZWQgdG9vIGRlZXBseSBoYXRlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCQkJPGJpYmwgZGVmYXVsdD0iTk8iIG49IkV1ci4gRnIuIDc4Ij5OYXVjayBmcmFnLiA3ODwvYmlibD4KCQkJCQkJCTwvbm90ZT48L2w+CgkJCQkJPC9xdW90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlIGhhdmUgbm93IGFwcHJveGltYXRlbHkgZGVjaWRlZCB3aGF0IGFyZSB0aGUKCQkJCQlwcm9wZXIgbnVtYmVycyBhbmQgdGhlIG5hdHVyYWwgcXVhbGl0aWVzIG9mIHRob3NlIHdobyBleGVyY2lzZSB0aGUgcmlnaHQgb2YKCQkJCQljaXRpemVucywgYW5kIHRoZSBwcm9wZXIgZXh0ZW50IGFuZCBuYXR1cmUgb2YgdGhlIHRlcnJpdG9yeSDvvIhmb3Igd2UKCQkJCQltdXN0IG5vdDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+c2VlayB0byBhdHRhaW4gdGhlIHNhbWUKCQkJCQlleGFjdG5lc3MgYnkgbWVhbnMgb2YgdGhlb3JldGljYWwgZGlzY3Vzc2lvbnMgYXMgaXMgb2J0YWluZWQgYnkgbWVhbnMgb2YgdGhlCgkJCQkJZmFjdHMgdGhhdCBjb21lIHRvIHVzIHRocm91Z2ggc2Vuc2UtcGVyY2VwdGlvbnPvvIkuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgc2luY2UsIGp1c3QgYXMKCQkJCQl3aXRoIGFsbCBvdGhlciBuYXR1cmFsIG9yZ2FuaXNtcyB0aG9zZSB0aGluZ3MgdGhhdCBhcmUgaW5kaXNwZW5zYWJsZSBmb3IgdGhlCgkJCQkJZXhpc3RlbmNlIG9mIHRoZSB3aG9sZSBhcmUgbm90IHBhcnRzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuCgkJCQkJCXRoZXkgYXJlIG5vdCA8ZW1waD5hbGwgb2YgdGhlbTwvZW1waD5wYXJ0czogdGhlIOKAmHBhcnRz4oCZCgkJCQkJCW9mIGEgdGhpbmcgYXJlIGFtb25nIHRoZSDigJhpbmRpc3BlbnNhYmxlIGNvbmRpdGlvbnPigJkgb2YKCQkJCQkJaXRzIGV4aXN0ZW5jZSwgYnV0IHRoZXJlIGFyZSBvdGhlcnMgYWxzby48L25vdGU+IG9mIHRoZSB3aG9sZSBvcmdhbml6YXRpb24sCgkJCQkJaXQgaXMgYWxzbyBjbGVhciB0aGF0IG5vdCBhbGwgdGhlIHRoaW5ncyB0aGF0IGFyZSBuZWNlc3NhcnkgZm9yIHN0YXRlcyB0bwoJCQkJCXBvc3Nlc3MgYXJlIHRvIGJlIGNvdW50ZWQgYXMgcGFydHMgb2YgYSBzdGF0ZSDvvIhhbnkgbW9yZSB0aGFuIHRoaXMgaXMgc28KCQkJCQl3aXRoIGFueSBvdGhlciBhc3NvY2lhdGlvbiB0aGF0IGZvcm1zIHNvbWV0aGluZyBvbmUgaW4ga2luZCwgZm9yIHRoZXJlIG11c3QgYmUKCQkJCQlzb21ldGhpbmcgdGhhdCBpcyBvbmUgYW5kIGNvbW1vbiBhbmQgdGhlIHNhbWUgZm9yIHRoZSBwYXJ0bmVycywgd2hldGhlciB0aGUKCQkJCQlzaGFyZXMgdGhhdCB0aGV5IHRha2UgYmUgZXF1YWwgb3IgdW5lcXVhbDogZm9yIGV4YW1wbGUgdGhpcyBjb21tb24gcHJvcGVydHkgbWF5CgkJCQkJYmUgZm9vZCBvciBhbiBhcmVhIG9mIGxhbmQgb3Igc29tZXRoaW5nIGVsc2Ugb2YgdGhlIHNhbWUgc29ydOKAlDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHNlbnRlbmNlIGlzIHVuZmluaXNoZWQuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjcuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCB3aGVuIG9mIHR3byByZWxhdGVkIHRoaW5ncyBvbmUKCQkJCQlpcyBhIG1lYW5zIGFuZCB0aGUgb3RoZXIgYW4gZW5kLCBpbiB0aGVpciBjYXNlIHRoZXJlIGlzIG5vdGhpbmcgaW4gY29tbW9uIGV4Y2VwdAoJCQkJCWZvciB0aGUgb25lIHRvIGFjdCBhbmQgdGhlIG90aGVyIHRvIHJlY2VpdmUgdGhlIGFjdGlvbi4gSSBtZWFuIGZvciBpbnN0YW5jZSB0aGUKCQkJCQlyZWxhdGlvbiBiZXR3ZWVuIGFueSBpbnN0cnVtZW50IG9yIGFydGlmaWNlciBhbmQgdGhlIHdvcmsgdGhhdCB0aGV5IHByb2R1Y2U6CgkJCQkJYmV0d2VlbiBhIGhvdXNlIGFuZCBhIGJ1aWxkZXIgdGhlcmUgaXMgbm90aGluZyB0aGF0IGlzIHByb2R1Y2VkIGluIGNvbW1vbiwgYnV0CgkJCQkJdGhlIGJ1aWxkZXIncyBjcmFmdCBleGlzdHMgZm9yIHRoZSBzYWtlIG9mIHRoZSBob3VzZS4gSGVuY2UgYWx0aG91Z2ggc3RhdGVzIG5lZWQKCQkJCQlwcm9wZXJ0eSwgdGhlIHByb3BlcnR5IGlzIG5vIHBhcnQgb2YgdGhlIHN0YXRlLiBBbmQgdGhlcmUgYXJlIG1hbnkgbGl2aW5nIHRoaW5ncwoJCQkJCXRoYXQgZmFsbCB1bmRlciB0aGUgaGVhZCBvZiBwcm9wZXJ0eS48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBvc3NpYmx5IHRoZSB3b3JkcyBmcm9tIHRoZSBiZWdpbm5pbmcgb2YgNy4yIOKAmEJ1dCB3aGVu4oCZCgkJCQkJCXRvIHRoaXMgcG9pbnQgc2hvdWxkIGJlIHRyYW5zZmVycmVkIGJlbG93IHRvIDcuMyBtaWQuIGFmdGVyCgkJCQkJCeKAmGRpZmZlcmVudCBjb25zdGl0dXRpb25zLuKAmTwvbm90ZT4gQW5kIHRoZSBzdGF0ZSBpcyBvbmUKCQkJCQlmb3JtIG9mIHBhcnRuZXJzaGlwIG9mIHNpbWlsYXIgcGVvcGxlLCBhbmQgaXRzIG9iamVjdCBpcyB0aGUgYmVzdCBsaWZlIHRoYXQgaXMKCQkJCQlwb3NzaWJsZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHNpbmNlIHRoZSBncmVhdGVzdAoJCQkJCWdvb2QgaXMgaGFwcGluZXNzLCBhbmQgdGhpcyBpcyBzb21lIHBlcmZlY3QgYWN0aXZpdHkgb3IgZW1wbG95bWVudCBvZiB2aXJ0dWUsCgkJCQkJYW5kIHNpbmNlIGl0IGhhcyBzbyBjb21lIGFib3V0IHRoYXQgaXQgaXMgcG9zc2libGUgZm9yIHNvbWUgbWVuIHRvIHBhcnRpY2lwYXRlCgkJCQkJaW4gaXQsIGJ1dCBmb3Igb3RoZXJzIG9ubHkgdG8gYSBzbWFsbCBleHRlbnQgb3Igbm90IGF0IGFsbCwgaXQgaXMgY2xlYXIgdGhhdAoJCQkJCXRoaXMgaXMgdGhlIGNhdXNlIGZvciB0aGVyZSBhcmlzaW5nIGRpZmZlcmVudCBraW5kcyBhbmQgdmFyaWV0aWVzIG9mIHN0YXRlIGFuZAoJCQkJCXNldmVyYWwgZm9ybXMgb2YgY29uc3RpdHV0aW9uOyA8bWlsZXN0b25lIG49IjEzMjhiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5mb3IgYXMgZWFjaCBzZXQgb2YgcGVvcGxlIHB1cnN1ZXMKCQkJCQlwYXJ0aWNpcGF0aW9uIGluIGhhcHBpbmVzcyBpbiBhIGRpZmZlcmVudCBtYW5uZXIgYW5kIGJ5IGRpZmZlcmVudCBtZWFucyB0aGV5CgkJCQkJbWFrZSBmb3IgdGhlbXNlbHZlcyBkaWZmZXJlbnQgbW9kZXMgb2YgbGlmZSBhbmQgZGlmZmVyZW50IGNvbnN0aXR1dGlvbnMuIEFuZCB3ZQoJCQkJCW11c3QgYWxzbyBmdXJ0aGVyIGNvbnNpZGVyIGhvdyBtYW55IHRoZXJlIGFyZSBvZiB0aGVzZSB0aGluZ3MgcmVmZXJyZWQgdG8gdGhhdAoJCQkJCWFyZSBpbmRpc3BlbnNhYmxlIGZvciB0aGUgZXhpc3RlbmNlIG9mIGEgc3RhdGU7IGZvciBhbW9uZyB0aGVtIHdpbGwgYmUgdGhlCgkJCQkJdGhpbmdzIHdoaWNoIHdlIHByb25vdW5jZSB0byBiZSBwYXJ0cyBvZiBhIHN0YXRlLCBvd2luZyB0byB3aGljaCB0aGVpciBwcmVzZW5jZQoJCQkJCWlzIGVzc2VudGlhbC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy40IiB1bml0PSJMb2ViIGNoYXAiIC8+V2UgbXVzdCB0aGVyZWZvcmUKCQkJCQljb25zaWRlciB0aGUgbGlzdCBvZiBvY2N1cGF0aW9ucyB0aGF0IGEgc3RhdGUgcmVxdWlyZXMgOiBmb3IgZnJvbSB0aGVzZSBpdCB3aWxsCgkJCQkJYXBwZWFyIHdoYXQgdGhlIGluZGlzcGVuc2FibGUgY2xhc3NlcyBhcmUuIEZpcnN0IHRoZW4gYSBzdGF0ZSBtdXN0IGhhdmUgYSBzdXBwbHkKCQkJCQlvZiBmb29kOyBzZWNvbmRseSwgaGFuZGljcmFmdHMg77yIc2luY2UgbGlmZSBuZWVkcyBtYW55IHRvb2xz77yJOwoJCQkJCXRoaXJkLCBhcm1zIO+8iHNpbmNlIHRoZSBtZW1iZXJzIG9mIHRoZSBhc3NvY2lhdGlvbiBtdXN0IG5lY2Vzc2FyaWx5CgkJCQkJcG9zc2VzcyBhcm1zIGJvdGggdG8gdXNlIGFtb25nIHRoZW1zZWx2ZXMgYW5kIGZvciBwdXJwb3NlcyBvZiBnb3Zlcm5tZW50LCBpbgoJCQkJCWNhc2VzIG9mIGluc3Vib3JkaW5hdGlvbiwgYW5kIHRvIGVtcGxveSBhZ2FpbnN0IHRob3NlIHdobyB0cnkgdG8gbW9sZXN0IHRoZW0KCQkJCQlmcm9tIHdpdGhvdXTvvIk7IGFsc28gYSBjZXJ0YWluIGFidW5kYW5jZSBvZiBtb25leSwgaW4gb3JkZXIgdGhhdCB0aGV5CgkJCQkJbWF5IGhhdmUgZW5vdWdoIGJvdGggZm9yIHRoZWlyIGludGVybmFsIG5lZWRzIGFuZCBmb3IgcmVxdWlyZW1lbnRzIG9mIHdhcjsKCQkJCQlmaWZ0aCwgYSBwcmltYXJ5IG5lZWQsIHRoZSBzZXJ2aWNlIG9mIHJlbGlnaW9uLCB0ZXJtZWQgYSBwcmllc3Rob29kOyBhbmQgc2l4dGgKCQkJCQlpbiBudW1iZXIgYW5kIG1vc3QgbmVjZXNzYXJ5IG9mIGFsbCwgYSBwcm92aXNpb24gZm9yIGRlY2lkaW5nIHF1ZXN0aW9ucyBvZgoJCQkJCWludGVyZXN0cyBhbmQgb2YgcmlnaHRzIGJldHdlZW4gdGhlIGNpdGl6ZW5zLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVzZSB0aGVuIGFyZSB0aGUgb2NjdXBhdGlvbnMgdGhhdCB2aXJ0dWFsbHkgZXZlcnkgc3RhdGUKCQkJCQlyZXF1aXJlcyDvvIhmb3IgdGhlIHN0YXRlIGlzIG5vdCBhbnkgY2hhbmNlIG11bHRpdHVkZSBvZiBwZW9wbGUgYnV0IG9uZQoJCQkJCXNlbGYtc3VmZmljaWVudCBmb3IgdGhlIG5lZWRzIG9mIGxpZmUsIGFzIHdlIHNheSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiBCb29rcyAyLjEuNywgMy4xLjgsIDUuMi4xMC48L25vdGU+IGFuZCBpZiBhbnkgb2YgdGhlc2UKCQkJCQlpbmR1c3RyaWVzIGhhcHBlbnMgdG8gYmUgd2FudGluZywgaXQgaXMgaW1wb3NzaWJsZSBmb3IgdGhhdCBhc3NvY2lhdGlvbiB0byBiZQoJCQkJCWFic29sdXRlbHkgc2VsZi1zdWZmaWNpZW5077yJLiBJdCBpcyBuZWNlc3NhcnkgdGhlcmVmb3JlIGZvciB0aGUgc3RhdGUgdG8KCQkJCQliZSBvcmdhbml6ZWQ8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm9uIHRoZSBsaW5lcyBvZiB0aGVzZQoJCQkJCWZ1bmN0aW9uczsgY29uc2VxdWVudGx5IGl0IG11c3QgcG9zc2VzcyBhIG51bWJlciBvZiBmYXJtZXJzIHdobyB3aWxsIHByb3ZpZGUgdGhlCgkJCQkJZm9vZCwgYW5kIGNyYWZ0c21lbiwgYW5kIHRoZSBtaWxpdGFyeSBjbGFzcywgYW5kIHRoZSB3ZWFsdGh5LCBhbmQgcHJpZXN0cyBhbmQKCQkJCQlqdWRnZXMgdG8gZGVjaWRlIHF1ZXN0aW9ucyBvZiBuZWNlc3NpdHk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdGhlIHRleHQgc2hvdWxkIGJlIGFsdGVyZWQgdG8gZ2l2ZSDigJhtYXR0ZXJzIG9mCgkJCQkJCWp1c3RpY2Uu4oCZPC9ub3RlPiBhbmQgb2YgaW50ZXJlc3RzLjxtaWxlc3RvbmUgZWQ9IlAiIG49IjguMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlc2UgbWF0dGVycyBoYXZpbmcgYmVlbgoJCQkJCXNldHRsZWQsIGl0IHJlbWFpbnMgdG8gY29uc2lkZXIgd2hldGhlciBldmVyeWJvZHkgaXMgdG8gdGFrZSBwYXJ0IGluIGFsbCBvZgoJCQkJCXRoZXNlIGZ1bmN0aW9ucyDvvIhmb3IgaXQgaXMgcG9zc2libGUgZm9yIHRoZSB3aG9sZSBvZiB0aGUgcGVvcGxlIHRvIGJlCgkJCQkJYXQgb25jZSBmYXJtZXJzIGFuZCBjcmFmdHNtZW4gYW5kIHRoZSBjb3VuY2lsbG9ycyBhbmQganVkZ2Vz77yJLCBvcgoJCQkJCXdoZXRoZXIgd2UgYXJlIHRvIGFzc3VtZSBkaWZmZXJlbnQgY2xhc3NlcyBjb3JyZXNwb25kaW5nIHRvIGVhY2ggb2YgdGhlCgkJCQkJZnVuY3Rpb25zIG1lbnRpb25lZCwgb3Igd2hldGhlciBzb21lIG9mIHRoZW0gbXVzdCBuZWNlc3NhcmlseSBiZSBzcGVjaWFsaXplZCBhbmQKCQkJCQlvdGhlcnMgY29tYmluZWQuIEJ1dCBpdCB3aWxsIG5vdCBiZSB0aGUgc2FtZSBpbiBldmVyeSBmb3JtIG9mIGNvbnN0aXR1dGlvbjsgZm9yLAoJCQkJCWFzIHdlIHNhaWQsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gQm9vayA0LjQgYW5kIDE0Ljwvbm90ZT4gaXQgaXMKCQkJCQlwb3NzaWJsZSBlaXRoZXIgZm9yIGFsbCB0aGUgcGVvcGxlIHRvIHRha2UgcGFydCBpbiBhbGwgdGhlIGZ1bmN0aW9ucyBvciBmb3Igbm90CgkJCQkJYWxsIHRvIHRha2UgcGFydCBpbiBhbGwgYnV0IGZvciBjZXJ0YWluIHBlb3BsZSB0byBoYXZlIGNlcnRhaW4gZnVuY3Rpb25zLiBJbgoJCQkJCWZhY3QgdGhlc2UgZGlmZmVyZW50IGRpc3RyaWJ1dGlvbnMgb2YgZnVuY3Rpb25zIGFyZSB0aGUgY2F1c2Ugb2YgdGhlIGRpZmZlcmVuY2UKCQkJCQliZXR3ZWVuIGNvbnN0aXR1dGlvbnM6IGRlbW9jcmFjaWVzIGFyZSBzdGF0ZXMgaW4gd2hpY2ggYWxsIHRoZSBwZW9wbGUKCQkJCQlwYXJ0aWNpcGF0ZSBpbiBhbGwgdGhlIGZ1bmN0aW9ucywgb2xpZ2FyY2hpZXMgd2hlcmUgdGhlIGNvbnRyYXJ5IGlzIHRoZSBjYXNlLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSI4LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgYXQgcHJlc2VudCB3ZSBhcmUgc3R1ZHlpbmcKCQkJCQl0aGUgYmVzdCBjb25zdGl0dXRpb24sIGFuZCB0aGlzIGlzIHRoZSBjb25zdGl0dXRpb24gdW5kZXIgd2hpY2ggdGhlIHN0YXRlIHdvdWxkCgkJCQkJYmUgbW9zdCBoYXBweSwgYW5kIGl0IGhhcyBiZWVuIHN0YXRlZCBiZWZvcmU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjEuNS48L25vdGU+IHRoYXQgaGFwcGluZXNzIGNhbm5vdCBiZSBmb3J0aGNvbWluZyB3aXRob3V0IHZpcnR1ZTsgaXQgaXMKCQkJCQl0aGVyZWZvcmUgY2xlYXIgZnJvbSB0aGVzZSBjb25zaWRlcmF0aW9ucyB0aGF0IGluIHRoZSBtb3N0IG5vYmx5IGNvbnN0aXR1dGVkCgkJCQkJc3RhdGUsIGFuZCB0aGUgb25lIHRoYXQgcG9zc2Vzc2VzIG1lbiB0aGF0IGFyZSBhYnNvbHV0ZWx5IGp1c3QsIG5vdCBtZXJlbHkganVzdAoJCQkJCXJlbGF0aXZlbHkgdG8gdGhlIHByaW5jaXBsZSB0aGF0IGlzIHRoZSBiYXNpcyBvZiB0aGUgY29uc3RpdHV0aW9uLCB0aGUgY2l0aXplbnMKCQkJCQltdXN0IG5vdCBsaXZlIGEgbWVjaGFuaWMgb3IgYSBtZXJjYW50aWxlIGxpZmUg77yIZm9yIHN1Y2ggYSBsaWZlIGlzCgkJCQkJaWdub2JsZSBhbmQgaW5pbWljYWwgdG8gdmlydHVl77yJLCBub3IgeWV0IG11c3QgdGhvc2Ugd2hvIGFyZSB0byBiZQoJCQkJCWNpdGl6ZW5zIGluIHRoZSBiZXN0IHN0YXRlIGJlIHRpbGxlcnMgb2YgdGhlIHNvaWwgPG1pbGVzdG9uZSBuPSIxMzI5YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+77yIZm9yCgkJCQkJbGVpc3VyZSBpcyBuZWVkZWQgYm90aCBmb3IgdGhlIGRldmVsb3BtZW50IG9mIHZpcnR1ZSBhbmQgZm9yIGFjdGl2ZQoJCQkJCXBhcnRpY2lwYXRpb24gaW4gcG9saXRpY3PvvIkuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjguMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzaW5jZSB0aGUgc3RhdGUgYWxzbyBjb250YWlucyB0aGUgbWlsaXRhcnkgY2xhc3MgYW5kIHRoZSBjbGFzcyB0aGF0CgkJCQkJZGVsaWJlcmF0ZXMgYWJvdXQgbWF0dGVycyBvZiBwb2xpY3kgYW5kIGp1ZGdlcyBxdWVzdGlvbnMgb2YganVzdGljZSwgYW5kIHRoZXNlCgkJCQkJYXJlIG1hbmlmZXN0bHkgaW4gYSBzcGVjaWFsIHNlbnNlIHBhcnRzIG9mIHRoZSBzdGF0ZSwgYXJlIHRoZXNlIGNsYXNzZXMgYWxzbyB0bwoJCQkJCWJlIHNldCBkb3duIGFzIGRpc3RpbmN0IG9yIGFyZSBib3RoIGZ1bmN0aW9ucyB0byBiZSBhc3NpZ25lZCB0byB0aGUgc2FtZQoJCQkJCXBlcnNvbnM/IEJ1dCBoZXJlIGFsc28gdGhlIGFuc3dlciBpcyBjbGVhciwgYmVjYXVzZSBpbiBhIGNlcnRhaW4gc2Vuc2UgdGhleQoJCQkJCXNob3VsZCBiZSBhc3NpZ25lZCB0byB0aGUgc2FtZSBwZXJzb25zLCBidXQgaW4gYSBjZXJ0YWluIHNlbnNlIHRvIGRpZmZlcmVudAoJCQkJCW9uZXMuIEluYXNtdWNoIGFzIGVhY2ggb2YgdGhlc2UgdHdvIGZ1bmN0aW9ucyBiZWxvbmdzIHRvIGEgZGlmZmVyZW50IHByaW1lIG9mCgkJCQkJbGlmZSwgYW5kIG9uZSByZXF1aXJlcyB3aXNkb20sIHRoZSBvdGhlciBzdHJlbmd0aCwgdGhleSBhcmUgdG8gYmUgYXNzaWduZWQgdG8KCQkJCQlkaWZmZXJlbnQgcGVvcGxlOyBidXQgaW5hc211Y2ggYXMgaXQgaXMgYSB0aGluZyBpbXBvc3NpYmxlIHRoYXQgd2hlbiBhIHNldCBvZgoJCQkJCW1lbiBhcmUgYWJsZSB0byBlbXBsb3kgZm9yY2UgYW5kIHRvIHJlc2lzdCBjb250cm9sLCB0aGVzZSBzaG91bGQgc3VibWl0IGFsd2F5cwoJCQkJCXRvIGJlIHJ1bGVkLCBmcm9tIHRoaXMgcG9pbnQgb2YgdmlldyBib3RoIGZ1bmN0aW9ucyBtdXN0IGJlIGFzc2lnbmVkIHRvIHRoZSBzYW1lCgkJCQkJcGVvcGxlOyBmb3IgdGhvc2Ugd2hvIGhhdmUgdGhlIHBvd2VyIG9mIGFybXMgaGF2ZSB0aGUgcG93ZXIgdG8gZGVjaWRlIHdoZXRoZXIKCQkJCQl0aGUgY29uc3RpdHV0aW9uIHNoYWxsIHN0YW5kIG9yIGZhbGwuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjguNCIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSBvbmx5IGNvdXJzZSBsZWZ0IHRoZW0gaXMgdG8gYXNzaWduIHRoaXMgY29uc3RpdHV0aW9uYWwgZnVuY3Rpb24gdG8gYm90aAoJCQkJCXNldHMgb2YgbWVuIHdpdGhvdXQgZGlzdGluY3Rpb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciwgYW1lbmRpbmcKCQkJCQkJdGhpcyBjdXJpb3VzIEdyZWVrLCDigJhmb3IgdGhlIGNvbnN0aXR1dGlvbiB0byBhc3NpZ24gYm90aCB0aGVzZQoJCQkJCQlmdW5jdGlvbnMgdG8gdGhlIHNhbWUgcGVvcGxlLuKAmTwvbm90ZT4geWV0IG5vdCBzaW11bHRhbmVvdXNseSwgYnV0LAoJCQkJCWFzIGluIHRoZSBuYXR1cmFsIG9yZGVyIG9mIHRoaW5ncyBzdHJlbmd0aCBpcyBmb3VuZCBpbiB0aGUgeW91bmdlciBtZW4gYW5kCgkJCQkJd2lzZG9tIGluIHRoZSBlbGRlciwgaXQgc2VlbXMgdG8gYmUgZXhwZWRpZW50IGFuZCBqdXN0IGZvciB0aGVpciBmdW5jdGlvbnMgdG8gYmUKCQkJCQlhbGxvdHRlZCB0byBib3RoIGluIHRoaXMgd2F5LCBmb3IgdGhpcyBtb2RlIG9mIGRpdmlzaW9uIHBvc3Nlc3NlcyBjb25mb3JtaXR5CgkJCQkJd2l0aCBtZXJpdC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iOC41IiB1bml0PSJMb2ViIGNoYXAiIC8+TW9yZW92ZXIgdGhlIG93bmVyc2hpcAoJCQkJCW9mIHByb3BlcnRpZXMgYWxzbyBtdXN0IGJlIGNlbnRlcmVkIHJvdW5kIHRoZXNlIGNsYXNzZXMsIGZvciB0aGUgY2l0aXplbnMgbXVzdAoJCQkJCW5lY2Vzc2FyaWx5IHBvc3Nlc3MgcGxlbnRpZnVsIG1lYW5zLCBhbmQgdGhlc2UgYXJlIHRoZSBjaXRpemVucy4gRm9yCgkJCQkJCXRoZTxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YXJ0aXNhbiBjbGFzcyBoYXMgbm8gc2hhcmUgaW4KCQkJCQl0aGUgc3RhdGUsIG5vciBoYXMgYW55IG90aGVyIGNsYXNzIHRoYXQgaXMgbm90IOKAmGFuIGFydGlmaWNlciBvZgoJCQkJCQl2aXJ0dWUu4oCZPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIFBsYXRvbmljIHBocmFzZSwKCQkJCQkJCTxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBSZXAuIDUwMGQiIHZhbGlkPSJ5ZXMiPlBsYXQuIFJlcC4gNTAwZDwvYmlibD4uPC9ub3RlPiBBbmQgdGhpcyBpcwoJCQkJCWNsZWFyIGZyb20gb3VyIGJhc2ljIHByaW5jaXBsZTsgZm9yIGluIGNvbmp1bmN0aW9uIHdpdGggdmlydHVlIGhhcHBpbmVzcyBpcwoJCQkJCWJvdW5kIHRvIGJlIGZvcnRoY29taW5nLCBidXQgd2Ugc2hvdWxkIHByb25vdW5jZSBhIHN0YXRlIGhhcHB5IGhhdmluZyByZWdhcmQgbm90CgkJCQkJdG8gYSBwYXJ0aWN1bGFyIHNlY3Rpb24gb2YgaXQgYnV0IHRvIGFsbCBpdHMgY2l0aXplbnMuIEFuZCBpdCBpcyBhbHNvIG1hbmlmZXN0CgkJCQkJdGhhdCB0aGUgcHJvcGVydGllcyBtdXN0IGJlbG9uZyB0byB0aGVzZSBjbGFzc2VzLCBpbmFzbXVjaCBhczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QXMgdGhpcyBpcyBhIG5ldyBwb2ludCwgcGVyaGFwcyB3ZSBzaG91bGQKCQkJCQkJdHJhbnNwb3NlIOKAmGluYXNtdWNoIGFz4oCZIO+8iCA8Zm9yZWlnbiBsYW5nPSJncmVlayI+zrXhvLTPgM61z4E8L2ZvcmVpZ24+77yJIGFuZCDigJh0aGF04oCZIO+8iAoJCQkJCQkJPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPuG9hc+Ezrk8L2ZvcmVpZ24+77yJIGluIHRoZSBsaW5lCgkJCQkJCWFib3ZlLjwvbm90ZT4gaXQgaXMgbmVjZXNzYXJ5IGZvciB0aGUgdGlsbGVycyBvZiB0aGUgc29pbCB0byBiZSBzbGF2ZXMsIG9yCgkJCQkJc2VyZnMgb2YgYWxpZW4gcmFjZS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iOC42IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmUgcmVtYWlucwoJCQkJCW9mIHRoZSBsaXN0IGVudW1lcmF0ZWQgdGhlIGNsYXNzIG9mIHByaWVzdHM7IGFuZCB0aGUgcG9zaXRpb24gb2YgdGhpcyBjbGFzcyBhbHNvCgkJCQkJaXMgbWFuaWZlc3QuIFByaWVzdHMgbXVzdCBiZSBhcHBvaW50ZWQgbmVpdGhlciBmcm9tIHRoZSB0aWxsZXJzIG9mIHRoZSBzb2lsIG5vcgoJCQkJCWZyb20gdGhlIGFydGlzYW5zLCBmb3IgaXQgaXMgc2VlbWx5IHRoYXQgdGhlIGdvZHMgc2hvdWxkIGJlIHdvcnNoaXBwZWQgYnkKCQkJCQljaXRpemVuczsgYW5kIHNpbmNlIHRoZSBjaXRpemVuIGJvZHkgaXMgZGl2aWRlZCBpbnRvIHR3byBwYXJ0cywgdGhlIG1pbGl0YXJ5CgkJCQkJY2xhc3MgYW5kIHRoZSBjb3VuY2lsbG9yIGNsYXNzLCBhbmQgYXMgaXQgaXMgc2VlbWx5IHRoYXQgdGhvc2Ugd2hvIGhhdmUKCQkJCQlyZWxpbnF1aXNoZWQgdGhlc2UgZHV0aWVzIG93aW5nIHRvIGFnZSBzaG91bGQgcmVuZGVyIHRvIHRoZSBnb2RzIHRoZWlyIGR1ZQoJCQkJCXdvcnNoaXAgYW5kIHNob3VsZCBzcGVuZCB0aGVpciByZXRpcmVtZW50IGluIHRoZWlyIHNlcnZpY2UsIGl0IGlzIHRvIHRoZXNlIHRoYXQKCQkJCQl0aGUgcHJpZXN0bHkgb2ZmaWNlcyBzaG91bGQgYmUgYXNzaWduZWQuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBoYXZlCgkJCQkJdGhlcmVmb3JlIHN0YXRlZCB0aGUgdGhpbmdzIGluZGlzcGVuc2FibGUgZm9yIHRoZSBjb25zdGl0dXRpb24gb2YgYSBzdGF0ZSwgYW5kCgkJCQkJdGhlIHRoaW5ncyB0aGF0IGFyZSBwYXJ0cyBvZiBhIHN0YXRlOiB0aWxsZXJzIG9mIHRoZSBzb2lsLCBjcmFmdHNtZW4gYW5kIHRoZQoJCQkJCWxhYm9yaW5nIGNsYXNzIGdlbmVyYWxseSBhcmUgYSBuZWNlc3NhcnkgYXBwdXJ0ZW5hbmNlIG9mIHN0YXRlcywgYnV0IHRoZQoJCQkJCW1pbGl0YXJ5IGFuZCBkZWxpYmVyYXRpdmUgY2xhc3NlcyBhcmUgcGFydHMgb2YgdGhlIHN0YXRlOyBhbmQgbW9yZW92ZXIgZWFjaCBvZgoJCQkJCXRoZXNlIGRpdmlzaW9ucyBpcyBzZXBhcmF0ZSBmcm9tIHRoZSBvdGhlcnMsIGVpdGhlciBwZXJtYW5lbnRseSBvciBieSB0dXJuLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGUg4oCYYXBwdXJ0ZW5hbmNlc+KAmQoJCQkJCQlhcmUgcGVybWFuZW50bHkgc2VwYXJhdGUgZm9ybSB0aGUgYXJteSBhbmQgdGhlIGRlbGliZXJhdGl2ZSwgd2hpY2ggYXJlIHRoZQoJCQkJCQnigJhwYXJ0cyzigJkgYW5kIHdoaWNoIGFyZSBzZXBhcmF0ZSBmcm9tIGVhY2ggb3RoZXIgb25seQoJCQkJCQnigJhieSB0dXJuLOKAmSBpLmUuIGEgY2l0aXplbiBwYXNzZXMgb24gZnJvbSBvbmUgdG8gdGhlCgkJCQkJCW90aGVyLjwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZAoJCQkJCXRoYXQgaXQgaXMgcHJvcGVyIGZvciB0aGUgc3RhdGUgdG8gYmUgZGl2aWRlZCB1cCBpbnRvIGNhc3RlcyBhbmQgZm9yIHRoZQoJCQkJCW1pbGl0YXJ5IGNsYXNzIHRvIGJlIGRpc3RpbmN0IGZyb20gdGhhdCBvZiB0aGUgdGlsbGVycyBvZiB0aGUgc29pbCA8bWlsZXN0b25lIG49IjEzMjliIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5kb2VzIG5vdAoJCQkJCXNlZW0gdG8gYmUgYSBkaXNjb3Zlcnkgb2YgcG9saXRpY2FsIHBoaWxvc29waGVycyBvZiB0b2RheSBvciBvbmUgbWFkZQoJCQkJCQlyZWNlbnRseS48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdG8gYmUgcmVhZCBhcyBkZW55aW5nCgkJCQkJCXRoZSBvcmlnaW5hbGl0eSBvZiBQbGF0bydzPHRpdGxlPlJlcHVibGljPC90aXRsZT4uPC9ub3RlPiBJbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjgzMyIga2V5PSJ0Z24sNzAxNjgzMyI+RWd5cHQ8L3BsYWNlTmFtZT4gdGhpcyBhcnJhbmdlbWVudCBzdGlsbCBleGlzdHMgZXZlbiBub3csCgkJCQkJYXMgYWxzbyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMjA1NiIga2V5PSJ0Z24sNzAxMjA1NiI+Q3JldGU8L3BsYWNlTmFtZT47IGl0IGlzIHNhaWQgdG8gaGF2ZQoJCQkJCWJlZW4gZXN0YWJsaXNoZWQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGtleT0idGduLDcwMTY4MzMiPkVneXB0PC9wbGFjZU5hbWU+IGJ5IHRoZQoJCQkJCWxlZ2lzbGF0aW9uIG9mIFNlc29zdHJpcyBhbmQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIwNTYiIGtleT0idGduLDcwMTIwNTYiPkNyZXRlPC9wbGFjZU5hbWU+CgkJCQkJYnkgdGhhdCBvZiBNaW5vcy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iOS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+Q29tbW9uIG1lYWxzIGFsc28KCQkJCQlzZWVtIHRvIGJlIGFuIGFuY2llbnQgaW5zdGl0dXRpb24sIHRob3NlIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBrZXk9InRnbiw3MDEyMDU2Ij5DcmV0ZTwvcGxhY2VOYW1lPiBoYXZpbmcgYmVndW4gaW4gdGhlIHJlaWduIG9mIE1pbm9zLCB3aGlsZSB0aG9zZSBpbgoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA4MCIga2V5PSJ0Z24sMTAwMDA4MCI+SXRhbHk8L3BsYWNlTmFtZT4gYXJlIG11Y2ggb2xkZXIgdGhhbiB0aGVzZS4KCQkJCQlBY2NvcmRpbmcgdG8gdGhlIGhpc3RvcmlhbnMgb25lIG9mIHRoZSBzZXR0bGVycyB0aGVyZSwgYSBjZXJ0YWluIEl0YWx1cywgYmVjYW1lCgkJCQkJa2luZyBvZiBPZW5vdHJpYSwgYW5kIGZyb20gaGltIHRoZXkgdG9vayB0aGUgbmFtZSBvZiBJdGFsaWFucyBpbnN0ZWFkIG9mIHRoYXQgb2YKCQkJCQlPZW5vdHJpYW5zLCBhbmQgdGhlIG5hbWUgb2YgSXRhbHkgd2FzIGdpdmVuIHRvIGFsbCB0aGF0IHByb21vbnRvcnk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIHNvdXRoLXdlc3QgcGVuaW5zdWxhIG9yIHRvZSBvZgoJCQkJCQlJdGFseS48L25vdGU+IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDAzIiBrZXk9InRnbiwxMDAwMDAzIj5FdXJvcGU8L3BsYWNlTmFtZT4gbHlpbmcKCQkJCQliZXR3ZWVuIHRoZSBHdWxmcyBvZiBTY3lsbGV0aXVtIGFuZCBvZiBMYW1ldHVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGUgR3VsZnMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDQyOTQiIGtleT0idGduLDcwMDQyOTQiPlNxdWlsbGFjZTwvcGxhY2VOYW1lPiBhbmQgRXVmZW1pYS48L25vdGU+IHdoaWNoIGFyZSBoYWxmIGEgZGF5J3MKCQkJCQlqb3VybmV5IGFwYXJ0LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JdCB3YXMgdGhpcyBJdGFsdXMKCQkJCQl0aGVuIHdobyBhY2NvcmRpbmcgdG8gdHJhZGl0aW9uIGNvbnZlcnRlZCB0aGUgT2Vub3RyaWFucyBmcm9tIGEgcGFzdG9yYWwgbGlmZSB0bwoJCQkJCW9uZSBvZiBhZ3JpY3VsdHVyZSBhbmQgZ2F2ZSB0aGVtIHZhcmlvdXMgb3JkaW5hbmNlcywgYmVpbmcgdGhlIGZpcnN0IHRvCgkJCQkJaW5zdGl0dXRlIHRoZWlyIHN5c3RlbSBvZiBjb21tb24gbWVhbHM7IGhlbmNlIHRoZSBjb21tb24gbWVhbHMgYW5kIHNvbWUgb2YgaGlzCgkJCQkJbGF3cyBhcmUgc3RpbGwgb2JzZXJ2ZWQgYnkgY2VydGFpbiBvZiBoaXMgc3VjY2Vzc29ycyBldmVuIHRvZGF5LiBUaGUgc2V0dGxlcnMgaW4KCQkJCQl0aGUgZGlyZWN0aW9uIG9mIFR5cnJoZW5pYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIG1vZGVybgoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDk3NjAiIGtleT0idGduLDcwMDk3NjAiPlR1c2Nhbnk8L3BsYWNlTmFtZT4sIGkuZS4gdGhlIHBlb3BsZSBvZgoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDQ2MTAiIGtleT0idGduLDcwMDQ2MTAiPkx1Y2FuaWE8L3BsYWNlTmFtZT4sIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAzMDA1IiBrZXk9InRnbiw3MDAzMDA1Ij5DYW1wYW5pYTwvcGxhY2VOYW1lPiBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDMwODAiIGtleT0idGduLDcwMDMwODAiPkxhdGl1bTwvcGxhY2VOYW1lPi48L25vdGU+IHdlcmUgT3BpY2Fucywgd2hvIHRvZGF5IGFzIGluIGZvcm1lciB0aW1lcwoJCQkJCWJlYXIgdGhlIHN1cm5hbWUgb2Y8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPkF1c29uaWFuczsgdGhlCgkJCQkJcmVnaW9uIHRvd2FyZHMgSWFweWdpYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHNvdXRoLWVhc3QKCQkJCQkJcHJvbW9udG9yeSBvciBoZWVsIG9mIEl0YWx5Ljwvbm90ZT4gYW5kIHRoZSBJb25pYW4gR3VsZiwgY2FsbGVkIFN5cnRpcywgd2FzCgkJCQkJaW5oYWJpdGVkIGJ5IHRoZSBDaG9uZXMsIHdobyBhbHNvIHdlcmUgT2Vub3RyaWFucyBieSByYWNlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JdCBpcyBmcm9tIHRoaXMgY291bnRyeSB0aGF0IHRoZSBzeXN0ZW0gb2YgY29tbW9uCgkJCQkJbWVhbHMgaGFzIGl0cyBvcmlnaW4sIHdoaWxlIHRoZSBkaXZpc2lvbiBvZiB0aGUgY2l0aXplbi1ib2R5IGJ5IGhlcmVkaXRhcnkgY2FzdGUKCQkJCQljYW1lIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGtleT0idGduLDcwMTY4MzMiPkVneXB0PC9wbGFjZU5hbWU+LCBmb3IgdGhlIHJlaWduIG9mCgkJCQkJU2Vzb3N0cmlzIGxvbmcgYW50ZWRhdGVzIHRoYXQgb2YgTWlub3MuIFdlIG1heSBhbG1vc3QgdGFrZSBpdCB0aGVyZWZvcmUgdGhhdCBhbGwKCQkJCQlvdGhlciBwb2xpdGljYWwgZGV2aWNlcyBhbHNvIGhhdmUgYmVlbiBkaXNjb3ZlcmVkIHJlcGVhdGVkbHksIG9yIHJhdGhlciBhbgoJCQkJCWluZmluaXRlIG51bWJlciBvZiB0aW1lcyBvdmVyLCBpbiB0aGUgbGFwc2Ugb2YgYWdlczsgZm9yIHRoZSBkaXNjb3ZlcmllcyBvZiBhCgkJCQkJbmVjZXNzYXJ5IGtpbmQgYXJlIHByb2JhYmx5IHRhdWdodCBieSBuZWVkIGl0c2VsZiwgYW5kIHdoZW4gdGhlIG5lY2Vzc2FyaWVzIGhhdmUKCQkJCQliZWVuIHByb3ZpZGVkIGl0IGlzIHJlYXNvbmFibGUgdGhhdCB0aGluZ3MgY29udHJpYnV0aW5nIHRvIHJlZmluZW1lbnQgYW5kIGx1eHVyeQoJCQkJCXNob3VsZCBmaW5kIHRoZWlyIGRldmVsb3BtZW50OyBzbyB0aGF0IHdlIG11c3QgYXNzdW1lIHRoYXQgdGhpcyBpcyB0aGUgd2F5IHdpdGgKCQkJCQlwb2xpdGljYWwgaW5zdGl0dXRpb25zIGFsc28uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZQoJCQkJCWFudGlxdWl0eSBvZiBhbGwgb2YgdGhlbSBpcyBpbmRpY2F0ZWQgYnkgdGhlIGhpc3Rvcnkgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGtleT0idGduLDcwMTY4MzMiPkVneXB0PC9wbGFjZU5hbWU+OyBmb3IgdGhlIEVneXB0aWFucyBhcmUgcmVwdXRlZCB0byBiZSB0aGUKCQkJCQlvbGRlc3Qgb2YgbmF0aW9ucywgYnV0IHRoZXkgaGF2ZSBhbHdheXMgaGFkIGxhd3MgYW5kIGEgcG9saXRpY2FsIHN5c3RlbS4gSGVuY2UKCQkJCQl3ZSBzaG91bGQgdXNlIHRoZSByZXN1bHRzIG9mIHByZXZpb3VzIGRpc2NvdmVyeSB3aGVuIGFkZXF1YXRlLCB3aGlsZSBlbmRlYXZvcmluZwoJCQkJCXRvIGludmVzdGlnYXRlIG1hdHRlcnMgaGl0aGVydG8gcGFzc2VkIG92ZXIuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdAoJCQkJCWhhcyBiZWVuIHN0YXRlZCBiZWZvcmUgdGhhdCB0aGUgbGFuZCBvdWdodCB0byBiZSBvd25lZCBieSB0aG9zZSB3aG8gcG9zc2VzcyBhcm1zCgkJCQkJYW5kIHRob3NlIHdobyBzaGFyZSB0aGUgcmlnaHRzIG9mIHRoZSBjb25zdGl0dXRpb24sIGFuZCB3aHkgdGhlIGN1bHRpdmF0b3JzCgkJCQkJb3VnaHQgdG8gYmUgYSBkaWZmZXJlbnQgY2FzdGUgZnJvbSB0aGVzZSwgYW5kIHdoYXQgaXMgdGhlIHByb3BlciBleHRlbnQgYW5kCgkJCQkJY29uZm9ybWF0aW9uIG9mIHRoZSBjb3VudHJ5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5XZSBoYXZlCgkJCQkJbm93IHRvIGRpc2N1c3MgZmlyc3QgdGhlIGFsbG90bWVudCBvZiB0aGUgbGFuZCwgYW5kIHRoZSBwcm9wZXIgY2xhc3MgYW5kCgkJCQkJY2hhcmFjdGVyIG9mIGl0cyBjdWx0aXZhdG9yczsgc2luY2Ugd2UgYWR2b2NhdGUgbm90IGNvbW1vbiBvd25lcnNoaXAgb2YgbGFuZCwgYXMKCQkJCQlzb21lIGhhdmUgZG9uZSwgPG1pbGVzdG9uZSBuPSIxMzMwYSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+YnV0IGNvbW11bml0eSBpbiBpdCBicm91Z2h0IGFib3V0IGluIGEgZnJpZW5kbHkgd2F5CgkJCQkJYnkgdGhlIHVzZSBvZiBpdCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgdmFndWUgcGhyYXNlCgkJCQkJCe+8iGJhc2VkIG9uIHRoZSBwcm92ZXJiIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7Ous6/zrnOveG9sCDPhOG9sCDPhOG/ts69CgkJCQkJCQnPhuG9t867z4nOvTwvZm9yZWlnbj4sIOKAmGZyaWVuZHMnIGdvb2RzIGFyZSBjb21tb24KCQkJCQkJcHJvcGVydHnigJnvvIkgc2VlbXMgdG8gZGVub3RlIHNvbWUgc29ydCBvZiBjdXN0b21hcnkKCQkJCQkJY29tbXVuaXNtIGluIHRoZSBjdWx0aXZhdGlvbiBvZiB0aGUgbGFuZCBhbmQgZW5qb3ltZW50IG9mIHRoZSBwcm9kdWNlLAoJCQkJCQljb21iaW5lZCB3aXRoIHByaXZhdGUgb3duZXJzaGlwIG9mIHRoZSBmcmVlaG9sZC48L25vdGU+IGFuZCB3ZSBob2xkIHRoYXQgbm8KCQkJCQljaXRpemVuIHNob3VsZCBiZSBpbGwgc3VwcGxpZWQgd2l0aCBtZWFucyBvZiBzdWJzaXN0ZW5jZS4gQXMgdG8gY29tbW9uIG1lYWxzLAoJCQkJCWFsbCBhZ3JlZSB0aGF0IHRoaXMgaXMgYW4gaW5zdGl0dXRpb24gYWR2YW50YWdlb3VzIGZvciB3ZWxsLW9yZ2FuaXplZCBzdGF0ZXMgdG8KCQkJCQlwb3NzZXNzOyBvdXIgb3duIHJlYXNvbnMgZm9yIHNoYXJpbmcgdGhpcyB2aWV3IHdlIHdpbGwgc3RhdGUgbGF0ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIHByb21pc2UgaXMgbm90IGZ1bGZpbGxlZC48L25vdGU+IEJ1dCB0aGUKCQkJCQljb21tb24gbWVhbHMgbXVzdCBiZSBzaGFyZWQgYnkgYWxsIHRoZSBjaXRpemVucywgYW5kIGl0IGlzIG5vdCBlYXN5IGZvciB0aGUgcG9vcgoJCQkJCXRvIGNvbnRyaWJ1dGUgdGhlaXIgYXNzZXNzZWQgc2hhcmUgZnJvbSB0aGVpciBwcml2YXRlIG1lYW5zIGFuZCBhbHNvIHRvIG1haW50YWluCgkJCQkJdGhlaXIgaG91c2Vob2xkIGFzIHdlbGwuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjkuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZAoJCQkJCW1vcmVvdmVyIHRoZSBleHBlbnNlcyBjb25uZWN0ZWQgd2l0aCByZWxpZ2lvbiBhcmUgdGhlIGNvbW1vbiBjb25jZXJuIG9mIHRoZQoJCQkJCXdob2xlIHN0YXRlLiBJdCBpcyBuZWNlc3NhcnkgdGhlcmVmb3JlIGZvciB0aGUgbGFuZCB0byBiZSBkaXZpZGVkIGludG8gdHdvCgkJCQkJcGFydHMsIG9mIHdoaWNoIG9uZSBtdXN0IGJlIGNvbW1vbiBhbmQgdGhlIG90aGVyIHRoZSBwcml2YXRlIHByb3BlcnR5IG9mCgkJCQkJaW5kaXZpZHVhbHM7IGFuZCBlYWNoIG9mIHRoZXNlIHR3byBkaXZpc2lvbnMgbXVzdCBhZ2FpbiBiZSBkaXZpZGVkIGluIHR3by4gT2YKCQkJCQl0aGUgY29tbW9uIGxhbmQgb25lIHBvcnRpb24gc2hvdWxkIGJlIGFzc2lnbmVkIHRvIHRoZSBzZXJ2aWNlcyBvZiByZWxpZ2lvbiwgYW5kCgkJCQkJdGhlIG90aGVyIHRvIGRlZnJheSB0aGUgY29zdCBvZiB0aGUgY29tbW9uIG1lYWxzOyBvZiB0aGUgbGFuZCBpbiBwcml2YXRlCgkJCQkJb3duZXJzaGlwIG9uZSBwYXJ0IHNob3VsZCBiZSB0aGUgZGlzdHJpY3QgbmVhciB0aGUgZnJvbnRpZXJzLCBhbmQgYW5vdGhlciB0aGUKCQkJCQlkaXN0cmljdCBuZWFyIHRoZSBjaXR5LCBpbiBvcmRlciB0aGF0IHR3byBwbG90cyBtYXkgYmUgYXNzaWduZWQgdG8gZWFjaCBjaXRpemVuCgkJCQkJYW5kIGFsbCBtYXkgaGF2ZSBhIHNoYXJlIGluIGJvdGggZGlzdHJpY3RzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI5LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGlzIGFycmFuZ2VtZW50IHNhdGlzZmllcyBlcXVpdHkgYW5kIGp1c3RpY2UsIGFuZCBhbHNvCgkJCQkJY29uZHVjZXMgdG8gZ3JlYXRlciB1bmFuaW1pdHkgaW4gZmFjaW5nIGJvcmRlciB3YXJmYXJlLiBXaGVyZSB0aGlzIHN5c3RlbSBpcyBub3QKCQkJCQlmb2xsb3dlZCwgb25lIHNldCBvZiBwZW9wbGUgYXJlIHJlY2tsZXNzIGFib3V0IHF1YXJyZWxsaW5nIHdpdGggdGhlIG5laWdoYm9yaW5nCgkJCQkJCXN0YXRlcyw8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZCB0aGUgb3RoZXIgc2V0IGFyZSB0b28KCQkJCQljYXV0aW91cyBhbmQgbmVnbGVjdCBjb25zaWRlcmF0aW9ucyBvZiBob25vci4gSGVuY2Ugc29tZSBwZW9wbGUgaGF2ZSBhIGxhdyB0aGF0CgkJCQkJdGhlIGNpdGl6ZW5zIHdob3NlIGxhbmQgaXMgbmVhciB0aGUgZnJvbnRpZXIgYXJlIG5vdCB0byB0YWtlIHBhcnQgaW4KCQkJCQlkZWxpYmVyYXRpb24gYXMgdG8gd2FycyBhZ2FpbnN0IG5laWdoYm9yaW5nIHN0YXRlcywgb24gdGhlIGdyb3VuZCB0aGF0IHByaXZhdGUKCQkJCQlpbnRlcmVzdCB3b3VsZCBwcmV2ZW50IHRoZW0gZnJvbSBiZWluZyBhYmxlIHRvIHRha2UgY291bnNlbCB3aXNlbHkuIFRoZSBsYW5kCgkJCQkJbXVzdCB0aGVyZWZvcmUgYmUgZGl2aWRlZCB1cCBpbiB0aGlzIG1hbm5lciBiZWNhdXNlIG9mIHRoZSByZWFzb25zCgkJCQkJCWFmb3Jlc2FpZC48bWlsZXN0b25lIGVkPSJQIiBuPSI5LjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRob3NlIHdobyBhcmUgdG8gY3VsdGl2YXRlIHRoZSBzb2lsIHNob3VsZCBiZXN0IG9mIGFsbCwgaWYgdGhlCgkJCQkJaWRlYWwgc3lzdGVtIGlzIHRvIGJlIHN0YXRlZCwgYmUgc2xhdmVzLCBub3QgZHJhd24gZnJvbSBwZW9wbGUgYWxsIG9mIG9uZSB0cmliZQoJCQkJCW5vciBvZiBhIHNwaXJpdGVkIGNoYXJhY3RlciDvvIhmb3IgdGh1cyB0aGV5IHdvdWxkIGJlIGJvdGggc2VydmljZWFibGUKCQkJCQlmb3IgdGhlaXIgd29yayBhbmQgc2FmZSB0byBhYnN0YWluIGZyb20gaW5zdXJyZWN0aW9u77yJLCBidXQgYXMgYSBzZWNvbmQKCQkJCQliZXN0IHRoZXkgc2hvdWxkIGJlIGFsaWVuIHNlcmZzIG9mIGEgc2ltaWxhciBuYXR1cmUuIE9mIHRoZXNlIGxhYm9yZXJzIHRob3NlIGluCgkJCQkJcHJpdmF0ZSBlbXBsb3ltZW50IG11c3QgYmUgYW1vbmcgdGhlIHByaXZhdGUgcG9zc2Vzc2lvbnMgb2YgdGhlIG93bmVycyBvZiB0aGUKCQkJCQllc3RhdGVzLCBhbmQgdGhvc2Ugd29ya2luZyBvbiB0aGUgY29tbW9uIGxhbmQgY29tbW9uIHByb3BlcnR5LiBIb3cgc2xhdmVzIHNob3VsZAoJCQkJCWJlIGVtcGxveWVkLCBhbmQgd2h5IGl0IGlzIGFkdmFudGFnZW91cyB0aGF0IGFsbCBzbGF2ZXMgc2hvdWxkIGhhdmUgdGhlaXIKCQkJCQlmcmVlZG9tIHNldCBiZWZvcmUgdGhlbSBhcyBhIHJld2FyZCwgd2Ugd2lsbCBzYXkgbGF0ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIHByb21pc2UgaXMgbm90IGZ1bGZpbGxlZC48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQKCQkJCQloYXMgYmVlbiBzYWlkIGJlZm9yZSB0aGF0IHRoZSBjaXR5IHNob3VsZCBzbyBmYXIgYXMgY2lyY3Vtc3RhbmNlcyBwZXJtaXQgYmUgaW4KCQkJCQljb21tdW5pY2F0aW9uIGFsaWtlIHdpdGggdGhlIG1haW5sYW5kLCB0aGUgc2VhIGFuZCB0aGUgd2hvbGUgb2YgaXRzIHRlcnJpdG9yeS4KCQkJCQlUaGUgc2l0ZSBvZiB0aGUgY2l0eSBpdHNlbGYgd2UgbXVzdCBwcmF5IHRoYXQgZm9ydHVuZSBtYXkgcGxhY2Ugb24gc2xvcGluZwoJCQkJCWdyb3VuZCwgaGF2aW5nIHJlZ2FyZCB0byBmb3VyIGNvbnNpZGVyYXRpb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BcHBhcmVudGx5IO+8iDHvvIkgZnJlc2ggYWlyLCDvvIgy77yJIHdhdGVyCgkJCQkJCXN1cHBseSwg77yIM++8iSBhZG1pbmlzdHJhdGlvbiwg77yINO+8iSBtaWxpdGFyeQoJCQkJCQlyZXF1aXJlbWVudHMuPC9ub3RlPjogZmlyc3QsIGFzIGEgdGhpbmcgZXNzZW50aWFsLCB0aGUgY29uc2lkZXJhdGlvbiBvZgoJCQkJCWhlYWx0aCDvvIhmb3IgY2l0aWVzIHdob3NlIHNpdGUgc2xvcGVzIGVhc3Qgb3IgdG93YXJkcyB0aGUgYnJlZXplcyB0aGF0CgkJCQkJYmxvdyBmcm9tIHRoZSBzdW5yaXNlIGFyZSBtb3JlIGhlYWx0aHksIGFuZCBpbiB0aGUgc2Vjb25kIGRlZ3JlZSB0aG9zZSB0aGF0IGZhY2UKCQkJCQlhd2F5IGZyb20gdGhlIG5vcnRoIHdpbmQsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5MaXRlcmFsbHksCgkJCQkJCeKAmGluIHRoZSBkaXJlY3Rpb24gaW4gd2hpY2ggdGhlIG5vcnRoIHdpbmQgYmxvd3Mu4oCZPC9ub3RlPgoJCQkJCWZvciB0aGVzZSBhcmUgbWlsZGVyIGluIHdpbnRlcu+8iTsgPG1pbGVzdG9uZSBuPSIxMzMwYiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBhbW9uZyB0aGUgcmVtYWluaW5nIGNvbnNpZGVyYXRpb25zLCBhIHNsb3Bpbmcgc2l0ZSBpcwoJCQkJCWZhdm9yYWJsZSBib3RoIGZvciBwb2xpdGljYWwgYW5kIGZvciBtaWxpdGFyeSBwdXJwb3Nlcy4gRm9yIG1pbGl0YXJ5IHB1cnBvc2VzCgkJCQkJdGhlcmVmb3JlIHRoZSBzaXRlIHNob3VsZCBiZSBlYXN5IG9mIGV4aXQgZm9yIHRoZSBjaXRpemVucyB0aGVtc2VsdmVzLCBhbmQKCQkJCQlkaWZmaWN1bHQgZm9yIHRoZSBhZHZlcnNhcnkgdG8gYXBwcm9hY2ggYW5kIHRvIGJsb2NrYWRlLCBhbmQgaXQgbXVzdCBwb3NzZXNzIGlmCgkJCQkJcG9zc2libGUgYSBwbGVudGlmdWwgbmF0dXJhbCBzdXBwbHkgb2YgcG9vbHMgYW5kIHNwcmluZ3MsIGJ1dCBmYWlsaW5nIHRoaXMsIGEKCQkJCQltb2RlIGhhcyBiZWVuIGludmVudGVkIG9mIHN1cHBseWluZyB3YXRlciBieSBtZWFucyBvZiBjb25zdHJ1Y3RpbmcgYW4gYWJ1bmRhbmNlCgkJCQkJb2YgbGFyZ2UgcmVzZXJ2b2lycyBmb3IgcmFpbi13YXRlciwgc28gdGhhdCBhIHN1cHBseSBtYXkgbmV2ZXIgZmFpbCB0aGUgY2l0aXplbnMKCQkJCQl3aGVuIHRoZXkgYXJlIGRlYmFycmVkIGZyb20gdGhlaXIgdGVycml0b3J5IGJ5IHdhci4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzaW5jZSB3ZSBoYXZlIHRvIGNvbnNpZGVyIHRoZSBoZWFsdGggb2YgdGhlCgkJCQkJaW5oYWJpdGFudHMsIGFuZCB0aGlzIGRlcGVuZHMgdXBvbiB0aGUgcGxhY2UgYmVpbmcgd2VsbCBzaXR1YXRlZCBib3RoIG9uIGhlYWx0aHkKCQkJCQlncm91bmQgYW5kIHdpdGggYSBoZWFsdGh5IGFzcGVjdCwgYW5kIHNlY29uZGx5IHVwb24gdXNpbmcgd2hvbGVzb21lCgkJCQkJd2F0ZXItc3VwcGxpZXMsIHRoZSBmb2xsb3dpbmcgbWF0dGVyIGFsc28gbXVzdCBiZSBhdHRlbmRlZCB0byBhcyBvZiBwcmltYXJ5CgkJCQkJaW1wb3J0YW5jZS4gVGhvc2UgdGhpbmdzIHdoaWNoIHdlIHVzZSBmb3IgdGhlIGJvZHkgaW4gdGhlIGxhcmdlc3QgcXVhbnRpdHksIGFuZAoJCQkJCW1vc3QgZnJlcXVlbnRseSwgY29udHJpYnV0ZSBtb3N0IHRvIGhlYWx0aDsgYW5kIHRoZSBpbmZsdWVuY2Ugb2YgdGhlCgkJCQkJd2F0ZXItc3VwcGx5IGFuZCBvZiB0aGUgYWlyIGlzIG9mIHRoaXMgbmF0dXJlLiBIZW5jZSBpbiB3aXNlIGNpdGllcyBpZiBhbGwgdGhlCgkJCQkJc291cmNlcyBvZiB3YXRlciBhcmUgbm90IGVxdWFsbHkgcHVyZSBhbmQgdGhlcmUgaXMgbm90IGFuIGFidW5kYW5jZSBvZiBzdWl0YWJsZQoJCQkJCXNwcmluZ3MsIHRoZSB3YXRlci1zdXBwbGllcyBmb3IgZHJpbmtpbmcgbXVzdCBiZSBrZXB0IHNlcGFyYXRlIGZyb20gdGhvc2UgZm9yCgkJCQkJb3RoZXIgcmVxdWlyZW1lbnRzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMC40IiB1bml0PSJMb2ViIGNoYXAiIC8+QXMgdG8gZm9ydGlmaWVkCgkJCQkJcG9zaXRpb25zLCB3aGF0IGlzIGV4cGVkaWVudCBpcyBub3QgdGhlIHNhbWUgZm9yIGFsbCBmb3JtcyBvZiBjb25zdGl0dXRpb24KCQkJCQlhbGlrZTsgZm9yIGV4YW1wbGUsIGEgY2l0YWRlbC1oaWxsIGlzIHN1aXRhYmxlIGZvciBvbGlnYXJjaHkgYW5kCgkJCQkJCW1vbmFyY2h5LDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIGEgbGV2ZWwgc2l0ZSBmb3IKCQkJCQlkZW1vY3JhY3k7IG5laXRoZXIgaXMgZmF2b3JhYmxlIHRvIGFuIGFyaXN0b2NyYWN5LCBidXQgcmF0aGVyIHNldmVyYWwgc3Ryb25nCgkJCQkJcG9zaXRpb25zLiBUaGUgYXJyYW5nZW1lbnQgb2YgdGhlIHByaXZhdGUgZHdlbGxpbmdzIGlzIHRob3VnaHQgdG8gYmUgbW9yZQoJCQkJCWFncmVlYWJsZSBhbmQgbW9yZSBjb252ZW5pZW50IGZvciBnZW5lcmFsIHB1cnBvc2VzIGlmIHRoZXkgYXJlIGxhaWQgb3V0IGluCgkJCQkJc3RyYWlnaHQgc3RyZWV0cywgYWZ0ZXIgdGhlIG1vZGVybiBmYXNoaW9uLCB0aGF0IGlzLCB0aGUgb25lIGludHJvZHVjZWQgYnkKCQkJCQkJSGlwcG9kYW11czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIEJvb2sgMi41Ljwvbm90ZT47IGJ1dCBpdAoJCQkJCWlzIG1vcmUgc3VpdGFibGUgZm9yIHNlY3VyaXR5IGluIHdhciBpZiBpdCBpcyBvbiB0aGUgY29udHJhcnkgcGxhbiwgYXMgY2l0aWVzCgkJCQkJdXNlZCB0byBiZSBpbiBhbmNpZW50IHRpbWVzOyBmb3IgdGhhdCBhcnJhbmdlbWVudCBpcyBkaWZmaWN1bHQgZm9yIGZvcmVpZ24KCQkJCQkJdHJvb3BzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGFuIGVuZW15J3MgbWVyY2VuYXJpZXM7IGJ1dAoJCQkJCQl0aGUgTVNTLiBnaXZlIOKAmGRpZmZpY3VsdCBmb3IgZm9yZWlnbiB0cm9vcHMgdG8gbWFrZSBzb3J0aWVzIGZyb20KCQkJCQkJW2kuZS4gcHJlc3VtYWJseSB0byBmaW5kIHRoZWlyIHdheSBvdXQgd2hlbiBvbmNlIHRoZXkgaGF2ZSBnb3QgaW4sCgkJCQkJCWNmLiA8YmlibCBkZWZhdWx0PSJOTyIgbj0iVGh1Yy4gMi40LjIiIHZhbGlkPSJ5ZXMiPlRodWMuIDIuNC4yPC9iaWJsPl0gYW5kIGZvciBhdHRhY2tlcnMgdG8KCQkJCQkJZmluZCB0aGVpciB3YXkgYWJvdXQgaW4u4oCZPC9ub3RlPiB0byBlbnRlciBhbmQgdG8gZmluZCB0aGVpciB3YXkKCQkJCQlhYm91dCBpbiB3aGVuIGF0dGFja2luZy4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTAuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlIGl0CgkJCQkJaXMgd2VsbCB0byBjb21iaW5lIHRoZSBhZHZhbnRhZ2VzIG9mIGJvdGggcGxhbnMg77yIZm9yIHRoaXMgaXMgcG9zc2libGUKCQkJCQlpZiB0aGUgaG91c2VzIGFyZSBsYWlkIG91dCBpbiB0aGUgd2F5IHdoaWNoIGFtb25nIHRoZSBmYXJtZXJzIHNvbWUgcGVvcGxlIGNhbGwKCQkJCQnigJhvbiB0aGUgc2xhbnTigJk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBSb21hbgoJCQkJCQkJPGVtcGg+cXVpbmN1bng8L2VtcGg+LCBlYWNoIHBsYW50IG9mIG9uZSByb3cgYmVpbmcgaW4gbGluZSB3aXRoIHRoZSBnYXAKCQkJCQkJYmV0d2VlbiB0d28gcGxhbnRzIG9mIHRoZSBuZXh0IHJvdywgdGh1czo8L25vdGU+IGluIHRoZSBjYXNlIG9mCgkJCQkJdmluZXPvvIksIGFuZCBub3QgdG8gbGF5IG91dCB0aGUgd2hvbGUgY2l0eSBpbiBzdHJhaWdodCBzdHJlZXRzLCBidXQgb25seQoJCQkJCWNlcnRhaW4gcGFydHMgYW5kIGRpc3RyaWN0cywgZm9yIGluIHRoaXMgd2F5IGl0IHdpbGwgY29tYmluZSBzZWN1cml0eSB3aXRoCgkJCQkJCWJlYXV0eS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFzIHJlZ2FyZHMgd2FsbHMsIHRob3NlIHdobyBhdmVyIHRoYXQKCQkJCQljaXRpZXMgd2hpY2ggcHJldGVuZCB0byB2YWxvciBzaG91bGQgbm90IGhhdmUgdGhlbSBob2xkIHRvbyBvbGQtZmFzaGlvbmVkIGEKCQkJCQl2aWV34oCUYW5kIHRoYXQgdGhvdWdoIHRoZXkgc2VlIHRoYXQgdGhlIGNpdGllcyB0aGF0IGluZHVsZ2UgaW4gdGhhdAoJCQkJCWZvcm0gb2YgdmFuaXR5IGFyZSByZWZ1dGVkIGJ5IGV4cGVyaWVuY2UuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEwLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JdCBpcyB0cnVlIHRoYXQgYWdhaW5zdCBhbiBldmVubHkgbWF0Y2hlZCBmb2UgYW5kIG9uZQoJCQkJCWxpdHRsZSBzdXBlcmlvciBpbiBudW1iZXJzIGl0IGlzIG5vdCBob25vcmFibGUgdG8gdHJ5IHRvIHNlY3VyZSBvbmVzZWxmIGJ5IHRoZQoJCQkJCXN0cmVuZ3RoIG9mIG9uZSdzIGZvcnRpZmljYXRpb25zOyBidXQgYXMgaXQgZG9lcyBhbmQgbWF5IGhhcHBlbiB0aGF0IHRoZQoJCQkJCXN1cGVyaW9yIG51bWJlcnMgb2YgdGhlIGF0dGFja2VycyBtYXkgYmUgdG9vIG11Y2ggZm9yIHRoZSBodW1hbiB2YWxvciBvZiBhIHNtYWxsCgkJCQkJZm9yY2UsIGlmIHRoZSBjaXR5IGlzIHRvIHN1cnZpdmUgYW5kIG5vdCB0byBzdWZmZXIgZGlzYXN0ZXIgb3IgaW5zdWx0LCB0aGUKCQkJCQlzZWN1cmVzdCBmb3J0aWZpY2F0aW9uIG9mIHdhbGxzIG11c3QgYmUgZGVlbWVkIHRvIGJlIHRoZSBtb3N0IHdhcmxpa2UsCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTMzMWEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnBhcnRpY3VsYXJseSBpbiB2aWV3IG9mIHRoZSBpbnZlbnRpb25zIHRoYXQgaGF2ZSBub3cgYmVlbiBtYWRlCgkJCQkJaW4gdGhlIGRpcmVjdGlvbiBvZiBwcmVjaXNpb24gd2l0aCBtaXNzaWxlcyBhbmQgYXJ0aWxsZXJ5IGZvciBzaWVnZXMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEwLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5UbyBjbGFpbSBub3QgdG8gZW5jb21wYXNzIGNpdGllcyB3aXRoCgkJCQkJd2FsbHMgaXMgbGlrZSBkZXNpcmluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyBhIHdvcmQgc2hvdWxkCgkJCQkJCWJlIGFkZGVkIHRvIHRoZSBHcmVlayBnaXZpbmcg4oCYZGVzaXJpbmcgdG8gbWFrZSB0aGUgY291bnRyeSBlYXN5IHRvCgkJCQkJCWludmFkZSwgYW5kIHRvIHN0cmlwIGl04oCU4oCZLjwvbm90ZT4gdGhlIGNvdW50cnkgdG8gYmUgZWFzeQoJCQkJCXRvIGludmFkZSBhbmQgc3RyaXBwaW5nIGl0IG9mIGhpbGx5IHJlZ2lvbnMsIGFuZCBzaW1pbGFybHkgbm90IHN1cnJvdW5kaW5nIGV2ZW4KCQkJCQlwcml2YXRlIGR3ZWxsaW5ncyB3aXRoIGhvdXNlLXdhbGxzIG9uIHRoZSBncm91bmQgdGhhdCB0aGUgaW5oYWJpdGFudHMgd2lsbCBiZQoJCQkJCWNvd2FyZGx5LiBBbm90aGVyIHBvaW50IG1vcmVvdmVyIHRoYXQgbXVzdCBub3QgYmUgZm9yZ290dGVuIGlzIHRoYXQgdGhvc2Ugd2hvCgkJCQkJaGF2ZSB3YWxscyByb3VuZCB0aGUgY2l0eSBjYW4gdXNlIHRoZWlyIGNpdGllcyBpbiBib3RoIHdheXMsIGJvdGggYXMgd2FsbGVkCgkJCQkJY2l0aWVzIGFuZCBhcyBvcGVuIG9uZXMsIHdoZXJlYXMgY2l0aWVzIG5vdCBwb3NzZXNzaW5nIHdhbGxzIGNhbm5vdCBiZSB1c2VkIGluCgkJCQkJYm90aCB3YXlzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMC44IiB1bml0PSJMb2ViIGNoYXAiIC8+SWYgdGhlbiB0aGlzIGlzIHNvLCBub3QKCQkJCQlvbmx5IG11c3Qgd2FsbHMgYmUgcHV0IHJvdW5kIGEgY2l0eSwgYnV0IGFsc28gYXR0ZW50aW9uIG11c3QgYmUgcGFpZCB0byB0aGVtIGluCgkJCQkJb3JkZXIgdGhhdCB0aGV5IG1heSBiZSBzdWl0YWJsZSBib3RoIGluIHJlZ2FyZCB0byB0aGUgYWRvcm5tZW50IG9mIHRoZSBjaXR5IGFuZAoJCQkJCWluIHJlc3BlY3Qgb2YgbWlsaXRhcnkgcmVxdWlyZW1lbnRzLCBlc3BlY2lhbGx5IHRoZSBuZXcgZGV2aWNlcyByZWNlbnRseQoJCQkJCWludmVudGVkLiBGb3IganVzdCBhcyB0aGUgYXR0YWNrZXJzIG9mIGEgY2l0eSBhcmUgY29uY2VybmVkIHRvIHN0dWR5IHRoZSBtZWFucwoJCQkJCWJ5IHdoaWNoIHRoZXkgY2FuIGdhaW4gdGhlIGFkdmFudGFnZSwgc28gYWxzbyBmb3IgdGhlIGRlZmVuZGVycyBzb21lIGRldmljZXMKCQkJCQloYXZlIGFscmVhZHkgYmVlbiBpbnZlbnRlZCBhbmQgb3RoZXJzIHRoZXkgbXVzdCBkaXNjb3ZlciBhbmQgdGhpbmsgb3V0OyBmb3IKCQkJCQlwZW9wbGUgZG8gbm90IGV2ZW4gc3RhcnQgYXR0ZW1wdGluZyB0byBhdHRhY2sgdGhvc2Ugd2hvIGFyZSB3ZWxsCgkJCQkJCXByZXBhcmVkLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHNpbmNlIHRoZSBtdWx0aXR1ZGUgb2YgY2l0aXplbnMKCQkJCQltdXN0IGJlIGRpc3RyaWJ1dGVkPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5pbiBzZXBhcmF0ZQoJCQkJCW1lc3NlcywgYW5kIHRoZSBjaXR5IHdhbGxzIG11c3QgYmUgZGl2aWRlZCB1cCBieSBndWFyZC1wb3N0cyBhbmQgdG93ZXJzIGluCgkJCQkJc3VpdGFibGUgcGxhY2VzLCBpdCBpcyBjbGVhciB0aGF0IHRoZXNlIGZhY3RzIHRoZW1zZWx2ZXMgY2FsbCBmb3Igc29tZSBvZiB0aGUKCQkJCQltZXNzZXMgdG8gYmUgb3JnYW5pemVkIGF0IHRoZXNlIGd1YXJkLXBvc3RzLiBUaGVzZSB0aGluZ3MgdGhlbiBtaWdodCBiZSBhcnJhbmdlZAoJCQkJCWluIHRoaXMgbWFubmVyLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGl0IGlzIGZpdHRpbmcKCQkJCQl0aGF0IHRoZSBkd2VsbGluZ3MgYXNzaWduZWQgdG8gdGhlIGdvZHMgYW5kIHRoZSBtb3N0IGltcG9ydGFudCBvZiB0aGUgb2ZmaWNpYWwKCQkJCQltZXNzZXMgc2hvdWxkIGhhdmUgYSBzdWl0YWJsZSBzaXRlLCBhbmQgdGhlIHNhbWUgZm9yIGFsbCwgZXhjZXB0aW5nIHRob3NlCgkJCQkJdGVtcGxlcyB3aGljaCBhcmUgYXNzaWduZWQgYSBzcGVjaWFsIHBsYWNlIGFwYXJ0IGJ5IHRoZSBsYXcgb3IgZWxzZSBieSBzb21lCgkJCQkJdXR0ZXJhbmNlIG9mIHRoZSBQeXRoaWFuIG9yYWNsZS4gQW5kIHRoZSBzaXRlIHdvdWxkIGJlIHN1aXRhYmxlIGlmIGl0IGlzIG9uZQoJCQkJCXRoYXQgaXMgc3VmZmljaWVudGx5IGNvbnNwaWN1b3VzIGluIHJlZ2FyZCB0byB0aGUgZXhjZWxsZW5jZSBvZiBpdHMgcG9zaXRpb24sCgkJCQkJYW5kIGFsc28gb2Ygc3VwZXJpb3Igc3RyZW5ndGggaW4gcmVnYXJkIHRvIHRoZSBhZGphY2VudCBwYXJ0cyBvZiB0aGUgY2l0eS4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTEuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IGlzIGNvbnZlbmllbnQgdGhhdCBiZWxvdwoJCQkJCXRoaXMgc2l0ZSBzaG91bGQgYmUgbGFpZCBvdXQgYW4gYWdvcmEgb2YgdGhlIGtpbmQgY3VzdG9tYXJ5IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBrZXk9InRnbiw3MDAxMzk5Ij5UaGVzc2FseTwvcGxhY2VOYW1lPiB3aGljaCB0aGV5IGNhbGwgYSBmcmVlIGFnb3JhLCB0aGF0CgkJCQkJaXMsIG9uZSB3aGljaCBoYXMgdG8gYmUga2VwdCBjbGVhciBvZiBhbGwgbWVyY2hhbmRpc2UgYW5kIGludG8gd2hpY2ggbm8gYXJ0aXNhbgoJCQkJCW9yIGZhcm1lciBvciBhbnkgb3RoZXIgc3VjaCBwZXJzb24gbWF5IGludHJ1ZGUgdW5sZXNzIHN1bW1vbmVkIGJ5IHRoZQoJCQkJCW1hZ2lzdHJhdGVzLiBJdCB3b3VsZCBnaXZlIGFtZW5pdHkgdG8gdGhlIHNpdGUgaWYgdGhlIGd5bW5hc2lhIG9mIHRoZSBvbGRlciBtZW4KCQkJCQl3ZXJlIGFsc28gc2l0dWF0ZWQgaGVyZeKAlGZvciBpdCBpcyBwcm9wZXIgdG8gaGF2ZSB0aGlzIGluc3RpdHV0aW9uIGFsc28KCQkJCQlkaXZpZGVkIGFjY29yZGluZyB0byBhZ2VzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3Ig4oCYZm9yCgkJCQkJCWluIHRoaXMgbm9ibGUgcHJhY3RpY2UgZGlmZmVyZW50IGFnZXMgc2hvdWxkIGJlIHNlcGFyYXRlZOKAmQoJCQkJCQnvvIhKb3dldHTvvIkuPC9ub3RlPiBhbmQgZm9yIGNlcnRhaW4gbWFnaXN0cmF0ZXMgdG8gcGFzcyB0aGVpcgoJCQkJCXRpbWUgYW1vbmcgdGhlIHlvdXRocyB3aGlsZSB0aGUgb2xkZXIgbWVuIHNwZW5kIHRoZWlycyB3aXRoIHRoZSBtYWdpc3RyYXRlczsgZm9yCgkJCQkJdGhlIHByZXNlbmNlIG9mIHRoZSBtYWdpc3RyYXRlcyBiZWZvcmUgbWVuJ3MgZXllcyBtb3N0IGVuZ2VuZGVycyB0cnVlIHJlc3BlY3QKCQkJCQlhbmQgYSBmcmVlbWFuJ3MgYXdlLiA8bWlsZXN0b25lIG49IjEzMzFiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5UaGUgYWdvcmEgZm9yIG1lcmNoYW5kaXNlIG11c3QgYmUgZGlmZmVyZW50IGZyb20KCQkJCQl0aGUgZnJlZSBhZ29yYSwgYW5kIGluIGFub3RoZXIgcGxhY2U7IGl0IG11c3QgaGF2ZSBhIHNpdGUgY29udmVuaWVudCBmb3IgdGhlCgkJCQkJY29sbGVjdGlvbiB0aGVyZSBvZiBhbGwgdGhlIGdvb2RzIHNlbnQgZnJvbSB0aGUgc2VhcG9ydCBhbmQgZnJvbSB0aGUgY291bnRyeS4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTEuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhcyB0aGUgZGl2aXNpb25zIG9mIHRoZQoJCQkJCXN0YXRlJ3MgcG9wdWxhY2UgaW5jbHVkZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUgR3JlZWsKCQkJCQkJc2hvdWxkIGJlIGFsdGVyZWQgdG8gPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs+E4b24IM+Az4HOv861z4PPhOG9uc+CPC9mb3JlaWduPiwKCQkJCQkJ4oCYYXMgdGhlIGdvdmVybmluZyBjbGFzcyBpcyBkaXZpZGVkIGludG8u4oCZPC9ub3RlPiBwcmllc3RzCgkJCQkJYW5kIG1hZ2lzdHJhdGVzLCBpdCBpcyBzdWl0YWJsZSB0aGF0IHRoZSBwcmllc3RzJyBtZXNzLXJvb21zIGFsc28gc2hvdWxkIGhhdmUKCQkJCQl0aGVpciBwb3NpdGlvbiByb3VuZCB0aGF0IG9mIHRoZSBzYWNyZWQgYnVpbGRpbmdzLiBBbmQgYWxsIHRoZSBtYWdpc3RyYWNpZXMgdGhhdAoJCQkJCXN1cGVyaW50ZW5kIGNvbnRyYWN0cywgYW5kIHRoZSByZWdpc3RyYXRpb24gb2YgYWN0aW9ucyBhdCBsYXcsIHN1bW1vbnNlcyBhbmQKCQkJCQlvdGhlciBzdWNoIG1hdHRlcnMgb2YgYWRtaW5pc3RyYXRpb24sIGFuZCBhbHNvIHRob3NlIHRoYXQgZGVhbCB3aXRoIHRoZSBjb250cm9sCgkJCQkJb2YgdGhlIG1hcmtldHMgYW5kIHdpdGggd2hhdCBpcyB0ZXJtZWQgcG9saWNpbmcgdGhlIGNpdHksIHNob3VsZCBoYXZlIGJ1aWxkaW5ncwoJCQkJCWFkamFjZW50IHRvIGFuIGFnb3JhIG9yIHNvbWUgcHVibGljIHBsYWNlIG9mIHJlc29ydCwgYW5kIHN1Y2ggYSBwbGFjZSBpcyB0aGUKCQkJCQluZWlnaGJvcmhvb2Qgb2YgdGhlIGJ1c2luZXNzIGFnb3JhLCBmb3Igd2UgYXNzaWduIHRoZSB1cHBlciBhZ29yYSBhcyB0aGUgcGxhY2UKCQkJCQlpbiB3aGljaCB0byBzcGVuZCBsZWlzdXJlLCBhbmQgdGhpcyBvbmUgZm9yIG5lY2Vzc2FyeSBidXNpbmVzcy48bWlsZXN0b25lIGVkPSJQIiBuPSIxMS40IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUKCQkJCQlhcnJhbmdlbWVudHMgaW4gdGhlIGNvdW50cnkgYWxzbyBzaG91bGQgY29weSB0aGUgcGxhbiBkZXNjcmliZWQ7IHRoZXJlIHRvbyB0aGUKCQkJCQltYWdpc3RyYXRlcyBjYWxsZWQgaW4gc29tZSBzdGF0ZXMgV2FyZGVucyBvZiB0aGUgV29vZHMgYW5kIGluIG90aGVycwoJCQkJCUxhbmQtc3VwZXJpbnRlbmRlbnRzIG11c3QgaGF2ZSB0aGVpciBndWFyZC1wb3N0cyBhbmQgbWVzcy1yb29tcyBmb3IgcGF0cm9sIGR1dHksCgkJCQkJYW5kIGFsc28gdGVtcGxlcyBtdXN0IGJlIGRpc3RyaWJ1dGVkIG92ZXIgdGhlIGNvdW50cnksIHNvbWUgZGVkaWNhdGVkIHRvIGdvZHMKCQkJCQlhbmQgc29tZSB0byBoZXJvZXMuIEJ1dCB0byBsaW5nZXIgYXQgdGhpcyBwb2ludCBvdmVyIHRoZSBkZXRhaWxlZCBzdGF0ZW1lbnQgYW5kCgkJCQkJZGlzY3Vzc2lvbiBvZiBxdWVzdGlvbnMgb2YgdGhpcyBraW5kIGlzIHdhc3RlIG9mIHRpbWUuPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5UaGUgZGlmZmljdWx0eSB3aXRoIHN1Y2ggdGhpbmdzIGlzIG5vdCBzbyBtdWNoIGluCgkJCQkJdGhlIG1hdHRlciBvZiB0aGVvcnkgYnV0IGluIHRoYXQgb2YgcHJhY3RpY2U7IHRvIGxheSBkb3duIHByaW5jaXBsZXMgaXMgYSB3b3JrCgkJCQkJb2YgYXNwaXJhdGlvbiwgYnV0IHRoZWlyIHJlYWxpemF0aW9uIGlzIHRoZSB0YXNrIG9mIGZvcnR1bmUuIEhlbmNlIHdlIHdpbGwKCQkJCQlyZWxpbnF1aXNoIGZvciB0aGUgcHJlc2VudCB0aGUgZnVydGhlciBjb25zaWRlcmF0aW9uIG9mIG1hdHRlcnMgb2YgdGhpcwoJCQkJCQlzb3J0LjxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlIG11c3Qgbm93IGRpc2N1c3MgdGhlIGNvbnN0aXR1dGlvbiBpdHNlbGYsIGFuZCBhc2sgd2hhdCBhbmQKCQkJCQlvZiB3aGF0IGNoYXJhY3RlciBzaG91bGQgYmUgdGhlIGNvbXBvbmVudHMgb2YgdGhlIHN0YXRlIHRoYXQgaXMgdG8gaGF2ZSBmZWxpY2l0eQoJCQkJCWFuZCBnb29kIGdvdmVybm1lbnQuIFRoZXJlIGFyZSB0d28gdGhpbmdzIGluIHdoaWNoIHRoZSB3ZWxmYXJlIG9mIGFsbCBtZW4KCQkJCQljb25zaXN0czogb25lIG9mIHRoZXNlIGlzIHRoZSBjb3JyZWN0IGVzdGFibGlzaG1lbnQgb2YgdGhlIGFpbSBhbmQgZW5kIG9mIHRoZWlyCgkJCQkJYWN0aW9ucywgdGhlIG90aGVyIHRoZSBhc2NlcnRhaW5tZW50IG9mIHRoZSBhY3Rpb25zIGxlYWRpbmcgdG8gdGhhdCBlbmQuCgkJCQkJ77yIRm9yIHRoZSBlbmQgcHJvcG9zZWQgYW5kIHRoZSBtZWFucyBhZG9wdGVkIG1heSBiZSBpbmNvbnNpc3RlbnQgd2l0aAoJCQkJCW9uZSBhbm90aGVyLCBhcyBhbHNvIHRoZXkgbWF5IGJlIGNvbnNpc3RlbnQ7IHNvbWV0aW1lcyB0aGUgYWltIGhhcyBiZWVuCgkJCQkJY29ycmVjdGx5IHByb3Bvc2VkLCBidXQgcGVvcGxlIGZhaWwgdG8gYWNoaWV2ZSBpdCBpbiBhY3Rpb24sIHNvbWV0aW1lcyB0aGV5CgkJCQkJYWNoaWV2ZSBhbGwgdGhlIG1lYW5zIHN1Y2Nlc3NmdWxseSBidXQgdGhlIGVuZCB0aGF0IHRoZXkgcG9zaXRlZCB3YXMgYSBiYWQgb25lLAoJCQkJCWFuZCBzb21ldGltZXMgdGhleSBlcnIgYXMgdG8gYm90aOKAlGZvciBpbnN0YW5jZSwgaW4gbWVkaWNpbmUKCQkJCQlwcmFjdGl0aW9uZXJzIGFyZSBzb21ldGltZXMgYm90aCB3cm9uZyBpbiB0aGVpciBqdWRnZW1lbnQgb2Ygd2hhdCBxdWFsaXRpZXMgYQoJCQkJCWhlYWx0aHkgYm9keSBvdWdodCB0byBwb3NzZXNzIGFuZCB1bnN1Y2Nlc3NmdWwgaW4gaGl0dGluZyBvbiBlZmZlY3RpdmUgbWVhbnMgdG8KCQkJCQlwcm9kdWNlIHRoZSBkaXN0aW5jdGl2ZSBhaW0gdGhhdCB0aGV5IGhhdmUgc2V0IGJlZm9yZSB0aGVtOyB3aGVyZWFzIGluIHRoZSBhcnRzCgkJCQkJYW5kIHNjaWVuY2VzIGJvdGggdGhlc2UgdGhpbmdzIGhhdmUgdG8gYmUgc2VjdXJlZCwgdGhlIGVuZCBhbmQgdGhlIHByYWN0aWNhbAoJCQkJCW1lYW5zIHRvIHRoZSBlbmQu77yJIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ob3cgaXQKCQkJCQlpcyBjbGVhciB0aGF0IGFsbCBtZW4gYWltIGF0IHRoZSBnb29kIGxpZmUgYW5kIGF0IGhhcHBpbmVzcywgYnV0IHRob3VnaCBzb21lCgkJCQkJcG9zc2VzcyB0aGUgcG93ZXIgdG8gYXR0YWluIHRoZXNlIHRoaW5ncywgc29tZSBkbyBub3QsIG93aW5nIHRvIHNvbWUgZmFjdG9yIG9mCgkJCQkJZm9ydHVuZSBvciBvZiBuYXR1cmUg77yIZm9ydHVuZSBiZWNhdXNlIHRoZSBnb29kIGxpZmUgbmVlZHMgYWxzbyBhCgkJCQkJY2VydGFpbiBlcXVpcG1lbnQgb2YgbWVhbnMsIDxtaWxlc3RvbmUgbj0iMTMzMmEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBhbHRob3VnaCBpdCBuZWVkcyBsZXNzIG9mIHRoaXMgZm9yIG1lbiBvZgoJCQkJCWJldHRlciBuYXR1cmFsIGRpc3Bvc2l0aW9uIGl0IG5lZWRzIG1vcmUgZm9yIHRob3NlIG9mIHdvcnNl77yJOyB3aGlsZQoJCQkJCW90aGVycywgYWx0aG91Z2ggdGhleSBoYXZlIHRoZSBwb3dlciwgZ28gd3JvbmcgYXQgdGhlIHN0YXJ0IGluIHRoZWlyIHNlYXJjaCBmb3IKCQkJCQkJaGFwcGluZXNzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGV5IG1pc2NvbmNlaXZlIHRoZQoJCQkJCQluYXR1cmUgb2YgaGFwcGluZXNzIGFuZCBzZWxlY3QgdGhlIHdyb25nIHRoaW5nIHRvIGFpbSBhdC48L25vdGU+IEJ1dCB0aGUKCQkJCQlvYmplY3QgYmVmb3JlIHVzIGlzIHRvIGRpc2Nlcm4gdGhlIGJlc3QgY29uc3RpdHV0aW9uLCBhbmQgdGhpcyBpcyB0aGUgb25lIHVuZGVyCgkJCQkJd2hpY2ggYSBzdGF0ZSB3aWxsIGJlIGJlc3QgZ292ZXJuZWQsIGFuZCBhIHN0YXRlIHdpbGwgYmUgYmVzdCBnb3Zlcm5lZCB1bmRlciB0aGUKCQkJCQljb25zdGl0dXRpb24gdW5kZXIgd2hpY2ggaXQgaGFzIHRoZSBtb3N0IG9wcG9ydHVuaXR5IGZvciBoYXBwaW5lc3M7IGl0IGlzCgkJCQkJdGhlcmVmb3JlIGNsZWFyIHRoYXQgd2UgbXVzdCBrbm93IHdoYXQgaGFwcGluZXNzIGlzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHZpZXcgdGhhdCB3ZSBtYWludGFpbiDvvIhhbmQgdGhpcyBpcyB0aGUKCQkJCQlkZWZpbml0aW9uIHRoYXQgd2UgbGFpZCBkb3duIGluIHRoZTx0aXRsZT5FdGhpY3M8L3RpdGxlPiw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTA5OGEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4gRXRoLiAxMDk4YQoJCQkJCQkJMTY8L2JpYmw+IGFuZCA8YmlibCBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExNzZiIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4KCQkJCQkJCTExNzZiIDQ8L2JpYmw+PC9ub3RlPiBpZiB0aG9zZSBkaXNjb3Vyc2VzIGFyZSBvZiBhbnkgdmFsdWXvvIkgaXMKCQkJCQl0aGF0IGhhcHBpbmVzcyBpcyB0aGUgY29tcGxldGUgYWN0aXZpdHkgYW5kIGVtcGxveW1lbnQgb2YgdmlydHVlLCBhbmQgdGhpcyBub3QKCQkJCQljb25kaXRpb25hbGx5IGJ1dCBhYnNvbHV0ZWx5LiBXaGVuIEkgc2F5IOKAmGNvbmRpdGlvbmFsbHnigJkgSQoJCQkJCXJlZmVyIHRvIHRoaW5ncyBuZWNlc3NhcnksIGJ5IOKAmGFic29sdXRlbHnigJkgSSBtZWFuCgkJCQkJ4oCYbm9ibHnigJk6IGZvciBpbnN0YW5jZSwgdG8gdGFrZSB0aGUgY2FzZSBvZiBqdXN0IGFjdGlvbnMsCgkJCQkJanVzdCBhY3RzIG9mIHZlbmdlYW5jZSBhbmQgb2YgcHVuaXNobWVudCBzcHJpbmcgaXQgaXMgdHJ1ZSBmcm9tIHZpcnR1ZSwgYnV0IGFyZQoJCQkJCW5lY2Vzc2FyeSwgYW5kIGhhdmUgdGhlIHF1YWxpdHkgb2Ygbm9iaWxpdHkgb25seSBpbiBhIGxpbWl0ZWQgbWFubmVyCgkJCQkJ77yIc2luY2UgaXQgd291bGQgYmUgcHJlZmVyYWJsZSB0aGF0IG5laXRoZXIgaW5kaXZpZHVhbCBub3Igc3RhdGUgc2hvdWxkCgkJCQkJaGF2ZSBhbnkgbmVlZCBvZiBzdWNoIHRoaW5nc++8iSwgd2hlcmVhcyBhY3Rpb25zIGFpbWluZyBhdCBob25vcnMgYW5kCgkJCQkJCXJlc291cmNlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBjb25qZWN0dXJhbCBlbWVuZGF0aW9uIGdpdmVzCgkJCQkJCeKAmGRpc3RpbmN0aW9ucy7igJk8L25vdGU+IGFyZSB0aGUgbm9ibGVzdCBhY3Rpb25zCgkJCQkJYWJzb2x1dGVseTsgZm9yIHRoZSBmb3JtZXIgY2xhc3Mgb2YgYWN0cyBjb25zaXN0IGluIHRoZSByZW1vdmFsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIGlzIGEgY29uamVjdHVyYWwgZW1lbmRhdGlvbjsgdGhlIE1TUy4KCQkJCQkJZ2l2ZSDigJh0aGUgYWRvcHRpb24u4oCZPC9ub3RlPiBvZiBzb21ldGhpbmcgZXZpbCwgYnV0CgkJCQkJYWN0aW9ucyBvZiB0aGUgbGF0dGVyIGtpbmQgYXJlIHRoZSBvcHBvc2l0ZeKAlHRoZXkgYXJlIHRoZSBmb3VuZGF0aW9uCgkJCQkJYW5kIHRoZSBnZW5lcmF0aW9uIG9mIHRoaW5ncyBnb29kLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHZpcnR1b3VzIG1hbiB3aWxsIHVzZSBldmVuIHBvdmVydHksIGRpc2Vhc2UsIGFuZDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIG90aGVyIGZvcm1zIG9mIGJhZCBmb3J0dW5lIGluIGEgbm9ibGUgbWFubmVyLAoJCQkJCWJ1dCBmZWxpY2l0eSBjb25zaXN0cyBpbiB0aGVpciBvcHBvc2l0ZXMg77yIZm9yIGl0IGlzIGEgZGVmaW5pdGlvbgoJCQkJCWVzdGFibGlzaGVkIGJ5IG91ciBldGhpY2FsIGRpc2NvdXJzZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPgoJCQkJCQk8YmlibCBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExMTNhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTExM2EgMTUgZmYuPC9iaWJsPgoJCQkJCTwvbm90ZT4gdGhhdCB0aGUgdmlydHVvdXMgbWFuIGlzIHRoZSBtYW4gb2Ygc3VjaCBhIGNoYXJhY3RlciB0aGF0IGJlY2F1c2Ugb2YgaGlzCgkJCQkJdmlydHVlIHRoaW5ncyBhYnNvbHV0ZWx5IGdvb2QgYXJlIGdvb2QgdG8gaGltLCBhbmQgaXQgaXMgdGhlcmVmb3JlIGNsZWFyIHRoYXQKCQkJCQloaXMgZW1wbG95bWVudCBvZiB0aGVzZSBnb29kcyBtdXN0IGFsc28gYmUgdmlydHVvdXMgYW5kIG5vYmxlCgkJCQkJYWJzb2x1dGVsee+8iTsgYW5kIGhlbmNlIG1lbiBhY3R1YWxseSBzdXBwb3NlIHRoYXQgZXh0ZXJuYWwgZ29vZHMgYXJlIHRoZQoJCQkJCWNhdXNlIG9mIGhhcHBpbmVzcywganVzdCBhcyBpZiB0aGV5IHdlcmUgdG8gYXNzaWduIHRoZSBjYXVzZSBvZiBhIGJyaWxsaWFudGx5CgkJCQkJZmluZSBwZXJmb3JtYW5jZSBvbiB0aGUgaGFycCB0byB0aGUgaW5zdHJ1bWVudCByYXRoZXIgdGhhbiB0byB0aGUgc2tpbGwgb2YgdGhlCgkJCQkJcGxheWVyLiBJdCBmb2xsb3dzIHRoZXJlZm9yZSBmcm9tIHdoYXQgaGFzIGJlZW4gc2FpZCB0aGF0IHNvbWUgZ29vZHMgbXVzdCBiZQoJCQkJCWZvcnRoY29taW5nIHRvIHN0YXJ0IHdpdGggYW5kIG90aGVycyBtdXN0IGJlIHByb3ZpZGVkIGJ5IHRoZSBsZWdpc2xhdG9yLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+SGVuY2Ugd2UgcHJheSB0aGF0IHRoZQoJCQkJCW9yZ2FuaXphdGlvbiBvZiB0aGUgc3RhdGUgbWF5IGJlIHN1Y2Nlc3NmdWwgaW4gc2VjdXJpbmcgdGhvc2UgZ29vZHMgd2hpY2ggYXJlIGluCgkJCQkJdGhlIGNvbnRyb2wgb2YgZm9ydHVuZSDvvIhmb3IgdGhhdCBmb3J0dW5lIGRvZXMgY29udHJvbCBleHRlcm5hbCBnb29kcyB3ZQoJCQkJCXRha2UgYXMgYXhpb21hdGlj77yJOyBidXQgd2hlbiB3ZSBjb21lIHRvIHRoZSBzdGF0ZSdzIGJlaW5nIHZpcnR1b3VzLCB0bwoJCQkJCXNlY3VyZSB0aGlzIGlzIG5vdCB0aGUgZnVuY3Rpb24gb2YgZm9ydHVuZSBidXQgb2Ygc2NpZW5jZSBhbmQgcG9saWN5LiBCdXQgdGhlbgoJCQkJCXRoZSB2aXJ0dWUgb2YgdGhlIHN0YXRlIGlzIG9mIGNvdXJzZSBjYXVzZWQgYnkgdGhlIGNpdGl6ZW5zIHdobyBzaGFyZSBpbiBpdHMKCQkJCQlnb3Zlcm5tZW50IGJlaW5nIHZpcnR1b3VzOyBhbmQgaW4gb3VyIHN0YXRlIGFsbCB0aGUgY2l0aXplbnMgc2hhcmUgaW4gdGhlCgkJCQkJZ292ZXJubWVudC4gVGhlIHBvaW50IHdlIGhhdmUgdG8gY29uc2lkZXIgdGhlcmVmb3JlIGlzLCBob3cgZG9lcyBhIG1hbiBiZWNvbWUKCQkJCQl2aXJ0dW91cz8gRm9yIGV2ZW4gaWYgaXQgYmUgcG9zc2libGUgZm9yIHRoZSBjaXRpemVucyB0byBiZSB2aXJ0dW91cwoJCQkJCWNvbGxlY3RpdmVseSB3aXRob3V0IGJlaW5nIHNvIGluZGl2aWR1YWxseSwgdGhlIGxhdHRlciBpcyBwcmVmZXJhYmxlLCBzaW5jZSBmb3IKCQkJCQllYWNoIGluZGl2aWR1YWwgdG8gYmUgdmlydHVvdXMgZW50YWlscyBhcyBhIGNvbnNlcXVlbmNlIHRoZSBjb2xsZWN0aXZlIHZpcnR1ZSBvZgoJCQkJCWFsbC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTIuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGVyZSBhcmUgYWRtaXR0ZWRseSB0aHJlZQoJCQkJCXRoaW5ncyBieSB3aGljaCBtZW4gYXJlIG1hZGUgZ29vZCBhbmQgdmlydHVvdXMsIGFuZCB0aGVzZSB0aHJlZSB0aGluZ3MgYXJlCgkJCQkJbmF0dXJlLCBoYWJpdCBhbmQgcmVhc29uLiBGb3IgdG8gc3RhcnQgd2l0aCwgb25lIG11c3QgYmUgYm9ybiB3aXRoIHRoZSBuYXR1cmUgb2YKCQkJCQlhIGh1bWFuIGJlaW5nIGFuZCBub3Qgb2Ygc29tZSBvdGhlciBhbmltYWw7IGFuZCBzZWNvbmRseSwgb25lIG11c3QgYmUgYm9ybiBvZiBhCgkJCQkJY2VydGFpbiBxdWFsaXR5IG9mIGJvZHkgYW5kIG9mIHNvdWwuIEJ1dCB0aGVyZSBhcmUgc29tZSBxdWFsaXRpZXMgdGhhdCBpdCBpcyBvZgoJCQkJCW5vIHVzZSB0byBiZSBib3JuIHdpdGgsIDxtaWxlc3RvbmUgbj0iMTMzMmIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBvdXIgaGFiaXRzIG1ha2UgdXMgYWx0ZXIgdGhlbTogc29tZSBxdWFsaXRpZXMKCQkJCQlpbiBmYWN0IGFyZSBtYWRlIGJ5IG5hdHVyZSBsaWFibGUgdG8gYmUgbW9kaWZpZWQgYnkgdGhlIGhhYml0cyBpbiBlaXRoZXIKCQkJCQlkaXJlY3Rpb24sIGZvciB0aGUgd29yc2Ugb3IgZm9yIHRoZSBiZXR0ZXIuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEyLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ob3cgdGhlIG90aGVyIGFuaW1hbHMgbGl2ZSBjaGllZmx5IGJ5IG5hdHVyZSwgdGhvdWdoIHNvbWUKCQkJCQlpbiBzbWFsbCBkZWdyZWVzIGFyZSBndWlkZWQgYnkgaGFiaXRzIHRvbzsgYnV0IG1hbiBsaXZlcyBieSByZWFzb24gYWxzbywgZm9yIGhlCgkJCQkJYWxvbmUgb2YgYW5pbWFscyBwb3NzZXNzZXMgcmVhc29uOyBzbyB0aGF0IGluIGhpbSB0aGVzZSB0aHJlZSB0aGluZ3MgbXVzdCBiZSBpbgoJCQkJCWhhcm1vbnkgd2l0aCBvbmUgYW5vdGhlcjsgZm9yIG1lbiBvZnRlbiBhY3QgY29udHJhcnkgdG8gdGhlaXIgYWNxdWlyZWQgaGFiaXRzCgkJCQkJYW5kIHRvIHRoZWlyIG5hdHVyZSBiZWNhdXNlIG9mIHRoZWlyIHJlYXNvbiwgaWYgdGhleSBhcmUgY29udmluY2VkIHRoYXQgc29tZQoJCQkJCW90aGVyIGNvdXJzZSBvZiBhY3Rpb24gaXMgcHJlZmVyYWJsZS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyB3ZSBoYXZlCgkJCQkJCWFscmVhZHk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluIDQuPC9ub3RlPiBkZWZpbmVkIHRoZSBwcm9wZXIKCQkJCQluYXR1cmFsIGNoYXJhY3RlciBvZiB0aG9zZSB3aG8gYXJlIHRvIGJlIGFtZW5hYmxlIHRvIHRoZSBoYW5kIG9mIHRoZSBsZWdpc2xhdG9yOwoJCQkJCXdoYXQgbm93IHJlbWFpbnMgaXMgdGhlIHRhc2sgb2YgZWR1Y2F0aW9uLCBmb3IgbWVuIGxlYXJuIHNvbWUgdGhpbmdzIGJ5CgkJCQkJcHJhY3RpY2UsIG90aGVycyBieSBwcmVjZXB0LjxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBzaW5jZSBldmVyeSBwb2xpdGljYWwgY29tbXVuaXR5IGlzCgkJCQkJY29tcG9zZWQgb2YgcnVsZXJzIGFuZCBzdWJqZWN0cywgd2UgbXVzdCB0aGVyZWZvcmUgY29uc2lkZXIgd2hldGhlciB0aGUgcnVsZXJzCgkJCQkJYW5kIHRoZSBzdWJqZWN0cyBvdWdodCB0byBjaGFuZ2UsIG9yIHRvIHJlbWFpbiB0aGUgc2FtZSB0aHJvdWdoIGxpZmU7IGZvciBpdCBpcwoJCQkJCWNsZWFyIHRoYXQgdGhlaXIgZWR1Y2F0aW9uIGFsc28gd2lsbCBoYXZlIHRvIGJlIG1hZGUgdG8gY29ycmVzcG9uZCB3aXRoIHRoaXMKCQkJCQlkaXN0cmlidXRpb24gb2YgZnVuY3Rpb25zLiBJZiB0aGVuIGl0IHdlcmUgdGhlIGNhc2UgdGhhdCB0aGUgb25lIGNsYXNzIGRpZmZlcmVkCgkJCQkJZnJvbSB0aGUgb3RoZXIgYXMgd2lkZWx5IGFzIHdlIGJlbGlldmUgdGhlIGdvZHMgYW5kIGhlcm9lcyB0byBkaWZmZXIgZnJvbQoJCQkJCW1hbmtpbmQsIGhhdmluZyBmaXJzdCBhIGdyZWF0IHN1cGVyaW9yaXR5IGluIHJlZ2FyZCB0byB0aGUgYm9keSBhbmQgdGhlbiBpbgoJCQkJCXJlZ2FyZCB0bzxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIHNvdWwsIHNvIHRoYXQgdGhlCgkJCQkJcHJlLWVtaW5lbmNlIG9mIHRoZSBydWxlcnMgd2FzIGluZGlzcHV0YWJsZSBhbmQgbWFuaWZlc3QgdG8gdGhlIHN1YmplY3RzLCBpdCBpcwoJCQkJCWNsZWFyIHRoYXQgaXQgd291bGQgYmUgYmV0dGVyIGZvciB0aGUgc2FtZSBwZXJzb25zIGFsd2F5cyB0byBiZSBydWxlcnMgYW5kCgkJCQkJc3ViamVjdHMgb25jZSBmb3IgYWxsOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IGFzIHRoaXMKCQkJCQlpcyBub3QgZWFzeSB0byBzZWN1cmUsIGFuZCBhcyB3ZSBkbyBub3QgZmluZCBhbnl0aGluZyBjb3JyZXNwb25kaW5nIHRvIHRoZSBncmVhdAoJCQkJCWRpZmZlcmVuY2UgdGhhdCBTY3lsYXggc3RhdGVzIHRvIGV4aXN0IGJldHdlZW4ga2luZ3MgYW5kIHN1YmplY3RzIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAwMTk4IiBrZXk9InRnbiw3MDAwMTk4Ij5JbmRpYTwvcGxhY2VOYW1lPiwgaXQgaXMgY2xlYXIgdGhhdCBmb3IgbWFueSByZWFzb25zIGl0IGlzCgkJCQkJbmVjZXNzYXJ5IGZvciBhbGwgdG8gc2hhcmUgYWxpa2UgaW4gcnVsaW5nIGFuZCBiZWluZyBydWxlZCBpbiB0dXJuLiBGb3IgZXF1YWxpdHkKCQkJCQltZWFucyBmb3IgcGVyc29ucyB3aG8gYXJlIGFsaWtlIGlkZW50aXR5IG9mIHN0YXR1cywgYW5kIGFsc28gaXQgaXMKCQkJCQkJZGlmZmljdWx0PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgZW1lbmRhdGlvbiBzdWdnZXN0ZWQgYnkKCQkJCQkJUmljaGFyZHMgZ2l2ZXMg4oCYRm9yIGVxdWFsaXR5IGFuZCBpZGVudGl0eSDvvIhvZgoJCQkJCQlzdGF0dXPvvIkgYXJlIGp1c3QgZm9yIHBlcnNvbnMgd2hvIGFyZSBhbGlrZSwgYW5kIGl0IGlzCgkJCQkJCWRpZmZpY3VsdCzigJkgZXRjLjwvbm90ZT4gZm9yIGEgY29uc3RpdHV0aW9uIHRvIGVuZHVyZSB0aGF0IGlzCgkJCQkJZnJhbWVkIGluIGNvbnRyYXZlbnRpb24gb2YganVzdGljZS4gRm9yIGFsbCB0aGUgcGVvcGxlIHRocm91Z2hvdXQgdGhlIGNvdW50cnkKCQkJCQlhcmUgcmFuZ2VkIG9uIHRoZSBzaWRlIG9mIHRoZSBzdWJqZWN0IGNsYXNzIGluIHdpc2hpbmcgZm9yIGEgcmV2b2x1dGlvbiwgYW5kIGl0CgkJCQkJaXMgYSB0aGluZyBpbmNvbmNlaXZhYmxlIHRoYXQgdGhvc2UgaW4gdGhlIGdvdmVybm1lbnQgc2hvdWxkIGJlIHN1ZmZpY2llbnRseQoJCQkJCW51bWVyb3VzIHRvIG92ZXIgcG93ZXIgYWxsIG9mIHRoZXNlIHRvZ2V0aGVyLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHlldCBvbiB0aGUgb3RoZXIgaGFuZCB0aGF0IHRoZSBydWxlcnMgb3VnaHQgdG8gYmUKCQkJCQlzdXBlcmlvciB0byB0aGUgc3ViamVjdHMgY2Fubm90IGJlIGRpc3B1dGVkOyB0aGVyZWZvcmUgdGhlIGxhd2dpdmVyIG11c3QKCQkJCQljb25zaWRlciBob3cgdGhpcyBpcyB0byBiZSBzZWN1cmVkLCBhbmQgaG93IHRoZXkgYXJlIHRvIHBhcnRpY2lwYXRlIGluIHRoZQoJCQkJCWdvdmVybm1lbnQuIEFuZCB0aGlzIGhhcyBiZWVuIGFscmVhZHk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjguMywKCQkJCQkJMTMyOWEgNCBmZi48L25vdGU+IGRpc2N1c3NlZC4gTmF0dXJlIGhhcyBnaXZlbiB0aGUgZGlzdGluY3Rpb24gYnkgbWFraW5nIHRoZQoJCQkJCWdyb3VwIHRoYXQgaXMgaXRzZWxmIHRoZSBzYW1lIGluIHJhY2UgcGFydGx5IHlvdW5nZXIgYW5kIHBhcnRseSBvbGRlciwgb2Ygd2hpY2gKCQkJCQl0d28gc2V0cyBpdCBpcyBhcHByb3ByaWF0ZSB0byB0aGUgb25lIHRvIGJlIGdvdmVybmVkIGFuZCBmb3IgdGhlIG90aGVyIHRvCgkJCQkJZ292ZXJuOyBhbmQgbm8gb25lIGNoYWZlcyBvciB0aGlua3MgaGltc2VsZiBiZXR0ZXIgdGhhbiBoaXMgcnVsZXJzIHdoZW4gaGUgaXMKCQkJCQlnb3Zlcm5lZCBvbiB0aGUgZ3JvdW5kIG9mIGFnZSwgZXNwZWNpYWxseSBhcyBoZSBpcyBnb2luZyB0byBnZXQgYmFjayB3aGF0IGhlIGhhcwoJCQkJCXRodXMgY29udHJpYnV0ZWQgdG8gdGhlIGNvbW1vbiBzdG9jayB3aGVuIGhlIHJlYWNoZXMgdGhlIHByb3BlciBhZ2UuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JbiBhIHNlbnNlIHRoZXJlZm9yZSB3ZSBtdXN0IHNheSB0aGF0IHRoZQoJCQkJCXJ1bGVycyBhbmQgcnVsZWQgYXJlIHRoZSBzYW1lLCBhbmQgaW4gYSBzZW5zZSBkaWZmZXJlbnQuIDxtaWxlc3RvbmUgbj0iMTMzM2EiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkhlbmNlIHRoZWlyCgkJCQkJZWR1Y2F0aW9uIGFsc28gaXMgYm91bmQgdG8gYmUgaW4gb25lIHdheSB0aGUgc2FtZSBhbmQgaW4gYW5vdGhlciBkaWZmZXJlbnQuIEZvcgoJCQkJCWhlIHdobyBpcyB0byBiZSBhIGdvb2QgcnVsZXIgbXVzdCBoYXZlIGZpcnN0IGJlZW4gcnVsZWQsIGFzIHRoZSBzYXlpbmcgaXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBzZW50ZW5jZSBoZXJlIGJyZWFrcyBvZmYgaW50byBhIGxvbmcKCQkJCQkJcGFyZW50aGVzaXMsIGFmdGVyIHdoaWNoIGl0IGlzIG5vdCByZXN1bWVkLjwvbm90ZT4g77yIYW5kIGdvdmVybm1lbnQsCgkJCQkJYXMgaGFzIGJlZW4gc2FpZCBpbiB0aGUgZmlyc3QgZGlzY291cnNlcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkJvb2sgMy42LjYtMTIsIDEyNzhiIDMwIGZmLjwvbm90ZT4gaXMgb2YgdHdvIHNvcnRzLCBvbmUgY2FycmllZCBvbiBmb3IgdGhlCgkJCQkJc2FrZSBvZiB0aGUgcnVsZXIgYW5kIHRoZSBvdGhlciBmb3IgdGhlIHNha2Ugb2YgdGhlIHN1YmplY3Q7IG9mIHRoZXNlIHRoZSBmb3JtZXIKCQkJCQlpcyB3aGF0IHdlIGNhbGwgdGhlIHJ1bGUgb2YgYSBtYXN0ZXIsdGhlIGxhdHRlciBpcyB0aGUgZ292ZXJubWVudCBvZiBmcmVlIG1lbiAuCgkJCQkJLiAuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PbmUgc2VudGVuY2Ugb3IgbW9yZSBoYXMgYmVlbiBsb3N0CgkJCQkJCWhlcmUuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgc29tZSBvZiB0aGUgY29tbWFuZHMgZ2l2ZW4KCQkJCQlkaWZmZXIgbm90IGluIG5hdHVyZSBvZiB0aGUgc2VydmljZXMgY29tbWFuZGVkIGJ1dCBpbiB0aGVpciBvYmplY3QuIEhlbmNlIGEKCQkJCQludW1iZXIgb2Ygd2hhdCBhcmUgdGhvdWdodCB0byBiZSBtZW5pYWwgc2VydmljZXMgY2FuIGJlIGhvbm9yYWJseSBwZXJmb3JtZWQgZXZlbgoJCQkJCWJ5IGZyZWVtZW4gaW4geW91dGg7IHNpbmNlIGluIHJlZ2FyZCB0byBob25vciBhbmQgZGlzaG9ub3IgYWN0aW9ucyBkbyBub3QgZGlmZmVyCgkJCQkJc28gbXVjaCBpbiB0aGVtc2VsdmVzIGFzIGluIHRoZWlyIGVuZCBhbmQgb2JqZWN077yJLiBCdXQgc2luY2Ugd2Ugc2F5CgkJCQkJdGhhdCB0aGUgZ29vZG5lc3Mgb2YgYSBjaXRpemVuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIHRoZQoJCQkJCQlHcmVlayBzaG91bGQgYmUgYWx0ZXJlZCB0byBnaXZlIOKAmG9mIHRoZSBiZXN0CgkJCQkJCWNpdGl6ZW4u4oCZPC9ub3RlPiBhbmQgcnVsZXIgYXJlIHRoZSBzYW1lIGFzIHRoYXQgb2YgdGhlIGJlc3QgbWFuLAoJCQkJCWFuZCB0aGF0IHRoZSBzYW1lIHBlcnNvbiBvdWdodCB0byBiZWNvbWUgYSBzdWJqZWN0IGZpcnN0IGFuZCBhIHJ1bGVyIGFmdGVyd2FyZHMsCgkJCQkJaXQgd2lsbCBiZSBpbXBvcnRhbnQgZm9yIHRoZSBsZWdpc2xhdG9yIHRvIHN0dWR5IGhvdyBhbmQgYnkgd2hhdCBjb3Vyc2VzIG9mCgkJCQkJdHJhaW5pbmcgZ29vZCBtZW4gYXJlIHRvIGJlIHByb2R1Y2VkLCBhbmQgd2hhdCBpcyB0aGUgZW5kIG9mIHRoZSBiZXN0CgkJCQkJCWxpZmUuPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTMuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHNvdWwgaXMgZGl2aWRlZCBpbnRvIHR3byBwYXJ0cywgb2Ygd2hpY2ggb25lIGlzIGluIGl0c2VsZgoJCQkJCXBvc3Nlc3NlZCBvZiByZWFzb24sIHdoaWxlIHRoZSBvdGhlciBpcyBub3QgcmF0aW9uYWwgaW4gaXRzZWxmIGJ1dCBjYXBhYmxlIG9mCgkJCQkJb2JleWluZyByZWFzb24uIFRvIHRoZXNlIHBhcnRzIGluIG91ciB2aWV3IGJlbG9uZyB0aG9zZSB2aXJ0dWVzIGluIGFjY29yZGFuY2UKCQkJCQl3aXRoIHdoaWNoIGEgbWFuIGlzIHByb25vdW5jZWQgdG8gYmUgZ29vZCBpbiBzb21lIHdheS4gQnV0IGluIHdoaWNoIG9mCgkJCQkJCXRoZXNlPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50d28gcGFydHMgdGhlIGVuZCBvZiBtYW4KCQkJCQlyYXRoZXIgcmVzaWRlcywgdGhvc2Ugd2hvIGRlZmluZSB0aGUgcGFydHMgb2YgdGhlIHNvdWwgaW4gYWNjb3JkYW5jZSB3aXRoIG91cgoJCQkJCXZpZXcgd2lsbCBoYXZlIG5vIGRvdWJ0IGFzIHRvIGhvdyB0aGV5IHNob3VsZCBkZWNpZGUuIFRoZSB3b3JzZSBhbHdheXMgZXhpc3RzIGFzCgkJCQkJYSBtZWFucyB0byB0aGUgYmV0dGVyLCBhbmQgdGhpcyBpcyBtYW5pZmVzdCBhbGlrZSBpbiB0aGUgcHJvZHVjdHMgb2YgYXJ0IGFuZCBpbgoJCQkJCXRob3NlIG9mIG5hdHVyZTsgYnV0IHRoZSByYXRpb25hbCBwYXJ0IG9mIHRoZSBzb3VsIGlzIGJldHRlciB0aGFuIHRoZQoJCQkJCWlycmF0aW9uYWwuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhlIHJhdGlvbmFsIHBhcnQKCQkJCQlpcyBzdWJkaXZpZGVkIGludG8gdHdvLCBhY2NvcmRpbmcgdG8gb3VyIHVzdWFsIHNjaGVtZSBvZiBkaXZpc2lvbjsgZm9yIHJlYXNvbiBpcwoJCQkJCW9mIHR3byBraW5kcywgcHJhY3RpY2FsIGFuZCB0aGVvcmV0aWMsIHNvIHRoYXQgb2J2aW91c2x5IHRoZSByYXRpb25hbCBwYXJ0IG9mCgkJCQkJdGhlIHNvdWwgbXVzdCBhbHNvIGJlIHN1YmRpdmlkZWQgYWNjb3JkaW5nbHkuIEEgY29ycmVzcG9uZGluZyBjbGFzc2lmaWNhdGlvbiB3ZQoJCQkJCXNoYWxsIGFsc28gcHJvbm91bmNlIHRvIGhvbGQgYW1vbmcgaXRzIGFjdGl2aXRpZXM6IHRoZSBhY3Rpdml0aWVzIG9mIHRoZSBwYXJ0IG9mCgkJCQkJdGhlIHNvdWwgdGhhdCBpcyBieSBuYXR1cmUgc3VwZXJpb3IgbXVzdCBiZSBwcmVmZXJhYmxlIGZvciB0aG9zZSBwZXJzb25zIHdobyBhcmUKCQkJCQljYXBhYmxlIG9mIGF0dGFpbmluZyBlaXRoZXIgYWxsIHRoZSBzb3VsJ3MgYWN0aXZpdGllcyBvciB0d288bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIHR3byBsb3dlciBvbmVzLCB0aGUgdGhyZWUgYmVpbmcgdGhlIGFjdGl2aXRpZXMgb2YKCQkJCQkJdGhlIHRoZW9yZXRpYyByZWFzb24sIG9mIHRoZSBwcmFjdGljYWwgcmVhc29uLCBhbmQgb2YgdGhlIHBhc3Npb25zIHRoYXQKCQkJCQkJYWx0aG91Z2ggaXJyYXRpb25hbCBhcmUgYW1lbmFibGUgdG8gcmVhc29uLjwvbm90ZT4gb3V0IG9mIHRoZSB0aHJlZTsgc2luY2UKCQkJCQl0aGF0IHRoaW5nIGlzIGFsd2F5cyBtb3N0IGRlc2lyYWJsZSBmb3IgZWFjaCBwZXJzb24gd2hpY2ggaXMgdGhlIGhpZ2hlc3QgdG8KCQkJCQl3aGljaCBpdCBpcyBwb3NzaWJsZSBmb3IgaGltIHRvIGF0dGFpbi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTMuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFsc28gbGlmZSBhcyBhIHdob2xlIGlzIGRpdmlkZWQgaW50byBidXNpbmVzcyBhbmQgbGVpc3VyZSwKCQkJCQlhbmQgd2FyIGFuZCBwZWFjZSwgYW5kIG91ciBhY3Rpb25zIGFyZSBhaW1lZCBzb21lIG9mIHRoZW0gYXQgdGhpbmdzIG5lY2Vzc2FyeQoJCQkJCWFuZCB1c2VmdWwsIG90aGVycyBhdCB0aGluZ3Mgbm9ibGUuIEluIHRoZXNlIG1hdHRlcnMgdGhlIHNhbWUgcHJpbmNpcGxlIG9mCgkJCQkJcHJlZmVyZW5jZSB0aGF0IGFwcGxpZXMgdG8gdGhlIHBhcnRzIG9mIHRoZSBzb3VsIG11c3QgYXBwbHkgYWxzbyB0byB0aGUKCQkJCQlhY3Rpdml0aWVzIG9mIHRob3NlIHBhcnRzOiB3YXIgbXVzdCBiZSBmb3IgdGhlIHNha2Ugb2YgcGVhY2UsIGJ1c2luZXNzIGZvciB0aGUKCQkJCQlzYWtlIG9mIGxlaXN1cmUsIHRoaW5ncyBuZWNlc3NhcnkgYW5kIHVzZWZ1bCBmb3IgdGhlIHB1cnBvc2Ugb2YgdGhpbmdzIG5vYmxlLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy45IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHN0YXRlc21hbiB0aGVyZWZvcmUgbXVzdAoJCQkJCWxlZ2lzbGF0ZSB3aXRoIGFsbCB0aGVzZSBjb25zaWRlcmF0aW9ucyBpbiB2aWV3LCBib3RoIGluIHJlc3BlY3Qgb2YgdGhlIHBhcnRzIG9mCgkJCQkJdGhlIHNvdWwgYW5kIG9mIHRoZWlyIGFjdGl2aXRpZXMsIGFuZCBhaW1pbmcgbW9yZSBwYXJ0aWN1bGFybHkgYXQgdGhlIGdyZWF0ZXIKCQkJCQlnb29kcyBhbmQgdGhlIGVuZHMuIEFuZCB0aGUgc2FtZSBwcmluY2lwbGUgYXBwbGllcyBpbiByZWdhcmQgdG8gbW9kZXMgb2YgbGlmZQoJCQkJCWFuZCBjaG9pY2VzIG9mIGNvbmR1Y3Q6IGEgbWFuIHNob3VsZCBiZSBjYXBhYmxlIG9mIGVuZ2FnaW5nIGluIGJ1c2luZXNzIGFuZCB3YXIsCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTMzM2IiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCBzdGlsbCBtb3JlIGNhcGFibGUgb2YgbGl2aW5nIGluIHBlYWNlIGFuZCBsZWlzdXJlOyBhbmQgaGUKCQkJCQlzaG91bGQgZG8gd2hhdCBpcyBuZWNlc3NhcnkgYW5kIHVzZWZ1bCwgYnV0IHN0aWxsIG1vcmUgc2hvdWxkIGhlIGRvIHdoYXQgaXMKCQkJCQlub2JsZS4gVGhlc2UgdGhlbiBhcmUgdGhlIGFpbXMgdGhhdCBvdWdodCB0byBiZSBrZXB0IGluIHZpZXcgaW4gdGhlIGVkdWNhdGlvbiBvZgoJCQkJCXRoZSBjaXRpemVucyBib3RoIHdoaWxlIHN0aWxsIGNoaWxkcmVuIGFuZCBhdCB0aGUgbGF0ZXIgYWdlcyB0aGF0IHJlcXVpcmUKCQkJCQllZHVjYXRpb24uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZSBHcmVlayBwZW9wbGVzCgkJCQkJcmVwdXRlZCBhdCB0aGUgcHJlc2VudCBkYXkgdG8gaGF2ZSB0aGUgYmVzdCBjb25zdGl0dXRpb25zLCBhbmQgdGhlIGxhd2dpdmVycwoJCQkJCXRoYXQgZXN0YWJsaXNoZWQgdGhlbSwgbWFuaWZlc3RseSBkaWQgbm90IGZyYW1lIHRoZWlyIGNvbnN0aXR1dGlvbmFsIHN5c3RlbXMKCQkJCQl3aXRoIHJlZmVyZW5jZSB0byB0aGUgYmVzdCBlbmQsIG5vciBjb25zdHJ1Y3QgdGhlaXIgbGF3cyBhbmQgdGhlaXIgc2NoZW1lIG9mCgkJCQkJZWR1Y2F0aW9uIHdpdGggYSB2aWV3IHRvIGFsbCB0aGUgdmlydHVlcywgYnV0IHRoZXkgc3dlcnZlZCBhc2lkZSBpbiBhIHZ1bGdhcgoJCQkJCW1hbm5lciB0b3dhcmRzIHRob3NlIGV4Y2VsbGVuY2VzIHRoYXQgYXJlIHN1cHBvc2VkIHRvIGJlIHVzZWZ1bCBhbmQgbW9yZQoJCQkJCWNvbmR1Y2l2ZSB0byBnYWluLiBBbmQgZm9sbG93aW5nIHRoZSBzYW1lIGxpbmVzIGFzIHRoZXksIHNvbWUgbGF0ZXIgd3JpdGVycyBhbHNvCgkJCQkJaGF2ZSBwcm9ub3VuY2VkIHRoZSBzYW1lIG9waW5pb246IGluIHByYWlzaW5nIHRoZSBTcGFydGFuIGNvbnN0aXR1dGlvbiB0aGV5CgkJCQkJZXhwcmVzcyBhZG1pcmF0aW9uIGZvciB0aGUgYWltIG9mIGl0cyBmb3VuZGVyIG9uIHRoZSBncm91bmQgdGhhdCBoZSBmcmFtZWQgdGhlCgkJCQkJd2hvbGUgb2YgaGlzIGxlZ2lzbGF0aW9uIHdpdGggYSB2aWV3IHRvIGNvbnF1ZXN0IGFuZCB0byB3YXIuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjExIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlc2Ugdmlld3MgYXJlIGVhc3kgdG8gcmVmdXRlIG9uCgkJCQkJdGhlb3JldGljYWwgZ3JvdW5kcyBhbmQgYWxzbyBoYXZlIG5vdyBiZWVuIHJlZnV0ZWQgYnkgdGhlIGZhY3RzIG9mIGhpc3RvcnkuIEZvcgoJCQkJCWp1c3QgYXMgbW9zdCBvZiBtYW5raW5kIGNvdmV0IGJlaW5nIG1hc3RlciBvZiBtYW55IHNlcnZhbnRzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciBwb3NzaWJseSwg4oCYY292ZXQgYSB3aWRlCgkJCQkJCWVtcGlyZS7igJk8L25vdGU+IGJlY2F1c2UgdGhpcyBwcm9kdWNlcyBhIG1hbmlmb2xkIHN1cHBseSBvZgoJCQkJCWZvcnR1bmUncyBnb29kcywgc28gVGhpYnJvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VW5rbm93bi48L25vdGU+CgkJCQkJYW5kIGFsbCB0aGUgb3RoZXIgd3JpdGVycyBhYm91dCB0aGUgU3BhcnRhbiBjb25zdGl0dXRpb248bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnNob3cgYWRtaXJhdGlvbiBmb3IgdGhlIGxhd2dpdmVyIG9mIHRoZSBTcGFydGFucwoJCQkJCWJlY2F1c2Ugb3dpbmcgdG8gdGhlaXIgaGF2aW5nIGJlZW4gdHJhaW5lZCB0byBtZWV0IGRhbmdlcnMgdGhleSBnb3Zlcm5lZCBhIHdpZGUKCQkJCQllbXBpcmUuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+WWV0IGl0IGNsZWFybHkgZm9sbG93cwoJCQkJCXRoYXQgc2luY2UgYXMgYSBtYXR0ZXIgb2YgZmFjdCBhdCB0aGUgcHJlc2VudCBkYXkgdGhlIFNwYXJ0YW5zIG5vIGxvbmdlciBwb3NzZXNzCgkJCQkJYW4gZW1waXJlLCB0aGV5IGFyZSBub3QgaGFwcHksIGFuZCB0aGVpciBsYXdnaXZlciB3YXMgbm90IGEgZ29vZCBvbmUuIEFuZCBpdCBpcwoJCQkJCXJpZGljdWxvdXMgdGhhdCBhbHRob3VnaCB0aGV5IGhhdmUga2VwdCB0byBoaXMgbGF3cywgYW5kIGFsdGhvdWdoIG5vdGhpbmcKCQkJCQloaW5kZXJzIHRoZWlyIG9ic2VydmluZyB0aGUgbGF3cywgdGhleSBoYXZlIGxvc3QgdGhlIG5vYmxlIGxpZmUuIEFsc28gd3JpdGVycwoJCQkJCWhhdmUgYSB3cm9uZyBjb25jZXB0aW9uIG9mIHRoZSBwb3dlciBmb3Igd2hpY2ggdGhlIGxhd2dpdmVyIHNob3VsZCBkaXNwbGF5CgkJCQkJZXN0ZWVtOyB0byBnb3Zlcm4gZnJlZW1lbiBpcyBub2JsZXIgYW5kIG1vcmUgY29uam9pbmVkIHdpdGggdmlydHVlIHRoYW4gdG8gcnVsZQoJCQkJCWRlc3BvdGljYWxseS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTMuMTMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgYWdhaW4gaXQgaXMgbm90CgkJCQkJYSBwcm9wZXIgZ3JvdW5kIGZvciBkZWVtaW5nIGEgc3RhdGUgaGFwcHkgYW5kIGZvciBwcmFpc2luZyBpdHMgbGF3Z2l2ZXIsIHRoYXQgaXQKCQkJCQloYXMgcHJhY3Rpc2VkIGNvbnF1ZXN0IHdpdGggYSB2aWV3IHRvIHJ1bGluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBwcm9iYWJsZSBlbWVuZGF0aW9uIGdpdmVzIOKAmHRoYXQgaGUgaGFzIHRyYWluZWQgaXQgd2l0aCBhIHZpZXcKCQkJCQkJdG8gcnVsaW5nLuKAmTwvbm90ZT4gb3ZlciBpdHMgbmVpZ2hib3JzLiBUaGlzIHByaW5jaXBsZSBpcyBtb3N0CgkJCQkJZGlzYXN0cm91czsgaXQgZm9sbG93cyBmcm9tIGl0IHRoYXQgYW4gaW5kaXZpZHVhbCBjaXRpemVuIHdobyBoYXMgdGhlIGNhcGFjaXR5CgkJCQkJb3VnaHQgdG8gZW5kZWF2b3IgdG8gYXR0YWluIHRoZSBwb3dlciB0byBob2xkIHN3YXkgb3ZlciBoaXMgb3duIGNpdHk7IGJ1dCB0aGlzCgkJCQkJaXMganVzdCB3aGF0IHRoZSBTcGFydGFucyBjaGFyZ2UgYXMgYSByZXByb2FjaCBhZ2FpbnN0IHRoZWlyIGtpbmcgUGF1c2FuaWFzLAoJCQkJCWFsdGhvdWdoIGhlIGF0dGFpbmVkIHN1Y2ggaGlnaCBob25vci4gTm8gcHJpbmNpcGxlIHRoZXJlZm9yZSBhbmQgbm8gbGF3IG9mIHRoaXMKCQkJCQluYXR1cmUgaXMgZWl0aGVyIHN0YXRlc21hbmxpa2Ugb3IgcHJvZml0YWJsZSwgbm9yIGlzIGl0IHRydWU7IHRoZSBzYW1lIGlkZWFscwoJCQkJCWFyZSB0aGUgYmVzdCBib3RoIGZvciBpbmRpdmlkdWFscyBhbmQgZm9yIGNvbW11bml0aWVzLCBhbmQgdGhlIGxhd2dpdmVyIHNob3VsZAoJCQkJCWVuZGVhdm9yIHRvIGltcGxhbnQgdGhlbSBpbiB0aGUgc291bHMgb2YgbWFua2luZC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTMuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgcHJvcGVyIG9iamVjdCBvZiBwcmFjdGlzaW5nIG1pbGl0YXJ5IHRyYWluaW5nIGlzIG5vdAoJCQkJCWluIG9yZGVyIHRoYXQgbWVuIG1heSBlbnNsYXZlIHRob3NlIHdobyBkbyBub3QgZGVzZXJ2ZSBzbGF2ZXJ5LCBidXQgaW4gb3JkZXIKCQkJCQl0aGF0IGZpcnN0IHRoZXkgbWF5IHRoZW1zZWx2ZXMgYXZvaWQgYmVjb21pbmcgZW5zbGF2ZWQgdG8gb3RoZXJzOyB0aGVuIHNvIHRoYXQKCQkJCQl0aGV5IG1heSBzZWVrIHN1emVyYWludHkgZm9yIHRoZSBiZW5lZml0IG9mIHRoZSBzdWJqZWN0IHBlb3BsZSwgPG1pbGVzdG9uZSBuPSIxMzM0YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+YnV0IG5vdAoJCQkJCWZvciB0aGUgc2FrZSBvZiB3b3JsZC13aWRlIGRlc3BvdGlzbTsgYW5kIHRoaXJkbHkgdG8gaG9sZCBkZXNwb3RpYyBwb3dlciBvdmVyCgkJCQkJdGhvc2Ugd2hvIGRlc2VydmUgdG8gYmUgc2xhdmVzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkV4cGVyaWVuY2Ugc3VwcG9ydHMgdGhlIHRlc3RpbW9ueSBvZiB0aGVvcnksIHRoYXQgaXQgaXMgdGhlIGR1dHkgb2YgdGhlCgkJCQkJbGF3Z2l2ZXIgcmF0aGVyIHRvIHN0dWR5IGhvdyBoZSBtYXkgZnJhbWUgaGlzIGxlZ2lzbGF0aW9uIGJvdGggd2l0aCByZWdhcmQgdG8KCQkJCQl3YXJmYXJlIGFuZCBpbiBvdGhlciBkZXBhcnRtZW50cyBmb3IgdGhlIG9iamVjdCBvZiBsZWlzdXJlIGFuZCBvZiBwZWFjZS4gTW9zdAoJCQkJCW1pbGl0YXJ5IHN0YXRlcyByZW1haW4gc2FmZSB3aGlsZSBhdCB3YXIgYnV0IHBlcmlzaCB3aGVuIHRoZXkgaGF2ZSB3b24gdGhlaXIKCQkJCQllbXBpcmU7IGluIHBlYWNlLXRpbWUgdGhleSBsb3NlIHRoZWlyIGtlZW4gdGVtcGVyLCBsaWtlIGlyb24uPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGFuIGlyb24gYmxhZGUgd2hlbiBub3QgdXNlZCBsb3NlcwoJCQkJCQlrZWVubmVzcyBhbmQgaGFzIHRvIGJlIHJlLXRlbXBlcmVkLjwvbm90ZT4gVGhlIGxhd2dpdmVyIGlzIHRvIGJsYW1lLCBiZWNhdXNlCgkJCQkJaGUgZGlkIG5vdCBlZHVjYXRlIHRoZW0gdG8gYmUgYWJsZSB0byBlbXBsb3kgbGVpc3VyZS48bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHNpbmNlIGl0IGFwcGVhcnMgdGhhdAoJCQkJCW1lbiBoYXZlIHRoZSBzYW1lIGVuZCBjb2xsZWN0aXZlbHkgYW5kIGluZGl2aWR1YWxseSwgYW5kIHNpbmNlIHRoZSBzYW1lCgkJCQkJZGlzdGluY3RpdmUgYWltIG11c3QgbmVjZXNzYXJpbHkgYmVsb25nIGJvdGggdG8gdGhlIGJlc3QgbWFuIGFuZCB0byB0aGUgYmVzdAoJCQkJCWdvdmVybm1lbnQsIGl0IGlzIGNsZWFyIHRoYXQgdGhlIHZpcnR1ZXMgcmVsYXRpbmcgdG8gbGVpc3VyZSBhcmUgZXNzZW50aWFsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRvIHRoZSBzdGF0ZSBhcyB3ZWxsIGFzIHRvIHRoZQoJCQkJCQlpbmRpdmlkdWFsLjwvbm90ZT47IHNpbmNlLCBhcyBoYXMgYmVlbiBzYWlkIHJlcGVhdGVkbHksIHBlYWNlIGlzIHRoZSBlbmQgb2YKCQkJCQl3YXIsIGxlaXN1cmUgb2YgYnVzaW5lc3MuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjE3IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZQoJCQkJCXZpcnR1ZXMgdXNlZnVsIGZvciBsZWlzdXJlIGFuZCBmb3IgaXRzIGVtcGxveW1lbnQgYXJlIG5vdCBvbmx5IHRob3NlIHRoYXQKCQkJCQlvcGVyYXRlIGR1cmluZyBsZWlzdXJlIGJ1dCBhbHNvIHRob3NlIHRoYXQgb3BlcmF0ZSBpbiBidXNpbmVzczsgZm9yIG1hbnkgb2YgdGhlCgkJCQkJbmVjZXNzYXJpZXMgbXVzdCBuZWVkcyBiZSBmb3J0aGNvbWluZyB0byBnaXZlIHVzIG9wcG9ydHVuaXR5IGZvciBsZWlzdXJlLgoJCQkJCVRoZXJlZm9yZSBpdCBpcyBwcm9wZXIgZm9yIHRoZSBzdGF0ZSB0byBiZSB0ZW1wZXJhdGUsPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5icmF2ZSBhbmQgZW5kdXJpbmc7IHNpbmNlLCBhcyB0aGUgcHJvdmVyYiBnb2VzLAoJCQkJCXRoZXJlIGlzIG5vIGxlaXN1cmUgZm9yIHNsYXZlcywgYnV0IHBlb3BsZSB1bmFibGUgdG8gZmFjZSBkYW5nZXIgYnJhdmVseSBhcmUgdGhlCgkJCQkJc2xhdmVzIG9mIHRoZWlyIGFzc2FpbGFudHMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjE4IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmVmb3JlIGNvdXJhZ2UgYW5kIGZvcnRpdHVkZSBhcmUgbmVlZGVkIGZvciBidXNpbmVzcywgbG92ZSBvZiB3aXNkb20gZm9yCgkJCQkJbGVpc3VyZSwgdGVtcGVyYW5jZSBhbmQganVzdGljZSBmb3IgYm90aCBzZWFzb25zLCBhbmQgbW9yZSBlc3BlY2lhbGx5IHdoZW4gbWVuCgkJCQkJYXJlIGF0IHBlYWNlIGFuZCBoYXZlIGxlaXN1cmU7IGZvciB3YXIgY29tcGVscyBtZW4gdG8gYmUganVzdCBhbmQgdGVtcGVyYXRlLAoJCQkJCXdoZXJlYXMgdGhlIGVuam95bWVudCBvZiBwcm9zcGVyaXR5IGFuZCBwZWFjZWZ1bCBsZWlzdXJlIHRlbmQgdG8gbWFrZSB0aGVtCgkJCQkJaW5zb2xlbnQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjEzLjE5IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmVmb3JlIG11Y2gganVzdGljZQoJCQkJCWFuZCBtdWNoIHRlbXBlcmFuY2UgYXJlIG5lZWRlZCBieSB0aG9zZSB3aG8gYXJlIGRlZW1lZCB2ZXJ5IHByb3NwZXJvdXMgYW5kIHdobwoJCQkJCWVuam95IGFsbCB0aGUgdGhpbmdzIGNvdW50ZWQgYXMgYmxlc3NpbmdzLCBsaWtlIHRoZSBwZXJzb25zLCBpZiBzdWNoIHRoZXJlIGJlLAoJCQkJCWFzIHRoZSBwb2V0cyBzYXksPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJPGJpYmwgZGVmYXVsdD0iTk8iIG49Ikhlcy4gV0QgMTcwIiB2YWxpZD0ieWVzIj5IZXMuIFdEIDE3MCBmZi48L2JpYmw+CgkJCQkJPC9ub3RlPiB0aGF0IGR3ZWxsIGluIHRoZSBJc2xhbmRzIG9mIHRoZSBCbGVzdDsgdGhlc2Ugd2lsbCBtb3N0IG5lZWQgd2lzZG9tLAoJCQkJCXRlbXBlcmFuY2UgYW5kIGp1c3RpY2UsIHRoZSBtb3JlIHRoZXkgYXJlIGF0IGxlaXN1cmUgYW5kIGhhdmUgYW4gYWJ1bmRhbmNlIG9mCgkJCQkJc3VjaCBibGVzc2luZ3MuIEl0IGlzIGNsZWFyIHRoZXJlZm9yZSB3aHkgYSBzdGF0ZSB0aGF0IGlzIHRvIGJlIGhhcHB5IGFuZAoJCQkJCXJpZ2h0ZW91cyBtdXN0IHNoYXJlIGluIHRoZXNlIHZpcnR1ZXM7IGZvciBpZiBpdCBpcyBkaXNncmFjZWZ1bCB0byBiZSB1bmFibGUgdG8KCQkJCQl1c2Ugb3VyIGdvb2QgdGhpbmdzLCBpdCBpcyBzdGlsbCBtb3JlIGRpc2dyYWNlZnVsIHRvIGJlIHVuYWJsZSB0byB1c2UgdGhlbSBpbgoJCQkJCXRpbWUgb2YgbGVpc3VyZSwgYW5kIGFsdGhvdWdoIHNob3dpbmcgb3Vyc2VsdmVzIGdvb2QgbWVuIHdoZW4gZW5nYWdlZCBpbgoJCQkJCWJ1c2luZXNzIGFuZCB3YXIsIGluIHRpbWVzIG9mIHBlYWNlIGFuZCBsZWlzdXJlIHRvIHNlZW0gbm8gYmV0dGVyIHRoYW4gc2xhdmVzLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4yMCIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXJlZm9yZSB3ZSBtdXN0IG5vdAoJCQkJCWN1bHRpdmF0ZSB2aXJ0dWUgYWZ0ZXIgdGhlIG1hbm5lciBvZiB0aGUgc3RhdGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPi4gVGhlIHN1cGVyaW9yaXR5IG9mIHRoZSBTcGFydGFucwoJCQkJCW92ZXIgb3RoZXIgcmFjZXMgZG9lcyBub3QgbGllIDxtaWxlc3RvbmUgbj0iMTMzNGIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmluIHRoZWlyIGhvbGRpbmcgYSBkaWZmZXJlbnQgb3BpbmlvbiBmcm9tCgkJCQkJb3RoZXJzIGFzIHRvIHdoYXQgdGhpbmdzIGFyZSB0aGUgZ3JlYXRlc3QgZ29vZHMsIGJ1dCByYXRoZXIgaW4gdGhlaXIgYmVsaWV2aW5nCgkJCQkJdGhhdCB0aGVzZSBhcmUgb2J0YWluZWQgYnkgbWVhbnMgb2Ygb25lIHBhcnRpY3VsYXIgdmlydHVlOyB5ZXQgYmVjYXVzZSB0aGV5IGJvdGgKCQkJCQlkZWVtIHRoZXNlIHRoaW5ncyBhbmQgdGhlaXIgZW5qb3ltZW50IHRvIGJlIGdyZWF0ZXIgZ29vZHMgdGhhbiB0aGUgZW5qb3ltZW50IG9mCgkJCQkJdGhlIHZpcnR1ZXMgLiAuIC48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBlbmQgb2YgdGhpcyBzZW50ZW5jZQoJCQkJCQlhbmQgdGhlIGJlZ2lubmluZyBvZiB0aGUgbmV4dCBhcHBlYXIgdG8gaGF2ZSBiZWVuIGxvc3QuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+LiAuIC4gYW5kIHRoYXQgaXQgaXMgdG8gYmUgcHJhY3Rpc2VkIGZvciBpdHMgb3duCgkJCQkJc2FrZSBpcyBtYW5pZmVzdCBmcm9tIHRoZXNlIGNvbnNpZGVyYXRpb25zOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4yMSIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCBpdCBtdXN0IG5vdyBiZSBjb25zaWRlcmVkIGhvdyBhbmQgYnkgd2hhdCBtZWFucyB0aGlzCgkJCQkJd2lsbCBjb21lIGFib3V0LiBOb3cgd2UgaGF2ZSBpbmRlZWQgcHJldmlvdXNseSBkZWNpZGVkIHRoYXQgaXQgcmVxdWlyZXMgbmF0dXJlCgkJCQkJYW5kIGhhYml0IGFuZCByZWFzb24sIGFuZCBhbW9uZyB0aGVzZSwgd2hhdCBwYXJ0aWN1bGFyIHF1YWxpdHkgb2YgbmF0dXJlIG1lbgoJCQkJCW91Z2h0IHRvIHBvc3Nlc3MgaGFzIGJlZW4gZGVmaW5lZCBwcmV2aW91c2x5OyBidXQgaXQgcmVtYWlucyB0byBjb25zaWRlciB3aGV0aGVyCgkJCQkJbWVuIG91Z2h0IHRvIGJlIGVkdWNhdGVkIGZpcnN0IGJ5IG1lYW5zIG9mIHRoZSByZWFzb24gb3IgYnkgdGhlIGhhYml0cy4gRm9yCgkJCQkJYmV0d2VlbiByZWFzb24gYW5kIGhhYml0IHRoZSBtb3N0IHBlcmZlY3QgaGFybW9ueSBvdWdodCB0byBleGlzdCwgYXMgaXQgaXMKCQkJCQlwb3NzaWJsZSBib3RoIGZvciB0aGUgcmVhc29uIHRvIGhhdmUgbWlzc2VkIHRoZSBoaWdoZXN0IHByaW5jaXBsZSBhbmQgZm9yIG1lbiB0bwoJCQkJCWhhdmUgYmVlbiBhcyB3cm9uZ2x5IHRyYWluZWQgdGhyb3VnaCB0aGUgaGFiaXRzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4yMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoaXMgdGhlcmVmb3JlIGF0IGFsbCBldmVudHMgaXMgY2xlYXIgaW4gdGhlIGZpcnN0IHBsYWNlLAoJCQkJCWluIHRoZSBjYXNlIG9mIG1lbiBhcyBvZiBvdGhlciBjcmVhdHVyZXMsIHRoYXQgdGhlaXIgZW5nZW5kZXJpbmcgc3RhcnRzIGZyb20gYQoJCQkJCWJlZ2lubmluZywgYW5kIHRoYXQgdGhlIGVuZCBzdGFydHMgZnJvbSBhIGNlcnRhaW4gYmVnaW5uaW5nIHRoYXQgaXMgYW5vdGhlcgoJCQkJCQllbmQsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIGNvbmplY3R1cmFsIGFkZGl0aW9uIHRvIHRoZSB0ZXh0CgkJCQkJCWdpdmVzIOKAmHRoZSBlbmQgdG8gd2hpY2ggYSBjZXJ0YWluIGJlZ2lubmluZyBsZWFkcyBpcyBpdHNlbGYgdGhlCgkJCQkJCWJlZ2lubmluZyBvZiBhbm90aGVyIGVuZC7igJkgVGhlIGFjdGl2ZSB1c2Ugb2YgdGhlIHJlYXNvbiBpcyB0aGUgZW5kCgkJCQkJCe+8iGkuZS4gdGhlIGNvbXBsZXRpb24gYW5kIHRoZSBwdXJwb3Nl77yJIG9mIHRoZSBiaXJ0aCBhbmQKCQkJCQkJZ3Jvd3RoIG9mIHRoZSBodW1hbiBhbmltYWwuPC9ub3RlPiBhbmQgdGhhdCByZWFzb24gYW5kIGludGVsbGlnZW5jZSBhcmUgZm9yCgkJCQkJdXMgdGhlIGVuZCBvZiBvdXIgbmF0dXJhbCBkZXZlbG9wbWVudCwgc28gdGhhdCBpdCBpcyB3aXRoIGEgdmlldyB0byB0aGVzZSBlbmRzCgkJCQkJdGhhdCBvdXIgZW5nZW5kZXJpbmcgYW5kIHRoZSB0cmFpbmluZyBvZiBvdXIgaGFiaXRzIG11c3QgYmUgcmVndWxhdGVkLgoJCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIxMy4yMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzZWNvbmRseSwgYXMgc291bCBhbmQgYm9keQoJCQkJCWFyZSB0d28sIHNvIHdlIG9ic2VydmUgdGhhdCB0aGUgc291bCBhbHNvIGhhcyB0d28gcGFydHMsIHRoZSBpcnJhdGlvbmFsIHBhcnQgYW5kCgkJCQkJdGhlIHBhcnQgcG9zc2Vzc2luZyByZWFzb24sIGFuZCB0aGF0IHRoZSBzdGF0ZXMgd2hpY2ggdGhleSBleHBlcmllbmNlIGFyZSB0d28gaW4KCQkJCQkJbnVtYmVyLDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIG9uZSBiZWluZyBkZXNpcmUgYW5kCgkJCQkJdGhlIG90aGVyIGludGVsbGlnZW5jZTsgYW5kIGFzIHRoZSBib2R5IGlzIHByaW9yIGluIGl0cyBkZXZlbG9wbWVudCB0byB0aGUgc291bCwKCQkJCQlzbyB0aGUgaXJyYXRpb25hbCBwYXJ0IG9mIHRoZSBzb3VsIGlzIHByaW9yIHRvIHRoZSByYXRpb25hbC4gQW5kIHRoaXMgYWxzbyBpcwoJCQkJCW9idmlvdXMsIGJlY2F1c2UgcGFzc2lvbiBhbmQgd2lsbCwgYW5kIGFsc28gYXBwZXRpdGUsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGVzZSB0aHJlZSBlbW90aW9ucyBhcmUgc3ViZGl2aXNpb25zIG9mCgkJCQkJCeKAmGRlc2lyZeKAmSBhYm92ZS48L25vdGU+IGV4aXN0IGluIGNoaWxkcmVuIGV2ZW4gYXMgc29vbiBhcwoJCQkJCXRoZXkgYXJlIGJvcm4sIGJ1dCBpdCBpcyB0aGUgbmF0dXJlIG9mIHJlYXNvbmluZyBhbmQgaW50ZWxsaWdlbmNlIHRvIGFyaXNlIGluCgkJCQkJdGhlbSBhcyB0aGV5IGdyb3cgb2xkZXIuIFRoZXJlZm9yZSBpbiB0aGUgZmlyc3QgcGxhY2UgaXQgaXMgbmVjZXNzYXJ5IGZvciB0aGUKCQkJCQl0cmFpbmluZyBvZiB0aGUgYm9keSB0byBwcmVjZWRlIHRoYXQgb2YgdGhlIG1pbmQsIGFuZCBzZWNvbmRseSBmb3IgdGhlIHRyYWluaW5nCgkJCQkJb2YgdGhlIGFwcGV0aXRlIHRvIHByZWNlZGUgdGhhdCBvZiB0aGUgaW50ZWxsaWdlbmNlOyBidXQgdGhlIHRyYWluaW5nIG9mIHRoZQoJCQkJCWFwcGV0aXRlIG11c3QgYmUgZm9yIHRoZSBzYWtlIG9mIHRoZSBpbnRlbGxlY3QsIGFuZCB0aGF0IG9mIHRoZSBib2R5IGZvciB0aGUKCQkJCQlzYWtlIG9mIHRoZSBzb3VsLjxtaWxlc3RvbmUgZWQ9IlAiIG49IjE0LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluYXNtdWNoIHRoZXJlZm9yZSBhcyBpdCBpcyB0aGUgZHV0eSBvZiB0aGUgbGF3Z2l2ZXIgdG8KCQkJCQljb25zaWRlciBmcm9tIHRoZSBzdGFydCBob3cgdGhlIGNoaWxkcmVuIHJlYXJlZCBhcmUgdG8gb2J0YWluIHRoZSBiZXN0IGJvZGlseQoJCQkJCWZyYW1lcywgaGUgbXVzdCBmaXJzdCBwYXkgYXR0ZW50aW9uIHRvIHRoZSB1bmlvbiBvZiB0aGUgc2V4ZXMsIGFuZCBzZXR0bGUgd2hlbgoJCQkJCWFuZCBpbiB3aGF0IGNvbmRpdGlvbiBhIGNvdXBsZSBzaG91bGQgcHJhY3Rpc2UgbWF0cmltb25pYWwgaW50ZXJjb3Vyc2UuIEluCgkJCQkJbGVnaXNsYXRpbmcgZm9yIHRoaXMgcGFydG5lcnNoaXAgaGUgbXVzdCBwYXkgcmVnYXJkIHBhcnRseSB0byB0aGUgcGVyc29ucwoJCQkJCXRoZW1zZWx2ZXMgYW5kIHRvIHRoZWlyIHNwYW4gb2YgbGlmZSwgc28gdGhhdCB0aGV5IG1heSBhcnJpdmUgdG9nZXRoZXIgYXQgdGhlCgkJCQkJc2FtZSBwZXJpb2QgaW4gdGhlaXIgYWdlcywgYW5kIHRoZWlyIHBvd2VycyBtYXkgbm90IGJlIGF0IGRpc2NvcmQgdGhyb3VnaCB0aGUKCQkJCQltYW4gYmVpbmcgc3RpbGwgY2FwYWJsZSBvZiBwYXJlbnRhZ2UgYW5kIHRoZSB3aWZlIGluY2FwYWJsZSwgb3IgdGhlIHdpZmUgY2FwYWJsZQoJCQkJCWFuZCB0aGUgbWFuIG5vdCDvvIhmb3IgdGhpcyBjYXVzZXMgZGlmZmVyZW5jZXMgYW5kIGFjdHVhbCBkaXNjb3JkIGJldHdlZW4KCQkJCQl0aGVt77yJLCA8bWlsZXN0b25lIGVkPSJQIiBuPSIxNC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGFsc28gaGUgbXVzdAoJCQkJCWNvbnNpZGVyIGFzIHdlbGwgdGhlIHN1Y2Nlc3Npb24gb2YgdGhlIGNoaWxkcmVuLCBmb3IgdGhlIGNoaWxkcmVuIG11c3QgbmVpdGhlcgoJCQkJCWJlIHRvbyBmYXIgcmVtb3ZlZCBpbiB0aGVpciBhZ2VzIGZyb20gdGhlIGZhdGhlcnMg77yIc2luY2UgZWxkZXJseQoJCQkJCWZhdGhlcnMgZ2V0IG5vIGdvb2QgZnJvbSB0aGVpciBjaGlsZHJlbidzIHJldHVybiBvZiB0aGVpciBmYXZvcnMsIG5vciBkbyB0aGUKCQkJCQljaGlsZHJlbiBmcm9tIHRoZSBoZWxwIHRoZXkgZ2V0IGZyb20gdGhlIGZhdGhlcnPvvIksIDxtaWxlc3RvbmUgbj0iMTMzNWEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPm5vciBtdXN0IHRoZXkgYmUKCQkJCQl0b28gbmVhciB0aGVtIO+8iGZvciB0aGlzIGludm9sdmVzIG11Y2ggdW5wbGVhc2FudG5lc3MsIHNpbmNlIGluIHN1Y2gKCQkJCQlmYW1pbGllcyB0aGVyZSBpcyBsZXNzIHJlc3BlY3QgZmVsdCBiZXR3ZWVuIHRoZW0sIGFzIGJldHdlZW4gY29tcGFuaW9ucyBvZiB0aGUKCQkJCQlzYW1lIGFnZSwgYW5kIGFsc28gdGhlIG5lYXJuZXNzIG9mIGFnZSBsZWFkcyB0byBmcmljdGlvbiBpbiBob3VzZWhvbGQKCQkJCQlhZmZhaXJz77yJOyBhbmQgaW4gYWRkaXRpb24sIHRvIHJldHVybiB0byB0aGUgcG9pbnQgZnJvbSB3aGljaCB3ZSBiZWdhbgoJCQkJCXRoaXMgZGlncmVzc2lvbiwgbWVhc3VyZXMgbXVzdCBiZSB0YWtlbiB0byBlbnN1cmUgdGhhdCB0aGUgY2hpbGRyZW4gcHJvZHVjZWQgbWF5CgkJCQkJaGF2ZSBib2RpbHkgZnJhbWVzIHN1aXRlZCB0byB0aGUgd2lzaCBvZiB0aGUgbGF3Z2l2ZXIuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE0LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVzZSByZXN1bHRzIHRoZW4gYXJlIGFsbW9zdCBhbGwgYXR0YWluZWQgYnkgb25lCgkJCQkJbW9kZSBvZiByZWd1bGF0aW9uLiBGb3Igc2luY2UgdGhlIHBlcmlvZCBvZiBwYXJlbnRhZ2UgdGVybWluYXRlcywgc3BlYWtpbmcKCQkJCQlnZW5lcmFsbHksIHdpdGggbWVuIGF0IHRoZSBhZ2Ugb2Ygc2V2ZW50eSBhdCB0aGUgb3V0c2lkZSwgYW5kIHdpdGggd29tZW4gYXQKCQkJCQlmaWZ0eSwgdGhlIGNvbW1lbmNlbWVudCBvZiB0aGVpciB1bmlvbiBzaG91bGQgY29ycmVzcG9uZCBpbiByZXNwZWN0IG9mIGFnZSB3aXRoCgkJCQkJdGhlc2UgdGltZXMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE0LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdGhlIG1hdGluZyBvZiB0aGUKCQkJCQl5b3VuZyBpcyBiYWQgZm9yIGNoaWxkLWJlYXJpbmc7IGZvciBpbiBhbGwgYW5pbWFsIHNwZWNpZXMgdGhlIG9mZnNwcmluZyBvZiB0aGUKCQkJCQl5b3VuZyBhcmUgbW9yZSBpbXBlcmZlY3QgYW5kIGxpa2VseSB0byBwcm9kdWNlIGZlbWFsZSBjaGlsZHJlbiw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNvbWUgZWRpdG9ycyB3cml0ZSA8Zm9yZWlnbiBsYW5nPSJncmVlayI+zrjOt8674b27z4TOv866zrE8L2ZvcmVpZ24+IGFuZCBpbnRlcnByZXQg4oCYbW9yZSBsaWtlbHkgdG8gYmUgYm9ybgoJCQkJCQlmZW1hbGVzLuKAmSDvvIggPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs64zrfOu8+Fz4ThvbnOus6xPC9mb3JlaWduPiwKCQkJCQkJ4oCYbGlrZWx5IHRvIGJlYXIgZmVtYWxlcyzigJkgaXMgYXBwbGllZCB0byB0aGUgeW91bmcKCQkJCQkJcGFyZW50cyB0aGVtc2VsdmVzIGluIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBIQSA3NjZiLjI5Ij5BcmlzdG90LiBIaXN0LiBBbi4gNzY2YgoJCQkJCQkJMjk8L2JpYmw+Lu+8iTwvbm90ZT4gYW5kIHNtYWxsIGluIGZpZ3VyZSwgc28gdGhhdCB0aGUgc2FtZSB0aGluZwoJCQkJCW11c3QgbmVjZXNzYXJpbHkgb2NjdXIgaW4gdGhlIGh1bWFuIHJhY2UgYWxzby4gQW5kIGEgcHJvb2Ygb2YgdGhpcyBpcyB0aGF0IGluCgkJCQkJYWxsIHRoZSBzdGF0ZXMgd2hlcmUgaXQgaXMgdGhlIGxvY2FsIGN1c3RvbSB0byBtYXRlIHlvdW5nIG1lbiBhbmQgeW91bmcgd29tZW4sCgkJCQkJdGhlIHBlb3BsZSBhcmUgZGVmb3JtZWQgYW5kIHNtYWxsIG9mIGJvZHkuIEFuZCBhZ2FpbiB5b3VuZyB3b21lbiBsYWJvciBtb3JlLCBhbmQKCQkJCQltb3JlIG9mIHRoZW0gZGllIGluIGNoaWxkYmlydGg7IGluZGVlZCBhY2NvcmRpbmcgdG8gc29tZSBhY2NvdW50cyBzdWNoIHdhcyB0aGUKCQkJCQlyZWFzb24gd2h5IHRoZSBvcmFjbGU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxmb3JlaWduIGxhbmc9ImdyZWVrIj7OnOG9tCDPhOG9s868zr3OtSDOveG9s86xzr0g4byEzrvOv866zrE8L2ZvcmVpZ24+77yI4oCYY3V0IG5vdCBhIG5ldwoJCQkJCQlmdXJyb3figJnvvIkgc2Nob2wuPC9ub3RlPiB3YXMgZ2l2ZW48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRvIHRoZSBwZW9wbGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDUwMDQyODciIGtleT0idGduLDUwMDQyODciPlRyb2V6ZW48L3BsYWNlTmFtZT4sIGJlY2F1c2UgbWFueSB3ZXJlIGR5aW5nIG93aW5nIHRvIGl0cyBiZWluZyB0aGVpcgoJCQkJCWN1c3RvbSBmb3IgdGhlIHdvbWVuIHRvIG1hcnJ5IHlvdW5nLCBhbmQgaXQgZGlkIG5vdCByZWZlciB0byB0aGUgaGFydmVzdC4KCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTQuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhZ2FpbiBpdCBhbHNvIGNvbnRyaWJ1dGVzCgkJCQkJdG8gY2hhc3RpdHkgZm9yIHRoZSBiZXN0b3dhbCBvZiB3b21lbiBpbiBtYXJyaWFnZSB0byBiZSBtYWRlIHdoZW4gdGhleSBhcmUKCQkJCQlvbGRlciwgZm9yIGl0IGlzIHRob3VnaHQgdGhhdCB0aGV5IGFyZSBtb3JlIGxpY2VudGlvdXMgd2hlbiB0aGV5IGhhdmUgaGFkCgkJCQkJaW50ZXJjb3Vyc2UgaW4geW91dGguIEFsc28gdGhlIG1hbGVzIGFyZSB0aG91Z2h0IHRvIGJlIGFycmVzdGVkIGluIGJvZGlseSBncm93dGgKCQkJCQlpZiB0aGV5IGhhdmUgaW50ZXJjb3Vyc2Ugd2hpbGUgdGhlIHNlZWQgaXMgc3RpbGwgZ3Jvd2luZywgZm9yIHRoaXMgYWxzbyBoYXMgYQoJCQkJCWZpeGVkIHBlcmlvZCBhZnRlciBwYXNzaW5nIHdoaWNoIGl0IGlzIG5vIGxvbmdlciBwbGVudGlmdWwuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE0LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVyZWZvcmUgaXQgaXMgZml0dGluZyBmb3IgdGhlIHdvbWVuIHRvIGJlIG1hcnJpZWQKCQkJCQlhdCBhYm91dCB0aGUgYWdlIG9mIGVpZ2h0ZWVuIGFuZCB0aGUgbWVuIGF0IHRoaXJ0eS1zZXZlbiBvciBhIGxpdHRsZSBiZWZvcmU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSB3b3JkIOKAmGJlZm9yZeKAmSBpcyBhCgkJCQkJCWNvbmplY3R1cmFsIGluc2VydGlvbi48L25vdGU+4oCUZm9yIHRoYXQgd2lsbCBnaXZlIGxvbmcgZW5vdWdoIGZvcgoJCQkJCXRoZSB1bmlvbiB0byB0YWtlIHBsYWNlIHdpdGggdGhlaXIgYm9kaWx5IHZpZ29yIGF0IGl0cyBwcmltZSwgYW5kIGZvciBpdCB0bwoJCQkJCWFycml2ZSB3aXRoIGEgY29udmVuaWVudCBjb2luY2lkZW5jZSBvZiBkYXRlcyBhdCB0aGUgdGltZSB3aGVuIHByb2NyZWF0aW9uCgkJCQkJY2Vhc2VzLiBNb3Jlb3ZlciB0aGUgc3VjY2Vzc2lvbiBvZiB0aGUgY2hpbGRyZW4gdG8gdGhlIGVzdGF0ZXMsIGlmIHRoZWlyIGJpcnRoCgkJCQkJZHVseSBvY2N1cnMgc29vbiBhZnRlciB0aGUgcGFyZW50cyBtYXJyeSwgd2lsbCB0YWtlIHBsYWNlIHdoZW4gdGhleSBhcmUKCQkJCQliZWdpbm5pbmcgdGhlaXIgcHJpbWUsIGFuZCB3aGVuIHRoZSBwYXJlbnRzJyBwZXJpb2Qgb2Ygdmlnb3IgaGFzIG5vdyBjb21lIHRvIGEKCQkJCQljbG9zZSwgdG93YXJkcyB0aGUgYWdlIG9mIHNldmVudHkuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE0LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgcHJvcGVyIGFnZSB0aGVyZWZvcmUgZm9yIHVuaW9uIGhhcyBiZWVuIGRpc2N1c3NlZDsgYXMgdG8gdGhlIHByb3BlciB0aW1lcwoJCQkJCWluIHJlc3BlY3Qgb2YgdGhlIHNlYXNvbiB3ZSBtYXkgYWNjZXB0IHdoYXQgaXMgY3VzdG9tYXJ5IHdpdGggbW9zdCBwZW9wbGUsIHdobwoJCQkJCWhhdmUgcmlnaHRseSBkZWNpZGVkIGV2ZW4gYXMgaXQgaXMgdG8gcHJhY3Rpc2UgbWFyaXRhbCBjb2hhYml0YXRpb24gaW4gd2ludGVyLgoJCQkJCUFuZCBwZW9wbGUgc2hvdWxkIGFsc28gc3R1ZHkgZm9yIHRoZW1zZWx2ZXMsIHdoZW4gdGhlaXIgdGltZSBjb21lcywgdGhlCgkJCQkJdGVhY2hpbmdzIG9mIHBoeXNpY2lhbnMgYW5kIG5hdHVyYWwgcGhpbG9zb3BoZXJzIG9uIHRoZSBzdWJqZWN0IG9mIHRoZQoJCQkJCXByb2NyZWF0aW9uIG9mIGNoaWxkcmVuOyB0aGUgc3VpdGFibGUgYm9kaWx5IHNlYXNvbnMgYXJlIGFkZXF1YXRlbHkgZGlzY3Vzc2VkIGJ5CgkJCQkJdGhlIHBoeXNpY2lhbnMsIDxtaWxlc3RvbmUgbj0iMTMzNWIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGUgcXVlc3Rpb24gb2Ygd2VhdGhlciBieSB0aGUgbmF0dXJhbAoJCQkJCXBoaWxvc29waGVycywgd2hvIHNheSB0aGF0IG5vcnRoIHdpbmRzIGFyZSBtb3JlIGZhdm9yYWJsZSB0aGFuIHNvdXRoLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxNC44IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHBhcnRpY3VsYXIga2luZCBvZiBib2RpbHkgY29uc3RpdHV0aW9uCgkJCQkJaW4gdGhlIHBhcmVudHMgdGhhdCB3aWxsIGJlIG1vc3QgYmVuZWZpY2lhbCBmb3IgdGhlIG9mZnNwcmluZyBtdXN0IGJlIGR3ZWx0IG9uCgkJCQkJbW9yZSBpbiBkZXRhaWwgaW4gb3VyIGRpc2N1c3Npb24gb2YgdGhlIG1hbmFnZW1lbnQgb2YgY2hpbGRyZW48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgd2FzIG5ldmVyIHdyaXR0ZW4sIG9yIGhhcyBiZWVuCgkJCQkJCWxvc3QuPC9ub3RlPjsgaXQgaXMgc3VmZmljaWVudCB0byBzcGVhayBvZiBpdCBpbiBvdXRsaW5lIG5vdy4gVGhlIGF0aGxldGUncwoJCQkJCWhhYml0IG9mIGJvZHkgaXMgbm90IHNlcnZpY2VhYmxlIGZvciBib2RpbHkgZml0bmVzcyBhcyByZXF1aXJlZCBieSBhIGNpdGl6ZW4sCgkJCQkJbm9yIGZvciBoZWFsdGggYW5kIHBhcmVudGFnZSwgbm9yIHlldCBpcyBhIGhhYml0IHRoYXQgaXMgdG9vIHZhbGV0dWRpbmFyaWFuIGFuZAoJCQkJCXVuZml0IGZvciBsYWJvciwgYnV0IHRoZSBjb25kaXRpb24gdGhhdCBsaWVzIGJldHdlZW4gdGhlbS4gVGhlIGJvZGlseSBoYWJpdAoJCQkJCXRoZXJlZm9yZSBzaG91bGQgaGF2ZSBiZWVuIHRyYWluZWQgYnkgZXhlcmNpc2UsIGJ1dCBub3QgYnkgZXhlcmNpc2VzIHRoYXQgYXJlCgkJCQkJdmlvbGVudCwgYW5kIG5vdCBmb3Igb25lIGZvcm0gb2YgbGFib3Igb25seSwgYXMgaXMgdGhlIGF0aGxldGUncyBoYWJpdCBvZiBib2R5LAoJCQkJCWJ1dCBmb3IgdGhlIHB1cnN1aXRzIG9mIGZyZWUgbWVuLiBBbmQgdGhlc2UgYXJyYW5nZW1lbnRzIG11c3QgYmUgcHJvdmlkZWQgYWxpa2UKCQkJCQlmb3IgbWVuIGFuZCB3b21lbi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTQuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBwcmVnbmFudAoJCQkJCXdvbWVuIGFsc28gbXVzdCB0YWtlIGNhcmUgb2YgdGhlaXIgYm9kaWVzLCBub3QgYXZvaWRpbmcgZXhlcmNpc2Ugbm9yIGFkb3B0aW5nIGEKCQkJCQlsb3cgZGlldDsgdGhpcyBpdCBpcyBlYXN5IGZvciB0aGUgbGF3Z2l2ZXIgdG8gc2VjdXJlIGJ5IG9yZGVyaW5nIHRoZW0gdG8gbWFrZSBhCgkJCQkJam91cm5leSBkYWlseSBmb3IgdGhlIGR1ZSB3b3JzaGlwIG9mIHRoZSBkZWl0aWVzIHdob3NlIG9mZmljZSBpcyB0aGUgY29udHJvbCBvZgoJCQkJCWNoaWxkYmlydGguIEFzIHJlZ2FyZHMgdGhlIG1pbmQsIGhvd2V2ZXIsIG9uIHRoZSBjb250cmFyeSBpdCBzdWl0cyB0aGVtIHRvIHBhc3MKCQkJCQl0aGUgdGltZSBtb3JlIGluZG9sZW50bHkgdGhhbiBhcyByZWdhcmRzIHRoZWlyIGJvZGllczsgZm9yIGNoaWxkcmVuIGJlZm9yZSBiaXJ0aAoJCQkJCWFyZSBldmlkZW50bHkgYWZmZWN0ZWQgYnkgdGhlIG1vdGhlciBqdXN0IGFzIGdyb3dpbmcgcGxhbnRzIGFyZSBieSB0aGUKCQkJCQkJZWFydGguPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTQuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BcyB0byBleHBvc2luZwoJCQkJCQlvcjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+cmVhcmluZyB0aGUgY2hpbGRyZW4gYm9ybiwgbGV0CgkJCQkJdGhlcmUgYmUgYSBsYXcgdGhhdCBubyBkZWZvcm1lZCBjaGlsZCBzaGFsbCBiZSByZWFyZWQ7IGJ1dCBvbiB0aGUgZ3JvdW5kIG9mCgkJCQkJbnVtYmVyIG9mIGNoaWxkcmVuLCBpZiB0aGUgcmVndWxhciBjdXN0b21zIGhpbmRlciBhbnkgb2YgdGhvc2UgYm9ybiBiZWluZwoJCQkJCWV4cG9zZWQsIHRoZXJlIG11c3QgYmUgYSBsaW1pdCBmaXhlZCB0byB0aGUgcHJvY3JlYXRpb24gb2Ygb2Zmc3ByaW5nLCBhbmQgaWYgYW55CgkJCQkJcGVvcGxlIGhhdmUgYSBjaGlsZCBhcyBhIHJlc3VsdCBvZiBpbnRlcmNvdXJzZSBpbiBjb250cmF2ZW50aW9uIG9mIHRoZXNlCgkJCQkJcmVndWxhdGlvbnMsIGFib3J0aW9uIG11c3QgYmUgcHJhY3Rpc2VkIG9uIGl0IGJlZm9yZSBpdCBoYXMgZGV2ZWxvcGVkIHNlbnNhdGlvbgoJCQkJCWFuZCBsaWZlOyBmb3IgdGhlIGxpbmUgYmV0d2VlbiBsYXdmdWwgYW5kIHVubGF3ZnVsIGFib3J0aW9uIHdpbGwgYmUgbWFya2VkIGJ5CgkJCQkJdGhlIGZhY3Qgb2YgaGF2aW5nIHNlbnNhdGlvbiBhbmQgYmVpbmcgYWxpdmUuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE0LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHNpbmNlIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGZpdCBhZ2UgZm9yIGEgbWFuIGFuZCBmb3IgYQoJCQkJCXdvbWFuLCBhdCB3aGljaCB0aGV5IGFyZSB0byBiZWdpbiB0aGVpciB1bmlvbiwgaGFzIGJlZW4gZGVmaW5lZCwgbGV0IGl0IGFsc28gYmUKCQkJCQlkZWNpZGVkIGZvciBob3cgbG9uZyBhIHRpbWUgaXQgaXMgc3VpdGFibGUgZm9yIHRoZW0gdG8gc2VydmUgdGhlIHN0YXRlIGluIHRoZQoJCQkJCW1hdHRlciBvZiBwcm9kdWNpbmcgY2hpbGRyZW4uIEZvciB0aGUgb2Zmc3ByaW5nIG9mIHRvbyBlbGRlcmx5IHBhcmVudHMsIGFzIHRob3NlCgkJCQkJb2YgdG9vIHlvdW5nIG9uZXMsIGFyZSBib3JuIGltcGVyZmVjdCBib3RoIGluIGJvZHkgYW5kIG1pbmQsIGFuZCB0aGUgY2hpbGRyZW4gb2YKCQkJCQl0aG9zZSB0aGF0IGhhdmUgYXJyaXZlZCBhdCBvbGQgYWdlIGFyZSB3ZWFrbGluZ3MuIFRoZXJlZm9yZSB0aGUgcGVyaW9kIG11c3QgYmUKCQkJCQlsaW1pdGVkIHRvIGNvcnJlc3BvbmQgd2l0aCB0aGUgbWVudGFsIHByaW1lOyBhbmQgdGhpcyBpbiB0aGUgY2FzZSBvZiBtb3N0IG1lbiBpcwoJCQkJCXRoZSBhZ2Ugc3RhdGVkIGJ5IHNvbWUgb2YgdGhlIHBvZXRzLCB3aG8gbWVhc3VyZSBtZW4ncyBhZ2UgYnkgcGVyaW9kcyBvZiBzZXZlbgoJCQkJCQl5ZWFycyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPgoJCQkJCQk8YmlibCBkZWZhdWx0PSJOTyIgbj0iU29sLiBGci4gMjciPlNvbG9uIGZyLiAyNzwvYmlibD4KCQkJCQk8L25vdGU+4oCUaXQgaXMgYWJvdXQgdGhlIGFnZSBvZiBmaWZ0eS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTQuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVyZWZvcmUgcGVyc29ucyBleGNlZWRpbmcgdGhpcyBhZ2UgYnkgZm91ciBvciBmaXZlIHllYXJzCgkJCQkJbXVzdCBiZSBkaXNjaGFyZ2VkIGZyb20gdGhlIGR1dHkgb2YgcHJvZHVjaW5nIGNoaWxkcmVuIGZvciB0aGUgY29tbXVuaXR5LCBhbmQKCQkJCQlmb3IgdGhlIHJlc3Qgb2YgdGhlaXIgbGl2ZXMgaWYgdGhleSBoYXZlIGludGVyY291cnNlIGl0IG11c3QgYmUgbWFuaWZlc3RseSBmb3IKCQkJCQl0aGUgc2FrZSBvZiBoZWFsdGggb3IgZm9yIHNvbWUgb3RoZXIgc2ltaWxhciByZWFzb24uIEFzIHRvIGludGVyY291cnNlIHdpdGgKCQkJCQlhbm90aGVyIHdvbWFuIG9yIG1hbiwgaW4gZ2VuZXJhbCBpdCBtdXN0IGJlIGRpc2hvbm9yYWJsZSBmb3IgdGhlbSB0byBiZSBrbm93biB0bwoJCQkJCXRha2UgYW55IHBhcnQgaW4gaXQgaW4gYW55IGNpcmN1bXN0YW5jZXMgd2hhdHNvZXZlciBhcyBsb25nIGFzIHRoZXkgYXJlIGh1c2JhbmQKCQkJCQlhbmQgd2lmZSBhbmQgYmVhciB0aG9zZSBuYW1lcywgYnV0IGFueSB3aG8gbWF5IGJlIGRpc2NvdmVyZWQgZG9pbmcgYW55dGhpbmcgb2YKCQkJCQl0aGUgc29ydCBkdXJpbmcgdGhlaXIgcGVyaW9kIG9mIHBhcmVudGFnZSA8bWlsZXN0b25lIG49IjEzMzZhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5tdXN0IGJlIHB1bmlzaGVkIHdpdGggYSBsb3NzIG9mCgkJCQkJcHJpdmlsZWdlIHN1aXRlZCB0byB0aGUgb2ZmZW5jZS48bWlsZXN0b25lIGVkPSJQIiBuPSIxNS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZSBjaGlsZHJlbiBoYXZlIGJlZW4gYm9ybiwgdGhlCgkJCQkJcGFydGljdWxhciBtb2RlIG9mIHJlYXJpbmcgYWRvcHRlZCBtdXN0IGJlIGRlZW1lZCBhbiBpbXBvcnRhbnQgZGV0ZXJtaW5pbmcKCQkJCQlpbmZsdWVuY2UgaW4gcmVnYXJkIHRvIHRoZWlyIHBvd2VyIG9mIGJvZHkuIEl0IGFwcGVhcnMgZnJvbSBleGFtaW5pbmcgdGhlIG90aGVyCgkJCQkJYW5pbWFscywgYW5kIGlzIGFsc28gc2hvd24gYnkgdGhlIGZvcmVpZ24gcmFjZXMgdGhhdCBtYWtlIGl0IHRoZWlyIGFpbSB0byBrZWVwCgkJCQkJdXAgdGhlIG1pbGl0YXJ5IGhhYml0IG9mIGJvZHksIHRoYXQgYSBkaWV0IGdpdmluZyBhbiBhYnVuZGFuY2Ugb2YgbWlsayBpcyBtb3N0CgkJCQkJc3VpdGVkIHRvIHRoZSBib2RpZXMgb2YgY2hpbGRyZW4sIGFuZCBvbmUgdGhhdCBhbGxvd3MgcmF0aGVyIGxpdHRsZSB3aW5lIGJlY2F1c2UKCQkJCQlvZiB0aGUgZGlzZWFzZXMgdGhhdCBpdCBjYXVzZXMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE1LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Nb3Jlb3ZlciBpdCBpcyBhZHZhbnRhZ2VvdXMgdG8gc3ViamVjdCB0aGVtIHRvIGFzIG1hbnkgbW92ZW1lbnRzIGFzIGFyZQoJCQkJCXByYWN0aWNhYmxlIHdpdGggY2hpbGRyZW4gb2YgdGhhdCBhZ2UuIFRvIHByZXZlbnQgdGhlIGxpbWJzIGZyb20gYmVpbmcgZGlzdG9ydGVkCgkJCQkJb3dpbmcgdG8gc29mdG5lc3MsIHNvbWUgcmFjZXMgZXZlbiBub3cgZW1wbG95IGNlcnRhaW4gbWVjaGFuaWNhbCBhcHBsaWFuY2VzIHRoYXQKCQkJCQlrZWVwIHRoZSBib2RpZXMgb2YgaW5mYW50cyBmcm9tIGJlaW5nIHR3aXN0ZWQuIEFuZCBpdCBpcyBhbHNvIGFkdmFudGFnZW91cyB0bwoJCQkJCWFjY3VzdG9tIHRoZW0gYXQgb25jZSBmcm9tIGVhcmx5IGNoaWxkaG9vZCB0byBjb2xkLCBmb3IgdGhpcyBpcyBtb3N0IHVzZWZ1bCBib3RoCgkJCQkJZm9yIGhlYWx0aCBhbmQgd2l0aCBhIHZpZXcgdG8gbWlsaXRhcnkgc2VydmljZS4gSGVuY2UgYW1vbmcgbWFueSBub24tR3JlZWsgcmFjZXMKCQkJCQlpdCBpcyBjdXN0b21hcnkgaW4gdGhlIGNhc2Ugb2Ygc29tZSBwZW9wbGVzIHRvIHdhc2ggdGhlIGNoaWxkcmVuIGF0IGJpcnRoIGJ5CgkJCQkJZGlwcGluZyB0aGVtIGluIGEgY29sZCByaXZlciwgYW5kIHdpdGggb3RoZXJzLCBmb3IgaW5zdGFuY2UgdGhlIENlbHRzLCB0byBnaXZlCgkJCQkJdGhlbSBzY2FudHkgY292ZXJpbmcuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjE1LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Gb3IgaXQgaXMKCQkJCQliZXR0ZXIgdG8gaW51cmUgdGhlbSBhdCB0aGUgdmVyeSBzdGFydCB0byBldmVyeXRoaW5nIHBvc3NpYmxlLCBidXQgdG8gaW51cmUgdGhlbQoJCQkJCQlncmFkdWFsbHk7PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgdGhlIGJvZGlseSBoYWJpdCBvZgoJCQkJCWNoaWxkcmVuIGlzIG5hdHVyYWxseSB3ZWxsIGZpdHRlZCBieSB3YXJtdGggdG8gYmUgdHJhaW5lZCB0byBiZWFyIGNvbGQuIEluIHRoZQoJCQkJCWVhcmxpZXN0IHBlcmlvZCBvZiBsaWZlIHRoZW4gaXQgaXMgZXhwZWRpZW50IHRvIGVtcGxveSB0aGlzIG9yIGEgc2ltaWxhciBtZXRob2QKCQkJCQlvZiBudXJzaW5nOyA8bWlsZXN0b25lIGVkPSJQIiBuPSIxNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIHRoZSBuZXh0IHBlcmlvZCB0bwoJCQkJCXRoaXMsIHVwIHRvIHRoZSBhZ2Ugb2YgZml2ZSwgd2hpY2ggaXQgaXMgbm90IHdlbGwgdG8gZGlyZWN0IGFzIHlldCB0byBhbnkgc3R1ZHkKCQkJCQlub3IgdG8gY29tcHVsc29yeSBsYWJvcnMsIGluIG9yZGVyIHRoYXQgdGhleSBtYXkgbm90IGhpbmRlciB0aGUgZ3Jvd3RoLCBzaG91bGQKCQkJCQluZXZlcnRoZWxlc3MgYmUgYWxsb3dlZCBlbm91Z2ggbW92ZW1lbnQgdG8gYXZvaWQgYm9kaWx5IGluYWN0aXZpdHk7IGFuZCB0aGlzCgkJCQkJZXhlcmNpc2Ugc2hvdWxkIGJlIG9idGFpbmVkIGJ5IG1lYW5zIG9mIHZhcmlvdXMgcHVyc3VpdHMsIHBhcnRpY3VsYXJseSBwbGF5LiBCdXQKCQkJCQlldmVuIHRoZSBnYW1lcyBtdXN0IG5vdCBiZSB1bmZpdCBmb3IgZnJlZW1lbiwgbm9yIGxhYm9yaW91cywgbm9yIHVuZGlzY2lwbGluZWQuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjE1LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbHNvIHRoZSBxdWVzdGlvbiBvZiB0aGUga2luZAoJCQkJCW9mIHRhbGVzIGFuZCBzdG9yaWVzIHRoYXQgc2hvdWxkIGJlIHRvbGQgdG8gY2hpbGRyZW4gb2YgdGhpcyBhZ2UgbXVzdCBiZQoJCQkJCWF0dGVuZGVkIHRvIGJ5IHRoZSBvZmZpY2lhbHMgY2FsbGVkIENoaWxkcmVuJ3MgVHV0b3JzLiBGb3IgYWxsIHN1Y2ggYW11c2VtZW50cwoJCQkJCXNob3VsZCBwcmVwYXJlIHRoZSB3YXkgZm9yIHRoZWlyIGxhdGVyIHB1cnN1aXRzOyBoZW5jZSBtb3N0IGNoaWxkcmVuJ3MgZ2FtZXMKCQkJCQlzaG91bGQgYmUgaW1pdGF0aW9ucyBvZiB0aGUgc2VyaW91cyBvY2N1cGF0aW9ucyBvZiBsYXRlciBsaWZlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxNS42IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIGxlZ2lzbGF0b3JzIGluCgkJCQkJCXRoZTx0aXRsZT5MYXdzPC90aXRsZT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBMYXdzIDc5MmEiIHZhbGlkPSJ5ZXMiPlBsYXQuIExhd3MgNzkyYTwvYmlibD4uIFBsYXRvIG1lcmVseSBzYXlzIHRoYXQgYQoJCQkJCQljaGlsZCdzIGNyeWluZyBzaG93cyBpdCB0byBiZSBhbm5veWVkLCBhbmQgdGhhdCBpdCBvdWdodCB0byBoYXZlIGFzIGxpdHRsZQoJCQkJCQlwYWluIGFzIHBvc3NpYmxlIG9yIGVsc2UgaXQgd2lsbCBncm93IHVwIG1vcm9zZS48L25vdGU+IGZvcmJpZCBhbGxvd2luZwoJCQkJCWNoaWxkcmVuIHRvIGhhdmUgcGFyb3h5c21zIG9mIGNyeWluZywgYnV0IHRoaXMgcHJvaGliaXRpb24gaXMgYSBtaXN0YWtlOyB2aW9sZW50CgkJCQkJY3J5aW5nIGNvbnRyaWJ1dGVzIHRvIGdyb3d0aCwgZm9yIGl0IHNlcnZlcyBpbiBhIHdheSBhcyBleGVyY2lzZSBmb3IgdGhlIGJvZHksCgkJCQkJc2luY2UgaG9sZGluZyB0aGUgYnJlYXRoIGlzIHRoZSBzdHJlbmd0aCBnaXZpbmcgZmFjdG9yIGluIGhhcmQgbGFib3IsIGFuZCB0aGlzCgkJCQkJdGFrZXMgcGxhY2UgYWxzbyB3aXRoIGNoaWxkcmVuIHdoZW4gdGhleSBzdHJldGNoIHRoZW1zZWx2ZXMgaW4gY3J5aW5nLiBUaGUKCQkJCQlUdXRvcnMgbXVzdCBzdXBlcnZpc2UgdGhlIGNoaWxkcmVuJ3MgcGFzdGltZXMsIGFuZCBpbiBwYXJ0aWN1bGFyIG11c3Qgc2VlIHRoYXQKCQkJCQl0aGV5IGFzc29jaWF0ZSBhcyBsaXR0bGUgYXMgcG9zc2libGUgd2l0aCBzbGF2ZXMuIEZvciBjaGlsZHJlbiBvZiB0aGlzIGFnZSwKCQkJCQkJPG1pbGVzdG9uZSBuPSIxMzM2YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+YW5kIHVwIHRvIHNldmVuIHllYXJzIG9sZCwgbXVzdCBuZWNlc3NhcmlseSBiZSByZWFyZWQgYXQgaG9tZTsKCQkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTUuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPnNvIGl0IGlzIHJlYXNvbmFibGUgdG8gc3VwcG9zZQoJCQkJCXRoYXQgZXZlbiBhdCB0aGlzIGFnZSB0aGV5IG1heSBhY3F1aXJlIGEgdGFpbnQgb2YgaWxsaWJlcmFsaXR5IGZyb20gd2hhdCB0aGV5CgkJCQkJaGVhciBhbmQgc2VlLiBUaGUgbGF3Z2l2ZXIgb3VnaHQgdGhlcmVmb3JlIHRvIGJhbmlzaCBpbmRlY2VudCB0YWxrLCBhcyBtdWNoIGFzCgkJCQkJYW55dGhpbmcgZWxzZSwgb3V0IG9mIHRoZSBzdGF0ZSBhbHRvZ2V0aGVyIO+8iGZvciBsaWdodCB0YWxrIGFib3V0CgkJCQkJYW55dGhpbmcgZGlzZ3JhY2VmdWwgc29vbiBwYXNzZXMgaW50byBhY3Rpb27vvInigJRzbyBtb3N0IG9mIGFsbAoJCQkJCWZyb20gYW1vbmcgdGhlIHlvdW5nLCBzbyB0aGF0IHRoZXkgbWF5IG5vdCBzYXkgbm9yIGhlYXIgYW55dGhpbmcgb2YgdGhlIHNvcnQ7CgkJCQkJYW5kIGFueWJvZHkgZm91bmQgc2F5aW5nIG9yIGRvaW5nIGFueSBvZiB0aGUgdGhpbmdzIHByb2hpYml0ZWQsIGlmIGhlIGlzIG9mIGZyZWUKCQkJCQlzdGF0aW9uIGJ1dCBub3QgeWV0IHByb21vdGVkIHRvIHJlY2xpbmluZyBhdCB0aGUgcHVibGljIG1lYWxzLCBtdXN0IGJlIHB1bmlzaGVkCgkJCQkJd2l0aCBtYXJrcyBvZiBkaXNob25vciBhbmQgd2l0aCBiZWF0aW5nLCBhbmQgYW4gb2xkZXIgb2ZmZW5kZXIgbXVzdCBiZSBwdW5pc2hlZAoJCQkJCXdpdGggbWFya3Mgb2YgZGlzaG9ub3IgZGVncmFkaW5nIHRvIGEgZnJlZSBtYW4sIGJlY2F1c2Ugb2YgaGlzIHNsYXZpc2ggYmVoYXZpb3IuCgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjE1LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgc2luY2Ugd2UgYmFuaXNoIGFueSB0YWxrIG9mCgkJCQkJdGhpcyBraW5kLCBjbGVhcmx5IHdlIG11c3QgYWxzbyBiYW5pc2ggdGhlIHNlZWluZyBvZiBlaXRoZXIgcGljdHVyZXMgb3IKCQkJCQlyZXByZXNlbnRhdGlvbnMgdGhhdCBhcmUgaW5kZWNlbnQuIFRoZSBvZmZpY2lhbHMgbXVzdCB0aGVyZWZvcmUgYmUgY2FyZWZ1bCB0aGF0CgkJCQkJdGhlcmUgbWF5IGJlIG5vIHNjdWxwdHVyZSBvciBwYWludGluZyB0aGF0IHJlcHJlc2VudHMgaW5kZWNlbnQgYWN0aW9ucywgZXhjZXB0CgkJCQkJaW4gdGhlIHRlbXBsZXMgb2YgYSBjZXJ0YWluIGNsYXNzIG9mIGdvZHMgdG8gd2hvbSB0aGUgbGF3IGFsbG93cyBldmVuCgkJCQkJc2N1cnJpbGl0eTsgYnV0IGluIHJlZ2FyZCB0byB0aGVzZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIE1TLgoJCQkJCQl0ZXh0IGdpdmVzIOKAmGFuZCBpbiBhZGRpdGlvbiB0byB0aGVzZeKAmTsgYW5kIHRoZSB3b3JkCgkJCQkJCeKAmHN0aWxs4oCZIG1heSBiZSBhbiBpbnRlcnBvbGF0aW9uLjwvbm90ZT4gdGhlIGxhdyBwZXJtaXRzCgkJCQkJbWVuIHN0aWxsIG9mIHN1aXRhYmxlIGFnZSB0byB3b3JzaGlwIHRoZSBnb2RzIGJvdGggb24gdGhlaXIgb3duIGJlaGFsZiBhbmQgb24KCQkJCQliZWhhbGYgb2YgdGhlIGNoaWxkcmVuIGFuZCB3b21lbi48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIG49IjE1LjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdGhlIHlvdW5nZXIgb25lcyBtdXN0IG5vdAoJCQkJCWJlIGFsbG93ZWQgaW4gdGhlIGF1ZGllbmNlIGF0IGxhbXBvb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JYW1iaWMKCQkJCQkJdmVyc2VzLCBvZnRlbiBhYnVzaXZlIGFuZCBpbmRlY2VudCwgcmVjaXRlZCBhdCBmZXN0aXZhbHMgb2YgRGlvbnlzdXMuPC9ub3RlPgoJCQkJCWFuZCBhdCBjb21lZHksIGJlZm9yZSB0aGV5IHJlYWNoIHRoZSBhZ2UgYXQgd2hpY2ggdGhleSB3aWxsIG5vdyBoYXZlIHRoZSByaWdodAoJCQkJCXRvIHJlY2xpbmUgYXQgdGFibGUgaW4gY29tcGFueSBhbmQgdG8gZHJpbmsgZGVlcGx5LCBhbmQgYXQgd2hpY2ggdGhlaXIgZWR1Y2F0aW9uCgkJCQkJd2lsbCByZW5kZXIgYWxsIG9mIHRoZW0gaW1tdW5lIHRvIHRoZSBoYXJtZnVsIGVmZmVjdHMgb2Ygc3VjaCB0aGluZ3MuIEZvciB0aGUKCQkJCQlwcmVzZW50IHRoZXJlZm9yZSB3ZSBoYXZlIG1lcmVseSBtZW50aW9uZWQgdGhlc2UgbWF0dGVycyBpbiBwYXNzaW5nLCBidXQgbGF0ZXIKCQkJCQl3ZSBtdXN0IHN0b3AgdG8gc2V0dGxlIHRoZW0gbW9yZSBkZWZpbml0ZWx5LCBmaXJzdCBkaXNjdXNzaW5nIGZ1bGx5IHdoZXRoZXIKCQkJCQlsZWdpc2xhdGlvbiBwcm9oaWJpdGluZyB0aGUgYXR0ZW5kYW5jZSBvZiB0aGUgeW91bmcgaXMgZGVzaXJhYmxlIG9yIG5vdCwgYW5kIGhvdwoJCQkJCXN1Y2ggcHJvaGliaXRpb24gc2hvdWxkIGJlIHB1dCBpbiBmb3JjZTsgYnV0IG9uIHRoZSBwcmVzZW50IG9jY2FzaW9uIHdlIGhhdmUKCQkJCQl0b3VjaGVkIG9uIHRoZSBxdWVzdGlvbiBvbmx5IGluIHRoZSBtYW5uZXIgbmVjZXNzYXJ5LiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciBwZXJoYXBzIHRoZSB0cmFnaWMgYWN0b3IgVGhlb2RvcnVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIGdyZWF0IEF0aGVuaWFuIHBlcmZvcm1lciBvZiBTb3Bob2NsZXM7IGhlCgkJCQkJCXRvb2sgdGhlIHBhcnQgb2YgQW50aWdvbmUuPC9ub3RlPiB1c2VkIHRvIHB1dCB0aGUgbWF0dGVyIG5vdCBiYWRseTogaGUgaGFkCgkJCQkJbmV2ZXIgb25jZSBhbGxvd2VkIGFueWJvZHkgdG8gcHJvZHVjZSBoaXMgcGFydDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+TG9vc2VseSBwdXQgZm9yIOKAmHRvIGFwcGVhciBvbiB0aGUKCQkJCQkJc3RhZ2Uu4oCZPC9ub3RlPiBiZWZvcmUgaGltLCBub3QgZXZlbiBvbmUgb2YgdGhlIHBvb3IgYWN0b3JzLCBhcyBoZQoJCQkJCXNhaWQgdGhhdCBhdWRpZW5jZXMgYXJlIGF0dHJhY3RlZCBieSB3aGF0IHRoZXkgaGVhciBmaXJzdDsgYW5kIHRoaXMgaGFwcGVucwoJCQkJCWFsaWtlIGluIHJlZ2FyZCB0byBvdXIgZGVhbGluZ3Mgd2l0aCBwZW9wbGUgYW5kIHRvIG91ciBkZWFsaW5ncyB3aXRoCgkJCQkJdGhpbmdz4oCUYWxsIHRoYXQgY29tZXMgZmlyc3Qgd2UgbGlrZSBiZXR0ZXIuIE9uIHRoaXMgYWNjb3VudCB3ZSBvdWdodAoJCQkJCXRvIG1ha2UgYWxsIGJhc2UgdGhpbmdzIHVuZmFtaWxpYXIgdG8gdGhlIHlvdW5nLCBhbmQgZXNwZWNpYWxseSB0aG9zZSB0aGF0CgkJCQkJaW52b2x2ZSBlaXRoZXIgZGVwcmF2aXR5IG9yIG1hbGlnbml0eS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCB3aGVuCgkJCQkJdGhlIGZpdmUgeWVhcnMgZnJvbSB0d28gdG8gc2V2ZW4gaGF2ZSBwYXNzZWQsIHRoZSBjaGlsZHJlbiBtdXN0IG5vdyBiZWNvbWUKCQkJCQlzcGVjdGF0b3JzIGF0IHRoZSBsZXNzb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGluIGd5bW5hc3RpY3MKCQkJCQkJYW5kIG11c2ljLjwvbm90ZT4gd2hpY2ggdGhleSB3aWxsIHRoZW1zZWx2ZXMgaGF2ZSB0byBsZWFybi4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iMTUuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhlcmUgYXJlIHR3byBhZ2VzIGNvcnJlc3BvbmRpbmcgdG8KCQkJCQl3aGljaCBlZHVjYXRpb24gc2hvdWxkIGJlIGRpdmlkZWTigJR0aGVyZSBtdXN0IGJlIGEgYnJlYWsgYWZ0ZXIgdGhlCgkJCQkJcGVyaW9kIGZyb20gc2V2ZW4gdG8gcHViZXJ0eSwgYW5kIGFnYWluIGFmdGVyIHRoYXQgZnJvbSBwdWJlcnR5IHRvIHR3ZW50eS1vbmUuCgkJCQkJRm9yIHRob3NlIHdobyBkaXZpZGUgdGhlIGFnZXMgYnkgcGVyaW9kcyBvZiBzZXZlbiB5ZWFycyBhcmUgZ2VuZXJhbGx5IHNwZWFraW5nCgkJCQkJbm90IHdyb25nLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIE1TUy4gZ2l2ZSDigJhub3QKCQkJCQkJcmlnaHQu4oCZPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgbj0iMTMzN2EiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBpdCBpcyBwcm9wZXIgdG8gZm9sbG93IHRoZSBkaXZpc2lvbiBvZiBuYXR1cmUsIGZvciBhbGwgYXJ0IGFuZCBlZHVjYXRpb24KCQkJCQlhaW0gYXQgZmlsbGluZyB1cCBuYXR1cmUncyBkZWZpY2llbmNpZXMuIEZpcnN0IHRoZXJlZm9yZSB3ZSBtdXN0IGNvbnNpZGVyCgkJCQkJd2hldGhlciBzb21lIHJlZ3VsYXRpb24gaW4gcmVnYXJkIHRvIHRoZSBib3lzIG91Z2h0IHRvIGJlIGluc3RpdHV0ZWQsIG5leHQKCQkJCQl3aGV0aGVyIGl0IGlzIGFkdmFudGFnZW91cyBmb3IgdGhlaXIgc3VwZXJ2aXNpb24gdG8gYmUgY29uZHVjdGVkIG9uIGEgcHVibGljCgkJCQkJZm9vdGluZyBvciBpbiBhIHByaXZhdGUgbWFubmVyIGFzIGlzIGRvbmUgYXQgcHJlc2VudCBpbiBtb3N0IHN0YXRlcywgYW5kIHRoaXJkbHkKCQkJCQlvZiB3aGF0IHBhcnRpY3VsYXIgbmF0dXJlIHRoaXMgc3VwZXJ2aXNpb24gb3VnaHQgdG8gYmUuPC9wPgoJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMyM2EiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjE0IiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1323a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Cb29rIDQgaW4gc29tZSBlZGl0aW9ucy48L25vdGU+VGhlCgkJCQkJc3R1ZGVudCB3aG8gaXMgZ29pbmcgdG8gbWFrZSBhIHN1aXRhYmxlIGludmVzdGlnYXRpb24gb2YgdGhlIGJlc3QgZm9ybSBvZgoJCQkJCWNvbnN0aXR1dGlvbiBtdXN0IG5lY2Vzc2FyaWx5IGRlY2lkZSBmaXJzdCBvZiBhbGwgd2hhdCBpcyB0aGUgbW9zdCBkZXNpcmFibGUKCQkJCQltb2RlIG9mIGxpZmUuIEZvciB3aGlsZSB0aGlzIGlzIHVuY2VydGFpbiBpdCBpcyBhbHNvIGJvdW5kIHRvIGJlIHVuY2VydGFpbiB3aGF0CgkJCQkJaXMgdGhlIGJlc3QgY29uc3RpdHV0aW9uLCBzaW5jZSBpdCBpcyB0byBiZSBleHBlY3RlZCB0aGF0IHRoZSBwZW9wbGUgdGhhdCBoYXZlCgkJCQkJdGhlIGJlc3QgZm9ybSBvZiBnb3Zlcm5tZW50IGF2YWlsYWJsZSB1bmRlciB0aGVpciBnaXZlbiBjb25kaXRpb25zIHdpbGwgZmFyZSB0aGUKCQkJCQliZXN0LCBleGNlcHRpb25hbCBjaXJjdW1zdGFuY2VzIGFwYXJ0LiBIZW5jZSB3ZSBtdXN0IGZpcnN0PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFncmVlIHdoYXQgbGlmZSBpcyBtb3N0IGRlc2lyYWJsZSBmb3IgYWxtb3N0IGFsbAoJCQkJCW1lbiwgYW5kIGFmdGVyIHRoYXQgd2hldGhlciB0aGUgc2FtZSBsaWZlIGlzIG1vc3QgZGVzaXJhYmxlIGJvdGggZm9yIHRoZQoJCQkJCWNvbW11bml0eSBhbmQgZm9yIHRoZSBpbmRpdmlkdWFsLCBvciBhIGRpZmZlcmVudCBvbmUuIDwvdHJhbnNsYXRpb24+"
translation['7.1323b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QmVsaWV2aW5nIHRoZXJlZm9yZSBpbiB0aGUgYWRlcXVhY3kgb2YgbXVjaCBvZiB3aGF0IGlzCgkJCQkJc2FpZCBldmVuIGluIGV4dHJhbmVvdXMgZGlzY291cnNlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gMy42LgoJCQkJCQlJdCBpcyBkZWJhdGVkIHdoZXRoZXIgdGhlIHBocmFzZSByZWZlcnMgdG8gQXJpc3RvdGxlJ3Mgb3duIHBvcHVsYXIgd3JpdGluZ3MsCgkJCQkJCW9yIHRvIHRob3NlIG9mIG90aGVyIHBoaWxvc29waGVycywgb3IgdG8gZGlzY3Vzc2lvbnMgb2YgdGhlIHN1YmplY3QgaW4KCQkJCQkJb3JkaW5hcnkgaW50ZXJjb3Vyc2UuPC9ub3RlPiBvbiB0aGUgc3ViamVjdCBvZiB0aGUgYmVzdCBsaWZlLCBsZXQgdXMgbWFrZQoJCQkJCXVzZSBvZiB0aGVzZSBwcm9ub3VuY2VtZW50cyBub3cuIEZvciBhcyByZWdhcmRzIGF0IGFsbCBldmVudHMgb25lIGNsYXNzaWZpY2F0aW9uCgkJCQkJb2YgdGhpbmdzIGdvb2QsIHB1dHRpbmcgdGhlbSBpbiB0aHJlZSBncm91cHMsIGV4dGVybmFsIGdvb2RzLCBnb29kcyBvZiB0aGUgc291bAoJCQkJCWFuZCBnb29kcyBvZiB0aGUgYm9keSwgYXNzdXJlZGx5IG5vYm9keSB3b3VsZCBkZW55IHRoYXQgdGhlIGlkZWFsbHkgaGFwcHkgYXJlCgkJCQkJYm91bmQgdG8gcG9zc2VzcyBhbGwgdGhyZWUuIEZvciBub2JvZHkgd291bGQgY2FsbCBhIG1hbiBpZGVhbGx5IGhhcHB5IHRoYXQgaGFzCgkJCQkJbm90IGdvdCBhIHBhcnRpY2xlIG9mIGNvdXJhZ2Ugbm9yIG9mIHRlbXBlcmFuY2Ugbm9yIG9mIGp1c3RpY2Ugbm9yIG9mIHdpc2RvbSwKCQkJCQlidXQgaXMgYWZyYWlkIG9mIHRoZSBmbGllcyB0aGF0IGZsdXR0ZXIgYnkgaGltLCBjYW5ub3QgcmVmcmFpbiBmcm9tIGFueSBvZiB0aGUKCQkJCQltb3N0IG91dHJhZ2VvdXMgYWN0aW9ucyBpbiBvcmRlciB0byBncmF0aWZ5IGEgZGVzaXJlIHRvIGVhdCBvciB0byBkcmluaywgcnVpbnMKCQkJCQloaXMgZGVhcmVzdCBmcmllbmRzIGZvciB0aGUgc2FrZSBvZiBhIGZhcnRoaW5nLCBhbmQgc2ltaWxhcmx5IGluIG1hdHRlcnMgb2YgdGhlCgkJCQkJaW50ZWxsZWN0IGFsc28gaXMgYXMgc2Vuc2VsZXNzIGFuZCBtaXN0YWtlbiBhcyBhbnkgY2hpbGQgb3IgbHVuYXRpYy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgYWx0aG91Z2ggdGhlc2UgYXJlIHByb3Bvc2l0aW9ucyB3aGljaAoJCQkJCXdoZW4gdXR0ZXJlZCBldmVyeWJvZHkgd291bGQgYWdyZWUgdG8sIHlldCBtZW4gZGlmZmVyIGFib3V0IGFtb3VudCBhbmQgZGVncmVlcwoJCQkJCW9mIHZhbHVlLiBUaGV5IHRoaW5rIGl0IGlzIGVub3VnaCB0byBwb3NzZXNzIGhvd2V2ZXIgc21hbGwgYSBxdWFudGl0eSBvZiB2aXJ0dWUsCgkJCQkJYnV0IG9mIHdlYWx0aCwgcmljaGVzLCBwb3dlciwgZ2xvcnkgYW5kIGV2ZXJ5dGhpbmcgb2YgdGhhdCBraW5kIHRoZXkgc2VlayBhCgkJCQkJbGFyZ2VyIGFuZCBsYXJnZXIgYW1vdW50IHdpdGhvdXQgbGltaXQuIFdlIG9uIHRoZSBvdGhlciBoYW5kIHNoYWxsIHRlbGwgdGhlbQoJCQkJCXRoYXQgaXQgaXMgZWFzeSB0byBhcnJpdmUgYXQgY29udmljdGlvbiBvbiB0aGVzZSBtYXR0ZXJzIGluIHRoZSBsaWdodCBvZiB0aGUKCQkJCQlhY3R1YWwgZmFjdHMsIHdoZW4gb25lIHNlZXMgdGhhdCBtZW4gZG8gbm90IGFjcXVpcmUgYW5kIHByZXNlcnZlIHRoZSB2aXJ0dWVzIGJ5CgkJCQkJbWVhbnMgb2YgdGhlc2UgZXh0ZXJuYWwgZ29vZHMsIGJ1dCBleHRlcm5hbCBnb29kcyBieSBtZWFucyBvZiB0aGUgdmlydHVlcywKCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMjNiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1323b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGF0IHdoZXRoZXIgdGhlIGxpZmUgb2YgaGFwcGluZXNzIGNvbnNpc3RzIGZvciBtYW4gaW4KCQkJCQllbmpveW1lbnQgb3IgaW4gdmlydHVlIG9yIGluIGJvdGgsIGl0IGlzIGZvdW5kIGluIGxhcmdlciBtZWFzdXJlIHdpdGggdGhvc2Ugd2hvCgkJCQkJYXJlIG9mIHN1cnBhc3NpbmdseSBoaWdoIGN1bHRpdmF0aW9uIGluIGNoYXJhY3RlciBhbmQgaW50ZWxsZWN0IGJ1dCBvbmx5CgkJCQkJbW9kZXJhdGUgYXMgcmVnYXJkcyB0aGUgZXh0ZXJuYWwgYWNxdWlzaXRpb24gb2YgZ29vZHMsIHRoYW4gd2l0aCB0aG9zZSB3aG8gb3duCgkJCQkJbW9yZSB0aGFuIHRoZXkgY2FuIHVzZSBvZiB0aGUgbGF0dGVyIGJ1dCBhcmUgZGVmaWNpZW50IGluIHRoZSBmb3JtZXIuIDwvdHJhbnNsYXRpb24+"
translation['7.1323b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS40IiB1bml0PSJMb2ViIGNoYXAiIC8+Tm90IGJ1dCB3aGF0IHRoZSB0cnV0aCBpcyBhbHNvIGVhc2lseSBzZWVuCgkJCQkJaWYgd2UgY29uc2lkZXIgdGhlIG1hdHRlciBpbiB0aGUgbGlnaHQgb2YgcmVhc29uLiBGb3IgZXh0ZXJuYWwgZ29vZHMgaGF2ZSBhCgkJCQkJbGltaXQsIGFzIGhhcyBhbnkgaW5zdHJ1bWVudCDvvIhhbmQgZXZlcnl0aGluZyB1c2VmdWwgaXMgdXNlZnVsIGZvcgoJCQkJCXNvbWV0aGluZ++8iSwgc28gYW4gZXhjZXNzaXZlIGFtb3VudCBvZiB0aGVtIG11c3QgbmVjZXNzYXJpbHkgZG8gaGFybSwgb3IKCQkJCQlkbyBubyBnb29kLCB0byBpdHMgcG9zc2Vzc29yOyB3aGVyZWFzIHdpdGggYW55IG9mIHRoZSBnb29kcyBvZiB0aGUgc291bCwgdGhlCgkJCQkJbW9yZSBhYnVuZGFudCBpdCBpcywgdGhlIG1vcmUgdXNlZnVsIGl0IG11c3QgYmXigJRpZiBldmVuIHRvIGdvb2RzIG9mCgkJCQkJdGhlIHNvdWwgbm90IG9ubHkgdGhlIHRlcm0g4oCYbm9ibGXigJkgYnV0IGFsc28gdGhlIHRlcm0KCQkJCQnigJh1c2VmdWzigJkgY2FuIGJlIHByb3Blcmx5IGFwcGxpZWQuIEFuZCBicm9hZGx5LCBpdCBpcyBjbGVhcgoJCQkJCXRoYXQgd2Ugc2hhbGwgZGVjbGFyZSB0aGF0IHRoZSBiZXN0IGNvbmRpdGlvbiBvZiBlYWNoIHBhcnRpY3VsYXIgdGhpbmcsCgkJCQkJY29tcGFyaW5nIHRoaW5ncyB3aXRoIG9uZSBhbm90aGVyLCBjb3JyZXNwb25kcyBpbiBwb2ludCBvZiBzdXBlcmlvcml0eSB0byB0aGUKCQkJCQlkaXN0YW5jZSB0aGF0IHN1YnNpc3RzIGJldHdlZW4gdGhlIHRoaW5ncyBvZiB3aGljaCB3ZSBkZWNsYXJlIHRoZXNlIGNvbmRpdGlvbnMKCQkJCQl0aGVtc2VsdmVzIHRvIGJlIGNvbmRpdGlvbnMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmUuZy4gdGhlIGZpbmVzdAoJCQkJCQltYW4gZXhjZWxzIHRoZSBmaW5lc3QgbW9ua2V5IHRvIHRoZSBkZWdyZWUgaW4gd2hpY2ggdGhlIHNwZWNpZXMgbWFuIGV4Y2VscwoJCQkJCQl0aGUgc3BlY2llcyBtb25rZXkuPC9ub3RlPiBIZW5jZSBpbmFzbXVjaCBhcyBvdXIgc291bCBpcyBhIG1vcmUgdmFsdWFibGUKCQkJCQl0aGluZyBib3RoIGFic29sdXRlbHkgYW5kIHJlbGF0aXZlbHkgdG8gb3Vyc2VsdmVzIHRoYW4gZWl0aGVyIG91ciBwcm9wZXJ0eSBvcgoJCQkJCW91ciBib2R5LCB0aGUgYmVzdCBjb25kaXRpb25zIG9mIHRoZXNlIHRoaW5ncyBtdXN0IG5lY2Vzc2FyaWx5IHN0YW5kIGluIHRoZSBzYW1lCgkJCQkJcmVsYXRpb24gdG8gb25lIGFub3RoZXIgYXMgdGhlIHRoaW5ncyB0aGVtc2VsdmVzIGRvLiBNb3Jlb3ZlciBpdCBpcyBmb3IgdGhlIHNha2UKCQkJCQlvZiB0aGUgc291bCB0aGF0IHRoZXNlIGdvb2RzIGFyZSBpbiB0aGVpciBuYXR1cmUgZGVzaXJhYmxlLCBhbmQgdGhhdCBhbGwgd2lzZQoJCQkJCW1lbiBtdXN0PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmNob29zZSB0aGVtLCBub3QgdGhlIHNvdWwgZm9yCgkJCQkJdGhlIHNha2Ugb2YgdGhvc2Ugb3RoZXIgdGhpbmdzLiA8L3RyYW5zbGF0aW9uPg=="
translation['7.1324a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS41IiB1bml0PSJMb2ViIGNoYXAiIC8+TGV0CgkJCQkJdXMgdGhlbiB0YWtlIGl0IGFzIGFncmVlZCBiZXR3ZWVuIHVzIHRoYXQgdG8gZWFjaCBtYW4gdGhlcmUgZmFsbHMganVzdCBzbyBsYXJnZQoJCQkJCWEgbWVhc3VyZSBvZiBoYXBwaW5lc3MgYXMgaGUgYWNoaWV2ZXMgb2YgdmlydHVlIGFuZCB3aXNkb20gYW5kIG9mIHZpcnR1b3VzIGFuZAoJCQkJCXdpc2UgYWN0aW9uOiBpbiBldmlkZW5jZSBvZiB0aGlzIHdlIGhhdmUgdGhlIGNhc2Ugb2YgR29kLCB3aG8gaXMgaGFwcHkgYW5kCgkJCQkJYmxlc3NlZCwgYnV0IGlzIHNvIG9uIGFjY291bnQgb2Ygbm8gZXh0ZXJuYWwgZ29vZHMsIGJ1dCBvbiBhY2NvdW50IG9mIGhpbXNlbGYsCgkJCQkJYW5kIGJ5IGJlaW5nIG9mIGEgY2VydGFpbiBxdWFsaXR5IGluIGhpcyBuYXR1cmU7IHNpbmNlIGl0IGlzIGFsc28gZm9yIHRoaXMKCQkJCQlyZWFzb24gdGhhdCBwcm9zcGVyaXR5IGlzIG5lY2Vzc2FyaWx5IGRpZmZlcmVudCBmcm9tIGhhcHBpbmVzc+KAlGZvciB0aGUKCQkJCQljYXVzZSBvZiBnb29kcyBleHRlcm5hbCB0byB0aGUgc291bCBpcyB0aGUgc3BvbnRhbmVvdXMgYW5kIGZvcnR1bmUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkFyaXN0b3RsZSB0YXVnaHQgdGhhdCBzb21lIGV2ZW50cyBhcmUgdGhlCgkJCQkJCXJlc3VsdCBvZiB0aGUgdW5kZXNpZ25lZCBpbnRlcmFjdGlvbiBvZiB0d28gbGluZXMgb2YgY2F1c2F0aW9uIGluIG5hdHVyZSdzCgkJCQkJCWRlc2lnbjsgaGUgZGVub3RlZCB0aGlzIO+8iDHvvIkgaW4gZ2VuZXJhbCwgYnkg4oCYdGhlCgkJCQkJCWF1dG9tYXRpY+KAmSBvciBzZWxmLWFjdGluZyDvvIhyZXByZXNlbnRlZCBpbiBMYXRpbiBieQoJCQkJCQkJPGVtcGggY2xhc3M9InRyYW5zbGF0aW9uIj5zcG9udGU8L2VtcGg+LCBzcG9udGFuZW91c++8iSwg77yIMu+8iSBhcwoJCQkJCQljb25jZXJuaW5nIG1hbiwgYnkg4oCYZm9ydHVuZS7igJk8L25vdGU+IGJ1dCBub2JvZHkgaXMganVzdAoJCQkJCW9yIHRlbXBlcmF0ZSBhcyBhIHJlc3VsdCBvZiBvciBvd2luZyB0byB0aGUgYWN0aW9uIG9mIGZvcnR1bmUuIEFuZCBjb25uZWN0ZWQgaXMKCQkJCQlhIHRydXRoIHJlcXVpcmluZyB0aGUgc2FtZSBhcmd1bWVudHMgdG8gcHJvdmUgaXQsIHRoYXQgaXQgaXMgYWxzbyB0aGUgYmVzdAoJCQkJCXN0YXRlLCBhbmQgdGhlIG9uZSB0aGF0IGRvZXMgd2VsbCw8ZW1waCBjbGFzcz0idHJhbnNsYXRpb24iPnNwb250ZTwvZW1waD4sIHNwb250YW5lb3Vz77yJLCDvvIgy77yJIGFzCgkJCQkJCWNvbmNlcm5pbmcgbWFuLCBieSDigJhmb3J0dW5lLuKAmTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgY29tbW9uCgkJCQkJCXBsYXkgb24gdGhlIGFtYmlndWl0eSBvZiDigJhkbyB3ZWxsLOKAmSBtZWFuaW5nIGVpdGhlcgoJCQkJCQnigJhwcm9zcGVy4oCZIG9yIOKAmGFjdCByaWdodGx5LuKAmTwvbm90ZT4KCQkJCQl0aGF0IGlzIGhhcHB5LiBCdXQgdG8gZG8gd2VsbCBpcyBpbXBvc3NpYmxlIHNhdmUgZm9yIHRob3NlIHdobyBkbyBnb29kIGFjdGlvbnMsCgkJCQkJYW5kIHRoZXJlIGlzIG5vIGdvb2QgYWN0aW9uIGVpdGhlciBvZiBhIG1hbiBvciBvZiBhIHN0YXRlIHdpdGhvdXQgdmlydHVlIGFuZAoJCQkJCXdpc2RvbTsgYW5kIGNvdXJhZ2UsIGp1c3RpY2UgYW5kIHdpc2RvbSBiZWxvbmdpbmcgdG8gYSBzdGF0ZSBoYXZlIHRoZSBzYW1lCgkJCQkJbWVhbmluZyBhbmQgZm9ybSBhcyBoYXZlIHRob3NlIHZpcnR1ZXMgd2hvc2UgcG9zc2Vzc2lvbiBiZXN0b3dzIHRoZSB0aXRsZXMgb2YKCQkJCQlqdXN0IGFuZCB3aXNlIGFuZCB0ZW1wZXJhdGUgb24gYW4gaW5kaXZpZHVhbCBodW1hbiBiZWluZy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVzZSByZW1hcmtzCgkJCQkJaG93ZXZlciBtdXN0IHN1ZmZpY2UgYnkgd2F5IG9mIHByZWZhY2UgdG8gb3VyIGRpc2NvdXJzZTogZm9yIG5laXRoZXIgaXMgaXQKCQkJCQlwb3NzaWJsZSB0byBhYnN0YWluIGZyb20gdG91Y2hpbmcgb24gdGhlc2Ugc3ViamVjdHMgYWx0b2dldGhlciwgbm9yIGlzIGl0CgkJCQkJZmVhc2libGUgdG8gZm9sbG93IG91dCBhbGwgdGhlIGFyZ3VtZW50cyB0aGF0IGFyZSBnZXJtYW5lIHRvIHRoZW0sIGZvciB0aGF0IGlzCgkJCQkJdGhlIGJ1c2luZXNzIG9mIGFub3RoZXIgY291cnNlIG9mIHN0dWR5LiBGb3IgdGhlIHByZXNlbnQgbGV0IHVzIHRha2UgaXQgYXMKCQkJCQllc3RhYmxpc2hlZCB0aGF0IHRoZSBiZXN0IGxpZmUsIHdoZXRoZXIgc2VwYXJhdGVseSBmb3IgYW4gaW5kaXZpZHVhbCBvcgoJCQkJCWNvbGxlY3RpdmVseSBmb3Igc3RhdGVzLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMyNGEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1324a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmlzIHRoZSBsaWZlIGNvbmpvaW5lZCB3aXRoIHZpcnR1ZSBmdXJuaXNoZWQgd2l0aAoJCQkJCXN1ZmZpY2llbnQgbWVhbnMgZm9yIHRha2luZyBwYXJ0IGluIHZpcnR1b3VzIGFjdGlvbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDEwOTlhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTA5OWEKCQkJCQkJCTMyPC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExNzlhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTE3OWEgNAoJCQkJCQkJZmYuPC9iaWJsPjwvbm90ZT47IHdoaWxlIG9iamVjdGlvbnMgdG8gdGhpcyBwb3NpdGlvbiB3ZSBtdXN0IHBhc3Mgb3ZlcgoJCQkJCWluIHRoZSBjb3Vyc2Ugb2YgdGhlIHByZXNlbnQgaW5xdWlyeSwgYW5kIHJlc2VydmUgdGhlbSBmb3IgZnV0dXJlIGNvbnNpZGVyYXRpb24sCgkJCQkJaWYgYW55b25lIGJlIGZvdW5kIHRvIGRpc2FncmVlIHdpdGggd2hhdCBoYXMgYmVlbiBzYWlkLjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMDk5YSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDEwOTlhCgkJCQkJCQkzMjwvYmlibD4sIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTc5YSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDExNzlhIDQKCQkJCQkJCWZmLjwvYmlibD48L3RyYW5zbGF0aW9uPg=="
translation['7.1324a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk9uIHRoZSBvdGhlciBoYW5kIGl0CgkJCQkJcmVtYWlucyB0byBzYXkgd2hldGhlciB0aGUgaGFwcGluZXNzIG9mIGEgc3RhdGUgaXMgdG8gYmUgcHJvbm91bmNlZCB0aGUgc2FtZSBhcwoJCQkJCXRoYXQgb2YgZWFjaCBpbmRpdmlkdWFsIG1hbiwgb3Igd2hldGhlciBpdCBpcyBkaWZmZXJlbnQuIEhlcmUgdG9vIHRoZSBhbnN3ZXIgaXMKCQkJCQljbGVhcjogZXZlcnlib2R5IHdvdWxkIGFncmVlIHRoYXQgaXQgaXMgdGhlIHNhbWU7IGZvciBhbGwgdGhvc2Ugd2hvIGJhc2UgdGhlCgkJCQkJZ29vZCBsaWZlIHVwb24gd2VhbHRoIGluIHRoZSBjYXNlIG9mIHRoZSBpbmRpdmlkdWFsLCBhbHNvIGFzc2lnbiBmZWxpY2l0eSB0byB0aGUKCQkJCQlzdGF0ZSBhcyBhIHdob2xlIGlmIGl0IGlzIHdlYWx0aHk7IGFuZCBhbGwgd2hvIHZhbHVlIHRoZSBsaWZlIG9mIHRoZSB0eXJhbnQKCQkJCQloaWdoZXN0LCB3b3VsZCBhbHNvIHNheSB0aGF0IHRoZSBzdGF0ZSB3aGljaCBydWxlcyB0aGUgd2lkZXN0IGVtcGlyZSBpcyB0aGUKCQkJCQloYXBwaWVzdDsgYW5kIGlmIGFueSBib2R5IGFjY2VwdHMgdGhlIGluZGl2aWR1YWwgYXMgaGFwcHkgb24gYWNjb3VudCBvZiB2aXJ0dWUsCgkJCQkJaGUgd2lsbCBhbHNvIHNheSB0aGF0IHRoZSBzdGF0ZSB3aGljaCBpcyB0aGUgYmV0dGVyIG1vcmFsbHkgaXMgdGhlIGhhcHBpZXIuCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZXJlIG5vdyBhcmlzZSB0aGVzZSB0d28KCQkJCQlxdWVzdGlvbnMgdGhhdCByZXF1aXJlIGNvbnNpZGVyYXRpb246IGZpcnN0LCB3aGljaCBtb2RlIG9mIGxpZmUgaXMgdGhlIG1vcmUKCQkJCQlkZXNpcmFibGUsIHRoZSBsaWZlIG9mIGFjdGl2ZSBjaXRpemVuc2hpcCBhbmQgcGFydGljaXBhdGlvbiBpbiBwb2xpdGljcywgb3IKCQkJCQlyYXRoZXIgdGhlIGxpZmUgb2YgYW4gYWxpZW4gYW5kIHRoYXQgb2YgZGV0YWNobWVudCBmcm9tIHRoZSBwb2xpdGljYWwKCQkJCQlwYXJ0bmVyc2hpcDsgbmV4dCwgd2hhdCBjb25zdGl0dXRpb24gYW5kIHdoYXQgb3JnYW5pemF0aW9uIG9mIGEgc3RhdGUgaXMgdG8gYmUKCQkJCQlkZWVtZWQgdGhlIGJlc3Qs4oCUZWl0aGVyIG9uIHRoZSBhc3N1bXB0aW9uIHRoYXQgdG8gdGFrZSBhbiBhY3RpdmUgcGFydAoJCQkJCWluIHRoZSBzdGF0ZSBpcyBkZXNpcmFibGUgZm9yIGV2ZXJ5Ym9keSwgb3IgdGhhdCBpdCBpcyB1bmRlc2lyYWJsZSBmb3Igc29tZSBtZW4KCQkJCQlhbHRob3VnaCBkZXNpcmFibGUgZm9yIG1vc3QuIEJ1dCBhcyBpdCBpczxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50aGUgbGF0dGVyIHF1ZXN0aW9uIHRoYXQgaXMgdGhlIGJ1c2luZXNzIG9mIHBvbGl0aWNhbCBzdHVkeSBhbmQKCQkJCQlzcGVjdWxhdGlvbiwgYW5kIG5vdCB0aGUgcXVlc3Rpb24gb2Ygd2hhdCBpcyBkZXNpcmFibGUgZm9yIHRoZSBpbmRpdmlkdWFsLCBhbmQKCQkJCQlhcyBpdCBpcyB0aGUgaW52ZXN0aWdhdGlvbiBvZiBwb2xpdGljcyB0aGF0IHdlIGhhdmUgbm93IHRha2VuIHVwLCB0aGUgZm9ybWVyCgkJCQkJcXVlc3Rpb24gd291bGQgYmUgYSBzaWRlIGlzc3VlLCBhbmQgdGhlIGxhdHRlciBpcyB0aGUgYnVzaW5lc3Mgb2YgcG9saXRpY2FsCgkJCQkJCWlucXVpcnkuPC90cmFuc2xhdGlvbj4="
translation['7.1324b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBpdCBpcyBjbGVhciB0aGF0IHRoZSBiZXN0IGNvbnN0aXR1dGlvbiBpcyB0aGUgc3lzdGVtIHVuZGVyCgkJCQkJd2hpY2ggYW55Ym9keSB3aGF0c29ldmVyIHdvdWxkIGJlIGJlc3Qgb2ZmIGFuZCB3b3VsZCBsaXZlIGluIGZlbGljaXR5OyBidXQgdGhlCgkJCQkJcXVlc3Rpb24gaXMgcmFpc2VkIGV2ZW4gb24gdGhlIHBhcnQgb2YgdGhvc2Ugd2hvIGFncmVlIHRoYXQgdGhlIGxpZmUgYWNjb21wYW5pZWQKCQkJCQlieSB2aXJ0dWUgaXMgdGhlIG1vc3QgZGVzaXJhYmxlLCB3aGV0aGVyIHRoZSBsaWZlIG9mIGNpdGl6ZW5zaGlwIGFuZCBhY3Rpdml0eSBpcwoJCQkJCWRlc2lyYWJsZSBvciByYXRoZXIgYSBsaWZlIHJlbGVhc2VkIGZyb20gYWxsIGV4dGVybmFsIGFmZmFpcnMsIGZvciBleGFtcGxlIHNvbWUKCQkJCQlmb3JtIG9mIGNvbnRlbXBsYXRpdmUgbGlmZSwgd2hpY2ggaXMgc2FpZCBieSBzb21lIHRvIGJlIHRoZSBvbmx5IGxpZmUgdGhhdCBpcwoJCQkJCQlwaGlsb3NvcGhpYy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUgR3JlZWsgc2hvdWxkIGJlCgkJCQkJCWFsdGVyZWQgdG8gZ2l2ZSDigJh3aGljaCBhbG9uZSBpcyBzYWlkIHRvIGJlIGRlc2lyYWJsZSBieSBzb21lCgkJCQkJCXBoaWxvc29waGVycy7igJk8L25vdGU+IEZvciBpdCBpcyBtYW5pZmVzdCB0aGF0IHRoZXNlIGFyZSB0aGUgdHdvCgkJCQkJbW9kZXMgb2YgbGlmZSBwcmluY2lwYWxseSBjaG9zZW4gYnkgdGhlIG1lbiBtb3N0IGFtYml0aW91cyBvZiBleGNlbGxpbmcgaW4KCQkJCQl2aXJ0dWUsIGJvdGggaW4gcGFzdCB0aW1lcyBhbmQgYXQgdGhlIHByZXNlbnQgZGF54oCUSSBtZWFuIHRoZSBsaWZlIG9mCgkJCQkJcG9saXRpY3MgYW5kIHRoZSBsaWZlIG9mIHBoaWxvc29waHkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGl0IG1ha2VzIG5vIGxpdHRsZSBkaWZmZXJlbmNlIHdoaWNoIHdheSB0aGUgdHJ1dGggbGllczsgZm9yIGFzc3VyZWRseSB0aGUKCQkJCQl3aXNlIGFyZSBib3VuZCB0byBhcnJhbmdlIHRoZWlyIGFmZmFpcnMgaW4gdGhlIGRpcmVjdGlvbiBvZiB0aGUgYmV0dGVyCgkJCQkJZ29hbOKAlGFuZCB0aGlzIGFwcGxpZXMgdG8gdGhlIHN0YXRlIGNvbGxlY3RpdmVseSBhcyB3ZWxsIGFzIHRvIHRoZQoJCQkJCWluZGl2aWR1YWwgaHVtYW4gYmVpbmcuIFNvbWUgcGVyc29ucyB0aGluayB0aGF0IGVtcGlyZSBvdmVyIG9uZSdzIG5laWdoYm9ycywgaWYKCQkJCQlkZXNwb3RpY2FsbHkgZXhlcmNpc2VkLCBpbnZvbHZlcyBhIGRlZmluaXRlIGluanVzdGljZSBvZiB0aGUgZ3JlYXRlc3Qga2luZCwgYW5kCgkJCQkJaWYgY29uc3RpdHV0aW9uYWxseSwgYWx0aG91Z2ggaXQgY2FycmllcyBubyBpbmp1c3RpY2UsIHlldCBpcyBhIGhpbmRyYW5jZSB0byB0aGUKCQkJCQlydWxlcidzIG93biB3ZWxsLWJlaW5nOyBidXQgb3RoZXJzIGhvbGQgYWxtb3N0IHRoZSBvcHBvc2l0ZSB2aWV3IHRvCgkJCQkJdGhlc2XigJR0aGV5IHRoaW5rIHRoYXQgdGhlIGxpZmUgb2YgYWN0aW9uIGFuZCBjaXRpemVuc2hpcCBpcyB0aGUgb25seQoJCQkJCWxpZmUgZml0IGZvciBhIG1hbiwgc2luY2Ugd2l0aCBlYWNoIG9mIHRoZSB2aXJ0dWVzIGl0cyBleGVyY2lzZSBpbiBhY3Rpb25zIGlzCgkJCQkJanVzdCBhcyBwb3NzaWJsZSBmb3IgbWVuIGVuZ2FnZWQgaW4gcHVibGljIGFmZmFpcnMgYW5kIGluIHBvbGl0aWNzIGFzIGZvciB0aG9zZQoJCQkJCXdobyBsaXZlIGEgcHJpdmF0ZSBsaWZlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMyNGIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1324b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1324b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+U29tZQoJCQkJCXBlb3BsZSB0aGVuIGhvbGQgdGhlIGZvcm1lciB2aWV3LCB3aGlsZSBvdGhlcnMgZGVjbGFyZSB0aGF0IHRoZSBkZXNwb3RpYyBhbmQKCQkJCQl0eXJhbm5pY2FsIGZvcm0gb2YgY29uc3RpdHV0aW9uIGFsb25lIGFjaGlldmVzIGhhcHBpbmVzczsgYW5kIGluIHNvbWUgc3RhdGVzIGl0CgkJCQkJaXMgYWxzbyB0aGUgZGlzdGluY3RpdmUgYWltIG9mIHRoZSBjb25zdGl0dXRpb24gYW5kIHRoZSBsYXdzIHRvIGVuYWJsZSB0aGVtIHRvCgkJCQkJZXhlcmNpc2UgZGVzcG90aWMgcnVsZSBvdmVyIHRoZWlyIG5laWdoYm9ycy4gSGVuY2UgZXZlbiB0aG91Z2ggd2l0aCBtb3N0IHBlb3BsZXMKCQkJCQltb3N0IG9mIHRoZSBsZWdhbCBvcmRpbmFuY2VzIGhhdmUgYmVlbiBsYWlkIGRvd24gdmlydHVhbGx5IGF0IHJhbmRvbSwKCQkJCQluZXZlcnRoZWxlc3MgaWYgdGhlcmUgYXJlIHBsYWNlcyB3aGVyZSB0aGUgbGF3cyBhaW0gYXQgb25lIGRlZmluaXRlIG9iamVjdCwgdGhhdAoJCQkJCW9iamVjdCBpcyBpbiBhbGwgY2FzZXMgcG93ZXIsIGFzIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIwNTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjA1NiI+Q3JldGU8L3BsYWNlTmFtZT4gYm90aAoJCQkJCXRoZSBzeXN0ZW0gb2YgZWR1Y2F0aW9uIGFuZCB0aGUgbWFzcyBvZiB0aGUgbGF3cyBhcmUgZnJhbWVkIGluIHRoZSBtYWluIHdpdGggYQoJCQkJCXZpZXcgdG8gd2FyOyBhbmQgYWxzbyBhbW9uZyBhbGwgdGhlIG5vbi1IZWxsZW5pYyBuYXRpb25zIHRoYXQgYXJlIHN0cm9uZyBlbm91Z2gKCQkJCQl0byBleHBhbmQgYXQgdGhlIGV4cGVuc2Ugb2Ygb3RoZXJzLCBtaWxpdGFyeSBzdHJlbmd0aCBoYXMgYmVlbiBoZWxkIGluIGhvbm9yLAoJCQkJCWZvciBleGFtcGxlLCBhbW9uZyB0aGUgU2N5dGhpYW5zLCBQZXJzaWFucywgVGhyYWNpYW5zIGFuZCBDZWx0cy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JbmRlZWQgYW1vbmcgc29tZSBwZW9wbGVzIHRoZXJlIGFyZSBldmVuCgkJCQkJY2VydGFpbiBsYXdzIHN0aW11bGF0aW5nIG1pbGl0YXJ5IHZhbG9yOyBmb3IgaW5zdGFuY2UgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDYXJ0aGFnZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ2FydGhhZ2UiPkNhcnRoYWdlPC9wbGFjZU5hbWU+LCB3ZSBhcmUgdG9sZCwgd2FycmlvcnMgcmVjZWl2ZQoJCQkJCXRoZSBkZWNvcmF0aW9uIG9mIGFybWxldHMgb2YgdGhlIHNhbWUgbnVtYmVyIGFzIHRoZSBjYW1wYWlnbnMgb24gd2hpY2ggdGhleSBoYXZlCgkJCQkJc2VydmVkOyBhbmQgYXQgb25lIHRpbWUgdGhlcmUgd2FzIGFsc28gYSBsYXcgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDY2NjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwNjY2NyI+TWFjZWRvbmlhPC9wbGFjZU5hbWU+IHRoYXQgYSBtYW4gd2hvIGhhZCBuZXZlciBraWxsZWQgYW4gZW5lbXkgbXVzdCB3ZWFyCgkJCQkJaGlzIGhhbHRlciBpbnN0ZWFkIG9mIGEgYmVsdC4gQW1vbmcgU2N5dGhpYW4gdHJpYmVzIGF0IGEgY2VydGFpbiBmZXN0aXZhbCBhIGN1cAoJCQkJCXdhcyBjYXJyaWVkIHJvdW5kIGZyb20gd2hpY2ggYSBtYW4gdGhhdCBoYWQgbm90IGtpbGxlZCBhbiBlbmVteSB3YXMgbm90IGFsbG93ZWQKCQkJCQl0byBkcmluay4gQW1vbmcgdGhlIEliZXJpYW5zLCBhIHdhcmxpa2UgcmFjZSwgdGhleSBmaXggc21hbGwgc3BpdHM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IgcGVyaGFwcyDigJhwb2ludGVkCgkJCQkJCXN0b25lcy7igJk8L25vdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmluIHRoZQoJCQkJCWVhcnRoIHJvdW5kIGEgbWFuJ3MgZ3JhdmUgY29ycmVzcG9uZGluZyBpbiBudW1iZXIgdG8gdGhlIGVuZW1pZXMgaGUgaGFzIGtpbGxlZC4KCQkJCQlTbyB3aXRoIG90aGVyIHJhY2VzIHRoZXJlIGFyZSBtYW55IG90aGVyIHByYWN0aWNlcyBvZiBhIHNpbWlsYXIga2luZCwgc29tZQoJCQkJCWVzdGFibGlzaGVkIGJ5IGxhdyBhbmQgb3RoZXJzIGJ5IGN1c3RvbS48L3RyYW5zbGF0aW9uPg=="
translation['7.1325a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi43IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5ldmVydGhlbGVzcyB0aG9zZSB3aG8gd2lzaAoJCQkJCXRvIGV4YW1pbmUgdGhlIG1hdHRlciBjbG9zZWx5IG1pZ2h0IHBlcmhhcHMgdGhpbmsgaXQgZXhjZWVkaW5nbHkgc3RyYW5nZSB0aGF0IGl0CgkJCQkJc2hvdWxkIGJlIHRoZSBidXNpbmVzcyBvZiBhIHN0YXRlc21hbiB0byBiZSBhYmxlIHRvIGRldmlzZSBtZWFucyBvZiBob2xkaW5nCgkJCQkJZW1waXJlIGFuZCBtYXN0ZXJ5IG92ZXIgdGhlIG5laWdoYm9yaW5nIHBlb3BsZXMgd2hldGhlciB0aGV5IGRlc2lyZSBpdCBvciBub3QuCgkJCQkJSG93IGNhbiB0aGF0IGJlIHdvcnRoeSBvZiBhIHN0YXRlc21hbiBvciBsYXdnaXZlciB3aGljaCBpcyBub3QgZXZlbiBsYXdmdWw/IGFuZAoJCQkJCWdvdmVybm1lbnQgaXMgbm90IGxhd2Z1bCB3aGVuIGl0IGlzIGNhcnJpZWQgb24gbm90IG9ubHkganVzdGx5IGJ1dCBhbHNvCgkJCQkJdW5qdXN0bHnigJRhbmQgc3VwZXJpb3Igc3RyZW5ndGggbWF5IGJlIHVuanVzdGx5IGV4ZXJjaXNlZC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Nb3Jlb3ZlciB3ZSBkbyBub3Qgc2VlIHRoaXMgaW4gdGhlIG90aGVyCgkJCQkJc2NpZW5jZXMgZWl0aGVyOiBpdCBpcyBubyBwYXJ0IG9mIGEgcGh5c2ljaWFuJ3Mgb3Igc2hpcC1jYXB0YWluJ3MgYnVzaW5lc3MgdG8KCQkJCQl1c2UgZWl0aGVyIHBlcnN1YXNpb24gb3IgY29tcHVsc2lvbiB1cG9uIHRoZSBwYXRpZW50cyBpbiB0aGUgb25lIGNhc2UgYW5kIHRoZQoJCQkJCQljcmV3PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yIHBlcmhhcHMg4oCYdGhlCgkJCQkJCXBhc3NlbmdlcnMu4oCZPC9ub3RlPiBpbiB0aGUgb3RoZXIuIFlldCBtb3N0IHBlb3BsZXMgc2VlbSB0byB0aGluawoJCQkJCXRoYXQgZGVzcG90aWMgcnVsZSBpcyBzdGF0ZXNtYW5zaGlwLCBhbmQgYXJlIG5vdCBhc2hhbWVkIHRvIHByYWN0aXNlIHRvd2FyZHMKCQkJCQlvdGhlcnMgdHJlYXRtZW50IHdoaWNoIHRoZXkgZGVjbGFyZSB0byBiZSB1bmp1c3QgYW5kIGRldHJpbWVudGFsIGZvciB0aGVtc2VsdmVzOwoJCQkJCWZvciBpbiB0aGVpciBvd24gaW50ZXJuYWwgYWZmYWlycyB0aGV5IGRlbWFuZCBqdXN0IGdvdmVybm1lbnQsIHlldCBpbiB0aGVpcgoJCQkJCXJlbGF0aW9ucyB3aXRoIG90aGVyIHBlb3BsZXMgdGhleSBwYXkgbm8gYXR0ZW50aW9uIHRvIGp1c3RpY2UuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi45IiB1bml0PSJMb2ViIGNoYXAiIC8+WWV0IGl0IGlzIHN0cmFuZ2UgaWYgdGhlcmUgaXMgbm90IGEgbmF0dXJhbAoJCQkJCWRpc3RpbmN0aW9uIGJldHdlZW4gcGVvcGxlcyBzdWl0ZWQgdG8gYmUgZGVzcG90aWNhbGx5IHJ1bGVkIGFuZCB0aG9zZSBub3QKCQkJCQlzdWl0ZWQ7IHNvIHRoYXQgaWYgdGhpcyBpcyBzbywgaXQgaXMgbm90IHByb3BlciB0byBhdHRlbXB0IHRvIGV4ZXJjaXNlIGRlc3BvdGljCgkJCQkJZ292ZXJubWVudCBvdmVyIGFsbCBwZW9wbGUsIGJ1dCBvbmx5IG92ZXIgdGhvc2Ugc3VpdGVkIGZvciBpdCwganVzdCBhcyBpdCBpcyBub3QKCQkJCQlyaWdodCB0byBodW50IGh1bWFuIGJlaW5ncyBmb3IgZm9vZCBvciBzYWNyaWZpY2UsIGJ1dCBvbmx5IHRoZSBnYW1lIHN1aXRhYmxlIGZvcgoJCQkJCXRoaXMgcHVycG9zZSwgdGhhdCBpcywgc3VjaCB3aWxkIGNyZWF0dXJlcyBhcyBhcmUgZ29vZCB0byBlYXQuIEFuZCBtb3Jlb3ZlciBpdAoJCQkJCWlzIHBvc3NpYmxlIGV2ZW4gZm9yIGEgc2luZ2xlIHN0YXRlIGluIGlzb2xhdGlvbiB0byBiZSBoYXBweSwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMjVhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1325a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnRoYXQgaXMKCQkJCQlvbmUgdGhhdCBpcyB3ZWxsIGdvdmVybmVkLCBpbiBhcyBtdWNoIGFzIGl0IGlzIGNvbmNlaXZhYmxlIHRoYXQgYSBzdGF0ZSBtaWdodCBiZQoJCQkJCWNhcnJpZWQgb24gc29tZXdoZXJlIGluIGlzb2xhdGlvbiwgZW5qb3lpbmcgZ29vZCBsYXdzLCBhbmQgaW4gc3VjaCBhIHN0YXRlIHRoZQoJCQkJCXN5c3RlbSBvZiB0aGUgY29uc3RpdHV0aW9uIHdpbGwgbm90IGJlIGZyYW1lZCBmb3IgdGhlIHB1cnBvc2Ugb2Ygd2FyIG9yIG9mCgkJCQkJb3ZlcnBvd2VyaW5nIGl0cyBlbmVtaWVz4oCUZm9yIHdlIGFyZSB0byBzdXBwb3NlIGV2ZXJ5dGhpbmcgdG8gZG8gd2l0aAoJCQkJCXdhciB0byBiZSBleGNsdWRlZC4gPC90cmFuc2xhdGlvbj4="
translation['7.1325a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IGlzIGV2aWRlbnQKCQkJCQl0aGVyZWZvcmUgdGhhdCB3aGlsZSBhbGwgbWlsaXRhcnkgcHVyc3VpdHMgYXJlIHRvIGJlIGRlZW1lZCBob25vcmFibGUsIHRoZXkgYXJlCgkJCQkJbm90IHNvIGFzIGJlaW5nIHRoZSB1bHRpbWF0ZSBlbmQgb2YgYWxsIHRoaW5ncyBidXQgYXMgbWVhbnMgdG8gdGhhdCBlbmQuIEFuZCBpdAoJCQkJCWlzIHRoZSBidXNpbmVzcyBvZiB0aGUgZ29vZCBsYXdnaXZlciB0byBzdHVkeSBob3cgYSBzdGF0ZSwgYSByYWNlIG9mIG1lbiBvciBhbnkKCQkJCQlvdGhlciBjb21tdW5pdHkgaXMgdG8gcGFydGFrZSBvZiB0aGUgZ29vZCBsaWZlIGFuZCB0aGUgaGFwcGluZXNzIHBvc3NpYmxlIGZvcgoJCQkJCXRoZW0uIFNvbWUgaG93ZXZlciBvZiB0aGUgcmVndWxhdGlvbnMgbGFpZCBkb3duIHdpbGwgdmFyeTsgYW5kIGluIGNhc2UgdGhlcmUKCQkJCQlleGlzdCBhbnkgbmVpZ2hib3IgcGVvcGxlcywgaXQgaXMgdGhlIGJ1c2luZXNzIG9mIHRoZSBsZWdpc2xhdGl2ZSBhcnQgdG8KCQkJCQljb25zaWRlciB3aGF0IHNvcnQgb2YgZXhlcmNpc2VzIHNob3VsZCBiZSBwcmFjdGlzZWQgaW4gcmVsYXRpb24gdG8gd2hhdCBzb3J0IG9mCgkJCQkJbmVpZ2hib3JzIG9yIGhvdyB0aGUgc3RhdGUgaXMgdG8gYWRvcHQgdGhlIHJlZ3VsYXRpb25zIHRoYXQgYXJlIHN1aXRhYmxlIGluCgkJCQkJcmVsYXRpb24gdG8gZWFjaC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHRoaXMgcXVlc3Rpb24gb2YgdGhlIHByb3BlcgoJCQkJCWVuZCBmb3IgdGhlIGJlc3QgY29uc3RpdHV0aW9ucyB0byBhaW0gYXQgbWF5IHJlY2VpdmUgaXRzIGR1ZSBjb25zaWRlcmF0aW9uCgkJCQkJCWxhdGVyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTMsIDE0Ljwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZQoJCQkJCXR1cm4gdG8gdGhvc2Ugd2hvLCB3aGlsZSBhZ3JlZWluZyB0aGF0IHRoZSBsaWZlIG9mIHZpcnR1ZSBpcyB0aGUgbW9zdCBkZXNpcmFibGUsCgkJCQkJZGlmZmVyIGFib3V0IHRoZSB3YXkgaW4gd2hpY2ggdGhhdCBsaWZlIHNob3VsZCBiZSBwdXJzdWVkLiBTb21lIGRpc2FwcHJvdmUgb2YKCQkJCQlob2xkaW5nIG9mZmljZSBpbiB0aGUgc3RhdGUsIHRoaW5raW5nIHRoYXQgdGhlIGxpZmUgb2YgdGhlIGZyZWUgbWFuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmlzIGRpZmZlcmVudCBmcm9tIHRoZSBsaWZlIG9mIHBvbGl0aWNzIGFuZAoJCQkJCWlzIHRoZSBtb3N0IGRlc2lyYWJsZSBvZiBhbnk7IHdoZXJlYXMgb3RoZXJzIHRoaW5rIHRoZSBwb2xpdGljYWwgbGlmZSB0aGUgYmVzdAoJCQkJCWxpZmUsIGZvciB0aGV5IGFyZ3VlIHRoYXQgaXQgaXMgaW1wb3NzaWJsZSBmb3IgdGhlIG1hbiB3aG8gZG9lcyBub3RoaW5nIHRvIGRvCgkJCQkJd2VsbCwgYW5kIGRvaW5nIHdlbGwgYW5kIGhhcHBpbmVzcyBhcmUgdGhlIHNhbWUgdGhpbmcuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9uIHRoZSBhbWJpZ3VvdXMgdXNlIG9mIOKAmGRvIHdlbGzigJkgc2VlCgkJCQkJCTEzMjNiIDMyIG4uPC9ub3RlPiBUbyB0aGVzZSB0d28gcGFydGllcyB3ZSBtdXN0IHJlcGx5IHRoYXQgYm90aCBhcmUgcGFydGx5CgkJCQkJcmlnaHQgYW5kIHBhcnRseSB3cm9uZy4gVGhlIGZvcm1lciBhcmUgcmlnaHQgaW4gc2F5aW5nIHRoYXQgdGhlIGxpZmUgb2YgdGhlIGZyZWUKCQkJCQltYW4gaXMgYmV0dGVyIHRoYW4gdGhlIGxpZmUgb2YgbWFzdGVyc2hpcCwgZm9yIHRoaXMgaXMgdHJ1ZeKAlHRoZXJlIGlzCgkJCQkJbm90aGluZyBzcGVjaWFsbHkgZGlnbmlmaWVkIGluIGVtcGxveWluZyBhIHNsYXZlLCBhcyBhIHNsYXZlLCBmb3IgZ2l2aW5nIG9yZGVycwoJCQkJCWFib3V0IG1lbmlhbCBkdXRpZXMgaGFzIGluIGl0IG5vdGhpbmcgb2Ygbm9iaWxpdHk7IDwvdHJhbnNsYXRpb24+"
translation['7.1325b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+eWV0IHRvIHRoaW5rIHRoYXQgYWxsIGdvdmVybm1lbnQgaXMgZXhlcmNpc2luZyB0aGUKCQkJCQlhdXRob3JpdHkgb2YgYSBtYXN0ZXIgaXMgYSBtaXN0YWtlLCBmb3IgdGhlcmUgaXMgYXMgd2lkZSBhIGRpZmZlcmVuY2UgYmV0d2VlbgoJCQkJCXJ1bGluZyBmcmVlIG1lbiBhbmQgcnVsaW5nIHNsYXZlcyBhcyB0aGVyZSBpcyBiZXR3ZWVuIHRoZSBuYXR1cmFsIGZyZWVtYW4gYW5kCgkJCQkJdGhlIG5hdHVyYWwgc2xhdmUgdGhlbXNlbHZlcy4gQnV0IHRoZXNlIHRoaW5ncyBoYXZlIGJlZW4gYWRlcXVhdGVseSBkZWNpZGVkIGluCgkJCQkJdGhlIGZpcnN0IGRpc2NvdXJzZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gQm9vayAxLjwvbm90ZT4gQnV0CgkJCQkJdG8gcHJhaXNlIGluYWN0aW9uIG1vcmUgaGlnaGx5IHRoYW4gYWN0aW9uIGlzIGFuIGVycm9yLCBmb3IgaGFwcGluZXNzIGlzIGFuCgkJCQkJYWN0aXZpdHksIGFuZCBmdXJ0aGVyIHRoZSBhY3Rpb25zIG9mIHRoZSBqdXN0IGFuZCB0ZW1wZXJhdGUgaGF2ZSBpbiB0aGVtIHRoZQoJCQkJCXJlYWxpemF0aW9uIG9mIG11Y2ggdGhhdCBpcyBub2JsZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5ZZXQgb24gdGhlIHN0cmVuZ3RoIG9mIHRoZXNlIGRlY2lzaW9ucyBzb21lYm9keSBtaWdodCBwZXJoYXBzIHN1cHBvc2UgdGhhdCB0aGUKCQkJCQloaWdoZXN0IGdvb2QgaXMgdG8gYmUgdGhlIG1hc3RlciBvZiB0aGUgd29ybGQsIHNpbmNlIHRodXMgb25lIHdvdWxkIGhhdmUgdGhlCgkJCQkJcG93ZXIgdG8gY29tcGFzcyB0aGUgZ3JlYXRlc3QgbnVtYmVyIGFuZCB0aGUgbm9ibGVzdCBraW5kIG9mIGFjdGlvbnMsIGFuZAoJCQkJCXRoZXJlZm9yZSBpdCBpcyBub3QgdGhlIGR1dHkgb2YgdGhlIG1hbiB0aGF0IGlzIGNhcGFibGUgb2YgcnVsaW5nIHRvIHN1cnJlbmRlcgoJCQkJCW9mZmljZSB0byBoaXMgbmVpZ2hib3IsIGJ1dCByYXRoZXIgdG8gdGFrZSBpdCBmcm9tIGhpbSwgYW5kIG5vIGFjY291bnQgbXVzdCBiZQoJCQkJCXRha2VuIGJ5IGZhdGhlciBvZiBzb25zIG5vciBieSBzb25zIG9mIGZhdGhlciBub3IgaW4gZ2VuZXJhbCBieSBvbmUgZnJpZW5kIG9mCgkJCQkJYW5vdGhlciwgYW5kIG5vIGhlZWQgbXVzdCBiZSBwYWlkIHRvIHRoZW0gaW4gY29tcGFyaXNvbiB3aXRoIHRoaXM7IGZvciB0aGUgYmVzdAoJCQkJCXRoaW5nIGlzIHRoZSBtb3N0IHRvIGJlIGRlc2lyZWQsIGFuZCB0byBkbyB3ZWxsIGlzIHRoZSBiZXN0IHRoaW5nLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPk5vdyB0aGlzIHN0YXRlbWVudCBpcyBwZXJoYXBzIHRydWUKCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMjViIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1325b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmlmIGl0IGlzIHRoZSBjYXNlIHRoYXQgdGhlIG1vc3QgZGVzaXJhYmxlIG9mIGV4aXN0aW5nIHRoaW5ncwoJCQkJCXdpbGwgYmVsb25nIHRvIG1lbiB0aGF0IHVzZSByb2JiZXJ5IGFuZCB2aW9sZW5jZS4gQnV0IHBlcmhhcHMgaXQgY2Fubm90IGJlbG9uZwoJCQkJCXRvIHRoZW0sIGFuZCB0aGlzIGlzIGEgZmFsc2UgYXNzdW1wdGlvbi4gRm9yIGEgbWFuJ3MgYWN0cyBjYW4gbm8gbG9uZ2VyIGJlIG5vYmxlCgkJCQkJaWYgaGUgZG9lcyBub3QgZXhjZWwgYXMgZ3JlYXRseSBhcyBhIG1hbiBleGNlbHMgYSB3b21hbiBvciBhIGZhdGhlciBoaXMgY2hpbGRyZW4KCQkJCQlvciBhIG1hc3RlciBoaXMgc2xhdmVzLCBzbyB0aGF0IG9uZSB3aG8gdHJhbnNncmVzc2VzIGNhbm5vdCBhZnRlcndhcmRzIGFjaGlldmUKCQkJCQlhbnl0aGluZyBzdWZmaWNpZW50IHRvIHJlY3RpZnkgdGhlIGxhcHNlIGZyb20gdmlydHVlIHRoYXQgaGUgaGFkIGFscmVhZHkKCQkJCQljb21taXR0ZWQ7IGJlY2F1c2UgZm9yIGVxdWFscyB0aGUgbm9ibGUgYW5kIGp1c3QgY29uc2lzdHMgaW4gdGhlaXIgdGFraW5nIHR1cm5zLAoJCQkJCXNpbmNlIHRoaXMgaXMgZXF1YWwgYW5kIGFsaWtlLCBidXQgZm9yIHRob3NlIHRoYXQgYXJlIGVxdWFsIHRvIGhhdmUgYW4gdW5lcXVhbAoJCQkJCXNoYXJlIGFuZCB0aG9zZSB0aGF0IGFyZSBhbGlrZSBhbiB1bmxpa2Ugc2hhcmUgaXMgY29udHJhcnkgdG8gbmF0dXJlLCBhbmQKCQkJCQlub3RoaW5nIGNvbnRyYXJ5IHRvIG5hdHVyZSBpcyBub2JsZS4gSGVuY2UgaW4gY2FzZSB0aGVyZSBpcyBhbm90aGVyIHBlcnNvbiB3aG8KCQkJCQlpcyBvdXIgc3VwZXJpb3IgaW4gdmlydHVlIGFuZCBpbiBwcmFjdGljYWwgY2FwYWNpdHkgZm9yIHRoZSBoaWdoZXN0IGZ1bmN0aW9ucywKCQkJCQloaW0gaXQgaXMgbm9ibGUgdG8gZm9sbG93IGFuZCBoaW0gaXQgaXMganVzdCB0byBvYmV5OyB0aG91Z2ggaGUgbXVzdCBwb3NzZXNzIG5vdAoJCQkJCW9ubHkgdmlydHVlIGJ1dCBhbHNvIGNhcGFjaXR5IHRoYXQgd2lsbCByZW5kZXIgaGltIGNhcGFibGUgb2YgYWN0aW9uLiA8L3RyYW5zbGF0aW9uPg=="
translation['7.1325b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGlmIHRoZXNlIHRoaW5ncyBhcmUgd2VsbCBzYWlkLCBhbmQgaWYKCQkJCQloYXBwaW5lc3MgaXMgdG8gYmUgZGVmaW5lZCBhcyB3ZWxsLWRvaW5nLCB0aGUgYWN0aXZlIGxpZmUgaXMgdGhlIGJlc3QgbGlmZSBib3RoCgkJCQkJZm9yIHRoZSB3aG9sZSBzdGF0ZSBjb2xsZWN0aXZlbHkgYW5kIGZvciBlYWNoIG1hbiBpbmRpdmlkdWFsbHkuIEJ1dCB0aGUgYWN0aXZlCgkJCQkJbGlmZSBpcyBub3QgbmVjZXNzYXJpbHkgYWN0aXZlIGluIHJlbGF0aW9uIHRvIG90aGVyIG1lbiwgYXMgc29tZSBwZW9wbGUgdGhpbmssCgkJCQkJbm9yIGFyZSBvbmx5IHRob3NlIHByb2Nlc3NlcyBvZiB0aG91Z2h0IGFjdGl2ZSB0aGF0IGFyZSBwdXJzdWVkIGZvciB0aGUgc2FrZSBvZgoJCQkJCXRoZSBvYmplY3RzIHRoYXQgcmVzdWx0IGZyb20gYWN0aW9uLCBidXQgZmFyIG1vcmU8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhvc2Ugc3BlY3VsYXRpb25zIGFuZCB0aG91Z2h0cyB0aGF0IGhhdmUgdGhlaXIgZW5kIGluCgkJCQkJdGhlbXNlbHZlcyBhbmQgYXJlIHB1cnN1ZWQgZm9yIHRoZWlyIG93biBzYWtlOyBmb3IgdGhlIGVuZCBpcyB0byBkbyB3ZWxsLCBhbmQKCQkJCQl0aGVyZWZvcmUgaXMgYSBjZXJ0YWluIGZvcm0gb2YgYWN0aW9uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4KCQkJCQkJMTMyM2IgMzIgbi4sIDEzMjVhIDIxLjwvbm90ZT4gQW5kIGV2ZW4gd2l0aCBhY3Rpb25zIGRvbmUgaW4gcmVsYXRpb24gdG8KCQkJCQlleHRlcm5hbCBvYmplY3RzIHdlIHByZWRpY2F0ZSBhY3Rpb24gaW4gdGhlIGZ1bGwgc2Vuc2UgY2hpZWZseSBvZiB0aGUKCQkJCQltYXN0ZXItY3JhZnRzbWVuIHdobyBkaXJlY3QgdGhlIGFjdGlvbiBieSB0aGVpciB0aG91Z2h0cy4gPC90cmFuc2xhdGlvbj4="
translation['7.1326a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy42IiB1bml0PSJMb2ViIGNoYXAiIC8+TW9yZW92ZXIgd2l0aCBjaXRpZXMgYWxzbywgdGhvc2UgdGhhdCBvY2N1cHkgYW4KCQkJCQlpc29sYXRlZCBzaXR1YXRpb24gYW5kIHB1cnN1ZSBhIHBvbGljeSBvZiBpc29sYXRpb24gYXJlIG5vdCBuZWNlc3NhcmlseQoJCQkJCWluYWN0aXZlOyBmb3Igc3RhdGUgYWN0aXZpdGllcyBhbHNvIGNhbiBiZSBzZWN0aW9uYWwsIHNpbmNlIHRoZSBzZWN0aW9ucyBvZiB0aGUKCQkJCQlzdGF0ZSBoYXZlIG1hbnkgY29tbW9uIHJlbGF0aW9ucyB3aXRoIG9uZSBhbm90aGVyLiBBbmQgdGhpcyBpcyBhbHNvIHBvc3NpYmxlCgkJCQkJc2ltaWxhcmx5IGluIHRoZSBjYXNlIG9mIGFueSBpbmRpdmlkdWFsIGh1bWFuIGJlaW5nOyBmb3Igb3RoZXJ3aXNlIEdvZCBhbmQgdGhlCgkJCQkJd2hvbGUgdW5pdmVyc2UgY291bGQgaGFyZGx5IGJlIHdlbGwgY2lyY3Vtc3RhbmNlZCwgc2luY2UgdGhleSBoYXZlIG5vIGV4dGVybmFsCgkJCQkJYWN0aXZpdGllcyBieSB0aGUgc2lkZSBvZiB0aGVpciBvd24gcHJpdmF0ZSBhY3Rpdml0aWVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyB0aGVyZWZvcmUgbWFuaWZlc3QgdGhhdCB0aGUgc2FtZSBsaWZlIG11c3QgYmUgdGhlIGJlc3QKCQkJCQlib3RoIGZvciBlYWNoIGh1bWFuIGJlaW5nIGluZGl2aWR1YWxseSBhbmQgZm9yIHN0YXRlcyBhbmQgbWFua2luZAoJCQkJCQljb2xsZWN0aXZlbHkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIGFzIHdlIGhhdmUgcHJlcGFyZWQgdGhlIHdheSBieSB0aGlzIHByZWZhdG9yeSBkaXNjdXNzaW9uIG9mCgkJCQkJdGhlIHN1YmplY3QsIGFuZCBoYXZlIHByZXZpb3VzbHkgc3R1ZGllZCBhbGwgdGhlIG90aGVyIGZvcm1zIG9mCgkJCQkJCWNvbnN0aXR1dGlvbiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBzZWVtcyB0byByZWZlciB0bwoJCQkJCQlCb29rcyA0LTYuPC9ub3RlPiB0aGUgc3RhcnRpbmctcG9pbnQgZm9yIHRoZSByZW1haW5kZXIgb2Ygb3VyIHN1YmplY3QgaXMKCQkJCQlmaXJzdCB0byBzcGVjaWZ5IHRoZSBuYXR1cmUgb2YgdGhlIGNvbmRpdGlvbnMgdGhhdCBhcmUgbmVjZXNzYXJ5IGluIHRoZSBjYXNlIG9mCgkJCQkJdGhlIHN0YXRlIHRoYXQgaXMgdG8gYmUgY29uc3RpdHV0ZWQgaW4gdGhlIGlkZWFsbHkgYmVzdCBtYW5uZXIuIEZvciB0aGUgYmVzdAoJCQkJCWNvbnN0aXR1dGlvbiBjYW5ub3QgYmUgcmVhbGl6ZWQgd2l0aG91dCBzdWl0YWJsZSBlcXVpcG1lbnQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiAxMjg4YiAzOSBuLjwvbm90ZT4gV2UgbXVzdCB0aGVyZWZvcmUgcG9zaXQgYXMgZ3JhbnRlZCBpbgoJCQkJCWFkdmFuY2UgYSBudW1iZXIgb2YgYXMgaXQgd2VyZSBpZGVhbCBjb25kaXRpb25zLCBhbHRob3VnaCBub25lIG9mIHRoZXNlIG11c3QgYmUKCQkJCQlhY3R1YWxseSBpbXBvc3NpYmxlLiBJIG1lYW4gZm9yIGluc3RhbmNlIGluIHJlZmVyZW5jZSB0byBudW1iZXIgb2YgY2l0aXplbnMgYW5kCgkJCQkJdGVycml0b3J5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFsbCBvdGhlciBjcmFmdHNtZW4sIGZvcgoJCQkJCWV4YW1wbGUgYSB3ZWF2ZXIgb3IgYSBzaGlwd3JpZ2h0LCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMyNmEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1326a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmhhdmUgdG8gYmUgc3VwcGxpZWQgd2l0aCB0aGVpcgoJCQkJCW1hdGVyaWFsIGluIGEgY29uZGl0aW9uIHN1aXRhYmxlIGZvciB0aGVpciB0cmFkZSwgZm9yIHRoZSBiZXR0ZXIgdGhpcyBtYXRlcmlhbAoJCQkJCWhhcyBiZWVuIHByZXBhcmVkLCB0aGUgZmluZXIgaXMgYm91bmQgdG8gYmUgdGhlIHByb2R1Y3Qgb2YgdGhlaXIgY3JhZnQ7IHNvIGFsc28KCQkJCQl0aGUgc3RhdGVzbWFuIGFuZCB0aGUgbGF3Z2l2ZXIgb3VnaHQgdG8gYmUgZnVybmlzaGVkIHdpdGggdGhlaXIgcHJvcGVyIG1hdGVyaWFsCgkJCQkJaW4gYSBzdWl0YWJsZSBjb25kaXRpb24uIFVuZGVyIHRoZSBoZWFkIG9mIG1hdGVyaWFsIGVxdWlwbWVudCBmb3IgdGhlIHN0YXRlCgkJCQkJdGhlcmUgZmlyc3QgY29tZSB0aGUgcXVlc3Rpb25zIGFzIHRvIGEgc3VwcGx5IG9mIHBvcHVsYXRpb27igJR3aGF0CgkJCQkJcHJlY2lzZWx5IG91Z2h0IHRvIGJlIGl0cyBudW1iZXIgYW5kIHdoYXQgaXRzIG5hdHVyYWwgY2hhcmFjdGVyPyBhbmQgc2ltaWxhcmx5CgkJCQkJaW4gcmVnYXJkIHRvIHRoZSB0ZXJyaXRvcnksIHdoYXQgaXMgdG8gYmUgaXRzIHBhcnRpY3VsYXIgc2l6ZSBhbmQgbmF0dXJlPwoJCQkJCQk8L3RyYW5zbGF0aW9uPg=="
translation['7.1326a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+TW9zdCBwZW9wbGUgaW1hZ2luZSB0aGF0IHRoZQoJCQkJCXByb3NwZXJvdXMgc3RhdGUgbXVzdCBiZSBhIGdyZWF0IHN0YXRlOyBidXQgZ3JhbnRlZCB0aGUgdHJ1dGggb2YgdGhpcywgdGhleSBmYWlsCgkJCQkJdG8gcmVhbGl6ZSBpbiB3aGF0IHF1YWxpdHkgdGhlIGdyZWF0bmVzcyBvciBzbWFsbG5lc3Mgb2YgYSBzdGF0ZSBjb25zaXN0czogdGhleQoJCQkJCWp1ZGdlIGEgZ3JlYXQgc3RhdGUgYnkgdGhlIG51bWVyaWNhbCBtYWduaXR1ZGUgb2YgdGhlIHBvcHVsYXRpb24sIGJ1dCByZWFsbHkgdGhlCgkJCQkJbW9yZSBwcm9wZXIgdGhpbmcgdG8gbG9vayBhdCBpcyBub3QgbnVtYmVycyBidXQgZWZmaWNpZW5jeS4gRm9yIGEgc3RhdGUgbGlrZQoJCQkJCW90aGVyIHRoaW5ncyBoYXMgYSBjZXJ0YWluIGZ1bmN0aW9uIHRvIHBlcmZvcm0sIHNvIHRoYXQgaXQgaXMgdGhlIHN0YXRlIG1vc3QKCQkJCQljYXBhYmxlIG9mIHBlcmZvcm1pbmcgdGhpcyBmdW5jdGlvbiB0aGF0IGlzIHRvIGJlIGRlZW1lZCB0aGUgZ3JlYXRlc3QsIGp1c3QgYXMKCQkJCQlvbmUgd291bGQgcHJvbm91bmNlIEhpcHBvY3JhdGVzIHRvIGJlIGdyZWF0ZXIsIG5vdCBhcyBhIGh1bWFuIGJlaW5nIGJ1dCBhcyBhCgkJCQkJcGh5c2ljaWFuLCB0aGFuIHNvbWVib2R5IHdobyBzdXJwYXNzZWQgaGltIGluIGJvZGlseSBzaXplLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFsbCB0aGUgc2FtZSwgZXZlbiBpZiBpdCBiZSByaWdodCB0byBqdWRnZSB0aGUKCQkJCQlzdGF0ZSBieSB0aGUgdGVzdCBvZiBpdHMgbXVsdGl0dWRlLCB0aGlzIG91Z2h0IG5vdCB0byBiZSBkb25lIHdpdGggcmVnYXJkIHRvIHRoZQoJCQkJCW11bHRpdHVkZSBvZiBhbnkgYW5kIGV2ZXJ5IGNsYXNzIO+8iGZvciBzdGF0ZXMgYXJlIGRvdWJ0bGVzcyBib3VuZCB0bwoJCQkJCWNvbnRhaW4gYSBsYXJnZSBudW1iZXIgb2Ygc2xhdmVzPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZAoJCQkJCXJlc2lkZW50IGFsaWVucyBhbmQgZm9yZWlnbmVyc++8iSwgYnV0IHRoZSB0ZXN0IHNob3VsZCBiZSB0aGUgbnVtYmVyIG9mCgkJCQkJdGhvc2Ugd2hvIGFyZSBhIHBhcnQgb2YgdGhlIHN0YXRl4oCUdGhlIHNwZWNpYWwgcGFydHMgb2Ygd2hpY2ggYSBzdGF0ZQoJCQkJCWNvbnNpc3RzLiBJdCBpcyBzdXBlcmlvcml0eSBpbiB0aGUgbnVtYmVyIG9mIHRoZXNlIHRoYXQgaW5kaWNhdGVzIGEgZ3JlYXQgc3RhdGU7CgkJCQkJYSBzdGF0ZSB0aGF0IHNlbmRzIGZvcnRoIHRvIHdhciBhIGxhcmdlIG51bWJlciBvZiB0aGUgYmFzZXIgc29ydCBhbmQgYSBzbWFsbAoJCQkJCW51bWJlciBvZiBoZWF2eS1hcm1lZCBzb2xkaWVycyBjYW5ub3QgcG9zc2libHkgYmUgYSBncmVhdCBzdGF0ZeKAlGZvciBhCgkJCQkJZ3JlYXQgc3RhdGUgaXMgbm90IHRoZSBzYW1lIHRoaW5nIGFzIGEgc3RhdGUgd2l0aCBhIGxhcmdlIHBvcHVsYXRpb24uIDwvdHJhbnNsYXRpb24+"
translation['7.1326b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGNlcnRhaW5seSBleHBlcmllbmNlIGFsc28gc2hvd3MgdGhhdCBpdAoJCQkJCWlzIGRpZmZpY3VsdCBhbmQgcGVyaGFwcyBpbXBvc3NpYmxlIGZvciBhIHN0YXRlIHdpdGggdG9vIGxhcmdlIGEgcG9wdWxhdGlvbiB0bwoJCQkJCWhhdmUgZ29vZCBsZWdhbCBnb3Zlcm5tZW50LiBBdCBhbGwgZXZlbnRzIHdlIHNlZSB0aGF0IG5vbmUgb2YgdGhlIHN0YXRlcyByZXB1dGVkCgkJCQkJdG8gYmUgd2VsbCBnb3Zlcm5lZCBpcyB3aXRob3V0IHNvbWUgcmVzdHJpY3Rpb24gaW4gcmVnYXJkIHRvIG51bWJlcnMuIFRoZQoJCQkJCWV2aWRlbmNlIG9mIHRoZW9yeSBwcm92ZXMgdGhlIHNhbWUgcG9pbnQuIExhdyBpcyBhIGZvcm0gb2Ygb3JkZXIsIGFuZCBnb29kIGxhdwoJCQkJCW11c3QgbmVjZXNzYXJpbHkgbWVhbiBnb29kIG9yZGVyOyBidXQgYW4gZXhjZXNzaXZlbHkgbGFyZ2UgbnVtYmVyIGNhbm5vdAoJCQkJCXBhcnRpY2lwYXRlIGluIG9yZGVyOiB0byBnaXZlIGl0IG9yZGVyIHdvdWxkIHN1cmVseSBiZSBhIHRhc2sgZm9yIGRpdmluZSBwb3dlciwKCQkJCQl3aGljaCBob2xkcyBldmVuIHRoaXMgdW5pdmVyc2UgdG9nZXRoZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluCgkJCQkJCXRoZSBNU1MuIHRoaXMgY2xhdXNlIGZvbGxvd3MgdGhlIG5leHQuPC9ub3RlPiBIZW5jZSB0aGF0IHN0YXRlIGFsc28gbXVzdAoJCQkJCW5lY2Vzc2FyaWx5IGJlIHRoZSBtb3N0IGJlYXV0aWZ1bCB3aXRoIHdob3NlIG1hZ25pdHVkZSBpcyBjb21iaW5lZCB0aGUKCQkJCQlhYm92ZS1tZW50aW9uZWQgbGltaXRpbmcgcHJpbmNpcGxlOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPmZvciBjZXJ0YWlubHkgYmVhdXR5IGlzIHVzdWFsbHkgZm91bmQgaW4gbnVtYmVyIGFuZCBtYWduaXR1ZGUsIGJ1dCB0aGVyZSBpcyBhCgkJCQkJZHVlIG1lYXN1cmUgb2YgbWFnbml0dWRlIGZvciBhIGNpdHktc3RhdGUgYXMgdGhlcmUgYWxzbyBpcyBmb3IgYWxsIG90aGVyCgkJCQkJdGhpbmdz4oCUYW5pbWFscywgcGxhbnRzLCB0b29sczsgZWFjaCBvZiB0aGVzZSBpZiB0b28gc21hbGwgb3IKCQkJCQlleGNlc3NpdmVseSBsYXJnZSB3aWxsIG5vdCBwb3NzZXNzIGl0cyBvd24gcHJvcGVyIGVmZmljaWVuY3ksIGJ1dCBpbiBzb21lIGNhc2VzCgkJCQkJd2lsbCBoYXZlIGVudGlyZWx5IGxvc3QgaXRzIHRydWUgbmF0dXJlIGFuZCBpbiBvdGhlcnMgd2lsbCBiZSBpbiBhIGRlZmVjdGl2ZQoJCQkJCWNvbmRpdGlvbjogZm9yIGluc3RhbmNlLCBhIHNoaXAgYSBzcGFuIGxvbmcgd2lsbCBub3QgYmUgYSBzaGlwIGF0IGFsbCwgbm9yIHdpbGwKCQkJCQlhIHNoaXAgYSBxdWFydGVyIG9mIGEgbWlsZSBsb25nLCBhbmQgZXZlbiB3aGVuIGl0IHJlYWNoZXMgYSBjZXJ0YWluIHNpemUsCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzI2YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1326b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmluIHNvbWUgY2FzZXMgc21hbGxuZXNzIGFuZCBpbiBvdGhlcnMgZXhjZXNzaXZlIGxhcmdlbmVzcyB3aWxsCgkJCQkJbWFrZSBpdCBzYWlsIGJhZGx5LiA8L3RyYW5zbGF0aW9uPg=="
translation['7.1326b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC43IiB1bml0PSJMb2ViIGNoYXAiIC8+U2ltaWxhcmx5IGEKCQkJCQlzdGF0ZSBjb25zaXN0aW5nIG9mIHRvbyBmZXcgcGVvcGxlIHdpbGwgbm90IGJlIHNlbGYtc3VmZmljaW5nIO+8iHdoaWNoIGlzCgkJCQkJYW4gZXNzZW50aWFsIHF1YWxpdHkgb2YgYSBzdGF0Ze+8iSwgYW5kIG9uZSBjb25zaXN0aW5nIG9mIHRvbyBtYW55LAoJCQkJCXRob3VnaCBzZWxmLXN1ZmZpY2luZyBpbiB0aGUgbWVyZSBuZWNlc3Nhcmllcywgd2lsbCBiZSBzbyBpbiB0aGUgd2F5IGluIHdoaWNoIGEKCQkJCQkJbmF0aW9uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gcHJlc3VtYWJseSBhbiBFdGhub3MgaW4gdGhlCgkJCQkJCXVzdWFsIHNlbnNlLCBhIGNvbW11bml0eSBjb21wb3NlZCBvZiB2aWxsYWdlcyBsb29zZWx5IGJvdW5kIHRvZ2V0aGVyIGJ5CgkJCQkJCXJlbGF0aW9uc2hpcCBhbmQgdHJhZGUsIGFuZCB1bml0ZWQgZm9yIGRlZmVuY2UsIGJ1dCBub3QgZm9yIHBvbGl0aWNhbCBsaWZlOwoJCQkJCQlub3QgYW4gRXRobm9zIG9mIGFzc29jaWF0ZWQgY2l0aWVzLjwvbm90ZT4gaXMsIGFuZCBub3QgYXMgYSBzdGF0ZSwgc2luY2UgaXQKCQkJCQl3aWxsIG5vdCBiZSBlYXN5IGZvciBpdCB0byBwb3NzZXNzIGNvbnN0aXR1dGlvbmFsIGdvdmVybm1lbnTigJRmb3Igd2hvCgkJCQkJd2lsbCBjb21tYW5kIGl0cyBvdmVyLXN3b2xsZW4gbXVsdGl0dWRlIGluIHdhcj8gb3Igd2hvIHdpbGwgc2VydmUgYXMgaXRzIGhlcmFsZCwKCQkJCQl1bmxlc3MgaGUgaGF2ZSB0aGUgbHVuZ3Mgb2YgYSBTdGVudG9yPyBJdCBmb2xsb3dzIHRoYXQgdGhlIGxvd2VzdCBsaW1pdCBmb3IgdGhlCgkJCQkJZXhpc3RlbmNlIG9mIGEgc3RhdGUgaXMgd2hlbiBpdCBjb25zaXN0cyBvZiBhIHBvcHVsYXRpb24gdGhhdCByZWFjaGVzIHRoZQoJCQkJCW1pbmltdW0gbnVtYmVyIHRoYXQgaXMgc2VsZi1zdWZmaWNpZW50IGZvciB0aGUgcHVycG9zZSBvZiBsaXZpbmcgdGhlIGdvb2QgbGlmZQoJCQkJCWFmdGVyIHRoZSBtYW5uZXIgb2YgYSBwb2xpdGljYWwgY29tbXVuaXR5LiBJdCBpcyBwb3NzaWJsZSBhbHNvIGZvciBvbmUgdGhhdAoJCQkJCWV4Y2VlZHMgdGhpcyBvbmUgaW4gbnVtYmVyIHRvIGJlIGEgZ3JlYXRlciBzdGF0ZSwgYnV0LCBhcyB3ZSBzYWlkLCB0aGlzCgkJCQkJcG9zc2liaWxpdHkgb2YgaW5jcmVhc2UgaXMgbm90IHdpdGhvdXQgbGltaXQsIGFuZCB3aGF0IHRoZSBsaW1pdCBvZiB0aGUgc3RhdGUncwoJCQkJCWV4cGFuc2lvbiBpcyBjYW4gZWFzaWx5IGJlIHNlZW4gZnJvbSBwcmFjdGljYWwgY29uc2lkZXJhdGlvbnMuIFRoZSBhY3Rpdml0aWVzIG9mCgkJCQkJdGhlIHN0YXRlIGFyZSB0aG9zZSBvZiB0aGUgcnVsZXJzIGFuZCB0aG9zZSBvZiB0aGUgcGVyc29ucyBydWxlZCwgYW5kIHRoZSB3b3JrCgkJCQkJb2YgYSBydWxlciBpcyB0byBkaXJlY3QgdGhlIGFkbWluaXN0cmF0aW9uIGFuZCB0byBqdWRnZSBsYXctc3VpdHM7IGJ1dCBpbiBvcmRlcgoJCQkJCXRvIGRlY2lkZSBxdWVzdGlvbnMgb2YganVzdGljZSBhbmQgaW4gb3JkZXIgdG8gZGlzdHJpYnV0ZSB0aGUgb2ZmaWNlcyBhY2NvcmRpbmcKCQkJCQl0byBtZXJpdCBpdCBpcyBuZWNlc3NhcnkgZm9yIHRoZSBjaXRpemVucyB0byBrbm93IGVhY2ggb3RoZXIncyBwZXJzb25hbAoJCQkJCWNoYXJhY3RlcnMsIHNpbmNlIHdoZXJlIHRoaXMgZG9lcyBub3QgaGFwcGVuIHRvIGJlIHRoZSBjYXNlIHRoZSBidXNpbmVzcyBvZgoJCQkJCWVsZWN0aW5nIG9mZmljaWFscyBhbmQgdHJ5aW5nIGxhdy1zdWl0cyBpcyBib3VuZCB0byBnbyBiYWRseTsgaGFwaGF6YXJkIGRlY2lzaW9uCgkJCQkJaXMgdW5qdXN0IGluIGJvdGggbWF0dGVycywgYW5kIHRoaXM8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+bXVzdCBvYnZpb3VzbHkgcHJldmFpbCBpbiBhbiBleGNlc3NpdmVseSBudW1lcm91cyBjb21tdW5pdHkuIDwvdHJhbnNsYXRpb24+"
translation['7.1327a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC44IiB1bml0PSJMb2ViIGNoYXAiIC8+QWxzbyBpbiBzdWNoIGEgY29tbXVuaXR5IGl0IGlzIGVhc3kgZm9yCgkJCQkJZm9yZWlnbmVycyBhbmQgcmVzaWRlbnQgYWxpZW5zIHRvIHVzdXJwIHRoZSByaWdodHMgb2YgY2l0aXplbnNoaXAsIGZvciB0aGUKCQkJCQlleGNlc3NpdmUgbnVtYmVyIG9mIHRoZSBwb3B1bGF0aW9uIG1ha2VzIGl0IG5vdCBkaWZmaWN1bHQgdG8gZXNjYXBlIGRldGVjdGlvbi4KCQkJCQlJdCBpcyBjbGVhciB0aGVyZWZvcmUgdGhhdCB0aGUgYmVzdCBsaW1pdGluZyBwcmluY2lwbGUgZm9yIGEgc3RhdGUgaXMgdGhlCgkJCQkJbGFyZ2VzdCBleHBhbnNpb24gb2YgdGhlIHBvcHVsYXRpb24sIHdpdGggYSB2aWV3IHRvIHNlbGYtc3VmZmljaWVuY3kgdGhhdCBjYW4KCQkJCQl3ZWxsIGJlIHRha2VuIGluIGF0IG9uZSB2aWV3LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoIG1heSBiZSBvdXIKCQkJCQljb25jbHVzaW9uIG9uIHRoZSBxdWVzdGlvbiBvZiB0aGUgc2l6ZSBvZiB0aGUgc3RhdGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VmVyeSBtdWNoIHRoZSBzYW1lIGhvbGRzCgkJCQkJZ29vZCBhYm91dCBpdHMgdGVycml0b3J5LiBBcyB0byB0aGUgcXVlc3Rpb24gd2hhdCBwYXJ0aWN1bGFyIGtpbmQgb2YgbGFuZCBpdAoJCQkJCW91Z2h0IHRvIGhhdmUsIGl0IGlzIGNsZWFyIHRoYXQgZXZlcnlib2R5IHdvdWxkIGNvbW1hbmQgdGhhdCB3aGljaCBpcyBtb3N0CgkJCQkJc2VsZi1zdWZmaWNpbmcg77yIYW5kIHN1Y2ggaXMgbmVjZXNzYXJpbHkgdGhhdCB3aGljaCBiZWFycyBldmVyeSBzb3J0IG9mCgkJCQkJcHJvZHVjZSwgZm9yIHNlbGYtc3VmZmljaWVuY3kgbWVhbnMgaGF2aW5nIGEgc3VwcGx5IG9mIGV2ZXJ5dGhpbmcgYW5kIGxhY2tpbmcKCQkJCQlub3RoaW5n77yJLiBJbiBleHRlbnQgYW5kIG1hZ25pdHVkZSB0aGUgbGFuZCBvdWdodCB0byBiZSBvZiBhIHNpemUgdGhhdAoJCQkJCXdpbGwgZW5hYmxlIHRoZSBpbmhhYml0YW50cyB0byBsaXZlIGEgbGlmZSBvZiBsaWJlcmFsIGFuZCBhdCB0aGUgc2FtZSB0aW1lCgkJCQkJdGVtcGVyYXRlIGxlaXN1cmUuIFdoZXRoZXIgdGhpcyBsaW1pdGluZyBwcmluY2lwbGUgaXMgcmlnaHRseSBvciB3cm9uZ2x5IHN0YXRlZAoJCQkJCW11c3QgYmUgY29uc2lkZXJlZCBtb3JlIHByZWNpc2VseSBsYXRlciBvbiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBwcm9taXNlIGlzIG5vdCBmdWxmaWxsZWQgaW4gdGhlIHdvcmsgYXMgaXQgaGFzIGNvbWUgZG93biB0byB1cy48L25vdGU+CgkJCQkJd2hlbiB3ZSBjb21lIHRvIHJhaXNlIHRoZSBnZW5lcmFsIHN1YmplY3Qgb2YgcHJvcGVydHkgYW5kIHRoZSBvd25lcnNoaXAgb2YKCQkJCQl3ZWFsdGgs4oCUaG93IGFuZCBpbiB3aGF0IHdheSBpdCBvdWdodCB0byBiZSByZWxhdGVkIHRvIHRoZSBlbXBsb3ltZW50CgkJCQkJb2Ygd2VhbHRoPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBkaXN0aW5jdGlvbiBzZWVtcyB0byBiZSBiZXR3ZWVuCgkJCQkJCW93bmluZyDvvIhvciBwZXJoYXBzIGdldHRpbmfvvIkgd2VhbHRoIGFuZCB1c2luZyBpdDsgYnV0IGEKCQkJCQkJcHJvYmFibGUgZW1lbmRhdGlvbiBvZiB0aGUgR3JlZWsgZ2l2ZXMg4oCYaG93IHdlIG91Z2h0IHRvIHN0YW5kIGluCgkJCQkJCXJlbGF0aW9uIHRvIGl0cyBlbXBsb3ltZW50LuKAmTwvbm90ZT47IGFib3V0IHRoaXMgcXVlc3Rpb24gdGhlcmUgYXJlCgkJCQkJbWFueSBjb250cm92ZXJzaWVzLCBvd2luZyB0byB0aG9zZSB0aGF0IGRyYXcgdXMgdG93YXJkcyBlaXRoZXIgZXh0cmVtZSBvZiBsaWZlLAoJCQkJCXRoZSBvbmUgc2Nob29sIHRvd2FyZHMgcGFyc2ltb255IGFuZCB0aGUgb3RoZXIgdG93YXJkcyBsdXh1cnkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHByb3BlciBjb25maWd1cmF0aW9uIG9mIHRoZSBjb3VudHJ5IGl0CgkJCQkJaXMgbm90IGRpZmZpY3VsdCB0byBzdGF0ZSDvvIh0aG91Z2ggdGhlcmUgYXJlIHNvbWUgcG9pbnRzIG9uIHdoaWNoIHRoZQoJCQkJCWFkdmljZSBvZiBtaWxpdGFyeSBleHBlcnRzIGFsc28gbXVzdCBiZSB0YWtlbu+8iTogb24gdGhlIG9uZSBoYW5kIGl0CgkJCQkJc2hvdWxkIGJlIGRpZmZpY3VsdCBmb3IgZW5lbWllcyB0byBpbnZhZGUgYW5kIGVhc3kgZm9yIHRoZSBwZW9wbGUgdGhlbXNlbHZlcyB0bwoJCQkJCW1hcmNoIG91dCBmcm9tLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMyN2EiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1327a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBpbiBhZGRpdGlvbiwgb24gdGhlIG90aGVyIGhhbmQsIHRoZSBzYW1lIHRoaW5nCgkJCQkJaG9sZHMgZ29vZCBvZiB0aGUgdGVycml0b3J5IHRoYXQgd2Ugc2FpZCBhYm91dCB0aGUgc2l6ZSBvZiB0aGUKCQkJCQlwb3B1bGF0aW9u4oCUaXQgbXVzdCBiZSB3ZWxsIGFibGUgdG8gYmUgdGFrZW4gaW4gYXQgb25lIHZpZXcsIGFuZCB0aGF0CgkJCQkJbWVhbnMgYmVpbmcgYSBjb3VudHJ5IGVhc3kgZm9yIG1pbGl0YXJ5IGRlZmVuY2UuIEFzIHRvIHRoZSBzaXRlIG9mIHRoZSBjaXR5LCBpZgoJCQkJCWl0IGlzIHRvIGJlIGlkZWFsbHkgcGxhY2VkLCBpdCBpcyBwcm9wZXIgZm9yIGl0IHRvIGJlIHdlbGwgc2l0dWF0ZWQgd2l0aCByZWdhcmQKCQkJCQlib3RoIHRvIHRoZSBzZWEgYW5kIHRvIHRoZSBjb3VudHJ5LiBPbmUgZGVmaW5pbmcgcHJpbmNpcGxlIGlzIHRoYXQgbWVudGlvbmVkCgkJCQkJCWFib3ZlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkF0IHRoZSBiZWdpbm5pbmcgb2YKCQkJCQk1LjIuPC9ub3RlPuKAlHRoZSBjaXR5IG11c3QgYmUgaW4gY29tbXVuaWNhdGlvbiB3aXRoIGFsbCBwYXJ0cyBvZiB0aGUKCQkJCQl0ZXJyaXRvcnkgZm9yIHRoZSBwdXJwb3NlIG9mIHNlbmRpbmcgb3V0IG1pbGl0YXJ5IGFzc2lzdGFuY2U7IGFuZCB0aGUgcmVtYWluaW5nCgkJCQkJcHJpbmNpcGxlIGlzIHRoYXQgaXQgbXVzdCBiZSBlYXNpbHkgYWNjZXNzaWJsZSBmb3IgdGhlIGNvbnZleWFuY2UgdG8gaXQgb2YgdGhlCgkJCQkJYWdyaWN1bHR1cmFsIHByb2R1Y2UsIGFuZCBhbHNvIG9mIHRpbWJlci13b29kIGFuZCBhbnkgb3RoZXIgc3VjaCBtYXRlcmlhbCB0aGF0CgkJCQkJdGhlIGNvdW50cnkgaGFwcGVucyB0byBwb3NzZXNzLjwvdHJhbnNsYXRpb24+"
translation['7.1327a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFzIHRvIGNvbW11bmljYXRpb24gd2l0aCB0aGUgc2VhIGl0IGlzIGluCgkJCQkJZmFjdCBtdWNoIGRlYmF0ZWQgd2hldGhlciBpdCBpcyBhZHZhbnRhZ2VvdXMgdG8gd2VsbC1vcmRlcmVkIHN0YXRlcyBvciBoYXJtZnVsLgoJCQkJCUl0IGlzIG1haW50YWluZWQgdGhhdCB0aGUgdmlzaXRzIG9mIHBlcnNvbnMgYnJvdWdodCB1cCB1bmRlciBvdGhlciBpbnN0aXR1dGlvbnMKCQkJCQlhcmUgZGV0cmltZW50YWwgdG8gbGF3IGFuZCBvcmRlciwgYW5kIHNvIGFsc28gaXMgYSBzd29sbGVuIHBvcHVsYXRpb24sIHdoaWNoCgkJCQkJZ3Jvd3Mgb3V0IG9mIHNlbmRpbmcgb3V0IGFicm9hZCBhbmQgcmVjZWl2aW5nIGluIGEgbnVtYmVyIG9mIHRyYWRlcnMsIGJ1dCBpcwoJCQkJCXVuZmF2b3JhYmxlIHRvIGdvb2QgZ292ZXJubWVudC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ob3cKCQkJCQlpdCBpcyBub3QgZGlmZmljdWx0IHRvIHNlZSB0aGF0LCBpZiB0aGVzZSBjb25zZXF1ZW5jZXMgYXJlIGF2b2lkZWQsIGl0IGlzCgkJCQkJYWR2YW50YWdlb3VzIGluIHJlc3BlY3Qgb2YgYm90aCBzZWN1cml0eSBhbmQgdGhlIHN1cHBseSBvZiBuZWNlc3NhcnkKCQkJCQkJY29tbW9kaXRpZXM8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhhdCB0aGUgY2l0eSBhbmQgdGhlCgkJCQkJY291bnRyeSBzaG91bGQgaGF2ZSBhY2Nlc3MgdG8gdGhlIHNlYS4gV2l0aCBhIHZpZXcgdG8gZW5kdXJpbmcgd2FycyBtb3JlIGVhc2lseQoJCQkJCXBlb3BsZSB0aGF0IGFyZSB0byBiZSBzZWN1cmUgbXVzdCBiZSBjYXBhYmxlIG9mIGRlZmVuc2l2ZSBvcGVyYXRpb25zIG9uIGJvdGgKCQkJCQllbGVtZW50cywgbGFuZCBhbmQgc2VhLCBhbmQgd2l0aCBhIHZpZXcgdG8gc3RyaWtpbmcgYXQgYXNzYWlsYW50cywgZXZlbiBpZiBpdCBiZQoJCQkJCW5vdCBwb3NzaWJsZSBvbiBib3RoIGVsZW1lbnRzLCB5ZXQgdG8gZG8gc28gb24gb25lIG9yIHRoZSBvdGhlciB3aWxsIGJlIG1vcmUgaW4KCQkJCQl0aGUgcG93ZXIgb2YgcGVvcGxlIHRoYXQgaGF2ZSBhY2Nlc3MgdG8gYm90aC4gQW5kIHRoZSBpbXBvcnRhdGlvbiBvZiBjb21tb2RpdGllcwoJCQkJCXRoYXQgdGhleSBkbyBub3QgaGFwcGVuIHRvIGhhdmUgaW4gdGhlaXIgb3duIGNvdW50cnkgYW5kIHRoZSBleHBvcnQgb2YgdGhlaXIKCQkJCQlzdXJwbHVzIHByb2R1Y3RzIGFyZSB0aGluZ3MgaW5kaXNwZW5zYWJsZTsgZm9yIHRoZSBzdGF0ZSBvdWdodCB0byBlbmdhZ2UgaW4KCQkJCQljb21tZXJjZSBmb3IgaXRzIG93biBpbnRlcmVzdCwgYnV0IG5vdCBmb3IgdGhlIGludGVyZXN0IG9mIHRoZSBmb3JlaWduZXIuCgkJCQkJCTwvdHJhbnNsYXRpb24+"
translation['7.1327b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS41IiB1bml0PSJMb2ViIGNoYXAiIC8+UGVvcGxlIHRoYXQgdGhyb3cgb3BlbiB0aGVpcgoJCQkJCW1hcmtldCB0byB0aGUgd29ybGQgZG8gc28gZm9yIHRoZSBzYWtlIG9mIHJldmVudWUsIGJ1dCBhIHN0YXRlIHRoYXQgaXMgbm90IHRvCgkJCQkJdGFrZSBwYXJ0IGluIHRoYXQgc29ydCBvZiBwcm9maXQtbWFraW5nIG5lZWQgbm90IHBvc3Nlc3MgYSBncmVhdCBjb21tZXJjaWFsCgkJCQkJcG9ydC4gQnV0IHNpbmNlIGV2ZW4gbm93IHdlIHNlZSBtYW55IGNvdW50cmllcyBhbmQgY2l0aWVzIHBvc3Nlc3Npbmcgc2VhLXBvcnRzCgkJCQkJYW5kIGhhcmJvcnMgY29udmVuaWVudGx5IHNpdHVhdGVkIHdpdGggcmVnYXJkIHRvIHRoZSBjaXR5LCBzbyBhcyBub3QgdG8gZm9ybQoJCQkJCXBhcnQgb2YgdGhlIHNhbWUgdG93bjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIHRoZSBHcmVlawoJCQkJCQlzaG91bGQgYmUgYWx0ZXJlZCB0byBnaXZlIOKAmHBhcnQgb2YgdGhlIHRvd24KCQkJCQkJaXRzZWxmLuKAmTwvbm90ZT4gYW5kIHlldCBub3QgdG8gYmUgdG9vIGZhciBvZmYsIGJ1dCBjb21tYW5kZWQgYnkKCQkJCQl3YWxscyBhbmQgb3RoZXIgZGVmZW5jZS13b3JrcyBvZiB0aGUga2luZCwgaXQgaXMgbWFuaWZlc3QgdGhhdCBpZiBhbnkgYWR2YW50YWdlCgkJCQkJZG9lcyByZXN1bHQgdGhyb3VnaCB0aGUgY29tbXVuaWNhdGlvbiBvZiBjaXR5IHdpdGggcG9ydCB0aGUgc3RhdGUgd2lsbCBwb3NzZXNzCgkJCQkJdGhpcyBhZHZhbnRhZ2UsIGFuZCBpZiB0aGVyZSBpcyBhbnkgaGFybWZ1bCByZXN1bHQgaXQgaXMgZWFzeSB0byBndWFyZCBhZ2FpbnN0CgkJCQkJaXQgYnkgbWVhbnMgb2YgbGF3cyBzdGF0aW5nIGFuZCByZWd1bGF0aW5nIHdoYXQgcGVyc29ucyBhcmUgbm90IGFuZCB3aGF0IHBlcnNvbnMKCQkJCQlhcmUgdG8gaGF2ZSBpbnRlcmNvdXJzZSB3aXRoIG9uZSBhbm90aGVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPk9uIHRoZSBxdWVzdGlvbiBvZiBuYXZhbCBmb3JjZXMsIHRoZXJlIGlzIG5vIGRvdWJ0IHRoYXQgdG8KCQkJCQlwb3NzZXNzIHRoZW0gdXAgdG8gYSBjZXJ0YWluIHN0cmVuZ3RoIGlzIG1vc3QgZGVzaXJhYmxlIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzI3YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1327b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPu+8iGZvciBhCgkJCQkJc3RhdGUgb3VnaHQgdG8gYmUgZm9ybWlkYWJsZSwgYW5kIGFsc28gY2FwYWJsZSBvZiB0aGUgZGVmZW5jZSBvZiBub3Qgb25seSBpdHMKCQkJCQlvd24gcGVvcGxlIGJ1dCBhbHNvIHNvbWUgb2YgaXRzIG5laWdoYm9ycywgYnkgc2VhIGFzIHdlbGwgYXMgYnkgbGFuZO+8iTsKCQkJCQlidXQgd2hlbiB3ZSBjb21lIHRvIHRoZSBxdWVzdGlvbiBvZiB0aGUgbnVtYmVyIGFuZCBzaXplIG9mIHRoaXMgZm9yY2UsIHdlIGhhdmUKCQkJCQl0byBjb25zaWRlciB0aGUgc3RhdGUncyBtYW5uZXIgb2YgbGlmZSBpZiBpdCBpcyB0byBsaXZlIGEgbGlmZSBvZiBsZWFkZXJzaGlwIGFuZAoJCQkJCQlhZmZhaXJzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHJlbGF0aW9ucyB3aXRoIG90aGVyCgkJCQkJCXN0YXRlc+KAlGEgYnJvYWRlciB0ZXJtIHRoYW4gaGVnZW1vbnksIGxlYWRlcnNoaXAgb2YgYW4KCQkJCQkJYWxsaWFuY2UuPC9ub3RlPiBpdCBtdXN0IHBvc3Nlc3MgbWFyaXRpbWUgYXMgd2VsbCBhcyBvdGhlciBmb3JjZXMKCQkJCQljb21tZW5zdXJhdGUgd2l0aCBpdHMgYWN0aXZpdGllcy4gPC90cmFuc2xhdGlvbj4="
translation['7.1327b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS43IiB1bml0PSJMb2ViIGNoYXAiIC8+T24KCQkJCQl0aGUgb3RoZXIgaGFuZCBpdCBpcyBub3QgbmVjZXNzYXJ5IGZvciBzdGF0ZXMgdG8gaW5jbHVkZSB0aGUgdGVlbWluZyBwb3B1bGF0aW9uCgkJCQkJdGhhdCBncm93cyB1cCBpbiBjb25uZWN0aW9uIHdpdGggY29tbW9uIHNhaWxvcnMsIGFzIHRoZXJlIGlzIG5vIG5lZWQgZm9yIHRoZXNlCgkJCQkJdG8gYmUgY2l0aXplbnM7IGZvciB0aGUgbWFyaW5lcyBhcmUgZnJlZSBtZW4gYW5kIGFyZSBhIHBhcnQgb2YgdGhlIGluZmFudHJ5LCBhbmQKCQkJCQlpdCBpcyB0aGV5IHdobyBoYXZlIGNvbW1hbmQgYW5kIGNvbnRyb2wgdGhlIGNyZXc7IGFuZCBpZiB0aGVyZSBleGlzdHMgYSBtYXNzIG9mCgkJCQkJdmlsbGFnZXJzIGFuZCB0aWxsZXJzIG9mIHRoZSBzb2lsLCB0aGVyZSBpcyBib3VuZCB0byBiZSBubyBsYWNrIG9mIHNhaWxvcnMgdG9vLgoJCQkJCUluIGZhY3Qgd2Ugc2VlIHRoaXMgc3RhdGUgb2YgdGhpbmcgZXhpc3RpbmcgZXZlbiBub3cgaW4gc29tZSBwbGFjZXMsIGZvcgoJCQkJCWluc3RhbmNlIGluIHRoZSBjaXR5IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA4Mjk5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDgyOTkiPkhlcmFjbGVhPC9wbGFjZU5hbWU+OyB0aGUKCQkJCQlIZXJhY2xlb3RlcyBtYW4gYSBsYXJnZSBmbGVldCBvZiB0cmlyZW1lcywgYWx0aG91Z2ggdGhleSBwb3NzZXNzIGEgY2l0eSBvZiBidXQKCQkJCQltb2RlcmF0ZSBzaXplIGFzIGNvbXBhcmVkIHdpdGggb3RoZXJzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZXQgc3VjaAoJCQkJCXRoZW4gYmUgb3VyIGNvbmNsdXNpb25zIGFib3V0IHRoZSB0ZXJyaXRvcmllcyBhbmQgaGFyYm9ycyBvZiBjaXRpZXMsIGFuZCB0aGUKCQkJCQlzZWEsIGFuZCBhYm91dCBuYXZhbCBmb3JjZXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWJvdXQgdGhlIGNpdGl6ZW4gcG9wdWxhdGlvbiwgd2Ugc2FpZAoJCQkJCWJlZm9yZSB3aGF0IGlzIGl0cyBwcm9wZXIgbGltaXQgb2YgbnVtYmVycy4gTGV0IHVzIG5vdyBzcGVhazxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5vZiB3aGF0IG91Z2h0IHRvIGJlIHRoZSBjaXRpemVucycgbmF0dXJhbAoJCQkJCWNoYXJhY3Rlci4gTm93IHRoaXMgb25lIG1pZ2h0IGFsbW9zdCBkaXNjZXJuIGJ5IGxvb2tpbmcgYXQgdGhlIGZhbW91cyBjaXRpZXMgb2YKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IGFuZCBieSBvYnNlcnZpbmcgaG93IHRoZQoJCQkJCXdob2xlIGluaGFiaXRlZCB3b3JsZCBpcyBkaXZpZGVkIHVwIGFtb25nIHRoZSBuYXRpb25zLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj40LiBmaW4uPC9ub3RlPiBUaGUgbmF0aW9ucyBpbmhhYml0aW5nIHRoZSBjb2xkIHBsYWNlcyBhbmQKCQkJCQl0aG9zZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDAwMyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDAzIj5FdXJvcGU8L3BsYWNlTmFtZT4gYXJlIGZ1bGwgb2Ygc3Bpcml0IGJ1dAoJCQkJCXNvbWV3aGF0IGRlZmljaWVudCBpbiBpbnRlbGxpZ2VuY2UgYW5kIHNraWxsLCBzbyB0aGF0IHRoZXkgY29udGludWUKCQkJCQljb21wYXJhdGl2ZWx5IGZyZWUsIGJ1dCBsYWNraW5nIGluIHBvbGl0aWNhbCBvcmdhbml6YXRpb24gYW5kIGNhcGFjaXR5IHRvIHJ1bGUKCQkJCQl0aGVpciBuZWlnaGJvcnMuIFRoZSBwZW9wbGVzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwMDQiPkFzaWE8L3BsYWNlTmFtZT4gb24KCQkJCQl0aGUgb3RoZXIgaGFuZCBhcmUgaW50ZWxsaWdlbnQgYW5kIHNraWxsZnVsIGluIHRlbXBlcmFtZW50LCBidXQgbGFjayBzcGlyaXQsIHNvCgkJCQkJdGhhdCB0aGV5IGFyZSBpbiBjb250aW51b3VzIHN1YmplY3Rpb24gYW5kIHNsYXZlcnkuIEJ1dCB0aGUgR3JlZWsgcmFjZQoJCQkJCXBhcnRpY2lwYXRlcyBpbiBib3RoIGNoYXJhY3RlcnMsIGp1c3QgYXMgaXQgb2NjdXBpZXMgdGhlIG1pZGRsZSBwb3NpdGlvbgoJCQkJCWdlb2dyYXBoaWNhbGx5LCBmb3IgaXQgaXMgYm90aCBzcGlyaXRlZCBhbmQgaW50ZWxsaWdlbnQ7IGhlbmNlIGl0IGNvbnRpbnVlcyB0bwoJCQkJCWJlIGZyZWUgYW5kIHRvIGhhdmUgdmVyeSBnb29kIHBvbGl0aWNhbCBpbnN0aXR1dGlvbnMsIGFuZCB0byBiZSBjYXBhYmxlIG9mCgkJCQkJcnVsaW5nIGFsbCBtYW5raW5kIGlmIGl0IGF0dGFpbnMgY29uc3RpdHV0aW9uYWwgdW5pdHkuIDwvdHJhbnNsYXRpb24+"
translation['7.1328a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHNhbWUgZGl2ZXJzaXR5IGFsc28gZXhpc3RzIGFtb25nIHRoZSBHcmVlayByYWNlcwoJCQkJCWNvbXBhcmVkIHdpdGggb25lIGFub3RoZXI6IHNvbWUgaGF2ZSBhIG9uZS1zaWRlZCBuYXR1cmUsIG90aGVycyBhcmUgaGFwcGlseQoJCQkJCWJsZW5kZWQgaW4gcmVnYXJkIHRvIGJvdGggdGhlc2UgY2FwYWNpdGllcy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBpbnRlbGxpZ2VuY2UgYW5kIGhpZ2ggc3Bpcml0LCBjYXBhY2l0eSBmb3Igc2VsZi1nb3Zlcm5tZW50IGFuZAoJCQkJCQljYXBhY2l0eSBmb3IgZW1waXJlLjwvbm90ZT4gSXQgaXMgY2xlYXIgdGhlcmVmb3JlIHRoYXQgcGVvcGxlIHRoYXQgYXJlIHRvIGJlCgkJCQkJZWFzaWx5IGd1aWRlZCB0byB2aXJ0dWUgYnkgdGhlIGxhd2dpdmVyIG11c3QgYmUgYm90aCBpbnRlbGxlY3R1YWwgYW5kIHNwaXJpdGVkCgkJCQkJaW4gdGhlaXIgbmF0dXJlLiBGb3IgYXMgdG8gd2hhdCBpcyBzYWlkIGJ5IGNlcnRhaW4gcGVyc29ucyBhYm91dCB0aGUgY2hhcmFjdGVyCgkJCQkJdGhhdCBzaG91bGQgYmVsb25nIHRvIHRoZWlyIEd1YXJkaWFuczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUKCQkJCQkJcnVsaW5nIGNsYXNzIGluIFBsYXRvJ3MgSWRlYWwgU3RhdGUsPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gUmVwLiAzNzVjIiB2YWxpZD0ieWVzIj5QbGF0LiBSZXAuCgkJCQkJCQkzNzVjPC9iaWJsPi48L25vdGU+4oCUdGhleSBzaG91bGQgYmUgYWZmZWN0aW9uYXRlIHRvIHRoZWlyCgkJCQkJZnJpZW5kcyBidXQgZmllcmNlIHRvd2FyZHMgc3RyYW5nZXJz4oCUaXQgaXMgc3Bpcml0IHRoYXQgY2F1c2VzCgkJCQkJYWZmZWN0aW9uYXRlbmVzcywgZm9yIHNwaXJpdCBpcyB0aGUgY2FwYWNpdHkgb2YgdGhlIHNvdWwgd2hlcmVieSB3ZSBsb3ZlLgoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBSZXAuIDM3NWMiIHZhbGlkPSJ5ZXMiPlBsYXQuIFJlcC4KCQkJCQkJCTM3NWM8L2JpYmw+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzI4YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1328a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1328a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QSBzaWduIG9mIHRoaXMgaXMKCQkJCQl0aGF0IHNwaXJpdCBpcyBtb3JlIHJvdXNlZCBhZ2FpbnN0IGFzc29jaWF0ZXMgYW5kIGZyaWVuZHMgdGhhbiBhZ2FpbnN0CgkJCQkJc3RyYW5nZXJzLCB3aGVuIGl0IHRoaW5rcyBpdHNlbGYgc2xpZ2h0ZWQuIFRoZXJlZm9yZSBBcmNoaWxvY2h1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BcmNoaWxvY2h1cyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTAyMyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMDIzIj5QYXJvczwvcGxhY2VOYW1lPiDvvIhvbmUgb2YgdGhlIGVhcmxpZXN0IGx5cmljIHBvZXRzLCBmbC4gPGRhdGUgYXV0aG5hbWU9Ii02MDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii02MDAiPjYwMDwvZGF0ZT4gQi5DLiwgdGhlIGludmVudG9yIG9mIHRoZSBpYW1iaWMgbWV0ZXIsIHdoaWNoIGhlCgkJCQkJCXVzZWQgZm9yIGxhbXBvb25z77yJLCBmci4gNjEgQmVyZ2ssIDY3NiBEaWVobCwgNjcKCQkJCQkJCUVkbW9uZHMsPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWxlZ3kgYW5kIElhbWJ1czwvdGl0bGU+LCAyLiAxMzMuPC9ub3RlPiBmb3IgaW5zdGFuY2UsCgkJCQkJd2hlbiByZXByb2FjaGluZyBoaXMgZnJpZW5kcywgYXBwcm9wcmlhdGVseSBhcG9zdHJvcGhpemVzIGhpcyBzcGlyaXQ6IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDExMDIzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTEwMjMiPlBhcm9zPC9wbGFjZU5hbWU+IO+8iG9uZSBvZiB0aGUgZWFybGllc3QgbHlyaWMgcG9ldHMsIGZsLiA8ZGF0ZSBhdXRobmFtZT0iLTYwMCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTYwMCI+NjAwPC9kYXRlPiBCLkMuLCB0aGUgaW52ZW50b3Igb2YgdGhlIGlhbWJpYyBtZXRlciwgd2hpY2ggaGUKCQkJCQkJdXNlZCBmb3IgbGFtcG9vbnPvvIksIGZyLiA2MSBCZXJnaywgNjc2IERpZWhsLCA2NwoJCQkJCQkJRWRtb25kcyw8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5FbGVneSBhbmQgSWFtYnVzPC90aXRsZT4sIDIuIDEzMy48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJseXJpYyI+Rm9yICd0aXMgdGh5IGZyaWVuZHMgdGhhdCBtYWtlIHRoZWUgY2hva2Ugd2l0aCByYWdlLjwvbD4KCQkJCQk8L3F1b3RlPiBNb3Jlb3ZlciBpdCBpcyBmcm9tIHRoaXMgZmFjdWx0eSB0aGF0IHBvd2VyIHRvIGNvbW1hbmQgYW5kIGxvdmUgb2YKCQkJCQlmcmVlZG9tIGFyZSBpbiBhbGwgY2FzZXMgZGVyaXZlZDsgZm9yIHNwaXJpdCBpcyBhIGNvbW1hbmRpbmcgYW5kIGluZG9taXRhYmxlCgkJCQkJZWxlbWVudC4gQnV0IGl0IGlzIGEgbWlzdGFrZSB0byBkZXNjcmliZSB0aGUgR3VhcmRpYW5zIGFzIGNydWVsIHRvd2FyZHMKCQkJCQlzdHJhbmdlcnM7IGl0IGlzIG5vdCByaWdodCB0byBiZSBjcnVlbCB0b3dhcmRzIGFueWJvZHksIGFuZCBtZW4gb2YgZ3JlYXQtc291bGVkCgkJCQkJbmF0dXJlIGFyZSBub3QgZmllcmNlIGV4Y2VwdCB0b3dhcmRzIHdyb25nZG9lcnMsIGFuZCB0aGVpciBhbmdlciBpcyBzdGlsbAoJCQkJCWZpZXJjZXIgYWdhaW5zdCB0aGVpciBjb21wYW5pb25zIGlmIHRoZXkgdGhpbmsgdGhhdCB0aGVzZSBhcmUgd3JvbmdpbmcgdGhlbSwgYXMKCQkJCQloYXMgYmVlbiBzYWlkIGJlZm9yZS4gPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9Imx5cmljIj5Gb3IgJ3RpcyB0aHkgZnJpZW5kcyB0aGF0IG1ha2UgdGhlZSBjaG9rZSB3aXRoIHJhZ2UuPC9sPgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoaXMgaXMKCQkJCQlyZWFzb25hYmxlLCBiZWNhdXNlIHRoZXkgdGhpbmsgdGhhdCBpbiBhZGRpdGlvbiB0byB0aGUgaGFybSBkb25lIHRoZW0gdGhleSBhcmUKCQkJCQlhbHNvIGJlaW5nIGRlZnJhdWRlZCBvZiBhIGJlbmVmaXQgYnkgcGVyc29ucyB3aG9tIHRoZXkgYmVsaWV2ZSB0byBvd2UgdGhlbSBvbmUuCgkJCQkJSGVuY2UgdGhlIHNheWluZ3MgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0ibHlyaWMiPkZvciBicm90aGVycycgd2FycyBhcmUgY3J1ZWwsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkV1ci4gRnIuIDk2NSI+RXVyLiBmcmFnLgoJCQkJCQkJOTY1PC9iaWJsPi48L25vdGU+PC9sPgoJCQkJCTwvcXVvdGU+IGFuZCA8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0ibHlyaWMiPkZvciBicm90aGVycycgd2FycyBhcmUgY3J1ZWwsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkV1ci4gRnIuIDk2NSI+RXVyLiBmcmFnLgoJCQkJCQkJOTY1PC9iaWJsPi48L25vdGU+PC9sPgoJCQkJCTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJFdXIuIEZyLiA5NjUiPkV1ci4gZnJhZy4KCQkJCQkJCTk2NTwvYmlibD4uPC9ub3RlPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkV1ci4gRnIuIDk2NSI+RXVyLiBmcmFnLgoJCQkJCQkJOTY1PC9iaWJsPi48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJpYW1iaWMiPlRoZXkgdGhhdCB0b28gZGVlcGx5IGxvdmVkIHRvbyBkZWVwbHkgaGF0ZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRXVyLiBGci4gNzgiPk5hdWNrIGZyYWcuIDc4PC9iaWJsPgoJCQkJCQkJPC9ub3RlPjwvbD4KCQkJCQk8L3F1b3RlPgoJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJpYW1iaWMiPlRoZXkgdGhhdCB0b28gZGVlcGx5IGxvdmVkIHRvbyBkZWVwbHkgaGF0ZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRXVyLiBGci4gNzgiPk5hdWNrIGZyYWcuIDc4PC9iaWJsPgoJCQkJCQkJPC9ub3RlPjwvbD4KCQkJCQk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRXVyLiBGci4gNzgiPk5hdWNrIGZyYWcuIDc4PC9iaWJsPgoJCQkJCQkJPC9ub3RlPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkV1ci4gRnIuIDc4Ij5OYXVjayBmcmFnLiA3ODwvYmlibD4KCQkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBoYXZlIG5vdyBhcHByb3hpbWF0ZWx5IGRlY2lkZWQgd2hhdCBhcmUgdGhlCgkJCQkJcHJvcGVyIG51bWJlcnMgYW5kIHRoZSBuYXR1cmFsIHF1YWxpdGllcyBvZiB0aG9zZSB3aG8gZXhlcmNpc2UgdGhlIHJpZ2h0IG9mCgkJCQkJY2l0aXplbnMsIGFuZCB0aGUgcHJvcGVyIGV4dGVudCBhbmQgbmF0dXJlIG9mIHRoZSB0ZXJyaXRvcnkg77yIZm9yIHdlCgkJCQkJbXVzdCBub3Q8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+c2VlayB0byBhdHRhaW4gdGhlIHNhbWUKCQkJCQlleGFjdG5lc3MgYnkgbWVhbnMgb2YgdGhlb3JldGljYWwgZGlzY3Vzc2lvbnMgYXMgaXMgb2J0YWluZWQgYnkgbWVhbnMgb2YgdGhlCgkJCQkJZmFjdHMgdGhhdCBjb21lIHRvIHVzIHRocm91Z2ggc2Vuc2UtcGVyY2VwdGlvbnPvvIkuPC90cmFuc2xhdGlvbj4="
translation['7.1328b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBzaW5jZSwganVzdCBhcwoJCQkJCXdpdGggYWxsIG90aGVyIG5hdHVyYWwgb3JnYW5pc21zIHRob3NlIHRoaW5ncyB0aGF0IGFyZSBpbmRpc3BlbnNhYmxlIGZvciB0aGUKCQkJCQlleGlzdGVuY2Ugb2YgdGhlIHdob2xlIGFyZSBub3QgcGFydHM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLgoJCQkJCQl0aGV5IGFyZSBub3QgPGVtcGggY2xhc3M9InRyYW5zbGF0aW9uIj5hbGwgb2YgdGhlbTwvZW1waD5wYXJ0czogdGhlIOKAmHBhcnRz4oCZCgkJCQkJCW9mIGEgdGhpbmcgYXJlIGFtb25nIHRoZSDigJhpbmRpc3BlbnNhYmxlIGNvbmRpdGlvbnPigJkgb2YKCQkJCQkJaXRzIGV4aXN0ZW5jZSwgYnV0IHRoZXJlIGFyZSBvdGhlcnMgYWxzby48L25vdGU+IG9mIHRoZSB3aG9sZSBvcmdhbml6YXRpb24sCgkJCQkJaXQgaXMgYWxzbyBjbGVhciB0aGF0IG5vdCBhbGwgdGhlIHRoaW5ncyB0aGF0IGFyZSBuZWNlc3NhcnkgZm9yIHN0YXRlcyB0bwoJCQkJCXBvc3Nlc3MgYXJlIHRvIGJlIGNvdW50ZWQgYXMgcGFydHMgb2YgYSBzdGF0ZSDvvIhhbnkgbW9yZSB0aGFuIHRoaXMgaXMgc28KCQkJCQl3aXRoIGFueSBvdGhlciBhc3NvY2lhdGlvbiB0aGF0IGZvcm1zIHNvbWV0aGluZyBvbmUgaW4ga2luZCwgZm9yIHRoZXJlIG11c3QgYmUKCQkJCQlzb21ldGhpbmcgdGhhdCBpcyBvbmUgYW5kIGNvbW1vbiBhbmQgdGhlIHNhbWUgZm9yIHRoZSBwYXJ0bmVycywgd2hldGhlciB0aGUKCQkJCQlzaGFyZXMgdGhhdCB0aGV5IHRha2UgYmUgZXF1YWwgb3IgdW5lcXVhbDogZm9yIGV4YW1wbGUgdGhpcyBjb21tb24gcHJvcGVydHkgbWF5CgkJCQkJYmUgZm9vZCBvciBhbiBhcmVhIG9mIGxhbmQgb3Igc29tZXRoaW5nIGVsc2Ugb2YgdGhlIHNhbWUgc29ydOKAlDxlbXBoIGNsYXNzPSJ0cmFuc2xhdGlvbiI+YWxsIG9mIHRoZW08L2VtcGg+cGFydHM6IHRoZSDigJhwYXJ0c+KAmQoJCQkJCQlvZiBhIHRoaW5nIGFyZSBhbW9uZyB0aGUg4oCYaW5kaXNwZW5zYWJsZSBjb25kaXRpb25z4oCZIG9mCgkJCQkJCWl0cyBleGlzdGVuY2UsIGJ1dCB0aGVyZSBhcmUgb3RoZXJzIGFsc28uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBzZW50ZW5jZSBpcyB1bmZpbmlzaGVkLjwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCB3aGVuIG9mIHR3byByZWxhdGVkIHRoaW5ncyBvbmUKCQkJCQlpcyBhIG1lYW5zIGFuZCB0aGUgb3RoZXIgYW4gZW5kLCBpbiB0aGVpciBjYXNlIHRoZXJlIGlzIG5vdGhpbmcgaW4gY29tbW9uIGV4Y2VwdAoJCQkJCWZvciB0aGUgb25lIHRvIGFjdCBhbmQgdGhlIG90aGVyIHRvIHJlY2VpdmUgdGhlIGFjdGlvbi4gSSBtZWFuIGZvciBpbnN0YW5jZSB0aGUKCQkJCQlyZWxhdGlvbiBiZXR3ZWVuIGFueSBpbnN0cnVtZW50IG9yIGFydGlmaWNlciBhbmQgdGhlIHdvcmsgdGhhdCB0aGV5IHByb2R1Y2U6CgkJCQkJYmV0d2VlbiBhIGhvdXNlIGFuZCBhIGJ1aWxkZXIgdGhlcmUgaXMgbm90aGluZyB0aGF0IGlzIHByb2R1Y2VkIGluIGNvbW1vbiwgYnV0CgkJCQkJdGhlIGJ1aWxkZXIncyBjcmFmdCBleGlzdHMgZm9yIHRoZSBzYWtlIG9mIHRoZSBob3VzZS4gSGVuY2UgYWx0aG91Z2ggc3RhdGVzIG5lZWQKCQkJCQlwcm9wZXJ0eSwgdGhlIHByb3BlcnR5IGlzIG5vIHBhcnQgb2YgdGhlIHN0YXRlLiBBbmQgdGhlcmUgYXJlIG1hbnkgbGl2aW5nIHRoaW5ncwoJCQkJCXRoYXQgZmFsbCB1bmRlciB0aGUgaGVhZCBvZiBwcm9wZXJ0eS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UG9zc2libHkgdGhlIHdvcmRzIGZyb20gdGhlIGJlZ2lubmluZyBvZiA3LjIg4oCYQnV0IHdoZW7igJkKCQkJCQkJdG8gdGhpcyBwb2ludCBzaG91bGQgYmUgdHJhbnNmZXJyZWQgYmVsb3cgdG8gNy4zIG1pZC4gYWZ0ZXIKCQkJCQkJ4oCYZGlmZmVyZW50IGNvbnN0aXR1dGlvbnMu4oCZPC9ub3RlPiBBbmQgdGhlIHN0YXRlIGlzIG9uZQoJCQkJCWZvcm0gb2YgcGFydG5lcnNoaXAgb2Ygc2ltaWxhciBwZW9wbGUsIGFuZCBpdHMgb2JqZWN0IGlzIHRoZSBiZXN0IGxpZmUgdGhhdCBpcwoJCQkJCXBvc3NpYmxlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzaW5jZSB0aGUgZ3JlYXRlc3QKCQkJCQlnb29kIGlzIGhhcHBpbmVzcywgYW5kIHRoaXMgaXMgc29tZSBwZXJmZWN0IGFjdGl2aXR5IG9yIGVtcGxveW1lbnQgb2YgdmlydHVlLAoJCQkJCWFuZCBzaW5jZSBpdCBoYXMgc28gY29tZSBhYm91dCB0aGF0IGl0IGlzIHBvc3NpYmxlIGZvciBzb21lIG1lbiB0byBwYXJ0aWNpcGF0ZQoJCQkJCWluIGl0LCBidXQgZm9yIG90aGVycyBvbmx5IHRvIGEgc21hbGwgZXh0ZW50IG9yIG5vdCBhdCBhbGwsIGl0IGlzIGNsZWFyIHRoYXQKCQkJCQl0aGlzIGlzIHRoZSBjYXVzZSBmb3IgdGhlcmUgYXJpc2luZyBkaWZmZXJlbnQga2luZHMgYW5kIHZhcmlldGllcyBvZiBzdGF0ZSBhbmQKCQkJCQlzZXZlcmFsIGZvcm1zIG9mIGNvbnN0aXR1dGlvbjsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMjhiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1328b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBhcyBlYWNoIHNldCBvZiBwZW9wbGUgcHVyc3VlcwoJCQkJCXBhcnRpY2lwYXRpb24gaW4gaGFwcGluZXNzIGluIGEgZGlmZmVyZW50IG1hbm5lciBhbmQgYnkgZGlmZmVyZW50IG1lYW5zIHRoZXkKCQkJCQltYWtlIGZvciB0aGVtc2VsdmVzIGRpZmZlcmVudCBtb2RlcyBvZiBsaWZlIGFuZCBkaWZmZXJlbnQgY29uc3RpdHV0aW9ucy4gQW5kIHdlCgkJCQkJbXVzdCBhbHNvIGZ1cnRoZXIgY29uc2lkZXIgaG93IG1hbnkgdGhlcmUgYXJlIG9mIHRoZXNlIHRoaW5ncyByZWZlcnJlZCB0byB0aGF0CgkJCQkJYXJlIGluZGlzcGVuc2FibGUgZm9yIHRoZSBleGlzdGVuY2Ugb2YgYSBzdGF0ZTsgZm9yIGFtb25nIHRoZW0gd2lsbCBiZSB0aGUKCQkJCQl0aGluZ3Mgd2hpY2ggd2UgcHJvbm91bmNlIHRvIGJlIHBhcnRzIG9mIGEgc3RhdGUsIG93aW5nIHRvIHdoaWNoIHRoZWlyIHByZXNlbmNlCgkJCQkJaXMgZXNzZW50aWFsLiA8L3RyYW5zbGF0aW9uPg=="
translation['7.1328b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy40IiB1bml0PSJMb2ViIGNoYXAiIC8+V2UgbXVzdCB0aGVyZWZvcmUKCQkJCQljb25zaWRlciB0aGUgbGlzdCBvZiBvY2N1cGF0aW9ucyB0aGF0IGEgc3RhdGUgcmVxdWlyZXMgOiBmb3IgZnJvbSB0aGVzZSBpdCB3aWxsCgkJCQkJYXBwZWFyIHdoYXQgdGhlIGluZGlzcGVuc2FibGUgY2xhc3NlcyBhcmUuIEZpcnN0IHRoZW4gYSBzdGF0ZSBtdXN0IGhhdmUgYSBzdXBwbHkKCQkJCQlvZiBmb29kOyBzZWNvbmRseSwgaGFuZGljcmFmdHMg77yIc2luY2UgbGlmZSBuZWVkcyBtYW55IHRvb2xz77yJOwoJCQkJCXRoaXJkLCBhcm1zIO+8iHNpbmNlIHRoZSBtZW1iZXJzIG9mIHRoZSBhc3NvY2lhdGlvbiBtdXN0IG5lY2Vzc2FyaWx5CgkJCQkJcG9zc2VzcyBhcm1zIGJvdGggdG8gdXNlIGFtb25nIHRoZW1zZWx2ZXMgYW5kIGZvciBwdXJwb3NlcyBvZiBnb3Zlcm5tZW50LCBpbgoJCQkJCWNhc2VzIG9mIGluc3Vib3JkaW5hdGlvbiwgYW5kIHRvIGVtcGxveSBhZ2FpbnN0IHRob3NlIHdobyB0cnkgdG8gbW9sZXN0IHRoZW0KCQkJCQlmcm9tIHdpdGhvdXTvvIk7IGFsc28gYSBjZXJ0YWluIGFidW5kYW5jZSBvZiBtb25leSwgaW4gb3JkZXIgdGhhdCB0aGV5CgkJCQkJbWF5IGhhdmUgZW5vdWdoIGJvdGggZm9yIHRoZWlyIGludGVybmFsIG5lZWRzIGFuZCBmb3IgcmVxdWlyZW1lbnRzIG9mIHdhcjsKCQkJCQlmaWZ0aCwgYSBwcmltYXJ5IG5lZWQsIHRoZSBzZXJ2aWNlIG9mIHJlbGlnaW9uLCB0ZXJtZWQgYSBwcmllc3Rob29kOyBhbmQgc2l4dGgKCQkJCQlpbiBudW1iZXIgYW5kIG1vc3QgbmVjZXNzYXJ5IG9mIGFsbCwgYSBwcm92aXNpb24gZm9yIGRlY2lkaW5nIHF1ZXN0aW9ucyBvZgoJCQkJCWludGVyZXN0cyBhbmQgb2YgcmlnaHRzIGJldHdlZW4gdGhlIGNpdGl6ZW5zLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXNlIHRoZW4gYXJlIHRoZSBvY2N1cGF0aW9ucyB0aGF0IHZpcnR1YWxseSBldmVyeSBzdGF0ZQoJCQkJCXJlcXVpcmVzIO+8iGZvciB0aGUgc3RhdGUgaXMgbm90IGFueSBjaGFuY2UgbXVsdGl0dWRlIG9mIHBlb3BsZSBidXQgb25lCgkJCQkJc2VsZi1zdWZmaWNpZW50IGZvciB0aGUgbmVlZHMgb2YgbGlmZSwgYXMgd2Ugc2F5LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gQm9va3MgMi4xLjcsIDMuMS44LCA1LjIuMTAuPC9ub3RlPiBhbmQgaWYgYW55IG9mIHRoZXNlCgkJCQkJaW5kdXN0cmllcyBoYXBwZW5zIHRvIGJlIHdhbnRpbmcsIGl0IGlzIGltcG9zc2libGUgZm9yIHRoYXQgYXNzb2NpYXRpb24gdG8gYmUKCQkJCQlhYnNvbHV0ZWx5IHNlbGYtc3VmZmljaWVudO+8iS4gSXQgaXMgbmVjZXNzYXJ5IHRoZXJlZm9yZSBmb3IgdGhlIHN0YXRlIHRvCgkJCQkJYmUgb3JnYW5pemVkPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm9uIHRoZSBsaW5lcyBvZiB0aGVzZQoJCQkJCWZ1bmN0aW9uczsgY29uc2VxdWVudGx5IGl0IG11c3QgcG9zc2VzcyBhIG51bWJlciBvZiBmYXJtZXJzIHdobyB3aWxsIHByb3ZpZGUgdGhlCgkJCQkJZm9vZCwgYW5kIGNyYWZ0c21lbiwgYW5kIHRoZSBtaWxpdGFyeSBjbGFzcywgYW5kIHRoZSB3ZWFsdGh5LCBhbmQgcHJpZXN0cyBhbmQKCQkJCQlqdWRnZXMgdG8gZGVjaWRlIHF1ZXN0aW9ucyBvZiBuZWNlc3NpdHk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUgdGV4dCBzaG91bGQgYmUgYWx0ZXJlZCB0byBnaXZlIOKAmG1hdHRlcnMgb2YKCQkJCQkJanVzdGljZS7igJk8L25vdGU+IGFuZCBvZiBpbnRlcmVzdHMuPC90cmFuc2xhdGlvbj4="
translation['7.1329a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIG1hdHRlcnMgaGF2aW5nIGJlZW4KCQkJCQlzZXR0bGVkLCBpdCByZW1haW5zIHRvIGNvbnNpZGVyIHdoZXRoZXIgZXZlcnlib2R5IGlzIHRvIHRha2UgcGFydCBpbiBhbGwgb2YKCQkJCQl0aGVzZSBmdW5jdGlvbnMg77yIZm9yIGl0IGlzIHBvc3NpYmxlIGZvciB0aGUgd2hvbGUgb2YgdGhlIHBlb3BsZSB0byBiZQoJCQkJCWF0IG9uY2UgZmFybWVycyBhbmQgY3JhZnRzbWVuIGFuZCB0aGUgY291bmNpbGxvcnMgYW5kIGp1ZGdlc++8iSwgb3IKCQkJCQl3aGV0aGVyIHdlIGFyZSB0byBhc3N1bWUgZGlmZmVyZW50IGNsYXNzZXMgY29ycmVzcG9uZGluZyB0byBlYWNoIG9mIHRoZQoJCQkJCWZ1bmN0aW9ucyBtZW50aW9uZWQsIG9yIHdoZXRoZXIgc29tZSBvZiB0aGVtIG11c3QgbmVjZXNzYXJpbHkgYmUgc3BlY2lhbGl6ZWQgYW5kCgkJCQkJb3RoZXJzIGNvbWJpbmVkLiBCdXQgaXQgd2lsbCBub3QgYmUgdGhlIHNhbWUgaW4gZXZlcnkgZm9ybSBvZiBjb25zdGl0dXRpb247IGZvciwKCQkJCQlhcyB3ZSBzYWlkLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gQm9vayA0LjQgYW5kIDE0Ljwvbm90ZT4gaXQgaXMKCQkJCQlwb3NzaWJsZSBlaXRoZXIgZm9yIGFsbCB0aGUgcGVvcGxlIHRvIHRha2UgcGFydCBpbiBhbGwgdGhlIGZ1bmN0aW9ucyBvciBmb3Igbm90CgkJCQkJYWxsIHRvIHRha2UgcGFydCBpbiBhbGwgYnV0IGZvciBjZXJ0YWluIHBlb3BsZSB0byBoYXZlIGNlcnRhaW4gZnVuY3Rpb25zLiBJbgoJCQkJCWZhY3QgdGhlc2UgZGlmZmVyZW50IGRpc3RyaWJ1dGlvbnMgb2YgZnVuY3Rpb25zIGFyZSB0aGUgY2F1c2Ugb2YgdGhlIGRpZmZlcmVuY2UKCQkJCQliZXR3ZWVuIGNvbnN0aXR1dGlvbnM6IGRlbW9jcmFjaWVzIGFyZSBzdGF0ZXMgaW4gd2hpY2ggYWxsIHRoZSBwZW9wbGUKCQkJCQlwYXJ0aWNpcGF0ZSBpbiBhbGwgdGhlIGZ1bmN0aW9ucywgb2xpZ2FyY2hpZXMgd2hlcmUgdGhlIGNvbnRyYXJ5IGlzIHRoZSBjYXNlLgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBhdCBwcmVzZW50IHdlIGFyZSBzdHVkeWluZwoJCQkJCXRoZSBiZXN0IGNvbnN0aXR1dGlvbiwgYW5kIHRoaXMgaXMgdGhlIGNvbnN0aXR1dGlvbiB1bmRlciB3aGljaCB0aGUgc3RhdGUgd291bGQKCQkJCQliZSBtb3N0IGhhcHB5LCBhbmQgaXQgaGFzIGJlZW4gc3RhdGVkIGJlZm9yZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4xLjUuPC9ub3RlPiB0aGF0IGhhcHBpbmVzcyBjYW5ub3QgYmUgZm9ydGhjb21pbmcgd2l0aG91dCB2aXJ0dWU7IGl0IGlzCgkJCQkJdGhlcmVmb3JlIGNsZWFyIGZyb20gdGhlc2UgY29uc2lkZXJhdGlvbnMgdGhhdCBpbiB0aGUgbW9zdCBub2JseSBjb25zdGl0dXRlZAoJCQkJCXN0YXRlLCBhbmQgdGhlIG9uZSB0aGF0IHBvc3Nlc3NlcyBtZW4gdGhhdCBhcmUgYWJzb2x1dGVseSBqdXN0LCBub3QgbWVyZWx5IGp1c3QKCQkJCQlyZWxhdGl2ZWx5IHRvIHRoZSBwcmluY2lwbGUgdGhhdCBpcyB0aGUgYmFzaXMgb2YgdGhlIGNvbnN0aXR1dGlvbiwgdGhlIGNpdGl6ZW5zCgkJCQkJbXVzdCBub3QgbGl2ZSBhIG1lY2hhbmljIG9yIGEgbWVyY2FudGlsZSBsaWZlIO+8iGZvciBzdWNoIGEgbGlmZSBpcwoJCQkJCWlnbm9ibGUgYW5kIGluaW1pY2FsIHRvIHZpcnR1Ze+8iSwgbm9yIHlldCBtdXN0IHRob3NlIHdobyBhcmUgdG8gYmUKCQkJCQljaXRpemVucyBpbiB0aGUgYmVzdCBzdGF0ZSBiZSB0aWxsZXJzIG9mIHRoZSBzb2lsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzI5YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1329a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPu+8iGZvcgoJCQkJCWxlaXN1cmUgaXMgbmVlZGVkIGJvdGggZm9yIHRoZSBkZXZlbG9wbWVudCBvZiB2aXJ0dWUgYW5kIGZvciBhY3RpdmUKCQkJCQlwYXJ0aWNpcGF0aW9uIGluIHBvbGl0aWNz77yJLiA8L3RyYW5zbGF0aW9uPg=="
translation['7.1329a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHNpbmNlIHRoZSBzdGF0ZSBhbHNvIGNvbnRhaW5zIHRoZSBtaWxpdGFyeSBjbGFzcyBhbmQgdGhlIGNsYXNzIHRoYXQKCQkJCQlkZWxpYmVyYXRlcyBhYm91dCBtYXR0ZXJzIG9mIHBvbGljeSBhbmQganVkZ2VzIHF1ZXN0aW9ucyBvZiBqdXN0aWNlLCBhbmQgdGhlc2UKCQkJCQlhcmUgbWFuaWZlc3RseSBpbiBhIHNwZWNpYWwgc2Vuc2UgcGFydHMgb2YgdGhlIHN0YXRlLCBhcmUgdGhlc2UgY2xhc3NlcyBhbHNvIHRvCgkJCQkJYmUgc2V0IGRvd24gYXMgZGlzdGluY3Qgb3IgYXJlIGJvdGggZnVuY3Rpb25zIHRvIGJlIGFzc2lnbmVkIHRvIHRoZSBzYW1lCgkJCQkJcGVyc29ucz8gQnV0IGhlcmUgYWxzbyB0aGUgYW5zd2VyIGlzIGNsZWFyLCBiZWNhdXNlIGluIGEgY2VydGFpbiBzZW5zZSB0aGV5CgkJCQkJc2hvdWxkIGJlIGFzc2lnbmVkIHRvIHRoZSBzYW1lIHBlcnNvbnMsIGJ1dCBpbiBhIGNlcnRhaW4gc2Vuc2UgdG8gZGlmZmVyZW50CgkJCQkJb25lcy4gSW5hc211Y2ggYXMgZWFjaCBvZiB0aGVzZSB0d28gZnVuY3Rpb25zIGJlbG9uZ3MgdG8gYSBkaWZmZXJlbnQgcHJpbWUgb2YKCQkJCQlsaWZlLCBhbmQgb25lIHJlcXVpcmVzIHdpc2RvbSwgdGhlIG90aGVyIHN0cmVuZ3RoLCB0aGV5IGFyZSB0byBiZSBhc3NpZ25lZCB0bwoJCQkJCWRpZmZlcmVudCBwZW9wbGU7IGJ1dCBpbmFzbXVjaCBhcyBpdCBpcyBhIHRoaW5nIGltcG9zc2libGUgdGhhdCB3aGVuIGEgc2V0IG9mCgkJCQkJbWVuIGFyZSBhYmxlIHRvIGVtcGxveSBmb3JjZSBhbmQgdG8gcmVzaXN0IGNvbnRyb2wsIHRoZXNlIHNob3VsZCBzdWJtaXQgYWx3YXlzCgkJCQkJdG8gYmUgcnVsZWQsIGZyb20gdGhpcyBwb2ludCBvZiB2aWV3IGJvdGggZnVuY3Rpb25zIG11c3QgYmUgYXNzaWduZWQgdG8gdGhlIHNhbWUKCQkJCQlwZW9wbGU7IGZvciB0aG9zZSB3aG8gaGF2ZSB0aGUgcG93ZXIgb2YgYXJtcyBoYXZlIHRoZSBwb3dlciB0byBkZWNpZGUgd2hldGhlcgoJCQkJCXRoZSBjb25zdGl0dXRpb24gc2hhbGwgc3RhbmQgb3IgZmFsbC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgb25seSBjb3Vyc2UgbGVmdCB0aGVtIGlzIHRvIGFzc2lnbiB0aGlzIGNvbnN0aXR1dGlvbmFsIGZ1bmN0aW9uIHRvIGJvdGgKCQkJCQlzZXRzIG9mIG1lbiB3aXRob3V0IGRpc3RpbmN0aW9uLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciwgYW1lbmRpbmcKCQkJCQkJdGhpcyBjdXJpb3VzIEdyZWVrLCDigJhmb3IgdGhlIGNvbnN0aXR1dGlvbiB0byBhc3NpZ24gYm90aCB0aGVzZQoJCQkJCQlmdW5jdGlvbnMgdG8gdGhlIHNhbWUgcGVvcGxlLuKAmTwvbm90ZT4geWV0IG5vdCBzaW11bHRhbmVvdXNseSwgYnV0LAoJCQkJCWFzIGluIHRoZSBuYXR1cmFsIG9yZGVyIG9mIHRoaW5ncyBzdHJlbmd0aCBpcyBmb3VuZCBpbiB0aGUgeW91bmdlciBtZW4gYW5kCgkJCQkJd2lzZG9tIGluIHRoZSBlbGRlciwgaXQgc2VlbXMgdG8gYmUgZXhwZWRpZW50IGFuZCBqdXN0IGZvciB0aGVpciBmdW5jdGlvbnMgdG8gYmUKCQkJCQlhbGxvdHRlZCB0byBib3RoIGluIHRoaXMgd2F5LCBmb3IgdGhpcyBtb2RlIG9mIGRpdmlzaW9uIHBvc3Nlc3NlcyBjb25mb3JtaXR5CgkJCQkJd2l0aCBtZXJpdC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Nb3Jlb3ZlciB0aGUgb3duZXJzaGlwCgkJCQkJb2YgcHJvcGVydGllcyBhbHNvIG11c3QgYmUgY2VudGVyZWQgcm91bmQgdGhlc2UgY2xhc3NlcywgZm9yIHRoZSBjaXRpemVucyBtdXN0CgkJCQkJbmVjZXNzYXJpbHkgcG9zc2VzcyBwbGVudGlmdWwgbWVhbnMsIGFuZCB0aGVzZSBhcmUgdGhlIGNpdGl6ZW5zLiBGb3IKCQkJCQkJdGhlPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFydGlzYW4gY2xhc3MgaGFzIG5vIHNoYXJlIGluCgkJCQkJdGhlIHN0YXRlLCBub3IgaGFzIGFueSBvdGhlciBjbGFzcyB0aGF0IGlzIG5vdCDigJhhbiBhcnRpZmljZXIgb2YKCQkJCQkJdmlydHVlLuKAmTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIFBsYXRvbmljIHBocmFzZSwKCQkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFJlcC4gNTAwZCIgdmFsaWQ9InllcyI+UGxhdC4gUmVwLiA1MDBkPC9iaWJsPi48L25vdGU+IEFuZCB0aGlzIGlzCgkJCQkJY2xlYXIgZnJvbSBvdXIgYmFzaWMgcHJpbmNpcGxlOyBmb3IgaW4gY29uanVuY3Rpb24gd2l0aCB2aXJ0dWUgaGFwcGluZXNzIGlzCgkJCQkJYm91bmQgdG8gYmUgZm9ydGhjb21pbmcsIGJ1dCB3ZSBzaG91bGQgcHJvbm91bmNlIGEgc3RhdGUgaGFwcHkgaGF2aW5nIHJlZ2FyZCBub3QKCQkJCQl0byBhIHBhcnRpY3VsYXIgc2VjdGlvbiBvZiBpdCBidXQgdG8gYWxsIGl0cyBjaXRpemVucy4gQW5kIGl0IGlzIGFsc28gbWFuaWZlc3QKCQkJCQl0aGF0IHRoZSBwcm9wZXJ0aWVzIG11c3QgYmVsb25nIHRvIHRoZXNlIGNsYXNzZXMsIGluYXNtdWNoIGFzPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gUmVwLiA1MDBkIiB2YWxpZD0ieWVzIj5QbGF0LiBSZXAuIDUwMGQ8L2JpYmw+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BcyB0aGlzIGlzIGEgbmV3IHBvaW50LCBwZXJoYXBzIHdlIHNob3VsZAoJCQkJCQl0cmFuc3Bvc2Ug4oCYaW5hc211Y2ggYXPigJkg77yIIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs614by0z4DOtc+BPC9mb3JlaWduPu+8iSBhbmQg4oCYdGhhdOKAmSDvvIgKCQkJCQkJCTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9hc+Ezrk8L2ZvcmVpZ24+77yJIGluIHRoZSBsaW5lCgkJCQkJCWFib3ZlLjwvbm90ZT4gaXQgaXMgbmVjZXNzYXJ5IGZvciB0aGUgdGlsbGVycyBvZiB0aGUgc29pbCB0byBiZSBzbGF2ZXMsIG9yCgkJCQkJc2VyZnMgb2YgYWxpZW4gcmFjZS4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrXhvLTPgM61z4E8L2ZvcmVpZ24+77yJIGFuZCDigJh0aGF04oCZIO+8iAoJCQkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2Fz4TOuTwvZm9yZWlnbj7vvIkgaW4gdGhlIGxpbmUKCQkJCQkJYWJvdmUuPC90cmFuc2xhdGlvbj4="
translation['7.1329b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC42IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmUgcmVtYWlucwoJCQkJCW9mIHRoZSBsaXN0IGVudW1lcmF0ZWQgdGhlIGNsYXNzIG9mIHByaWVzdHM7IGFuZCB0aGUgcG9zaXRpb24gb2YgdGhpcyBjbGFzcyBhbHNvCgkJCQkJaXMgbWFuaWZlc3QuIFByaWVzdHMgbXVzdCBiZSBhcHBvaW50ZWQgbmVpdGhlciBmcm9tIHRoZSB0aWxsZXJzIG9mIHRoZSBzb2lsIG5vcgoJCQkJCWZyb20gdGhlIGFydGlzYW5zLCBmb3IgaXQgaXMgc2VlbWx5IHRoYXQgdGhlIGdvZHMgc2hvdWxkIGJlIHdvcnNoaXBwZWQgYnkKCQkJCQljaXRpemVuczsgYW5kIHNpbmNlIHRoZSBjaXRpemVuIGJvZHkgaXMgZGl2aWRlZCBpbnRvIHR3byBwYXJ0cywgdGhlIG1pbGl0YXJ5CgkJCQkJY2xhc3MgYW5kIHRoZSBjb3VuY2lsbG9yIGNsYXNzLCBhbmQgYXMgaXQgaXMgc2VlbWx5IHRoYXQgdGhvc2Ugd2hvIGhhdmUKCQkJCQlyZWxpbnF1aXNoZWQgdGhlc2UgZHV0aWVzIG93aW5nIHRvIGFnZSBzaG91bGQgcmVuZGVyIHRvIHRoZSBnb2RzIHRoZWlyIGR1ZQoJCQkJCXdvcnNoaXAgYW5kIHNob3VsZCBzcGVuZCB0aGVpciByZXRpcmVtZW50IGluIHRoZWlyIHNlcnZpY2UsIGl0IGlzIHRvIHRoZXNlIHRoYXQKCQkJCQl0aGUgcHJpZXN0bHkgb2ZmaWNlcyBzaG91bGQgYmUgYXNzaWduZWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlIGhhdmUKCQkJCQl0aGVyZWZvcmUgc3RhdGVkIHRoZSB0aGluZ3MgaW5kaXNwZW5zYWJsZSBmb3IgdGhlIGNvbnN0aXR1dGlvbiBvZiBhIHN0YXRlLCBhbmQKCQkJCQl0aGUgdGhpbmdzIHRoYXQgYXJlIHBhcnRzIG9mIGEgc3RhdGU6IHRpbGxlcnMgb2YgdGhlIHNvaWwsIGNyYWZ0c21lbiBhbmQgdGhlCgkJCQkJbGFib3JpbmcgY2xhc3MgZ2VuZXJhbGx5IGFyZSBhIG5lY2Vzc2FyeSBhcHB1cnRlbmFuY2Ugb2Ygc3RhdGVzLCBidXQgdGhlCgkJCQkJbWlsaXRhcnkgYW5kIGRlbGliZXJhdGl2ZSBjbGFzc2VzIGFyZSBwYXJ0cyBvZiB0aGUgc3RhdGU7IGFuZCBtb3Jlb3ZlciBlYWNoIG9mCgkJCQkJdGhlc2UgZGl2aXNpb25zIGlzIHNlcGFyYXRlIGZyb20gdGhlIG90aGVycywgZWl0aGVyIHBlcm1hbmVudGx5IG9yIGJ5IHR1cm4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIOKAmGFwcHVydGVuYW5jZXPigJkKCQkJCQkJYXJlIHBlcm1hbmVudGx5IHNlcGFyYXRlIGZvcm0gdGhlIGFybXkgYW5kIHRoZSBkZWxpYmVyYXRpdmUsIHdoaWNoIGFyZSB0aGUKCQkJCQkJ4oCYcGFydHMs4oCZIGFuZCB3aGljaCBhcmUgc2VwYXJhdGUgZnJvbSBlYWNoIG90aGVyIG9ubHkKCQkJCQkJ4oCYYnkgdHVybizigJkgaS5lLiBhIGNpdGl6ZW4gcGFzc2VzIG9uIGZyb20gb25lIHRvIHRoZQoJCQkJCQlvdGhlci48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kCgkJCQkJdGhhdCBpdCBpcyBwcm9wZXIgZm9yIHRoZSBzdGF0ZSB0byBiZSBkaXZpZGVkIHVwIGludG8gY2FzdGVzIGFuZCBmb3IgdGhlCgkJCQkJbWlsaXRhcnkgY2xhc3MgdG8gYmUgZGlzdGluY3QgZnJvbSB0aGF0IG9mIHRoZSB0aWxsZXJzIG9mIHRoZSBzb2lsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzI5YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1329b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmRvZXMgbm90CgkJCQkJc2VlbSB0byBiZSBhIGRpc2NvdmVyeSBvZiBwb2xpdGljYWwgcGhpbG9zb3BoZXJzIG9mIHRvZGF5IG9yIG9uZSBtYWRlCgkJCQkJCXJlY2VudGx5Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIHRvIGJlIHJlYWQgYXMgZGVueWluZwoJCQkJCQl0aGUgb3JpZ2luYWxpdHkgb2YgUGxhdG8nczx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlJlcHVibGljPC90aXRsZT4uPC9ub3RlPiBJbiA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5SZXB1YmxpYzwvdGl0bGU+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2ODMzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY4MzMiPkVneXB0PC9wbGFjZU5hbWU+IHRoaXMgYXJyYW5nZW1lbnQgc3RpbGwgZXhpc3RzIGV2ZW4gbm93LAoJCQkJCWFzIGFsc28gaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIwNTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjA1NiI+Q3JldGU8L3BsYWNlTmFtZT47IGl0IGlzIHNhaWQgdG8gaGF2ZQoJCQkJCWJlZW4gZXN0YWJsaXNoZWQgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjgzMyI+RWd5cHQ8L3BsYWNlTmFtZT4gYnkgdGhlCgkJCQkJbGVnaXNsYXRpb24gb2YgU2Vzb3N0cmlzIGFuZCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMjA1NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEyMDU2Ij5DcmV0ZTwvcGxhY2VOYW1lPgoJCQkJCWJ5IHRoYXQgb2YgTWlub3MuIDwvdHJhbnNsYXRpb24+"
translation['7.1329b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+Q29tbW9uIG1lYWxzIGFsc28KCQkJCQlzZWVtIHRvIGJlIGFuIGFuY2llbnQgaW5zdGl0dXRpb24sIHRob3NlIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTIwNTYiPkNyZXRlPC9wbGFjZU5hbWU+IGhhdmluZyBiZWd1biBpbiB0aGUgcmVpZ24gb2YgTWlub3MsIHdoaWxlIHRob3NlIGluCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDgwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwODAiPkl0YWx5PC9wbGFjZU5hbWU+IGFyZSBtdWNoIG9sZGVyIHRoYW4gdGhlc2UuCgkJCQkJQWNjb3JkaW5nIHRvIHRoZSBoaXN0b3JpYW5zIG9uZSBvZiB0aGUgc2V0dGxlcnMgdGhlcmUsIGEgY2VydGFpbiBJdGFsdXMsIGJlY2FtZQoJCQkJCWtpbmcgb2YgT2Vub3RyaWEsIGFuZCBmcm9tIGhpbSB0aGV5IHRvb2sgdGhlIG5hbWUgb2YgSXRhbGlhbnMgaW5zdGVhZCBvZiB0aGF0IG9mCgkJCQkJT2Vub3RyaWFucywgYW5kIHRoZSBuYW1lIG9mIEl0YWx5IHdhcyBnaXZlbiB0byBhbGwgdGhhdCBwcm9tb250b3J5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIHNvdXRoLXdlc3QgcGVuaW5zdWxhIG9yIHRvZSBvZgoJCQkJCQlJdGFseS48L25vdGU+IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDAzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwMDMiPkV1cm9wZTwvcGxhY2VOYW1lPiBseWluZwoJCQkJCWJldHdlZW4gdGhlIEd1bGZzIG9mIFNjeWxsZXRpdW0gYW5kIG9mIExhbWV0dXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIEd1bGZzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA0Mjk0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDQyOTQiPlNxdWlsbGFjZTwvcGxhY2VOYW1lPiBhbmQgRXVmZW1pYS48L25vdGU+IHdoaWNoIGFyZSBoYWxmIGEgZGF5J3MKCQkJCQlqb3VybmV5IGFwYXJ0LiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNDI5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA0Mjk0Ij5TcXVpbGxhY2U8L3BsYWNlTmFtZT4gYW5kIEV1ZmVtaWEuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JdCB3YXMgdGhpcyBJdGFsdXMKCQkJCQl0aGVuIHdobyBhY2NvcmRpbmcgdG8gdHJhZGl0aW9uIGNvbnZlcnRlZCB0aGUgT2Vub3RyaWFucyBmcm9tIGEgcGFzdG9yYWwgbGlmZSB0bwoJCQkJCW9uZSBvZiBhZ3JpY3VsdHVyZSBhbmQgZ2F2ZSB0aGVtIHZhcmlvdXMgb3JkaW5hbmNlcywgYmVpbmcgdGhlIGZpcnN0IHRvCgkJCQkJaW5zdGl0dXRlIHRoZWlyIHN5c3RlbSBvZiBjb21tb24gbWVhbHM7IGhlbmNlIHRoZSBjb21tb24gbWVhbHMgYW5kIHNvbWUgb2YgaGlzCgkJCQkJbGF3cyBhcmUgc3RpbGwgb2JzZXJ2ZWQgYnkgY2VydGFpbiBvZiBoaXMgc3VjY2Vzc29ycyBldmVuIHRvZGF5LiBUaGUgc2V0dGxlcnMgaW4KCQkJCQl0aGUgZGlyZWN0aW9uIG9mIFR5cnJoZW5pYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgbW9kZXJuCgkJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwOTc2MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA5NzYwIj5UdXNjYW55PC9wbGFjZU5hbWU+LCBpLmUuIHRoZSBwZW9wbGUgb2YKCQkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA0NjEwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDQ2MTAiPkx1Y2FuaWE8L3BsYWNlTmFtZT4sIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAzMDA1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDMwMDUiPkNhbXBhbmlhPC9wbGFjZU5hbWU+IGFuZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzA4MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAzMDgwIj5MYXRpdW08L3BsYWNlTmFtZT4uPC9ub3RlPiB3ZXJlIE9waWNhbnMsIHdobyB0b2RheSBhcyBpbiBmb3JtZXIgdGltZXMKCQkJCQliZWFyIHRoZSBzdXJuYW1lIG9mPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDk3NjAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwOTc2MCI+VHVzY2FueTwvcGxhY2VOYW1lPiwgaS5lLiB0aGUgcGVvcGxlIG9mCgkJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNDYxMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA0NjEwIj5MdWNhbmlhPC9wbGFjZU5hbWU+LCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzAwNSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAzMDA1Ij5DYW1wYW5pYTwvcGxhY2VOYW1lPiBhbmQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDMwODAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMzA4MCI+TGF0aXVtPC9wbGFjZU5hbWU+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5BdXNvbmlhbnM7IHRoZQoJCQkJCXJlZ2lvbiB0b3dhcmRzIElhcHlnaWE8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHNvdXRoLWVhc3QKCQkJCQkJcHJvbW9udG9yeSBvciBoZWVsIG9mIEl0YWx5Ljwvbm90ZT4gYW5kIHRoZSBJb25pYW4gR3VsZiwgY2FsbGVkIFN5cnRpcywgd2FzCgkJCQkJaW5oYWJpdGVkIGJ5IHRoZSBDaG9uZXMsIHdobyBhbHNvIHdlcmUgT2Vub3RyaWFucyBieSByYWNlLiA8L3RyYW5zbGF0aW9uPg=="
translation['7.1330a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS40IiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgZnJvbSB0aGlzIGNvdW50cnkgdGhhdCB0aGUgc3lzdGVtIG9mIGNvbW1vbgoJCQkJCW1lYWxzIGhhcyBpdHMgb3JpZ2luLCB3aGlsZSB0aGUgZGl2aXNpb24gb2YgdGhlIGNpdGl6ZW4tYm9keSBieSBoZXJlZGl0YXJ5IGNhc3RlCgkJCQkJY2FtZSBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2ODMzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTY4MzMiPkVneXB0PC9wbGFjZU5hbWU+LCBmb3IgdGhlIHJlaWduIG9mCgkJCQkJU2Vzb3N0cmlzIGxvbmcgYW50ZWRhdGVzIHRoYXQgb2YgTWlub3MuIFdlIG1heSBhbG1vc3QgdGFrZSBpdCB0aGVyZWZvcmUgdGhhdCBhbGwKCQkJCQlvdGhlciBwb2xpdGljYWwgZGV2aWNlcyBhbHNvIGhhdmUgYmVlbiBkaXNjb3ZlcmVkIHJlcGVhdGVkbHksIG9yIHJhdGhlciBhbgoJCQkJCWluZmluaXRlIG51bWJlciBvZiB0aW1lcyBvdmVyLCBpbiB0aGUgbGFwc2Ugb2YgYWdlczsgZm9yIHRoZSBkaXNjb3ZlcmllcyBvZiBhCgkJCQkJbmVjZXNzYXJ5IGtpbmQgYXJlIHByb2JhYmx5IHRhdWdodCBieSBuZWVkIGl0c2VsZiwgYW5kIHdoZW4gdGhlIG5lY2Vzc2FyaWVzIGhhdmUKCQkJCQliZWVuIHByb3ZpZGVkIGl0IGlzIHJlYXNvbmFibGUgdGhhdCB0aGluZ3MgY29udHJpYnV0aW5nIHRvIHJlZmluZW1lbnQgYW5kIGx1eHVyeQoJCQkJCXNob3VsZCBmaW5kIHRoZWlyIGRldmVsb3BtZW50OyBzbyB0aGF0IHdlIG11c3QgYXNzdW1lIHRoYXQgdGhpcyBpcyB0aGUgd2F5IHdpdGgKCQkJCQlwb2xpdGljYWwgaW5zdGl0dXRpb25zIGFsc28uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS41IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlCgkJCQkJYW50aXF1aXR5IG9mIGFsbCBvZiB0aGVtIGlzIGluZGljYXRlZCBieSB0aGUgaGlzdG9yeSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjgzMyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2ODMzIj5FZ3lwdDwvcGxhY2VOYW1lPjsgZm9yIHRoZSBFZ3lwdGlhbnMgYXJlIHJlcHV0ZWQgdG8gYmUgdGhlCgkJCQkJb2xkZXN0IG9mIG5hdGlvbnMsIGJ1dCB0aGV5IGhhdmUgYWx3YXlzIGhhZCBsYXdzIGFuZCBhIHBvbGl0aWNhbCBzeXN0ZW0uIEhlbmNlCgkJCQkJd2Ugc2hvdWxkIHVzZSB0aGUgcmVzdWx0cyBvZiBwcmV2aW91cyBkaXNjb3Zlcnkgd2hlbiBhZGVxdWF0ZSwgd2hpbGUgZW5kZWF2b3JpbmcKCQkJCQl0byBpbnZlc3RpZ2F0ZSBtYXR0ZXJzIGhpdGhlcnRvIHBhc3NlZCBvdmVyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdAoJCQkJCWhhcyBiZWVuIHN0YXRlZCBiZWZvcmUgdGhhdCB0aGUgbGFuZCBvdWdodCB0byBiZSBvd25lZCBieSB0aG9zZSB3aG8gcG9zc2VzcyBhcm1zCgkJCQkJYW5kIHRob3NlIHdobyBzaGFyZSB0aGUgcmlnaHRzIG9mIHRoZSBjb25zdGl0dXRpb24sIGFuZCB3aHkgdGhlIGN1bHRpdmF0b3JzCgkJCQkJb3VnaHQgdG8gYmUgYSBkaWZmZXJlbnQgY2FzdGUgZnJvbSB0aGVzZSwgYW5kIHdoYXQgaXMgdGhlIHByb3BlciBleHRlbnQgYW5kCgkJCQkJY29uZm9ybWF0aW9uIG9mIHRoZSBjb3VudHJ5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjkuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPldlIGhhdmUKCQkJCQlub3cgdG8gZGlzY3VzcyBmaXJzdCB0aGUgYWxsb3RtZW50IG9mIHRoZSBsYW5kLCBhbmQgdGhlIHByb3BlciBjbGFzcyBhbmQKCQkJCQljaGFyYWN0ZXIgb2YgaXRzIGN1bHRpdmF0b3JzOyBzaW5jZSB3ZSBhZHZvY2F0ZSBub3QgY29tbW9uIG93bmVyc2hpcCBvZiBsYW5kLCBhcwoJCQkJCXNvbWUgaGF2ZSBkb25lLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMzMGEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1330a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCBjb21tdW5pdHkgaW4gaXQgYnJvdWdodCBhYm91dCBpbiBhIGZyaWVuZGx5IHdheQoJCQkJCWJ5IHRoZSB1c2Ugb2YgaXQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgdmFndWUgcGhyYXNlCgkJCQkJCe+8iGJhc2VkIG9uIHRoZSBwcm92ZXJiIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs66zr/Ouc694b2wIM+E4b2wIM+E4b+2zr0KCQkJCQkJCc+G4b23zrvPic69PC9mb3JlaWduPiwg4oCYZnJpZW5kcycgZ29vZHMgYXJlIGNvbW1vbgoJCQkJCQlwcm9wZXJ0eeKAme+8iSBzZWVtcyB0byBkZW5vdGUgc29tZSBzb3J0IG9mIGN1c3RvbWFyeQoJCQkJCQljb21tdW5pc20gaW4gdGhlIGN1bHRpdmF0aW9uIG9mIHRoZSBsYW5kIGFuZCBlbmpveW1lbnQgb2YgdGhlIHByb2R1Y2UsCgkJCQkJCWNvbWJpbmVkIHdpdGggcHJpdmF0ZSBvd25lcnNoaXAgb2YgdGhlIGZyZWVob2xkLjwvbm90ZT4gYW5kIHdlIGhvbGQgdGhhdCBubwoJCQkJCWNpdGl6ZW4gc2hvdWxkIGJlIGlsbCBzdXBwbGllZCB3aXRoIG1lYW5zIG9mIHN1YnNpc3RlbmNlLiBBcyB0byBjb21tb24gbWVhbHMsCgkJCQkJYWxsIGFncmVlIHRoYXQgdGhpcyBpcyBhbiBpbnN0aXR1dGlvbiBhZHZhbnRhZ2VvdXMgZm9yIHdlbGwtb3JnYW5pemVkIHN0YXRlcyB0bwoJCQkJCXBvc3Nlc3M7IG91ciBvd24gcmVhc29ucyBmb3Igc2hhcmluZyB0aGlzIHZpZXcgd2Ugd2lsbCBzdGF0ZSBsYXRlci48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6/zrnOveG9sCDPhOG9sCDPhOG/ts69CgkJCQkJCQnPhuG9t867z4nOvTwvZm9yZWlnbj4sIOKAmGZyaWVuZHMnIGdvb2RzIGFyZSBjb21tb24KCQkJCQkJcHJvcGVydHnigJnvvIkgc2VlbXMgdG8gZGVub3RlIHNvbWUgc29ydCBvZiBjdXN0b21hcnkKCQkJCQkJY29tbXVuaXNtIGluIHRoZSBjdWx0aXZhdGlvbiBvZiB0aGUgbGFuZCBhbmQgZW5qb3ltZW50IG9mIHRoZSBwcm9kdWNlLAoJCQkJCQljb21iaW5lZCB3aXRoIHByaXZhdGUgb3duZXJzaGlwIG9mIHRoZSBmcmVlaG9sZC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBwcm9taXNlIGlzIG5vdCBmdWxmaWxsZWQuPC9ub3RlPiBCdXQgdGhlCgkJCQkJY29tbW9uIG1lYWxzIG11c3QgYmUgc2hhcmVkIGJ5IGFsbCB0aGUgY2l0aXplbnMsIGFuZCBpdCBpcyBub3QgZWFzeSBmb3IgdGhlIHBvb3IKCQkJCQl0byBjb250cmlidXRlIHRoZWlyIGFzc2Vzc2VkIHNoYXJlIGZyb20gdGhlaXIgcHJpdmF0ZSBtZWFucyBhbmQgYWxzbyB0byBtYWludGFpbgoJCQkJCXRoZWlyIGhvdXNlaG9sZCBhcyB3ZWxsLiA8L3RyYW5zbGF0aW9uPg=="
translation['7.1330a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS43IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kCgkJCQkJbW9yZW92ZXIgdGhlIGV4cGVuc2VzIGNvbm5lY3RlZCB3aXRoIHJlbGlnaW9uIGFyZSB0aGUgY29tbW9uIGNvbmNlcm4gb2YgdGhlCgkJCQkJd2hvbGUgc3RhdGUuIEl0IGlzIG5lY2Vzc2FyeSB0aGVyZWZvcmUgZm9yIHRoZSBsYW5kIHRvIGJlIGRpdmlkZWQgaW50byB0d28KCQkJCQlwYXJ0cywgb2Ygd2hpY2ggb25lIG11c3QgYmUgY29tbW9uIGFuZCB0aGUgb3RoZXIgdGhlIHByaXZhdGUgcHJvcGVydHkgb2YKCQkJCQlpbmRpdmlkdWFsczsgYW5kIGVhY2ggb2YgdGhlc2UgdHdvIGRpdmlzaW9ucyBtdXN0IGFnYWluIGJlIGRpdmlkZWQgaW4gdHdvLiBPZgoJCQkJCXRoZSBjb21tb24gbGFuZCBvbmUgcG9ydGlvbiBzaG91bGQgYmUgYXNzaWduZWQgdG8gdGhlIHNlcnZpY2VzIG9mIHJlbGlnaW9uLCBhbmQKCQkJCQl0aGUgb3RoZXIgdG8gZGVmcmF5IHRoZSBjb3N0IG9mIHRoZSBjb21tb24gbWVhbHM7IG9mIHRoZSBsYW5kIGluIHByaXZhdGUKCQkJCQlvd25lcnNoaXAgb25lIHBhcnQgc2hvdWxkIGJlIHRoZSBkaXN0cmljdCBuZWFyIHRoZSBmcm9udGllcnMsIGFuZCBhbm90aGVyIHRoZQoJCQkJCWRpc3RyaWN0IG5lYXIgdGhlIGNpdHksIGluIG9yZGVyIHRoYXQgdHdvIHBsb3RzIG1heSBiZSBhc3NpZ25lZCB0byBlYWNoIGNpdGl6ZW4KCQkJCQlhbmQgYWxsIG1heSBoYXZlIGEgc2hhcmUgaW4gYm90aCBkaXN0cmljdHMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS44IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhpcyBhcnJhbmdlbWVudCBzYXRpc2ZpZXMgZXF1aXR5IGFuZCBqdXN0aWNlLCBhbmQgYWxzbwoJCQkJCWNvbmR1Y2VzIHRvIGdyZWF0ZXIgdW5hbmltaXR5IGluIGZhY2luZyBib3JkZXIgd2FyZmFyZS4gV2hlcmUgdGhpcyBzeXN0ZW0gaXMgbm90CgkJCQkJZm9sbG93ZWQsIG9uZSBzZXQgb2YgcGVvcGxlIGFyZSByZWNrbGVzcyBhYm91dCBxdWFycmVsbGluZyB3aXRoIHRoZSBuZWlnaGJvcmluZwoJCQkJCQlzdGF0ZXMsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZCB0aGUgb3RoZXIgc2V0IGFyZSB0b28KCQkJCQljYXV0aW91cyBhbmQgbmVnbGVjdCBjb25zaWRlcmF0aW9ucyBvZiBob25vci4gSGVuY2Ugc29tZSBwZW9wbGUgaGF2ZSBhIGxhdyB0aGF0CgkJCQkJdGhlIGNpdGl6ZW5zIHdob3NlIGxhbmQgaXMgbmVhciB0aGUgZnJvbnRpZXIgYXJlIG5vdCB0byB0YWtlIHBhcnQgaW4KCQkJCQlkZWxpYmVyYXRpb24gYXMgdG8gd2FycyBhZ2FpbnN0IG5laWdoYm9yaW5nIHN0YXRlcywgb24gdGhlIGdyb3VuZCB0aGF0IHByaXZhdGUKCQkJCQlpbnRlcmVzdCB3b3VsZCBwcmV2ZW50IHRoZW0gZnJvbSBiZWluZyBhYmxlIHRvIHRha2UgY291bnNlbCB3aXNlbHkuIFRoZSBsYW5kCgkJCQkJbXVzdCB0aGVyZWZvcmUgYmUgZGl2aWRlZCB1cCBpbiB0aGlzIG1hbm5lciBiZWNhdXNlIG9mIHRoZSByZWFzb25zCgkJCQkJCWFmb3Jlc2FpZC48L3RyYW5zbGF0aW9uPg=="
translation['7.1330b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS45IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRob3NlIHdobyBhcmUgdG8gY3VsdGl2YXRlIHRoZSBzb2lsIHNob3VsZCBiZXN0IG9mIGFsbCwgaWYgdGhlCgkJCQkJaWRlYWwgc3lzdGVtIGlzIHRvIGJlIHN0YXRlZCwgYmUgc2xhdmVzLCBub3QgZHJhd24gZnJvbSBwZW9wbGUgYWxsIG9mIG9uZSB0cmliZQoJCQkJCW5vciBvZiBhIHNwaXJpdGVkIGNoYXJhY3RlciDvvIhmb3IgdGh1cyB0aGV5IHdvdWxkIGJlIGJvdGggc2VydmljZWFibGUKCQkJCQlmb3IgdGhlaXIgd29yayBhbmQgc2FmZSB0byBhYnN0YWluIGZyb20gaW5zdXJyZWN0aW9u77yJLCBidXQgYXMgYSBzZWNvbmQKCQkJCQliZXN0IHRoZXkgc2hvdWxkIGJlIGFsaWVuIHNlcmZzIG9mIGEgc2ltaWxhciBuYXR1cmUuIE9mIHRoZXNlIGxhYm9yZXJzIHRob3NlIGluCgkJCQkJcHJpdmF0ZSBlbXBsb3ltZW50IG11c3QgYmUgYW1vbmcgdGhlIHByaXZhdGUgcG9zc2Vzc2lvbnMgb2YgdGhlIG93bmVycyBvZiB0aGUKCQkJCQllc3RhdGVzLCBhbmQgdGhvc2Ugd29ya2luZyBvbiB0aGUgY29tbW9uIGxhbmQgY29tbW9uIHByb3BlcnR5LiBIb3cgc2xhdmVzIHNob3VsZAoJCQkJCWJlIGVtcGxveWVkLCBhbmQgd2h5IGl0IGlzIGFkdmFudGFnZW91cyB0aGF0IGFsbCBzbGF2ZXMgc2hvdWxkIGhhdmUgdGhlaXIKCQkJCQlmcmVlZG9tIHNldCBiZWZvcmUgdGhlbSBhcyBhIHJld2FyZCwgd2Ugd2lsbCBzYXkgbGF0ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgcHJvbWlzZSBpcyBub3QgZnVsZmlsbGVkLjwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQKCQkJCQloYXMgYmVlbiBzYWlkIGJlZm9yZSB0aGF0IHRoZSBjaXR5IHNob3VsZCBzbyBmYXIgYXMgY2lyY3Vtc3RhbmNlcyBwZXJtaXQgYmUgaW4KCQkJCQljb21tdW5pY2F0aW9uIGFsaWtlIHdpdGggdGhlIG1haW5sYW5kLCB0aGUgc2VhIGFuZCB0aGUgd2hvbGUgb2YgaXRzIHRlcnJpdG9yeS4KCQkJCQlUaGUgc2l0ZSBvZiB0aGUgY2l0eSBpdHNlbGYgd2UgbXVzdCBwcmF5IHRoYXQgZm9ydHVuZSBtYXkgcGxhY2Ugb24gc2xvcGluZwoJCQkJCWdyb3VuZCwgaGF2aW5nIHJlZ2FyZCB0byBmb3VyIGNvbnNpZGVyYXRpb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkFwcGFyZW50bHkg77yIMe+8iSBmcmVzaCBhaXIsIO+8iDLvvIkgd2F0ZXIKCQkJCQkJc3VwcGx5LCDvvIgz77yJIGFkbWluaXN0cmF0aW9uLCDvvIg077yJIG1pbGl0YXJ5CgkJCQkJCXJlcXVpcmVtZW50cy48L25vdGU+OiBmaXJzdCwgYXMgYSB0aGluZyBlc3NlbnRpYWwsIHRoZSBjb25zaWRlcmF0aW9uIG9mCgkJCQkJaGVhbHRoIO+8iGZvciBjaXRpZXMgd2hvc2Ugc2l0ZSBzbG9wZXMgZWFzdCBvciB0b3dhcmRzIHRoZSBicmVlemVzIHRoYXQKCQkJCQlibG93IGZyb20gdGhlIHN1bnJpc2UgYXJlIG1vcmUgaGVhbHRoeSwgYW5kIGluIHRoZSBzZWNvbmQgZGVncmVlIHRob3NlIHRoYXQgZmFjZQoJCQkJCWF3YXkgZnJvbSB0aGUgbm9ydGggd2luZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+TGl0ZXJhbGx5LAoJCQkJCQnigJhpbiB0aGUgZGlyZWN0aW9uIGluIHdoaWNoIHRoZSBub3J0aCB3aW5kIGJsb3dzLuKAmTwvbm90ZT4KCQkJCQlmb3IgdGhlc2UgYXJlIG1pbGRlciBpbiB3aW50ZXLvvIk7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzMwYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1330b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1330b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBhbW9uZyB0aGUgcmVtYWluaW5nIGNvbnNpZGVyYXRpb25zLCBhIHNsb3Bpbmcgc2l0ZSBpcwoJCQkJCWZhdm9yYWJsZSBib3RoIGZvciBwb2xpdGljYWwgYW5kIGZvciBtaWxpdGFyeSBwdXJwb3Nlcy4gRm9yIG1pbGl0YXJ5IHB1cnBvc2VzCgkJCQkJdGhlcmVmb3JlIHRoZSBzaXRlIHNob3VsZCBiZSBlYXN5IG9mIGV4aXQgZm9yIHRoZSBjaXRpemVucyB0aGVtc2VsdmVzLCBhbmQKCQkJCQlkaWZmaWN1bHQgZm9yIHRoZSBhZHZlcnNhcnkgdG8gYXBwcm9hY2ggYW5kIHRvIGJsb2NrYWRlLCBhbmQgaXQgbXVzdCBwb3NzZXNzIGlmCgkJCQkJcG9zc2libGUgYSBwbGVudGlmdWwgbmF0dXJhbCBzdXBwbHkgb2YgcG9vbHMgYW5kIHNwcmluZ3MsIGJ1dCBmYWlsaW5nIHRoaXMsIGEKCQkJCQltb2RlIGhhcyBiZWVuIGludmVudGVkIG9mIHN1cHBseWluZyB3YXRlciBieSBtZWFucyBvZiBjb25zdHJ1Y3RpbmcgYW4gYWJ1bmRhbmNlCgkJCQkJb2YgbGFyZ2UgcmVzZXJ2b2lycyBmb3IgcmFpbi13YXRlciwgc28gdGhhdCBhIHN1cHBseSBtYXkgbmV2ZXIgZmFpbCB0aGUgY2l0aXplbnMKCQkJCQl3aGVuIHRoZXkgYXJlIGRlYmFycmVkIGZyb20gdGhlaXIgdGVycml0b3J5IGJ5IHdhci4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHNpbmNlIHdlIGhhdmUgdG8gY29uc2lkZXIgdGhlIGhlYWx0aCBvZiB0aGUKCQkJCQlpbmhhYml0YW50cywgYW5kIHRoaXMgZGVwZW5kcyB1cG9uIHRoZSBwbGFjZSBiZWluZyB3ZWxsIHNpdHVhdGVkIGJvdGggb24gaGVhbHRoeQoJCQkJCWdyb3VuZCBhbmQgd2l0aCBhIGhlYWx0aHkgYXNwZWN0LCBhbmQgc2Vjb25kbHkgdXBvbiB1c2luZyB3aG9sZXNvbWUKCQkJCQl3YXRlci1zdXBwbGllcywgdGhlIGZvbGxvd2luZyBtYXR0ZXIgYWxzbyBtdXN0IGJlIGF0dGVuZGVkIHRvIGFzIG9mIHByaW1hcnkKCQkJCQlpbXBvcnRhbmNlLiBUaG9zZSB0aGluZ3Mgd2hpY2ggd2UgdXNlIGZvciB0aGUgYm9keSBpbiB0aGUgbGFyZ2VzdCBxdWFudGl0eSwgYW5kCgkJCQkJbW9zdCBmcmVxdWVudGx5LCBjb250cmlidXRlIG1vc3QgdG8gaGVhbHRoOyBhbmQgdGhlIGluZmx1ZW5jZSBvZiB0aGUKCQkJCQl3YXRlci1zdXBwbHkgYW5kIG9mIHRoZSBhaXIgaXMgb2YgdGhpcyBuYXR1cmUuIEhlbmNlIGluIHdpc2UgY2l0aWVzIGlmIGFsbCB0aGUKCQkJCQlzb3VyY2VzIG9mIHdhdGVyIGFyZSBub3QgZXF1YWxseSBwdXJlIGFuZCB0aGVyZSBpcyBub3QgYW4gYWJ1bmRhbmNlIG9mIHN1aXRhYmxlCgkJCQkJc3ByaW5ncywgdGhlIHdhdGVyLXN1cHBsaWVzIGZvciBkcmlua2luZyBtdXN0IGJlIGtlcHQgc2VwYXJhdGUgZnJvbSB0aG9zZSBmb3IKCQkJCQlvdGhlciByZXF1aXJlbWVudHMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFzIHRvIGZvcnRpZmllZAoJCQkJCXBvc2l0aW9ucywgd2hhdCBpcyBleHBlZGllbnQgaXMgbm90IHRoZSBzYW1lIGZvciBhbGwgZm9ybXMgb2YgY29uc3RpdHV0aW9uCgkJCQkJYWxpa2U7IGZvciBleGFtcGxlLCBhIGNpdGFkZWwtaGlsbCBpcyBzdWl0YWJsZSBmb3Igb2xpZ2FyY2h5IGFuZAoJCQkJCQltb25hcmNoeSw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIGEgbGV2ZWwgc2l0ZSBmb3IKCQkJCQlkZW1vY3JhY3k7IG5laXRoZXIgaXMgZmF2b3JhYmxlIHRvIGFuIGFyaXN0b2NyYWN5LCBidXQgcmF0aGVyIHNldmVyYWwgc3Ryb25nCgkJCQkJcG9zaXRpb25zLiBUaGUgYXJyYW5nZW1lbnQgb2YgdGhlIHByaXZhdGUgZHdlbGxpbmdzIGlzIHRob3VnaHQgdG8gYmUgbW9yZQoJCQkJCWFncmVlYWJsZSBhbmQgbW9yZSBjb252ZW5pZW50IGZvciBnZW5lcmFsIHB1cnBvc2VzIGlmIHRoZXkgYXJlIGxhaWQgb3V0IGluCgkJCQkJc3RyYWlnaHQgc3RyZWV0cywgYWZ0ZXIgdGhlIG1vZGVybiBmYXNoaW9uLCB0aGF0IGlzLCB0aGUgb25lIGludHJvZHVjZWQgYnkKCQkJCQkJSGlwcG9kYW11czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgQm9vayAyLjUuPC9ub3RlPjsgYnV0IGl0CgkJCQkJaXMgbW9yZSBzdWl0YWJsZSBmb3Igc2VjdXJpdHkgaW4gd2FyIGlmIGl0IGlzIG9uIHRoZSBjb250cmFyeSBwbGFuLCBhcyBjaXRpZXMKCQkJCQl1c2VkIHRvIGJlIGluIGFuY2llbnQgdGltZXM7IGZvciB0aGF0IGFycmFuZ2VtZW50IGlzIGRpZmZpY3VsdCBmb3IgZm9yZWlnbgoJCQkJCQl0cm9vcHM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBhbiBlbmVteSdzIG1lcmNlbmFyaWVzOyBidXQKCQkJCQkJdGhlIE1TUy4gZ2l2ZSDigJhkaWZmaWN1bHQgZm9yIGZvcmVpZ24gdHJvb3BzIHRvIG1ha2Ugc29ydGllcyBmcm9tCgkJCQkJCVtpLmUuIHByZXN1bWFibHkgdG8gZmluZCB0aGVpciB3YXkgb3V0IHdoZW4gb25jZSB0aGV5IGhhdmUgZ290IGluLAoJCQkJCQljZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iVGh1Yy4gMi40LjIiIHZhbGlkPSJ5ZXMiPlRodWMuIDIuNC4yPC9iaWJsPl0gYW5kIGZvciBhdHRhY2tlcnMgdG8KCQkJCQkJZmluZCB0aGVpciB3YXkgYWJvdXQgaW4u4oCZPC9ub3RlPiB0byBlbnRlciBhbmQgdG8gZmluZCB0aGVpciB3YXkKCQkJCQlhYm91dCBpbiB3aGVuIGF0dGFja2luZy4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iVGh1Yy4gMi40LjIiIHZhbGlkPSJ5ZXMiPlRodWMuIDIuNC4yPC9iaWJsPl0gYW5kIGZvciBhdHRhY2tlcnMgdG8KCQkJCQkJZmluZCB0aGVpciB3YXkgYWJvdXQgaW4u4oCZPC90cmFuc2xhdGlvbj4="
translation['7.1331a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlIGl0CgkJCQkJaXMgd2VsbCB0byBjb21iaW5lIHRoZSBhZHZhbnRhZ2VzIG9mIGJvdGggcGxhbnMg77yIZm9yIHRoaXMgaXMgcG9zc2libGUKCQkJCQlpZiB0aGUgaG91c2VzIGFyZSBsYWlkIG91dCBpbiB0aGUgd2F5IHdoaWNoIGFtb25nIHRoZSBmYXJtZXJzIHNvbWUgcGVvcGxlIGNhbGwKCQkJCQnigJhvbiB0aGUgc2xhbnTigJk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIFJvbWFuCgkJCQkJCQk8ZW1waCBjbGFzcz0idHJhbnNsYXRpb24iPnF1aW5jdW54PC9lbXBoPiwgZWFjaCBwbGFudCBvZiBvbmUgcm93IGJlaW5nIGluIGxpbmUgd2l0aCB0aGUgZ2FwCgkJCQkJCWJldHdlZW4gdHdvIHBsYW50cyBvZiB0aGUgbmV4dCByb3csIHRodXM6PC9ub3RlPiBpbiB0aGUgY2FzZSBvZgoJCQkJCXZpbmVz77yJLCBhbmQgbm90IHRvIGxheSBvdXQgdGhlIHdob2xlIGNpdHkgaW4gc3RyYWlnaHQgc3RyZWV0cywgYnV0IG9ubHkKCQkJCQljZXJ0YWluIHBhcnRzIGFuZCBkaXN0cmljdHMsIGZvciBpbiB0aGlzIHdheSBpdCB3aWxsIGNvbWJpbmUgc2VjdXJpdHkgd2l0aAoJCQkJCQliZWF1dHkuPGVtcGggY2xhc3M9InRyYW5zbGF0aW9uIj5xdWluY3VueDwvZW1waD4sIGVhY2ggcGxhbnQgb2Ygb25lIHJvdyBiZWluZyBpbiBsaW5lIHdpdGggdGhlIGdhcAoJCQkJCQliZXR3ZWVuIHR3byBwbGFudHMgb2YgdGhlIG5leHQgcm93LCB0aHVzOjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyByZWdhcmRzIHdhbGxzLCB0aG9zZSB3aG8gYXZlciB0aGF0CgkJCQkJY2l0aWVzIHdoaWNoIHByZXRlbmQgdG8gdmFsb3Igc2hvdWxkIG5vdCBoYXZlIHRoZW0gaG9sZCB0b28gb2xkLWZhc2hpb25lZCBhCgkJCQkJdmlld+KAlGFuZCB0aGF0IHRob3VnaCB0aGV5IHNlZSB0aGF0IHRoZSBjaXRpZXMgdGhhdCBpbmR1bGdlIGluIHRoYXQKCQkJCQlmb3JtIG9mIHZhbml0eSBhcmUgcmVmdXRlZCBieSBleHBlcmllbmNlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5JdCBpcyB0cnVlIHRoYXQgYWdhaW5zdCBhbiBldmVubHkgbWF0Y2hlZCBmb2UgYW5kIG9uZQoJCQkJCWxpdHRsZSBzdXBlcmlvciBpbiBudW1iZXJzIGl0IGlzIG5vdCBob25vcmFibGUgdG8gdHJ5IHRvIHNlY3VyZSBvbmVzZWxmIGJ5IHRoZQoJCQkJCXN0cmVuZ3RoIG9mIG9uZSdzIGZvcnRpZmljYXRpb25zOyBidXQgYXMgaXQgZG9lcyBhbmQgbWF5IGhhcHBlbiB0aGF0IHRoZQoJCQkJCXN1cGVyaW9yIG51bWJlcnMgb2YgdGhlIGF0dGFja2VycyBtYXkgYmUgdG9vIG11Y2ggZm9yIHRoZSBodW1hbiB2YWxvciBvZiBhIHNtYWxsCgkJCQkJZm9yY2UsIGlmIHRoZSBjaXR5IGlzIHRvIHN1cnZpdmUgYW5kIG5vdCB0byBzdWZmZXIgZGlzYXN0ZXIgb3IgaW5zdWx0LCB0aGUKCQkJCQlzZWN1cmVzdCBmb3J0aWZpY2F0aW9uIG9mIHdhbGxzIG11c3QgYmUgZGVlbWVkIHRvIGJlIHRoZSBtb3N0IHdhcmxpa2UsCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzMxYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1331a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnBhcnRpY3VsYXJseSBpbiB2aWV3IG9mIHRoZSBpbnZlbnRpb25zIHRoYXQgaGF2ZSBub3cgYmVlbiBtYWRlCgkJCQkJaW4gdGhlIGRpcmVjdGlvbiBvZiBwcmVjaXNpb24gd2l0aCBtaXNzaWxlcyBhbmQgYXJ0aWxsZXJ5IGZvciBzaWVnZXMuIDwvdHJhbnNsYXRpb24+"
translation['7.1331a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRvIGNsYWltIG5vdCB0byBlbmNvbXBhc3MgY2l0aWVzIHdpdGgKCQkJCQl3YWxscyBpcyBsaWtlIGRlc2lyaW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgYSB3b3JkIHNob3VsZAoJCQkJCQliZSBhZGRlZCB0byB0aGUgR3JlZWsgZ2l2aW5nIOKAmGRlc2lyaW5nIHRvIG1ha2UgdGhlIGNvdW50cnkgZWFzeSB0bwoJCQkJCQlpbnZhZGUsIGFuZCB0byBzdHJpcCBpdOKAlOKAmS48L25vdGU+IHRoZSBjb3VudHJ5IHRvIGJlIGVhc3kKCQkJCQl0byBpbnZhZGUgYW5kIHN0cmlwcGluZyBpdCBvZiBoaWxseSByZWdpb25zLCBhbmQgc2ltaWxhcmx5IG5vdCBzdXJyb3VuZGluZyBldmVuCgkJCQkJcHJpdmF0ZSBkd2VsbGluZ3Mgd2l0aCBob3VzZS13YWxscyBvbiB0aGUgZ3JvdW5kIHRoYXQgdGhlIGluaGFiaXRhbnRzIHdpbGwgYmUKCQkJCQljb3dhcmRseS4gQW5vdGhlciBwb2ludCBtb3Jlb3ZlciB0aGF0IG11c3Qgbm90IGJlIGZvcmdvdHRlbiBpcyB0aGF0IHRob3NlIHdobwoJCQkJCWhhdmUgd2FsbHMgcm91bmQgdGhlIGNpdHkgY2FuIHVzZSB0aGVpciBjaXRpZXMgaW4gYm90aCB3YXlzLCBib3RoIGFzIHdhbGxlZAoJCQkJCWNpdGllcyBhbmQgYXMgb3BlbiBvbmVzLCB3aGVyZWFzIGNpdGllcyBub3QgcG9zc2Vzc2luZyB3YWxscyBjYW5ub3QgYmUgdXNlZCBpbgoJCQkJCWJvdGggd2F5cy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC44IiB1bml0PSJMb2ViIGNoYXAiIC8+SWYgdGhlbiB0aGlzIGlzIHNvLCBub3QKCQkJCQlvbmx5IG11c3Qgd2FsbHMgYmUgcHV0IHJvdW5kIGEgY2l0eSwgYnV0IGFsc28gYXR0ZW50aW9uIG11c3QgYmUgcGFpZCB0byB0aGVtIGluCgkJCQkJb3JkZXIgdGhhdCB0aGV5IG1heSBiZSBzdWl0YWJsZSBib3RoIGluIHJlZ2FyZCB0byB0aGUgYWRvcm5tZW50IG9mIHRoZSBjaXR5IGFuZAoJCQkJCWluIHJlc3BlY3Qgb2YgbWlsaXRhcnkgcmVxdWlyZW1lbnRzLCBlc3BlY2lhbGx5IHRoZSBuZXcgZGV2aWNlcyByZWNlbnRseQoJCQkJCWludmVudGVkLiBGb3IganVzdCBhcyB0aGUgYXR0YWNrZXJzIG9mIGEgY2l0eSBhcmUgY29uY2VybmVkIHRvIHN0dWR5IHRoZSBtZWFucwoJCQkJCWJ5IHdoaWNoIHRoZXkgY2FuIGdhaW4gdGhlIGFkdmFudGFnZSwgc28gYWxzbyBmb3IgdGhlIGRlZmVuZGVycyBzb21lIGRldmljZXMKCQkJCQloYXZlIGFscmVhZHkgYmVlbiBpbnZlbnRlZCBhbmQgb3RoZXJzIHRoZXkgbXVzdCBkaXNjb3ZlciBhbmQgdGhpbmsgb3V0OyBmb3IKCQkJCQlwZW9wbGUgZG8gbm90IGV2ZW4gc3RhcnQgYXR0ZW1wdGluZyB0byBhdHRhY2sgdGhvc2Ugd2hvIGFyZSB3ZWxsCgkJCQkJCXByZXBhcmVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgc2luY2UgdGhlIG11bHRpdHVkZSBvZiBjaXRpemVucwoJCQkJCW11c3QgYmUgZGlzdHJpYnV0ZWQ8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+aW4gc2VwYXJhdGUKCQkJCQltZXNzZXMsIGFuZCB0aGUgY2l0eSB3YWxscyBtdXN0IGJlIGRpdmlkZWQgdXAgYnkgZ3VhcmQtcG9zdHMgYW5kIHRvd2VycyBpbgoJCQkJCXN1aXRhYmxlIHBsYWNlcywgaXQgaXMgY2xlYXIgdGhhdCB0aGVzZSBmYWN0cyB0aGVtc2VsdmVzIGNhbGwgZm9yIHNvbWUgb2YgdGhlCgkJCQkJbWVzc2VzIHRvIGJlIG9yZ2FuaXplZCBhdCB0aGVzZSBndWFyZC1wb3N0cy4gVGhlc2UgdGhpbmdzIHRoZW4gbWlnaHQgYmUgYXJyYW5nZWQKCQkJCQlpbiB0aGlzIG1hbm5lci4gPC90cmFuc2xhdGlvbj4="
translation['7.1331b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBpdCBpcyBmaXR0aW5nCgkJCQkJdGhhdCB0aGUgZHdlbGxpbmdzIGFzc2lnbmVkIHRvIHRoZSBnb2RzIGFuZCB0aGUgbW9zdCBpbXBvcnRhbnQgb2YgdGhlIG9mZmljaWFsCgkJCQkJbWVzc2VzIHNob3VsZCBoYXZlIGEgc3VpdGFibGUgc2l0ZSwgYW5kIHRoZSBzYW1lIGZvciBhbGwsIGV4Y2VwdGluZyB0aG9zZQoJCQkJCXRlbXBsZXMgd2hpY2ggYXJlIGFzc2lnbmVkIGEgc3BlY2lhbCBwbGFjZSBhcGFydCBieSB0aGUgbGF3IG9yIGVsc2UgYnkgc29tZQoJCQkJCXV0dGVyYW5jZSBvZiB0aGUgUHl0aGlhbiBvcmFjbGUuIEFuZCB0aGUgc2l0ZSB3b3VsZCBiZSBzdWl0YWJsZSBpZiBpdCBpcyBvbmUKCQkJCQl0aGF0IGlzIHN1ZmZpY2llbnRseSBjb25zcGljdW91cyBpbiByZWdhcmQgdG8gdGhlIGV4Y2VsbGVuY2Ugb2YgaXRzIHBvc2l0aW9uLAoJCQkJCWFuZCBhbHNvIG9mIHN1cGVyaW9yIHN0cmVuZ3RoIGluIHJlZ2FyZCB0byB0aGUgYWRqYWNlbnQgcGFydHMgb2YgdGhlIGNpdHkuCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IGlzIGNvbnZlbmllbnQgdGhhdCBiZWxvdwoJCQkJCXRoaXMgc2l0ZSBzaG91bGQgYmUgbGFpZCBvdXQgYW4gYWdvcmEgb2YgdGhlIGtpbmQgY3VzdG9tYXJ5IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDEzOTkiPlRoZXNzYWx5PC9wbGFjZU5hbWU+IHdoaWNoIHRoZXkgY2FsbCBhIGZyZWUgYWdvcmEsIHRoYXQKCQkJCQlpcywgb25lIHdoaWNoIGhhcyB0byBiZSBrZXB0IGNsZWFyIG9mIGFsbCBtZXJjaGFuZGlzZSBhbmQgaW50byB3aGljaCBubyBhcnRpc2FuCgkJCQkJb3IgZmFybWVyIG9yIGFueSBvdGhlciBzdWNoIHBlcnNvbiBtYXkgaW50cnVkZSB1bmxlc3Mgc3VtbW9uZWQgYnkgdGhlCgkJCQkJbWFnaXN0cmF0ZXMuIEl0IHdvdWxkIGdpdmUgYW1lbml0eSB0byB0aGUgc2l0ZSBpZiB0aGUgZ3ltbmFzaWEgb2YgdGhlIG9sZGVyIG1lbgoJCQkJCXdlcmUgYWxzbyBzaXR1YXRlZCBoZXJl4oCUZm9yIGl0IGlzIHByb3BlciB0byBoYXZlIHRoaXMgaW5zdGl0dXRpb24gYWxzbwoJCQkJCWRpdmlkZWQgYWNjb3JkaW5nIHRvIGFnZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yIOKAmGZvcgoJCQkJCQlpbiB0aGlzIG5vYmxlIHByYWN0aWNlIGRpZmZlcmVudCBhZ2VzIHNob3VsZCBiZSBzZXBhcmF0ZWTigJkKCQkJCQkJ77yISm93ZXR077yJLjwvbm90ZT4gYW5kIGZvciBjZXJ0YWluIG1hZ2lzdHJhdGVzIHRvIHBhc3MgdGhlaXIKCQkJCQl0aW1lIGFtb25nIHRoZSB5b3V0aHMgd2hpbGUgdGhlIG9sZGVyIG1lbiBzcGVuZCB0aGVpcnMgd2l0aCB0aGUgbWFnaXN0cmF0ZXM7IGZvcgoJCQkJCXRoZSBwcmVzZW5jZSBvZiB0aGUgbWFnaXN0cmF0ZXMgYmVmb3JlIG1lbidzIGV5ZXMgbW9zdCBlbmdlbmRlcnMgdHJ1ZSByZXNwZWN0CgkJCQkJYW5kIGEgZnJlZW1hbidzIGF3ZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMzFiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1331b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPlRoZSBhZ29yYSBmb3IgbWVyY2hhbmRpc2UgbXVzdCBiZSBkaWZmZXJlbnQgZnJvbQoJCQkJCXRoZSBmcmVlIGFnb3JhLCBhbmQgaW4gYW5vdGhlciBwbGFjZTsgaXQgbXVzdCBoYXZlIGEgc2l0ZSBjb252ZW5pZW50IGZvciB0aGUKCQkJCQljb2xsZWN0aW9uIHRoZXJlIG9mIGFsbCB0aGUgZ29vZHMgc2VudCBmcm9tIHRoZSBzZWFwb3J0IGFuZCBmcm9tIHRoZSBjb3VudHJ5LgoJCQkJCQk8L3RyYW5zbGF0aW9uPg=="
translation['7.1331b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhcyB0aGUgZGl2aXNpb25zIG9mIHRoZQoJCQkJCXN0YXRlJ3MgcG9wdWxhY2UgaW5jbHVkZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIHRoZSBHcmVlawoJCQkJCQlzaG91bGQgYmUgYWx0ZXJlZCB0byA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG9uCDPgM+Bzr/Otc+Dz4ThvbnPgjwvZm9yZWlnbj4sCgkJCQkJCeKAmGFzIHRoZSBnb3Zlcm5pbmcgY2xhc3MgaXMgZGl2aWRlZCBpbnRvLuKAmTwvbm90ZT4gcHJpZXN0cwoJCQkJCWFuZCBtYWdpc3RyYXRlcywgaXQgaXMgc3VpdGFibGUgdGhhdCB0aGUgcHJpZXN0cycgbWVzcy1yb29tcyBhbHNvIHNob3VsZCBoYXZlCgkJCQkJdGhlaXIgcG9zaXRpb24gcm91bmQgdGhhdCBvZiB0aGUgc2FjcmVkIGJ1aWxkaW5ncy4gQW5kIGFsbCB0aGUgbWFnaXN0cmFjaWVzIHRoYXQKCQkJCQlzdXBlcmludGVuZCBjb250cmFjdHMsIGFuZCB0aGUgcmVnaXN0cmF0aW9uIG9mIGFjdGlvbnMgYXQgbGF3LCBzdW1tb25zZXMgYW5kCgkJCQkJb3RoZXIgc3VjaCBtYXR0ZXJzIG9mIGFkbWluaXN0cmF0aW9uLCBhbmQgYWxzbyB0aG9zZSB0aGF0IGRlYWwgd2l0aCB0aGUgY29udHJvbAoJCQkJCW9mIHRoZSBtYXJrZXRzIGFuZCB3aXRoIHdoYXQgaXMgdGVybWVkIHBvbGljaW5nIHRoZSBjaXR5LCBzaG91bGQgaGF2ZSBidWlsZGluZ3MKCQkJCQlhZGphY2VudCB0byBhbiBhZ29yYSBvciBzb21lIHB1YmxpYyBwbGFjZSBvZiByZXNvcnQsIGFuZCBzdWNoIGEgcGxhY2UgaXMgdGhlCgkJCQkJbmVpZ2hib3Job29kIG9mIHRoZSBidXNpbmVzcyBhZ29yYSwgZm9yIHdlIGFzc2lnbiB0aGUgdXBwZXIgYWdvcmEgYXMgdGhlIHBsYWNlCgkJCQkJaW4gd2hpY2ggdG8gc3BlbmQgbGVpc3VyZSwgYW5kIHRoaXMgb25lIGZvciBuZWNlc3NhcnkgYnVzaW5lc3MuPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4Thvbggz4DPgc6/zrXPg8+E4b25z4I8L2ZvcmVpZ24+LAoJCQkJCQnigJhhcyB0aGUgZ292ZXJuaW5nIGNsYXNzIGlzIGRpdmlkZWQgaW50by7igJk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjExLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlCgkJCQkJYXJyYW5nZW1lbnRzIGluIHRoZSBjb3VudHJ5IGFsc28gc2hvdWxkIGNvcHkgdGhlIHBsYW4gZGVzY3JpYmVkOyB0aGVyZSB0b28gdGhlCgkJCQkJbWFnaXN0cmF0ZXMgY2FsbGVkIGluIHNvbWUgc3RhdGVzIFdhcmRlbnMgb2YgdGhlIFdvb2RzIGFuZCBpbiBvdGhlcnMKCQkJCQlMYW5kLXN1cGVyaW50ZW5kZW50cyBtdXN0IGhhdmUgdGhlaXIgZ3VhcmQtcG9zdHMgYW5kIG1lc3Mtcm9vbXMgZm9yIHBhdHJvbCBkdXR5LAoJCQkJCWFuZCBhbHNvIHRlbXBsZXMgbXVzdCBiZSBkaXN0cmlidXRlZCBvdmVyIHRoZSBjb3VudHJ5LCBzb21lIGRlZGljYXRlZCB0byBnb2RzCgkJCQkJYW5kIHNvbWUgdG8gaGVyb2VzLiBCdXQgdG8gbGluZ2VyIGF0IHRoaXMgcG9pbnQgb3ZlciB0aGUgZGV0YWlsZWQgc3RhdGVtZW50IGFuZAoJCQkJCWRpc2N1c3Npb24gb2YgcXVlc3Rpb25zIG9mIHRoaXMga2luZCBpcyB3YXN0ZSBvZiB0aW1lLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5UaGUgZGlmZmljdWx0eSB3aXRoIHN1Y2ggdGhpbmdzIGlzIG5vdCBzbyBtdWNoIGluCgkJCQkJdGhlIG1hdHRlciBvZiB0aGVvcnkgYnV0IGluIHRoYXQgb2YgcHJhY3RpY2U7IHRvIGxheSBkb3duIHByaW5jaXBsZXMgaXMgYSB3b3JrCgkJCQkJb2YgYXNwaXJhdGlvbiwgYnV0IHRoZWlyIHJlYWxpemF0aW9uIGlzIHRoZSB0YXNrIG9mIGZvcnR1bmUuIEhlbmNlIHdlIHdpbGwKCQkJCQlyZWxpbnF1aXNoIGZvciB0aGUgcHJlc2VudCB0aGUgZnVydGhlciBjb25zaWRlcmF0aW9uIG9mIG1hdHRlcnMgb2YgdGhpcwoJCQkJCQlzb3J0LjwvdHJhbnNsYXRpb24+"
translation['7.1332a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBtdXN0IG5vdyBkaXNjdXNzIHRoZSBjb25zdGl0dXRpb24gaXRzZWxmLCBhbmQgYXNrIHdoYXQgYW5kCgkJCQkJb2Ygd2hhdCBjaGFyYWN0ZXIgc2hvdWxkIGJlIHRoZSBjb21wb25lbnRzIG9mIHRoZSBzdGF0ZSB0aGF0IGlzIHRvIGhhdmUgZmVsaWNpdHkKCQkJCQlhbmQgZ29vZCBnb3Zlcm5tZW50LiBUaGVyZSBhcmUgdHdvIHRoaW5ncyBpbiB3aGljaCB0aGUgd2VsZmFyZSBvZiBhbGwgbWVuCgkJCQkJY29uc2lzdHM6IG9uZSBvZiB0aGVzZSBpcyB0aGUgY29ycmVjdCBlc3RhYmxpc2htZW50IG9mIHRoZSBhaW0gYW5kIGVuZCBvZiB0aGVpcgoJCQkJCWFjdGlvbnMsIHRoZSBvdGhlciB0aGUgYXNjZXJ0YWlubWVudCBvZiB0aGUgYWN0aW9ucyBsZWFkaW5nIHRvIHRoYXQgZW5kLgoJCQkJCe+8iEZvciB0aGUgZW5kIHByb3Bvc2VkIGFuZCB0aGUgbWVhbnMgYWRvcHRlZCBtYXkgYmUgaW5jb25zaXN0ZW50IHdpdGgKCQkJCQlvbmUgYW5vdGhlciwgYXMgYWxzbyB0aGV5IG1heSBiZSBjb25zaXN0ZW50OyBzb21ldGltZXMgdGhlIGFpbSBoYXMgYmVlbgoJCQkJCWNvcnJlY3RseSBwcm9wb3NlZCwgYnV0IHBlb3BsZSBmYWlsIHRvIGFjaGlldmUgaXQgaW4gYWN0aW9uLCBzb21ldGltZXMgdGhleQoJCQkJCWFjaGlldmUgYWxsIHRoZSBtZWFucyBzdWNjZXNzZnVsbHkgYnV0IHRoZSBlbmQgdGhhdCB0aGV5IHBvc2l0ZWQgd2FzIGEgYmFkIG9uZSwKCQkJCQlhbmQgc29tZXRpbWVzIHRoZXkgZXJyIGFzIHRvIGJvdGjigJRmb3IgaW5zdGFuY2UsIGluIG1lZGljaW5lCgkJCQkJcHJhY3RpdGlvbmVycyBhcmUgc29tZXRpbWVzIGJvdGggd3JvbmcgaW4gdGhlaXIganVkZ2VtZW50IG9mIHdoYXQgcXVhbGl0aWVzIGEKCQkJCQloZWFsdGh5IGJvZHkgb3VnaHQgdG8gcG9zc2VzcyBhbmQgdW5zdWNjZXNzZnVsIGluIGhpdHRpbmcgb24gZWZmZWN0aXZlIG1lYW5zIHRvCgkJCQkJcHJvZHVjZSB0aGUgZGlzdGluY3RpdmUgYWltIHRoYXQgdGhleSBoYXZlIHNldCBiZWZvcmUgdGhlbTsgd2hlcmVhcyBpbiB0aGUgYXJ0cwoJCQkJCWFuZCBzY2llbmNlcyBib3RoIHRoZXNlIHRoaW5ncyBoYXZlIHRvIGJlIHNlY3VyZWQsIHRoZSBlbmQgYW5kIHRoZSBwcmFjdGljYWwKCQkJCQltZWFucyB0byB0aGUgZW5kLu+8iSA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEyLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Ob3cgaXQKCQkJCQlpcyBjbGVhciB0aGF0IGFsbCBtZW4gYWltIGF0IHRoZSBnb29kIGxpZmUgYW5kIGF0IGhhcHBpbmVzcywgYnV0IHRob3VnaCBzb21lCgkJCQkJcG9zc2VzcyB0aGUgcG93ZXIgdG8gYXR0YWluIHRoZXNlIHRoaW5ncywgc29tZSBkbyBub3QsIG93aW5nIHRvIHNvbWUgZmFjdG9yIG9mCgkJCQkJZm9ydHVuZSBvciBvZiBuYXR1cmUg77yIZm9ydHVuZSBiZWNhdXNlIHRoZSBnb29kIGxpZmUgbmVlZHMgYWxzbyBhCgkJCQkJY2VydGFpbiBlcXVpcG1lbnQgb2YgbWVhbnMsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzMyYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1332a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBhbHRob3VnaCBpdCBuZWVkcyBsZXNzIG9mIHRoaXMgZm9yIG1lbiBvZgoJCQkJCWJldHRlciBuYXR1cmFsIGRpc3Bvc2l0aW9uIGl0IG5lZWRzIG1vcmUgZm9yIHRob3NlIG9mIHdvcnNl77yJOyB3aGlsZQoJCQkJCW90aGVycywgYWx0aG91Z2ggdGhleSBoYXZlIHRoZSBwb3dlciwgZ28gd3JvbmcgYXQgdGhlIHN0YXJ0IGluIHRoZWlyIHNlYXJjaCBmb3IKCQkJCQkJaGFwcGluZXNzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRoZXkgbWlzY29uY2VpdmUgdGhlCgkJCQkJCW5hdHVyZSBvZiBoYXBwaW5lc3MgYW5kIHNlbGVjdCB0aGUgd3JvbmcgdGhpbmcgdG8gYWltIGF0Ljwvbm90ZT4gQnV0IHRoZQoJCQkJCW9iamVjdCBiZWZvcmUgdXMgaXMgdG8gZGlzY2VybiB0aGUgYmVzdCBjb25zdGl0dXRpb24sIGFuZCB0aGlzIGlzIHRoZSBvbmUgdW5kZXIKCQkJCQl3aGljaCBhIHN0YXRlIHdpbGwgYmUgYmVzdCBnb3Zlcm5lZCwgYW5kIGEgc3RhdGUgd2lsbCBiZSBiZXN0IGdvdmVybmVkIHVuZGVyIHRoZQoJCQkJCWNvbnN0aXR1dGlvbiB1bmRlciB3aGljaCBpdCBoYXMgdGhlIG1vc3Qgb3Bwb3J0dW5pdHkgZm9yIGhhcHBpbmVzczsgaXQgaXMKCQkJCQl0aGVyZWZvcmUgY2xlYXIgdGhhdCB3ZSBtdXN0IGtub3cgd2hhdCBoYXBwaW5lc3MgaXMuIDwvdHJhbnNsYXRpb24+"
translation['7.1332a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSB2aWV3IHRoYXQgd2UgbWFpbnRhaW4g77yIYW5kIHRoaXMgaXMgdGhlCgkJCQkJZGVmaW5pdGlvbiB0aGF0IHdlIGxhaWQgZG93biBpbiB0aGU8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5FdGhpY3M8L3RpdGxlPiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDEwOThhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTA5OGEKCQkJCQkJCTE2PC9iaWJsPiBhbmQgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExNzZiIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4KCQkJCQkJCTExNzZiIDQ8L2JpYmw+PC9ub3RlPiBpZiB0aG9zZSBkaXNjb3Vyc2VzIGFyZSBvZiBhbnkgdmFsdWXvvIkgaXMKCQkJCQl0aGF0IGhhcHBpbmVzcyBpcyB0aGUgY29tcGxldGUgYWN0aXZpdHkgYW5kIGVtcGxveW1lbnQgb2YgdmlydHVlLCBhbmQgdGhpcyBub3QKCQkJCQljb25kaXRpb25hbGx5IGJ1dCBhYnNvbHV0ZWx5LiBXaGVuIEkgc2F5IOKAmGNvbmRpdGlvbmFsbHnigJkgSQoJCQkJCXJlZmVyIHRvIHRoaW5ncyBuZWNlc3NhcnksIGJ5IOKAmGFic29sdXRlbHnigJkgSSBtZWFuCgkJCQkJ4oCYbm9ibHnigJk6IGZvciBpbnN0YW5jZSwgdG8gdGFrZSB0aGUgY2FzZSBvZiBqdXN0IGFjdGlvbnMsCgkJCQkJanVzdCBhY3RzIG9mIHZlbmdlYW5jZSBhbmQgb2YgcHVuaXNobWVudCBzcHJpbmcgaXQgaXMgdHJ1ZSBmcm9tIHZpcnR1ZSwgYnV0IGFyZQoJCQkJCW5lY2Vzc2FyeSwgYW5kIGhhdmUgdGhlIHF1YWxpdHkgb2Ygbm9iaWxpdHkgb25seSBpbiBhIGxpbWl0ZWQgbWFubmVyCgkJCQkJ77yIc2luY2UgaXQgd291bGQgYmUgcHJlZmVyYWJsZSB0aGF0IG5laXRoZXIgaW5kaXZpZHVhbCBub3Igc3RhdGUgc2hvdWxkCgkJCQkJaGF2ZSBhbnkgbmVlZCBvZiBzdWNoIHRoaW5nc++8iSwgd2hlcmVhcyBhY3Rpb25zIGFpbWluZyBhdCBob25vcnMgYW5kCgkJCQkJCXJlc291cmNlczxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMDk4YSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDEwOThhCgkJCQkJCQkxNjwvYmlibD4gYW5kIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTc2YiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguCgkJCQkJCQkxMTc2YiA0PC9iaWJsPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIGNvbmplY3R1cmFsIGVtZW5kYXRpb24gZ2l2ZXMKCQkJCQkJ4oCYZGlzdGluY3Rpb25zLuKAmTwvbm90ZT4gYXJlIHRoZSBub2JsZXN0IGFjdGlvbnMKCQkJCQlhYnNvbHV0ZWx5OyBmb3IgdGhlIGZvcm1lciBjbGFzcyBvZiBhY3RzIGNvbnNpc3QgaW4gdGhlIHJlbW92YWw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBpcyBhIGNvbmplY3R1cmFsIGVtZW5kYXRpb247IHRoZSBNU1MuCgkJCQkJCWdpdmUg4oCYdGhlIGFkb3B0aW9uLuKAmTwvbm90ZT4gb2Ygc29tZXRoaW5nIGV2aWwsIGJ1dAoJCQkJCWFjdGlvbnMgb2YgdGhlIGxhdHRlciBraW5kIGFyZSB0aGUgb3Bwb3NpdGXigJR0aGV5IGFyZSB0aGUgZm91bmRhdGlvbgoJCQkJCWFuZCB0aGUgZ2VuZXJhdGlvbiBvZiB0aGluZ3MgZ29vZC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlIHZpcnR1b3VzIG1hbiB3aWxsIHVzZSBldmVuIHBvdmVydHksIGRpc2Vhc2UsIGFuZDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50aGUgb3RoZXIgZm9ybXMgb2YgYmFkIGZvcnR1bmUgaW4gYSBub2JsZSBtYW5uZXIsCgkJCQkJYnV0IGZlbGljaXR5IGNvbnNpc3RzIGluIHRoZWlyIG9wcG9zaXRlcyDvvIhmb3IgaXQgaXMgYSBkZWZpbml0aW9uCgkJCQkJZXN0YWJsaXNoZWQgYnkgb3VyIGV0aGljYWwgZGlzY291cnNlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExMTNhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTExM2EgMTUgZmYuPC9iaWJsPgoJCQkJCTwvbm90ZT4gdGhhdCB0aGUgdmlydHVvdXMgbWFuIGlzIHRoZSBtYW4gb2Ygc3VjaCBhIGNoYXJhY3RlciB0aGF0IGJlY2F1c2Ugb2YgaGlzCgkJCQkJdmlydHVlIHRoaW5ncyBhYnNvbHV0ZWx5IGdvb2QgYXJlIGdvb2QgdG8gaGltLCBhbmQgaXQgaXMgdGhlcmVmb3JlIGNsZWFyIHRoYXQKCQkJCQloaXMgZW1wbG95bWVudCBvZiB0aGVzZSBnb29kcyBtdXN0IGFsc28gYmUgdmlydHVvdXMgYW5kIG5vYmxlCgkJCQkJYWJzb2x1dGVsee+8iTsgYW5kIGhlbmNlIG1lbiBhY3R1YWxseSBzdXBwb3NlIHRoYXQgZXh0ZXJuYWwgZ29vZHMgYXJlIHRoZQoJCQkJCWNhdXNlIG9mIGhhcHBpbmVzcywganVzdCBhcyBpZiB0aGV5IHdlcmUgdG8gYXNzaWduIHRoZSBjYXVzZSBvZiBhIGJyaWxsaWFudGx5CgkJCQkJZmluZSBwZXJmb3JtYW5jZSBvbiB0aGUgaGFycCB0byB0aGUgaW5zdHJ1bWVudCByYXRoZXIgdGhhbiB0byB0aGUgc2tpbGwgb2YgdGhlCgkJCQkJcGxheWVyLiBJdCBmb2xsb3dzIHRoZXJlZm9yZSBmcm9tIHdoYXQgaGFzIGJlZW4gc2FpZCB0aGF0IHNvbWUgZ29vZHMgbXVzdCBiZQoJCQkJCWZvcnRoY29taW5nIHRvIHN0YXJ0IHdpdGggYW5kIG90aGVycyBtdXN0IGJlIHByb3ZpZGVkIGJ5IHRoZSBsZWdpc2xhdG9yLgoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTExM2EiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4gRXRoLiAxMTEzYSAxNSBmZi48L2JpYmw+CgkJCQkJPC90cmFuc2xhdGlvbj4="
translation['7.1332b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkhlbmNlIHdlIHByYXkgdGhhdCB0aGUKCQkJCQlvcmdhbml6YXRpb24gb2YgdGhlIHN0YXRlIG1heSBiZSBzdWNjZXNzZnVsIGluIHNlY3VyaW5nIHRob3NlIGdvb2RzIHdoaWNoIGFyZSBpbgoJCQkJCXRoZSBjb250cm9sIG9mIGZvcnR1bmUg77yIZm9yIHRoYXQgZm9ydHVuZSBkb2VzIGNvbnRyb2wgZXh0ZXJuYWwgZ29vZHMgd2UKCQkJCQl0YWtlIGFzIGF4aW9tYXRpY++8iTsgYnV0IHdoZW4gd2UgY29tZSB0byB0aGUgc3RhdGUncyBiZWluZyB2aXJ0dW91cywgdG8KCQkJCQlzZWN1cmUgdGhpcyBpcyBub3QgdGhlIGZ1bmN0aW9uIG9mIGZvcnR1bmUgYnV0IG9mIHNjaWVuY2UgYW5kIHBvbGljeS4gQnV0IHRoZW4KCQkJCQl0aGUgdmlydHVlIG9mIHRoZSBzdGF0ZSBpcyBvZiBjb3Vyc2UgY2F1c2VkIGJ5IHRoZSBjaXRpemVucyB3aG8gc2hhcmUgaW4gaXRzCgkJCQkJZ292ZXJubWVudCBiZWluZyB2aXJ0dW91czsgYW5kIGluIG91ciBzdGF0ZSBhbGwgdGhlIGNpdGl6ZW5zIHNoYXJlIGluIHRoZQoJCQkJCWdvdmVybm1lbnQuIFRoZSBwb2ludCB3ZSBoYXZlIHRvIGNvbnNpZGVyIHRoZXJlZm9yZSBpcywgaG93IGRvZXMgYSBtYW4gYmVjb21lCgkJCQkJdmlydHVvdXM/IEZvciBldmVuIGlmIGl0IGJlIHBvc3NpYmxlIGZvciB0aGUgY2l0aXplbnMgdG8gYmUgdmlydHVvdXMKCQkJCQljb2xsZWN0aXZlbHkgd2l0aG91dCBiZWluZyBzbyBpbmRpdmlkdWFsbHksIHRoZSBsYXR0ZXIgaXMgcHJlZmVyYWJsZSwgc2luY2UgZm9yCgkJCQkJZWFjaCBpbmRpdmlkdWFsIHRvIGJlIHZpcnR1b3VzIGVudGFpbHMgYXMgYSBjb25zZXF1ZW5jZSB0aGUgY29sbGVjdGl2ZSB2aXJ0dWUgb2YKCQkJCQlhbGwuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGVyZSBhcmUgYWRtaXR0ZWRseSB0aHJlZQoJCQkJCXRoaW5ncyBieSB3aGljaCBtZW4gYXJlIG1hZGUgZ29vZCBhbmQgdmlydHVvdXMsIGFuZCB0aGVzZSB0aHJlZSB0aGluZ3MgYXJlCgkJCQkJbmF0dXJlLCBoYWJpdCBhbmQgcmVhc29uLiBGb3IgdG8gc3RhcnQgd2l0aCwgb25lIG11c3QgYmUgYm9ybiB3aXRoIHRoZSBuYXR1cmUgb2YKCQkJCQlhIGh1bWFuIGJlaW5nIGFuZCBub3Qgb2Ygc29tZSBvdGhlciBhbmltYWw7IGFuZCBzZWNvbmRseSwgb25lIG11c3QgYmUgYm9ybiBvZiBhCgkJCQkJY2VydGFpbiBxdWFsaXR5IG9mIGJvZHkgYW5kIG9mIHNvdWwuIEJ1dCB0aGVyZSBhcmUgc29tZSBxdWFsaXRpZXMgdGhhdCBpdCBpcyBvZgoJCQkJCW5vIHVzZSB0byBiZSBib3JuIHdpdGgsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzMyYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1332b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBvdXIgaGFiaXRzIG1ha2UgdXMgYWx0ZXIgdGhlbTogc29tZSBxdWFsaXRpZXMKCQkJCQlpbiBmYWN0IGFyZSBtYWRlIGJ5IG5hdHVyZSBsaWFibGUgdG8gYmUgbW9kaWZpZWQgYnkgdGhlIGhhYml0cyBpbiBlaXRoZXIKCQkJCQlkaXJlY3Rpb24sIGZvciB0aGUgd29yc2Ugb3IgZm9yIHRoZSBiZXR0ZXIuIDwvdHJhbnNsYXRpb24+"
translation['7.1332b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPk5vdyB0aGUgb3RoZXIgYW5pbWFscyBsaXZlIGNoaWVmbHkgYnkgbmF0dXJlLCB0aG91Z2ggc29tZQoJCQkJCWluIHNtYWxsIGRlZ3JlZXMgYXJlIGd1aWRlZCBieSBoYWJpdHMgdG9vOyBidXQgbWFuIGxpdmVzIGJ5IHJlYXNvbiBhbHNvLCBmb3IgaGUKCQkJCQlhbG9uZSBvZiBhbmltYWxzIHBvc3Nlc3NlcyByZWFzb247IHNvIHRoYXQgaW4gaGltIHRoZXNlIHRocmVlIHRoaW5ncyBtdXN0IGJlIGluCgkJCQkJaGFybW9ueSB3aXRoIG9uZSBhbm90aGVyOyBmb3IgbWVuIG9mdGVuIGFjdCBjb250cmFyeSB0byB0aGVpciBhY3F1aXJlZCBoYWJpdHMKCQkJCQlhbmQgdG8gdGhlaXIgbmF0dXJlIGJlY2F1c2Ugb2YgdGhlaXIgcmVhc29uLCBpZiB0aGV5IGFyZSBjb252aW5jZWQgdGhhdCBzb21lCgkJCQkJb3RoZXIgY291cnNlIG9mIGFjdGlvbiBpcyBwcmVmZXJhYmxlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgd2UgaGF2ZQoJCQkJCQlhbHJlYWR5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluIDQuPC9ub3RlPiBkZWZpbmVkIHRoZSBwcm9wZXIKCQkJCQluYXR1cmFsIGNoYXJhY3RlciBvZiB0aG9zZSB3aG8gYXJlIHRvIGJlIGFtZW5hYmxlIHRvIHRoZSBoYW5kIG9mIHRoZSBsZWdpc2xhdG9yOwoJCQkJCXdoYXQgbm93IHJlbWFpbnMgaXMgdGhlIHRhc2sgb2YgZWR1Y2F0aW9uLCBmb3IgbWVuIGxlYXJuIHNvbWUgdGhpbmdzIGJ5CgkJCQkJcHJhY3RpY2UsIG90aGVycyBieSBwcmVjZXB0LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgc2luY2UgZXZlcnkgcG9saXRpY2FsIGNvbW11bml0eSBpcwoJCQkJCWNvbXBvc2VkIG9mIHJ1bGVycyBhbmQgc3ViamVjdHMsIHdlIG11c3QgdGhlcmVmb3JlIGNvbnNpZGVyIHdoZXRoZXIgdGhlIHJ1bGVycwoJCQkJCWFuZCB0aGUgc3ViamVjdHMgb3VnaHQgdG8gY2hhbmdlLCBvciB0byByZW1haW4gdGhlIHNhbWUgdGhyb3VnaCBsaWZlOyBmb3IgaXQgaXMKCQkJCQljbGVhciB0aGF0IHRoZWlyIGVkdWNhdGlvbiBhbHNvIHdpbGwgaGF2ZSB0byBiZSBtYWRlIHRvIGNvcnJlc3BvbmQgd2l0aCB0aGlzCgkJCQkJZGlzdHJpYnV0aW9uIG9mIGZ1bmN0aW9ucy4gSWYgdGhlbiBpdCB3ZXJlIHRoZSBjYXNlIHRoYXQgdGhlIG9uZSBjbGFzcyBkaWZmZXJlZAoJCQkJCWZyb20gdGhlIG90aGVyIGFzIHdpZGVseSBhcyB3ZSBiZWxpZXZlIHRoZSBnb2RzIGFuZCBoZXJvZXMgdG8gZGlmZmVyIGZyb20KCQkJCQltYW5raW5kLCBoYXZpbmcgZmlyc3QgYSBncmVhdCBzdXBlcmlvcml0eSBpbiByZWdhcmQgdG8gdGhlIGJvZHkgYW5kIHRoZW4gaW4KCQkJCQlyZWdhcmQgdG88bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIHNvdWwsIHNvIHRoYXQgdGhlCgkJCQkJcHJlLWVtaW5lbmNlIG9mIHRoZSBydWxlcnMgd2FzIGluZGlzcHV0YWJsZSBhbmQgbWFuaWZlc3QgdG8gdGhlIHN1YmplY3RzLCBpdCBpcwoJCQkJCWNsZWFyIHRoYXQgaXQgd291bGQgYmUgYmV0dGVyIGZvciB0aGUgc2FtZSBwZXJzb25zIGFsd2F5cyB0byBiZSBydWxlcnMgYW5kCgkJCQkJc3ViamVjdHMgb25jZSBmb3IgYWxsOyA8L3RyYW5zbGF0aW9uPg=="
translation['7.1333a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCBhcyB0aGlzCgkJCQkJaXMgbm90IGVhc3kgdG8gc2VjdXJlLCBhbmQgYXMgd2UgZG8gbm90IGZpbmQgYW55dGhpbmcgY29ycmVzcG9uZGluZyB0byB0aGUgZ3JlYXQKCQkJCQlkaWZmZXJlbmNlIHRoYXQgU2N5bGF4IHN0YXRlcyB0byBleGlzdCBiZXR3ZWVuIGtpbmdzIGFuZCBzdWJqZWN0cyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMDE5OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAwMTk4Ij5JbmRpYTwvcGxhY2VOYW1lPiwgaXQgaXMgY2xlYXIgdGhhdCBmb3IgbWFueSByZWFzb25zIGl0IGlzCgkJCQkJbmVjZXNzYXJ5IGZvciBhbGwgdG8gc2hhcmUgYWxpa2UgaW4gcnVsaW5nIGFuZCBiZWluZyBydWxlZCBpbiB0dXJuLiBGb3IgZXF1YWxpdHkKCQkJCQltZWFucyBmb3IgcGVyc29ucyB3aG8gYXJlIGFsaWtlIGlkZW50aXR5IG9mIHN0YXR1cywgYW5kIGFsc28gaXQgaXMKCQkJCQkJZGlmZmljdWx0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBlbWVuZGF0aW9uIHN1Z2dlc3RlZCBieQoJCQkJCQlSaWNoYXJkcyBnaXZlcyDigJhGb3IgZXF1YWxpdHkgYW5kIGlkZW50aXR5IO+8iG9mCgkJCQkJCXN0YXR1c++8iSBhcmUganVzdCBmb3IgcGVyc29ucyB3aG8gYXJlIGFsaWtlLCBhbmQgaXQgaXMKCQkJCQkJZGlmZmljdWx0LOKAmSBldGMuPC9ub3RlPiBmb3IgYSBjb25zdGl0dXRpb24gdG8gZW5kdXJlIHRoYXQgaXMKCQkJCQlmcmFtZWQgaW4gY29udHJhdmVudGlvbiBvZiBqdXN0aWNlLiBGb3IgYWxsIHRoZSBwZW9wbGUgdGhyb3VnaG91dCB0aGUgY291bnRyeQoJCQkJCWFyZSByYW5nZWQgb24gdGhlIHNpZGUgb2YgdGhlIHN1YmplY3QgY2xhc3MgaW4gd2lzaGluZyBmb3IgYSByZXZvbHV0aW9uLCBhbmQgaXQKCQkJCQlpcyBhIHRoaW5nIGluY29uY2VpdmFibGUgdGhhdCB0aG9zZSBpbiB0aGUgZ292ZXJubWVudCBzaG91bGQgYmUgc3VmZmljaWVudGx5CgkJCQkJbnVtZXJvdXMgdG8gb3ZlciBwb3dlciBhbGwgb2YgdGhlc2UgdG9nZXRoZXIuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB5ZXQgb24gdGhlIG90aGVyIGhhbmQgdGhhdCB0aGUgcnVsZXJzIG91Z2h0IHRvIGJlCgkJCQkJc3VwZXJpb3IgdG8gdGhlIHN1YmplY3RzIGNhbm5vdCBiZSBkaXNwdXRlZDsgdGhlcmVmb3JlIHRoZSBsYXdnaXZlciBtdXN0CgkJCQkJY29uc2lkZXIgaG93IHRoaXMgaXMgdG8gYmUgc2VjdXJlZCwgYW5kIGhvdyB0aGV5IGFyZSB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUKCQkJCQlnb3Zlcm5tZW50LiBBbmQgdGhpcyBoYXMgYmVlbiBhbHJlYWR5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjguMywKCQkJCQkJMTMyOWEgNCBmZi48L25vdGU+IGRpc2N1c3NlZC4gTmF0dXJlIGhhcyBnaXZlbiB0aGUgZGlzdGluY3Rpb24gYnkgbWFraW5nIHRoZQoJCQkJCWdyb3VwIHRoYXQgaXMgaXRzZWxmIHRoZSBzYW1lIGluIHJhY2UgcGFydGx5IHlvdW5nZXIgYW5kIHBhcnRseSBvbGRlciwgb2Ygd2hpY2gKCQkJCQl0d28gc2V0cyBpdCBpcyBhcHByb3ByaWF0ZSB0byB0aGUgb25lIHRvIGJlIGdvdmVybmVkIGFuZCBmb3IgdGhlIG90aGVyIHRvCgkJCQkJZ292ZXJuOyBhbmQgbm8gb25lIGNoYWZlcyBvciB0aGlua3MgaGltc2VsZiBiZXR0ZXIgdGhhbiBoaXMgcnVsZXJzIHdoZW4gaGUgaXMKCQkJCQlnb3Zlcm5lZCBvbiB0aGUgZ3JvdW5kIG9mIGFnZSwgZXNwZWNpYWxseSBhcyBoZSBpcyBnb2luZyB0byBnZXQgYmFjayB3aGF0IGhlIGhhcwoJCQkJCXRodXMgY29udHJpYnV0ZWQgdG8gdGhlIGNvbW1vbiBzdG9jayB3aGVuIGhlIHJlYWNoZXMgdGhlIHByb3BlciBhZ2UuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkluIGEgc2Vuc2UgdGhlcmVmb3JlIHdlIG11c3Qgc2F5IHRoYXQgdGhlCgkJCQkJcnVsZXJzIGFuZCBydWxlZCBhcmUgdGhlIHNhbWUsIGFuZCBpbiBhIHNlbnNlIGRpZmZlcmVudC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMzNhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1333a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkhlbmNlIHRoZWlyCgkJCQkJZWR1Y2F0aW9uIGFsc28gaXMgYm91bmQgdG8gYmUgaW4gb25lIHdheSB0aGUgc2FtZSBhbmQgaW4gYW5vdGhlciBkaWZmZXJlbnQuIEZvcgoJCQkJCWhlIHdobyBpcyB0byBiZSBhIGdvb2QgcnVsZXIgbXVzdCBoYXZlIGZpcnN0IGJlZW4gcnVsZWQsIGFzIHRoZSBzYXlpbmcgaXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHNlbnRlbmNlIGhlcmUgYnJlYWtzIG9mZiBpbnRvIGEgbG9uZwoJCQkJCQlwYXJlbnRoZXNpcywgYWZ0ZXIgd2hpY2ggaXQgaXMgbm90IHJlc3VtZWQuPC9ub3RlPiDvvIhhbmQgZ292ZXJubWVudCwKCQkJCQlhcyBoYXMgYmVlbiBzYWlkIGluIHRoZSBmaXJzdCBkaXNjb3Vyc2VzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Cb29rIDMuNi42LTEyLCAxMjc4YiAzMCBmZi48L25vdGU+IGlzIG9mIHR3byBzb3J0cywgb25lIGNhcnJpZWQgb24gZm9yIHRoZQoJCQkJCXNha2Ugb2YgdGhlIHJ1bGVyIGFuZCB0aGUgb3RoZXIgZm9yIHRoZSBzYWtlIG9mIHRoZSBzdWJqZWN0OyBvZiB0aGVzZSB0aGUgZm9ybWVyCgkJCQkJaXMgd2hhdCB3ZSBjYWxsIHRoZSBydWxlIG9mIGEgbWFzdGVyLHRoZSBsYXR0ZXIgaXMgdGhlIGdvdmVybm1lbnQgb2YgZnJlZSBtZW4gLgoJCQkJCS4gLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PbmUgc2VudGVuY2Ugb3IgbW9yZSBoYXMgYmVlbiBsb3N0CgkJCQkJCWhlcmUuPC9ub3RlPgoJCQkJCTwvdHJhbnNsYXRpb24+"
translation['7.1333a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBzb21lIG9mIHRoZSBjb21tYW5kcyBnaXZlbgoJCQkJCWRpZmZlciBub3QgaW4gbmF0dXJlIG9mIHRoZSBzZXJ2aWNlcyBjb21tYW5kZWQgYnV0IGluIHRoZWlyIG9iamVjdC4gSGVuY2UgYQoJCQkJCW51bWJlciBvZiB3aGF0IGFyZSB0aG91Z2h0IHRvIGJlIG1lbmlhbCBzZXJ2aWNlcyBjYW4gYmUgaG9ub3JhYmx5IHBlcmZvcm1lZCBldmVuCgkJCQkJYnkgZnJlZW1lbiBpbiB5b3V0aDsgc2luY2UgaW4gcmVnYXJkIHRvIGhvbm9yIGFuZCBkaXNob25vciBhY3Rpb25zIGRvIG5vdCBkaWZmZXIKCQkJCQlzbyBtdWNoIGluIHRoZW1zZWx2ZXMgYXMgaW4gdGhlaXIgZW5kIGFuZCBvYmplY3TvvIkuIEJ1dCBzaW5jZSB3ZSBzYXkKCQkJCQl0aGF0IHRoZSBnb29kbmVzcyBvZiBhIGNpdGl6ZW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUKCQkJCQkJR3JlZWsgc2hvdWxkIGJlIGFsdGVyZWQgdG8gZ2l2ZSDigJhvZiB0aGUgYmVzdAoJCQkJCQljaXRpemVuLuKAmTwvbm90ZT4gYW5kIHJ1bGVyIGFyZSB0aGUgc2FtZSBhcyB0aGF0IG9mIHRoZSBiZXN0IG1hbiwKCQkJCQlhbmQgdGhhdCB0aGUgc2FtZSBwZXJzb24gb3VnaHQgdG8gYmVjb21lIGEgc3ViamVjdCBmaXJzdCBhbmQgYSBydWxlciBhZnRlcndhcmRzLAoJCQkJCWl0IHdpbGwgYmUgaW1wb3J0YW50IGZvciB0aGUgbGVnaXNsYXRvciB0byBzdHVkeSBob3cgYW5kIGJ5IHdoYXQgY291cnNlcyBvZgoJCQkJCXRyYWluaW5nIGdvb2QgbWVuIGFyZSB0byBiZSBwcm9kdWNlZCwgYW5kIHdoYXQgaXMgdGhlIGVuZCBvZiB0aGUgYmVzdAoJCQkJCQlsaWZlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgc291bCBpcyBkaXZpZGVkIGludG8gdHdvIHBhcnRzLCBvZiB3aGljaCBvbmUgaXMgaW4gaXRzZWxmCgkJCQkJcG9zc2Vzc2VkIG9mIHJlYXNvbiwgd2hpbGUgdGhlIG90aGVyIGlzIG5vdCByYXRpb25hbCBpbiBpdHNlbGYgYnV0IGNhcGFibGUgb2YKCQkJCQlvYmV5aW5nIHJlYXNvbi4gVG8gdGhlc2UgcGFydHMgaW4gb3VyIHZpZXcgYmVsb25nIHRob3NlIHZpcnR1ZXMgaW4gYWNjb3JkYW5jZQoJCQkJCXdpdGggd2hpY2ggYSBtYW4gaXMgcHJvbm91bmNlZCB0byBiZSBnb29kIGluIHNvbWUgd2F5LiBCdXQgaW4gd2hpY2ggb2YKCQkJCQkJdGhlc2U8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dHdvIHBhcnRzIHRoZSBlbmQgb2YgbWFuCgkJCQkJcmF0aGVyIHJlc2lkZXMsIHRob3NlIHdobyBkZWZpbmUgdGhlIHBhcnRzIG9mIHRoZSBzb3VsIGluIGFjY29yZGFuY2Ugd2l0aCBvdXIKCQkJCQl2aWV3IHdpbGwgaGF2ZSBubyBkb3VidCBhcyB0byBob3cgdGhleSBzaG91bGQgZGVjaWRlLiBUaGUgd29yc2UgYWx3YXlzIGV4aXN0cyBhcwoJCQkJCWEgbWVhbnMgdG8gdGhlIGJldHRlciwgYW5kIHRoaXMgaXMgbWFuaWZlc3QgYWxpa2UgaW4gdGhlIHByb2R1Y3RzIG9mIGFydCBhbmQgaW4KCQkJCQl0aG9zZSBvZiBuYXR1cmU7IGJ1dCB0aGUgcmF0aW9uYWwgcGFydCBvZiB0aGUgc291bCBpcyBiZXR0ZXIgdGhhbiB0aGUKCQkJCQlpcnJhdGlvbmFsLiA8L3RyYW5zbGF0aW9uPg=="
translation['7.1333b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB0aGUgcmF0aW9uYWwgcGFydAoJCQkJCWlzIHN1YmRpdmlkZWQgaW50byB0d28sIGFjY29yZGluZyB0byBvdXIgdXN1YWwgc2NoZW1lIG9mIGRpdmlzaW9uOyBmb3IgcmVhc29uIGlzCgkJCQkJb2YgdHdvIGtpbmRzLCBwcmFjdGljYWwgYW5kIHRoZW9yZXRpYywgc28gdGhhdCBvYnZpb3VzbHkgdGhlIHJhdGlvbmFsIHBhcnQgb2YKCQkJCQl0aGUgc291bCBtdXN0IGFsc28gYmUgc3ViZGl2aWRlZCBhY2NvcmRpbmdseS4gQSBjb3JyZXNwb25kaW5nIGNsYXNzaWZpY2F0aW9uIHdlCgkJCQkJc2hhbGwgYWxzbyBwcm9ub3VuY2UgdG8gaG9sZCBhbW9uZyBpdHMgYWN0aXZpdGllczogdGhlIGFjdGl2aXRpZXMgb2YgdGhlIHBhcnQgb2YKCQkJCQl0aGUgc291bCB0aGF0IGlzIGJ5IG5hdHVyZSBzdXBlcmlvciBtdXN0IGJlIHByZWZlcmFibGUgZm9yIHRob3NlIHBlcnNvbnMgd2hvIGFyZQoJCQkJCWNhcGFibGUgb2YgYXR0YWluaW5nIGVpdGhlciBhbGwgdGhlIHNvdWwncyBhY3Rpdml0aWVzIG9yIHR3bzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRoZSB0d28gbG93ZXIgb25lcywgdGhlIHRocmVlIGJlaW5nIHRoZSBhY3Rpdml0aWVzIG9mCgkJCQkJCXRoZSB0aGVvcmV0aWMgcmVhc29uLCBvZiB0aGUgcHJhY3RpY2FsIHJlYXNvbiwgYW5kIG9mIHRoZSBwYXNzaW9ucyB0aGF0CgkJCQkJCWFsdGhvdWdoIGlycmF0aW9uYWwgYXJlIGFtZW5hYmxlIHRvIHJlYXNvbi48L25vdGU+IG91dCBvZiB0aGUgdGhyZWU7IHNpbmNlCgkJCQkJdGhhdCB0aGluZyBpcyBhbHdheXMgbW9zdCBkZXNpcmFibGUgZm9yIGVhY2ggcGVyc29uIHdoaWNoIGlzIHRoZSBoaWdoZXN0IHRvCgkJCQkJd2hpY2ggaXQgaXMgcG9zc2libGUgZm9yIGhpbSB0byBhdHRhaW4uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFsc28gbGlmZSBhcyBhIHdob2xlIGlzIGRpdmlkZWQgaW50byBidXNpbmVzcyBhbmQgbGVpc3VyZSwKCQkJCQlhbmQgd2FyIGFuZCBwZWFjZSwgYW5kIG91ciBhY3Rpb25zIGFyZSBhaW1lZCBzb21lIG9mIHRoZW0gYXQgdGhpbmdzIG5lY2Vzc2FyeQoJCQkJCWFuZCB1c2VmdWwsIG90aGVycyBhdCB0aGluZ3Mgbm9ibGUuIEluIHRoZXNlIG1hdHRlcnMgdGhlIHNhbWUgcHJpbmNpcGxlIG9mCgkJCQkJcHJlZmVyZW5jZSB0aGF0IGFwcGxpZXMgdG8gdGhlIHBhcnRzIG9mIHRoZSBzb3VsIG11c3QgYXBwbHkgYWxzbyB0byB0aGUKCQkJCQlhY3Rpdml0aWVzIG9mIHRob3NlIHBhcnRzOiB3YXIgbXVzdCBiZSBmb3IgdGhlIHNha2Ugb2YgcGVhY2UsIGJ1c2luZXNzIGZvciB0aGUKCQkJCQlzYWtlIG9mIGxlaXN1cmUsIHRoaW5ncyBuZWNlc3NhcnkgYW5kIHVzZWZ1bCBmb3IgdGhlIHB1cnBvc2Ugb2YgdGhpbmdzIG5vYmxlLgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEzLjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgc3RhdGVzbWFuIHRoZXJlZm9yZSBtdXN0CgkJCQkJbGVnaXNsYXRlIHdpdGggYWxsIHRoZXNlIGNvbnNpZGVyYXRpb25zIGluIHZpZXcsIGJvdGggaW4gcmVzcGVjdCBvZiB0aGUgcGFydHMgb2YKCQkJCQl0aGUgc291bCBhbmQgb2YgdGhlaXIgYWN0aXZpdGllcywgYW5kIGFpbWluZyBtb3JlIHBhcnRpY3VsYXJseSBhdCB0aGUgZ3JlYXRlcgoJCQkJCWdvb2RzIGFuZCB0aGUgZW5kcy4gQW5kIHRoZSBzYW1lIHByaW5jaXBsZSBhcHBsaWVzIGluIHJlZ2FyZCB0byBtb2RlcyBvZiBsaWZlCgkJCQkJYW5kIGNob2ljZXMgb2YgY29uZHVjdDogYSBtYW4gc2hvdWxkIGJlIGNhcGFibGUgb2YgZW5nYWdpbmcgaW4gYnVzaW5lc3MgYW5kIHdhciwKCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMzNiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1333b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCBzdGlsbCBtb3JlIGNhcGFibGUgb2YgbGl2aW5nIGluIHBlYWNlIGFuZCBsZWlzdXJlOyBhbmQgaGUKCQkJCQlzaG91bGQgZG8gd2hhdCBpcyBuZWNlc3NhcnkgYW5kIHVzZWZ1bCwgYnV0IHN0aWxsIG1vcmUgc2hvdWxkIGhlIGRvIHdoYXQgaXMKCQkJCQlub2JsZS4gVGhlc2UgdGhlbiBhcmUgdGhlIGFpbXMgdGhhdCBvdWdodCB0byBiZSBrZXB0IGluIHZpZXcgaW4gdGhlIGVkdWNhdGlvbiBvZgoJCQkJCXRoZSBjaXRpemVucyBib3RoIHdoaWxlIHN0aWxsIGNoaWxkcmVuIGFuZCBhdCB0aGUgbGF0ZXIgYWdlcyB0aGF0IHJlcXVpcmUKCQkJCQllZHVjYXRpb24uIDwvdHJhbnNsYXRpb24+"
translation['7.1333b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdGhlIEdyZWVrIHBlb3BsZXMKCQkJCQlyZXB1dGVkIGF0IHRoZSBwcmVzZW50IGRheSB0byBoYXZlIHRoZSBiZXN0IGNvbnN0aXR1dGlvbnMsIGFuZCB0aGUgbGF3Z2l2ZXJzCgkJCQkJdGhhdCBlc3RhYmxpc2hlZCB0aGVtLCBtYW5pZmVzdGx5IGRpZCBub3QgZnJhbWUgdGhlaXIgY29uc3RpdHV0aW9uYWwgc3lzdGVtcwoJCQkJCXdpdGggcmVmZXJlbmNlIHRvIHRoZSBiZXN0IGVuZCwgbm9yIGNvbnN0cnVjdCB0aGVpciBsYXdzIGFuZCB0aGVpciBzY2hlbWUgb2YKCQkJCQllZHVjYXRpb24gd2l0aCBhIHZpZXcgdG8gYWxsIHRoZSB2aXJ0dWVzLCBidXQgdGhleSBzd2VydmVkIGFzaWRlIGluIGEgdnVsZ2FyCgkJCQkJbWFubmVyIHRvd2FyZHMgdGhvc2UgZXhjZWxsZW5jZXMgdGhhdCBhcmUgc3VwcG9zZWQgdG8gYmUgdXNlZnVsIGFuZCBtb3JlCgkJCQkJY29uZHVjaXZlIHRvIGdhaW4uIEFuZCBmb2xsb3dpbmcgdGhlIHNhbWUgbGluZXMgYXMgdGhleSwgc29tZSBsYXRlciB3cml0ZXJzIGFsc28KCQkJCQloYXZlIHByb25vdW5jZWQgdGhlIHNhbWUgb3BpbmlvbjogaW4gcHJhaXNpbmcgdGhlIFNwYXJ0YW4gY29uc3RpdHV0aW9uIHRoZXkKCQkJCQlleHByZXNzIGFkbWlyYXRpb24gZm9yIHRoZSBhaW0gb2YgaXRzIGZvdW5kZXIgb24gdGhlIGdyb3VuZCB0aGF0IGhlIGZyYW1lZCB0aGUKCQkJCQl3aG9sZSBvZiBoaXMgbGVnaXNsYXRpb24gd2l0aCBhIHZpZXcgdG8gY29ucXVlc3QgYW5kIHRvIHdhci4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMy4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXNlIHZpZXdzIGFyZSBlYXN5IHRvIHJlZnV0ZSBvbgoJCQkJCXRoZW9yZXRpY2FsIGdyb3VuZHMgYW5kIGFsc28gaGF2ZSBub3cgYmVlbiByZWZ1dGVkIGJ5IHRoZSBmYWN0cyBvZiBoaXN0b3J5LiBGb3IKCQkJCQlqdXN0IGFzIG1vc3Qgb2YgbWFua2luZCBjb3ZldCBiZWluZyBtYXN0ZXIgb2YgbWFueSBzZXJ2YW50czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciBwb3NzaWJseSwg4oCYY292ZXQgYSB3aWRlCgkJCQkJCWVtcGlyZS7igJk8L25vdGU+IGJlY2F1c2UgdGhpcyBwcm9kdWNlcyBhIG1hbmlmb2xkIHN1cHBseSBvZgoJCQkJCWZvcnR1bmUncyBnb29kcywgc28gVGhpYnJvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Vbmtub3duLjwvbm90ZT4KCQkJCQlhbmQgYWxsIHRoZSBvdGhlciB3cml0ZXJzIGFib3V0IHRoZSBTcGFydGFuIGNvbnN0aXR1dGlvbjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5zaG93IGFkbWlyYXRpb24gZm9yIHRoZSBsYXdnaXZlciBvZiB0aGUgU3BhcnRhbnMKCQkJCQliZWNhdXNlIG93aW5nIHRvIHRoZWlyIGhhdmluZyBiZWVuIHRyYWluZWQgdG8gbWVldCBkYW5nZXJzIHRoZXkgZ292ZXJuZWQgYSB3aWRlCgkJCQkJZW1waXJlLiA8L3RyYW5zbGF0aW9uPg=="
translation['7.1334a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5ZZXQgaXQgY2xlYXJseSBmb2xsb3dzCgkJCQkJdGhhdCBzaW5jZSBhcyBhIG1hdHRlciBvZiBmYWN0IGF0IHRoZSBwcmVzZW50IGRheSB0aGUgU3BhcnRhbnMgbm8gbG9uZ2VyIHBvc3Nlc3MKCQkJCQlhbiBlbXBpcmUsIHRoZXkgYXJlIG5vdCBoYXBweSwgYW5kIHRoZWlyIGxhd2dpdmVyIHdhcyBub3QgYSBnb29kIG9uZS4gQW5kIGl0IGlzCgkJCQkJcmlkaWN1bG91cyB0aGF0IGFsdGhvdWdoIHRoZXkgaGF2ZSBrZXB0IHRvIGhpcyBsYXdzLCBhbmQgYWx0aG91Z2ggbm90aGluZwoJCQkJCWhpbmRlcnMgdGhlaXIgb2JzZXJ2aW5nIHRoZSBsYXdzLCB0aGV5IGhhdmUgbG9zdCB0aGUgbm9ibGUgbGlmZS4gQWxzbyB3cml0ZXJzCgkJCQkJaGF2ZSBhIHdyb25nIGNvbmNlcHRpb24gb2YgdGhlIHBvd2VyIGZvciB3aGljaCB0aGUgbGF3Z2l2ZXIgc2hvdWxkIGRpc3BsYXkKCQkJCQllc3RlZW07IHRvIGdvdmVybiBmcmVlbWVuIGlzIG5vYmxlciBhbmQgbW9yZSBjb25qb2luZWQgd2l0aCB2aXJ0dWUgdGhhbiB0byBydWxlCgkJCQkJZGVzcG90aWNhbGx5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEzLjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGFnYWluIGl0IGlzIG5vdAoJCQkJCWEgcHJvcGVyIGdyb3VuZCBmb3IgZGVlbWluZyBhIHN0YXRlIGhhcHB5IGFuZCBmb3IgcHJhaXNpbmcgaXRzIGxhd2dpdmVyLCB0aGF0IGl0CgkJCQkJaGFzIHByYWN0aXNlZCBjb25xdWVzdCB3aXRoIGEgdmlldyB0byBydWxpbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBwcm9iYWJsZSBlbWVuZGF0aW9uIGdpdmVzIOKAmHRoYXQgaGUgaGFzIHRyYWluZWQgaXQgd2l0aCBhIHZpZXcKCQkJCQkJdG8gcnVsaW5nLuKAmTwvbm90ZT4gb3ZlciBpdHMgbmVpZ2hib3JzLiBUaGlzIHByaW5jaXBsZSBpcyBtb3N0CgkJCQkJZGlzYXN0cm91czsgaXQgZm9sbG93cyBmcm9tIGl0IHRoYXQgYW4gaW5kaXZpZHVhbCBjaXRpemVuIHdobyBoYXMgdGhlIGNhcGFjaXR5CgkJCQkJb3VnaHQgdG8gZW5kZWF2b3IgdG8gYXR0YWluIHRoZSBwb3dlciB0byBob2xkIHN3YXkgb3ZlciBoaXMgb3duIGNpdHk7IGJ1dCB0aGlzCgkJCQkJaXMganVzdCB3aGF0IHRoZSBTcGFydGFucyBjaGFyZ2UgYXMgYSByZXByb2FjaCBhZ2FpbnN0IHRoZWlyIGtpbmcgUGF1c2FuaWFzLAoJCQkJCWFsdGhvdWdoIGhlIGF0dGFpbmVkIHN1Y2ggaGlnaCBob25vci4gTm8gcHJpbmNpcGxlIHRoZXJlZm9yZSBhbmQgbm8gbGF3IG9mIHRoaXMKCQkJCQluYXR1cmUgaXMgZWl0aGVyIHN0YXRlc21hbmxpa2Ugb3IgcHJvZml0YWJsZSwgbm9yIGlzIGl0IHRydWU7IHRoZSBzYW1lIGlkZWFscwoJCQkJCWFyZSB0aGUgYmVzdCBib3RoIGZvciBpbmRpdmlkdWFscyBhbmQgZm9yIGNvbW11bml0aWVzLCBhbmQgdGhlIGxhd2dpdmVyIHNob3VsZAoJCQkJCWVuZGVhdm9yIHRvIGltcGxhbnQgdGhlbSBpbiB0aGUgc291bHMgb2YgbWFua2luZC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMy4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSBwcm9wZXIgb2JqZWN0IG9mIHByYWN0aXNpbmcgbWlsaXRhcnkgdHJhaW5pbmcgaXMgbm90CgkJCQkJaW4gb3JkZXIgdGhhdCBtZW4gbWF5IGVuc2xhdmUgdGhvc2Ugd2hvIGRvIG5vdCBkZXNlcnZlIHNsYXZlcnksIGJ1dCBpbiBvcmRlcgoJCQkJCXRoYXQgZmlyc3QgdGhleSBtYXkgdGhlbXNlbHZlcyBhdm9pZCBiZWNvbWluZyBlbnNsYXZlZCB0byBvdGhlcnM7IHRoZW4gc28gdGhhdAoJCQkJCXRoZXkgbWF5IHNlZWsgc3V6ZXJhaW50eSBmb3IgdGhlIGJlbmVmaXQgb2YgdGhlIHN1YmplY3QgcGVvcGxlLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMzNGEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1334a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCBub3QKCQkJCQlmb3IgdGhlIHNha2Ugb2Ygd29ybGQtd2lkZSBkZXNwb3Rpc207IGFuZCB0aGlyZGx5IHRvIGhvbGQgZGVzcG90aWMgcG93ZXIgb3ZlcgoJCQkJCXRob3NlIHdobyBkZXNlcnZlIHRvIGJlIHNsYXZlcy4gPC90cmFuc2xhdGlvbj4="
translation['7.1334a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuMTUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5FeHBlcmllbmNlIHN1cHBvcnRzIHRoZSB0ZXN0aW1vbnkgb2YgdGhlb3J5LCB0aGF0IGl0IGlzIHRoZSBkdXR5IG9mIHRoZQoJCQkJCWxhd2dpdmVyIHJhdGhlciB0byBzdHVkeSBob3cgaGUgbWF5IGZyYW1lIGhpcyBsZWdpc2xhdGlvbiBib3RoIHdpdGggcmVnYXJkIHRvCgkJCQkJd2FyZmFyZSBhbmQgaW4gb3RoZXIgZGVwYXJ0bWVudHMgZm9yIHRoZSBvYmplY3Qgb2YgbGVpc3VyZSBhbmQgb2YgcGVhY2UuIE1vc3QKCQkJCQltaWxpdGFyeSBzdGF0ZXMgcmVtYWluIHNhZmUgd2hpbGUgYXQgd2FyIGJ1dCBwZXJpc2ggd2hlbiB0aGV5IGhhdmUgd29uIHRoZWlyCgkJCQkJZW1waXJlOyBpbiBwZWFjZS10aW1lIHRoZXkgbG9zZSB0aGVpciBrZWVuIHRlbXBlciwgbGlrZSBpcm9uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGFuIGlyb24gYmxhZGUgd2hlbiBub3QgdXNlZCBsb3NlcwoJCQkJCQlrZWVubmVzcyBhbmQgaGFzIHRvIGJlIHJlLXRlbXBlcmVkLjwvbm90ZT4gVGhlIGxhd2dpdmVyIGlzIHRvIGJsYW1lLCBiZWNhdXNlCgkJCQkJaGUgZGlkIG5vdCBlZHVjYXRlIHRoZW0gdG8gYmUgYWJsZSB0byBlbXBsb3kgbGVpc3VyZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEzLjE2IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBzaW5jZSBpdCBhcHBlYXJzIHRoYXQKCQkJCQltZW4gaGF2ZSB0aGUgc2FtZSBlbmQgY29sbGVjdGl2ZWx5IGFuZCBpbmRpdmlkdWFsbHksIGFuZCBzaW5jZSB0aGUgc2FtZQoJCQkJCWRpc3RpbmN0aXZlIGFpbSBtdXN0IG5lY2Vzc2FyaWx5IGJlbG9uZyBib3RoIHRvIHRoZSBiZXN0IG1hbiBhbmQgdG8gdGhlIGJlc3QKCQkJCQlnb3Zlcm5tZW50LCBpdCBpcyBjbGVhciB0aGF0IHRoZSB2aXJ0dWVzIHJlbGF0aW5nIHRvIGxlaXN1cmUgYXJlIGVzc2VudGlhbDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRvIHRoZSBzdGF0ZSBhcyB3ZWxsIGFzIHRvIHRoZQoJCQkJCQlpbmRpdmlkdWFsLjwvbm90ZT47IHNpbmNlLCBhcyBoYXMgYmVlbiBzYWlkIHJlcGVhdGVkbHksIHBlYWNlIGlzIHRoZSBlbmQgb2YKCQkJCQl3YXIsIGxlaXN1cmUgb2YgYnVzaW5lc3MuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuMTciIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgdGhlCgkJCQkJdmlydHVlcyB1c2VmdWwgZm9yIGxlaXN1cmUgYW5kIGZvciBpdHMgZW1wbG95bWVudCBhcmUgbm90IG9ubHkgdGhvc2UgdGhhdAoJCQkJCW9wZXJhdGUgZHVyaW5nIGxlaXN1cmUgYnV0IGFsc28gdGhvc2UgdGhhdCBvcGVyYXRlIGluIGJ1c2luZXNzOyBmb3IgbWFueSBvZiB0aGUKCQkJCQluZWNlc3NhcmllcyBtdXN0IG5lZWRzIGJlIGZvcnRoY29taW5nIHRvIGdpdmUgdXMgb3Bwb3J0dW5pdHkgZm9yIGxlaXN1cmUuCgkJCQkJVGhlcmVmb3JlIGl0IGlzIHByb3BlciBmb3IgdGhlIHN0YXRlIHRvIGJlIHRlbXBlcmF0ZSw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YnJhdmUgYW5kIGVuZHVyaW5nOyBzaW5jZSwgYXMgdGhlIHByb3ZlcmIgZ29lcywKCQkJCQl0aGVyZSBpcyBubyBsZWlzdXJlIGZvciBzbGF2ZXMsIGJ1dCBwZW9wbGUgdW5hYmxlIHRvIGZhY2UgZGFuZ2VyIGJyYXZlbHkgYXJlIHRoZQoJCQkJCXNsYXZlcyBvZiB0aGVpciBhc3NhaWxhbnRzLiA8L3RyYW5zbGF0aW9uPg=="
translation['7.1334b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuMTgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVyZWZvcmUgY291cmFnZSBhbmQgZm9ydGl0dWRlIGFyZSBuZWVkZWQgZm9yIGJ1c2luZXNzLCBsb3ZlIG9mIHdpc2RvbSBmb3IKCQkJCQlsZWlzdXJlLCB0ZW1wZXJhbmNlIGFuZCBqdXN0aWNlIGZvciBib3RoIHNlYXNvbnMsIGFuZCBtb3JlIGVzcGVjaWFsbHkgd2hlbiBtZW4KCQkJCQlhcmUgYXQgcGVhY2UgYW5kIGhhdmUgbGVpc3VyZTsgZm9yIHdhciBjb21wZWxzIG1lbiB0byBiZSBqdXN0IGFuZCB0ZW1wZXJhdGUsCgkJCQkJd2hlcmVhcyB0aGUgZW5qb3ltZW50IG9mIHByb3NwZXJpdHkgYW5kIHBlYWNlZnVsIGxlaXN1cmUgdGVuZCB0byBtYWtlIHRoZW0KCQkJCQlpbnNvbGVudC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMy4xOSIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXJlZm9yZSBtdWNoIGp1c3RpY2UKCQkJCQlhbmQgbXVjaCB0ZW1wZXJhbmNlIGFyZSBuZWVkZWQgYnkgdGhvc2Ugd2hvIGFyZSBkZWVtZWQgdmVyeSBwcm9zcGVyb3VzIGFuZCB3aG8KCQkJCQllbmpveSBhbGwgdGhlIHRoaW5ncyBjb3VudGVkIGFzIGJsZXNzaW5ncywgbGlrZSB0aGUgcGVyc29ucywgaWYgc3VjaCB0aGVyZSBiZSwKCQkJCQlhcyB0aGUgcG9ldHMgc2F5LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGVzLiBXRCAxNzAiIHZhbGlkPSJ5ZXMiPkhlcy4gV0QgMTcwIGZmLjwvYmlibD4KCQkJCQk8L25vdGU+IHRoYXQgZHdlbGwgaW4gdGhlIElzbGFuZHMgb2YgdGhlIEJsZXN0OyB0aGVzZSB3aWxsIG1vc3QgbmVlZCB3aXNkb20sCgkJCQkJdGVtcGVyYW5jZSBhbmQganVzdGljZSwgdGhlIG1vcmUgdGhleSBhcmUgYXQgbGVpc3VyZSBhbmQgaGF2ZSBhbiBhYnVuZGFuY2Ugb2YKCQkJCQlzdWNoIGJsZXNzaW5ncy4gSXQgaXMgY2xlYXIgdGhlcmVmb3JlIHdoeSBhIHN0YXRlIHRoYXQgaXMgdG8gYmUgaGFwcHkgYW5kCgkJCQkJcmlnaHRlb3VzIG11c3Qgc2hhcmUgaW4gdGhlc2UgdmlydHVlczsgZm9yIGlmIGl0IGlzIGRpc2dyYWNlZnVsIHRvIGJlIHVuYWJsZSB0bwoJCQkJCXVzZSBvdXIgZ29vZCB0aGluZ3MsIGl0IGlzIHN0aWxsIG1vcmUgZGlzZ3JhY2VmdWwgdG8gYmUgdW5hYmxlIHRvIHVzZSB0aGVtIGluCgkJCQkJdGltZSBvZiBsZWlzdXJlLCBhbmQgYWx0aG91Z2ggc2hvd2luZyBvdXJzZWx2ZXMgZ29vZCBtZW4gd2hlbiBlbmdhZ2VkIGluCgkJCQkJYnVzaW5lc3MgYW5kIHdhciwgaW4gdGltZXMgb2YgcGVhY2UgYW5kIGxlaXN1cmUgdG8gc2VlbSBubyBiZXR0ZXIgdGhhbiBzbGF2ZXMuCgkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ikhlcy4gV0QgMTcwIiB2YWxpZD0ieWVzIj5IZXMuIFdEIDE3MCBmZi48L2JpYmw+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMy4yMCIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXJlZm9yZSB3ZSBtdXN0IG5vdAoJCQkJCWN1bHRpdmF0ZSB2aXJ0dWUgYWZ0ZXIgdGhlIG1hbm5lciBvZiB0aGUgc3RhdGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+LiBUaGUgc3VwZXJpb3JpdHkgb2YgdGhlIFNwYXJ0YW5zCgkJCQkJb3ZlciBvdGhlciByYWNlcyBkb2VzIG5vdCBsaWUgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMzRiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1334b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmluIHRoZWlyIGhvbGRpbmcgYSBkaWZmZXJlbnQgb3BpbmlvbiBmcm9tCgkJCQkJb3RoZXJzIGFzIHRvIHdoYXQgdGhpbmdzIGFyZSB0aGUgZ3JlYXRlc3QgZ29vZHMsIGJ1dCByYXRoZXIgaW4gdGhlaXIgYmVsaWV2aW5nCgkJCQkJdGhhdCB0aGVzZSBhcmUgb2J0YWluZWQgYnkgbWVhbnMgb2Ygb25lIHBhcnRpY3VsYXIgdmlydHVlOyB5ZXQgYmVjYXVzZSB0aGV5IGJvdGgKCQkJCQlkZWVtIHRoZXNlIHRoaW5ncyBhbmQgdGhlaXIgZW5qb3ltZW50IHRvIGJlIGdyZWF0ZXIgZ29vZHMgdGhhbiB0aGUgZW5qb3ltZW50IG9mCgkJCQkJdGhlIHZpcnR1ZXMgLiAuIC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIGVuZCBvZiB0aGlzIHNlbnRlbmNlCgkJCQkJCWFuZCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBuZXh0IGFwcGVhciB0byBoYXZlIGJlZW4gbG9zdC48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPi4gLiAuIGFuZCB0aGF0IGl0IGlzIHRvIGJlIHByYWN0aXNlZCBmb3IgaXRzIG93bgoJCQkJCXNha2UgaXMgbWFuaWZlc3QgZnJvbSB0aGVzZSBjb25zaWRlcmF0aW9uczsgPC90cmFuc2xhdGlvbj4="
translation['7.1334b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuMjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQgaXQgbXVzdCBub3cgYmUgY29uc2lkZXJlZCBob3cgYW5kIGJ5IHdoYXQgbWVhbnMgdGhpcwoJCQkJCXdpbGwgY29tZSBhYm91dC4gTm93IHdlIGhhdmUgaW5kZWVkIHByZXZpb3VzbHkgZGVjaWRlZCB0aGF0IGl0IHJlcXVpcmVzIG5hdHVyZQoJCQkJCWFuZCBoYWJpdCBhbmQgcmVhc29uLCBhbmQgYW1vbmcgdGhlc2UsIHdoYXQgcGFydGljdWxhciBxdWFsaXR5IG9mIG5hdHVyZSBtZW4KCQkJCQlvdWdodCB0byBwb3NzZXNzIGhhcyBiZWVuIGRlZmluZWQgcHJldmlvdXNseTsgYnV0IGl0IHJlbWFpbnMgdG8gY29uc2lkZXIgd2hldGhlcgoJCQkJCW1lbiBvdWdodCB0byBiZSBlZHVjYXRlZCBmaXJzdCBieSBtZWFucyBvZiB0aGUgcmVhc29uIG9yIGJ5IHRoZSBoYWJpdHMuIEZvcgoJCQkJCWJldHdlZW4gcmVhc29uIGFuZCBoYWJpdCB0aGUgbW9zdCBwZXJmZWN0IGhhcm1vbnkgb3VnaHQgdG8gZXhpc3QsIGFzIGl0IGlzCgkJCQkJcG9zc2libGUgYm90aCBmb3IgdGhlIHJlYXNvbiB0byBoYXZlIG1pc3NlZCB0aGUgaGlnaGVzdCBwcmluY2lwbGUgYW5kIGZvciBtZW4gdG8KCQkJCQloYXZlIGJlZW4gYXMgd3JvbmdseSB0cmFpbmVkIHRocm91Z2ggdGhlIGhhYml0cy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMy4yMiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoaXMgdGhlcmVmb3JlIGF0IGFsbCBldmVudHMgaXMgY2xlYXIgaW4gdGhlIGZpcnN0IHBsYWNlLAoJCQkJCWluIHRoZSBjYXNlIG9mIG1lbiBhcyBvZiBvdGhlciBjcmVhdHVyZXMsIHRoYXQgdGhlaXIgZW5nZW5kZXJpbmcgc3RhcnRzIGZyb20gYQoJCQkJCWJlZ2lubmluZywgYW5kIHRoYXQgdGhlIGVuZCBzdGFydHMgZnJvbSBhIGNlcnRhaW4gYmVnaW5uaW5nIHRoYXQgaXMgYW5vdGhlcgoJCQkJCQllbmQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgY29uamVjdHVyYWwgYWRkaXRpb24gdG8gdGhlIHRleHQKCQkJCQkJZ2l2ZXMg4oCYdGhlIGVuZCB0byB3aGljaCBhIGNlcnRhaW4gYmVnaW5uaW5nIGxlYWRzIGlzIGl0c2VsZiB0aGUKCQkJCQkJYmVnaW5uaW5nIG9mIGFub3RoZXIgZW5kLuKAmSBUaGUgYWN0aXZlIHVzZSBvZiB0aGUgcmVhc29uIGlzIHRoZSBlbmQKCQkJCQkJ77yIaS5lLiB0aGUgY29tcGxldGlvbiBhbmQgdGhlIHB1cnBvc2XvvIkgb2YgdGhlIGJpcnRoIGFuZAoJCQkJCQlncm93dGggb2YgdGhlIGh1bWFuIGFuaW1hbC48L25vdGU+IGFuZCB0aGF0IHJlYXNvbiBhbmQgaW50ZWxsaWdlbmNlIGFyZSBmb3IKCQkJCQl1cyB0aGUgZW5kIG9mIG91ciBuYXR1cmFsIGRldmVsb3BtZW50LCBzbyB0aGF0IGl0IGlzIHdpdGggYSB2aWV3IHRvIHRoZXNlIGVuZHMKCQkJCQl0aGF0IG91ciBlbmdlbmRlcmluZyBhbmQgdGhlIHRyYWluaW5nIG9mIG91ciBoYWJpdHMgbXVzdCBiZSByZWd1bGF0ZWQuCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTMuMjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgc2Vjb25kbHksIGFzIHNvdWwgYW5kIGJvZHkKCQkJCQlhcmUgdHdvLCBzbyB3ZSBvYnNlcnZlIHRoYXQgdGhlIHNvdWwgYWxzbyBoYXMgdHdvIHBhcnRzLCB0aGUgaXJyYXRpb25hbCBwYXJ0IGFuZAoJCQkJCXRoZSBwYXJ0IHBvc3Nlc3NpbmcgcmVhc29uLCBhbmQgdGhhdCB0aGUgc3RhdGVzIHdoaWNoIHRoZXkgZXhwZXJpZW5jZSBhcmUgdHdvIGluCgkJCQkJCW51bWJlciw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhlIG9uZSBiZWluZyBkZXNpcmUgYW5kCgkJCQkJdGhlIG90aGVyIGludGVsbGlnZW5jZTsgYW5kIGFzIHRoZSBib2R5IGlzIHByaW9yIGluIGl0cyBkZXZlbG9wbWVudCB0byB0aGUgc291bCwKCQkJCQlzbyB0aGUgaXJyYXRpb25hbCBwYXJ0IG9mIHRoZSBzb3VsIGlzIHByaW9yIHRvIHRoZSByYXRpb25hbC4gQW5kIHRoaXMgYWxzbyBpcwoJCQkJCW9idmlvdXMsIGJlY2F1c2UgcGFzc2lvbiBhbmQgd2lsbCwgYW5kIGFsc28gYXBwZXRpdGUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZXNlIHRocmVlIGVtb3Rpb25zIGFyZSBzdWJkaXZpc2lvbnMgb2YKCQkJCQkJ4oCYZGVzaXJl4oCZIGFib3ZlLjwvbm90ZT4gZXhpc3QgaW4gY2hpbGRyZW4gZXZlbiBhcyBzb29uIGFzCgkJCQkJdGhleSBhcmUgYm9ybiwgYnV0IGl0IGlzIHRoZSBuYXR1cmUgb2YgcmVhc29uaW5nIGFuZCBpbnRlbGxpZ2VuY2UgdG8gYXJpc2UgaW4KCQkJCQl0aGVtIGFzIHRoZXkgZ3JvdyBvbGRlci4gVGhlcmVmb3JlIGluIHRoZSBmaXJzdCBwbGFjZSBpdCBpcyBuZWNlc3NhcnkgZm9yIHRoZQoJCQkJCXRyYWluaW5nIG9mIHRoZSBib2R5IHRvIHByZWNlZGUgdGhhdCBvZiB0aGUgbWluZCwgYW5kIHNlY29uZGx5IGZvciB0aGUgdHJhaW5pbmcKCQkJCQlvZiB0aGUgYXBwZXRpdGUgdG8gcHJlY2VkZSB0aGF0IG9mIHRoZSBpbnRlbGxpZ2VuY2U7IGJ1dCB0aGUgdHJhaW5pbmcgb2YgdGhlCgkJCQkJYXBwZXRpdGUgbXVzdCBiZSBmb3IgdGhlIHNha2Ugb2YgdGhlIGludGVsbGVjdCwgYW5kIHRoYXQgb2YgdGhlIGJvZHkgZm9yIHRoZQoJCQkJCXNha2Ugb2YgdGhlIHNvdWwuPC90cmFuc2xhdGlvbj4="
translation['7.1335a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTQuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbmFzbXVjaCB0aGVyZWZvcmUgYXMgaXQgaXMgdGhlIGR1dHkgb2YgdGhlIGxhd2dpdmVyIHRvCgkJCQkJY29uc2lkZXIgZnJvbSB0aGUgc3RhcnQgaG93IHRoZSBjaGlsZHJlbiByZWFyZWQgYXJlIHRvIG9idGFpbiB0aGUgYmVzdCBib2RpbHkKCQkJCQlmcmFtZXMsIGhlIG11c3QgZmlyc3QgcGF5IGF0dGVudGlvbiB0byB0aGUgdW5pb24gb2YgdGhlIHNleGVzLCBhbmQgc2V0dGxlIHdoZW4KCQkJCQlhbmQgaW4gd2hhdCBjb25kaXRpb24gYSBjb3VwbGUgc2hvdWxkIHByYWN0aXNlIG1hdHJpbW9uaWFsIGludGVyY291cnNlLiBJbgoJCQkJCWxlZ2lzbGF0aW5nIGZvciB0aGlzIHBhcnRuZXJzaGlwIGhlIG11c3QgcGF5IHJlZ2FyZCBwYXJ0bHkgdG8gdGhlIHBlcnNvbnMKCQkJCQl0aGVtc2VsdmVzIGFuZCB0byB0aGVpciBzcGFuIG9mIGxpZmUsIHNvIHRoYXQgdGhleSBtYXkgYXJyaXZlIHRvZ2V0aGVyIGF0IHRoZQoJCQkJCXNhbWUgcGVyaW9kIGluIHRoZWlyIGFnZXMsIGFuZCB0aGVpciBwb3dlcnMgbWF5IG5vdCBiZSBhdCBkaXNjb3JkIHRocm91Z2ggdGhlCgkJCQkJbWFuIGJlaW5nIHN0aWxsIGNhcGFibGUgb2YgcGFyZW50YWdlIGFuZCB0aGUgd2lmZSBpbmNhcGFibGUsIG9yIHRoZSB3aWZlIGNhcGFibGUKCQkJCQlhbmQgdGhlIG1hbiBub3Qg77yIZm9yIHRoaXMgY2F1c2VzIGRpZmZlcmVuY2VzIGFuZCBhY3R1YWwgZGlzY29yZCBiZXR3ZWVuCgkJCQkJdGhlbe+8iSwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxNC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGFsc28gaGUgbXVzdAoJCQkJCWNvbnNpZGVyIGFzIHdlbGwgdGhlIHN1Y2Nlc3Npb24gb2YgdGhlIGNoaWxkcmVuLCBmb3IgdGhlIGNoaWxkcmVuIG11c3QgbmVpdGhlcgoJCQkJCWJlIHRvbyBmYXIgcmVtb3ZlZCBpbiB0aGVpciBhZ2VzIGZyb20gdGhlIGZhdGhlcnMg77yIc2luY2UgZWxkZXJseQoJCQkJCWZhdGhlcnMgZ2V0IG5vIGdvb2QgZnJvbSB0aGVpciBjaGlsZHJlbidzIHJldHVybiBvZiB0aGVpciBmYXZvcnMsIG5vciBkbyB0aGUKCQkJCQljaGlsZHJlbiBmcm9tIHRoZSBoZWxwIHRoZXkgZ2V0IGZyb20gdGhlIGZhdGhlcnPvvIksIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzM1YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1335a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPm5vciBtdXN0IHRoZXkgYmUKCQkJCQl0b28gbmVhciB0aGVtIO+8iGZvciB0aGlzIGludm9sdmVzIG11Y2ggdW5wbGVhc2FudG5lc3MsIHNpbmNlIGluIHN1Y2gKCQkJCQlmYW1pbGllcyB0aGVyZSBpcyBsZXNzIHJlc3BlY3QgZmVsdCBiZXR3ZWVuIHRoZW0sIGFzIGJldHdlZW4gY29tcGFuaW9ucyBvZiB0aGUKCQkJCQlzYW1lIGFnZSwgYW5kIGFsc28gdGhlIG5lYXJuZXNzIG9mIGFnZSBsZWFkcyB0byBmcmljdGlvbiBpbiBob3VzZWhvbGQKCQkJCQlhZmZhaXJz77yJOyBhbmQgaW4gYWRkaXRpb24sIHRvIHJldHVybiB0byB0aGUgcG9pbnQgZnJvbSB3aGljaCB3ZSBiZWdhbgoJCQkJCXRoaXMgZGlncmVzc2lvbiwgbWVhc3VyZXMgbXVzdCBiZSB0YWtlbiB0byBlbnN1cmUgdGhhdCB0aGUgY2hpbGRyZW4gcHJvZHVjZWQgbWF5CgkJCQkJaGF2ZSBib2RpbHkgZnJhbWVzIHN1aXRlZCB0byB0aGUgd2lzaCBvZiB0aGUgbGF3Z2l2ZXIuIDwvdHJhbnNsYXRpb24+"
translation['7.1335a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTQuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXNlIHJlc3VsdHMgdGhlbiBhcmUgYWxtb3N0IGFsbCBhdHRhaW5lZCBieSBvbmUKCQkJCQltb2RlIG9mIHJlZ3VsYXRpb24uIEZvciBzaW5jZSB0aGUgcGVyaW9kIG9mIHBhcmVudGFnZSB0ZXJtaW5hdGVzLCBzcGVha2luZwoJCQkJCWdlbmVyYWxseSwgd2l0aCBtZW4gYXQgdGhlIGFnZSBvZiBzZXZlbnR5IGF0IHRoZSBvdXRzaWRlLCBhbmQgd2l0aCB3b21lbiBhdAoJCQkJCWZpZnR5LCB0aGUgY29tbWVuY2VtZW50IG9mIHRoZWlyIHVuaW9uIHNob3VsZCBjb3JyZXNwb25kIGluIHJlc3BlY3Qgb2YgYWdlIHdpdGgKCQkJCQl0aGVzZSB0aW1lcy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxNC40IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHRoZSBtYXRpbmcgb2YgdGhlCgkJCQkJeW91bmcgaXMgYmFkIGZvciBjaGlsZC1iZWFyaW5nOyBmb3IgaW4gYWxsIGFuaW1hbCBzcGVjaWVzIHRoZSBvZmZzcHJpbmcgb2YgdGhlCgkJCQkJeW91bmcgYXJlIG1vcmUgaW1wZXJmZWN0IGFuZCBsaWtlbHkgdG8gcHJvZHVjZSBmZW1hbGUgY2hpbGRyZW4sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNvbWUgZWRpdG9ycyB3cml0ZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuM63zrvhvbvPhM6/zrrOsTwvZm9yZWlnbj4gYW5kIGludGVycHJldCDigJhtb3JlIGxpa2VseSB0byBiZSBib3JuCgkJCQkJCWZlbWFsZXMu4oCZIO+8iCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuM63zrvPhc+E4b25zrrOsTwvZm9yZWlnbj4sCgkJCQkJCeKAmGxpa2VseSB0byBiZWFyIGZlbWFsZXMs4oCZIGlzIGFwcGxpZWQgdG8gdGhlIHlvdW5nCgkJCQkJCXBhcmVudHMgdGhlbXNlbHZlcyBpbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBIQSA3NjZiLjI5Ij5BcmlzdG90LiBIaXN0LiBBbi4gNzY2YgoJCQkJCQkJMjk8L2JpYmw+Lu+8iTwvbm90ZT4gYW5kIHNtYWxsIGluIGZpZ3VyZSwgc28gdGhhdCB0aGUgc2FtZSB0aGluZwoJCQkJCW11c3QgbmVjZXNzYXJpbHkgb2NjdXIgaW4gdGhlIGh1bWFuIHJhY2UgYWxzby4gQW5kIGEgcHJvb2Ygb2YgdGhpcyBpcyB0aGF0IGluCgkJCQkJYWxsIHRoZSBzdGF0ZXMgd2hlcmUgaXQgaXMgdGhlIGxvY2FsIGN1c3RvbSB0byBtYXRlIHlvdW5nIG1lbiBhbmQgeW91bmcgd29tZW4sCgkJCQkJdGhlIHBlb3BsZSBhcmUgZGVmb3JtZWQgYW5kIHNtYWxsIG9mIGJvZHkuIEFuZCBhZ2FpbiB5b3VuZyB3b21lbiBsYWJvciBtb3JlLCBhbmQKCQkJCQltb3JlIG9mIHRoZW0gZGllIGluIGNoaWxkYmlydGg7IGluZGVlZCBhY2NvcmRpbmcgdG8gc29tZSBhY2NvdW50cyBzdWNoIHdhcyB0aGUKCQkJCQlyZWFzb24gd2h5IHRoZSBvcmFjbGU8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuM63zrvhvbvPhM6/zrrOsTwvZm9yZWlnbj4gYW5kIGludGVycHJldCDigJhtb3JlIGxpa2VseSB0byBiZSBib3JuCgkJCQkJCWZlbWFsZXMu4oCZIO+8iCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuM63zrvPhc+E4b25zrrOsTwvZm9yZWlnbj4sCgkJCQkJCeKAmGxpa2VseSB0byBiZWFyIGZlbWFsZXMs4oCZIGlzIGFwcGxpZWQgdG8gdGhlIHlvdW5nCgkJCQkJCXBhcmVudHMgdGhlbXNlbHZlcyBpbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBIQSA3NjZiLjI5Ij5BcmlzdG90LiBIaXN0LiBBbi4gNzY2YgoJCQkJCQkJMjk8L2JpYmw+Lu+8iTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OnOG9tCDPhOG9s868zr3OtSDOveG9s86xzr0g4byEzrvOv866zrE8L2ZvcmVpZ24+77yI4oCYY3V0IG5vdCBhIG5ldwoJCQkJCQlmdXJyb3figJnvvIkgc2Nob2wuPC9ub3RlPiB3YXMgZ2l2ZW48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OnOG9tCDPhOG9s868zr3OtSDOveG9s86xzr0g4byEzrvOv866zrE8L2ZvcmVpZ24+77yI4oCYY3V0IG5vdCBhIG5ldwoJCQkJCQlmdXJyb3figJnvvIkgc2Nob2wuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRvIHRoZSBwZW9wbGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDUwMDQyODciIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNTAwNDI4NyI+VHJvZXplbjwvcGxhY2VOYW1lPiwgYmVjYXVzZSBtYW55IHdlcmUgZHlpbmcgb3dpbmcgdG8gaXRzIGJlaW5nIHRoZWlyCgkJCQkJY3VzdG9tIGZvciB0aGUgd29tZW4gdG8gbWFycnkgeW91bmcsIGFuZCBpdCBkaWQgbm90IHJlZmVyIHRvIHRoZSBoYXJ2ZXN0LgoJCQkJCQk8L3RyYW5zbGF0aW9uPg=="
translation['7.1335b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTQuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBhZ2FpbiBpdCBhbHNvIGNvbnRyaWJ1dGVzCgkJCQkJdG8gY2hhc3RpdHkgZm9yIHRoZSBiZXN0b3dhbCBvZiB3b21lbiBpbiBtYXJyaWFnZSB0byBiZSBtYWRlIHdoZW4gdGhleSBhcmUKCQkJCQlvbGRlciwgZm9yIGl0IGlzIHRob3VnaHQgdGhhdCB0aGV5IGFyZSBtb3JlIGxpY2VudGlvdXMgd2hlbiB0aGV5IGhhdmUgaGFkCgkJCQkJaW50ZXJjb3Vyc2UgaW4geW91dGguIEFsc28gdGhlIG1hbGVzIGFyZSB0aG91Z2h0IHRvIGJlIGFycmVzdGVkIGluIGJvZGlseSBncm93dGgKCQkJCQlpZiB0aGV5IGhhdmUgaW50ZXJjb3Vyc2Ugd2hpbGUgdGhlIHNlZWQgaXMgc3RpbGwgZ3Jvd2luZywgZm9yIHRoaXMgYWxzbyBoYXMgYQoJCQkJCWZpeGVkIHBlcmlvZCBhZnRlciBwYXNzaW5nIHdoaWNoIGl0IGlzIG5vIGxvbmdlciBwbGVudGlmdWwuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTQuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXJlZm9yZSBpdCBpcyBmaXR0aW5nIGZvciB0aGUgd29tZW4gdG8gYmUgbWFycmllZAoJCQkJCWF0IGFib3V0IHRoZSBhZ2Ugb2YgZWlnaHRlZW4gYW5kIHRoZSBtZW4gYXQgdGhpcnR5LXNldmVuIG9yIGEgbGl0dGxlIGJlZm9yZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgd29yZCDigJhiZWZvcmXigJkgaXMgYQoJCQkJCQljb25qZWN0dXJhbCBpbnNlcnRpb24uPC9ub3RlPuKAlGZvciB0aGF0IHdpbGwgZ2l2ZSBsb25nIGVub3VnaCBmb3IKCQkJCQl0aGUgdW5pb24gdG8gdGFrZSBwbGFjZSB3aXRoIHRoZWlyIGJvZGlseSB2aWdvciBhdCBpdHMgcHJpbWUsIGFuZCBmb3IgaXQgdG8KCQkJCQlhcnJpdmUgd2l0aCBhIGNvbnZlbmllbnQgY29pbmNpZGVuY2Ugb2YgZGF0ZXMgYXQgdGhlIHRpbWUgd2hlbiBwcm9jcmVhdGlvbgoJCQkJCWNlYXNlcy4gTW9yZW92ZXIgdGhlIHN1Y2Nlc3Npb24gb2YgdGhlIGNoaWxkcmVuIHRvIHRoZSBlc3RhdGVzLCBpZiB0aGVpciBiaXJ0aAoJCQkJCWR1bHkgb2NjdXJzIHNvb24gYWZ0ZXIgdGhlIHBhcmVudHMgbWFycnksIHdpbGwgdGFrZSBwbGFjZSB3aGVuIHRoZXkgYXJlCgkJCQkJYmVnaW5uaW5nIHRoZWlyIHByaW1lLCBhbmQgd2hlbiB0aGUgcGFyZW50cycgcGVyaW9kIG9mIHZpZ29yIGhhcyBub3cgY29tZSB0byBhCgkJCQkJY2xvc2UsIHRvd2FyZHMgdGhlIGFnZSBvZiBzZXZlbnR5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjE0LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgcHJvcGVyIGFnZSB0aGVyZWZvcmUgZm9yIHVuaW9uIGhhcyBiZWVuIGRpc2N1c3NlZDsgYXMgdG8gdGhlIHByb3BlciB0aW1lcwoJCQkJCWluIHJlc3BlY3Qgb2YgdGhlIHNlYXNvbiB3ZSBtYXkgYWNjZXB0IHdoYXQgaXMgY3VzdG9tYXJ5IHdpdGggbW9zdCBwZW9wbGUsIHdobwoJCQkJCWhhdmUgcmlnaHRseSBkZWNpZGVkIGV2ZW4gYXMgaXQgaXMgdG8gcHJhY3Rpc2UgbWFyaXRhbCBjb2hhYml0YXRpb24gaW4gd2ludGVyLgoJCQkJCUFuZCBwZW9wbGUgc2hvdWxkIGFsc28gc3R1ZHkgZm9yIHRoZW1zZWx2ZXMsIHdoZW4gdGhlaXIgdGltZSBjb21lcywgdGhlCgkJCQkJdGVhY2hpbmdzIG9mIHBoeXNpY2lhbnMgYW5kIG5hdHVyYWwgcGhpbG9zb3BoZXJzIG9uIHRoZSBzdWJqZWN0IG9mIHRoZQoJCQkJCXByb2NyZWF0aW9uIG9mIGNoaWxkcmVuOyB0aGUgc3VpdGFibGUgYm9kaWx5IHNlYXNvbnMgYXJlIGFkZXF1YXRlbHkgZGlzY3Vzc2VkIGJ5CgkJCQkJdGhlIHBoeXNpY2lhbnMsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzM1YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1335b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGUgcXVlc3Rpb24gb2Ygd2VhdGhlciBieSB0aGUgbmF0dXJhbAoJCQkJCXBoaWxvc29waGVycywgd2hvIHNheSB0aGF0IG5vcnRoIHdpbmRzIGFyZSBtb3JlIGZhdm9yYWJsZSB0aGFuIHNvdXRoLiA8L3RyYW5zbGF0aW9uPg=="
translation['7.1335b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTQuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZSBwYXJ0aWN1bGFyIGtpbmQgb2YgYm9kaWx5IGNvbnN0aXR1dGlvbgoJCQkJCWluIHRoZSBwYXJlbnRzIHRoYXQgd2lsbCBiZSBtb3N0IGJlbmVmaWNpYWwgZm9yIHRoZSBvZmZzcHJpbmcgbXVzdCBiZSBkd2VsdCBvbgoJCQkJCW1vcmUgaW4gZGV0YWlsIGluIG91ciBkaXNjdXNzaW9uIG9mIHRoZSBtYW5hZ2VtZW50IG9mIGNoaWxkcmVuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgd2FzIG5ldmVyIHdyaXR0ZW4sIG9yIGhhcyBiZWVuCgkJCQkJCWxvc3QuPC9ub3RlPjsgaXQgaXMgc3VmZmljaWVudCB0byBzcGVhayBvZiBpdCBpbiBvdXRsaW5lIG5vdy4gVGhlIGF0aGxldGUncwoJCQkJCWhhYml0IG9mIGJvZHkgaXMgbm90IHNlcnZpY2VhYmxlIGZvciBib2RpbHkgZml0bmVzcyBhcyByZXF1aXJlZCBieSBhIGNpdGl6ZW4sCgkJCQkJbm9yIGZvciBoZWFsdGggYW5kIHBhcmVudGFnZSwgbm9yIHlldCBpcyBhIGhhYml0IHRoYXQgaXMgdG9vIHZhbGV0dWRpbmFyaWFuIGFuZAoJCQkJCXVuZml0IGZvciBsYWJvciwgYnV0IHRoZSBjb25kaXRpb24gdGhhdCBsaWVzIGJldHdlZW4gdGhlbS4gVGhlIGJvZGlseSBoYWJpdAoJCQkJCXRoZXJlZm9yZSBzaG91bGQgaGF2ZSBiZWVuIHRyYWluZWQgYnkgZXhlcmNpc2UsIGJ1dCBub3QgYnkgZXhlcmNpc2VzIHRoYXQgYXJlCgkJCQkJdmlvbGVudCwgYW5kIG5vdCBmb3Igb25lIGZvcm0gb2YgbGFib3Igb25seSwgYXMgaXMgdGhlIGF0aGxldGUncyBoYWJpdCBvZiBib2R5LAoJCQkJCWJ1dCBmb3IgdGhlIHB1cnN1aXRzIG9mIGZyZWUgbWVuLiBBbmQgdGhlc2UgYXJyYW5nZW1lbnRzIG11c3QgYmUgcHJvdmlkZWQgYWxpa2UKCQkJCQlmb3IgbWVuIGFuZCB3b21lbi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxNC45IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHByZWduYW50CgkJCQkJd29tZW4gYWxzbyBtdXN0IHRha2UgY2FyZSBvZiB0aGVpciBib2RpZXMsIG5vdCBhdm9pZGluZyBleGVyY2lzZSBub3IgYWRvcHRpbmcgYQoJCQkJCWxvdyBkaWV0OyB0aGlzIGl0IGlzIGVhc3kgZm9yIHRoZSBsYXdnaXZlciB0byBzZWN1cmUgYnkgb3JkZXJpbmcgdGhlbSB0byBtYWtlIGEKCQkJCQlqb3VybmV5IGRhaWx5IGZvciB0aGUgZHVlIHdvcnNoaXAgb2YgdGhlIGRlaXRpZXMgd2hvc2Ugb2ZmaWNlIGlzIHRoZSBjb250cm9sIG9mCgkJCQkJY2hpbGRiaXJ0aC4gQXMgcmVnYXJkcyB0aGUgbWluZCwgaG93ZXZlciwgb24gdGhlIGNvbnRyYXJ5IGl0IHN1aXRzIHRoZW0gdG8gcGFzcwoJCQkJCXRoZSB0aW1lIG1vcmUgaW5kb2xlbnRseSB0aGFuIGFzIHJlZ2FyZHMgdGhlaXIgYm9kaWVzOyBmb3IgY2hpbGRyZW4gYmVmb3JlIGJpcnRoCgkJCQkJYXJlIGV2aWRlbnRseSBhZmZlY3RlZCBieSB0aGUgbW90aGVyIGp1c3QgYXMgZ3Jvd2luZyBwbGFudHMgYXJlIGJ5IHRoZQoJCQkJCQllYXJ0aC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjE0LjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+QXMgdG8gZXhwb3NpbmcKCQkJCQkJb3I8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+cmVhcmluZyB0aGUgY2hpbGRyZW4gYm9ybiwgbGV0CgkJCQkJdGhlcmUgYmUgYSBsYXcgdGhhdCBubyBkZWZvcm1lZCBjaGlsZCBzaGFsbCBiZSByZWFyZWQ7IGJ1dCBvbiB0aGUgZ3JvdW5kIG9mCgkJCQkJbnVtYmVyIG9mIGNoaWxkcmVuLCBpZiB0aGUgcmVndWxhciBjdXN0b21zIGhpbmRlciBhbnkgb2YgdGhvc2UgYm9ybiBiZWluZwoJCQkJCWV4cG9zZWQsIHRoZXJlIG11c3QgYmUgYSBsaW1pdCBmaXhlZCB0byB0aGUgcHJvY3JlYXRpb24gb2Ygb2Zmc3ByaW5nLCBhbmQgaWYgYW55CgkJCQkJcGVvcGxlIGhhdmUgYSBjaGlsZCBhcyBhIHJlc3VsdCBvZiBpbnRlcmNvdXJzZSBpbiBjb250cmF2ZW50aW9uIG9mIHRoZXNlCgkJCQkJcmVndWxhdGlvbnMsIGFib3J0aW9uIG11c3QgYmUgcHJhY3Rpc2VkIG9uIGl0IGJlZm9yZSBpdCBoYXMgZGV2ZWxvcGVkIHNlbnNhdGlvbgoJCQkJCWFuZCBsaWZlOyBmb3IgdGhlIGxpbmUgYmV0d2VlbiBsYXdmdWwgYW5kIHVubGF3ZnVsIGFib3J0aW9uIHdpbGwgYmUgbWFya2VkIGJ5CgkJCQkJdGhlIGZhY3Qgb2YgaGF2aW5nIHNlbnNhdGlvbiBhbmQgYmVpbmcgYWxpdmUuIDwvdHJhbnNsYXRpb24+"
translation['7.1336a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTQuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgc2luY2UgdGhlIGJlZ2lubmluZyBvZiB0aGUgZml0IGFnZSBmb3IgYSBtYW4gYW5kIGZvciBhCgkJCQkJd29tYW4sIGF0IHdoaWNoIHRoZXkgYXJlIHRvIGJlZ2luIHRoZWlyIHVuaW9uLCBoYXMgYmVlbiBkZWZpbmVkLCBsZXQgaXQgYWxzbyBiZQoJCQkJCWRlY2lkZWQgZm9yIGhvdyBsb25nIGEgdGltZSBpdCBpcyBzdWl0YWJsZSBmb3IgdGhlbSB0byBzZXJ2ZSB0aGUgc3RhdGUgaW4gdGhlCgkJCQkJbWF0dGVyIG9mIHByb2R1Y2luZyBjaGlsZHJlbi4gRm9yIHRoZSBvZmZzcHJpbmcgb2YgdG9vIGVsZGVybHkgcGFyZW50cywgYXMgdGhvc2UKCQkJCQlvZiB0b28geW91bmcgb25lcywgYXJlIGJvcm4gaW1wZXJmZWN0IGJvdGggaW4gYm9keSBhbmQgbWluZCwgYW5kIHRoZSBjaGlsZHJlbiBvZgoJCQkJCXRob3NlIHRoYXQgaGF2ZSBhcnJpdmVkIGF0IG9sZCBhZ2UgYXJlIHdlYWtsaW5ncy4gVGhlcmVmb3JlIHRoZSBwZXJpb2QgbXVzdCBiZQoJCQkJCWxpbWl0ZWQgdG8gY29ycmVzcG9uZCB3aXRoIHRoZSBtZW50YWwgcHJpbWU7IGFuZCB0aGlzIGluIHRoZSBjYXNlIG9mIG1vc3QgbWVuIGlzCgkJCQkJdGhlIGFnZSBzdGF0ZWQgYnkgc29tZSBvZiB0aGUgcG9ldHMsIHdobyBtZWFzdXJlIG1lbidzIGFnZSBieSBwZXJpb2RzIG9mIHNldmVuCgkJCQkJCXllYXJzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iU29sLiBGci4gMjciPlNvbG9uIGZyLiAyNzwvYmlibD4KCQkJCQk8L25vdGU+4oCUaXQgaXMgYWJvdXQgdGhlIGFnZSBvZiBmaWZ0eS4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iU29sLiBGci4gMjciPlNvbG9uIGZyLiAyNzwvYmlibD4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjE0LjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmVmb3JlIHBlcnNvbnMgZXhjZWVkaW5nIHRoaXMgYWdlIGJ5IGZvdXIgb3IgZml2ZSB5ZWFycwoJCQkJCW11c3QgYmUgZGlzY2hhcmdlZCBmcm9tIHRoZSBkdXR5IG9mIHByb2R1Y2luZyBjaGlsZHJlbiBmb3IgdGhlIGNvbW11bml0eSwgYW5kCgkJCQkJZm9yIHRoZSByZXN0IG9mIHRoZWlyIGxpdmVzIGlmIHRoZXkgaGF2ZSBpbnRlcmNvdXJzZSBpdCBtdXN0IGJlIG1hbmlmZXN0bHkgZm9yCgkJCQkJdGhlIHNha2Ugb2YgaGVhbHRoIG9yIGZvciBzb21lIG90aGVyIHNpbWlsYXIgcmVhc29uLiBBcyB0byBpbnRlcmNvdXJzZSB3aXRoCgkJCQkJYW5vdGhlciB3b21hbiBvciBtYW4sIGluIGdlbmVyYWwgaXQgbXVzdCBiZSBkaXNob25vcmFibGUgZm9yIHRoZW0gdG8gYmUga25vd24gdG8KCQkJCQl0YWtlIGFueSBwYXJ0IGluIGl0IGluIGFueSBjaXJjdW1zdGFuY2VzIHdoYXRzb2V2ZXIgYXMgbG9uZyBhcyB0aGV5IGFyZSBodXNiYW5kCgkJCQkJYW5kIHdpZmUgYW5kIGJlYXIgdGhvc2UgbmFtZXMsIGJ1dCBhbnkgd2hvIG1heSBiZSBkaXNjb3ZlcmVkIGRvaW5nIGFueXRoaW5nIG9mCgkJCQkJdGhlIHNvcnQgZHVyaW5nIHRoZWlyIHBlcmlvZCBvZiBwYXJlbnRhZ2UgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMzZhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1336a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPm11c3QgYmUgcHVuaXNoZWQgd2l0aCBhIGxvc3Mgb2YKCQkJCQlwcml2aWxlZ2Ugc3VpdGVkIHRvIHRoZSBvZmZlbmNlLjwvdHJhbnNsYXRpb24+"
translation['7.1336a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTUuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZSBjaGlsZHJlbiBoYXZlIGJlZW4gYm9ybiwgdGhlCgkJCQkJcGFydGljdWxhciBtb2RlIG9mIHJlYXJpbmcgYWRvcHRlZCBtdXN0IGJlIGRlZW1lZCBhbiBpbXBvcnRhbnQgZGV0ZXJtaW5pbmcKCQkJCQlpbmZsdWVuY2UgaW4gcmVnYXJkIHRvIHRoZWlyIHBvd2VyIG9mIGJvZHkuIEl0IGFwcGVhcnMgZnJvbSBleGFtaW5pbmcgdGhlIG90aGVyCgkJCQkJYW5pbWFscywgYW5kIGlzIGFsc28gc2hvd24gYnkgdGhlIGZvcmVpZ24gcmFjZXMgdGhhdCBtYWtlIGl0IHRoZWlyIGFpbSB0byBrZWVwCgkJCQkJdXAgdGhlIG1pbGl0YXJ5IGhhYml0IG9mIGJvZHksIHRoYXQgYSBkaWV0IGdpdmluZyBhbiBhYnVuZGFuY2Ugb2YgbWlsayBpcyBtb3N0CgkJCQkJc3VpdGVkIHRvIHRoZSBib2RpZXMgb2YgY2hpbGRyZW4sIGFuZCBvbmUgdGhhdCBhbGxvd3MgcmF0aGVyIGxpdHRsZSB3aW5lIGJlY2F1c2UKCQkJCQlvZiB0aGUgZGlzZWFzZXMgdGhhdCBpdCBjYXVzZXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTUuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPk1vcmVvdmVyIGl0IGlzIGFkdmFudGFnZW91cyB0byBzdWJqZWN0IHRoZW0gdG8gYXMgbWFueSBtb3ZlbWVudHMgYXMgYXJlCgkJCQkJcHJhY3RpY2FibGUgd2l0aCBjaGlsZHJlbiBvZiB0aGF0IGFnZS4gVG8gcHJldmVudCB0aGUgbGltYnMgZnJvbSBiZWluZyBkaXN0b3J0ZWQKCQkJCQlvd2luZyB0byBzb2Z0bmVzcywgc29tZSByYWNlcyBldmVuIG5vdyBlbXBsb3kgY2VydGFpbiBtZWNoYW5pY2FsIGFwcGxpYW5jZXMgdGhhdAoJCQkJCWtlZXAgdGhlIGJvZGllcyBvZiBpbmZhbnRzIGZyb20gYmVpbmcgdHdpc3RlZC4gQW5kIGl0IGlzIGFsc28gYWR2YW50YWdlb3VzIHRvCgkJCQkJYWNjdXN0b20gdGhlbSBhdCBvbmNlIGZyb20gZWFybHkgY2hpbGRob29kIHRvIGNvbGQsIGZvciB0aGlzIGlzIG1vc3QgdXNlZnVsIGJvdGgKCQkJCQlmb3IgaGVhbHRoIGFuZCB3aXRoIGEgdmlldyB0byBtaWxpdGFyeSBzZXJ2aWNlLiBIZW5jZSBhbW9uZyBtYW55IG5vbi1HcmVlayByYWNlcwoJCQkJCWl0IGlzIGN1c3RvbWFyeSBpbiB0aGUgY2FzZSBvZiBzb21lIHBlb3BsZXMgdG8gd2FzaCB0aGUgY2hpbGRyZW4gYXQgYmlydGggYnkKCQkJCQlkaXBwaW5nIHRoZW0gaW4gYSBjb2xkIHJpdmVyLCBhbmQgd2l0aCBvdGhlcnMsIGZvciBpbnN0YW5jZSB0aGUgQ2VsdHMsIHRvIGdpdmUKCQkJCQl0aGVtIHNjYW50eSBjb3ZlcmluZy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxNS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIGl0IGlzCgkJCQkJYmV0dGVyIHRvIGludXJlIHRoZW0gYXQgdGhlIHZlcnkgc3RhcnQgdG8gZXZlcnl0aGluZyBwb3NzaWJsZSwgYnV0IHRvIGludXJlIHRoZW0KCQkJCQkJZ3JhZHVhbGx5OzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgdGhlIGJvZGlseSBoYWJpdCBvZgoJCQkJCWNoaWxkcmVuIGlzIG5hdHVyYWxseSB3ZWxsIGZpdHRlZCBieSB3YXJtdGggdG8gYmUgdHJhaW5lZCB0byBiZWFyIGNvbGQuIEluIHRoZQoJCQkJCWVhcmxpZXN0IHBlcmlvZCBvZiBsaWZlIHRoZW4gaXQgaXMgZXhwZWRpZW50IHRvIGVtcGxveSB0aGlzIG9yIGEgc2ltaWxhciBtZXRob2QKCQkJCQlvZiBudXJzaW5nOyA8L3RyYW5zbGF0aW9uPg=="
translation['7.1336b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTUuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCB0aGUgbmV4dCBwZXJpb2QgdG8KCQkJCQl0aGlzLCB1cCB0byB0aGUgYWdlIG9mIGZpdmUsIHdoaWNoIGl0IGlzIG5vdCB3ZWxsIHRvIGRpcmVjdCBhcyB5ZXQgdG8gYW55IHN0dWR5CgkJCQkJbm9yIHRvIGNvbXB1bHNvcnkgbGFib3JzLCBpbiBvcmRlciB0aGF0IHRoZXkgbWF5IG5vdCBoaW5kZXIgdGhlIGdyb3d0aCwgc2hvdWxkCgkJCQkJbmV2ZXJ0aGVsZXNzIGJlIGFsbG93ZWQgZW5vdWdoIG1vdmVtZW50IHRvIGF2b2lkIGJvZGlseSBpbmFjdGl2aXR5OyBhbmQgdGhpcwoJCQkJCWV4ZXJjaXNlIHNob3VsZCBiZSBvYnRhaW5lZCBieSBtZWFucyBvZiB2YXJpb3VzIHB1cnN1aXRzLCBwYXJ0aWN1bGFybHkgcGxheS4gQnV0CgkJCQkJZXZlbiB0aGUgZ2FtZXMgbXVzdCBub3QgYmUgdW5maXQgZm9yIGZyZWVtZW4sIG5vciBsYWJvcmlvdXMsIG5vciB1bmRpc2NpcGxpbmVkLgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjE1LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbHNvIHRoZSBxdWVzdGlvbiBvZiB0aGUga2luZAoJCQkJCW9mIHRhbGVzIGFuZCBzdG9yaWVzIHRoYXQgc2hvdWxkIGJlIHRvbGQgdG8gY2hpbGRyZW4gb2YgdGhpcyBhZ2UgbXVzdCBiZQoJCQkJCWF0dGVuZGVkIHRvIGJ5IHRoZSBvZmZpY2lhbHMgY2FsbGVkIENoaWxkcmVuJ3MgVHV0b3JzLiBGb3IgYWxsIHN1Y2ggYW11c2VtZW50cwoJCQkJCXNob3VsZCBwcmVwYXJlIHRoZSB3YXkgZm9yIHRoZWlyIGxhdGVyIHB1cnN1aXRzOyBoZW5jZSBtb3N0IGNoaWxkcmVuJ3MgZ2FtZXMKCQkJCQlzaG91bGQgYmUgaW1pdGF0aW9ucyBvZiB0aGUgc2VyaW91cyBvY2N1cGF0aW9ucyBvZiBsYXRlciBsaWZlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjE1LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGUgbGVnaXNsYXRvcnMgaW4KCQkJCQkJdGhlPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TGF3czwvdGl0bGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIExhd3MgNzkyYSIgdmFsaWQ9InllcyI+UGxhdC4gTGF3cyA3OTJhPC9iaWJsPi4gUGxhdG8gbWVyZWx5IHNheXMgdGhhdCBhCgkJCQkJCWNoaWxkJ3MgY3J5aW5nIHNob3dzIGl0IHRvIGJlIGFubm95ZWQsIGFuZCB0aGF0IGl0IG91Z2h0IHRvIGhhdmUgYXMgbGl0dGxlCgkJCQkJCXBhaW4gYXMgcG9zc2libGUgb3IgZWxzZSBpdCB3aWxsIGdyb3cgdXAgbW9yb3NlLjwvbm90ZT4gZm9yYmlkIGFsbG93aW5nCgkJCQkJY2hpbGRyZW4gdG8gaGF2ZSBwYXJveHlzbXMgb2YgY3J5aW5nLCBidXQgdGhpcyBwcm9oaWJpdGlvbiBpcyBhIG1pc3Rha2U7IHZpb2xlbnQKCQkJCQljcnlpbmcgY29udHJpYnV0ZXMgdG8gZ3Jvd3RoLCBmb3IgaXQgc2VydmVzIGluIGEgd2F5IGFzIGV4ZXJjaXNlIGZvciB0aGUgYm9keSwKCQkJCQlzaW5jZSBob2xkaW5nIHRoZSBicmVhdGggaXMgdGhlIHN0cmVuZ3RoIGdpdmluZyBmYWN0b3IgaW4gaGFyZCBsYWJvciwgYW5kIHRoaXMKCQkJCQl0YWtlcyBwbGFjZSBhbHNvIHdpdGggY2hpbGRyZW4gd2hlbiB0aGV5IHN0cmV0Y2ggdGhlbXNlbHZlcyBpbiBjcnlpbmcuIFRoZQoJCQkJCVR1dG9ycyBtdXN0IHN1cGVydmlzZSB0aGUgY2hpbGRyZW4ncyBwYXN0aW1lcywgYW5kIGluIHBhcnRpY3VsYXIgbXVzdCBzZWUgdGhhdAoJCQkJCXRoZXkgYXNzb2NpYXRlIGFzIGxpdHRsZSBhcyBwb3NzaWJsZSB3aXRoIHNsYXZlcy4gRm9yIGNoaWxkcmVuIG9mIHRoaXMgYWdlLAoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBMYXdzIDc5MmEiIHZhbGlkPSJ5ZXMiPlBsYXQuIExhd3MgNzkyYTwvYmlibD4uIFBsYXRvIG1lcmVseSBzYXlzIHRoYXQgYQoJCQkJCQljaGlsZCdzIGNyeWluZyBzaG93cyBpdCB0byBiZSBhbm5veWVkLCBhbmQgdGhhdCBpdCBvdWdodCB0byBoYXZlIGFzIGxpdHRsZQoJCQkJCQlwYWluIGFzIHBvc3NpYmxlIG9yIGVsc2UgaXQgd2lsbCBncm93IHVwIG1vcm9zZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMzNmIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1336b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB1cCB0byBzZXZlbiB5ZWFycyBvbGQsIG11c3QgbmVjZXNzYXJpbHkgYmUgcmVhcmVkIGF0IGhvbWU7CgkJCQkJCTwvdHJhbnNsYXRpb24+"
translation['7.1336b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTUuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPnNvIGl0IGlzIHJlYXNvbmFibGUgdG8gc3VwcG9zZQoJCQkJCXRoYXQgZXZlbiBhdCB0aGlzIGFnZSB0aGV5IG1heSBhY3F1aXJlIGEgdGFpbnQgb2YgaWxsaWJlcmFsaXR5IGZyb20gd2hhdCB0aGV5CgkJCQkJaGVhciBhbmQgc2VlLiBUaGUgbGF3Z2l2ZXIgb3VnaHQgdGhlcmVmb3JlIHRvIGJhbmlzaCBpbmRlY2VudCB0YWxrLCBhcyBtdWNoIGFzCgkJCQkJYW55dGhpbmcgZWxzZSwgb3V0IG9mIHRoZSBzdGF0ZSBhbHRvZ2V0aGVyIO+8iGZvciBsaWdodCB0YWxrIGFib3V0CgkJCQkJYW55dGhpbmcgZGlzZ3JhY2VmdWwgc29vbiBwYXNzZXMgaW50byBhY3Rpb27vvInigJRzbyBtb3N0IG9mIGFsbAoJCQkJCWZyb20gYW1vbmcgdGhlIHlvdW5nLCBzbyB0aGF0IHRoZXkgbWF5IG5vdCBzYXkgbm9yIGhlYXIgYW55dGhpbmcgb2YgdGhlIHNvcnQ7CgkJCQkJYW5kIGFueWJvZHkgZm91bmQgc2F5aW5nIG9yIGRvaW5nIGFueSBvZiB0aGUgdGhpbmdzIHByb2hpYml0ZWQsIGlmIGhlIGlzIG9mIGZyZWUKCQkJCQlzdGF0aW9uIGJ1dCBub3QgeWV0IHByb21vdGVkIHRvIHJlY2xpbmluZyBhdCB0aGUgcHVibGljIG1lYWxzLCBtdXN0IGJlIHB1bmlzaGVkCgkJCQkJd2l0aCBtYXJrcyBvZiBkaXNob25vciBhbmQgd2l0aCBiZWF0aW5nLCBhbmQgYW4gb2xkZXIgb2ZmZW5kZXIgbXVzdCBiZSBwdW5pc2hlZAoJCQkJCXdpdGggbWFya3Mgb2YgZGlzaG9ub3IgZGVncmFkaW5nIHRvIGEgZnJlZSBtYW4sIGJlY2F1c2Ugb2YgaGlzIHNsYXZpc2ggYmVoYXZpb3IuCgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTUuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzaW5jZSB3ZSBiYW5pc2ggYW55IHRhbGsgb2YKCQkJCQl0aGlzIGtpbmQsIGNsZWFybHkgd2UgbXVzdCBhbHNvIGJhbmlzaCB0aGUgc2VlaW5nIG9mIGVpdGhlciBwaWN0dXJlcyBvcgoJCQkJCXJlcHJlc2VudGF0aW9ucyB0aGF0IGFyZSBpbmRlY2VudC4gVGhlIG9mZmljaWFscyBtdXN0IHRoZXJlZm9yZSBiZSBjYXJlZnVsIHRoYXQKCQkJCQl0aGVyZSBtYXkgYmUgbm8gc2N1bHB0dXJlIG9yIHBhaW50aW5nIHRoYXQgcmVwcmVzZW50cyBpbmRlY2VudCBhY3Rpb25zLCBleGNlcHQKCQkJCQlpbiB0aGUgdGVtcGxlcyBvZiBhIGNlcnRhaW4gY2xhc3Mgb2YgZ29kcyB0byB3aG9tIHRoZSBsYXcgYWxsb3dzIGV2ZW4KCQkJCQlzY3VycmlsaXR5OyBidXQgaW4gcmVnYXJkIHRvIHRoZXNlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBNUy4KCQkJCQkJdGV4dCBnaXZlcyDigJhhbmQgaW4gYWRkaXRpb24gdG8gdGhlc2XigJk7IGFuZCB0aGUgd29yZAoJCQkJCQnigJhzdGlsbOKAmSBtYXkgYmUgYW4gaW50ZXJwb2xhdGlvbi48L25vdGU+IHRoZSBsYXcgcGVybWl0cwoJCQkJCW1lbiBzdGlsbCBvZiBzdWl0YWJsZSBhZ2UgdG8gd29yc2hpcCB0aGUgZ29kcyBib3RoIG9uIHRoZWlyIG93biBiZWhhbGYgYW5kIG9uCgkJCQkJYmVoYWxmIG9mIHRoZSBjaGlsZHJlbiBhbmQgd29tZW4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1337a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTUuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB0aGUgeW91bmdlciBvbmVzIG11c3Qgbm90CgkJCQkJYmUgYWxsb3dlZCBpbiB0aGUgYXVkaWVuY2UgYXQgbGFtcG9vbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SWFtYmljCgkJCQkJCXZlcnNlcywgb2Z0ZW4gYWJ1c2l2ZSBhbmQgaW5kZWNlbnQsIHJlY2l0ZWQgYXQgZmVzdGl2YWxzIG9mIERpb255c3VzLjwvbm90ZT4KCQkJCQlhbmQgYXQgY29tZWR5LCBiZWZvcmUgdGhleSByZWFjaCB0aGUgYWdlIGF0IHdoaWNoIHRoZXkgd2lsbCBub3cgaGF2ZSB0aGUgcmlnaHQKCQkJCQl0byByZWNsaW5lIGF0IHRhYmxlIGluIGNvbXBhbnkgYW5kIHRvIGRyaW5rIGRlZXBseSwgYW5kIGF0IHdoaWNoIHRoZWlyIGVkdWNhdGlvbgoJCQkJCXdpbGwgcmVuZGVyIGFsbCBvZiB0aGVtIGltbXVuZSB0byB0aGUgaGFybWZ1bCBlZmZlY3RzIG9mIHN1Y2ggdGhpbmdzLiBGb3IgdGhlCgkJCQkJcHJlc2VudCB0aGVyZWZvcmUgd2UgaGF2ZSBtZXJlbHkgbWVudGlvbmVkIHRoZXNlIG1hdHRlcnMgaW4gcGFzc2luZywgYnV0IGxhdGVyCgkJCQkJd2UgbXVzdCBzdG9wIHRvIHNldHRsZSB0aGVtIG1vcmUgZGVmaW5pdGVseSwgZmlyc3QgZGlzY3Vzc2luZyBmdWxseSB3aGV0aGVyCgkJCQkJbGVnaXNsYXRpb24gcHJvaGliaXRpbmcgdGhlIGF0dGVuZGFuY2Ugb2YgdGhlIHlvdW5nIGlzIGRlc2lyYWJsZSBvciBub3QsIGFuZCBob3cKCQkJCQlzdWNoIHByb2hpYml0aW9uIHNob3VsZCBiZSBwdXQgaW4gZm9yY2U7IGJ1dCBvbiB0aGUgcHJlc2VudCBvY2Nhc2lvbiB3ZSBoYXZlCgkJCQkJdG91Y2hlZCBvbiB0aGUgcXVlc3Rpb24gb25seSBpbiB0aGUgbWFubmVyIG5lY2Vzc2FyeS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciBwZXJoYXBzIHRoZSB0cmFnaWMgYWN0b3IgVGhlb2RvcnVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgZ3JlYXQgQXRoZW5pYW4gcGVyZm9ybWVyIG9mIFNvcGhvY2xlczsgaGUKCQkJCQkJdG9vayB0aGUgcGFydCBvZiBBbnRpZ29uZS48L25vdGU+IHVzZWQgdG8gcHV0IHRoZSBtYXR0ZXIgbm90IGJhZGx5OiBoZSBoYWQKCQkJCQluZXZlciBvbmNlIGFsbG93ZWQgYW55Ym9keSB0byBwcm9kdWNlIGhpcyBwYXJ0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkxvb3NlbHkgcHV0IGZvciDigJh0byBhcHBlYXIgb24gdGhlCgkJCQkJCXN0YWdlLuKAmTwvbm90ZT4gYmVmb3JlIGhpbSwgbm90IGV2ZW4gb25lIG9mIHRoZSBwb29yIGFjdG9ycywgYXMgaGUKCQkJCQlzYWlkIHRoYXQgYXVkaWVuY2VzIGFyZSBhdHRyYWN0ZWQgYnkgd2hhdCB0aGV5IGhlYXIgZmlyc3Q7IGFuZCB0aGlzIGhhcHBlbnMKCQkJCQlhbGlrZSBpbiByZWdhcmQgdG8gb3VyIGRlYWxpbmdzIHdpdGggcGVvcGxlIGFuZCB0byBvdXIgZGVhbGluZ3Mgd2l0aAoJCQkJCXRoaW5nc+KAlGFsbCB0aGF0IGNvbWVzIGZpcnN0IHdlIGxpa2UgYmV0dGVyLiBPbiB0aGlzIGFjY291bnQgd2Ugb3VnaHQKCQkJCQl0byBtYWtlIGFsbCBiYXNlIHRoaW5ncyB1bmZhbWlsaWFyIHRvIHRoZSB5b3VuZywgYW5kIGVzcGVjaWFsbHkgdGhvc2UgdGhhdAoJCQkJCWludm9sdmUgZWl0aGVyIGRlcHJhdml0eSBvciBtYWxpZ25pdHkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCB3aGVuCgkJCQkJdGhlIGZpdmUgeWVhcnMgZnJvbSB0d28gdG8gc2V2ZW4gaGF2ZSBwYXNzZWQsIHRoZSBjaGlsZHJlbiBtdXN0IG5vdyBiZWNvbWUKCQkJCQlzcGVjdGF0b3JzIGF0IHRoZSBsZXNzb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gaW4gZ3ltbmFzdGljcwoJCQkJCQlhbmQgbXVzaWMuPC9ub3RlPiB3aGljaCB0aGV5IHdpbGwgdGhlbXNlbHZlcyBoYXZlIHRvIGxlYXJuLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjE1LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZXJlIGFyZSB0d28gYWdlcyBjb3JyZXNwb25kaW5nIHRvCgkJCQkJd2hpY2ggZWR1Y2F0aW9uIHNob3VsZCBiZSBkaXZpZGVk4oCUdGhlcmUgbXVzdCBiZSBhIGJyZWFrIGFmdGVyIHRoZQoJCQkJCXBlcmlvZCBmcm9tIHNldmVuIHRvIHB1YmVydHksIGFuZCBhZ2FpbiBhZnRlciB0aGF0IGZyb20gcHViZXJ0eSB0byB0d2VudHktb25lLgoJCQkJCUZvciB0aG9zZSB3aG8gZGl2aWRlIHRoZSBhZ2VzIGJ5IHBlcmlvZHMgb2Ygc2V2ZW4geWVhcnMgYXJlIGdlbmVyYWxseSBzcGVha2luZwoJCQkJCW5vdCB3cm9uZyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIE1TUy4gZ2l2ZSDigJhub3QKCQkJCQkJcmlnaHQu4oCZPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzM3YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['8.1337a.11'] = "PHRyYW5zbGF0aW9uPjxkaXYxIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOCIgb3JnPSJ1bmlmb3JtIiBzYW1wbGU9ImNvbXBsZXRlIiB0eXBlPSJCb29rIj4KCQkJCTxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMzdhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxMSIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Cb29rIDUgaW4gc29tZSBlZGl0aW9ucy48L25vdGU+Tm93CgkJCQkJbm9ib2R5IHdvdWxkIGRpc3B1dGUgdGhhdCB0aGUgZWR1Y2F0aW9uIG9mIHRoZSB5b3VuZyByZXF1aXJlcyB0aGUgc3BlY2lhbAoJCQkJCWF0dGVudGlvbiBvZiB0aGUgbGF3Z2l2ZXIuIEluZGVlZCB0aGUgbmVnbGVjdCBvZiB0aGlzIGluIHN0YXRlcyBpcyBpbmp1cmlvdXMgdG8KCQkJCQl0aGVpciBjb25zdGl0dXRpb25zOyBmb3IgZWR1Y2F0aW9uIG91Z2h0IHRvIGJlIGFkYXB0ZWQgdG8gdGhlIHBhcnRpY3VsYXIgZm9ybSBvZgoJCQkJCWNvbnN0aXR1dGlvbiwgc2luY2UgdGhlIHBhcnRpY3VsYXIgY2hhcmFjdGVyIGJlbG9uZ2luZyB0byBlYWNoIGNvbnN0aXR1dGlvbiBib3RoCgkJCQkJZ3VhcmRzIHRoZSBjb25zdGl0dXRpb24gZ2VuZXJhbGx5IGFuZCBvcmlnaW5hbGx5IGVzdGFibGlzaGVzIGl04oCUZm9yCgkJCQkJaW5zdGFuY2UgdGhlIGRlbW9jcmF0aWMgc3Bpcml0IHByb21vdGVzIGRlbW9jcmFjeSBhbmQgdGhlIG9saWdhcmNoaWMgc3Bpcml0CgkJCQkJb2xpZ2FyY2h5OyBhbmQgdGhlIGJlc3Qgc3Bpcml0IGFsd2F5cyBjYXVzZXMgYSBiZXR0ZXIgY29uc3RpdHV0aW9uLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Nb3Jlb3ZlciBpbiByZWdhcmQgdG8gYWxsIHRoZSBmYWN1bHRpZXMgYW5kCgkJCQkJY3JhZnRzIGNlcnRhaW4gZm9ybXMgb2YgcHJlbGltaW5hcnkgZWR1Y2F0aW9uPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgdHJhaW5pbmcgaW4gdGhlaXIgdmFyaW91cyBvcGVyYXRpb25zIGFyZSBuZWNlc3NhcnlzIG8gdGhhdAoJCQkJCW1hbmlmZXN0bHkgdGhpcyBpcyBhbHNvIHJlcXVpc2l0ZSBpbiByZWdhcmQgdG8gdGhlIGFjdGlvbnMgb2YgdmlydHVlLiBBbmQKCQkJCQlpbmFzbXVjaCBhcyB0aGUgZW5kIGZvciB0aGUgd2hvbGUgc3RhdGUgaXMgb25lLCBpdCBpcyBtYW5pZmVzdCB0aGF0IGVkdWNhdGlvbgoJCQkJCWFsc28gbXVzdCBuZWNlc3NhcmlseSBiZSBvbmUgYW5kIHRoZSBzYW1lIGZvciBhbGwgYW5kIHRoYXQgdGhlIHN1cGVyaW50ZW5kZW5jZQoJCQkJCW9mIHRoaXMgbXVzdCBiZSBwdWJsaWMsIGFuZCBub3Qgb24gcHJpdmF0ZSBsaW5lcywgaW4gdGhlIHdheSBpbiB3aGljaCBhdCBwcmVzZW50CgkJCQkJZWFjaCBtYW4gc3VwZXJpbnRlbmRzIHRoZSBlZHVjYXRpb24gb2YgaGlzIG93biBjaGlsZHJlbiwgdGVhY2hpbmcgdGhlbQoJCQkJCXByaXZhdGVseSwgYW5kIHdoYXRldmVyIHNwZWNpYWwgYnJhbmNoIG9mIGtub3dsZWRnZSBoZSB0aGlua3MgZml0LiBCdXQgbWF0dGVycwoJCQkJCW9mIHB1YmxpYyBpbnRlcmVzdCBvdWdodCB0byBiZSB1bmRlciBwdWJsaWMgc3VwZXJ2aXNpb247IGF0IHRoZSBzYW1lIHRpbWUgd2UKCQkJCQlvdWdodCBub3QgdG8gdGhpbmsgdGhhdCBhbnkgb2YgdGhlIGNpdGl6ZW5zIGJlbG9uZ3MgdG8gaGltc2VsZiwgYnV0IHRoYXQgYWxsCgkJCQkJYmVsb25nIHRvIHRoZSBzdGF0ZSwgZm9yIGVhY2ggaXMgYSBwYXJ0IG9mIHRoZSBzdGF0ZSwgYW5kIGl0IGlzIG5hdHVyYWwgZm9yIHRoZQoJCQkJCXN1cGVyaW50ZW5kZW5jZSBvZiB0aGUgc2V2ZXJhbCBwYXJ0cyB0byBoYXZlIHJlZ2FyZCB0byB0aGUgc3VwZXJpbnRlbmRlbmNlIG9mCgkJCQkJdGhlIHdob2xlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgb25lIG1pZ2h0IHByYWlzZSB0aGUKCQkJCQlTcGFydGFucyBpbiByZXNwZWN0IG9mIHRoaXMsIGZvciB0aGV5IHBheSB0aGUgZ3JlYXRlc3QgYXR0ZW50aW9uIHRvIHRoZSB0cmFpbmluZwoJCQkJCW9mIHRoZWlyIGNoaWxkcmVuLCBhbmQgY29uZHVjdCBpdCBvbiBhIHB1YmxpYyBzeXN0ZW0uPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyBjbGVhciB0aGVuIHRoYXQgdGhlcmUgc2hvdWxkIGJlIGxlZ2lzbGF0aW9uIGFib3V0CgkJCQkJZWR1Y2F0aW9uIGFuZCB0aGF0IGl0IHNob3VsZCBiZSBjb25kdWN0ZWQgb24gYSBwdWJsaWMgc3lzdGVtLiBCdXQgY29uc2lkZXJhdGlvbgoJCQkJCW11c3QgYmUgZ2l2ZW4gdG8gdGhlIHF1ZXN0aW9uLCB3aGF0IGNvbnN0aXR1dGVzIGVkdWNhdGlvbiBhbmQgd2hhdCBpcyB0aGUgcHJvcGVyCgkJCQkJd2F5IHRvIGJlIGVkdWNhdGVkLiBBdCBwcmVzZW50IHRoZXJlIGFyZSBkaWZmZXJlbmNlcyBvZiBvcGluaW9uIGFzIHRvIHRoZSBwcm9wZXIKCQkJCQl0YXNrcyB0byBiZSBzZXQ7IGZvciBhbGwgcGVvcGxlcyBkbyBub3QgYWdyZWUgYXMgdG8gdGhlIHRoaW5ncyB0aGF0IHRoZSB5b3VuZwoJCQkJCW91Z2h0IHRvIGxlYXJuLCBlaXRoZXIgd2l0aCBhIHZpZXcgdG8gdmlydHVlIG9yIHdpdGggYSB2aWV3IHRvIHRoZSBiZXN0IGxpZmUsCgkJCQkJbm9yIGlzIGl0IGNsZWFyIHdoZXRoZXIgdGhlaXIgc3R1ZGllcyBzaG91bGQgYmUgcmVndWxhdGVkIG1vcmUgd2l0aCByZWdhcmQgdG8KCQkJCQlpbnRlbGxlY3Qgb3Igd2l0aCByZWdhcmQgdG8gY2hhcmFjdGVyLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgY29uZnVzaW5nIHF1ZXN0aW9ucyBhcmlzZSBvdXQgb2YgdGhlIGVkdWNhdGlvbiB0aGF0CgkJCQkJYWN0dWFsbHkgcHJldmFpbHMsIGFuZCBpdCBpcyBub3QgYXQgYWxsIGNsZWFyIHdoZXRoZXIgdGhlIHB1cGlscyBzaG91bGQgcHJhY3Rpc2UKCQkJCQlwdXJzdWl0cyB0aGF0IGFyZSBwcmFjdGljYWxseSBtb3JhbGx5IGVkaWZ5aW5nLCBvciBoaWdoZXIKCQkJCQlhY2NvbXBsaXNobWVudHPigJRmb3IgYWxsIHRoZXNlIHZpZXdzIGhhdmUgd29uIHRoZSBzdXBwb3J0IG9mIHNvbWUKCQkJCQlqdWRnZXM7IDxtaWxlc3RvbmUgbj0iMTMzN2IiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBub3RoaW5nIGlzIGFncmVlZCBhcyByZWdhcmRzIHRoZSBleGVyY2lzZSBjb25kdWNpdmUgdG8KCQkJCQl2aXJ0dWUsIGZvciwgdG8gc3RhcnQgd2l0aCwgYWxsIG1lbiBkbyBub3QgaG9ub3IgdGhlIHNhbWUgdmlydHVlLCBzbyB0aGF0IHRoZXkKCQkJCQluYXR1cmFsbHkgaG9sZCBkaWZmZXJlbnQgb3BpbmlvbnMgaW4gcmVnYXJkIHRvIHRyYWluaW5nIGluIHZpcnR1ZS48bWlsZXN0b25lIGVkPSJQIiBuPSIyLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGlzCgkJCQkJdGhlcmVmb3JlIG5vdCBkaWZmaWN1bHQgdG8gc2VlIHRoYXQgdGhlIHlvdW5nIG11c3QgYmUgdGF1Z2h0IHRob3NlIHVzZWZ1bCBhcnRzCgkJCQkJdGhhdCBhcmUgaW5kaXNwZW5zYWJseSBuZWNlc3Nhcnk7IGJ1dCBpdCBpcyBjbGVhciB0aGF0IHRoZXkgc2hvdWxkIG5vdCBiZSB0YXVnaHQKCQkJCQlhbGwgdGhlIHVzZWZ1bCBhcnRzLCB0aG9zZSBwdXJzdWl0cyB0aGF0IGFyZSBsaWJlcmFsIGJlaW5nIGtlcHQgZGlzdGluY3QgZnJvbQoJCQkJCXRob3NlIHRoYXQgYXJlIGlsbGliZXJhbCwgYW5kIHRoYXQgdGhleSBtdXN0IHBhcnRpY2lwYXRlIGluIHN1Y2ggYW1vbmcgdGhlCgkJCQkJdXNlZnVsIGFydHMgYXMgd2lsbCBub3QgcmVuZGVyIHRoZSBwZXJzb24gd2hvIHBhcnRpY2lwYXRlcyBpbiB0aGVtIHZ1bGdhci4gQQoJCQkJCXRhc2sgYW5kIGFsc28gYW4gYXJ0IG9yIGEgc2NpZW5jZSBtdXN0IGJlIGRlZW1lZCB2dWxnYXIgaWYgaXQgcmVuZGVycyB0aGUgYm9keQoJCQkJCW9yIHNvdWwgb3IgbWluZCBvZiBmcmVlIG1lbiB1c2VsZXNzIGZvciB0aGUgZW1wbG95bWVudHMgYW5kIGFjdGlvbnMgb2YgdmlydHVlLgoJCQkJCUhlbmNlIHdlIGVudGl0bGUgdnVsZ2FyIGFsbCBzdWNoIGFydHMgYXMgZGV0ZXJpb3JhdGUgdGhlIGNvbmRpdGlvbiBvZiB0aGUgYm9keSwKCQkJCQlhbmQgYWxzbyB0aGUgaW5kdXN0cmllcyB0aGF0IGVhcm4gd2FnZXM7IGZvciB0aGV5IG1ha2UgdGhlIG1pbmQgcHJlb2NjdXBpZWQgYW5kCgkJCQkJZGVncmFkZWQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBldmVuIHdpdGggdGhlIGxpYmVyYWwKCQkJCQlzY2llbmNlcywgYWx0aG91Z2ggaXQgaXMgbm90IGlsbGliZXJhbCB0byB0YWtlIHBhcnQgaW4gc29tZSBvZiB0aGVtIHVwIHRvIGEKCQkJCQlwb2ludCwgdG8gZGV2b3RlIG9uZXNlbGYgdG8gdGhlbSB0b28gYXNzaWR1b3VzbHkgYW5kIGNhcmVmdWxseSBpcyBsaWFibGUgdG8gaGF2ZQoJCQkJCXRoZSBpbmp1cmlvdXMgcmVzdWx0cyBzcGVjaWZpZWQuIEFsc28gaXQgbWFrZXMgbXVjaCBkaWZmZXJlbmNlIHdoYXQgb2JqZWN0IG9uZQoJCQkJCWhhcyBpbiB2aWV3IGluIGEgcHVyc3VpdCBvciBzdHVkeTsgaWYgb25lIGZvbGxvd3MgaXQgZm9yIHRoZSBzYWtlIG9mIG9uZXNlbGYgb3IKCQkJCQlvbmUncyBmcmllbmRzLCBvciBvbiBtb3JhbCBncm91bmRzLCBpdCBpcyBub3QgaWxsaWJlcmFsLDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YnV0IHRoZSBtYW4gd2hvIGZvbGxvd3MgdGhlIHNhbWUgcHVyc3VpdCBiZWNhdXNlIG9mCgkJCQkJb3RoZXIgcGVvcGxlIHdvdWxkIG9mdGVuIGFwcGVhciB0byBiZSBhY3RpbmcgaW4gYSBtZW5pYWwgYW5kIHNlcnZpbGUKCQkJCQkJbWFubmVyLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGJyYW5jaGVzIG9mIHN0dWR5IGF0IHByZXNlbnQKCQkJCQllc3RhYmxpc2hlZCBmYWxsIGludG8gYm90aCBjbGFzc2VzLCBhcyB3YXMgc2FpZCBiZWZvcmUuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4xLjQuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXJlIGFyZSBwZXJoYXBzIGZvdXIgY3VzdG9tYXJ5CgkJCQkJc3ViamVjdHMgb2YgZWR1Y2F0aW9uLCByZWFkaW5nIGFuZCB3cml0aW5nLCBneW1uYXN0aWNzLCBtdXNpYywgYW5kIGZvdXJ0aCwgd2l0aAoJCQkJCXNvbWUgcGVvcGxlLCBkcmF3aW5nOyByZWFkaW5nIGFuZCB3cml0aW5nIGFuZCBkcmF3aW5nIGJlaW5nIHRhdWdodCBhcyBiZWluZwoJCQkJCXVzZWZ1bCBmb3IgdGhlIHB1cnBvc2VzIG9mIGxpZmUgYW5kIHZlcnkgc2VydmljZWFibGUsIGFuZCBneW1uYXN0aWNzIGFzCgkJCQkJY29udHJpYnV0aW5nIHRvIG1hbmx5IGNvdXJhZ2U7IGJ1dCBhcyB0byBtdXNpYywgaGVyZSBvbmUgbWlnaHQgcmFpc2UgYSBxdWVzdGlvbi4KCQkJCQlGb3IgYXQgcHJlc2VudCBtb3N0IHBlb3BsZSB0YWtlIHBhcnQgaW4gaXQgZm9yIHRoZSBzYWtlIG9mIHBsZWFzdXJlOyBidXQgdGhvc2UsCgkJCQkJd2hvIG9yaWdpbmFsbHkgaW5jbHVkZWQgaXQgaW4gZWR1Y2F0aW9uIGRpZCBzbyBiZWNhdXNlLCBhcyBoYXMgb2Z0ZW4gYmVlbiBzYWlkLAoJCQkJCW5hdHVyZSBpdHNlbGYgc2Vla3MgdG8gYmUgYWJsZSBub3Qgb25seSB0byBlbmdhZ2UgcmlnaHRseSBpbiBidXNpbmVzcyBidXQgYWxzbwoJCQkJCXRvIG9jY3VweSBsZWlzdXJlIG5vYmx5OyBmb3LigJR0byBzcGVhayBhYm91dCBpdCB5ZXQgYWdhaW48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiBCb29rIDcsIDEzMzRhIDItMTAuPC9ub3RlPuKAlHRoaXMKCQkJCQlpcyB0aGUgZmlyc3QgcHJpbmNpcGxlIG9mIGFsbCB0aGluZ3MuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciBpZiBhbHRob3VnaCBib3RoIGJ1c2luZXNzIGFuZCBsZWlzdXJlIGFyZSBuZWNlc3NhcnksIHlldCBsZWlzdXJlIGlzIG1vcmUKCQkJCQlkZXNpcmFibGUgYW5kIG1vcmUgZnVsbHkgYW4gZW5kIHRoYW4gYnVzaW5lc3MsIHdlIG11c3QgaW5xdWlyZSB3aGF0IGlzIHRoZQoJCQkJCXByb3BlciBvY2N1cGF0aW9uIG9mIGxlaXN1cmUuIEZvciBhc3N1cmVkbHkgaXQgc2hvdWxkIG5vdCBiZSBlbXBsb3llZCBpbiBwbGF5LAoJCQkJCXNpbmNlIGl0IHdvdWxkIGZvbGxvdyB0aGF0IHBsYXkgaXMgb3VyIGVuZCBpbiBsaWZlLiBCdXQgaWYgdGhpcyBpcyBpbXBvc3NpYmxlLAoJCQkJCWFuZCBzcG9ydHMgc2hvdWxkIHJhdGhlciBiZSBlbXBsb3llZCBpbiBvdXIgdGltZXMgb2YgYnVzaW5lc3Mg77yIZm9yIGEKCQkJCQltYW4gd2hvIGlzIGF0IHdvcmsgbmVlZHMgcmVzdCwgYW5kIHJlc3QgaXMgdGhlIG9iamVjdCBvZiBwbGF5LCB3aGlsZSBidXNpbmVzcyBpcwoJCQkJCWFjY29tcGFuaWVkIGJ5IHRvaWwgYW5kIGV4ZXJ0aW9u77yJLCBpdCBmb2xsb3dzIHRoYXQgaW4gaW50cm9kdWNpbmcKCQkJCQlzcG9ydHMgd2UgbXVzdCB3YXRjaCB0aGUgcmlnaHQgb3Bwb3J0dW5pdHkgZm9yIHRoZWlyIGVtcGxveW1lbnQsIHNpbmNlIHdlIGFyZQoJCQkJCWFwcGx5aW5nIHRoZW0gdG8gc2VydmUgYXMgbWVkaWNpbmU7IGZvciB0aGUgYWN0aXZpdHkgb2YgcGxheSBpcyBhIHJlbGF4YXRpb24gb2YKCQkJCQl0aGUgc291bCwgYW5kIHNlcnZlcyBhcyByZWNyZWF0aW9uIGJlY2F1c2Ugb2YgaXRzIHBsZWFzYW50bmVzcy4gPG1pbGVzdG9uZSBuPSIxMzM4YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGxlaXN1cmUgc2VlbXMgaXRzZWxmIHRvCgkJCQkJY29udGFpbiBwbGVhc3VyZSBhbmQgaGFwcGluZXNzIGFuZCBmZWxpY2l0eSBvZiBsaWZlLiBBbmQgdGhpcyBpcyBub3QgcG9zc2Vzc2VkCgkJCQkJYnkgdGhlIGJ1c3kgYnV0IGJ5IHRoZSBsZWlzdXJlZDsgZm9yIHRoZSBidXN5IG1hbiBidXNpZXMgaGltc2VsZiBmb3IgdGhlIHNha2Ugb2YKCQkJCQlzb21lIGVuZCBhcyBub3QgYmVpbmcgaW4gaGlzIHBvc3Nlc3Npb24sIGJ1dCBoYXBwaW5lc3MgaXMgYW4gZW5kIGFjaGlldmVkLCB3aGljaAoJCQkJCWFsbCBtZW4gdGhpbmsgaXMgYWNjb21wYW5pZWQgYnkgcGxlYXN1cmUgYW5kIG5vdCBieSBwYWluLiBCdXQgYWxsIG1lbiBkbyBub3QgZ28KCQkJCQlvbiB0byBkZWZpbmUgdGhpcyBwbGVhc3VyZSBpbiB0aGUgc2FtZSB3YXksIGJ1dCBhY2NvcmRpbmcgdG8gdGhlaXIgdmFyaW91cwoJCQkJCW5hdHVyZXMgYW5kIHRvIHRoZWlyIG93biBjaGFyYWN0ZXJzLCBhbmQgdGhlIHBsZWFzdXJlIHdpdGggd2hpY2ggdGhlIGJlc3QgbWFuCgkJCQkJdGhpbmtzIHRoYXQgaGFwcGluZXNzIGlzIGNvbmpvaW5lZCBpcyB0aGUgYmVzdCBwbGVhc3VyZSBhbmQgdGhlIG9uZSBhcmlzaW5nIGZyb20KCQkJCQl0aGUgbm9ibGVzdCBzb3VyY2VzLiBTbyB0aGF0IGl0IGlzIGNsZWFyIHRoYXQgc29tZSBzdWJqZWN0cyBtdXN0IGJlIGxlYXJudCBhbmQKCQkJCQlhY3F1aXJlZCBtZXJlbHkgd2l0aCBhIHZpZXcgdG8gdGhlIHBsZWFzdXJlIGluIHRoZWlyIHB1cnN1aXQsIGFuZCB0aGF0IHRoZXNlCgkJCQkJc3R1ZGllcyBhbmQgdGhlc2UgYnJhbmNoZXMgb2YgbGVhcm5pbmcgYXJlIGVuZHMgaW4gdGhlbXNlbHZlcywgd2hpbGUgdGhlIGZvcm1zCgkJCQkJb2YgbGVhcm5pbmcgcmVsYXRlZCB0byBidXNpbmVzcyBhcmUgc3R1ZGllZCBhcyBuZWNlc3NhcnkgYW5kIGFzIG1lYW5zIHRvIG90aGVyCgkJCQkJdGhpbmdzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5IZW5jZSBvdXIgcHJlZGVjZXNzb3JzCgkJCQkJaW5jbHVkZWQgbXVzaWMgaW4gZWR1Y2F0aW9uIG5vdCBhcyBhIG5lY2Vzc2l0eSDvvIhmb3IgdGhlcmUgaXMgbm90aGluZwoJCQkJCW5lY2Vzc2FyeSBhYm91dCBpdO+8iSwgbm9yIGFzIHVzZWZ1bCDvvIhpbiB0aGUgd2F5IGluIHdoaWNoCgkJCQkJcmVhZGluZyBhbmQgd3JpdGluZyBhcmUgdXNlZnVsIGZvciBidXNpbmVzcyBhbmQgZm9yIGhvdXNlaG9sZCBtYW5hZ2VtZW50IGFuZCBmb3IKCQkJCQlhY3F1aXJpbmcgbGVhcm5pbmcgYW5kIGZvciBtYW55IHB1cnN1aXRzIG9mIGNpdmlsIGxpZmUsIHdoaWxlIGRyYXdpbmcgYWxzbyBzZWVtcwoJCQkJCXRvIGJlIHVzZWZ1bCBpbiBtYWtpbmcgdXMgYmV0dGVyIGp1ZGdlcyBvZiB0aGUgd29ya3Mgb2YgYXJ0aXN0c++8iSwgbm9yCgkJCQkJeWV0IGFnYWluIGFzIHdlIHB1cnN1ZSBneW1uYXN0aWNzLDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+Zm9yCgkJCQkJdGhlIHNha2Ugb2YgaGVhbHRoIGFuZCBzdHJlbmd0aCDvvIhmb3Igd2UgZG8gbm90IHNlZSBlaXRoZXIgb2YgdGhlc2UKCQkJCQl0aGluZ3MgcHJvZHVjZWQgYXMgYSByZXN1bHQgb2YgbXVzaWPvvIk7IGl0IHJlbWFpbnMgdGhlcmVmb3JlIHRoYXQgaXQgaXMKCQkJCQl1c2VmdWwgYXMgYSBwYXN0aW1lIGluIGxlaXN1cmUsIHdoaWNoIGlzIGV2aWRlbnRseSB0aGUgcHVycG9zZSBmb3Igd2hpY2ggcGVvcGxlCgkJCQkJYWN0dWFsbHkgaW50cm9kdWNlIGl0LCBmb3IgdGhleSByYW5rIGl0IGFzIGEgZm9ybSBvZiBwYXN0aW1lIHRoYXQgdGhleSB0aGluawoJCQkJCXByb3BlciBmb3IgZnJlZSBtZW4uIEZvciB0aGlzIHJlYXNvbiBIb21lciB3cm90ZSB0aHVzOiA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9ImRhY3R5bGljIj5CdXQgaGltIGFsb25lPC9sPgoJCQkJCQk8bD4nVGlzIG1lZXQgdG8gc3VtbW9uIHRvIHRoZSBmZXN0YWwgYmFucXVldDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBsaW5lIGlzIG5vdCBpbiBvdXIgPHRpdGxlPk9keXNzZXk8L3RpdGxlPiwgYnV0CgkJCQkJCQkJYXBwYXJlbnRseSBmb2xsb3dlZCA8YmlibCBkZWZhdWx0PSJOTyIgbj0iSG9tLiBPZC4gMTcuMzgzIiB2YWxpZD0ieWVzIj5Ib20uIE9kLjE3LjM4MzwvYmlibD4uCgkJCQkJCQkJVGhlIHBhc3NhZ2UgcnVucyDvvIgzODIgZmYu77yJOiA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQkJCQk8bCBtZXQ9ImRhY3R5bGljIj4KCQkJCQkJCQkJCTxmb3JlaWduIGxhbmc9ImdyZWVrIj7PhOG9t8+CIM6z4b2wz4EgzrThvbQgzr7OteG/ls69zr/OvSDOus6xzrvOteG/liDhvITOu867zr/OuM61zr0KCQkJCQkJCQkJCQnOseG9kM+E4b24z4Ig4byQz4DOtc67zrjhvbzOvTwvZm9yZWlnbj4KCQkJCQkJCQkJPC9sPgoJCQkJCQkJCQk8bD4KCQkJCQkJCQkJCTxmb3JlaWduIGxhbmc9ImdyZWVrIj7hvITOu867zr/OvSDOs+KAmSwgzrXhvLAgzrzhvbQgz4Thv7bOvSDOv+G8swoJCQkJCQkJCQkJCc60zrfOvM65zr/Otc+BzrPOv+G9tiDhvJTOsc+DzrksPC9mb3JlaWduPgoJCQkJCQkJCQk8L2w+CgkJCQkJCQkJCTxsPgoJCQkJCQkJCQkJPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs684b2xzr3PhM65zr0g4byiIOG8sM63z4Thv4bPgc6xIM66zrHOuuG/ts69IOG8ogoJCQkJCQkJCQkJCc+E4b2zzrrPhM6/zr3OsSDOtM6/4b27z4HPic69LDwvZm9yZWlnbj4KCQkJCQkJCQkJPC9sPgoJCQkJCQkJCQk8bD4KCQkJCQkJCQkJCTxmb3JlaWduIGxhbmc9ImdyZWVrIj7hvKIgzrrOseG9tiDOuOG9s8+Dz4DOuc69IOG8gM6/zrnOtOG9uc69LCDhvYUgzrrOtc69CgkJCQkJCQkJCQkJz4ThvbPPgc+A4b+Dz4POuc69IOG8gM614b23zrTPic69OzwvZm9yZWlnbj4KCQkJCQkJCQkJPC9sPgoJCQkJCQkJCTwvcXVvdGU+PC9ub3RlPjs8L2w+CgkJCQkJPC9xdW90ZT4gYW5kIGFmdGVyIHRoZXNlIHdvcmRzIGhlIHNwZWFrcyBvZiBjZXJ0YWluIG90aGVycyA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9ImRhY3R5bGljIj5XaG8gY2FsbCB0aGUgYmFyZCB0aGF0IGhlIG1heSBnbGFkZGVuIGFsbC48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBmb3VydGggbGluZSBxdW90ZWQgY29ycmVzcG9uZHMgdG8KCQkJCQkJCQl0aGlzLCBidXQgbm90IGV4YWN0bHkuPC9ub3RlPjwvbD4KCQkJCQk8L3F1b3RlPiBBbmQgYWxzbyBpbiBvdGhlciB2ZXJzZXMgT2R5c3NldXMgc2F5cyB0aGF0IHRoaXMgaXMgdGhlIGJlc3QgcGFzdGltZSwKCQkJCQl3aGVuLCBhcyBtZW4gYXJlIGVuam95aW5nIGdvb2QgY2hlZXIsIDxxdW90ZSB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIG1ldD0iZGFjdHlsaWMiPlRoZSBiYW5xdWV0ZXJzLCBzZWF0ZWQgaW4gb3JkZXIgZHVlPC9sPgoJCQkJCQk8bD5UaHJvdWdob3V0IHRoZSBoYWxsLCBtYXkgaGVhciBhIG1pbnN0cmVsIHNpbmcuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iSG9tLiBPZC4gOS41IiB2YWxpZD0ieWVzIj5Ib20uIE9kLgoJCQkJCQkJOS41LTY8L2JpYmw+Ljwvbm90ZT48L2w+CgkJCQkJPC9xdW90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGlzCgkJCQkJY2xlYXIgdGhlcmVmb3JlIHRoYXQgdGhlcmUgaXMgYSBmb3JtIG9mIGVkdWNhdGlvbiBpbiB3aGljaCBib3lzIHNob3VsZCBiZQoJCQkJCXRyYWluZWQgbm90IGJlY2F1c2UgaXQgaXMgdXNlZnVsIG9yIG5lY2Vzc2FyeSBidXQgYXMgYmVpbmcgbGliZXJhbCBhbmQgbm9ibGU7CgkJCQkJdGhvdWdoIHdoZXRoZXIgdGhlcmUgaXMgb25lIHN1Y2ggc3ViamVjdCBvZiBlZHVjYXRpb24gb3Igc2V2ZXJhbCwgYW5kIHdoYXQgdGhlc2UKCQkJCQlhcmUgYW5kIGhvdyB0aGV5IGFyZSB0byBiZSBwdXJzdWVkLCBtdXN0IGJlIGRpc2N1c3NlZCBsYXRlciw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgcHJvbWlzZSBpcyBub3QgZnVsZmlsbGVkLjwvbm90ZT4gYnV0IGFzIGl0IGlzIHdlIGhhdmUKCQkJCQltYWRlIHRoaXMgbXVjaCBwcm9ncmVzcyBvbiB0aGUgd2F5LCB0aGF0IHdlIGhhdmUgc29tZSB0ZXN0aW1vbnkgZXZlbiBmcm9tIHRoZQoJCQkJCWFuY2llbnRzLCBkZXJpdmVkIGZyb20gdGhlIGNvdXJzZXMgb2YgZWR1Y2F0aW9uIHdoaWNoIHRoZXkgZm91bmRlZOKAlGZvcgoJCQkJCXRoZSBwb2ludCBpcyBwcm92ZWQgYnkgbXVzaWMuIEFuZCBpdCBpcyBhbHNvIGNsZWFyIHRoYXQgc29tZSBvZiB0aGUgdXNlZnVsCgkJCQkJc3ViamVjdHMgYXMgd2VsbCBvdWdodCB0byBiZSBzdHVkaWVkIGJ5IHRoZSB5b3VuZyBub3Qgb25seSBiZWNhdXNlIG9mIHRoZWlyCgkJCQkJdXRpbGl0eSwgbGlrZSB0aGUgc3R1ZHkgb2YgcmVhZGluZyBhbmQgd3JpdGluZywgYnV0IGFsc28gYmVjYXVzZSB0aGV5IG1heSBsZWFkCgkJCQkJb24gdG8gbWFueSBvdGhlciBicmFuY2hlcyBvZiBrbm93bGVkZ2U7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBzaW1pbGFybHkgdGhleSBzaG91bGQgc3R1ZHkgZHJhd2luZyBub3QgaW4gb3JkZXIgdGhhdAoJCQkJCXRoZXkgbWF5IG5vdCBnbyB3cm9uZyBpbiB0aGVpciBwcml2YXRlIHB1cmNoYXNlcyBhbmQgbWF5IGF2b2lkIGJlaW5nIGNoZWF0ZWQgaW4KCQkJCQlidXlpbmcgYW5kIHNlbGxpbmcgZnVybml0dXJlLCA8bWlsZXN0b25lIG49IjEzMzhiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5idXQgcmF0aGVyIGJlY2F1c2UgdGhpcyBzdHVkeSBtYWtlcyBhIG1hbgoJCQkJCW9ic2VydmFudCBvZiBib2RpbHkgYmVhdXR5OyBhbmQgdG8gc2VlayBmb3IgdXRpbGl0eSBldmVyeXdoZXJlIGlzIGVudGlyZWx5CgkJCQkJdW5zdWl0ZWQgdG8gbWVuIHRoYXQgYXJlIGdyZWF0LXNvdWxlZCBhbmQgZnJlZS4gQW5kIHNpbmNlIGl0IGlzIHBsYWluIHRoYXQKCQkJCQllZHVjYXRpb24gYnkgaGFiaXQgbXVzdCBjb21lIGJlZm9yZSBlZHVjYXRpb24gYnkgcmVhc29uLCBhbmQgdHJhaW5pbmcgb2YgdGhlCgkJCQkJYm9keSBiZWZvcmUgdHJhaW5pbmcgb2YgdGhlIG1pbmQsIGl0IGlzIGNsZWFyIGZyb20gdGhlc2UgY29uc2lkZXJhdGlvbnMgdGhhdCB0aGUKCQkJCQlib3lzIG11c3QgYmUgaGFuZGVkIG92ZXIgdG8gdGhlIGNhcmUgb2YgdGhlIHdyZXN0bGluZy1tYXN0ZXIgYW5kIHRoZSB0cmFpbmVyOwoJCQkJCWZvciB0aGUgbGF0dGVyIGltcGFydHMgYSBjZXJ0YWluIHF1YWxpdHkgdG8gdGhlIGhhYml0IG9mIHRoZSBib2R5IGFuZCB0aGUgZm9ybWVyCgkJCQkJdG8gaXRzIGFjdGlvbnMuPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgYXQgdGhlIHByZXNlbnQgdGltZSBzb21lIG9mIHRoZSBzdGF0ZXMgcmVwdXRlZCB0byBwYXkgdGhlCgkJCQkJZ3JlYXRlc3QgYXR0ZW50aW9uIHRvIGNoaWxkcmVuIHByb2R1Y2UgaW4gdGhlbSBhbiBhdGhsZXRpYyBoYWJpdDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBwcmVtYXR1cmUgYW5kIGRpc3Byb3BvcnRpb25hdGUgbXVzY3VsYXIKCQkJCQkJZGV2ZWxvcG1lbnQsIGRpcmVjdGVkIHRvIHNvbWUgcGFydGljdWxhciBjb21wZXRpdGlvbi4gQ2YuIDEyODhiIDEyCgkJCQkJCWZmLjwvbm90ZT4gdG8gdGhlIGRldHJpbWVudCBvZiB0aGVpciBib2RpbHkgZm9ybSBhbmQgZ3Jvd3RoLCB3aGlsZSB0aGUKCQkJCQlTcGFydGFucyBhbHRob3VnaCB0aGV5IGhhdmUgYXZvaWRlZCB0aGlzIGVycm9yIHlldCBtYWtlIHRoZWlyIGJveXMgYW5pbWFsIGluCgkJCQkJbmF0dXJlIGJ5IHRoZWlyIGxhYm9yaW91cyBleGVyY2lzZXMsIGluIHRoZSBiZWxpZWYgdGhhdCB0aGlzIGlzIG1vc3QKCQkJCQljb250cmlidXRvcnkgdG8gbWFubHkgY291cmFnZS4gWWV0LCBhcyBoYXMgb2Z0ZW4gYmVlbiBzYWlkLCBpdCBpcyBub3QgcmlnaHQgdG8KCQkJCQlyZWd1bGF0ZSBlZHVjYXRpb24gd2l0aCBhIHZpZXcgdG8gb25lIHZpcnR1ZSBvbmx5LCBvciB0byB0aGlzIG9uZSBtb3N0IG9mIGFsbDsKCQkJCQlpbmRlZWQgdGhleSBkbyBub3QgZXZlbiBpbnZlc3RpZ2F0ZSB0aGUgcXVlc3Rpb24gd2hldGhlciB0aGlzIHZpcnR1ZSBpcyB0byBiZQoJCQkJCWhhZCBpbiB2aWV3IGF0IGFsbC4gRm9yIG5laXRoZXIgaW4gdGhlIGxvd2VyIGFuaW1hbHMgbm9yIGluIHRoZSBjYXNlIG9mIGZvcmVpZ24KCQkJCQlyYWNlcyBkbyB3ZSBzZWUgdGhhdCBjb3VyYWdlIGdvZXMgd2l0aCB0aGUgd2lsZGVzdCwgYnV0IHJhdGhlciB3aXRoIHRoZSBnZW50bGVyCgkJCQkJYW5kIGxpb24tbGlrZSB0ZW1wZXJhbWVudHMuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gSEEgNjI5Yi44Ij5BcmlzdG90LiBIaXN0LiBBbi4gNjI5YiA4PC9iaWJsPiDvvIh0aGUKCQkJCQkJbGlvbiBpcyBnZW50bGUgZXhjZXB0IHdoZW4gaHVuZ3J577yJOyA8YmlibCBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gU29waC4gMjMxYSIgdmFsaWQ9InllcyI+UGxhdC4gU29waC4gMjMxYTwvYmlibD4g77yIdGhlIGRvZyB0aGUgZ2VudGxlc3Qgb2YKCQkJCQkJYW5pbWFsc++8iS48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZXJlIGFyZSBtYW55PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3JlaWduIHJhY2VzIGluY2xpbmVkIHRvIG11cmRlciBhbmQgY2FubmliYWxpc20sCgkJCQkJZm9yIGV4YW1wbGUgYW1vbmcgdGhlIHRyaWJlcyBvZiB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2MTkiIGtleT0idGduLDcwMTY2MTkiPkJsYWNrCgkJCQkJCVNlYTwvcGxhY2VOYW1lPiB0aGUgQWNoYWVhbnMgYW5kIEhlbmlvY2hpLCBhbmQgb3RoZXJzIG9mIHRoZSBtYWlubGFuZCByYWNlcywKCQkJCQlzb21lIGluIHRoZSBzYW1lIGRlZ3JlZSBhcyB0aG9zZSBuYW1lZCBhbmQgc29tZSBtb3JlLCB3aGljaCBhbHRob3VnaCBwaXJhdGljYWwKCQkJCQloYXZlIGdvdCBubyBzaGFyZSBvZiBtYW5seSBjb3VyYWdlLiBBbmQgYWdhaW4gd2Uga25vdyB0aGF0IGV2ZW4gdGhlIFNwYXJ0YW5zLAoJCQkJCWFsdGhvdWdoIHNvIGxvbmcgYXMgdGhleSBwZXJzaXN0ZWQgYnkgdGhlbXNlbHZlcyBpbiB0aGVpciBsYWJvcmlvdXMgZXhlcmNpc2VzCgkJCQkJdGhleSBzdXJwYXNzZWQgYWxsIG90aGVyIHBlb3BsZXMsIG5vdyBmYWxsIGJlaGluZCBvdGhlcnMgYm90aCBpbiBneW1uYXN0aWMgYW5kCgkJCQkJaW4gbWlsaXRhcnkgY29udGVzdHM7IGZvciB0aGV5IHVzZWQgbm90IHRvIGV4Y2VsIGJlY2F1c2UgdGhleSBleGVyY2lzZWQgdGhlaXIKCQkJCQl5b3VuZyBtZW4gaW4gdGhpcyBmYXNoaW9uIGJ1dCBvbmx5IGJlY2F1c2UgdGhleSB0cmFpbmVkIGFuZCB0aGVpciBhZHZlcnNhcmllcwoJCQkJCWRpZCBub3QuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkNvbnNlcXVlbnRseSBob25vciBhbmQgbm90CgkJCQkJYW5pbWFsIGZlcm9jaXR5IHNob3VsZCBwbGF5IHRoZSBmaXJzdCBwYXJ0OyBmb3IgaXQgaXMgbm90IGEgd29sZiBub3Igb25lIG9mIHRoZQoJCQkJCW90aGVyIHdpbGQgYW5pbWFscyB0aGF0IHdpbGwgdmVudHVyZSB1cG9uIGFueSBub2JsZSBoYXphcmQsIGJ1dCByYXRoZXIgYSBnb29kCgkJCQkJbWFuLiBCdXQgdGhvc2Ugd2hvIGxldCBib3lzIHB1cnN1ZSB0aGVzZSBoYXJkIGV4ZXJjaXNlcyB0b28gbXVjaCBhbmQgdHVybiB0aGVtCgkJCQkJb3V0IHVudHJhaW5lZCBpbiBuZWNlc3NhcnkgdGhpbmdzIGluIHJlYWwgdHJ1dGggcmVuZGVyIHRoZW0gdnVsZ2FyLCBtYWtpbmcgdGhlbQoJCQkJCWF2YWlsYWJsZSBmb3Igc3RhdGVzbWFuc2hpcCB0byB1c2UgZm9yIG9uZSB0YXNrIG9ubHksIGFuZCBldmVuIGZvciB0aGlzIHRhc2sKCQkJCQl0cmFpbmluZyB0aGVtIHdvcnNlIHRoYW4gb3RoZXJzIGRvLCBhcyBvdXIgYXJndW1lbnQgcHJvdmVzLiBBbmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgc2VudGVuY2Ugd291bGQgY29tZSBiZXR0ZXIgYXQgdGhlIGVuZCBvZgoJCQkJCQkzLjQuPC9ub3RlPiB3ZSBtdXN0IG5vdCBqdWRnZSB0aGVtIGZyb20gdGhlaXIgZm9ybWVyIGFjaGlldmVtZW50cyBidXQgZnJvbQoJCQkJCXRoZSBmYWN0cyBvZiB0b2RheTsgZm9yIHRoZXkgaGF2ZSByaXZhbHMgaW4gdGhlaXIgZWR1Y2F0aW9uIG5vdywgYnV0IHRoZXkgdXNlZAoJCQkJCXRvIGhhdmUgbm9uZSBiZWZvcmUuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyB0aGVyZWZvcmUgYWdyZWVkIHRoYXQgd2Ugc2hvdWxkIGVtcGxveSBneW1uYXN0aWMKCQkJCQl0cmFpbmluZywgYW5kIGhvdyB3ZSBzaG91bGQgZW1wbG95IGl0LiBGb3IgdW50aWwgcHViZXJ0eSB3ZSBzaG91bGQgYXBwbHkgbGlnaHRlcgoJCQkJCWV4ZXJjaXNlcywgZm9yYmlkZGluZyBoYXJkIGRpZXQgYW5kIHNldmVyZSBleGVydGlvbnMsIGluIG9yZGVyIHRoYXQgbm90aGluZyBtYXkKCQkJCQloaW5kZXIgdGhlIGdyb3d0aDsgPG1pbGVzdG9uZSBuPSIxMzM5YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+Zm9yIHRoZXJlIGlzIG5vIHNtYWxsIHByb29mIHRoYXQgdG9vIHNldmVyZQoJCQkJCXRyYWluaW5nIGNhbiBwcm9kdWNlIHRoaXMgcmVzdWx0IGluIHRoZSBmYWN0IHRoYXQgaW4gdGhlIGxpc3Qgb2YgT2x5bXBpYyB2aWN0b3JzCgkJCQkJb25lIHdvdWxkIG9ubHkgZmluZCB0d28gb3IgdGhyZWUgcGVyc29ucyB3aG8gaGF2ZSB3b24gYm90aCBhcyBtZW4gYW5kIGFzIGJveXMsCgkJCQkJYmVjYXVzZSB3aGVuIHBlb3BsZSBnbyBpbnRvIHRyYWluaW5nIGluIHlvdXRoIHRoZSBzZXZlcmUgZXhlcmNpc2VzIHJvYiB0aGVtIG9mCgkJCQkJdGhlaXIgc3RyZW5ndGguIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB3aGVuIHRoZXkgaGF2ZQoJCQkJCXNwZW50IHRocmVlIHllYXJzIGFmdGVyIHB1YmVydHkgdXBvbiB0aGVpciBvdGhlciBzdHVkaWVzLCB0aGVuIGl0IGlzIHN1aXRhYmxlIHRvCgkJCQkJb2NjdXB5IHRoZSBuZXh0IHBlcmlvZCBvZiBsaWZlIHdpdGggbGFib3Jpb3VzIGV4ZXJjaXNlcyBhbmQgc3RyaWN0IHRyYWluaW5nCgkJCQkJCWRpZXQ8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gY29tcHVsc2lvbiB0byBlYXQgdmVyeSBsYXJnZQoJCQkJCQlyYXRpb25zIG9mIHByZXNjcmliZWQgZm9vZOKAlHRoZSBHcmVlayB3YXkgb2YgdHJhaW5pbmcuPC9ub3RlPjsgZm9yCgkJCQkJaXQgaXMgd3JvbmcgdG8gd29yayBoYXJkIHdpdGggdGhlIG1pbmQgYW5kIHRoZSBib2R5IGF0IHRoZSBzYW1lIHRpbWU7IGZvciBpdCBpcwoJCQkJCXRoZSBuYXR1cmUgb2YgdGhlIHR3byBkaWZmZXJlbnQgc29ydHMgb2YgZXhlcnRpb24gdG8gcHJvZHVjZSBvcHBvc2l0ZSBlZmZlY3RzLAoJCQkJCWJvZGlseSB0b2lsIGltcGVkaW5nIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgbWluZCBhbmQgbWVudGFsIHRvaWwgdGhhdCBvZiB0aGUKCQkJCQkJYm9keS48bWlsZXN0b25lIGVkPSJQIiBuPSI0LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFib3V0IG11c2ljIG9uIHRoZSBvdGhlciBoYW5kIHdlIGhhdmUgcHJldmlvdXNseSByYWlzZWQgc29tZQoJCQkJCXF1ZXN0aW9ucyBpbiB0aGUgY291cnNlIG9mIG91ciBhcmd1bWVudCwgYnV0IGl0IGlzIHdlbGwgdG8gdGFrZSB0aGVtIHVwIGFnYWluCgkJCQkJYW5kIGNhcnJ5IHRoZW0gZnVydGhlciBub3csIGluIG9yZGVyIHRoYXQgdGhpcyBtYXkgZ2l2ZSB0aGUga2V5IHNvIHRvIHNwZWFrIGZvcgoJCQkJCXRoZSBwcmluY2lwbGVzIHdoaWNoIG9uZSBtaWdodCBhZHZhbmNlIGluIHByb25vdW5jaW5nIGFib3V0IGl0LiBGb3IgaXQgaXMgbm90CgkJCQkJZWFzeSB0byBzYXkgcHJlY2lzZWx5IHdoYXQgcG90ZW5jeSBpdCBwb3NzZXNzZXMsIG5vciB5ZXQgZm9yIHRoZSBzYWtlIG9mIHdoYXQKCQkJCQlvYmplY3Qgb25lIHNob3VsZCBwYXJ0aWNpcGF0ZSBpbiBpdOKAlHdoZXRoZXIgZm9yIGFtdXNlbWVudCBhbmQKCQkJCQlyZWxheGF0aW9uLCBhcyBvbmUgaW5kdWxnZXMgaW4gc2xlZXAgYW5kIGRlZXAgZHJpbmtpbmcg77yIZm9yIHRoZXNlIGluCgkJCQkJdGhlbXNlbHZlcyBhcmUgbm90IHNlcmlvdXMgcHVyc3VpdHMgYnV0IG1lcmVseSBwbGVhc2FudCwgYW5kIOKAmHJlbGF4CgkJCQkJb3VyIGNhcmUs4oCZIGFzIEV1cmlwaWRlcyBzYXlzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iRXVyLiBCYS4gMzc4IiB2YWxpZD0ieWVzIj5FdXIuIEJhLiAzNzg8L2JpYmw+IO+8iEJyb21pb3PvvIkKCQkJCQkJCTxmb3JlaWduIGxhbmc9ImdyZWVrIj7hvYPPgiDPhOG9sc604oCZIOG8lM+HzrXOuSwgzrjOuc6xz4POteG9u861zrnOvSDPhM61IM+H4b25z4HOv865z4IgzrzOtc+E4b2xIM+E4oCZCgkJCQkJCQnOseG9kM674b+2zr0gzrPOtc674b62z4POsc65IOG8gM69zrHPgM6x4b+mz4POseG9tyDPhM61IM68zrXPgeG9t868zr3Osc+CPC9mb3JlaWduPjwvbm90ZT47IG93aW5nIHRvCgkJCQkJd2hpY2ggcGVvcGxlIGFjdHVhbGx5IGNsYXNzIG11c2ljIHdpdGggdGhlbSBhbmQ8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmVtcGxveSBhbGwgb2YgdGhlc2UgdGhpbmdzLCBzbGVlcCwgZGVlcCBkcmlua2luZyBhbmQgbXVzaWMsIGluCgkJCQkJdGhlIHNhbWUgd2F5LCBhbmQgdGhleSBhbHNvIHBsYWNlIGRhbmNpbmcgaW4gdGhlIHNhbWUgY2xhc3PvvIk7CgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPm9yIHdoZXRoZXIgd2Ugb3VnaHQgcmF0aGVyIHRvCgkJCQkJdGhpbmsgdGhhdCBtdXNpYyB0ZW5kcyBpbiBzb21lIGRlZ3JlZSB0byB2aXJ0dWUg77yIbXVzaWMgYmVpbmcgY2FwYWJsZSBvZgoJCQkJCXByb2R1Y2luZyBhIGNlcnRhaW4gcXVhbGl0eSBvZiBjaGFyYWN0ZXIganVzdCBhcyBneW1uYXN0aWNzIGFyZSBjYXBhYmxlIG9mCgkJCQkJcHJvZHVjaW5nIGEgY2VydGFpbiBxdWFsaXR5IG9mIGJvZHksIG11c2ljIGFjY3VzdG9taW5nIG1lbiB0byBiZSBhYmxlIHRvIHJlam9pY2UKCQkJCQlyaWdodGx577yJOyBvciB0aGF0IGl0IGNvbnRyaWJ1dGVzIHNvbWV0aGluZyB0byBpbnRlbGxlY3R1YWwKCQkJCQkJZW50ZXJ0YWlubWVudDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHRlcm0gPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs60zrnOsc6zz4nOs+G9tTwvZm9yZWlnbj4sIOKAmHBhc3RpbWUs4oCZIGlzCgkJCQkJCWlkaW9tYXRpY2FsbHkgdXNlZCBvZiB0aGUgcHVyc3VpdHMgb2YgY3VsdHVyZWQgbGVpc3VyZeKAlHNlcmlvdXMKCQkJCQkJY29udmVyc2F0aW9uLCBtdXNpYywgdGhlIGRyYW1hLjwvbm90ZT4gYW5kIGN1bHR1cmUg77yIZm9yIHRoaXMgbXVzdAoJCQkJCWJlIHNldCBkb3duIGFzIGEgdGhpcmQgYWx0ZXJuYXRpdmUgYW1vbmcgdGhvc2UgbWVudGlvbmVk77yJLiBOb3cgaXQgaXMKCQkJCQlub3QgZGlmZmljdWx0IHRvIHNlZSB0aGF0IG9uZSBtdXN0IG5vdCBtYWtlIGFtdXNlbWVudCB0aGUgb2JqZWN0IG9mIHRoZQoJCQkJCWVkdWNhdGlvbiBvZiB0aGUgeW91bmc7IGZvciBhbXVzZW1lbnQgZG9lcyBub3QgZ28gd2l0aAoJCQkJCWxlYXJuaW5n4oCUbGVhcm5pbmcgaXMgYSBwYWluZnVsIHByb2Nlc3MuIE5vciB5ZXQgbW9yZW92ZXIgaXMgaXQKCQkJCQlzdWl0YWJsZSB0byBhc3NpZ24gaW50ZWxsZWN0dWFsIGVudGVydGFpbm1lbnQgdG8gYm95cyBhbmQgdG8gdGhlIHlvdW5nOyBmb3IgYQoJCQkJCXRoaW5nIHRoYXQgaXMgYW4gZW5kIGRvZXMgbm90IGJlbG9uZyB0byBhbnl0aGluZyB0aGF0IGlzIGltcGVyZmVjdC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNC41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHBlcmhhcHMgaXQgbWlnaHQgYmUgdGhvdWdodCB0aGF0IHRoZQoJCQkJCXNlcmlvdXMgcHVyc3VpdHMgb2YgYm95cyBhcmUgZm9yIHRoZSBzYWtlIG9mIGFtdXNlbWVudCB3aGVuIHRoZXkgaGF2ZSBncm93biB1cAoJCQkJCXRvIGJlIG1lbi4gQnV0LCBpZiBzb21ldGhpbmcgb2YgdGhpcyBzb3J0IGlzIHRoZSBjYXNlLCB3aHkgc2hvdWxkIHRoZSB5b3VuZyBuZWVkCgkJCQkJdG8gbGVhcm4gdGhpcyBhY2NvbXBsaXNobWVudCB0aGVtc2VsdmVzLCBhbmQgbm90LCBsaWtlIHRoZSBQZXJzaWFuIGFuZCBNZWRpYW4KCQkJCQlraW5ncywgcGFydGljaXBhdGUgaW4gdGhlIHBsZWFzdXJlIGFuZCB0aGUgZWR1Y2F0aW9uIG9mIG11c2ljIGJ5IG1lYW5zIG9mIG90aGVycwoJCQkJCXBlcmZvcm1pbmcgaXQ/IGZvciB0aG9zZSB3aG8gaGF2ZSBtYWRlIG11c2ljIGEgYnVzaW5lc3MgYW5kIHByb2Zlc3Npb24gbXVzdAoJCQkJCW5lY2Vzc2FyaWx5IHBlcmZvcm0gYmV0dGVyIHRoYW4gdGhvc2Ugd2hvIHByYWN0aXNlIG9ubHkgbG9uZyBlbm91Z2ggdG8gbGVhcm4uCgkJCQkJQnV0IGlmIGl0IGlzIHByb3BlciBmb3IgdGhlbSB0byBsYWJvciBhdCBhY2NvbXBsaXNobWVudHMgb2YgdGhpcyBzb3J0LCB0aGVuIGl0CgkJCQkJd291bGQgYWxzbyBiZSByaWdodCBmb3IgdGhlbSB0byBwcmVwYXJlIHRoZSBkaXNoZXMgb2YgYW4gZWxhYm9yYXRlIGN1aXNpbmU7IGJ1dAoJCQkJCXRoaXMgaXMgYWJzdXJkLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhlIHNhbWUKCQkJCQlkaWZmaWN1bHR5IGFsc28gYXJpc2VzIGFzIHRvIHRoZSBxdWVzdGlvbiB3aGV0aGVyIGxlYXJuaW5nIG11c2ljIGNhbiBpbXByb3ZlCgkJCQkJdGhlaXIgY2hhcmFjdGVyczsgZm9yIHdoeSBzaG91bGQgdGhleSBsZWFybiB0byBwZXJmb3JtIGVkaWZ5aW5nIG11c2ljCgkJCQkJdGhlbXNlbHZlcywgPG1pbGVzdG9uZSBuPSIxMzM5YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+aW5zdGVhZCBvZiBsZWFybmluZyB0byBlbmpveSBpdCByaWdodGx5IGFuZCBiZSBhYmxlIHRvIGp1ZGdlIGl0CgkJCQkJd2hlbiB0aGV5IGhlYXIgb3RoZXJzIHBlcmZvcm1pbmcsIGFzIHRoZSBTcGFydGFucyBkbz8gZm9yIHRoZSBTcGFydGFucyBhbHRob3VnaAoJCQkJCXRoZXkgZG8gbm90IGxlYXJuIHRvIHBlcmZvcm0gY2FuIG5ldmVydGhlbGVzcyBqdWRnZSBnb29kIGFuZCBiYWQgbXVzaWMKCQkJCQljb3JyZWN0bHksIHNvIGl0IGlzIHNhaWQuIEFuZCB0aGUgc2FtZSBhcmd1bWVudCBhcHBsaWVzIGFsc28gaWYgbXVzaWMgaXMgdG8gYmUKCQkJCQllbXBsb3llZCBmb3IgcmVmaW5lZCBlbmpveW1lbnQgYW5kIGVudGVydGFpbm1lbnQ7IHdoeSBuZWVkIHBlb3BsZSBsZWFybiB0bwoJCQkJCXBlcmZvcm0gdGhlbXNlbHZlcyBpbnN0ZWFkIG9mIGVuam95aW5nIG11c2ljIHBsYXllZCBieSBvdGhlcnM/IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB3ZSBtYXkgY29uc2lkZXIgdGhlIGNvbmNlcHRpb24gdGhhdCB3ZQoJCQkJCWhhdmUgYWJvdXQgdGhlIGdvZHM6IFpldXMgZG9lcyBub3Qgc2luZyBhbmQgaGFycCB0byB0aGUgcG9ldHMgaGltc2VsZi4gQnV0CgkJCQkJcHJvZmVzc2lvbmFsIG11c2ljaWFucyB3ZSBzcGVhayBvZiBhcyB2dWxnYXIgcGVvcGxlLCBhbmQgaW5kZWVkIHdlIHRoaW5rIGl0IG5vdAoJCQkJCW1hbmx5IHRvIHBlcmZvcm0gbXVzaWMsIGV4Y2VwdCB3aGVuIGRydW5rIG9yIGZvciBmdW4uPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgcGVyaGFwcyB0aGVzZSBwb2ludHMKCQkJCQl3aWxsIGhhdmUgdG8gYmUgY29uc2lkZXJlZCBhZnRlcndhcmRzOyBvdXIgZmlyc3QgaW5xdWlyeSBpcyB3aGV0aGVyIG11c2ljIG91Z2h0CgkJCQkJbm90IG9yIG91Z2h0IHRvIGJlIGluY2x1ZGVkIGluIGVkdWNhdGlvbiwgYW5kIHdoYXQgaXMgaXRzIGVmZmljYWN5IGFtb25nIHRoZQoJCQkJCXRocmVlIHVzZXMgb2YgaXQgdGhhdCBoYXZlIGJlZW4gZGlzY3Vzc2Vk4oCUZG9lcyBpdCBzZXJ2ZSBmb3IgZWR1Y2F0aW9uCgkJCQkJb3IgYW11c2VtZW50IG9yIGVudGVydGFpbm1lbnQ/IEl0IGlzIHJlYXNvbmFibGUgdG8gcmVja29uIGl0IHVuZGVyIGFsbCBvZiB0aGVzZQoJCQkJCWhlYWRzLCBhbmQgaXQgYXBwZWFycyB0byBwYXJ0aWNpcGF0ZSBpbiB0aGVtIGFsbC4gQW11c2VtZW50IGlzIGZvciB0aGUgc2FrZSBvZgoJCQkJCXJlbGF4YXRpb24sIGFuZCByZWxheGF0aW9uIG11c3QgbmVjZXNzYXJpbHkgYmUgcGxlYXNhbnQsIGZvciBpdCBpcyBhIHdheSBvZgoJCQkJCWN1cmluZyB0aGUgcGFpbiBkdWUgdG8gbGFib3Jpb3VzIHdvcms7IGFsc28gZW50ZXJ0YWlubWVudCBvdWdodCBhZG1pdHRlZGx5IHRvIGJlCgkJCQkJbm90IG9ubHkgaG9ub3JhYmxlIGJ1dCBhbHNvIHBsZWFzYW50LCBmb3IgaGFwcGluZXNzIGlzIGRlcml2ZWQgZnJvbSBib3RoIGhvbm9yCgkJCQkJYW5kIHBsZWFzdXJlOzxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YnV0IHdlIGFsbCBwcm9ub3VuY2UKCQkJCQltdXNpYyB0byBiZSBvbmUgb2YgdGhlIHBsZWFzYW50ZXN0IHRoaW5ncywgd2hldGhlciBpbnN0cnVtZW50YWwgb3IgaW5zdHJ1bWVudGFsCgkJCQkJYW5kIHZvY2FsIG11c2ljIHRvZ2V0aGVyIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPu+8iGF0IGxlYXN0IE11c2FldXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgc2VtaS1sZWdlbmRhcnkKCQkJCQkJYmFyZCwgdG8gd2hvbSBhIG51bWJlciBvZiBvcmFjdWxhciB2ZXJzZXMgdGhhdCB3ZXJlIGN1cnJlbnQgd2VyZQoJCQkJCQlhdHRyaWJ1dGVkLjwvbm90ZT4gc2F5cywg4oCYU29uZyBpcyBtYW4ncyBzd2VldGVzdCBqb3ks4oCZCgkJCQkJYW5kIHRoYXQgaXMgd2h5IHBlb3BsZSB3aXRoIGdvb2QgcmVhc29uIGludHJvZHVjZSBpdCBhdCBwYXJ0aWVzIGFuZAoJCQkJCWVudGVydGFpbm1lbnRzLCBmb3IgaXRzIGV4aGlsYXJhdGluZyBlZmZlY3TvvIksIHNvIHRoYXQgZm9yIHRoaXMgcmVhc29uCgkJCQkJYWxzbyBvbmUgbWlnaHQgc3VwcG9zZSB0aGF0IHRoZSB5b3VuZ2VyIG1lbiBvdWdodCB0byBiZSBlZHVjYXRlZCBpbiBtdXNpYy4gRm9yCgkJCQkJYWxsIGhhcm1sZXNzIHBsZWFzdXJlcyBhcmUgbm90IG9ubHkgc3VpdGFibGUgZm9yIHRoZSB1bHRpbWF0ZSBvYmplY3QgYnV0IGFsc28KCQkJCQlmb3IgcmVsYXhhdGlvbjsgYW5kIGFzIGl0IGJ1dCByYXJlbHkgaGFwcGVucyBmb3IgbWVuIHRvIHJlYWNoIHRoZWlyIHVsdGltYXRlCgkJCQkJb2JqZWN0LCB3aGVyZWFzIHRoZXkgb2Z0ZW4gcmVsYXggYW5kIHB1cnN1ZSBhbXVzZW1lbnQgbm90IHNvIG11Y2ggd2l0aCBzb21lCgkJCQkJdWx0ZXJpb3Igb2JqZWN0IGJ1dCBiZWNhdXNlIG9mIHRoZSBwbGVhc3VyZSBvZiBpdCwgaXQgd291bGQgYmUgc2VydmljZWFibGUgdG8KCQkJCQlsZXQgdGhlbSByZWxheCBhdCBpbnRlcnZhbHMgaW4gdGhlIHBsZWFzdXJlcyBkZXJpdmVkIGZyb20gbXVzaWMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBpdCBoYXMgY29tZSBhYm91dCB0aGF0IG1lbiBtYWtlCgkJCQkJYW11c2VtZW50cyBhbiBlbmQ7IGZvciB0aGUgZW5kIGFsc28gcGVyaGFwcyBjb250YWlucyBhIGNlcnRhaW4gcGxlYXN1cmUsIGJ1dCBub3QKCQkJCQlhbnkgb3JkaW5hcnkgcGxlYXN1cmUsIGFuZCBzZWVraW5nIHRoaXMgdGhleSB0YWtlIHRoZSBvdGhlciBhcyBiZWluZyB0aGlzCgkJCQkJYmVjYXVzZSBpdCBoYXMgYSBjZXJ0YWluIHJlc2VtYmxhbmNlIHRvIHRoZSBhY2hpZXZlbWVudCBvZiB0aGUgZW5kIG9mIHRoZWlyCgkJCQkJdW5kZXJ0YWtpbmdzLiBGb3IgdGhlIGVuZCBpcyBkZXNpcmFibGUgbm90IGZvciB0aGUgc2FrZSBvZiBhbnl0aGluZyB0aGF0IHdpbGwKCQkJCQlyZXN1bHQgZnJvbSBpdCwgYW5kIGFsc28gcGxlYXN1cmVzIG9mIHRoZSBzb3J0IHVuZGVyIGNvbnNpZGVyYXRpb24gYXJlIG5vdAoJCQkJCWRlc2lyYWJsZSBmb3IgdGhlIHNha2Ugb2Ygc29tZSBmdXR1cmUgcmVzdWx0LCBidXQgYmVjYXVzZSBvZiB0aGluZ3MgdGhhdCBoYXZlCgkJCQkJaGFwcGVuZWQgYWxyZWFkeSwgZm9yIGluc3RhbmNlIGxhYm9yIGFuZCBwYWluLiBPbmUgbWlnaHQgdGhlbiBwZXJoYXBzIGFzc3VtZQoJCQkJCXRoaXMgdG8gYmUgdGhlIHJlYXNvbiB3aGljaCBjYXVzZXMgbWVuIHRvIHNlZWsgdG8gcHJvY3VyZSBoYXBwaW5lc3MgYnkgbWVhbnMgb2YKCQkJCQl0aG9zZSBwbGVhc3VyZXM7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCBpbiB0aGUgY2FzZSBvZgoJCQkJCXRha2luZyBwYXJ0IGluIG11c2ljLCB0aGlzIGlzIG5vdCBiZWNhdXNlIG9mIHRoaXMgcmVhc29uIG9ubHksIGJ1dCBhbHNvIGJlY2F1c2UKCQkJCQlwZXJmb3JtaW5nIG11c2ljIGlzIHVzZWZ1bCwgYXMgaXQgc2VlbXMsIGZvciByZWxheGF0aW9uLiBCdXQgbmV2ZXJ0aGVsZXNzIHdlCgkJCQkJbXVzdCBleGFtaW5lIHdoZXRoZXIgaXQgaXMgbm90IHRoZSBjYXNlIHRoYXQsIGFsdGhvdWdoIHRoaXMgaGFzIGNvbWUgYWJvdXQsCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTM0MGEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnlldCB0aGUgbmF0dXJlIG9mIG11c2ljIGlzIG1vcmUgaG9ub3JhYmxlIHRoYW4gY29ycmVzcG9uZHMgd2l0aAoJCQkJCXRoZSBlbXBsb3ltZW50IG9mIGl0IG1lbnRpb25lZCwgYW5kIGl0IGlzIHByb3BlciBub3Qgb25seSB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUKCQkJCQljb21tb24gcGxlYXN1cmUgdGhhdCBzcHJpbmdzIGZyb20gaXQsIHdoaWNoIGlzIHBlcmNlcHRpYmxlIHRvIGV2ZXJ5Ym9keQoJCQkJCe+8iGZvciB0aGUgcGxlYXN1cmUgY29udGFpbmVkIGluIG11c2ljIGlzIG9mIGEgbmF0dXJhbCBraW5kLCBvd2luZyB0bwoJCQkJCXdoaWNoIHRoZSB1c2Ugb2YgaXQgaXMgZGVhciB0byB0aG9zZSBvZiBhbGwgYWdlcyBhbmQgY2hhcmFjdGVyc++8iSwgYnV0CgkJCQkJdG8gc2VlIGlmIGl0cyBpbmZsdWVuY2UgcmVhY2hlcyBhbHNvIGluIGEgbWFubmVyIHRvIHRoZSBjaGFyYWN0ZXIgYW5kIHRvIHRoZQoJCQkJCXNvdWwuIEFuZCB0aGlzIHdvdWxkIGNsZWFybHkgYmUgdGhlIGNhc2UgaWYgd2UgYXJlIGFmZmVjdGVkIGluIG91ciBjaGFyYWN0ZXJzIGluCgkJCQkJYSBjZXJ0YWluIG1hbm5lciBieSBpdC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGl0IGlzCgkJCQkJY2xlYXIgdGhhdCB3ZSBhcmUgYWZmZWN0ZWQgaW4gYSBjZXJ0YWluIG1hbm5lciwgYm90aCBieSBtYW55IG90aGVyIGtpbmRzIG9mCgkJCQkJbXVzaWMgYW5kIG5vdCBsZWFzdCBieSB0aGUgbWVsb2RpZXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEwMTkiIGtleT0idGduLDcwMTEwMTkiPk9seW1wdXM8L3BsYWNlTmFtZT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgUGhyeWdpYW4gY29tcG9zZXIKCQkJCQkJb2YgdGhlIHNldmVudGggY2VudHVyeSBCLkMuPC9ub3RlPjsgZm9yIHRoZXNlIGFkbWl0dGVkbHkgbWFrZSBvdXIgc291bHMKCQkJCQllbnRodXNpYXN0aWMsIGFuZCBlbnRodXNpYXNtIGlzIGFuIGFmZmVjdGlvbiBvZiB0aGUgY2hhcmFjdGVyIG9mIHRoZSBzb3VsLiBBbmQKCQkJCQltb3Jlb3ZlciBldmVyeWJvZHkgd2hlbiBsaXN0ZW5pbmcgdG8gaW1pdGF0aW9uczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+TXVzaWMgZHJhbWF0aWNhbGx5IGV4cHJlc3NpbmcgdmFyaW91cyBzdGF0ZXMgb2YKCQkJCQkJZW1vdGlvbi48L25vdGU+IGlzIHRocm93biBpbnRvIGEgY29ycmVzcG9uZGluZyBzdGF0ZSBvZiBmZWVsaW5nLCBldmVuIGFwYXJ0CgkJCQkJZnJvbSB0aGUgcmh5dGhtcyBhbmQgdHVuZXMgdGhlbXNlbHZlcy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEKCQkJCQkJcHJvYmFibGUgY29ycmVjdGlvbiBvZiB0aGUgR3JlZWsgZ2l2ZXMg4oCYYnkgdGhlIHJoeXRobXMgYW5kIHR1bmVzCgkJCQkJCXRoZW1zZWx2ZXMsIGV2ZW4gYXBhcnQgZnJvbSB0aGUgd29yZHMu4oCZPC9ub3RlPiBBbmQgc2luY2UgaXQgaXMgdGhlCgkJCQkJY2FzZSB0aGF0IG11c2ljIGlzIG9uZSBvZiB0aGUgdGhpbmdzIHRoYXQgZ2l2ZSBwbGVhc3VyZSwgYW5kIHRoYXQgdmlydHVlIGhhcyB0bwoJCQkJCWRvIHdpdGggZmVlbGluZyBkZWxpZ2h0IGFuZCBsb3ZlIGFuZCBoYXRyZWQgcmlnaHRseSwgdGhlcmUgaXMgb2J2aW91c2x5IG5vdGhpbmcKCQkJCQl0aGF0IGl0IGlzIG1vcmUgbmVlZGZ1bCB0byBsZWFybiBhbmQgYmVjb21lIGhhYml0dWF0ZWQgdG8gdGhhbiB0byBqdWRnZQoJCQkJCWNvcnJlY3RseSBhbmQgdG8gZGVsaWdodCBpbiB2aXJ0dW91cyBjaGFyYWN0ZXJzIGFuZCBub2JsZSBhY3Rpb25zOyA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQgcmh5dGhtcyBhbmQgbWVsb2RpZXMgY29udGFpbgoJCQkJCXJlcHJlc2VudGF0aW9ucyBvZiBhbmdlcjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIG1pbGRuZXNzLAoJCQkJCWFuZCBhbHNvIG9mIGNvdXJhZ2UgYW5kIHRlbXBlcmFuY2UgYW5kIGFsbCB0aGVpciBvcHBvc2l0ZXMgYW5kIHRoZSBvdGhlciBtb3JhbAoJCQkJCXF1YWxpdGllcywgdGhhdCBtb3N0IGNsb3NlbHkgY29ycmVzcG9uZCB0byB0aGUgdHJ1ZSBuYXR1cmVzIG9mIHRoZXNlIHF1YWxpdGllcwoJCQkJCe+8iGFuZCB0aGlzIGlzIGNsZWFyIGZyb20gdGhlIGZhY3RzIG9mIHdoYXQgb2NjdXJz4oCUd2hlbiB3ZQoJCQkJCWxpc3RlbiB0byBzdWNoIHJlcHJlc2VudGF0aW9ucyB3ZSBjaGFuZ2UgaW4gb3VyIHNvdWzvvIk7IGFuZCBoYWJpdHVhdGlvbgoJCQkJCWluIGZlZWxpbmcgcGFpbiBhbmQgZGVsaWdodCBhdCByZXByZXNlbnRhdGlvbnMgb2YgcmVhbGl0eSBpcyBjbG9zZSB0byBmZWVsaW5nCgkJCQkJdGhlbSB0b3dhcmRzIGFjdHVhbCByZWFsaXR5IO+8iGZvciBleGFtcGxlLCBpZiBhIG1hbiBkZWxpZ2h0cyBpbgoJCQkJCWJlaG9sZGluZyB0aGUgc3RhdHVlIG9mIHNvbWVib2R5IGZvciBubyBvdGhlciByZWFzb24gdGhhbiBiZWNhdXNlIG9mIGl0cyBhY3R1YWwKCQkJCQlmb3JtLCB0aGUgYWN0dWFsIHNpZ2h0IG9mIHRoZSBwZXJzb24gd2hvc2Ugc3RhdHVlIGhlIGJlaG9sZHMgbXVzdCBhbHNvIG9mCgkJCQkJbmVjZXNzaXR5IGdpdmUgaGltIHBsZWFzdXJl77yJOyA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgaXQgaXMgdGhlIGNhc2UgdGhhdCB3aGVyZWFzIHRoZSBvdGhlciBvYmplY3RzIG9mCgkJCQkJc2Vuc2F0aW9uIGNvbnRhaW4gbm8gcmVwcmVzZW50YXRpb24gb2YgY2hhcmFjdGVyLCBmb3IgZXhhbXBsZSB0aGUgb2JqZWN0cyBvZgoJCQkJCXRvdWNoIGFuZCB0YXN0ZSDvvIh0aG91Z2ggdGhlIG9iamVjdHMgb2Ygc2lnaHQgZG8gc28gc2xpZ2h0bHksIGZvciB0aGVyZQoJCQkJCWFyZSBmb3JtcyB0aGF0IHJlcHJlc2VudCBjaGFyYWN0ZXIsIGJ1dCBvbmx5IHRvIGEgc21hbGwgZXh0ZW50LCBhbmQgbm90PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj7igJhOb3TigJkgaXMgYSBjb25qZWN0dXJhbAoJCQkJCQlpbnNlcnRpb24uPC9ub3RlPiBhbGwgbWVuIHBhcnRpY2lwYXRlIGluIHZpc3VhbCBwZXJjZXB0aW9uIG9mIHN1Y2gKCQkJCQlxdWFsaXRpZXM7IGFsc28gdmlzdWFsIHdvcmtzIG9mIGFydCBhcmUgbm90IHJlcHJlc2VudGF0aW9ucyBvZiBjaGFyYWN0ZXIgYnV0CgkJCQkJcmF0aGVyIHRoZSBmb3JtcyBhbmQgY29sb3JzIHByb2R1Y2VkIGFyZSBtZXJlIGluZGljYXRpb25zIG9mIGNoYXJhY3RlciwgYW5kCgkJCQkJdGhlc2UgaW5kaWNhdGlvbnMgYXJlIG9ubHkgYm9kaWx5IHNlbnNhdGlvbnMgZHVyaW5nIHRoZSBlbW90aW9uczsgbm90IGJ1dCB3aGF0CgkJCQkJaW4gc28gZmFyIGFzIHRoZXJlIGlzIGEgZGlmZmVyZW5jZSBldmVuIGluIHJlZ2FyZCB0byB0aGUgb2JzZXJ2YXRpb24gb2YgdGhlc2UKCQkJCQkJaW5kaWNhdGlvbnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRoZXNlIHZpc3VhbAoJCQkJCQlpbXByZXNzaW9ucyBkbyB2YXJ5IHRvIHNvbWUgZXh0ZW50IGluIG1vcmFsIGVmZmVjdC48L25vdGU+IHRoZSB5b3VuZyBtdXN0CgkJCQkJbm90IGxvb2sgYXQgdGhlIHdvcmtzIG9mIFBhdXNvbiBidXQgdGhvc2Ugb2YgUG9seWdub3R1cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBhdXNvbiBpcyBhIHBhaW50ZXIgb3RoZXJ3aXNlIGxpdHRsZSBrbm93bi4gUG9seWdub3R1cwoJCQkJCQlkZWNvcmF0ZWQgdGhlIFN0b2EgUG9pa2lsZSBhbmQgb3RoZXIgZmFtb3VzIHB1YmxpYyBidWlsZGluZ3MgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgaW4gdGhlIG1pZGRsZSBvZiB0aGUgNXRoCgkJCQkJCWNlbnR1cnkgQi5DLiDigJhQb2x5Z25vdHVzIHJlcHJlc2VudGVkIG1lbiBhcyBiZXR0ZXIgdGhhbiB0aGV5CgkJCQkJCXJlYWxseSB3ZXJlLCBQYXVzb24gYXMgd29yc2XigJkg77yIPGJpYmwgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIFBvZXQuIDE0NDhhLjUiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIFBvZXQuIDE0NDhhCgkJCQkJCTU8L2JpYmw+77yJLjwvbm90ZT4gYW5kIG9mIGFueSBvdGhlciBtb3JhbCBwYWludGVyIG9yCgkJCQkJc2N1bHB0b3LvvIksIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPnBpZWNlcyBvZiBtdXNpYwoJCQkJCW9uIHRoZSBjb250cmFyeSBkbyBhY3R1YWxseSBjb250YWluIGluIHRoZW0gc2VsdmVzIGltaXRhdGlvbnMgb2YgY2hhcmFjdGVyOyBhbmQKCQkJCQl0aGlzIGlzIG1hbmlmZXN0LCBmb3IgZXZlbiBpbiB0aGUgbmF0dXJlIG9mIHRoZSBtZXJlIG1lbG9kaWVzIHRoZXJlIGFyZQoJCQkJCWRpZmZlcmVuY2VzLCBzbyB0aGF0IHBlb3BsZSB3aGVuIGhlYXJpbmcgdGhlbSBhcmUgYWZmZWN0ZWQgZGlmZmVyZW50bHkgYW5kIGhhdmUKCQkJCQlub3QgdGhlIHNhbWUgZmVlbGluZ3MgaW4gcmVnYXJkIHRvIGVhY2ggb2YgdGhlbSwgYnV0IGxpc3RlbiB0byBzb21lIGluIGEgbW9yZQoJCQkJCW1vdXJuZnVsIGFuZCByZXN0cmFpbmVkIHN0YXRlLCA8bWlsZXN0b25lIG49IjEzNDBiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5mb3IgaW5zdGFuY2UgdGhlIG1vZGUgY2FsbGVkIE1peG9seWRpYW4sIGFuZAoJCQkJCXRvIG90aGVycyBpbiBhIHNvZnRlciBzdGF0ZSBvZiBtaW5kLCBidXQgaW4gYSBtaWR3YXkgc3RhdGUgYW5kIHdpdGggdGhlIGdyZWF0ZXN0CgkJCQkJY29tcG9zdXJlIHRvIGFub3RoZXIsIGFzIHRoZSBEb3JpYW4gbW9kZSBhbG9uZSBvZiB0dW5lcyBzZWVtcyB0byBhY3QsIHdoaWxlIHRoZQoJCQkJCVBocnlnaWFuIG1ha2VzIG1lbiBlbnRodXNpYXN0aWM7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPmZvcgoJCQkJCXRoZXNlIHRoaW5ncyBhcmUgd2VsbCBzdGF0ZWQgYnkgdGhvc2Ugd2hvIGhhdmUgc3R1ZGllZCB0aGlzIGZvcm0gb2YgZWR1Y2F0aW9uLAoJCQkJCWFzIHRoZXkgZGVyaXZlIHRoZSBldmlkZW5jZSBmb3IgdGhlaXIgdGhlb3JpZXMgZnJvbSB0aGUgYWN0dWFsIGZhY3RzIG9mCgkJCQkJZXhwZXJpZW5jZS4gQW5kIHRoZSBzYW1lIGhvbGRzIGdvb2QgYWJvdXQgdGhlIHJoeXRobXMgYWxzbywgZm9yIHNvbWUgaGF2ZSBhIG1vcmUKCQkJCQlzdGFibGUgYW5kIG90aGVycyBhIG1vcmUgZW1vdGlvbmFsIGNoYXJhY3RlciwgYW5kIG9mIHRoZSBsYXR0ZXIgc29tZSBhcmUgbW9yZQoJCQkJCXZ1bGdhciBpbiB0aGVpciBlbW90aW9uYWwgZWZmZWN0cyBhbmQgb3RoZXJzIG1vcmUgbGliZXJhbC4gRnJvbSB0aGVzZQoJCQkJCWNvbnNpZGVyYXRpb25zIHRoZXJlZm9yZSBpdCBpcyBwbGFpbiB0aGF0IG11c2ljIGhhcyB0aGUgcG93ZXIgb2YgcHJvZHVjaW5nIGEKCQkJCQljZXJ0YWluIGVmZmVjdCBvbiB0aGUgbW9yYWwgY2hhcmFjdGVyIG9mIHRoZSBzb3VsLCBhbmQgaWYgaXQgaGFzIHRoZSBwb3dlciB0byBkbwoJCQkJCXRoaXMsIGl0IGlzIGNsZWFyIHRoYXQgdGhlIHlvdW5nIG11c3QgYmUgZGlyZWN0ZWQgdG8gbXVzaWMgYW5kIG11c3QgYmUgZWR1Y2F0ZWQKCQkJCQlpbiBpdC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFsc28gZWR1Y2F0aW9uIGluIG11c2ljIGlzCgkJCQkJd2VsbCBhZGFwdGVkIHRvIHRoZSB5b3V0aGZ1bCBuYXR1cmU7IGZvciB0aGUgeW91bmcgb3dpbmcgdG8gdGhlaXIgeW91dGggY2Fubm90CgkJCQkJZW5kdXJlIGFueSB0aGluZyBub3Qgc3dlZXRlbmVkIGJ5IHBsZWFzdXJlLCBhbmQgbXVzaWMgaXMgYnkgbmF0dXJlIGEgdGhpbmcgdGhhdAoJCQkJCWhhcyBhIHBsZWFzYW50IHN3ZWV0bmVzcy4gQW5kIHdlIHNlZW0gdG8gaGF2ZSBhIGNlcnRhaW4gYWZmaW5pdHkgd2l0aCB0dW5lcyBhbmQKCQkJCQlyaHl0aG1zOyBvd2luZyB0byB3aGljaCBtYW55IHdpc2UgbWVuIHNheSBlaXRoZXIgdGhhdCB0aGUgc291bCBpcyBhIGhhcm1vbnkgb3IKCQkJCQl0aGF0IGl0IGhhcyBoYXJtb255Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIGZvcm1lciBkb2N0cmluZSBpcwoJCQkJCQlQeXRoYWdvcmVhbiwgdGhlIGxhdHRlciBpcyBzdGF0ZWQgYnkgPGJpYmwgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFBoYWVkbyA5MyIgdmFsaWQ9InllcyI+UGxhdC4gUGhhZWRvCgkJCQkJCQk5MzwvYmlibD4uPC9ub3RlPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iNi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBvdWdodCBub3cKCQkJCQl0byBkZWNpZGUgdGhlIHF1ZXN0aW9uIHJhaXNlZCBlYXJsaWVyLCB3aGV0aGVyIHRoZSB5b3VuZyBvdWdodCB0byBsZWFybiBtdXNpYyBieQoJCQkJCXNpbmdpbmcgYW5kIHBsYXlpbmcgdGhlbXNlbHZlcyBvciBub3QuIEl0IGlzIG5vdCBkaWZmaWN1bHQgdG8gc2VlIHRoYXQgaXQgbWFrZXMKCQkJCQlhIGdyZWF0IGRpZmZlcmVuY2UgaW4gdGhlIHByb2Nlc3Mgb2YgYWNxdWlyaW5nIGEgY2VydGFpbiBxdWFsaXR5IHdoZXRoZXIgb25lCgkJCQkJdGFrZXMgYSBwYXJ0IGluIHRoZSBhY3Rpb25zIHRoYXQgaW1wYXJ0IGl0IG9uZXNlbGY7IGZvciBpdCBpcyBhIHRoaW5nIHRoYXQgaXMKCQkJCQlpbXBvc3NpYmxlLCBvciBkaWZmaWN1bHQsIHRvIGJlY29tZSBhIGdvb2QganVkZ2Ugb2YgcGVyZm9ybWFuY2VzIGlmIG9uZSBoYXMgbm90CgkJCQkJdGFrZW4gcGFydCBpbiB0aGVtLiBBdCB0aGUgc2FtZSB0aW1lIGFsc28gYm95cyBtdXN0IGhhdmUgc29tZSBvY2N1cGF0aW9uLCBhbmQKCQkJCQlvbmUgbXVzdCB0aGluayBBcmNoeXRhcydzIHJhdHRsZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QXJjaHl0YXMgYQoJCQkJCQlQeXRoYWdvcmVhbiBwaGlsb3NvcGhlciwgbWF0aGVtYXRpY2lhbiwgc3RhdGVzbWFuLCBhbmQgZ2VuZXJhbCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNDEwMCIga2V5PSJ0Z24sNzAwNDEwMCI+VGFyZW50dW08L3BsYWNlTmFtZT4sIGNvbnRlbXBvcmFyeSB3aXRoIFBsYXRvLiBIZSB3YXMKCQkJCQkJaW50ZXJlc3RlZCBpbiBtZWNoYW5pY3M7IGJ1dCBvbmUgdHJhZGl0aW9uIGFzY3JpYmVzIHRoZSB0b3kgaW4gcXVlc3Rpb24gdG8gYQoJCQkJCQljYXJwZW50ZXIgb2YgdGhlIHNhbWUgbmFtZS48L25vdGU+IGEgZ29vZCBpbnZlbnRpb24sIHdoaWNoIHBlb3BsZSBnaXZlIHRvCgkJCQkJY2hpbGRyZW4gaW4gb3JkZXIgdGhhdCB3aGlsZSBvY2N1cGllZCB3aXRoIHRoaXMgdGhleSBtYXkgbm90IGJyZWFrIGFueSBvZiB0aGUKCQkJCQlmdXJuaXR1cmU7IGZvciB5b3VuZyB0aGluZ3MgY2Fubm90IGtlZXAgc3RpbGwuIFdoZXJlYXMgdGhlbiBhIHJhdHRsZSBpcyBhCgkJCQkJc3VpdGFibGUgb2NjdXBhdGlvbiBmb3IgaW5mYW50IGNoaWxkcmVuLCBlZHVjYXRpb24gc2VydmVzIGFzIGEgcmF0dGxlIGZvciB5b3VuZwoJCQkJCXBlb3BsZSB3aGVuIG9sZGVyLiBTdWNoIGNvbnNpZGVyYXRpb25zIHRoZXJlZm9yZSBwcm92ZSB0aGF0IGNoaWxkcmVuIHNob3VsZCBiZQoJCQkJCXRyYWluZWQgaW4gbXVzaWMgc28gYXMgYWN0dWFsbHkgdG8gdGFrZSBwYXJ0IGluIGl0cyBwZXJmb3JtYW5jZTsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iNi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGl0IGlzIG5vdCBkaWZmaWN1bHQgdG8gZGlzdGluZ3Vpc2ggd2hhdAoJCQkJCWlzIHN1aXRhYmxlIGFuZCB1bnN1aXRhYmxlIGZvciB2YXJpb3VzIGFnZXMsIGFuZCB0byByZWZ1dGUgdGhvc2Ugd2hvIGFzc2VydCB0aGF0CgkJCQkJdGhlIHByYWN0aWNlIG9mIG11c2ljIGlzIHZ1bGdhci4gRm9yIGZpcnN0LCBpbmFzbXVjaCBhcyBpdCBpcyBuZWNlc3NhcnkgdG8gdGFrZQoJCQkJCXBhcnQgaW4gdGhlIHBlcmZvcm1hbmNlcyBmb3IgdGhlIHNha2Ugb2YganVkZ2luZyB0aGVtLCBpdCBpcyB0aGVyZWZvcmUgcHJvcGVyCgkJCQkJZm9yIHRoZSBwdXBpbHMgd2hlbiB5b3VuZyBhY3R1YWxseSB0byBlbmdhZ2UgaW4gdGhlIHBlcmZvcm1hbmNlcywgdGhvdWdoIHdoZW4KCQkJCQl0aGV5IGdldCBvbGRlciB0aGV5IHNob3VsZCBiZSByZWxlYXNlZCBmcm9tIHBlcmZvcm1pbmcsIGJ1dCBiZSBhYmxlIHRvIGp1ZGdlCgkJCQkJd2hhdCBpcyBiZWF1dGlmdWwgYW5kIGVuam95IGl0IHJpZ2h0bHkgYmVjYXVzZSBvZiB0aGUgc3R1ZHkgaW4gd2hpY2ggdGhleQoJCQkJCWVuZ2FnZWQgaW4gdGhlaXIgeW91dGguIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjYuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZW4gYXMgdG8KCQkJCQl0aGUgb2JqZWN0aW9uIHJhaXNlZCBieSBzb21lIHBlb3BsZSB0aGF0IG11c2ljIG1ha2VzIHBlb3BsZSB2dWxnYXIsIGl0IGlzIG5vdAoJCQkJCWRpZmZpY3VsdCB0byBzb2x2ZSBpdCBieSBjb25zaWRlcmluZyBob3cgZmFyIHB1cGlscyB3aG8gYXJlIGJlaW5nIGVkdWNhdGVkIHdpdGgKCQkJCQlhIHZpZXcgdG8gY2l2aWMgdmlydHVlIHNob3VsZCB0YWtlIHBhcnQgaW4gdGhlIGFjdHVhbCBwZXJmb3JtYW5jZSBvZiBtdXNpYywKCQkJCQkJPG1pbGVzdG9uZSBuPSIxMzQxYSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+YW5kIGluIHdoYXQgdGltZXMgYW5kIHdoYXQgcmh5dGhtcyB0aGV5IHNob3VsZCB0YWtlIHBhcnQsIGFuZAoJCQkJCWFsc28gd2hhdCBraW5kcyBvZiBpbnN0cnVtZW50cyBzaG91bGQgYmUgdXNlZCBpbiB0aGVpciBzdHVkaWVzLCBhcyB0aGlzCgkJCQkJbmF0dXJhbGx5IG1ha2VzIGEgZGlmZmVyZW5jZS4gRm9yIHRoZSBzb2x1dGlvbiBvZiB0aGUgb2JqZWN0aW9uIGRlcGVuZHMgdXBvbgoJCQkJCXRoZXNlIHBvaW50cywgYXMgaXQgaXMgcXVpdGUgcG9zc2libGUgdGhhdCBzb21lIG1vZGVzIG9mIG11c2ljIGRvIHByb2R1Y2UgdGhlCgkJCQkJcmVzdWx0IG1lbnRpb25lZC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNi40IiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgbWFuaWZlc3QKCQkJCQl0aGVyZWZvcmUgdGhhdCB0aGUgc3R1ZHkgb2YgbXVzaWMgbXVzdCBub3QgcGxhY2UgYSBoaW5kcmFuY2UgaW4gdGhlIHdheSBvZgoJCQkJCXN1YnNlcXVlbnQgYWN0aXZpdGllcywgbm9yIHZ1bGdhcml6ZSB0aGUgYm9kaWx5IGZyYW1lIGFuZCBtYWtlIGl0IHVzZWxlc3MgZm9yCgkJCQkJdGhlIGV4ZXJjaXNlcyBvZiB0aGUgc29sZGllciBhbmQgdGhlIGNpdGl6ZW4sIGVpdGhlciBmb3IgdGhlaXIgcHJhY3RpY2FsIHB1cnN1aXQKCQkJCQlub3cgb3IgZm9yIHRoZWlyIHNjaWVudGlmaWMgc3R1ZHkgbGF0ZXIgb24uPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JdCBpcyBkaWZmaWN1bHQgbm90IHRvIHRoaW5rIHRoYXQgZWl0aGVyIHRoZSBub3VucyBvciB0aGUgYWR2ZXJicyBpbiB0aGUKCQkJCQkJR3JlZWsgaGF2ZSBiZWVuIGVycm9uZW91c2x5IHRyYW5zcG9zZWQsIGFuZCB0aGF0IHdlIHNob3VsZCB0cmFuc2xhdGUKCQkJCQkJ4oCYZWl0aGVyIGZvciBsZWFybmluZyB0aGVtIG5vdyBvciBmb3IgcHJhY3Rpc2luZyB0aGVtIGxhdGVyCgkJCQkJCW9uLuKAmTwvbm90ZT4gQW5kIHRoaXMgd291bGQgY29tZSBhYm91dCBpbiByZXNwZWN0IG9mIHRoZWlyIHN0dWR5IGlmCgkJCQkJdGhlIHB1cGlscyBkaWQgbm90IGdvIG9uIHRvaWxpbmcgYXQgdGhlIGV4ZXJjaXNlcyB0aGF0IGFpbSBhdCBwcm9mZXNzaW9uYWwKCQkJCQljb21wZXRpdGlvbnMsIG5vciB0aGUgd29uZGVyZnVsIGFuZCBlbGFib3JhdGUgcGVyZm9ybWFuY2VzIHdoaWNoIGhhdmUgbm93CgkJCQkJZW50ZXJlZCBpbnRvIHRoZSBjb21wZXRpdGlvbnMgYW5kIGhhdmUgcGFzc2VkIGZyb20gdGhlIGNvbXBldGl0aW9ucyBpbnRvCgkJCQkJZWR1Y2F0aW9uLCBidXQgYWxzbyBvbmx5IHByYWN0aXNlZCBleGVyY2lzZXMgbm90IG9mIHRoYXQgc29ydCB1bnRpbCB0aGV5IGFyZQoJCQkJCWFibGUgdG8gZW5qb3kgYmVhdXRpZnVsIHR1bmVzIGFuZCByaHl0aG1zLCBhbmQgbm90IG1lcmVseSB0aGUgY2hhcm0gY29tbW9uIHRvCgkJCQkJYWxsIG11c2ljLCB3aGljaCBldmVuIHNvbWUgbG93ZXIgYW5pbWFscyBlbmpveSwgYXMgd2VsbCBhcyBhIG11bHRpdHVkZSBvZiBzbGF2ZXMKCQkJCQlhbmQgY2hpbGRyZW4uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjYuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpdCBpcyBhbHNvIGNsZWFyCgkJCQkJZnJvbSB0aGVzZSBjb25zaWRlcmF0aW9ucyB3aGF0IHNvcnQgb2YgaW5zdHJ1bWVudHMgdGhleSBzaG91bGQgdXNlLiBGbHV0ZXMgbXVzdAoJCQkJCW5vdCBiZSBpbnRyb2R1Y2VkIGludG8gZWR1Y2F0aW9uLCBub3IgYW55IG90aGVyIHByb2Zlc3Npb25hbCBpbnN0cnVtZW50LCBzdWNoIGFzCgkJCQkJdGhlIGhhcnAgb3IgYW55IG90aGVyIG9mIHRoYXQgc29ydCwgYnV0PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5zdWNoIGluc3RydW1lbnRzIGFzIHdpbGwgbWFrZSB0aGVtIGF0dGVudGl2ZSBwdXBpbHMgZWl0aGVyIGF0IHRoZWlyIG11c2ljYWwKCQkJCQl0cmFpbmluZyBvciBpbiB0aGVpciBvdGhlciBsZXNzb25zLiBNb3Jlb3ZlciB0aGUgZmx1dGUgaXMgbm90IGEgbW9yYWxpemluZyBidXQKCQkJCQlyYXRoZXIgYW4gZXhjaXRpbmcgaW5mbHVlbmNlLCBzbyB0aGF0IGl0IG91Z2h0IHRvIGJlIHVzZWQgZm9yIG9jY2FzaW9ucyBvZiB0aGUKCQkJCQlraW5kIGF0IHdoaWNoIGF0dGVuZGFuY2UgaGFzIHRoZSBlZmZlY3Qgb2YgcHVyaWZpY2F0aW9uIHJhdGhlciB0aGFuCgkJCQkJCWluc3RydWN0aW9uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEzNDFhIDMzIGZmLjwvbm90ZT4gQW5kCgkJCQkJbGV0IHVzIGFkZCB0aGF0IHRoZSBmbHV0ZSBoYXBwZW5zIHRvIHBvc3Nlc3MgdGhlIGFkZGl0aW9uYWwgcHJvcGVydHkgdGVsbGluZwoJCQkJCWFnYWluc3QgaXRzIHVzZSBpbiBlZHVjYXRpb24gdGhhdCBwbGF5aW5nIGl0IHByZXZlbnRzIHRoZSBlbXBsb3ltZW50IG9mIHNwZWVjaC4KCQkJCQlIZW5jZSBmb3JtZXIgYWdlcyByaWdodGx5IHJlamVjdGVkIGl0cyB1c2UgYnkgdGhlIHlvdW5nIGFuZCB0aGUgZnJlZSwgYWx0aG91Z2gKCQkJCQlhdCBmaXJzdCB0aGV5IGhhZCBlbXBsb3llZCBpdC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNi42IiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yCgkJCQkJYXMgdGhleSBjYW1lIHRvIGhhdmUgbW9yZSBsZWlzdXJlIGJlY2F1c2Ugb2YgdGhlaXIgd2VhbHRoIGFuZCBncmV3IG1vcmUKCQkJCQloaWdoLXNwaXJpdGVkIGFuZCB2YWxvcm91cywgYm90aCBhdCBhIHN0aWxsIGVhcmxpZXIgZGF0ZSBhbmQgYmVjYXVzZSBhZnRlciB0aGUKCQkJCQlQZXJzaWFuIFdhcnMgdGhleSB3ZXJlIGZpbGxlZCB3aXRoIHByaWRlIGFzIGEgcmVzdWx0IG9mIHRoZWlyIGFjaGlldmVtZW50cywgdGhleQoJCQkJCWJlZ2FuIHRvIGVuZ2FnZSBpbiBhbGwgYnJhbmNoZXMgb2YgbGVhcm5pbmcsIG1ha2luZyBubyBkaXN0aW5jdGlvbiBidXQgcHVyc3VpbmcKCQkJCQlyZXNlYXJjaCBmdXJ0aGVyLiBCZWNhdXNlIG9mIHRoaXMgdGhleSBldmVuIGluY2x1ZGVkIGZsdXRlLXBsYXlpbmcgYW1vbmcgdGhlaXIKCQkJCQlzdHVkaWVzOyBmb3IgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiBhIGNlcnRhaW4KCQkJCQljaG9ydXMtbGVhZGVyIHBsYXllZCB0aGUgZmx1dGUgdG8gaGlzIGNob3J1cyBoaW1zZWxmLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSB3ZWFsdGh5IGNpdGl6ZW4gd2hvIHVuZGVydG9vayB0aGUgZHV0eSBvZiBlcXVpcHBpbmcgYW5kCgkJCQkJCXRyYWluaW5nIGEgY2hvcnVzIGZvciBhIHJlbGlnaW91cyBjZWxlYnJhdGlvbiDvvIhlc3BlY2lhbGx5IHRoZQoJCQkJCQlwcm9kdWN0aW9uIG9mIGEgZHJhbWEgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPu+8iSB1c3VhbGx5IGhhZCBhbiBhc3Npc3RhbnQgb2YgbG93ZXIgc3RhdGlvbiB0bwoJCQkJCQlzdXBwbHkgdGhlIGluc3RydW1lbnRhbCBtdXNpYy4gVGhlIG9mZmljZSBvZiBjaG9yZWd1cyBpcyBub3QgZWxzZXdoZXJlCgkJCQkJCXJlZmVycmVkIHRvIGFzIGV4aXN0aW5nIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDExMDY1IiBrZXk9InRnbiw3MDExMDY1Ij5TcGFydGE8L3BsYWNlTmFtZT4uPC9ub3RlPiBhbmQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTMiIGtleT0idGduLDcwMDEzOTMiPkF0aGVuczwvcGxhY2VOYW1lPiBpdCBiZWNhbWUgc28gZmFzaGlvbmFibGUgdGhhdCBhbG1vc3QgdGhlIG1ham9yaXR5IG9mCgkJCQkJZnJlZW1lbiB3ZW50IGluIGZvciBmbHV0ZS1wbGF5aW5nLCBhcyBpcyBzaG93biBieSB0aGUgdGFibGV0IGVyZWN0ZWQgYnkKCQkJCQlUaHJhc2lwcHVzIGFmdGVyIGhhdmluZyBwcm92aWRlZCB0aGUgY2hvcnVzIGZvciBFY3BoYW50aWRlcy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkVjcGhhbnRpZGVzIHdhcyBvbmUgb2YgdGhlIGVhcmxpZXN0IGNvbWljIHBvZXRzOyBUaHJhc2lwcHVzCgkJCQkJCWlzIG5vdCBlbHNld2hlcmUgcmVjb3JkZWQuIFdobyB0aGUgZmx1dGUtcGxheWVyIHdhcyBpcyB1bmtub3duLjwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSI2LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgbGF0ZXIgb24gaXQgY2FtZSB0byBiZQoJCQkJCWRpc2FwcHJvdmVkIG9mIGFzIGEgcmVzdWx0IG9mIGFjdHVhbCBleHBlcmllbmNlLCB3aGVuIG1lbiB3ZXJlIG1vcmUgY2FwYWJsZSBvZgoJCQkJCWp1ZGdpbmcgd2hhdCBtdXNpYyBjb25kdWNlZCB0byB2aXJ0dWUgYW5kIHdoYXQgZGlkIG5vdDsgYW5kIHNpbWlsYXJseSBhbHNvIG1hbnkKCQkJCQlvZiB0aGUgb2xkIGluc3RydW1lbnRzIHdlcmUgZGlzYXBwcm92ZWQgb2YsIGxpa2UgdGhlIHBlY3RpcyBhbmQgdGhlCgkJCQkJCWJhcmJpdG9zPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGVzZSB3ZXJlIG9sZC1mYXNoaW9uZWQgZm9ybXMKCQkJCQkJb2YgdGhlIGx5cmUuPC9ub3RlPiBhbmQgdGhlIGluc3RydW1lbnRzIGRlc2lnbmVkIHRvIGdpdmUgcGxlYXN1cmUgdG8gdGhvc2UKCQkJCQl3aG8gaGVhciBwZW9wbGUgcGxheWluZyB0aGVtLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBwb3NzaWJsZQoJCQkJCQllbWVuZGF0aW9uIG9mIHRoZSBHcmVlayBnaXZlcyDigJh0aG9zZSB3aG8gbGlzdGVuIHRvIHRoZWlyCgkJCQkJCW1vZHVsYXRpb25zLuKAmTwvbm90ZT4gdGhlIHNlcHRhbmdsZSwgdGhlIHRyaWFuZ2xlIGFuZCB0aGUKCQkJCQkJc2FtYnljLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhyZWUgZGlmZmVyZW50IHN0cmluZ2VkCgkJCQkJCWluc3RydW1lbnRzLCB0aGUgbGFzdCBoYXZpbmcgZm91ciBzdHJpbmdzIHN0cmV0Y2hlZCBpbiBhIHRyaWFuZ3VsYXIKCQkJCQkJZnJhbWUuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgbj0iMTM0MWIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBhbGwgdGhlIGluc3RydW1lbnRzIHRoYXQgcmVxdWlyZSBtYW51YWwgc2tpbGwuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNi44IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGluZGVlZCB0aGVyZSBpcyBhIHJlYXNvbmFibGUgZm91bmRhdGlvbiBmb3IgdGhlIHN0b3J5CgkJCQkJdGhhdCB3YXMgdG9sZCBieSB0aGUgYW5jaWVudHMgYWJvdXQgdGhlIGZsdXRlLiBUaGUgdGFsZSBnb2VzIHRoYXQgQXRoZW5hIGZvdW5kIGEKCQkJCQlmbHV0ZSBhbmQgdGhyZXcgaXQgYXdheS4gTm93IGl0IGlzIG5vdCBhIGJhZCBwb2ludCBpbiB0aGUgc3RvcnkgdGhhdCB0aGUgZ29kZGVzcwoJCQkJCWRpZCB0aGlzIG91dCBvZiBhbm5veWFuY2UgYmVjYXVzZSBvZiB0aGUgdWdseSBkaXN0b3J0aW9uIG9mIGhlciBmZWF0dXJlczsgYnV0IGFzCgkJCQkJYSBtYXR0ZXIgb2YgZmFjdCBpdCBpcyBtb3JlIGxpa2VseSB0aGF0IGl0IHdhcyBiZWNhdXNlIGVkdWNhdGlvbiBpbgoJCQkJCWZsdXRlLXBsYXlpbmcgaGFzIG5vIGVmZmVjdCBvbiB0aGUgaW50ZWxsaWdlbmNlLCB3aGVyZWFzIHdlIGF0dHJpYnV0ZSBzY2llbmNlCgkJCQkJYW5kIGFydCB0byBBdGhlbmEuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgc2luY2Ugd2UgcmVqZWN0IHByb2Zlc3Npb25hbCBlZHVjYXRpb24gaW4gdGhlIGluc3RydW1lbnRzCgkJCQkJYW5kIGluIHBlcmZvcm1hbmNlPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgR3JlZWsgc2hvdWxkIHByb2JhYmx5CgkJCQkJCWJlIGFsdGVyZWQgdG8gZ2l2ZSDigJhyZWplY3QsIHNvbWUgaW5zdHJ1bWVudHMgYW5kIHByb2Zlc3Npb25hbAoJCQkJCQllZHVjYXRpb24gaW4gcGVyZm9ybWFuY2Uu4oCZPC9ub3RlPiDvvIhhbmQgd2UgY291bnQKCQkJCQlwZXJmb3JtYW5jZSBpbiBjb21wZXRpdGlvbnMgYXMgcHJvZmVzc2lvbmFsLCBmb3IgdGhlIHBlcmZvcm1lciBkb2VzIG5vdCB0YWtlCgkJCQkJcGFydCBpbiBpdCBmb3IgaGlzIG93biBpbXByb3ZlbWVudCwgYnV0IGZvciBoaXMgaGVhcmVycycgcGxlYXN1cmUsIGFuZCB0aGF0IGEKCQkJCQl2dWxnYXIgcGxlYXN1cmUsIG93aW5nIHRvIHdoaWNoIHdlIGRvIG5vdCBjb25zaWRlciBwZXJmb3JtaW5nIHRvIGJlIHByb3BlciBmb3IKCQkJCQlmcmVlIG1lbiwgYnV0IHNvbWV3aGF0IG1lbmlhbDsgYW5kIGluZGVlZCBwZXJmb3JtZXJzIGRvIGJlY29tZSB2dWxnYXIsIHNpbmNlIHRoZQoJCQkJCW9iamVjdCBhdCB3aGljaCB0aGV5IGFpbSBpcyBhIGxvdyBvbmUsIGFzIHZ1bGdhcml0eSBpbiB0aGUgYXVkaWVuY2UgdXN1YWxseQoJCQkJCWluZmx1ZW5jZXMgdGhlIG11c2ljLCBzbyB0aGF0IGl0IGltcGFydHMgdG8gdGhlIGFydGlzdHMgd2hvIHByYWN0aXNlIGl0IHdpdGggYQoJCQkJCXZpZXcgdG8gc3VpdCB0aGUgYXVkaWVuY2UgYSBzcGVjaWFsIGtpbmQgb2YgcGVyc29uYWxpdHksIGFuZCBhbHNvIG9mIGJvZGlseQoJCQkJCWZyYW1lIGJlY2F1c2Ugb2YgdGhlIG1vdmVtZW50cyByZXF1aXJlZO+8ieKAlDxtaWxlc3RvbmUgZWQ9IlAiIG49IjcuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPndlIG11c3QgdGhlcmVmb3JlIGdpdmUgc29tZSBjb25zaWRlcmF0aW9uIHRvIHR1bmVzCgkJCQkJYW5kIHJoeXRobXMsPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgdG8gdGhlIHF1ZXN0aW9uCgkJCQkJd2hldGhlciBmb3IgZWR1Y2F0aW9uYWwgcHVycG9zZXMgd2UgbXVzdCBlbXBsb3kgYWxsIHRoZSB0dW5lcyBhbmQgYWxsIHRoZQoJCQkJCXJoeXRobXMgb3IgbWFrZSBkaXN0aW5jdGlvbnM7IGFuZCBuZXh0LCB3aGV0aGVyIGZvciB0aG9zZSB3aG8gYXJlIHdvcmtpbmcgYXQKCQkJCQltdXNpYyBmb3IgZWR1Y2F0aW9uIHdlIHNoYWxsIGxheSBkb3duIHRoZSBzYW1lIHJlZ3VsYXRpb24sIG9yIG91Z2h0IHdlIHRvCgkJCQkJZXN0YWJsaXNoIHNvbWUgb3RoZXIgdGhpcmQgb25lIO+8iGluYXNtdWNoIGFzIHdlIHNlZSB0aGF0IHRoZSBmYWN0b3JzIGluCgkJCQkJbXVzaWMgYXJlIG1lbG9keSBhbmQgcmh5dGhtLCBhbmQgaXQgaXMgaW1wb3J0YW50IHRvIG5vdGljZSB3aGF0IGluZmx1ZW5jZSBlYWNoCgkJCQkJb2YgdGhlc2UgaGFzIHVwb24gZWR1Y2F0aW9u77yJLCBhbmQgd2hldGhlciB3ZSBhcmUgdG8gcHJlZmVyIG11c2ljIHdpdGggYQoJCQkJCWdvb2QgbWVsb2R5IG9yIG11c2ljIHdpdGggYSBnb29kIHJoeXRobS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+Tm93IHdlIGNvbnNpZGVyIHRoYXQgbXVjaCBpcyB3ZWxsIHNhaWQgb24gdGhlc2UgbWF0dGVycyBieQoJCQkJCXNvbWUgb2YgdGhlIG11c2ljaWFucyBvZiB0aGUgcHJlc2VudCBkYXkgYW5kIGJ5IHNvbWUgb2YgdGhvc2UgZW5nYWdlZCBpbgoJCQkJCXBoaWxvc29waHkgd2hvIGhhcHBlbiB0byBiZSBleHBlcmllbmNlZCBpbiBtdXNpY2FsIGVkdWNhdGlvbiwgYW5kIHdlIHdpbGwKCQkJCQlhYmFuZG9uIHRoZSBwcmVjaXNlIGRpc2N1c3Npb24gYXMgdG8gZWFjaCBvZiB0aGVzZSBtYXR0ZXJzIGZvciBhbnkgd2hvIHdpc2ggaXQKCQkJCQl0byBzZWVrIGl0IGZyb20gdGhvc2UgdGVhY2hlcnMsIHdoaWxlIGZvciB0aGUgcHJlc2VudCBsZXQgdXMgbGF5IGRvd24gZ2VuZXJhbAoJCQkJCXByaW5jaXBsZXMsIG1lcmVseSBzdGF0aW5nIHRoZSBvdXRsaW5lcyBvZiB0aGUgc3ViamVjdHMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjcuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzaW5jZSB3ZSBhY2NlcHQgdGhlIGNsYXNzaWZpY2F0aW9uIG9mIG1lbG9kaWVzCgkJCQkJbWFkZSBieSBzb21lIHBoaWxvc29waGVycywgYXMgZXRoaWNhbCBtZWxvZGllcywgbWVsb2RpZXMgb2YgYWN0aW9uLCBhbmQKCQkJCQlwYXNzaW9uYXRlIG1lbG9kaWVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiByZXByZXNlbnRhdGl2ZSBvZgoJCQkJCQljaGFyYWN0ZXIsIG9mIGFjdGlvbiBhbmQgb2YgZW1vdGlvbi48L25vdGU+IGRpc3RyaWJ1dGluZyB0aGUgdmFyaW91cwoJCQkJCWhhcm1vbmllcyBhbW9uZyB0aGVzZSBjbGFzc2VzIGFzIGJlaW5nIGluIG5hdHVyZSBha2luIHRvIG9uZSBvciB0aGUgb3RoZXIsIGFuZAoJCQkJCWFzIHdlIHNheSB0aGF0IG11c2ljIG91Z2h0IHRvIGJlIGVtcGxveWVkIG5vdCBmb3IgdGhlIHB1cnBvc2Ugb2Ygb25lIGJlbmVmaXQKCQkJCQl0aGF0IGl0IGNvbmZlcnMgYnV0IG9uIGFjY291bnQgb2Ygc2V2ZXJhbCDvvIhmb3IgaXQgc2VydmVzIHRoZSBwdXJwb3NlCgkJCQkJYm90aCBvZiBlZHVjYXRpb24gYW5kIG9mIHB1cmdhdGlvbuKAlHRoZSB0ZXJtIHB1cmdhdGlvbiB3ZSB1c2UgZm9yIHRoZQoJCQkJCXByZXNlbnQgd2l0aG91dCBleHBsYW5hdGlvbiwgYnV0IHdlIHdpbGwgcmV0dXJuIHRvIGRpc2N1c3MgdGhlIG1lYW5pbmcgdGhhdCB3ZQoJCQkJCWdpdmUgdG8gaXQgbW9yZSBleHBsaWNpdGx5IGluIG91ciB0cmVhdGlzZSBvbiBwb2V0cnk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBQb2V0LiAxNDQ5YiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gUG9ldC4gNjwvYmlibD4KCQkJCQkJdHJhZ2VkeSBpcyBzYWlkIHRvIHB1cmdlIHRoZSBlbW90aW9uIG9mIHBpdHkgYW5kIGZlYXIgYnkgZ2l2aW5nIHRoZW0gYW4KCQkJCQkJb3V0bGV0OyB0aGUgcmVmZXJlbmNlIGhlcmUgaXMgcHJvYmFibHkgdG8gdGhlIGxvc3QgU2Vjb25kIEJvb2sgb2YKCQkJCQkJCTx0aXRsZT5Qb2V0aWNzPC90aXRsZT4uPC9ub3RlPuKAlGFuZCB0aGlyZGx5IGl0IHNlcnZlcyBmb3IKCQkJCQlhbXVzZW1lbnQsIHNlcnZpbmcgdG8gcmVsYXggb3VyIHRlbnNpb24gYW5kIHRvIGdpdmUgcmVzdCBmcm9tIGl077yJLAoJCQkJCQk8bWlsZXN0b25lIG49IjEzNDJhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGVkPSJQIiBuPSI3LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5pdCBpcyBjbGVhciB0aGF0IHdlCgkJCQkJc2hvdWxkIGVtcGxveSBhbGwgdGhlIGhhcm1vbmllcywgeWV0IG5vdCBlbXBsb3kgdGhlbSBhbGwgaW4gdGhlIHNhbWUgd2F5LCBidXQKCQkJCQl1c2UgdGhlIG1vc3QgZXRoaWNhbCBvbmVzIGZvciBlZHVjYXRpb24sIGFuZCB0aGUgYWN0aXZlIGFuZCBwYXNzaW9uYXRlIGtpbmRzIGZvcgoJCQkJCWxpc3RlbmluZyB0byB3aGVuIG90aGVycyBhcmUgcGVyZm9ybWluZyDvvIhmb3IgYW55IGV4cGVyaWVuY2UgdGhhdCBvY2N1cnMKCQkJCQl2aW9sZW50bHkgaW4gc29tZSBzb3VscyBpcyBmb3VuZCBpbiBhbGwsIHRob3VnaCB3aXRoIGRpZmZlcmVudCBkZWdyZWVzIG9mCgkJCQkJaW50ZW5zaXR54oCUZm9yIGV4YW1wbGUgcGl0eSBhbmQgZmVhciwgYW5kIGFsc28gcmVsaWdpb3VzIGV4Y2l0ZW1lbnQ7CgkJCQkJZm9yIHNvbWUgcGVyc29ucyBhcmUgdmVyeSBsaWFibGUgdG8gdGhpcyBmb3JtIG9mIGVtb3Rpb24sIGFuZCB1bmRlciB0aGUKCQkJCQlpbmZsdWVuY2Ugb2Ygc2FjcmVkIG11c2ljIHdlIHNlZSB0aGVzZSBwZW9wbGUsIHdoZW4gdGhleSB1c2UgdHVuZXMgdGhhdAoJCQkJCXZpb2xlbnRseSBhcm91c2UgdGhlIHNvdWwsIGJlaW5nIHRocm93biBpbnRvIGEgc3RhdGUgYXMgaWYgdGhleSBoYWQgcmVjZWl2ZWQKCQkJCQltZWRpY2luYWwgdHJlYXRtZW50IGFuZCB0YWtlbiBhIHB1cmdlOyA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz50aGUgc2FtZSBleHBlcmllbmNlIHRoZW4gbXVzdCBjb21lIGFsc28gdG8gdGhlCgkJCQkJY29tcGFzc2lvbmF0ZSBhbmQgdGhlIHRpbWlkIGFuZCB0aGUgb3RoZXIgZW1vdGlvbmFsIHBlb3BsZSBnZW5lcmFsbHkgaW4gc3VjaAoJCQkJCWRlZ3JlZSBhcyBiZWZhbGxzIGVhY2ggaW5kaXZpZHVhbCBvZiB0aGVzZSBjbGFzc2VzLCBhbmQgYWxsIG11c3QgdW5kZXJnbyBhCgkJCQkJcHVyZ2F0aW9uIGFuZCBhIHBsZWFzYW50IGZlZWxpbmcgb2YgcmVsaWVmOyBhbmQgc2ltaWxhcmx5IGFsc28gdGhlIHB1cmdhdGl2ZQoJCQkJCW1lbG9kaWVzIGFmZm9yZCBoYXJtbGVzcyBkZWxpZ2h0IHRvIHBlb3BsZe+8iS4gVGhlcmVmb3JlIHRob3NlIHdobyBnbyBpbgoJCQkJCWZvciB0aGVhdHJpY2FsIG11c2ljIG11c3QgYmUgc2V0IHRvIGNvbXBldGUgaW4gaGFybW9uaWVzIGFuZCBtZWxvZGllcyBvZiB0aGlzCgkJCQkJa2luZCA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz7vvIhhbmQgc2luY2UgdGhlCgkJCQkJYXVkaWVuY2UgaXMgb2YgdHdvIGNsYXNzZXMsIG9uZSBmcmVlbWVuIGFuZCBlZHVjYXRlZCBwZW9wbGUsIGFuZCB0aGUKCQkJCQkJb3RoZXI8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRoZSB2dWxnYXIgY2xhc3MgY29tcG9zZWQgb2YKCQkJCQltZWNoYW5pY3MgYW5kIGxhYm9yZXJzIGFuZCBvdGhlciBzdWNoIHBlcnNvbnMsIHRoZSBsYXR0ZXIgc29ydCBhbHNvIG11c3QgYmUKCQkJCQlhc3NpZ25lZCBjb21wZXRpdGlvbnMgYW5kIHNob3dzIGZvciByZWxheGF0aW9uOyBhbmQganVzdCBhcyB0aGVpciBzb3VscyBhcmUKCQkJCQl3YXJwZWQgZnJvbSB0aGUgbmF0dXJhbCBzdGF0ZSwgc28gdGhvc2UgaGFybW9uaWVzIGFuZCBtZWxvZGllcyB0aGF0IGFyZSBoaWdobHkKCQkJCQlzdHJ1bmcgYW5kIGlycmVndWxhciBpbiBjb2xvcmF0aW9uPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TYWlkIHRvCgkJCQkJCW1lYW4gZGl2ZXJnZW50IGZyb20gdGhlIHJlZ3VsYXIgc2NhbGUgaW4gaGF2aW5nIHNtYWxsZXIgaW50ZXJ2YWxzLjwvbm90ZT4KCQkJCQlhcmUgZGV2aWF0aW9ucywgYnV0IHBlb3BsZSBvZiBlYWNoIHNvcnQgcmVjZWl2ZSBwbGVhc3VyZSBmcm9tIHdoYXQgaXMgbmF0dXJhbGx5CgkJCQkJc3VpdGVkIHRvIHRoZW0sIG93aW5nIHRvIHdoaWNoIHRoZSBjb21wZXRpdG9ycyBiZWZvcmUgYW4gYXVkaWVuY2Ugb2YgdGhpcyBzb3J0CgkJCQkJbXVzdCBiZSBhbGxvd2VkIHRvIGVtcGxveSBzb21lIHN1Y2gga2luZCBvZiBtdXNpYyBhcyB0aGlz77yJOyA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQgZm9yIGVkdWNhdGlvbiwgYXMgaGFzIGJlZW4gc2FpZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjEzNDJhIDIuPC9ub3RlPiB0aGUgZXRoaWNhbCBjbGFzcyBvZiBtZWxvZGllcwoJCQkJCWFuZCBvZiBoYXJtb25pZXMgbXVzdCBiZSBlbXBsb3llZC4gQW5kIG9mIHRoYXQgbmF0dXJlIGlzIHRoZSBEb3JpYW4gbW9kZSwgYXMgd2UKCQkJCQlzYWlkIGJlZm9yZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+MTM0M2IgMyBmZi48L25vdGU+OyBidXQgd2UgbXVzdAoJCQkJCWFsc28gYWNjZXB0IGFueSBvdGhlciBtb2RlIHRoYXQgdGhvc2Ugd2hvIHRha2UgcGFydCBpbiB0aGUgcHVyc3VpdCBvZiBwaGlsb3NvcGh5CgkJCQkJYW5kIGluIG11c2ljYWwgZWR1Y2F0aW9uIG1heSByZWNvbW1lbmQgdG8gdXMuIFNvY3JhdGVzIGluIHRoZQoJCQkJCQk8dGl0bGU+UmVwdWJsaWM8L3RpdGxlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCTxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBSZXAuIDM5OWEiIHZhbGlkPSJ5ZXMiPlBsYXQuIFJlcC4gMzk5YTwvYmlibD4KCQkJCQk8L25vdGU+IGRvZXMgbm90IGRvIHdlbGwgaW4gYWxsb3dpbmcgb25seSB0aGUgUGhyeWdpYW4gbW9kZSBhbG9uZyB3aXRoIHRoZQoJCQkJCURvcmlhbiwgYW5kIHRoYXQgd2hlbiBoZSBoYXMgcmVqZWN0ZWQgdGhlIGZsdXRlIGFtb25nIGluc3RydW1lbnRzOyA8bWlsZXN0b25lIG49IjEzNDJiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5mb3IgdGhlCgkJCQkJUGhyeWdpYW4gbW9kZSBoYXMgdGhlIHNhbWUgZWZmZWN0IGFtb25nIGhhcm1vbmllcyBhcyB0aGUgZmx1dGUgYW1vbmcKCQkJCQlpbnN0cnVtZW50c+KAlGJvdGggYXJlIHZpb2xlbnRseSBleGNpdGluZyBhbmQgZW1vdGlvbmFsLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGlzIGlzIHNob3duIGJ5IHBvZXRyeTsgZm9yIGFsbCBCYWNjaGlhYwoJCQkJCXZlcnNpZmljYXRpb24gYW5kIGFsbCBtb3ZlbWVudCBvZiB0aGF0IHNvcnQ8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yIHBlcmhhcHMgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs6yzrHOus+HzrXhvbfOsTwvZm9yZWlnbj4gYW5kIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7OuuG9t869zrfPg865z4I8L2ZvcmVpZ24+IGRlbm90ZSBib2RpbHkgbW92ZW1lbnQgYWNjb21wYW55aW5nIHRoZQoJCQkJCQlzb25nOyBvciB0aGV5IG1heSBkZW5vdGUgdGhlIGVtb3Rpb25hbCBmcmVuenkgZXhwcmVzc2VkIGFuZCBzdGltdWxhdGVkIGJ5CgkJCQkJCWl0LiBUaGUgZGl0aHlyYW1iIHdhcyBhIGZvcm0gb2YgcG9ldHJ5IG9mIHRoaXMgY2xhc3MsIG9yaWdpbmFsbHkgY2VsZWJyYXRpbmcKCQkJCQkJdGhlIGJpcnRoIG9mIERpb255c3VzLiBQaGlsb3hlbnVzLCBvbmUgb2YgdGhlIG1vc3QgZmFtb3VzIGRpdGh5cmFtYmljIHBvZXRzLAoJCQkJCQkJPGRhdGVSYW5nZSBhdXRobmFtZT0iLTQzNS8tMzgwIiBmcm9tPSItNDM1IiB0bz0iLTM4MCI+NDM1PC9kYXRlUmFuZ2U+LTM4MCBCLkMuLCBsaXZlZCBhdAoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTMiIGtleT0idGduLDcwMDEzOTMiPkF0aGVuczwvcGxhY2VOYW1lPiwgYW5kIGxhdGVyIGF0IHRoZSBjb3VydAoJCQkJCQlvZiBEaW9ueXNpdXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPi48L25vdGU+CgkJCQkJYmVsb25ncyBwYXJ0aWN1bGFybHkgdG8gdGhlIGZsdXRlIGFtb25nIHRoZSBpbnN0cnVtZW50cywgYW5kIHRoZXNlIG1ldGVycyBmaW5kCgkJCQkJdGhlaXIgc3VpdGFibGUgYWNjb21wYW5pbWVudCBpbiB0dW5lcyBpbiB0aGUgUGhyeWdpYW4gbW9kZSBhbW9uZyB0aGUgaGFybW9uaWVzOgoJCQkJCWZvciBleGFtcGxlIHRoZSBkaXRoeXJhbWIgaXMgYWRtaXR0ZWRseSBoZWxkIHRvIGJlIGEgUGhyeWdpYW4gbWV0ZXIsIGFuZCB0aGUKCQkJCQlleHBlcnRzIG9uIHRoaXMgc3ViamVjdCBhZGR1Y2UgbWFueSBpbnN0YW5jZXMgdG8gcHJvdmUgdGhpcywgcGFydGljdWxhcmx5IHRoZQoJCQkJCWZhY3QgdGhhdCBQaGlsb3hlbnVzIHdoZW4gaGUgYXR0ZW1wdGVkIHRvIGNvbXBvc2UgYSBkaXRoeXJhbWIsIDx0aXRsZT5UaGUKCQkJCQkJTXlzaWFuczwvdGl0bGU+LCBpbiB0aGUgRG9yaWFuIG1vZGUKCQkJCQl3YXMgdW5hYmxlIHRvIGRvIHNvLCBidXQgbWVyZWx5IGJ5IHRoZSBmb3JjZSBvZiBuYXR1cmUgZmVsbCBiYWNrIGFnYWluIGludG8gdGhlCgkJCQkJc3VpdGFibGUgaGFybW9ueSwgdGhlIFBocnlnaWFuLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kCgkJCQkJYWxsIGFncmVlIHRoYXQgdGhlIERvcmlhbiBtb2RlIGlzIG1vcmUKCQkJCQlzZWRhdGUgYW5kIG9mIGEgc3BlY2lhbGx5IG1hbmx5IGNoYXJhY3Rlci4gTW9yZW92ZXIgc2luY2Ugd2UgcHJhaXNlIGFuZCBzYXkgdGhhdAoJCQkJCXdlIG91Z2h0IHRvIHB1cnN1ZSB0aGUgbWVhbiBiZXR3ZWVuIGV4dHJlbWVzLCBhbmQgdGhlIERvcmlhbiBtb2RlIGhhcyB0aGlzIG5hdHVyZSBpbiByZWxhdGlvbiB0byB0aGUKCQkJCQlvdGhlciBoYXJtb25pZXMsIGl0IGlzIGNsZWFyIHRoYXQgaXQgc3VpdHMgdGhlIHlvdW5nZXIgcHVwaWxzIHRvIGJlIGVkdWNhdGVkCgkJCQkJcmF0aGVyIGluIHRoZSBEb3JpYW4gbWVsb2RpZXMuIEJ1dAoJCQkJCXRoZXJlIGFyZSB0d28gb2JqZWN0cyB0byBhaW0gYXQsIHRoZSBwb3NzaWJsZSBhcyB3ZWxsIGFzIHRoZSBzdWl0YWJsZTsgZm9yIHdlCgkJCQkJYXJlIGJvdW5kIHJhdGhlciB0byBhdHRlbXB0IHRoZSB0aGluZ3MgdGhhdCBhcmUgcG9zc2libGUgYW5kIHRob3NlIHRoYXQgYXJlCgkJCQkJc3VpdGFibGUgZm9yIHRoZSBwYXJ0aWN1bGFyIGNsYXNzIG9mIHBlb3BsZSBjb25jZXJuZWQ7PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgaW4gdGhlc2UgbWF0dGVycyBhbHNvIHRoZXJlIGFyZSBkaXZpZGluZyBsaW5lcwoJCQkJCWRyYXduIGJ5IHRoZSBhZ2Vz4oCUZm9yIGluc3RhbmNlLCB0aG9zZSB3aG9zZSBwb3dlcnMgaGF2ZSB3YW5lZCB0aHJvdWdoCgkJCQkJbGFwc2Ugb2YgdGltZSBjYW5ub3QgZWFzaWx5IHNpbmcgdGhlIGhpZ2hseSBzdHJ1bmcgaGFybW9uaWVzLCBidXQgdG8gcGVyc29ucyBvZgoJCQkJCXRoYXQgYWdlIG5hdHVyZSBzdWdnZXN0cyB0aGUgcmVsYXhlZCBoYXJtb25pZXMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjcuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVyZWZvcmUgc29tZSBtdXNpY2FsIGV4cGVydHMgYWxzbyByaWdodGx5IGNyaXRpY2l6ZQoJCQkJCQlTb2NyYXRlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCTxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBSZXAuIDMzOGUiIHZhbGlkPSJ5ZXMiPlBsYXQuIFJlcC4gMzM4ZTwvYmlibD4KCQkJCQk8L25vdGU+IGJlY2F1c2UgaGUgZGlzYXBwcm92ZWQgb2YgdGhlIHJlbGF4ZWQgaGFybW9uaWVzIGZvciBhbXVzZW1lbnQsIHRha2luZwoJCQkJCXRoZW0gdG8gaGF2ZSB0aGUgY2hhcmFjdGVyIG9mIGludG94aWNhdGlvbiwgbm90IGluIHRoZSBzZW5zZSBvZiB0aGUgZWZmZWN0IG9mCgkJCQkJc3Ryb25nIGRyaW5rLCBmb3IgdGhhdCBjbGVhcmx5IGhhcyBtb3JlIHRoZSByZXN1bHQgb2YgbWFraW5nIG1lbiBmcmVuemllZAoJCQkJCXJldmVsbGVycywgYnV0IGFzIGZhaWxpbmcgaW4gcG93ZXIuIEhlbmNlIGV2ZW4gd2l0aCBhIHZpZXcgdG8gdGhlIHBlcmlvZCBvZiBsaWZlCgkJCQkJdGhhdCBpcyB0byBmb2xsb3csIHRoYXQgb2YgdGhlIGNvbXBhcmF0aXZlbHkgb2xkLCBpdCBpcyBwcm9wZXIgdG8gZW5nYWdlIGluIHRoZQoJCQkJCWhhcm1vbmllcyBhbmQgbWVsb2RpZXMgb2YgdGhpcyBraW5kIHRvbywgYW5kIGFsc28gYW55IGtpbmQgb2YgaGFybW9ueSB0aGF0IGlzCgkJCQkJc3VpdGVkIHRvIHRoZSBhZ2Ugb2YgYm95aG9vZCBiZWNhdXNlIGl0IGlzIGNhcGFibGUgb2YgYmVpbmcgYXQgb25jZSBkZWNvcm91cyBhbmQKCQkJCQllZHVjYXRpdmUsIHdoaWNoIHNlZW1zIHRvIGJlIHRoZSBuYXR1cmUgb2YgdGhlIEx5ZGlhbiBtb2RlIG1vc3Qgb2YgYWxsIHRoZQoJCQkJCWhhcm1vbmllcy4gSXQgaXMgY2xlYXIgdGhlcmVmb3JlIHRoYXQgd2Ugc2hvdWxkIGxheSBkb3duIHRoZXNlIHRocmVlIGNhbm9ucyB0bwoJCQkJCWd1aWRlIGVkdWNhdGlvbiwgbW9kZXJhdGlvbiwgcG9zc2liaWxpdHkgYW5kIHN1aXRhYmlsaXR5LjwvcD4KCQkJPC9kaXYxPgoJCTxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMzdhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxMSIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Cb29rIDUgaW4gc29tZSBlZGl0aW9ucy48L25vdGU+Tm93CgkJCQkJbm9ib2R5IHdvdWxkIGRpc3B1dGUgdGhhdCB0aGUgZWR1Y2F0aW9uIG9mIHRoZSB5b3VuZyByZXF1aXJlcyB0aGUgc3BlY2lhbAoJCQkJCWF0dGVudGlvbiBvZiB0aGUgbGF3Z2l2ZXIuIEluZGVlZCB0aGUgbmVnbGVjdCBvZiB0aGlzIGluIHN0YXRlcyBpcyBpbmp1cmlvdXMgdG8KCQkJCQl0aGVpciBjb25zdGl0dXRpb25zOyBmb3IgZWR1Y2F0aW9uIG91Z2h0IHRvIGJlIGFkYXB0ZWQgdG8gdGhlIHBhcnRpY3VsYXIgZm9ybSBvZgoJCQkJCWNvbnN0aXR1dGlvbiwgc2luY2UgdGhlIHBhcnRpY3VsYXIgY2hhcmFjdGVyIGJlbG9uZ2luZyB0byBlYWNoIGNvbnN0aXR1dGlvbiBib3RoCgkJCQkJZ3VhcmRzIHRoZSBjb25zdGl0dXRpb24gZ2VuZXJhbGx5IGFuZCBvcmlnaW5hbGx5IGVzdGFibGlzaGVzIGl04oCUZm9yCgkJCQkJaW5zdGFuY2UgdGhlIGRlbW9jcmF0aWMgc3Bpcml0IHByb21vdGVzIGRlbW9jcmFjeSBhbmQgdGhlIG9saWdhcmNoaWMgc3Bpcml0CgkJCQkJb2xpZ2FyY2h5OyBhbmQgdGhlIGJlc3Qgc3Bpcml0IGFsd2F5cyBjYXVzZXMgYSBiZXR0ZXIgY29uc3RpdHV0aW9uLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5Nb3Jlb3ZlciBpbiByZWdhcmQgdG8gYWxsIHRoZSBmYWN1bHRpZXMgYW5kCgkJCQkJY3JhZnRzIGNlcnRhaW4gZm9ybXMgb2YgcHJlbGltaW5hcnkgZWR1Y2F0aW9uPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgdHJhaW5pbmcgaW4gdGhlaXIgdmFyaW91cyBvcGVyYXRpb25zIGFyZSBuZWNlc3NhcnlzIG8gdGhhdAoJCQkJCW1hbmlmZXN0bHkgdGhpcyBpcyBhbHNvIHJlcXVpc2l0ZSBpbiByZWdhcmQgdG8gdGhlIGFjdGlvbnMgb2YgdmlydHVlLiBBbmQKCQkJCQlpbmFzbXVjaCBhcyB0aGUgZW5kIGZvciB0aGUgd2hvbGUgc3RhdGUgaXMgb25lLCBpdCBpcyBtYW5pZmVzdCB0aGF0IGVkdWNhdGlvbgoJCQkJCWFsc28gbXVzdCBuZWNlc3NhcmlseSBiZSBvbmUgYW5kIHRoZSBzYW1lIGZvciBhbGwgYW5kIHRoYXQgdGhlIHN1cGVyaW50ZW5kZW5jZQoJCQkJCW9mIHRoaXMgbXVzdCBiZSBwdWJsaWMsIGFuZCBub3Qgb24gcHJpdmF0ZSBsaW5lcywgaW4gdGhlIHdheSBpbiB3aGljaCBhdCBwcmVzZW50CgkJCQkJZWFjaCBtYW4gc3VwZXJpbnRlbmRzIHRoZSBlZHVjYXRpb24gb2YgaGlzIG93biBjaGlsZHJlbiwgdGVhY2hpbmcgdGhlbQoJCQkJCXByaXZhdGVseSwgYW5kIHdoYXRldmVyIHNwZWNpYWwgYnJhbmNoIG9mIGtub3dsZWRnZSBoZSB0aGlua3MgZml0LiBCdXQgbWF0dGVycwoJCQkJCW9mIHB1YmxpYyBpbnRlcmVzdCBvdWdodCB0byBiZSB1bmRlciBwdWJsaWMgc3VwZXJ2aXNpb247IGF0IHRoZSBzYW1lIHRpbWUgd2UKCQkJCQlvdWdodCBub3QgdG8gdGhpbmsgdGhhdCBhbnkgb2YgdGhlIGNpdGl6ZW5zIGJlbG9uZ3MgdG8gaGltc2VsZiwgYnV0IHRoYXQgYWxsCgkJCQkJYmVsb25nIHRvIHRoZSBzdGF0ZSwgZm9yIGVhY2ggaXMgYSBwYXJ0IG9mIHRoZSBzdGF0ZSwgYW5kIGl0IGlzIG5hdHVyYWwgZm9yIHRoZQoJCQkJCXN1cGVyaW50ZW5kZW5jZSBvZiB0aGUgc2V2ZXJhbCBwYXJ0cyB0byBoYXZlIHJlZ2FyZCB0byB0aGUgc3VwZXJpbnRlbmRlbmNlIG9mCgkJCQkJdGhlIHdob2xlLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgb25lIG1pZ2h0IHByYWlzZSB0aGUKCQkJCQlTcGFydGFucyBpbiByZXNwZWN0IG9mIHRoaXMsIGZvciB0aGV5IHBheSB0aGUgZ3JlYXRlc3QgYXR0ZW50aW9uIHRvIHRoZSB0cmFpbmluZwoJCQkJCW9mIHRoZWlyIGNoaWxkcmVuLCBhbmQgY29uZHVjdCBpdCBvbiBhIHB1YmxpYyBzeXN0ZW0uPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyBjbGVhciB0aGVuIHRoYXQgdGhlcmUgc2hvdWxkIGJlIGxlZ2lzbGF0aW9uIGFib3V0CgkJCQkJZWR1Y2F0aW9uIGFuZCB0aGF0IGl0IHNob3VsZCBiZSBjb25kdWN0ZWQgb24gYSBwdWJsaWMgc3lzdGVtLiBCdXQgY29uc2lkZXJhdGlvbgoJCQkJCW11c3QgYmUgZ2l2ZW4gdG8gdGhlIHF1ZXN0aW9uLCB3aGF0IGNvbnN0aXR1dGVzIGVkdWNhdGlvbiBhbmQgd2hhdCBpcyB0aGUgcHJvcGVyCgkJCQkJd2F5IHRvIGJlIGVkdWNhdGVkLiBBdCBwcmVzZW50IHRoZXJlIGFyZSBkaWZmZXJlbmNlcyBvZiBvcGluaW9uIGFzIHRvIHRoZSBwcm9wZXIKCQkJCQl0YXNrcyB0byBiZSBzZXQ7IGZvciBhbGwgcGVvcGxlcyBkbyBub3QgYWdyZWUgYXMgdG8gdGhlIHRoaW5ncyB0aGF0IHRoZSB5b3VuZwoJCQkJCW91Z2h0IHRvIGxlYXJuLCBlaXRoZXIgd2l0aCBhIHZpZXcgdG8gdmlydHVlIG9yIHdpdGggYSB2aWV3IHRvIHRoZSBiZXN0IGxpZmUsCgkJCQkJbm9yIGlzIGl0IGNsZWFyIHdoZXRoZXIgdGhlaXIgc3R1ZGllcyBzaG91bGQgYmUgcmVndWxhdGVkIG1vcmUgd2l0aCByZWdhcmQgdG8KCQkJCQlpbnRlbGxlY3Qgb3Igd2l0aCByZWdhcmQgdG8gY2hhcmFjdGVyLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIxLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgY29uZnVzaW5nIHF1ZXN0aW9ucyBhcmlzZSBvdXQgb2YgdGhlIGVkdWNhdGlvbiB0aGF0CgkJCQkJYWN0dWFsbHkgcHJldmFpbHMsIGFuZCBpdCBpcyBub3QgYXQgYWxsIGNsZWFyIHdoZXRoZXIgdGhlIHB1cGlscyBzaG91bGQgcHJhY3Rpc2UKCQkJCQlwdXJzdWl0cyB0aGF0IGFyZSBwcmFjdGljYWxseSBtb3JhbGx5IGVkaWZ5aW5nLCBvciBoaWdoZXIKCQkJCQlhY2NvbXBsaXNobWVudHPigJRmb3IgYWxsIHRoZXNlIHZpZXdzIGhhdmUgd29uIHRoZSBzdXBwb3J0IG9mIHNvbWUKCQkJCQlqdWRnZXM7IDxtaWxlc3RvbmUgbj0iMTMzN2IiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBub3RoaW5nIGlzIGFncmVlZCBhcyByZWdhcmRzIHRoZSBleGVyY2lzZSBjb25kdWNpdmUgdG8KCQkJCQl2aXJ0dWUsIGZvciwgdG8gc3RhcnQgd2l0aCwgYWxsIG1lbiBkbyBub3QgaG9ub3IgdGhlIHNhbWUgdmlydHVlLCBzbyB0aGF0IHRoZXkKCQkJCQluYXR1cmFsbHkgaG9sZCBkaWZmZXJlbnQgb3BpbmlvbnMgaW4gcmVnYXJkIHRvIHRyYWluaW5nIGluIHZpcnR1ZS48bWlsZXN0b25lIGVkPSJQIiBuPSIyLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGlzCgkJCQkJdGhlcmVmb3JlIG5vdCBkaWZmaWN1bHQgdG8gc2VlIHRoYXQgdGhlIHlvdW5nIG11c3QgYmUgdGF1Z2h0IHRob3NlIHVzZWZ1bCBhcnRzCgkJCQkJdGhhdCBhcmUgaW5kaXNwZW5zYWJseSBuZWNlc3Nhcnk7IGJ1dCBpdCBpcyBjbGVhciB0aGF0IHRoZXkgc2hvdWxkIG5vdCBiZSB0YXVnaHQKCQkJCQlhbGwgdGhlIHVzZWZ1bCBhcnRzLCB0aG9zZSBwdXJzdWl0cyB0aGF0IGFyZSBsaWJlcmFsIGJlaW5nIGtlcHQgZGlzdGluY3QgZnJvbQoJCQkJCXRob3NlIHRoYXQgYXJlIGlsbGliZXJhbCwgYW5kIHRoYXQgdGhleSBtdXN0IHBhcnRpY2lwYXRlIGluIHN1Y2ggYW1vbmcgdGhlCgkJCQkJdXNlZnVsIGFydHMgYXMgd2lsbCBub3QgcmVuZGVyIHRoZSBwZXJzb24gd2hvIHBhcnRpY2lwYXRlcyBpbiB0aGVtIHZ1bGdhci4gQQoJCQkJCXRhc2sgYW5kIGFsc28gYW4gYXJ0IG9yIGEgc2NpZW5jZSBtdXN0IGJlIGRlZW1lZCB2dWxnYXIgaWYgaXQgcmVuZGVycyB0aGUgYm9keQoJCQkJCW9yIHNvdWwgb3IgbWluZCBvZiBmcmVlIG1lbiB1c2VsZXNzIGZvciB0aGUgZW1wbG95bWVudHMgYW5kIGFjdGlvbnMgb2YgdmlydHVlLgoJCQkJCUhlbmNlIHdlIGVudGl0bGUgdnVsZ2FyIGFsbCBzdWNoIGFydHMgYXMgZGV0ZXJpb3JhdGUgdGhlIGNvbmRpdGlvbiBvZiB0aGUgYm9keSwKCQkJCQlhbmQgYWxzbyB0aGUgaW5kdXN0cmllcyB0aGF0IGVhcm4gd2FnZXM7IGZvciB0aGV5IG1ha2UgdGhlIG1pbmQgcHJlb2NjdXBpZWQgYW5kCgkJCQkJZGVncmFkZWQuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBldmVuIHdpdGggdGhlIGxpYmVyYWwKCQkJCQlzY2llbmNlcywgYWx0aG91Z2ggaXQgaXMgbm90IGlsbGliZXJhbCB0byB0YWtlIHBhcnQgaW4gc29tZSBvZiB0aGVtIHVwIHRvIGEKCQkJCQlwb2ludCwgdG8gZGV2b3RlIG9uZXNlbGYgdG8gdGhlbSB0b28gYXNzaWR1b3VzbHkgYW5kIGNhcmVmdWxseSBpcyBsaWFibGUgdG8gaGF2ZQoJCQkJCXRoZSBpbmp1cmlvdXMgcmVzdWx0cyBzcGVjaWZpZWQuIEFsc28gaXQgbWFrZXMgbXVjaCBkaWZmZXJlbmNlIHdoYXQgb2JqZWN0IG9uZQoJCQkJCWhhcyBpbiB2aWV3IGluIGEgcHVyc3VpdCBvciBzdHVkeTsgaWYgb25lIGZvbGxvd3MgaXQgZm9yIHRoZSBzYWtlIG9mIG9uZXNlbGYgb3IKCQkJCQlvbmUncyBmcmllbmRzLCBvciBvbiBtb3JhbCBncm91bmRzLCBpdCBpcyBub3QgaWxsaWJlcmFsLDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YnV0IHRoZSBtYW4gd2hvIGZvbGxvd3MgdGhlIHNhbWUgcHVyc3VpdCBiZWNhdXNlIG9mCgkJCQkJb3RoZXIgcGVvcGxlIHdvdWxkIG9mdGVuIGFwcGVhciB0byBiZSBhY3RpbmcgaW4gYSBtZW5pYWwgYW5kIHNlcnZpbGUKCQkJCQkJbWFubmVyLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGJyYW5jaGVzIG9mIHN0dWR5IGF0IHByZXNlbnQKCQkJCQllc3RhYmxpc2hlZCBmYWxsIGludG8gYm90aCBjbGFzc2VzLCBhcyB3YXMgc2FpZCBiZWZvcmUuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4xLjQuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZXJlIGFyZSBwZXJoYXBzIGZvdXIgY3VzdG9tYXJ5CgkJCQkJc3ViamVjdHMgb2YgZWR1Y2F0aW9uLCByZWFkaW5nIGFuZCB3cml0aW5nLCBneW1uYXN0aWNzLCBtdXNpYywgYW5kIGZvdXJ0aCwgd2l0aAoJCQkJCXNvbWUgcGVvcGxlLCBkcmF3aW5nOyByZWFkaW5nIGFuZCB3cml0aW5nIGFuZCBkcmF3aW5nIGJlaW5nIHRhdWdodCBhcyBiZWluZwoJCQkJCXVzZWZ1bCBmb3IgdGhlIHB1cnBvc2VzIG9mIGxpZmUgYW5kIHZlcnkgc2VydmljZWFibGUsIGFuZCBneW1uYXN0aWNzIGFzCgkJCQkJY29udHJpYnV0aW5nIHRvIG1hbmx5IGNvdXJhZ2U7IGJ1dCBhcyB0byBtdXNpYywgaGVyZSBvbmUgbWlnaHQgcmFpc2UgYSBxdWVzdGlvbi4KCQkJCQlGb3IgYXQgcHJlc2VudCBtb3N0IHBlb3BsZSB0YWtlIHBhcnQgaW4gaXQgZm9yIHRoZSBzYWtlIG9mIHBsZWFzdXJlOyBidXQgdGhvc2UsCgkJCQkJd2hvIG9yaWdpbmFsbHkgaW5jbHVkZWQgaXQgaW4gZWR1Y2F0aW9uIGRpZCBzbyBiZWNhdXNlLCBhcyBoYXMgb2Z0ZW4gYmVlbiBzYWlkLAoJCQkJCW5hdHVyZSBpdHNlbGYgc2Vla3MgdG8gYmUgYWJsZSBub3Qgb25seSB0byBlbmdhZ2UgcmlnaHRseSBpbiBidXNpbmVzcyBidXQgYWxzbwoJCQkJCXRvIG9jY3VweSBsZWlzdXJlIG5vYmx5OyBmb3LigJR0byBzcGVhayBhYm91dCBpdCB5ZXQgYWdhaW48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiBCb29rIDcsIDEzMzRhIDItMTAuPC9ub3RlPuKAlHRoaXMKCQkJCQlpcyB0aGUgZmlyc3QgcHJpbmNpcGxlIG9mIGFsbCB0aGluZ3MuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjIuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciBpZiBhbHRob3VnaCBib3RoIGJ1c2luZXNzIGFuZCBsZWlzdXJlIGFyZSBuZWNlc3NhcnksIHlldCBsZWlzdXJlIGlzIG1vcmUKCQkJCQlkZXNpcmFibGUgYW5kIG1vcmUgZnVsbHkgYW4gZW5kIHRoYW4gYnVzaW5lc3MsIHdlIG11c3QgaW5xdWlyZSB3aGF0IGlzIHRoZQoJCQkJCXByb3BlciBvY2N1cGF0aW9uIG9mIGxlaXN1cmUuIEZvciBhc3N1cmVkbHkgaXQgc2hvdWxkIG5vdCBiZSBlbXBsb3llZCBpbiBwbGF5LAoJCQkJCXNpbmNlIGl0IHdvdWxkIGZvbGxvdyB0aGF0IHBsYXkgaXMgb3VyIGVuZCBpbiBsaWZlLiBCdXQgaWYgdGhpcyBpcyBpbXBvc3NpYmxlLAoJCQkJCWFuZCBzcG9ydHMgc2hvdWxkIHJhdGhlciBiZSBlbXBsb3llZCBpbiBvdXIgdGltZXMgb2YgYnVzaW5lc3Mg77yIZm9yIGEKCQkJCQltYW4gd2hvIGlzIGF0IHdvcmsgbmVlZHMgcmVzdCwgYW5kIHJlc3QgaXMgdGhlIG9iamVjdCBvZiBwbGF5LCB3aGlsZSBidXNpbmVzcyBpcwoJCQkJCWFjY29tcGFuaWVkIGJ5IHRvaWwgYW5kIGV4ZXJ0aW9u77yJLCBpdCBmb2xsb3dzIHRoYXQgaW4gaW50cm9kdWNpbmcKCQkJCQlzcG9ydHMgd2UgbXVzdCB3YXRjaCB0aGUgcmlnaHQgb3Bwb3J0dW5pdHkgZm9yIHRoZWlyIGVtcGxveW1lbnQsIHNpbmNlIHdlIGFyZQoJCQkJCWFwcGx5aW5nIHRoZW0gdG8gc2VydmUgYXMgbWVkaWNpbmU7IGZvciB0aGUgYWN0aXZpdHkgb2YgcGxheSBpcyBhIHJlbGF4YXRpb24gb2YKCQkJCQl0aGUgc291bCwgYW5kIHNlcnZlcyBhcyByZWNyZWF0aW9uIGJlY2F1c2Ugb2YgaXRzIHBsZWFzYW50bmVzcy4gPG1pbGVzdG9uZSBuPSIxMzM4YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGxlaXN1cmUgc2VlbXMgaXRzZWxmIHRvCgkJCQkJY29udGFpbiBwbGVhc3VyZSBhbmQgaGFwcGluZXNzIGFuZCBmZWxpY2l0eSBvZiBsaWZlLiBBbmQgdGhpcyBpcyBub3QgcG9zc2Vzc2VkCgkJCQkJYnkgdGhlIGJ1c3kgYnV0IGJ5IHRoZSBsZWlzdXJlZDsgZm9yIHRoZSBidXN5IG1hbiBidXNpZXMgaGltc2VsZiBmb3IgdGhlIHNha2Ugb2YKCQkJCQlzb21lIGVuZCBhcyBub3QgYmVpbmcgaW4gaGlzIHBvc3Nlc3Npb24sIGJ1dCBoYXBwaW5lc3MgaXMgYW4gZW5kIGFjaGlldmVkLCB3aGljaAoJCQkJCWFsbCBtZW4gdGhpbmsgaXMgYWNjb21wYW5pZWQgYnkgcGxlYXN1cmUgYW5kIG5vdCBieSBwYWluLiBCdXQgYWxsIG1lbiBkbyBub3QgZ28KCQkJCQlvbiB0byBkZWZpbmUgdGhpcyBwbGVhc3VyZSBpbiB0aGUgc2FtZSB3YXksIGJ1dCBhY2NvcmRpbmcgdG8gdGhlaXIgdmFyaW91cwoJCQkJCW5hdHVyZXMgYW5kIHRvIHRoZWlyIG93biBjaGFyYWN0ZXJzLCBhbmQgdGhlIHBsZWFzdXJlIHdpdGggd2hpY2ggdGhlIGJlc3QgbWFuCgkJCQkJdGhpbmtzIHRoYXQgaGFwcGluZXNzIGlzIGNvbmpvaW5lZCBpcyB0aGUgYmVzdCBwbGVhc3VyZSBhbmQgdGhlIG9uZSBhcmlzaW5nIGZyb20KCQkJCQl0aGUgbm9ibGVzdCBzb3VyY2VzLiBTbyB0aGF0IGl0IGlzIGNsZWFyIHRoYXQgc29tZSBzdWJqZWN0cyBtdXN0IGJlIGxlYXJudCBhbmQKCQkJCQlhY3F1aXJlZCBtZXJlbHkgd2l0aCBhIHZpZXcgdG8gdGhlIHBsZWFzdXJlIGluIHRoZWlyIHB1cnN1aXQsIGFuZCB0aGF0IHRoZXNlCgkJCQkJc3R1ZGllcyBhbmQgdGhlc2UgYnJhbmNoZXMgb2YgbGVhcm5pbmcgYXJlIGVuZHMgaW4gdGhlbXNlbHZlcywgd2hpbGUgdGhlIGZvcm1zCgkJCQkJb2YgbGVhcm5pbmcgcmVsYXRlZCB0byBidXNpbmVzcyBhcmUgc3R1ZGllZCBhcyBuZWNlc3NhcnkgYW5kIGFzIG1lYW5zIHRvIG90aGVyCgkJCQkJdGhpbmdzLiA8bWlsZXN0b25lIGVkPSJQIiBuPSIyLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5IZW5jZSBvdXIgcHJlZGVjZXNzb3JzCgkJCQkJaW5jbHVkZWQgbXVzaWMgaW4gZWR1Y2F0aW9uIG5vdCBhcyBhIG5lY2Vzc2l0eSDvvIhmb3IgdGhlcmUgaXMgbm90aGluZwoJCQkJCW5lY2Vzc2FyeSBhYm91dCBpdO+8iSwgbm9yIGFzIHVzZWZ1bCDvvIhpbiB0aGUgd2F5IGluIHdoaWNoCgkJCQkJcmVhZGluZyBhbmQgd3JpdGluZyBhcmUgdXNlZnVsIGZvciBidXNpbmVzcyBhbmQgZm9yIGhvdXNlaG9sZCBtYW5hZ2VtZW50IGFuZCBmb3IKCQkJCQlhY3F1aXJpbmcgbGVhcm5pbmcgYW5kIGZvciBtYW55IHB1cnN1aXRzIG9mIGNpdmlsIGxpZmUsIHdoaWxlIGRyYXdpbmcgYWxzbyBzZWVtcwoJCQkJCXRvIGJlIHVzZWZ1bCBpbiBtYWtpbmcgdXMgYmV0dGVyIGp1ZGdlcyBvZiB0aGUgd29ya3Mgb2YgYXJ0aXN0c++8iSwgbm9yCgkJCQkJeWV0IGFnYWluIGFzIHdlIHB1cnN1ZSBneW1uYXN0aWNzLDxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+Zm9yCgkJCQkJdGhlIHNha2Ugb2YgaGVhbHRoIGFuZCBzdHJlbmd0aCDvvIhmb3Igd2UgZG8gbm90IHNlZSBlaXRoZXIgb2YgdGhlc2UKCQkJCQl0aGluZ3MgcHJvZHVjZWQgYXMgYSByZXN1bHQgb2YgbXVzaWPvvIk7IGl0IHJlbWFpbnMgdGhlcmVmb3JlIHRoYXQgaXQgaXMKCQkJCQl1c2VmdWwgYXMgYSBwYXN0aW1lIGluIGxlaXN1cmUsIHdoaWNoIGlzIGV2aWRlbnRseSB0aGUgcHVycG9zZSBmb3Igd2hpY2ggcGVvcGxlCgkJCQkJYWN0dWFsbHkgaW50cm9kdWNlIGl0LCBmb3IgdGhleSByYW5rIGl0IGFzIGEgZm9ybSBvZiBwYXN0aW1lIHRoYXQgdGhleSB0aGluawoJCQkJCXByb3BlciBmb3IgZnJlZSBtZW4uIEZvciB0aGlzIHJlYXNvbiBIb21lciB3cm90ZSB0aHVzOiA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9ImRhY3R5bGljIj5CdXQgaGltIGFsb25lPC9sPgoJCQkJCQk8bD4nVGlzIG1lZXQgdG8gc3VtbW9uIHRvIHRoZSBmZXN0YWwgYmFucXVldDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBsaW5lIGlzIG5vdCBpbiBvdXIgPHRpdGxlPk9keXNzZXk8L3RpdGxlPiwgYnV0CgkJCQkJCQkJYXBwYXJlbnRseSBmb2xsb3dlZCA8YmlibCBkZWZhdWx0PSJOTyIgbj0iSG9tLiBPZC4gMTcuMzgzIiB2YWxpZD0ieWVzIj5Ib20uIE9kLjE3LjM4MzwvYmlibD4uCgkJCQkJCQkJVGhlIHBhc3NhZ2UgcnVucyDvvIgzODIgZmYu77yJOiA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQkJCQk8bCBtZXQ9ImRhY3R5bGljIj4KCQkJCQkJCQkJCTxmb3JlaWduIGxhbmc9ImdyZWVrIj7PhOG9t8+CIM6z4b2wz4EgzrThvbQgzr7OteG/ls69zr/OvSDOus6xzrvOteG/liDhvITOu867zr/OuM61zr0KCQkJCQkJCQkJCQnOseG9kM+E4b24z4Ig4byQz4DOtc67zrjhvbzOvTwvZm9yZWlnbj4KCQkJCQkJCQkJPC9sPgoJCQkJCQkJCQk8bD4KCQkJCQkJCQkJCTxmb3JlaWduIGxhbmc9ImdyZWVrIj7hvITOu867zr/OvSDOs+KAmSwgzrXhvLAgzrzhvbQgz4Thv7bOvSDOv+G8swoJCQkJCQkJCQkJCc60zrfOvM65zr/Otc+BzrPOv+G9tiDhvJTOsc+DzrksPC9mb3JlaWduPgoJCQkJCQkJCQk8L2w+CgkJCQkJCQkJCTxsPgoJCQkJCQkJCQkJPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs684b2xzr3PhM65zr0g4byiIOG8sM63z4Thv4bPgc6xIM66zrHOuuG/ts69IOG8ogoJCQkJCQkJCQkJCc+E4b2zzrrPhM6/zr3OsSDOtM6/4b27z4HPic69LDwvZm9yZWlnbj4KCQkJCQkJCQkJPC9sPgoJCQkJCQkJCQk8bD4KCQkJCQkJCQkJCTxmb3JlaWduIGxhbmc9ImdyZWVrIj7hvKIgzrrOseG9tiDOuOG9s8+Dz4DOuc69IOG8gM6/zrnOtOG9uc69LCDhvYUgzrrOtc69CgkJCQkJCQkJCQkJz4ThvbPPgc+A4b+Dz4POuc69IOG8gM614b23zrTPic69OzwvZm9yZWlnbj4KCQkJCQkJCQkJPC9sPgoJCQkJCQkJCTwvcXVvdGU+PC9ub3RlPjs8L2w+CgkJCQkJPC9xdW90ZT4gYW5kIGFmdGVyIHRoZXNlIHdvcmRzIGhlIHNwZWFrcyBvZiBjZXJ0YWluIG90aGVycyA8cXVvdGUgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBtZXQ9ImRhY3R5bGljIj5XaG8gY2FsbCB0aGUgYmFyZCB0aGF0IGhlIG1heSBnbGFkZGVuIGFsbC48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBmb3VydGggbGluZSBxdW90ZWQgY29ycmVzcG9uZHMgdG8KCQkJCQkJCQl0aGlzLCBidXQgbm90IGV4YWN0bHkuPC9ub3RlPjwvbD4KCQkJCQk8L3F1b3RlPiBBbmQgYWxzbyBpbiBvdGhlciB2ZXJzZXMgT2R5c3NldXMgc2F5cyB0aGF0IHRoaXMgaXMgdGhlIGJlc3QgcGFzdGltZSwKCQkJCQl3aGVuLCBhcyBtZW4gYXJlIGVuam95aW5nIGdvb2QgY2hlZXIsIDxxdW90ZSB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIG1ldD0iZGFjdHlsaWMiPlRoZSBiYW5xdWV0ZXJzLCBzZWF0ZWQgaW4gb3JkZXIgZHVlPC9sPgoJCQkJCQk8bD5UaHJvdWdob3V0IHRoZSBoYWxsLCBtYXkgaGVhciBhIG1pbnN0cmVsIHNpbmcuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iSG9tLiBPZC4gOS41IiB2YWxpZD0ieWVzIj5Ib20uIE9kLgoJCQkJCQkJOS41LTY8L2JpYmw+Ljwvbm90ZT48L2w+CgkJCQkJPC9xdW90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSIzLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGlzCgkJCQkJY2xlYXIgdGhlcmVmb3JlIHRoYXQgdGhlcmUgaXMgYSBmb3JtIG9mIGVkdWNhdGlvbiBpbiB3aGljaCBib3lzIHNob3VsZCBiZQoJCQkJCXRyYWluZWQgbm90IGJlY2F1c2UgaXQgaXMgdXNlZnVsIG9yIG5lY2Vzc2FyeSBidXQgYXMgYmVpbmcgbGliZXJhbCBhbmQgbm9ibGU7CgkJCQkJdGhvdWdoIHdoZXRoZXIgdGhlcmUgaXMgb25lIHN1Y2ggc3ViamVjdCBvZiBlZHVjYXRpb24gb3Igc2V2ZXJhbCwgYW5kIHdoYXQgdGhlc2UKCQkJCQlhcmUgYW5kIGhvdyB0aGV5IGFyZSB0byBiZSBwdXJzdWVkLCBtdXN0IGJlIGRpc2N1c3NlZCBsYXRlciw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgcHJvbWlzZSBpcyBub3QgZnVsZmlsbGVkLjwvbm90ZT4gYnV0IGFzIGl0IGlzIHdlIGhhdmUKCQkJCQltYWRlIHRoaXMgbXVjaCBwcm9ncmVzcyBvbiB0aGUgd2F5LCB0aGF0IHdlIGhhdmUgc29tZSB0ZXN0aW1vbnkgZXZlbiBmcm9tIHRoZQoJCQkJCWFuY2llbnRzLCBkZXJpdmVkIGZyb20gdGhlIGNvdXJzZXMgb2YgZWR1Y2F0aW9uIHdoaWNoIHRoZXkgZm91bmRlZOKAlGZvcgoJCQkJCXRoZSBwb2ludCBpcyBwcm92ZWQgYnkgbXVzaWMuIEFuZCBpdCBpcyBhbHNvIGNsZWFyIHRoYXQgc29tZSBvZiB0aGUgdXNlZnVsCgkJCQkJc3ViamVjdHMgYXMgd2VsbCBvdWdodCB0byBiZSBzdHVkaWVkIGJ5IHRoZSB5b3VuZyBub3Qgb25seSBiZWNhdXNlIG9mIHRoZWlyCgkJCQkJdXRpbGl0eSwgbGlrZSB0aGUgc3R1ZHkgb2YgcmVhZGluZyBhbmQgd3JpdGluZywgYnV0IGFsc28gYmVjYXVzZSB0aGV5IG1heSBsZWFkCgkJCQkJb24gdG8gbWFueSBvdGhlciBicmFuY2hlcyBvZiBrbm93bGVkZ2U7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBzaW1pbGFybHkgdGhleSBzaG91bGQgc3R1ZHkgZHJhd2luZyBub3QgaW4gb3JkZXIgdGhhdAoJCQkJCXRoZXkgbWF5IG5vdCBnbyB3cm9uZyBpbiB0aGVpciBwcml2YXRlIHB1cmNoYXNlcyBhbmQgbWF5IGF2b2lkIGJlaW5nIGNoZWF0ZWQgaW4KCQkJCQlidXlpbmcgYW5kIHNlbGxpbmcgZnVybml0dXJlLCA8bWlsZXN0b25lIG49IjEzMzhiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5idXQgcmF0aGVyIGJlY2F1c2UgdGhpcyBzdHVkeSBtYWtlcyBhIG1hbgoJCQkJCW9ic2VydmFudCBvZiBib2RpbHkgYmVhdXR5OyBhbmQgdG8gc2VlayBmb3IgdXRpbGl0eSBldmVyeXdoZXJlIGlzIGVudGlyZWx5CgkJCQkJdW5zdWl0ZWQgdG8gbWVuIHRoYXQgYXJlIGdyZWF0LXNvdWxlZCBhbmQgZnJlZS4gQW5kIHNpbmNlIGl0IGlzIHBsYWluIHRoYXQKCQkJCQllZHVjYXRpb24gYnkgaGFiaXQgbXVzdCBjb21lIGJlZm9yZSBlZHVjYXRpb24gYnkgcmVhc29uLCBhbmQgdHJhaW5pbmcgb2YgdGhlCgkJCQkJYm9keSBiZWZvcmUgdHJhaW5pbmcgb2YgdGhlIG1pbmQsIGl0IGlzIGNsZWFyIGZyb20gdGhlc2UgY29uc2lkZXJhdGlvbnMgdGhhdCB0aGUKCQkJCQlib3lzIG11c3QgYmUgaGFuZGVkIG92ZXIgdG8gdGhlIGNhcmUgb2YgdGhlIHdyZXN0bGluZy1tYXN0ZXIgYW5kIHRoZSB0cmFpbmVyOwoJCQkJCWZvciB0aGUgbGF0dGVyIGltcGFydHMgYSBjZXJ0YWluIHF1YWxpdHkgdG8gdGhlIGhhYml0IG9mIHRoZSBib2R5IGFuZCB0aGUgZm9ybWVyCgkJCQkJdG8gaXRzIGFjdGlvbnMuPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgYXQgdGhlIHByZXNlbnQgdGltZSBzb21lIG9mIHRoZSBzdGF0ZXMgcmVwdXRlZCB0byBwYXkgdGhlCgkJCQkJZ3JlYXRlc3QgYXR0ZW50aW9uIHRvIGNoaWxkcmVuIHByb2R1Y2UgaW4gdGhlbSBhbiBhdGhsZXRpYyBoYWJpdDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBwcmVtYXR1cmUgYW5kIGRpc3Byb3BvcnRpb25hdGUgbXVzY3VsYXIKCQkJCQkJZGV2ZWxvcG1lbnQsIGRpcmVjdGVkIHRvIHNvbWUgcGFydGljdWxhciBjb21wZXRpdGlvbi4gQ2YuIDEyODhiIDEyCgkJCQkJCWZmLjwvbm90ZT4gdG8gdGhlIGRldHJpbWVudCBvZiB0aGVpciBib2RpbHkgZm9ybSBhbmQgZ3Jvd3RoLCB3aGlsZSB0aGUKCQkJCQlTcGFydGFucyBhbHRob3VnaCB0aGV5IGhhdmUgYXZvaWRlZCB0aGlzIGVycm9yIHlldCBtYWtlIHRoZWlyIGJveXMgYW5pbWFsIGluCgkJCQkJbmF0dXJlIGJ5IHRoZWlyIGxhYm9yaW91cyBleGVyY2lzZXMsIGluIHRoZSBiZWxpZWYgdGhhdCB0aGlzIGlzIG1vc3QKCQkJCQljb250cmlidXRvcnkgdG8gbWFubHkgY291cmFnZS4gWWV0LCBhcyBoYXMgb2Z0ZW4gYmVlbiBzYWlkLCBpdCBpcyBub3QgcmlnaHQgdG8KCQkJCQlyZWd1bGF0ZSBlZHVjYXRpb24gd2l0aCBhIHZpZXcgdG8gb25lIHZpcnR1ZSBvbmx5LCBvciB0byB0aGlzIG9uZSBtb3N0IG9mIGFsbDsKCQkJCQlpbmRlZWQgdGhleSBkbyBub3QgZXZlbiBpbnZlc3RpZ2F0ZSB0aGUgcXVlc3Rpb24gd2hldGhlciB0aGlzIHZpcnR1ZSBpcyB0byBiZQoJCQkJCWhhZCBpbiB2aWV3IGF0IGFsbC4gRm9yIG5laXRoZXIgaW4gdGhlIGxvd2VyIGFuaW1hbHMgbm9yIGluIHRoZSBjYXNlIG9mIGZvcmVpZ24KCQkJCQlyYWNlcyBkbyB3ZSBzZWUgdGhhdCBjb3VyYWdlIGdvZXMgd2l0aCB0aGUgd2lsZGVzdCwgYnV0IHJhdGhlciB3aXRoIHRoZSBnZW50bGVyCgkJCQkJYW5kIGxpb24tbGlrZSB0ZW1wZXJhbWVudHMuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gSEEgNjI5Yi44Ij5BcmlzdG90LiBIaXN0LiBBbi4gNjI5YiA4PC9iaWJsPiDvvIh0aGUKCQkJCQkJbGlvbiBpcyBnZW50bGUgZXhjZXB0IHdoZW4gaHVuZ3J577yJOyA8YmlibCBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gU29waC4gMjMxYSIgdmFsaWQ9InllcyI+UGxhdC4gU29waC4gMjMxYTwvYmlibD4g77yIdGhlIGRvZyB0aGUgZ2VudGxlc3Qgb2YKCQkJCQkJYW5pbWFsc++8iS48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBlZD0iUCIgbj0iMy40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZXJlIGFyZSBtYW55PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3JlaWduIHJhY2VzIGluY2xpbmVkIHRvIG11cmRlciBhbmQgY2FubmliYWxpc20sCgkJCQkJZm9yIGV4YW1wbGUgYW1vbmcgdGhlIHRyaWJlcyBvZiB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2MTkiIGtleT0idGduLDcwMTY2MTkiPkJsYWNrCgkJCQkJCVNlYTwvcGxhY2VOYW1lPiB0aGUgQWNoYWVhbnMgYW5kIEhlbmlvY2hpLCBhbmQgb3RoZXJzIG9mIHRoZSBtYWlubGFuZCByYWNlcywKCQkJCQlzb21lIGluIHRoZSBzYW1lIGRlZ3JlZSBhcyB0aG9zZSBuYW1lZCBhbmQgc29tZSBtb3JlLCB3aGljaCBhbHRob3VnaCBwaXJhdGljYWwKCQkJCQloYXZlIGdvdCBubyBzaGFyZSBvZiBtYW5seSBjb3VyYWdlLiBBbmQgYWdhaW4gd2Uga25vdyB0aGF0IGV2ZW4gdGhlIFNwYXJ0YW5zLAoJCQkJCWFsdGhvdWdoIHNvIGxvbmcgYXMgdGhleSBwZXJzaXN0ZWQgYnkgdGhlbXNlbHZlcyBpbiB0aGVpciBsYWJvcmlvdXMgZXhlcmNpc2VzCgkJCQkJdGhleSBzdXJwYXNzZWQgYWxsIG90aGVyIHBlb3BsZXMsIG5vdyBmYWxsIGJlaGluZCBvdGhlcnMgYm90aCBpbiBneW1uYXN0aWMgYW5kCgkJCQkJaW4gbWlsaXRhcnkgY29udGVzdHM7IGZvciB0aGV5IHVzZWQgbm90IHRvIGV4Y2VsIGJlY2F1c2UgdGhleSBleGVyY2lzZWQgdGhlaXIKCQkJCQl5b3VuZyBtZW4gaW4gdGhpcyBmYXNoaW9uIGJ1dCBvbmx5IGJlY2F1c2UgdGhleSB0cmFpbmVkIGFuZCB0aGVpciBhZHZlcnNhcmllcwoJCQkJCWRpZCBub3QuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjMuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkNvbnNlcXVlbnRseSBob25vciBhbmQgbm90CgkJCQkJYW5pbWFsIGZlcm9jaXR5IHNob3VsZCBwbGF5IHRoZSBmaXJzdCBwYXJ0OyBmb3IgaXQgaXMgbm90IGEgd29sZiBub3Igb25lIG9mIHRoZQoJCQkJCW90aGVyIHdpbGQgYW5pbWFscyB0aGF0IHdpbGwgdmVudHVyZSB1cG9uIGFueSBub2JsZSBoYXphcmQsIGJ1dCByYXRoZXIgYSBnb29kCgkJCQkJbWFuLiBCdXQgdGhvc2Ugd2hvIGxldCBib3lzIHB1cnN1ZSB0aGVzZSBoYXJkIGV4ZXJjaXNlcyB0b28gbXVjaCBhbmQgdHVybiB0aGVtCgkJCQkJb3V0IHVudHJhaW5lZCBpbiBuZWNlc3NhcnkgdGhpbmdzIGluIHJlYWwgdHJ1dGggcmVuZGVyIHRoZW0gdnVsZ2FyLCBtYWtpbmcgdGhlbQoJCQkJCWF2YWlsYWJsZSBmb3Igc3RhdGVzbWFuc2hpcCB0byB1c2UgZm9yIG9uZSB0YXNrIG9ubHksIGFuZCBldmVuIGZvciB0aGlzIHRhc2sKCQkJCQl0cmFpbmluZyB0aGVtIHdvcnNlIHRoYW4gb3RoZXJzIGRvLCBhcyBvdXIgYXJndW1lbnQgcHJvdmVzLiBBbmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgc2VudGVuY2Ugd291bGQgY29tZSBiZXR0ZXIgYXQgdGhlIGVuZCBvZgoJCQkJCQkzLjQuPC9ub3RlPiB3ZSBtdXN0IG5vdCBqdWRnZSB0aGVtIGZyb20gdGhlaXIgZm9ybWVyIGFjaGlldmVtZW50cyBidXQgZnJvbQoJCQkJCXRoZSBmYWN0cyBvZiB0b2RheTsgZm9yIHRoZXkgaGF2ZSByaXZhbHMgaW4gdGhlaXIgZWR1Y2F0aW9uIG5vdywgYnV0IHRoZXkgdXNlZAoJCQkJCXRvIGhhdmUgbm9uZSBiZWZvcmUuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyB0aGVyZWZvcmUgYWdyZWVkIHRoYXQgd2Ugc2hvdWxkIGVtcGxveSBneW1uYXN0aWMKCQkJCQl0cmFpbmluZywgYW5kIGhvdyB3ZSBzaG91bGQgZW1wbG95IGl0LiBGb3IgdW50aWwgcHViZXJ0eSB3ZSBzaG91bGQgYXBwbHkgbGlnaHRlcgoJCQkJCWV4ZXJjaXNlcywgZm9yYmlkZGluZyBoYXJkIGRpZXQgYW5kIHNldmVyZSBleGVydGlvbnMsIGluIG9yZGVyIHRoYXQgbm90aGluZyBtYXkKCQkJCQloaW5kZXIgdGhlIGdyb3d0aDsgPG1pbGVzdG9uZSBuPSIxMzM5YSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+Zm9yIHRoZXJlIGlzIG5vIHNtYWxsIHByb29mIHRoYXQgdG9vIHNldmVyZQoJCQkJCXRyYWluaW5nIGNhbiBwcm9kdWNlIHRoaXMgcmVzdWx0IGluIHRoZSBmYWN0IHRoYXQgaW4gdGhlIGxpc3Qgb2YgT2x5bXBpYyB2aWN0b3JzCgkJCQkJb25lIHdvdWxkIG9ubHkgZmluZCB0d28gb3IgdGhyZWUgcGVyc29ucyB3aG8gaGF2ZSB3b24gYm90aCBhcyBtZW4gYW5kIGFzIGJveXMsCgkJCQkJYmVjYXVzZSB3aGVuIHBlb3BsZSBnbyBpbnRvIHRyYWluaW5nIGluIHlvdXRoIHRoZSBzZXZlcmUgZXhlcmNpc2VzIHJvYiB0aGVtIG9mCgkJCQkJdGhlaXIgc3RyZW5ndGguIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCB3aGVuIHRoZXkgaGF2ZQoJCQkJCXNwZW50IHRocmVlIHllYXJzIGFmdGVyIHB1YmVydHkgdXBvbiB0aGVpciBvdGhlciBzdHVkaWVzLCB0aGVuIGl0IGlzIHN1aXRhYmxlIHRvCgkJCQkJb2NjdXB5IHRoZSBuZXh0IHBlcmlvZCBvZiBsaWZlIHdpdGggbGFib3Jpb3VzIGV4ZXJjaXNlcyBhbmQgc3RyaWN0IHRyYWluaW5nCgkJCQkJCWRpZXQ8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gY29tcHVsc2lvbiB0byBlYXQgdmVyeSBsYXJnZQoJCQkJCQlyYXRpb25zIG9mIHByZXNjcmliZWQgZm9vZOKAlHRoZSBHcmVlayB3YXkgb2YgdHJhaW5pbmcuPC9ub3RlPjsgZm9yCgkJCQkJaXQgaXMgd3JvbmcgdG8gd29yayBoYXJkIHdpdGggdGhlIG1pbmQgYW5kIHRoZSBib2R5IGF0IHRoZSBzYW1lIHRpbWU7IGZvciBpdCBpcwoJCQkJCXRoZSBuYXR1cmUgb2YgdGhlIHR3byBkaWZmZXJlbnQgc29ydHMgb2YgZXhlcnRpb24gdG8gcHJvZHVjZSBvcHBvc2l0ZSBlZmZlY3RzLAoJCQkJCWJvZGlseSB0b2lsIGltcGVkaW5nIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgbWluZCBhbmQgbWVudGFsIHRvaWwgdGhhdCBvZiB0aGUKCQkJCQkJYm9keS48bWlsZXN0b25lIGVkPSJQIiBuPSI0LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFib3V0IG11c2ljIG9uIHRoZSBvdGhlciBoYW5kIHdlIGhhdmUgcHJldmlvdXNseSByYWlzZWQgc29tZQoJCQkJCXF1ZXN0aW9ucyBpbiB0aGUgY291cnNlIG9mIG91ciBhcmd1bWVudCwgYnV0IGl0IGlzIHdlbGwgdG8gdGFrZSB0aGVtIHVwIGFnYWluCgkJCQkJYW5kIGNhcnJ5IHRoZW0gZnVydGhlciBub3csIGluIG9yZGVyIHRoYXQgdGhpcyBtYXkgZ2l2ZSB0aGUga2V5IHNvIHRvIHNwZWFrIGZvcgoJCQkJCXRoZSBwcmluY2lwbGVzIHdoaWNoIG9uZSBtaWdodCBhZHZhbmNlIGluIHByb25vdW5jaW5nIGFib3V0IGl0LiBGb3IgaXQgaXMgbm90CgkJCQkJZWFzeSB0byBzYXkgcHJlY2lzZWx5IHdoYXQgcG90ZW5jeSBpdCBwb3NzZXNzZXMsIG5vciB5ZXQgZm9yIHRoZSBzYWtlIG9mIHdoYXQKCQkJCQlvYmplY3Qgb25lIHNob3VsZCBwYXJ0aWNpcGF0ZSBpbiBpdOKAlHdoZXRoZXIgZm9yIGFtdXNlbWVudCBhbmQKCQkJCQlyZWxheGF0aW9uLCBhcyBvbmUgaW5kdWxnZXMgaW4gc2xlZXAgYW5kIGRlZXAgZHJpbmtpbmcg77yIZm9yIHRoZXNlIGluCgkJCQkJdGhlbXNlbHZlcyBhcmUgbm90IHNlcmlvdXMgcHVyc3VpdHMgYnV0IG1lcmVseSBwbGVhc2FudCwgYW5kIOKAmHJlbGF4CgkJCQkJb3VyIGNhcmUs4oCZIGFzIEV1cmlwaWRlcyBzYXlzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iRXVyLiBCYS4gMzc4IiB2YWxpZD0ieWVzIj5FdXIuIEJhLiAzNzg8L2JpYmw+IO+8iEJyb21pb3PvvIkKCQkJCQkJCTxmb3JlaWduIGxhbmc9ImdyZWVrIj7hvYPPgiDPhOG9sc604oCZIOG8lM+HzrXOuSwgzrjOuc6xz4POteG9u861zrnOvSDPhM61IM+H4b25z4HOv865z4IgzrzOtc+E4b2xIM+E4oCZCgkJCQkJCQnOseG9kM674b+2zr0gzrPOtc674b62z4POsc65IOG8gM69zrHPgM6x4b+mz4POseG9tyDPhM61IM68zrXPgeG9t868zr3Osc+CPC9mb3JlaWduPjwvbm90ZT47IG93aW5nIHRvCgkJCQkJd2hpY2ggcGVvcGxlIGFjdHVhbGx5IGNsYXNzIG11c2ljIHdpdGggdGhlbSBhbmQ8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmVtcGxveSBhbGwgb2YgdGhlc2UgdGhpbmdzLCBzbGVlcCwgZGVlcCBkcmlua2luZyBhbmQgbXVzaWMsIGluCgkJCQkJdGhlIHNhbWUgd2F5LCBhbmQgdGhleSBhbHNvIHBsYWNlIGRhbmNpbmcgaW4gdGhlIHNhbWUgY2xhc3PvvIk7CgkJCQkJCTxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPm9yIHdoZXRoZXIgd2Ugb3VnaHQgcmF0aGVyIHRvCgkJCQkJdGhpbmsgdGhhdCBtdXNpYyB0ZW5kcyBpbiBzb21lIGRlZ3JlZSB0byB2aXJ0dWUg77yIbXVzaWMgYmVpbmcgY2FwYWJsZSBvZgoJCQkJCXByb2R1Y2luZyBhIGNlcnRhaW4gcXVhbGl0eSBvZiBjaGFyYWN0ZXIganVzdCBhcyBneW1uYXN0aWNzIGFyZSBjYXBhYmxlIG9mCgkJCQkJcHJvZHVjaW5nIGEgY2VydGFpbiBxdWFsaXR5IG9mIGJvZHksIG11c2ljIGFjY3VzdG9taW5nIG1lbiB0byBiZSBhYmxlIHRvIHJlam9pY2UKCQkJCQlyaWdodGx577yJOyBvciB0aGF0IGl0IGNvbnRyaWJ1dGVzIHNvbWV0aGluZyB0byBpbnRlbGxlY3R1YWwKCQkJCQkJZW50ZXJ0YWlubWVudDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHRlcm0gPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs60zrnOsc6zz4nOs+G9tTwvZm9yZWlnbj4sIOKAmHBhc3RpbWUs4oCZIGlzCgkJCQkJCWlkaW9tYXRpY2FsbHkgdXNlZCBvZiB0aGUgcHVyc3VpdHMgb2YgY3VsdHVyZWQgbGVpc3VyZeKAlHNlcmlvdXMKCQkJCQkJY29udmVyc2F0aW9uLCBtdXNpYywgdGhlIGRyYW1hLjwvbm90ZT4gYW5kIGN1bHR1cmUg77yIZm9yIHRoaXMgbXVzdAoJCQkJCWJlIHNldCBkb3duIGFzIGEgdGhpcmQgYWx0ZXJuYXRpdmUgYW1vbmcgdGhvc2UgbWVudGlvbmVk77yJLiBOb3cgaXQgaXMKCQkJCQlub3QgZGlmZmljdWx0IHRvIHNlZSB0aGF0IG9uZSBtdXN0IG5vdCBtYWtlIGFtdXNlbWVudCB0aGUgb2JqZWN0IG9mIHRoZQoJCQkJCWVkdWNhdGlvbiBvZiB0aGUgeW91bmc7IGZvciBhbXVzZW1lbnQgZG9lcyBub3QgZ28gd2l0aAoJCQkJCWxlYXJuaW5n4oCUbGVhcm5pbmcgaXMgYSBwYWluZnVsIHByb2Nlc3MuIE5vciB5ZXQgbW9yZW92ZXIgaXMgaXQKCQkJCQlzdWl0YWJsZSB0byBhc3NpZ24gaW50ZWxsZWN0dWFsIGVudGVydGFpbm1lbnQgdG8gYm95cyBhbmQgdG8gdGhlIHlvdW5nOyBmb3IgYQoJCQkJCXRoaW5nIHRoYXQgaXMgYW4gZW5kIGRvZXMgbm90IGJlbG9uZyB0byBhbnl0aGluZyB0aGF0IGlzIGltcGVyZmVjdC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNC41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHBlcmhhcHMgaXQgbWlnaHQgYmUgdGhvdWdodCB0aGF0IHRoZQoJCQkJCXNlcmlvdXMgcHVyc3VpdHMgb2YgYm95cyBhcmUgZm9yIHRoZSBzYWtlIG9mIGFtdXNlbWVudCB3aGVuIHRoZXkgaGF2ZSBncm93biB1cAoJCQkJCXRvIGJlIG1lbi4gQnV0LCBpZiBzb21ldGhpbmcgb2YgdGhpcyBzb3J0IGlzIHRoZSBjYXNlLCB3aHkgc2hvdWxkIHRoZSB5b3VuZyBuZWVkCgkJCQkJdG8gbGVhcm4gdGhpcyBhY2NvbXBsaXNobWVudCB0aGVtc2VsdmVzLCBhbmQgbm90LCBsaWtlIHRoZSBQZXJzaWFuIGFuZCBNZWRpYW4KCQkJCQlraW5ncywgcGFydGljaXBhdGUgaW4gdGhlIHBsZWFzdXJlIGFuZCB0aGUgZWR1Y2F0aW9uIG9mIG11c2ljIGJ5IG1lYW5zIG9mIG90aGVycwoJCQkJCXBlcmZvcm1pbmcgaXQ/IGZvciB0aG9zZSB3aG8gaGF2ZSBtYWRlIG11c2ljIGEgYnVzaW5lc3MgYW5kIHByb2Zlc3Npb24gbXVzdAoJCQkJCW5lY2Vzc2FyaWx5IHBlcmZvcm0gYmV0dGVyIHRoYW4gdGhvc2Ugd2hvIHByYWN0aXNlIG9ubHkgbG9uZyBlbm91Z2ggdG8gbGVhcm4uCgkJCQkJQnV0IGlmIGl0IGlzIHByb3BlciBmb3IgdGhlbSB0byBsYWJvciBhdCBhY2NvbXBsaXNobWVudHMgb2YgdGhpcyBzb3J0LCB0aGVuIGl0CgkJCQkJd291bGQgYWxzbyBiZSByaWdodCBmb3IgdGhlbSB0byBwcmVwYXJlIHRoZSBkaXNoZXMgb2YgYW4gZWxhYm9yYXRlIGN1aXNpbmU7IGJ1dAoJCQkJCXRoaXMgaXMgYWJzdXJkLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI0LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgdGhlIHNhbWUKCQkJCQlkaWZmaWN1bHR5IGFsc28gYXJpc2VzIGFzIHRvIHRoZSBxdWVzdGlvbiB3aGV0aGVyIGxlYXJuaW5nIG11c2ljIGNhbiBpbXByb3ZlCgkJCQkJdGhlaXIgY2hhcmFjdGVyczsgZm9yIHdoeSBzaG91bGQgdGhleSBsZWFybiB0byBwZXJmb3JtIGVkaWZ5aW5nIG11c2ljCgkJCQkJdGhlbXNlbHZlcywgPG1pbGVzdG9uZSBuPSIxMzM5YiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+aW5zdGVhZCBvZiBsZWFybmluZyB0byBlbmpveSBpdCByaWdodGx5IGFuZCBiZSBhYmxlIHRvIGp1ZGdlIGl0CgkJCQkJd2hlbiB0aGV5IGhlYXIgb3RoZXJzIHBlcmZvcm1pbmcsIGFzIHRoZSBTcGFydGFucyBkbz8gZm9yIHRoZSBTcGFydGFucyBhbHRob3VnaAoJCQkJCXRoZXkgZG8gbm90IGxlYXJuIHRvIHBlcmZvcm0gY2FuIG5ldmVydGhlbGVzcyBqdWRnZSBnb29kIGFuZCBiYWQgbXVzaWMKCQkJCQljb3JyZWN0bHksIHNvIGl0IGlzIHNhaWQuIEFuZCB0aGUgc2FtZSBhcmd1bWVudCBhcHBsaWVzIGFsc28gaWYgbXVzaWMgaXMgdG8gYmUKCQkJCQllbXBsb3llZCBmb3IgcmVmaW5lZCBlbmpveW1lbnQgYW5kIGVudGVydGFpbm1lbnQ7IHdoeSBuZWVkIHBlb3BsZSBsZWFybiB0bwoJCQkJCXBlcmZvcm0gdGhlbXNlbHZlcyBpbnN0ZWFkIG9mIGVuam95aW5nIG11c2ljIHBsYXllZCBieSBvdGhlcnM/IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjQuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB3ZSBtYXkgY29uc2lkZXIgdGhlIGNvbmNlcHRpb24gdGhhdCB3ZQoJCQkJCWhhdmUgYWJvdXQgdGhlIGdvZHM6IFpldXMgZG9lcyBub3Qgc2luZyBhbmQgaGFycCB0byB0aGUgcG9ldHMgaGltc2VsZi4gQnV0CgkJCQkJcHJvZmVzc2lvbmFsIG11c2ljaWFucyB3ZSBzcGVhayBvZiBhcyB2dWxnYXIgcGVvcGxlLCBhbmQgaW5kZWVkIHdlIHRoaW5rIGl0IG5vdAoJCQkJCW1hbmx5IHRvIHBlcmZvcm0gbXVzaWMsIGV4Y2VwdCB3aGVuIGRydW5rIG9yIGZvciBmdW4uPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgcGVyaGFwcyB0aGVzZSBwb2ludHMKCQkJCQl3aWxsIGhhdmUgdG8gYmUgY29uc2lkZXJlZCBhZnRlcndhcmRzOyBvdXIgZmlyc3QgaW5xdWlyeSBpcyB3aGV0aGVyIG11c2ljIG91Z2h0CgkJCQkJbm90IG9yIG91Z2h0IHRvIGJlIGluY2x1ZGVkIGluIGVkdWNhdGlvbiwgYW5kIHdoYXQgaXMgaXRzIGVmZmljYWN5IGFtb25nIHRoZQoJCQkJCXRocmVlIHVzZXMgb2YgaXQgdGhhdCBoYXZlIGJlZW4gZGlzY3Vzc2Vk4oCUZG9lcyBpdCBzZXJ2ZSBmb3IgZWR1Y2F0aW9uCgkJCQkJb3IgYW11c2VtZW50IG9yIGVudGVydGFpbm1lbnQ/IEl0IGlzIHJlYXNvbmFibGUgdG8gcmVja29uIGl0IHVuZGVyIGFsbCBvZiB0aGVzZQoJCQkJCWhlYWRzLCBhbmQgaXQgYXBwZWFycyB0byBwYXJ0aWNpcGF0ZSBpbiB0aGVtIGFsbC4gQW11c2VtZW50IGlzIGZvciB0aGUgc2FrZSBvZgoJCQkJCXJlbGF4YXRpb24sIGFuZCByZWxheGF0aW9uIG11c3QgbmVjZXNzYXJpbHkgYmUgcGxlYXNhbnQsIGZvciBpdCBpcyBhIHdheSBvZgoJCQkJCWN1cmluZyB0aGUgcGFpbiBkdWUgdG8gbGFib3Jpb3VzIHdvcms7IGFsc28gZW50ZXJ0YWlubWVudCBvdWdodCBhZG1pdHRlZGx5IHRvIGJlCgkJCQkJbm90IG9ubHkgaG9ub3JhYmxlIGJ1dCBhbHNvIHBsZWFzYW50LCBmb3IgaGFwcGluZXNzIGlzIGRlcml2ZWQgZnJvbSBib3RoIGhvbm9yCgkJCQkJYW5kIHBsZWFzdXJlOzxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YnV0IHdlIGFsbCBwcm9ub3VuY2UKCQkJCQltdXNpYyB0byBiZSBvbmUgb2YgdGhlIHBsZWFzYW50ZXN0IHRoaW5ncywgd2hldGhlciBpbnN0cnVtZW50YWwgb3IgaW5zdHJ1bWVudGFsCgkJCQkJYW5kIHZvY2FsIG11c2ljIHRvZ2V0aGVyIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPu+8iGF0IGxlYXN0IE11c2FldXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgc2VtaS1sZWdlbmRhcnkKCQkJCQkJYmFyZCwgdG8gd2hvbSBhIG51bWJlciBvZiBvcmFjdWxhciB2ZXJzZXMgdGhhdCB3ZXJlIGN1cnJlbnQgd2VyZQoJCQkJCQlhdHRyaWJ1dGVkLjwvbm90ZT4gc2F5cywg4oCYU29uZyBpcyBtYW4ncyBzd2VldGVzdCBqb3ks4oCZCgkJCQkJYW5kIHRoYXQgaXMgd2h5IHBlb3BsZSB3aXRoIGdvb2QgcmVhc29uIGludHJvZHVjZSBpdCBhdCBwYXJ0aWVzIGFuZAoJCQkJCWVudGVydGFpbm1lbnRzLCBmb3IgaXRzIGV4aGlsYXJhdGluZyBlZmZlY3TvvIksIHNvIHRoYXQgZm9yIHRoaXMgcmVhc29uCgkJCQkJYWxzbyBvbmUgbWlnaHQgc3VwcG9zZSB0aGF0IHRoZSB5b3VuZ2VyIG1lbiBvdWdodCB0byBiZSBlZHVjYXRlZCBpbiBtdXNpYy4gRm9yCgkJCQkJYWxsIGhhcm1sZXNzIHBsZWFzdXJlcyBhcmUgbm90IG9ubHkgc3VpdGFibGUgZm9yIHRoZSB1bHRpbWF0ZSBvYmplY3QgYnV0IGFsc28KCQkJCQlmb3IgcmVsYXhhdGlvbjsgYW5kIGFzIGl0IGJ1dCByYXJlbHkgaGFwcGVucyBmb3IgbWVuIHRvIHJlYWNoIHRoZWlyIHVsdGltYXRlCgkJCQkJb2JqZWN0LCB3aGVyZWFzIHRoZXkgb2Z0ZW4gcmVsYXggYW5kIHB1cnN1ZSBhbXVzZW1lbnQgbm90IHNvIG11Y2ggd2l0aCBzb21lCgkJCQkJdWx0ZXJpb3Igb2JqZWN0IGJ1dCBiZWNhdXNlIG9mIHRoZSBwbGVhc3VyZSBvZiBpdCwgaXQgd291bGQgYmUgc2VydmljZWFibGUgdG8KCQkJCQlsZXQgdGhlbSByZWxheCBhdCBpbnRlcnZhbHMgaW4gdGhlIHBsZWFzdXJlcyBkZXJpdmVkIGZyb20gbXVzaWMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBpdCBoYXMgY29tZSBhYm91dCB0aGF0IG1lbiBtYWtlCgkJCQkJYW11c2VtZW50cyBhbiBlbmQ7IGZvciB0aGUgZW5kIGFsc28gcGVyaGFwcyBjb250YWlucyBhIGNlcnRhaW4gcGxlYXN1cmUsIGJ1dCBub3QKCQkJCQlhbnkgb3JkaW5hcnkgcGxlYXN1cmUsIGFuZCBzZWVraW5nIHRoaXMgdGhleSB0YWtlIHRoZSBvdGhlciBhcyBiZWluZyB0aGlzCgkJCQkJYmVjYXVzZSBpdCBoYXMgYSBjZXJ0YWluIHJlc2VtYmxhbmNlIHRvIHRoZSBhY2hpZXZlbWVudCBvZiB0aGUgZW5kIG9mIHRoZWlyCgkJCQkJdW5kZXJ0YWtpbmdzLiBGb3IgdGhlIGVuZCBpcyBkZXNpcmFibGUgbm90IGZvciB0aGUgc2FrZSBvZiBhbnl0aGluZyB0aGF0IHdpbGwKCQkJCQlyZXN1bHQgZnJvbSBpdCwgYW5kIGFsc28gcGxlYXN1cmVzIG9mIHRoZSBzb3J0IHVuZGVyIGNvbnNpZGVyYXRpb24gYXJlIG5vdAoJCQkJCWRlc2lyYWJsZSBmb3IgdGhlIHNha2Ugb2Ygc29tZSBmdXR1cmUgcmVzdWx0LCBidXQgYmVjYXVzZSBvZiB0aGluZ3MgdGhhdCBoYXZlCgkJCQkJaGFwcGVuZWQgYWxyZWFkeSwgZm9yIGluc3RhbmNlIGxhYm9yIGFuZCBwYWluLiBPbmUgbWlnaHQgdGhlbiBwZXJoYXBzIGFzc3VtZQoJCQkJCXRoaXMgdG8gYmUgdGhlIHJlYXNvbiB3aGljaCBjYXVzZXMgbWVuIHRvIHNlZWsgdG8gcHJvY3VyZSBoYXBwaW5lc3MgYnkgbWVhbnMgb2YKCQkJCQl0aG9zZSBwbGVhc3VyZXM7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPmJ1dCBpbiB0aGUgY2FzZSBvZgoJCQkJCXRha2luZyBwYXJ0IGluIG11c2ljLCB0aGlzIGlzIG5vdCBiZWNhdXNlIG9mIHRoaXMgcmVhc29uIG9ubHksIGJ1dCBhbHNvIGJlY2F1c2UKCQkJCQlwZXJmb3JtaW5nIG11c2ljIGlzIHVzZWZ1bCwgYXMgaXQgc2VlbXMsIGZvciByZWxheGF0aW9uLiBCdXQgbmV2ZXJ0aGVsZXNzIHdlCgkJCQkJbXVzdCBleGFtaW5lIHdoZXRoZXIgaXQgaXMgbm90IHRoZSBjYXNlIHRoYXQsIGFsdGhvdWdoIHRoaXMgaGFzIGNvbWUgYWJvdXQsCgkJCQkJCTxtaWxlc3RvbmUgbj0iMTM0MGEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnlldCB0aGUgbmF0dXJlIG9mIG11c2ljIGlzIG1vcmUgaG9ub3JhYmxlIHRoYW4gY29ycmVzcG9uZHMgd2l0aAoJCQkJCXRoZSBlbXBsb3ltZW50IG9mIGl0IG1lbnRpb25lZCwgYW5kIGl0IGlzIHByb3BlciBub3Qgb25seSB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUKCQkJCQljb21tb24gcGxlYXN1cmUgdGhhdCBzcHJpbmdzIGZyb20gaXQsIHdoaWNoIGlzIHBlcmNlcHRpYmxlIHRvIGV2ZXJ5Ym9keQoJCQkJCe+8iGZvciB0aGUgcGxlYXN1cmUgY29udGFpbmVkIGluIG11c2ljIGlzIG9mIGEgbmF0dXJhbCBraW5kLCBvd2luZyB0bwoJCQkJCXdoaWNoIHRoZSB1c2Ugb2YgaXQgaXMgZGVhciB0byB0aG9zZSBvZiBhbGwgYWdlcyBhbmQgY2hhcmFjdGVyc++8iSwgYnV0CgkJCQkJdG8gc2VlIGlmIGl0cyBpbmZsdWVuY2UgcmVhY2hlcyBhbHNvIGluIGEgbWFubmVyIHRvIHRoZSBjaGFyYWN0ZXIgYW5kIHRvIHRoZQoJCQkJCXNvdWwuIEFuZCB0aGlzIHdvdWxkIGNsZWFybHkgYmUgdGhlIGNhc2UgaWYgd2UgYXJlIGFmZmVjdGVkIGluIG91ciBjaGFyYWN0ZXJzIGluCgkJCQkJYSBjZXJ0YWluIG1hbm5lciBieSBpdC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGl0IGlzCgkJCQkJY2xlYXIgdGhhdCB3ZSBhcmUgYWZmZWN0ZWQgaW4gYSBjZXJ0YWluIG1hbm5lciwgYm90aCBieSBtYW55IG90aGVyIGtpbmRzIG9mCgkJCQkJbXVzaWMgYW5kIG5vdCBsZWFzdCBieSB0aGUgbWVsb2RpZXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEwMTkiIGtleT0idGduLDcwMTEwMTkiPk9seW1wdXM8L3BsYWNlTmFtZT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgUGhyeWdpYW4gY29tcG9zZXIKCQkJCQkJb2YgdGhlIHNldmVudGggY2VudHVyeSBCLkMuPC9ub3RlPjsgZm9yIHRoZXNlIGFkbWl0dGVkbHkgbWFrZSBvdXIgc291bHMKCQkJCQllbnRodXNpYXN0aWMsIGFuZCBlbnRodXNpYXNtIGlzIGFuIGFmZmVjdGlvbiBvZiB0aGUgY2hhcmFjdGVyIG9mIHRoZSBzb3VsLiBBbmQKCQkJCQltb3Jlb3ZlciBldmVyeWJvZHkgd2hlbiBsaXN0ZW5pbmcgdG8gaW1pdGF0aW9uczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+TXVzaWMgZHJhbWF0aWNhbGx5IGV4cHJlc3NpbmcgdmFyaW91cyBzdGF0ZXMgb2YKCQkJCQkJZW1vdGlvbi48L25vdGU+IGlzIHRocm93biBpbnRvIGEgY29ycmVzcG9uZGluZyBzdGF0ZSBvZiBmZWVsaW5nLCBldmVuIGFwYXJ0CgkJCQkJZnJvbSB0aGUgcmh5dGhtcyBhbmQgdHVuZXMgdGhlbXNlbHZlcy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEKCQkJCQkJcHJvYmFibGUgY29ycmVjdGlvbiBvZiB0aGUgR3JlZWsgZ2l2ZXMg4oCYYnkgdGhlIHJoeXRobXMgYW5kIHR1bmVzCgkJCQkJCXRoZW1zZWx2ZXMsIGV2ZW4gYXBhcnQgZnJvbSB0aGUgd29yZHMu4oCZPC9ub3RlPiBBbmQgc2luY2UgaXQgaXMgdGhlCgkJCQkJY2FzZSB0aGF0IG11c2ljIGlzIG9uZSBvZiB0aGUgdGhpbmdzIHRoYXQgZ2l2ZSBwbGVhc3VyZSwgYW5kIHRoYXQgdmlydHVlIGhhcyB0bwoJCQkJCWRvIHdpdGggZmVlbGluZyBkZWxpZ2h0IGFuZCBsb3ZlIGFuZCBoYXRyZWQgcmlnaHRseSwgdGhlcmUgaXMgb2J2aW91c2x5IG5vdGhpbmcKCQkJCQl0aGF0IGl0IGlzIG1vcmUgbmVlZGZ1bCB0byBsZWFybiBhbmQgYmVjb21lIGhhYml0dWF0ZWQgdG8gdGhhbiB0byBqdWRnZQoJCQkJCWNvcnJlY3RseSBhbmQgdG8gZGVsaWdodCBpbiB2aXJ0dW91cyBjaGFyYWN0ZXJzIGFuZCBub2JsZSBhY3Rpb25zOyA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQgcmh5dGhtcyBhbmQgbWVsb2RpZXMgY29udGFpbgoJCQkJCXJlcHJlc2VudGF0aW9ucyBvZiBhbmdlcjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIG1pbGRuZXNzLAoJCQkJCWFuZCBhbHNvIG9mIGNvdXJhZ2UgYW5kIHRlbXBlcmFuY2UgYW5kIGFsbCB0aGVpciBvcHBvc2l0ZXMgYW5kIHRoZSBvdGhlciBtb3JhbAoJCQkJCXF1YWxpdGllcywgdGhhdCBtb3N0IGNsb3NlbHkgY29ycmVzcG9uZCB0byB0aGUgdHJ1ZSBuYXR1cmVzIG9mIHRoZXNlIHF1YWxpdGllcwoJCQkJCe+8iGFuZCB0aGlzIGlzIGNsZWFyIGZyb20gdGhlIGZhY3RzIG9mIHdoYXQgb2NjdXJz4oCUd2hlbiB3ZQoJCQkJCWxpc3RlbiB0byBzdWNoIHJlcHJlc2VudGF0aW9ucyB3ZSBjaGFuZ2UgaW4gb3VyIHNvdWzvvIk7IGFuZCBoYWJpdHVhdGlvbgoJCQkJCWluIGZlZWxpbmcgcGFpbiBhbmQgZGVsaWdodCBhdCByZXByZXNlbnRhdGlvbnMgb2YgcmVhbGl0eSBpcyBjbG9zZSB0byBmZWVsaW5nCgkJCQkJdGhlbSB0b3dhcmRzIGFjdHVhbCByZWFsaXR5IO+8iGZvciBleGFtcGxlLCBpZiBhIG1hbiBkZWxpZ2h0cyBpbgoJCQkJCWJlaG9sZGluZyB0aGUgc3RhdHVlIG9mIHNvbWVib2R5IGZvciBubyBvdGhlciByZWFzb24gdGhhbiBiZWNhdXNlIG9mIGl0cyBhY3R1YWwKCQkJCQlmb3JtLCB0aGUgYWN0dWFsIHNpZ2h0IG9mIHRoZSBwZXJzb24gd2hvc2Ugc3RhdHVlIGhlIGJlaG9sZHMgbXVzdCBhbHNvIG9mCgkJCQkJbmVjZXNzaXR5IGdpdmUgaGltIHBsZWFzdXJl77yJOyA8bWlsZXN0b25lIGVkPSJQIiBuPSI1LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgaXQgaXMgdGhlIGNhc2UgdGhhdCB3aGVyZWFzIHRoZSBvdGhlciBvYmplY3RzIG9mCgkJCQkJc2Vuc2F0aW9uIGNvbnRhaW4gbm8gcmVwcmVzZW50YXRpb24gb2YgY2hhcmFjdGVyLCBmb3IgZXhhbXBsZSB0aGUgb2JqZWN0cyBvZgoJCQkJCXRvdWNoIGFuZCB0YXN0ZSDvvIh0aG91Z2ggdGhlIG9iamVjdHMgb2Ygc2lnaHQgZG8gc28gc2xpZ2h0bHksIGZvciB0aGVyZQoJCQkJCWFyZSBmb3JtcyB0aGF0IHJlcHJlc2VudCBjaGFyYWN0ZXIsIGJ1dCBvbmx5IHRvIGEgc21hbGwgZXh0ZW50LCBhbmQgbm90PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj7igJhOb3TigJkgaXMgYSBjb25qZWN0dXJhbAoJCQkJCQlpbnNlcnRpb24uPC9ub3RlPiBhbGwgbWVuIHBhcnRpY2lwYXRlIGluIHZpc3VhbCBwZXJjZXB0aW9uIG9mIHN1Y2gKCQkJCQlxdWFsaXRpZXM7IGFsc28gdmlzdWFsIHdvcmtzIG9mIGFydCBhcmUgbm90IHJlcHJlc2VudGF0aW9ucyBvZiBjaGFyYWN0ZXIgYnV0CgkJCQkJcmF0aGVyIHRoZSBmb3JtcyBhbmQgY29sb3JzIHByb2R1Y2VkIGFyZSBtZXJlIGluZGljYXRpb25zIG9mIGNoYXJhY3RlciwgYW5kCgkJCQkJdGhlc2UgaW5kaWNhdGlvbnMgYXJlIG9ubHkgYm9kaWx5IHNlbnNhdGlvbnMgZHVyaW5nIHRoZSBlbW90aW9uczsgbm90IGJ1dCB3aGF0CgkJCQkJaW4gc28gZmFyIGFzIHRoZXJlIGlzIGEgZGlmZmVyZW5jZSBldmVuIGluIHJlZ2FyZCB0byB0aGUgb2JzZXJ2YXRpb24gb2YgdGhlc2UKCQkJCQkJaW5kaWNhdGlvbnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRoZXNlIHZpc3VhbAoJCQkJCQlpbXByZXNzaW9ucyBkbyB2YXJ5IHRvIHNvbWUgZXh0ZW50IGluIG1vcmFsIGVmZmVjdC48L25vdGU+IHRoZSB5b3VuZyBtdXN0CgkJCQkJbm90IGxvb2sgYXQgdGhlIHdvcmtzIG9mIFBhdXNvbiBidXQgdGhvc2Ugb2YgUG9seWdub3R1cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBhdXNvbiBpcyBhIHBhaW50ZXIgb3RoZXJ3aXNlIGxpdHRsZSBrbm93bi4gUG9seWdub3R1cwoJCQkJCQlkZWNvcmF0ZWQgdGhlIFN0b2EgUG9pa2lsZSBhbmQgb3RoZXIgZmFtb3VzIHB1YmxpYyBidWlsZGluZ3MgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgaW4gdGhlIG1pZGRsZSBvZiB0aGUgNXRoCgkJCQkJCWNlbnR1cnkgQi5DLiDigJhQb2x5Z25vdHVzIHJlcHJlc2VudGVkIG1lbiBhcyBiZXR0ZXIgdGhhbiB0aGV5CgkJCQkJCXJlYWxseSB3ZXJlLCBQYXVzb24gYXMgd29yc2XigJkg77yIPGJpYmwgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIFBvZXQuIDE0NDhhLjUiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIFBvZXQuIDE0NDhhCgkJCQkJCTU8L2JpYmw+77yJLjwvbm90ZT4gYW5kIG9mIGFueSBvdGhlciBtb3JhbCBwYWludGVyIG9yCgkJCQkJc2N1bHB0b3LvvIksIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPnBpZWNlcyBvZiBtdXNpYwoJCQkJCW9uIHRoZSBjb250cmFyeSBkbyBhY3R1YWxseSBjb250YWluIGluIHRoZW0gc2VsdmVzIGltaXRhdGlvbnMgb2YgY2hhcmFjdGVyOyBhbmQKCQkJCQl0aGlzIGlzIG1hbmlmZXN0LCBmb3IgZXZlbiBpbiB0aGUgbmF0dXJlIG9mIHRoZSBtZXJlIG1lbG9kaWVzIHRoZXJlIGFyZQoJCQkJCWRpZmZlcmVuY2VzLCBzbyB0aGF0IHBlb3BsZSB3aGVuIGhlYXJpbmcgdGhlbSBhcmUgYWZmZWN0ZWQgZGlmZmVyZW50bHkgYW5kIGhhdmUKCQkJCQlub3QgdGhlIHNhbWUgZmVlbGluZ3MgaW4gcmVnYXJkIHRvIGVhY2ggb2YgdGhlbSwgYnV0IGxpc3RlbiB0byBzb21lIGluIGEgbW9yZQoJCQkJCW1vdXJuZnVsIGFuZCByZXN0cmFpbmVkIHN0YXRlLCA8bWlsZXN0b25lIG49IjEzNDBiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5mb3IgaW5zdGFuY2UgdGhlIG1vZGUgY2FsbGVkIE1peG9seWRpYW4sIGFuZAoJCQkJCXRvIG90aGVycyBpbiBhIHNvZnRlciBzdGF0ZSBvZiBtaW5kLCBidXQgaW4gYSBtaWR3YXkgc3RhdGUgYW5kIHdpdGggdGhlIGdyZWF0ZXN0CgkJCQkJY29tcG9zdXJlIHRvIGFub3RoZXIsIGFzIHRoZSBEb3JpYW4gbW9kZSBhbG9uZSBvZiB0dW5lcyBzZWVtcyB0byBhY3QsIHdoaWxlIHRoZQoJCQkJCVBocnlnaWFuIG1ha2VzIG1lbiBlbnRodXNpYXN0aWM7IDxtaWxlc3RvbmUgZWQ9IlAiIG49IjUuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPmZvcgoJCQkJCXRoZXNlIHRoaW5ncyBhcmUgd2VsbCBzdGF0ZWQgYnkgdGhvc2Ugd2hvIGhhdmUgc3R1ZGllZCB0aGlzIGZvcm0gb2YgZWR1Y2F0aW9uLAoJCQkJCWFzIHRoZXkgZGVyaXZlIHRoZSBldmlkZW5jZSBmb3IgdGhlaXIgdGhlb3JpZXMgZnJvbSB0aGUgYWN0dWFsIGZhY3RzIG9mCgkJCQkJZXhwZXJpZW5jZS4gQW5kIHRoZSBzYW1lIGhvbGRzIGdvb2QgYWJvdXQgdGhlIHJoeXRobXMgYWxzbywgZm9yIHNvbWUgaGF2ZSBhIG1vcmUKCQkJCQlzdGFibGUgYW5kIG90aGVycyBhIG1vcmUgZW1vdGlvbmFsIGNoYXJhY3RlciwgYW5kIG9mIHRoZSBsYXR0ZXIgc29tZSBhcmUgbW9yZQoJCQkJCXZ1bGdhciBpbiB0aGVpciBlbW90aW9uYWwgZWZmZWN0cyBhbmQgb3RoZXJzIG1vcmUgbGliZXJhbC4gRnJvbSB0aGVzZQoJCQkJCWNvbnNpZGVyYXRpb25zIHRoZXJlZm9yZSBpdCBpcyBwbGFpbiB0aGF0IG11c2ljIGhhcyB0aGUgcG93ZXIgb2YgcHJvZHVjaW5nIGEKCQkJCQljZXJ0YWluIGVmZmVjdCBvbiB0aGUgbW9yYWwgY2hhcmFjdGVyIG9mIHRoZSBzb3VsLCBhbmQgaWYgaXQgaGFzIHRoZSBwb3dlciB0byBkbwoJCQkJCXRoaXMsIGl0IGlzIGNsZWFyIHRoYXQgdGhlIHlvdW5nIG11c3QgYmUgZGlyZWN0ZWQgdG8gbXVzaWMgYW5kIG11c3QgYmUgZWR1Y2F0ZWQKCQkJCQlpbiBpdC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFsc28gZWR1Y2F0aW9uIGluIG11c2ljIGlzCgkJCQkJd2VsbCBhZGFwdGVkIHRvIHRoZSB5b3V0aGZ1bCBuYXR1cmU7IGZvciB0aGUgeW91bmcgb3dpbmcgdG8gdGhlaXIgeW91dGggY2Fubm90CgkJCQkJZW5kdXJlIGFueSB0aGluZyBub3Qgc3dlZXRlbmVkIGJ5IHBsZWFzdXJlLCBhbmQgbXVzaWMgaXMgYnkgbmF0dXJlIGEgdGhpbmcgdGhhdAoJCQkJCWhhcyBhIHBsZWFzYW50IHN3ZWV0bmVzcy4gQW5kIHdlIHNlZW0gdG8gaGF2ZSBhIGNlcnRhaW4gYWZmaW5pdHkgd2l0aCB0dW5lcyBhbmQKCQkJCQlyaHl0aG1zOyBvd2luZyB0byB3aGljaCBtYW55IHdpc2UgbWVuIHNheSBlaXRoZXIgdGhhdCB0aGUgc291bCBpcyBhIGhhcm1vbnkgb3IKCQkJCQl0aGF0IGl0IGhhcyBoYXJtb255Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIGZvcm1lciBkb2N0cmluZSBpcwoJCQkJCQlQeXRoYWdvcmVhbiwgdGhlIGxhdHRlciBpcyBzdGF0ZWQgYnkgPGJpYmwgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFBoYWVkbyA5MyIgdmFsaWQ9InllcyI+UGxhdC4gUGhhZWRvCgkJCQkJCQk5MzwvYmlibD4uPC9ub3RlPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PG1pbGVzdG9uZSBlZD0iUCIgbj0iNi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBvdWdodCBub3cKCQkJCQl0byBkZWNpZGUgdGhlIHF1ZXN0aW9uIHJhaXNlZCBlYXJsaWVyLCB3aGV0aGVyIHRoZSB5b3VuZyBvdWdodCB0byBsZWFybiBtdXNpYyBieQoJCQkJCXNpbmdpbmcgYW5kIHBsYXlpbmcgdGhlbXNlbHZlcyBvciBub3QuIEl0IGlzIG5vdCBkaWZmaWN1bHQgdG8gc2VlIHRoYXQgaXQgbWFrZXMKCQkJCQlhIGdyZWF0IGRpZmZlcmVuY2UgaW4gdGhlIHByb2Nlc3Mgb2YgYWNxdWlyaW5nIGEgY2VydGFpbiBxdWFsaXR5IHdoZXRoZXIgb25lCgkJCQkJdGFrZXMgYSBwYXJ0IGluIHRoZSBhY3Rpb25zIHRoYXQgaW1wYXJ0IGl0IG9uZXNlbGY7IGZvciBpdCBpcyBhIHRoaW5nIHRoYXQgaXMKCQkJCQlpbXBvc3NpYmxlLCBvciBkaWZmaWN1bHQsIHRvIGJlY29tZSBhIGdvb2QganVkZ2Ugb2YgcGVyZm9ybWFuY2VzIGlmIG9uZSBoYXMgbm90CgkJCQkJdGFrZW4gcGFydCBpbiB0aGVtLiBBdCB0aGUgc2FtZSB0aW1lIGFsc28gYm95cyBtdXN0IGhhdmUgc29tZSBvY2N1cGF0aW9uLCBhbmQKCQkJCQlvbmUgbXVzdCB0aGluayBBcmNoeXRhcydzIHJhdHRsZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QXJjaHl0YXMgYQoJCQkJCQlQeXRoYWdvcmVhbiBwaGlsb3NvcGhlciwgbWF0aGVtYXRpY2lhbiwgc3RhdGVzbWFuLCBhbmQgZ2VuZXJhbCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwNDEwMCIga2V5PSJ0Z24sNzAwNDEwMCI+VGFyZW50dW08L3BsYWNlTmFtZT4sIGNvbnRlbXBvcmFyeSB3aXRoIFBsYXRvLiBIZSB3YXMKCQkJCQkJaW50ZXJlc3RlZCBpbiBtZWNoYW5pY3M7IGJ1dCBvbmUgdHJhZGl0aW9uIGFzY3JpYmVzIHRoZSB0b3kgaW4gcXVlc3Rpb24gdG8gYQoJCQkJCQljYXJwZW50ZXIgb2YgdGhlIHNhbWUgbmFtZS48L25vdGU+IGEgZ29vZCBpbnZlbnRpb24sIHdoaWNoIHBlb3BsZSBnaXZlIHRvCgkJCQkJY2hpbGRyZW4gaW4gb3JkZXIgdGhhdCB3aGlsZSBvY2N1cGllZCB3aXRoIHRoaXMgdGhleSBtYXkgbm90IGJyZWFrIGFueSBvZiB0aGUKCQkJCQlmdXJuaXR1cmU7IGZvciB5b3VuZyB0aGluZ3MgY2Fubm90IGtlZXAgc3RpbGwuIFdoZXJlYXMgdGhlbiBhIHJhdHRsZSBpcyBhCgkJCQkJc3VpdGFibGUgb2NjdXBhdGlvbiBmb3IgaW5mYW50IGNoaWxkcmVuLCBlZHVjYXRpb24gc2VydmVzIGFzIGEgcmF0dGxlIGZvciB5b3VuZwoJCQkJCXBlb3BsZSB3aGVuIG9sZGVyLiBTdWNoIGNvbnNpZGVyYXRpb25zIHRoZXJlZm9yZSBwcm92ZSB0aGF0IGNoaWxkcmVuIHNob3VsZCBiZQoJCQkJCXRyYWluZWQgaW4gbXVzaWMgc28gYXMgYWN0dWFsbHkgdG8gdGFrZSBwYXJ0IGluIGl0cyBwZXJmb3JtYW5jZTsgPG1pbGVzdG9uZSBlZD0iUCIgbj0iNi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGl0IGlzIG5vdCBkaWZmaWN1bHQgdG8gZGlzdGluZ3Vpc2ggd2hhdAoJCQkJCWlzIHN1aXRhYmxlIGFuZCB1bnN1aXRhYmxlIGZvciB2YXJpb3VzIGFnZXMsIGFuZCB0byByZWZ1dGUgdGhvc2Ugd2hvIGFzc2VydCB0aGF0CgkJCQkJdGhlIHByYWN0aWNlIG9mIG11c2ljIGlzIHZ1bGdhci4gRm9yIGZpcnN0LCBpbmFzbXVjaCBhcyBpdCBpcyBuZWNlc3NhcnkgdG8gdGFrZQoJCQkJCXBhcnQgaW4gdGhlIHBlcmZvcm1hbmNlcyBmb3IgdGhlIHNha2Ugb2YganVkZ2luZyB0aGVtLCBpdCBpcyB0aGVyZWZvcmUgcHJvcGVyCgkJCQkJZm9yIHRoZSBwdXBpbHMgd2hlbiB5b3VuZyBhY3R1YWxseSB0byBlbmdhZ2UgaW4gdGhlIHBlcmZvcm1hbmNlcywgdGhvdWdoIHdoZW4KCQkJCQl0aGV5IGdldCBvbGRlciB0aGV5IHNob3VsZCBiZSByZWxlYXNlZCBmcm9tIHBlcmZvcm1pbmcsIGJ1dCBiZSBhYmxlIHRvIGp1ZGdlCgkJCQkJd2hhdCBpcyBiZWF1dGlmdWwgYW5kIGVuam95IGl0IHJpZ2h0bHkgYmVjYXVzZSBvZiB0aGUgc3R1ZHkgaW4gd2hpY2ggdGhleQoJCQkJCWVuZ2FnZWQgaW4gdGhlaXIgeW91dGguIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjYuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZW4gYXMgdG8KCQkJCQl0aGUgb2JqZWN0aW9uIHJhaXNlZCBieSBzb21lIHBlb3BsZSB0aGF0IG11c2ljIG1ha2VzIHBlb3BsZSB2dWxnYXIsIGl0IGlzIG5vdAoJCQkJCWRpZmZpY3VsdCB0byBzb2x2ZSBpdCBieSBjb25zaWRlcmluZyBob3cgZmFyIHB1cGlscyB3aG8gYXJlIGJlaW5nIGVkdWNhdGVkIHdpdGgKCQkJCQlhIHZpZXcgdG8gY2l2aWMgdmlydHVlIHNob3VsZCB0YWtlIHBhcnQgaW4gdGhlIGFjdHVhbCBwZXJmb3JtYW5jZSBvZiBtdXNpYywKCQkJCQkJPG1pbGVzdG9uZSBuPSIxMzQxYSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjEiIHVuaXQ9ImxpbmUiIC8+YW5kIGluIHdoYXQgdGltZXMgYW5kIHdoYXQgcmh5dGhtcyB0aGV5IHNob3VsZCB0YWtlIHBhcnQsIGFuZAoJCQkJCWFsc28gd2hhdCBraW5kcyBvZiBpbnN0cnVtZW50cyBzaG91bGQgYmUgdXNlZCBpbiB0aGVpciBzdHVkaWVzLCBhcyB0aGlzCgkJCQkJbmF0dXJhbGx5IG1ha2VzIGEgZGlmZmVyZW5jZS4gRm9yIHRoZSBzb2x1dGlvbiBvZiB0aGUgb2JqZWN0aW9uIGRlcGVuZHMgdXBvbgoJCQkJCXRoZXNlIHBvaW50cywgYXMgaXQgaXMgcXVpdGUgcG9zc2libGUgdGhhdCBzb21lIG1vZGVzIG9mIG11c2ljIGRvIHByb2R1Y2UgdGhlCgkJCQkJcmVzdWx0IG1lbnRpb25lZC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNi40IiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgbWFuaWZlc3QKCQkJCQl0aGVyZWZvcmUgdGhhdCB0aGUgc3R1ZHkgb2YgbXVzaWMgbXVzdCBub3QgcGxhY2UgYSBoaW5kcmFuY2UgaW4gdGhlIHdheSBvZgoJCQkJCXN1YnNlcXVlbnQgYWN0aXZpdGllcywgbm9yIHZ1bGdhcml6ZSB0aGUgYm9kaWx5IGZyYW1lIGFuZCBtYWtlIGl0IHVzZWxlc3MgZm9yCgkJCQkJdGhlIGV4ZXJjaXNlcyBvZiB0aGUgc29sZGllciBhbmQgdGhlIGNpdGl6ZW4sIGVpdGhlciBmb3IgdGhlaXIgcHJhY3RpY2FsIHB1cnN1aXQKCQkJCQlub3cgb3IgZm9yIHRoZWlyIHNjaWVudGlmaWMgc3R1ZHkgbGF0ZXIgb24uPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JdCBpcyBkaWZmaWN1bHQgbm90IHRvIHRoaW5rIHRoYXQgZWl0aGVyIHRoZSBub3VucyBvciB0aGUgYWR2ZXJicyBpbiB0aGUKCQkJCQkJR3JlZWsgaGF2ZSBiZWVuIGVycm9uZW91c2x5IHRyYW5zcG9zZWQsIGFuZCB0aGF0IHdlIHNob3VsZCB0cmFuc2xhdGUKCQkJCQkJ4oCYZWl0aGVyIGZvciBsZWFybmluZyB0aGVtIG5vdyBvciBmb3IgcHJhY3Rpc2luZyB0aGVtIGxhdGVyCgkJCQkJCW9uLuKAmTwvbm90ZT4gQW5kIHRoaXMgd291bGQgY29tZSBhYm91dCBpbiByZXNwZWN0IG9mIHRoZWlyIHN0dWR5IGlmCgkJCQkJdGhlIHB1cGlscyBkaWQgbm90IGdvIG9uIHRvaWxpbmcgYXQgdGhlIGV4ZXJjaXNlcyB0aGF0IGFpbSBhdCBwcm9mZXNzaW9uYWwKCQkJCQljb21wZXRpdGlvbnMsIG5vciB0aGUgd29uZGVyZnVsIGFuZCBlbGFib3JhdGUgcGVyZm9ybWFuY2VzIHdoaWNoIGhhdmUgbm93CgkJCQkJZW50ZXJlZCBpbnRvIHRoZSBjb21wZXRpdGlvbnMgYW5kIGhhdmUgcGFzc2VkIGZyb20gdGhlIGNvbXBldGl0aW9ucyBpbnRvCgkJCQkJZWR1Y2F0aW9uLCBidXQgYWxzbyBvbmx5IHByYWN0aXNlZCBleGVyY2lzZXMgbm90IG9mIHRoYXQgc29ydCB1bnRpbCB0aGV5IGFyZQoJCQkJCWFibGUgdG8gZW5qb3kgYmVhdXRpZnVsIHR1bmVzIGFuZCByaHl0aG1zLCBhbmQgbm90IG1lcmVseSB0aGUgY2hhcm0gY29tbW9uIHRvCgkJCQkJYWxsIG11c2ljLCB3aGljaCBldmVuIHNvbWUgbG93ZXIgYW5pbWFscyBlbmpveSwgYXMgd2VsbCBhcyBhIG11bHRpdHVkZSBvZiBzbGF2ZXMKCQkJCQlhbmQgY2hpbGRyZW4uIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjYuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBpdCBpcyBhbHNvIGNsZWFyCgkJCQkJZnJvbSB0aGVzZSBjb25zaWRlcmF0aW9ucyB3aGF0IHNvcnQgb2YgaW5zdHJ1bWVudHMgdGhleSBzaG91bGQgdXNlLiBGbHV0ZXMgbXVzdAoJCQkJCW5vdCBiZSBpbnRyb2R1Y2VkIGludG8gZWR1Y2F0aW9uLCBub3IgYW55IG90aGVyIHByb2Zlc3Npb25hbCBpbnN0cnVtZW50LCBzdWNoIGFzCgkJCQkJdGhlIGhhcnAgb3IgYW55IG90aGVyIG9mIHRoYXQgc29ydCwgYnV0PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5zdWNoIGluc3RydW1lbnRzIGFzIHdpbGwgbWFrZSB0aGVtIGF0dGVudGl2ZSBwdXBpbHMgZWl0aGVyIGF0IHRoZWlyIG11c2ljYWwKCQkJCQl0cmFpbmluZyBvciBpbiB0aGVpciBvdGhlciBsZXNzb25zLiBNb3Jlb3ZlciB0aGUgZmx1dGUgaXMgbm90IGEgbW9yYWxpemluZyBidXQKCQkJCQlyYXRoZXIgYW4gZXhjaXRpbmcgaW5mbHVlbmNlLCBzbyB0aGF0IGl0IG91Z2h0IHRvIGJlIHVzZWQgZm9yIG9jY2FzaW9ucyBvZiB0aGUKCQkJCQlraW5kIGF0IHdoaWNoIGF0dGVuZGFuY2UgaGFzIHRoZSBlZmZlY3Qgb2YgcHVyaWZpY2F0aW9uIHJhdGhlciB0aGFuCgkJCQkJCWluc3RydWN0aW9uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEzNDFhIDMzIGZmLjwvbm90ZT4gQW5kCgkJCQkJbGV0IHVzIGFkZCB0aGF0IHRoZSBmbHV0ZSBoYXBwZW5zIHRvIHBvc3Nlc3MgdGhlIGFkZGl0aW9uYWwgcHJvcGVydHkgdGVsbGluZwoJCQkJCWFnYWluc3QgaXRzIHVzZSBpbiBlZHVjYXRpb24gdGhhdCBwbGF5aW5nIGl0IHByZXZlbnRzIHRoZSBlbXBsb3ltZW50IG9mIHNwZWVjaC4KCQkJCQlIZW5jZSBmb3JtZXIgYWdlcyByaWdodGx5IHJlamVjdGVkIGl0cyB1c2UgYnkgdGhlIHlvdW5nIGFuZCB0aGUgZnJlZSwgYWx0aG91Z2gKCQkJCQlhdCBmaXJzdCB0aGV5IGhhZCBlbXBsb3llZCBpdC4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNi42IiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yCgkJCQkJYXMgdGhleSBjYW1lIHRvIGhhdmUgbW9yZSBsZWlzdXJlIGJlY2F1c2Ugb2YgdGhlaXIgd2VhbHRoIGFuZCBncmV3IG1vcmUKCQkJCQloaWdoLXNwaXJpdGVkIGFuZCB2YWxvcm91cywgYm90aCBhdCBhIHN0aWxsIGVhcmxpZXIgZGF0ZSBhbmQgYmVjYXVzZSBhZnRlciB0aGUKCQkJCQlQZXJzaWFuIFdhcnMgdGhleSB3ZXJlIGZpbGxlZCB3aXRoIHByaWRlIGFzIGEgcmVzdWx0IG9mIHRoZWlyIGFjaGlldmVtZW50cywgdGhleQoJCQkJCWJlZ2FuIHRvIGVuZ2FnZSBpbiBhbGwgYnJhbmNoZXMgb2YgbGVhcm5pbmcsIG1ha2luZyBubyBkaXN0aW5jdGlvbiBidXQgcHVyc3VpbmcKCQkJCQlyZXNlYXJjaCBmdXJ0aGVyLiBCZWNhdXNlIG9mIHRoaXMgdGhleSBldmVuIGluY2x1ZGVkIGZsdXRlLXBsYXlpbmcgYW1vbmcgdGhlaXIKCQkJCQlzdHVkaWVzOyBmb3IgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiBhIGNlcnRhaW4KCQkJCQljaG9ydXMtbGVhZGVyIHBsYXllZCB0aGUgZmx1dGUgdG8gaGlzIGNob3J1cyBoaW1zZWxmLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSB3ZWFsdGh5IGNpdGl6ZW4gd2hvIHVuZGVydG9vayB0aGUgZHV0eSBvZiBlcXVpcHBpbmcgYW5kCgkJCQkJCXRyYWluaW5nIGEgY2hvcnVzIGZvciBhIHJlbGlnaW91cyBjZWxlYnJhdGlvbiDvvIhlc3BlY2lhbGx5IHRoZQoJCQkJCQlwcm9kdWN0aW9uIG9mIGEgZHJhbWEgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPu+8iSB1c3VhbGx5IGhhZCBhbiBhc3Npc3RhbnQgb2YgbG93ZXIgc3RhdGlvbiB0bwoJCQkJCQlzdXBwbHkgdGhlIGluc3RydW1lbnRhbCBtdXNpYy4gVGhlIG9mZmljZSBvZiBjaG9yZWd1cyBpcyBub3QgZWxzZXdoZXJlCgkJCQkJCXJlZmVycmVkIHRvIGFzIGV4aXN0aW5nIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDExMDY1IiBrZXk9InRnbiw3MDExMDY1Ij5TcGFydGE8L3BsYWNlTmFtZT4uPC9ub3RlPiBhbmQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTMiIGtleT0idGduLDcwMDEzOTMiPkF0aGVuczwvcGxhY2VOYW1lPiBpdCBiZWNhbWUgc28gZmFzaGlvbmFibGUgdGhhdCBhbG1vc3QgdGhlIG1ham9yaXR5IG9mCgkJCQkJZnJlZW1lbiB3ZW50IGluIGZvciBmbHV0ZS1wbGF5aW5nLCBhcyBpcyBzaG93biBieSB0aGUgdGFibGV0IGVyZWN0ZWQgYnkKCQkJCQlUaHJhc2lwcHVzIGFmdGVyIGhhdmluZyBwcm92aWRlZCB0aGUgY2hvcnVzIGZvciBFY3BoYW50aWRlcy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkVjcGhhbnRpZGVzIHdhcyBvbmUgb2YgdGhlIGVhcmxpZXN0IGNvbWljIHBvZXRzOyBUaHJhc2lwcHVzCgkJCQkJCWlzIG5vdCBlbHNld2hlcmUgcmVjb3JkZWQuIFdobyB0aGUgZmx1dGUtcGxheWVyIHdhcyBpcyB1bmtub3duLjwvbm90ZT4KCQkJCQk8bWlsZXN0b25lIGVkPSJQIiBuPSI2LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgbGF0ZXIgb24gaXQgY2FtZSB0byBiZQoJCQkJCWRpc2FwcHJvdmVkIG9mIGFzIGEgcmVzdWx0IG9mIGFjdHVhbCBleHBlcmllbmNlLCB3aGVuIG1lbiB3ZXJlIG1vcmUgY2FwYWJsZSBvZgoJCQkJCWp1ZGdpbmcgd2hhdCBtdXNpYyBjb25kdWNlZCB0byB2aXJ0dWUgYW5kIHdoYXQgZGlkIG5vdDsgYW5kIHNpbWlsYXJseSBhbHNvIG1hbnkKCQkJCQlvZiB0aGUgb2xkIGluc3RydW1lbnRzIHdlcmUgZGlzYXBwcm92ZWQgb2YsIGxpa2UgdGhlIHBlY3RpcyBhbmQgdGhlCgkJCQkJCWJhcmJpdG9zPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGVzZSB3ZXJlIG9sZC1mYXNoaW9uZWQgZm9ybXMKCQkJCQkJb2YgdGhlIGx5cmUuPC9ub3RlPiBhbmQgdGhlIGluc3RydW1lbnRzIGRlc2lnbmVkIHRvIGdpdmUgcGxlYXN1cmUgdG8gdGhvc2UKCQkJCQl3aG8gaGVhciBwZW9wbGUgcGxheWluZyB0aGVtLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBwb3NzaWJsZQoJCQkJCQllbWVuZGF0aW9uIG9mIHRoZSBHcmVlayBnaXZlcyDigJh0aG9zZSB3aG8gbGlzdGVuIHRvIHRoZWlyCgkJCQkJCW1vZHVsYXRpb25zLuKAmTwvbm90ZT4gdGhlIHNlcHRhbmdsZSwgdGhlIHRyaWFuZ2xlIGFuZCB0aGUKCQkJCQkJc2FtYnljLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhyZWUgZGlmZmVyZW50IHN0cmluZ2VkCgkJCQkJCWluc3RydW1lbnRzLCB0aGUgbGFzdCBoYXZpbmcgZm91ciBzdHJpbmdzIHN0cmV0Y2hlZCBpbiBhIHRyaWFuZ3VsYXIKCQkJCQkJZnJhbWUuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgbj0iMTM0MWIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBhbGwgdGhlIGluc3RydW1lbnRzIHRoYXQgcmVxdWlyZSBtYW51YWwgc2tpbGwuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNi44IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGluZGVlZCB0aGVyZSBpcyBhIHJlYXNvbmFibGUgZm91bmRhdGlvbiBmb3IgdGhlIHN0b3J5CgkJCQkJdGhhdCB3YXMgdG9sZCBieSB0aGUgYW5jaWVudHMgYWJvdXQgdGhlIGZsdXRlLiBUaGUgdGFsZSBnb2VzIHRoYXQgQXRoZW5hIGZvdW5kIGEKCQkJCQlmbHV0ZSBhbmQgdGhyZXcgaXQgYXdheS4gTm93IGl0IGlzIG5vdCBhIGJhZCBwb2ludCBpbiB0aGUgc3RvcnkgdGhhdCB0aGUgZ29kZGVzcwoJCQkJCWRpZCB0aGlzIG91dCBvZiBhbm5veWFuY2UgYmVjYXVzZSBvZiB0aGUgdWdseSBkaXN0b3J0aW9uIG9mIGhlciBmZWF0dXJlczsgYnV0IGFzCgkJCQkJYSBtYXR0ZXIgb2YgZmFjdCBpdCBpcyBtb3JlIGxpa2VseSB0aGF0IGl0IHdhcyBiZWNhdXNlIGVkdWNhdGlvbiBpbgoJCQkJCWZsdXRlLXBsYXlpbmcgaGFzIG5vIGVmZmVjdCBvbiB0aGUgaW50ZWxsaWdlbmNlLCB3aGVyZWFzIHdlIGF0dHJpYnV0ZSBzY2llbmNlCgkJCQkJYW5kIGFydCB0byBBdGhlbmEuPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgc2luY2Ugd2UgcmVqZWN0IHByb2Zlc3Npb25hbCBlZHVjYXRpb24gaW4gdGhlIGluc3RydW1lbnRzCgkJCQkJYW5kIGluIHBlcmZvcm1hbmNlPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgR3JlZWsgc2hvdWxkIHByb2JhYmx5CgkJCQkJCWJlIGFsdGVyZWQgdG8gZ2l2ZSDigJhyZWplY3QsIHNvbWUgaW5zdHJ1bWVudHMgYW5kIHByb2Zlc3Npb25hbAoJCQkJCQllZHVjYXRpb24gaW4gcGVyZm9ybWFuY2Uu4oCZPC9ub3RlPiDvvIhhbmQgd2UgY291bnQKCQkJCQlwZXJmb3JtYW5jZSBpbiBjb21wZXRpdGlvbnMgYXMgcHJvZmVzc2lvbmFsLCBmb3IgdGhlIHBlcmZvcm1lciBkb2VzIG5vdCB0YWtlCgkJCQkJcGFydCBpbiBpdCBmb3IgaGlzIG93biBpbXByb3ZlbWVudCwgYnV0IGZvciBoaXMgaGVhcmVycycgcGxlYXN1cmUsIGFuZCB0aGF0IGEKCQkJCQl2dWxnYXIgcGxlYXN1cmUsIG93aW5nIHRvIHdoaWNoIHdlIGRvIG5vdCBjb25zaWRlciBwZXJmb3JtaW5nIHRvIGJlIHByb3BlciBmb3IKCQkJCQlmcmVlIG1lbiwgYnV0IHNvbWV3aGF0IG1lbmlhbDsgYW5kIGluZGVlZCBwZXJmb3JtZXJzIGRvIGJlY29tZSB2dWxnYXIsIHNpbmNlIHRoZQoJCQkJCW9iamVjdCBhdCB3aGljaCB0aGV5IGFpbSBpcyBhIGxvdyBvbmUsIGFzIHZ1bGdhcml0eSBpbiB0aGUgYXVkaWVuY2UgdXN1YWxseQoJCQkJCWluZmx1ZW5jZXMgdGhlIG11c2ljLCBzbyB0aGF0IGl0IGltcGFydHMgdG8gdGhlIGFydGlzdHMgd2hvIHByYWN0aXNlIGl0IHdpdGggYQoJCQkJCXZpZXcgdG8gc3VpdCB0aGUgYXVkaWVuY2UgYSBzcGVjaWFsIGtpbmQgb2YgcGVyc29uYWxpdHksIGFuZCBhbHNvIG9mIGJvZGlseQoJCQkJCWZyYW1lIGJlY2F1c2Ugb2YgdGhlIG1vdmVtZW50cyByZXF1aXJlZO+8ieKAlDxtaWxlc3RvbmUgZWQ9IlAiIG49IjcuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPndlIG11c3QgdGhlcmVmb3JlIGdpdmUgc29tZSBjb25zaWRlcmF0aW9uIHRvIHR1bmVzCgkJCQkJYW5kIHJoeXRobXMsPG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgdG8gdGhlIHF1ZXN0aW9uCgkJCQkJd2hldGhlciBmb3IgZWR1Y2F0aW9uYWwgcHVycG9zZXMgd2UgbXVzdCBlbXBsb3kgYWxsIHRoZSB0dW5lcyBhbmQgYWxsIHRoZQoJCQkJCXJoeXRobXMgb3IgbWFrZSBkaXN0aW5jdGlvbnM7IGFuZCBuZXh0LCB3aGV0aGVyIGZvciB0aG9zZSB3aG8gYXJlIHdvcmtpbmcgYXQKCQkJCQltdXNpYyBmb3IgZWR1Y2F0aW9uIHdlIHNoYWxsIGxheSBkb3duIHRoZSBzYW1lIHJlZ3VsYXRpb24sIG9yIG91Z2h0IHdlIHRvCgkJCQkJZXN0YWJsaXNoIHNvbWUgb3RoZXIgdGhpcmQgb25lIO+8iGluYXNtdWNoIGFzIHdlIHNlZSB0aGF0IHRoZSBmYWN0b3JzIGluCgkJCQkJbXVzaWMgYXJlIG1lbG9keSBhbmQgcmh5dGhtLCBhbmQgaXQgaXMgaW1wb3J0YW50IHRvIG5vdGljZSB3aGF0IGluZmx1ZW5jZSBlYWNoCgkJCQkJb2YgdGhlc2UgaGFzIHVwb24gZWR1Y2F0aW9u77yJLCBhbmQgd2hldGhlciB3ZSBhcmUgdG8gcHJlZmVyIG11c2ljIHdpdGggYQoJCQkJCWdvb2QgbWVsb2R5IG9yIG11c2ljIHdpdGggYSBnb29kIHJoeXRobS4gPG1pbGVzdG9uZSBlZD0iUCIgbj0iNy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+Tm93IHdlIGNvbnNpZGVyIHRoYXQgbXVjaCBpcyB3ZWxsIHNhaWQgb24gdGhlc2UgbWF0dGVycyBieQoJCQkJCXNvbWUgb2YgdGhlIG11c2ljaWFucyBvZiB0aGUgcHJlc2VudCBkYXkgYW5kIGJ5IHNvbWUgb2YgdGhvc2UgZW5nYWdlZCBpbgoJCQkJCXBoaWxvc29waHkgd2hvIGhhcHBlbiB0byBiZSBleHBlcmllbmNlZCBpbiBtdXNpY2FsIGVkdWNhdGlvbiwgYW5kIHdlIHdpbGwKCQkJCQlhYmFuZG9uIHRoZSBwcmVjaXNlIGRpc2N1c3Npb24gYXMgdG8gZWFjaCBvZiB0aGVzZSBtYXR0ZXJzIGZvciBhbnkgd2hvIHdpc2ggaXQKCQkJCQl0byBzZWVrIGl0IGZyb20gdGhvc2UgdGVhY2hlcnMsIHdoaWxlIGZvciB0aGUgcHJlc2VudCBsZXQgdXMgbGF5IGRvd24gZ2VuZXJhbAoJCQkJCXByaW5jaXBsZXMsIG1lcmVseSBzdGF0aW5nIHRoZSBvdXRsaW5lcyBvZiB0aGUgc3ViamVjdHMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjcuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBzaW5jZSB3ZSBhY2NlcHQgdGhlIGNsYXNzaWZpY2F0aW9uIG9mIG1lbG9kaWVzCgkJCQkJbWFkZSBieSBzb21lIHBoaWxvc29waGVycywgYXMgZXRoaWNhbCBtZWxvZGllcywgbWVsb2RpZXMgb2YgYWN0aW9uLCBhbmQKCQkJCQlwYXNzaW9uYXRlIG1lbG9kaWVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiByZXByZXNlbnRhdGl2ZSBvZgoJCQkJCQljaGFyYWN0ZXIsIG9mIGFjdGlvbiBhbmQgb2YgZW1vdGlvbi48L25vdGU+IGRpc3RyaWJ1dGluZyB0aGUgdmFyaW91cwoJCQkJCWhhcm1vbmllcyBhbW9uZyB0aGVzZSBjbGFzc2VzIGFzIGJlaW5nIGluIG5hdHVyZSBha2luIHRvIG9uZSBvciB0aGUgb3RoZXIsIGFuZAoJCQkJCWFzIHdlIHNheSB0aGF0IG11c2ljIG91Z2h0IHRvIGJlIGVtcGxveWVkIG5vdCBmb3IgdGhlIHB1cnBvc2Ugb2Ygb25lIGJlbmVmaXQKCQkJCQl0aGF0IGl0IGNvbmZlcnMgYnV0IG9uIGFjY291bnQgb2Ygc2V2ZXJhbCDvvIhmb3IgaXQgc2VydmVzIHRoZSBwdXJwb3NlCgkJCQkJYm90aCBvZiBlZHVjYXRpb24gYW5kIG9mIHB1cmdhdGlvbuKAlHRoZSB0ZXJtIHB1cmdhdGlvbiB3ZSB1c2UgZm9yIHRoZQoJCQkJCXByZXNlbnQgd2l0aG91dCBleHBsYW5hdGlvbiwgYnV0IHdlIHdpbGwgcmV0dXJuIHRvIGRpc2N1c3MgdGhlIG1lYW5pbmcgdGhhdCB3ZQoJCQkJCWdpdmUgdG8gaXQgbW9yZSBleHBsaWNpdGx5IGluIG91ciB0cmVhdGlzZSBvbiBwb2V0cnk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluIDxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBQb2V0LiAxNDQ5YiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gUG9ldC4gNjwvYmlibD4KCQkJCQkJdHJhZ2VkeSBpcyBzYWlkIHRvIHB1cmdlIHRoZSBlbW90aW9uIG9mIHBpdHkgYW5kIGZlYXIgYnkgZ2l2aW5nIHRoZW0gYW4KCQkJCQkJb3V0bGV0OyB0aGUgcmVmZXJlbmNlIGhlcmUgaXMgcHJvYmFibHkgdG8gdGhlIGxvc3QgU2Vjb25kIEJvb2sgb2YKCQkJCQkJCTx0aXRsZT5Qb2V0aWNzPC90aXRsZT4uPC9ub3RlPuKAlGFuZCB0aGlyZGx5IGl0IHNlcnZlcyBmb3IKCQkJCQlhbXVzZW1lbnQsIHNlcnZpbmcgdG8gcmVsYXggb3VyIHRlbnNpb24gYW5kIHRvIGdpdmUgcmVzdCBmcm9tIGl077yJLAoJCQkJCQk8bWlsZXN0b25lIG49IjEzNDJhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz48bWlsZXN0b25lIGVkPSJQIiBuPSI3LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5pdCBpcyBjbGVhciB0aGF0IHdlCgkJCQkJc2hvdWxkIGVtcGxveSBhbGwgdGhlIGhhcm1vbmllcywgeWV0IG5vdCBlbXBsb3kgdGhlbSBhbGwgaW4gdGhlIHNhbWUgd2F5LCBidXQKCQkJCQl1c2UgdGhlIG1vc3QgZXRoaWNhbCBvbmVzIGZvciBlZHVjYXRpb24sIGFuZCB0aGUgYWN0aXZlIGFuZCBwYXNzaW9uYXRlIGtpbmRzIGZvcgoJCQkJCWxpc3RlbmluZyB0byB3aGVuIG90aGVycyBhcmUgcGVyZm9ybWluZyDvvIhmb3IgYW55IGV4cGVyaWVuY2UgdGhhdCBvY2N1cnMKCQkJCQl2aW9sZW50bHkgaW4gc29tZSBzb3VscyBpcyBmb3VuZCBpbiBhbGwsIHRob3VnaCB3aXRoIGRpZmZlcmVudCBkZWdyZWVzIG9mCgkJCQkJaW50ZW5zaXR54oCUZm9yIGV4YW1wbGUgcGl0eSBhbmQgZmVhciwgYW5kIGFsc28gcmVsaWdpb3VzIGV4Y2l0ZW1lbnQ7CgkJCQkJZm9yIHNvbWUgcGVyc29ucyBhcmUgdmVyeSBsaWFibGUgdG8gdGhpcyBmb3JtIG9mIGVtb3Rpb24sIGFuZCB1bmRlciB0aGUKCQkJCQlpbmZsdWVuY2Ugb2Ygc2FjcmVkIG11c2ljIHdlIHNlZSB0aGVzZSBwZW9wbGUsIHdoZW4gdGhleSB1c2UgdHVuZXMgdGhhdAoJCQkJCXZpb2xlbnRseSBhcm91c2UgdGhlIHNvdWwsIGJlaW5nIHRocm93biBpbnRvIGEgc3RhdGUgYXMgaWYgdGhleSBoYWQgcmVjZWl2ZWQKCQkJCQltZWRpY2luYWwgdHJlYXRtZW50IGFuZCB0YWtlbiBhIHB1cmdlOyA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz50aGUgc2FtZSBleHBlcmllbmNlIHRoZW4gbXVzdCBjb21lIGFsc28gdG8gdGhlCgkJCQkJY29tcGFzc2lvbmF0ZSBhbmQgdGhlIHRpbWlkIGFuZCB0aGUgb3RoZXIgZW1vdGlvbmFsIHBlb3BsZSBnZW5lcmFsbHkgaW4gc3VjaAoJCQkJCWRlZ3JlZSBhcyBiZWZhbGxzIGVhY2ggaW5kaXZpZHVhbCBvZiB0aGVzZSBjbGFzc2VzLCBhbmQgYWxsIG11c3QgdW5kZXJnbyBhCgkJCQkJcHVyZ2F0aW9uIGFuZCBhIHBsZWFzYW50IGZlZWxpbmcgb2YgcmVsaWVmOyBhbmQgc2ltaWxhcmx5IGFsc28gdGhlIHB1cmdhdGl2ZQoJCQkJCW1lbG9kaWVzIGFmZm9yZCBoYXJtbGVzcyBkZWxpZ2h0IHRvIHBlb3BsZe+8iS4gVGhlcmVmb3JlIHRob3NlIHdobyBnbyBpbgoJCQkJCWZvciB0aGVhdHJpY2FsIG11c2ljIG11c3QgYmUgc2V0IHRvIGNvbXBldGUgaW4gaGFybW9uaWVzIGFuZCBtZWxvZGllcyBvZiB0aGlzCgkJCQkJa2luZCA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz7vvIhhbmQgc2luY2UgdGhlCgkJCQkJYXVkaWVuY2UgaXMgb2YgdHdvIGNsYXNzZXMsIG9uZSBmcmVlbWVuIGFuZCBlZHVjYXRlZCBwZW9wbGUsIGFuZCB0aGUKCQkJCQkJb3RoZXI8bWlsZXN0b25lIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPnRoZSB2dWxnYXIgY2xhc3MgY29tcG9zZWQgb2YKCQkJCQltZWNoYW5pY3MgYW5kIGxhYm9yZXJzIGFuZCBvdGhlciBzdWNoIHBlcnNvbnMsIHRoZSBsYXR0ZXIgc29ydCBhbHNvIG11c3QgYmUKCQkJCQlhc3NpZ25lZCBjb21wZXRpdGlvbnMgYW5kIHNob3dzIGZvciByZWxheGF0aW9uOyBhbmQganVzdCBhcyB0aGVpciBzb3VscyBhcmUKCQkJCQl3YXJwZWQgZnJvbSB0aGUgbmF0dXJhbCBzdGF0ZSwgc28gdGhvc2UgaGFybW9uaWVzIGFuZCBtZWxvZGllcyB0aGF0IGFyZSBoaWdobHkKCQkJCQlzdHJ1bmcgYW5kIGlycmVndWxhciBpbiBjb2xvcmF0aW9uPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TYWlkIHRvCgkJCQkJCW1lYW4gZGl2ZXJnZW50IGZyb20gdGhlIHJlZ3VsYXIgc2NhbGUgaW4gaGF2aW5nIHNtYWxsZXIgaW50ZXJ2YWxzLjwvbm90ZT4KCQkJCQlhcmUgZGV2aWF0aW9ucywgYnV0IHBlb3BsZSBvZiBlYWNoIHNvcnQgcmVjZWl2ZSBwbGVhc3VyZSBmcm9tIHdoYXQgaXMgbmF0dXJhbGx5CgkJCQkJc3VpdGVkIHRvIHRoZW0sIG93aW5nIHRvIHdoaWNoIHRoZSBjb21wZXRpdG9ycyBiZWZvcmUgYW4gYXVkaWVuY2Ugb2YgdGhpcyBzb3J0CgkJCQkJbXVzdCBiZSBhbGxvd2VkIHRvIGVtcGxveSBzb21lIHN1Y2gga2luZCBvZiBtdXNpYyBhcyB0aGlz77yJOyA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz5idXQgZm9yIGVkdWNhdGlvbiwgYXMgaGFzIGJlZW4gc2FpZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjEzNDJhIDIuPC9ub3RlPiB0aGUgZXRoaWNhbCBjbGFzcyBvZiBtZWxvZGllcwoJCQkJCWFuZCBvZiBoYXJtb25pZXMgbXVzdCBiZSBlbXBsb3llZC4gQW5kIG9mIHRoYXQgbmF0dXJlIGlzIHRoZSBEb3JpYW4gbW9kZSwgYXMgd2UKCQkJCQlzYWlkIGJlZm9yZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+MTM0M2IgMyBmZi48L25vdGU+OyBidXQgd2UgbXVzdAoJCQkJCWFsc28gYWNjZXB0IGFueSBvdGhlciBtb2RlIHRoYXQgdGhvc2Ugd2hvIHRha2UgcGFydCBpbiB0aGUgcHVyc3VpdCBvZiBwaGlsb3NvcGh5CgkJCQkJYW5kIGluIG11c2ljYWwgZWR1Y2F0aW9uIG1heSByZWNvbW1lbmQgdG8gdXMuIFNvY3JhdGVzIGluIHRoZQoJCQkJCQk8dGl0bGU+UmVwdWJsaWM8L3RpdGxlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCTxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBSZXAuIDM5OWEiIHZhbGlkPSJ5ZXMiPlBsYXQuIFJlcC4gMzk5YTwvYmlibD4KCQkJCQk8L25vdGU+IGRvZXMgbm90IGRvIHdlbGwgaW4gYWxsb3dpbmcgb25seSB0aGUgUGhyeWdpYW4gbW9kZSBhbG9uZyB3aXRoIHRoZQoJCQkJCURvcmlhbiwgYW5kIHRoYXQgd2hlbiBoZSBoYXMgcmVqZWN0ZWQgdGhlIGZsdXRlIGFtb25nIGluc3RydW1lbnRzOyA8bWlsZXN0b25lIG49IjEzNDJiIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgZWQ9IkJla2tlciIgbj0iMSIgdW5pdD0ibGluZSIgLz5mb3IgdGhlCgkJCQkJUGhyeWdpYW4gbW9kZSBoYXMgdGhlIHNhbWUgZWZmZWN0IGFtb25nIGhhcm1vbmllcyBhcyB0aGUgZmx1dGUgYW1vbmcKCQkJCQlpbnN0cnVtZW50c+KAlGJvdGggYXJlIHZpb2xlbnRseSBleGNpdGluZyBhbmQgZW1vdGlvbmFsLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGlzIGlzIHNob3duIGJ5IHBvZXRyeTsgZm9yIGFsbCBCYWNjaGlhYwoJCQkJCXZlcnNpZmljYXRpb24gYW5kIGFsbCBtb3ZlbWVudCBvZiB0aGF0IHNvcnQ8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yIHBlcmhhcHMgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPs6yzrHOus+HzrXhvbfOsTwvZm9yZWlnbj4gYW5kIDxmb3JlaWduIGxhbmc9ImdyZWVrIj7OuuG9t869zrfPg865z4I8L2ZvcmVpZ24+IGRlbm90ZSBib2RpbHkgbW92ZW1lbnQgYWNjb21wYW55aW5nIHRoZQoJCQkJCQlzb25nOyBvciB0aGV5IG1heSBkZW5vdGUgdGhlIGVtb3Rpb25hbCBmcmVuenkgZXhwcmVzc2VkIGFuZCBzdGltdWxhdGVkIGJ5CgkJCQkJCWl0LiBUaGUgZGl0aHlyYW1iIHdhcyBhIGZvcm0gb2YgcG9ldHJ5IG9mIHRoaXMgY2xhc3MsIG9yaWdpbmFsbHkgY2VsZWJyYXRpbmcKCQkJCQkJdGhlIGJpcnRoIG9mIERpb255c3VzLiBQaGlsb3hlbnVzLCBvbmUgb2YgdGhlIG1vc3QgZmFtb3VzIGRpdGh5cmFtYmljIHBvZXRzLAoJCQkJCQkJPGRhdGVSYW5nZSBhdXRobmFtZT0iLTQzNS8tMzgwIiBmcm9tPSItNDM1IiB0bz0iLTM4MCI+NDM1PC9kYXRlUmFuZ2U+LTM4MCBCLkMuLCBsaXZlZCBhdAoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTMiIGtleT0idGduLDcwMDEzOTMiPkF0aGVuczwvcGxhY2VOYW1lPiwgYW5kIGxhdGVyIGF0IHRoZSBjb3VydAoJCQkJCQlvZiBEaW9ueXNpdXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPi48L25vdGU+CgkJCQkJYmVsb25ncyBwYXJ0aWN1bGFybHkgdG8gdGhlIGZsdXRlIGFtb25nIHRoZSBpbnN0cnVtZW50cywgYW5kIHRoZXNlIG1ldGVycyBmaW5kCgkJCQkJdGhlaXIgc3VpdGFibGUgYWNjb21wYW5pbWVudCBpbiB0dW5lcyBpbiB0aGUgUGhyeWdpYW4gbW9kZSBhbW9uZyB0aGUgaGFybW9uaWVzOgoJCQkJCWZvciBleGFtcGxlIHRoZSBkaXRoeXJhbWIgaXMgYWRtaXR0ZWRseSBoZWxkIHRvIGJlIGEgUGhyeWdpYW4gbWV0ZXIsIGFuZCB0aGUKCQkJCQlleHBlcnRzIG9uIHRoaXMgc3ViamVjdCBhZGR1Y2UgbWFueSBpbnN0YW5jZXMgdG8gcHJvdmUgdGhpcywgcGFydGljdWxhcmx5IHRoZQoJCQkJCWZhY3QgdGhhdCBQaGlsb3hlbnVzIHdoZW4gaGUgYXR0ZW1wdGVkIHRvIGNvbXBvc2UgYSBkaXRoeXJhbWIsIDx0aXRsZT5UaGUKCQkJCQkJTXlzaWFuczwvdGl0bGU+LCBpbiB0aGUgRG9yaWFuIG1vZGUKCQkJCQl3YXMgdW5hYmxlIHRvIGRvIHNvLCBidXQgbWVyZWx5IGJ5IHRoZSBmb3JjZSBvZiBuYXR1cmUgZmVsbCBiYWNrIGFnYWluIGludG8gdGhlCgkJCQkJc3VpdGFibGUgaGFybW9ueSwgdGhlIFBocnlnaWFuLiA8bWlsZXN0b25lIGVkPSJQIiBuPSI3LjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kCgkJCQkJYWxsIGFncmVlIHRoYXQgdGhlIERvcmlhbiBtb2RlIGlzIG1vcmUKCQkJCQlzZWRhdGUgYW5kIG9mIGEgc3BlY2lhbGx5IG1hbmx5IGNoYXJhY3Rlci4gTW9yZW92ZXIgc2luY2Ugd2UgcHJhaXNlIGFuZCBzYXkgdGhhdAoJCQkJCXdlIG91Z2h0IHRvIHB1cnN1ZSB0aGUgbWVhbiBiZXR3ZWVuIGV4dHJlbWVzLCBhbmQgdGhlIERvcmlhbiBtb2RlIGhhcyB0aGlzIG5hdHVyZSBpbiByZWxhdGlvbiB0byB0aGUKCQkJCQlvdGhlciBoYXJtb25pZXMsIGl0IGlzIGNsZWFyIHRoYXQgaXQgc3VpdHMgdGhlIHlvdW5nZXIgcHVwaWxzIHRvIGJlIGVkdWNhdGVkCgkJCQkJcmF0aGVyIGluIHRoZSBEb3JpYW4gbWVsb2RpZXMuIEJ1dAoJCQkJCXRoZXJlIGFyZSB0d28gb2JqZWN0cyB0byBhaW0gYXQsIHRoZSBwb3NzaWJsZSBhcyB3ZWxsIGFzIHRoZSBzdWl0YWJsZTsgZm9yIHdlCgkJCQkJYXJlIGJvdW5kIHJhdGhlciB0byBhdHRlbXB0IHRoZSB0aGluZ3MgdGhhdCBhcmUgcG9zc2libGUgYW5kIHRob3NlIHRoYXQgYXJlCgkJCQkJc3VpdGFibGUgZm9yIHRoZSBwYXJ0aWN1bGFyIGNsYXNzIG9mIHBlb3BsZSBjb25jZXJuZWQ7PG1pbGVzdG9uZSBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgaW4gdGhlc2UgbWF0dGVycyBhbHNvIHRoZXJlIGFyZSBkaXZpZGluZyBsaW5lcwoJCQkJCWRyYXduIGJ5IHRoZSBhZ2Vz4oCUZm9yIGluc3RhbmNlLCB0aG9zZSB3aG9zZSBwb3dlcnMgaGF2ZSB3YW5lZCB0aHJvdWdoCgkJCQkJbGFwc2Ugb2YgdGltZSBjYW5ub3QgZWFzaWx5IHNpbmcgdGhlIGhpZ2hseSBzdHJ1bmcgaGFybW9uaWVzLCBidXQgdG8gcGVyc29ucyBvZgoJCQkJCXRoYXQgYWdlIG5hdHVyZSBzdWdnZXN0cyB0aGUgcmVsYXhlZCBoYXJtb25pZXMuIDxtaWxlc3RvbmUgZWQ9IlAiIG49IjcuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz5UaGVyZWZvcmUgc29tZSBtdXNpY2FsIGV4cGVydHMgYWxzbyByaWdodGx5IGNyaXRpY2l6ZQoJCQkJCQlTb2NyYXRlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCTxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBSZXAuIDMzOGUiIHZhbGlkPSJ5ZXMiPlBsYXQuIFJlcC4gMzM4ZTwvYmlibD4KCQkJCQk8L25vdGU+IGJlY2F1c2UgaGUgZGlzYXBwcm92ZWQgb2YgdGhlIHJlbGF4ZWQgaGFybW9uaWVzIGZvciBhbXVzZW1lbnQsIHRha2luZwoJCQkJCXRoZW0gdG8gaGF2ZSB0aGUgY2hhcmFjdGVyIG9mIGludG94aWNhdGlvbiwgbm90IGluIHRoZSBzZW5zZSBvZiB0aGUgZWZmZWN0IG9mCgkJCQkJc3Ryb25nIGRyaW5rLCBmb3IgdGhhdCBjbGVhcmx5IGhhcyBtb3JlIHRoZSByZXN1bHQgb2YgbWFraW5nIG1lbiBmcmVuemllZAoJCQkJCXJldmVsbGVycywgYnV0IGFzIGZhaWxpbmcgaW4gcG93ZXIuIEhlbmNlIGV2ZW4gd2l0aCBhIHZpZXcgdG8gdGhlIHBlcmlvZCBvZiBsaWZlCgkJCQkJdGhhdCBpcyB0byBmb2xsb3csIHRoYXQgb2YgdGhlIGNvbXBhcmF0aXZlbHkgb2xkLCBpdCBpcyBwcm9wZXIgdG8gZW5nYWdlIGluIHRoZQoJCQkJCWhhcm1vbmllcyBhbmQgbWVsb2RpZXMgb2YgdGhpcyBraW5kIHRvbywgYW5kIGFsc28gYW55IGtpbmQgb2YgaGFybW9ueSB0aGF0IGlzCgkJCQkJc3VpdGVkIHRvIHRoZSBhZ2Ugb2YgYm95aG9vZCBiZWNhdXNlIGl0IGlzIGNhcGFibGUgb2YgYmVpbmcgYXQgb25jZSBkZWNvcm91cyBhbmQKCQkJCQllZHVjYXRpdmUsIHdoaWNoIHNlZW1zIHRvIGJlIHRoZSBuYXR1cmUgb2YgdGhlIEx5ZGlhbiBtb2RlIG1vc3Qgb2YgYWxsIHRoZQoJCQkJCWhhcm1vbmllcy4gSXQgaXMgY2xlYXIgdGhlcmVmb3JlIHRoYXQgd2Ugc2hvdWxkIGxheSBkb3duIHRoZXNlIHRocmVlIGNhbm9ucyB0bwoJCQkJCWd1aWRlIGVkdWNhdGlvbiwgbW9kZXJhdGlvbiwgcG9zc2liaWxpdHkgYW5kIHN1aXRhYmlsaXR5LjwvcD4KCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMzdhIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxMSIgdW5pdD0ibGluZSIgLz48L3RyYW5zbGF0aW9uPg=="
translation['8.1337a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Cb29rIDUgaW4gc29tZSBlZGl0aW9ucy48L25vdGU+Tm93CgkJCQkJbm9ib2R5IHdvdWxkIGRpc3B1dGUgdGhhdCB0aGUgZWR1Y2F0aW9uIG9mIHRoZSB5b3VuZyByZXF1aXJlcyB0aGUgc3BlY2lhbAoJCQkJCWF0dGVudGlvbiBvZiB0aGUgbGF3Z2l2ZXIuIEluZGVlZCB0aGUgbmVnbGVjdCBvZiB0aGlzIGluIHN0YXRlcyBpcyBpbmp1cmlvdXMgdG8KCQkJCQl0aGVpciBjb25zdGl0dXRpb25zOyBmb3IgZWR1Y2F0aW9uIG91Z2h0IHRvIGJlIGFkYXB0ZWQgdG8gdGhlIHBhcnRpY3VsYXIgZm9ybSBvZgoJCQkJCWNvbnN0aXR1dGlvbiwgc2luY2UgdGhlIHBhcnRpY3VsYXIgY2hhcmFjdGVyIGJlbG9uZ2luZyB0byBlYWNoIGNvbnN0aXR1dGlvbiBib3RoCgkJCQkJZ3VhcmRzIHRoZSBjb25zdGl0dXRpb24gZ2VuZXJhbGx5IGFuZCBvcmlnaW5hbGx5IGVzdGFibGlzaGVzIGl04oCUZm9yCgkJCQkJaW5zdGFuY2UgdGhlIGRlbW9jcmF0aWMgc3Bpcml0IHByb21vdGVzIGRlbW9jcmFjeSBhbmQgdGhlIG9saWdhcmNoaWMgc3Bpcml0CgkJCQkJb2xpZ2FyY2h5OyBhbmQgdGhlIGJlc3Qgc3Bpcml0IGFsd2F5cyBjYXVzZXMgYSBiZXR0ZXIgY29uc3RpdHV0aW9uLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPk1vcmVvdmVyIGluIHJlZ2FyZCB0byBhbGwgdGhlIGZhY3VsdGllcyBhbmQKCQkJCQljcmFmdHMgY2VydGFpbiBmb3JtcyBvZiBwcmVsaW1pbmFyeSBlZHVjYXRpb248bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIHRyYWluaW5nIGluIHRoZWlyIHZhcmlvdXMgb3BlcmF0aW9ucyBhcmUgbmVjZXNzYXJ5cyBvIHRoYXQKCQkJCQltYW5pZmVzdGx5IHRoaXMgaXMgYWxzbyByZXF1aXNpdGUgaW4gcmVnYXJkIHRvIHRoZSBhY3Rpb25zIG9mIHZpcnR1ZS4gQW5kCgkJCQkJaW5hc211Y2ggYXMgdGhlIGVuZCBmb3IgdGhlIHdob2xlIHN0YXRlIGlzIG9uZSwgaXQgaXMgbWFuaWZlc3QgdGhhdCBlZHVjYXRpb24KCQkJCQlhbHNvIG11c3QgbmVjZXNzYXJpbHkgYmUgb25lIGFuZCB0aGUgc2FtZSBmb3IgYWxsIGFuZCB0aGF0IHRoZSBzdXBlcmludGVuZGVuY2UKCQkJCQlvZiB0aGlzIG11c3QgYmUgcHVibGljLCBhbmQgbm90IG9uIHByaXZhdGUgbGluZXMsIGluIHRoZSB3YXkgaW4gd2hpY2ggYXQgcHJlc2VudAoJCQkJCWVhY2ggbWFuIHN1cGVyaW50ZW5kcyB0aGUgZWR1Y2F0aW9uIG9mIGhpcyBvd24gY2hpbGRyZW4sIHRlYWNoaW5nIHRoZW0KCQkJCQlwcml2YXRlbHksIGFuZCB3aGF0ZXZlciBzcGVjaWFsIGJyYW5jaCBvZiBrbm93bGVkZ2UgaGUgdGhpbmtzIGZpdC4gQnV0IG1hdHRlcnMKCQkJCQlvZiBwdWJsaWMgaW50ZXJlc3Qgb3VnaHQgdG8gYmUgdW5kZXIgcHVibGljIHN1cGVydmlzaW9uOyBhdCB0aGUgc2FtZSB0aW1lIHdlCgkJCQkJb3VnaHQgbm90IHRvIHRoaW5rIHRoYXQgYW55IG9mIHRoZSBjaXRpemVucyBiZWxvbmdzIHRvIGhpbXNlbGYsIGJ1dCB0aGF0IGFsbAoJCQkJCWJlbG9uZyB0byB0aGUgc3RhdGUsIGZvciBlYWNoIGlzIGEgcGFydCBvZiB0aGUgc3RhdGUsIGFuZCBpdCBpcyBuYXR1cmFsIGZvciB0aGUKCQkJCQlzdXBlcmludGVuZGVuY2Ugb2YgdGhlIHNldmVyYWwgcGFydHMgdG8gaGF2ZSByZWdhcmQgdG8gdGhlIHN1cGVyaW50ZW5kZW5jZSBvZgoJCQkJCXRoZSB3aG9sZS4gPC90cmFuc2xhdGlvbj4="
translation['8.1337b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIG9uZSBtaWdodCBwcmFpc2UgdGhlCgkJCQkJU3BhcnRhbnMgaW4gcmVzcGVjdCBvZiB0aGlzLCBmb3IgdGhleSBwYXkgdGhlIGdyZWF0ZXN0IGF0dGVudGlvbiB0byB0aGUgdHJhaW5pbmcKCQkJCQlvZiB0aGVpciBjaGlsZHJlbiwgYW5kIGNvbmR1Y3QgaXQgb24gYSBwdWJsaWMgc3lzdGVtLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyBjbGVhciB0aGVuIHRoYXQgdGhlcmUgc2hvdWxkIGJlIGxlZ2lzbGF0aW9uIGFib3V0CgkJCQkJZWR1Y2F0aW9uIGFuZCB0aGF0IGl0IHNob3VsZCBiZSBjb25kdWN0ZWQgb24gYSBwdWJsaWMgc3lzdGVtLiBCdXQgY29uc2lkZXJhdGlvbgoJCQkJCW11c3QgYmUgZ2l2ZW4gdG8gdGhlIHF1ZXN0aW9uLCB3aGF0IGNvbnN0aXR1dGVzIGVkdWNhdGlvbiBhbmQgd2hhdCBpcyB0aGUgcHJvcGVyCgkJCQkJd2F5IHRvIGJlIGVkdWNhdGVkLiBBdCBwcmVzZW50IHRoZXJlIGFyZSBkaWZmZXJlbmNlcyBvZiBvcGluaW9uIGFzIHRvIHRoZSBwcm9wZXIKCQkJCQl0YXNrcyB0byBiZSBzZXQ7IGZvciBhbGwgcGVvcGxlcyBkbyBub3QgYWdyZWUgYXMgdG8gdGhlIHRoaW5ncyB0aGF0IHRoZSB5b3VuZwoJCQkJCW91Z2h0IHRvIGxlYXJuLCBlaXRoZXIgd2l0aCBhIHZpZXcgdG8gdmlydHVlIG9yIHdpdGggYSB2aWV3IHRvIHRoZSBiZXN0IGxpZmUsCgkJCQkJbm9yIGlzIGl0IGNsZWFyIHdoZXRoZXIgdGhlaXIgc3R1ZGllcyBzaG91bGQgYmUgcmVndWxhdGVkIG1vcmUgd2l0aCByZWdhcmQgdG8KCQkJCQlpbnRlbGxlY3Qgb3Igd2l0aCByZWdhcmQgdG8gY2hhcmFjdGVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCBjb25mdXNpbmcgcXVlc3Rpb25zIGFyaXNlIG91dCBvZiB0aGUgZWR1Y2F0aW9uIHRoYXQKCQkJCQlhY3R1YWxseSBwcmV2YWlscywgYW5kIGl0IGlzIG5vdCBhdCBhbGwgY2xlYXIgd2hldGhlciB0aGUgcHVwaWxzIHNob3VsZCBwcmFjdGlzZQoJCQkJCXB1cnN1aXRzIHRoYXQgYXJlIHByYWN0aWNhbGx5IG1vcmFsbHkgZWRpZnlpbmcsIG9yIGhpZ2hlcgoJCQkJCWFjY29tcGxpc2htZW50c+KAlGZvciBhbGwgdGhlc2Ugdmlld3MgaGF2ZSB3b24gdGhlIHN1cHBvcnQgb2Ygc29tZQoJCQkJCWp1ZGdlczsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMzdiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['8.1337b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBub3RoaW5nIGlzIGFncmVlZCBhcyByZWdhcmRzIHRoZSBleGVyY2lzZSBjb25kdWNpdmUgdG8KCQkJCQl2aXJ0dWUsIGZvciwgdG8gc3RhcnQgd2l0aCwgYWxsIG1lbiBkbyBub3QgaG9ub3IgdGhlIHNhbWUgdmlydHVlLCBzbyB0aGF0IHRoZXkKCQkJCQluYXR1cmFsbHkgaG9sZCBkaWZmZXJlbnQgb3BpbmlvbnMgaW4gcmVnYXJkIHRvIHRyYWluaW5nIGluIHZpcnR1ZS48L3RyYW5zbGF0aW9uPg=="
translation['8.1337b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGlzCgkJCQkJdGhlcmVmb3JlIG5vdCBkaWZmaWN1bHQgdG8gc2VlIHRoYXQgdGhlIHlvdW5nIG11c3QgYmUgdGF1Z2h0IHRob3NlIHVzZWZ1bCBhcnRzCgkJCQkJdGhhdCBhcmUgaW5kaXNwZW5zYWJseSBuZWNlc3Nhcnk7IGJ1dCBpdCBpcyBjbGVhciB0aGF0IHRoZXkgc2hvdWxkIG5vdCBiZSB0YXVnaHQKCQkJCQlhbGwgdGhlIHVzZWZ1bCBhcnRzLCB0aG9zZSBwdXJzdWl0cyB0aGF0IGFyZSBsaWJlcmFsIGJlaW5nIGtlcHQgZGlzdGluY3QgZnJvbQoJCQkJCXRob3NlIHRoYXQgYXJlIGlsbGliZXJhbCwgYW5kIHRoYXQgdGhleSBtdXN0IHBhcnRpY2lwYXRlIGluIHN1Y2ggYW1vbmcgdGhlCgkJCQkJdXNlZnVsIGFydHMgYXMgd2lsbCBub3QgcmVuZGVyIHRoZSBwZXJzb24gd2hvIHBhcnRpY2lwYXRlcyBpbiB0aGVtIHZ1bGdhci4gQQoJCQkJCXRhc2sgYW5kIGFsc28gYW4gYXJ0IG9yIGEgc2NpZW5jZSBtdXN0IGJlIGRlZW1lZCB2dWxnYXIgaWYgaXQgcmVuZGVycyB0aGUgYm9keQoJCQkJCW9yIHNvdWwgb3IgbWluZCBvZiBmcmVlIG1lbiB1c2VsZXNzIGZvciB0aGUgZW1wbG95bWVudHMgYW5kIGFjdGlvbnMgb2YgdmlydHVlLgoJCQkJCUhlbmNlIHdlIGVudGl0bGUgdnVsZ2FyIGFsbCBzdWNoIGFydHMgYXMgZGV0ZXJpb3JhdGUgdGhlIGNvbmRpdGlvbiBvZiB0aGUgYm9keSwKCQkJCQlhbmQgYWxzbyB0aGUgaW5kdXN0cmllcyB0aGF0IGVhcm4gd2FnZXM7IGZvciB0aGV5IG1ha2UgdGhlIG1pbmQgcHJlb2NjdXBpZWQgYW5kCgkJCQkJZGVncmFkZWQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGV2ZW4gd2l0aCB0aGUgbGliZXJhbAoJCQkJCXNjaWVuY2VzLCBhbHRob3VnaCBpdCBpcyBub3QgaWxsaWJlcmFsIHRvIHRha2UgcGFydCBpbiBzb21lIG9mIHRoZW0gdXAgdG8gYQoJCQkJCXBvaW50LCB0byBkZXZvdGUgb25lc2VsZiB0byB0aGVtIHRvbyBhc3NpZHVvdXNseSBhbmQgY2FyZWZ1bGx5IGlzIGxpYWJsZSB0byBoYXZlCgkJCQkJdGhlIGluanVyaW91cyByZXN1bHRzIHNwZWNpZmllZC4gQWxzbyBpdCBtYWtlcyBtdWNoIGRpZmZlcmVuY2Ugd2hhdCBvYmplY3Qgb25lCgkJCQkJaGFzIGluIHZpZXcgaW4gYSBwdXJzdWl0IG9yIHN0dWR5OyBpZiBvbmUgZm9sbG93cyBpdCBmb3IgdGhlIHNha2Ugb2Ygb25lc2VsZiBvcgoJCQkJCW9uZSdzIGZyaWVuZHMsIG9yIG9uIG1vcmFsIGdyb3VuZHMsIGl0IGlzIG5vdCBpbGxpYmVyYWwsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmJ1dCB0aGUgbWFuIHdobyBmb2xsb3dzIHRoZSBzYW1lIHB1cnN1aXQgYmVjYXVzZSBvZgoJCQkJCW90aGVyIHBlb3BsZSB3b3VsZCBvZnRlbiBhcHBlYXIgdG8gYmUgYWN0aW5nIGluIGEgbWVuaWFsIGFuZCBzZXJ2aWxlCgkJCQkJCW1hbm5lci48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGJyYW5jaGVzIG9mIHN0dWR5IGF0IHByZXNlbnQKCQkJCQllc3RhYmxpc2hlZCBmYWxsIGludG8gYm90aCBjbGFzc2VzLCBhcyB3YXMgc2FpZCBiZWZvcmUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjEuNC48L25vdGU+CgkJCQkJPC90cmFuc2xhdGlvbj4="
translation['8.1338a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmUgYXJlIHBlcmhhcHMgZm91ciBjdXN0b21hcnkKCQkJCQlzdWJqZWN0cyBvZiBlZHVjYXRpb24sIHJlYWRpbmcgYW5kIHdyaXRpbmcsIGd5bW5hc3RpY3MsIG11c2ljLCBhbmQgZm91cnRoLCB3aXRoCgkJCQkJc29tZSBwZW9wbGUsIGRyYXdpbmc7IHJlYWRpbmcgYW5kIHdyaXRpbmcgYW5kIGRyYXdpbmcgYmVpbmcgdGF1Z2h0IGFzIGJlaW5nCgkJCQkJdXNlZnVsIGZvciB0aGUgcHVycG9zZXMgb2YgbGlmZSBhbmQgdmVyeSBzZXJ2aWNlYWJsZSwgYW5kIGd5bW5hc3RpY3MgYXMKCQkJCQljb250cmlidXRpbmcgdG8gbWFubHkgY291cmFnZTsgYnV0IGFzIHRvIG11c2ljLCBoZXJlIG9uZSBtaWdodCByYWlzZSBhIHF1ZXN0aW9uLgoJCQkJCUZvciBhdCBwcmVzZW50IG1vc3QgcGVvcGxlIHRha2UgcGFydCBpbiBpdCBmb3IgdGhlIHNha2Ugb2YgcGxlYXN1cmU7IGJ1dCB0aG9zZSwKCQkJCQl3aG8gb3JpZ2luYWxseSBpbmNsdWRlZCBpdCBpbiBlZHVjYXRpb24gZGlkIHNvIGJlY2F1c2UsIGFzIGhhcyBvZnRlbiBiZWVuIHNhaWQsCgkJCQkJbmF0dXJlIGl0c2VsZiBzZWVrcyB0byBiZSBhYmxlIG5vdCBvbmx5IHRvIGVuZ2FnZSByaWdodGx5IGluIGJ1c2luZXNzIGJ1dCBhbHNvCgkJCQkJdG8gb2NjdXB5IGxlaXN1cmUgbm9ibHk7IGZvcuKAlHRvIHNwZWFrIGFib3V0IGl0IHlldCBhZ2Fpbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gQm9vayA3LCAxMzM0YSAyLTEwLjwvbm90ZT7igJR0aGlzCgkJCQkJaXMgdGhlIGZpcnN0IHByaW5jaXBsZSBvZiBhbGwgdGhpbmdzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciBpZiBhbHRob3VnaCBib3RoIGJ1c2luZXNzIGFuZCBsZWlzdXJlIGFyZSBuZWNlc3NhcnksIHlldCBsZWlzdXJlIGlzIG1vcmUKCQkJCQlkZXNpcmFibGUgYW5kIG1vcmUgZnVsbHkgYW4gZW5kIHRoYW4gYnVzaW5lc3MsIHdlIG11c3QgaW5xdWlyZSB3aGF0IGlzIHRoZQoJCQkJCXByb3BlciBvY2N1cGF0aW9uIG9mIGxlaXN1cmUuIEZvciBhc3N1cmVkbHkgaXQgc2hvdWxkIG5vdCBiZSBlbXBsb3llZCBpbiBwbGF5LAoJCQkJCXNpbmNlIGl0IHdvdWxkIGZvbGxvdyB0aGF0IHBsYXkgaXMgb3VyIGVuZCBpbiBsaWZlLiBCdXQgaWYgdGhpcyBpcyBpbXBvc3NpYmxlLAoJCQkJCWFuZCBzcG9ydHMgc2hvdWxkIHJhdGhlciBiZSBlbXBsb3llZCBpbiBvdXIgdGltZXMgb2YgYnVzaW5lc3Mg77yIZm9yIGEKCQkJCQltYW4gd2hvIGlzIGF0IHdvcmsgbmVlZHMgcmVzdCwgYW5kIHJlc3QgaXMgdGhlIG9iamVjdCBvZiBwbGF5LCB3aGlsZSBidXNpbmVzcyBpcwoJCQkJCWFjY29tcGFuaWVkIGJ5IHRvaWwgYW5kIGV4ZXJ0aW9u77yJLCBpdCBmb2xsb3dzIHRoYXQgaW4gaW50cm9kdWNpbmcKCQkJCQlzcG9ydHMgd2UgbXVzdCB3YXRjaCB0aGUgcmlnaHQgb3Bwb3J0dW5pdHkgZm9yIHRoZWlyIGVtcGxveW1lbnQsIHNpbmNlIHdlIGFyZQoJCQkJCWFwcGx5aW5nIHRoZW0gdG8gc2VydmUgYXMgbWVkaWNpbmU7IGZvciB0aGUgYWN0aXZpdHkgb2YgcGxheSBpcyBhIHJlbGF4YXRpb24gb2YKCQkJCQl0aGUgc291bCwgYW5kIHNlcnZlcyBhcyByZWNyZWF0aW9uIGJlY2F1c2Ugb2YgaXRzIHBsZWFzYW50bmVzcy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMzhhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['8.1338a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['8.1338a.20'] = ""
translation['8.1338b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGlzCgkJCQkJY2xlYXIgdGhlcmVmb3JlIHRoYXQgdGhlcmUgaXMgYSBmb3JtIG9mIGVkdWNhdGlvbiBpbiB3aGljaCBib3lzIHNob3VsZCBiZQoJCQkJCXRyYWluZWQgbm90IGJlY2F1c2UgaXQgaXMgdXNlZnVsIG9yIG5lY2Vzc2FyeSBidXQgYXMgYmVpbmcgbGliZXJhbCBhbmQgbm9ibGU7CgkJCQkJdGhvdWdoIHdoZXRoZXIgdGhlcmUgaXMgb25lIHN1Y2ggc3ViamVjdCBvZiBlZHVjYXRpb24gb3Igc2V2ZXJhbCwgYW5kIHdoYXQgdGhlc2UKCQkJCQlhcmUgYW5kIGhvdyB0aGV5IGFyZSB0byBiZSBwdXJzdWVkLCBtdXN0IGJlIGRpc2N1c3NlZCBsYXRlciw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBwcm9taXNlIGlzIG5vdCBmdWxmaWxsZWQuPC9ub3RlPiBidXQgYXMgaXQgaXMgd2UgaGF2ZQoJCQkJCW1hZGUgdGhpcyBtdWNoIHByb2dyZXNzIG9uIHRoZSB3YXksIHRoYXQgd2UgaGF2ZSBzb21lIHRlc3RpbW9ueSBldmVuIGZyb20gdGhlCgkJCQkJYW5jaWVudHMsIGRlcml2ZWQgZnJvbSB0aGUgY291cnNlcyBvZiBlZHVjYXRpb24gd2hpY2ggdGhleSBmb3VuZGVk4oCUZm9yCgkJCQkJdGhlIHBvaW50IGlzIHByb3ZlZCBieSBtdXNpYy4gQW5kIGl0IGlzIGFsc28gY2xlYXIgdGhhdCBzb21lIG9mIHRoZSB1c2VmdWwKCQkJCQlzdWJqZWN0cyBhcyB3ZWxsIG91Z2h0IHRvIGJlIHN0dWRpZWQgYnkgdGhlIHlvdW5nIG5vdCBvbmx5IGJlY2F1c2Ugb2YgdGhlaXIKCQkJCQl1dGlsaXR5LCBsaWtlIHRoZSBzdHVkeSBvZiByZWFkaW5nIGFuZCB3cml0aW5nLCBidXQgYWxzbyBiZWNhdXNlIHRoZXkgbWF5IGxlYWQKCQkJCQlvbiB0byBtYW55IG90aGVyIGJyYW5jaGVzIG9mIGtub3dsZWRnZTsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz5hbmQgc2ltaWxhcmx5IHRoZXkgc2hvdWxkIHN0dWR5IGRyYXdpbmcgbm90IGluIG9yZGVyIHRoYXQKCQkJCQl0aGV5IG1heSBub3QgZ28gd3JvbmcgaW4gdGhlaXIgcHJpdmF0ZSBwdXJjaGFzZXMgYW5kIG1heSBhdm9pZCBiZWluZyBjaGVhdGVkIGluCgkJCQkJYnV5aW5nIGFuZCBzZWxsaW5nIGZ1cm5pdHVyZSwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzMzhiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['8.1338b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCByYXRoZXIgYmVjYXVzZSB0aGlzIHN0dWR5IG1ha2VzIGEgbWFuCgkJCQkJb2JzZXJ2YW50IG9mIGJvZGlseSBiZWF1dHk7IGFuZCB0byBzZWVrIGZvciB1dGlsaXR5IGV2ZXJ5d2hlcmUgaXMgZW50aXJlbHkKCQkJCQl1bnN1aXRlZCB0byBtZW4gdGhhdCBhcmUgZ3JlYXQtc291bGVkIGFuZCBmcmVlLiBBbmQgc2luY2UgaXQgaXMgcGxhaW4gdGhhdAoJCQkJCWVkdWNhdGlvbiBieSBoYWJpdCBtdXN0IGNvbWUgYmVmb3JlIGVkdWNhdGlvbiBieSByZWFzb24sIGFuZCB0cmFpbmluZyBvZiB0aGUKCQkJCQlib2R5IGJlZm9yZSB0cmFpbmluZyBvZiB0aGUgbWluZCwgaXQgaXMgY2xlYXIgZnJvbSB0aGVzZSBjb25zaWRlcmF0aW9ucyB0aGF0IHRoZQoJCQkJCWJveXMgbXVzdCBiZSBoYW5kZWQgb3ZlciB0byB0aGUgY2FyZSBvZiB0aGUgd3Jlc3RsaW5nLW1hc3RlciBhbmQgdGhlIHRyYWluZXI7CgkJCQkJZm9yIHRoZSBsYXR0ZXIgaW1wYXJ0cyBhIGNlcnRhaW4gcXVhbGl0eSB0byB0aGUgaGFiaXQgb2YgdGhlIGJvZHkgYW5kIHRoZSBmb3JtZXIKCQkJCQl0byBpdHMgYWN0aW9ucy48L3RyYW5zbGF0aW9uPg=="
translation['8.1338b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBhdCB0aGUgcHJlc2VudCB0aW1lIHNvbWUgb2YgdGhlIHN0YXRlcyByZXB1dGVkIHRvIHBheSB0aGUKCQkJCQlncmVhdGVzdCBhdHRlbnRpb24gdG8gY2hpbGRyZW4gcHJvZHVjZSBpbiB0aGVtIGFuIGF0aGxldGljIGhhYml0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gcHJlbWF0dXJlIGFuZCBkaXNwcm9wb3J0aW9uYXRlIG11c2N1bGFyCgkJCQkJCWRldmVsb3BtZW50LCBkaXJlY3RlZCB0byBzb21lIHBhcnRpY3VsYXIgY29tcGV0aXRpb24uIENmLiAxMjg4YiAxMgoJCQkJCQlmZi48L25vdGU+IHRvIHRoZSBkZXRyaW1lbnQgb2YgdGhlaXIgYm9kaWx5IGZvcm0gYW5kIGdyb3d0aCwgd2hpbGUgdGhlCgkJCQkJU3BhcnRhbnMgYWx0aG91Z2ggdGhleSBoYXZlIGF2b2lkZWQgdGhpcyBlcnJvciB5ZXQgbWFrZSB0aGVpciBib3lzIGFuaW1hbCBpbgoJCQkJCW5hdHVyZSBieSB0aGVpciBsYWJvcmlvdXMgZXhlcmNpc2VzLCBpbiB0aGUgYmVsaWVmIHRoYXQgdGhpcyBpcyBtb3N0CgkJCQkJY29udHJpYnV0b3J5IHRvIG1hbmx5IGNvdXJhZ2UuIFlldCwgYXMgaGFzIG9mdGVuIGJlZW4gc2FpZCwgaXQgaXMgbm90IHJpZ2h0IHRvCgkJCQkJcmVndWxhdGUgZWR1Y2F0aW9uIHdpdGggYSB2aWV3IHRvIG9uZSB2aXJ0dWUgb25seSwgb3IgdG8gdGhpcyBvbmUgbW9zdCBvZiBhbGw7CgkJCQkJaW5kZWVkIHRoZXkgZG8gbm90IGV2ZW4gaW52ZXN0aWdhdGUgdGhlIHF1ZXN0aW9uIHdoZXRoZXIgdGhpcyB2aXJ0dWUgaXMgdG8gYmUKCQkJCQloYWQgaW4gdmlldyBhdCBhbGwuIEZvciBuZWl0aGVyIGluIHRoZSBsb3dlciBhbmltYWxzIG5vciBpbiB0aGUgY2FzZSBvZiBmb3JlaWduCgkJCQkJcmFjZXMgZG8gd2Ugc2VlIHRoYXQgY291cmFnZSBnb2VzIHdpdGggdGhlIHdpbGRlc3QsIGJ1dCByYXRoZXIgd2l0aCB0aGUgZ2VudGxlcgoJCQkJCWFuZCBsaW9uLWxpa2UgdGVtcGVyYW1lbnRzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBIQSA2MjliLjgiPkFyaXN0b3QuIEhpc3QuIEFuLiA2MjliIDg8L2JpYmw+IO+8iHRoZQoJCQkJCQlsaW9uIGlzIGdlbnRsZSBleGNlcHQgd2hlbiBodW5ncnnvvIk7IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFNvcGguIDIzMWEiIHZhbGlkPSJ5ZXMiPlBsYXQuIFNvcGguIDIzMWE8L2JpYmw+IO+8iHRoZSBkb2cgdGhlIGdlbnRsZXN0IG9mCgkJCQkJCWFuaW1hbHPvvIkuPC9ub3RlPgoJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEhBIDYyOWIuOCI+QXJpc3RvdC4gSGlzdC4gQW4uIDYyOWIgODwvYmlibD4g77yIdGhlCgkJCQkJCWxpb24gaXMgZ2VudGxlIGV4Y2VwdCB3aGVuIGh1bmdyee+8iTsgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gU29waC4gMjMxYSIgdmFsaWQ9InllcyI+UGxhdC4gU29waC4gMjMxYTwvYmlibD4g77yIdGhlIGRvZyB0aGUgZ2VudGxlc3Qgb2YKCQkJCQkJYW5pbWFsc++8iS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPkFuZCB0aGVyZSBhcmUgbWFueTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3JlaWduIHJhY2VzIGluY2xpbmVkIHRvIG11cmRlciBhbmQgY2FubmliYWxpc20sCgkJCQkJZm9yIGV4YW1wbGUgYW1vbmcgdGhlIHRyaWJlcyBvZiB0aGUgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY2MTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjYxOSI+QmxhY2sKCQkJCQkJU2VhPC9wbGFjZU5hbWU+IHRoZSBBY2hhZWFucyBhbmQgSGVuaW9jaGksIGFuZCBvdGhlcnMgb2YgdGhlIG1haW5sYW5kIHJhY2VzLAoJCQkJCXNvbWUgaW4gdGhlIHNhbWUgZGVncmVlIGFzIHRob3NlIG5hbWVkIGFuZCBzb21lIG1vcmUsIHdoaWNoIGFsdGhvdWdoIHBpcmF0aWNhbAoJCQkJCWhhdmUgZ290IG5vIHNoYXJlIG9mIG1hbmx5IGNvdXJhZ2UuIEFuZCBhZ2FpbiB3ZSBrbm93IHRoYXQgZXZlbiB0aGUgU3BhcnRhbnMsCgkJCQkJYWx0aG91Z2ggc28gbG9uZyBhcyB0aGV5IHBlcnNpc3RlZCBieSB0aGVtc2VsdmVzIGluIHRoZWlyIGxhYm9yaW91cyBleGVyY2lzZXMKCQkJCQl0aGV5IHN1cnBhc3NlZCBhbGwgb3RoZXIgcGVvcGxlcywgbm93IGZhbGwgYmVoaW5kIG90aGVycyBib3RoIGluIGd5bW5hc3RpYyBhbmQKCQkJCQlpbiBtaWxpdGFyeSBjb250ZXN0czsgZm9yIHRoZXkgdXNlZCBub3QgdG8gZXhjZWwgYmVjYXVzZSB0aGV5IGV4ZXJjaXNlZCB0aGVpcgoJCQkJCXlvdW5nIG1lbiBpbiB0aGlzIGZhc2hpb24gYnV0IG9ubHkgYmVjYXVzZSB0aGV5IHRyYWluZWQgYW5kIHRoZWlyIGFkdmVyc2FyaWVzCgkJCQkJZGlkIG5vdC4gPC90cmFuc2xhdGlvbj4="
translation['8.1339a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy41IiB1bml0PSJMb2ViIGNoYXAiIC8+Q29uc2VxdWVudGx5IGhvbm9yIGFuZCBub3QKCQkJCQlhbmltYWwgZmVyb2NpdHkgc2hvdWxkIHBsYXkgdGhlIGZpcnN0IHBhcnQ7IGZvciBpdCBpcyBub3QgYSB3b2xmIG5vciBvbmUgb2YgdGhlCgkJCQkJb3RoZXIgd2lsZCBhbmltYWxzIHRoYXQgd2lsbCB2ZW50dXJlIHVwb24gYW55IG5vYmxlIGhhemFyZCwgYnV0IHJhdGhlciBhIGdvb2QKCQkJCQltYW4uIEJ1dCB0aG9zZSB3aG8gbGV0IGJveXMgcHVyc3VlIHRoZXNlIGhhcmQgZXhlcmNpc2VzIHRvbyBtdWNoIGFuZCB0dXJuIHRoZW0KCQkJCQlvdXQgdW50cmFpbmVkIGluIG5lY2Vzc2FyeSB0aGluZ3MgaW4gcmVhbCB0cnV0aCByZW5kZXIgdGhlbSB2dWxnYXIsIG1ha2luZyB0aGVtCgkJCQkJYXZhaWxhYmxlIGZvciBzdGF0ZXNtYW5zaGlwIHRvIHVzZSBmb3Igb25lIHRhc2sgb25seSwgYW5kIGV2ZW4gZm9yIHRoaXMgdGFzawoJCQkJCXRyYWluaW5nIHRoZW0gd29yc2UgdGhhbiBvdGhlcnMgZG8sIGFzIG91ciBhcmd1bWVudCBwcm92ZXMuIEFuZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIHNlbnRlbmNlIHdvdWxkIGNvbWUgYmV0dGVyIGF0IHRoZSBlbmQgb2YKCQkJCQkJMy40Ljwvbm90ZT4gd2UgbXVzdCBub3QganVkZ2UgdGhlbSBmcm9tIHRoZWlyIGZvcm1lciBhY2hpZXZlbWVudHMgYnV0IGZyb20KCQkJCQl0aGUgZmFjdHMgb2YgdG9kYXk7IGZvciB0aGV5IGhhdmUgcml2YWxzIGluIHRoZWlyIGVkdWNhdGlvbiBub3csIGJ1dCB0aGV5IHVzZWQKCQkJCQl0byBoYXZlIG5vbmUgYmVmb3JlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGlzIHRoZXJlZm9yZSBhZ3JlZWQgdGhhdCB3ZSBzaG91bGQgZW1wbG95IGd5bW5hc3RpYwoJCQkJCXRyYWluaW5nLCBhbmQgaG93IHdlIHNob3VsZCBlbXBsb3kgaXQuIEZvciB1bnRpbCBwdWJlcnR5IHdlIHNob3VsZCBhcHBseSBsaWdodGVyCgkJCQkJZXhlcmNpc2VzLCBmb3JiaWRkaW5nIGhhcmQgZGlldCBhbmQgc2V2ZXJlIGV4ZXJ0aW9ucywgaW4gb3JkZXIgdGhhdCBub3RoaW5nIG1heQoJCQkJCWhpbmRlciB0aGUgZ3Jvd3RoOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMzOWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['8.1339a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGVyZSBpcyBubyBzbWFsbCBwcm9vZiB0aGF0IHRvbyBzZXZlcmUKCQkJCQl0cmFpbmluZyBjYW4gcHJvZHVjZSB0aGlzIHJlc3VsdCBpbiB0aGUgZmFjdCB0aGF0IGluIHRoZSBsaXN0IG9mIE9seW1waWMgdmljdG9ycwoJCQkJCW9uZSB3b3VsZCBvbmx5IGZpbmQgdHdvIG9yIHRocmVlIHBlcnNvbnMgd2hvIGhhdmUgd29uIGJvdGggYXMgbWVuIGFuZCBhcyBib3lzLAoJCQkJCWJlY2F1c2Ugd2hlbiBwZW9wbGUgZ28gaW50byB0cmFpbmluZyBpbiB5b3V0aCB0aGUgc2V2ZXJlIGV4ZXJjaXNlcyByb2IgdGhlbSBvZgoJCQkJCXRoZWlyIHN0cmVuZ3RoLiA8L3RyYW5zbGF0aW9uPg=="
translation['8.1339a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IHdoZW4gdGhleSBoYXZlCgkJCQkJc3BlbnQgdGhyZWUgeWVhcnMgYWZ0ZXIgcHViZXJ0eSB1cG9uIHRoZWlyIG90aGVyIHN0dWRpZXMsIHRoZW4gaXQgaXMgc3VpdGFibGUgdG8KCQkJCQlvY2N1cHkgdGhlIG5leHQgcGVyaW9kIG9mIGxpZmUgd2l0aCBsYWJvcmlvdXMgZXhlcmNpc2VzIGFuZCBzdHJpY3QgdHJhaW5pbmcKCQkJCQkJZGlldDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGNvbXB1bHNpb24gdG8gZWF0IHZlcnkgbGFyZ2UKCQkJCQkJcmF0aW9ucyBvZiBwcmVzY3JpYmVkIGZvb2TigJR0aGUgR3JlZWsgd2F5IG9mIHRyYWluaW5nLjwvbm90ZT47IGZvcgoJCQkJCWl0IGlzIHdyb25nIHRvIHdvcmsgaGFyZCB3aXRoIHRoZSBtaW5kIGFuZCB0aGUgYm9keSBhdCB0aGUgc2FtZSB0aW1lOyBmb3IgaXQgaXMKCQkJCQl0aGUgbmF0dXJlIG9mIHRoZSB0d28gZGlmZmVyZW50IHNvcnRzIG9mIGV4ZXJ0aW9uIHRvIHByb2R1Y2Ugb3Bwb3NpdGUgZWZmZWN0cywKCQkJCQlib2RpbHkgdG9pbCBpbXBlZGluZyB0aGUgZGV2ZWxvcG1lbnQgb2YgdGhlIG1pbmQgYW5kIG1lbnRhbCB0b2lsIHRoYXQgb2YgdGhlCgkJCQkJCWJvZHkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWJvdXQgbXVzaWMgb24gdGhlIG90aGVyIGhhbmQgd2UgaGF2ZSBwcmV2aW91c2x5IHJhaXNlZCBzb21lCgkJCQkJcXVlc3Rpb25zIGluIHRoZSBjb3Vyc2Ugb2Ygb3VyIGFyZ3VtZW50LCBidXQgaXQgaXMgd2VsbCB0byB0YWtlIHRoZW0gdXAgYWdhaW4KCQkJCQlhbmQgY2FycnkgdGhlbSBmdXJ0aGVyIG5vdywgaW4gb3JkZXIgdGhhdCB0aGlzIG1heSBnaXZlIHRoZSBrZXkgc28gdG8gc3BlYWsgZm9yCgkJCQkJdGhlIHByaW5jaXBsZXMgd2hpY2ggb25lIG1pZ2h0IGFkdmFuY2UgaW4gcHJvbm91bmNpbmcgYWJvdXQgaXQuIEZvciBpdCBpcyBub3QKCQkJCQllYXN5IHRvIHNheSBwcmVjaXNlbHkgd2hhdCBwb3RlbmN5IGl0IHBvc3Nlc3Nlcywgbm9yIHlldCBmb3IgdGhlIHNha2Ugb2Ygd2hhdAoJCQkJCW9iamVjdCBvbmUgc2hvdWxkIHBhcnRpY2lwYXRlIGluIGl04oCUd2hldGhlciBmb3IgYW11c2VtZW50IGFuZAoJCQkJCXJlbGF4YXRpb24sIGFzIG9uZSBpbmR1bGdlcyBpbiBzbGVlcCBhbmQgZGVlcCBkcmlua2luZyDvvIhmb3IgdGhlc2UgaW4KCQkJCQl0aGVtc2VsdmVzIGFyZSBub3Qgc2VyaW91cyBwdXJzdWl0cyBidXQgbWVyZWx5IHBsZWFzYW50LCBhbmQg4oCYcmVsYXgKCQkJCQlvdXIgY2FyZSzigJkgYXMgRXVyaXBpZGVzIHNheXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRXVyLiBCYS4gMzc4IiB2YWxpZD0ieWVzIj5FdXIuIEJhLiAzNzg8L2JpYmw+IO+8iEJyb21pb3PvvIkKCQkJCQkJCTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9g8+CIM+E4b2xzrTigJkg4byUz4fOtc65LCDOuM65zrHPg8614b27zrXOuc69IM+EzrUgz4fhvbnPgc6/zrnPgiDOvM61z4ThvbEgz4TigJkKCQkJCQkJCc6x4b2Qzrvhv7bOvSDOs861zrvhvrbPg86xzrkg4byAzr3Osc+AzrHhv6bPg86x4b23IM+EzrUgzrzOtc+B4b23zrzOvc6xz4I8L2ZvcmVpZ24+PC9ub3RlPjsgb3dpbmcgdG8KCQkJCQl3aGljaCBwZW9wbGUgYWN0dWFsbHkgY2xhc3MgbXVzaWMgd2l0aCB0aGVtIGFuZDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkV1ci4gQmEuIDM3OCIgdmFsaWQ9InllcyI+RXVyLiBCYS4gMzc4PC9iaWJsPiDvvIhCcm9taW9z77yJCgkJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvYPPgiDPhOG9sc604oCZIOG8lM+HzrXOuSwgzrjOuc6xz4POteG9u861zrnOvSDPhM61IM+H4b25z4HOv865z4IgzrzOtc+E4b2xIM+E4oCZCgkJCQkJCQnOseG9kM674b+2zr0gzrPOtc674b62z4POsc65IOG8gM69zrHPgM6x4b+mz4POseG9tyDPhM61IM68zrXPgeG9t868zr3Osc+CPC9mb3JlaWduPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5lbXBsb3kgYWxsIG9mIHRoZXNlIHRoaW5ncywgc2xlZXAsIGRlZXAgZHJpbmtpbmcgYW5kIG11c2ljLCBpbgoJCQkJCXRoZSBzYW1lIHdheSwgYW5kIHRoZXkgYWxzbyBwbGFjZSBkYW5jaW5nIGluIHRoZSBzYW1lIGNsYXNz77yJOwoJCQkJCQk8L3RyYW5zbGF0aW9uPg=="
translation['8.1339b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC40IiB1bml0PSJMb2ViIGNoYXAiIC8+b3Igd2hldGhlciB3ZSBvdWdodCByYXRoZXIgdG8KCQkJCQl0aGluayB0aGF0IG11c2ljIHRlbmRzIGluIHNvbWUgZGVncmVlIHRvIHZpcnR1ZSDvvIhtdXNpYyBiZWluZyBjYXBhYmxlIG9mCgkJCQkJcHJvZHVjaW5nIGEgY2VydGFpbiBxdWFsaXR5IG9mIGNoYXJhY3RlciBqdXN0IGFzIGd5bW5hc3RpY3MgYXJlIGNhcGFibGUgb2YKCQkJCQlwcm9kdWNpbmcgYSBjZXJ0YWluIHF1YWxpdHkgb2YgYm9keSwgbXVzaWMgYWNjdXN0b21pbmcgbWVuIHRvIGJlIGFibGUgdG8gcmVqb2ljZQoJCQkJCXJpZ2h0bHnvvIk7IG9yIHRoYXQgaXQgY29udHJpYnV0ZXMgc29tZXRoaW5nIHRvIGludGVsbGVjdHVhbAoJCQkJCQllbnRlcnRhaW5tZW50PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSB0ZXJtIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs60zrnOsc6zz4nOs+G9tTwvZm9yZWlnbj4sIOKAmHBhc3RpbWUs4oCZIGlzCgkJCQkJCWlkaW9tYXRpY2FsbHkgdXNlZCBvZiB0aGUgcHVyc3VpdHMgb2YgY3VsdHVyZWQgbGVpc3VyZeKAlHNlcmlvdXMKCQkJCQkJY29udmVyc2F0aW9uLCBtdXNpYywgdGhlIGRyYW1hLjwvbm90ZT4gYW5kIGN1bHR1cmUg77yIZm9yIHRoaXMgbXVzdAoJCQkJCWJlIHNldCBkb3duIGFzIGEgdGhpcmQgYWx0ZXJuYXRpdmUgYW1vbmcgdGhvc2UgbWVudGlvbmVk77yJLiBOb3cgaXQgaXMKCQkJCQlub3QgZGlmZmljdWx0IHRvIHNlZSB0aGF0IG9uZSBtdXN0IG5vdCBtYWtlIGFtdXNlbWVudCB0aGUgb2JqZWN0IG9mIHRoZQoJCQkJCWVkdWNhdGlvbiBvZiB0aGUgeW91bmc7IGZvciBhbXVzZW1lbnQgZG9lcyBub3QgZ28gd2l0aAoJCQkJCWxlYXJuaW5n4oCUbGVhcm5pbmcgaXMgYSBwYWluZnVsIHByb2Nlc3MuIE5vciB5ZXQgbW9yZW92ZXIgaXMgaXQKCQkJCQlzdWl0YWJsZSB0byBhc3NpZ24gaW50ZWxsZWN0dWFsIGVudGVydGFpbm1lbnQgdG8gYm95cyBhbmQgdG8gdGhlIHlvdW5nOyBmb3IgYQoJCQkJCXRoaW5nIHRoYXQgaXMgYW4gZW5kIGRvZXMgbm90IGJlbG9uZyB0byBhbnl0aGluZyB0aGF0IGlzIGltcGVyZmVjdC4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTOuc6xzrPPic6z4b21PC9mb3JlaWduPiwg4oCYcGFzdGltZSzigJkgaXMKCQkJCQkJaWRpb21hdGljYWxseSB1c2VkIG9mIHRoZSBwdXJzdWl0cyBvZiBjdWx0dXJlZCBsZWlzdXJl4oCUc2VyaW91cwoJCQkJCQljb252ZXJzYXRpb24sIG11c2ljLCB0aGUgZHJhbWEuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgcGVyaGFwcyBpdCBtaWdodCBiZSB0aG91Z2h0IHRoYXQgdGhlCgkJCQkJc2VyaW91cyBwdXJzdWl0cyBvZiBib3lzIGFyZSBmb3IgdGhlIHNha2Ugb2YgYW11c2VtZW50IHdoZW4gdGhleSBoYXZlIGdyb3duIHVwCgkJCQkJdG8gYmUgbWVuLiBCdXQsIGlmIHNvbWV0aGluZyBvZiB0aGlzIHNvcnQgaXMgdGhlIGNhc2UsIHdoeSBzaG91bGQgdGhlIHlvdW5nIG5lZWQKCQkJCQl0byBsZWFybiB0aGlzIGFjY29tcGxpc2htZW50IHRoZW1zZWx2ZXMsIGFuZCBub3QsIGxpa2UgdGhlIFBlcnNpYW4gYW5kIE1lZGlhbgoJCQkJCWtpbmdzLCBwYXJ0aWNpcGF0ZSBpbiB0aGUgcGxlYXN1cmUgYW5kIHRoZSBlZHVjYXRpb24gb2YgbXVzaWMgYnkgbWVhbnMgb2Ygb3RoZXJzCgkJCQkJcGVyZm9ybWluZyBpdD8gZm9yIHRob3NlIHdobyBoYXZlIG1hZGUgbXVzaWMgYSBidXNpbmVzcyBhbmQgcHJvZmVzc2lvbiBtdXN0CgkJCQkJbmVjZXNzYXJpbHkgcGVyZm9ybSBiZXR0ZXIgdGhhbiB0aG9zZSB3aG8gcHJhY3Rpc2Ugb25seSBsb25nIGVub3VnaCB0byBsZWFybi4KCQkJCQlCdXQgaWYgaXQgaXMgcHJvcGVyIGZvciB0aGVtIHRvIGxhYm9yIGF0IGFjY29tcGxpc2htZW50cyBvZiB0aGlzIHNvcnQsIHRoZW4gaXQKCQkJCQl3b3VsZCBhbHNvIGJlIHJpZ2h0IGZvciB0aGVtIHRvIHByZXBhcmUgdGhlIGRpc2hlcyBvZiBhbiBlbGFib3JhdGUgY3Vpc2luZTsgYnV0CgkJCQkJdGhpcyBpcyBhYnN1cmQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC42IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHRoZSBzYW1lCgkJCQkJZGlmZmljdWx0eSBhbHNvIGFyaXNlcyBhcyB0byB0aGUgcXVlc3Rpb24gd2hldGhlciBsZWFybmluZyBtdXNpYyBjYW4gaW1wcm92ZQoJCQkJCXRoZWlyIGNoYXJhY3RlcnM7IGZvciB3aHkgc2hvdWxkIHRoZXkgbGVhcm4gdG8gcGVyZm9ybSBlZGlmeWluZyBtdXNpYwoJCQkJCXRoZW1zZWx2ZXMsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzM5YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['8.1339b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmluc3RlYWQgb2YgbGVhcm5pbmcgdG8gZW5qb3kgaXQgcmlnaHRseSBhbmQgYmUgYWJsZSB0byBqdWRnZSBpdAoJCQkJCXdoZW4gdGhleSBoZWFyIG90aGVycyBwZXJmb3JtaW5nLCBhcyB0aGUgU3BhcnRhbnMgZG8/IGZvciB0aGUgU3BhcnRhbnMgYWx0aG91Z2gKCQkJCQl0aGV5IGRvIG5vdCBsZWFybiB0byBwZXJmb3JtIGNhbiBuZXZlcnRoZWxlc3MganVkZ2UgZ29vZCBhbmQgYmFkIG11c2ljCgkJCQkJY29ycmVjdGx5LCBzbyBpdCBpcyBzYWlkLiBBbmQgdGhlIHNhbWUgYXJndW1lbnQgYXBwbGllcyBhbHNvIGlmIG11c2ljIGlzIHRvIGJlCgkJCQkJZW1wbG95ZWQgZm9yIHJlZmluZWQgZW5qb3ltZW50IGFuZCBlbnRlcnRhaW5tZW50OyB3aHkgbmVlZCBwZW9wbGUgbGVhcm4gdG8KCQkJCQlwZXJmb3JtIHRoZW1zZWx2ZXMgaW5zdGVhZCBvZiBlbmpveWluZyBtdXNpYyBwbGF5ZWQgYnkgb3RoZXJzPyA8L3RyYW5zbGF0aW9uPg=="
translation['8.1339b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC43IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHdlIG1heSBjb25zaWRlciB0aGUgY29uY2VwdGlvbiB0aGF0IHdlCgkJCQkJaGF2ZSBhYm91dCB0aGUgZ29kczogWmV1cyBkb2VzIG5vdCBzaW5nIGFuZCBoYXJwIHRvIHRoZSBwb2V0cyBoaW1zZWxmLiBCdXQKCQkJCQlwcm9mZXNzaW9uYWwgbXVzaWNpYW5zIHdlIHNwZWFrIG9mIGFzIHZ1bGdhciBwZW9wbGUsIGFuZCBpbmRlZWQgd2UgdGhpbmsgaXQgbm90CgkJCQkJbWFubHkgdG8gcGVyZm9ybSBtdXNpYywgZXhjZXB0IHdoZW4gZHJ1bmsgb3IgZm9yIGZ1bi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgcGVyaGFwcyB0aGVzZSBwb2ludHMKCQkJCQl3aWxsIGhhdmUgdG8gYmUgY29uc2lkZXJlZCBhZnRlcndhcmRzOyBvdXIgZmlyc3QgaW5xdWlyeSBpcyB3aGV0aGVyIG11c2ljIG91Z2h0CgkJCQkJbm90IG9yIG91Z2h0IHRvIGJlIGluY2x1ZGVkIGluIGVkdWNhdGlvbiwgYW5kIHdoYXQgaXMgaXRzIGVmZmljYWN5IGFtb25nIHRoZQoJCQkJCXRocmVlIHVzZXMgb2YgaXQgdGhhdCBoYXZlIGJlZW4gZGlzY3Vzc2Vk4oCUZG9lcyBpdCBzZXJ2ZSBmb3IgZWR1Y2F0aW9uCgkJCQkJb3IgYW11c2VtZW50IG9yIGVudGVydGFpbm1lbnQ/IEl0IGlzIHJlYXNvbmFibGUgdG8gcmVja29uIGl0IHVuZGVyIGFsbCBvZiB0aGVzZQoJCQkJCWhlYWRzLCBhbmQgaXQgYXBwZWFycyB0byBwYXJ0aWNpcGF0ZSBpbiB0aGVtIGFsbC4gQW11c2VtZW50IGlzIGZvciB0aGUgc2FrZSBvZgoJCQkJCXJlbGF4YXRpb24sIGFuZCByZWxheGF0aW9uIG11c3QgbmVjZXNzYXJpbHkgYmUgcGxlYXNhbnQsIGZvciBpdCBpcyBhIHdheSBvZgoJCQkJCWN1cmluZyB0aGUgcGFpbiBkdWUgdG8gbGFib3Jpb3VzIHdvcms7IGFsc28gZW50ZXJ0YWlubWVudCBvdWdodCBhZG1pdHRlZGx5IHRvIGJlCgkJCQkJbm90IG9ubHkgaG9ub3JhYmxlIGJ1dCBhbHNvIHBsZWFzYW50LCBmb3IgaGFwcGluZXNzIGlzIGRlcml2ZWQgZnJvbSBib3RoIGhvbm9yCgkJCQkJYW5kIHBsZWFzdXJlOzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5idXQgd2UgYWxsIHByb25vdW5jZQoJCQkJCW11c2ljIHRvIGJlIG9uZSBvZiB0aGUgcGxlYXNhbnRlc3QgdGhpbmdzLCB3aGV0aGVyIGluc3RydW1lbnRhbCBvciBpbnN0cnVtZW50YWwKCQkJCQlhbmQgdm9jYWwgbXVzaWMgdG9nZXRoZXIgPC90cmFuc2xhdGlvbj4="
translation['8.1340a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+77yIYXQgbGVhc3QgTXVzYWV1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIHNlbWktbGVnZW5kYXJ5CgkJCQkJCWJhcmQsIHRvIHdob20gYSBudW1iZXIgb2Ygb3JhY3VsYXIgdmVyc2VzIHRoYXQgd2VyZSBjdXJyZW50IHdlcmUKCQkJCQkJYXR0cmlidXRlZC48L25vdGU+IHNheXMsIOKAmFNvbmcgaXMgbWFuJ3Mgc3dlZXRlc3Qgam95LOKAmQoJCQkJCWFuZCB0aGF0IGlzIHdoeSBwZW9wbGUgd2l0aCBnb29kIHJlYXNvbiBpbnRyb2R1Y2UgaXQgYXQgcGFydGllcyBhbmQKCQkJCQllbnRlcnRhaW5tZW50cywgZm9yIGl0cyBleGhpbGFyYXRpbmcgZWZmZWN077yJLCBzbyB0aGF0IGZvciB0aGlzIHJlYXNvbgoJCQkJCWFsc28gb25lIG1pZ2h0IHN1cHBvc2UgdGhhdCB0aGUgeW91bmdlciBtZW4gb3VnaHQgdG8gYmUgZWR1Y2F0ZWQgaW4gbXVzaWMuIEZvcgoJCQkJCWFsbCBoYXJtbGVzcyBwbGVhc3VyZXMgYXJlIG5vdCBvbmx5IHN1aXRhYmxlIGZvciB0aGUgdWx0aW1hdGUgb2JqZWN0IGJ1dCBhbHNvCgkJCQkJZm9yIHJlbGF4YXRpb247IGFuZCBhcyBpdCBidXQgcmFyZWx5IGhhcHBlbnMgZm9yIG1lbiB0byByZWFjaCB0aGVpciB1bHRpbWF0ZQoJCQkJCW9iamVjdCwgd2hlcmVhcyB0aGV5IG9mdGVuIHJlbGF4IGFuZCBwdXJzdWUgYW11c2VtZW50IG5vdCBzbyBtdWNoIHdpdGggc29tZQoJCQkJCXVsdGVyaW9yIG9iamVjdCBidXQgYmVjYXVzZSBvZiB0aGUgcGxlYXN1cmUgb2YgaXQsIGl0IHdvdWxkIGJlIHNlcnZpY2VhYmxlIHRvCgkJCQkJbGV0IHRoZW0gcmVsYXggYXQgaW50ZXJ2YWxzIGluIHRoZSBwbGVhc3VyZXMgZGVyaXZlZCBmcm9tIG11c2ljLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPkJ1dCBpdCBoYXMgY29tZSBhYm91dCB0aGF0IG1lbiBtYWtlCgkJCQkJYW11c2VtZW50cyBhbiBlbmQ7IGZvciB0aGUgZW5kIGFsc28gcGVyaGFwcyBjb250YWlucyBhIGNlcnRhaW4gcGxlYXN1cmUsIGJ1dCBub3QKCQkJCQlhbnkgb3JkaW5hcnkgcGxlYXN1cmUsIGFuZCBzZWVraW5nIHRoaXMgdGhleSB0YWtlIHRoZSBvdGhlciBhcyBiZWluZyB0aGlzCgkJCQkJYmVjYXVzZSBpdCBoYXMgYSBjZXJ0YWluIHJlc2VtYmxhbmNlIHRvIHRoZSBhY2hpZXZlbWVudCBvZiB0aGUgZW5kIG9mIHRoZWlyCgkJCQkJdW5kZXJ0YWtpbmdzLiBGb3IgdGhlIGVuZCBpcyBkZXNpcmFibGUgbm90IGZvciB0aGUgc2FrZSBvZiBhbnl0aGluZyB0aGF0IHdpbGwKCQkJCQlyZXN1bHQgZnJvbSBpdCwgYW5kIGFsc28gcGxlYXN1cmVzIG9mIHRoZSBzb3J0IHVuZGVyIGNvbnNpZGVyYXRpb24gYXJlIG5vdAoJCQkJCWRlc2lyYWJsZSBmb3IgdGhlIHNha2Ugb2Ygc29tZSBmdXR1cmUgcmVzdWx0LCBidXQgYmVjYXVzZSBvZiB0aGluZ3MgdGhhdCBoYXZlCgkJCQkJaGFwcGVuZWQgYWxyZWFkeSwgZm9yIGluc3RhbmNlIGxhYm9yIGFuZCBwYWluLiBPbmUgbWlnaHQgdGhlbiBwZXJoYXBzIGFzc3VtZQoJCQkJCXRoaXMgdG8gYmUgdGhlIHJlYXNvbiB3aGljaCBjYXVzZXMgbWVuIHRvIHNlZWsgdG8gcHJvY3VyZSBoYXBwaW5lc3MgYnkgbWVhbnMgb2YKCQkJCQl0aG9zZSBwbGVhc3VyZXM7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IGluIHRoZSBjYXNlIG9mCgkJCQkJdGFraW5nIHBhcnQgaW4gbXVzaWMsIHRoaXMgaXMgbm90IGJlY2F1c2Ugb2YgdGhpcyByZWFzb24gb25seSwgYnV0IGFsc28gYmVjYXVzZQoJCQkJCXBlcmZvcm1pbmcgbXVzaWMgaXMgdXNlZnVsLCBhcyBpdCBzZWVtcywgZm9yIHJlbGF4YXRpb24uIEJ1dCBuZXZlcnRoZWxlc3Mgd2UKCQkJCQltdXN0IGV4YW1pbmUgd2hldGhlciBpdCBpcyBub3QgdGhlIGNhc2UgdGhhdCwgYWx0aG91Z2ggdGhpcyBoYXMgY29tZSBhYm91dCwKCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzNDBhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['8.1340a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnlldCB0aGUgbmF0dXJlIG9mIG11c2ljIGlzIG1vcmUgaG9ub3JhYmxlIHRoYW4gY29ycmVzcG9uZHMgd2l0aAoJCQkJCXRoZSBlbXBsb3ltZW50IG9mIGl0IG1lbnRpb25lZCwgYW5kIGl0IGlzIHByb3BlciBub3Qgb25seSB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUKCQkJCQljb21tb24gcGxlYXN1cmUgdGhhdCBzcHJpbmdzIGZyb20gaXQsIHdoaWNoIGlzIHBlcmNlcHRpYmxlIHRvIGV2ZXJ5Ym9keQoJCQkJCe+8iGZvciB0aGUgcGxlYXN1cmUgY29udGFpbmVkIGluIG11c2ljIGlzIG9mIGEgbmF0dXJhbCBraW5kLCBvd2luZyB0bwoJCQkJCXdoaWNoIHRoZSB1c2Ugb2YgaXQgaXMgZGVhciB0byB0aG9zZSBvZiBhbGwgYWdlcyBhbmQgY2hhcmFjdGVyc++8iSwgYnV0CgkJCQkJdG8gc2VlIGlmIGl0cyBpbmZsdWVuY2UgcmVhY2hlcyBhbHNvIGluIGEgbWFubmVyIHRvIHRoZSBjaGFyYWN0ZXIgYW5kIHRvIHRoZQoJCQkJCXNvdWwuIEFuZCB0aGlzIHdvdWxkIGNsZWFybHkgYmUgdGhlIGNhc2UgaWYgd2UgYXJlIGFmZmVjdGVkIGluIG91ciBjaGFyYWN0ZXJzIGluCgkJCQkJYSBjZXJ0YWluIG1hbm5lciBieSBpdC4gPC90cmFuc2xhdGlvbj4="
translation['8.1340a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS41IiB1bml0PSJMb2ViIGNoYXAiIC8+QnV0IGl0IGlzCgkJCQkJY2xlYXIgdGhhdCB3ZSBhcmUgYWZmZWN0ZWQgaW4gYSBjZXJ0YWluIG1hbm5lciwgYm90aCBieSBtYW55IG90aGVyIGtpbmRzIG9mCgkJCQkJbXVzaWMgYW5kIG5vdCBsZWFzdCBieSB0aGUgbWVsb2RpZXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEwMTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMTAxOSI+T2x5bXB1czwvcGxhY2VOYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BIFBocnlnaWFuIGNvbXBvc2VyCgkJCQkJCW9mIHRoZSBzZXZlbnRoIGNlbnR1cnkgQi5DLjwvbm90ZT47IGZvciB0aGVzZSBhZG1pdHRlZGx5IG1ha2Ugb3VyIHNvdWxzCgkJCQkJZW50aHVzaWFzdGljLCBhbmQgZW50aHVzaWFzbSBpcyBhbiBhZmZlY3Rpb24gb2YgdGhlIGNoYXJhY3RlciBvZiB0aGUgc291bC4gQW5kCgkJCQkJbW9yZW92ZXIgZXZlcnlib2R5IHdoZW4gbGlzdGVuaW5nIHRvIGltaXRhdGlvbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+TXVzaWMgZHJhbWF0aWNhbGx5IGV4cHJlc3NpbmcgdmFyaW91cyBzdGF0ZXMgb2YKCQkJCQkJZW1vdGlvbi48L25vdGU+IGlzIHRocm93biBpbnRvIGEgY29ycmVzcG9uZGluZyBzdGF0ZSBvZiBmZWVsaW5nLCBldmVuIGFwYXJ0CgkJCQkJZnJvbSB0aGUgcmh5dGhtcyBhbmQgdHVuZXMgdGhlbXNlbHZlcy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QQoJCQkJCQlwcm9iYWJsZSBjb3JyZWN0aW9uIG9mIHRoZSBHcmVlayBnaXZlcyDigJhieSB0aGUgcmh5dGhtcyBhbmQgdHVuZXMKCQkJCQkJdGhlbXNlbHZlcywgZXZlbiBhcGFydCBmcm9tIHRoZSB3b3Jkcy7igJk8L25vdGU+IEFuZCBzaW5jZSBpdCBpcyB0aGUKCQkJCQljYXNlIHRoYXQgbXVzaWMgaXMgb25lIG9mIHRoZSB0aGluZ3MgdGhhdCBnaXZlIHBsZWFzdXJlLCBhbmQgdGhhdCB2aXJ0dWUgaGFzIHRvCgkJCQkJZG8gd2l0aCBmZWVsaW5nIGRlbGlnaHQgYW5kIGxvdmUgYW5kIGhhdHJlZCByaWdodGx5LCB0aGVyZSBpcyBvYnZpb3VzbHkgbm90aGluZwoJCQkJCXRoYXQgaXQgaXMgbW9yZSBuZWVkZnVsIHRvIGxlYXJuIGFuZCBiZWNvbWUgaGFiaXR1YXRlZCB0byB0aGFuIHRvIGp1ZGdlCgkJCQkJY29ycmVjdGx5IGFuZCB0byBkZWxpZ2h0IGluIHZpcnR1b3VzIGNoYXJhY3RlcnMgYW5kIG5vYmxlIGFjdGlvbnM7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS42IiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IHJoeXRobXMgYW5kIG1lbG9kaWVzIGNvbnRhaW4KCQkJCQlyZXByZXNlbnRhdGlvbnMgb2YgYW5nZXI8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIG1pbGRuZXNzLAoJCQkJCWFuZCBhbHNvIG9mIGNvdXJhZ2UgYW5kIHRlbXBlcmFuY2UgYW5kIGFsbCB0aGVpciBvcHBvc2l0ZXMgYW5kIHRoZSBvdGhlciBtb3JhbAoJCQkJCXF1YWxpdGllcywgdGhhdCBtb3N0IGNsb3NlbHkgY29ycmVzcG9uZCB0byB0aGUgdHJ1ZSBuYXR1cmVzIG9mIHRoZXNlIHF1YWxpdGllcwoJCQkJCe+8iGFuZCB0aGlzIGlzIGNsZWFyIGZyb20gdGhlIGZhY3RzIG9mIHdoYXQgb2NjdXJz4oCUd2hlbiB3ZQoJCQkJCWxpc3RlbiB0byBzdWNoIHJlcHJlc2VudGF0aW9ucyB3ZSBjaGFuZ2UgaW4gb3VyIHNvdWzvvIk7IGFuZCBoYWJpdHVhdGlvbgoJCQkJCWluIGZlZWxpbmcgcGFpbiBhbmQgZGVsaWdodCBhdCByZXByZXNlbnRhdGlvbnMgb2YgcmVhbGl0eSBpcyBjbG9zZSB0byBmZWVsaW5nCgkJCQkJdGhlbSB0b3dhcmRzIGFjdHVhbCByZWFsaXR5IO+8iGZvciBleGFtcGxlLCBpZiBhIG1hbiBkZWxpZ2h0cyBpbgoJCQkJCWJlaG9sZGluZyB0aGUgc3RhdHVlIG9mIHNvbWVib2R5IGZvciBubyBvdGhlciByZWFzb24gdGhhbiBiZWNhdXNlIG9mIGl0cyBhY3R1YWwKCQkJCQlmb3JtLCB0aGUgYWN0dWFsIHNpZ2h0IG9mIHRoZSBwZXJzb24gd2hvc2Ugc3RhdHVlIGhlIGJlaG9sZHMgbXVzdCBhbHNvIG9mCgkJCQkJbmVjZXNzaXR5IGdpdmUgaGltIHBsZWFzdXJl77yJOyA8L3RyYW5zbGF0aW9uPg=="
translation['8.1340b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS43IiB1bml0PSJMb2ViIGNoYXAiIC8+YW5kIGl0IGlzIHRoZSBjYXNlIHRoYXQgd2hlcmVhcyB0aGUgb3RoZXIgb2JqZWN0cyBvZgoJCQkJCXNlbnNhdGlvbiBjb250YWluIG5vIHJlcHJlc2VudGF0aW9uIG9mIGNoYXJhY3RlciwgZm9yIGV4YW1wbGUgdGhlIG9iamVjdHMgb2YKCQkJCQl0b3VjaCBhbmQgdGFzdGUg77yIdGhvdWdoIHRoZSBvYmplY3RzIG9mIHNpZ2h0IGRvIHNvIHNsaWdodGx5LCBmb3IgdGhlcmUKCQkJCQlhcmUgZm9ybXMgdGhhdCByZXByZXNlbnQgY2hhcmFjdGVyLCBidXQgb25seSB0byBhIHNtYWxsIGV4dGVudCwgYW5kIG5vdDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj7igJhOb3TigJkgaXMgYSBjb25qZWN0dXJhbAoJCQkJCQlpbnNlcnRpb24uPC9ub3RlPiBhbGwgbWVuIHBhcnRpY2lwYXRlIGluIHZpc3VhbCBwZXJjZXB0aW9uIG9mIHN1Y2gKCQkJCQlxdWFsaXRpZXM7IGFsc28gdmlzdWFsIHdvcmtzIG9mIGFydCBhcmUgbm90IHJlcHJlc2VudGF0aW9ucyBvZiBjaGFyYWN0ZXIgYnV0CgkJCQkJcmF0aGVyIHRoZSBmb3JtcyBhbmQgY29sb3JzIHByb2R1Y2VkIGFyZSBtZXJlIGluZGljYXRpb25zIG9mIGNoYXJhY3RlciwgYW5kCgkJCQkJdGhlc2UgaW5kaWNhdGlvbnMgYXJlIG9ubHkgYm9kaWx5IHNlbnNhdGlvbnMgZHVyaW5nIHRoZSBlbW90aW9uczsgbm90IGJ1dCB3aGF0CgkJCQkJaW4gc28gZmFyIGFzIHRoZXJlIGlzIGEgZGlmZmVyZW5jZSBldmVuIGluIHJlZ2FyZCB0byB0aGUgb2JzZXJ2YXRpb24gb2YgdGhlc2UKCQkJCQkJaW5kaWNhdGlvbnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlc2UgdmlzdWFsCgkJCQkJCWltcHJlc3Npb25zIGRvIHZhcnkgdG8gc29tZSBleHRlbnQgaW4gbW9yYWwgZWZmZWN0Ljwvbm90ZT4gdGhlIHlvdW5nIG11c3QKCQkJCQlub3QgbG9vayBhdCB0aGUgd29ya3Mgb2YgUGF1c29uIGJ1dCB0aG9zZSBvZiBQb2x5Z25vdHVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QYXVzb24gaXMgYSBwYWludGVyIG90aGVyd2lzZSBsaXR0bGUga25vd24uIFBvbHlnbm90dXMKCQkJCQkJZGVjb3JhdGVkIHRoZSBTdG9hIFBvaWtpbGUgYW5kIG90aGVyIGZhbW91cyBwdWJsaWMgYnVpbGRpbmdzIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgaW4gdGhlIG1pZGRsZSBvZiB0aGUgNXRoCgkJCQkJCWNlbnR1cnkgQi5DLiDigJhQb2x5Z25vdHVzIHJlcHJlc2VudGVkIG1lbiBhcyBiZXR0ZXIgdGhhbiB0aGV5CgkJCQkJCXJlYWxseSB3ZXJlLCBQYXVzb24gYXMgd29yc2XigJkg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gUG9ldC4gMTQ0OGEuNSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gUG9ldC4gMTQ0OGEKCQkJCQkJNTwvYmlibD7vvIkuPC9ub3RlPiBhbmQgb2YgYW55IG90aGVyIG1vcmFsIHBhaW50ZXIgb3IKCQkJCQlzY3VscHRvcu+8iSwgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBpbiB0aGUgbWlkZGxlIG9mIHRoZSA1dGgKCQkJCQkJY2VudHVyeSBCLkMuIOKAmFBvbHlnbm90dXMgcmVwcmVzZW50ZWQgbWVuIGFzIGJldHRlciB0aGFuIHRoZXkKCQkJCQkJcmVhbGx5IHdlcmUsIFBhdXNvbiBhcyB3b3JzZeKAmSDvvIg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBQb2V0LiAxNDQ4YS41IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBQb2V0LiAxNDQ4YQoJCQkJCQk1PC9iaWJsPu+8iS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPnBpZWNlcyBvZiBtdXNpYwoJCQkJCW9uIHRoZSBjb250cmFyeSBkbyBhY3R1YWxseSBjb250YWluIGluIHRoZW0gc2VsdmVzIGltaXRhdGlvbnMgb2YgY2hhcmFjdGVyOyBhbmQKCQkJCQl0aGlzIGlzIG1hbmlmZXN0LCBmb3IgZXZlbiBpbiB0aGUgbmF0dXJlIG9mIHRoZSBtZXJlIG1lbG9kaWVzIHRoZXJlIGFyZQoJCQkJCWRpZmZlcmVuY2VzLCBzbyB0aGF0IHBlb3BsZSB3aGVuIGhlYXJpbmcgdGhlbSBhcmUgYWZmZWN0ZWQgZGlmZmVyZW50bHkgYW5kIGhhdmUKCQkJCQlub3QgdGhlIHNhbWUgZmVlbGluZ3MgaW4gcmVnYXJkIHRvIGVhY2ggb2YgdGhlbSwgYnV0IGxpc3RlbiB0byBzb21lIGluIGEgbW9yZQoJCQkJCW1vdXJuZnVsIGFuZCByZXN0cmFpbmVkIHN0YXRlLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTM0MGIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['8.1340b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBpbnN0YW5jZSB0aGUgbW9kZSBjYWxsZWQgTWl4b2x5ZGlhbiwgYW5kCgkJCQkJdG8gb3RoZXJzIGluIGEgc29mdGVyIHN0YXRlIG9mIG1pbmQsIGJ1dCBpbiBhIG1pZHdheSBzdGF0ZSBhbmQgd2l0aCB0aGUgZ3JlYXRlc3QKCQkJCQljb21wb3N1cmUgdG8gYW5vdGhlciwgYXMgdGhlIERvcmlhbiBtb2RlIGFsb25lIG9mIHR1bmVzIHNlZW1zIHRvIGFjdCwgd2hpbGUgdGhlCgkJCQkJUGhyeWdpYW4gbWFrZXMgbWVuIGVudGh1c2lhc3RpYzsgPC90cmFuc2xhdGlvbj4="
translation['8.1340b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS45IiB1bml0PSJMb2ViIGNoYXAiIC8+Zm9yCgkJCQkJdGhlc2UgdGhpbmdzIGFyZSB3ZWxsIHN0YXRlZCBieSB0aG9zZSB3aG8gaGF2ZSBzdHVkaWVkIHRoaXMgZm9ybSBvZiBlZHVjYXRpb24sCgkJCQkJYXMgdGhleSBkZXJpdmUgdGhlIGV2aWRlbmNlIGZvciB0aGVpciB0aGVvcmllcyBmcm9tIHRoZSBhY3R1YWwgZmFjdHMgb2YKCQkJCQlleHBlcmllbmNlLiBBbmQgdGhlIHNhbWUgaG9sZHMgZ29vZCBhYm91dCB0aGUgcmh5dGhtcyBhbHNvLCBmb3Igc29tZSBoYXZlIGEgbW9yZQoJCQkJCXN0YWJsZSBhbmQgb3RoZXJzIGEgbW9yZSBlbW90aW9uYWwgY2hhcmFjdGVyLCBhbmQgb2YgdGhlIGxhdHRlciBzb21lIGFyZSBtb3JlCgkJCQkJdnVsZ2FyIGluIHRoZWlyIGVtb3Rpb25hbCBlZmZlY3RzIGFuZCBvdGhlcnMgbW9yZSBsaWJlcmFsLiBGcm9tIHRoZXNlCgkJCQkJY29uc2lkZXJhdGlvbnMgdGhlcmVmb3JlIGl0IGlzIHBsYWluIHRoYXQgbXVzaWMgaGFzIHRoZSBwb3dlciBvZiBwcm9kdWNpbmcgYQoJCQkJCWNlcnRhaW4gZWZmZWN0IG9uIHRoZSBtb3JhbCBjaGFyYWN0ZXIgb2YgdGhlIHNvdWwsIGFuZCBpZiBpdCBoYXMgdGhlIHBvd2VyIHRvIGRvCgkJCQkJdGhpcywgaXQgaXMgY2xlYXIgdGhhdCB0aGUgeW91bmcgbXVzdCBiZSBkaXJlY3RlZCB0byBtdXNpYyBhbmQgbXVzdCBiZSBlZHVjYXRlZAoJCQkJCWluIGl0LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbHNvIGVkdWNhdGlvbiBpbiBtdXNpYyBpcwoJCQkJCXdlbGwgYWRhcHRlZCB0byB0aGUgeW91dGhmdWwgbmF0dXJlOyBmb3IgdGhlIHlvdW5nIG93aW5nIHRvIHRoZWlyIHlvdXRoIGNhbm5vdAoJCQkJCWVuZHVyZSBhbnkgdGhpbmcgbm90IHN3ZWV0ZW5lZCBieSBwbGVhc3VyZSwgYW5kIG11c2ljIGlzIGJ5IG5hdHVyZSBhIHRoaW5nIHRoYXQKCQkJCQloYXMgYSBwbGVhc2FudCBzd2VldG5lc3MuIEFuZCB3ZSBzZWVtIHRvIGhhdmUgYSBjZXJ0YWluIGFmZmluaXR5IHdpdGggdHVuZXMgYW5kCgkJCQkJcmh5dGhtczsgb3dpbmcgdG8gd2hpY2ggbWFueSB3aXNlIG1lbiBzYXkgZWl0aGVyIHRoYXQgdGhlIHNvdWwgaXMgYSBoYXJtb255IG9yCgkJCQkJdGhhdCBpdCBoYXMgaGFybW9ueS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIGZvcm1lciBkb2N0cmluZSBpcwoJCQkJCQlQeXRoYWdvcmVhbiwgdGhlIGxhdHRlciBpcyBzdGF0ZWQgYnkgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gUGhhZWRvIDkzIiB2YWxpZD0ieWVzIj5QbGF0LiBQaGFlZG8KCQkJCQkJCTkzPC9iaWJsPi48L25vdGU+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gUGhhZWRvIDkzIiB2YWxpZD0ieWVzIj5QbGF0LiBQaGFlZG8KCQkJCQkJCTkzPC9iaWJsPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PC90cmFuc2xhdGlvbj4="
translation['8.1341a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlIG91Z2h0IG5vdwoJCQkJCXRvIGRlY2lkZSB0aGUgcXVlc3Rpb24gcmFpc2VkIGVhcmxpZXIsIHdoZXRoZXIgdGhlIHlvdW5nIG91Z2h0IHRvIGxlYXJuIG11c2ljIGJ5CgkJCQkJc2luZ2luZyBhbmQgcGxheWluZyB0aGVtc2VsdmVzIG9yIG5vdC4gSXQgaXMgbm90IGRpZmZpY3VsdCB0byBzZWUgdGhhdCBpdCBtYWtlcwoJCQkJCWEgZ3JlYXQgZGlmZmVyZW5jZSBpbiB0aGUgcHJvY2VzcyBvZiBhY3F1aXJpbmcgYSBjZXJ0YWluIHF1YWxpdHkgd2hldGhlciBvbmUKCQkJCQl0YWtlcyBhIHBhcnQgaW4gdGhlIGFjdGlvbnMgdGhhdCBpbXBhcnQgaXQgb25lc2VsZjsgZm9yIGl0IGlzIGEgdGhpbmcgdGhhdCBpcwoJCQkJCWltcG9zc2libGUsIG9yIGRpZmZpY3VsdCwgdG8gYmVjb21lIGEgZ29vZCBqdWRnZSBvZiBwZXJmb3JtYW5jZXMgaWYgb25lIGhhcyBub3QKCQkJCQl0YWtlbiBwYXJ0IGluIHRoZW0uIEF0IHRoZSBzYW1lIHRpbWUgYWxzbyBib3lzIG11c3QgaGF2ZSBzb21lIG9jY3VwYXRpb24sIGFuZAoJCQkJCW9uZSBtdXN0IHRoaW5rIEFyY2h5dGFzJ3MgcmF0dGxlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkFyY2h5dGFzIGEKCQkJCQkJUHl0aGFnb3JlYW4gcGhpbG9zb3BoZXIsIG1hdGhlbWF0aWNpYW4sIHN0YXRlc21hbiwgYW5kIGdlbmVyYWwgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDQxMDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwNDEwMCI+VGFyZW50dW08L3BsYWNlTmFtZT4sIGNvbnRlbXBvcmFyeSB3aXRoIFBsYXRvLiBIZSB3YXMKCQkJCQkJaW50ZXJlc3RlZCBpbiBtZWNoYW5pY3M7IGJ1dCBvbmUgdHJhZGl0aW9uIGFzY3JpYmVzIHRoZSB0b3kgaW4gcXVlc3Rpb24gdG8gYQoJCQkJCQljYXJwZW50ZXIgb2YgdGhlIHNhbWUgbmFtZS48L25vdGU+IGEgZ29vZCBpbnZlbnRpb24sIHdoaWNoIHBlb3BsZSBnaXZlIHRvCgkJCQkJY2hpbGRyZW4gaW4gb3JkZXIgdGhhdCB3aGlsZSBvY2N1cGllZCB3aXRoIHRoaXMgdGhleSBtYXkgbm90IGJyZWFrIGFueSBvZiB0aGUKCQkJCQlmdXJuaXR1cmU7IGZvciB5b3VuZyB0aGluZ3MgY2Fubm90IGtlZXAgc3RpbGwuIFdoZXJlYXMgdGhlbiBhIHJhdHRsZSBpcyBhCgkJCQkJc3VpdGFibGUgb2NjdXBhdGlvbiBmb3IgaW5mYW50IGNoaWxkcmVuLCBlZHVjYXRpb24gc2VydmVzIGFzIGEgcmF0dGxlIGZvciB5b3VuZwoJCQkJCXBlb3BsZSB3aGVuIG9sZGVyLiBTdWNoIGNvbnNpZGVyYXRpb25zIHRoZXJlZm9yZSBwcm92ZSB0aGF0IGNoaWxkcmVuIHNob3VsZCBiZQoJCQkJCXRyYWluZWQgaW4gbXVzaWMgc28gYXMgYWN0dWFsbHkgdG8gdGFrZSBwYXJ0IGluIGl0cyBwZXJmb3JtYW5jZTsgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDQxMDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwNDEwMCI+VGFyZW50dW08L3BsYWNlTmFtZT4sIGNvbnRlbXBvcmFyeSB3aXRoIFBsYXRvLiBIZSB3YXMKCQkJCQkJaW50ZXJlc3RlZCBpbiBtZWNoYW5pY3M7IGJ1dCBvbmUgdHJhZGl0aW9uIGFzY3JpYmVzIHRoZSB0b3kgaW4gcXVlc3Rpb24gdG8gYQoJCQkJCQljYXJwZW50ZXIgb2YgdGhlIHNhbWUgbmFtZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPmFuZCBpdCBpcyBub3QgZGlmZmljdWx0IHRvIGRpc3Rpbmd1aXNoIHdoYXQKCQkJCQlpcyBzdWl0YWJsZSBhbmQgdW5zdWl0YWJsZSBmb3IgdmFyaW91cyBhZ2VzLCBhbmQgdG8gcmVmdXRlIHRob3NlIHdobyBhc3NlcnQgdGhhdAoJCQkJCXRoZSBwcmFjdGljZSBvZiBtdXNpYyBpcyB2dWxnYXIuIEZvciBmaXJzdCwgaW5hc211Y2ggYXMgaXQgaXMgbmVjZXNzYXJ5IHRvIHRha2UKCQkJCQlwYXJ0IGluIHRoZSBwZXJmb3JtYW5jZXMgZm9yIHRoZSBzYWtlIG9mIGp1ZGdpbmcgdGhlbSwgaXQgaXMgdGhlcmVmb3JlIHByb3BlcgoJCQkJCWZvciB0aGUgcHVwaWxzIHdoZW4geW91bmcgYWN0dWFsbHkgdG8gZW5nYWdlIGluIHRoZSBwZXJmb3JtYW5jZXMsIHRob3VnaCB3aGVuCgkJCQkJdGhleSBnZXQgb2xkZXIgdGhleSBzaG91bGQgYmUgcmVsZWFzZWQgZnJvbSBwZXJmb3JtaW5nLCBidXQgYmUgYWJsZSB0byBqdWRnZQoJCQkJCXdoYXQgaXMgYmVhdXRpZnVsIGFuZCBlbmpveSBpdCByaWdodGx5IGJlY2F1c2Ugb2YgdGhlIHN0dWR5IGluIHdoaWNoIHRoZXkKCQkJCQllbmdhZ2VkIGluIHRoZWlyIHlvdXRoLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPlRoZW4gYXMgdG8KCQkJCQl0aGUgb2JqZWN0aW9uIHJhaXNlZCBieSBzb21lIHBlb3BsZSB0aGF0IG11c2ljIG1ha2VzIHBlb3BsZSB2dWxnYXIsIGl0IGlzIG5vdAoJCQkJCWRpZmZpY3VsdCB0byBzb2x2ZSBpdCBieSBjb25zaWRlcmluZyBob3cgZmFyIHB1cGlscyB3aG8gYXJlIGJlaW5nIGVkdWNhdGVkIHdpdGgKCQkJCQlhIHZpZXcgdG8gY2l2aWMgdmlydHVlIHNob3VsZCB0YWtlIHBhcnQgaW4gdGhlIGFjdHVhbCBwZXJmb3JtYW5jZSBvZiBtdXNpYywKCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzNDFhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['8.1341a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBpbiB3aGF0IHRpbWVzIGFuZCB3aGF0IHJoeXRobXMgdGhleSBzaG91bGQgdGFrZSBwYXJ0LCBhbmQKCQkJCQlhbHNvIHdoYXQga2luZHMgb2YgaW5zdHJ1bWVudHMgc2hvdWxkIGJlIHVzZWQgaW4gdGhlaXIgc3R1ZGllcywgYXMgdGhpcwoJCQkJCW5hdHVyYWxseSBtYWtlcyBhIGRpZmZlcmVuY2UuIEZvciB0aGUgc29sdXRpb24gb2YgdGhlIG9iamVjdGlvbiBkZXBlbmRzIHVwb24KCQkJCQl0aGVzZSBwb2ludHMsIGFzIGl0IGlzIHF1aXRlIHBvc3NpYmxlIHRoYXQgc29tZSBtb2RlcyBvZiBtdXNpYyBkbyBwcm9kdWNlIHRoZQoJCQkJCXJlc3VsdCBtZW50aW9uZWQuIDwvdHJhbnNsYXRpb24+"
translation['8.1341a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi40IiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgbWFuaWZlc3QKCQkJCQl0aGVyZWZvcmUgdGhhdCB0aGUgc3R1ZHkgb2YgbXVzaWMgbXVzdCBub3QgcGxhY2UgYSBoaW5kcmFuY2UgaW4gdGhlIHdheSBvZgoJCQkJCXN1YnNlcXVlbnQgYWN0aXZpdGllcywgbm9yIHZ1bGdhcml6ZSB0aGUgYm9kaWx5IGZyYW1lIGFuZCBtYWtlIGl0IHVzZWxlc3MgZm9yCgkJCQkJdGhlIGV4ZXJjaXNlcyBvZiB0aGUgc29sZGllciBhbmQgdGhlIGNpdGl6ZW4sIGVpdGhlciBmb3IgdGhlaXIgcHJhY3RpY2FsIHB1cnN1aXQKCQkJCQlub3cgb3IgZm9yIHRoZWlyIHNjaWVudGlmaWMgc3R1ZHkgbGF0ZXIgb24uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkl0IGlzIGRpZmZpY3VsdCBub3QgdG8gdGhpbmsgdGhhdCBlaXRoZXIgdGhlIG5vdW5zIG9yIHRoZSBhZHZlcmJzIGluIHRoZQoJCQkJCQlHcmVlayBoYXZlIGJlZW4gZXJyb25lb3VzbHkgdHJhbnNwb3NlZCwgYW5kIHRoYXQgd2Ugc2hvdWxkIHRyYW5zbGF0ZQoJCQkJCQnigJhlaXRoZXIgZm9yIGxlYXJuaW5nIHRoZW0gbm93IG9yIGZvciBwcmFjdGlzaW5nIHRoZW0gbGF0ZXIKCQkJCQkJb24u4oCZPC9ub3RlPiBBbmQgdGhpcyB3b3VsZCBjb21lIGFib3V0IGluIHJlc3BlY3Qgb2YgdGhlaXIgc3R1ZHkgaWYKCQkJCQl0aGUgcHVwaWxzIGRpZCBub3QgZ28gb24gdG9pbGluZyBhdCB0aGUgZXhlcmNpc2VzIHRoYXQgYWltIGF0IHByb2Zlc3Npb25hbAoJCQkJCWNvbXBldGl0aW9ucywgbm9yIHRoZSB3b25kZXJmdWwgYW5kIGVsYWJvcmF0ZSBwZXJmb3JtYW5jZXMgd2hpY2ggaGF2ZSBub3cKCQkJCQllbnRlcmVkIGludG8gdGhlIGNvbXBldGl0aW9ucyBhbmQgaGF2ZSBwYXNzZWQgZnJvbSB0aGUgY29tcGV0aXRpb25zIGludG8KCQkJCQllZHVjYXRpb24sIGJ1dCBhbHNvIG9ubHkgcHJhY3Rpc2VkIGV4ZXJjaXNlcyBub3Qgb2YgdGhhdCBzb3J0IHVudGlsIHRoZXkgYXJlCgkJCQkJYWJsZSB0byBlbmpveSBiZWF1dGlmdWwgdHVuZXMgYW5kIHJoeXRobXMsIGFuZCBub3QgbWVyZWx5IHRoZSBjaGFybSBjb21tb24gdG8KCQkJCQlhbGwgbXVzaWMsIHdoaWNoIGV2ZW4gc29tZSBsb3dlciBhbmltYWxzIGVuam95LCBhcyB3ZWxsIGFzIGEgbXVsdGl0dWRlIG9mIHNsYXZlcwoJCQkJCWFuZCBjaGlsZHJlbi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQgaXQgaXMgYWxzbyBjbGVhcgoJCQkJCWZyb20gdGhlc2UgY29uc2lkZXJhdGlvbnMgd2hhdCBzb3J0IG9mIGluc3RydW1lbnRzIHRoZXkgc2hvdWxkIHVzZS4gRmx1dGVzIG11c3QKCQkJCQlub3QgYmUgaW50cm9kdWNlZCBpbnRvIGVkdWNhdGlvbiwgbm9yIGFueSBvdGhlciBwcm9mZXNzaW9uYWwgaW5zdHJ1bWVudCwgc3VjaCBhcwoJCQkJCXRoZSBoYXJwIG9yIGFueSBvdGhlciBvZiB0aGF0IHNvcnQsIGJ1dDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5zdWNoIGluc3RydW1lbnRzIGFzIHdpbGwgbWFrZSB0aGVtIGF0dGVudGl2ZSBwdXBpbHMgZWl0aGVyIGF0IHRoZWlyIG11c2ljYWwKCQkJCQl0cmFpbmluZyBvciBpbiB0aGVpciBvdGhlciBsZXNzb25zLiBNb3Jlb3ZlciB0aGUgZmx1dGUgaXMgbm90IGEgbW9yYWxpemluZyBidXQKCQkJCQlyYXRoZXIgYW4gZXhjaXRpbmcgaW5mbHVlbmNlLCBzbyB0aGF0IGl0IG91Z2h0IHRvIGJlIHVzZWQgZm9yIG9jY2FzaW9ucyBvZiB0aGUKCQkJCQlraW5kIGF0IHdoaWNoIGF0dGVuZGFuY2UgaGFzIHRoZSBlZmZlY3Qgb2YgcHVyaWZpY2F0aW9uIHJhdGhlciB0aGFuCgkJCQkJCWluc3RydWN0aW9uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTM0MWEgMzMgZmYuPC9ub3RlPiBBbmQKCQkJCQlsZXQgdXMgYWRkIHRoYXQgdGhlIGZsdXRlIGhhcHBlbnMgdG8gcG9zc2VzcyB0aGUgYWRkaXRpb25hbCBwcm9wZXJ0eSB0ZWxsaW5nCgkJCQkJYWdhaW5zdCBpdHMgdXNlIGluIGVkdWNhdGlvbiB0aGF0IHBsYXlpbmcgaXQgcHJldmVudHMgdGhlIGVtcGxveW1lbnQgb2Ygc3BlZWNoLgoJCQkJCUhlbmNlIGZvcm1lciBhZ2VzIHJpZ2h0bHkgcmVqZWN0ZWQgaXRzIHVzZSBieSB0aGUgeW91bmcgYW5kIHRoZSBmcmVlLCBhbHRob3VnaAoJCQkJCWF0IGZpcnN0IHRoZXkgaGFkIGVtcGxveWVkIGl0LiA8L3RyYW5zbGF0aW9uPg=="
translation['8.1341b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi42IiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yCgkJCQkJYXMgdGhleSBjYW1lIHRvIGhhdmUgbW9yZSBsZWlzdXJlIGJlY2F1c2Ugb2YgdGhlaXIgd2VhbHRoIGFuZCBncmV3IG1vcmUKCQkJCQloaWdoLXNwaXJpdGVkIGFuZCB2YWxvcm91cywgYm90aCBhdCBhIHN0aWxsIGVhcmxpZXIgZGF0ZSBhbmQgYmVjYXVzZSBhZnRlciB0aGUKCQkJCQlQZXJzaWFuIFdhcnMgdGhleSB3ZXJlIGZpbGxlZCB3aXRoIHByaWRlIGFzIGEgcmVzdWx0IG9mIHRoZWlyIGFjaGlldmVtZW50cywgdGhleQoJCQkJCWJlZ2FuIHRvIGVuZ2FnZSBpbiBhbGwgYnJhbmNoZXMgb2YgbGVhcm5pbmcsIG1ha2luZyBubyBkaXN0aW5jdGlvbiBidXQgcHVyc3VpbmcKCQkJCQlyZXNlYXJjaCBmdXJ0aGVyLiBCZWNhdXNlIG9mIHRoaXMgdGhleSBldmVuIGluY2x1ZGVkIGZsdXRlLXBsYXlpbmcgYW1vbmcgdGhlaXIKCQkJCQlzdHVkaWVzOyBmb3IgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IGEgY2VydGFpbgoJCQkJCWNob3J1cy1sZWFkZXIgcGxheWVkIHRoZSBmbHV0ZSB0byBoaXMgY2hvcnVzIGhpbXNlbGYsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgd2VhbHRoeSBjaXRpemVuIHdobyB1bmRlcnRvb2sgdGhlIGR1dHkgb2YgZXF1aXBwaW5nIGFuZAoJCQkJCQl0cmFpbmluZyBhIGNob3J1cyBmb3IgYSByZWxpZ2lvdXMgY2VsZWJyYXRpb24g77yIZXNwZWNpYWxseSB0aGUKCQkJCQkJcHJvZHVjdGlvbiBvZiBhIGRyYW1hIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPu+8iSB1c3VhbGx5IGhhZCBhbiBhc3Npc3RhbnQgb2YgbG93ZXIgc3RhdGlvbiB0bwoJCQkJCQlzdXBwbHkgdGhlIGluc3RydW1lbnRhbCBtdXNpYy4gVGhlIG9mZmljZSBvZiBjaG9yZWd1cyBpcyBub3QgZWxzZXdoZXJlCgkJCQkJCXJlZmVycmVkIHRvIGFzIGV4aXN0aW5nIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDExMDY1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTEwNjUiPlNwYXJ0YTwvcGxhY2VOYW1lPi48L25vdGU+IGFuZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT7vvIkgdXN1YWxseSBoYWQgYW4gYXNzaXN0YW50IG9mIGxvd2VyIHN0YXRpb24gdG8KCQkJCQkJc3VwcGx5IHRoZSBpbnN0cnVtZW50YWwgbXVzaWMuIFRoZSBvZmZpY2Ugb2YgY2hvcmVndXMgaXMgbm90IGVsc2V3aGVyZQoJCQkJCQlyZWZlcnJlZCB0byBhcyBleGlzdGluZyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTA2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMDY1Ij5TcGFydGE8L3BsYWNlTmFtZT4uPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMTM5MyI+QXRoZW5zPC9wbGFjZU5hbWU+IGl0IGJlY2FtZSBzbyBmYXNoaW9uYWJsZSB0aGF0IGFsbW9zdCB0aGUgbWFqb3JpdHkgb2YKCQkJCQlmcmVlbWVuIHdlbnQgaW4gZm9yIGZsdXRlLXBsYXlpbmcsIGFzIGlzIHNob3duIGJ5IHRoZSB0YWJsZXQgZXJlY3RlZCBieQoJCQkJCVRocmFzaXBwdXMgYWZ0ZXIgaGF2aW5nIHByb3ZpZGVkIHRoZSBjaG9ydXMgZm9yIEVjcGhhbnRpZGVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5FY3BoYW50aWRlcyB3YXMgb25lIG9mIHRoZSBlYXJsaWVzdCBjb21pYyBwb2V0czsgVGhyYXNpcHB1cwoJCQkJCQlpcyBub3QgZWxzZXdoZXJlIHJlY29yZGVkLiBXaG8gdGhlIGZsdXRlLXBsYXllciB3YXMgaXMgdW5rbm93bi48L25vdGU+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz5CdXQgbGF0ZXIgb24gaXQgY2FtZSB0byBiZQoJCQkJCWRpc2FwcHJvdmVkIG9mIGFzIGEgcmVzdWx0IG9mIGFjdHVhbCBleHBlcmllbmNlLCB3aGVuIG1lbiB3ZXJlIG1vcmUgY2FwYWJsZSBvZgoJCQkJCWp1ZGdpbmcgd2hhdCBtdXNpYyBjb25kdWNlZCB0byB2aXJ0dWUgYW5kIHdoYXQgZGlkIG5vdDsgYW5kIHNpbWlsYXJseSBhbHNvIG1hbnkKCQkJCQlvZiB0aGUgb2xkIGluc3RydW1lbnRzIHdlcmUgZGlzYXBwcm92ZWQgb2YsIGxpa2UgdGhlIHBlY3RpcyBhbmQgdGhlCgkJCQkJCWJhcmJpdG9zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZXNlIHdlcmUgb2xkLWZhc2hpb25lZCBmb3JtcwoJCQkJCQlvZiB0aGUgbHlyZS48L25vdGU+IGFuZCB0aGUgaW5zdHJ1bWVudHMgZGVzaWduZWQgdG8gZ2l2ZSBwbGVhc3VyZSB0byB0aG9zZQoJCQkJCXdobyBoZWFyIHBlb3BsZSBwbGF5aW5nIHRoZW0sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgcG9zc2libGUKCQkJCQkJZW1lbmRhdGlvbiBvZiB0aGUgR3JlZWsgZ2l2ZXMg4oCYdGhvc2Ugd2hvIGxpc3RlbiB0byB0aGVpcgoJCQkJCQltb2R1bGF0aW9ucy7igJk8L25vdGU+IHRoZSBzZXB0YW5nbGUsIHRoZSB0cmlhbmdsZSBhbmQgdGhlCgkJCQkJCXNhbWJ5Yyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhyZWUgZGlmZmVyZW50IHN0cmluZ2VkCgkJCQkJCWluc3RydW1lbnRzLCB0aGUgbGFzdCBoYXZpbmcgZm91ciBzdHJpbmdzIHN0cmV0Y2hlZCBpbiBhIHRyaWFuZ3VsYXIKCQkJCQkJZnJhbWUuPC9ub3RlPgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzQxYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['8.1341b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBhbGwgdGhlIGluc3RydW1lbnRzIHRoYXQgcmVxdWlyZSBtYW51YWwgc2tpbGwuPC90cmFuc2xhdGlvbj4="
translation['8.1341b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi44IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIGluZGVlZCB0aGVyZSBpcyBhIHJlYXNvbmFibGUgZm91bmRhdGlvbiBmb3IgdGhlIHN0b3J5CgkJCQkJdGhhdCB3YXMgdG9sZCBieSB0aGUgYW5jaWVudHMgYWJvdXQgdGhlIGZsdXRlLiBUaGUgdGFsZSBnb2VzIHRoYXQgQXRoZW5hIGZvdW5kIGEKCQkJCQlmbHV0ZSBhbmQgdGhyZXcgaXQgYXdheS4gTm93IGl0IGlzIG5vdCBhIGJhZCBwb2ludCBpbiB0aGUgc3RvcnkgdGhhdCB0aGUgZ29kZGVzcwoJCQkJCWRpZCB0aGlzIG91dCBvZiBhbm5veWFuY2UgYmVjYXVzZSBvZiB0aGUgdWdseSBkaXN0b3J0aW9uIG9mIGhlciBmZWF0dXJlczsgYnV0IGFzCgkJCQkJYSBtYXR0ZXIgb2YgZmFjdCBpdCBpcyBtb3JlIGxpa2VseSB0aGF0IGl0IHdhcyBiZWNhdXNlIGVkdWNhdGlvbiBpbgoJCQkJCWZsdXRlLXBsYXlpbmcgaGFzIG5vIGVmZmVjdCBvbiB0aGUgaW50ZWxsaWdlbmNlLCB3aGVyZWFzIHdlIGF0dHJpYnV0ZSBzY2llbmNlCgkJCQkJYW5kIGFydCB0byBBdGhlbmEuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHNpbmNlIHdlIHJlamVjdCBwcm9mZXNzaW9uYWwgZWR1Y2F0aW9uIGluIHRoZSBpbnN0cnVtZW50cwoJCQkJCWFuZCBpbiBwZXJmb3JtYW5jZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgR3JlZWsgc2hvdWxkIHByb2JhYmx5CgkJCQkJCWJlIGFsdGVyZWQgdG8gZ2l2ZSDigJhyZWplY3QsIHNvbWUgaW5zdHJ1bWVudHMgYW5kIHByb2Zlc3Npb25hbAoJCQkJCQllZHVjYXRpb24gaW4gcGVyZm9ybWFuY2Uu4oCZPC9ub3RlPiDvvIhhbmQgd2UgY291bnQKCQkJCQlwZXJmb3JtYW5jZSBpbiBjb21wZXRpdGlvbnMgYXMgcHJvZmVzc2lvbmFsLCBmb3IgdGhlIHBlcmZvcm1lciBkb2VzIG5vdCB0YWtlCgkJCQkJcGFydCBpbiBpdCBmb3IgaGlzIG93biBpbXByb3ZlbWVudCwgYnV0IGZvciBoaXMgaGVhcmVycycgcGxlYXN1cmUsIGFuZCB0aGF0IGEKCQkJCQl2dWxnYXIgcGxlYXN1cmUsIG93aW5nIHRvIHdoaWNoIHdlIGRvIG5vdCBjb25zaWRlciBwZXJmb3JtaW5nIHRvIGJlIHByb3BlciBmb3IKCQkJCQlmcmVlIG1lbiwgYnV0IHNvbWV3aGF0IG1lbmlhbDsgYW5kIGluZGVlZCBwZXJmb3JtZXJzIGRvIGJlY29tZSB2dWxnYXIsIHNpbmNlIHRoZQoJCQkJCW9iamVjdCBhdCB3aGljaCB0aGV5IGFpbSBpcyBhIGxvdyBvbmUsIGFzIHZ1bGdhcml0eSBpbiB0aGUgYXVkaWVuY2UgdXN1YWxseQoJCQkJCWluZmx1ZW5jZXMgdGhlIG11c2ljLCBzbyB0aGF0IGl0IGltcGFydHMgdG8gdGhlIGFydGlzdHMgd2hvIHByYWN0aXNlIGl0IHdpdGggYQoJCQkJCXZpZXcgdG8gc3VpdCB0aGUgYXVkaWVuY2UgYSBzcGVjaWFsIGtpbmQgb2YgcGVyc29uYWxpdHksIGFuZCBhbHNvIG9mIGJvZGlseQoJCQkJCWZyYW1lIGJlY2F1c2Ugb2YgdGhlIG1vdmVtZW50cyByZXF1aXJlZO+8ieKAlDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+d2UgbXVzdCB0aGVyZWZvcmUgZ2l2ZSBzb21lIGNvbnNpZGVyYXRpb24gdG8gdHVuZXMKCQkJCQlhbmQgcmh5dGhtcyw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIHRvIHRoZSBxdWVzdGlvbgoJCQkJCXdoZXRoZXIgZm9yIGVkdWNhdGlvbmFsIHB1cnBvc2VzIHdlIG11c3QgZW1wbG95IGFsbCB0aGUgdHVuZXMgYW5kIGFsbCB0aGUKCQkJCQlyaHl0aG1zIG9yIG1ha2UgZGlzdGluY3Rpb25zOyBhbmQgbmV4dCwgd2hldGhlciBmb3IgdGhvc2Ugd2hvIGFyZSB3b3JraW5nIGF0CgkJCQkJbXVzaWMgZm9yIGVkdWNhdGlvbiB3ZSBzaGFsbCBsYXkgZG93biB0aGUgc2FtZSByZWd1bGF0aW9uLCBvciBvdWdodCB3ZSB0bwoJCQkJCWVzdGFibGlzaCBzb21lIG90aGVyIHRoaXJkIG9uZSDvvIhpbmFzbXVjaCBhcyB3ZSBzZWUgdGhhdCB0aGUgZmFjdG9ycyBpbgoJCQkJCW11c2ljIGFyZSBtZWxvZHkgYW5kIHJoeXRobSwgYW5kIGl0IGlzIGltcG9ydGFudCB0byBub3RpY2Ugd2hhdCBpbmZsdWVuY2UgZWFjaAoJCQkJCW9mIHRoZXNlIGhhcyB1cG9uIGVkdWNhdGlvbu+8iSwgYW5kIHdoZXRoZXIgd2UgYXJlIHRvIHByZWZlciBtdXNpYyB3aXRoIGEKCQkJCQlnb29kIG1lbG9keSBvciBtdXNpYyB3aXRoIGEgZ29vZCByaHl0aG0uIDwvdHJhbnNsYXRpb24+"
translation['8.1342a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+Tm93IHdlIGNvbnNpZGVyIHRoYXQgbXVjaCBpcyB3ZWxsIHNhaWQgb24gdGhlc2UgbWF0dGVycyBieQoJCQkJCXNvbWUgb2YgdGhlIG11c2ljaWFucyBvZiB0aGUgcHJlc2VudCBkYXkgYW5kIGJ5IHNvbWUgb2YgdGhvc2UgZW5nYWdlZCBpbgoJCQkJCXBoaWxvc29waHkgd2hvIGhhcHBlbiB0byBiZSBleHBlcmllbmNlZCBpbiBtdXNpY2FsIGVkdWNhdGlvbiwgYW5kIHdlIHdpbGwKCQkJCQlhYmFuZG9uIHRoZSBwcmVjaXNlIGRpc2N1c3Npb24gYXMgdG8gZWFjaCBvZiB0aGVzZSBtYXR0ZXJzIGZvciBhbnkgd2hvIHdpc2ggaXQKCQkJCQl0byBzZWVrIGl0IGZyb20gdGhvc2UgdGVhY2hlcnMsIHdoaWxlIGZvciB0aGUgcHJlc2VudCBsZXQgdXMgbGF5IGRvd24gZ2VuZXJhbAoJCQkJCXByaW5jaXBsZXMsIG1lcmVseSBzdGF0aW5nIHRoZSBvdXRsaW5lcyBvZiB0aGUgc3ViamVjdHMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy40IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHNpbmNlIHdlIGFjY2VwdCB0aGUgY2xhc3NpZmljYXRpb24gb2YgbWVsb2RpZXMKCQkJCQltYWRlIGJ5IHNvbWUgcGhpbG9zb3BoZXJzLCBhcyBldGhpY2FsIG1lbG9kaWVzLCBtZWxvZGllcyBvZiBhY3Rpb24sIGFuZAoJCQkJCXBhc3Npb25hdGUgbWVsb2RpZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gcmVwcmVzZW50YXRpdmUgb2YKCQkJCQkJY2hhcmFjdGVyLCBvZiBhY3Rpb24gYW5kIG9mIGVtb3Rpb24uPC9ub3RlPiBkaXN0cmlidXRpbmcgdGhlIHZhcmlvdXMKCQkJCQloYXJtb25pZXMgYW1vbmcgdGhlc2UgY2xhc3NlcyBhcyBiZWluZyBpbiBuYXR1cmUgYWtpbiB0byBvbmUgb3IgdGhlIG90aGVyLCBhbmQKCQkJCQlhcyB3ZSBzYXkgdGhhdCBtdXNpYyBvdWdodCB0byBiZSBlbXBsb3llZCBub3QgZm9yIHRoZSBwdXJwb3NlIG9mIG9uZSBiZW5lZml0CgkJCQkJdGhhdCBpdCBjb25mZXJzIGJ1dCBvbiBhY2NvdW50IG9mIHNldmVyYWwg77yIZm9yIGl0IHNlcnZlcyB0aGUgcHVycG9zZQoJCQkJCWJvdGggb2YgZWR1Y2F0aW9uIGFuZCBvZiBwdXJnYXRpb27igJR0aGUgdGVybSBwdXJnYXRpb24gd2UgdXNlIGZvciB0aGUKCQkJCQlwcmVzZW50IHdpdGhvdXQgZXhwbGFuYXRpb24sIGJ1dCB3ZSB3aWxsIHJldHVybiB0byBkaXNjdXNzIHRoZSBtZWFuaW5nIHRoYXQgd2UKCQkJCQlnaXZlIHRvIGl0IG1vcmUgZXhwbGljaXRseSBpbiBvdXIgdHJlYXRpc2Ugb24gcG9ldHJ5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIFBvZXQuIDE0NDliIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBQb2V0LiA2PC9iaWJsPgoJCQkJCQl0cmFnZWR5IGlzIHNhaWQgdG8gcHVyZ2UgdGhlIGVtb3Rpb24gb2YgcGl0eSBhbmQgZmVhciBieSBnaXZpbmcgdGhlbSBhbgoJCQkJCQlvdXRsZXQ7IHRoZSByZWZlcmVuY2UgaGVyZSBpcyBwcm9iYWJseSB0byB0aGUgbG9zdCBTZWNvbmQgQm9vayBvZgoJCQkJCQkJPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UG9ldGljczwvdGl0bGU+Ljwvbm90ZT7igJRhbmQgdGhpcmRseSBpdCBzZXJ2ZXMgZm9yCgkJCQkJYW11c2VtZW50LCBzZXJ2aW5nIHRvIHJlbGF4IG91ciB0ZW5zaW9uIGFuZCB0byBnaXZlIHJlc3QgZnJvbSBpdO+8iSwKCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gUG9ldC4gMTQ0OWIiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIFBvZXQuIDY8L2JpYmw+CgkJCQkJCXRyYWdlZHkgaXMgc2FpZCB0byBwdXJnZSB0aGUgZW1vdGlvbiBvZiBwaXR5IGFuZCBmZWFyIGJ5IGdpdmluZyB0aGVtIGFuCgkJCQkJCW91dGxldDsgdGhlIHJlZmVyZW5jZSBoZXJlIGlzIHByb2JhYmx5IHRvIHRoZSBsb3N0IFNlY29uZCBCb29rIG9mCgkJCQkJCQk8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Qb2V0aWNzPC90aXRsZT4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzNDJhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['8.1342a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['8.1342a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy41IiB1bml0PSJMb2ViIGNoYXAiIC8+aXQgaXMgY2xlYXIgdGhhdCB3ZQoJCQkJCXNob3VsZCBlbXBsb3kgYWxsIHRoZSBoYXJtb25pZXMsIHlldCBub3QgZW1wbG95IHRoZW0gYWxsIGluIHRoZSBzYW1lIHdheSwgYnV0CgkJCQkJdXNlIHRoZSBtb3N0IGV0aGljYWwgb25lcyBmb3IgZWR1Y2F0aW9uLCBhbmQgdGhlIGFjdGl2ZSBhbmQgcGFzc2lvbmF0ZSBraW5kcyBmb3IKCQkJCQlsaXN0ZW5pbmcgdG8gd2hlbiBvdGhlcnMgYXJlIHBlcmZvcm1pbmcg77yIZm9yIGFueSBleHBlcmllbmNlIHRoYXQgb2NjdXJzCgkJCQkJdmlvbGVudGx5IGluIHNvbWUgc291bHMgaXMgZm91bmQgaW4gYWxsLCB0aG91Z2ggd2l0aCBkaWZmZXJlbnQgZGVncmVlcyBvZgoJCQkJCWludGVuc2l0eeKAlGZvciBleGFtcGxlIHBpdHkgYW5kIGZlYXIsIGFuZCBhbHNvIHJlbGlnaW91cyBleGNpdGVtZW50OwoJCQkJCWZvciBzb21lIHBlcnNvbnMgYXJlIHZlcnkgbGlhYmxlIHRvIHRoaXMgZm9ybSBvZiBlbW90aW9uLCBhbmQgdW5kZXIgdGhlCgkJCQkJaW5mbHVlbmNlIG9mIHNhY3JlZCBtdXNpYyB3ZSBzZWUgdGhlc2UgcGVvcGxlLCB3aGVuIHRoZXkgdXNlIHR1bmVzIHRoYXQKCQkJCQl2aW9sZW50bHkgYXJvdXNlIHRoZSBzb3VsLCBiZWluZyB0aHJvd24gaW50byBhIHN0YXRlIGFzIGlmIHRoZXkgaGFkIHJlY2VpdmVkCgkJCQkJbWVkaWNpbmFsIHRyZWF0bWVudCBhbmQgdGFrZW4gYSBwdXJnZTsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz50aGUgc2FtZSBleHBlcmllbmNlIHRoZW4gbXVzdCBjb21lIGFsc28gdG8gdGhlCgkJCQkJY29tcGFzc2lvbmF0ZSBhbmQgdGhlIHRpbWlkIGFuZCB0aGUgb3RoZXIgZW1vdGlvbmFsIHBlb3BsZSBnZW5lcmFsbHkgaW4gc3VjaAoJCQkJCWRlZ3JlZSBhcyBiZWZhbGxzIGVhY2ggaW5kaXZpZHVhbCBvZiB0aGVzZSBjbGFzc2VzLCBhbmQgYWxsIG11c3QgdW5kZXJnbyBhCgkJCQkJcHVyZ2F0aW9uIGFuZCBhIHBsZWFzYW50IGZlZWxpbmcgb2YgcmVsaWVmOyBhbmQgc2ltaWxhcmx5IGFsc28gdGhlIHB1cmdhdGl2ZQoJCQkJCW1lbG9kaWVzIGFmZm9yZCBoYXJtbGVzcyBkZWxpZ2h0IHRvIHBlb3BsZe+8iS4gVGhlcmVmb3JlIHRob3NlIHdobyBnbyBpbgoJCQkJCWZvciB0aGVhdHJpY2FsIG11c2ljIG11c3QgYmUgc2V0IHRvIGNvbXBldGUgaW4gaGFybW9uaWVzIGFuZCBtZWxvZGllcyBvZiB0aGlzCgkJCQkJa2luZCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPu+8iGFuZCBzaW5jZSB0aGUKCQkJCQlhdWRpZW5jZSBpcyBvZiB0d28gY2xhc3Nlcywgb25lIGZyZWVtZW4gYW5kIGVkdWNhdGVkIHBlb3BsZSwgYW5kIHRoZQoJCQkJCQlvdGhlcjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50aGUgdnVsZ2FyIGNsYXNzIGNvbXBvc2VkIG9mCgkJCQkJbWVjaGFuaWNzIGFuZCBsYWJvcmVycyBhbmQgb3RoZXIgc3VjaCBwZXJzb25zLCB0aGUgbGF0dGVyIHNvcnQgYWxzbyBtdXN0IGJlCgkJCQkJYXNzaWduZWQgY29tcGV0aXRpb25zIGFuZCBzaG93cyBmb3IgcmVsYXhhdGlvbjsgYW5kIGp1c3QgYXMgdGhlaXIgc291bHMgYXJlCgkJCQkJd2FycGVkIGZyb20gdGhlIG5hdHVyYWwgc3RhdGUsIHNvIHRob3NlIGhhcm1vbmllcyBhbmQgbWVsb2RpZXMgdGhhdCBhcmUgaGlnaGx5CgkJCQkJc3RydW5nIGFuZCBpcnJlZ3VsYXIgaW4gY29sb3JhdGlvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TYWlkIHRvCgkJCQkJCW1lYW4gZGl2ZXJnZW50IGZyb20gdGhlIHJlZ3VsYXIgc2NhbGUgaW4gaGF2aW5nIHNtYWxsZXIgaW50ZXJ2YWxzLjwvbm90ZT4KCQkJCQlhcmUgZGV2aWF0aW9ucywgYnV0IHBlb3BsZSBvZiBlYWNoIHNvcnQgcmVjZWl2ZSBwbGVhc3VyZSBmcm9tIHdoYXQgaXMgbmF0dXJhbGx5CgkJCQkJc3VpdGVkIHRvIHRoZW0sIG93aW5nIHRvIHdoaWNoIHRoZSBjb21wZXRpdG9ycyBiZWZvcmUgYW4gYXVkaWVuY2Ugb2YgdGhpcyBzb3J0CgkJCQkJbXVzdCBiZSBhbGxvd2VkIHRvIGVtcGxveSBzb21lIHN1Y2gga2luZCBvZiBtdXNpYyBhcyB0aGlz77yJOyA8L3RyYW5zbGF0aW9uPg=="
translation['8.1342b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy44IiB1bml0PSJMb2ViIGNoYXAiIC8+YnV0IGZvciBlZHVjYXRpb24sIGFzIGhhcyBiZWVuIHNhaWQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjEzNDJhIDIuPC9ub3RlPiB0aGUgZXRoaWNhbCBjbGFzcyBvZiBtZWxvZGllcwoJCQkJCWFuZCBvZiBoYXJtb25pZXMgbXVzdCBiZSBlbXBsb3llZC4gQW5kIG9mIHRoYXQgbmF0dXJlIGlzIHRoZSBEb3JpYW4gbW9kZSwgYXMgd2UKCQkJCQlzYWlkIGJlZm9yZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4xMzQzYiAzIGZmLjwvbm90ZT47IGJ1dCB3ZSBtdXN0CgkJCQkJYWxzbyBhY2NlcHQgYW55IG90aGVyIG1vZGUgdGhhdCB0aG9zZSB3aG8gdGFrZSBwYXJ0IGluIHRoZSBwdXJzdWl0IG9mIHBoaWxvc29waHkKCQkJCQlhbmQgaW4gbXVzaWNhbCBlZHVjYXRpb24gbWF5IHJlY29tbWVuZCB0byB1cy4gU29jcmF0ZXMgaW4gdGhlCgkJCQkJCTx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlJlcHVibGljPC90aXRsZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFJlcC4gMzk5YSIgdmFsaWQ9InllcyI+UGxhdC4gUmVwLiAzOTlhPC9iaWJsPgoJCQkJCTwvbm90ZT4gZG9lcyBub3QgZG8gd2VsbCBpbiBhbGxvd2luZyBvbmx5IHRoZSBQaHJ5Z2lhbiBtb2RlIGFsb25nIHdpdGggdGhlCgkJCQkJRG9yaWFuLCBhbmQgdGhhdCB3aGVuIGhlIGhhcyByZWplY3RlZCB0aGUgZmx1dGUgYW1vbmcgaW5zdHJ1bWVudHM7IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFJlcC4gMzk5YSIgdmFsaWQ9InllcyI+UGxhdC4gUmVwLiAzOTlhPC9iaWJsPgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzQyYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['8.1342b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGUKCQkJCQlQaHJ5Z2lhbiBtb2RlIGhhcyB0aGUgc2FtZSBlZmZlY3QgYW1vbmcgaGFybW9uaWVzIGFzIHRoZSBmbHV0ZSBhbW9uZwoJCQkJCWluc3RydW1lbnRz4oCUYm90aCBhcmUgdmlvbGVudGx5IGV4Y2l0aW5nIGFuZCBlbW90aW9uYWwuIDwvdHJhbnNsYXRpb24+"
translation['8.1342b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy45IiB1bml0PSJMb2ViIGNoYXAiIC8+VGhpcyBpcyBzaG93biBieSBwb2V0cnk7IGZvciBhbGwgQmFjY2hpYWMKCQkJCQl2ZXJzaWZpY2F0aW9uIGFuZCBhbGwgbW92ZW1lbnQgb2YgdGhhdCBzb3J0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yIHBlcmhhcHMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrLOsc66z4fOteG9t86xPC9mb3JlaWduPiBhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrhvbfOvc63z4POuc+CPC9mb3JlaWduPiBkZW5vdGUgYm9kaWx5IG1vdmVtZW50IGFjY29tcGFueWluZyB0aGUKCQkJCQkJc29uZzsgb3IgdGhleSBtYXkgZGVub3RlIHRoZSBlbW90aW9uYWwgZnJlbnp5IGV4cHJlc3NlZCBhbmQgc3RpbXVsYXRlZCBieQoJCQkJCQlpdC4gVGhlIGRpdGh5cmFtYiB3YXMgYSBmb3JtIG9mIHBvZXRyeSBvZiB0aGlzIGNsYXNzLCBvcmlnaW5hbGx5IGNlbGVicmF0aW5nCgkJCQkJCXRoZSBiaXJ0aCBvZiBEaW9ueXN1cy4gUGhpbG94ZW51cywgb25lIG9mIHRoZSBtb3N0IGZhbW91cyBkaXRoeXJhbWJpYyBwb2V0cywKCQkJCQkJCTxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii00MzUvLTM4MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItNDM1IiB0bz0iLTM4MCI+NDM1PC9kYXRlUmFuZ2U+LTM4MCBCLkMuLCBsaXZlZCBhdAoJCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMTM5MyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBhbmQgbGF0ZXIgYXQgdGhlIGNvdXJ0CgkJCQkJCW9mIERpb255c2l1cyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5cmFjdXNlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTeXJhY3VzZSI+U3lyYWN1c2U8L3BsYWNlTmFtZT4uPC9ub3RlPgoJCQkJCWJlbG9uZ3MgcGFydGljdWxhcmx5IHRvIHRoZSBmbHV0ZSBhbW9uZyB0aGUgaW5zdHJ1bWVudHMsIGFuZCB0aGVzZSBtZXRlcnMgZmluZAoJCQkJCXRoZWlyIHN1aXRhYmxlIGFjY29tcGFuaW1lbnQgaW4gdHVuZXMgaW4gdGhlIFBocnlnaWFuIG1vZGUgYW1vbmcgdGhlIGhhcm1vbmllczoKCQkJCQlmb3IgZXhhbXBsZSB0aGUgZGl0aHlyYW1iIGlzIGFkbWl0dGVkbHkgaGVsZCB0byBiZSBhIFBocnlnaWFuIG1ldGVyLCBhbmQgdGhlCgkJCQkJZXhwZXJ0cyBvbiB0aGlzIHN1YmplY3QgYWRkdWNlIG1hbnkgaW5zdGFuY2VzIHRvIHByb3ZlIHRoaXMsIHBhcnRpY3VsYXJseSB0aGUKCQkJCQlmYWN0IHRoYXQgUGhpbG94ZW51cyB3aGVuIGhlIGF0dGVtcHRlZCB0byBjb21wb3NlIGEgZGl0aHlyYW1iLCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Oss6xzrrPh8614b23zrE8L2ZvcmVpZ24+IGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuuG9t869zrfPg865z4I8L2ZvcmVpZ24+IGRlbm90ZSBib2RpbHkgbW92ZW1lbnQgYWNjb21wYW55aW5nIHRoZQoJCQkJCQlzb25nOyBvciB0aGV5IG1heSBkZW5vdGUgdGhlIGVtb3Rpb25hbCBmcmVuenkgZXhwcmVzc2VkIGFuZCBzdGltdWxhdGVkIGJ5CgkJCQkJCWl0LiBUaGUgZGl0aHlyYW1iIHdhcyBhIGZvcm0gb2YgcG9ldHJ5IG9mIHRoaXMgY2xhc3MsIG9yaWdpbmFsbHkgY2VsZWJyYXRpbmcKCQkJCQkJdGhlIGJpcnRoIG9mIERpb255c3VzLiBQaGlsb3hlbnVzLCBvbmUgb2YgdGhlIG1vc3QgZmFtb3VzIGRpdGh5cmFtYmljIHBvZXRzLAoJCQkJCQkJPGRhdGVSYW5nZSBhdXRobmFtZT0iLTQzNS8tMzgwIiBjbGFzcz0idHJhbnNsYXRpb24iIGZyb209Ii00MzUiIHRvPSItMzgwIj40MzU8L2RhdGVSYW5nZT4tMzgwIEIuQy4sIGxpdmVkIGF0CgkJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAxMzkzIj5BdGhlbnM8L3BsYWNlTmFtZT4sIGFuZCBsYXRlciBhdCB0aGUgY291cnQKCQkJCQkJb2YgRGlvbnlzaXVzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3lyYWN1c2UiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPi48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUKCQkJCQkJTXlzaWFuczwvdGl0bGU+LCBpbiB0aGUgRG9yaWFuIG1vZGUKCQkJCQl3YXMgdW5hYmxlIHRvIGRvIHNvLCBidXQgbWVyZWx5IGJ5IHRoZSBmb3JjZSBvZiBuYXR1cmUgZmVsbCBiYWNrIGFnYWluIGludG8gdGhlCgkJCQkJc3VpdGFibGUgaGFybW9ueSwgdGhlIFBocnlnaWFuLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz5BbmQKCQkJCQlhbGwgYWdyZWUgdGhhdCB0aGUgRG9yaWFuIG1vZGUgaXMgbW9yZQoJCQkJCXNlZGF0ZSBhbmQgb2YgYSBzcGVjaWFsbHkgbWFubHkgY2hhcmFjdGVyLiBNb3Jlb3ZlciBzaW5jZSB3ZSBwcmFpc2UgYW5kIHNheSB0aGF0CgkJCQkJd2Ugb3VnaHQgdG8gcHVyc3VlIHRoZSBtZWFuIGJldHdlZW4gZXh0cmVtZXMsIGFuZCB0aGUgRG9yaWFuIG1vZGUgaGFzIHRoaXMgbmF0dXJlIGluIHJlbGF0aW9uIHRvIHRoZQoJCQkJCW90aGVyIGhhcm1vbmllcywgaXQgaXMgY2xlYXIgdGhhdCBpdCBzdWl0cyB0aGUgeW91bmdlciBwdXBpbHMgdG8gYmUgZWR1Y2F0ZWQKCQkJCQlyYXRoZXIgaW4gdGhlIERvcmlhbiBtZWxvZGllcy4gQnV0CgkJCQkJdGhlcmUgYXJlIHR3byBvYmplY3RzIHRvIGFpbSBhdCwgdGhlIHBvc3NpYmxlIGFzIHdlbGwgYXMgdGhlIHN1aXRhYmxlOyBmb3Igd2UKCQkJCQlhcmUgYm91bmQgcmF0aGVyIHRvIGF0dGVtcHQgdGhlIHRoaW5ncyB0aGF0IGFyZSBwb3NzaWJsZSBhbmQgdGhvc2UgdGhhdCBhcmUKCQkJCQlzdWl0YWJsZSBmb3IgdGhlIHBhcnRpY3VsYXIgY2xhc3Mgb2YgcGVvcGxlIGNvbmNlcm5lZDs8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIGluIHRoZXNlIG1hdHRlcnMgYWxzbyB0aGVyZSBhcmUgZGl2aWRpbmcgbGluZXMKCQkJCQlkcmF3biBieSB0aGUgYWdlc+KAlGZvciBpbnN0YW5jZSwgdGhvc2Ugd2hvc2UgcG93ZXJzIGhhdmUgd2FuZWQgdGhyb3VnaAoJCQkJCWxhcHNlIG9mIHRpbWUgY2Fubm90IGVhc2lseSBzaW5nIHRoZSBoaWdobHkgc3RydW5nIGhhcm1vbmllcywgYnV0IHRvIHBlcnNvbnMgb2YKCQkJCQl0aGF0IGFnZSBuYXR1cmUgc3VnZ2VzdHMgdGhlIHJlbGF4ZWQgaGFybW9uaWVzLiA8L3RyYW5zbGF0aW9uPg=="
