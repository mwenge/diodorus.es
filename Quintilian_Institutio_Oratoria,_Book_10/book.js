var translations = [];
var translatedSection = null;
var current = 0;

function updateScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  console.log(page)

  var bookmarkedPageFieldName = book + "Page";
  var bookmarkedPage = localStorage.getItem(bookmarkedPageFieldName);
  if (bookmarkedPage == null) {
    localStorage.setItem(bookmarkedPageFieldName, page);
  }

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";

  var scrollPosition = localStorage.getItem(positionOnPage);
  if (scrollPosition == null) {
    scrollPosition = window.pageYOffset;
    localStorage.setItem(positionOnPage, scrollPosition);
    return;
  }

  if (bookmarkedPage == page) {
    window.scrollTo(0, scrollPosition)
    return;
  }
  window.location = bookmarkedPage;
}

function storeScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  localStorage.setItem(book + "Page", page);

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";
  scrollPosition = window.pageYOffset;
  localStorage.setItem(positionOnPage, scrollPosition);
}

function showNextOnHelper(evt) {
  current++;
  if (current > translations.length - 1) {
    current = 0;
  }
  var translation = translations[current];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = (current + 1) + "/" + translations.length;
    helper.appendChild(transCount);
  }
}

function updateHelper(evt, lineNumber, translationsForWord) {
  if (typeof updateHelper.currentWord === 'object') {
    updateHelper.currentWord.style.textDecoration = "none";
  }
  
  if (evt.target == updateHelper.currentWord) {
    displayTranslation(lineNumber);
    return;
  }

  evt.target.style.textDecoration = "underline red";
  updateHelper.currentWord = evt.target;

  if (typeof updateHelper.previousCommentBubble === 'object' 
      && updateHelper.previousCommentBubble != null) {
    updateHelper.previousCommentBubble.style.display = "none";
  }
  var commentBubble = document.getElementById("indicator-" + lineNumber);
  if (commentBubble != null) {
    commentBubble.style.display = "inline";
  }
  updateHelper.previousCommentBubble = commentBubble;

  showTitle(lineNumber);

  translations = translationsForWord;
  var translation = translations[0];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  helper.style.display = "block";

  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = "1/" + translations.length;
    helper.appendChild(transCount);
  }

  storeScrollPosition();
}

function showTitle(lineNumber) {
  lineNumber = lineNumber.replace(/\./g, '');
  var page = parseInt(parseInt(lineNumber, 10) / 100, 10);
  if (isNaN(page)) {
    return;
  }
  var result = page % 2;
  
  var titleToShow = titleElements[result];
  var innerHTML = "<span class=\"title\">" + titleToShow + "</span>";
  masthead.innerHTML = innerHTML;
}

function displayTranslation(refs) {
  if (translatedSection) {
    for (var i = 0; i < translatedSection.length; i++) {
        translatedSection[i].style.backgroundColor = "";
    }
  }
  translatedSection = null;
  for (var i = 0; i < refs.length; i++) {
    var ref = refs[i];
    translatedSection = document.getElementsByClassName(ref);
    if (translatedSection)
      break;
  }
  if (!translatedSection) {
    return;
  }
  if (!translation.hasOwnProperty(ref)) {
    return;
  }
  for (var i = 0; i < translatedSection.length; i++) {
      translatedSection[i].style.backgroundColor = "yellow";
  }
  parallel_translation.innerHTML = atobUTF8(translation[ref]);
  parallel_translation.style.display = "block";
}

function hideTranslation() {
  for (var i = 0; i < translatedSection.length; i++) {
      translatedSection[i].style.backgroundColor = "";
  }
  parallel_translation.style.display = "none";
}


function displayComment(line) {
  comment.innerHTML = atobUTF8(commentary[line]);
  comment.style.display = "block";
}

function hideComment() {
  comment.style.display = "none";
}

if ('serviceWorker' in navigator) {
  window.addEventListener('load', function() {
    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {
      // Registration was successful
      console.log('ServiceWorker registration successful with scope: ', registration.scope);
    }, function(err) {
      // registration failed :(
      console.log('ServiceWorker registration failed: ', err);
    });
  });
}

window.onload = updateScrollPosition;
var translation={}
translation['10.1'] = ""
translation['10.1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGVzZSBydWxlcyBvZiBzdHlsZSwgd2hpbGUgcGFydCBvZiB0aGUKc3R1ZGVudCdzIHRoZW9yZXRpY2FsIGtub3dsZWRnZSwgYXJlIG5vdCBpbiB0aGVtc2VsdmVzIHN1ZmZpY2llbnQgdG8gZ2l2ZSBoaW0gb3JhdG9yaWNhbCBwb3dlci4gSW4KYWRkaXRpb24gaGUgd2lsbCByZXF1aXJlIHRoYXQgYXNzdXJlZCBmYWNpbGl0eSB3aGljaAp0aGUgR3JlZWtzIGNhbGwgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+ZSgvY2lzPC9mb3JlaWduPiBJIGtub3cgdGhhdCBtYW55IGhhdmUgcmFpc2VkCnRoZSBxdWVzdGlvbiBhcyB0byB3aGV0aGVyIHRoaXMgaXMgYmVzdCBhY3F1aXJlZCBieQp3cml0aW5nLCByZWFkaW5nIG9yIHNwZWFraW5nLCBhbmQgaXQgd291bGQgaW5kZWVkCmJlIGEgcXVlc3Rpb24gY2FsbGluZyBmb3Igc2VyaW91cyBjb25zaWRlcmF0aW9uLCBpZiB3ZQpjb3VsZCByZXN0IGNvbnRlbnQgd2l0aCBhbnkgb25lIG9mIHRoZSB0aHJlZS48L3RyYW5zbGF0aW9uPg=="
translation['10.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQKdGhleSBhcmUgc28gaW50aW1hdGVseSBhbmQgaW5zZXBhcmFibHkgY29ubmVjdGVkLAp0aGF0IGlmIG9uZSBvZiB0aGVtIGJlIG5lZ2xlY3RlZCwgd2Ugc2hhbGwgYnV0IHdhc3RlCnRoZSBsYWJvdXIgd2hpY2ggd2UgaGF2ZSBkZXZvdGVkIHRvIHRoZSBvdGhlcnMuCkZvciBlbG9xdWVuY2Ugd2lsbCBuZXZlciBhdHRhaW4gdG8gaXRzIGZ1bGwgZGV2ZWxvcG1lbnQgb3Igcm9idXN0IGhlYWx0aCwgdW5sZXNzIGl0IGFjcXVpcmVzIHN0cmVuZ3RoCmJ5IGZyZXF1ZW50IHByYWN0aWNlIGluIHdyaXRpbmcsIHdoaWxlIHN1Y2ggcHJhY3RpY2UKd2l0aG91dCB0aGUgbW9kZWxzIHN1cHBsaWVkIGJ5IHJlYWRpbmcgd2lsbCBiZSBsaWtlCmEgc2hpcCBkcmlmdGluZyBhaW1sZXNzbHkgd2l0aG91dCBhIHN0ZWVyc21hbi4KQWdhaW4sIGhlIHdobyBrbm93cyB3aGF0IGhlIG91Z2h0IHRvIHNheSBhbmQKaG93IGhlIHNob3VsZCBzYXkgaXQsIHdpbGwgYmUgbGlrZSBhIG1pc2VyIGJyb29kaW5nCm92ZXIgaGlzIGhvYXJkZWQgdHJlYXN1cmUsIHVubGVzcyBoZSBoYXMgdGhlIHdlYXBvbnMKb2YgaGlzIGVsb3F1ZW5jZSByZWFkeSBmb3IgYmF0dGxlIGFuZCBwcmVwYXJlZCB0bwpkZWFsIHdpdGggZXZlcnkgZW1lcmdlbmN5LjwvdHJhbnNsYXRpb24+"
translation['10.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgdGhlIGRlZ3JlZSBpbgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNSIgLz4KCndoaWNoIGEgdGhpbmcgaXMgZXNzZW50aWFsIGRvZXMgbm90IG5lY2Vzc2FyaWx5IG1ha2UKaXQgb2YgaW1tZWRpYXRlIGFuZCBzdXByZW1lIGltcG9ydGFuY2UgZm9yIHRoZQpmb3JtYXRpb24gb2YgdGhlIGlkZWFsIG9yYXRvci4gRm9yIG9idmlvdXNseSB0aGUKcG93ZXIgb2Ygc3BlZWNoIGlzIHRoZSBmaXJzdCBlc3NlbnRpYWwsIHNpbmNlIHRoZXJlaW4KbGllcyB0aGUgcHJpbWFyeSB0YXNrIG9mIHRoZSBvcmF0b3IsIGFuZCBpdCBpcyBvYnZpb3VzCnRoYXQgaXQgd2FzIHdpdGggdGhpcyB0aGF0IHRoZSBhcnQgb2Ygb3JhdG9yeSBiZWdhbiwKYW5kIHRoYXQgdGhlIHBvd2VyIG9mIGltaXRhdGlvbiBjb21lcyBuZXh0LCBhbmQKdGhpcmQgYW5kIGxhc3QgZGlsaWdlbnQgcHJhY3RpY2UgaW4gd3JpdGluZy48L3RyYW5zbGF0aW9uPg=="
translation['10.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgYXMKcGVyZmVjdGlvbiBjYW5ub3QgYmUgYXR0YWluZWQgd2l0aG91dCBzdGFydGluZyBhdAp0aGUgdmVyeSBiZWdpbm5pbmcsIHRoZSBwb2ludHMgd2hpY2ggY29tZSBmaXJzdCBpbgp0aW1lIHdpbGwsIGFzIG91ciB0cmFpbmluZyBwcm9jZWVkcywgYmVjb21lIG9mIHF1aXRlCnRyaXZpYWwgaW1wb3J0YW5jZS4gTm93IHdlIGhhdmUgcmVhY2hlZCBhIHN0YWdlIGluCm91ciBlbnF1aXJ5IHdoZXJlIHdlIGFyZSBubyBsb25nZXIgY29uc2lkZXJpbmcgdGhlCnByZWxpbWluYXJ5IHRyYWluaW5nIG9mIG91ciBvcmF0b3I7IGZvciBJIHRoaW5rIHRoZQppbnN0cnVjdGlvbnMgYWxyZWFkeSBnaXZlbiBzaG91bGQgc3VmZmljZSBmb3IgdGhhdDsKdGhleSBhcmUgaW4gYW55IGNhc2UgYXMgZ29vZCBhcyBJIGNvdWxkIG1ha2UgdGhlbS4KT3VyIHByZXNlbnQgdGFzayBpcyB0byBjb25zaWRlciBob3cgb3VyIGF0aGxldGUgd2hvCmhhcyBsZWFybnQgYWxsIHRoZSB0ZWNobmlxdWUgb2YgaGlzIGFydCBmcm9tIGhpcwp0cmFpbmVyLCBpcyB0byBiZSBwcmVwYXJlZCBieSBhY3R1YWwgcHJhY3RpY2UgZm9yIHRoZQpjb250ZXN0cyBpbiB3aGljaCBoZSB3aWxsIGhhdmUgdG8gZW5nYWdlLiBDb25zZXF1ZW50bHksIHdlIG11c3QgYXNzdW1lIHRoYXQgb3VyIHN0dWRlbnQgaGFzCmxlYXJuZWQgaG93IHRvIGNvbmNlaXZlIGFuZCBkaXNwb3NlIGhpcyBzdWJqZWN0Cm1hdHRlciBhbmQgdW5kZXJzdGFuZHMgaG93IHRvIGNob29zZSBhbmQgYXJyYW5nZQpoaXMgd29yZHMsIGFuZCBtdXN0IHByb2NlZWQgdG8gaW5zdHJ1Y3QgaGltIGhvdyB0bwptYWtlIHRoZSBiZXN0IGFuZCByZWFkaWVzdCB1c2Ugb2YgdGhlIGtub3dsZWRnZQp3aGljaCBoZSBoYXMgYWNxdWlyZWQuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBjYW4gdGhlbiBiZSBubyBkb3VidCB0aGF0IGhlIG11c3QgYWNjdW11bGF0ZSBhIGNlcnRhaW4gc3RvcmUgb2YgcmVzb3VyY2VzLCB0byBiZSBlbXBsb3llZAp3aGVuZXZlciB0aGV5IG1heSBiZSByZXF1aXJlZC4gVGhlIHJlc291cmNlcyBvZgp3aGljaCBJIHNwZWFrIGNvbnNpc3QgaW4gYSBjb3Bpb3VzIHN1cHBseSBvZiB3b3JkcwphbmQgbWF0dGVyLjxtaWxlc3RvbmUgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHdoaWxlIHRoZSBtYXR0ZXIgaXMgbmVjZXNzYXJpbHkKZWl0aGVyIHBlY3VsaWFyIHRvIHRoZSBpbmRpdmlkdWFsIGNhc2UsIG9yIGF0IGJlc3QKY29tbW9uIHRvIG9ubHkgYSBmZXcsIHdvcmRzIG11c3QgYmUgYWNxdWlyZWQgdG8Kc3VpdCBhbGwgYW5kIGV2ZXJ5IGNhc2UuIE5vdywgaWYgdGhlcmUgd2VyZSBzcGVjaWFsCgo8cGIgaWQ9InAuNyIgLz4KCndvcmRzIGFkYXB0ZWQgdG8gZWFjaCBpbmRpdmlkdWFsIHRoaW5nLCB0aGV5IHdvdWxkCnJlcXVpcmUgbGVzcyBjYXJlLCBzaW5jZSB0aGV5IHdvdWxkIGF1dG9tYXRpY2FsbHkgYmUKc3VnZ2VzdGVkIGJ5IHRoZSBtYXR0ZXIgaW4gaGFuZC4gQnV0IHNpbmNlIHNvbWUKd29yZHMgYXJlIG1vcmUgbGl0ZXJhbCwgbW9yZSBvcm5hdGUsIG1vcmUgc2lnbmlmaWNhbnQKb3IgZXVwaG9uaW91cyB0aGFuIG90aGVycywgb3VyIG9yYXRvciBtdXN0IG5vdAptZXJlbHkgYmUgYWNxdWFpbnRlZCB3aXRoIGFsbCBvZiB0aGVtLCBidXQgbXVzdApoYXZlIHRoZW0gYXQgaGlzIGZpbmdlcnMnIGVuZHMgYW5kIGJlZm9yZSBoaXMgdmVyeQpleWVzLCBzbyB0aGF0IHdoZW4gdGhleSBwcmVzZW50IHRoZW1zZWx2ZXMgZm9yIGhpcwpjcml0aWNhbCBzZWxlY3Rpb24sIGhlIHdpbGwgZmluZCBpdCBlYXN5IHRvIG1ha2UgdGhlCmFwcHJvcHJpYXRlIGNob2ljZS48bWlsZXN0b25lIG49IjciIHVuaXQ9InNlY3Rpb24iIC8+IEkga25vdyB0aGF0IHNvbWUgc3BlYWtlcnMKbWFrZSBhIHByYWN0aWNlIG9mIGxlYXJuaW5nIGxpc3RzIG9mIHN5bm9ueW1zIGJ5CmhlYXJ0LCBpbiBvcmRlciB0aGF0IG9uZSB3b3JkIG91dCBvZiB0aGUgc2V2ZXJhbAphdmFpbGFibGUgbWF5IGF0IG9uY2UgcHJlc2VudCBpdHNlbGYgdG8gdGhlbSwgYW5kCnRoYXQgaWYsIGFmdGVyIHVzaW5nIG9uZSB3b3JkLCB0aGV5IGZpbmQgdGhhdCBpdCBpcwp3YW50ZWQgYWdhaW4gYWZ0ZXIgYSBicmllZiBpbnRlcnZhbCwgdGhleSBtYXkgYmUKYWJsZSB0byBzZWxlY3QgYW5vdGhlciB3b3JkIHdpdGggdGhlIHNhbWUgbWVhbmluZwphbmQgc28gYXZvaWQgdGhlIG5lY2Vzc2l0eSBvZiByZXBldGl0aW9uLiBCdXQgdGhpcwpwcmFjdGljZSBpcyBjaGlsZGlzaCBhbmQgaW52b2x2ZXMgdGhhbmtsZXNzIGxhYm91ciwKd2hpbGUgaXQgaXMgcmVhbGx5IG9mIHZlcnkgbGl0dGxlIHVzZSwgYXMgaXQgbWVyZWx5CnJlc3VsdHMgaW4gdGhlIGFzc2VtYmx5IG9mIGEgZGlzb3JkZXJseSBjcm93ZCBvZgp3b3JkcywgZm9yIHRoZSBzcGVha2VyIHRvIHNuYXRjaCB0aGUgZmlyc3QgdGhhdCBjb21lcwp0byBoYW5kLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIGNhbiB0aGVuIGJlIG5vIGRvdWJ0IHRoYXQgaGUgbXVzdCBhY2N1bXVsYXRlIGEgY2VydGFpbiBzdG9yZSBvZiByZXNvdXJjZXMsIHRvIGJlIGVtcGxveWVkCndoZW5ldmVyIHRoZXkgbWF5IGJlIHJlcXVpcmVkLiBUaGUgcmVzb3VyY2VzIG9mCndoaWNoIEkgc3BlYWsgY29uc2lzdCBpbiBhIGNvcGlvdXMgc3VwcGx5IG9mIHdvcmRzCmFuZCBtYXR0ZXIuPC90cmFuc2xhdGlvbj4="
translation['10.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgd2hpbGUgdGhlIG1hdHRlciBpcyBuZWNlc3NhcmlseQplaXRoZXIgcGVjdWxpYXIgdG8gdGhlIGluZGl2aWR1YWwgY2FzZSwgb3IgYXQgYmVzdApjb21tb24gdG8gb25seSBhIGZldywgd29yZHMgbXVzdCBiZSBhY3F1aXJlZCB0bwpzdWl0IGFsbCBhbmQgZXZlcnkgY2FzZS4gTm93LCBpZiB0aGVyZSB3ZXJlIHNwZWNpYWwKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjciIC8+Cgp3b3JkcyBhZGFwdGVkIHRvIGVhY2ggaW5kaXZpZHVhbCB0aGluZywgdGhleSB3b3VsZApyZXF1aXJlIGxlc3MgY2FyZSwgc2luY2UgdGhleSB3b3VsZCBhdXRvbWF0aWNhbGx5IGJlCnN1Z2dlc3RlZCBieSB0aGUgbWF0dGVyIGluIGhhbmQuIEJ1dCBzaW5jZSBzb21lCndvcmRzIGFyZSBtb3JlIGxpdGVyYWwsIG1vcmUgb3JuYXRlLCBtb3JlIHNpZ25pZmljYW50Cm9yIGV1cGhvbmlvdXMgdGhhbiBvdGhlcnMsIG91ciBvcmF0b3IgbXVzdCBub3QKbWVyZWx5IGJlIGFjcXVhaW50ZWQgd2l0aCBhbGwgb2YgdGhlbSwgYnV0IG11c3QKaGF2ZSB0aGVtIGF0IGhpcyBmaW5nZXJzJyBlbmRzIGFuZCBiZWZvcmUgaGlzIHZlcnkKZXllcywgc28gdGhhdCB3aGVuIHRoZXkgcHJlc2VudCB0aGVtc2VsdmVzIGZvciBoaXMKY3JpdGljYWwgc2VsZWN0aW9uLCBoZSB3aWxsIGZpbmQgaXQgZWFzeSB0byBtYWtlIHRoZQphcHByb3ByaWF0ZSBjaG9pY2UuPC90cmFuc2xhdGlvbj4="
translation['10.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBJIGtub3cgdGhhdCBzb21lIHNwZWFrZXJzCm1ha2UgYSBwcmFjdGljZSBvZiBsZWFybmluZyBsaXN0cyBvZiBzeW5vbnltcyBieQpoZWFydCwgaW4gb3JkZXIgdGhhdCBvbmUgd29yZCBvdXQgb2YgdGhlIHNldmVyYWwKYXZhaWxhYmxlIG1heSBhdCBvbmNlIHByZXNlbnQgaXRzZWxmIHRvIHRoZW0sIGFuZAp0aGF0IGlmLCBhZnRlciB1c2luZyBvbmUgd29yZCwgdGhleSBmaW5kIHRoYXQgaXQgaXMKd2FudGVkIGFnYWluIGFmdGVyIGEgYnJpZWYgaW50ZXJ2YWwsIHRoZXkgbWF5IGJlCmFibGUgdG8gc2VsZWN0IGFub3RoZXIgd29yZCB3aXRoIHRoZSBzYW1lIG1lYW5pbmcKYW5kIHNvIGF2b2lkIHRoZSBuZWNlc3NpdHkgb2YgcmVwZXRpdGlvbi4gQnV0IHRoaXMKcHJhY3RpY2UgaXMgY2hpbGRpc2ggYW5kIGludm9sdmVzIHRoYW5rbGVzcyBsYWJvdXIsCndoaWxlIGl0IGlzIHJlYWxseSBvZiB2ZXJ5IGxpdHRsZSB1c2UsIGFzIGl0IG1lcmVseQpyZXN1bHRzIGluIHRoZSBhc3NlbWJseSBvZiBhIGRpc29yZGVybHkgY3Jvd2Qgb2YKd29yZHMsIGZvciB0aGUgc3BlYWtlciB0byBzbmF0Y2ggdGhlIGZpcnN0IHRoYXQgY29tZXMKdG8gaGFuZC48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBjb250cmFyeSwgZGlzY3JpbWluYXRpb24gaXMgbmVjZXNzYXJ5IGluCnRoZSBhY3F1aXNpdGlvbiBvZiBvdXIgc3RvY2sgb2Ygd29yZHM7IGZvciB3ZSBhcmUKYWltaW5nIGF0IHRydWUgb3JhdG9yeSwgbm90IGF0IHRoZSBmbHVlbmN5IG9mIGEKY2hlYXBqYWNrLiBBbmQgd2Ugc2hhbGwgYXR0YWluIG91ciBhaW0gYnkgcmVhZGluZwphbmQgbGlzdGVuaW5nIHRvIHRoZSBiZXN0IHdyaXRlcnMgYW5kIG9yYXRvcnMsIHNpbmNlCndlIHNoYWxsIHRodXMgbGVhcm4gbm90IG1lcmVseSB0aGUgd29yZHMgYnkgd2hpY2gKdGhpbmdzIGFyZSB0byBiZSBjYWxsZWQsIGJ1dCB3aGVuIGVhY2ggcGFydGljdWxhcgp3b3JkIGlzIG1vc3QgYXBwcm9wcmlhdGUuPG1pbGVzdG9uZSBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgdGhlcmUgaXMgYSBwbGFjZSBpbgpvcmF0b3J5IGZvciBhbG1vc3QgZXZlcnkgd29yZCwgd2l0aCB0aGUgZXhjZXB0aW9uCm9ubHkgb2YgYSB2ZXJ5IGZldywgd2hpY2ggYXJlIG5vdCBzdWZmaWNpZW50bHkgc2VlbWx5LgpTdWNoIHdvcmRzIGFyZSBpbmRlZWQgb2Z0ZW4gcHJhaXNlZCB3aGVuIHRoZXkKb2NjdXIgaW4gd3JpdGVycyBvZiBpYW1iaWNzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgwqfCpyA1OSBhbmQgOTYuPC9ub3RlPiBvciBvZiB0aGUgb2xkIGNvbWVkeSwKCjxwYiBpZD0icC45IiAvPgoKYnV0IHdlIG5lZWQgZG8gbm8gbW9yZSB0aGFuIGNvbnNpZGVyIG91ciBvd24Kc3BlY2lhbCB0YXNrLiBBbGwgd29yZHMsIHdpdGggdGhlc2UgZXhjZXB0aW9ucywKbWF5IGJlIGFkbWlyYWJseSBlbXBsb3llZCBpbiBzb21lIHBsYWNlIG9yCm90aGVyLiBGb3Igc29tZXRpbWVzIHdlIHNoYWxsIGV2ZW4gcmVxdWlyZSBsb3cKYW5kIGNvbW1vbiB3b3Jkcywgd2hpbGUgdGhvc2Ugd2hpY2ggd291bGQKc2VlbSBjb2Fyc2UgaWYgaW50cm9kdWNlZCBpbiB0aGUgbW9yZSBlbGVnYW50CnBvcnRpb25zIG9mIG91ciBzcGVlY2ggbWF5LCB1bmRlciBjZXJ0YWluIGNpcmN1bXN0YW5jZXMsIGJlIGFwcHJvcHJpYXRlIGVub3VnaC48bWlsZXN0b25lIG49IjEwIiB1bml0PSJzZWN0aW9uIiAvPiBOb3cgdG8gYWNxdWlyZSBhCmtub3dsZWRnZSBvZiB0aGVzZSB3b3JkcyBhbmQgdG8gYmUgYWNxdWFpbnRlZCBub3QKbWVyZWx5IHdpdGggdGhlaXIgbWVhbmluZywgYnV0IHdpdGggdGhlaXIgZm9ybXMgYW5kCnJoeXRobWljYWwgdmFsdWVzLCBzbyB0aGF0IHRoZXkgbWF5IHNlZW0gYXBwcm9wcmlhdGUKd2hlcmV2ZXIgZW1wbG95ZWQsIHdlIHNoYWxsIG5lZWQgdG8gcmVhZCBhbmQgbGlzdGVuCmRpbGlnZW50bHksIHNpbmNlIGFsbCBsYW5ndWFnZSBpcyByZWNlaXZlZCBmaXJzdCB0aHJvdWdoCnRoZSBlYXIuIEl0IHdhcyBvd2luZyB0byB0aGlzIGZhY3QgdGhhdCB0aGUgY2hpbGRyZW4Kd2hvLCBieSBvcmRlciBvZiBhIGtpbmcsIHdlcmUgYnJvdWdodCB1cCBieSBhIGR1bWIKbnVyc2UgaW4gYSBkZXNlcnQgcGxhY2UsIGFsdGhvdWdoIHRoZXkgYXJlIHNhaWQgdG8KaGF2ZSB1dHRlcmVkIGNlcnRhaW4gd29yZHMsIGxhY2tlZCB0aGUgcG93ZXIgb2YKc3BlZWNoLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIEhlcm9kb3QuIGlpLiAyLiBUaGUgY2hpbGRyZW4gd2VyZSBhbGxlZ2VkIHRvIGhhdmUKY3JpZWQgPHF1b3RlPmJla29zLDwvcXVvdGU+IFBocnlnaWFuIGZvciBicmVhZC48L25vdGU+PG1pbGVzdG9uZSBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmUgYXJlLCBob3dldmVyLCBzb21lIHdvcmRzIG9mIHN1Y2gKYSBuYXR1cmUgdGhhdCB0aGV5IGV4cHJlc3MgdGhlIHNhbWUgc2Vuc2UgYnkKZGlmZmVyZW50IHNvdW5kcywgc28gdGhhdCBpdCBtYWtlcyBubyBkaWZmZXJlbmNlIHRvCnRoZSBtZWFuaW5nIHdoaWNoIHdlIHVzZSwgYXMsIGZvciBpbnN0YW5jZSwgPGhpIHJlbmQ9Iml0YWxpY3MiPmdsYWRpdXM8L2hpPgphbmQgPGhpIHJlbmQ9Iml0YWxpY3MiPmVuc2lzLDwvaGk+IHdoaWNoIG1heSBiZSB1c2VkIGluZGlmZmVyZW50bHkgd2hlbiB3ZQpoYXZlIHRvIHNwZWFrIG9mIGEgc3dvcmQuIE90aGVycywgYWdhaW4sIGFsdGhvdWdoCnByb3Blcmx5IGFwcGxpZWQgdG8gc3BlY2lmaWMgb2JqZWN0cywgYXJlIHVzZWQgYnkKbWVhbnMgb2YgYSA8aGkgcmVuZD0iaXRhbGljcyI+dHJvcGU8L2hpPiB0byBleHByZXNzIHRoZSBzYW1lIHNlbnNlLCBhcywgZm9yCmV4YW1wbGUsIDxoaSByZW5kPSJpdGFsaWNzIj5mZXJydW08L2hpPiAoc3RlZWwpIGFuZCBtdXJvIChwb2ludCksIHdoaWNoIGFyZQpib3RoIHVzZWQgaW4gdGhlIHNlbnNlIG9mIHN3b3JkLjxtaWxlc3RvbmUgbj0iMTIiIHVuaXQ9InNlY3Rpb24iIC8+IFRodXMsIGJ5IHRoZQo8aGkgcmVuZD0iaXRhbGljcyI+ZmlndXJlPC9oaT4ga25vd24gYXMgPGhpIHJlbmQ9Iml0YWxpY3MiPmFidXNlLDwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5vciA8aGkgcmVuZD0iaXRhbGljcyI+Y2F0YWNocmVzaXMuPC9oaT4gU2VlIHZpaWkuIGlpLiA1IGFuZCB2aS4gMzQuPC9ub3RlPiB3ZSBjYWxsIGFsbCB0aG9zZSB3aG8gY29tbWl0CmEgbXVyZGVyIHdpdGggYW55IHdlYXBvbiB3aGF0c29ldmVyIDxoaSByZW5kPSJpdGFsaWNzIj5zaWNhcmlpPC9oaT4gKHBvbmlhcmRlcnMpLiBJbiBvdGhlciBjYXNlcyB3ZSBleHByZXNzIG91ciBtZWFuaW5nCnBlcmlwaHJhc3RpY2FsbHksIGFzLCBmb3IgaW5zdGFuY2UsIHdoZW4gVmlyZ2lsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+RWNsLiBpLjwvaGk+IDgxLjwvbm90ZT4KZGVzY3JpYmVzIGNoZWVzZSBhcwoKPHF1b3RlIHJlbmQ9ImJsb2NrcXVvdGUiPgo8bD48cXVvdGU+QWJ1bmRhbmNlIG9mIHByZXNzZWQgbWlsay48L3F1b3RlPjwvbD48L3F1b3RlPgoKPHBiIGlkPSJwLjExIiAvPgoKT24gdGhlIG90aGVyIGhhbmQsIGluIGEgbnVtYmVyIG9mIGluc3RhbmNlcyB3ZQplbXBsb3kgPGhpIHJlbmQ9Iml0YWxpY3MiPmZpZ3VyZXM8L2hpPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIGkuIHZpaWkuIDE2OyBpeC4gaS4gMTEuPC9ub3RlPiBhbmQgc3Vic3RpdHV0ZSBvbmUgZXhwcmVzc2lvbiBmb3IKYW5vdGhlci4gSW5zdGVhZCBvZiA8cXVvdGU+SSBrbm93LDwvcXVvdGU+IHdlIHNheSA8cXVvdGU+SSBhbSBub3QKaWdub3JhbnQsPC9xdW90ZT4gb3IgPHF1b3RlPnRoZSBmYWN0IGRvZXMgbm90IGVzY2FwZSBtZSw8L3F1b3RlPiBvciA8cXVvdGU+SQpoYXZlIG5vdCBmb3Jnb3R0ZW4sPC9xdW90ZT4gb3IgPHF1b3RlPndobyBkb2VzIG5vdCBrbm93PzwvcXVvdGU+IG9yCjxxdW90ZT5pdCBjYW4gYmUgZG91YnRlZCBieSBub25lLjwvcXVvdGU+PG1pbGVzdG9uZSBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHdlIG1heSBhbHNvCmJvcnJvdyBmcm9tIGEgd29yZCBvZiBjb2duYXRlIG1lYW5pbmcuIEZvciA8cXVvdGU+SQp1bmRlcnN0YW5kLDwvcXVvdGU+IG9yIDxxdW90ZT5JIGZlZWw8L3F1b3RlPiBvciA8cXVvdGU+SSBzZWU8L3F1b3RlPiBhcmUgb2Z0ZW4KZXF1aXZhbGVudCB0byA8cXVvdGU+SSBrbm93LjwvcXVvdGU+IFJlYWRpbmcgd2lsbCBwcm92aWRlIHVzCndpdGggYSByaWNoIHN0b3JlIG9mIGV4cHJlc3Npb25zIHN1Y2ggYXMgdGhlc2UsCmFuZCB3aWxsIGVuYWJsZSB1cyBub3QgbWVyZWx5IHRvIHVzZSB0aGVtIHdoZW4KdGhleSBvY2N1ciB0byB1cywgYnV0IGFsc28gaW4gdGhlIGFwcHJvcHJpYXRlIG1hbm5lci4KRm9yIHRoZXkgYXJlIG5vdCBhbHdheXMgaW50ZXJjaGFuZ2VhYmxlOjxtaWxlc3RvbmUgbj0iMTQiIHVuaXQ9InNlY3Rpb24iIC8+IGZvcgpleGFtcGxlLCB0aG91Z2ggSSBtYXkgYmUgcGVyZmVjdGx5IGNvcnJlY3QgaW4Kc2F5aW5nLCA8cXVvdGU+SSBzZWU8L3F1b3RlPiBmb3IgPHF1b3RlPkkgdW5kZXJzdGFuZCw8L3F1b3RlPiBpdCBkb2VzIG5vdApmb2xsb3cgdGhhdCBJIGNhbiBzYXkgPHF1b3RlPkkgdW5kZXJzdGFuZDwvcXVvdGU+IGZvciA8cXVvdGU+bXkgZXllcwpoYXZlIHNlZW4sPC9xdW90ZT4gYW5kIHRob3VnaCA8aGkgcmVuZD0iaXRhbGljcyI+bXVjcm88L2hpPiBtYXkgYmUgZW1wbG95ZWQgdG8KZGVzY3JpYmUgYSBzd29yZCwgYSBzd29yZCBkb2VzIG5vdCBuZWNlc3NhcmlseSBtZWFuCnRoZSBzYW1lIGFzIDxoaSByZW5kPSJpdGFsaWNzIj5tdWNybzwvaGk+IChwb2ludCkuPG1pbGVzdG9uZSBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0LCBhbHRob3VnaCBhIHN0b3JlCm9mIHdvcmRzIG1heSBiZSBhY3F1aXJlZCBieSB0aGVzZSBtZWFucywgd2UgbXVzdApub3QgcmVhZCBvciBsaXN0ZW4gdG8gb3JhdG9ycyBtZXJlbHkgZm9yIHRoZSBzYWtlIG9mCmFjcXVpcmluZyB3b3Jkcy4gRm9yIGluIGV2ZXJ5dGhpbmcgd2hpY2ggd2UgdGVhY2gKZXhhbXBsZXMgYXJlIG1vcmUgZWZmZWN0aXZlIGV2ZW4gdGhhbiB0aGUgcnVsZXMKd2hpY2ggYXJlIHRhdWdodCBpbiB0aGUgc2Nob29scywgc28gbG9uZyBhcyB0aGUKc3R1ZGVudCBoYXMgcmVhY2hlZCBhIHN0YWdlIHdoZW4gaGUgY2FuIGFwcHJlY2lhdGUKc3VjaCBleGFtcGxlcyB3aXRob3V0IHRoZSBhc3Npc3RhbmNlIG9mIGEgdGVhY2hlciwKYW5kIGNhbiByZWx5IG9uIGhpcyBvd24gcG93ZXJzIHRvIGltaXRhdGUgdGhlbS4KQW5kIHRoZSByZWFzb24gaXMgdGhpcywgdGhhdCB0aGUgcHJvZmVzc29yIG9mIHJoZXRvcmljCmxheXMgZG93biBydWxlcywgd2hpbGUgdGhlIG9yYXRvciBnaXZlcyBhIHByYWN0aWNhbApkZW1vbnN0cmF0aW9uLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBjb250cmFyeSwgZGlzY3JpbWluYXRpb24gaXMgbmVjZXNzYXJ5IGluCnRoZSBhY3F1aXNpdGlvbiBvZiBvdXIgc3RvY2sgb2Ygd29yZHM7IGZvciB3ZSBhcmUKYWltaW5nIGF0IHRydWUgb3JhdG9yeSwgbm90IGF0IHRoZSBmbHVlbmN5IG9mIGEKY2hlYXBqYWNrLiBBbmQgd2Ugc2hhbGwgYXR0YWluIG91ciBhaW0gYnkgcmVhZGluZwphbmQgbGlzdGVuaW5nIHRvIHRoZSBiZXN0IHdyaXRlcnMgYW5kIG9yYXRvcnMsIHNpbmNlCndlIHNoYWxsIHRodXMgbGVhcm4gbm90IG1lcmVseSB0aGUgd29yZHMgYnkgd2hpY2gKdGhpbmdzIGFyZSB0byBiZSBjYWxsZWQsIGJ1dCB3aGVuIGVhY2ggcGFydGljdWxhcgp3b3JkIGlzIG1vc3QgYXBwcm9wcmlhdGUuPC90cmFuc2xhdGlvbj4="
translation['10.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgdGhlcmUgaXMgYSBwbGFjZSBpbgpvcmF0b3J5IGZvciBhbG1vc3QgZXZlcnkgd29yZCwgd2l0aCB0aGUgZXhjZXB0aW9uCm9ubHkgb2YgYSB2ZXJ5IGZldywgd2hpY2ggYXJlIG5vdCBzdWZmaWNpZW50bHkgc2VlbWx5LgpTdWNoIHdvcmRzIGFyZSBpbmRlZWQgb2Z0ZW4gcHJhaXNlZCB3aGVuIHRoZXkKb2NjdXIgaW4gd3JpdGVycyBvZiBpYW1iaWNzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSDCp8KnIDU5IGFuZCA5Ni48L25vdGU+IG9yIG9mIHRoZSBvbGQgY29tZWR5LAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuOSIgLz4KCmJ1dCB3ZSBuZWVkIGRvIG5vIG1vcmUgdGhhbiBjb25zaWRlciBvdXIgb3duCnNwZWNpYWwgdGFzay4gQWxsIHdvcmRzLCB3aXRoIHRoZXNlIGV4Y2VwdGlvbnMsCm1heSBiZSBhZG1pcmFibHkgZW1wbG95ZWQgaW4gc29tZSBwbGFjZSBvcgpvdGhlci4gRm9yIHNvbWV0aW1lcyB3ZSBzaGFsbCBldmVuIHJlcXVpcmUgbG93CmFuZCBjb21tb24gd29yZHMsIHdoaWxlIHRob3NlIHdoaWNoIHdvdWxkCnNlZW0gY29hcnNlIGlmIGludHJvZHVjZWQgaW4gdGhlIG1vcmUgZWxlZ2FudApwb3J0aW9ucyBvZiBvdXIgc3BlZWNoIG1heSwgdW5kZXIgY2VydGFpbiBjaXJjdW1zdGFuY2VzLCBiZSBhcHByb3ByaWF0ZSBlbm91Z2guPC90cmFuc2xhdGlvbj4="
translation['10.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz4gTm93IHRvIGFjcXVpcmUgYQprbm93bGVkZ2Ugb2YgdGhlc2Ugd29yZHMgYW5kIHRvIGJlIGFjcXVhaW50ZWQgbm90Cm1lcmVseSB3aXRoIHRoZWlyIG1lYW5pbmcsIGJ1dCB3aXRoIHRoZWlyIGZvcm1zIGFuZApyaHl0aG1pY2FsIHZhbHVlcywgc28gdGhhdCB0aGV5IG1heSBzZWVtIGFwcHJvcHJpYXRlCndoZXJldmVyIGVtcGxveWVkLCB3ZSBzaGFsbCBuZWVkIHRvIHJlYWQgYW5kIGxpc3RlbgpkaWxpZ2VudGx5LCBzaW5jZSBhbGwgbGFuZ3VhZ2UgaXMgcmVjZWl2ZWQgZmlyc3QgdGhyb3VnaAp0aGUgZWFyLiBJdCB3YXMgb3dpbmcgdG8gdGhpcyBmYWN0IHRoYXQgdGhlIGNoaWxkcmVuCndobywgYnkgb3JkZXIgb2YgYSBraW5nLCB3ZXJlIGJyb3VnaHQgdXAgYnkgYSBkdW1iCm51cnNlIGluIGEgZGVzZXJ0IHBsYWNlLCBhbHRob3VnaCB0aGV5IGFyZSBzYWlkIHRvCmhhdmUgdXR0ZXJlZCBjZXJ0YWluIHdvcmRzLCBsYWNrZWQgdGhlIHBvd2VyIG9mCnNwZWVjaC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIEhlcm9kb3QuIGlpLiAyLiBUaGUgY2hpbGRyZW4gd2VyZSBhbGxlZ2VkIHRvIGhhdmUKY3JpZWQgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+YmVrb3MsPC9xdW90ZT4gUGhyeWdpYW4gZm9yIGJyZWFkLjwvbm90ZT48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5iZWtvcyw8L3F1b3RlPiBQaHJ5Z2lhbiBmb3IgYnJlYWQuPC90cmFuc2xhdGlvbj4="
translation['10.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmUgYXJlLCBob3dldmVyLCBzb21lIHdvcmRzIG9mIHN1Y2gKYSBuYXR1cmUgdGhhdCB0aGV5IGV4cHJlc3MgdGhlIHNhbWUgc2Vuc2UgYnkKZGlmZmVyZW50IHNvdW5kcywgc28gdGhhdCBpdCBtYWtlcyBubyBkaWZmZXJlbmNlIHRvCnRoZSBtZWFuaW5nIHdoaWNoIHdlIHVzZSwgYXMsIGZvciBpbnN0YW5jZSwgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Z2xhZGl1czwvaGk+CmFuZCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5lbnNpcyw8L2hpPiB3aGljaCBtYXkgYmUgdXNlZCBpbmRpZmZlcmVudGx5IHdoZW4gd2UKaGF2ZSB0byBzcGVhayBvZiBhIHN3b3JkLiBPdGhlcnMsIGFnYWluLCBhbHRob3VnaApwcm9wZXJseSBhcHBsaWVkIHRvIHNwZWNpZmljIG9iamVjdHMsIGFyZSB1c2VkIGJ5Cm1lYW5zIG9mIGEgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+dHJvcGU8L2hpPiB0byBleHByZXNzIHRoZSBzYW1lIHNlbnNlLCBhcywgZm9yCmV4YW1wbGUsIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmZlcnJ1bTwvaGk+IChzdGVlbCkgYW5kIG11cm8gKHBvaW50KSwgd2hpY2ggYXJlCmJvdGggdXNlZCBpbiB0aGUgc2Vuc2Ugb2Ygc3dvcmQuPC90cmFuc2xhdGlvbj4="
translation['10.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gVGh1cywgYnkgdGhlCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmZpZ3VyZTwvaGk+IGtub3duIGFzIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmFidXNlLDwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPm9yIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNhdGFjaHJlc2lzLjwvaGk+IFNlZSB2aWlpLiBpaS4gNSBhbmQgdmkuIDM0Ljwvbm90ZT4gd2UgY2FsbCBhbGwgdGhvc2Ugd2hvIGNvbW1pdAphIG11cmRlciB3aXRoIGFueSB3ZWFwb24gd2hhdHNvZXZlciA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jYXRhY2hyZXNpcy48L2hpPiBTZWUgdmlpaS4gaWkuIDUgYW5kIHZpLiAzNC48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zaWNhcmlpPC9oaT4gKHBvbmlhcmRlcnMpLiBJbiBvdGhlciBjYXNlcyB3ZSBleHByZXNzIG91ciBtZWFuaW5nCnBlcmlwaHJhc3RpY2FsbHksIGFzLCBmb3IgaW5zdGFuY2UsIHdoZW4gVmlyZ2lsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkVjbC4gaS48L2hpPiA4MS48L25vdGU+CmRlc2NyaWJlcyBjaGVlc2UgYXMKCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkVjbC4gaS48L2hpPiA4MS48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJibG9ja3F1b3RlIj4KPGwgY2xhc3M9InRyYW5zbGF0aW9uIj48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BYnVuZGFuY2Ugb2YgcHJlc3NlZCBtaWxrLjwvcXVvdGU+PC9sPjwvcXVvdGU+Cgo8bCBjbGFzcz0idHJhbnNsYXRpb24iPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkFidW5kYW5jZSBvZiBwcmVzc2VkIG1pbGsuPC9xdW90ZT48L2w+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QWJ1bmRhbmNlIG9mIHByZXNzZWQgbWlsay48L3F1b3RlPjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjExIiAvPgoKT24gdGhlIG90aGVyIGhhbmQsIGluIGEgbnVtYmVyIG9mIGluc3RhbmNlcyB3ZQplbXBsb3kgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZmlndXJlczwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBpLiB2aWlpLiAxNjsgaXguIGkuIDExLjwvbm90ZT4gYW5kIHN1YnN0aXR1dGUgb25lIGV4cHJlc3Npb24gZm9yCmFub3RoZXIuIEluc3RlYWQgb2YgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBrbm93LDwvcXVvdGU+IHdlIHNheSA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGFtIG5vdAppZ25vcmFudCw8L3F1b3RlPiBvciA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj50aGUgZmFjdCBkb2VzIG5vdCBlc2NhcGUgbWUsPC9xdW90ZT4gb3IgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SQpoYXZlIG5vdCBmb3Jnb3R0ZW4sPC9xdW90ZT4gb3IgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+d2hvIGRvZXMgbm90IGtub3c/PC9xdW90ZT4gb3IKPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+aXQgY2FuIGJlIGRvdWJ0ZWQgYnkgbm9uZS48L3F1b3RlPjwvdHJhbnNsYXRpb24+"
translation['10.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHdlIG1heSBhbHNvCmJvcnJvdyBmcm9tIGEgd29yZCBvZiBjb2duYXRlIG1lYW5pbmcuIEZvciA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5JCnVuZGVyc3RhbmQsPC9xdW90ZT4gb3IgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBmZWVsPC9xdW90ZT4gb3IgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBzZWU8L3F1b3RlPiBhcmUgb2Z0ZW4KZXF1aXZhbGVudCB0byA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGtub3cuPC9xdW90ZT4gUmVhZGluZyB3aWxsIHByb3ZpZGUgdXMKd2l0aCBhIHJpY2ggc3RvcmUgb2YgZXhwcmVzc2lvbnMgc3VjaCBhcyB0aGVzZSwKYW5kIHdpbGwgZW5hYmxlIHVzIG5vdCBtZXJlbHkgdG8gdXNlIHRoZW0gd2hlbgp0aGV5IG9jY3VyIHRvIHVzLCBidXQgYWxzbyBpbiB0aGUgYXBwcm9wcmlhdGUgbWFubmVyLgpGb3IgdGhleSBhcmUgbm90IGFsd2F5cyBpbnRlcmNoYW5nZWFibGU6PC90cmFuc2xhdGlvbj4="
translation['10.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz4gZm9yCmV4YW1wbGUsIHRob3VnaCBJIG1heSBiZSBwZXJmZWN0bHkgY29ycmVjdCBpbgpzYXlpbmcsIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkkgc2VlPC9xdW90ZT4gZm9yIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkkgdW5kZXJzdGFuZCw8L3F1b3RlPiBpdCBkb2VzIG5vdApmb2xsb3cgdGhhdCBJIGNhbiBzYXkgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB1bmRlcnN0YW5kPC9xdW90ZT4gZm9yIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPm15IGV5ZXMKaGF2ZSBzZWVuLDwvcXVvdGU+IGFuZCB0aG91Z2ggPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+bXVjcm88L2hpPiBtYXkgYmUgZW1wbG95ZWQgdG8KZGVzY3JpYmUgYSBzd29yZCwgYSBzd29yZCBkb2VzIG5vdCBuZWNlc3NhcmlseSBtZWFuCnRoZSBzYW1lIGFzIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPm11Y3JvPC9oaT4gKHBvaW50KS48L3RyYW5zbGF0aW9uPg=="
translation['10.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0LCBhbHRob3VnaCBhIHN0b3JlCm9mIHdvcmRzIG1heSBiZSBhY3F1aXJlZCBieSB0aGVzZSBtZWFucywgd2UgbXVzdApub3QgcmVhZCBvciBsaXN0ZW4gdG8gb3JhdG9ycyBtZXJlbHkgZm9yIHRoZSBzYWtlIG9mCmFjcXVpcmluZyB3b3Jkcy4gRm9yIGluIGV2ZXJ5dGhpbmcgd2hpY2ggd2UgdGVhY2gKZXhhbXBsZXMgYXJlIG1vcmUgZWZmZWN0aXZlIGV2ZW4gdGhhbiB0aGUgcnVsZXMKd2hpY2ggYXJlIHRhdWdodCBpbiB0aGUgc2Nob29scywgc28gbG9uZyBhcyB0aGUKc3R1ZGVudCBoYXMgcmVhY2hlZCBhIHN0YWdlIHdoZW4gaGUgY2FuIGFwcHJlY2lhdGUKc3VjaCBleGFtcGxlcyB3aXRob3V0IHRoZSBhc3Npc3RhbmNlIG9mIGEgdGVhY2hlciwKYW5kIGNhbiByZWx5IG9uIGhpcyBvd24gcG93ZXJzIHRvIGltaXRhdGUgdGhlbS4KQW5kIHRoZSByZWFzb24gaXMgdGhpcywgdGhhdCB0aGUgcHJvZmVzc29yIG9mIHJoZXRvcmljCmxheXMgZG93biBydWxlcywgd2hpbGUgdGhlIG9yYXRvciBnaXZlcyBhIHByYWN0aWNhbApkZW1vbnN0cmF0aW9uLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE2IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGUgYWR2YW50YWdlcyBjb25mZXJyZWQgYnkgcmVhZGluZyBhbmQKbGlzdGVuaW5nIGFyZSBub3QgaWRlbnRpY2FsLiBUaGUgc3BlYWtlciBzdGltdWxhdGVzCnVzIGJ5IHRoZSBhbmltYXRpb24gb2YgaGlzIGRlbGl2ZXJ5LCBhbmQga2luZGxlcyB0aGUKaW1hZ2luYXRpb24sIG5vdCBieSBwcmVzZW50aW5nIHVzIHdpdGggYW4gZWxhYm9yYXRlCgo8cGIgaWQ9InAuMTMiIC8+CgpwaWN0dXJlLCBidXQgYnkgYnJpbmdpbmcgdXMgaW50byBhY3R1YWwgdG91Y2ggd2l0aAp0aGUgdGhpbmdzIHRoZW1zZWx2ZXMuIFRoZW4gYWxsIGlzIGxpZmUgYW5kIG1vdmVtZW50LCBhbmQgd2UgcmVjZWl2ZSB0aGUgbmV3LWJvcm4gb2Zmc3ByaW5nIG9mIGhpcwppbWFnaW5hdGlvbiB3aXRoIGVudGh1c2lhc3RpYyBhcHByb3ZhbC4gV2UgYXJlCm1vdmVkIG5vdCBtZXJlbHkgYnkgdGhlIGFjdHVhbCBpc3N1ZSBvZiB0aGUgdHJpYWwsCmJ1dCBieSBhbGwgdGhhdCB0aGUgb3JhdG9yIGhpbXNlbGYgaGFzIGF0IHN0YWtlLjxtaWxlc3RvbmUgbj0iMTciIHVuaXQ9InNlY3Rpb24iIC8+IE1vcmVvdmVyIGhpcyB2b2ljZSwgdGhlIGdyYWNlIG9mIGhpcyBnZXN0dXJlcywgdGhlIGFkYXB0YXRpb24gb2YgaGlzIGRlbGl2ZXJ5ICh3aGljaCBpcyBvZiBzdXByZW1lIGltcG9ydGFuY2UKaW4gb3JhdG9yeSksIGFuZCwgaW4gYSB3b3JkLCBhbGwgaGlzIGV4Y2VsbGVuY2VzIGluCmNvbWJpbmF0aW9uLCBoYXZlIHRoZWlyIGVkdWNhdGl2ZSBlZmZlY3QuIEluIHJlYWRpbmcsCm9uIHRoZSBvdGhlciBoYW5kLCB0aGUgY3JpdGljYWwgZmFjdWx0eSBpcyBhIHN1cmVyCmd1aWRlLCBpbmFzbXVjaCBhcyB0aGUgbGlzdGVuZXIncyBqdWRnbWVudCBpcyBvZnRlbgpzd2VwdCBhd2F5IGJ5IGhpcyBwcmVmZXJlbmNlIGZvciBhIHBhcnRpY3VsYXIgc3BlYWtlciwKb3IgYnkgdGhlIGFwcGxhdXNlIG9mIGFuIGVudGh1c2lhc3RpYyBhdWRpZW5jZS48bWlsZXN0b25lIG49IjE4IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IKd2UgYXJlIGFzaGFtZWQgdG8gZGlzYWdyZWUgd2l0aCB0aGVtLCBhbmQgYW4gdW5jb25zY2lvdXMgbW9kZXN0eSBwcmV2ZW50cyB1cyBmcm9tIHJhbmtpbmcgb3VyIG93bgpvcGluaW9uIGFib3ZlIHRoZWlycywgdGhvdWdoIGFsbCB0aGUgdGltZSB0aGUgdGFzdGUKb2YgdGhlIG1ham9yaXR5IGlzIHZpY2lvdXMsIGFuZCB0aGUgPGhpIHJlbmQ9Iml0YWxpY3MiPmNsYXF1ZTwvaGk+IG1heQpwcmFpc2UgZXZlbiB3aGF0IGRvZXMgbm90IHJlYWxseSBkZXNlcnZlIGFwcHJvdmFsLgo8bWlsZXN0b25lIG49IjE5IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBvdGhlciBoYW5kLCBpdCB3aWxsIHNvbWV0aW1lcyBhbHNvIGhhcHBlbgp0aGF0IGFuIGF1ZGllbmNlIHdob3NlIHRhc3RlIGlzIGJhZCB3aWxsIGZhaWwgdG8gYXdhcmQKdGhlIHByYWlzZSB3aGljaCBpcyBkdWUgdG8gdGhlIG1vc3QgYWRtaXJhYmxlIHV0dGVyYW5jZXMuIFJlYWRpbmcsIGhvd2V2ZXIsIGlzIGZyZWUsIGFuZCBkb2VzIG5vdCBodXJyeQpwYXN0IHVzIHdpdGggdGhlIHNwZWVkIG9mIG9yYWwgZGVsaXZlcnk7IHdlIGNhbiByZXJlYWQgYSBwYXNzYWdlIGFnYWluIGFuZCBhZ2FpbiBpZiB3ZSBhcmUgaW4gZG91YnQKYWJvdXQgaXQgb3Igd2lzaCB0byBmaXggaXQgaW4gdGhlIG1lbW9yeS4gV2UgbXVzdApyZXR1cm4gdG8gd2hhdCB3ZSBoYXZlIHJlYWQgYW5kIHJlY29uc2lkZXIgaXQgd2l0aApjYXJlLCB3aGlsZSwganVzdCBhcyB3ZSBkbyBub3Qgc3dhbGxvdyBvdXIgZm9vZCB0aWxsCndlIGhhdmUgY2hld2VkIGl0IGFuZCByZWR1Y2VkIGl0IGFsbW9zdCB0byBhIHN0YXRlCm9mIGxpcXVlZmFjdGlvbiB0byBhc3Npc3QgdGhlIHByb2Nlc3Mgb2YgZGlnZXN0aW9uLCBzbwp3aGF0IHdlIHJlYWQgbXVzdCBub3QgYmUgY29tbWl0dGVkIHRvIHRoZSBtZW1vcnkKZm9yIHN1YnNlcXVlbnQgaW1pdGF0aW9uIHdoaWxlIGl0IGlzIHN0aWxsIGluIGEgY3J1ZGUKc3RhdGUsIGJ1dCBtdXN0IGJlIHNvZnRlbmVkIGFuZCwgaWYgSSBtYXkgdXNlIHRoZQpwaHJhc2UsIHJlZHVjZWQgdG8gYSBwdWxwIGJ5IGZyZXF1ZW50IHJlLXBlcnVzYWwuPC9wPgoKPC90cmFuc2xhdGlvbj4="
translation['10.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIGFkdmFudGFnZXMgY29uZmVycmVkIGJ5IHJlYWRpbmcgYW5kCmxpc3RlbmluZyBhcmUgbm90IGlkZW50aWNhbC4gVGhlIHNwZWFrZXIgc3RpbXVsYXRlcwp1cyBieSB0aGUgYW5pbWF0aW9uIG9mIGhpcyBkZWxpdmVyeSwgYW5kIGtpbmRsZXMgdGhlCmltYWdpbmF0aW9uLCBub3QgYnkgcHJlc2VudGluZyB1cyB3aXRoIGFuIGVsYWJvcmF0ZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTMiIC8+CgpwaWN0dXJlLCBidXQgYnkgYnJpbmdpbmcgdXMgaW50byBhY3R1YWwgdG91Y2ggd2l0aAp0aGUgdGhpbmdzIHRoZW1zZWx2ZXMuIFRoZW4gYWxsIGlzIGxpZmUgYW5kIG1vdmVtZW50LCBhbmQgd2UgcmVjZWl2ZSB0aGUgbmV3LWJvcm4gb2Zmc3ByaW5nIG9mIGhpcwppbWFnaW5hdGlvbiB3aXRoIGVudGh1c2lhc3RpYyBhcHByb3ZhbC4gV2UgYXJlCm1vdmVkIG5vdCBtZXJlbHkgYnkgdGhlIGFjdHVhbCBpc3N1ZSBvZiB0aGUgdHJpYWwsCmJ1dCBieSBhbGwgdGhhdCB0aGUgb3JhdG9yIGhpbXNlbGYgaGFzIGF0IHN0YWtlLjwvdHJhbnNsYXRpb24+"
translation['10.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz4gTW9yZW92ZXIgaGlzIHZvaWNlLCB0aGUgZ3JhY2Ugb2YgaGlzIGdlc3R1cmVzLCB0aGUgYWRhcHRhdGlvbiBvZiBoaXMgZGVsaXZlcnkgKHdoaWNoIGlzIG9mIHN1cHJlbWUgaW1wb3J0YW5jZQppbiBvcmF0b3J5KSwgYW5kLCBpbiBhIHdvcmQsIGFsbCBoaXMgZXhjZWxsZW5jZXMgaW4KY29tYmluYXRpb24sIGhhdmUgdGhlaXIgZWR1Y2F0aXZlIGVmZmVjdC4gSW4gcmVhZGluZywKb24gdGhlIG90aGVyIGhhbmQsIHRoZSBjcml0aWNhbCBmYWN1bHR5IGlzIGEgc3VyZXIKZ3VpZGUsIGluYXNtdWNoIGFzIHRoZSBsaXN0ZW5lcidzIGp1ZGdtZW50IGlzIG9mdGVuCnN3ZXB0IGF3YXkgYnkgaGlzIHByZWZlcmVuY2UgZm9yIGEgcGFydGljdWxhciBzcGVha2VyLApvciBieSB0aGUgYXBwbGF1c2Ugb2YgYW4gZW50aHVzaWFzdGljIGF1ZGllbmNlLjwvdHJhbnNsYXRpb24+"
translation['10.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCndlIGFyZSBhc2hhbWVkIHRvIGRpc2FncmVlIHdpdGggdGhlbSwgYW5kIGFuIHVuY29uc2Npb3VzIG1vZGVzdHkgcHJldmVudHMgdXMgZnJvbSByYW5raW5nIG91ciBvd24Kb3BpbmlvbiBhYm92ZSB0aGVpcnMsIHRob3VnaCBhbGwgdGhlIHRpbWUgdGhlIHRhc3RlCm9mIHRoZSBtYWpvcml0eSBpcyB2aWNpb3VzLCBhbmQgdGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNsYXF1ZTwvaGk+IG1heQpwcmFpc2UgZXZlbiB3aGF0IGRvZXMgbm90IHJlYWxseSBkZXNlcnZlIGFwcHJvdmFsLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgb3RoZXIgaGFuZCwgaXQgd2lsbCBzb21ldGltZXMgYWxzbyBoYXBwZW4KdGhhdCBhbiBhdWRpZW5jZSB3aG9zZSB0YXN0ZSBpcyBiYWQgd2lsbCBmYWlsIHRvIGF3YXJkCnRoZSBwcmFpc2Ugd2hpY2ggaXMgZHVlIHRvIHRoZSBtb3N0IGFkbWlyYWJsZSB1dHRlcmFuY2VzLiBSZWFkaW5nLCBob3dldmVyLCBpcyBmcmVlLCBhbmQgZG9lcyBub3QgaHVycnkKcGFzdCB1cyB3aXRoIHRoZSBzcGVlZCBvZiBvcmFsIGRlbGl2ZXJ5OyB3ZSBjYW4gcmVyZWFkIGEgcGFzc2FnZSBhZ2FpbiBhbmQgYWdhaW4gaWYgd2UgYXJlIGluIGRvdWJ0CmFib3V0IGl0IG9yIHdpc2ggdG8gZml4IGl0IGluIHRoZSBtZW1vcnkuIFdlIG11c3QKcmV0dXJuIHRvIHdoYXQgd2UgaGF2ZSByZWFkIGFuZCByZWNvbnNpZGVyIGl0IHdpdGgKY2FyZSwgd2hpbGUsIGp1c3QgYXMgd2UgZG8gbm90IHN3YWxsb3cgb3VyIGZvb2QgdGlsbAp3ZSBoYXZlIGNoZXdlZCBpdCBhbmQgcmVkdWNlZCBpdCBhbG1vc3QgdG8gYSBzdGF0ZQpvZiBsaXF1ZWZhY3Rpb24gdG8gYXNzaXN0IHRoZSBwcm9jZXNzIG9mIGRpZ2VzdGlvbiwgc28Kd2hhdCB3ZSByZWFkIG11c3Qgbm90IGJlIGNvbW1pdHRlZCB0byB0aGUgbWVtb3J5CmZvciBzdWJzZXF1ZW50IGltaXRhdGlvbiB3aGlsZSBpdCBpcyBzdGlsbCBpbiBhIGNydWRlCnN0YXRlLCBidXQgbXVzdCBiZSBzb2Z0ZW5lZCBhbmQsIGlmIEkgbWF5IHVzZSB0aGUKcGhyYXNlLCByZWR1Y2VkIHRvIGEgcHVscCBieSBmcmVxdWVudCByZS1wZXJ1c2FsLjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjE1IiAvPgoKPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjAiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIGEgbG9uZyB0aW1lIGFsc28gd2Ugc2hvdWxkIHJlYWQgbm9uZSBzYXZlIHRoZQpiZXN0IGF1dGhvcnMgYW5kIHN1Y2ggYXMgYXJlIGxlYXN0IGxpa2VseSB0byBiZXRyYXkgb3VyCnRydXN0IGluIHRoZW4sIHdoaWxlIG91ciByZWFkaW5nIG11c3QgYmUgYWxtb3N0IGFzCnRob3JvdWdoIGFzIGlmIHdlIHdlcmUgYWN0dWFsbHkgdHJhbnNjcmliaW5nIHdoYXQgd2UKcmVhZC4gTm9yIG11c3Qgd2Ugc3R1ZHkgaXQgbWVyZWx5IGluIHBhcnRzLCBidXQKbXVzdCByZWFkIHRocm91Z2ggdGhlIHdob2xlIHdvcmsgZnJvbSBjb3ZlciB0bwpjb3ZlciBhbmQgdGhlbiByZWFkIGl0IGFmcmVzaCwgYSBwcmVjZXB0IHdoaWNoIGFwcGxpZXMKbW9yZSBlc3BlY2lhbGx5IHRvIHNwZWVjaGVzLCB3aG9zZSBtZXJpdHMgYXJlIG9mdGVuCmRlbGliZXJhdGVseSBkaXNndWlzZWQuPG1pbGVzdG9uZSBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZSBvcmF0b3IgZnJlcXVlbnRseQpwcmVwYXJlcyBoaXMgYXVkaWVuY2UgZm9yIHdoYXQgaXMgdG8gY29tZSwgZGlzc2VtYmxlcwphbmQgc2V0cyBhIHRyYXAgZm9yIHRoZW0gYW5kIG1ha2VzIHJlbWFya3MgYXQgdGhlCm9wZW5pbmcgb2YgaGlzIHNwZWVjaCB3aGljaCB3aWxsIG5vdCBoYXZlIHRoZWlyIGZ1bGwKZm9yY2UgdGlsbCB0aGUgY29uY2x1c2lvbi4gQ29uc2VxdWVudGx5IHdoYXQgaGUKc2F5cyB3aWxsIG9mdGVuIHNlZW0gY29tcGFyYXRpdmVseSBpbmVmZmVjdGl2ZSB3aGVyZQppdCBhY3R1YWxseSBvY2N1cnMsIHNpbmNlIHdlIGRvIG5vdCByZWFsaXNlIGhpcyBtb3RpdmUKYW5kIGl0IHdpbGwgYmUgbmVjZXNzYXJ5IHRvIHJlLXJlYWQgdGhlIHNwZWVjaCBhZnRlcgp3ZSBoYXZlIGFjcXVhaW50ZWQgb3Vyc2VsdmVzIHdpdGggYWxsIHRoYXQgaXQgY29udGFpbnMuPG1pbGVzdG9uZSBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gQWJvdmUgYWxsLCBpdCBpcyBtb3N0IGRlc2lyYWJsZSB0aGF0IHdlIHNob3VsZApmYW1pbGlhcmlzZSBvdXJzZWx2ZXMgd2l0aCB0aGUgZmFjdHMgb2YgdGhlIGNhc2Ugd2l0aAp3aGljaCB0aGUgc3BlZWNoIGRlYWxzLCBhbmQgaXQgd2lsbCBiZSB3ZWxsIGFsc28sCndoZXJldmVyIHBvc3NpYmxlLCB0byByZWFkIHRoZSBzcGVlY2hlcyBkZWxpdmVyZWQgb24KYm90aCBzaWRlcywgc3VjaCBhcyB0aG9zZSBvZiBBZXNjaGluZXMgYW5kIERlbW9zdGhlbmVzIGluIHRoZSBjYXNlIG9mIEN0ZXNpcGhvbiwgb2YgU2Vydml1cyBTdWxwaWNpdXMKYW5kIE1lc3NhbGEgZm9yIGFuZCBhZ2FpbnN0IEF1ZmlkaWEsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgaXYuIGlpLiAxMDYgYW5kIFZJIGkuIDIwLjwvbm90ZT4gb2YgUG9sbGlvPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgwqcgMTEzLjwvbm90ZT4gYW5kCkNhc3NpdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSDCpyAxMTYuPC9ub3RlPiBpbiB0aGUgY2FzZSBvZiBBc3ByZW5hcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkMuIE5vbml1cyBBc3ByZW5hcywgYSBmcmllbmQgb2YgQXVndXN0dXMsIGFjY3VzZWQgYnkKQ2Fzc2l1cyBhbmQgZGVmZW5kZWQgYnkgUG9sbGlvIG9uIGEgY2hhcmdlIG9mIHBvaXNvbmluZy48L25vdGU+IGFuZCBtYW55IG90aGVycy4KPG1pbGVzdG9uZSBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZXZlbiBpZiBzdWNoIHNwZWVjaGVzIHNlZW0gdW5lcXVhbCBpbiBwb2ludCBvZgptZXJpdCwgd2Ugc2hhbGwgc3RpbGwgZG8gd2VsbCB0byBzdHVkeSB0aGVtIGNhcmVmdWxseQp3aXRoIGEgdmlldyB0byB1bmRlcnN0YW5kaW5nIHRoZSBwcm9ibGVtcyByYWlzZWQgYnkKdGhlIGNhc2VzIHdpdGggd2hpY2ggdGhleSBkZWFsOiBmb3IgZXhhbXBsZSwgd2UKc2hvdWxkIGNvbXBhcmUgdGhlIHNwZWVjaGVzIGRlbGl2ZXJlZCBieSBUdWJlcm8KYWdhaW5zdCBMaWdhcml1cyBhbmQgYnkgSG9ydGVuc2l1cyBpbiBkZWZlbmNlIG9mClZlcnJlcyB3aXRoIHRob3NlIG9mIENpY2VybyBmb3IgdGhlIG9wcG9zaXRlIHNpZGUsCndoaWxlIGl0IHdpbGwgYWxzbyBiZSB1c2VmdWwgdG8ga25vdyBob3cgZGlmZmVyZW50Cm9yYXRvcnMgcGxlYWRlZCB0aGUgc2FtZSBjYXNlLiBGb3IgZXhhbXBsZSwKCjxwYiBpZD0icC4xNyIgLz4KCkNhbGlkaXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5Qcm9iYWJseSBiZWZvcmUgc29tZSBvdGhlciB0cmlidW5hbC4gQ2ljZXJvJ3MgPGhpIHJlbmQ9Iml0YWxpY3MiPmRlIERvbW8KU3VhPC9oaT4gd2FzIGRlbGl2ZXJlZCBiZWZvcmUgdGhlIDxoaSByZW5kPSJpdGFsaWNzIj5wb250aWZpY2VzLjwvaGk+PC9ub3RlPiBzcG9rZSBvbiB0aGUgc3ViamVjdCBvZiBDaWNlcm8ncyBob3VzZSwKQnJ1dHVzIHdyb3RlIGEgZGVjbGFtYXRpb24gaW4gZGVmZW5jZSBvZiBNaWxvLCB3aGljaApDb3JuZWxpdXMgQ2Vsc3VzIHdyb25nbHkgYmVsaWV2ZXMgdG8gaGF2ZSBiZWVuCmFjdHVhbGx5IGRlbGl2ZXJlZCBpbiBjb3VydCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiBJSUkuIHZpLiA5My4gQ29ybmVsaXVzIENlbHN1cyB3YXMgYW4gZW5jeWNsb3BlZGljCndyaXRlciBvZiB0aGUgZWFybHkgZW1waXJlLCB3aG9zZSB0cmVhdGlzZSBvbiBtZWRpY2luZSBoYXMKc3Vydml2ZWQuPC9ub3RlPiBhbmQgUG9sbGlvIGFuZCBNZXNzYWxsYQpkZWZlbmRlZCB0aGUgc2FtZSBjbGllbnRzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+TGlidXJuaWEuIFNlZSBJWC4gaWkuIDM0Ljwvbm90ZT4gd2hpbGUgaW4gbXkgYm95aG9vZApyZW1hcmthYmxlIHNwZWVjaGVzIGRlbGl2ZXJlZCBieSBEb21pdGl1cyBBZmVyLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIMKnIDExOC48L25vdGU+CkNyaXNwdXMgUGFzc2llbnVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5TdGVwZmF0aGVyIG9mIE5lcm8uIFNlZSBWSS4gaS4gNTAuPC9ub3RlPiBhbmQgRGVjaW1pcyBMYWVsaXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5Qcm9iYWJseSB0aGUgTGFlbGl1cyBCYWxidXMgb2YgVGFjLiA8aGkgcmVuZD0iaXRhbGljcyI+QW5uLC48L2hpPiBWSS4gNDcsIDQ4Ljwvbm90ZT4gaW4gZGVmZW5jZSBvZiBWb2x1c2VudXMgd2VyZSBpbiBjaXJjdWxhdGlvbi48L3A+CjwvdHJhbnNsYXRpb24+"
translation['10.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYSBsb25nIHRpbWUgYWxzbyB3ZSBzaG91bGQgcmVhZCBub25lIHNhdmUgdGhlCmJlc3QgYXV0aG9ycyBhbmQgc3VjaCBhcyBhcmUgbGVhc3QgbGlrZWx5IHRvIGJldHJheSBvdXIKdHJ1c3QgaW4gdGhlbiwgd2hpbGUgb3VyIHJlYWRpbmcgbXVzdCBiZSBhbG1vc3QgYXMKdGhvcm91Z2ggYXMgaWYgd2Ugd2VyZSBhY3R1YWxseSB0cmFuc2NyaWJpbmcgd2hhdCB3ZQpyZWFkLiBOb3IgbXVzdCB3ZSBzdHVkeSBpdCBtZXJlbHkgaW4gcGFydHMsIGJ1dAptdXN0IHJlYWQgdGhyb3VnaCB0aGUgd2hvbGUgd29yayBmcm9tIGNvdmVyIHRvCmNvdmVyIGFuZCB0aGVuIHJlYWQgaXQgYWZyZXNoLCBhIHByZWNlcHQgd2hpY2ggYXBwbGllcwptb3JlIGVzcGVjaWFsbHkgdG8gc3BlZWNoZXMsIHdob3NlIG1lcml0cyBhcmUgb2Z0ZW4KZGVsaWJlcmF0ZWx5IGRpc2d1aXNlZC48L3RyYW5zbGF0aW9uPg=="
translation['10.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZSBvcmF0b3IgZnJlcXVlbnRseQpwcmVwYXJlcyBoaXMgYXVkaWVuY2UgZm9yIHdoYXQgaXMgdG8gY29tZSwgZGlzc2VtYmxlcwphbmQgc2V0cyBhIHRyYXAgZm9yIHRoZW0gYW5kIG1ha2VzIHJlbWFya3MgYXQgdGhlCm9wZW5pbmcgb2YgaGlzIHNwZWVjaCB3aGljaCB3aWxsIG5vdCBoYXZlIHRoZWlyIGZ1bGwKZm9yY2UgdGlsbCB0aGUgY29uY2x1c2lvbi4gQ29uc2VxdWVudGx5IHdoYXQgaGUKc2F5cyB3aWxsIG9mdGVuIHNlZW0gY29tcGFyYXRpdmVseSBpbmVmZmVjdGl2ZSB3aGVyZQppdCBhY3R1YWxseSBvY2N1cnMsIHNpbmNlIHdlIGRvIG5vdCByZWFsaXNlIGhpcyBtb3RpdmUKYW5kIGl0IHdpbGwgYmUgbmVjZXNzYXJ5IHRvIHJlLXJlYWQgdGhlIHNwZWVjaCBhZnRlcgp3ZSBoYXZlIGFjcXVhaW50ZWQgb3Vyc2VsdmVzIHdpdGggYWxsIHRoYXQgaXQgY29udGFpbnMuPC90cmFuc2xhdGlvbj4="
translation['10.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gQWJvdmUgYWxsLCBpdCBpcyBtb3N0IGRlc2lyYWJsZSB0aGF0IHdlIHNob3VsZApmYW1pbGlhcmlzZSBvdXJzZWx2ZXMgd2l0aCB0aGUgZmFjdHMgb2YgdGhlIGNhc2Ugd2l0aAp3aGljaCB0aGUgc3BlZWNoIGRlYWxzLCBhbmQgaXQgd2lsbCBiZSB3ZWxsIGFsc28sCndoZXJldmVyIHBvc3NpYmxlLCB0byByZWFkIHRoZSBzcGVlY2hlcyBkZWxpdmVyZWQgb24KYm90aCBzaWRlcywgc3VjaCBhcyB0aG9zZSBvZiBBZXNjaGluZXMgYW5kIERlbW9zdGhlbmVzIGluIHRoZSBjYXNlIG9mIEN0ZXNpcGhvbiwgb2YgU2Vydml1cyBTdWxwaWNpdXMKYW5kIE1lc3NhbGEgZm9yIGFuZCBhZ2FpbnN0IEF1ZmlkaWEsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBpdi4gaWkuIDEwNiBhbmQgVkkgaS4gMjAuPC9ub3RlPiBvZiBQb2xsaW88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIMKnIDExMy48L25vdGU+IGFuZApDYXNzaXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSDCpyAxMTYuPC9ub3RlPiBpbiB0aGUgY2FzZSBvZiBBc3ByZW5hcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+Qy4gTm9uaXVzIEFzcHJlbmFzLCBhIGZyaWVuZCBvZiBBdWd1c3R1cywgYWNjdXNlZCBieQpDYXNzaXVzIGFuZCBkZWZlbmRlZCBieSBQb2xsaW8gb24gYSBjaGFyZ2Ugb2YgcG9pc29uaW5nLjwvbm90ZT4gYW5kIG1hbnkgb3RoZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZXZlbiBpZiBzdWNoIHNwZWVjaGVzIHNlZW0gdW5lcXVhbCBpbiBwb2ludCBvZgptZXJpdCwgd2Ugc2hhbGwgc3RpbGwgZG8gd2VsbCB0byBzdHVkeSB0aGVtIGNhcmVmdWxseQp3aXRoIGEgdmlldyB0byB1bmRlcnN0YW5kaW5nIHRoZSBwcm9ibGVtcyByYWlzZWQgYnkKdGhlIGNhc2VzIHdpdGggd2hpY2ggdGhleSBkZWFsOiBmb3IgZXhhbXBsZSwgd2UKc2hvdWxkIGNvbXBhcmUgdGhlIHNwZWVjaGVzIGRlbGl2ZXJlZCBieSBUdWJlcm8KYWdhaW5zdCBMaWdhcml1cyBhbmQgYnkgSG9ydGVuc2l1cyBpbiBkZWZlbmNlIG9mClZlcnJlcyB3aXRoIHRob3NlIG9mIENpY2VybyBmb3IgdGhlIG9wcG9zaXRlIHNpZGUsCndoaWxlIGl0IHdpbGwgYWxzbyBiZSB1c2VmdWwgdG8ga25vdyBob3cgZGlmZmVyZW50Cm9yYXRvcnMgcGxlYWRlZCB0aGUgc2FtZSBjYXNlLiBGb3IgZXhhbXBsZSwKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjE3IiAvPgoKQ2FsaWRpdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+UHJvYmFibHkgYmVmb3JlIHNvbWUgb3RoZXIgdHJpYnVuYWwuIENpY2VybydzIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIERvbW8KU3VhPC9oaT4gd2FzIGRlbGl2ZXJlZCBiZWZvcmUgdGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBvbnRpZmljZXMuPC9oaT48L25vdGU+IHNwb2tlIG9uIHRoZSBzdWJqZWN0IG9mIENpY2VybydzIGhvdXNlLApCcnV0dXMgd3JvdGUgYSBkZWNsYW1hdGlvbiBpbiBkZWZlbmNlIG9mIE1pbG8sIHdoaWNoCkNvcm5lbGl1cyBDZWxzdXMgd3JvbmdseSBiZWxpZXZlcyB0byBoYXZlIGJlZW4KYWN0dWFsbHkgZGVsaXZlcmVkIGluIGNvdXJ0LDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIERvbW8KU3VhPC9oaT4gd2FzIGRlbGl2ZXJlZCBiZWZvcmUgdGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBvbnRpZmljZXMuPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Y3AuPC9oaT4gSUlJLiB2aS4gOTMuIENvcm5lbGl1cyBDZWxzdXMgd2FzIGFuIGVuY3ljbG9wZWRpYwp3cml0ZXIgb2YgdGhlIGVhcmx5IGVtcGlyZSwgd2hvc2UgdHJlYXRpc2Ugb24gbWVkaWNpbmUgaGFzCnN1cnZpdmVkLjwvbm90ZT4gYW5kIFBvbGxpbyBhbmQgTWVzc2FsbGEKZGVmZW5kZWQgdGhlIHNhbWUgY2xpZW50cyw8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiBJSUkuIHZpLiA5My4gQ29ybmVsaXVzIENlbHN1cyB3YXMgYW4gZW5jeWNsb3BlZGljCndyaXRlciBvZiB0aGUgZWFybHkgZW1waXJlLCB3aG9zZSB0cmVhdGlzZSBvbiBtZWRpY2luZSBoYXMKc3Vydml2ZWQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkxpYnVybmlhLiBTZWUgSVguIGlpLiAzNC48L25vdGU+IHdoaWxlIGluIG15IGJveWhvb2QKcmVtYXJrYWJsZSBzcGVlY2hlcyBkZWxpdmVyZWQgYnkgRG9taXRpdXMgQWZlciw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIMKnIDExOC48L25vdGU+CkNyaXNwdXMgUGFzc2llbnVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlN0ZXBmYXRoZXIgb2YgTmVyby4gU2VlIFZJLiBpLiA1MC48L25vdGU+IGFuZCBEZWNpbWlzIExhZWxpdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+UHJvYmFibHkgdGhlIExhZWxpdXMgQmFsYnVzIG9mIFRhYy4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QW5uLC48L2hpPiBWSS4gNDcsIDQ4Ljwvbm90ZT4gaW4gZGVmZW5jZSBvZiBWb2x1c2VudXMgd2VyZSBpbiBjaXJjdWxhdGlvbi48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Bbm4sLjwvaGk+IFZJLiA0NywgNDguPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjQiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIHJlYWRlciBtdXN0IG5vdCwgaG93ZXZlciwganVtcCB0byB0aGUgY29uY2x1c2lvbiB0aGF0IGFsbCB0aGF0IHdhcyB1dHRlcmVkIGJ5IHRoZSBiZXN0IGF1dGhvcnMgaXMKbmVjZXNzYXJpbHkgcGVyZmVjdC4gQXQgdGltZXMgdGhleSBsYXBzZSBhbmQgc3RhZ2dlcgpiZW5lYXRoIHRoZSB3ZWlnaHQgb2YgdGhlaXIgdGFzaywgaW5kdWxnZSB0aGVpciBiZW50Cm9yIHJlbGF4IHRoZWlyIGVmZm9ydHMuIFNvbWV0aW1lcywgYWdhaW4sIHRoZXkgZ2l2ZQp0aGUgaW1wcmVzc2lvbiBvZiB3ZWFyaW5lc3M6IGZvciBleGFtcGxlLCBDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkluIGEgbG9zdCBsZXR0ZXI6IDxoaSByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiBQbHV0LiA8aGkgcmVuZD0iaXRhbGljcyI+Q2ljLjwvaGk+IDI0Ljwvbm90ZT4KdGhpbmtzIHRoYXQgRGVtb3N0aGVuZXMgc29tZXRpbWVzIG5vZHMsIGFuZCBIb3JhY2U8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5BLiBQLjwvaGk+IDM1OS48L25vdGU+CnNheXMgdGhlIHNhbWUgb2YgSG9tZXIgaGltc2VsZi48bWlsZXN0b25lIG49IjI1IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgZGVzcGl0ZSB0aGVpcgpncmVhdG5lc3MgdGhleSBhcmUgc3RpbGwgYnV0IG1vcnRhbCBtZW4sIGFuZCBpdCB3aWxsCnNvbWV0aW1lcyBoYXBwZW4gdGhhdCB0aGVpciByZWFkZXIgYXNzdW1lcyB0aGF0CmFueXRoaW5nIHdoaWNoIGhlIGZpbmRzIGluIHRoZW0gbWF5IGJlIHRha2VuIGFzIGEKY2Fub24gb2Ygc3R5bGUsIHdpdGggdGhlIHJlc3VsdCB0aGF0IGhlIGltaXRhdGVzIHRoZWlyCmRlZmVjdHMgKGFuZCBpdCBpcyBhbHdheXMgZWFzaWVyIHRvIGRvIHRoaXMgdGhhbiB0bwppbWl0YXRlIHRoZWlyIGV4Y2VsbGVuY2VzKSBhbmQgdGhpbmtzIGhpbXNlbGYgYQpwZXJmZWN0IHJlcGxpY2EgaWYgaGUgc3VjY2VlZHMgaW4gY29weWluZyB0aGUKYmxlbWlzaGVzIG9mIGdyZWF0IG1lbi48bWlsZXN0b25lIG49IjI2IiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgbW9kZXN0eSBhbmQgY2lyY3Vtc3BlY3Rpb24gYXJlIHJlcXVpcmVkIGluIHByb25vdW5jaW5nIGp1ZGdtZW50IG9uCnN1Y2ggZ3JlYXQgbWVuLCBzaW5jZSB0aGVyZSBpcyBhbHdheXMgdGhlIHJpc2sgb2YKZmFsbGluZyBpbnRvIHRoZSBjb21tb24gZmF1bHQgb2YgY29uZGVtbmluZyB3aGF0Cm9uZSBkb2VzIG5vdCB1bmRlcnN0YW5kLiBBbmQsIGlmIGl0IGlzIG5lY2Vzc2FyeSB0bwplcnIgb24gb25lIHNpZGUgb3IgdGhlIG90aGVyLCBJIHNob3VsZCBwcmVmZXIgdGhhdAp0aGUgcmVhZGVyIHNob3VsZCBhcHByb3ZlIG9mIGV2ZXJ5dGhpbmcgdGhhbiB0aGF0CmhlIHNob3VsZCBkaXNhcHByb3ZlIG9mIG11Y2guPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['10.1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcmVhZGVyIG11c3Qgbm90LCBob3dldmVyLCBqdW1wIHRvIHRoZSBjb25jbHVzaW9uIHRoYXQgYWxsIHRoYXQgd2FzIHV0dGVyZWQgYnkgdGhlIGJlc3QgYXV0aG9ycyBpcwpuZWNlc3NhcmlseSBwZXJmZWN0LiBBdCB0aW1lcyB0aGV5IGxhcHNlIGFuZCBzdGFnZ2VyCmJlbmVhdGggdGhlIHdlaWdodCBvZiB0aGVpciB0YXNrLCBpbmR1bGdlIHRoZWlyIGJlbnQKb3IgcmVsYXggdGhlaXIgZWZmb3J0cy4gU29tZXRpbWVzLCBhZ2FpbiwgdGhleSBnaXZlCnRoZSBpbXByZXNzaW9uIG9mIHdlYXJpbmVzczogZm9yIGV4YW1wbGUsIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5JbiBhIGxvc3QgbGV0dGVyOiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiBQbHV0LiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5DaWMuPC9oaT4gMjQuPC9ub3RlPgp0aGlua3MgdGhhdCBEZW1vc3RoZW5lcyBzb21ldGltZXMgbm9kcywgYW5kIEhvcmFjZTxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNwLjwvaGk+IFBsdXQuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkNpYy48L2hpPiAyNC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QS4gUC48L2hpPiAzNTkuPC9ub3RlPgpzYXlzIHRoZSBzYW1lIG9mIEhvbWVyIGhpbXNlbGYuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QS4gUC48L2hpPiAzNTkuPC90cmFuc2xhdGlvbj4="
translation['10.1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGRlc3BpdGUgdGhlaXIKZ3JlYXRuZXNzIHRoZXkgYXJlIHN0aWxsIGJ1dCBtb3J0YWwgbWVuLCBhbmQgaXQgd2lsbApzb21ldGltZXMgaGFwcGVuIHRoYXQgdGhlaXIgcmVhZGVyIGFzc3VtZXMgdGhhdAphbnl0aGluZyB3aGljaCBoZSBmaW5kcyBpbiB0aGVtIG1heSBiZSB0YWtlbiBhcyBhCmNhbm9uIG9mIHN0eWxlLCB3aXRoIHRoZSByZXN1bHQgdGhhdCBoZSBpbWl0YXRlcyB0aGVpcgpkZWZlY3RzIChhbmQgaXQgaXMgYWx3YXlzIGVhc2llciB0byBkbyB0aGlzIHRoYW4gdG8KaW1pdGF0ZSB0aGVpciBleGNlbGxlbmNlcykgYW5kIHRoaW5rcyBoaW1zZWxmIGEKcGVyZmVjdCByZXBsaWNhIGlmIGhlIHN1Y2NlZWRzIGluIGNvcHlpbmcgdGhlCmJsZW1pc2hlcyBvZiBncmVhdCBtZW4uPC90cmFuc2xhdGlvbj4="
translation['10.1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IG1vZGVzdHkgYW5kIGNpcmN1bXNwZWN0aW9uIGFyZSByZXF1aXJlZCBpbiBwcm9ub3VuY2luZyBqdWRnbWVudCBvbgpzdWNoIGdyZWF0IG1lbiwgc2luY2UgdGhlcmUgaXMgYWx3YXlzIHRoZSByaXNrIG9mCmZhbGxpbmcgaW50byB0aGUgY29tbW9uIGZhdWx0IG9mIGNvbmRlbW5pbmcgd2hhdApvbmUgZG9lcyBub3QgdW5kZXJzdGFuZC4gQW5kLCBpZiBpdCBpcyBuZWNlc3NhcnkgdG8KZXJyIG9uIG9uZSBzaWRlIG9yIHRoZSBvdGhlciwgSSBzaG91bGQgcHJlZmVyIHRoYXQKdGhlIHJlYWRlciBzaG91bGQgYXBwcm92ZSBvZiBldmVyeXRoaW5nIHRoYW4gdGhhdApoZSBzaG91bGQgZGlzYXBwcm92ZSBvZiBtdWNoLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZW9waHJhc3R1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+SW4gb25lIG9mIGhpcyBsb3N0IHJoZXRvcmljYWwgdHJlYXRpc2VzLjwvbm90ZT4gc2F5cyB0aGF0IHRoZSByZWFkaW5nIG9mIHBvZXRzIGlzCm9mIGdyZWF0IHNlcnZpY2UgdG8gdGhlIG9yYXRvciwgYW5kIGhhcyByaWdodGx5IGJlZW4KZm9sbG93ZWQgaW4gdGhpcyB2aWV3IGJ5IG1hbnkuIEZvciB0aGUgcG9ldHMgd2lsbAoKPHBiIGlkPSJwLjE5IiAvPgoKZ2l2ZSB1cyBpbnNwaXJhdGlvbiBhcyByZWdhcmRzIHRoZSBtYXR0ZXIsIHN1YmxpbWl0eQpvZiBsYW5ndWFnZSwgdGhlIHBvd2VyIHRvIGV4Y2l0ZSBldmVyeSBraW5kIG9mCmVtb3Rpb24sIGFuZCB0aGUgYXBwcm9wcmlhdGUgdHJlYXRtZW50IG9mIGNoYXJhY3RlciwKd2hpbGUgbWluZHMgdGhhdCBoYXZlIGJlY29tZSBqYWRlZCBvd2luZyB0byB0aGUKZGFpbHkgd2VhciBhbmQgdGVhciBvZiB0aGUgY291cnRzIHdpbGwgZmluZCByZWZyZXNobWVudCBpbiBzdWNoIGFncmVlYWJsZSBzdHVkeS4gQ29uc2VxdWVudGx5IENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPlBybyBBcmNoLjwvaGk+IDEyLjwvbm90ZT4KcmVjb21tZW5kcyB0aGUgcmVsYXhhdGlvbiBwcm92aWRlZCBieSB0aGUgcmVhZGluZwpvZiBwb2V0cnkuPG1pbGVzdG9uZSBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz4gV2Ugc2hvdWxkLCBob3dldmVyLCByZW1lbWJlciB0aGF0IHRoZQpvcmF0b3IgbXVzdCBub3QgZm9sbG93IHRoZSBwb2V0cyBpbiBldmVyeXRoaW5nLCBtb3JlCmVzcGVjaWFsbHkgaW4gdGhlaXIgZnJlZWRvbSBvZiBsYW5ndWFnZSBhbmQgdGhlaXIKbGljZW5zZSBpbiB0aGUgdXNlIG9mIGZpZ3VyZXMuIFBvZXRyeSBoYXMgYmVlbiBjb21wYXJlZCB0byB0aGUgb3JhdG9yeSBvZiBkaXNwbGF5LCBhbmQgZnVydGhlciBhaW1zCnNvbGVseSBhdCBnaXZpbmcgcGxlYXN1cmUsIHdoaWNoIGl0IHNlZWtzIHRvIHNlY3VyZSBieQppbnZlbnRpbmcgd2hhdCBpcyBub3QgbWVyZWx5IHVudHJ1ZSwgYnV0IHNvbWV0aW1lcwpldmVuIGluY3JlZGlibGUuPG1pbGVzdG9uZSBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz4gRnVydGhlciwgd2UgbXVzdCBiZWFyIGluIG1pbmQKdGhhdCBpdCBjYW4gYmUgZGVmZW5kZWQgb24gdGhlIGdyb3VuZCB0aGF0IGl0IGlzIHRpZWQKYnkgY2VydGFpbiBtZXRyaWNhbCBuZWNlc3NpdGllcyBhbmQgY29uc2VxdWVudGx5IGNhbm5vdCBhbHdheXMgdXNlIHN0cmFpZ2h0Zm9yd2FyZCBhbmQgbGl0ZXJhbCBsYW5ndWFnZSwKYnV0IGlzIGRyaXZlbiBmcm9tIHRoZSBkaXJlY3Qgcm9hZCB0byB0YWtlIHJlZnVnZSBpbgpjZXJ0YWluIGJ5LXdheXMgb2YgZXhwcmVzc2lvbjsgYW5kIGNvbXBlbGxlZCBub3QKbWVyZWx5IHRvIGNoYW5nZSBjZXJ0YWluIHdvcmRzLCBidXQgdG8gbGVuZ3RoZW4sCmNvbnRyYWN0LCB0cmFuc3Bvc2Ugb3IgZGl2aWRlIHRoZW0sIHdoZXJlYXMgdGhlCm9yYXRvciBzdGFuZHMgYXJtZWQgaW4gdGhlIGZvcmVmcm9udCBvZiB0aGUgYmF0dGxlLApmaWdodHMgZm9yIGEgaGlnaCBzdGFrZSBhbmQgZGV2b3RlcyBhbGwgaGlzIGVmZm9ydCB0bwp3aW5uaW5nIHRoZSB2aWN0b3J5LjxtaWxlc3RvbmUgbj0iMzAiIHVuaXQ9InNlY3Rpb24iIC8+IEFuZCB5ZXQgSSB3b3VsZCBub3QgaGF2ZSBoaXMKd2VhcG9ucyBkZWZhY2VkIGJ5IG1vdWxkIGFuZCBydXN0LCBidXQgd291bGQgaGF2ZQp0aGVtIHNoaW5lIHdpdGggYSBzcGxlbmRvdXIgdGhhdCBzaGFsbCBzdHJpa2UgdGVycm9yCnRvIHRoZSBoZWFydCBvZiB0aGUgZm9lLCBsaWtlIHRoZSBmbGFzaGluZyBzdGVlbCB0aGF0CmRhenpsZXMgaGVhcnQgYW5kIGV5ZSBhdCBvbmNlLCBub3QgbGlrZSB0aGUgZ2xlYW0gb2YKZ29sZCBvciBzaWx2ZXIsIHdoaWNoIGhhcyBubyB3YXJsaWtlIGVmZmljYWN5IGFuZCBpcwpldmVuIGEgcG9zaXRpdmUgcGVyaWwgdG8gaXRzIHdlYXJlci48L3A+CjwvdHJhbnNsYXRpb24+"
translation['10.1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVvcGhyYXN0dXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+SW4gb25lIG9mIGhpcyBsb3N0IHJoZXRvcmljYWwgdHJlYXRpc2VzLjwvbm90ZT4gc2F5cyB0aGF0IHRoZSByZWFkaW5nIG9mIHBvZXRzIGlzCm9mIGdyZWF0IHNlcnZpY2UgdG8gdGhlIG9yYXRvciwgYW5kIGhhcyByaWdodGx5IGJlZW4KZm9sbG93ZWQgaW4gdGhpcyB2aWV3IGJ5IG1hbnkuIEZvciB0aGUgcG9ldHMgd2lsbAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTkiIC8+CgpnaXZlIHVzIGluc3BpcmF0aW9uIGFzIHJlZ2FyZHMgdGhlIG1hdHRlciwgc3VibGltaXR5Cm9mIGxhbmd1YWdlLCB0aGUgcG93ZXIgdG8gZXhjaXRlIGV2ZXJ5IGtpbmQgb2YKZW1vdGlvbiwgYW5kIHRoZSBhcHByb3ByaWF0ZSB0cmVhdG1lbnQgb2YgY2hhcmFjdGVyLAp3aGlsZSBtaW5kcyB0aGF0IGhhdmUgYmVjb21lIGphZGVkIG93aW5nIHRvIHRoZQpkYWlseSB3ZWFyIGFuZCB0ZWFyIG9mIHRoZSBjb3VydHMgd2lsbCBmaW5kIHJlZnJlc2htZW50IGluIHN1Y2ggYWdyZWVhYmxlIHN0dWR5LiBDb25zZXF1ZW50bHkgQ2ljZXJvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlBybyBBcmNoLjwvaGk+IDEyLjwvbm90ZT4KcmVjb21tZW5kcyB0aGUgcmVsYXhhdGlvbiBwcm92aWRlZCBieSB0aGUgcmVhZGluZwpvZiBwb2V0cnkuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+UHJvIEFyY2guPC9oaT4gMTIuPC90cmFuc2xhdGlvbj4="
translation['10.1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz4gV2Ugc2hvdWxkLCBob3dldmVyLCByZW1lbWJlciB0aGF0IHRoZQpvcmF0b3IgbXVzdCBub3QgZm9sbG93IHRoZSBwb2V0cyBpbiBldmVyeXRoaW5nLCBtb3JlCmVzcGVjaWFsbHkgaW4gdGhlaXIgZnJlZWRvbSBvZiBsYW5ndWFnZSBhbmQgdGhlaXIKbGljZW5zZSBpbiB0aGUgdXNlIG9mIGZpZ3VyZXMuIFBvZXRyeSBoYXMgYmVlbiBjb21wYXJlZCB0byB0aGUgb3JhdG9yeSBvZiBkaXNwbGF5LCBhbmQgZnVydGhlciBhaW1zCnNvbGVseSBhdCBnaXZpbmcgcGxlYXN1cmUsIHdoaWNoIGl0IHNlZWtzIHRvIHNlY3VyZSBieQppbnZlbnRpbmcgd2hhdCBpcyBub3QgbWVyZWx5IHVudHJ1ZSwgYnV0IHNvbWV0aW1lcwpldmVuIGluY3JlZGlibGUuPC90cmFuc2xhdGlvbj4="
translation['10.1.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz4gRnVydGhlciwgd2UgbXVzdCBiZWFyIGluIG1pbmQKdGhhdCBpdCBjYW4gYmUgZGVmZW5kZWQgb24gdGhlIGdyb3VuZCB0aGF0IGl0IGlzIHRpZWQKYnkgY2VydGFpbiBtZXRyaWNhbCBuZWNlc3NpdGllcyBhbmQgY29uc2VxdWVudGx5IGNhbm5vdCBhbHdheXMgdXNlIHN0cmFpZ2h0Zm9yd2FyZCBhbmQgbGl0ZXJhbCBsYW5ndWFnZSwKYnV0IGlzIGRyaXZlbiBmcm9tIHRoZSBkaXJlY3Qgcm9hZCB0byB0YWtlIHJlZnVnZSBpbgpjZXJ0YWluIGJ5LXdheXMgb2YgZXhwcmVzc2lvbjsgYW5kIGNvbXBlbGxlZCBub3QKbWVyZWx5IHRvIGNoYW5nZSBjZXJ0YWluIHdvcmRzLCBidXQgdG8gbGVuZ3RoZW4sCmNvbnRyYWN0LCB0cmFuc3Bvc2Ugb3IgZGl2aWRlIHRoZW0sIHdoZXJlYXMgdGhlCm9yYXRvciBzdGFuZHMgYXJtZWQgaW4gdGhlIGZvcmVmcm9udCBvZiB0aGUgYmF0dGxlLApmaWdodHMgZm9yIGEgaGlnaCBzdGFrZSBhbmQgZGV2b3RlcyBhbGwgaGlzIGVmZm9ydCB0bwp3aW5uaW5nIHRoZSB2aWN0b3J5LjwvdHJhbnNsYXRpb24+"
translation['10.1.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIHlldCBJIHdvdWxkIG5vdCBoYXZlIGhpcwp3ZWFwb25zIGRlZmFjZWQgYnkgbW91bGQgYW5kIHJ1c3QsIGJ1dCB3b3VsZCBoYXZlCnRoZW0gc2hpbmUgd2l0aCBhIHNwbGVuZG91ciB0aGF0IHNoYWxsIHN0cmlrZSB0ZXJyb3IKdG8gdGhlIGhlYXJ0IG9mIHRoZSBmb2UsIGxpa2UgdGhlIGZsYXNoaW5nIHN0ZWVsIHRoYXQKZGF6emxlcyBoZWFydCBhbmQgZXllIGF0IG9uY2UsIG5vdCBsaWtlIHRoZSBnbGVhbSBvZgpnb2xkIG9yIHNpbHZlciwgd2hpY2ggaGFzIG5vIHdhcmxpa2UgZWZmaWNhY3kgYW5kIGlzCmV2ZW4gYSBwb3NpdGl2ZSBwZXJpbCB0byBpdHMgd2VhcmVyLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMxIiB1bml0PSJzZWN0aW9uIiAvPkhpc3RvcnksIGFsc28sIG1heSBwcm92aWRlIHRoZSBvcmF0b3Igd2l0aCBhIG51dHJpbWVudCB3aGljaCB3ZSBtYXkgY29tcGFyZSB0byBzb21lIHJpY2ggYW5kCnBsZWFzYW50IGp1aWNlLiBCdXQgd2hlbiB3ZSByZWFkIGl0LCB3ZSBtdXN0Cgo8cGIgaWQ9InAuMjEiIC8+CgpyZW1lbWJlciB0aGF0IG1hbnkgb2YgdGhlIGV4Y2VsbGVuY2VzIG9mIHRoZSBoaXN0b3JpYW4KcmVxdWlyZSB0byBiZSBzaHVubmVkIGJ5IHRoZSBvcmF0b3IuIEZvciBoaXN0b3J5CmhhcyBhIGNlcnRhaW4gYWZmaW5pdHkgdG8gcG9ldHJ5IGFuZCBtYXkgYmUgcmVnYXJkZWQKYXMgYSBraW5kIG9mIHByb3NlIHBvZW0sIHdoaWxlIGl0IGlzIHdyaXR0ZW4gZm9yIHRoZQpwdXJwb3NlIG9mIG5hcnJhdGl2ZSwgbm90IG9mIHByb29mLCBhbmQgZGVzaWduZWQgZnJvbQpiZWdpbm5pbmcgdG8gZW5kIG5vdCBmb3IgaW1tZWRpYXRlIGVmZmVjdCBvciB0aGUKaW5zdGFudCBuZWNlc3NpdGllcyBvZiBmb3JlbnNpYyBzdHJpZmUsIGJ1dCB0byByZWNvcmQKZXZlbnRzIGZvciB0aGUgYmVuZWZpdCBvZiBwb3N0ZXJpdHkgYW5kIHRvIHdpbiBnbG9yeQpmb3IgaXRzIGF1dGhvci4gQ29uc2VxdWVudGx5LCB0byBhdm9pZCBtb25vdG9ueSBvZgpuYXJyYXRpdmUsIGl0IGVtcGxveXMgdW51c3VhbCB3b3JkcyBhbmQgaW5kdWxnZXMgaW4KYSBmcmVlciB1c2Ugb2YgZmlndXJlcy48bWlsZXN0b25lIG49IjMyIiB1bml0PSJzZWN0aW9uIiAvPiBUaGVyZWZvcmUsIGFzIEkgaGF2ZSBhbHJlYWR5CnNhaWQsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5JVi4gaWkuIDQ1Ljwvbm90ZT4gdGhlIGZhbW91cyBicmV2aXR5IG9mIFNhbGx1c3QsIHRoYW4gd2hpY2gKbm90aGluZyBjYW4gYmUgbW9yZSBwbGVhc2luZyB0byB0aGUgbGVpc3VyZWQgZWFyIG9mCnRoZSBzY2hvbGFyLCBpcyBhIHN0eWxlIHRvIGJlIGF2b2lkZWQgYnkgdGhlIG9yYXRvciBpbgp2aWV3IG9mIHRoZSBmYWN0IHRoYXQgaGlzIHdvcmRzIGFyZSBhZGRyZXNzZWQgdG8gYQpqdWRnZSB3aG8gaGFzIGhpcyBtaW5kIG9jY3VwaWVkIGJ5IGEgbnVtYmVyIG9mCnRob3VnaHRzIGFuZCBpcyBhbHNvIGZyZXF1ZW50bHkgdW5lZHVjYXRlZCwgd2hpbGUsCm9uIHRoZSBvdGhlciBoYW5kLCB0aGUgbWlsa3kgZnVsbG5lc3Mgb2YgTGl2eSBpcwpoYXJkbHkgb2YgYSBraW5kIHRvIGluc3RydWN0IGEgbGlzdGVuZXIgd2hvIGxvb2tzIG5vdApmb3IgYmVhdXR5IG9mIGV4cG9zaXRpb24sIGJ1dCBmb3IgdHJ1dGggYW5kIGNyZWRpYmlsaXR5Lgo8bWlsZXN0b25lIG49IjMzIiB1bml0PSJzZWN0aW9uIiAvPldlIG11c3QgYWxzbyByZW1lbWJlciB0aGF0IENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPk9yLjwvaGk+IDMwIDxoaSByZW5kPSJpdGFsaWNzIj5zcS48L2hpPjwvbm90ZT4gdGhpbmtzIHRoYXQgbm90CmV2ZW4gJ1RodWN5ZGlkY3Mgb3IgWGVub3Bob24gd2lsbCBiZSBvZiBtdWNoIHNlcnZpY2UgdG8gYW4gb3JhdG9yLCBhbHRob3VnaCBoZSByZWdhcmRzIHRoZSBzdHlsZSBvZgp0aGUgZm9ybWVyIGFzIGEgdmVyaXRhYmxlIGNhbGwgdG8gYXJtcyBhbmQgY29uc2lkZXJzCnRoYXQgdGhlIGxhdHRlciB3YXMgdGhlIG1vdXRocGllY2Ugb2YgdGhlIE11c2VzLgpJdCBpcywgaG93ZXZlciwgb2NjYXNpb25hbGx5IHBlcm1pc3NpYmxlIHRvIGJvcnJvdyB0aGUKZ3JhY2VzIG9mIGhpc3RvcnkgdG8gZW1iZWxsaXNoIG91ciBkaWdyZXNzaW9ucywgcHJvdmlkZWQgYWx3YXlzIHRoYXQgd2UgcmVtZW1iZXIgdGhhdCBpbiB0aG9zZSBwb3J0aW9ucwpvZiBvdXIgc3BlZWNoIHdoaWNoIGRlYWwgd2l0aCB0aGUgYWN0dWFsIHF1ZXN0aW9uCmF0IGlzc3VlIHdlIHJlcXVpcmUgbm90IHRoZSBzd2VsbGluZyB0aGV3cyBvZiB0aGUKYXRobGV0ZSwgYnV0IHRoZSB3aXJ5IHNpbmV3cyBvZiB0aGUgc29sZGllciwgYW5kIHRoYXQKdGhlIGNsb2FrIG9mIG1hbnkgY29sb3VycyB3aGljaCBEZW1ldHJpdXMgb2YKUGhhbGVydW08bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiDCpyA4MC48L25vdGU+IHdhcyBzYWlkIHRvIHdlYXIgaXMgYnV0IGxpdHRsZSBzdWl0ZWQgdG8KdGhlIGR1c3QgYW5kIGhlYXQgb2YgdGhlIGZvcnVtLjxtaWxlc3RvbmUgbj0iMzQiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlIGlzLCBpdCBpcyB0cnVlLAoKPHBiIGlkPSJwLjIzIiAvPgoKYW5vdGhlciBhZHZhbnRhZ2Ugd2hpY2ggd2UgbWF5IGRlcml2ZSBmcm9tIHRoZQpoaXN0b3JpYW5zLCB3aGljaCwgaG93ZXZlciwgZGVzcGl0ZSBpdHMgZ3JlYXQgaW1wb3J0YW5jZSwgaGFzIG5vIGJlYXJpbmcgb24gb3VyIHByZXNlbnQgdG9waWM7IEkgcmVmZXIgdG8KdGhlIGFkdmFudGFnZSBkZXJpdmVkIGZyb20gdGhlIGtub3dsZWRnZSBvZiBoaXN0b3JpY2FsIGZhY3RzIGFuZCBwcmVjZWRlbnRzLCB3aXRoIHdoaWNoIGl0IGlzIG1vc3QgZGVzaXJhYmxlIHRoYXQgb3VyIG9yYXRvciBzaG91bGQgYmUgYWNxdWFpbnRlZDsgZm9yIHN1Y2gKa25vd2xlZGdlIHdpbGwgc2F2ZSBoaW0gZnJvbSBoYXZpbmcgdG8gYWNxdWlyZSBhbGwKaGlzIGV2aWRlbmNlIGZyb20gaGlzIGNsaWVudCBhbmQgd2lsbCBlbmFibGUgaGltIHRvCmRyYXcgbXVjaCB0aGF0IGlzIGdlcm1hbmUgdG8gaGlzIGNhc2UgZnJvbSB0aGUKY2FyZWZ1bCBzdHVkeSBvZiBhbnRpcXVpdHkuIEFuZCBzdWNoIGFyZ3VtZW50cyB3aWxsCmJlIGFsbCB0aGUgbW9yZSBlZmZlY3RpdmUsIHNpbmNlIHRoZXkgYWxvbmUgd2lsbCBiZQphYm92ZSBzdXNwaWNpb24gb2YgcHJlanVkaWNlIG9yIHBhcnRpYWxpdHkuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['10.1.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5IaXN0b3J5LCBhbHNvLCBtYXkgcHJvdmlkZSB0aGUgb3JhdG9yIHdpdGggYSBudXRyaW1lbnQgd2hpY2ggd2UgbWF5IGNvbXBhcmUgdG8gc29tZSByaWNoIGFuZApwbGVhc2FudCBqdWljZS4gQnV0IHdoZW4gd2UgcmVhZCBpdCwgd2UgbXVzdAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjEiIC8+CgpyZW1lbWJlciB0aGF0IG1hbnkgb2YgdGhlIGV4Y2VsbGVuY2VzIG9mIHRoZSBoaXN0b3JpYW4KcmVxdWlyZSB0byBiZSBzaHVubmVkIGJ5IHRoZSBvcmF0b3IuIEZvciBoaXN0b3J5CmhhcyBhIGNlcnRhaW4gYWZmaW5pdHkgdG8gcG9ldHJ5IGFuZCBtYXkgYmUgcmVnYXJkZWQKYXMgYSBraW5kIG9mIHByb3NlIHBvZW0sIHdoaWxlIGl0IGlzIHdyaXR0ZW4gZm9yIHRoZQpwdXJwb3NlIG9mIG5hcnJhdGl2ZSwgbm90IG9mIHByb29mLCBhbmQgZGVzaWduZWQgZnJvbQpiZWdpbm5pbmcgdG8gZW5kIG5vdCBmb3IgaW1tZWRpYXRlIGVmZmVjdCBvciB0aGUKaW5zdGFudCBuZWNlc3NpdGllcyBvZiBmb3JlbnNpYyBzdHJpZmUsIGJ1dCB0byByZWNvcmQKZXZlbnRzIGZvciB0aGUgYmVuZWZpdCBvZiBwb3N0ZXJpdHkgYW5kIHRvIHdpbiBnbG9yeQpmb3IgaXRzIGF1dGhvci4gQ29uc2VxdWVudGx5LCB0byBhdm9pZCBtb25vdG9ueSBvZgpuYXJyYXRpdmUsIGl0IGVtcGxveXMgdW51c3VhbCB3b3JkcyBhbmQgaW5kdWxnZXMgaW4KYSBmcmVlciB1c2Ugb2YgZmlndXJlcy48L3RyYW5zbGF0aW9uPg=="
translation['10.1.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmVmb3JlLCBhcyBJIGhhdmUgYWxyZWFkeQpzYWlkLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5JVi4gaWkuIDQ1Ljwvbm90ZT4gdGhlIGZhbW91cyBicmV2aXR5IG9mIFNhbGx1c3QsIHRoYW4gd2hpY2gKbm90aGluZyBjYW4gYmUgbW9yZSBwbGVhc2luZyB0byB0aGUgbGVpc3VyZWQgZWFyIG9mCnRoZSBzY2hvbGFyLCBpcyBhIHN0eWxlIHRvIGJlIGF2b2lkZWQgYnkgdGhlIG9yYXRvciBpbgp2aWV3IG9mIHRoZSBmYWN0IHRoYXQgaGlzIHdvcmRzIGFyZSBhZGRyZXNzZWQgdG8gYQpqdWRnZSB3aG8gaGFzIGhpcyBtaW5kIG9jY3VwaWVkIGJ5IGEgbnVtYmVyIG9mCnRob3VnaHRzIGFuZCBpcyBhbHNvIGZyZXF1ZW50bHkgdW5lZHVjYXRlZCwgd2hpbGUsCm9uIHRoZSBvdGhlciBoYW5kLCB0aGUgbWlsa3kgZnVsbG5lc3Mgb2YgTGl2eSBpcwpoYXJkbHkgb2YgYSBraW5kIHRvIGluc3RydWN0IGEgbGlzdGVuZXIgd2hvIGxvb2tzIG5vdApmb3IgYmVhdXR5IG9mIGV4cG9zaXRpb24sIGJ1dCBmb3IgdHJ1dGggYW5kIGNyZWRpYmlsaXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['10.1.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5XZSBtdXN0IGFsc28gcmVtZW1iZXIgdGhhdCBDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T3IuPC9oaT4gMzAgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3EuPC9oaT48L25vdGU+IHRoaW5rcyB0aGF0IG5vdApldmVuICdUaHVjeWRpZGNzIG9yIFhlbm9waG9uIHdpbGwgYmUgb2YgbXVjaCBzZXJ2aWNlIHRvIGFuIG9yYXRvciwgYWx0aG91Z2ggaGUgcmVnYXJkcyB0aGUgc3R5bGUgb2YKdGhlIGZvcm1lciBhcyBhIHZlcml0YWJsZSBjYWxsIHRvIGFybXMgYW5kIGNvbnNpZGVycwp0aGF0IHRoZSBsYXR0ZXIgd2FzIHRoZSBtb3V0aHBpZWNlIG9mIHRoZSBNdXNlcy4KSXQgaXMsIGhvd2V2ZXIsIG9jY2FzaW9uYWxseSBwZXJtaXNzaWJsZSB0byBib3Jyb3cgdGhlCmdyYWNlcyBvZiBoaXN0b3J5IHRvIGVtYmVsbGlzaCBvdXIgZGlncmVzc2lvbnMsIHByb3ZpZGVkIGFsd2F5cyB0aGF0IHdlIHJlbWVtYmVyIHRoYXQgaW4gdGhvc2UgcG9ydGlvbnMKb2Ygb3VyIHNwZWVjaCB3aGljaCBkZWFsIHdpdGggdGhlIGFjdHVhbCBxdWVzdGlvbgphdCBpc3N1ZSB3ZSByZXF1aXJlIG5vdCB0aGUgc3dlbGxpbmcgdGhld3Mgb2YgdGhlCmF0aGxldGUsIGJ1dCB0aGUgd2lyeSBzaW5ld3Mgb2YgdGhlIHNvbGRpZXIsIGFuZCB0aGF0CnRoZSBjbG9hayBvZiBtYW55IGNvbG91cnMgd2hpY2ggRGVtZXRyaXVzIG9mClBoYWxlcnVtPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T3IuPC9oaT4gMzAgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3EuPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Y3AuPC9oaT4gwqcgODAuPC9ub3RlPiB3YXMgc2FpZCB0byB3ZWFyIGlzIGJ1dCBsaXR0bGUgc3VpdGVkIHRvCnRoZSBkdXN0IGFuZCBoZWF0IG9mIHRoZSBmb3J1bS48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiDCpyA4MC48L3RyYW5zbGF0aW9uPg=="
translation['10.1.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmUgaXMsIGl0IGlzIHRydWUsCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yMyIgLz4KCmFub3RoZXIgYWR2YW50YWdlIHdoaWNoIHdlIG1heSBkZXJpdmUgZnJvbSB0aGUKaGlzdG9yaWFucywgd2hpY2gsIGhvd2V2ZXIsIGRlc3BpdGUgaXRzIGdyZWF0IGltcG9ydGFuY2UsIGhhcyBubyBiZWFyaW5nIG9uIG91ciBwcmVzZW50IHRvcGljOyBJIHJlZmVyIHRvCnRoZSBhZHZhbnRhZ2UgZGVyaXZlZCBmcm9tIHRoZSBrbm93bGVkZ2Ugb2YgaGlzdG9yaWNhbCBmYWN0cyBhbmQgcHJlY2VkZW50cywgd2l0aCB3aGljaCBpdCBpcyBtb3N0IGRlc2lyYWJsZSB0aGF0IG91ciBvcmF0b3Igc2hvdWxkIGJlIGFjcXVhaW50ZWQ7IGZvciBzdWNoCmtub3dsZWRnZSB3aWxsIHNhdmUgaGltIGZyb20gaGF2aW5nIHRvIGFjcXVpcmUgYWxsCmhpcyBldmlkZW5jZSBmcm9tIGhpcyBjbGllbnQgYW5kIHdpbGwgZW5hYmxlIGhpbSB0bwpkcmF3IG11Y2ggdGhhdCBpcyBnZXJtYW5lIHRvIGhpcyBjYXNlIGZyb20gdGhlCmNhcmVmdWwgc3R1ZHkgb2YgYW50aXF1aXR5LiBBbmQgc3VjaCBhcmd1bWVudHMgd2lsbApiZSBhbGwgdGhlIG1vcmUgZWZmZWN0aXZlLCBzaW5jZSB0aGV5IGFsb25lIHdpbGwgYmUKYWJvdmUgc3VzcGljaW9uIG9mIHByZWp1ZGljZSBvciBwYXJ0aWFsaXR5LjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM1IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBmYWN0IHRoYXQgdGhlcmUgaXMgc28gbXVjaCBmb3Igd2hpY2ggd2UgbXVzdApoYXZlIHJlY291cnNlIHRvIHRoZSBzdHVkeSBvZiB0aGUgcGhpbG9zb3BoZXJzIGlzCnRoZSBmYXVsdCBvZiBvcmF0b3JzIHdobyBoYXZlIGFiYW5kb25lZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPmNwLjwvaGk+IEkgPGhpIHJlbmQ9Iml0YWxpY3MiPlByZWYuPC9oaT4gMTEuPC9ub3RlPiB0byB0aGVtCnRoZSBmdWxsZXN0IHBvcnRpb24gb2YgdGhlaXIgb3duIHRhc2suIFRoZSBTdG9pY3MKbW9yZSBlc3BlY2lhbGx5IGRpc2NvdXJzZSBhbmQgYXJndWUgd2l0aCBncmVhdAprZWVubmVzcyBvbiB3aGF0IGlzIGp1c3QsIGhvbm91cmFibGUsIGV4cGVkaWVudAphbmQgdGhlIHJldmVyc2UsIGFzIHdlbGwgYXMgb24gdGhlIHByb2JsZW1zIG9mCnRoZW9sb2d5LCB3aGlsZSB0aGUgU29jcmF0aWNzIGdpdmUgdGhlIGZ1dHVyZSBvcmF0b3IKYSBmaXJzdC1yYXRlIHByZXBhcmF0aW9uIGZvciBmb3JlbnNpYyBkZWJhdGVzIGFuZAp0aGUgZXhhbWluYXRpb24gb2Ygd2l0bmVzc2VzLjxtaWxlc3RvbmUgbj0iMzYiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCB3ZSBtdXN0IHVzZSB0aGUKc2FtZSBjcml0aWNhbCBjYXV0aW9uIGluIHN0dWR5aW5nIHRoZSBwaGlsb3NvcGhlcnMKdGhhdCB3ZSByZXF1aXJlIGluIHJlYWRpbmcgaGlzdG9yeSBvciBwb2V0cnk7IHRoYXQKaXMgdG8gc2F5LCB3ZSBtdXN0IGJlYXIgaW4gbWluZCB0aGF0LCBldmVuIHdoZW4gd2UKYXJlIGRlYWxpbmcgd2l0aCB0aGUgc2FtZSBzdWJqZWN0cywgdGhlcmUgaXMgYSB3aWRlCmRpZmZlcmVuY2UgYmV0d2VlbiBmb3JlbnNpYyBkaXNwdXRlcyBhbmQgcGhpbG9zb3BoaWNhbApkaXNjdXNzaW9ucywgYmV0d2VlbiB0aGUgbGF3LWNvdXJ0cyBhbmQgdGhlIGxlY3R1cmUtcm9vbSwgYmV0d2VlbiB0aGUgcHJlY2VwdHMgb2YgdGhlb3J5IGFuZCB0aGUgcGVyaWxzCm9mIHRoZSBiYXIuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['10.1.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZmFjdCB0aGF0IHRoZXJlIGlzIHNvIG11Y2ggZm9yIHdoaWNoIHdlIG11c3QKaGF2ZSByZWNvdXJzZSB0byB0aGUgc3R1ZHkgb2YgdGhlIHBoaWxvc29waGVycyBpcwp0aGUgZmF1bHQgb2Ygb3JhdG9ycyB3aG8gaGF2ZSBhYmFuZG9uZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Y3AuPC9oaT4gSSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5QcmVmLjwvaGk+IDExLjwvbm90ZT4gdG8gdGhlbQp0aGUgZnVsbGVzdCBwb3J0aW9uIG9mIHRoZWlyIG93biB0YXNrLiBUaGUgU3RvaWNzCm1vcmUgZXNwZWNpYWxseSBkaXNjb3Vyc2UgYW5kIGFyZ3VlIHdpdGggZ3JlYXQKa2Vlbm5lc3Mgb24gd2hhdCBpcyBqdXN0LCBob25vdXJhYmxlLCBleHBlZGllbnQKYW5kIHRoZSByZXZlcnNlLCBhcyB3ZWxsIGFzIG9uIHRoZSBwcm9ibGVtcyBvZgp0aGVvbG9neSwgd2hpbGUgdGhlIFNvY3JhdGljcyBnaXZlIHRoZSBmdXR1cmUgb3JhdG9yCmEgZmlyc3QtcmF0ZSBwcmVwYXJhdGlvbiBmb3IgZm9yZW5zaWMgZGViYXRlcyBhbmQKdGhlIGV4YW1pbmF0aW9uIG9mIHdpdG5lc3Nlcy48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiBJIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlByZWYuPC9oaT4gMTEuPC90cmFuc2xhdGlvbj4="
translation['10.1.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHdlIG11c3QgdXNlIHRoZQpzYW1lIGNyaXRpY2FsIGNhdXRpb24gaW4gc3R1ZHlpbmcgdGhlIHBoaWxvc29waGVycwp0aGF0IHdlIHJlcXVpcmUgaW4gcmVhZGluZyBoaXN0b3J5IG9yIHBvZXRyeTsgdGhhdAppcyB0byBzYXksIHdlIG11c3QgYmVhciBpbiBtaW5kIHRoYXQsIGV2ZW4gd2hlbiB3ZQphcmUgZGVhbGluZyB3aXRoIHRoZSBzYW1lIHN1YmplY3RzLCB0aGVyZSBpcyBhIHdpZGUKZGlmZmVyZW5jZSBiZXR3ZWVuIGZvcmVuc2ljIGRpc3B1dGVzIGFuZCBwaGlsb3NvcGhpY2FsCmRpc2N1c3Npb25zLCBiZXR3ZWVuIHRoZSBsYXctY291cnRzIGFuZCB0aGUgbGVjdHVyZS1yb29tLCBiZXR3ZWVuIHRoZSBwcmVjZXB0cyBvZiB0aGVvcnkgYW5kIHRoZSBwZXJpbHMKb2YgdGhlIGJhci48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5Nb3N0IG9mIG15IHJlYWRlcnMgd2lsbCwgSSB0aGluaywgZGVtYW5kIHRoYXQsCnNpbmNlIEkgYXR0YWNoIHNvIG11Y2ggaW1wb3J0YW5jZSB0byByZWFkaW5nLCBJCnNob3VsZCBpbmNsdWRlIGluIHRoaXMgd29yayBzb21lIGluc3RydWN0aW9ucyBhcyB0bwp3aGF0IGF1dGhvcnMgc2hvdWxkIGJlIHJlYWQgYW5kIHdoYXQgdGhlaXIgc3BlY2lhbAoKPHBiIGlkPSJwLjI1IiAvPgoKZXhjZWxsZW5jZXMgbWF5IGJlLiBUbyBkbyB0aGlzIGluIGRldGFpbCB3b3VsZCBiZQphbiBlbmRsZXNzIHRhc2suPG1pbGVzdG9uZSBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz4gUmVtZW1iZXIgdGhhdCBDaWNlcm8gaW4gaGlzCjxoaSByZW5kPSJpdGFsaWNzIj5CcnV0dXMsPC9oaT4gYWZ0ZXIgd3JpdGluZyBwYWdlcyBhbmQgcGFnZXMgb24gdGhlIHN1YmplY3QKb2YgUm9tYW4gb3JhdG9ycyBhbG9uZSwgc2F5cyBub3RoaW5nIG9mIGhpcyBvd24gY29udGVtcG9yYXJpZXMgd2l0aCB0aGUgZXhjZXB0aW9uIG9mIENhZXNhciBhbmQgTWFyY2VsbHVzLiBXaGF0IGxpbWl0LCB0aGVuLCB3b3VsZCB0aGVyZSBiZSB0byBteQpsYWJvdXJzIGlmIEkgd2VyZSB0byBhdHRlbXB0IHRvIGRlYWwgd2l0aCB0aGVtIGFuZAp3aXRoIHRoZWlyIHN1Y2Nlc3NvcnMgYW5kIGFsbCB0aGUgb3JhdG9ycyBvZiBHcmVlY2UgYXMKd2VsbD88bWlsZXN0b25lIG49IjM5IiB1bml0PSJzZWN0aW9uIiAvPiBObywgaXQgd2FzIGEgc2FmZXIgY291cnNlIHRoYXQgTGl2eSBhZG9wdGVkCmluIGhpcyBsZXR0ZXIgdG8gaGlzIHNvbiwgd2hlcmUgaGUgd3JpdGVzIHRoYXQgaGUgc2hvdWxkCnJlYWQgQ2ljZXJvIGFuZCBEZW1vc3RoZW5lcyBhbmQgdGhlbiBzdWNoIG9yYXRvcnMKYXMgbW9zdCByZXNlbWJsZWQgdGhlbS4gU3RpbGwsPG1pbGVzdG9uZSBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz4gSSBtdXN0IG5vdCBjb25jZWFsCm15IG93biBwZXJzb25hbCBjb252aWN0aW9ucyBvbiB0aGlzIHN1YmplY3QuIEkgYmVsaWV2ZQp0aGF0IHRoZXJlIGFyZSBmZXcsIGluZGVlZCBzY2FyY2VseSBhIHNpbmdsZSBvbmUgb2YKdGhvc2UgYXV0aG9ycyB3aG8gaGF2ZSBzdG9vZCB0aGUgdGVzdCBvZiB0aW1lIHdobyB3aWxsCm5vdCBiZSBvZiBzb21lIHVzZSBvciBvdGhlciB0byBqdWRpY2lvdXMgc3R1ZGVudHMsIHNpbmNlCmV2ZW4gQ2ljZXJvIGhpbXNlbGYgYWRtaXRzIHRoYXQgaGUgb3dlcyBhIGdyZWF0IGRlYnQKZXZlbiB0byB0aGUgZWFybGllc3Qgd3JpdGVycywgd2hvIGZvciBhbGwgdGhlaXIgdGFsZW50CndlcmUgdG90YWxseSBkZXZvaWQgb2YgYXJ0LjxtaWxlc3RvbmUgbj0iNDEiIHVuaXQ9InNlY3Rpb24iIC8+IEFuZCBteSBvcGluaW9uIGFib3V0CnRoZSBtb2Rlcm5zIGlzIG11Y2ggdGhlIHNhbWUuIEZvciBob3cgZmV3IG9mIHRoZW0KYXJlIHNvIHV0dGVybHkgY3JhenkgYXMgbm90IHRvIGhhdmUgdGhlIGxlYXN0IHNoYWRvdwpvZiBob3BlIHRoYXQgc29tZSBwb3J0aW9uIG9yIG90aGVyIG9mIHRoZWlyIHdvcmsgbWF5CmhhdmUgY2xhaW1zIHVwb24gdGhlIG1lbW9yeSBvZiBwb3N0ZXJpdHk/IElmIHRoZXJlCmlzIHN1Y2ggYW4gb25lLCBoZSB3aWxsIGJlIGRldGVjdGVkIGJlZm9yZSB3ZSBoYXZlCnBlcnVzZWQgbWFueSBsaW5lcyBvZiBoaXMgd3JpdGluZ3MsIGFuZCB3ZSBzaGFsbAplc2NhcGUgZnJvbSBoaW0gYmVmb3JlIHRoZSBleHBlcmltZW50IG9mIHJlYWRpbmcKaGltIGhhcyBjb3N0IHVzIGFueSBzZXJpb3VzIGxvc3Mgb2YgdGltZS48bWlsZXN0b25lIG49IjQyIiB1bml0PSJzZWN0aW9uIiAvPiBPbiB0aGUKb3RoZXIgaGFuZCwgbm90IGV2ZXJ5dGhpbmcgdGhhdCBoYXMgc29tZSBiZWFyaW5nIG9uCnNvbWUgZGVwYXJ0bWVudCBvZiBrbm93bGVkZ2Ugd2lsbCBuZWNlc3NhcmlseSBiZSBvZgpzZXJ2aWNlIGZvciB0aGUgZm9ybWF0aW9uIG9mIHN0eWxlLCB3aXRoIHdoaWNoIHdlIGFyZQpmb3IgdGhlIG1vbWVudCBjb25jZXJuZWQuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['10.1.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5Nb3N0IG9mIG15IHJlYWRlcnMgd2lsbCwgSSB0aGluaywgZGVtYW5kIHRoYXQsCnNpbmNlIEkgYXR0YWNoIHNvIG11Y2ggaW1wb3J0YW5jZSB0byByZWFkaW5nLCBJCnNob3VsZCBpbmNsdWRlIGluIHRoaXMgd29yayBzb21lIGluc3RydWN0aW9ucyBhcyB0bwp3aGF0IGF1dGhvcnMgc2hvdWxkIGJlIHJlYWQgYW5kIHdoYXQgdGhlaXIgc3BlY2lhbAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjUiIC8+CgpleGNlbGxlbmNlcyBtYXkgYmUuIFRvIGRvIHRoaXMgaW4gZGV0YWlsIHdvdWxkIGJlCmFuIGVuZGxlc3MgdGFzay48L3RyYW5zbGF0aW9uPg=="
translation['10.1.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz4gUmVtZW1iZXIgdGhhdCBDaWNlcm8gaW4gaGlzCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkJydXR1cyw8L2hpPiBhZnRlciB3cml0aW5nIHBhZ2VzIGFuZCBwYWdlcyBvbiB0aGUgc3ViamVjdApvZiBSb21hbiBvcmF0b3JzIGFsb25lLCBzYXlzIG5vdGhpbmcgb2YgaGlzIG93biBjb250ZW1wb3JhcmllcyB3aXRoIHRoZSBleGNlcHRpb24gb2YgQ2Flc2FyIGFuZCBNYXJjZWxsdXMuIFdoYXQgbGltaXQsIHRoZW4sIHdvdWxkIHRoZXJlIGJlIHRvIG15CmxhYm91cnMgaWYgSSB3ZXJlIHRvIGF0dGVtcHQgdG8gZGVhbCB3aXRoIHRoZW0gYW5kCndpdGggdGhlaXIgc3VjY2Vzc29ycyBhbmQgYWxsIHRoZSBvcmF0b3JzIG9mIEdyZWVjZSBhcwp3ZWxsPzwvdHJhbnNsYXRpb24+"
translation['10.1.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz4gTm8sIGl0IHdhcyBhIHNhZmVyIGNvdXJzZSB0aGF0IExpdnkgYWRvcHRlZAppbiBoaXMgbGV0dGVyIHRvIGhpcyBzb24sIHdoZXJlIGhlIHdyaXRlcyB0aGF0IGhlIHNob3VsZApyZWFkIENpY2VybyBhbmQgRGVtb3N0aGVuZXMgYW5kIHRoZW4gc3VjaCBvcmF0b3JzCmFzIG1vc3QgcmVzZW1ibGVkIHRoZW0uIFN0aWxsLDwvdHJhbnNsYXRpb24+"
translation['10.1.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz4gSSBtdXN0IG5vdCBjb25jZWFsCm15IG93biBwZXJzb25hbCBjb252aWN0aW9ucyBvbiB0aGlzIHN1YmplY3QuIEkgYmVsaWV2ZQp0aGF0IHRoZXJlIGFyZSBmZXcsIGluZGVlZCBzY2FyY2VseSBhIHNpbmdsZSBvbmUgb2YKdGhvc2UgYXV0aG9ycyB3aG8gaGF2ZSBzdG9vZCB0aGUgdGVzdCBvZiB0aW1lIHdobyB3aWxsCm5vdCBiZSBvZiBzb21lIHVzZSBvciBvdGhlciB0byBqdWRpY2lvdXMgc3R1ZGVudHMsIHNpbmNlCmV2ZW4gQ2ljZXJvIGhpbXNlbGYgYWRtaXRzIHRoYXQgaGUgb3dlcyBhIGdyZWF0IGRlYnQKZXZlbiB0byB0aGUgZWFybGllc3Qgd3JpdGVycywgd2hvIGZvciBhbGwgdGhlaXIgdGFsZW50CndlcmUgdG90YWxseSBkZXZvaWQgb2YgYXJ0LjwvdHJhbnNsYXRpb24+"
translation['10.1.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIG15IG9waW5pb24gYWJvdXQKdGhlIG1vZGVybnMgaXMgbXVjaCB0aGUgc2FtZS4gRm9yIGhvdyBmZXcgb2YgdGhlbQphcmUgc28gdXR0ZXJseSBjcmF6eSBhcyBub3QgdG8gaGF2ZSB0aGUgbGVhc3Qgc2hhZG93Cm9mIGhvcGUgdGhhdCBzb21lIHBvcnRpb24gb3Igb3RoZXIgb2YgdGhlaXIgd29yayBtYXkKaGF2ZSBjbGFpbXMgdXBvbiB0aGUgbWVtb3J5IG9mIHBvc3Rlcml0eT8gSWYgdGhlcmUKaXMgc3VjaCBhbiBvbmUsIGhlIHdpbGwgYmUgZGV0ZWN0ZWQgYmVmb3JlIHdlIGhhdmUKcGVydXNlZCBtYW55IGxpbmVzIG9mIGhpcyB3cml0aW5ncywgYW5kIHdlIHNoYWxsCmVzY2FwZSBmcm9tIGhpbSBiZWZvcmUgdGhlIGV4cGVyaW1lbnQgb2YgcmVhZGluZwpoaW0gaGFzIGNvc3QgdXMgYW55IHNlcmlvdXMgbG9zcyBvZiB0aW1lLjwvdHJhbnNsYXRpb24+"
translation['10.1.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz4gT24gdGhlCm90aGVyIGhhbmQsIG5vdCBldmVyeXRoaW5nIHRoYXQgaGFzIHNvbWUgYmVhcmluZyBvbgpzb21lIGRlcGFydG1lbnQgb2Yga25vd2xlZGdlIHdpbGwgbmVjZXNzYXJpbHkgYmUgb2YKc2VydmljZSBmb3IgdGhlIGZvcm1hdGlvbiBvZiBzdHlsZSwgd2l0aCB3aGljaCB3ZSBhcmUKZm9yIHRoZSBtb21lbnQgY29uY2VybmVkLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QmVmb3JlLCBob3dldmVyLCBJIGJlZ2luIHRvIHNwZWFrIG9mIGluZGl2aWR1YWwKYXV0aG9ycywgSSBtdXN0IG1ha2UgYSBmZXcgZ2VuZXJhbCByZW1hcmtzIGFib3V0CnRoZSB2YXJpZXR5IG9mIGp1ZGdtZW50cyB3aGljaCBoYXZlIGJlZW4gcGFzc2VkCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yNyIgLz4KCnVwb24gdGhlbS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDMiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciB0aGVyZSBhcmUgc29tZSB3aG8gdGhpbmsgdGhhdCBvbmx5CnRoZSBhbmNpZW50cyBzaG91bGQgYmUgcmVhZCBhbmQgaG9sZCB0aGF0IHRoZXkgYXJlCnRoZSBzb2xlIHBvc3Nlc3NvcnMgb2YgbmF0dXJhbCBlbG9xdWVuY2UgYW5kIG1hbmx5CnZpZ291cjsgd2hpbGUgb3RoZXJzIHJldmVsIGluIHRoZSB2b2x1cHR1b3VzIGFuZAphZmZlY3RlZCBzdHlsZSBvZiB0by1kYXksIGluIHdoaWNoIGV2ZXJ5dGhpbmcgaXMgZGVzaWduZWQgdG8gY2hhcm0gdGhlIGVhcnMgb2YgdGhlIHVuZWR1Y2F0ZWQgbWFqb3JpdHkuCjxtaWxlc3RvbmUgbj0iNDQiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIGV2ZW4gaWYgd2UgdHVybiB0byB0aG9zZSB3aG8gZGVzaXJlIHRvIGZvbGxvdwp0aGUgY29ycmVjdCBtZXRob2RzIG9mIHN0eWxlLCB3ZSBzaGFsbCBmaW5kIHRoYXQgc29tZQp0aGluayB0aGF0IHRoZSBvbmx5IGhlYWx0aHkgYW5kIGdlbnVpbmVseSBBdHRpYyBzdHlsZQppcyB0byBiZSBmb3VuZCBpbiBsYW5ndWFnZSB3aGljaCBpcyByZXN0cmFpbmVkIGFuZApzaW1wbGUgYW5kIGFzIGxpdHRsZSByZW1vdmVkIGFzIHBvc3NpYmxlIGZyb20gdGhlCnNwZWVjaCBvZiBldmVyeSBkYXksIHdoaWxlIG90aGVycyBhcmUgYXR0cmFjdGVkIGJ5IGEKc3R5bGUgd2hpY2ggaXMgbW9yZSBlbGV2YXRlZCBhbmQgZnVsbCBvZiBlbmVyZ3kgYW5kCmFuaW1hdGlvbi4gVGhlcmUgYXJlLCB0b28sIG5vdCBhIGZldyB3aG8gYXJlIGRldm90ZWQgdG8gYSBnZW50bGUsIGVsZWdhbnQgYW5kIGhhcm1vbmlvdXMgc3R5bGUuIE9mCnRoZXNlIGRpZmZlcmVudCBpZGVhbHMgSSBzaGFsbCBzcGVhayBpbiBncmVhdGVyIGRldGFpbCwKd2hlbiBJIGNvbWUgdG8gZGlzY3VzcyB0aGUgcXVlc3Rpb24gb2YgdGhlIHBhcnRpY3VsYXIKc3R5bGVzIGJlc3Qgc3VpdGVkIHRvIG9yYXRvcnkuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5YSS4geC4gNjMgPGhpIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPjwvbm90ZT4gRm9yIHRoZSBtb21lbnQgSQpzaGFsbCByZXN0cmljdCBteXNlbGYgdG8gdG91Y2hpbmcgYnJpZWZseSBvbiB3aGF0IHRoZQpzdHVkZW50IHdobyBkZXNpcmVzIHRvIGNvbnNvbGlkYXRlIGhpcyBwb3dlcnMgb2YKc3BlYWtpbmcgc2hvdWxkIHNlZWsgaW4gaGlzIHJlYWRpbmcgYW5kIHRvIHdoYXQga2luZApvZiByZWFkaW5nIGhlIHNob3VsZCBkZXZvdGUgaGlzIGF0dGVudGlvbi4gTXkgZGVzaWduIGlzIG1lcmVseSB0byBzZWxlY3QgYSBmZXcgb2YgdGhlIG1vc3QgZW1pbmVudAphdXRob3JzIGZvciBjb25zaWRlcmF0aW9uLjxtaWxlc3RvbmUgbj0iNDUiIHVuaXQ9InNlY3Rpb24iIC8+IEl0IHdpbGwgYmUgZWFzeSBmb3IgdGhlCnN0dWRlbnQgdG8gZGVjaWRlIGZvciBoaW1zZWxmIHdoYXQgYXV0aG9ycyBtb3N0Cm5lYXJseSByZXNlbWJsZSB0aGVzZTogY29uc2VxdWVudGx5LCBubyBvbmUgd2lsbApoYXZlIGFueSByaWdodCB0byBjb21wbGFpbiBpZiBJIHBhc3Mgb3ZlciBzb21lIG9mIGhpcwpmYXZvdXJpdGVzLiBGb3IgSSB3aWxsIHJlYWRpbHkgYWRtaXQgdGhhdCB0aGVyZSBhcmUKbW9yZSBhdXRob3JzIHdvcnRoIHJlYWRpbmcgdGhhbiB0aG9zZSB3aG9tIEkgcHJvcG9zZSB0byBtZW50aW9uLiBCdXQgSSB3aWxsIG5vdyBwcm9jZWVkIHRvIGRlYWwKd2l0aCB0aGUgdmFyaW91cyBjbGFzc2VzIG9mIHJlYWRpbmcgd2hpY2ggSSBjb25zaWRlcgptb3N0IHN1aXRhYmxlIGZvciB0aG9zZSB3aG8gYXJlIGFtYml0aW91cyBvZiBiZWNvbWluZwpvcmF0b3JzLjwvcD4KPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjciIC8+Cgp1cG9uIHRoZW0uPC90cmFuc2xhdGlvbj4="
translation['10.1.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZXJlIGFyZSBzb21lIHdobyB0aGluayB0aGF0IG9ubHkKdGhlIGFuY2llbnRzIHNob3VsZCBiZSByZWFkIGFuZCBob2xkIHRoYXQgdGhleSBhcmUKdGhlIHNvbGUgcG9zc2Vzc29ycyBvZiBuYXR1cmFsIGVsb3F1ZW5jZSBhbmQgbWFubHkKdmlnb3VyOyB3aGlsZSBvdGhlcnMgcmV2ZWwgaW4gdGhlIHZvbHVwdHVvdXMgYW5kCmFmZmVjdGVkIHN0eWxlIG9mIHRvLWRheSwgaW4gd2hpY2ggZXZlcnl0aGluZyBpcyBkZXNpZ25lZCB0byBjaGFybSB0aGUgZWFycyBvZiB0aGUgdW5lZHVjYXRlZCBtYWpvcml0eS4KPC90cmFuc2xhdGlvbj4="
translation['10.1.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZXZlbiBpZiB3ZSB0dXJuIHRvIHRob3NlIHdobyBkZXNpcmUgdG8gZm9sbG93CnRoZSBjb3JyZWN0IG1ldGhvZHMgb2Ygc3R5bGUsIHdlIHNoYWxsIGZpbmQgdGhhdCBzb21lCnRoaW5rIHRoYXQgdGhlIG9ubHkgaGVhbHRoeSBhbmQgZ2VudWluZWx5IEF0dGljIHN0eWxlCmlzIHRvIGJlIGZvdW5kIGluIGxhbmd1YWdlIHdoaWNoIGlzIHJlc3RyYWluZWQgYW5kCnNpbXBsZSBhbmQgYXMgbGl0dGxlIHJlbW92ZWQgYXMgcG9zc2libGUgZnJvbSB0aGUKc3BlZWNoIG9mIGV2ZXJ5IGRheSwgd2hpbGUgb3RoZXJzIGFyZSBhdHRyYWN0ZWQgYnkgYQpzdHlsZSB3aGljaCBpcyBtb3JlIGVsZXZhdGVkIGFuZCBmdWxsIG9mIGVuZXJneSBhbmQKYW5pbWF0aW9uLiBUaGVyZSBhcmUsIHRvbywgbm90IGEgZmV3IHdobyBhcmUgZGV2b3RlZCB0byBhIGdlbnRsZSwgZWxlZ2FudCBhbmQgaGFybW9uaW91cyBzdHlsZS4gT2YKdGhlc2UgZGlmZmVyZW50IGlkZWFscyBJIHNoYWxsIHNwZWFrIGluIGdyZWF0ZXIgZGV0YWlsLAp3aGVuIEkgY29tZSB0byBkaXNjdXNzIHRoZSBxdWVzdGlvbiBvZiB0aGUgcGFydGljdWxhcgpzdHlsZXMgYmVzdCBzdWl0ZWQgdG8gb3JhdG9yeS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+WEkuIHguIDYzIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPjwvbm90ZT4gRm9yIHRoZSBtb21lbnQgSQpzaGFsbCByZXN0cmljdCBteXNlbGYgdG8gdG91Y2hpbmcgYnJpZWZseSBvbiB3aGF0IHRoZQpzdHVkZW50IHdobyBkZXNpcmVzIHRvIGNvbnNvbGlkYXRlIGhpcyBwb3dlcnMgb2YKc3BlYWtpbmcgc2hvdWxkIHNlZWsgaW4gaGlzIHJlYWRpbmcgYW5kIHRvIHdoYXQga2luZApvZiByZWFkaW5nIGhlIHNob3VsZCBkZXZvdGUgaGlzIGF0dGVudGlvbi4gTXkgZGVzaWduIGlzIG1lcmVseSB0byBzZWxlY3QgYSBmZXcgb2YgdGhlIG1vc3QgZW1pbmVudAphdXRob3JzIGZvciBjb25zaWRlcmF0aW9uLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPjwvdHJhbnNsYXRpb24+"
translation['10.1.45'] = ""
translation['10.1.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz5JIHNoYWxsLCBJIHRoaW5rLCBiZSByaWdodCBpbiBmb2xsb3dpbmcgdGhlIHByaW5jaXBsZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjkiIC8+CgpsYWlkIGRvd24gYnkgQXJhdHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkFyYXQuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlBoYWVuLiAxLjwvaGk+PC9ub3RlPiBpbiB0aGUgbGluZSwgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+UGhhZW4uIDEuPC9oaT48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5XaXRoIEpvdmUgbGV0CnVzIGJlZ2luLDwvcXVvdGU+IGFuZCBpbiBiZWdpbm5pbmcgd2l0aCBIb21lci4gSGUgaXMgbGlrZQpoaXMgb3duIGNvbmNlcHRpb24gb2YgT2NlYW4sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPklsLjwvaGk+IHh4aS4gMTk2Ljwvbm90ZT4gd2hpY2ggaGUgZGVzY3JpYmVzIGFzCnRoZSBzb3VyY2Ugb2YgZXZlcnkgc3RyZWFtIGFuZCByaXZlcjsgZm9yIGhlIGhhcwpnaXZlbiB1cyBhIG1vZGVsIGFuZCBhbiBpbnNwaXJhdGlvbiBmb3IgZXZlcnkKZGVwYXJ0bWVudCBvZiBlbG9xdWVuY2UuIEl0IHdpbGwgYmUgZ2VuZXJhbGx5IGFkbWl0dGVkIHRoYXQgbm8gb25lIGhhcyBldmVyIHN1cnBhc3NlZCBoaW0gaW4gdGhlCnN1YmxpbWl0eSB3aXRoIHdoaWNoIGhlIGludmVzdHMgZ3JlYXQgdGhlbWVzIG9yIHRoZQpwcm9wcmlldHkgd2l0aCB3aGljaCBoZSBoYW5kbGVzIHNtYWxsLiBIZSBpcyBhdApvbmNlIGx1eHVyaWFudCBhbmQgY29uY2lzZSwgc3ByaWdodGx5IGFuZCBzZXJpb3VzLApyZW1hcmthYmxlIGF0IG9uY2UgZm9yIGhpcyBmdWxsbmVzcyBhbmQgaGlzIGJyZXZpdHksCmFuZCBzdXByZW1lIG5vdCBtZXJlbHkgZm9yIHBvZXRpYywgYnV0IGZvciBvcmF0b3JpY2FsCnBvd2VyIGFzIHdlbGwuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SWwuPC9oaT4geHhpLiAxOTYuPC90cmFuc2xhdGlvbj4="
translation['10.1.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yLCB0byBzYXkgbm90aGluZyBvZiBoaXMgZWxvcXVlbmNlLAp3aGljaCBoZSBzaG93cyBpbiBwcmFpc2UsIGV4aG9ydGF0aW9uIGFuZCBjb25zb2xhdGlvbiwgZG8gbm90IHRoZSBuaW50aCBib29rIGNvbnRhaW5pbmcgdGhlIGVtYmFzc3kKdG8gQWNoaWxsZXMsIHRoZSBmaXJzdCBkZXNjcmliaW5nIHRoZSBxdWFycmVsIGJldHdlZW4KdGhlIGNoaWVmcywgb3IgdGhlIHNwZWVjaGVzIGRlbGl2ZXJlZCBieSB0aGUgY291bnNlbGxvcnMgaW4gdGhlIHNlY29uZCwgZGlzcGxheSBhbGwgdGhlIHJ1bGVzIG9mIGFydAp0byBiZSBmb2xsb3dlZCBpbiBmb3JlbnNpYyBvciBkZWxpYmVyYXRpdmUgb3JhdG9yeT8KPC90cmFuc2xhdGlvbj4="
translation['10.1.48'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0ic2VjdGlvbiIgLz5BcyByZWdhcmRzIHRoZSBlbW90aW9ucywgdGhlcmUgY2FuIGJlIG5vIG9uZSBzbyBpbGxlZHVjYXRlZCBhcyB0byBkZW55IHRoYXQgdGhlIHBvZXQgd2FzIHRoZSBtYXN0ZXIgb2YgYWxsLAp0ZW5kZXIgYW5kIHZlaGVtZW50IGFsaWtlLiBBZ2FpbiwgaW4gdGhlIGZldyBsaW5lcwp3aXRoIHdoaWNoIGhlIGludHJvZHVjZXMgYm90aCBvZiBoaXMgZXBpY3MsIGhhcyBoZQpub3QsIEkgd2lsbCBub3Qgc2F5IG9ic2VydmVkLCBidXQgYWN0dWFsbHkgZXN0YWJsaXNoZWQKdGhlIGxhdyB3aGljaCBzaG91bGQgZ292ZXJuIHRoZSBjb21wb3NpdGlvbiBvZiB0aGUKZXhvcmRpdW0/IEZvciwgYnkgaGlzIGludm9jYXRpb24gb2YgdGhlIGdvZGRlc3NlcwpiZWxpZXZlZCB0byBwcmVzaWRlIG92ZXIgcG9ldHJ5IGhlIHdpbnMgdGhlIGdvb2R3aWxsCm9mIGhpcyBhdWRpZW5jZSwgYnkgaGlzIHN0YXRlbWVudCBvZiB0aGUgZ3JlYXRuZXNzCm9mIGhpcyB0aGVtZXMgaGUgZXhjaXRlcyB0aGVpciBhdHRlbnRpb24gYW5kIHJlbmRlcnMKdGhlbSByZWNlcHRpdmUgYnkgdGhlIGJyaWVmbmVzcyBvZiBoaXMgc3VtbWFyeS4KPC90cmFuc2xhdGlvbj4="
translation['10.1.49'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OSIgdW5pdD0ic2VjdGlvbiIgLz5XaG8gY2FuIG5hcnJhdGUgbW9yZSBicmllZmx5IHRoYW4gdGhlIGhlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+QW50aWxvY2h1cywgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SWwuPC9oaT4geHZpaWkuIDE4Ljwvbm90ZT4gd2hvCmJyaW5ncyB0aGUgbmV3cyBvZiBQYXRyb2NsdXMnIGRlYXRoLCBvciBtb3JlIHZpdmlkbHkKdGhhbiBoZTxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPklsLjwvaGk+IHh2aWlpLiAxOC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+UGhvZW5peCwgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SWwuPC9oaT4gaXguIDUyOS48L25vdGU+IHdobyBkZXNjcmliZXMgdGhlIGJhdHRsZSBiZXR3ZWVuIHRoZQpDdXJldGVzIGFuZCB0aGUgQWV0b2xpYW5zPyBUaGVuIGNvbnNpZGVyIGhpcwoKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SWwuPC9oaT4gaXguIDUyOS48cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4zMSIgLz4KCnNpbWlsZXMsIGhpcyBhbXBsaWZpY2F0aW9ucywgaGlzIGlsbHVzdHJhdGlvbnMsIGRpZ3Jlc3Npb25zLCBpbmRpY2F0aW9ucyBvZiBmYWN0LCBpbmZlcmVuY2VzLCBhbmQgYWxsIHRoZQpvdGhlciBtZXRob2RzIG9mIHByb29mIGFuZCByZWZ1dGF0aW9uIHdoaWNoIGhlCmVtcGxveXMuIFRoZXkgYXJlIHNvIG51bWVyb3VzIHRoYXQgdGhlIG1ham9yaXR5Cm9mIHdyaXRlcnMgb24gdGhlIHByaW5jaXBsZXMgb2YgcmhldG9yaWMgaGF2ZSBnb25lIHRvCmhpcyB3b3JrcyBmb3IgZXhhbXBsZXMgb2YgYWxsIHRoZXNlIHRoaW5ncy48L3RyYW5zbGF0aW9uPg=="
translation['10.1.50'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIGFzCmZvciBwZXJvcmF0aW9ucywgd2hhdCBjYW4gZXZlciBiZSBlcXVhbCB0byB0aGUgcHJheWVycwp3aGljaCBQcmlhbSBhZGRyZXNzZXMgdG8gQWNoaWxsZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SWwuPC9oaT4geHhpdi4gNDg2IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPjwvbm90ZT4gd2hlbiBoZSBjb21lcwp0byBiZWcgZm9yIHRoZSBib2R5IG9mIGhpcyBzb24/IEFnYWluLCBkb2VzIGhlIG5vdAp0cmFuc2NlbmQgdGhlIGxpbWl0cyBvZiBodW1hbiBnZW5pdXMgaW4gaGlzIGNob2ljZQpvZiB3b3JkcywgaGlzIHJlZmxleGlvbnMsIGZpZ3VyZXMsIGFuZCB0aGUgYXJyYW5nZW1lbnQKb2YgaGlzIHdob2xlIHdvcmssIHdpdGggdGhlIHJlc3VsdCB0aGF0IGl0IHJlcXVpcmVzIGEKcG93ZXJmdWwgbWluZCwgSSB3aWxsIG5vdCBzYXkgdG8gaW1pdGF0ZSwgZm9yIHRoYXQgaXMKaW1wb3NzaWJsZSwgYnV0IGV2ZW4gdG8gYXBwcmVjaWF0ZSBoaXMgZXhjZWxsZW5jZXM/CjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPklsLjwvaGk+IHh4aXYuIDQ4NiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zcXEuPC9oaT48L3RyYW5zbGF0aW9uPg=="
translation['10.1.51'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaGUgaGFzIGluIHRydXRoIG91dGRpc3RhbmNlZCBhbGwgdGhhdCBoYXZlIGNvbWUKYWZ0ZXIgaGltIGluIGV2ZXJ5IGRlcGFydG1lbnQgb2YgZWxvcXVlbmNlLCBhYm92ZQphbGwsIGhlIGhhcyBvdXRzdHJpcHBlZCBhbGwgb3RoZXIgd3JpdGVycyBvZiBlcGljLCB0aGUKY29udHJhc3QgaW4gdGhlaXIgY2FzZSBiZWluZyBlc3BlY2lhbGx5IHN0cmlraW5nIG93aW5nCnRvIHRoZSBzaW1pbGFyaXR5IG9mIHRoZSBtYXRlcmlhbCB3aXRoIHdoaWNoIHRoZXkKZGVhbC48L3RyYW5zbGF0aW9uPg=="
translation['10.1.52'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MiIgdW5pdD0ic2VjdGlvbiIgLz4gSGVzaW9kIHJhcmVseSByaXNlcyB0byBhbnkgaGVpZ2h0LCB3aGlsZSBhCmdyZWF0IHBhcnQgb2YgaGlzIHdvcmtzIGlzIGZpbGxlZCBhbG1vc3QgZW50aXJlbHkgd2l0aApuYW1lczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5Fc3BlY2lhbGx5IHRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5UaGVvZ29ueS48L2hpPjwvbm90ZT46IG5vbmUgdGhlIGxlc3MsIGhpcyBtYXhpbXMgb2YgbW9yYWwgd2lzZG9tCnByb3ZpZGUgYSB1c2VmdWwgbW9kZWwsIHRoZSBzbW9vdGggZmxvdyBvZiBoaXMKd29yZHMgYW5kIHN0cnVjdHVyZSBtZXJpdCBvdXIgYXBwcm92YWwsIGFuZCBoZQppcyBhc3NpZ25lZCB0aGUgZmlyc3QgcGxhY2UgYW1vbmcgd3JpdGVycyBvZiB0aGUKaW50ZXJtZWRpYXRlIHN0eWxlLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlRoZW9nb255LjwvaGk+PC90cmFuc2xhdGlvbj4="
translation['10.1.53'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MyIgdW5pdD0ic2VjdGlvbiIgLz4gT24gdGhlIG90aGVyIGhhbmQsIEFudGltYWNodXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+QW50aW1hY2h1cyBvZiBDb2xvcGhvbiAoPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Zmxvci4gY2lyYy48L2hpPiA0MDUgQi5DLiksIGF1dGhvciBvZgphIFRoZWJhaWQuPC9ub3RlPgpkZXNlcnZlcyBwcmFpc2UgZm9yIHRoZSB2aWdvdXIsIGRpZ25pdHkgYW5kIGVsZXZhdGlvbiBvZiBoaXMgbGFuZ3VhZ2UuIEJ1dCBhbHRob3VnaCBwcmFjdGljYWxseSBhbGwKdGVhY2hlcnMgb2YgbGl0ZXJhdHVyZSByYW5rIGhpbSBzZWNvbmQgYW1vbmcgZXBpYwpwb2V0cywgaGUgaXMgZGVmaWNpZW50IGluIGVtb3Rpb25hbCBwb3dlciwgY2hhcm0sIGFuZAphcnJhbmdlbWVudCBvZiBtYXR0ZXIsIGFuZCB0b3RhbGx5IGRldm9pZCBvZiByZWFsCmFydC4gTm8gYmV0dGVyIGV4YW1wbGUgY2FuIGJlIGZvdW5kIHRvIHNob3cgd2hhdAphIHZhc3QgZGlmZmVyZW5jZSB0aGVyZSBpcyB0byBiZWluZyBuZWFyIGFub3RoZXIKd3JpdGVyIGFuZCBiZWluZyBzZWNvbmQgdG8gaGltLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmZsb3IuIGNpcmMuPC9oaT4gNDA1IEIuQy4pLCBhdXRob3Igb2YKYSBUaGViYWlkLjwvdHJhbnNsYXRpb24+"
translation['10.1.54'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NCIgdW5pdD0ic2VjdGlvbiIgLz4gUGFueWFzaXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+VW5jbGUgb2YgSGVyb2RvdHVzLCBhdXRob3Igb2YgYSBIZXJhY2xlaWEuPC9ub3RlPiBpcwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzMiIC8+CgpyZWdhcmRlZCBhcyBjb21iaW5pbmcgdGhlIHF1YWxpdGllcyBvZiB0aGUgbGFzdCB0d28KcG9ldHMsIGJlaW5nIHRoZWlyIGluZmVyaW9yIGluIHBvaW50IG9mIHN0eWxlLCBidXQKc3VycGFzc2luZyBIZXNpb2QgaW4gdGhlIGNob2ljZSBvZiBoaXMgc3ViamVjdCBhbmQKQW50aW1hY2h1cyBpbiBpdHMgYXJyYW5nZW1lbnQuIEFwb2xsb25pdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+QXBvbGxvbml1cyBvZiBSaG9kZXMsIGF1dGhvciBvZiB0aGUgQXJnb25hdXRpY2EuIFRoZQpsaXN0IHRvIHdoaWNoIHJlZmVyZW5jZSBpcyBtYWRlIGNvbnNpc3RlZCBvZiB0aGUgZm91ciBwb2V0cwpqdXN0IG1lbnRpb25lZCwgd2l0aCB0aGUgYWRkaXRpb24gb2YgUGlzYW5kcm9zLCBmb3Igd2hvbQpzZWUgwqcgNTYuPC9ub3RlPiBpcyBub3QKYWRtaXR0ZWQgdG8gdGhlIGxpc3RzIGRyYXduIHVwIGJ5IHRoZSBwcm9mZXNzb3JzCm9mIGxpdGVyYXR1cmUsIGJlY2F1c2UgdGhlIGNyaXRpY3MsIEFyaXN0YXJjaHVzIGFuZApBcmlzdG9waGFuZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkFyaXN0b3BoYW5lcyBvZiBCeXphbnRpdW0uPC9ub3RlPiBpbmNsdWRlZCBubyBjb250ZW1wb3JhcnkgcG9ldHMuCk5vbmUgdGhlIGxlc3MsIGhpcyB3b3JrIGlzIGJ5IG5vIG1lYW5zIHRvIGJlCmRlc3Bpc2VkLCBiZWluZyBkaXN0aW5ndWlzaGVkIGJ5IHRoZSBjb25zaXN0ZW5jeQp3aXRoIHdoaWNoIGhlIG1haW50YWlucyBoaXMgbGV2ZWwgYXMgYSByZXByZXNlbnRhdGl2ZSBvZiB0aGUgaW50ZXJtZWRpYXRlIHR5cGUuPC90cmFuc2xhdGlvbj4="
translation['10.1.55'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIHN1YmplY3QKY2hvc2VuIGJ5IEFyYXR1cyBpcyBsaWZlbGVzcyBhbmQgbW9ub3Rvbm91cywgYWZmb3JkaW5nIG5vIHNjb3BlIGZvciBwYXRob3MsIGRlc2NyaXB0aW9uIG9mIGNoYXJhY3RlciwKb3IgZWxvcXVlbnQgc3BlZWNoZXMuIEhvd2V2ZXIsIGhlIGlzIGFkZXF1YXRlIGZvcgp0aGUgdGFzayB0byB3aGljaCBoZSBmZWx0IGhpbXNlbGYgZXF1YWwuIFRoZW9jcml0dXMKaXMgYWRtaXJhYmxlIGluIGhpcyBvd24gd2F5LCBidXQgdGhlIHJ1c3RpYyBhbmQKcGFzdG9yYWwgbXVzZSBzaHJpbmtzIG5vdCBtZXJlbHkgZnJvbSB0aGUgZm9ydW0sCmJ1dCBmcm9tIHRvd24tbGlmZSBvZiBldmVyeSBraW5kLjwvdHJhbnNsYXRpb24+"
translation['10.1.56'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NiIgdW5pdD0ic2VjdGlvbiIgLz4gSSB0aGluayBJIGhlYXIKbXkgcmVhZGVycyBvbiBhbGwgc2lkZXMgc3VnZ2VzdGluZyB0aGUgbmFtZXMgb2YKaG9zdHMgb2Ygb3RoZXIgcG9ldHMuIFdoYXQ/IERpZCBub3QgUGlzYW5kcm9zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkEgUmhvZGlhbiBwb2V0IG9mIHRoZSBzZXZlbnRoIGNlbnR1cnkgQi5DLjwvbm90ZT4KdGVsbCB0aGUgc3Rvcnkgb2YgSGVyY3VsZXMgaW4gYWRtaXJhYmxlIHN0eWxlPwpXZXJlIHRoZXJlIG5vdCBnb29kIHJlYXNvbnMgZm9yIFZpcmdpbCBhbmQgTWFjZXIKdGFraW5nIE5pY2FuZGVyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPk5pY2FuZGVyIG9mIENvbG9waG9uIChzZWNvbmQgY2VudHVyeSBCLkMuKSwgYXV0aG9yIG9mCmRpZGFjdGljIHBvZW1zLCBUaGVyaWFjYSBhbmQgQWxleGlwaGFybWFjYSBhbmQgTWV0YW1vcnBob3NlcyAoPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+ZSh0ZXJvaW91L21lbmE8L2ZvcmVpZ24+KS4gVmlyZ2lsIGltaXRhdGVkIGhpbSBpbiB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+R2VvcmdpY3MsPC9oaT4KQWVuaWxpdXMgTWFjZXIsIHRoZSBmcmllbmQgb2YgT3ZpZCwgaW4gaGlzIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlRoZXJpYWNhLjwvaGk+PC9ub3RlPiBhcyBhIG1vZGVsPyBBcmUgd2UgdG8gaWdub3JlCkV1cGhvcmlvbj88Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj5lKHRlcm9pb3UvbWVuYTwvZm9yZWlnbj4pLiBWaXJnaWwgaW1pdGF0ZWQgaGltIGluIHRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5HZW9yZ2ljcyw8L2hpPgpBZW5pbGl1cyBNYWNlciwgdGhlIGZyaWVuZCBvZiBPdmlkLCBpbiBoaXMgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+VGhlcmlhY2EuPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+RXVwaG9yaW9uIG9mIENoYWxjaXMgKDIyMCBCLkMuICkgd3JvdGUgZWxhYm9yYXRlIHNob3J0CmVwaWNzLiBTZWUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RWNsLjwvaGk+IHguIDUwLiBUaGUgd29yZHMgYXJlLCBob3dldmVyLCBwdXQgaW50bwp0aGUgbW91dGggb2YgR2FsbHVzIHdpdGggcmVmZXJlbmNlIHRvIGhpcyBvd24gaW1pdGF0aW9ucyBvZgpFdXBob3Jpb24uPC9ub3RlPiBVbmxlc3MgVmlyZ2lsIGhhZCBhZG1pcmVkIGhpbSwgaGUKd291bGQgbmV2ZXIgaGF2ZSBtZW50aW9uZWQKCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkVjbC48L2hpPiB4LiA1MC4gVGhlIHdvcmRzIGFyZSwgaG93ZXZlciwgcHV0IGludG8KdGhlIG1vdXRoIG9mIEdhbGx1cyB3aXRoIHJlZmVyZW5jZSB0byBoaXMgb3duIGltaXRhdGlvbnMgb2YKRXVwaG9yaW9uLjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9ImJsb2NrcXVvdGUiPgo8bCBjbGFzcz0idHJhbnNsYXRpb24iPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPnZlcnNlcyB3cml0dGVuIGluIENoYWxjaWRpYyBzdHJhaW48L3F1b3RlPjwvbD48L3F1b3RlPgoKaW4gdGhlIDxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+dmVyc2VzIHdyaXR0ZW4gaW4gQ2hhbGNpZGljIHN0cmFpbjwvcXVvdGU+PC9sPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPnZlcnNlcyB3cml0dGVuIGluIENoYWxjaWRpYyBzdHJhaW48L3F1b3RlPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkVjbG9ndWVzLjwvaGk+IEFnYWluLCBoYWQgSG9yYWNlIG5vIGp1c3RpZmljYXRpb24KZm9yIGNvdXBsaW5nIHRoZSBuYW1lIG9mIFR5cnRhY3VzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBIb3IuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkEuIFAuPC9oaT4gNDAxLiBUeXJ0YWV1cywgd3JpdGVyIG9mIHdhciBzb25ncwooc2V2ZW50aCBjZW50dXJ5IEIuQy4pLjwvbm90ZT4gd2l0aCB0aGF0IG9mCkhvbWVyPzxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkEuIFAuPC9oaT4gNDAxLiBUeXJ0YWV1cywgd3JpdGVyIG9mIHdhciBzb25ncwooc2V2ZW50aCBjZW50dXJ5IEIuQy4pLjwvdHJhbnNsYXRpb24+"
translation['10.1.57'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NyIgdW5pdD0ic2VjdGlvbiIgLz4gVG8gd2hpY2ggSSByZXBseSwgdGhhdCB0aGVyZSBpcyBubyBvbmUgc28KaWdub3JhbnQgb2YgcG9ldGljIGxpdGVyYXR1cmUgdGhhdCBoZSBjb3VsZCBub3QsIGlmIGhlCmNob3NlLCBjb3B5IGEgY2F0YWxvZ3VlIG9mIHN1Y2ggcG9ldHMgZnJvbSBzb21lCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4zNSIgLz4KCmxpYnJhcnkgZm9yIGluc2VydGlvbiBpbiBoaXMgb3duIHRyZWF0aXNlcy4gSSBjYW4KdGhlcmVmb3JlIGFzc3VyZSBteSByZWFkZXJzIHRoYXQgSSBhbSB3ZWxsIGF3YXJlCm9mIHRoZSBleGlzdGVuY2Ugb2YgdGhlIHBvZXRzIHdob20gSSBwYXNzIG92ZXIgaW4Kc2lsZW5jZSwgYW5kIGFtIGZhciBmcm9tIGNvbmRlbW5pbmcgdGhlbSwgc2luY2UgSQpoYXZlIGFscmVhZHkgc2FpZCB0aGF0IHNvbWUgcHJvZml0IG1heSBiZSBkZXJpdmVkCmZyb20gZXZlcnkgYXV0aG9yLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj7CpyA0NS48L25vdGU+PC90cmFuc2xhdGlvbj4="
translation['10.1.58'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHdlIG11c3Qgd2FpdCB0aWxsIG91cgpwb3dlcnMgaGF2ZSBiZWVuIGRldmVsb3BlZCBhbmQgZXN0YWJsaXNoZWQgdG8gdGhlCmZ1bGwgYmVmb3JlIHdlIHR1cm4gdG8gdGhlc2UgcG9ldHMsIGp1c3QgYXMgYXQgYmFucXVldHMKd2UgdGFrZSBvdXIgZmlsbCBvZiB0aGUgYmVzdCBmYXJlIGFuZCB0aGVuIHR1cm4KdG8gb3RoZXIgZm9vZCB3aGljaCwgaW4gc3BpdGUgb2YgaXRzIGNvbXBhcmF0aXZlCmluZmVyaW9yaXR5LCBpcyBzdGlsbCBhdHRyYWN0aXZlIG93aW5nIHRvIGl0cyB2YXJpZXR5LgpOb3QgdW50aWwgb3VyIHRhc3RlIGlzIGZvcm1lZCBzaGFsbCB3ZSBoYXZlIGxlaXN1cmUKdG8gc3R1ZHkgdGhlIGVsZWdpYWMgcG9ldHMgYXMgd2VsbC4gT2YgdGhlc2UsIENhbGxpbWFjaHVzIGlzIHJlZ2FyZGVkIGFzIHRoZSBiZXN0LCB0aGUgc2Vjb25kIHBsYWNlCmJlaW5nLCBhY2NvcmRpbmcgdG8gdGhlIHZlcmRpY3Qgb2YgbW9zdCBjcml0aWNzLApvY2N1cGllZCBieSBQaGlsZXRhcy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+UGhpbGV0YXMgb2YgQ29zICgyOTAgQi5DLikuPC9ub3RlPjwvdHJhbnNsYXRpb24+"
translation['10.1.59'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OSIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHVudGlsIHdlIGhhdmUgYWNxdWlyZWQKdGhhdCBhc3N1cmVkIGZhY2lsaXR5IG9mIHdoaWNoIEkgc3Bva2UsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPnguIGkuIDEuPC9ub3RlPiB3ZSBtdXN0CmZhbWlsaWFyaXNlIG91cnNlbHZlcyB3aXRoIHRoZSBiZXN0IHdyaXRlcnMgb25seSBhbmQKbXVzdCBmb3JtIG91ciBtaW5kcyBhbmQgZGV2ZWxvcCBhbiBhcHByb3ByaWF0ZSB0b25lCmJ5IHJlYWRpbmcgdGhhdCBpcyBkZWVwIHJhdGhlciB0aGFuIHdpZGUuIENvbnNlcXVlbnRseSwgb2YgdGhlIHRocmVlIHdyaXRlcnMgb2YgaWFtYmljczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5pLmUuPC9oaT4gaW52ZWN0aXZlLiBUaGUgb3RoZXIgdHdvIHdyaXRlcnMgYXJlIFNpbW9uaWRlcyBvZgpBbW9yZ29zIGFuZCBIaXBwb25heCBvZiBFcGhlc3VzLiBBcmNoaWxvY2h1cyAoPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZmwuPC9oaT4KNjg2IEIuQy4pLjwvbm90ZT4gYXBwcm92ZWQgYnkKdGhlIGp1ZGdtZW50IG9mIEFyaXN0YXJjaHVzLCBBcmNoaWxvY2h1cyB3aWxsIGJlIGZhcgp0aGUgbW9zdCB1c2VmdWwgZm9yIHRoZSBmb3JtYXRpb24gb2YgdGhlIGZhY2lsaXR5IGluCnF1ZXN0aW9uLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmkuZS48L2hpPiBpbnZlY3RpdmUuIFRoZSBvdGhlciB0d28gd3JpdGVycyBhcmUgU2ltb25pZGVzIG9mCkFtb3Jnb3MgYW5kIEhpcHBvbmF4IG9mIEVwaGVzdXMuIEFyY2hpbG9jaHVzICg8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5mbC48L2hpPgo2ODYgQi5DLikuPC90cmFuc2xhdGlvbj4="
translation['10.1.60'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGhlIGhhcyBhIG1vc3QgZm9yY2libGUgc3R5bGUsIGlzIGZ1bGwgb2YKdmlnb3JvdXMsIHRlcnNlIGFuZCBwdW5nZW50IHJlZmxleGlvbnMsIGFuZCBvdmVyZmxvd2luZyB3aXRoIGxpZmUgYW5kIGVuZXJneTogaW5kZWVkLCBzb21lIGNyaXRpY3MKdGhpbmsgdGhhdCBpdCBpcyBkdWUgc29sZWx5IHRvIHRoZSBuYXR1cmUgb2YgaGlzCnN1YmplY3RzLCBhbmQgbm90IHRvIGhpcyBnZW5pdXMsIHRoYXQgYW55IHBvZXRzIGFyZSB0bwpiZSByYW5rZWQgYWJvdmUgaGltLjwvdHJhbnNsYXRpb24+"
translation['10.1.61'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MSIgdW5pdD0ic2VjdGlvbiIgLz4gT2YgdGhlIG5pbmUgbHlyaWMgcG9ldHM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlIGZpdmUgbm90IG1lbnRpb25lZCBoZXJlIGFyZSBBbGVtYW4sIFNhcHBobywgSWJ5Y3VzLApBbmFjcmVvbiBhbmQgQmFjY2h5bGlkZXMuPC9ub3RlPgpQaW5kYXIgaXMgYnkgZmFyIHRoZSBncmVhdGVzdCwgaW4gdmlydHVlIG9mIGhpcyBpbnNwaXJlZAptYWduaWZpY2VuY2UsIHRoZSBiZWF1dHkgb2YgaGlzIHRob3VnaHRzIGFuZCBmaWd1cmVzLAp0aGUgcmljaCBleHViZXJhbmNlIG9mIGhpcyBsYW5ndWFnZSBhbmQgbWF0dGVyLAphbmQgaGlzIHJvbGxpbmcgZmxvb2Qgb2YgZWxvcXVlbmNlLCBjaGFyYWN0ZXJpc3RpY3MKd2hpY2gsIGFzIEhvcmFjZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5PZC48L2hpPiBJVi4gaWkuIDEuPC9ub3RlPiByaWdodGx5IGhlbGQsIG1ha2UgaGltCgo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5PZC48L2hpPiBJVi4gaWkuIDEuPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzciIC8+CgppbmltaXRhYmxlLjwvdHJhbnNsYXRpb24+"
translation['10.1.62'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MiIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIGdyZWF0bmVzcyBvZiB0aGUgZ2VuaXVzIG9mIFN0ZXNpY2hvcnVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlN0ZXNpY2hvcnVzIG9mIEhpbWVyYSBpbiBTaWNpbHkgKDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmZsb3IuIGNpcmMuPC9oaT4gNjAwIEIuQy4pLAp3cm90ZSBpbiBseXJpYyB2ZXJzZSBvbiBtYW55IGxlZ2VuZHMsIG1vcmUgZXNwZWNpYWxseSBvbgp0aGVtZXMgY29ubmVjdGVkIHdpdGggdGhlIFRyb2phbiB3YXIuPC9ub3RlPgppcyBzaG93biBieSBoaXMgY2hvaWNlIG9mIHN1YmplY3Q6IGZvciBoZSBzaW5ncyBvZiB0aGUKZ3JlYXRlc3Qgd2FycyBhbmQgdGhlIG1vc3QgZ2xvcmlvdXMgb2YgY2hpZWZ0YWlucywKYW5kIHRoZSBtdXNpYyBvZiBoaXMgbHlyZSBpcyBlcXVhbCB0byB0aGUgd2VpZ2h0eQp0aGVtZXMgb2YgZXBpYyBwb2V0cnkuIEZvciBib3RoIGluIHNwZWVjaCBhbmQKYWN0aW9uIGhlIGludmVzdHMgaGlzIGNoYXJhY3RlcnMgd2l0aCB0aGUgZGlnbml0eQp3aGljaCBpcyB0aGVpciBkdWUsIGFuZCBpZiBoZSBoYWQgb25seSBiZWVuIGNhcGFibGUKb2YgZXhlcmNpc2luZyBhIGxpdHRsZSBtb3JlIHJlc3RyYWludCwgaGUgbWlnaHQsCnBlcmhhcHMsIGhhdmUgcHJvdmVkIGEgc2VyaW91cyByaXZhbCB0byBIb21lci4KQnV0IGhlIGlzIHJlZHVuZGFudCBhbmQgZGlmZnVzZSwgYSBmYXVsdCB3aGljaCwKd2hpbGUgZGVzZXJ2aW5nIG9mIGNlbnN1cmUsIGlzIG5ldmVydGhlbGVzcyBhIGRlZmVjdApzcHJpbmdpbmcgZnJvbSB0aGUgdmVyeSBmdWxsbmVzcyBvZiBoaXMgZ2VuaXVzLgo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5mbG9yLiBjaXJjLjwvaGk+IDYwMCBCLkMuKSwKd3JvdGUgaW4gbHlyaWMgdmVyc2Ugb24gbWFueSBsZWdlbmRzLCBtb3JlIGVzcGVjaWFsbHkgb24KdGhlbWVzIGNvbm5lY3RlZCB3aXRoIHRoZSBUcm9qYW4gd2FyLjwvdHJhbnNsYXRpb24+"
translation['10.1.63'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MyIgdW5pdD0ic2VjdGlvbiIgLz5BbGNhZXVzIGhhcyBkZXNlcnZlZCB0aGUgY29tcGxpbWVudCBvZiBiZWluZyBzYWlkCnRvIG1ha2UgbXVzaWMgd2l0aCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5xdWlsbCBvZiBnb2xkPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+SG9yIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPk9kLjwvaGk+IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz54aWlpLiAyNi4gQWxjYWV1cyBvZiBNaXR5bGVuZSAoPGhpIHJlbmQ9Iml0YWxpY3MiPmNpcmNhPC9oaT4gNjAwCkIuQy4pLjwvbm90ZT4gaW4gdGhhdCBwb3J0aW9uCm9mIGhpcyB3b3JrcyBpbiB3aGljaCBoZSBhdHRhY2tzIHRoZSB0eXJhbnRzIG9mIGhpcwpkYXkgYW5kIHNob3dzIGhpbXNlbGYgYSByZWFsIG1vcmFsIGZvcmNlLiBIZSBpcywKbW9yZW92ZXIsIHRlcnNlIGFuZCBtYWduaWZpY2VudCBpbiBzdHlsZSwgd2hpbGUgdGhlCnZpZ291ciBvZiBoaXMgZGljdGlvbiByZXNlbWJsZXMgdGhhdCBvZiBvcmF0b3J5LiBCdXQKaGUgYWxzbyB3cm90ZSBwb2V0cnkgb2YgYSBtb3JlIHNwb3J0aXZlIG5hdHVyZSBhbmQKc3Rvb3BlZCB0byBlcm90aWMgcG9ldHJ5LCBkZXNwaXRlIGhpcyBhcHRpdHVkZSBmb3IKbG9mdGllciB0aGVtZXMuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T2QuPC9oaT4gPC90cmFuc2xhdGlvbj4="
translation['10.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['10.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPnhpaWkuIDI2LiBBbGNhZXVzIG9mIE1pdHlsZW5lICg8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jaXJjYTwvaGk+IDYwMApCLkMuKS48L3RyYW5zbGF0aW9uPg=="
translation['10.2.64'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NCIgdW5pdD0ic2VjdGlvbiIgLz4gU2ltb25pZGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNpbW9uZGVzIG9mIENlb3MuIDU1NuKAkzQ2OCBCLkMuLCBmYW1vdXMgZm9yIGFsbCBmb3JtcyBvZgpseXJpYyBwb2V0cnksIGVzcGVjaWFsbHkgZnVuZXJhbCBvZGVzLjwvbm90ZT4gd3JvdGUgaW4gYSBzaW1wbGUgc3R5bGUsCmJ1dCBtYXkgYmUgcmVjb21tZW5kZWQgZm9yIHRoZSBwcm9wcmlldHkgYW5kCmNoYXJtIG9mIGhpcyBsYW5ndWFnZS4gSGlzIGNoaWVmIG1lcml0LCBob3dldmVyLApsaWVzIGluIGhpcyBwb3dlciB0byBleGNpdGUgcGl0eSwgc28gbXVjaCBzbywgaW4gZmFjdCwKdGhhdCBzb21lIHJhbmsgaGltIGluIHRoaXMgcmVzcGVjdCBhYm92ZSBhbGwgd3JpdGVycwpvZiB0aGlzIGNsYXNzIG9mIHBvZXRyeS48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgb2xkIGNvbWVkeSBpcyBhbG1vc3QgdGhlIG9ubHkgZm9ybSBvZiBwb2V0cnkKd2hpY2ggcHJlc2VydmVzIGludGFjdCB0aGUgdHJ1ZSBncmFjZSBvZiBBdHRpYwpkaWN0aW9uLCB3aGlsZSBpdCBpcyBjaGFyYWN0ZXJpemVkIGJ5IHRoZSBtb3N0IGVsb3F1ZW50IGZyZWVkb20gb2Ygc3BlZWNoLCBhbmQgc2hvd3MgZXNwZWNpYWwgcG93ZXIKaW4gdGhlIGRlbnVuY2lhdGlvbiBvZiB2aWNlOyBidXQgaXQgcmV2ZWFscyBncmVhdApmb3JjZSBpbiBvdGhlciBkZXBhcnRtZW50cyBhcyB3ZWxsLiBGb3IgaXRzIHN0eWxlCmlzIGF0IG9uY2UgbG9mdHksIGVsZWdhbnQgYW5kIGdyYWNlZnVsLCBhbmQgaWYgd2UKZXhjZXB0IEhvbWVyLCB3aG8sIGxpa2UgQWNoaWxsZXMgYW1vbmcgd2FycmlvcnMsCgo8cGIgaWQ9InAuMzkiIC8+CgppcyBiZXlvbmQgYWxsIGNvbXBhcmlzb24sIEkgYW0gbm90IHN1cmUgdGhhdCB0aGVyZQppcyBhbnkgc3R5bGUgd2hpY2ggYmVhcnMgYSBjbG9zZXIgcmVzZW1ibGFuY2UgdG8Kb3JhdG9yeSBvciBpcyBiZXR0ZXIgYWRhcHRlZCBmb3IgZm9ybWluZyB0aGUgb3JhdG9yLgo8bWlsZXN0b25lIG49IjY2IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIGFyZSBhIG51bWJlciBvZiB3cml0ZXJzIG9mIHRoZSBvbGQgY29tZWR5LApidXQgdGhlIGJlc3QgYXJlIEFyaXN0b3BoYW5lcywgRXVwb2xpcyBhbmQgQ3JhdGludXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5Db250ZW1wb3JhcmllczogQ3JhdGludXMgKDUxOeKAkzQyMiksIEFyaXN0b3BoYW5lcyAoNDQ44oCTCjM4MCksIEV1cG9saXMgKDQ0NuKAkzQxMCkuPC9ub3RlPiBBZXNjaHlsdXMgd2FzIHRoZSBmaXJzdCB0byBicmluZyB0cmFnZWR5IGludG8KcHJvbWluZW5jZTogaGUgaXMgbG9mdHksIGRpZ25pZmllZCwgZ3JhbmRpbG9xdWVudApvZnRlbiB0byBhIGZhdWx0LCBidXQgZnJlcXVlbnRseSB1bmNvdXRoIGFuZCBpbmhhcm1vbmlvdXMuIENvbnNlcXVlbnRseSwgdGhlIEF0aGVuaWFucyBhbGxvd2VkCmxhdGVyIHBvZXRzIHRvIHJldmlzZSBoaXMgdHJhZ2VkaWVzIGFuZCB0byBwcm9kdWNlCnRoZW0gaW4gdGhlIGRyYW1hdGljIGNvbnRlc3RzLCBhbmQgbWFueSBzdWNjZWVkZWQKaW4gd2lubmluZyB0aGUgcHJpemUgYnkgc3VjaCBtZWFucy48bWlsZXN0b25lIG49IjY3IiB1bml0PSJzZWN0aW9uIiAvPiBTb3Bob2NsZXMKYW5kIEV1cmlwaWRlcywgaG93ZXZlciwgYnJvdWdodCB0cmFnZWR5IHRvIGZhcgpncmVhdGVyIHBlcmZlY3Rpb246IHRoZXkgZGlmZmVyIGluIHN0eWxlLCBidXQgaXQgaXMKbXVjaCBkaXNwdXRlZCBhcyB0byB3aGljaCBzaG91bGQgYmUgYXdhcmRlZCB0aGUKc3VwcmVtYWN5LCBhIHF1ZXN0aW9uIHdoaWNoLCBhcyBpdCBoYXMgbm8gYmVhcmluZwpvbiBteSBwcmVzZW50IHRoZW1lLCBJIHNoYWxsIG1ha2Ugbm8gYXR0ZW1wdCB0bwpkZWNpZGUuIEJ1dCB0aGlzIG11Y2ggaXMgY2VydGFpbiBhbmQgaW5jb250cm92ZXJ0aWJsZSwgdGhhdCBFdXJpcGlkZXMgd2lsbCBiZSBmb3VuZCBvZiBmYXIgZ3JlYXRlciBzZXJ2aWNlCnRvIHRob3NlIHdobyBhcmUgdHJhaW5pbmcgdGhlbXNlbHZlcyBmb3IgcGxlYWRpbmcgaW4KY291cnQuPG1pbGVzdG9uZSBuPSI2OCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGhpcyBsYW5ndWFnZSwgYWx0aG91Z2ggYWN0dWFsbHkgY2Vuc3VyZWQKYnkgdGhvc2Ugd2hvIHJlZ2FyZCB0aGUgZGlnbml0eSwgdGhlIHN0YXRlbHkKc3RyaWRlIGFuZCBzb25vcm91cyB1dHRlcmFuY2Ugb2YgU29waG9jbGVzIGFzIGJlaW5nCm1vcmUgc3VibGltZSwgaGFzIGEgY2xvc2VyIGFmZmluaXR5IHRvIHRoYXQgb2Ygb3JhdG9yeSwKd2hpbGUgaGUgaXMgZnVsbCBvZiBzdHJpa2luZyByZWZsZXhpb25zLCBpbiB3aGljaCwKaW5kZWVkLCBpbiB0aGVpciBzcGVjaWFsIHNwaGVyZSwgaGUgcml2YWxzIHRoZQpwaGlsb3NvcGhlcnMgdGhlbXNlbHZlcywgYW5kIGZvciBkZWZlbmNlIGFuZCBhdHRhY2sgbWF5IGJlIGNvbXBhcmVkIHdpdGggYW55IG9yYXRvciB0aGF0IGhhcwp3b24gcmVub3duIGluIHRoZSBjb3VydHMuIEZpbmFsbHksIGFsdGhvdWdoIGFkbWlyYWJsZSBpbiBldmVyeSBraW5kIG9mIGVtb3Rpb25hbCBhcHBlYWwsIGhlIGlzCmVhc2lseSBzdXByZW1lIGluIHRoZSBwb3dlciB0byBleGNpdGUgcGl0eS4KPG1pbGVzdG9uZSBuPSI2OSIgdW5pdD0ic2VjdGlvbiIgLz5NZW5hbmRlciwgYXMgaGUgb2Z0ZW4gdGVzdGlmaWVzIGluIGhpcyB3b3JrcywgaGFkCmEgcHJvZm91bmQgYWRtaXJhdGlvbiBmb3IgRXVyaXBpZGVzLCBhbmQgaW1pdGF0ZWQKaGltLCBhbHRob3VnaCBpbiBhIGRpZmZlcmVudCB0eXBlIG9mIHdvcmsuIE5vdywKCjxwYiBpZD0icC40MSIgLz4KCnRoZSBjYXJlZnVsIHN0dWR5IG9mIE1lbmFuZGVyIGFsb25lIHdvdWxkLCBpbiBteQpvcGluaW9uLCBiZSBzdWZmaWNpZW50IHRvIGRldmVsb3AgYWxsIHRob3NlIHF1YWxpdGllcwp3aXRoIHRoZSBwcm9kdWN0aW9uIG9mIHdoaWNoIG15IHByZXNlbnQgd29yawppcyBjb25jZXJuZWQ7IHNvIHBlcmZlY3QgaXMgaGlzIHJlcHJlc2VudGF0aW9uIG9mCmFjdHVhbCBsaWZlLCBzbyByaWNoIGlzIGhpcyBwb3dlciBvZiBpbnZlbnRpb24gYW5kCmhpcyBnaWZ0IG9mIHN0eWxlLCBzbyBwZXJmZWN0bHkgZG9lcyBoZSBhZGFwdCBoaW1zZWxmCnRvIGV2ZXJ5IGtpbmQgb2YgY2lyY3Vtc3RhbmNlLCBjaGFyYWN0ZXIgYW5kIGVtb3Rpb24uPG1pbGVzdG9uZSBuPSI3MCIgdW5pdD0ic2VjdGlvbiIgLz4gSW5kZWVkLCB0aG9zZSBjcml0aWNzIGFyZSBubyBmb29scyB3aG8gdGhpbmsKdGhlIHNwZWVjaGVzIGF0dHJpYnV0ZWQgdG8gQ2hhcmlzaXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5BIGNvbnRlbXBvcmFyeSBvZiBEZW1vc3RoZW5vczsgaGlzIHNwZWVjaGVzIGhhdmUgbm90CnN1cnZpdmVkLCBidXQgd2VyZSBjb25zaWRlcmVkIHRvIHJlc2VtYmxlIHRob3NlIG9mIEx5c2lhcy48L25vdGU+IHdlcmUgaW4gcmVhbGl0eQp3cml0dGVuIGJ5IE1lbmFuZGVyLiBCdXQgSSBjb25zaWRlciB0aGF0IGhlIHNob3dzCmhpcyBwb3dlciBhcyBhbiBvcmF0b3IgZmFyIG1vcmUgY2xlYXJseSBpbiBoaXMKY29tZWRpZXM7IHNpbmNlIGFzc3VyZWRseSB3ZSBjYW4gZmluZCBubyBtb3JlCnBlcmZlY3QgbW9kZWxzIG9mIGV2ZXJ5IG9yYXRvcmljYWwgcXVhbGl0eSB0aGFuIHRoZQpqdWRpY2lhbCBwbGVhZGluZ3Mgb2YgaGlzIEVwaXRyZXBvbnRlcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRoZSBncmVhdGVyIHBvcnRpb24gb2YgdGhlIEVwaXRyZXBvbnRlcyBoYXMgYmVlbiByZWNvdmVyZWQgZnJvbSBhIHBhcHlydXMuIFRoZSBvdGhlciBwbGF5cyBhcmUgbG9zdC4gVGhlCm5hbWVzIG1heSBiZSB0cmFuc2xhdGVkOiA8cXVvdGU+VGhlIEFyYml0cmF0b3JzLDwvcXVvdGU+IDxxdW90ZT5UaGUgSGVpcmVzcyw8L3F1b3RlPgo8cXVvdGU+VGhlIExvY3JpLDwvcXVvdGU+IDxxdW90ZT5UaGUgVGltaWQgTWFuLDwvcXVvdGU+IDxxdW90ZT5UaGUgTGF3Z2l2ZXIsPC9xdW90ZT4gPHF1b3RlPlRoZQpDaGFuZ2VsaW5nLjwvcXVvdGU+PC9ub3RlPiBFcGljbGVyb3MKYW5kIExvY3JpLCBvciB0aGUgZGVjbGFtYXRvcnkgc3BlZWNoZXMgaW4gdGhlIFBzb3Bob2RlcywgTm9tb3RoZXRlcy4gYW5kIEh5cG9ib2xpbWFldXMuPG1pbGVzdG9uZSBuPSI3MSIgdW5pdD0ic2VjdGlvbiIgLz4gU3RpbGwsIGZvcgpteSBvd24gcGFydCwgSSB0aGluayB0aGF0IGhlIHdpbGwgYmUgZm91bmQgZXZlbiBtb3JlCnVzZWZ1bCBieSBkZWNsYWltZXJzLCBpbiB2aWV3IG9mIHRoZSBmYWN0IHRoYXQgdGhleQpoYXZlLCBhY2NvcmRpbmcgdG8gdGhlIG5hdHVyZSBvZiB0aGUgdmFyaW91cyBjb250cm92ZXJzaWFsIHRoZW1lcywgdG8gdW5kZXJ0YWtlIGEgbnVtYmVyIG9mIGRpZmZlcmVudApyb2xlcyBhbmQgdG8gaW1wZXJzb25hdGUgZmF0aGVycywgc29ucywgc29sZGllcnMsCnBlYXNhbnRzLCByaWNoIG1lbiBhbmQgcG9vciwgdGhlIGFuZ3J5IG1hbiBhbmQKdGhlIHN1cHBsaWFudCwgdGhlIGdlbnRsZSBhbmQgdGhlIGhhcnNoLiBBbmQgYWxsCnRoZXNlIGNoYXJhY3RlcnMgYXJlIHRyZWF0ZWQgYnkgdGhpcyBwb2V0IHdpdGgKY29uc3VtbWF0ZSBhcHByb3ByaWF0ZW5lc3MuPG1pbGVzdG9uZSBuPSI3MiIgdW5pdD0ic2VjdGlvbiIgLz4gSW5kZWVkLCBzdWNoIGlzIGhpcwpzdXByZW1hY3kgdGhhdCBoZSBoYXMgc2NhcmNlIGxlZnQgYSBuYW1lIHRvIG90aGVyCndyaXRlcnMgb2YgdGhlIG5ldyBjb21lZHksIGFuZCBoYXMgY2FzdCB0aGVtIGludG8KZGFya25lc3MgYnkgdGhlIHNwbGVuZG91ciBvZiBoaXMgb3duIHJlbm93bi4KU3RpbGwsIHlvdSB3aWxsIGZpbmQgc29tZXRoaW5nIG9mIHZhbHVlIGluIHRoZSBvdGhlcgpjb21pYyBwb2V0cyBhcyB3ZWxsLCBpZiB5b3UgcmVhZCB0aGVtIGluIG5vdCB0b28KY3JpdGljYWwgYSBzcGlyaXQ7IGFib3ZlIGFsbCwgcHJvZml0IG1heSBiZSBkZXJpdmVkCmZyb20gdGhlIHN0dWR5IG9mIFBoaWxlbW9uLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+UGhpbGVtb24gb2YgU29saSAoMzYw4oCTMjYyKTsgTWVuYWRlciBvZiBBdGhlbnMgKDM0MuKAkwoyOTApLjwvbm90ZT4gd2hvLCBhbHRob3VnaCBpdCB3YXMKCjxwYiBpZD0icC40MyIgLz4KCmEgZGVwcmF2ZWQgdGFzdGUgd2hpY2ggY2F1c2VkIGhpcyBjb250ZW1wb3JhcmllcwpvZnRlbiB0byBwcmVmZXIgaGltIHRvIE1lbmFuZGVyLCBoYXMgbm9uZSB0aGUKbGVzcyBkZXNlcnZlZCB0aGUgc2Vjb25kIHBsYWNlIHdoaWNoIHBvc3Rlcml0eSBoYXMKYmVlbiB1bmFuaW1vdXMgaW4gYXdhcmRpbmcgaGltLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.2.65'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgb2xkIGNvbWVkeSBpcyBhbG1vc3QgdGhlIG9ubHkgZm9ybSBvZiBwb2V0cnkKd2hpY2ggcHJlc2VydmVzIGludGFjdCB0aGUgdHJ1ZSBncmFjZSBvZiBBdHRpYwpkaWN0aW9uLCB3aGlsZSBpdCBpcyBjaGFyYWN0ZXJpemVkIGJ5IHRoZSBtb3N0IGVsb3F1ZW50IGZyZWVkb20gb2Ygc3BlZWNoLCBhbmQgc2hvd3MgZXNwZWNpYWwgcG93ZXIKaW4gdGhlIGRlbnVuY2lhdGlvbiBvZiB2aWNlOyBidXQgaXQgcmV2ZWFscyBncmVhdApmb3JjZSBpbiBvdGhlciBkZXBhcnRtZW50cyBhcyB3ZWxsLiBGb3IgaXRzIHN0eWxlCmlzIGF0IG9uY2UgbG9mdHksIGVsZWdhbnQgYW5kIGdyYWNlZnVsLCBhbmQgaWYgd2UKZXhjZXB0IEhvbWVyLCB3aG8sIGxpa2UgQWNoaWxsZXMgYW1vbmcgd2FycmlvcnMsCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4zOSIgLz4KCmlzIGJleW9uZCBhbGwgY29tcGFyaXNvbiwgSSBhbSBub3Qgc3VyZSB0aGF0IHRoZXJlCmlzIGFueSBzdHlsZSB3aGljaCBiZWFycyBhIGNsb3NlciByZXNlbWJsYW5jZSB0bwpvcmF0b3J5IG9yIGlzIGJldHRlciBhZGFwdGVkIGZvciBmb3JtaW5nIHRoZSBvcmF0b3IuCjwvdHJhbnNsYXRpb24+"
translation['10.2.66'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBhcmUgYSBudW1iZXIgb2Ygd3JpdGVycyBvZiB0aGUgb2xkIGNvbWVkeSwKYnV0IHRoZSBiZXN0IGFyZSBBcmlzdG9waGFuZXMsIEV1cG9saXMgYW5kIENyYXRpbnVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5Db250ZW1wb3JhcmllczogQ3JhdGludXMgKDUxOeKAkzQyMiksIEFyaXN0b3BoYW5lcyAoNDQ44oCTCjM4MCksIEV1cG9saXMgKDQ0NuKAkzQxMCkuPC9ub3RlPiBBZXNjaHlsdXMgd2FzIHRoZSBmaXJzdCB0byBicmluZyB0cmFnZWR5IGludG8KcHJvbWluZW5jZTogaGUgaXMgbG9mdHksIGRpZ25pZmllZCwgZ3JhbmRpbG9xdWVudApvZnRlbiB0byBhIGZhdWx0LCBidXQgZnJlcXVlbnRseSB1bmNvdXRoIGFuZCBpbmhhcm1vbmlvdXMuIENvbnNlcXVlbnRseSwgdGhlIEF0aGVuaWFucyBhbGxvd2VkCmxhdGVyIHBvZXRzIHRvIHJldmlzZSBoaXMgdHJhZ2VkaWVzIGFuZCB0byBwcm9kdWNlCnRoZW0gaW4gdGhlIGRyYW1hdGljIGNvbnRlc3RzLCBhbmQgbWFueSBzdWNjZWVkZWQKaW4gd2lubmluZyB0aGUgcHJpemUgYnkgc3VjaCBtZWFucy48L3RyYW5zbGF0aW9uPg=="
translation['10.2.67'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NyIgdW5pdD0ic2VjdGlvbiIgLz4gU29waG9jbGVzCmFuZCBFdXJpcGlkZXMsIGhvd2V2ZXIsIGJyb3VnaHQgdHJhZ2VkeSB0byBmYXIKZ3JlYXRlciBwZXJmZWN0aW9uOiB0aGV5IGRpZmZlciBpbiBzdHlsZSwgYnV0IGl0IGlzCm11Y2ggZGlzcHV0ZWQgYXMgdG8gd2hpY2ggc2hvdWxkIGJlIGF3YXJkZWQgdGhlCnN1cHJlbWFjeSwgYSBxdWVzdGlvbiB3aGljaCwgYXMgaXQgaGFzIG5vIGJlYXJpbmcKb24gbXkgcHJlc2VudCB0aGVtZSwgSSBzaGFsbCBtYWtlIG5vIGF0dGVtcHQgdG8KZGVjaWRlLiBCdXQgdGhpcyBtdWNoIGlzIGNlcnRhaW4gYW5kIGluY29udHJvdmVydGlibGUsIHRoYXQgRXVyaXBpZGVzIHdpbGwgYmUgZm91bmQgb2YgZmFyIGdyZWF0ZXIgc2VydmljZQp0byB0aG9zZSB3aG8gYXJlIHRyYWluaW5nIHRoZW1zZWx2ZXMgZm9yIHBsZWFkaW5nIGluCmNvdXJ0LjwvdHJhbnNsYXRpb24+"
translation['10.2.68'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGhpcyBsYW5ndWFnZSwgYWx0aG91Z2ggYWN0dWFsbHkgY2Vuc3VyZWQKYnkgdGhvc2Ugd2hvIHJlZ2FyZCB0aGUgZGlnbml0eSwgdGhlIHN0YXRlbHkKc3RyaWRlIGFuZCBzb25vcm91cyB1dHRlcmFuY2Ugb2YgU29waG9jbGVzIGFzIGJlaW5nCm1vcmUgc3VibGltZSwgaGFzIGEgY2xvc2VyIGFmZmluaXR5IHRvIHRoYXQgb2Ygb3JhdG9yeSwKd2hpbGUgaGUgaXMgZnVsbCBvZiBzdHJpa2luZyByZWZsZXhpb25zLCBpbiB3aGljaCwKaW5kZWVkLCBpbiB0aGVpciBzcGVjaWFsIHNwaGVyZSwgaGUgcml2YWxzIHRoZQpwaGlsb3NvcGhlcnMgdGhlbXNlbHZlcywgYW5kIGZvciBkZWZlbmNlIGFuZCBhdHRhY2sgbWF5IGJlIGNvbXBhcmVkIHdpdGggYW55IG9yYXRvciB0aGF0IGhhcwp3b24gcmVub3duIGluIHRoZSBjb3VydHMuIEZpbmFsbHksIGFsdGhvdWdoIGFkbWlyYWJsZSBpbiBldmVyeSBraW5kIG9mIGVtb3Rpb25hbCBhcHBlYWwsIGhlIGlzCmVhc2lseSBzdXByZW1lIGluIHRoZSBwb3dlciB0byBleGNpdGUgcGl0eS4KPC90cmFuc2xhdGlvbj4="
translation['10.2.69'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OSIgdW5pdD0ic2VjdGlvbiIgLz5NZW5hbmRlciwgYXMgaGUgb2Z0ZW4gdGVzdGlmaWVzIGluIGhpcyB3b3JrcywgaGFkCmEgcHJvZm91bmQgYWRtaXJhdGlvbiBmb3IgRXVyaXBpZGVzLCBhbmQgaW1pdGF0ZWQKaGltLCBhbHRob3VnaCBpbiBhIGRpZmZlcmVudCB0eXBlIG9mIHdvcmsuIE5vdywKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQxIiAvPgoKdGhlIGNhcmVmdWwgc3R1ZHkgb2YgTWVuYW5kZXIgYWxvbmUgd291bGQsIGluIG15Cm9waW5pb24sIGJlIHN1ZmZpY2llbnQgdG8gZGV2ZWxvcCBhbGwgdGhvc2UgcXVhbGl0aWVzCndpdGggdGhlIHByb2R1Y3Rpb24gb2Ygd2hpY2ggbXkgcHJlc2VudCB3b3JrCmlzIGNvbmNlcm5lZDsgc28gcGVyZmVjdCBpcyBoaXMgcmVwcmVzZW50YXRpb24gb2YKYWN0dWFsIGxpZmUsIHNvIHJpY2ggaXMgaGlzIHBvd2VyIG9mIGludmVudGlvbiBhbmQKaGlzIGdpZnQgb2Ygc3R5bGUsIHNvIHBlcmZlY3RseSBkb2VzIGhlIGFkYXB0IGhpbXNlbGYKdG8gZXZlcnkga2luZCBvZiBjaXJjdW1zdGFuY2UsIGNoYXJhY3RlciBhbmQgZW1vdGlvbi48L3RyYW5zbGF0aW9uPg=="
translation['10.2.70'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MCIgdW5pdD0ic2VjdGlvbiIgLz4gSW5kZWVkLCB0aG9zZSBjcml0aWNzIGFyZSBubyBmb29scyB3aG8gdGhpbmsKdGhlIHNwZWVjaGVzIGF0dHJpYnV0ZWQgdG8gQ2hhcmlzaXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkEgY29udGVtcG9yYXJ5IG9mIERlbW9zdGhlbm9zOyBoaXMgc3BlZWNoZXMgaGF2ZSBub3QKc3Vydml2ZWQsIGJ1dCB3ZXJlIGNvbnNpZGVyZWQgdG8gcmVzZW1ibGUgdGhvc2Ugb2YgTHlzaWFzLjwvbm90ZT4gd2VyZSBpbiByZWFsaXR5CndyaXR0ZW4gYnkgTWVuYW5kZXIuIEJ1dCBJIGNvbnNpZGVyIHRoYXQgaGUgc2hvd3MKaGlzIHBvd2VyIGFzIGFuIG9yYXRvciBmYXIgbW9yZSBjbGVhcmx5IGluIGhpcwpjb21lZGllczsgc2luY2UgYXNzdXJlZGx5IHdlIGNhbiBmaW5kIG5vIG1vcmUKcGVyZmVjdCBtb2RlbHMgb2YgZXZlcnkgb3JhdG9yaWNhbCBxdWFsaXR5IHRoYW4gdGhlCmp1ZGljaWFsIHBsZWFkaW5ncyBvZiBoaXMgRXBpdHJlcG9udGVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGUgZ3JlYXRlciBwb3J0aW9uIG9mIHRoZSBFcGl0cmVwb250ZXMgaGFzIGJlZW4gcmVjb3ZlcmVkIGZyb20gYSBwYXB5cnVzLiBUaGUgb3RoZXIgcGxheXMgYXJlIGxvc3QuIFRoZQpuYW1lcyBtYXkgYmUgdHJhbnNsYXRlZDogPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlIEFyYml0cmF0b3JzLDwvcXVvdGU+IDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPlRoZSBIZWlyZXNzLDwvcXVvdGU+CjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPlRoZSBMb2NyaSw8L3F1b3RlPiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUgVGltaWQgTWFuLDwvcXVvdGU+IDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPlRoZSBMYXdnaXZlciw8L3F1b3RlPiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUKQ2hhbmdlbGluZy48L3F1b3RlPjwvbm90ZT4gRXBpY2xlcm9zCmFuZCBMb2NyaSwgb3IgdGhlIGRlY2xhbWF0b3J5IHNwZWVjaGVzIGluIHRoZSBQc29waG9kZXMsIE5vbW90aGV0ZXMuIGFuZCBIeXBvYm9saW1hZXVzLjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPlRoZSBBcmJpdHJhdG9ycyw8L3F1b3RlPiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUgSGVpcmVzcyw8L3F1b3RlPgo8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUgTG9jcmksPC9xdW90ZT4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlIFRpbWlkIE1hbiw8L3F1b3RlPiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUgTGF3Z2l2ZXIsPC9xdW90ZT4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlCkNoYW5nZWxpbmcuPC9xdW90ZT48L3RyYW5zbGF0aW9uPg=="
translation['10.2.71'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MSIgdW5pdD0ic2VjdGlvbiIgLz4gU3RpbGwsIGZvcgpteSBvd24gcGFydCwgSSB0aGluayB0aGF0IGhlIHdpbGwgYmUgZm91bmQgZXZlbiBtb3JlCnVzZWZ1bCBieSBkZWNsYWltZXJzLCBpbiB2aWV3IG9mIHRoZSBmYWN0IHRoYXQgdGhleQpoYXZlLCBhY2NvcmRpbmcgdG8gdGhlIG5hdHVyZSBvZiB0aGUgdmFyaW91cyBjb250cm92ZXJzaWFsIHRoZW1lcywgdG8gdW5kZXJ0YWtlIGEgbnVtYmVyIG9mIGRpZmZlcmVudApyb2xlcyBhbmQgdG8gaW1wZXJzb25hdGUgZmF0aGVycywgc29ucywgc29sZGllcnMsCnBlYXNhbnRzLCByaWNoIG1lbiBhbmQgcG9vciwgdGhlIGFuZ3J5IG1hbiBhbmQKdGhlIHN1cHBsaWFudCwgdGhlIGdlbnRsZSBhbmQgdGhlIGhhcnNoLiBBbmQgYWxsCnRoZXNlIGNoYXJhY3RlcnMgYXJlIHRyZWF0ZWQgYnkgdGhpcyBwb2V0IHdpdGgKY29uc3VtbWF0ZSBhcHByb3ByaWF0ZW5lc3MuPC90cmFuc2xhdGlvbj4="
translation['10.2.72'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MiIgdW5pdD0ic2VjdGlvbiIgLz4gSW5kZWVkLCBzdWNoIGlzIGhpcwpzdXByZW1hY3kgdGhhdCBoZSBoYXMgc2NhcmNlIGxlZnQgYSBuYW1lIHRvIG90aGVyCndyaXRlcnMgb2YgdGhlIG5ldyBjb21lZHksIGFuZCBoYXMgY2FzdCB0aGVtIGludG8KZGFya25lc3MgYnkgdGhlIHNwbGVuZG91ciBvZiBoaXMgb3duIHJlbm93bi4KU3RpbGwsIHlvdSB3aWxsIGZpbmQgc29tZXRoaW5nIG9mIHZhbHVlIGluIHRoZSBvdGhlcgpjb21pYyBwb2V0cyBhcyB3ZWxsLCBpZiB5b3UgcmVhZCB0aGVtIGluIG5vdCB0b28KY3JpdGljYWwgYSBzcGlyaXQ7IGFib3ZlIGFsbCwgcHJvZml0IG1heSBiZSBkZXJpdmVkCmZyb20gdGhlIHN0dWR5IG9mIFBoaWxlbW9uLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5QaGlsZW1vbiBvZiBTb2xpICgzNjDigJMyNjIpOyBNZW5hZGVyIG9mIEF0aGVucyAoMzQy4oCTCjI5MCkuPC9ub3RlPiB3aG8sIGFsdGhvdWdoIGl0IHdhcwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDMiIC8+CgphIGRlcHJhdmVkIHRhc3RlIHdoaWNoIGNhdXNlZCBoaXMgY29udGVtcG9yYXJpZXMKb2Z0ZW4gdG8gcHJlZmVyIGhpbSB0byBNZW5hbmRlciwgaGFzIG5vbmUgdGhlCmxlc3MgZGVzZXJ2ZWQgdGhlIHNlY29uZCBwbGFjZSB3aGljaCBwb3N0ZXJpdHkgaGFzCmJlZW4gdW5hbmltb3VzIGluIGF3YXJkaW5nIGhpbS48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MyIgdW5pdD0ic2VjdGlvbiIgLz5JZiB3ZSB0dXJuIHRvIGhpc3RvcnksIHdlIHNoYWxsIGZpbmQgYSBudW1iZXIgb2YKZGlzdGluZ3Vpc2hlZCB3cml0ZXJzOyBidXQgdGhlcmUgYXJlIHR3byB3aG8gbXVzdAp1bmRvdWJ0ZWRseSBiZSBzZXQgZmFyIGFib3ZlIGFsbCB0aGVpciByaXZhbHM6IHRoZWlyCmV4Y2VsbGVuY2VzIGFyZSBkaWZmZXJlbnQgaW4ga2luZCwgYnV0IGhhdmUgd29uCmFsbW9zdCBlcXVhbCBwcmFpc2UuIFRodWN5ZGlkZXMgaXMgY29tcGFjdCBpbgp0ZXh0dXJlLCB0ZXJzZSBhbmQgZXZlciBlYWdlciB0byBwcmVzcyBmb3J3YXJkOiBIZXJvZG90dXMgaXMgcGxlYXNhbnQsIGx1Y2lkIGFuZCBkaWZmdXNlOiB0aGUgZm9ybWVyCmV4Y2VscyBpbiB2aWdvdXIsIHNwZWVjaGVzIGFuZCB0aGUgZXhwcmVzc2lvbiBvZiB0aGUKc3Ryb25nZXIgcGFzc2lvbnM7IHRoZSBsYXR0ZXIgaW4gY2hhcm0sIGNvbnZlcnNhdGlvbnMKYW5kIHRoZSBkZWxpbmVhdGlvbiBvZiB0aGUgZ2VudGxlciBlbW90aW9ucy48bWlsZXN0b25lIG49Ijc0IiB1bml0PSJzZWN0aW9uIiAvPiBUaGVvcG9tcHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGVvcG9tcHVzIG9mIENoaW9zLCBib3JuIGFib3V0IDM3OCBCLkMuLCB3cm90ZSBhCmhpc3Rvcnkgb2YgR3JlZWNlICg8aGkgcmVuZD0iaXRhbGljcyI+SGVsbGVuaWNhPC9oaT4pIGZyb20gY2xvc2Ugb2YgUGVsb3Bvbm5lc2lhbiB3YXIKdG8gMzk0IEIuQy4sIGFuZCBhIGhpc3Rvcnkgb2YgR3JlZWNlIGluIHJlbGF0aW9uIHRvIFBoaWxpcCBvZgpNYWNlZG9uICg8aGkgcmVuZD0iaXRhbGljcyI+UGhpbGlwcGljYTwvaGk+KS4gSGlzIG1hc3RlciwgSXNvY3JhdGVzLCB1cmdlZCBoaW0gdG8Kd3JpdGUgaGlzdG9yeS48L25vdGU+IGNvbWVzIG5leHQsIGFuZCB0aG91Z2ggYXMgYSBoaXN0b3JpYW4gaGUKaXMgaW5mZXJpb3IgdG8gdGhlIGF1dGhvcnMganVzdCBtZW50aW9uZWQsIGhpcyBzdHlsZQpoYXMgYSBncmVhdGVyIHJlc2VtYmxhbmNlIHRvIG9yYXRvcnksIHdoaWNoIGlzIG5vdApzdXJwcmlzaW5nLCBhcyBoZSB3YXMgYW4gb3JhdG9yIGJlZm9yZSBoZSB3YXMgdXJnZWQKdG8gdHVybiB0byBoaXN0b3J5LiBQaGlsaXN0dXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlBoaWxpc3R1cyBvZiBTeXJhY3VzZSwgYm9ybiBhYm91dCA0MzAgQi5DLiwgd3JvdGUgYQpoaXN0b3J5IG9mIFNpY2lseS48L25vdGU+IGFsc28gZGVzZXJ2ZXMgc3BlY2lhbApkaXN0aW5jdGlvbiBhbW9uZyB0aGUgY3Jvd2Qgb2YgbGF0ZXIgaGlzdG9yaWFucywgZ29vZAp0aG91Z2ggdGhleSBtYXkgaGF2ZSBiZWVuOiBoZSB3YXMgYW4gaW1pdGF0b3Igb2YKVGh1Y3lkaWRlcywgYW5kIHRob3VnaCBmYXIgaGlzIGluZmVyaW9yLCB3YXMgc29tZXdoYXQgbW9yZSBsdWNpZC4gRXBob3J1cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkVwaG9ydXMgb2YgQ3VtYWUsIDxoaSByZW5kPSJpdGFsaWNzIj5mbG9yLiBjaXJjLjwvaGk+IDM0MCBCLkMuLCB3cm90ZSBhIHVuaXZlcnNhbApoaXN0b3J5LiBIZSB3YXMgYSBwdXBpbCBvZiBJc29jcmF0ZXMuIDxoaSByZW5kPSJpdGFsaWNzIj5DcC48L2hpPiBJSS4gdmlpaS4gMTEuPC9ub3RlPiBhY2NvcmRpbmcgdG8gSXNvY3JhdGVzLApuZWVkZWQgdGhlIHNwdXIuPG1pbGVzdG9uZSBuPSI3NSIgdW5pdD0ic2VjdGlvbiIgLz4gQ2xpdGFyY2h1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+Q2xpdGFyY2h1cyBvZiBNZWdhcmEgd3JvdGUgYSBoaXN0b3J5IG9mIFBlcnNpYSBhbmQgb2YKQWxleGFuZGVyLCB3aG9zZSBjb250ZW1wb3JhcnkgaGUgd2FzLjwvbm90ZT4gaGFzIHdvbiBhcHByb3ZhbCBieQpoaXMgdGFsZW50LCBidXQgaGlzIGFjY3VyYWN5IGhhcyBiZWVuIGltcHVnbmVkLgpUaW1hZ2VuZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRpbWFnZW5lcywgYSBTeXJpYW4gb2YgdGhlIEF1Z3VzdGFuIGFnZSwgd3JvdGUgYQpoaXN0b3J5IG9mIEFsZXhhbmRlciBhbmQgaGlzIHN1Y2Nlc3NvcnMuPC9ub3RlPiB3YXMgYm9ybiBsb25nIGFmdGVyIHRoZXNlIGF1dGhvcnMsIGJ1dApkZXNlcnZlcyBvdXIgcHJhaXNlIGZvciB0aGUgdmVyeSBmYWN0IHRoYXQgaGUgcmV2aXZlZAp0aGUgY3JlZGl0IG9mIGhpc3RvcnksIHRoZSB3cml0aW5nIG9mIHdoaWNoIGhhZCBmYWxsZW4KaW50byBuZWdsZWN0LiBJIGhhdmUgbm90IGZvcmdvdHRlbiBYZW5vcGhvbiwgYnV0CmhlIHdpbGwgZmluZCBoaXMgcGxhY2UgYW1vbmcgdGhlIHBoaWxvc29waGVycy48L3A+Cgo8L3RyYW5zbGF0aW9uPg=="
translation['10.2.73'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MyIgdW5pdD0ic2VjdGlvbiIgLz5JZiB3ZSB0dXJuIHRvIGhpc3RvcnksIHdlIHNoYWxsIGZpbmQgYSBudW1iZXIgb2YKZGlzdGluZ3Vpc2hlZCB3cml0ZXJzOyBidXQgdGhlcmUgYXJlIHR3byB3aG8gbXVzdAp1bmRvdWJ0ZWRseSBiZSBzZXQgZmFyIGFib3ZlIGFsbCB0aGVpciByaXZhbHM6IHRoZWlyCmV4Y2VsbGVuY2VzIGFyZSBkaWZmZXJlbnQgaW4ga2luZCwgYnV0IGhhdmUgd29uCmFsbW9zdCBlcXVhbCBwcmFpc2UuIFRodWN5ZGlkZXMgaXMgY29tcGFjdCBpbgp0ZXh0dXJlLCB0ZXJzZSBhbmQgZXZlciBlYWdlciB0byBwcmVzcyBmb3J3YXJkOiBIZXJvZG90dXMgaXMgcGxlYXNhbnQsIGx1Y2lkIGFuZCBkaWZmdXNlOiB0aGUgZm9ybWVyCmV4Y2VscyBpbiB2aWdvdXIsIHNwZWVjaGVzIGFuZCB0aGUgZXhwcmVzc2lvbiBvZiB0aGUKc3Ryb25nZXIgcGFzc2lvbnM7IHRoZSBsYXR0ZXIgaW4gY2hhcm0sIGNvbnZlcnNhdGlvbnMKYW5kIHRoZSBkZWxpbmVhdGlvbiBvZiB0aGUgZ2VudGxlciBlbW90aW9ucy48L3RyYW5zbGF0aW9uPg=="
translation['10.2.74'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NCIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlb3BvbXB1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGVvcG9tcHVzIG9mIENoaW9zLCBib3JuIGFib3V0IDM3OCBCLkMuLCB3cm90ZSBhCmhpc3Rvcnkgb2YgR3JlZWNlICg8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5IZWxsZW5pY2E8L2hpPikgZnJvbSBjbG9zZSBvZiBQZWxvcG9ubmVzaWFuIHdhcgp0byAzOTQgQi5DLiwgYW5kIGEgaGlzdG9yeSBvZiBHcmVlY2UgaW4gcmVsYXRpb24gdG8gUGhpbGlwIG9mCk1hY2Vkb24gKDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlBoaWxpcHBpY2E8L2hpPikuIEhpcyBtYXN0ZXIsIElzb2NyYXRlcywgdXJnZWQgaGltIHRvCndyaXRlIGhpc3RvcnkuPC9ub3RlPiBjb21lcyBuZXh0LCBhbmQgdGhvdWdoIGFzIGEgaGlzdG9yaWFuIGhlCmlzIGluZmVyaW9yIHRvIHRoZSBhdXRob3JzIGp1c3QgbWVudGlvbmVkLCBoaXMgc3R5bGUKaGFzIGEgZ3JlYXRlciByZXNlbWJsYW5jZSB0byBvcmF0b3J5LCB3aGljaCBpcyBub3QKc3VycHJpc2luZywgYXMgaGUgd2FzIGFuIG9yYXRvciBiZWZvcmUgaGUgd2FzIHVyZ2VkCnRvIHR1cm4gdG8gaGlzdG9yeS4gUGhpbGlzdHVzPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SGVsbGVuaWNhPC9oaT4pIGZyb20gY2xvc2Ugb2YgUGVsb3Bvbm5lc2lhbiB3YXIKdG8gMzk0IEIuQy4sIGFuZCBhIGhpc3Rvcnkgb2YgR3JlZWNlIGluIHJlbGF0aW9uIHRvIFBoaWxpcCBvZgpNYWNlZG9uICg8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5QaGlsaXBwaWNhPC9oaT4pLiBIaXMgbWFzdGVyLCBJc29jcmF0ZXMsIHVyZ2VkIGhpbSB0bwp3cml0ZSBoaXN0b3J5Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5QaGlsaXN0dXMgb2YgU3lyYWN1c2UsIGJvcm4gYWJvdXQgNDMwIEIuQy4sIHdyb3RlIGEKaGlzdG9yeSBvZiBTaWNpbHkuPC9ub3RlPiBhbHNvIGRlc2VydmVzIHNwZWNpYWwKZGlzdGluY3Rpb24gYW1vbmcgdGhlIGNyb3dkIG9mIGxhdGVyIGhpc3RvcmlhbnMsIGdvb2QKdGhvdWdoIHRoZXkgbWF5IGhhdmUgYmVlbjogaGUgd2FzIGFuIGltaXRhdG9yIG9mClRodWN5ZGlkZXMsIGFuZCB0aG91Z2ggZmFyIGhpcyBpbmZlcmlvciwgd2FzIHNvbWV3aGF0IG1vcmUgbHVjaWQuIEVwaG9ydXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkVwaG9ydXMgb2YgQ3VtYWUsIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmZsb3IuIGNpcmMuPC9oaT4gMzQwIEIuQy4sIHdyb3RlIGEgdW5pdmVyc2FsCmhpc3RvcnkuIEhlIHdhcyBhIHB1cGlsIG9mIElzb2NyYXRlcy4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Q3AuPC9oaT4gSUkuIHZpaWkuIDExLjwvbm90ZT4gYWNjb3JkaW5nIHRvIElzb2NyYXRlcywKbmVlZGVkIHRoZSBzcHVyLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmZsb3IuIGNpcmMuPC9oaT4gMzQwIEIuQy4sIHdyb3RlIGEgdW5pdmVyc2FsCmhpc3RvcnkuIEhlIHdhcyBhIHB1cGlsIG9mIElzb2NyYXRlcy4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Q3AuPC9oaT4gSUkuIHZpaWkuIDExLjwvdHJhbnNsYXRpb24+"
translation['10.2.75'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NSIgdW5pdD0ic2VjdGlvbiIgLz4gQ2xpdGFyY2h1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5DbGl0YXJjaHVzIG9mIE1lZ2FyYSB3cm90ZSBhIGhpc3Rvcnkgb2YgUGVyc2lhIGFuZCBvZgpBbGV4YW5kZXIsIHdob3NlIGNvbnRlbXBvcmFyeSBoZSB3YXMuPC9ub3RlPiBoYXMgd29uIGFwcHJvdmFsIGJ5CmhpcyB0YWxlbnQsIGJ1dCBoaXMgYWNjdXJhY3kgaGFzIGJlZW4gaW1wdWduZWQuClRpbWFnZW5lczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaW1hZ2VuZXMsIGEgU3lyaWFuIG9mIHRoZSBBdWd1c3RhbiBhZ2UsIHdyb3RlIGEKaGlzdG9yeSBvZiBBbGV4YW5kZXIgYW5kIGhpcyBzdWNjZXNzb3JzLjwvbm90ZT4gd2FzIGJvcm4gbG9uZyBhZnRlciB0aGVzZSBhdXRob3JzLCBidXQKZGVzZXJ2ZXMgb3VyIHByYWlzZSBmb3IgdGhlIHZlcnkgZmFjdCB0aGF0IGhlIHJldml2ZWQKdGhlIGNyZWRpdCBvZiBoaXN0b3J5LCB0aGUgd3JpdGluZyBvZiB3aGljaCBoYWQgZmFsbGVuCmludG8gbmVnbGVjdC4gSSBoYXZlIG5vdCBmb3Jnb3R0ZW4gWGVub3Bob24sIGJ1dApoZSB3aWxsIGZpbmQgaGlzIHBsYWNlIGFtb25nIHRoZSBwaGlsb3NvcGhlcnMuPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDUiIC8+Cgo8cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBmb2xsb3dzIGEgdmFzdCBhcm15IG9mIG9yYXRvcnMsIEF0aGVucyBhbG9uZQpoYXZpbmcgcHJvZHVjZWQgdGVuIHJlbWFya2FibGUgb3JhdG9yczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+QW50aXBob24sIEFuZG9jaWRlcywgTHlzaWFzIChmbG9yLiA0MDPigJMzODApLCBJc29jcmF0ZXMKKDQzNeKAkzMzOCksIElzYWN1cywgRGVtb3N0aGVuZXMsIEFlc2NoaW5lcywgTHljYXJndXMsCkh5cGVyaWRlcyBhbmQgRGluYXJjaHVzLjwvbm90ZT4gaW4gdGhlCnNhbWUgZ2VuZXJhdGlvbi4gT2YgdGhlc2UgRGVybW9zdGhlbmVzIGlzIGZhciB0aGUKZ3JlYXRlc3Q6IGluZGVlZCBoZSBjYW1lIHRvIGJlIHJlZ2FyZGVkIGFsbW9zdCBhcwp0aGUgc29sZSBwYXR0ZXJuIG9mIG9yYXRvcnkuIFN1Y2ggaXMgdGhlIGZvcmNlIGFuZApjb21wYWN0bmVzcyBvZiBoaXMgbGFuZ3VhZ2UsIHNvIG11c2N1bGFyIGhpcyBzdHlsZSwKc28gZnJlZSBmcm9tIHRhbWVuZXNzIGFuZCBzbyBzZWxmLWNvbnRyb2xsZWQsIHRoYXQKeW91IHdpbGwgZmluZCBub3RoaW5nIGluIGhpbSB0aGF0IGlzIGVpdGhlciB0b28gbXVjaApvciB0b28gbGl0dGxlLjxtaWxlc3RvbmUgbj0iNzciIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBzdHlsZSBvZiBBZXNlaGluZXMgaXMgZnVsbGVyIGFuZAptb3JlIGRpZmZ1c2UsIHdoaWxlIGhpcyBsYWNrIG9mIHJlc3RyYWludCBnaXZlcyBhbgphcHBlYXJhbmNlIG9mIGdyYW5kZXVyLiBCdXQgaGUgaGFzIG1vcmUgZmxlc2ggYW5kCmxlc3MgbXVzY2xlLiBIeXBlcmlkZXMgaGFzIGV4dHJhb3JkaW5hcnkgY2hhcm0gYW5kCnBvaW50LCBidXQgaXMgYmV0dGVyIHF1YWxpZmllZCwgbm90IHRvIHNheSBtb3JlIHVzZWZ1bCwKZm9yIGNhc2VzIG9mIG1pbm9yIGltcG9ydGFuY2UuPG1pbGVzdG9uZSBuPSI3OCIgdW5pdD0ic2VjdGlvbiIgLz4gTHlzaWFzIGJlbG9uZ3MgdG8gYW4KZWFybGllciBnZW5lcmF0aW9uIHRoYW4gdGhvc2Ugd2hvbSBJIGhhdmUganVzdAptZW50aW9uZWQuIEhlIGhhcyBzdWJ0bGV0eSBhbmQgZWxlZ2FuY2UgYW5kLCBpZgp0aGUgb3JhdG9yJ3Mgc29sZSBkdXR5IHdlcmUgbWVyZWx5IHRvIGluc3RydWN0LCBpdAp3b3VsZCBiZSBpbXBvc3NpYmxlIHRvIGNvbmNlaXZlIGdyZWF0ZXIgcGVyZmVjdGlvbi4KRm9yIHRoZXJlIGlzIG5vdGhpbmcgaXJyZWxldmFudCBvciBmYXItZmV0Y2hlZCBpbiBoaXMKc3BlZWNoZXMuIE5vbmUgdGhlIGxlc3MgSSB3b3VsZCBjb21wYXJlIGhpbSB0byBhCmNsZWFyIHNwcmluZyByYXRoZXIgdGhhbiB0byBhIG1pZ2h0eSByaXZlci48bWlsZXN0b25lIG49Ijc5IiB1bml0PSJzZWN0aW9uIiAvPiBJc29jcmF0ZXMKd2FzIGFuIGV4cG9uZW50IG9mIGEgZGlmZmVyZW50IHN0eWxlIG9mIG9yYXRvcnk6IGhlIGlzCm5lYXQgYW5kIHBvbGlzaGVkIGFuZCBiZXR0ZXIgc3VpdGVkIHRvIHRoZSBmZW5jaW5nc2Nob29sIHRoYW4gdG8gdGhlIGJhdHRsZWZpZWxkLiBIZSBlbGFib3JhdGVkIGFsbCB0aGUKZ3JhY2VzIG9mIHN0eWxlLCBub3Igd2FzIGhlIHdpdGhvdXQganVzdGlmaWNhdGlvbi4gRm9yCmxpZSBoYWQgdHJhaW5lZCBoaW1zZWxmIGZvciB0aGUgbGVjdHVyZS1yb29tIGFuZCBub3QKdGhlIGxhdy1jb3VydHMuIEhlIGlzIHJlYWR5IGluIGludmVudGlvbiwgaGlzIG1vcmFsCmlkZWFscyBhcmUgaGlnaCBhbmQgdGhlIGNhcmUgd2hpY2ggaGUgYmVzdG93cyB1cG9uCmhpcyByaHl0aG0gaXMgc3VjaCBhcyB0byBiZSBhIHBvc2l0aXZlIGZhdWx0LjxtaWxlc3RvbmUgbj0iODAiIHVuaXQ9InNlY3Rpb24iIC8+IEkgZG8Kbm90IHJlZ2FyZCB0aGVzZSBhcyB0aGUgc29sZSBtZXJpdHMgb2YgdGhlIG9yYXRvcnMgb2YKd2hvbSBJIGhhdmUgc3Bva2VuLCBidXQgaGF2ZSBzZWxlY3RlZCB3aGF0IHNlZW1lZAp0byBtZSB0aGVpciBjaGllZiBleGNlbGxlbmNlcywgd2hpbGUgdGhvc2Ugd2hvbSBJCmhhdmUgcGFzc2VkIG92ZXIgaW4gc2lsZW5jZSB3ZXJlIGZhciBmcm9tIGJlaW5nCmluZGlmZmVyZW50LiBJbiBmYWN0LCBJIHdpbGwgcmVhZGlseSBhZG1pdCB0aGF0IHRoZQoKPHBiIGlkPSJwLjQ3IiAvPgoKZmFtb3VzIERlbWV0cml1cyBvZiBQaGFsZXJ1bSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkdvdmVybmVkIEF0aGVucyBhcyBDYXNzYW5kZXIncyB2aWNlZ2VyZW50IDMxN+KAkzMwNzoKdGhlbiB0aWVkIHRvIEVneXB0LCB3aGVyZSBoZSBkaWVkIGluIDI4My48L25vdGU+IHdobyBpcyBzYWlkIHRvCmhhdmUgYmVlbiB0aGUgZmlyc3QgdG8gc2V0IG9yYXRvcnkgb24gdGhlIGRvd253YXJkIHBhdGgsIHdhcyBhIG1hbiBvZiBncmVhdCB0YWxlbnQgYW5kIGVsb3F1ZW5jZQphbmQgZGVzZXJ2ZXMgdG8gYmUgcmVtZW1iZXJlZCwgaWYgb25seSBmb3IgdGhlCmZhY3QgdGhhdCBoZSBpcyBhbG1vc3QgdGhlIGxhc3Qgb2YgdGhlIEF0dGljCnNjaG9vbCB3aG8gY2FuIGJlIGNhbGxlZCBhbiBvcmF0b3I6IGluZGVlZCBDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5kZSBPci48L2hpPiBpaS4gOTUuIDxoaSByZW5kPSJpdGFsaWNzIj5PcmF0LiA5Mi48L2hpPiBUaGUgPHF1b3RlPmludGVybWVkaWF0ZTwvcXVvdGU+IHN0eWxlIGlzCnRoYXQgd2hpY2ggbGllcyBiZXR3ZWVuIHRoZSA8cXVvdGU+Z3JhbmQ8L3F1b3RlPiBhbmQgdGhlIDxxdW90ZT5wbGFpbjwvcXVvdGU+CnN0eWxlcy48L25vdGU+CnByZWZlcnMgaGltIHRvIGFsbCBvdGhlciBvcmF0b3JzIG9mIHRoZSBpbnRlcm1lZGlhdGUKc2Nob29sLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.2.76'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBmb2xsb3dzIGEgdmFzdCBhcm15IG9mIG9yYXRvcnMsIEF0aGVucyBhbG9uZQpoYXZpbmcgcHJvZHVjZWQgdGVuIHJlbWFya2FibGUgb3JhdG9yczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5BbnRpcGhvbiwgQW5kb2NpZGVzLCBMeXNpYXMgKGZsb3IuIDQwM+KAkzM4MCksIElzb2NyYXRlcwooNDM14oCTMzM4KSwgSXNhY3VzLCBEZW1vc3RoZW5lcywgQWVzY2hpbmVzLCBMeWNhcmd1cywKSHlwZXJpZGVzIGFuZCBEaW5hcmNodXMuPC9ub3RlPiBpbiB0aGUKc2FtZSBnZW5lcmF0aW9uLiBPZiB0aGVzZSBEZXJtb3N0aGVuZXMgaXMgZmFyIHRoZQpncmVhdGVzdDogaW5kZWVkIGhlIGNhbWUgdG8gYmUgcmVnYXJkZWQgYWxtb3N0IGFzCnRoZSBzb2xlIHBhdHRlcm4gb2Ygb3JhdG9yeS4gU3VjaCBpcyB0aGUgZm9yY2UgYW5kCmNvbXBhY3RuZXNzIG9mIGhpcyBsYW5ndWFnZSwgc28gbXVzY3VsYXIgaGlzIHN0eWxlLApzbyBmcmVlIGZyb20gdGFtZW5lc3MgYW5kIHNvIHNlbGYtY29udHJvbGxlZCwgdGhhdAp5b3Ugd2lsbCBmaW5kIG5vdGhpbmcgaW4gaGltIHRoYXQgaXMgZWl0aGVyIHRvbyBtdWNoCm9yIHRvbyBsaXR0bGUuPC90cmFuc2xhdGlvbj4="
translation['10.2.77'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NyIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIHN0eWxlIG9mIEFlc2VoaW5lcyBpcyBmdWxsZXIgYW5kCm1vcmUgZGlmZnVzZSwgd2hpbGUgaGlzIGxhY2sgb2YgcmVzdHJhaW50IGdpdmVzIGFuCmFwcGVhcmFuY2Ugb2YgZ3JhbmRldXIuIEJ1dCBoZSBoYXMgbW9yZSBmbGVzaCBhbmQKbGVzcyBtdXNjbGUuIEh5cGVyaWRlcyBoYXMgZXh0cmFvcmRpbmFyeSBjaGFybSBhbmQKcG9pbnQsIGJ1dCBpcyBiZXR0ZXIgcXVhbGlmaWVkLCBub3QgdG8gc2F5IG1vcmUgdXNlZnVsLApmb3IgY2FzZXMgb2YgbWlub3IgaW1wb3J0YW5jZS48L3RyYW5zbGF0aW9uPg=="
translation['10.2.78'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OCIgdW5pdD0ic2VjdGlvbiIgLz4gTHlzaWFzIGJlbG9uZ3MgdG8gYW4KZWFybGllciBnZW5lcmF0aW9uIHRoYW4gdGhvc2Ugd2hvbSBJIGhhdmUganVzdAptZW50aW9uZWQuIEhlIGhhcyBzdWJ0bGV0eSBhbmQgZWxlZ2FuY2UgYW5kLCBpZgp0aGUgb3JhdG9yJ3Mgc29sZSBkdXR5IHdlcmUgbWVyZWx5IHRvIGluc3RydWN0LCBpdAp3b3VsZCBiZSBpbXBvc3NpYmxlIHRvIGNvbmNlaXZlIGdyZWF0ZXIgcGVyZmVjdGlvbi4KRm9yIHRoZXJlIGlzIG5vdGhpbmcgaXJyZWxldmFudCBvciBmYXItZmV0Y2hlZCBpbiBoaXMKc3BlZWNoZXMuIE5vbmUgdGhlIGxlc3MgSSB3b3VsZCBjb21wYXJlIGhpbSB0byBhCmNsZWFyIHNwcmluZyByYXRoZXIgdGhhbiB0byBhIG1pZ2h0eSByaXZlci48L3RyYW5zbGF0aW9uPg=="
translation['10.2.79'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OSIgdW5pdD0ic2VjdGlvbiIgLz4gSXNvY3JhdGVzCndhcyBhbiBleHBvbmVudCBvZiBhIGRpZmZlcmVudCBzdHlsZSBvZiBvcmF0b3J5OiBoZSBpcwpuZWF0IGFuZCBwb2xpc2hlZCBhbmQgYmV0dGVyIHN1aXRlZCB0byB0aGUgZmVuY2luZ3NjaG9vbCB0aGFuIHRvIHRoZSBiYXR0bGVmaWVsZC4gSGUgZWxhYm9yYXRlZCBhbGwgdGhlCmdyYWNlcyBvZiBzdHlsZSwgbm9yIHdhcyBoZSB3aXRob3V0IGp1c3RpZmljYXRpb24uIEZvcgpsaWUgaGFkIHRyYWluZWQgaGltc2VsZiBmb3IgdGhlIGxlY3R1cmUtcm9vbSBhbmQgbm90CnRoZSBsYXctY291cnRzLiBIZSBpcyByZWFkeSBpbiBpbnZlbnRpb24sIGhpcyBtb3JhbAppZGVhbHMgYXJlIGhpZ2ggYW5kIHRoZSBjYXJlIHdoaWNoIGhlIGJlc3Rvd3MgdXBvbgpoaXMgcmh5dGhtIGlzIHN1Y2ggYXMgdG8gYmUgYSBwb3NpdGl2ZSBmYXVsdC48L3RyYW5zbGF0aW9uPg=="
translation['10.2.80'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MCIgdW5pdD0ic2VjdGlvbiIgLz4gSSBkbwpub3QgcmVnYXJkIHRoZXNlIGFzIHRoZSBzb2xlIG1lcml0cyBvZiB0aGUgb3JhdG9ycyBvZgp3aG9tIEkgaGF2ZSBzcG9rZW4sIGJ1dCBoYXZlIHNlbGVjdGVkIHdoYXQgc2VlbWVkCnRvIG1lIHRoZWlyIGNoaWVmIGV4Y2VsbGVuY2VzLCB3aGlsZSB0aG9zZSB3aG9tIEkKaGF2ZSBwYXNzZWQgb3ZlciBpbiBzaWxlbmNlIHdlcmUgZmFyIGZyb20gYmVpbmcKaW5kaWZmZXJlbnQuIEluIGZhY3QsIEkgd2lsbCByZWFkaWx5IGFkbWl0IHRoYXQgdGhlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40NyIgLz4KCmZhbW91cyBEZW1ldHJpdXMgb2YgUGhhbGVydW0sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkdvdmVybmVkIEF0aGVucyBhcyBDYXNzYW5kZXIncyB2aWNlZ2VyZW50IDMxN+KAkzMwNzoKdGhlbiB0aWVkIHRvIEVneXB0LCB3aGVyZSBoZSBkaWVkIGluIDI4My48L25vdGU+IHdobyBpcyBzYWlkIHRvCmhhdmUgYmVlbiB0aGUgZmlyc3QgdG8gc2V0IG9yYXRvcnkgb24gdGhlIGRvd253YXJkIHBhdGgsIHdhcyBhIG1hbiBvZiBncmVhdCB0YWxlbnQgYW5kIGVsb3F1ZW5jZQphbmQgZGVzZXJ2ZXMgdG8gYmUgcmVtZW1iZXJlZCwgaWYgb25seSBmb3IgdGhlCmZhY3QgdGhhdCBoZSBpcyBhbG1vc3QgdGhlIGxhc3Qgb2YgdGhlIEF0dGljCnNjaG9vbCB3aG8gY2FuIGJlIGNhbGxlZCBhbiBvcmF0b3I6IGluZGVlZCBDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gaWkuIDk1LiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5PcmF0LiA5Mi48L2hpPiBUaGUgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+aW50ZXJtZWRpYXRlPC9xdW90ZT4gc3R5bGUgaXMKdGhhdCB3aGljaCBsaWVzIGJldHdlZW4gdGhlIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmdyYW5kPC9xdW90ZT4gYW5kIHRoZSA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5wbGFpbjwvcXVvdGU+CnN0eWxlcy48L25vdGU+CnByZWZlcnMgaGltIHRvIGFsbCBvdGhlciBvcmF0b3JzIG9mIHRoZSBpbnRlcm1lZGlhdGUKc2Nob29sLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIE9yLjwvaGk+IGlpLiA5NS4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T3JhdC4gOTIuPC9oaT4gVGhlIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmludGVybWVkaWF0ZTwvcXVvdGU+IHN0eWxlIGlzCnRoYXQgd2hpY2ggbGllcyBiZXR3ZWVuIHRoZSA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5ncmFuZDwvcXVvdGU+IGFuZCB0aGUgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+cGxhaW48L3F1b3RlPgpzdHlsZXMuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iODEiIHVuaXQ9InNlY3Rpb24iIC8+UHJvY2VlZGluZyB0byB0aGUgcGhpbG9zb3BoZXJzLCBmcm9tIHdob20gQ2ljZXJvCmFja25vd2xlZGdlcyB0aGF0IGhlIGRlcml2ZWQgc3VjaCBhIGxhcmdlIHBvcnRpb24Kb2YgaGlzIGVsb3F1ZW5jZSwgd2Ugc2hhbGwgYWxsIGFkbWl0IHRoYXQgUGxhdG8gaXMKc3VwcmVtZSB3aGV0aGVyIGluIGFjdXRlbmVzcyBvciBwZXJjZXB0aW9uIG9yIGluCnZpcnR1ZSBvZiBoaXMgZGl2aW5lIGdpZnQgb2Ygc3R5bGUsIHdoaWNoIGlzIHdvcnRoeSBvZgpIb21lci4gRm9yIGhlIHNvYXJzIGhpZ2ggYWJvdmUgdGhlIGxldmVscyBvZgpvcmRpbmFyeSBwcm9zZSBvciwgYXMgdGhlIEdyZWVrcyBjYWxsIGl0LCBwZWRlc3RyaWFuCmxhbmd1YWdlLCBhbmQgc2VlbXMgdG8gbWUgdG8gYmUgaW5zcGlyZWQgbm90IGJ5Cm1lcmUgaHVtYW4gZ2VuaXVzLCBidXQsIGFzIGl0IHdlcmUsIGJ5IHRoZSBvcmFjbGVzCm9mIHRoZSBnb2Qgb2YgRGVscGhpLjxtaWxlc3RvbmUgbj0iODIiIHVuaXQ9InNlY3Rpb24iIC8+IFdoeSBzaG91bGQgSSBzcGVhayBvZiB0aGUKdW5hZmZlY3RlZCBjaGFybSBvZiBYZW5vcGhvbiwgc28gZmFyIGJleW9uZCB0aGUKcG93ZXIgb2YgYWZmZWN0YXRpb24gdG8gYXR0YWluPyBUaGUgR3JhY2VzIHRoZW1zZWx2ZXMgc2VlbSB0byBoYXZlIG1vdWxkZWQgaGlzIHN0eWxlLCBhbmQgd2UgbWF5CndpdGggdGhlIHV0bW9zdCBqdXN0aWNlIHNheSBvZiBoaW0sIHdoYXQgdGhlIHdyaXRlcgpvZiB0aGUgb2xkIGNvbWVkeTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+RXVwb2xpcywgPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPnBlaXF3LyB0aXMgZSlwZWthL3FpemVuIGUpcGlcIHRvaT1zIHhlaS9sZXNpbi48L2ZvcmVpZ24+PC9ub3RlPiBzYWlkIG9mIFBlcmljbGVzLCB0aGF0IHRoZSBnb2RkZXNzCm9mIHBlcnN1YXNpb24gc2F0IGVudGhyb25lZCB1cG9uIGhpcyBsaXBzLjxtaWxlc3RvbmUgbj0iODMiIHVuaXQ9InNlY3Rpb24iIC8+IFdoeQpzaG91bGQgSSBkd2VsbCBvbiB0aGUgZWxlZ2FuY2Ugb2YgdGhlIHJlc3Qgb2YgdGhlClNvY3JhdGljcz8gb3Igb24gQXJpc3RvdGxlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PHF1b3RlPlN3ZWV0PC9xdW90ZT4gaXMgdGhlIGxhc3QgZXBpdGhldCB0byBiZSBhcHBsaWVkIHRvIHRoZQpzdXJ2aXZpbmcgd29ya3Mgb2YgQXJpc3RvdGxlLiBCdXQgRGlvbnlzaXVzIG9mIEhhbGljYXJuYXNzdXMKYW5kIENpY2VybyBwcmFpc2UgaGltIG5vIGxlc3Mgd2FybWx5LCByZWZlcnJpbmcsIG5vIGRvdWJ0LAp0byB3b3JrcyB0aGF0IGFyZSBsb3N0Ljwvbm90ZT4gd2l0aCByZWdhcmQgdG8gd2hvbSBJCmhlc2l0YXRlIHdoZXRoZXIgdG8gcHJhaXNlIGhpbSBtb3JlIGZvciBoaXMga25vd2xlZGdlLCBmb3IgdGhlIG11bHRpdHVkZSBvZiBoaXMgd3JpdGluZ3MsIHRoZSBzd2VldG5lc3Mgb2YgaGlzIHN0eWxlLCB0aGUgcGVuZXRyYXRpb24gcmV2ZWFsZWQgYnkgaGlzCmRpc2NvdmVyaWVzIG9yIHRoZSB2YXJpZXR5IG9mIHRoZSB0YXNrcyB3aGljaCBoZQoKPHBiIGlkPSJwLjQ5IiAvPgoKZXNzYXllZD8gSW4gVGhlb3BocmFzdHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGVvcGhyYXN0dXMsIEFyaXN0b3RsZSdzIHN1Y2Nlc3NvciBhcyBoZWFkIG9mIGhpcyBzY2hvb2wKKDMyMuKAkzI4NykuIERpb2dlbmVzIExhZXJ0aXVzICh2LiAzOCkgc2F5cyB0aGF0IGhpcyByZWFsIG5hbWUKd2FzIFR5cnRhbXVzLCBidXQgdGhhdCBBcmlzdG90bGUgY2FsbGVkIGhpbSBUaGVvcGhyYXN0dXMKYmVjYXVzZSBvZiB0aGUgPHF1b3RlPmRpdmluZSBxdWFsaXRpZXMgb2YgaGlzIHN0eWxlPC9xdW90ZT4gKDxmb3JlaWduIGxhbmc9ImdyZWVrIj5mcmEvc2lzPC9mb3JlaWduPikuPC9ub3RlPiB3ZSBmaW5kIHN1Y2ggYSBzdXBlcmh1bWFuIGJyaWxsaWFuY2Ugb2Ygc3R5bGUgdGhhdCBoaXMgbmFtZSBpcyBzYWlkIHRvIGJlCmRlcml2ZWQgdGhlcmVmcm9tLjxtaWxlc3RvbmUgbj0iODQiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBhbmNpZW50IFN0b2ljcyBpbmR1bGdlZAp0aGVpciBlbG9xdWVuY2UgY29tcGFyYXRpdmVseSBsaXR0bGUuIFN0aWxsLCB0aGV5CnBsZWFkZWQgdGhlIGNhdXNlIG9mIHZpcnR1ZSwgYW5kIHRoZSBydWxlcyB3aGljaAp0aGV5IGxhaWQgZG93biBmb3IgYXJndW1lbnQgYW5kIHByb29mIGhhdmUgYmVlbiBvZgp0aGUgdXRtb3N0IHZhbHVlLiBCdXQgdGhleSBzaG93ZWQgdGhlbXNlbHZlcwpzaHJld2QgdGhpbmtlcnMgcmF0aGVyIHRoYW4gc3RyaWtpbmcgb3JhdG9ycywgd2hpY2gKaW5kZWVkIHRoZXkgbmV2ZXIgYWltZWQgYXQgYmVpbmcuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['10.2.81'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MSIgdW5pdD0ic2VjdGlvbiIgLz5Qcm9jZWVkaW5nIHRvIHRoZSBwaGlsb3NvcGhlcnMsIGZyb20gd2hvbSBDaWNlcm8KYWNrbm93bGVkZ2VzIHRoYXQgaGUgZGVyaXZlZCBzdWNoIGEgbGFyZ2UgcG9ydGlvbgpvZiBoaXMgZWxvcXVlbmNlLCB3ZSBzaGFsbCBhbGwgYWRtaXQgdGhhdCBQbGF0byBpcwpzdXByZW1lIHdoZXRoZXIgaW4gYWN1dGVuZXNzIG9yIHBlcmNlcHRpb24gb3IgaW4KdmlydHVlIG9mIGhpcyBkaXZpbmUgZ2lmdCBvZiBzdHlsZSwgd2hpY2ggaXMgd29ydGh5IG9mCkhvbWVyLiBGb3IgaGUgc29hcnMgaGlnaCBhYm92ZSB0aGUgbGV2ZWxzIG9mCm9yZGluYXJ5IHByb3NlIG9yLCBhcyB0aGUgR3JlZWtzIGNhbGwgaXQsIHBlZGVzdHJpYW4KbGFuZ3VhZ2UsIGFuZCBzZWVtcyB0byBtZSB0byBiZSBpbnNwaXJlZCBub3QgYnkKbWVyZSBodW1hbiBnZW5pdXMsIGJ1dCwgYXMgaXQgd2VyZSwgYnkgdGhlIG9yYWNsZXMKb2YgdGhlIGdvZCBvZiBEZWxwaGkuPC90cmFuc2xhdGlvbj4="
translation['10.2.82'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MiIgdW5pdD0ic2VjdGlvbiIgLz4gV2h5IHNob3VsZCBJIHNwZWFrIG9mIHRoZQp1bmFmZmVjdGVkIGNoYXJtIG9mIFhlbm9waG9uLCBzbyBmYXIgYmV5b25kIHRoZQpwb3dlciBvZiBhZmZlY3RhdGlvbiB0byBhdHRhaW4/IFRoZSBHcmFjZXMgdGhlbXNlbHZlcyBzZWVtIHRvIGhhdmUgbW91bGRlZCBoaXMgc3R5bGUsIGFuZCB3ZSBtYXkKd2l0aCB0aGUgdXRtb3N0IGp1c3RpY2Ugc2F5IG9mIGhpbSwgd2hhdCB0aGUgd3JpdGVyCm9mIHRoZSBvbGQgY29tZWR5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkV1cG9saXMsIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPnBlaXF3LyB0aXMgZSlwZWthL3FpemVuIGUpcGlcIHRvaT1zIHhlaS9sZXNpbi48L2ZvcmVpZ24+PC9ub3RlPiBzYWlkIG9mIFBlcmljbGVzLCB0aGF0IHRoZSBnb2RkZXNzCm9mIHBlcnN1YXNpb24gc2F0IGVudGhyb25lZCB1cG9uIGhpcyBsaXBzLjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPnBlaXF3LyB0aXMgZSlwZWthL3FpemVuIGUpcGlcIHRvaT1zIHhlaS9sZXNpbi48L2ZvcmVpZ24+PC90cmFuc2xhdGlvbj4="
translation['10.2.83'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MyIgdW5pdD0ic2VjdGlvbiIgLz4gV2h5CnNob3VsZCBJIGR3ZWxsIG9uIHRoZSBlbGVnYW5jZSBvZiB0aGUgcmVzdCBvZiB0aGUKU29jcmF0aWNzPyBvciBvbiBBcmlzdG90bGUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPlN3ZWV0PC9xdW90ZT4gaXMgdGhlIGxhc3QgZXBpdGhldCB0byBiZSBhcHBsaWVkIHRvIHRoZQpzdXJ2aXZpbmcgd29ya3Mgb2YgQXJpc3RvdGxlLiBCdXQgRGlvbnlzaXVzIG9mIEhhbGljYXJuYXNzdXMKYW5kIENpY2VybyBwcmFpc2UgaGltIG5vIGxlc3Mgd2FybWx5LCByZWZlcnJpbmcsIG5vIGRvdWJ0LAp0byB3b3JrcyB0aGF0IGFyZSBsb3N0Ljwvbm90ZT4gd2l0aCByZWdhcmQgdG8gd2hvbSBJCmhlc2l0YXRlIHdoZXRoZXIgdG8gcHJhaXNlIGhpbSBtb3JlIGZvciBoaXMga25vd2xlZGdlLCBmb3IgdGhlIG11bHRpdHVkZSBvZiBoaXMgd3JpdGluZ3MsIHRoZSBzd2VldG5lc3Mgb2YgaGlzIHN0eWxlLCB0aGUgcGVuZXRyYXRpb24gcmV2ZWFsZWQgYnkgaGlzCmRpc2NvdmVyaWVzIG9yIHRoZSB2YXJpZXR5IG9mIHRoZSB0YXNrcyB3aGljaCBoZQoKPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U3dlZXQ8L3F1b3RlPiBpcyB0aGUgbGFzdCBlcGl0aGV0IHRvIGJlIGFwcGxpZWQgdG8gdGhlCnN1cnZpdmluZyB3b3JrcyBvZiBBcmlzdG90bGUuIEJ1dCBEaW9ueXNpdXMgb2YgSGFsaWNhcm5hc3N1cwphbmQgQ2ljZXJvIHByYWlzZSBoaW0gbm8gbGVzcyB3YXJtbHksIHJlZmVycmluZywgbm8gZG91YnQsCnRvIHdvcmtzIHRoYXQgYXJlIGxvc3QuPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDkiIC8+Cgplc3NheWVkPyBJbiBUaGVvcGhyYXN0dXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlb3BocmFzdHVzLCBBcmlzdG90bGUncyBzdWNjZXNzb3IgYXMgaGVhZCBvZiBoaXMgc2Nob29sCigzMjLigJMyODcpLiBEaW9nZW5lcyBMYWVydGl1cyAodi4gMzgpIHNheXMgdGhhdCBoaXMgcmVhbCBuYW1lCndhcyBUeXJ0YW11cywgYnV0IHRoYXQgQXJpc3RvdGxlIGNhbGxlZCBoaW0gVGhlb3BocmFzdHVzCmJlY2F1c2Ugb2YgdGhlIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmRpdmluZSBxdWFsaXRpZXMgb2YgaGlzIHN0eWxlPC9xdW90ZT4gKDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPmZyYS9zaXM8L2ZvcmVpZ24+KS48L25vdGU+IHdlIGZpbmQgc3VjaCBhIHN1cGVyaHVtYW4gYnJpbGxpYW5jZSBvZiBzdHlsZSB0aGF0IGhpcyBuYW1lIGlzIHNhaWQgdG8gYmUKZGVyaXZlZCB0aGVyZWZyb20uPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+ZGl2aW5lIHF1YWxpdGllcyBvZiBoaXMgc3R5bGU8L3F1b3RlPiAoPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+ZnJhL3NpczwvZm9yZWlnbj4pLjwvdHJhbnNsYXRpb24+"
translation['10.2.84'] = ""
translation['10.2.85'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NSIgdW5pdD0ic2VjdGlvbiIgLz5JIG5vdyBjb21lIHRvIFJvbWFuIGF1dGhvcnMsIGFuZCBzaGFsbCBmb2xsb3cKdGhlIHNhbWUgb3JkZXIgaW4gZGVhbGluZyB3aXRoIHRoZW0uIEFzIGFtb25nCkdyZWVrIGF1dGhvcnMgSG9tZXIgcHJvdmlkZWQgdXMgd2l0aCB0aGUgbW9zdAphdXNwaWNpb3VzIG9wZW5pbmcsIHNvIHdpbGwgVmlyZ2lsIGFtb25nIG91ciBvd24uCkZvciBvZiBhbGwgZXBpYyBwb2V0cywgR3JlZWsgb3IgUm9tYW4sIGhlLCB3aXRob3V0CmRvdWJ0LCBtb3N0IG5lYXJseSBhcHByb2FjaGVzIHRvIEhvbWVyLjwvdHJhbnNsYXRpb24+"
translation['10.2.86'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NiIgdW5pdD0ic2VjdGlvbiIgLz4gSSB3aWxsCnJlcGVhdCB0aGUgd29yZHMgd2hpY2ggSSBoZWFyZCBEb21pdGl1cyBBZmVyIHVzZQppbiBteSB5b3VuZyBkYXlzLiBJIGFza2VkIHdoYXQgcG9ldCBpbiBoaXMgb3BpbmlvbgpjYW1lIG5lYXJlc3QgdG8gSG9tZXIsIGFuZCBoZSByZXBsaWVkLCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5WaXJnaWwKY29tZXMgc2Vjb25kLCBidXQgaXMgbmVhcmVyIGZpcnN0IHRoYW4gdGhpcmQuPC9xdW90ZT4gQW5kCmluIHRydXRoLCBhbHRob3VnaCB3ZSBtdXN0IG5lZWRzIGJvdyBiZWZvcmUgdGhlCmltbW9ydGFsIGFuZCBzdXBlcmh1bWFuIGdlbml1cyBvZiBIb21lciwgdGhlcmUKaXMgZ3JlYXRlciBkaWxpZ2VuY2UgYW5kIGV4YWN0bmVzcyBpbiB0aGUgd29yawpvZiBWaXJnaWwganVzdCBiZWNhdXNlIGhpcyB0YXNrIHdhcyBoYXJkZXIuIEFuZApwZXJoYXBzIHRoZSBzdXBlcmlvciB1bmlmb3JtaXR5IG9mIHRoZSBSb21hbidzIGV4Y2VsbGVuY2UgYmFsYW5jZXMgSG9tZXIncyBwcmUtZW1pbmVuY2UgaW4gaGlzIG91dHN0YW5kaW5nIHBhc3NhZ2VzLjwvdHJhbnNsYXRpb24+"
translation['10.2.87'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NyIgdW5pdD0ic2VjdGlvbiIgLz4gQWxsIG91ciBvdGhlciBwb2V0cyBmb2xsb3cgYSBsb25nCndheSBpbiB0aGUgcmVhci4gTWFjZXIgYW5kIEx1Y3JldGl1cyBhcmUsIGl0IGlzIHRydWUsCndvcnRoIHJlYWRpbmcsIGJ1dCBub3QgZm9yIHRoZSBwdXJwb3NlIG9mIGZvcm1pbmcKc3R5bGUsIHRoYXQgaXMgdG8gc2F5LCB0aGUgYm9keSBvZiBlbG9xdWVuY2U6IGJvdGgKZGVhbCBlbGVnYW50bHkgd2l0aCB0aGVpciB0aGVtZXMsIGJ1dCB0aGUgZm9ybWVyIGlzCnRhbWUgYW5kIHRoZSBsYXR0ZXIgZGlmZmljdWx0LiBUaGUgcG9lbXMgYnkgd2hpY2gKVmFycm8gb2YgQXRheDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5WYXJybyBvZiBBdGF4IGluIEdhdWwgKDgy4oCTMzcgQi5DLiApIHdhcyBzcGVjaWFsbHkgZmFtb3VzCmZvciBoaXMgdHJhbnNsYXRpb24gb2YgdGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkFyZ29udGF1dGljYTwvaGk+IG9mIEFwb2xsb25pdXMgUmhvZGl1cy4KaGUgYWxzbyB3cm90ZSBkaWRhY3RpYyBwb2V0cnkgYW5kIGhpc3RvcmljYWwgZXBpYy48L25vdGU+IGdhaW5lZCBoaXMgcmVwdXRhdGlvbiB3ZXJlIHRyYW5zbGF0aW9ucywgYnV0IGhlIGlzIGJ5IG5vIG1lYW5zIHRvIGJlIGRlc3Bpc2VkLCBhbHRob3VnaApoaXMgZGljdGlvbiBpcyBub3Qgc3VmZmljaWVudGx5IHJpY2ggdG8gYmUgb2YgbXVjaAoKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QXJnb250YXV0aWNhPC9oaT4gb2YgQXBvbGxvbml1cyBSaG9kaXVzLgpoZSBhbHNvIHdyb3RlIGRpZGFjdGljIHBvZXRyeSBhbmQgaGlzdG9yaWNhbCBlcGljLjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjUxIiAvPgoKc2VydmljZSBpbiBkZXZlbG9waW5nIHRoZSByZXNvdXJjZXMgb2YgZWxvcXVlbmNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.2.88'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OCIgdW5pdD0ic2VjdGlvbiIgLz5Fbm5pdXMgZGVzZXJ2ZXMgb3VyIHJldmVyZW5jZSwgYnV0IG9ubHkgYXMgdGhvc2UKZ3JvdmVzIHdob3NlIGFnZSBoYXMgbWFkZSB0aGVtIHNhY3JlZCwgYnV0IHdob3NlCmh1Z2UgYW5kIGFuY2llbnQgdHJ1bmtzIGluc3BpcmUgdXMgd2l0aCByZWxpZ2lvdXMKYXdlIHJhdGhlciB0aGFuIHdpdGggYWRtaXJhdGlvbiBmb3IgdGhlaXIgYmVhdXR5LgpUaGVyZSBhcmUgb3RoZXIgcG9ldHMgd2hvIGFyZSBuZWFyZXIgaW4gcG9pbnQgb2YKdGltZSBhbmQgbW9yZSB1c2VmdWwgZm9yIG91ciBwcmVzZW50IHB1cnBvc2UuIE92aWQKaGFzIGEgbGFjayBvZiBzZXJpb3VzbmVzcyBldmVuIHdoZW4gaGUgd3JpdGVzIGVwaWMKYW5kIGlzIHVuZHVseSBlbmFtb3VyZWQgb2YgaGlzIG93biBnaWZ0cywgYnV0CnBvcnRpb25zIG9mIGhpcyB3b3JrIG1lcml0IG91ciBwcmFpc2UuPC90cmFuc2xhdGlvbj4="
translation['10.2.89'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OSIgdW5pdD0ic2VjdGlvbiIgLz4gT24gdGhlIG90aGVyCmhhbmQsIGFsdGhvdWdoIENvcm5lbGl1cyBTZXZlcnVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkZyaWVuZCBhbmQgY29udGVtcG9yYXJ5IG9mIE92aWQuIEEgY29uc2lkZXJhYmxlIGZyYWdtZW50IGlzIHByZXNlcnZlZCBieSBTZW4uIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlN1YXMuPC9oaT4gdmkuIDI2LiBUaGUgU2ljaWxpYW4gV2FyCndhcyB0aGUgd2FyIHdpdGggU2V4dHVzIFBvbXBlaXVzICgzOOKAkzM2KSBhbmQgcGVyaGFwcwpmb3JtZWQgYSBwb3J0aW9uIG9mIGEgbGFyZ2VyIHdvcmsgb24gdGhlIENpdmlsIFdhci4gVGhlCnN1cnZpdmluZyBmcmFnbWVudCBkZWFscyB3aXRoIHRoZSBkZWF0aCBvZiBDaWNlcm8uIFRoZQo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcml1bnVzIGxpYmVyPC9oaT4gbWF5IHRoZXJlZm9yZSBwZXJoYXBzIGJlIHRoZSBmaXJzdCBib29rIG9mIHRoaXMKbGFyZ2VyIHdvcmsuPC9ub3RlPiBpcyBhIGJldHRlciB2ZXJzaWZpZXIKdGhhbiBwb2V0LCB5ZXQgaWYsIGFzIGhhcyBiZWVuIHNhaWQsIGhlIGhhZCB3cml0dGVuIGhpcwpwb2VtIG9uIHRoZSBTaWNpbGlhbiB3YXIgaW4gdGhlIHNhbWUgc3R5bGUgdGhyb3VnaG91dAphcyBoaXMgZmlyc3QgYm9vaywgaGUgd291bGQgaGF2ZSBoYWQgYSBqdXN0IGNsYWltIHRvIHRoZQpzZWNvbmQgcGxhY2UuIEEgcHJlbWF0dXJlIGRlYXRoIHByZXZlbnRlZCB0aGUKcG93ZXJzIG9mIFNlcnJhbnVzPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+U3Vhcy48L2hpPiB2aS4gMjYuIFRoZSBTaWNpbGlhbiBXYXIKd2FzIHRoZSB3YXIgd2l0aCBTZXh0dXMgUG9tcGVpdXMgKDM44oCTMzYpIGFuZCBwZXJoYXBzCmZvcm1lZCBhIHBvcnRpb24gb2YgYSBsYXJnZXIgd29yayBvbiB0aGUgQ2l2aWwgV2FyLiBUaGUKc3Vydml2aW5nIGZyYWdtZW50IGRlYWxzIHdpdGggdGhlIGRlYXRoIG9mIENpY2Vyby4gVGhlCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnByaXVudXMgbGliZXI8L2hpPiBtYXkgdGhlcmVmb3JlIHBlcmhhcHMgYmUgdGhlIGZpcnN0IGJvb2sgb2YgdGhpcwpsYXJnZXIgd29yay48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+Tm90aGluZyBpcyBrbm93biBvZiB0aGlzIHBvZXQgZXhjZXB0IHRoZSBuYW1lLjwvbm90ZT4gZnJvbSByaXBlbmluZyB0byBwZXJmZWN0aW9uLCBidXQKaGlzIHlvdXRoZnVsIHdvcmtzIHJldmVhbCB0aGUgaGlnaGVzdCB0YWxlbnQgYW5kIGEKZGV2b3Rpb24gdG8gdGhlIHRydWUgaWRlYWwgb2YgcG9ldHJ5LCB3aGljaCBpcyByZW1hcmthYmxlIGluIG9uZSBzbyB5b3VuZy48L3RyYW5zbGF0aW9uPg=="
translation['10.2.90'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MCIgdW5pdD0ic2VjdGlvbiIgLz4gV2UgaGF2ZSBzdWZmZXJlZCBzZXJpb3VzIGxvc3MKaW4gdGhlIHJlY2VudCBkZWF0aCBvZiBWYWxlcml1cyBGbGFjY3VzLiBTYWxlaXVzCkJhc3N1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5Ob3RoaW5nIGlzIGtub3duIG9mIHRoaXMgcG9ldCBzYXZlIHRoYXQgaGUgaXMgaGlnaGx5CnByYWlzZWQgYnkgVGFjaXR1cyBpbiBoaXMgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGlibG9ndWVzLDwvaGk+IGFuZCB3YXMgcGF0cm9uaXplZCBieQpWZXNwYXNpYW4uIFRoZSB1bmZpbmlzaGVkIEFyZ29uYXV0aWNhIG9mIFZhbGVyaXVzIEZsYWNjdXMKc3Vydml2ZXMuPC9ub3RlPiBzaG93ZWQgYW4gYXJkZW50IGFuZCBnZW51aW5lbHkgcG9ldGljCmdlbml1cywgYnV0LCBsaWtlIHRoYXQgb2YgU2VycmFudXMsIGl0IHdhcyBub3QKbWVsbG93ZWQgYnkgeWVhcnMuIFJhYmlyaXVzPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGlibG9ndWVzLDwvaGk+IGFuZCB3YXMgcGF0cm9uaXplZCBieQpWZXNwYXNpYW4uIFRoZSB1bmZpbmlzaGVkIEFyZ29uYXV0aWNhIG9mIFZhbGVyaXVzIEZsYWNjdXMKc3Vydml2ZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkEgY29udGVtcG9yYXJ5IG9mIE92aWQsIGJlbGlldmVkIHRvIGJlIHRoZSBhdXRob3Igb2YgYQpmcmFnbWVudCBvbiB0aGUgYmF0dGxlIG9mIEFjdGl1bSwgZm91bmQgYXQgSGVyZXVsYW5ldW0uPC9ub3RlPiBhbmQgUGVkbzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5DLiBBbGJpbm92YW5ucyBQZWRvIHdyb3RlIGEgcG9lbSBvbiB0aGUgdm95YWdlIG9mCkdlcm1hbmljdXMgdG8gdGhlIG5vcnRoIG9mIEdlcm1hbnkuIEEgZnJhZ21lbnQgaXMgcHJlc2VydmVkIGJ5IFNlbi4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+U3Vhcy48L2hpPiBpLiAxNC48L25vdGU+IGRlc2VydmUKdG8gYmUgc3R1ZGllZCBieSB0aG9zZSB3aG8gaGF2ZSB0aGUgdGltZS4gTHVjYW4KaXMgZmllcnkgYW5kIHBhc3Npb25hdGUgYW5kIHJlbWFya2FibGUgZm9yIHRoZQpncmFuZGV1ciBvZiBoaXMgZ2VuZXJhbCByZWZsZXhpb25zLCBidXQsIHRvIGJlIGZyYW5rLApJIGNvbnNpZGVyIHRoYXQgaGUgaXMgbW9yZSBzdWl0YWJsZSBmb3IgaW1pdGF0aW9uIGJ5CnRoZSBvcmF0b3IgdGhhbiBieSB0aGUgcG9ldC48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5TdWFzLjwvaGk+IGkuIDE0LjwvdHJhbnNsYXRpb24+"
translation['10.2.91'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MSIgdW5pdD0ic2VjdGlvbiIgLz4gSSBoYXZlIHJlc3RyaWN0ZWQgbXkKbGlzdCBvZiBwb2V0cyB0byB0aGVzZSBuYW1lcywgYmVjYXVzZSBHZXJtYW5pY3VzCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC41MyIgLz4KCkF1Z3VzdHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkRvbWl0aWFuLjwvbm90ZT4gaGFzIGJlZW4gZGlzdHJhY3RlZCBmcm9tIHRoZSBzdHVkeSBvZgpwb2V0cnkgb24gd2hpY2ggaGUgaGFkIGVtYmFya2VkIGJ5IGhpcyBjYXJlIGZvcgp0aGUgZ292ZXJuYW5jZSBvZiB0aGUgd29ybGQsIGFuZCB0aGUgZ29kcyBoYXZlCnRob3VnaHQgaXQgc2NhcmNlIHdvcnRoeSBvZiBoaXMgcG93ZXJzIHRoYXQgaGUKc2hvdWxkIGJlIHRoZSBncmVhdGVzdCBvZiBwb2V0cy4gQnV0IHdoYXQgY2FuIGJlCm1vcmUgc3VibGltZSwgbW9yZSBsZWFybmVkLCBtb3JlIHBlcmZlY3QgaW4gZXZlcnkKZGV0YWlsIHRoYW4gdGhvc2Ugd29ya3MgdG8gd2hpY2ggaGUgZGV2b3RlZCBoaW1zZWxmCmluIHRoZSBzZWNsdXNpb24gdG8gd2hpY2ggaGUgcmV0aXJlZCBhZnRlciBjb25mZXJyaW5nCnRoZSBzdXByZW1lIHBvd2VyIHVwb24gaGlzIGZhdGhlciBhbmQgaGlzIGJyb3RoZXI/CldobyBjb3VsZCBzaW5nIG9mIHdhciBiZXR0ZXIgdGhhbiBoZSB3aG8gd2FnZXMgaXQKd2l0aCBzdWNoIHNraWxsPyBUbyB3aG9tIHdvdWxkIHRoZSBnb2RkZXNzZXMKdGhhdCBwcmVzaWRlIG92ZXIgbGl0ZXJhdHVyZSBzb29uZXIgbGVuZCBhbiBlYXI/IFRvCndob20gd291bGQgTWluZXJ2YSwgaGlzIGZhbWlsaWFyIGRlaXR5LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5IZSBjbGFpbWVkIHRvIGJlIHRoZSBzb24gb2YgTWluZXJ2YS4gSXQgaXMgZG91YnRmdWwgaWYKaGUgZXZlciB3cm90ZSBhbnkgcG9ldHJ5LiBDcC4gVGFjIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkhpc3QuPC9oaT4gaXYuIDg2LCBTdWV0LiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Eb20uPC9oaT4KMiBhbmQgMjAuPC9ub3RlPiBtb3JlCnJlYWRpbHkgcmV2ZWFsIGhlciBzZWNyZXRzPzxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkhpc3QuPC9oaT4gaXYuIDg2LCBTdWV0LiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Eb20uPC9oaT4KMiBhbmQgMjAuPC90cmFuc2xhdGlvbj4="
translation['10.2.92'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MiIgdW5pdD0ic2VjdGlvbiIgLz4gRnV0dXJlIGFnZXMgc2hhbGwgdGVsbCBvZgp0aGVzZSB0aGluZ3MgbW9yZSBmdWxseTsgdG8tZGF5IGhpcyBnbG9yeSBhcyBhIHBvZXQKaXMgZGltbWVkIGJ5IHRoZSBzcGxlbmRvdXIgb2YgaGlzIG90aGVyIHZpcnR1ZXMuCkJ1dCB5b3Ugd2lsbCBmb3JnaXZlIHVzLCBDYWVzYXIsIHdobyB3b3JzaGlwIGF0IHRoZQpzaHJpbmUgb2YgbGl0ZXJhdHVyZSwgaWYgd2UgcmVmdXNlIHRvIHBhc3MgYnkgeW91cgphY2hpZXZlbWVudHMgaW4gc2lsZW5jZSBhbmQgaW5zaXN0IG9uIHRlc3RpZnlpbmcgYXQKbGVhc3QgdGhhdCwgYXMgVmlyZ2lsIHNpbmdzLDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9ImJsb2NrcXVvdGUiPjxjaXQgY2xhc3M9InRyYW5zbGF0aW9uIj48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj48bCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZSBpdnkgY3JlZXBzIGFtaWQgeW91ciB2aWN0b3IgYmF5czwvbD48L3F1b3RlPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkVjbC48L2hpPiB2aWlpLiAxMy48L2JpYmw+PC9jaXQ+PC9xdW90ZT4KCjxjaXQgY2xhc3M9InRyYW5zbGF0aW9uIj48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj48bCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZSBpdnkgY3JlZXBzIGFtaWQgeW91ciB2aWN0b3IgYmF5czwvbD48L3F1b3RlPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkVjbC48L2hpPiB2aWlpLiAxMy48L2JpYmw+PC9jaXQ+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PGwgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUgaXZ5IGNyZWVwcyBhbWlkIHlvdXIgdmljdG9yIGJheXM8L2w+PC9xdW90ZT48bCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZSBpdnkgY3JlZXBzIGFtaWQgeW91ciB2aWN0b3IgYmF5czwvbD48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5FY2wuPC9oaT4gdmlpaS4gMTMuPC9iaWJsPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkVjbC48L2hpPiB2aWlpLiAxMy48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MyIgdW5pdD0ic2VjdGlvbiIgLz5XZSBhbHNvIGNoYWxsZW5nZSB0aGUgc3VwcmVtYWN5IG9mIHRoZSBHcmVla3MgaW4KZWxlZ3kuIE9mIG91ciBlbGVnaWFjIHBvZXRzIFRpYnVsbHVzIHNlZW1zIHRvIG1lCnRvIGJlIHRoZSBtb3N0IHRlcnNlIGFuZCBlbGVnYW50LiBUaGVyZSBhcmUsIGhvd2V2ZXIsIHNvbWUgd2hvIHByZWZlciBQcm9wZXJ0aXVzLiBPdmlkIGlzIG1vcmUKc3BvcnRpdmUgdGhhbiBlaXRoZXIsIHdoaWxlIEdhbGx1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+Q29ybmVsaXVzIChHYWxsdXMsIHRoZSBmcmllbmQgb2YgVmlyZ2lsLCBhbmQgdGhlIGZpcnN0IGRpc3Rpbmd1aXNoZWQgd3JpdGVyIG9mIGVsZWd5IGF0IFJvbWUuPC9ub3RlPiBpcyBtb3JlIHNldmVyZS4KU2F0aXJlLCBvbiB0aGUgb3RoZXIgaGFuZCwgaXMgYWxsIG91ciBvd24uIFRoZSBmaXJzdApvZiBvdXIgcG9ldHMgdG8gd2luIHJlbm93biBpbiB0aGlzIGNvbm5leGlvbiB3YXMKTHVjaWxpdXMsIHNvbWUgb2Ygd2hvc2UgZGV2b3RlZXMgYXJlIHNvIGVudGh1c2lhc3RpYwp0aGF0IHRoZXkgZG8gbm90IGhlc2l0YXRlIHRvIHByZWZlciBoaW0gbm90IG1lcmVseQp0byBhbGwgb3RoZXIgc2F0aXJpc3RzLCBidXQgZXZlbiB0byBhbGwgb3RoZXIgcG9ldHMuCkkgZGlzYWdyZWUgd2l0aCB0aGVtIGFzIG11Y2ggYXMgSSBkbyB3aXRoIEhvcmFjZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5TYXQuPC9oaT4gSS4gaXYuIDExLjwvbm90ZT48bWlsZXN0b25lIG49Ijk0IiB1bml0PSJzZWN0aW9uIiAvPgp3aG8gaG9sZHMgdGhhdCBMdWNpbGl1cycgdmVyc2UgaGFzIGEgPHF1b3RlPm11ZGR5IGZsb3csCgo8cGIgaWQ9InAuNTUiIC8+CgphbmQgdGhhdCB0aGVyZSBpcyBhbHdheXMgc29tZXRoaW5nIGluIGhpbSB0aGF0Cm1pZ2h0IHdlbGwgYmUgZGlzcGVuc2VkIHdpdGguPC9xdW90ZT4gRm9yIGhpcyBsZWFybmluZyBpcwphcyByZW1hcmthYmxlIGFzIGhpcyBmcmVlZG9tIG9mIHNwZWVjaCwgYW5kIGl0IGlzCnRoaXMgbGF0dGVyIHF1YWxpdHkgdGhhdCBnaXZlcyBzbyBzaGFycCBhbiBlZGdlIGFuZApzdWNoIGFidW5kYW5jZSBvZiB3aXQgdG8gaGlzIHNhdGlyZS4gSG9yYWNlIGlzIGZhcgp0ZXJzZXIgYW5kIHB1cmVyIGluIHN0eWxlLCBhbmQgbXVzdCBiZSBhd2FyZGVkIHRoZQpmaXJzdCBwbGFjZSwgdW5sZXNzIG15IGp1ZGdtZW50IGlzIGxlZCBhc3RyYXkgYnkgbXkKYWZmZWN0aW9uIGZvciBoaXMgd29yay4gUGVyc2l1cyBhbHNvLCBhbHRob3VnaCBoZQp3cm90ZSBidXQgb25lIGJvb2ssIGhhcyBhY3F1aXJlZCBhIGhpZ2ggYW5kCndlbGwtZGVzZXJ2ZWQgcmVwdXRhdGlvbiwgd2hpbGUgdGhlcmUgYXJlIG90aGVyCmRpc3Rpbmd1aXNoZWQgc2F0aXJpc3RzIHN0aWxsIGxpdmluZyB3aG9zZSBwcmFpc2VzIHdpbGwKYmUgc3VuZyBieSBwb3N0ZXJpdHkuPG1pbGVzdG9uZSBuPSI5NSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmUgaXMsIGhvd2V2ZXIsIGFub3RoZXIKYW5kIGV2ZW4gb2xkZXIgdHlwZSBvZiBzYXRpcmUgd2hpY2ggZGVyaXZlcyBpdHMKdmFyaWV0eSBub3QgbWVyZWx5IGZyb20gdmVyc2UsIGJ1dCBmcm9tIGFuIGFkbWl4dHVyZSBvZiBwcm9zZSBhcyB3ZWxsLiBTdWNoIHdlcmUgdGhlIHNhdGlyZXMKY29tcG9zZWQgYnkgVGVyZW50aXVzIFZhcnJvLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+SGlzIE1lbmlwcGVhbiBTYXRpcmVzLCBvZiB3aGljaCBvbmx5IGZyYWdtZW50cyBzdXJ2aXZlLgpBbHRob3VnaCBvc3RlbnNpYmx5IGFuIGltaXRhdGlvbiBvZiB0aGUgd29yayBvZiB0aGUgR3JlZWsKTWVuaXBwdXMgb2YgR2FkYXJhLCB0aGV5IGNhbiBzdGlsbCBiZSBzYWlkIHRvIGJlbG9uZyB0byB0aGUKb2xkZXIgdHlwZSBvZiBzYXRpcmUsIHRoZSA8cXVvdGU+bWVkbGV5PC9xdW90ZT4gb3IgPHF1b3RlPmhvdGNoLXBvdGNoLjwvcXVvdGU+PC9ub3RlPiB0aGUgbW9zdCBsZWFybmVkCm9mIGFsbCBSb21hbnMuIEhlIGNvbXBvc2VkIGEgdmFzdCBudW1iZXIgb2YKZXJ1ZGl0ZSB3b3JrcywgYW5kIHBvc3Nlc3NlZCBhbiBleHRyYW9yZGluYXJ5IGtub3dsZWRnZSBvZiB0aGUgTGF0aW4gbGFuZ3VhZ2UsIG9mIGFsbCBhbnRpcXVpdHkgYW5kCm9mIHRoZSBoaXN0b3J5IG9mIEdyZWVjZSBhbmQgUm9tZS4gQnV0IGhlIGlzCmFuIGF1dGhvciBsaWtlbHkgdG8gY29udHJpYnV0ZSBtb3JlIHRvIHRoZSBrbm93bGVkZ2Ugb2YgdGhlIHN0dWRlbnQgdGhhbiB0byBoaXMgZWxvcXVlbmNlLjxtaWxlc3RvbmUgbj0iOTYiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZQppYW1iaWMgaGFzIG5vdCBiZWVuIHBvcHVsYXIgd2l0aCBSb21hbiBwb2V0cyBhcyBhCnNlcGFyYXRlIGZvcm0gb2YgY29tcG9zaXRpb24sIGJ1dCBpcyBmb3VuZCBtaXhlZCB1cAp3aXRoIG90aGVyIGZvcm1zIG9mIHZlcnNlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlIG1lYW5pbmcgaXMgbm90IGNsZWFyLiBUaGUgd29yZHMgbWF5IG1lYW4gKGkgdGhhdAp0aGVzZSB3cml0ZXJzIGRpZCBub3QgY29uZmluZSB0aGVtc2VsdmVzIHRvIHRoZSA8aGkgcmVuZD0iaXRhbGljcyI+aWFtYnVzLDwvaGk+IG9yCihpaWkgdGhhdCB0aGUgPGhpIHJlbmQ9Iml0YWxpY3MiPmlhbWJ1czwvaGk+IGFsdGVybmF0ZXMgd2l0aCBvdGhlciBtZXRyZXMsIGNwLiA8aGkgcmVuZD0iaXRhbGljcyI+ZXBvZG9zPC9oaT4KYmVsb3cuPC9ub3RlPiBJdCBtYXkgYmUgZm91bmQgaW4gYWxsCml0cyBiaXR0ZXJuZXNzIGluIENhdHVsbHVzLCBCaWJhY3VsdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPk0uIEZ1cml1cyBCaWJhY3VsdXMsIGNvbnRlbXBvcmFyeSBvZiBDYXR1bGx1cywgYW5kCndyaXRlciBvZiBzaW1pbGFyIGludmVjdGl2ZSBhZ2FpbnN0IHRoZSBDYWVzYXJlYW5zLjwvbm90ZT4gYW5kIEhvcmFjZSwKYWx0aG91Z2ggaW4gdGhlIGxhc3QtbmFtZWQgdGhlIGlhbWJpYyBpcyBpbnRlcnJ1cHRlZApieSB0aGUgZXBvZGUuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+aS48L2hpPiBlLiB0aGUgc2hvcnQgaWFtYmljIGxpbmUgaW50ZXJwb3NlZCBiZXR3ZWVuIHRoZSB0cmltZXRlcnMuPC9ub3RlPiBPZiBvdXIgbHlyaWMgd3JpdGVycyBIb3JhY2UgaXMgYWxtb3N0CnRoZSBzb2xlIHBvZXQgd29ydGggcmVhZGluZzogZm9yIGhlIHJpc2VzIGF0IHRpbWVzIHRvCmEgbG9mdHkgZ3JhbmRldXIgYW5kIGlzIGZ1bGwgb2Ygc3ByaWdodGxpbmVzcyBhbmQKY2hhcm0sIHdoaWxlIHRoZXJlIGlzIGdyZWF0IHZhcmlldHkgaW4gaGlzIGZpZ3VyZXMsIGFuZApoaXMgYm9sZG5lc3MgaW4gdGhlIGNob2ljZSBvZiB3b3JkcyBpcyBvbmx5IGVxdWFsbGVkCmJ5IGhpcyBmZWxpY2l0eS4gSWYgYW55IG90aGVyIGx5cmljIHBvZXQgaXMgdG8gYmUKbWVudGlvbmVkLCBpdCB3aWxsIGJlIENhZXNpdXMgQmFzc3VzLCB3aG8gaGFzIGJ1dAoKPHBiIGlkPSJwLjU3IiAvPgoKbGF0ZWx5IHBhc3NlZCBmcm9tIHVzLiBCdXQgaGUgaXMgZmFyIHN1cnBhc3NlZCBpbgp0YWxlbnQgYnkgcG9ldHMgc3RpbGwgbGl2aW5nLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.2.93'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MyIgdW5pdD0ic2VjdGlvbiIgLz5XZSBhbHNvIGNoYWxsZW5nZSB0aGUgc3VwcmVtYWN5IG9mIHRoZSBHcmVla3MgaW4KZWxlZ3kuIE9mIG91ciBlbGVnaWFjIHBvZXRzIFRpYnVsbHVzIHNlZW1zIHRvIG1lCnRvIGJlIHRoZSBtb3N0IHRlcnNlIGFuZCBlbGVnYW50LiBUaGVyZSBhcmUsIGhvd2V2ZXIsIHNvbWUgd2hvIHByZWZlciBQcm9wZXJ0aXVzLiBPdmlkIGlzIG1vcmUKc3BvcnRpdmUgdGhhbiBlaXRoZXIsIHdoaWxlIEdhbGx1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5Db3JuZWxpdXMgKEdhbGx1cywgdGhlIGZyaWVuZCBvZiBWaXJnaWwsIGFuZCB0aGUgZmlyc3QgZGlzdGluZ3Vpc2hlZCB3cml0ZXIgb2YgZWxlZ3kgYXQgUm9tZS48L25vdGU+IGlzIG1vcmUgc2V2ZXJlLgpTYXRpcmUsIG9uIHRoZSBvdGhlciBoYW5kLCBpcyBhbGwgb3VyIG93bi4gVGhlIGZpcnN0Cm9mIG91ciBwb2V0cyB0byB3aW4gcmVub3duIGluIHRoaXMgY29ubmV4aW9uIHdhcwpMdWNpbGl1cywgc29tZSBvZiB3aG9zZSBkZXZvdGVlcyBhcmUgc28gZW50aHVzaWFzdGljCnRoYXQgdGhleSBkbyBub3QgaGVzaXRhdGUgdG8gcHJlZmVyIGhpbSBub3QgbWVyZWx5CnRvIGFsbCBvdGhlciBzYXRpcmlzdHMsIGJ1dCBldmVuIHRvIGFsbCBvdGhlciBwb2V0cy4KSSBkaXNhZ3JlZSB3aXRoIHRoZW0gYXMgbXVjaCBhcyBJIGRvIHdpdGggSG9yYWNlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5TYXQuPC9oaT4gSS4gaXYuIDExLjwvbm90ZT48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5TYXQuPC9oaT4gSS4gaXYuIDExLjwvdHJhbnNsYXRpb24+"
translation['10.2.94'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NCIgdW5pdD0ic2VjdGlvbiIgLz4Kd2hvIGhvbGRzIHRoYXQgTHVjaWxpdXMnIHZlcnNlIGhhcyBhIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPm11ZGR5IGZsb3csCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC41NSIgLz4KCmFuZCB0aGF0IHRoZXJlIGlzIGFsd2F5cyBzb21ldGhpbmcgaW4gaGltIHRoYXQKbWlnaHQgd2VsbCBiZSBkaXNwZW5zZWQgd2l0aC48L3F1b3RlPiBGb3IgaGlzIGxlYXJuaW5nIGlzCmFzIHJlbWFya2FibGUgYXMgaGlzIGZyZWVkb20gb2Ygc3BlZWNoLCBhbmQgaXQgaXMKdGhpcyBsYXR0ZXIgcXVhbGl0eSB0aGF0IGdpdmVzIHNvIHNoYXJwIGFuIGVkZ2UgYW5kCnN1Y2ggYWJ1bmRhbmNlIG9mIHdpdCB0byBoaXMgc2F0aXJlLiBIb3JhY2UgaXMgZmFyCnRlcnNlciBhbmQgcHVyZXIgaW4gc3R5bGUsIGFuZCBtdXN0IGJlIGF3YXJkZWQgdGhlCmZpcnN0IHBsYWNlLCB1bmxlc3MgbXkganVkZ21lbnQgaXMgbGVkIGFzdHJheSBieSBteQphZmZlY3Rpb24gZm9yIGhpcyB3b3JrLiBQZXJzaXVzIGFsc28sIGFsdGhvdWdoIGhlCndyb3RlIGJ1dCBvbmUgYm9vaywgaGFzIGFjcXVpcmVkIGEgaGlnaCBhbmQKd2VsbC1kZXNlcnZlZCByZXB1dGF0aW9uLCB3aGlsZSB0aGVyZSBhcmUgb3RoZXIKZGlzdGluZ3Vpc2hlZCBzYXRpcmlzdHMgc3RpbGwgbGl2aW5nIHdob3NlIHByYWlzZXMgd2lsbApiZSBzdW5nIGJ5IHBvc3Rlcml0eS48cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC41NSIgLz4KCmFuZCB0aGF0IHRoZXJlIGlzIGFsd2F5cyBzb21ldGhpbmcgaW4gaGltIHRoYXQKbWlnaHQgd2VsbCBiZSBkaXNwZW5zZWQgd2l0aC48L3RyYW5zbGF0aW9uPg=="
translation['10.2.95'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmUgaXMsIGhvd2V2ZXIsIGFub3RoZXIKYW5kIGV2ZW4gb2xkZXIgdHlwZSBvZiBzYXRpcmUgd2hpY2ggZGVyaXZlcyBpdHMKdmFyaWV0eSBub3QgbWVyZWx5IGZyb20gdmVyc2UsIGJ1dCBmcm9tIGFuIGFkbWl4dHVyZSBvZiBwcm9zZSBhcyB3ZWxsLiBTdWNoIHdlcmUgdGhlIHNhdGlyZXMKY29tcG9zZWQgYnkgVGVyZW50aXVzIFZhcnJvLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5IaXMgTWVuaXBwZWFuIFNhdGlyZXMsIG9mIHdoaWNoIG9ubHkgZnJhZ21lbnRzIHN1cnZpdmUuCkFsdGhvdWdoIG9zdGVuc2libHkgYW4gaW1pdGF0aW9uIG9mIHRoZSB3b3JrIG9mIHRoZSBHcmVlawpNZW5pcHB1cyBvZiBHYWRhcmEsIHRoZXkgY2FuIHN0aWxsIGJlIHNhaWQgdG8gYmVsb25nIHRvIHRoZQpvbGRlciB0eXBlIG9mIHNhdGlyZSwgdGhlIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPm1lZGxleTwvcXVvdGU+IG9yIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmhvdGNoLXBvdGNoLjwvcXVvdGU+PC9ub3RlPiB0aGUgbW9zdCBsZWFybmVkCm9mIGFsbCBSb21hbnMuIEhlIGNvbXBvc2VkIGEgdmFzdCBudW1iZXIgb2YKZXJ1ZGl0ZSB3b3JrcywgYW5kIHBvc3Nlc3NlZCBhbiBleHRyYW9yZGluYXJ5IGtub3dsZWRnZSBvZiB0aGUgTGF0aW4gbGFuZ3VhZ2UsIG9mIGFsbCBhbnRpcXVpdHkgYW5kCm9mIHRoZSBoaXN0b3J5IG9mIEdyZWVjZSBhbmQgUm9tZS4gQnV0IGhlIGlzCmFuIGF1dGhvciBsaWtlbHkgdG8gY29udHJpYnV0ZSBtb3JlIHRvIHRoZSBrbm93bGVkZ2Ugb2YgdGhlIHN0dWRlbnQgdGhhbiB0byBoaXMgZWxvcXVlbmNlLjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPm1lZGxleTwvcXVvdGU+IG9yIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmhvdGNoLXBvdGNoLjwvcXVvdGU+PC90cmFuc2xhdGlvbj4="
translation['10.2.96'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NiIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlCmlhbWJpYyBoYXMgbm90IGJlZW4gcG9wdWxhciB3aXRoIFJvbWFuIHBvZXRzIGFzIGEKc2VwYXJhdGUgZm9ybSBvZiBjb21wb3NpdGlvbiwgYnV0IGlzIGZvdW5kIG1peGVkIHVwCndpdGggb3RoZXIgZm9ybXMgb2YgdmVyc2UuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRoZSBtZWFuaW5nIGlzIG5vdCBjbGVhci4gVGhlIHdvcmRzIG1heSBtZWFuIChpIHRoYXQKdGhlc2Ugd3JpdGVycyBkaWQgbm90IGNvbmZpbmUgdGhlbXNlbHZlcyB0byB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+aWFtYnVzLDwvaGk+IG9yCihpaWkgdGhhdCB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+aWFtYnVzPC9oaT4gYWx0ZXJuYXRlcyB3aXRoIG90aGVyIG1ldHJlcywgY3AuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmVwb2RvczwvaGk+CmJlbG93Ljwvbm90ZT4gSXQgbWF5IGJlIGZvdW5kIGluIGFsbAppdHMgYml0dGVybmVzcyBpbiBDYXR1bGx1cywgQmliYWN1bHVzPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+aWFtYnVzLDwvaGk+IG9yCihpaWkgdGhhdCB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+aWFtYnVzPC9oaT4gYWx0ZXJuYXRlcyB3aXRoIG90aGVyIG1ldHJlcywgY3AuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmVwb2RvczwvaGk+CmJlbG93Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5NLiBGdXJpdXMgQmliYWN1bHVzLCBjb250ZW1wb3Jhcnkgb2YgQ2F0dWxsdXMsIGFuZAp3cml0ZXIgb2Ygc2ltaWxhciBpbnZlY3RpdmUgYWdhaW5zdCB0aGUgQ2Flc2FyZWFucy48L25vdGU+IGFuZCBIb3JhY2UsCmFsdGhvdWdoIGluIHRoZSBsYXN0LW5hbWVkIHRoZSBpYW1iaWMgaXMgaW50ZXJydXB0ZWQKYnkgdGhlIGVwb2RlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5pLjwvaGk+IGUuIHRoZSBzaG9ydCBpYW1iaWMgbGluZSBpbnRlcnBvc2VkIGJldHdlZW4gdGhlIHRyaW1ldGVycy48L25vdGU+IE9mIG91ciBseXJpYyB3cml0ZXJzIEhvcmFjZSBpcyBhbG1vc3QKdGhlIHNvbGUgcG9ldCB3b3J0aCByZWFkaW5nOiBmb3IgaGUgcmlzZXMgYXQgdGltZXMgdG8KYSBsb2Z0eSBncmFuZGV1ciBhbmQgaXMgZnVsbCBvZiBzcHJpZ2h0bGluZXNzIGFuZApjaGFybSwgd2hpbGUgdGhlcmUgaXMgZ3JlYXQgdmFyaWV0eSBpbiBoaXMgZmlndXJlcywgYW5kCmhpcyBib2xkbmVzcyBpbiB0aGUgY2hvaWNlIG9mIHdvcmRzIGlzIG9ubHkgZXF1YWxsZWQKYnkgaGlzIGZlbGljaXR5LiBJZiBhbnkgb3RoZXIgbHlyaWMgcG9ldCBpcyB0byBiZQptZW50aW9uZWQsIGl0IHdpbGwgYmUgQ2Flc2l1cyBCYXNzdXMsIHdobyBoYXMgYnV0Cgo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5pLjwvaGk+IGUuIHRoZSBzaG9ydCBpYW1iaWMgbGluZSBpbnRlcnBvc2VkIGJldHdlZW4gdGhlIHRyaW1ldGVycy48cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC41NyIgLz4KCmxhdGVseSBwYXNzZWQgZnJvbSB1cy4gQnV0IGhlIGlzIGZhciBzdXJwYXNzZWQgaW4KdGFsZW50IGJ5IHBvZXRzIHN0aWxsIGxpdmluZy48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NyIgdW5pdD0ic2VjdGlvbiIgLz5BbW9uZyB3cml0ZXJzIG9mIHRyYWdlZHkgQWNjaXVzIGFuZCBQYWN1dml1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+QWNjaXVzICgxNzAgOTApLCBQYWN1dml1cyAoMjIw4oCTMTMyKS48L25vdGU+CmFyZSBtb3N0IHJlbWFya2FibGUgZm9yIHRoZSBmb3JjZSBvZiB0aGVpciBnZW5lcmFsCnJlZmxleGlvbnMsIHRoZSB3ZWlnaHQgb2YgdGhlaXIgd29yZHMgYW5kIHRoZSBkaWduaXR5Cm9mIHRoZWlyIGNoYXJhY3RlcnMuIEJ1dCB0aGV5IGxhY2sgcG9saXNoLCBhbmQgZmlsZWQKdG8gcHV0IHRoZSBmaW5pc2hpbmcgdG91Y2hlcyBvbiB0aGVpciB3b3JrcywgYWx0aG91Z2gKdGhlIGZhdWx0IHdhcyBwZXJoYXBzIHJhdGhlciB0aGF0IG9mIHRoZSB0aW1lcyBpbgp3aGljaCB0aGV5IGxpdmVkIHRoYW4gb2YgdGhlbXNlbHZlcy4gQWNjaXVzIGlzCmdlbmVyYWxseSByZWdhcmRlZCBhcyB0aGUgbW9zdCB2aWdvcm91cywgd2hpbGUgdGhvc2UKd2hvIGxheSBjbGFpbSB0byBsZWFybmluZyByZWdhcmQgUGFjdXZpdXMgYXMgdGhlCm1vcmUgbGVhcm5lZCBvZiB0aGUgdHdvLjxtaWxlc3RvbmUgbj0iOTgiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBUaHllc3RlcyBvZiBWYXJpdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkwuIFZhcml1cyBSdWZ1cywgZnJpZW5kIG9mIFZpcmdpbCBhbmQgSG9yYWNlLCBlZGl0b3Igb2YKdGhlIDxoaSByZW5kPSJpdGFsaWNzIj5BZW5laWQ7PC9oaT4gd3JvdGUgZXBpYyBhbmQgYSBzaW5nbGUgdHJhZ2VkeS48L25vdGU+CmlzIGEgbWF0Y2ggZm9yIGFueSBHcmVlayB0cmFnZWR5LCBhbmQgdGhlIE1lZGVhCm9mIE92aWQgc2hvd3MsIGluIG15IG9waW5pb24sIHRvIHdoYXQgaGVpZ2h0cyB0aGF0CnBvZXQgbWlnaHQgaGF2ZSByaXNlbiBpZiBoZSBoYWQgYmVlbiByZWFkeSB0byBjdXJiCmhpcyB0YWxlbnRzIGluc3RlYWQgb2YgaW5kdWxnaW5nIHRoZW0uIE9mIHRoZQp0cmFnaWMgd3JpdGVycyB3aG9tIEkgbXlzZWxmIGhhdmUgc2VlbiwgUG9tcG9uaXVzClNlY3VuZHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5Qb21wb25pdXMgU2VjdW5kdXMsIGRpZWQgNjAgQS5ELjsgd3JvdGUgYSB0cmFnZWR5CmVudGl0bGVkIDxoaSByZW5kPSJpdGFsaWNzIj5BZW5lYXMuPC9oaT48L25vdGU+IGlzIGJ5IGZhciB0aGUgYmVzdDogaGlzIG9sZGVyIGNyaXRpY3MgdGhvdWdodApoaW0gaW5zdWZmaWNpZW50bHkgdHJhZ2ljLCBidXQgYWRtaXR0ZWQgaGlzIGVtaW5lbmNlIGFzCmZhciBhcyBsZWFybmluZyBhbmQgcG9saXNoIHdlcmUgY29uY2VybmVkLjxtaWxlc3RvbmUgbj0iOTkiIHVuaXQ9InNlY3Rpb24iIC8+IENvbWVkeQppcyBvdXIgd2Vha2VzdCBwb2ludC4gQWx0aG91Z2ggVmFycm8gcXVvdGVzIEFlbGl1cwpTdGlsbzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlIGZpcnN0IFJvbWFuIHBoaWxvbG9naXN0ICgxNDHigJM3MCBCLkMuKS48L25vdGU+IGFzIHNheWluZyB0aGF0IGlmIHRoZSBNdXNlcyB3aXNoZWQgdG8gc3BlYWsKTGF0aW4sIHRoZXkgd291bGQgdXNlIHRoZSBsYW5ndWFnZSBvZiBQbGF1dHVzLAphbHRob3VnaCB0aGUgYW5jaWVudHMgZXh0b2wgQ2FlY2lsaXVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+Q2FlY2lsaWxzICgyMTnigJMxNjYpLCBUZXJlbmNlICgxOTQxNTkpLCBBZnJhbml1cyAoZmxvci4KY2lyYy4gMTUwKS4gT25seSBmcmFnbWVudHMgb2YgQ2FlY2lsaXVzIGFuZCBBZnJhbml1cyByZW1haW4uPC9ub3RlPiBhbmQgYWx0aG91Z2gKU2NpcGlvIEFmcmljYW51cyBpcyBjcmVkaXRlZCB3aXRoIHRoZSB3b3JrcyBvZgpUZXJlbmNlICh3aGljaCBhcmUgdGhlIG1vc3QgZWxlZ2FudCBvZiB0aGVpciBraW5kLAphbmQgd291bGQgYmUgc3RpbGwgbW9yZSBncmFjZWZ1bCBpZiB0aGUgcG9ldCBoYWQKY29uZmluZWQgaGltc2VsZiB0byB0aGUgaWFtYmljIHRyaW1ldGVyKSw8bWlsZXN0b25lIG49IjEwMCIgdW5pdD0ic2VjdGlvbiIgLz4gd2Ugc3RpbGwKc2NhcmNlbHkgc3VjY2VlZCBpbiByZXByb2R1Y2luZyBldmVuIGEgZmFpbnQgc2hhZG93Cm9mIHRoZSBjaGFybSBvZiBHcmVlayBjb21lZHkuIEluZGVlZCwgaXQgc2VlbXMKdG8gbWUgYXMgdGhvdWdoIHRoZSBsYW5ndWFnZSBvZiBSb21lIHdlcmUgaW5jYXBhYmxlIG9mIHJlcHJvZHVjaW5nIHRoYXQgZ3JhY2VmdWwgd2l0IHdoaWNoIHdhcwoKPHBiIGlkPSJwLjU5IiAvPgoKZ3JhbnRlZCB0byBBdGhlbnMgYWxvbmUsIGFuZCB3YXMgYmV5b25kIHRoZSByZWFjaApvZiBvdGhlciBHcmVlayBkaWFsZWN0cyB0byBhY2hpZXZlLiBBZnJhbml1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+Q2FlY2lsaWxzICgyMTnigJMxNjYpLCBUZXJlbmNlICgxOTTigJMxNTkpLCBBZnJhbml1cyAoZmxvci4KY2lyZS4gMTUwKSBPbmx5IGZyYWdtZW50cyBvZiBDYWVjaWxpdXMgYW5kIEFmYW5pdXMgc3Vydml2ZS48L25vdGU+IGV4Y2VscwppbiB0aGUgcHVyZWx5IFJvbWFuIGNvbWVkeSwgYnV0IGl0IGlzIHRvIGJlIHJlZ3JldHRlZAp0aGF0IGhlIHJldmVhbGVkIGhpcyBvd24gY2hhcmFjdGVyIGJ5IGRlZmlsaW5nIGhpcwpwbG90cyB3aXRoIHRoZSBpbnRyb2R1Y3Rpb24gb2YgaW5kZWNlbnQgcGFlZGVyYXN0aWMKaW50cmlndWVzLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.2.97'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NyIgdW5pdD0ic2VjdGlvbiIgLz5BbW9uZyB3cml0ZXJzIG9mIHRyYWdlZHkgQWNjaXVzIGFuZCBQYWN1dml1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5BY2NpdXMgKDE3MCA5MCksIFBhY3V2aXVzICgyMjDigJMxMzIpLjwvbm90ZT4KYXJlIG1vc3QgcmVtYXJrYWJsZSBmb3IgdGhlIGZvcmNlIG9mIHRoZWlyIGdlbmVyYWwKcmVmbGV4aW9ucywgdGhlIHdlaWdodCBvZiB0aGVpciB3b3JkcyBhbmQgdGhlIGRpZ25pdHkKb2YgdGhlaXIgY2hhcmFjdGVycy4gQnV0IHRoZXkgbGFjayBwb2xpc2gsIGFuZCBmaWxlZAp0byBwdXQgdGhlIGZpbmlzaGluZyB0b3VjaGVzIG9uIHRoZWlyIHdvcmtzLCBhbHRob3VnaAp0aGUgZmF1bHQgd2FzIHBlcmhhcHMgcmF0aGVyIHRoYXQgb2YgdGhlIHRpbWVzIGluCndoaWNoIHRoZXkgbGl2ZWQgdGhhbiBvZiB0aGVtc2VsdmVzLiBBY2NpdXMgaXMKZ2VuZXJhbGx5IHJlZ2FyZGVkIGFzIHRoZSBtb3N0IHZpZ29yb3VzLCB3aGlsZSB0aG9zZQp3aG8gbGF5IGNsYWltIHRvIGxlYXJuaW5nIHJlZ2FyZCBQYWN1dml1cyBhcyB0aGUKbW9yZSBsZWFybmVkIG9mIHRoZSB0d28uPC90cmFuc2xhdGlvbj4="
translation['10.2.98'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OCIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIFRoeWVzdGVzIG9mIFZhcml1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5MLiBWYXJpdXMgUnVmdXMsIGZyaWVuZCBvZiBWaXJnaWwgYW5kIEhvcmFjZSwgZWRpdG9yIG9mCnRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZW5laWQ7PC9oaT4gd3JvdGUgZXBpYyBhbmQgYSBzaW5nbGUgdHJhZ2VkeS48L25vdGU+CmlzIGEgbWF0Y2ggZm9yIGFueSBHcmVlayB0cmFnZWR5LCBhbmQgdGhlIE1lZGVhCm9mIE92aWQgc2hvd3MsIGluIG15IG9waW5pb24sIHRvIHdoYXQgaGVpZ2h0cyB0aGF0CnBvZXQgbWlnaHQgaGF2ZSByaXNlbiBpZiBoZSBoYWQgYmVlbiByZWFkeSB0byBjdXJiCmhpcyB0YWxlbnRzIGluc3RlYWQgb2YgaW5kdWxnaW5nIHRoZW0uIE9mIHRoZQp0cmFnaWMgd3JpdGVycyB3aG9tIEkgbXlzZWxmIGhhdmUgc2VlbiwgUG9tcG9uaXVzClNlY3VuZHVzPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QWVuZWlkOzwvaGk+IHdyb3RlIGVwaWMgYW5kIGEgc2luZ2xlIHRyYWdlZHkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlBvbXBvbml1cyBTZWN1bmR1cywgZGllZCA2MCBBLkQuOyB3cm90ZSBhIHRyYWdlZHkKZW50aXRsZWQgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QWVuZWFzLjwvaGk+PC9ub3RlPiBpcyBieSBmYXIgdGhlIGJlc3Q6IGhpcyBvbGRlciBjcml0aWNzIHRob3VnaHQKaGltIGluc3VmZmljaWVudGx5IHRyYWdpYywgYnV0IGFkbWl0dGVkIGhpcyBlbWluZW5jZSBhcwpmYXIgYXMgbGVhcm5pbmcgYW5kIHBvbGlzaCB3ZXJlIGNvbmNlcm5lZC48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZW5lYXMuPC9oaT48L3RyYW5zbGF0aW9uPg=="
translation['10.2.99'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OSIgdW5pdD0ic2VjdGlvbiIgLz4gQ29tZWR5CmlzIG91ciB3ZWFrZXN0IHBvaW50LiBBbHRob3VnaCBWYXJybyBxdW90ZXMgQWVsaXVzClN0aWxvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRoZSBmaXJzdCBSb21hbiBwaGlsb2xvZ2lzdCAoMTQx4oCTNzAgQi5DLikuPC9ub3RlPiBhcyBzYXlpbmcgdGhhdCBpZiB0aGUgTXVzZXMgd2lzaGVkIHRvIHNwZWFrCkxhdGluLCB0aGV5IHdvdWxkIHVzZSB0aGUgbGFuZ3VhZ2Ugb2YgUGxhdXR1cywKYWx0aG91Z2ggdGhlIGFuY2llbnRzIGV4dG9sIENhZWNpbGl1cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+Q2FlY2lsaWxzICgyMTnigJMxNjYpLCBUZXJlbmNlICgxOTQxNTkpLCBBZnJhbml1cyAoZmxvci4KY2lyYy4gMTUwKS4gT25seSBmcmFnbWVudHMgb2YgQ2FlY2lsaXVzIGFuZCBBZnJhbml1cyByZW1haW4uPC9ub3RlPiBhbmQgYWx0aG91Z2gKU2NpcGlvIEFmcmljYW51cyBpcyBjcmVkaXRlZCB3aXRoIHRoZSB3b3JrcyBvZgpUZXJlbmNlICh3aGljaCBhcmUgdGhlIG1vc3QgZWxlZ2FudCBvZiB0aGVpciBraW5kLAphbmQgd291bGQgYmUgc3RpbGwgbW9yZSBncmFjZWZ1bCBpZiB0aGUgcG9ldCBoYWQKY29uZmluZWQgaGltc2VsZiB0byB0aGUgaWFtYmljIHRyaW1ldGVyKSw8L3RyYW5zbGF0aW9uPg=="
translation['10.2.100'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDAiIHVuaXQ9InNlY3Rpb24iIC8+IHdlIHN0aWxsCnNjYXJjZWx5IHN1Y2NlZWQgaW4gcmVwcm9kdWNpbmcgZXZlbiBhIGZhaW50IHNoYWRvdwpvZiB0aGUgY2hhcm0gb2YgR3JlZWsgY29tZWR5LiBJbmRlZWQsIGl0IHNlZW1zCnRvIG1lIGFzIHRob3VnaCB0aGUgbGFuZ3VhZ2Ugb2YgUm9tZSB3ZXJlIGluY2FwYWJsZSBvZiByZXByb2R1Y2luZyB0aGF0IGdyYWNlZnVsIHdpdCB3aGljaCB3YXMKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjU5IiAvPgoKZ3JhbnRlZCB0byBBdGhlbnMgYWxvbmUsIGFuZCB3YXMgYmV5b25kIHRoZSByZWFjaApvZiBvdGhlciBHcmVlayBkaWFsZWN0cyB0byBhY2hpZXZlLiBBZnJhbml1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5DYWVjaWxpbHMgKDIxOeKAkzE2NiksIFRlcmVuY2UgKDE5NOKAkzE1OSksIEFmcmFuaXVzIChmbG9yLgpjaXJlLiAxNTApIE9ubHkgZnJhZ21lbnRzIG9mIENhZWNpbGl1cyBhbmQgQWZhbml1cyBzdXJ2aXZlLjwvbm90ZT4gZXhjZWxzCmluIHRoZSBwdXJlbHkgUm9tYW4gY29tZWR5LCBidXQgaXQgaXMgdG8gYmUgcmVncmV0dGVkCnRoYXQgaGUgcmV2ZWFsZWQgaGlzIG93biBjaGFyYWN0ZXIgYnkgZGVmaWxpbmcgaGlzCnBsb3RzIHdpdGggdGhlIGludHJvZHVjdGlvbiBvZiBpbmRlY2VudCBwYWVkZXJhc3RpYwppbnRyaWd1ZXMuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTAxIiB1bml0PSJzZWN0aW9uIiAvPkluIGhpc3RvcnksIGhvd2V2ZXIsIHdlIGhvbGQgb3VyIG93biB3aXRoIHRoZQpHcmVla3MuIEkgc2hvdWxkIG5vdCBoZXNpdGF0ZSB0byBtYXRjaCBTYWlsbHN0CmFnYWluc3QgVGh1Y3lkaWRlcywgbm9yIHdvdWxkIEhlcm9kb3R1cyByZXNlbnQKVGl0dXMgTGl2aXVzIGJlaW5nIHBsYWNlZCBvbiB0aGUgc2FtZSBsZXZlbCBhcyBoaW1zZWxmLiBGb3IgdGhlIGxhdHRlciBoYXMgYSB3b25kZXJmdWwgY2hhcm0gYW5kCnRyYW5zcGFyZW5jeSBpbiBuYXJyYXRpdmUsIHdoaWxlIGhpcyBzcGVlY2hlcyBhcmUKZWxvcXVlbnQgYmV5b25kIGRlc2NyaXB0aW9uOyBzbyBhZG1pcmFibHkgYWRhcHRlZAppcyBhbGwgdGhhdCBpcyBzYWlkIGJvdGggdG8gdGhlIGNpcmN1bXN0YW5jZXMgYW5kIHRoZQpzcGVha2VyOyBhbmQgYXMgcmVnYXJkcyB0aGUgZW1vdGlvbnMsIGVzcGVjaWFsbHkKdGhlIG1vcmUgcGxlYXNpbmcgb2YgdGhlbSwgSSBtYXkgc3VtIGhpbSB1cCBieQpzYXlpbmcgdGhhdCBubyBoaXN0b3JpYW4gaGFzIGV2ZXIgZGVwaWN0ZWQgdGhlbSB0bwpncmVhdGVyIHBlcmZlY3Rpb24uPG1pbGVzdG9uZSBuPSIxMDIiIHVuaXQ9InNlY3Rpb24iIC8+IFRodXMgaXQgaXMgdGhhdCwgYWx0aG91Z2ggYnkKZGlmZmVyZW50IG1lYW5zLCBoZSBoYXMgYWNxdWlyZWQgbm8gbGVzcyBmYW1lIHRoYW4KaGFzIGJlZW4gYXdhcmRlZCB0byB0aGUgaW1tb3J0YWwgcmFwaWRpdHkgb2YgU2FsbHVzdC4KRm9yIEkgc3Ryb25nbHkgYXBwcm92ZSBvZiB0aGUgc2F5aW5nIG9mIFNlcnZpbGl1cwpOb25pYW51cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkZyaWVuZCBvZiBQZXJzaXVzLCBhbmQgZmFtb3VzIGFzIG9yYXRvciwgcmVjaXRlciBhbmQKaGlzdG9yaWFuOyBkaWVkIDYwIEEuRC48L25vdGU+IHRoYXQgdGhlc2UgaGlzdG9yaWFucyB3ZXJlIGVxdWFsIHJhdGhlcgp0aGFuIGFsaWtlLiBTZXJ2aWxpdXMsIHdob20gSSBteXNlbGYgaGF2ZSBoZWFyZCwKaXMgaGltc2VsZiByZW1hcmthYmxlIGZvciB0aGUgZm9yY2Ugb2YgaGlzIGludGVsbGVjdCwKYW5kIGlzIGZ1bGwgb2YgZ2VuZXJhbCByZWZsZXhpb25zLCBidXQgaGUgaXMgbGVzcyByZXN0cmFpbmVkIHRoYW4gdGhlIGRpZ25pdHkgb2YgaGlzdG9yeSBkZW1hbmRzLjxtaWxlc3RvbmUgbj0iMTAzIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQKdGhhdCBkaWduaXR5IGlzIGFkbWlyYWJseSBtYWludGFpbmVkLCB0aGFua3MgdG8gaGlzCnN0eWxlLCBieSBBdWZpZGl1cyBCYXNzdXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5IZSB3cm90ZSBhIGhpc3Rvcnkgb2YgdGhlIGVtcGlyZSBkb3duIHRvIHRoZSBkZWF0aCBvZgpDbGF1ZGl1cy4gVGhlIHdvcmsgb24gdGhlIEdlcm1hbiB3YXIgd2FzIHByb2JhYmx5IGEKc2VwYXJhdGUgd29yay48L25vdGU+IGEgc2xpZ2h0bHkgZWFybGllciB3cml0ZXIsCmVzcGVjaWFsbHkgaW4gaGlzIHdvcmsgb24gdGhlIEdlcm1hbiB3YXI6IGhlIGlzCmFsd2F5cyBwcmFpc2V3b3J0aHksIHRob3VnaCBhdCB0aW1lcyBoZSBmYWlscyB0byBkbwpoaXMgcG93ZXJzIGZ1bGwganVzdGljZS48bWlsZXN0b25lIG49IjEwNCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHRoZXJlIHN0aWxsIHN1cnZpdmVzIHRvCmFkZCBsdXN0cmUgdG8gdGhpcyBnbG9yaW91cyBhZ2UgYSBtYW48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlByb2JhYmx5IEZhYml1cyBSdXN0aWN1cy4gVGFjaXR1cyB3b3VsZCBoYXZlIGJlZW4gdG9vCnlvdW5nIGF0IHRoaXMgdGltZSB0byBiZSBtZW50aW9uZWQgaW4gc3VjaCB0ZXJtcy48L25vdGU+IHdvcnRoeSB0byBiZQpyZW1lbWJlcmVkIHRocm91Z2ggYWxsIHRpbWU6IGhlIGlzIGFwcHJlY2lhdGVkIHRvZGF5LCBidXQgYWZ0ZXIgZ2VuZXJhdGlvbnMgc2hhbGwgZGVjbGFyZSBoaXMgbmFtZQoKPHBiIGlkPSJwLjYxIiAvPgoKYWxvdWQuIFRoZSBib2xkIHV0dGVyYW5jZXMgb2YgQ3JlbnV0aXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5DcmVudXRpdXMgQ29yZHVzIHdyb3RlIGEgaGlzdG9yeSBvZiB0aGUgQ2l2aWwgd2FycwphbmQgcmVpZ24gb2YgQXVndXN0dXMuIEhlIHdhcyBhY2N1c2VkIGZvciBoaXMgcHJhaXNlIG9mCkJydXR1cyBhbmQgQ2Fzc2l1cywgYW5kIGNvbW1pdHRlZCBzdWljaWRlIGluIEEuRC4gMjUuIEl0CndhcyBoZSB3aG8gY2FsbGVkIENhc3NpdXMgPHF1b3RlPnRoZSBsYXN0IG9mIGFsbCB0aGUgUm9tYW5zLjwvcXVvdGU+PC9ub3RlPiBhbHNvIGhhdmUKdGhlaXIgYWRtaXJlcnMsIGFuZCBkZXNlcnZlIHRoZWlyIGZhbWUsIHRob3VnaCB0aGUKcGFzc2FnZXMgd2hpY2ggYnJvdWdodCBoaW0gdG8gaGlzIHJ1aW4gaGF2ZSBiZWVuCmV4cHVyZ2F0ZWQ7IHN0aWxsIHRoYXQgd2hpY2ggaXMgbGVmdCByZXZlYWxzIGEgcmljaApzdG9yZSBvZiBsb2Z0eSBhbmltYXRpb24gYW5kIGZlYXJsZXNzIHJlZmxleGlvbnMgdXBvbgpsaWZlLiBUaGVyZSBhcmUgb3RoZXIgZ29vZCB3cml0ZXJzIGFzIHdlbGwsIGJ1dCBJIGFtCm1lcmVseSBzZWxlY3RpbmcgZnJvbSB0aGUgZGlmZmVyZW50IGRlcGFydG1lbnRzIG9mCmxpdGVyYXR1cmUsIG5vdCByZXZpZXdpbmcgY29tcGxldGUgbGlicmFyaWVzLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.2.101'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDEiIHVuaXQ9InNlY3Rpb24iIC8+SW4gaGlzdG9yeSwgaG93ZXZlciwgd2UgaG9sZCBvdXIgb3duIHdpdGggdGhlCkdyZWVrcy4gSSBzaG91bGQgbm90IGhlc2l0YXRlIHRvIG1hdGNoIFNhaWxsc3QKYWdhaW5zdCBUaHVjeWRpZGVzLCBub3Igd291bGQgSGVyb2RvdHVzIHJlc2VudApUaXR1cyBMaXZpdXMgYmVpbmcgcGxhY2VkIG9uIHRoZSBzYW1lIGxldmVsIGFzIGhpbXNlbGYuIEZvciB0aGUgbGF0dGVyIGhhcyBhIHdvbmRlcmZ1bCBjaGFybSBhbmQKdHJhbnNwYXJlbmN5IGluIG5hcnJhdGl2ZSwgd2hpbGUgaGlzIHNwZWVjaGVzIGFyZQplbG9xdWVudCBiZXlvbmQgZGVzY3JpcHRpb247IHNvIGFkbWlyYWJseSBhZGFwdGVkCmlzIGFsbCB0aGF0IGlzIHNhaWQgYm90aCB0byB0aGUgY2lyY3Vtc3RhbmNlcyBhbmQgdGhlCnNwZWFrZXI7IGFuZCBhcyByZWdhcmRzIHRoZSBlbW90aW9ucywgZXNwZWNpYWxseQp0aGUgbW9yZSBwbGVhc2luZyBvZiB0aGVtLCBJIG1heSBzdW0gaGltIHVwIGJ5CnNheWluZyB0aGF0IG5vIGhpc3RvcmlhbiBoYXMgZXZlciBkZXBpY3RlZCB0aGVtIHRvCmdyZWF0ZXIgcGVyZmVjdGlvbi48L3RyYW5zbGF0aW9uPg=="
translation['10.2.102'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDIiIHVuaXQ9InNlY3Rpb24iIC8+IFRodXMgaXQgaXMgdGhhdCwgYWx0aG91Z2ggYnkKZGlmZmVyZW50IG1lYW5zLCBoZSBoYXMgYWNxdWlyZWQgbm8gbGVzcyBmYW1lIHRoYW4KaGFzIGJlZW4gYXdhcmRlZCB0byB0aGUgaW1tb3J0YWwgcmFwaWRpdHkgb2YgU2FsbHVzdC4KRm9yIEkgc3Ryb25nbHkgYXBwcm92ZSBvZiB0aGUgc2F5aW5nIG9mIFNlcnZpbGl1cwpOb25pYW51cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+RnJpZW5kIG9mIFBlcnNpdXMsIGFuZCBmYW1vdXMgYXMgb3JhdG9yLCByZWNpdGVyIGFuZApoaXN0b3JpYW47IGRpZWQgNjAgQS5ELjwvbm90ZT4gdGhhdCB0aGVzZSBoaXN0b3JpYW5zIHdlcmUgZXF1YWwgcmF0aGVyCnRoYW4gYWxpa2UuIFNlcnZpbGl1cywgd2hvbSBJIG15c2VsZiBoYXZlIGhlYXJkLAppcyBoaW1zZWxmIHJlbWFya2FibGUgZm9yIHRoZSBmb3JjZSBvZiBoaXMgaW50ZWxsZWN0LAphbmQgaXMgZnVsbCBvZiBnZW5lcmFsIHJlZmxleGlvbnMsIGJ1dCBoZSBpcyBsZXNzIHJlc3RyYWluZWQgdGhhbiB0aGUgZGlnbml0eSBvZiBoaXN0b3J5IGRlbWFuZHMuPC90cmFuc2xhdGlvbj4="
translation['10.2.103'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDMiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dAp0aGF0IGRpZ25pdHkgaXMgYWRtaXJhYmx5IG1haW50YWluZWQsIHRoYW5rcyB0byBoaXMKc3R5bGUsIGJ5IEF1ZmlkaXVzIEJhc3N1cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+SGUgd3JvdGUgYSBoaXN0b3J5IG9mIHRoZSBlbXBpcmUgZG93biB0byB0aGUgZGVhdGggb2YKQ2xhdWRpdXMuIFRoZSB3b3JrIG9uIHRoZSBHZXJtYW4gd2FyIHdhcyBwcm9iYWJseSBhCnNlcGFyYXRlIHdvcmsuPC9ub3RlPiBhIHNsaWdodGx5IGVhcmxpZXIgd3JpdGVyLAplc3BlY2lhbGx5IGluIGhpcyB3b3JrIG9uIHRoZSBHZXJtYW4gd2FyOiBoZSBpcwphbHdheXMgcHJhaXNld29ydGh5LCB0aG91Z2ggYXQgdGltZXMgaGUgZmFpbHMgdG8gZG8KaGlzIHBvd2VycyBmdWxsIGp1c3RpY2UuPC90cmFuc2xhdGlvbj4="
translation['10.2.104'] = ""
translation['10.2.105'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDUiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IGl0IGlzIG91ciBvcmF0b3JzLCBhYm92ZSBhbGwsIHdobyBlbmFibGUgdXMgdG8KbWF0Y2ggb3VyIFJvbWFuIGVsb3F1ZW5jZSBhZ2FpbnN0IHRoYXQgb2YgR3JlZWNlLgpGb3IgSSB3b3VsZCBzZXQgQ2ljZXJvIGFnYWluc3QgYW55IG9uZSBvZiB0aGVpcgpvcmF0b3JzIHdpdGhvdXQgZmVhciBvZiByZWZ1dGF0aW9uLiBJIGtub3cgd2VsbAplbm91Z2ggd2hhdCBhIHN0b3JtIEkgc2hhbGwgcmFpc2UgYnkgdGhpcyBhc3NlcnRpb24sCm1vcmUgZXNwZWNpYWxseSBzaW5jZSBJIGRvIG5vdCBwcm9wb3NlIGZvciB0aGUKbW9tZW50PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBYSUkuIGkuIDE0IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPiwgYWxzbyBYSUkgeC4gMTIgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PC9ub3RlPiB0byBjb21wYXJlIGhpbSB3aXRoIERlbW9zdGhlbmVzOyBmb3IKdGhlcmUgd291bGQgYmUgbm8gcG9pbnQgaW4gc3VjaCBhIGNvbXBhcmlzb24sIGFzIEkKY29uc2lkZXIgdGhhdCBEZW1vc3RoZW5lcyBzaG91bGQgYmUgdGhlIG9iamVjdCBvZgpzcGVjaWFsIHN0dWR5LCBhbmQgbm90IG1lcmVseSBzdHVkaWVkLCBidXQgZXZlbiBjb21taXR0ZWQgdG8gbWVtb3J5LjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPiwgYWxzbyBYSUkgeC4gMTIgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PC90cmFuc2xhdGlvbj4="
translation['10.2.106'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDYiIHVuaXQ9InNlY3Rpb24iIC8+IEkgcmVnYXJkIHRoZSBleGNlbGxlbmNlcyBvZiB0aGVzZQp0d28gb3JhdG9ycyBhcyBiZWluZyBmb3IgdGhlIG1vc3QgcGFydCBzaW1pbGFyLCB0aGF0CmlzIHRvIHNheSwgdGhlaXIganVkZ21lbnQsIHRoZWlyIGdpZnQgb2YgYXJyYW5nZW1lbnQsCnRoZWlyIG1ldGhvZHMgb2YgZGl2aXNpb24sIHByZXBhcmF0aW9uIGFuZCBwcm9vZiwgYXMKd2VsbCBhcyBldmVyeXRoaW5nIGNvbmNlcm5lZCB3aXRoIGludmVudGlvbi4gSW4KdGhlaXIgYWN0dWFsIHN0eWxlIHRoZXJlIGlzIHNvbWUgZGlmZmVyZW5jZS4gRGVtb3N0aGVuZXMgaXMgbW9yZSBjb25jZW50cmF0ZWQsIENpY2VybyBtb3JlIGRpZmZ1c2U7CkRlbW9zdGhlbmVzIG1ha2VzIGhpcyBwZXJpb2RzIHNob3J0ZXIgdGhhbiBDaWNlcm8sCmFuZCBoaXMgd2VhcG9uIGlzIHRoZSByYXBpZXIsIHdoZXJlYXMgQ2ljZXJvJ3MgcGVyaW9kcwphcmUgbG9uZ2VyLCBhbmQgYXQgdGltZXMgaGUgZW1wbG95cyB0aGUgYmx1ZGdlb24gYXMKd2VsbDogbm90aGluZyBjYW4gYmUgdGFrZW4gZnJvbSB0aGUgZm9ybWVyLCBub3IKYWRkZWQgdG8gdGhlIGxhdHRlcjsgdGhlIEdyZWVrIHJldmVhbHMgYSBtb3JlCnN0dWRpZWQsIHRoZSBSb21hbiBhIG1vcmUgbmF0dXJhbCBhcnQuPC90cmFuc2xhdGlvbj4="
translation['10.2.107'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDciIHVuaXQ9InNlY3Rpb24iIC8+IEFzIHJlZ2FyZHMKd2l0IGFuZCB0aGUgcG93ZXIgb2YgZXhjaXRpbmcgcGl0eSwgdGhlIHR3byBtb3N0CnBvd2VyZnVsIGluc3RydW1lbnRzIHdoZXJlIHRoZSBmZWVsaW5ncyBhcmUgY29uY2VybmVkLCB3ZSBoYXZlIHRoZSBhZHZhbnRhZ2UuIEFnYWluLCBpdCBpcyBwb3NzaWJsZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNjMiIC8+Cgp0aGF0IERlbW9zdGhlbmVzIHdhcyBkZXByaXZlZCBieSBuYXRpb25hbCBjdXN0b208bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Y3AuPC9oaT4geHZpLiA0OyB2aSBpIDcgUXVpbnRpbGlhbiByZWZlcnMgdG8gYW4gYWxsZWdlZApsYXcgYXQgQXRoZW5zIGZvcmJpZGRpbmcgYXBwZWFscyB0byB0aGUgZW1vdGlvbi48L25vdGU+Cm9mIHRoZSBvcHBvcnR1bml0eSBvZiBwcm9kdWNpbmcgcG93ZXJmdWwgcGVyb3JhdGlvbnMsIGJ1dCBhZ2FpbnN0IHRoaXMgbWF5IGJlIHNldCB0aGUgZmFjdCB0aGF0IHRoZQpkaWZmZXJlbnQgY2hhcmFjdGVyIG9mIHRoZSBMYXRpbiBsYW5ndWFnZSBkZWJhcnMgdXMKZnJvbSB0aGUgYXR0YWlubWVudCBvZiB0aG9zZSBxdWFsaXRpZXMgd2hpY2ggYXJlCnNvIG11Y2ggYWRtaXJlZCBieSB0aGUgYWRoZXJlbnRzIG9mIHRoZSBBdHRpYwpzY2hvb2wuIEFzIHJlZ2FyZHMgdGhlaXIgbGV0dGVycywgd2hpY2ggaGF2ZSBpbgpib3RoIGNhc2VzIHN1cnZpdmVkLCBhbmQgZGlhbG9ndWVzLCB3aGljaCBEZW1vc3RoZW5lcyBuZXZlciBhdHRlbXB0ZWQsIHRoZXJlIGNhbiBiZSBubyBjb21wYXJpc29uCmJldHdlZW4gdGhlIHR3by48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiB4dmkuIDQ7IHZpIGkgNyBRdWludGlsaWFuIHJlZmVycyB0byBhbiBhbGxlZ2VkCmxhdyBhdCBBdGhlbnMgZm9yYmlkZGluZyBhcHBlYWxzIHRvIHRoZSBlbW90aW9uLjwvdHJhbnNsYXRpb24+"
translation['10.2.108'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDgiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCwgb24gdGhlIG90aGVyIGhhbmQsIHRoZXJlIGlzCm9uZSBwb2ludCBpbiB3aGljaCB0aGUgR3JlZWsgaGFzIHRoZSB1bmRvdWJ0ZWQKc3VwZXJpb3JpdHk6IGhlIGNvbWVzIGZpcnN0IGluIHBvaW50IG9mIHRpbWUsIGFuZCBpdAp3YXMgbGFyZ2VseSBkdWUgdG8gaGltIHRoYXQgQ2ljZXJvIHdhcyBhYmxlIHRvIGF0dGFpbgpncmVhdG5lc3MuIEZvciBpdCBzZWVtcyB0byBtZSB0aGF0IENpY2Vybywgd2hvCmRldm90ZWQgaGltc2VsZiBoZWFydCBhbmQgc291bCB0byB0aGUgaW1pdGF0aW9uIG9mCnRoZSBHcmVla3MsIHN1Y2NlZWRlZCBpbiByZXByb2R1Y2luZyB0aGUgZm9yY2Ugb2YKRGVtb3N0aGVuZXMsIHRoZSBjb3Bpb3VzIGZsb3cgb2YgUGxhdG8sIGFuZCB0aGUKY2hhcm0gb2YgSXNvY3JhdGVzLjwvdHJhbnNsYXRpb24+"
translation['10.2.109'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDkiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCBoZSBkaWQgc29tZXRoaW5nIG1vcmUKdGhhbiByZXByb2R1Y2UgdGhlIGJlc3QgZWxlbWVudHMgaW4gZWFjaCBvZiB0aGVzZQphdXRob3JzIGJ5IGRpbnQgb2YgY2FyZWZ1bCBzdHVkeTsgaXQgd2FzIHRvIGhpbXNlbGYKdGhhdCBoZSBvd2VkIG1vc3Qgb2YsIG9yIHJhdGhlciBhbGwgaGlzIGV4Y2VsbGVuY2VzLAp3aGljaCBzcHJpbmcgZnJvbSB0aGUgZXh0cmFvcmRpbmFyeSBmZXJ0aWxpdHkgb2YgaGlzCmltbW9ydGFsIGdlbml1cy4gRm9yIGhlIGRvZXMgbm90LCBhcyBQaW5kYXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlIHF1b3RhdGlvbiBpcyBub3QgZm91bmQgaW4gUGluZGFyJ3MgZXh0YW50IHdvcmtzLjwvbm90ZT4gc2F5cywKPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Y29sbGVjdCB0aGUgcmFpbiBmcm9tIGhlYXZlbiwgYnV0IHdlbGxzIGZvcnRoIHdpdGgKbGl2aW5nIHdhdGVyLDwvcXVvdGU+IHNpbmNlIFByb3ZpZGVuY2UgYXQgaGlzIGJpcnRoIGNvbmZlcnJlZAp0aGlzIHNwZWNpYWwgcHJpdmlsZWdlIHVwb24gaGltLCB0aGF0IGVsb3F1ZW5jZSBzaG91bGQKbWFrZSB0cmlhbCBvZiBhbGwgaGVyIHBvd2VycyBpbiBoaW0uPC90cmFuc2xhdGlvbj4="
translation['10.2.110'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTAiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciB3aG8gY2FuCmluc3RydWN0IHdpdGggZ3JlYXRlciB0aG9yb3VnaG5lc3MsIG9yIG1vcmUgZGVlcGx5CnN0aXIgdGhlIGVtb3Rpb25zPyBXaG8gaGFzIGV2ZXIgcG9zc2Vzc2VkIHN1Y2ggYQpnaWZ0IG9mIGNoYXJtPyBIZSBzZWVtcyB0byBvYnRhaW4gYXMgYSBib29uIHdoYXQKaW4gcmVhbGl0eSBoZSBleHRvcnRzIGJ5IGZvcmNlLCBhbmQgd2hlbiBoZSB3cmVzdHMKdGhlIGp1ZGdlIGZyb20gdGhlIHBhdGggb2YgaGlzIG93biBqdWRnbWVudCwgdGhlCmxhdHRlciBzZWVtcyBub3QgdG8gYmUgc3dlcHQgYXdheSwgYnV0IG1lcmVseSB0bwpmb2xsb3cuPC90cmFuc2xhdGlvbj4="
translation['10.2.111'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTEiIHVuaXQ9InNlY3Rpb24iIC8+IEZ1cnRoZXIsIHRoZXJlIGlzIHN1Y2ggd2VpZ2h0IGluIGFsbCB0aGF0IGhlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC42NSIgLz4KCnNheXMgdGhhdCBoaXMgYXVkaWVuY2UgZmVlbCBhc2hhbWVkIHRvIGRpc2FncmVlIHdpdGgKaGltLCBhbmQgdGhlIHplYWwgb2YgdGhlIGFkdm9jYXRlIGlzIHNvIHRyYW5zZmlndXJlZAp0aGF0IGl0IGhhcyB0aGUgZWZmZWN0IG9mIHRoZSBzd29ybiBldmlkZW5jZSBvZiBhCndpdG5lc3MsIG9yIHRoZSB2ZXJkaWN0IG9mIGEganVkZ2UuIEFuZCBhdCB0aGUgc2FtZQp0aW1lIGFsbCB0aGVzZSBleGNlbGxlbmNlcywgb2Ygd2hpY2ggc2NhcmNlIG9uZSBjb3VsZApiZSBhdHRhaW5lZCBieSB0aGUgb3JkaW5hcnkgbWFuIGV2ZW4gYnkgdGhlIG1vc3QKY29uY2VudHJhdGVkIGVmZm9ydCwgZmxvdyBmcm9tIGhpbSB3aXRoIGV2ZXJ5IGFwcGVhcmFuY2Ugb2Ygc3BvbnRhbmVpdHksIGFuZCBoaXMgc3R5bGUsIGFsdGhvdWdoIG5vIGZhaXJlcgpoYXMgZXZlciBmYWxsZW4gb24gdGhlIGVhcnMgb2YgbWVuLCBub25lIHRoZSBsZXNzCmRpc3BsYXlzIHRoZSB1dG1vc3QgZmVsaWNpdHkgYW5kIGVhc2UuPC90cmFuc2xhdGlvbj4="
translation['10.2.112'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTIiIHVuaXQ9InNlY3Rpb24iIC8+IEl0IHdhcyBub3QsCnRoZXJlZm9yZSwgd2l0aG91dCBnb29kIHJlYXNvbiB0aGF0IGhpcyBvd24gY29udGVtcG9yYXJpZXMgc3Bva2Ugb2YgaGlzIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPnNvdmVyZWlnbnR5PC9xdW90ZT4gYXQgdGhlIGJhciwgYW5kCnRoYXQgZm9yIHBvc3Rlcml0eSB0aGUgbmFtZSBvZiBDaWNlcm8gaGFzIGNvbWUgdG8gYmUKcmVnYXJkZWQgbm90IGFzIHRoZSBuYW1lIG9mIGEgbWFuLCBidXQgYXMgdGhlIG5hbWUKb2YgZWxvcXVlbmNlIGl0c2VsZi4gTGV0IHVzLCB0aGVyZWZvcmUsIGZpeCBvdXIgZXllcyBvbgpoaW0sIHRha2UgaGltIGFzIG91ciBwYXR0ZXJuLCBhbmQgbGV0IHRoZSBzdHVkZW50IHJlYWxpc2UKdGhhdCBoZSBoYXMgbWFkZSByZWFsIHByb2dyZXNzIGlmIGhlIGlzIGEgcGFzc2lvbmF0ZQphZG1pcmVyIG9mIENpY2Vyby48L3RyYW5zbGF0aW9uPg=="
translation['10.2.113'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTMiIHVuaXQ9InNlY3Rpb24iIC8+IEFzaW5pdXMgUG9sbGlvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkFzaW5pdXMgUG9sbGlvICg3NSBCLkMu4oCUQS5ELiA0KSwgdGhlIGZyaWVuZCBvZiBWaXJnaWwsCmRpc3Rpbmd1aXNoZWQgYXMgcG9ldCwgaGlzdG9yaWFuIGFuZCBvcmF0b3IuPC9ub3RlPiBoYWQgZ3JlYXQgZ2lmdHMgb2YKaW52ZW50aW9uIGFuZCBncmVhdCBwcmVjaXNpb24gb2YgbGFuZ3VhZ2UgKGluZGVlZCwKc29tZSB0aGluayBoaW0gdG9vIHByZWNpc2UpLCB3aGlsZSBoaXMganVkZ21lbnQKYW5kIHNwaXJpdCB3ZXJlIGZ1bGx5IGFkZXF1YXRlLiBCdXQgaGUgaXMgc28gZmFyIGZyb20KZXF1YWxsaW5nIHRoZSBwb2xpc2ggYW5kIGNoYXJtIG9mIENpY2VybyB0aGF0IGhlCm1pZ2h0IGhhdmUgYmVlbiBib3JuIGEgZ2VuZXJhdGlvbiBiZWZvcmUgaGltLgpNZXNzYWxhLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5NLiBWYWxlcml1cyBDb3J2aW51cyAoNjQgQi5DLuKAlEEuRC4gOCksIHRoZSBmcmllbmQgb2YKVGlidWxsdXMgYW5kIGRpc3Rpbmd1aXNoZWQgYXMgYW4gb3JhdG9yLjwvbm90ZT4gb24gdGhlIG90aGVyIGhhbmQsIGlzIHBvbGlzaGVkIGFuZCB0cmFuc3BhcmVudCBhbmQgZGlzcGxheXMgaGlzIG5vYmlsaXR5IGluIGhpcyB1dHRlcmFuY2UsCmJ1dCBoZSBmYWlscyB0byBkbyBoaXMgcG93ZXJzIGZ1bGwganVzdGljZS48L3RyYW5zbGF0aW9uPg=="
translation['10.2.114'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTQiIHVuaXQ9InNlY3Rpb24iIC8+IEFzCmZvciBHYWl1cyBDYWVzYXIsIGlmIGhlIGhhZCBoYWQgbGVpc3VyZSB0byBkZXZvdGUKaGltc2VsZiB0byB0aGUgY291cnRzLCBoZSB3b3VsZCBoYXZlIGJlZW4gdGhlIG9uZQpvcmF0b3Igd2hvIGNvdWxkIGhhdmUgYmVlbiBjb25zaWRlcmVkIGEgc2VyaW91cyByaXZhbAp0byBDaWNlcm8uIFN1Y2ggYXJlIGhpcyBmb3JjZSwgaGlzIHBlbmV0cmF0aW9uIGFuZApoaXMgZW5lcmd5IHRoYXQgd2UgcmVhbGlzZSB0aGF0IGhlIHdhcyBhcyB2aWdvcm91cyBpbgpzcGVlY2ggYXMgaW4gaGlzIGNvbmR1Y3Qgb2Ygd2FyLiBBbmQgeWV0IGFsbCB0aGVzZQpxdWFsaXRpZXMgYXJlIGVuaGFuY2VkIGJ5IGEgbWFydmVsbG91cyBlbGVnYW5jZSBvZgpsYW5ndWFnZSwgb2Ygd2hpY2ggaGUgd2FzIGFuIGV4Y2VwdGlvbmFsbHkgemVhbG91cwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNjciIC8+CgpzdHVkZW50LjwvdHJhbnNsYXRpb24+"
translation['10.2.115'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTUiIHVuaXQ9InNlY3Rpb24iIC8+IENhZWxpdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+TS4gUnVmdXMgQ2FlbGl1cywgZGVmZW5kZWQgYnkgQ2ljZXJvIGluIHRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gQ2F0bGlvLjwvaGk+CktpbGxlZCBpbiA0OCBCLkMuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkNwLjwvaGk+IElWLiBpaS4gMTIzLjogVklJLiBpLiA1My48L25vdGU+IGhhcyBtdWNoIG5hdHVyYWwgdGFsZW50IGFuZCBtdWNoCndpdCwgbW9yZSBlc3BlY2lhbGx5IHdoZW4gc3BlYWtpbmcgZm9yIHRoZSBwcm9zZWN1dGlvbiwgYW5kIGRlc2VydmVkIGEgd2lzZXIgbWluZCBhbmQgYSBsb25nZXIgbGlmZS4KSSBoYXZlIGNvbWUgYWNyb3NzIHNvbWUgY3JpdGljcyB3aG8gcHJlZmVycmVkCkNhbHZ1czxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBDYXRsaW8uPC9oaT4KS2lsbGVkIGluIDQ4IEIuQy4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Q3AuPC9oaT4gSVYuIGlpLiAxMjMuOiBWSUkuIGkuIDUzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5DYWx2dXMgKChHYWl1cyBMaWNpbml1cyksIGEgZGlzdGluZ3Vpc2ggcG9ldCBhbmQuIHdpdGgKQnJ1dHVzLCB0aGUgbGVhZGluZyBvcmF0b3Igb2YgdGhlIEF0dGljIFNjaG9vbC4gSGUgZGllZAphdCB0aGUgYWdlIG9mIDM0IGluIDQ4IEIuQy48L25vdGU+IHRvIGFsbCBvdGhlciBvcmF0b3JzLCBhbmQgb3RoZXJzIGFnYWluIHdobwphZ3JlZWQgd2l0aCBDaWNlcm8gdGhhdCB0b28gc2V2ZXJlIHNlbGYtY3JpdGljaXNtIGhhZApyb2JiZWQgaGltIG9mIGhpcyBuYXR1cmFsIHZpZ291ci4gQnV0IGhlIHdhcyB0aGUKcG9zc2Vzc29yIG9mIGEgc29sZW1uLCB3ZWlnaHR5IGFuZCBjaGFzdGVuZWQgc3R5bGUsCndoaWNoIHdhcyBhbHNvIGNhcGFibGUgYXQgdGltZXMgb2YgZ2VudWluZSB2ZWhlbWVuY2UuIEhlIHdhcyBhbiBhZGhlcmVudCBvZiB0aGUgQXR0aWMgc2Nob29sIGFuZAphbiB1bnRpbWVseSBkZWF0aCBkZXByaXZlZCBoaW0gb2YgaGlzIGZ1bGwgbWVlZCBvZgpob25vdXIsIGF0IGxlYXN0IGlmIHdlIHJlZ2FyZCBoaW0gYXMgbGlrZWx5IHRvIGhhdmUKYWNxdWlyZWQgZnJlc2ggcXVhbGl0aWVzLjwvdHJhbnNsYXRpb24+"
translation['10.2.116'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTYiIHVuaXQ9InNlY3Rpb24iIC8+IFNlcnZpdXMgU3VscGljaXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlcnZpdXMgU3VscGljaXVzIFJ1ZnVzLCB0aGUgZ3JlYXRlc3QganVyaXN0IG9mIHRoZQpDaWVjcm9uaWFuIGFnZS48L25vdGU+IGFjcXVpcmVkCmEgZ3JlYXQgYW5kIHdlbGwtZGVzZXJ2ZWQgcmVwdXRhdGlvbiBieSBoaXMgdGhyZWUKc3BlZWNoZXMuIENhc3NpdXMgU2V2ZXJ1cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+YXNzaXVzIFNldmVydXMgKDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmQuPC9oaT4gQS5ELiAzNCkgYmFuaXNoZWQgYnkgQXVndXN0dXMgb24KYWNjb3VudCBvZiBoaXMgc2N1cnJpbG91cyBsYW1wb29ucy48L25vdGU+IGlmIHJlYWQgd2l0aCBkaXNjcmltaW5hdGlvbiwgd2lsbCBwcm92aWRlIG11Y2ggdGhhdCBpcyB3b3J0aHkgb2YgaW1pdGF0aW9uOgppZiB0byBoaXMgb3RoZXIgbWVyaXRzIGhlIGhhZCBhZGRlZCBhcHByb3ByaWF0ZW5lc3MKb2YgdG9uZSBhbmQgZGlnbml0eSBvZiBzdHlsZSw8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5kLjwvaGk+IEEuRC4gMzQpIGJhbmlzaGVkIGJ5IEF1Z3VzdHVzIG9uCmFjY291bnQgb2YgaGlzIHNjdXJyaWxvdXMgbGFtcG9vbnMuPC90cmFuc2xhdGlvbj4="
translation['10.2.117'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTciIHVuaXQ9InNlY3Rpb24iIC8+IGhlIHdvdWxkIGRlc2VydmUgYQpwbGFjZSBhbW9uZyB0aGUgZ3JlYXRlc3QuIEZvciBoaXMgbmF0dXJhbCB0YWxlbnRzCmFyZSBncmVhdCwgaGlzIGdpZnQgb2YgYml0dGVybmVzcywgd2l0IGFuZCBwYXNzaW9uCnJlbWFya2FibGUsIGJ1dCBoZSBhbGxvd2VkIHRoZSBzaGFycG5lc3Mgb2YgaGlzCnRlbXBlciB0byBwcmV2YWlsIG92ZXIgaGlzIGp1ZGdtZW50LiBNb3Jlb3ZlciwKdGhvdWdoIGhpcyBqZXN0cyBhcmUgcHVuZ2VudCBlbm91Z2gsIHRoaXMgdmVyeQpwdW5nZW5jeSBvZnRlbiB0dXJuZWQgdGhlIGxhdWdoIGFnYWluc3QgaGltc2VsZi4KPC90cmFuc2xhdGlvbj4="
translation['10.2.118'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTgiIHVuaXQ9InNlY3Rpb24iIC8+VGhlcmUgYXJlIG1hbnkgb3RoZXIgY2xldmVyIHNwZWFrZXJzLCBidXQgaXQKd291bGQgYmUgYSBsb25nIHRhc2sgdG8gZGVhbCB3aXRoIHRoZW0gYWxsLiBEb21pdGl1cwpBZmVyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkRvbWl0aXVzIEFmZXIgKDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmQuPC9oaT4gNTkgQS5ELiksIHRoZSBsZWFkaW5nIG9yYXRvciBvZiB0aGUKcmVpZ25zIG9mIFRpYmVyaXVzIGFuZCBoaXMgc3VjY2Vzc29ycy48L25vdGU+IGFuZCBKdWxpdXMgQWZyaWNhbnVzPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZC48L2hpPiA1OSBBLkQuKSwgdGhlIGxlYWRpbmcgb3JhdG9yIG9mIHRoZQpyZWlnbnMgb2YgVGliZXJpdXMgYW5kIGhpcyBzdWNjZXNzb3JzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5JdWxpdXMgQWZyaWNhbnVzLCBhIEdhdWwsIHdobyBmbG91cmlzaGVkIGluIHRoZSByZWlnbiBvZgpOZXJvLjwvbm90ZT4gYXJlIGJ5IGZhciB0aGUgbW9zdCBkaXN0aW5ndWlzaGVkLiBUaGUgZm9ybWVyIGlzIHN1cGVyaW9yIGluIGFydCBhbmQgaW4KZXZlcnkgZGVwYXJ0bWVudCBvZiBvcmF0b3J5LCBpbmRlZWQgaGUgbWF5IGhlCnJhbmtlZCB3aXRoIHRoZSBvbGQgb3JhdG9ycyB3aXRob3V0IGZlYXIgb2YKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjY5IiAvPgoKY29udHJhZGljdGlvbi4gVGhlIGxhdHRlciBzaG93cyBncmVhdGVyIGVuZXJneSwgYnV0IGlzIHRvbwpncmVhdCBhIHByZWNpc2lhbiBpbiB0aGUgY2hvaWNlIG9mIHdvcmRzLCBwcm9uZSB0bwp0ZWRpb3VzbHkgbG9uZyBwZXJpb2RzIGFuZCBzb21ld2hhdCBleHRyYXZhZ2FudCBpbgpoaXMgbWV0YXBob3JzLiBUaGVyZSBoYXZlIGJlZW4gZGlzdGluZ3Vpc2hlZAp0YWxlbnRzIGV2ZW4gb2YgbW9yZSByZWNlbnQgZGF0ZS48L3RyYW5zbGF0aW9uPg=="
translation['10.2.119'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTkiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBleGFtcGxlLApUcmFjaGFsdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+TS4gR2FsZXJpdXMgVHJhY2hhbHVzIChjb3MuICgxOCBBLkQuKSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5DcDwvaGk+IFhJSSB2LiA1PC9ub3RlPiB3YXMsIGFzIGEgcnVsZSwgZWxldmF0ZWQgYW5kIHN1ZmZpY2llbnRseQpjbGVhciBpbiBoaXMgbGFuZ3VhZ2U6IG9uZSByZWFsaXNlZCB0aGF0IGhpcyBhaW1zCndlcmUgaGlnaCwgYnV0IGhlIHdhcyBiZXR0ZXIgdG8gbGlzdGVuIHRvIHRoYW4gdG8KcmVhZC4gRm9yIGhpcyB2b2ljZSB3YXMsIGluIG15IGV4cGVyaWVuY2UsIHVuaXF1ZQppbiBpdHMgYmVhdXR5IG9mIHRvbmUsIHdoaWxlIGhpcyBkZWxpdmVyeSB3b3VsZCBoYXZlCmRvbmUgY3JlZGl0IHRvIGFuIGFjdG9yLCBoaXMgYWN0aW9uIHdhcyBmdWxsIG9mIGdyYWNlCmFuZCBoZSBwb3NzZXNzZWQgZXZlcnkgZXh0ZXJuYWwgYWR2YW50YWdlIGluIHByb2Z1c2lvbi4gVmliaXVzIENyaXNwdXMsPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Q3A8L2hpPiBYSUkgdi4gNTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5WaWJpdXMgQ3Jpc3B1cywgYSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5kZWxhdG9yPC9oaT4gdW5kZXIgTmVybywgZGllZCBhYm91dCBBLkQuCjkwLCBhZnRlciBhY3F1aXJpbmcgZ3JlYXQgd2VhbHRoLiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5DcC4gSnV2LjwvaGk+IGl2LiA4MeKAkzkzLjwvbm90ZT4gYWdhaW4sIHdhcyB3ZWxsLWJhbGFuY2VkLAphZ3JlZWFibGUgYW5kIGJvcm4gdG8gY2hhcm0sIHRob3VnaCBoZSB3YXMgYmV0dGVyCmluIHByaXZhdGUgdGhhbiBpbiBwdWJsaWMgY2FzZXMuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGVsYXRvcjwvaGk+IHVuZGVyIE5lcm8sIGRpZWQgYWJvdXQgQS5ELgo5MCwgYWZ0ZXIgYWNxdWlyaW5nIGdyZWF0IHdlYWx0aC4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Q3AuIEp1di48L2hpPiBpdi4gODHigJM5My48L3RyYW5zbGF0aW9uPg=="
translation['10.2.120'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjAiIHVuaXQ9InNlY3Rpb24iIC8+IEp1bGl1cyBTZWN1bmR1cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+SnVsaXVzIFNlY3VuZHVzLCBhIGRpc3Rpbmd1aXNoZWQgb3JhdG9yIG9mIHRoZSByZWlnbiBvZgpWZXNwYXNpYW4uIE9uZSBvZiB0aGUgY2hhcmFjdGVycyBpbiB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGlhbG9ndXM8L2hpPiBvZiBUYWNpdHVzLjwvbm90ZT4KaGFkIGhlIGxpdmVkIGxvbmdlciwgd291bGQgdW5kb3VidGVkbHkgaGF2ZSBhdHRhaW5lZAphIGdyZWF0IGFuZCBlbmR1cmluZyByZXB1dGF0aW9uLiBGb3IgaGUgd291bGQgaGF2ZQphY3F1aXJlZCwgYXMgaGUgd2FzIGFjdHVhbGx5IGFjcXVpcmluZywgYWxsIHRoYXQgd2FzCmxhY2tpbmcgdG8gaGlzIHF1YWxpdGllcywgbmFtZWx5LCBhIGZhciBncmVhdGVyCnB1Z25hY2l0eSBhbmQgYSBjbG9zZXIgYXR0ZW50aW9uIHRvIHN1YnN0YW5jZSBhcyB3ZWxsCmFzIGZvcm0uPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGlhbG9ndXM8L2hpPiBvZiBUYWNpdHVzLjwvdHJhbnNsYXRpb24+"
translation['10.2.121'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjEiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCwgaW4gc3BpdGUgb2YgdGhlIHVudGltZWxpbmVzcyBvZiBoaXMgZW5kLApoZSBvY2N1cGllcyBhIGhpZ2ggcGxhY2UsIHRoYW5rcyB0byBoaXMgZmx1ZW5jeSwgdGhlCmdyYWNlIHdpdGggd2hpY2ggaGUgc2V0IGZvcnRoIHdoYXRldmVyIGhlIGRlc2lyZWQsCnRoZSBsdWNpZGl0eSwgc21vb3RobmVzcyBhbmQgYmVhdXR5IG9mIGhpcyBzcGVlY2gsCnRoZSBwcm9wcmlldHkgcmV2ZWFsZWQgaW4gdGhlIHVzZSBvZiB3b3JkcywgZXZlbgp3aGVuIGVtcGxveWVkIGZpZ3VyYXRpdmVseSwgYW5kIHRoZSBwb2ludCB3aGljaApjaGFyYWN0ZXJpc2VzIGV2ZW4gaGlzIG1vc3QgaGF6YXJkb3VzIGV4cHJlc3Npb25zLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.2.122'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjIiIHVuaXQ9InNlY3Rpb24iIC8+U3Vic2VxdWVudCB3cml0ZXJzIG9uIHRoZSBoaXN0b3J5IG9mIG9yYXRvcnkgd2lsbApmaW5kIGFidW5kYW50IG1hdGVyaWFsIGZvciBwcmFpc2UgYW1vbmcgdGhlIG9yYXRvcnMKd2hvIGZsb3VyaXNoIHRvLWRheTogZm9yIHRoZSBsYXcgY291cnRzIGNhbiBib2FzdAphIGdsb3Jpb3VzIHdlYWx0aCBvZiB0YWxlbnQuIEluZGVlZCwgdGhlIGNvbnN1bW1hdGUgYWR2b2NhdGVzIG9mIHRoZSBwcmVzZW50IGRheSBhcmUgc2VyaW91cwpyaXZhbHMgb2YgdGhlIGFuY2llbnRzLCB3aGlsZSBlbnRodXNpYXN0aWMgZWZmb3J0CmFuZCBsb2Z0eSBpZGVhbHMgbGVhZCBtYW55IGEgeW91bmcgc3R1ZGVudAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNzEiIC8+Cgp0byB0cmVhZCBpbiB0aGVpciBmb290c3RlcHMgYW5kIGltaXRhdGUgdGhlaXIKZXhjZWxsZW5jZS48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjMiIHVuaXQ9InNlY3Rpb24iIC8+SSBoYXZlIHN0aWxsIHRvIGRlYWwgd2l0aCB3cml0ZXJzIG9uIHBoaWxvc29waHksCm9mIHdob20gUm9tZSBoYXMgc28gZmFyIHByb2R1Y2VkIGJ1dCBmZXcgd2hvIGFyZQpkaXN0aW5ndWlzaGVkIGZvciB0aGVpciBzdHlsZS4gQnV0IENpY2Vybywgd2hvIGlzCmdyZWF0IGluIGV2ZXJ5IGRlcGFydG1lbnQgb2YgbGl0ZXJhdHVyZSwgc3RhbmRzIG91dAphcyB0aGUgcml2YWwgb2YgUGxhdG8gaW4gdGhpcyBkZXBhcnRtZW50IGFzIHdlbGwuCkJydXR1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+QnJ1dHVzLCBvbWl0dGVkIGZyb20gUWF1aW50aWxpYW4ncyBsaXN0IG9mIG9yYXRvcnMsIHdhcyBhCmZvbGxvd2VyIG9mIHRoZSBTdG9pYyBhbmQgQWNhZGVtaWMgc2Nob29scy4gSGUgaXMga25vd24KdG8gaGF2ZSB3cml0dGVuIHRyZWF0aXNlcyBvbiBWaXJ0dWUsIER1dHkgYW5kIFBhdGllbmNlLjwvbm90ZT4gd2FzIGFuIGFkbWlyYWJsZSB3cml0ZXIgb24gc3VjaCB0aGVtZXMsIGluCndoaWNoIGhlIGRpc3Rpbmd1aXNoZWQgaGltc2VsZiBmYXIgbW9yZSB0aGFuIGluIGhpcwpzcGVlY2hlczogaGUgaXMgZXF1YWwgdG8gdGhlIHNlcmlvdXMgbmF0dXJlIG9mIGhpcwpzdWJqZWN0LCBhbmQgdGhlIHJlYWRlciByZWFsaXNlcyB0aGF0IGhlIGZlZWxzIHdoYXQKaGUgc2F5cy48bWlsZXN0b25lIG49IjEyNCIgdW5pdD0ic2VjdGlvbiIgLz4gQ29ybmVsaXVzIENlbHN1cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkFuIGVuY3ljbG9wZWRpYyB3cml0ZXIgdW5kZXIgQXVndXN0dXMgYW5kIFRpYmVyaXVzLgpIaXMgbWVkaWNhbCB0cmVhdGlzZXMgaGF2ZSBzdXJ2aXZlZC4gSGUgd3JvdGUgb24gb3JhdG9yeQphbHNvLCBhbmQgaXMgbm90IGluZnJlcXVlbnRseSBxdW90ZWQgYnkgUXVpbnRpbGlhbi48L25vdGU+IGEgZm9sbG93ZXIgb2YgdGhlIFNleHRpaSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRoZSBTZXh0aWksIGZhdGhlciBhbmQgc29uLCB3ZXJlIFB5dGhhZ29yZWFuIHBoaWxvc29waGVycyBvZiB0aGUgQXVndXN0YW4gYWdlLCB3aXRoIHNvbWV0aGluZyBvZiBhIFN0b2ljCnRlbmRlbmN5IGFzIHdlbGwuPC9ub3RlPgp3cm90ZSBhIG51bWJlciBvZiBwaGlsb3NvcGhpY2FsIHdvcmtzLCB3aGljaCBoYXZlCmNvbnNpZGVyYWJsZSBncmFjZSBhbmQgcG9saXNoLiBBbW9uZyB0aGUgU3RvaWNzClBsYXV0dXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjEyMzwvbm90ZT4gaXMgdXNlZnVsIGFzIGdpdmluZyBhIGtub3dsZWRnZSBvZiB0aGUKc3ViamVjdC48bWlsZXN0b25lIG49IjEyNSIgdW5pdD0ic2VjdGlvbiIgLz4gQW1vbmcgdGhlIEVwaWN1cmVhbnMgQ2F0aXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5BIGNvbnRlbXBvcmFyeSBvZiBDaWNlcm8sIHdobyBzcGVha3Mgb2YgaGltIHNvbWV3aGF0CmNvbnRlbXB0dW91c2x5LiBIZSB3cm90ZSBmb3VyIGJvb2tzIDxoaSByZW5kPSJpdGFsaWNzIj5kZSByZXJ1bSBtYXR1cmEgZXQKZGUgc3VtbW8gYm9uby48L2hpPjwvbm90ZT4gaXMgYWdyZWVhYmxlIHRvIHJlYWQsIHRob3VnaCBsYWNraW5nIGluIHdlaWdodC4gSSBoYXZlCmRlbGliZXJhdGVseSBwb3N0cG9uZWQgdGhlIGRpc2N1c3Npb24gb2YgU2VuZWNhIGluCmNvbm5leGlvbiB3aXRoIHRoZSB2YXJpb3VzIGRlcGFydG1lbnRzIG9mIGxpdGVyYXR1cmUKb3dpbmcgdG8gdGhlIGZhY3QgdGhhdCB0aGVyZSBpcyBhIGdlbmVyYWwsIHRob3VnaApmYWxzZSwgaW1wcmVzc2lvbiB0aGF0IEkgY29uZGVtbiBhbmQgZXZlbiBkZXRlc3QKaGltLiBJdCBpcyB0cnVlIHRoYXQgSSBoYWQgb2NjYXNpb24gdG8gcGFzcyBjZW5zdXJlIHVwb24gaGltIHdoZW4gSSB3YXMgZW5kZWF2b3VyaW5nIHRvIHJlY2FsbApzdHVkZW50cyBmcm9tIGEgZGVwcmF2ZWQgc3R5bGUsIHdlYWtlbmVkIGJ5IGV2ZXJ5CmtpbmQgb2YgZXJyb3IsIHRvIGEgc2V2ZXJlciBzdGFuZGFyZCBvZiB0YXN0ZS48bWlsZXN0b25lIG49IjEyNiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0CmF0IHRoYXQgdGltZSBTZW5lY2EncyB3b3JrcyB3ZXJlIGluIHRoZSBoYW5kcwpvZiBldmVyeSB5b3VuZyBtYW4sIGFuZCBteSBhaW0gd2FzIG5vdCB0byBiYW4gaGlzCnJlYWRpbmcgYWx0b2dldGhlciwgYnV0IHRvIHByZXZlbnQgaGlzIGJlaW5nIHByZWZlcnJlZCB0byBhdXRob3JzIHN1cGVyaW9yIHRvIGhpbXNlbGYsIGJ1dCB3aG9tIGhlCndhcyBuZXZlciB0aXJlZCBvZiBkaXNwYXJhZ2luZzsgZm9yLCBiZWluZyBjb25zY2lvdXMKb2YgdGhlIGZhY3QgdGhhdCBoaXMgb3duIHN0eWxlIHdhcyB2ZXJ5IGRpZmZlcmVudAoKPHBiIGlkPSJwLjczIiAvPgoKZnJvbSB0aGVpcnMsIGhlIHdhcyBhZnJhaWQgdGhhdCBoZSB3b3VsZCBmYWlsIHRvCnBsZWFzZSB0aG9zZSB3aG8gYWRtaXJlZCB0aGVtLiBCdXQgdGhlIHlvdW5nCm1lbiBsb3ZlZCBoaW0gcmF0aGVyIHRoYW4gaW1pdGF0ZWQgaGltLCBhbmQgZmVsbAphcyBmYXIgYmVsb3cgaGltIGFzIGhlIGZlbGwgYmVsb3cgdGhlIGFuY2llbnRzLjxtaWxlc3RvbmUgbj0iMTI3IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IKSSBvbmx5IHdpc2ggdGhleSBoYWQgZXF1YWxsZWQgb3IgYXQgbGVhc3QgYXBwcm9hY2hlZApoaXMgbGV2ZWwuIEJ1dCBoZSBwbGVhc2VkIHRoZW0gZm9yIGhpcyBmYXVsdHMgYWxvbmUsCmFuZCBlYWNoIGluZGl2aWR1YWwgc291Z2h0IHRvIGltaXRhdGUgc3VjaCBvZiB0aG9zZQpmYXVsdHMgYXMgbGF5IHdpdGhpbiBoaXMgY2FwYWNpdHkgdG8gcmVwcm9kdWNlOiBhbmQKdGhlbiBicm91Z2h0IHJlcHJvYWNoIG9uIGhpcyBtYXN0ZXIgYnkgYm9hc3RpbmcKdGhhdCBoZSBzcG9rZSBpbiB0aGUgZ2VudWluZSBTZW5lY2FuIG1hbm5lci4KPG1pbGVzdG9uZSBuPSIxMjgiIHVuaXQ9InNlY3Rpb24iIC8+U2VuZWNhIGhhZCBtYW55IGV4Y2VsbGVudCBxdWFsaXRpZXMsIGEgcXVpY2sgYW5kCmZlcnRpbGUgaW50ZWxsaWdlbmNlIHdpdGggZ3JlYXQgaW5kdXN0cnkgYW5kIHdpZGUKa25vd2xlZGdlLCB0aG91Z2ggYXMgcmVnYXJkcyB0aGUgbGFzdCBxdWFsaXR5IGhlCndhcyBvZnRlbiBsZWQgaW50byBlcnJvciBieSB0aG9zZSB3aG9tIGhlIGhhZAplbnRydXN0ZWQgd2l0aCB0aGUgdGFzayBvZiBpbnZlc3RpZ2F0aW5nIGNlcnRhaW4Kc3ViamVjdHMgb24gaGlzIGJlaGFsZi48bWlsZXN0b25lIG49IjEyOSIgdW5pdD0ic2VjdGlvbiIgLz4gSGUgZGVhbHQgd2l0aCBhbG1vc3QgZXZlcnkKZGVwYXJ0bWVudCBvZiBrbm93bGVkZ2U7IGZvciBzcGVlY2hlcywgcG9lbXMsCmxldHRlcnMgYW5kIGRpYWxvZ3VlcyBhbGwgY2lyY3VsYXRlIHVuZGVyIGhpcyBuYW1lLgpJbiBwaGlsb3NvcGh5IGhlIHNob3dlZCBhIGxhY2sgb2YgY3JpdGljYWwgcG93ZXIsCmJ1dCB3YXMgbm9uZSB0aGUgbGVzcyBxdWl0ZSBhZG1pcmFibGUgaW4gaGlzCmRlbnVuY2lhdGlvbnMgb2YgdmljZS4gSGlzIHdvcmtzIGNvbnRhaW4gYSBudW1iZXIKb2Ygc3RyaWtpbmcgZ2VuZXJhbCByZWZsZXhpb25zIGFuZCBtdWNoIHRoYXQgaXMKd29ydGggcmVhZGluZyBmb3IgZWRpZmljYXRpb247IGJ1dCBoaXMgc3R5bGUgaXMgZm9yCnRoZSBtb3N0IHBhcnQgY29ycnVwdCBhbmQgZXhjZWVkaW5nbHkgZGFuZ2Vyb3VzLApmb3IgdGhlIHZlcnkgcmVhc29uIHRoYXQgaXRzIHZpY2VzIGFyZSBzbyBtYW55IGFuZAphdHRyYWN0aXZlLjxtaWxlc3RvbmUgbj0iMTMwIiB1bml0PSJzZWN0aW9uIiAvPiBPbmUgY291bGQgd2lzaCB0aGF0LCB3aGlsZSBoZSByZWxpZWQgb24KaGlzIG93biBpbnRlbGxpZ2VuY2UsIGhlIGhhZCBhbGxvd2VkIGhpbXNlbGYgdG8gYmUKZ3VpZGVkIGJ5IHRoZSB0YXN0ZSBvZiBvdGhlcnMuIEZvciBpZiBoZSBoYWQgb25seQpkZXNwaXNlZCBhbGwgdW5uYXR1cmFsIGV4cHJlc3Npb25zIGFuZCBoYWQgbm90IGJlZW4Kc28gcGFzc2lvbmF0ZWx5IGZvbmQgb2YgYWxsIHRoYXQgd2FzIGluY29ycmVjdCwgaWYgaGUKaGFkIG5vdCBmZWx0IHN1Y2ggYWZmZWN0aW9uIGZvciBhbGwgdGhhdCB3YXMgaGlzIG93biwKYW5kIGhhZCBub3QgaW1wYWlyZWQgdGhlIHNvbGlkaXR5IG9mIGhpcyBtYXR0ZXIgYnkKc3RyaXZpbmcgYWZ0ZXIgZXBpZ3JhbW1hdGljIGJyZXZpdHksIGhlIHdvdWxkIGhhdmUKd29uIHRoZSBhcHByb3ZhbCBvZiB0aGUgbGVhcm5lZCBpbnN0ZWFkIG9mIHRoZQoKPHBiIGlkPSJwLjc1IiAvPgoKZW50aHVzaWFzbSBvZiBib3lzLjxtaWxlc3RvbmUgbj0iMTMxIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgZXZlbiBhcyBpdCBpcywgaGUgZGVzZXJ2ZXMKdG8gYmUgcmVhZCBieSB0aG9zZSB3aG9zZSBwb3dlcnMgaGF2ZSBiZWVuIGZvcm1lZAphbmQgZmlybWx5IG1vdWxkZWQgb24gdGhlIHN0YW5kYXJkcyBvZiBhIHNldmVyZXIKdGFzdGUsIGlmIG9ubHkgYmVjYXVzZSBoZSB3aWxsIGV4ZXJjaXNlIHRoZWlyIGNyaXRpY2FsCmZhY3VsdGllcyBpbiBkaXN0aW5ndWlzaGluZyBiZXR3ZWVuIGhpcyBtZXJpdHMgYW5kCmhpcyBkZWZlY3RzLiBGb3IsIGFzIEkgaGF2ZSBzYWlkLCB0aGVyZSBpcyBtdWNoIGluCmhpbSB3aGljaCB3ZSBtYXkgYXBwcm92ZSwgbXVjaCBldmVuIHRoYXQgd2UgbWF5CmFkbWlyZS4gT25seSB3ZSBtdXN0IGJlIGNhcmVmdWwgaW4gb3VyIHNlbGVjdGlvbjoKd291bGQgaGUgaGFkIGJlZW4gYXMgY2FyZWZ1bCBoaW1zZWxmLiBGb3IgaGlzCmdlbml1cyBkZXNlcnZlZCB0byBiZSBkZXZvdGVkIHRvIGJldHRlciBhaW1zLCBzaW5jZQp3aGF0IGl0IGRvZXMgYWN0dWFsbHkgYWltIGF0LCBpdCBzdWNjZWVkcyBpbiBhY2hpZXZpbmcuPC9wPgoKPC90cmFuc2xhdGlvbj4="
translation['10.2.123'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjMiIHVuaXQ9InNlY3Rpb24iIC8+SSBoYXZlIHN0aWxsIHRvIGRlYWwgd2l0aCB3cml0ZXJzIG9uIHBoaWxvc29waHksCm9mIHdob20gUm9tZSBoYXMgc28gZmFyIHByb2R1Y2VkIGJ1dCBmZXcgd2hvIGFyZQpkaXN0aW5ndWlzaGVkIGZvciB0aGVpciBzdHlsZS4gQnV0IENpY2Vybywgd2hvIGlzCmdyZWF0IGluIGV2ZXJ5IGRlcGFydG1lbnQgb2YgbGl0ZXJhdHVyZSwgc3RhbmRzIG91dAphcyB0aGUgcml2YWwgb2YgUGxhdG8gaW4gdGhpcyBkZXBhcnRtZW50IGFzIHdlbGwuCkJydXR1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5CcnV0dXMsIG9taXR0ZWQgZnJvbSBRYXVpbnRpbGlhbidzIGxpc3Qgb2Ygb3JhdG9ycywgd2FzIGEKZm9sbG93ZXIgb2YgdGhlIFN0b2ljIGFuZCBBY2FkZW1pYyBzY2hvb2xzLiBIZSBpcyBrbm93bgp0byBoYXZlIHdyaXR0ZW4gdHJlYXRpc2VzIG9uIFZpcnR1ZSwgRHV0eSBhbmQgUGF0aWVuY2UuPC9ub3RlPiB3YXMgYW4gYWRtaXJhYmxlIHdyaXRlciBvbiBzdWNoIHRoZW1lcywgaW4Kd2hpY2ggaGUgZGlzdGluZ3Vpc2hlZCBoaW1zZWxmIGZhciBtb3JlIHRoYW4gaW4gaGlzCnNwZWVjaGVzOiBoZSBpcyBlcXVhbCB0byB0aGUgc2VyaW91cyBuYXR1cmUgb2YgaGlzCnN1YmplY3QsIGFuZCB0aGUgcmVhZGVyIHJlYWxpc2VzIHRoYXQgaGUgZmVlbHMgd2hhdApoZSBzYXlzLjwvdHJhbnNsYXRpb24+"
translation['10.2.124'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjQiIHVuaXQ9InNlY3Rpb24iIC8+IENvcm5lbGl1cyBDZWxzdXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkFuIGVuY3ljbG9wZWRpYyB3cml0ZXIgdW5kZXIgQXVndXN0dXMgYW5kIFRpYmVyaXVzLgpIaXMgbWVkaWNhbCB0cmVhdGlzZXMgaGF2ZSBzdXJ2aXZlZC4gSGUgd3JvdGUgb24gb3JhdG9yeQphbHNvLCBhbmQgaXMgbm90IGluZnJlcXVlbnRseSBxdW90ZWQgYnkgUXVpbnRpbGlhbi48L25vdGU+IGEgZm9sbG93ZXIgb2YgdGhlIFNleHRpaSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlIFNleHRpaSwgZmF0aGVyIGFuZCBzb24sIHdlcmUgUHl0aGFnb3JlYW4gcGhpbG9zb3BoZXJzIG9mIHRoZSBBdWd1c3RhbiBhZ2UsIHdpdGggc29tZXRoaW5nIG9mIGEgU3RvaWMKdGVuZGVuY3kgYXMgd2VsbC48L25vdGU+Cndyb3RlIGEgbnVtYmVyIG9mIHBoaWxvc29waGljYWwgd29ya3MsIHdoaWNoIGhhdmUKY29uc2lkZXJhYmxlIGdyYWNlIGFuZCBwb2xpc2guIEFtb25nIHRoZSBTdG9pY3MKUGxhdXR1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj4xMjM8L25vdGU+IGlzIHVzZWZ1bCBhcyBnaXZpbmcgYSBrbm93bGVkZ2Ugb2YgdGhlCnN1YmplY3QuPC90cmFuc2xhdGlvbj4="
translation['10.2.125'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjUiIHVuaXQ9InNlY3Rpb24iIC8+IEFtb25nIHRoZSBFcGljdXJlYW5zIENhdGl1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5BIGNvbnRlbXBvcmFyeSBvZiBDaWNlcm8sIHdobyBzcGVha3Mgb2YgaGltIHNvbWV3aGF0CmNvbnRlbXB0dW91c2x5LiBIZSB3cm90ZSBmb3VyIGJvb2tzIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIHJlcnVtIG1hdHVyYSBldApkZSBzdW1tbyBib25vLjwvaGk+PC9ub3RlPiBpcyBhZ3JlZWFibGUgdG8gcmVhZCwgdGhvdWdoIGxhY2tpbmcgaW4gd2VpZ2h0LiBJIGhhdmUKZGVsaWJlcmF0ZWx5IHBvc3Rwb25lZCB0aGUgZGlzY3Vzc2lvbiBvZiBTZW5lY2EgaW4KY29ubmV4aW9uIHdpdGggdGhlIHZhcmlvdXMgZGVwYXJ0bWVudHMgb2YgbGl0ZXJhdHVyZQpvd2luZyB0byB0aGUgZmFjdCB0aGF0IHRoZXJlIGlzIGEgZ2VuZXJhbCwgdGhvdWdoCmZhbHNlLCBpbXByZXNzaW9uIHRoYXQgSSBjb25kZW1uIGFuZCBldmVuIGRldGVzdApoaW0uIEl0IGlzIHRydWUgdGhhdCBJIGhhZCBvY2Nhc2lvbiB0byBwYXNzIGNlbnN1cmUgdXBvbiBoaW0gd2hlbiBJIHdhcyBlbmRlYXZvdXJpbmcgdG8gcmVjYWxsCnN0dWRlbnRzIGZyb20gYSBkZXByYXZlZCBzdHlsZSwgd2Vha2VuZWQgYnkgZXZlcnkKa2luZCBvZiBlcnJvciwgdG8gYSBzZXZlcmVyIHN0YW5kYXJkIG9mIHRhc3RlLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIHJlcnVtIG1hdHVyYSBldApkZSBzdW1tbyBib25vLjwvaGk+PC90cmFuc2xhdGlvbj4="
translation['10.2.126'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjYiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dAphdCB0aGF0IHRpbWUgU2VuZWNhJ3Mgd29ya3Mgd2VyZSBpbiB0aGUgaGFuZHMKb2YgZXZlcnkgeW91bmcgbWFuLCBhbmQgbXkgYWltIHdhcyBub3QgdG8gYmFuIGhpcwpyZWFkaW5nIGFsdG9nZXRoZXIsIGJ1dCB0byBwcmV2ZW50IGhpcyBiZWluZyBwcmVmZXJyZWQgdG8gYXV0aG9ycyBzdXBlcmlvciB0byBoaW1zZWxmLCBidXQgd2hvbSBoZQp3YXMgbmV2ZXIgdGlyZWQgb2YgZGlzcGFyYWdpbmc7IGZvciwgYmVpbmcgY29uc2Npb3VzCm9mIHRoZSBmYWN0IHRoYXQgaGlzIG93biBzdHlsZSB3YXMgdmVyeSBkaWZmZXJlbnQKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjczIiAvPgoKZnJvbSB0aGVpcnMsIGhlIHdhcyBhZnJhaWQgdGhhdCBoZSB3b3VsZCBmYWlsIHRvCnBsZWFzZSB0aG9zZSB3aG8gYWRtaXJlZCB0aGVtLiBCdXQgdGhlIHlvdW5nCm1lbiBsb3ZlZCBoaW0gcmF0aGVyIHRoYW4gaW1pdGF0ZWQgaGltLCBhbmQgZmVsbAphcyBmYXIgYmVsb3cgaGltIGFzIGhlIGZlbGwgYmVsb3cgdGhlIGFuY2llbnRzLjwvdHJhbnNsYXRpb24+"
translation['10.2.127'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjciIHVuaXQ9InNlY3Rpb24iIC8+IEZvcgpJIG9ubHkgd2lzaCB0aGV5IGhhZCBlcXVhbGxlZCBvciBhdCBsZWFzdCBhcHByb2FjaGVkCmhpcyBsZXZlbC4gQnV0IGhlIHBsZWFzZWQgdGhlbSBmb3IgaGlzIGZhdWx0cyBhbG9uZSwKYW5kIGVhY2ggaW5kaXZpZHVhbCBzb3VnaHQgdG8gaW1pdGF0ZSBzdWNoIG9mIHRob3NlCmZhdWx0cyBhcyBsYXkgd2l0aGluIGhpcyBjYXBhY2l0eSB0byByZXByb2R1Y2U6IGFuZAp0aGVuIGJyb3VnaHQgcmVwcm9hY2ggb24gaGlzIG1hc3RlciBieSBib2FzdGluZwp0aGF0IGhlIHNwb2tlIGluIHRoZSBnZW51aW5lIFNlbmVjYW4gbWFubmVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.2.128'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjgiIHVuaXQ9InNlY3Rpb24iIC8+U2VuZWNhIGhhZCBtYW55IGV4Y2VsbGVudCBxdWFsaXRpZXMsIGEgcXVpY2sgYW5kCmZlcnRpbGUgaW50ZWxsaWdlbmNlIHdpdGggZ3JlYXQgaW5kdXN0cnkgYW5kIHdpZGUKa25vd2xlZGdlLCB0aG91Z2ggYXMgcmVnYXJkcyB0aGUgbGFzdCBxdWFsaXR5IGhlCndhcyBvZnRlbiBsZWQgaW50byBlcnJvciBieSB0aG9zZSB3aG9tIGhlIGhhZAplbnRydXN0ZWQgd2l0aCB0aGUgdGFzayBvZiBpbnZlc3RpZ2F0aW5nIGNlcnRhaW4Kc3ViamVjdHMgb24gaGlzIGJlaGFsZi48L3RyYW5zbGF0aW9uPg=="
translation['10.2.129'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjkiIHVuaXQ9InNlY3Rpb24iIC8+IEhlIGRlYWx0IHdpdGggYWxtb3N0IGV2ZXJ5CmRlcGFydG1lbnQgb2Yga25vd2xlZGdlOyBmb3Igc3BlZWNoZXMsIHBvZW1zLApsZXR0ZXJzIGFuZCBkaWFsb2d1ZXMgYWxsIGNpcmN1bGF0ZSB1bmRlciBoaXMgbmFtZS4KSW4gcGhpbG9zb3BoeSBoZSBzaG93ZWQgYSBsYWNrIG9mIGNyaXRpY2FsIHBvd2VyLApidXQgd2FzIG5vbmUgdGhlIGxlc3MgcXVpdGUgYWRtaXJhYmxlIGluIGhpcwpkZW51bmNpYXRpb25zIG9mIHZpY2UuIEhpcyB3b3JrcyBjb250YWluIGEgbnVtYmVyCm9mIHN0cmlraW5nIGdlbmVyYWwgcmVmbGV4aW9ucyBhbmQgbXVjaCB0aGF0IGlzCndvcnRoIHJlYWRpbmcgZm9yIGVkaWZpY2F0aW9uOyBidXQgaGlzIHN0eWxlIGlzIGZvcgp0aGUgbW9zdCBwYXJ0IGNvcnJ1cHQgYW5kIGV4Y2VlZGluZ2x5IGRhbmdlcm91cywKZm9yIHRoZSB2ZXJ5IHJlYXNvbiB0aGF0IGl0cyB2aWNlcyBhcmUgc28gbWFueSBhbmQKYXR0cmFjdGl2ZS48L3RyYW5zbGF0aW9uPg=="
translation['10.2.130'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzAiIHVuaXQ9InNlY3Rpb24iIC8+IE9uZSBjb3VsZCB3aXNoIHRoYXQsIHdoaWxlIGhlIHJlbGllZCBvbgpoaXMgb3duIGludGVsbGlnZW5jZSwgaGUgaGFkIGFsbG93ZWQgaGltc2VsZiB0byBiZQpndWlkZWQgYnkgdGhlIHRhc3RlIG9mIG90aGVycy4gRm9yIGlmIGhlIGhhZCBvbmx5CmRlc3Bpc2VkIGFsbCB1bm5hdHVyYWwgZXhwcmVzc2lvbnMgYW5kIGhhZCBub3QgYmVlbgpzbyBwYXNzaW9uYXRlbHkgZm9uZCBvZiBhbGwgdGhhdCB3YXMgaW5jb3JyZWN0LCBpZiBoZQpoYWQgbm90IGZlbHQgc3VjaCBhZmZlY3Rpb24gZm9yIGFsbCB0aGF0IHdhcyBoaXMgb3duLAphbmQgaGFkIG5vdCBpbXBhaXJlZCB0aGUgc29saWRpdHkgb2YgaGlzIG1hdHRlciBieQpzdHJpdmluZyBhZnRlciBlcGlncmFtbWF0aWMgYnJldml0eSwgaGUgd291bGQgaGF2ZQp3b24gdGhlIGFwcHJvdmFsIG9mIHRoZSBsZWFybmVkIGluc3RlYWQgb2YgdGhlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC43NSIgLz4KCmVudGh1c2lhc20gb2YgYm95cy48L3RyYW5zbGF0aW9uPg=="
translation['10.2.131'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzEiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCBldmVuIGFzIGl0IGlzLCBoZSBkZXNlcnZlcwp0byBiZSByZWFkIGJ5IHRob3NlIHdob3NlIHBvd2VycyBoYXZlIGJlZW4gZm9ybWVkCmFuZCBmaXJtbHkgbW91bGRlZCBvbiB0aGUgc3RhbmRhcmRzIG9mIGEgc2V2ZXJlcgp0YXN0ZSwgaWYgb25seSBiZWNhdXNlIGhlIHdpbGwgZXhlcmNpc2UgdGhlaXIgY3JpdGljYWwKZmFjdWx0aWVzIGluIGRpc3Rpbmd1aXNoaW5nIGJldHdlZW4gaGlzIG1lcml0cyBhbmQKaGlzIGRlZmVjdHMuIEZvciwgYXMgSSBoYXZlIHNhaWQsIHRoZXJlIGlzIG11Y2ggaW4KaGltIHdoaWNoIHdlIG1heSBhcHByb3ZlLCBtdWNoIGV2ZW4gdGhhdCB3ZSBtYXkKYWRtaXJlLiBPbmx5IHdlIG11c3QgYmUgY2FyZWZ1bCBpbiBvdXIgc2VsZWN0aW9uOgp3b3VsZCBoZSBoYWQgYmVlbiBhcyBjYXJlZnVsIGhpbXNlbGYuIEZvciBoaXMKZ2VuaXVzIGRlc2VydmVkIHRvIGJlIGRldm90ZWQgdG8gYmV0dGVyIGFpbXMsIHNpbmNlCndoYXQgaXQgZG9lcyBhY3R1YWxseSBhaW0gYXQsIGl0IHN1Y2NlZWRzIGluIGFjaGlldmluZy48cCBjbGFzcz0idHJhbnNsYXRpb24iPklJLiBJdCBpcyBmcm9tIHRoZXNlIGFuZCBvdGhlciBhdXRob3JzIHdvcnRoeSBvZgpvdXIgc3R1ZHkgdGhhdCB3ZSBtdXN0IGRyYXcgb3VyIHN0b2NrIG9mIHdvcmRzLCB0aGUKdmFyaWV0eSBvZiBvdXIgZmlndXJlcyBhbmQgb3VyIG1ldGhvZHMgb2YgY29tcG9zaXRpb24sCndoaWxlIHdlIG11c3QgZm9ybSBvdXIgbWluZHMgb24gdGhlIG1vZGVsIG9mIGV2ZXJ5CmV4Y2VsbGVuY2UuIEZvciB0aGVyZSBjYW4gYmUgbm8gZG91YnQgdGhhdCBpbiBhcnQKbm8gc21hbGwgcG9ydGlvbiBvZiBvdXIgdGFzayBsaWVzIGluIGltaXRhdGlvbiwgc2luY2UsCmFsdGhvdWdoIGludmVudGlvbiBjYW1lIGZpcnN0IGFuZCBpcyBhbGwtaW1wb3J0YW50LCBpdAppcyBleHBlZGllbnQgdG8gaW1pdGF0ZSB3aGF0ZXZlciBoYXMgYmVlbiBpbnZlbnRlZAp3aXRoIHN1Y2Nlc3MuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIiIHVuaXQ9InNlY3Rpb24iIC8+IEFuZCBpdCBpcyBhIHVuaXZlcnNhbCBydWxlIG9mIGxpZmUgdGhhdAp3ZSBzaG91bGQgd2lzaCB0byBjb3B5IHdoYXQgd2UgYXBwcm92ZSBpbiBvdGhlcnMuCkl0IGlzIGZvciB0aGlzIHJlYXNvbiB0aGF0IGJveXMgY29weSB0aGUgc2hhcGVzIG9mCmxldHRlcnMgdGhhdCB0aGV5IG1heSBsZWFybiB0byB3cml0ZSwgYW5kIHRoYXQKbXVzaWNpYW5zIHRha2UgdGhlIHZvaWNlcyBvZiB0aGVpciB0ZWFjaGVycywgcGFpbnRlcnMKdGhlIHdvcmtzIG9mIHRoZWlyIHByZWRlY2Vzc29ycywgYW5kIHBlYXNhbnRzIHRoZQpwcmluY2lwbGVzIG9mIGFncmljdWx0dXJlIHdoaWNoIGhhdmUgYmVlbiBwcm92ZWQgaW4KcHJhY3RpY2UsIGFzIG1vZGVscyBmb3IgdGhlaXIgaW1pdGF0aW9uLiBJbiBmYWN0LCB3ZQptYXkgbm90ZSB0aGF0IHRoZSBlbGVtZW50YXJ5IHN0dWR5IG9mIGV2ZXJ5IGJyYW5jaApvZiBsZWFybmluZyBpcyBkaXJlY3RlZCBieSByZWZlcmVuY2UgdG8gc29tZSBkZWZpbml0ZQpzdGFuZGFyZCB0aGF0IGlzIHBsYWNlZCBiZWZvcmUgdGhlIGxlYXJuZXIuPG1pbGVzdG9uZSBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBXZQptdXN0LCBpbiBmYWN0LCBlaXRoZXIgYmUgbGlrZSBvciB1bmxpa2UgdGhvc2Ugd2hvCmhhdmUgcHJvdmVkIHRoZWlyIGV4Y2VsbGVuY2UuIEl0IGlzIHJhcmUgZm9yIG5hdHVyZQp0byBwcm9kdWNlIHN1Y2ggcmVzZW1ibGFuY2UsIHdoaWNoIGlzIG1vcmUgb2Z0ZW4KdGhlIHJlc3VsdCBvZiBpbWl0YXRpb24uIEJ1dCB0aGUgdmVyeSBmYWN0IHRoYXQgaW4KCjxwYiBpZD0icC43NyIgLz4KCmV2ZXJ5IHN1YmplY3QgdGhlIHByb2NlZHVyZSB0byBiZSBmb2xsb3dlZCBpcyBzbwptdWNoIG1vcmUgZWFzeSBmb3IgdXMgdGhhbiBpdCB3YXMgZm9yIHRob3NlIHdobwpoYWQgbm8gbW9kZWwgdG8gZ3VpZGUgdGhlbSwgaXMgYSBwb3NpdGl2ZSBkcmF3YmFjaywKdW5sZXNzIHdlIHVzZSB0aGlzIGR1YmlvdXMgYWR2YW50YWdlIHdpdGggY2F1dGlvbgphbmQganVkZ21lbnQuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['10.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBBbmQgaXQgaXMgYSB1bml2ZXJzYWwgcnVsZSBvZiBsaWZlIHRoYXQKd2Ugc2hvdWxkIHdpc2ggdG8gY29weSB3aGF0IHdlIGFwcHJvdmUgaW4gb3RoZXJzLgpJdCBpcyBmb3IgdGhpcyByZWFzb24gdGhhdCBib3lzIGNvcHkgdGhlIHNoYXBlcyBvZgpsZXR0ZXJzIHRoYXQgdGhleSBtYXkgbGVhcm4gdG8gd3JpdGUsIGFuZCB0aGF0Cm11c2ljaWFucyB0YWtlIHRoZSB2b2ljZXMgb2YgdGhlaXIgdGVhY2hlcnMsIHBhaW50ZXJzCnRoZSB3b3JrcyBvZiB0aGVpciBwcmVkZWNlc3NvcnMsIGFuZCBwZWFzYW50cyB0aGUKcHJpbmNpcGxlcyBvZiBhZ3JpY3VsdHVyZSB3aGljaCBoYXZlIGJlZW4gcHJvdmVkIGluCnByYWN0aWNlLCBhcyBtb2RlbHMgZm9yIHRoZWlyIGltaXRhdGlvbi4gSW4gZmFjdCwgd2UKbWF5IG5vdGUgdGhhdCB0aGUgZWxlbWVudGFyeSBzdHVkeSBvZiBldmVyeSBicmFuY2gKb2YgbGVhcm5pbmcgaXMgZGlyZWN0ZWQgYnkgcmVmZXJlbmNlIHRvIHNvbWUgZGVmaW5pdGUKc3RhbmRhcmQgdGhhdCBpcyBwbGFjZWQgYmVmb3JlIHRoZSBsZWFybmVyLjwvdHJhbnNsYXRpb24+"
translation['10.2.3'] = ""
translation['10.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBmaXJzdCBwb2ludCwgdGhlbiwgdGhhdCB3ZSBtdXN0IHJlYWxpc2UgaXMgdGhhdAppbWl0YXRpb24gYWxvbmUgaXMgbm90IHN1ZmZpY2llbnQsIGlmIG9ubHkgZm9yIHRoZSByZWFzb24KdGhhdCBhIHNsdWdnaXNoIG5hdHVyZSBpcyBvbmx5IHRvbyByZWFkeSB0byByZXN0CmNvbnRlbnQgd2l0aCB0aGUgaW52ZW50aW9ucyBvZiBvdGhlcnMuIEZvciB3aGF0CndvdWxkIGhhdmUgaGFwcGVuZWQgaW4gdGhlIGRheXMgd2hlbiBtb2RlbHMgd2VyZQpub3QsIGlmIG1lbiBoYWQgZGVjaWRlZCB0byBkbyBhbmQgdGhpbmsgb2Ygbm90aGluZwp0aGF0IHRoZXkgZGlkIG5vdCBrbm93IGFscmVhZHk/IFRoZSBhbnN3ZXIgaXMKb2J2aW91czogbm90aGluZyB3b3VsZCBldmVyIGhhdmUgYmVlbiBkaXNjb3ZlcmVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['10.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPldoeSwgdGhlbiwgaXMgaXQgYSBjcmltZSBmb3IgdXMgdG8gZGlzY292ZXIgc29tZXRoaW5nCm5ldz8gV2VyZSBwcmltaXRpdmUgbWVuIGxlZCB0byBtYWtlIHNvIG1hbnkKZGlzY292ZXJpZXMgc2ltcGx5IGJ5IHRoZSBuYXR1cmFsIGZvcmNlIG9mIHRoZWlyCmltYWdpbmF0aW9uLCBhbmQgc2hhbGwgd2Ugbm90IHRoZW4gYmUgc3B1cnJlZCBvbiB0bwpzZWFyY2ggZm9yIG5vdmVsdHkgYnkgdGhlIHZlcnkga25vd2xlZGdlIHRoYXQgdGhvc2UKd2hvIHNvdWdodCBvZiBvbGQgd2VyZSByZXdhcmRlZCBieSBzdWNjZXNzPzwvdHJhbnNsYXRpb24+"
translation['10.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBBbmQKc2VlaW5nIHRoYXQgdGhleSwgd2hvIGhhZCBub25lIHRvIHRlYWNoIHRoZW0gYW55dGhpbmcsIGhhdmUgaGFuZGVkIGRvd24gc3VjaCBzdG9yZSBvZiBrbm93bGVkZ2UKdG8gcG9zdGVyaXR5LCBzaGFsbCB3ZSByZWZ1c2UgdG8gZW1wbG95IHRoZSBleHBlcmllbmNlCndoaWNoIHdlIHBvc3Nlc3Mgb2Ygc29tZSB0aGluZ3MsIHRvIGRpc2NvdmVyIHlldApvdGhlciB0aGluZ3MsIGFuZCBwb3NzZXNzIG5vdWdodCB0aGF0IGlzIG5vdCBvd2VkIHRvCnRoZSBiZW5lZmljZW50IGFjdGl2aXR5IG9mIG90aGVycz8gU2hhbGwgd2UgZm9sbG93CnRoZSBleGFtcGxlIG9mIHRob3NlIHBhaW50ZXJzIHdob3NlIHNvbGUgYWltIGlzIHRvCmJlIGFibGUgdG8gY29weSBwaWN0dXJlcyBieSB1c2luZyB0aGUgcnVsZXIgYW5kIHRoZQptZWFzdXJpbmcgcm9kPzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGUgcmVmZXJlbmNlIGlzIHRvIGNvcHlpbmcgYnkgZGl2aWRpbmcgdGhlIHN1cmZhY2Ugb2YKdGhlIHBpY3R1cmUgdG8gYmUgY29waWVkLCBhbmQgb2YgdGhlIG1hdGVyaWFsIG9uIHdoaWNoIHRoZQpjb3B5IGlzIHRvIGJlIG1hZGUsIGludG8gYSBudW1iZXIgb2YgZXF1YWwgc3F1YXJlcy48L25vdGU+PC90cmFuc2xhdGlvbj4="
translation['10.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBJdCBpcyBhIHBvc2l0aXZlIGRpc2dyYWNlIHRvIGJlCmNvbnRlbnQgdG8gb3dlIGFsbCBvdXIgYWNoaWV2ZW1lbnQgdG8gaW1pdGF0aW9uLgpGb3Igd2hhdCwgSSBhc2sgYWdhaW4sIHdvdWxkIGhhdmUgYmVlbiB0aGUgcmVzdWx0CmlmIG5vIG9uZSBoYWQgZG9uZSBtb3JlIHRoYW4gaGlzIHByZWRlY2Vzc29ycz8KTGl2aXVzIEFuZHJvbmljdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+TGl2aXVzIEFuZHJvbmljdXMsIGEgc2xhdmUgZnJvbSBUYXJlb3R1bSwgd2FzIHRoZQpmb3VuZGVyIG9mIExhdGluIHBvZXRyeS4gSGUgdHJhbnNsYXRlZCB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T2R5c3NleSw8L2hpPiBhbmQKcHJvZHVjZWQgdGhlIGZpcnN0IExhdGluIGNvbWVkeSBhbmQgdHJhZ2VkeSBjb21wb3NlZCBpbgpHcmVlayBtZXRyZXMgKDI0MCBCLkMuKTwvbm90ZT4gd291bGQgbWFyayBvdXIgc3VwcmVtZQphY2hpZXZlbWVudCBpbiBwb2V0cnkgYW5kIHRoZSBhbm5hbHMgb2YgdGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPk9keXNzZXksPC9oaT4gYW5kCnByb2R1Y2VkIHRoZSBmaXJzdCBMYXRpbiBjb21lZHkgYW5kIHRyYWdlZHkgY29tcG9zZWQgaW4KR3JlZWsgbWV0cmVzICgyNDAgQi5DLik8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Qb250aWZpY2VzPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlIEFubmFsZXMgTWF4aW1pIGtlcHQgYnkgdGhlIFBvbnRpZmV4IE1heGltdXMsCmNvbnRhaW5pbmcgdGhlIGxpc3Qgb2YgdGhlIGNvbnN1bCBhbmQgZ2l2aW5nIGEgY3VydCBzdW1tYXJ5Cm9mIHRoZSBldmVudHMgb2YgZWFjaCBjb25zdWxhdGUuPC9ub3RlPiB3b3VsZCBiZSBvdXIgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+bmUgcGx1cyB1bHRyYTwvaGk+IGluIGhpc3RvcnkuIFdlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC43OSIgLz4KCnNob3VsZCBzdGlsbCBiZSBzYWlsaW5nIG9uIHJhZnRzLCBhbmQgdGhlIGFydCBvZiBwYWludGluZwp3b3VsZCBiZSByZXN0cmljdGVkIHRvIHRyYWNpbmcgYSBsaW5lIHJvdW5kIGEgc2hhZG93CnRocm93biBpbiB0aGUgc3VubGlnaHQuPC90cmFuc2xhdGlvbj4="
translation['10.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiBDYXN0IHlvdXIgZXllcyBvdmVyIHRoZQp3aG9sZSBvZiBoaXN0b3J5OyB5b3Ugd2lsbCBmaW5kIHRoYXQgbm8gYXJ0IGhhcwpyZW1haW5lZCBqdXN0IGFzIGl0IHdhcyB3aGVuIGl0IHdhcyBkaXNjb3ZlcmVkLCBub3IKY29tZSB0byBhIHN0YW5kc3RpbGwgYXQgaXRzIHZlcnkgYmlydGgsIHVubGVzcyBpbmRlZWQKd2UgYXJlIHJlYWR5IHRvIHBhc3Mgc3BlY2lhbCBjb25kZW5zYXRpb24gb24gb3VyCm93biBnZW5lcmF0aW9uIG9uIHRoZSBncm91bmQgdGhhdCBpdCBpcyBzbyBiYXJyZW4gb2YKaW52ZW50aW9uIHRoYXQgbm8gZnVydGhlciBkZXZlbG9wbWVudCBpcyBwb3NzaWJsZTsKYW5kIGl0IGlzIHVuZG91YnRlZGx5IHRydWUgdGhhdCBubyBkZXZlbG9wbWVudCBpcwpwb3NzaWJsZSBmb3IgdGhvc2Ugd2hvIHJlc3RyaWN0IHRoZW1zZWx2ZXMgdG8gaW1pdGF0aW9uLjwvdHJhbnNsYXRpb24+"
translation['10.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgaWYgd2UgYXJlIGZvcmJpZGRlbiB0byBhZGQgYW55dGhpbmcgdG8KdGhlIGV4aXN0aW5nIHN0b2NrIG9mIGtub3dsZWRnZSwgaG93IGNhbiB3ZSBldmVyCmhvcGUgZm9yIHRoZSBiaXJ0aCBvZiBvdXIgaWRlYWwgb3JhdG9yPyBGb3Igb2YgYWxsCnRoZSBncmVhdGVzdCBvcmF0b3JzIHdpdGggd2hvbSB3ZSBhcmUgYXMgeWV0IGFjcXVhaW50ZWQsIHRoZXJlIGlzIG5vdCBvbmUgd2hvIGhhcyBub3Qgc29tZQpkZWZpY2llbmN5IG9yIGJsZW1pc2guIEFuZCBldmVuIHRob3NlIHdobyBkbwpub3QgYWltIGF0IHN1cHJlbWUgZXhjZWxsZW5jZSwgb3VnaHQgdG8gcHJlc3MKdG93YXJkIHRoZSBtYXJrIHJhdGhlciB0aGFuIGJlIGNvbnRlbnQgdG8gZm9sbG93CmluIHRoZSB0cmFja3Mgb2Ygb3RoZXJzLjwvdHJhbnNsYXRpb24+"
translation['10.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZSBtYW4gd2hvc2UgYWltCmlzIHRvIHByb3ZlIGhpbXNlbGYgYmV0dGVyIHRoYW4gYW5vdGhlciwgZXZlbiBpZiBoZQpkb2VzIG5vdCBzdXJwYXNzIGhpbSwgbWF5IGhvcGUgdG8gZXF1YWwgaGltLiBCdXQKaGUgY2FuIG5ldmVyIGhvcGUgdG8gZXF1YWwgaGltLCBpZiBoZSB0aGlua3MgaXQgaGlzCmR1dHkgbWVyZWx5IHRvIHRyZWFkIGluIGhpcyBmb290c3RlcHM6IGZvciB0aGUgbWVyZQpmb2xsb3dlciBtdXN0IGFsd2F5cyBsYWcgYmVoaW5kLiBGdXJ0aGVyLCBpdCBpcwpnZW5lcmFsbHkgZWFzaWVyIHRvIG1ha2Ugc29tZSBhZHZhbmNlIHRoYW4gdG8KcmVwZWF0IHdoYXQgaGFzIGJlZW4gZG9uZSBieSBvdGhlcnMsIHNpbmNlIHRoZXJlCmlzIG5vdGhpbmcgaGFyZGVyIHRoYW4gdG8gcHJvZHVjZSBhbiBleGFjdCBsaWtlbmVzcywKYW5kIG5hdHVyZSBoZXJzZWxmIGhhcyBzbyBmYXIgZmFpbGVkIGluIHRoaXMgZW5kZWF2b3VyCnRoYXQgdGhlcmUgaXMgYWx3YXlzIHNvbWUgZGlmZmVyZW5jZSB3aGljaCBlbmFibGVzCnVzIHRvIGRpc3Rpbmd1aXNoIGV2ZW4gdGhlIHRoaW5ncyB3aGljaCBzZWVtIG1vc3QKbGlrZSBhbmQgbW9zdCBlcXVhbCB0byBvbmUgYW5vdGhlci48L3RyYW5zbGF0aW9uPg=="
translation['10.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIHdoYXRldmVyIGlzIGxpa2UgYW5vdGhlciBvYmplY3QsIG11c3QgbmVjZXNzYXJpbHkgYmUKaW5mZXJpb3IgdG8gdGhlIG9iamVjdCBvZiBpdHMgaW1pdGF0aW9uLCBqdXN0IGFzIHRoZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuODEiIC8+CgpzaGFkb3cgaXMgaW5mZXJpb3IgdG8gdGhlIHN1YnN0YW5jZSwgdGhlIHBvcnRyYWl0IHRvCnRoZSBmZWF0dXJlcyB3aGljaCBpdCBwb3J0cmF5cywgYW5kIHRoZSBhY3Rpbmcgb2YgdGhlCnBsYXllciB0byB0aGUgZmVlbGluZ3Mgd2hpY2ggaGUgZW5kZWF2b3VycyB0byByZXByb2R1Y2UuIFRoZSBzYW1lIGlzIHRydWUgb2Ygb3JhdG9yeS4gRm9yIHRoZSBtb2RlbHMKd2hpY2ggd2Ugc2VsZWN0IGZvciBpbWl0YXRpb24gaGF2ZSBhIGdlbnVpbmUgYW5kCm5hdHVyYWwgZm9yY2UsIHdoZXJlYXMgYWxsIGltaXRhdGlvbiBpcyBhcnRpZmljaWFsIGFuZAptb3VsZGVkIHRvIGEgcHVycG9zZSB3aGljaCB3YXMgbm90IHRoYXQgb2YgdGhlCm9yaWdpbmFsIG9yYXRvci48L3RyYW5zbGF0aW9uPg=="
translation['10.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gVGhpcyBpcyB0aGUgcmVhc29uIHdoeSBkZWNsYW1hdGlvbnMKaGF2ZSBsZXNzIGxpZmUgYW5kIHZpZ291ciB0aGFuIGFjdHVhbCBzcGVlY2hlcywgc2luY2UKdGhlIHN1YmplY3QgaXMgZmljdGl0aW91cyBpbiB0aGUgb25lIGFuZCByZWFsIGluIHRoZQpvdGhlci4gQWdhaW4sIHRoZSBncmVhdGVzdCBxdWFsaXRpZXMgb2YgdGhlIG9yYXRvcgphcmUgYmV5b25kIGFsbCBpbWl0YXRpb24sIGJ5IHdoaWNoIEkgbWVhbiwgdGFsZW50LAppbnZlbnRpb24sIGZvcmNlLCBmYWNpbGl0eSBhbmQgYWxsIHRoZSBxdWFsaXRpZXMgd2hpY2gKYXJlIGluZGVwZW5kZW50IG9mIGFydC48L3RyYW5zbGF0aW9uPg=="
translation['10.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gQ29uc2VxdWVudGx5LCB0aGVyZSBhcmUKbWFueSB3aG8sIGFmdGVyIGV4Y2VycHRpbmcgY2VydGFpbiB3b3JkcyBmcm9tCnB1Ymxpc2hlZCBzcGVlY2hlcyBvciBib3Jyb3dpbmcgY2VydGFpbiBwYXJ0aWN1bGFyCnJoeXRobXMsIHRoaW5rIHRoYXQgdGhleSBoYXZlIHByb2R1Y2VkIGEgcGVyZmVjdApjb3B5IG9mIHRoZSB3b3JrcyB3aGljaCB0aGV5IGhhdmUgcmVhZCwgZGVzcGl0ZQp0aGUgZmFjdCB0aGF0IHdvcmRzIGJlY29tZSBvYnNvbGV0ZSBvciBjdXJyZW50CndpdGggdGhlIGxhcHNlIG9mIHllYXJzLCB0aGUgb25lIHN1cmUgc3RhbmRhcmQgYmVpbmcKY29udGVtcG9yYXJ5IHVzYWdlOyBhbmQgdGhleSBhcmUgbm90IGdvb2Qgb3IKYmFkIGluIHZpcnR1ZSBvZiB0aGVpciBpbmhlcmVudCBuYXR1cmUgKGZvciBpbiB0aGVtc2VsdmVzIHRoZXkgYXJlIG5vIG1vcmUgdGhhbiBtZXJlIHNvdW5kcyksIGJ1dApzb2xlbHkgaW4gdmlydHVlIG9mIHRoZSBhcHRpdHVkZSBhbmQgcHJvcHJpZXR5IChvcgp0aGUgcmV2ZXJzZSkgd2l0aCB3aGljaCB0aGV5IGFyZSBhcnJhbmdlZCwgd2hpbGUKcmh5dGhtaWNhbCBjb21wb3NpdGlvbiBtdXN0IGJlIGFkYXB0ZWQgdG8gdGhlCnRoZW1lIGluIGhhbmQgYW5kIHdpbGwgZGVyaXZlIGl0cyBtYWluIGNoYXJtIGZyb20KaXRzIHZhcmlldHkuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTQiIHVuaXQ9InNlY3Rpb24iIC8+Q29uc2VxdWVudGx5IHRoZSBuaWNlc3QganVkZ21lbnQgaXMgcmVxdWlyZWQgaW4KdGhlIGV4YW1pbmF0aW9uIG9mIGV2ZXJ5dGhpbmcgY29ubmVjdGVkIHdpdGggdGhpcwpkZXBhcnRtZW50IG9mIHN0dWR5LiBGaXJzdCB3ZSBtdXN0IGNvbnNpZGVyIHdob20KdG8gaW1pdGF0ZS4gRm9yIHRoZXJlIGFyZSBtYW55IHdobyBoYXZlIHNob3duIGEKcGFzc2lvbmF0ZSBkZXNpcmUgdG8gaW1pdGF0ZSB0aGUgd29yc3QgYW5kIG1vc3QKZGVjYWRlbnQgYXV0aG9ycy4gU2Vjb25kbHksIHdlIG11c3QgY29uc2lkZXIgd2hhdAoKPHBiIGlkPSJwLjgzIiAvPgoKaXQgaXMgdGhhdCB3ZSBzaG91bGQgc2V0IG91cnNlbHZlcyB0byBpbWl0YXRlIGluIHRoZQphdXRob3JzIHRodXMgY2hvc2VuLjxtaWxlc3RvbmUgbj0iMTUiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBldmVuIGdyZWF0IGF1dGhvcnMgaGF2ZQp0aGVpciBibGVtaXNoZXMsIGZvciB3aGljaCB0aGV5IGhhdmUgYmVlbiBjZW5zdXJlZApieSBjb21wZXRlbnQgY3JpdGljcyBhbmQgaGF2ZSBldmVuIHJlcHJvYWNoZWQgZWFjaApvdGhlci4gSSBvbmx5IHdpc2ggdGhhdCBpbWl0YXRvcnMgd2VyZSBtb3JlIGxpa2VseQp0byBpbXByb3ZlIG9uIHRoZSBnb29kIHRoaW5ncyB0aGFuIHRvIGV4YWdnZXJhdGUKdGhlIGJsZW1pc2hlcyBvZiB0aGUgYXV0aG9ycyB3aG9tIHRoZXkgc2VlayB0bwpjb3B5LiBBbmQgZXZlbiB0aG9zZSB3aG8gaGF2ZSBzdWZmaWNpZW50IGNyaXRpY2FsCmFjdW1lbiB0byBhdm9pZCB0aGUgZmF1bHRzIG9mIHRoZWlyIG1vZGVscyB3aWxsIG5vdApmaW5kIGl0IHN1ZmZpY2llbnQgdG8gcHJvZHVjZSBhIGNvcHkgb2YgdGhlaXIgbWVyaXRzLAphbW91bnRpbmcgdG8gbm8gbW9yZSB0aGFuIGEgc3VwZXJmaWNpYWwgcmVzZW1ibGFuY2UsCm9yIHJhdGhlciByZWNhbGxpbmcgdGhvc2Ugc2xvdWdocyB3aGljaCwgYWNjb3JkaW5nIHRvCkVwaWN1cnVzLCBhcmUgY29udGludWFsbHkgZ2l2ZW4gb2ZmIGJ5IG1hdGVyaWFsIHRoaW5ncy48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkVwaWN1cnVzIGhlbGQgdGhhdCBhbGwgc2Vuc2UtcGVyY2VwdGlvbiB3YXMgY2F1c2VkIGJ5CnRoZSBpbXBhY3Qgb2Ygc3VjaCBhdG9taWMgc2xvdWdoczogPGhpIHJlbmQ9Iml0YWxpY3MiPmNwLiBMdWNyZXQuPC9oaT4gaXYuIDQyIHNxcS48L25vdGU+CjxtaWxlc3RvbmUgbj0iMTYiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IHRoaXMgaXMganVzdCB3aGF0IGhhcHBlbnMgdG8gdGhvc2Ugd2hvIG1vdWxkCnRoZW1zZWx2ZXMgb24gdGhlIGZpcnN0IGltcHJlc3Npb25zIGRlcml2ZWQgZnJvbSB0aGUKc3R5bGUgb2YgdGhlaXIgbW9kZWwsIHdpdGhvdXQgZGV2b3RpbmcgdGhlbXNlbHZlcyB0bwphIHRob3JvdWdoIGludmVzdGlnYXRpb24gb2YgaXRzIGdvb2QgcXVhbGl0aWVzLCBhbmQsCmRlc3BpdGUgdGhlIGJyaWxsaWFuY2Ugb2YgdGhlaXIgaW1pdGF0aW9uIGFuZCB0aGUgY2xvc2UKcmVzZW1ibGFuY2Ugb2YgdGhlaXIgbGFuZ3VhZ2UgYW5kIHJoeXRobSwgbm90IG9ubHkKZmFpbCBhYnNvbHV0ZWx5IHRvIGF0dGFpbiB0aGUgZm9yY2Ugb2Ygc3R5bGUgYW5kIGludmVudGlvbgpwb3NzZXNzZWQgYnkgdGhlIG9yaWdpbmFsLCBidXQgYXMgYSBydWxlIGRlZ2VuZXJhdGUKaW50byBzb21ldGhpbmcgd29yc2UsIGFuZCBhY2hpZXZlIG1lcmVseSB0aG9zZSBmYXVsdHMKd2hpY2ggYXJlIGhhcmRlc3QgdG8gZGlzdGluZ3Vpc2ggZnJvbSB2aXJ0dWVzOiB0aGV5CmFyZSB0dXJnaWQgaW5zdGVhZCBvZiBncmFuZCwgYmFsZCBpbnN0ZWFkIG9mIGNvbmNpc2UsCmFuZCByYXNoIGluc3RlYWQgb2YgY291cmFnZW91cywgd2hpbGUgZXh0cmF2YWdhbmNlCnRha2VzIHRoZSBwbGFjZSBvZiB3ZWFsdGgsIG92ZXItZW1waGFzaXMgdGhlIHBsYWNlIG9mCmhhcm1vbnkgYW5kIG5lZ2xpZ2VuY2Ugb2Ygc2ltcGxpY2l0eS48bWlsZXN0b25lIG49IjE3IiB1bml0PSJzZWN0aW9uIiAvPiBBcyBhIHJlc3VsdCwKdGhvc2Ugd2hvIGZsYXVudCB0YXN0ZWxlc3MgYW5kIGluc2lwaWQgdGhvdWdodHMsCmNvdWNoZWQgaW4gYW4gdW5jb3V0aCBhbmQgaW5oYXJtb25pb3VzIGZvcm0sIHRoaW5rCnRoYXQgdGhleSBhcmUgdGhlIGVxdWFscyBvZiB0aGUgYW5jaWVudHM7IHRob3NlIHdobwpsYWNrIG9ybmFtZW50IGFuZCBlcGlncmFtLCBwb3NlIGFzIEF0dGljOyB0aG9zZQp3aG8gZGFya2VuIHRoZWlyIG1lYW5pbmcgYnkgdGhlIGFicnVwdG5lc3Mgd2l0aAp3aGljaCB0aGV5IGNsb3NlIHRoZWlyIHBlcmlvZHMsIGNvdW50IHRoZW1zZWx2ZXMgdGhlCnN1cGVyaW9ycyBvZiBTYWxsdXN0IGFuZCBUaHVjeWRpZGVzOyB0aG9zZSB3aG8gYXJlCgo8cGIgaWQ9InAuODUiIC8+CgpkcmVhcnkgYW5kIGplanVuZSwgdGhpbmsgdGhhdCB0aGV5IGFyZSBzZXJpb3VzIHJpdmFscwp0byBQb2xsaW8sIHdoaWxlIHRob3NlIHdobyBhcmUgdGFtZSBhbmQgbGlzdGxlc3MsIGlmCm9ubHkgdGhleSBjYW4gcHJvZHVjZSBsb25nIGVub3VnaCBwZXJpb2RzLCBzd2Vhcgp0aGF0IHRoaXMgaXMganVzdCB0aGUgbWFubmVyIGluIHdoaWNoIENpY2VybyB3b3VsZApoYXZlIHNwb2tlbi48bWlsZXN0b25lIG49IjE4IiB1bml0PSJzZWN0aW9uIiAvPiBJIGhhdmUga25vd24gc29tZSB3aG8gdGhvdWdodCB0aGF0CnRoZXkgaGFkIHByb2R1Y2VkIGEgYnJpbGxpYW50IGltaXRhdGlvbiBvZiB0aGUgc3R5bGUKb2YgdGhhdCBkaXZpbmUgb3JhdG9yLCBieSBlbmRpbmcgdGhlaXIgcGVyaW9kcyB3aXRoCnRoZSBwaHJhc2UgPGhpIHJlbmQ9Iml0YWxpY3MiPmVzc2UgdmlkZWF0dXIuPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiBpeC4gaXYuIDczLiA8aGkgcmVuZD0iaXRhbGljcyI+VGFjLjwvaGk+IDxoaSByZW5kPSJpdGFsaWNzIj5EaWFsLjwvaGk+IDIzLjwvbm90ZT4gQ29uc2VxdWVudGx5IGl0IGlzIG9mIHRoZQpmaXJzdCBpbXBvcnRhbmNlIHRoYXQgZXZlcnkgc3R1ZGVudCBzaG91bGQgcmVhbGlzZQp3aGF0IGl0IGlzIHRoYXQgaGUgaXMgdG8gaW1pdGF0ZSwgYW5kIHNob3VsZCBrbm93CndoeSBpdCBpcyBnb29kLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Db25zZXF1ZW50bHkgdGhlIG5pY2VzdCBqdWRnbWVudCBpcyByZXF1aXJlZCBpbgp0aGUgZXhhbWluYXRpb24gb2YgZXZlcnl0aGluZyBjb25uZWN0ZWQgd2l0aCB0aGlzCmRlcGFydG1lbnQgb2Ygc3R1ZHkuIEZpcnN0IHdlIG11c3QgY29uc2lkZXIgd2hvbQp0byBpbWl0YXRlLiBGb3IgdGhlcmUgYXJlIG1hbnkgd2hvIGhhdmUgc2hvd24gYQpwYXNzaW9uYXRlIGRlc2lyZSB0byBpbWl0YXRlIHRoZSB3b3JzdCBhbmQgbW9zdApkZWNhZGVudCBhdXRob3JzLiBTZWNvbmRseSwgd2UgbXVzdCBjb25zaWRlciB3aGF0Cgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC44MyIgLz4KCml0IGlzIHRoYXQgd2Ugc2hvdWxkIHNldCBvdXJzZWx2ZXMgdG8gaW1pdGF0ZSBpbiB0aGUKYXV0aG9ycyB0aHVzIGNob3Nlbi48L3RyYW5zbGF0aW9uPg=="
translation['10.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGV2ZW4gZ3JlYXQgYXV0aG9ycyBoYXZlCnRoZWlyIGJsZW1pc2hlcywgZm9yIHdoaWNoIHRoZXkgaGF2ZSBiZWVuIGNlbnN1cmVkCmJ5IGNvbXBldGVudCBjcml0aWNzIGFuZCBoYXZlIGV2ZW4gcmVwcm9hY2hlZCBlYWNoCm90aGVyLiBJIG9ubHkgd2lzaCB0aGF0IGltaXRhdG9ycyB3ZXJlIG1vcmUgbGlrZWx5CnRvIGltcHJvdmUgb24gdGhlIGdvb2QgdGhpbmdzIHRoYW4gdG8gZXhhZ2dlcmF0ZQp0aGUgYmxlbWlzaGVzIG9mIHRoZSBhdXRob3JzIHdob20gdGhleSBzZWVrIHRvCmNvcHkuIEFuZCBldmVuIHRob3NlIHdobyBoYXZlIHN1ZmZpY2llbnQgY3JpdGljYWwKYWN1bWVuIHRvIGF2b2lkIHRoZSBmYXVsdHMgb2YgdGhlaXIgbW9kZWxzIHdpbGwgbm90CmZpbmQgaXQgc3VmZmljaWVudCB0byBwcm9kdWNlIGEgY29weSBvZiB0aGVpciBtZXJpdHMsCmFtb3VudGluZyB0byBubyBtb3JlIHRoYW4gYSBzdXBlcmZpY2lhbCByZXNlbWJsYW5jZSwKb3IgcmF0aGVyIHJlY2FsbGluZyB0aG9zZSBzbG91Z2hzIHdoaWNoLCBhY2NvcmRpbmcgdG8KRXBpY3VydXMsIGFyZSBjb250aW51YWxseSBnaXZlbiBvZmYgYnkgbWF0ZXJpYWwgdGhpbmdzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5FcGljdXJ1cyBoZWxkIHRoYXQgYWxsIHNlbnNlLXBlcmNlcHRpb24gd2FzIGNhdXNlZCBieQp0aGUgaW1wYWN0IG9mIHN1Y2ggYXRvbWljIHNsb3VnaHM6IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNwLiBMdWNyZXQuPC9oaT4gaXYuIDQyIHNxcS48L25vdGU+CjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNwLiBMdWNyZXQuPC9oaT4gaXYuIDQyIHNxcS48L3RyYW5zbGF0aW9uPg=="
translation['10.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhpcyBpcyBqdXN0IHdoYXQgaGFwcGVucyB0byB0aG9zZSB3aG8gbW91bGQKdGhlbXNlbHZlcyBvbiB0aGUgZmlyc3QgaW1wcmVzc2lvbnMgZGVyaXZlZCBmcm9tIHRoZQpzdHlsZSBvZiB0aGVpciBtb2RlbCwgd2l0aG91dCBkZXZvdGluZyB0aGVtc2VsdmVzIHRvCmEgdGhvcm91Z2ggaW52ZXN0aWdhdGlvbiBvZiBpdHMgZ29vZCBxdWFsaXRpZXMsIGFuZCwKZGVzcGl0ZSB0aGUgYnJpbGxpYW5jZSBvZiB0aGVpciBpbWl0YXRpb24gYW5kIHRoZSBjbG9zZQpyZXNlbWJsYW5jZSBvZiB0aGVpciBsYW5ndWFnZSBhbmQgcmh5dGhtLCBub3Qgb25seQpmYWlsIGFic29sdXRlbHkgdG8gYXR0YWluIHRoZSBmb3JjZSBvZiBzdHlsZSBhbmQgaW52ZW50aW9uCnBvc3Nlc3NlZCBieSB0aGUgb3JpZ2luYWwsIGJ1dCBhcyBhIHJ1bGUgZGVnZW5lcmF0ZQppbnRvIHNvbWV0aGluZyB3b3JzZSwgYW5kIGFjaGlldmUgbWVyZWx5IHRob3NlIGZhdWx0cwp3aGljaCBhcmUgaGFyZGVzdCB0byBkaXN0aW5ndWlzaCBmcm9tIHZpcnR1ZXM6IHRoZXkKYXJlIHR1cmdpZCBpbnN0ZWFkIG9mIGdyYW5kLCBiYWxkIGluc3RlYWQgb2YgY29uY2lzZSwKYW5kIHJhc2ggaW5zdGVhZCBvZiBjb3VyYWdlb3VzLCB3aGlsZSBleHRyYXZhZ2FuY2UKdGFrZXMgdGhlIHBsYWNlIG9mIHdlYWx0aCwgb3Zlci1lbXBoYXNpcyB0aGUgcGxhY2Ugb2YKaGFybW9ueSBhbmQgbmVnbGlnZW5jZSBvZiBzaW1wbGljaXR5LjwvdHJhbnNsYXRpb24+"
translation['10.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz4gQXMgYSByZXN1bHQsCnRob3NlIHdobyBmbGF1bnQgdGFzdGVsZXNzIGFuZCBpbnNpcGlkIHRob3VnaHRzLApjb3VjaGVkIGluIGFuIHVuY291dGggYW5kIGluaGFybW9uaW91cyBmb3JtLCB0aGluawp0aGF0IHRoZXkgYXJlIHRoZSBlcXVhbHMgb2YgdGhlIGFuY2llbnRzOyB0aG9zZSB3aG8KbGFjayBvcm5hbWVudCBhbmQgZXBpZ3JhbSwgcG9zZSBhcyBBdHRpYzsgdGhvc2UKd2hvIGRhcmtlbiB0aGVpciBtZWFuaW5nIGJ5IHRoZSBhYnJ1cHRuZXNzIHdpdGgKd2hpY2ggdGhleSBjbG9zZSB0aGVpciBwZXJpb2RzLCBjb3VudCB0aGVtc2VsdmVzIHRoZQpzdXBlcmlvcnMgb2YgU2FsbHVzdCBhbmQgVGh1Y3lkaWRlczsgdGhvc2Ugd2hvIGFyZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuODUiIC8+CgpkcmVhcnkgYW5kIGplanVuZSwgdGhpbmsgdGhhdCB0aGV5IGFyZSBzZXJpb3VzIHJpdmFscwp0byBQb2xsaW8sIHdoaWxlIHRob3NlIHdobyBhcmUgdGFtZSBhbmQgbGlzdGxlc3MsIGlmCm9ubHkgdGhleSBjYW4gcHJvZHVjZSBsb25nIGVub3VnaCBwZXJpb2RzLCBzd2Vhcgp0aGF0IHRoaXMgaXMganVzdCB0aGUgbWFubmVyIGluIHdoaWNoIENpY2VybyB3b3VsZApoYXZlIHNwb2tlbi48L3RyYW5zbGF0aW9uPg=="
translation['10.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz4gSSBoYXZlIGtub3duIHNvbWUgd2hvIHRob3VnaHQgdGhhdAp0aGV5IGhhZCBwcm9kdWNlZCBhIGJyaWxsaWFudCBpbWl0YXRpb24gb2YgdGhlIHN0eWxlCm9mIHRoYXQgZGl2aW5lIG9yYXRvciwgYnkgZW5kaW5nIHRoZWlyIHBlcmlvZHMgd2l0aAp0aGUgcGhyYXNlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmVzc2UgdmlkZWF0dXIuPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Y3AuPC9oaT4gaXguIGl2LiA3My4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+VGFjLjwvaGk+IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkRpYWwuPC9oaT4gMjMuPC9ub3RlPiBDb25zZXF1ZW50bHkgaXQgaXMgb2YgdGhlCmZpcnN0IGltcG9ydGFuY2UgdGhhdCBldmVyeSBzdHVkZW50IHNob3VsZCByZWFsaXNlCndoYXQgaXQgaXMgdGhhdCBoZSBpcyB0byBpbWl0YXRlLCBhbmQgc2hvdWxkIGtub3cKd2h5IGl0IGlzIGdvb2QuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Y3AuPC9oaT4gaXguIGl2LiA3My4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+VGFjLjwvaGk+IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkRpYWwuPC9oaT4gMjMuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTkiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIG5leHQgc3RlcCBpcyBmb3IgZWFjaCBzdHVkZW50IHRvIGNvbnN1bHQgaGlzCm93biBwb3dlcnMgd2hlbiBoZSBzaG91bGRlcnMgaGlzIGJ1cmRlbi4gRm9yCnRoZXJlIGFyZSBzb21lIHRoaW5ncyB3aGljaCwgdGhvdWdoIGNhcGFibGUgb2YKaW1pdGF0aW9uLCBtYXkgYmUgYmV5b25kIHRoZSBjYXBhY2l0eSBvZiBhbnkgZ2l2ZW4KaW5kaXZpZHVhbCwgZWl0aGVyIGJlY2F1c2UgaGlzIG5hdHVyYWwgZ2lmdHMgYXJlIGluc3VmZmljaWVudCBvciBvZiBhIGRpZmZlcmVudCBjaGFyYWN0ZXIuIFRoZSBtYW4gd2hvc2UKdGFsZW50IGlzIGZvciB0aGUgcGxhaW4gc3R5bGUgc2hvdWxkIG5vdCBzZWVrIG9ubHkKd2hhdCBpcyBib2xkIGFuZCBydWdnZWQsIG5vciB5ZXQgc2hvdWxkIGhlIHdobyBoYXMKdmlnb3VyIHdpdGhvdXQgY29udHJvbCBzdWZmZXIgaGltc2VsZiB0aHJvdWdoIGxvdmUgb2YKc3VidGxldHkgYXQgb25jZSB0byB3YXN0ZSBoaXMgbmF0dXJhbCBlbmVyZ3kgYW5kCmZhaWwgdG8gYXR0YWluIHRoZSBlbGVnYW5jZSBhdCB3aGljaCBoZSBhaW1zOiBmb3IKdGhlcmUgaXMgbm90aGluZyBzbyB1bmJlY29taW5nIGFzIGRlbGljYWN5IHdlZGRlZAp0byBydWdnZWRuZXNzLjxtaWxlc3RvbmUgbj0iMjAiIHVuaXQ9InNlY3Rpb24iIC8+IFRydWUsIEkgZGlkIGV4cHJlc3MgdGhlIG9waW5pb24KdGhhdCB0aGUgaW5zdHJ1Y3RvciB3aG9zZSBwb3J0cmFpdCBJIHBhaW50ZWQgaW4gbXkKc2Vjb25kIGJvb2ssPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5DaC4gOC48L25vdGU+IHNob3VsZCBub3QgY29uZmluZSBoaW1zZWxmIHRvIHRlYWNoaW5nCnRob3NlIHRoaW5ncyBmb3Igd2hpY2ggaGUgcGVyY2VpdmVkIGhpcyBpbmRpdmlkdWFsCnB1cGlscyB0byBoYXZlIG1vc3QgYXB0aXR1ZGUuIEZvciBpdCBpcyBoaXMgZnVydGhlcgpkdXR5IHRvIGZvc3RlciB3aGF0ZXZlciBnb29kIHF1YWxpdGllcyBoZSBtYXkgcGVyY2VpdmUgaW4gaGlzIHB1cGlscywgdG8gbWFrZSBnb29kIHRoZWlyIGRlZmljaWVuY2llcwphcyBmYXIgYXMgbWF5IGJlLCB0byBjb3JyZWN0IHRoZWlyIGZhdWx0cyBhbmQgdHVybgp0aGVtIHRvIGJldHRlciB0aGluZ3MuIEZvciBoZSBpcyB0aGUgZ3VpZGUgYW5kCmRpcmVjdG9yIG9mIHRoZSBtaW5kcyBvZiBvdGhlcnMuIEl0IGlzIGEgaGFyZGVyIHRhc2sKdG8gbW91bGQgb25lJ3Mgb3duIG5hdHVyZS48bWlsZXN0b25lIG49IjIxIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgbm90IGV2ZW4gb3VyCgo8cGIgaWQ9InAuODciIC8+CgppZGVhbCB0ZWFjaGVyLCBob3dldmVyIG11Y2ggaGUgbWF5IGRlc2lyZSB0aGF0CmV2ZXJ5dGhpbmcgdGhhdCBpcyBjb3JyZWN0IHNob3VsZCBwcmV2YWlsIGluIGhpcwpzY2hvb2wgdG8gdGhlIGZ1bGxlc3QgZXh0ZW50LCB3aWxsIHdhc3RlIGhpcyBsYWJvdXIgaW4KYXR0ZW1wdGluZyB0byBkZXZlbG9wIHF1YWxpdGllcyB0byB0aGUgYXR0YWlubWVudCBvZgp3aGljaCBoZSBwZXJjZWl2ZXMgbmF0dXJlJ3MgZ2lmdHMgdG8gYmUgb3Bwb3NlZC48L3A+CjwvdHJhbnNsYXRpb24+"
translation['10.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbmV4dCBzdGVwIGlzIGZvciBlYWNoIHN0dWRlbnQgdG8gY29uc3VsdCBoaXMKb3duIHBvd2VycyB3aGVuIGhlIHNob3VsZGVycyBoaXMgYnVyZGVuLiBGb3IKdGhlcmUgYXJlIHNvbWUgdGhpbmdzIHdoaWNoLCB0aG91Z2ggY2FwYWJsZSBvZgppbWl0YXRpb24sIG1heSBiZSBiZXlvbmQgdGhlIGNhcGFjaXR5IG9mIGFueSBnaXZlbgppbmRpdmlkdWFsLCBlaXRoZXIgYmVjYXVzZSBoaXMgbmF0dXJhbCBnaWZ0cyBhcmUgaW5zdWZmaWNpZW50IG9yIG9mIGEgZGlmZmVyZW50IGNoYXJhY3Rlci4gVGhlIG1hbiB3aG9zZQp0YWxlbnQgaXMgZm9yIHRoZSBwbGFpbiBzdHlsZSBzaG91bGQgbm90IHNlZWsgb25seQp3aGF0IGlzIGJvbGQgYW5kIHJ1Z2dlZCwgbm9yIHlldCBzaG91bGQgaGUgd2hvIGhhcwp2aWdvdXIgd2l0aG91dCBjb250cm9sIHN1ZmZlciBoaW1zZWxmIHRocm91Z2ggbG92ZSBvZgpzdWJ0bGV0eSBhdCBvbmNlIHRvIHdhc3RlIGhpcyBuYXR1cmFsIGVuZXJneSBhbmQKZmFpbCB0byBhdHRhaW4gdGhlIGVsZWdhbmNlIGF0IHdoaWNoIGhlIGFpbXM6IGZvcgp0aGVyZSBpcyBub3RoaW5nIHNvIHVuYmVjb21pbmcgYXMgZGVsaWNhY3kgd2VkZGVkCnRvIHJ1Z2dlZG5lc3MuPC90cmFuc2xhdGlvbj4="
translation['10.2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz4gVHJ1ZSwgSSBkaWQgZXhwcmVzcyB0aGUgb3Bpbmlvbgp0aGF0IHRoZSBpbnN0cnVjdG9yIHdob3NlIHBvcnRyYWl0IEkgcGFpbnRlZCBpbiBteQpzZWNvbmQgYm9vayw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+Q2guIDguPC9ub3RlPiBzaG91bGQgbm90IGNvbmZpbmUgaGltc2VsZiB0byB0ZWFjaGluZwp0aG9zZSB0aGluZ3MgZm9yIHdoaWNoIGhlIHBlcmNlaXZlZCBoaXMgaW5kaXZpZHVhbApwdXBpbHMgdG8gaGF2ZSBtb3N0IGFwdGl0dWRlLiBGb3IgaXQgaXMgaGlzIGZ1cnRoZXIKZHV0eSB0byBmb3N0ZXIgd2hhdGV2ZXIgZ29vZCBxdWFsaXRpZXMgaGUgbWF5IHBlcmNlaXZlIGluIGhpcyBwdXBpbHMsIHRvIG1ha2UgZ29vZCB0aGVpciBkZWZpY2llbmNpZXMKYXMgZmFyIGFzIG1heSBiZSwgdG8gY29ycmVjdCB0aGVpciBmYXVsdHMgYW5kIHR1cm4KdGhlbSB0byBiZXR0ZXIgdGhpbmdzLiBGb3IgaGUgaXMgdGhlIGd1aWRlIGFuZApkaXJlY3RvciBvZiB0aGUgbWluZHMgb2Ygb3RoZXJzLiBJdCBpcyBhIGhhcmRlciB0YXNrCnRvIG1vdWxkIG9uZSdzIG93biBuYXR1cmUuPC90cmFuc2xhdGlvbj4="
translation['10.2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IG5vdCBldmVuIG91cgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuODciIC8+CgppZGVhbCB0ZWFjaGVyLCBob3dldmVyIG11Y2ggaGUgbWF5IGRlc2lyZSB0aGF0CmV2ZXJ5dGhpbmcgdGhhdCBpcyBjb3JyZWN0IHNob3VsZCBwcmV2YWlsIGluIGhpcwpzY2hvb2wgdG8gdGhlIGZ1bGxlc3QgZXh0ZW50LCB3aWxsIHdhc3RlIGhpcyBsYWJvdXIgaW4KYXR0ZW1wdGluZyB0byBkZXZlbG9wIHF1YWxpdGllcyB0byB0aGUgYXR0YWlubWVudCBvZgp3aGljaCBoZSBwZXJjZWl2ZXMgbmF0dXJlJ3MgZ2lmdHMgdG8gYmUgb3Bwb3NlZC48cCBjbGFzcz0idHJhbnNsYXRpb24iPkl0IGlzIGFsc28gbmVjZXNzYXJ5IHRvIGF2b2lkIHRoZSBmYXVsdCB0byB3aGljaCB0aGUKbWFqb3JpdHkgb2Ygc3R1ZGVudHMgYXJlIHNvIHByb25lLCBuYW1lbHksIHRoZSBpZGVhCnRoYXQgaW4gY29tcG9zaW5nIHNwZWVjaGVzIHdlIHNob3VsZCBpbWl0YXRlIHRoZQpwb2V0cyBhbmQgaGlzdG9yaWFucywgYW5kIGluIHdyaXRpbmcgaGlzdG9yeSBvciBwb2V0cnkKc2hvdWxkIGNvcHkgb3JhdG9ycyBhbmQgZGVjbGFpbWVycy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjIiIHVuaXQ9InNlY3Rpb24iIC8+IEVhY2ggYnJhbmNoCm9mIGxpdGVyYXR1cmUgaGFzIGl0cyBvd24gbGF3cyBhbmQgaXRzIG93biBhcHByb3ByaWF0ZQpjaGFyYWN0ZXIuIENvbWVkeSBkb2VzIG5vdCBzZWVrIHRvIGluY3JlYXNlIGl0cwpoZWlnaHQgYnkgdGhlIGJ1c2tpbiBhbmQgdHJhZ2VkeSBkb2VzIG5vdCB3ZWFyCnRoZSBzbGlwcGVyIG9mIGNvbWVkeS4gQnV0IGFsbCBmb3JtcyBvZiBlbG9xdWVuY2UKaGF2ZSBzb21ldGhpbmcgaW4gY29tbW9uLCBhbmQgaXQgaXMgdG8gdGhlIGltaXRhdGlvbgpvZiB0aGlzIGNvbW1vbiBlbGVtZW50IHRoYXQgb3VyIGVmZm9ydHMgc2hvdWxkIGJlCmNvbmZpbmVkLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gRWFjaCBicmFuY2gKb2YgbGl0ZXJhdHVyZSBoYXMgaXRzIG93biBsYXdzIGFuZCBpdHMgb3duIGFwcHJvcHJpYXRlCmNoYXJhY3Rlci4gQ29tZWR5IGRvZXMgbm90IHNlZWsgdG8gaW5jcmVhc2UgaXRzCmhlaWdodCBieSB0aGUgYnVza2luIGFuZCB0cmFnZWR5IGRvZXMgbm90IHdlYXIKdGhlIHNsaXBwZXIgb2YgY29tZWR5LiBCdXQgYWxsIGZvcm1zIG9mIGVsb3F1ZW5jZQpoYXZlIHNvbWV0aGluZyBpbiBjb21tb24sIGFuZCBpdCBpcyB0byB0aGUgaW1pdGF0aW9uCm9mIHRoaXMgY29tbW9uIGVsZW1lbnQgdGhhdCBvdXIgZWZmb3J0cyBzaG91bGQgYmUKY29uZmluZWQuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjMiIHVuaXQ9InNlY3Rpb24iIC8+VGhlcmUgaXMgYSBmdXJ0aGVyIGZhdWx0IHRvIHdoaWNoIHRob3NlIHBlcnNvbnMKYXJlIGxpYWJsZSB3aG8gZGV2b3RlIHRoZW1zZWx2ZXMgZW50aXJlbHkgdG8gdGhlCmltaXRhdGlvbiBvZiBvbmUgcGFydGljdWxhciBzdHlsZTogaWYgdGhlIHJ1ZGUgdmlnb3VyCm9mIHNvbWUgcGFydGljdWxhciBhdXRob3IgdGFrZXMgdGhlaXIgZmFuY3ksIHRoZXkKY2xpbmcgdG8gaXQgZXZlbiB3aGVuIHRoZSBjYXNlIG9uIHdoaWNoIHRoZXkgYXJlCmVuZ2FnZWQgY2FsbHMgZm9yIGFuIGVhc3kgYW5kIGZsb3dpbmcgc3R5bGU7IGlmLCBvbgp0aGUgb3RoZXIgaGFuZCwgaXQgaXMgYSBzaW1wbGUgb3IgYWdyZWVhYmxlIHN0eWxlIHRoYXQKY2xhaW1zIHRoZWlyIGRldm90aW9uLCB0aGV5IGZhaWwgdG8gbWVldCB0aGUgaGVhdnkKZGVtYW5kcyBvZiBzZXZlcmUgYW5kIHdlaWdodHkgY2FzZXMuIEZvciBub3Qgb25seQpkbyBjYXNlcyBkaWZmZXIgaW4gdGhlaXIgZ2VuZXJhbCBhc3BlY3QsIGJ1dCBvbmUgcGFydApvZiBhIGNhc2UgbWF5IGRpZmZlciBmcm9tIGFub3RoZXIsIGFuZCBzb21lIHRoaW5ncwpyZXF1aXJlIGEgZ2VudGxlIGFuZCBvdGhlcnMgYSB2aW9sZW50IHN0eWxlLCBzb21lCnJlcXVpcmUgYW4gaW1wZXR1b3VzIGFuZCBvdGhlcnMgYSBjYWxtIGRpY3Rpb24sIHdoaWxlCmluIHNvbWUgY2FzZXMgaXQgaXMgbmVjZXNzYXJ5IHRvIGluc3RydWN0IGFuZCBpbiBvdGhlcnMKdG8gbW92ZSB0aGUgYXVkaWVuY2UsIGluIGFsbCB0aGVzZSBpbnN0YW5jZXMgZGlzc2ltaWxhciBhbmQgZGlmZmVyZW50IG1ldGhvZHMgYmVpbmcgbmVjZXNzYXJ5LjxtaWxlc3RvbmUgbj0iMjQiIHVuaXQ9InNlY3Rpb24iIC8+IENvbnNlcXVlbnRseSBJIHNob3VsZCBiZSByZWx1Y3RhbnQgZXZlbiB0byBhZHZpc2UgYQoKPHBiIGlkPSJwLjg5IiAvPgoKc3R1ZGVudCB0byBzZWxlY3Qgb25lIHBhcnRpY3VsYXIgYXV0aG9yIHRvIGZvbGxvdwp0aHJvdWdoIHRoaWNrIGFuZCB0aGluLiBEZW1vc3RoZW5lcyBpcyBieSBmYXIgdGhlCm1vc3QgcGVyZmVjdCBvZiBHcmVlayBvcmF0b3JzLCB5ZXQgdGhlcmUgYXJlIHNvbWUKdGhpbmdzIHdoaWNoIG90aGVycyBoYXZlIHNhaWQgYmV0dGVyIGluIHNvbWUgY29udGV4dHMKYXMgYWdhaW5zdCB0aGUgbWFueSB0aGluZ3Mgd2hpY2ggaGUgaGFzIHNhaWQgYmV0dGVyCnRoYW4gb3RoZXJzLiBCdXQgaXQgZG9lcyBub3QgZm9sbG93IHRoYXQgYmVjYXVzZSB3ZQpzaG91bGQgc2VsZWN0IG9uZSBhdXRob3IgZm9yIHNwZWNpYWwgaW1pdGF0aW9uLCBoZQpzaG91bGQgYmUgb3VyIG9ubHkgbW9kZWwuIFdoYXQgdGhlbj88bWlsZXN0b25lIG49IjI1IiB1bml0PSJzZWN0aW9uIiAvPiBJcyBpdCBub3QKc3VmZmljaWVudCB0byBtb2RlbCBvdXIgZXZlcnkgdXR0ZXJhbmNlIG9uIENpY2Vybz8KRm9yIG15IG93biBwYXJ0LCBJIHNob3VsZCBjb25zaWRlciBpdCBzdWZmaWNpZW50LCBpZgpJIGNvdWxkIGFsd2F5cyBpbWl0YXRlIGhpbSBzdWNjZXNzZnVsbHkuIEJ1dCB3aGF0Cmhhcm0gaXMgdGhlcmUgaW4gb2NjYXNpb25hbGx5IGJvcnJvd2luZyB0aGUgdmlnb3VyIG9mCkNhZXNhciwgdGhlIHZlaGVtZW5jZSBvZiBDYWVsaXVzLCB0aGUgcHJlY2lzaW9uIG9mClBvbGxpbyBvciB0aGUgc291bmQganVkZ21lbnQgb2YgQ2FsdnVzPzxtaWxlc3RvbmUgbj0iMjYiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBxdWl0ZQphcGFydCBmcm9tIHRoZSBmYWN0IHRoYXQgYSB3aXNlIG1hbiBzaG91bGQgYWx3YXlzLAppZiBwb3NzaWJsZSwgbWFrZSB3aGF0ZXZlciBpcyBiZXN0IGluIGVhY2ggaW5kaXZpZHVhbAphdXRob3IgaGlzIG93biwgd2Ugc2hhbGwgZmluZCB0aGF0LCBpbiB2aWV3IG9mIHRoZQpleHRyZW1lIGRpZmZpY3VsdHkgb2Ygb3VyIHN1YmplY3QsIHRob3NlIHdobyBmaXggdGhlaXIKZXllcyBvbiBvbmUgbW9kZWwgb25seSB3aWxsIGFsd2F5cyBmaW5kIHNvbWUgb25lCnF1YWxpdHkgd2hpY2ggaXQgaXMgYWxtb3N0IGltcG9zc2libGUgdG8gYWNxdWlyZSB0aGVyZWZyb20uIENvbnNlcXVlbnRseSwgc2luY2UgaXQgaXMgcHJhY3RpY2FsbHkgaW1wb3NzaWJsZQpmb3IgbW9ydGFsIHBvd2VycyB0byBwcm9kdWNlIGEgcGVyZmVjdCBhbmQgY29tcGxldGUKY29weSBvZiBhbnkgb25lIGNob3NlbiBhdXRob3IsIHdlIHNoYWxsIGRvIHdlbGwgdG8Ka2VlcCBhIG51bWJlciBvZiBkaWZmZXJlbnQgZXhjZWxsZW5jZXMgYmVmb3JlIG91cgpleWVzLCBzbyB0aGF0IGRpZmZlcmVudCBxdWFsaXRpZXMgZnJvbSBkaWZmZXJlbnQgYXV0aG9ycwptYXkgaW1wcmVzcyB0aGVtc2VsdmVzIG9uIG91ciBtaW5kcywgdG8gYmUgYWRvcHRlZApmb3IgdXNlIGluIHRoZSBwbGFjZSB0aGF0IGJlY29tZXMgdGhlbSBiZXN0LjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBpcyBhIGZ1cnRoZXIgZmF1bHQgdG8gd2hpY2ggdGhvc2UgcGVyc29ucwphcmUgbGlhYmxlIHdobyBkZXZvdGUgdGhlbXNlbHZlcyBlbnRpcmVseSB0byB0aGUKaW1pdGF0aW9uIG9mIG9uZSBwYXJ0aWN1bGFyIHN0eWxlOiBpZiB0aGUgcnVkZSB2aWdvdXIKb2Ygc29tZSBwYXJ0aWN1bGFyIGF1dGhvciB0YWtlcyB0aGVpciBmYW5jeSwgdGhleQpjbGluZyB0byBpdCBldmVuIHdoZW4gdGhlIGNhc2Ugb24gd2hpY2ggdGhleSBhcmUKZW5nYWdlZCBjYWxscyBmb3IgYW4gZWFzeSBhbmQgZmxvd2luZyBzdHlsZTsgaWYsIG9uCnRoZSBvdGhlciBoYW5kLCBpdCBpcyBhIHNpbXBsZSBvciBhZ3JlZWFibGUgc3R5bGUgdGhhdApjbGFpbXMgdGhlaXIgZGV2b3Rpb24sIHRoZXkgZmFpbCB0byBtZWV0IHRoZSBoZWF2eQpkZW1hbmRzIG9mIHNldmVyZSBhbmQgd2VpZ2h0eSBjYXNlcy4gRm9yIG5vdCBvbmx5CmRvIGNhc2VzIGRpZmZlciBpbiB0aGVpciBnZW5lcmFsIGFzcGVjdCwgYnV0IG9uZSBwYXJ0Cm9mIGEgY2FzZSBtYXkgZGlmZmVyIGZyb20gYW5vdGhlciwgYW5kIHNvbWUgdGhpbmdzCnJlcXVpcmUgYSBnZW50bGUgYW5kIG90aGVycyBhIHZpb2xlbnQgc3R5bGUsIHNvbWUKcmVxdWlyZSBhbiBpbXBldHVvdXMgYW5kIG90aGVycyBhIGNhbG0gZGljdGlvbiwgd2hpbGUKaW4gc29tZSBjYXNlcyBpdCBpcyBuZWNlc3NhcnkgdG8gaW5zdHJ1Y3QgYW5kIGluIG90aGVycwp0byBtb3ZlIHRoZSBhdWRpZW5jZSwgaW4gYWxsIHRoZXNlIGluc3RhbmNlcyBkaXNzaW1pbGFyIGFuZCBkaWZmZXJlbnQgbWV0aG9kcyBiZWluZyBuZWNlc3NhcnkuPC90cmFuc2xhdGlvbj4="
translation['10.2.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz4gQ29uc2VxdWVudGx5IEkgc2hvdWxkIGJlIHJlbHVjdGFudCBldmVuIHRvIGFkdmlzZSBhCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC44OSIgLz4KCnN0dWRlbnQgdG8gc2VsZWN0IG9uZSBwYXJ0aWN1bGFyIGF1dGhvciB0byBmb2xsb3cKdGhyb3VnaCB0aGljayBhbmQgdGhpbi4gRGVtb3N0aGVuZXMgaXMgYnkgZmFyIHRoZQptb3N0IHBlcmZlY3Qgb2YgR3JlZWsgb3JhdG9ycywgeWV0IHRoZXJlIGFyZSBzb21lCnRoaW5ncyB3aGljaCBvdGhlcnMgaGF2ZSBzYWlkIGJldHRlciBpbiBzb21lIGNvbnRleHRzCmFzIGFnYWluc3QgdGhlIG1hbnkgdGhpbmdzIHdoaWNoIGhlIGhhcyBzYWlkIGJldHRlcgp0aGFuIG90aGVycy4gQnV0IGl0IGRvZXMgbm90IGZvbGxvdyB0aGF0IGJlY2F1c2Ugd2UKc2hvdWxkIHNlbGVjdCBvbmUgYXV0aG9yIGZvciBzcGVjaWFsIGltaXRhdGlvbiwgaGUKc2hvdWxkIGJlIG91ciBvbmx5IG1vZGVsLiBXaGF0IHRoZW4/PC90cmFuc2xhdGlvbj4="
translation['10.2.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz4gSXMgaXQgbm90CnN1ZmZpY2llbnQgdG8gbW9kZWwgb3VyIGV2ZXJ5IHV0dGVyYW5jZSBvbiBDaWNlcm8/CkZvciBteSBvd24gcGFydCwgSSBzaG91bGQgY29uc2lkZXIgaXQgc3VmZmljaWVudCwgaWYKSSBjb3VsZCBhbHdheXMgaW1pdGF0ZSBoaW0gc3VjY2Vzc2Z1bGx5LiBCdXQgd2hhdApoYXJtIGlzIHRoZXJlIGluIG9jY2FzaW9uYWxseSBib3Jyb3dpbmcgdGhlIHZpZ291ciBvZgpDYWVzYXIsIHRoZSB2ZWhlbWVuY2Ugb2YgQ2FlbGl1cywgdGhlIHByZWNpc2lvbiBvZgpQb2xsaW8gb3IgdGhlIHNvdW5kIGp1ZGdtZW50IG9mIENhbHZ1cz88L3RyYW5zbGF0aW9uPg=="
translation['10.2.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHF1aXRlCmFwYXJ0IGZyb20gdGhlIGZhY3QgdGhhdCBhIHdpc2UgbWFuIHNob3VsZCBhbHdheXMsCmlmIHBvc3NpYmxlLCBtYWtlIHdoYXRldmVyIGlzIGJlc3QgaW4gZWFjaCBpbmRpdmlkdWFsCmF1dGhvciBoaXMgb3duLCB3ZSBzaGFsbCBmaW5kIHRoYXQsIGluIHZpZXcgb2YgdGhlCmV4dHJlbWUgZGlmZmljdWx0eSBvZiBvdXIgc3ViamVjdCwgdGhvc2Ugd2hvIGZpeCB0aGVpcgpleWVzIG9uIG9uZSBtb2RlbCBvbmx5IHdpbGwgYWx3YXlzIGZpbmQgc29tZSBvbmUKcXVhbGl0eSB3aGljaCBpdCBpcyBhbG1vc3QgaW1wb3NzaWJsZSB0byBhY3F1aXJlIHRoZXJlZnJvbS4gQ29uc2VxdWVudGx5LCBzaW5jZSBpdCBpcyBwcmFjdGljYWxseSBpbXBvc3NpYmxlCmZvciBtb3J0YWwgcG93ZXJzIHRvIHByb2R1Y2UgYSBwZXJmZWN0IGFuZCBjb21wbGV0ZQpjb3B5IG9mIGFueSBvbmUgY2hvc2VuIGF1dGhvciwgd2Ugc2hhbGwgZG8gd2VsbCB0bwprZWVwIGEgbnVtYmVyIG9mIGRpZmZlcmVudCBleGNlbGxlbmNlcyBiZWZvcmUgb3VyCmV5ZXMsIHNvIHRoYXQgZGlmZmVyZW50IHF1YWxpdGllcyBmcm9tIGRpZmZlcmVudCBhdXRob3JzCm1heSBpbXByZXNzIHRoZW1zZWx2ZXMgb24gb3VyIG1pbmRzLCB0byBiZSBhZG9wdGVkCmZvciB1c2UgaW4gdGhlIHBsYWNlIHRoYXQgYmVjb21lcyB0aGVtIGJlc3QuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjciIHVuaXQ9InNlY3Rpb24iIC8+QnV0IGltaXRhdGlvbiAoZm9yIEkgbXVzdCByZXBlYXQgdGhpcyBwb2ludCBhZ2FpbgphbmQgYWdhaW4pIHNob3VsZCBub3QgYmUgY29uZmluZWQgbWVyZWx5IHRvIHdvcmRzLgpXZSBtdXN0IGNvbnNpZGVyIHRoZSBhcHByb3ByaWF0ZW5lc3Mgd2l0aCB3aGljaAp0aG9zZSBvcmF0b3JzIGhhbmRsZSB0aGUgY2lyY3Vtc3RhbmNlcyBhbmQgcGVyc29ucwppbnZvbHZlZCBpbiB0aGUgdmFyaW91cyBjYXNlcyBpbiB3aGljaCB0aGV5IHdlcmUKZW5nYWdlZCwgYW5kIG9ic2VydmUgdGhlIGp1ZGdtZW50IGFuZCBwb3dlcnMgb2YKYXJyYW5nZW1lbnQgd2hpY2ggdGhleSByZXZlYWwsIGFuZCB0aGUgbWFubmVyCgo8cGIgaWQ9InAuOTEiIC8+CgppbiB3aGljaCBldmVyeXRoaW5nIHRoZXkgc2F5LCBub3QgZXhjZXB0aW5nIHRob3NlCnBvcnRpb25zIG9mIHRoZWlyIHNwZWVjaGVzIHdoaWNoIHNlZW0gZGVzaWduZWQKbWVyZWx5IHRvIGRlbGlnaHQgdGhlaXIgYXVkaWVuY2UsIGlzIGNvbmNlbnRyYXRlZCBvbgpzZWN1cmluZyB0aGUgdmljdG9yeSBvdmVyIHRoZWlyIG9wcG9uZW50cy4gV2UgbXVzdApub3RlIHRoZWlyIHByb2NlZHVyZSBpbiB0aGUgZXhvcmRpdW0sIHRoZSBtZXRob2QKYW5kIHZhcmlldHkgb2YgdGhlaXIgc3RhdGVtZW50IG9mIGZhY3RzLCB0aGUgcG93ZXIKZGlzcGxheWVkIGluIHByb29mIGFuZCByZWZ1dGF0aW9uLCB0aGUgc2tpbGwgcmV2ZWFsZWQKaW4gdGhlaXIgYXBwZWFsIHRvIGV2ZXJ5IGtpbmQgb2YgZW1vdGlvbiwgYW5kIHRoZQptYW5uZXIgaW4gd2hpY2ggdGhleSBtYWtlIHVzZSBvZiBwb3B1bGFyIGFwcGxhdXNlCnRvIHNlcnZlIHRoZWlyIGNhc2UsIGFwcGxhdXNlIHdoaWNoIGlzIG1vc3QgaG9ub3VyYWJsZSB3aGVuIGl0IGlzIHNwb250YW5lb3VzIGFuZCBub3QgZGVsaWJlcmF0ZWx5CmNvdXJ0ZWQuIElmIHdlIGhhdmUgdGhvcm91Z2hseSBhcHByZWNpYXRlZCBhbGwgdGhlc2UKcG9pbnRzLCB3ZSBzaGFsbCBiZSBhYmxlIHRvIGltaXRhdGUgb3VyIG1vZGVscyB3aXRoCmFjY3VyYWN5LjxtaWxlc3RvbmUgbj0iMjgiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCB0aGUgbWFuIHdobyB0byB0aGVzZSBnb29kIHF1YWxpdGllcwphZGRzIGhpcyBvd24sIHRoYXQgaXMgdG8gc2F5LCB3aG8gbWFrZXMgZ29vZCBkZWZpY2llbmNpZXMgYW5kIGN1dHMgZG93biB3aGF0ZXZlciBpcyByZWR1bmRhbnQsIHdpbGwKYmUgdGhlIHBlcmZlY3Qgb3JhdG9yIG9mIG91ciBzZWFyY2g7IGFuZCBpdCBpcyBub3cKYWJvdmUgYWxsIHRpbWVzIHRoYXQgc3VjaCBwZXJmZWN0aW9uIHNob3VsZCBiZQphdHRhaW5lZCB3aGVuIHRoZXJlIGFyZSBiZWZvcmUgdXMgc28gbWFueSBtb3JlCm1vZGVscyBvZiBvcmF0b3JpY2FsIGV4Y2VsbGVuY2UgdGhhbiB3ZXJlIGF2YWlsYWJsZQpmb3IgdGhvc2Ugd2hvIGhhdmUgdGh1cyBmYXIgYWNoaWV2ZWQgdGhlIGhpZ2hlc3QKc3VjY2Vzcy4gRm9yIHRoaXMgZ2xvcnkgYWxzbyBzaGFsbCBiZSB0aGVpcnMsIHRoYXQKbWVuIHNoYWxsIHNheSBvZiB0aGVtIHRoYXQgd2hpbGUgdGhleSBzdXJwYXNzZWQKdGhlaXIgcHJlZGVjZXNzb3JzLCB0aGV5IGFsc28gdGF1Z2h0IHRob3NlIHdobyBjYW1lCmFmdGVyLjwvcD4KCjwvdHJhbnNsYXRpb24+"
translation['10.2.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaW1pdGF0aW9uIChmb3IgSSBtdXN0IHJlcGVhdCB0aGlzIHBvaW50IGFnYWluCmFuZCBhZ2Fpbikgc2hvdWxkIG5vdCBiZSBjb25maW5lZCBtZXJlbHkgdG8gd29yZHMuCldlIG11c3QgY29uc2lkZXIgdGhlIGFwcHJvcHJpYXRlbmVzcyB3aXRoIHdoaWNoCnRob3NlIG9yYXRvcnMgaGFuZGxlIHRoZSBjaXJjdW1zdGFuY2VzIGFuZCBwZXJzb25zCmludm9sdmVkIGluIHRoZSB2YXJpb3VzIGNhc2VzIGluIHdoaWNoIHRoZXkgd2VyZQplbmdhZ2VkLCBhbmQgb2JzZXJ2ZSB0aGUganVkZ21lbnQgYW5kIHBvd2VycyBvZgphcnJhbmdlbWVudCB3aGljaCB0aGV5IHJldmVhbCwgYW5kIHRoZSBtYW5uZXIKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjkxIiAvPgoKaW4gd2hpY2ggZXZlcnl0aGluZyB0aGV5IHNheSwgbm90IGV4Y2VwdGluZyB0aG9zZQpwb3J0aW9ucyBvZiB0aGVpciBzcGVlY2hlcyB3aGljaCBzZWVtIGRlc2lnbmVkCm1lcmVseSB0byBkZWxpZ2h0IHRoZWlyIGF1ZGllbmNlLCBpcyBjb25jZW50cmF0ZWQgb24Kc2VjdXJpbmcgdGhlIHZpY3Rvcnkgb3ZlciB0aGVpciBvcHBvbmVudHMuIFdlIG11c3QKbm90ZSB0aGVpciBwcm9jZWR1cmUgaW4gdGhlIGV4b3JkaXVtLCB0aGUgbWV0aG9kCmFuZCB2YXJpZXR5IG9mIHRoZWlyIHN0YXRlbWVudCBvZiBmYWN0cywgdGhlIHBvd2VyCmRpc3BsYXllZCBpbiBwcm9vZiBhbmQgcmVmdXRhdGlvbiwgdGhlIHNraWxsIHJldmVhbGVkCmluIHRoZWlyIGFwcGVhbCB0byBldmVyeSBraW5kIG9mIGVtb3Rpb24sIGFuZCB0aGUKbWFubmVyIGluIHdoaWNoIHRoZXkgbWFrZSB1c2Ugb2YgcG9wdWxhciBhcHBsYXVzZQp0byBzZXJ2ZSB0aGVpciBjYXNlLCBhcHBsYXVzZSB3aGljaCBpcyBtb3N0IGhvbm91cmFibGUgd2hlbiBpdCBpcyBzcG9udGFuZW91cyBhbmQgbm90IGRlbGliZXJhdGVseQpjb3VydGVkLiBJZiB3ZSBoYXZlIHRob3JvdWdobHkgYXBwcmVjaWF0ZWQgYWxsIHRoZXNlCnBvaW50cywgd2Ugc2hhbGwgYmUgYWJsZSB0byBpbWl0YXRlIG91ciBtb2RlbHMgd2l0aAphY2N1cmFjeS48L3RyYW5zbGF0aW9uPg=="
translation['10.2.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHRoZSBtYW4gd2hvIHRvIHRoZXNlIGdvb2QgcXVhbGl0aWVzCmFkZHMgaGlzIG93biwgdGhhdCBpcyB0byBzYXksIHdobyBtYWtlcyBnb29kIGRlZmljaWVuY2llcyBhbmQgY3V0cyBkb3duIHdoYXRldmVyIGlzIHJlZHVuZGFudCwgd2lsbApiZSB0aGUgcGVyZmVjdCBvcmF0b3Igb2Ygb3VyIHNlYXJjaDsgYW5kIGl0IGlzIG5vdwphYm92ZSBhbGwgdGltZXMgdGhhdCBzdWNoIHBlcmZlY3Rpb24gc2hvdWxkIGJlCmF0dGFpbmVkIHdoZW4gdGhlcmUgYXJlIGJlZm9yZSB1cyBzbyBtYW55IG1vcmUKbW9kZWxzIG9mIG9yYXRvcmljYWwgZXhjZWxsZW5jZSB0aGFuIHdlcmUgYXZhaWxhYmxlCmZvciB0aG9zZSB3aG8gaGF2ZSB0aHVzIGZhciBhY2hpZXZlZCB0aGUgaGlnaGVzdApzdWNjZXNzLiBGb3IgdGhpcyBnbG9yeSBhbHNvIHNoYWxsIGJlIHRoZWlycywgdGhhdAptZW4gc2hhbGwgc2F5IG9mIHRoZW0gdGhhdCB3aGlsZSB0aGV5IHN1cnBhc3NlZAp0aGVpciBwcmVkZWNlc3NvcnMsIHRoZXkgYWxzbyB0YXVnaHQgdGhvc2Ugd2hvIGNhbWUKYWZ0ZXIuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMyIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+U3VjaCBhcmUgdGhlIGFpZHMgd2hpY2ggd2UgbWF5IGRlcml2ZSBmcm9tCmV4dGVybmFsIHNvdXJjZXM7IGFzIHJlZ2FyZHMgdGhvc2Ugd2hpY2ggd2UgbXVzdApzdXBwbHkgZm9yIG91cnNlbHZlcywgaXQgaXMgdGhlIHBlbiB3aGljaCBicmluZ3MgYXQKb25jZSB0aGUgbW9zdCBsYWJvdXIgYW5kIHRoZSBtb3N0IHByb2ZpdC4gQ2ljZXJvIGlzCmZ1bGx5IGp1c3RpZmllZCBpbiBkZXNjcmliaW5nIGl0IGFzIHRoZSBiZXN0IHByb2R1Y2VyCmFuZCB0ZWFjaGVyIG9mIGVsb3F1ZW5jZSwgYW5kIGl0IG1heSBiZSBub3RlZAp0aGF0IGluIHRoZSA8aGkgcmVuZD0iaXRhbGljcyI+ZGUgT3JhdG9yZTwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+RGUgT3IuPC9oaT4gaS4gMTUwLjwvbm90ZT4gaGUgc3VwcG9ydHMgaGlzIG93bgpqdWRnbWVudCBieSB0aGUgYXV0aG9yaXR5IG9mIEx1Y2l1cyBDcmFzc3VzLCBpbgp3aG9zZSBtb3V0aCBoZSBwbGFjZXMgdGhpcyByZW1hcmsuPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBXZSBtdXN0Cgo8cGIgaWQ9InAuOTMiIC8+Cgp0aGVyZWZvcmUgd3JpdGUgYXMgbXVjaCBhcyBwb3NzaWJsZSBhbmQgd2l0aCB0aGUKdXRtb3N0IGNhcmUuIEZvciBhcyBkZWVwIHBsb3VnaGluZyBtYWtlcyB0aGUgc29pbAptb3JlIGZlcnRpbGUgZm9yIHRoZSBwcm9kdWN0aW9uIGFuZCBzdXBwb3J0IG9mIGNyb3BzLApzbywgaWYgd2UgaW1wcm92ZSBvdXIgbWluZHMgYnkgc29tZXRoaW5nIG1vcmUgdGhhbgptZXJlIHN1cGVyZmljaWFsIHN0dWR5LCB3ZSBzaGFsbCBwcm9kdWNlIGEgcmljaGVyCmdyb3d0aCBvZiBrbm93bGVkZ2UgYW5kIHNoYWxsIHJldGFpbiBpdCB3aXRoIGdyZWF0ZXIKYWNjdXJhY3kuIEZvciB3aXRob3V0IHRoZSBjb25zY2lvdXNuZXNzIG9mIHN1Y2gKcHJlbGltaW5hcnkgc3R1ZHkgb3VyIHBvd2VycyBvZiBzcGVha2luZyBleHRlbXBvcmUKd2lsbCBnaXZlIHVzIG5vdGhpbmcgYnV0IGFuIGVtcHR5IGZsb3cgb2Ygd29yZHMsCnNwcmluZ2luZyBmcm9tIHRoZSBsaXBzIGFuZCBub3QgZnJvbSB0aGUgYnJhaW4uPG1pbGVzdG9uZSBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBJdAppcyBpbiB3cml0aW5nIHRoYXQgZWxvcXVlbmNlIGhhcyBpdHMgcm9vdHMgYW5kIGZvdW5kYXRpb25zLCBpdCBpcyB3cml0aW5nIHRoYXQgcHJvdmlkZXMgdGhhdCBob2x5IG9mIGhvbGllcwp3aGVyZSB0aGUgd2VhbHRoIG9mIG9yYXRvcnkgaXMgc3RvcmVkLCBhbmQgd2hlbmNlIGl0CmlzIHByb2R1Y2VkIHRvIG1lZXQgdGhlIGRlbWFuZHMgb2Ygc3VkZGVuIGVtZXJnZW5jaWVzLiBJdCBpcyBvZiB0aGUgZmlyc3QgaW1wb3J0YW5jZSB0aGF0IHdlIHNob3VsZApkZXZlbG9wIHN1Y2ggc3RyZW5ndGggYXMgd2lsbCBub3QgZmFpbnQgdW5kZXIgdGhlCnRvaWwgb2YgZm9yZW5zaWMgc3RyaWZlIG5vciBiZSBleGhhdXN0ZWQgYnkgY29udGludWFsCnVzZS48bWlsZXN0b25lIG49IjQiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBpdCBpcyBhbiBvcmRpbmFuY2Ugb2YgbmF0dXJlIHRoYXQgbm90aGluZwpncmVhdCBjYW4gYmUgYWNoaWV2ZWQgaW4gYSBtb21lbnQsIGFuZCB0aGF0IGFsbCB0aGUKZmFpcmVzdCB0YXNrcyBhcmUgYXR0ZW5kZWQgd2l0aCBkaWZmaWN1bHR5LCB3aGlsZSBvbgpiaXJ0aHMgYXMgd2VsbCBzaGUgaGFzIGltcG9zZWQgdGhpcyBsYXcsIHRoYXQgdGhlCmxhcmdlciB0aGUgYW5pbWFsLCB0aGUgbG9uZ2VyIHNob3VsZCBiZSB0aGUgcGVyaW9kIG9mCmdlc3RhdGlvbi48L3A+CjwvdHJhbnNsYXRpb24+"
translation['10.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['10.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPlN1Y2ggYXJlIHRoZSBhaWRzIHdoaWNoIHdlIG1heSBkZXJpdmUgZnJvbQpleHRlcm5hbCBzb3VyY2VzOyBhcyByZWdhcmRzIHRob3NlIHdoaWNoIHdlIG11c3QKc3VwcGx5IGZvciBvdXJzZWx2ZXMsIGl0IGlzIHRoZSBwZW4gd2hpY2ggYnJpbmdzIGF0Cm9uY2UgdGhlIG1vc3QgbGFib3VyIGFuZCB0aGUgbW9zdCBwcm9maXQuIENpY2VybyBpcwpmdWxseSBqdXN0aWZpZWQgaW4gZGVzY3JpYmluZyBpdCBhcyB0aGUgYmVzdCBwcm9kdWNlcgphbmQgdGVhY2hlciBvZiBlbG9xdWVuY2UsIGFuZCBpdCBtYXkgYmUgbm90ZWQKdGhhdCBpbiB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3JhdG9yZTwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkRlIE9yLjwvaGk+IGkuIDE1MC48L25vdGU+IGhlIHN1cHBvcnRzIGhpcyBvd24KanVkZ21lbnQgYnkgdGhlIGF1dGhvcml0eSBvZiBMdWNpdXMgQ3Jhc3N1cywgaW4Kd2hvc2UgbW91dGggaGUgcGxhY2VzIHRoaXMgcmVtYXJrLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkRlIE9yLjwvaGk+IGkuIDE1MC48L3RyYW5zbGF0aW9uPg=="
translation['10.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBXZSBtdXN0Cgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC45MyIgLz4KCnRoZXJlZm9yZSB3cml0ZSBhcyBtdWNoIGFzIHBvc3NpYmxlIGFuZCB3aXRoIHRoZQp1dG1vc3QgY2FyZS4gRm9yIGFzIGRlZXAgcGxvdWdoaW5nIG1ha2VzIHRoZSBzb2lsCm1vcmUgZmVydGlsZSBmb3IgdGhlIHByb2R1Y3Rpb24gYW5kIHN1cHBvcnQgb2YgY3JvcHMsCnNvLCBpZiB3ZSBpbXByb3ZlIG91ciBtaW5kcyBieSBzb21ldGhpbmcgbW9yZSB0aGFuCm1lcmUgc3VwZXJmaWNpYWwgc3R1ZHksIHdlIHNoYWxsIHByb2R1Y2UgYSByaWNoZXIKZ3Jvd3RoIG9mIGtub3dsZWRnZSBhbmQgc2hhbGwgcmV0YWluIGl0IHdpdGggZ3JlYXRlcgphY2N1cmFjeS4gRm9yIHdpdGhvdXQgdGhlIGNvbnNjaW91c25lc3Mgb2Ygc3VjaApwcmVsaW1pbmFyeSBzdHVkeSBvdXIgcG93ZXJzIG9mIHNwZWFraW5nIGV4dGVtcG9yZQp3aWxsIGdpdmUgdXMgbm90aGluZyBidXQgYW4gZW1wdHkgZmxvdyBvZiB3b3JkcywKc3ByaW5naW5nIGZyb20gdGhlIGxpcHMgYW5kIG5vdCBmcm9tIHRoZSBicmFpbi48L3RyYW5zbGF0aW9uPg=="
translation['10.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBJdAppcyBpbiB3cml0aW5nIHRoYXQgZWxvcXVlbmNlIGhhcyBpdHMgcm9vdHMgYW5kIGZvdW5kYXRpb25zLCBpdCBpcyB3cml0aW5nIHRoYXQgcHJvdmlkZXMgdGhhdCBob2x5IG9mIGhvbGllcwp3aGVyZSB0aGUgd2VhbHRoIG9mIG9yYXRvcnkgaXMgc3RvcmVkLCBhbmQgd2hlbmNlIGl0CmlzIHByb2R1Y2VkIHRvIG1lZXQgdGhlIGRlbWFuZHMgb2Ygc3VkZGVuIGVtZXJnZW5jaWVzLiBJdCBpcyBvZiB0aGUgZmlyc3QgaW1wb3J0YW5jZSB0aGF0IHdlIHNob3VsZApkZXZlbG9wIHN1Y2ggc3RyZW5ndGggYXMgd2lsbCBub3QgZmFpbnQgdW5kZXIgdGhlCnRvaWwgb2YgZm9yZW5zaWMgc3RyaWZlIG5vciBiZSBleGhhdXN0ZWQgYnkgY29udGludWFsCnVzZS48L3RyYW5zbGF0aW9uPg=="
translation['10.3.4'] = ""
translation['10.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiBBdCBmaXJzdCwgb3VyIHBlbiBtdXN0IGJlIHNsb3cgeWV0IHN1cmU6IHdlCm11c3Qgc2VhcmNoIGZvciB3aGF0IGlzIGJlc3QgYW5kIHJlZnVzZSB0byBnaXZlIGEKam95ZnVsIHdlbGNvbWUgdG8gZXZlcnkgdGhvdWdodCB0aGUgbW9tZW50IHRoYXQKaXQgcHJlc2VudHMgaXRzZWxmOyB3ZSBtdXN0IGZpcnN0IGNyaXRpY2lzZSB0aGUgZnJ1aXRzIG9mCm91ciBpbWFnaW5hdGlvbiwgYW5kIHRoZW4sIG9uY2UgYXBwcm92ZWQsIGFycmFuZ2UKdGhlbSB3aXRoIGNhcmUuIEZvciB3ZSBtdXN0IHNlbGVjdCBib3RoIHRob3VnaHRzCmFuZCB3b3JkcyBhbmQgd2VpZ2ggdGhlbSBvbmUgYnkgb25lLiBUaGlzIGRvbmUsCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC45NSIgLz4KCndlIG11c3QgY29uc2lkZXIgdGhlIG9yZGVyIGluIHdoaWNoIHRoZXkgc2hvdWxkIGJlCnBsYWNlZCwgYW5kIG11c3QgZXhhbWluZSBhbGwgdGhlIHBvc3NpYmxlIHZhcmlldGllcwpvZiByaHl0aG0sIHJlZnVzaW5nIG5lY2Vzc2FyaWx5IHRvIHBsYWNlIGVhY2ggd29yZCBpbgp0aGUgb3JkZXIgaW4gd2hpY2ggaXQgb2NjdXJzIHRvIHVzLjwvdHJhbnNsYXRpb24+"
translation['10.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBJbiBvcmRlciB0byBkbwp0aGlzIHdpdGggdGhlIHV0bW9zdCBjYXJlLCB3ZSBtdXN0IGZyZXF1ZW50bHkgcmV2aXNlCndoYXQgd2UgaGF2ZSBqdXN0IHdyaXR0ZW4uIEZvciBiZXNpZGUgdGhlIGZhY3QgdGhhdAp0aHVzIHdlIHNlY3VyZSBhIGJldHRlciBjb25uZXhpb24gYmV0d2VlbiB3aGF0CmZvbGxvd3MgYW5kIHdoYXQgcHJlY2VkZXMsIHRoZSB3YXJtdGggb2YgdGhvdWdodAp3aGljaCBoYXMgY29vbGVkIGRvd24gd2hpbGUgd2Ugd2VyZSB3cml0aW5nIGlzCnJldml2ZWQgYW5ldywgYW5kIGdhdGhlcnMgZnJlc2ggaW1wZXR1cyBmcm9tIGdvaW5nCm92ZXIgdGhlIGdyb3VuZCBhZ2Fpbi4gV2UgbWF5IGNvbXBhcmUgdGhpcyBwcm90ZXNzIHdpdGggd2hhdCBvY2N1cnMgaW4ganVtcGluZyBtYXRjaGVzLiBUaGUKY29tcGV0aXRvcnMgdGFrZSBhIGxvbmdlciBydW4gYW5kIGdvIGF0IGZ1bGwgc3BlZWQKdG8gY2xlYXIgdGhlIGRpc3RhbmNlIHdoaWNoIHRoZXkgYWltIGF0IGNvdmVyaW5nOwpzaW1pbGFybHksIGluIHRocm93aW5nIHRoZSBqYXZlbGluLCB3ZSBkcmF3IGJhY2sgb3VyCmFybXMsIGFuZCBpbiBhcmNoZXJ5IHB1bGwgYmFjayB0aGUgYm93LXN0cmluZyB0bwpwcm9wZWwgdGhlIHNoYWZ0LjwvdHJhbnNsYXRpb24+"
translation['10.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBBdCB0aW1lcywgaG93ZXZlciwgd2UgbWF5CnNwcmVhZCBvdXIgc2FpbHMgYmVmb3JlIHRoZSBmYXZvdXJpbmcgYnJlZXplLCBidXQgd2UKbXVzdCBiZXdhcmUgdGhhdCB0aGlzIGluZHVsZ2VuY2UgZG9lcyBub3QgbGVhZCB1cwppbnRvIGVycm9yLiBGb3Igd2UgbG92ZSBhbGwgdGhlIG9mZnNwcmluZyBvZiBvdXIKdGhvdWdodCBhdCB0aGUgbW9tZW50IG9mIHRoZWlyIGJpcnRoOyB3ZXJlIHRoYXQKbm90IHNvLCB3ZSBzaG91bGQgbmV2ZXIgY29tbWl0IHRoZW0gdG8gd3JpdGluZy4KQnV0IHdlIG11c3QgZ2l2ZSB0aGVtIGEgY3JpdGljYWwgcmV2aXNpb24sIGFuZCBnbwpjYXJlZnVsbHkgb3ZlciBhbnkgcGFzc2FnZSB3aGVyZSB3ZSBoYXZlIHJlYXNvbiB0bwpyZWdhcmQgb3VyIGZsdWVuY3kgd2l0aCBzdXNwaWNpb24uPC90cmFuc2xhdGlvbj4="
translation['10.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiBJdCBpcyB0aHVzLCB3ZQphcmUgdG9sZCwgdGhhdCBTYWxsdXN0IHdyb3RlLCBhbmQgY2VydGFpbmx5IGhpcyB3b3JrcwpnaXZlIGNsZWFyIGV2aWRlbmNlIG9mIHRoZSBsYWJvdXIgd2hpY2ggaGUgZXhwZW5kZWQKb24gdGhlbS4gQWdhaW4sIHdlIGxlYXJuIGZyb20gVmFyaXVzIHRoYXQgVmlyZ2lsCmNvbXBvc2VkIGJ1dCBhIHZlcnkgc21hbGwgbnVtYmVyIG9mIHZlcnNlcyBldmVyeQpkYXkuPC90cmFuc2xhdGlvbj4="
translation['10.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBJdCBpcyB0cnVlIHRoYXQgd2l0aCBvcmF0b3JzIHRoZSBjYXNlIGlzIHNvbWV3aGF0IGRpZmZlcmVudCwgYW5kIGl0IGlzIGZvciB0aGlzIHJlYXNvbiB0aGF0IEkKZW5qb2luIHN1Y2ggc2xvd25lc3Mgb2Ygc3BlZWQgYW5kIHN1Y2ggYW54aW91cyBjYXJlCmF0IHRoZSBvdXRzZXQuIEZvciB0aGUgZmlyc3QgYWltIHdoaWNoIHdlIG11c3QgZml4CmluIG91ciBtaW5kcyBhbmQgaW5zaXN0IG9uIGNhcnJ5aW5nIGludG8gZXhlY3V0aW9uCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC45NyIgLz4KCmlzIHRvIHdyaXRlIGFzIHdlbGwgYXMgcG9zc2libGU7IHNwZWVkIHdpbGwgY29tZSB3aXRoCnByYWN0aWNlLiBHcmFkdWFsbHkgdGhvdWdodHMgd2lsbCBzdWdnZXN0IHRoZW1zZWx2ZXMgd2l0aCBpbmNyZWFzaW5nIHJlYWRpbmVzcywgdGhlIHdvcmRzIHdpbGwKYW5zd2VyIHRvIG91ciBjYWxsIGFuZCByaHl0aG1pY2FsIGFycmFuZ2VtZW50IHdpbGwKZm9sbG93LCB0aWxsIGV2ZXJ5dGhpbmcgd2lsbCBiZSBmb3VuZCBmdWxmaWxsaW5nIGl0cwpwcm9wZXIgZnVuY3Rpb24gYXMgaW4gYSB3ZWxsLW9yZGVyZWQgaG91c2Vob2xkLgpUaGUgc3VtIG9mIHRoZSB3aG9sZSBtYXR0ZXIgaXMgdGhpczo8L3RyYW5zbGF0aW9uPg=="
translation['10.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz4gd3JpdGUgcXVpY2tseQphbmQgeW91IHdpbGwgbmV2ZXIgd3JpdGUgd2VsbCwgd3JpdGUgd2VsbCBhbmQgeW91CndpbGwgc29vbiB3cml0ZSBxdWlja2x5LiBCdXQgaXQgaXMganVzdCB3aGVuIHdlCmhhdmUgYWNxdWlyZWQgdGhpcyBmYWNpbGl0eSB0aGF0IHdlIG11c3QgcGF1c2UgYXdoaWxlCnRvIGxvb2sgYWhlYWQgYW5kLCBpZiBJIG1heSB1c2UgdGhlIG1ldGFwaG9yLCBjdXJiCnRoZSBob3JzZXMgdGhhdCB3b3VsZCBydW4gYXdheSB3aXRoIHVzLiBUaGlzIHdpbGwKbm90IGRlbGF5IG91ciBwcm9ncmVzcyBzbyBtdWNoIGFzIGxlbmQgdXMgZnJlc2gKdmlnb3VyLiBGb3IgSSBkbyBub3QgdGhpbmsgdGhhdCB0aG9zZSB3aG8gaGF2ZQphY3F1aXJlZCBhIGNlcnRhaW4gcG93ZXIgaW4gd3JpdGluZyBzaG91bGQgYmUgY29uZGVtbmVkIHRvIHRoZSBiYXJyZW4gcGFpbnMgb2YgZmFsc2Ugc2VsZi1jcml0aWNpc20uCjwvdHJhbnNsYXRpb24+"
translation['10.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Ib3cgY2FuIGFueW9uZSBmdWxmaWwgaGlzIGR1dGllcyBhcyBhbiBhZHZvY2F0ZSBpZiBoZQp3YXN0ZXMgaGlzIHRpbWUgaW4gcHV0dGluZyB1bm5lY2Vzc2FyeSBmaW5pc2ggb24gZWFjaApwb3J0aW9uIG9mIGhpcyBwbGVhZGluZ3M/IFRoZXJlIGFyZSBzb21lIHdobyBhcmUKbmV2ZXIgc2F0aXNmaWVkLiBUaGV5IHdpc2ggdG8gY2hhbmdlIGV2ZXJ5dGhpbmcKdGhleSBoYXZlIHdyaXR0ZW4gYW5kIHRvIHB1dCBpdCBpbiBvdGhlciB3b3Jkcy4KVGhleSBhcmUgYSBkaWZmaWRlbnQgZm9saywgYW5kIGRlc2VydmUgYnV0IGlsbCBvZiB0aGVpcgpvd24gdGFsZW50cywgd2hvIHRoaW5rIGl0IGEgbWFyayBvZiBwcmVjaXNpb24gdG8gY2FzdApvYnN0YWNsZXMgaW4gdGhlIHdheSBvZiB0aGVpciBvd24gd3JpdGluZy48L3RyYW5zbGF0aW9uPg=="
translation['10.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gTm9yIGlzIGl0CmVhc3kgdG8gc2F5IHdoaWNoIGFyZSB0aGUgbW9zdCBzZXJpb3VzIG9mZmVuZGVycywgdGhvc2UKd2hvIGFyZSBzYXRpc2ZpZWQgd2l0aCBldmVyeXRoaW5nIG9yIHRob3NlIHdobyBhcmUKc2F0aXNmaWVkIHdpdGggbm90aGluZyB0aGF0IHRoZXkgd3JpdGUuIEZvciBpdCBpcwpvZiBjb21tb24gb2NjdXJyZW5jZSB3aXRoIHlvdW5nIG1lbiwgaG93ZXZlcgp0YWxlbnRlZCB0aGV5IG1heSBiZSwgdG8gd2FzdGUgdGhlaXIgZ2lmdHMgYnkgc3VwZXJmbHVvdXMgZWxhYm9yYXRpb24sIGFuZCB0byBzaW5rIGludG8gc2lsZW5jZSB0aHJvdWdoCmFuIGV4Y2Vzc2l2ZSBkZXNpcmUgdG8gc3BlYWsgd2VsbC4gSSByZW1lbWJlciBpbgp0aGlzIGNvbm5leGlvbiBhIHN0b3J5IHRoYXQgSnVsaXVzIFNlY3VuZHVzLCBteSBjb250ZW1wb3JhcnksIGFuZCwgYXMgaXMgd2VsbCBrbm93biwgbXkgdmVyeSBkZWFyIGZyaWVuZCwKYSBtYW4gd2l0aCByZW1hcmthYmxlIHBvd2VycyBvZiBlbG9xdWVuY2UsIGJ1dAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuOTkiIC8+Cgp3aXRoIGFuIGluZmluaXRlIHBhc3Npb24gZm9yIHByZWNpc2lvbiwgdG9sZCBtZSBvZiB0aGUKd29yZHMgb25jZSB1c2VkIHRvIGhpbSBieSBoaXMgdW5jbGUsPC90cmFuc2xhdGlvbj4="
translation['10.3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gSnVsaXVzIEZsb3J1cywKdGhlIGxlYWRpbmcgb3JhdG9yIG9mIEdhdWwsIGZvciBpdCB3YXMgdGhlcmUgdGhhdCBoZQpwcmFjdGlzZWQsIGEgbWFuIGVsb3F1ZW50IGFzIGJ1dCBmZXcgaGF2ZSBldmVyCmJlZW4sIGFuZCB3b3J0aHkgb2YgaGlzIG5lcGhldy4gSGUgb25jZSBub3RpY2VkCnRoYXQgU2VjdW5kdXMsIHdobyB3YXMgc3RpbGwgYSBzdHVkZW50LCB3YXMgbG9va2luZwpkZXByZXNzZWQsIGFuZCBhc2tlZCBoaW0gdGhlIG1lYW5pbmcgb2YgaGlzIGZyb3ducy4KVGhlIHlvdXRoIG1hZGUgbm8gY29uY2VhbG1lbnQgb2YgdGhlIHJlYXNvbjo8L3RyYW5zbGF0aW9uPg=="
translation['10.3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz4gaGUKaGFkIGJlZW4gd29ya2luZyBmb3IgdGhyZWUgZGF5cywgYW5kIGhhZCBiZWVuIHVuYWJsZSwgaW4gc3BpdGUgb2YgYWxsIGhpcyBlZmZvcnRzLCB0byBkZXZpc2UgYW4gZXhvcmRpdW0KZm9yIHRoZSB0aGVtZSB3aGljaCBoZSBoYWQgYmVlbiBnaXZlbiB0byB3cml0ZSwKd2l0aCB0aGUgcmVzdWx0IHRoYXQgaGUgd2FzIG5vdCBvbmx5IHZleGVkIG92ZXIKaGlzIGltbWVkaWF0ZSBkaWZmaWN1bHR5LCBidXQgaGFkIGxvc3QgYWxsIGhvcGUgb2YKZnV0dXJlIHN1Y2Nlc3MuIEZsb3J1cyBzbWlsZWQgYW5kIHNhaWQsIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkRvIHlvdQpyZWFsbHkgd2FudCB0byBzcGVhayBiZXR0ZXIgdGhhbiB5b3UgY2FuPzwvcXVvdGU+PC90cmFuc2xhdGlvbj4="
translation['10.3.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmUKbGllcyB0aGUgdHJ1dGggb2YgdGhlIHdob2xlIG1hdHRlci4gV2UgbXVzdCBhaW0KYXQgc3BlYWtpbmcgYXMgd2VsbCBhcyB3ZSBjYW4sIGJ1dCBtdXN0IG5vdCB0cnkgdG8Kc3BlYWsgYmV0dGVyIHRoYW4gb3VyIG5hdHVyZSB3aWxsIHBlcm1pdC4gRm9yIHRvCm1ha2UgYW55IHJlYWwgYWR2YW5jZSB3ZSBuZWVkIHN0dWR5LCBub3Qgc2VsZmFjY3VzYXRpb24uIEFuZCBpdCBpcyBub3QgbWVyZWx5IHByYWN0aWNlIHRoYXQgd2lsbAplbmFibGUgdXMgdG8gd3JpdGUgYXQgZ3JlYXRlciBsZW5ndGggYW5kIHdpdGgKaW5jcmVhc2VkIGZsdWVuY3ksIGFsdGhvdWdoIGRvdWJ0bGVzcyBwcmFjdGljZSBpcwptb3N0IGltcG9ydGFudC4gV2UgbmVlZCBqdWRnZW1lbnQgYXMgd2VsbC4gU28KbG9uZyBhcyB3ZSBkbyBub3QgaGUgYmFjayB3aXRoIGV5ZXMgdHVybmVkIHVwIHRvIHRoZQpjZWlsaW5nLCB0cnlpbmcgdG8gZmlyZSBvdXIgaW1hZ2luYXRpb24gYnkgbXV0dGVyaW5nCnRvIG91cnNlbHZlcywgaW4gdGhlIGhvcGUgdGhhdCBzb21ldGhpbmcgd2lsbCBwcmVzZW50Cml0c2VsZiwgYnV0IHR1cm4gb3VyIHRob3VnaHRzIHRvIGNvbnNpZGVyIHdoYXQgdGhlCmNpcmN1bXN0YW5jZXMgb2YgdGhlIGNhc2UgZGVtYW5kLCB3aGF0IHN1aXRzIHRoZQpjaGFyYWN0ZXJzIGludm9sdmVkLCB3aGF0IGlzIHRoZSBuYXR1cmUgb2YgdGhlIG9jY2FzaW9uIGFuZCB0aGUgdGVtcGVyIG9mIHRoZSBqdWRnZSwgd2Ugc2hhbGwgYWNxdWlyZQp0aGUgcG93ZXIgb2Ygd3JpdGluZyBieSByYXRpb25hbCBtZWFucy4gSXQgaXMgdGh1cwp0aGF0IG5hdHVyZSBoZXJzZWxmIGJpZHMgdXMgYmVnaW4gYW5kIHB1cnN1ZSBvdXIKc3R1ZGllcyBvbmNlIHdlbGwgYmVndW4uPC90cmFuc2xhdGlvbj4="
translation['10.3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIG1vc3QgcG9pbnRzIGFyZSBvZiBhCmRlZmluaXRlIGNoYXJhY3RlciBhbmQsIGlmIHdlIGtlZXAgb3VyIGV5ZXMgb3BlbiwKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjEwMSIgLz4KCndpbGwgc3BvbnRhbmVvdXNseSBwcmVzZW50IHRoZW1zZWx2ZXMuIFRoYXQgaXMgdGhlCnJlYXNvbiB3aHkgcGVhc2FudHMgYW5kIHVuZWR1Y2F0ZWQgcGVyc29ucyBkbyBub3QKYmVhdCBhYm91dCB0aGUgYnVzaCB0byBkaXNjb3ZlciB3aXRoIHdoYXQgdGhleQpzaG91bGQgYmVnaW4sIGFuZCBvdXIgaGVzaXRhdGlvbiBpcyBhbGwgdGhlIG1vcmUKc2hhbWVmdWwgaWYgaXQgaXMgc2ltcGx5IHRoZSByZXN1bHQgb2YgZWR1Y2F0aW9uLgpXZSBtdXN0IG5vdCwgdGhlcmVmb3JlLCBwZXJzaXN0IGluIHRoaW5raW5nIHRoYXQKd2hhdCBpcyBoYXJkIHRvIGZpbmQgaXMgbmVjZXNzYXJpbHkgYmVzdDsgZm9yLCBpZiBpdApzZWVtcyB0byB1cyB0aGF0IHRoZXJlIGlzIG5vdGhpbmcgdG8gYmUgc2FpZCBleGNlcHQKdGhhdCB3aGljaCB3ZSBhcmUgdW5hYmxlIHRvIGZpbmQsIHdlIG11c3Qgc2F5Cm5vdGhpbmcgYXQgYWxsLjwvdHJhbnNsYXRpb24+"
translation['10.3.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz4gT24gdGhlIG90aGVyIGhhbmQsIHRoZXJlIGlzIGEgZmF1bHQKd2hpY2ggaXMgcHJlY2lzZWx5IHRoZSBvcHBvc2l0ZSBvZiB0aGlzLCBpbnRvIHdoaWNoCnRob3NlIGZhbGwgd2hvIGluc2lzdCBvbiBmaXJzdCBtYWtpbmcgYSByYXBpZCBkcmFmdApvZiB0aGVpciBzdWJqZWN0IHdpdGggdGhlIHV0bW9zdCBzcGVlZCBvZiB3aGljaAp0aGVpciBwZW4gaXMgY2FwYWJsZSwgYW5kIHdyaXRlIGluIHRoZSBoZWF0IGFuZAppbXB1bHNlIG9mIHRoZSBtb21lbnQuIFRoZXkgY2FsbCB0aGlzIHRoZWlyIHJvdWdoCmNvcHkuIFRoZXkgdGhlbiByZXZpc2Ugd2hhdCB0aGV5IGhhdmUgd3JpdHRlbiwKYW5kIGFycmFuZ2UgdGhlaXIgaGFzdHkgb3V0cG91cmluZ3MuIEJ1dCB3aGlsZQp0aGUgd29yZHMgYW5kIHRoZSByaHl0aG0gbWF5IGJlIGNvcnJlY3RlZCwgdGhlCm1hdHRlciBpcyBzdGlsbCBtYXJrZWQgYnkgdGhlIHN1cGVyZmljaWFsaXR5IHJlc3VsdGluZwpmcm9tIHRoZSBzcGVlZCB3aXRoIHdoaWNoIGl0IHdhcyB0aHJvd24gdG9nZXRoZXIuCjwvdHJhbnNsYXRpb24+"
translation['10.3.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbW9yZSBjb3JyZWN0IG1ldGhvZCBpcywgdGhlcmVmb3JlLCB0byBleGVyY2lzZQpjYXJlIGZyb20gdGhlIHZlcnkgYmVnaW5uaW5nLCBhbmQgdG8gZm9ybSB0aGUKd29yayBmcm9tIHRoZSBvdXRzZXQgaW4gc3VjaCBhIG1hbm5lciB0aGF0IGl0Cm1lcmVseSByZXF1aXJlcyB0byBiZSBjaGlzZWxsZWQgaW50byBzaGFwZSwgbm90CmZhc2hpb25lZCBhbmV3LiBTb21ldGltZXMsIGhvd2V2ZXIsIHdlIG11c3QKZm9sbG93IHRoZSBzdHJlYW0gb2Ygb3VyIGVtb3Rpb25zLCBzaW5jZSB0aGVpcgp3YXJtdGggd2lsbCBnaXZlIHVzIG1vcmUgdGhhbiBhbnkgZGlsaWdlbmNlIGNhbgpzZWN1cmUuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTkiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIGNvbmRlbW5hdGlvbiB3aGljaCBJIGhhdmUgcGFzc2VkIG9uIHN1Y2gKY2FyZWxlc3NuZXNzIGluIHdyaXRpbmcgd2lsbCBtYWtlIGl0IHByZXR0eSBjbGVhciB3aGF0Cm15IHZpZXdzIGFyZSBvbiB0aGUgbHV4dXJ5IG9mIGRpY3RhdGlvbiB3aGljaAppcyBub3cgc28gZmFzaGlvbmFibGUuIEZvciwgd2hlbiB3ZSB3cml0ZSwgaG93ZXZlcgpncmVhdCBvdXIgc3BlZWQsIHRoZSBmYWN0IHRoYXQgdGhlIGhhbmQgY2Fubm90IGZvbGxvdwp0aGUgcmFwaWRpdHkgb2Ygb3VyIHRob3VnaHRzIGdpdmVzIHVzIHRpbWUgdG8gdGhpbmssCgo8cGIgaWQ9InAuMTAzIiAvPgoKd2hlcmVhcyB0aGUgcHJlc2VuY2Ugb2Ygb3VyIGFtYW51ZW5zaXMgaHVycmllcyB1cwpvbiwgYW5kIGF0IHRpbWVzIHdlIGZlZWwgYXNoYW1lZCB0byBoZXNpdGF0ZSBvcgpwYXVzZSwgb3IgbWFrZSBzb21lIGFsdGVyYXRpb24sIGFzIHRob3VnaCB3ZSB3ZXJlCmFmcmFpZCB0byBkaXNwbGF5IHN1Y2ggd2Vha25lc3MgYmVmb3JlIGEgd2l0bmVzcy4KPG1pbGVzdG9uZSBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBhIHJlc3VsdCBvdXIgbGFuZ3VhZ2UgdGVuZHMgbm90IG1lcmVseSB0byBiZQpoYXBoYXphcmQgYW5kIGZvcm1sZXNzLCBidXQgaW4gb3VyIGRlc2lyZSB0byBwcm9kdWNlCmEgY29udGludW91cyBmbG93IHdlIGxldCBzbGlwIHBvc2l0aXZlIGltcHJvcHJpZXRpZXMKb2YgZGljdGlvbiwgd2hpY2ggc2hvdyBuZWl0aGVyIHRoZSBwcmVjaXNpb24gb2YgdGhlCndyaXRlciBub3IgdGhlIGltcGV0dW9zaXR5IG9mIHRoZSBzcGVha2VyLiBBZ2FpbiwgaWYKdGhlIGFtYW51ZW5zaXMgaXMgYSBzbG93IHdyaXRlciwgb3IgbGFja2luZyBpbiBpbnRlbGxpZ2VuY2UsIGhlIGJlY29tZXMgYSBzdHVtYmxpbmctYmxvY2ssIG91ciBzcGVlZCBpcwpjaGVja2VkLCBhbmQgdGhlIHRocmVhZCBvZiBvdXIgaWRlYXMgaXMgaW50ZXJydXB0ZWQKYnkgdGhlIGRlbGF5IG9yIGV2ZW4gcGVyaGFwcyBieSB0aGUgbG9zcyBvZgp0ZW1wZXIgdG8gd2hpY2ggaXQgZ2l2ZXMgcmlzZS48bWlsZXN0b25lIG49IjIxIiB1bml0PSJzZWN0aW9uIiAvPiBNb3Jlb3ZlciwgdGhlCmdlc3R1cmVzIHdoaWNoIGFjY29tcGFueSBzdHJvbmcgZmVlbGluZywgYW5kIHNvbWV0aW1lcyBldmVuIHNlcnZlIHRvIHN0aW11bGF0ZSB0aGUgbWluZCwgdGhlIHdhdmluZwpvZiB0aGUgaGFuZCwgdGhlIGNvbnRyYWN0aW9uIG9mIHRoZSBicm93LCB0aGUKb2NjYXNpb25hbCBzdHJpa2luZyBvZiBmb3JlaGVhZCBvciBzaWRlLCBhbmQgdGhvc2UKd2hpY2ggUGVyc2l1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+aS4gMTA2Ljwvbm90ZT4gbm90ZXMgd2hlbiBoZSBkZXNjcmliZXMgYSB0cml2aWFsCnN0eWxlIGFzIG9uZSB0aGF0Cgo8cXVvdGUgcmVuZD0iYmxvY2txdW90ZSI+CjxsPjxxdW90ZT5UaHVtcHMgbm90IHRoZSBkZXNrIG5vciBzbWFja3Mgb2YgYml0dGVuIG5haWxzLDwvcXVvdGU+PC9sPjwvcXVvdGU+CgphbGwgdGhlc2UgYmVjb21lIHJpZGljdWxvdXMsIHVubGVzcyB3ZSBhcmUgYWxvbmUsCkZpbmFsbHksPG1pbGVzdG9uZSBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gd2UgY29tZSB0byB0aGUgbW9zdCBpbXBvcnRhbnQgY29uc2lkZXJhdGlvbiBvZiBhbGwsIHRoYXQgdGhlIGFkdmFudGFnZXMgb2YgcHJpdmFjeSBhcmUgbG9zdAp3aGVuIHdlIGRpY3RhdGUuIEV2ZXJ5b25lLCBob3dldmVyLCB3aWxsIGFncmVlCnRoYXQgdGhlIGFic2VuY2Ugb2YgY29tcGFueSBhbmQgZGVlcCBzaWxlbmNlIGFyZQptb3N0IGNvbmR1Y2l2ZSB0byB3cml0aW5nLCB0aG91Z2ggSSB3b3VsZCBub3QgZ28Kc28gZmFyIGFzIHRvIGNvbmN1ciBpbiB0aGUgb3BpbmlvbiBvZiB0aG9zZSB3aG8gdGhpbmsKd29vZHMgYW5kIGdyb3ZlcyB0aGUgbW9zdCBzdWl0YWJsZSBsb2NhbGl0aWVzIGZvcgp0aGUgcHVycG9zZSwgb24gdGhlIGdyb3VuZCB0aGF0IHRoZSBmcmVlZG9tIG9mCnRoZSBza3kgYW5kIHRoZSBjaGFybSBvZiB0aGUgc3Vycm91bmRpbmdzIHByb2R1Y2UKc3VibGltaXR5IG9mIHRob3VnaHQgYW5kIHdlYWx0aCBvZiBpbnNwaXJhdGlvbi4KPG1pbGVzdG9uZSBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5QZXJzb25hbGx5IEkgcmVnYXJkIHN1Y2ggYW4gZW52aXJvbm1lbnQgYXMgYQoKPHBiIGlkPSJwLjEwNSIgLz4KCnBsZWFzYW50IGx1eHVyeSByYXRoZXIgdGhhbiBhIHN0aW11bHVzIHRvIHN0dWR5LgpGb3Igd2hhdGV2ZXIgY2F1c2VzIHVzIGRlbGlnaHQsIG11c3QgbmVjZXNzYXJpbHkKZGlzdHJhY3QgdXMgZnJvbSB0aGUgY29uY2VudHJhdGlvbiBkdWUgdG8gb3VyIHdvcmsuClRoZSBtaW5kIGNhbm5vdCBkZXZvdGUgaXRzIHVuZGl2aWRlZCBhbmQgc2luY2VyZQphdHRlbnRpb24gdG8gYSBudW1iZXIgb2YgdGhpbmdzIGF0IHRoZSBzYW1lIHRpbWUsCmFuZCB3aGVyZXZlciBpdCB0dXJucyBpdHMgZ2F6ZSBpdCBtdXN0IGNlYXNlIHRvCmNvbnRlbXBsYXRlIGl0cyBhcHBvaW50ZWQgdGFzay48bWlsZXN0b25lIG49IjI0IiB1bml0PSJzZWN0aW9uIiAvPiBUaGVyZWZvcmUsIHRoZQpjaGFybSBvZiB0aGUgd29vZHMsIHRoZSBnbGlkaW5nIG9mIHRoZSBzdHJlYW0sIHRoZQpicmVlemUgdGhhdCBtdXJtdXJzIGluIHRoZSBicmFuY2hlcywgdGhlIHNvbmcgb2YKYmlyZHMsIGFuZCB0aGUgdmVyeSBmcmVlZG9tIHdpdGggd2hpY2ggb3VyIGV5ZXMKbWF5IHJhbmdlLCBhcmUgbWVyZSBkaXN0cmFjdGlvbnMsIGFuZCBpbiBteSBvcGluaW9uCnRoZSBwbGVhc3VyZSB3aGljaCB0aGV5IGV4Y2l0ZSBpcyBtb3JlIGxpa2VseSB0bwpyZWxheCB0aGFuIHRvIGNvbmNlbnRyYXRlIG91ciBhdHRlbnRpb24uPG1pbGVzdG9uZSBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz4gRGVtb3N0aGVuZXMgdG9vayBhIHdpc2VyIHZpZXc7IGZvciBoZSB3b3VsZCByZXRpcmUgdG8KYSBwbGFjZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+QW4gdW5kZXJncm91bmQgcm9vbS4gU2VlIFBsdXQuIDxoaSByZW5kPSJpdGFsaWNzIj5EZW0uPC9oaT4gdmlpLjwvbm90ZT4gd2hlcmUgbm8gdm9pY2Ugd2FzIHRvIGJlIGhlYXJkLCBhbmQgbm8KcHJvc3BlY3QgZ3JlZXRlZCB0aGUgc2lnaHQsIGZvciBmZWFyIHRoYXQgaGlzIGV5ZXMKbWlnaHQgZm9yY2UgaGlzIG1pbmQgdG8gbmVnbGVjdCBpdHMgZHV0eS4gVGhlcmVmb3JlLCBsZXQgdGhlIGJ1cm5lciBvZiB0aGUgbWlkbmlnaHQgb2lsIHNlY2x1ZGUKaGltc2VsZiBpbiB0aGUgc2lsZW5jZSBvZiBuaWdodCwgd2l0aGluIGNsb3NlZCBkb29ycywKd2l0aCBidXQgYSBzb2xpdGFyeSBsYW1wIHRvIGxpZ2h0IGhpcyBsYWJvdXJzLjxtaWxlc3RvbmUgbj0iMjYiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dApmb3IgZXZlcnkga2luZCBvZiBzdHVkeSwgYW5kIG1vcmUgZXNwZWNpYWxseSBmb3IKbmlnaHQgd29yaywgZ29vZCBoZWFsdGggYW5kIGl0cyBjaGllZiBzb3VyY2UsIHNpbXBsZQpsaXZpbmcsIGFyZSBlc3NlbnRpYWw7IGZvciB3ZSBoYXZlIGZhbGxlbiBpbnRvIHRoZQpoYWJpdCBvZiBkZXZvdGluZyB0byByZWxlbnRsZXNzIGxhYm91ciB0aGUgaG91ciB3aGljaApuYXR1cmUgaGFzIGFwcG9pbnRlZCBmb3IgcmVzdCBhbmQgcmVsYXhhdGlvbi4gRnJvbQp0aG9zZSBob3VycyB3ZSBtdXN0IHRha2Ugb25seSBzdWNoIHRpbWUgYXMgaXMgc3VwZXJmbHVvdXMgZm9yIHNsZWVwLCBhbmQgd2lsbCBub3QgYmUgbWlzc2VkLjxtaWxlc3RvbmUgbj0iMjciIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBmYXRpZ3VlCndpbGwgbWFrZSB1cyBjYXJlbGVzcyBpbiB3cml0aW5nLCBhbmQgdGhlIGhvdXJzIG9mCmRheWxpZ2h0IGFyZSBhbXBseSBzdWZmaWNpZW50IGZvciBvbmUgd2hvIGhhcyBubwpvdGhlciBkaXN0cmFjdGlvbnMuIEl0IGlzIG9ubHkgdGhlIGJ1c3kgbWFuIHdobwppcyBkcml2ZW4gdG8gZW5jcm9hY2ggb24gdGhlIGhvdXJzIG9mIGRhcmtuZXNzLgpOZXZlcnRoZWxlc3MsIG5pZ2h0IHdvcmssIHNvIGxvbmcgYXMgd2UgY29tZSB0byBpdApmaWVzaCBhbmQgdW50aXJlZCwgcHJvdmlkZXMgYnkgZmFyIHRoZSBiZXN0IGZvcm0gb2YKcHJpdmFjeS48L3A+Cgo8L3RyYW5zbGF0aW9uPg=="
translation['10.3.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgY29uZGVtbmF0aW9uIHdoaWNoIEkgaGF2ZSBwYXNzZWQgb24gc3VjaApjYXJlbGVzc25lc3MgaW4gd3JpdGluZyB3aWxsIG1ha2UgaXQgcHJldHR5IGNsZWFyIHdoYXQKbXkgdmlld3MgYXJlIG9uIHRoZSBsdXh1cnkgb2YgZGljdGF0aW9uIHdoaWNoCmlzIG5vdyBzbyBmYXNoaW9uYWJsZS4gRm9yLCB3aGVuIHdlIHdyaXRlLCBob3dldmVyCmdyZWF0IG91ciBzcGVlZCwgdGhlIGZhY3QgdGhhdCB0aGUgaGFuZCBjYW5ub3QgZm9sbG93CnRoZSByYXBpZGl0eSBvZiBvdXIgdGhvdWdodHMgZ2l2ZXMgdXMgdGltZSB0byB0aGluaywKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjEwMyIgLz4KCndoZXJlYXMgdGhlIHByZXNlbmNlIG9mIG91ciBhbWFudWVuc2lzIGh1cnJpZXMgdXMKb24sIGFuZCBhdCB0aW1lcyB3ZSBmZWVsIGFzaGFtZWQgdG8gaGVzaXRhdGUgb3IKcGF1c2UsIG9yIG1ha2Ugc29tZSBhbHRlcmF0aW9uLCBhcyB0aG91Z2ggd2Ugd2VyZQphZnJhaWQgdG8gZGlzcGxheSBzdWNoIHdlYWtuZXNzIGJlZm9yZSBhIHdpdG5lc3MuCjwvdHJhbnNsYXRpb24+"
translation['10.3.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBhIHJlc3VsdCBvdXIgbGFuZ3VhZ2UgdGVuZHMgbm90IG1lcmVseSB0byBiZQpoYXBoYXphcmQgYW5kIGZvcm1sZXNzLCBidXQgaW4gb3VyIGRlc2lyZSB0byBwcm9kdWNlCmEgY29udGludW91cyBmbG93IHdlIGxldCBzbGlwIHBvc2l0aXZlIGltcHJvcHJpZXRpZXMKb2YgZGljdGlvbiwgd2hpY2ggc2hvdyBuZWl0aGVyIHRoZSBwcmVjaXNpb24gb2YgdGhlCndyaXRlciBub3IgdGhlIGltcGV0dW9zaXR5IG9mIHRoZSBzcGVha2VyLiBBZ2FpbiwgaWYKdGhlIGFtYW51ZW5zaXMgaXMgYSBzbG93IHdyaXRlciwgb3IgbGFja2luZyBpbiBpbnRlbGxpZ2VuY2UsIGhlIGJlY29tZXMgYSBzdHVtYmxpbmctYmxvY2ssIG91ciBzcGVlZCBpcwpjaGVja2VkLCBhbmQgdGhlIHRocmVhZCBvZiBvdXIgaWRlYXMgaXMgaW50ZXJydXB0ZWQKYnkgdGhlIGRlbGF5IG9yIGV2ZW4gcGVyaGFwcyBieSB0aGUgbG9zcyBvZgp0ZW1wZXIgdG8gd2hpY2ggaXQgZ2l2ZXMgcmlzZS48L3RyYW5zbGF0aW9uPg=="
translation['10.3.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gTW9yZW92ZXIsIHRoZQpnZXN0dXJlcyB3aGljaCBhY2NvbXBhbnkgc3Ryb25nIGZlZWxpbmcsIGFuZCBzb21ldGltZXMgZXZlbiBzZXJ2ZSB0byBzdGltdWxhdGUgdGhlIG1pbmQsIHRoZSB3YXZpbmcKb2YgdGhlIGhhbmQsIHRoZSBjb250cmFjdGlvbiBvZiB0aGUgYnJvdywgdGhlCm9jY2FzaW9uYWwgc3RyaWtpbmcgb2YgZm9yZWhlYWQgb3Igc2lkZSwgYW5kIHRob3NlCndoaWNoIFBlcnNpdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+aS4gMTA2Ljwvbm90ZT4gbm90ZXMgd2hlbiBoZSBkZXNjcmliZXMgYSB0cml2aWFsCnN0eWxlIGFzIG9uZSB0aGF0Cgo8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJibG9ja3F1b3RlIj4KPGwgY2xhc3M9InRyYW5zbGF0aW9uIj48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaHVtcHMgbm90IHRoZSBkZXNrIG5vciBzbWFja3Mgb2YgYml0dGVuIG5haWxzLDwvcXVvdGU+PC9sPjwvcXVvdGU+CgphbGwgdGhlc2UgYmVjb21lIHJpZGljdWxvdXMsIHVubGVzcyB3ZSBhcmUgYWxvbmUsCkZpbmFsbHksPGwgY2xhc3M9InRyYW5zbGF0aW9uIj48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaHVtcHMgbm90IHRoZSBkZXNrIG5vciBzbWFja3Mgb2YgYml0dGVuIG5haWxzLDwvcXVvdGU+PC9sPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPlRodW1wcyBub3QgdGhlIGRlc2sgbm9yIHNtYWNrcyBvZiBiaXR0ZW4gbmFpbHMsPC9xdW90ZT48L3RyYW5zbGF0aW9uPg=="
translation['10.3.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gd2UgY29tZSB0byB0aGUgbW9zdCBpbXBvcnRhbnQgY29uc2lkZXJhdGlvbiBvZiBhbGwsIHRoYXQgdGhlIGFkdmFudGFnZXMgb2YgcHJpdmFjeSBhcmUgbG9zdAp3aGVuIHdlIGRpY3RhdGUuIEV2ZXJ5b25lLCBob3dldmVyLCB3aWxsIGFncmVlCnRoYXQgdGhlIGFic2VuY2Ugb2YgY29tcGFueSBhbmQgZGVlcCBzaWxlbmNlIGFyZQptb3N0IGNvbmR1Y2l2ZSB0byB3cml0aW5nLCB0aG91Z2ggSSB3b3VsZCBub3QgZ28Kc28gZmFyIGFzIHRvIGNvbmN1ciBpbiB0aGUgb3BpbmlvbiBvZiB0aG9zZSB3aG8gdGhpbmsKd29vZHMgYW5kIGdyb3ZlcyB0aGUgbW9zdCBzdWl0YWJsZSBsb2NhbGl0aWVzIGZvcgp0aGUgcHVycG9zZSwgb24gdGhlIGdyb3VuZCB0aGF0IHRoZSBmcmVlZG9tIG9mCnRoZSBza3kgYW5kIHRoZSBjaGFybSBvZiB0aGUgc3Vycm91bmRpbmdzIHByb2R1Y2UKc3VibGltaXR5IG9mIHRob3VnaHQgYW5kIHdlYWx0aCBvZiBpbnNwaXJhdGlvbi4KPC90cmFuc2xhdGlvbj4="
translation['10.3.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5QZXJzb25hbGx5IEkgcmVnYXJkIHN1Y2ggYW4gZW52aXJvbm1lbnQgYXMgYQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTA1IiAvPgoKcGxlYXNhbnQgbHV4dXJ5IHJhdGhlciB0aGFuIGEgc3RpbXVsdXMgdG8gc3R1ZHkuCkZvciB3aGF0ZXZlciBjYXVzZXMgdXMgZGVsaWdodCwgbXVzdCBuZWNlc3NhcmlseQpkaXN0cmFjdCB1cyBmcm9tIHRoZSBjb25jZW50cmF0aW9uIGR1ZSB0byBvdXIgd29yay4KVGhlIG1pbmQgY2Fubm90IGRldm90ZSBpdHMgdW5kaXZpZGVkIGFuZCBzaW5jZXJlCmF0dGVudGlvbiB0byBhIG51bWJlciBvZiB0aGluZ3MgYXQgdGhlIHNhbWUgdGltZSwKYW5kIHdoZXJldmVyIGl0IHR1cm5zIGl0cyBnYXplIGl0IG11c3QgY2Vhc2UgdG8KY29udGVtcGxhdGUgaXRzIGFwcG9pbnRlZCB0YXNrLjwvdHJhbnNsYXRpb24+"
translation['10.3.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmVmb3JlLCB0aGUKY2hhcm0gb2YgdGhlIHdvb2RzLCB0aGUgZ2xpZGluZyBvZiB0aGUgc3RyZWFtLCB0aGUKYnJlZXplIHRoYXQgbXVybXVycyBpbiB0aGUgYnJhbmNoZXMsIHRoZSBzb25nIG9mCmJpcmRzLCBhbmQgdGhlIHZlcnkgZnJlZWRvbSB3aXRoIHdoaWNoIG91ciBleWVzCm1heSByYW5nZSwgYXJlIG1lcmUgZGlzdHJhY3Rpb25zLCBhbmQgaW4gbXkgb3Bpbmlvbgp0aGUgcGxlYXN1cmUgd2hpY2ggdGhleSBleGNpdGUgaXMgbW9yZSBsaWtlbHkgdG8KcmVsYXggdGhhbiB0byBjb25jZW50cmF0ZSBvdXIgYXR0ZW50aW9uLjwvdHJhbnNsYXRpb24+"
translation['10.3.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz4gRGVtb3N0aGVuZXMgdG9vayBhIHdpc2VyIHZpZXc7IGZvciBoZSB3b3VsZCByZXRpcmUgdG8KYSBwbGFjZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5BbiB1bmRlcmdyb3VuZCByb29tLiBTZWUgUGx1dC4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGVtLjwvaGk+IHZpaS48L25vdGU+IHdoZXJlIG5vIHZvaWNlIHdhcyB0byBiZSBoZWFyZCwgYW5kIG5vCnByb3NwZWN0IGdyZWV0ZWQgdGhlIHNpZ2h0LCBmb3IgZmVhciB0aGF0IGhpcyBleWVzCm1pZ2h0IGZvcmNlIGhpcyBtaW5kIHRvIG5lZ2xlY3QgaXRzIGR1dHkuIFRoZXJlZm9yZSwgbGV0IHRoZSBidXJuZXIgb2YgdGhlIG1pZG5pZ2h0IG9pbCBzZWNsdWRlCmhpbXNlbGYgaW4gdGhlIHNpbGVuY2Ugb2YgbmlnaHQsIHdpdGhpbiBjbG9zZWQgZG9vcnMsCndpdGggYnV0IGEgc29saXRhcnkgbGFtcCB0byBsaWdodCBoaXMgbGFib3Vycy48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5EZW0uPC9oaT4gdmlpLjwvdHJhbnNsYXRpb24+"
translation['10.3.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0CmZvciBldmVyeSBraW5kIG9mIHN0dWR5LCBhbmQgbW9yZSBlc3BlY2lhbGx5IGZvcgpuaWdodCB3b3JrLCBnb29kIGhlYWx0aCBhbmQgaXRzIGNoaWVmIHNvdXJjZSwgc2ltcGxlCmxpdmluZywgYXJlIGVzc2VudGlhbDsgZm9yIHdlIGhhdmUgZmFsbGVuIGludG8gdGhlCmhhYml0IG9mIGRldm90aW5nIHRvIHJlbGVudGxlc3MgbGFib3VyIHRoZSBob3VyIHdoaWNoCm5hdHVyZSBoYXMgYXBwb2ludGVkIGZvciByZXN0IGFuZCByZWxheGF0aW9uLiBGcm9tCnRob3NlIGhvdXJzIHdlIG11c3QgdGFrZSBvbmx5IHN1Y2ggdGltZSBhcyBpcyBzdXBlcmZsdW91cyBmb3Igc2xlZXAsIGFuZCB3aWxsIG5vdCBiZSBtaXNzZWQuPC90cmFuc2xhdGlvbj4="
translation['10.3.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGZhdGlndWUKd2lsbCBtYWtlIHVzIGNhcmVsZXNzIGluIHdyaXRpbmcsIGFuZCB0aGUgaG91cnMgb2YKZGF5bGlnaHQgYXJlIGFtcGx5IHN1ZmZpY2llbnQgZm9yIG9uZSB3aG8gaGFzIG5vCm90aGVyIGRpc3RyYWN0aW9ucy4gSXQgaXMgb25seSB0aGUgYnVzeSBtYW4gd2hvCmlzIGRyaXZlbiB0byBlbmNyb2FjaCBvbiB0aGUgaG91cnMgb2YgZGFya25lc3MuCk5ldmVydGhlbGVzcywgbmlnaHQgd29yaywgc28gbG9uZyBhcyB3ZSBjb21lIHRvIGl0CmZpZXNoIGFuZCB1bnRpcmVkLCBwcm92aWRlcyBieSBmYXIgdGhlIGJlc3QgZm9ybSBvZgpwcml2YWN5LjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjEwNyIgLz4KCjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBhbHRob3VnaCBzaWxlbmNlIGFuZCBzZWNsdXNpb24gYW5kIGFic29sdXRlCmZyZWVkb20gb2YgbWluZCBhcmUgZGV2b3V0bHkgdG8gYmUgZGVzaXJlZCwgdGhleQphcmUgbm90IGFsd2F5cyB3aXRoaW4gb3VyIHBvd2VyIHRvIGF0dGFpbi4gQ29uc2VxdWVudGx5IHdlIG11c3Qgbm90IGZsaW5nIGFzaWRlIG91ciBib29rIGF0IG9uY2UsCmlmIGRpc3R1cmJlZCBieSBzb21lIG5vaXNlLCBhbmQgbGFtZW50IHRoYXQgd2UKaGF2ZSBsb3N0IGEgZGF5OiBvbiB0aGUgY29udHJhcnksIHdlIG11c3QgbWFrZQphIGZpcm0gc3RhbmQgYWdhaW5zdCBzdWNoIGluY29udmVuaWVuY2VzLCBhbmQgdHJhaW4Kb3Vyc2VsdmVzIHNvIHRvIGNvbmNlbnRyYXRlIG91ciB0aG91Z2h0cyBhcyB0byByaXNlCnN1cGVyaW9yIHRvIGFsbCBpbXBlZGltZW50cyB0byBzdHVkeS4gSWYgb25seSB5b3UKZGlyZWN0IGFsbCB5b3VyIGF0dGVudGlvbiB0byB0aGUgd29yayB3aGljaCB5b3UKaGF2ZSBpbiBoYW5kLCBubyBzaWdodCBvciBzb3VuZCB3aWxsIGV2ZXIgcGVuZXRyYXRlCnRvIHlvdXIgbWluZC48bWlsZXN0b25lIG49IjI5IiB1bml0PSJzZWN0aW9uIiAvPiBJZiBldmVuIGNhc3VhbCB0aG91Z2h0cyBvZnRlbiBvY2N1cHkKdXMgdG8gc3VjaCBhbiBleHRlbnQgdGhhdCB3ZSBkbyBub3Qgc2VlIHBhc3NlcnMtYnksCm9yIGV2ZW4gc3RyYXkgZnJvbSBvdXIgcGF0aCwgc3VyZWx5IHdlIGNhbiBvYnRhaW4KdGhlIHNhbWUgcmVzdWx0IGJ5IHRoZSBleGVyY2lzZSBvZiBvdXIgd2lsbC4gV2UKbXVzdCBub3QgZ2l2ZSB3YXkgdG8gcHJldGV4dHMgZm9yIHNsb3RoLiBGb3IgdW5sZXNzCndlIG1ha2UgdXAgb3VyIG1pbmQgdGhhdCB3ZSBtdXN0IGJlIGZyZXNoLCBjaGVlcmZ1bCBhbmQgZnJlZSBmcm9tIGFsbCBvdGhlciBjYXJlIHdoZW4gd2UgYXBwcm9hY2ggb3VyCnN0dWRpZXMsIHdlIHNoYWxsIGFsd2F5cyBmaW5kIHNvbWUgZXhjdXNlIGZvciBpZGxlbmVzcy4KPG1pbGVzdG9uZSBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUsIHdoZXRoZXIgd2UgYmUgaW4gYSBjcm93ZCwgb24gYSBqb3VybmV5LApvciBldmVuIGF0IHNvbWUgZmVzdGl2ZSBnYXRoZXJpbmcsIG91ciB0aG91Z2h0cyBzaG91bGQKYWx3YXlzIGhhdmUgc29tZSBpbm5lciBzYW5jdHVhcnkgb2YgdGhlaXIgb3duIHRvCndoaWNoIHRoZXkgbWF5IHJldGlyZS4gT3RoZXJ3aXNlIHdoYXQgc2hhbGwgd2UKZG8gd2hlbiB3ZSBhcmUgc3VkZGVubHkgY2FsbGVkIHVwb24gdG8gZGVsaXZlcgphIHNldCBzcGVlY2ggaW4gdGhlIG1pZHN0IG9mIHRoZSBmb3J1bSwgd2l0aCBsYXdzdWl0cyBpbiBwcm9ncmVzcyBvbiBldmVyeSBzaWRlLCBhbmQgd2l0aCB0aGUgc291bmQKb2YgcXVhcnJlbHMgYW5kIGV2ZW4gY2FzdWFsIG91dGNyaWVzIGluIG91ciBlYXJzLCBpZgp3ZSBuZWVkIGFic29sdXRlIHByaXZhY3kgdG8gZGlzY292ZXIgdGhlIHRob3VnaHRzCndoaWNoIHdlIGpvdCBkb3duIHVwb24gb3VyIHRhYmxldHM/IEl0IHdhcyBmb3IKdGhpcyByZWFzb24gdGhhdCBEZW1vc3RoZW5lcywgdGhlIHBhc3Npb25hdGUgbG92ZXIKb2Ygc2VjbHVzaW9uLCB1c2VkIHRvIHN0dWR5IG9uIHRoZSBzZWFzaG9yZSBhbWlkIHRoZQpyb2FyIG9mIHRoZSBicmVha2VycyB0aGF0IHRoZXkgbWlnaHQgdGVhY2ggaGltIG5vdAp0byBiZSB1bm5lcnZlZCBieSB0aGUgdXByb2FyIG9mIHRoZSBwdWJsaWMgYXNzZW1ibHkuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['10.3.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgYWx0aG91Z2ggc2lsZW5jZSBhbmQgc2VjbHVzaW9uIGFuZCBhYnNvbHV0ZQpmcmVlZG9tIG9mIG1pbmQgYXJlIGRldm91dGx5IHRvIGJlIGRlc2lyZWQsIHRoZXkKYXJlIG5vdCBhbHdheXMgd2l0aGluIG91ciBwb3dlciB0byBhdHRhaW4uIENvbnNlcXVlbnRseSB3ZSBtdXN0IG5vdCBmbGluZyBhc2lkZSBvdXIgYm9vayBhdCBvbmNlLAppZiBkaXN0dXJiZWQgYnkgc29tZSBub2lzZSwgYW5kIGxhbWVudCB0aGF0IHdlCmhhdmUgbG9zdCBhIGRheTogb24gdGhlIGNvbnRyYXJ5LCB3ZSBtdXN0IG1ha2UKYSBmaXJtIHN0YW5kIGFnYWluc3Qgc3VjaCBpbmNvbnZlbmllbmNlcywgYW5kIHRyYWluCm91cnNlbHZlcyBzbyB0byBjb25jZW50cmF0ZSBvdXIgdGhvdWdodHMgYXMgdG8gcmlzZQpzdXBlcmlvciB0byBhbGwgaW1wZWRpbWVudHMgdG8gc3R1ZHkuIElmIG9ubHkgeW91CmRpcmVjdCBhbGwgeW91ciBhdHRlbnRpb24gdG8gdGhlIHdvcmsgd2hpY2ggeW91CmhhdmUgaW4gaGFuZCwgbm8gc2lnaHQgb3Igc291bmQgd2lsbCBldmVyIHBlbmV0cmF0ZQp0byB5b3VyIG1pbmQuPC90cmFuc2xhdGlvbj4="
translation['10.3.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz4gSWYgZXZlbiBjYXN1YWwgdGhvdWdodHMgb2Z0ZW4gb2NjdXB5CnVzIHRvIHN1Y2ggYW4gZXh0ZW50IHRoYXQgd2UgZG8gbm90IHNlZSBwYXNzZXJzLWJ5LApvciBldmVuIHN0cmF5IGZyb20gb3VyIHBhdGgsIHN1cmVseSB3ZSBjYW4gb2J0YWluCnRoZSBzYW1lIHJlc3VsdCBieSB0aGUgZXhlcmNpc2Ugb2Ygb3VyIHdpbGwuIFdlCm11c3Qgbm90IGdpdmUgd2F5IHRvIHByZXRleHRzIGZvciBzbG90aC4gRm9yIHVubGVzcwp3ZSBtYWtlIHVwIG91ciBtaW5kIHRoYXQgd2UgbXVzdCBiZSBmcmVzaCwgY2hlZXJmdWwgYW5kIGZyZWUgZnJvbSBhbGwgb3RoZXIgY2FyZSB3aGVuIHdlIGFwcHJvYWNoIG91cgpzdHVkaWVzLCB3ZSBzaGFsbCBhbHdheXMgZmluZCBzb21lIGV4Y3VzZSBmb3IgaWRsZW5lc3MuCjwvdHJhbnNsYXRpb24+"
translation['10.3.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUsIHdoZXRoZXIgd2UgYmUgaW4gYSBjcm93ZCwgb24gYSBqb3VybmV5LApvciBldmVuIGF0IHNvbWUgZmVzdGl2ZSBnYXRoZXJpbmcsIG91ciB0aG91Z2h0cyBzaG91bGQKYWx3YXlzIGhhdmUgc29tZSBpbm5lciBzYW5jdHVhcnkgb2YgdGhlaXIgb3duIHRvCndoaWNoIHRoZXkgbWF5IHJldGlyZS4gT3RoZXJ3aXNlIHdoYXQgc2hhbGwgd2UKZG8gd2hlbiB3ZSBhcmUgc3VkZGVubHkgY2FsbGVkIHVwb24gdG8gZGVsaXZlcgphIHNldCBzcGVlY2ggaW4gdGhlIG1pZHN0IG9mIHRoZSBmb3J1bSwgd2l0aCBsYXdzdWl0cyBpbiBwcm9ncmVzcyBvbiBldmVyeSBzaWRlLCBhbmQgd2l0aCB0aGUgc291bmQKb2YgcXVhcnJlbHMgYW5kIGV2ZW4gY2FzdWFsIG91dGNyaWVzIGluIG91ciBlYXJzLCBpZgp3ZSBuZWVkIGFic29sdXRlIHByaXZhY3kgdG8gZGlzY292ZXIgdGhlIHRob3VnaHRzCndoaWNoIHdlIGpvdCBkb3duIHVwb24gb3VyIHRhYmxldHM/IEl0IHdhcyBmb3IKdGhpcyByZWFzb24gdGhhdCBEZW1vc3RoZW5lcywgdGhlIHBhc3Npb25hdGUgbG92ZXIKb2Ygc2VjbHVzaW9uLCB1c2VkIHRvIHN0dWR5IG9uIHRoZSBzZWFzaG9yZSBhbWlkIHRoZQpyb2FyIG9mIHRoZSBicmVha2VycyB0aGF0IHRoZXkgbWlnaHQgdGVhY2ggaGltIG5vdAp0byBiZSB1bm5lcnZlZCBieSB0aGUgdXByb2FyIG9mIHRoZSBwdWJsaWMgYXNzZW1ibHkuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzEiIHVuaXQ9InNlY3Rpb24iIC8+VGhlcmUgYXJlIGFsc28gY2VydGFpbiBtaW5vciBkZXRhaWxzIHdoaWNoIGRlc2VydmUKCjxwYiBpZD0icC4xMDkiIC8+CgpvdXIgYXR0ZW50aW9uLCBmb3IgdGhlcmUgaXMgbm90aGluZyB0b28gbWludXRlIGZvciB0aGUKc3R1ZGVudC4gSXQgaXMgYmVzdCB0byB3cml0ZSBvbiB3YXggb3dpbmcgdG8gdGhlCmZhY2lsaXR5IHdoaWNoIGl0IG9mZmVycyBmb3IgZXJhc3VyZSwgdGhvdWdoIHdlYWsKc2lnaHQgbWF5IG1ha2UgaXQgZGVzaXJhYmxlIHRvIGVtcGxveSBwYXJjaG1lbnQKYnkgcHJlZmVyZW5jZS4gVGhlIGxhdHRlciwgaG93ZXZlciwgYWx0aG91Z2ggb2YKYXNzaXN0YW5jZSB0byB0aGUgZXllLCBkZWxheXMgdGhlIGhhbmQgYW5kIGludGVycnVwdHMKdGhlIHN0cmVhbSBvZiB0aG91Z2h0IG93aW5nIHRvIHRoZSBmcmVxdWVuY3kgd2l0aAp3aGljaCB0aGUgcGVuIGhhcyB0byBiZSBzdXBwbGllZCB3aXRoIGluay48bWlsZXN0b25lIG49IjMyIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQKd2hpY2hldmVyIHdlIGVtcGxveSwgd2UgbXVzdCBsZWF2ZSBibGFuayBwYWdlcwp0aGF0IHdlIG1heSBiZSBmcmVlIHRvIG1ha2UgYWRkaXRpb25zIHdoZW4gd2UKd2lsbC4gRm9yIGxhY2sgb2Ygc3BhY2UgYXQgdGltZXMgZ2l2ZXMgcmlzZSB0byBhCnJlbHVjdGFuY2UgdG8gbWFrZSBjb3JyZWN0aW9ucywgb3IsIGF0IGFueSByYXRlLCBpcwpsaWFibGUgdG8gY2F1c2UgY29uZnVzaW9uIHdoZW4gbmV3IG1hdHRlciBpcwppbnNlcnRlZC4gVGhlIHdheCB0YWJsZXRzIHNob3VsZCBub3QgYmUgdW5kdWx5CndpZGU7IGZvciBJIGhhdmUga25vd24gYSB5b3VuZyBhbmQgb3Zlci16ZWFsb3VzCnN0dWRlbnQgd3JpdGUgaGlzIGNvbXBvc2l0aW9ucyBhdCB1bmR1ZSBsZW5ndGgsCmJlY2F1c2UgaGUgbWVhc3VyZWQgdGhlbSBieSB0aGUgbnVtYmVyIG9mIGxpbmVzLAphIGZhdWx0IHdoaWNoIHBlcnNpc3RlZCwgaW4gc3BpdGUgb2YgZnJlcXVlbnQgYWRtb25pdGlvbiwgdW50aWwgaGlzIHRhYmxldHMgd2VyZSBjaGFuZ2VkLCB3aGVuIGl0CmRpc2FwcGVhcmVkLjxtaWxlc3RvbmUgbj0iMzMiIHVuaXQ9InNlY3Rpb24iIC8+IFNwYWNlIG11c3QgYWxzbyBiZSBsZWZ0IGZvciBqb3R0aW5nCmRvd24gdGhlIHRob3VnaHRzIHdoaWNoIG9jY3VyIHRvIHRoZSB3cml0ZXIgb3V0Cm9mIGR1ZSBvcmRlciwgdGhhdCBpcyB0byBzYXksIHdoaWNoIHJlZmVyIHRvIHN1YmplY3RzCm90aGVyIHRoYW4gdGhvc2UgaW4gaGFuZC4gRm9yIHNvbWV0aW1lcyB0aGUgbW9zdAphZG1pcmFibGUgdGhvdWdodHMgYnJlYWsgaW4gdXBvbiB1cyB3aGljaCBjYW5ub3QKYmUgaW5zZXJ0ZWQgaW4gd2hhdCB3ZSBhcmUgd3JpdGluZywgYnV0IHdoaWNoLCBvbgp0aGUgb3RoZXIgaGFuZCwgaXQgaXMgdW5zYWZlIHRvIHB1dCBieSwgc2luY2UgdGhleSBhcmUKYXQgdGltZXMgZm9yZ290dGVuLCBhbmQgYXQgdGltZXMgY2xpbmcgdG8gdGhlIG1lbW9yeQpzbyBwZXJzaXN0ZW50bHkgYXMgdG8gZGl2ZXJ0IHVzIGZyb20gc29tZSBvdGhlciBsaW5lCm9mIHRob3VnaHQuIFRoZXkgYXJlLCB0aGVyZWZvcmUsIGJlc3Qga2VwdCBpbgpzdG9yZS48L3A+Cgo8L3RyYW5zbGF0aW9uPg=="
translation['10.3.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBhcmUgYWxzbyBjZXJ0YWluIG1pbm9yIGRldGFpbHMgd2hpY2ggZGVzZXJ2ZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTA5IiAvPgoKb3VyIGF0dGVudGlvbiwgZm9yIHRoZXJlIGlzIG5vdGhpbmcgdG9vIG1pbnV0ZSBmb3IgdGhlCnN0dWRlbnQuIEl0IGlzIGJlc3QgdG8gd3JpdGUgb24gd2F4IG93aW5nIHRvIHRoZQpmYWNpbGl0eSB3aGljaCBpdCBvZmZlcnMgZm9yIGVyYXN1cmUsIHRob3VnaCB3ZWFrCnNpZ2h0IG1heSBtYWtlIGl0IGRlc2lyYWJsZSB0byBlbXBsb3kgcGFyY2htZW50CmJ5IHByZWZlcmVuY2UuIFRoZSBsYXR0ZXIsIGhvd2V2ZXIsIGFsdGhvdWdoIG9mCmFzc2lzdGFuY2UgdG8gdGhlIGV5ZSwgZGVsYXlzIHRoZSBoYW5kIGFuZCBpbnRlcnJ1cHRzCnRoZSBzdHJlYW0gb2YgdGhvdWdodCBvd2luZyB0byB0aGUgZnJlcXVlbmN5IHdpdGgKd2hpY2ggdGhlIHBlbiBoYXMgdG8gYmUgc3VwcGxpZWQgd2l0aCBpbmsuPC90cmFuc2xhdGlvbj4="
translation['10.3.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0CndoaWNoZXZlciB3ZSBlbXBsb3ksIHdlIG11c3QgbGVhdmUgYmxhbmsgcGFnZXMKdGhhdCB3ZSBtYXkgYmUgZnJlZSB0byBtYWtlIGFkZGl0aW9ucyB3aGVuIHdlCndpbGwuIEZvciBsYWNrIG9mIHNwYWNlIGF0IHRpbWVzIGdpdmVzIHJpc2UgdG8gYQpyZWx1Y3RhbmNlIHRvIG1ha2UgY29ycmVjdGlvbnMsIG9yLCBhdCBhbnkgcmF0ZSwgaXMKbGlhYmxlIHRvIGNhdXNlIGNvbmZ1c2lvbiB3aGVuIG5ldyBtYXR0ZXIgaXMKaW5zZXJ0ZWQuIFRoZSB3YXggdGFibGV0cyBzaG91bGQgbm90IGJlIHVuZHVseQp3aWRlOyBmb3IgSSBoYXZlIGtub3duIGEgeW91bmcgYW5kIG92ZXItemVhbG91cwpzdHVkZW50IHdyaXRlIGhpcyBjb21wb3NpdGlvbnMgYXQgdW5kdWUgbGVuZ3RoLApiZWNhdXNlIGhlIG1lYXN1cmVkIHRoZW0gYnkgdGhlIG51bWJlciBvZiBsaW5lcywKYSBmYXVsdCB3aGljaCBwZXJzaXN0ZWQsIGluIHNwaXRlIG9mIGZyZXF1ZW50IGFkbW9uaXRpb24sIHVudGlsIGhpcyB0YWJsZXRzIHdlcmUgY2hhbmdlZCwgd2hlbiBpdApkaXNhcHBlYXJlZC48L3RyYW5zbGF0aW9uPg=="
translation['10.3.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz4gU3BhY2UgbXVzdCBhbHNvIGJlIGxlZnQgZm9yIGpvdHRpbmcKZG93biB0aGUgdGhvdWdodHMgd2hpY2ggb2NjdXIgdG8gdGhlIHdyaXRlciBvdXQKb2YgZHVlIG9yZGVyLCB0aGF0IGlzIHRvIHNheSwgd2hpY2ggcmVmZXIgdG8gc3ViamVjdHMKb3RoZXIgdGhhbiB0aG9zZSBpbiBoYW5kLiBGb3Igc29tZXRpbWVzIHRoZSBtb3N0CmFkbWlyYWJsZSB0aG91Z2h0cyBicmVhayBpbiB1cG9uIHVzIHdoaWNoIGNhbm5vdApiZSBpbnNlcnRlZCBpbiB3aGF0IHdlIGFyZSB3cml0aW5nLCBidXQgd2hpY2gsIG9uCnRoZSBvdGhlciBoYW5kLCBpdCBpcyB1bnNhZmUgdG8gcHV0IGJ5LCBzaW5jZSB0aGV5IGFyZQphdCB0aW1lcyBmb3Jnb3R0ZW4sIGFuZCBhdCB0aW1lcyBjbGluZyB0byB0aGUgbWVtb3J5CnNvIHBlcnNpc3RlbnRseSBhcyB0byBkaXZlcnQgdXMgZnJvbSBzb21lIG90aGVyIGxpbmUKb2YgdGhvdWdodC4gVGhleSBhcmUsIHRoZXJlZm9yZSwgYmVzdCBrZXB0IGluCnN0b3JlLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQiIHVuaXQ9ImNoYXB0ZXIiIC8+PG1pbGVzdG9uZSBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBuZXh0IHBvaW50IHdoaWNoIHdlIGhhdmUgdG8gY29uc2lkZXIgaXMKdGhlIGNvcnJlY3Rpb24gb2Ygb3VyIHdvcmssIHdoaWNoIGlzIGJ5IGZhciB0aGUgbW9zdAp1c2VmdWwgcG9ydGlvbiBvZiBvdXIgc3R1ZHk6IGZvciB0aGVyZSBpcyBnb29kIHJlYXNvbgpmb3IgdGhlIHZpZXcgdGhhdCBlcmFzdXJlIGlzIHF1aXRlIGFzIGltcG9ydGFudCBhCgo8cGIgaWQ9InAuMTExIiAvPgoKZnVuY3Rpb24gb2YgdGhlIHBlbiBhcyBhY3R1YWwgd3JpdGluZy4gQ29ycmVjdGlvbgp0YWtlcyB0aGUgZm9ybSBvZiBhZGRpdGlvbiwgZXhjaXNpb24gYW5kIGFsdGVyYXRpb24uCkJ1dCBpdCBpcyBhIGNvbXBhcmF0aXZlbHkgc2ltcGxlIGFuZCBlYXN5IHRhc2sgdG8KZGVjaWRlIHdoYXQgaXMgdG8gYmUgYWRkZWQgb3IgZXhjaXNlZC4gT24gdGhlCm90aGVyIGhhbmQsIHRvIHBydW5lIHdoYXQgaXMgdHVyZ2lkLCB0byBlbGV2YXRlCndoYXQgaXMgbWVhbiwgdG8gcmVwcmVzcyBleHViZXJhbmNlLCBhcnJhbmdlIHdoYXQKaXMgZGlzb3JkZXJseSwgaW50cm9kdWNlIHJoeXRobSB3aGVyZSBpdCBpcyBsYWNraW5nLAphbmQgbW9kaWZ5IGl0IHdoZXJlIGl0IGlzIHRvbyBlbXBoYXRpYywgaW52b2x2ZXMgYQp0d29mb2xkIGxhYm91ci4gRm9yIHdlIGhhdmUgdG8gY29uZGVtbiB3aGF0IGhhZApwcmV2aW91c2x5IHNhdGlzZmllZCB1cyBhbmQgZGlzY292ZXIgd2hhdCBoYWQgZXNjYXBlZApvdXIgbm90aWNlLjxtaWxlc3RvbmUgbj0iMiIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmUgY2FuIGJlIG5vIGRvdWJ0IHRoYXQgdGhlIGJlc3QKbWV0aG9kIG9mIGNvcnJlY3Rpb24gaXMgdG8gcHV0IGFzaWRlIHdoYXQgd2UgaGF2ZQp3cml0dGVuIGZvciBhIGNlcnRhaW4gdGltZSwgc28gdGhhdCB3aGVuIHdlIHJldHVybgp0byBpdCBhZnRlciBhbiBpbnRlcnZhbCBpdCB3aWxsIGhhdmUgdGhlIGFpciBvZiBub3ZlbHR5CmFuZCBvZiBiZWluZyBhbm90aGVyJ3MgaGFuZGl3b3JrOyBmb3IgdGh1cyB3ZSBtYXkKcHJldmVudCBvdXJzZWx2ZXMgZnJvbSByZWdhcmRpbmcgb3VyIHdyaXRpbmdzIHdpdGgKYWxsIHRoZSBhZmZlY3Rpb24gdGhhdCB3ZSBsYXZpc2ggb24gYSBuZXdib3JuIGNoaWxkLgo8bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IHRoaXMgaXMgbm90IGFsd2F5cyBwb3NzaWJsZSwgZXNwZWNpYWxseSBpbiB0aGUgY2FzZQpvZiBhbiBvcmF0b3Igd2hvIG1vc3QgZnJlcXVlbnRseSBoYXMgdG8gd3JpdGUgZm9yCmltbWVkaWF0ZSB1c2UsIHdoaWxlIHNvbWUgbGltaXQsIGFmdGVyIGFsbCwgbXVzdCBiZQpzZXQgdG8gY29ycmVjdGlvbi4gRm9yIHRoZXJlIGFyZSBzb21lIHdobyByZXR1cm4KdG8gZXZlcnl0aGluZyB0aGV5IHdyaXRlIHdpdGggdGhlIHByZXN1bXB0aW9uIHRoYXQKaXQgaXMgZnVsbCBvZiBmYXVsdHMgYW5kLCBhc3N1bWluZyB0aGF0IGEgZmlyc3QgZHJhZnQKbXVzdCBuZWNlc3NhcmlseSBiZSBpbmNvcnJlY3QsIHRoaW5rIGV2ZXJ5IGNoYW5nZQphbiBpbXByb3ZlbWVudCBhbmQgbWFrZSBzb21lIGFsdGVyYXRpb24gYXMgb2Z0ZW4KYXMgdGhleSBoYXZlIHRoZSBtYW51c2NyaXB0IGluIHRoZWlyIGhhbmRzOiB0aGV5CmFyZSwgaW4gZmFjdCwgbGlrZSBkb2N0b3JzIHdobyB1c2UgdGhlIGtuaWZlIGV2ZW4Kd2hlcmUgdGhlIGZsZXNoIGlzIHBlcmZlY3RseSBoZWFsdGh5LiBUaGUgcmVzdWx0IG9mCnRoZWlyIGNyaXRpY2FsIGFjdGl2aXRpZXMgaXMgdGhhdCB0aGUgZmluaXNoZWQgd29yayBpcwpmdWxsIG9mIHNjYXJzLCBibG9vZGxlc3MsIGFuZCBhbGwgdGhlIHdvcnNlIGZvciB0aGVpcgphbnhpb3VzIGNhcmUuPG1pbGVzdG9uZSBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBObyEgbGV0IHRoZXJlIGJlIHNvbWV0aGluZyBpbiBhbGwgb3VyIHdyaXRpbmcgd2hpY2gsIGlmIGl0IGRvZXMgbm90IGFjdHVhbGx5IHBsZWFzZSB1cywKYXQgbGVhc3QgcGFzc2VzIG11c3Rlciwgc28gdGhhdCB0aGUgZmlsZSBtYXkgb25seQpwb2xpc2ggb3VyIHdvcmssIG5vdCB3ZWFyIGl0IGF3YXkuIFRoZXJlIG11c3QKCjxwYiBpZD0icC4xMTMiIC8+CgphbHNvIGJlIGEgbGltaXQgdG8gdGhlIHRpbWUgd2hpY2ggd2Ugc3BlbmQgb24gaXRzCnJldmlzaW9uLiBGb3IgdGhlIGZhY3QgdGhhdCBDaW5uYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+Qy4gSGVsdml1cyBDaW5uYSwgdGhlIGZyaWVuZCBvZiBDYXR1bGx1cy4gVGhlIFNteXJuYQp3YXMgYSBzaG9ydCBidXQgZXhjZXB0aW9uYWxseSBvYnNjdXJlIGFuZCBsZWFybmVkIGVwaWMuPC9ub3RlPiB0b29rIG5pbmUgeWVhcnMKdG8gd3JpdGUgaGlzIFNteXJuYSwgYW5kIHRoYXQgSXNvY3JhdGVzIHJlcXVpcmVkCnRlbiB5ZWFycywgYXQgdGhlIGxvd2VzdCBlc3RpbWF0ZSwgdG8gY29tcGxldGUgaGlzClBhbmVneXJpYyBkb2VzIG5vdCBjb25jZXJuIHRoZSBvcmF0b3IsIHdob3NlCmFzc2lzdGFuY2Ugd2lsbCBiZSBvZiBubyB1c2UsIGlmIGl0IGlzIHNvIGxvbmcKZGVsYXllZC48L3A+Cgo8L3RyYW5zbGF0aW9uPg=="
translation['10.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['10.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBuZXh0IHBvaW50IHdoaWNoIHdlIGhhdmUgdG8gY29uc2lkZXIgaXMKdGhlIGNvcnJlY3Rpb24gb2Ygb3VyIHdvcmssIHdoaWNoIGlzIGJ5IGZhciB0aGUgbW9zdAp1c2VmdWwgcG9ydGlvbiBvZiBvdXIgc3R1ZHk6IGZvciB0aGVyZSBpcyBnb29kIHJlYXNvbgpmb3IgdGhlIHZpZXcgdGhhdCBlcmFzdXJlIGlzIHF1aXRlIGFzIGltcG9ydGFudCBhCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xMTEiIC8+CgpmdW5jdGlvbiBvZiB0aGUgcGVuIGFzIGFjdHVhbCB3cml0aW5nLiBDb3JyZWN0aW9uCnRha2VzIHRoZSBmb3JtIG9mIGFkZGl0aW9uLCBleGNpc2lvbiBhbmQgYWx0ZXJhdGlvbi4KQnV0IGl0IGlzIGEgY29tcGFyYXRpdmVseSBzaW1wbGUgYW5kIGVhc3kgdGFzayB0bwpkZWNpZGUgd2hhdCBpcyB0byBiZSBhZGRlZCBvciBleGNpc2VkLiBPbiB0aGUKb3RoZXIgaGFuZCwgdG8gcHJ1bmUgd2hhdCBpcyB0dXJnaWQsIHRvIGVsZXZhdGUKd2hhdCBpcyBtZWFuLCB0byByZXByZXNzIGV4dWJlcmFuY2UsIGFycmFuZ2Ugd2hhdAppcyBkaXNvcmRlcmx5LCBpbnRyb2R1Y2Ugcmh5dGhtIHdoZXJlIGl0IGlzIGxhY2tpbmcsCmFuZCBtb2RpZnkgaXQgd2hlcmUgaXQgaXMgdG9vIGVtcGhhdGljLCBpbnZvbHZlcyBhCnR3b2ZvbGQgbGFib3VyLiBGb3Igd2UgaGF2ZSB0byBjb25kZW1uIHdoYXQgaGFkCnByZXZpb3VzbHkgc2F0aXNmaWVkIHVzIGFuZCBkaXNjb3ZlciB3aGF0IGhhZCBlc2NhcGVkCm91ciBub3RpY2UuPC90cmFuc2xhdGlvbj4="
translation['10.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBUaGVyZSBjYW4gYmUgbm8gZG91YnQgdGhhdCB0aGUgYmVzdAptZXRob2Qgb2YgY29ycmVjdGlvbiBpcyB0byBwdXQgYXNpZGUgd2hhdCB3ZSBoYXZlCndyaXR0ZW4gZm9yIGEgY2VydGFpbiB0aW1lLCBzbyB0aGF0IHdoZW4gd2UgcmV0dXJuCnRvIGl0IGFmdGVyIGFuIGludGVydmFsIGl0IHdpbGwgaGF2ZSB0aGUgYWlyIG9mIG5vdmVsdHkKYW5kIG9mIGJlaW5nIGFub3RoZXIncyBoYW5kaXdvcms7IGZvciB0aHVzIHdlIG1heQpwcmV2ZW50IG91cnNlbHZlcyBmcm9tIHJlZ2FyZGluZyBvdXIgd3JpdGluZ3Mgd2l0aAphbGwgdGhlIGFmZmVjdGlvbiB0aGF0IHdlIGxhdmlzaCBvbiBhIG5ld2Jvcm4gY2hpbGQuCjwvdHJhbnNsYXRpb24+"
translation['10.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGlzIGlzIG5vdCBhbHdheXMgcG9zc2libGUsIGVzcGVjaWFsbHkgaW4gdGhlIGNhc2UKb2YgYW4gb3JhdG9yIHdobyBtb3N0IGZyZXF1ZW50bHkgaGFzIHRvIHdyaXRlIGZvcgppbW1lZGlhdGUgdXNlLCB3aGlsZSBzb21lIGxpbWl0LCBhZnRlciBhbGwsIG11c3QgYmUKc2V0IHRvIGNvcnJlY3Rpb24uIEZvciB0aGVyZSBhcmUgc29tZSB3aG8gcmV0dXJuCnRvIGV2ZXJ5dGhpbmcgdGhleSB3cml0ZSB3aXRoIHRoZSBwcmVzdW1wdGlvbiB0aGF0Cml0IGlzIGZ1bGwgb2YgZmF1bHRzIGFuZCwgYXNzdW1pbmcgdGhhdCBhIGZpcnN0IGRyYWZ0Cm11c3QgbmVjZXNzYXJpbHkgYmUgaW5jb3JyZWN0LCB0aGluayBldmVyeSBjaGFuZ2UKYW4gaW1wcm92ZW1lbnQgYW5kIG1ha2Ugc29tZSBhbHRlcmF0aW9uIGFzIG9mdGVuCmFzIHRoZXkgaGF2ZSB0aGUgbWFudXNjcmlwdCBpbiB0aGVpciBoYW5kczogdGhleQphcmUsIGluIGZhY3QsIGxpa2UgZG9jdG9ycyB3aG8gdXNlIHRoZSBrbmlmZSBldmVuCndoZXJlIHRoZSBmbGVzaCBpcyBwZXJmZWN0bHkgaGVhbHRoeS4gVGhlIHJlc3VsdCBvZgp0aGVpciBjcml0aWNhbCBhY3Rpdml0aWVzIGlzIHRoYXQgdGhlIGZpbmlzaGVkIHdvcmsgaXMKZnVsbCBvZiBzY2FycywgYmxvb2RsZXNzLCBhbmQgYWxsIHRoZSB3b3JzZSBmb3IgdGhlaXIKYW54aW91cyBjYXJlLjwvdHJhbnNsYXRpb24+"
translation['10.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBObyEgbGV0IHRoZXJlIGJlIHNvbWV0aGluZyBpbiBhbGwgb3VyIHdyaXRpbmcgd2hpY2gsIGlmIGl0IGRvZXMgbm90IGFjdHVhbGx5IHBsZWFzZSB1cywKYXQgbGVhc3QgcGFzc2VzIG11c3Rlciwgc28gdGhhdCB0aGUgZmlsZSBtYXkgb25seQpwb2xpc2ggb3VyIHdvcmssIG5vdCB3ZWFyIGl0IGF3YXkuIFRoZXJlIG11c3QKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjExMyIgLz4KCmFsc28gYmUgYSBsaW1pdCB0byB0aGUgdGltZSB3aGljaCB3ZSBzcGVuZCBvbiBpdHMKcmV2aXNpb24uIEZvciB0aGUgZmFjdCB0aGF0IENpbm5hPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkMuIEhlbHZpdXMgQ2lubmEsIHRoZSBmcmllbmQgb2YgQ2F0dWxsdXMuIFRoZSBTbXlybmEKd2FzIGEgc2hvcnQgYnV0IGV4Y2VwdGlvbmFsbHkgb2JzY3VyZSBhbmQgbGVhcm5lZCBlcGljLjwvbm90ZT4gdG9vayBuaW5lIHllYXJzCnRvIHdyaXRlIGhpcyBTbXlybmEsIGFuZCB0aGF0IElzb2NyYXRlcyByZXF1aXJlZAp0ZW4geWVhcnMsIGF0IHRoZSBsb3dlc3QgZXN0aW1hdGUsIHRvIGNvbXBsZXRlIGhpcwpQYW5lZ3lyaWMgZG9lcyBub3QgY29uY2VybiB0aGUgb3JhdG9yLCB3aG9zZQphc3Npc3RhbmNlIHdpbGwgYmUgb2Ygbm8gdXNlLCBpZiBpdCBpcyBzbyBsb25nCmRlbGF5ZWQuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+TXkgbmV4dCB0YXNrIGlzIHRvIGluZGljYXRlIHdoYXQgdGhvc2Ugc2hvdWxkCndyaXRlIHdob3NlIGFpbSBpcyB0byBhY3F1aXJlIGZhY2lsaXR5Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIHguIGkuIDEuCkNoLiBpeC48L25vdGU+IEF0IHRoaXMgcGFydApvZiBteSB3b3JrIHRoZXJlIGlzIG5vIG5lY2Vzc2l0eSBmb3IgbWUgdG8gc2V0IGZvcnRoCnRoZSBzdWJqZWN0cyB3aGljaCBzaG91bGQgYmUgc2VsZWN0ZWQgZm9yIHdyaXRpbmcsCm9yIHRoZSBvcmRlciBpbiB3aGljaCB0aGV5IHNob3VsZCBiZSBhcHByb2FjaGVkLApzaW5jZSBJIGhhdmUgYWxyZWFkeSBkb25lIHRoaXMgaW4gdGhlIGZpcnN0IGJvb2ssPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5DaC4gaXYuPC9ub3RlPgp3aGVyZSBJIHByZXNjcmliZWQgdGhlIHNlcXVlbmNlIG9mIHN0dWRpZXMgZm9yIGJveXMsCmFuZCBpbiB0aGUgc2Vjb25kIGJvb2ssIHdoZXJlIEkgZGlkIHRoZSBzYW1lIGZvcgp5b3VuZyBtZW4uIFRoZSBwb2ludCB3aGljaCBjb25jZXJucyBtZSBub3cgaXMKdG8gc2hvdyBmcm9tIHdoYXQgc291cmNlcyBjb3Bpb3VzbmVzcyBhbmQgZmFjaWxpdHkKbWF5IG1vc3QgZWFzaWx5IGJlIGRlcml2ZWQuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['10.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['10.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPk15IG5leHQgdGFzayBpcyB0byBpbmRpY2F0ZSB3aGF0IHRob3NlIHNob3VsZAp3cml0ZSB3aG9zZSBhaW0gaXMgdG8gYWNxdWlyZSBmYWNpbGl0eS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIHguIGkuIDEuCkNoLiBpeC48L25vdGU+IEF0IHRoaXMgcGFydApvZiBteSB3b3JrIHRoZXJlIGlzIG5vIG5lY2Vzc2l0eSBmb3IgbWUgdG8gc2V0IGZvcnRoCnRoZSBzdWJqZWN0cyB3aGljaCBzaG91bGQgYmUgc2VsZWN0ZWQgZm9yIHdyaXRpbmcsCm9yIHRoZSBvcmRlciBpbiB3aGljaCB0aGV5IHNob3VsZCBiZSBhcHByb2FjaGVkLApzaW5jZSBJIGhhdmUgYWxyZWFkeSBkb25lIHRoaXMgaW4gdGhlIGZpcnN0IGJvb2ssPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkNoLiBpdi48L25vdGU+CndoZXJlIEkgcHJlc2NyaWJlZCB0aGUgc2VxdWVuY2Ugb2Ygc3R1ZGllcyBmb3IgYm95cywKYW5kIGluIHRoZSBzZWNvbmQgYm9vaywgd2hlcmUgSSBkaWQgdGhlIHNhbWUgZm9yCnlvdW5nIG1lbi4gVGhlIHBvaW50IHdoaWNoIGNvbmNlcm5zIG1lIG5vdyBpcwp0byBzaG93IGZyb20gd2hhdCBzb3VyY2VzIGNvcGlvdXNuZXNzIGFuZCBmYWNpbGl0eQptYXkgbW9zdCBlYXNpbHkgYmUgZGVyaXZlZC48cCBjbGFzcz0idHJhbnNsYXRpb24iPk91ciBlYXJsaWVyIG9yYXRvcnMgdGhvdWdodCBoaWdobHkgb2YgdHJhbnNsYXRpb24KZnJvbSBHcmVlayBpbnRvIExhdGluLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBJbiB0aGUgPGhpIHJlbmQ9Iml0YWxpY3MiPmRlIE9yYXRvcmU8L2hpPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+aS4gMTU1Ljwvbm90ZT4gb2YKQ2ljZXJvLCBMdWNpdXMgQ3Jhc3N1cyBzYXlzIHRoYXQgaGUgcHJhY3Rpc2VkIHRoaXMKY29udGludWFsbHksIHdoaWxlIENpY2VybyBoaW1zZWxmIGFkdm9jYXRlcyBpdCBhZ2FpbgphbmQgYWdhaW4sIG5heSwgaGUgYWN0dWFsbHkgcHVibGlzaGVkIHRyYW5zbGF0aW9ucwpvZiBYZW5vcGhvbiBhbmQgUGxhdG8sPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGUgKDxoaSByZW5kPSJpdGFsaWNzIj5FY29ub21pY3VzIG9mPC9oaT4gWGVub3Bob24sIHRoZSA8aGkgcmVuZD0iaXRhbGljcyI+UHJvdXRheW9ydXM8L2hpPiBhbmQgPGhpIHJlbmQ9Iml0YWxpY3MiPlRpbWFldXM8L2hpPgpvZiBQbGF0by48L25vdGU+IHdoaWNoIHdlcmUgdGhlIHJlc3VsdCBvZgp0aGlzIGZvcm0gb2YgZXhlcmNpc2UuIE1lc3NhbGEgbGlrZXdpc2UgZ2F2ZSBpdCBoaXMKYXBwcm92YWwsIGFuZCB3ZSBoYXZlIGEgbnVtYmVyIG9mIHRyYW5zbGF0aW9ucyBvZgpzcGVlY2hlcyBmcm9tIGhpcyBoYW5kOyBoZSBldmVuIHN1Y2NlZWRlZCBpbgpjb3Bpbmcgd2l0aCB0aGUgZGVsaWNhY3kgb2YgSHlwZXJpZGVzJyBzcGVlY2ggaW4KZGVmZW5jZSBvZiBQaHJ5bmUsIGEgdGFzayBvZiBleGNlZWRpbmcgZGlmZmljdWx0eSBmb3IKYSBSb21hbi48bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBwdXJwb3NlIG9mIHRoaXMgZm9ybSBvZiBleGVyY2lzZSBpcwpvYnZpb3VzLiBGb3IgR3JlZWsgYXV0aG9ycyBhcmUgY29uc3BpY3VvdXMgZm9yIHRoZQp2YXJpZXR5IG9mIHRoZWlyIG1hdHRlciwgYW5kIHRoZXJlIGlzIG11Y2ggYXJ0IGluCmFsbCB0aGVpciBlbG9xdWVuY2UsIHdoaWxlLCB3aGVuIHdlIHRyYW5zbGF0ZSB0aGVtLAp3ZSBhcmUgYXQgbGliZXJ0eSB0byB1c2UgdGhlIGJlc3Qgd29yZHMgYXZhaWxhYmxlLAoKPHBiIGlkPSJwLjExNSIgLz4KCnNpbmNlIGFsbCB0aGF0IHdlIHVzZSBhcmUgb3VyIHZlcnkgb3duLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPkkuZS48L2hpPiB3ZSBzaGFsbCBub3QgYm9ycm93IGZyb20gb3VyIG1vZGVscywgYXMgd2UgZG8gaW4KcGFyYXBocmFzaW5nIExhdGluLjwvbm90ZT4gQXMgcmVnYXJkcwpmaWd1cmVzLCB0b28sIHdoaWNoIGFyZSB0aGUgY2hpZWYgb3JuYW1lbnQgb2Ygb3JhdG9yeSwKaXQgaXMgbmVjZXNzYXJ5IHRvIHRoaW5rIG91dCBhIGdyZWF0IG51bWJlciBhbmQgdmFyaWV0eQpmb3Igb3Vyc2VsdmVzLCBzaW5jZSBpbiB0aGlzIHJlc3BlY3QgdGhlIFJvbWFuIGlkaW9tCmRpZmZlcnMgbGFyZ2VseSBmcm9tIHRoZSBHcmVlay48L3A+CjwvdHJhbnNsYXRpb24+"
translation['10.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBJbiB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3JhdG9yZTwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPmkuIDE1NS48L25vdGU+IG9mCkNpY2VybywgTHVjaXVzIENyYXNzdXMgc2F5cyB0aGF0IGhlIHByYWN0aXNlZCB0aGlzCmNvbnRpbnVhbGx5LCB3aGlsZSBDaWNlcm8gaGltc2VsZiBhZHZvY2F0ZXMgaXQgYWdhaW4KYW5kIGFnYWluLCBuYXksIGhlIGFjdHVhbGx5IHB1Ymxpc2hlZCB0cmFuc2xhdGlvbnMKb2YgWGVub3Bob24gYW5kIFBsYXRvLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGUgKDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkVjb25vbWljdXMgb2Y8L2hpPiBYZW5vcGhvbiwgdGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlByb3V0YXlvcnVzPC9oaT4gYW5kIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlRpbWFldXM8L2hpPgpvZiBQbGF0by48L25vdGU+IHdoaWNoIHdlcmUgdGhlIHJlc3VsdCBvZgp0aGlzIGZvcm0gb2YgZXhlcmNpc2UuIE1lc3NhbGEgbGlrZXdpc2UgZ2F2ZSBpdCBoaXMKYXBwcm92YWwsIGFuZCB3ZSBoYXZlIGEgbnVtYmVyIG9mIHRyYW5zbGF0aW9ucyBvZgpzcGVlY2hlcyBmcm9tIGhpcyBoYW5kOyBoZSBldmVuIHN1Y2NlZWRlZCBpbgpjb3Bpbmcgd2l0aCB0aGUgZGVsaWNhY3kgb2YgSHlwZXJpZGVzJyBzcGVlY2ggaW4KZGVmZW5jZSBvZiBQaHJ5bmUsIGEgdGFzayBvZiBleGNlZWRpbmcgZGlmZmljdWx0eSBmb3IKYSBSb21hbi48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5FY29ub21pY3VzIG9mPC9oaT4gWGVub3Bob24sIHRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Qcm91dGF5b3J1czwvaGk+IGFuZCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5UaW1hZXVzPC9oaT4Kb2YgUGxhdG8uPC90cmFuc2xhdGlvbj4="
translation['10.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBUaGUgcHVycG9zZSBvZiB0aGlzIGZvcm0gb2YgZXhlcmNpc2UgaXMKb2J2aW91cy4gRm9yIEdyZWVrIGF1dGhvcnMgYXJlIGNvbnNwaWN1b3VzIGZvciB0aGUKdmFyaWV0eSBvZiB0aGVpciBtYXR0ZXIsIGFuZCB0aGVyZSBpcyBtdWNoIGFydCBpbgphbGwgdGhlaXIgZWxvcXVlbmNlLCB3aGlsZSwgd2hlbiB3ZSB0cmFuc2xhdGUgdGhlbSwKd2UgYXJlIGF0IGxpYmVydHkgdG8gdXNlIHRoZSBiZXN0IHdvcmRzIGF2YWlsYWJsZSwKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjExNSIgLz4KCnNpbmNlIGFsbCB0aGF0IHdlIHVzZSBhcmUgb3VyIHZlcnkgb3duLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5JLmUuPC9oaT4gd2Ugc2hhbGwgbm90IGJvcnJvdyBmcm9tIG91ciBtb2RlbHMsIGFzIHdlIGRvIGluCnBhcmFwaHJhc2luZyBMYXRpbi48L25vdGU+IEFzIHJlZ2FyZHMKZmlndXJlcywgdG9vLCB3aGljaCBhcmUgdGhlIGNoaWVmIG9ybmFtZW50IG9mIG9yYXRvcnksCml0IGlzIG5lY2Vzc2FyeSB0byB0aGluayBvdXQgYSBncmVhdCBudW1iZXIgYW5kIHZhcmlldHkKZm9yIG91cnNlbHZlcywgc2luY2UgaW4gdGhpcyByZXNwZWN0IHRoZSBSb21hbiBpZGlvbQpkaWZmZXJzIGxhcmdlbHkgZnJvbSB0aGUgR3JlZWsuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SS5lLjwvaGk+IHdlIHNoYWxsIG5vdCBib3Jyb3cgZnJvbSBvdXIgbW9kZWxzLCBhcyB3ZSBkbyBpbgpwYXJhcGhyYXNpbmcgTGF0aW4uPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgcGFyYXBocmFzZSBmcm9tIHRoZSBMYXRpbiB3aWxsIGFsc28gYmUgb2YKbXVjaCBhc3Npc3RhbmNlLCB3aGlsZSBJIHRoaW5rIHdlIHNoYWxsIGFsbCBhZ3JlZSB0aGF0CnRoaXMgaXMgc3BlY2lhbGx5IHZhbHVhYmxlIHdpdGggcmVnYXJkIHRvIHBvZXRyeTsKaW5kZWVkLCBpdCBpcyBzYWlkIHRoYXQgdGhlIHBhcmFwaHJhc2Ugb2YgcG9ldHJ5IHdhcwp0aGUgc29sZSBmb3JtIG9mIGV4ZXJjaXNlIGVtcGxveWVkIGJ5IFN1bHBpY2l1cy4KRm9yIHRoZSBsb2Z0eSBpbnNwaXJhdGlvbiBvZiB2ZXJzZSBzZXJ2ZXMgdG8gZWxldmF0ZQp0aGUgb3JhdG9yJ3Mgc3R5bGUgYW5kIHRoZSBib2xkIGxpY2Vuc2Ugb2YgcG9ldGljCmxhbmd1YWdlIGRvZXMgbm90IHByZWNsdWRlPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+TGl0LjwvaGk+IDxxdW90ZT5mb3Jlc3RhbGwgdGhlIHBvd2VyIG9mIHVzaW5nIHRoZSBsYW5ndWFnZSBvZgpvcmRpbmFyeSBwcm9zZS48L3F1b3RlPjwvbm90ZT4gb3VyIGF0dGVtcHRpbmcgdG8KcmVuZGVyIHRoZSBzYW1lIHdvcmRzIGluIHRoZSBsYW5ndWFnZSBuYXR1cmFsIHRvCnByb3NlLiBOYXksIHdlIG1heSBhZGQgdGhlIHZpZ291ciBvZiBvcmF0b3J5CnRvIHRoZSB0aG91Z2h0cyBleHByZXNzZWQgYnkgdGhlIHBvZXQsIG1ha2UgZ29vZApoaXMgb21pc3Npb25zLCBhbmQgcHJ1bmUgaGlzIGRpZmZ1c2VuZXNzLjxtaWxlc3RvbmUgbj0iNSIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IEkKd291bGQgbm90IGhhdmUgcGFyYXBocmFzZSByZXN0cmljdCBpdHNlbGYgdG8gdGhlCmJhcmUgaW50ZXJwcmV0YXRpb24gb2YgdGhlIG9yaWdpbmFsOiBpdHMgZHV0eSBpcwpyYXRoZXIgdG8gcml2YWwgYW5kIHZpZSB3aXRoIHRoZSBvcmlnaW5hbCBpbiB0aGUKZXhwcmVzc2lvbiBvZiB0aGUgc2FtZSB0aG91Z2h0cy4gQ29uc2VxdWVudGx5LApJIGRpc2FncmVlIHdpdGggdGhvc2Ugd2hvIGZvcmJpZCB0aGUgc3R1ZGVudCB0bwpwYXJhaHJhc2Ugc3BlZWNoZXMgb2Ygb3VyIG93biBvcmF0b3JzLCBvbiB0aGUKZ3JvdW5kIHRoYXQsIHNpbmNlIGFsbCB0aGUgYmVzdCBleHByZXNzaW9ucyBoYXZlCmFscmVhZHkgYmVlbiBhcHByb3ByaWF0ZWQsIHdoYXRldmVyIHdlIGV4cHJlc3MKZGlmZmVyZW50bHkgbXVzdCBuZWNlc3NhcmlseSBiZSBhIGNoYW5nZSBmb3IgdGhlCndvcnNlLiBGb3IgaXQgaXMgYWx3YXlzIHBvc3NpYmxlIHRoYXQgd2UgbWF5IGRpc2NvdmVyIGV4cHJlc3Npb25zIHdoaWNoIGFyZSBhbiBpbXByb3ZlbWVudCBvbgp0aG9zZSB3aGljaCBoYXZlIGFscmVhZHkgYmVlbiB1c2VkLCBhbmQgbmF0dXJlCmRpZCBub3QgbWFrZSBlbG9xdWVuY2Ugc3VjaCBhIHBvb3IgYW5kIHN0YXJ2ZWxpbmcKdGhpbmcsIHRoYXQgdGhlcmUgc2hvdWxkIGJlIG9ubHkgb25lIGFkZXF1YXRlCmV4cHJlc3Npb24gZm9yIGFueSBvbmUgdGhlbWUuPG1pbGVzdG9uZSBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBJdCBjYW4gaGFyZGx5IGJlCmFyZ3VlZCB0aGF0LCB3aGlsZSB0aGUgZ2VzdHVyZXMgb2YgdGhlIGFjdG9yIGFyZQpjYXBhYmxlIG9mIGltcGFydGluZyBhIHdlYWx0aCBvZiB2YXJpZWQgbWVhbmluZwoKPHBiIGlkPSJwLjExNyIgLz4KCnRvIHRoZSBzYW1lIHdvcmRzLCB0aGUgcG93ZXIgb2Ygb3JhdG9yeSBpcyByZXN0cmljdGVkCnRvIGEgbmFycm93ZXIgc2NvcGUsIHNvIHRoYXQgd2hlbiBhIHRoaW5nIGhhcyBvbmNlCmJlZW4gc2FpZCwgaXQgaXMgaW1wb3NzaWJsZSB0byBzYXkgYW55dGhpbmcgZWxzZSBvbgp0aGUgc2FtZSB0aGVtZS4gV2h5LCBldmVuIGlmIGl0IGJlIGdyYW50ZWQgdGhhdApubyBuZXcgZXhwcmVzc2lvbiB3ZSBkaXNjb3ZlciBjYW4gYmUgYmV0dGVyIHRoYW4Kb3IgZXZlbiBlcXVhbCB0byB0aGUgb2xkLCBpdCBtYXksIGF0IGFueSByYXRlLCBiZQphIGdvb2Qgc2Vjb25kLjxtaWxlc3RvbmUgbj0iNyIgdW5pdD0ic2VjdGlvbiIgLz4gRG8gd2Ugbm90IG9mdGVuIHNwZWFrIHR3aWNlLCBvcgpldmVuIG1vcmUgZnJlcXVlbnRseSwgb24gdGhlIHNhbWUgc3ViamVjdCwgc29tZXRpbWVzIGV2ZW4gdG8gdGhlIGV4dGVudCBvZiBhIG51bWJlciBvZiBzZW50ZW5jZXMKaW4gc3VjY2Vzc2lvbj8gSXQgd2lsbCBzY2FyY2UgYmUgYXNzZXJ0ZWQgdGhhdCB3ZQptdXN0IG5vdCBtYXRjaCBvdXJzZWx2ZXMgYWdhaW5zdCBvdGhlcnMgd2hlbgp3ZSBhcmUgcGVybWl0dGVkIHRvIG1hdGNoIG91cnNlbHZlcyBhZ2FpbnN0IG91cnNlbHZlcy4gRm9yIGlmIHRoZXJlIHdlcmUgb25seSBvbmUgd2F5IGluIHdoaWNoCmFueXRoaW5nIGNvdWxkIGJlIHNhdGlzZmFjdG9yaWx5IGV4cHJlc3NlZCwgd2UKc2hvdWxkIGJlIGp1c3RpZmllZCBpbiB0aGlua2luZyB0aGF0IHRoZSBwYXRoIHRvCnN1Y2Nlc3MgaGFkIGJlZW4gc2VhbGVkIHRvIHVzIGJ5IG91ciBwcmVkZWNlc3NvcnMuCkJ1dCwgYXMgYSBtYXR0ZXIgb2YgZmFjdCwgdGhlIG1ldGhvZHMgb2YgZXhwcmVzc2lvbgpzdGlsbCBsZWZ0IHVzIGFyZSBpbm51bWVyYWJsZSwgYW5kIG1hbnkgcm9hZHMgbGVhZAp1cyB0byB0aGUgc2FtZSBnb2FsLjxtaWxlc3RvbmUgbj0iOCIgdW5pdD0ic2VjdGlvbiIgLz4gQnJldml0eSBhbmQgY29waW91c25lc3MgZWFjaApoYXZlIHRoZWlyIG93biBwZWN1bGlhciBncmFjZSwgdGhlIG1lcml0cyBvZiBtZXRhcGhvciBhcmUgb25lIHRoaW5nIGFuZCBvZiBsaXRlcmFsbmVzcyBhbm90aGVyLCBhbmQsCndoaWxlIGRpcmVjdCBleHByZXNzaW9uIGlzIG1vc3QgZWZmZWN0aXZlIGluIG9uZSBjYXNlLAppbiBhbm90aGVyIHRoZSBiZXN0IHJlc3VsdCBpcyBnYWluZWQgYnkgYSB1c2Ugb2YKZmlndXJlcy4gRnVydGhlciwgdGhlIGV4ZXJjaXNlIGlzIHZhbHVhYmxlIGluIHZpcnR1ZQpvZiBpdHMgZGlmZmljdWx0eTsgYW5kIGFnYWluLCB0aGVyZSBpcyBubyBiZXR0ZXIgd2F5IG9mCmFjcXVpcmluZyBhIHRob3JvdWdoIHVuZGVyc3RhbmRpbmcgb2YgdGhlIGdyZWF0ZXN0CmF1dGhvcnMuIEZvciwgaW5zdGVhZCBvZiBodXJyaWVkbHkgcnVubmluZyBhIGNhcmVsZXNzCmV5ZSBvdmVyIHRoZWlyIHdyaXRpbmdzLCB3ZSBoYW5kbGUgZWFjaCBzZXBhcmF0ZQpwaHJhc2UgYW5kIGFyZSBmb3JjZWQgdG8gZ2l2ZSBpdCBjbG9zZSBleGFtaW5hdGlvbiwKYW5kIHdlIGNvbWUgdG8gcmVhbGlzZSB0aGUgZ3JlYXRuZXNzIG9mIHRoZWlyIGV4Y2VsbGVuY2UgZnJvbSB0aGUgdmVyeSBmYWN0IHRoYXQgd2UgY2Fubm90IGltaXRhdGUKdGhlbS48L3A+CjwvdHJhbnNsYXRpb24+"
translation['10.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBwYXJhcGhyYXNlIGZyb20gdGhlIExhdGluIHdpbGwgYWxzbyBiZSBvZgptdWNoIGFzc2lzdGFuY2UsIHdoaWxlIEkgdGhpbmsgd2Ugc2hhbGwgYWxsIGFncmVlIHRoYXQKdGhpcyBpcyBzcGVjaWFsbHkgdmFsdWFibGUgd2l0aCByZWdhcmQgdG8gcG9ldHJ5OwppbmRlZWQsIGl0IGlzIHNhaWQgdGhhdCB0aGUgcGFyYXBocmFzZSBvZiBwb2V0cnkgd2FzCnRoZSBzb2xlIGZvcm0gb2YgZXhlcmNpc2UgZW1wbG95ZWQgYnkgU3VscGljaXVzLgpGb3IgdGhlIGxvZnR5IGluc3BpcmF0aW9uIG9mIHZlcnNlIHNlcnZlcyB0byBlbGV2YXRlCnRoZSBvcmF0b3IncyBzdHlsZSBhbmQgdGhlIGJvbGQgbGljZW5zZSBvZiBwb2V0aWMKbGFuZ3VhZ2UgZG9lcyBub3QgcHJlY2x1ZGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+TGl0LjwvaGk+IDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmZvcmVzdGFsbCB0aGUgcG93ZXIgb2YgdXNpbmcgdGhlIGxhbmd1YWdlIG9mCm9yZGluYXJ5IHByb3NlLjwvcXVvdGU+PC9ub3RlPiBvdXIgYXR0ZW1wdGluZyB0bwpyZW5kZXIgdGhlIHNhbWUgd29yZHMgaW4gdGhlIGxhbmd1YWdlIG5hdHVyYWwgdG8KcHJvc2UuIE5heSwgd2UgbWF5IGFkZCB0aGUgdmlnb3VyIG9mIG9yYXRvcnkKdG8gdGhlIHRob3VnaHRzIGV4cHJlc3NlZCBieSB0aGUgcG9ldCwgbWFrZSBnb29kCmhpcyBvbWlzc2lvbnMsIGFuZCBwcnVuZSBoaXMgZGlmZnVzZW5lc3MuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+TGl0LjwvaGk+IDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmZvcmVzdGFsbCB0aGUgcG93ZXIgb2YgdXNpbmcgdGhlIGxhbmd1YWdlIG9mCm9yZGluYXJ5IHByb3NlLjwvcXVvdGU+PC90cmFuc2xhdGlvbj4="
translation['10.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgSQp3b3VsZCBub3QgaGF2ZSBwYXJhcGhyYXNlIHJlc3RyaWN0IGl0c2VsZiB0byB0aGUKYmFyZSBpbnRlcnByZXRhdGlvbiBvZiB0aGUgb3JpZ2luYWw6IGl0cyBkdXR5IGlzCnJhdGhlciB0byByaXZhbCBhbmQgdmllIHdpdGggdGhlIG9yaWdpbmFsIGluIHRoZQpleHByZXNzaW9uIG9mIHRoZSBzYW1lIHRob3VnaHRzLiBDb25zZXF1ZW50bHksCkkgZGlzYWdyZWUgd2l0aCB0aG9zZSB3aG8gZm9yYmlkIHRoZSBzdHVkZW50IHRvCnBhcmFocmFzZSBzcGVlY2hlcyBvZiBvdXIgb3duIG9yYXRvcnMsIG9uIHRoZQpncm91bmQgdGhhdCwgc2luY2UgYWxsIHRoZSBiZXN0IGV4cHJlc3Npb25zIGhhdmUKYWxyZWFkeSBiZWVuIGFwcHJvcHJpYXRlZCwgd2hhdGV2ZXIgd2UgZXhwcmVzcwpkaWZmZXJlbnRseSBtdXN0IG5lY2Vzc2FyaWx5IGJlIGEgY2hhbmdlIGZvciB0aGUKd29yc2UuIEZvciBpdCBpcyBhbHdheXMgcG9zc2libGUgdGhhdCB3ZSBtYXkgZGlzY292ZXIgZXhwcmVzc2lvbnMgd2hpY2ggYXJlIGFuIGltcHJvdmVtZW50IG9uCnRob3NlIHdoaWNoIGhhdmUgYWxyZWFkeSBiZWVuIHVzZWQsIGFuZCBuYXR1cmUKZGlkIG5vdCBtYWtlIGVsb3F1ZW5jZSBzdWNoIGEgcG9vciBhbmQgc3RhcnZlbGluZwp0aGluZywgdGhhdCB0aGVyZSBzaG91bGQgYmUgb25seSBvbmUgYWRlcXVhdGUKZXhwcmVzc2lvbiBmb3IgYW55IG9uZSB0aGVtZS48L3RyYW5zbGF0aW9uPg=="
translation['10.5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBJdCBjYW4gaGFyZGx5IGJlCmFyZ3VlZCB0aGF0LCB3aGlsZSB0aGUgZ2VzdHVyZXMgb2YgdGhlIGFjdG9yIGFyZQpjYXBhYmxlIG9mIGltcGFydGluZyBhIHdlYWx0aCBvZiB2YXJpZWQgbWVhbmluZwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTE3IiAvPgoKdG8gdGhlIHNhbWUgd29yZHMsIHRoZSBwb3dlciBvZiBvcmF0b3J5IGlzIHJlc3RyaWN0ZWQKdG8gYSBuYXJyb3dlciBzY29wZSwgc28gdGhhdCB3aGVuIGEgdGhpbmcgaGFzIG9uY2UKYmVlbiBzYWlkLCBpdCBpcyBpbXBvc3NpYmxlIHRvIHNheSBhbnl0aGluZyBlbHNlIG9uCnRoZSBzYW1lIHRoZW1lLiBXaHksIGV2ZW4gaWYgaXQgYmUgZ3JhbnRlZCB0aGF0Cm5vIG5ldyBleHByZXNzaW9uIHdlIGRpc2NvdmVyIGNhbiBiZSBiZXR0ZXIgdGhhbgpvciBldmVuIGVxdWFsIHRvIHRoZSBvbGQsIGl0IG1heSwgYXQgYW55IHJhdGUsIGJlCmEgZ29vZCBzZWNvbmQuPC90cmFuc2xhdGlvbj4="
translation['10.5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBEbyB3ZSBub3Qgb2Z0ZW4gc3BlYWsgdHdpY2UsIG9yCmV2ZW4gbW9yZSBmcmVxdWVudGx5LCBvbiB0aGUgc2FtZSBzdWJqZWN0LCBzb21ldGltZXMgZXZlbiB0byB0aGUgZXh0ZW50IG9mIGEgbnVtYmVyIG9mIHNlbnRlbmNlcwppbiBzdWNjZXNzaW9uPyBJdCB3aWxsIHNjYXJjZSBiZSBhc3NlcnRlZCB0aGF0IHdlCm11c3Qgbm90IG1hdGNoIG91cnNlbHZlcyBhZ2FpbnN0IG90aGVycyB3aGVuCndlIGFyZSBwZXJtaXR0ZWQgdG8gbWF0Y2ggb3Vyc2VsdmVzIGFnYWluc3Qgb3Vyc2VsdmVzLiBGb3IgaWYgdGhlcmUgd2VyZSBvbmx5IG9uZSB3YXkgaW4gd2hpY2gKYW55dGhpbmcgY291bGQgYmUgc2F0aXNmYWN0b3JpbHkgZXhwcmVzc2VkLCB3ZQpzaG91bGQgYmUganVzdGlmaWVkIGluIHRoaW5raW5nIHRoYXQgdGhlIHBhdGggdG8Kc3VjY2VzcyBoYWQgYmVlbiBzZWFsZWQgdG8gdXMgYnkgb3VyIHByZWRlY2Vzc29ycy4KQnV0LCBhcyBhIG1hdHRlciBvZiBmYWN0LCB0aGUgbWV0aG9kcyBvZiBleHByZXNzaW9uCnN0aWxsIGxlZnQgdXMgYXJlIGlubnVtZXJhYmxlLCBhbmQgbWFueSByb2FkcyBsZWFkCnVzIHRvIHRoZSBzYW1lIGdvYWwuPC90cmFuc2xhdGlvbj4="
translation['10.5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiBCcmV2aXR5IGFuZCBjb3Bpb3VzbmVzcyBlYWNoCmhhdmUgdGhlaXIgb3duIHBlY3VsaWFyIGdyYWNlLCB0aGUgbWVyaXRzIG9mIG1ldGFwaG9yIGFyZSBvbmUgdGhpbmcgYW5kIG9mIGxpdGVyYWxuZXNzIGFub3RoZXIsIGFuZCwKd2hpbGUgZGlyZWN0IGV4cHJlc3Npb24gaXMgbW9zdCBlZmZlY3RpdmUgaW4gb25lIGNhc2UsCmluIGFub3RoZXIgdGhlIGJlc3QgcmVzdWx0IGlzIGdhaW5lZCBieSBhIHVzZSBvZgpmaWd1cmVzLiBGdXJ0aGVyLCB0aGUgZXhlcmNpc2UgaXMgdmFsdWFibGUgaW4gdmlydHVlCm9mIGl0cyBkaWZmaWN1bHR5OyBhbmQgYWdhaW4sIHRoZXJlIGlzIG5vIGJldHRlciB3YXkgb2YKYWNxdWlyaW5nIGEgdGhvcm91Z2ggdW5kZXJzdGFuZGluZyBvZiB0aGUgZ3JlYXRlc3QKYXV0aG9ycy4gRm9yLCBpbnN0ZWFkIG9mIGh1cnJpZWRseSBydW5uaW5nIGEgY2FyZWxlc3MKZXllIG92ZXIgdGhlaXIgd3JpdGluZ3MsIHdlIGhhbmRsZSBlYWNoIHNlcGFyYXRlCnBocmFzZSBhbmQgYXJlIGZvcmNlZCB0byBnaXZlIGl0IGNsb3NlIGV4YW1pbmF0aW9uLAphbmQgd2UgY29tZSB0byByZWFsaXNlIHRoZSBncmVhdG5lc3Mgb2YgdGhlaXIgZXhjZWxsZW5jZSBmcm9tIHRoZSB2ZXJ5IGZhY3QgdGhhdCB3ZSBjYW5ub3QgaW1pdGF0ZQp0aGVtLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjkiIHVuaXQ9InNlY3Rpb24iIC8+Tm9yIGlzIGl0IG9ubHkgdGhlIHBhcmFwaHJhc2Ugb2YgdGhlIHdvcmtzIG9mCm90aGVycyB0aGF0IHdlIHNoYWxsIGZpbmQgb2YgYWR2YW50YWdlOiBtdWNoIG1heQoKPHBiIGlkPSJwLjExOSIgLz4KCmJlIGdhaW5lZCBmcm9tIHBhcmFwaHJhc2luZyBvdXIgb3duIHdvcmRzIGluIGEKbnVtYmVyIG9mIGRpZmZlcmVudCB3YXlzOiBmb3IgaW5zdGFuY2UsIHdlIG1heQpzcGVjaWFsbHkgc2VsZWN0IGNlcnRhaW4gdGhvdWdodHMgYW5kIHJlY2FzdCB0aGVtCmluIHRoZSBncmVhdGVzdCB2YXJpZXR5IG9mIGZvcm1zLCBqdXN0IGFzIGEgc2N1bHB0b3IKd2lsbCBmYXNoaW9uIGEgbnVtYmVyIG9mIGRpZmZlcmVudCBpbWFnZXMgZnJvbSB0aGUKc2FtZSBwaWVjZSBvZiB3YXguPG1pbGVzdG9uZSBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGl0IGlzIHRoZSBzaW1wbGVzdCBzdWJqZWN0cwp3aGljaCwgaW4gbXkgb3Bpbmlvbiwgd2lsbCBzZXJ2ZSB1cyBiZXN0IGluIG91cgphdHRlbXB0IHRvIGFjcXVpcmUgZmFjaWxpdHkuIEZvciBvdXIgbGFjayBvZiB0YWxlbnQKbWF5IGVhc2lseSBzaGVsdGVyIGl0c2VsZiBiZWhpbmQgdGhlIGNvbXBsaWNhdGVkCm1hc3Mgb2YgZGV0YWlsIHByZXNlbnRlZCBieSBwZXJzb25zLCBjYXNlcywgY2lyY3Vtc3RhbmNlcyBvZiB0aW1lIGFuZCBwbGFjZSwgd29yZHMgYW5kIGRlZWRzLCBzaW5jZQp0aGUgc3ViamVjdHMgd2hpY2ggcHJlc2VudCB0aGVtc2VsdmVzIG9uIGFsbCBzaWRlcwphcmUgc28gbWFueSB0aGF0IGl0IHdpbGwgYWx3YXlzIGJlIHBvc3NpYmxlIHRvIGxheQpob2xkIG9mIHNvbWUgb25lIG9yIG90aGVyLjxtaWxlc3RvbmUgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+IFRydWUgbWVyaXQgaXMgcmV2ZWFsZWQKYnkgdGhlIHBvd2VyIHRvIGV4cGFuZCB3aGF0IGlzIG5hdHVyYWxseSBjb21wcmVzc2VkLCB0byBhbXBsaWZ5IHdoYXQgaXMgc21hbGwsIHRvIGxlbmQgdmFyaWV0eQp0byBzYW1lbmVzcywgY2hhcm0gdG8gdGhlIGNvbW1vbnBsYWNlLCBhbmQgdG8Kc2F5IGEgcXVhbnRpdHkgb2YgZ29vZCB0aGluZ3MgYWJvdXQgYSB2ZXJ5IGxpbWl0ZWQKbnVtYmVyIG9mIHN1YmplY3RzLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk5vciBpcyBpdCBvbmx5IHRoZSBwYXJhcGhyYXNlIG9mIHRoZSB3b3JrcyBvZgpvdGhlcnMgdGhhdCB3ZSBzaGFsbCBmaW5kIG9mIGFkdmFudGFnZTogbXVjaCBtYXkKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjExOSIgLz4KCmJlIGdhaW5lZCBmcm9tIHBhcmFwaHJhc2luZyBvdXIgb3duIHdvcmRzIGluIGEKbnVtYmVyIG9mIGRpZmZlcmVudCB3YXlzOiBmb3IgaW5zdGFuY2UsIHdlIG1heQpzcGVjaWFsbHkgc2VsZWN0IGNlcnRhaW4gdGhvdWdodHMgYW5kIHJlY2FzdCB0aGVtCmluIHRoZSBncmVhdGVzdCB2YXJpZXR5IG9mIGZvcm1zLCBqdXN0IGFzIGEgc2N1bHB0b3IKd2lsbCBmYXNoaW9uIGEgbnVtYmVyIG9mIGRpZmZlcmVudCBpbWFnZXMgZnJvbSB0aGUKc2FtZSBwaWVjZSBvZiB3YXguPC90cmFuc2xhdGlvbj4="
translation['10.5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGl0IGlzIHRoZSBzaW1wbGVzdCBzdWJqZWN0cwp3aGljaCwgaW4gbXkgb3Bpbmlvbiwgd2lsbCBzZXJ2ZSB1cyBiZXN0IGluIG91cgphdHRlbXB0IHRvIGFjcXVpcmUgZmFjaWxpdHkuIEZvciBvdXIgbGFjayBvZiB0YWxlbnQKbWF5IGVhc2lseSBzaGVsdGVyIGl0c2VsZiBiZWhpbmQgdGhlIGNvbXBsaWNhdGVkCm1hc3Mgb2YgZGV0YWlsIHByZXNlbnRlZCBieSBwZXJzb25zLCBjYXNlcywgY2lyY3Vtc3RhbmNlcyBvZiB0aW1lIGFuZCBwbGFjZSwgd29yZHMgYW5kIGRlZWRzLCBzaW5jZQp0aGUgc3ViamVjdHMgd2hpY2ggcHJlc2VudCB0aGVtc2VsdmVzIG9uIGFsbCBzaWRlcwphcmUgc28gbWFueSB0aGF0IGl0IHdpbGwgYWx3YXlzIGJlIHBvc3NpYmxlIHRvIGxheQpob2xkIG9mIHNvbWUgb25lIG9yIG90aGVyLjwvdHJhbnNsYXRpb24+"
translation['10.5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gVHJ1ZSBtZXJpdCBpcyByZXZlYWxlZApieSB0aGUgcG93ZXIgdG8gZXhwYW5kIHdoYXQgaXMgbmF0dXJhbGx5IGNvbXByZXNzZWQsIHRvIGFtcGxpZnkgd2hhdCBpcyBzbWFsbCwgdG8gbGVuZCB2YXJpZXR5CnRvIHNhbWVuZXNzLCBjaGFybSB0byB0aGUgY29tbW9ucGxhY2UsIGFuZCB0bwpzYXkgYSBxdWFudGl0eSBvZiBnb29kIHRoaW5ncyBhYm91dCBhIHZlcnkgbGltaXRlZApudW1iZXIgb2Ygc3ViamVjdHMuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Gb3IgdGhpcyBwdXJwb3NlIGluZGVmaW5pdGUgcXVlc3Rpb25zLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgSUlJLiB2LiA1IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPi5zcS48L2hpPjwvbm90ZT4gb2YgdGhlIGtpbmQKd2UgY2FsbCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj50aGVzZXMsPC9oaT4gd2lsbCBiZSBmb3VuZCBvZiB0aGUgdXRtb3N0IHNlcnZpY2U6CmluIGZhY3QsIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZCBBdHQuPC9oaT4gSVguIGl2LiAxLjwvbm90ZT4gc3RpbGwgZXhlcmNpc2VkIGhpbXNlbGYgdXBvbiBzdWNoCnRoZW1lcyBhZnRlciBoZSBoYWQgYmVjb21lIHRoZSBsZWFkaW5nIG1hbiBpbgp0aGUgc3RhdGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyIiB1bml0PSJzZWN0aW9uIiAvPiBBa2luIHRvIHRoZXNlIGFyZSB0aGUgcHJvb2Ygb3IgcmVmdXRhdGlvbiBvZiBnZW5lcmFsIHN0YXRlbWVudHMuIEZvciBzdWNoIHN0YXRlbWVudHMKYXJlIGEga2luZCBvZiBkZWNyZWUgb3IgcnVsZSwgYW5kIHdoYXRldmVyIHByb2JsZW0KbWF5IGFyaXNlIGZyb20gdGhlIHRoaW5nLCBtYXkgZXF1YWxseSBhcmlzZSBmcm9tIHRoZQpkZWNpc2lvbiBwYXNzZWQgdXBvbiB0aGUgdGhpbmcuIFRoZW4gdGhlcmUgYXJlCmNvbW1vbnBsYWNlcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBJSS4gaSA54oCTMTEgYW5kIGl2LiAyMi48L25vdGU+IHdoaWNoLCBhcyB3ZSBrbm93LCBoYXZlIG9mdGVuIGJlZW4Kd3JpdHRlbiBieSBvcmF0b3JzIGFzIGEgZm9ybSBvZiBleGVyY2lzZS4gVGhlIG1hbgp3aG8gaGFzIHByYWN0aXNlZCBoaW1zZWxmIGluIGdpdmluZyBmdWxsIHRyZWF0bWVudAp0byBzdWNoIHNpbXBsZSBhbmQgdW5jb21wbGljYXRlZCB0aGVtZXMsIHdpbGwKYXNzdXJlZGx5IGZpbmQgaGlzIGZsdWVuY3kgaW5jcmVhc2VkIGluIHRob3NlIHN1YmplY3RzCndoaWNoIGFkbWl0IG9mIHZhcmllZCBkaWdyZXNzaW9uLCBhbmQgd2lsbCBiZQoKPHBiIGlkPSJwLjEyMSIgLz4KCnByZXBhcmVkIHRvIGRlYWwgd2l0aCBhbnkgY2FzZSB0aGF0IG1heSBjb25mcm9udCBoaW0sCnNpbmNlIGFsbCBjYXNlcyB1bHRpbWF0ZWx5IHR1cm4gdXBvbiBnZW5lcmFsIHF1ZXN0aW9ucy48bWlsZXN0b25lIG49IjEzIiB1bml0PSJzZWN0aW9uIiAvPiBGb3Igd2hhdCBkaWZmZXJlbmNlIGlzIHRoZXJlIGJldHdlZW4gdGhlCnNwZWNpYWwgY2FzZSB3aGVyZSBDb3JuZWxpdXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgSVYuIGl2LiA4OyB2LiB4aWlpLiAyNjsgVkkuIHYuIDEwOyBJSS4gaWlpLiAzLCAzNS48L25vdGU+IHRoZSB0cmlidW5lIG9mIHRoZQpwZW9wbGUsIGlzIGNoYXJnZWQgd2l0aCByZWFkaW5nIHRoZSB0ZXh0IG9mIGEgcHJvcG9zZWQgbGF3LCBhbmQgdGhlIGdlbmVyYWwgcXVlc3Rpb24gd2hldGhlciBpdCBpcwo8aGkgcmVuZD0iaXRhbGljcyI+bMOpc2UtbWFqZXN0w6g8L2hpPiBmb3IgYSBtYWdpc3RyYXRlIGhpbXNlbGYgdG8gcmVhZCB0aGUKbGF3IHdoaWNoIGhlIHByb3Bvc2VzIHRvIHRoZSBwZW9wbGU7IHdoYXQgZG9lcyBpdAptYXR0ZXIgd2hldGhlciB3ZSBoYXZlIHRvIGRlY2lkZSB3aGV0aGVyIE1pbG8gd2FzCmp1c3RpZmllZCBpbiBraWxsaW5nIENsb2RpdXMsIG9yIHdoZXRoZXIgaXQgaXMganVzdGlmaWFibGUgdG8ga2lsbCBhIG1hbiB3aG8gaGFzIHNldCBhbiBhbWJ1c2ggZm9yIGhpcwpzbGF5ZXIsIG9yIGEgY2l0aXplbiB3aG9zZSBleGlzdGVuY2UgaXMgYSBkYW5nZXIgdG8KdGhlIHN0YXRlLCBldmVuIHRob3VnaCBoZSBoYXMgc2V0IG5vIHN1Y2ggYW1idXNoPwpXaGF0IGRpZmZlcmVuY2UgaXMgdGhlcmUgYmV0d2VlbiB0aGUgcXVlc3Rpb24Kd2hldGhlciBpdCB3YXMgYW4gaG9ub3VyYWJsZSBhY3Qgb24gdGhlIHBhcnQgb2YKQ2F0byB0byBtYWtlIG92ZXIgTWFyY2lhIHRvIEhvcnRlbnNpdXMsIG9yIHdoZXRoZXIKc3VjaCBhbiBhY3Rpb24gaXMgYmVjb21pbmcgdG8gYSB2aXJ0dW91cyBtYW4/IEl0IGlzCm9uIHRoZSBndWlsdCBvciBpbm5vY2VuY2Ugb2Ygc3BlY2lmaWMgcGVyc29ucyB0aGF0Cmp1ZGdlbWVudCBpcyBnaXZlbiwgYnV0IGl0IGlzIG9uIGdlbmVyYWwgcHJpbmNpcGxlcwp0aGF0IHRoZSBjYXNlIHVsdGltYXRlbHkgcmVzdHMuPG1pbGVzdG9uZSBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz4gQXMgZm9yIGRlY2xhbWF0aW9ucwpvZiB0aGUga2luZCBkZWxpdmVyZWQgaW4gdGhlIHNjaG9vbHMgb2YgdGhlIHJoZXRvcmljaWFucywgc28gbG9uZyBhcyB0aGV5IGFyZSBpbiBrZWVwaW5nIHdpdGggYWN0dWFsCmxpZmUgYW5kIHJlc2VtYmxlIHNwZWVjaGVzLCB0aGV5IGFyZSBtb3N0IHByb2ZpdGFibGUKdG8gdGhlIHN0dWRlbnQsIG5vdCBtZXJlbHkgd2hpbGUgaGU8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPnByb2ZlY3R1cywgPGhpIHJlbmQ9Iml0YWxpY3MiPmxpdC48L2hpPiA8cXVvdGU+cHJvZ3Jlc3MsPC9xdW90ZT4gYWJzdHJhY3QgZm9yIGNvbmNyZXRlLjwvbm90ZT4gaXMgc3RpbGwgaW1tYXR1cmUsCmZvciB0aGUgcmVhc29uIHRoYXQgdGhleSBzaW11bHRhbmVvdXNseSBleGVyY2lzZSB0aGUKcG93ZXJzIGJvdGggb2YgaW52ZW50aW9uIGFuZCBhcnJhbmdlbWVudCwgYnV0IGV2ZW4Kd2hlbiBoZSBoYXMgZmluaXNoZWQgaGlzIGVkdWNhdGlvbiBhbmQgYWNxdWlyZWQgYQpyZXB1dGF0aW9uIGluIHRoZSBjb3VydHMuIEZvciB0aGV5IHByb3ZpZGUgYSByaWNoZXIKZGlldCBmcm9tIHdoaWNoIGVsb3F1ZW5jZSBkZXJpdmVzIG5vdXJpc2htZW50IGFuZApicmlsbGlhbmNlIG9mIGNvbXBsZXhpb24sIGFuZCBhdCB0aGUgc2FtZSB0aW1lIGFmZm9yZAphIHJlZnJlc2hpbmcgdmFyaWV0eSBhZnRlciB0aGUgY29udGludW91cyBmYXRpZ3VlcwpvZiBmb3JlbnNpYyBkaXNwdXRlcy48bWlsZXN0b25lIG49IjE1IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgdGhlIHNhbWUgcmVhc29uLCB0aGUgd2VhbHRoCm9mIGxhbmd1YWdlIHRoYXQgbWFya3MgdGhlIGhpc3RvcmlhbiBzaG91bGQgYmUgZnJvbQp0aW1lIHRvIHRpbWUgaW1wb3J0ZWQgaW50byBwb3J0aW9ucyBvZiBvdXIgd3JpdHRlbgoKPHBiIGlkPSJwLjEyMyIgLz4KCmV4ZXJjaXNlcywgYW5kIHdlIHNob3VsZCBpbmR1bGdlIGluIHRoZSBlYXN5IGZyZWVkb20gb2YgZGlhbG9ndWUuIE5heSwgaXQgbWF5IGV2ZW4gYmUgYWR2YW50YWdlb3VzCnRvIGFtdXNlIG91cnNlbHZlcyB3aXRoIHRoZSB3cml0aW5nIG9mIHZlcnNlLCBqdXN0IGFzCmF0aGxldGVzIG9jY2FzaW9uYWxseSBkcm9wIHRoZSBzZXZlcmUgcmVnaW1lIG9mIGRpZXQKYW5kIGV4ZXJjaXNlIHRvIHdoaWNoIHRoZXkgYXJlIHN1YmplY3RlZCBhbmQgcmVmcmVzaAp0aGVtc2VsdmVzIGJ5IHRha2luZyBhIHJlc3QgYW5kIGluZHVsZ2luZyBpbiBtb3JlCmRhaW50eSBhbmQgYWdyZWVhYmxlIHZpYW5kcy48bWlsZXN0b25lIG49IjE2IiB1bml0PSJzZWN0aW9uIiAvPiBJbmRlZWQsIGluIG15IG9waW5pb24sCm9uZSBvZiB0aGUgcmVhc29ucyB3aHkgQ2ljZXJvIHdhcyBlbmFibGVkIHRvIHNoZWQKc3VjaCBnbG9yeSB1cG9uIHRoZSBhcnQgb2Ygc3BlYWtpbmcgaXMgdG8gYmUgZm91bmQKaW4gaGlzIGV4Y3Vyc2lvbnMgdG8gc3VjaCBieXBhdGhzIG9mIHN0dWR5LiBGb3IgaWYKYWxsIG91ciBtYXRlcmlhbCB3YXMgZHJhd24gc29sZWx5IGZyb20gYWN0aW9ucyBhdApsYXcsIG91ciBlbG9xdWVuY2UgbXVzdCBuZWVkcyBsb3NlIGl0cyBnbG9zcywgb3VyCmxpbWJzIGdyb3cgc3RpZmYsIGFuZCB0aGUga2VlbiBlZGdlIG9mIHRoZSBpbnRlbGxlY3QKYmUgYmx1bnRlZCBieSBpdHMgZGFpbHkgY29tYmF0cy48L3A+Cjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgSUlJLiB2LiA1IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPi5zcS48L2hpPjwvbm90ZT4gb2YgdGhlIGtpbmQKd2UgY2FsbCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj4uc3EuPC9oaT48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj50aGVzZXMsPC9oaT4gd2lsbCBiZSBmb3VuZCBvZiB0aGUgdXRtb3N0IHNlcnZpY2U6CmluIGZhY3QsIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZCBBdHQuPC9oaT4gSVguIGl2LiAxLjwvbm90ZT4gc3RpbGwgZXhlcmNpc2VkIGhpbXNlbGYgdXBvbiBzdWNoCnRoZW1lcyBhZnRlciBoZSBoYWQgYmVjb21lIHRoZSBsZWFkaW5nIG1hbiBpbgp0aGUgc3RhdGUuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QWQgQXR0LjwvaGk+IElYLiBpdi4gMS48L3RyYW5zbGF0aW9uPg=="
translation['10.5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gQWtpbiB0byB0aGVzZSBhcmUgdGhlIHByb29mIG9yIHJlZnV0YXRpb24gb2YgZ2VuZXJhbCBzdGF0ZW1lbnRzLiBGb3Igc3VjaCBzdGF0ZW1lbnRzCmFyZSBhIGtpbmQgb2YgZGVjcmVlIG9yIHJ1bGUsIGFuZCB3aGF0ZXZlciBwcm9ibGVtCm1heSBhcmlzZSBmcm9tIHRoZSB0aGluZywgbWF5IGVxdWFsbHkgYXJpc2UgZnJvbSB0aGUKZGVjaXNpb24gcGFzc2VkIHVwb24gdGhlIHRoaW5nLiBUaGVuIHRoZXJlIGFyZQpjb21tb25wbGFjZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBJSS4gaSA54oCTMTEgYW5kIGl2LiAyMi48L25vdGU+IHdoaWNoLCBhcyB3ZSBrbm93LCBoYXZlIG9mdGVuIGJlZW4Kd3JpdHRlbiBieSBvcmF0b3JzIGFzIGEgZm9ybSBvZiBleGVyY2lzZS4gVGhlIG1hbgp3aG8gaGFzIHByYWN0aXNlZCBoaW1zZWxmIGluIGdpdmluZyBmdWxsIHRyZWF0bWVudAp0byBzdWNoIHNpbXBsZSBhbmQgdW5jb21wbGljYXRlZCB0aGVtZXMsIHdpbGwKYXNzdXJlZGx5IGZpbmQgaGlzIGZsdWVuY3kgaW5jcmVhc2VkIGluIHRob3NlIHN1YmplY3RzCndoaWNoIGFkbWl0IG9mIHZhcmllZCBkaWdyZXNzaW9uLCBhbmQgd2lsbCBiZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTIxIiAvPgoKcHJlcGFyZWQgdG8gZGVhbCB3aXRoIGFueSBjYXNlIHRoYXQgbWF5IGNvbmZyb250IGhpbSwKc2luY2UgYWxsIGNhc2VzIHVsdGltYXRlbHkgdHVybiB1cG9uIGdlbmVyYWwgcXVlc3Rpb25zLjwvdHJhbnNsYXRpb24+"
translation['10.5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHdoYXQgZGlmZmVyZW5jZSBpcyB0aGVyZSBiZXR3ZWVuIHRoZQpzcGVjaWFsIGNhc2Ugd2hlcmUgQ29ybmVsaXVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgSVYuIGl2LiA4OyB2LiB4aWlpLiAyNjsgVkkuIHYuIDEwOyBJSS4gaWlpLiAzLCAzNS48L25vdGU+IHRoZSB0cmlidW5lIG9mIHRoZQpwZW9wbGUsIGlzIGNoYXJnZWQgd2l0aCByZWFkaW5nIHRoZSB0ZXh0IG9mIGEgcHJvcG9zZWQgbGF3LCBhbmQgdGhlIGdlbmVyYWwgcXVlc3Rpb24gd2hldGhlciBpdCBpcwo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5sw6lzZS1tYWplc3TDqDwvaGk+IGZvciBhIG1hZ2lzdHJhdGUgaGltc2VsZiB0byByZWFkIHRoZQpsYXcgd2hpY2ggaGUgcHJvcG9zZXMgdG8gdGhlIHBlb3BsZTsgd2hhdCBkb2VzIGl0Cm1hdHRlciB3aGV0aGVyIHdlIGhhdmUgdG8gZGVjaWRlIHdoZXRoZXIgTWlsbyB3YXMKanVzdGlmaWVkIGluIGtpbGxpbmcgQ2xvZGl1cywgb3Igd2hldGhlciBpdCBpcyBqdXN0aWZpYWJsZSB0byBraWxsIGEgbWFuIHdobyBoYXMgc2V0IGFuIGFtYnVzaCBmb3IgaGlzCnNsYXllciwgb3IgYSBjaXRpemVuIHdob3NlIGV4aXN0ZW5jZSBpcyBhIGRhbmdlciB0bwp0aGUgc3RhdGUsIGV2ZW4gdGhvdWdoIGhlIGhhcyBzZXQgbm8gc3VjaCBhbWJ1c2g/CldoYXQgZGlmZmVyZW5jZSBpcyB0aGVyZSBiZXR3ZWVuIHRoZSBxdWVzdGlvbgp3aGV0aGVyIGl0IHdhcyBhbiBob25vdXJhYmxlIGFjdCBvbiB0aGUgcGFydCBvZgpDYXRvIHRvIG1ha2Ugb3ZlciBNYXJjaWEgdG8gSG9ydGVuc2l1cywgb3Igd2hldGhlcgpzdWNoIGFuIGFjdGlvbiBpcyBiZWNvbWluZyB0byBhIHZpcnR1b3VzIG1hbj8gSXQgaXMKb24gdGhlIGd1aWx0IG9yIGlubm9jZW5jZSBvZiBzcGVjaWZpYyBwZXJzb25zIHRoYXQKanVkZ2VtZW50IGlzIGdpdmVuLCBidXQgaXQgaXMgb24gZ2VuZXJhbCBwcmluY2lwbGVzCnRoYXQgdGhlIGNhc2UgdWx0aW1hdGVseSByZXN0cy48L3RyYW5zbGF0aW9uPg=="
translation['10.5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz4gQXMgZm9yIGRlY2xhbWF0aW9ucwpvZiB0aGUga2luZCBkZWxpdmVyZWQgaW4gdGhlIHNjaG9vbHMgb2YgdGhlIHJoZXRvcmljaWFucywgc28gbG9uZyBhcyB0aGV5IGFyZSBpbiBrZWVwaW5nIHdpdGggYWN0dWFsCmxpZmUgYW5kIHJlc2VtYmxlIHNwZWVjaGVzLCB0aGV5IGFyZSBtb3N0IHByb2ZpdGFibGUKdG8gdGhlIHN0dWRlbnQsIG5vdCBtZXJlbHkgd2hpbGUgaGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+cHJvZmVjdHVzLCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5saXQuPC9oaT4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+cHJvZ3Jlc3MsPC9xdW90ZT4gYWJzdHJhY3QgZm9yIGNvbmNyZXRlLjwvbm90ZT4gaXMgc3RpbGwgaW1tYXR1cmUsCmZvciB0aGUgcmVhc29uIHRoYXQgdGhleSBzaW11bHRhbmVvdXNseSBleGVyY2lzZSB0aGUKcG93ZXJzIGJvdGggb2YgaW52ZW50aW9uIGFuZCBhcnJhbmdlbWVudCwgYnV0IGV2ZW4Kd2hlbiBoZSBoYXMgZmluaXNoZWQgaGlzIGVkdWNhdGlvbiBhbmQgYWNxdWlyZWQgYQpyZXB1dGF0aW9uIGluIHRoZSBjb3VydHMuIEZvciB0aGV5IHByb3ZpZGUgYSByaWNoZXIKZGlldCBmcm9tIHdoaWNoIGVsb3F1ZW5jZSBkZXJpdmVzIG5vdXJpc2htZW50IGFuZApicmlsbGlhbmNlIG9mIGNvbXBsZXhpb24sIGFuZCBhdCB0aGUgc2FtZSB0aW1lIGFmZm9yZAphIHJlZnJlc2hpbmcgdmFyaWV0eSBhZnRlciB0aGUgY29udGludW91cyBmYXRpZ3VlcwpvZiBmb3JlbnNpYyBkaXNwdXRlcy48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5saXQuPC9oaT4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+cHJvZ3Jlc3MsPC9xdW90ZT4gYWJzdHJhY3QgZm9yIGNvbmNyZXRlLjwvdHJhbnNsYXRpb24+"
translation['10.5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZSBzYW1lIHJlYXNvbiwgdGhlIHdlYWx0aApvZiBsYW5ndWFnZSB0aGF0IG1hcmtzIHRoZSBoaXN0b3JpYW4gc2hvdWxkIGJlIGZyb20KdGltZSB0byB0aW1lIGltcG9ydGVkIGludG8gcG9ydGlvbnMgb2Ygb3VyIHdyaXR0ZW4KCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjEyMyIgLz4KCmV4ZXJjaXNlcywgYW5kIHdlIHNob3VsZCBpbmR1bGdlIGluIHRoZSBlYXN5IGZyZWVkb20gb2YgZGlhbG9ndWUuIE5heSwgaXQgbWF5IGV2ZW4gYmUgYWR2YW50YWdlb3VzCnRvIGFtdXNlIG91cnNlbHZlcyB3aXRoIHRoZSB3cml0aW5nIG9mIHZlcnNlLCBqdXN0IGFzCmF0aGxldGVzIG9jY2FzaW9uYWxseSBkcm9wIHRoZSBzZXZlcmUgcmVnaW1lIG9mIGRpZXQKYW5kIGV4ZXJjaXNlIHRvIHdoaWNoIHRoZXkgYXJlIHN1YmplY3RlZCBhbmQgcmVmcmVzaAp0aGVtc2VsdmVzIGJ5IHRha2luZyBhIHJlc3QgYW5kIGluZHVsZ2luZyBpbiBtb3JlCmRhaW50eSBhbmQgYWdyZWVhYmxlIHZpYW5kcy48L3RyYW5zbGF0aW9uPg=="
translation['10.5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz4gSW5kZWVkLCBpbiBteSBvcGluaW9uLApvbmUgb2YgdGhlIHJlYXNvbnMgd2h5IENpY2VybyB3YXMgZW5hYmxlZCB0byBzaGVkCnN1Y2ggZ2xvcnkgdXBvbiB0aGUgYXJ0IG9mIHNwZWFraW5nIGlzIHRvIGJlIGZvdW5kCmluIGhpcyBleGN1cnNpb25zIHRvIHN1Y2ggYnlwYXRocyBvZiBzdHVkeS4gRm9yIGlmCmFsbCBvdXIgbWF0ZXJpYWwgd2FzIGRyYXduIHNvbGVseSBmcm9tIGFjdGlvbnMgYXQKbGF3LCBvdXIgZWxvcXVlbmNlIG11c3QgbmVlZHMgbG9zZSBpdHMgZ2xvc3MsIG91cgpsaW1icyBncm93IHN0aWZmLCBhbmQgdGhlIGtlZW4gZWRnZSBvZiB0aGUgaW50ZWxsZWN0CmJlIGJsdW50ZWQgYnkgaXRzIGRhaWx5IGNvbWJhdHMuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTciIHVuaXQ9InNlY3Rpb24iIC8+QnV0IGFsdGhvdWdoIHRob3NlIHdobyBmaW5kIHRoZWlyIHByYWN0aWNlIGluIHRoZQpjb250ZXN0cyBvZiBmb3JlbnNpYyB3YXJmYXJlIGRlcml2ZSBmcmVzaCBzdHJlbmd0aAphbmQgcmVwYWlyIHRoZWlyIGZvcmNlcyBieSBtZWFucyBvZiB0aGlzIHJpY2ggZmFyZSBvZgplbG9xdWVuY2UsIHRoZSB5b3VuZyBzaG91bGQgbm90IGJlIGtlcHQgdG9vIGxvbmcgYXQKdGhlc2UgZmFsc2Ugc2VtYmxhbmNlcyBvZiByZWFsaXR5LCBub3Igc2hvdWxkIHRoZXkgYmUKYWxsb3dlZCB0byBiZWNvbWUgc28gZmFtaWxpYXIgd2l0aCB0aGVzZSBlbXB0eQpzaGFkb3dzIHRoYXQgaXQgaXMgZGlmZmljdWx0IGZvciB0aGVtIHRvIGxlYXZlIHRoZW06Cm90aGVyd2lzZSB0aGVyZSBpcyBhbHdheXMgdGhlIGRhbmdlciB0aGF0LCBvd2luZyB0bwp0aGUgc2VjbHVzaW9uIGluIHdoaWNoIHRoZXkgaGF2ZSBhbG1vc3QgZ3Jvd24Kb2xkLCB0aGV5IHdpbGwgc2hyaW5rIGluIHRlcnJvciBmcm9tIHRoZSByZWFsIHBlcmlscwpvZiBwdWJsaWMgbGlmZSwgbGlrZSBtZW4gZGF6emxlZCBieSB0aGUgdW5mYW1pbGlhcgpzdW5saWdodC48bWlsZXN0b25lIG49IjE4IiB1bml0PSJzZWN0aW9uIiAvPiBJbmRlZWQgaXQgaXMgcmVjb3JkZWQgdGhhdCB0aGlzIGZhdGUKYWN0dWFsbHkgYmVmZWxsIE1hcmN1cyBQb3JjaXVzIExhdHJvLCB0aGUgZmlyc3QgcHJvZmVzc29yIG9mIHJoZXRvcmljIHRvIG1ha2UgYSBuYW1lIGZvciBoaW1zZWxmOyBmb3IKd2hlbiwgYXQgdGhlIGhlaWdodCBvZiBoaXMgZmFtZSBpbiB0aGUgc2Nob29scywgaGUgd2FzCmNhbGxlZCB1cG9uIHRvIHBsZWFkIGEgY2FzZSBpbiB0aGUgZm9ydW0sIGhlIHB1dApmb3J3YXJkIHRoZSBtb3N0IGVhcm5lc3QgcmVxdWVzdCB0aGF0IHRoZSBjb3VydApzaG91bGQgYmUgdHJhbnNmZXJyZWQgdG8gc29tZSBwdWJsaWMgaGFsbC4gSGUgd2FzCnNvIHVuYWNjdXN0b21lZCB0byBzcGVhayBpbiB0aGUgb3BlbiBhaXIgdGhhdCBhbGwgaGlzCmVsb3F1ZW5jZSBzZWVtZWQgdG8gcmVzaWRlIHdpdGhpbiB0aGUgY29tcGFzcyBvZiBhCgo8cGIgaWQ9InAuMTI1IiAvPgoKcm9vZiBhbmQgZm91ciB3YWxscy48bWlsZXN0b25lIG49IjE5IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgdGhpcyByZWFzb24gYSB5b3VuZyBtYW4Kd2hvIGhhcyBhY3F1aXJlZCBhIHRob3JvdWdoIGtub3dsZWRnZSBmcm9tIGhpcwppbnN0cnVjdG9ycyBvZiB0aGUgbWV0aG9kcyBvZiBpbnZlbnRpb24gYW5kIHN0eWxlCih3aGljaCBpcyBub3QgYnkgYW55IG1lYW5zIGFuIGVuZGxlc3MgdGFzaywgaWYgdGhvc2UKaW5zdHJ1Y3RvcnMgaGF2ZSB0aGUga25vd2xlZGdlIGFuZCB0aGUgd2lsbCB0bwp0ZWFjaCksIGFuZCB3aG8gaGFzIGFsc28gbWFuYWdlZCB0byBvYnRhaW4gYQpyZWFzb25hYmxlIGFtb3VudCBvZiBwcmFjdGljZSBpbiB0aGUgYXJ0LCBzaG91bGQKZm9sbG93IHRoZSBjdXN0b20gaW4gdm9ndWUgd2l0aCBvdXIgYW5jZXN0b3JzLCBhbmQKc2VsZWN0IHNvbWUgb25lIG9yYXRvciB0byBmb2xsb3cgYW5kIGltaXRhdGUuIEhlCnNob3VsZCBhdHRlbmQgYXMgbWFueSB0cmlhbHMgYXMgcG9zc2libGUgYW5kIGJlIGEKZnJlcXVlbnQgc3BlY3RhdG9yIG9mIHRoZSBjb25mbGljdHMgaW4gd2hpY2ggaGUgaXMKZGVzdGluZWQgdG8gdGFrZSBwYXJ0LjxtaWxlc3RvbmUgbj0iMjAiIHVuaXQ9InNlY3Rpb24iIC8+IE5leHQgaGUgc2hvdWxkIHdyaXRlIG91dApzcGVlY2hlcyBvZiBoaXMgb3duIGRlYWxpbmcgZWl0aGVyIHdpdGggdGhlIGNhc2VzCndoaWNoIGhlIGhhcyBhY3R1YWxseSBoZWFyZCBwbGVhZGVkIG9yIHdpdGggb3RoZXJzLApwcm92aWRlZCBhbHdheXMgdGhleSBiZSBhY3R1YWwgY2FzZXMsIGFuZCBzaG91bGQKYXJndWUgdGhlbSBmcm9tIGJvdGggc2lkZXMsIHRyYWluaW5nIGhpbXNlbGYgd2l0aAp0aGUgcmVhbCB3ZWFwb25zIG9mIGhpcyB3YXJmYXJlLCBqdXN0IGFzIGdsYWRpYXRvcnMgZG8Kb3IgYXMgQnJ1dHVzIGRpZCBpbiB0aGF0IHNwZWVjaCBpbiBkZWZlbmNlIG9mIE1pbG8Kd2hpY2ggSSBoYXZlIGFscmVhZHkgbWVudGlvbmVkLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIElJSS4gdmkuIDkzOyB4LiBpLiAyMy48L25vdGU+IFRoaXMgaXMgYmV0dGVyCnRoYW4gd3JpdGluZyByZXBsaWVzIHRvIG9sZCBzcGVlY2hlcywgYXMgQ2VzdGl1cyBkaWQKdG8gQ2ljZXJvJ3MgZGVmZW5jZSBvZiBNaWxvIGluIHNwaXRlIG9mIHRoZSBmYWN0IHRoYXQsCmhpcyBrbm93bGVkZ2UgYmVpbmcgY29uZmluZWQgdG8gd2hhdCB3YXMgc2FpZCBmb3IKdGhlIGRlZmVuY2UsIGhlIGNvdWxkIG5vdCBoYXZlIHBvc3Nlc3NlZCBzdWZmaWNpZW50CmFjcXVhaW50YW5jZSB3aXRoIHRoZSBvdGhlciBzaWRlIG9mIHRoZSBjYXNlLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgYWx0aG91Z2ggdGhvc2Ugd2hvIGZpbmQgdGhlaXIgcHJhY3RpY2UgaW4gdGhlCmNvbnRlc3RzIG9mIGZvcmVuc2ljIHdhcmZhcmUgZGVyaXZlIGZyZXNoIHN0cmVuZ3RoCmFuZCByZXBhaXIgdGhlaXIgZm9yY2VzIGJ5IG1lYW5zIG9mIHRoaXMgcmljaCBmYXJlIG9mCmVsb3F1ZW5jZSwgdGhlIHlvdW5nIHNob3VsZCBub3QgYmUga2VwdCB0b28gbG9uZyBhdAp0aGVzZSBmYWxzZSBzZW1ibGFuY2VzIG9mIHJlYWxpdHksIG5vciBzaG91bGQgdGhleSBiZQphbGxvd2VkIHRvIGJlY29tZSBzbyBmYW1pbGlhciB3aXRoIHRoZXNlIGVtcHR5CnNoYWRvd3MgdGhhdCBpdCBpcyBkaWZmaWN1bHQgZm9yIHRoZW0gdG8gbGVhdmUgdGhlbToKb3RoZXJ3aXNlIHRoZXJlIGlzIGFsd2F5cyB0aGUgZGFuZ2VyIHRoYXQsIG93aW5nIHRvCnRoZSBzZWNsdXNpb24gaW4gd2hpY2ggdGhleSBoYXZlIGFsbW9zdCBncm93bgpvbGQsIHRoZXkgd2lsbCBzaHJpbmsgaW4gdGVycm9yIGZyb20gdGhlIHJlYWwgcGVyaWxzCm9mIHB1YmxpYyBsaWZlLCBsaWtlIG1lbiBkYXp6bGVkIGJ5IHRoZSB1bmZhbWlsaWFyCnN1bmxpZ2h0LjwvdHJhbnNsYXRpb24+"
translation['10.5.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz4gSW5kZWVkIGl0IGlzIHJlY29yZGVkIHRoYXQgdGhpcyBmYXRlCmFjdHVhbGx5IGJlZmVsbCBNYXJjdXMgUG9yY2l1cyBMYXRybywgdGhlIGZpcnN0IHByb2Zlc3NvciBvZiByaGV0b3JpYyB0byBtYWtlIGEgbmFtZSBmb3IgaGltc2VsZjsgZm9yCndoZW4sIGF0IHRoZSBoZWlnaHQgb2YgaGlzIGZhbWUgaW4gdGhlIHNjaG9vbHMsIGhlIHdhcwpjYWxsZWQgdXBvbiB0byBwbGVhZCBhIGNhc2UgaW4gdGhlIGZvcnVtLCBoZSBwdXQKZm9yd2FyZCB0aGUgbW9zdCBlYXJuZXN0IHJlcXVlc3QgdGhhdCB0aGUgY291cnQKc2hvdWxkIGJlIHRyYW5zZmVycmVkIHRvIHNvbWUgcHVibGljIGhhbGwuIEhlIHdhcwpzbyB1bmFjY3VzdG9tZWQgdG8gc3BlYWsgaW4gdGhlIG9wZW4gYWlyIHRoYXQgYWxsIGhpcwplbG9xdWVuY2Ugc2VlbWVkIHRvIHJlc2lkZSB3aXRoaW4gdGhlIGNvbXBhc3Mgb2YgYQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTI1IiAvPgoKcm9vZiBhbmQgZm91ciB3YWxscy48L3RyYW5zbGF0aW9uPg=="
translation['10.5.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoaXMgcmVhc29uIGEgeW91bmcgbWFuCndobyBoYXMgYWNxdWlyZWQgYSB0aG9yb3VnaCBrbm93bGVkZ2UgZnJvbSBoaXMKaW5zdHJ1Y3RvcnMgb2YgdGhlIG1ldGhvZHMgb2YgaW52ZW50aW9uIGFuZCBzdHlsZQood2hpY2ggaXMgbm90IGJ5IGFueSBtZWFucyBhbiBlbmRsZXNzIHRhc2ssIGlmIHRob3NlCmluc3RydWN0b3JzIGhhdmUgdGhlIGtub3dsZWRnZSBhbmQgdGhlIHdpbGwgdG8KdGVhY2gpLCBhbmQgd2hvIGhhcyBhbHNvIG1hbmFnZWQgdG8gb2J0YWluIGEKcmVhc29uYWJsZSBhbW91bnQgb2YgcHJhY3RpY2UgaW4gdGhlIGFydCwgc2hvdWxkCmZvbGxvdyB0aGUgY3VzdG9tIGluIHZvZ3VlIHdpdGggb3VyIGFuY2VzdG9ycywgYW5kCnNlbGVjdCBzb21lIG9uZSBvcmF0b3IgdG8gZm9sbG93IGFuZCBpbWl0YXRlLiBIZQpzaG91bGQgYXR0ZW5kIGFzIG1hbnkgdHJpYWxzIGFzIHBvc3NpYmxlIGFuZCBiZSBhCmZyZXF1ZW50IHNwZWN0YXRvciBvZiB0aGUgY29uZmxpY3RzIGluIHdoaWNoIGhlIGlzCmRlc3RpbmVkIHRvIHRha2UgcGFydC48L3RyYW5zbGF0aW9uPg=="
translation['10.5.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz4gTmV4dCBoZSBzaG91bGQgd3JpdGUgb3V0CnNwZWVjaGVzIG9mIGhpcyBvd24gZGVhbGluZyBlaXRoZXIgd2l0aCB0aGUgY2FzZXMKd2hpY2ggaGUgaGFzIGFjdHVhbGx5IGhlYXJkIHBsZWFkZWQgb3Igd2l0aCBvdGhlcnMsCnByb3ZpZGVkIGFsd2F5cyB0aGV5IGJlIGFjdHVhbCBjYXNlcywgYW5kIHNob3VsZAphcmd1ZSB0aGVtIGZyb20gYm90aCBzaWRlcywgdHJhaW5pbmcgaGltc2VsZiB3aXRoCnRoZSByZWFsIHdlYXBvbnMgb2YgaGlzIHdhcmZhcmUsIGp1c3QgYXMgZ2xhZGlhdG9ycyBkbwpvciBhcyBCcnV0dXMgZGlkIGluIHRoYXQgc3BlZWNoIGluIGRlZmVuY2Ugb2YgTWlsbwp3aGljaCBJIGhhdmUgYWxyZWFkeSBtZW50aW9uZWQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBJSUkuIHZpLiA5MzsgeC4gaS4gMjMuPC9ub3RlPiBUaGlzIGlzIGJldHRlcgp0aGFuIHdyaXRpbmcgcmVwbGllcyB0byBvbGQgc3BlZWNoZXMsIGFzIENlc3RpdXMgZGlkCnRvIENpY2VybydzIGRlZmVuY2Ugb2YgTWlsbyBpbiBzcGl0ZSBvZiB0aGUgZmFjdCB0aGF0LApoaXMga25vd2xlZGdlIGJlaW5nIGNvbmZpbmVkIHRvIHdoYXQgd2FzIHNhaWQgZm9yCnRoZSBkZWZlbmNlLCBoZSBjb3VsZCBub3QgaGF2ZSBwb3NzZXNzZWQgc3VmZmljaWVudAphY3F1YWludGFuY2Ugd2l0aCB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgY2FzZS48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgeW91bmcgbWFuLCBob3dldmVyLCB3aG9tIGhpcyBpbnN0cnVjdG9yIGhhcwpjb21wZWxsZWQgdG8gYmUgYXMgcmVhbGlzdGljIGFzIHBvc3NpYmxlIGluIGRlY2xhbWF0aW9uLAphbmQgdG8gZGVhbCB3aXRoIGV2ZXJ5IGNsYXNzIG9mIHN1YmplY3QsIGluc3RlYWQgb2YKbWVyZWx5IHNlbGVjdGluZyB0aGUgZWFzaWVzdCBhbmQgbW9zdCBhdHRyYWN0aXZlIGNhc2VzLAphcyBpcyBkb25lIGF0IHByZXNlbnQsIHdpbGwgdGh1cyBxdWFsaWZ5IGhpbXNlbGYgbXVjaAptb3JlIHJhcGlkbHkgZm9yIGFjdHVhbCBmb3JlbnNpYyBwcmFjdGljZS4gVW5kZXIgZXhpc3RpbmcgY2lyY3Vtc3RhbmNlcyB0aGUgcHJhY3RpY2Ugb2YgdGhlIHByaW5jaXBsZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPkkuZS48L2hpPiA8cXVvdGU+cGVyIHRvdGFzIGlyZSBtYXRlcmlhcy48L3F1b3RlPjwvbm90ZT4gd2hpY2gKSSBtZW50aW9uZWQgc2Vjb25kIGlzLCBhcyBhIHJ1bGUsIGhhbXBlcmVkIGJ5IHRoZQpsYXJnZSBzaXplIG9mIHRoZSBjbGFzc2VzIGFuZCB0aGUgcHJhY3RpY2Ugb2YgYWxsb3R0aW5nCmNlcnRhaW4gZGF5cyBmb3IgcmVjaXRhdGlvbiwgdG8gd2hpY2ggbXVzdCBiZSBhZGRlZAoKPHBiIGlkPSJwLjEyNyIgLz4KCnRoZSBjb250cmlidXRvcnkgY2lyY3Vtc3RhbmNlIHRoYXQgdGhlIGJveXMnIHBhcmVudHMKYXJlIG1vcmUgaW50ZXJlc3RlZCBpbiB0aGUgbnVtYmVyIG9mIHRoZWlyIHNvbnMnCnJlY2l0YXRpb25zIHRoYW4gdGhlaXIgcXVhbGl0eS48bWlsZXN0b25lIG49IjIyIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQsIGFzIEkgdGhpbmsgSSBzYWlkCmluIHRoZSBmaXJzdCBib29rLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+SS4gaWkuIDE1Ljwvbm90ZT4gdGhlIHJlYWxseSBnb29kIHRlYWNoZXIgd2lsbCBub3QKYnVyZGVuIGhpbXNlbGYgd2l0aCBhIGxhcmdlciBudW1iZXIgb2YgcHVwaWxzIHRoYW4KaGUgY2FuIG1hbmFnZSwgYW5kIHdpbGwgcHJ1bmUgYW55IHRlbmRlbmN5IHRvCmV4Y2Vzc2l2ZSBsb3F1YWNpdHksIGxpbWl0aW5nIHRoZWlyIHJlbWFya3MgdG8gdGhlCmFjdHVhbCBwb2ludHMgaW52b2x2ZWQgYnkgdGhlIHN1YmplY3Qgb2YgdGhlIGRlY2xhbWF0aW9uIGFuZCBmb3JiaWRkaW5nIHRoZW0gdG8gcmFuZ2UsIGFzIHNvbWUgd291bGQKaGF2ZSB0aGVtIGRvLCBvdmVyIGV2ZXJ5IHN1YmplY3QgaW4gaGVhdmVuIGFuZAplYXJ0aDogZnVydGhlciwgaGUgd2lsbCBlaXRoZXIgZXh0ZW5kIHRoZSBwZXJpb2QKd2l0aGluIHdoaWNoIGhlIGluc2lzdHMgb24gdGhlaXIgc3BlYWtpbmcsIG9yIHdpbGwKcGVybWl0IHRoZW0gdG8gZGl2aWRlIHRoZWlyIHRoZW1lcyBpbnRvIHNldmVyYWwKcG9ydGlvbnMuPG1pbGVzdG9uZSBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIHRob3JvdWdoIHRyZWF0bWVudCBvZiBvbmUgdGhlbWUKd2lsbCBiZSBtb3JlIHByb2ZpdGFibGUgdGhhbiB0aGUgc2tldGNoeSBhbmQgc3VwZXJmaWNpYWwgdHJlYXRtZW50IG9mIGEgbnVtYmVyIG9mIHN1YmplY3RzLiBGb3IgdGhlCmxhdHRlciBwcmFjdGljZSBoYXMgdGhlIHJlc3VsdCB0aGF0IG5vdGhpbmcgaXMgcHV0IGluCml0cyBwcm9wZXIgcGxhY2UgYW5kIHRoYXQgdGhlIG9wZW5pbmcgb2YgdGhlIGRlY2xhbWF0aW9uIGV4Y2VlZHMgYWxsIHJlYXNvbmFibGUgYm91bmRzLCBzaW5jZSB0aGUKeW91bmcgb3JhdG9yIGNyYW1zIGFsbCB0aGUgZmxvd2VycyBvZiBlbG9xdWVuY2UKd2hpY2ggYmVsb25nIHRvIGFsbCB0aGUgZGlmZmVyZW50IHBvcnRpb25zIG9mIHRoZQp0aGVtZSBpbnRvIHRoYXQgcG9ydGlvbiB3aGljaCBoZSBoYXMgdG8gZGVsaXZlciwKYW5kIGZlYXJpbmcgdG8gbG9zZSB3aGF0IHNob3VsZCBuYXR1cmFsbHkgY29tZSBsYXRlciwKaW50cm9kdWNlcyB3aWxkIGNvbmZ1c2lvbiBpbnRvIHRoZSBlYXJsaWVyIHBvcnRpb25zCm9mIGhpcyBzcGVlY2guPC9wPgoKPC90cmFuc2xhdGlvbj4="
translation['10.5.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgeW91bmcgbWFuLCBob3dldmVyLCB3aG9tIGhpcyBpbnN0cnVjdG9yIGhhcwpjb21wZWxsZWQgdG8gYmUgYXMgcmVhbGlzdGljIGFzIHBvc3NpYmxlIGluIGRlY2xhbWF0aW9uLAphbmQgdG8gZGVhbCB3aXRoIGV2ZXJ5IGNsYXNzIG9mIHN1YmplY3QsIGluc3RlYWQgb2YKbWVyZWx5IHNlbGVjdGluZyB0aGUgZWFzaWVzdCBhbmQgbW9zdCBhdHRyYWN0aXZlIGNhc2VzLAphcyBpcyBkb25lIGF0IHByZXNlbnQsIHdpbGwgdGh1cyBxdWFsaWZ5IGhpbXNlbGYgbXVjaAptb3JlIHJhcGlkbHkgZm9yIGFjdHVhbCBmb3JlbnNpYyBwcmFjdGljZS4gVW5kZXIgZXhpc3RpbmcgY2lyY3Vtc3RhbmNlcyB0aGUgcHJhY3RpY2Ugb2YgdGhlIHByaW5jaXBsZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5JLmUuPC9oaT4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+cGVyIHRvdGFzIGlyZSBtYXRlcmlhcy48L3F1b3RlPjwvbm90ZT4gd2hpY2gKSSBtZW50aW9uZWQgc2Vjb25kIGlzLCBhcyBhIHJ1bGUsIGhhbXBlcmVkIGJ5IHRoZQpsYXJnZSBzaXplIG9mIHRoZSBjbGFzc2VzIGFuZCB0aGUgcHJhY3RpY2Ugb2YgYWxsb3R0aW5nCmNlcnRhaW4gZGF5cyBmb3IgcmVjaXRhdGlvbiwgdG8gd2hpY2ggbXVzdCBiZSBhZGRlZAoKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SS5lLjwvaGk+IDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPnBlciB0b3RhcyBpcmUgbWF0ZXJpYXMuPC9xdW90ZT48cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xMjciIC8+Cgp0aGUgY29udHJpYnV0b3J5IGNpcmN1bXN0YW5jZSB0aGF0IHRoZSBib3lzJyBwYXJlbnRzCmFyZSBtb3JlIGludGVyZXN0ZWQgaW4gdGhlIG51bWJlciBvZiB0aGVpciBzb25zJwpyZWNpdGF0aW9ucyB0aGFuIHRoZWlyIHF1YWxpdHkuPC90cmFuc2xhdGlvbj4="
translation['10.5.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0LCBhcyBJIHRoaW5rIEkgc2FpZAppbiB0aGUgZmlyc3QgYm9vayw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+SS4gaWkuIDE1Ljwvbm90ZT4gdGhlIHJlYWxseSBnb29kIHRlYWNoZXIgd2lsbCBub3QKYnVyZGVuIGhpbXNlbGYgd2l0aCBhIGxhcmdlciBudW1iZXIgb2YgcHVwaWxzIHRoYW4KaGUgY2FuIG1hbmFnZSwgYW5kIHdpbGwgcHJ1bmUgYW55IHRlbmRlbmN5IHRvCmV4Y2Vzc2l2ZSBsb3F1YWNpdHksIGxpbWl0aW5nIHRoZWlyIHJlbWFya3MgdG8gdGhlCmFjdHVhbCBwb2ludHMgaW52b2x2ZWQgYnkgdGhlIHN1YmplY3Qgb2YgdGhlIGRlY2xhbWF0aW9uIGFuZCBmb3JiaWRkaW5nIHRoZW0gdG8gcmFuZ2UsIGFzIHNvbWUgd291bGQKaGF2ZSB0aGVtIGRvLCBvdmVyIGV2ZXJ5IHN1YmplY3QgaW4gaGVhdmVuIGFuZAplYXJ0aDogZnVydGhlciwgaGUgd2lsbCBlaXRoZXIgZXh0ZW5kIHRoZSBwZXJpb2QKd2l0aGluIHdoaWNoIGhlIGluc2lzdHMgb24gdGhlaXIgc3BlYWtpbmcsIG9yIHdpbGwKcGVybWl0IHRoZW0gdG8gZGl2aWRlIHRoZWlyIHRoZW1lcyBpbnRvIHNldmVyYWwKcG9ydGlvbnMuPC90cmFuc2xhdGlvbj4="
translation['10.5.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIHRob3JvdWdoIHRyZWF0bWVudCBvZiBvbmUgdGhlbWUKd2lsbCBiZSBtb3JlIHByb2ZpdGFibGUgdGhhbiB0aGUgc2tldGNoeSBhbmQgc3VwZXJmaWNpYWwgdHJlYXRtZW50IG9mIGEgbnVtYmVyIG9mIHN1YmplY3RzLiBGb3IgdGhlCmxhdHRlciBwcmFjdGljZSBoYXMgdGhlIHJlc3VsdCB0aGF0IG5vdGhpbmcgaXMgcHV0IGluCml0cyBwcm9wZXIgcGxhY2UgYW5kIHRoYXQgdGhlIG9wZW5pbmcgb2YgdGhlIGRlY2xhbWF0aW9uIGV4Y2VlZHMgYWxsIHJlYXNvbmFibGUgYm91bmRzLCBzaW5jZSB0aGUKeW91bmcgb3JhdG9yIGNyYW1zIGFsbCB0aGUgZmxvd2VycyBvZiBlbG9xdWVuY2UKd2hpY2ggYmVsb25nIHRvIGFsbCB0aGUgZGlmZmVyZW50IHBvcnRpb25zIG9mIHRoZQp0aGVtZSBpbnRvIHRoYXQgcG9ydGlvbiB3aGljaCBoZSBoYXMgdG8gZGVsaXZlciwKYW5kIGZlYXJpbmcgdG8gbG9zZSB3aGF0IHNob3VsZCBuYXR1cmFsbHkgY29tZSBsYXRlciwKaW50cm9kdWNlcyB3aWxkIGNvbmZ1c2lvbiBpbnRvIHRoZSBlYXJsaWVyIHBvcnRpb25zCm9mIGhpcyBzcGVlY2guPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNiIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+SGF2aW5nIGRlYWx0IHdpdGggd3JpdGluZywgdGhlIG5leHQgcG9pbnQKd2hpY2ggY2xhaW1zIG91ciBhdHRlbnRpb24gaXMgcHJlbWVkaXRhdGlvbiwgd2hpY2gKaXRzZWxmIGRlcml2ZXMgZm9yY2UgZnJvbSB0aGUgcHJhY3RpY2Ugb2Ygd3JpdGluZyBhbmQKZm9ybXMgYW4gaW50ZXJtZWRpYXRlIHN0YWdlIGJldHdlZW4gdGhlIGxhYm91cnMgb2YKdGhlIHBlbiBhbmQgdGhlIG1vcmUgcHJlY2FyaW91cyBmb3J0dW5lcyBvZiBpbXByb3Zpc2F0aW9uOyBpbmRlZWQgSSBhbSBub3Qgc3VyZSB0aGF0IGl0IGlzIG5vdCBtb3JlCmZyZXF1ZW50bHkgb2YgdXNlIHRoYW4gZWl0aGVyLiBGb3IgdGhlcmUgYXJlIHBsYWNlcwphbmQgb2NjYXNpb25zIHdoZXJlIHdyaXRpbmcgaXMgaW1wb3NzaWJsZSwgd2hpbGUgYm90aAphcmUgYXZhaWxhYmxlIGluIGFidW5kYW5jZSBmb3IgcHJlbWVkaXRhdGlvbi4gRm9yCgo8cGIgaWQ9InAuMTI5IiAvPgoKYnV0IGEgZmV3IGhvdXJzJyB0aG91Z2h0IHdpbGwgc3VmZmljZSB0byBjb3ZlciBhbGwgdGhlCnBvaW50cyBldmVuIG9mIGNhc2VzIG9mIGltcG9ydGFuY2U7IGlmIHdlIHdha2UgYXQKbmlnaHQsIHRoZSB2ZXJ5IGRhcmtuZXNzIHdpbGwgYXNzaXN0IHVzLCB3aGlsZSBldmVuIGluCnRoZSBtaWRzdCBvZiBsZWdhbCBwcm9jZWVkaW5ncyBvdXIgbWluZCB3aWxsIGZpbmQKc29tZSB2YWNhbnQgc3BhY2UgZm9yIG1lZGl0YXRpb24sIGFuZCB3aWxsIHJlZnVzZSB0bwpyZW1haW4gaW5hY3RpdmUuPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBBZ2FpbiwgdGhpcyBwcmFjdGljZSB3aWxsIG5vdCBtZXJlbHkKc2VjdXJlIHRoZSBwcm9wZXIgYXJyYW5nZW1lbnQgb2Ygb3VyIG1hdHRlciB3aXRob3V0CmFueSByZWNvdXJzZSB0byB3cml0aW5nLCB3aGljaCBpbiBpdHNlbGYgaXMgbm8gc21hbGwKYWNoaWV2ZW1lbnQsIGJ1dCB3aWxsIGFsc28gc2V0IHRoZSB3b3JkcyB3aGljaCB3ZQphcmUgZ29pbmcgdG8gdXNlIGluIHRoZWlyIHByb3BlciBvcmRlciwgYW5kIGJyaW5nIHRoZQpnZW5lcmFsIHRleHR1cmUgb2Ygb3VyIHNwZWVjaCB0byBzdWNoIGEgc3RhZ2Ugb2YKY29tcGxldGlvbiB0aGF0IG5vdGhpbmcgZnVydGhlciBpcyByZXF1aXJlZCBiZXlvbmQKdGhlIGZpbmlzaGluZyB0b3VjaGVzLiBBbmQgYXMgYSBydWxlIHRoZSBtZW1vcnkgaXMKbW9yZSByZXRlbnRpdmUgb2YgdGhvdWdodHMgd2hlbiB0aGUgYXR0ZW50aW9uIGhhcwpub3QgYmVlbiByZWxheGVkIGJ5IHRoZSBmYW5jaWVkIHNlY3VyaXR5IHdoaWNoCnJlc3VsdHMgZnJvbSBjb21taXR0aW5nIHRoZW0gdG8gd3JpdGluZy48L3A+CjwvdHJhbnNsYXRpb24+"
translation['10.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['10.6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPkhhdmluZyBkZWFsdCB3aXRoIHdyaXRpbmcsIHRoZSBuZXh0IHBvaW50CndoaWNoIGNsYWltcyBvdXIgYXR0ZW50aW9uIGlzIHByZW1lZGl0YXRpb24sIHdoaWNoCml0c2VsZiBkZXJpdmVzIGZvcmNlIGZyb20gdGhlIHByYWN0aWNlIG9mIHdyaXRpbmcgYW5kCmZvcm1zIGFuIGludGVybWVkaWF0ZSBzdGFnZSBiZXR3ZWVuIHRoZSBsYWJvdXJzIG9mCnRoZSBwZW4gYW5kIHRoZSBtb3JlIHByZWNhcmlvdXMgZm9ydHVuZXMgb2YgaW1wcm92aXNhdGlvbjsgaW5kZWVkIEkgYW0gbm90IHN1cmUgdGhhdCBpdCBpcyBub3QgbW9yZQpmcmVxdWVudGx5IG9mIHVzZSB0aGFuIGVpdGhlci4gRm9yIHRoZXJlIGFyZSBwbGFjZXMKYW5kIG9jY2FzaW9ucyB3aGVyZSB3cml0aW5nIGlzIGltcG9zc2libGUsIHdoaWxlIGJvdGgKYXJlIGF2YWlsYWJsZSBpbiBhYnVuZGFuY2UgZm9yIHByZW1lZGl0YXRpb24uIEZvcgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTI5IiAvPgoKYnV0IGEgZmV3IGhvdXJzJyB0aG91Z2h0IHdpbGwgc3VmZmljZSB0byBjb3ZlciBhbGwgdGhlCnBvaW50cyBldmVuIG9mIGNhc2VzIG9mIGltcG9ydGFuY2U7IGlmIHdlIHdha2UgYXQKbmlnaHQsIHRoZSB2ZXJ5IGRhcmtuZXNzIHdpbGwgYXNzaXN0IHVzLCB3aGlsZSBldmVuIGluCnRoZSBtaWRzdCBvZiBsZWdhbCBwcm9jZWVkaW5ncyBvdXIgbWluZCB3aWxsIGZpbmQKc29tZSB2YWNhbnQgc3BhY2UgZm9yIG1lZGl0YXRpb24sIGFuZCB3aWxsIHJlZnVzZSB0bwpyZW1haW4gaW5hY3RpdmUuPC90cmFuc2xhdGlvbj4="
translation['10.6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBBZ2FpbiwgdGhpcyBwcmFjdGljZSB3aWxsIG5vdCBtZXJlbHkKc2VjdXJlIHRoZSBwcm9wZXIgYXJyYW5nZW1lbnQgb2Ygb3VyIG1hdHRlciB3aXRob3V0CmFueSByZWNvdXJzZSB0byB3cml0aW5nLCB3aGljaCBpbiBpdHNlbGYgaXMgbm8gc21hbGwKYWNoaWV2ZW1lbnQsIGJ1dCB3aWxsIGFsc28gc2V0IHRoZSB3b3JkcyB3aGljaCB3ZQphcmUgZ29pbmcgdG8gdXNlIGluIHRoZWlyIHByb3BlciBvcmRlciwgYW5kIGJyaW5nIHRoZQpnZW5lcmFsIHRleHR1cmUgb2Ygb3VyIHNwZWVjaCB0byBzdWNoIGEgc3RhZ2Ugb2YKY29tcGxldGlvbiB0aGF0IG5vdGhpbmcgZnVydGhlciBpcyByZXF1aXJlZCBiZXlvbmQKdGhlIGZpbmlzaGluZyB0b3VjaGVzLiBBbmQgYXMgYSBydWxlIHRoZSBtZW1vcnkgaXMKbW9yZSByZXRlbnRpdmUgb2YgdGhvdWdodHMgd2hlbiB0aGUgYXR0ZW50aW9uIGhhcwpub3QgYmVlbiByZWxheGVkIGJ5IHRoZSBmYW5jaWVkIHNlY3VyaXR5IHdoaWNoCnJlc3VsdHMgZnJvbSBjb21taXR0aW5nIHRoZW0gdG8gd3JpdGluZy48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCB0aGUgY29uY2VudHJhdGlvbiB3aGljaCB0aGlzIHJlcXVpcmVzIGNhbm5vdApiZSBhdHRhaW5lZCBpbiBhIG1vbWVudCBvciBldmVuIHF1aWNrbHkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciwgaW4KdGhlIGZpcnN0IHBsYWNlLCB3ZSBtdXN0IHdyaXRlIG11Y2ggYmVmb3JlIHdlIGNhbgpmb3JtIHRoYXQgaWRlYWwgb2Ygc3R5bGUgd2hpY2ggbXVzdCBhbHdheXMgYmUKcHJlc2VudCB0byBvdXIgbWluZHMgZXZlbiB3aGVuIGVuZ2FnZWQgaW4gcHJlbWVkaXRhdGlvbi4gU2Vjb25kbHksIHdlIG11c3QgZ3JhZHVhbGx5IGFjcXVpcmUKdGhlIGhhYml0IG9mIHRob3VnaHQ6IHRvIGJlZ2luIHdpdGgsIHdlIHNoYWxsIGNvbnRlbnQgb3Vyc2VsdmVzIHdpdGggY292ZXJpbmcgYnV0IGEgZmV3IGRldGFpbHMsIHdoaWNoCm91ciBtaW5kcyBhcmUgY2FwYWJsZSBvZiByZXByb2R1Y2luZyB3aXRoIGFjY3VyYWN5Owp0aGVuIGJ5IGFkdmFuY2VzIHNvIGdyYWR1YWwgdGhhdCBvdXIgbGFib3VyIGlzIG5vdApzZW5zaWJseSBpbmNyZWFzZWQgd2UgbXVzdCBkZXZlbG9wIG91ciBwb3dlcnMgYW5kCmNvbmZpcm0gdGhlbSBieSBmcmVxdWVudCBwcmFjdGljZSwgYSB0YXNrIGluIHdoaWNoCnRoZSBtb3N0IGltcG9ydGFudCBwYXJ0IGlzIHBsYXllZCBieSB0aGUgbWVtb3J5Lgo8bWlsZXN0b25lIG49IjQiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIHRoaXMgcmVhc29uIEkgbXVzdCBwb3N0cG9uZSBzb21lIG9mIG15IHJlbWFya3MKdG8gdGhlIHBvcnRpb24gb2YgdGhpcyB3b3JrIHJlc2VydmVkIGZvciB0aGUgdHJlYXRtZW50IG9mIHRoYXQgdG9waWMuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5YSS4gaWkuIDEgPGhpIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPjwvbm90ZT4gQXQgbGVuZ3RoLCBob3dldmVyLCBvdXIgcG93ZXJzCndpbGwgaGF2ZSBkZXZlbG9wZWQgc28gZmFyIHRoYXQgdGhlIG1hbiB3aG8gaXMgbm90CmhhbXBlcmVkIGJ5IGxhY2sgb2YgbmF0dXJhbCBhYmlsaXR5IHdpbGwgYnkgZGludCBvZgoKPHBiIGlkPSJwLjEzMSIgLz4KCnBlcnNpc3RlbnQgc3R1ZHkgYmUgZW5hYmxlZCwgd2hlbiBpdCBjb21lcyB0byBzcGVha2luZywgdG8gcmVseSBubyBsZXNzIG9uIHdoYXQgaGUgaGFzIHRob3VnaHQgb3V0IHRoYW4Kd2hhdCBoZSBoYXMgd3JpdHRlbiBvdXQgYW5kIGxlYXJudCBieSBoZWFydC4gQXQKYW55IHJhdGUsIENpY2VybyByZWNvcmRzIHRoYXQgTWV0cm9kb3J1cyBvZiBTY2Vwc2lzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+QSBwaGlsb3NvcGhlciBvZiB0aGUgQWNhZGVtaWMgc2Nob29sLCBjb250ZW1wb3JhcnkKd2l0aCBDaWNlcm8sIDxoaSByZW5kPSJpdGFsaWNzIj5jcC4gZGUgT3IuPC9oaT4gaWkuIDM2MC48L25vdGU+CkVtcHlsdXMgb2YgUmhvZGVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+RW1weWx1cyBpcyBub3QgbWVudGlvbmVkIGVsc2V3aGVyZS48L25vdGU+IGFuZCBvdXIgb3duIEhvcnRlbnNpdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5DcC4gQnJ1dC48L2hpPiAzMDEuPC9ub3RlPiB3ZXJlCmFibGUgdG8gcmVwcm9kdWNlIHdoYXQgdGhleSBoYWQgdGhvdWdodCBvdXQgd29yZApmb3Igd29yZCB3aGVuIGl0IGNhbWUgdG8gYWN0dWFsIHBsZWFkaW5nLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IsIGluCnRoZSBmaXJzdCBwbGFjZSwgd2UgbXVzdCB3cml0ZSBtdWNoIGJlZm9yZSB3ZSBjYW4KZm9ybSB0aGF0IGlkZWFsIG9mIHN0eWxlIHdoaWNoIG11c3QgYWx3YXlzIGJlCnByZXNlbnQgdG8gb3VyIG1pbmRzIGV2ZW4gd2hlbiBlbmdhZ2VkIGluIHByZW1lZGl0YXRpb24uIFNlY29uZGx5LCB3ZSBtdXN0IGdyYWR1YWxseSBhY3F1aXJlCnRoZSBoYWJpdCBvZiB0aG91Z2h0OiB0byBiZWdpbiB3aXRoLCB3ZSBzaGFsbCBjb250ZW50IG91cnNlbHZlcyB3aXRoIGNvdmVyaW5nIGJ1dCBhIGZldyBkZXRhaWxzLCB3aGljaApvdXIgbWluZHMgYXJlIGNhcGFibGUgb2YgcmVwcm9kdWNpbmcgd2l0aCBhY2N1cmFjeTsKdGhlbiBieSBhZHZhbmNlcyBzbyBncmFkdWFsIHRoYXQgb3VyIGxhYm91ciBpcyBub3QKc2Vuc2libHkgaW5jcmVhc2VkIHdlIG11c3QgZGV2ZWxvcCBvdXIgcG93ZXJzIGFuZApjb25maXJtIHRoZW0gYnkgZnJlcXVlbnQgcHJhY3RpY2UsIGEgdGFzayBpbiB3aGljaAp0aGUgbW9zdCBpbXBvcnRhbnQgcGFydCBpcyBwbGF5ZWQgYnkgdGhlIG1lbW9yeS4KPC90cmFuc2xhdGlvbj4="
translation['10.6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGlzIHJlYXNvbiBJIG11c3QgcG9zdHBvbmUgc29tZSBvZiBteSByZW1hcmtzCnRvIHRoZSBwb3J0aW9uIG9mIHRoaXMgd29yayByZXNlcnZlZCBmb3IgdGhlIHRyZWF0bWVudCBvZiB0aGF0IHRvcGljLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5YSS4gaWkuIDEgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PC9ub3RlPiBBdCBsZW5ndGgsIGhvd2V2ZXIsIG91ciBwb3dlcnMKd2lsbCBoYXZlIGRldmVsb3BlZCBzbyBmYXIgdGhhdCB0aGUgbWFuIHdobyBpcyBub3QKaGFtcGVyZWQgYnkgbGFjayBvZiBuYXR1cmFsIGFiaWxpdHkgd2lsbCBieSBkaW50IG9mCgo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zcXEuPC9oaT48cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xMzEiIC8+CgpwZXJzaXN0ZW50IHN0dWR5IGJlIGVuYWJsZWQsIHdoZW4gaXQgY29tZXMgdG8gc3BlYWtpbmcsIHRvIHJlbHkgbm8gbGVzcyBvbiB3aGF0IGhlIGhhcyB0aG91Z2h0IG91dCB0aGFuCndoYXQgaGUgaGFzIHdyaXR0ZW4gb3V0IGFuZCBsZWFybnQgYnkgaGVhcnQuIEF0CmFueSByYXRlLCBDaWNlcm8gcmVjb3JkcyB0aGF0IE1ldHJvZG9ydXMgb2YgU2NlcHNpcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+QSBwaGlsb3NvcGhlciBvZiB0aGUgQWNhZGVtaWMgc2Nob29sLCBjb250ZW1wb3JhcnkKd2l0aCBDaWNlcm8sIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNwLiBkZSBPci48L2hpPiBpaS4gMzYwLjwvbm90ZT4KRW1weWx1cyBvZiBSaG9kZXMsPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Y3AuIGRlIE9yLjwvaGk+IGlpLiAzNjAuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkVtcHlsdXMgaXMgbm90IG1lbnRpb25lZCBlbHNld2hlcmUuPC9ub3RlPiBhbmQgb3VyIG93biBIb3J0ZW5zaXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkNwLiBCcnV0LjwvaGk+IDMwMS48L25vdGU+IHdlcmUKYWJsZSB0byByZXByb2R1Y2Ugd2hhdCB0aGV5IGhhZCB0aG91Z2h0IG91dCB3b3JkCmZvciB3b3JkIHdoZW4gaXQgY2FtZSB0byBhY3R1YWwgcGxlYWRpbmcuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Q3AuIEJydXQuPC9oaT4gMzAxLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjUiIHVuaXQ9InNlY3Rpb24iIC8+SWYsIGhvd2V2ZXIsIHNvbWUgYnJpbGxpYW50IGltcHJvdmlzYXRpb24gc2hvdWxkCm9jY3VyIHRvIHVzIHdoaWxlIHNwZWFraW5nLCB3ZSBtdXN0IG5vdCBjbGluZyBzdXBlcnN0aXRpb3VzbHkgdG8gb3VyIHByZW1lZGl0YXRlZCBzY2hlbWUuIEZvciBwcmVtZWRpdGF0aW9uIGlzIG5vdCBzbyBhY2N1cmF0ZSBhcyB0byBsZWF2ZSBubyByb29tCmZvciBoYXBweSBpbnNwaXJhdGlvbjogZXZlbiB3aGVuIHdyaXRpbmcgd2Ugb2Z0ZW4KaW5zZXJ0IHRob3VnaHRzIHdoaWNoIG9jY3VyIHRvIHVzIG9uIHRoZSBzcHVyIG9mIHRoZQptb21lbnQuIENvbnNlcXVlbnRseSB0aGlzIGZvcm0gb2YgcHJlcGFyYXRpb24KbXVzdCBiZSBjb25jZWl2ZWQgb24gc3VjaCBsaW5lcyB0aGF0IHdlIHNoYWxsIGZpbmQKbm8gZGlmZmljdWx0eSBlaXRoZXIgaW4gZGVwYXJ0aW5nIGZyb20gaXQgb3IgcmV0dXJuaW5nCnRvIGl0IGF0IHdpbGwuPG1pbGVzdG9uZSBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IsIGFsdGhvdWdoIGl0IGlzIGVzc2VudGlhbCB0byBicmluZwp3aXRoIHVzIGludG8gY291cnQgYSBzdXBwbHkgb2YgZWxvcXVlbmNlIHdoaWNoIGhhcwpiZWVuIHByZXBhcmVkIGluIGFkdmFuY2UgaW4gdGhlIHN0dWR5IGFuZCBvbiB3aGljaAp3ZSBjYW4gY29uZmlkZW50bHkgcmVseSwgdGhlcmUgaXMgbm8gZ3JlYXRlciBmb2xseQp0aGFuIHRoZSByZWplY3Rpb24gb2YgdGhlIGdpZnRzIG9mIHRoZSBtb21lbnQuClRoZXJlZm9yZSBvdXIgcHJlbWVkaXRhdGlvbiBzaG91bGQgYmUgc3VjaCB0aGF0CmZvcnR1bmUgbWF5IG5ldmVyIGJlIGFibGUgdG8gZm9vbCB1cywgYnV0IG1heSwgb24KdGhlIGNvbnRyYXJ5LCBiZSBhYmxlIHRvIGFzc2lzdCB1cy4gVGhpcyBlbmQgd2lsbCBiZQpvYnRhaW5lZCBieSBkZXZlbG9waW5nIHRoZSBwb3dlciBvZiBtZW1vcnkgc28KdGhhdCBvdXIgY29uY2VwdGlvbnMgbWF5IGZsb3cgZnJvbSB1cyB3aXRob3V0IGZlYXIKb2YgZGlzYXN0ZXIsIGFuZCB0aGF0IHdlIG1heSBiZSBlbmFibGVkIHRvIGxvb2sKYWhlYWQgd2l0aG91dCBhbnhpb3VzIGJhY2t3YXJkIGdsYW5jZXMgb3IgdGhlCmZlZWxpbmcgdGhhdCB3ZSBhcmUgYWJzb2x1dGVseSBkZXBlbmRlbnQgb24gd2hhdAp3ZSBjYW4gY2FsbCB0byBtaW5kLiBPdGhlcndpc2UgSSBwcmVmZXIgdGhlIHJhc2huZXNzIG9mIGltcHJvdmlzYXRpb24gdG8gdGhlIGNvaGVyZW5jZSBnaXZlbiBieQpwcmVtZWRpdGF0aW9uLjxtaWxlc3RvbmUgbj0iNyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHN1Y2ggYmFja3dhcmQgZ2xhbmNlcyBwbGFjZSB1cwphdCBhIGRpc2FkdmFudGFnZSwgYmVjYXVzZSBvdXIgc2VhcmNoIGZvciBvdXIgcHJlbWVkaXRhdGVkIGlkZWFzIG1ha2VzIHVzIG1pc3Mgb3RoZXJzLCBhbmQgd2UgZHJhdwoKPHBiIGlkPSJwLjEzMyIgLz4KCm91ciBtYXR0ZXIgZnJvbSBvdXIgbWVtb3J5IHJhdGhlciB0aGFuIGZyb20gdGhlCnN1YmplY3Qgb24gd2hpY2ggd2UgYXJlIHNwZWFraW5nLiBBbmQgZXZlbiBpZiB3ZQphcmUgdG8gcmVseSBvbiBvdXIgbWVtb3J5IGFuZCBvdXIgc3ViamVjdCBhbGlrZSwKdGhlcmUgYXJlIG1vcmUgdGhpbmdzIHRoYXQgbWF5IGJlIGRpc2NvdmVyZWQgdGhhbgpldmVyIHlldCBoYXZlIGJlZW4uPC9wPgoKPC90cmFuc2xhdGlvbj4="
translation['10.6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPklmLCBob3dldmVyLCBzb21lIGJyaWxsaWFudCBpbXByb3Zpc2F0aW9uIHNob3VsZApvY2N1ciB0byB1cyB3aGlsZSBzcGVha2luZywgd2UgbXVzdCBub3QgY2xpbmcgc3VwZXJzdGl0aW91c2x5IHRvIG91ciBwcmVtZWRpdGF0ZWQgc2NoZW1lLiBGb3IgcHJlbWVkaXRhdGlvbiBpcyBub3Qgc28gYWNjdXJhdGUgYXMgdG8gbGVhdmUgbm8gcm9vbQpmb3IgaGFwcHkgaW5zcGlyYXRpb246IGV2ZW4gd2hlbiB3cml0aW5nIHdlIG9mdGVuCmluc2VydCB0aG91Z2h0cyB3aGljaCBvY2N1ciB0byB1cyBvbiB0aGUgc3B1ciBvZiB0aGUKbW9tZW50LiBDb25zZXF1ZW50bHkgdGhpcyBmb3JtIG9mIHByZXBhcmF0aW9uCm11c3QgYmUgY29uY2VpdmVkIG9uIHN1Y2ggbGluZXMgdGhhdCB3ZSBzaGFsbCBmaW5kCm5vIGRpZmZpY3VsdHkgZWl0aGVyIGluIGRlcGFydGluZyBmcm9tIGl0IG9yIHJldHVybmluZwp0byBpdCBhdCB3aWxsLjwvdHJhbnNsYXRpb24+"
translation['10.6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IsIGFsdGhvdWdoIGl0IGlzIGVzc2VudGlhbCB0byBicmluZwp3aXRoIHVzIGludG8gY291cnQgYSBzdXBwbHkgb2YgZWxvcXVlbmNlIHdoaWNoIGhhcwpiZWVuIHByZXBhcmVkIGluIGFkdmFuY2UgaW4gdGhlIHN0dWR5IGFuZCBvbiB3aGljaAp3ZSBjYW4gY29uZmlkZW50bHkgcmVseSwgdGhlcmUgaXMgbm8gZ3JlYXRlciBmb2xseQp0aGFuIHRoZSByZWplY3Rpb24gb2YgdGhlIGdpZnRzIG9mIHRoZSBtb21lbnQuClRoZXJlZm9yZSBvdXIgcHJlbWVkaXRhdGlvbiBzaG91bGQgYmUgc3VjaCB0aGF0CmZvcnR1bmUgbWF5IG5ldmVyIGJlIGFibGUgdG8gZm9vbCB1cywgYnV0IG1heSwgb24KdGhlIGNvbnRyYXJ5LCBiZSBhYmxlIHRvIGFzc2lzdCB1cy4gVGhpcyBlbmQgd2lsbCBiZQpvYnRhaW5lZCBieSBkZXZlbG9waW5nIHRoZSBwb3dlciBvZiBtZW1vcnkgc28KdGhhdCBvdXIgY29uY2VwdGlvbnMgbWF5IGZsb3cgZnJvbSB1cyB3aXRob3V0IGZlYXIKb2YgZGlzYXN0ZXIsIGFuZCB0aGF0IHdlIG1heSBiZSBlbmFibGVkIHRvIGxvb2sKYWhlYWQgd2l0aG91dCBhbnhpb3VzIGJhY2t3YXJkIGdsYW5jZXMgb3IgdGhlCmZlZWxpbmcgdGhhdCB3ZSBhcmUgYWJzb2x1dGVseSBkZXBlbmRlbnQgb24gd2hhdAp3ZSBjYW4gY2FsbCB0byBtaW5kLiBPdGhlcndpc2UgSSBwcmVmZXIgdGhlIHJhc2huZXNzIG9mIGltcHJvdmlzYXRpb24gdG8gdGhlIGNvaGVyZW5jZSBnaXZlbiBieQpwcmVtZWRpdGF0aW9uLjwvdHJhbnNsYXRpb24+"
translation['10.6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBGb3Igc3VjaCBiYWNrd2FyZCBnbGFuY2VzIHBsYWNlIHVzCmF0IGEgZGlzYWR2YW50YWdlLCBiZWNhdXNlIG91ciBzZWFyY2ggZm9yIG91ciBwcmVtZWRpdGF0ZWQgaWRlYXMgbWFrZXMgdXMgbWlzcyBvdGhlcnMsIGFuZCB3ZSBkcmF3Cgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xMzMiIC8+CgpvdXIgbWF0dGVyIGZyb20gb3VyIG1lbW9yeSByYXRoZXIgdGhhbiBmcm9tIHRoZQpzdWJqZWN0IG9uIHdoaWNoIHdlIGFyZSBzcGVha2luZy4gQW5kIGV2ZW4gaWYgd2UKYXJlIHRvIHJlbHkgb24gb3VyIG1lbW9yeSBhbmQgb3VyIHN1YmplY3QgYWxpa2UsCnRoZXJlIGFyZSBtb3JlIHRoaW5ncyB0aGF0IG1heSBiZSBkaXNjb3ZlcmVkIHRoYW4KZXZlciB5ZXQgaGF2ZSBiZWVuLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjciIHVuaXQ9ImNoYXB0ZXIiIC8+PG1pbGVzdG9uZSBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGUgY3Jvd24gb2YgYWxsIG91ciBzdHVkeSBhbmQgdGhlCmhpZ2hlc3QgcmV3YXJkIG9mIG91ciBsb25nIGxhYm91cnMgaXMgdGhlIHBvd2VyIG9mCmltcHJvdmlzYXRpb24uIFRoZSBtYW4gd2hvIGZhaWxzIHRvIGFjcXVpcmUgdGhpcwpoYWQgYmV0dGVyLCBpbiBteSBvcGluaW9uLCBhYmFuZG9uIHRoZSB0YXNrIG9mCmFkdm9jYWN5IGFuZCBkZXZvdGUgaGlzIHBvd2VycyBvZiB3cml0aW5nIHRvIG90aGVyCmJyYW5jaGVzIG9mIGxpdGVyYXR1cmUuIEZvciBpdCBpcyBzY2FyY2VseSBkZWNlbnQgZm9yCmFuIGhvbm91cmFibGUgbWFuIHRvIHByb21pc2UgYXNzaXN0YW5jZSB0byB0aGUKcHVibGljIGF0IGxhcmdlIHdoaWNoIGhlIG1heSBiZSB1bmFibGUgdG8gcHJvdmlkZSBpbgp0aGUgbW9zdCBzZXJpb3VzIGVtZXJnZW5jaWVzLCBvciB0byBhdHRlbXB0IHRvIGVudGVyCmEgaGFyYm91ciB3aGljaCBoaXMgc2hpcCBjYW5ub3QgaG9wZSB0byBtYWtlIHNhdmUKd2hlbiBzYWlsaW5nIGJlZm9yZSBhIGdlbnRsZSBicmVlemUuPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgdGhlcmUgYXJlCmNvdW50bGVzcyBvY2Nhc2lvbnMgd2hlbiB0aGUgc3VkZGVuIG5lY2Vzc2l0eSBtYXkgYmUKaW1wb3NlZCB1cG9uIGhpbSBvZiBzcGVha2luZyB3aXRob3V0IHByZXBhcmF0aW9uCmJlZm9yZSB0aGUgbWFnaXN0cmF0ZXMgb3IgaW4gYSB0cmlhbCB3aGljaCBjb21lcyBvbgp1bmV4cGVjdGVkbHkuIEFuZCBpZiBhbnkgc3VjaCBzdWRkZW4gZW1lcmdlbmN5CmJlZmFsbHMsIEkgd2lsbCBub3Qgc2F5IGFueSBpbm5vY2VudCBjaXRpemVuLCBidXQgc29tZQpvbmUgb2YgdGhlIG9yYXRvcidzIGZyaWVuZHMgb3IgY29ubmV4aW9ucywgaXMgaGUgdG8Kc3RhbmQgdG9uZ3VlLXRpZWQgYW5kLCBpbiBhbnN3ZXIgdG8gdGhvc2Ugd2hvIHNlZWsKc2FsdmF0aW9uIGluIGhpcyBlbG9xdWVuY2UgYW5kIGFyZSBkb29tZWQsIHVubGVzcwp0aGV5IHNlY3VyZSBhc3Npc3RhbmNlLCB0byBhc2sgZm9yIGRlbGF5IG9mIHByb2NlZWRpbmdzIGFuZCB0aW1lIGZvciBzaWxlbnQgYW5kIHNlY2x1ZGVkIHN0dWR5LCB0aWxsIHN1Y2gKbW9tZW50IGFzIGhlIGNhbiBwaWVjZSB0b2dldGhlciB0aGUgd29yZHMgdGhhdCBmYWlsCmhpbSwgY29tbWl0IHRoZW0gdG8gbWVtb3J5IGFuZCBwcmVwYXJlIGhpcyB2b2ljZQphbmQgbHVuZ3MgZm9yIHRoZSBlZmZvcnQ/PG1pbGVzdG9uZSBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBXaGF0IHRoZW9yeSBvZiB0aGUgZHV0aWVzCm9mIGFuIG9yYXRvciBpcyB0aGVyZSB3aGljaCBwZXJtaXRzIGhpbSB0byBpZ25vcmUKc3VjaCBzdWRkZW4gaXNzdWVzPyBXaGF0IHdpbGwgaGFwcGVuIHdoZW4gaGUKaGFzIHRvIHJlcGx5IHRvIGhpcyBvcHBvbmVudD8gRm9yIG9mdGVuIHRoZSBleHBlY3RlZCBhcmd1bWVudHMgdG8gd2hpY2ggd2UgaGF2ZSB3cml0dGVuIGEgcmVwbHkKZmFpbCB1cyBhbmQgdGhlIHdob2xlIGFzcGVjdCBvZiB0aGUgY2FzZSB1bmRlcmdvZXMKCjxwYiBpZD0icC4xMzUiIC8+CgphIHN1ZGRlbiBjaGFuZ2U7IGNvbnNlcXVlbnRseSB0aGUgdmFyaWF0aW9uIHRvCndoaWNoIGNhc2VzIGFyZSBsaWFibGUgbWFrZXMgaXQgYXMgbmVjZXNzYXJ5IGZvciB1cwp0byBjaGFuZ2Ugb3VyIG1ldGhvZHMgYXMgaXQgaXMgZm9yIGEgcGlsb3QgdG8gY2hhbmdlCmhpcyBjb3Vyc2UgYmVmb3JlIHRoZSBvbmNvbWluZyBzdG9ybS48bWlsZXN0b25lIG49IjQiIHVuaXQ9InNlY3Rpb24iIC8+IEFnYWluLCB3aGF0CnVzZSBpcyBtdWNoIHdyaXRpbmcsIGFzc2lkdW91cyByZWFkaW5nIGFuZCBsb25nCnllYXJzIG9mIHN0dWR5LCBpZiB0aGUgZGlmZmljdWx0eSBpcyB0byByZW1haW4gYXMgZ3JlYXQKYXMgaXQgd2FzIGluIHRoZSBiZWdpbm5pbmc/IFRoZSBtYW4gd2hvIGlzIGFsd2F5cwpmYWNlZCB3aXRoIHRoZSBzYW1lIGxhYm91ciBjYW4gb25seSBjb25mZXNzIHRoYXQgaGlzCnBhc3QgbGFib3VyIGhhcyBiZWVuIHNwZW50IGluIHZhaW4uIEkgZG8gbm90IGFzawpoaW0gdG8gcHJlZmVyIHRvIHNwZWFrIGV4dGVtcG9yZSwgYnV0IG1lcmVseSB0aGF0CmxpZSBzaG91bGQgYmUgYWJsZSB0byBkbyBzby4gQW5kIHRoaXMgY2FwYWNpdHkgaXMKYmVzdCBhY3F1aXJlZCBieSB0aGUgZm9sbG93aW5nIG1ldGhvZC48L3A+CjwvdHJhbnNsYXRpb24+"
translation['10.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['10.7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGUgY3Jvd24gb2YgYWxsIG91ciBzdHVkeSBhbmQgdGhlCmhpZ2hlc3QgcmV3YXJkIG9mIG91ciBsb25nIGxhYm91cnMgaXMgdGhlIHBvd2VyIG9mCmltcHJvdmlzYXRpb24uIFRoZSBtYW4gd2hvIGZhaWxzIHRvIGFjcXVpcmUgdGhpcwpoYWQgYmV0dGVyLCBpbiBteSBvcGluaW9uLCBhYmFuZG9uIHRoZSB0YXNrIG9mCmFkdm9jYWN5IGFuZCBkZXZvdGUgaGlzIHBvd2VycyBvZiB3cml0aW5nIHRvIG90aGVyCmJyYW5jaGVzIG9mIGxpdGVyYXR1cmUuIEZvciBpdCBpcyBzY2FyY2VseSBkZWNlbnQgZm9yCmFuIGhvbm91cmFibGUgbWFuIHRvIHByb21pc2UgYXNzaXN0YW5jZSB0byB0aGUKcHVibGljIGF0IGxhcmdlIHdoaWNoIGhlIG1heSBiZSB1bmFibGUgdG8gcHJvdmlkZSBpbgp0aGUgbW9zdCBzZXJpb3VzIGVtZXJnZW5jaWVzLCBvciB0byBhdHRlbXB0IHRvIGVudGVyCmEgaGFyYm91ciB3aGljaCBoaXMgc2hpcCBjYW5ub3QgaG9wZSB0byBtYWtlIHNhdmUKd2hlbiBzYWlsaW5nIGJlZm9yZSBhIGdlbnRsZSBicmVlemUuPC90cmFuc2xhdGlvbj4="
translation['10.7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgdGhlcmUgYXJlCmNvdW50bGVzcyBvY2Nhc2lvbnMgd2hlbiB0aGUgc3VkZGVuIG5lY2Vzc2l0eSBtYXkgYmUKaW1wb3NlZCB1cG9uIGhpbSBvZiBzcGVha2luZyB3aXRob3V0IHByZXBhcmF0aW9uCmJlZm9yZSB0aGUgbWFnaXN0cmF0ZXMgb3IgaW4gYSB0cmlhbCB3aGljaCBjb21lcyBvbgp1bmV4cGVjdGVkbHkuIEFuZCBpZiBhbnkgc3VjaCBzdWRkZW4gZW1lcmdlbmN5CmJlZmFsbHMsIEkgd2lsbCBub3Qgc2F5IGFueSBpbm5vY2VudCBjaXRpemVuLCBidXQgc29tZQpvbmUgb2YgdGhlIG9yYXRvcidzIGZyaWVuZHMgb3IgY29ubmV4aW9ucywgaXMgaGUgdG8Kc3RhbmQgdG9uZ3VlLXRpZWQgYW5kLCBpbiBhbnN3ZXIgdG8gdGhvc2Ugd2hvIHNlZWsKc2FsdmF0aW9uIGluIGhpcyBlbG9xdWVuY2UgYW5kIGFyZSBkb29tZWQsIHVubGVzcwp0aGV5IHNlY3VyZSBhc3Npc3RhbmNlLCB0byBhc2sgZm9yIGRlbGF5IG9mIHByb2NlZWRpbmdzIGFuZCB0aW1lIGZvciBzaWxlbnQgYW5kIHNlY2x1ZGVkIHN0dWR5LCB0aWxsIHN1Y2gKbW9tZW50IGFzIGhlIGNhbiBwaWVjZSB0b2dldGhlciB0aGUgd29yZHMgdGhhdCBmYWlsCmhpbSwgY29tbWl0IHRoZW0gdG8gbWVtb3J5IGFuZCBwcmVwYXJlIGhpcyB2b2ljZQphbmQgbHVuZ3MgZm9yIHRoZSBlZmZvcnQ/PC90cmFuc2xhdGlvbj4="
translation['10.7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBXaGF0IHRoZW9yeSBvZiB0aGUgZHV0aWVzCm9mIGFuIG9yYXRvciBpcyB0aGVyZSB3aGljaCBwZXJtaXRzIGhpbSB0byBpZ25vcmUKc3VjaCBzdWRkZW4gaXNzdWVzPyBXaGF0IHdpbGwgaGFwcGVuIHdoZW4gaGUKaGFzIHRvIHJlcGx5IHRvIGhpcyBvcHBvbmVudD8gRm9yIG9mdGVuIHRoZSBleHBlY3RlZCBhcmd1bWVudHMgdG8gd2hpY2ggd2UgaGF2ZSB3cml0dGVuIGEgcmVwbHkKZmFpbCB1cyBhbmQgdGhlIHdob2xlIGFzcGVjdCBvZiB0aGUgY2FzZSB1bmRlcmdvZXMKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjEzNSIgLz4KCmEgc3VkZGVuIGNoYW5nZTsgY29uc2VxdWVudGx5IHRoZSB2YXJpYXRpb24gdG8Kd2hpY2ggY2FzZXMgYXJlIGxpYWJsZSBtYWtlcyBpdCBhcyBuZWNlc3NhcnkgZm9yIHVzCnRvIGNoYW5nZSBvdXIgbWV0aG9kcyBhcyBpdCBpcyBmb3IgYSBwaWxvdCB0byBjaGFuZ2UKaGlzIGNvdXJzZSBiZWZvcmUgdGhlIG9uY29taW5nIHN0b3JtLjwvdHJhbnNsYXRpb24+"
translation['10.7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBBZ2Fpbiwgd2hhdAp1c2UgaXMgbXVjaCB3cml0aW5nLCBhc3NpZHVvdXMgcmVhZGluZyBhbmQgbG9uZwp5ZWFycyBvZiBzdHVkeSwgaWYgdGhlIGRpZmZpY3VsdHkgaXMgdG8gcmVtYWluIGFzIGdyZWF0CmFzIGl0IHdhcyBpbiB0aGUgYmVnaW5uaW5nPyBUaGUgbWFuIHdobyBpcyBhbHdheXMKZmFjZWQgd2l0aCB0aGUgc2FtZSBsYWJvdXIgY2FuIG9ubHkgY29uZmVzcyB0aGF0IGhpcwpwYXN0IGxhYm91ciBoYXMgYmVlbiBzcGVudCBpbiB2YWluLiBJIGRvIG5vdCBhc2sKaGltIHRvIHByZWZlciB0byBzcGVhayBleHRlbXBvcmUsIGJ1dCBtZXJlbHkgdGhhdApsaWUgc2hvdWxkIGJlIGFibGUgdG8gZG8gc28uIEFuZCB0aGlzIGNhcGFjaXR5IGlzCmJlc3QgYWNxdWlyZWQgYnkgdGhlIGZvbGxvd2luZyBtZXRob2QuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNSIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGUgZmlyc3QgcGxhY2UsIHdlIG11c3Qgbm90ZSB0aGUgZGlyZWN0aW9uIHdoaWNoCnRoZSBhcmd1bWVudCBpcyBsaWtlbHkgdG8gdGFrZSwgc2luY2Ugd2UgY2Fubm90IHJ1bgpvdXIgcmFjZSB1bmxlc3Mgd2Uga25vdyB0aGUgZ29hbCBhbmQgdGhlIGNvdXJzZS4KSXQgaXMgbm90IGVub3VnaCB0byBrbm93IHdoYXQgYXJlIHRoZSBwYXJ0czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIElJSS4gaXguIDEuPC9ub3RlPiBpbnRvCndoaWNoIGZvcmVuc2ljIHBsZWFkaW5ncyBhcmUgZGl2aWRlZCBvciB0aGUgcHJpbmNpcGxlcyBkZXRlcm1pbmluZyB0aGUgb3JkZXIgb2YgdGhlIHZhcmlvdXMgcXVlc3Rpb25zLAppbXBvcnRhbnQgdGhvdWdoIHRoZXNlIHBvaW50cyBhcmUuIFdlIG11c3QgcmVhbGlzZQp3aGF0IHNob3VsZCBjb21lIGZpcnN0LCBzZWNvbmQsIGFuZCBzbyBvbiwgaW4gdGhlCnNldmVyYWwgcGFydHM7IGZvciB0aGVzZSBwb2ludHMgYXJlIHNvIGNsb3NlbHkgbGlua2VkCnRvZ2V0aGVyIGJ5IHRoZSB2ZXJ5IG5hdHVyZSBvZiB0aGluZ3MgdGhhdCB0aGV5CmNhbm5vdCBiZSBzZXBhcmF0ZWQsIG5vciB0aGVpciBvcmRlciBjaGFuZ2VkLCB3aXRob3V0IGdpdmluZyByaXNlIHRvIGNvbmZ1c2lvbi48bWlsZXN0b25lIG49IjYiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBvcmF0b3IsIHdobyBzcGVha3MKbWV0aG9kaWNhbGx5LCB3aWxsIGFib3ZlIGFsbCB0YWtlIHRoZSBhY3R1YWwgc2VxdWVuY2UKb2YgdGhlIHZhcmlvdXMgcG9pbnRzIGFzIGhpcyBndWlkZSwgYW5kIGl0IGlzIGZvciB0aGlzCnJlYXNvbiB0aGF0IGV2ZW4gYnV0IG1vZGVyYXRlbHkgdHJhaW5lZCBzcGVha2VycwpmaW5kIGl0IGVhc2llc3QgdG8ga2VlcCB0aGUgbmF0dXJhbCBvcmRlciBpbiB0aGUgPGhpIHJlbmQ9Iml0YWxpY3MiPnN0YXRlbWVudCBvZiBmYWN0cy48L2hpPiBTZWNvbmRseSwgdGhlIG9yYXRvciBtdXN0IGtub3cKd2hhdCB0byBsb29rIGZvciBpbiBlYWNoIHBvcnRpb24gb2YgaGlzIGNhc2U6IGhlCm11c3Qgbm90IGJlYXQgYWJvdXQgdGhlIGJ1c2ggb3IgYWxsb3cgaGltc2VsZiB0byBiZQp0aHJvd24gb2ZmIHRoZSB0cmFjayBieSB0aG91Z2h0cyB3aGljaCBzdWdnZXN0CnRoZW1zZWx2ZXMgZnJvbSBpcnJlbGV2YW50IHF1YXJ0ZXJzLCBvciBwcm9kdWNlIGEKc3BlZWNoIHdoaWNoIGlzIGEgY29uZnVzZWQgbWFzcyBvZiBpbmNvbmdydWl0aWVzLAoKPHBiIGlkPSJwLjEzNyIgLz4KCm93aW5nIHRvIGhpcyBoYWJpdCBvZiBsZWFwaW5nIHRoaXMgd2F5IGFuZCB0aGF0LCBhbmQKbmV2ZXIgc3RpY2tpbmcgdG8gYW55IG9uZSBwb2ludC48bWlsZXN0b25lIG49IjciIHVuaXQ9InNlY3Rpb24iIC8+IEZpbmFsbHksIGhlIG11c3QKY29uZmluZSBoaW1zZWxmIHRvIGNlcnRhaW4gZGVmaW5pdGUgYm91bmRzLCBhbmQgZm9yCnRoaXMgPGhpIHJlbmQ9Iml0YWxpY3MiPmRpdmlzaW9uPC9oaT4gaXMgYWJzb2x1dGVseSBuZWNlc3NhcnkuIFdoZW4gdG8gdGhlCmJlc3Qgb2YgaGlzIGFiaWxpdHkgaGUgaGFzIGRlYWx0IGZ1bGx5IHdpdGggYWxsIHRoZQpwb2ludHMgd2hpY2ggaGUgaGFzIGFkdmFuY2VkLCBoZSB3aWxsIGtub3cgdGhhdCBoZQpoYXMgcmVhY2hlZCBoaXMgZ29hbC48L3A+CjwvdHJhbnNsYXRpb24+"
translation['10.7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSBmaXJzdCBwbGFjZSwgd2UgbXVzdCBub3RlIHRoZSBkaXJlY3Rpb24gd2hpY2gKdGhlIGFyZ3VtZW50IGlzIGxpa2VseSB0byB0YWtlLCBzaW5jZSB3ZSBjYW5ub3QgcnVuCm91ciByYWNlIHVubGVzcyB3ZSBrbm93IHRoZSBnb2FsIGFuZCB0aGUgY291cnNlLgpJdCBpcyBub3QgZW5vdWdoIHRvIGtub3cgd2hhdCBhcmUgdGhlIHBhcnRzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBJSUkuIGl4LiAxLjwvbm90ZT4gaW50bwp3aGljaCBmb3JlbnNpYyBwbGVhZGluZ3MgYXJlIGRpdmlkZWQgb3IgdGhlIHByaW5jaXBsZXMgZGV0ZXJtaW5pbmcgdGhlIG9yZGVyIG9mIHRoZSB2YXJpb3VzIHF1ZXN0aW9ucywKaW1wb3J0YW50IHRob3VnaCB0aGVzZSBwb2ludHMgYXJlLiBXZSBtdXN0IHJlYWxpc2UKd2hhdCBzaG91bGQgY29tZSBmaXJzdCwgc2Vjb25kLCBhbmQgc28gb24sIGluIHRoZQpzZXZlcmFsIHBhcnRzOyBmb3IgdGhlc2UgcG9pbnRzIGFyZSBzbyBjbG9zZWx5IGxpbmtlZAp0b2dldGhlciBieSB0aGUgdmVyeSBuYXR1cmUgb2YgdGhpbmdzIHRoYXQgdGhleQpjYW5ub3QgYmUgc2VwYXJhdGVkLCBub3IgdGhlaXIgb3JkZXIgY2hhbmdlZCwgd2l0aG91dCBnaXZpbmcgcmlzZSB0byBjb25mdXNpb24uPC90cmFuc2xhdGlvbj4="
translation['10.7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBUaGUgb3JhdG9yLCB3aG8gc3BlYWtzCm1ldGhvZGljYWxseSwgd2lsbCBhYm92ZSBhbGwgdGFrZSB0aGUgYWN0dWFsIHNlcXVlbmNlCm9mIHRoZSB2YXJpb3VzIHBvaW50cyBhcyBoaXMgZ3VpZGUsIGFuZCBpdCBpcyBmb3IgdGhpcwpyZWFzb24gdGhhdCBldmVuIGJ1dCBtb2RlcmF0ZWx5IHRyYWluZWQgc3BlYWtlcnMKZmluZCBpdCBlYXNpZXN0IHRvIGtlZXAgdGhlIG5hdHVyYWwgb3JkZXIgaW4gdGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnN0YXRlbWVudCBvZiBmYWN0cy48L2hpPiBTZWNvbmRseSwgdGhlIG9yYXRvciBtdXN0IGtub3cKd2hhdCB0byBsb29rIGZvciBpbiBlYWNoIHBvcnRpb24gb2YgaGlzIGNhc2U6IGhlCm11c3Qgbm90IGJlYXQgYWJvdXQgdGhlIGJ1c2ggb3IgYWxsb3cgaGltc2VsZiB0byBiZQp0aHJvd24gb2ZmIHRoZSB0cmFjayBieSB0aG91Z2h0cyB3aGljaCBzdWdnZXN0CnRoZW1zZWx2ZXMgZnJvbSBpcnJlbGV2YW50IHF1YXJ0ZXJzLCBvciBwcm9kdWNlIGEKc3BlZWNoIHdoaWNoIGlzIGEgY29uZnVzZWQgbWFzcyBvZiBpbmNvbmdydWl0aWVzLAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTM3IiAvPgoKb3dpbmcgdG8gaGlzIGhhYml0IG9mIGxlYXBpbmcgdGhpcyB3YXkgYW5kIHRoYXQsIGFuZApuZXZlciBzdGlja2luZyB0byBhbnkgb25lIHBvaW50LjwvdHJhbnNsYXRpb24+"
translation['10.7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBGaW5hbGx5LCBoZSBtdXN0CmNvbmZpbmUgaGltc2VsZiB0byBjZXJ0YWluIGRlZmluaXRlIGJvdW5kcywgYW5kIGZvcgp0aGlzIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRpdmlzaW9uPC9oaT4gaXMgYWJzb2x1dGVseSBuZWNlc3NhcnkuIFdoZW4gdG8gdGhlCmJlc3Qgb2YgaGlzIGFiaWxpdHkgaGUgaGFzIGRlYWx0IGZ1bGx5IHdpdGggYWxsIHRoZQpwb2ludHMgd2hpY2ggaGUgaGFzIGFkdmFuY2VkLCBoZSB3aWxsIGtub3cgdGhhdCBoZQpoYXMgcmVhY2hlZCBoaXMgZ29hbC48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZSBwcmVjZXB0cyBqdXN0IGdpdmVuIGFyZSBkZXBlbmRlbnQgb24gdGhlb3J5LgpUaG9zZSB0byB3aGljaCBJIG5vdyBjb21lIGRlcGVuZCBvbiBpbmRpdmlkdWFsCnN0dWR5LiBXZSBtdXN0IGFjcXVpcmUgYSBzdG9yZSBvZiB0aGUgYmVzdCB3b3JkcwphbmQgcGhyYXNlcyBvbiBsaW5lcyB0aGF0IEkgaGF2ZSBhbHJlYWR5IGxhaWQgZG93biwKd2hpbGUgb3VyIHN0eWxlIG11c3QgYmUgZm9ybWVkIGJ5IGNvbnRpbnVvdXMgYW5kCmNvbnNjaWVudGlvdXMgcHJhY3RpY2UgaW4gd3JpdGluZywgc28gdGhhdCBldmVuIG91cgppbXByb3Zpc2F0aW9ucyBtYXkgcmVwcm9kdWNlIHRoZSB0b25lIG9mIG91ciB3cml0aW5nLAphbmQgYWZ0ZXIgd3JpdGluZyBtdWNoLCB3ZSBtdXN0IGdpdmUgb3Vyc2VsdmVzCmZyZXF1ZW50IHByYWN0aWNlIGluIHNwZWFraW5nLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgZmFjaWxpdHkgaXMgbWFpbmx5CnRoZSByZXN1bHQgb2YgaGFiaXQgYW5kIGV4ZXJjaXNlIGFuZCwgaWYgaXQgYmUKbG9zdCBvbmx5IGZvciBhIGJyaWVmIHRpbWUsIHRoZSByZXN1bHQgd2lsbCBiZQpub3QgbWVyZWx5IHRoYXQgd2UgZmFsbCBzaG9ydCBvZiB0aGUgcmVxdWlzaXRlCnJhcGlkaXR5LCBidXQgdGhhdCBvdXIgbGlwcyB3aWxsIGJlY29tZSBjbG9nZ2VkCmFuZCBzbG93IHRvIG9wZW4uIEZvciBhbHRob3VnaCB3ZSBuZWVkIHRvCnBvc3Nlc3MgYSBjZXJ0YWluIG5hdHVyYWwgbmltYmxlbmVzcyBvZiBtaW5kIHRvCmVuYWJsZSB1cywgd2hpbGUgd2UgYXJlIHNheWluZyB3aGF0IHRoZSBpbnN0YW50CmRlbWFuZHMsIHRvIGJ1aWxkIHVwIHdoYXQgaXMgdG8gZm9sbG93IGFuZCB0bwpzZWN1cmUgdGhhdCB0aGVyZSB3aWxsIGFsd2F5cyBiZSBzb21lIHRob3VnaHQgZm9ybWVkCmFuZCBjb25jZWl2ZWQgaW4gYWR2YW5jZSByZWFkeSB0byBzZXJ2ZSBvdXIgdm9pY2UsCm5vbmUgdGhlIGxlc3MsPG1pbGVzdG9uZSBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBpdCBpcyBzY2FyY2VseSBwb3NzaWJsZSBlaXRoZXIgZm9yIG5hdHVyYWwKZ2lmdHMgb3IgZm9yIG1ldGhvZGljIGFydCB0byBlbmFibGUgdGhlIG1pbmQgdG8KZ3JhcHBsZSBzaW11bHRhbmVvdXNseSB3aXRoIHN1Y2ggbWFuaWZvbGQgZHV0aWVzLAphbmQgdG8gYmUgZXF1YWwgYXQgb25lIGFuZCB0aGUgc2FtZSB0aW1lIHRvIHRoZQp0YXNrcyBvZiBpbnZlbnRpb24sIGFycmFuZ2VtZW50LCBhbmQgc3R5bGUsIHRvZ2V0aGVyCndpdGggd2hhdCB3ZSBhcmUgdXR0ZXJpbmcgYXQgdGhlIG1vbWVudCwgd2hhdCB3ZQpoYXZlIGdvdCB0byBzYXkgbmV4dCBhbmQgd2hhdCB3ZSBoYXZlIHRvIGxvb2sgdG8Kc3RpbGwgZnVydGhlciBvbiwgbm90IHRvIG1lbnRpb24gdGhlIGZhY3QgdGhhdCBpdAoKPHBiIGlkPSJwLjEzOSIgLz4KCmlzIG5lY2Vzc2FyeSBhbGwgdGhlIHRpbWUgdG8gZ2l2ZSBjbG9zZSBhdHRlbnRpb24gdG8Kdm9pY2UsIGRlbGl2ZXJ5IGFuZCBnZXN0dXJlLjxtaWxlc3RvbmUgbj0iMTAiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBvdXIgbWVudGFsIGFjdGl2aXRpZXMKbXVzdCByYW5nZSBmYXIgYWhlYWQgYW5kIHB1cnN1ZSB0aGUgaWRlYXMgd2hpY2gKYXJlIHN0aWxsIGluIGZyb250LCBhbmQgaW4gcHJvcG9ydGlvbiBhcyB0aGUgc3BlYWtlcgpwYXlzIG91dCB3aGF0IGhlIGhhcyBpbiBoYW5kLCBoZSBtdXN0IG1ha2UgYWR2YW5jZXMKdG8gaGltc2VsZiBmcm9tIGhpcyByZXNlcnZlIGZ1bmRzLCBpbiBvcmRlciB0aGF0LCB1bnRpbAp3ZSByZWFjaCBvdXIgY29uY2x1c2lvbiwgb3VyIG1pbmQncyBleWUgbWF5IHVyZ2UKaXRzIGdhemUgZm9yd2FyZCwga2VlcGluZyB0aW1lIHdpdGggb3VyIGFkdmFuY2U6Cm90aGVyd2lzZSB3ZSBzaGFsbCBoYWx0IGFuZCBzdHVtYmxlLCBhbmQgcG91ciBmb3J0aApzaG9ydCBhbmQgYnJva2VuIHBocmFzZXMsIGxpa2UgcGVyc29ucyB3aG8gY2FuIG9ubHkKZ2FzcCBvdXQgd2hhdCB0aGV5IGhhdmUgdG8gc2F5LjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.7.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgZmFjaWxpdHkgaXMgbWFpbmx5CnRoZSByZXN1bHQgb2YgaGFiaXQgYW5kIGV4ZXJjaXNlIGFuZCwgaWYgaXQgYmUKbG9zdCBvbmx5IGZvciBhIGJyaWVmIHRpbWUsIHRoZSByZXN1bHQgd2lsbCBiZQpub3QgbWVyZWx5IHRoYXQgd2UgZmFsbCBzaG9ydCBvZiB0aGUgcmVxdWlzaXRlCnJhcGlkaXR5LCBidXQgdGhhdCBvdXIgbGlwcyB3aWxsIGJlY29tZSBjbG9nZ2VkCmFuZCBzbG93IHRvIG9wZW4uIEZvciBhbHRob3VnaCB3ZSBuZWVkIHRvCnBvc3Nlc3MgYSBjZXJ0YWluIG5hdHVyYWwgbmltYmxlbmVzcyBvZiBtaW5kIHRvCmVuYWJsZSB1cywgd2hpbGUgd2UgYXJlIHNheWluZyB3aGF0IHRoZSBpbnN0YW50CmRlbWFuZHMsIHRvIGJ1aWxkIHVwIHdoYXQgaXMgdG8gZm9sbG93IGFuZCB0bwpzZWN1cmUgdGhhdCB0aGVyZSB3aWxsIGFsd2F5cyBiZSBzb21lIHRob3VnaHQgZm9ybWVkCmFuZCBjb25jZWl2ZWQgaW4gYWR2YW5jZSByZWFkeSB0byBzZXJ2ZSBvdXIgdm9pY2UsCm5vbmUgdGhlIGxlc3MsPC90cmFuc2xhdGlvbj4="
translation['10.7.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBpdCBpcyBzY2FyY2VseSBwb3NzaWJsZSBlaXRoZXIgZm9yIG5hdHVyYWwKZ2lmdHMgb3IgZm9yIG1ldGhvZGljIGFydCB0byBlbmFibGUgdGhlIG1pbmQgdG8KZ3JhcHBsZSBzaW11bHRhbmVvdXNseSB3aXRoIHN1Y2ggbWFuaWZvbGQgZHV0aWVzLAphbmQgdG8gYmUgZXF1YWwgYXQgb25lIGFuZCB0aGUgc2FtZSB0aW1lIHRvIHRoZQp0YXNrcyBvZiBpbnZlbnRpb24sIGFycmFuZ2VtZW50LCBhbmQgc3R5bGUsIHRvZ2V0aGVyCndpdGggd2hhdCB3ZSBhcmUgdXR0ZXJpbmcgYXQgdGhlIG1vbWVudCwgd2hhdCB3ZQpoYXZlIGdvdCB0byBzYXkgbmV4dCBhbmQgd2hhdCB3ZSBoYXZlIHRvIGxvb2sgdG8Kc3RpbGwgZnVydGhlciBvbiwgbm90IHRvIG1lbnRpb24gdGhlIGZhY3QgdGhhdCBpdAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTM5IiAvPgoKaXMgbmVjZXNzYXJ5IGFsbCB0aGUgdGltZSB0byBnaXZlIGNsb3NlIGF0dGVudGlvbiB0bwp2b2ljZSwgZGVsaXZlcnkgYW5kIGdlc3R1cmUuPC90cmFuc2xhdGlvbj4="
translation['10.7.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIG91ciBtZW50YWwgYWN0aXZpdGllcwptdXN0IHJhbmdlIGZhciBhaGVhZCBhbmQgcHVyc3VlIHRoZSBpZGVhcyB3aGljaAphcmUgc3RpbGwgaW4gZnJvbnQsIGFuZCBpbiBwcm9wb3J0aW9uIGFzIHRoZSBzcGVha2VyCnBheXMgb3V0IHdoYXQgaGUgaGFzIGluIGhhbmQsIGhlIG11c3QgbWFrZSBhZHZhbmNlcwp0byBoaW1zZWxmIGZyb20gaGlzIHJlc2VydmUgZnVuZHMsIGluIG9yZGVyIHRoYXQsIHVudGlsCndlIHJlYWNoIG91ciBjb25jbHVzaW9uLCBvdXIgbWluZCdzIGV5ZSBtYXkgdXJnZQppdHMgZ2F6ZSBmb3J3YXJkLCBrZWVwaW5nIHRpbWUgd2l0aCBvdXIgYWR2YW5jZToKb3RoZXJ3aXNlIHdlIHNoYWxsIGhhbHQgYW5kIHN0dW1ibGUsIGFuZCBwb3VyIGZvcnRoCnNob3J0IGFuZCBicm9rZW4gcGhyYXNlcywgbGlrZSBwZXJzb25zIHdobyBjYW4gb25seQpnYXNwIG91dCB3aGF0IHRoZXkgaGF2ZSB0byBzYXkuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+VGhlcmUgaXMsIHRoZXJlZm9yZSwgYSBjZXJ0YWluIG1lY2hhbmljYWwga25hY2ssCndoaWNoIHRoZSBHcmVla3MgY2FsbCA8Zm9yZWlnbiBsYW5nPSJncmVlayI+YSkvbG9nb3MgdHJpYmgvLDwvZm9yZWlnbj4gd2hpY2ggZW5hYmxlcwp0aGUgaGFuZCB0byBnbyBvbiBzY3JpYmJsaW5nLCB3aGlsZSB0aGUgZXllIHRha2VzCmluIHdob2xlIGxpbmVzIGF0IG9uY2UgYXMgaXQgcmVhZHMsIG9ic2VydmVzIHRoZSBpbnRvbmF0aW9ucyBhbmQgdGhlIHN0b3BzLCBhbmQgc2VlcyB3aGF0IGlzIGNvbWluZwpiZWZvcmUgdGhlIHJlYWRlciBoYXMgYXJ0aWN1bGF0ZWQgdG8gaGltc2VsZiB3aGF0CnByZWNlZGVzLiBJdCBpcyBhIHNpbWlsYXIga25hY2sgd2hpY2ggbWFrZXMgcG9zc2libGUKdGhvc2UgbWlyYWN1bG91cyB0cmlja3Mgd2hpY2ggd2Ugc2VlIGp1Z2dsZXJzIGFuZAptYXN0ZXJzIG9mIHNsZWlnaHQgb2YgaGFuZCBwZXJmb3JtIHVwb24gdGhlIHN0YWdlLAppbiBzdWNoIGEgbWFubmVyIHRoYXQgdGhlIHNwZWN0YXRvciBjYW4gc2NhcmNlbHkKaGVscCBiZWxpZXZpbmcgdGhhdCB0aGUgb2JqZWN0cyB3aGljaCB0aGV5IHRocm93CmludG8gdGhlIGFpciBjb21lIHRvIGhhbmQgb2YgdGhlaXIgb3duIGFjY29yZCwgYW5kCnJ1biB3aGVyZSB0aGV5IGFyZSBiaWRkZW4uPG1pbGVzdG9uZSBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHRoaXMga25hY2sgd2lsbApvbmx5IGJlIG9mIHJlYWwgc2VydmljZSBpZiBpdCBiZSBwcmVjZWRlZCBieSB0aGUgYXJ0Cm9mIHdoaWNoIHdlIGhhdmUgc3Bva2VuLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+wqfCpyA14oCTNy48L25vdGU+IHNvIHRoYXQgd2hhdCBpcyBpcnJhdGlvbmFsCmluIGl0c2VsZiB3aWxsIG5ldmVydGhlbGVzcyBiZSBmb3VuZGVkIG9uIHJlYXNvbi4gRm9yCnVubGVzcyBhIG1hbiBzcGVha3MgaW4gYW4gb3JkZXJseSwgb3JuYXRlIGFuZCBmbHVlbnQKbWFubmVyLCBJIHJlZnVzZSB0byBkaWduaWZ5IGhpcyB1dHRlcmFuY2Ugd2l0aCB0aGUKbmFtZSBvZiBzcGVlY2gsIGJ1dCBjb25zaWRlciBpdCB0aGUgbWVyZXN0IHJhbnQuCjxtaWxlc3RvbmUgbj0iMTMiIHVuaXQ9InNlY3Rpb24iIC8+Tm9yIGFnYWluIHNoYWxsIEkgZXZlciBiZSBpbmR1Y2VkIHRvIGFkbWlyZSBhIGNvbnRpbnVvdXMgZmxvdyBvZiByYW5kb20gdGFsaywgc3VjaCBhcyBJIG5vdGUgc3RyZWFtcyBpbgp0b3JyZW50cyBldmVuIGZyb20gdGhlIGxpcHMgb2Ygd29tZW4gd2hlbiB0aGV5CnF1YXJyZWwsIGFsdGhvdWdoLCBpZiBhIHNwZWFrZXIgaXMgc3dlcHQgYXdheSBieQoKPHBiIGlkPSJwLjE0MSIgLz4KCndhcm10aCBvZiBmZWVsaW5nIGFuZCBnZW51aW5lIGluc3BpcmF0aW9uLCBpdCBmcmVxdWVudGx5IGhhcHBlbnMgdGhhdCBoZSBhdHRhaW5zIGEgc3VjY2VzcyBmcm9tIGltcHJvdmlzYXRpb24gd2hpY2ggd291bGQgaGF2ZSBiZWVuIGJleW9uZCB0aGUgcmVhY2ggb2YKdGhlIG1vc3QgY2FyZWZ1bCBwcmVwYXJhdGlvbi48bWlsZXN0b25lIG49IjE0IiB1bml0PSJzZWN0aW9uIiAvPiBXaGVuIHRoaXMgb2NjdXJyZWQsIHRoZQpvbGQgb3JhdG9ycywgc3VjaCBhcyBDaWNlcm8sPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5ObyBzdWNoIHNheWluZyBpcyBmb3VuZCBpbiBDaWNlcm8ncyBleHRhbnQgd29ya3MuPC9ub3RlPiB1c2VkIHRvIHNheSB0aGF0IHNvbWUgZ29kCmhhZCBpbnNwaXJlZCB0aGUgc3BlYWtlci4gQnV0IHRoZSByZWFzb24gaXMgb2J2aW91cy4KRm9yIHByb2ZvdW5kIGVtb3Rpb24gYW5kIHZpdmlkIGltYWdpbmF0aW9uIHN3ZWVwCm9uIHdpdGggdW5icm9rZW4gZm9yY2UsIHdoZXJlYXMsIGlmIHJldGFyZGVkIGJ5IHRoZQpzbG93bmVzcyBvZiB0aGUgcGVuLCB0aGV5IGFyZSBsaWFibGUgdG8gZ3JvdyBjb2xkIGFuZCwKaXQgcHV0IG9mZiBmb3IgdGhlIG1vbWVudCwgbWF5IG5ldmVyIHJldHVybi4gQWJvdmUKYWxsLCBpZiB3ZSBhZGQgdG8gdGhlc2Ugb2JzdGFjbGVzIGFuIHVuaGVhbHRoeSB0ZW5kZW5jeQp0byBxdWliYmxlIG92ZXIgdGhlIGNob2ljZSBvZiB3b3JkcywgYW5kIGNoZWNrIG91cgphZHZhbmNlIGF0IGVhY2ggc3RlcCwgdGhlIHZlaGVtZW5jZSBvZiBvdXIgb25zZXQKbG9zZXMgaXRzIGltcGV0dXM7IHdoaWxlIGV2ZW4gdGhvdWdoIG91ciBjaG9pY2Ugb2YKaW5kaXZpZHVhbCB3b3JkcyBtYXkgYmUgb2YgdGhlIGhhcHBpZXN0LCB0aGUgc3R5bGUKd2lsbCBiZSBhIG1lcmUgcGF0Y2h3b3JrIHdpdGggbm8gcmVndWxhciBwYXR0ZXJuLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.7.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBpcywgdGhlcmVmb3JlLCBhIGNlcnRhaW4gbWVjaGFuaWNhbCBrbmFjaywKd2hpY2ggdGhlIEdyZWVrcyBjYWxsIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPmEpL2xvZ29zIHRyaWJoLyw8L2ZvcmVpZ24+IHdoaWNoIGVuYWJsZXMKdGhlIGhhbmQgdG8gZ28gb24gc2NyaWJibGluZywgd2hpbGUgdGhlIGV5ZSB0YWtlcwppbiB3aG9sZSBsaW5lcyBhdCBvbmNlIGFzIGl0IHJlYWRzLCBvYnNlcnZlcyB0aGUgaW50b25hdGlvbnMgYW5kIHRoZSBzdG9wcywgYW5kIHNlZXMgd2hhdCBpcyBjb21pbmcKYmVmb3JlIHRoZSByZWFkZXIgaGFzIGFydGljdWxhdGVkIHRvIGhpbXNlbGYgd2hhdApwcmVjZWRlcy4gSXQgaXMgYSBzaW1pbGFyIGtuYWNrIHdoaWNoIG1ha2VzIHBvc3NpYmxlCnRob3NlIG1pcmFjdWxvdXMgdHJpY2tzIHdoaWNoIHdlIHNlZSBqdWdnbGVycyBhbmQKbWFzdGVycyBvZiBzbGVpZ2h0IG9mIGhhbmQgcGVyZm9ybSB1cG9uIHRoZSBzdGFnZSwKaW4gc3VjaCBhIG1hbm5lciB0aGF0IHRoZSBzcGVjdGF0b3IgY2FuIHNjYXJjZWx5CmhlbHAgYmVsaWV2aW5nIHRoYXQgdGhlIG9iamVjdHMgd2hpY2ggdGhleSB0aHJvdwppbnRvIHRoZSBhaXIgY29tZSB0byBoYW5kIG9mIHRoZWlyIG93biBhY2NvcmQsIGFuZApydW4gd2hlcmUgdGhleSBhcmUgYmlkZGVuLjwvdHJhbnNsYXRpb24+"
translation['10.7.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHRoaXMga25hY2sgd2lsbApvbmx5IGJlIG9mIHJlYWwgc2VydmljZSBpZiBpdCBiZSBwcmVjZWRlZCBieSB0aGUgYXJ0Cm9mIHdoaWNoIHdlIGhhdmUgc3Bva2VuLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj7Cp8KnIDXigJM3Ljwvbm90ZT4gc28gdGhhdCB3aGF0IGlzIGlycmF0aW9uYWwKaW4gaXRzZWxmIHdpbGwgbmV2ZXJ0aGVsZXNzIGJlIGZvdW5kZWQgb24gcmVhc29uLiBGb3IKdW5sZXNzIGEgbWFuIHNwZWFrcyBpbiBhbiBvcmRlcmx5LCBvcm5hdGUgYW5kIGZsdWVudAptYW5uZXIsIEkgcmVmdXNlIHRvIGRpZ25pZnkgaGlzIHV0dGVyYW5jZSB3aXRoIHRoZQpuYW1lIG9mIHNwZWVjaCwgYnV0IGNvbnNpZGVyIGl0IHRoZSBtZXJlc3QgcmFudC4KPC90cmFuc2xhdGlvbj4="
translation['10.7.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3IgYWdhaW4gc2hhbGwgSSBldmVyIGJlIGluZHVjZWQgdG8gYWRtaXJlIGEgY29udGludW91cyBmbG93IG9mIHJhbmRvbSB0YWxrLCBzdWNoIGFzIEkgbm90ZSBzdHJlYW1zIGluCnRvcnJlbnRzIGV2ZW4gZnJvbSB0aGUgbGlwcyBvZiB3b21lbiB3aGVuIHRoZXkKcXVhcnJlbCwgYWx0aG91Z2gsIGlmIGEgc3BlYWtlciBpcyBzd2VwdCBhd2F5IGJ5Cgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xNDEiIC8+Cgp3YXJtdGggb2YgZmVlbGluZyBhbmQgZ2VudWluZSBpbnNwaXJhdGlvbiwgaXQgZnJlcXVlbnRseSBoYXBwZW5zIHRoYXQgaGUgYXR0YWlucyBhIHN1Y2Nlc3MgZnJvbSBpbXByb3Zpc2F0aW9uIHdoaWNoIHdvdWxkIGhhdmUgYmVlbiBiZXlvbmQgdGhlIHJlYWNoIG9mCnRoZSBtb3N0IGNhcmVmdWwgcHJlcGFyYXRpb24uPC90cmFuc2xhdGlvbj4="
translation['10.7.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz4gV2hlbiB0aGlzIG9jY3VycmVkLCB0aGUKb2xkIG9yYXRvcnMsIHN1Y2ggYXMgQ2ljZXJvLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5ObyBzdWNoIHNheWluZyBpcyBmb3VuZCBpbiBDaWNlcm8ncyBleHRhbnQgd29ya3MuPC9ub3RlPiB1c2VkIHRvIHNheSB0aGF0IHNvbWUgZ29kCmhhZCBpbnNwaXJlZCB0aGUgc3BlYWtlci4gQnV0IHRoZSByZWFzb24gaXMgb2J2aW91cy4KRm9yIHByb2ZvdW5kIGVtb3Rpb24gYW5kIHZpdmlkIGltYWdpbmF0aW9uIHN3ZWVwCm9uIHdpdGggdW5icm9rZW4gZm9yY2UsIHdoZXJlYXMsIGlmIHJldGFyZGVkIGJ5IHRoZQpzbG93bmVzcyBvZiB0aGUgcGVuLCB0aGV5IGFyZSBsaWFibGUgdG8gZ3JvdyBjb2xkIGFuZCwKaXQgcHV0IG9mZiBmb3IgdGhlIG1vbWVudCwgbWF5IG5ldmVyIHJldHVybi4gQWJvdmUKYWxsLCBpZiB3ZSBhZGQgdG8gdGhlc2Ugb2JzdGFjbGVzIGFuIHVuaGVhbHRoeSB0ZW5kZW5jeQp0byBxdWliYmxlIG92ZXIgdGhlIGNob2ljZSBvZiB3b3JkcywgYW5kIGNoZWNrIG91cgphZHZhbmNlIGF0IGVhY2ggc3RlcCwgdGhlIHZlaGVtZW5jZSBvZiBvdXIgb25zZXQKbG9zZXMgaXRzIGltcGV0dXM7IHdoaWxlIGV2ZW4gdGhvdWdoIG91ciBjaG9pY2Ugb2YKaW5kaXZpZHVhbCB3b3JkcyBtYXkgYmUgb2YgdGhlIGhhcHBpZXN0LCB0aGUgc3R5bGUKd2lsbCBiZSBhIG1lcmUgcGF0Y2h3b3JrIHdpdGggbm8gcmVndWxhciBwYXR0ZXJuLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE1IiB1bml0PSJzZWN0aW9uIiAvPkNvbnNlcXVlbnRseSB0aG9zZSB2aXZpZCBjb25jZXB0aW9ucyBvZiB3aGljaCBJCnNwb2tlPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5WSS4gaWkuIDI5Ljwvbm90ZT4gYW5kIHdoaWNoLCBhcyBJIHJlbWFya2VkLCBhcmUgY2FsbGVkIDxmb3JlaWduIGxhbmc9ImdyZWVrIj5mYW50YXNpL2FpLDwvZm9yZWlnbj4KdG9nZXRoZXIgd2l0aCBldmVyeXRoaW5nIHRoYXQgd2UgaW50ZW5kIHRvIHNheSwKdGhlIHBlcnNvbnMgYW5kIHF1ZXN0aW9ucyBpbnZvbHZlZCwgYW5kIHRoZSBob3BlcwphbmQgZmVhcnMgdG8gd2hpY2ggdGhleSBnaXZlIHJpc2UsIG11c3QgYmUga2VwdApjbGVhcmx5IGJlZm9yZSBvdXIgZXllcyBhbmQgYWRtaXR0ZWQgdG8gb3VyIGhlYXJ0czoKZm9yIGl0IGlzIGZlZWxpbmcgYW5kIGZvcmNlIG9mIGltYWdpbmF0aW9uIHRoYXQgbWFrZQp1cyBlbG9xdWVudC4gSXQgaXMgZm9yIHRoaXMgcmVhc29uIHRoYXQgZXZlbiB0aGUgdW5lZHVjYXRlZCBoYXZlIG5vIGRpZmZpY3VsdHkgaW4gZmluZGluZyB3b3JkcyB0byBleHByZXNzCnRoZWlyIG1lYW5pbmcsIGlmIG9ubHkgdGhleSBhcmUgc3RpcnJlZCBieSBzb21lIHN0cm9uZwplbW90aW9uLjxtaWxlc3RvbmUgbj0iMTYiIHVuaXQ9InNlY3Rpb24iIC8+IEZ1cnRoZXIgdGhlIGF0dGVudGlvbiBvZiB0aGUgbWluZCBtdXN0IGJlCmRpcmVjdGVkIG5vdCB0byBzb21lIG9uZSB0aGluZywgYnV0IHNpbXVsdGFuZW91c2x5IHRvCmEgbnVtYmVyIG9mIHRoaW5ncyBpbiBjb250aW51b3VzIHNlcXVlbmNlLiBUaGUKcmVzdWx0IHdpbGwgYmUgdGhlIHNhbWUgYXMgd2hlbiB3ZSBjYXN0IG91ciBleWVzCmFsb25nIHNvbWUgc3RyYWlnaHQgcm9hZCBhbmQgc2VlIGF0IG9uY2UgYWxsIHRoYXQgaXMgb24KYW5kIG5lYXIgaXQsIG9idGFpbmluZyBhIHZpZXcgbm90IG1lcmVseSBvZiBpdHMgZW5kLApidXQgb2YgdGhlIHdob2xlIHdheSB0aGVyZS4gRHJlYWQgb2YgdGhlIHNoYW1lCm9mIGZhaWx1cmUgaXMgYWxzbyBhIHBvd2VyZnVsIHN0aW11bGFudCB0byBvcmF0b3J5LAoKPHBiIGlkPSJwLjE0MyIgLz4KCmFuZCBpdCBtYXkgYmUgcmVnYXJkZWQgYXMgYSBtYXR0ZXIgZm9yIHdvbmRlciB0aGF0LAp3aGVyZWFzIHdoZW4gd3JpdGluZyB3ZSBkZWxpZ2h0IGluIHByaXZhY3kgYW5kCnNocmluayBmcm9tIHRoZSBwcmVzZW5jZSBvZiB3aXRuZXNzZXMsIGluIGV4dGVtcG9yZQpwbGVhZGluZyBhIGxhcmdlIGF1ZGllbmNlIGhhcyBhbiBlbmNvdXJhZ2luZyBlZmZlY3QsCmxpa2UgdGhhdCB3aGljaCB0aGUgc2lnaHQgb2YgdGhlIG1hc3NlZCBzdGFuZGFyZHMKaGFzIG9uIHRoZSBzb2xkaWVyLjxtaWxlc3RvbmUgbj0iMTciIHVuaXQ9InNlY3Rpb24iIC8+IEZvciB0aGUgc2hlZXIgbmVjZXNzaXR5IG9mIHNwZWFraW5nIHRocnVzdHMgZm9yd2FyZCBhbmQgZm9yY2VzIG91dCBvdXIgbGFib3VyaW5nCnRob3VnaHQsIGFuZCB0aGUgZGVzaXJlIHRvIHdpbiBhcHByb2JhdGlvbiBraW5kbGVzCmFuZCBmb3N0ZXJzIG91ciBlZmZvcnRzLiBTbyB0cnVlIGlzIGl0IHRoYXQgdGhlcmUgaXMKbm90aGluZyB3aGljaCBkb2VzIG5vdCBsb29rIGZvciBzb21lIHJld2FyZCwgdGhhdAplbG9xdWVuY2UsIGRlc3BpdGUgdGhlIGZhY3QgdGhhdCBpdHMgYWN0aXZpdHkgaXMgaW4gaXRzZWxmCnByb2R1Y3RpdmUgb2YgYSBzdHJvbmcgZmVlbGluZyBvZiBwbGVhc3VyZSwgaXMgaW5mbHVlbmNlZApieSBub3RoaW5nIHNvIG11Y2ggYXMgdGhlIGltbWVkaWF0ZSBhY3F1aXNpdGlvbiBvZgpwcmFpc2UgYW5kIHJlbm93bi48bWlsZXN0b25lIG49IjE4IiB1bml0PSJzZWN0aW9uIiAvPiBOb3Igc2hvdWxkIGFueSBtYW4gcHV0IHN1Y2gKdHJ1c3QgaW4gaGlzIG5hdGl2ZSBhYmlsaXR5IGFzIHRvIGhvcGUgdGhhdCB0aGlzIHBvd2VyCndpbGwgcHJlc2VudCBpdHNlbGYgdG8gaGltIGF0IHRoZSBvdXRzZXQgb2YgaGlzIGNhcmVlcgphcyBhbiBvcmF0b3I7IGZvciB0aGUgcHJlY2VwdHMgd2hpY2ggSSBsYWlkIGRvd24gZm9yCnByZW1lZGl0YXRpb248bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkNoLiB2aS4gMy48L25vdGU+IGFwcGx5IHRvIGltcHJvdmlzYXRpb24gYWxzbzsgd2UKbXVzdCBkZXZlbG9wIGl0IGJ5IGdyYWR1YWwgc3RhZ2VzIGZyb20gc21hbGwgYmVnaW5uaW5ncywgdW50aWwgd2UgaGF2ZSByZWFjaGVkIHRoYXQgcGVyZmVjdGlvbiB3aGljaApjYW4gb25seSBiZSBwcm9kdWNlZCBhbmQgbWFpbnRhaW5lZCBieSBwcmFjdGljZS48L3A+CjwvdHJhbnNsYXRpb24+"
translation['10.7.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Db25zZXF1ZW50bHkgdGhvc2Ugdml2aWQgY29uY2VwdGlvbnMgb2Ygd2hpY2ggSQpzcG9rZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5WSS4gaWkuIDI5Ljwvbm90ZT4gYW5kIHdoaWNoLCBhcyBJIHJlbWFya2VkLCBhcmUgY2FsbGVkIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPmZhbnRhc2kvYWksPC9mb3JlaWduPgp0b2dldGhlciB3aXRoIGV2ZXJ5dGhpbmcgdGhhdCB3ZSBpbnRlbmQgdG8gc2F5LAp0aGUgcGVyc29ucyBhbmQgcXVlc3Rpb25zIGludm9sdmVkLCBhbmQgdGhlIGhvcGVzCmFuZCBmZWFycyB0byB3aGljaCB0aGV5IGdpdmUgcmlzZSwgbXVzdCBiZSBrZXB0CmNsZWFybHkgYmVmb3JlIG91ciBleWVzIGFuZCBhZG1pdHRlZCB0byBvdXIgaGVhcnRzOgpmb3IgaXQgaXMgZmVlbGluZyBhbmQgZm9yY2Ugb2YgaW1hZ2luYXRpb24gdGhhdCBtYWtlCnVzIGVsb3F1ZW50LiBJdCBpcyBmb3IgdGhpcyByZWFzb24gdGhhdCBldmVuIHRoZSB1bmVkdWNhdGVkIGhhdmUgbm8gZGlmZmljdWx0eSBpbiBmaW5kaW5nIHdvcmRzIHRvIGV4cHJlc3MKdGhlaXIgbWVhbmluZywgaWYgb25seSB0aGV5IGFyZSBzdGlycmVkIGJ5IHNvbWUgc3Ryb25nCmVtb3Rpb24uPC90cmFuc2xhdGlvbj4="
translation['10.7.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz4gRnVydGhlciB0aGUgYXR0ZW50aW9uIG9mIHRoZSBtaW5kIG11c3QgYmUKZGlyZWN0ZWQgbm90IHRvIHNvbWUgb25lIHRoaW5nLCBidXQgc2ltdWx0YW5lb3VzbHkgdG8KYSBudW1iZXIgb2YgdGhpbmdzIGluIGNvbnRpbnVvdXMgc2VxdWVuY2UuIFRoZQpyZXN1bHQgd2lsbCBiZSB0aGUgc2FtZSBhcyB3aGVuIHdlIGNhc3Qgb3VyIGV5ZXMKYWxvbmcgc29tZSBzdHJhaWdodCByb2FkIGFuZCBzZWUgYXQgb25jZSBhbGwgdGhhdCBpcyBvbgphbmQgbmVhciBpdCwgb2J0YWluaW5nIGEgdmlldyBub3QgbWVyZWx5IG9mIGl0cyBlbmQsCmJ1dCBvZiB0aGUgd2hvbGUgd2F5IHRoZXJlLiBEcmVhZCBvZiB0aGUgc2hhbWUKb2YgZmFpbHVyZSBpcyBhbHNvIGEgcG93ZXJmdWwgc3RpbXVsYW50IHRvIG9yYXRvcnksCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xNDMiIC8+CgphbmQgaXQgbWF5IGJlIHJlZ2FyZGVkIGFzIGEgbWF0dGVyIGZvciB3b25kZXIgdGhhdCwKd2hlcmVhcyB3aGVuIHdyaXRpbmcgd2UgZGVsaWdodCBpbiBwcml2YWN5IGFuZApzaHJpbmsgZnJvbSB0aGUgcHJlc2VuY2Ugb2Ygd2l0bmVzc2VzLCBpbiBleHRlbXBvcmUKcGxlYWRpbmcgYSBsYXJnZSBhdWRpZW5jZSBoYXMgYW4gZW5jb3VyYWdpbmcgZWZmZWN0LApsaWtlIHRoYXQgd2hpY2ggdGhlIHNpZ2h0IG9mIHRoZSBtYXNzZWQgc3RhbmRhcmRzCmhhcyBvbiB0aGUgc29sZGllci48L3RyYW5zbGF0aW9uPg=="
translation['10.7.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZSBzaGVlciBuZWNlc3NpdHkgb2Ygc3BlYWtpbmcgdGhydXN0cyBmb3J3YXJkIGFuZCBmb3JjZXMgb3V0IG91ciBsYWJvdXJpbmcKdGhvdWdodCwgYW5kIHRoZSBkZXNpcmUgdG8gd2luIGFwcHJvYmF0aW9uIGtpbmRsZXMKYW5kIGZvc3RlcnMgb3VyIGVmZm9ydHMuIFNvIHRydWUgaXMgaXQgdGhhdCB0aGVyZSBpcwpub3RoaW5nIHdoaWNoIGRvZXMgbm90IGxvb2sgZm9yIHNvbWUgcmV3YXJkLCB0aGF0CmVsb3F1ZW5jZSwgZGVzcGl0ZSB0aGUgZmFjdCB0aGF0IGl0cyBhY3Rpdml0eSBpcyBpbiBpdHNlbGYKcHJvZHVjdGl2ZSBvZiBhIHN0cm9uZyBmZWVsaW5nIG9mIHBsZWFzdXJlLCBpcyBpbmZsdWVuY2VkCmJ5IG5vdGhpbmcgc28gbXVjaCBhcyB0aGUgaW1tZWRpYXRlIGFjcXVpc2l0aW9uIG9mCnByYWlzZSBhbmQgcmVub3duLjwvdHJhbnNsYXRpb24+"
translation['10.7.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz4gTm9yIHNob3VsZCBhbnkgbWFuIHB1dCBzdWNoCnRydXN0IGluIGhpcyBuYXRpdmUgYWJpbGl0eSBhcyB0byBob3BlIHRoYXQgdGhpcyBwb3dlcgp3aWxsIHByZXNlbnQgaXRzZWxmIHRvIGhpbSBhdCB0aGUgb3V0c2V0IG9mIGhpcyBjYXJlZXIKYXMgYW4gb3JhdG9yOyBmb3IgdGhlIHByZWNlcHRzIHdoaWNoIEkgbGFpZCBkb3duIGZvcgpwcmVtZWRpdGF0aW9uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkNoLiB2aS4gMy48L25vdGU+IGFwcGx5IHRvIGltcHJvdmlzYXRpb24gYWxzbzsgd2UKbXVzdCBkZXZlbG9wIGl0IGJ5IGdyYWR1YWwgc3RhZ2VzIGZyb20gc21hbGwgYmVnaW5uaW5ncywgdW50aWwgd2UgaGF2ZSByZWFjaGVkIHRoYXQgcGVyZmVjdGlvbiB3aGljaApjYW4gb25seSBiZSBwcm9kdWNlZCBhbmQgbWFpbnRhaW5lZCBieSBwcmFjdGljZS48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5Nb3Jlb3ZlciwgdGhlIG9yYXRvciBzaG91bGQgcmVhY2ggc3VjaCBhIHBpdGNoIG9mCmV4Y2VsbGVuY2UgdGhhdCwgd2hpbGUgcHJlbWVkaXRhdGlvbiBtYXkgc3RpbGwgYmUgdGhlCnNhZmVyIG1ldGhvZCwgaXQgd2lsbCBub3QgbmVjZXNzYXJpbHkgYmUgdGhlIGJldHRlciwKc2luY2UgbWFueSBoYXZlIGFjcXVpcmVkIHRoZSBnaWZ0IG9mIGltcHJvdmlzYXRpb24gbm90Cm1lcmVseSBpbiBwcm9zZSwgYnV0IGluIHZlcnNlIGFzIHdlbGwsIGFzLCBmb3IgZXhhbXBsZSwKQW50aXBhdGVyIG9mIFNpZG9uIGFuZCBMaWNpbml1cyBBcmNoaWFzIChmb3Igd2hvc2UKcG93ZXJzIHdlIGhhdmUgdGhlIHVucXVlc3Rpb25hYmxlIGF1dGhvcml0eSBvZgpDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5EZSBPci48L2hpPiBpaWkuIDE5NDsgPGhpIHJlbmQ9Iml0YWxpY3MiPlBybyBBcmNoLjwvaGk+IHZpaWkuIDE4Ljwvbm90ZT4pLCBub3QgdG8gbWVudGlvbiB0aGUgZmFjdCB0aGF0IHRoZXJlIGFyZQptYW55LCBldmVuIGluIG91ciBvd24gZGF5LCB3aG8gaGF2ZSBkb25lIHRoaXMgYW5kCmFyZSBzdGlsbCBkb2luZyBpdC4gSSBkbyBub3QsIGhvd2V2ZXIsIHJlZ2FyZCB0aGlzCmFjY29tcGxpc2htZW50IGFzIGJlaW5nIHBhcnRpY3VsYXJseSB2YWx1YWJsZSBpbgppdHNlbGYsIGZvciBpdCBpcyBib3RoIHVucHJhY3RpY2FsIGFuZCB1bm5lY2Vzc2FyeSwgYnV0Cm1lbnRpb24gaXQgYXMgYSB1c2VmdWwgZXhhbXBsZSB0byBlbmNvdXJhZ2Ugc3R1ZGVudHMKCjxwYiBpZD0icC4xNDUiIC8+Cgp0cmFpbmluZyBmb3IgdGhlIGJhciwgaW4gdGhlIGhvcGUgdGhhdCB0aGV5IG1heSBiZQphYmxlIHRvIGFjcXVpcmUgdGhpcyBhY2NvbXBsaXNobWVudC48bWlsZXN0b25lIG49IjIwIiB1bml0PSJzZWN0aW9uIiAvPiBTdGlsbCBvdXIgY29uZmlkZW5jZSBpbiBvdXIgcG93ZXIgb2Ygc3BlYWtpbmcgZXh0ZW1wb3JlIHNob3VsZApuZXZlciBiZSBzbyBncmVhdCB0aGF0IHdlIHNob3VsZCBuZWdsZWN0IHRvIGRldm90ZQphIGZldyBtaW51dGVzIHRvIHRoZSBjb25zaWRlcmF0aW9uIG9mIHdoYXQgd2UgYXJlCmdvaW5nIHRvIHNheS4gVGhlcmUgd2lsbCBidXQgcmFyZWx5IGJlIG9jY2FzaW9ucwp3aGVuIHRoaXMgaXMgaW1wb3NzaWJsZSwgd2hpbGUgaW4gdGhlIGxhd3N1aXRzIG9mCnRoZSBjb3VydHMgdGhlcmUgaXMgYWx3YXlzIHNvbWUgdGltZSBhbGxvd2VkIGZvciB0aGUKcHVycG9zZS4gRm9yIG5vIG9uZSBjYW4gcGxlYWQgYSBjYXVzZSB3aXRoIHRoZQpmYWN0cyBvZiB3aGljaCBiZSBpcyB1bmFjcXVhaW50ZWQuPG1pbGVzdG9uZSBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gU29tZSBkZWNsYWltZXJzLAppdCBpcyB0cnVlLCBhcmUgbGVkIGJ5IGEgcGVydmVyc2UgYW1iaXRpb24gdG8gYXR0ZW1wdAp0byBzcGVhayB0aGUgbW9tZW50IHRoZWlyIHRoZW1lIGhhcyBiZWVuIGdpdmVuCnRoZW0sIGFuZCBldmVuIGFzayBmb3IgYSB3b3JkIHdpdGggd2hpY2ggdG8gc3RhcnQsCmFuIGFmZmVjdGF0aW9uIHdoaWNoIGlzIGluIHRoZSB3b3JzdCBhbmQgbW9zdAp0aGVhdHJpY2FsIHRhc3RlLiBCdXQgZWxvcXVlbmNlIGhhcywgaW4gaGVyIHR1cm4sCm5vdGhpbmcgYnV0IGRlcmlzaW9uIGZvciB0aG9zZSB0aGF0IGluc3VsdCBoZXIgdGh1cywKYW5kIHNwZWFrZXJzIHdobyB3aXNoIHRvIHNlZW0gbGVhcm5lZCB0byBmb29scyBhcmUKbWVyZWx5IHJlZ2FyZGVkIGFzIGZvb2xzIGJ5IHRoZSBsZWFybmVkLjxtaWxlc3RvbmUgbj0iMjIiIHVuaXQ9InNlY3Rpb24iIC8+IElmLCBob3dldmVyLCBjaGFuY2Ugc2hvdWxkIGltcG9zZSB0aGUgbmVjZXNzaXR5IHVwb24gdXMgb2YKcGxlYWRpbmcgYSBjYXNlIGF0IHN1Y2ggc2hvcnQgbm90aWNlLCB3ZSBzaGFsbCByZXF1aXJlCnRvIGRldmVsb3Agc3BlY2lhbCBtZW50YWwgYWdpbGl0eSwgdG8gZ2l2ZSBhbGwgb3VyCmF0dGVudGlvbiB0byB0aGUgc3ViamVjdCwgYW5kIHRvIG1ha2UgYSB0ZW1wb3JhcnkKc2FjcmlmaWNlIG9mIG91ciBjYXJlIGZvciB0aGUgbmljZXRpZXMgb2YgbGFuZ3VhZ2UsIGlmCndlIGZpbmQgaXQgaW1wb3NzaWJsZSB0byBzZWN1cmUgYm90aC4gT24gc3VjaApvY2Nhc2lvbnMgYSBzbG93ZXIgZGVsaXZlcnkgYW5kIGEgc3R5bGUgb2Ygc3BlYWtpbmcgc3VnZ2VzdGl2ZSBvZiBhIGNlcnRhaW4gaW5kZWNpc2lvbiBhbmQgZG91YnQgd2lsbApzZWN1cmUgdXMgdGltZSB0byB0aGluaywgYnV0IHdlIG11c3QgYmUgY2FyZWZ1bCB0bwpkbyB0aGlzIGluIHN1Y2ggYSB3YXkgYXMgdG8gZ2l2ZSB0aGUgaW1wcmVzc2lvbiBvZgp0aG91Z2h0LCBub3Qgb2YgaGVzaXRhdGlvbi48bWlsZXN0b25lIG49IjIzIiB1bml0PSJzZWN0aW9uIiAvPiBUaGlzIHByZWNhdXRpb24gbWF5IGJlCmVtcGxveWVkIHdoaWxlIHdlIGFyZSBjbGVhcmluZyBoYXJib3VyLCBpZiB0aGUgd2luZApkcml2ZSB1cyBmb3J3YXJkIGJlZm9yZSBhbGwgb3VyIHRhY2tsZSBpcyByZWFkeS4KQWZ0ZXJ3YXJkcywgYXMgd2UgcHJvY2VlZCB1cG9uIG91ciBjb3Vyc2UsIHdlIHNoYWxsCnRyaW0gb3VyIHNhaWxzLCBhcnJhbmdlIG91ciByb3BlcywgYW5kIHByYXkgdGhhdAp0aGUgYnJlZXplIG1heSBmaWxsIG91ciBzYWlscy4gU3VjaCBhIHByb2NlZHVyZSBpcwoKPHBiIGlkPSJwLjE0NyIgLz4KCnByZWZlcmFibGUgdG8geWllbGRpbmcgb3Vyc2VsdmVzIHRvIGFuIGVtcHR5IHRvcnJlbnQKb2Ygd29yZHMsIHRoYXQgdGhlIHN0b3JtIG1heSBzd2VlcCB1cyB3aGVyZSBpdCB3aWxsLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.7.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5Nb3Jlb3ZlciwgdGhlIG9yYXRvciBzaG91bGQgcmVhY2ggc3VjaCBhIHBpdGNoIG9mCmV4Y2VsbGVuY2UgdGhhdCwgd2hpbGUgcHJlbWVkaXRhdGlvbiBtYXkgc3RpbGwgYmUgdGhlCnNhZmVyIG1ldGhvZCwgaXQgd2lsbCBub3QgbmVjZXNzYXJpbHkgYmUgdGhlIGJldHRlciwKc2luY2UgbWFueSBoYXZlIGFjcXVpcmVkIHRoZSBnaWZ0IG9mIGltcHJvdmlzYXRpb24gbm90Cm1lcmVseSBpbiBwcm9zZSwgYnV0IGluIHZlcnNlIGFzIHdlbGwsIGFzLCBmb3IgZXhhbXBsZSwKQW50aXBhdGVyIG9mIFNpZG9uIGFuZCBMaWNpbml1cyBBcmNoaWFzIChmb3Igd2hvc2UKcG93ZXJzIHdlIGhhdmUgdGhlIHVucXVlc3Rpb25hYmxlIGF1dGhvcml0eSBvZgpDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGUgT3IuPC9oaT4gaWlpLiAxOTQ7IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlBybyBBcmNoLjwvaGk+IHZpaWkuIDE4Ljwvbm90ZT4pLCBub3QgdG8gbWVudGlvbiB0aGUgZmFjdCB0aGF0IHRoZXJlIGFyZQptYW55LCBldmVuIGluIG91ciBvd24gZGF5LCB3aG8gaGF2ZSBkb25lIHRoaXMgYW5kCmFyZSBzdGlsbCBkb2luZyBpdC4gSSBkbyBub3QsIGhvd2V2ZXIsIHJlZ2FyZCB0aGlzCmFjY29tcGxpc2htZW50IGFzIGJlaW5nIHBhcnRpY3VsYXJseSB2YWx1YWJsZSBpbgppdHNlbGYsIGZvciBpdCBpcyBib3RoIHVucHJhY3RpY2FsIGFuZCB1bm5lY2Vzc2FyeSwgYnV0Cm1lbnRpb24gaXQgYXMgYSB1c2VmdWwgZXhhbXBsZSB0byBlbmNvdXJhZ2Ugc3R1ZGVudHMKCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkRlIE9yLjwvaGk+IGlpaS4gMTk0OyA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Qcm8gQXJjaC48L2hpPiB2aWlpLiAxOC48cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xNDUiIC8+Cgp0cmFpbmluZyBmb3IgdGhlIGJhciwgaW4gdGhlIGhvcGUgdGhhdCB0aGV5IG1heSBiZQphYmxlIHRvIGFjcXVpcmUgdGhpcyBhY2NvbXBsaXNobWVudC48L3RyYW5zbGF0aW9uPg=="
translation['10.7.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz4gU3RpbGwgb3VyIGNvbmZpZGVuY2UgaW4gb3VyIHBvd2VyIG9mIHNwZWFraW5nIGV4dGVtcG9yZSBzaG91bGQKbmV2ZXIgYmUgc28gZ3JlYXQgdGhhdCB3ZSBzaG91bGQgbmVnbGVjdCB0byBkZXZvdGUKYSBmZXcgbWludXRlcyB0byB0aGUgY29uc2lkZXJhdGlvbiBvZiB3aGF0IHdlIGFyZQpnb2luZyB0byBzYXkuIFRoZXJlIHdpbGwgYnV0IHJhcmVseSBiZSBvY2Nhc2lvbnMKd2hlbiB0aGlzIGlzIGltcG9zc2libGUsIHdoaWxlIGluIHRoZSBsYXdzdWl0cyBvZgp0aGUgY291cnRzIHRoZXJlIGlzIGFsd2F5cyBzb21lIHRpbWUgYWxsb3dlZCBmb3IgdGhlCnB1cnBvc2UuIEZvciBubyBvbmUgY2FuIHBsZWFkIGEgY2F1c2Ugd2l0aCB0aGUKZmFjdHMgb2Ygd2hpY2ggYmUgaXMgdW5hY3F1YWludGVkLjwvdHJhbnNsYXRpb24+"
translation['10.7.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gU29tZSBkZWNsYWltZXJzLAppdCBpcyB0cnVlLCBhcmUgbGVkIGJ5IGEgcGVydmVyc2UgYW1iaXRpb24gdG8gYXR0ZW1wdAp0byBzcGVhayB0aGUgbW9tZW50IHRoZWlyIHRoZW1lIGhhcyBiZWVuIGdpdmVuCnRoZW0sIGFuZCBldmVuIGFzayBmb3IgYSB3b3JkIHdpdGggd2hpY2ggdG8gc3RhcnQsCmFuIGFmZmVjdGF0aW9uIHdoaWNoIGlzIGluIHRoZSB3b3JzdCBhbmQgbW9zdAp0aGVhdHJpY2FsIHRhc3RlLiBCdXQgZWxvcXVlbmNlIGhhcywgaW4gaGVyIHR1cm4sCm5vdGhpbmcgYnV0IGRlcmlzaW9uIGZvciB0aG9zZSB0aGF0IGluc3VsdCBoZXIgdGh1cywKYW5kIHNwZWFrZXJzIHdobyB3aXNoIHRvIHNlZW0gbGVhcm5lZCB0byBmb29scyBhcmUKbWVyZWx5IHJlZ2FyZGVkIGFzIGZvb2xzIGJ5IHRoZSBsZWFybmVkLjwvdHJhbnNsYXRpb24+"
translation['10.7.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gSWYsIGhvd2V2ZXIsIGNoYW5jZSBzaG91bGQgaW1wb3NlIHRoZSBuZWNlc3NpdHkgdXBvbiB1cyBvZgpwbGVhZGluZyBhIGNhc2UgYXQgc3VjaCBzaG9ydCBub3RpY2UsIHdlIHNoYWxsIHJlcXVpcmUKdG8gZGV2ZWxvcCBzcGVjaWFsIG1lbnRhbCBhZ2lsaXR5LCB0byBnaXZlIGFsbCBvdXIKYXR0ZW50aW9uIHRvIHRoZSBzdWJqZWN0LCBhbmQgdG8gbWFrZSBhIHRlbXBvcmFyeQpzYWNyaWZpY2Ugb2Ygb3VyIGNhcmUgZm9yIHRoZSBuaWNldGllcyBvZiBsYW5ndWFnZSwgaWYKd2UgZmluZCBpdCBpbXBvc3NpYmxlIHRvIHNlY3VyZSBib3RoLiBPbiBzdWNoCm9jY2FzaW9ucyBhIHNsb3dlciBkZWxpdmVyeSBhbmQgYSBzdHlsZSBvZiBzcGVha2luZyBzdWdnZXN0aXZlIG9mIGEgY2VydGFpbiBpbmRlY2lzaW9uIGFuZCBkb3VidCB3aWxsCnNlY3VyZSB1cyB0aW1lIHRvIHRoaW5rLCBidXQgd2UgbXVzdCBiZSBjYXJlZnVsIHRvCmRvIHRoaXMgaW4gc3VjaCBhIHdheSBhcyB0byBnaXZlIHRoZSBpbXByZXNzaW9uIG9mCnRob3VnaHQsIG5vdCBvZiBoZXNpdGF0aW9uLjwvdHJhbnNsYXRpb24+"
translation['10.7.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz4gVGhpcyBwcmVjYXV0aW9uIG1heSBiZQplbXBsb3llZCB3aGlsZSB3ZSBhcmUgY2xlYXJpbmcgaGFyYm91ciwgaWYgdGhlIHdpbmQKZHJpdmUgdXMgZm9yd2FyZCBiZWZvcmUgYWxsIG91ciB0YWNrbGUgaXMgcmVhZHkuCkFmdGVyd2FyZHMsIGFzIHdlIHByb2NlZWQgdXBvbiBvdXIgY291cnNlLCB3ZSBzaGFsbAp0cmltIG91ciBzYWlscywgYXJyYW5nZSBvdXIgcm9wZXMsIGFuZCBwcmF5IHRoYXQKdGhlIGJyZWV6ZSBtYXkgZmlsbCBvdXIgc2FpbHMuIFN1Y2ggYSBwcm9jZWR1cmUgaXMKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjE0NyIgLz4KCnByZWZlcmFibGUgdG8geWllbGRpbmcgb3Vyc2VsdmVzIHRvIGFuIGVtcHR5IHRvcnJlbnQKb2Ygd29yZHMsIHRoYXQgdGhlIHN0b3JtIG1heSBzd2VlcCB1cyB3aGVyZSBpdCB3aWxsLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI0IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpdCByZXF1aXJlcyBubyBsZXNzIGNhcmVmdWwgc3R1ZHkgdG8gbWFpbnRhaW4KdGhhbiB0byBhY3F1aXJlIHRoaXMgZmFjaWxpdHkuIFRoZW9yeSBvbmNlIG1hc3RlcmVkCmlzIG5vdCBmb3Jnb3R0ZW4sIGFuZCB0aGUgcGVuIGxvc2VzIGJ1dCBsaXR0bGUgb2YgaXRzCnNwZWVkIGJ5IGRpc3VzZTogYnV0IHRoaXMgcHJvbXB0aXR1ZGUgYW5kIHJlYWRpbmVzcwpmb3IgYWN0aW9uIGNhbiBiZSBtYWludGFpbmVkIGJ5IHByYWN0aWNlIG9ubHkuIFRoZQpiZXN0IGZvcm0gb2YgZXhlcmNpc2UgaXMgdG8gc3BlYWsgZGFpbHkgYmVmb3JlIGFuCmF1ZGllbmNlIG9mIHNldmVyYWwgcGVyc29ucywgd2hvIHNob3VsZCwgYXMgZmFyIGFzCnBvc3NpYmxlLCBiZSBzZWxlY3RlZCBmcm9tIHRob3NlIHdob3NlIGp1ZGdlbWVudAphbmQgZ29vZCBvcGluaW9uIHdlIHZhbHVlLCBzaW5jZSBpdCBpcyByYXJlIGZvciBhbnlvbmUgdG8gYmUgc3VmZmljaWVudGx5IGNyaXRpY2FsIG9mIGhpbXNlbGYuIEl0IGlzIGV2ZW4KYmV0dGVyIHRvIHNwZWFrIGFsb25lIHRoYW4gbm90IGF0IGFsbC48bWlsZXN0b25lIG49IjI1IiB1bml0PSJzZWN0aW9uIiAvPiBUaGVyZSBpcyB5ZXQKYW5vdGhlciBtZXRob2Qgb2YgZXhlcmNpc2luZyB0aGlzIGZhY3VsdHk6IGl0IGNvbnNpc3RzCmluIGdvaW5nIG92ZXIgb3VyIHN1YmplY3RzIGluIHRoZWlyIGVudGlyZXR5IGluIHNpbGVudAp0aG91Z2h0LCBhbHRob3VnaCB3ZSBtdXN0IGFsbCB0aGUgdGltZSBmb3JtdWxhdGUKdGhlIHdvcmRzIHRvIG91cnNlbHZlczogc3VjaCBwcmFjdGljZSBpcyBwb3NzaWJsZSBhdAphbnkgbW9tZW50IG9yIHBsYWNlIHRoYXQgZmluZHMgdXMgdW5vY2N1cGllZCwgYW5kCmlzLCBpbiBzb21lIHJlc3BlY3RzLCBtb3JlIHVzZWZ1bCB0aGFuIHRoYXQgd2hpY2ggSQpoYXZlIGp1c3QgbWVudGlvbmVkOzxtaWxlc3RvbmUgbj0iMjYiIHVuaXQ9InNlY3Rpb24iIC8+IGZvciB3ZSBhcmUgbW9yZSBjYXJlZnVsIGFib3V0Cm91ciBjb21wb3NpdGlvbiB0aGFuIHdoZW4gd2UgYXJlIGFjdHVhbGx5IHNwZWFraW5nCmFuZCBpbiBtb21lbnRhcnkgZmVhciBvZiBpbnRlcnJ1cHRpbmcgdGhlIGNvbnRpbnVvdXMKZmxvdyBvZiBvdXIgbGFuZ3VhZ2UuIE9uIHRoZSBvdGhlciBoYW5kLCB0aGUgZmlyc3QKbWV0aG9kIGlzIG1vcmUgdmFsdWFibGUgZm9yIGNlcnRhaW4gcHVycG9zZXMsIGFzIGl0CmdpdmVzIHN0cmVuZ3RoIHRvIG91ciB2b2ljZSwgZmx1ZW5jeSB0byBvdXIgdG9uZ3VlCmFuZCB2aWdvdXIgdG8gb3VyIGdlc3R1cmU7IGFuZCB0aGUgbGF0dGVyLCBhcyBJIGhhdmUKYWxyZWFkeSByZW1hcmtlZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkNoLiBpaWkuIDIxLjwvbm90ZT4gaW4gaXRzZWxmIGV4Y2l0ZXMgdGhlIG9yYXRvciBhbmQKc3B1cnMgaGltIG9uLCBhcyBoZSB3YXZlcyBoaXMgaGFuZCBvciBzdGFtcHMgaGlzCmZvb3Q6IGhlIGlzLCBpbiBmYWN0LCBsaWtlIHRoZSBsaW9uLCB0aGF0IGlzIHNhaWQgdG8gbGFzaApoaW1zZWxmIHRvIGZ1cnkgd2l0aCBoaXMgdGFpbC4gQnV0IHdlIG11c3Qgc3R1ZHkKYWx3YXlzIGFuZCBldmVyeXdoZXJlLjxtaWxlc3RvbmUgbj0iMjciIHVuaXQ9InNlY3Rpb24iIC8+IEZvciB0aGVyZSBpcyBzY2FyY2UgYSBzaW5nbGUKZGF5IGluIG91ciBsaXZlcyB0aGF0IGlzIHNvIGZ1bGwgb2Ygb2NjdXBhdGlvbnMgdGhhdCB3ZQptYXkgbm90LCBhdCBzb21lIG1vbWVudCBvciBvdGhlciwgc25hdGNoIGEgZmV3CnByZWNpb3VzIG1pbnV0ZXMsIGFzIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPk9yLjwvaGk+IDM0Ljwvbm90ZT4gcmVjb3JkcyB0aGF0IEJydXR1cyB3YXMKCjxwYiBpZD0icC4xNDkiIC8+Cgp3b250IHRvIGRvLCBlaXRoZXIgZm9yIHdyaXRpbmcgb3IgcmVhZGluZyBvciBzcGVha2luZzsKR2FpdXMgQ2FyYm8sPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5BIHN1cHBvcnRlciBvZiBUaWIuIEdyYWNjbGx1cywgd2hvIHdlbnQgb3ZlciB0byB0aGUKc2VuYXRvcmlhbCBwYXJ0eSBhbmQgd2FzIGNvbnN1bCAxMjAgQi5DLiBDb21taXR0ZWQgc3VpY2lkZQppbiB0aGUgZm9sbG93aW5nIHllYXIuIENpY2VybyBwcmFpc2VzIGhpcyBlbG9xdWVuY2UgYW5kCmluZHVzdHJ5OyBwLiA8aGkgcmVuZD0iaXRhbGljcyI+QnJ1dC48L2hpPiAxMDPigJM1LDxoaSByZW5kPSJpdGFsaWNzIj5kZSBPci48L2hpPiBJLiDCpyAxNTQuPC9ub3RlPiBmb3IgZXhhbXBsZSwgd2FzIGluIHRoZSBoYWJpdCBvZiBpbmR1bGdpbmcgaW4gc3VjaCBleGVyY2lzZXMgZXZlbiBpbiBoaXMgdGVudC48bWlsZXN0b25lIG49IjI4IiB1bml0PSJzZWN0aW9uIiAvPiBJIG11c3QgYWxzbwptZW50aW9uIHRoZSBwcmVjZXB0ICh3aGljaCBhZ2FpbiBoYXMgdGhlIGFwcHJvdmFsCm9mIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlcmUgaXMgbm8gdHJhY2Ugb2YgdGhpcy48L25vdGU+KSB0aGF0IHdlIHNob3VsZCBuZXZlciBiZSBjYXJlbGVzcyBhYm91dApvdXIgbGFuZ3VhZ2UuIFdoYXRldmVyIHdlIHNheSwgdW5kZXIgd2hhdGV2ZXIKY2lyY3Vtc3RhbmNlcywgc2hvdWxkIGJlIHBlcmZlY3QgaW4gaXRzIHdheS4gQXMgcmVnYXJkcyB3cml0aW5nLCB0aGlzIGlzIGNlcnRhaW5seSBuZXZlciBtb3JlIG5lY2Vzc2FyeQp0aGFuIHdoZW4gd2UgaGF2ZSBmcmVxdWVudGx5IHRvIHNwZWFrIGV4dGVtcG9yZS4KRm9yIGl0IG1haW50YWlucyB0aGUgc29saWRpdHkgb2Ygb3VyIHNwZWVjaCBhbmQgZ2l2ZXMKZGVwdGggdG8gc3VwZXJmaWNpYWwgZmFjaWxpdHkuIFdlIG1heSBjb21wYXJlIHRoZQpwcmFjdGljZSBvZiBodXNiYW5kbWVuIHdobyBjdXQgYXdheSB0aGUgdXBwZXJtb3N0CnJvb3RzIG9mIHRoZWlyIHZpbmVzLCB3aGljaCBydW4gY2xvc2UgdG8gdGhlIHN1cmZhY2Ugb2YKdGhlIHNvaWwsIHRoYXQgdGhlIHRhcHJvb3RzIG1heSBzdHJpa2UgZGVlcGVyIGFuZCBnYWluCmluIHN0cmVuZ3RoLjxtaWxlc3RvbmUgbj0iMjkiIHVuaXQ9InNlY3Rpb24iIC8+IEluZGVlZCBJIGFtIG5vdCBzdXJlIHRoYXQsIGlmIHdlIHByYWN0aXNlIGJvdGggd2l0aCBjYXJlIGFuZCBhc3NpZHVpdHksIG11dHVhbCBwcm9maXQgd2lsbApub3QgcmVzdWx0LCBhbmQgd3JpdGluZyB3aWxsIGdpdmUgdXMgZ3JlYXRlciBwcmVjaXNpb24Kb2Ygc3BlZWNoLCB3aGlsZSBzcGVha2luZyB3aWxsIG1ha2UgdXMgd3JpdGUgd2l0aApncmVhdGVyIGZhY2lsaXR5LiBXZSBtdXN0IHdyaXRlLCB0aGVyZWZvcmUsIHdoZW5ldmVyIHBvc3NpYmxlOyBpZiB3ZSBjYW5ub3Qgd3JpdGUsIHdlIG11c3QgbWVkaXRhdGU6CmlmIGJvdGggYXJlIG91dCBvZiB0aGUgcXVlc3Rpb24sIHdlIG11c3Qgc3RpbGwgc3BlYWsgaW4Kc3VjaCBhIG1hbm5lciB0aGF0IHdlIHNoYWxsIG5vdCBzZWVtIHRvIGJlIHRha2VuCnVuYXdhcmVzIG5vciBvdXIgY2xpZW50IHRvIGJlIGxlZnQgaW4gdGhlIGx1cmNoLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['10.7.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaXQgcmVxdWlyZXMgbm8gbGVzcyBjYXJlZnVsIHN0dWR5IHRvIG1haW50YWluCnRoYW4gdG8gYWNxdWlyZSB0aGlzIGZhY2lsaXR5LiBUaGVvcnkgb25jZSBtYXN0ZXJlZAppcyBub3QgZm9yZ290dGVuLCBhbmQgdGhlIHBlbiBsb3NlcyBidXQgbGl0dGxlIG9mIGl0cwpzcGVlZCBieSBkaXN1c2U6IGJ1dCB0aGlzIHByb21wdGl0dWRlIGFuZCByZWFkaW5lc3MKZm9yIGFjdGlvbiBjYW4gYmUgbWFpbnRhaW5lZCBieSBwcmFjdGljZSBvbmx5LiBUaGUKYmVzdCBmb3JtIG9mIGV4ZXJjaXNlIGlzIHRvIHNwZWFrIGRhaWx5IGJlZm9yZSBhbgphdWRpZW5jZSBvZiBzZXZlcmFsIHBlcnNvbnMsIHdobyBzaG91bGQsIGFzIGZhciBhcwpwb3NzaWJsZSwgYmUgc2VsZWN0ZWQgZnJvbSB0aG9zZSB3aG9zZSBqdWRnZW1lbnQKYW5kIGdvb2Qgb3BpbmlvbiB3ZSB2YWx1ZSwgc2luY2UgaXQgaXMgcmFyZSBmb3IgYW55b25lIHRvIGJlIHN1ZmZpY2llbnRseSBjcml0aWNhbCBvZiBoaW1zZWxmLiBJdCBpcyBldmVuCmJldHRlciB0byBzcGVhayBhbG9uZSB0aGFuIG5vdCBhdCBhbGwuPC90cmFuc2xhdGlvbj4="
translation['10.7.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmUgaXMgeWV0CmFub3RoZXIgbWV0aG9kIG9mIGV4ZXJjaXNpbmcgdGhpcyBmYWN1bHR5OiBpdCBjb25zaXN0cwppbiBnb2luZyBvdmVyIG91ciBzdWJqZWN0cyBpbiB0aGVpciBlbnRpcmV0eSBpbiBzaWxlbnQKdGhvdWdodCwgYWx0aG91Z2ggd2UgbXVzdCBhbGwgdGhlIHRpbWUgZm9ybXVsYXRlCnRoZSB3b3JkcyB0byBvdXJzZWx2ZXM6IHN1Y2ggcHJhY3RpY2UgaXMgcG9zc2libGUgYXQKYW55IG1vbWVudCBvciBwbGFjZSB0aGF0IGZpbmRzIHVzIHVub2NjdXBpZWQsIGFuZAppcywgaW4gc29tZSByZXNwZWN0cywgbW9yZSB1c2VmdWwgdGhhbiB0aGF0IHdoaWNoIEkKaGF2ZSBqdXN0IG1lbnRpb25lZDs8L3RyYW5zbGF0aW9uPg=="
translation['10.7.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz4gZm9yIHdlIGFyZSBtb3JlIGNhcmVmdWwgYWJvdXQKb3VyIGNvbXBvc2l0aW9uIHRoYW4gd2hlbiB3ZSBhcmUgYWN0dWFsbHkgc3BlYWtpbmcKYW5kIGluIG1vbWVudGFyeSBmZWFyIG9mIGludGVycnVwdGluZyB0aGUgY29udGludW91cwpmbG93IG9mIG91ciBsYW5ndWFnZS4gT24gdGhlIG90aGVyIGhhbmQsIHRoZSBmaXJzdAptZXRob2QgaXMgbW9yZSB2YWx1YWJsZSBmb3IgY2VydGFpbiBwdXJwb3NlcywgYXMgaXQKZ2l2ZXMgc3RyZW5ndGggdG8gb3VyIHZvaWNlLCBmbHVlbmN5IHRvIG91ciB0b25ndWUKYW5kIHZpZ291ciB0byBvdXIgZ2VzdHVyZTsgYW5kIHRoZSBsYXR0ZXIsIGFzIEkgaGF2ZQphbHJlYWR5IHJlbWFya2VkLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5DaC4gaWlpLiAyMS48L25vdGU+IGluIGl0c2VsZiBleGNpdGVzIHRoZSBvcmF0b3IgYW5kCnNwdXJzIGhpbSBvbiwgYXMgaGUgd2F2ZXMgaGlzIGhhbmQgb3Igc3RhbXBzIGhpcwpmb290OiBoZSBpcywgaW4gZmFjdCwgbGlrZSB0aGUgbGlvbiwgdGhhdCBpcyBzYWlkIHRvIGxhc2gKaGltc2VsZiB0byBmdXJ5IHdpdGggaGlzIHRhaWwuIEJ1dCB3ZSBtdXN0IHN0dWR5CmFsd2F5cyBhbmQgZXZlcnl3aGVyZS48L3RyYW5zbGF0aW9uPg=="
translation['10.7.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZXJlIGlzIHNjYXJjZSBhIHNpbmdsZQpkYXkgaW4gb3VyIGxpdmVzIHRoYXQgaXMgc28gZnVsbCBvZiBvY2N1cGF0aW9ucyB0aGF0IHdlCm1heSBub3QsIGF0IHNvbWUgbW9tZW50IG9yIG90aGVyLCBzbmF0Y2ggYSBmZXcKcHJlY2lvdXMgbWludXRlcywgYXMgQ2ljZXJvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPk9yLjwvaGk+IDM0Ljwvbm90ZT4gcmVjb3JkcyB0aGF0IEJydXR1cyB3YXMKCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPk9yLjwvaGk+IDM0LjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjE0OSIgLz4KCndvbnQgdG8gZG8sIGVpdGhlciBmb3Igd3JpdGluZyBvciByZWFkaW5nIG9yIHNwZWFraW5nOwpHYWl1cyBDYXJibyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+QSBzdXBwb3J0ZXIgb2YgVGliLiBHcmFjY2xsdXMsIHdobyB3ZW50IG92ZXIgdG8gdGhlCnNlbmF0b3JpYWwgcGFydHkgYW5kIHdhcyBjb25zdWwgMTIwIEIuQy4gQ29tbWl0dGVkIHN1aWNpZGUKaW4gdGhlIGZvbGxvd2luZyB5ZWFyLiBDaWNlcm8gcHJhaXNlcyBoaXMgZWxvcXVlbmNlIGFuZAppbmR1c3RyeTsgcC4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QnJ1dC48L2hpPiAxMDPigJM1LDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIE9yLjwvaGk+IEkuIMKnIDE1NC48L25vdGU+IGZvciBleGFtcGxlLCB3YXMgaW4gdGhlIGhhYml0IG9mIGluZHVsZ2luZyBpbiBzdWNoIGV4ZXJjaXNlcyBldmVuIGluIGhpcyB0ZW50LjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkJydXQuPC9oaT4gMTAz4oCTNSw8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5kZSBPci48L2hpPiBJLiDCpyAxNTQuPC90cmFuc2xhdGlvbj4="
translation['10.7.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz4gSSBtdXN0IGFsc28KbWVudGlvbiB0aGUgcHJlY2VwdCAod2hpY2ggYWdhaW4gaGFzIHRoZSBhcHByb3ZhbApvZiBDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlcmUgaXMgbm8gdHJhY2Ugb2YgdGhpcy48L25vdGU+KSB0aGF0IHdlIHNob3VsZCBuZXZlciBiZSBjYXJlbGVzcyBhYm91dApvdXIgbGFuZ3VhZ2UuIFdoYXRldmVyIHdlIHNheSwgdW5kZXIgd2hhdGV2ZXIKY2lyY3Vtc3RhbmNlcywgc2hvdWxkIGJlIHBlcmZlY3QgaW4gaXRzIHdheS4gQXMgcmVnYXJkcyB3cml0aW5nLCB0aGlzIGlzIGNlcnRhaW5seSBuZXZlciBtb3JlIG5lY2Vzc2FyeQp0aGFuIHdoZW4gd2UgaGF2ZSBmcmVxdWVudGx5IHRvIHNwZWFrIGV4dGVtcG9yZS4KRm9yIGl0IG1haW50YWlucyB0aGUgc29saWRpdHkgb2Ygb3VyIHNwZWVjaCBhbmQgZ2l2ZXMKZGVwdGggdG8gc3VwZXJmaWNpYWwgZmFjaWxpdHkuIFdlIG1heSBjb21wYXJlIHRoZQpwcmFjdGljZSBvZiBodXNiYW5kbWVuIHdobyBjdXQgYXdheSB0aGUgdXBwZXJtb3N0CnJvb3RzIG9mIHRoZWlyIHZpbmVzLCB3aGljaCBydW4gY2xvc2UgdG8gdGhlIHN1cmZhY2Ugb2YKdGhlIHNvaWwsIHRoYXQgdGhlIHRhcHJvb3RzIG1heSBzdHJpa2UgZGVlcGVyIGFuZCBnYWluCmluIHN0cmVuZ3RoLjwvdHJhbnNsYXRpb24+"
translation['10.7.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz4gSW5kZWVkIEkgYW0gbm90IHN1cmUgdGhhdCwgaWYgd2UgcHJhY3Rpc2UgYm90aCB3aXRoIGNhcmUgYW5kIGFzc2lkdWl0eSwgbXV0dWFsIHByb2ZpdCB3aWxsCm5vdCByZXN1bHQsIGFuZCB3cml0aW5nIHdpbGwgZ2l2ZSB1cyBncmVhdGVyIHByZWNpc2lvbgpvZiBzcGVlY2gsIHdoaWxlIHNwZWFraW5nIHdpbGwgbWFrZSB1cyB3cml0ZSB3aXRoCmdyZWF0ZXIgZmFjaWxpdHkuIFdlIG11c3Qgd3JpdGUsIHRoZXJlZm9yZSwgd2hlbmV2ZXIgcG9zc2libGU7IGlmIHdlIGNhbm5vdCB3cml0ZSwgd2UgbXVzdCBtZWRpdGF0ZToKaWYgYm90aCBhcmUgb3V0IG9mIHRoZSBxdWVzdGlvbiwgd2UgbXVzdCBzdGlsbCBzcGVhayBpbgpzdWNoIGEgbWFubmVyIHRoYXQgd2Ugc2hhbGwgbm90IHNlZW0gdG8gYmUgdGFrZW4KdW5hd2FyZXMgbm9yIG91ciBjbGllbnQgdG8gYmUgbGVmdCBpbiB0aGUgbHVyY2guPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzAiIHVuaXQ9InNlY3Rpb24iIC8+SXQgaXMsIGhvd2V2ZXIsIGEgY29tbW9uIHByYWN0aWNlIHdpdGggdGhvc2Ugd2hvCmhhdmUgbWFueSBjYXNlcyB0byBwbGVhZCB0byB3cml0ZSBvdXQgdGhlIG1vc3QKbmVjZXNzYXJ5IHBvcnRpb25zLCBtb3JlIGVzcGVjaWFsbHkgdGhlIGJlZ2lubmluZ3Mgb2YKdGhlaXIgc3BlZWNoZXMsIHRvIGNvdmVyIHRoZSByZW1haW5kZXIgb2YgdGhhdCB3aGljaAp0aGV5IGFyZSBhYmxlIHRvIHByZXBhcmUgYnkgY2FyZWZ1bCBwcmVtZWRpdGF0aW9uCmFuZCB0byB0cnVzdCB0byBpbXByb3Zpc2F0aW9uIGluIGVtZXJnZW5jeSwgYSBwcmFjdGljZSByZWd1bGFybHkgYWRvcHRlZCBieSBDaWNlcm8sIGFzIGlzIGNsZWFyIGZyb20gaGlzCm5vdGUtYm9va3MuIEJ1dCB0aGUgbm90ZXMgb2Ygb3RoZXIgb3JhdG9ycyBhcmUgYWxzbwppbiBjaXJjdWxhdGlvbjsgc29tZSBoYXZlIGJlZW4gZGlzY292ZXJlZCBieQpjaGFuY2UsIGp1c3QgYXMgdGhleSB3ZXJlIGpvdHRlZCBkb3duIHByZXZpb3VzIHRvIGEKc3BlZWNoLCB3aGlsZSBvdGhlcnMgaGF2ZSBiZWVuIGVkaXRlZCBpbiBib29rIGZvcm0sCgo8cGIgaWQ9InAuMTUxIiAvPgoKYXMgaW4gdGhlIGNhc2Ugb2YgdGhlIHNwZWVjaGVzIGRlbGl2ZXJlZCBpbiB0aGUgY291cnRzCmJ5IFNlcnZpdXMgU3VscGljaXVzLCBvZiB3aG9zZSB3b3JrcyBvbmx5IHRocmVlCnNwZWVjaGVzIHN1cnZpdmUuIFRoZXNlIG1lbW9yYW5kYSwgaG93ZXZlciwgb2YKd2hpY2ggSSBhbSBzcGVha2luZyBhcmUgc28gY2FyZWZ1bGx5IGRyYXduIHVwIHRoYXQKdGhleSBzZWVtIHRvIG1lIHRvIGhhdmUgYmVlbiBjb21wb3NlZCBieSBoaW1zZWxmCmZvciB0aGUgYmVuZWZpdCBvZiBwb3N0ZXJpdHkuPG1pbGVzdG9uZSBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IENpY2VybydzIG5vdGVzIHdlcmUKb3JpZ2luYWxseSBpbnRlbmRlZCBtZXJlbHkgdG8gbWVldCB0aGUgcmVxdWlyZW1lbnRzCm9mIHRoZSBtb21lbnQsIGFuZCB3ZXJlIGFmdGVyd2FyZHMgY29sbGVjdGVkPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5PciBwZXJoYXBzIDxxdW90ZT5hYmJyZXZpYXRlZC48L3F1b3RlPiBUaXJvIHdhcyBDaWNlcm8ncyBmcmllbmQsCmZyZWVkbWFuIGFuZCBzZWNyZXRhcnkuPC9ub3RlPiBieQpUaXJvLiBJbiBtYWtpbmcgdGhpcyBhcG9sb2d5IEkgZG8gbm90IG1lYW4gdG8KaW1wbHkgdGhhdCBJIGRpc2FwcHJvdmUgb2YgdGhlbSwgYnV0IG1lcmVseSB3aXNoCnRvIG1ha2UgdGhlbSBtb3JlIHdvcnRoeSBvZiBhZG1pcmF0aW9uLiBBbmQgaW4KdGhpcyBjb25uZXhpb24gSSBtdXN0IHN0YXRlIHRoYXQgSSBhZG1pdCB0aGUgdXNlIG9mCmJyaWVmIG1lbW9yYW5kYSBhbmQgbm90ZS1ib29rcywgd2hpY2ggbWF5IGV2ZW4gYmUKaGVsZCBpbiB0aGUgaGFuZCBhbmQgcmVmZXJyZWQgdG8gZnJvbSB0aW1lIHRvIHRpbWUuCjxtaWxlc3RvbmUgbj0iMzIiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IEkgZGlzYXBwcm92ZSBvZiB0aGUgYWR2aWNlIGdpdmVuIGJ5IExhZW5hcywgdGhhdAp3ZSBzaG91bGQgc2V0IGRvd24gaW4gb3VyIG5vdGUtYm9va3MsIGR1bHkgdGFidWxhdGVkIHVuZGVyIHRoZSBhcHByb3ByaWF0ZSBoZWFkaW5ncywgc3VtbWFyaWVzIG9mCndoYXQgd2UgcHJvcG9zZSB0byBzYXksIGV2ZW4gaW4gY2FzZXMgd2hlcmUgd2UKaGF2ZSBhbHJlYWR5IHdyaXR0ZW4gaXQgb3V0IGluIGZ1bGwuIEZvciByZWxpYW5jZSBvbgpzdWNoIG5vdGVzIGFzIHRoZXNlIG1ha2VzIHVzIGNhcmVsZXNzIGluIGxlYXJuaW5nCndoYXQgd2UgaGF2ZSB3cml0dGVuIGFuZCBtdXRpbGF0ZXMgYW5kIGRlZm9ybXMgb3VyCnN0eWxlLiBGb3IgbXkgb3duIHBhcnQgSSB0aGluayB0aGF0IHdlIHNob3VsZApuZXZlciB3cml0ZSBvdXQgYW55dGhpbmcgd2hpY2ggd2UgZG8gbm90IGludGVuZCB0bwpjb21taXQgdG8gbWVtb3J5LiBGb3IgaWYgd2UgZG8sIG91ciB0aG91Z2h0cyB3aWxsCnJ1biBiYWNrIHRvIHdoYXQgd2UgaGF2ZSBlbGFib3JhdGVkIGluIHdyaXRpbmcgYW5kCndpbGwgbm90IHBlcm1pdCB1cyB0byB0cnkgdGhlIGZvcnR1bmUgb2YgdGhlIG1vbWVudC4KPG1pbGVzdG9uZSBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5Db25zZXF1ZW50bHksIHRoZSBtaW5kIHdpbGwgd2F2ZXIgaW4gZG91YnQgYmV0d2Vlbgp0aGUgdHdvIGFsdGVybmF0aXZlcywgaGF2aW5nIGZvcmdvdHRlbiB3aGF0IHdhcwpjb21taXR0ZWQgdG8gd3JpdGluZyBhbmQgYmVpbmcgdW5hYmxlIHRvIHRoaW5rIG9mCmFueXRoaW5nIGZyZXNoIHRvIHNheS4gSG93ZXZlciwgYXMgdGhlIHRvcGljIG9mCm1lbW9yeSB3aWxsIGJlIGRpc2N1c3NlZCBpbiB0aGUgbmV4dCBib29rLCBJIHdpbGwKbm90IGludHJvZHVjZSBpdCBoZXJlLCBhcyB0aGVyZSBhcmUgb3RoZXIgcG9pbnRzCndoaWNoIHJlcXVpcmUgdG8gYmUgZGVhbHQgd2l0aCBmaXJzdC48L3A+PC90cmFuc2xhdGlvbj4="
translation['10.7.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcywgaG93ZXZlciwgYSBjb21tb24gcHJhY3RpY2Ugd2l0aCB0aG9zZSB3aG8KaGF2ZSBtYW55IGNhc2VzIHRvIHBsZWFkIHRvIHdyaXRlIG91dCB0aGUgbW9zdApuZWNlc3NhcnkgcG9ydGlvbnMsIG1vcmUgZXNwZWNpYWxseSB0aGUgYmVnaW5uaW5ncyBvZgp0aGVpciBzcGVlY2hlcywgdG8gY292ZXIgdGhlIHJlbWFpbmRlciBvZiB0aGF0IHdoaWNoCnRoZXkgYXJlIGFibGUgdG8gcHJlcGFyZSBieSBjYXJlZnVsIHByZW1lZGl0YXRpb24KYW5kIHRvIHRydXN0IHRvIGltcHJvdmlzYXRpb24gaW4gZW1lcmdlbmN5LCBhIHByYWN0aWNlIHJlZ3VsYXJseSBhZG9wdGVkIGJ5IENpY2VybywgYXMgaXMgY2xlYXIgZnJvbSBoaXMKbm90ZS1ib29rcy4gQnV0IHRoZSBub3RlcyBvZiBvdGhlciBvcmF0b3JzIGFyZSBhbHNvCmluIGNpcmN1bGF0aW9uOyBzb21lIGhhdmUgYmVlbiBkaXNjb3ZlcmVkIGJ5CmNoYW5jZSwganVzdCBhcyB0aGV5IHdlcmUgam90dGVkIGRvd24gcHJldmlvdXMgdG8gYQpzcGVlY2gsIHdoaWxlIG90aGVycyBoYXZlIGJlZW4gZWRpdGVkIGluIGJvb2sgZm9ybSwKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjE1MSIgLz4KCmFzIGluIHRoZSBjYXNlIG9mIHRoZSBzcGVlY2hlcyBkZWxpdmVyZWQgaW4gdGhlIGNvdXJ0cwpieSBTZXJ2aXVzIFN1bHBpY2l1cywgb2Ygd2hvc2Ugd29ya3Mgb25seSB0aHJlZQpzcGVlY2hlcyBzdXJ2aXZlLiBUaGVzZSBtZW1vcmFuZGEsIGhvd2V2ZXIsIG9mCndoaWNoIEkgYW0gc3BlYWtpbmcgYXJlIHNvIGNhcmVmdWxseSBkcmF3biB1cCB0aGF0CnRoZXkgc2VlbSB0byBtZSB0byBoYXZlIGJlZW4gY29tcG9zZWQgYnkgaGltc2VsZgpmb3IgdGhlIGJlbmVmaXQgb2YgcG9zdGVyaXR5LjwvdHJhbnNsYXRpb24+"
translation['10.7.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IENpY2VybydzIG5vdGVzIHdlcmUKb3JpZ2luYWxseSBpbnRlbmRlZCBtZXJlbHkgdG8gbWVldCB0aGUgcmVxdWlyZW1lbnRzCm9mIHRoZSBtb21lbnQsIGFuZCB3ZXJlIGFmdGVyd2FyZHMgY29sbGVjdGVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPk9yIHBlcmhhcHMgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+YWJicmV2aWF0ZWQuPC9xdW90ZT4gVGlybyB3YXMgQ2ljZXJvJ3MgZnJpZW5kLApmcmVlZG1hbiBhbmQgc2VjcmV0YXJ5Ljwvbm90ZT4gYnkKVGlyby4gSW4gbWFraW5nIHRoaXMgYXBvbG9neSBJIGRvIG5vdCBtZWFuIHRvCmltcGx5IHRoYXQgSSBkaXNhcHByb3ZlIG9mIHRoZW0sIGJ1dCBtZXJlbHkgd2lzaAp0byBtYWtlIHRoZW0gbW9yZSB3b3J0aHkgb2YgYWRtaXJhdGlvbi4gQW5kIGluCnRoaXMgY29ubmV4aW9uIEkgbXVzdCBzdGF0ZSB0aGF0IEkgYWRtaXQgdGhlIHVzZSBvZgpicmllZiBtZW1vcmFuZGEgYW5kIG5vdGUtYm9va3MsIHdoaWNoIG1heSBldmVuIGJlCmhlbGQgaW4gdGhlIGhhbmQgYW5kIHJlZmVycmVkIHRvIGZyb20gdGltZSB0byB0aW1lLgo8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5hYmJyZXZpYXRlZC48L3F1b3RlPiBUaXJvIHdhcyBDaWNlcm8ncyBmcmllbmQsCmZyZWVkbWFuIGFuZCBzZWNyZXRhcnkuPC90cmFuc2xhdGlvbj4="
translation['10.7.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgSSBkaXNhcHByb3ZlIG9mIHRoZSBhZHZpY2UgZ2l2ZW4gYnkgTGFlbmFzLCB0aGF0CndlIHNob3VsZCBzZXQgZG93biBpbiBvdXIgbm90ZS1ib29rcywgZHVseSB0YWJ1bGF0ZWQgdW5kZXIgdGhlIGFwcHJvcHJpYXRlIGhlYWRpbmdzLCBzdW1tYXJpZXMgb2YKd2hhdCB3ZSBwcm9wb3NlIHRvIHNheSwgZXZlbiBpbiBjYXNlcyB3aGVyZSB3ZQpoYXZlIGFscmVhZHkgd3JpdHRlbiBpdCBvdXQgaW4gZnVsbC4gRm9yIHJlbGlhbmNlIG9uCnN1Y2ggbm90ZXMgYXMgdGhlc2UgbWFrZXMgdXMgY2FyZWxlc3MgaW4gbGVhcm5pbmcKd2hhdCB3ZSBoYXZlIHdyaXR0ZW4gYW5kIG11dGlsYXRlcyBhbmQgZGVmb3JtcyBvdXIKc3R5bGUuIEZvciBteSBvd24gcGFydCBJIHRoaW5rIHRoYXQgd2Ugc2hvdWxkCm5ldmVyIHdyaXRlIG91dCBhbnl0aGluZyB3aGljaCB3ZSBkbyBub3QgaW50ZW5kIHRvCmNvbW1pdCB0byBtZW1vcnkuIEZvciBpZiB3ZSBkbywgb3VyIHRob3VnaHRzIHdpbGwKcnVuIGJhY2sgdG8gd2hhdCB3ZSBoYXZlIGVsYWJvcmF0ZWQgaW4gd3JpdGluZyBhbmQKd2lsbCBub3QgcGVybWl0IHVzIHRvIHRyeSB0aGUgZm9ydHVuZSBvZiB0aGUgbW9tZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['10.7.33'] = ""
translation['11.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['11.1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIGFjcXVpcmluZyB0aGUgcG93ZXIgb2Ygd3JpdGluZyBhbmQgdGhpbmtpbmcsIGFzIGRlc2NyaWJlZCBpbiB0aGUgcHJlY2VkaW5nIGJvb2ssIGFuZCBhbHNvIG9mCnBsZWFkaW5nIGV4dGVtcG9yZSwgaWYgb2NjYXNpb24gZGVtYW5kLCBvdXIgbmV4dAp0YXNrIHdpbGwgYmUgdG8gZW5zdXJlIHRoYXQgYXBwcm9wcmlhdGVuZXNzIG9mIHNwZWVjaCwKd2hpY2ggQ2ljZXJvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkRlIE9yLjwvaGk+IElJSS4geC4gMzcuPC9ub3RlPiBzaG93cyB0byBiZSB0aGUgZm91cnRoIGRlcGFydG1lbnQgb2YKc3R5bGUsIGFuZCB3aGljaCBpcywgaW4gbXkgb3BpbmlvbiwgaGlnaGx5IG5lY2Vzc2FyeS4KPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGUgT3IuPC9oaT4gSUlJLiB4LiAzNy48L3RyYW5zbGF0aW9uPg=="
translation['11.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZvciBzaW5jZSB0aGUgb3JuYW1lbnRzIG9mIHN0eWxlIGFyZSB2YXJpZWQgYW5kCm1hbmlmb2xkIGFuZCBzdWl0ZWQgZm9yIGRpZmZlcmVudCBwdXJwb3NlcywgdGhleSB3aWxsLAp1bmxlc3MgYWRhcHRlZCB0byB0aGUgbWF0dGVyIGFuZCB0aGUgcGVyc29ucyBjb25jZXJuZWQsIG5vdCBtZXJlbHkgZmFpbCB0byBnaXZlIG91ciBzdHlsZSBkaXN0aW5jdGlvbiwKYnV0IHdpbGwgZXZlbiBkZXN0cm95IGl0cyBlZmZlY3QgYW5kIHByb2R1Y2UgYSByZXN1bHQKcXVpdGUgdGhlIHJldmVyc2Ugb2YgdGhhdCB3aGljaCBvdXIgbWF0dGVyIHNob3VsZApwcm9kdWNlLiBGb3Igd2hhdCBwcm9maXQgaXMgaXQgdGhhdCBvdXIgd29yZHMgc2hvdWxkCmJlIExhdGluLCBzaWduaWZpY2FudCBhbmQgZ3JhY2VmdWwsIGFuZCBiZSBmdXJ0aGVyCmVtYmVsbGlzaGVkIHdpdGggZWxhYm9yYXRlIGZpZ3VyZXMgYW5kIHJoeXRobXMsCnVubGVzcyBhbGwgdGhlc2UgcXVhbGl0aWVzIGFyZSBpbiBoYXJtb255IHdpdGggdGhlCnZpZXdzIHRvIHdoaWNoIHdlIHNlZWsgdG8gbGVhZCB0aGUganVkZ2UgYW5kIG1vdWxkCmhpcyBvcGluaW9ucz88L3RyYW5zbGF0aW9uPg=="
translation['11.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBXaGF0IHVzZSBpcyBpdCBpZiB3ZSBlbXBsb3kgYSBsb2Z0eQp0b25lIGluIGNhc2VzIG9mIHRyaXZpYWwgaW1wb3J0LCBhIHNsaWdodCBhbmQgcmVmaW5lZApzdHlsZSBpbiBjYXNlcyBvZiBncmVhdCBtb21lbnQsIGEgY2hlZXJmdWwgdG9uZSB3aGVuCm91ciBtYXR0ZXIgY2FsbHMgZm9yIHNhZG5lc3MsIGEgZ2VudGxlIHRvbmUgd2hlbiBpdApkZW1hbmRzIHZlaGVtZW5jZSwgdGhyZWF0ZW5pbmcgbGFuZ3VhZ2Ugd2hlbgpzdXBwbGljYXRpb24sIGFuZCBzdWJtaXNzaXZlIHdoZW4gZW5lcmd5IGlzIHJlcXVpcmVkLCBvciBmaWVyY2VuZXNzIGFuZCB2aW9sZW5jZSB3aGVuIG91ciB0aGVtZSBpcwpvbmUgdGhhdCBhc2tzIGZvciBjaGFybT8gU3VjaCBpbmNvbmdydWl0aWVzIGFyZSBhcwp1bmJlY29taW5nIGFzIGl0IGlzIGZvciBtZW4gdG8gd2VhciBuZWNrbGFjZXMgYW5kCnBlYXJscyBhbmQgZmxvd2luZyByYWltZW50IHdoaWNoIGFyZSB0aGUgbmF0dXJhbAphZG9ybm1lbnRzIG9mIHdvbWVuLCBvciBmb3Igd29tZW4gdG8gcm9iZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTU3IiAvPgoKdGhlbXNlbHZlcyBpbiB0aGUgZ2FyYiBvZiB0cml1bXBoLCB0aGFuIHdoaWNoIHRoZXJlIGNhbgpiZSBjb25jZWl2ZWQgbm8gbW9yZSBtYWplc3RpYyByYWltZW50LjwvdHJhbnNsYXRpb24+"
translation['11.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBUaGlzIHRvcGljCmlzIGRpc2N1c3NlZCBieSBDaWNlcm8gaW4gdGhlIHRoaXJkIGJvb2sgb2YgdGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlCk9yYXRvcmUsPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+SUlJLiBsdi4gMjEwLjwvbm90ZT4gYW5kLCBhbHRob3VnaCBoZSB0b3VjaGVzIG9uIGl0IGJ1dCBsaWdodGx5LApoZSByZWFsbHkgY292ZXJzIHRoZSB3aG9sZSBzdWJqZWN0IHdoZW4gaGUgc2F5cywKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T25lIHNpbmdsZSBzdHlsZSBvZiBvcmF0b3J5IGlzIG5vdCBzdWl0ZWQgdG8gZXZlcnkgY2FzZSwgbm9yCnRvIGV2ZXJ5IGF1ZGllbmNlLCBub3IgZXZlcnkgc3BlYWtlciwgbm9yIGV2ZXJ5IG9jY2FzaW9uLjwvaGk+CkFuZCBoZSBzYXlzIHRoZSBzYW1lIGF0IHNjYXJjZWx5IGdyZWF0ZXIgbGVuZ3RoIGluCnRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5PcmF0b3IuPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+Q2guIHh4aS4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PC9ub3RlPiBCdXQgaW4gdGhlIGZpcnN0IG9mIHRoZXNlIHdvcmtzIEx1Y2l1cwpDcmFzc3VzLCBzaW5jZSBoZSBpcyBzcGVha2luZyBpbiB0aGUgcHJlc2VuY2Ugb2YgbWVuCmRpc3Rpbmd1aXNoZWQgYWxpa2UgZm9yIHRoZWlyIGxlYXJuaW5nIGFuZCB0aGVpciBlbG9xdWVuY2UsIHRoaW5rcyBpdCBzdWZmaWNpZW50IG1lcmVseSB0byBpbmRpY2F0ZSB0aGlzIHRvcGljCnRvIGhpcyBhdWRpZW5jZSBmb3IgdGhlaXIgcmVjb2duaXRpb247PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PC90cmFuc2xhdGlvbj4="
translation['11.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiB3aGlsZSBpbiB0aGUKbGF0dGVyIHdvcmsgQ2ljZXJvIGFzc2VydHMgdGhhdCwgYXMgdGhlc2UgZmFjdHMgYXJlCmZhbWlsaWFyIHRvIEJydXR1cywgdG8gd2hvbSB0aGF0IHRyZWF0aXNlIGlzIGFkZHJlc3NlZCwKdGhleSB3aWxsIGJlIGdpdmVuIGJyaWVmZXIgdHJlYXRtZW50LCBkZXNwaXRlIHRoZSBmYWN0CnRoYXQgdGhlIHN1YmplY3QgaXMgYSB3aWRlIG9uZSBhbmQgaXMgZGlzY3Vzc2VkIGF0CmdyZWF0ZXIgbGVuZ3RoIGJ5IHRoZSBwaGlsb3NvcGhlcnMuIDEsIG9uIHRoZSBvdGhlcgpoYW5kLCBoYXZlIHVuZGVydGFrZW4gdGhlIGVkdWNhdGlvbiBvZiBhbiBvcmF0b3IsCmFuZCwgY29uc2VxdWVudGx5LCBhbSBzcGVha2luZyBub3QgbWVyZWx5IHRvIHRob3NlCnRoYXQga25vdywgYnV0IGFsc28gdG8gbGVhcm5lcnM7IEkgc2hhbGwsIHRoZXJlZm9yZSwKaGF2ZSBzb21lIGNsYWltIHRvIGZvcmdpdmVuZXNzIGlmIEkgZGlzY3VzcyB0aGUgdG9waWMKaW4gZ3JlYXRlciBkZXRhaWwuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhpcyByZWFzb24sIGl0IGlzIG9mIHRoZSBmaXJzdCBpbXBvcnRhbmNlIHRoYXQKd2Ugc2hvdWxkIGtub3cgd2hhdCBzdHlsZSBpcyBtb3N0IHN1aXRhYmxlIGZvciBjb25jaWxpYXRpbmcsIGluc3RydWN0aW5nIG9yIG1vdmluZyB0aGUganVkZ2UsIGFuZCB3aGF0CmVmZmVjdHMgd2Ugc2hvdWxkIGFpbSBhdCBpbiBkaWZmZXJlbnQgcGFydHMgb2Ygb3VyCnNwZWVjaC4gVGh1cyB3ZSBzaGFsbCBlc2NoZXcgYW50aXF1ZSwgbWV0YXBob3JpY2FsIGFuZCBuZXdseS1jb2luZWQgd29yZHMgaW4gb3VyIDxoaSByZW5kPSJpdGFsaWNzIj5leG9yZGl1bSwgc3RhdGVtZW50IG9mIGZhY3RzPC9oaT4gYW5kIDxoaSByZW5kPSJpdGFsaWNzIj5hcmd1bWVudHMsPC9oaT4gYXMgd2Ugc2hhbGwgYXZvaWQgZmxvd2luZwpwZXJpb2RzIHdvdmVuIHdpdGggZWxhYm9yYXRlIGdyYWNlLCB3aGVuIHRoZSBjYXNlCmhhcyB0byBiZSBkaXZpZGVkIGFuZCBkaXN0aW5ndWlzaGVkIHVuZGVyIGl0cyB2YXJpb3VzCmhlYWRzLCB3aGlsZSwgb24gdGhlIG90aGVyIGhhbmQsIHdlIHNoYWxsIG5vdCBlbXBsb3kKbWVhbiBvciBjb2xsb3F1aWFsIGxhbmd1YWdlLCBkZXZvaWQgb2YgYWxsIGFydGlzdGljCgo8cGIgaWQ9InAuMTU5IiAvPgoKc3RydWN0dXJlLCBpbiB0aGUgPGhpIHJlbmQ9Iml0YWxpY3MiPnBlcm9yYXRpb24sPC9oaT4gbm9yLCB3aGVuIHRoZSB0aGVtZSBjYWxscwpmb3IgY29tcGFzc2lvbiwgYXR0ZW1wdCB0byBkcnkgdGhlIHRlYXJzIG9mIG91ciBhdWRpZW5jZSB3aXRoIGplc3RzLjxtaWxlc3RvbmUgbj0iNyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGFsbCBvcm5hbWVudCBkZXJpdmVzIGl0cyBlZmZlY3QKbm90IGZyb20gaXRzIG93biBxdWFsaXRpZXMgc28gbXVjaCBhcyBmcm9tIHRoZQpjaXJjdW1zdGFuY2VzIGluIHdoaWNoIGl0IGlzIGFwcGxpZWQsIGFuZCB0aGUgb2NjYXNpb24KY2hvc2VuIGZvciBzYXlpbmcgYW55dGhpbmcgaXMgYXQgbGVhc3QgYXMgaW1wb3J0YW50IGEKY29uc2lkZXJhdGlvbiBhcyB3aGF0IGlzIGFjdHVhbGx5IHNhaWQuIEJ1dCB0aGUgd2hvbGUKb2YgdGhpcyBxdWVzdGlvbiBvZiBhcHByb3ByaWF0ZSBsYW5ndWFnZSB0dXJucyBvbgpzb21ldGhpbmcgbW9yZSB0aGFuIG91ciBjaG9pY2Ugb2Ygc3R5bGUsIGZvciBpdCBoYXMKbXVjaCBpbiBjb21tb24gd2l0aCBpbnZlbnRpb24uIEZvciBpZiB3b3JkcyBjYW4KcHJvZHVjZSBzdWNoIGFuIGltcHJlc3Npb24sIGhvdyBtdWNoIGdyZWF0ZXIgbXVzdAp0aGF0IGJlIHdoaWNoIGlzIGNyZWF0ZWQgYnkgdGhlIGZhY3RzIHRoZW1zZWx2ZXMuCkJ1dCBJIGhhdmUgYWxyZWFkeSBsYWlkIGRvd24gcnVsZXMgZm9yIHRoZSB0cmVhdG1lbnQKb2YgdGhlIGxhdHRlciBpbiB2YXJpb3VzIHBvcnRpb25zIG9mIHRoaXMgd29yay48L3A+CjwvdHJhbnNsYXRpb24+"
translation['11.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGlzIHJlYXNvbiwgaXQgaXMgb2YgdGhlIGZpcnN0IGltcG9ydGFuY2UgdGhhdAp3ZSBzaG91bGQga25vdyB3aGF0IHN0eWxlIGlzIG1vc3Qgc3VpdGFibGUgZm9yIGNvbmNpbGlhdGluZywgaW5zdHJ1Y3Rpbmcgb3IgbW92aW5nIHRoZSBqdWRnZSwgYW5kIHdoYXQKZWZmZWN0cyB3ZSBzaG91bGQgYWltIGF0IGluIGRpZmZlcmVudCBwYXJ0cyBvZiBvdXIKc3BlZWNoLiBUaHVzIHdlIHNoYWxsIGVzY2hldyBhbnRpcXVlLCBtZXRhcGhvcmljYWwgYW5kIG5ld2x5LWNvaW5lZCB3b3JkcyBpbiBvdXIgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZXhvcmRpdW0sIHN0YXRlbWVudCBvZiBmYWN0czwvaGk+IGFuZCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5hcmd1bWVudHMsPC9oaT4gYXMgd2Ugc2hhbGwgYXZvaWQgZmxvd2luZwpwZXJpb2RzIHdvdmVuIHdpdGggZWxhYm9yYXRlIGdyYWNlLCB3aGVuIHRoZSBjYXNlCmhhcyB0byBiZSBkaXZpZGVkIGFuZCBkaXN0aW5ndWlzaGVkIHVuZGVyIGl0cyB2YXJpb3VzCmhlYWRzLCB3aGlsZSwgb24gdGhlIG90aGVyIGhhbmQsIHdlIHNoYWxsIG5vdCBlbXBsb3kKbWVhbiBvciBjb2xsb3F1aWFsIGxhbmd1YWdlLCBkZXZvaWQgb2YgYWxsIGFydGlzdGljCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xNTkiIC8+CgpzdHJ1Y3R1cmUsIGluIHRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wZXJvcmF0aW9uLDwvaGk+IG5vciwgd2hlbiB0aGUgdGhlbWUgY2FsbHMKZm9yIGNvbXBhc3Npb24sIGF0dGVtcHQgdG8gZHJ5IHRoZSB0ZWFycyBvZiBvdXIgYXVkaWVuY2Ugd2l0aCBqZXN0cy48L3RyYW5zbGF0aW9uPg=="
translation['11.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgYWxsIG9ybmFtZW50IGRlcml2ZXMgaXRzIGVmZmVjdApub3QgZnJvbSBpdHMgb3duIHF1YWxpdGllcyBzbyBtdWNoIGFzIGZyb20gdGhlCmNpcmN1bXN0YW5jZXMgaW4gd2hpY2ggaXQgaXMgYXBwbGllZCwgYW5kIHRoZSBvY2Nhc2lvbgpjaG9zZW4gZm9yIHNheWluZyBhbnl0aGluZyBpcyBhdCBsZWFzdCBhcyBpbXBvcnRhbnQgYQpjb25zaWRlcmF0aW9uIGFzIHdoYXQgaXMgYWN0dWFsbHkgc2FpZC4gQnV0IHRoZSB3aG9sZQpvZiB0aGlzIHF1ZXN0aW9uIG9mIGFwcHJvcHJpYXRlIGxhbmd1YWdlIHR1cm5zIG9uCnNvbWV0aGluZyBtb3JlIHRoYW4gb3VyIGNob2ljZSBvZiBzdHlsZSwgZm9yIGl0IGhhcwptdWNoIGluIGNvbW1vbiB3aXRoIGludmVudGlvbi4gRm9yIGlmIHdvcmRzIGNhbgpwcm9kdWNlIHN1Y2ggYW4gaW1wcmVzc2lvbiwgaG93IG11Y2ggZ3JlYXRlciBtdXN0CnRoYXQgYmUgd2hpY2ggaXMgY3JlYXRlZCBieSB0aGUgZmFjdHMgdGhlbXNlbHZlcy4KQnV0IEkgaGF2ZSBhbHJlYWR5IGxhaWQgZG93biBydWxlcyBmb3IgdGhlIHRyZWF0bWVudApvZiB0aGUgbGF0dGVyIGluIHZhcmlvdXMgcG9ydGlvbnMgb2YgdGhpcyB3b3JrLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjgiIHVuaXQ9InNlY3Rpb24iIC8+VG9vIG11Y2ggaW5zaXN0ZW5jZSBjYW5ub3QgYmUgbGFpZCB1cG9uIHRoZSBwb2ludAp0aGF0IG5vIG9uZSBjYW4gYmUgc2FpZCB0byBzcGVhayBhcHByb3ByaWF0ZWx5IHdobwpoYXMgbm90IGNvbnNpZGVyZWQgbm90IG1lcmVseSB3aGF0IGl0IGlzIGV4cGVkaWVudCwKYnV0IGFsc28gd2hhdCBpdCBpcyBiZWNvbWluZyB0byBzYXkuIEkgYW0gd2VsbAphd2FyZSB0aGF0IHRoZXNlIHR3byBjb25zaWRlcmF0aW9ucyBnZW5lcmFsbHkgZ28KaGFuZCBpbiBoYW5kLiBGb3Igd2hhdGV2ZXIgaXMgYmVjb21pbmcgaXMsIGFzIGEKcnVsZSwgdXNlZnVsLCBhbmQgdGhlcmUgaXMgbm90aGluZyB0aGF0IGRvZXMgbW9yZSB0bwpjb25jaWxpYXRlIHRoZSBnb29kLXdpbGwgb2YgdGhlIGp1ZGdlIHRoYW4gdGhlCm9ic2VydmFuY2Ugb3IgdG8gYWxpZW5hdGUgaXQgdGhhbiB0aGUgZGlzcmVnYXJkIG9mCnRoZXNlIGNvbnNpZGVyYXRpb25zLjxtaWxlc3RvbmUgbj0iOSIgdW5pdD0ic2VjdGlvbiIgLz4gU29tZXRpbWVzLCBob3dldmVyLCB0aGUgdHdvCmFyZSBhdCB2YXJpYW5jZS4gTm93LCB3aGVuZXZlciB0aGlzIG9jY3VycywgZXhwZWRpZW5jeSBtdXN0IHlpZWxkIHRvIHRoZSBkZW1hbmRzIG9mIHdoYXQgaXMKYmVjb21pbmcuIFdobyBpcyB0aGVyZSB3aG8gZG9lcyBub3QgcmVhbGlzZSB0aGF0Cm5vdGhpbmcgd291bGQgaGF2ZSBjb250cmlidXRlZCBtb3JlIHRvIHNlY3VyZSB0aGUKYWNxdWl0dGFsIG9mIFNvY3JhdGVzIHRoYW4gaWYgaGUgaGFkIGVtcGxveWVkIHRoZQpvcmRpbmFyeSBmb3JlbnNpYyBtZXRob2RzIG9mIGRlZmVuY2UgYW5kIGhhZApjb25jaWxpYXRlZCB0aGUgbWluZHMgb2YgaGlzIGp1ZGdlcyBieSBhZG9wdGluZyBhCnN1Ym1pc3NpdmUgdG9uZSBhbmQgaGFkIGRldm90ZWQgaGlzIGF0dGVudGlvbiB0bwpyZWZ1dGluZyB0aGUgYWN0dWFsIGNoYXJnZSBhZ2FpbnN0IGhpbT88bWlsZXN0b25lIG49IjEwIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgc3VjaAphIGNvdXJzZSB3b3VsZCBoYXZlIGJlZW4gdW53b3J0aHkgb2YgaGlzIGNoYXJhY3RlciwKCjxwYiBpZD0icC4xNjEiIC8+CgphbmQsIHRoZXJlZm9yZSwgaGUgcGxlYWRlZCBhcyBvbmUgd2hvIHdvdWxkIGFjY291bnQKdGhlIHBlbmFsdHkgdG8gd2hpY2ggaGUgbWlnaHQgYmUgc2VudGVuY2VkIGFzIHRoZQpoaWdoZXN0IG9mIGhvbm91cnMuIFRoZSB3aXNlc3Qgb2YgbWVuIHByZWZlcnJlZCB0bwpzYWNyaWZpY2UgdGhlIHJlbW5hbnQgb2YgaGlzIGRheXMgcmF0aGVyIHRoYW4gdG8gY2FuY2VsCmFsbCBoaXMgcGFzdCBsaWZlLiBBbmQgc2luY2UgaGUgd2FzIGJ1dCBpbGwgdW5kZXJzdG9vZCBieSB0aGUgbWVuIG9mIGhpcyBvd24gZGF5LCBoZSByZXNlcnZlZCBoaXMKY2FzZSBmb3IgdGhlIGFwcHJvdmFsIG9mIHBvc3Rlcml0eSBhbmQgYXQgdGhlIGNvc3Qgb2YKYSBmZXcgbGFzdCBkZWNsaW5pbmcgeWVhcnMgYWNoaWV2ZWQgdGhyb3VnaCBhbGwgdGhlCmFnZXMgbGlmZSBldmVybGFzdGluZy48bWlsZXN0b25lIG49IjExIiB1bml0PSJzZWN0aW9uIiAvPiBBbmQgc28gYWx0aG91Z2ggTHlzaWFzLCB3aG8Kd2FzIGFjY291bnRlZCB0aGUgZmlyc3Qgb3JhdG9yIG9mIHRoYXQgdGltZSwgb2ZmZXJlZApoaW0gYSB3cml0dGVuIGRlZmVuY2UsIGhlIHJlZnVzZWQgdG8gbWFrZSB1c2Ugb2YKaXQsIHNpbmNlLCB0aG91Z2ggaGUgcmVjb2duaXNlZCBpdHMgZXhjZWxsZW5jZSwgaGUKcmVnYXJkZWQgaXQgYXMgdW5iZWNvbWluZyB0byBoaW1zZWxmLiBUaGlzIGluc3RhbmNlIGFsb25lIHNob3dzIHRoYXQgdGhlIGVuZCB3aGljaCB0aGUgb3JhdG9yCm11c3Qga2VlcCBpbiB2aWV3IGlzIG5vdCBwZXJzdWFzaW9uLCBidXQgc3BlYWtpbmcKd2VsbCwgc2luY2UgdGhlcmUgYXJlIG9jY2FzaW9ucyB3aGVuIHRvIHBlcnN1YWRlCndvdWxkIGJlIGEgYmxvdCB1cG9uIGhpcyBob25vdXIuIFRoZSBsaW5lIGFkb3B0ZWQKYnkgU29jcmF0ZXMgd2FzIHVzZWxlc3MgdG8gc2VjdXJlIGhpcyBhY3F1aXR0YWwsIGJ1dAp3YXMgb2YgcmVhbCBzZXJ2aWNlIHRvIGhpbSBhcyBhIG1hbjsgYW5kIHRoYXQgaXMgYnkKZmFyIHRoZSBncmVhdGVyIGNvbnNpZGVyYXRpb24uPG1pbGVzdG9uZSBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gSW4gZHJhd2luZyB0aGlzIGRpc3RpbmN0aW9uIGJldHdlZW4gd2hhdCBpcyBleHBlZGllbnQgYW5kIHdoYXQgaXMKYmVjb21pbmcsIEkgaGF2ZSBmb2xsb3dlZCByYXRoZXIgdGhlIHVzYWdlIG9mIGNvbW1vbiBzcGVlY2ggdGhhbiB0aGUgc3RyaWN0IGxhdyBvZiB0cnV0aDsgdW5sZXNzLAppbmRlZWQsIHRoZSBlbGRlciBBZnJpY2FudXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkZhbHNlbHkgYWNjdXNlZCBvZiBoYXZpbmcgdGFrZW4gYSBicmliZSBmcm9tIEtpbmcKQW50aW9jaHVzLiBTZWUgPGhpIHJlbmQ9Iml0YWxpY3MiPkxpdnksPC9oaT4gWFhYVklJSS4gbGkuIDE2Ljwvbm90ZT4gaXMgdG8gYmUgcmVnYXJkZWQgYXMKaGF2aW5nIGZhaWxlZCB0byBjb25zdWx0IGhpcyB0cnVlIGludGVyZXN0cywgd2hlbiBoZQpyZXRpcmVkIGludG8gZXhpbGUgc29vbmVyIHRoYW4gd3JhbmdsZSBvdmVyIGhpcyBvd24KaW5ub2NlbmNlIHdpdGggYSBjb250ZW1wdGlibGUgdHJpYnVuZSBvZiB0aGUgcGVvcGxlLApvciB1bmxlc3MgaXQgYmUgYWxsZWdlZCB0aGF0IFB1YmxpdXMgUnV0aWxpdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSA8aGkgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gSS4gbGlpaS4gMjI3IDxoaSByZW5kPSJpdGFsaWNzIj5zcXEuPC9oaT48L25vdGU+IHdhcwppZ25vcmFudCBvZiBoaXMgdHJ1ZSBhZHZhbnRhZ2UgYm90aCBvbiB0aGUgb2NjYXNpb24Kd2hlbiBoZSBhZG9wdGVkIGEgZGVmZW5jZSB3aGljaCBtYXkgYWxtb3N0IGJlCmNvbXBhcmVkIHdpdGggdGhhdCBvZiBTb2NyYXRlcywgYW5kIHdoZW4gaGUgcHJlZmVycmVkIHRvIHJlbWFpbiBpbiBleGlsZSByYXRoZXIgdGhhbiByZXR1cm4gYXQgU3VsbGEncwpiaWRkaW5nLjxtaWxlc3RvbmUgbj0iMTMiIHVuaXQ9InNlY3Rpb24iIC8+IE5vLCB0aGVzZSBncmVhdCBtZW4gcmVnYXJkZWQgYWxsIHRob3NlCnRyaWZsZXMgdGhhdCB0aGUgbW9zdCBhYmplY3QgbmF0dXJlcyByZWdhcmQgYXMKCjxwYiBpZD0icC4xNjMiIC8+CgphZHZhbnRhZ2VvdXMsIGFzIGJlaW5nIGNvbnRlbXB0aWJsZSBpZiB3ZWlnaGVkIGluIHRoZQpiYWxhbmNlIHdpdGggdmlydHVlLCBhbmQgZm9yIHRoaXMgcmVhc29uIHRoZXkgaGF2ZQp0aGVpciByZXdhcmQgaW4gdGhlIGRlYXRobGVzcyBwcmFpc2Ugb2YgYWxsIGdlbmVyYXRpb25zLiBMZXQgbm90IHVzLCB0aGVuLCBiZSBzbyBwb29yIHNwaXJpdGVkIGFzIHRvCnJlZ2FyZCB0aGUgYWN0cywgd2hpY2ggd2UgZXh0b2wsIGFzIGJlaW5nIGluZXhwZWRpZW50Lgo8bWlsZXN0b25lIG49IjE0IiB1bml0PSJzZWN0aW9uIiAvPkhvd2V2ZXIsIGl0IGlzIGJ1dCByYXJlbHkgdGhhdCB0aGlzIGRpc3RpbmN0aW9uLCBzdWNoCmFzIGl0IGlzLCBpcyBjYWxsZWQgaW50byBwbGF5LiBBcyBJIGhhdmUgc2FpZCwgdGhlCmV4cGVkaWVudCBhbmQgdGhlIGJlY29taW5nIHdpbGwsIGFzIGEgcnVsZSwgYmUKaWRlbnRpY2FsIGluIGV2ZXJ5IGtpbmQgb2YgY2FzZS4gU3RpbGwsIHRoZXJlIGFyZSB0d28KdGhpbmdzIHdoaWNoIHdpbGwgYmUgYmVjb21pbmcgdG8gYWxsIG1lbiBhdCBhbGwgdGltZXMKYW5kIGluIGFsbCBwbGFjZXMsIG5hbWVseSwgdG8gYWN0IGFuZCBzcGVhayBhcyBiZWZpdHMgYQptYW4gb2YgaG9ub3VyLCBhbmQgaXQgd2lsbCBuZXZlciBhdCBhbnkgdGltZSBiZXNlZW0KYW55IG1hbiB0byBzcGVhayBvciBhY3QgZGlzaG9ub3VyYWJseS4gT24gdGhlCm90aGVyIGhhbmQsIHRoaW5ncyBvZiBtaW5vciBpbXBvcnRhbmNlIGFuZCBvY2N1cHlpbmcgc29tZXRoaW5nIGxpa2UgYSBtaWRkbGUgcG9zaXRpb24gYmV0d2VlbiB0aGUKdHdvIGFyZSBnZW5lcmFsbHkgb2Ygc3VjaCBhIG5hdHVyZSB0aGF0IHRoZXkgbWF5IGJlCmNvbmNlZGVkIHRvIHNvbWUsIGJ1dCBub3QgdG8gb3RoZXJzLCB3aGlsZSBpdCB3aWxsCmRlcGVuZCBvbiB0aGUgY2hhcmFjdGVyIG9mIHRoZSBzcGVha2VyIGFuZCB0aGUKY2lyY3Vtc3RhbmNlcyBvZiB0aW1lLCBwbGFjZSBhbmQgbW90aXZlIHdoZXRoZXIgd2UKcmVnYXJkIHRoZW0gYXMgbW9yZSBvciBsZXNzIGV4Y3VzYWJsZSBvciByZXByZWhlbnNpYmxlLjxtaWxlc3RvbmUgbj0iMTUiIHVuaXQ9InNlY3Rpb24iIC8+IFdoZW4sIGhvd2V2ZXIsIHdlIGFyZSBzcGVha2luZyBvZiBvdXIKb3duIGFmZmFpcnMgb3IgdGhvc2Ugb2Ygb3RoZXJzLCB3ZSBtdXN0IGRpc3Rpbmd1aXNoCmJldHdlZW4gdGhlIGV4cGVkaWVudCBhbmQgdGhlIGJlY29taW5nLCB3aGlsZQpyZWNvZ25pc2luZyB0aGF0IHRoZSBtYWpvcml0eSBvZiB0aGUgcG9pbnRzIHdoaWNoCndlIGhhdmUgdG8gY29uc2lkZXIgd2lsbCBmYWxsIHVuZGVyIG5laXRoZXIgaGVhZC48L3A+CjwvdHJhbnNsYXRpb24+"
translation['11.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRvbyBtdWNoIGluc2lzdGVuY2UgY2Fubm90IGJlIGxhaWQgdXBvbiB0aGUgcG9pbnQKdGhhdCBubyBvbmUgY2FuIGJlIHNhaWQgdG8gc3BlYWsgYXBwcm9wcmlhdGVseSB3aG8KaGFzIG5vdCBjb25zaWRlcmVkIG5vdCBtZXJlbHkgd2hhdCBpdCBpcyBleHBlZGllbnQsCmJ1dCBhbHNvIHdoYXQgaXQgaXMgYmVjb21pbmcgdG8gc2F5LiBJIGFtIHdlbGwKYXdhcmUgdGhhdCB0aGVzZSB0d28gY29uc2lkZXJhdGlvbnMgZ2VuZXJhbGx5IGdvCmhhbmQgaW4gaGFuZC4gRm9yIHdoYXRldmVyIGlzIGJlY29taW5nIGlzLCBhcyBhCnJ1bGUsIHVzZWZ1bCwgYW5kIHRoZXJlIGlzIG5vdGhpbmcgdGhhdCBkb2VzIG1vcmUgdG8KY29uY2lsaWF0ZSB0aGUgZ29vZC13aWxsIG9mIHRoZSBqdWRnZSB0aGFuIHRoZQpvYnNlcnZhbmNlIG9yIHRvIGFsaWVuYXRlIGl0IHRoYW4gdGhlIGRpc3JlZ2FyZCBvZgp0aGVzZSBjb25zaWRlcmF0aW9ucy48L3RyYW5zbGF0aW9uPg=="
translation['11.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBTb21ldGltZXMsIGhvd2V2ZXIsIHRoZSB0d28KYXJlIGF0IHZhcmlhbmNlLiBOb3csIHdoZW5ldmVyIHRoaXMgb2NjdXJzLCBleHBlZGllbmN5IG11c3QgeWllbGQgdG8gdGhlIGRlbWFuZHMgb2Ygd2hhdCBpcwpiZWNvbWluZy4gV2hvIGlzIHRoZXJlIHdobyBkb2VzIG5vdCByZWFsaXNlIHRoYXQKbm90aGluZyB3b3VsZCBoYXZlIGNvbnRyaWJ1dGVkIG1vcmUgdG8gc2VjdXJlIHRoZQphY3F1aXR0YWwgb2YgU29jcmF0ZXMgdGhhbiBpZiBoZSBoYWQgZW1wbG95ZWQgdGhlCm9yZGluYXJ5IGZvcmVuc2ljIG1ldGhvZHMgb2YgZGVmZW5jZSBhbmQgaGFkCmNvbmNpbGlhdGVkIHRoZSBtaW5kcyBvZiBoaXMganVkZ2VzIGJ5IGFkb3B0aW5nIGEKc3VibWlzc2l2ZSB0b25lIGFuZCBoYWQgZGV2b3RlZCBoaXMgYXR0ZW50aW9uIHRvCnJlZnV0aW5nIHRoZSBhY3R1YWwgY2hhcmdlIGFnYWluc3QgaGltPzwvdHJhbnNsYXRpb24+"
translation['11.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHN1Y2gKYSBjb3Vyc2Ugd291bGQgaGF2ZSBiZWVuIHVud29ydGh5IG9mIGhpcyBjaGFyYWN0ZXIsCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xNjEiIC8+CgphbmQsIHRoZXJlZm9yZSwgaGUgcGxlYWRlZCBhcyBvbmUgd2hvIHdvdWxkIGFjY291bnQKdGhlIHBlbmFsdHkgdG8gd2hpY2ggaGUgbWlnaHQgYmUgc2VudGVuY2VkIGFzIHRoZQpoaWdoZXN0IG9mIGhvbm91cnMuIFRoZSB3aXNlc3Qgb2YgbWVuIHByZWZlcnJlZCB0bwpzYWNyaWZpY2UgdGhlIHJlbW5hbnQgb2YgaGlzIGRheXMgcmF0aGVyIHRoYW4gdG8gY2FuY2VsCmFsbCBoaXMgcGFzdCBsaWZlLiBBbmQgc2luY2UgaGUgd2FzIGJ1dCBpbGwgdW5kZXJzdG9vZCBieSB0aGUgbWVuIG9mIGhpcyBvd24gZGF5LCBoZSByZXNlcnZlZCBoaXMKY2FzZSBmb3IgdGhlIGFwcHJvdmFsIG9mIHBvc3Rlcml0eSBhbmQgYXQgdGhlIGNvc3Qgb2YKYSBmZXcgbGFzdCBkZWNsaW5pbmcgeWVhcnMgYWNoaWV2ZWQgdGhyb3VnaCBhbGwgdGhlCmFnZXMgbGlmZSBldmVybGFzdGluZy48L3RyYW5zbGF0aW9uPg=="
translation['11.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIHNvIGFsdGhvdWdoIEx5c2lhcywgd2hvCndhcyBhY2NvdW50ZWQgdGhlIGZpcnN0IG9yYXRvciBvZiB0aGF0IHRpbWUsIG9mZmVyZWQKaGltIGEgd3JpdHRlbiBkZWZlbmNlLCBoZSByZWZ1c2VkIHRvIG1ha2UgdXNlIG9mCml0LCBzaW5jZSwgdGhvdWdoIGhlIHJlY29nbmlzZWQgaXRzIGV4Y2VsbGVuY2UsIGhlCnJlZ2FyZGVkIGl0IGFzIHVuYmVjb21pbmcgdG8gaGltc2VsZi4gVGhpcyBpbnN0YW5jZSBhbG9uZSBzaG93cyB0aGF0IHRoZSBlbmQgd2hpY2ggdGhlIG9yYXRvcgptdXN0IGtlZXAgaW4gdmlldyBpcyBub3QgcGVyc3Vhc2lvbiwgYnV0IHNwZWFraW5nCndlbGwsIHNpbmNlIHRoZXJlIGFyZSBvY2Nhc2lvbnMgd2hlbiB0byBwZXJzdWFkZQp3b3VsZCBiZSBhIGJsb3QgdXBvbiBoaXMgaG9ub3VyLiBUaGUgbGluZSBhZG9wdGVkCmJ5IFNvY3JhdGVzIHdhcyB1c2VsZXNzIHRvIHNlY3VyZSBoaXMgYWNxdWl0dGFsLCBidXQKd2FzIG9mIHJlYWwgc2VydmljZSB0byBoaW0gYXMgYSBtYW47IGFuZCB0aGF0IGlzIGJ5CmZhciB0aGUgZ3JlYXRlciBjb25zaWRlcmF0aW9uLjwvdHJhbnNsYXRpb24+"
translation['11.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gSW4gZHJhd2luZyB0aGlzIGRpc3RpbmN0aW9uIGJldHdlZW4gd2hhdCBpcyBleHBlZGllbnQgYW5kIHdoYXQgaXMKYmVjb21pbmcsIEkgaGF2ZSBmb2xsb3dlZCByYXRoZXIgdGhlIHVzYWdlIG9mIGNvbW1vbiBzcGVlY2ggdGhhbiB0aGUgc3RyaWN0IGxhdyBvZiB0cnV0aDsgdW5sZXNzLAppbmRlZWQsIHRoZSBlbGRlciBBZnJpY2FudXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+RmFsc2VseSBhY2N1c2VkIG9mIGhhdmluZyB0YWtlbiBhIGJyaWJlIGZyb20gS2luZwpBbnRpb2NodXMuIFNlZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5MaXZ5LDwvaGk+IFhYWFZJSUkuIGxpLiAxNi48L25vdGU+IGlzIHRvIGJlIHJlZ2FyZGVkIGFzCmhhdmluZyBmYWlsZWQgdG8gY29uc3VsdCBoaXMgdHJ1ZSBpbnRlcmVzdHMsIHdoZW4gaGUKcmV0aXJlZCBpbnRvIGV4aWxlIHNvb25lciB0aGFuIHdyYW5nbGUgb3ZlciBoaXMgb3duCmlubm9jZW5jZSB3aXRoIGEgY29udGVtcHRpYmxlIHRyaWJ1bmUgb2YgdGhlIHBlb3BsZSwKb3IgdW5sZXNzIGl0IGJlIGFsbGVnZWQgdGhhdCBQdWJsaXVzIFJ1dGlsaXVzPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+TGl2eSw8L2hpPiBYWFhWSUlJLiBsaS4gMTYuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5kZSBPci48L2hpPiBJLiBsaWlpLiAyMjcgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PC9ub3RlPiB3YXMKaWdub3JhbnQgb2YgaGlzIHRydWUgYWR2YW50YWdlIGJvdGggb24gdGhlIG9jY2FzaW9uCndoZW4gaGUgYWRvcHRlZCBhIGRlZmVuY2Ugd2hpY2ggbWF5IGFsbW9zdCBiZQpjb21wYXJlZCB3aXRoIHRoYXQgb2YgU29jcmF0ZXMsIGFuZCB3aGVuIGhlIHByZWZlcnJlZCB0byByZW1haW4gaW4gZXhpbGUgcmF0aGVyIHRoYW4gcmV0dXJuIGF0IFN1bGxhJ3MKYmlkZGluZy48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5kZSBPci48L2hpPiBJLiBsaWlpLiAyMjcgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PC90cmFuc2xhdGlvbj4="
translation['11.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gTm8sIHRoZXNlIGdyZWF0IG1lbiByZWdhcmRlZCBhbGwgdGhvc2UKdHJpZmxlcyB0aGF0IHRoZSBtb3N0IGFiamVjdCBuYXR1cmVzIHJlZ2FyZCBhcwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTYzIiAvPgoKYWR2YW50YWdlb3VzLCBhcyBiZWluZyBjb250ZW1wdGlibGUgaWYgd2VpZ2hlZCBpbiB0aGUKYmFsYW5jZSB3aXRoIHZpcnR1ZSwgYW5kIGZvciB0aGlzIHJlYXNvbiB0aGV5IGhhdmUKdGhlaXIgcmV3YXJkIGluIHRoZSBkZWF0aGxlc3MgcHJhaXNlIG9mIGFsbCBnZW5lcmF0aW9ucy4gTGV0IG5vdCB1cywgdGhlbiwgYmUgc28gcG9vciBzcGlyaXRlZCBhcyB0bwpyZWdhcmQgdGhlIGFjdHMsIHdoaWNoIHdlIGV4dG9sLCBhcyBiZWluZyBpbmV4cGVkaWVudC4KPC90cmFuc2xhdGlvbj4="
translation['11.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Ib3dldmVyLCBpdCBpcyBidXQgcmFyZWx5IHRoYXQgdGhpcyBkaXN0aW5jdGlvbiwgc3VjaAphcyBpdCBpcywgaXMgY2FsbGVkIGludG8gcGxheS4gQXMgSSBoYXZlIHNhaWQsIHRoZQpleHBlZGllbnQgYW5kIHRoZSBiZWNvbWluZyB3aWxsLCBhcyBhIHJ1bGUsIGJlCmlkZW50aWNhbCBpbiBldmVyeSBraW5kIG9mIGNhc2UuIFN0aWxsLCB0aGVyZSBhcmUgdHdvCnRoaW5ncyB3aGljaCB3aWxsIGJlIGJlY29taW5nIHRvIGFsbCBtZW4gYXQgYWxsIHRpbWVzCmFuZCBpbiBhbGwgcGxhY2VzLCBuYW1lbHksIHRvIGFjdCBhbmQgc3BlYWsgYXMgYmVmaXRzIGEKbWFuIG9mIGhvbm91ciwgYW5kIGl0IHdpbGwgbmV2ZXIgYXQgYW55IHRpbWUgYmVzZWVtCmFueSBtYW4gdG8gc3BlYWsgb3IgYWN0IGRpc2hvbm91cmFibHkuIE9uIHRoZQpvdGhlciBoYW5kLCB0aGluZ3Mgb2YgbWlub3IgaW1wb3J0YW5jZSBhbmQgb2NjdXB5aW5nIHNvbWV0aGluZyBsaWtlIGEgbWlkZGxlIHBvc2l0aW9uIGJldHdlZW4gdGhlCnR3byBhcmUgZ2VuZXJhbGx5IG9mIHN1Y2ggYSBuYXR1cmUgdGhhdCB0aGV5IG1heSBiZQpjb25jZWRlZCB0byBzb21lLCBidXQgbm90IHRvIG90aGVycywgd2hpbGUgaXQgd2lsbApkZXBlbmQgb24gdGhlIGNoYXJhY3RlciBvZiB0aGUgc3BlYWtlciBhbmQgdGhlCmNpcmN1bXN0YW5jZXMgb2YgdGltZSwgcGxhY2UgYW5kIG1vdGl2ZSB3aGV0aGVyIHdlCnJlZ2FyZCB0aGVtIGFzIG1vcmUgb3IgbGVzcyBleGN1c2FibGUgb3IgcmVwcmVoZW5zaWJsZS48L3RyYW5zbGF0aW9uPg=="
translation['11.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz4gV2hlbiwgaG93ZXZlciwgd2UgYXJlIHNwZWFraW5nIG9mIG91cgpvd24gYWZmYWlycyBvciB0aG9zZSBvZiBvdGhlcnMsIHdlIG11c3QgZGlzdGluZ3Vpc2gKYmV0d2VlbiB0aGUgZXhwZWRpZW50IGFuZCB0aGUgYmVjb21pbmcsIHdoaWxlCnJlY29nbmlzaW5nIHRoYXQgdGhlIG1ham9yaXR5IG9mIHRoZSBwb2ludHMgd2hpY2gKd2UgaGF2ZSB0byBjb25zaWRlciB3aWxsIGZhbGwgdW5kZXIgbmVpdGhlciBoZWFkLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SW4gdGhlIGZpcnN0IHBsYWNlLCB0aGVuLCBhbGwga2luZHMgb2YgYm9hc3RpbmcgYXJlIGEKbWlzdGFrZSwgYWJvdmUgYWxsLCBpdCBpcyBhbiBlcnJvciBmb3IgYW4gb3JhdG9yIHRvIHByYWlzZQpoaXMgb3duIGVsb3F1ZW5jZSwgYW5kLCBmdXJ0aGVyLCBub3QgbWVyZWx5IHdlYXJpZXMsCmJ1dCBpbiB0aGUgbWFqb3JpdHkgb2YgY2FzZXMgZGlzZ3VzdHMgdGhlIGF1ZGllbmNlLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTYiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIHRoZXJlIGlzIGV2ZXIgaW4gdGhlIG1pbmQgb2YgbWFuIGEgY2VydGFpbgplbGVtZW50IG9mIGxvZnR5IGFuZCB1bmJlbmRpbmcgcHJpZGUgdGhhdCB3aWxsIG5vdApicm9vayBzdXBlcmlvcml0eTogYW5kIGZvciB0aGlzIHJlYXNvbiB3ZSB0YWtlIGRlbGlnaHQgaW4gcmFpc2luZyB0aGUgaHVtYmxlIGFuZCBzdWJtaXNzaXZlIHRvIHRoZWlyCmZlZXQsIHNpbmNlIHN1Y2ggYW4gYWN0IGdpdmVzIHVzIGEgY29uc2Npb3VzbmVzcyBvZiBvdXIKCjxwYiBpZD0icC4xNjUiIC8+CgpzdXBlcmlvcml0eSwgYW5kIGFzIHNvb24gYXMgYWxsIHNlbnNlIG9mIHJpdmFscnkgZGlzYXBwZWFycywgaXRzIHBsYWNlIGlzIHRha2VuIGJ5IGEgZmVlbGluZyBvZiBodW1hbml0eS4KQnV0IHRoZSBtYW4gd2hvIGV4YWx0cyBoaW1zZWxmIGJleW9uZCByZWFzb24gaXMKbG9va2VkIHVwb24gYXMgZGVwcmVjaWF0aW5nIGFuZCBzaG93aW5nIGEgY29udGVtcHQKZm9yIG90aGVycyBhbmQgYXMgbWFraW5nIHRoZW0gc2VlbSBzbWFsbCByYXRoZXIKdGhhbiBoaW1zZWxmIHNlZW0gZ3JlYXQuPG1pbGVzdG9uZSBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz4gQXMgYSByZXN1bHQsIHRob3NlIHdobyBhcmUKYmVuZWF0aCBoaW0gZmVlbCBhIGdydWRnZSBhZ2FpbnN0IGhpbSAoZm9yIHRob3NlIHdobwphcmUgdW53aWxsaW5nIHRvIHlpZWxkIGFuZCB5ZXQgaGF2ZSBub3QgdGhlIHN0cmVuZ3RoCnRvIGhvbGQgdGhlaXIgb3duIGFyZSBhbHdheXMgbGlhYmxlIHRvIHRoaXMgZmFpbGluZyksCndoaWxlIGhpcyBzdXBlcmlvcnMgbGF1Z2ggYXQgaGltIGFuZCB0aGUgZ29vZApkaXNhcHByb3ZlLiBJbmRlZWQsIGFzIGEgcnVsZSwgeW91IHdpbGwgZmluZCB0aGF0CmFycm9nYW5jZSBpbXBsaWVzIGEgZmFsc2Ugc2VsZi1lc3RlZW0sIHdoZXJlYXMgdGhvc2UKd2hvIHBvc3Nlc3MgdHJ1ZSBtZXJpdCBmaW5kIHNhdGlzZmFjdGlvbiBlbm91Z2ggaW4KdGhlIGNvbnNjaW91c25lc3Mgb2YgcG9zc2Vzc2lvbi48L3A+CjwvdHJhbnNsYXRpb24+"
translation['11.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlcmUgaXMgZXZlciBpbiB0aGUgbWluZCBvZiBtYW4gYSBjZXJ0YWluCmVsZW1lbnQgb2YgbG9mdHkgYW5kIHVuYmVuZGluZyBwcmlkZSB0aGF0IHdpbGwgbm90CmJyb29rIHN1cGVyaW9yaXR5OiBhbmQgZm9yIHRoaXMgcmVhc29uIHdlIHRha2UgZGVsaWdodCBpbiByYWlzaW5nIHRoZSBodW1ibGUgYW5kIHN1Ym1pc3NpdmUgdG8gdGhlaXIKZmVldCwgc2luY2Ugc3VjaCBhbiBhY3QgZ2l2ZXMgdXMgYSBjb25zY2lvdXNuZXNzIG9mIG91cgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTY1IiAvPgoKc3VwZXJpb3JpdHksIGFuZCBhcyBzb29uIGFzIGFsbCBzZW5zZSBvZiByaXZhbHJ5IGRpc2FwcGVhcnMsIGl0cyBwbGFjZSBpcyB0YWtlbiBieSBhIGZlZWxpbmcgb2YgaHVtYW5pdHkuCkJ1dCB0aGUgbWFuIHdobyBleGFsdHMgaGltc2VsZiBiZXlvbmQgcmVhc29uIGlzCmxvb2tlZCB1cG9uIGFzIGRlcHJlY2lhdGluZyBhbmQgc2hvd2luZyBhIGNvbnRlbXB0CmZvciBvdGhlcnMgYW5kIGFzIG1ha2luZyB0aGVtIHNlZW0gc21hbGwgcmF0aGVyCnRoYW4gaGltc2VsZiBzZWVtIGdyZWF0LjwvdHJhbnNsYXRpb24+"
translation['11.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz4gQXMgYSByZXN1bHQsIHRob3NlIHdobyBhcmUKYmVuZWF0aCBoaW0gZmVlbCBhIGdydWRnZSBhZ2FpbnN0IGhpbSAoZm9yIHRob3NlIHdobwphcmUgdW53aWxsaW5nIHRvIHlpZWxkIGFuZCB5ZXQgaGF2ZSBub3QgdGhlIHN0cmVuZ3RoCnRvIGhvbGQgdGhlaXIgb3duIGFyZSBhbHdheXMgbGlhYmxlIHRvIHRoaXMgZmFpbGluZyksCndoaWxlIGhpcyBzdXBlcmlvcnMgbGF1Z2ggYXQgaGltIGFuZCB0aGUgZ29vZApkaXNhcHByb3ZlLiBJbmRlZWQsIGFzIGEgcnVsZSwgeW91IHdpbGwgZmluZCB0aGF0CmFycm9nYW5jZSBpbXBsaWVzIGEgZmFsc2Ugc2VsZi1lc3RlZW0sIHdoZXJlYXMgdGhvc2UKd2hvIHBvc3Nlc3MgdHJ1ZSBtZXJpdCBmaW5kIHNhdGlzZmFjdGlvbiBlbm91Z2ggaW4KdGhlIGNvbnNjaW91c25lc3Mgb2YgcG9zc2Vzc2lvbi48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNpY2VybyBoYXMgYmVlbiBzZXZlcmVseSBjZW5zdXJlZCBpbiB0aGlzIGNvbm5leGlvbiwgYWx0aG91Z2ggaGUgd2FzIGZhciBtb3JlIGdpdmVuIHRvIGJvYXN0aW5nCm9mIGhpcyBwb2xpdGljYWwgYWNoaWV2ZW1lbnRzIHRoYW4gb2YgaGlzIGVsb3F1ZW5jZSwKYXQgYW55IHJhdGUsIGluIGhpcyBzcGVlY2hlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTgiIHVuaXQ9InNlY3Rpb24iIC8+IEFuZCBhcyBhIHJ1bGUgaGUgaGFkCnNvbWUgc291bmQgcmVhc29uIGZvciBoaXMgc2VsZi1wcmFpc2UuIEZvciBoZSB3YXMKZWl0aGVyIGRlZmVuZGluZyB0aG9zZSB3aG8gaGFkIGFzc2lzdGVkIGhpbSB0byBjcnVzaAp0aGUgY29uc3BpcmFjeSBvZiBDYXRpbGluZSwgb3Igd2FzIHJlcGx5aW5nIHRvIGF0dGFja3MKbWFkZSB1cG9uIGhpbSBieSB0aG9zZSB3aG8gZW52aWVkIGhpcyBwb3NpdGlvbjsKYXR0YWNrcyB3aGljaCBoZSB3YXMgc28gZmFyIHVuYWJsZSB0byB3aXRoc3RhbmQKdGhhdCBoZSBzdWZmZXJlZCBleGlsZSBhcyB0aGUgcGVuYWx0eSBmb3IgaGF2aW5nCnNhdmVkIGhpcyBjb3VudHJ5LiBDb25zZXF1ZW50bHksIHdlIG1heSByZWdhcmQKaGlzIGZyZXF1ZW50IHJlZmVyZW5jZSB0byB0aGUgZGVlZHMgYWNjb21wbGlzaGVkCmluIGhpcyBjb25zdWxzaGlwIGFzIGJlaW5nIGR1ZSBxdWl0ZSBhcyBtdWNoIHRvIHRoZQpuZWNlc3NpdGllcyBvZiBkZWZlbmNlIGFzIHRvIHRoZSBwcm9tcHRpbmdzIG9mIHZhaW5nbG9yeS48bWlsZXN0b25lIG49IjE5IiB1bml0PSJzZWN0aW9uIiAvPiBBcyByZWdhcmRzIGhpcyBvd24gZWxvcXVlbmNlLCBoZSBuZXZlcgptYWRlIGltbW9kZXJhdGUgY2xhaW1zIGZvciBpdCBpbiBoaXMgcGxlYWRpbmcsIHdoaWxlCmhlIGFsd2F5cyBwYWlkIGEgaGFuZHNvbWUgdHJpYnV0ZSB0byB0aGUgZWxvcXVlbmNlCm9mIHRoZSBhZHZvY2F0ZSwgd2hvIG9wcG9zZWQgaGltLiBGb3IgZXhhbXBsZSwKdGhlcmUgYXJlIHBhc3NhZ2VzIHN1Y2ggYXMgdGhlIGZvbGxvd2luZzogPHF1b3RlPklmIHRoZXJlCmJlIGF1Z2h0IG9mIHRhbGVudCBpbiBtZSwgYW5kIEkgYW0gb25seSB0b28gY29uc2Npb3VzCgo8cGIgaWQ9InAuMTY3IiAvPgoKaG93IGxpdHRsZSBpdCBpcyw8L3F1b3RlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPlBybyBBcmNoLjwvaGk+IGkuIEkuPC9ub3RlPiBhbmQsIDxxdW90ZT5JbiBkZWZhdWx0IG9mIHRhbGVudCwgSSB0dXJuZWQKdG8gaW5kdXN0cnkgZm9yIGFpZC48L3F1b3RlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPlBybyBRdWludC48L2hpPiBpLiA0Ljwvbm90ZT48bWlsZXN0b25lIG49IjIwIiB1bml0PSJzZWN0aW9uIiAvPiBBZ2FpbiwgaW4gaGlzIHNwZWVjaCBhZ2FpbnN0CkNhZWNpbGl1cyBvbiB0aGUgc2VsZWN0aW9uIG9mIGFuIGFjY3VzZXIgZm9yIFZlcnJlcywKZGVzcGl0ZSB0aGUgZmFjdCB0aGF0IHRoZSBxdWVzdGlvbiBhcyB0byB3aGljaCB3YXMKdGhlIG1vc3QgY2FwYWJsZSBwbGVhZGVyLCB3YXMgYSBmYWN0b3Igb2YgZ3JlYXQKaW1wb3J0YW5jZSwgaGUgcmF0aGVyIGRlcHJlY2lhdGVkIGhpcyBvcHBvbmVudCdzCmVsb3F1ZW5jZSB0aGFuIGV4YWx0ZWQgaGlzIG93biwgYW5kIGFzc2VydGVkIHRoYXQKaGUgaGFkIGRvbmUgYWxsIGluIGhpcyBwb3dlciB0byBtYWtlIGhpbXNlbGYgYW4Kb3JhdG9yLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPkRpdi4gaW4gQ2FlYy48L2hpPiB4aWkuIDQwLjwvbm90ZT4gdGhvdWdoIGhlIGtuZXcgaGUgaGFkIG5vdCBzdWNjZWVkZWQuPG1pbGVzdG9uZSBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gSW4KaGlzIGxldHRlcnMgdG8gaW50aW1hdGUgZnJpZW5kcywgaXQgaXMgdHJ1ZSwgYW5kIG9jY2FzaW9uYWxseSBpbiBoaXMgZGlhbG9ndWVzLCBoZSB0ZWxscyB0aGUgdHJ1dGggb2YgaGlzIG93bgplbG9xdWVuY2UsIHRob3VnaCBpbiB0aGUgbGF0dGVyIGNhc2UgaGUgaXMgY2FyZWZ1bAphbHdheXMgdG8gcGxhY2UgdGhlIHJlbWFya3MgaW4gcXVlc3Rpb24gaW4gdGhlCm1vdXRoIG9mIHNvbWUgb3RoZXIgY2hhcmFjdGVyLiBBbmQgeWV0IEkgYW0gbm90CnN1cmUgdGhhdCBvcGVuIGJvYXN0aW5nIGlzIG5vdCBtb3JlIHRvbGVyYWJsZSwgb3dpbmcKdG8gaXRzIHNoZWVyIHN0cmFpZ2h0Zm9yd2FyZG5lc3MsIHRoYW4gdGhhdCBwZXJ2ZXJ0ZWQKZm9ybSBvZiBzZWxmLXByYWlzZSwgd2hpY2ggbWFrZXMgdGhlIG1pbGxpb25haXJlIHNheQp0aGF0IGhlIGlzIG5vdCBhIHBvb3IgbWFuLCB0aGUgbWFuIG9mIG1hcmsgZGVzY3JpYmUKaGltc2VsZiBhcyBvYnNjdXJlLCB0aGUgcG93ZXJmdWwgcG9zZSBhcyB3ZWFrLAphbmQgdGhlIGVsb3F1ZW50IGFzIHVuc2tpbGxlZCBhbmQgZXZlbiBpbmFydGljdWxhdGUuCjxtaWxlc3RvbmUgbj0iMjIiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IHRoZSBtb3N0IG9zdGVudGF0aW91cyBraW5kIG9mIGJvYXN0aW5nIHRha2VzCnRoZSBmb3JtIG9mIGFjdHVhbCBzZWxmLWRlcmlzaW9uLiBMZXQgdXMgdGhlcmVmb3JlCmxlYXZlIGl0IHRvIG90aGVycyB0byBwcmFpc2UgdXMuIEZvciBpdCBiZXNlZW1zIHVzLAphcyBEZW1vc3RoZW5lcyBzYXlzLCB0byBibHVzaCBldmVuIHdoZW4gd2UgYXJlCnByYWlzZWQgYnkgb3RoZXJzLiBJIGRvIG5vdCBtZWFuIHRvIGRlbnkgdGhhdAp0aGVyZSBhcmUgb2NjYXNpb25zIHdoZW4gYW4gb3JhdG9yIG1heSBzcGVhayBvZgpoaXMgb3duIGFjaGlldmVtZW50cywgYXMgRGVtb3N0aGVuZXMgaGltc2VsZiBkb2VzCmluIGhpcyBkZWZlbmNlIG9mIEN0ZXNpcGhvbi48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5EZSBDb3IuPC9oaT4gMTI4Ljwvbm90ZT4gQnV0IG9uIHRoYXQgb2NjYXNpb24KaGUgcXVhbGlmaWVkIGhpcyBzdGF0ZW1lbnRzIGluIHN1Y2ggYSB3YXkgYXMgdG8gc2hvdwp0aGF0IGhlIHdhcyBjb21wZWxsZWQgYnkgbmVjZXNzaXR5IHRvIGRvIHNvLCBhbmQgdG8KdGhyb3cgdGhlIG9kaXVtIGF0dGFjaGluZyB0byBzdWNoIGEgcHJvY2VlZGluZyBvbgp0aGUgbWFuIHdobyBoYWQgZm9yY2VkIGhpbSB0byBpdC48bWlsZXN0b25lIG49IjIzIiB1bml0PSJzZWN0aW9uIiAvPiBBZ2FpbiwgQ2ljZXJvCm9mdGVuIHNwZWFrcyBvZiBoaXMgc3VwcHJlc3Npb24gb2YgdGhlIENhdGlsaW5hcmlhbgpjb25zcGlyYWN5LCBidXQgZWl0aGVyIGF0dHJpYnV0ZXMgaGlzIHN1Y2Nlc3MgdG8gdGhlCgo8cGIgaWQ9InAuMTY5IiAvPgoKY291cmFnZSBzaG93biBieSB0aGUgc2VuYXRlIG9yIHRvIHRoZSBwcm92aWRlbmNlIG9mCnRoZSBpbW1vcnRhbCBnb2RzLiBJZiBoZSBwdXRzIGZvcndhcmQgc3Ryb25nZXIgY2xhaW1zCnRvIG1lcml0LCBpdCBpcyBnZW5lcmFsbHkgd2hlbiBzcGVha2luZyBhZ2FpbnN0IGhpcwplbmVtaWVzIGFuZCBkZXRyYWN0b3JzOyBmb3IgaGUgd2FzIGJvdW5kIHRvIGRlZmVuZApoaXMgYWN0aW9ucyB3aGVuIHRoZXkgd2VyZSBkZW5vdW5jZWQgYXMgZGlzY3JlZGl0YWJsZS48bWlsZXN0b25lIG49IjI0IiB1bml0PSJzZWN0aW9uIiAvPiBPbmUgY291bGQgb25seSB3aXNoIHRoYXQgaGUgaGFkIHNob3duCmdyZWF0ZXIgcmVzdHJhaW50IGluIGhpcyBwb2Vtcywgd2hpY2ggdGhvc2Ugd2hvIGxvdmUKaGltIG5vdCBhcmUgbmV2ZXIgd2Vhcnkgb2YgY3JpdGljaXNpbmcuIEkgcmVmZXIgdG8KcGFzc2FnZXMgc3VjaCBhczo8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkZyb20gdGhlIHBvZW0gb24gaGlzIGNvbnN1bHNoaXAuPC9ub3RlPgoKPHF1b3RlIHJlbmQ9ImJsb2NrcXVvdGUiPgo8cXVvdGU+PGw+TGV0IGFybXMgYmVmb3JlIHRoZSBwZWFjZWZ1bCB0b2dhIHlpZWxkLDwvbD4KPGw+TGF1cmVscyB0byBlbG9xdWVuY2UgcmVzaWduIHRoZSBmaWVsZCw8L2w+PC9xdW90ZT48L3F1b3RlPgoKb3IKCjxxdW90ZSByZW5kPSJibG9ja3F1b3RlIj4KPGw+PHF1b3RlPk8gaGFwcHkgUm9tZSwgYm9ybiBpbiBteSBjb25zdWxzaGlwITwvcXVvdGU+PC9sPjwvcXVvdGU+Cgp0b2dldGhlciB3aXRoIHRoYXQgPHF1b3RlPkp1cGl0ZXIsIGJ5IHdob20gaGUgaXMKc3VtbW9uZWQgdG8gdGhlIGFzc2VtYmx5IG9mIHRoZSBnb2RzLDwvcXVvdGU+IGFuZCB0aGUKPHF1b3RlPk1pbmVydmEgdGhhdCB0YXVnaHQgaGltIGhlciBhY2NvbXBsaXNobWVudHM8L3F1b3RlPjsKZXh0cmF2YWdhbmNlcyB3aGljaCBoZSBwZXJtaXR0ZWQgaGltc2VsZiBpbiBpbWl0YXRpb24gb2YgY2VydGFpbiBwcmVjZWRlbnRzIGluIEdyZWVrIGxpdGVyYXR1cmUuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['11.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIGFzIGEgcnVsZSBoZSBoYWQKc29tZSBzb3VuZCByZWFzb24gZm9yIGhpcyBzZWxmLXByYWlzZS4gRm9yIGhlIHdhcwplaXRoZXIgZGVmZW5kaW5nIHRob3NlIHdobyBoYWQgYXNzaXN0ZWQgaGltIHRvIGNydXNoCnRoZSBjb25zcGlyYWN5IG9mIENhdGlsaW5lLCBvciB3YXMgcmVwbHlpbmcgdG8gYXR0YWNrcwptYWRlIHVwb24gaGltIGJ5IHRob3NlIHdobyBlbnZpZWQgaGlzIHBvc2l0aW9uOwphdHRhY2tzIHdoaWNoIGhlIHdhcyBzbyBmYXIgdW5hYmxlIHRvIHdpdGhzdGFuZAp0aGF0IGhlIHN1ZmZlcmVkIGV4aWxlIGFzIHRoZSBwZW5hbHR5IGZvciBoYXZpbmcKc2F2ZWQgaGlzIGNvdW50cnkuIENvbnNlcXVlbnRseSwgd2UgbWF5IHJlZ2FyZApoaXMgZnJlcXVlbnQgcmVmZXJlbmNlIHRvIHRoZSBkZWVkcyBhY2NvbXBsaXNoZWQKaW4gaGlzIGNvbnN1bHNoaXAgYXMgYmVpbmcgZHVlIHF1aXRlIGFzIG11Y2ggdG8gdGhlCm5lY2Vzc2l0aWVzIG9mIGRlZmVuY2UgYXMgdG8gdGhlIHByb21wdGluZ3Mgb2YgdmFpbmdsb3J5LjwvdHJhbnNsYXRpb24+"
translation['11.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz4gQXMgcmVnYXJkcyBoaXMgb3duIGVsb3F1ZW5jZSwgaGUgbmV2ZXIKbWFkZSBpbW1vZGVyYXRlIGNsYWltcyBmb3IgaXQgaW4gaGlzIHBsZWFkaW5nLCB3aGlsZQpoZSBhbHdheXMgcGFpZCBhIGhhbmRzb21lIHRyaWJ1dGUgdG8gdGhlIGVsb3F1ZW5jZQpvZiB0aGUgYWR2b2NhdGUsIHdobyBvcHBvc2VkIGhpbS4gRm9yIGV4YW1wbGUsCnRoZXJlIGFyZSBwYXNzYWdlcyBzdWNoIGFzIHRoZSBmb2xsb3dpbmc6IDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPklmIHRoZXJlCmJlIGF1Z2h0IG9mIHRhbGVudCBpbiBtZSwgYW5kIEkgYW0gb25seSB0b28gY29uc2Npb3VzCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xNjciIC8+Cgpob3cgbGl0dGxlIGl0IGlzLDwvcXVvdGU+PHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTY3IiAvPgoKaG93IGxpdHRsZSBpdCBpcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+UHJvIEFyY2guPC9oaT4gaS4gSS48L25vdGU+IGFuZCwgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+UHJvIEFyY2guPC9oaT4gaS4gSS48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5JbiBkZWZhdWx0IG9mIHRhbGVudCwgSSB0dXJuZWQKdG8gaW5kdXN0cnkgZm9yIGFpZC48L3F1b3RlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Qcm8gUXVpbnQuPC9oaT4gaS4gNC48L25vdGU+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+UHJvIFF1aW50LjwvaGk+IGkuIDQuPC90cmFuc2xhdGlvbj4="
translation['11.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIGluIGhpcyBzcGVlY2ggYWdhaW5zdApDYWVjaWxpdXMgb24gdGhlIHNlbGVjdGlvbiBvZiBhbiBhY2N1c2VyIGZvciBWZXJyZXMsCmRlc3BpdGUgdGhlIGZhY3QgdGhhdCB0aGUgcXVlc3Rpb24gYXMgdG8gd2hpY2ggd2FzCnRoZSBtb3N0IGNhcGFibGUgcGxlYWRlciwgd2FzIGEgZmFjdG9yIG9mIGdyZWF0CmltcG9ydGFuY2UsIGhlIHJhdGhlciBkZXByZWNpYXRlZCBoaXMgb3Bwb25lbnQncwplbG9xdWVuY2UgdGhhbiBleGFsdGVkIGhpcyBvd24sIGFuZCBhc3NlcnRlZCB0aGF0CmhlIGhhZCBkb25lIGFsbCBpbiBoaXMgcG93ZXIgdG8gbWFrZSBoaW1zZWxmIGFuCm9yYXRvciw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGl2LiBpbiBDYWVjLjwvaGk+IHhpaS4gNDAuPC9ub3RlPiB0aG91Z2ggaGUga25ldyBoZSBoYWQgbm90IHN1Y2NlZWRlZC48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5EaXYuIGluIENhZWMuPC9oaT4geGlpLiA0MC48L3RyYW5zbGF0aW9uPg=="
translation['11.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gSW4KaGlzIGxldHRlcnMgdG8gaW50aW1hdGUgZnJpZW5kcywgaXQgaXMgdHJ1ZSwgYW5kIG9jY2FzaW9uYWxseSBpbiBoaXMgZGlhbG9ndWVzLCBoZSB0ZWxscyB0aGUgdHJ1dGggb2YgaGlzIG93bgplbG9xdWVuY2UsIHRob3VnaCBpbiB0aGUgbGF0dGVyIGNhc2UgaGUgaXMgY2FyZWZ1bAphbHdheXMgdG8gcGxhY2UgdGhlIHJlbWFya3MgaW4gcXVlc3Rpb24gaW4gdGhlCm1vdXRoIG9mIHNvbWUgb3RoZXIgY2hhcmFjdGVyLiBBbmQgeWV0IEkgYW0gbm90CnN1cmUgdGhhdCBvcGVuIGJvYXN0aW5nIGlzIG5vdCBtb3JlIHRvbGVyYWJsZSwgb3dpbmcKdG8gaXRzIHNoZWVyIHN0cmFpZ2h0Zm9yd2FyZG5lc3MsIHRoYW4gdGhhdCBwZXJ2ZXJ0ZWQKZm9ybSBvZiBzZWxmLXByYWlzZSwgd2hpY2ggbWFrZXMgdGhlIG1pbGxpb25haXJlIHNheQp0aGF0IGhlIGlzIG5vdCBhIHBvb3IgbWFuLCB0aGUgbWFuIG9mIG1hcmsgZGVzY3JpYmUKaGltc2VsZiBhcyBvYnNjdXJlLCB0aGUgcG93ZXJmdWwgcG9zZSBhcyB3ZWFrLAphbmQgdGhlIGVsb3F1ZW50IGFzIHVuc2tpbGxlZCBhbmQgZXZlbiBpbmFydGljdWxhdGUuCjwvdHJhbnNsYXRpb24+"
translation['11.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIG1vc3Qgb3N0ZW50YXRpb3VzIGtpbmQgb2YgYm9hc3RpbmcgdGFrZXMKdGhlIGZvcm0gb2YgYWN0dWFsIHNlbGYtZGVyaXNpb24uIExldCB1cyB0aGVyZWZvcmUKbGVhdmUgaXQgdG8gb3RoZXJzIHRvIHByYWlzZSB1cy4gRm9yIGl0IGJlc2VlbXMgdXMsCmFzIERlbW9zdGhlbmVzIHNheXMsIHRvIGJsdXNoIGV2ZW4gd2hlbiB3ZSBhcmUKcHJhaXNlZCBieSBvdGhlcnMuIEkgZG8gbm90IG1lYW4gdG8gZGVueSB0aGF0CnRoZXJlIGFyZSBvY2Nhc2lvbnMgd2hlbiBhbiBvcmF0b3IgbWF5IHNwZWFrIG9mCmhpcyBvd24gYWNoaWV2ZW1lbnRzLCBhcyBEZW1vc3RoZW5lcyBoaW1zZWxmIGRvZXMKaW4gaGlzIGRlZmVuY2Ugb2YgQ3Rlc2lwaG9uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5EZSBDb3IuPC9oaT4gMTI4Ljwvbm90ZT4gQnV0IG9uIHRoYXQgb2NjYXNpb24KaGUgcXVhbGlmaWVkIGhpcyBzdGF0ZW1lbnRzIGluIHN1Y2ggYSB3YXkgYXMgdG8gc2hvdwp0aGF0IGhlIHdhcyBjb21wZWxsZWQgYnkgbmVjZXNzaXR5IHRvIGRvIHNvLCBhbmQgdG8KdGhyb3cgdGhlIG9kaXVtIGF0dGFjaGluZyB0byBzdWNoIGEgcHJvY2VlZGluZyBvbgp0aGUgbWFuIHdobyBoYWQgZm9yY2VkIGhpbSB0byBpdC48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5EZSBDb3IuPC9oaT4gMTI4LjwvdHJhbnNsYXRpb24+"
translation['11.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIENpY2VybwpvZnRlbiBzcGVha3Mgb2YgaGlzIHN1cHByZXNzaW9uIG9mIHRoZSBDYXRpbGluYXJpYW4KY29uc3BpcmFjeSwgYnV0IGVpdGhlciBhdHRyaWJ1dGVzIGhpcyBzdWNjZXNzIHRvIHRoZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTY5IiAvPgoKY291cmFnZSBzaG93biBieSB0aGUgc2VuYXRlIG9yIHRvIHRoZSBwcm92aWRlbmNlIG9mCnRoZSBpbW1vcnRhbCBnb2RzLiBJZiBoZSBwdXRzIGZvcndhcmQgc3Ryb25nZXIgY2xhaW1zCnRvIG1lcml0LCBpdCBpcyBnZW5lcmFsbHkgd2hlbiBzcGVha2luZyBhZ2FpbnN0IGhpcwplbmVtaWVzIGFuZCBkZXRyYWN0b3JzOyBmb3IgaGUgd2FzIGJvdW5kIHRvIGRlZmVuZApoaXMgYWN0aW9ucyB3aGVuIHRoZXkgd2VyZSBkZW5vdW5jZWQgYXMgZGlzY3JlZGl0YWJsZS48L3RyYW5zbGF0aW9uPg=="
translation['11.1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz4gT25lIGNvdWxkIG9ubHkgd2lzaCB0aGF0IGhlIGhhZCBzaG93bgpncmVhdGVyIHJlc3RyYWludCBpbiBoaXMgcG9lbXMsIHdoaWNoIHRob3NlIHdobyBsb3ZlCmhpbSBub3QgYXJlIG5ldmVyIHdlYXJ5IG9mIGNyaXRpY2lzaW5nLiBJIHJlZmVyIHRvCnBhc3NhZ2VzIHN1Y2ggYXM6PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkZyb20gdGhlIHBvZW0gb24gaGlzIGNvbnN1bHNoaXAuPC9ub3RlPgoKPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iYmxvY2txdW90ZSI+CjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TGV0IGFybXMgYmVmb3JlIHRoZSBwZWFjZWZ1bCB0b2dhIHlpZWxkLDwvbD4KPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5MYXVyZWxzIHRvIGVsb3F1ZW5jZSByZXNpZ24gdGhlIGZpZWxkLDwvbD48L3F1b3RlPjwvcXVvdGU+CgpvcgoKPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PGwgY2xhc3M9InRyYW5zbGF0aW9uIj5MZXQgYXJtcyBiZWZvcmUgdGhlIHBlYWNlZnVsIHRvZ2EgeWllbGQsPC9sPgo8bCBjbGFzcz0idHJhbnNsYXRpb24iPkxhdXJlbHMgdG8gZWxvcXVlbmNlIHJlc2lnbiB0aGUgZmllbGQsPC9sPjwvcXVvdGU+PGwgY2xhc3M9InRyYW5zbGF0aW9uIj5MZXQgYXJtcyBiZWZvcmUgdGhlIHBlYWNlZnVsIHRvZ2EgeWllbGQsPC9sPgo8bCBjbGFzcz0idHJhbnNsYXRpb24iPkxhdXJlbHMgdG8gZWxvcXVlbmNlIHJlc2lnbiB0aGUgZmllbGQsPC9sPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9ImJsb2NrcXVvdGUiPgo8bCBjbGFzcz0idHJhbnNsYXRpb24iPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPk8gaGFwcHkgUm9tZSwgYm9ybiBpbiBteSBjb25zdWxzaGlwITwvcXVvdGU+PC9sPjwvcXVvdGU+Cgp0b2dldGhlciB3aXRoIHRoYXQgPGwgY2xhc3M9InRyYW5zbGF0aW9uIj48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5PIGhhcHB5IFJvbWUsIGJvcm4gaW4gbXkgY29uc3Vsc2hpcCE8L3F1b3RlPjwvbD48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5PIGhhcHB5IFJvbWUsIGJvcm4gaW4gbXkgY29uc3Vsc2hpcCE8L3F1b3RlPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkp1cGl0ZXIsIGJ5IHdob20gaGUgaXMKc3VtbW9uZWQgdG8gdGhlIGFzc2VtYmx5IG9mIHRoZSBnb2RzLDwvcXVvdGU+IGFuZCB0aGUKPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TWluZXJ2YSB0aGF0IHRhdWdodCBoaW0gaGVyIGFjY29tcGxpc2htZW50czwvcXVvdGU+OwpleHRyYXZhZ2FuY2VzIHdoaWNoIGhlIHBlcm1pdHRlZCBoaW1zZWxmIGluIGltaXRhdGlvbiBvZiBjZXJ0YWluIHByZWNlZGVudHMgaW4gR3JlZWsgbGl0ZXJhdHVyZS48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hpbGUgaXQgaXMgdW5zZWVtbHkgdG8gbWFrZSBhIGJvYXN0IG9mIG9uZSdzCmVsb3F1ZW5jZSwgaXQgaXMsIGhvd2V2ZXIsIGF0IHRpbWVzIHBlcm1pc3NpYmxlIHRvCmV4cHJlc3MgY29uZmlkZW5jZSBpbiBpdC4gV2hvLCBmb3IgaW5zdGFuY2UsIGNhbgpibGFtZSB0aGUgZm9sbG93aW5nPzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPlBoaWwuPC9oaT4gPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz5pLiAyLjwvbm90ZT4gPHF1b3RlPldoYXQsIHRoZW4sIGFtIEkgdG8gdGhpbms/ClRoYXQgSSBhbSBoZWxkIGluIGNvbnRlbXB0PyBJIHNlZSBub3RoaW5nIGVpdGhlcgppbiBteSBwYXN0IGxpZmUsIG9yIG15IHBvc2l0aW9uLCBvciBzdWNoIHBvb3IgdGFsZW50cwphcyBJIG1heSBwb3NzZXNzLCB0aGF0IEFudG9ueSBjYW4gYWZmb3JkIHRvIGRlc3Bpc2UuPC9xdW90ZT4KQW5kIGEgbGl0dGxlIGxhdGVyIGhlIHNwZWFrcyB5ZXQgbW9yZSBvcGVubHk6PG1pbGVzdG9uZSBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz4KPHF1b3RlPk9yIGRpZCBoZSB3aXNoIHRvIGNoYWxsZW5nZSBtZSB0byBhIGNvbnRlc3Qgb2YKZWxvcXVlbmNlPyBJIGNvdWxkIHdpc2ggZm9yIG5vdGhpbmcgYmV0dGVyLiBGb3IKd2hhdCBhbXBsZXIgb3IgcmljaGVyIHRoZW1lIGNvdWxkIEkgaG9wZSB0byBmaW5kCnRoYW4gdG8gc3BlYWsgYXQgb25jZSBmb3IgbXlzZWxmIGFuZCBhZ2FpbnN0CkFudG9ueT88L3F1b3RlPjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hpbGUgaXQgaXMgdW5zZWVtbHkgdG8gbWFrZSBhIGJvYXN0IG9mIG9uZSdzCmVsb3F1ZW5jZSwgaXQgaXMsIGhvd2V2ZXIsIGF0IHRpbWVzIHBlcm1pc3NpYmxlIHRvCmV4cHJlc3MgY29uZmlkZW5jZSBpbiBpdC4gV2hvLCBmb3IgaW5zdGFuY2UsIGNhbgpibGFtZSB0aGUgZm9sbG93aW5nPzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5QaGlsLjwvaGk+IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz5pLiAyLjwvbm90ZT4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+UGhpbC48L2hpPiA8L3RyYW5zbGF0aW9uPg=="
translation['11.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['11.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPmkuIDIuPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hhdCwgdGhlbiwgYW0gSSB0byB0aGluaz8KVGhhdCBJIGFtIGhlbGQgaW4gY29udGVtcHQ/IEkgc2VlIG5vdGhpbmcgZWl0aGVyCmluIG15IHBhc3QgbGlmZSwgb3IgbXkgcG9zaXRpb24sIG9yIHN1Y2ggcG9vciB0YWxlbnRzCmFzIEkgbWF5IHBvc3Nlc3MsIHRoYXQgQW50b255IGNhbiBhZmZvcmQgdG8gZGVzcGlzZS48L3F1b3RlPgpBbmQgYSBsaXR0bGUgbGF0ZXIgaGUgc3BlYWtzIHlldCBtb3JlIG9wZW5seTo8L3RyYW5zbGF0aW9uPg=="
translation['11.2.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz4KPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T3IgZGlkIGhlIHdpc2ggdG8gY2hhbGxlbmdlIG1lIHRvIGEgY29udGVzdCBvZgplbG9xdWVuY2U/IEkgY291bGQgd2lzaCBmb3Igbm90aGluZyBiZXR0ZXIuIEZvcgp3aGF0IGFtcGxlciBvciByaWNoZXIgdGhlbWUgY291bGQgSSBob3BlIHRvIGZpbmQKdGhhbiB0byBzcGVhayBhdCBvbmNlIGZvciBteXNlbGYgYW5kIGFnYWluc3QKQW50b255PzwvcXVvdGU+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjciIHVuaXQ9InNlY3Rpb24iIC8+QW5vdGhlciBmb3JtIG9mIGFycm9nYW5jZSBpcyBkaXNwbGF5ZWQgYnkgdGhvc2Ugd2hvCmRlY2xhcmUgdGhhdCB0aGV5IGhhdmUgY29tZSB0byBhIGNsZWFyIGNvbnZpY3Rpb24gb2YKCjxwYiBpZD0icC4xNzEiIC8+Cgp0aGUganVzdGljZSBvZiB0aGVpciBjYXVzZSwgd2hpY2ggdGhleSB3b3VsZCBub3QKb3RoZXJ3aXNlIGhhdmUgdW5kZXJ0YWtlbi4gRm9yIHRoZSBqdWRnZXMgZ2l2ZQpidXQgYSByZWx1Y3RhbnQgaGVhcmluZyB0byBzdWNoIGFzIHByZXN1bWUgdG8KYW50aWNpcGF0ZSB0aGVpciB2ZXJkaWN0LCBhbmQgdGhlIG9yYXRvciBjYW5ub3QgaG9wZQp0aGF0IGhpcyBvcHBvbmVudHMgd2lsbCByZWdhcmQgaGlzIDxoaSByZW5kPSJpdGFsaWNzIj5pcHNlIGRpeGl0PC9oaT4gd2l0aCB0aGUKdmVuZXJhdGlvbiBhY2NvcmRlZCBieSB0aGUgUHl0aGFnb3JlYW5zIHRvIHRoYXQgb2YKdGhlaXIgbWFzdGVyLiBCdXQgdGhpcyBmYXVsdCB3aWxsIHZhcnkgaW4gc2VyaW91c25lc3MKYWNjb3JkaW5nIHRvIHRoZSBjaGFyYWN0ZXIgb2YgdGhlIG9yYXRvciB3aG8gdXNlcwpzdWNoIGxhbmd1YWdlLjxtaWxlc3RvbmUgbj0iMjgiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBzdWNoIGFzc2VydGlvbnMgbWF5IHRvIHNvbWUKZXh0ZW50IGJlIGp1c3RpZmllZCBieSB0aGUgYWdlLCByYW5rLCBhbmQgYXV0aG9yaXR5Cm9mIHRoZSBzcGVha2VyLiBCdXQgc2NhcmNlbHkgYW55IG9yYXRvciBpcyBwb3NzZXNzZWQKb2YgdGhlc2UgYWR2YW50YWdlcyB0byBzdWNoIGFuIGV4dGVudCBhcyB0byBleGVtcHQKaGltIGZyb20gdGhlIGR1dHkgb2YgdGVtcGVyaW5nIHN1Y2ggYXNzZXJ0aW9ucyBieQphIGNlcnRhaW4gc2hvdyBvZiBtb2Rlc3R5LCBhIHJlbWFyayB3aGljaCBhbHNvCmFwcGxpZXMgdG8gYWxsIHBhc3NhZ2VzIGluIHdoaWNoIHRoZSBhZHZvY2F0ZSBkcmF3cwphbnkgb2YgaGlzIGFyZ3VtZW50cyBmcm9tIGhpcyBvd24gcGVyc29uLiBXaGF0CmNvdWxkIGhhdmUgYmVlbiBtb3JlIHByZXN1bXB0dW91cyB0aGFuIGlmIENpY2VybwpoYWQgYXNzZXJ0ZWQgdGhhdCB0aGUgZmFjdCB0aGF0IGEgbWFuIHdhcyB0aGUgc29uCm9mIGEgUm9tYW4ga25pZ2h0IHNob3VsZCBuZXZlciBiZSByZWdhcmRlZCBhcyBhCnNlcmlvdXMgY2hhcmdlLCBpbiBhIGNhc2UgaW4gd2hpY2ggPGhpIHJlbmQ9Iml0YWxpY3MiPmhlPC9oaT4gd2FzIGFwcGVhcmluZwpmb3IgdGhlIGRlZmVuY2U/IEJ1dCBoZSBzdWNjZWVkZWQgaW4gZ2l2aW5nIHRoaXMKdmVyeSBhcmd1bWVudCBhIGZhdm91cmFibGUgdHVybiBieSBhc3NvY2lhdGluZyBoaXMKb3duIHJhbmsgd2l0aCB0aGF0IG9mIHRoZSBqdWRnZXMsIGFuZCBzYXlpbmcsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+UHJvIENhZWwuIGlpLjwvaGk+IDQuPC9ub3RlPgo8cXVvdGU+VGhlIGZhY3Qgb2YgYSBtYW4gYmVpbmcgdGhlIHNvbiBvZiBhIFJvbWFuIGtuaWdodApzaG91bGQgbmV2ZXIgaGF2ZSBiZWVuIHB1dCBmb3J3YXJkIGFzIGEgY2hhcmdlIGJ5CnRoZSBwcm9zZWN1dGlvbiB3aGVuIHRoZXNlIGdlbnRsZW1lbiB3ZXJlIGluIHRoZQpqdXJ5LWJveCBhbmQgSSB3YXMgYXBwZWFyaW5nIGZvciB0aGUgZGVmZW5kYW50LjwvcXVvdGU+PC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['11.2.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5Bbm90aGVyIGZvcm0gb2YgYXJyb2dhbmNlIGlzIGRpc3BsYXllZCBieSB0aG9zZSB3aG8KZGVjbGFyZSB0aGF0IHRoZXkgaGF2ZSBjb21lIHRvIGEgY2xlYXIgY29udmljdGlvbiBvZgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTcxIiAvPgoKdGhlIGp1c3RpY2Ugb2YgdGhlaXIgY2F1c2UsIHdoaWNoIHRoZXkgd291bGQgbm90Cm90aGVyd2lzZSBoYXZlIHVuZGVydGFrZW4uIEZvciB0aGUganVkZ2VzIGdpdmUKYnV0IGEgcmVsdWN0YW50IGhlYXJpbmcgdG8gc3VjaCBhcyBwcmVzdW1lIHRvCmFudGljaXBhdGUgdGhlaXIgdmVyZGljdCwgYW5kIHRoZSBvcmF0b3IgY2Fubm90IGhvcGUKdGhhdCBoaXMgb3Bwb25lbnRzIHdpbGwgcmVnYXJkIGhpcyA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5pcHNlIGRpeGl0PC9oaT4gd2l0aCB0aGUKdmVuZXJhdGlvbiBhY2NvcmRlZCBieSB0aGUgUHl0aGFnb3JlYW5zIHRvIHRoYXQgb2YKdGhlaXIgbWFzdGVyLiBCdXQgdGhpcyBmYXVsdCB3aWxsIHZhcnkgaW4gc2VyaW91c25lc3MKYWNjb3JkaW5nIHRvIHRoZSBjaGFyYWN0ZXIgb2YgdGhlIG9yYXRvciB3aG8gdXNlcwpzdWNoIGxhbmd1YWdlLjwvdHJhbnNsYXRpb24+"
translation['11.2.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHN1Y2ggYXNzZXJ0aW9ucyBtYXkgdG8gc29tZQpleHRlbnQgYmUganVzdGlmaWVkIGJ5IHRoZSBhZ2UsIHJhbmssIGFuZCBhdXRob3JpdHkKb2YgdGhlIHNwZWFrZXIuIEJ1dCBzY2FyY2VseSBhbnkgb3JhdG9yIGlzIHBvc3Nlc3NlZApvZiB0aGVzZSBhZHZhbnRhZ2VzIHRvIHN1Y2ggYW4gZXh0ZW50IGFzIHRvIGV4ZW1wdApoaW0gZnJvbSB0aGUgZHV0eSBvZiB0ZW1wZXJpbmcgc3VjaCBhc3NlcnRpb25zIGJ5CmEgY2VydGFpbiBzaG93IG9mIG1vZGVzdHksIGEgcmVtYXJrIHdoaWNoIGFsc28KYXBwbGllcyB0byBhbGwgcGFzc2FnZXMgaW4gd2hpY2ggdGhlIGFkdm9jYXRlIGRyYXdzCmFueSBvZiBoaXMgYXJndW1lbnRzIGZyb20gaGlzIG93biBwZXJzb24uIFdoYXQKY291bGQgaGF2ZSBiZWVuIG1vcmUgcHJlc3VtcHR1b3VzIHRoYW4gaWYgQ2ljZXJvCmhhZCBhc3NlcnRlZCB0aGF0IHRoZSBmYWN0IHRoYXQgYSBtYW4gd2FzIHRoZSBzb24Kb2YgYSBSb21hbiBrbmlnaHQgc2hvdWxkIG5ldmVyIGJlIHJlZ2FyZGVkIGFzIGEKc2VyaW91cyBjaGFyZ2UsIGluIGEgY2FzZSBpbiB3aGljaCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5oZTwvaGk+IHdhcyBhcHBlYXJpbmcKZm9yIHRoZSBkZWZlbmNlPyBCdXQgaGUgc3VjY2VlZGVkIGluIGdpdmluZyB0aGlzCnZlcnkgYXJndW1lbnQgYSBmYXZvdXJhYmxlIHR1cm4gYnkgYXNzb2NpYXRpbmcgaGlzCm93biByYW5rIHdpdGggdGhhdCBvZiB0aGUganVkZ2VzLCBhbmQgc2F5aW5nLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Qcm8gQ2FlbC4gaWkuPC9oaT4gNC48L25vdGU+CjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlBybyBDYWVsLiBpaS48L2hpPiA0LjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPlRoZSBmYWN0IG9mIGEgbWFuIGJlaW5nIHRoZSBzb24gb2YgYSBSb21hbiBrbmlnaHQKc2hvdWxkIG5ldmVyIGhhdmUgYmVlbiBwdXQgZm9yd2FyZCBhcyBhIGNoYXJnZSBieQp0aGUgcHJvc2VjdXRpb24gd2hlbiB0aGVzZSBnZW50bGVtZW4gd2VyZSBpbiB0aGUKanVyeS1ib3ggYW5kIEkgd2FzIGFwcGVhcmluZyBmb3IgdGhlIGRlZmVuZGFudC48L3F1b3RlPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI5IiB1bml0PSJzZWN0aW9uIiAvPkFuIGltcHVkZW50LCBkaXNvcmRlcmx5LCBvciBhbmdyeSB0b25lIGlzIGFsd2F5cwp1bnNlZW1seSwgbm8gbWF0dGVyIHdobyBpdCBiZSB0aGF0IGFzc3VtZXMgaXQ7IGFuZAppdCBiZWNvbWVzIGFsbCB0aGUgbW9yZSByZXByZWhlbnNpYmxlIGluIHByb3BvcnRpb24KdG8gdGhlIGFnZSwgcmFuaywgYW5kIGV4cGVyaWVuY2Ugb2YgdGhlIHNwZWFrZXIuCkJ1dCB3ZSBhcmUgZmFtaWxpYXIgd2l0aCB0aGUgc2lnaHQgb2YgY2VydGFpbiBicmF3bGluZyBhZHZvY2F0ZXMgd2hvIGFyZSByZXN0cmFpbmVkIG5laXRoZXIgYnkgcmVzcGVjdApmb3IgdGhlIGNvdXJ0IG5vciBieSB0aGUgcmVjb2duaXNlZCBtZXRob2RzIGFuZAoKPHBiIGlkPSJwLjE3MyIgLz4KCm1hbm5lcnMgb2YgcGxlYWRpbmcuIFRoZSBvYnZpb3VzIGluZmVyZW5jZSBmcm9tCnRoaXMgYXR0aXR1ZGUgb2YgbWluZCBpcyB0aGF0IHRoZXkgYXJlIHV0dGVybHkgcmVja2xlc3MKYm90aCBpbiB1bmRlcnRha2luZyBjYXNlcyBhbmQgaW4gcGxlYWRpbmcgdGhlbS4KPG1pbGVzdG9uZSBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYSBtYW4ncyBjaGFyYWN0ZXIgaXMgZ2VuZXJhbGx5IHJldmVhbGVkIGFuZCB0aGUKc2VjcmV0cyBvZiBoaXMgaGVhcnQgYXJlIGxhaWQgYmFyZSBieSBoaXMgbWFubmVyIG9mIHNwZWFraW5nLCBhbmQgdGhlcmUgaXMgZ29vZCBncm91bmQgZm9yIHRoZSBHcmVlayBhcGhvcmlzbQp0aGF0LCA8cXVvdGU+YXMgYSBtYW4gbGl2ZXMsIHNvIHdpbGwgaGUgc3BlYWsuPC9xdW90ZT4gVGhlIGZvbGxvd2luZyB2aWNlcyBhcmUgb2YgYSBtZWFuZXIgdHlwZTogZ3JvdmVsbGluZyBmbGF0dGVyeSwKYWZmZWN0ZWQgYnVmZm9vbmVyeSwgaW1tb2Rlc3R5IGluIGRlYWxpbmcgd2l0aCB0aGluZ3MKb3Igd29yZHMgd2hpY2ggYXJlIHVuc2VlbWx5IG9yIG9ic2NlbmUsIGFuZCBkaXNyZWdhcmQgb2YgYXV0aG9yaXR5IG9uIGFsbCBhbmQgZXZlcnkgb2NjYXNpb24uIFRoZXkKYXJlIGZhdWx0cyB3aGljaCwgYXMgYSBydWxlLCBhcmUgZm91bmQgaW4gdGhvc2Ugd2hvCmFyZSBvdmVyLWFueGlvdXMgZWl0aGVyIHRvIHBsZWFzZSBvciBhbXVzZS48L3A+CjwvdHJhbnNsYXRpb24+"
translation['11.2.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5BbiBpbXB1ZGVudCwgZGlzb3JkZXJseSwgb3IgYW5ncnkgdG9uZSBpcyBhbHdheXMKdW5zZWVtbHksIG5vIG1hdHRlciB3aG8gaXQgYmUgdGhhdCBhc3N1bWVzIGl0OyBhbmQKaXQgYmVjb21lcyBhbGwgdGhlIG1vcmUgcmVwcmVoZW5zaWJsZSBpbiBwcm9wb3J0aW9uCnRvIHRoZSBhZ2UsIHJhbmssIGFuZCBleHBlcmllbmNlIG9mIHRoZSBzcGVha2VyLgpCdXQgd2UgYXJlIGZhbWlsaWFyIHdpdGggdGhlIHNpZ2h0IG9mIGNlcnRhaW4gYnJhd2xpbmcgYWR2b2NhdGVzIHdobyBhcmUgcmVzdHJhaW5lZCBuZWl0aGVyIGJ5IHJlc3BlY3QKZm9yIHRoZSBjb3VydCBub3IgYnkgdGhlIHJlY29nbmlzZWQgbWV0aG9kcyBhbmQKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjE3MyIgLz4KCm1hbm5lcnMgb2YgcGxlYWRpbmcuIFRoZSBvYnZpb3VzIGluZmVyZW5jZSBmcm9tCnRoaXMgYXR0aXR1ZGUgb2YgbWluZCBpcyB0aGF0IHRoZXkgYXJlIHV0dGVybHkgcmVja2xlc3MKYm90aCBpbiB1bmRlcnRha2luZyBjYXNlcyBhbmQgaW4gcGxlYWRpbmcgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['11.2.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYSBtYW4ncyBjaGFyYWN0ZXIgaXMgZ2VuZXJhbGx5IHJldmVhbGVkIGFuZCB0aGUKc2VjcmV0cyBvZiBoaXMgaGVhcnQgYXJlIGxhaWQgYmFyZSBieSBoaXMgbWFubmVyIG9mIHNwZWFraW5nLCBhbmQgdGhlcmUgaXMgZ29vZCBncm91bmQgZm9yIHRoZSBHcmVlayBhcGhvcmlzbQp0aGF0LCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5hcyBhIG1hbiBsaXZlcywgc28gd2lsbCBoZSBzcGVhay48L3F1b3RlPiBUaGUgZm9sbG93aW5nIHZpY2VzIGFyZSBvZiBhIG1lYW5lciB0eXBlOiBncm92ZWxsaW5nIGZsYXR0ZXJ5LAphZmZlY3RlZCBidWZmb29uZXJ5LCBpbW1vZGVzdHkgaW4gZGVhbGluZyB3aXRoIHRoaW5ncwpvciB3b3JkcyB3aGljaCBhcmUgdW5zZWVtbHkgb3Igb2JzY2VuZSwgYW5kIGRpc3JlZ2FyZCBvZiBhdXRob3JpdHkgb24gYWxsIGFuZCBldmVyeSBvY2Nhc2lvbi4gVGhleQphcmUgZmF1bHRzIHdoaWNoLCBhcyBhIHJ1bGUsIGFyZSBmb3VuZCBpbiB0aG9zZSB3aG8KYXJlIG92ZXItYW54aW91cyBlaXRoZXIgdG8gcGxlYXNlIG9yIGFtdXNlLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMxIiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCBkaWZmZXJlbnQga2luZHMgb2YgZWxvcXVlbmNlIHN1aXQgZGlmZmVyZW50CnNwZWFrZXJzLiBGb3IgZXhhbXBsZSwgYSBmdWxsLCBoYXVnaHR5LCBib2xkIGFuZApmbG9yaWQgc3R5bGUgd291bGQgYmUgbGVzcyBiZWNvbWluZyB0byBhbiBvbGQgbWFuCnRoYW4gdGhhdCByZXN0cmFpbmVkLCBtaWxkIGFuZCBwcmVjaXNlIHN0eWxlIHRvIHdoaWNoCkNpY2VybyByZWZlcnMsIHdoZW4gaGUgc2F5cyB0aGF0IGhpcyBzdHlsZSBpcyBiZWdpbm5pbmcKdG8gZ3JvdyBncmV5LWhhaXJlZC48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5CcnV0LjwvaGk+IGlpLiA4Ljwvbm90ZT4gSXQgaXMgdGhlIHNhbWUgd2l0aCB0aGVpciBzdHlsZQphcyB0aGVpciBjbG90aGVzOyBwdXJwbGUgYW5kIHNjYXJsZXQgcmFpbWVudCBnb2VzIGlsbAp3aXRoIGdyZXkgaGFpcnMuPG1pbGVzdG9uZSBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz4gSW4gdGhlIHlvdW5nLCBob3dldmVyLCB3ZSBjYW4KZW5kdXJlIGEgcmljaCBhbmQgZXZlbiwgcGVyaGFwcywgYSByaXNreSBzdHlsZS4gT24KdGhlIG90aGVyIGhhbmQsIGEgZHJ5LCBjYXJlZnVsIGFuZCBjb21wcmVzc2VkIHN0eWxlCmlzIHVucGxlYXNpbmcgaW4gdGhlIHlvdW5nIGFzIHN1Z2dlc3RpbmcgdGhlIGFmZmVjdGF0aW9uIG9mIHNldmVyaXR5LCBzaW5jZSBldmVuIHRoZSBhdXRob3JpdHkgb2YgY2hhcmFjdGVyCnRoYXQgZ29lcyB3aXRoIGFnZSBpcyBjb25zaWRlcmVkIGFzIHByZW1hdHVyZSBpbgp5b3VuZyBtZW4uIFNvbGRpZXJzIGFyZSBiZXN0IHN1aXRlZCBieSBhIHNpbXBsZQpzdHlsZS48bWlsZXN0b25lIG49IjMzIiB1bml0PSJzZWN0aW9uIiAvPiBUaG9zZSwgYWdhaW4sIHdobyBtYWtlIG9zdGVudGF0aW91cyBwcm9mZXNzaW9uLCBhcyBzb21lIGRvLCBvZiBiZWluZyBwaGlsb3NvcGhlcnMsIHdvdWxkIGRvCndlbGwgdG8gYXZvaWQgbW9zdCBvZiB0aGUgb3JuYW1lbnRzIG9mIG9yYXRvcnksIG1vcmUKZXNwZWNpYWxseSB0aG9zZSB3aGljaCBjb25zaXN0IGluIGFwcGVhbHMgdG8gdGhlCnBhc3Npb25zLCB3aGljaCB0aGV5IHJlZ2FyZCBhcyBtb3JhbCBibGVtaXNoZXMuIFNvLAp0b28sIHRoZSBlbXBsb3ltZW50IG9mIHJhcmUgd29yZHMgYW5kIG9mIHJoeXRobWljYWwKc3RydWN0dXJlIGFyZSBpbmNvbmdydW91cyB3aXRoIHRoZWlyIHByb2Zlc3Npb24uPG1pbGVzdG9uZSBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCgo8cGIgaWQ9InAuMTc1IiAvPgoKdGhlaXIgYmVhcmRzIGFuZCBnbG9vbXkgYnJvd3MgYXJlIGlsbC1zdWl0ZWQgbm90Cm1lcmVseSB0byBsdXh1cmlhbmNlIG9mIHN0eWxlLCBzdWNoIGFzIHdlIGZpbmQgaW4KQ2ljZXJvJ3MgPHF1b3RlPlJvY2tzIGFuZCBzb2xpdHVkZXMgYW5zd2VyIHRvIHRoZSB2b2ljZSw8L3F1b3RlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPlBybyBBcmNoLjwvaGk+IHZpaWkuIDE5Ljwvbm90ZT4KYnV0IGV2ZW4gdG8gZnVsbC1ibG9vZGVkIHBhc3NhZ2VzIGFzLCA8cXVvdGU+Rm9yIG9uIHlvdSBJCmNhbGwsIHllIGhpbGxzIGFuZCBncm92ZXMgb2YgQWxiYTsgSSBjYWxsIHlvdSB0byBiZWFyCm1lIHdpdG5lc3MsIGFuZCB5ZSwgdG9vLCBmYWxsZW4gYWx0YXJzIG9mIHRoZSBBbGJhbnMsCnRoYXQgd2VyZSBvbmNlIHRoZSBwZWVycyBhbmQgZXF1YWxzIG9mIHRoZSBob2x5CnBsYWNlcyBvZiBSb21lLjwvcXVvdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+UHJvIE1pbC48L2hpPiB4eHhpLiA4NS48L25vdGU+PG1pbGVzdG9uZSBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHRoZSBwdWJsaWMgbWFuLCB3aG8gaXMgdHJ1bHkKd2lzZSBhbmQgZGV2b3RlcyBoaW1zZWxmIG5vdCB0byBpZGxlIGRpc3B1dGF0aW9ucywKYnV0IHRvIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgc3RhdGUsIGZyb20gd2hpY2gKdGhvc2Ugd2hvIGNhbGwgdGhlbXNlbHZlcyBwaGlsb3NvcGhlcnMgaGF2ZSB3aXRoZHJhd24gdGhlbXNlbHZlcyBhZmFyLCB3aWxsIGdsYWRseSBlbXBsb3kgZXZlcnkKbWV0aG9kIHRoYXQgbWF5IGNvbnRyaWJ1dGUgdG8gdGhlIGVuZCB3aGljaCBoZQpzZWVrcyB0byBnYWluIGJ5IGhpcyBlbG9xdWVuY2UsIGFsdGhvdWdoIGhlIHdpbGwgZmlyc3QKZm9ybSBhIGNsZWFyIGNvbmNlcHRpb24gaW4gaGlzIG1pbmQgYXMgdG8gd2hhdCBhaW1zCmFyZSBob25vdXJhYmxlIGFuZCB3aGF0IGFyZSBub3QuPG1pbGVzdG9uZSBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmUgaXMgYSBmb3JtCm9mIGVsb3F1ZW5jZSB3aGljaCBpcyBiZWNvbWluZyBpbiB0aGUgZ3JlYXRlc3QKbWVuLCBidXQgaW5hZG1pc3NpYmxlIGluIG90aGVycy4gRm9yIGV4YW1wbGUsIHRoZQptZXRob2RzIG9mIGVsb3F1ZW5jZSBlbXBsb3llZCBieSBjb21tYW5kZXJzIGFuZApjb25xdWVyb3JzIGluIHRoZWlyIGhvdXIgb2YgdHJpdW1waCBhcmUgdG8gYSBncmVhdApleHRlbnQgdG8gYmUgcmVnYXJkZWQgYXMgaW4gYSBjbGFzcyBhcGFydC4gVGhlCmNvbXBhcmlzb24gb2YgdGhlIGVsb3F1ZW5jZSBvZiBQbG9tcGV5IGFuZCBDYXRvCnRoZSB5b3VuZ2VyLCB3aG8gc2xldyBoaW1zZWxmIGluIHRoZSBjaXZpbCB3YXIsIHdpbGwKaWxsdXN0cmF0ZSBteSBtZWFuaW5nLiBUaGUgZm9ybWVyIHdhcyBleHRyYW9yZGluYXJpbHkgZWxvcXVlbnQgaW4gdGhlIGRlc2NyaXB0aW9uIG9mIGhpcyBvd24KZXhwbG9pdHMsIHdoaWxlIHRoZSBsYXR0ZXIncyBwb3dlcnMgd2VyZSBkaXNwbGF5ZWQKaW4gZGViYXRlcyBpbiB0aGUgc2VuYXRlLjxtaWxlc3RvbmUgbj0iMzciIHVuaXQ9InNlY3Rpb24iIC8+IEFnYWluLCB0aGUgc2FtZSByZW1hcmsKd2lsbCBzZWVtIGZyZWVkb20gb2Ygc3BlZWNoIGluIG9uZSdzIG1vdXRoLCBtYWRuZXNzCmluIGFub3RoZXIncywgYW5kIGFycm9nYW5jZSBpbiBhIHRoaXJkLiBXZSBsYXVnaCBhdAp0aGUgd29yZHMgdXNlZCBieSBUaGVyc2l0ZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5JbC48L2hpPiBpaS4gMjI1Ljwvbm90ZT4gdG8gQWdhbWVtbm9uOyBidXQKcHV0IHRoZW0gaW4gdGhlIG1vdXRoIG9mIERpb21lZGUgb3Igc29tZSBvdGhlcgpvZiBoaXMgcGVlcnMsIGFuZCB0aGV5IHdpbGwgc2VlbSB0aGUgZXhwcmVzc2lvbiBvZiBhCmdyZWF0IHNwaXJpdC4gPHF1b3RlPlNoYWxsIEkgcmVnYXJkIHlvdSBhcyBjb25zdWwsPC9xdW90ZT4gc2FpZApMdWNpdXMgQ3Jhc3N1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPkRlIE9yLjwvaGk+IGlpaS4gMS48L25vdGU+IHRvIFBoaWxpbHBwdXMsIDxxdW90ZT53aGVuIHlvdSByZWZ1c2UgdG8KCjxwYiBpZD0icC4xNzciIC8+CgpyZWdhcmQgbWUgYXMgYSBzZW5hdG9yPzwvcXVvdGU+IFRoYXQgd2FzIGhvbm91cmFibGUKZnJlZWRvbSBvZiBzcGVlY2gsIGFuZCB5ZXQgd2Ugc2hvdWxkIG5vdCB0b2xlcmF0ZQpzdWNoIHdvcmRzIGZyb20gZXZlcnlib2R5J3MgbGlwcy48bWlsZXN0b25lIG49IjM4IiB1bml0PSJzZWN0aW9uIiAvPiBPbmUgb2YgdGhlIHBvZXRzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5DYXQuIDkzLjwvbm90ZT4Kc2F5cyB0aGF0IGhlIGRvZXMgbm90IGNhcmUgd2hldGhlciBDYWVzYXIgYmUgd2hpdGUKb3IgYmxhY2suIFRoYXQgaXMgbWFkbmVzcy4gQnV0IHJldmVyc2UgdGhlIGNhc2UuClN1cHBvc2UgdGhhdCBDYWVzYXIgc2FpZCBpdCBvZiB0aGUgcG9ldD8gVGhhdAp3b3VsZCBiZSBhcnJvZ2FuY2UuIFRoZSB0cmFnaWMgYW5kIGNvbWljIHBvZXRzCnBheSBzcGVjaWFsIGF0dGVudGlvbiB0byBjaGFyYWN0ZXIsIHNpbmNlIHRoZXkgaW50cm9kdWNlIGEgZ3JlYXQgbnVtYmVyIGFuZCB2YXJpZXR5IG9mIHBlcnNvbnMuIFRob3NlCndobyB3cm90ZSBzcGVlY2hlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPkNwLiBJSS48L2hpPiB4di4gMzA7IDxtaWxlc3RvbmUgbj0iMyIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+dmlpaS4gNTEuPC9ub3RlPiBmb3Igb3RoZXJzIHBhaWQgYSBsaWtlIGF0dGVudGlvbgp0byB0aGVzZSBwb2ludHMsIGFuZCBzbyBkbyB0aGUgZGVjbGFpbWVyczsgZm9yIHdlIGRvCm5vdCBhbHdheXMgc3BlYWsgYXMgYWR2b2NhdGVzLCBidXQgZnJlcXVlbnRseSBhcwphY3R1YWwgcGFydGllcyB0byB0aGUgc3VpdC48L3A+CjwvdHJhbnNsYXRpb24+"
translation['11.2.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgZGlmZmVyZW50IGtpbmRzIG9mIGVsb3F1ZW5jZSBzdWl0IGRpZmZlcmVudApzcGVha2Vycy4gRm9yIGV4YW1wbGUsIGEgZnVsbCwgaGF1Z2h0eSwgYm9sZCBhbmQKZmxvcmlkIHN0eWxlIHdvdWxkIGJlIGxlc3MgYmVjb21pbmcgdG8gYW4gb2xkIG1hbgp0aGFuIHRoYXQgcmVzdHJhaW5lZCwgbWlsZCBhbmQgcHJlY2lzZSBzdHlsZSB0byB3aGljaApDaWNlcm8gcmVmZXJzLCB3aGVuIGhlIHNheXMgdGhhdCBoaXMgc3R5bGUgaXMgYmVnaW5uaW5nCnRvIGdyb3cgZ3JleS1oYWlyZWQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkJydXQuPC9oaT4gaWkuIDguPC9ub3RlPiBJdCBpcyB0aGUgc2FtZSB3aXRoIHRoZWlyIHN0eWxlCmFzIHRoZWlyIGNsb3RoZXM7IHB1cnBsZSBhbmQgc2NhcmxldCByYWltZW50IGdvZXMgaWxsCndpdGggZ3JleSBoYWlycy48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5CcnV0LjwvaGk+IGlpLiA4LjwvdHJhbnNsYXRpb24+"
translation['11.2.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz4gSW4gdGhlIHlvdW5nLCBob3dldmVyLCB3ZSBjYW4KZW5kdXJlIGEgcmljaCBhbmQgZXZlbiwgcGVyaGFwcywgYSByaXNreSBzdHlsZS4gT24KdGhlIG90aGVyIGhhbmQsIGEgZHJ5LCBjYXJlZnVsIGFuZCBjb21wcmVzc2VkIHN0eWxlCmlzIHVucGxlYXNpbmcgaW4gdGhlIHlvdW5nIGFzIHN1Z2dlc3RpbmcgdGhlIGFmZmVjdGF0aW9uIG9mIHNldmVyaXR5LCBzaW5jZSBldmVuIHRoZSBhdXRob3JpdHkgb2YgY2hhcmFjdGVyCnRoYXQgZ29lcyB3aXRoIGFnZSBpcyBjb25zaWRlcmVkIGFzIHByZW1hdHVyZSBpbgp5b3VuZyBtZW4uIFNvbGRpZXJzIGFyZSBiZXN0IHN1aXRlZCBieSBhIHNpbXBsZQpzdHlsZS48L3RyYW5zbGF0aW9uPg=="
translation['11.2.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz4gVGhvc2UsIGFnYWluLCB3aG8gbWFrZSBvc3RlbnRhdGlvdXMgcHJvZmVzc2lvbiwgYXMgc29tZSBkbywgb2YgYmVpbmcgcGhpbG9zb3BoZXJzLCB3b3VsZCBkbwp3ZWxsIHRvIGF2b2lkIG1vc3Qgb2YgdGhlIG9ybmFtZW50cyBvZiBvcmF0b3J5LCBtb3JlCmVzcGVjaWFsbHkgdGhvc2Ugd2hpY2ggY29uc2lzdCBpbiBhcHBlYWxzIHRvIHRoZQpwYXNzaW9ucywgd2hpY2ggdGhleSByZWdhcmQgYXMgbW9yYWwgYmxlbWlzaGVzLiBTbywKdG9vLCB0aGUgZW1wbG95bWVudCBvZiByYXJlIHdvcmRzIGFuZCBvZiByaHl0aG1pY2FsCnN0cnVjdHVyZSBhcmUgaW5jb25ncnVvdXMgd2l0aCB0aGVpciBwcm9mZXNzaW9uLjwvdHJhbnNsYXRpb24+"
translation['11.2.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xNzUiIC8+Cgp0aGVpciBiZWFyZHMgYW5kIGdsb29teSBicm93cyBhcmUgaWxsLXN1aXRlZCBub3QKbWVyZWx5IHRvIGx1eHVyaWFuY2Ugb2Ygc3R5bGUsIHN1Y2ggYXMgd2UgZmluZCBpbgpDaWNlcm8ncyA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Sb2NrcyBhbmQgc29saXR1ZGVzIGFuc3dlciB0byB0aGUgdm9pY2UsPC9xdW90ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+UHJvIEFyY2guPC9oaT4gdmlpaS4gMTkuPC9ub3RlPgpidXQgZXZlbiB0byBmdWxsLWJsb29kZWQgcGFzc2FnZXMgYXMsIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlBybyBBcmNoLjwvaGk+IHZpaWkuIDE5LjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkZvciBvbiB5b3UgSQpjYWxsLCB5ZSBoaWxscyBhbmQgZ3JvdmVzIG9mIEFsYmE7IEkgY2FsbCB5b3UgdG8gYmVhcgptZSB3aXRuZXNzLCBhbmQgeWUsIHRvbywgZmFsbGVuIGFsdGFycyBvZiB0aGUgQWxiYW5zLAp0aGF0IHdlcmUgb25jZSB0aGUgcGVlcnMgYW5kIGVxdWFscyBvZiB0aGUgaG9seQpwbGFjZXMgb2YgUm9tZS48L3F1b3RlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Qcm8gTWlsLjwvaGk+IHh4eGkuIDg1Ljwvbm90ZT48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Qcm8gTWlsLjwvaGk+IHh4eGkuIDg1LjwvdHJhbnNsYXRpb24+"
translation['11.2.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHRoZSBwdWJsaWMgbWFuLCB3aG8gaXMgdHJ1bHkKd2lzZSBhbmQgZGV2b3RlcyBoaW1zZWxmIG5vdCB0byBpZGxlIGRpc3B1dGF0aW9ucywKYnV0IHRvIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgc3RhdGUsIGZyb20gd2hpY2gKdGhvc2Ugd2hvIGNhbGwgdGhlbXNlbHZlcyBwaGlsb3NvcGhlcnMgaGF2ZSB3aXRoZHJhd24gdGhlbXNlbHZlcyBhZmFyLCB3aWxsIGdsYWRseSBlbXBsb3kgZXZlcnkKbWV0aG9kIHRoYXQgbWF5IGNvbnRyaWJ1dGUgdG8gdGhlIGVuZCB3aGljaCBoZQpzZWVrcyB0byBnYWluIGJ5IGhpcyBlbG9xdWVuY2UsIGFsdGhvdWdoIGhlIHdpbGwgZmlyc3QKZm9ybSBhIGNsZWFyIGNvbmNlcHRpb24gaW4gaGlzIG1pbmQgYXMgdG8gd2hhdCBhaW1zCmFyZSBob25vdXJhYmxlIGFuZCB3aGF0IGFyZSBub3QuPC90cmFuc2xhdGlvbj4="
translation['11.2.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmUgaXMgYSBmb3JtCm9mIGVsb3F1ZW5jZSB3aGljaCBpcyBiZWNvbWluZyBpbiB0aGUgZ3JlYXRlc3QKbWVuLCBidXQgaW5hZG1pc3NpYmxlIGluIG90aGVycy4gRm9yIGV4YW1wbGUsIHRoZQptZXRob2RzIG9mIGVsb3F1ZW5jZSBlbXBsb3llZCBieSBjb21tYW5kZXJzIGFuZApjb25xdWVyb3JzIGluIHRoZWlyIGhvdXIgb2YgdHJpdW1waCBhcmUgdG8gYSBncmVhdApleHRlbnQgdG8gYmUgcmVnYXJkZWQgYXMgaW4gYSBjbGFzcyBhcGFydC4gVGhlCmNvbXBhcmlzb24gb2YgdGhlIGVsb3F1ZW5jZSBvZiBQbG9tcGV5IGFuZCBDYXRvCnRoZSB5b3VuZ2VyLCB3aG8gc2xldyBoaW1zZWxmIGluIHRoZSBjaXZpbCB3YXIsIHdpbGwKaWxsdXN0cmF0ZSBteSBtZWFuaW5nLiBUaGUgZm9ybWVyIHdhcyBleHRyYW9yZGluYXJpbHkgZWxvcXVlbnQgaW4gdGhlIGRlc2NyaXB0aW9uIG9mIGhpcyBvd24KZXhwbG9pdHMsIHdoaWxlIHRoZSBsYXR0ZXIncyBwb3dlcnMgd2VyZSBkaXNwbGF5ZWQKaW4gZGViYXRlcyBpbiB0aGUgc2VuYXRlLjwvdHJhbnNsYXRpb24+"
translation['11.2.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIHRoZSBzYW1lIHJlbWFyawp3aWxsIHNlZW0gZnJlZWRvbSBvZiBzcGVlY2ggaW4gb25lJ3MgbW91dGgsIG1hZG5lc3MKaW4gYW5vdGhlcidzLCBhbmQgYXJyb2dhbmNlIGluIGEgdGhpcmQuIFdlIGxhdWdoIGF0CnRoZSB3b3JkcyB1c2VkIGJ5IFRoZXJzaXRlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5JbC48L2hpPiBpaS4gMjI1Ljwvbm90ZT4gdG8gQWdhbWVtbm9uOyBidXQKcHV0IHRoZW0gaW4gdGhlIG1vdXRoIG9mIERpb21lZGUgb3Igc29tZSBvdGhlcgpvZiBoaXMgcGVlcnMsIGFuZCB0aGV5IHdpbGwgc2VlbSB0aGUgZXhwcmVzc2lvbiBvZiBhCmdyZWF0IHNwaXJpdC4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SWwuPC9oaT4gaWkuIDIyNS48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5TaGFsbCBJIHJlZ2FyZCB5b3UgYXMgY29uc3VsLDwvcXVvdGU+IHNhaWQKTHVjaXVzIENyYXNzdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGUgT3IuPC9oaT4gaWlpLiAxLjwvbm90ZT4gdG8gUGhpbGlscHB1cywgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGUgT3IuPC9oaT4gaWlpLiAxLjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPndoZW4geW91IHJlZnVzZSB0bwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTc3IiAvPgoKcmVnYXJkIG1lIGFzIGEgc2VuYXRvcj88L3F1b3RlPiBUaGF0IHdhcyBob25vdXJhYmxlCmZyZWVkb20gb2Ygc3BlZWNoLCBhbmQgeWV0IHdlIHNob3VsZCBub3QgdG9sZXJhdGUKc3VjaCB3b3JkcyBmcm9tIGV2ZXJ5Ym9keSdzIGxpcHMuPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTc3IiAvPgoKcmVnYXJkIG1lIGFzIGEgc2VuYXRvcj88L3RyYW5zbGF0aW9uPg=="
translation['11.2.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz4gT25lIG9mIHRoZSBwb2V0czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5DYXQuIDkzLjwvbm90ZT4Kc2F5cyB0aGF0IGhlIGRvZXMgbm90IGNhcmUgd2hldGhlciBDYWVzYXIgYmUgd2hpdGUKb3IgYmxhY2suIFRoYXQgaXMgbWFkbmVzcy4gQnV0IHJldmVyc2UgdGhlIGNhc2UuClN1cHBvc2UgdGhhdCBDYWVzYXIgc2FpZCBpdCBvZiB0aGUgcG9ldD8gVGhhdAp3b3VsZCBiZSBhcnJvZ2FuY2UuIFRoZSB0cmFnaWMgYW5kIGNvbWljIHBvZXRzCnBheSBzcGVjaWFsIGF0dGVudGlvbiB0byBjaGFyYWN0ZXIsIHNpbmNlIHRoZXkgaW50cm9kdWNlIGEgZ3JlYXQgbnVtYmVyIGFuZCB2YXJpZXR5IG9mIHBlcnNvbnMuIFRob3NlCndobyB3cm90ZSBzcGVlY2hlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5DcC4gSUkuPC9oaT4geHYuIDMwOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMyIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+dmlpaS4gNTEuPC9ub3RlPiBmb3Igb3RoZXJzIHBhaWQgYSBsaWtlIGF0dGVudGlvbgp0byB0aGVzZSBwb2ludHMsIGFuZCBzbyBkbyB0aGUgZGVjbGFpbWVyczsgZm9yIHdlIGRvCm5vdCBhbHdheXMgc3BlYWsgYXMgYWR2b2NhdGVzLCBidXQgZnJlcXVlbnRseSBhcwphY3R1YWwgcGFydGllcyB0byB0aGUgc3VpdC48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5DcC4gSUkuPC9oaT4geHYuIDMwOyA8L3RyYW5zbGF0aW9uPg=="
translation['11.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['11.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPnZpaWkuIDUxLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM5IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBldmVuIGluIHRoZXNlIGNhc2VzIGluIHdoaWNoIHdlIGFwcGVhciBhcwphZHZvY2F0ZXMsIGRpZmZlcmVuY2VzIG9mIGNoYXJhY3RlciByZXF1aXJlIGNhcmVmdWwKb2JzZXJ2YXRpb24uIEZvciB3ZSBpbnRyb2R1Y2UgZmljdGl0aW91cyBwZXJzb25hZ2VzCmFuZCBzcGVhayB0aHJvdWdoIG90aGVyJ3MgbGlwcywgYW5kIHdlIG11c3QgdGhlcmVmb3JlCmFsbG90IHRoZSBhcHByb3ByaWF0ZSBjaGFyYWN0ZXIgdG8gdGhvc2UgdG8gd2hvbQp3ZSBsZW5kIGEgdm9pY2UuIEZvciBleGFtcGxlLCBQdWJsaXVzIENsb2RpdXMgd2lsbApiZSByZXByZXNlbnRlZCBpbiBvbmUgd2F5LCBBcHBpdXMgQ2FlY3VzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5DbG9kaXVzLCB0aGUgdW5zY3J1cHVsb3VzIGVuZW15IG9mIENpY2Vyby4gQXBwaW5zCkNhY2N1cywgaGlzIGFuY2VzdG9yLCB0aGUgZ3JlYXQgc2VuYXRvciwgd2hvIHNlY3VyZWQgdGhlCnJlamVjdGlvbiBvZiB0aGUgdGVybXMgb2YgUHlycmh1cy48L25vdGU+IGluCmFub3RoZXIsIHdoaWxlIENhZWNpbGl1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPlNlZTwvaGk+IDxoaSByZW5kPSJpdGFsaWNzIj5Qcm8gQ2FlbC48L2hpPiB4dmkuPC9ub3RlPiBtYWtlcyB0aGUgZmF0aGVyIGluIGhpcwpjb21lZHkgc3BlYWsgaW4gcXVpdGUgYSBkaWZmZXJlbnQgbWFubmVyIGZyb20gdGhlCmZhdGhlciBpbiB0aGUgY29tZWR5IG9mIFRlcmVuY2UuPG1pbGVzdG9uZSBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz4gV2hhdCBjYW4gYmUKbW9yZSBicnV0YWwgdGhhbiB0aGUgd29yZHMgb2YgVmVycmVzJyBsaWN0b3IsIDxxdW90ZT5UbwpzZWUgaGltIHlvdSB3aWxsIHBheSBzbyBtdWNoPC9xdW90ZT4/PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+SS5lLjwvaGk+IHRvIHZpc2l0IGEgcmVsYXRpdmUgaW4gcHJpc29uLCA8aGkgcmVuZD0iaXRhbGljcyI+VmVyci48L2hpPiB2LiB4bHYuIDExODsgPGhpIHJlbmQ9Iml0YWxpY3MiPmNwLgpRdWludC48L2hpPiBJWC4gaXYuIDcxLjwvbm90ZT4gb3IgYnJhdmVyIHRoYW4KdGhvc2Ugb2YgdGhlIG1hbiBmcm9tIHdob20gdGhlIHNjb3VyZ2UgY291bGQKd3JpbmcgYnV0IG9uZSBjcnksIDxxdW90ZT5JIGFtIGEgUm9tYW4gY2l0aXplbiE8L3F1b3RlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPlZlcnIuPC9oaT4gVi4gbHhpaS4gMTYyLjwvbm90ZT4KQWdhaW4sIHJlYWQgdGhlIHdvcmRzIHdoaWNoIENpY2VybyBwbGFjZXMgaW4gdGhlCm1vdXRoIG9mIE1pbG8gaW4gaGlzIHBlcm9yYXRpb246IGFyZSB0aGV5IG5vdAp3b3J0aHkgb2YgdGhlIG1hbiB3aG8gdG8gc2F2ZSB0aGUgc3RhdGUgaGFkIHNvCm9mdCByZXByZXNzZWQgYSBzZWRpdGlvdXMgY2l0aXplbiwgYW5kIGhhZCB0cml1bXBoZWQKYnkgaGlzIHZhbG91ciBvdmVyIHRoZSBhbWJ1c2ggdGhhdCB3YXMgbGFpZCBmb3IKaGltPzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPkNwLjwvaGk+IDxtaWxlc3RvbmUgbj0iNCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+aWkuIDI1OyBWSS4gdi4gMTAuPC9ub3RlPjxtaWxlc3RvbmUgbj0iNDEiIHVuaXQ9InNlY3Rpb24iIC8+IEZ1cnRoZXIsIGl0IGlzIG5vdCBtZXJlbHkgdHJ1ZSB0aGF0IHRoZQp2YXJpZXR5IHJlcXVpcmVkIGluIGltcGVyc29uYXRpb24gd2lsbCBiZSBpbgoKPHBiIGlkPSJwLjE3OSIgLz4KCnByb3BvcnRpb24gdG8gdGhlIHZhcmlldHkgcHJlc2VudGVkIGJ5IHRoZSBjYXNlLCBmb3IKaW1wZXJzb25hdGlvbiBkZW1hbmRzIGV2ZW4gZ3JlYXRlciB2YXJpZXR5LCBzaW5jZQppdCBpbnZvbHZlcyB0aGUgcG9ydHJheWFsIG9mIHRoZSBlbW90aW9ucyBvZiBjaGlsZHJlbiwKd29tZW4sIG5hdGlvbnMsIGFuZCBldmVuIG9mIHZvaWNlbGVzcyB0aGluZ3MsIGFsbApvZiB3aGljaCByZXF1aXJlIHRvIGJlIHJlcHJlc2VudGVkIGluIGNoYXJhY3Rlci4KPG1pbGVzdG9uZSBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgc2FtZSBwb2ludHMgaGF2ZSB0byBiZSBvYnNlcnZlZCB3aXRoIHJlc3BlY3QKdG8gdGhvc2UgZm9yIHdob20gd2UgcGxlYWQ6IGZvciBvdXIgdG9uZSB3aWxsIHZhcnkKd2l0aCB0aGUgY2hhcmFjdGVyIG9mIG91ciBjbGllbnQsIGFjY29yZGluZyBhcyBoZSBpcwpkaXN0aW5ndWlzaGVkLCBvciBvZiBodW1ibGUgcG9zaXRpb24sIHBvcHVsYXIgb3IgdGhlCnJldmVyc2UsIHdoaWxlIHdlIG11c3QgYWxzbyB0YWtlIGludG8gYWNjb3VudCB0aGUKZGlmZmVyZW5jZXMgaW4gdGhlaXIgcHJpbmNpcGxlcyBhbmQgdGhlaXIgcGFzdCBsaWZlLgpBcyByZWdhcmRzIHRoZSBvcmF0b3IgaGltc2VsZiwgdGhlIHF1YWxpdGllcyB3aGljaAp3aWxsIG1vc3QgY29tbWVuZCBoaW0gYXJlIGNvdXJ0ZXN5LCBraW5kbGluZXNzLAptb2RlcmF0aW9uIGFuZCBiZW5ldm9sZW5jZS4gQnV0LCBvbiB0aGUgb3RoZXIKaGFuZCwgdGhlIG9wcG9zaXRlIG9mIHRoZXNlIHF1YWxpdGllcyB3aWxsIHNvbWV0aW1lcwpiZSBiZWNvbWluZyB0byBhIGdvb2QgbWFuLiBIZSBtYXkgaGF0ZSB0aGUgYmFkLApiZSBtb3ZlZCB0byBwYXNzaW9uIGluIHRoZSBwdWJsaWMgaW50ZXJlc3QsIHNlZWsgdG8KYXZlbmdlIGNyaW1lIGFuZCB3cm9uZywgYW5kLCBpbiBmaW5lLCBhcyBJIHNhaWQgYXQKdGhlIGJlZ2lubmluZyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSDCpyAxNC48L25vdGU+IG1heSBmb2xsb3cgdGhlIHByb21wdGluZ3Mgb2YgZXZlcnkKaG9ub3VyYWJsZSBlbW90aW9uLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.3.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgZXZlbiBpbiB0aGVzZSBjYXNlcyBpbiB3aGljaCB3ZSBhcHBlYXIgYXMKYWR2b2NhdGVzLCBkaWZmZXJlbmNlcyBvZiBjaGFyYWN0ZXIgcmVxdWlyZSBjYXJlZnVsCm9ic2VydmF0aW9uLiBGb3Igd2UgaW50cm9kdWNlIGZpY3RpdGlvdXMgcGVyc29uYWdlcwphbmQgc3BlYWsgdGhyb3VnaCBvdGhlcidzIGxpcHMsIGFuZCB3ZSBtdXN0IHRoZXJlZm9yZQphbGxvdCB0aGUgYXBwcm9wcmlhdGUgY2hhcmFjdGVyIHRvIHRob3NlIHRvIHdob20Kd2UgbGVuZCBhIHZvaWNlLiBGb3IgZXhhbXBsZSwgUHVibGl1cyBDbG9kaXVzIHdpbGwKYmUgcmVwcmVzZW50ZWQgaW4gb25lIHdheSwgQXBwaXVzIENhZWN1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5DbG9kaXVzLCB0aGUgdW5zY3J1cHVsb3VzIGVuZW15IG9mIENpY2Vyby4gQXBwaW5zCkNhY2N1cywgaGlzIGFuY2VzdG9yLCB0aGUgZ3JlYXQgc2VuYXRvciwgd2hvIHNlY3VyZWQgdGhlCnJlamVjdGlvbiBvZiB0aGUgdGVybXMgb2YgUHlycmh1cy48L25vdGU+IGluCmFub3RoZXIsIHdoaWxlIENhZWNpbGl1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5TZWU8L2hpPiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Qcm8gQ2FlbC48L2hpPiB4dmkuPC9ub3RlPiBtYWtlcyB0aGUgZmF0aGVyIGluIGhpcwpjb21lZHkgc3BlYWsgaW4gcXVpdGUgYSBkaWZmZXJlbnQgbWFubmVyIGZyb20gdGhlCmZhdGhlciBpbiB0aGUgY29tZWR5IG9mIFRlcmVuY2UuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+U2VlPC9oaT4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+UHJvIENhZWwuPC9oaT4geHZpLjwvdHJhbnNsYXRpb24+"
translation['11.3.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz4gV2hhdCBjYW4gYmUKbW9yZSBicnV0YWwgdGhhbiB0aGUgd29yZHMgb2YgVmVycmVzJyBsaWN0b3IsIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPlRvCnNlZSBoaW0geW91IHdpbGwgcGF5IHNvIG11Y2g8L3F1b3RlPj88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SS5lLjwvaGk+IHRvIHZpc2l0IGEgcmVsYXRpdmUgaW4gcHJpc29uLCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5WZXJyLjwvaGk+IHYuIHhsdi4gMTE4OyA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jcC4KUXVpbnQuPC9oaT4gSVguIGl2LiA3MS48L25vdGU+IG9yIGJyYXZlciB0aGFuCnRob3NlIG9mIHRoZSBtYW4gZnJvbSB3aG9tIHRoZSBzY291cmdlIGNvdWxkCndyaW5nIGJ1dCBvbmUgY3J5LCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5JLmUuPC9oaT4gdG8gdmlzaXQgYSByZWxhdGl2ZSBpbiBwcmlzb24sIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlZlcnIuPC9oaT4gdi4geGx2LiAxMTg7IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNwLgpRdWludC48L2hpPiBJWC4gaXYuIDcxLjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkkgYW0gYSBSb21hbiBjaXRpemVuITwvcXVvdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlZlcnIuPC9oaT4gVi4gbHhpaS4gMTYyLjwvbm90ZT4KQWdhaW4sIHJlYWQgdGhlIHdvcmRzIHdoaWNoIENpY2VybyBwbGFjZXMgaW4gdGhlCm1vdXRoIG9mIE1pbG8gaW4gaGlzIHBlcm9yYXRpb246IGFyZSB0aGV5IG5vdAp3b3J0aHkgb2YgdGhlIG1hbiB3aG8gdG8gc2F2ZSB0aGUgc3RhdGUgaGFkIHNvCm9mdCByZXByZXNzZWQgYSBzZWRpdGlvdXMgY2l0aXplbiwgYW5kIGhhZCB0cml1bXBoZWQKYnkgaGlzIHZhbG91ciBvdmVyIHRoZSBhbWJ1c2ggdGhhdCB3YXMgbGFpZCBmb3IKaGltPzxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlZlcnIuPC9oaT4gVi4gbHhpaS4gMTYyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5DcC48L2hpPiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+aWkuIDI1OyBWSS4gdi4gMTAuPC9ub3RlPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkNwLjwvaGk+IDwvdHJhbnNsYXRpb24+"
translation['11.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['11.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPmlpLiAyNTsgVkkuIHYuIDEwLjwvdHJhbnNsYXRpb24+"
translation['11.4.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz4gRnVydGhlciwgaXQgaXMgbm90IG1lcmVseSB0cnVlIHRoYXQgdGhlCnZhcmlldHkgcmVxdWlyZWQgaW4gaW1wZXJzb25hdGlvbiB3aWxsIGJlIGluCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xNzkiIC8+Cgpwcm9wb3J0aW9uIHRvIHRoZSB2YXJpZXR5IHByZXNlbnRlZCBieSB0aGUgY2FzZSwgZm9yCmltcGVyc29uYXRpb24gZGVtYW5kcyBldmVuIGdyZWF0ZXIgdmFyaWV0eSwgc2luY2UKaXQgaW52b2x2ZXMgdGhlIHBvcnRyYXlhbCBvZiB0aGUgZW1vdGlvbnMgb2YgY2hpbGRyZW4sCndvbWVuLCBuYXRpb25zLCBhbmQgZXZlbiBvZiB2b2ljZWxlc3MgdGhpbmdzLCBhbGwKb2Ygd2hpY2ggcmVxdWlyZSB0byBiZSByZXByZXNlbnRlZCBpbiBjaGFyYWN0ZXIuCjwvdHJhbnNsYXRpb24+"
translation['11.4.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgc2FtZSBwb2ludHMgaGF2ZSB0byBiZSBvYnNlcnZlZCB3aXRoIHJlc3BlY3QKdG8gdGhvc2UgZm9yIHdob20gd2UgcGxlYWQ6IGZvciBvdXIgdG9uZSB3aWxsIHZhcnkKd2l0aCB0aGUgY2hhcmFjdGVyIG9mIG91ciBjbGllbnQsIGFjY29yZGluZyBhcyBoZSBpcwpkaXN0aW5ndWlzaGVkLCBvciBvZiBodW1ibGUgcG9zaXRpb24sIHBvcHVsYXIgb3IgdGhlCnJldmVyc2UsIHdoaWxlIHdlIG11c3QgYWxzbyB0YWtlIGludG8gYWNjb3VudCB0aGUKZGlmZmVyZW5jZXMgaW4gdGhlaXIgcHJpbmNpcGxlcyBhbmQgdGhlaXIgcGFzdCBsaWZlLgpBcyByZWdhcmRzIHRoZSBvcmF0b3IgaGltc2VsZiwgdGhlIHF1YWxpdGllcyB3aGljaAp3aWxsIG1vc3QgY29tbWVuZCBoaW0gYXJlIGNvdXJ0ZXN5LCBraW5kbGluZXNzLAptb2RlcmF0aW9uIGFuZCBiZW5ldm9sZW5jZS4gQnV0LCBvbiB0aGUgb3RoZXIKaGFuZCwgdGhlIG9wcG9zaXRlIG9mIHRoZXNlIHF1YWxpdGllcyB3aWxsIHNvbWV0aW1lcwpiZSBiZWNvbWluZyB0byBhIGdvb2QgbWFuLiBIZSBtYXkgaGF0ZSB0aGUgYmFkLApiZSBtb3ZlZCB0byBwYXNzaW9uIGluIHRoZSBwdWJsaWMgaW50ZXJlc3QsIHNlZWsgdG8KYXZlbmdlIGNyaW1lIGFuZCB3cm9uZywgYW5kLCBpbiBmaW5lLCBhcyBJIHNhaWQgYXQKdGhlIGJlZ2lubmluZyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIMKnIDE0Ljwvbm90ZT4gbWF5IGZvbGxvdyB0aGUgcHJvbXB0aW5ncyBvZiBldmVyeQpob25vdXJhYmxlIGVtb3Rpb24uPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDMiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIGNoYXJhY3RlciBvZiB0aGUgc3BlYWtlciBhbmQgb2YgdGhlIHBlcnNvbiBvbgp3aG9zZSBiZWhhbGYgaGUgc3BlYWtzIGFyZSwgaG93ZXZlciwgbm90IHRoZSBvbmx5CnBvaW50cyB3aGljaCBpdCBpcyBpbXBvcnRhbnQgdG8gdGFrZSBpbnRvIGFjY291bnQ6CnRoZSBjaGFyYWN0ZXIgb2YgdGhvc2UgYmVmb3JlIHdob20gd2UgaGF2ZSB0bwpzcGVhayBjYWxscyBmb3Igc2VyaW91cyBjb25zaWRlcmF0aW9uLiBUaGVpciBwb3dlcgphbmQgcmFuayB3aWxsIG1ha2Ugbm8gc21hbGwgZGlmZmVyZW5jZTsgd2Ugc2hhbGwKZW1wbG95IGRpZmZlcmVudCBtZXRob2RzIGFjY29yZGluZyBhcyB3ZSBhcmUgc3BlYWtpbmcgYmVmb3JlIHRoZSBlbXBlcm9yLCBhIG1hZ2lzdHJhdGUsIGEgc2VuYXRvciwgYQpwcml2YXRlIGNpdGl6ZW4sIG9yIG1lcmVseSBhIGZyZWUgbWFuLCB3aGlsZSBhCmRpZmZlcmVudCB0b25lIGlzIGRlbWFuZGVkIGJ5IHRyaWFscyBpbiB0aGUgcHVibGljCmNvdXJ0cywgYW5kIGluIGNhc2VzIHN1Ym1pdHRlZCB0byBhcmJpdHJhdGlvbi48bWlsZXN0b25lIG49IjQ0IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IKd2hpbGUgYSBkaXNwbGF5IG9mIGNhcmUgYW5kIGFueGlldHksIGFuZCB0aGUgZW1wbG95bWVudCBvZiBldmVyeSBkZXZpY2UgYXZhaWxhYmxlIGZvciB0aGUgYW1wbGlmaWNhdGlvbiBvZiBvdXIgc3R5bGUgYXJlIGJlY29taW5nIHdoZW4gd2UgYXJlCgo8cGIgaWQ9InAuMTgxIiAvPgoKcGxlYWRpbmcgZm9yIGEgY2xpZW50IGFjY3VzZWQgb24gYSBjYXBpdGFsIGNoYXJnZSwKaXQgd291bGQgYmUgdXNlbGVzcyB0byBlbXBsb3kgdGhlIHNhbWUgbWV0aG9kcyBpbgpjYXNlcyBhbmQgdHJpYWxzIG9mIG1pbm9yIGltcG9ydGFuY2UsIGFuZCB0aGUgc3BlYWtlcgp3aG8sIHdoZW4gc3BlYWtpbmcgZnJvbSBoaXMgY2hhaXIgYmVmb3JlIGFuIGFyYml0cmF0b3IKb24gc29tZSB0cml2aWFsIHF1ZXN0aW9uLCBzaG91bGQgbWFrZSBhbiBhZG1pc3Npb24KbGlrZSB0aGF0IG1hZGUgYnkgQ2ljZXJvLCB0byB0aGUgZWZmZWN0IHRoYXQgaXQgd2FzCm5vdCBtZXJlbHkgaGlzIHNvdWwgdGhhdCB3YXMgaW4gYSBzdGF0ZSBvZiBjb21tb3Rpb24sIGJ1dCB0aGF0IGhpcyB3aG9sZSBib2R5IHdhcyBjb252dWxzZWQgd2l0aApzaHVkZGVyaW5nLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPkRpdi4gaW4gQ2FlYy48L2hpPiB4aWlpLiA0MTwvbm90ZT4gd291bGQgbWVldCB3aXRoIHdlbGwtZGVzZXJ2ZWQgcmlkaWN1bGUuCjxtaWxlc3RvbmUgbj0iNDUiIHVuaXQ9InNlY3Rpb24iIC8+QWdhaW4sIHdobyBkb2VzIG5vdCBrbm93IHdoYXQgZGlmZmVyZW50IHN0eWxlcyBvZgplbG9xdWVuY2UgYXJlIHJlcXVpcmVkIHdoZW4gc3BlYWtpbmcgYmVmb3JlIHRoZQpncmF2ZSBhc3NlbWJseSBvZiB0aGUgc2VuYXRlIGFuZCBiZWZvcmUgdGhlIGZpY2tsZQpwb3B1bGFjZSwgc2luY2UgZXZlbiB3aGVuIHdlIGFyZSBwbGVhZGluZyBiZWZvcmUKc2luZ2xlIGp1ZGdlcyB0aGUgc2FtZSBzdHlsZSB3aWxsIG5vdCBiZSBzdWl0YWJsZQpmb3IgdXNlIGJlZm9yZSBvbmUgb2Ygd2VpZ2h0eSBjaGFyYWN0ZXIgYW5kIGFub3RoZXIKb2YgYSBtb3JlIGZyaXZvbG91cyBkaXNwb3NpdGlvbiwgd2hpbGUgYSBsZWFybmVkIGp1ZGdlCm11c3Qgbm90IGJlIGFkZHJlc3NlZCBpbiB0aGUgc2FtZSB0b25lIHRoYXQgd2UKc2hvdWxkIGVtcGxveSBiZWZvcmUgYSBzb2xkaWVyIG9yIGEgcnVzdGljLCBhbmQgb3VyCnN0eWxlIG11c3QgYXQgdGltZXMgYmUgbG93ZXJlZCBhbmQgc2ltcGxpZmllZCwgZm9yCmZlYXIgdGhhdCBoZSBtYXkgYmUgdW5hYmxlIHRvIHRha2UgaXQgaW4gb3IgdG8KdW5kZXJzdGFuZCBpdC48L3A+CjwvdHJhbnNsYXRpb24+"
translation['11.4.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgY2hhcmFjdGVyIG9mIHRoZSBzcGVha2VyIGFuZCBvZiB0aGUgcGVyc29uIG9uCndob3NlIGJlaGFsZiBoZSBzcGVha3MgYXJlLCBob3dldmVyLCBub3QgdGhlIG9ubHkKcG9pbnRzIHdoaWNoIGl0IGlzIGltcG9ydGFudCB0byB0YWtlIGludG8gYWNjb3VudDoKdGhlIGNoYXJhY3RlciBvZiB0aG9zZSBiZWZvcmUgd2hvbSB3ZSBoYXZlIHRvCnNwZWFrIGNhbGxzIGZvciBzZXJpb3VzIGNvbnNpZGVyYXRpb24uIFRoZWlyIHBvd2VyCmFuZCByYW5rIHdpbGwgbWFrZSBubyBzbWFsbCBkaWZmZXJlbmNlOyB3ZSBzaGFsbAplbXBsb3kgZGlmZmVyZW50IG1ldGhvZHMgYWNjb3JkaW5nIGFzIHdlIGFyZSBzcGVha2luZyBiZWZvcmUgdGhlIGVtcGVyb3IsIGEgbWFnaXN0cmF0ZSwgYSBzZW5hdG9yLCBhCnByaXZhdGUgY2l0aXplbiwgb3IgbWVyZWx5IGEgZnJlZSBtYW4sIHdoaWxlIGEKZGlmZmVyZW50IHRvbmUgaXMgZGVtYW5kZWQgYnkgdHJpYWxzIGluIHRoZSBwdWJsaWMKY291cnRzLCBhbmQgaW4gY2FzZXMgc3VibWl0dGVkIHRvIGFyYml0cmF0aW9uLjwvdHJhbnNsYXRpb24+"
translation['11.4.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCndoaWxlIGEgZGlzcGxheSBvZiBjYXJlIGFuZCBhbnhpZXR5LCBhbmQgdGhlIGVtcGxveW1lbnQgb2YgZXZlcnkgZGV2aWNlIGF2YWlsYWJsZSBmb3IgdGhlIGFtcGxpZmljYXRpb24gb2Ygb3VyIHN0eWxlIGFyZSBiZWNvbWluZyB3aGVuIHdlIGFyZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTgxIiAvPgoKcGxlYWRpbmcgZm9yIGEgY2xpZW50IGFjY3VzZWQgb24gYSBjYXBpdGFsIGNoYXJnZSwKaXQgd291bGQgYmUgdXNlbGVzcyB0byBlbXBsb3kgdGhlIHNhbWUgbWV0aG9kcyBpbgpjYXNlcyBhbmQgdHJpYWxzIG9mIG1pbm9yIGltcG9ydGFuY2UsIGFuZCB0aGUgc3BlYWtlcgp3aG8sIHdoZW4gc3BlYWtpbmcgZnJvbSBoaXMgY2hhaXIgYmVmb3JlIGFuIGFyYml0cmF0b3IKb24gc29tZSB0cml2aWFsIHF1ZXN0aW9uLCBzaG91bGQgbWFrZSBhbiBhZG1pc3Npb24KbGlrZSB0aGF0IG1hZGUgYnkgQ2ljZXJvLCB0byB0aGUgZWZmZWN0IHRoYXQgaXQgd2FzCm5vdCBtZXJlbHkgaGlzIHNvdWwgdGhhdCB3YXMgaW4gYSBzdGF0ZSBvZiBjb21tb3Rpb24sIGJ1dCB0aGF0IGhpcyB3aG9sZSBib2R5IHdhcyBjb252dWxzZWQgd2l0aApzaHVkZGVyaW5nLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5EaXYuIGluIENhZWMuPC9oaT4geGlpaS4gNDE8L25vdGU+IHdvdWxkIG1lZXQgd2l0aCB3ZWxsLWRlc2VydmVkIHJpZGljdWxlLgo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5EaXYuIGluIENhZWMuPC9oaT4geGlpaS4gNDE8L3RyYW5zbGF0aW9uPg=="
translation['11.4.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz5BZ2Fpbiwgd2hvIGRvZXMgbm90IGtub3cgd2hhdCBkaWZmZXJlbnQgc3R5bGVzIG9mCmVsb3F1ZW5jZSBhcmUgcmVxdWlyZWQgd2hlbiBzcGVha2luZyBiZWZvcmUgdGhlCmdyYXZlIGFzc2VtYmx5IG9mIHRoZSBzZW5hdGUgYW5kIGJlZm9yZSB0aGUgZmlja2xlCnBvcHVsYWNlLCBzaW5jZSBldmVuIHdoZW4gd2UgYXJlIHBsZWFkaW5nIGJlZm9yZQpzaW5nbGUganVkZ2VzIHRoZSBzYW1lIHN0eWxlIHdpbGwgbm90IGJlIHN1aXRhYmxlCmZvciB1c2UgYmVmb3JlIG9uZSBvZiB3ZWlnaHR5IGNoYXJhY3RlciBhbmQgYW5vdGhlcgpvZiBhIG1vcmUgZnJpdm9sb3VzIGRpc3Bvc2l0aW9uLCB3aGlsZSBhIGxlYXJuZWQganVkZ2UKbXVzdCBub3QgYmUgYWRkcmVzc2VkIGluIHRoZSBzYW1lIHRvbmUgdGhhdCB3ZQpzaG91bGQgZW1wbG95IGJlZm9yZSBhIHNvbGRpZXIgb3IgYSBydXN0aWMsIGFuZCBvdXIKc3R5bGUgbXVzdCBhdCB0aW1lcyBiZSBsb3dlcmVkIGFuZCBzaW1wbGlmaWVkLCBmb3IKZmVhciB0aGF0IGhlIG1heSBiZSB1bmFibGUgdG8gdGFrZSBpdCBpbiBvciB0bwp1bmRlcnN0YW5kIGl0LjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ2IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCBjaXJjdW1zdGFuY2VzIG9mIHRpbWUgYW5kIHBsYWNlIGRlbWFuZApzcGVjaWFsIGNvbnNpZGVyYXRpb24uIFRoZSBvY2Nhc2lvbiBtYXkgYmUgb25lCmZvciBzb3Jyb3cgb3IgZm9yIHJlam9pY2luZywgdGhlIHRpbWUgYXQgb3VyIGRpc3Bvc2FsCm1heSBiZSBhbXBsZSBvciByZXN0cmljdGVkLCBhbmQgdGhlIG9yYXRvciBtdXN0CmFkYXB0IGhpbXNlbGYgdG8gYWxsIHRoZXNlIGNpcmN1bXN0YW5jZXMuPG1pbGVzdG9uZSBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz4gSXQsIGxpa2V3aXNlLCBtYWtlcyBubyBzbWFsbCBkaWZmZXJlbmNlIHdoZXRoZXIgd2UgYXJlCnNwZWFraW5nIGluIHB1YmxpYyBvciBpbiBwcml2YXRlLCBiZWZvcmUgYSBjcm93ZGVkCmF1ZGllbmNlIG9yIGluIGNvbXBhcmF0aXZlIHNlY2x1c2lvbiwgaW4gYW5vdGhlcgpjaXR5IG9yIG91ciBvd24sIGluIHRoZSBjYW1wIG9yIGluIHRoZSBmb3J1bTogZWFjaApvZiB0aGVzZSBwbGFjZXMgd2lsbCByZXF1aXJlIGl0cyBvd24gc3R5bGUgYW5kIHBlY3VsaWFyCmZvcm0gb2Ygb3JhdG9yeSwgc2luY2UgZXZlbiBpbiBvdGhlciBzcGhlcmVzIG9mIGxpZmUKdGhlIHNhbWUgYWN0aW9ucyBhcmUgbm90IGVxdWFsbHkgc3VpdGVkIHRvIHRoZSBmb3J1bSwKdGhlIHNlbmF0ZS1ob3VzZSwgdGhlIENhbXB1cyBNYXJ0aXVzLCB0aGUgdGhlYXRyZQoKPHBiIGlkPSJwLjE4MyIgLz4KCm9yIG9uZSdzIG93biBob3VzZSwgYW5kIHRoZXJlIGlzIG11Y2ggdGhhdCBpcyBub3QKaW4gaXRzZWxmIHJlcHJlaGVuc2libGUsIGFuZCBtYXkgYXQgdGltZXMgYmUgYWJzb2x1dGVseSBuZWNlc3NhcnksIHdoaWNoIHdpbGwgYmUgcmVnYXJkZWQgYXMgdW5zZWVtbHkKaWYgZG9uZSBpbiBzb21lIHBsYWNlIHdoZXJlIGl0IGlzIG5vdCBzYW5jdGlvbmVkIGJ5CmN1c3RvbS48bWlsZXN0b25lIG49IjQ4IiB1bml0PSJzZWN0aW9uIiAvPiBJIGhhdmUgYWxyZWFkeSBwb2ludGVkIG91dDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+VklJSS4gaWlpLiAxMSA8aGkgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PC9ub3RlPiBob3cgbXVjaAptb3JlIGVsZWdhbmNlIGFuZCBvcm5hbWVudCBpcyBhbGxvd2VkIGJ5IHRoZQp0b3BpY3Mgb2YgZGVtb25zdHJhdGl2ZSBvcmF0b3J5LCB3aG9zZSBtYWluIG9iamVjdAppcyB0aGUgZGVsZWN0YXRpb24gb2YgdGhlIGF1ZGllbmNlLCB0aGFuIGlzIHBlcm1pdHRlZApieSBkZWxpYmVyYXRpdmUgb3IgZm9yZW5zaWMgdGhlbWVzIHdoaWNoIGFyZSBjb25jZXJuZWQgd2l0aCBhY3Rpb24gYW5kIGFyZ3VtZW50LjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.4.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgY2lyY3Vtc3RhbmNlcyBvZiB0aW1lIGFuZCBwbGFjZSBkZW1hbmQKc3BlY2lhbCBjb25zaWRlcmF0aW9uLiBUaGUgb2NjYXNpb24gbWF5IGJlIG9uZQpmb3Igc29ycm93IG9yIGZvciByZWpvaWNpbmcsIHRoZSB0aW1lIGF0IG91ciBkaXNwb3NhbAptYXkgYmUgYW1wbGUgb3IgcmVzdHJpY3RlZCwgYW5kIHRoZSBvcmF0b3IgbXVzdAphZGFwdCBoaW1zZWxmIHRvIGFsbCB0aGVzZSBjaXJjdW1zdGFuY2VzLjwvdHJhbnNsYXRpb24+"
translation['11.4.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz4gSXQsIGxpa2V3aXNlLCBtYWtlcyBubyBzbWFsbCBkaWZmZXJlbmNlIHdoZXRoZXIgd2UgYXJlCnNwZWFraW5nIGluIHB1YmxpYyBvciBpbiBwcml2YXRlLCBiZWZvcmUgYSBjcm93ZGVkCmF1ZGllbmNlIG9yIGluIGNvbXBhcmF0aXZlIHNlY2x1c2lvbiwgaW4gYW5vdGhlcgpjaXR5IG9yIG91ciBvd24sIGluIHRoZSBjYW1wIG9yIGluIHRoZSBmb3J1bTogZWFjaApvZiB0aGVzZSBwbGFjZXMgd2lsbCByZXF1aXJlIGl0cyBvd24gc3R5bGUgYW5kIHBlY3VsaWFyCmZvcm0gb2Ygb3JhdG9yeSwgc2luY2UgZXZlbiBpbiBvdGhlciBzcGhlcmVzIG9mIGxpZmUKdGhlIHNhbWUgYWN0aW9ucyBhcmUgbm90IGVxdWFsbHkgc3VpdGVkIHRvIHRoZSBmb3J1bSwKdGhlIHNlbmF0ZS1ob3VzZSwgdGhlIENhbXB1cyBNYXJ0aXVzLCB0aGUgdGhlYXRyZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTgzIiAvPgoKb3Igb25lJ3Mgb3duIGhvdXNlLCBhbmQgdGhlcmUgaXMgbXVjaCB0aGF0IGlzIG5vdAppbiBpdHNlbGYgcmVwcmVoZW5zaWJsZSwgYW5kIG1heSBhdCB0aW1lcyBiZSBhYnNvbHV0ZWx5IG5lY2Vzc2FyeSwgd2hpY2ggd2lsbCBiZSByZWdhcmRlZCBhcyB1bnNlZW1seQppZiBkb25lIGluIHNvbWUgcGxhY2Ugd2hlcmUgaXQgaXMgbm90IHNhbmN0aW9uZWQgYnkKY3VzdG9tLjwvdHJhbnNsYXRpb24+"
translation['11.4.48'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0ic2VjdGlvbiIgLz4gSSBoYXZlIGFscmVhZHkgcG9pbnRlZCBvdXQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+VklJSS4gaWlpLiAxMSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zcXEuPC9oaT48L25vdGU+IGhvdyBtdWNoCm1vcmUgZWxlZ2FuY2UgYW5kIG9ybmFtZW50IGlzIGFsbG93ZWQgYnkgdGhlCnRvcGljcyBvZiBkZW1vbnN0cmF0aXZlIG9yYXRvcnksIHdob3NlIG1haW4gb2JqZWN0CmlzIHRoZSBkZWxlY3RhdGlvbiBvZiB0aGUgYXVkaWVuY2UsIHRoYW4gaXMgcGVybWl0dGVkCmJ5IGRlbGliZXJhdGl2ZSBvciBmb3JlbnNpYyB0aGVtZXMgd2hpY2ggYXJlIGNvbmNlcm5lZCB3aXRoIGFjdGlvbiBhbmQgYXJndW1lbnQuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UbyB0aGlzIG11c3QgYmUgYWRkZWQgdGhlIGZhY3QgdGhhdCBjZXJ0YWluCnF1YWxpdGllcywgd2hpY2ggYXJlIGluIHRoZW1zZWx2ZXMgbWVyaXRzIG9mIGEgaGlnaApvcmRlciwgbWF5IGJlIHJlbmRlcmVkIHVuYmVjb21pbmcgYnkgdGhlIHNwZWNpYWwKY2lyY3Vtc3RhbmNlcyBvZiB0aGUgY2FzZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDkiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBleGFtcGxlLCB3aGVuIGEKbWFuIGlzIGFjY3VzZWQgb24gYSBjYXBpdGFsIGNoYXJnZSwgYW5kLCBhYm92ZSBhbGwsCmlmIGhlIGlzIGRlZmVuZGluZyBoaW1zZWxmIGJlZm9yZSBoaXMgY29ucXVlcm9yIG9yCmhpcyBzb3ZlcmVpZ24sIGl0IHdvdWxkIGJlIHF1aXRlIGludG9sZXJhYmxlIGZvciBoaW0KdG8gaW5kdWxnZSBpbiBmcmVxdWVudCBtZXRhcGhvcnMsIGFudGlxdWUgb3IgbmV3bHljb2luZWQgd29yZHMsIHJoeXRobXMgYXMgZmFyIHJlbW92ZWQgYXMgcG9zc2libGUKZnJvbSB0aGUgcHJhY3RpY2Ugb2YgZXZlcnktZGF5IHNwZWVjaCwgcm91bmRlZApwZXJpb2RzLCBmbG9yaWQgY29tbW9ucGxhY2VzIGFuZCBvcm5hdGUgcmVmbGV4aW9ucy4KV291bGQgbm90IGFsbCB0aGVzZSBkZXZpY2VzIGRlc3Ryb3kgdGhlIGltcHJlc3Npb24Kb2YgYW54aWV0eSB3aGljaCBzaG91bGQgYmUgY3JlYXRlZCBieSBhIG1hbiBpbgpzdWNoIHBlcmlsLCBhbmQgcm9iIGhpbSBvZiB0aGUgc3VjY291ciBvZiBwaXR5LCBvbgp3aGljaCBldmVuIHRoZSBpbm5vY2VudCBhcmUgZm9yY2VkIHRvIHJlbHk/PG1pbGVzdG9uZSBuPSI1MCIgdW5pdD0ic2VjdGlvbiIgLz4gV291bGQKYW55IG1hbiBiZSBtb3ZlZCBieSB0aGUgc2FkIHBsaWdodCBvZiBvbmUgd2hvCnJldmVhbGVkIGhpbXNlbGYgYXMgYSB2YWluZ2xvcmlvdXMgYm9hc3RlciwgYW5kCm9zdGVudGF0aW91c2x5IGZsYXVudGVkIHRoZSBhaXJzIGFuZCBncmFjZXMgb2YgaGlzCmVsb3F1ZW5jZSBhdCBhIG1vbWVudCB3aGVuIGhpcyBmYXRlIGh1bmcgaW4Kc3VzcGVuc2U/IFdvdWxkIGhlIG5vdCByYXRoZXIgaGF0ZSB0aGUgbWFuIHdobywKZGVzcGl0ZSBoaXMgcG9zaXRpb24gYXMgYWNjdXNlZCwgaHVudGVkIGZvciBmaW5lCndvcmRzLCBzaG93ZWQgaGltc2VsZiBjb25jZXJuZWQgZm9yIGhpcyByZXB1dGF0aW9uCmFzIGEgY2xldmVyIHNwZWFrZXIsIGFuZCBmb3VuZCB0aW1lIGF0IHN1Y2ggYQptb21lbnQgdG8gZGlzcGxheSBoaXMgZWxvcXVlbmNlPzxtaWxlc3RvbmUgbj0iNTEiIHVuaXQ9InNlY3Rpb24iIC8+IEkgY29uc2lkZXIgdGhhdAoKPHBiIGlkPSJwLjE4NSIgLz4KCk1hcmN1cyBDYWVsaXVzLCBpbiB0aGUgc3BlZWNoIGluIHdoaWNoIGhlIGRlZmVuZGVkCmhpbXNlbGYgYWdhaW5zdCBhIGNoYXJnZSBvZiBicmVhY2ggb2YgdGhlIHBlYWNlLCBzaG93ZWQKYSB3b25kZXJmdWwgZ3Jhc3Agb2YgdGhlc2UgZmFjdHMsIHdoZW4gaGUgc2FpZDogPHF1b3RlPkkKdHJ1c3QgdGhhdCBub25lIG9mIHlvdSBnZW50bGVtZW4sIG9yIG9mIGFsbCB0aG9zZQp3aG8gaGF2ZSBjb21lIHRvIHBsZWFkIGFnYWluc3QgbWUsIHdpbGwgZmluZCBvZmZlbmNlCmluIG15IG1pZW4gb3IgaW5zb2xlbmNlIGluIG15IHZvaWNlLCBvciwgdGhvdWdoIHRoYXQKaXMgYSBjb21wYXJhdGl2ZSB0cmlmbGUsIGFueSB0cmFjZSBvZiBhcnJvZ2FuY2UgaW4KbXkgZ2VzdHVyZS48L3F1b3RlPjxtaWxlc3RvbmUgbj0iNTIiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCB0aGVyZSBhcmUgc29tZSBjYXNlcyB3aGVyZSB0aGUKc3VjY2VzcyBvZiB0aGUgcGxlYWRlciBkZXBlbmRzIG9uIGFwb2xvZ3ksIGVudHJlYXRpZXMKZm9yIG1lcmN5LCBvciBjb25mZXNzaW9uIG9mIGVycm9yLiBDYW4gc29ycm93IGJlCmV4cHJlc3NlZCBpbiBlcGlncmFtPyBPciB3aWxsIDxoaSByZW5kPSJpdGFsaWNzIj5lbnRoeW1lbWVzPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkEgZm9ybSBvZiBzeWxsb2dpc20uIFNlZSBWIHhpdi4gMS48L25vdGU+IG9yCjxoaSByZW5kPSJpdGFsaWNzIj5lcGlwaG9uZW1hdGE8L2hpPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIFZJSUkuIHYuIDExLiA8cXVvdGU+QW4gZXhjbGFtYXRpb24gYXR0YWNoZWQgdG8gdGhlIGNsb3NlCm9mIGEgc3RhdGVtZW50IG9yIGEgcHJvb2YgYnkgd2F5IG9mIGNsaW1heC48L3F1b3RlPjwvbm90ZT4gYXZhaWwgdG8gd2luIHRoZSBqdWRnZSdzIG1lcmN5PyBXaWxsCm5vdCBhbGwgZW1iZWxsaXNobWVudCBvZiBwdXJlIGVtb3Rpb24gbWVyZWx5IGltcGFpciBpdHMgZm9yY2UgYW5kIGRpc3BlbCBjb21wYXNzaW9uIGJ5IHN1Y2ggYSBkaXNwbGF5Cm9mIGFwcGFyZW50IHVuY29uY2Vybj88bWlsZXN0b25lIG49IjUzIiB1bml0PSJzZWN0aW9uIiAvPiBPciwgc3VwcG9zZSB0aGF0IGEgZmF0aGVyCmhhcyB0byBzcGVhayBvZiBoaXMgc29uJ3MgZGVhdGgsIG9yIG9mIHNvbWUgd3JvbmcKdGhhdCBpcyB3b3JzZSB0aGFuIGRlYXRoLCB3aWxsIGhlLCBpbiBtYWtpbmcgaGlzIHN0YXRlbWVudCBvZiBmYWN0cywgc2VlayB0byBhY2hpZXZlIHRoYXQgZ3JhY2UgaW4gZXhwb3NpdGlvbiB3aGljaCBpcyBzZWN1cmVkIGJ5IHB1cml0eSBhbmQgbHVjaWRpdHkgb2YKbGFuZ3VhZ2UsIGFuZCBjb250ZW50IGhpbXNlbGYgd2l0aCBzZXR0aW5nIGZvcnRoCmhpcyBjYXNlIGluIGR1ZSBvcmRlciB3aXRoIGJyZXZpdHkgYW5kIG1lYW5pbmc/Ck9yIHdpbGwgaGUgY291bnQgb3ZlciB0aGUgaGVhZHMgb2YgaGlzIGFyZ3VtZW50CnVwb24gaGlzIGZpbmdlcnMsIGFpbSBhdCBuaWNldGllcyBvZiBkaXZpc2lvbiBhbmQKcHJvcG9zaXRpb24sIGFuZCBzcGVhayB3aXRob3V0IHRoZSBsZWFzdCBlbmVyZ3kgb2YKZmVlbGluZyBhcyBpcyB1c3VhbCBpbiBzdWNoIHBvcnRpb25zIG9mIGEgc3BlZWNoPwo8bWlsZXN0b25lIG49IjU0IiB1bml0PSJzZWN0aW9uIiAvPldoaXRoZXIgd2lsbCBoaXMgZ3JpZWYgaGF2ZSBmbGVkIHdoaWxlIGhlIGlzIHRodXMKZW5nYWdlZD8gV2hlcmUgaGFzIHRoZSBmb3VudGFpbiBvZiBoaXMgdGVhcnMgYmVlbgpzdGF5ZWQ/IEhvdyBjYW1lIHRoaXMgY2FsbG91cyBhdHRlbnRpb24gdG8gdGhlCnJ1bGVzIG9mIHRleHQtYm9va3MgdG8gb2J0cnVkZSBpdHNlbGY/IFdpbGwgaGUgbm90CnJhdGhlciwgZnJvbSBoaXMgb3BlbmluZyB3b3JkcyB0byB0aGUgdmVyeSBsYXN0IGhlCnV0dGVycywgbWFpbnRhaW4gYSBjb250aW51b3VzIHZvaWNlIG9mIGxhbWVudGF0aW9uCmFuZCBhIG1pZW4gb2YgdW52YXJpZWQgd29lLCBpZiBoZSBkZXNpcmVzIHRvIHRyYW5zcGxhbnQgaGlzIGdyaWVmIHRvIHRoZSBoZWFydHMgb2YgaGlzIGF1ZGllbmNlPyBGb3IKaWYgaGUgb25jZSByZW1pdHMgYXVnaHQgb2YgaGlzIHBhc3Npb24gb2YgZ3JpZWYsIGhlCgo8cGIgaWQ9InAuMTg3IiAvPgoKd2lsbCBuZXZlciBiZSBhYmxlIHRvIHJlY2FsbCBpdCB0byB0aGUgaGVhcnRzIG9mIHRoZW0KdGhhdCBoZWFyIGhpbS48bWlsZXN0b25lIG49IjU1IiB1bml0PSJzZWN0aW9uIiAvPiBUaGlzIGlzIGEgcG9pbnQgd2hpY2ggZGVjbGFpbWVycywKYWJvdmUgYWxsLCBtdXN0IGJlIGNhcmVmdWwgdG8gYmVhciBpbiBtaW5kOiBJCm1lbnRpb24gdGhpcyBiZWNhdXNlIEkgaGF2ZSBubyBjb21wdW5jdGlvbiBpbgpyZWZlcnJpbmcgdG8gYSBicmFuY2ggb2YgdGhlIGFydCB3aGljaCB3YXMgb25jZSBhbHNvCm15IG93biwgb3IgaW4gcmV2ZXJ0aW5nIHRvIHRoZSBjb25zaWRlcmF0aW9uIG9mIHRoZQp5b3V0aGZ1bCBzdHVkZW50cyBzdWNoIGFzIG9uY2Ugd2VyZSBpbiBteSBjaGFyZ2U6CnRoZSBkZWNsYWltZXIsIEkgcmVwZWF0LCBtdXN0IGJlYXIgdGhpcyBpbiBtaW5kLApzaW5jZSBpbiB0aGUgc2Nob29scyB3ZSBvZnRlbiBmZWlnbiBlbW90aW9ucyB0aGF0CmFmZmVjdCB1cyBub3QgYXMgYWR2b2NhdGVzLCBidXQgYXMgdGhlIGFjdHVhbCBzdWZmZXJlcnMuCjxtaWxlc3RvbmUgbj0iNTYiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIGV4YW1wbGUsIHdlIGV2ZW4gaW1hZ2luZSBjYXNlcyB3aGVyZSBwZXJzb25zLAplaXRoZXIgYmVjYXVzZSBvZiBzb21lIG92ZXJ3aGVsbWluZyBtaXNmb3J0dW5lIG9yCnJlcGVudGFuY2UgZm9yIHNvbWUgc2luLCBkZW1hbmQgZnJvbSB0aGUgc2VuYXRlIHRoZQpyaWdodCB0byBtYWtlIGFuIGVuZCBvZiB0aGVpciBsaXZlczs8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlZJSS4gaXYuIDM5LiBJdCBpcyBzYWlkIHRoYXQgcG9pc29uIHdhcyBwcm92aWRlZCBieSB0aGUKc3RhdGUgb2YgTWFzc2lsaWEgdG8gc2VydmUgdGhlIHR1cm4gb2Ygc3VjaCB1bmhhcHB5IHBlcnNvbnMsCnNvIHNvb24gYXMgdGhleSBjb3VsZCBjb252aW5jZSB0aGUgbG9jYWwgc2VuYXRlIHRoYXQgdGhlaXIKcHJvcG9zZWQgc3VpY2lkZSB3YXMganVzdGlmaWFibGUuPC9ub3RlPiBhbmQgaW4gdGhlc2UKY2FzZXMgaXQgaXMgb2J2aW91c2x5IHVuYmVjb21pbmcgbm90IG1lcmVseSB0byBhZG9wdAphIGNoYW50aW5nIGludG9uYXRpb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+Q3AuPC9oaT4gSS4gdmlpaS4gMi48L25vdGU+IGEgZmF1bHQgd2hpY2ggaGFzIGFsc28gYmVjb21lCmFsbW9zdCB1bml2ZXJzYWwsIG9yIHRvIHVzZSBleHRyYXZhZ2FudCBsYW5ndWFnZSwKYnV0IGV2ZW4gdG8gYXJndWUgd2l0aG91dCBhbiBhZG1peHR1cmUgb2YgZW1vdGlvbmFsCmFwcGVhbCwgc28gbWFuYWdlZCBhcyB0byBiZSBldmVuIG1vcmUgcHJvbWluZW50CnRoYW4gdGhlIHByb29mIHdoaWNoIGlzIGFkdmFuY2VkLiBGb3IgdGhlIG1hbgp3aG8gY2FuIGxheSBhc2lkZSBoaXMgZ3JpZWYgZm9yIGEgbW9tZW50IHdoaWxlIGhlCmlzIHBsZWFkaW5nLCBzZWVtcyBjYXBhYmxlIGV2ZW4gb2YgbGF5aW5nIGl0IGFzaWRlCmFsdG9nZXRoZXI8L3A+CjwvdHJhbnNsYXRpb24+"
translation['11.4.49'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGV4YW1wbGUsIHdoZW4gYQptYW4gaXMgYWNjdXNlZCBvbiBhIGNhcGl0YWwgY2hhcmdlLCBhbmQsIGFib3ZlIGFsbCwKaWYgaGUgaXMgZGVmZW5kaW5nIGhpbXNlbGYgYmVmb3JlIGhpcyBjb25xdWVyb3Igb3IKaGlzIHNvdmVyZWlnbiwgaXQgd291bGQgYmUgcXVpdGUgaW50b2xlcmFibGUgZm9yIGhpbQp0byBpbmR1bGdlIGluIGZyZXF1ZW50IG1ldGFwaG9ycywgYW50aXF1ZSBvciBuZXdseWNvaW5lZCB3b3Jkcywgcmh5dGhtcyBhcyBmYXIgcmVtb3ZlZCBhcyBwb3NzaWJsZQpmcm9tIHRoZSBwcmFjdGljZSBvZiBldmVyeS1kYXkgc3BlZWNoLCByb3VuZGVkCnBlcmlvZHMsIGZsb3JpZCBjb21tb25wbGFjZXMgYW5kIG9ybmF0ZSByZWZsZXhpb25zLgpXb3VsZCBub3QgYWxsIHRoZXNlIGRldmljZXMgZGVzdHJveSB0aGUgaW1wcmVzc2lvbgpvZiBhbnhpZXR5IHdoaWNoIHNob3VsZCBiZSBjcmVhdGVkIGJ5IGEgbWFuIGluCnN1Y2ggcGVyaWwsIGFuZCByb2IgaGltIG9mIHRoZSBzdWNjb3VyIG9mIHBpdHksIG9uCndoaWNoIGV2ZW4gdGhlIGlubm9jZW50IGFyZSBmb3JjZWQgdG8gcmVseT88L3RyYW5zbGF0aW9uPg=="
translation['11.4.50'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0ic2VjdGlvbiIgLz4gV291bGQKYW55IG1hbiBiZSBtb3ZlZCBieSB0aGUgc2FkIHBsaWdodCBvZiBvbmUgd2hvCnJldmVhbGVkIGhpbXNlbGYgYXMgYSB2YWluZ2xvcmlvdXMgYm9hc3RlciwgYW5kCm9zdGVudGF0aW91c2x5IGZsYXVudGVkIHRoZSBhaXJzIGFuZCBncmFjZXMgb2YgaGlzCmVsb3F1ZW5jZSBhdCBhIG1vbWVudCB3aGVuIGhpcyBmYXRlIGh1bmcgaW4Kc3VzcGVuc2U/IFdvdWxkIGhlIG5vdCByYXRoZXIgaGF0ZSB0aGUgbWFuIHdobywKZGVzcGl0ZSBoaXMgcG9zaXRpb24gYXMgYWNjdXNlZCwgaHVudGVkIGZvciBmaW5lCndvcmRzLCBzaG93ZWQgaGltc2VsZiBjb25jZXJuZWQgZm9yIGhpcyByZXB1dGF0aW9uCmFzIGEgY2xldmVyIHNwZWFrZXIsIGFuZCBmb3VuZCB0aW1lIGF0IHN1Y2ggYQptb21lbnQgdG8gZGlzcGxheSBoaXMgZWxvcXVlbmNlPzwvdHJhbnNsYXRpb24+"
translation['11.4.51'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MSIgdW5pdD0ic2VjdGlvbiIgLz4gSSBjb25zaWRlciB0aGF0Cgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xODUiIC8+CgpNYXJjdXMgQ2FlbGl1cywgaW4gdGhlIHNwZWVjaCBpbiB3aGljaCBoZSBkZWZlbmRlZApoaW1zZWxmIGFnYWluc3QgYSBjaGFyZ2Ugb2YgYnJlYWNoIG9mIHRoZSBwZWFjZSwgc2hvd2VkCmEgd29uZGVyZnVsIGdyYXNwIG9mIHRoZXNlIGZhY3RzLCB3aGVuIGhlIHNhaWQ6IDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkkKdHJ1c3QgdGhhdCBub25lIG9mIHlvdSBnZW50bGVtZW4sIG9yIG9mIGFsbCB0aG9zZQp3aG8gaGF2ZSBjb21lIHRvIHBsZWFkIGFnYWluc3QgbWUsIHdpbGwgZmluZCBvZmZlbmNlCmluIG15IG1pZW4gb3IgaW5zb2xlbmNlIGluIG15IHZvaWNlLCBvciwgdGhvdWdoIHRoYXQKaXMgYSBjb21wYXJhdGl2ZSB0cmlmbGUsIGFueSB0cmFjZSBvZiBhcnJvZ2FuY2UgaW4KbXkgZ2VzdHVyZS48L3F1b3RlPjwvdHJhbnNsYXRpb24+"
translation['11.4.52'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHRoZXJlIGFyZSBzb21lIGNhc2VzIHdoZXJlIHRoZQpzdWNjZXNzIG9mIHRoZSBwbGVhZGVyIGRlcGVuZHMgb24gYXBvbG9neSwgZW50cmVhdGllcwpmb3IgbWVyY3ksIG9yIGNvbmZlc3Npb24gb2YgZXJyb3IuIENhbiBzb3Jyb3cgYmUKZXhwcmVzc2VkIGluIGVwaWdyYW0/IE9yIHdpbGwgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZW50aHltZW1lczwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkEgZm9ybSBvZiBzeWxsb2dpc20uIFNlZSBWIHhpdi4gMS48L25vdGU+IG9yCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmVwaXBob25lbWF0YTwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBWSUlJLiB2LiAxMS4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW4gZXhjbGFtYXRpb24gYXR0YWNoZWQgdG8gdGhlIGNsb3NlCm9mIGEgc3RhdGVtZW50IG9yIGEgcHJvb2YgYnkgd2F5IG9mIGNsaW1heC48L3F1b3RlPjwvbm90ZT4gYXZhaWwgdG8gd2luIHRoZSBqdWRnZSdzIG1lcmN5PyBXaWxsCm5vdCBhbGwgZW1iZWxsaXNobWVudCBvZiBwdXJlIGVtb3Rpb24gbWVyZWx5IGltcGFpciBpdHMgZm9yY2UgYW5kIGRpc3BlbCBjb21wYXNzaW9uIGJ5IHN1Y2ggYSBkaXNwbGF5Cm9mIGFwcGFyZW50IHVuY29uY2Vybj88cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BbiBleGNsYW1hdGlvbiBhdHRhY2hlZCB0byB0aGUgY2xvc2UKb2YgYSBzdGF0ZW1lbnQgb3IgYSBwcm9vZiBieSB3YXkgb2YgY2xpbWF4LjwvcXVvdGU+PC90cmFuc2xhdGlvbj4="
translation['11.4.53'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MyIgdW5pdD0ic2VjdGlvbiIgLz4gT3IsIHN1cHBvc2UgdGhhdCBhIGZhdGhlcgpoYXMgdG8gc3BlYWsgb2YgaGlzIHNvbidzIGRlYXRoLCBvciBvZiBzb21lIHdyb25nCnRoYXQgaXMgd29yc2UgdGhhbiBkZWF0aCwgd2lsbCBoZSwgaW4gbWFraW5nIGhpcyBzdGF0ZW1lbnQgb2YgZmFjdHMsIHNlZWsgdG8gYWNoaWV2ZSB0aGF0IGdyYWNlIGluIGV4cG9zaXRpb24gd2hpY2ggaXMgc2VjdXJlZCBieSBwdXJpdHkgYW5kIGx1Y2lkaXR5IG9mCmxhbmd1YWdlLCBhbmQgY29udGVudCBoaW1zZWxmIHdpdGggc2V0dGluZyBmb3J0aApoaXMgY2FzZSBpbiBkdWUgb3JkZXIgd2l0aCBicmV2aXR5IGFuZCBtZWFuaW5nPwpPciB3aWxsIGhlIGNvdW50IG92ZXIgdGhlIGhlYWRzIG9mIGhpcyBhcmd1bWVudAp1cG9uIGhpcyBmaW5nZXJzLCBhaW0gYXQgbmljZXRpZXMgb2YgZGl2aXNpb24gYW5kCnByb3Bvc2l0aW9uLCBhbmQgc3BlYWsgd2l0aG91dCB0aGUgbGVhc3QgZW5lcmd5IG9mCmZlZWxpbmcgYXMgaXMgdXN1YWwgaW4gc3VjaCBwb3J0aW9ucyBvZiBhIHNwZWVjaD8KPC90cmFuc2xhdGlvbj4="
translation['11.4.54'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NCIgdW5pdD0ic2VjdGlvbiIgLz5XaGl0aGVyIHdpbGwgaGlzIGdyaWVmIGhhdmUgZmxlZCB3aGlsZSBoZSBpcyB0aHVzCmVuZ2FnZWQ/IFdoZXJlIGhhcyB0aGUgZm91bnRhaW4gb2YgaGlzIHRlYXJzIGJlZW4Kc3RheWVkPyBIb3cgY2FtZSB0aGlzIGNhbGxvdXMgYXR0ZW50aW9uIHRvIHRoZQpydWxlcyBvZiB0ZXh0LWJvb2tzIHRvIG9idHJ1ZGUgaXRzZWxmPyBXaWxsIGhlIG5vdApyYXRoZXIsIGZyb20gaGlzIG9wZW5pbmcgd29yZHMgdG8gdGhlIHZlcnkgbGFzdCBoZQp1dHRlcnMsIG1haW50YWluIGEgY29udGludW91cyB2b2ljZSBvZiBsYW1lbnRhdGlvbgphbmQgYSBtaWVuIG9mIHVudmFyaWVkIHdvZSwgaWYgaGUgZGVzaXJlcyB0byB0cmFuc3BsYW50IGhpcyBncmllZiB0byB0aGUgaGVhcnRzIG9mIGhpcyBhdWRpZW5jZT8gRm9yCmlmIGhlIG9uY2UgcmVtaXRzIGF1Z2h0IG9mIGhpcyBwYXNzaW9uIG9mIGdyaWVmLCBoZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTg3IiAvPgoKd2lsbCBuZXZlciBiZSBhYmxlIHRvIHJlY2FsbCBpdCB0byB0aGUgaGVhcnRzIG9mIHRoZW0KdGhhdCBoZWFyIGhpbS48L3RyYW5zbGF0aW9uPg=="
translation['11.4.55'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhpcyBpcyBhIHBvaW50IHdoaWNoIGRlY2xhaW1lcnMsCmFib3ZlIGFsbCwgbXVzdCBiZSBjYXJlZnVsIHRvIGJlYXIgaW4gbWluZDogSQptZW50aW9uIHRoaXMgYmVjYXVzZSBJIGhhdmUgbm8gY29tcHVuY3Rpb24gaW4KcmVmZXJyaW5nIHRvIGEgYnJhbmNoIG9mIHRoZSBhcnQgd2hpY2ggd2FzIG9uY2UgYWxzbwpteSBvd24sIG9yIGluIHJldmVydGluZyB0byB0aGUgY29uc2lkZXJhdGlvbiBvZiB0aGUKeW91dGhmdWwgc3R1ZGVudHMgc3VjaCBhcyBvbmNlIHdlcmUgaW4gbXkgY2hhcmdlOgp0aGUgZGVjbGFpbWVyLCBJIHJlcGVhdCwgbXVzdCBiZWFyIHRoaXMgaW4gbWluZCwKc2luY2UgaW4gdGhlIHNjaG9vbHMgd2Ugb2Z0ZW4gZmVpZ24gZW1vdGlvbnMgdGhhdAphZmZlY3QgdXMgbm90IGFzIGFkdm9jYXRlcywgYnV0IGFzIHRoZSBhY3R1YWwgc3VmZmVyZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.4.56'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgZXhhbXBsZSwgd2UgZXZlbiBpbWFnaW5lIGNhc2VzIHdoZXJlIHBlcnNvbnMsCmVpdGhlciBiZWNhdXNlIG9mIHNvbWUgb3ZlcndoZWxtaW5nIG1pc2ZvcnR1bmUgb3IKcmVwZW50YW5jZSBmb3Igc29tZSBzaW4sIGRlbWFuZCBmcm9tIHRoZSBzZW5hdGUgdGhlCnJpZ2h0IHRvIG1ha2UgYW4gZW5kIG9mIHRoZWlyIGxpdmVzOzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5WSUkuIGl2LiAzOS4gSXQgaXMgc2FpZCB0aGF0IHBvaXNvbiB3YXMgcHJvdmlkZWQgYnkgdGhlCnN0YXRlIG9mIE1hc3NpbGlhIHRvIHNlcnZlIHRoZSB0dXJuIG9mIHN1Y2ggdW5oYXBweSBwZXJzb25zLApzbyBzb29uIGFzIHRoZXkgY291bGQgY29udmluY2UgdGhlIGxvY2FsIHNlbmF0ZSB0aGF0IHRoZWlyCnByb3Bvc2VkIHN1aWNpZGUgd2FzIGp1c3RpZmlhYmxlLjwvbm90ZT4gYW5kIGluIHRoZXNlCmNhc2VzIGl0IGlzIG9idmlvdXNseSB1bmJlY29taW5nIG5vdCBtZXJlbHkgdG8gYWRvcHQKYSBjaGFudGluZyBpbnRvbmF0aW9uLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5DcC48L2hpPiBJLiB2aWlpLiAyLjwvbm90ZT4gYSBmYXVsdCB3aGljaCBoYXMgYWxzbyBiZWNvbWUKYWxtb3N0IHVuaXZlcnNhbCwgb3IgdG8gdXNlIGV4dHJhdmFnYW50IGxhbmd1YWdlLApidXQgZXZlbiB0byBhcmd1ZSB3aXRob3V0IGFuIGFkbWl4dHVyZSBvZiBlbW90aW9uYWwKYXBwZWFsLCBzbyBtYW5hZ2VkIGFzIHRvIGJlIGV2ZW4gbW9yZSBwcm9taW5lbnQKdGhhbiB0aGUgcHJvb2Ygd2hpY2ggaXMgYWR2YW5jZWQuIEZvciB0aGUgbWFuCndobyBjYW4gbGF5IGFzaWRlIGhpcyBncmllZiBmb3IgYSBtb21lbnQgd2hpbGUgaGUKaXMgcGxlYWRpbmcsIHNlZW1zIGNhcGFibGUgZXZlbiBvZiBsYXlpbmcgaXQgYXNpZGUKYWx0b2dldGhlcjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkNwLjwvaGk+IEkuIHZpaWkuIDIuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTciIHVuaXQ9InNlY3Rpb24iIC8+SSBhbSBub3Qgc3VyZSwgaG93ZXZlciwgdGhhdCBpdCBpcyBub3QgaW4gb3VyCmF0dGl0dWRlIHRvd2FyZHMgb3VyIG9wcG9uZW50cyB0aGF0IHRoaXMgY2FyZSBmb3IKZGVjb3J1bSwgd2hpY2ggd2UgYXJlIG5vdyBkaXNjdXNzaW5nLCBzaG91bGQgYmUKbW9zdCByaWdvcm91c2x5IG1haW50YWluZWQuIEZvciB0aGVyZSBjYW4gYmUgbm8KZG91YnQsIHRoYXQgaW4gYWxsIGFjY3VzYXRpb25zIG91ciBmaXJzdCBhaW0gc2hvdWxkCmJlIHRvIGdpdmUgdGhlIGltcHJlc3Npb24gdGhhdCBpdCBpcyBvbmx5IHdpdGggdGhlCmdyZWF0ZXN0IHJlbHVjdGFuY2UgdGhhdCB3ZSBoYXZlIGNvbnNlbnRlZCB0byB1bmRlcnRha2UgdGhlIHJvbGUgb2YgYWNjdXNlci4gQ29uc2VxdWVudGx5LCBJIHN0cm9uZ2x5CmRpc2FwcHJvdmUgb2Ygc3VjaCByZW1hcmtzIGFzIHRoZSBmb2xsb3dpbmcgd2hpY2gKd2FzIG1hZGUgYnkgQ2Fzc2l1cyBTZXZlcnVzOjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPkNwLjwvaGk+IHguIGkuIDIyLiBJbiA5IEIuQy4gaGUgYWNjdXNlZCBOb25pdXMgQXNwcmVuYXMsIGEKZnJpZW5kIG9mIEF1Z3VzdHVzLCBvZiB0aGUgY3JpbWUgb2YgcG9pc29uaW5nLiBBc3ByZW5hcwp3YXMgZGVmZW5kZWQgYnkgUG9sbGlvLCBhbmQgc3VwcG9ydGVkIGJ5IEF1Z3VzdHVzIGR1cmluZwpoaXMgdHJpYWwuPC9ub3RlPiA8cXVvdGU+VGhhbmsgSGVhdmVuLCBJCmFtIHN0aWxsIGFsaXZlOyBhbmQgdGhhdCBJIG1heSBmaW5kIHNvbWUgc2F2b3VyIGluCgo8cGIgaWQ9InAuMTg5IiAvPgoKbGlmZSwgSSBzZWUgQXNwcmVuYXMgYXJyYWlnbmVkIGZvciBoaXMgY3JpbWVzLjwvcXVvdGU+IEZvciwKYWZ0ZXIgdGhpcywgaXQgaXMgaW1wb3NzaWJsZSB0byBzdXBwb3NlIHRoYXQgaGUgaGFkCmp1c3Qgb3IgbmVjZXNzYXJ5IHJlYXNvbnMgZm9yIGFjY3VzaW5nIEFzcHJlbmFzLCBhbmQKd2UgY2Fubm90IGhlbHAgc3VzcGVjdGluZyB0aGF0IGhpcyBtb3RpdmUgd2FzIHNoZWVyCmRlbGlnaHQgaW4gYWNjdXNhdGlvbi48bWlsZXN0b25lIG49IjU4IiB1bml0PSJzZWN0aW9uIiAvPiBCdXQsIGJlc2lkZSB0aGlzIGNvbnNpZGVyYXRpb24sIHdoaWNoIGFwcGxpZXMgdG8gYWxsIGNhc2VzLCB0aGVyZSBpcyB0aGUgZnVydGhlcgpwb2ludCB0aGF0IGNlcnRhaW4gY2FzZXMgZGVtYW5kIHNwZWNpYWwgbW9kZXJhdGlvbi4KVGhlcmVmb3JlLCBhIG1hbiB3aG8gZGVtYW5kcyB0aGUgYXBwb2ludG1lbnQgb2YKYSBjdXJhdG9yIGZvciBoaXMgZmF0aGVyJ3MgcHJvcGVydHksIHNob3VsZCBleHByZXNzIGhpcwpncmllZiBhdCBoaXMgZmF0aGVyJ3MgYWZmbGljdGlvbjsgYW5kLCBob3dldmVyIGdyYXZlIGJlCnRoZSBjaGFyZ2VzIHRoYXQgYSBmYXRoZXIgbWF5IGJlIGdvaW5nIHRvIGJyaW5nCmFnYWluc3QgaGlzIHNvbiwgaGUgc2hvdWxkIGVtcGhhc2l6ZSB0aGUgcGFpbmZ1bApuYXR1cmUgb2YgdGhlIG5lY2Vzc2l0eSB0aGF0IGlzIGltcG9zZWQgdXBvbiBoaW0uPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGUgaW1hZ2luZWQgY2FzZSB3b3VsZCBiZSBhcyBmb2xsb3dzLiBUaGUgZmF0aGVyIGRpc2luaGVyaXRzIHRoZSBzb24gZm9yIGFuIGFsbGVnZWQgb2ZmZW5jZS4gVGhlIHNvbiBhY2N1c2VzIHRoZQpmYXRoZXIgb2YgbWFkbmVzcyBhbmQgZGVtYW5kcyBhIGN1cmF0b3IsIGV0Yy48L25vdGU+CkFuZCB0aGlzIGhlIHNob3VsZCBkbyBub3QgbWVyZWx5IGluIGEgZmV3IGJyaWVmCndvcmRzLCBidXQgaGlzIGVtb3Rpb24gc2hvdWxkIGNvbG91ciBoaXMgd2hvbGUKc3BlZWNoLCBzbyB0aGF0IGl0IG1heSBiZSBmZWx0IG5vdCBtZXJlbHkgdGhhdCBoZQppcyBzcGVha2luZywgYnV0IHRoYXQgaGUgaXMgc3BlYWtpbmcgdGhlIHRydXRoLgo8bWlsZXN0b25lIG49IjU5IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCBpZiBhIHdhcmQgbWFrZSBhbGxlZ2F0aW9ucyBhZ2FpbnN0IGhpcwpndWFyZGlhbiwgdGhlIGxhdHRlciBtdXN0IG5ldmVyIGdpdmUgd2F5IHRvIHN1Y2gKYW5nZXIgdGhhdCBubyB0cmFjZSBpcyBsZWZ0IG9mIGhpcyBmb3JtZXIgbG92ZSBvcgpvZiBhIGNlcnRhaW4gcmV2ZXJlbnQgcmVnYXJkIGZvciB0aGUgbWVtb3J5IG9mIGhpcwpvcHBvbmVudCdzIGZhdGhlci4gSSBoYXZlIGFscmVhZHkgc3Bva2VuLCBpbiB0aGUKc2V2ZW50aCBib29rLCBJIHRoaW5rLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+VklJLiBpdi4gMjQuPC9ub3RlPiBvZiB0aGUgd2F5IGluIHdoaWNoIGEgY2FzZQpzaG91bGQgYmUgcGxlYWRlZCBhZ2FpbnN0IGEgZmF0aGVyIHdobyBkaXNpbmhlcml0cwpoaXMgc29uLCBvciBhIHdpZmUgd2hvIGJyaW5ncyBhIGNoYXJnZSBvZiBpbGx0cmVhdG1lbnQgYWdhaW5zdCBoZXIgaHVzYmFuZCwgd2hpbGUgdGhlIGZvdXJ0aCBib29rLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+SVYuIGkuIDQ2Ljwvbm90ZT4KaW4gd2hpY2ggSSBwcmVzY3JpYmVkIGNlcnRhaW4gcnVsZXMgZm9yIHRoZSBleG9yZGl1bSwKY29udGFpbnMgbXkgaW5zdHJ1Y3Rpb25zIGFzIHRvIHdoZW4gaXQgaXMgYmVjb21pbmcKdGhhdCB0aGUgcGFydGllcyBzaG91bGQgc3BlYWsgdGhlbXNlbHZlcywgYW5kIHdoZW4KdGhleSBzaG91bGQgZW1wbG95IGFuIGFkdm9jYXRlIHRvIHNwZWFrIGZvciB0aGVtLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.4.57'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NyIgdW5pdD0ic2VjdGlvbiIgLz5JIGFtIG5vdCBzdXJlLCBob3dldmVyLCB0aGF0IGl0IGlzIG5vdCBpbiBvdXIKYXR0aXR1ZGUgdG93YXJkcyBvdXIgb3Bwb25lbnRzIHRoYXQgdGhpcyBjYXJlIGZvcgpkZWNvcnVtLCB3aGljaCB3ZSBhcmUgbm93IGRpc2N1c3NpbmcsIHNob3VsZCBiZQptb3N0IHJpZ29yb3VzbHkgbWFpbnRhaW5lZC4gRm9yIHRoZXJlIGNhbiBiZSBubwpkb3VidCwgdGhhdCBpbiBhbGwgYWNjdXNhdGlvbnMgb3VyIGZpcnN0IGFpbSBzaG91bGQKYmUgdG8gZ2l2ZSB0aGUgaW1wcmVzc2lvbiB0aGF0IGl0IGlzIG9ubHkgd2l0aCB0aGUKZ3JlYXRlc3QgcmVsdWN0YW5jZSB0aGF0IHdlIGhhdmUgY29uc2VudGVkIHRvIHVuZGVydGFrZSB0aGUgcm9sZSBvZiBhY2N1c2VyLiBDb25zZXF1ZW50bHksIEkgc3Ryb25nbHkKZGlzYXBwcm92ZSBvZiBzdWNoIHJlbWFya3MgYXMgdGhlIGZvbGxvd2luZyB3aGljaAp3YXMgbWFkZSBieSBDYXNzaXVzIFNldmVydXM6PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkNwLjwvaGk+IHguIGkuIDIyLiBJbiA5IEIuQy4gaGUgYWNjdXNlZCBOb25pdXMgQXNwcmVuYXMsIGEKZnJpZW5kIG9mIEF1Z3VzdHVzLCBvZiB0aGUgY3JpbWUgb2YgcG9pc29uaW5nLiBBc3ByZW5hcwp3YXMgZGVmZW5kZWQgYnkgUG9sbGlvLCBhbmQgc3VwcG9ydGVkIGJ5IEF1Z3VzdHVzIGR1cmluZwpoaXMgdHJpYWwuPC9ub3RlPiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5DcC48L2hpPiB4LiBpLiAyMi4gSW4gOSBCLkMuIGhlIGFjY3VzZWQgTm9uaXVzIEFzcHJlbmFzLCBhCmZyaWVuZCBvZiBBdWd1c3R1cywgb2YgdGhlIGNyaW1lIG9mIHBvaXNvbmluZy4gQXNwcmVuYXMKd2FzIGRlZmVuZGVkIGJ5IFBvbGxpbywgYW5kIHN1cHBvcnRlZCBieSBBdWd1c3R1cyBkdXJpbmcKaGlzIHRyaWFsLjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPlRoYW5rIEhlYXZlbiwgSQphbSBzdGlsbCBhbGl2ZTsgYW5kIHRoYXQgSSBtYXkgZmluZCBzb21lIHNhdm91ciBpbgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTg5IiAvPgoKbGlmZSwgSSBzZWUgQXNwcmVuYXMgYXJyYWlnbmVkIGZvciBoaXMgY3JpbWVzLjwvcXVvdGU+IEZvciwKYWZ0ZXIgdGhpcywgaXQgaXMgaW1wb3NzaWJsZSB0byBzdXBwb3NlIHRoYXQgaGUgaGFkCmp1c3Qgb3IgbmVjZXNzYXJ5IHJlYXNvbnMgZm9yIGFjY3VzaW5nIEFzcHJlbmFzLCBhbmQKd2UgY2Fubm90IGhlbHAgc3VzcGVjdGluZyB0aGF0IGhpcyBtb3RpdmUgd2FzIHNoZWVyCmRlbGlnaHQgaW4gYWNjdXNhdGlvbi48cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4xODkiIC8+CgpsaWZlLCBJIHNlZSBBc3ByZW5hcyBhcnJhaWduZWQgZm9yIGhpcyBjcmltZXMuPC90cmFuc2xhdGlvbj4="
translation['11.4.58'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0LCBiZXNpZGUgdGhpcyBjb25zaWRlcmF0aW9uLCB3aGljaCBhcHBsaWVzIHRvIGFsbCBjYXNlcywgdGhlcmUgaXMgdGhlIGZ1cnRoZXIKcG9pbnQgdGhhdCBjZXJ0YWluIGNhc2VzIGRlbWFuZCBzcGVjaWFsIG1vZGVyYXRpb24uClRoZXJlZm9yZSwgYSBtYW4gd2hvIGRlbWFuZHMgdGhlIGFwcG9pbnRtZW50IG9mCmEgY3VyYXRvciBmb3IgaGlzIGZhdGhlcidzIHByb3BlcnR5LCBzaG91bGQgZXhwcmVzcyBoaXMKZ3JpZWYgYXQgaGlzIGZhdGhlcidzIGFmZmxpY3Rpb247IGFuZCwgaG93ZXZlciBncmF2ZSBiZQp0aGUgY2hhcmdlcyB0aGF0IGEgZmF0aGVyIG1heSBiZSBnb2luZyB0byBicmluZwphZ2FpbnN0IGhpcyBzb24sIGhlIHNob3VsZCBlbXBoYXNpemUgdGhlIHBhaW5mdWwKbmF0dXJlIG9mIHRoZSBuZWNlc3NpdHkgdGhhdCBpcyBpbXBvc2VkIHVwb24gaGltLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGUgaW1hZ2luZWQgY2FzZSB3b3VsZCBiZSBhcyBmb2xsb3dzLiBUaGUgZmF0aGVyIGRpc2luaGVyaXRzIHRoZSBzb24gZm9yIGFuIGFsbGVnZWQgb2ZmZW5jZS4gVGhlIHNvbiBhY2N1c2VzIHRoZQpmYXRoZXIgb2YgbWFkbmVzcyBhbmQgZGVtYW5kcyBhIGN1cmF0b3IsIGV0Yy48L25vdGU+CkFuZCB0aGlzIGhlIHNob3VsZCBkbyBub3QgbWVyZWx5IGluIGEgZmV3IGJyaWVmCndvcmRzLCBidXQgaGlzIGVtb3Rpb24gc2hvdWxkIGNvbG91ciBoaXMgd2hvbGUKc3BlZWNoLCBzbyB0aGF0IGl0IG1heSBiZSBmZWx0IG5vdCBtZXJlbHkgdGhhdCBoZQppcyBzcGVha2luZywgYnV0IHRoYXQgaGUgaXMgc3BlYWtpbmcgdGhlIHRydXRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.4.59'] = ""
translation['11.4.60'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MCIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3aWxsIGJlIHJlYWRpbHkgYWRtaXR0ZWQgYnkgZXZlcnlvbmUgdGhhdAp3b3JkcyBtYXkgYmUgYmVjb21pbmcgb3Igb2ZmZW5zaXZlIGluIHRoZW1zZWx2ZXMuClRoZXJlIGlzIHRoZXJlZm9yZSBhIGZ1cnRoZXIgcG9pbnQsIHdoaWNoIHByZXNlbnRzCnRoZSBtb3N0IHNlcmlvdXMgZGlmZmljdWx0eSwgdGhhdCByZXF1aXJlcyBub3RpY2UgaW4KCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjE5MSIgLz4KCnRoaXMgY29ubmV4aW9uOiB3ZSBtdXN0IGNvbnNpZGVyIGJ5IHdoYXQgbWVhbnMKdGhpbmdzIHdoaWNoIGFyZSBuYXR1cmFsbHkgdW5zZWVtbHkgYW5kIHdoaWNoLCBoYWQKd2UgYmVlbiBnaXZlbiB0aGUgY2hvaWNlLCB3ZSBzaG91bGQgaGF2ZSBwcmVmZXJyZWQKbm90IHRvIHNheSwgbWF5IGJlIHV0dGVyZWQgd2l0aG91dCBpbmRlY29ydW0uCjwvdHJhbnNsYXRpb24+"
translation['11.4.61'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MSIgdW5pdD0ic2VjdGlvbiIgLz5XaGF0IGF0IGZpcnN0IHNpZ2h0IGNhbiBiZSBtb3JlIHVucGxlYXNpbmcgYW5kIHdoYXQKbW9yZSByZXZvbHRpbmcgdG8gdGhlIGVhcnMgb2YgbWVuIHRoYW4gYSBjYXNlIGluCndoaWNoIGEgc29uIG9yIGhpcyBhZHZvY2F0ZSBoYXMgdG8gc3BlYWsgYWdhaW5zdCBoaXMKbW90aGVyPyBBbmQgeWV0IHNvbWV0aW1lcyBpdCBpcyBhYnNvbHV0ZWx5IG5lY2Vzc2FyeSwgYXMsIGZvciBleGFtcGxlLCBpbiB0aGUgY2FzZSBvZiBDbHVlbnRpdXMgSGFiaXR1cy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBDbHUuPC9oaT4gbHhpLiAxNjkgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+IFNhc2lhIHdhcyBDbHVlbnRpdXMnIG1vdGhlcjwvbm90ZT4KQnV0IGl0IGlzIG5vdCBhbHdheXMgZGVzaXJhYmxlIHRvIGVtcGxveSB0aGUgbWV0aG9kCmFkb3B0ZWQgYnkgQ2ljZXJvIGFnYWluc3QgU2FzaWEsIG5vdCBiZWNhdXNlIGhlIGRpZCBub3QKbWFrZSBtb3N0IGFkbWlyYWJsZSB1c2Ugb2YgaXQsIGJ1dCBiZWNhdXNlIGluIHN1Y2gKY2FzZXMgaXQgbWFrZXMgdGhlIGdyZWF0ZXN0IGRpZmZlcmVuY2Ugd2hhdCB0aGUgcG9pbnQKbWF5IGJlIGFuZCB3aGF0IHRoZSBtYW5uZXIgaW4gd2hpY2ggdGhlIG1vdGhlcgpzZWVrcyB0byBpbmp1cmUgaGVyIHNvbi48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gQ2x1LjwvaGk+IGx4aS4gMTY5IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPiBTYXNpYSB3YXMgQ2x1ZW50aXVzJyBtb3RoZXI8L3RyYW5zbGF0aW9uPg=="
translation['11.4.62'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MiIgdW5pdD0ic2VjdGlvbiIgLz4gSW4gdGhlIGNhc2Ugb2YgU2FzaWEgc2hlIGhhdApvcGVubHkgc291Z2h0IHRvIHByb2N1cmUgdGhlIGRlc3RydWN0aW9uIG9mIGhlciBzb24sCmFuZCBjb25zZXF1ZW50bHkgdmlnb3JvdXMgbWV0aG9kcyB3ZXJlIGp1c3RpZmllZAphZ2FpbnN0IGhlci4gQnV0IHRoZXJlIHdlcmUgdHdvIHBvaW50cywgdGhlIG9ubHkKcG9pbnRzIHdoaWNoIHJlbWFpbmVkIHRvIGJlIGRlYWx0IHdpdGgsIHRoYXQgd2VyZQpoYW5kbGVkIGJ5IENpY2VybyB3aXRoIGNvbnN1bW1hdGUgc2tpbGw6IGluIHRoZQpmaXJzdCBwbGFjZSwgaGUgZG9lcyBub3QgZm9yZ2V0IHRoZSByZXZlcmVuY2UgdGhhdCBpcwpkdWUgdG8gcGFyZW50cywgYW5kIGluIHRoZSBzZWNvbmQsIGFmdGVyIGEgdGhvcm91Z2gKaW52ZXN0aWdhdGlvbiBvZiB0aGUgaGlzdG9yeSBvZiB0aGUgY3JpbWUsIGhlIG1ha2VzCml0IGNsZWFyIHRoYXQgaXQgd2FzIG5vdCBtZXJlbHkgcmlnaHQsIGJ1dCBhIHBvc2l0aXZlCm5lY2Vzc2l0eSB0aGF0IGhlIHNob3VsZCBzYXkgd2hhdCBoZSBwcm9wb3NlZCB0bwpzYXkgYWdhaW5zdCB0aGUgbW90aGVyLjwvdHJhbnNsYXRpb24+"
translation['11.4.63'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MyIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIGhlIHBsYWNlZCB0aGlzIGV4cGxhbnRhdGlvbiBpbiB0aGUgZm9yZWZyb250IG9mIGhpcyBjYXNlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gQ2x1LjwvaGk+IHZpLiAxNy48L25vdGU+IGFsdGhvdWdoIGl0CmhhZCByZWFsbHkgbm90aGluZyB0byBkbyB3aXRoIHRoZSBhY3R1YWwgcXVlc3Rpb24gYXQKaXNzdWU7IGEgZmFjdCB3aGljaCBzaG93cyB0aGF0IGhpcyBmaXJzdCBjb25zaWRlcmF0aW9uCmluIHRoYXQgZGlmZmljdWx0IGFuZCBjb21wbGljYXRlZCBjYXNlIHdhcyB0aGUgY29uc2lkZXJhdGlvbiBvZiB3aGF0IHdhcyBiZWNvbWluZyBmb3IgaGltIHRvIHNheS4gSGUKdGhlcmVmb3JlIG1hZGUgdGhlIG5hbWUgb2YgbW90aGVyIGNhc3Qgb2RpdW0gbm90Cm9uIHRoZSBzb24sIGJ1dCBvbiBoZXIgd2hvIHdhcyB0aGUgb2JqZWN0IG9mIGhpcwpkZW51bmNpYXRpb25zLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBDbHUuPC9oaT4gdmkuIDE3LjwvdHJhbnNsYXRpb24+"
translation['11.4.64'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NCIgdW5pdD0ic2VjdGlvbiIgLz4gSXQgaXMsIGhvd2V2ZXIsIGFsd2F5cyBwb3NzaWJsZSB0aGF0IGEKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjE5MyIgLz4KCm1vdGhlciBtYXkgYmUgaGVyIHNvbidzIG9wcG9uZW50IGluIGEgY2FzZSBvZiBsZXNzCnNlcmlvdXMgaW1wb3J0LCBvciBhdCBhbnkgcmF0ZSBpbiBhIHdheSB3aGljaCBpbnZvbHZlcwpsZXNzIGRlYWRseSBob3N0aWxpdHkuIFVuZGVyIHN1Y2ggY2lyY3Vtc3RhbmNlcyB0aGUKb3JhdG9yIG11c3QgYWRvcHQgYSBnZW50bGVyIGFuZCBtb3JlIHJlc3RyYWluZWQKdG9uZS4gRm9yIGV4YW1wbGUsIHdlIG1heSBvZmZlciBhcG9sb2d5IGZvciB0aGUKbGluZSB3aGljaCB3ZSB0YWtlLCBhbmQgdGh1cyBsZXNzZW4gdGhlIG9kaXVtCndoaWNoIHdlIGluY3VyIG9yIGV2ZW4gdHJhbnNmZXIgaXQgdG8gYSBkaWZmZXJlbnQKcXVhcnRlciwgd2hpbGUgaWYgaXQgYmUgb2J2aW91cyB0aGF0IHRoZSBzb24gaXMgZGVlcGx5CmdyaWV2ZWQgYnkgdGhlIHNpdHVhdGlvbiwgaXQgd2lsbCBiZSBiZWxpZXZlZCB0aGF0IGhlCmlzIGJsYW1lbGVzcyBpbiB0aGUgbWF0dGVyIGFuZCBoZSB3aWxsIGV2ZW4gYmVjb21lCmFuIG9iamVjdCBvZiBwaXR5LjwvdHJhbnNsYXRpb24+"
translation['11.4.65'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NSIgdW5pdD0ic2VjdGlvbiIgLz4gSXQgd2lsbCBhbHNvIGJlIGRlc2lyYWJsZSB0byB0aHJvdwp0aGUgYmxhbWUgb24gb3RoZXJzLCBzbyB0aGF0IGl0IG1heSBiZSBiZWxpZXZlZCB0aGF0CnRoZSBtb3RoZXIncyBhY3Rpb24gd2FzIGluc3RpZ2F0ZWQgYnkgdGhlaXIgbWFsaWNlLAphbmQgdG8gYXNzZXJ0IHRoYXQgd2Ugd2lsbCBwdXQgdXAgd2l0aCBldmVyeSBmb3JtIG9mCnByb3ZvY2F0aW9uLCBhbmQgd2lsbCBzYXkgbm90aGluZyBoYXJzaCBpbiByZXBseSwgc28KdGhhdCwgZXZlbiBhbHRob3VnaCBzdHJvbmcgbGFuZ3VhZ2UgbWF5IGJlIGFic29sdXRlbHkgbmVjZXNzYXJ5IG9uIG91ciBwYXJ0LCB3ZSBtYXkgc2VlbSB0byBiZQpkcml2ZW4gdG8gdXNlIGl0IGFnYWluc3Qgb3VyIHdpbGwuIE5heSwgaWYgc29tZQpjaGFyZ2UgaGFzIHRvIGJlIG1hZGUgYWdhaW5zdCB0aGUgbW90aGVyLCBpdCB3aWxsIGJlCnRoZSBhZHZvY2F0ZSdzIHRhc2sgdG8gbWFrZSBpdCBzZWVtIHRoYXQgaGUgZG9lcyBzbwphZ2FpbnN0IHRoZSBkZXNpcmUgb2YgdGhlIHNvbiBhbmQgZnJvbSBhIHNlbnNlIG9mCmR1dHkgdG8gaGlzIGNsaWVudC4gVGh1cyBib3RoIHNvbiBhbmQgYWR2b2NhdGUgd2lsbAp3aW4gbGVnaXRpbWF0ZSBwcmFpc2UuPC90cmFuc2xhdGlvbj4="
translation['11.4.66'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NiIgdW5pdD0ic2VjdGlvbiIgLz4gV2hhdCBJIGhhdmUgc2FpZCBhYm91dAptb3RoZXJzIHdpbGwgYXBwbHkgdG8gZWl0aGVyIHBhcmVudDsgZm9yIEkgaGF2ZQprbm93biBvZiBsaXRpZ2F0aW9uIHRha2luZyBwbGFjZSBiZXR3ZWVuIGZhdGhlcnMKYW5kIHNvbnMgYXMgd2VsbCwgYWZ0ZXIgdGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmVtYW5jaXBhdGlvbjwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkkuZS48L2hpPiBmcm9tIHRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wYXRyaWEgcG90ZXN0YXM8L2hpPiBieSBhIGZpY3RpdGlvdXMgZm9ybSBvZiBzYWxlLjwvbm90ZT4gb2YgdGhlIHNvbi4KQW5kIHdoZW4gb3RoZXIgcmVsYXRpb25zaGlwcyBhcmUgY29uY2VybmVkLCB3ZQptdXN0IHRha2UgY2FyZSB0byBjcmVhdGUgdGhlIGltcHJlc3Npb24gdGhhdCB3ZQpoYXZlIHNwb2tlbiB3aXRoIHJlbHVjdGFuY2UgYW5kIHVuZGVyIHN0cmVzcyBvZgpuZWNlc3NpdHkgYW5kIHRoYXQgd2UgaGF2ZSBiZWVuIGZvcmJlYXJpbmcgaW4gb3VyCmxhbmd1YWdlOyBidXQgdGhlIGltcG9ydGFuY2Ugb2Ygc28gZG9pbmcgd2lsbCB2YXJ5CmFjY29yZGluZyB0byB0aGUgcmVzcGVjdCBkdWUgdG8gdGhlIHBlcnNvbnMgY29uY2VybmVkLiBUaGUgc2FtZSBjb3VydGVzeSBzaG91bGQgYmUgb2JzZXJ2ZWQgaW4Kc3BlYWtpbmcgb24gYmVoYWxmIG9mIGZyZWVkbWVuIGFnYWluc3QgdGhlaXIgcGF0cm9ucy4KCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkkuZS48L2hpPiBmcm9tIHRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wYXRyaWEgcG90ZXN0YXM8L2hpPiBieSBhIGZpY3RpdGlvdXMgZm9ybSBvZiBzYWxlLjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjE5NSIgLz4KCkluIGZhY3QsIHRvIHN1bSB1cCwgaXQgd2lsbCBuZXZlciBiZWNvbWUgdXMgdG8gcGxlYWQKYWdhaW5zdCBzdWNoIHBlcnNvbnMgaW4gYSB0b25lIHdoaWNoIHdlIG91cnNlbHZlcwpzaG91bGQgaGF2ZSByZXNlbnRlZCBpbiB0aGUgbW91dGggb2YgbWVuIG9mIGxpa2UKY29uZGl0aW9uLjwvdHJhbnNsYXRpb24+"
translation['11.4.67'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NyIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIHNhbWUgcmVzcGVjdCBpcyBvbiBvY2Nhc2lvbiBkdWUgdG8KcGVyc29ucyBvZiBoaWdoIHJhbmssIGFuZCBpdCBtYXkgYmUgbmVjZXNzYXJ5IHRvCm9mZmVyIGp1c3RpZmljYXRpb24gZm9yIG91ciBmcmVlZG9tIG9mIHNwZWVjaCB0byBhdm9pZApnaXZpbmcgdGhlIGltcHJlc3Npb24gdGhhdCB3ZSBoYXZlIHNob3duIG91cnNlbHZlcwppbnNvbGVudCBvciBvc3RlbnRhdGlvdXMgaW4gb3VyIGF0dGFjayB1cG9uIHN1Y2gKcGVyc29ucy4gQ29uc2VxdWVudGx5IENpY2VybywgYWx0aG91Z2ggaGUgaW50ZW5kZWQKdG8gc3BlYWsgYWdhaW5zdCBDb3R0YTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5DcC48L2hpPiB2LiB4aWlpLiAyMC4gUC4gT3BwaXVzLCBxdWFlc3RvciB0byBNLiBBdXJlbGl1cwpDb3R0YSBpbiBCaXRoeW5pYSwgd2FzIGNoYXJnZWQgYnkgQ290dGEgaW4gYSBsZXR0ZXIgdG8gdGhlClNlbmF0ZSB3aXRoIG1pc2FwcHJvcHJpYXRpb24gb2Ygc3VwcGxpZXMgZm9yIGhpcyB0cm9vcHMgYW5kCndpdGggYW4gYXR0ZW1wdCBvbiBoaXMgbGlmZS4gVGhlIHNwZWVjaCBpbiB3aGljaCBDaWNlcm8KZGVmZW5kZWQgT3BwaXVzICg2OSBCLkMuKSBpcyBsb3N0Ljwvbm90ZT4gd2l0aCB0aGUgdXRtb3N0IHZlaGVtZW5jZSwKYW5kIGluZGVlZCB0aGUgY2FzZSBvZiBQdWJsaXVzIE9wcGl1cyB3YXMgc3VjaCB0aGF0CmhlIGNvdWxkIG5vdCBkbyBvdGhlcndpc2UsIHByZWZhY2VkIGhpcyBhdHRhY2sgYnkKcGxlYWRpbmcgYXQgc29tZSBsZW5ndGggdGhlIG5lY2Vzc2l0eSBpbXBvc2VkIHVwb24KaGltIGJ5IGhpcyBkdXR5IHRvIGhpcyBjbGllbnQuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Q3AuPC9oaT4gdi4geGlpaS4gMjAuIFAuIE9wcGl1cywgcXVhZXN0b3IgdG8gTS4gQXVyZWxpdXMKQ290dGEgaW4gQml0aHluaWEsIHdhcyBjaGFyZ2VkIGJ5IENvdHRhIGluIGEgbGV0dGVyIHRvIHRoZQpTZW5hdGUgd2l0aCBtaXNhcHByb3ByaWF0aW9uIG9mIHN1cHBsaWVzIGZvciBoaXMgdHJvb3BzIGFuZAp3aXRoIGFuIGF0dGVtcHQgb24gaGlzIGxpZmUuIFRoZSBzcGVlY2ggaW4gd2hpY2ggQ2ljZXJvCmRlZmVuZGVkIE9wcGl1cyAoNjkgQi5DLikgaXMgbG9zdC48L3RyYW5zbGF0aW9uPg=="
translation['11.4.68'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OCIgdW5pdD0ic2VjdGlvbiIgLz4gU29tZXRpbWVzLCBhZ2FpbiwgaXQKd2lsbCBiZXNlZW0gdXMgdG8gc3BhcmUgb3Igc2VlbSB0byBzcGFyZSBvdXIgaW5mZXJpb3JzLAptb3JlIGVzcGVjaWFsbHkgaWYgdGhleSBiZSB5b3VuZy4gQ2ljZXJvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBvcGVuaW5nIHNlY3Rpb25zIG9mIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBDYWNsaW8uPC9oaT48L25vdGU+IGdpdmVzIGFuCmV4YW1wbGUgb2Ygc3VjaCBtb2RlcmF0aW9uIGluIHRoZSB3YXkgaW4gd2hpY2ggaGUKZGVhbHMgd2l0aCBBdHJhdGludXMgaW4gaGlzIGRlZmVuY2Ugb2YgQ2FlbGl1czogaGUKZG9lcyBub3QgbGFzaCBoaW0gbGlrZSBhbiBlbmVteSwgYnV0IGFkbW9uaXNoZXMKaGltIGFsbW9zdCBsaWtlIGEgZmF0aGVyLiBGb3IgQXRyYXRpbnVzIHdhcyBvZgpub2JsZSBiaXJ0aCBhbmQgeW91bmcsIGFuZCB0aGUgZ3JpZXZhbmNlIHdoaWNoIGxlZApoaW0gdG8gYnJpbmcgdGhlIGFjY3VzYXRpb24gd2FzIG5vdCB1bnJlYXNvbmFibGUuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIENhY2xpby48L2hpPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHRoZSB0YXNrIGlzIGNvbXBhcmF0aXZlbHkgZWFzeSBpbiB0aG9zZSBjYXNlcwppbiB3aGljaCBpdCBpcyB0byB0aGUganVkZ2UsIG9yIGV2ZW4sIGl0IG1heSBiZSwgdG8gb3VyCmF1ZGllbmNlIHRoYXQgd2UgaGF2ZSB0byBpbmRpY2F0ZSB0aGUgcmVhc29uIGZvciBvdXIKbW9kZXJhdGlvbi4gVGhlIHJlYWwgZGlmZmljdWx0eSBhcmlzZXMgd2hlbiB3ZSBhcmUKYWZyYWlkIG9mIG9mZmVuZGluZyB0aG9zZSBhZ2FpbnN0IHdob20gd2UgYXJlCnNwZWFraW5nLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIGRpZmZpY3VsdGllcyBvZiBDaWNlcm8gd2hlbiBkZWZlbmRpbmcKTXVyZW5hIHdlcmUgaW5jcmVhc2VkIGJ5IHRoZSBmYWN0IHRoYXQgaGUgd2FzCm9wcG9zZWQgYnkgdHdvIHBlcnNvbnMgb2YgdGhpcyBjaGFyYWN0ZXIsIG5hbWVseQpNYXJjdXMgQ2F0byBhbmQgU2Vydml1cyBTdWxwaWNpdXMuIEFuZCB5ZXQgaW4Kd2hhdCBjb3VydGVvdXMgbGFuZ3VhZ2UsIGFmdGVyIGFsbG93aW5nIFN1bHBpY2l1cyBhbGwKdGhlIHZpcnR1ZXMsIGhlIHJlZnVzZXMgdG8gYWRtaXQgdGhhdCBoZSBoYXMgYW55IGlkZWEKb2YgdGhlIHdheSB0byBjb25kdWN0IGEgY2FuZGlkYXR1cmUgZm9yIHRoZQoKPHBiIGlkPSJwLjE5NyIgLz4KCmNvbnN1bHNoaXAuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+UHJvIE11cmVuLjwvaGk+IHZpaS4gMTUuPC9ub3RlPiBXaGF0IGVsc2Ugd2FzIHRoZXJlIGluIHdoaWNoIGEgbWFuIG9mIGhpZ2gKYmlydGggYW5kIGEgZGlzdGluZ3Vpc2hlZCBsYXd5ZXIgd291bGQgc29vbmVyCmFkbWl0IGhpcyBpbmZlcmlvcml0eT8gV2l0aCB3aGF0IHNraWxsIGhlIHNldHMgZm9ydGgKaGlzIHJlYXNvbnMgZm9yIHVuZGVydGFraW5nIHRoZSBkZWZlbmNlIG9mIE11cmVuYSwKd2hlbiBoZSBzYXlzIHRoYXQgaGUgc3VwcG9ydGVkIFN1bHBpY2l1cycgY2FuZGlkYXR1cmUgYXMgb3Bwb3NlZCB0byB0aGF0IG9mIE11cmVuYSwgYnV0IGRpZCBub3QKcmVnYXJkIHRoYXQgcHJlZmVyZW5jZSBhcyByZWFzb24gd2h5IGhlIHNob3VsZApzdXBwb3J0IGhpbSBpbiBicmluZ2luZyBhIGNhcGl0YWwgY2hhcmdlIGFnYWluc3QgaGlzCnJpdmFsITxtaWxlc3RvbmUgbj0iNzAiIHVuaXQ9InNlY3Rpb24iIC8+IEFuZCB3aXRoIHdoYXQgYSBsaWdodCB0b3VjaCBoZSBkZWFscyB3aXRoCkNhdG8hPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+UHJvIE11cmVuLjwvaGk+IHh4aXguIDYwLjwvbm90ZT4gSGUgaGFzIHRoZSBoaWdoZXN0IGFkbWlyYXRpb24gZm9yIGhpcwpjaGFyYWN0ZXIgYW5kIGRlc2lyZXMgdG8gc2hvdyB0aGF0IHRoZSBmYWN0IHRoYXQgaW4KY2VydGFpbiByZXNwZWN0cyBpdCBoYXMgYmVjb21lIHNldmVyZSBhbmQgY2FsbG91cyBpcyBkdWUKbm90IHRvIGFueSBwZXJzb25hbCBmYXVsdCwgYnV0IHRvIHRoZSBpbmZsdWVuY2Ugb2YgdGhlClN0b2ljIHNjaG9vbCBvZiBwaGlsb3NvcGh5OyBpbiBmYWN0IHlvdSB3b3VsZCBpbWFnaW5lCnRoYXQgdGhleSB3ZXJlIGVuZ2FnZWQgbm90IGluIGEgZm9yZW5zaWMgZGlzcHV0ZSwKYnV0IG1lcmVseSBpbiBzb21lIHBoaWxvc29waGljYWwgZGlzY3Vzc2lvbi48bWlsZXN0b25lIG49IjcxIiB1bml0PSJzZWN0aW9uIiAvPiBUaGlzCmlzIHVuZG91YnRlZGx5IHRoZSByaWdodCBtZXRob2QsIGFuZCB0aGUgc2FmZXN0IHJ1bGUKaW4gc3VjaCBjYXNlcyB3aWxsIGJlIHRvIGZvbGxvdyB0aGUgcHJhY3RpY2Ugb2YgQ2ljZXJvLApuYW1lbHksIHRoYXQsIHdoZW4gd2UgZGVzaXJlIHRvIGRpc3BhcmFnZSBhIG1hbgp3aXRob3V0IGdpdmluZyBvZmZlbmNlLCB3ZSBzaG91bGQgYWxsb3cgaGltIHRvIGJlCnRoZSBwb3NzZXNzb3Igb2YgYWxsIG90aGVyIHZpcnR1ZXMgYW5kIHBvaW50IG91dCB0aGF0Cml0IGlzIG9ubHkgaW4gdGhpcyBvbmUgcmVzcGVjdCB0aGF0IGhlIGZhbGxzIHNob3J0IG9mCmhpcyBoaWdoIHN0YW5kYXJkLCB3aGlsZSB3ZSBzaG91bGQsIGlmIHBvc3NpYmxlLCBhZGQKc29tZSByZWFzb24gd2h5IHRoaXMgc2hvdWxkIGJlIHNvLCBzdWNoLCBmb3IgZXhhbXBsZSwKYXMgaGlzIGJlaW5nIHRvbyBvYnN0aW5hdGUgb3IgY3JlZHVsb3VzIG9yIHF1aWNrIHRvCmFuZ2VyLCBvciBhY3RpbmcgdW5kZXIgdGhlIGluZmx1ZW5jZSBvZiBvdGhlcnMuCjxtaWxlc3RvbmUgbj0iNzIiIHVuaXQ9InNlY3Rpb24iIC8+KEZvciB3ZSBtYXkgZ2VuZXJhbGx5IGZpbmQgYSB3YXkgb3V0IG9mIHN1Y2ggZW1iYXJyYXNzbWVudHMgYnkgbWFraW5nIGl0IGNsZWFyIHRocm91Z2hvdXQgb3VyCndob2xlIHNwZWVjaCB0aGF0IHdlIG5vdCBtZXJlbHkgaG9ub3VyIHRoZSBvYmplY3QKb2Ygb3VyIGNyaXRpY2lzbSwgYnV0IGV2ZW4gcmVnYXJkIGhpbSB3aXRoIGFmZmVjdGlvbi4pCkZ1cnRoZXIsIHdlIHNob3VsZCBoYXZlIGdvb2QgY2F1c2UgZm9yIHNwZWFraW5nIHRodXMKYW5kIG11c3QgZG8gc28gbm90IG1lcmVseSB3aXRoIG1vZGVyYXRpb24sIGJ1dCBhbHNvCmdpdmUgdGhlIGltcHJlc3Npb24gdGhhdCBvdXIgYWN0aW9uIGlzIGR1ZSB0byB0aGUKbmVjZXNzaXRpZXMgb2YgdGhlIGNhc2UuPG1pbGVzdG9uZSBuPSI3MyIgdW5pdD0ic2VjdGlvbiIgLz4gQSBkaWZmZXJlbnQgc2l0dWF0aW9uIGFyaXNlcywKCjxwYiBpZD0icC4xOTkiIC8+CgpidXQgYW4gZWFzaWVyIG9uZSwgd2hlbiB3ZSBoYXZlIHRvIHByYWlzZSB0aGUgYWN0aW9ucwpvZiBtZW4gd2hvIGFyZSBvdGhlcndpc2UgZGlzcmVwdXRhYmxlIG9yIGhhdGVmdWwgdG8Kb3Vyc2VsdmVzOiBmb3IgaXQgaXMgb25seSByaWdodCB0aGF0IHdlIHNob3VsZCBhd2FyZApwcmFpc2Ugd2hlcmUgaXQgaXMgZGVzZXJ2ZWQsIHdoYXRldmVyIHRoZSBjaGFyYWN0ZXIKb2YgdGhlIHBlcnNvbiBwcmFpc2VkIG1heSBiZS4gQ2ljZXJvIHNwb2tlIGluCmRlZmVuY2Ugb2YgR2FiaW5pdXMgYW5kIFB1YmxpdXMgVmF0aW5pdXMsIGJvdGggb2YKdGhlbSBoaXMgZGVhZGx5IGVuZW1pZXMgYW5kIG1lbiBhZ2FpbnN0IHdob20KaGUgaGFkIHByZXZpb3VzbHkgc3Bva2VuIGFuZCBldmVuIHB1Ymxpc2hlZCBoaXMKc3BlZWNoZXM6IGJ1dCBoZSBqdXN0aWZpZXMgaGltc2VsZiBieSBkZWNsYXJpbmcgdGhhdApoZSBkb2VzIHNvIG5vdCBiZWNhdXNlIGhlIGlzIGFueGlvdXMgZm9yIGhpcyByZXB1dGF0aW9uIGFzIGFuIGFjY29tcGxpc2hlZCBzcGVha2VyLCBidXQgYmVjYXVzZSBoZSBpcwpjb25jZXJuZWQgZm9yIGhpcyBob25vdXIuPG1pbGVzdG9uZSBuPSI3NCIgdW5pdD0ic2VjdGlvbiIgLz4gSGUgaGFkIGEgbW9yZSBkaWZmaWN1bHQKdGFzayBpbiBoaXMgZGVmZW5jZSBvZiBDbHVlbnRpdXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5DaC4gMTcgPGhpIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPjwvbm90ZT4gYXMgaXQgd2FzIG5lY2Vzc2FyeQpmb3IgaGltIHRvIGRlbm91bmNlIFNjYW1hbmRlcidzIGd1aWx0LCBhbHRob3VnaCBoZQpoYWQgcHJldmlvdXNseSBhcHBlYXJlZCBmb3IgaGltLiBCdXQgaGUgZXhjdXNlcwpoaXMgYWN0aW9uIHdpdGggdGhlIHV0bW9zdCBncmFjZSwgYWxsZWdpbmcgdGhlCmltcG9ydHVuaXR5IG9mIHRob3NlIHBlcnNvbnMgd2hvIGhhZCBicm91Z2h0ClNjYW1hbmRlciB0byBoaW0sIGFuZCBoaXMgb3duIHlvdXRoIGF0IHRoZSB0aW1lLAp3aGVyZWFzIGl0IHdvdWxkIGhhdmUgYmVlbiBhIHNlcmlvdXMgYmxvdCBvbiBoaXMKcmVwdXRhdGlvbiwgZXNwZWNpYWxseSBpbiBjb25uZXhpb24gd2l0aCBhIGNhc2Ugb2YgdGhlCm1vc3QgZHViaW91cyBjaGFyYWN0ZXIsIGlmIGhlIGhhZCBhZG1pdHRlZCB0aGF0IGhlCndhcyBvbmUgd2hvIHdhcyByZWFkeSB0byB1bmRlcnRha2UgdGhlIGRlZmVuY2Ugb2YKZ3VpbHR5IHBlcnNvbnMgd2l0aG91dCBhc2tpbmcgYXdrd2FyZCBxdWVzdGlvbnMuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['11.4.69'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIGRpZmZpY3VsdGllcyBvZiBDaWNlcm8gd2hlbiBkZWZlbmRpbmcKTXVyZW5hIHdlcmUgaW5jcmVhc2VkIGJ5IHRoZSBmYWN0IHRoYXQgaGUgd2FzCm9wcG9zZWQgYnkgdHdvIHBlcnNvbnMgb2YgdGhpcyBjaGFyYWN0ZXIsIG5hbWVseQpNYXJjdXMgQ2F0byBhbmQgU2Vydml1cyBTdWxwaWNpdXMuIEFuZCB5ZXQgaW4Kd2hhdCBjb3VydGVvdXMgbGFuZ3VhZ2UsIGFmdGVyIGFsbG93aW5nIFN1bHBpY2l1cyBhbGwKdGhlIHZpcnR1ZXMsIGhlIHJlZnVzZXMgdG8gYWRtaXQgdGhhdCBoZSBoYXMgYW55IGlkZWEKb2YgdGhlIHdheSB0byBjb25kdWN0IGEgY2FuZGlkYXR1cmUgZm9yIHRoZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMTk3IiAvPgoKY29uc3Vsc2hpcC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+UHJvIE11cmVuLjwvaGk+IHZpaS4gMTUuPC9ub3RlPiBXaGF0IGVsc2Ugd2FzIHRoZXJlIGluIHdoaWNoIGEgbWFuIG9mIGhpZ2gKYmlydGggYW5kIGEgZGlzdGluZ3Vpc2hlZCBsYXd5ZXIgd291bGQgc29vbmVyCmFkbWl0IGhpcyBpbmZlcmlvcml0eT8gV2l0aCB3aGF0IHNraWxsIGhlIHNldHMgZm9ydGgKaGlzIHJlYXNvbnMgZm9yIHVuZGVydGFraW5nIHRoZSBkZWZlbmNlIG9mIE11cmVuYSwKd2hlbiBoZSBzYXlzIHRoYXQgaGUgc3VwcG9ydGVkIFN1bHBpY2l1cycgY2FuZGlkYXR1cmUgYXMgb3Bwb3NlZCB0byB0aGF0IG9mIE11cmVuYSwgYnV0IGRpZCBub3QKcmVnYXJkIHRoYXQgcHJlZmVyZW5jZSBhcyByZWFzb24gd2h5IGhlIHNob3VsZApzdXBwb3J0IGhpbSBpbiBicmluZ2luZyBhIGNhcGl0YWwgY2hhcmdlIGFnYWluc3QgaGlzCnJpdmFsITxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlBybyBNdXJlbi48L2hpPiB2aWkuIDE1LjwvdHJhbnNsYXRpb24+"
translation['11.4.70'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MCIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIHdpdGggd2hhdCBhIGxpZ2h0IHRvdWNoIGhlIGRlYWxzIHdpdGgKQ2F0byE8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+UHJvIE11cmVuLjwvaGk+IHh4aXguIDYwLjwvbm90ZT4gSGUgaGFzIHRoZSBoaWdoZXN0IGFkbWlyYXRpb24gZm9yIGhpcwpjaGFyYWN0ZXIgYW5kIGRlc2lyZXMgdG8gc2hvdyB0aGF0IHRoZSBmYWN0IHRoYXQgaW4KY2VydGFpbiByZXNwZWN0cyBpdCBoYXMgYmVjb21lIHNldmVyZSBhbmQgY2FsbG91cyBpcyBkdWUKbm90IHRvIGFueSBwZXJzb25hbCBmYXVsdCwgYnV0IHRvIHRoZSBpbmZsdWVuY2Ugb2YgdGhlClN0b2ljIHNjaG9vbCBvZiBwaGlsb3NvcGh5OyBpbiBmYWN0IHlvdSB3b3VsZCBpbWFnaW5lCnRoYXQgdGhleSB3ZXJlIGVuZ2FnZWQgbm90IGluIGEgZm9yZW5zaWMgZGlzcHV0ZSwKYnV0IG1lcmVseSBpbiBzb21lIHBoaWxvc29waGljYWwgZGlzY3Vzc2lvbi48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Qcm8gTXVyZW4uPC9oaT4geHhpeC4gNjAuPC90cmFuc2xhdGlvbj4="
translation['11.4.71'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhpcwppcyB1bmRvdWJ0ZWRseSB0aGUgcmlnaHQgbWV0aG9kLCBhbmQgdGhlIHNhZmVzdCBydWxlCmluIHN1Y2ggY2FzZXMgd2lsbCBiZSB0byBmb2xsb3cgdGhlIHByYWN0aWNlIG9mIENpY2VybywKbmFtZWx5LCB0aGF0LCB3aGVuIHdlIGRlc2lyZSB0byBkaXNwYXJhZ2UgYSBtYW4Kd2l0aG91dCBnaXZpbmcgb2ZmZW5jZSwgd2Ugc2hvdWxkIGFsbG93IGhpbSB0byBiZQp0aGUgcG9zc2Vzc29yIG9mIGFsbCBvdGhlciB2aXJ0dWVzIGFuZCBwb2ludCBvdXQgdGhhdAppdCBpcyBvbmx5IGluIHRoaXMgb25lIHJlc3BlY3QgdGhhdCBoZSBmYWxscyBzaG9ydCBvZgpoaXMgaGlnaCBzdGFuZGFyZCwgd2hpbGUgd2Ugc2hvdWxkLCBpZiBwb3NzaWJsZSwgYWRkCnNvbWUgcmVhc29uIHdoeSB0aGlzIHNob3VsZCBiZSBzbywgc3VjaCwgZm9yIGV4YW1wbGUsCmFzIGhpcyBiZWluZyB0b28gb2JzdGluYXRlIG9yIGNyZWR1bG91cyBvciBxdWljayB0bwphbmdlciwgb3IgYWN0aW5nIHVuZGVyIHRoZSBpbmZsdWVuY2Ugb2Ygb3RoZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.4.72'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MiIgdW5pdD0ic2VjdGlvbiIgLz4oRm9yIHdlIG1heSBnZW5lcmFsbHkgZmluZCBhIHdheSBvdXQgb2Ygc3VjaCBlbWJhcnJhc3NtZW50cyBieSBtYWtpbmcgaXQgY2xlYXIgdGhyb3VnaG91dCBvdXIKd2hvbGUgc3BlZWNoIHRoYXQgd2Ugbm90IG1lcmVseSBob25vdXIgdGhlIG9iamVjdApvZiBvdXIgY3JpdGljaXNtLCBidXQgZXZlbiByZWdhcmQgaGltIHdpdGggYWZmZWN0aW9uLikKRnVydGhlciwgd2Ugc2hvdWxkIGhhdmUgZ29vZCBjYXVzZSBmb3Igc3BlYWtpbmcgdGh1cwphbmQgbXVzdCBkbyBzbyBub3QgbWVyZWx5IHdpdGggbW9kZXJhdGlvbiwgYnV0IGFsc28KZ2l2ZSB0aGUgaW1wcmVzc2lvbiB0aGF0IG91ciBhY3Rpb24gaXMgZHVlIHRvIHRoZQpuZWNlc3NpdGllcyBvZiB0aGUgY2FzZS48L3RyYW5zbGF0aW9uPg=="
translation['11.4.73'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MyIgdW5pdD0ic2VjdGlvbiIgLz4gQSBkaWZmZXJlbnQgc2l0dWF0aW9uIGFyaXNlcywKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjE5OSIgLz4KCmJ1dCBhbiBlYXNpZXIgb25lLCB3aGVuIHdlIGhhdmUgdG8gcHJhaXNlIHRoZSBhY3Rpb25zCm9mIG1lbiB3aG8gYXJlIG90aGVyd2lzZSBkaXNyZXB1dGFibGUgb3IgaGF0ZWZ1bCB0bwpvdXJzZWx2ZXM6IGZvciBpdCBpcyBvbmx5IHJpZ2h0IHRoYXQgd2Ugc2hvdWxkIGF3YXJkCnByYWlzZSB3aGVyZSBpdCBpcyBkZXNlcnZlZCwgd2hhdGV2ZXIgdGhlIGNoYXJhY3RlcgpvZiB0aGUgcGVyc29uIHByYWlzZWQgbWF5IGJlLiBDaWNlcm8gc3Bva2UgaW4KZGVmZW5jZSBvZiBHYWJpbml1cyBhbmQgUHVibGl1cyBWYXRpbml1cywgYm90aCBvZgp0aGVtIGhpcyBkZWFkbHkgZW5lbWllcyBhbmQgbWVuIGFnYWluc3Qgd2hvbQpoZSBoYWQgcHJldmlvdXNseSBzcG9rZW4gYW5kIGV2ZW4gcHVibGlzaGVkIGhpcwpzcGVlY2hlczogYnV0IGhlIGp1c3RpZmllcyBoaW1zZWxmIGJ5IGRlY2xhcmluZyB0aGF0CmhlIGRvZXMgc28gbm90IGJlY2F1c2UgaGUgaXMgYW54aW91cyBmb3IgaGlzIHJlcHV0YXRpb24gYXMgYW4gYWNjb21wbGlzaGVkIHNwZWFrZXIsIGJ1dCBiZWNhdXNlIGhlIGlzCmNvbmNlcm5lZCBmb3IgaGlzIGhvbm91ci48L3RyYW5zbGF0aW9uPg=="
translation['11.4.74'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NCIgdW5pdD0ic2VjdGlvbiIgLz4gSGUgaGFkIGEgbW9yZSBkaWZmaWN1bHQKdGFzayBpbiBoaXMgZGVmZW5jZSBvZiBDbHVlbnRpdXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkNoLiAxNyA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zcXEuPC9oaT48L25vdGU+IGFzIGl0IHdhcyBuZWNlc3NhcnkKZm9yIGhpbSB0byBkZW5vdW5jZSBTY2FtYW5kZXIncyBndWlsdCwgYWx0aG91Z2ggaGUKaGFkIHByZXZpb3VzbHkgYXBwZWFyZWQgZm9yIGhpbS4gQnV0IGhlIGV4Y3VzZXMKaGlzIGFjdGlvbiB3aXRoIHRoZSB1dG1vc3QgZ3JhY2UsIGFsbGVnaW5nIHRoZQppbXBvcnR1bml0eSBvZiB0aG9zZSBwZXJzb25zIHdobyBoYWQgYnJvdWdodApTY2FtYW5kZXIgdG8gaGltLCBhbmQgaGlzIG93biB5b3V0aCBhdCB0aGUgdGltZSwKd2hlcmVhcyBpdCB3b3VsZCBoYXZlIGJlZW4gYSBzZXJpb3VzIGJsb3Qgb24gaGlzCnJlcHV0YXRpb24sIGVzcGVjaWFsbHkgaW4gY29ubmV4aW9uIHdpdGggYSBjYXNlIG9mIHRoZQptb3N0IGR1YmlvdXMgY2hhcmFjdGVyLCBpZiBoZSBoYWQgYWRtaXR0ZWQgdGhhdCBoZQp3YXMgb25lIHdobyB3YXMgcmVhZHkgdG8gdW5kZXJ0YWtlIHRoZSBkZWZlbmNlIG9mCmd1aWx0eSBwZXJzb25zIHdpdGhvdXQgYXNraW5nIGF3a3dhcmQgcXVlc3Rpb25zLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49Ijc1IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBvdGhlciBoYW5kLCB3aGVuIHdlIGFyZSBwbGVhZGluZyBiZWZvcmUKYSBqdWRnZSwgd2hvIGhhcyBzcGVjaWFsIHJlYXNvbnMgZm9yIGJlaW5nIGhvc3RpbGUgdG8KdXMgb3IgaXMgZm9yIHNvbWUgcGVyc29uYWwgbW90aXZlIGlsbC1kaXNwb3NlZCB0byB0aGUKY2F1c2Ugd2hpY2ggd2UgaGF2ZSB1bmRlcnRha2VuLCBhbHRob3VnaCBpdCBtYXkKYmUgZGlmZmljdWx0IHRvIHBlcnN1YWRlIGhpbSwgdGhlIG1ldGhvZCB3aGljaCB3ZQpzaG91bGQgYWRvcHQgaW4gc3BlYWtpbmcgaXMgc2ltcGxlIGVub3VnaDogd2Ugc2hhbGwKcHJldGVuZCB0aGF0IG91ciBjb25maWRlbmNlIGluIGhpcyBpbnRlZ3JpdHkgYW5kIGluCnRoZSBqdXN0aWNlIG9mIG91ciBjYXVzZSBpcyBzdWNoIHRoYXQgd2UgaGF2ZSBubwpmZWFycy4gV2UgbXVzdCBwbGF5IHVwb24gaGlzIHZhbml0eSBieSBwb2ludGluZyBvdXQKdGhhdCB0aGUgbGVzcyBoZSBpbmR1bGdlcyBoaXMgb3duIHBlcnNvbmFsIGVubWl0eQpvciBpbnRlcmVzdCwgdGhlIGdyZWF0ZXIgd2lsbCBiZSB0aGUgcmVwdXRhdGlvbiBmb3IKCjxwYiBpZD0icC4yMDEiIC8+Cgpjb25zY2llbnRpb3VzIHJlY3RpdHVkZSB0aGF0IHdpbGwgYWNjcnVlIHRvIGhpbSBmcm9tCmhpcyB2ZXJkaWN0LjxtaWxlc3RvbmUgbj0iNzYiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBzYW1lIG1ldGhvZCBtYXkgYmUgYWRvcHRlZCBpZgpvdXIgY2FzZSBzaG91bGQgY2hhbmNlIHRvIGJlIHNlbnQgYmFjayB0byB0aGUgc2FtZQpqdWRnZXMgZnJvbSB3aG9tIHdlIGhhdmUgYXBwZWFsZWQ6IGJ1dCB3ZSBtYXkKZnVydGhlciwgaWYgdGhlIGNhc2Ugc2hvdWxkIHBlcm1pdCwgcGxlYWQgdGhhdCB3ZQp3ZXJlIGZvcmNlZCB0byB0YWtlIHRoZSBhY3Rpb24gd2hpY2ggd2UgZGlkIG9yIHdlcmUKbGVkIHRvIGl0IGJ5IGVycm9yIG9yIHN1c3BpY2lvbi48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5JLmUuPC9oaT4gYXBvbG9naXNlIGZvciByZWZ1c2luZyB0byBhY2NlcHQgaGlzIG9yaWdpbmFsIGp1ZGdlbWVudC48L25vdGU+IFRoZSBzYWZlc3QgY291cnNlCndpbGwgdGhlcmVmb3JlIGJlIHRvIGV4cHJlc3Mgb3VyIHJlZ3JldCwgYXBvbG9naXNlIGZvcgpvdXIgZmF1bHQgYW5kIGVtcGxveSBldmVyeSBtZWFucyB0byBpbmR1Y2UgdGhlCmp1ZGdlIHRvIGZlZWwgY29tcHVuY3Rpb24gZm9yIGhpcyBhbmdlci48bWlsZXN0b25lIG49Ijc3IiB1bml0PSJzZWN0aW9uIiAvPiBJdCB3aWxsCmFsc28gc29tZXRpbWVzIGhhcHBlbiB0aGF0IGEganVkZ2UgbWF5IGhhdmUgdG8gdHJ5CnRoZSBzYW1lIGNhc2Ugb24gd2hpY2ggaGUgaGFzIHByZXZpb3VzbHkgZ2l2ZW4KanVkZ21lbnQuIEluIHN1Y2ggY2lyY3Vtc3RhbmNlcyB0aGUgbWV0aG9kCmNvbW1vbmx5IGFkb3B0ZWQgaXMgdG8gc2F5IHRoYXQgd2Ugc2hvdWxkIG5vdApoYXZlIHZlbnR1cmVkIHRvIGRpc3B1dGUgaGlzIHNlbnRlbmNlIGJlZm9yZSBhbnkKb3RoZXIganVkZ2UsIHNpbmNlIGhlIGFsb25lIHdvdWxkIGJlIGp1c3RpZmllZCBpbgpyZXZpc2luZyBpdDogYnV0IChhbmQgaW4gdGhpcyB3ZSBtdXN0IGJlIGd1aWRlZCBieQp0aGUgY2lyY3Vtc3RhbmNlcyBvZiB0aGUgY2FzZSkgd2UgbWF5IGFsbGVnZSB0aGF0CmNlcnRhaW4gZmFjdHMgd2VyZSBub3Qga25vd24gb24gdGhlIHByZXZpb3VzCm9jY2FzaW9uIG9yIGNlcnRhaW4gd2l0bmVzc2VzIHdlcmUgdW5hdmFpbGFibGUsIG9yLAp0aG91Z2ggdGhpcyBtdXN0IGJlIGFkdmFuY2VkIHdpdGggdGhlIHV0bW9zdApjYXV0aW9uIGFuZCBvbmx5IGluIHRoZSBsYXN0IHJlc29ydCwgdGhhdCBvdXIgY2xpZW50cycKYWR2b2NhdGVzIHdlcmUgdW5lcXVhbCB0byB0aGVpciB0YXNrLjxtaWxlc3RvbmUgbj0iNzgiIHVuaXQ9InNlY3Rpb24iIC8+IEFuZCBldmVuIGlmCndlIGhhdmUgdG8gcGxlYWQgYSBjYXNlIGFmcmVzaCBiZWZvcmUgZGlmZmVyZW50Cmp1ZGdlcywgYXMgbWF5IG9jY3VyIGluIGEgc2Vjb25kIHRyaWFsIG9mIGEgY2xhaW0gdG8KZnJlZWRvbSBvciBpbiBjYXNlcyBpbiB0aGUgY2VudHVtdmlyYWwgY291cnRzLCB3aGljaAphcmUgZGl2aWRlZCBiZXR3ZWVuIHR3byBkaWZmZXJlbnQgcGFuZWxzLCBpdCB3aWxsIGJlCm1vc3Qgc2VlbWx5LCBpZiB3ZSBoYXZlIGxvc3Qgb3VyIGNhc2UgYmVmb3JlIHRoZSBmaXJzdApwYW5lbCwgdG8gc2F5IG5vdGhpbmcgYWdhaW5zdCB0aGUganVkZ2VzIHdobyB0cmllZAp0aGUgY2FzZSBvbiB0aGF0IG9jY2FzaW9uLiBCdXQgdGhpcyBpcyBhIHN1YmplY3QKd2l0aCB3aGljaCBJIGRlYWx0IGF0IHNvbWUgbGVuZ3RoIGluIHRoZSBwYXNzYWdlCndoZXJlIEkgZGlzY3Vzc2VkIDxoaSByZW5kPSJpdGFsaWNzIj5wcm9vZnMuPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxtaWxlc3RvbmUgbj0iNSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+aWkuIDEsIHdoZXJlLCBhcyBoZXJlLCBpdCBpcyBpbmRpY2F0ZWQgdGhhdCBkaWZmZXJlbnQKcG9ydGlvbnMgb2YgYSBjYXNlIG1pZ2h0IGJlIHRyaWVkIGJ5IHR3byBwYW5lbHMgb2YgPGhpIHJlbmQ9Iml0YWxpY3MiPmNlbnR1bXZpcmk8L2hpPgpzaXR0aW5nIHNlcGFyYXRlbHkuIFRoZSBjZW50dW12aXJhbCBjb3VydCBkZWFsdCBtYWlubHkgd2l0aApjYXNlcyBvZiBpbmhlcml0YW5jZS48L25vdGU+PC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['11.4.75'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NSIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgb3RoZXIgaGFuZCwgd2hlbiB3ZSBhcmUgcGxlYWRpbmcgYmVmb3JlCmEganVkZ2UsIHdobyBoYXMgc3BlY2lhbCByZWFzb25zIGZvciBiZWluZyBob3N0aWxlIHRvCnVzIG9yIGlzIGZvciBzb21lIHBlcnNvbmFsIG1vdGl2ZSBpbGwtZGlzcG9zZWQgdG8gdGhlCmNhdXNlIHdoaWNoIHdlIGhhdmUgdW5kZXJ0YWtlbiwgYWx0aG91Z2ggaXQgbWF5CmJlIGRpZmZpY3VsdCB0byBwZXJzdWFkZSBoaW0sIHRoZSBtZXRob2Qgd2hpY2ggd2UKc2hvdWxkIGFkb3B0IGluIHNwZWFraW5nIGlzIHNpbXBsZSBlbm91Z2g6IHdlIHNoYWxsCnByZXRlbmQgdGhhdCBvdXIgY29uZmlkZW5jZSBpbiBoaXMgaW50ZWdyaXR5IGFuZCBpbgp0aGUganVzdGljZSBvZiBvdXIgY2F1c2UgaXMgc3VjaCB0aGF0IHdlIGhhdmUgbm8KZmVhcnMuIFdlIG11c3QgcGxheSB1cG9uIGhpcyB2YW5pdHkgYnkgcG9pbnRpbmcgb3V0CnRoYXQgdGhlIGxlc3MgaGUgaW5kdWxnZXMgaGlzIG93biBwZXJzb25hbCBlbm1pdHkKb3IgaW50ZXJlc3QsIHRoZSBncmVhdGVyIHdpbGwgYmUgdGhlIHJlcHV0YXRpb24gZm9yCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yMDEiIC8+Cgpjb25zY2llbnRpb3VzIHJlY3RpdHVkZSB0aGF0IHdpbGwgYWNjcnVlIHRvIGhpbSBmcm9tCmhpcyB2ZXJkaWN0LjwvdHJhbnNsYXRpb24+"
translation['11.4.76'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NiIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIHNhbWUgbWV0aG9kIG1heSBiZSBhZG9wdGVkIGlmCm91ciBjYXNlIHNob3VsZCBjaGFuY2UgdG8gYmUgc2VudCBiYWNrIHRvIHRoZSBzYW1lCmp1ZGdlcyBmcm9tIHdob20gd2UgaGF2ZSBhcHBlYWxlZDogYnV0IHdlIG1heQpmdXJ0aGVyLCBpZiB0aGUgY2FzZSBzaG91bGQgcGVybWl0LCBwbGVhZCB0aGF0IHdlCndlcmUgZm9yY2VkIHRvIHRha2UgdGhlIGFjdGlvbiB3aGljaCB3ZSBkaWQgb3Igd2VyZQpsZWQgdG8gaXQgYnkgZXJyb3Igb3Igc3VzcGljaW9uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5JLmUuPC9oaT4gYXBvbG9naXNlIGZvciByZWZ1c2luZyB0byBhY2NlcHQgaGlzIG9yaWdpbmFsIGp1ZGdlbWVudC48L25vdGU+IFRoZSBzYWZlc3QgY291cnNlCndpbGwgdGhlcmVmb3JlIGJlIHRvIGV4cHJlc3Mgb3VyIHJlZ3JldCwgYXBvbG9naXNlIGZvcgpvdXIgZmF1bHQgYW5kIGVtcGxveSBldmVyeSBtZWFucyB0byBpbmR1Y2UgdGhlCmp1ZGdlIHRvIGZlZWwgY29tcHVuY3Rpb24gZm9yIGhpcyBhbmdlci48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5JLmUuPC9oaT4gYXBvbG9naXNlIGZvciByZWZ1c2luZyB0byBhY2NlcHQgaGlzIG9yaWdpbmFsIGp1ZGdlbWVudC48L3RyYW5zbGF0aW9uPg=="
translation['11.4.77'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NyIgdW5pdD0ic2VjdGlvbiIgLz4gSXQgd2lsbAphbHNvIHNvbWV0aW1lcyBoYXBwZW4gdGhhdCBhIGp1ZGdlIG1heSBoYXZlIHRvIHRyeQp0aGUgc2FtZSBjYXNlIG9uIHdoaWNoIGhlIGhhcyBwcmV2aW91c2x5IGdpdmVuCmp1ZGdtZW50LiBJbiBzdWNoIGNpcmN1bXN0YW5jZXMgdGhlIG1ldGhvZApjb21tb25seSBhZG9wdGVkIGlzIHRvIHNheSB0aGF0IHdlIHNob3VsZCBub3QKaGF2ZSB2ZW50dXJlZCB0byBkaXNwdXRlIGhpcyBzZW50ZW5jZSBiZWZvcmUgYW55Cm90aGVyIGp1ZGdlLCBzaW5jZSBoZSBhbG9uZSB3b3VsZCBiZSBqdXN0aWZpZWQgaW4KcmV2aXNpbmcgaXQ6IGJ1dCAoYW5kIGluIHRoaXMgd2UgbXVzdCBiZSBndWlkZWQgYnkKdGhlIGNpcmN1bXN0YW5jZXMgb2YgdGhlIGNhc2UpIHdlIG1heSBhbGxlZ2UgdGhhdApjZXJ0YWluIGZhY3RzIHdlcmUgbm90IGtub3duIG9uIHRoZSBwcmV2aW91cwpvY2Nhc2lvbiBvciBjZXJ0YWluIHdpdG5lc3NlcyB3ZXJlIHVuYXZhaWxhYmxlLCBvciwKdGhvdWdoIHRoaXMgbXVzdCBiZSBhZHZhbmNlZCB3aXRoIHRoZSB1dG1vc3QKY2F1dGlvbiBhbmQgb25seSBpbiB0aGUgbGFzdCByZXNvcnQsIHRoYXQgb3VyIGNsaWVudHMnCmFkdm9jYXRlcyB3ZXJlIHVuZXF1YWwgdG8gdGhlaXIgdGFzay48L3RyYW5zbGF0aW9uPg=="
translation['11.4.78'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OCIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIGV2ZW4gaWYKd2UgaGF2ZSB0byBwbGVhZCBhIGNhc2UgYWZyZXNoIGJlZm9yZSBkaWZmZXJlbnQKanVkZ2VzLCBhcyBtYXkgb2NjdXIgaW4gYSBzZWNvbmQgdHJpYWwgb2YgYSBjbGFpbSB0bwpmcmVlZG9tIG9yIGluIGNhc2VzIGluIHRoZSBjZW50dW12aXJhbCBjb3VydHMsIHdoaWNoCmFyZSBkaXZpZGVkIGJldHdlZW4gdHdvIGRpZmZlcmVudCBwYW5lbHMsIGl0IHdpbGwgYmUKbW9zdCBzZWVtbHksIGlmIHdlIGhhdmUgbG9zdCBvdXIgY2FzZSBiZWZvcmUgdGhlIGZpcnN0CnBhbmVsLCB0byBzYXkgbm90aGluZyBhZ2FpbnN0IHRoZSBqdWRnZXMgd2hvIHRyaWVkCnRoZSBjYXNlIG9uIHRoYXQgb2NjYXNpb24uIEJ1dCB0aGlzIGlzIGEgc3ViamVjdAp3aXRoIHdoaWNoIEkgZGVhbHQgYXQgc29tZSBsZW5ndGggaW4gdGhlIHBhc3NhZ2UKd2hlcmUgSSBkaXNjdXNzZWQgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvb2ZzLjwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz5paS4gMSwgd2hlcmUsIGFzIGhlcmUsIGl0IGlzIGluZGljYXRlZCB0aGF0IGRpZmZlcmVudApwb3J0aW9ucyBvZiBhIGNhc2UgbWlnaHQgYmUgdHJpZWQgYnkgdHdvIHBhbmVscyBvZiA8aGkgcmVuZD0iaXRhbGljcyI+Y2VudHVtdmlyaTwvaGk+CnNpdHRpbmcgc2VwYXJhdGVseS4gVGhlIGNlbnR1bXZpcmFsIGNvdXJ0IGRlYWx0IG1haW5seSB3aXRoCmNhc2VzIG9mIGluaGVyaXRhbmNlLjwvbm90ZT48L3RyYW5zbGF0aW9uPg=="
translation['11.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['11.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPmlpLiAxLCB3aGVyZSwgYXMgaGVyZSwgaXQgaXMgaW5kaWNhdGVkIHRoYXQgZGlmZmVyZW50CnBvcnRpb25zIG9mIGEgY2FzZSBtaWdodCBiZSB0cmllZCBieSB0d28gcGFuZWxzIG9mIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNlbnR1bXZpcmk8L2hpPgpzaXR0aW5nIHNlcGFyYXRlbHkuIFRoZSBjZW50dW12aXJhbCBjb3VydCBkZWFsdCBtYWlubHkgd2l0aApjYXNlcyBvZiBpbmhlcml0YW5jZS48cCBjbGFzcz0idHJhbnNsYXRpb24iPkl0IG1heSBoYXBwZW4gdGhhdCB3ZSBoYXZlIHRvIGNlbnN1cmUgYWN0aW9ucyBpbgpvdGhlcnMsIG9mIHdoaWNoIHdlIGhhdmUgYmVlbiBndWlsdHkgb3Vyc2VsdmVzLAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjAzIiAvPgoKYXMsIGZvciBleGFtcGxlLCB3aGVuIFR1YmVybyBjaGFyZ2VzIExpZ2FyaXVzCndpdGggaGF2aW5nIGJlZW4gaW4gQWZyaWNhLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OSIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIHRoZXJlIGhhdmUKYmVlbiBjYXNlcyB3aGVyZSBwZXJzb25zIGNvbmRlbW5lZCBmb3IgYnJpYmVyeQpoYXZlIGluZGljdGVkIG90aGVycyBmb3IgdGhlIHNhbWUgb2ZmZW5jZSB3aXRoIGEKdmlldyB0byByZWNvdmVyaW5nIHRoZWlyIGxvc3QgcG9zaXRpb246PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgdi4geC4gMTA4IG5vdGUgYW5kIHdpdGggcmVmZXJlbmNlIHRvIDxoaSByZW5kPSJpdGFsaWNzIj5wcm8gQ2x1LjwvaGk+IHh4eHZpLgo5OC48L25vdGU+IGZvciB0aGlzCnRoZSBzY2hvb2xzIHByb3ZpZGUgYSBwYXJhbGxlbCBpbiB0aGUgdGhlbWUgd2hlcmUKYSBsdXh1cmlvdXMgeW91dGggYWNjdXNlcyBoaXMgZmF0aGVyIG9mIHRoZSBzYW1lCm9mZmVuY2UuIEkgZG8gbm90IHNlZSBob3cgdGhpcyBjYW4gYmUgZG9uZSB3aXRoCmRlY29ydW0gdW5sZXNzIHdlIHN1Y2NlZWQgaW4gZGlzY292ZXJpbmcgc29tZQpkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHR3byBjYXNlcywgc3VjaCBhcyBjaGFyYWN0ZXIsCmFnZSwgbW90aXZlcywgY2lyY3Vtc3RhbmNlcyBvZiB0aW1lIGFuZCBwbGFjZSBvcgppbnRlbnRpb24uPG1pbGVzdG9uZSBuPSI4MCIgdW5pdD0ic2VjdGlvbiIgLz4gVHViZXJvLCBmb3IgZXhhbXBsZSwgYWxsZWdlcyB0aGF0IGhlCndhcyBhIHlvdW5nIG1hbiBhdCB0aGUgdGltZSBhbmQgd2VudCB0aGl0aGVyCmluIHRoZSBjb21wYW55IG9mIGhpcyBmYXRoZXIsIHdobyBoYWQgYmVlbiBzZW50IGJ5CnRoZSBzZW5hdGUgbm90IHRvIHRha2UgcGFydCBpbiB0aGUgd2FyLCBidXQgdG8gcHVyY2hhc2UgY29ybiwgYW5kIGZ1cnRoZXIgdGhhdCBoZSBsZWZ0IHRoZSBwYXJ0eSBhcwpzb29uIGFzIGhlIGNvdWxkLCB3aGVyZWFzIExpZ2FyaXVzIGNsdW5nIHRvIHRoZQpwYXJ0eSBhbmQgZ2F2ZSBoaXMgc3VwcG9ydCwgbm90IHRvIEduYWV1cyBQb21wZWl1cywgd2hvIHdhcyBlbmdhZ2VkIHdpdGggQ2Flc2FyIGluIGEgc3RydWdnbGUKZm9yIHRoZSBzdXByZW1lIHBvd2VyLCB0aG91Z2ggYm90aCB3aXNoZWQgdG8KcHJlc2VydmUgdGhlIHN0YXRlLCBidXQgdG8gSnViYSBhbmQgdGhlIEFmcmljYW5zCndobyB3ZXJlIHRoZSBzd29ybiBlbmVtaWVzIG9mIFJvbWUuPG1pbGVzdG9uZSBuPSI4MSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIGVhc2llc3QKY291cnNlLCBob3dldmVyLCBpcyB0byBkZW5vdW5jZSBhbm90aGVyJ3MgZ3VpbHQsIHdoaWxlCmFkbWl0dGluZyBvdXIgb3duIGluIHRoZSBzYW1lIGNvbm5leGlvbi4gSG93ZXZlciwgdGhhdCBpcyB0aGUgcGFydCBvZiBhbiBpbmZvcm1lciwgbm90IG9mIGEKcGxlYWRlci4gQnV0IGlmIHRoZXJlIGlzIG5vIGV4Y3VzZSBhdmFpbGFibGUsIHBlbml0ZW5jZSBpcyBvdXIgb25seSBob3BlLiBGb3IgdGhlIG1hbiB3aG8gaXMKY29udmVydGVkIHRvIHRoZSBoYXRyZWQgb2YgaGlzIG93biBlcnJvcnMsIG1heQpwZXJoYXBzIGJlIHJlZ2FyZGVkIGFzIHN1ZmZpY2llbnRseSByZWZvcm1lZC48bWlsZXN0b25lIG49IjgyIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IKdGhlcmUgYXJlIG9jY2FzaW9uYWxseSBjaXJjdW1zdGFuY2VzIHdoaWNoIGZyb20KdGhlIHZlcnkgbmF0dXJlIG9mIHRoZSBjYXNlIG1heSBtYWtlIHN1Y2ggYW4KYXR0aXR1ZGUgbm90IHVuYmVjb21pbmcsIGFzLCBmb3IgZXhhbXBsZSwgaW4gdGhlCmNhc2Ugd2hlcmUgdGhlIGZhdGhlciBkaXNpbmhlcml0cyBhIHNvbiBib3JuIG9mIGEKaGFybG90IGJlY2F1c2UgdGhhdCBzb24gaGFzIG1hcnJpZWQgYSBoYXJsb3QsIGEgY2FzZQoKPHBiIGlkPSJwLjIwNSIgLz4KCndoaWNoLCBhbHRob3VnaCBpdCBmb3JtcyBhIHNjaG9sYXN0aWMgdGhlbWUsIG1pZ2h0CmFjdHVhbGx5IGFyaXNlIGluIGEgY291cnQgb2YgbGF3LiBUaGVyZSBhcmUgYSBudW1iZXIKb2YgcGxlYXMgd2hpY2ggdGhlIGZhdGhlciBtYXkgcHV0IGZvcndhcmQgd2l0aApiZWNvbWluZyBlZmZlY3QuPG1pbGVzdG9uZSBuPSI4MyIgdW5pdD0ic2VjdGlvbiIgLz4gSGUgd2lsbCBzYXkgdGhhdCBpdCBpcyB0aGUgcHJheWVyCm9mIGFsbCBwYXJlbnRzIHRoYXQgdGhlaXIgc29ucyBzaG91bGQgYmUgYmV0dGVyIG1lbgp0aGFuIHRoZW1zZWx2ZXMgKGZvciBleGFtcGxlLCBpZiBhIGRhdWdodGVyIGFsc28KaGFkIGJlZW4gYm9ybiB0byBoaW0sIHRoZSBoYXJsb3QsIGhlciBtb3RoZXIsCndvdWxkIGhhdmUgd2lzaGVkIGhlciB0byBiZSBjaGFzdGUpLCBvciB0aGF0IGhlCmhpbXNlbGYgd2FzIGluIGEgaHVtYmxlciBwb3NpdGlvbiAoZm9yIGEgbWFuIGluCnN1Y2ggYSBwb3NpdGlvbiBpcyBwZXJtaXR0ZWQgdG8gbWFycnkgYSBoYXJsb3QpLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlIDxoaSByZW5kPSJpdGFsaWNzIj5sZXggbHVsZXggZGUgbWFyaXRhbmRpcyBvcmRpYWlidXM8L2hpPiAoMTggQi5DLiApIGZvcmJhZGUKdGhlIG1hcnJpYWdlIG9mIGEgc2VuYXRvciB3aXRoIGEgcHJvc3RpdHV0ZS48L25vdGU+IG9yCnRoYXQgaGUgaGFkIG5vIGZhdGhlciB0byB3YXJuIGhpbTsgYW5kIGZ1cnRoZXIKdGhhdCB0aGVyZSB3YXMgYW4gYWRkaXRpb25hbCByZWFzb24gYWdhaW5zdCBoaXMgc29uJ3MKY29uZHVjdCwgbmFtZWx5LCB0aGF0IGhlIHNob3VsZCBub3QgcmV2aXZlIHRoZSBvbGQKZmFtaWx5IHNjYW5kYWwgbm9yIHJlcHJvYWNoIGhpcyBmYXRoZXIgd2l0aCBoaXMKbWFycmlhZ2UgYW5kIGhpcyBtb3RoZXIgd2l0aCB0aGUgaGFyZCBuZWNlc3NpdHkKb2YgaGVyIGZvcm1lciBsaWZlLCBub3IgZ2l2ZSBhIGJhZCBleGFtcGxlIHRvIGhpcwpvd24gY2hpbGRyZW4gaW4gdGhlaXIgdHVybi4gV2UgbWF5IGFsc28gcGxhdXNpYmx5CnN1Z2dlc3QgdGhhdCB0aGVyZSBpcyBzb21lIHBhcnRpY3VsYXJseSBzaGFtZWZ1bApmZWF0dXJlIGluIHRoZSBjaGFyYWN0ZXIgb2YgdGhlIGhhcmxvdCBtYXJyaWVkIGJ5CnRoZSBzb24sIHdoaWNoIHRoZSBmYXRoZXIgY2Fubm90IHVuZGVyIGV4aXN0aW5nCmNpcmN1bXN0YW5jZXMgdG9sZXJhdGUuIFRoZXJlIGFyZSBvdGhlciBwb3NzaWJsZQphcmd1bWVudHMgd2hpY2ggSSBwYXNzIGJ5OiBmb3IgSSBhbSBub3Qgbm93CmVuZ2FnZWQgaW4gZGVjbGFtYXRpb24sIGJ1dCBhbSBtZXJlbHkgcG9pbnRpbmcKb3V0IHRoYXQgdGhlcmUgYXJlIG9jY2FzaW9ucyB3aGVuIHRoZSBzcGVha2VyIG1heQp0dXJuIGhpcyBvd24gZHJhd2JhY2tzIHRvIGdvb2QgYWNjb3VudC48L3A+CjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjIwMyIgLz4KCmFzLCBmb3IgZXhhbXBsZSwgd2hlbiBUdWJlcm8gY2hhcmdlcyBMaWdhcml1cwp3aXRoIGhhdmluZyBiZWVuIGluIEFmcmljYS48L3RyYW5zbGF0aW9uPg=="
translation['11.5.79'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OSIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIHRoZXJlIGhhdmUKYmVlbiBjYXNlcyB3aGVyZSBwZXJzb25zIGNvbmRlbW5lZCBmb3IgYnJpYmVyeQpoYXZlIGluZGljdGVkIG90aGVycyBmb3IgdGhlIHNhbWUgb2ZmZW5jZSB3aXRoIGEKdmlldyB0byByZWNvdmVyaW5nIHRoZWlyIGxvc3QgcG9zaXRpb246PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSB2LiB4LiAxMDggbm90ZSBhbmQgd2l0aCByZWZlcmVuY2UgdG8gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIENsdS48L2hpPiB4eHh2aS4KOTguPC9ub3RlPiBmb3IgdGhpcwp0aGUgc2Nob29scyBwcm92aWRlIGEgcGFyYWxsZWwgaW4gdGhlIHRoZW1lIHdoZXJlCmEgbHV4dXJpb3VzIHlvdXRoIGFjY3VzZXMgaGlzIGZhdGhlciBvZiB0aGUgc2FtZQpvZmZlbmNlLiBJIGRvIG5vdCBzZWUgaG93IHRoaXMgY2FuIGJlIGRvbmUgd2l0aApkZWNvcnVtIHVubGVzcyB3ZSBzdWNjZWVkIGluIGRpc2NvdmVyaW5nIHNvbWUKZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSB0d28gY2FzZXMsIHN1Y2ggYXMgY2hhcmFjdGVyLAphZ2UsIG1vdGl2ZXMsIGNpcmN1bXN0YW5jZXMgb2YgdGltZSBhbmQgcGxhY2Ugb3IKaW50ZW50aW9uLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBDbHUuPC9oaT4geHh4dmkuCjk4LjwvdHJhbnNsYXRpb24+"
translation['11.5.80'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MCIgdW5pdD0ic2VjdGlvbiIgLz4gVHViZXJvLCBmb3IgZXhhbXBsZSwgYWxsZWdlcyB0aGF0IGhlCndhcyBhIHlvdW5nIG1hbiBhdCB0aGUgdGltZSBhbmQgd2VudCB0aGl0aGVyCmluIHRoZSBjb21wYW55IG9mIGhpcyBmYXRoZXIsIHdobyBoYWQgYmVlbiBzZW50IGJ5CnRoZSBzZW5hdGUgbm90IHRvIHRha2UgcGFydCBpbiB0aGUgd2FyLCBidXQgdG8gcHVyY2hhc2UgY29ybiwgYW5kIGZ1cnRoZXIgdGhhdCBoZSBsZWZ0IHRoZSBwYXJ0eSBhcwpzb29uIGFzIGhlIGNvdWxkLCB3aGVyZWFzIExpZ2FyaXVzIGNsdW5nIHRvIHRoZQpwYXJ0eSBhbmQgZ2F2ZSBoaXMgc3VwcG9ydCwgbm90IHRvIEduYWV1cyBQb21wZWl1cywgd2hvIHdhcyBlbmdhZ2VkIHdpdGggQ2Flc2FyIGluIGEgc3RydWdnbGUKZm9yIHRoZSBzdXByZW1lIHBvd2VyLCB0aG91Z2ggYm90aCB3aXNoZWQgdG8KcHJlc2VydmUgdGhlIHN0YXRlLCBidXQgdG8gSnViYSBhbmQgdGhlIEFmcmljYW5zCndobyB3ZXJlIHRoZSBzd29ybiBlbmVtaWVzIG9mIFJvbWUuPC90cmFuc2xhdGlvbj4="
translation['11.5.81'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIGVhc2llc3QKY291cnNlLCBob3dldmVyLCBpcyB0byBkZW5vdW5jZSBhbm90aGVyJ3MgZ3VpbHQsIHdoaWxlCmFkbWl0dGluZyBvdXIgb3duIGluIHRoZSBzYW1lIGNvbm5leGlvbi4gSG93ZXZlciwgdGhhdCBpcyB0aGUgcGFydCBvZiBhbiBpbmZvcm1lciwgbm90IG9mIGEKcGxlYWRlci4gQnV0IGlmIHRoZXJlIGlzIG5vIGV4Y3VzZSBhdmFpbGFibGUsIHBlbml0ZW5jZSBpcyBvdXIgb25seSBob3BlLiBGb3IgdGhlIG1hbiB3aG8gaXMKY29udmVydGVkIHRvIHRoZSBoYXRyZWQgb2YgaGlzIG93biBlcnJvcnMsIG1heQpwZXJoYXBzIGJlIHJlZ2FyZGVkIGFzIHN1ZmZpY2llbnRseSByZWZvcm1lZC48L3RyYW5zbGF0aW9uPg=="
translation['11.5.82'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCnRoZXJlIGFyZSBvY2Nhc2lvbmFsbHkgY2lyY3Vtc3RhbmNlcyB3aGljaCBmcm9tCnRoZSB2ZXJ5IG5hdHVyZSBvZiB0aGUgY2FzZSBtYXkgbWFrZSBzdWNoIGFuCmF0dGl0dWRlIG5vdCB1bmJlY29taW5nLCBhcywgZm9yIGV4YW1wbGUsIGluIHRoZQpjYXNlIHdoZXJlIHRoZSBmYXRoZXIgZGlzaW5oZXJpdHMgYSBzb24gYm9ybiBvZiBhCmhhcmxvdCBiZWNhdXNlIHRoYXQgc29uIGhhcyBtYXJyaWVkIGEgaGFybG90LCBhIGNhc2UKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjIwNSIgLz4KCndoaWNoLCBhbHRob3VnaCBpdCBmb3JtcyBhIHNjaG9sYXN0aWMgdGhlbWUsIG1pZ2h0CmFjdHVhbGx5IGFyaXNlIGluIGEgY291cnQgb2YgbGF3LiBUaGVyZSBhcmUgYSBudW1iZXIKb2YgcGxlYXMgd2hpY2ggdGhlIGZhdGhlciBtYXkgcHV0IGZvcndhcmQgd2l0aApiZWNvbWluZyBlZmZlY3QuPC90cmFuc2xhdGlvbj4="
translation['11.5.83'] = ""
translation['11.5.84'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NCIgdW5pdD0ic2VjdGlvbiIgLz5Nb3JlIGFyZHVvdXMgZGlmZmljdWx0aWVzIGNvbmZyb250IHVzIHdoZW4gd2UgaGF2ZQp0byBkZWFsIHdpdGggYSBjb21wbGFpbnQgb2Ygc29tZSBzaGFtZWZ1bCBhY3Qgc3VjaAphcyByYXBlLCBtb3JlIGVzcGVjaWFsbHkgd2hlbiB0aGlzIGlzIG9mIGFuIHVubmF0dXJhbCBraW5kLiBJIGRvIG5vdCByZWZlciB0byBjYXNlcyB3aGVuIHRoZQp2aWN0aW0gaGltc2VsZiBpcyBzcGVha2luZy4gRm9yIHdoYXQgc2hvdWxkIGhlIGRvCmJ1dCBncm9hbiBhbmQgd2VlcCBhbmQgY3Vyc2UgaGlzIGV4aXN0ZW5jZSwgc28gdGhhdAp0aGUganVkZ2Ugd2lsbCB1bmRlcnN0YW5kIGhpcyBncmllZiByYXRoZXIgdGhhbiBoZWFyCml0IGFydGljdWxhdGVseSBleHByZXNzZWQ/IEJ1dCB0aGUgdmljdGltJ3MgYWR2b2NhdGUKd2lsbCBoYXZlIHRvIGV4aGliaXQgc2ltaWxhciBlbW90aW9ucywgc2luY2UgdGhlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yMDciIC8+CgphZG1pc3Npb24gb2Ygc3VjaCB3cm9uZ3MgY2F1c2UgbW9yZSBzaGFtZSB0byB0aGUKc3VmZmVyZXIgdGhhbiB0aGUgY3JpbWluYWwuPC90cmFuc2xhdGlvbj4="
translation['11.5.85'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NSIgdW5pdD0ic2VjdGlvbiIgLz4gSW4gbWFueSBjYXNlcyBpdCBpcwpkZXNpcmFibGUgdG8gc29mdGVuIHRoZSBoYXJzaG5lc3Mgb2Ygb3VyIGxhbmd1YWdlCmJ5IHRoZSBpbmZ1c2lvbiBvZiBhIG1vcmUgY29uY2lsaWF0b3J5IHRvbmUsIGFzLCBmb3IKZXhhbXBsZSwgQ2ljZXJvIGRpZCBpbiBoaXMgc3BlZWNoPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPk5vdyBsb3N0Ljwvbm90ZT4gZGVhbGluZyB3aXRoCnRoZSBjaGlsZHJlbiBvZiB0aGUgcHJvc2NyaWJlZC4gV2hhdCBmYXRlIGNvdWxkCmJlIG1vcmUgY3J1ZWwgdGhhbiB0aGF0IHRoZSBjaGlsZHJlbiBvZiBtZW4gb2YKZ29vZCBiaXJ0aCBhbmQgdGhlIGRlc2NlbmRhbnRzIG9mIGRpc3Rpbmd1aXNoZWQKYW5jZXN0b3JzIHNob3VsZCBiZSBleGNsdWRlZCBmcm9tIHBhcnRpY2lwYXRpb24KaW4gcHVibGljIGxpZmU/IEZvciB0aGlzIHJlYXNvbiB0aGF0IHN1cHJlbWUgYXJ0aXN0CmluIHBsYXlpbmcgb24gdGhlIG1pbmRzIG9mIG1lbiBhZG1pdHMgdGhhdCBpdCBpcwpoYXJkLCBidXQgYXNzZXJ0cyB0aGF0IHRoZSBjb25zdGl0dXRpb24gaXMgc28gZXNzZW50aWFsbHkgZGVwZW5kZW50IG9uIHRoZSBsYXdzIG9mIFN1bGxhLCB0aGF0IHRoZWlyCnJlcGVhbCB3b3VsZCBpbmV2aXRhYmx5IGludm9sdmUgaXRzIGRlc3RydWN0aW9uLgpUaHVzIGhlIHN1Y2NlZWRlZCBpbiBjcmVhdGluZyB0aGUgaW1wcmVzc2lvbiB0aGF0CmxpZSB3YXMgZG9pbmcgc29tZXRoaW5nIG9uIGJlaGFsZiBvZiB0aG9zZSB2ZXJ5CnBlcnNvbnMgYWdhaW5zdCB3aG9tIGhlIHNwb2tlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5DaWNlcm8gYXJndWVkIHRoYXQgaXQgd2FzIGJldHRlciB0aGF0IGEgZmV3IHNob3VsZCBzdWZmZXIKdW5qdXN0bHkgdGhhbiB0aGF0IHRoZSBzdGF0ZSBzaG91bGQgYmUgdXBzZXQgYnkgYWRtaXR0aW5nCnRoZW0gdG8gb2ZmaWNlLiBCdXQgaGUgYWRtaXR0ZWQgdGhhdCB0aGVpciBjYXNlIHdhcyBoYXJkCmFuZCBzdWdnZXN0ZWQgdGhhdCBpdCB3YXMgYmV0dGVyIGZvciB0aGVtIHRvIGxpdmUgaW4gYW4Kb3JkZXJseSBzdGF0ZSB0aGFuIHJ1biB0aGUgcmlza3MgaW4gd2hpY2ggcmV2b2x1dGlvbiB3b3VsZAppbnZvbHZlIHRoZW0gYXMgd2VsbCBhcyBvdGhlcnMuPC9ub3RlPjwvdHJhbnNsYXRpb24+"
translation['11.5.86'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NiIgdW5pdD0ic2VjdGlvbiIgLz4gSSBoYXZlIGFscmVhZHk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjYiIHVuaXQ9ImNoYXB0ZXIiIC8+PG1pbGVzdG9uZSBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPmlpaS4gMjguPC9ub3RlPgpwb2ludGVkIG91dCwgaW4gZGVhbGluZyB3aXRoIHRoZSBzdWJqZWN0IG9mIGplc3RzLApob3cgdW5zZWVtbHkgaXQgaXMgdG8gdGFrZSB0aGUgcG9zaXRpb24gaW4gbGlmZSBvZgppbmRpdmlkdWFscyBhcyB0aGUgdGFyZ2V0IGZvciBvdXIgZ2liZXMsIGFuZCBhbHNvCmhhdmUgdXJnZWQgdGhhdCB3ZSBzaG91bGQgcmVmcmFpbiBmcm9tIGluc3VsdGluZwp3aG9sZSBjbGFzc2VzLCByYWNlcyBvciBjb21tdW5pdGllcy4gQnV0IGF0IHRpbWVzCm91ciBkdXR5IHRvd2FyZCBvdXIgY2xpZW50IHdpbGwgZm9yY2UgdXMgdG8gc2F5CnNvbWV0aGluZyBvbiB0aGUgZ2VuZXJhbCBjaGFyYWN0ZXIgb2YgYSB3aG9sZQpjbGFzcyBvZiBwZW9wbGUsIHN1Y2ggYXMgZnJlZWRtZW4sIHNvbGRpZXJzLCB0YXggZmFybWVycyBvciB0aGUgbGlrZS48L3RyYW5zbGF0aW9uPg=="
translation['11.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['11.6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPmlpaS4gMjguPC90cmFuc2xhdGlvbj4="
translation['11.6.87'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NyIgdW5pdD0ic2VjdGlvbiIgLz4gSW4gYWxsIHRoZXNlIGNhc2VzIHRoZSB1c3VhbApyZW1lZHkgaXMgdG8gY3JlYXRlIHRoZSBpbXByZXNzaW9uIHRoYXQgaXQgaXMgd2l0aApyZWx1Y3RhbmNlIHRoYXQgd2UgaW50cm9kdWNlIHRvcGljcyB3aGljaCBtdXN0CmdpdmUgcGFpbiwgd2hpbGUgZnVydGhlciB3ZSBzaGFsbCBhdm9pZCBhdHRhY2tpbmcKZXZlcnl0aGluZywgYW5kIGV2ZW4gd2hpbGUgdXNpbmcgdGhlIGxhbmd1YWdlCm9mIHJlcHJvb2Ygd2l0aCByZWdhcmQgdG8gdGhlIGVzc2VudGlhbCBwb2ludCBvZgphdHRhY2ssIHNoYWxsIG1ha2UgdXAgZm9yIG91ciBjZW5zdXJlIGJ5IHByYWlzaW5nCm91ciB2aWN0aW1zIGluIHNvbWUgb3RoZXIgY29ubmV4aW9uLjwvdHJhbnNsYXRpb24+"
translation['11.6.88'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGV4YW1wbGUsCmlmIHdlIGNoYXJnZSBzb2xkaWVycyB3aXRoIHJhcGFjaXR5LCB3ZSBzaGFsbAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjA5IiAvPgoKcXVhbGlmeSBvdXIgc3RhdGVtZW50IGJ5IHNheWluZyB0aGF0IHRoZSBmYWN0IGlzIG5vdApzdXJwcmlzaW5nLCBhcyB0aGV5IHRoaW5rIHRoYXQgdGhleSBhcmUgZW50aXRsZWQgdG8Kc29tZSBzcGVjaWFsIHJld2FyZCBmb3IgdGhlIHBlcmlscyB0aGV5IGhhdmUgZmFjZWQKYW5kIHRoZSB3b3VuZHMgdGhleSBoYXZlIHN1c3RhaW5lZC4gT3IsIGlmIHdlCmNlbnN1cmUgdGhlbSBmb3IgaW5zb2xlbmNlLCB3ZSBzaGFsbCBhZGQgdGhhdCB0aGlzCnF1YWxpdHkgaXMgZHVlIHRvIHRoZSBmYWN0IHRoYXQgdGhleSBhcmUgbW9yZQphY2N1c3RvbWVkIHRvIHdhciB0aGFuIHRvIHBlYWNlLiBJbiB0aGUgY2FzZSBvZgpmcmVlZG1lbiB3ZSBzaG91bGQgZGlzcGFyYWdlIHRoZWlyIGluZmx1ZW5jZTogYnV0CndlIG1heSBhbHNvIGdpdmUgdGhlbSBjcmVkaXQgZm9yIHRoZSBpbmR1c3RyeQp3aGljaCBzZWN1cmVkIHRoZWlyIGVtYW5jaXBhdGlvbi48L3RyYW5zbGF0aW9uPg=="
translation['11.6.89'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OSIgdW5pdD0ic2VjdGlvbiIgLz4gV2l0aCByZWdhcmQKdG8gZm9yZWlnbiBuYXRpb25zLCBDaWNlcm8ncyBwcmFjdGljZSB2YXJpZXMuIFdoZW4KaGUgaW50ZW5kcyB0byBkaXNwYXJhZ2UgdGhlIGNyZWRpYmlsaXR5IG9mIEdyZWVrCndpdG5lc3NlcyBoZSBhZG1pdHMgdGhlaXIgZGlzdGluY3Rpb24gaW4gbGVhcm5pbmcKYW5kIGxpdGVyYXR1cmUgYW5kIHByb2Zlc3NlcyBoaXMgYWRtaXJhdGlvbiBmb3IgdGhlaXIKbmF0aW9uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5FLmcuIHBybyBGbGFjY288L2hpPiB4eHZpLjwvbm90ZT4gT24gdGhlIG90aGVyIGhhbmQsIGhlIGhhcyBub3RoaW5nIGJ1dApjb250ZW1wdCBmb3IgdGhlIFNhcmRpbmlhbnM8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5FLmcuIHBybyBGbGFjY288L2hpPiB4eHZpLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5JbiBhIGZyYWdtZW50IG9mIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBTY2F1cm8uPC9oaT48L25vdGU+IGFuZCBhdHRhY2tzIHRoZSBBbGxvYnJvZ2VzIGFzIHRoZSBlbmVtaWVzIG9mIFJvbWUuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIFNjYXVyby48L2hpPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gRm9udC48L2hpPiB2aWlpLjwvbm90ZT4gSW4gYWxsIHRoZXNlIGNhc2VzCm5vbmUgb2YgaGlzIHJlbWFya3MsIGF0IHRoZSB0aW1lIHRoZXkgd2VyZSBtYWRlLAp3ZXJlIGluY29uc2lzdGVudCB3aXRoIG9yIGFkdmVyc2UgdG8gdGhlIGNsYWltcyBvZgpkZWNvcnVtLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBGb250LjwvaGk+IHZpaWkuPC90cmFuc2xhdGlvbj4="
translation['11.6.90'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MCIgdW5pdD0ic2VjdGlvbiIgLz4gSWYgdGhlcmUgYmUgYW55dGhpbmcgb2ZmZW5zaXZlIGluIHRoZQpzdWJqZWN0IG9uIHdoaWNoIHdlIGhhdmUgdG8gc3BlYWssIGl0IG1heSBiZQp0b25lZCBkb3duIGJ5IGEgc3R1ZGllZCBtb2RlcmF0aW9uIGluIG91ciBsYW5ndWFnZTsgZm9yIGV4YW1wbGUsIHdlIG1heSBkZXNjcmliZSBhIGJydXRhbCBjaGFyYWN0ZXIgYXMgYmVpbmcgdW5kdWx5IHNldmVyZSwgYW4gdW5qdXN0IG1hbiBhcyBsZWQKYXN0cmF5IGJ5IHByZWp1ZGljZSwgYW4gb2JzdGluYXRlIG1hbiBhcyB1bnJlYXNvbmFibHkgdGVuYWNpb3VzIG9mIGhpcyBvcGluaW9uLiBBbmQgdGhlcmUgYXJlIGEKbGFyZ2UgbnVtYmVyIG9mIGNhc2VzIHdoZXJlIHdlIHNob3VsZCBhdHRlbXB0IHRvCmRlZmVhdCBvdXIgb3Bwb25lbnRzIGJ5IHJlYXNvbmluZywgd2hpY2ggZm9ybXMgdGhlCmdlbnRsZXN0IG9mIGFsbCBtZXRob2RzIG9mIGF0dGFjay48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MSIgdW5pdD0ic2VjdGlvbiIgLz5UbyB0aGVzZSByZW1hcmtzIEkgd291bGQgYWRkIHRoYXQgYWxsIGV4dHJhdmFnYW5jZSBvZiBhbnkga2luZCBpcyBpbmRlY29yb3VzLCBhbmQgY29uc2VxdWVudGx5CnN0YXRlbWVudHMgd2hpY2ggYXJlIGluIHN1ZmZpY2llbnQgaGFybW9ueSB3aXRoIHRoZQpmYWN0cyB3aWxsIG5vbmUgdGhlIGxlc3MgbG9zZSBhbGwgdGhlaXIgZ3JhY2UgdW5sZXNzCnRoZXkgYXJlIG1vZGlmaWVkIGJ5IGEgY2VydGFpbiByZXN0cmFpbnQuIEl0IGlzIGhhcmQKCjxwYiBpZD0icC4yMTEiIC8+Cgp0byBnaXZlIHJ1bGVzIGFzIHRvIHRoZSBleGFjdCBtZXRob2QgaW4gd2hpY2ggdGhpcwpwcmVjZXB0IHNob3VsZCBiZSBvYnNlcnZlZCwgYnV0IHRoZSBwcm9ibGVtIHdpbGwKZWFzaWx5IGJlIHNvbHZlZCBieSBmb2xsb3dpbmcgdGhlIGRpY3RhdGVzIG9mIG91ciBvd24KanVkZ2VtZW50LCB3aGljaCB3aWxsIHRlbGwgdXMgd2hhdCBpdCBpcyBzdWZmaWNpZW50IHRvCnNheSBhbmQgaG93IG11Y2ggdGhlIGVhcnMgb2Ygb3VyIGF1ZGllbmNlIHdpbGwKdG9sZXJhdGUuIFdlIGNhbm5vdCB3ZWlnaCBvciBtZWFzdXJlIG91ciB3b3JkcwpieSBmaXhlZCBzdGFuZGFyZHM6IHRoZXkgYXJlIGxpa2UgZm9vZHMsIHNvbWUgb2YKd2hpY2ggYXJlIG1vcmUgc2F0aXNmeWluZyB0aGFuIG90aGVycy48L3A+CjwvdHJhbnNsYXRpb24+"
translation['11.6.91'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MSIgdW5pdD0ic2VjdGlvbiIgLz5UbyB0aGVzZSByZW1hcmtzIEkgd291bGQgYWRkIHRoYXQgYWxsIGV4dHJhdmFnYW5jZSBvZiBhbnkga2luZCBpcyBpbmRlY29yb3VzLCBhbmQgY29uc2VxdWVudGx5CnN0YXRlbWVudHMgd2hpY2ggYXJlIGluIHN1ZmZpY2llbnQgaGFybW9ueSB3aXRoIHRoZQpmYWN0cyB3aWxsIG5vbmUgdGhlIGxlc3MgbG9zZSBhbGwgdGhlaXIgZ3JhY2UgdW5sZXNzCnRoZXkgYXJlIG1vZGlmaWVkIGJ5IGEgY2VydGFpbiByZXN0cmFpbnQuIEl0IGlzIGhhcmQKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjIxMSIgLz4KCnRvIGdpdmUgcnVsZXMgYXMgdG8gdGhlIGV4YWN0IG1ldGhvZCBpbiB3aGljaCB0aGlzCnByZWNlcHQgc2hvdWxkIGJlIG9ic2VydmVkLCBidXQgdGhlIHByb2JsZW0gd2lsbAplYXNpbHkgYmUgc29sdmVkIGJ5IGZvbGxvd2luZyB0aGUgZGljdGF0ZXMgb2Ygb3VyIG93bgpqdWRnZW1lbnQsIHdoaWNoIHdpbGwgdGVsbCB1cyB3aGF0IGl0IGlzIHN1ZmZpY2llbnQgdG8Kc2F5IGFuZCBob3cgbXVjaCB0aGUgZWFycyBvZiBvdXIgYXVkaWVuY2Ugd2lsbAp0b2xlcmF0ZS4gV2UgY2Fubm90IHdlaWdoIG9yIG1lYXN1cmUgb3VyIHdvcmRzCmJ5IGZpeGVkIHN0YW5kYXJkczogdGhleSBhcmUgbGlrZSBmb29kcywgc29tZSBvZgp3aGljaCBhcmUgbW9yZSBzYXRpc2Z5aW5nIHRoYW4gb3RoZXJzLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjkyIiB1bml0PSJzZWN0aW9uIiAvPkkgdGhpbmsgSSBzaG91bGQgYWxzbyBhZGQgYSBmZXcgYnJpZWYgd29yZHMgdG8gdGhlCmVmZmVjdCB0aGF0IG5vdCBvbmx5IHZlcnkgZGlmZmVyZW50IHJoZXRvcmljYWwgdmlydHVlcwpoYXZlIHRoZWlyIHNwZWNpYWwgYWRtaXJlcnMsIGJ1dCB0aGF0IHRoZXkgYXJlIG9mdGVuCnByYWlzZWQgYnkgdGhlIHNhbWUgcGVyc29ucy4gRm9yIGluc3RhbmNlLCB0aGVyZSBpcwpvbmUgcGFzc2FnZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIDxoaSByZW5kPSJpdGFsaWNzIj5Pci48L2hpPiByeGlpaS4gNzYuIEluIHRoaXMgYW5kIHRoZSBuZXh0IHBhc3NhZ2UgUXVpbnRpbGlhbiBkb2VzIG5vdCBxdW90ZSwgYnV0IHBhcmFwaHJhc2VzLjwvbm90ZT4gaW4gQ2ljZXJvIHdoZXJlIGhlIHdyaXRlcyB0aGF0IHRoZQpiZXN0IHN0eWxlIGlzIHRoYXQgd2hpY2ggd2UgdGhpbmsgd2UgY2FuIGVhc2lseQphY3F1aXJlIGJ5IGltaXRhdGlvbiwgYnV0IHdoaWNoIHdlIGZpbmQgaXMgcmVhbGx5CmJleW9uZCBvdXIgcG93ZXJzLiBCdXQgaW4gYW5vdGhlciBwYXNzYWdlPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgPGhpIHJlbmQ9Iml0YWxpY3MiPk9yLjwvaGk+IHh4dmlpaS4gOTcuPC9ub3RlPiBoZQpzYXlzIHRoYXQgaGlzIGFpbSB3YXMgbm90IHRvIHNwZWFrIGluIHN1Y2ggYSBtYW5uZXIKdGhhdCBldmVyeW9uZSBzaG91bGQgYmUgY29uZmlkZW50IHRoYXQgaGUgY291bGQgZG8KdGhlIHNhbWUsIGJ1dCByYXRoZXIgaW4gYSBzdHlsZSB0aGF0IHNob3VsZCBiZSB0aGUKZGVzcGFpciBvZiBhbGwuPG1pbGVzdG9uZSBuPSI5MyIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlc2UgdHdvIHN0YXRlbWVudHMgbWF5IHNlZW0gdG8KYmUgaW5jb25zaXN0ZW50LCBidXQgYXMgYSBtYXR0ZXIgb2YgZmFjdCBib3RoIGFsaWtlCmRlc2VydmUgdGhlIHByYWlzZSB3aGljaCB0aGV5IHJlY2VpdmUuIFRoZSBkaWZmZXJlbmNlIGlzIGR1ZSB0byB0aGUgZmFjdCB0aGF0IGNhc2VzIGRpZmZlciBpbiBjaGFyYWN0ZXIuClRob3NlIG9mIG1pbm9yIGltcG9ydGFuY2UgYXJlIGFkbWlyYWJseSBzdWl0ZWQgYnkKdGhlIHNpbXBsaWNpdHkgYW5kIG5lZ2xpZ2VuY2Ugb2YgdW5hZmZlY3RlZCBsYW5ndWFnZSwgd2hlcmVhcyBjYXNlcyBvZiBncmVhdGVyIG1vbWVudCBhcmUgYmVzdApzdWl0ZWQgYnkgdGhlIGdyYW5kIHN0eWxlLiBDaWNlcm8gaXMgcHJlLWVtaW5lbnQgaW4KYm90aC4gTm93IHdoaWxlIGVtaW5lbmNlIGluIG9uZSBvZiB0aGVzZSBzdHlsZXMKbWF5IHNlZW0gdG8gdGhlIGluZXhwZXJpZW5jZWQgdG8gYmUgd2l0aGluIHRoZWlyCmdyYXNwLCB0aG9zZSB3aG8gdW5kZXJzdGFuZCBrbm93IHRoYXQgdGhleSBhcmUKY2FwYWJsZSBvZiBlbWluZW5jZSBpbiBuZWl0aGVyLjwvcD4KCjwvdHJhbnNsYXRpb24+"
translation['11.6.92'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MiIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rIEkgc2hvdWxkIGFsc28gYWRkIGEgZmV3IGJyaWVmIHdvcmRzIHRvIHRoZQplZmZlY3QgdGhhdCBub3Qgb25seSB2ZXJ5IGRpZmZlcmVudCByaGV0b3JpY2FsIHZpcnR1ZXMKaGF2ZSB0aGVpciBzcGVjaWFsIGFkbWlyZXJzLCBidXQgdGhhdCB0aGV5IGFyZSBvZnRlbgpwcmFpc2VkIGJ5IHRoZSBzYW1lIHBlcnNvbnMuIEZvciBpbnN0YW5jZSwgdGhlcmUgaXMKb25lIHBhc3NhZ2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPk9yLjwvaGk+IHJ4aWlpLiA3Ni4gSW4gdGhpcyBhbmQgdGhlIG5leHQgcGFzc2FnZSBRdWludGlsaWFuIGRvZXMgbm90IHF1b3RlLCBidXQgcGFyYXBocmFzZXMuPC9ub3RlPiBpbiBDaWNlcm8gd2hlcmUgaGUgd3JpdGVzIHRoYXQgdGhlCmJlc3Qgc3R5bGUgaXMgdGhhdCB3aGljaCB3ZSB0aGluayB3ZSBjYW4gZWFzaWx5CmFjcXVpcmUgYnkgaW1pdGF0aW9uLCBidXQgd2hpY2ggd2UgZmluZCBpcyByZWFsbHkKYmV5b25kIG91ciBwb3dlcnMuIEJ1dCBpbiBhbm90aGVyIHBhc3NhZ2U8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Pci48L2hpPiByeGlpaS4gNzYuIEluIHRoaXMgYW5kIHRoZSBuZXh0IHBhc3NhZ2UgUXVpbnRpbGlhbiBkb2VzIG5vdCBxdW90ZSwgYnV0IHBhcmFwaHJhc2VzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T3IuPC9oaT4geHh2aWlpLiA5Ny48L25vdGU+IGhlCnNheXMgdGhhdCBoaXMgYWltIHdhcyBub3QgdG8gc3BlYWsgaW4gc3VjaCBhIG1hbm5lcgp0aGF0IGV2ZXJ5b25lIHNob3VsZCBiZSBjb25maWRlbnQgdGhhdCBoZSBjb3VsZCBkbwp0aGUgc2FtZSwgYnV0IHJhdGhlciBpbiBhIHN0eWxlIHRoYXQgc2hvdWxkIGJlIHRoZQpkZXNwYWlyIG9mIGFsbC48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Pci48L2hpPiB4eHZpaWkuIDk3LjwvdHJhbnNsYXRpb24+"
translation['11.6.93'] = ""
translation['11.6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQKcGxlYWRlcnMgbmVlZCBub3Qgb25seSB0byBiZSBhYmxlIHRvIHJldGFpbiBhIG51bWJlcgpvZiBmYWN0cyBpbiB0aGVpciBtaW5kcywgYnV0IGFsc28gdG8gYmUgcXVpY2sgdG8gdGFrZQp0aGVtIGluOyBpdCBpcyBub3QgZW5vdWdoIHRvIGxlYXJuIHdoYXQgeW91IGhhdmUKd3JpdHRlbiBieSBkaW50IG9mIHJlcGVhdGVkIHJlYWRpbmc7IGl0IGlzIGp1c3QgYXMKbmVjZXNzYXJ5IHRvIGZvbGxvdyB0aGUgb3JkZXIgYm90aCBvZiBtYXR0ZXIgYW5kCndvcmRzIHdoZW4geW91IGhhdmUgbWVyZWx5IHRob3VnaHQgb3V0IHdoYXQgeW91CmFyZSBnb2luZyB0byBzYXksIHdoaWxlIHlvdSBtdXN0IGFsc28gcmVtZW1iZXIKd2hhdCBoYXMgYmVlbiBzYWlkIGJ5IHlvdXIgb3Bwb25lbnRzLCBhbmQgbXVzdApub3QgYmUgY29udGVudCBtZXJlbHkgd2l0aCByZWZ1dGluZyB0aGVpciBhcmd1bWVudHMKaW4gdGhlIG9yZGVyIGluIHdoaWNoIHRoZXkgd2VyZSBhZHZhbmNlZCwgYnV0IG11c3QKYmUgaW4gYSBwb3NpdGlvbiB0byBkZWFsIHdpdGggZWFjaCBpbiBpdHMgYXBwcm9wcmlhdGUKcGxhY2UuPC90cmFuc2xhdGlvbj4="
translation['11.6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBOYXksIGV2ZW4gZXh0ZW1wb3JlIGVsb3F1ZW5jZSwgaW4gbXkKb3BpbmlvbiwgZGVwZW5kcyBvbiBubyBtZW50YWwgYWN0aXZpdHkgc28gbXVjaAphcyBtZW1vcnkuIEZvciB3aGlsZSB3ZSBhcmUgc2F5aW5nIG9uZSB0aGluZywgd2UKbXVzdCBiZSBjb25zaWRlcmluZyBzb21ldGhpbmcgZWxzZSB0aGF0IHdlIGFyZQpnb2luZyB0byBzYXk6IGNvbnNlcXVlbnRseSwgc2luY2UgdGhlIG1pbmQgaXMgYWx3YXlzCmxvb2tpbmcgYWhlYWQsIGl0IGlzIGNvbnRpbnVhbGx5IGluIHNlYXJjaCBvZiBzb21ldGhpbmcgd2hpY2ggaXMgbW9yZSByZW1vdGU6IG9uIHRoZSBvdGhlciBoYW5kLAp3aGF0ZXZlciBpdCBkaXNjb3ZlcnMsIGl0IGRlcG9zaXRzIGJ5IHNvbWUgbXlzdGVyaW91cwpwcm9jZXNzIGluIHRoZSBzYWZlLWtlZXBpbmcgb2YgbWVtb3J5LCB3aGljaCBhY3RzCmFzIGEgdHJhbnNtaXR0aW5nIGFnZW50IGFuZCBoYW5kcyBvbiB0byB0aGUgZGVsaXZlcnkKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjIxNSIgLz4KCndoYXQgaXQgaGFzIHJlY2VpdmVkIGZyb20gdGhlIGltYWdpbmF0aW9uLjwvdHJhbnNsYXRpb24+"
translation['11.6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBJIGRvCm5vdCBjb25jZWl2ZSwgaG93ZXZlciwgdGhhdCBJIG5lZWQgZHdlbGwgdXBvbiB0aGUKcXVlc3Rpb24gb2YgdGhlIHByZWNpc2UgZnVuY3Rpb24gb2YgbWVtb3J5LCBhbHRob3VnaAptYW55IGhvbGQgdGhlIHZpZXcgdGhhdCBjZXJ0YWluIGltcHJlc3Npb25zIGFyZQptYWRlIHVwb24gdGhlIG1pbmQsIGFuYWxvZ291cyB0byB0aG9zZSB3aGljaCBhCnNpZ25ldC1yaW5nIG1ha2VzIG9uIHdheC4gTm9yLCBhZ2Fpbiwgc2hhbGwgSSBiZSBzbwpjcmVkdWxvdXMsIGluIHZpZXcgb2YgdGhlIGZhY3QgdGhhdCB0aGUgcmV0ZW50aXZlbmVzcwpvciBzbG93bmVzcyBvZiB0aGUgbWVtb3J5IGRlcGVuZHMgdXBvbiBvdXIKcGh5c2ljYWwgY29uZGl0aW9uLCBhcyB0byB2ZW50dXJlIHRvIGFsbG90IGEgc3BlY2lhbAphcnQgdG8gbWVtb3J5LjwvdHJhbnNsYXRpb24+"
translation['11.6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiBNeSBpbmNsaW5hdGlvbiBpcyByYXRoZXIgdG8gbWFydmVsCmF0IGl0cyBwb3dlcnMgb2YgcmVwcm9kdWNpbmcgYW5kIHByZXNlbnRpbmcgYQpudW1iZXIgb2YgcmVtb3RlIGZhY3RzIGFmdGVyIHNvIGxvbmcgYW4gaW50ZXJ2YWwsCmFuZCwgd2hhdCBpcyBtb3JlLCBvZiBzbyBkb2luZyBub3QgbWVyZWx5IHdoZW4gd2UKc2VlayBmb3Igc3VjaCBmYWN0cywgYnV0IGV2ZW4gYXQgdGltZXMgb2YgaXRzIG93bgphY2NvcmQsIGFuZCBub3Qgb25seSBpbiBvdXIgd2FraW5nIG1vbWVudHMsIGJ1dApldmVuIHdoZW4gd2UgYXJlIHN1bmsgaW4gc2xlZXAuPC90cmFuc2xhdGlvbj4="
translation['11.6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBBbmQgbXkgd29uZGVyIGlzCmluY3JlYXNlZCBieSB0aGUgZmFjdCB0aGF0IGV2ZW4gYmVhc3RzLCB3aGljaCBzZWVtIHRvCmJlIGRldm9pZCBvZiByZWFzb24sIHlldCByZW1lbWJlciBhbmQgcmVjb2duaXNlCnRoaW5ncywgYW5kIHdpbGwgcmV0dXJuIHRvIHRoZWlyIG9sZCBob21lLCBob3dldmVyIGZhcgp0aGV5IGhhdmUgYmVlbiB0YWtlbiBmcm9tIGl0LiBBZ2FpbiwgaXMgaXQgbm90IGFuCmV4dHJhb3JkaW5hcnkgaW5jb25zaXN0ZW5jeSB0aGF0IHdlIGZvcmdldCByZWNlbnQgYW5kCnJlbWVtYmVyIGRpc3RhbnQgZXZlbnRzLCB0aGF0IHdlIGNhbm5vdCByZWNhbGwgd2hhdApoYXBwZW5lZCB5ZXN0ZXJkYXkgYW5kIHlldCByZXRhaW4gYSB2aXZpZCBpbXByZXNzaW9uCm9mIHRoZSBhY3RzIG9mIG91ciBjaGlsZGhvb2Q/PC90cmFuc2xhdGlvbj4="
translation['11.6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBBbmQgd2hhdCwgYWdhaW4sIHNoYWxsCndlIHNheSBvZiB0aGUgZmFjdCB0aGF0IHRoZSB0aGluZ3Mgd2Ugc2VhcmNoIGZvcgpmcmVxdWVudGx5IHJlZnVzZSB0byBwcmVzZW50IHRoZW1zZWx2ZXMgYW5kIHRoZW4Kb2NjdXIgdG8gdXMgYnkgY2hhbmNlLCBvciB0aGF0IG1lbW9yeSBkb2VzIG5vdAphbHdheXMgcmVtYWluIHdpdGggdXMsIGJ1dCB3aWxsIGV2ZW4gc29tZXRpbWVzCnJldHVybiB0byB1cyBhZnRlciBpdCBoYXMgYmVlbiBsb3N0PyBCdXQgd2Ugc2hvdWxkCm5ldmVyIGhhdmUgcmVhbGlzZWQgdGhlIGZ1bGxuZXNzIG9mIGl0cyBwb3dlciBub3IgaXRzCnN1cGVybmF0dXJhbCBjYXBhY2l0aWVzLCBidXQgZm9yIHRoZSBmYWN0IHRoYXQgaXQgaXMKbWVtb3J5IHdoaWNoIGhhcyBicm91Z2h0IG9yYXRvcnkgdG8gaXRzIHByZXNlbnQKcG9zaXRpb24gb2YgZ2xvcnkuPC90cmFuc2xhdGlvbj4="
translation['11.6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgaXQgcHJvdmlkZXMgdGhlIG9yYXRvciBub3QKbWVyZWx5IHdpdGggdGhlIG9yZGVyIG9mIGhpcyB0aG91Z2h0cywgYnV0IGV2ZW4gb2YKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjIxNyIgLz4KCmhpcyB3b3Jkcywgbm9yIGlzIGl0cyBwb3dlciBsaW1pdGVkIHRvIHN0cmluZ2luZwptZXJlbHkgYSBmZXcgd29yZHMgdG9nZXRoZXI7IGl0cyBjYXBhY2l0eSBmb3IgZW5kdXJhbmNlIGlzIGluZXhoYXVzdGlibGUsIGFuZCBldmVuIGluIHRoZSBsb25nZXN0CnBsZWFkaW5ncyB0aGUgcGF0aWVuY2Ugb2YgdGhlIGF1ZGllbmNlIGZsYWdzIGxvbmcKYmVmb3JlIHRoZSBtZW1vcnkgb2YgdGhlIHNwZWFrZXIuPC90cmFuc2xhdGlvbj4="
translation['11.6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBUaGlzIGZhY3QgbWF5CmV2ZW4gYmUgYWR2YW5jZWQgYXMgYW4gYXJndW1lbnQgdGhhdCB0aGVyZSBtdXN0CmJlIHNvbWUgYXJ0IG9mIG1lbW9yeSBhbmQgdGhhdCB0aGUgbmF0dXJhbCBnaWZ0IGNhbgpiZSBoZWxwZWQgYnkgcmVhc29uLCBzaW5jZSB0cmFpbmluZyBlbmFibGVzIHVzIHRvCmRvIHRoaW5ncyB3aGljaCB3ZSBjYW5ub3QgZG8gYmVmb3JlIHdlIGhhdmUgaGFkCmFueSB0cmFpbmluZyBvciBwcmFjdGljZS4gT24gdGhlIG90aGVyIGhhbmQsIEkgZmluZAp0aGF0IFBsYXRvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlBoYWVkci48L2hpPiAyNzUgQS48L25vdGU+IGFzc2VydHMgdGhhdCB0aGUgdXNlIG9mIHdyaXR0ZW4gY2hhcmFjdGVycwppcyBhIGhpbmRyYW5jZSB0byBtZW1vcnksIG9uIHRoZSBncm91bmQsIHRoYXQgaXMsIHRoYXQKb25jZSB3ZSBoYXZlIGNvbW1pdHRlZCBhIHRoaW5nIHRvIHdyaXRpbmcsIHdlCmNlYXNlIHRvIGd1YXJkIGl0IGluIG91ciBtZW1vcnkgYW5kIGxvc2UgaXQgb3V0IG9mCnNoZWVyIGNhcmVsZXNzbmVzcy48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5QaGFlZHIuPC9oaT4gMjc1IEEuPC90cmFuc2xhdGlvbj4="
translation['11.6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIHRoZXJlIGNhbiBiZSBubyBkb3VidCB0aGF0CmNvbmNlbnRyYXRpb24gb2YgbWluZCBpcyBvZiB0aGUgdXRtb3N0IGltcG9ydGFuY2UgaW4KdGhpcyBjb25uZXhpb247IGl0IGlzLCBpbiBmYWN0LCBsaWtlIHRoZSBleWVzaWdodCwgd2hpY2gKdHVybnMgdG8sIGFuZCBub3QgYXdheSBmcm9tLCB0aGUgb2JqZWN0cyB3aGljaCBpdApjb250ZW1wbGF0ZXMuIFRodXMgaXQgcmVzdWx0cyB0aGF0IGFmdGVyIHdyaXRpbmcKZm9yIHNldmVyYWwgZGF5cyB3aXRoIGEgdmlldyB0byBhY3F1aXJpbmcgYnkgaGVhcnQKd2hhdCB3ZSBoYXZlIHdyaXR0ZW4sIHdlIGZpbmQgdGhhdCBvdXIgbWVudGFsIGVmZm9ydApoYXMgb2YgaXRzZWxmIGltcHJpbnRlZCBpdCBvbiBvdXIgbWVtb3J5LjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBmaXJzdCBwZXJzb24gdG8gZGlzY292ZXIgYW4gYXJ0IG9mIG1lbW9yeSBpcwpzYWlkIHRvIGhhdmUgYmVlbiBTaW1vbmlkZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgeC4gaS4gNjQuPC9ub3RlPiBvZiB3aG9tIHRoZSBmb2xsb3dpbmcKd2VsbC1rbm93biBzdG9yeSBpcyB0b2xkLiBIZSBoYWQgd3JpdHRlbiBhbiBvZGUKb2YgdGhlIGtpbmQgdXN1YWxseSBjb21wb3NlZCBpbiBob25vdXIgb2YgdmljdG9yaW91cwphdGhsZXRlcywgdG8gY2VsZWJyYXRlIHRoZSBhY2hpZXZlbWVudCBvZiBvbmUgd2hvCmhhZCBnYWluZWQgdGhlIGNyb3duIGZvciBib3hpbmcuIFBhcnQgb2YgdGhlIHN1bQpmb3Igd2hpY2ggaGUgaGFkIGNvbnRyYWN0ZWQgd2FzIHJlZnVzZWQgaGltIG9uCnRoZSBncm91bmQgdGhhdCwgZm9sbG93aW5nIHRoZSBjb21tb24gcHJhY3RpY2Ugb2YKcG9ldHMsIGhlIGhhZCBpbnRyb2R1Y2VkIGEgZGlncmVzc2lvbiBpbiBwcmFpc2Ugb2YKQ2FzdG9yIGFuZCBQb2xsdXgsIGFuZCBoZSB3YXMgdG9sZCB0aGF0LCBpbiB2aWV3Cm9mIHdoYXQgaGUgaGFkIGRvbmUsIGhlIGhhZCBiZXN0IGFzayBmb3IgdGhlIHJlc3QKb2YgdGhlIHN1bSBkdWUgZnJvbSB0aG9zZSB3aG9zZSBkZWVkcyBoZSBoYWQKCjxwYiBpZD0icC4yMTkiIC8+CgpleHRvbGxlZC4gQW5kIGFjY29yZGluZyB0byB0aGUgc3RvcnkgdGhleSBwYWlkCnRoZWlyIGRlYnQuPG1pbGVzdG9uZSBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHdoZW4gYSBncmVhdCBiYW5xdWV0IHdhcyBnaXZlbgppbiBob25vdXIgb2YgdGhlIGJveGVyJ3Mgc3VjY2VzcywgU2ltb25pZGVzIHdhcwpzdW1tb25lZCBmb3J0aCBmcm9tIHRoZSBmZWFzdCwgdG8gd2hpY2ggaGUgaGFkCmJlZW4gaW52aXRlZCwgYnkgYSBtZXNzYWdlIHRvIHRoZSBlZmZlY3QgdGhhdCB0d28KeW91dGhzIHdobyBoYWQgcmlkZGVuIHRvIHRoZSBkb29yIHVyZ2VudGx5IGRlc2lyZWQKaGlzIHByZXNlbmNlLiBIZSBmb3VuZCBubyB0cmFjZSBvZiB0aGVtLCBidXQgd2hhdApmb2xsb3dlZCBwcm92ZWQgdG8gaGltIHRoYXQgdGhlIGdvZHMgaGFkIHNob3duCnRoZWlyIGdyYXRpdHVkZS48bWlsZXN0b25lIG49IjEzIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgaGUgaGFkIHNjYXJjZWx5IGNyb3NzZWQgdGhlCnRocmVzaG9sZCBvbiBoaXMgd2F5IG91dCwgd2hlbiB0aGUgYmFucXVldGluZyBoYWxsCmZlbGwgaW4gdXBvbiB0aGUgaGVhZHMgb2YgdGhlIGd1ZXN0cyBhbmQgd3JvdWdodApzdWNoIGhhdm9jIGFtb25nIHRoZW0gdGhhdCB0aGUgcmVsYXRpdmVzIG9mIHRoZQpkZWFkIHdobyBjYW1lIHRvIHNlZWsgdGhlIGJvZGllcyBmb3IgYnVyaWFsIHdlcmUKdW5hYmxlIHRvIGRpc3Rpbmd1aXNoIG5vdCBtZXJlbHkgdGhlIGZhY2VzIGJ1dCBldmVuCnRoZSBsaW1icyBvZiB0aGUgZGVhZC4gVGhlbiBpdCBpcyBzYWlkLCBTaW1vbmlkZXMsCndobyByZW1lbWJlcmVkIHRoZSBvcmRlciBpbiB3aGljaCB0aGUgZ3Vlc3RzIGhhZApiZWVuIHNpdHRpbmcsIHN1Y2NlZWRlZCBpbiByZXN0b3JpbmcgdG8gZWFjaCBtYW4gaGlzCm93biBkZWFkLjxtaWxlc3RvbmUgbj0iMTQiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlIGlzLCBob3dldmVyLCBncmVhdCBkaXNhZ3JlZW1lbnQKYW1vbmcgb3VyIGF1dGhvcml0aWVzIGFzIHRvIHdoZXRoZXIgdGhpcyBvZGUgd2FzCndyaXR0ZW4gaW4gaG9ub3VyIG9mIEdsYXVjdXMgb2YgQ2FyeXN0dXMsIExlb2NyYXRlcywKQWdhdGhhcmN1cyBvciBTY29wYXMsIGFuZCB3aGV0aGVyIHRoZSBob3VzZSB3YXMKYXQgUGhhcnNhbHVzLCBhcyBTaW1vbmlkZXMgaGltc2VsZiBzZWVtcyB0byBpbmRpY2F0ZQppbiBhIGNlcnRhaW4gcGFzc2FnZSwgYW5kIGFzIGlzIHJlY29yZGVkIGJ5IEFwb2xsb2RvcnVzLCBFcmF0b3N0aGVuZXMsIEV1cGhvcmlvbiBhbmQgRXVyeXB5bHVzIG9mCkxhcmlzc2EsIG9yIGF0IENyYW5ub24sIGFzIGlzIHN0YXRlZCBieSBBcG9sbGFzCkNhbGxpbWFjaHVzLCB3aG8gaXMgZm9sbG93ZWQgYnkgQ2ljZXJvLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+Q2ljLiA8aGkgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gSUkuIGx4eHh2aS4gMzUyLjwvbm90ZT4gdG8gd2hvbQp0aGUgd2lkZSBjaXJjdWxhdGlvbiBvZiB0aGlzIHN0b3J5IGlzIGR1ZS48bWlsZXN0b25lIG49IjE1IiB1bml0PSJzZWN0aW9uIiAvPiBJdCBpcwphZ3JlZWQgdGhhdCBTY29wYXMsIGEgVGhlc3NhbGlhbiBub2JsZSwgcGVyaXNoZWQgYXQKdGhpcyBiYW5xdWV0LCBhbmQgaXQgaXMgYWxzbyBzYWlkIHRoYXQgaGlzIHNpc3RlcidzIHNvbgpwZXJpc2hlZCB3aXRoIGhpbSwgd2hpbGUgaXQgaXMgdGhvdWdodCB0aGF0IGEgbnVtYmVyCm9mIGRlc2NlbmRhbnRzIG9mIGFuIGVsZGVyIFNjb3BhcyBtZXQgdGhlaXIgZGVhdGgKYXQgdGhlIHNhbWUgdGltZS48bWlsZXN0b25lIG49IjE2IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgbXkgb3duIHBhcnQsIGhvd2V2ZXIsIEkKcmVnYXJkIHRoZSBwb3J0aW9uIG9mIHRoZSBzdG9yeSB3aGljaCBjb25jZXJucwpDYXN0b3IgYW5kIFBvbGx1eCBhcyBiZWluZyBwdXJlbHkgZmljdGl0aW91cywgc2luY2UKCjxwYiBpZD0icC4yMjEiIC8+Cgp0aGUgcG9ldCBoaW1zZWxmIGhhcyBub3doZXJlIG1lbnRpb25lZCB0aGUgb2NjdXJyZW5jZTsgYW5kIGhlIHdvdWxkIHNjYXJjZWx5IGhhdmUga2VwdCBzaWxlbmNlIG9uCmFuIGFmZmFpciB3aGljaCB3YXMgc28gbXVjaCB0byBoaXMgY3JlZGl0LjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZmlyc3QgcGVyc29uIHRvIGRpc2NvdmVyIGFuIGFydCBvZiBtZW1vcnkgaXMKc2FpZCB0byBoYXZlIGJlZW4gU2ltb25pZGVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgeC4gaS4gNjQuPC9ub3RlPiBvZiB3aG9tIHRoZSBmb2xsb3dpbmcKd2VsbC1rbm93biBzdG9yeSBpcyB0b2xkLiBIZSBoYWQgd3JpdHRlbiBhbiBvZGUKb2YgdGhlIGtpbmQgdXN1YWxseSBjb21wb3NlZCBpbiBob25vdXIgb2YgdmljdG9yaW91cwphdGhsZXRlcywgdG8gY2VsZWJyYXRlIHRoZSBhY2hpZXZlbWVudCBvZiBvbmUgd2hvCmhhZCBnYWluZWQgdGhlIGNyb3duIGZvciBib3hpbmcuIFBhcnQgb2YgdGhlIHN1bQpmb3Igd2hpY2ggaGUgaGFkIGNvbnRyYWN0ZWQgd2FzIHJlZnVzZWQgaGltIG9uCnRoZSBncm91bmQgdGhhdCwgZm9sbG93aW5nIHRoZSBjb21tb24gcHJhY3RpY2Ugb2YKcG9ldHMsIGhlIGhhZCBpbnRyb2R1Y2VkIGEgZGlncmVzc2lvbiBpbiBwcmFpc2Ugb2YKQ2FzdG9yIGFuZCBQb2xsdXgsIGFuZCBoZSB3YXMgdG9sZCB0aGF0LCBpbiB2aWV3Cm9mIHdoYXQgaGUgaGFkIGRvbmUsIGhlIGhhZCBiZXN0IGFzayBmb3IgdGhlIHJlc3QKb2YgdGhlIHN1bSBkdWUgZnJvbSB0aG9zZSB3aG9zZSBkZWVkcyBoZSBoYWQKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjIxOSIgLz4KCmV4dG9sbGVkLiBBbmQgYWNjb3JkaW5nIHRvIHRoZSBzdG9yeSB0aGV5IHBhaWQKdGhlaXIgZGVidC48L3RyYW5zbGF0aW9uPg=="
translation['11.6.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHdoZW4gYSBncmVhdCBiYW5xdWV0IHdhcyBnaXZlbgppbiBob25vdXIgb2YgdGhlIGJveGVyJ3Mgc3VjY2VzcywgU2ltb25pZGVzIHdhcwpzdW1tb25lZCBmb3J0aCBmcm9tIHRoZSBmZWFzdCwgdG8gd2hpY2ggaGUgaGFkCmJlZW4gaW52aXRlZCwgYnkgYSBtZXNzYWdlIHRvIHRoZSBlZmZlY3QgdGhhdCB0d28KeW91dGhzIHdobyBoYWQgcmlkZGVuIHRvIHRoZSBkb29yIHVyZ2VudGx5IGRlc2lyZWQKaGlzIHByZXNlbmNlLiBIZSBmb3VuZCBubyB0cmFjZSBvZiB0aGVtLCBidXQgd2hhdApmb2xsb3dlZCBwcm92ZWQgdG8gaGltIHRoYXQgdGhlIGdvZHMgaGFkIHNob3duCnRoZWlyIGdyYXRpdHVkZS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGhlIGhhZCBzY2FyY2VseSBjcm9zc2VkIHRoZQp0aHJlc2hvbGQgb24gaGlzIHdheSBvdXQsIHdoZW4gdGhlIGJhbnF1ZXRpbmcgaGFsbApmZWxsIGluIHVwb24gdGhlIGhlYWRzIG9mIHRoZSBndWVzdHMgYW5kIHdyb3VnaHQKc3VjaCBoYXZvYyBhbW9uZyB0aGVtIHRoYXQgdGhlIHJlbGF0aXZlcyBvZiB0aGUKZGVhZCB3aG8gY2FtZSB0byBzZWVrIHRoZSBib2RpZXMgZm9yIGJ1cmlhbCB3ZXJlCnVuYWJsZSB0byBkaXN0aW5ndWlzaCBub3QgbWVyZWx5IHRoZSBmYWNlcyBidXQgZXZlbgp0aGUgbGltYnMgb2YgdGhlIGRlYWQuIFRoZW4gaXQgaXMgc2FpZCwgU2ltb25pZGVzLAp3aG8gcmVtZW1iZXJlZCB0aGUgb3JkZXIgaW4gd2hpY2ggdGhlIGd1ZXN0cyBoYWQKYmVlbiBzaXR0aW5nLCBzdWNjZWVkZWQgaW4gcmVzdG9yaW5nIHRvIGVhY2ggbWFuIGhpcwpvd24gZGVhZC48L3RyYW5zbGF0aW9uPg=="
translation['11.6.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmUgaXMsIGhvd2V2ZXIsIGdyZWF0IGRpc2FncmVlbWVudAphbW9uZyBvdXIgYXV0aG9yaXRpZXMgYXMgdG8gd2hldGhlciB0aGlzIG9kZSB3YXMKd3JpdHRlbiBpbiBob25vdXIgb2YgR2xhdWN1cyBvZiBDYXJ5c3R1cywgTGVvY3JhdGVzLApBZ2F0aGFyY3VzIG9yIFNjb3BhcywgYW5kIHdoZXRoZXIgdGhlIGhvdXNlIHdhcwphdCBQaGFyc2FsdXMsIGFzIFNpbW9uaWRlcyBoaW1zZWxmIHNlZW1zIHRvIGluZGljYXRlCmluIGEgY2VydGFpbiBwYXNzYWdlLCBhbmQgYXMgaXMgcmVjb3JkZWQgYnkgQXBvbGxvZG9ydXMsIEVyYXRvc3RoZW5lcywgRXVwaG9yaW9uIGFuZCBFdXJ5cHlsdXMgb2YKTGFyaXNzYSwgb3IgYXQgQ3Jhbm5vbiwgYXMgaXMgc3RhdGVkIGJ5IEFwb2xsYXMKQ2FsbGltYWNodXMsIHdobyBpcyBmb2xsb3dlZCBieSBDaWNlcm8sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkNpYy4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gSUkuIGx4eHh2aS4gMzUyLjwvbm90ZT4gdG8gd2hvbQp0aGUgd2lkZSBjaXJjdWxhdGlvbiBvZiB0aGlzIHN0b3J5IGlzIGR1ZS48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5kZSBPci48L2hpPiBJSS4gbHh4eHZpLiAzNTIuPC90cmFuc2xhdGlvbj4="
translation['11.6.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz4gSXQgaXMKYWdyZWVkIHRoYXQgU2NvcGFzLCBhIFRoZXNzYWxpYW4gbm9ibGUsIHBlcmlzaGVkIGF0CnRoaXMgYmFucXVldCwgYW5kIGl0IGlzIGFsc28gc2FpZCB0aGF0IGhpcyBzaXN0ZXIncyBzb24KcGVyaXNoZWQgd2l0aCBoaW0sIHdoaWxlIGl0IGlzIHRob3VnaHQgdGhhdCBhIG51bWJlcgpvZiBkZXNjZW5kYW50cyBvZiBhbiBlbGRlciBTY29wYXMgbWV0IHRoZWlyIGRlYXRoCmF0IHRoZSBzYW1lIHRpbWUuPC90cmFuc2xhdGlvbj4="
translation['11.6.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIG15IG93biBwYXJ0LCBob3dldmVyLCBJCnJlZ2FyZCB0aGUgcG9ydGlvbiBvZiB0aGUgc3Rvcnkgd2hpY2ggY29uY2VybnMKQ2FzdG9yIGFuZCBQb2xsdXggYXMgYmVpbmcgcHVyZWx5IGZpY3RpdGlvdXMsIHNpbmNlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yMjEiIC8+Cgp0aGUgcG9ldCBoaW1zZWxmIGhhcyBub3doZXJlIG1lbnRpb25lZCB0aGUgb2NjdXJyZW5jZTsgYW5kIGhlIHdvdWxkIHNjYXJjZWx5IGhhdmUga2VwdCBzaWxlbmNlIG9uCmFuIGFmZmFpciB3aGljaCB3YXMgc28gbXVjaCB0byBoaXMgY3JlZGl0LjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE3IiB1bml0PSJzZWN0aW9uIiAvPlRoaXMgYWNoaWV2ZW1lbnQgb2YgU2ltb25pZGVzIGFwcGVhcnMgdG8gaGF2ZQpnaXZlbiByaXNlIHRvIHRoZSBvYnNlcnZhdGlvbiB0aGF0IGl0IGlzIGFuIGFzc2lzdGFuY2UKdG8gdGhlIG1lbW9yeSBpZiBsb2NhbGl0aWVzIGFyZSBzaGFycGx5IGltcHJlc3NlZAp1cG9uIHRoZSBtaW5kLCBhIHZpZXcgdGhlIHRydXRoIG9mIHdoaWNoIGV2ZXJ5b25lCm1heSByZWFsaXNlIGJ5IHByYWN0aWNhbCBleHBlcmltZW50LiBGb3Igd2hlbiB3ZQpyZXR1cm4gdG8gYSBwbGFjZSBhZnRlciBjb25zaWRlcmFibGUgYWJzZW5jZSwgd2Ugbm90Cm1lcmVseSByZWNvZ25pc2UgdGhlIHBsYWNlIGl0c2VsZiwgYnV0IHJlbWVtYmVyCnRoaW5ncyB0aGF0IHdlIGRpZCB0aGVyZSwgYW5kIHJlY2FsbCB0aGUgcGVyc29ucwp3aG9tIHdlIG1ldCBhbmQgZXZlbiB0aGUgdW51dHRlcmVkIHRob3VnaHRzCndoaWNoIHBhc3NlZCB0aHJvdWdoIG91ciBtaW5kcyB3aGVuIHdlIHdlcmUKdGhlcmUgYmVmb3JlLjxtaWxlc3RvbmUgbj0iMTgiIHVuaXQ9InNlY3Rpb24iIC8+IFRodXMsIGFzIGluIG1vc3QgY2FzZXMsIGFydCBvcmlnaW5hdGVzIGluIGV4cGVyaW1lbnQuIFNvbWUgcGxhY2UgaXMgY2hvc2VuIG9mIHRoZQpsYXJnZXN0IHBvc3NpYmxlIGV4dGVudCBhbmQgY2hhcmFjdGVyaXNlZCBieSB0aGUKdXRtb3N0IHBvc3NpYmxlIHZhcmlldHksIHN1Y2ggYXMgYSBzcGFjaW91cyBob3VzZQpkaXZpZGVkIGludG8gYSBudW1iZXIgb2Ygcm9vbXMuIEV2ZXJ5dGhpbmcgb2YKbm90ZSB0aGVyZWluIGlzIGNhcmVmdWxseSBjb21taXR0ZWQgdG8gdGhlIG1lbW9yeSwKaW4gb3JkZXIgdGhhdCB0aGUgdGhvdWdodCBtYXkgYmUgZW5hYmxlZCB0byBydW4KdGhyb3VnaCBhbGwgdGhlIGRldGFpbHMgd2l0aG91dCBsZXQgb3IgaGluZHJhbmNlLgpBbmQgdW5kb3VidGVkbHkgdGhlIGZpcnN0IHRhc2sgaXMgdG8gc2VjdXJlIHRoYXQKdGhlcmUgc2hhbGwgYmUgbm8gZGVsYXkgaW4gZmluZGluZyBhbnkgc2luZ2xlIGRldGFpbCwKc2luY2UgYW4gaWRlYSB3aGljaCBpcyB0byBsZWFkIGJ5IGFzc29jaWF0aW9uIHRvCnNvbWUgb3RoZXIgaWRlYSByZXF1aXJlcyB0byBiZSBmaXhlZCBpbiB0aGUgbWluZAp3aXRoIG1vcmUgdGhhbiBvcmRpbmFyeSBjZXJ0aXR1ZGUuPG1pbGVzdG9uZSBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIG5leHQgc3RlcAppcyB0byBkaXN0aW5ndWlzaCBzb21ldGhpbmcgd2hpY2ggaGFzIGJlZW4gd3JpdHRlbgpkb3duIG9yIG1lcmVseSB0aG91Z2h0IG9mIGJ5IHNvbWUgcGFydGljdWxhcgpzeW1ib2wgd2hpY2ggd2lsbCBzZXJ2ZSB0byBqb2cgdGhlIG1lbW9yeTsgdGhpcwpzeW1ib2wgbWF5IGhhdmUgcmVmZXJlbmNlIHRvIHRoZSBzdWJqZWN0IGFzIGEKd2hvbGUsIGl0IG1heSwgZm9yIGV4YW1wbGUsIGJlIGRyYXduIGZyb20gbmF2aWdhdGlvbiwgd2FyZmFyZSwgZXRjLiwgb3IgaXQgbWF5LCBvbiB0aGUgb3RoZXIgaGFuZCwKYmUgZm91bmQgaW4gc29tZSBwYXJ0aWN1bGFyIHdvcmQuIChGb3IgZXZlbiBpbgpjYXNlcyBvZiBmb3JnZXRmdWxuZXNzIG9uZSBzaW5nbGUgd29yZCB3aWxsIHNlcnZlIHRvCgo8cGIgaWQ9InAuMjIzIiAvPgoKcmVzdG9yZSB0aGUgbWVtb3J5LikgSG93ZXZlciwgbGV0IHVzIHN1cHBvc2UgdGhhdAp0aGUgc3ltYm9sIGlzIGRyYXduIGZyb20gbmF2aWdhdGlvbiwgYXMsIGZvciBpbnN0YW5jZSwKYW4gYW5jaG9yOyBvciBmcm9tIHdhcmZhcmUsIGFzLCBmb3IgZXhhbXBsZSwgc29tZQp3ZWFwb24uIFRoZXNlIHN5bWJvbHMgYXJlIHRoZW4gYXJyYW5nZWQgYXMgZm9sbG93cy48bWlsZXN0b25lIG49IjIwIiB1bml0PSJzZWN0aW9uIiAvPgpUaGUgZmlyc3QgdGhvdWdoIGlzIHBsYWNlZCwgYXMgaXQgd2VyZSwgaW4gdGhlIGZvcmVjb3VydDsKdGhlIHNlY29uZCwgbGV0IHVzIHNheSwgaW4gdGhlIGxpdmluZy1yb29tOyB0aGUgcmVtYWluZGVyIGFyZSBwbGFjZWQgaW4gZHVlIG9yZGVyIGFsbCByb3VuZCB0aGUgPGhpIHJlbmQ9Iml0YWxpY3MiPmltcGx1dml1bTwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGUgPGhpIHJlbmQ9Iml0YWxpY3MiPmltcGx1dml1bTwvaGk+IHdhcyB0aGUgbGlnaHQtd2VsbCBpbiB0aGUgY2VudHJlIG9mIHRoZQo8aGkgcmVuZD0iaXRhbGljcyI+YXRyaXVtPC9oaT4gd2l0aCBhIGNpc3Rlcm4gYmVuZWF0aCBpdCB0byBjYXRjaCB0aGUgcmFpbndhdGVyIGZyb20KdGhlIHJvb2YsIHdoaWNoIHNsb3BlZCBpbndhcmRzLjwvbm90ZT4gYW5kIGVudHJ1c3RlZCBub3QgbWVyZWx5IHRvIGJlZHJvb21zIGFuZApwYXJsb3VycywgYnV0IGV2ZW4gdG8gdGhlIGNhcmUgb2Ygc3RhdHVlcyBhbmQgdGhlCmxpa2UuIFRoaXMgZG9uZSwgYXMgc29vbiBhcyB0aGUgbWVtb3J5IG9mIHRoZSBmYWN0cwpyZXF1aXJlcyB0byBiZSByZXZpdmVkLCBhbGwgdGhlc2UgcGxhY2VzIGFyZSB2aXNpdGVkIGluCnR1cm4gYW5kIHRoZSB2YXJpb3VzIGRlcG9zaXRzIGFyZSBkZW1hbmRlZCBmcm9tCnRoZWlyIGN1c3RvZGlhbnMsIGFzIHRoZSBzaWdodCBvZiBlYWNoIHJlY2FsbHMgdGhlCnJlc3BlY3RpdmUgZGV0YWlscy4gQ29uc2VxdWVudGx5LCBob3dldmVyIGxhcmdlIHRoZQpudW1iZXIgb2YgdGhlc2Ugd2hpY2ggaXQgaXMgcmVxdWlyZWQgdG8gcmVtZW1iZXIsCmFsbCBhcmUgbGlua2VkIG9uZSB0byB0aGUgb3RoZXIgbGlrZSBkYW5jZXJzCmhhbmQgaW4gaGFuZCwgYW5kIHRoZXJlIGNhbiBiZSBubyBtaXN0YWtlIHNpbmNlCnRoZXkgam9pbiB3aGF0IHByZWNlZGVzIHRvIHdoYXQgZm9sbG93cywgbm8gdHJvdWJsZQpiZWluZyByZXF1aXJlZCBleGNlcHQgdGhlIHByZWxpbWluYXJ5IGxhYm91ciBvZgpjb21taXR0aW5nIHRoZSB2YXJpb3VzIHBvaW50cyB0byBtZW1vcnkuPG1pbGVzdG9uZSBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gV2hhdApJIGhhdmUgc3Bva2VuIG9mIGFzIGJlaW5nIGRvbmUgaW4gYSBob3VzZSwgY2FuCmVxdWFsbHkgd2VsbCBiZSBkb25lIGluIGNvbm5leGlvbiB3aXRoIHB1YmxpYwpidWlsZGluZ3MsIGEgbG9uZyBqb3VybmV5LCB0aGUgcmFtcGFydHMgb2YgYSBjaXR5LApvciBldmVuIHBpY3R1cmVzLiBPciB3ZSBtYXkgZXZlbiBpbWFnaW5lIHN1Y2gKcGxhY2VzIHRvIG91cnNlbHZlcy4gV2UgcmVxdWlyZSwgdGhlcmVmb3JlLApwbGFjZXMsIHJlYWwgb3IgaW1hZ2luYXJ5LCBhbmQgaW1hZ2VzIG9yIHN5bWJvbHMsCndoaWNoIHdlIG11c3QsIG9mIGNvdXJzZSwgaW52ZW50IGZvciBvdXJzZWx2ZXMuIEJ5CmltYWdlcyBJIG1lYW4gdGhlIHdvcmRzIGJ5IHdoaWNoIHdlIGRpc3Rpbmd1aXNoCnRoZSB0aGluZ3Mgd2hpY2ggd2UgaGF2ZSB0byBsZWFybiBieSBoZWFydDogaW4KZmFjdCwgYXMgQ2ljZXJvIHNheXMsIHdlIHVzZSA8cXVvdGU+cGxhY2VzIGxpa2Ugd2F4IHRhYmxldHMKYW5kIHN5bWJvbHMgaW4gbGlldSBvZiBsZXR0ZXJzLjwvcXVvdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+RGUgT3IuPC9oaT4gSUkuIGx4eHh2aS4gMzU0Ljwvbm90ZT48bWlsZXN0b25lIG49IjIyIiB1bml0PSJzZWN0aW9uIiAvPiBJdCB3aWxsIGJlIGJlc3QgdG8KZ2l2ZSBoaXMgd29yZHMgPGhpIHJlbmQ9Iml0YWxpY3MiPnZlcmJhdGltOjwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+RGUgT3IuPC9oaT4gSUkuIGx4eHh2aWkuIDM1OC48L25vdGU+IDxxdW90ZT5XZSBtdXN0IGZvciB0aGlzIHB1cnBvc2UgZW1wbG95IGEgbnVtYmVyIG9mIHJlbWFya2FibGUgcGxhY2VzLCBjbGVhcmx5CmVudmlzYWdlZCBhbmQgc2VwYXJhdGVkIGJ5IHNob3J0IGludGVydmFsczogdGhlCgo8cGIgaWQ9InAuMjI1IiAvPgoKaW1hZ2VzIHdoaWNoIHdlIHVzZSBtdXN0IGJlIGFjdGl2ZSwgc2hhcnBseS1jdXQgYW5kCmRpc3RpbmN0aXZlLCBzdWNoIGFzIG1heSBvY2N1ciB0byB0aGUgbWluZCBhbmQgc3RyaWtlCml0IHdpdGggcmFwaWRpdHkuPC9xdW90ZT4gVGhpcyBtYWtlcyBtZSB3b25kZXIgYWxsIHRoZQptb3JlLCBob3cgTWV0cm9kb3J1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+T2YgU2NlcHNpcywgdGhlIGZhdm91cml0ZSBvZiBNaXRocmFkYXRlcyBFdXBhdG9yLiBTZWUKPGhpIHJlbmQ9Iml0YWxpY3MiPmRlIE9yLjwvaGk+IElJLiBseHh4dmlpaS4gMzYwLiBIZSB1c2VkIHRoZSBzaWducyBvZiB0aGUgWm9kaWFjIGFzCmFpZHMgdG8gdGhlIG1lbW9yeSwgc3ViZGl2aWRpbmcgZWFjaCBpbnRvIHRoaXJ0eSBjb21wYXJ0bWVudHMuIFF1aW50aWxpYW4gd29uZGVycyBvbiB3aGF0IHByaW5jaXBsZSBoZSBjYW4gaGF2ZQptYWRlIHN1Y2ggYSBkaXZpc2lvbiwgbmVjZXNzYXJpbHkgcHVyZWx5IGFydGlmaWNpYWwgaW4gbmF0dXJlLjwvbm90ZT4gc2hvdWxkIGhhdmUgZm91bmQgdGhyZWUKaHVuZHJlZCBhbmQgc2l4dHkgZGlmZmVyZW50IGxvY2FsaXRpZXMgaW4gdGhlIHR3ZWx2ZQpzaWducyBvZiB0aGUgWm9kaWFjIHRocm91Z2ggd2hpY2ggdGhlIHN1biBwYXNzZXMuCkl0IHdhcyBkb3VidGxlc3MgZHVlIHRvIHRoZSB2YW5pdHkgYW5kIGJvYXN0ZnVsbmVzcwpvZiBhIG1hbiB3aG8gd2FzIGluY2xpbmVkIHRvIHZhdW50IGhpcyBtZW1vcnkgYXMKYmVpbmcgdGhlIHJlc3VsdCBvZiBhcnQgcmF0aGVyIHRoYW4gb2YgbmF0dXJhbCBnaWZ0cy48L3A+CjwvdHJhbnNsYXRpb24+"
translation['11.6.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIGFjaGlldmVtZW50IG9mIFNpbW9uaWRlcyBhcHBlYXJzIHRvIGhhdmUKZ2l2ZW4gcmlzZSB0byB0aGUgb2JzZXJ2YXRpb24gdGhhdCBpdCBpcyBhbiBhc3Npc3RhbmNlCnRvIHRoZSBtZW1vcnkgaWYgbG9jYWxpdGllcyBhcmUgc2hhcnBseSBpbXByZXNzZWQKdXBvbiB0aGUgbWluZCwgYSB2aWV3IHRoZSB0cnV0aCBvZiB3aGljaCBldmVyeW9uZQptYXkgcmVhbGlzZSBieSBwcmFjdGljYWwgZXhwZXJpbWVudC4gRm9yIHdoZW4gd2UKcmV0dXJuIHRvIGEgcGxhY2UgYWZ0ZXIgY29uc2lkZXJhYmxlIGFic2VuY2UsIHdlIG5vdAptZXJlbHkgcmVjb2duaXNlIHRoZSBwbGFjZSBpdHNlbGYsIGJ1dCByZW1lbWJlcgp0aGluZ3MgdGhhdCB3ZSBkaWQgdGhlcmUsIGFuZCByZWNhbGwgdGhlIHBlcnNvbnMKd2hvbSB3ZSBtZXQgYW5kIGV2ZW4gdGhlIHVudXR0ZXJlZCB0aG91Z2h0cwp3aGljaCBwYXNzZWQgdGhyb3VnaCBvdXIgbWluZHMgd2hlbiB3ZSB3ZXJlCnRoZXJlIGJlZm9yZS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz4gVGh1cywgYXMgaW4gbW9zdCBjYXNlcywgYXJ0IG9yaWdpbmF0ZXMgaW4gZXhwZXJpbWVudC4gU29tZSBwbGFjZSBpcyBjaG9zZW4gb2YgdGhlCmxhcmdlc3QgcG9zc2libGUgZXh0ZW50IGFuZCBjaGFyYWN0ZXJpc2VkIGJ5IHRoZQp1dG1vc3QgcG9zc2libGUgdmFyaWV0eSwgc3VjaCBhcyBhIHNwYWNpb3VzIGhvdXNlCmRpdmlkZWQgaW50byBhIG51bWJlciBvZiByb29tcy4gRXZlcnl0aGluZyBvZgpub3RlIHRoZXJlaW4gaXMgY2FyZWZ1bGx5IGNvbW1pdHRlZCB0byB0aGUgbWVtb3J5LAppbiBvcmRlciB0aGF0IHRoZSB0aG91Z2h0IG1heSBiZSBlbmFibGVkIHRvIHJ1bgp0aHJvdWdoIGFsbCB0aGUgZGV0YWlscyB3aXRob3V0IGxldCBvciBoaW5kcmFuY2UuCkFuZCB1bmRvdWJ0ZWRseSB0aGUgZmlyc3QgdGFzayBpcyB0byBzZWN1cmUgdGhhdAp0aGVyZSBzaGFsbCBiZSBubyBkZWxheSBpbiBmaW5kaW5nIGFueSBzaW5nbGUgZGV0YWlsLApzaW5jZSBhbiBpZGVhIHdoaWNoIGlzIHRvIGxlYWQgYnkgYXNzb2NpYXRpb24gdG8Kc29tZSBvdGhlciBpZGVhIHJlcXVpcmVzIHRvIGJlIGZpeGVkIGluIHRoZSBtaW5kCndpdGggbW9yZSB0aGFuIG9yZGluYXJ5IGNlcnRpdHVkZS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIG5leHQgc3RlcAppcyB0byBkaXN0aW5ndWlzaCBzb21ldGhpbmcgd2hpY2ggaGFzIGJlZW4gd3JpdHRlbgpkb3duIG9yIG1lcmVseSB0aG91Z2h0IG9mIGJ5IHNvbWUgcGFydGljdWxhcgpzeW1ib2wgd2hpY2ggd2lsbCBzZXJ2ZSB0byBqb2cgdGhlIG1lbW9yeTsgdGhpcwpzeW1ib2wgbWF5IGhhdmUgcmVmZXJlbmNlIHRvIHRoZSBzdWJqZWN0IGFzIGEKd2hvbGUsIGl0IG1heSwgZm9yIGV4YW1wbGUsIGJlIGRyYXduIGZyb20gbmF2aWdhdGlvbiwgd2FyZmFyZSwgZXRjLiwgb3IgaXQgbWF5LCBvbiB0aGUgb3RoZXIgaGFuZCwKYmUgZm91bmQgaW4gc29tZSBwYXJ0aWN1bGFyIHdvcmQuIChGb3IgZXZlbiBpbgpjYXNlcyBvZiBmb3JnZXRmdWxuZXNzIG9uZSBzaW5nbGUgd29yZCB3aWxsIHNlcnZlIHRvCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yMjMiIC8+CgpyZXN0b3JlIHRoZSBtZW1vcnkuKSBIb3dldmVyLCBsZXQgdXMgc3VwcG9zZSB0aGF0CnRoZSBzeW1ib2wgaXMgZHJhd24gZnJvbSBuYXZpZ2F0aW9uLCBhcywgZm9yIGluc3RhbmNlLAphbiBhbmNob3I7IG9yIGZyb20gd2FyZmFyZSwgYXMsIGZvciBleGFtcGxlLCBzb21lCndlYXBvbi4gVGhlc2Ugc3ltYm9scyBhcmUgdGhlbiBhcnJhbmdlZCBhcyBmb2xsb3dzLjwvdHJhbnNsYXRpb24+"
translation['11.6.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz4KVGhlIGZpcnN0IHRob3VnaCBpcyBwbGFjZWQsIGFzIGl0IHdlcmUsIGluIHRoZSBmb3JlY291cnQ7CnRoZSBzZWNvbmQsIGxldCB1cyBzYXksIGluIHRoZSBsaXZpbmctcm9vbTsgdGhlIHJlbWFpbmRlciBhcmUgcGxhY2VkIGluIGR1ZSBvcmRlciBhbGwgcm91bmQgdGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmltcGx1dml1bTwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5pbXBsdXZpdW08L2hpPiB3YXMgdGhlIGxpZ2h0LXdlbGwgaW4gdGhlIGNlbnRyZSBvZiB0aGUKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+YXRyaXVtPC9oaT4gd2l0aCBhIGNpc3Rlcm4gYmVuZWF0aCBpdCB0byBjYXRjaCB0aGUgcmFpbndhdGVyIGZyb20KdGhlIHJvb2YsIHdoaWNoIHNsb3BlZCBpbndhcmRzLjwvbm90ZT4gYW5kIGVudHJ1c3RlZCBub3QgbWVyZWx5IHRvIGJlZHJvb21zIGFuZApwYXJsb3VycywgYnV0IGV2ZW4gdG8gdGhlIGNhcmUgb2Ygc3RhdHVlcyBhbmQgdGhlCmxpa2UuIFRoaXMgZG9uZSwgYXMgc29vbiBhcyB0aGUgbWVtb3J5IG9mIHRoZSBmYWN0cwpyZXF1aXJlcyB0byBiZSByZXZpdmVkLCBhbGwgdGhlc2UgcGxhY2VzIGFyZSB2aXNpdGVkIGluCnR1cm4gYW5kIHRoZSB2YXJpb3VzIGRlcG9zaXRzIGFyZSBkZW1hbmRlZCBmcm9tCnRoZWlyIGN1c3RvZGlhbnMsIGFzIHRoZSBzaWdodCBvZiBlYWNoIHJlY2FsbHMgdGhlCnJlc3BlY3RpdmUgZGV0YWlscy4gQ29uc2VxdWVudGx5LCBob3dldmVyIGxhcmdlIHRoZQpudW1iZXIgb2YgdGhlc2Ugd2hpY2ggaXQgaXMgcmVxdWlyZWQgdG8gcmVtZW1iZXIsCmFsbCBhcmUgbGlua2VkIG9uZSB0byB0aGUgb3RoZXIgbGlrZSBkYW5jZXJzCmhhbmQgaW4gaGFuZCwgYW5kIHRoZXJlIGNhbiBiZSBubyBtaXN0YWtlIHNpbmNlCnRoZXkgam9pbiB3aGF0IHByZWNlZGVzIHRvIHdoYXQgZm9sbG93cywgbm8gdHJvdWJsZQpiZWluZyByZXF1aXJlZCBleGNlcHQgdGhlIHByZWxpbWluYXJ5IGxhYm91ciBvZgpjb21taXR0aW5nIHRoZSB2YXJpb3VzIHBvaW50cyB0byBtZW1vcnkuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+aW1wbHV2aXVtPC9oaT4gd2FzIHRoZSBsaWdodC13ZWxsIGluIHRoZSBjZW50cmUgb2YgdGhlCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmF0cml1bTwvaGk+IHdpdGggYSBjaXN0ZXJuIGJlbmVhdGggaXQgdG8gY2F0Y2ggdGhlIHJhaW53YXRlciBmcm9tCnRoZSByb29mLCB3aGljaCBzbG9wZWQgaW53YXJkcy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gV2hhdApJIGhhdmUgc3Bva2VuIG9mIGFzIGJlaW5nIGRvbmUgaW4gYSBob3VzZSwgY2FuCmVxdWFsbHkgd2VsbCBiZSBkb25lIGluIGNvbm5leGlvbiB3aXRoIHB1YmxpYwpidWlsZGluZ3MsIGEgbG9uZyBqb3VybmV5LCB0aGUgcmFtcGFydHMgb2YgYSBjaXR5LApvciBldmVuIHBpY3R1cmVzLiBPciB3ZSBtYXkgZXZlbiBpbWFnaW5lIHN1Y2gKcGxhY2VzIHRvIG91cnNlbHZlcy4gV2UgcmVxdWlyZSwgdGhlcmVmb3JlLApwbGFjZXMsIHJlYWwgb3IgaW1hZ2luYXJ5LCBhbmQgaW1hZ2VzIG9yIHN5bWJvbHMsCndoaWNoIHdlIG11c3QsIG9mIGNvdXJzZSwgaW52ZW50IGZvciBvdXJzZWx2ZXMuIEJ5CmltYWdlcyBJIG1lYW4gdGhlIHdvcmRzIGJ5IHdoaWNoIHdlIGRpc3Rpbmd1aXNoCnRoZSB0aGluZ3Mgd2hpY2ggd2UgaGF2ZSB0byBsZWFybiBieSBoZWFydDogaW4KZmFjdCwgYXMgQ2ljZXJvIHNheXMsIHdlIHVzZSA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5wbGFjZXMgbGlrZSB3YXggdGFibGV0cwphbmQgc3ltYm9scyBpbiBsaWV1IG9mIGxldHRlcnMuPC9xdW90ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGUgT3IuPC9oaT4gSUkuIGx4eHh2aS4gMzU0Ljwvbm90ZT48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5EZSBPci48L2hpPiBJSS4gbHh4eHZpLiAzNTQuPC90cmFuc2xhdGlvbj4="
translation['11.6.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gSXQgd2lsbCBiZSBiZXN0IHRvCmdpdmUgaGlzIHdvcmRzIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnZlcmJhdGltOjwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkRlIE9yLjwvaGk+IElJLiBseHh4dmlpLiAzNTguPC9ub3RlPiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5EZSBPci48L2hpPiBJSS4gbHh4eHZpaS4gMzU4LjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPldlIG11c3QgZm9yIHRoaXMgcHVycG9zZSBlbXBsb3kgYSBudW1iZXIgb2YgcmVtYXJrYWJsZSBwbGFjZXMsIGNsZWFybHkKZW52aXNhZ2VkIGFuZCBzZXBhcmF0ZWQgYnkgc2hvcnQgaW50ZXJ2YWxzOiB0aGUKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjIyNSIgLz4KCmltYWdlcyB3aGljaCB3ZSB1c2UgbXVzdCBiZSBhY3RpdmUsIHNoYXJwbHktY3V0IGFuZApkaXN0aW5jdGl2ZSwgc3VjaCBhcyBtYXkgb2NjdXIgdG8gdGhlIG1pbmQgYW5kIHN0cmlrZQppdCB3aXRoIHJhcGlkaXR5LjwvcXVvdGU+IFRoaXMgbWFrZXMgbWUgd29uZGVyIGFsbCB0aGUKbW9yZSwgaG93IE1ldHJvZG9ydXM8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yMjUiIC8+CgppbWFnZXMgd2hpY2ggd2UgdXNlIG11c3QgYmUgYWN0aXZlLCBzaGFycGx5LWN1dCBhbmQKZGlzdGluY3RpdmUsIHN1Y2ggYXMgbWF5IG9jY3VyIHRvIHRoZSBtaW5kIGFuZCBzdHJpa2UKaXQgd2l0aCByYXBpZGl0eS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+T2YgU2NlcHNpcywgdGhlIGZhdm91cml0ZSBvZiBNaXRocmFkYXRlcyBFdXBhdG9yLiBTZWUKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gSUkuIGx4eHh2aWlpLiAzNjAuIEhlIHVzZWQgdGhlIHNpZ25zIG9mIHRoZSBab2RpYWMgYXMKYWlkcyB0byB0aGUgbWVtb3J5LCBzdWJkaXZpZGluZyBlYWNoIGludG8gdGhpcnR5IGNvbXBhcnRtZW50cy4gUXVpbnRpbGlhbiB3b25kZXJzIG9uIHdoYXQgcHJpbmNpcGxlIGhlIGNhbiBoYXZlCm1hZGUgc3VjaCBhIGRpdmlzaW9uLCBuZWNlc3NhcmlseSBwdXJlbHkgYXJ0aWZpY2lhbCBpbiBuYXR1cmUuPC9ub3RlPiBzaG91bGQgaGF2ZSBmb3VuZCB0aHJlZQpodW5kcmVkIGFuZCBzaXh0eSBkaWZmZXJlbnQgbG9jYWxpdGllcyBpbiB0aGUgdHdlbHZlCnNpZ25zIG9mIHRoZSBab2RpYWMgdGhyb3VnaCB3aGljaCB0aGUgc3VuIHBhc3Nlcy4KSXQgd2FzIGRvdWJ0bGVzcyBkdWUgdG8gdGhlIHZhbml0eSBhbmQgYm9hc3RmdWxuZXNzCm9mIGEgbWFuIHdobyB3YXMgaW5jbGluZWQgdG8gdmF1bnQgaGlzIG1lbW9yeSBhcwpiZWluZyB0aGUgcmVzdWx0IG9mIGFydCByYXRoZXIgdGhhbiBvZiBuYXR1cmFsIGdpZnRzLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIE9yLjwvaGk+IElJLiBseHh4dmlpaS4gMzYwLiBIZSB1c2VkIHRoZSBzaWducyBvZiB0aGUgWm9kaWFjIGFzCmFpZHMgdG8gdGhlIG1lbW9yeSwgc3ViZGl2aWRpbmcgZWFjaCBpbnRvIHRoaXJ0eSBjb21wYXJ0bWVudHMuIFF1aW50aWxpYW4gd29uZGVycyBvbiB3aGF0IHByaW5jaXBsZSBoZSBjYW4gaGF2ZQptYWRlIHN1Y2ggYSBkaXZpc2lvbiwgbmVjZXNzYXJpbHkgcHVyZWx5IGFydGlmaWNpYWwgaW4gbmF0dXJlLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjIzIiB1bml0PSJzZWN0aW9uIiAvPkkgYW0gZmFyIGZyb20gZGVueWluZyB0aGF0IHRob3NlIGRldmljZXMgbWF5IGJlCnVzZWZ1bCBmb3IgY2VydGFpbiBwdXJwb3NlcywgYXMsIGZvciBleGFtcGxlLCBpZiB3ZQpoYXZlIHRvIHJlcHJvZHVjZSBhIG51bWJlciBvZiBuYW1lcyBpbiB0aGUgb3JkZXIKaW4gd2hpY2ggd2UgaGVhcmQgdGhlbS4gRm9yIHRob3NlIHdobyB1c2Ugc3VjaAphaWRzIHBsYWNlIHRoZSB0aGluZ3Mgd2hpY2ggaGF2ZSB0byBiZSByZW1lbWJlcmVkCmluIGxvY2FsaXRpZXMgd2hpY2ggdGhleSBoYXZlIHByZXZpb3VzbHkgZml4ZWQgaW4gdGhlCm1lbW9yeTsgdGhleSBwdXQgYSB0YWJsZSwgZm9yIGluc3RhbmNlLCBpbiB0aGUgZm9yZWNvdXJ0LCBhIHBsYXRmb3JtIGluIHRoZSBoYWxsIGFuZCBzbyBvbiB3aXRoIHRoZQpyZXN0LCBhbmQgdGhlbiwgd2hlbiB0aGV5IHJldHJhY2UgdGhlaXIgc3RlcHMsIHRoZXkKZmluZCB0aGUgb2JqZWN0cyB3aGVyZSB0aGV5IGhhZCBwbGFjZWQgdGhlbS48bWlsZXN0b25lIG49IjI0IiB1bml0PSJzZWN0aW9uIiAvPiBTdWNoCmEgcHJhY3RpY2UgbWF5IHBlcmhhcHMgaGF2ZSBiZWVuIG9mIHVzZSB0byB0aG9zZQp3aG8sIGFmdGVyIGFuIGF1Y3Rpb24sIGhhdmUgc3VjY2VlZGVkIGluIHN0YXRpbmcKd2hhdCBvYmplY3QgdGhleSBoYWQgc29sZCB0byBlYWNoIGJ1eWVyLCB0aGVpciBzdGF0ZW1lbnRzIGJlaW5nIGNoZWNrZWQgYnkgdGhlIGJvb2tzIG9mIHRoZSBtb25leSB0YWtlcnM7IGEgZmVhdCB3aGljaCBpdCBpcyBhbGxlZ2VkIHdhcyBwZXJmb3JtZWQgYnkKSG9ydGVuc2l1cy4gSXQgd2lsbCwgaG93ZXZlciwgYmUgb2YgbGVzcyBzZXJ2aWNlIGluCmxlYXJuaW5nIHRoZSB2YXJpb3VzIHBhcnRzIG9mIGEgc2V0IHNwZWVjaC4gRm9yCnRob3VnaHRzIGRvIG5vdCBjYWxsIHVwIHRoZSBzYW1lIGltYWdlcyBhcyBtYXRlcmlhbAp0aGluZ3MsIGFuZCBhIHN5bWJvbCByZXF1aXJlcyB0byBiZSBzcGVjaWFsbHkgaW52ZW50ZWQKZm9yIHRoZW0sIGFsdGhvdWdoIGV2ZW4gaGVyZSBhIHBhcnRpY3VsYXIgcGxhY2UgbWF5CnNlcnZlIHRvIHJlbWluZCB1cywgYXMsIGZvciBleGFtcGxlLCBvZiBzb21lIGNvbnZlcnNhdGlvbiB0aGF0IG1heSBoYXZlIGJlZW4gaGVsZCB0aGVyZS4gQnV0IGhvdwpjYW4gc3VjaCBhIG1ldGhvZCBncmFzcCBhIHdob2xlIHNlcmllcyBvZiBjb25uZWN0ZWQgd29yZHM/PG1pbGVzdG9uZSBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz4gSSBwYXNzIGJ5IHRoZSBmYWN0IHRoYXQgdGhlcmUgYXJlCmNlcnRhaW4gdGhpbmdzIHdoaWNoIGl0IGlzIGltcG9zc2libGUgdG8gcmVwcmVzZW50IGJ5Cgo8cGIgaWQ9InAuMjI3IiAvPgoKc3ltYm9scywgYXMsIGZvciBleGFtcGxlLCBjb25qdW5jdGlvbnMuIFdlIG1heSwgaXQKaXMgdHJ1ZSwgbGlrZSBzaG9ydGhhbmQgd3JpdGVycywgaGF2ZSBkZWZpbml0ZSBzeW1ib2xzCmZvciBldmVyeXRoaW5nLCBhbmQgbWF5IHNlbGVjdCBhbiBpbmZpbml0ZSBudW1iZXIKb2YgcGxhY2VzIHRvIHJlY2FsbCBhbGwgdGhlIHdvcmRzIGNvbnRhaW5lZCBpbiB0aGUKZml2ZSBib29rcyBvZiB0aGUgc2Vjb25kIHBsZWFkaW5nIGFnYWluc3QgVmVycmVzLAphbmQgd2UgbWF5IGV2ZW4gcmVtZW1iZXIgdGhlbSBhbGwgYXMgaWYgdGhleQp3ZXJlIGRlcG9zaXRzIHBsYWNlZCBpbiBzYWZlLWtlZXBpbmcuIEJ1dCB3aWxsIG5vdAp0aGUgZmxvdyBvZiBvdXIgc3BlZWNoIGluZXZpdGFibHkgYmUgaW1wZWRlZCBieSB0aGUKZG91YmxlIHRhc2sgaW1wb3NlZCB1cG9uIG91ciBtZW1vcnk/PG1pbGVzdG9uZSBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGhvdwpjYW4gb3VyIHdvcmRzIGJlIGV4cGVjdGVkIHRvIGZsb3cgaW4gY29ubmVjdGVkCnNwZWVjaCwgaWYgd2UgaGF2ZSB0byBsb29rIGJhY2sgYXQgc2VwYXJhdGUgc3ltYm9scwpmb3IgZWFjaCBpbmRpdmlkdWFsIHdvcmQ/IFRoZXJlZm9yZSB0aGUgZXhwZXJ0cwptZW50aW9uZWQgYnkgQ2ljZXJvPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gSUkuIGx4eHh2aWkuIDM2MC4gQ2hhcm1hZGFzIG9yIENoYXJtaWRlcywgYW4KZWxkZXIgY29udGVtcG9yYXJ5IG9mIENpY2Vyby48L25vdGU+IGFzIGhhdmluZyB0cmFpbmVkIHRoZWlyCm1lbW9yeSBieSBtZXRob2RzIG9mIHRoaXMga2luZCwgbmFtZWx5IENoYXJtYWRhcywgYW5kIE1ldHJvZG9ydXMgb2YgU2NlcHNpcywgdG8gd2hvbSBJIGhhdmUKanVzdCByZWZlcnJlZCwgbWF5IGtlZXAgdGhlaXIgc3lzdGVtcyBmb3IgdGhlaXIgb3duCnVzZS4gTXkgcHJlY2VwdHMgb24gdGhlIHN1YmplY3Qgc2hhbGwgYmUgb2YgYQpzaW1wbGVyIGtpbmQuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5JIGFtIGZhciBmcm9tIGRlbnlpbmcgdGhhdCB0aG9zZSBkZXZpY2VzIG1heSBiZQp1c2VmdWwgZm9yIGNlcnRhaW4gcHVycG9zZXMsIGFzLCBmb3IgZXhhbXBsZSwgaWYgd2UKaGF2ZSB0byByZXByb2R1Y2UgYSBudW1iZXIgb2YgbmFtZXMgaW4gdGhlIG9yZGVyCmluIHdoaWNoIHdlIGhlYXJkIHRoZW0uIEZvciB0aG9zZSB3aG8gdXNlIHN1Y2gKYWlkcyBwbGFjZSB0aGUgdGhpbmdzIHdoaWNoIGhhdmUgdG8gYmUgcmVtZW1iZXJlZAppbiBsb2NhbGl0aWVzIHdoaWNoIHRoZXkgaGF2ZSBwcmV2aW91c2x5IGZpeGVkIGluIHRoZQptZW1vcnk7IHRoZXkgcHV0IGEgdGFibGUsIGZvciBpbnN0YW5jZSwgaW4gdGhlIGZvcmVjb3VydCwgYSBwbGF0Zm9ybSBpbiB0aGUgaGFsbCBhbmQgc28gb24gd2l0aCB0aGUKcmVzdCwgYW5kIHRoZW4sIHdoZW4gdGhleSByZXRyYWNlIHRoZWlyIHN0ZXBzLCB0aGV5CmZpbmQgdGhlIG9iamVjdHMgd2hlcmUgdGhleSBoYWQgcGxhY2VkIHRoZW0uPC90cmFuc2xhdGlvbj4="
translation['11.6.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz4gU3VjaAphIHByYWN0aWNlIG1heSBwZXJoYXBzIGhhdmUgYmVlbiBvZiB1c2UgdG8gdGhvc2UKd2hvLCBhZnRlciBhbiBhdWN0aW9uLCBoYXZlIHN1Y2NlZWRlZCBpbiBzdGF0aW5nCndoYXQgb2JqZWN0IHRoZXkgaGFkIHNvbGQgdG8gZWFjaCBidXllciwgdGhlaXIgc3RhdGVtZW50cyBiZWluZyBjaGVja2VkIGJ5IHRoZSBib29rcyBvZiB0aGUgbW9uZXkgdGFrZXJzOyBhIGZlYXQgd2hpY2ggaXQgaXMgYWxsZWdlZCB3YXMgcGVyZm9ybWVkIGJ5CkhvcnRlbnNpdXMuIEl0IHdpbGwsIGhvd2V2ZXIsIGJlIG9mIGxlc3Mgc2VydmljZSBpbgpsZWFybmluZyB0aGUgdmFyaW91cyBwYXJ0cyBvZiBhIHNldCBzcGVlY2guIEZvcgp0aG91Z2h0cyBkbyBub3QgY2FsbCB1cCB0aGUgc2FtZSBpbWFnZXMgYXMgbWF0ZXJpYWwKdGhpbmdzLCBhbmQgYSBzeW1ib2wgcmVxdWlyZXMgdG8gYmUgc3BlY2lhbGx5IGludmVudGVkCmZvciB0aGVtLCBhbHRob3VnaCBldmVuIGhlcmUgYSBwYXJ0aWN1bGFyIHBsYWNlIG1heQpzZXJ2ZSB0byByZW1pbmQgdXMsIGFzLCBmb3IgZXhhbXBsZSwgb2Ygc29tZSBjb252ZXJzYXRpb24gdGhhdCBtYXkgaGF2ZSBiZWVuIGhlbGQgdGhlcmUuIEJ1dCBob3cKY2FuIHN1Y2ggYSBtZXRob2QgZ3Jhc3AgYSB3aG9sZSBzZXJpZXMgb2YgY29ubmVjdGVkIHdvcmRzPzwvdHJhbnNsYXRpb24+"
translation['11.6.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz4gSSBwYXNzIGJ5IHRoZSBmYWN0IHRoYXQgdGhlcmUgYXJlCmNlcnRhaW4gdGhpbmdzIHdoaWNoIGl0IGlzIGltcG9zc2libGUgdG8gcmVwcmVzZW50IGJ5Cgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yMjciIC8+CgpzeW1ib2xzLCBhcywgZm9yIGV4YW1wbGUsIGNvbmp1bmN0aW9ucy4gV2UgbWF5LCBpdAppcyB0cnVlLCBsaWtlIHNob3J0aGFuZCB3cml0ZXJzLCBoYXZlIGRlZmluaXRlIHN5bWJvbHMKZm9yIGV2ZXJ5dGhpbmcsIGFuZCBtYXkgc2VsZWN0IGFuIGluZmluaXRlIG51bWJlcgpvZiBwbGFjZXMgdG8gcmVjYWxsIGFsbCB0aGUgd29yZHMgY29udGFpbmVkIGluIHRoZQpmaXZlIGJvb2tzIG9mIHRoZSBzZWNvbmQgcGxlYWRpbmcgYWdhaW5zdCBWZXJyZXMsCmFuZCB3ZSBtYXkgZXZlbiByZW1lbWJlciB0aGVtIGFsbCBhcyBpZiB0aGV5CndlcmUgZGVwb3NpdHMgcGxhY2VkIGluIHNhZmUta2VlcGluZy4gQnV0IHdpbGwgbm90CnRoZSBmbG93IG9mIG91ciBzcGVlY2ggaW5ldml0YWJseSBiZSBpbXBlZGVkIGJ5IHRoZQpkb3VibGUgdGFzayBpbXBvc2VkIHVwb24gb3VyIG1lbW9yeT88L3RyYW5zbGF0aW9uPg=="
translation['11.6.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGhvdwpjYW4gb3VyIHdvcmRzIGJlIGV4cGVjdGVkIHRvIGZsb3cgaW4gY29ubmVjdGVkCnNwZWVjaCwgaWYgd2UgaGF2ZSB0byBsb29rIGJhY2sgYXQgc2VwYXJhdGUgc3ltYm9scwpmb3IgZWFjaCBpbmRpdmlkdWFsIHdvcmQ/IFRoZXJlZm9yZSB0aGUgZXhwZXJ0cwptZW50aW9uZWQgYnkgQ2ljZXJvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIE9yLjwvaGk+IElJLiBseHh4dmlpLiAzNjAuIENoYXJtYWRhcyBvciBDaGFybWlkZXMsIGFuCmVsZGVyIGNvbnRlbXBvcmFyeSBvZiBDaWNlcm8uPC9ub3RlPiBhcyBoYXZpbmcgdHJhaW5lZCB0aGVpcgptZW1vcnkgYnkgbWV0aG9kcyBvZiB0aGlzIGtpbmQsIG5hbWVseSBDaGFybWFkYXMsIGFuZCBNZXRyb2RvcnVzIG9mIFNjZXBzaXMsIHRvIHdob20gSSBoYXZlCmp1c3QgcmVmZXJyZWQsIG1heSBrZWVwIHRoZWlyIHN5c3RlbXMgZm9yIHRoZWlyIG93bgp1c2UuIE15IHByZWNlcHRzIG9uIHRoZSBzdWJqZWN0IHNoYWxsIGJlIG9mIGEKc2ltcGxlciBraW5kLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIE9yLjwvaGk+IElJLiBseHh4dmlpLiAzNjAuIENoYXJtYWRhcyBvciBDaGFybWlkZXMsIGFuCmVsZGVyIGNvbnRlbXBvcmFyeSBvZiBDaWNlcm8uPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjciIHVuaXQ9InNlY3Rpb24iIC8+SWYgYSBzcGVlY2ggb2Ygc29tZSBsZW5ndGggaGFzIHRvIGJlIGNvbW1pdHRlZAp0byBtZW1vcnksIGl0IHdpbGwgYmUgd2VsbCB0byBsZWFybiBpdCBwaWVjZW1lYWwsCnNpbmNlIHRoZXJlIGlzIG5vdGhpbmcgc28gYmFkIGZvciB0aGUgbWVtb3J5IGFzIGJlaW5nCm92ZXJidXJkZW5lZC4gQnV0IHRoZSBzZWN0aW9ucyBpbnRvIHdoaWNoIHdlIGRpdmlkZQppdCBmb3IgdGhpcyBwdXJwb3NlIHNob3VsZCBub3QgYmUgdmVyeSBzaG9ydDogb3RoZXJ3aXNlCnRoZXkgd2lsbCBiZSB0b28gbWFueSBpbiBudW1iZXIsIGFuZCB3aWxsIGJyZWFrIHVwCmFuZCBkaXN0cmFjdCB0aGUgbWVtb3J5LiBJIGFtIG5vdCwgaG93ZXZlciwgcHJlcGFyZWQgdG8gcmVjb21tZW5kIGFueSBkZWZpbml0ZSBsZW5ndGg7IGl0IHdpbGwgZGVwZW5kIG9uIHRoZSBuYXR1cmFsIGxpbWl0cyBvZiB0aGUgcGFzc2FnZSBjb25jZXJuZWQsCnVubGVzcywgaW5kZWVkLCBpdCBiZSBzbyBsb25nIGFzIGl0c2VsZiB0byByZXF1aXJlIHN1YmRpdmlzaW9uLjxtaWxlc3RvbmUgbj0iMjgiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCBzb21lIGxpbWl0cyBtdXN0IGJlIGZpeGVkIHRvIGVuYWJsZSB1cywKYnkgZGludCBvZiBmcmVxdWVudCBhbmQgY29udGludW91cyBwcmFjdGljZSwgdG8gY29ubmVjdAp0aGUgd29yZHMgaW4gdGhlaXIgcHJvcGVyIG9yZGVyLCB3aGljaCBpcyBhIHRhc2sgb2Ygbm8Kc21hbGwgZGlmZmljdWx0eSwgYW5kIHN1YnNlcXVlbnRseSB0byB1bml0ZSB0aGUgdmFyaW91cwpzZWN0aW9ucyBpbnRvIGEgd2hvbGUgd2hlbiB3ZSBnbyBvdmVyIHRoZW0gaW4Kb3JkZXIuIElmIGNlcnRhaW4gcG9ydGlvbnMgcHJvdmUgZXNwZWNpYWxseSBkaWZmaWN1bHQgdG8KCjxwYiBpZD0icC4yMjkiIC8+CgpyZW1lbWJlciwgaXQgd2lsbCBiZSBmb3VuZCBhZHZhbnRhZ2VvdXMgdG8gaW5kaWNhdGUKdGhlbSBieSBjZXJ0YWluIG1hcmtzLCB0aGUgcmVtZW1icmFuY2Ugb2Ygd2hpY2gKd2lsbCByZWZyZXNoIGFuZCBzdGltdWxhdGUgdGhlIG1lbW9yeS48bWlsZXN0b25lIG49IjI5IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgdGhlcmUgY2FuCmJlIGJ1dCBmZXcgd2hvc2UgbWVtb3J5IGlzIHNvIGJhcnJlbiB0aGF0IHRoZXkgd2lsbApmYWlsIHRvIHJlY29nbmlzZSB0aGUgc3ltYm9scyB3aXRoIHdoaWNoIHRoZXkgaGF2ZQptYXJrZWQgZGlmZmVyZW50IHBhc3NhZ2VzLiBCdXQgaWYgYW55b25lIGlzIHNsb3cgdG8KcmVjb2duaXNlIGhpcyBvd24gc2lnbnMsIGhlIHNob3VsZCBlbXBsb3kgdGhlIGZvbGxvd2luZyBhZGRpdGlvbmFsIHJlbWVkeSwgd2hpY2gsIHRob3VnaCBkcmF3biBmcm9tIHRoZQptbmVtb25pYyBzeXN0ZW0gZGlzY3Vzc2VkIGFib3ZlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VjdHMuIDE44oCTMjMuPC9ub3RlPiBpcyBub3Qgd2l0aG91dCBpdHMKdXNlczogaGUgd2lsbCBhZGFwdCBoaXMgc3ltYm9scyB0byB0aGUgbmF0dXJlIG9mIHRoZQp0aG91Z2h0cyB3aGljaCB0ZW5kIHRvIHNsaXAgZnJvbSBoaXMgbWVtb3J5LCB1c2luZwphbiBhbmNob3IsIGFzIEkgc3VnZ2VzdGVkIGFib3ZlLCBpZiBoZSBoYXMgdG8gc3BlYWsKb2YgYSBzaGlwLCBvciBhIHNwZWFyLCBpZiBoZSBoYXMgdG8gc3BlYWsgb2YgYSBiYXR0bGUuCjxtaWxlc3RvbmUgbj0iMzAiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIHN5bWJvbHMgYXJlIGhpZ2hseSBlZmZpY2FjaW91cywgYW5kIG9uZSBpZGVhCnN1Z2dlc3RzIGFub3RoZXI6IGZvciBleGFtcGxlLCBpZiB3ZSBjaGFuZ2UgYSByaW5nCmZyb20gb25lIGZpbmdlciB0byBhbm90aGVyIG9yIHRpZSBhIHRocmVhZCByb3VuZCBpdCwKaXQgd2lsbCBzZXJ2ZSB0byByZW1pbmQgdXMgb2Ygb3VyIHJlYXNvbiBmb3Igc28gZG9pbmcuClNwZWNpYWxseSBlZmZlY3RpdmUgYXJlIHRob3NlIGRldmljZXMgd2hpY2ggbGVhZCB0aGUKbWVtb3J5IGZyb20gb25lIHRoaW5nIHRvIGFub3RoZXIgc2ltaWxhciB0aGluZyB3aGljaAp3ZSBoYXZlIGdvdCB0byByZW1lbWJlcjsgZm9yIGV4YW1wbGUsIGluIHRoZSBjYXNlIG9mCm5hbWVzLCBpZiB3ZSBkZXNpcmUgdG8gcmVtZW1iZXIgdGhlIG5hbWUgRmFiaXVzLAp3ZSBzaG91bGQgdGhpbmsgb2YgdGhlIGZhbW91cyBDdW5jdGF0b3IsIHdob20gd2UKYXJlIGNlcnRhaW4gbm90IHRvIGZvcmdldCwgb3Igb2Ygc29tZSBmcmllbmQgYmVhcmluZwp0aGUgc2FtZSBuYW1lLjxtaWxlc3RvbmUgbj0iMzEiIHVuaXQ9InNlY3Rpb24iIC8+IFRoaXMgaXMgc3BlY2lhbGx5IGVhc3kgd2l0aCBuYW1lcwpzdWNoIGFzIEFwZXIsIFVyc3VzLCBOYXNvLCBvciBDcmlzcHVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+Qm9hciwgQmVhciwgTG9uZy1ub3NlLCBhbmQgQ3VybHkgcmVzcGVjdGl2ZWx5Ljwvbm90ZT4gc2luY2UgaW4KdGhlc2UgY2FzZXMgd2UgY2FuIGZpeCB0aGVpciBvcmlnaW4gaW4gb3VyIG1lbW9yeS4KT3JpZ2luIGFnYWluIG1heSBhc3Npc3QgdXMgdG8gYSBiZXR0ZXIgcmVtZW1icmFuY2Ugb2YgZGVyaXZhdGl2ZSBuYW1lcywgc3VjaCBhcyBDaWNlcm8sIFZlcnJpdXMsCm9yIEF1cmVsaXVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+Q2ljZXJvLCBhIHNvd2VyIG9mIGNoaWNrcGVhICg8aGkgcmVuZD0iaXRhbGljcyI+Y2ljZXI8L2hpPiksIGFjY29yZGluZyB0byBQbGlueQooeHZpaWkuIDEwKS4gQXVyZWxpdXMgPSBBdXNlbGl1cywgY2hpbGQgb2YgdGhlIHN1biAoPGhpIHJlbmQ9Iml0YWxpY3MiPmEgc29sZTwvaGk+77yJCmFjY29yZGluZyB0byBGZXN0dXMuIFZlcnJpdXMgdW5rbm93bi48L25vdGU+IEhvd2V2ZXIsIEkgd2lsbCBzYXkgbm8gbW9yZSBvbiB0aGlzCnBvaW50LjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.6.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5JZiBhIHNwZWVjaCBvZiBzb21lIGxlbmd0aCBoYXMgdG8gYmUgY29tbWl0dGVkCnRvIG1lbW9yeSwgaXQgd2lsbCBiZSB3ZWxsIHRvIGxlYXJuIGl0IHBpZWNlbWVhbCwKc2luY2UgdGhlcmUgaXMgbm90aGluZyBzbyBiYWQgZm9yIHRoZSBtZW1vcnkgYXMgYmVpbmcKb3ZlcmJ1cmRlbmVkLiBCdXQgdGhlIHNlY3Rpb25zIGludG8gd2hpY2ggd2UgZGl2aWRlCml0IGZvciB0aGlzIHB1cnBvc2Ugc2hvdWxkIG5vdCBiZSB2ZXJ5IHNob3J0OiBvdGhlcndpc2UKdGhleSB3aWxsIGJlIHRvbyBtYW55IGluIG51bWJlciwgYW5kIHdpbGwgYnJlYWsgdXAKYW5kIGRpc3RyYWN0IHRoZSBtZW1vcnkuIEkgYW0gbm90LCBob3dldmVyLCBwcmVwYXJlZCB0byByZWNvbW1lbmQgYW55IGRlZmluaXRlIGxlbmd0aDsgaXQgd2lsbCBkZXBlbmQgb24gdGhlIG5hdHVyYWwgbGltaXRzIG9mIHRoZSBwYXNzYWdlIGNvbmNlcm5lZCwKdW5sZXNzLCBpbmRlZWQsIGl0IGJlIHNvIGxvbmcgYXMgaXRzZWxmIHRvIHJlcXVpcmUgc3ViZGl2aXNpb24uPC90cmFuc2xhdGlvbj4="
translation['11.6.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHNvbWUgbGltaXRzIG11c3QgYmUgZml4ZWQgdG8gZW5hYmxlIHVzLApieSBkaW50IG9mIGZyZXF1ZW50IGFuZCBjb250aW51b3VzIHByYWN0aWNlLCB0byBjb25uZWN0CnRoZSB3b3JkcyBpbiB0aGVpciBwcm9wZXIgb3JkZXIsIHdoaWNoIGlzIGEgdGFzayBvZiBubwpzbWFsbCBkaWZmaWN1bHR5LCBhbmQgc3Vic2VxdWVudGx5IHRvIHVuaXRlIHRoZSB2YXJpb3VzCnNlY3Rpb25zIGludG8gYSB3aG9sZSB3aGVuIHdlIGdvIG92ZXIgdGhlbSBpbgpvcmRlci4gSWYgY2VydGFpbiBwb3J0aW9ucyBwcm92ZSBlc3BlY2lhbGx5IGRpZmZpY3VsdCB0bwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjI5IiAvPgoKcmVtZW1iZXIsIGl0IHdpbGwgYmUgZm91bmQgYWR2YW50YWdlb3VzIHRvIGluZGljYXRlCnRoZW0gYnkgY2VydGFpbiBtYXJrcywgdGhlIHJlbWVtYnJhbmNlIG9mIHdoaWNoCndpbGwgcmVmcmVzaCBhbmQgc3RpbXVsYXRlIHRoZSBtZW1vcnkuPC90cmFuc2xhdGlvbj4="
translation['11.6.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZXJlIGNhbgpiZSBidXQgZmV3IHdob3NlIG1lbW9yeSBpcyBzbyBiYXJyZW4gdGhhdCB0aGV5IHdpbGwKZmFpbCB0byByZWNvZ25pc2UgdGhlIHN5bWJvbHMgd2l0aCB3aGljaCB0aGV5IGhhdmUKbWFya2VkIGRpZmZlcmVudCBwYXNzYWdlcy4gQnV0IGlmIGFueW9uZSBpcyBzbG93IHRvCnJlY29nbmlzZSBoaXMgb3duIHNpZ25zLCBoZSBzaG91bGQgZW1wbG95IHRoZSBmb2xsb3dpbmcgYWRkaXRpb25hbCByZW1lZHksIHdoaWNoLCB0aG91Z2ggZHJhd24gZnJvbSB0aGUKbW5lbW9uaWMgc3lzdGVtIGRpc2N1c3NlZCBhYm92ZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VjdHMuIDE44oCTMjMuPC9ub3RlPiBpcyBub3Qgd2l0aG91dCBpdHMKdXNlczogaGUgd2lsbCBhZGFwdCBoaXMgc3ltYm9scyB0byB0aGUgbmF0dXJlIG9mIHRoZQp0aG91Z2h0cyB3aGljaCB0ZW5kIHRvIHNsaXAgZnJvbSBoaXMgbWVtb3J5LCB1c2luZwphbiBhbmNob3IsIGFzIEkgc3VnZ2VzdGVkIGFib3ZlLCBpZiBoZSBoYXMgdG8gc3BlYWsKb2YgYSBzaGlwLCBvciBhIHNwZWFyLCBpZiBoZSBoYXMgdG8gc3BlYWsgb2YgYSBiYXR0bGUuCjwvdHJhbnNsYXRpb24+"
translation['11.6.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igc3ltYm9scyBhcmUgaGlnaGx5IGVmZmljYWNpb3VzLCBhbmQgb25lIGlkZWEKc3VnZ2VzdHMgYW5vdGhlcjogZm9yIGV4YW1wbGUsIGlmIHdlIGNoYW5nZSBhIHJpbmcKZnJvbSBvbmUgZmluZ2VyIHRvIGFub3RoZXIgb3IgdGllIGEgdGhyZWFkIHJvdW5kIGl0LAppdCB3aWxsIHNlcnZlIHRvIHJlbWluZCB1cyBvZiBvdXIgcmVhc29uIGZvciBzbyBkb2luZy4KU3BlY2lhbGx5IGVmZmVjdGl2ZSBhcmUgdGhvc2UgZGV2aWNlcyB3aGljaCBsZWFkIHRoZQptZW1vcnkgZnJvbSBvbmUgdGhpbmcgdG8gYW5vdGhlciBzaW1pbGFyIHRoaW5nIHdoaWNoCndlIGhhdmUgZ290IHRvIHJlbWVtYmVyOyBmb3IgZXhhbXBsZSwgaW4gdGhlIGNhc2Ugb2YKbmFtZXMsIGlmIHdlIGRlc2lyZSB0byByZW1lbWJlciB0aGUgbmFtZSBGYWJpdXMsCndlIHNob3VsZCB0aGluayBvZiB0aGUgZmFtb3VzIEN1bmN0YXRvciwgd2hvbSB3ZQphcmUgY2VydGFpbiBub3QgdG8gZm9yZ2V0LCBvciBvZiBzb21lIGZyaWVuZCBiZWFyaW5nCnRoZSBzYW1lIG5hbWUuPC90cmFuc2xhdGlvbj4="
translation['11.6.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhpcyBpcyBzcGVjaWFsbHkgZWFzeSB3aXRoIG5hbWVzCnN1Y2ggYXMgQXBlciwgVXJzdXMsIE5hc28sIG9yIENyaXNwdXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkJvYXIsIEJlYXIsIExvbmctbm9zZSwgYW5kIEN1cmx5IHJlc3BlY3RpdmVseS48L25vdGU+IHNpbmNlIGluCnRoZXNlIGNhc2VzIHdlIGNhbiBmaXggdGhlaXIgb3JpZ2luIGluIG91ciBtZW1vcnkuCk9yaWdpbiBhZ2FpbiBtYXkgYXNzaXN0IHVzIHRvIGEgYmV0dGVyIHJlbWVtYnJhbmNlIG9mIGRlcml2YXRpdmUgbmFtZXMsIHN1Y2ggYXMgQ2ljZXJvLCBWZXJyaXVzLApvciBBdXJlbGl1cy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+Q2ljZXJvLCBhIHNvd2VyIG9mIGNoaWNrcGVhICg8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jaWNlcjwvaGk+KSwgYWNjb3JkaW5nIHRvIFBsaW55Cih4dmlpaS4gMTApLiBBdXJlbGl1cyA9IEF1c2VsaXVzLCBjaGlsZCBvZiB0aGUgc3VuICg8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5hIHNvbGU8L2hpPu+8iQphY2NvcmRpbmcgdG8gRmVzdHVzLiBWZXJyaXVzIHVua25vd24uPC9ub3RlPiBIb3dldmVyLCBJIHdpbGwgc2F5IG5vIG1vcmUgb24gdGhpcwpwb2ludC48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jaWNlcjwvaGk+KSwgYWNjb3JkaW5nIHRvIFBsaW55Cih4dmlpaS4gMTApLiBBdXJlbGl1cyA9IEF1c2VsaXVzLCBjaGlsZCBvZiB0aGUgc3VuICg8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5hIHNvbGU8L2hpPu+8iQphY2NvcmRpbmcgdG8gRmVzdHVzLiBWZXJyaXVzIHVua25vd24uPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzIiIHVuaXQ9InNlY3Rpb24iIC8+VGhlcmUgaXMgb25lIHRoaW5nIHdoaWNoIHdpbGwgYmUgb2YgYXNzaXN0YW5jZSB0bwpldmVyeW9uZSwgbmFtZWx5LCB0byBsZWFybiBhIHBhc3NhZ2UgYnkgaGVhcnQgZnJvbQp0aGUgc2FtZSB0YWJsZXRzIG9uIHdoaWNoIGhlIGhhcyBjb21taXR0ZWQgaXQgdG8Kd3JpdGluZy4gRm9yIGhlIHdpbGwgaGF2ZSBjZXJ0YWluIHRyYWNrcyB0byBndWlkZQoKPHBiIGlkPSJwLjIzMSIgLz4KCmhpbSBpbiBoaXMgcHVyc3VpdCBvZiBtZW1vcnksIGFuZCB0aGUgbWluZCdzIGV5ZQp3aWxsIGJlIGZpeGVkIG5vdCBtZXJlbHkgb24gdGhlIHBhZ2VzIG9uIHdoaWNoIHRoZQp3b3JkcyB3ZXJlIHdyaXR0ZW4sIGJ1dCBvbiBpbmRpdmlkdWFsIGxpbmVzLCBhbmQgYXQKdGltZXMgaGUgd2lsbCBzcGVhayBhcyB0aG91Z2ggaGUgd2VyZSByZWFkaW5nIGFsb3VkLgpGdXJ0aGVyLCBpZiB0aGUgd3JpdGluZyBzaG91bGQgYmUgaW50ZXJydXB0ZWQgYnkKc29tZSBlcmFzdXJlLCBhZGRpdGlvbiBvciBhbHRlcmF0aW9uLCB0aGVyZSBhcmUgY2VydGFpbgpzeW1ib2xzIGF2YWlsYWJsZSwgdGhlIHNpZ2h0IG9mIHdoaWNoIHdpbGwgcHJldmVudCB1cwpmcm9tIHdhbmRlcmluZyBmcm9tIHRoZSB0cmFjay48bWlsZXN0b25lIG49IjMzIiB1bml0PSJzZWN0aW9uIiAvPiBUaGlzIGRldmljZSBiZWFycwpzb21lIHJlc2VtYmxhbmNlIHRvIHRoZSBtbmVtb25pYyBzeXN0ZW0gd2hpY2gKSSBtZW50aW9uZWQgYWJvdmUsIGJ1dCBpZiBteSBleHBlcmllbmNlIGlzIHdvcnRoCmFueXRoaW5nLCBpcyBhdCBvbmNlIG1vcmUgZXhwZWRpdGlvdXMgYW5kIG1vcmUKZWZmZWN0aXZlLiBUaGUgcXVlc3Rpb24gaGFzIGJlZW4gcmFpc2VkIGFzIHRvCndoZXRoZXIgd2Ugc2hvdWxkIGxlYXJuIGJ5IGhlYXJ0IGluIHNpbGVuY2U7IGl0CndvdWxkIGJlIGJlc3QgdG8gZG8gc28sIHNhdmUgZm9yIHRoZSBmYWN0IHRoYXQgdW5kZXIKc3VjaCBjaXJjdW1zdGFuY2VzIHRoZSBtaW5kIGlzIGFwdCB0byBiZWNvbWUgaW5kb2xlbnQsIHdpdGggdGhlIHJlc3VsdCB0aGF0IG90aGVyIHRob3VnaHRzIGJyZWFrIGluLgpGb3IgdGhpcyByZWFzb24gdGhlIG1pbmQgc2hvdWxkIGJlIGtlcHQgYWxlcnQgYnkgdGhlCnNvdW5kIG9mIHRoZSB2b2ljZSwgc28gdGhhdCB0aGUgbWVtb3J5IG1heSBkZXJpdmUKYXNzaXN0YW5jZSBmcm9tIHRoZSBkb3VibGUgZWZmb3J0IG9mIHNwZWFraW5nIGFuZApsaXN0ZW5pbmcuIEJ1dCBvdXIgdm9pY2Ugc2hvdWxkIGJlIHN1YmR1ZWQsIHJpc2luZwpzY2FyY2VseSBhYm92ZSBhIG11cm11ci48bWlsZXN0b25lIG49IjM0IiB1bml0PSJzZWN0aW9uIiAvPiBPbiB0aGUgb3RoZXIgaGFuZCwgaWYgd2UKYXR0ZW1wdCB0byBsZWFybiBieSBoZWFydCBmcm9tIGFub3RoZXIgcmVhZGluZwphbG91ZCwgd2Ugc2hhbGwgZmluZCB0aGF0IHRoZXJlIGlzIGJvdGggbG9zcyBhbmQgZ2FpbjsKb24gdGhlIG9uZSBoYW5kLCB0aGUgcHJvY2VzcyBvZiBsZWFybmluZyB3aWxsIGJlCnNsb3dlciwgYmVjYXVzZSB0aGUgcGVyY2VwdGlvbiBvZiB0aGUgZXllIGlzIHF1aWNrZXIKdGhhbiB0aGF0IG9mIHRoZSBlYXIsIHdoaWxlLCBvbiB0aGUgb3RoZXIgaGFuZCwgd2hlbgp3ZSBoYXZlIGhlYXJkIGEgcGFzc2FnZSBvbmNlIG9yIHR3aWNlLCB3ZSBzaGFsbCBiZQppbiBhIHBvc2l0aW9uIHRvIHRlc3Qgb3VyIG1lbW9yeSBhbmQgbWF0Y2ggaXQgYWdhaW5zdAp0aGUgdm9pY2Ugb2YgdGhlIHJlYWRlci4gSXQgaXMsIGluZGVlZCwgaW1wb3J0YW50IGZvcgpvdGhlciByZWFzb25zIHRvIHRlc3Qgb3Vyc2VsdmVzIHRodXMgZnJvbSB0aW1lIHRvIHRpbWUsCnNpbmNlIGNvbnRpbnVvdXMgcmVhZGluZyBoYXMgdGhpcyBkcmF3YmFjaywgdGhhdCBpdApwYXNzZXMgb3ZlciB0aGUgcGFzc2FnZXMgd2hpY2ggd2UgZmluZCBoYXJkIHRvIHJlbWVtYmVyIGF0IHRoZSBzYW1lIHNwZWVkIGFzIHRob3NlIHdoaWNoIHdlIGZpbmQgbGVzcwpkaWZmaWN1bHR5IGluIHJldGFpbmluZy48bWlsZXN0b25lIG49IjM1IiB1bml0PSJzZWN0aW9uIiAvPiBCeSB0ZXN0aW5nIG91cnNlbHZlcyB0byBzZWUKCjxwYiBpZD0icC4yMzMiIC8+Cgp3aGV0aGVyIHdlIHJlbWVtYmVyIGEgcGFzc2FnZSwgd2UgZGV2ZWxvcCBncmVhdGVyCmNvbmNlbnRyYXRpb24gd2l0aG91dCB3YXN0ZSBvZiB0aW1lIG92ZXIgdGhlIHJlcGV0aXRpb24gb2YgcGFzc2FnZXMgd2hpY2ggd2UgYWxyZWFkeSBrbm93IGJ5IGhlYXJ0LgpUaHVzLCBvbmx5IHRob3NlIHBhc3NhZ2VzIHdoaWNoIHRlbmQgdG8gc2xpcCBmcm9tCnRoZSBtZW1vcnkgYXJlIHJlcGVhdGVkIHdpdGggYSB2aWV3IHRvIGZpeGluZyB0aGVtCmluIHRoZSBtaW5kIGJ5IGZyZXF1ZW50IHJlaGVhcnNhbCwgYWx0aG91Z2ggYXMgYSBydWxlCnRoZSBtZXJlIGZhY3QgdGhhdCB0aGV5IG9uY2Ugc2xpcHBlZCBvdXIgbWVtb3J5Cm1ha2VzIHVzIHVsdGltYXRlbHkgcmVtZW1iZXIgdGhlbSB3aXRoIHNwZWNpYWwKYWNjdXJhY3kuIEJvdGggbGVhcm5pbmcgYnkgaGVhcnQgYW5kIHdyaXRpbmcgaGF2ZQp0aGlzIGZlYXR1cmUgaW4gY29tbW9uOiBuYW1lbHksIHRoYXQgZ29vZCBoZWFsdGgsCnNvdW5kIGRpZ2VzdGlvbiwgYW5kIGZyZWVkb20gZnJvbSBvdGhlciBwcmVvY2N1cGF0aW9ucyBvZiBtaW5kIGNvbnRyaWJ1dGUgbGFyZ2VseSB0byB0aGUgc3VjY2VzcyBvZgpib3RoLjxtaWxlc3RvbmUgbj0iMzYiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCBmb3IgdGhlIHB1cnBvc2Ugb2YgZ2V0dGluZyBhIHJlYWwgZ3Jhc3AKb2Ygd2hhdCB3ZSBoYXZlIHdyaXR0ZW4gdW5kZXIgdGhlIHZhcmlvdXMgaGVhZHMsCmRpdmlzaW9uIGFuZCBhcnRpc3RpYyBzdHJ1Y3R1cmUgd2lsbCBiZSBmb3VuZCBvZiBncmVhdAp2YWx1ZSwgd2hpbGUsIHdpdGggdGhlIGV4Y2VwdGlvbiBvZiBwcmFjdGljZSwgd2hpY2gKaXMgdGhlIG1vc3QgcG93ZXJmdWwgYWlkIG9mIGFsbCwgdGhleSBhcmUgcHJhY3RpY2FsbHkKdGhlIG9ubHkgbWVhbnMgb2YgZW5zdXJpbmcgYW4gYWNjdXJhdGUgcmVtZW1icmFuY2UKb2Ygd2hhdCB3ZSBoYXZlIG1lcmVseSB0aG91Z2h0IG91dC4gRm9yIGNvcnJlY3QKZGl2aXNpb24gd2lsbCBiZSBhbiBhYnNvbHV0ZSBzYWZlZ3VhcmQgYWdhaW5zdCBlcnJvciBpbgp0aGUgb3JkZXIgb2Ygb3VyIHNwZWVjaCw8bWlsZXN0b25lIG49IjM3IiB1bml0PSJzZWN0aW9uIiAvPiBzaW5jZSB0aGVyZSBhcmUgY2VydGFpbiBwb2ludHMKbm90IG1lcmVseSBpbiB0aGUgZGlzdHJpYnV0aW9uIG9mIHRoZSB2YXJpb3VzIHF1ZXN0aW9ucwppbiBvdXIgc3BlZWNoLCBidXQgYWxzbyBpbiB0aGVpciBkZXZlbG9wbWVudCAocHJvdmlkZWQgd2Ugc3BlYWsgYXMgd2Ugb3VnaHQpLCB3aGljaCBuYXR1cmFsbHkgY29tZQpmaXJzdCwgc2Vjb25kLCBhbmQgdGhpcmQsIGFuZCBzbyBvbiwgd2hpbGUgdGhlIGNvbm5leGlvbgp3aWxsIGJlIHNvIHBlcmZlY3QgdGhhdCBub3RoaW5nIGNhbiBiZSBvbWl0dGVkIG9yCmluc2VydGVkIHdpdGhvdXQgdGhlIGZhY3Qgb2YgdGhlIG9taXNzaW9uIG9yIGluc2VydGlvbiBiZWluZyBvYnZpb3VzLjxtaWxlc3RvbmUgbj0iMzgiIHVuaXQ9InNlY3Rpb24iIC8+IFdlIGFyZSB0b2xkIHRoYXQgU2NhZXZvbGEsCmFmdGVyIGEgZ2FtZSBvZiBkcmF1Z2h0cyBpbiB3aGljaCBoZSBtYWRlIHRoZSBmaXJzdAptb3ZlIGFuZCB3YXMgZGVmZWF0ZWQsIHdlbnQgb3ZlciB0aGUgd2hvbGUgZ2FtZQphZ2FpbiBpbiBoaXMgbWluZCBvbiBoaXMgd2F5IGludG8gdGhlIGNvdW50cnksIGFuZApvbiByZWNhbGxpbmcgdGhlIG1vdmUgd2hpY2ggaGFkIGNvc3QgaGltIHRoZSBnYW1lLApyZXR1cm5lZCB0byB0ZWxsIHRoZSBtYW4gd2l0aCB3aG9tIGhlIGhhZCBiZWVuCnBsYXlpbmcsIGFuZCB0aGUgbGF0dGVyIGFja25vd2xlZGdlZCB0aGF0IGhlIHdhcwoKPHBiIGlkPSJwLjIzNSIgLz4KCnJpZ2h0LiBJcyBvcmRlciwgdGhlbiwgSSBhc2sgeW91LCB0byBiZSBhY2NvdW50ZWQgb2YKbGVzcyBpbXBvcnRhbmNlIGluIGEgc3BlZWNoLCBpbiB3aGljaCBpdCBkZXBlbmRzCmVudGlyZWx5IG9uIG91cnNlbHZlcywgd2hlcmVhcyBpbiBhIGdhbWUgb3VyIG9wcG9uZW50CmhhcyBhbiBlcXVhbCBzaGFyZSBpbiBpdHMgZGV2ZWxvcG1lbnQ/PG1pbGVzdG9uZSBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIGlmCm91ciBzdHJ1Y3R1cmUgYmUgd2hhdCBpdCBzaG91bGQsIHRoZSBhcnRpc3RpYyBzZXF1ZW5jZSB3aWxsIHNlcnZlIHRvIGd1aWRlIHRoZSBtZW1vcnkuIEZvciBqdXN0CmFzIGl0IGlzIGVhc2llciB0byBsZWFybiB2ZXJzZSB0aGFuIHByb3NlLCBzbyBpdCBpcwplYXNpZXIgdG8gbGVhcm4gcHJvc2Ugd2hlbiBpdCBpcyBhcnRpc3RpY2FsbHkgY29uc3RydWN0ZWQgdGhhbiB3aGVuIGl0IGhhcyBubyBzdWNoIG9yZ2FuaXNhdGlvbi4gSWYKdGhlc2UgcG9pbnRzIHJlY2VpdmUgYXR0ZW50aW9uLCBpdCB3aWxsIGJlIHBvc3NpYmxlIHRvCnJlcGVhdCA8aGkgcmVuZD0iaXRhbGljcyI+dmVyYmF0aW08L2hpPiBldmVuIHN1Y2ggcHNzc2FnZXMgYXMgZ2F2ZSB0aGUgaW1wcmVzc2lvbiBvZiBiZWluZyBkZWxpdmVyZWQgZXh0ZW1wb3JlLiBNeSBvd24KbWVtb3J5IGlzIG9mIGEgdmVyeSBvcmRpbmFyeSBraW5kLCBidXQgSSBmb3VuZCB0aGF0CkkgY291bGQgZG8gdGhpcyB3aXRoIHN1Y2Nlc3Mgb24gb2NjYXNpb25zIHdoZW4gdGhlCmludGVycnVwdGlvbiBvZiBhIGRlY2xhbWF0aW9uIGJ5IHBlcnNvbnMgd2hvIGhhZCBhCmNsYWltIHRvIHN1Y2ggYSBjb3VydGVzeSBmb3JjZWQgbWUgdG8gcmVwZWF0IHBhcnQgb2YKd2hhdCBJIGhhZCBzYWlkLiBUaGVyZSBhcmUgcGVyc29ucyBzdGlsbCBsaXZpbmcsIHdobwp3ZXJlIHRoZW4gcHJlc2VudCB0byB3aXRuZXNzIGlmIEkgbGllLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.6.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBpcyBvbmUgdGhpbmcgd2hpY2ggd2lsbCBiZSBvZiBhc3Npc3RhbmNlIHRvCmV2ZXJ5b25lLCBuYW1lbHksIHRvIGxlYXJuIGEgcGFzc2FnZSBieSBoZWFydCBmcm9tCnRoZSBzYW1lIHRhYmxldHMgb24gd2hpY2ggaGUgaGFzIGNvbW1pdHRlZCBpdCB0bwp3cml0aW5nLiBGb3IgaGUgd2lsbCBoYXZlIGNlcnRhaW4gdHJhY2tzIHRvIGd1aWRlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yMzEiIC8+CgpoaW0gaW4gaGlzIHB1cnN1aXQgb2YgbWVtb3J5LCBhbmQgdGhlIG1pbmQncyBleWUKd2lsbCBiZSBmaXhlZCBub3QgbWVyZWx5IG9uIHRoZSBwYWdlcyBvbiB3aGljaCB0aGUKd29yZHMgd2VyZSB3cml0dGVuLCBidXQgb24gaW5kaXZpZHVhbCBsaW5lcywgYW5kIGF0CnRpbWVzIGhlIHdpbGwgc3BlYWsgYXMgdGhvdWdoIGhlIHdlcmUgcmVhZGluZyBhbG91ZC4KRnVydGhlciwgaWYgdGhlIHdyaXRpbmcgc2hvdWxkIGJlIGludGVycnVwdGVkIGJ5CnNvbWUgZXJhc3VyZSwgYWRkaXRpb24gb3IgYWx0ZXJhdGlvbiwgdGhlcmUgYXJlIGNlcnRhaW4Kc3ltYm9scyBhdmFpbGFibGUsIHRoZSBzaWdodCBvZiB3aGljaCB3aWxsIHByZXZlbnQgdXMKZnJvbSB3YW5kZXJpbmcgZnJvbSB0aGUgdHJhY2suPC90cmFuc2xhdGlvbj4="
translation['11.6.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz4gVGhpcyBkZXZpY2UgYmVhcnMKc29tZSByZXNlbWJsYW5jZSB0byB0aGUgbW5lbW9uaWMgc3lzdGVtIHdoaWNoCkkgbWVudGlvbmVkIGFib3ZlLCBidXQgaWYgbXkgZXhwZXJpZW5jZSBpcyB3b3J0aAphbnl0aGluZywgaXMgYXQgb25jZSBtb3JlIGV4cGVkaXRpb3VzIGFuZCBtb3JlCmVmZmVjdGl2ZS4gVGhlIHF1ZXN0aW9uIGhhcyBiZWVuIHJhaXNlZCBhcyB0bwp3aGV0aGVyIHdlIHNob3VsZCBsZWFybiBieSBoZWFydCBpbiBzaWxlbmNlOyBpdAp3b3VsZCBiZSBiZXN0IHRvIGRvIHNvLCBzYXZlIGZvciB0aGUgZmFjdCB0aGF0IHVuZGVyCnN1Y2ggY2lyY3Vtc3RhbmNlcyB0aGUgbWluZCBpcyBhcHQgdG8gYmVjb21lIGluZG9sZW50LCB3aXRoIHRoZSByZXN1bHQgdGhhdCBvdGhlciB0aG91Z2h0cyBicmVhayBpbi4KRm9yIHRoaXMgcmVhc29uIHRoZSBtaW5kIHNob3VsZCBiZSBrZXB0IGFsZXJ0IGJ5IHRoZQpzb3VuZCBvZiB0aGUgdm9pY2UsIHNvIHRoYXQgdGhlIG1lbW9yeSBtYXkgZGVyaXZlCmFzc2lzdGFuY2UgZnJvbSB0aGUgZG91YmxlIGVmZm9ydCBvZiBzcGVha2luZyBhbmQKbGlzdGVuaW5nLiBCdXQgb3VyIHZvaWNlIHNob3VsZCBiZSBzdWJkdWVkLCByaXNpbmcKc2NhcmNlbHkgYWJvdmUgYSBtdXJtdXIuPC90cmFuc2xhdGlvbj4="
translation['11.6.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz4gT24gdGhlIG90aGVyIGhhbmQsIGlmIHdlCmF0dGVtcHQgdG8gbGVhcm4gYnkgaGVhcnQgZnJvbSBhbm90aGVyIHJlYWRpbmcKYWxvdWQsIHdlIHNoYWxsIGZpbmQgdGhhdCB0aGVyZSBpcyBib3RoIGxvc3MgYW5kIGdhaW47Cm9uIHRoZSBvbmUgaGFuZCwgdGhlIHByb2Nlc3Mgb2YgbGVhcm5pbmcgd2lsbCBiZQpzbG93ZXIsIGJlY2F1c2UgdGhlIHBlcmNlcHRpb24gb2YgdGhlIGV5ZSBpcyBxdWlja2VyCnRoYW4gdGhhdCBvZiB0aGUgZWFyLCB3aGlsZSwgb24gdGhlIG90aGVyIGhhbmQsIHdoZW4Kd2UgaGF2ZSBoZWFyZCBhIHBhc3NhZ2Ugb25jZSBvciB0d2ljZSwgd2Ugc2hhbGwgYmUKaW4gYSBwb3NpdGlvbiB0byB0ZXN0IG91ciBtZW1vcnkgYW5kIG1hdGNoIGl0IGFnYWluc3QKdGhlIHZvaWNlIG9mIHRoZSByZWFkZXIuIEl0IGlzLCBpbmRlZWQsIGltcG9ydGFudCBmb3IKb3RoZXIgcmVhc29ucyB0byB0ZXN0IG91cnNlbHZlcyB0aHVzIGZyb20gdGltZSB0byB0aW1lLApzaW5jZSBjb250aW51b3VzIHJlYWRpbmcgaGFzIHRoaXMgZHJhd2JhY2ssIHRoYXQgaXQKcGFzc2VzIG92ZXIgdGhlIHBhc3NhZ2VzIHdoaWNoIHdlIGZpbmQgaGFyZCB0byByZW1lbWJlciBhdCB0aGUgc2FtZSBzcGVlZCBhcyB0aG9zZSB3aGljaCB3ZSBmaW5kIGxlc3MKZGlmZmljdWx0eSBpbiByZXRhaW5pbmcuPC90cmFuc2xhdGlvbj4="
translation['11.6.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz4gQnkgdGVzdGluZyBvdXJzZWx2ZXMgdG8gc2VlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yMzMiIC8+Cgp3aGV0aGVyIHdlIHJlbWVtYmVyIGEgcGFzc2FnZSwgd2UgZGV2ZWxvcCBncmVhdGVyCmNvbmNlbnRyYXRpb24gd2l0aG91dCB3YXN0ZSBvZiB0aW1lIG92ZXIgdGhlIHJlcGV0aXRpb24gb2YgcGFzc2FnZXMgd2hpY2ggd2UgYWxyZWFkeSBrbm93IGJ5IGhlYXJ0LgpUaHVzLCBvbmx5IHRob3NlIHBhc3NhZ2VzIHdoaWNoIHRlbmQgdG8gc2xpcCBmcm9tCnRoZSBtZW1vcnkgYXJlIHJlcGVhdGVkIHdpdGggYSB2aWV3IHRvIGZpeGluZyB0aGVtCmluIHRoZSBtaW5kIGJ5IGZyZXF1ZW50IHJlaGVhcnNhbCwgYWx0aG91Z2ggYXMgYSBydWxlCnRoZSBtZXJlIGZhY3QgdGhhdCB0aGV5IG9uY2Ugc2xpcHBlZCBvdXIgbWVtb3J5Cm1ha2VzIHVzIHVsdGltYXRlbHkgcmVtZW1iZXIgdGhlbSB3aXRoIHNwZWNpYWwKYWNjdXJhY3kuIEJvdGggbGVhcm5pbmcgYnkgaGVhcnQgYW5kIHdyaXRpbmcgaGF2ZQp0aGlzIGZlYXR1cmUgaW4gY29tbW9uOiBuYW1lbHksIHRoYXQgZ29vZCBoZWFsdGgsCnNvdW5kIGRpZ2VzdGlvbiwgYW5kIGZyZWVkb20gZnJvbSBvdGhlciBwcmVvY2N1cGF0aW9ucyBvZiBtaW5kIGNvbnRyaWJ1dGUgbGFyZ2VseSB0byB0aGUgc3VjY2VzcyBvZgpib3RoLjwvdHJhbnNsYXRpb24+"
translation['11.6.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGZvciB0aGUgcHVycG9zZSBvZiBnZXR0aW5nIGEgcmVhbCBncmFzcApvZiB3aGF0IHdlIGhhdmUgd3JpdHRlbiB1bmRlciB0aGUgdmFyaW91cyBoZWFkcywKZGl2aXNpb24gYW5kIGFydGlzdGljIHN0cnVjdHVyZSB3aWxsIGJlIGZvdW5kIG9mIGdyZWF0CnZhbHVlLCB3aGlsZSwgd2l0aCB0aGUgZXhjZXB0aW9uIG9mIHByYWN0aWNlLCB3aGljaAppcyB0aGUgbW9zdCBwb3dlcmZ1bCBhaWQgb2YgYWxsLCB0aGV5IGFyZSBwcmFjdGljYWxseQp0aGUgb25seSBtZWFucyBvZiBlbnN1cmluZyBhbiBhY2N1cmF0ZSByZW1lbWJyYW5jZQpvZiB3aGF0IHdlIGhhdmUgbWVyZWx5IHRob3VnaHQgb3V0LiBGb3IgY29ycmVjdApkaXZpc2lvbiB3aWxsIGJlIGFuIGFic29sdXRlIHNhZmVndWFyZCBhZ2FpbnN0IGVycm9yIGluCnRoZSBvcmRlciBvZiBvdXIgc3BlZWNoLDwvdHJhbnNsYXRpb24+"
translation['11.6.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz4gc2luY2UgdGhlcmUgYXJlIGNlcnRhaW4gcG9pbnRzCm5vdCBtZXJlbHkgaW4gdGhlIGRpc3RyaWJ1dGlvbiBvZiB0aGUgdmFyaW91cyBxdWVzdGlvbnMKaW4gb3VyIHNwZWVjaCwgYnV0IGFsc28gaW4gdGhlaXIgZGV2ZWxvcG1lbnQgKHByb3ZpZGVkIHdlIHNwZWFrIGFzIHdlIG91Z2h0KSwgd2hpY2ggbmF0dXJhbGx5IGNvbWUKZmlyc3QsIHNlY29uZCwgYW5kIHRoaXJkLCBhbmQgc28gb24sIHdoaWxlIHRoZSBjb25uZXhpb24Kd2lsbCBiZSBzbyBwZXJmZWN0IHRoYXQgbm90aGluZyBjYW4gYmUgb21pdHRlZCBvcgppbnNlcnRlZCB3aXRob3V0IHRoZSBmYWN0IG9mIHRoZSBvbWlzc2lvbiBvciBpbnNlcnRpb24gYmVpbmcgb2J2aW91cy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz4gV2UgYXJlIHRvbGQgdGhhdCBTY2Fldm9sYSwKYWZ0ZXIgYSBnYW1lIG9mIGRyYXVnaHRzIGluIHdoaWNoIGhlIG1hZGUgdGhlIGZpcnN0Cm1vdmUgYW5kIHdhcyBkZWZlYXRlZCwgd2VudCBvdmVyIHRoZSB3aG9sZSBnYW1lCmFnYWluIGluIGhpcyBtaW5kIG9uIGhpcyB3YXkgaW50byB0aGUgY291bnRyeSwgYW5kCm9uIHJlY2FsbGluZyB0aGUgbW92ZSB3aGljaCBoYWQgY29zdCBoaW0gdGhlIGdhbWUsCnJldHVybmVkIHRvIHRlbGwgdGhlIG1hbiB3aXRoIHdob20gaGUgaGFkIGJlZW4KcGxheWluZywgYW5kIHRoZSBsYXR0ZXIgYWNrbm93bGVkZ2VkIHRoYXQgaGUgd2FzCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yMzUiIC8+CgpyaWdodC4gSXMgb3JkZXIsIHRoZW4sIEkgYXNrIHlvdSwgdG8gYmUgYWNjb3VudGVkIG9mCmxlc3MgaW1wb3J0YW5jZSBpbiBhIHNwZWVjaCwgaW4gd2hpY2ggaXQgZGVwZW5kcwplbnRpcmVseSBvbiBvdXJzZWx2ZXMsIHdoZXJlYXMgaW4gYSBnYW1lIG91ciBvcHBvbmVudApoYXMgYW4gZXF1YWwgc2hhcmUgaW4gaXRzIGRldmVsb3BtZW50PzwvdHJhbnNsYXRpb24+"
translation['11.6.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIGlmCm91ciBzdHJ1Y3R1cmUgYmUgd2hhdCBpdCBzaG91bGQsIHRoZSBhcnRpc3RpYyBzZXF1ZW5jZSB3aWxsIHNlcnZlIHRvIGd1aWRlIHRoZSBtZW1vcnkuIEZvciBqdXN0CmFzIGl0IGlzIGVhc2llciB0byBsZWFybiB2ZXJzZSB0aGFuIHByb3NlLCBzbyBpdCBpcwplYXNpZXIgdG8gbGVhcm4gcHJvc2Ugd2hlbiBpdCBpcyBhcnRpc3RpY2FsbHkgY29uc3RydWN0ZWQgdGhhbiB3aGVuIGl0IGhhcyBubyBzdWNoIG9yZ2FuaXNhdGlvbi4gSWYKdGhlc2UgcG9pbnRzIHJlY2VpdmUgYXR0ZW50aW9uLCBpdCB3aWxsIGJlIHBvc3NpYmxlIHRvCnJlcGVhdCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj52ZXJiYXRpbTwvaGk+IGV2ZW4gc3VjaCBwc3NzYWdlcyBhcyBnYXZlIHRoZSBpbXByZXNzaW9uIG9mIGJlaW5nIGRlbGl2ZXJlZCBleHRlbXBvcmUuIE15IG93bgptZW1vcnkgaXMgb2YgYSB2ZXJ5IG9yZGluYXJ5IGtpbmQsIGJ1dCBJIGZvdW5kIHRoYXQKSSBjb3VsZCBkbyB0aGlzIHdpdGggc3VjY2VzcyBvbiBvY2Nhc2lvbnMgd2hlbiB0aGUKaW50ZXJydXB0aW9uIG9mIGEgZGVjbGFtYXRpb24gYnkgcGVyc29ucyB3aG8gaGFkIGEKY2xhaW0gdG8gc3VjaCBhIGNvdXJ0ZXN5IGZvcmNlZCBtZSB0byByZXBlYXQgcGFydCBvZgp3aGF0IEkgaGFkIHNhaWQuIFRoZXJlIGFyZSBwZXJzb25zIHN0aWxsIGxpdmluZywgd2hvCndlcmUgdGhlbiBwcmVzZW50IHRvIHdpdG5lc3MgaWYgSSBsaWUuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDAiIHVuaXQ9InNlY3Rpb24iIC8+SG93ZXZlciwgaWYgYW55b25lIGFza3MgbWUgd2hhdCBpcyB0aGUgb25lCnN1cHJlbWUgbWV0aG9kIG9mIG1lbW9yeSwgSSBzaGFsbCByZXBseSwgcHJhY3RpY2UKYW5kIGluZHVzdHJ5LiBUaGUgbW9zdCBpbXBvcnRhbnQgdGhpbmcgaXMgdG8gbGVhcm4KbXVjaCBieSBoZWFydCBhbmQgdG8gdGhpbmsgbXVjaCwgYW5kLCBpZiBwb3NzaWJsZSwKdG8gZG8gdGhpcyBkYWlseSwgc2luY2UgdGhlcmUgaXMgbm90aGluZyB0aGF0IGlzIG1vcmUKaW5jcmVhc2VkIGJ5IHByYWN0aWNlIG9yIGltcGFpcmVkIGJ5IG5lZ2xlY3QgdGhhbgptZW1vcnkuPG1pbGVzdG9uZSBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmVmb3JlIGJveXMgc2hvdWxkLCBhcyBJIGhhdmUgYWxyZWFkeQp1cmdlZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZS4gaS4gMzY7IElJLiB2aWkuIEkgPGhpIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPjwvbm90ZT4gbGVhcm4gYXMgbXVjaCBhcyBwb3NzaWJsZSBieSBoZWFydCBhdCB0aGUKZWFybGllc3Qgc3RhZ2UsIHdoaWxlIGFsbCB3aG8sIHdoYXRldmVyIHRoZWlyIGFnZSwKZGVzaXJlIHRvIGN1bHRpdmF0ZSB0aGUgcG93ZXIgb2YgbWVtb3J5LCBzaG91bGQKZW5kZWF2b3VyIHRvIHN3YWxsb3cgdGhlIGluaXRpYWwgdGVkaXVtIG9mIHJlYWRpbmcKYW5kIHJlLXJlYWRpbmcgd2hhdCB0aGV5IGhhdmUgd3JpdHRlbiBvciByZWFkLCBhCnByb2Nlc3Mgd2hpY2ggd2UgbWF5IGNvbXBhcmUgdG8gY2hld2luZyB0aGUgY3VkLgpUaGlzIHRhc2sgd2lsbCBiZSByZW5kZXJlZCBsZXNzIHRpcmVzb21lIGlmIHdlIGJlZ2luCmJ5IGNvbmZpbmluZyBvdXJzZWx2ZXMgdG8gbGVhcm5pbmcgb25seSBhIGxpdHRsZSBhdCBhCnRpbWUsIGluIGFtb3VudHMgbm90IHN1ZmZpY2llbnQgdG8gY3JlYXRlIGRpc2d1c3Q6IHdlCgo8cGIgaWQ9InAuMjM3IiAvPgoKbWF5IHRoZW4gcHJvY2VlZCB0byBpbmNyZWFzZSB0aGUgYW1vdW50IGJ5IGEgbGluZSBhCmRheSwgYW4gYWRkaXRpb24gd2hpY2ggd2lsbCBub3Qgc2Vuc2libHkgaW5jcmVhc2UgdGhlCmxhYm91ciBvZiBsZWFybmluZywgdW50aWwgYXQgbGFzdCB0aGUgYW1vdW50IHdlIGNhbgphdHRhY2sgd2lsbCBrbm93IG5vIGxpbWl0cy4gV2Ugc2hvdWxkIGJlZ2luIHdpdGgKcG9ldHJ5IGFuZCB0aGVuIGdvIG9uIHRvIG9yYXRvcnksIHdoaWxlIGZpbmFsbHkgd2UKbWF5IGF0dGVtcHQgcGFzc2FnZXMgc3RpbGwgZnJlZXIgaW4gcmh5dGhtIGFuZCBsZXNzCmFraW4gdG8gb3JkaW5hcnkgc3BlZWNoLCBzdWNoLCBmb3IgZXhhbXBsZSwgYXMKcGFzc2FnZXMgZnJvbSBsZWdhbCB3cml0ZXJzLjxtaWxlc3RvbmUgbj0iNDIiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBwYXNzYWdlcyBpbnRlbmRlZAphcyBhbiBleGVyY2lzZSBzaG91bGQgYmUgc29tZXdoYXQgZGlmZmljdWx0IGluIGNoYXJhY3RlciBpZiB0aGV5IGFyZSB0byBtYWtlIGl0IGVhc3kgdG8gYWNoaWV2ZSB0aGUgZW5kCmZvciB3aGljaCB0aGUgZXhlcmNpc2UgaXMgZGVzaWduZWQ7IGp1c3QgYXMgYXRobGV0ZXMKdHJhaW4gdGhlIG11c2NsZXMgb2YgdGhlaXIgaGFuZHMgYnkgY2Fycnlpbmcgd2VpZ2h0cyBvZgpsZWFkLCBhbHRob3VnaCBpbiB0aGUgYWN0dWFsIGNvbnRlc3RzIHRoZWlyIGhhbmRzIHdpbGwKYmUgZW1wdHkgYW5kIGZyZWUuIEZ1cnRoZXIsIEkgbXVzdCBub3Qgb21pdCB0aGUKZmFjdCwgdGhlIHRydXRoIG9mIHdoaWNoIG91ciBkYWlseSBwcmFjdGljZSB3aWxsIHRlYWNoCnVzLCB0aGF0IGluIHRoZSBjYXNlIG9mIHRoZSBzbG93ZXIgdHlwZSBvZiBtaW5kIHRoZQptZW1vcnkgb2YgcmVjZW50IGV2ZW50cyBpcyBmYXIgZnJvbSBiZWluZyBleGFjdC48bWlsZXN0b25lIG49IjQzIiB1bml0PSJzZWN0aW9uIiAvPiBJdCBpcwphIGN1cmlvdXMgZmFjdCwgb2Ygd2hpY2ggdGhlIHJlYXNvbiBpcyBub3Qgb2J2aW91cywgdGhhdAp0aGUgaW50ZXJ2YWwgb2YgYSBzaW5nbGUgbmlnaHQgd2lsbCBncmVhdGx5IGluY3JlYXNlCnRoZSBzdHJlbmd0aCBvZiB0aGUgbWVtb3J5LCB3aGV0aGVyIHRoaXMgYmUgZHVlIHRvCnRoZSBmYWN0IHRoYXQgaXQgaGFzIHJlc3RlZCBmcm9tIHRoZSBsYWJvdXIsIHRoZQpmYXRpZ3VlIG9mIHdoaWNoIGNvbnN0aXR1dGVkIHRoZSBvYnN0YWNsZSB0byBzdWNjZXNzLApvciB3aGV0aGVyIGl0IGJlIHRoYXQgdGhlIHBvd2VyIG9mIHJlY29sbGVjdGlvbiwKd2hpY2ggaXMgdGhlIG1vc3QgaW1wb3J0YW50IGVsZW1lbnQgb2YgbWVtb3J5LAp1bmRlcmdvZXMgYSBwcm9jZXNzIG9mIHJpcGVuaW5nIGFuZCBtYXR1cmluZwpkdXJpbmcgdGhlIHRpbWUgd2hpY2ggaW50ZXJ2ZW5lcy4gV2hhdGV2ZXIgdGhlCmNhdXNlLCB0aGluZ3Mgd2hpY2ggY291bGQgbm90IGJlIHJlY2FsbGVkIG9uIHRoZQpzcG90IGFyZSBlYXNpbHkgY28tb3JkaW5hdGVkIHRoZSBuZXh0IGRheSwgYW5kIHRpbWUKaXRzZWxmLCB3aGljaCBpcyBnZW5lcmFsbHkgYWNjb3VudGVkIG9uZSBvZiB0aGUgY2F1c2VzCm9mIGZvcmdldGZ1bG5lc3MsIGFjdHVhbGx5IHNlcnZlcyB0byBzdHJlbmd0aGVuIHRoZQptZW1vcnkuPG1pbGVzdG9uZSBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz4gT24gdGhlIG90aGVyIGhhbmQsIHRoZSBhYm5vcm1hbGx5IHJhcGlkCm1lbW9yeSBmYWlscyBhcyBhIHJ1bGUgdG8gbGFzdCBhbmQgdGFrZXMgaXRzIGxlYXZlIGFzCnRob3VnaCwgaXRzIGltbWVkaWF0ZSB0YXNrIGFjY29tcGxpc2hlZCwgaXQgaGFkIG5vCmZ1cnRoZXIgZHV0aWVzIHRvIHBlcmZvcm0uIEFuZCBpbmRlZWQgdGhlcmUgaXMKCjxwYiBpZD0icC4yMzkiIC8+Cgpub3RoaW5nIHN1cnByaXNpbmcgaW4gdGhlIGZhY3QgdGhhdCB0aGluZ3Mgd2hpY2gKaGF2ZSBiZWVuIGltcGxhbnRlZCBpbiB0aGUgbWVtb3J5IGZvciBzb21lIHRpbWUKc2hvdWxkIGhhdmUgYSBncmVhdGVyIHRlbmRlbmN5IHRvIHN0YXkgdGhlcmUuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5Ib3dldmVyLCBpZiBhbnlvbmUgYXNrcyBtZSB3aGF0IGlzIHRoZSBvbmUKc3VwcmVtZSBtZXRob2Qgb2YgbWVtb3J5LCBJIHNoYWxsIHJlcGx5LCBwcmFjdGljZQphbmQgaW5kdXN0cnkuIFRoZSBtb3N0IGltcG9ydGFudCB0aGluZyBpcyB0byBsZWFybgptdWNoIGJ5IGhlYXJ0IGFuZCB0byB0aGluayBtdWNoLCBhbmQsIGlmIHBvc3NpYmxlLAp0byBkbyB0aGlzIGRhaWx5LCBzaW5jZSB0aGVyZSBpcyBub3RoaW5nIHRoYXQgaXMgbW9yZQppbmNyZWFzZWQgYnkgcHJhY3RpY2Ugb3IgaW1wYWlyZWQgYnkgbmVnbGVjdCB0aGFuCm1lbW9yeS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmVmb3JlIGJveXMgc2hvdWxkLCBhcyBJIGhhdmUgYWxyZWFkeQp1cmdlZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlLiBpLiAzNjsgSUkuIHZpaS4gSSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zcXEuPC9oaT48L25vdGU+IGxlYXJuIGFzIG11Y2ggYXMgcG9zc2libGUgYnkgaGVhcnQgYXQgdGhlCmVhcmxpZXN0IHN0YWdlLCB3aGlsZSBhbGwgd2hvLCB3aGF0ZXZlciB0aGVpciBhZ2UsCmRlc2lyZSB0byBjdWx0aXZhdGUgdGhlIHBvd2VyIG9mIG1lbW9yeSwgc2hvdWxkCmVuZGVhdm91ciB0byBzd2FsbG93IHRoZSBpbml0aWFsIHRlZGl1bSBvZiByZWFkaW5nCmFuZCByZS1yZWFkaW5nIHdoYXQgdGhleSBoYXZlIHdyaXR0ZW4gb3IgcmVhZCwgYQpwcm9jZXNzIHdoaWNoIHdlIG1heSBjb21wYXJlIHRvIGNoZXdpbmcgdGhlIGN1ZC4KVGhpcyB0YXNrIHdpbGwgYmUgcmVuZGVyZWQgbGVzcyB0aXJlc29tZSBpZiB3ZSBiZWdpbgpieSBjb25maW5pbmcgb3Vyc2VsdmVzIHRvIGxlYXJuaW5nIG9ubHkgYSBsaXR0bGUgYXQgYQp0aW1lLCBpbiBhbW91bnRzIG5vdCBzdWZmaWNpZW50IHRvIGNyZWF0ZSBkaXNndXN0OiB3ZQoKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjM3IiAvPgoKbWF5IHRoZW4gcHJvY2VlZCB0byBpbmNyZWFzZSB0aGUgYW1vdW50IGJ5IGEgbGluZSBhCmRheSwgYW4gYWRkaXRpb24gd2hpY2ggd2lsbCBub3Qgc2Vuc2libHkgaW5jcmVhc2UgdGhlCmxhYm91ciBvZiBsZWFybmluZywgdW50aWwgYXQgbGFzdCB0aGUgYW1vdW50IHdlIGNhbgphdHRhY2sgd2lsbCBrbm93IG5vIGxpbWl0cy4gV2Ugc2hvdWxkIGJlZ2luIHdpdGgKcG9ldHJ5IGFuZCB0aGVuIGdvIG9uIHRvIG9yYXRvcnksIHdoaWxlIGZpbmFsbHkgd2UKbWF5IGF0dGVtcHQgcGFzc2FnZXMgc3RpbGwgZnJlZXIgaW4gcmh5dGhtIGFuZCBsZXNzCmFraW4gdG8gb3JkaW5hcnkgc3BlZWNoLCBzdWNoLCBmb3IgZXhhbXBsZSwgYXMKcGFzc2FnZXMgZnJvbSBsZWdhbCB3cml0ZXJzLjwvdHJhbnNsYXRpb24+"
translation['11.6.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHBhc3NhZ2VzIGludGVuZGVkCmFzIGFuIGV4ZXJjaXNlIHNob3VsZCBiZSBzb21ld2hhdCBkaWZmaWN1bHQgaW4gY2hhcmFjdGVyIGlmIHRoZXkgYXJlIHRvIG1ha2UgaXQgZWFzeSB0byBhY2hpZXZlIHRoZSBlbmQKZm9yIHdoaWNoIHRoZSBleGVyY2lzZSBpcyBkZXNpZ25lZDsganVzdCBhcyBhdGhsZXRlcwp0cmFpbiB0aGUgbXVzY2xlcyBvZiB0aGVpciBoYW5kcyBieSBjYXJyeWluZyB3ZWlnaHRzIG9mCmxlYWQsIGFsdGhvdWdoIGluIHRoZSBhY3R1YWwgY29udGVzdHMgdGhlaXIgaGFuZHMgd2lsbApiZSBlbXB0eSBhbmQgZnJlZS4gRnVydGhlciwgSSBtdXN0IG5vdCBvbWl0IHRoZQpmYWN0LCB0aGUgdHJ1dGggb2Ygd2hpY2ggb3VyIGRhaWx5IHByYWN0aWNlIHdpbGwgdGVhY2gKdXMsIHRoYXQgaW4gdGhlIGNhc2Ugb2YgdGhlIHNsb3dlciB0eXBlIG9mIG1pbmQgdGhlCm1lbW9yeSBvZiByZWNlbnQgZXZlbnRzIGlzIGZhciBmcm9tIGJlaW5nIGV4YWN0LjwvdHJhbnNsYXRpb24+"
translation['11.6.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz4gSXQgaXMKYSBjdXJpb3VzIGZhY3QsIG9mIHdoaWNoIHRoZSByZWFzb24gaXMgbm90IG9idmlvdXMsIHRoYXQKdGhlIGludGVydmFsIG9mIGEgc2luZ2xlIG5pZ2h0IHdpbGwgZ3JlYXRseSBpbmNyZWFzZQp0aGUgc3RyZW5ndGggb2YgdGhlIG1lbW9yeSwgd2hldGhlciB0aGlzIGJlIGR1ZSB0bwp0aGUgZmFjdCB0aGF0IGl0IGhhcyByZXN0ZWQgZnJvbSB0aGUgbGFib3VyLCB0aGUKZmF0aWd1ZSBvZiB3aGljaCBjb25zdGl0dXRlZCB0aGUgb2JzdGFjbGUgdG8gc3VjY2VzcywKb3Igd2hldGhlciBpdCBiZSB0aGF0IHRoZSBwb3dlciBvZiByZWNvbGxlY3Rpb24sCndoaWNoIGlzIHRoZSBtb3N0IGltcG9ydGFudCBlbGVtZW50IG9mIG1lbW9yeSwKdW5kZXJnb2VzIGEgcHJvY2VzcyBvZiByaXBlbmluZyBhbmQgbWF0dXJpbmcKZHVyaW5nIHRoZSB0aW1lIHdoaWNoIGludGVydmVuZXMuIFdoYXRldmVyIHRoZQpjYXVzZSwgdGhpbmdzIHdoaWNoIGNvdWxkIG5vdCBiZSByZWNhbGxlZCBvbiB0aGUKc3BvdCBhcmUgZWFzaWx5IGNvLW9yZGluYXRlZCB0aGUgbmV4dCBkYXksIGFuZCB0aW1lCml0c2VsZiwgd2hpY2ggaXMgZ2VuZXJhbGx5IGFjY291bnRlZCBvbmUgb2YgdGhlIGNhdXNlcwpvZiBmb3JnZXRmdWxuZXNzLCBhY3R1YWxseSBzZXJ2ZXMgdG8gc3RyZW5ndGhlbiB0aGUKbWVtb3J5LjwvdHJhbnNsYXRpb24+"
translation['11.6.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz4gT24gdGhlIG90aGVyIGhhbmQsIHRoZSBhYm5vcm1hbGx5IHJhcGlkCm1lbW9yeSBmYWlscyBhcyBhIHJ1bGUgdG8gbGFzdCBhbmQgdGFrZXMgaXRzIGxlYXZlIGFzCnRob3VnaCwgaXRzIGltbWVkaWF0ZSB0YXNrIGFjY29tcGxpc2hlZCwgaXQgaGFkIG5vCmZ1cnRoZXIgZHV0aWVzIHRvIHBlcmZvcm0uIEFuZCBpbmRlZWQgdGhlcmUgaXMKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjIzOSIgLz4KCm5vdGhpbmcgc3VycHJpc2luZyBpbiB0aGUgZmFjdCB0aGF0IHRoaW5ncyB3aGljaApoYXZlIGJlZW4gaW1wbGFudGVkIGluIHRoZSBtZW1vcnkgZm9yIHNvbWUgdGltZQpzaG91bGQgaGF2ZSBhIGdyZWF0ZXIgdGVuZGVuY3kgdG8gc3RheSB0aGVyZS48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHBvd2VycyBvZiBvbmUgbWluZAphbmQgYW5vdGhlciwgdG8gd2hpY2ggSSBoYXZlIGp1c3QgcmVmZXJyZWQsIGdpdmVzIHJpc2UKdG8gdGhlIHF1ZXN0aW9uIHdoZXRoZXIgdGhvc2Ugd2hvIGFyZSBpbnRlbmRpbmcgdG8Kc3BlYWsgc2hvdWxkIGxlYXJuIHRoZWlyIHNwZWVjaGVzIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnZlcmJhdGltPC9oaT4gb3Igd2hldGhlcgppdCBpcyBzdWZmaWNpZW50IHRvIGdldCBhIGdvb2QgZ3Jhc3Agb2YgdGhlIGVzc2VuY2UgYW5kCnRoZSBvcmRlciBvZiB3aGF0IHRoZXkgaGF2ZSBnb3QgdG8gc2F5LiBUbyB0aGlzCnByb2JsZW0gbm8gYW5zd2VyIGlzIHBvc3NpYmxlIHRoYXQgd2lsbCBiZSBvZiB1bml2ZXJzYWwgYXBwbGljYXRpb24uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ1IiB1bml0PSJzZWN0aW9uIiAvPiBHaXZlIG1lIGEgcmVsaWFibGUgbWVtb3J5IGFuZApwbGVudHkgb2YgdGltZSwgYW5kIEkgc2hvdWxkIHByZWZlciBub3QgdG8gcGVybWl0CmEgc2luZ2xlIHN5bGxhYmxlIHRvIGVzY2FwZSBtZTogb3RoZXJ3aXNlIHdyaXRpbmcKd291bGQgYmUgc3VwZXJmbHVvdXMuIEl0IGlzIHNwZWNpYWxseSBpbXBvcnRhbnQgdG8KdHJhaW4gdGhlIHlvdW5nIHRvIHN1Y2ggcHJlY2lzaW9uLCBhbmQgdGhlIG1lbW9yeQpzaG91bGQgYmUgY29udGludWFsbHkgcHJhY3Rpc2VkIHRvIHRoaXMgZW5kLCB0aGF0IHdlCm1heSBuZXZlciBsZWFybiB0byBiZWNvbWUgaW5kdWxnZW50IHRvIGl0cyBmYWlsdXJlLgpGb3IgdGhpcyByZWFzb24gSSByZWdhcmQgaXQgYXMgYSBtaXN0YWtlIHRvIHBlcm1pdCB0aGUKc3R1ZGVudCB0byBiZSBwcm9tcHRlZCBvciB0byBjb25zdWx0IGhpcyBtYW51c2NyaXB0LApzaW5jZSBzdWNoIHByYWN0aWNlcyBtZXJlbHkgZW5jb3VyYWdlIGNhcmVsZXNzbmVzcywKYW5kIG5vIG9uZSB3aWxsIGV2ZXIgcmVhbGlzZSB0aGF0IGhlIGhhcyBub3QgZ290IGhpcwp0aGVtZSBieSBoZWFydCwgaWYgaGUgaGFzIG5vIGZlYXIgb2YgZm9yZ2V0dGluZyBpdC4KPG1pbGVzdG9uZSBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyB0aGlzIHdoaWNoIGNhdXNlcyBpbnRlcnJ1cHRpb25zIGluIHRoZSBmbG93IG9mCnNwZWVjaCBhbmQgbWFrZXMgdGhlIG9yYXRvcidzIGxhbmd1YWdlIGhhbHRpbmcgYW5kCmplcmt5LCB3aGlsZSBoZSBzZWVtcyBhcyB0aG91Z2ggaGUgd2VyZSBsZWFybmluZwp3aGF0IGhlIHNheXMgYnkgaGVhcnQgYW5kIGxvc2VzIGFsbCB0aGUgZ3JhY2UgdGhhdCBhCndlbGwtd3JpdHRlbiBzcGVlY2ggY2FuIGdpdmUsIHNpbXBseSBieSB0aGUgZmFjdCB0aGF0CmhlIG1ha2VzIGl0IG9idmlvdXMgdGhhdCBoZSBoYXMgd3JpdHRlbiBpdC4gT24gdGhlCm90aGVyIGhhbmQsIGEgZ29vZCBtZW1vcnkgd2lsbCBnaXZlIHVzIGNyZWRpdCBmb3IKcXVpY2tuZXNzIG9mIHdpdCBhcyB3ZWxsLCBieSBjcmVhdGluZyB0aGUgaW1wcmVzc2lvbgp0aGF0IG91ciB3b3JkcyBoYXZlIG5vdCBiZWVuIHByZXBhcmVkIGluIHRoZSBzZWNsdXNpb24gb2YgdGhlIHN0dWR5LCBidXQgYXJlIGR1ZSB0byB0aGUgaW5zcGlyYXRpb24Kb2YgdGhlIG1vbWVudCwgYW4gaW1wcmVzc2lvbiB3aGljaCBpcyBvZiB0aGUgdXRtb3N0CmFzc2lzdGFuY2UgYm90aCB0byB0aGUgb3JhdG9yIGFuZCB0byBoaXMgY2F1c2UuPG1pbGVzdG9uZSBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCgo8cGIgaWQ9InAuMjQxIiAvPgoKdGhlIGp1ZGdlIGFkbWlyZXMgdGhvc2Ugd29yZHMgbW9yZSBhbmQgZmVhcnMgdGhlbQpsZXNzIHdoaWNoIGhlIGRvZXMgbm90IHN1c3BlY3Qgb2YgaGF2aW5nIGJlZW4Kc3BlY2lhbGx5IHByZXBhcmVkIGJlZm9yZWhhbmQgdG8gb3V0d2l0IGhpbS4KRnVydGhlciwgd2UgbXVzdCBtYWtlIGl0IG9uZSBvZiBvdXIgY2hpZWYgYWltcwppbiBwbGVhZGluZyB0byBkZWxpdmVyIHBhc3NhZ2VzIHdoaWNoIGhhdmUgYmVlbgpjb25zdHJ1Y3RlZCB3aXRoIHRoZSB1dG1vc3QgY2FyZSwgaW4gc3VjaCBtYW5uZXIKYXMgdG8gbWFrZSBpdCBhcHBlYXIgdGhhdCB0aGV5IGFyZSBidXQgY2FzdWFsbHkgc3RydW5nCnRvZ2V0aGVyLCBhbmQgdG8gc3VnZ2VzdCB0aGF0IHdlIGFyZSB0aGlua2luZyBvdXQKYW5kIGhlc2l0YXRpbmcgb3ZlciB3b3JkcyB3aGljaCB3ZSBoYXZlLCBhcyBhCm1hdHRlciBvZiBmYWN0LCBjYXJlZnVsbHkgcHJlcGFyZWQgaW4gYWR2YW5jZS48L3A+CjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnZlcmJhdGltPC9oaT4gb3Igd2hldGhlcgppdCBpcyBzdWZmaWNpZW50IHRvIGdldCBhIGdvb2QgZ3Jhc3Agb2YgdGhlIGVzc2VuY2UgYW5kCnRoZSBvcmRlciBvZiB3aGF0IHRoZXkgaGF2ZSBnb3QgdG8gc2F5LiBUbyB0aGlzCnByb2JsZW0gbm8gYW5zd2VyIGlzIHBvc3NpYmxlIHRoYXQgd2lsbCBiZSBvZiB1bml2ZXJzYWwgYXBwbGljYXRpb24uPC90cmFuc2xhdGlvbj4="
translation['11.6.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz4gR2l2ZSBtZSBhIHJlbGlhYmxlIG1lbW9yeSBhbmQKcGxlbnR5IG9mIHRpbWUsIGFuZCBJIHNob3VsZCBwcmVmZXIgbm90IHRvIHBlcm1pdAphIHNpbmdsZSBzeWxsYWJsZSB0byBlc2NhcGUgbWU6IG90aGVyd2lzZSB3cml0aW5nCndvdWxkIGJlIHN1cGVyZmx1b3VzLiBJdCBpcyBzcGVjaWFsbHkgaW1wb3J0YW50IHRvCnRyYWluIHRoZSB5b3VuZyB0byBzdWNoIHByZWNpc2lvbiwgYW5kIHRoZSBtZW1vcnkKc2hvdWxkIGJlIGNvbnRpbnVhbGx5IHByYWN0aXNlZCB0byB0aGlzIGVuZCwgdGhhdCB3ZQptYXkgbmV2ZXIgbGVhcm4gdG8gYmVjb21lIGluZHVsZ2VudCB0byBpdHMgZmFpbHVyZS4KRm9yIHRoaXMgcmVhc29uIEkgcmVnYXJkIGl0IGFzIGEgbWlzdGFrZSB0byBwZXJtaXQgdGhlCnN0dWRlbnQgdG8gYmUgcHJvbXB0ZWQgb3IgdG8gY29uc3VsdCBoaXMgbWFudXNjcmlwdCwKc2luY2Ugc3VjaCBwcmFjdGljZXMgbWVyZWx5IGVuY291cmFnZSBjYXJlbGVzc25lc3MsCmFuZCBubyBvbmUgd2lsbCBldmVyIHJlYWxpc2UgdGhhdCBoZSBoYXMgbm90IGdvdCBoaXMKdGhlbWUgYnkgaGVhcnQsIGlmIGhlIGhhcyBubyBmZWFyIG9mIGZvcmdldHRpbmcgaXQuCjwvdHJhbnNsYXRpb24+"
translation['11.6.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyB0aGlzIHdoaWNoIGNhdXNlcyBpbnRlcnJ1cHRpb25zIGluIHRoZSBmbG93IG9mCnNwZWVjaCBhbmQgbWFrZXMgdGhlIG9yYXRvcidzIGxhbmd1YWdlIGhhbHRpbmcgYW5kCmplcmt5LCB3aGlsZSBoZSBzZWVtcyBhcyB0aG91Z2ggaGUgd2VyZSBsZWFybmluZwp3aGF0IGhlIHNheXMgYnkgaGVhcnQgYW5kIGxvc2VzIGFsbCB0aGUgZ3JhY2UgdGhhdCBhCndlbGwtd3JpdHRlbiBzcGVlY2ggY2FuIGdpdmUsIHNpbXBseSBieSB0aGUgZmFjdCB0aGF0CmhlIG1ha2VzIGl0IG9idmlvdXMgdGhhdCBoZSBoYXMgd3JpdHRlbiBpdC4gT24gdGhlCm90aGVyIGhhbmQsIGEgZ29vZCBtZW1vcnkgd2lsbCBnaXZlIHVzIGNyZWRpdCBmb3IKcXVpY2tuZXNzIG9mIHdpdCBhcyB3ZWxsLCBieSBjcmVhdGluZyB0aGUgaW1wcmVzc2lvbgp0aGF0IG91ciB3b3JkcyBoYXZlIG5vdCBiZWVuIHByZXBhcmVkIGluIHRoZSBzZWNsdXNpb24gb2YgdGhlIHN0dWR5LCBidXQgYXJlIGR1ZSB0byB0aGUgaW5zcGlyYXRpb24Kb2YgdGhlIG1vbWVudCwgYW4gaW1wcmVzc2lvbiB3aGljaCBpcyBvZiB0aGUgdXRtb3N0CmFzc2lzdGFuY2UgYm90aCB0byB0aGUgb3JhdG9yIGFuZCB0byBoaXMgY2F1c2UuPC90cmFuc2xhdGlvbj4="
translation['11.6.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yNDEiIC8+Cgp0aGUganVkZ2UgYWRtaXJlcyB0aG9zZSB3b3JkcyBtb3JlIGFuZCBmZWFycyB0aGVtCmxlc3Mgd2hpY2ggaGUgZG9lcyBub3Qgc3VzcGVjdCBvZiBoYXZpbmcgYmVlbgpzcGVjaWFsbHkgcHJlcGFyZWQgYmVmb3JlaGFuZCB0byBvdXR3aXQgaGltLgpGdXJ0aGVyLCB3ZSBtdXN0IG1ha2UgaXQgb25lIG9mIG91ciBjaGllZiBhaW1zCmluIHBsZWFkaW5nIHRvIGRlbGl2ZXIgcGFzc2FnZXMgd2hpY2ggaGF2ZSBiZWVuCmNvbnN0cnVjdGVkIHdpdGggdGhlIHV0bW9zdCBjYXJlLCBpbiBzdWNoIG1hbm5lcgphcyB0byBtYWtlIGl0IGFwcGVhciB0aGF0IHRoZXkgYXJlIGJ1dCBjYXN1YWxseSBzdHJ1bmcKdG9nZXRoZXIsIGFuZCB0byBzdWdnZXN0IHRoYXQgd2UgYXJlIHRoaW5raW5nIG91dAphbmQgaGVzaXRhdGluZyBvdmVyIHdvcmRzIHdoaWNoIHdlIGhhdmUsIGFzIGEKbWF0dGVyIG9mIGZhY3QsIGNhcmVmdWxseSBwcmVwYXJlZCBpbiBhZHZhbmNlLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ4IiB1bml0PSJzZWN0aW9uIiAvPkl0IHNob3VsZCBub3cgYmUgY2xlYXIgdG8gYWxsIHdoYXQgaXMgdGhlIGJlc3QKY291cnNlIHRvIGFkb3B0IGZvciB0aGUgY3VsdGl2YXRpb24gb2YgbWVtb3J5LiBJZiwKaG93ZXZlciwgb3VyIG1lbW9yeSBiZSBuYXR1cmFsbHkgc29tZXdoYXQgZHVsbApvciB0aW1lIHByZXNzZXMsIGl0IHdpbGwgYmUgdXNlbGVzcyB0byB0aWUgb3Vyc2VsdmVzCmRvd24gcmlnaWRseSB0byBldmVyeSB3b3JkLCBzaW5jZSBpZiB3ZSBmb3JnZXQgYW55Cm9uZSBvZiB0aGVtLCB0aGUgcmVzdWx0IG1heSBiZSBhd2t3YXJkIGhlc2l0YXRpb24gb3IgZXZlbiBhIHRvbmd1ZS10aWVkIHNpbGVuY2UuIEl0IGlzLCB0aGVyZWZvcmUsCmZhciBzYWZlciB0byBzZWN1cmUgYSBnb29kIGdyYXNwIG9mIHRoZSBmYWN0cyB0aGVtc2VsdmVzIGFuZCB0byBsZWF2ZSBvdXJzZWx2ZXMgZnJlZSB0byBzcGVhayBhcyB3ZQp3aWxsLjxtaWxlc3RvbmUgbj0iNDkiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciB0aGUgbG9zcyBvZiBldmVuIGEgc2luZ2xlIHdvcmQgdGhhdCB3ZQpoYXZlIGNob3NlbiBpcyBhbHdheXMgYSBtYXR0ZXIgZm9yIHJlZ3JldCwgYW5kIGl0IGlzCmhhcmQgdG8gc3VwcGx5IGEgc3Vic3RpdHV0ZSB3aGVuIHdlIGFyZSBzZWFyY2hpbmcKZm9yIHRoZSB3b3JkIHRoYXQgd2UgaGFkIHdyaXR0ZW4uIEJ1dCBldmVuIHRoaXMKaXMgbm8gcmVtZWR5IGZvciBhIHdlYWsgbWVtb3J5LCBleGNlcHQgZm9yIHRob3NlCndobyBoYXZlIGFjcXVpcmVkIHRoZSBhcnQgb2Ygc3BlYWtpbmcgZXh0ZW1wb3JlLgpCdXQgaWYgYm90aCBtZW1vcnkgYW5kIHRoaXMgZ2lmdCBiZSBsYWNraW5nLCBJCnNob3VsZCBhZHZpc2UgdGhlIHdvdWxkLWJlIG9yYXRvciB0byBhYmFuZG9uIHRoZQp0b2lsIG9mIHBsZWFkaW5nIGFsdG9nZXRoZXIgYW5kLCBpZiBoZSBoYXMgYW55IGxpdGVyYXJ5CmNhcGFjaXR5LCB0byBiZXRha2UgaGltc2VsZiBieSBwcmVmZXJlbmNlIHRvIHdyaXRpbmcuCkJ1dCBzdWNoIGEgbWlzZm9ydHVuZSB3aWxsIGJlIG9mIGJ1dCByYXJlIG9jY3VycmVuY2UuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.48'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0ic2VjdGlvbiIgLz5JdCBzaG91bGQgbm93IGJlIGNsZWFyIHRvIGFsbCB3aGF0IGlzIHRoZSBiZXN0CmNvdXJzZSB0byBhZG9wdCBmb3IgdGhlIGN1bHRpdmF0aW9uIG9mIG1lbW9yeS4gSWYsCmhvd2V2ZXIsIG91ciBtZW1vcnkgYmUgbmF0dXJhbGx5IHNvbWV3aGF0IGR1bGwKb3IgdGltZSBwcmVzc2VzLCBpdCB3aWxsIGJlIHVzZWxlc3MgdG8gdGllIG91cnNlbHZlcwpkb3duIHJpZ2lkbHkgdG8gZXZlcnkgd29yZCwgc2luY2UgaWYgd2UgZm9yZ2V0IGFueQpvbmUgb2YgdGhlbSwgdGhlIHJlc3VsdCBtYXkgYmUgYXdrd2FyZCBoZXNpdGF0aW9uIG9yIGV2ZW4gYSB0b25ndWUtdGllZCBzaWxlbmNlLiBJdCBpcywgdGhlcmVmb3JlLApmYXIgc2FmZXIgdG8gc2VjdXJlIGEgZ29vZCBncmFzcCBvZiB0aGUgZmFjdHMgdGhlbXNlbHZlcyBhbmQgdG8gbGVhdmUgb3Vyc2VsdmVzIGZyZWUgdG8gc3BlYWsgYXMgd2UKd2lsbC48L3RyYW5zbGF0aW9uPg=="
translation['11.6.49'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZSBsb3NzIG9mIGV2ZW4gYSBzaW5nbGUgd29yZCB0aGF0IHdlCmhhdmUgY2hvc2VuIGlzIGFsd2F5cyBhIG1hdHRlciBmb3IgcmVncmV0LCBhbmQgaXQgaXMKaGFyZCB0byBzdXBwbHkgYSBzdWJzdGl0dXRlIHdoZW4gd2UgYXJlIHNlYXJjaGluZwpmb3IgdGhlIHdvcmQgdGhhdCB3ZSBoYWQgd3JpdHRlbi4gQnV0IGV2ZW4gdGhpcwppcyBubyByZW1lZHkgZm9yIGEgd2VhayBtZW1vcnksIGV4Y2VwdCBmb3IgdGhvc2UKd2hvIGhhdmUgYWNxdWlyZWQgdGhlIGFydCBvZiBzcGVha2luZyBleHRlbXBvcmUuCkJ1dCBpZiBib3RoIG1lbW9yeSBhbmQgdGhpcyBnaWZ0IGJlIGxhY2tpbmcsIEkKc2hvdWxkIGFkdmlzZSB0aGUgd291bGQtYmUgb3JhdG9yIHRvIGFiYW5kb24gdGhlCnRvaWwgb2YgcGxlYWRpbmcgYWx0b2dldGhlciBhbmQsIGlmIGhlIGhhcyBhbnkgbGl0ZXJhcnkKY2FwYWNpdHksIHRvIGJldGFrZSBoaW1zZWxmIGJ5IHByZWZlcmVuY2UgdG8gd3JpdGluZy4KQnV0IHN1Y2ggYSBtaXNmb3J0dW5lIHdpbGwgYmUgb2YgYnV0IHJhcmUgb2NjdXJyZW5jZS48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIHJlc3QgdGhlcmUgYXJlIG1hbnkgaGlzdG9yaWNhbCBleGFtcGxlcwpvZiB0aGUgcG93ZXIgdG8gd2hpY2ggbWVtb3J5IG1heSBiZSBkZXZlbG9wZWQgYnkKbmF0dXJhbCBhcHRpdHVkZSBhbmQgYXBwbGljYXRpb24uIFRoZW1pc3RvY2xlcyBpcwpzYWlkIHRvIGhhdmUgc3Bva2VuIGV4Y2VsbGVudGx5IGluIFBlcnNpYW4gYWZ0ZXIgYQoKPHBiIGlkPSJwLjI0MyIgLz4KCnllYXIncyBzdHVkeTsgTWl0aHJpZGF0ZXMgaXMgcmVjb3JkZWQgdG8gaGF2ZSBrbm93bgp0d2VudHktdHdvIGxhbmd1YWdlcywgdGhhdCBiZWluZyB0aGUgbnVtYmVyIG9mCnRoZSBkaWZmZXJlbnQgbmF0aW9ucyBpbmNsdWRlZCBpbiBoaXMgZW1waXJlOzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+S2luZyBvZiBQb250dXMuPC9ub3RlPiBDcmFzc3VzLApzdXJuYW1lZCB0aGUgUmljaCw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkNvbnN1bCwgMTMxIEIuQy4gQ29tbWFuZGVkIGluIHRoZSB3YXIgYWdhaW5zdCBBcmlzdG9uaWN1cyBvZiBQZXJnYW11bSwgd2FzIGRlZmVhdGVkIGFuZCBraWxsZWQuPC9ub3RlPiB3aGVuIGNvbW1hbmRpbmcgaW4gQXNpYSBoYWQKc3VjaCBhIGNvbXBsZXRlIG1hc3Rlcnkgb2YgZml2ZSBkaWZmZXJlbnQgR3JlZWsKZGlhbGVjdHMsIHRoYXQgaGUgd291bGQgZ2l2ZSBqdWRnZW1lbnQgaW4gdGhlIGRpYWxlY3QKZW1wbG95ZWQgYnkgdGhlIHBsYWludGlmZiBpbiBwdXR0aW5nIGZvcndhcmQgaGlzCnN1aXQ7IEN5cnVzIGlzIGJlbGlldmVkIHRvIGhhdmUga25vd24gdGhlIG5hbWUKb2YgZXZlcnkgc29sZGllciBpbiBoaXMgYXJteSw8bWlsZXN0b25lIG49IjUxIiB1bml0PSJzZWN0aW9uIiAvPiB3aGlsZSBUaGVvZGVjdGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5SaGV0b3JpY2lhbiBvZiBmaXJzdCBoYWxmIG9mIGZvdXJ0aCBjZW50dXJ5IEIuQy4uPC9ub3RlPiBpcwphY3R1YWxseSBzYWlkIHRvIGhhdmUgYmVlbiBhYmxlIHRvIHJlcGVhdCBhbnkgbnVtYmVyCm9mIHZlcnNlcyBhZnRlciBvbmx5IGEgc2luZ2xlIGhlYXJpbmcuIEkgcmVtZW1iZXIKdGhhdCBpdCB1c2VkIHRvIGJlIGFsbGVnZWQgdGhhdCB0aGVyZSB3ZXJlIHBlcnNvbnMKc3RpbGwgbGl2aW5nIHdobyBjb3VsZCBkbyB0aGUgc2FtZSwgdGhvdWdoIEkgbmV2ZXIKaGFkIHRoZSBnb29kIGZvcnR1bmUgdG8gYmUgcHJlc2VudCBhdCBzdWNoIGEgcGVyZm9ybWFuY2UuIFN0aWxsLCB3ZSBzaGFsbCBkbyB3ZWxsIHRvIGhhdmUgZmFpdGggaW4Kc3VjaCBtaXJhY2xlcywgaWYgb25seSB0aGF0IGhlIHdobyBiZWxpZXZlcyBtYXkgYWxzbwpob3BlIHRvIGFjaGlldmUgdGhlIGxpa2UuPC9wPgoKPC90cmFuc2xhdGlvbj4="
translation['11.6.50'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIHJlc3QgdGhlcmUgYXJlIG1hbnkgaGlzdG9yaWNhbCBleGFtcGxlcwpvZiB0aGUgcG93ZXIgdG8gd2hpY2ggbWVtb3J5IG1heSBiZSBkZXZlbG9wZWQgYnkKbmF0dXJhbCBhcHRpdHVkZSBhbmQgYXBwbGljYXRpb24uIFRoZW1pc3RvY2xlcyBpcwpzYWlkIHRvIGhhdmUgc3Bva2VuIGV4Y2VsbGVudGx5IGluIFBlcnNpYW4gYWZ0ZXIgYQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjQzIiAvPgoKeWVhcidzIHN0dWR5OyBNaXRocmlkYXRlcyBpcyByZWNvcmRlZCB0byBoYXZlIGtub3duCnR3ZW50eS10d28gbGFuZ3VhZ2VzLCB0aGF0IGJlaW5nIHRoZSBudW1iZXIgb2YKdGhlIGRpZmZlcmVudCBuYXRpb25zIGluY2x1ZGVkIGluIGhpcyBlbXBpcmU7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPktpbmcgb2YgUG9udHVzLjwvbm90ZT4gQ3Jhc3N1cywKc3VybmFtZWQgdGhlIFJpY2gsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkNvbnN1bCwgMTMxIEIuQy4gQ29tbWFuZGVkIGluIHRoZSB3YXIgYWdhaW5zdCBBcmlzdG9uaWN1cyBvZiBQZXJnYW11bSwgd2FzIGRlZmVhdGVkIGFuZCBraWxsZWQuPC9ub3RlPiB3aGVuIGNvbW1hbmRpbmcgaW4gQXNpYSBoYWQKc3VjaCBhIGNvbXBsZXRlIG1hc3Rlcnkgb2YgZml2ZSBkaWZmZXJlbnQgR3JlZWsKZGlhbGVjdHMsIHRoYXQgaGUgd291bGQgZ2l2ZSBqdWRnZW1lbnQgaW4gdGhlIGRpYWxlY3QKZW1wbG95ZWQgYnkgdGhlIHBsYWludGlmZiBpbiBwdXR0aW5nIGZvcndhcmQgaGlzCnN1aXQ7IEN5cnVzIGlzIGJlbGlldmVkIHRvIGhhdmUga25vd24gdGhlIG5hbWUKb2YgZXZlcnkgc29sZGllciBpbiBoaXMgYXJteSw8L3RyYW5zbGF0aW9uPg=="
translation['11.6.51'] = ""
translation['11.6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgdGhlIHRoaW5nIGl0c2VsZiBoYXMgYW4gZXh0cmFvcmRpbmFyaWx5IHBvd2VyZnVsIGVmZmVjdCBpbiBvcmF0b3J5LiBGb3IgdGhlCm5hdHVyZSBvZiB0aGUgc3BlZWNoIHRoYXQgd2UgaGF2ZSBjb21wb3NlZCB3aXRoaW4Kb3VyIG1pbmRzIGlzIG5vdCBzbyBpbXBvcnRhbnQgYXMgdGhlIG1hbm5lciBpbgp3aGljaCB3ZSBwcm9kdWNlIGl0LCBzaW5jZSB0aGUgZW1vdGlvbiBvZiBlYWNoCm1lbWJlciBvZiBvdXIgYXVkaWVuY2Ugd2lsbCBkZXBlbmQgb24gdGhlIGltcHJlc3Npb24gbWFkZSB1cG9uIGhpcyBoZWFyaW5nLiBDb25zZXF1ZW50bHksIG5vCnByb29mLCBhdCBsZWFzdCBpZiBpdCBiZSBvbmUgZGV2aXNlZCBieSB0aGUgb3JhdG9yCmhpbXNlbGYsIHdpbGwgZXZlciBiZSBzbyBzZWN1cmUgYXMgbm90IHRvIGxvc2UgaXRzIGZvcmNlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yNDUiIC8+CgppZiB0aGUgc3BlYWtlciBmYWlscyB0byBwcm9kdWNlIGl0IGluIHRvbmVzIHRoYXQgZHJpdmUKaXQgaG9tZS4gQWxsIGVtb3Rpb25hbCBhcHBlYWxzIHdpbGwgaW5ldml0YWJseSBmYWxsCmZsYXQsIHVubGVzcyB0aGV5IGFyZSBnaXZlbiB0aGUgZmlyZSB0aGF0IHZvaWNlLCBsb29rLAphbmQgdGhlIHdob2xlIGNhcnJpYWdlIG9mIHRoZSBib2R5IGNhbiBnaXZlIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['11.6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkZvciB3aGVuIHdlIGhhdmUgZG9uZSBhbGwgdGhpcywgd2UgbWF5IHN0aWxsCmFjY291bnQgb3Vyc2VsdmVzIG9ubHkgdG9vIGZvcnR1bmF0ZSBpZiB3ZSBoYXZlCnN1Y2NlZWRlZCBpbiBjb21tdW5pY2F0aW5nIHRoZSBmaXJlIG9mIG91ciBwYXNzaW9uCnRvIHRoZSBqdWRnZTogY29uc2VxdWVudGx5LCB3ZSBjYW4gaGF2ZSBubyBob3BlCm9mIG1vdmluZyBoaW0gaWYgd2Ugc3BlYWsgd2l0aCBsYW5ndW9yIGFuZCBpbmRpZmZlcmVuY2UsIG5vciBvZiBwcmV2ZW50aW5nIGhpbSBmcm9tIHlpZWxkaW5nIHRvIHRoZQpuYXJjb3RpYyBpbmZsdWVuY2Ugb2Ygb3VyIG93biB5YXducy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBBIHByb29mIG9mIHRoaXMKaXMgZ2l2ZW4gYnkgYWN0b3JzIGluIHRoZSB0aGVhdHJlLiBGb3IgdGhleSBhZGQgc28KbXVjaCB0byB0aGUgY2hhcm0gZXZlbiBvZiB0aGUgZ3JlYXRlc3QgcG9ldHMsIHRoYXQKdGhlIHZlcnNlIG1vdmVzIHVzIGZhciBtb3JlIHdoZW4gaGVhcmQgdGhhbiB3aGVuCnJlYWQsIHdoaWxlIHRoZXkgc3VjY2VlZCBpbiBzZWN1cmluZyBhIGhlYXJpbmcgZXZlbgpmb3IgdGhlIG1vc3Qgd29ydGhsZXNzIGF1dGhvcnMsIHdpdGggdGhlIHJlc3VsdAp0aGF0IHRoZXkgcmVwZWF0ZWRseSB3aW4gYSB3ZWxjb21lIG9uIHRoZQpzdGFnZSB0aGF0IGlzIGRlbmllZCB0aGVtIGluIHRoZSBsaWJyYXJ5LjwvdHJhbnNsYXRpb24+"
translation['11.6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiBOb3cKaWYgZGVsaXZlcnkgY2FuIGNvdW50IGZvciBzbyBtdWNoIGluIHRoZW1lcwp3aGljaCB3ZSBrbm93IHRvIGJlIGZpY3RpdGlvdXMgYW5kIGRldm9pZCBvZiByZWFsaXR5LAphcyB0byBhcm91c2Ugb3VyIGFuZ2VyLCBvdXIgdGVhcnMgb3Igb3VyIGFueGlldHksIGhvdwptdWNoIGdyZWF0ZXIgbXVzdCBpdHMgZWZmZWN0IGJlIHdoZW4gd2UgYWN0dWFsbHkKYmVsaWV2ZSB3aGF0IHdlIGhlYXI/IEZvciBteSBvd24gcGFydCBJIHdvdWxkCm5vdCBoZXNpdGF0ZSB0byBhc3NlcnQgdGhhdCBhIG1lZGlvY3JlIHNwZWVjaCBzdXBwb3J0ZWQgYnkgYWxsIHRoZSBwb3dlciBvZiBkZWxpdmVyeSB3aWxsIGJlIG1vcmUKaW1wcmVzc2l2ZSB0aGFuIHRoZSBiZXN0IHNwZWVjaCB1bmFjY29tcGFuaWVkIGJ5CnN1Y2ggcG93ZXIuPC90cmFuc2xhdGlvbj4="
translation['11.6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBJdCB3YXMgZm9yIHRoaXMgcmVhc29uIHRoYXQgRGVtb3N0aGVuZXMsIHdoZW4gYXNrZWQgd2hhdCB3YXMgdGhlIG1vc3QgaW1wb3J0YW50CnRoaW5nIGluIG9yYXRvcnksIGdhdmUgdGhlIHBhbG0gdG8gZGVsaXZlcnkgYW5kCmFzc2lnbmVkIGl0IHNlY29uZCBhbmQgdGhpcmQgcGxhY2UgYXMgd2VsbCwgdW50aWwKaGlzIHF1ZXN0aW9uZXIgY2Vhc2VkIHRvIHRyb3VibGUgaGltLiBXZSBhcmUKdGhlcmVmb3JlIGFsbW9zdCBqdXN0aWZpZWQgaW4gY29uY2x1ZGluZyB0aGF0IGhlCnJlZ2FyZGVkIGl0IG5vdCBtZXJlbHkgYXMgdGhlIGZpcnN0LCBidXQgYXMgdGhlIG9ubHkKdmlydHVlIG9mIG9yYXRvcnkuPC90cmFuc2xhdGlvbj4="
translation['11.6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBUaGlzIGV4cGxhaW5zIHdoeSBoZSBzdHVkaWVkCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yNDciIC8+Cgp1bmRlciB0aGUgaW5zdHJ1Y3Rpb24gb2YgdGhlIGFjdG9yIEFuZHJvbmljdXMgd2l0aApzdWNoIGRpbGlnZW5jZSBhbmQgc3VjY2VzcyBhcyB0aG9yb3VnaGx5IHRvIGp1c3RpZnkKdGhlIHJlbWFyayBtYWRlIGJ5IEFlc2NoaW5lcyB0byB0aGUgUmhvZGlhbnMgd2hlbgp0aGV5IGV4cHJlc3NlZCB0aGVpciBhZG1pcmF0aW9uIG9mIHRoZSBzcGVlY2ggb2YKRGVtb3N0aGVuZXMgb24gYmVoYWxmIG9mIEN0ZXNpcGhvbiwgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hhdCB3b3VsZAp5b3UgaGF2ZSBzYWlkIGlmIHlvdSBoYWQgaGVhcmQgaGltIHlvdXJzZWx2ZXM/PC9xdW90ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gSUlJLiBsdmkuIDIxMy4gQWVzY2hpbmNzIGluIGV4aWxlIGF0IFJob2RlcyBmaXJzdApyZWNpdGVkIGhpcyBvd24gc3BlZWNoIGFnYWluc3QgQ3Rlc2lwaG9uLCBhbmQgdGhlbiBieSBzcGVjaWFsCnJlcXVlc3QgcmVhZCBEZW1vc3RoZW5lcycgcmVwbHksIHRoZSBmYW1vdXMgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGUgQ29yb25hLjwvaGk+PC9ub3RlPgpDaWNlcm8gbGlrZXdpc2UgcmVnYXJkcyA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5kZSBPci48L2hpPiBJSUkuIGx2aS4gMjEzLiBBZXNjaGluY3MgaW4gZXhpbGUgYXQgUmhvZGVzIGZpcnN0CnJlY2l0ZWQgaGlzIG93biBzcGVlY2ggYWdhaW5zdCBDdGVzaXBob24sIGFuZCB0aGVuIGJ5IHNwZWNpYWwKcmVxdWVzdCByZWFkIERlbW9zdGhlbmVzJyByZXBseSwgdGhlIGZhbW91cyA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5EZSBDb3JvbmEuPC9oaT48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5hY3Rpb248L2hpPiBhcyB0aGUgc3VwcmVtZSBlbGVtZW50Cm9mIG9yYXRvcnkuPC90cmFuc2xhdGlvbj4="
translation['11.6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiBIZSByZWNvcmRzIHRoYXQgR25hZXVzIExlbnR1bHVzIGFjcXVpcmVkIGEgZ3JlYXRlciByZXB1dGF0aW9uIGJ5IGhpcyBkZWxpdmVyeSB0aGFuCmJ5IGhpcyBhY3R1YWwgZWxvcXVlbmNlLCBhbmQgdGhhdCBHYWlucyBHcmFjY2h1cwpieSB0aGUgc2FtZSBtZWFucyBzdGlycmVkIHRoZSB3aG9sZSBSb21hbiBwZW9wbGUKdG8gdGVhcnMgd2hlbiBoZSBiZXdhaWxlZCBoaXMgYnJvdGhlcidzIGRlYXRoLAp3aGlsZSBBbnRvbml1cyBhbmQgQ3Jhc3N1cyBwcm9kdWNlZCBhIGdyZWF0IGltcHJlc3Npb24gYnkgdGhlaXIgY29tbWFuZCBvZiB0aGlzIHF1YWxpdHksIHRob3VnaAp0aGUgZ3JlYXRlc3Qgb2YgYWxsIHdhcyB0aGF0IHByb2R1Y2VkIGJ5IFF1aW50dXMKSG9ydGVuc2l1cy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QnJ1dC48L2hpPiBseHZpLiwgbHh4eGl4LiwgeHh4dmlpaS4sIHhsaWlpLiwgbHh4eHZpaWkuPC9ub3RlPiBUaGlzIHN0YXRlbWVudCBpcyBzdHJvbmdseSBzdXBwb3J0ZWQKYnkgdGhlIGZhY3QgdGhhdCB0aGUgbGF0dGVyJ3Mgd3JpdGluZ3MgZmFsbCBzbyBmYXIKc2hvcnQgb2YgdGhlIHJlcHV0YXRpb24gd2hpY2ggZm9yIHNvIGxvbmcgc2VjdXJlZApoaW0gdGhlIGZpcnN0IHBsYWNlIGFtb25nIG9yYXRvcnMsIHRoZW4gZm9yIGEKd2hpbGUgY2F1c2VkIGhpbSB0byBiZSByZWdhcmRlZCBhcyBDaWNlcm8ncyByaXZhbCwKYW5kIGZpbmFsbHksIGZvciB0aGUgcmVtYWluZGVyIG9mIGhpcyBsaWZlIGFzc2lnbmVkCmhpbSBhIHBvc2l0aW9uIHNlY29uZCBvbmx5IHRvIHRoYXQgb2YgQ2ljZXJvLCB0aGF0CmhpcyBzcGVha2luZyBtdXN0IGNsZWFybHkgaGF2ZSBwb3NzZXNzZWQgc29tZQpjaGFybSB3aGljaCB3ZSBmYWlsIHRvIGZpbmQgd2hlbiB3ZSByZWFkIGhpbS4KPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QnJ1dC48L2hpPiBseHZpLiwgbHh4eGl4LiwgeHh4dmlpaS4sIHhsaWlpLiwgbHh4eHZpaWkuPC90cmFuc2xhdGlvbj4="
translation['11.6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCwgaW5kZWVkLCBzaW5jZSB3b3JkcyBpbiB0aGVtc2VsdmVzIGNvdW50IGZvcgptdWNoIGFuZCB0aGUgdm9pY2UgYWRkcyBhIGZvcmNlIG9mIGl0cyBvd24gdG8gdGhlCm1hdHRlciBvZiB3aGljaCBpdCBzcGVha3MsIHdoaWxlIGdlc3R1cmUgYW5kIG1vdGlvbgphcmUgZnVsbCBvZiBzaWduaWZpY2FuY2UsIHdlIG1heSBiZSBzdXJlIG9mIGZpbmRpbmcKc29tZXRoaW5nIGxpa2UgcGVyZmVjdGlvbiB3aGVuIGFsbCB0aGVzZSBxdWFsaXRpZXMKYXJlIGNvbWJpbmVkLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwIiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIGFyZSBzb21lLCBob3dldmVyLCB3aG8gY29uc2lkZXIgdGhhdCBkZWxpdmVyeSB3aGljaCBvd2VzIG5vdGhpbmcgdG8gYXJ0IGFuZCBldmVyeXRoaW5nIHRvCm5hdHVyYWwgaW1wdWxzZSBpcyBtb3JlIGZvcmNpYmxlLCBhbmQgaW4gZmFjdCB0aGUgb25seQpmb3JtIG9mIGRlbGl2ZXJ5IHdoaWNoIGlzIHdvcnRoeSBvZiBhIG1hbmx5IHNwZWFrZXIuCgo8cGIgaWQ9InAuMjQ5IiAvPgoKQnV0IHRoZXNlIHBlcnNvbnMgYXJlIGFzIGEgcnVsZSBpZGVudGljYWwsIGVpdGhlciB3aXRoCnRob3NlIHdobyBhcmUgaW4gdGhlIGhhYml0IG9mIGRpc2FwcHJvdmluZyBvZiBjYXJlLAphcnQsIHBvbGlzaCBhbmQgZXZlcnkgZm9ybSBvZiBwcmVtZWRpdGF0aW9uIGluIGFjdHVhbApzcGVha2luZywgYXMgYmVpbmcgYWZmZWN0ZWQgYW5kIHVubmF0dXJhbCwgb3IgZWxzZQp3aXRoIHRob3NlIHdobyAobGlrZSBMdWNpdXMgQ290dGEsIGFjY29yZGluZyB0bwpDaWNlcm8pPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gSUlJLiB4aS4gNDIuIDxoaSByZW5kPSJpdGFsaWNzIj5CcnV0LjwvaGk+IGx4eGl2LiAyNTkuPC9ub3RlPiBhZmZlY3QgdGhlIGltaXRhdGlvbiBvZiBhbmNpZW50IHdyaXRlcnMgYm90aAppbiB0aGVpciBjaG9pY2Ugb2Ygd29yZHMgYW5kIGV2ZW4gaW4gdGhlIHJ1ZGVuZXNzIG9mCnRoZWlyIGludG9uYXRpb24gYW5kIHJoeXRobS48bWlsZXN0b25lIG49IjExIiB1bml0PSJzZWN0aW9uIiAvPiBUaG9zZSwgaG93ZXZlciwgd2hvCnRoaW5rIGl0IHN1ZmZpY2llbnQgZm9yIG1lbiB0byBiZSBib3JuIHRvIGVuYWJsZSB0aGVtCnRvIGJlY29tZSBvcmF0b3JzLCBhcmUgd2VsY29tZSB0byB0aGVpciBvcGluaW9uLCBhbmQKSSBtdXN0IGFzayB0aGVtIHRvIGJlIGluZHVsZ2VudCB0byB0aGUgZWZmb3J0cyB0bwp3aGljaCBJIGFtIGNvbW1pdHRlZCBieSBteSBiZWxpZWYgdGhhdCB3ZSBjYW5ub3QKaG9wZSB0byBhdHRhaW4gcGVyZmVjdGlvbiB1bmxlc3MgbmF0dXJlIGlzIGFzc2lzdGVkIGJ5CnN0dWR5LiBCdXQgSSB3aWxsIG5vdCBiZSBzbyBvYnN0aW5hdGUgYXMgdG8gZGVueQp0aGF0IHRvIG5hdHVyZSBtdXN0IGJlIGFzc2lnbmVkIHRoZSBmaXJzdCBwbGFjZS48bWlsZXN0b25lIG49IjEyIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IKYSBnb29kIGRlbGl2ZXJ5IGlzIHVuZG91YnRlZGx5IGltcG9zc2libGUgZm9yIG9uZQp3aG8gY2Fubm90IHJlbWVtYmVyIHdoYXQgaGUgaGFzIHdyaXR0ZW4sIG9yIGxhY2tzCnRoZSBxdWljayBmYWNpbGl0eSBvZiBzcGVlY2ggcmVxdWlyZWQgYnkgc3VkZGVuCmVtZXJnZW5jaWVzLCBvciBpcyBoYW1wZXJlZCBieSBpbmN1cmFibGUgaW1wZWRpbWVudHMgb2Ygc3BlZWNoLiBBZ2FpbiwgcGh5c2ljYWwgdW5jb3V0aG5lc3MgbWF5CmJlIHN1Y2ggdGhhdCBubyBhcnQgY2FuIHJlbWVkeSBpdCw8bWlsZXN0b25lIG49IjEzIiB1bml0PSJzZWN0aW9uIiAvPiB3aGlsZSBhIHdlYWsKdm9pY2UgaXMgaW5jb21wYXRpYmxlIHdpdGggZmlyc3QtcmF0ZSBleGNlbGxlbmNlIGluCmRlbGl2ZXJ5LiBGb3Igd2UgbWF5IGVtcGxveSBhIGdvb2QsIHN0cm9uZyB2b2ljZQphcyB3ZSB3aWxsOyB3aGVyZWFzIG9uZSB0aGF0IGlzIHVnbHkgb3IgZmVlYmxlIG5vdApvbmx5IHByZXZlbnRzIHVzIGZyb20gcHJvZHVjaW5nIGEgbnVtYmVyIG9mIGVmZmVjdHMsCnN1Y2ggYXMgYSA8aGkgcmVuZD0iaXRhbGljcyI+Y3Jlc2NlbmRvPC9oaT4gb3IgYSBzdWRkZW4gPGhpIHJlbmQ9Iml0YWxpY3MiPmZvcnRpc3NpbW8sPC9oaT4gYnV0IGF0CnRpbWVzIGZvcmNlcyBmYXVsdHMgdXBvbiB1cywgbWFraW5nIHVzIGRyb3AgdGhlCnZvaWNlLCBhbHRlciBpdHMgcGl0Y2ggYW5kIHJlZnJlc2ggdGhlIGhvYXJzZW5lc3Mgb2YKdGhlIHRocm9hdCBhbmQgZmF0aWd1ZSBvZiB0aGUgbHVuZ3MgYnkgYSBoaWRlb3VzCmNoYW50aW5nIGludG9uYXRpb24uIEhvd2V2ZXIsIGxldCBtZSBub3cgdHVybiB0bwpjb25zaWRlciB0aGUgc3BlYWtlciBvbiB3aG9tIG15IHByZWNlcHRzIHdpbGwgbm90CmJlIHdhc3RlZC48L3A+CjwvdHJhbnNsYXRpb24+"
translation['11.6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBhcmUgc29tZSwgaG93ZXZlciwgd2hvIGNvbnNpZGVyIHRoYXQgZGVsaXZlcnkgd2hpY2ggb3dlcyBub3RoaW5nIHRvIGFydCBhbmQgZXZlcnl0aGluZyB0bwpuYXR1cmFsIGltcHVsc2UgaXMgbW9yZSBmb3JjaWJsZSwgYW5kIGluIGZhY3QgdGhlIG9ubHkKZm9ybSBvZiBkZWxpdmVyeSB3aGljaCBpcyB3b3J0aHkgb2YgYSBtYW5seSBzcGVha2VyLgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjQ5IiAvPgoKQnV0IHRoZXNlIHBlcnNvbnMgYXJlIGFzIGEgcnVsZSBpZGVudGljYWwsIGVpdGhlciB3aXRoCnRob3NlIHdobyBhcmUgaW4gdGhlIGhhYml0IG9mIGRpc2FwcHJvdmluZyBvZiBjYXJlLAphcnQsIHBvbGlzaCBhbmQgZXZlcnkgZm9ybSBvZiBwcmVtZWRpdGF0aW9uIGluIGFjdHVhbApzcGVha2luZywgYXMgYmVpbmcgYWZmZWN0ZWQgYW5kIHVubmF0dXJhbCwgb3IgZWxzZQp3aXRoIHRob3NlIHdobyAobGlrZSBMdWNpdXMgQ290dGEsIGFjY29yZGluZyB0bwpDaWNlcm8pPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIE9yLjwvaGk+IElJSS4geGkuIDQyLiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5CcnV0LjwvaGk+IGx4eGl2LiAyNTkuPC9ub3RlPiBhZmZlY3QgdGhlIGltaXRhdGlvbiBvZiBhbmNpZW50IHdyaXRlcnMgYm90aAppbiB0aGVpciBjaG9pY2Ugb2Ygd29yZHMgYW5kIGV2ZW4gaW4gdGhlIHJ1ZGVuZXNzIG9mCnRoZWlyIGludG9uYXRpb24gYW5kIHJoeXRobS48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5kZSBPci48L2hpPiBJSUkuIHhpLiA0Mi4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QnJ1dC48L2hpPiBseHhpdi4gMjU5LjwvdHJhbnNsYXRpb24+"
translation['11.6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhvc2UsIGhvd2V2ZXIsIHdobwp0aGluayBpdCBzdWZmaWNpZW50IGZvciBtZW4gdG8gYmUgYm9ybiB0byBlbmFibGUgdGhlbQp0byBiZWNvbWUgb3JhdG9ycywgYXJlIHdlbGNvbWUgdG8gdGhlaXIgb3BpbmlvbiwgYW5kCkkgbXVzdCBhc2sgdGhlbSB0byBiZSBpbmR1bGdlbnQgdG8gdGhlIGVmZm9ydHMgdG8Kd2hpY2ggSSBhbSBjb21taXR0ZWQgYnkgbXkgYmVsaWVmIHRoYXQgd2UgY2Fubm90CmhvcGUgdG8gYXR0YWluIHBlcmZlY3Rpb24gdW5sZXNzIG5hdHVyZSBpcyBhc3Npc3RlZCBieQpzdHVkeS4gQnV0IEkgd2lsbCBub3QgYmUgc28gb2JzdGluYXRlIGFzIHRvIGRlbnkKdGhhdCB0byBuYXR1cmUgbXVzdCBiZSBhc3NpZ25lZCB0aGUgZmlyc3QgcGxhY2UuPC90cmFuc2xhdGlvbj4="
translation['11.6.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCmEgZ29vZCBkZWxpdmVyeSBpcyB1bmRvdWJ0ZWRseSBpbXBvc3NpYmxlIGZvciBvbmUKd2hvIGNhbm5vdCByZW1lbWJlciB3aGF0IGhlIGhhcyB3cml0dGVuLCBvciBsYWNrcwp0aGUgcXVpY2sgZmFjaWxpdHkgb2Ygc3BlZWNoIHJlcXVpcmVkIGJ5IHN1ZGRlbgplbWVyZ2VuY2llcywgb3IgaXMgaGFtcGVyZWQgYnkgaW5jdXJhYmxlIGltcGVkaW1lbnRzIG9mIHNwZWVjaC4gQWdhaW4sIHBoeXNpY2FsIHVuY291dGhuZXNzIG1heQpiZSBzdWNoIHRoYXQgbm8gYXJ0IGNhbiByZW1lZHkgaXQsPC90cmFuc2xhdGlvbj4="
translation['11.6.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gd2hpbGUgYSB3ZWFrCnZvaWNlIGlzIGluY29tcGF0aWJsZSB3aXRoIGZpcnN0LXJhdGUgZXhjZWxsZW5jZSBpbgpkZWxpdmVyeS4gRm9yIHdlIG1heSBlbXBsb3kgYSBnb29kLCBzdHJvbmcgdm9pY2UKYXMgd2Ugd2lsbDsgd2hlcmVhcyBvbmUgdGhhdCBpcyB1Z2x5IG9yIGZlZWJsZSBub3QKb25seSBwcmV2ZW50cyB1cyBmcm9tIHByb2R1Y2luZyBhIG51bWJlciBvZiBlZmZlY3RzLApzdWNoIGFzIGEgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Y3Jlc2NlbmRvPC9oaT4gb3IgYSBzdWRkZW4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Zm9ydGlzc2ltbyw8L2hpPiBidXQgYXQKdGltZXMgZm9yY2VzIGZhdWx0cyB1cG9uIHVzLCBtYWtpbmcgdXMgZHJvcCB0aGUKdm9pY2UsIGFsdGVyIGl0cyBwaXRjaCBhbmQgcmVmcmVzaCB0aGUgaG9hcnNlbmVzcyBvZgp0aGUgdGhyb2F0IGFuZCBmYXRpZ3VlIG9mIHRoZSBsdW5ncyBieSBhIGhpZGVvdXMKY2hhbnRpbmcgaW50b25hdGlvbi4gSG93ZXZlciwgbGV0IG1lIG5vdyB0dXJuIHRvCmNvbnNpZGVyIHRoZSBzcGVha2VyIG9uIHdob20gbXkgcHJlY2VwdHMgd2lsbCBub3QKYmUgd2FzdGVkLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE0IiB1bml0PSJzZWN0aW9uIiAvPkFsbCBkZWxpdmVyeSwgYXMgSSBoYXZlIGFscmVhZHkgc2FpZCwgaXMgY29uY2VybmVkCndpdGggdHdvIGRpZmZlcmVudCB0aGluZ3MsIG5hbWVseSwgdm9pY2UgYW5kIGdlc3R1cmUsCgo8cGIgaWQ9InAuMjUxIiAvPgoKb2Ygd2hpY2ggdGhlIG9uZSBhcHBlYWxzIHRvIHRoZSBleWUgYW5kIHRoZSBvdGhlcgp0byB0aGUgZWFyLCB0aGUgdHdvIHNlbnNlcyBieSB3aGljaCBhbGwgZW1vdGlvbgpyZWFjaGVzIHRoZSBzb3VsLiBCdXQgdGhlIHZvaWNlIGhhcyB0aGUgZmlyc3QgY2xhaW0Kb24gb3VyIGF0dGVudGlvbiwgc2luY2UgZXZlbiBvdXIgZ2VzdHVyZSBpcyBhZGFwdGVkCnRvIHN1aXQgaXQuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BbGwgZGVsaXZlcnksIGFzIEkgaGF2ZSBhbHJlYWR5IHNhaWQsIGlzIGNvbmNlcm5lZAp3aXRoIHR3byBkaWZmZXJlbnQgdGhpbmdzLCBuYW1lbHksIHZvaWNlIGFuZCBnZXN0dXJlLAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjUxIiAvPgoKb2Ygd2hpY2ggdGhlIG9uZSBhcHBlYWxzIHRvIHRoZSBleWUgYW5kIHRoZSBvdGhlcgp0byB0aGUgZWFyLCB0aGUgdHdvIHNlbnNlcyBieSB3aGljaCBhbGwgZW1vdGlvbgpyZWFjaGVzIHRoZSBzb3VsLiBCdXQgdGhlIHZvaWNlIGhhcyB0aGUgZmlyc3QgY2xhaW0Kb24gb3VyIGF0dGVudGlvbiwgc2luY2UgZXZlbiBvdXIgZ2VzdHVyZSBpcyBhZGFwdGVkCnRvIHN1aXQgaXQuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUgZmlyc3QgcG9pbnQgd2hpY2ggY2FsbHMgZm9yIGNvbnNpZGVyYXRpb24gaXMgdGhlCm5hdHVyZSBvZiB0aGUgdm9pY2UsIHRoZSBzZWNvbmQgdGhlIG1hbm5lciBpbiB3aGljaAppdCBpcyB1c2VkLiBUaGUgbmF0dXJlIG9mIHRoZSB2b2ljZSBkZXBlbmRzIG9uIGl0cwpxdWFudGl0eSBhbmQgcXVhbGl0eS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTUiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBxdWVzdGlvbiBvZiBxdWFudGl0eSBpcwp0aGUgc2ltcGxlciBvZiB0aGUgdHdvLCBzaW5jZSBhcyBhIHJ1bGUgaXQgaXMgZWl0aGVyCnN0cm9uZyBvciB3ZWFrLCBhbHRob3VnaCB0aGVyZSBhcmUgY2VydGFpbiBraW5kcyBvZgp2b2ljZSB3aGljaCBmYWxsIGJldHdlZW4gdGhlc2UgZXh0cmVtZXMsIGFuZCB0aGVyZQphcmUgYSBudW1iZXIgb2YgZ3JhZGF0aW9ucyBmcm9tIHRoZSBoaWdoZXN0IG5vdGVzIHRvCnRoZSBsb3dlc3QgYW5kIGZyb20gdGhlIGxvd2VzdCB0byB0aGUgaGlnaGVzdC4KUXVhbGl0eSwgb24gdGhlIG90aGVyIGhhbmQsIHByZXNlbnRzIG1vcmUgdmFyaWF0aW9uczsKZm9yIHRoZSB2b2ljZSBtYXkgYmUgY2xlYXIgb3IgaHVza3ksIGZ1bGwgb3IgdGhpbiwKc21vb3RoIG9yIGhhcnNoLCBvZiB3aWRlIG9yIG5hcnJvdyBjb21wYXNzLCByaWdpZCBvcgpmbGV4aWJsZSwgYW5kIHNoYXJwIG9yIGZsYXQsIHdoaWxlIGx1bmctcG93ZXIgbWF5IGJlCmdyZWF0IG9yIHNtYWxsLjxtaWxlc3RvbmUgbj0iMTYiIHVuaXQ9InNlY3Rpb24iIC8+IEl0IGlzIG5vdCBuZWNlc3NhcnkgZm9yIG15IHB1cnBvc2UKdG8gZW5xdWlyZSBpbnRvIHRoZSBjYXVzZXMgd2hpY2ggZ2l2ZSByaXNlIHRvIHRoZXNlCnBlY3VsaWFyaXRpZXMuIEkgbmVlZCBub3QgcmFpc2UgdGhlIHF1ZXN0aW9uIHdoZXRoZXIKdGhlIGRpZmZlcmVuY2UgbGllcyBpbiB0aG9zZSBvcmdhbnMgYnkgd2hpY2ggdGhlCmJyZWF0aCBpcyBwcm9kdWNlZCwgb3IgaW4gdGhvc2Ugd2hpY2ggZm9ybSB0aGUKY2hhbm5lbHMgZm9yIHRoZSB2b2ljZSBpdHNlbGY7IHdoZXRoZXIgdGhlIHZvaWNlIGhhcwphIGNoYXJhY3RlciBvZiBpdHMgb3duIG9yIGRlcGVuZHMgb24gdGhlIG1vdGlvbnMKd2hpY2ggcHJvZHVjZSBpdDsgd2hldGhlciBpdCBiZSB0aGUgc3RyZW5ndGggb2YgdGhlCmx1bmdzLCBjaGVzdCBvciB0aGUgdm9jYWwgb3JnYW5zIHRoZW1zZWx2ZXMgdGhhdAphZmZvcmRzIGl0IG1vc3QgYXNzaXN0YW5jZSwgc2luY2UgdGhlIGNvLW9wZXJhdGlvbiBvZgphbGwgdGhlc2Ugb3JnYW5zIGlzIHJlcXVpcmVkLiBGb3IgZXhhbXBsZSwgaXQgaXMgbm90CnRoZSBtb3V0aCBvbmx5IHRoYXQgcHJvZHVjZXMgc3dlZXRuZXNzIG9mIHRvbmU7IGl0CnJlcXVpcmVzIHRoZSBhc3Npc3RhbmNlIG9mIHRoZSBub3N0cmlscyBhcyB3ZWxsLCB3aGljaApjYXJyeSBvZmYgd2hhdCBJIG1heSBkZXNjcmliZSBhcyB0aGUgb3ZlcmZsb3cgb2YgdGhlCnZvaWNlLiBUaGUgaW1wb3J0YW50IGZhY3QgaXMgdGhhdCB0aGUgdG9uZSBtdXN0IGJlCmFncmVlYWJsZSBhbmQgbm90IGhhcnNoLjxtaWxlc3RvbmUgbj0iMTciIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBtZXRob2RzIG9mIHVzaW5nIHRoZQoKPHBiIGlkPSJwLjI1MyIgLz4KCnZvaWNlIHByZXNlbnQgZ3JlYXQgdmFyaWV0eS4gRm9yIGluIGFkZGl0aW9uIHRvIHRoZQp0cmlwbGUgZGl2aXNpb24gb2YgYWNjZW50cyBpbnRvIHNoYXJwLCBncmF2ZSBhbmQgY2lyY3VtZmxleCwgdGhlcmUgYXJlIG1hbnkgb3RoZXIgZm9ybXMgb2YgaW50b25hdGlvbgp3aGljaCBhcmUgcmVxdWlyZWQ6IGl0IG1heSBiZSBpbnRlbnNlIG9yIHJlbGF4ZWQsCmhpZ2ggb3IgbG93LCBhbmQgbWF5IG1vdmUgaW4gc2xvdyBvciBxdWljayB0aW1lLgo8bWlsZXN0b25lIG49IjE4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBoZXJlIGFnYWluIHRoZXJlIGFyZSBtYW55IGludGVybWVkaWF0ZQpncmFkYXRpb25zIGJldHdlZW4gdGhlIHR3byBleHRyZW1lcywgYW5kIGp1c3QgYXMKdGhlIGZhY2UsIGFsdGhvdWdoIGl0IGNvbnNpc3RzIG9mIGEgbGltaXRlZCBudW1iZXIKb2YgZmVhdHVyZXMsIHlldCBwb3NzZXNzZXMgaW5maW5pdGUgdmFyaWV0eSBvZiBleHByZXNzaW9uLApzbyBpdCBpcyB3aXRoIHRoZSB2b2ljZTogZm9yIHRob3VnaCBpdCBwb3NzZXNzZXMgYnV0CmZldyB2YXJpZXRpZXMgdG8gd2hpY2ggd2UgY2FuIGdpdmUgYSBuYW1lLCB5ZXQgZXZlcnkKaHVtYW4gYmVpbmcgcG9zc2Vzc2VzIGEgZGlzdGluY3RpdmUgdm9pY2Ugb2YgaGlzCm93biwgd2hpY2ggaXMgYXMgZWFzaWx5IGRpc3Rpbmd1aXNoZWQgYnkgdGhlIGVhciBhcwphcmUgZmFjaWFsIGNoYXJhY3RlcmlzdGljcyBieSB0aGUgZXllLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.6.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIHF1ZXN0aW9uIG9mIHF1YW50aXR5IGlzCnRoZSBzaW1wbGVyIG9mIHRoZSB0d28sIHNpbmNlIGFzIGEgcnVsZSBpdCBpcyBlaXRoZXIKc3Ryb25nIG9yIHdlYWssIGFsdGhvdWdoIHRoZXJlIGFyZSBjZXJ0YWluIGtpbmRzIG9mCnZvaWNlIHdoaWNoIGZhbGwgYmV0d2VlbiB0aGVzZSBleHRyZW1lcywgYW5kIHRoZXJlCmFyZSBhIG51bWJlciBvZiBncmFkYXRpb25zIGZyb20gdGhlIGhpZ2hlc3Qgbm90ZXMgdG8KdGhlIGxvd2VzdCBhbmQgZnJvbSB0aGUgbG93ZXN0IHRvIHRoZSBoaWdoZXN0LgpRdWFsaXR5LCBvbiB0aGUgb3RoZXIgaGFuZCwgcHJlc2VudHMgbW9yZSB2YXJpYXRpb25zOwpmb3IgdGhlIHZvaWNlIG1heSBiZSBjbGVhciBvciBodXNreSwgZnVsbCBvciB0aGluLApzbW9vdGggb3IgaGFyc2gsIG9mIHdpZGUgb3IgbmFycm93IGNvbXBhc3MsIHJpZ2lkIG9yCmZsZXhpYmxlLCBhbmQgc2hhcnAgb3IgZmxhdCwgd2hpbGUgbHVuZy1wb3dlciBtYXkgYmUKZ3JlYXQgb3Igc21hbGwuPC90cmFuc2xhdGlvbj4="
translation['11.6.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz4gSXQgaXMgbm90IG5lY2Vzc2FyeSBmb3IgbXkgcHVycG9zZQp0byBlbnF1aXJlIGludG8gdGhlIGNhdXNlcyB3aGljaCBnaXZlIHJpc2UgdG8gdGhlc2UKcGVjdWxpYXJpdGllcy4gSSBuZWVkIG5vdCByYWlzZSB0aGUgcXVlc3Rpb24gd2hldGhlcgp0aGUgZGlmZmVyZW5jZSBsaWVzIGluIHRob3NlIG9yZ2FucyBieSB3aGljaCB0aGUKYnJlYXRoIGlzIHByb2R1Y2VkLCBvciBpbiB0aG9zZSB3aGljaCBmb3JtIHRoZQpjaGFubmVscyBmb3IgdGhlIHZvaWNlIGl0c2VsZjsgd2hldGhlciB0aGUgdm9pY2UgaGFzCmEgY2hhcmFjdGVyIG9mIGl0cyBvd24gb3IgZGVwZW5kcyBvbiB0aGUgbW90aW9ucwp3aGljaCBwcm9kdWNlIGl0OyB3aGV0aGVyIGl0IGJlIHRoZSBzdHJlbmd0aCBvZiB0aGUKbHVuZ3MsIGNoZXN0IG9yIHRoZSB2b2NhbCBvcmdhbnMgdGhlbXNlbHZlcyB0aGF0CmFmZm9yZHMgaXQgbW9zdCBhc3Npc3RhbmNlLCBzaW5jZSB0aGUgY28tb3BlcmF0aW9uIG9mCmFsbCB0aGVzZSBvcmdhbnMgaXMgcmVxdWlyZWQuIEZvciBleGFtcGxlLCBpdCBpcyBub3QKdGhlIG1vdXRoIG9ubHkgdGhhdCBwcm9kdWNlcyBzd2VldG5lc3Mgb2YgdG9uZTsgaXQKcmVxdWlyZXMgdGhlIGFzc2lzdGFuY2Ugb2YgdGhlIG5vc3RyaWxzIGFzIHdlbGwsIHdoaWNoCmNhcnJ5IG9mZiB3aGF0IEkgbWF5IGRlc2NyaWJlIGFzIHRoZSBvdmVyZmxvdyBvZiB0aGUKdm9pY2UuIFRoZSBpbXBvcnRhbnQgZmFjdCBpcyB0aGF0IHRoZSB0b25lIG11c3QgYmUKYWdyZWVhYmxlIGFuZCBub3QgaGFyc2guPC90cmFuc2xhdGlvbj4="
translation['11.6.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIG1ldGhvZHMgb2YgdXNpbmcgdGhlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yNTMiIC8+Cgp2b2ljZSBwcmVzZW50IGdyZWF0IHZhcmlldHkuIEZvciBpbiBhZGRpdGlvbiB0byB0aGUKdHJpcGxlIGRpdmlzaW9uIG9mIGFjY2VudHMgaW50byBzaGFycCwgZ3JhdmUgYW5kIGNpcmN1bWZsZXgsIHRoZXJlIGFyZSBtYW55IG90aGVyIGZvcm1zIG9mIGludG9uYXRpb24Kd2hpY2ggYXJlIHJlcXVpcmVkOiBpdCBtYXkgYmUgaW50ZW5zZSBvciByZWxheGVkLApoaWdoIG9yIGxvdywgYW5kIG1heSBtb3ZlIGluIHNsb3cgb3IgcXVpY2sgdGltZS4KPC90cmFuc2xhdGlvbj4="
translation['11.6.18'] = ""
translation['11.6.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZ29vZCBxdWFsaXRpZXMgb2YgdGhlIHZvaWNlLCBsaWtlIGV2ZXJ5dGhpbmcKZWxzZSwgYXJlIGltcHJvdmVkIGJ5IHRyYWluaW5nIGFuZCBpbXBhaXJlZCBieQpuZWdsZWN0LiBCdXQgdGhlIHRyYWluaW5nIHJlcXVpcmVkIGJ5IHRoZSBvcmF0b3IgaXMKbm90IHRoZSBzYW1lIGFzIHRoYXQgd2hpY2ggaXMgcHJhY3Rpc2VkIGJ5IHRoZSBzaW5naW5nLW1hc3RlciwgYWx0aG91Z2ggdGhlIHR3byBtZXRob2RzIGhhdmUgbWFueQpwb2ludHMgaW4gY29tbW9uLiBJbiBib3RoIGNhc2VzIHBoeXNpY2FsIHJvYnVzdG5lc3MKaXMgZXNzZW50aWFsIHRvIHNhdmUgdGhlIHZvaWNlIGZyb20gZHdpbmRsaW5nIHRvIHRoZQpmZWVibGUgc2hyaWxsbmVzcyB0aGF0IGNoYXJhY3RlcmlzZXMgdGhlIHZvaWNlcyBvZgpldW51Y2hzLCB3b21lbiBhbmQgaW52YWxpZHMsIGFuZCB0aGUgbWVhbnMgZm9yCmNyZWF0aW5nIHN1Y2ggcm9idXN0bmVzcyBhcmUgdG8gYmUgZm91bmQgaW4gd2Fsa2luZywKcnViYmluZy1kb3duIHdpdGggb2lsLCBhYnN0aW5lbmNlIGZyb20gc2V4dWFsIGludGVyY291cnNlLCBhbiBlYXN5IGRpZ2VzdGlvbiwgYW5kLCBpbiBhIHdvcmQsIGluIHRoZQpzaW1wbGUgbGlmZS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz4gRnVydGhlciwgdGhlIHRocm9hdCBtdXN0IGJlIHNvdW5kLAp0aGF0IGlzIHRvIHNheSwgc29mdCBhbmQgc21vb3RoOyBmb3IgaWYgdGhlIHRocm9hdCBiZQp1bnNvdW5kLCB0aGUgdm9pY2UgaXMgYnJva2VuIG9yIGR1bGxlZCBvciBiZWNvbWVzCmhhcnNoIG9yIHNxdWVha3kuIEZvciBqdXN0IGFzIHRoZSBzb3VuZCBwcm9kdWNlZAppbiB0aGUgcGlwZSBieSB0aGUgc2FtZSB2b2x1bWUgb2YgYnJlYXRoIHZhcmllcwphY2NvcmRpbmcgYXMgdGhlIHN0b3BzIGFyZSBjbG9zZWQgb3Igb3Blbiwgb3IgdGhlCmluc3RydW1lbnQgaXMgY2xvZ2dlZCBvciBjcmFja2VkLCBzbyB0aGUgdm9pY2UgaXMKc3RyYW5nbGVkIGlmIHRoZSB0aHJvYXQgYmUgc3dvbGxlbiwgYW5kIG11ZmZsZWQgaWYgaXQKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjI1NSIgLz4KCmlzIG9ic3RydWN0ZWQsIHdoaWxlIGl0IGJlY29tZXMgcmFzcGluZyBpZiB0aGUgdGhyb2F0CmlzIGluZmxhbWVkLCBhbmQgbWF5IGJlIGNvbXBhcmVkIHRvIGFuIG9yZ2FuIHdpdGgKYnJva2VuIHBpcGVzIGluIGNhc2VzIHdoZXJlIHRoZSB0aHJvYXQgaXMgc3ViamVjdCB0bwpzcGFzbXMuPC90cmFuc2xhdGlvbj4="
translation['11.6.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIHRoZSBwcmVzZW5jZSBvZiBzb21lIG9ic3RhY2xlIG1heQpkaXZpZGUgdGhlIGJyZWF0aCBqdXN0IGFzIGEgcGViYmxlIHdpbGwgZGl2aWRlIHNoYWxsb3cKd2F0ZXJzLCB3aGljaCwgYWx0aG91Z2ggdGhlaXIgY3VycmVudHMgdW5pdGUgYWdhaW4Kc29vbiBhZnRlciB0aGUgb2JzdHJ1Y3Rpb24gaXMgcGFzdCwgc3RpbGwgbGVhdmUgYSBob2xsb3cKc3BhY2UgaW4gcmVhciBvZiB0aGUgb2JqZWN0IHN0cnVjay4gQW4gZXhjZXNzIG9mCm1vaXN0dXJlIGFsc28gaW1wZWRlcyB0aGUgdm9pY2UsIHdoaWxlIGEgZGVmaWNpZW5jeQp3ZWFrZW5zIGl0LiBBcyByZWdhcmRzIGZhdGlndWUsIGl0cyBlZmZlY3QgaXMgdGhlIHNhbWUKYXMgdXBvbiB0aGUgYm9keTogaXQgYWZmZWN0cyB0aGUgdm9pY2Ugbm90IG1lcmVseSBhdAp0aGUgbW9tZW50IG9mIHNwZWFraW5nLCBidXQgZm9yIHNvbWUgdGltZSBhZnRlcndhcmRzLjwvdHJhbnNsYXRpb24+"
translation['11.6.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHdoaWxlIGV4ZXJjaXNlLCB3aGljaCBnaXZlcyBzdHJlbmd0aCBpbgphbGwgY2FzZXMsIGlzIGVxdWFsbHkgbmVjZXNzYXJ5IGJvdGggZm9yIG9yYXRvcnMgYW5kCnNpbmdpbmctbWFzdGVycywgaXQgaXMgYSBkaWZmZXJlbnQga2luZCBvZiBleGVyY2lzZQp3aGljaCB0aGV5IHJlcXVpcmUuIEZvciB0aGUgb3JhdG9yIGlzIHRvbyBtdWNoCm9jY3VwaWVkIGJ5IGNpdmlsIGFmZmFpcnMgdG8gYmUgYWJsZSB0byBhbGxvdCBmaXhlZAp0aW1lcyBmb3IgdGFraW5nIGEgd2FsaywgYW5kIGhlIGNhbm5vdCB0dW5lIGhpcwp2b2ljZSB0aHJvdWdoIGFsbCB0aGUgbm90ZXMgb2YgdGhlIHNjYWxlIG5vciBzcGFyZQppdCBleGVydGlvbiwgc2luY2UgaXQgaXMgZnJlcXVlbnRseSBuZWNlc3NhcnkgZm9yIGhpbQp0byBzcGVhayBpbiBzZXZlcmFsIGNhc2VzIGluIHN1Y2Nlc3Npb24uPC90cmFuc2xhdGlvbj4="
translation['11.6.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz4gTm9yIGlzIHRoZQpzYW1lIHJlZ2ltZSBzdWl0YWJsZSBhcyByZWdhcmRzIGZvb2Q6IGZvciB0aGUgb3JhdG9yCm5lZWRzIGEgc3Ryb25nIGFuZCBlbmR1cmluZyB2b2ljZSByYXRoZXIgdGhhbiBvbmUKd2hpY2ggaXMgc29mdCBhbmQgc3dlZXQsIHdoaWxlIHRoZSBzaW5nZXIgbWVsbG93cyBhbGwKc291bmRzLCBldmVuIHRoZSBoaWdoZXN0LCBieSB0aGUgbW9kdWxhdGlvbiBvZiBoaXMKdm9pY2UsIHdoZXJlYXMgd2UgaGF2ZSBvZnRlbiB0byBzcGVhayBpbiBoYXJzaCBhbmQKYWdpdGF0ZWQgdG9uZXMsIG11c3QgcGFzcyB3YWtlZnVsIG5pZ2h0cywgc3dhbGxvdwp0aGUgc29vdCB0aGF0IGlzIHByb2R1Y2VkIGJ5IHRoZSBtaWRuaWdodCBvaWwgYW5kCnN0aWNrIHRvIG91ciB3b3JrIHRob3VnaCBvdXIgY2xvdGhlcyBiZSBkcmlwcGluZwp3aXRoIHN3ZWF0LjwvdHJhbnNsYXRpb24+"
translation['11.6.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz4gQ29uc2VxdWVudGx5LCB3ZSBtdXN0IG5vdCBhdHRlbXB0IHRvCm1lbGxvdyBvdXIgdm9pY2UgYnkgY29kZGxpbmcgaXQgbm9yIGFjY3VzdG9tIGl0IHRvCnRoZSBjb25kaXRpb25zIHdoaWNoIGl0IHdvdWxkIGxpa2UgdG8gZW5qb3ksIGJ1dApyYXRoZXIgZ2l2ZSBpdCBleGVyY2lzZSBzdWl0ZWQgdG8gdGhlIHRhc2tzIG9uIHdoaWNoCml0IHdpbGwgYmUgZW1wbG95ZWQsIG5ldmVyIGFsbG93aW5nIGl0IHRvIGJlIGltcGFpcmVkCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yNTciIC8+CgpieSBzaWxlbmNlLCBidXQgc3RyZW5ndGhlbmluZyBpdCBieSBwcmFjdGljZSwgd2hpY2gKcmVtb3ZlcyBhbGwgZGlmZmljdWx0aWVzLjwvdHJhbnNsYXRpb24+"
translation['11.6.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIGJlc3QgbWV0aG9kIGZvciBzZWN1cmluZyBzdWNoIGV4ZXJjaXNlIGlzIHRvIGxlYXJuIHBhc3NhZ2VzIGJ5IGhlYXJ0IChmb3IgaWYKd2UgaGF2ZSB0byBzcGVhayBleHRlbXBvcmUsIHRoZSBwYXNzaW9uIGluc3BpcmVkIGJ5Cm91ciB0aGVtZSB3aWxsIGRpc3RyYWN0IHVzIGZyb20gYWxsIGNhcmUgZm9yIG91ciB2b2ljZSksCndoaWxlIHRoZSBwYXNzYWdlcyBzZWxlY3RlZCBmb3IgdGhlIHB1cnBvc2Ugc2hvdWxkCmJlIGFzIHZhcmllZCBhcyBwb3NzaWJsZSwgaW52b2x2aW5nIGEgY29tYmluYXRpb24Kb2YgbG91ZCwgYXJndW1lbnRhdGl2ZSwgY29sbG9xdWlhbCBhbmQgbW9kdWxhdGVkCnV0dGVyYW5jZSwgc28gdGhhdCB3ZSBtYXkgcHJlcGFyZSBvdXJzZWx2ZXMgZm9yIGFsbApleGlnZW5jaWVzIHNpbXVsdGFuZW91c2x5LiBUaGlzIHdpbGwgYmUgc3VmZmljaWVudC48L3RyYW5zbGF0aW9uPg=="
translation['11.6.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz4KT3RoZXJ3aXNlIHlvdXIgZGVsaWNhdGUsIG92ZXIgdHJhaW5lZCB2b2ljZSB3aWxsCnN1Y2N1bWIgYmVmb3JlIGFueSB1bnVzdWFsIGV4ZXJ0aW9uLCBsaWtlIGJvZGllcwphY2N1c3RvbWVkIHRvIHRoZSBvaWwgb2YgdGhlIHRyYWluaW5nIHNjaG9vbCwgd2hpY2gKZm9yIGFsbCB0aGUgaW1wb3Npbmcgcm9idXN0bmVzcyB3aGljaCB0aGV5IGRpc3BsYXkKaW4gdGhlaXIgb3duIGNvbnRlc3RzLCB5ZXQsIGlmIG9yZGVyZWQgdG8gbWFrZSBhIGRheSdzCm1hcmNoIHdpdGggdGhlIHRyb29wcywgdG8gY2FycnkgYnVyZGVucyBhbmQgbW91bnQKZ3VhcmQgYXQgbmlnaHQsIHdvdWxkIGZhaW50IGJlbmVhdGggdGhlIHRhc2sgYW5kCmxvbmcgZm9yIHRoZWlyIHRyYWluZXJzIHRvIHJ1YiB0aGVtIGRvd24gd2l0aCBvaWwgYW5kCmZvciB0aGUgZnJlZSBwZXJzcGlyYXRpb24gb2YgdGhlIG5ha2VkIGxpbWJzLjwvdHJhbnNsYXRpb24+"
translation['11.6.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz4gV2hvCndvdWxkIHRvbGVyYXRlIG1lIGlmIGluIGEgd29yayBzdWNoIGFzIHRoaXMgSSB3ZXJlCnRvIHByZXNjcmliZSBhdm9pZGFuY2Ugb2YgZXhwb3N1cmUgdG8gc3VuLCB3aW5kLCByYWluCm9yIHBhcmNoaW5nIGhlYXQ/IElmIHdlIGFyZSBjYWxsZWQgdXBvbiB0byBzcGVhawppbiB0aGUgc3VuIG9yIG9uIGEgd2luZHksIHdldCBvciB3YXJtIGRheSwgaXMgdGhhdCBhCnJlYXNvbiBmb3IgZGVzZXJ0aW5nIHRoZSBjbGllbnQgd2hvbSB3ZSBoYXZlIHVuZGVydGFrZW4gdG8gZGVmZW5kPyBXaGlsZSBhcyBmb3IgdGhlIHdhcm5pbmcgZ2l2ZW4KYnkgc29tZSB0aGF0IHRoZSBvcmF0b3Igc2hvdWxkIG5vdCBzcGVhayB3aGVuCmR5c3BlcHRpYywgcmVwbGV0ZSBvciBkcnVuaywgb3IgaW1tZWRpYXRlbHkgYWZ0ZXIKdm9taXRpbmcsIEkgdGhpbmsgdGhhdCBubyBzYW5lIHBlcnNvbiB3b3VsZCBkcmVhbQpvZiBkZWNsYWltaW5nIHVuZGVyIHN1Y2ggY2lyY3Vtc3RhbmNlcy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmUgaXMsCmhvd2V2ZXIsIGdvb2QgcmVhc29uIGZvciB0aGUgcnVsZSBwcmVzY3JpYmVkIGJ5IGFsbAphdXRob3JpdGllcywgdGhhdCB0aGUgdm9pY2Ugc2hvdWxkIG5vdCBiZSBvdmVyc3RyYWluZWQKaW4gdGhlIHllYXJzIG9mIHRyYW5zaXRpb24gYmV0d2VlbiBib3lob29kIGFuZCBtYW5ob29kLCBzaW5jZSBhdCB0aGF0IHBlcmlvZCBpdCBpcyBuYXR1cmFsbHkgd2Vhaywgbm90LCBJCnRoaW5rLCBvbiBhY2NvdW50IG9mIGhlYXQsIGFzIHNvbWUgYWxsZWdlIChmb3IgdGhlcmUKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjI1OSIgLz4KCmlzIG1vcmUgaGVhdCBpbiB0aGUgYm9keSBhdCBvdGhlciBwZXJpb2RzKSwgYnV0IHJhdGhlcgpvbiBhY2NvdW50IG9mIG1vaXN0dXJlLCBvZiB3aGljaCBhdCB0aGF0IGFnZSB0aGVyZSBpcwphIHN1cGVyYWJ1bmRhbmNlLjwvdHJhbnNsYXRpb24+"
translation['11.6.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoaXMgcmVhc29uIHRoZSBub3N0cmlscyBhbmQKdGhlIGJyZWFzdCBzd2VsbCBhdCB0aGlzIHN0YWdlLCBhbmQgYWxsIHRoZSBvcmdhbnMKZGV2ZWxvcCBuZXcgZ3Jvd3RoLCB3aXRoIHRoZSByZXN1bHQgdGhhdCB0aGV5IGFyZQp0ZW5kZXIgYW5kIGxpYWJsZSB0byBpbmp1cnkuIEhvd2V2ZXIsIHRvIHJldHVybiB0bwp0aGUgcG9pbnQsIHRoZSBiZXN0IGFuZCBtb3N0IHJlYWxpc3RpYyBmb3JtIG9mIGV4ZXJjaXNlCmZvciB0aGUgdm9pY2UsIG9uY2UgaXQgaGFzIGJlY29tZSBmaXJtIGFuZCBzZXQsIGlzLCBpbgpteSBvcGluaW9uLCB0aGUgcHJhY3RpY2Ugb2Ygc3BlYWtpbmcgZGFpbHkganVzdCBhcyB3ZQpwbGVhZCBpbiB0aGUgY291cnRzLiBGb3IgdGh1cywgbm90IG1lcmVseSBkbyB0aGUKdm9pY2UgYW5kIGx1bmdzIGdhaW4gaW4gc3RyZW5ndGgsIGJ1dCB3ZSBhY3F1aXJlIGEKYmVjb21pbmcgZGVwb3J0bWVudCBvZiB0aGUgYm9keSBhbmQgZGV2ZWxvcCBncmFjZQpvZiBtb3ZlbWVudCBzdWl0ZWQgdG8gb3VyIHN0eWxlIG9mIHNwZWFraW5nLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMwIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBydWxlcyBmb3IgZGVsaXZlcnkgYXJlIGlkZW50aWNhbCB3aXRoIHRob3NlIGZvciB0aGUKbGFuZ3VhZ2Ugb2Ygb3JhdG9yeSBpdHNlbGYuIEZvciwgYXMgb3VyIGxhbmd1YWdlIG11c3QKYmUgY29ycmVjdCwgY2xlYXIsIG9ybmF0ZSBhbmQgYXBwcm9wcmlhdGUsIHNvIHdpdGggb3VyCmRlbGl2ZXJ5OyBpdCB3aWxsIGJlIGNvcnJlY3QsIHRoYXQgaXMsIGZyZWUgZnJvbSBmYXVsdCwgaWYKb3VyIHV0dGVyYW5jZSBiZSBmbHVlbnQsIGNsZWFyLCBwbGVhc2FudCBhbmQgPHF1b3RlPnVyYmFuZSw8L3F1b3RlPgp0aGF0IGlzIHRvIHNheSwgZnJlZSBmcm9tIGFsbCB0cmFjZXMgb2YgYSBydXN0aWMgb3IgYSBmb3JlaWduCmFjY2VudC48bWlsZXN0b25lIG49IjMxIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgdGhlcmUgaXMgZ29vZCByZWFzb24gZm9yIHRoZSBzYXlpbmcgd2Ugc28Kb2Z0ZW4gaGVhciwgPHF1b3RlPkhlIG11c3QgYmUgYSBiYXJiYXJpYW4gb3IgYSBHcmVlazwvcXVvdGU+OgpzaW5jZSB3ZSBtYXkgZGlzY2VybiBhIG1hbidzIG5hdGlvbmFsaXR5IGZyb20gdGhlCnNvdW5kIG9mIGhpcyB2b2ljZSBhcyBlYXNpbHkgYXMgd2UgdGVzdCBhIGNvaW4gYnkgaXRzIHJpbmcuCklmIHRoZXNlIHF1YWxpdGllcyBiZSBwcmVzZW50LCB3ZSBzaGFsbCBoYXZlIHRob3NlIGhhcm1vbmlvdXMgYWNjZW50cyBvZiB3aGljaCBFbm5pdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5Bbm4uPC9oaT4gaXguIDMwNSAoVmFobGVuKS48L25vdGU+IGV4cHJlc3NlcyBoaXMKYXBwcm92YWwgd2hlbiBoZSBkZXNjcmliZXMgQ2V0aGVndXMgYXMgb25lIHdob3NlCjxxdW90ZT53b3JkcyByYW5nIHN3ZWV0bHksPC9xdW90ZT4gYW5kIGF2b2lkIHRoZSBvcHBvc2l0ZSBlZmZlY3QsCm9mIHdoaWNoIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPkJydXQuPC9oaT4geHYuIDU4Ljwvbm90ZT4gZXhwcmVzc2VzIGhpcyBkaXNhcHByb3ZhbCBieSBzYXlpbmcsCjxxdW90ZT5UaGV5IGJhcmssIG5vdCBwbGVhZC48L3F1b3RlPiBGb3IgdGhlcmUgYXJlIG1hbnkgZmF1bHRzCm9mIHdoaWNoIEkgc3Bva2UgaW4gdGhlIGZpcnN0IGJvb2s8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPkkuIGkuIDM3OyB2LiAzMjsgdmlpaS4gMSBhbmQgeGkuIDEgPGhpIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPjwvbm90ZT4gd2hlbiBJIGRpc2N1c3NlZAp0aGUgbWV0aG9kIGluIHdoaWNoIHRoZSBzcGVlY2ggb2YgY2hpbGRyZW4gc2hvdWxkCmJlIGZvcm1lZCwgc2luY2UgSSB0aG91Z2h0IGl0IG1vcmUgYXBwcm9wcmlhdGUgdG8KbWVudGlvbiB0aGVtIGluIGNvbm5leGlvbiB3aXRoIGEgcGVyaW9kIG9mIGxpZmUKd2hlbiBpdCBpcyBzdGlsbCBwb3NzaWJsZSB0byBjb3JyZWN0IHRoZW0uPG1pbGVzdG9uZSBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIHRoZQoKPHBiIGlkPSJwLjI2MSIgLz4KCmRlbGl2ZXJ5IG1heSBiZSBkZXNjcmliZWQgYXMgY29ycmVjdCBpZiB0aGUgdm9pY2UgYmUKc291bmQsIHRoYXQgaXMgdG8gc2F5LCBleGVtcHQgZnJvbSBhbnkgb2YgdGhlIGRlZmVjdHMKb2Ygd2hpY2ggSSBoYXZlIGp1c3Qgc3Bva2VuLCBhbmQgaWYgaXQgaXMgbm90IGR1bGwsCmNvYXJzZSwgZXhhZ2dlcmF0ZWQsIGhhcmQsIHN0aWZmLCBob2Fyc2Ugb3IgdGhpY2ssIG9yCmFnYWluLCB0aGluLCBob2xsb3csIHNoYXJwLCBmZWVibGUsIHNvZnQgb3IgZWZmZW1pbmF0ZSwKYW5kIGlmIHRoZSBicmVhdGggaXMgbmVpdGhlciB0b28gc2hvcnQgbm9yIGRpZmZpY3VsdCB0bwpzdXN0YWluIG9yIHJlY292ZXIuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcnVsZXMgZm9yIGRlbGl2ZXJ5IGFyZSBpZGVudGljYWwgd2l0aCB0aG9zZSBmb3IgdGhlCmxhbmd1YWdlIG9mIG9yYXRvcnkgaXRzZWxmLiBGb3IsIGFzIG91ciBsYW5ndWFnZSBtdXN0CmJlIGNvcnJlY3QsIGNsZWFyLCBvcm5hdGUgYW5kIGFwcHJvcHJpYXRlLCBzbyB3aXRoIG91cgpkZWxpdmVyeTsgaXQgd2lsbCBiZSBjb3JyZWN0LCB0aGF0IGlzLCBmcmVlIGZyb20gZmF1bHQsIGlmCm91ciB1dHRlcmFuY2UgYmUgZmx1ZW50LCBjbGVhciwgcGxlYXNhbnQgYW5kIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPnVyYmFuZSw8L3F1b3RlPgp0aGF0IGlzIHRvIHNheSwgZnJlZSBmcm9tIGFsbCB0cmFjZXMgb2YgYSBydXN0aWMgb3IgYSBmb3JlaWduCmFjY2VudC48L3RyYW5zbGF0aW9uPg=="
translation['11.6.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZXJlIGlzIGdvb2QgcmVhc29uIGZvciB0aGUgc2F5aW5nIHdlIHNvCm9mdGVuIGhlYXIsIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkhlIG11c3QgYmUgYSBiYXJiYXJpYW4gb3IgYSBHcmVlazwvcXVvdGU+OgpzaW5jZSB3ZSBtYXkgZGlzY2VybiBhIG1hbidzIG5hdGlvbmFsaXR5IGZyb20gdGhlCnNvdW5kIG9mIGhpcyB2b2ljZSBhcyBlYXNpbHkgYXMgd2UgdGVzdCBhIGNvaW4gYnkgaXRzIHJpbmcuCklmIHRoZXNlIHF1YWxpdGllcyBiZSBwcmVzZW50LCB3ZSBzaGFsbCBoYXZlIHRob3NlIGhhcm1vbmlvdXMgYWNjZW50cyBvZiB3aGljaCBFbm5pdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QW5uLjwvaGk+IGl4LiAzMDUgKFZhaGxlbikuPC9ub3RlPiBleHByZXNzZXMgaGlzCmFwcHJvdmFsIHdoZW4gaGUgZGVzY3JpYmVzIENldGhlZ3VzIGFzIG9uZSB3aG9zZQo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Bbm4uPC9oaT4gaXguIDMwNSAoVmFobGVuKS48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj53b3JkcyByYW5nIHN3ZWV0bHksPC9xdW90ZT4gYW5kIGF2b2lkIHRoZSBvcHBvc2l0ZSBlZmZlY3QsCm9mIHdoaWNoIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5CcnV0LjwvaGk+IHh2LiA1OC48L25vdGU+IGV4cHJlc3NlcyBoaXMgZGlzYXBwcm92YWwgYnkgc2F5aW5nLAo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5CcnV0LjwvaGk+IHh2LiA1OC48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGV5IGJhcmssIG5vdCBwbGVhZC48L3F1b3RlPiBGb3IgdGhlcmUgYXJlIG1hbnkgZmF1bHRzCm9mIHdoaWNoIEkgc3Bva2UgaW4gdGhlIGZpcnN0IGJvb2s8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+SS4gaS4gMzc7IHYuIDMyOyB2aWlpLiAxIGFuZCB4aS4gMSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zcXEuPC9oaT48L25vdGU+IHdoZW4gSSBkaXNjdXNzZWQKdGhlIG1ldGhvZCBpbiB3aGljaCB0aGUgc3BlZWNoIG9mIGNoaWxkcmVuIHNob3VsZApiZSBmb3JtZWQsIHNpbmNlIEkgdGhvdWdodCBpdCBtb3JlIGFwcHJvcHJpYXRlIHRvCm1lbnRpb24gdGhlbSBpbiBjb25uZXhpb24gd2l0aCBhIHBlcmlvZCBvZiBsaWZlCndoZW4gaXQgaXMgc3RpbGwgcG9zc2libGUgdG8gY29ycmVjdCB0aGVtLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPjwvdHJhbnNsYXRpb24+"
translation['11.6.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIHRoZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjYxIiAvPgoKZGVsaXZlcnkgbWF5IGJlIGRlc2NyaWJlZCBhcyBjb3JyZWN0IGlmIHRoZSB2b2ljZSBiZQpzb3VuZCwgdGhhdCBpcyB0byBzYXksIGV4ZW1wdCBmcm9tIGFueSBvZiB0aGUgZGVmZWN0cwpvZiB3aGljaCBJIGhhdmUganVzdCBzcG9rZW4sIGFuZCBpZiBpdCBpcyBub3QgZHVsbCwKY29hcnNlLCBleGFnZ2VyYXRlZCwgaGFyZCwgc3RpZmYsIGhvYXJzZSBvciB0aGljaywgb3IKYWdhaW4sIHRoaW4sIGhvbGxvdywgc2hhcnAsIGZlZWJsZSwgc29mdCBvciBlZmZlbWluYXRlLAphbmQgaWYgdGhlIGJyZWF0aCBpcyBuZWl0aGVyIHRvbyBzaG9ydCBub3IgZGlmZmljdWx0IHRvCnN1c3RhaW4gb3IgcmVjb3Zlci48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZGVsaXZlcnkgd2lsbCBiZSBjbGVhciBpZiwgaW4gdGhlIGZpcnN0IHBsYWNlLCB0aGUKd29yZHMgYXJlIHV0dGVyZWQgaW4gdGhlaXIgZW50aXJldHksIGluc3RlYWQgb2YgYmVpbmcKc3dhbGxvd2VkIG9yIGNsaXBwZWQsIGFzIGlzIHNvIG9mdGVuIHRoZSBjYXNlLCBzaW5jZQp0b28gbWFueSBwZW9wbGUgZmFpbCB0byBjb21wbGV0ZSB0aGUgZmluYWwgc3lsbGFibGVzCnRocm91Z2ggb3Zlci1lbXBoYXNpc2luZyB0aGUgZmlyc3QuIEJ1dCBhbHRob3VnaAp3b3JkcyBtdXN0IGJlIGdpdmVuIHRoZWlyIGZ1bGwgcGhvbmV0aWMgdmFsdWUsIGl0IGlzIGEKdGlyZXNvbWUgYW5kIG9mZmVuc2l2ZSB0cmljayB0byBwcm9ub3VuY2UgZXZlcnkgbGV0dGVyCmFzIGlmIHdlIHdlcmUgZW50ZXJpbmcgdGhlbSBpbiBhbiBpbnZlbnRvcnkuPG1pbGVzdG9uZSBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCnZvd2VscyBmcmVxdWVudGx5IGNvYWxlc2NlIGFuZCBzb21lIGNvbnNvbmFudHMgZGlzYXBwZWFyIHdoZW4gZm9sbG93ZWQgYnkgYSB2b3dlbC4gSSBoYXZlIGFscmVhZHk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPml4LiBpdi4gNDAuPC9ub3RlPgpnaXZlbiBhbiBleGFtcGxlIG9mIGJvdGggdGhlc2Ugb2NjdXJyZW5jZXM64oCUCjxoaSByZW5kPSJpdGFsaWNzIj5tdWxsdW0gaWxsZSBldCB0ZXJyaXMuPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5BZW4uPC9oaT4gaS48L25vdGU+PG1pbGVzdG9uZSBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz4gRnVydGhlciwgd2UgYXZvaWQgcGxhY2luZyB0d28KY29uc29uYW50cyBuZWFyIGVhY2ggb3RoZXIgd2hlbiB0aGVpciBqdXh0YXBvc2l0aW9uCndvdWxkIGNhdXNlIGEgaGFyc2ggc291bmQ7IHRodXMsIHdlIHNheSA8aGkgcmVuZD0iaXRhbGljcyI+cGVsbGV4aXQ8L2hpPiBhbmQKPGhpIHJlbmQ9Iml0YWxpY3MiPmNvbGxlZ2lhdGU8L2hpPiBhbmQgZW1wbG95IG90aGVyIGxpa2UgZm9ybXMgb2Ygd2hpY2ggSSBoYXZlCnNwb2tlbiBlbHNld2hlcmUuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5JWC4gaXYuIDM3Ljwvbm90ZT4gSXQgaXMgd2l0aCB0aGlzIGluIG1pbmQgdGhhdApDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5CcnV0LjwvaGk+IGx4eGl2LiAyNTkuIDxxdW90ZT5zdWF2aXRhcyB2b2NpcyBldCBsZW5pcyBhcHBlbGxhdGlvCmxpdGVyYXJ1bTwvcXVvdGU+ICg8cXVvdGU+dGhlIHN3ZWV0bmVzcyBvZiBoaXMgdm9pY2UgYW5kIHRoZSBkZWxpY2FjeQp3aXRoIHdoaWNoIGhlIHByb25vdW5jZWQgdGhlIHZhcmlvdXMgbGV0dGVycy48L3F1b3RlPu+8iTwvbm90ZT4gcHJhaXNlcyBDYXR1bHVzIGZvciB0aGUgc3dlZXRuZXNzIHdpdGggd2hpY2gKaGUgcHJvbm91bmNlZCB0aGUgdmFyaW91cyBsZXR0ZXJzLiBUaGUgc2Vjb25kCmVzc2VudGlhbCBmb3IgY2xlYXJuZXNzIG9mIGRlbGl2ZXJ5IGlzIHRoYXQgb3VyCmxhbmd1YWdlIHNob3VsZCBiZSBwcm9wZXJseSBwdW5jdHVhdGVkLCB0aGF0IGlzCnRvIHNheSwgdGhlIHNwZWFrZXIgbXVzdCBiZWdpbiBhbmQgZW5kIGF0IHRoZQpwcm9wZXIgcGxhY2UuIEl0IGlzIGFsc28gbmVjZXNzYXJ5IHRvIG5vdGUgYXQgd2hhdApwb2ludCBvdXIgc3BlZWNoIHNob3VsZCBwYXVzZSBhbmQgYmUgbW9tZW50YXJpbHkKc3VzcGVuZGVkICh3aGljaCB0aGUgR3JlZWtzIHRlcm0gPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPnUocG9kaWFzdG9saFw8L2ZvcmVpZ24+IGFuZAo8Zm9yZWlnbiBsYW5nPSJncmVlayI+dShwb3N0aWdtaFw8L2ZvcmVpZ24+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48cXVvdGU+QSBzbGlnaHQgc3RvcCw8L3F1b3RlPiBjb3JyZXNwb25kaW5nIHRvIG91ciA8cXVvdGU+Y29tbWE8L3F1b3RlPjwvbm90ZT4gYW5kIHdoZW4gaXQgc2hvdWxkIGNvbWUgdG8gYSBmdWxsIHN0b3AuCjxtaWxlc3RvbmUgbj0iMzYiIHVuaXQ9InNlY3Rpb24iIC8+QWZ0ZXIgdGhlIHdvcmRzIDxoaSByZW5kPSJpdGFsaWNzIj5hcm1hIHZpcnVtcXVlIGNhbm88L2hpPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPkFlbi48L2hpPiBpLiAxLjwvbm90ZT4gdGhlcmUgaXMgYSBtb21lbnRhcnkgc3VzcGVuc2lvbiwgYmVjYXVzZSA8aGkgcmVuZD0iaXRhbGljcyI+dmlydW08L2hpPiBpcyBjb25uZWN0ZWQgd2l0aAoKPHBiIGlkPSJwLjI2MyIgLz4KCndoYXQgZm9sbG93cywgdGhlIGZ1bGwgc2Vuc2UgYmVpbmcgZ2l2ZW4gYnkgPGhpIHJlbmQ9Iml0YWxpY3MiPnZpcnVtClRyb2lhZSBxdWkgcHJpbXVzIGFiIG9yaXMsPC9oaT4gYWZ0ZXIgd2hpY2ggdGhlcmUgaXMgYSBzaW1pbGFyIHN1c3BlbnNpb24uIEZvciBhbHRob3VnaCB0aGUgbWVudGlvbiBvZiB0aGUKaGVybydzIGRlc3RpbmF0aW9uIGludHJvZHVjZXMgYW4gaWRlYSBkaWZmZXJlbnQgZnJvbQp0aGF0IG9mIHRoZSBwbGFjZSB3aGVuY2UgaGUgY2FtZSwgdGhlIGRpZmZlcmVuY2UgZG9lcwpub3QgY2FsbCBmb3IgdGhlIGluc2VydGlvbiBvZiBhIHN0b3AsIHNpbmNlIGJvdGggaWRlYXMKYXJlIGV4cHJlc3NlZCBieSB0aGUgc2FtZSB2ZXJiIDxoaSByZW5kPSJpdGFsaWNzIj52ZW5pdC48L2hpPjxtaWxlc3RvbmUgbj0iMzciIHVuaXQ9InNlY3Rpb24iIC8+IEFmdGVyIDxoaSByZW5kPSJpdGFsaWNzIj5JdGFsaWFtPC9oaT4KY29tZXMgYSB0aGlyZCBwYXVzZSwgc2luY2UgPGhpIHJlbmQ9Iml0YWxpY3MiPmZhdG8gcHJvZnVndXM8L2hpPiBpcyBwYXJlbnRoZXRpYyBhbmQgYnJlYWtzIHVwIHRoZSBjb250aW51aXR5IG9mIHRoZSBwaHJhc2UKPGhpIHJlbmQ9Iml0YWxpY3MiPkl0YWxpYW4sIExhdmluYXF1ZS48L2hpPiBGb3IgdGhlIHNhbWUgcmVhc29uIHRoZXJlIGlzIGEKZm91cnRoIHBhdXNlIGFmdGVyIDxoaSByZW5kPSJpdGFsaWNzIj5wcm9mdWxndXMuPC9oaT4gVGhlbiBmb2xsb3dzIDxoaSByZW5kPSJpdGFsaWNzIj5MYXZpbmFxdWUKdmVuaXQgbGl0b3JhLDwvaGk+IHdoZXJlIGEgc3RvcCBtdXN0IGJlIHBsYWNlZCwgYXMgYXQgdGhpcwpwb2ludCBhIG5ldyBzZW50ZW5jZSBiZWdpbnMuIEJ1dCBzdG9wcyB0aGVtc2VsdmVzCnZhcnkgaW4gbGVuZ3RoLCBhY2NvcmRpbmcgYXMgdGhleSBtYXJrIHRoZSBjb25jbHVzaW9uCm9mIGEgcGhyYXNlIG9yIGEgc2VudGVuY2UuPG1pbGVzdG9uZSBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz4gVGh1cyBhZnRlciA8aGkgcmVuZD0iaXRhbGljcyI+bGl0b3JhPC9oaT4gSSBzaGFsbApwYXVzZSBhbmQgY29udGludWUgYWZ0ZXIgdGFraW5nIGJyZWF0aC4gQnV0IHdoZW4KSSBjb21lIHRvIDxoaSByZW5kPSJpdGFsaWNzIj5hdHF1ZSBhbHRhZSBtb2VuaWEgUm9tYWU8L2hpPiBJIHNoYWxsIG1ha2UgYSBmdWxsCnN0b3AsIGhhbHQgYW5kIHN0YXJ0IGFnYWluIHdpdGggdGhlIG9wZW5pbmcgb2YgYSBmcmVzaApzZW50ZW5jZS48bWlsZXN0b25lIG49IjM5IiB1bml0PSJzZWN0aW9uIiAvPiBUaGVyZSBhcmUgYWxzbyBvY2Nhc2lvbmFsbHksIGV2ZW4gaW4KcGVyaW9kcywgcGF1c2VzIHdoaWNoIGRvIG5vdCByZXF1aXJlIGEgZnJlc2ggYnJlYXRoLgpGb3IgYWx0aG91Z2ggdGhlIHNlbnRlbmNlIDxoaSByZW5kPSJpdGFsaWNzIj5pbiBjb2V0dSB2ZXJvIHBvcHVsaSBSb21hbmksCm5lZ290aXVtIHB1YmxpY3VtbiBnZXJlbnMsIG1hZ2lzdGVyIGVxdWlsdW0sPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5QaGlsLjwvaGk+IElJLiB4eHYuIDYzLiBTZWUgPGhpIHJlbmQ9Iml0YWxpY3MiPlF1aW50LjwvaGk+IFZJSUkuIGl2LiA4Ljwvbm90ZT4gZXRjLiwgY29udGFpbnMgYSBudW1iZXIgb2YgZGlmZmVyZW50IDxoaSByZW5kPSJpdGFsaWNzIj5jb2xhLDwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgSVguIGl2LiAyMiwgNjcsIDEyMy4gVGhlIG5hbWUgPGhpIHJlbmQ9Iml0YWxpY3MiPmNvbG9uPC9oaT4gaXMgYXBwbGllZCB0byB0aGUKbG9uZ2VyIGNsYXVzZXMgY29udGFpbmVkIGluIGEgcGVyaW9kLCBhcyBvcHBvc2VkIHRvIHRoZSBzaG9ydGVyLAp3aGljaCBhcmUgc3R5bGVkIDxoaSByZW5kPSJpdGFsaWNzIj5jb21tYXRhLjwvaGk+PC9ub3RlPiBleHByZXNzaW5nIGEgbnVtYmVyCm9mIGRpZmZlcmVudCB0aG91Z2h0cywgYWxsIHRoZXNlIDxoaSByZW5kPSJpdGFsaWNzIj5jb2xhPC9oaT4gYXJlIGVtYnJhY2VkIGJ5CmEgc2luZ2xlIHBlcmlvZDogY29uc2VxdWVudGx5LCBhbHRob3VnaCBzaG9ydCBwYXVzZXMKYXJlIHJlcXVpcmVkIGF0IHRoZSBhcHByb3ByaWF0ZSBpbnRlcnZhbHMsIHRoZSBmbG93IG9mCnRoZSBwZXJpb2QgYXMgYSB3aG9sZSBtdXN0IG5vdCBiZSBicm9rZW4uIE9uIHRoZQpvdGhlciBoYW5kLCBpdCBpcyBhdCB0aW1lcyBuZWNlc3NhcnkgdG8gdGFrZSBicmVhdGggd2l0aG91dCBhbnkgcGVyY2VwdGlibGUgcGF1c2U6IGluIHN1Y2ggY2FzZXMgd2UgbXVzdCBkbwpzbyBzdXJyZXB0aXRpb3VzbHksIHNpbmNlIGlmIHdlIHRha2UgYnJlYXRoIHVuc2tpbGZ1bGx5LAppdCB3aWxsIGNhdXNlIGFzIG11Y2ggb2JzY3VyaXR5IGFzIHdvdWxkIGhhdmUgcmVzdWx0ZWQKZnJvbSBmYXVsdHkgcHVuY3R1YXRpb24uIENvcnJlY3RuZXNzIG9mIHB1bmN0dWF0aW9uCm1heSBzZWVtIHRvIGJlIGJ1dCBhIHRyaXZpYWwgbWVyaXQsIGJ1dCB3aXRob3V0IGl0CmFsbCB0aGUgb3RoZXIgbWVyaXRzIG9mIG9yYXRvcnkgYXJlIG5vdGhpbmcgd29ydGguPC9wPgoKPC90cmFuc2xhdGlvbj4="
translation['11.6.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZGVsaXZlcnkgd2lsbCBiZSBjbGVhciBpZiwgaW4gdGhlIGZpcnN0IHBsYWNlLCB0aGUKd29yZHMgYXJlIHV0dGVyZWQgaW4gdGhlaXIgZW50aXJldHksIGluc3RlYWQgb2YgYmVpbmcKc3dhbGxvd2VkIG9yIGNsaXBwZWQsIGFzIGlzIHNvIG9mdGVuIHRoZSBjYXNlLCBzaW5jZQp0b28gbWFueSBwZW9wbGUgZmFpbCB0byBjb21wbGV0ZSB0aGUgZmluYWwgc3lsbGFibGVzCnRocm91Z2ggb3Zlci1lbXBoYXNpc2luZyB0aGUgZmlyc3QuIEJ1dCBhbHRob3VnaAp3b3JkcyBtdXN0IGJlIGdpdmVuIHRoZWlyIGZ1bGwgcGhvbmV0aWMgdmFsdWUsIGl0IGlzIGEKdGlyZXNvbWUgYW5kIG9mZmVuc2l2ZSB0cmljayB0byBwcm9ub3VuY2UgZXZlcnkgbGV0dGVyCmFzIGlmIHdlIHdlcmUgZW50ZXJpbmcgdGhlbSBpbiBhbiBpbnZlbnRvcnkuPC90cmFuc2xhdGlvbj4="
translation['11.6.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCnZvd2VscyBmcmVxdWVudGx5IGNvYWxlc2NlIGFuZCBzb21lIGNvbnNvbmFudHMgZGlzYXBwZWFyIHdoZW4gZm9sbG93ZWQgYnkgYSB2b3dlbC4gSSBoYXZlIGFscmVhZHk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+aXguIGl2LiA0MC48L25vdGU+CmdpdmVuIGFuIGV4YW1wbGUgb2YgYm90aCB0aGVzZSBvY2N1cnJlbmNlczrigJQKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+bXVsbHVtIGlsbGUgZXQgdGVycmlzLjwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkFlbi48L2hpPiBpLjwvbm90ZT48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZW4uPC9oaT4gaS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz4gRnVydGhlciwgd2UgYXZvaWQgcGxhY2luZyB0d28KY29uc29uYW50cyBuZWFyIGVhY2ggb3RoZXIgd2hlbiB0aGVpciBqdXh0YXBvc2l0aW9uCndvdWxkIGNhdXNlIGEgaGFyc2ggc291bmQ7IHRodXMsIHdlIHNheSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wZWxsZXhpdDwvaGk+IGFuZAo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jb2xsZWdpYXRlPC9oaT4gYW5kIGVtcGxveSBvdGhlciBsaWtlIGZvcm1zIG9mIHdoaWNoIEkgaGF2ZQpzcG9rZW4gZWxzZXdoZXJlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5JWC4gaXYuIDM3Ljwvbm90ZT4gSXQgaXMgd2l0aCB0aGlzIGluIG1pbmQgdGhhdApDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QnJ1dC48L2hpPiBseHhpdi4gMjU5LiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5zdWF2aXRhcyB2b2NpcyBldCBsZW5pcyBhcHBlbGxhdGlvCmxpdGVyYXJ1bTwvcXVvdGU+ICg8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj50aGUgc3dlZXRuZXNzIG9mIGhpcyB2b2ljZSBhbmQgdGhlIGRlbGljYWN5CndpdGggd2hpY2ggaGUgcHJvbm91bmNlZCB0aGUgdmFyaW91cyBsZXR0ZXJzLjwvcXVvdGU+77yJPC9ub3RlPiBwcmFpc2VzIENhdHVsdXMgZm9yIHRoZSBzd2VldG5lc3Mgd2l0aCB3aGljaApoZSBwcm9ub3VuY2VkIHRoZSB2YXJpb3VzIGxldHRlcnMuIFRoZSBzZWNvbmQKZXNzZW50aWFsIGZvciBjbGVhcm5lc3Mgb2YgZGVsaXZlcnkgaXMgdGhhdCBvdXIKbGFuZ3VhZ2Ugc2hvdWxkIGJlIHByb3Blcmx5IHB1bmN0dWF0ZWQsIHRoYXQgaXMKdG8gc2F5LCB0aGUgc3BlYWtlciBtdXN0IGJlZ2luIGFuZCBlbmQgYXQgdGhlCnByb3BlciBwbGFjZS4gSXQgaXMgYWxzbyBuZWNlc3NhcnkgdG8gbm90ZSBhdCB3aGF0CnBvaW50IG91ciBzcGVlY2ggc2hvdWxkIHBhdXNlIGFuZCBiZSBtb21lbnRhcmlseQpzdXNwZW5kZWQgKHdoaWNoIHRoZSBHcmVla3MgdGVybSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5CcnV0LjwvaGk+IGx4eGl2LiAyNTkuIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPnN1YXZpdGFzIHZvY2lzIGV0IGxlbmlzIGFwcGVsbGF0aW8KbGl0ZXJhcnVtPC9xdW90ZT4gKDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPnRoZSBzd2VldG5lc3Mgb2YgaGlzIHZvaWNlIGFuZCB0aGUgZGVsaWNhY3kKd2l0aCB3aGljaCBoZSBwcm9ub3VuY2VkIHRoZSB2YXJpb3VzIGxldHRlcnMuPC9xdW90ZT7vvIk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj51KHBvZGlhc3RvbGhcPC9mb3JlaWduPiBhbmQKPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+dShwb3N0aWdtaFw8L2ZvcmVpZ24+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkEgc2xpZ2h0IHN0b3AsPC9xdW90ZT4gY29ycmVzcG9uZGluZyB0byBvdXIgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Y29tbWE8L3F1b3RlPjwvbm90ZT4gYW5kIHdoZW4gaXQgc2hvdWxkIGNvbWUgdG8gYSBmdWxsIHN0b3AuCjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkEgc2xpZ2h0IHN0b3AsPC9xdW90ZT4gY29ycmVzcG9uZGluZyB0byBvdXIgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Y29tbWE8L3F1b3RlPjwvdHJhbnNsYXRpb24+"
translation['11.6.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGUgd29yZHMgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+YXJtYSB2aXJ1bXF1ZSBjYW5vPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QWVuLjwvaGk+IGkuIDEuPC9ub3RlPiB0aGVyZSBpcyBhIG1vbWVudGFyeSBzdXNwZW5zaW9uLCBiZWNhdXNlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkFlbi48L2hpPiBpLiAxLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnZpcnVtPC9oaT4gaXMgY29ubmVjdGVkIHdpdGgKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjI2MyIgLz4KCndoYXQgZm9sbG93cywgdGhlIGZ1bGwgc2Vuc2UgYmVpbmcgZ2l2ZW4gYnkgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+dmlydW0KVHJvaWFlIHF1aSBwcmltdXMgYWIgb3Jpcyw8L2hpPiBhZnRlciB3aGljaCB0aGVyZSBpcyBhIHNpbWlsYXIgc3VzcGVuc2lvbi4gRm9yIGFsdGhvdWdoIHRoZSBtZW50aW9uIG9mIHRoZQpoZXJvJ3MgZGVzdGluYXRpb24gaW50cm9kdWNlcyBhbiBpZGVhIGRpZmZlcmVudCBmcm9tCnRoYXQgb2YgdGhlIHBsYWNlIHdoZW5jZSBoZSBjYW1lLCB0aGUgZGlmZmVyZW5jZSBkb2VzCm5vdCBjYWxsIGZvciB0aGUgaW5zZXJ0aW9uIG9mIGEgc3RvcCwgc2luY2UgYm90aCBpZGVhcwphcmUgZXhwcmVzc2VkIGJ5IHRoZSBzYW1lIHZlcmIgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+dmVuaXQuPC9oaT48L3RyYW5zbGF0aW9uPg=="
translation['11.6.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz4gQWZ0ZXIgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SXRhbGlhbTwvaGk+CmNvbWVzIGEgdGhpcmQgcGF1c2UsIHNpbmNlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmZhdG8gcHJvZnVndXM8L2hpPiBpcyBwYXJlbnRoZXRpYyBhbmQgYnJlYWtzIHVwIHRoZSBjb250aW51aXR5IG9mIHRoZSBwaHJhc2UKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SXRhbGlhbiwgTGF2aW5hcXVlLjwvaGk+IEZvciB0aGUgc2FtZSByZWFzb24gdGhlcmUgaXMgYQpmb3VydGggcGF1c2UgYWZ0ZXIgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvZnVsZ3VzLjwvaGk+IFRoZW4gZm9sbG93cyA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5MYXZpbmFxdWUKdmVuaXQgbGl0b3JhLDwvaGk+IHdoZXJlIGEgc3RvcCBtdXN0IGJlIHBsYWNlZCwgYXMgYXQgdGhpcwpwb2ludCBhIG5ldyBzZW50ZW5jZSBiZWdpbnMuIEJ1dCBzdG9wcyB0aGVtc2VsdmVzCnZhcnkgaW4gbGVuZ3RoLCBhY2NvcmRpbmcgYXMgdGhleSBtYXJrIHRoZSBjb25jbHVzaW9uCm9mIGEgcGhyYXNlIG9yIGEgc2VudGVuY2UuPC90cmFuc2xhdGlvbj4="
translation['11.6.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz4gVGh1cyBhZnRlciA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5saXRvcmE8L2hpPiBJIHNoYWxsCnBhdXNlIGFuZCBjb250aW51ZSBhZnRlciB0YWtpbmcgYnJlYXRoLiBCdXQgd2hlbgpJIGNvbWUgdG8gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+YXRxdWUgYWx0YWUgbW9lbmlhIFJvbWFlPC9oaT4gSSBzaGFsbCBtYWtlIGEgZnVsbApzdG9wLCBoYWx0IGFuZCBzdGFydCBhZ2FpbiB3aXRoIHRoZSBvcGVuaW5nIG9mIGEgZnJlc2gKc2VudGVuY2UuPC90cmFuc2xhdGlvbj4="
translation['11.6.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmUgYXJlIGFsc28gb2NjYXNpb25hbGx5LCBldmVuIGluCnBlcmlvZHMsIHBhdXNlcyB3aGljaCBkbyBub3QgcmVxdWlyZSBhIGZyZXNoIGJyZWF0aC4KRm9yIGFsdGhvdWdoIHRoZSBzZW50ZW5jZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5pbiBjb2V0dSB2ZXJvIHBvcHVsaSBSb21hbmksCm5lZ290aXVtIHB1YmxpY3VtbiBnZXJlbnMsIG1hZ2lzdGVyIGVxdWlsdW0sPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+UGhpbC48L2hpPiBJSS4geHh2LiA2My4gU2VlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlF1aW50LjwvaGk+IFZJSUkuIGl2LiA4Ljwvbm90ZT4gZXRjLiwgY29udGFpbnMgYSBudW1iZXIgb2YgZGlmZmVyZW50IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlBoaWwuPC9oaT4gSUkuIHh4di4gNjMuIFNlZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5RdWludC48L2hpPiBWSUlJLiBpdi4gOC48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jb2xhLDwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBJWC4gaXYuIDIyLCA2NywgMTIzLiBUaGUgbmFtZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jb2xvbjwvaGk+IGlzIGFwcGxpZWQgdG8gdGhlCmxvbmdlciBjbGF1c2VzIGNvbnRhaW5lZCBpbiBhIHBlcmlvZCwgYXMgb3Bwb3NlZCB0byB0aGUgc2hvcnRlciwKd2hpY2ggYXJlIHN0eWxlZCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jb21tYXRhLjwvaGk+PC9ub3RlPiBleHByZXNzaW5nIGEgbnVtYmVyCm9mIGRpZmZlcmVudCB0aG91Z2h0cywgYWxsIHRoZXNlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNvbG9uPC9oaT4gaXMgYXBwbGllZCB0byB0aGUKbG9uZ2VyIGNsYXVzZXMgY29udGFpbmVkIGluIGEgcGVyaW9kLCBhcyBvcHBvc2VkIHRvIHRoZSBzaG9ydGVyLAp3aGljaCBhcmUgc3R5bGVkIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNvbW1hdGEuPC9oaT48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jb2xhPC9oaT4gYXJlIGVtYnJhY2VkIGJ5CmEgc2luZ2xlIHBlcmlvZDogY29uc2VxdWVudGx5LCBhbHRob3VnaCBzaG9ydCBwYXVzZXMKYXJlIHJlcXVpcmVkIGF0IHRoZSBhcHByb3ByaWF0ZSBpbnRlcnZhbHMsIHRoZSBmbG93IG9mCnRoZSBwZXJpb2QgYXMgYSB3aG9sZSBtdXN0IG5vdCBiZSBicm9rZW4uIE9uIHRoZQpvdGhlciBoYW5kLCBpdCBpcyBhdCB0aW1lcyBuZWNlc3NhcnkgdG8gdGFrZSBicmVhdGggd2l0aG91dCBhbnkgcGVyY2VwdGlibGUgcGF1c2U6IGluIHN1Y2ggY2FzZXMgd2UgbXVzdCBkbwpzbyBzdXJyZXB0aXRpb3VzbHksIHNpbmNlIGlmIHdlIHRha2UgYnJlYXRoIHVuc2tpbGZ1bGx5LAppdCB3aWxsIGNhdXNlIGFzIG11Y2ggb2JzY3VyaXR5IGFzIHdvdWxkIGhhdmUgcmVzdWx0ZWQKZnJvbSBmYXVsdHkgcHVuY3R1YXRpb24uIENvcnJlY3RuZXNzIG9mIHB1bmN0dWF0aW9uCm1heSBzZWVtIHRvIGJlIGJ1dCBhIHRyaXZpYWwgbWVyaXQsIGJ1dCB3aXRob3V0IGl0CmFsbCB0aGUgb3RoZXIgbWVyaXRzIG9mIG9yYXRvcnkgYXJlIG5vdGhpbmcgd29ydGguPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjY1IiAvPgoKPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDAiIHVuaXQ9InNlY3Rpb24iIC8+RGVsaXZlcnkgd2lsbCBiZSBvcm5hdGUgd2hlbiBpdCBpcyBzdXBwb3J0ZWQgYnkKYSB2b2ljZSB0aGF0IGlzIGVhc3ksIHN0cm9uZywgcmljaCwgZmxleGlibGUsIGZpcm0sIHN3ZWV0LAplbmR1cmluZywgcmVzb25hbnQsIHB1cmUsIGNhcnJ5aW5nIGZhciBhbmQgcGVuZXRyYXRpbmcgdGhlIGVhciAoZm9yIHRoZXJlIGlzIGEgdHlwZSBvZiB2b2ljZSB3aGljaAppbXByZXNzZXMgdGhlIGhlYXJpbmcgbm90IGJ5IGl0cyB2b2x1bWUsIGJ1dCBieSBpdHMKcGVjdWxpYXIgcXVhbGl0eSk6IGluIGFkZGl0aW9uLCB0aGUgdm9pY2UgbXVzdCBiZQplYXNpbHkgbWFuYWdlZCBhbmQgbXVzdCBwb3NzZXNzIGFsbCB0aGUgbmVjZXNzYXJ5CmluZmxleGlvbnMgYW5kIG1vZHVsYXRpb25zLCBpbiBmYWN0IGl0IG11c3QsIGFzIHRoZQpzYXlpbmcgaXMsIGJlIGEgcGVyZmVjdCBpbnN0cnVtZW50LCBlcXVpcHBlZCB3aXRoCmV2ZXJ5IHN0b3A6IGZ1cnRoZXIsIGl0IG11c3QgaGF2ZSBzdHJvbmcgbHVuZ3MgdG8Kc3VzdGFpbiBpdCwgYW5kIGFtcGxlIGJyZWF0aGluZyBwb3dlciB0aGF0IHdpbGwgYmUKZXF1YWwgdG8gYWxsIGRlbWFuZHMgdXBvbiBpdCwgaG93ZXZlciBmYXRpZ3VpbmcuPG1pbGVzdG9uZSBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlCmRlZXBlc3QgYmFzcyBhbmQgdGhlIGhpZ2hlc3QgdHJlYmxlIG5vdGVzIGFyZSB1bnN1aXRlZCB0byBvcmF0b3J5OiBmb3IgdGhlIGZvcm1lciBsYWNrIGNsZWFybmVzcyBhbmQsCm93aW5nIHRvIHRoZWlyIGV4Y2Vzc2l2ZSBmdWxsbmVzcywgaGF2ZSBubyBlbW90aW9uYWwKcG93ZXIsIHdoaWxlIHRoZSBsYXR0ZXIgYXJlIHRvbyB0aGluIGFuZCwgb3dpbmcgdG8KZXhjZXNzIG9mIGNsZWFybmVzcywgZ2l2ZSBhbiBpbXByZXNzaW9uIG9mIGV4dHJhdmFnYW5jZSBhbmQgYXJlIGluY29tcGF0aWJsZSB3aXRoIHRoZSBpbmZsZXhpb25zCmRlbWFuZGVkIGJ5IGRlbGl2ZXJ5IGFuZCBwbGFjZSB0b28gZ3JlYXQgYSBzdHJhaW4KdXBvbiB0aGUgdm9pY2UuPG1pbGVzdG9uZSBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZSB2b2ljZSBpcyBsaWtlIHRoZSBzdHJpbmdzIG9mCmEgbXVzaWNhbCBpbnN0cnVtZW50OyB0aGUgc2xhY2tlciBpdCBpcyB0aGUgZGVlcGVyCmFuZCBmdWxsZXIgdGhlIG5vdGUgcHJvZHVjZWQsIHdoZXJlYXMgaWYgaXQgYmUKdGlnaHRlbmVkLCB0aGUgc291bmQgYmVjb21lcyB0aGlubmVyIGFuZCBzaHJpbGxlci4KQ29uc2VxdWVudGx5LCB0aGUgZGVlcGVzdCBub3RlcyBsYWNrIGZvcmNlLCBhbmQgdGhlCmhpZ2hlciBydW4gdGhlIHJpc2sgb2YgY3JhY2tpbmcgdGhlIHZvaWNlLiBUaGUgb3JhdG9yCndpbGwsIHRoZXJlZm9yZSwgZW1wbG95IHRoZSBpbnRlcm1lZGlhdGUgbm90ZXMsIHdoaWNoCm11c3QgYmUgcmFpc2VkIHdoZW4gd2Ugc3BlYWsgd2l0aCBlbmVyZ3kgYW5kCmxvd2VyZWQgd2hlbiB3ZSBhZG9wdCBhIG1vcmUgc3ViZHVlZCB0b25lLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.6.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5EZWxpdmVyeSB3aWxsIGJlIG9ybmF0ZSB3aGVuIGl0IGlzIHN1cHBvcnRlZCBieQphIHZvaWNlIHRoYXQgaXMgZWFzeSwgc3Ryb25nLCByaWNoLCBmbGV4aWJsZSwgZmlybSwgc3dlZXQsCmVuZHVyaW5nLCByZXNvbmFudCwgcHVyZSwgY2FycnlpbmcgZmFyIGFuZCBwZW5ldHJhdGluZyB0aGUgZWFyIChmb3IgdGhlcmUgaXMgYSB0eXBlIG9mIHZvaWNlIHdoaWNoCmltcHJlc3NlcyB0aGUgaGVhcmluZyBub3QgYnkgaXRzIHZvbHVtZSwgYnV0IGJ5IGl0cwpwZWN1bGlhciBxdWFsaXR5KTogaW4gYWRkaXRpb24sIHRoZSB2b2ljZSBtdXN0IGJlCmVhc2lseSBtYW5hZ2VkIGFuZCBtdXN0IHBvc3Nlc3MgYWxsIHRoZSBuZWNlc3NhcnkKaW5mbGV4aW9ucyBhbmQgbW9kdWxhdGlvbnMsIGluIGZhY3QgaXQgbXVzdCwgYXMgdGhlCnNheWluZyBpcywgYmUgYSBwZXJmZWN0IGluc3RydW1lbnQsIGVxdWlwcGVkIHdpdGgKZXZlcnkgc3RvcDogZnVydGhlciwgaXQgbXVzdCBoYXZlIHN0cm9uZyBsdW5ncyB0bwpzdXN0YWluIGl0LCBhbmQgYW1wbGUgYnJlYXRoaW5nIHBvd2VyIHRoYXQgd2lsbCBiZQplcXVhbCB0byBhbGwgZGVtYW5kcyB1cG9uIGl0LCBob3dldmVyIGZhdGlndWluZy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlCmRlZXBlc3QgYmFzcyBhbmQgdGhlIGhpZ2hlc3QgdHJlYmxlIG5vdGVzIGFyZSB1bnN1aXRlZCB0byBvcmF0b3J5OiBmb3IgdGhlIGZvcm1lciBsYWNrIGNsZWFybmVzcyBhbmQsCm93aW5nIHRvIHRoZWlyIGV4Y2Vzc2l2ZSBmdWxsbmVzcywgaGF2ZSBubyBlbW90aW9uYWwKcG93ZXIsIHdoaWxlIHRoZSBsYXR0ZXIgYXJlIHRvbyB0aGluIGFuZCwgb3dpbmcgdG8KZXhjZXNzIG9mIGNsZWFybmVzcywgZ2l2ZSBhbiBpbXByZXNzaW9uIG9mIGV4dHJhdmFnYW5jZSBhbmQgYXJlIGluY29tcGF0aWJsZSB3aXRoIHRoZSBpbmZsZXhpb25zCmRlbWFuZGVkIGJ5IGRlbGl2ZXJ5IGFuZCBwbGFjZSB0b28gZ3JlYXQgYSBzdHJhaW4KdXBvbiB0aGUgdm9pY2UuPC90cmFuc2xhdGlvbj4="
translation['11.6.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZSB2b2ljZSBpcyBsaWtlIHRoZSBzdHJpbmdzIG9mCmEgbXVzaWNhbCBpbnN0cnVtZW50OyB0aGUgc2xhY2tlciBpdCBpcyB0aGUgZGVlcGVyCmFuZCBmdWxsZXIgdGhlIG5vdGUgcHJvZHVjZWQsIHdoZXJlYXMgaWYgaXQgYmUKdGlnaHRlbmVkLCB0aGUgc291bmQgYmVjb21lcyB0aGlubmVyIGFuZCBzaHJpbGxlci4KQ29uc2VxdWVudGx5LCB0aGUgZGVlcGVzdCBub3RlcyBsYWNrIGZvcmNlLCBhbmQgdGhlCmhpZ2hlciBydW4gdGhlIHJpc2sgb2YgY3JhY2tpbmcgdGhlIHZvaWNlLiBUaGUgb3JhdG9yCndpbGwsIHRoZXJlZm9yZSwgZW1wbG95IHRoZSBpbnRlcm1lZGlhdGUgbm90ZXMsIHdoaWNoCm11c3QgYmUgcmFpc2VkIHdoZW4gd2Ugc3BlYWsgd2l0aCBlbmVyZ3kgYW5kCmxvd2VyZWQgd2hlbiB3ZSBhZG9wdCBhIG1vcmUgc3ViZHVlZCB0b25lLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQzIiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGUgZmlyc3QgZXNzZW50aWFsIG9mIGEgZ29vZCBkZWxpdmVyeSBpcyBldmVubmVzcy4gVGhlIHZvaWNlIG11c3Qgbm90IHJ1biBqb2x0aW5nbHksIHdpdGgKaXJyZWd1bGFyaXR5IG9mIHJoeXRobSBhbmQgc291bmQsIG1peGluZyBsb25nIGFuZApzaG9ydCBzeWxsYWJsZXMsIGdyYXZlIGFjY2VudHMgYW5kIGFjdXRlLCB0b25lcyBsb3VkCmFuZCBsb3csIHdpdGhvdXQgZGlzY3JpbWluYXRpb24sIHRoZSByZXN1bHQgYmVpbmcgdGhhdAp0aGlzIHVuaXZlcnNhbCB1bmV2ZW5uZXNzIHByb2R1Y2VzIHRoZSBpbXByZXNzaW9uIG9mCgo8cGIgaWQ9InAuMjY3IiAvPgoKYSBsaW1waW5nIGdhaXQuIFRoZSBzZWNvbmQgZXNzZW50aWFsIGlzIHZhcmlldHkgb2YKdG9uZSwgYW5kIGl0IGlzIGluIHRoaXMgYWxvbmUgdGhhdCBkZWxpdmVyeSByZWFsbHkgY29uc2lzdHMuPG1pbGVzdG9uZSBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz4gSSBtdXN0IHdhcm4gbXkgcmVhZGVycyBub3QgdG8gZmFsbCBpbnRvIHRoZQplcnJvciBvZiBzdXBwb3NpbmcgdGhhdCBldmVubmVzcyBhbmQgdmFyaWV0eSBhcmUgaW5jb21wYXRpYmxlIHdpdGggb25lIGFub3RoZXIsIHNpbmNlIHRoZSBmYXVsdCBvcHBvc2VkCnRvIGV2ZW5uZXNzIGlzIHVuZXZlbm5lc3MsIHdoaWxlIHRoZSBvcHBvc2l0ZSBvZgp2YXJpZXR5IGlzIHRoYXQgd2hpY2ggdGhlIEdyZWVrcyB0ZXJtIDxmb3JlaWduIGxhbmc9ImdyZWVrIj5tb25vZWkvZGVpYSw8L2ZvcmVpZ24+IG9yCnVuaWZvcm1pdHkgb2YgYXNwZWN0LiBUaGUgYXJ0IG9mIHByb2R1Y2luZyB2YXJpZXR5Cm5vdCBtZXJlbHkgY2hhcm1zIGFuZCByZWZyZXNoZXMgdGhlIGVhciwgYnV0LCBieSB0aGUKdmVyeSBmYWN0IHRoYXQgaXQgaW52b2x2ZXMgYSBjaGFuZ2Ugb2YgZWZmb3J0LCByZXZpdmVzCnRoZSBzcGVha2VyJ3MgZmxhZ2dpbmcgZW5lcmdpZXMuIEl0IGlzIGxpa2UgdGhlIHJlbGllZgpjYXVzZWQgYnkgY2hhbmdlcyBpbiBwb3NpdGlvbiwgc3VjaCBhcyBhcmUgaW52b2x2ZWQKYnkgc3RhbmRpbmcsIHdhbGtpbmcsIHNpdHRpbmcgYW5kIGx5aW5nLCBub25lIG9mCndoaWNoIGNhbiBiZSBlbmR1cmVkIGZvciBhIGxvbmcgdGltZSB0b2dldGhlci4KPG1pbGVzdG9uZSBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIG1vc3QgaW1wb3J0YW50IHBvaW50ICh3aGljaCBJIHNoYWxsIHByb2NlZWQKdG8gZGlzY3VzcyBhIGxpdHRsZSBsYXRlcikgaXMgdGhlIG5lY2Vzc2l0eSBvZiBhZGFwdGluZwp0aGUgdm9pY2UgdG8gc3VpdCB0aGUgbmF0dXJlIG9mIHRoZSB2YXJpb3VzIHN1YmplY3RzCm9uIHdoaWNoIHdlIGFyZSBzcGVha2luZyBhbmQgdGhlIG1vb2RzIHRoYXQgdGhleQpkZW1hbmQ6IG90aGVyd2lzZSBvdXIgdm9pY2Ugd2lsbCBiZSBhdCB2YXJpYW5jZSB3aXRoCm91ciBsYW5ndWFnZS4gV2UgbXVzdCwgdGhlcmVmb3JlLCBhdm9pZCB0aGF0IHdoaWNoCnRoZSBHcmVla3MgY2FsbCA8aGkgcmVuZD0iaXRhbGljcyI+bW9ub3RvbnksPC9oaT4gdGhhdCBpcyB0byBzYXksIHRoZSB1bnZhcnlpbmcgZXhlcnRpb24gYm90aCBvZiBsdW5ncyBhbmQgdm9pY2UuIEJ5IHRoaXMgSSBkbwpub3Qgc2ltcGx5IG1lYW4gdGhhdCB3ZSBtdXN0IGF2b2lkIHNheWluZyBldmVyeXRoaW5nIGluIGEgbG91ZCB0b25lLCBhIGZhdWx0IHdoaWNoIGFtb3VudHMgdG8KbWFkbmVzcywgb3IgaW4gYSBjb2xsb3F1aWFsIHRvbmUsIHdoaWNoIGNyZWF0ZXMgYW4KaW1wcmVzc2lvbiBvZiBsaWZlbGVzc25lc3MsIG9yIGluIGEgc3ViZHVlZCBtdXJtdXIsCndoaWNoIGlzIHV0dGVybHkgZGVzdHJ1Y3RpdmUgb2YgYWxsIHZpZ291ci48bWlsZXN0b25lIG49IjQ2IiB1bml0PSJzZWN0aW9uIiAvPiBXaGF0IEkKbWVhbiBpcyB0aGlzOiB3aXRoaW4gdGhlIGxpbWl0cyBvZiBvbmUgcGFzc2FnZSBhbmQgdGhlCmNvbXBhc3Mgb2Ygb25lIGVtb3Rpb24gd2UgbWF5IHZhcnkgb3VyIHRvbmUgdG8gYQpjZXJ0YWluLCB0aG91Z2ggbm90IGEgdmVyeSBncmVhdCBleHRlbnQsIGFjY29yZGluZwphcyB0aGUgZGlnbml0eSBvZiB0aGUgbGFuZ3VhZ2UsIHRoZSBuYXR1cmUgb2YgdGhlCnRob3VnaHQsIHRoZSBjb25jbHVzaW9uIGFuZCBvcGVuaW5nIG9mIG91ciBzZW50ZW5jZXMgb3IgdHJhbnNpdGlvbnMgZnJvbSBvbmUgcG9pbnQgdG8gYW5vdGhlciwgbWF5CmRlbWFuZC4gVGh1cywgdGhvc2Ugd2hvIHBhaW50IGluIG1vbm9jaHJvbWUKCjxwYiBpZD0icC4yNjkiIC8+CgpzdGlsbCByZXByZXNlbnQgdGhlaXIgb2JqZWN0cyBpbiBkaWZmZXJlbnQgcGxhbmVzLCBzaW5jZQpvdGhlcndpc2UgaXQgd291bGQgaGF2ZSBiZWVuIGltcG9zc2libGUgdG8gZGVwaWN0CmV2ZW4gdGhlIGxpbWJzIG9mIHRoZWlyIGZpZ3VyZXMuPG1pbGVzdG9uZSBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz4gTGV0IHVzIHRha2UgYXMgYW4KZXhhbXBsZSB0aGUgb3BlbmluZyBvZiBDaWNlcm8ncyBtYWduaWZpY2VudCBzcGVlY2gKaW4gZGVmZW5jZSBvZiBNaWxvLiBJcyBpdCBub3QgY2xlYXIgdGhhdCB0aGUgb3JhdG9yCmhhcyB0byBjaGFuZ2UgaGlzIHRvbmUgYWxtb3N0IGF0IGV2ZXJ5IHN0b3A/IGl0IGlzIHRoZQpzYW1lIGZhY2UsIGJ1dCB0aGUgZXhwcmVzc2lvbiBpcyBjaGFuZ2VkLiA8aGkgcmVuZD0iaXRhbGljcyI+RXRzaSB2ZXJlb3IsCml1ZGljZXMsIG5lIHR1cnBlIHNpdCw8L2hpPjxtaWxlc3RvbmUgbj0iNDgiIHVuaXQ9InNlY3Rpb24iIC8+IDxoaSByZW5kPSJpdGFsaWNzIj5wcmUgZm9ydGlzc2ltbyB2aXJvIGRpY2VyZSBpbmNpcGllbnRlbQp0aW1lcmUuPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5wcm8gTWlsLjwvaGk+IGkuIDEgPGhpIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPiA8cXVvdGU+QWx0aG91Z2ggSSBmZWFyLCBnZW50bGVtZW4sIHRoYXQgaXQKbWF5IGJlIGRpc2NyZWRpdGFibGUgdGhhdCBJIHNob3VsZCBmZWVsIGFmcmFpZCBvbiByaXNpbmcgdG8KZGVmZW5kIHRoZSBoYXJ2ZXN0IG9mIG1lbiwgYW5kIHRob3VnaCBpdCBpcyBmYXIgZnJvbSBiZWNvbWluZwp0aGF0LCB3aGVyZWFzIFRpdHVzIEFubml1cyBpcyBtb3JlIGNvbmNlcm5lZCBmb3IgdGhlIHNhZmV0eQpvZiB0aGUgU3RhdGUgdGhhbiBmb3IgaGlzIG93biwgSSA8aGkgcmVuZD0iaXRhbGljcyI+c2hvdWxkPC9oaT4gaGUgdW5hYmxlIHRvIGJyaW5nIGEKbGlrZSBkZWdyZWUgb2YgY291cmFnZSB0byBhaWQgbWUgaW4gcGxlYWRpbmcgaGlzIGNhdXNlOyBzdGlsbCwKdGhlIHN0cmFuZ2UgYXBwZWFyYW5jZSBvZiB0aGlzIG5vdmVsIHRyaWJ1bmFsIGRpc21heXMgbXkKZXllcywgd2hpY2gsIHdoaXRoZXJzb2V2ZXIgdGhleSB0dXJuLCBsb29rIGluIHZhaW4gZm9yIHRoZQpjdXN0b21hcnkgYXNwZWN0IG9mIHRoZSBmb3J1bSBhbmQgdGhlIHRpbWUtaG9ub3VyZWQgdXNhZ2UKb2YgdGhlIGNvdXJ0cy4gRm9yIHlvdXIgYmVuY2ggaXMgbm90IHN1cnJvdW5kZWQsIGFzIGl0IHVzZWQKdG8gYmUsIGJ5IGEgcmluZyBvZiBzcGVjdGF0b3JzLDwvcXVvdGU+IGV0Yy48L25vdGU+IEFsdGhvdWdoIHRoZSBnZW5lcmFsIHRvbmUgb2YgdGhlIHBhc3NhZ2UgaXMKcmVzdHJhaW5lZCBhbmQgc3ViZHVlZCwgc2luY2UgaXQgaXMgbm90IG1lcmVseSBhbgo8aGkgcmVuZD0iaXRhbGljcyI+ZXhvcmRpdW0sPC9oaT4gYnV0IHRoZSA8aGkgcmVuZD0iaXRhbGljcyI+ZXhvcmRpdW08L2hpPiBvZiBhIG1hbiBzdWZmZXJpbmcgZnJvbQpzZXJpb3VzIGFueGlldHksIHN0aWxsIHNvbWV0aGluZyBmdWxsZXIgYW5kIGJvbGRlciBpcwpyZXF1aXJlZCBpbiB0aGUgdG9uZSwgd2hlbiBoZSBzYXlzIDxoaSByZW5kPSJpdGFsaWNzIj5wcm8gZm9ydGlzc2lvbW8gdmlybyw8L2hpPgp0aGFuIHdoZW4gaGUgc2F5cyA8aGkgcmVuZD0iaXRhbGljcyI+ZXRzaSBjZXJlb3IgYW5kIHR1cnBlIHNpdDwvaGk+IGFuZCA8aGkgcmVuZD0iaXRhbGljcyI+dGltZXJlLjwvaGk+CjxtaWxlc3RvbmUgbj0iNDkiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IGhpcyBzZWNvbmQgYnJlYXRoIG11c3QgYmUgbW9yZSB2aWdvcm91cywgcGFydGx5Cm93aW5nIHRvIHRoZSBuYXR1cmFsIGluY3JlYXNlIG9mIGVmZm9ydCwgc2luY2Ugd2UKYWx3YXlzIHNwZWFrIG91ciBzZWNvbmQgc2VudGVuY2Ugd2l0aCBsZXNzIHRpbWlkaXR5LAphbmQgcGFydGx5IGJlY2F1c2UgaGUgaW5kaWNhdGVzIHRoZSBoaWdoIGNvdXJhZ2Ugb2YKTWlsbzogPGhpIHJlbmQ9Iml0YWxpY3MiPm1pbmltZXF1ZSBkZWNlYXQsIGN1bTwvaGk+IFQuIEFubml1cyBpcHNlIG1hZ2lzIGRlCjxoaSByZW5kPSJpdGFsaWNzIj5yZWkgcHVibGljYWUgc2FsdXRlIHF1YW0gZGUgc3VhIHBlcnR1cmJldHVyLjwvaGk+IFRoZW4gaGUKcHJvY2VlZHMgdG8gc29tZXRoaW5nIGxpa2UgYSByZXByb29mIG9mIGhpbXNlbGY6IDxoaSByZW5kPSJpdGFsaWNzIj5tZQphZCBlaXVzIGNhdXNhbSBwYXJlbSBhbmltaSBtYWd1aXR1ZGluZW0gYWRmZXJyZSBub24KcG9zc2UuPC9oaT48bWlsZXN0b25lIG49IjUwIiB1bml0PSJzZWN0aW9uIiAvPiBUaGUgbmV4dCBjbGF1c2Ugc3VnZ2VzdHMgYSByZWZsZXhpb24gb24gdGhlCmNvbmR1Y3Qgb2Ygb3RoZXJzOiA8aGkgcmVuZD0iaXRhbGljcyI+dGFtZW4gaGFlYyBub3ZpIGl1ZGljaWkgbm92YSBmb3JtYQp0ZXJyZXQgb2N1bG9zLjwvaGk+IEFuZCB0aGVuIGluIHdoYXQgZm9sbG93cyBoZSBvcGVucwpldmVyeSBzdG9wLCBhcyB0aGUgc2F5aW5nIGlzOiA8aGkgcmVuZD0iaXRhbGljcyI+cXVpLCBxdW9jdW5xdWUgaW5jaWRlcnVudCwKY29uc3VldHVkaW5lbSBmb3JpIGV0IHByaXN0aW51bSBtb3JlbSBpdWRpY2lvcnVtIHJlcXVpcnVudDo8L2hpPiB3aGlsZSB0aGUgbmV4dCBjbGF1c2UgaXMgZXZlbiBmdWxsZXIgYW5kIGZyZWVyOgo8aGkgcmVuZD0iaXRhbGljcyI+bm9uIGVuaW0gY29yb25hIGNvdXNlc3N1cyB2ZXN0ZXIgY2luY3R1cyBlc3QsIHV0IHNvbGViYXQuPC9oaT4KPG1pbGVzdG9uZSBuPSI1MSIgdW5pdD0ic2VjdGlvbiIgLz5JIGhhdmUgY2FsbGVkIGF0dGVudGlvbiB0byB0aGVzZSBwb2ludHMgdG8gbWFrZSBpdApjbGVhciB0aGF0IHRoZXJlIGlzIGEgY2VydGFpbiB2YXJpZXR5LCBub3QgbWVyZWx5IGluCgo8cGIgaWQ9InAuMjcxIiAvPgoKdGhlIGRlbGl2ZXJ5IG9mIDxoaSByZW5kPSJpdGFsaWNzIj5jb2xhLDwvaGk+IGJ1dCBldmVuIGluIHRoYXQgb2YgcGhyYXNlcyBjb25zaXN0aW5nIG9mIG9uZSB3b3JkLCBhIHZhcmlldHkgdGhlIGxhY2sgb2Ygd2hpY2gKd291bGQgbWFrZSBldmVyeSB3b3JkIHNlZW0gb2YgZXF1YWwgaW1wb3J0YW5jZS48L3A+CjwvdHJhbnNsYXRpb24+"
translation['11.6.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIGZpcnN0IGVzc2VudGlhbCBvZiBhIGdvb2QgZGVsaXZlcnkgaXMgZXZlbm5lc3MuIFRoZSB2b2ljZSBtdXN0IG5vdCBydW4gam9sdGluZ2x5LCB3aXRoCmlycmVndWxhcml0eSBvZiByaHl0aG0gYW5kIHNvdW5kLCBtaXhpbmcgbG9uZyBhbmQKc2hvcnQgc3lsbGFibGVzLCBncmF2ZSBhY2NlbnRzIGFuZCBhY3V0ZSwgdG9uZXMgbG91ZAphbmQgbG93LCB3aXRob3V0IGRpc2NyaW1pbmF0aW9uLCB0aGUgcmVzdWx0IGJlaW5nIHRoYXQKdGhpcyB1bml2ZXJzYWwgdW5ldmVubmVzcyBwcm9kdWNlcyB0aGUgaW1wcmVzc2lvbiBvZgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjY3IiAvPgoKYSBsaW1waW5nIGdhaXQuIFRoZSBzZWNvbmQgZXNzZW50aWFsIGlzIHZhcmlldHkgb2YKdG9uZSwgYW5kIGl0IGlzIGluIHRoaXMgYWxvbmUgdGhhdCBkZWxpdmVyeSByZWFsbHkgY29uc2lzdHMuPC90cmFuc2xhdGlvbj4="
translation['11.6.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz4gSSBtdXN0IHdhcm4gbXkgcmVhZGVycyBub3QgdG8gZmFsbCBpbnRvIHRoZQplcnJvciBvZiBzdXBwb3NpbmcgdGhhdCBldmVubmVzcyBhbmQgdmFyaWV0eSBhcmUgaW5jb21wYXRpYmxlIHdpdGggb25lIGFub3RoZXIsIHNpbmNlIHRoZSBmYXVsdCBvcHBvc2VkCnRvIGV2ZW5uZXNzIGlzIHVuZXZlbm5lc3MsIHdoaWxlIHRoZSBvcHBvc2l0ZSBvZgp2YXJpZXR5IGlzIHRoYXQgd2hpY2ggdGhlIEdyZWVrcyB0ZXJtIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPm1vbm9laS9kZWlhLDwvZm9yZWlnbj4gb3IKdW5pZm9ybWl0eSBvZiBhc3BlY3QuIFRoZSBhcnQgb2YgcHJvZHVjaW5nIHZhcmlldHkKbm90IG1lcmVseSBjaGFybXMgYW5kIHJlZnJlc2hlcyB0aGUgZWFyLCBidXQsIGJ5IHRoZQp2ZXJ5IGZhY3QgdGhhdCBpdCBpbnZvbHZlcyBhIGNoYW5nZSBvZiBlZmZvcnQsIHJldml2ZXMKdGhlIHNwZWFrZXIncyBmbGFnZ2luZyBlbmVyZ2llcy4gSXQgaXMgbGlrZSB0aGUgcmVsaWVmCmNhdXNlZCBieSBjaGFuZ2VzIGluIHBvc2l0aW9uLCBzdWNoIGFzIGFyZSBpbnZvbHZlZApieSBzdGFuZGluZywgd2Fsa2luZywgc2l0dGluZyBhbmQgbHlpbmcsIG5vbmUgb2YKd2hpY2ggY2FuIGJlIGVuZHVyZWQgZm9yIGEgbG9uZyB0aW1lIHRvZ2V0aGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIG1vc3QgaW1wb3J0YW50IHBvaW50ICh3aGljaCBJIHNoYWxsIHByb2NlZWQKdG8gZGlzY3VzcyBhIGxpdHRsZSBsYXRlcikgaXMgdGhlIG5lY2Vzc2l0eSBvZiBhZGFwdGluZwp0aGUgdm9pY2UgdG8gc3VpdCB0aGUgbmF0dXJlIG9mIHRoZSB2YXJpb3VzIHN1YmplY3RzCm9uIHdoaWNoIHdlIGFyZSBzcGVha2luZyBhbmQgdGhlIG1vb2RzIHRoYXQgdGhleQpkZW1hbmQ6IG90aGVyd2lzZSBvdXIgdm9pY2Ugd2lsbCBiZSBhdCB2YXJpYW5jZSB3aXRoCm91ciBsYW5ndWFnZS4gV2UgbXVzdCwgdGhlcmVmb3JlLCBhdm9pZCB0aGF0IHdoaWNoCnRoZSBHcmVla3MgY2FsbCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5tb25vdG9ueSw8L2hpPiB0aGF0IGlzIHRvIHNheSwgdGhlIHVudmFyeWluZyBleGVydGlvbiBib3RoIG9mIGx1bmdzIGFuZCB2b2ljZS4gQnkgdGhpcyBJIGRvCm5vdCBzaW1wbHkgbWVhbiB0aGF0IHdlIG11c3QgYXZvaWQgc2F5aW5nIGV2ZXJ5dGhpbmcgaW4gYSBsb3VkIHRvbmUsIGEgZmF1bHQgd2hpY2ggYW1vdW50cyB0bwptYWRuZXNzLCBvciBpbiBhIGNvbGxvcXVpYWwgdG9uZSwgd2hpY2ggY3JlYXRlcyBhbgppbXByZXNzaW9uIG9mIGxpZmVsZXNzbmVzcywgb3IgaW4gYSBzdWJkdWVkIG11cm11ciwKd2hpY2ggaXMgdXR0ZXJseSBkZXN0cnVjdGl2ZSBvZiBhbGwgdmlnb3VyLjwvdHJhbnNsYXRpb24+"
translation['11.6.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz4gV2hhdCBJCm1lYW4gaXMgdGhpczogd2l0aGluIHRoZSBsaW1pdHMgb2Ygb25lIHBhc3NhZ2UgYW5kIHRoZQpjb21wYXNzIG9mIG9uZSBlbW90aW9uIHdlIG1heSB2YXJ5IG91ciB0b25lIHRvIGEKY2VydGFpbiwgdGhvdWdoIG5vdCBhIHZlcnkgZ3JlYXQgZXh0ZW50LCBhY2NvcmRpbmcKYXMgdGhlIGRpZ25pdHkgb2YgdGhlIGxhbmd1YWdlLCB0aGUgbmF0dXJlIG9mIHRoZQp0aG91Z2h0LCB0aGUgY29uY2x1c2lvbiBhbmQgb3BlbmluZyBvZiBvdXIgc2VudGVuY2VzIG9yIHRyYW5zaXRpb25zIGZyb20gb25lIHBvaW50IHRvIGFub3RoZXIsIG1heQpkZW1hbmQuIFRodXMsIHRob3NlIHdobyBwYWludCBpbiBtb25vY2hyb21lCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yNjkiIC8+CgpzdGlsbCByZXByZXNlbnQgdGhlaXIgb2JqZWN0cyBpbiBkaWZmZXJlbnQgcGxhbmVzLCBzaW5jZQpvdGhlcndpc2UgaXQgd291bGQgaGF2ZSBiZWVuIGltcG9zc2libGUgdG8gZGVwaWN0CmV2ZW4gdGhlIGxpbWJzIG9mIHRoZWlyIGZpZ3VyZXMuPC90cmFuc2xhdGlvbj4="
translation['11.6.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz4gTGV0IHVzIHRha2UgYXMgYW4KZXhhbXBsZSB0aGUgb3BlbmluZyBvZiBDaWNlcm8ncyBtYWduaWZpY2VudCBzcGVlY2gKaW4gZGVmZW5jZSBvZiBNaWxvLiBJcyBpdCBub3QgY2xlYXIgdGhhdCB0aGUgb3JhdG9yCmhhcyB0byBjaGFuZ2UgaGlzIHRvbmUgYWxtb3N0IGF0IGV2ZXJ5IHN0b3A/IGl0IGlzIHRoZQpzYW1lIGZhY2UsIGJ1dCB0aGUgZXhwcmVzc2lvbiBpcyBjaGFuZ2VkLiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5FdHNpIHZlcmVvciwKaXVkaWNlcywgbmUgdHVycGUgc2l0LDwvaGk+PC90cmFuc2xhdGlvbj4="
translation['11.6.48'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0ic2VjdGlvbiIgLz4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJlIGZvcnRpc3NpbW8gdmlybyBkaWNlcmUgaW5jaXBpZW50ZW0KdGltZXJlLjwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBNaWwuPC9oaT4gaS4gMSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zcXEuPC9oaT4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QWx0aG91Z2ggSSBmZWFyLCBnZW50bGVtZW4sIHRoYXQgaXQKbWF5IGJlIGRpc2NyZWRpdGFibGUgdGhhdCBJIHNob3VsZCBmZWVsIGFmcmFpZCBvbiByaXNpbmcgdG8KZGVmZW5kIHRoZSBoYXJ2ZXN0IG9mIG1lbiwgYW5kIHRob3VnaCBpdCBpcyBmYXIgZnJvbSBiZWNvbWluZwp0aGF0LCB3aGVyZWFzIFRpdHVzIEFubml1cyBpcyBtb3JlIGNvbmNlcm5lZCBmb3IgdGhlIHNhZmV0eQpvZiB0aGUgU3RhdGUgdGhhbiBmb3IgaGlzIG93biwgSSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zaG91bGQ8L2hpPiBoZSB1bmFibGUgdG8gYnJpbmcgYQpsaWtlIGRlZ3JlZSBvZiBjb3VyYWdlIHRvIGFpZCBtZSBpbiBwbGVhZGluZyBoaXMgY2F1c2U7IHN0aWxsLAp0aGUgc3RyYW5nZSBhcHBlYXJhbmNlIG9mIHRoaXMgbm92ZWwgdHJpYnVuYWwgZGlzbWF5cyBteQpleWVzLCB3aGljaCwgd2hpdGhlcnNvZXZlciB0aGV5IHR1cm4sIGxvb2sgaW4gdmFpbiBmb3IgdGhlCmN1c3RvbWFyeSBhc3BlY3Qgb2YgdGhlIGZvcnVtIGFuZCB0aGUgdGltZS1ob25vdXJlZCB1c2FnZQpvZiB0aGUgY291cnRzLiBGb3IgeW91ciBiZW5jaCBpcyBub3Qgc3Vycm91bmRlZCwgYXMgaXQgdXNlZAp0byBiZSwgYnkgYSByaW5nIG9mIHNwZWN0YXRvcnMsPC9xdW90ZT4gZXRjLjwvbm90ZT4gQWx0aG91Z2ggdGhlIGdlbmVyYWwgdG9uZSBvZiB0aGUgcGFzc2FnZSBpcwpyZXN0cmFpbmVkIGFuZCBzdWJkdWVkLCBzaW5jZSBpdCBpcyBub3QgbWVyZWx5IGFuCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBNaWwuPC9oaT4gaS4gMSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zcXEuPC9oaT4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QWx0aG91Z2ggSSBmZWFyLCBnZW50bGVtZW4sIHRoYXQgaXQKbWF5IGJlIGRpc2NyZWRpdGFibGUgdGhhdCBJIHNob3VsZCBmZWVsIGFmcmFpZCBvbiByaXNpbmcgdG8KZGVmZW5kIHRoZSBoYXJ2ZXN0IG9mIG1lbiwgYW5kIHRob3VnaCBpdCBpcyBmYXIgZnJvbSBiZWNvbWluZwp0aGF0LCB3aGVyZWFzIFRpdHVzIEFubml1cyBpcyBtb3JlIGNvbmNlcm5lZCBmb3IgdGhlIHNhZmV0eQpvZiB0aGUgU3RhdGUgdGhhbiBmb3IgaGlzIG93biwgSSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zaG91bGQ8L2hpPiBoZSB1bmFibGUgdG8gYnJpbmcgYQpsaWtlIGRlZ3JlZSBvZiBjb3VyYWdlIHRvIGFpZCBtZSBpbiBwbGVhZGluZyBoaXMgY2F1c2U7IHN0aWxsLAp0aGUgc3RyYW5nZSBhcHBlYXJhbmNlIG9mIHRoaXMgbm92ZWwgdHJpYnVuYWwgZGlzbWF5cyBteQpleWVzLCB3aGljaCwgd2hpdGhlcnNvZXZlciB0aGV5IHR1cm4sIGxvb2sgaW4gdmFpbiBmb3IgdGhlCmN1c3RvbWFyeSBhc3BlY3Qgb2YgdGhlIGZvcnVtIGFuZCB0aGUgdGltZS1ob25vdXJlZCB1c2FnZQpvZiB0aGUgY291cnRzLiBGb3IgeW91ciBiZW5jaCBpcyBub3Qgc3Vycm91bmRlZCwgYXMgaXQgdXNlZAp0byBiZSwgYnkgYSByaW5nIG9mIHNwZWN0YXRvcnMsPC9xdW90ZT4gZXRjLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNob3VsZDwvaGk+IGhlIHVuYWJsZSB0byBicmluZyBhCmxpa2UgZGVncmVlIG9mIGNvdXJhZ2UgdG8gYWlkIG1lIGluIHBsZWFkaW5nIGhpcyBjYXVzZTsgc3RpbGwsCnRoZSBzdHJhbmdlIGFwcGVhcmFuY2Ugb2YgdGhpcyBub3ZlbCB0cmlidW5hbCBkaXNtYXlzIG15CmV5ZXMsIHdoaWNoLCB3aGl0aGVyc29ldmVyIHRoZXkgdHVybiwgbG9vayBpbiB2YWluIGZvciB0aGUKY3VzdG9tYXJ5IGFzcGVjdCBvZiB0aGUgZm9ydW0gYW5kIHRoZSB0aW1lLWhvbm91cmVkIHVzYWdlCm9mIHRoZSBjb3VydHMuIEZvciB5b3VyIGJlbmNoIGlzIG5vdCBzdXJyb3VuZGVkLCBhcyBpdCB1c2VkCnRvIGJlLCBieSBhIHJpbmcgb2Ygc3BlY3RhdG9ycyw8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5leG9yZGl1bSw8L2hpPiBidXQgdGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmV4b3JkaXVtPC9oaT4gb2YgYSBtYW4gc3VmZmVyaW5nIGZyb20Kc2VyaW91cyBhbnhpZXR5LCBzdGlsbCBzb21ldGhpbmcgZnVsbGVyIGFuZCBib2xkZXIgaXMKcmVxdWlyZWQgaW4gdGhlIHRvbmUsIHdoZW4gaGUgc2F5cyA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gZm9ydGlzc2lvbW8gdmlybyw8L2hpPgp0aGFuIHdoZW4gaGUgc2F5cyA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5ldHNpIGNlcmVvciBhbmQgdHVycGUgc2l0PC9oaT4gYW5kIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnRpbWVyZS48L2hpPgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.49'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaGlzIHNlY29uZCBicmVhdGggbXVzdCBiZSBtb3JlIHZpZ29yb3VzLCBwYXJ0bHkKb3dpbmcgdG8gdGhlIG5hdHVyYWwgaW5jcmVhc2Ugb2YgZWZmb3J0LCBzaW5jZSB3ZQphbHdheXMgc3BlYWsgb3VyIHNlY29uZCBzZW50ZW5jZSB3aXRoIGxlc3MgdGltaWRpdHksCmFuZCBwYXJ0bHkgYmVjYXVzZSBoZSBpbmRpY2F0ZXMgdGhlIGhpZ2ggY291cmFnZSBvZgpNaWxvOiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5taW5pbWVxdWUgZGVjZWF0LCBjdW08L2hpPiBULiBBbm5pdXMgaXBzZSBtYWdpcyBkZQo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5yZWkgcHVibGljYWUgc2FsdXRlIHF1YW0gZGUgc3VhIHBlcnR1cmJldHVyLjwvaGk+IFRoZW4gaGUKcHJvY2VlZHMgdG8gc29tZXRoaW5nIGxpa2UgYSByZXByb29mIG9mIGhpbXNlbGY6IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPm1lCmFkIGVpdXMgY2F1c2FtIHBhcmVtIGFuaW1pIG1hZ3VpdHVkaW5lbSBhZGZlcnJlIG5vbgpwb3NzZS48L2hpPjwvdHJhbnNsYXRpb24+"
translation['11.6.50'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIG5leHQgY2xhdXNlIHN1Z2dlc3RzIGEgcmVmbGV4aW9uIG9uIHRoZQpjb25kdWN0IG9mIG90aGVyczogPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+dGFtZW4gaGFlYyBub3ZpIGl1ZGljaWkgbm92YSBmb3JtYQp0ZXJyZXQgb2N1bG9zLjwvaGk+IEFuZCB0aGVuIGluIHdoYXQgZm9sbG93cyBoZSBvcGVucwpldmVyeSBzdG9wLCBhcyB0aGUgc2F5aW5nIGlzOiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5xdWksIHF1b2N1bnF1ZSBpbmNpZGVydW50LApjb25zdWV0dWRpbmVtIGZvcmkgZXQgcHJpc3RpbnVtIG1vcmVtIGl1ZGljaW9ydW0gcmVxdWlydW50OjwvaGk+IHdoaWxlIHRoZSBuZXh0IGNsYXVzZSBpcyBldmVuIGZ1bGxlciBhbmQgZnJlZXI6CjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPm5vbiBlbmltIGNvcm9uYSBjb3VzZXNzdXMgdmVzdGVyIGNpbmN0dXMgZXN0LCB1dCBzb2xlYmF0LjwvaGk+CjwvdHJhbnNsYXRpb24+"
translation['11.6.51'] = ""
translation['11.6.52'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MiIgdW5pdD0ic2VjdGlvbiIgLz4gV2UgbXVzdCBhbHNvIGJld2FyZSBvZiBjb25mdXNpbmcgb3VyIHV0dGVyYW5jZSBieSBleGNlc3NpdmUgdm9sdWJpbGl0eSwgd2hpY2gKcmVzdWx0cyBpbiBkaXNyZWdhcmQgb2YgcHVuY3R1YXRpb24sIGxvc3Mgb2YgZW1vdGlvbmFsCnBvd2VyLCBhbmQgc29tZXRpbWVzIGluIHRoZSBjbGlwcGluZyBvZiB3b3Jkcy4gVGhlCm9wcG9zaXRlIGZhdWx0IGlzIGV4Y2Vzc2l2ZSBzbG93bmVzcyBvZiBzcGVlY2gsIHdoaWNoCmlzIGEgc2lnbiBvZiBsYWNrIG9mIHJlYWRpbmVzcyBpbiBpbnZlbnRpb24sIHRlbmRzIGJ5Cml0cyBzbHVnZ2lzaG5lc3MgdG8gcmVuZGVyIG91ciBoZWFyZXJzIGluYXR0ZW50aXZlLAphbmQsIGZ1cnRoZXIsIHdhc3RlcyB0aGUgdGltZSBhbGxvdHRlZCB0byB1cyBmb3Igc3BlYWtpbmcsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmFxdWFtIHBlcmRpdC48L2hpPiBMaXQuIHdhc3RlcyB3YXRlci4gVGhlIHJlZmVyZW5jZSBpcyB0bwp0aGUgY2xlcHN5ZHJhIG9yIHdhdGVyLWNsb2NrIGVtcGxveWVkIGZvciB0aGUgbWVhc3VyZW1lbnQKb2YgdGltZS48L25vdGU+IGEgY29uc2lkZXJhdGlvbiB3aGljaCBpcyBvZiBzb21lIGltcG9ydGFuY2UuCk91ciBzcGVlY2ggbXVzdCBiZSByZWFkeSwgYnV0IG5vdCBwcmVjaXBpdGF0ZSwgdW5kZXIKY29udHJvbCwgYnV0IG5vdCBzbG93LDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmFxdWFtIHBlcmRpdC48L2hpPiBMaXQuIHdhc3RlcyB3YXRlci4gVGhlIHJlZmVyZW5jZSBpcyB0bwp0aGUgY2xlcHN5ZHJhIG9yIHdhdGVyLWNsb2NrIGVtcGxveWVkIGZvciB0aGUgbWVhc3VyZW1lbnQKb2YgdGltZS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.53'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MyIgdW5pdD0ic2VjdGlvbiIgLz4gd2hpbGUgd2UgbXVzdCBub3QgdGFrZSBicmVhdGgKc28gb2Z0ZW4gYXMgdG8gYnJlYWsgdXAgb3VyIHNlbnRlbmNlLCBub3IsIG9uIHRoZQpvdGhlciBoYW5kLCBzdXN0YWluIGl0IHVudGlsIGl0IGZhaWxzIHVzIGZyb20gZXhoYXVzdGlvbi4KRm9yIHRoZSBzb3VuZCBwcm9kdWNlZCBieSBsb3NzIG9mIGJyZWF0aCBpcyBkaXNhZ3JlZWFibGU7IHdlIGdhc3AgbGlrZSBhIGRyb3duaW5nIG1hbiBhbmQgZmlsbCBvdXIgbHVuZ3MKd2l0aCBsb25nIGRyYXduIGluaGFsYXRpb25zIGF0IGluIGFwcHJvcHJpYXRlIG1vbWVudHMsCmdpdmluZyB0aGUgaW1wcmVzc2lvbiB0aGF0IG91ciBhY3Rpb24gaXMgZHVlIG5vdCB0bwpjaG9pY2UsIGJ1dCB0byBjb21wdWxzaW9uLiBUaGVyZWZvcmUsIGluIGF0dGFja2luZwphIHBlcmlvZCBvZiBhYm5vcm1hbCBsZW5ndGgsIHdlIHNob3VsZCBjb2xsZWN0IG91cgpicmVhdGgsIGJ1dCBxdWlja2x5LCBub2lzZWxlc3NseSBhbmQgaW1wZXJjZXB0aWJseS4KT24gb3RoZXIgb2NjYXNpb25zIHdlIHNoYWxsIGJlIGFibGUgdG8gdGFrZSBicmVhdGgKYXQgdGhlIG5hdHVyYWwgYnJlYWtzIGluIHRoZSBzdWJzdGFuY2Ugb2Ygb3VyIHNwZWVjaC4KPC90cmFuc2xhdGlvbj4="
translation['11.6.54'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2UgbXVzdCBleGVyY2lzZSBvdXIgYnJlYXRoaW5nIGNhcGFjaXR5IHRvIG1ha2UKaXQgYXMgZ3JlYXQgYXMgcG9zc2libGUuIFRvIHByb2R1Y2UgdGhpcyByZXN1bHQgRGVtb3N0aGVuZXMgdXNlZCB0byByZWNpdGUgYXMgbWFueSBzdWNjZXNzaXZlIGxpbmVzIGFzCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yNzMiIC8+Cgpwb3NzaWJsZSwgd2hpbGUgaGUgd2FzIGNsaW1iaW5nIGEgaGlsbC4gSGUgYWxzbywgd2l0aAphIHZpZXcgdG8gc2VjdXJpbmcgZmx1ZW5jeSBmcmVlIGZyb20gaW1wZWRpbWVudCwKdXNlZCB0byByb2xsIHBlYmJsZXMgdW5kZXIgaGlzIHRvbmd1ZSB3aGVuIHNwZWFraW5nCmluIHRoZSBwcml2YWN5IG9mIGhpcyBzdHVkeS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.55'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NSIgdW5pdD0ic2VjdGlvbiIgLz4gU29tZXRpbWVzIHRoZSBicmVhdGgsCmFsdGhvdWdoIGNhcGFibGUgb2Ygc3VzdGFpbmVkIGVmZm9ydCBhbmQgc3VmZmljaWVudGx5CmZ1bGwgYW5kIGNsZWFyLCBsYWNrcyBmaXJtbmVzcyB3aGVuIGV4ZXJ0ZWQsIGhhZCBmb3IKdGhhdCByZWFzb24gaXMgbGlhYmxlIHRvIGJlY29tZSB0cmVtdWxvdXMsIGxpa2UgYm9kaWVzCndoaWNoLCBhbHRob3VnaCB0byBhbGwgYXBwZWFyYW5jZXMgc291bmQsIHJlY2VpdmUKaW5zdWZmaWNpZW50IHN1cHBvcnQgZnJvbSB0aGUgc2luZXdzLiBUaGlzIHRoZSBHcmVla3MKY2FsbCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj5icmFzbW8vcy48L2ZvcmVpZ24+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPmJyYS9neG9zPC9mb3JlaWduPiBpcyBnZW5lcmFsbHkgcmVhZCwgYnV0IHRoZSB3b3JkIGlzIHVzZWQgaW4gdGhlCnNlbnNlIG9mIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmhvdHJzZW5lc3MsPC9xdW90ZT4gd2hpY2ggaXMgbm90IHdoYXQgUXVpbnRpbGlhbiBkZXNjcmliZXMuCkkgd291bGQgcmVhZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj5icmFzbW8vcyw8L2ZvcmVpZ24+IGEgd29yZCBtZWFuaW5nIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmVmZmVydmVzY2VuY2UsPC9xdW90ZT4KPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+c2hha2luZyw8L3F1b3RlPiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5zaGl2ZXJpbmcuPC9xdW90ZT4gSGVyZSA9IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnRyZW1vbG8uPC9oaT48L25vdGU+IFRoZXJlIGFyZSBzb21lIHRvbyB3aG8sIG93aW5nIHRvCnRoZSBsb3NzIG9mIHRlZXRoLCBkbyBub3QgZHJhdyBpbiB0aGUgYnJlYXRoIG5hdHVyYWxseSwKYnV0IHN1Y2sgaXQgaW4gd2l0aCBhIGhpc3Npbmcgc291bmQuIFRoZXJlIGFyZQpvdGhlcnMgd2hvIHBhbnQgaW5jZXNzYW50bHkgYW5kIHNvIGxvdWRseSB0aGF0IGl0CmlzIHBlcmZlY3RseSBhdWRpYmxlIHdpdGhpbiB0aGVtOiB0aGV5IHJlbWluZCBvbmUKb2YgaGVhdmlseS1sYWRlbiBiZWFzdHMgb2YgYnVyZGVuIHN0cmFpbmluZyBhZ2FpbnN0CnRoZSB5b2tlLjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPmJyYS9neG9zPC9mb3JlaWduPiBpcyBnZW5lcmFsbHkgcmVhZCwgYnV0IHRoZSB3b3JkIGlzIHVzZWQgaW4gdGhlCnNlbnNlIG9mIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmhvdHJzZW5lc3MsPC9xdW90ZT4gd2hpY2ggaXMgbm90IHdoYXQgUXVpbnRpbGlhbiBkZXNjcmliZXMuCkkgd291bGQgcmVhZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj5icmFzbW8vcyw8L2ZvcmVpZ24+IGEgd29yZCBtZWFuaW5nIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmVmZmVydmVzY2VuY2UsPC9xdW90ZT4KPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+c2hha2luZyw8L3F1b3RlPiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5zaGl2ZXJpbmcuPC9xdW90ZT4gSGVyZSA9IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnRyZW1vbG8uPC9oaT48L3RyYW5zbGF0aW9uPg=="
translation['11.6.56'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NiIgdW5pdD0ic2VjdGlvbiIgLz4gU29tZSBpbmRlZWQgYWN0dWFsbHkgYWZmZWN0IHRoaXMgbWFubmVyaXNtLCBhcyB0aG91Z2ggdG8gc3VnZ2VzdCB0aGF0IHRoZXkgYXJlIHN0cnVnZ2xpbmcKd2l0aCB0aGUgaG9zdCBvZiBpZGVhcyB0aGF0IGNyb3dkIHRoZW1zZWx2ZXMgdXBvbgp0aGVtIGFuZCBvcHByZXNzZWQgYnkgYSBncmVhdGVyIGZsb29kIG9mIGVsb3F1ZW5jZQp0aGFuIHRoZWlyIHRocm9hdHMgYXJlIGNhcGFibGUgb2YgdXR0ZXJpbmcuIE90aGVycywKYWdhaW4sIGZpbmQgYSBkaWZmaWN1bHR5IGluIG9wZW5pbmcgdGhlaXIgbW91dGhzLCBhbmQKc2VlbSB0byBzdHJ1Z2dsZSB3aXRoIHRoZWlyIHdvcmRzOyBhbmQsIGZ1cnRoZXIsCmFsdGhvdWdoIHRoZXkgYXJlIG5vdCBhY3R1YWxseSBmYXVsdHMgb2YgdGhlIHZvaWNlLAp5ZXQgc2luY2UgdGhleSBhcmlzZSBvdXQgb2YgdGhlIHVzZSBvZiB0aGUgdm9pY2UsCkkgdGhpbmsgdGhpcyBpcyB0aGUgbW9zdCBhcHByb3ByaWF0ZSBwbGFjZSBmb3IKcmVmZXJyaW5nIHRvIHRoZSBoYWJpdCBvZiBjb3VnaGluZyBhbmQgc3BpdHRpbmcgd2l0aApmcmVxdWVuY3kgd2hpbGUgc3BlYWtpbmcsIG9mIGhhd2tpbmcgdXAgcGhsZWdtCmZyb20gdGhlIGRlcHRocyBvZiB0aGUgbHVuZ3MsIGxpa2Ugd2F0ZXIgZnJvbSBhCndlbGwsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnRyb2NoZWE8L2hpPiBpcyBhIHdpbmRsYXNzIHVzZWQgZm9yIHJhaXNpbmcgd2F0ZXIgZnJvbSBhCndlbGwuPC9ub3RlPiBzcHJpbmtsaW5nIHRoZSBuZWFyZXN0IG9mIHRoZSBieXN0YW5kZXJzIHdpdGgKc2FsaXZhLCBhbmQgZXhwZWxsaW5nIHRoZSBncmVhdGVyIHBvcnRpb24gb2YgdGhlCmJyZWF0aCB0aHJvdWdoIHRoZSBub3N0cmlscy48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj50cm9jaGVhPC9oaT4gaXMgYSB3aW5kbGFzcyB1c2VkIGZvciByYWlzaW5nIHdhdGVyIGZyb20gYQp3ZWxsLjwvdHJhbnNsYXRpb24+"
translation['11.6.57'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NyIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGFueSBvZiB0aGVzZSBmYXVsdHMKYXJlIHRvbGVyYWJsZSBjb21wYXJlZCB3aXRoIHRoZSBwcmFjdGljZSBvZiBjaGFudGluZwppbnN0ZWFkIG9mIHNwZWFraW5nLCB3aGljaCBpcyB0aGUgd29yc3QgZmVhdHVyZSBvZgpvdXIgbW9kZXJuIG9yYXRvcnksIHdoZXRoZXIgaW4gdGhlIGNvdXJ0cyBvciBpbiB0aGUKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjI3NSIgLz4KCnNjaG9vbHMsIGFuZCBvZiB3aGljaCBJIGNhbiBvbmx5IHNheSB0aGF0IEkgZG8gbm90Cmtub3cgd2hldGhlciBpdCBpcyBtb3JlIHVzZWxlc3Mgb3IgbW9yZSByZXB1Z25hbnQKdG8gZ29vZCB0YXN0ZS4gRm9yIHdoYXQgY2FuIGJlIGxlc3MgYmVjb21pbmcgdG8KYW4gb3JhdG9yIHRoYW4gbW9kdWxhdGlvbnMgdGhhdCByZWNhbGwgdGhlIHN0YWdlIGFuZAphIHNpbmctc29uZyB1dHRlcmFuY2Ugd2hpY2ggYXQgdGltZXMgcmVzZW1ibGVzIHRoZQptYXVkbGluIHV0dGVyYW5jZSBvZiBkcnVua2VuIHJldmVsbGVycz88L3RyYW5zbGF0aW9uPg=="
translation['11.6.58'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OCIgdW5pdD0ic2VjdGlvbiIgLz4gV2hhdCBjYW4KYmUgbW9yZSBmYXRhbCB0byBhbnkgZW1vdGlvbmFsIGFwcGVhbCB0aGFuIHRoYXQgdGhlCnNwZWFrZXIgc2hvdWxkLCB3aGVuIHRoZSBzaXR1YXRpb24gY2FsbHMgZm9yIGdyaWVmLAphbmdlciwgaW5kaWduYXRpb24gb3IgcGl0eSwgbm90IG1lcmVseSBhdm9pZCB0aGUKZXhwcmVzc2lvbiBvZiB0aG9zZSBlbW90aW9ucyB3aGljaCByZXF1aXJlIHRvIGJlCmtpbmRsZWQgaW4gdGhlIGp1ZGdlLCBidXQgb3V0cmFnZSB0aGUgZGlnbml0eSBvZgp0aGUgY291cnRzIHdpdGggbm9pc2VzIHN1Y2ggYXMgYXJlIGRlYXIgdG8gdGhlCkx5Y2lhbnMgYW5kIENhcmlhbnM/IEZvciBDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T3IuPC9oaT4geHZpaWkuIDU3Ljwvbm90ZT4gaGFzIHRvbGQgdXMgdGhhdAp0aGUgcmhldG9yaWNpYW5zIG9mIEx5Y2lhIGFuZCBDYXJpYSBjb21lIG5lYXIgdG8Kc2luZ2luZyBpbiB0aGVpciBwZXJvcmF0aW9ucy4gQnV0LCBhcyBhIG1hdHRlciBvZiB0YWN0LAp3ZSBoYXZlIHNvbWV3aGF0IG92ZXJzdGVwcGVkIHRoZSBsaW1pdHMgaW1wb3NlZCBieQp0aGUgbW9yZSByZXN0cmFpbmVkIHN0eWxlIG9mIHNpbmdpbmcuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T3IuPC9oaT4geHZpaWkuIDU3LjwvdHJhbnNsYXRpb24+"
translation['11.6.59'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OSIgdW5pdD0ic2VjdGlvbiIgLz4gSSBhc2sgeW91LApkb2VzIGFueW9uZSBzaW5nLCBJIHdpbGwgbm90IHNheSB3aGVuIGhpcyB0aGVtZSBpcwptdXJkZXIsIHNhY3JpbGVnZSBvciBwYXJyaWNpZGUsIGJ1dCBhdCBhbnkgcmF0ZSB3aGVuCmhlIGRlYWxzIHdpdGggZmlndXJlcyBvciBhY2NvdW50cywgb3IsIHRvIGN1dCBhIGxvbmcKc3Rvcnkgc2hvcnQsIHdoZW4gaGUgaXMgcGxlYWRpbmcgaW4gYW55IGtpbmQgb2YKbGF3c3VpdCB3aGF0ZXZlcj8gQW5kIGlmIHN1Y2ggYSBmb3JtIG9mIGludG9uYXRpb24KaXMgdG8gYmUgcGVybWl0dGVkIGF0IGFsbCwgdGhlcmUgaXMgcmVhbGx5IG5vIHJlYXNvbgp3aHkgdGhlIG1vZHVsYXRpb25zIG9mIHRoZSB2b2ljZSBzaG91bGQgbm90IGJlCmFjY29tcGFuaWVkIGJ5IGhhcnBzIGFuZCBmbHV0ZXMsIG9yIGV2ZW4gYnkgY3ltYmFscywKd2hpY2ggd291bGQgYmUgbW9yZSBhcHByb3ByaWF0ZSB0byB0aGUgcmV2b2x0aW5nCmV4aGliaXRpb25zIG9mIHdoaWNoIEkgYW0gc3BlYWtpbmcuPC90cmFuc2xhdGlvbj4="
translation['11.6.60'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MCIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIHlldCB3ZQpzaG93IG5vIHJlbHVjdGFuY2UgaW4gaW5kdWxnaW5nIHRoaXMgdmljaW91cyBwcmFjdGljZS4KRm9yIG5vIG9uZSB0aGlua3MgaGlzIG93biBzaW5naW5nIGhpZGVvdXMsIGFuZCBpdAppbnZvbHZlcyBsZXNzIHRyb3VibGUgdGhhbiBnZW51aW5lIHBsZWFkaW5nLiBUaGVyZQphcmUsIG1vcmVvdmVyLCBzb21lIHBlcnNvbnMgd2hvLCBpbiB0aG9yb3VnaCBjb25mb3JtaXR5IHdpdGggdGhlaXIgb3RoZXIgdmljZXMsIGFyZSBwb3NzZXNzZWQgd2l0aCBhCnBlcnBldHVhbCBwYXNzaW9uIGZvciBoZWFyaW5nIHNvbWV0aGluZyB0aGF0IHdpbGwKc29vdGhlIHRoZWlyIGVhcnMuIEJ1dCwgaXQgbWF5IGJlIHVyZ2VkLCBkb2VzIG5vdAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjc3IiAvPgoKQ2ljZXJvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPk9yLjwvaGk+IHh2aWlpLiA1Ny48L25vdGU+IGhpbXNlbGYgc2F5IHRoYXQgdGhlcmUgaXMgYSBzdWdnZXN0aW9uIG9mCnNpbmdpbmcgaW4gdGhlIHV0dGVyYW5jZSBvZiBhbiBvcmF0b3I/IEFuZCBpcyBub3QKdGhpcyB0aGUgb3V0Y29tZSBvZiBhIG5hdHVyYWwgaW1wdWxzZT8gSSBzaGFsbApzaG9ydGx5IHByb2NlZWQgdG8gc2hvdyB0byB3aGF0IGV4dGVudCBzdWNoIG11c2ljYWwKbW9kdWxhdGlvbnMgYXJlIHBlcm1pc3NpYmxlOiBidXQgaWYgd2UgYXJlIHRvIGNhbGwKaXQgc2luZ2luZywgaXQgbXVzdCBiZSBubyBtb3JlIHRoYW4gYSBzdWdnZXN0aW9uCm9mIHNpbmdpbmcsIGEgZmFjdCB3aGljaCB0b28gbWFueSByZWZ1c2UgdG8KcmVhbGlzZS48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5Pci48L2hpPiB4dmlpaS4gNTcuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNjEiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IGl0IGlzIG5vdyBoaWdoIHRpbWUgZm9yIG1lIHRvIGV4cGxhaW4gd2hhdCBJCm1lYW4gYnkgYXBwcm9wcmlhdGUgZGVsaXZlcnkuIFN1Y2ggYXBwcm9wcmlhdGVuZXNzCm9idmlvdXNseSBsaWVzIGluIHRoZSBhZGFwdGF0aW9uIG9mIHRoZSBkZWxpdmVyeSB0bwp0aGUgc3ViamVjdHMgb24gd2hpY2ggd2UgYXJlIHNwZWFraW5nLiBUaGlzIHF1YWxpdHkKaXMsIGluIHRoZSBtYWluLCBzdXBwbGllZCBieSB0aGUgZW1vdGlvbnMgdGhlbXNlbHZlcywKYW5kIHRoZSB2b2ljZSB3aWxsIHJpbmcgYXMgcGFzc2lvbiBzdHJpa2VzIGl0cyBjaG9yZHMuCkJ1dCB0aGVyZSBpcyBhIGRpZmZlcmVuY2UgYmV0d2VlbiB0cnVlIGVtb3Rpb24gb24KdGhlIG9uZSBoYW5kLCBhbmQgZmFsc2UgYW5kIGZpY3RpdGlvdXMgZW1vdGlvbiBvbgp0aGUgb3RoZXIuIFRoZSBmb3JtZXIgYnJlYWtzIG91dCBuYXR1cmFsbHksIGFzIGluCnRoZSBjYXNlIG9mIGdyaWVmLCBhbmdlciBvciBpbmRpZ25hdGlvbiwgYnV0IGxhY2tzCmFydCwgYW5kIHRoZXJlZm9yZSByZXF1aXJlcyB0byBiZSBmb3JtZWQgYnkgbWV0aG9kaWNhbAp0cmFpbmluZy48bWlsZXN0b25lIG49IjYyIiB1bml0PSJzZWN0aW9uIiAvPiBUaGUgbGF0dGVyLCBvbiB0aGUgb3RoZXIgaGFuZCwgZG9lcyBpbXBseQphcnQsIGJ1dCBsYWNrcyB0aGUgc2luY2VyaXR5IG9mIG5hdHVyZTogY29uc2VxdWVudGx5CmluIHN1Y2ggY2FzZXMgdGhlIG1haW4gdGhpbmcgaXMgdG8gZXhjaXRlIHRoZSBhcHByb3ByaWF0ZSBmZWVsaW5nIGluIG9uZXNlbGYsIHRvIGZvcm0gYSBtZW50YWwgcGljdHVyZQpvZiB0aGUgZmFjdHMsIGFuZCB0byBleGhpYml0IGFuIGVtb3Rpb24gdGhhdCBjYW5ub3QKYmUgZGlzdGluZ3Vpc2hlZCBmcm9tIHRoZSB0cnV0aC4gVGhlIHZvaWNlLCB3aGljaAppcyB0aGUgaW50ZXJtZWRpYXJ5IGJldHdlZW4gb3Vyc2VsdmVzIGFuZCBvdXIKaGVhcmVycywgd2lsbCB0aGVuIHByb2R1Y2UgcHJlY2lzZWx5IHRoZSBzYW1lCmVtb3Rpb24gaW4gdGhlIGp1ZGdlIHRoYXQgd2UgaGF2ZSBwdXQgaW50byBpdC4gRm9yCml0IGlzIHRoZSBpbmRleCBvZiB0aGUgbWluZCwgYW5kIGlzIGNhcGFibGUgb2YgZXhwcmVzc2luZyBhbGwgaXRzIHZhcmlldGllcyBvZiBmZWVsaW5nLjxtaWxlc3RvbmUgbj0iNjMiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlZm9yZSB3aGVuIHdlCmRlYWwgd2l0aCBhIGxpdmVseSB0aGVtZSwgdGhlIGZsb3cgb2YgdGhlIHZvaWNlIGlzCmNoYXJhY3RlcmlzZWQgYnkgZnVsbG5lc3MsIHNpbXBsaWNpdHkgYW5kIGNoZWVyZnVsbmVzczsgYnV0IHdoZW4gaXQgaXMgcm91c2VkIHRvIGJhdHRsZSwgaXQgcHV0cyBmb3J0aAphbGwgaXRzIHN0cmVuZ3RoIGFuZCBzdHJhaW5zIGV2ZXJ5IG5lcnZlLiBJbiBhbmdlcgoKPHBiIGlkPSJwLjI3OSIgLz4KCml0IGlzIGZpZXJjZSwgaGFyc2ggYW5kIGludGVuc2UsIGFuZCBjYWxscyBmb3IgZnJlcXVlbnQKZmlsbGluZyBvZiB0aGUgbHVuZ3MsIHNpbmNlIHRoZSBicmVhdGggY2Fubm90IGJlIHN1c3RhaW5lZCBmb3IgbG9uZyB3aGVuIGl0IGlzIHBvdXJlZCBmb3J0aCB3aXRob3V0CnJlc3RyYWludC4gV2hlbiBpdCBpcyBkZXNpcmVkIHRvIHRocm93IG9kaXVtIHVwb24Kb3VyIG9wcG9uZW50cywgaXQgd2lsbCBiZSBzb21ld2hhdCBzbG93ZXIsIHNpbmNlLAphcyBhIHJ1bGUsIGl0IGlzIG5vbmUgc2F2ZSB0aGUgd2Vha2VyIHBhcnR5IHRha2VzCnJlZnVnZSBpbiBzdWNoIHRhY3RpY3MuIE9uIHRoZSBvdGhlciBoYW5kLCBpbiBmbGF0dGVyeSwKYWRtaXNzaW9uLCBhcG9sb2d5IG9yIHF1ZXN0aW9uIGl0IHdpbGwgYmUgZ2VudGxlIGFuZApzdWJkdWVkLjxtaWxlc3RvbmUgbj0iNjQiIHVuaXQ9InNlY3Rpb24iIC8+IElmIHdlIGFkdmlzZSwgd2FybiwgcHJvbWlzZSBvciBjb25zb2xlLAppdCB3aWxsIGJlIGdyYXZlIGFuZCBkaWduaWZpZWQsIG1vZGVzdCBpZiB3ZSBleHByZXNzCmZlYXIgb3Igc2hhbWUsIGJvbGQgaW4gZXhob3J0YXRpb24sIHByZWNpc2UgaW4gYXJndW1lbnQsIGZ1bGwgb2YgbW9kdWxhdGlvbnMsIHN1Z2dlc3RpdmUgb2YgdGVhcnMgYW5kCmRlc2lnbmVkbHkgbXVmZmxlZCBpbiBhcHBlYWxzIGZvciBwaXR5LCB3aGVyZWFzIGluCmRpZ3Jlc3Npb24gaXQgd2lsbCBiZSBmdWxsIGFuZCBmbG93aW5nLCBhbmQgd2lsbCBoYXZlCmFsbCB0aGUgcmVzb25hbmNlIHRoYXQgaXMgY2hhcmFjdGVyaXN0aWMgb2YgY29uZmlkZW5jZTsKaW4gZXhwb3NpdGlvbiBvZiBmYWN0cyBvciBjb252ZXJzYXRpb25zIGl0IHdpbGwgYmUKZXZlbiBhbmQgcGl0Y2hlZCBoYWxmLXdheSBiZXR3aXh0IGhpZ2ggYW5kIGxvdy4KPG1pbGVzdG9uZSBuPSI2NSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaXQgd2lsbCBiZSByYWlzZWQgdG8gZXhwcmVzcyB2aW9sZW50IGVtb3Rpb24sIGFuZApzaW5rIHdoZW4gb3VyIHdvcmRzIGFyZSBvZiBhIGNhbG1lciBuYXR1cmUsIHJpc2luZwphbmQgZmFsbGluZyBhY2NvcmRpbmcgdG8gdGhlIGRlbWFuZHMgb2YgaXRzIHRoZW1lLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.6.61'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaXQgaXMgbm93IGhpZ2ggdGltZSBmb3IgbWUgdG8gZXhwbGFpbiB3aGF0IEkKbWVhbiBieSBhcHByb3ByaWF0ZSBkZWxpdmVyeS4gU3VjaCBhcHByb3ByaWF0ZW5lc3MKb2J2aW91c2x5IGxpZXMgaW4gdGhlIGFkYXB0YXRpb24gb2YgdGhlIGRlbGl2ZXJ5IHRvCnRoZSBzdWJqZWN0cyBvbiB3aGljaCB3ZSBhcmUgc3BlYWtpbmcuIFRoaXMgcXVhbGl0eQppcywgaW4gdGhlIG1haW4sIHN1cHBsaWVkIGJ5IHRoZSBlbW90aW9ucyB0aGVtc2VsdmVzLAphbmQgdGhlIHZvaWNlIHdpbGwgcmluZyBhcyBwYXNzaW9uIHN0cmlrZXMgaXRzIGNob3Jkcy4KQnV0IHRoZXJlIGlzIGEgZGlmZmVyZW5jZSBiZXR3ZWVuIHRydWUgZW1vdGlvbiBvbgp0aGUgb25lIGhhbmQsIGFuZCBmYWxzZSBhbmQgZmljdGl0aW91cyBlbW90aW9uIG9uCnRoZSBvdGhlci4gVGhlIGZvcm1lciBicmVha3Mgb3V0IG5hdHVyYWxseSwgYXMgaW4KdGhlIGNhc2Ugb2YgZ3JpZWYsIGFuZ2VyIG9yIGluZGlnbmF0aW9uLCBidXQgbGFja3MKYXJ0LCBhbmQgdGhlcmVmb3JlIHJlcXVpcmVzIHRvIGJlIGZvcm1lZCBieSBtZXRob2RpY2FsCnRyYWluaW5nLjwvdHJhbnNsYXRpb24+"
translation['11.6.62'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MiIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIGxhdHRlciwgb24gdGhlIG90aGVyIGhhbmQsIGRvZXMgaW1wbHkKYXJ0LCBidXQgbGFja3MgdGhlIHNpbmNlcml0eSBvZiBuYXR1cmU6IGNvbnNlcXVlbnRseQppbiBzdWNoIGNhc2VzIHRoZSBtYWluIHRoaW5nIGlzIHRvIGV4Y2l0ZSB0aGUgYXBwcm9wcmlhdGUgZmVlbGluZyBpbiBvbmVzZWxmLCB0byBmb3JtIGEgbWVudGFsIHBpY3R1cmUKb2YgdGhlIGZhY3RzLCBhbmQgdG8gZXhoaWJpdCBhbiBlbW90aW9uIHRoYXQgY2Fubm90CmJlIGRpc3Rpbmd1aXNoZWQgZnJvbSB0aGUgdHJ1dGguIFRoZSB2b2ljZSwgd2hpY2gKaXMgdGhlIGludGVybWVkaWFyeSBiZXR3ZWVuIG91cnNlbHZlcyBhbmQgb3VyCmhlYXJlcnMsIHdpbGwgdGhlbiBwcm9kdWNlIHByZWNpc2VseSB0aGUgc2FtZQplbW90aW9uIGluIHRoZSBqdWRnZSB0aGF0IHdlIGhhdmUgcHV0IGludG8gaXQuIEZvcgppdCBpcyB0aGUgaW5kZXggb2YgdGhlIG1pbmQsIGFuZCBpcyBjYXBhYmxlIG9mIGV4cHJlc3NpbmcgYWxsIGl0cyB2YXJpZXRpZXMgb2YgZmVlbGluZy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.63'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MyIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlcmVmb3JlIHdoZW4gd2UKZGVhbCB3aXRoIGEgbGl2ZWx5IHRoZW1lLCB0aGUgZmxvdyBvZiB0aGUgdm9pY2UgaXMKY2hhcmFjdGVyaXNlZCBieSBmdWxsbmVzcywgc2ltcGxpY2l0eSBhbmQgY2hlZXJmdWxuZXNzOyBidXQgd2hlbiBpdCBpcyByb3VzZWQgdG8gYmF0dGxlLCBpdCBwdXRzIGZvcnRoCmFsbCBpdHMgc3RyZW5ndGggYW5kIHN0cmFpbnMgZXZlcnkgbmVydmUuIEluIGFuZ2VyCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yNzkiIC8+CgppdCBpcyBmaWVyY2UsIGhhcnNoIGFuZCBpbnRlbnNlLCBhbmQgY2FsbHMgZm9yIGZyZXF1ZW50CmZpbGxpbmcgb2YgdGhlIGx1bmdzLCBzaW5jZSB0aGUgYnJlYXRoIGNhbm5vdCBiZSBzdXN0YWluZWQgZm9yIGxvbmcgd2hlbiBpdCBpcyBwb3VyZWQgZm9ydGggd2l0aG91dApyZXN0cmFpbnQuIFdoZW4gaXQgaXMgZGVzaXJlZCB0byB0aHJvdyBvZGl1bSB1cG9uCm91ciBvcHBvbmVudHMsIGl0IHdpbGwgYmUgc29tZXdoYXQgc2xvd2VyLCBzaW5jZSwKYXMgYSBydWxlLCBpdCBpcyBub25lIHNhdmUgdGhlIHdlYWtlciBwYXJ0eSB0YWtlcwpyZWZ1Z2UgaW4gc3VjaCB0YWN0aWNzLiBPbiB0aGUgb3RoZXIgaGFuZCwgaW4gZmxhdHRlcnksCmFkbWlzc2lvbiwgYXBvbG9neSBvciBxdWVzdGlvbiBpdCB3aWxsIGJlIGdlbnRsZSBhbmQKc3ViZHVlZC48L3RyYW5zbGF0aW9uPg=="
translation['11.6.64'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NCIgdW5pdD0ic2VjdGlvbiIgLz4gSWYgd2UgYWR2aXNlLCB3YXJuLCBwcm9taXNlIG9yIGNvbnNvbGUsCml0IHdpbGwgYmUgZ3JhdmUgYW5kIGRpZ25pZmllZCwgbW9kZXN0IGlmIHdlIGV4cHJlc3MKZmVhciBvciBzaGFtZSwgYm9sZCBpbiBleGhvcnRhdGlvbiwgcHJlY2lzZSBpbiBhcmd1bWVudCwgZnVsbCBvZiBtb2R1bGF0aW9ucywgc3VnZ2VzdGl2ZSBvZiB0ZWFycyBhbmQKZGVzaWduZWRseSBtdWZmbGVkIGluIGFwcGVhbHMgZm9yIHBpdHksIHdoZXJlYXMgaW4KZGlncmVzc2lvbiBpdCB3aWxsIGJlIGZ1bGwgYW5kIGZsb3dpbmcsIGFuZCB3aWxsIGhhdmUKYWxsIHRoZSByZXNvbmFuY2UgdGhhdCBpcyBjaGFyYWN0ZXJpc3RpYyBvZiBjb25maWRlbmNlOwppbiBleHBvc2l0aW9uIG9mIGZhY3RzIG9yIGNvbnZlcnNhdGlvbnMgaXQgd2lsbCBiZQpldmVuIGFuZCBwaXRjaGVkIGhhbGYtd2F5IGJldHdpeHQgaGlnaCBhbmQgbG93Lgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.65'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaXQgd2lsbCBiZSByYWlzZWQgdG8gZXhwcmVzcyB2aW9sZW50IGVtb3Rpb24sIGFuZApzaW5rIHdoZW4gb3VyIHdvcmRzIGFyZSBvZiBhIGNhbG1lciBuYXR1cmUsIHJpc2luZwphbmQgZmFsbGluZyBhY2NvcmRpbmcgdG8gdGhlIGRlbWFuZHMgb2YgaXRzIHRoZW1lLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SG93ZXZlciwgZm9yIHRoZSBtb21lbnQgSSB3aWxsIGRlZmVyIHNwZWFraW5nCm9mIHRoZSB2YXJpYXRpb25zIGluIHRvbmUgcmVxdWlyZWQgYnkgZGlmZmVyZW50IHRvcGljcywKYW5kIHdpbGwgcHJvY2VlZCBmaXJzdCB0byB0aGUgZGlzY3Vzc2lvbiBvZiBnZXN0dXJlCndoaWNoIGNvbmZvcm1zIHRvIHRoZSB2b2ljZSwgYW5kIGxpa2UgaXQsIG9iZXlzIHRoZQppbXB1bHNlIG9mIHRoZSBtaW5kLiBJdHMgaW1wb3J0YW5jZSBpbiBvcmF0b3J5IGlzCnN1ZmZpY2llbnRseSBjbGVhciBmcm9tIHRoZSBmYWN0IHRoYXQgdGhlcmUgYXJlIG1hbnkKdGhpbmdzIHdoaWNoIGl0IGNhbiBleHByZXNzIHdpdGhvdXQgdGhlIGFzc2lzdGFuY2UKb2Ygd29yZHMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjY2IiB1bml0PSJzZWN0aW9uIiAvPiBGb3Igd2UgY2FuIGluZGljYXRlIG91ciB3aWxsIG5vdCBtZXJlbHkKYnkgYSBnZXN0dXJlIG9mIHRoZSBoYW5kcywgYnV0IGFsc28gd2l0aCBhIG5vZCBmcm9tCnRoZSBoZWFkOiBzaWducyB0YWtlIHRoZSBwbGFjZSBvZiBsYW5ndWFnZSBpbiB0aGUKZHVtYiwgYW5kIHRoZSBtb3ZlbWVudHMgb2YgdGhlIGRhbmNlIGFyZSBmcmVxdWVudGx5IGZ1bGwgb2YgbWVhbmluZywgYW5kIGFwcGVhbCB0byB0aGUgZW1vdGlvbnMKd2l0aG91dCBhbnkgYWlkIGZyb20gd29yZHMuIFRoZSB0ZW1wZXIgb2YgdGhlCm1pbmQgY2FuIGJlIGluZmVycmVkIGZyb20gdGhlIGdsYW5jZSBhbmQgZ2FpdCwKCjxwYiBpZD0icC4yODEiIC8+CgphbmQgZXZlbiBzcGVlY2hsZXNzIGFuaW1hbHMgc2hvdyBhbmdlciwgam95LCBvciB0aGUKZGVzaXJlIHRvIHBsZWFzZSBieSBtZWFucyBvZiB0aGUgZXllIGFuZCBvdGhlcgpwaHlzaWNhbCBpbmRpY2F0aW9ucy48bWlsZXN0b25lIG49IjY3IiB1bml0PSJzZWN0aW9uIiAvPiBOb3IgaXMgaXQgd29uZGVyZnVsIHRoYXQgZ2VzdHVyZSB3aGljaCBkZXBlbmRzIG9uIHZhcmlvdXMgZm9ybXMgb2YgbW92ZW1lbnQKc2hvdWxkIGhhdmUgc3VjaCBwb3dlciwgd2hlbiBwaWN0dXJlcywgd2hpY2ggYXJlCnNpbGVudCBhbmQgbW90aW9ubGVzcywgcGVuZXRyYXRlIGludG8gb3VyIGlubmVybW9zdApmZWVsaW5ncyB3aXRoIHN1Y2ggcG93ZXIgdGhhdCBhdCB0aW1lcyB0aGV5IHNlZW0KbW9yZSBlbG9xdWVudCB0aGFuIGxhbmd1YWdlIGl0c2VsZi4gT24gdGhlIG90aGVyCmhhbmQsIGlmIGdlc3R1cmUgYW5kIHRoZSBleHByZXNzaW9uIG9mIHRoZSBmYWNlIGFyZQpvdXQgb2YgaGFybW9ueSB3aXRoIHRoZSBzcGVlY2gsIGlmIHdlIGxvb2sgY2hlZXJmdWwKd2hlbiBvdXIgd29yZHMgYXJlIHNhZC4gb3Igc2xha2Ugb3VyIGhlYWRzIHdoZW4KbWFraW5nIGEgcG9zaXRpdmUgYXNzZXJ0aW9uLCBvdXIgd29yZHMgd2lsbCBub3Qgb25seQpsYWNrIHdlaWdodCwgYnV0IHdpbGwgZmFpbCB0byBjYXJyeSBjb252aWN0aW9uLjxtaWxlc3RvbmUgbj0iNjgiIHVuaXQ9InNlY3Rpb24iIC8+IEdlc3R1cmUgYW5kIG1vdmVtZW50IGFyZSBhbHNvIHByb2R1Y3RpdmUgb2YgZ3JhY2UuCkl0IHdhcyBmb3IgdGhpcyByZWFzb24gdGhhdCBEZW1vc3RoZW5lcyB1c2VkIHRvCnByYWN0aXNlIGhpcyBkZWxpdmVyeSBpbiBmcm9udCBvZiBhIGxhcmdlIG1pcnJvciwgc2luY2UsCmluIHNwaXRlIG9mIHRoZSBmYWN0IHRoYXQgaXRzIHJlZmxleGlvbnMgYXJlIHJldmVyc2VkLApoZSB0cnVzdGVkIGhpcyBleWVzIHRvIGVuYWJsZSBoaW0gdG8ganVkZ2UgYWNjdXJhdGVseQp0aGUgZWZmZWN0IHByb2R1Y2VkLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.6.66'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHdlIGNhbiBpbmRpY2F0ZSBvdXIgd2lsbCBub3QgbWVyZWx5CmJ5IGEgZ2VzdHVyZSBvZiB0aGUgaGFuZHMsIGJ1dCBhbHNvIHdpdGggYSBub2QgZnJvbQp0aGUgaGVhZDogc2lnbnMgdGFrZSB0aGUgcGxhY2Ugb2YgbGFuZ3VhZ2UgaW4gdGhlCmR1bWIsIGFuZCB0aGUgbW92ZW1lbnRzIG9mIHRoZSBkYW5jZSBhcmUgZnJlcXVlbnRseSBmdWxsIG9mIG1lYW5pbmcsIGFuZCBhcHBlYWwgdG8gdGhlIGVtb3Rpb25zCndpdGhvdXQgYW55IGFpZCBmcm9tIHdvcmRzLiBUaGUgdGVtcGVyIG9mIHRoZQptaW5kIGNhbiBiZSBpbmZlcnJlZCBmcm9tIHRoZSBnbGFuY2UgYW5kIGdhaXQsCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yODEiIC8+CgphbmQgZXZlbiBzcGVlY2hsZXNzIGFuaW1hbHMgc2hvdyBhbmdlciwgam95LCBvciB0aGUKZGVzaXJlIHRvIHBsZWFzZSBieSBtZWFucyBvZiB0aGUgZXllIGFuZCBvdGhlcgpwaHlzaWNhbCBpbmRpY2F0aW9ucy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.67'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NyIgdW5pdD0ic2VjdGlvbiIgLz4gTm9yIGlzIGl0IHdvbmRlcmZ1bCB0aGF0IGdlc3R1cmUgd2hpY2ggZGVwZW5kcyBvbiB2YXJpb3VzIGZvcm1zIG9mIG1vdmVtZW50CnNob3VsZCBoYXZlIHN1Y2ggcG93ZXIsIHdoZW4gcGljdHVyZXMsIHdoaWNoIGFyZQpzaWxlbnQgYW5kIG1vdGlvbmxlc3MsIHBlbmV0cmF0ZSBpbnRvIG91ciBpbm5lcm1vc3QKZmVlbGluZ3Mgd2l0aCBzdWNoIHBvd2VyIHRoYXQgYXQgdGltZXMgdGhleSBzZWVtCm1vcmUgZWxvcXVlbnQgdGhhbiBsYW5ndWFnZSBpdHNlbGYuIE9uIHRoZSBvdGhlcgpoYW5kLCBpZiBnZXN0dXJlIGFuZCB0aGUgZXhwcmVzc2lvbiBvZiB0aGUgZmFjZSBhcmUKb3V0IG9mIGhhcm1vbnkgd2l0aCB0aGUgc3BlZWNoLCBpZiB3ZSBsb29rIGNoZWVyZnVsCndoZW4gb3VyIHdvcmRzIGFyZSBzYWQuIG9yIHNsYWtlIG91ciBoZWFkcyB3aGVuCm1ha2luZyBhIHBvc2l0aXZlIGFzc2VydGlvbiwgb3VyIHdvcmRzIHdpbGwgbm90IG9ubHkKbGFjayB3ZWlnaHQsIGJ1dCB3aWxsIGZhaWwgdG8gY2FycnkgY29udmljdGlvbi48L3RyYW5zbGF0aW9uPg=="
translation['11.6.68'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OCIgdW5pdD0ic2VjdGlvbiIgLz4gR2VzdHVyZSBhbmQgbW92ZW1lbnQgYXJlIGFsc28gcHJvZHVjdGl2ZSBvZiBncmFjZS4KSXQgd2FzIGZvciB0aGlzIHJlYXNvbiB0aGF0IERlbW9zdGhlbmVzIHVzZWQgdG8KcHJhY3Rpc2UgaGlzIGRlbGl2ZXJ5IGluIGZyb250IG9mIGEgbGFyZ2UgbWlycm9yLCBzaW5jZSwKaW4gc3BpdGUgb2YgdGhlIGZhY3QgdGhhdCBpdHMgcmVmbGV4aW9ucyBhcmUgcmV2ZXJzZWQsCmhlIHRydXN0ZWQgaGlzIGV5ZXMgdG8gZW5hYmxlIGhpbSB0byBqdWRnZSBhY2N1cmF0ZWx5CnRoZSBlZmZlY3QgcHJvZHVjZWQuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUgaGVhZCwgYmVpbmcgdGhlIGNoaWVmIG1lbWJlciBvZiB0aGUgYm9keSwKaGFzIGEgY29ycmVzcG9uZGluZyBpbXBvcnRhbmNlIGluIGRlbGl2ZXJ5LCBzZXJ2aW5nCm5vdCBtZXJlbHkgdG8gcHJvZHVjZSBncmFjZWZ1bCBlbGVjdCwgYnV0IHRvIGlsbHVzdHJhdGUgb3VyIG1lYW5pbmcgYXMgd2VsbC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNjkiIHVuaXQ9InNlY3Rpb24iIC8+IFRvIHNlY3VyZSBncmFjZSBpdCBpcwplc3NlbnRpYWwgdGhhdCB0aGUgaGVhZCBzaG91bGQgYmUgY2FycmllZCBuYXR1cmFsbHkKYW4gZXJlY3QuIEZvciBhIGRyb29wIHN1Z2dlc3RzIGh1bWlsaXR5LCB3aGlsZSBpZgppdCBiZSB0aHJvd24gYmFjayBpdCBzZWVtcyB0byBleHByZXNzIGFycm9nYW5jZSwgaWYKaW5jbGluZWQgdG8gb25lIHNpZGUgaXQgZ2l2ZXMgYW4gaW1wcmVzc2lvbiBvZiBsYW5ndW9yLAp3aGlsZSBpZiBpdCBpcyBoZWxkIHRvbyBzdGlmZmx5IGFuZCByaWdpZGx5IGl0IGFwcGVhcnMKdG8gaW5kaWNhdGUgYSBydWRlIGFuZCBzYXZhZ2UgdGVtcGVyLiBGdXJ0aGVyLCBpdApzaG91bGQgZGVyaXZlIGFwcHJvcHJpYXRlIG1vdGlvbiBmcm9tIHRoZSBzdWJqZWN0Cm9mIG91ciBwbGVhZGluZywgbWFpbnRhaW5pbmcgaGFybW9ueSB3aXRoIHRoZSBnZXN0dXJlIGFuZCBmb2xsb3dpbmcgdGhlIG1vdmVtZW50IG9mIHRoZSBoYW5kcyBhbmQKc2lkZS48bWlsZXN0b25lIG49IjcwIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgdGhlIGV5ZXMgYXJlIGFsd2F5cyB0dXJuZWQgaW4gdGhlIHNhbWUKZGlyZWN0aW9uIGFzIHRoZSBnZXN0dXJlLCBleGNlcHQgd2hlbiB3ZSBhcmUgY2FsbGVkCgo8cGIgaWQ9InAuMjgzIiAvPgoKdXBvbiB0byBjb25kZW1uIG9yIGNvbmNlZGUgc29tZXRoaW5nIG9yIHRvIGV4cHJlc3MKYWJob3JyZW5jZSwgd2hlbiB3ZSBzaGFsbCBzaG93IG91ciBhdmVyc2lvbiBieQp0dXJuaW5nIGF3YXkgdGhlIGZhY2UgYW5kIGJ5IHRocnVzdGluZyBvdXQgb3VyCmhhbmRzIGFzIHRob3VnaCB0byByZXBlbCB0aGUgdGhvdWdodCwgYXMgaW4gdGhlCmxpbmVzOgoKPHF1b3RlIHJlbmQ9ImJsb2NrcXVvdGUiPjxjaXQ+PHF1b3RlPjxsPlllIGdvZHMsIHN1Y2ggZHJlYWQgY2FsYW1pdHkgYXZlcnQhPC9sPjwvcXVvdGU+PGJpYmwgZGVmYXVsdD0iTk8iPjxoaSByZW5kPSJpdGFsaWNzIj5BZW4uPC9oaT4gaWlpLiA2MjAuPC9iaWJsPjwvY2l0PjwvcXVvdGU+CgpvcgoKPHF1b3RlIHJlbmQ9ImJsb2NrcXVvdGUiPjxjaXQ+PHF1b3RlPjxsPk5vdCBmb3IgbWU8L2w+CjxsPlRvIGNsYWltIHN1Y2ggaG9ub3VyITwvbD48L3F1b3RlPjxiaWJsIGRlZmF1bHQ9Ik5PIj48aGkgcmVuZD0iaXRhbGljcyI+QWVuLjwvaGk+IGkuIDMzNS48L2JpYmw+PC9jaXQ+PC9xdW90ZT48L3A+Cgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.69'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OSIgdW5pdD0ic2VjdGlvbiIgLz4gVG8gc2VjdXJlIGdyYWNlIGl0IGlzCmVzc2VudGlhbCB0aGF0IHRoZSBoZWFkIHNob3VsZCBiZSBjYXJyaWVkIG5hdHVyYWxseQphbiBlcmVjdC4gRm9yIGEgZHJvb3Agc3VnZ2VzdHMgaHVtaWxpdHksIHdoaWxlIGlmCml0IGJlIHRocm93biBiYWNrIGl0IHNlZW1zIHRvIGV4cHJlc3MgYXJyb2dhbmNlLCBpZgppbmNsaW5lZCB0byBvbmUgc2lkZSBpdCBnaXZlcyBhbiBpbXByZXNzaW9uIG9mIGxhbmd1b3IsCndoaWxlIGlmIGl0IGlzIGhlbGQgdG9vIHN0aWZmbHkgYW5kIHJpZ2lkbHkgaXQgYXBwZWFycwp0byBpbmRpY2F0ZSBhIHJ1ZGUgYW5kIHNhdmFnZSB0ZW1wZXIuIEZ1cnRoZXIsIGl0CnNob3VsZCBkZXJpdmUgYXBwcm9wcmlhdGUgbW90aW9uIGZyb20gdGhlIHN1YmplY3QKb2Ygb3VyIHBsZWFkaW5nLCBtYWludGFpbmluZyBoYXJtb255IHdpdGggdGhlIGdlc3R1cmUgYW5kIGZvbGxvd2luZyB0aGUgbW92ZW1lbnQgb2YgdGhlIGhhbmRzIGFuZApzaWRlLjwvdHJhbnNsYXRpb24+"
translation['11.6.70'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZSBleWVzIGFyZSBhbHdheXMgdHVybmVkIGluIHRoZSBzYW1lCmRpcmVjdGlvbiBhcyB0aGUgZ2VzdHVyZSwgZXhjZXB0IHdoZW4gd2UgYXJlIGNhbGxlZAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjgzIiAvPgoKdXBvbiB0byBjb25kZW1uIG9yIGNvbmNlZGUgc29tZXRoaW5nIG9yIHRvIGV4cHJlc3MKYWJob3JyZW5jZSwgd2hlbiB3ZSBzaGFsbCBzaG93IG91ciBhdmVyc2lvbiBieQp0dXJuaW5nIGF3YXkgdGhlIGZhY2UgYW5kIGJ5IHRocnVzdGluZyBvdXQgb3VyCmhhbmRzIGFzIHRob3VnaCB0byByZXBlbCB0aGUgdGhvdWdodCwgYXMgaW4gdGhlCmxpbmVzOgoKPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iYmxvY2txdW90ZSI+PGNpdCBjbGFzcz0idHJhbnNsYXRpb24iPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWUgZ29kcywgc3VjaCBkcmVhZCBjYWxhbWl0eSBhdmVydCE8L2w+PC9xdW90ZT48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZW4uPC9oaT4gaWlpLiA2MjAuPC9iaWJsPjwvY2l0PjwvcXVvdGU+CgpvcgoKPGNpdCBjbGFzcz0idHJhbnNsYXRpb24iPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWUgZ29kcywgc3VjaCBkcmVhZCBjYWxhbWl0eSBhdmVydCE8L2w+PC9xdW90ZT48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZW4uPC9oaT4gaWlpLiA2MjAuPC9iaWJsPjwvY2l0PjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWUgZ29kcywgc3VjaCBkcmVhZCBjYWxhbWl0eSBhdmVydCE8L2w+PC9xdW90ZT48bCBjbGFzcz0idHJhbnNsYXRpb24iPlllIGdvZHMsIHN1Y2ggZHJlYWQgY2FsYW1pdHkgYXZlcnQhPC9sPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkFlbi48L2hpPiBpaWkuIDYyMC48L2JpYmw+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QWVuLjwvaGk+IGlpaS4gNjIwLjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9ImJsb2NrcXVvdGUiPjxjaXQgY2xhc3M9InRyYW5zbGF0aW9uIj48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj48bCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdCBmb3IgbWU8L2w+CjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VG8gY2xhaW0gc3VjaCBob25vdXIhPC9sPjwvcXVvdGU+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QWVuLjwvaGk+IGkuIDMzNS48L2JpYmw+PC9jaXQ+PC9xdW90ZT48Y2l0IGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PGwgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3QgZm9yIG1lPC9sPgo8bCBjbGFzcz0idHJhbnNsYXRpb24iPlRvIGNsYWltIHN1Y2ggaG9ub3VyITwvbD48L3F1b3RlPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkFlbi48L2hpPiBpLiAzMzUuPC9iaWJsPjwvY2l0PjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm90IGZvciBtZTwvbD4KPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5UbyBjbGFpbSBzdWNoIGhvbm91ciE8L2w+PC9xdW90ZT48bCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdCBmb3IgbWU8L2w+CjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VG8gY2xhaW0gc3VjaCBob25vdXIhPC9sPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkFlbi48L2hpPiBpLiAzMzUuPC9iaWJsPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkFlbi48L2hpPiBpLiAzMzUuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNzEiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIG1ldGhvZHMgYnkgd2hpY2ggdGhlIGhlYWQgbWF5IGV4cHJlc3Mgb3VyCm1lYW5pbmcgYXJlIG1hbmlmb2xkLiBGb3IgaW4gYWRkaXRpb24gdG8gdGhvc2UKbW92ZW1lbnRzIHdoaWNoIGluZGljYXRlIGNvbnNlbnQsIHJlZnVzYWwgYW5kCmFmZmlybWF0aW9uLCB0aGVyZSBhcmUgdGhvc2UgZXhwcmVzc2l2ZSBvZiBtb2Rlc3R5LApoZXNpdGF0aW9uLCB3b25kZXIgb3IgaW5kaWduYXRpb24sIHdoaWNoIGFyZSB3ZWxsCmtub3duIGFuZCBjb21tb24gdG8gYWxsLiBCdXQgdG8gY29uZmluZSB0aGUKZ2VzdHVyZSB0byB0aGUgbW92ZW1lbnQgb2YgdGhlIGhlYWQgYWxvbmUgaXMgcmVnYXJkZWQgYXMgYSBmYXVsdCBieSB0aG9zZSB3aG8gdGVhY2ggYWN0aW5nIGFzIHdlbGwKYXMgYnkgcHJvZmVzc29ycyBvZiByaGV0b3JpYy4gRXZlbiB0aGUgZnJlcXVlbnQKbm9kZGluZyBvZiB0aGUgaGVhZCBpcyBub3QgZnJlZSBmcm9tIGZhdWx0LCB3aGlsZQp0byB0b3NzIG9yIHJvbGwgaXQgdGlsbCBvdXIgaGFpciBmbGllcyBmcmVlIGlzIHN1Z2dlc3RpdmUKb2YgYSBmYW5hdGljLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.6.71'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbWV0aG9kcyBieSB3aGljaCB0aGUgaGVhZCBtYXkgZXhwcmVzcyBvdXIKbWVhbmluZyBhcmUgbWFuaWZvbGQuIEZvciBpbiBhZGRpdGlvbiB0byB0aG9zZQptb3ZlbWVudHMgd2hpY2ggaW5kaWNhdGUgY29uc2VudCwgcmVmdXNhbCBhbmQKYWZmaXJtYXRpb24sIHRoZXJlIGFyZSB0aG9zZSBleHByZXNzaXZlIG9mIG1vZGVzdHksCmhlc2l0YXRpb24sIHdvbmRlciBvciBpbmRpZ25hdGlvbiwgd2hpY2ggYXJlIHdlbGwKa25vd24gYW5kIGNvbW1vbiB0byBhbGwuIEJ1dCB0byBjb25maW5lIHRoZQpnZXN0dXJlIHRvIHRoZSBtb3ZlbWVudCBvZiB0aGUgaGVhZCBhbG9uZSBpcyByZWdhcmRlZCBhcyBhIGZhdWx0IGJ5IHRob3NlIHdobyB0ZWFjaCBhY3RpbmcgYXMgd2VsbAphcyBieSBwcm9mZXNzb3JzIG9mIHJoZXRvcmljLiBFdmVuIHRoZSBmcmVxdWVudApub2RkaW5nIG9mIHRoZSBoZWFkIGlzIG5vdCBmcmVlIGZyb20gZmF1bHQsIHdoaWxlCnRvIHRvc3Mgb3Igcm9sbCBpdCB0aWxsIG91ciBoYWlyIGZsaWVzIGZyZWUgaXMgc3VnZ2VzdGl2ZQpvZiBhIGZhbmF0aWMuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNzIiIHVuaXQ9InNlY3Rpb24iIC8+QnkgZmFyIHRoZSBncmVhdGVzdCBpbmZsdWVuY2UgaXMgZXhlcmNpc2VkIGJ5IHRoZQpnbGFuY2UuIEZvciBpdCBpcyBieSB0aGlzIHRoYXQgd2UgZXhwcmVzcyBzdXBwbGljYXRpb24sIHRocmVhdHMsIGZsYXR0ZXJ5LCBzb3Jyb3csIGpveSwgcHJpZGUgb3Igc3VibWlzc2lvbi4gSXQgaXMgb24gdGhpcyB0aGF0IG91ciBhdWRpZW5jZSBoYW5nLCBvbgp0aGlzIHRoYXQgdGhleSByaXZldCB0aGVpciBhdHRlbnRpb24gYW5kIHRoZWlyIGdhemUsCmV2ZW4gYmVmb3JlIHdlIGJlZ2luIHRvIHNwZWFrLiBJdCBpcyB0aGlzIHRoYXQKaW5zcGlyZXMgdGhlIGhlYXJlciB3aXRoIGFmZmVjdGlvbiBvciBkaXNsaWtlLCB0aGlzCnRoYXQgY29udmV5cyBhIHdvcmxkIG9mIG1lYW5pbmcgYW5kIGlzIG9mdGVuIG1vcmUKZWxvcXVlbnQgdGhhbiBhbGwgb3VyIHdvcmRzLjxtaWxlc3RvbmUgbj0iNzMiIHVuaXQ9InNlY3Rpb24iIC8+IENvbnNlcXVlbnRseSBpbiBwbGF5cwpkZXN0aW5lZCBmb3IgdGhlIHN0YWdlLCB0aGUgbWFzdGVycyBvZiB0aGUgYXJ0IG9mCmRlbGl2ZXJ5IGRlc2lnbiBldmVuIHRoZWlyIG1hc2tzIHRvIGVuaGFuY2UgdGhlCmVtb3Rpb25hbCBlZmZlY3QuIFRodXMsIGluIHRyYWdlZHksIEFlcm9wZSB3aWxsIGJlCgo8cGIgaWQ9InAuMjg1IiAvPgoKc2FkLCBNZWRlYSBmaWVyY2UsIEFqYXggYmV3aWxkZXJlZCwgSGVyY3VsZXMgdHJ1Y3VsZW50LjxtaWxlc3RvbmUgbj0iNzQiIHVuaXQ9InNlY3Rpb24iIC8+IEluIGNvbWVkeSwgb24gdGhlIG90aGVyIGhhbmQsIG92ZXIgYW5kCmFib3ZlIHRoZSBtZXRob2RzIGFkb3B0ZWQgdG8gZGlzdGluZ3Vpc2ggYmV0d2VlbgpzbGF2ZXMsIHBpbXBzLCBwYXJhc2l0ZXMsIHJ1c3RpY3MsIHNvbGRpZXJzLCBoYXJsb3RzLAptYWlkc2VydmFudHMsIG9sZCBtZW4gc3Rlcm4gYW5kIG1pbGQsIHlvdXRocyBtb3JhbApvciBsdXh1cmlvdXMsIG1hcnJpZWQgd29tZW4gYW5kIGdpcmxzLCB3ZSBoYXZlCnRoZSBpbXBvcnRhbnQgcsO0bGUgb2YgdGhlIGZhdGhlciB3aG8sIGJlY2F1c2UgYXQKdGltZXMgaGUgaXMgZXhjaXRlZCBhbmQgYXQgb3RoZXJzIGNhbGwsIGhhcyBvbmUKZXllYnJvdyByYWlzZWQgYW5kIHRoZSBvdGhlciBub3JtYWwsIHRoZSBjdXN0b20KYW1vbmcgYWN0b3JzIGJlaW5nIHRvIHR1cm4gdGhhdCBzaWRlIG9mIHRoZSBmYWNlIHRvCnRoZSBhdWRpZW5jZSB3aGljaCBiZXN0IHN1aXRzIHRoZSByb2xlLjxtaWxlc3RvbmUgbj0iNzUiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCBvZiB0aGUKdmFyaW91cyBlbGVtZW50cyB0aGF0IGdvIHRvIGZvcm0gdGhlIGV4cHJlc3Npb24sCnRoZSBleWVzIGFyZSB0aGUgbW9zdCBpbXBvcnRhbnQsIHNpbmNlIHRoZXksIG1vcmUKdGhhbiBhbnktdGhpbmcgZWxzZSwgcmV2ZWFsIHRoZSB0ZW1wZXIgb2YgdGhlIG1pbmQsCmFuZCB3aXRob3V0IGFjdHVhbCBtb3ZlbWVudCB3aWxsIHR3aW5rbGUgd2l0aAptZXJyaW1lbnQgb3IgYmUgY2xvdWRlZCB3aXRoIGdyaWVmLiBBbmQgZnVydGhlciwKbmF0dXJlIGhhcyBnaXZlbiB0aGVtIHRlYXJzIHRvIHNlcnZlIGFzIGludGVycHJldGVycwpvZiBvdXIgZmVlbGluZ3MsIHRlYXJzIHRoYXQgd2lsbCBicmVhayBmb3J0aCBmb3Igc29ycm93Cm9yIHN0cmVhbSBmb3IgdmVyeSBqb3kuIEJ1dCwgd2hlbiB0aGUgZXllcyBtb3ZlLAp0aGV5IGJlY29tZSBpbnRlbnQsIGluZGlmZmVyZW50LCBwcm91ZCwgZmllcmNlLCBtaWxkLApvciBhbmdyeTsgYW5kIHRoZXkgd2lsbCBhc3N1bWUgYWxsIHRoZXNlIGNoYXJhY3RlcnMKYWNjb3JkaW5nIGFzIHRoZSBwbGVhZGluZyBtYXkgZGVtYW5kLjxtaWxlc3RvbmUgbj0iNzYiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCB0aGV5Cm11c3QgbmV2ZXIgaGUgZml4ZWQgb3IgcHJvdHJ1ZGluZywgbGFuZ3VpZCBvciBzbHVnZ2lzaCwgbGlmZWxlc3MsIGxhc2NpdmlvdXMsIHJlc3RsZXNzLCBub3Igc3dpbSB3aXRoIGEKbW9pc3Qgdm9sdXB0dW91cyBnbGFuY2UsIG5vciBsb29rIGFzbGFudCBub3IgbGVlcgppbiBhbW9yb3VzIGZhc2hpb24sIG5vciB5ZXQgbXVzdCB0aGV5IHNlZW0gdG8KcHJvbWlzZSBvciBhc2sgYSBib29uLiBBcyBmb3Iga2VlcGluZyB0aGVtIGZ1bGx5Cm9yIHBhcnRpYWxseSBjbG9zZWQgd2hpbGUgc3BlYWtpbmcsIHN1cmVseSBub25lIHNhdmUKYW4gdW5lZHVjYXRlZCBtYW4gb3IgYSBmb29sIHdvdWxkIGRyZWFtIG9mIGRvaW5nCnN1Y2ggYSB0aGluZy48bWlsZXN0b25lIG49Ijc3IiB1bml0PSJzZWN0aW9uIiAvPiBBbmQgaW4gYWRkaXRpb24gdG8gYWxsIHRoZXNlIGZvcm1zIG9mCmV4cHJlc3Npb24sIHRoZSB1cHBlciBhbmQgbG93ZXIgZXllbGlkcyBjYW4gcmVuZGVyCnNlcnZpY2UgaW4gc3VwcG9ydCBvZiB0aGUgZXllcy48bWlsZXN0b25lIG49Ijc4IiB1bml0PSJzZWN0aW9uIiAvPiBUaGUgZXllYnJvd3MgYWxzbwptYXkgYmUgdXNlZCB3aXRoIGdyZWF0IGVmZmVjdC4gRm9yIHRvIHNvbWUgZXh0ZW50CnRoZXkgbW91bGQgdGhlIGV4cHJlc3Npb24gb2YgdGhlIGV5ZXMgYW5kCgo8cGIgaWQ9InAuMjg3IiAvPgoKZGV0ZXJtaW5lIHRoYXQgb2YgdGhlIGZvcmVoZWFkLiBJdCBpcyBieSBtZWFucyBvZiB0aGUKZXllYnJvd3MgdGhhdCB3ZSBjb250cmFjdCwgcmFpc2Ugb3Igc21vb3RoIHRoZQpsYXR0ZXI6IGluIGZhY3QsIHRoZSBvbmx5IHRoaW5nIHdoaWNoIGhhcyBncmVhdGVyCmluZmx1ZW5jZSBvdmVyIGl0IGlzIHRoZSBibG9vZCwgd2hpY2ggbW92ZXMgaW4gY29uZm9ybWl0eSB3aXRoIHRoZSBlbW90aW9ucyB0aGF0IGNvbnRyb2wgdGhlIG1pbmQsCmNhdXNpbmcgYSBibHVzaCBvbiBhIHNraW4gdGhhdCBpcyBzZW5zaXRpdmUgdG8gc2hhbWUsCmFuZCBnaXZpbmcgcGxhY2UgdG8gYW4gaWN5IHBhbGxvciB1bmRlciB0aGUgaW5mbHVlbmNlCm9mIGZlYXIsIHdoZXJlYXMsIHdoZW4gaXQgaXMgdW5kZXIgY29udHJvbCwgaXQgcHJvZHVjZXMgYSBwZWFjZWZ1bCBjb21wbGV4aW9uLCBpbnRlcm1lZGlhdGUgYmV0d2Vlbgp0aGUgdHdvLjxtaWxlc3RvbmUgbj0iNzkiIHVuaXQ9InNlY3Rpb24iIC8+IENvbXBsZXRlIGltbW9iaWxpdHkgaW4gdGhlIGV5ZWJyb3dzIGlzCmEgZmF1bHQsIGFzIGFsc28gaXMgZXhjZXNzIG9mIG1vYmlsaXR5IG9yIHRoZSB0ZW5kZW5jeQp0byByYWlzZSBvbmUgYW5kIGxvd2VyIHRoZSBvdGhlciwgYXMgaW4gdGhlIGNvbWljCm1hc2sgd2hpY2ggSSBtZW50aW9uZWQganVzdCBub3c6IHdoaWxlIGl0IGlzIGEKZnVydGhlciBibGVtaXNoIGlmIHRoZXkgZXhwcmVzcyBhIGZlZWxpbmcgb3V0IG9mCmtlZXBpbmcgd2l0aCB0aGUgd29yZHMgd2UgdXR0ZXIuIEZvciB0aGV5IHNob3cKYW5nZXIgYnkgY29udHJhY3Rpb24sIGdyaWVmIGJ5IGRlcHJlc3Npb24gYW5kIGNoZWVyZnVsbmVzcyBieSB0aGVpciBleHBhbnNpb24uIFRoZXkgYXJlIGFsc28gZHJvcHBlZApvciByYWlzZWQgdG8gZXhwcmVzcyBjb25zZW50IG9yIHJlZnVzYWwgcmVzcGVjdGl2ZWx5Lgo8bWlsZXN0b25lIG49IjgwIiB1bml0PSJzZWN0aW9uIiAvPkl0IGlzIG5vdCBvZnRlbiB0aGF0IHRoZSBsaXBzIG9yIG5vc3RyaWxzIGNhbiBiZQpiZWNvbWluZ2x5IGVtcGxveWVkIHRvIGV4cHJlc3Mgb3VyIGZlZWxpbmdzLCBhbHRob3VnaCB0aGV5IGFyZSBvZnRlbiB1c2VkIHRvIGluZGljYXRlIGRlcmlzaW9uLApjb250ZW1wdCBvciBsb2F0aGluZy4gRm9yIHRvIDxxdW90ZT53cmlua2xlIHRoZSBub3N0cmlsczwvcXVvdGU+CihhcyBIb3JhY2Ugc2F5cyksPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+RXAuPC9oaT4gSS4gdi4gMjMuPC9ub3RlPiBvciBibG93IHRoZW0gb3V0LCBvciB0d2l0Y2ggdGhlbSwKb3IgZnJldCB0aGVtIHdpdGggb3VyIGZpbmdlciwgb3Igc25vcnQgdGhyb3VnaCB0aGVtCndpdGggYSBzdWRkZW4gZXhwdWxzaW9uIG9mIHRoZSBicmVhdGgsIG9yIHN0cmV0Y2gKdGhlbSB3aWRlIG9yIHB1c2ggdGhlbSB1cCB3aXRoIHRoZSBmbGF0IG9mIHRoZQpoYW5kIGFyZSBhbGwgaW5kZWNvcm91cywgc2luY2UgaXQgaXMgbm90IHdpdGhvdXQgcmVhc29uCnRoYXQgY2Vuc3VyZSBpcyBwYXNzZWQgZXZlbiBvbiBibG93aW5nIHRoZSBub3NlIHRvbwpmcmVxdWVudGx5LjxtaWxlc3RvbmUgbj0iODEiIHVuaXQ9InNlY3Rpb24iIC8+IEl0IGlzIGFsc28gYW4gdWdseSBoYWJpdCB0byBwcm90cnVkZSB0aGUKbGlwcywgb3BlbiB0aGVtIHdpdGggYSBzdWRkZW4gc21hY2ssPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5JdCBpcyBoYXJkIHRvIGRpc3Rpbmd1aXNoIGJldHdlZW4gPGhpIHJlbmQ9Iml0YWxpY3MiPnNjaW5kZXJlPC9oaT4gYW5kIDxoaSByZW5kPSJpdGFsaWNzIj5kaWR1cmVyZS48L2hpPgpJIGhhdmUgYWRvcHRlZCBhIHN1Z2dlc3Rpb24gb2YgU3BhbGRpbmcncy48L25vdGU+IGNvbXByZXNzCnRoZW0sIGRyYXcgdGhlbSBhcGFydCBhbmQgYmFyZSB0aGUgdGVldGgsIG9yIHR3aXN0CnRoZW0gYXdyeSB0byBvbmUgc2lkZSB0aWxsIHRoZXkgYWxtb3N0IHJlYWNoIHRoZQplYXIsIG9yIHRvIGN1cmwgdGhlbSBpbiBzY29ybiwgb3IgbGV0IHRoZW0gZHJvb3AsIG9yCmFsbG93IHRoZSB2b2ljZSB0byBlc2NhcGUgb25seSBvbiBvbmUgc2lkZS4gSXQgaXMKCjxwYiBpZD0icC4yODkiIC8+CgphbHNvIHVuYmVjb21pbmcgdG8gbGljayBvciBiaXRlIHRoZW0sIHNpbmNlIHRoZWlyCm1vdGlvbiBzaG91bGQgYmUgYnV0IHNsaWdodCBldmVuIHdoZW4gdGhleSBhcmUKZW1wbG95ZWQgaW4gZm9ybWluZyB3b3Jkcy4gRm9yIHdlIG11c3Qgc3BlYWsKd2l0aCB0aGUgbW91dGggcmF0aGVyIHRoYW4gdGhlIGxpcHMuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.72'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MiIgdW5pdD0ic2VjdGlvbiIgLz5CeSBmYXIgdGhlIGdyZWF0ZXN0IGluZmx1ZW5jZSBpcyBleGVyY2lzZWQgYnkgdGhlCmdsYW5jZS4gRm9yIGl0IGlzIGJ5IHRoaXMgdGhhdCB3ZSBleHByZXNzIHN1cHBsaWNhdGlvbiwgdGhyZWF0cywgZmxhdHRlcnksIHNvcnJvdywgam95LCBwcmlkZSBvciBzdWJtaXNzaW9uLiBJdCBpcyBvbiB0aGlzIHRoYXQgb3VyIGF1ZGllbmNlIGhhbmcsIG9uCnRoaXMgdGhhdCB0aGV5IHJpdmV0IHRoZWlyIGF0dGVudGlvbiBhbmQgdGhlaXIgZ2F6ZSwKZXZlbiBiZWZvcmUgd2UgYmVnaW4gdG8gc3BlYWsuIEl0IGlzIHRoaXMgdGhhdAppbnNwaXJlcyB0aGUgaGVhcmVyIHdpdGggYWZmZWN0aW9uIG9yIGRpc2xpa2UsIHRoaXMKdGhhdCBjb252ZXlzIGEgd29ybGQgb2YgbWVhbmluZyBhbmQgaXMgb2Z0ZW4gbW9yZQplbG9xdWVudCB0aGFuIGFsbCBvdXIgd29yZHMuPC90cmFuc2xhdGlvbj4="
translation['11.6.73'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MyIgdW5pdD0ic2VjdGlvbiIgLz4gQ29uc2VxdWVudGx5IGluIHBsYXlzCmRlc3RpbmVkIGZvciB0aGUgc3RhZ2UsIHRoZSBtYXN0ZXJzIG9mIHRoZSBhcnQgb2YKZGVsaXZlcnkgZGVzaWduIGV2ZW4gdGhlaXIgbWFza3MgdG8gZW5oYW5jZSB0aGUKZW1vdGlvbmFsIGVmZmVjdC4gVGh1cywgaW4gdHJhZ2VkeSwgQWVyb3BlIHdpbGwgYmUKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjI4NSIgLz4KCnNhZCwgTWVkZWEgZmllcmNlLCBBamF4IGJld2lsZGVyZWQsIEhlcmN1bGVzIHRydWN1bGVudC48L3RyYW5zbGF0aW9uPg=="
translation['11.6.74'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NCIgdW5pdD0ic2VjdGlvbiIgLz4gSW4gY29tZWR5LCBvbiB0aGUgb3RoZXIgaGFuZCwgb3ZlciBhbmQKYWJvdmUgdGhlIG1ldGhvZHMgYWRvcHRlZCB0byBkaXN0aW5ndWlzaCBiZXR3ZWVuCnNsYXZlcywgcGltcHMsIHBhcmFzaXRlcywgcnVzdGljcywgc29sZGllcnMsIGhhcmxvdHMsCm1haWRzZXJ2YW50cywgb2xkIG1lbiBzdGVybiBhbmQgbWlsZCwgeW91dGhzIG1vcmFsCm9yIGx1eHVyaW91cywgbWFycmllZCB3b21lbiBhbmQgZ2lybHMsIHdlIGhhdmUKdGhlIGltcG9ydGFudCByw7RsZSBvZiB0aGUgZmF0aGVyIHdobywgYmVjYXVzZSBhdAp0aW1lcyBoZSBpcyBleGNpdGVkIGFuZCBhdCBvdGhlcnMgY2FsbCwgaGFzIG9uZQpleWVicm93IHJhaXNlZCBhbmQgdGhlIG90aGVyIG5vcm1hbCwgdGhlIGN1c3RvbQphbW9uZyBhY3RvcnMgYmVpbmcgdG8gdHVybiB0aGF0IHNpZGUgb2YgdGhlIGZhY2UgdG8KdGhlIGF1ZGllbmNlIHdoaWNoIGJlc3Qgc3VpdHMgdGhlIHJvbGUuPC90cmFuc2xhdGlvbj4="
translation['11.6.75'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NSIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IG9mIHRoZQp2YXJpb3VzIGVsZW1lbnRzIHRoYXQgZ28gdG8gZm9ybSB0aGUgZXhwcmVzc2lvbiwKdGhlIGV5ZXMgYXJlIHRoZSBtb3N0IGltcG9ydGFudCwgc2luY2UgdGhleSwgbW9yZQp0aGFuIGFueS10aGluZyBlbHNlLCByZXZlYWwgdGhlIHRlbXBlciBvZiB0aGUgbWluZCwKYW5kIHdpdGhvdXQgYWN0dWFsIG1vdmVtZW50IHdpbGwgdHdpbmtsZSB3aXRoCm1lcnJpbWVudCBvciBiZSBjbG91ZGVkIHdpdGggZ3JpZWYuIEFuZCBmdXJ0aGVyLApuYXR1cmUgaGFzIGdpdmVuIHRoZW0gdGVhcnMgdG8gc2VydmUgYXMgaW50ZXJwcmV0ZXJzCm9mIG91ciBmZWVsaW5ncywgdGVhcnMgdGhhdCB3aWxsIGJyZWFrIGZvcnRoIGZvciBzb3Jyb3cKb3Igc3RyZWFtIGZvciB2ZXJ5IGpveS4gQnV0LCB3aGVuIHRoZSBleWVzIG1vdmUsCnRoZXkgYmVjb21lIGludGVudCwgaW5kaWZmZXJlbnQsIHByb3VkLCBmaWVyY2UsIG1pbGQsCm9yIGFuZ3J5OyBhbmQgdGhleSB3aWxsIGFzc3VtZSBhbGwgdGhlc2UgY2hhcmFjdGVycwphY2NvcmRpbmcgYXMgdGhlIHBsZWFkaW5nIG1heSBkZW1hbmQuPC90cmFuc2xhdGlvbj4="
translation['11.6.76'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHRoZXkKbXVzdCBuZXZlciBoZSBmaXhlZCBvciBwcm90cnVkaW5nLCBsYW5ndWlkIG9yIHNsdWdnaXNoLCBsaWZlbGVzcywgbGFzY2l2aW91cywgcmVzdGxlc3MsIG5vciBzd2ltIHdpdGggYQptb2lzdCB2b2x1cHR1b3VzIGdsYW5jZSwgbm9yIGxvb2sgYXNsYW50IG5vciBsZWVyCmluIGFtb3JvdXMgZmFzaGlvbiwgbm9yIHlldCBtdXN0IHRoZXkgc2VlbSB0bwpwcm9taXNlIG9yIGFzayBhIGJvb24uIEFzIGZvciBrZWVwaW5nIHRoZW0gZnVsbHkKb3IgcGFydGlhbGx5IGNsb3NlZCB3aGlsZSBzcGVha2luZywgc3VyZWx5IG5vbmUgc2F2ZQphbiB1bmVkdWNhdGVkIG1hbiBvciBhIGZvb2wgd291bGQgZHJlYW0gb2YgZG9pbmcKc3VjaCBhIHRoaW5nLjwvdHJhbnNsYXRpb24+"
translation['11.6.77'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NyIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIGluIGFkZGl0aW9uIHRvIGFsbCB0aGVzZSBmb3JtcyBvZgpleHByZXNzaW9uLCB0aGUgdXBwZXIgYW5kIGxvd2VyIGV5ZWxpZHMgY2FuIHJlbmRlcgpzZXJ2aWNlIGluIHN1cHBvcnQgb2YgdGhlIGV5ZXMuPC90cmFuc2xhdGlvbj4="
translation['11.6.78'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OCIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIGV5ZWJyb3dzIGFsc28KbWF5IGJlIHVzZWQgd2l0aCBncmVhdCBlZmZlY3QuIEZvciB0byBzb21lIGV4dGVudAp0aGV5IG1vdWxkIHRoZSBleHByZXNzaW9uIG9mIHRoZSBleWVzIGFuZAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjg3IiAvPgoKZGV0ZXJtaW5lIHRoYXQgb2YgdGhlIGZvcmVoZWFkLiBJdCBpcyBieSBtZWFucyBvZiB0aGUKZXllYnJvd3MgdGhhdCB3ZSBjb250cmFjdCwgcmFpc2Ugb3Igc21vb3RoIHRoZQpsYXR0ZXI6IGluIGZhY3QsIHRoZSBvbmx5IHRoaW5nIHdoaWNoIGhhcyBncmVhdGVyCmluZmx1ZW5jZSBvdmVyIGl0IGlzIHRoZSBibG9vZCwgd2hpY2ggbW92ZXMgaW4gY29uZm9ybWl0eSB3aXRoIHRoZSBlbW90aW9ucyB0aGF0IGNvbnRyb2wgdGhlIG1pbmQsCmNhdXNpbmcgYSBibHVzaCBvbiBhIHNraW4gdGhhdCBpcyBzZW5zaXRpdmUgdG8gc2hhbWUsCmFuZCBnaXZpbmcgcGxhY2UgdG8gYW4gaWN5IHBhbGxvciB1bmRlciB0aGUgaW5mbHVlbmNlCm9mIGZlYXIsIHdoZXJlYXMsIHdoZW4gaXQgaXMgdW5kZXIgY29udHJvbCwgaXQgcHJvZHVjZXMgYSBwZWFjZWZ1bCBjb21wbGV4aW9uLCBpbnRlcm1lZGlhdGUgYmV0d2Vlbgp0aGUgdHdvLjwvdHJhbnNsYXRpb24+"
translation['11.6.79'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OSIgdW5pdD0ic2VjdGlvbiIgLz4gQ29tcGxldGUgaW1tb2JpbGl0eSBpbiB0aGUgZXllYnJvd3MgaXMKYSBmYXVsdCwgYXMgYWxzbyBpcyBleGNlc3Mgb2YgbW9iaWxpdHkgb3IgdGhlIHRlbmRlbmN5CnRvIHJhaXNlIG9uZSBhbmQgbG93ZXIgdGhlIG90aGVyLCBhcyBpbiB0aGUgY29taWMKbWFzayB3aGljaCBJIG1lbnRpb25lZCBqdXN0IG5vdzogd2hpbGUgaXQgaXMgYQpmdXJ0aGVyIGJsZW1pc2ggaWYgdGhleSBleHByZXNzIGEgZmVlbGluZyBvdXQgb2YKa2VlcGluZyB3aXRoIHRoZSB3b3JkcyB3ZSB1dHRlci4gRm9yIHRoZXkgc2hvdwphbmdlciBieSBjb250cmFjdGlvbiwgZ3JpZWYgYnkgZGVwcmVzc2lvbiBhbmQgY2hlZXJmdWxuZXNzIGJ5IHRoZWlyIGV4cGFuc2lvbi4gVGhleSBhcmUgYWxzbyBkcm9wcGVkCm9yIHJhaXNlZCB0byBleHByZXNzIGNvbnNlbnQgb3IgcmVmdXNhbCByZXNwZWN0aXZlbHkuCjwvdHJhbnNsYXRpb24+"
translation['11.6.80'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MCIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyBub3Qgb2Z0ZW4gdGhhdCB0aGUgbGlwcyBvciBub3N0cmlscyBjYW4gYmUKYmVjb21pbmdseSBlbXBsb3llZCB0byBleHByZXNzIG91ciBmZWVsaW5ncywgYWx0aG91Z2ggdGhleSBhcmUgb2Z0ZW4gdXNlZCB0byBpbmRpY2F0ZSBkZXJpc2lvbiwKY29udGVtcHQgb3IgbG9hdGhpbmcuIEZvciB0byA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj53cmlua2xlIHRoZSBub3N0cmlsczwvcXVvdGU+CihhcyBIb3JhY2Ugc2F5cyksPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkVwLjwvaGk+IEkuIHYuIDIzLjwvbm90ZT4gb3IgYmxvdyB0aGVtIG91dCwgb3IgdHdpdGNoIHRoZW0sCm9yIGZyZXQgdGhlbSB3aXRoIG91ciBmaW5nZXIsIG9yIHNub3J0IHRocm91Z2ggdGhlbQp3aXRoIGEgc3VkZGVuIGV4cHVsc2lvbiBvZiB0aGUgYnJlYXRoLCBvciBzdHJldGNoCnRoZW0gd2lkZSBvciBwdXNoIHRoZW0gdXAgd2l0aCB0aGUgZmxhdCBvZiB0aGUKaGFuZCBhcmUgYWxsIGluZGVjb3JvdXMsIHNpbmNlIGl0IGlzIG5vdCB3aXRob3V0IHJlYXNvbgp0aGF0IGNlbnN1cmUgaXMgcGFzc2VkIGV2ZW4gb24gYmxvd2luZyB0aGUgbm9zZSB0b28KZnJlcXVlbnRseS48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5FcC48L2hpPiBJLiB2LiAyMy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.81'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MSIgdW5pdD0ic2VjdGlvbiIgLz4gSXQgaXMgYWxzbyBhbiB1Z2x5IGhhYml0IHRvIHByb3RydWRlIHRoZQpsaXBzLCBvcGVuIHRoZW0gd2l0aCBhIHN1ZGRlbiBzbWFjayw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+SXQgaXMgaGFyZCB0byBkaXN0aW5ndWlzaCBiZXR3ZWVuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNjaW5kZXJlPC9oaT4gYW5kIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRpZHVyZXJlLjwvaGk+CkkgaGF2ZSBhZG9wdGVkIGEgc3VnZ2VzdGlvbiBvZiBTcGFsZGluZydzLjwvbm90ZT4gY29tcHJlc3MKdGhlbSwgZHJhdyB0aGVtIGFwYXJ0IGFuZCBiYXJlIHRoZSB0ZWV0aCwgb3IgdHdpc3QKdGhlbSBhd3J5IHRvIG9uZSBzaWRlIHRpbGwgdGhleSBhbG1vc3QgcmVhY2ggdGhlCmVhciwgb3IgdG8gY3VybCB0aGVtIGluIHNjb3JuLCBvciBsZXQgdGhlbSBkcm9vcCwgb3IKYWxsb3cgdGhlIHZvaWNlIHRvIGVzY2FwZSBvbmx5IG9uIG9uZSBzaWRlLiBJdCBpcwoKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c2NpbmRlcmU8L2hpPiBhbmQgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGlkdXJlcmUuPC9oaT4KSSBoYXZlIGFkb3B0ZWQgYSBzdWdnZXN0aW9uIG9mIFNwYWxkaW5nJ3MuPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjg5IiAvPgoKYWxzbyB1bmJlY29taW5nIHRvIGxpY2sgb3IgYml0ZSB0aGVtLCBzaW5jZSB0aGVpcgptb3Rpb24gc2hvdWxkIGJlIGJ1dCBzbGlnaHQgZXZlbiB3aGVuIHRoZXkgYXJlCmVtcGxveWVkIGluIGZvcm1pbmcgd29yZHMuIEZvciB3ZSBtdXN0IHNwZWFrCndpdGggdGhlIG1vdXRoIHJhdGhlciB0aGFuIHRoZSBsaXBzLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjgyIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBuZWNrIG11c3QgYmUgc3RyYWlnaHQsIG5vdCBzdGlmZiBvciBiZW50CmJhY2t3YXJkLiBBcyByZWdhcmRzIHRoZSB0aHJvYXQsIGNvbnRyYWN0aW9uIGFuZApzdHJldGNoaW5nIGFyZSBlcXVhbGx5IHVuYmVjb21pbmcsIHRob3VnaCBpbiBkaWZmZXJlbnQgd2F5cy4gSWYgaXQgYmUgc3RyZXRjaGVkLCBpdCBjYXVzZXMgc3RyYWluCmFzIHdlbGwsIGFuZCB3ZWFrZW5zIGFuZCBmYXRpZ3VlcyB0aGUgdm9pY2UsCndoaWxlIGlmIHRoZSBjaGluIGJlIHByZXNzZWQgZG93biBpbnRvIHRoZSBjaGVzdAppdCBtYWtlcyB0aGUgdm9pY2UgbGVzcyBkaXN0aW5jdCBhbmQgY29hcnNlbnMgaXQsCm93aW5nIHRvIHRoZSBwcmVzc3VyZSBvbiB0aGUgd2luZHBpcGUuPG1pbGVzdG9uZSBuPSI4MyIgdW5pdD0ic2VjdGlvbiIgLz4gSXQgaXMsIGFzIGEKcnVsZSwgdW5iZWNvbWluZyB0byByYWlzZSBvciBjb250cmFjdCB0aGUgc2hvdWxkZXJzLgpGb3IgaXQgc2hvcnRlbnMgdGhlIG5lY2sgYW5kIHByb2R1Y2VzIGEgbWVhbiBhbmQKc2VydmlsZSBnZXN0dXJlLCB3aGljaCBpcyBldmVuIHN1Z2dlc3RpdmUgb2YgZGlzaG9uZXN0eSB3aGVuIG1lbiBhc3N1bWUgYW4gYXR0aXR1ZGUgb2YgZmxhdHRlcnksCmFkbWlyYXRpb24gb3IgZmVhci48bWlsZXN0b25lIG49Ijg0IiB1bml0PSJzZWN0aW9uIiAvPiBJbiBjb250aW51b3VzIGFuZCBmbG93aW5nIHBhc3NhZ2VzIGEgbW9zdCBiZWNvbWluZyBnZXN0dXJlIGlzIHNsaWdodGx5IHRvIGV4dGVuZAp0aGUgYXJtIHdpdGggc2hvdWxkZXJzIHdlbGwgdGhyb3duIGJhY2sgYW5kIHRoZQpmaW5nZXJzIG9wZW5pbmcgYXMgdGhlIGhhbmQgbW92ZXMgZm9yd2FyZC4gQnV0CndoZW4gd2UgaGF2ZSB0byBzcGVhayBpbiBzcGVjaWFsbHkgcmljaCBvciBpbXByZXNzaXZlIHN0eWxlLCBhcywgZm9yIGV4YW1wbGUsIGluIHRoZSBwYXNzYWdlIDxoaSByZW5kPSJpdGFsaWNzIj5zYXhhIGF0aXF1CnNvbGl0dWRpbmVzIHZvY2kgcmVzcG9uZGVudCw8L2hpPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPnBybyBBcmguPC9oaT4gdmlpaS4gMTkuIFNlZSBWSUlJLiBpaWkuIDc1IGFuZCBJWC4gaXYuIDQ0Lgo8cXVvdGU+Um9ja3MgYW5kIHNvbGl0dWRlIG1ha2UgYW5zd2VyIHRvIHRoZSB2b2ljZS48L3F1b3RlPjwvbm90ZT4gdGhlIGFybSB3aWxsIGJlIHRocm93biBvdXQKaW4gYSBzdGF0ZWx5IHNpZGVsb25nIHN3ZWVwIGFuZCB0aGUgd29yZHMgd2lsbCwgYXMKaXQgd2VyZSwgZXhwYW5kIGluIHVuaXNvbiB3aXRoIHRoZSBnZXN0dXJlLjxtaWxlc3RvbmUgbj0iODUiIHVuaXQ9InNlY3Rpb24iIC8+IEFzCmZvciB0aGUgaGFuZHMsIHdpdGhvdXQgd2hpY2ggYWxsIGFjdGlvbiB3b3VsZCBiZQpjcmlwcGxlZCBhbmQgZW5mZWVibGVkLCBpdCBpcyBzY2FyY2VseSBwb3NzaWJsZSB0bwpkZXNjcmliZSB0aGUgdmFyaWV0eSBvZiB0aGVpciBtb3Rpb25zLCBzaW5jZSB0aGV5IGFyZQphbG1vc3QgYXMgZXhwcmVzc2l2ZSBhcyB3b3Jkcy4gRm9yIG90aGVyIHBvcnRpb25zCm9mIHRoZSBib2R5IG1lcmVseSBoZWxwIHRoZSBzcGVha2VyLCB3aGVyZWFzIHRoZQpoYW5kcyBtYXkgYWxtb3N0IGJlIHNhaWQgdG8gc3BlYWsuPG1pbGVzdG9uZSBuPSI4NiIgdW5pdD0ic2VjdGlvbiIgLz4gRG8gd2Ugbm90CnVzZSB0aGVtIHRvIGRlbWFuZCwgcHJvbWlzZSwgc3VtbW9uLCBkaXNtaXNzLAp0aHJlYXRlbiwgc3VwcGxpY2F0ZSwgZXhwcmVzcyBhdmVyc2lvbiBvciBmZWFyLCBxdWVzdGlvbgpvciBkZW55PyBEbyB3ZSBub3QgZW1wbG95IHRoZW0gdG8gaW5kaWNhdGUgam95LAoKPHBiIGlkPSJwLjI5MSIgLz4KCnNvcnJvdywgaGVzaXRhdGlvbiwgY29uZmVzc2lvbiwgcGVuaXRlbmNlLCBtZWFzdXJlLApxdWFudGl0eSwgbnVtYmVyIGFuZCB0aW1lPzxtaWxlc3RvbmUgbj0iODciIHVuaXQ9InNlY3Rpb24iIC8+IEhhdmUgdGhleSBub3QgcG93ZXIKdG8gZXhjaXRlIGFuZCBwcm9oaWJpdCwgdG8gZXhwcmVzcyBhcHByb3ZhbCwgd29uZGVyCm9yIHNoYW1lPyBEbyB0aGV5IG5vdCB0YWtlIHRoZSBwbGFjZSBvZiBhZHZlcmJzCmFuZCBwcm9ub3VucyB3aGVuIHdlIHBvaW50IGF0IHBsYWNlcyBhbmQgdGhpbmdzPwpJbiBmYWN0LCB0aG91Z2ggdGhlIHBlb3BsZXMgYW5kIG5hdGlvbnMgb2YgdGhlIGVhcnRoCnNwZWFrIGEgbXVsdGl0dWRlIG9mIHRvbmd1ZXMsIHRoZXkgc2hhcmUgaW4gY29tbW9uCnRoZSB1bml2ZXJzYWwgbGFuZ3VhZ2Ugb2YgdGhlIGhhbmRzLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.6.82'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbmVjayBtdXN0IGJlIHN0cmFpZ2h0LCBub3Qgc3RpZmYgb3IgYmVudApiYWNrd2FyZC4gQXMgcmVnYXJkcyB0aGUgdGhyb2F0LCBjb250cmFjdGlvbiBhbmQKc3RyZXRjaGluZyBhcmUgZXF1YWxseSB1bmJlY29taW5nLCB0aG91Z2ggaW4gZGlmZmVyZW50IHdheXMuIElmIGl0IGJlIHN0cmV0Y2hlZCwgaXQgY2F1c2VzIHN0cmFpbgphcyB3ZWxsLCBhbmQgd2Vha2VucyBhbmQgZmF0aWd1ZXMgdGhlIHZvaWNlLAp3aGlsZSBpZiB0aGUgY2hpbiBiZSBwcmVzc2VkIGRvd24gaW50byB0aGUgY2hlc3QKaXQgbWFrZXMgdGhlIHZvaWNlIGxlc3MgZGlzdGluY3QgYW5kIGNvYXJzZW5zIGl0LApvd2luZyB0byB0aGUgcHJlc3N1cmUgb24gdGhlIHdpbmRwaXBlLjwvdHJhbnNsYXRpb24+"
translation['11.6.83'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MyIgdW5pdD0ic2VjdGlvbiIgLz4gSXQgaXMsIGFzIGEKcnVsZSwgdW5iZWNvbWluZyB0byByYWlzZSBvciBjb250cmFjdCB0aGUgc2hvdWxkZXJzLgpGb3IgaXQgc2hvcnRlbnMgdGhlIG5lY2sgYW5kIHByb2R1Y2VzIGEgbWVhbiBhbmQKc2VydmlsZSBnZXN0dXJlLCB3aGljaCBpcyBldmVuIHN1Z2dlc3RpdmUgb2YgZGlzaG9uZXN0eSB3aGVuIG1lbiBhc3N1bWUgYW4gYXR0aXR1ZGUgb2YgZmxhdHRlcnksCmFkbWlyYXRpb24gb3IgZmVhci48L3RyYW5zbGF0aW9uPg=="
translation['11.6.84'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NCIgdW5pdD0ic2VjdGlvbiIgLz4gSW4gY29udGludW91cyBhbmQgZmxvd2luZyBwYXNzYWdlcyBhIG1vc3QgYmVjb21pbmcgZ2VzdHVyZSBpcyBzbGlnaHRseSB0byBleHRlbmQKdGhlIGFybSB3aXRoIHNob3VsZGVycyB3ZWxsIHRocm93biBiYWNrIGFuZCB0aGUKZmluZ2VycyBvcGVuaW5nIGFzIHRoZSBoYW5kIG1vdmVzIGZvcndhcmQuIEJ1dAp3aGVuIHdlIGhhdmUgdG8gc3BlYWsgaW4gc3BlY2lhbGx5IHJpY2ggb3IgaW1wcmVzc2l2ZSBzdHlsZSwgYXMsIGZvciBleGFtcGxlLCBpbiB0aGUgcGFzc2FnZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zYXhhIGF0aXF1CnNvbGl0dWRpbmVzIHZvY2kgcmVzcG9uZGVudCw8L2hpPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gQXJoLjwvaGk+IHZpaWkuIDE5LiBTZWUgVklJSS4gaWlpLiA3NSBhbmQgSVguIGl2LiA0NC4KPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Um9ja3MgYW5kIHNvbGl0dWRlIG1ha2UgYW5zd2VyIHRvIHRoZSB2b2ljZS48L3F1b3RlPjwvbm90ZT4gdGhlIGFybSB3aWxsIGJlIHRocm93biBvdXQKaW4gYSBzdGF0ZWx5IHNpZGVsb25nIHN3ZWVwIGFuZCB0aGUgd29yZHMgd2lsbCwgYXMKaXQgd2VyZSwgZXhwYW5kIGluIHVuaXNvbiB3aXRoIHRoZSBnZXN0dXJlLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBBcmguPC9oaT4gdmlpaS4gMTkuIFNlZSBWSUlJLiBpaWkuIDc1IGFuZCBJWC4gaXYuIDQ0Lgo8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Sb2NrcyBhbmQgc29saXR1ZGUgbWFrZSBhbnN3ZXIgdG8gdGhlIHZvaWNlLjwvcXVvdGU+PC90cmFuc2xhdGlvbj4="
translation['11.6.85'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NSIgdW5pdD0ic2VjdGlvbiIgLz4gQXMKZm9yIHRoZSBoYW5kcywgd2l0aG91dCB3aGljaCBhbGwgYWN0aW9uIHdvdWxkIGJlCmNyaXBwbGVkIGFuZCBlbmZlZWJsZWQsIGl0IGlzIHNjYXJjZWx5IHBvc3NpYmxlIHRvCmRlc2NyaWJlIHRoZSB2YXJpZXR5IG9mIHRoZWlyIG1vdGlvbnMsIHNpbmNlIHRoZXkgYXJlCmFsbW9zdCBhcyBleHByZXNzaXZlIGFzIHdvcmRzLiBGb3Igb3RoZXIgcG9ydGlvbnMKb2YgdGhlIGJvZHkgbWVyZWx5IGhlbHAgdGhlIHNwZWFrZXIsIHdoZXJlYXMgdGhlCmhhbmRzIG1heSBhbG1vc3QgYmUgc2FpZCB0byBzcGVhay48L3RyYW5zbGF0aW9uPg=="
translation['11.6.86'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NiIgdW5pdD0ic2VjdGlvbiIgLz4gRG8gd2Ugbm90CnVzZSB0aGVtIHRvIGRlbWFuZCwgcHJvbWlzZSwgc3VtbW9uLCBkaXNtaXNzLAp0aHJlYXRlbiwgc3VwcGxpY2F0ZSwgZXhwcmVzcyBhdmVyc2lvbiBvciBmZWFyLCBxdWVzdGlvbgpvciBkZW55PyBEbyB3ZSBub3QgZW1wbG95IHRoZW0gdG8gaW5kaWNhdGUgam95LAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMjkxIiAvPgoKc29ycm93LCBoZXNpdGF0aW9uLCBjb25mZXNzaW9uLCBwZW5pdGVuY2UsIG1lYXN1cmUsCnF1YW50aXR5LCBudW1iZXIgYW5kIHRpbWU/PC90cmFuc2xhdGlvbj4="
translation['11.6.87'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NyIgdW5pdD0ic2VjdGlvbiIgLz4gSGF2ZSB0aGV5IG5vdCBwb3dlcgp0byBleGNpdGUgYW5kIHByb2hpYml0LCB0byBleHByZXNzIGFwcHJvdmFsLCB3b25kZXIKb3Igc2hhbWU/IERvIHRoZXkgbm90IHRha2UgdGhlIHBsYWNlIG9mIGFkdmVyYnMKYW5kIHByb25vdW5zIHdoZW4gd2UgcG9pbnQgYXQgcGxhY2VzIGFuZCB0aGluZ3M/CkluIGZhY3QsIHRob3VnaCB0aGUgcGVvcGxlcyBhbmQgbmF0aW9ucyBvZiB0aGUgZWFydGgKc3BlYWsgYSBtdWx0aXR1ZGUgb2YgdG9uZ3VlcywgdGhleSBzaGFyZSBpbiBjb21tb24KdGhlIHVuaXZlcnNhbCBsYW5ndWFnZSBvZiB0aGUgaGFuZHMuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iODgiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIGdlc3R1cmVzIG9mIHdoaWNoIEkgaGF2ZSB0aHVzIGZhciBzcG9rZW4gYXJlCnN1Y2ggYXMgbmF0dXJhbGx5IHByb2NlZWQgZnJvbSB1cyBzaW11bHRhbmVvdXNseQp3aXRoIG91ciB3b3Jkcy4gQnV0IHRoZXJlIGFyZSBvdGhlcnMgd2hpY2ggaW5kaWNhdGUgdGhpbmdzIGJ5IG1lYW5zIG9mIG1pbWljcnkuIEZvciBleGFtcGxlLAp5b3UgbWF5IHN1Z2dlc3QgYSBzaWNrIG1hbiBieSBtaW1pY2tpbmcgdGhlCmdlc3R1cmUgb2YgYSBkb2N0b3IgZmVlbGluZyB0aGUgcHVsc2UsIG9yIGEgaGFycGlzdCBieQphIG1vdmVtZW50IG9mIHRoZSBoYW5kcyBhcyB0aG91Z2ggdGhleSB3ZXJlCnBsdWNraW5nIHRoZSBzdHJpbmdzLiBCdXQgdGhpcyBpcyBhIHR5cGUgb2YgZ2VzdHVyZQp3aGljaCBzaG91bGQgYmUgcmlnb3JvdXNseSBhdm9pZGVkIGluIHBsZWFkaW5nLjxtaWxlc3RvbmUgbj0iODkiIHVuaXQ9InNlY3Rpb24iIC8+IEZvcgp0aGUgb3JhdG9yIHNob3VsZCBiZSBhcyB1bmxpa2UgYSBkYW5jZXIgYXMgcG9zc2libGUsCmFuZCBoaXMgZ2VzdHVyZSBzaG91bGQgYmUgYWRhcHRlZCByYXRoZXIgdG8gaGlzCnRob3VnaHQgdGhhbiB0byBoaXMgYWN0dWFsIHdvcmRzLCBhIHByYWN0aWNlIHdoaWNoCndhcyBpbmRlZWQgb25jZSB1cG9uIGEgdGltZSBldmVuIGFkb3B0ZWQgYnkgdGhlCm1vcmUgZGlnbmlmaWVkIHBlcmZvcm1lcnMgb24gdGhlIHN0YWdlLiBJIHNob3VsZCwKdGhlcmVmb3JlLCBwZXJtaXQgaGltIHRvIGRpcmVjdCBoaXMgaGFuZCB0b3dhcmRzIGhpcwpib2R5IHRvIGluZGljYXRlIHRoYXQgaGUgaXMgc3BlYWtpbmcgb2YgaGltc2VsZiwgb3IgdG8KcG9pbnQgaXQgYXQgc29tZSBvbmUgZWxzZSB0byB3aG9tIGhlIGlzIGFsbHVkaW5nLAp0b2dldGhlciB3aXRoIG90aGVyIHNpbWlsYXIgZ2VzdHVyZXMgd2hpY2ggSSBuZWVkCm5vdCBtZW50aW9uLiBCdXQsIG9uIHRoZSBvdGhlciBoYW5kLCBJIHdvdWxkIG5vdAphbGxvdyBoaW0gdG8gdXNlIGhpcyBoYW5kcyB0byBpbWl0YXRlIGF0dGl0dWRlcyBvciB0bwppbGx1c3RyYXRlIGFueXRoaW5nIGhlIG1heSBjaGFuY2UgdG8gc2F5LjxtaWxlc3RvbmUgbj0iOTAiIHVuaXQ9InNlY3Rpb24iIC8+IEFuZCB0aGlzCnJ1bGUgYXBwbGllcyBub3QgbWVyZWx5IHRvIHRoZSBoYW5kcywgYnV0IHRvIGFsbApnZXN0dXJlIGFuZCB0byB0aGUgdm9pY2UgYXMgd2VsbC4gRm9yIGluIGRlbGl2ZXJpbmcKdGhlIHBlcmlvZCA8aGkgcmVuZD0iaXRhbGljcyI+c3RldGl0IHNvbGVhdHVzIHByYWV0b3IgcG9wdWxpIFJvbWFuaSw8L2hpPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlcmUgaW4gaGlzIHNsaXBwZXJzIHN0b29kIHRoZSBwcmFldG9yIG9mIHRoZSBSb21hbgpwZW9wbGUuIiA8aGkgcmVuZD0iaXRhbGljcyI+VmVyci48L2hpPiB2LiB4eHhpaWkuIDg2OiBzZWUgPGhpIHJlbmQ9Iml0YWxpY3MiPlZJSUkuPC9oaT4gaWlpLiA2NC48L25vdGU+IGl0CndvdWxkIGJlIHdyb25nIHRvIGltaXRhdGUgVmVycmVzIGxlYW5pbmcgb24gaGlzCm1pc3RyZXNzLCBvciBpbiB1dHRlcmluZyB0aGUgcGhyYXNlIDxoaSByZW5kPSJpdGFsaWNzIj5jYWVkZWJhdHVyIGluIG1lZGlvPC9oaT4KCjxwYiBpZD0icC4yOTMiIC8+Cgo8aGkgcmVuZD0iaXRhbGljcyI+Zm9ybyBNZXNzYW5hZTwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+VmVyci48L2hpPiB2LiBseGlpIDE2Mi4gPHF1b3RlPkhlIHdhcyBzY291cmdlZCBpbiB0aGUgbWlkc3Qgb2YgdGhlCm1hcmtldC1wbGFjZSBvZiBNZXNzaW5hLjwvcXVvdGU+PC9ub3RlPiB0byBtYWtlIHRoZSBzaWRlIHdyaXRoZSwgYXMgaXQgZG9lcwp3aGVuIHF1aXZlcmluZyBiZW5lYXRoIHRoZSBsYXNoLCBvciB0byB1dHRlciBzaHJpZWtzLApzdWNoIGFzIGFyZSBleHRvcnRlZCBieSBwYWluLjxtaWxlc3RvbmUgbj0iOTEiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBldmVuIGNvbWljIGFjdG9ycwpzZWVtIHRvIG1lIHRvIGNvbW1pdCBhIGdyb3NzIG9mZmVuY2UgYWdhaW5zdCB0aGUKY2Fub25zIG9mIHRoZWlyIGFydCB3aGVuLCBpZiB0aGV5IGhhdmUgaW4gdGhlIGNvdXJzZQpvZiBzb21lIG5hcnJhdGl2ZSB0byBxdW90ZSBlaXRoZXIgdGhlIHdvcmRzIG9mIGFuIG9sZAptYW4gKGFzLCBmb3IgZXhhbXBsZSwgaW4gdGhlIHByb2xvZ3VlIHRvIHRoZSA8aGkgcmVuZD0iaXRhbGljcyI+SHlkcmlhPC9oaT4pLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+UGxheXMgb2YgTWVuYW5kZXIuPC9ub3RlPgpvciBvZiBhIHdvbWFuIChhcyBpbiB0aGUgKDxoaSByZW5kPSJpdGFsaWNzIj5HZW9yZ3VzPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlBsYXlzIG9mIE1lbmFuZGVyLjwvbm90ZT4pLCB0aGV5IGxpdHRlciB0aGVtCmluIGEgdHJlbXVsb3VzIG9yIGEgdHJlYmxlIHZvaWNlLCBub3R3aXRoc3RhbmRpbmcgdGhlCmZhY3QgdGhhdCB0aGV5IGFyZSBwbGF5aW5nIHRoZSBwYXJ0IG9mIGEgeW91bmcgbWFuLgpTbyB0cnVlIGlzIGl0IHRoYXQgY2VydGFpbiBmb3JtcyBvZiBpbWl0YXRpb24gbWF5IGJlCmEgYmxlbWlzaCBldmVuIGluIHRob3NlIHdob3NlIHdob2xlIGFydCBjb25zaXN0cyBpbgppbWl0YXRpb24uPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.88'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZ2VzdHVyZXMgb2Ygd2hpY2ggSSBoYXZlIHRodXMgZmFyIHNwb2tlbiBhcmUKc3VjaCBhcyBuYXR1cmFsbHkgcHJvY2VlZCBmcm9tIHVzIHNpbXVsdGFuZW91c2x5CndpdGggb3VyIHdvcmRzLiBCdXQgdGhlcmUgYXJlIG90aGVycyB3aGljaCBpbmRpY2F0ZSB0aGluZ3MgYnkgbWVhbnMgb2YgbWltaWNyeS4gRm9yIGV4YW1wbGUsCnlvdSBtYXkgc3VnZ2VzdCBhIHNpY2sgbWFuIGJ5IG1pbWlja2luZyB0aGUKZ2VzdHVyZSBvZiBhIGRvY3RvciBmZWVsaW5nIHRoZSBwdWxzZSwgb3IgYSBoYXJwaXN0IGJ5CmEgbW92ZW1lbnQgb2YgdGhlIGhhbmRzIGFzIHRob3VnaCB0aGV5IHdlcmUKcGx1Y2tpbmcgdGhlIHN0cmluZ3MuIEJ1dCB0aGlzIGlzIGEgdHlwZSBvZiBnZXN0dXJlCndoaWNoIHNob3VsZCBiZSByaWdvcm91c2x5IGF2b2lkZWQgaW4gcGxlYWRpbmcuPC90cmFuc2xhdGlvbj4="
translation['11.6.89'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCnRoZSBvcmF0b3Igc2hvdWxkIGJlIGFzIHVubGlrZSBhIGRhbmNlciBhcyBwb3NzaWJsZSwKYW5kIGhpcyBnZXN0dXJlIHNob3VsZCBiZSBhZGFwdGVkIHJhdGhlciB0byBoaXMKdGhvdWdodCB0aGFuIHRvIGhpcyBhY3R1YWwgd29yZHMsIGEgcHJhY3RpY2Ugd2hpY2gKd2FzIGluZGVlZCBvbmNlIHVwb24gYSB0aW1lIGV2ZW4gYWRvcHRlZCBieSB0aGUKbW9yZSBkaWduaWZpZWQgcGVyZm9ybWVycyBvbiB0aGUgc3RhZ2UuIEkgc2hvdWxkLAp0aGVyZWZvcmUsIHBlcm1pdCBoaW0gdG8gZGlyZWN0IGhpcyBoYW5kIHRvd2FyZHMgaGlzCmJvZHkgdG8gaW5kaWNhdGUgdGhhdCBoZSBpcyBzcGVha2luZyBvZiBoaW1zZWxmLCBvciB0bwpwb2ludCBpdCBhdCBzb21lIG9uZSBlbHNlIHRvIHdob20gaGUgaXMgYWxsdWRpbmcsCnRvZ2V0aGVyIHdpdGggb3RoZXIgc2ltaWxhciBnZXN0dXJlcyB3aGljaCBJIG5lZWQKbm90IG1lbnRpb24uIEJ1dCwgb24gdGhlIG90aGVyIGhhbmQsIEkgd291bGQgbm90CmFsbG93IGhpbSB0byB1c2UgaGlzIGhhbmRzIHRvIGltaXRhdGUgYXR0aXR1ZGVzIG9yIHRvCmlsbHVzdHJhdGUgYW55dGhpbmcgaGUgbWF5IGNoYW5jZSB0byBzYXkuPC90cmFuc2xhdGlvbj4="
translation['11.6.90'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MCIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIHRoaXMKcnVsZSBhcHBsaWVzIG5vdCBtZXJlbHkgdG8gdGhlIGhhbmRzLCBidXQgdG8gYWxsCmdlc3R1cmUgYW5kIHRvIHRoZSB2b2ljZSBhcyB3ZWxsLiBGb3IgaW4gZGVsaXZlcmluZwp0aGUgcGVyaW9kIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnN0ZXRpdCBzb2xlYXR1cyBwcmFldG9yIHBvcHVsaSBSb21hbmksPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlcmUgaW4gaGlzIHNsaXBwZXJzIHN0b29kIHRoZSBwcmFldG9yIG9mIHRoZSBSb21hbgpwZW9wbGUuIiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5WZXJyLjwvaGk+IHYuIHh4eGlpaS4gODY6IHNlZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5WSUlJLjwvaGk+IGlpaS4gNjQuPC9ub3RlPiBpdAp3b3VsZCBiZSB3cm9uZyB0byBpbWl0YXRlIFZlcnJlcyBsZWFuaW5nIG9uIGhpcwptaXN0cmVzcywgb3IgaW4gdXR0ZXJpbmcgdGhlIHBocmFzZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5WZXJyLjwvaGk+IHYuIHh4eGlpaS4gODY6IHNlZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5WSUlJLjwvaGk+IGlpaS4gNjQuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Y2FlZGViYXR1ciBpbiBtZWRpbzwvaGk+Cgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yOTMiIC8+Cgo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5mb3JvIE1lc3NhbmFlPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+VmVyci48L2hpPiB2LiBseGlpIDE2Mi4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SGUgd2FzIHNjb3VyZ2VkIGluIHRoZSBtaWRzdCBvZiB0aGUKbWFya2V0LXBsYWNlIG9mIE1lc3NpbmEuPC9xdW90ZT48L25vdGU+IHRvIG1ha2UgdGhlIHNpZGUgd3JpdGhlLCBhcyBpdCBkb2VzCndoZW4gcXVpdmVyaW5nIGJlbmVhdGggdGhlIGxhc2gsIG9yIHRvIHV0dGVyIHNocmlla3MsCnN1Y2ggYXMgYXJlIGV4dG9ydGVkIGJ5IHBhaW4uPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+VmVyci48L2hpPiB2LiBseGlpIDE2Mi4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SGUgd2FzIHNjb3VyZ2VkIGluIHRoZSBtaWRzdCBvZiB0aGUKbWFya2V0LXBsYWNlIG9mIE1lc3NpbmEuPC9xdW90ZT48L3RyYW5zbGF0aW9uPg=="
translation['11.6.91'] = ""
translation['11.6.92'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MiIgdW5pdD0ic2VjdGlvbiIgLz5PbmUgb2YgdGhlIGNvbW1vbmVzdCBvZiBhbGwgdGhlIGdlc3R1cmVzIGNvbnNpc3RzCmluIHBsYWNpbmcgdGhlIG1pZGRsZSBmaW5nZXIgYWdhaW5zdCB0aGUgdGh1bWIgYW5kCmV4dGVuZGluZyB0aGUgcmVtYWluaW5nIHRocmVlOiBpdCBpcyBzdWl0YWJsZSB0byB0aGUKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZXhvcmR1bSw8L2hpPiB0aGUgaGFuZCBiZWluZyBtb3ZlZCBmb3J3YXJkIHdpdGggYW4KZWFzeSBtb3Rpb24gYSBsaXR0bGUgZGlzdGFuY2UgYm90aCB0byByaWdodCBhbmQgbGVmdCwKd2hpbGUgdGhlIGhlYWQgYW5kIHNob3VsZGVycyBncmFkdWFsbHkgZm9sbG93IHRoZQpkaXJlY3Rpb24gb2YgdGhlIGdlc3R1cmUuIEl0IGlzIGFsc28gdXNlZnVsIGluIHRoZQo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zdGF0ZW1lbnQgb2YgZmFjdHMsPC9oaT4gYnV0IGluIHRoYXQgY2FzZSB0aGUgaGFuZCBtdXN0IGJlCm1vdmVkIHdpdGggZmlybW5lc3MgYW5kIGEgbGl0dGxlIGZ1cnRoZXIgZm9yd2FyZCwKd2hpbGUsIGlmIHdlIGFyZSByZXByb2FjaGluZyBvciByZWZ1dGluZyBvdXIgYWR2ZXJzYXJ5LCB0aGUgc2FtZSBtb3ZlbWVudCBtYXkgYmUgZW1wbG95ZWQgd2l0aApzb21lIHZlaGVtZW5jZSBhbmQgZW5lcmd5LCBzaW5jZSBzdWNoIHBhc3NhZ2VzCnBlcm1pdCBvZiBncmVhdGVyIGZyZWVkb20gb2YgZXh0ZW5zaW9uLjwvdHJhbnNsYXRpb24+"
translation['11.6.93'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MyIgdW5pdD0ic2VjdGlvbiIgLz4gT24gdGhlCm90aGVyIGhhbmQsIHRoaXMgc2FtZSBnZXN0dXJlIGlzIG9mdGVuIGRpcmVjdGVkIHNpZGV3YXlzIHRvd2FyZHMgdGhlIGxlZnQgc2hvdWxkZXI6IHRoaXMgaXMgYSBtaXN0YWtlLAphbHRob3VnaCBpdCBpcyBhIHN0aWxsIHdvcnNlIGZhdWx0IHRvIHRocnVzdCB0aGUgYXJtCmFjcm9zcyB0aGUgY2hlc3QgYW5kIGdlc3RpY3VsYXRlIHdpdGggdGhlIGVsYm93LgpUaGUgbWlkZGxlIGFuZCB0aGlyZCBmaW5nZXJzIGFyZSBhbHNvIHNvbWV0aW1lcwp0dXJuZWQgdW5kZXIgdGhlIHRodW1iLCBwcm9kdWNpbmcgYSBzdGlsbCBtb3JlCmZvcmNpYmxlIGVmZmVjdCB0aGFuIHRoZSBnZXN0dXJlIHByZXZpb3VzbHkgZGVzY3JpYmVkLApidXQgbm90IHdlbGwgYWRhcHRlZCBmb3IgdXNlIGluIHRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5leG9yZGl1bTwvaGk+IG9yIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnN0YXRlLTwvaGk+Cgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yOTUiIC8+Cgo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5tZWFudCBvZiBmYWN0cy48L2hpPjwvdHJhbnNsYXRpb24+"
translation['11.6.94'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHdoZW4gdGhyZWUgZmluZ2VycyBhcmUgZG91YmxlZAp1bmRlciB0aGUgdGh1bWIsIHRoZSBmaW5nZXIsIHdoaWNoIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5kZSBPci48L2hpPiBJSS4geGx2LiAxODguPC9ub3RlPiBzYXlzCnRoYXQgQ3Jhc3N1cyB1c2VkIHRvIHN1Y2ggZWZmZWN0LCBpcyBleHRlbmRlZC4gSXQgaXMKdXNlZCBpbiBkZW51bmNpYXRpb24gYW5kIGluIGluZGljYXRpb24gKHdoZW5jZSBpdHMKbmFtZSBvZiBpbmRleCBmaW5nZXIpLCB3aGlsZSBpZiBpdCBiZSBzbGlnaHRseSBkcm9wcGVkCmFmdGVyIHRoZSBoYW5kIGhhcyBiZWVuIHJhaXNlZCB0b3dhcmQgdGhlIHNob3VsZGVyLAppdCBzaWduaWZpZXMgYWZmaXJtYXRpb24sIGFuZCBpZiBwb2ludGVkIGFzIGl0IHdlcmUKZmFjZSBkb3dud2FyZHMgdG93YXJkIHRoZSBncm91bmQsIGl0IGV4cHJlc3NlcwppbnNpc3RlbmNlLiBJdCBpcyBzb21ldGltZXMgYWxzbyB1c2VkIHRvIGluZGljYXRlCm51bWJlci48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5kZSBPci48L2hpPiBJSS4geGx2LiAxODguPC90cmFuc2xhdGlvbj4="
translation['11.6.95'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NSIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIGlmIGl0cyB0b3Agam9pbnQgaXMgbGlnaHRseSBncmlwcGVkIG9uCmVpdGhlciBzaWRlLCB3aXRoIHRoZSB0d28gb3V0ZXIgZmluZ2VycyBzbGlnaHRseQpjdXJ2ZWQsIHRoZSBsaXR0bGUgZmluZ2VyIHJhdGhlciBsZXNzIHRoYW4gdGhlIHRoaXJkLAp3ZSBzaGFsbCBoYXZlIGEgZ2VzdHVyZSB3ZWxsIHN1aXRlZCBmb3IgYXJndW1lbnQuCkJ1dCBmb3IgdGhpcyBwdXJwb3NlIHRoZSBzYW1lIGdlc3R1cmUgaXMgcmVuZGVyZWQKbW9yZSBlbXBoYXRpYyBieSBob2xkaW5nIHRoZSBtaWRkbGUgam9pbnQgb2YgdGhlCmZpbmdlciBhbmQgY29udHJhY3RpbmcgdGhlIGxhc3QgdHdvIGZpbmdlcnMgc3RpbGwKZnVydGhlciB0byBtYXRjaCB0aGUgbG93ZXIgcG9zaXRpb24gb2YgdGhlIG1pZGRsZQpmaW5nZXIgYW5kIHRodW1iLjwvdHJhbnNsYXRpb24+"
translation['11.6.96'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NiIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIGZvbGxvd2luZyBnZXN0dXJlIGlzIGFkbWlyYWJseSBhZGFwdGVkIHRvIGFjY29tcGFueSBtb2Rlc3QgbGFuZ3VhZ2U6IHRoZQp0aHVtYiBhbmQgdGhlIG5leHQgdGhyZWUgZmluZ2VycyBhcmUgZ2VudGx5IGNvbnZlcmdlZCB0byBhIHBvaW50IGFuZCB0aGUgaGFuZCBpcyBjYXJyaWVkIHRvIHRoZQpuZWlnaGJvdXJob29kIG9mIHRoZSBtb250aCBvciBjaGVzdCwgdGhlbiByZWxheGVkCnBhbG0gZG93bndhcmRzIGFuZCBzbGlnaHRseSBhZHZhbmNlZC48L3RyYW5zbGF0aW9uPg=="
translation['11.6.97'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NyIgdW5pdD0ic2VjdGlvbiIgLz4gSXQgd2FzCndpdGggdGhpcyBnZXN0dXJlIHRoYXQgSSBiZWxpZXZlIERlbW9zdGhlbmVzIHRvCmhhdmUgY29tbWVuY2VkIHRoZSB0aW1pZCBhbmQgc3ViZHVlZCBleG9yZGl1bQpvZiBoaXMgc3BlZWNoIGluIGRlZmVuY2Ugb2YgQ3Rlc2lwaG9uLCBhbmQgaXQgd2FzLApJIHRoaW5rLCBpbiBzdWNoIGEgcG9zaXRpb24gdGhhdCBDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIEFyY2guPC9oaT4gaS4gMS48L25vdGU+IGhlbGQgaGlzCmxhbmQsIHdoZW4gaGUgc2FpZCwgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIEFyY2guPC9oaT4gaS4gMS48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5JZiBJIGhhdmUgYW55IHRhbGVudCwgdGhvdWdoCkkgYW0gY29uc2Npb3VzIGhvdyBsaXR0bGUgaXQgaXMuPC9xdW90ZT4gU2xpZ2h0bHkgZ3JlYXRlcgpmcmVlZG9tIG1heSBiZSBnaXZlbiB0byB0aGUgZ2VzdHVyZSBieSBwb2ludGluZwp0aGUgZmluZ2VycyBkb3duIGFuZCBkcmF3aW5nIHRoZSBoYW5kIGluIHRvd2FyZHMKdGhlIGJvZHkgYW5kIHRoZW4gb3BlbmluZyBpdCBzb21ld2hhdCBtb3JlIHJhcGlkbHkKaW4gdGhlIG9wcG9zaXRlIGRpcmVjdGlvbiwgc28gdGhhdCBpdCBzZWVtcyBhcyB0aG91Z2gKaXQgd2VyZSBkZWxpdmVyaW5nIG91ciB3b3JkcyB0byB0aGUgYXVkaWVuY2UuPC90cmFuc2xhdGlvbj4="
translation['11.6.98'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OCIgdW5pdD0ic2VjdGlvbiIgLz4KCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjI5NyIgLz4KClNvbWV0aW1lcyB3ZSBtYXkgaG9sZCB0aGUgZmlyc3QgdHdvIGZpbmdlcnMgYXBhcnQgd2l0aG91dCwKaG93ZXZlciwgaW5zZXJ0aW5nIHRoZSB0aHVtYiBiZXR3ZWVuIHRoZW0sIHRoZQpyZW1haW5pbmcgdHdvIHBvaW50aW5nIGlud2FyZHMsIHdoaWxlIGV2ZW4gdGhlIHR3bwpmb3JtZXIgbXVzdCBub3QgYmUgZnVsbHkgZXh0ZW5kZWQuPC90cmFuc2xhdGlvbj4="
translation['11.6.99'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OSIgdW5pdD0ic2VjdGlvbiIgLz4gU29tZXRpbWVzLAphZ2FpbiwgdGhlIHRoaXJkIGFuZCBsaXR0bGUgZmluZ2VyIG1heSBiZSBwcmVzc2VkIGluIHRvCnRoZSBwYWxtIG5lYXIgdGhlIGJhc2Ugb2YgdGhlIHRodW1iLCB3aGljaCBpbiBpdHMKdHVybiBpcyBwcmVzc2VkIGFnYWluc3QgdGhlIG1pZGRsZSBqb2ludHMgb2YgdGhlIGZpcnN0CmFuZCBtaWRkbGUgZmluZ2VyczsgYXQgb3RoZXJzIHRoZSBsaXR0bGUgZmluZ2VyIGlzCnNvbWV0aW1lcyBkcm9vcGVkIG9ibGlxdWVseSwgb3IgdGhlIGZvdXIgZmluZ2VycyBtYXkKYmUgcmVsYXhlZCByYXRoZXIgdGhhbiBleHRlbmRlZCBhbmQgdGhlIHRodW1iCnNsYW50ZWQgaW53YXJkczogdGhpcyBsYXN0IGdlc3R1cmUgaXMgd2VsbCBhZGFwdGVkIHRvCnBvaW50aW5nIHRvIG9uZSBzaWRlIG9yIG1hcmtpbmcgdGhlIGRpZmZlcmVudCBwb2ludHMKd2hpY2ggd2UgYXJlIG1ha2luZywgdGhlIGhhZCBiZWluZyBjYXJyaWVkIHBhbG11cHdhcmRzIHRvIHRoZSBsZWZ0IGFuZCBzd2VwdCBiYWNrIHRvIHRoZSByaWdodApmYWNlLWRvd253YXJkcy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.100'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDAiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBmb2xsb3dpbmcgc2hvcnQgZ2VzdHVyZXMgYXJlCmFsc28gZW1wbG95ZWQ6IHRoZSBoYW5kIG1heSBiZSBzbGlnaHRseSBob2xsb3dlZAphcyBpdCBpcyB3aGVuIHBlcnNvbnMgYXJlIG1ha2luZyBhIHZvdywgYW5kIHRoZW4KbW92ZWQgc2xpZ2h0bHkgdG8gYW5kIGZybywgdGhlIHNob3VsZGVycyBzd2F5aW5nCmdlbnRseSBpbiB1bmlzb246IHRoaXMgaXMgYWRhcHRlZCB0byBwYXNzYWdlcyB3aGVyZQp3ZSBzcGVhayB3aXRoIHJlc3RyYWludCBhbmQgYWxtb3N0IHdpdGggdGltaWRpdHkuCldvbmRlciBpcyBiZXN0IGV4cHJlc3NlZCBhcyBmb2xsb3dzOiB0aGUgaGFuZCB0dXJucwpzbGlnaHRseSB1cHdhcmRzIGFuZCB0aGUgZmluZ2VycyBhcmUgYnJvdWdodCBpbiB0bwp0aGUgcGFsbSwgb25lIGFmdGVyIHRoZSBvdGhlciwgYmVnaW5uaW5nIHdpdGggdGhlCmxpdHRsZSBmaW5nZXI7IHRoZSBoYW5kIGlzIHRoZW4gb3BlbmVkIGFuZCB0dXJuZWQKcm91bmQgYnkgYSByZXZlcnNhbCBvZiB0aGlzIG1vdGlvbi48L3RyYW5zbGF0aW9uPg=="
translation['11.6.101'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDEiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlIGFyZSB2YXJpb3VzCm1ldGhvZHMgb2YgZXhwcmVzc2luZyBpbnRlcnJvZ2F0aW9uOyBidXQsIGFzIGEgcnVsZSwKd2UgZG8gc28gYnkgYSB0dXJuIG9mIHRoZSBoYW5kLCB0aGUgYXJyYW5nZW1lbnQgb2YKdGhlIGZpbmdlcnMgYmVpbmcgaW5kaWZmZXJlbnQuIElmIHRoZSBmaXJzdCBmaW5nZXIKdG91Y2ggdGhlIG1pZGRsZSBvZiB0aGUgcmlnaHQtaGFuZCBlZGdlIG9mIHRoZQp0aHVtYi1uYWlsIHdpdGggaXRzIGV4dHJlbWl0eSwgdGhlIG90aGVyIGZpbmdlcnMKYmVpbmcgcmVsYXhlZCwgd2Ugc2hhbGwgaGF2ZSBhIGdyYWNlZnVsIGdlc3R1cmUgd2VsbApzdWl0ZWQgdG8gZXhwcmVzcyBhcHByb3ZhbCBvciB0byBhY2NvbXBhbnkgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3RhdGVtZW50cwpvZiBmYWN0cyw8L2hpPiBhbmQgdG8gbWFyayB0aGUgZGlzdGluY3Rpb24gYmV0d2VlbiBvdXIKZGlmZmVyZW50IHBvaW50cy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.102'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDIiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlIGlzIGFub3RoZXIgZ2VzdHVyZSBub3QgdW5saWtlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4yOTkiIC8+Cgp0aGUgcHJlY2VkaW5nLCBpbiB3aGljaCB0aGUgcmVtYWluaW5nIHRocmVlIGZpbmdlcnMKYXJlIGZvbGRlZDogaXQgaXMgbXVjaCBlbXBsb3llZCBieSB0aGUgR3JlZWtzIGJvdGgKZm9yIHRoZSBsZWZ0IGhhbmQgYW5kIHRoZSByaWdodCwgaW4gcm91bmRpbmcgb2ZmIHRoZWlyCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmVudGh5bWVtZXMsPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+UmhldG9yaWNhbCBvciBpbmNvbXBsZXRlIHN5bGxvZ2lzbXMuIEJ1dCBzZWUgVi4geC4gMi4KeGl2LiAxPC9ub3RlPiBkZXRhaWwgYnkgZGV0YWlsLiBBIGdlbnRsZSBtb3ZlbWVudCBvZgp0aGUgaGFuZCBleHByZXNzZXMgcHJvbWlzZSBvciBhc3NlbnQsIGEgbW9yZSB2aW9sZW50Cm1vdmVtZW50IHN1Z2dlc3RzIGV4aG9ydGF0aW9uIG9yIHNvbWV0aW1lcyBwcmFpc2UuClRoZXJlIGlzIGFsc28gdGhhdCBmYW1pbGlhciBnZXN0dXJlIGJ5IHdoaWNoIHdlIGRyaXZlCmhvbWUgb3VyIHdvcmRzLCBjb25zaXN0aW5nIGluIHRoZSByYXBpZCBvcGVuaW5nCmFuZCBzaHV0dGluZyBvZiB0aGUgaGFuZDogYnV0IHRoaXMgaXMgYSBjb21tb24KcmF0aGVyIHRoYW4gYW4gYXJ0aXN0aWMgZ2VzdHVyZS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.103'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDMiIHVuaXQ9InNlY3Rpb24iIC8+IEFnYWluLCB0aGVyZSBpcyB0aGUKc29tZXdoYXQgdW51c3VhbCBnZXN0dXJlIGluIHdoaWNoIHRoZSBoYW5kIGlzCmhvbGxvd2VkIGFuZCByYWlzZWQgd2VsbCBhYm92ZSB0aGUgc2hvdWxkZXIgd2l0aCBhCm1vdGlvbiBzdWdnZXN0aXZlIG9mIGV4aG9ydGF0aW9uLiBUaGUgdHJlbXVsb3VzCm1vdGlvbiBub3cgZ2VuZXJhbGx5IGFkb3B0ZWQgYnkgZm9yZWlnbiBzY2hvb2xzIGlzLApob3dldmVyLCBmaXQgb25seSBmb3IgdGhlIHN0YWdlLiBJIGRvIG5vdCBrbm93IHdoeQpzb21lIHBlcnNvbnMgZGlzYXBwcm92ZSBvZiB0aGUgbW92ZW1lbnQgb2YgdGhlCmZpbmdlcnMsIHdpdGggdGhlaXIgdG9wcyBjb252ZXJnaW5nLCB0b3dhcmRzIHRoZQptb3V0aC4gRm9yIHdlIGRvIHRoaXMgd2hlbiB3ZSBhcmUgc2xpZ2h0bHkgc3VycHJpc2VkLCBhbmQgYXQgdGltZXMgYWxzbyBlbXBsb3kgaXQgdG8gZXhwcmVzcyBmZWFyIG9yCmVudHJlYXR5IHdoZW4gd2UgYXJlIHNlaXplZCB3aXRoIHN1ZGRlbiBpbmRpZ25hdGlvbi4KPC90cmFuc2xhdGlvbj4="
translation['11.6.104'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDQiIHVuaXQ9InNlY3Rpb24iIC8+RnVydGhlciwgd2Ugc29tZXRpbWVzIGNsZW5jaCB0aGUgaGFuZCBhbmQgcHJlc3MKaXQgdG8gb3VyIGJyZWFzdCB3aGVuIHdlIGFyZSBleHByZXNzaW5nIHJlZ3JldCBvcgphbmdlciwgYW4gb2NjYXNpb24gd2hlbiBpdCBpcyBub3QgdW5iZWNvbWluZyBldmVuCnRvIGZvcmNlIHRoZSB2b2ljZSB0aHJvdWdoIHRoZSB0ZWV0aCBpbiBwaHJhc2VzIHN1Y2gKYXMgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hhdCBzaGFsbCBJIGRvIG5vdz88L3F1b3RlPiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IHdvdWxkIHlvdSBkbz88L3F1b3RlPgpUbyBwb2ludCBhdCBzb21ldGhpbmcgd2l0aCB0aGUgdGh1bWIgdHVybmVkIGJhY2sKaXMgYSBnZXN0dXJlIHdoaWNoIGlzIGluIGdlbmVyYWwganVzdCwgYnV0IGlzIG5vdCwgaW4gbXkKb3BpbmlvbiwgYmVjb21pbmcgdG8gYW4gb3JhdG9yLjwvdHJhbnNsYXRpb24+"
translation['11.6.105'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDUiIHVuaXQ9InNlY3Rpb24iIC8+IE1vdGlvbiBpcyBnZW5lcmFsbHkKZGl2aWRlZCBpbnRvIHNpeCBraW5kcywgYnV0IGNpcmN1bGFyIG1vdGlvbiBtdXN0IGJlCnJlZ2FyZGVkIGFzIGEgc2V2ZW50aC4gVGhlIGxhdHRlciBhbG9uZSBpcyBmYXVsdHkKd2hlbiBhcHBsaWVkIHRvIGdlc3R1cmUuIFRoZSByZW1haW5pbmcgbW90aW9uc+KAlAp0aGF0IGlzLCBmb3J3YXJkLCB0byByaWdodCBvciBsZWZ0IGFuZCB1cCBvciBkb3du4oCUYWxsCmhhdmUgdGhlaXIgc2lnbmlmaWNhbmNlLCBidXQgdGhlIGdlc3R1cmUgaXMgbmV2ZXIKZGlyZWN0ZWQgdG8gd2hhdCBsaWVzIGJlaGluZCB1cywgdGhvdWdoIHdlIGRvIGF0Cgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4zMDEiIC8+Cgp0aW1lcyB0aHJvdyB0aGUgaGFuZCBiYWNrLjwvdHJhbnNsYXRpb24+"
translation['11.6.106'] = ""
translation['11.6.107'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDciIHVuaXQ9InNlY3Rpb24iIC8+IFNvbWUsIHRocm91Z2ggZXhjZXNzIG9mIHN1YnRsZXR5LApoYXZlIGVycm9uZW91c2x5IHByZXNjcmliZWQgdGhhdCB0aGVyZSBzaG91bGQgYmUgYW4KaW50ZXJ2YWwgb2YgdGhyZWUgd29yZHMgYmV0d2VlbiBlYWNoIG1vdmVtZW50OwpidXQgdGhpcyBydWxlIGlzIG5ldmVyIG9ic2VydmVkLCBub3IgY2FuIGl0IGJlLiBUaGVzZQpwZXJzb25zLCBob3dldmVyLCB3ZXJlIGRlc2lyb3VzIHRoYXQgdGhlcmUgc2hvdWxkIGJlCnNvbWUgc3RhbmRhcmQgb2Ygc3BlZWQgb3Igc2xvd25lc3MgKGEgbW9zdCByYXRpb25hbApkZXNpcmUpLCB3aXRoIGEgdmlldyB0byBhdm9pZCBwcm9sb25nZWQgaW5hY3Rpdml0eSBvbgp0aGUgcGFydCBvZiB0aGUgaGFuZHMgYXMgd2VsbCBhcyB0aGUgb3Bwb3NpdGUgZmF1bHQsCmludG8gd2hpY2ggc28gbWFueSBmYWxsLCBvZiBicmVha2luZyB1cCB0aGUgbmF0dXJhbApmbG93IG9mIHRoZWlyIGRlbGl2ZXJ5IGJ5IGNvbnRpbnVhbCBtb3Rpb24uPC90cmFuc2xhdGlvbj4="
translation['11.6.108'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDgiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlIGlzCmFub3RoZXIgc3RpbGwgbW9yZSBjb21tb24gZXJyb3IsIHdoaWNoIGlzIGxlc3MgZWFzeQpvZiBkZXRlY3Rpb24uIExhbmd1YWdlIHBvc3Nlc3NlcyBjZXJ0YWluIGltcGVyY2VwdGlibGUgc3RyZXNzZXMsIGluZGVlZCB3ZSBtaWdodCBhbG1vc3QgY2FsbCB0aGVtCmZlZXQsIHRvIHdoaWNoIHRoZSBnZXN0dXJlIG9mIG1vc3Qgc3BlYWtlcnMgY29uZm9ybXMuClRodXMgdGhlcmUgd2lsbCBoZSBvbmUgbW92ZW1lbnQgYXQgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+bm92dW0gY3JpbWVuLDwvaGk+CmFub3RoZXIgYXQgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+R2lhaSBDYWVzYXIsPC9oaT4gYSB0aGlyZCBhdCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5ldCBhbnRlIGRpZW0sPC9oaT4KYSBmb3VydGggYXQgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+bm9uIGF1ZGl0dW0sPC9oaT4gYSBmaWZ0aCBhdCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm9waW5xdXVzIG1ldXMsPC9oaT4gYQpzaXh0aCBhdCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5hZCB0ZTwvaGk+IGFuZCBvdGhlcnMgYXQgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+UXVpbnR1cyBUdWJlcm88L2hpPiBhbmQKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGV0dWxpdC48L2hpPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gTGlnLjwvaGk+IGkuIDEuIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkl0IGlzIGEgbmV3IGNoYXJnZSwgR2FpdXMgQ2Flc2FyLCBhCmNoYXJ0Z28gaGl0aGVydG8sIHVuaGVhcmQgb2YsIHRoYXQgbXkga2luc21hbiwgUXVpbnR1cyBUdWJlcm8sCmhhcyBicm91Z2h0IHRvIHlvdXIgbm90aWNlLjwvcXVvdGU+PC9ub3RlPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBMaWcuPC9oaT4gaS4gMS4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SXQgaXMgYSBuZXcgY2hhcmdlLCBHYWl1cyBDYWVzYXIsIGEKY2hhcnRnbyBoaXRoZXJ0bywgdW5oZWFyZCBvZiwgdGhhdCBteSBraW5zbWFuLCBRdWludHVzIFR1YmVybywKaGFzIGJyb3VnaHQgdG8geW91ciBub3RpY2UuPC9xdW90ZT48L3RyYW5zbGF0aW9uPg=="
translation['11.6.109'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDkiIHVuaXQ9InNlY3Rpb24iIC8+IEZyb20gdGhpcyBzcHJpbmdzIGEgZnVydGhlciBlcnJvciwgbmFtZWx5LAp0aGF0IHlvdW5nIG1lbiwgd2hlbiB3cml0aW5nIG91dCB0aGVpciBzcGVlY2hlcywKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjMwMyIgLz4KCmRldmlzZSBhbGwgdGhlaXIgZ2VzdHVyZXMgaW4gYWR2YW5jZSBhbmQgY29uc2lkZXIgYXMKdGhleSBjb21wb3NlIGhvdyB0aGUgaGFuZCBpcyB0byBmYWxsIGF0IGVhY2gKcGFydGljdWxhciBwb2ludC4gQSBmdXJ0aGVyIHVuZm9ydHVuYXRlIHJlc3VsdCBpcwp0aGF0IHRoZSBtb3ZlbWVudCBvZiB0aGUgaGFuZCwgd2hpY2ggc2hvdWxkIGVuZApvbiB0aGUgcmlnaHQsIGZyZXF1ZW50bHkgZmluaXNoZXMgb24gdGhlIGxlZnQuPC90cmFuc2xhdGlvbj4="
translation['11.6.110'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTAiIHVuaXQ9InNlY3Rpb24iIC8+IEl0IGlzCnRoZXJlZm9yZSBiZXR0ZXIsIGluIHZpZXcgb2YgdGhlIGZhY3QgdGhhdCBhbGwgc3BlZWNoCmZhbGxzIGludG8gYSBudW1iZXIgb2YgYnJpZWYgY2xhdXNlcywgYXQgdGhlIGVuZCBvZgp3aGljaCB3ZSBjYW4gdGFrZSBicmVhdGgsIGlmIG5lY2Vzc2FyeSwgdG8gYXJyYW5nZQpvdXIgZ2VzdHVyZSB0byBzdWl0IHRoZXNlIHNlY3Rpb25zLiBGb3IgZXhhbXBsZSwgdGhlCndvcmRzIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPm5vdnVtIGNyaW1lcywgR2FpIENhZXNhciw8L2hpPiBpbiBhIHNlbnNlIGZvcm0gYQpwaHJhc2UgY29tcGxldGUgaW4gaXRzZWxmLCBzaW5jZSB0aGV5IGFyZSBmb2xsb3dlZCBieQphIGNvbmp1bmN0aW9uLCB3aGlsZSB0aGUgbmV4dCB3b3JkcywgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZXQgYW50ZSBoYW5jIGRpZW0Kbm9uIGF1ZGl0dW0sPC9oaT4gYXJlIGFsc28gc3VmZmljaWVudGx5IHNlbGYtY29udGFpbmVkLiBUbwp0aGVzZSBwaHJhc2VzIHRoZSBtb3Rpb25zIG9mIHRoZSBoYW5kIG11c3QgYmUgY29uZm9ybWVkLCBiZWZvcmUgdGhlIHNwZWVjaCBoYXMgcGFzc2VkIGJleW9uZCB0aGUKY2FsbW5lc3Mgb2YgdG9uZSBvbiB3aGljaCBpdCBvcGVucy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.111'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTEiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCB3aGVuIGluY3JlYXNpbmcgd2FybXRoIG9mIGZlZWxpbmcgaGFzIGZpcmVkIHRoZSBvcmF0b3IsIHRoZQpnZXN0dXJlIHdpbGwgYmVjb21lIG1vcmUgZnJlcXVlbnQsIGluIGtlZXBpbmcgd2l0aAp0aGUgaW1wZXR1cyBvZiB0aGUgc3BlZWNoLiBTb21lIHBsYWNlcyBhcmUgYmVzdApzdWl0ZWQgYnkgYSByYXBpZCwgYW5kIG90aGVycyBieSBhIHJlc3RyYWluZWQgZGVsaXZlcnkuCkluIHRoZSBvbmUgY2FzZSB3ZSBwYXNzIHJhcGlkbHkgb24sIGZpcmUgYSB2b2xsZXkgb2YKYXJndW1lbnRzIGFuZCBodXJyeSB1cG9uIG91ciB3YXk7IGluIHRoZSBvdGhlciwgd2UKZHJpdmUgaG9tZSBvdXIgcG9pbnRzLCBmb3JjZSB0aGVtIG9uIHRoZSBoZWFyZXIgYW5kCmltcGxhbnQgdGhlbSBpbiBoaXMgbWluZC4gQnV0IHRoZSBzbG93ZXIgdGhlCmRlbGl2ZXJ5LCB0aGUgZ3JlYXRlciBpdHMgZW1vdGlvbmFsIHBvd2VyOiB0aHVzLApSb3NpbnMgd2FzIHJhcGlkIGFuZCBFU09QcyB3ZWlnaHR5IGluIGhpcyBkZWxpdmVyeSwKYmVjYXVzZSB0aGUgZm9ybWVyIHdhcyBhIGNvbWljIGFuZCB0aGUgbGF0dGVyIGEKdHJhZ2ljIGFjdG9yLjwvdHJhbnNsYXRpb24+"
translation['11.6.112'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTIiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBzYW1lIHJ1bGUgYXBwbGllcyB0byB0aGUgbW92ZW1pbnRzLiBDb25zZXF1ZW50bHkgb24gdGhlIHN0YWdlIHlvdW5nIG1lbiBhbmQKb2xkLCBzb2xkaWVycyBhbmQgbWFycmllZCB3b21lbiBhbGwgd2FsayBzZWRhdGVseSwKd2hpbGUgc2xhdmVzLCBtYWlkc2VydmFudHMsIHBhcmFzaXRlcyBhbmQgZmlzaGVybWVuCmFyZSBtb3JlIGxpdmVseSBpbiB0aGVpciBtb3ZlbWVudHMuIEJ1dCBpbnN0cnVjdG9ycwppbiB0aGUgYXJ0IG9mIGdlc3R1cmUgd2lsbCBub3QgcGVybWl0IHRoZSBoYW5kIHRvIGJlCnJhaXNlZCBhYm92ZSB0aGUgbGV2ZWwgb2YgdGhlIGV5ZXMgb3IgbG93ZXJlZCBiZW5lYXRoCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4zMDUiIC8+Cgp0aGF0IG9mIHRoZSBicmVhc3Q7IHNpbmNlIGl0IGlzIHRob3VnaHQgYSBncmF2ZSBibGVtaXNoCnRvIGxpZnQgaXQgdG8gdGhlIHRvcCBvZiB0aGUgaGVhZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGUgZ2VuZXJhbCBzZW5zZSBpcyBjbGVhciwgdGhvdWdoIHRoZSB0ZXh0IGlzIHVuc2V0c2ZhY3RvcnkgYW5kIHNjYXJjZWx5IHRyYW5zbGF0YWJsZS48L25vdGU+IG9yIGxvd2VyIGl0IHRvIHRoZSBsb3dlcgpwb3J0aW9ucyBvZiB0aGUgYmVsbHkuPC90cmFuc2xhdGlvbj4="
translation['11.6.113'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTMiIHVuaXQ9InNlY3Rpb24iIC8+IEl0IG1heSBiZSBtb3ZlZCB0byB0aGUgbGVmdAp3aXRoaW4gdGhlIGxpbWl0cyBvZiB0aGUgc2hvdWxkZXIsIGJ1dCBubyBmdXJ0aGVyCndpdGhvdXQgbG9zcyBvZiBkZWNvcnVtLiBPbiB0aGUgb3RoZXIgaGFuZCwgd2hlbiwKdG8gZXhwcmVzcyBvdXIgYXZlcnNpb24sIHdlIHRocnVzdCBvdXIgaGFuZCBvdXQgdG8KdGhlIGxlZnQsIHRoZSBsZWZ0IHNob3VsZGVyIG11c3QgYmUgYnJvdWdodCBmb3J3YXJkCmluIHVuaXNvbiB3aXRoIHRoZSBoZWFkLCB3aGljaCB3aWxsIGluY2xpbmUgdG8gdGhlCnJpZ2h0LjwvdHJhbnNsYXRpb24+"
translation['11.6.114'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTQiIHVuaXQ9InNlY3Rpb24iIC8+IEl0IGlzIG5ldmVyIGNvcnJlY3QgdG8gZW1wbG95IHRoZSBsZWZ0IGhhbmQKYWxvbmUgaW4gZ2VzdHVyZSwgdGhvdWdoIGl0IHdpbGwgb2Z0ZW4gY29uZm9ybSBpdHMKbW90aW9uIHRvIHRoYXQgb2YgdGhlIHJpZ2h0LCBhcywgZm9yIGV4YW1wbGUsIHdoZW4Kd2UgYXJlIGNvdW50aW5nIG91ciBhcmd1bWVudHMgb24gdGhlIGZpbmdlcnMsIG9yCnR1cm4gdGhlIHBhbG1zIG9mIHRoZSBoYW5kcyB0byB0aGUgbGVmdCB0byBleHByZXNzCm91ciBob3Jyb3Igb2Ygc29tZXRoaW5nLDwvdHJhbnNsYXRpb24+"
translation['11.6.115'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTUiIHVuaXQ9InNlY3Rpb24iIC8+IG9yIHRocnVzdCB0aGVtIG91dCBpbiBmcm9udApvciBzcHJlYWQgdGhlbSBvdXQgdG8gcmlnaHQgYW5kIGxlZnQsIG9yIGxvd2VyIHRoZW0gaW4KYXBvbG9neSBvciBzdXBwbGljYXRpb24gKHRob3VnaCB0aGUgZ2VzdHVyZSBpcyBub3QKdGhlIHNhbWUgaW4gdGhlc2UgdHdvIGNhc2VzKSwgb3IgcmFpc2UgdGhlbSBpbiBhZG9yYXRpb24sIG9yIHN0cmV0Y2ggdGhlbSBvdXQgaW4gZGVtb25zdHJhdGlvbiBvciBpbnZvY2F0aW9uLCBhcyBpbiB0aGUgcGFzc2FnZSwgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWUgaGlsbHMgYW5kIGdyb3ZlcyBvZiBBbGJhLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gTWlsLjwvaGk+IHh4eGkuIDg1Ljwvbm90ZT48L3F1b3RlPgpvciBpbiB0aGUgcGFzc2FnZSBmcm9tIEdyYWNjaHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBNaWwuPC9oaT4geHh4aS4gODUuPC9ub3RlPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBNaWwuPC9oaT4geHh4aS4gODUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5DaWMuPC9oaT4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gSUlJLiBsdmkuIDIxNC48L25vdGU+OiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5DaWMuPC9oaT4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gSUlJLiBsdmkuIDIxNC48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGl0aGVyLCBhbGFzIQpzaGFsbCBJIHR1cm4gbWU/IFRvIHRoZSBDYXBpdG9sPyBOYXksIGl0IGlzIHdldAp3aXRoIG15IGJyb3RoZXIncyBibG9vZC4gVG8gbXkgaG9tZT88L3F1b3RlPiBldGMuPC90cmFuc2xhdGlvbj4="
translation['11.6.116'] = ""
translation['11.6.117'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTciIHVuaXQ9InNlY3Rpb24iIC8+SXQgaXMgZGVzaXJhYmxlIGFsc28gdGhhdCBJIHNob3VsZCBtZW50aW9uIHRoZSBmYXVsdHMKaW4gdGhlIHVzZSBvZiB0aGUgaGFuZHMsIGludG8gd2hpY2ggZXZlbiBleHBlcmllbmNlZApwbGVhZGVycyBhcmUgbGlhYmxlIHRvIGZhbGwuIEFzIGZvciB0aGUgZ2VzdHVyZSBvZgpkZW1hbmRpbmcgYSBjdXAsIHRocmVhdGVuaW5nIGEgZmxvZ2dpbmcsIG9yIGluZGljYXRpbmcKdGhlIG51bWJlciA1MDAgYnkgY3Jvb2tpbmcgdGhlIHRodW1iLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5MZS48L2hpPiBjcm9va2luZyB0aGUgdGh1bWIgYWdhaW5zdCB0aGUgZm9yZWZpbmdlciB0bwpyZXByZXNlbnQgdGhlIHN5bWJvbCBELjwvbm90ZT4gYWxsIG9mIHdoaWNoCmFyZSByZWNvcmRlZCBieSB3cml0ZXJzIG9uIHRoZSBzdWJqZWN0LCBJIGhhdmUgbmV2ZXIKCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkxlLjwvaGk+IGNyb29raW5nIHRoZSB0aHVtYiBhZ2FpbnN0IHRoZSBmb3JlZmluZ2VyIHRvCnJlcHJlc2VudCB0aGUgc3ltYm9sIEQuPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzA3IiAvPgoKc2VlbiB0aGVtIGVtcGxveWVkIGV2ZW4gYnkgdW5lZHVjYXRlZCBydXN0aWNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.118'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTgiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IEkga25vdyB0aGF0IGl0IGlzIG9mIGZyZXF1ZW50IG9jY3VycmVuY2UgZm9yIGEKc3BlYWtlciB0byBleHBvc2UgaGlzIHNpZGUgYnkgc3RyZXRjaGluZyBoaXMgYXJtIHRvbwpmYXIsIHRvIGJlIGFmcmFpZCBpbiBvbmUgY2FzZSBvZiBleHRlbmRpbmcgaGlzIGhhbmQKYmV5b25kIHRoZSBmb2xkcyBvZiBoaXMgY2xvYWssIGFuZCBpbiBhbm90aGVyIHRvCnN0cmV0Y2ggaXQgYXMgZmFyIGFzIGl0IHdpbGwgZ28sIHRvIHJhaXNlIGl0IHRvIHRoZSByb29mLApvciBieSBzd2luZ2luZyBpdCByZXBlYXRlZGx5IG92ZXIgaGlzIGxlZnQgc2hvdWxkZXIgdG8KZGVsaXZlciBzdWNoIGEgcmFpbiBvZiBibG93cyB0byB0aGUgcmVhciB0aGF0IGl0IGlzCnNjYXJjZWx5IHNhZmUgdG8gc3RhbmQgYmVoaW5kIGhpbSwgb3IgdG8gbWFrZSBhIGNpcmN1bGFyCnN3ZWVwIHRvIHRoZSBsZWZ0LCBvciBieSBjYXN0aW5nIG91dCBoaXMgaGFuZCBhdApyYW5kb20gdG8gc3RyaWtlIHRoZSBzdGFuZGVycy1ieSBvciB0byBmbGFwIGJvdGgKZWxib3dzIGFnYWluc3QgaGlzIHNpZGVzLjwvdHJhbnNsYXRpb24+"
translation['11.6.119'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTkiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlIGFyZSBvdGhlcnMsIGFnYWluLAp3aG9zZSBoYW5kcyBhcmUgc2x1Z2dpc2ggb3IgdHJlbXVsb3VzIG9yIGluY2xpbmVkIHRvCnNhdyB0aGUgYWlyOyBzb21ldGltZXMsIHRvbywgdGhlIGZpbmdlcnMgYXJlIGNyb29rZWQKYW5kIGJyb3VnaHQgZG93biB3aXRoIGEgcnVuIGZyb20gdGhlIHRvcCBvZiB0aGUKaGVhZCwgb3IgdG9zc2VkIHVwIGludG8gdGhlIGFpciB3aXRoIHRoZSBoYW5kIHR1cm5lZApwYWxtIHVwd2FyZHMuIFRoZXJlIGlzIGFsc28gYSBnZXN0dXJlLCB3aGljaCBjb25zaXN0cyBpbiBpbmNsaW5pbmcgdGhlIGhlYWQgdG8gdGhlIHJpZ2h0IHNob3VsZGVyLApzdHJldGNoaW5nIG91dCB0aGUgYXJtIGZyb20gdGhlIGVhciBhbmQgZXh0ZW5kaW5nCnRoZSBoYW5kIHdpdGggdGhlIHRodW1iIHR1cm5lZCBkb3duLiBUaGlzIGlzIGEKc3BlY2lhbCBmYXZvdXJpdGUgd2l0aCB0aG9zZSB3aG8gYm9hc3QgdGhhdCB0aGV5CnNwZWFrIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPndpdGggdXBsaWZ0ZWQgaGFuZC48L3F1b3RlPjwvdHJhbnNsYXRpb24+"
translation['11.6.120'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjAiIHVuaXQ9InNlY3Rpb24iIC8+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkkuZS48L2hpPiB3aXRoIGV4YWdnZXJhdGVkIHZpb2xlbmNlLiBTZWUgSUkuIHhpaS4gOS48L25vdGU+IFRvIHRoZXNlIGxhdHRlciB3ZSBtYXkKYWRkIHRob3NlIHNwZWFrZXJzIHdobyBodXJsIHF1aXZlcmluZyBlcGlncmFtcwp3aXRoIHRoZWlyIGZpbmdlcnMgb3IgZGVub3VuY2Ugd2l0aCB0aGUgaGFuZCB1cHJhaXNlZCwgb3IgcmlzZSBvbiB0aXB0b2UsIHdoZW5ldmVyIHRoZXkgc2F5IHNvbWV0aGluZwpvZiB3aGljaCB0aGV5IGFyZSBzcGVjaWFsbHkgcHJvdWQuIFRoaXMgbGFzdCBwcm9jZWVkaW5nIG1heSBhdCB0aW1lcyBiZSBhZG9wdGVkIGJ5IGl0c2VsZjsgYnV0IHRoZXkKY29udmVydCBpdCBpbnRvIGEgYmxlbWlzaCBieSBzaW11bHRhbmVvdXNseSByYWlzaW5nCm9uZSBvciBldmVuIHR3byBmaW5nZXJzIGFzIGhpZ2ggYXMgdGhleSBjYW4gcmVhY2gsIG9yCmhlYXZpbmcgdXAgYm90aCBoYW5kcyBhcyBpZiB0aGV5IHdlcmUgY2Fycnlpbmcgc29tZXRoaW5nLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkkuZS48L2hpPiB3aXRoIGV4YWdnZXJhdGVkIHZpb2xlbmNlLiBTZWUgSUkuIHhpaS4gOS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.121'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjEiIHVuaXQ9InNlY3Rpb24iIC8+IEluIGFkZGl0aW9uIHRvIHRoZXNlIGZhdWx0cywgdGhlcmUgYXJlIHRob3NlCndoaWNoIHNwcmluZyBub3QgZnJvbSBuYXR1cmUsIGJ1dCBmcm9tIG5lcnZvdXNuZXNzLApzdWNoIGFzIHN0cnVnZ2xpbmcgZGVzcGVyYXRlbHkgd2l0aCBvdXIgbGlwcyB3aGVuCnRoZXkgcmVmdXNlIHRvIG9wZW4sIG1ha2luZyBpbmFydGljdWxhdGUgc291bmRzLCBhcwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzA5IiAvPgoKdGhvdWdoIHNvbWV0aGluZyB3ZXJlIHN0aWNraW5nIGluIG91ciB0aHJvYXQsIHdoZW4Kb3VyIG1lbW9yeSBmYWlscyB1cywgb3Igb3VyIHRob3VnaHRzIHdpbGwgbm90IGNvbWUKYXQgb3VyIGNhbGw7IHJ1YmJpbmcgdGhlIGVuZCBvZiBvdXIgbm9zZSwgd2Fsa2luZyB1cAphbmQgZG93biBpbiB0aGUgbWlkc3Qgb2YgYW4gdW5maW5pc2hlZCBzZW50ZW5jZSwKc3RvcHBpbmcgc3VkZGVubHkgYW5kIGNvdXJ0aW5nIGFwcGxhdXNlIGJ5IHNpbGVuY2UsCndpdGggbWFueSBvdGhlciB0cmlja3Mgd2hpY2ggaXQgd291bGQgdGFrZSB0b28gbG9uZwp0byBkZXRhaWwsIHNpbmNlIGV2ZXJ5Ym9keSBoYXMgaGlzIG93biBwYXJ0aWN1bGFyCmZhdWx0cy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.122'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjIiIHVuaXQ9InNlY3Rpb24iIC8+IFdlIG11c3QgdGFrZSBjYXJlIG5vdCB0byBwcm90cnVkZSB0aGUgY2hlc3QKb3Igc3RvbWFjaCwgc2luY2Ugc3VjaCBhbiBhbHRpdHVkZSBhcmNoZXMgdGhlIGJhY2ssCmFuZCBhbGwgYmVuZGluZyBiYWNrd2FyZHMgaXMgdW5zaWdodGx5LiBUaGUgZmxhbmtzCm11c3QgY29uZm9ybSB0byB0aGUgZ2VzdHVyZTsgZm9yIHRoZSBtb3Rpb24gb2YgdGhlCmVudGlyZSBib2R5IGNvbnRyaWJ1dGVzIHRvIHRoZSBlZmZlY3Q6IGluZGVlZCwgQ2ljZXJvCmhvbGRzIHRoYXQgdGhlIGJvZHkgaXMgbW9yZSBleHByZXNzaXZlIHRoYW4gZXZlbiB0aGUKaGFuZHMuIEZvciBpbiB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3JhdG9yPC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+eHZpaWkuIDU5Ljwvbm90ZT4gaGUgc2F5cywgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlcmUgbXVzdApiZSBubyBxdWljayBtb3ZlbWVudHMgb2YgdGhlIGZpbmdlcnMsIG5vIG1hcmtpbmcKdGltZSB3aXRoIHRoZSBmaW5nZXItdGlwcywgYnV0IHRoZSBvcmF0b3Igc2hvdWxkCmNvbnRyb2wgaGltc2VsZiBieSB0aGUgcG9pc2Ugb2YgdGhlIHdob2xlIHRydW5rIGFuZApieSBhIG1hbmx5IGluY2xpbmF0aW9uIG9mIHRoZSBzaWRlLjwvcXVvdGU+PC90cmFuc2xhdGlvbj4="
translation['11.6.123'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjMiIHVuaXQ9InNlY3Rpb24iIC8+IFNsYXBwaW5nIHRoZQp0aGlnaCwgd2hpY2ggQ2xlYW4gaXMgc2FpZCB0byBoYXZlIGJlZW4gdGhlIGZpcnN0IHRvCmludHJvZHVjZSBhdCBBdGhlbnMsIGlzIGluIGdlbmVyYWwgdXNlIGFuZCBpcyBiZWNvbWluZwphcyBhIG1hcmsgb2YgaW5kaWduYXRpb24sIHdoaWxlIGl0IGFsc28gZXhjaXRlcyB0aGUKYXVkaWVuY2UuIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5CcnV0LjwvaGk+IGxheC4gMjc4Ljwvbm90ZT4gcmVncmV0cyBpdHMgYWJzZW5jZSBpbiBDYWxpZGl1cywKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QnJ1dC48L2hpPiBsYXguIDI3OC48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVyZSB3YXMgbm8gc3RyaWtpbmcgb2YgdGhlIGZvcmVoZWFkLDwvcXVvdGU+IGhlIGNvbXBsYWlucywgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+bm9yIG9mIHRoZSB0aGlnaC48L3F1b3RlPiBXaXRoIHJlZ2FyZCB0byB0aGUKZm9yZWhlYWQgSSBtdXN0IGJlZyBsZWF2ZSB0byBkaWZmZXIgZnJvbSBoaW06IGZvciBpdAppcyBhIHB1cmVseSB0aGVhdHJpY2FsIHRyaWNrIGV2ZW4gdG8gY2xhcCB0aGUgaGFuZHMgb3IKYmVhdCB0aGUgYnJlYXN0LjwvdHJhbnNsYXRpb24+"
translation['11.6.124'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjQiIHVuaXQ9InNlY3Rpb24iIC8+IGl0IGlzIG9ubHkgb24gcmFyZSBvY2Nhc2lvbnMsIHRvbywKdGhhdCBpdCBpcyBiZWNvbWluZyB0byB0b3VjaCB0aGUgYnJlYXN0IHdpdGggdGhlCmZpbmdlci10aXBzIG9mIHRoZSBob2xsb3dlZCBoYW5kLCB3aGVuLCBmb3IgZXhhbXBsZSwKd2UgYWRkcmVzcyBvdXJzZWx2ZXMgb3Igc3BlYWsgd29yZHMgb2YgZXhob3J0YXRpb24sCnJlcHJvYWNoIG9yIGNvbW1pc2VyYXRpb24uIEJ1dCBpZiBldmVyIHdlIGRvIGVtcGxveQp0aGlzIGdlc3R1cmUsIGl0IHdpbGwgbm90IGJlIHVuYmVjb21pbmcgdG8gcHVsbCBiYWNrCnRoZSB0b2dhIGF0IHRoZSBzYW1lIHRpbWUuIEFzIHJlZ2FyZHMgdGhlIGZlZXQsIHdlCm5lZWQgdG8gYmUgY2FyZWZ1bCBhYm91dCBvdXIgZ2FpdCBhbmQgdGhlIGF0dGl0dWRlcwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzExIiAvPgoKaW4gd2hpY2ggd2Ugc3RhbmQuIFRvIHN0YW5kIHdpdGggdGhlIHJpZ2h0IGZvb3QKYWR2YW5jZWQgb3IgdG8gdGhydXN0IGZvcndhcmQgdGhlIHNhbWUgZm9vdCBhbmQKaGFuZCBhcmUgYWxpa2UgdW5zaWdodGx5LjwvdHJhbnNsYXRpb24+"
translation['11.6.125'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjUiIHVuaXQ9InNlY3Rpb24iIC8+IEF0IHRpbWVzIHdlIG1heSByZXN0IG91cgp3ZWlnaHQgb24gdGhlIHJpZ2h0IGZvb3QsIGJ1dCB3aXRob3V0IGFueSBjb3JyZXNwb25kaW5nIGluY2xpbmF0aW9uIG9mIHRoZSBjaGVzdCwgd2hpbGUsIGluIGFueSBjYXNlLAp0aGUgZ2VzdHVyZSBpcyBiZXR0ZXIgc3VpdGVkIHRvIHRoZSBjb21pYyBhY3RvciB0aGFuIHRvCnRoZSBvcmF0b3IuIEl0IGlzIGFsc28gYSBtaXN0YWtlLCB3aGVuIHJlc3Rpbmcgb24gdGhlCmxlZnQgZm9vdCwgdG8gbGlmdCB0aGUgcmlnaHQgb3IgcG9pc2UgaXQgb24gdGlwdG9lLiBUbwpzdHJhZGRsZSB0aGUgZmVldCBpcyB1Z2x5IGlmIHdlIGFyZSBzdGFuZGluZyBzdGlsbCwgYW5kCmFsbW9zdCBpbmRlY2VudCBpZiB3ZSBhcmUgYWN0dWFsbHkgbW92aW5nLiBUbyBzdGFydApmb3J3YXJkIG1heSBiZSBlZmZlY3RpdmUsIHByb3ZpZGVkIHRoYXQgd2UgbW92ZSBidXQKYSBzaG9ydCBkaXN0YW5jZSBhbmQgZG8gc28gYnV0IHJhcmVseSBhbmQgd2l0aG91dAp2aW9sZW5jZS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.126'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjYiIHVuaXQ9InNlY3Rpb24iIC8+IEl0IHdpbGwgYWxzbyBhdCB0aW1lcyBiZSBmb3VuZCBjb252ZW5pZW50CnRvIHdhbGsgdG8gYW5kIGZybywgb3dpbmcgdG8gdGhlIGV4dHJhdmFnYW50IHBhdXNlcwppbXBvc2VkIGJ5IHRoZSBwbGF1ZGl0cyBvZiB0aGUgYXVkaWVuY2U7IENpY2Vybyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T3JhdC48L2hpPiB4dmlpaS4gNTkuPC9ub3RlPgpob3dldmVyLCBzYXlzIHRoYXQgdGhpcyBzaG91bGQgYmUgZG9uZSBvbmx5IG9uIHJhcmUKb2NjYXNpb25zLCBhbmQgdGhhdCB3ZSBzaG91bGQgdGFrZSBub3QgbW9yZSB0aGFuIGEKZmV3IHN0ZXBzLiBPbiB0aGUgb3RoZXIgaGFuZCwgdG8gcnVuIHVwIGFuZCBkb3duLAp3aGljaCwgaW4gdGhlIGVhc2Ugb2YgTWFubGl1cyBTdXJlLDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPk9yYXQuPC9oaT4geHZpaWkuIDU5Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgVkkuIGlpaS4gNTQuPC9ub3RlPiBEb21pdGl1cyBBZmVyCmNhbGxlZCBvdmVyZG9pbmcgaXQsIGlzIHNoZWVyIGZvbGx5LCBhbmQgdGhlcmUgd2FzIG5vCmxpdHRsZSB3aXQgaW4gdGhlIHF1ZXN0aW9uIHB1dCBieSBWaXJnaW5pYXMgRmxhdHVzIHRvCmEgcml2YWwgcHJvZmVzc29yLCB3aGVuIGhlIGFza2VkIGhvdyBtYW55IG1pbGVzIGhlCmhhZCBkZWNsYWltZWQuPC90cmFuc2xhdGlvbj4="
translation['11.6.127'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjciIHVuaXQ9InNlY3Rpb24iIC8+IEkga25vdywgdG9vLCB0aGF0IHNvbWUgYXV0aG9yaXRpZXMKd2FybiB1cyBub3QgdG8gd2FsayB3aXRoIG91ciBiYWNrcyB0dXJuZWQgdG8gdGhlCmp1ZGdlcywgYnV0IHRvIG1vdmUgZGlhZ29uYWxseSBhbmQga2VlcCBvdXIgZXllcwpmaXhlZCBvbiB0aGUgcGFuZWwuIFRoaXMgY2Fubm90IGJlIGRvbmUgaW4gcHJpdmF0ZQp0cmlhbHMsIGJ1dCBpbiBzdWNoIGNhc2VzIHRoZSBzcGFjZSBhdmFpbGFibGUgaXMgc21hbGwKYW5kIHRoZSB0aW1lIGR1cmluZyB3aGljaCBvdXIgYmFja3MgYXJlIHR1cm5lZCBpcyBvZgp0aGUgYnJpZWZlc3QuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRoZSBub3JtYWwgYXJyYW5nZW1lbnQgd2FzIGZvciB0aGUgcHJlc2lkZW50IG9mIHRoZQpjb3VydCBhbmQganVkZ2VzIHRvIHNpdCBvbiBhIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnRyaWJ1bmFsPC9oaT4gb3IgZGFpcy4gVGhlIGFkdm9jYXRlcwphbmQgcGFydGllcyB0byB0aGUgc3VpdCB3ZXJlIG9uIHRoZSBncm91bmQgaW4gZnJvbnQuIFdoZW4KcGxlYWRpbmcgYmVmb3JlIGEgbGFyZ2UganVyeSB0aGUgb3JhdG9yIGNvdWxkIHdhbGsgZGlhZ29uYWxseSwKaGFsZi1mYWNpbmcgdGhlIGp1cnksIHdpdGhvdXQgYXQgYW55IHJhdGUgdHVybmluZyBoaXMgYmFjayBvbgp0b28gbWFueSBhdCBhIHRpbWUuIFdoZW4sIGhvd2V2ZXIsIHRoZXJlIHdhcyBidXQgYSBzaW5nbGUKanVkZ2UsIGFzIGluIGEgcHJpdmF0ZSB0cmlhbCwgdGhlIGZlYXQgd291bGQgaGUgbW9yZSBkaWZmaWN1bHQsCkJ1dCBhcHBhcmVudGx5IHRoZSBjb3VydCB0b29rIHVwIGxlc3Mgcm9vbSBpbiBzdWNoIGNhc2VzLAphbmQgdGhlIG9yYXRvcidzIHBlcmVncmluYXRpb25zIHdvdWxkIGJlIGJ1dCBzbWFsbC4gU2VlCsKnIDEzNCBub3RlLjwvbm90ZT4gT24gdGhlIG90aGVyIGhhbmQsIHdlIGFyZSBwZXJtaXR0ZWQKYXQgdGltZXMgdG8gd2FsayBiYWNrd2FyZHMgZ3JhZHVhbGx5LiBTb21lIGV2ZW4KanVtcCBiYWNrd2FyZHMsIHdoaWNoIGlzIG1lcmVseSBsdWRpY3JvdXMuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+dHJpYnVuYWw8L2hpPiBvciBkYWlzLiBUaGUgYWR2b2NhdGVzCmFuZCBwYXJ0aWVzIHRvIHRoZSBzdWl0IHdlcmUgb24gdGhlIGdyb3VuZCBpbiBmcm9udC4gV2hlbgpwbGVhZGluZyBiZWZvcmUgYSBsYXJnZSBqdXJ5IHRoZSBvcmF0b3IgY291bGQgd2FsayBkaWFnb25hbGx5LApoYWxmLWZhY2luZyB0aGUganVyeSwgd2l0aG91dCBhdCBhbnkgcmF0ZSB0dXJuaW5nIGhpcyBiYWNrIG9uCnRvbyBtYW55IGF0IGEgdGltZS4gV2hlbiwgaG93ZXZlciwgdGhlcmUgd2FzIGJ1dCBhIHNpbmdsZQpqdWRnZSwgYXMgaW4gYSBwcml2YXRlIHRyaWFsLCB0aGUgZmVhdCB3b3VsZCBoZSBtb3JlIGRpZmZpY3VsdCwKQnV0IGFwcGFyZW50bHkgdGhlIGNvdXJ0IHRvb2sgdXAgbGVzcyByb29tIGluIHN1Y2ggY2FzZXMsCmFuZCB0aGUgb3JhdG9yJ3MgcGVyZWdyaW5hdGlvbnMgd291bGQgYmUgYnV0IHNtYWxsLiBTZWUKwqcgMTM0IG5vdGUuPC90cmFuc2xhdGlvbj4="
translation['11.6.128'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjgiIHVuaXQ9InNlY3Rpb24iIC8+IFN0YW1waW5nIHRoZSBmb290IGlzLCBhcyBDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gaWlpLiBsaXguIDIyMC48L25vdGU+IHNheXMsIGVmZmVjdGl2ZSB3aGVuIGRvbmUKb24gc3VpdGFibGUgb2NjYXNpb25zLCB0aGF0IGlzIHRvIHNheSwgYXQgdGhlIGNvbW1lbmNlCm1lYW50IG9yIGNsb3NlIG9mIGEgbGl2ZWx5IGFyZ3VtZW50LCBidXQgaWYgaXQgYmUKCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIE9yLjwvaGk+IGlpaS4gbGl4LiAyMjAuPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzEzIiAvPgoKZnJlcXVlbnRseSBpbmR1bGdlZCBpbiwgaXQgYnJhbmRzIHRoZSBzcGVha2VyIGFzIGEKZm9vbCBhbmQgY2Vhc2VzIHRvIGF0dHJhY3QgdGhlIGF0dGVudGlvbiBvZiB0aGUganVkZ2UuClRoZXJlIGlzIGFsc28gdGhlIHVuc2lnaHRseSBoYWJpdCBvZiBzd2F5aW5nIHRvIHJpZ2h0CmFuZCBsZWZ0LCBhbmQgc2hpZnRpbmcgdGhlIHdlaWdodCBmcm9tIG9uZSBmb290IHRvCnRoZSBvdGhlci4gQWJvdmUgYWxsLCB3ZSBtdXN0IGF2b2lkIGVmZmVtaW5hdGUKbW92ZW1lbnRzLCBzdWNoIGFzIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5CcnV0LjwvaGk+IGx4aWkuPC9ub3RlPiBhc2NyaWJlcyB0byBUaXR1cywgYSBjaXJjdW1zdGFuY2Ugd2hpY2ggbGVkIHRvIGEgY2VydGFpbiBraW5kIG9mIGRhbmNlIGJlaW5nCm5pY2tuYW1lZCBUaXR1cy48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5CcnV0LjwvaGk+IGx4aWkuPC90cmFuc2xhdGlvbj4="
translation['11.6.129'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjkiIHVuaXQ9InNlY3Rpb24iIC8+IEFub3RoZXIgcmVwcmVoZW5zaWJsZSBwcmFjdGljZQppcyB0aGF0IG9mIG5vZGRpbmcgZnJlcXVlbnRseSBhbmQgcmFwaWRseSB0byBlaXRoZXIKc2lkZSwgYSBtYW5uZXJpc20gZm9yIHdoaWNoIHRoZSBlbGRlciBDdXJpbzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiBDaWMuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkJydXQuPC9oaT4gbHguPC9ub3RlPiB3YXMgZGVyaWRlZCBieSBKdWxpdXMsIHdobyBhc2tlZCB3aG8gaXQgd2FzIHdobyB3YXMgc3BlYWtpbmcgaW4gYSBib2F0LCB3aGlsZSBvbiBhbm90aGVyIG9jY2FzaW9uLCB3aGVuIEN1cmlvCmhhZCBiZWVuIHRvc3NpbmcgaGltc2VsZiBhYm91dCBpbiBoaXMgdXN1YWwgbWFubmVyLAp3aGlsZSBPY3RhdmVzLCBoaXMgY29sbGVhZ3VlLCB3YXMgc2l0dGluZyBiZXNpZGUgaGltCmJhbmRhZ2VkIGFuZCByZWVraW5nIHdpdGggbWVkaWNhbWVudHMgb24gYWNjb3VudApvZiBpbGwtaGVhbHRoLCBTcGljaW5lc3MgcmVtYXJrZWQsIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNwLjwvaGk+IENpYy4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QnJ1dC48L2hpPiBseC48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5PY3RhdmVzLCB5b3UgY2FuCm5ldmVyIGJlIHN1ZmZpY2llbnRseSBncmF0ZWZ1bCB0byB5b3VyIGNvbGxlYWd1ZTogZm9yCmlmIGhlIHdhc24ndCB0aGVyZSwgdGhlIGZsaWVzIHdvdWxkIGhhdmUgZGV2b3VyZWQgeW91CnRoaXMgdmVyeSBkYXkgd2hlcmUgeW91IHNpdC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMwIiB1bml0PSJzZWN0aW9uIiAvPjwvcXVvdGU+IFRoZSBzaG91bGRlcnMgYWxzbwphcmUgYXB0IHRvIGJlIGplcmtlZCB0byBhbmQgZnJvLCBhIGZhdWx0IG9mIHdoaWNoCkRlbW9zdGhlbmVzIGlzIHNhaWQgdG8gaGF2ZSBjdXJlZCBoaW1zZWxmIGJ5CnNwZWFraW5nIG9uIGEgbmFycm93IHBsYXRmb3JtIHdpdGggYSBzcGVhciBoYW5naW5nCmltbWVkaWF0ZWx5IGFib3ZlIGhpcyBzaG91bGRlciwgaW4gb3JkZXIgdGhhdCwgaWYgaW4KdGhlIGhlYXQgb2YgaGlzIGVsb3F1ZW5jZSBoZSBmYWlsZWQgdG8gYXZvaWQgdGhpcwpmYXVsdCwgaGUgbWlnaHQgaGF2ZSBoaXMgYXR0ZW50aW9uIGNhbGxlZCB0byB0aGUKZmFjdCBieSBhIHByaWNrIGZyb20gdGhlIHNwZWFyLiBUaGUgb25seSBjb25kaXRpb24KdGhhdCBqdXN0aWZpZXMgb3VyIHdhbGtpbmcgYWJvdXQgd2hpbGUgc3BlYWtpbmcgaXMKaWYgd2UgYXJlIHBsZWFkaW5nIGluIGEgcHVibGljIHRyaWFsIGJlZm9yZSBhIGxhcmdlCm51bWJlciBvZiBqdWRnZXMgYW5kIGRlc2lyZSBzcGVjaWFsbHkgdG8gaW1wcmVzcyBvdXIKYXJndW1lbnRzIHVwb24gdGhlbSBpbmRpdmlkdWFsbHkuPC90cmFuc2xhdGlvbj4="
translation['11.6.130'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzAiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['11.6.131'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzEiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBwcmFjdGljZQphZG9wdGVkIGJ5IHNvbWUgb2YgdGhyb3dpbmcgdGhlIHRvZ2EgYmFjayBvdmVyIHRoZQpzaG91bGRlciwgd2hpbGUgdGhleSBkcmF3IHVwIHRoZSBmb2xkIHRvIHRoZWlyIHdhaXN0CndpdGggdGhlIHJpZ2h0IGhhbmQsIGFuZCB1c2UgdGhlIGxlZnQgZm9yIGdlc3RpY3VsYXRpb24KYXMgdGhleSB3YWxrIHVwIGFuZCBkb3duIGFuZCBkaXNjb3Vyc2UsIGlzIG5vdCB0bwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzE1IiAvPgoKYmUgdG9sZXJhdGVkOyBmb3IgZXZlbiB0byBkcmF3IGJhY2sgdGhlIGxlZnQgaGFuZAp3aGlsZSBleHRlbmRpbmcgdGhlIHJpZ2h0IGlzIGFuIG9iamVjdGlvbmFibGUgaGFiaXQuClRoaXMgcmVtaW5kcyBtZSBvZiBhbiBleHRyZW1lbHkgZm9vbGlzaCB0cmljaywgd2hpY2gKSSB0aGluayBJIG91Z2h0IHRvIG1lbnRpb24sIHRoYXQgc29tZSBzcGVha2VycyBoYXZlCm9mIGVtcGxveWluZyB0aGUgaW50ZXJ2YWxzIHdoZW4gdGhlIGF1ZGllbmNlIGFyZQphcHBsYXVkaW5nIGJ5IHdoaXNwZXJpbmcgaW4gc29tZW9uZSdzIGVhciBvciBqZXN0aW5nCndpdGggdGhlaXIgZnJpZW5kcyBvciBsb29raW5nIGJhY2sgYXQgdGhlaXIgY2xlcmtzLCBhcwppZiB0ZWxsaW5nIHRoZW0gdG8gbWFrZSBhIG5vdGUgb2Ygc29tZSBncmF0dWl0eSB0bwpiZSBkaXNwZW5zZWQgdG8gdGhlaXIgc3VwcG9ydGVycy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.132'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzIiIHVuaXQ9InNlY3Rpb24iIC8+IE9uIHRoZSBvdGhlcgpoYW5kLCB3aGVuIHdlIGFyZSBtYWtpbmcgc29tZSBleHBsYW5hdGlvbiB0byB0aGUKanVkZ2UsIG1vcmUgZXNwZWNpYWxseSBpZiB0aGUgcG9pbnQgYmUgc29tZXdoYXQKb2JzY3VyZSwgYSBzbGlnaHQgaW5jbGluYXRpb24gaW4gaGlzIGRpcmVjdGlvbiB3aWxsIGJlCm5vdCB1bmJlY29taW5nLiBCdXQgdG8gbGVhbiBmb3J3YXJkIHRvd2FyZHMgdGhlCmFkdm9jYXRlIHNlYXRlZCBvbiB0aGUgYmVuY2hlcyBvZiBvdXIgb3Bwb25lbnQgaXMKb2ZmZW5zaXZlLCB3aGlsZSwgdW5sZXNzIHdlIGFyZSBnZW51aW5lbHkgZmF0aWd1ZWQsIGl0CmlzIGEgcGllY2Ugb2YgYWZmZWN0YXRpb24gdG8gbGVhbiBiYWNrIGFtb25nIG91ciBvd24KZnJpZW5kcyBhbmQgdG8gYmUgc3VwcG9ydGVkIGluIHRoZWlyIGFybXM7IHRoZSBzYW1lCnJlbWFyayBhbHNvIGFwcGxpZXMgdG8gdGhlIHByYWN0aWNlIG9mIGJlaW5nIHByb21wdGVkCmFsb3VkIG9yIHJlYWRpbmcgZnJvbSBtYW51c2NyaXB0IGFzIHRob3VnaCB1bmNlcnRhaW4gb2Ygb3VyIG1lbW9yeS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.133'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzMiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBhbGwgdGhlc2UgbWFubmVyaXNtcyBpbXBhaXIgdGhlIGZvcmNlIG9mIG91ciBzcGVha2luZywgY2hpbGwgdGhlCmVmZmVjdCBvZiBlbW90aW9uYWwgYXBwZWFscyBhbmQgbWFrZSB0aGUganVkZ2UKdGhpbmsgdGhhdCBoZSBpcyBub3QgYmVpbmcgdHJlYXRlZCB3aXRoIHN1ZmZpY2llbnQKcmVzcGVjdC4gVG8gY3Jvc3Mgb3ZlciB0byB0aGUgc2VhdHMgb2Ygb3VyIG9wcG9uZW50cwpib3JkZXJzIG9uIGltcHVkZW5jZSwgYW5kIENhc3NpdXMgU2V2ZXJ1cyBzaG93ZWQKYSBuZWF0IHR1cm4gb2Ygd2l0IHdoZW4gaGUgZGVtYW5kZWQgdGhhdCBhIGJhcnJpZXIKbWlnaHQgYmUgZXJlY3RlZCBiZXR3ZWVuIGhpbXNlbGYgYW5kIGFuIG9wcG9uZW50CndobyBiZWhhdmVkIGluIHRoaXMgZmFzaGlvbi4gTW9yZW92ZXIsIHRob3VnaCB0bwphZHZhbmNlIHRvd2FyZHMgb3VyIG9wcG9uZW50IG1heSBhdCB0aW1lcyBwcm9kdWNlCmFuIGltcHJlc3Npb24gb2YgcGFzc2lvbmF0ZSBlbmVyZ3ksIHRoZSByZXR1cm4gdG8Kb3VyIGZvcm1lciBwb3NpdGlvbiB3aWxsIGFsd2F5cyBwcm92ZSBjb3JyZXNwb25kaW5nbHkKdGFtZS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.134'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzQiIHVuaXQ9InNlY3Rpb24iIC8+IE1hbnkgb2YgdGhlIHJ1bGVzIHdoaWNoIEkgaGF2ZSBnaXZlbiB3aWxsCnJlcXVpcmUgbW9kaWZpY2F0aW9uIGJ5IHRob3NlIHdobyBoYXZlIHRvIHBsZWFkCmJlZm9yZSBqdWRnZXMgc2VhdGVkIG9uIGEgZGFpcy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+QXN0b25pc2ggKGluIGEgbm90ZSBvbiB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGl2aW5hdGlvbjwvaGk+IG9mIENpY2VybykgZXhwbGFpbnMKdGhhdCBpbiBtaW5vciBjYXNlcyB0cmllZCBieSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj50cmlidW5pLCB0cml1bXZpcmksIHF1YWVzdG9yZXM8L2hpPgphbmQgb3RoZXIgbWlub3Igb2ZmaWNpbHMsIHRoZSBqdWRnZXMgc2F0IG9uIG9yZGluYXJ5IGJlbmNoZXMsCm5vdCBvbiBhIHJhaXNlZCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj50cmlidWF0LjwvaGk+PC9ub3RlPiBGb3IgaW4gc3VjaAoKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGl2aW5hdGlvbjwvaGk+IG9mIENpY2VybykgZXhwbGFpbnMKdGhhdCBpbiBtaW5vciBjYXNlcyB0cmllZCBieSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj50cmlidW5pLCB0cml1bXZpcmksIHF1YWVzdG9yZXM8L2hpPgphbmQgb3RoZXIgbWlub3Igb2ZmaWNpbHMsIHRoZSBqdWRnZXMgc2F0IG9uIG9yZGluYXJ5IGJlbmNoZXMsCm5vdCBvbiBhIHJhaXNlZCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj50cmlidWF0LjwvaGk+PHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzE3IiAvPgoKY2FzZXMgdGhlIGZhY2UgbXVzdCBiZSByYWlzZWQgc29tZXdoYXQgaGlnaGVyLCBzbwp0aGF0IHRoZSBzcGVha2VyJ3MgZXllcyBtYXkgYmUgZml4ZWQgb24gdGhlIHByZXNpZGVudApvZiB0aGUgY291cnQ6IGZvciB0aGUgc2FtZSByZWFzb24gaGlzIGdlc3R1cmVzIG11c3QKYWxzbyBiZSBjYXJyaWVkIGEgbGl0dGxlIGhpZ2hlciwgd2hpbGUgdGhlcmUgYXJlIG90aGVyCmRldGFpbHMgd2hpY2ggd2lsbCByZWFkaWx5IG9jY3VyIHRvIG15IHJlYWRlciB3aXRob3V0CmFueSBtZW50aW9uIGZyb20gbWUuIFNpbWlsYXIgbW9kaWZpY2F0aW9ucyB3aWxsCmJlIGxpa2V3aXNlIG5lY2Vzc2FyeSBmb3IgdGhvc2Ugd2hvIHBsZWFkIHNpdHRpbmcuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkNwLjwvaGk+IFhJLiBpLiA0NCwgd2hpY2ggc2hvd3MgdGhhdCB0aGUgY2FzZXMgaW4gcXVlc3Rpb24gYXJlCnRob3NlIHN1Ym1pdHRlZCB0byBhcmJpdHJhdGlvbi48L25vdGU+CkZvciB0aGlzIGlzIGRvbmUsIGFzIGEgcnVsZSwgb25seSBpbiBjYXNlcyBvZiBtaW5vcgppbXBvcnRhbmNlLCB3aGVyZSBkZWxpdmVyeSB3aWxsIG5lY2Vzc2FyaWx5IGJlIG1vcmUKcmVzdHJhaW5lZCwgYW5kIGNlcnRhaW4gZGVmZWN0cyBhcmUgaW5ldml0YWJsZS48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5DcC48L2hpPiBYSS4gaS4gNDQsIHdoaWNoIHNob3dzIHRoYXQgdGhlIGNhc2VzIGluIHF1ZXN0aW9uIGFyZQp0aG9zZSBzdWJtaXR0ZWQgdG8gYXJiaXRyYXRpb24uPC90cmFuc2xhdGlvbj4="
translation['11.6.135'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzUiIHVuaXQ9InNlY3Rpb24iIC8+IEZvcgpleGFtcGxlLCB3aGVuIHRoZSBzcGVha2VyIHNpdHMgb24gdGhlIGxlZnQgc2lkZSBvZiB0aGUKanVkZ2UsIGhlIHdpbGwgaGF2ZSB0byBhZHZhbmNlIGhpcyByaWdodCBmb290LCB3aGlsZQppZiBoZSBiZSBzZWF0ZWQgb24gdGhlIHJpZ2h0LCBtYW55IG9mIGhpcyBnZXN0dXJlcwptdXN0IGJlIG1hZGUgZnJvbSByaWdodCB0byBsZWZ0LCBpbiBvcmRlciB0aGF0IHRoZXkKbWF5IGJlIGFkZHJlc3NlZCB0byB0aGUganVkZ2UuIFBlcnNvbmFsbHksIEkgbm90ZQp0aGF0IG1hbnkgc3BlYWtlcnMgc3RhcnQgdXAgYXQgdGhlIGNvbmNsdXNpb24gb2YKaW5kaXZpZHVhbCBwZXJpb2RzLCB3aGlsZSBzb21lIHByb2NlZWQgdG8gd2FsayB0bwphbmQgZnJvIGZvciBhIGxpdHRsZTogaXQgaXMgZm9yIHRoZW0gdG8gZGVjaWRlIHdoZXRoZXIKdGhpcyBpcyBiZWNvbWluZyBvciBub3Q6IEkgd2lsbCBtZXJlbHkgcmVtYXJrIHRoYXQsCndoZW4gdGhleSBkbyB0aGlzLCB0aGV5IGFyZSBub3QgcGxlYWRpbmcgc2VhdGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.136'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzYiIHVuaXQ9InNlY3Rpb24iIC8+SXQgd2FzIGEgY29tbW9uIGN1c3RvbSwgd2hpY2ggaGFzIG5vdCBlbnRpcmVseQpkaXNhcHBlYXJlZCwgdG8gZHJpbmsgb3IgZXZlbiB0byBlYXQgd2hpbGUgcGxlYWRpbmc7CmJ1dCBJIHNoYWxsIG5vdCBwZXJtaXQgbXkgaWRlYWwgb3JhdG9yIHRvIGRvIGFueXRoaW5nCm9mIHRoZSBraW5kLiBGb3IgaWYgYSBtYW4gY2Fubm90IGVuZHVyZSB0aGUKYnVyZGVucyBpbXBvc2VkIGJ5IG9yYXRvcnkgd2l0aG91dCBoYXZpbmcgcmVjb3Vyc2UKdG8gc3VjaCByZW1lZGllcywgaGUgc2hvdWxkIG5vdCBmaW5kIGl0IGEgc2VyaW91cwpoYXJkc2hpcCB0byBnaXZlIHVwIHBsZWFkaW5nIGFsdG9nZXRoZXIsIGEgY291cnNlCndoaWNoIGlzIGZhciBwcmVmZXJhYmxlIHRvIGFja25vd2xlZGdpbmcgaGlzIGNvbnRlbXB0CmJvdGggZm9yIGhpcyBwcm9mZXNzaW9uIGFuZCBoaXMgYXVkaWVuY2UuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTM3IiB1bml0PSJzZWN0aW9uIiAvPldpdGggcmVnYXJkIHRvIGRyZXNzLCB0aGVyZSBpcyBubyBzcGVjaWFsIGdhcmIKcGVjdWxpYXIgdG8gdGhlIG9yYXRvciwgYnV0IGhpcyBkcmVzcyBjb21lcyBtb3JlCnVuZGVyIHRoZSBwdWJsaWMgZXllIHRoYW4gdGhhdCBvZiBvdGhlciBtZW4uIEl0CnNob3VsZCwgdGhlcmVmb3JlLCBiZSBkaXN0aW5ndWlzaGVkIGFuZCBtYW5seSwgYXMsCmluZGVlZCwgaXQgb3VnaHQgdG8gYmUgd2l0aCBhbGwgbWVuIG9mIHBvc2l0aW9uLiBGb3IKCjxwYiBpZD0icC4zMTkiIC8+CgpleGNlc3NpdmUgY2FyZSB3aXRoIHJlZ2FyZCB0byB0aGUgY3V0IG9mIHRoZSB0b2dhLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+SW4gcHV0dGluZyBvbiB0aGUgdG9nYSwgaXQgd2FzIHRocm93biBmaXJzdCBvdmVyIHRoZSBsZWZ0CnNob3VsZGVyLCBzbyB0aGF0IGFib3V0IDYgZmVldCBodW5nIGluIGZyb250IGFuZCBhYm91dCAxMgpiZWhpbmQuIFRoaXMgbG9uZ2VyIHBvcnRpb24gd2FzIHRoZW4gY2FycmllZCByb3VuZCB1bmRlcgp0aGUgcmlnaHQgYXJtIGFuZCB0aGVuIGRpYWdvbmFsbHkgYWNyb3NzIHRoZSBjaGVzdCAobGlrZSBhCjxoaSByZW5kPSJpdGFsaWNzIj5iYWxsZXVzLDwvaGk+IG9yIGJlbHQpIGFuZCBvdmVyIHRoZSBsZWZ0IHNob3VsZGVyIGFnYWluLiBBIGZvbGQgb2YKdGhpcyBwb3J0aW9uIGhhbmdpbmcgaW4gZnJvbnQgZm9ybWVkIHRoZSA8aGkgcmVuZD0iaXRhbGljcyI+c2ludXMuPC9oaT4gVGhlIG9yaWdpbmFsCjxtaWxlc3RvbmUgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz5mZWV0IGhhbmdpbmcgaW4gZnJvbnQgZnJvbSB0aGUgbGVmdCBzaG91bGRlciBub3cgaHVuZwpiZWxvdyB0aGUgcmVzdC4gQSBwb3J0aW9uIHdhcyBwdWxsZWQgdXAgZnJvbSBhYm92ZSBhbmQKQWxsb3dlZCB0byBoYW5nIG92ZXIgdGhlIGVkZ2Ugb2YgdGhhdCBwb3J0aW9uIG9mIHRoZSB0b2dhCndoaWNoIFF1aW50aWxpYW4gY29tcGFyZXMgdG8gYSA8aGkgcmVuZD0iaXRhbGljcyI+YmFsbGV1cy48L2hpPiBUaGlzIHdhcyBrbm93bgphcyB0aGUgPGhpIHJlbmQ9Iml0YWxpY3MiPnVtYm8sPC9oaT4gYW5kIGlzIGRlc2NyaWJlZCBieSBRdWludGlsaWFuIGFzIDxoaSByZW5kPSJpdGFsaWNzIj5wYXJzIHF1YWUKdWx0aW1hIGltcG9uaXR1ci48L2hpPiBIZSByZWNvbW1lbmRzIHRoYXQgYSBjb25zaWRlcmFibGUKcG9ydGlvbiBzaG91bGQgYmUgdGh1cyBwdWxsZWQgdXAgYW5kIGFsbG93ZWQgdG8gaGFuZyBmYWlybHkKbG93IGluIGZyb250IG92ZXIgdGhlIGVkZ2Ugb2YgdGhlIDxoaSByZW5kPSJpdGFsaWNzIj5iYWx0ZXVzLDwvaGk+IHRoYXQgdGhlIHdlaWdodApvZiB0aGUgaGFuZ2luZyBwb3J0aW9uIG1pZ2h0IGJhbGFuY2UgdGhlIHJlbWFpbmRlciBvZiB0aGUKb3JpZ2luYWwgNiBmZWV0IG9mIHRvZ2EgaGFuZ2luZyBmcm9tIHRoZSBsZWZ0IHNob3VsZGVyLCBrZWVwCml0IGluIHBsYWNlIGFuZCBwcmV2ZW50IGl0IGZyb20gc2xpcHBpbmcgbGFjayBpbnRvIGl0cyBvcmlnaW5hbApwb3NpdGlvbi4gVGhlIHRvZ2Egd2FzIHZlcnkgbmVhcmx5IHNlbWljaXJjdWxhciBpbiBzaGFwZSwKd2hpY2ggZXhwbGFpbnMgUXVpbnRpbGlhbidzIHN0YXRlbWVudCB0aGF0IGl0IHNob3VsZCBiZQpyb3VuZC4gRm9yIGZ1cnRoZXIgZGV0YWlscyBzZWUgPGhpIHJlbmQ9Iml0YWxpY3MiPkNvbXBhbmlvbiB0byBMYXRpbiBTdHVkaWVzLDwvaGk+CkNhbWIuIFVuaXYuIFByZXNzLCBwLiAxOTEuPC9ub3RlPgp0aGUgc3R5bGUgb2YgdGhlIHNob2VzLCBvciB0aGUgYXJyYW5nZW1lbnQgb2YgdGhlCmhhaXIsIGlzIGp1c3QgYXMgcmVwcmVoZW5zaWJsZSBhcyBleGNlc3NpdmUgY2FyZWxlc3NuZXNzLiBUaGVyZSBhcmUgYWxzbyBkZXRhaWxzIG9mIGRyZXNzIHdoaWNoIGFyZQphbHRlcmVkIHRvIHNvbWUgZXh0ZW50IGJ5IHN1Y2Nlc3NpdmUgY2hhbmdlcyBpbgpmYXNoaW9uLiBUaGUgYW5jaWVudHMsIGZvciBleGFtcGxlLCB3b3JlIG5vIGZvbGRzLAphbmQgdGhlaXIgc3VjY2Vzc29ycyB3b3JlIHRoZW0gdmVyeSBzaG9ydC48bWlsZXN0b25lIG49IjEzOCIgdW5pdD0ic2VjdGlvbiIgLz4gQ29uc2VxdWVudGx5IGl0IGZvbGxvd3MgdGhhdCBpbiB2aWV3IG9mIHRoZSBmYWN0IHRoYXQgdGhlaXIKYXJtcyB3ZXJlLCBsaWtlIHRob3NlIG9mIHRoZSBHcmVla3MsIGNvdmVyZWQgYnkgdGhlCmdhcm1lbnQsIHRoZXkgbXVzdCBoYXZlIGVtcGxveWVkIGEgZGlmZmVyZW50IGZvcm0gb2YKZ2VzdHVyZSBpbiB0aGUgZXhvcmRpdW0gZnJvbSB0aGF0IHdoaWNoIGlzIG5vdyBpbgp1c2UuIEhvd2V2ZXIsIEkgYW0gc3BlYWtpbmcgb2Ygb3VyIG93biBkYXkuIFRoZQpzcGVha2VyIHdobyBoYXMgbm90IHRoZSByaWdodCB0byB3ZWFyIHRoZSBicm9hZApzdHJpcGUsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5Xb3JuIGJ5IHNlbmF0b3JzLjwvbm90ZT4gd2lsbCB3ZWFyIGhpcyBnaXJkbGUgaW4gc3VjaCBhIHdheSB0aGF0IHRoZQpmcm9udCBlZGdlcyBvZiB0aGUgdHVuaWMgZmFsbCBhIGxpdHRsZSBiZWxvdyBoaXMga25lZXMsCndoaWxlIHRoZSBlZGdlcyBpbiByZWFyIHJlYWNoIHRvIHRoZSBtaWRkbGUgb2YgaGlzCmhhbXMuIEZvciBvbmx5IHdvbWVuIGRyYXcgdGhlbSBsb3dlciBhbmQgb25seQpjZW50dXJpb25zIGhpZ2hlci48bWlsZXN0b25lIG49IjEzOSIgdW5pdD0ic2VjdGlvbiIgLz4gSWYgd2Ugd2VhciB0aGUgcHVycGxlIHN0cmlwZSwgaXQKcmVxdWlyZXMgYnV0IGxpdHRsZSBjYXJlIHRvIHNlZSB0aGF0IGl0IGZpbGxzIGJlY29taW5nbHk7Cm5lZ2xpZ2VuY2UgaW4gdGhpcyByZXNwZWN0IHNvbWV0aW1lcyBleGNpdGVzIGNyaXRpY2lzbS4gQW1vbmcgdGhvc2Ugd2hvIHdlYXIgdGhlIGJyb2FkIHN0cmlwZSwgaXQgaXMKdGhlIGZhc2hpb24gdG8gbGV0IGl0IGhhbmcgc29tZXdoYXQgbG93ZXIgdGhhbiBpbgpnYXJtZW50cyB0aGF0IGFyZSByZXRhaW5lZCBieSB0aGUgZ2lyZGxlLiBUaGUgdG9nYQppdHNlbGYgc2hvdWxkLCBpbiBteSBvcGluaW9uLCBiZSByb3VuZCwgYW5kIGN1dCB0bwpmaXQsIG90aGVyd2lzZSB0aGVyZSBhcmUgYSBudW1iZXIgb2Ygd2F5cyBpbiB3aGljaCBpdAptYXkgYmUgdW5zaGFwZWx5LiBJdHMgZnJvbnQgZWRnZSBzaG91bGQgYnkgcHJlZmVyZW5jZSByZWFjaCB0byB0aGUgbWlkZGxlIG9mIHRoZSBzaGluLCB3aGlsZSB0aWUgYmFjawpzaG91bGQgYmUgaGlnaGVyIGluIHByb3Bvc2l0aW9uIGFzIHRoZSBnaXJkbGUgaXMgaGlnaGVyCgo8cGIgaWQ9InAuMzIxIiAvPgoKYmVoaW5kIHRoYW4gaW4gZnJvbnQuPG1pbGVzdG9uZSBuPSIxNDAiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBmb2xkIGlzIG1vc3QgYmVjb21pbmcsCmlmIGl0IGZhbGwgdG8gYSBwb2ludCBhIGxpdHRsZSBhYm92ZSB0aGUgbG93ZXIgZWRnZSBvZgp0aGUgdHVuaWMsIGFuZCBzaG91bGQgY2VydGFpbmx5IG5ldmVyIGZhbGwgYmVsb3cgaXQuClRoZSBvdGhlciBmb2xkIHdoaWNoIHBhc3NlcyBvYmxpcXVlbHkgbGlrZSBhIGJlbHQKdW5kZXIgdGhlIHJpZ2h0IHNob3VsZGVyIGFuZCBvdmVyIHRoZSBsZWZ0LCBzaG91bGQKbmVpdGhlciBiZSB0b28gdGlnaHQgbm9yIHRvbyBsb29zZS4gVGhlIHBvcnRpb24gb2YKdGhlIHRvZ2Egd2hpY2ggaXMgbGFzdCB0byBiZSBhcnJhbmdlZCBzaG91bGQgZmFsbApyYXRoZXIgbG93LCBzaW5jZSBpdCB3aWxsIHNpdCBiZXR0ZXIgdGh1cyBhbmQgYmUKa2VwdCBpbiBpdHMgcGxhY2UuIEEgcG9ydGlvbiBvZiB0aGUgdHVuaWMgYWxzbyBzaG91bGQKYmUgZHJhd24gYmFjayBpbiBvcmRlciB0aGF0IGl0IG1heSBub3QgZmFsbCBvdmVyIHRoZQphcm0gd2hlbiB3ZSBhcmUgcGxlYWRpbmcsIGFuZCB0aGUgZm9sZCBzaG91bGQgYmUKdGhyb3duIG92ZXIgdGhlIHNob3VsZGVyLCB3aGlsZSBpdCB3aWxsIG5vdCBiZQp1bmJlY29taW5nIGlmIHRoZSBlZGdlIGJlIHR1cm5lZCBiYWNrLjxtaWxlc3RvbmUgbj0iMTQxIiB1bml0PSJzZWN0aW9uIiAvPiBPbiB0aGUKb3RoZXIgaGFuZCwgd2Ugc2hvdWxkIG5vdCBjb3ZlciB0aGUgc2hvdWxkZXIgYW5kCnRoZSB3aG9sZSBvZiB0aGUgdGhyb2F0LCBvdGhlcndpc2Ugb3VyIGRyZXNzIHdpbGwgYmUKdW5kdWx5IG5hcnJvd2VkIGFuZCB3aWxsIGxvc2UgdGhlIGltcHJlc3NpdmUgZWZmZWN0CnByb2R1Y2VkIGJ5IGJyZWFkdGggYXQgdGhlIGNoZXN0LiBUaXJlIGxlZnQgYXJtCnNob3VsZCBvbmx5IGJlIHJhaXNlZCBzbyBmYXIgYXMgdG8gZm9ybSBhIHJpZ2h0IGFuZ2xlCmF0IHRoZSBlbGJvdywgd2hpbGUgdGhlIGVkZ2Ugb2YgdGhlIHRvZ2Egc2hvdWxkIGZhbGwKaW4gZXF1YWwgbGVuZ3RocyBvbiBlaXRoZXIgc2lkZS48bWlsZXN0b25lIG49IjE0MiIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIGhhbmQgc2hvdWxkCm5vdCBiZSBvdmVybG9hZGVkIHdpdGggcmluZ3MsIHdoaWNoIHNob3VsZCB1bmRlciBubwpjaXJjdW1zdGFuY2VzIGVuY3JvYWNoIHVwb24gdGhlIG1pZGRsZSBqb2ludCBvZgp0aGUgZmluZ2VyLiBUaGUgbW9zdCBiZWNvbWluZyBhdHRpdHVkZSBmb3IgdGhlCmhhbmQgaXMgcHJvZHVjZWQgYnkgcmFpc2luZyB0aGUgdGh1bWIgYW5kIHNsaWdodGx5CmN1cnZpbmcgdGhlIGZpbmdlcnMsIHVubGVzcyBpdCBpcyBvY2N1cGllZCB3aXRoIGhvbGRpbmcgbWFudXNjcmlwdC4gQnV0IHdlIHNob3VsZCBub3QgZ28gb3V0IG9mIG91cgp3YXkgdG8gY2FycnkgdGhlIGxhdHRlciwgZm9yIGl0IHN1Z2dlc3RzIGFuIGFja25vd2xlZGdlbWVudCB0aGF0IHdlIGRvIG5vdCB0cnVzdCBvdXIgbWVtb3J5LCBhbmQgaXMKYSBoaW5kcmFuY2UgdG8gYSBudW1iZXIgb2YgZ2VzdHVyZXMuPG1pbGVzdG9uZSBuPSIxNDMiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBhbmNpZW50cwp1c2VkIHRvIGxldCB0aGUgdG9nYSBmYWxsIHRvIHRoZSBoZWVscywgYXMgdGhlIEdyZWVrcwphcmUgaW4gdGhlIGhhYml0IG9mIGRvaW5nIHdpdGggdGhlIGNsb2FrOiBQbG90aXVzCmFuZCBOaWdpZGl1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+UGxvdGlucyBHYWxsdXMsIGEgcmhldG9yaWNpYW4sIGFuZCBOaWdpZGl1cyBGaWd1bHVzLCBhbgplbmN5Y2xvcGFlZGljIHdyaXRlciwgYm90aCBjb250ZW1wb3JhcmllcyBvZiBDaWNlcm8uPC9ub3RlPiBib3RoIHJlY29tbWVuZCB0aGlzIGluIHRoZSBib29rcwp3aGljaCB0aGV5IHdyb3RlIGFib3V0IGdlc3R1cmUgYXMgcHJhY3Rpc2VkIGluCnRoZWlyIG93biBkYXkuIEkgYW0gY29uc2VxdWVudGx5IGFsbCB0aGUgbW9yZQoKPHBiIGlkPSJwLjMyMyIgLz4KCnN1cnByaXNlZCBhdCB0aGUgdmlldyBleHByZXNzZWQgYnkgc28gbGVhcm5lZCBhCm1hbiBhcyBQbGluaXVzIFNlY3VuZHVzLCBlc3BlY2lhbGx5IHNpbmNlIGl0IG9jY3VycwppbiBhIGJvb2sgd2hpY2ggY2FycmllcyBtaW51dGUgcmVzZWFyY2ggYWxtb3N0IHRvCmV4Y2Vzczo8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRoaXMgd29yayBvZiB0aGUgZWxkZXIgUGxpbnkgd2FzIGNhbGxlZCA8aGkgcmVuZD0iaXRhbGljcyI+U3R1ZGl1c3VzLjwvaGk+PC9ub3RlPiBmb3IgaGUgYXNzZXJ0cyB0aGF0IENpY2VybyB3YXMgaW4gdGhlCmhhYml0IG9mIHdlYXJpbmcgaGlzIHRvZ2EgaW4gc3VjaCBhIGZhc2hpb24gdG8gY29uY2VhbCBoaXMgdmFyaWNvc2UgdmVpbnMsIGRlc3BpdGUgdGhlIGZhY3QgdGhhdCB0aGlzCmZhc2hpb24gaXMgdG8gYmUgc2VlbiBpbiB0aGUgc3RhdHVlcyBvZiBwZXJzb25zIHdobwpsaXZlZCBhZnRlciBDaWNlcm8ncyBkYXkuPG1pbGVzdG9uZSBuPSIxNDQiIHVuaXQ9InNlY3Rpb24iIC8+IEFzIHJlZ2FyZHMgdGhlIHNob3J0IGNsb2FrLApiYW5kYWdlcyB1c2VkIHRvIHByb3RlY3QgdGhlIGxlZ3MsIG11ZmZsZXJzIGFuZApjb3ZlcmluZ3MgZm9yIHRoZSBlYXJzLCBub3RoaW5nIHNob3J0IG9mIGlsbC1oZWFsdGgKY2FuIGV4Y3VzZSB0aGVpciB1c2UuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.137'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzciIHVuaXQ9InNlY3Rpb24iIC8+V2l0aCByZWdhcmQgdG8gZHJlc3MsIHRoZXJlIGlzIG5vIHNwZWNpYWwgZ2FyYgpwZWN1bGlhciB0byB0aGUgb3JhdG9yLCBidXQgaGlzIGRyZXNzIGNvbWVzIG1vcmUKdW5kZXIgdGhlIHB1YmxpYyBleWUgdGhhbiB0aGF0IG9mIG90aGVyIG1lbi4gSXQKc2hvdWxkLCB0aGVyZWZvcmUsIGJlIGRpc3Rpbmd1aXNoZWQgYW5kIG1hbmx5LCBhcywKaW5kZWVkLCBpdCBvdWdodCB0byBiZSB3aXRoIGFsbCBtZW4gb2YgcG9zaXRpb24uIEZvcgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzE5IiAvPgoKZXhjZXNzaXZlIGNhcmUgd2l0aCByZWdhcmQgdG8gdGhlIGN1dCBvZiB0aGUgdG9nYSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+SW4gcHV0dGluZyBvbiB0aGUgdG9nYSwgaXQgd2FzIHRocm93biBmaXJzdCBvdmVyIHRoZSBsZWZ0CnNob3VsZGVyLCBzbyB0aGF0IGFib3V0IDYgZmVldCBodW5nIGluIGZyb250IGFuZCBhYm91dCAxMgpiZWhpbmQuIFRoaXMgbG9uZ2VyIHBvcnRpb24gd2FzIHRoZW4gY2FycmllZCByb3VuZCB1bmRlcgp0aGUgcmlnaHQgYXJtIGFuZCB0aGVuIGRpYWdvbmFsbHkgYWNyb3NzIHRoZSBjaGVzdCAobGlrZSBhCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmJhbGxldXMsPC9oaT4gb3IgYmVsdCkgYW5kIG92ZXIgdGhlIGxlZnQgc2hvdWxkZXIgYWdhaW4uIEEgZm9sZCBvZgp0aGlzIHBvcnRpb24gaGFuZ2luZyBpbiBmcm9udCBmb3JtZWQgdGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNpbnVzLjwvaGk+IFRoZSBvcmlnaW5hbAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz5mZWV0IGhhbmdpbmcgaW4gZnJvbnQgZnJvbSB0aGUgbGVmdCBzaG91bGRlciBub3cgaHVuZwpiZWxvdyB0aGUgcmVzdC4gQSBwb3J0aW9uIHdhcyBwdWxsZWQgdXAgZnJvbSBhYm92ZSBhbmQKQWxsb3dlZCB0byBoYW5nIG92ZXIgdGhlIGVkZ2Ugb2YgdGhhdCBwb3J0aW9uIG9mIHRoZSB0b2dhCndoaWNoIFF1aW50aWxpYW4gY29tcGFyZXMgdG8gYSA8aGkgcmVuZD0iaXRhbGljcyI+YmFsbGV1cy48L2hpPiBUaGlzIHdhcyBrbm93bgphcyB0aGUgPGhpIHJlbmQ9Iml0YWxpY3MiPnVtYm8sPC9oaT4gYW5kIGlzIGRlc2NyaWJlZCBieSBRdWludGlsaWFuIGFzIDxoaSByZW5kPSJpdGFsaWNzIj5wYXJzIHF1YWUKdWx0aW1hIGltcG9uaXR1ci48L2hpPiBIZSByZWNvbW1lbmRzIHRoYXQgYSBjb25zaWRlcmFibGUKcG9ydGlvbiBzaG91bGQgYmUgdGh1cyBwdWxsZWQgdXAgYW5kIGFsbG93ZWQgdG8gaGFuZyBmYWlybHkKbG93IGluIGZyb250IG92ZXIgdGhlIGVkZ2Ugb2YgdGhlIDxoaSByZW5kPSJpdGFsaWNzIj5iYWx0ZXVzLDwvaGk+IHRoYXQgdGhlIHdlaWdodApvZiB0aGUgaGFuZ2luZyBwb3J0aW9uIG1pZ2h0IGJhbGFuY2UgdGhlIHJlbWFpbmRlciBvZiB0aGUKb3JpZ2luYWwgNiBmZWV0IG9mIHRvZ2EgaGFuZ2luZyBmcm9tIHRoZSBsZWZ0IHNob3VsZGVyLCBrZWVwCml0IGluIHBsYWNlIGFuZCBwcmV2ZW50IGl0IGZyb20gc2xpcHBpbmcgbGFjayBpbnRvIGl0cyBvcmlnaW5hbApwb3NpdGlvbi4gVGhlIHRvZ2Egd2FzIHZlcnkgbmVhcmx5IHNlbWljaXJjdWxhciBpbiBzaGFwZSwKd2hpY2ggZXhwbGFpbnMgUXVpbnRpbGlhbidzIHN0YXRlbWVudCB0aGF0IGl0IHNob3VsZCBiZQpyb3VuZC4gRm9yIGZ1cnRoZXIgZGV0YWlscyBzZWUgPGhpIHJlbmQ9Iml0YWxpY3MiPkNvbXBhbmlvbiB0byBMYXRpbiBTdHVkaWVzLDwvaGk+CkNhbWIuIFVuaXYuIFByZXNzLCBwLiAxOTEuPC9ub3RlPgp0aGUgc3R5bGUgb2YgdGhlIHNob2VzLCBvciB0aGUgYXJyYW5nZW1lbnQgb2YgdGhlCmhhaXIsIGlzIGp1c3QgYXMgcmVwcmVoZW5zaWJsZSBhcyBleGNlc3NpdmUgY2FyZWxlc3NuZXNzLiBUaGVyZSBhcmUgYWxzbyBkZXRhaWxzIG9mIGRyZXNzIHdoaWNoIGFyZQphbHRlcmVkIHRvIHNvbWUgZXh0ZW50IGJ5IHN1Y2Nlc3NpdmUgY2hhbmdlcyBpbgpmYXNoaW9uLiBUaGUgYW5jaWVudHMsIGZvciBleGFtcGxlLCB3b3JlIG5vIGZvbGRzLAphbmQgdGhlaXIgc3VjY2Vzc29ycyB3b3JlIHRoZW0gdmVyeSBzaG9ydC48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5iYWxsZXVzLDwvaGk+IG9yIGJlbHQpIGFuZCBvdmVyIHRoZSBsZWZ0IHNob3VsZGVyIGFnYWluLiBBIGZvbGQgb2YKdGhpcyBwb3J0aW9uIGhhbmdpbmcgaW4gZnJvbnQgZm9ybWVkIHRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zaW51cy48L2hpPiBUaGUgb3JpZ2luYWwKPC90cmFuc2xhdGlvbj4="
translation['11.6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPmZlZXQgaGFuZ2luZyBpbiBmcm9udCBmcm9tIHRoZSBsZWZ0IHNob3VsZGVyIG5vdyBodW5nCmJlbG93IHRoZSByZXN0LiBBIHBvcnRpb24gd2FzIHB1bGxlZCB1cCBmcm9tIGFib3ZlIGFuZApBbGxvd2VkIHRvIGhhbmcgb3ZlciB0aGUgZWRnZSBvZiB0aGF0IHBvcnRpb24gb2YgdGhlIHRvZ2EKd2hpY2ggUXVpbnRpbGlhbiBjb21wYXJlcyB0byBhIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmJhbGxldXMuPC9oaT4gVGhpcyB3YXMga25vd24KYXMgdGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnVtYm8sPC9oaT4gYW5kIGlzIGRlc2NyaWJlZCBieSBRdWludGlsaWFuIGFzIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBhcnMgcXVhZQp1bHRpbWEgaW1wb25pdHVyLjwvaGk+IEhlIHJlY29tbWVuZHMgdGhhdCBhIGNvbnNpZGVyYWJsZQpwb3J0aW9uIHNob3VsZCBiZSB0aHVzIHB1bGxlZCB1cCBhbmQgYWxsb3dlZCB0byBoYW5nIGZhaXJseQpsb3cgaW4gZnJvbnQgb3ZlciB0aGUgZWRnZSBvZiB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+YmFsdGV1cyw8L2hpPiB0aGF0IHRoZSB3ZWlnaHQKb2YgdGhlIGhhbmdpbmcgcG9ydGlvbiBtaWdodCBiYWxhbmNlIHRoZSByZW1haW5kZXIgb2YgdGhlCm9yaWdpbmFsIDYgZmVldCBvZiB0b2dhIGhhbmdpbmcgZnJvbSB0aGUgbGVmdCBzaG91bGRlciwga2VlcAppdCBpbiBwbGFjZSBhbmQgcHJldmVudCBpdCBmcm9tIHNsaXBwaW5nIGxhY2sgaW50byBpdHMgb3JpZ2luYWwKcG9zaXRpb24uIFRoZSB0b2dhIHdhcyB2ZXJ5IG5lYXJseSBzZW1pY2lyY3VsYXIgaW4gc2hhcGUsCndoaWNoIGV4cGxhaW5zIFF1aW50aWxpYW4ncyBzdGF0ZW1lbnQgdGhhdCBpdCBzaG91bGQgYmUKcm91bmQuIEZvciBmdXJ0aGVyIGRldGFpbHMgc2VlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkNvbXBhbmlvbiB0byBMYXRpbiBTdHVkaWVzLDwvaGk+CkNhbWIuIFVuaXYuIFByZXNzLCBwLiAxOTEuPC90cmFuc2xhdGlvbj4="
translation['11.6.138'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzgiIHVuaXQ9InNlY3Rpb24iIC8+IENvbnNlcXVlbnRseSBpdCBmb2xsb3dzIHRoYXQgaW4gdmlldyBvZiB0aGUgZmFjdCB0aGF0IHRoZWlyCmFybXMgd2VyZSwgbGlrZSB0aG9zZSBvZiB0aGUgR3JlZWtzLCBjb3ZlcmVkIGJ5IHRoZQpnYXJtZW50LCB0aGV5IG11c3QgaGF2ZSBlbXBsb3llZCBhIGRpZmZlcmVudCBmb3JtIG9mCmdlc3R1cmUgaW4gdGhlIGV4b3JkaXVtIGZyb20gdGhhdCB3aGljaCBpcyBub3cgaW4KdXNlLiBIb3dldmVyLCBJIGFtIHNwZWFraW5nIG9mIG91ciBvd24gZGF5LiBUaGUKc3BlYWtlciB3aG8gaGFzIG5vdCB0aGUgcmlnaHQgdG8gd2VhciB0aGUgYnJvYWQKc3RyaXBlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5Xb3JuIGJ5IHNlbmF0b3JzLjwvbm90ZT4gd2lsbCB3ZWFyIGhpcyBnaXJkbGUgaW4gc3VjaCBhIHdheSB0aGF0IHRoZQpmcm9udCBlZGdlcyBvZiB0aGUgdHVuaWMgZmFsbCBhIGxpdHRsZSBiZWxvdyBoaXMga25lZXMsCndoaWxlIHRoZSBlZGdlcyBpbiByZWFyIHJlYWNoIHRvIHRoZSBtaWRkbGUgb2YgaGlzCmhhbXMuIEZvciBvbmx5IHdvbWVuIGRyYXcgdGhlbSBsb3dlciBhbmQgb25seQpjZW50dXJpb25zIGhpZ2hlci48L3RyYW5zbGF0aW9uPg=="
translation['11.6.139'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzkiIHVuaXQ9InNlY3Rpb24iIC8+IElmIHdlIHdlYXIgdGhlIHB1cnBsZSBzdHJpcGUsIGl0CnJlcXVpcmVzIGJ1dCBsaXR0bGUgY2FyZSB0byBzZWUgdGhhdCBpdCBmaWxscyBiZWNvbWluZ2x5OwpuZWdsaWdlbmNlIGluIHRoaXMgcmVzcGVjdCBzb21ldGltZXMgZXhjaXRlcyBjcml0aWNpc20uIEFtb25nIHRob3NlIHdobyB3ZWFyIHRoZSBicm9hZCBzdHJpcGUsIGl0IGlzCnRoZSBmYXNoaW9uIHRvIGxldCBpdCBoYW5nIHNvbWV3aGF0IGxvd2VyIHRoYW4gaW4KZ2FybWVudHMgdGhhdCBhcmUgcmV0YWluZWQgYnkgdGhlIGdpcmRsZS4gVGhlIHRvZ2EKaXRzZWxmIHNob3VsZCwgaW4gbXkgb3BpbmlvbiwgYmUgcm91bmQsIGFuZCBjdXQgdG8KZml0LCBvdGhlcndpc2UgdGhlcmUgYXJlIGEgbnVtYmVyIG9mIHdheXMgaW4gd2hpY2ggaXQKbWF5IGJlIHVuc2hhcGVseS4gSXRzIGZyb250IGVkZ2Ugc2hvdWxkIGJ5IHByZWZlcmVuY2UgcmVhY2ggdG8gdGhlIG1pZGRsZSBvZiB0aGUgc2hpbiwgd2hpbGUgdGllIGJhY2sKc2hvdWxkIGJlIGhpZ2hlciBpbiBwcm9wb3NpdGlvbiBhcyB0aGUgZ2lyZGxlIGlzIGhpZ2hlcgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzIxIiAvPgoKYmVoaW5kIHRoYW4gaW4gZnJvbnQuPC90cmFuc2xhdGlvbj4="
translation['11.6.140'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDAiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBmb2xkIGlzIG1vc3QgYmVjb21pbmcsCmlmIGl0IGZhbGwgdG8gYSBwb2ludCBhIGxpdHRsZSBhYm92ZSB0aGUgbG93ZXIgZWRnZSBvZgp0aGUgdHVuaWMsIGFuZCBzaG91bGQgY2VydGFpbmx5IG5ldmVyIGZhbGwgYmVsb3cgaXQuClRoZSBvdGhlciBmb2xkIHdoaWNoIHBhc3NlcyBvYmxpcXVlbHkgbGlrZSBhIGJlbHQKdW5kZXIgdGhlIHJpZ2h0IHNob3VsZGVyIGFuZCBvdmVyIHRoZSBsZWZ0LCBzaG91bGQKbmVpdGhlciBiZSB0b28gdGlnaHQgbm9yIHRvbyBsb29zZS4gVGhlIHBvcnRpb24gb2YKdGhlIHRvZ2Egd2hpY2ggaXMgbGFzdCB0byBiZSBhcnJhbmdlZCBzaG91bGQgZmFsbApyYXRoZXIgbG93LCBzaW5jZSBpdCB3aWxsIHNpdCBiZXR0ZXIgdGh1cyBhbmQgYmUKa2VwdCBpbiBpdHMgcGxhY2UuIEEgcG9ydGlvbiBvZiB0aGUgdHVuaWMgYWxzbyBzaG91bGQKYmUgZHJhd24gYmFjayBpbiBvcmRlciB0aGF0IGl0IG1heSBub3QgZmFsbCBvdmVyIHRoZQphcm0gd2hlbiB3ZSBhcmUgcGxlYWRpbmcsIGFuZCB0aGUgZm9sZCBzaG91bGQgYmUKdGhyb3duIG92ZXIgdGhlIHNob3VsZGVyLCB3aGlsZSBpdCB3aWxsIG5vdCBiZQp1bmJlY29taW5nIGlmIHRoZSBlZGdlIGJlIHR1cm5lZCBiYWNrLjwvdHJhbnNsYXRpb24+"
translation['11.6.141'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDEiIHVuaXQ9InNlY3Rpb24iIC8+IE9uIHRoZQpvdGhlciBoYW5kLCB3ZSBzaG91bGQgbm90IGNvdmVyIHRoZSBzaG91bGRlciBhbmQKdGhlIHdob2xlIG9mIHRoZSB0aHJvYXQsIG90aGVyd2lzZSBvdXIgZHJlc3Mgd2lsbCBiZQp1bmR1bHkgbmFycm93ZWQgYW5kIHdpbGwgbG9zZSB0aGUgaW1wcmVzc2l2ZSBlZmZlY3QKcHJvZHVjZWQgYnkgYnJlYWR0aCBhdCB0aGUgY2hlc3QuIFRpcmUgbGVmdCBhcm0Kc2hvdWxkIG9ubHkgYmUgcmFpc2VkIHNvIGZhciBhcyB0byBmb3JtIGEgcmlnaHQgYW5nbGUKYXQgdGhlIGVsYm93LCB3aGlsZSB0aGUgZWRnZSBvZiB0aGUgdG9nYSBzaG91bGQgZmFsbAppbiBlcXVhbCBsZW5ndGhzIG9uIGVpdGhlciBzaWRlLjwvdHJhbnNsYXRpb24+"
translation['11.6.142'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDIiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBoYW5kIHNob3VsZApub3QgYmUgb3ZlcmxvYWRlZCB3aXRoIHJpbmdzLCB3aGljaCBzaG91bGQgdW5kZXIgbm8KY2lyY3Vtc3RhbmNlcyBlbmNyb2FjaCB1cG9uIHRoZSBtaWRkbGUgam9pbnQgb2YKdGhlIGZpbmdlci4gVGhlIG1vc3QgYmVjb21pbmcgYXR0aXR1ZGUgZm9yIHRoZQpoYW5kIGlzIHByb2R1Y2VkIGJ5IHJhaXNpbmcgdGhlIHRodW1iIGFuZCBzbGlnaHRseQpjdXJ2aW5nIHRoZSBmaW5nZXJzLCB1bmxlc3MgaXQgaXMgb2NjdXBpZWQgd2l0aCBob2xkaW5nIG1hbnVzY3JpcHQuIEJ1dCB3ZSBzaG91bGQgbm90IGdvIG91dCBvZiBvdXIKd2F5IHRvIGNhcnJ5IHRoZSBsYXR0ZXIsIGZvciBpdCBzdWdnZXN0cyBhbiBhY2tub3dsZWRnZW1lbnQgdGhhdCB3ZSBkbyBub3QgdHJ1c3Qgb3VyIG1lbW9yeSwgYW5kIGlzCmEgaGluZHJhbmNlIHRvIGEgbnVtYmVyIG9mIGdlc3R1cmVzLjwvdHJhbnNsYXRpb24+"
translation['11.6.143'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDMiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBhbmNpZW50cwp1c2VkIHRvIGxldCB0aGUgdG9nYSBmYWxsIHRvIHRoZSBoZWVscywgYXMgdGhlIEdyZWVrcwphcmUgaW4gdGhlIGhhYml0IG9mIGRvaW5nIHdpdGggdGhlIGNsb2FrOiBQbG90aXVzCmFuZCBOaWdpZGl1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5QbG90aW5zIEdhbGx1cywgYSByaGV0b3JpY2lhbiwgYW5kIE5pZ2lkaXVzIEZpZ3VsdXMsIGFuCmVuY3ljbG9wYWVkaWMgd3JpdGVyLCBib3RoIGNvbnRlbXBvcmFyaWVzIG9mIENpY2Vyby48L25vdGU+IGJvdGggcmVjb21tZW5kIHRoaXMgaW4gdGhlIGJvb2tzCndoaWNoIHRoZXkgd3JvdGUgYWJvdXQgZ2VzdHVyZSBhcyBwcmFjdGlzZWQgaW4KdGhlaXIgb3duIGRheS4gSSBhbSBjb25zZXF1ZW50bHkgYWxsIHRoZSBtb3JlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4zMjMiIC8+CgpzdXJwcmlzZWQgYXQgdGhlIHZpZXcgZXhwcmVzc2VkIGJ5IHNvIGxlYXJuZWQgYQptYW4gYXMgUGxpbml1cyBTZWN1bmR1cywgZXNwZWNpYWxseSBzaW5jZSBpdCBvY2N1cnMKaW4gYSBib29rIHdoaWNoIGNhcnJpZXMgbWludXRlIHJlc2VhcmNoIGFsbW9zdCB0bwpleGNlc3M6PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRoaXMgd29yayBvZiB0aGUgZWxkZXIgUGxpbnkgd2FzIGNhbGxlZCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5TdHVkaXVzdXMuPC9oaT48L25vdGU+IGZvciBoZSBhc3NlcnRzIHRoYXQgQ2ljZXJvIHdhcyBpbiB0aGUKaGFiaXQgb2Ygd2VhcmluZyBoaXMgdG9nYSBpbiBzdWNoIGEgZmFzaGlvbiB0byBjb25jZWFsIGhpcyB2YXJpY29zZSB2ZWlucywgZGVzcGl0ZSB0aGUgZmFjdCB0aGF0IHRoaXMKZmFzaGlvbiBpcyB0byBiZSBzZWVuIGluIHRoZSBzdGF0dWVzIG9mIHBlcnNvbnMgd2hvCmxpdmVkIGFmdGVyIENpY2VybydzIGRheS48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5TdHVkaXVzdXMuPC9oaT48L3RyYW5zbGF0aW9uPg=="
translation['11.6.144'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDQiIHVuaXQ9InNlY3Rpb24iIC8+IEFzIHJlZ2FyZHMgdGhlIHNob3J0IGNsb2FrLApiYW5kYWdlcyB1c2VkIHRvIHByb3RlY3QgdGhlIGxlZ3MsIG11ZmZsZXJzIGFuZApjb3ZlcmluZ3MgZm9yIHRoZSBlYXJzLCBub3RoaW5nIHNob3J0IG9mIGlsbC1oZWFsdGgKY2FuIGV4Y3VzZSB0aGVpciB1c2UuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgc3VjaCBhdHRlbnRpb24gdG8gb3VyIGRyZXNzIGlzIG9ubHkgcG9zc2libGUgYXQKdGhlIGJlZ2lubmluZyBvZiBhIHNwZWVjaCwgc2luY2UsIGFzIHRoZSBwbGVhZGluZwpkZXZlbG9wcywgaW4gZmFjdCwgYWxtb3N0IGZyb20gdGhlIGJlZ2lubmluZyBvZiB0aGUKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3RhdGVtZW50IG9mIGZhY3RzLDwvaGk+IHRoZSBmb2xkIHdpbGwgc2xpcCBkb3duIGZyb20gdGhlCnNob3VsZGVyIHF1aXRlIG5hdHVyYWxseSBhbmQgYXMgaXQgd2VyZSBvZiBpdHMgb3duCmFjY29yZCwgd2hpbGUgd2hlbiB3ZSBjb21lIHRvIGFyZ3VtZW50cyBhbmQKY29tbW9ucGxhY2VzLCBpdCB3aWxsIGJlIGZvdW5kIGNvbnZlbmllbnQgdG8gdGhyb3cKYmFjayB0aGUgdG9nYSBmcm9tIHRoZSBsZWZ0IHNob3VsZGVyLCBhbmQgZXZlbiB0bwp0aHJvdyBkb3duIHRoZSBmb2xkIGlmIGl0IHNob3VsZCBzdGljay48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTQ1IiB1bml0PSJzZWN0aW9uIiAvPiBUaGUgbGVmdApoYW5kIG1heSBiZSBlbXBsb3llZCB0byBwbHVjayB0aGUgdG9nYSBmcm9tIHRoZQp0aHJvYXQgYW5kIHRoZSB1cHBlciBwb3J0aW9uIG9mIHRoZSBjaGVzdCwgZm9yIGJ5Cm5vdyB0aGUgd2hvbGUgYm9keSB3aWxsIGJlIGhvdC4gQW5kIGp1c3QgYXMgYXQKdGhpcyBwb2ludCB0aGUgdm9pY2UgYmVjb21lcyBtb3JlIHZlaGVtZW50IGFuZAptb3JlIHZhcmllZCBpbiBpdHMgdXR0ZXJhbmNlLCBzbyB0aGUgY2xvdGhpbmcgYmVnaW5zCnRvIGFzc3VtZSBzb21ldGhpbmcgb2YgYSBjb21iYXRpdmUgcG9zZS48bWlsZXN0b25lIG49IjE0NiIgdW5pdD0ic2VjdGlvbiIgLz4gQ29uc2VxdWVudGx5LCBhbHRob3VnaCB0byB3cmFwIHRoZSB0b2dhIHJvdW5kIHRoZSBsZWZ0CmhhbmQgb3IgdG8gcHVsbCBpdCBhYm91dCB1cyBhcyBhIGdpcmRsZSB3b3VsZCBiZQphbG1vc3QgYSBzeW1wdG9tIG9mIG1hZG5lc3MsIHdoaWxlIHRvIHRocm93IGJhY2sKdGhlIGZvbGQgZnJvbSBpdHMgYm90dG9tIG92ZXIgdGhlIHJpZ2h0IHNob3VsZGVyCndvdWxkIGJlIGEgZm9wcGlzaCBhbmQgZWZmZW1pbmF0ZSBnZXN0dXJlLCBhbmQKdGhlcmUgYXJlIHlldCB3b3JzZSBlZmZlY3RzIHRoYW4gdGhlc2UsIHRoZXJlIGlzLCBhdAphbnkgcmF0ZSwgbm8gcmVhc29uIHdoeSB3ZSBzaG91bGQgbm90IHBsYWNlIHRoZQpsb29zZXIgcG9ydGlvbnMgb2YgdGhlIGZvbGQgdW5kZXIgdGhlIGxlZnQgYXJtLCBzaW5jZQoKPHBiIGlkPSJwLjMyNSIgLz4KCml0IGdpdmVzIGFuIGFpciBvZiB2aWdvdXIgYW5kIGZyZWVkb20gbm90IGlsbC1zdWl0ZWQKdG8gdGhlIHdhcm10aCBhbmQgZW5lcmd5IG9mIG91ciBhY3Rpb24uPG1pbGVzdG9uZSBuPSIxNDciIHVuaXQ9InNlY3Rpb24iIC8+IFdoZW4sCmhvd2V2ZXIsIG91ciBzcGVlY2ggZHJhd3MgbmVhciBpdHMgY2xvc2UsIG1vcmUKZXNwZWNpYWxseSBpZiBmb3J0dW5lIHNob3dzIGhlcnNlbGYga2luZCwgcHJhY3RpY2FsbHkKZXZlcnl0aGluZyBpcyBiZWNvbWluZzsgd2UgbWF5IHN0cmVhbSB3aXRoIHN3ZWF0LApzaG93IHNpZ25zIG9mIGZhdGlndWUsIGFuZCBsZXQgb3VyIGRyZXNzIGZhbGwgaW4gY2FyZWxlc3MgZGlzb3JkZXIgYW5kIHRoZSB0b2dhIHNsaXAgbG9vc2UgZnJvbSB1cyBvbgpldmVyeSBzaWRlLjxtaWxlc3RvbmUgbj0iMTQ4IiB1bml0PSJzZWN0aW9uIiAvPiBUaGlzIGZhY3QgbWFrZXMgbWUgYWxsIHRoZSBtb3JlIHN1cnByaXNlZCB0aGF0IFBsaW55IHNob3VsZCB0aGluayBpdCB3b3J0aCB3aGlsZSB0bwplbmpvaW4gdGhlIG9yYXRvciB0byBkcnkgaGlzIGJyb3cgd2l0aCBhIGhhbmRrZXJjaGllZiBpbiBzdWNoIGEgd2F5IGFzIG5vdCB0byBkaXNvcmRlciB0aGUgaGFpciwKYWx0aG91Z2ggYSBsaXR0bGUgbGF0ZXIgaGUgbW9zdCBwcm9wZXJseSwgYW5kIHdpdGggYQpjZXJ0YWluIGdyYXZpdHkgYW5kIHN0ZXJubmVzcyBvZiBsYW5ndWFnZSwgZm9yYmlkcwp1cyB0byByZWFycmFuZ2UgaXQuIEZvciBteSBvd24gcGFydCwgSSBmZWVsIHRoYXQKZGlzaGV2ZWxsZWQgbG9ja3MgbWFrZSBhbiBhZGRpdGlvbmFsIGFwcGVhbCB0byB0aGUKZW1vdGlvbnMsIGFuZCB0aGF0IG5lZ2xlY3Qgb2Ygc3VjaCBwcmVjYXV0aW9ucwpjcmVhdGVzIGEgcGxlYXNpbmcgaW1wcmVzc2lvbi48bWlsZXN0b25lIG49IjE0OSIgdW5pdD0ic2VjdGlvbiIgLz4gT24gdGhlIG90aGVyIGhhbmQsCmlmIHRoZSB0b2dhIGZhbGxzIGRvd24gYXQgdGhlIGJlZ2lubmluZyBvZiBvdXIKc3BlZWNoLCBvciB3aGVuIHdlIGhhdmUgb25seSBwcm9jZWVkZWQgYnV0IGEgbGl0dGxlCndheSwgdGhlIGZhaWx1cmUgdG8gcmVwbGFjZSBpdCBpcyBhIHNpZ24gb2YgaW5kaWZmZXJlbmNlLApvciBzbG90aCwgb3Igc2hlZXIgaWdub3JhbmNlIG9mIHRoZSB3YXkgaW4gd2hpY2gKY2xvdGhlcyBzaG91bGQgYmUgd29ybi48L3A+CjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnN0YXRlbWVudCBvZiBmYWN0cyw8L2hpPiB0aGUgZm9sZCB3aWxsIHNsaXAgZG93biBmcm9tIHRoZQpzaG91bGRlciBxdWl0ZSBuYXR1cmFsbHkgYW5kIGFzIGl0IHdlcmUgb2YgaXRzIG93bgphY2NvcmQsIHdoaWxlIHdoZW4gd2UgY29tZSB0byBhcmd1bWVudHMgYW5kCmNvbW1vbnBsYWNlcywgaXQgd2lsbCBiZSBmb3VuZCBjb252ZW5pZW50IHRvIHRocm93CmJhY2sgdGhlIHRvZ2EgZnJvbSB0aGUgbGVmdCBzaG91bGRlciwgYW5kIGV2ZW4gdG8KdGhyb3cgZG93biB0aGUgZm9sZCBpZiBpdCBzaG91bGQgc3RpY2suPC90cmFuc2xhdGlvbj4="
translation['11.6.145'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDUiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBsZWZ0CmhhbmQgbWF5IGJlIGVtcGxveWVkIHRvIHBsdWNrIHRoZSB0b2dhIGZyb20gdGhlCnRocm9hdCBhbmQgdGhlIHVwcGVyIHBvcnRpb24gb2YgdGhlIGNoZXN0LCBmb3IgYnkKbm93IHRoZSB3aG9sZSBib2R5IHdpbGwgYmUgaG90LiBBbmQganVzdCBhcyBhdAp0aGlzIHBvaW50IHRoZSB2b2ljZSBiZWNvbWVzIG1vcmUgdmVoZW1lbnQgYW5kCm1vcmUgdmFyaWVkIGluIGl0cyB1dHRlcmFuY2UsIHNvIHRoZSBjbG90aGluZyBiZWdpbnMKdG8gYXNzdW1lIHNvbWV0aGluZyBvZiBhIGNvbWJhdGl2ZSBwb3NlLjwvdHJhbnNsYXRpb24+"
translation['11.6.146'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDYiIHVuaXQ9InNlY3Rpb24iIC8+IENvbnNlcXVlbnRseSwgYWx0aG91Z2ggdG8gd3JhcCB0aGUgdG9nYSByb3VuZCB0aGUgbGVmdApoYW5kIG9yIHRvIHB1bGwgaXQgYWJvdXQgdXMgYXMgYSBnaXJkbGUgd291bGQgYmUKYWxtb3N0IGEgc3ltcHRvbSBvZiBtYWRuZXNzLCB3aGlsZSB0byB0aHJvdyBiYWNrCnRoZSBmb2xkIGZyb20gaXRzIGJvdHRvbSBvdmVyIHRoZSByaWdodCBzaG91bGRlcgp3b3VsZCBiZSBhIGZvcHBpc2ggYW5kIGVmZmVtaW5hdGUgZ2VzdHVyZSwgYW5kCnRoZXJlIGFyZSB5ZXQgd29yc2UgZWZmZWN0cyB0aGFuIHRoZXNlLCB0aGVyZSBpcywgYXQKYW55IHJhdGUsIG5vIHJlYXNvbiB3aHkgd2Ugc2hvdWxkIG5vdCBwbGFjZSB0aGUKbG9vc2VyIHBvcnRpb25zIG9mIHRoZSBmb2xkIHVuZGVyIHRoZSBsZWZ0IGFybSwgc2luY2UKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjMyNSIgLz4KCml0IGdpdmVzIGFuIGFpciBvZiB2aWdvdXIgYW5kIGZyZWVkb20gbm90IGlsbC1zdWl0ZWQKdG8gdGhlIHdhcm10aCBhbmQgZW5lcmd5IG9mIG91ciBhY3Rpb24uPC90cmFuc2xhdGlvbj4="
translation['11.6.147'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDciIHVuaXQ9InNlY3Rpb24iIC8+IFdoZW4sCmhvd2V2ZXIsIG91ciBzcGVlY2ggZHJhd3MgbmVhciBpdHMgY2xvc2UsIG1vcmUKZXNwZWNpYWxseSBpZiBmb3J0dW5lIHNob3dzIGhlcnNlbGYga2luZCwgcHJhY3RpY2FsbHkKZXZlcnl0aGluZyBpcyBiZWNvbWluZzsgd2UgbWF5IHN0cmVhbSB3aXRoIHN3ZWF0LApzaG93IHNpZ25zIG9mIGZhdGlndWUsIGFuZCBsZXQgb3VyIGRyZXNzIGZhbGwgaW4gY2FyZWxlc3MgZGlzb3JkZXIgYW5kIHRoZSB0b2dhIHNsaXAgbG9vc2UgZnJvbSB1cyBvbgpldmVyeSBzaWRlLjwvdHJhbnNsYXRpb24+"
translation['11.6.148'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDgiIHVuaXQ9InNlY3Rpb24iIC8+IFRoaXMgZmFjdCBtYWtlcyBtZSBhbGwgdGhlIG1vcmUgc3VycHJpc2VkIHRoYXQgUGxpbnkgc2hvdWxkIHRoaW5rIGl0IHdvcnRoIHdoaWxlIHRvCmVuam9pbiB0aGUgb3JhdG9yIHRvIGRyeSBoaXMgYnJvdyB3aXRoIGEgaGFuZGtlcmNoaWVmIGluIHN1Y2ggYSB3YXkgYXMgbm90IHRvIGRpc29yZGVyIHRoZSBoYWlyLAphbHRob3VnaCBhIGxpdHRsZSBsYXRlciBoZSBtb3N0IHByb3Blcmx5LCBhbmQgd2l0aCBhCmNlcnRhaW4gZ3Jhdml0eSBhbmQgc3Rlcm5uZXNzIG9mIGxhbmd1YWdlLCBmb3JiaWRzCnVzIHRvIHJlYXJyYW5nZSBpdC4gRm9yIG15IG93biBwYXJ0LCBJIGZlZWwgdGhhdApkaXNoZXZlbGxlZCBsb2NrcyBtYWtlIGFuIGFkZGl0aW9uYWwgYXBwZWFsIHRvIHRoZQplbW90aW9ucywgYW5kIHRoYXQgbmVnbGVjdCBvZiBzdWNoIHByZWNhdXRpb25zCmNyZWF0ZXMgYSBwbGVhc2luZyBpbXByZXNzaW9uLjwvdHJhbnNsYXRpb24+"
translation['11.6.149'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDkiIHVuaXQ9InNlY3Rpb24iIC8+IE9uIHRoZSBvdGhlciBoYW5kLAppZiB0aGUgdG9nYSBmYWxscyBkb3duIGF0IHRoZSBiZWdpbm5pbmcgb2Ygb3VyCnNwZWVjaCwgb3Igd2hlbiB3ZSBoYXZlIG9ubHkgcHJvY2VlZGVkIGJ1dCBhIGxpdHRsZQp3YXksIHRoZSBmYWlsdXJlIHRvIHJlcGxhY2UgaXQgaXMgYSBzaWduIG9mIGluZGlmZmVyZW5jZSwKb3Igc2xvdGgsIG9yIHNoZWVyIGlnbm9yYW5jZSBvZiB0aGUgd2F5IGluIHdoaWNoCmNsb3RoZXMgc2hvdWxkIGJlIHdvcm4uPHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUgYWJvdmUgYXJlIHRoZSBjaGllZiBhZG9ybm1lbnRzIGFuZCBmYXVsdHMKb2YgZGVsaXZlcnkuIEJ1dCB0aGVyZSBhcmUgYSBudW1iZXIgb2YgZnVydGhlcgpjb25zaWRlcmF0aW9ucyB3aGljaCB0aGUgb3JhdG9yIG11c3QgYmVhciBpbiBtaW5kLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTUwIiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSBmaXJzdCBwbGFjZSB0aGVyZSBpcyB0aGUgcXVlc3Rpb24gYXMgdG8gdGhlCmNoYXJhY3RlciBvZiBzcGVha2VyLCBqdWRnZXMgYW5kIGF1ZGllbmNlLiBGb3IKanVzdCBhcyB0aGUgbWV0aG9kcyBvZiBzcGVha2luZyBtYXkganVzdGlmaWFibHkgYmUKdmFyaWVkIHRvIHN1aXQgdGhlIGNoYXJhY3RlcmlzdGljcyBvZiBkaWZmZXJlbnQgb3JhdG9ycwphbmQgZGlmZmVyZW50IGp1ZGdlcywgc28gaXQgaXMgd2l0aCBkZWxpdmVyeS4gVGhlCnNhbWUgY2hhcmFjdGVyaXN0aWNzIG9mIHZvaWNlLCBnZXN0dXJlIGFuZCBnYWl0IGFyZQpub3QgZXF1YWxseSBiZWNvbWluZyBpbiB0aGUgcHJlc2VuY2Ugb2YgdGhlCmVtcGVyb3IsIHRoZSBzZW5hdGUsIHRoZSBwZW9wbGUsIGFuZCBtYWdpc3RyYXRlcywKb3IgaW4gcHJpdmF0ZSBhbmQgcHVibGljIHRyaWFscywgb3IgaW4gbWFraW5nIGEKCjxwYiBpZD0icC4zMjciIC8+CgpyZXF1ZXN0IHRvIHRoZSBwcmFldG9yIGZvciB0aGUgYXBwb2ludG1lbnQgb2YgYSBqdWRnZQp0byBoZWFyIG91ciBjYXNlLCBhbmQgaW4gYWN0dWFsIHBsZWFkaW5nLiBBbnlvbmUKd2hvIHdpbGwgcmVmbGVjdCB1cG9uIHRoZSBtYXR0ZXIgd2lsbCByZWFsaXNlIHRoZQpuYXR1cmUgb2YgdGhlIGRpZmZlcmVuY2VzIGludm9sdmVkLCBhcyBoZSB3aWxsIGFsc28gYmUKYWJsZSB0byByZWFsaXNlIHRoZSBuYXR1cmUgb2YgdGhlIHN1YmplY3Qgb24gd2hpY2gKaGUgaXMgc3BlYWtpbmcgYW5kIHRoZSBlZmZlY3Qgd2hpY2ggaGUgZGVzaXJlcyB0bwpwcm9kdWNlLjxtaWxlc3RvbmUgbj0iMTUxIiB1bml0PSJzZWN0aW9uIiAvPiBUaGUgY29uc2lkZXJhdGlvbnMgd2l0aCByZWdhcmQgdG8gdGhlCnN1YmplY3QgYXJlIGZvdXIgaW4gbnVtYmVyLCBvZiB3aGljaCB0aGUgZmlyc3QgaGFzCnJlZmVyZW5jZSB0byB0aGUgY2FzZSBhcyBhIHdob2xlLiBGb3IgdGhlIGNhc2UgbWF5CmJlIG9mIGEgZ2xvb215IG9yIGEgY2hlZXJmdWwgbmF0dXJlLCBhbiBhbnhpb3VzCmJ1c2luZXNzLCBvciBvbmUgdGhhdCBjYWxscyBmb3Igbm8gYWxhcm0sIGFuZCBtYXkKaW52b2x2ZSBpc3N1ZXMgb2YgZ3JlYXQgb3IgdHJpdmlhbCBpbXBvcnRhbmNlLiBXZQpvdWdodCwgdGhlcmVmb3JlLCBuZXZlciB0byBiZSBzbyBwcmVvY2N1cGllZCBvdmVyCnBhcnRpY3VsYXIgcG9ydGlvbnMgb2YgYSBjYXNlIGFzIHRvIGZvcmdldCB0byBjb25zaWRlcgp0aGUgY2FzZSBhcyBhIHdob2xlLjxtaWxlc3RvbmUgbj0iMTUyIiB1bml0PSJzZWN0aW9uIiAvPiBUaGUgc2Vjb25kIHBvaW50IGlzIGNvbmNlcm5lZAp3aXRoIHRoZSBkaWZmZXJlbnQgYXNwZWN0cyBvZiB0aGUgdmFyaW91cyBwb3J0aW9ucyBvZgp0aGUgc3BlZWNoLCB0aGF0IGlzLCB0aGUgPGhpIHJlbmQ9Iml0YWxpY3MiPmV4b3JkaXVtLCBzdGF0ZW1lbnQgb2YgZmFjdHMsCmFyZ3VtZW50czwvaGk+IGFuZCA8aGkgcmVuZD0iaXRhbGljcyI+cGVyb3JhdGlvbi48L2hpPiBUaGUgdGhpcmQgY29uY2VybnMgdGhlCnRob3VnaHRzLCB3aGljaCB3aWxsIHZhcnkgYWNjb3JkaW5nIHRvIHRoZSBzdWJqZWN0Cm1hdHRlciBhbmQgdGhlIGVtb3Rpb25zIHdoaWNoIHdlIHJlcXVpcmUgdG8KYXdha2VuLiBUaGUgZm91cnRoIGhhcyByZWZlcmVuY2UgdG8gdGhlIHdvcmRzLAp3aGljaCBtdXN0IGJlIGdpdmVuIGFwcHJvcHJpYXRlIGV4cHJlc3Npb24sIHVubGVzcwp0aGVpciBmb3JjZSBpcyB0byBiZSBlbnRpcmVseSB3YXN0ZWQsIGFsdGhvdWdoIGl0IGlzIGFuCmVycm9yIHRvIGF0dGVtcHQgdG8gbWFrZSBvdXIgZGVsaXZlcnkgcmVwcm9kdWNlIHRoZQpzZW5zZSBvZiBldmVyeSBzaW5nbGUgd29yZC48bWlsZXN0b25lIG49IjE1MyIgdW5pdD0ic2VjdGlvbiIgLz4gQ29uc2VxdWVudGx5LCBpbiBwYW5lZ3lyaWMsIGZ1bmVyYWwgb3JhdGlvbnMgZXhjZXB0ZWQsIGluIHJldHVybmluZyB0aGFua3MsCmV4aG9ydGF0aW9ucyBhbmQgdGhlIGxpa2UsIHRoZSBkZWxpdmVyeSBtdXN0IGJlCmx1eHVyaWFudCwgbWFnbmlmaWNlbnQsIGFuZCBncmFuZC4gT24gdGhlIG90aGVyCmhhbmQsIGluIGZ1bmVyYWwgb3IgY29uc29sYXRvcnkgc3BlZWNoZXMsIHRvZ2V0aGVyCndpdGggbW9zdCBvZiB0aG9zZSBpbiBkZWZlbmNlIG9mIGFjY3VzZWQgcGVyc29ucywKdGhlIGRlbGl2ZXJ5IHdpbGwgYmUgbWVsYW5jaG9seSBhbmQgc3ViZHVlZC4KV2hlbiB3ZSBzcGVhayBpbiB0aGUgc2VuYXRlLCBpdCB3aWxsIGJlIGF1dGhvcml0YXRpdmUsIHdoZW4gd2UgYWRkcmVzcyB0aGUgcGVvcGxlLCBkaWduaWZpZWQsIGFuZAp3aGVuIHdlIGFyZSBwbGVhZGluZyBpbiBwcml2YXRlIGNhc2VzLCByZXN0cmFpbmVkLgoKPHBiIGlkPSJwLjMyOSIgLz4KCkFzIHJlZ2FyZHMgdGhlIHJlc3BlY3RpdmUgcG9ydGlvbnMgb2Ygc3BlZWNoZXMsCnRob3VnaHRzIGFuZCB3b3JkcywgSSBtdXN0IHNwZWFrIGF0IHNvbWV3aGF0CmdyZWF0ZXIgbGVuZ3RoLCBhcyB0aGUgcHJvYmxlbXMgaW52b2x2ZWQgYXJlIG1hbmlmb2xkLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['11.6.150'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNTAiIHVuaXQ9InNlY3Rpb24iIC8+SW4gdGhlIGZpcnN0IHBsYWNlIHRoZXJlIGlzIHRoZSBxdWVzdGlvbiBhcyB0byB0aGUKY2hhcmFjdGVyIG9mIHNwZWFrZXIsIGp1ZGdlcyBhbmQgYXVkaWVuY2UuIEZvcgpqdXN0IGFzIHRoZSBtZXRob2RzIG9mIHNwZWFraW5nIG1heSBqdXN0aWZpYWJseSBiZQp2YXJpZWQgdG8gc3VpdCB0aGUgY2hhcmFjdGVyaXN0aWNzIG9mIGRpZmZlcmVudCBvcmF0b3JzCmFuZCBkaWZmZXJlbnQganVkZ2VzLCBzbyBpdCBpcyB3aXRoIGRlbGl2ZXJ5LiBUaGUKc2FtZSBjaGFyYWN0ZXJpc3RpY3Mgb2Ygdm9pY2UsIGdlc3R1cmUgYW5kIGdhaXQgYXJlCm5vdCBlcXVhbGx5IGJlY29taW5nIGluIHRoZSBwcmVzZW5jZSBvZiB0aGUKZW1wZXJvciwgdGhlIHNlbmF0ZSwgdGhlIHBlb3BsZSwgYW5kIG1hZ2lzdHJhdGVzLApvciBpbiBwcml2YXRlIGFuZCBwdWJsaWMgdHJpYWxzLCBvciBpbiBtYWtpbmcgYQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzI3IiAvPgoKcmVxdWVzdCB0byB0aGUgcHJhZXRvciBmb3IgdGhlIGFwcG9pbnRtZW50IG9mIGEganVkZ2UKdG8gaGVhciBvdXIgY2FzZSwgYW5kIGluIGFjdHVhbCBwbGVhZGluZy4gQW55b25lCndobyB3aWxsIHJlZmxlY3QgdXBvbiB0aGUgbWF0dGVyIHdpbGwgcmVhbGlzZSB0aGUKbmF0dXJlIG9mIHRoZSBkaWZmZXJlbmNlcyBpbnZvbHZlZCwgYXMgaGUgd2lsbCBhbHNvIGJlCmFibGUgdG8gcmVhbGlzZSB0aGUgbmF0dXJlIG9mIHRoZSBzdWJqZWN0IG9uIHdoaWNoCmhlIGlzIHNwZWFraW5nIGFuZCB0aGUgZWZmZWN0IHdoaWNoIGhlIGRlc2lyZXMgdG8KcHJvZHVjZS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.151'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNTEiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBjb25zaWRlcmF0aW9ucyB3aXRoIHJlZ2FyZCB0byB0aGUKc3ViamVjdCBhcmUgZm91ciBpbiBudW1iZXIsIG9mIHdoaWNoIHRoZSBmaXJzdCBoYXMKcmVmZXJlbmNlIHRvIHRoZSBjYXNlIGFzIGEgd2hvbGUuIEZvciB0aGUgY2FzZSBtYXkKYmUgb2YgYSBnbG9vbXkgb3IgYSBjaGVlcmZ1bCBuYXR1cmUsIGFuIGFueGlvdXMKYnVzaW5lc3MsIG9yIG9uZSB0aGF0IGNhbGxzIGZvciBubyBhbGFybSwgYW5kIG1heQppbnZvbHZlIGlzc3VlcyBvZiBncmVhdCBvciB0cml2aWFsIGltcG9ydGFuY2UuIFdlCm91Z2h0LCB0aGVyZWZvcmUsIG5ldmVyIHRvIGJlIHNvIHByZW9jY3VwaWVkIG92ZXIKcGFydGljdWxhciBwb3J0aW9ucyBvZiBhIGNhc2UgYXMgdG8gZm9yZ2V0IHRvIGNvbnNpZGVyCnRoZSBjYXNlIGFzIGEgd2hvbGUuPC90cmFuc2xhdGlvbj4="
translation['11.6.152'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNTIiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBzZWNvbmQgcG9pbnQgaXMgY29uY2VybmVkCndpdGggdGhlIGRpZmZlcmVudCBhc3BlY3RzIG9mIHRoZSB2YXJpb3VzIHBvcnRpb25zIG9mCnRoZSBzcGVlY2gsIHRoYXQgaXMsIHRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5leG9yZGl1bSwgc3RhdGVtZW50IG9mIGZhY3RzLAphcmd1bWVudHM8L2hpPiBhbmQgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cGVyb3JhdGlvbi48L2hpPiBUaGUgdGhpcmQgY29uY2VybnMgdGhlCnRob3VnaHRzLCB3aGljaCB3aWxsIHZhcnkgYWNjb3JkaW5nIHRvIHRoZSBzdWJqZWN0Cm1hdHRlciBhbmQgdGhlIGVtb3Rpb25zIHdoaWNoIHdlIHJlcXVpcmUgdG8KYXdha2VuLiBUaGUgZm91cnRoIGhhcyByZWZlcmVuY2UgdG8gdGhlIHdvcmRzLAp3aGljaCBtdXN0IGJlIGdpdmVuIGFwcHJvcHJpYXRlIGV4cHJlc3Npb24sIHVubGVzcwp0aGVpciBmb3JjZSBpcyB0byBiZSBlbnRpcmVseSB3YXN0ZWQsIGFsdGhvdWdoIGl0IGlzIGFuCmVycm9yIHRvIGF0dGVtcHQgdG8gbWFrZSBvdXIgZGVsaXZlcnkgcmVwcm9kdWNlIHRoZQpzZW5zZSBvZiBldmVyeSBzaW5nbGUgd29yZC48L3RyYW5zbGF0aW9uPg=="
translation['11.6.153'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNTMiIHVuaXQ9InNlY3Rpb24iIC8+IENvbnNlcXVlbnRseSwgaW4gcGFuZWd5cmljLCBmdW5lcmFsIG9yYXRpb25zIGV4Y2VwdGVkLCBpbiByZXR1cm5pbmcgdGhhbmtzLApleGhvcnRhdGlvbnMgYW5kIHRoZSBsaWtlLCB0aGUgZGVsaXZlcnkgbXVzdCBiZQpsdXh1cmlhbnQsIG1hZ25pZmljZW50LCBhbmQgZ3JhbmQuIE9uIHRoZSBvdGhlcgpoYW5kLCBpbiBmdW5lcmFsIG9yIGNvbnNvbGF0b3J5IHNwZWVjaGVzLCB0b2dldGhlcgp3aXRoIG1vc3Qgb2YgdGhvc2UgaW4gZGVmZW5jZSBvZiBhY2N1c2VkIHBlcnNvbnMsCnRoZSBkZWxpdmVyeSB3aWxsIGJlIG1lbGFuY2hvbHkgYW5kIHN1YmR1ZWQuCldoZW4gd2Ugc3BlYWsgaW4gdGhlIHNlbmF0ZSwgaXQgd2lsbCBiZSBhdXRob3JpdGF0aXZlLCB3aGVuIHdlIGFkZHJlc3MgdGhlIHBlb3BsZSwgZGlnbmlmaWVkLCBhbmQKd2hlbiB3ZSBhcmUgcGxlYWRpbmcgaW4gcHJpdmF0ZSBjYXNlcywgcmVzdHJhaW5lZC4KCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjMyOSIgLz4KCkFzIHJlZ2FyZHMgdGhlIHJlc3BlY3RpdmUgcG9ydGlvbnMgb2Ygc3BlZWNoZXMsCnRob3VnaHRzIGFuZCB3b3JkcywgSSBtdXN0IHNwZWFrIGF0IHNvbWV3aGF0CmdyZWF0ZXIgbGVuZ3RoLCBhcyB0aGUgcHJvYmxlbXMgaW52b2x2ZWQgYXJlIG1hbmlmb2xkLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE1NCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBhcmUgdGhyZWUgcXVhbGl0aWVzIHdoaWNoIGRlbGl2ZXJ5IHNob3VsZApwb3NzZXNzLiBJdCBzaG91bGQgYmUgY29uY2lsaWF0b3J5LCBwZXJzdWFzaXZlIGFuZAptb3ZpbmcsIGFuZCB0aGUgcG9zc2Vzc2lvbiBvZiB0aGVzZSB0aHJlZSBxdWFsaXRpZXMKaW52b2x2ZXMgY2hhcm0gYXMgYSBmdXJ0aGVyIHJlcXVpc2l0ZS4gQSBjb25jaWxpYXRvcnkKZWZmZWN0IG1heSBiZSBzZWN1cmVkIGVpdGhlciBieSBjaGFybSBvZiBzdHlsZSBvcgpieSBwcm9kdWNpbmcgYW4gaW1wcmVzc2lvbiBvZiBleGNlbGxlbmNlIG9mIGNoYXJhY3RlciwKd2hpY2ggaXMgaW4gc29tZSBteXN0ZXJpb3VzIHdheSBjbGVhcmx5IHJldmVhbGVkCmJvdGggYnkgdm9pY2UgYW5kIGdlc3R1cmUuIEEgcGVyc3Vhc2l2ZSBlZmZlY3QsIG9uCnRoZSBvdGhlciBoYW5kLCBpcyBwcm9kdWNlZCBieSB0aGUgcG93ZXIgb2YgYXNzZXJ0aW9uLAp3aGljaCBpcyBzb21ldGltZXMgbW9yZSBjb252aW5jaW5nIGV2ZW4gdGhhbiBhY3R1YWwKcHJvb2YuPG1pbGVzdG9uZSBuPSIxNTUiIHVuaXQ9InNlY3Rpb24iIC8+IDxxdW90ZT5Xb3VsZCB0aG9zZSBzdGF0ZW1lbnRzLDwvcXVvdGU+IHNheXMgQ2ljZXJvPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+QnJ1dC48L2hpPiBseHh4LiAyNzguPC9ub3RlPiB0bwpDYWxpZGl1cywgPHF1b3RlPmhhdmUgYmVlbiBkZWxpdmVyZWQgYnkgeW91IGluIHN1Y2ggYQptYW5uZXIgaWYgdGhleSBoYWQgYmVlbiB0cnVlPzwvcXVvdGU+IEFuZCBhZ2FpbiwgPHF1b3RlPllvdQp3ZXJlIGZhciBmcm9tIGtpbmRsaW5nIG91ciBlbW90aW9ucy4gSW5kZWVkLCBhdAp0aGF0IHBvaW50IG9mIHlvdXIgc3BlZWNoIHdlIGNvdWxkIHNjYXJjZWx5IGtlZXAKb3Vyc2VsdmVzIGF3YWtlLjwvcXVvdGU+IFdlIG11c3QgdGhlcmVmb3JlIHJldmVhbCBib3RoCmNvbmZpZGVuY2UgYW5kIGZpcm1uZXNzLCBhYm92ZSBhbGwsIGlmIHdlIGhhdmUgdGhlCnJlcXVpc2l0ZSBhdXRob3JpdHkgdG8gYmFjayB0aGVtLjxtaWxlc3RvbmUgbj0iMTU2IiB1bml0PSJzZWN0aW9uIiAvPiBUaGUgbWV0aG9kIG9mCmFyb3VzaW5nIHRoZSBlbW90aW9ucyBkZXBlbmRzIG9uIG91ciBwb3dlciB0bwpyZXByZXNlbnQgb3IgaW1pdGF0ZSB0aGUgcGFzc2lvbnMuIFRoZXJlZm9yZSB3aGVuCnRoZSBqdWRnZSBpbiBwcml2YXRlLCBvciB0aGUgdXNoZXIgaW4gcHVibGljIGNhc2VzLApjYWxscyB1cG9uIHVzIHRvIHNwZWFrLCB3ZSBtdXN0IHJpc2Ugd2l0aCBkZWxpYmVyYXRpb24uCldlIHNoYWxsIHRoZW4sIHRvIG1ha2Ugb3VyIGdhcmIgdGhlIG1vcmUgYmVjb21pbmcsCmFuZCB0byBzZWN1cmUgYSBtb21lbnQgZm9yIHJlZmxleGlvbiwgZGV2b3RlIGEgYnJpZWYKc3BhY2UgdG8gdGhlIGFycmFuZ2VtZW50IG9mIG91ciB0b2dhIG9yIGV2ZW4sIGlmCm5lY2Vzc2FyeSwgdG8gdGhyb3dpbmcgaXQgb24gYWZyZXNoOyBidXQgaXQgbXVzdApiZSBib3JuZSBpbiBtaW5kIHRoYXQgdGhpcyBpbmp1bmN0aW9uIGFwcGxpZXMgb25seQp0byBjYXNlcyBpbiB0aGUgY291cnRzOyBmb3IgPGhpIHJlbmQ9Iml0YWxpY3MiPndlPC9oaT4gbXVzdCBub3QgZG8gdGhpcyBpZgp3ZSBhcmUgc3BlYWtpbmcgYmVmb3JlIHRoZSBlbXBlcm9yIG9yIGEgbWFnaXN0cmF0ZSwKb3IgaW4gY2FzZXMgd2hlcmUgdGhlIGp1ZGdlIHNpdHMgaW4gYSBwb3NpdGlvbiBvZgpzdXBlcmlvciBhdXRob3JpdHkuPG1pbGVzdG9uZSBuPSIxNTciIHVuaXQ9InNlY3Rpb24iIC8+IEV2ZW4gd2hlbiB3ZSB0dXJuIHRvIHRoZSBqdWRnZSwKCjxwYiBpZD0icC4zMzEiIC8+CgphbmQgaGF2ZSByZXF1ZXN0ZWQgYW5kIHJlY2VpdmVkIHRoZSBwcmFldG9yJ3MgcGVybWlzc2lvbiB0byBhZGRyZXNzIHRoZSBjb3VydCwgd2UgbXVzdCBub3QgYnJlYWsgZm9ydGgKYXQgb25jZSBpbnRvIHNwZWVjaCwgYnV0IHNob3VsZCBhbGxvdyBvdXJzZWx2ZXMgYSBmZXcKbW9tZW50cyBmb3IgcmVmbGV4aW9uLiBGb3IgdGhlIGRpc3BsYXkgb2Ygc3VjaCBjYXJlCm9uIHRoZSBwYXJ0IG9mIG9uZSB3aG8gaXMgYWJvdXQgdG8gc3BlYWsgYXR0cmFjdHMgdGhlCmF1ZGllbmNlIGFuZCBnaXZlcyB0aGUganVkZ2UgdGltZSB0byBzZXR0bGUgZG93bi4KPG1pbGVzdG9uZSBuPSIxNTgiIHVuaXQ9InNlY3Rpb24iIC8+SG9tZXI8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5JbC48L2hpPiBpaWkuIDIxNy48L25vdGU+IGluY3VsY2F0ZXMgdGhpcyBwcmFjdGljZSBieSBwbGFjaW5nIGJlZm9yZQp1cyB0aGUgZXhhbXBsZSBvZiBVbHlzc2VzLCB3aG9tIGhlIGRlc2NyaWJlcyBhcwpoYXZpbmcgc3Rvb2QgZm9yIGEgd2hpbGUgd2l0aCBleWVzIGZpeGVkIG9uIHRoZQpncm91bmQgYW5kIHN0YWZmIGhlbGQgbW90aW9ubGVzcywgYmVmb3JlIGhlIHBvdXJlZApmb3J0aCBoaXMgd2hpcmx3aW5kIG9mIGVsb3F1ZW5jZS4gSW4gdGhpcyBwcmVsaW1pbmFyeQpkZWxheSB0aGVyZSBhcmUgY2VydGFpbiBwYXVzZXMsIGFzIHRoZSBhY3RvcnMgY2FsbAp0aGVtLCB3aGljaCBhcmUgbm90IHVuYmVjb21pbmcuIFdlIG1heSBzdHJva2UKb3VyIGhlYWQsIGxvb2sgYXQgb3VyIGhhbmQsIHdyaW5nIHRoZSBmaW5nZXJzLCBwcmV0ZW5kIHRvIHN1bW1vbiBhbGwgb3VyIGVuZXJnaWVzIGZvciB0aGUgZWZmb3J0LApjb25mZXNzIHRvIG5lcnZvdXNuZXNzIGJ5IGEgZGVlcCBzaWdoLCBvciBtYXkgYWRvcHQKYW55IG90aGVyIG1ldGhvZCBzdWl0ZWQgdG8gb3VyIGluZGl2aWR1YWwgY2hhcmFjdGVyLAp3aGlsZSB0aGVzZSBwcm9jZWVkaW5ncyBtYXkgYmUgZXh0ZW5kZWQgb3ZlciBzb21lCnRpbWUsIGlmIHdlIGZpbmQgdGhhdCB0aGUganVkZ2UgaXMgbm90IHlldCBnaXZpbmcgdXMKaGlzIGF0dGVudGlvbi48bWlsZXN0b25lIG49IjE1OSIgdW5pdD0ic2VjdGlvbiIgLz4gT3VyIGF0dGl0dWRlIHNob3VsZCBiZSB1cHJpZ2h0LCBvdXIKZmVldCBsZXZlbCBhbmQgYSBzbGlnaHQgZGlzdGFuY2UgYXBhcnQsIG9yIHRoZSBsZWZ0IG1heQpiZSB2ZXJ5IHNsaWdodGx5IGFkdmFuY2VkLiBUaGUga25lZXMgc2hvdWxkIGJlCnVwcmlnaHQsIGJ1dCBub3Qgc3RpZmY7IHRoZSBzaG91bGRlcnMgcmVsYXhlZCwgdGhlIGZhY2UKc3Rlcm4sIGJ1dCBub3Qgc2FkLCBleHByZXNzaW9ubGVzcyBvciBsYW5ndWlkOiB0aGUKYXJtcyBzaG91bGQgYmUgaGVsZCBzbGlnaHRseSBhd2F5IGZyb20gdGhlIHNpZGUsCnRoZSBsZWZ0IGhhbmQgYmVpbmcgaW4gdGhlIHBvc2l0aW9uIGRlc2NyaWJlZCBhYm92ZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlY3QuIDE0Mi48L25vdGU+CndoaWxlIHRoZSByaWdodCwgYXQgdGhlIG1vbWVudCB3aGVuIG91ciBzcGVlY2gKYmVnaW5zLCBzaG91bGQgYmUgc2xpZ2h0bHkgZXh0ZW5kZWQgYmV5b25kIHRoZSBmb2xkCm9mIHRoZSB0b2dhIHdpdGggdGhlIG1vc3QgbW9kZXN0IG9mIGdlc3R1cmVzLCBhcwp0aG91Z2ggd2FpdGluZyBmb3IgdGhlIGNvbW1lbmNlbWVudC48bWlsZXN0b25lIG49IjE2MCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGl0IGlzCmEgbWlzdGFrZSB0byBsb29rIGF0IHRoZSBjZWlsaW5nLCB0byBydWIgdGhlIGZhY2UgYW5kCmdpdmUgaXQgYSBmbHVzaCBvZiBpbXB1ZGVuY2UsIHRvIGNyYW5lIGl0IGJvbGRseSBmb3J3YXJkLCB0byBmcm93biBpbiBvcmRlciB0byBzZWN1cmUgYSBmaWVyY2UgZXhwcmVzc2lvbiwKb3IgYnJ1c2ggYmFjayB0aGUgaGFpciBmcm9tIHRoZSBmb3JlaGVhZCBhZ2FpbnN0IGl0cwoKPHBiIGlkPSJwLjMzMyIgLz4KCm5hdHVyYWwgZGlyZWN0aW9uIGluIG9yZGVyIHRvIHByb2R1Y2UgYSB0ZXJyaWZ5aW5nCmVmZmVjdCBieSBtYWtpbmcgaXQgc3RhbmQgb24gZW5kLiBBZ2FpbiwgdGhlcmUgYXJlCm90aGVyIHVuc2VlbWx5IHRyaWNrcywgc3VjaCBhcyB0aGF0IHNvIGRlYXIgdG8gdGhlCkdyZWVrcyBvZiB0d2l0Y2hpbmcgb3VyIGZpbmdlcnMgYW5kIGxpcHMgYXMgdGhvdWdoCnN0dWR5aW5nIHdoYXQgdG8gc2F5LCBjbGVhcmluZyB0aGUgdGhyb2F0IHdpdGggYQpsb3VkIG5vaXNlLCB0aHJ1c3Rpbmcgb3V0IG9uZSBmb290IHRvIGEgY29uc2lkZXJhYmxlCmRpc3RhbmNlLCBncmFzcGluZyBhIHBvcnRpb24gb2YgdGhlIHRvZ2EgaW4gdGhlIGxlZnQKaGFuZCwgc3RhbmRpbmcgd2l0aCBmZWV0IHdpZGUgYXBhcnQsIGhvbGRpbmcgb3Vyc2VsdmVzCnN0aWZmbHksIGxlYW5pbmcgYmFja3dhcmRzLCBzdG9vcGluZywgb3IgYnVuY2hpbmcgb3VyCnNob3VsZGVycyB0b3dhcmQgdGhlIGJhY2sgb2YgdGhlIGhlYWQsIGFzIHdyZXN0bGVycwpkbyB3aGVuIGFib3V0IHRvIGVuZ2FnZS48L3A+CjwvdHJhbnNsYXRpb24+"
translation['11.6.154'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNTQiIHVuaXQ9InNlY3Rpb24iIC8+VGhlcmUgYXJlIHRocmVlIHF1YWxpdGllcyB3aGljaCBkZWxpdmVyeSBzaG91bGQKcG9zc2Vzcy4gSXQgc2hvdWxkIGJlIGNvbmNpbGlhdG9yeSwgcGVyc3Vhc2l2ZSBhbmQKbW92aW5nLCBhbmQgdGhlIHBvc3Nlc3Npb24gb2YgdGhlc2UgdGhyZWUgcXVhbGl0aWVzCmludm9sdmVzIGNoYXJtIGFzIGEgZnVydGhlciByZXF1aXNpdGUuIEEgY29uY2lsaWF0b3J5CmVmZmVjdCBtYXkgYmUgc2VjdXJlZCBlaXRoZXIgYnkgY2hhcm0gb2Ygc3R5bGUgb3IKYnkgcHJvZHVjaW5nIGFuIGltcHJlc3Npb24gb2YgZXhjZWxsZW5jZSBvZiBjaGFyYWN0ZXIsCndoaWNoIGlzIGluIHNvbWUgbXlzdGVyaW91cyB3YXkgY2xlYXJseSByZXZlYWxlZApib3RoIGJ5IHZvaWNlIGFuZCBnZXN0dXJlLiBBIHBlcnN1YXNpdmUgZWZmZWN0LCBvbgp0aGUgb3RoZXIgaGFuZCwgaXMgcHJvZHVjZWQgYnkgdGhlIHBvd2VyIG9mIGFzc2VydGlvbiwKd2hpY2ggaXMgc29tZXRpbWVzIG1vcmUgY29udmluY2luZyBldmVuIHRoYW4gYWN0dWFsCnByb29mLjwvdHJhbnNsYXRpb24+"
translation['11.6.155'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNTUiIHVuaXQ9InNlY3Rpb24iIC8+IDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPldvdWxkIHRob3NlIHN0YXRlbWVudHMsPC9xdW90ZT4gc2F5cyBDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QnJ1dC48L2hpPiBseHh4LiAyNzguPC9ub3RlPiB0bwpDYWxpZGl1cywgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QnJ1dC48L2hpPiBseHh4LiAyNzguPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+aGF2ZSBiZWVuIGRlbGl2ZXJlZCBieSB5b3UgaW4gc3VjaCBhCm1hbm5lciBpZiB0aGV5IGhhZCBiZWVuIHRydWU/PC9xdW90ZT4gQW5kIGFnYWluLCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Zb3UKd2VyZSBmYXIgZnJvbSBraW5kbGluZyBvdXIgZW1vdGlvbnMuIEluZGVlZCwgYXQKdGhhdCBwb2ludCBvZiB5b3VyIHNwZWVjaCB3ZSBjb3VsZCBzY2FyY2VseSBrZWVwCm91cnNlbHZlcyBhd2FrZS48L3F1b3RlPiBXZSBtdXN0IHRoZXJlZm9yZSByZXZlYWwgYm90aApjb25maWRlbmNlIGFuZCBmaXJtbmVzcywgYWJvdmUgYWxsLCBpZiB3ZSBoYXZlIHRoZQpyZXF1aXNpdGUgYXV0aG9yaXR5IHRvIGJhY2sgdGhlbS48L3RyYW5zbGF0aW9uPg=="
translation['11.6.156'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNTYiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZSBtZXRob2Qgb2YKYXJvdXNpbmcgdGhlIGVtb3Rpb25zIGRlcGVuZHMgb24gb3VyIHBvd2VyIHRvCnJlcHJlc2VudCBvciBpbWl0YXRlIHRoZSBwYXNzaW9ucy4gVGhlcmVmb3JlIHdoZW4KdGhlIGp1ZGdlIGluIHByaXZhdGUsIG9yIHRoZSB1c2hlciBpbiBwdWJsaWMgY2FzZXMsCmNhbGxzIHVwb24gdXMgdG8gc3BlYWssIHdlIG11c3QgcmlzZSB3aXRoIGRlbGliZXJhdGlvbi4KV2Ugc2hhbGwgdGhlbiwgdG8gbWFrZSBvdXIgZ2FyYiB0aGUgbW9yZSBiZWNvbWluZywKYW5kIHRvIHNlY3VyZSBhIG1vbWVudCBmb3IgcmVmbGV4aW9uLCBkZXZvdGUgYSBicmllZgpzcGFjZSB0byB0aGUgYXJyYW5nZW1lbnQgb2Ygb3VyIHRvZ2Egb3IgZXZlbiwgaWYKbmVjZXNzYXJ5LCB0byB0aHJvd2luZyBpdCBvbiBhZnJlc2g7IGJ1dCBpdCBtdXN0CmJlIGJvcm5lIGluIG1pbmQgdGhhdCB0aGlzIGluanVuY3Rpb24gYXBwbGllcyBvbmx5CnRvIGNhc2VzIGluIHRoZSBjb3VydHM7IGZvciA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj53ZTwvaGk+IG11c3Qgbm90IGRvIHRoaXMgaWYKd2UgYXJlIHNwZWFraW5nIGJlZm9yZSB0aGUgZW1wZXJvciBvciBhIG1hZ2lzdHJhdGUsCm9yIGluIGNhc2VzIHdoZXJlIHRoZSBqdWRnZSBzaXRzIGluIGEgcG9zaXRpb24gb2YKc3VwZXJpb3IgYXV0aG9yaXR5LjwvdHJhbnNsYXRpb24+"
translation['11.6.157'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNTciIHVuaXQ9InNlY3Rpb24iIC8+IEV2ZW4gd2hlbiB3ZSB0dXJuIHRvIHRoZSBqdWRnZSwKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjMzMSIgLz4KCmFuZCBoYXZlIHJlcXVlc3RlZCBhbmQgcmVjZWl2ZWQgdGhlIHByYWV0b3IncyBwZXJtaXNzaW9uIHRvIGFkZHJlc3MgdGhlIGNvdXJ0LCB3ZSBtdXN0IG5vdCBicmVhayBmb3J0aAphdCBvbmNlIGludG8gc3BlZWNoLCBidXQgc2hvdWxkIGFsbG93IG91cnNlbHZlcyBhIGZldwptb21lbnRzIGZvciByZWZsZXhpb24uIEZvciB0aGUgZGlzcGxheSBvZiBzdWNoIGNhcmUKb24gdGhlIHBhcnQgb2Ygb25lIHdobyBpcyBhYm91dCB0byBzcGVhayBhdHRyYWN0cyB0aGUKYXVkaWVuY2UgYW5kIGdpdmVzIHRoZSBqdWRnZSB0aW1lIHRvIHNldHRsZSBkb3duLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.158'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNTgiIHVuaXQ9InNlY3Rpb24iIC8+SG9tZXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SWwuPC9oaT4gaWlpLiAyMTcuPC9ub3RlPiBpbmN1bGNhdGVzIHRoaXMgcHJhY3RpY2UgYnkgcGxhY2luZyBiZWZvcmUKdXMgdGhlIGV4YW1wbGUgb2YgVWx5c3Nlcywgd2hvbSBoZSBkZXNjcmliZXMgYXMKaGF2aW5nIHN0b29kIGZvciBhIHdoaWxlIHdpdGggZXllcyBmaXhlZCBvbiB0aGUKZ3JvdW5kIGFuZCBzdGFmZiBoZWxkIG1vdGlvbmxlc3MsIGJlZm9yZSBoZSBwb3VyZWQKZm9ydGggaGlzIHdoaXJsd2luZCBvZiBlbG9xdWVuY2UuIEluIHRoaXMgcHJlbGltaW5hcnkKZGVsYXkgdGhlcmUgYXJlIGNlcnRhaW4gcGF1c2VzLCBhcyB0aGUgYWN0b3JzIGNhbGwKdGhlbSwgd2hpY2ggYXJlIG5vdCB1bmJlY29taW5nLiBXZSBtYXkgc3Ryb2tlCm91ciBoZWFkLCBsb29rIGF0IG91ciBoYW5kLCB3cmluZyB0aGUgZmluZ2VycywgcHJldGVuZCB0byBzdW1tb24gYWxsIG91ciBlbmVyZ2llcyBmb3IgdGhlIGVmZm9ydCwKY29uZmVzcyB0byBuZXJ2b3VzbmVzcyBieSBhIGRlZXAgc2lnaCwgb3IgbWF5IGFkb3B0CmFueSBvdGhlciBtZXRob2Qgc3VpdGVkIHRvIG91ciBpbmRpdmlkdWFsIGNoYXJhY3RlciwKd2hpbGUgdGhlc2UgcHJvY2VlZGluZ3MgbWF5IGJlIGV4dGVuZGVkIG92ZXIgc29tZQp0aW1lLCBpZiB3ZSBmaW5kIHRoYXQgdGhlIGp1ZGdlIGlzIG5vdCB5ZXQgZ2l2aW5nIHVzCmhpcyBhdHRlbnRpb24uPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SWwuPC9oaT4gaWlpLiAyMTcuPC90cmFuc2xhdGlvbj4="
translation['11.6.159'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNTkiIHVuaXQ9InNlY3Rpb24iIC8+IE91ciBhdHRpdHVkZSBzaG91bGQgYmUgdXByaWdodCwgb3VyCmZlZXQgbGV2ZWwgYW5kIGEgc2xpZ2h0IGRpc3RhbmNlIGFwYXJ0LCBvciB0aGUgbGVmdCBtYXkKYmUgdmVyeSBzbGlnaHRseSBhZHZhbmNlZC4gVGhlIGtuZWVzIHNob3VsZCBiZQp1cHJpZ2h0LCBidXQgbm90IHN0aWZmOyB0aGUgc2hvdWxkZXJzIHJlbGF4ZWQsIHRoZSBmYWNlCnN0ZXJuLCBidXQgbm90IHNhZCwgZXhwcmVzc2lvbmxlc3Mgb3IgbGFuZ3VpZDogdGhlCmFybXMgc2hvdWxkIGJlIGhlbGQgc2xpZ2h0bHkgYXdheSBmcm9tIHRoZSBzaWRlLAp0aGUgbGVmdCBoYW5kIGJlaW5nIGluIHRoZSBwb3NpdGlvbiBkZXNjcmliZWQgYWJvdmUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlY3QuIDE0Mi48L25vdGU+CndoaWxlIHRoZSByaWdodCwgYXQgdGhlIG1vbWVudCB3aGVuIG91ciBzcGVlY2gKYmVnaW5zLCBzaG91bGQgYmUgc2xpZ2h0bHkgZXh0ZW5kZWQgYmV5b25kIHRoZSBmb2xkCm9mIHRoZSB0b2dhIHdpdGggdGhlIG1vc3QgbW9kZXN0IG9mIGdlc3R1cmVzLCBhcwp0aG91Z2ggd2FpdGluZyBmb3IgdGhlIGNvbW1lbmNlbWVudC48L3RyYW5zbGF0aW9uPg=="
translation['11.6.160'] = ""
translation['11.6.161'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNjEiIHVuaXQ9InNlY3Rpb24iIC8+QSBnZW50bGUgZGVsaXZlcnkgaXMgbW9zdCBvZnRlbiBiZXN0IHN1aXRlZCB0byB0aGUKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZXhvcmRpdW0uPC9oaT4gRm9yIHRoZXJlIGlzIG5vdGhpbmcgYmV0dGVyIGNhbGN1bGF0ZWQKdGhhbiBtb2Rlc3R5IHRvIHdpbiB0aGUgZ29vZC13aWxsIG9mIHRoZSBqdWRnZSwKYWx0aG91Z2ggdGhlcmUgYXJlIGV4Y2VwdGlvbnMgdG8gdGhlIHJ1bGUsIHNpbmNlLCBhcyBJCmhhdmUgYWxyZWFkeSBwb2ludGVkIG91dCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+SVYuIGkuIDQwLjwvbm90ZT4gYWxsIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmV4b3JkaWE8L2hpPiBhcmUgbm90IGRlbGl2ZXJlZAppbiB0aGUgc2FtZSBtYW5uZXIuIEJ1dCwgZ2VuZXJhbGx5IHNwZWFraW5nLCBhCnF1aWV0IHZvaWNlLCBhIG1vZGVzdCBnZXN0dXJlLCBhIHRvZ2Egc2l0dGluZyB3ZWxsCnVwb24gdGhlIHNob3VsZGVyLCBhbmQgYSBnZW50bGUgbW90aW9uIG9mIHRoZSBzaWRlcwp0byByaWdodCBhbmQgbGVmdCwgYWNjb21wYW5pZWQgYnkgYSBjb3JyZXNwb25kaW5nCm1vdmVtZW50IG9mIHRoZSBleWVzLCB3aWxsIGFsbCBiZSBmb3VuZCB0byBwcm9kdWNlCmEgYmVjb21pbmcgZWZmZWN0LjwvdHJhbnNsYXRpb24+"
translation['11.6.162'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNjIiIHVuaXQ9InNlY3Rpb24iIC8+IEluIHRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zdGF0ZW1lbnQgb2YgZmFjdHM8L2hpPiB0aGUgaGFuZApzaG91bGQgb24gbW9zdCBvY2Nhc2lvbnMgYmUgZnVydGhlciBleHRlbmRlZCwgdGhlCnRvZ2EgYWxsb3dlZCB0byBzbGlwIGJhY2ssIHRoZSBnZXN0dXJlcyBzaGFycGx5IGRpc3Rpbmd1aXNoZWQgYW5kIHRoZSB2b2ljZSBjb2xsb3F1aWFsLCBidXQgc2xpZ2h0bHkgbW9yZQplbXBoYXRpYywgd2hpbGUgdGhlcmUgc2hvdWxkIGFsc28gYmUgdW5pZm9ybWl0eSBvZgp0b25lLiBTdWNoLCBhdCBhbnkgcmF0ZSwgc2hvdWxkIGJlIHRoZSBkZWxpdmVyeSBvZgphIHBhc3NhZ2Ugc3VjaCBhcyB0aGUgZm9sbG93aW5nOjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5wcm8gTGlnLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmkuPC9oaT4gMi48L25vdGU+IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmkuPC9oaT4gMi48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Gb3IgUXVpbnR1cwpMaWdhcml1cywgc2luY2UgdGhlcmUgd2FzIG5vIGhpbnQgb2YgdGhlIGxpa2VsaWhvb2Qgb2YKdGhlIHdhciBpbiBBZnJpY2EsPC9xdW90ZT4gb3I8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIENsdWVuZXQuPC9oaT4gdi4gMTEuPC9ub3RlPiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gQ2x1ZW5ldC48L2hpPiB2LiAxMS48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BdWx1cyBDbHVlbnRpdXMgSGFiaXR1cywKdGhpcyBtYW4ncyBmYXRoZXIuPC9xdW90ZT4gQnV0IGRpZmZlcmVudCBtZXRob2RzIG1heSBiZQpjYWxsZWQgZm9yIGluIHRoaXMgc2FtZSBwb3J0aW9uIG9mIHRoZSBzcGVlY2gsIGluCnBhc3Npb25hdGUgdXR0ZXJhbmNlcyBzdWNoIGFzLCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUgbW90aGVyLWluLWxhdwp3ZWRzIGhlciBzb24taW4tbGF3LDwvcXVvdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBDbHVlbnQuIHYuPC9oaT4gMTQuPC9ub3RlPiBvciBpbiBwYXRoZXRpYyBwYXNzYWdlcyBzdWNoCgo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gQ2x1ZW50LiB2LjwvaGk+IDE0LjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjMzNSIgLz4KCmFzLCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVyZSBpbiB0aGUgbWFya2V0LXBsYWNlIG9mIExhb2RpY2VhIHdhcyBkaXNwbGF5ZWQgYSBncmlldm91cyBhbmQgYWZmbGljdGluZyBzcGVjdGFjbGUgZm9yIGFsbCB0aGUKcHJvdmluY2Ugb2YgQXNpYSB0byBiZWhvbGQuPC9xdW90ZT48L3RyYW5zbGF0aW9uPg=="
translation['11.6.163'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNjMiIHVuaXQ9InNlY3Rpb24iIC8+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlZlcnIuPC9oaT4geHh4LiA3Njwvbm90ZT4gVGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlZlcnIuPC9oaT4geHh4LiA3NjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnByb29mcyw8L2hpPiBob3dldmVyLApyZXF1aXJlIHRoZSB1dG1vc3QgdmFyaWV0eSBvZiBkZWxpdmVyeS4gRm9yIHRvIHN0YXRlCnRoZW0gYW5kIGRpc3Rpbmd1aXNoIGJldHdlZW4gdGhlaXIgdmFyaW91cyBwb2ludHMsCmFuZCB0byBleGFtaW5lIHdpdG5lc3Nlcywgd2UgZW1wbG95IHNvbWV0aGluZyBub3QKZmFyIHJlbW92ZWQgZnJvbSBhIGNvbGxvcXVpYWwgdG9uZSwgYXMgaXMgYWxzbyB0aGUgY2FzZQppbiBhbnRpY2lwYXRpbmcgb2JqZWN0aW9ucywgd2hpY2ggaXMgcmVhbGx5IGFub3RoZXIKZm9ybSBvZiBzdGF0ZW1lbnQuIEJ1dCBpbiBhbGwgdGhlc2UgY2FzZXMgd2Ugc29tZXRpbWVzIGRlcmlkZSwgYW5kIHNvbWV0aW1lcyBtaW1pYyBvdXIgb3Bwb25lbnRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['11.6.164'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNjQiIHVuaXQ9InNlY3Rpb24iIC8+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QXJndW1lbnQsPC9oaT4gYmVpbmcgYXMgYSBydWxlIG9mIGEgbGl2ZWxpZXIsIG1vcmUgZW5lcmdldGljCmFuZCBhZ2dyZXNzaXZlIGNoYXJhY3RlciwgZGVtYW5kcyBhIHR5cGUgb2YgZ2VzdHVyZQphZGFwdGVkIHRvIGl0cyBzdHlsZSwgdGhhdCBpcyB0byBzYXksIGl0IHNob3VsZCBiZSBib2xkCmFuZCByYXBpZC4gVGhlcmUgYXJlIGNlcnRhaW4gcG9ydGlvbnMgb2Ygb3VyIGFyZ3VtZW50cyB0aGF0IHJlcXVpcmUgdG8gYmUgcHJlc3NlZCBob21lIHdpdGggZW5lcmd5LAphbmQgaW4gdGhlc2Ugb3VyIHN0eWxlIG11c3QgYmUgY29tcGFjdCBhbmQgY29uY2VudHJhdGVkLiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5EaWdyZXNzaW9ucyw8L2hpPiBhcyBhIHJ1bGUsIGFyZSBjaGFyYWN0ZXJpc2VkIGJ5CmdlbnRsZW5lc3MsIGNhbG0gYW5kIHBsYWNpZGl0eSwgYXMsIGZvciBleGFtcGxlLCBpbgpDaWNlcm8ncyBkZXNjcmlwdGlvbiBvZiB0aGUgUmFwZSBvZiBQcm9zZXJwaW5lLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiBJVi4gaWlpLiAxMy48L25vdGU+IGhpcwpwaWN0dXJlIG9mIFNpY2lseSw8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiBJVi4gaWlpLiAxMy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Y3AuPC9oaT4gSVYuIGlpaS4gMTMuPC9ub3RlPiBvciBoaXMgcGFuZWd5cmljIG9mIFBvbXBleS48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiBJVi4gaWlpLiAxMy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+SW4gdGhlIGxvc3QgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIENvcm5lbGlvOiBjcC48L2hpPiBJVi4gaWlpLiAxMy48L25vdGU+IEZvcgpuYXR1cmFsbHkgcGFzc2FnZXMgd2hpY2ggZGVhbCB3aXRoIHN1YmplY3RzIGx5aW5nCm91dHNpZGUgdGhlIG1haW4gcXVlc3Rpb24gaW4gZGlzcHV0ZSBkZW1hbmQgYSBsZXNzCmNvbWJhdGl2ZSB0b25lLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBDb3JuZWxpbzogY3AuPC9oaT4gSVYuIGlpaS4gMTMuPC90cmFuc2xhdGlvbj4="
translation['11.6.165'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNjUiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlIGFyZSBvY2Nhc2lvbnMgb24gd2hpY2ggd2UKbWF5IGFkb3B0IGEgZ2VudGxlIG1hbm5lciBpbiBkZXByZWNpYXRpbmcgb3VyCm9wcG9uZW50cyBieSBnaXZpbmcgYSBwaWN0dXJlIG9mIHRoZWlyIGNoYXJhY3RlciwgYXMKaW4gdGhlIGZvbGxvd2luZyBwYXNzYWdlOjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5Gcm9tIHRoZSBsb3N0IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBHYWxpby48L2hpPjwvbm90ZT4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIEdhbGlvLjwvaGk+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBzZWVtZWQgdG8gc2VlIHNvbWUKcGVyc29ucyBlbnRlcmluZyB0aGUgcm9vbSBhbmQgb3RoZXJzIGxlYXZpbmcgaXQsCndoaWxlIG90aGVycyB3ZXJlIHN0YWdnZXJpbmcgdG8gYW5kIGZybyB1bmRlciB0aGUKaW5mbHVlbmNlIG9mIHdpbmUuPC9xdW90ZT4gVW5kZXIgc3VjaCBjaXJjdW1zdGFuY2VzIHdlCm1heSBldmVuIGFsbG93IHRoZSBnZXN0dXJlIHRvIG1hdGNoIHRoZSB2b2ljZSwgYW5kCm1heSBlbXBsb3kgYSBnZW50bGUgbW92ZW1lbnQgZnJvbSBzaWRlIHRvIHNpZGU6CmJ1dCB0aGlzIG1vdGlvbiBzaG91bGQgYmUgY29uZmluZWQgdG8gdGhlIGhhbmRzLCBhbmQKdGhlcmUgc2hvdWxkIGJlIG5vIG1vdmVtZW50IG9mIHRoZSBmbGFua3MuPC90cmFuc2xhdGlvbj4="
translation['11.6.166'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNjYiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlCmFyZSBhIG51bWJlciBvZiBncmFkYXRpb25zIG9mIHRvbmUgd2hpY2ggbWF5IGJlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4zMzciIC8+CgplbXBsb3llZCB0byBraW5kbGUgdGhlIGZlZWxpbmcgb2YgdGhlIGp1ZGdlcy4gVGhlCm1vc3QgdmVoZW1lbnQgdG9uZXMgdGhhdCBhbiBvcmF0b3IgaXMgZXZlciBjYWxsZWQKdXBvbiB0byB1c2Ugd2lsbCBiZSBlbXBsb3llZCBpbiBwYXNzYWdlcyBzdWNoIGFzCnRoZSBmb2xsb3dpbmc6PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBMaXEuPC9oaT4gaWlpLiA3IGFuZCA2Ljwvbm90ZT4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIExpcS48L2hpPiBpaWkuIDcgYW5kIDYuPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hlbiB0aGUgd2FyIHdhcyBiZWd1biwgQ2Flc2FyLAphbmQgd2FzLCBpbiBmYWN0LCB3ZWxsIG9uIGl0cyB3YXkgdG8gYSBjb25jbHVzaW9uLjwvcXVvdGU+CkZvciBoZSBoYXMganVzdCBzYWlkOiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHdpbGwgdXNlIG15IHZvaWNlIHRvIGl0cwpmdWxsZXN0IHBvd2VyLCB0aGF0IGFsbCB0aGUgUm9tYW4gcGVvcGxlIG1heSBoZWFyCm1lLjwvcXVvdGU+IE9uIHRoZSBvdGhlciBoYW5kLCBhIGxvd2VyIHRvbmUsIG5vdCBkZXZvaWQKb2YgYSBjZXJ0YWluIGNoYXJtLCBzaG91bGQgYmUgZW1wbG95ZWQgaW4gcGFzc2FnZXMKc3VjaCBhczo8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIExpcS48L2hpPiBpaWkuIDkuPC9ub3RlPiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gTGlxLjwvaGk+IGlpaS4gOS48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IHdhcyB0aGF0IHN3b3JkIG9mIHlvdXJzIGRvaW5nLAonVHViZXJvLCB0aGF0IHN3b3JkIHRoYXQgd2FzIGRyYXduIG9uIHRoZSBmaWVsZCBvZgpQaGFyc2FsdXM/PC9xdW90ZT48L3RyYW5zbGF0aW9uPg=="
translation['11.6.167'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNjciIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCB0aGUgdXR0ZXJhbmNlIG11c3QgYmUgZnVsbGVyLApzbG93ZXIsIGFuZCBjb25zZXF1ZW50bHkgc3dlZXRlciwgd2hlbiB0aGUgb3JhdG9yCnNheXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlBoaWwuPC9oaT4gaWkuIHh4di4gNjMuPC9ub3RlPiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5QaGlsLjwvaGk+IGlpLiB4eHYuIDYzLjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBpbiBhbiBhc3NlbWJseSBvZiB0aGUgSG9tYW4gcGVvcGxlLAphbmQgd2hlbiBoZSB3YXMgcGVyZm9ybWluZyBoaXMgb2ZmaWNpYWwgZnVuY3Rpb25zLjwvcXVvdGU+CkluIHRoaXMgcGFzc2FnZSBldmVyeSBzb3VuZCBzaG91bGQgZSBkcmF3biBvdXQsCndlIHNob3VsZCBkd2VsbCB1cG9uIHRoZSB2b3dlbC1zb3VuZHMgYW5kIHNwZWFrCmZpbGwtdGhyb2F0ZWQuIFN0aWxsIGZ1bGxlciBzaG91bGQgYmUgdGhlIHN0cmVhbSBvZiBvdXIKdm9pY2UgaW4gdGhlIGludm9jYXRpb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBNaWwuPC9oaT4geHh4aS4gODUuPC9ub3RlPiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gTWlsLjwvaGk+IHh4eGkuIDg1LjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPllvdSwgaGlsbHMgYW5kIGdyb3ZlcyBvZgpBbGJhPC9xdW90ZT47IHdoaWxlIGEgdG9uZSBub3QgZmFyIHJlbW92ZWQgZnJvbSBjaGFudGluZywKYW5kIGR5aW5nIGF3YXkgdG8gYSBjYWRlbmNlLCBzaG91bGQgYmUgZW1wbG95ZWQgaW4KZGVsaXZlcmluZyB0aGUgcGhyYXNlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gQXJjaC48L2hpPiB2aWlpLiAxOS48L25vdGU+IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBBcmNoLjwvaGk+IHZpaWkuIDE5LjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPlJvY2tzIGFuZCBzb2xpdHVkZXMgYW5zd2VyCnRvIHRoZSB2b2ljZS48L3F1b3RlPjwvdHJhbnNsYXRpb24+"
translation['11.6.168'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNjgiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXNlIGFyZSB0aGUgbW9kdWxhdGlvbnMgZGVub3VuY2VkCmJ5IERlbW9zdGhlbmVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIENvci4gOTAuPC9oaT48L25vdGU+IGFuZCBBZXNjaGluZXMsPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgQ29yLiA5MC48L2hpPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5JbiBDdGVzLjwvaGk+IDcyLjwvbm90ZT4gYnV0IHRoZXkgZG8gbm90Cm5lY2Vzc2FyaWx5IGZvciB0aGF0IHJlYXNvbiBtZXJpdCBvdXIgZGlzYXBwcm9iYXRpb24uCkZvciBhcyBlYWNoIG9mIHRoZXNlIG9yYXRvcnMgdGF1bnRzIHRoZSBvdGhlciB3aXRoCm1ha2luZyB1c2Ugb2YgdGhlbSwgaXQgaXMgY2xlYXIgdGhhdCB0aGV5IHdlcmUgZW1wbG95ZWQKYnkgYm90aC4gV2UgbWF5IGJlIHN1cmUgdGhhdCBEZW1vc3RoZW5lcyBkaWQgbm90CnJlc3RyaWN0IGhpbXNlbGYgdG8gaGlzIG9yZGluYXJ5IHNpbXBsaWNpdHkgb2YgdG9uZSB3aGVuCmhlIHN3b3JlIGJ5IHRob3NlIHRoYXQgZm91Z2h0IGZvciB0aGVpciBjb3VudHJ5IGF0Ck1hcmF0aG9uLCBQbGF0YWVhIGFuZCBTYWxhbWlzLDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkluIEN0ZXMuPC9oaT4gNzIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkRlIENvci48L2hpPiA2MC48L25vdGU+IG5vciBkaWQgQWVzY2hpbmVzCmVtcGxveSBhIGNvbGxvcXVpYWwgdXR0ZXJhbmNlIHdoZW4gaGUgbGFtZW50ZWQgZm9yCnRoZSBmYXRlIG9mIFRoZWJlcy48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5EZSBDb3IuPC9oaT4gNjAuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkluIEN0ZXMuPC9oaT4gNDkuPC9ub3RlPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkluIEN0ZXMuPC9oaT4gNDkuPC90cmFuc2xhdGlvbj4="
translation['11.6.169'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNjkiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlIGlzIGFsc28gYW4gZW50aXJlbHkgZGlmZmVyZW50CnRvbmUsIHdoaWNoIG1pZ2h0IGJlIGRlc2NyaWJlZCBhcyBseWluZyBhbG1vc3QKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjMzOSIgLz4KCm91dHNpZGUgdGhlIHJhbmdlIG9mIHRoZSBpbnN0cnVtZW50LiBUaGUgR3JlZWtzCmNhbGwgaXQgYml0dGVybmVzcywgYW5kIGl0IGNvbnNpc3RzIGluIGFuIGV4dHJhdmFnYW50CmFjZXJiaXR5IGFsbW9zdCBiZXlvbmQgdGhlIGNvbXBhc3Mgb2YgdGhlIGh1bWFuCnZvaWNlLiBJdCBpcyBlbXBsb3llZCBpbiBwYXNzYWdlcyBzdWNoIGFzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gUmFiLiBwZXJkLjwvaGk+IHZpLiAxOC48L25vdGU+IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBSYWIuIHBlcmQuPC9oaT4gdmkuIDE4LjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPldoeQpkbyB5b3Ugbm90IHJlc3RyYWluIHRob3NlIGNyaWVzLCB0aGUgcHJvb2Ygb2YgeW91cgpmb2xseSBhbmQgdGhlIGV2aWRlbmNlIG9mIHlvdXIgc21hbGwgbnVtYmVycz88L3F1b3RlPgpCdXQgdGhlIGV4dHJhdmFnYW5jZSBvZiB3aGljaCBJIHNwb2tlIHdpbGwgY29tZQppbiBhdCB0aGUgb3BlbmluZywgd2hlcmUgdGhlIG9yYXRvciBjcmllcywgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2h5IGRvCnlvdSBub3QgcmVzdHJhaW4/PC9xdW90ZT48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNzAiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIDxoaSByZW5kPSJpdGFsaWNzIj5wZXJvcmF0aW9uLDwvaGk+IGlmIGl0IGludm9sdmVzIGEgcmVjYXBpdHVsYXRpb24sCnJlcXVpcmVzIGFuIGV2ZW4gdXR0ZXJhbmNlIG9mIHNob3J0LCBjbGVhci1jdXQKY2xhdXNlcy4gSWYsIG9uIHRoZSBvdGhlciBoYW5kLCBpdCBpcyBkZXNpZ25lZCB0bwpzdGlyIHRoZSBlbW90aW9ucyBvZiB0aGUganVkZ2VzLCBpdCB3aWxsIGRlbWFuZApzb21lIG9mIHRoZSBxdWFsaXRpZXMgYWxyZWFkeSBtZW50aW9uZWQuIElmIGl0IGFpbXMKYXQgc29vdGhpbmcgdGhlbSwgaXQgc2hvdWxkIEhvdyBzb2Z0bHk7IGlmIGl0IGlzIHRvCnJvdXNlIHRoZW0gdG8gcGl0eSwgdGhlIHZvaWNlIG11c3QgYmUgZGVsaWNhdGVseQptb2R1bGF0ZWQgdG8gYSBtZWxhbmNob2x5IHN3ZWV0bmVzcywgd2hpY2ggaXMgYXQKb25jZSBtb3N0IG5hdHVyYWwgYW5kIHNwZWNpYWxseSBhZGFwdGVkIHRvIHRvdWNoCnRoZSBoZWFydC4gRm9yIGl0IG1heSBiZSBub3RlZCB0aGF0IGV2ZW4gb3JwaGFucwphbmQgd2lkb3dzIGhhdmUgYSBjZXJ0YWluIG11c2ljYWwgcXVhbGl0eSBpbiB0aGUKbGFtZW50YXRpb25zIHdoaWNoIHRoZXkgdXR0ZXIgYXQgZnVuZXJhbHMuPG1pbGVzdG9uZSBuPSIxNzEiIHVuaXQ9InNlY3Rpb24iIC8+IEEKbXVmZmxlZCB2b2ljZSwgc3VjaCBhcyBDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5CcnV0dC48L2hpPiB4eHh2aWlpLiAxNDEuPC9ub3RlPiBzYXlzIHdhcyBwb3NzZXNzZWQKYnkgQW50b25pdXMsIHdpbGwgYWxzbyBiZSBleGNlZWRpbmdseSBlZmZlY3RpdmUgdW5kZXIKc3VjaCBjaXJjdW1zdGFuY2VzLCBzaW5jZSBpdCBoYXMganVzdCB0aGUgbmF0dXJhbAp0b25lIHdoaWNoIHdlIHNlZWsgdG8gaW1pdGF0ZS4gQXBwZWFscyB0byBwaXR5CmFyZSwgaG93ZXZlciwgb2YgdHdvIGtpbmRzOiB0aGV5IG1heSBiZSBtYXJrZWQKYnkgYW4gYWRtaXh0dXJlIG9mIGluZGlnbmF0aW9uLCBhcyBpbiB0aGUgcGFzc2FnZQpqdXN0IHF1b3RlZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+wqcgMTYyLjwvbm90ZT4gZGVzY3JpYmluZyB0aGUgY29uZGVtbmF0aW9uIG9mIFBoaWxvZGFtdXMsIG9yIHRoZXkgbWF5IGJlIGNvdXBsZWQgd2l0aCBhcHBlYWxzIGZvcgptZXJjeSwgaW4gd2hpY2ggY2FzZSB0aGVpciB0b25lIHdpbGwgYmUgbW9yZSBzdWJkdWVkLjxtaWxlc3RvbmUgbj0iMTcyIiB1bml0PSJzZWN0aW9uIiAvPiBUaGVyZWZvcmUgYWx0aG91Z2ggdGhlcmUgaXMgYSBzdWdnZXN0aW9uIG9mCnRoZSBjaGFudGluZyB0b25lIGluIHRoZSBkZWxpdmVyeSBvZiBzdWNoIHBhc3NhZ2VzCmFzIDxxdW90ZT5JbiBhbiBhc3NlbWJseSBvZiB0aGUgUm9tYW4gcGVvcGxlPC9xdW90ZT4gKGZvciBoZSBkaWQKbm90IHV0dGVyIHRoZXNlIHdvcmRzIGluIGEgY29udGVudGlvdXMgdG9uZSksIG9yIGluCgo8cGIgaWQ9InAuMzQxIiAvPgoKPHF1b3RlPlllIGhpbGxzIGFuZCBncm92ZXMgb2YgQWxiYTwvcXVvdGU+IChmb3IgaGUgZGlkIG5vdCBzYXkgdGhpcwphcyB0aG91Z2ggaGUgd2VyZSBhcHBlYWxpbmcgdG8gdGhlbSBvciBjYWxsaW5nIHRoZW0KdG8gd2l0bmVzcyksIHRoZSBlbnN1aW5nIHBocmFzZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5wcm8gTWlsLjwvaGk+IHh4eHZpaS4gMTAyLjwvbm90ZT4gcmVxdWlyZSBpbmZpbml0ZWx5CmdyZWF0ZXIgbW9kdWxhdGlvbiBhbmQgbG9uZ2VyLWRyYXduIGhhcm1vbmllczoKPHF1b3RlPkFoLCB3b2UgaXMgbWUsIHVuaGFwcHkgdGhhdCBJIGFtITwvcXVvdGU+IGFuZCA8cXVvdGU+V2hhdApzaGFsbCBJIHJlcGx5IHRvIG15IGNoaWxkcmVuPzwvcXVvdGU+IGFuZCA8cXVvdGU+WW91LCBNaWxvLCBoYWQKdGhlIHBvd2VyIHRvIHJlY2FsbCBtZSB0byBteSBjb3VudHJ5IHdpdGggdGhlIGFpZCBvZgp0aGVzZSBtZW4sIGFuZCBzaGFsbCBJIGJlIHBvd2VybGVzcyBieSB0aGVpciBhaWQgdG8Ka2VlcCB5b3UgaW4gdGhhdCBzYW1lIGNvdW50cnksIHlvdXIgbmF0aXZlIGxhbmQKYW5kIG1pbmU/PC9xdW90ZT4gb3Igd2hlbiBoZSBvZmZlcnMgdG8gc2VsbCB0aGUgcHJvcGVydHkgb2YKR2FpdXMgUmFiaXJpdXMgYXQgb25lIHNlc3RlcmNlLCA8cXVvdGU+QWgsIHdoYXQgYSBzYWQgYW5kCmJpdHRlciB0YXNrIG15IHZvaWNlIGlzIGNhbGxlZCBvbiB0byBwZXJmb3JtITwvcXVvdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+cHJvIFJhYi4gUG9zdCw8L2hpPiB4dmlpLiA0Ni4gPGhpIHJlbmQ9Iml0YWxpY3MiPmFkZGljaXQsPC9oaT4gbGl0LiA8cXVvdGU+a25vY2tzIGRvd248L3F1b3RlPjoKPGhpIHJlbmQ9Iml0YWxpY3MiPnByYWVjb25pdW0sPC9oaT4gbGl0LiA8cXVvdGU+dGhlIHRhc2sgb2YgdGhlIHB1YmxpYyBjcmllci48L3F1b3RlPjwvbm90ZT4gQWdhaW4sPG1pbGVzdG9uZSBuPSIxNzMiIHVuaXQ9InNlY3Rpb24iIC8+Cml0IGlzIGEgbW9zdCBlZmZlY3RpdmUgZGV2aWNlIHRvIGNvbmZlc3MgaW4gdGhlIHBlcm9yYXRpb24KdGhhdCB0aGUgc3RyYWluIG9mIGdyaWVmIGFuZCBmYXRpZ3VlIGlzIG92ZXJwb3dlcmluZywKYW5kIHRoYXQgb3VyIHN0cmVuZ3RoIGlzIHNpbmtpbmcgYmVuZWF0aCB0aGVtLCBhcwpDaWNlcm8gZG9lcyBpbiBoaXMgZGVmZW5jZSBvZiBNaWxvOjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPnBybyBNaWwuPC9oaT4geHh4dmlpaS4gMTA1Ljwvbm90ZT4gPHF1b3RlPkJ1dCBoZXJlIEkgbXVzdAptYWtlIGFuIGVuZDogSSBjYW4gbm8gbG9uZ2VyIHNwZWFrIGZvciB0ZWFycy48L3F1b3RlPiBBbmQKaW4gc3VjaCBwYXNzYWdlcyBvdXIgZGVsaXZlcnkgbXVzdCBjb25mb3JtIHRvIG91cgp3b3Jkcy48bWlsZXN0b25lIG49IjE3NCIgdW5pdD0ic2VjdGlvbiIgLz4gSXQgbWF5IGJlIHRob3VnaHQgdGhhdCB0aGVyZSBhcmUgb3RoZXIgcG9pbnRzCndoaWNoIHNob3VsZCBiZSBtZW50aW9uZWQgaW4gY29ubmV4aW9uIHdpdGggdGhlCmR1dGllcyBvZiB0aGUgb3JhdG9yIGluIHRoaXMgcG9ydGlvbiBvZiBoaXMgc3BlZWNoLCBzdWNoCmFzIGNhbGxpbmcgZm9yd2FyZCB0aGUgYWNjdXNlZCwgbGlmdGluZyB1cCBoaXMgY2hpbGRyZW4KZm9yIHRoZSBjb3VydCB0byBzZWUsIHByb2R1Y2luZyBoaXMga2luc2ZvbGssIGFuZApyZW5kaW5nIGhpcyBnYXJtZW50czsgYnV0IHRoZXkgaGF2ZSBiZWVuIGRlYWx0CndpdGggaW4gdGhlaXIgcHJvcGVyIHBsYWNlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+VkkuIGkuIDMwLjwvbm90ZT48L3A+CjwvdHJhbnNsYXRpb24+"
translation['11.6.170'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNzAiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBlcm9yYXRpb24sPC9oaT4gaWYgaXQgaW52b2x2ZXMgYSByZWNhcGl0dWxhdGlvbiwKcmVxdWlyZXMgYW4gZXZlbiB1dHRlcmFuY2Ugb2Ygc2hvcnQsIGNsZWFyLWN1dApjbGF1c2VzLiBJZiwgb24gdGhlIG90aGVyIGhhbmQsIGl0IGlzIGRlc2lnbmVkIHRvCnN0aXIgdGhlIGVtb3Rpb25zIG9mIHRoZSBqdWRnZXMsIGl0IHdpbGwgZGVtYW5kCnNvbWUgb2YgdGhlIHF1YWxpdGllcyBhbHJlYWR5IG1lbnRpb25lZC4gSWYgaXQgYWltcwphdCBzb290aGluZyB0aGVtLCBpdCBzaG91bGQgSG93IHNvZnRseTsgaWYgaXQgaXMgdG8Kcm91c2UgdGhlbSB0byBwaXR5LCB0aGUgdm9pY2UgbXVzdCBiZSBkZWxpY2F0ZWx5Cm1vZHVsYXRlZCB0byBhIG1lbGFuY2hvbHkgc3dlZXRuZXNzLCB3aGljaCBpcyBhdApvbmNlIG1vc3QgbmF0dXJhbCBhbmQgc3BlY2lhbGx5IGFkYXB0ZWQgdG8gdG91Y2gKdGhlIGhlYXJ0LiBGb3IgaXQgbWF5IGJlIG5vdGVkIHRoYXQgZXZlbiBvcnBoYW5zCmFuZCB3aWRvd3MgaGF2ZSBhIGNlcnRhaW4gbXVzaWNhbCBxdWFsaXR5IGluIHRoZQpsYW1lbnRhdGlvbnMgd2hpY2ggdGhleSB1dHRlciBhdCBmdW5lcmFscy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.171'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNzEiIHVuaXQ9InNlY3Rpb24iIC8+IEEKbXVmZmxlZCB2b2ljZSwgc3VjaCBhcyBDaWNlcm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QnJ1dHQuPC9oaT4geHh4dmlpaS4gMTQxLjwvbm90ZT4gc2F5cyB3YXMgcG9zc2Vzc2VkCmJ5IEFudG9uaXVzLCB3aWxsIGFsc28gYmUgZXhjZWVkaW5nbHkgZWZmZWN0aXZlIHVuZGVyCnN1Y2ggY2lyY3Vtc3RhbmNlcywgc2luY2UgaXQgaGFzIGp1c3QgdGhlIG5hdHVyYWwKdG9uZSB3aGljaCB3ZSBzZWVrIHRvIGltaXRhdGUuIEFwcGVhbHMgdG8gcGl0eQphcmUsIGhvd2V2ZXIsIG9mIHR3byBraW5kczogdGhleSBtYXkgYmUgbWFya2VkCmJ5IGFuIGFkbWl4dHVyZSBvZiBpbmRpZ25hdGlvbiwgYXMgaW4gdGhlIHBhc3NhZ2UKanVzdCBxdW90ZWQ8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5CcnV0dC48L2hpPiB4eHh2aWlpLiAxNDEuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPsKnIDE2Mi48L25vdGU+IGRlc2NyaWJpbmcgdGhlIGNvbmRlbW5hdGlvbiBvZiBQaGlsb2RhbXVzLCBvciB0aGV5IG1heSBiZSBjb3VwbGVkIHdpdGggYXBwZWFscyBmb3IKbWVyY3ksIGluIHdoaWNoIGNhc2UgdGhlaXIgdG9uZSB3aWxsIGJlIG1vcmUgc3ViZHVlZC48L3RyYW5zbGF0aW9uPg=="
translation['11.6.172'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNzIiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlZm9yZSBhbHRob3VnaCB0aGVyZSBpcyBhIHN1Z2dlc3Rpb24gb2YKdGhlIGNoYW50aW5nIHRvbmUgaW4gdGhlIGRlbGl2ZXJ5IG9mIHN1Y2ggcGFzc2FnZXMKYXMgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SW4gYW4gYXNzZW1ibHkgb2YgdGhlIFJvbWFuIHBlb3BsZTwvcXVvdGU+IChmb3IgaGUgZGlkCm5vdCB1dHRlciB0aGVzZSB3b3JkcyBpbiBhIGNvbnRlbnRpb3VzIHRvbmUpLCBvciBpbgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzQxIiAvPgoKPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWUgaGlsbHMgYW5kIGdyb3ZlcyBvZiBBbGJhPC9xdW90ZT4gKGZvciBoZSBkaWQgbm90IHNheSB0aGlzCmFzIHRob3VnaCBoZSB3ZXJlIGFwcGVhbGluZyB0byB0aGVtIG9yIGNhbGxpbmcgdGhlbQp0byB3aXRuZXNzKSwgdGhlIGVuc3VpbmcgcGhyYXNlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gTWlsLjwvaGk+IHh4eHZpaS4gMTAyLjwvbm90ZT4gcmVxdWlyZSBpbmZpbml0ZWx5CmdyZWF0ZXIgbW9kdWxhdGlvbiBhbmQgbG9uZ2VyLWRyYXduIGhhcm1vbmllczoKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIE1pbC48L2hpPiB4eHh2aWkuIDEwMi48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BaCwgd29lIGlzIG1lLCB1bmhhcHB5IHRoYXQgSSBhbSE8L3F1b3RlPiBhbmQgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hhdApzaGFsbCBJIHJlcGx5IHRvIG15IGNoaWxkcmVuPzwvcXVvdGU+IGFuZCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Zb3UsIE1pbG8sIGhhZAp0aGUgcG93ZXIgdG8gcmVjYWxsIG1lIHRvIG15IGNvdW50cnkgd2l0aCB0aGUgYWlkIG9mCnRoZXNlIG1lbiwgYW5kIHNoYWxsIEkgYmUgcG93ZXJsZXNzIGJ5IHRoZWlyIGFpZCB0bwprZWVwIHlvdSBpbiB0aGF0IHNhbWUgY291bnRyeSwgeW91ciBuYXRpdmUgbGFuZAphbmQgbWluZT88L3F1b3RlPiBvciB3aGVuIGhlIG9mZmVycyB0byBzZWxsIHRoZSBwcm9wZXJ0eSBvZgpHYWl1cyBSYWJpcml1cyBhdCBvbmUgc2VzdGVyY2UsIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkFoLCB3aGF0IGEgc2FkIGFuZApiaXR0ZXIgdGFzayBteSB2b2ljZSBpcyBjYWxsZWQgb24gdG8gcGVyZm9ybSE8L3F1b3RlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gUmFiLiBQb3N0LDwvaGk+IHh2aWkuIDQ2LiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5hZGRpY2l0LDwvaGk+IGxpdC4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+a25vY2tzIGRvd248L3F1b3RlPjoKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJhZWNvbml1bSw8L2hpPiBsaXQuIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPnRoZSB0YXNrIG9mIHRoZSBwdWJsaWMgY3JpZXIuPC9xdW90ZT48L25vdGU+IEFnYWluLDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBSYWIuIFBvc3QsPC9oaT4geHZpaS4gNDYuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmFkZGljaXQsPC9oaT4gbGl0LiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5rbm9ja3MgZG93bjwvcXVvdGU+Ogo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcmFlY29uaXVtLDwvaGk+IGxpdC4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+dGhlIHRhc2sgb2YgdGhlIHB1YmxpYyBjcmllci48L3F1b3RlPjwvdHJhbnNsYXRpb24+"
translation['11.6.173'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNzMiIHVuaXQ9InNlY3Rpb24iIC8+Cml0IGlzIGEgbW9zdCBlZmZlY3RpdmUgZGV2aWNlIHRvIGNvbmZlc3MgaW4gdGhlIHBlcm9yYXRpb24KdGhhdCB0aGUgc3RyYWluIG9mIGdyaWVmIGFuZCBmYXRpZ3VlIGlzIG92ZXJwb3dlcmluZywKYW5kIHRoYXQgb3VyIHN0cmVuZ3RoIGlzIHNpbmtpbmcgYmVuZWF0aCB0aGVtLCBhcwpDaWNlcm8gZG9lcyBpbiBoaXMgZGVmZW5jZSBvZiBNaWxvOjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gTWlsLjwvaGk+IHh4eHZpaWkuIDEwNS48L25vdGU+IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBybyBNaWwuPC9oaT4geHh4dmlpaS4gMTA1LjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBoZXJlIEkgbXVzdAptYWtlIGFuIGVuZDogSSBjYW4gbm8gbG9uZ2VyIHNwZWFrIGZvciB0ZWFycy48L3F1b3RlPiBBbmQKaW4gc3VjaCBwYXNzYWdlcyBvdXIgZGVsaXZlcnkgbXVzdCBjb25mb3JtIHRvIG91cgp3b3Jkcy48L3RyYW5zbGF0aW9uPg=="
translation['11.6.174'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNzQiIHVuaXQ9InNlY3Rpb24iIC8+IEl0IG1heSBiZSB0aG91Z2h0IHRoYXQgdGhlcmUgYXJlIG90aGVyIHBvaW50cwp3aGljaCBzaG91bGQgYmUgbWVudGlvbmVkIGluIGNvbm5leGlvbiB3aXRoIHRoZQpkdXRpZXMgb2YgdGhlIG9yYXRvciBpbiB0aGlzIHBvcnRpb24gb2YgaGlzIHNwZWVjaCwgc3VjaAphcyBjYWxsaW5nIGZvcndhcmQgdGhlIGFjY3VzZWQsIGxpZnRpbmcgdXAgaGlzIGNoaWxkcmVuCmZvciB0aGUgY291cnQgdG8gc2VlLCBwcm9kdWNpbmcgaGlzIGtpbnNmb2xrLCBhbmQKcmVuZGluZyBoaXMgZ2FybWVudHM7IGJ1dCB0aGV5IGhhdmUgYmVlbiBkZWFsdAp3aXRoIGluIHRoZWlyIHByb3BlciBwbGFjZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+VkkuIGkuIDMwLjwvbm90ZT48cCBjbGFzcz0idHJhbnNsYXRpb24iPlN1Y2ggYmVpbmcgdGhlIHZhcmlldHkgZW50YWlsZWQgYnkgdGhlIGRpZmZlcmVudApwb3J0aW9ucyBvZiBvdXIgcGxlYWRpbmcsIGl0IGlzIHN1ZmZpY2llbnRseSBjbGVhciB0aGF0Cm91ciBkZWxpdmVyeSBtdXN0IGJlIGFkYXB0ZWQgdG8gb3VyIG1hdHRlciwgYXMgSQpoYXZlIGFscmVhZHkgc2hvd24sIGFuZCBzb21ldGltZXMgYWxzbywgdGhvdWdoCm5vdCBhbHdheXMgY29uZm9ybSB0byBvdXIgYWN0dWFsIHdvcmRzLCBhcyBJIGhhdmUKanVzdCByZW1hcmtlZC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+wqcgMTczLjwvbm90ZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTc1IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgaW5zdGFuY2UsIG11c3Qgbm90IHRoZSB3b3JkcywKPHF1b3RlPlRoaXMgcG9vciB3cmV0Y2hlZCwgcG92ZXJ0eS1zdHJpY2tlbiBtYW4sPC9xdW90ZT4gYmUKdXR0ZXJlZCBpbiBhIGxvdywgc3ViZHVlZCB0b25lLCB3aGVyZWFzLCA8cXVvdGU+QSBob2xkCmFuZCB2aW9sZW50IGZlbGxvdyBhbmQgYSByb2JiZXIsPC9xdW90ZT4gaXMgYSBwaHJhc2UKCjxwYiBpZD0icC4zNDMiIC8+CgpyZXF1aXJpbmcgYSBzdHJvbmcgYW5kIGVuZXJnZXRpYyB1dHRlcmFuY2U/IEZvcgpzdWNoIGNvbmZvcm1pdHkgZ2l2ZXMgYSBmb3JjZSBhbmQgYXBwcm9wcmlhdGVuZXNzCnRvIG91ciBtYXR0ZXIsIGFuZCB3aXRob3V0IGl0IHRoZSBleHByZXNzaW9uIG9mCnRoZSB2b2ljZSB3aWxsIGJlIG91dCBvZiBoYXJtb255IHdpdGggb3VyIHRob3VnaHQuCjxtaWxlc3RvbmUgbj0iMTc2IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB3aGF0IG9mIHRoZSBmYWN0IHRoYXQgYSBjaGFuZ2Ugb2YgZGVsaXZlcnkKbWF5IG1ha2UgcHJlY2lzZWx5IHRoZSBzYW1lIHdvcmRzIGVpdGhlciBkZW1vbnN0cmF0ZSBvciBhZmZpcm0sIGV4cHJlc3MgcmVwcm9hY2gsIGRlbmlhbCwgd29uZGVyIG9yCmluZGlnbmF0aW9uLCBpbnRlcnJvZ2F0aW9uLCBtb2NrZXJ5IG9yIGRlcHJlY2lhdGlvbj8KRm9yIHRoZSB3b3JkIDxxdW90ZT50aG91PC9xdW90ZT4gaXMgZ2l2ZW4gYSBkaWZmZXJlbnQgZXhwcmVzc2lvbgppbiBlYWNoIG9mIHRoZSBmb2xsb3dpbmcgcGFzc2FnZXM6Cgo8cXVvdGUgcmVuZD0iYmxvY2txdW90ZSI+PGNpdD48cXVvdGU+PGw+VGhvdSB0aGlzIHBvb3Iga2luZ2RvbSBkb3N0IG9uIG1lIGJlc3Rvdy48L2w+PC9xdW90ZT48YmlibCBkZWZhdWx0PSJOTyI+PGhpIHJlbmQ9Iml0YWxpY3MiPkFlbi48L2hpPiBpLiA3OC48L2JpYmw+PC9jaXQ+PC9xdW90ZT4KCmFuZAoKPHF1b3RlIHJlbmQ9ImJsb2NrcXVvdGUiPjxjaXQ+PHF1b3RlPjxsPlRob3UgdmFucXVpc2ggaGltIGluIHNvbmc/PC9sPjwvcXVvdGU+PGJpYmwgZGVmYXVsdD0iTk8iPjxoaSByZW5kPSJpdGFsaWNzIj5FY2wuPC9oaT4gaWlpLiAyNS48L2JpYmw+PC9jaXQ+PC9xdW90ZT4KCmFuZAoKPHF1b3RlIHJlbmQ9ImJsb2NrcXVvdGUiPjxjaXQ+PHF1b3RlPjxsPkFydCB0aG91LCB0aGVuLCB0aGF0IEFlbmVhcz88L2w+PC9xdW90ZT48YmlibCBkZWZhdWx0PSJOTyI+PGhpIHJlbmQ9Iml0YWxpY3MiPkFlbjwvaGk+IGkuIDYxNy48L2JpYmw+PC9jaXQ+PC9xdW90ZT4KCmFuZAoKPHF1b3RlIHJlbmQ9ImJsb2NrcXVvdGUiPjxjaXQ+PHF1b3RlPjxsPkFuZCBvZiBmZWFyLDwvbD4KPGw+RG8gdGhvdSBhY2N1c2UgbWUsIERyYW5jZXMhPC9sPjwvcXVvdGU+PGJpYmwgZGVmYXVsdD0iTk8iPjxoaSByZW5kPSJpdGFsaWNzIj5BZW4uPC9oaT4geGkuIDM4My48L2JpYmw+PC9jaXQ+PC9xdW90ZT4KClRvIGN1dCBhIGxvbmcgbWF0dGVyIHNob3J0LCBpZiBteSByZWFkZXIgd2lsbCB0YWtlCnRoaXMgb3IgYW55IG90aGVyIHdvcmQgaGUgY2hvb3NlcyBhbmQgcnVuIGl0IHRocm91Z2gKdGhlIHdob2xlIGdhbXV0IG9mIGVtb3Rpb25hbCBleHByZXNzaW9uLCBoZSB3aWxsCnJlYWxpc2UgdGhlIHRydXRoIG9mIHdoYXQgSSBzYXkuPC9wPgo8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+wqcgMTczLjwvbm90ZT48L3RyYW5zbGF0aW9uPg=="
translation['11.6.175'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNzUiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBpbnN0YW5jZSwgbXVzdCBub3QgdGhlIHdvcmRzLAo8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGlzIHBvb3Igd3JldGNoZWQsIHBvdmVydHktc3RyaWNrZW4gbWFuLDwvcXVvdGU+IGJlCnV0dGVyZWQgaW4gYSBsb3csIHN1YmR1ZWQgdG9uZSwgd2hlcmVhcywgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QSBob2xkCmFuZCB2aW9sZW50IGZlbGxvdyBhbmQgYSByb2JiZXIsPC9xdW90ZT4gaXMgYSBwaHJhc2UKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjM0MyIgLz4KCnJlcXVpcmluZyBhIHN0cm9uZyBhbmQgZW5lcmdldGljIHV0dGVyYW5jZT8gRm9yCnN1Y2ggY29uZm9ybWl0eSBnaXZlcyBhIGZvcmNlIGFuZCBhcHByb3ByaWF0ZW5lc3MKdG8gb3VyIG1hdHRlciwgYW5kIHdpdGhvdXQgaXQgdGhlIGV4cHJlc3Npb24gb2YKdGhlIHZvaWNlIHdpbGwgYmUgb3V0IG9mIGhhcm1vbnkgd2l0aCBvdXIgdGhvdWdodC4KPC90cmFuc2xhdGlvbj4="
translation['11.6.176'] = ""
translation['11.6.177'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNzciIHVuaXQ9InNlY3Rpb24iIC8+VGhlcmUgaXMgb25lIGZ1cnRoZXIgcmVtYXJrIHdoaWNoIEkgbXVzdCBhZGQsCm5hbWVseSwgdGhhdCB3aGlsZSB3aGF0IGlzIGJlY29taW5nIGlzIHRoZSBtYWluCmNvbnNpZGVyYXRpb24gaW4gZGVsaXZlcnksIGRpZmZlcmVudCBtZXRob2RzIHdpbGwgb2Z0ZW4Kc3VpdCBkaWZmZXJlbnQgc3BlYWtlcnMuIEZvciB0aGlzIGlzIGRldGVybWluZWQgYnkKYSBwcmluY2lwbGUgd2hpY2gsIHRob3VnaCBpdCBpcyBvYnNjdXJlIGFuZCBjYW4KaGFyZGx5IGJlIGV4cHJlc3NlZCBpbiB3b3Jkcywgbm9uZSB0aGUgbGVzcwpleGlzdHM6IGFuZCwgdGhvdWdoIGl0IGlzIGEgdHJ1ZSBzYXlpbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gSS4geHhpeC4gMTMyPC9ub3RlPiB0aGF0CjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIE9yLjwvaGk+IEkuIHh4aXguIDEzMjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPnRoZSBtYWluIHNlY3JldCBvZiBhcnRpc3RpYyBzdWNjZXNzIGlzIHRoYXQgd2hhdGV2ZXIgd2UgZG8gc2hvdWxkIGJlY29tZSB1cyB3ZWxsLDwvcXVvdGU+IG5vbmUgdGhlCmxlc3MsIGRlc3BpdGUgdGhlIGZhY3QgdGhhdCBzdWNoIHN1Y2Nlc3MgY2Fubm90IGJlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4zNDUiIC8+CgphdHRhaW5lZCB3aXRob3V0IGFydCwgaXQgaXMgaW1wb3NzaWJsZSBlbnRpcmVseSB0byBjb21tdW5pY2F0ZSB0aGUgc2VjcmV0IGJ5IHRoZSBydWxlcyBvZiBhcnQuPC90cmFuc2xhdGlvbj4="
translation['11.6.178'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNzgiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlIGFyZQpzb21lIHBlcnNvbnMgaW4gd2hvbSBwb3NpdGl2ZSBleGNlbGxlbmNlcyBoYXZlIG5vCmNoYXJtLCB3aGlsZSB0aGVyZSBhcmUgb3RoZXJzIHdob3NlIHZlcnkgZmF1bHRzIGdpdmUKcGxlYXN1cmUuIFdlIGhhdmUgc2VlbiB0aGUgZ3JlYXRlc3Qgb2YgY29taWMgYWN0b3JzLApEZW1ldHJpdXMgYW5kIFN0cmF0b2NsZXMsIHdpbiB0aGVpciBzdWNjZXNzIGJ5CmVudGlyZWx5IGRpZmZlcmVudCBtZXJpdHMuIEJ1dCB0aGF0IGlzIHRoZSBsZXNzCnN1cnByaXNpbmcgb3dpbmcgdG8gdGhlIGZhY3QgdGhhdCB0aGUgb25lIHdhcyBhdCBoaXMKYmVzdCBpbiB0aGUgcsO0bGVzIG9mIGdvZHMsIHlvdW5nIG1lbiwgZ29vZCBmYXRoZXJzCmFuZCBzbGF2ZXMsIG1hdHJvbnMgYW5kIHJlc3BlY3RhYmxlIG9sZCB3b21lbiwKd2hpbGUgdGhlIG90aGVyIGV4Y2VsbGVkIGluIHRoZSBwb3J0cmF5YWwgb2Ygc2hhcnB0ZW1wZXJlZCBvbGQgbWVuLCBjdW5uaW5nIHNsYXZlcywgcGFyYXNpdGVzLCBwaW1wcwphbmQgYWxsIHRoZSBtb3JlIGxpdmVseSBjaGFyYWN0ZXJzIG9mIGNvbWVkeS4gRm9yCnRoZWlyIG5hdHVyYWwgZ2lmdHMgZGlmZmVyZWQuIEZvciBEZW1ldHJpdXMnIHZvaWNlLApsaWtlIGhpcyBvdGhlciBxdWFsaXRpZXMsIGhhZCBncmVhdGVyIGNoYXJtLCB3aGlsZQp0aGF0IG9mIFN0cmF0b2NsZXMgd2FzIHRoZSBtb3JlIHBvd2VyZnVsLjwvdHJhbnNsYXRpb24+"
translation['11.6.179'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNzkiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dAp5ZXQgbW9yZSBub3RpY2VhYmxlIHdlcmUgdGhlIGluY29tbXVuaWNhYmxlCnBlY3VsaWFyaXRpZXMgb2YgdGhlaXIgYWN0aW9uLiBEZW1ldHJpdXMgc2hvd2VkCnVuaXF1ZSBnaWZ0cyBpbiB0aGUgbW92ZW1lbnRzIG9mIGhpcyBoYW5kcywgaW4KaGlzIHBvd2VyIHRvIGNoYXJtIGhpcyBhdWRpZW5jZSBieSB0aGUgbG9uZ2RyYXduIHN3ZWV0bmVzcyBvZiBoaXMgZXhjbGFtYXRpb25zLCB0aGUgc2tpbGwgd2l0aAp3aGljaCBoZSB3b3VsZCBtYWtlIGhpcyBkcmVzcyBzZWVtIHRvIHB1ZmYgb3V0CndpdGggd2luZCBhcyBoZSB3YWxrZWQsIGFuZCB0aGUgZXhwcmVzc2l2ZSBtb3ZlbWVudHMgb2YgdGhlIHJpZ2h0IHNpZGUgd2hpY2ggaGUgc29tZXRpbWVzIGludHJvZHVjZWQgd2l0aCBlZmZlY3QsIGluIGFsbCBvZiB3aGljaCB0aGluZ3MgaGUgd2FzCmhlbHBlZCBieSBoaXMgc3RhdHVyZSBhbmQgcGVyc29uYWwgYmVhdXR5LjwvdHJhbnNsYXRpb24+"
translation['11.6.180'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxODAiIHVuaXQ9InNlY3Rpb24iIC8+IE9uIHRoZQpvdGhlciBoYW5kLCBTdHJhdG9jbGVzJyA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5mb3J0ZTwvaGk+IGxheSBpbiBoaXMgbmltYmxlbmVzcwphbmQgcmFwaWRpdHkgb2YgbW92ZW1lbnQsIGluIGhpcyBsYXVnaCAod2hpY2gsCnRob3VnaCBub3QgYWx3YXlzIGluIGtlZXBpbmcgd2l0aCB0aGUgY2hhcmFjdGVyCmxpZSByZXByZXNlbnRlZCwgaGUgZGVsaWJlcmF0ZWx5IGVtcGxveWVkIHRvIGF3YWtlbgphbnN3ZXJpbmcgbGF1Z2h0ZXIgaW4gaGlzIGF1ZGllbmNlKSwgYW5kIGZpbmFsbHksIGV2ZW4KaW4gdGhlIHdheSBpbiB3aGljaCBoZSBzYW5rIGhpcyBuZWNrIGludG8gaGlzCnNob3VsZGVycy4gSWYgZWl0aGVyIG9mIHRoZXNlIGFjdG9ycyBoYWQgYXR0ZW1wdGVkCmFueSBvZiBoaXMgcml2YWwncyB0cmlja3MsIGhlIHdvdWxkIGhhdmUgcHJvZHVjZWQgYQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzQ3IiAvPgoKbW9zdCB1bmJlY29taW5nIGVmZmVjdC4gQ29uc2VxdWVudGx5LCBldmVyeSBtYW4KbXVzdCBnZXQgdG8ga25vdyBoaXMgb3duIHBlY3VsaWFyaXRpZXMgYW5kIG11c3QKY29uc3VsdCBub3QgbWVyZWx5IHRoZSBnZW5lcmFsIHJ1bGVzIG9mIHRlY2huaXF1ZSwKYnV0IGhpcyBvd24gbmF0dXJlIGFzIHdlbGwgd2l0aCBhIHZpZXcgdG8gZm9ybWluZwpoaXMgZGVsaXZlcnkuPC90cmFuc2xhdGlvbj4="
translation['11.6.181'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxODEiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCB0aGVyZSBpcyBubyBsYXcgb2YgaGVhdmVuIHdoaWNoCnByb2hpYml0cyB0aGUgcG9zc2Vzc2lvbiBvZiBhbGwgb3IgYXQgYW55IHJhdGUgdGhlCm1ham9yaXR5IG9mIHN0eWxlcyBieSBvbmUgYW5kIHRoZSBzYW1lIHBlcnNvbi4gSQptdXN0IGNvbmNsdWRlIHRoaXMgdG9waWMgd2l0aCBhIHJlbWFyayB3aGljaCBhcHBsaWVzCnRvIGFsbCBteSBvdGhlciB0b3BpY3MgYXMgd2VsbCwgdGhhdCB0aGUgcHJpbWUgZXNzZW50aWFsCmlzIGEgc2Vuc2Ugb2YgcHJvcG9ydGlvbi4gRm9yIEkgYW0gbm90IHRyeWluZyB0bwpmb3JtIGEgY29taWMgYWN0b3IsIGJ1dCBhbiBvcmF0b3IuIENvbnNlcXVlbnRseSwKd2UgbmVlZCBub3Qgc3R1ZHkgYWxsIHRoZSBkZXRhaWxzIG9mIGdlc3R1cmUgbm9yLCBhcwpyZWdhcmRzIG91ciBzcGVha2luZywgYmUgcGVkYW50aWMgaW4gdGhlIHVzZSB3ZQptYWtlIG9mIHRoZSBydWxlcyBnb3Zlcm5pbmcgcHVuY3R1YXRpb24sIHJoeXRobQphbmQgYXBwZWFscyB0byB0aGUgZW1vdGlvbnMuPC90cmFuc2xhdGlvbj4="
translation['11.6.182'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxODIiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBleGFtcGxlLCBpZiBhbgphY3RvciBoYXMgdG8gc3BlYWsgdGhlIGZvbGxvd2luZyBsaW5lcyBvbiB0aGUgc3RhZ2U6PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRlci4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RXVuLjwvaGk+IEkuIGkuIDEuPC9ub3RlPgoKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RXVuLjwvaGk+IEkuIGkuIDEuPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iYmxvY2txdW90ZSI+CjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hhdCBzaGFsbCBJIGRvIHRoZW4/IE5vdCBnbywgZXZlbiBub3csPC9sPgo8bCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdyB3aGVuIHNoZSBjYWxscyBtZT8gT3Igc2hhbGwgSSBzdGVlbCBteSBzb3VsPC9sPgo8bCBjbGFzcz0idHJhbnNsYXRpb24iPk5vIGxvbmdlciB0byBlbmR1cmUgYSBoYXJsb3QncyBpbnN1bHRzPzwvbD48L3F1b3RlPjwvcXVvdGU+CgpoZSB3aWxsIGhlc2l0YXRlIGFzIGluIGRvdWJ0LCB3aWxsIHZhcnkgdGhlIG1vZHVsYXRpb25zCm9mIGhpcyB2b2ljZSwgdG9nZXRoZXIgd2l0aCB0aGUgbW92ZW1lbnRzIG9mIGhhbmQKYW5kIGhlYWQuIEJ1dCBvcmF0b3J5IGhhcyBhIGRpZmZlcmVudCBmbGF2b3VyIGFuZApvYmplY3RzIHRvIGVsYWJvcmF0ZSBjb25kaW1lbnRzLCBzaW5jZSBpdCBjb25zaXN0cyBpbgpzZXJpb3VzIHBsZWFkaW5nLCBub3QgaW4gbWltaWNyeS48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj48bCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgc2hhbGwgSSBkbyB0aGVuPyBOb3QgZ28sIGV2ZW4gbm93LDwvbD4KPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3cgd2hlbiBzaGUgY2FsbHMgbWU/IE9yIHNoYWxsIEkgc3RlZWwgbXkgc291bDwvbD4KPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5ObyBsb25nZXIgdG8gZW5kdXJlIGEgaGFybG90J3MgaW5zdWx0cz88L2w+PC9xdW90ZT48bCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgc2hhbGwgSSBkbyB0aGVuPyBOb3QgZ28sIGV2ZW4gbm93LDwvbD4KPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3cgd2hlbiBzaGUgY2FsbHMgbWU/IE9yIHNoYWxsIEkgc3RlZWwgbXkgc291bDwvbD4KPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5ObyBsb25nZXIgdG8gZW5kdXJlIGEgaGFybG90J3MgaW5zdWx0cz88L2w+PC90cmFuc2xhdGlvbj4="
translation['11.6.183'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxODMiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlIGlzLCB0aGVyZWZvcmUsIGdvb2QgcmVhc29uIGZvciB0aGUgY29uZGVtbmF0aW9uIHBhc3NlZCBvbiBhCmRlbGl2ZXJ5IHdoaWNoIGVudGFpbHMgdGhlIGNvbnRpbnVhbCBhbHRlcmF0aW9uIG9mCmZhY2lhbCBleHByZXNzaW9uLCBhbm5veWluZyByZXN0bGVzc25lc3Mgb2YgZ2VzdHVyZQphbmQgZ3VzdHkgY2hhbmdlcyBvZiB0b25lLiBBbmQgaXQgd2FzIGEgd2lzZSBzYXlpbmcKdGhhdCB0aGUgYW5jaWVudCBvcmF0b3JzIGJvcnJvd2VkIGZyb20gdGhlIEdyZWVrcywKYXMgaXMgcmVjb3JkZWQgYnkgUG9waWxpdXMgTGFlbmFzLCB0byB0aGUgZWZmZWN0IHRoYXQKdGhlcmUgaXMgdG9vIG11Y2ggPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+YnVzaW5lc3M8L3F1b3RlPiBpbiBzdWNoIGRlbGl2ZXJ5LjwvdHJhbnNsYXRpb24+"
translation['11.6.184'] = ""
translation['12.pr'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSJwciIgdW5pdD0iY2hhcHRlciIgLz48L3RyYW5zbGF0aW9uPg=="
translation['12.pr.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPkkgbm93IGNvbWUgdG8gd2hhdCBpcyBieSBmYXIgdGhlIG1vc3QgYXJkdW91cwpwb3J0aW9uIG9mIHRoZSB0YXNrIHdoaWNoIEkgaGF2ZSBzZXQgbXlzZWxmIHRvIHBlcmZvcm0uIEluZGVlZCBoYWQgSSBmdWxseSByZWFsaXNlZCB0aGUgZGlmZmljdWx0aWVzCndoZW4gSSBmaXJzdCBkZXNpZ25lZCB0aGlzIHdvcmssIEkgc2hvdWxkIGhhdmUgY29uc2lkZXJlZCBiZXRpbWVzIHdoZXRoZXIgbXkgc3RyZW5ndGggd2FzIHN1ZmZpY2llbnQgdG8Kc3VwcG9ydCB0aGUgbG9hZCB0aGF0IG5vdyB3ZWlnaHMgdXBvbiBtZSBzbyBoZWF2aWx5LgpCdXQgdG8gYmVnaW4gd2l0aCwgSSBmZWx0IGhvdyBzaGFtZWZ1bCBpdCB3b3VsZCBiZQp0byBmYWlsIHRvIHBlcmZvcm0gd2hhdCBJIGhhZCBwcm9taXNlZCwgYW5kIGxhdGVyLApkZXNwaXRlIHRoZSBmYWN0IHRoYXQgbXkgbGFib3VyIGJlY2FtZSBtb3JlIGFuZAptb3JlIGFyZHVvdXMgYXQgYWxtb3N0IGV2ZXJ5IHN0YWdlLCB0aGUgZmVhciBvZgpzdHVsdGlmeWluZyB3aGF0IEkgaGFkIGFscmVhZHkgd3JpdHRlbiBzdXN0YWluZWQgbXkKY291cmFnZSB0aHJvdWdoIGV2ZXJ5IGRpZmZpY3VsdHkuPC90cmFuc2xhdGlvbj4="
translation['12.pr.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBDb25zZXF1ZW50bHkKZXZlbiBub3csIHRob3VnaCB0aGUgYnVyZGVuIHRoYXQgb3BwcmVzc2VzIG1lIGlzCmdyZWF0ZXIgdGhhbiBldmVyLCB0aGUgZW5kIGlzIGluIHNpZ2h0IGFuZCBJIGFtCnJlc29sdmVkIHRvIGZhaW50IGJ5IHRoZSB3YXlzaWRlIHJhdGhlciB0aGFuIGRlc3BhaXIuCkJ1dCB0aGUgZmFjdCB0aGF0IEkgYmVnYW4gd2l0aCBjb21wYXJhdGl2ZWx5IHRyaXZpYWwKZGV0YWlscyBkZWNlaXZlZCBtZS4gU3Vic2VxdWVudGx5IEkgd2FzIGx1cmVkIHN0aWxsCmZ1cnRoZXIgb24gbXkgdm95YWdlIGJ5IHRoZSB0ZW1wdGF0aW9ucyBvZiB0aGUKZmF2b3VyaW5nIGJyZWV6ZSB0aGF0IGZpbGxlZCBteSBzYWlsczsgYnV0IHRoZSBydWxlcwp3aGljaCBJIHdhcyB0aGVuIGNvbmNlcm5lZCB0byBnaXZlIHdlcmUgc3RpbGwgb2YgYQpmYW1pbGlhciBraW5kIGFuZCBoYWQgYmVlbiBhbHJlYWR5IHRyZWF0ZWQgYnkgbW9zdAp3cml0ZXJzIG9mIHJoZXRvcmljYWwgdGV4dGJvb2tzOiB0aHVzIGZhciBJIHNlZW1lZCB0bwpteXNlbGYgdG8gYmUgc3RpbGwgaW4gc2lnaHQgb2Ygc2hvcmUgYW5kIEkgaGFkIHRoZQpjb21wYW55IG9mIG1hbnkgd2hvIGhhZCB2ZW50dXJlZCB0byBlbnRydXN0IHRoZW1zZWx2ZXMgdG8gdGhlIHNlbGYtc2FtZSB3aW5kcy48L3RyYW5zbGF0aW9uPg=="
translation['12.pr.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgcHJlc2VudGx5IHdoZW4KSSBlbnRlcmVkIG9uIHRoZSB0YXNrIG9mIHNldHRpbmcgZm9ydGggYSB0aGVvcnkgb2YKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjM1NSIgLz4KCmVsb3F1ZW5jZSB3aGljaCBoYWQgYmVlbiBidXQgbmV3bHkgZGlzY292ZXJlZCBhbmQKcmFyZWx5IGVzc2F5ZWQsIEkgZm91bmQgYnV0IGZldyB0aGF0IGhhZCB2ZW50dXJlZCBzbwpmYXIgZnJvbSBoYXJib3VyLiBBbmQgZmluYWxseSBub3cgdGhhdCB0aGUgaWRlYWwKb3JhdG9yLCB3aG9tIGl0IHdhcyBteSBkZXNpZ24gdG8gbW91bGQsIGhhcyBiZWVuCmRpc21pc3NlZCBieSBoaXMgbWFzdGVycyBhbmQgaXMgZWl0aGVyIHByb2NlZWRpbmcKb24gaGlzIHdheSBib3JuZSBvbndhcmQgYnkgaGlzIG93biBpbXBldHVzLCBvcgpzZWVraW5nIHN0aWxsIG1pZ2h0aWVyIGFzc2lzdGFuY2UgZnJvbSB0aGUgaW5uZXJtb3N0CnNocmluZSBvZiB3aXNkb20sIEkgYmVnaW4gdG8gZmVlbCBob3cgZmFyIEkgaGF2ZQpiZWVuIHN3ZXB0IGludG8gdGhlIGdyZWF0IGRlZXAuPC90cmFuc2xhdGlvbj4="
translation['12.pr.4'] = ""
translation['12.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['12.1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBvcmF0b3IgdGhlbiwgd2hvbSBJIGFtIGNvbmNlcm5lZCB0byBmb3JtLApzaGFsbCBiZSB0aGUgb3JhdG9yIGFzIGRlZmluZWQgYnkgTWFyY3VzIENhdG8sIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmEgZ29vZAptYW4sIHNraWxsZWQgaW4gc3BlYWtpbmcuPC9xdW90ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Y3AuIEkuIFByLjwvaGk+IDkuPC9ub3RlPiBCdXQgYWJvdmUgYWxsIGhlIG11c3QKcG9zc2VzcyB0aGUgcXVhbGl0eSB3aGljaCBDYXRvIHBsYWNlcyBmaXJzdCBhbmQgd2hpY2gKaXMgaW4gdGhlIHZlcnkgbmF0dXJlIG9mIHRoaW5ncyB0aGUgZ3JlYXRlc3QgYW5kIG1vc3QKaW1wb3J0YW50LCB0aGF0IGlzLCBoZSBtdXN0IGJlIGEgZ29vZCBtYW4uIFRoaXMgaXMKZXNzZW50aWFsIG5vdCBtZXJlbHkgb24gYWNjb3VudCBvZiB0aGUgZmFjdCB0aGF0LCBpZgp0aGUgcG93ZXJzIG9mIGVsb3F1ZW5jZSBzZXJ2ZSBvbmx5IHRvIGxlbmQgYXJtcyB0bwpjcmltZSwgdGhlcmUgY2FuIGJlIG5vdGhpbmcgbW9yZSBwZXJuaWNpb3VzIHRoYW4KCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNwLiBJLiBQci48L2hpPiA5LjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjM1NyIgLz4KCmVsb3F1ZW5jZSB0byBwdWJsaWMgYW5kIHByaXZhdGUgd2VsZmFyZSBhbGlrZSwgd2hpbGUKSSBteXNlbGYsIHdobyBoYXZlIGxhYm91cmVkIHRvIHRoZSBiZXN0IG9mIG15IGFiaWxpdHkKdG8gY29udHJpYnV0ZSBzb21ldGhpbmcgb2YgdmFsdWUgdG8gb3JhdG9yeSwgc2hhbGwgaGF2ZQpyZW5kZXJlZCB0aGUgd29yc3Qgb2Ygc2VydmljZXMgdG8gbWFua2luZCwgaWYgSSBmb3JnZQp0aGVzZSB3ZWFwb25zIG5vdCBmb3IgYSBzb2xkaWVyLCBidXQgZm9yIGEgcm9iYmVyLgpCdXQgd2h5IHNwZWFrIG9mIG15c2VsZj88L3RyYW5zbGF0aW9uPg=="
translation['12.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBOYXR1cmUgaGVyc2VsZiB3aWxsIGhhdmUKcHJvdmVkIG5vdCBhIG1vdGhlciwgYnV0IGEgc3RlcG1vdGhlciB3aXRoIHJlZ2FyZAp0byB3aGF0IHdlIGRlZW0gaGVyIGdyZWF0ZXN0IGdpZnQgdG8gbWFuLCB0aGUgZ2lmdAp0aGF0IGRpc3Rpbmd1aXNoZXMgdXMgZnJvbSBvdGhlciBsaXZpbmcgdGhpbmdzLCBpZiBzaGUKZGV2aXNlZCB0aGUgcG93ZXIgb2Ygc3BlZWNoIHRvIGJlIHRoZSBhY2NvbXBsaWNlIG9mCmNyaW1lLCB0aGUgZm9lIHRvIGlubm9jZW5jeSBhbmQgdGhlIGVuZW15IG9mIHRydXRoLgpGb3IgaXQgaGFkIGJlZW4gYmV0dGVyIGZvciBtZW4gdG8gYmUgYm9ybiBkdW1iIGFuZApkZXZvaWQgb2YgcmVhc29uIHRoYW4gdG8gdHVybiB0aGUgZ2lmdHMgb2YgcHJvdmlkZW5jZQp0byB0aGVpciBtdXR1YWwgZGVzdHJ1Y3Rpb24uPC90cmFuc2xhdGlvbj4="
translation['12.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgdGhpcyBjb252aWN0aW9uIG9mCm1pbmUgZ29lcyBmdXJ0aGVyLiBGb3IgSSBkbyBub3QgbWVyZWx5IGFzc2VydCB0aGF0CnRoZSBpZGVhbCBvcmF0b3Igc2hvdWxkIGJlIGEgZ29vZCBtYW4sIGJ1dCBJIGFmZmlybQp0aGF0IG5vIG1hbiBjYW4gYmUgYW4gb3JhdG9yIHVubGVzcyBoZSBpcyBhIGdvb2QgbWFuLgpGb3IgaXQgaXMgaW1wb3NzaWJsZSB0byByZWdhcmQgdGhvc2UgbWVuIGFzIGdpZnRlZAp3aXRoIGludGVsbGlnZW5jZSB3aG8gb24gYmVpbmcgb2ZmZXJlZCB0aGUgY2hvaWNlCmJldHdlZW4gdGhlIHR3byBwYXRocyBvZiB2aXJ0dWUgYW5kIG9mIHZpY2UgY2hvb3NlCnRoZSBsYXR0ZXIsIG5vciBjYW4gd2UgYWxsb3cgdGhlbSBwcnVkZW5jZSwgd2hlbgpieSB0aGUgdW5mb3Jlc2VlbiBpc3N1ZSBvZiB0aGVpciBvd24gYWN0aW9ucyB0aGV5CnJlbmRlciB0aGVtc2VsdmVzIGxpYWJsZSBub3QgbWVyZWx5IHRvIHRoZSBoZWF2aWVzdApwZW5hbHRpZXMgb2YgdGhlIGxhd3MsIGJ1dCB0byB0aGUgaW5ldml0YWJsZSB0b3JtZW50Cm9mIGFuIGV2aWwgY29uc2NpZW5jZS48L3RyYW5zbGF0aW9uPg=="
translation['12.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgaWYgdGhlIHZpZXcgdGhhdCBhIGJhZAptYW4gaXMgbmVjZXNzYXJpbHkgYSBmb29sIGlzIG5vdCBtZXJlbHkgaGVsZCBieSBwaGlsb3NvbHBoZXJzLCBidXQgaXMgdGhlIHVuaXZlcnNhbCBiZWxpZWYgb2Ygb3JkaW5hcnkgbWVuLAp0aGUgZm9vbCB3aWxsIG1vc3QgYXNzdXJlZGx5IG5ldmVyIGJlY29tZSBhbiBvcmF0b3IuClRvIHRoaXMgbXVzdCBiZSBhZGRlZCB0aGUgZmFjdCB0aGF0IHRoZSBtaW5kIHdpbGwKbm90IGZpbmQgbGVpc3VyZSBldmVuIGZvciB0aGUgc3R1ZHkgb2YgdGhlIG5vYmxlc3Qgb2YKdGFza3MsIHVubGVzcyBpdCBmaXJzdCBiZSBmcmVlIGZyb20gdmljZS4gVGhlIHJlYXNvbnMgZm9yCnRoaXMgYXJlLCBmaXJzdCwgdGhhdCB2aWxlbmVzcyBhbmQgdmlydHVlIGNhbm5vdCBqb2ludGx5CmluaGFiaXQgaW4gdGhlIHNlbGZzYW1lIGhlYXJ0IGFuZCB0aGF0IGl0IGlzIGFzIGltcG9zc2libGUgZm9yIG9uZSBhbmQgdGhlIHNhbWUgbWluZCB0byBoYXJib3VyIGdvb2QKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjM1OSIgLz4KCmFuZCBldmlsIHRob3VnaHRzIGFzIGl0IGlzIGZvciBvbmUgbWFuIHRvIGJlIGF0IG9uY2UKYm90aCBnb29kIGFuZCBldmlsOjwvdHJhbnNsYXRpb24+"
translation['12.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiBhbmQgc2Vjb25kbHksIHRoYXQgaWYgdGhlIGludGVsbGlnZW5jZSBpcyB0byBiZSBjb25jZW50cmF0ZWQgb24gc3VjaCBhIHZhc3Qgc3ViamVjdCBhcwplbG9xdWVuY2UgaXQgbXVzdCBiZSBmcmVlIGZyb20gYWxsIG90aGVyIGRpc3RyYWN0aW9ucywKYW1vbmcgd2hpY2ggbXVzdCBiZSBpbmNsdWRlZCBldmVuIHRob3NlIHByZW9jY3VwYXRpb25zIHdoaWNoIGFyZSBmcmVlIGZyb20gYmxhbWUuIEZvciBpdCBpcyBvbmx5CndoZW4gaXQgaXMgZnJlZSBhbmQgc2VsZi1wb3NzZXNzZWQsIHdpdGggbm90aGluZyB0bwpkaXZlcnQgaXQgb3IgbHVyZSBpdCBlbHNld2hlcmUsIHRoYXQgaXQgd2lsbCBmaXggaXRzCmF0dGVudGlvbiBzb2xlbHkgb24gdGhhdCBnb2FsLCB0aGUgYXR0YWlubWVudCBvZiB3aGljaAppcyB0aGUgb2JqZWN0IG9mIGl0cyBwcmVwYXJhdGlvbnMuPC90cmFuc2xhdGlvbj4="
translation['12.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBJZiBvbiB0aGUgb3RoZXIKaGFuZCBpbm9yZGluYXRlIGNhcmUgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiBvdXIKZXN0YXRlcywgZXhjZXNzIG9mIGFueGlldHkgb3ZlciBob3VzZWhvbGQgYWZmYWlycywKcGFzc2lvbmF0ZSBkZXZvdGlvbiB0byBodW50aW5nIG9yIHRoZSBzYWNyaWZpY2Ugb2YKd2hvbGUgZGF5cyB0byB0aGUgc2hvd3Mgb2YgdGhlIHRoZWF0cmUsIHJvYiBvdXIKc3R1ZGllcyBvZiBtdWNoIG9mIHRoZSB0aW1lIHRoYXQgaXMgdGhlaXIgZHVlIChmb3IKZXZlcnkgbW9tZW50IHRoYXQgaXMgZ2l2ZW4gdG8gb3RoZXIgdGhpbmdzIGludm9sdmVzCmEgbG9zcyBvZiB0aW1lIGZvciBzdHVkeSksIHdoYXQsIHRoaW5rIHlvdSwgd2lsbCBiZSB0aGUKcmVzdWx0cyBvZiBkZXNpcmUsIGF2YXJpY2UsIGFuZCBlbnZ5LCB3aGljaCB3YWtlbiBzdWNoCnZpb2xlbnQgdGhvdWdodHMgd2l0aGluIG91ciBzb3VscyB0aGF0IHRoZXkgZGlzdHVyYgpvdXIgdmVyeSBzbHVtYmVycyBhbmQgb3VyIGRyZWFtcz88L3RyYW5zbGF0aW9uPg=="
translation['12.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBUaGVyZSBpcyBub3RoaW5nCnNvIHByZW9jY3VwaWVkLCBzbyBkaXN0cmFjdGVkLCBzbyByZW50IGFuZCB0b3JuIGJ5IHNvCm1hbnkgYW5kIHN1Y2ggdmFyaWVkIHBhc3Npb25zIGFzIGFuIGV2aWwgbWluZC4gRm9yCndoZW4gaXQgY2hlcmlzaGVzIHNvbWUgZGFyayBkZXNpZ24sIGl0IGlzIHRvcm1lbnRlZAp3aXRoIGhvcGUsIGNhcmUgYW5kIGFuZ3Vpc2ggb2Ygc3Bpcml0LCBhbmQgZXZlbiB3aGVuCml0IGhhcyBhY2NvbXBsaXNoZWQgaXRzIGNyaW1pbmFsIHB1cnBvc2UsIGl0IGlzIHJhY2tlZApieSBhbnhpZXR5LCByZW1vcnNlIGFuZCB0aGUgZmVhciBvZiBhbGwgbWFubmVyIG9mCnB1bmlzaG1lbnRzLiBBbWlkIHN1Y2ggcGFzc2lvbnMgYXMgdGhlc2Ugd2hhdApyb29tIGlzIHRoZXJlIGZvciBsaXRlcmF0dXJlIG9yIGFueSB2aXJ0dW91cyBwdXJzdWl0PwpZb3UgbWlnaHQgYXMgd2VsbCBsb29rIGZvciBmcnVpdCBpbiBsYW5kIHRoYXQgaXMgY2hva2VkCndpdGggdGhvcm5zIGFuZCBicmFtYmxlcy48L3RyYW5zbGF0aW9uPg=="
translation['12.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiBXZWxsIHRoZW4sIEkgYXNrIHlvdSwgaXMKbm90IHNpbXBsaWNpdHkgb2YgbGlmZSBlc3NlbnRpYWwgaWYgd2UgYXJlIHRvIGJlIGFibGUgdG8KZW5kdXJlIHRoZSB0b2lsIGVudGFpbGVkIGJ5IHN0dWR5PyBXaGF0IGNhbiB3ZQpob3BlIHRvIGdldCBmcm9tIGx1c3Qgb3IgbHV4dXJ5PyBJcyBub3QgdGhlIGRlc2lyZQp0byB3aW4gcHJhaXNlIG9uZSBvZiB0aGUgc3Ryb25nZXN0IHN0aW11bGFudHMgdG8gYQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzYxIiAvPgoKcGFzc2lvbiBmb3IgbGl0ZXJhdHVyZT8gQnV0IGRvZXMgdGhhdCBtZWFuIHRoYXQgd2UKYXJlIHRvIHN1cHBvc2UgdGhhdCBwcmFpc2UgaXMgYW4gb2JqZWN0IG9mIGNvbmNlcm4gdG8KYmFkIG1lbj8gU3VyZWx5IGV2ZXJ5IG9uZSBvZiBteSByZWFkZXJzIG11c3QgYnkKbm93IGhhdmUgcmVhbGlzZWQgdGhhdCBvcmF0b3J5IGlzIGluIHRoZSBtYWluIGNvbmNlcm5lZCB3aXRoIHRoZSB0cmVhdG1lbnQgb2Ygd2hhdCBpcyBqdXN0IGFuZApob25vdXJhYmxlPyBDYW4gYSBiYWQgYW5kIHVuanVzdCBtYW4gc3BlYWsgb24Kc3VjaCB0aGVtZXMgYXMgdGhlIGRpZ25pdHkgb2YgdGhlIHN1YmplY3QgZGVtYW5kcz8KPC90cmFuc2xhdGlvbj4="
translation['12.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk5heSwgZXZlbiBpZiB3ZSBleGNsdWRlIHRoZSBtb3N0IGltcG9ydGFudCBhc3BlY3RzCm9mIHRoZSBxdWVzdGlvbiBub3cgYmVmb3JlIHVzLCBhbmQgbWFrZSB0aGUgaW1wb3NzaWJsZSBjb25jZXNzaW9uIHRoYXQgdGhlIGJlc3QgYW5kIHdvcnN0IG9mIG1lbgptYXkgaGF2ZSB0aGUgc2FtZSB0YWxlbnQsIGluZHVzdHJ5IGFuZCBsZWFybmluZywgd2UKYXJlIHN0aWxsIGNvbmZyb250ZWQgYnkgdGhlIHF1ZXN0aW9uIGFzIHRvIHdoaWNoIG9mCnRoZSB0d28gaXMgZW50aXRsZWQgdG8gYmUgY2FsbGVkIHRoZSBiZXR0ZXIgb3JhdG9yLiBUaGUKYW5zd2VyIGlzIHN1cmVseSBjbGVhciBlbm91Z2g6IGl0IHdpbGwgYmUgaGUgd2hvIGlzCnRoZSBiZXR0ZXIgbWFuLiBDb25zZXF1ZW50bHksIHRoZSBiYWQgbWFuIGFuZCB0aGUKcGVyZmVjdCBvcmF0b3IgY2FuIG5ldmVyIGJlIGlkZW50aWNhbC48L3RyYW5zbGF0aW9uPg=="
translation['12.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIG5vdGhpbmcKaXMgcGVyZmVjdCwgaWYgdGhlcmUgZXhpc3RzIHNvbWV0aGluZyBlbHNlIHRoYXQgaXMKYmV0dGVyLiBIb3dldmVyLCBhcyBJIGRvIG5vdCB3aXNoIHRvIGFwcGVhciB0bwphZG9wdCB0aGUgcHJhY3RpY2UgZGVhciB0byB0aGUgU29jcmF0aWNzIG9mIGZyYW1pbmcKYW5zd2VycyB0byBteSBvd24gcXVlc3Rpb25zLCBsZXQgbWUgYXNzdW1lIHRoZQpleGlzdGVuY2Ugb2YgYSBtYW4gc28gb2JzdGluYXRlbHkgYmxpbmQgdG8gdGhlIHRydXRoCmFzIHRvIHZlbnR1cmUgdG8gbWFpbnRhaW4gdGhhdCBhIGJhZCBtYW4gZXF1aXBwZWQKd2l0aCB0aGUgc2FtZSB0YWxlbnRzLCBpbmR1c3RyeSBhbmQgbGVhcm5pbmcgd2lsbApiZSBub3QgYSB3aGl0IGluZmVyaW9yIHRvIHRoZSBnb29kIG1hbiBhcyBhbgpvcmF0b3I7IGFuZCBsZXQgbWUgc2hvdyB0aGF0IGhlIHRvbyBpcyBtYWQuCjwvdHJhbnNsYXRpb24+"
translation['12.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBpcyBvbmUgcG9pbnQgYXQgYW55IHJhdGUgd2hpY2ggbm8gb25lIHdpbGwKcXVlc3Rpb24sIG5hbWVseSwgdGhhdCB0aGUgYWltIG9mIGV2ZXJ5IHNwZWVjaCBpcyB0bwpjb252aW5jZSB0aGUganVkZ2UgdGhhdCB0aGUgY2FzZSB3aGljaCBpdCBwdXRzIGZvcndhcmQgaXMgdHJ1ZSBhbmQgaG9ub3VyYWJsZS4gV2VsbCB0aGVuLCB3aGljaCB3aWxsCmRvIHRoaXMgYmVzdCwgdGhlIGdvb2QgbWFuIG9yIHRoZSBiYWQ/IFRoZSBnb29kCm1hbiB3aWxsIHdpdGhvdXQgZG91YnQgbW9yZSBvZnRlbiBzYXkgd2hhdCBpcyB0cnVlCmFuZCBob25vdXJhYmxlLjwvdHJhbnNsYXRpb24+"
translation['12.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGV2ZW4gc3VwcG9zaW5nIHRoYXQgaGlzIGR1dHkKc2hvdWxkLCBhcyBJIHNoYWxsIHNob3cgbWF5IHNvbWV0aW1lcyBoYXBwZW4sIGxlYWQKaGltIHRvIG1ha2Ugc3RhdGVtZW50cyB3aGljaCBhcmUgZmFsc2UsIGhpcyB3b3JkcwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzYzIiAvPgoKYXJlIHN0aWxsIGNlcnRhaW4gdG8gY2FycnkgZ3JlYXRlciB3ZWlnaHQgd2l0aCBoaXMKYXVkaWVuY2UuIE9uIHRoZSBvdGhlciBoYW5kIGJhZCBtZW4sIGluIHRoZWlyCmNvbnRlbXB0IGZvciBwdWJsaWMgb3BpbmlvbiBhbmQgdGhlaXIgaWdub3JhbmNlIG9mCndoYXQgaXMgcmlnaHQsIHNvbWV0aW1lcyBkcm9wIHRoZWlyIG1hc2sgdW5hd2FyZXMsCmFuZCBhcmUgaW1wdWRlbnQgaW4gdGhlIHN0YXRlbWVudCBvZiB0aGVpciBjYXNlIGFuZApzaGFtZWxlc3MgaW4gdGhlaXIgYXNzZXJ0aW9ucy48L3RyYW5zbGF0aW9uPg=="
translation['12.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gRnVydGhlciwgaW4gdGhlaXIKYXR0ZW1wdCB0byBhY2hpZXZlIHRoZSBpbXBvc3NpYmxlIHRoZXkgZGlzcGxheSBhbgp1bnNlZW1seSBwZXJzaXN0ZW5jeSBhbmQgdW5hdmFpbGluZyBlbmVyZ3kuIEZvcgppbiBsYXdzdWl0cyBubyBsZXNzIHRoYW4gaW4gdGhlIG9yZGluYXJ5IHBhdGhzIG9mCmxpZmUsIHRoZXkgY2hlcmlzaCBkZXByYXZlZCBleHBlY3RhdGlvbnMuIEJ1dCBpdApvZnRlbiBoYXBwZW5zIHRoYXQgZXZlbiB3aGVuIHRoZXkgdGVsbCB0aGUgdHJ1dGgKdGhleSBmYWlsIHRvIHdpbiBiZWxpZWYsIGFuZCB0aGUgbWVyZSBmYWN0IHRoYXQgc3VjaAphIG1hbiBpcyBpdHMgYWR2b2NhdGUgaXMgcmVnYXJkZWQgYXMgYW4gaW5kaWNhdGlvbiBvZgp0aGUgYmFkbmVzcyBvZiB0aGUgY2FzZS48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5JIG11c3Qgbm93IHByb2NlZWQgdG8gZGVhbCB3aXRoIHRoZSBvYmplY3Rpb25zCndoaWNoIGNvbW1vbiBvcGluaW9uIGlzIHByYWN0aWNhbGx5IHVuYW5pbW91cyBpbgpicmluZ2luZyBhZ2FpbnN0IHRoaXMgdmlldy4gV2FzIG5vdCBEZW1vc3RoZW5lcwphbiBvcmF0b3I/IEFuZCB5ZXQgd2UgYXJlIHRvbGQgdGhhdCBoZSB3YXMgYSBiYWQKbWFuLiBXYXMgbm90IENpY2VybyBhbiBvcmF0b3I/IEFuZCB5ZXQgdGhlcmUKYXJlIG1hbnkgd2hvIGhhdmUgZm91bmQgZmF1bHQgd2l0aCBoaXMgY2hhcmFjdGVyIGFzCndlbGwuIFdoYXQgYW0gSSB0byBhbnN3ZXI/IE15IHJlcGx5IHdpbGwgYmUKaGlnaGx5IHVucG9wdWxhciBhbmQgSSBtdXN0IGZpcnN0IGF0dGVtcHQgdG8gY29uY2lsaWF0ZSBteSBhdWRpZW5jZS48bWlsZXN0b25lIG49IjE1IiB1bml0PSJzZWN0aW9uIiAvPiBJIGRvIG5vdCBjb25zaWRlciB0aGF0CkRlbW9zdGhlbmVzIGRlc2VydmVzIHRoZSBzZXJpb3VzIHJlZmxleGlvbnMgdGhhdApoYXZlIGJlZW4gbWFkZSB1cG9uIGhpcyBjaGFyYWN0ZXIgdG8gc3VjaCBhbgpleHRlbnQgdGhhdCBJIGFtIGJvdW5kIHRvIGJlbGlldmUgYWxsIHRoZSBjaGFyZ2VzCmFtYXNzZWQgYWdhaW5zdCBoaW0gYnkgaGlzIGVuZW1pZXM7IGZvciBteSByZWFkaW5nCnRlbGxzIG1lIHRoYXQgaGlzIHB1YmxpYyBwb2xpY3kgd2FzIG9mIHRoZSBub2JsZXN0IGFuZApoaXMgZW5kIG1vc3QgZ2xvcmlvdXMuPG1pbGVzdG9uZSBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIEkgY2Fubm90IHNlZSB0aGF0IHRoZQphaW1zIG9mIENpY2VybyB3ZXJlIGluIGFueSBwb3J0aW9uIG9mIGhpcyBjYXJlZXIgb3RoZXIKdGhhbiBzdWNoIGFzIG1heSBiZWNvbWUgYW4gZXhjZWxsZW50IGNpdGl6ZW4uIEFzCmV2aWRlbmNlIEkgd291bGQgY2l0ZSB0aGUgZmFjdCB0aGF0IGhpcyBiZWhhdmlvdXIgYXMKY29uc3VsIHdhcyBtYWduaWZpY2VudCBhbmQgaGlzIGFkbWluaXN0cmF0aW9uIG9mIGhpcwpwcm92aW5jZSBhIG1vZGVsIG9mIGludGVncml0eSwgd2hpbGUgaGUgcmVmdXNlZCB0bwoKPHBiIGlkPSJwLjM2NSIgLz4KCmJlY29tZSBvbmUgb2YgdGhlIHR3ZW50eSBjb21taXNzaW9uZXJzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+Rm9yIHRoZSBkaXN0cmlidXRpb24gb2YgdGhlIENhbXBhbmlhbiBsYW5kcy48L25vdGU+IGFuZCBpbiB0aGUKZ3JpZXZvdXMgY2l2aWwgd2FycyB3aGljaCBhZmZsaWN0ZWQgaGlzIGdlbmVyYXRpb24KYmV5b25kIGFsbCBvdGhlcnMsIG5laXRoZXIgaG9wZSBub3IgZmVhciBldmVyIGRldGVycmVkCmhpbSBmcm9tIGdpdmluZyBoaXMgc3VwcG9ydCB0byB0aGUgYmV0dGVyIHBhcnR5LCB0aGF0CmlzIHRvIHNheSwgdG8gdGhlIGludGVyZXN0cyBvZiB0aGUgY29tbW9uIHdlYWwuClNvbWUsIGl0IGlzIHRydWUsIHJlZ2FyZCBoaW0gYXMgbGFja2luZyBpbiBjb3VyYWdlLjxtaWxlc3RvbmUgbj0iMTciIHVuaXQ9InNlY3Rpb24iIC8+ClRoZSBiZXN0IGFuc3dlciB0byB0aGVzZSBjcml0aWNzIGlzIHRvIGJlIGZvdW5kIGluIGhpcwpvd24gd29yZHMsIHRvIHRoZSBlZmZlY3QgdGhhdCBoZSB3YXMgdGltaWQgbm90IGluCmNvbmZyb250aW5nIHBlcmlsLCBidXQgaW4gYW50aWNpcGF0aW5nIGl0LiBBbmQgdGhpcwpoZSBwcm92ZWQgYWxzbyBieSB0aGUgbWFubmVyIG9mIGhpcyBkZWF0aCwgaW4gbWVldGluZwp3aGljaCBoZSBkaXNwbGF5ZWQgYSBzaW5ndWxhciBmb3J0aXR1ZGUuPG1pbGVzdG9uZSBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGV2ZW4KaWYgdGhlc2UgdHdvIG1lbiBsYWNrZWQgdGhlIHBlcmZlY3Rpb24gb2YgdmlydHVlLCBJCndpbGwgcmVwbHkgdG8gdGhvc2Ugd2hvIGFzayBpZiB0aGV5IHdlcmUgb3JhdG9ycywgaW4KdGhlIG1hbm5lciBpbiB3aGljaCB0aGUgU3RvaWNzIHdvdWxkIHJlcGx5LCBpZiBhc2tlZAp3aGV0aGVyIFplbm8sIENsZWFudGhlcyBvciBDaHJ5c2lwcHVzIGhpbXNlbGYgd2VyZQp3aXNlIG1lbi4gSSBzaGFsbCBzYXkgdGhhdCB0aGV5IHdlcmUgZ3JlYXQgbWVuCmRlc2VydmluZyBvdXIgdmVuZXJhdGlvbiwgYnV0IHRoYXQgdGhleSBkaWQgbm90CmF0dGFpbiB0byB0aGF0IHdoaWNoIGlzIHRoZSBoaWdoZXN0IHBlcmZlY3Rpb24Kb2YgbWFuJ3MgbmF0dXJlLjxtaWxlc3RvbmUgbj0iMTkiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBkaWQgbm90IFB5dGhhZ29yYXMgZGVzaXJlCnRoYXQgaGUgc2hvdWxkIG5vdCBiZSBjYWxsZWQgYSB3aXNlIG1hbiwgbGlrZSB0aGUKc2FnZXMgd2hvIHByZWNlZGVkIGhpbSwgYnV0IHJhdGhlciBhIHN0dWRlbnQgb2YKd2lzZG9tPzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPmkuIGUuPC9oaT4gPGZvcmVpZ24gbGFuZz0iZ3JlZWsiPmZpbG8vc29mb3MsPC9mb3JlaWduPiBhIHRlcm0gb2Ygd2hpY2ggaGUgd2FzIHJlcHV0ZWQgdGhlCmludmVudG9yLjwvbm90ZT4gQnV0IGZvciBteSBvd24gcGFydCwgY29uZm9ybWluZyB0byB0aGUKbGFuZ3VhZ2Ugb2YgZXZlcnkgZGF5LCBJIGhhdmUgc2FpZCB0aW1lIGFuZCBhZ2FpbiwKYW5kIHNoYWxsIGNvbnRpbnVlIHRvIHNheSwgdGhhdCBDaWNlcm8gd2FzIGEgcGVyZmVjdApvcmF0b3IsIGp1c3QgYXMgaW4gb3JkaW5hcnkgc3BlZWNoIHdlIGNhbGwgb3VyIGZyaWVuZHMKZ29vZCBhbmQgc2Vuc2libGUgbWVuLCBhbHRob3VnaCBuZWl0aGVyIG9mIHRoZXNlCnRpdGxlcyBjYW4gcmVhbGx5IGJlIGdpdmVuIHRvIGFueSBzYXZlIHRvIGhpbSB0aGF0CmhhcyBhdHRhaW5lZCB0byBwZXJmZWN0IHdpc2RvbS4gQnV0IGlmIEkgYW0gY2FsbGVkCnVwb24gdG8gc3BlYWsgc3RyaWN0bHkgYW5kIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUKbW9zdCByaWdpZCBsYXdzIG9mIHRydXRoLCBJIHNoYWxsIHByb2NsYWltIHRoYXQgSSBzZWVrCnRvIGZpbmQgdGhhdCBzYW1lIHBlcmZlY3Qgb3JhdG9yIHdob20gQ2ljZXJvIGFsc28Kc291Z2h0IHRvIGRpc2NvdmVyLjxtaWxlc3RvbmUgbj0iMjAiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciB3aGlsZSBJIGFkbWl0IHRoYXQgaGUgc3Rvb2QKb24gdGhlIGxvZnRpZXN0IHBpbm5hY2xlIG9mIGVsb3F1ZW5jZSwgYW5kIGNhbiBkaXNjb3ZlciBzY2FyY2VseSBhIHNpbmdsZSBkZWZpY2llbmN5IGluIGhpbSwgYWx0aG91Z2ggSQoKPHBiIGlkPSJwLjM2NyIgLz4KCm1pZ2h0IHBlcmhhcHMgZGlzY292ZXIgY2VydGFpbiBzdXBlcmZsdWl0aWVzIHdoaWNoIEkKdGhpbmsgaGUgd291bGQgaGF2ZSBwcnVuZWQgYXdheSAoZm9yIHRoZSBnZW5lcmFsCnZpZXcgb2YgdGhlIGxlYXJuZWQgaXMgdGhhdCBoZSBwb3NzZXNzZWQgbWFueSB2aXJ0dWVzCmFuZCBhIGZldyBmYXVsdHMsIGFuZCBoZSBoaW1zZWxmPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+QnJ1dC48L2hpPiB4Y2kuIDMxNi4gPGhpIHJlbmQ9Iml0YWxpY3MiPk9yYXQuPC9oaT4geHh4LiAxMDcuPC9ub3RlPiBzdGF0ZXMgdGhhdCBoZSBoYXMKc3VjY2VlZGVkIGluIHN1cHByZXNzaW5nIG11Y2ggb2YgaGlzIHlvdXRoZnVsCmV4dWJlcmFuY2UpLCBub25lIHRoZSBsZXNzLCBpbiB2aWV3IG9mIHRoZSBmYWN0IHRoYXQsCmFsdGhvdWdoIGhlIGhhZCBieSBubyBtZWFucyBhIGxvdyBvcGluaW9uIG9mIGhpbXNlbGYsIGhlIG5ldmVyIGNsYWltZWQgdG8gYmUgdGhlIHBlcmZlY3Qgc2FnZSwgYW5kLApoYWQgaGUgYmVlbiBncmFudGVkIGxvbmdlciBsaWZlIGFuZCBsZXNzIHRyb3VibGVkIGNvbmRpdGlvbnMgZm9yIHRoZSBjb21wb3NpdGlvbiBvZiBoaXMgd29ya3MsIHdvdWxkIGRvdWJ0bGVzcyBoYXZlIHNwb2tlbiBiZXR0ZXIgc3RpbGwsIEkgc2hhbGwgbm90IGxheSBteXNlbGYKb3BlbiB0byB0aGUgY2hhcmdlIG9mIHVuZ2VuZXJvdXMgY3JpdGljaXNtLCBpZiBJIHNheQp0aGF0IEkgYmVsaWV2ZSB0aGF0IGhlIGZhaWxlZCBhY3R1YWxseSB0byBhY2hpZXZlIHRoYXQKcGVyZmVjdGlvbiB0byB0aGUgYXR0YWlubWVudCBvZiB3aGljaCBub25lIGhhdmUKYXBwcm9hY2hlZCBtb3JlIG5lYXJseSw8bWlsZXN0b25lIG49IjIxIiB1bml0PSJzZWN0aW9uIiAvPiBhbmQgaW5kZWVkIGhhZCBJIGZlbHQgb3RoZXJ3aXNlIGluIHRoaXMgY29ubmV4aW9uLCBJIG1pZ2h0IGhhdmUgZGVmZW5kZWQgbXkKcG9pbnQgd2l0aCBncmVhdGVyIGJvbGRuZXNzIGFuZCBmcmVlZG9tLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+UXVpbnRpbGlhbidzIHJldmVyZW5jZSBmb3IgQ2ljZXJvIGlzIHN1Y2ggdGhhdCBoZSBmZWVscwpoYW1wZXJlZCBpbiBtYWludGFpbmluZyBoaXMgdGhlc2lzLjwvbm90ZT4gTWFyY3VzCkFudG9uaXVzIGRlY2xhcmVkIHRoYXQgaGUgaGFkIHNlZW4gbm8gbWFuIHdobyB3YXMKZ2VudWluZWx5IGVsb3F1ZW50IChhbmQgdG8gYmUgZWxvcXVlbnQgaXMgYSBmYXIgbGVzcwphY2hpZXZlbWVudCB0aGFuIHRvIGJlIGFuIG9yYXRvciksIHdoaWxlIENpY2VybyBoaW1zZWxmIGhhcyBmYWlsZWQgdG8gZmluZCBoaXMgb3JhdG9yIGluIGFjdHVhbCBsaWZlIGFuZAptZXJlbHkgaW1hZ2luZXMgYW5kIHN0cml2ZXMgdG8gZGVwaWN0IHRoZSBpZGVhbC4gU2hhbGwKSSB0aGVuIGJlIGFmcmFpZCB0byBzYXkgdGhhdCBpbiB0aGUgZXRlcm5pdHkgb2YgdGltZQp0aGF0IGlzIHlldCB0byBiZSwgc29tZXRoaW5nIG1vcmUgcGVyZmVjdCBtYXkgYmUgZm91bmQKdGhhbiBoYXMgeWV0IGV4aXN0ZWQ/PG1pbGVzdG9uZSBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gSSBzYXkgbm90aGluZyBvZiB0aG9zZSBjcml0aWNzCndobyB3aWxsIG5vdCBhbGxvdyBzdWZmaWNpZW50IGNyZWRpdCBldmVuIGZvciBlbG9xdWVuY2UKdG8gQ2ljZXJvIGFuZCBEZW1vc3RoZW5lcywgYWx0aG91Z2ggQ2ljZXJvIGhpbXNlbGYKZG9lcyBub3QgcmVnYXJkIERlbW9zdGhlbmVzIGFzIGZsYXdsZXNzLCBidXQgYXNzZXJ0cwp0aGF0IGhlIHNvbWV0aW1lcyBub2RzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIHguIGkuIDI0Ljwvbm90ZT4gd2hpbGUgZXZlbiBDaWNlcm8gZmFpbHMgdG8Kc2F0aXNmeSBCcnV0dXMgYW5kIENhbHZ1cyAoYXQgYW55IHJhdGUgdGhleSBjcml0aWNpc2VkCmhpcyBzdHlsZSB0byBoaXMgZmFjZSksIG9yIHRvIHdpbiB0aGUgY29tcGxldGUgYXBwcm92YWwKb2YgZWl0aGVyIG9mIHRoZSBBc2luaWksIHdobyBpbiB2YXJpb3VzIHBhc3NhZ2VzIGF0dGFjawp0aGUgZmF1bHRzIG9mIGhpcyBvcmF0b3J5IGluIGxhbmd1YWdlIHdoaWNoIGlzIHBvc2l0aXZlbHkKaG9zdGhlLjwvcD4KCjwvdHJhbnNsYXRpb24+"
translation['12.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5JIG11c3Qgbm93IHByb2NlZWQgdG8gZGVhbCB3aXRoIHRoZSBvYmplY3Rpb25zCndoaWNoIGNvbW1vbiBvcGluaW9uIGlzIHByYWN0aWNhbGx5IHVuYW5pbW91cyBpbgpicmluZ2luZyBhZ2FpbnN0IHRoaXMgdmlldy4gV2FzIG5vdCBEZW1vc3RoZW5lcwphbiBvcmF0b3I/IEFuZCB5ZXQgd2UgYXJlIHRvbGQgdGhhdCBoZSB3YXMgYSBiYWQKbWFuLiBXYXMgbm90IENpY2VybyBhbiBvcmF0b3I/IEFuZCB5ZXQgdGhlcmUKYXJlIG1hbnkgd2hvIGhhdmUgZm91bmQgZmF1bHQgd2l0aCBoaXMgY2hhcmFjdGVyIGFzCndlbGwuIFdoYXQgYW0gSSB0byBhbnN3ZXI/IE15IHJlcGx5IHdpbGwgYmUKaGlnaGx5IHVucG9wdWxhciBhbmQgSSBtdXN0IGZpcnN0IGF0dGVtcHQgdG8gY29uY2lsaWF0ZSBteSBhdWRpZW5jZS48L3RyYW5zbGF0aW9uPg=="
translation['12.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz4gSSBkbyBub3QgY29uc2lkZXIgdGhhdApEZW1vc3RoZW5lcyBkZXNlcnZlcyB0aGUgc2VyaW91cyByZWZsZXhpb25zIHRoYXQKaGF2ZSBiZWVuIG1hZGUgdXBvbiBoaXMgY2hhcmFjdGVyIHRvIHN1Y2ggYW4KZXh0ZW50IHRoYXQgSSBhbSBib3VuZCB0byBiZWxpZXZlIGFsbCB0aGUgY2hhcmdlcwphbWFzc2VkIGFnYWluc3QgaGltIGJ5IGhpcyBlbmVtaWVzOyBmb3IgbXkgcmVhZGluZwp0ZWxscyBtZSB0aGF0IGhpcyBwdWJsaWMgcG9saWN5IHdhcyBvZiB0aGUgbm9ibGVzdCBhbmQKaGlzIGVuZCBtb3N0IGdsb3Jpb3VzLjwvdHJhbnNsYXRpb24+"
translation['12.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIEkgY2Fubm90IHNlZSB0aGF0IHRoZQphaW1zIG9mIENpY2VybyB3ZXJlIGluIGFueSBwb3J0aW9uIG9mIGhpcyBjYXJlZXIgb3RoZXIKdGhhbiBzdWNoIGFzIG1heSBiZWNvbWUgYW4gZXhjZWxsZW50IGNpdGl6ZW4uIEFzCmV2aWRlbmNlIEkgd291bGQgY2l0ZSB0aGUgZmFjdCB0aGF0IGhpcyBiZWhhdmlvdXIgYXMKY29uc3VsIHdhcyBtYWduaWZpY2VudCBhbmQgaGlzIGFkbWluaXN0cmF0aW9uIG9mIGhpcwpwcm92aW5jZSBhIG1vZGVsIG9mIGludGVncml0eSwgd2hpbGUgaGUgcmVmdXNlZCB0bwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzY1IiAvPgoKYmVjb21lIG9uZSBvZiB0aGUgdHdlbnR5IGNvbW1pc3Npb25lcnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkZvciB0aGUgZGlzdHJpYnV0aW9uIG9mIHRoZSBDYW1wYW5pYW4gbGFuZHMuPC9ub3RlPiBhbmQgaW4gdGhlCmdyaWV2b3VzIGNpdmlsIHdhcnMgd2hpY2ggYWZmbGljdGVkIGhpcyBnZW5lcmF0aW9uCmJleW9uZCBhbGwgb3RoZXJzLCBuZWl0aGVyIGhvcGUgbm9yIGZlYXIgZXZlciBkZXRlcnJlZApoaW0gZnJvbSBnaXZpbmcgaGlzIHN1cHBvcnQgdG8gdGhlIGJldHRlciBwYXJ0eSwgdGhhdAppcyB0byBzYXksIHRvIHRoZSBpbnRlcmVzdHMgb2YgdGhlIGNvbW1vbiB3ZWFsLgpTb21lLCBpdCBpcyB0cnVlLCByZWdhcmQgaGltIGFzIGxhY2tpbmcgaW4gY291cmFnZS48L3RyYW5zbGF0aW9uPg=="
translation['12.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz4KVGhlIGJlc3QgYW5zd2VyIHRvIHRoZXNlIGNyaXRpY3MgaXMgdG8gYmUgZm91bmQgaW4gaGlzCm93biB3b3JkcywgdG8gdGhlIGVmZmVjdCB0aGF0IGhlIHdhcyB0aW1pZCBub3QgaW4KY29uZnJvbnRpbmcgcGVyaWwsIGJ1dCBpbiBhbnRpY2lwYXRpbmcgaXQuIEFuZCB0aGlzCmhlIHByb3ZlZCBhbHNvIGJ5IHRoZSBtYW5uZXIgb2YgaGlzIGRlYXRoLCBpbiBtZWV0aW5nCndoaWNoIGhlIGRpc3BsYXllZCBhIHNpbmd1bGFyIGZvcnRpdHVkZS48L3RyYW5zbGF0aW9uPg=="
translation['12.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGV2ZW4KaWYgdGhlc2UgdHdvIG1lbiBsYWNrZWQgdGhlIHBlcmZlY3Rpb24gb2YgdmlydHVlLCBJCndpbGwgcmVwbHkgdG8gdGhvc2Ugd2hvIGFzayBpZiB0aGV5IHdlcmUgb3JhdG9ycywgaW4KdGhlIG1hbm5lciBpbiB3aGljaCB0aGUgU3RvaWNzIHdvdWxkIHJlcGx5LCBpZiBhc2tlZAp3aGV0aGVyIFplbm8sIENsZWFudGhlcyBvciBDaHJ5c2lwcHVzIGhpbXNlbGYgd2VyZQp3aXNlIG1lbi4gSSBzaGFsbCBzYXkgdGhhdCB0aGV5IHdlcmUgZ3JlYXQgbWVuCmRlc2VydmluZyBvdXIgdmVuZXJhdGlvbiwgYnV0IHRoYXQgdGhleSBkaWQgbm90CmF0dGFpbiB0byB0aGF0IHdoaWNoIGlzIHRoZSBoaWdoZXN0IHBlcmZlY3Rpb24Kb2YgbWFuJ3MgbmF0dXJlLjwvdHJhbnNsYXRpb24+"
translation['12.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGRpZCBub3QgUHl0aGFnb3JhcyBkZXNpcmUKdGhhdCBoZSBzaG91bGQgbm90IGJlIGNhbGxlZCBhIHdpc2UgbWFuLCBsaWtlIHRoZQpzYWdlcyB3aG8gcHJlY2VkZWQgaGltLCBidXQgcmF0aGVyIGEgc3R1ZGVudCBvZgp3aXNkb20/PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmkuIGUuPC9oaT4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+Zmlsby9zb2Zvcyw8L2ZvcmVpZ24+IGEgdGVybSBvZiB3aGljaCBoZSB3YXMgcmVwdXRlZCB0aGUKaW52ZW50b3IuPC9ub3RlPiBCdXQgZm9yIG15IG93biBwYXJ0LCBjb25mb3JtaW5nIHRvIHRoZQpsYW5ndWFnZSBvZiBldmVyeSBkYXksIEkgaGF2ZSBzYWlkIHRpbWUgYW5kIGFnYWluLAphbmQgc2hhbGwgY29udGludWUgdG8gc2F5LCB0aGF0IENpY2VybyB3YXMgYSBwZXJmZWN0Cm9yYXRvciwganVzdCBhcyBpbiBvcmRpbmFyeSBzcGVlY2ggd2UgY2FsbCBvdXIgZnJpZW5kcwpnb29kIGFuZCBzZW5zaWJsZSBtZW4sIGFsdGhvdWdoIG5laXRoZXIgb2YgdGhlc2UKdGl0bGVzIGNhbiByZWFsbHkgYmUgZ2l2ZW4gdG8gYW55IHNhdmUgdG8gaGltIHRoYXQKaGFzIGF0dGFpbmVkIHRvIHBlcmZlY3Qgd2lzZG9tLiBCdXQgaWYgSSBhbSBjYWxsZWQKdXBvbiB0byBzcGVhayBzdHJpY3RseSBhbmQgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZQptb3N0IHJpZ2lkIGxhd3Mgb2YgdHJ1dGgsIEkgc2hhbGwgcHJvY2xhaW0gdGhhdCBJIHNlZWsKdG8gZmluZCB0aGF0IHNhbWUgcGVyZmVjdCBvcmF0b3Igd2hvbSBDaWNlcm8gYWxzbwpzb3VnaHQgdG8gZGlzY292ZXIuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+aS4gZS48L2hpPiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj5maWxvL3NvZm9zLDwvZm9yZWlnbj4gYSB0ZXJtIG9mIHdoaWNoIGhlIHdhcyByZXB1dGVkIHRoZQppbnZlbnRvci48L3RyYW5zbGF0aW9uPg=="
translation['12.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHdoaWxlIEkgYWRtaXQgdGhhdCBoZSBzdG9vZApvbiB0aGUgbG9mdGllc3QgcGlubmFjbGUgb2YgZWxvcXVlbmNlLCBhbmQgY2FuIGRpc2NvdmVyIHNjYXJjZWx5IGEgc2luZ2xlIGRlZmljaWVuY3kgaW4gaGltLCBhbHRob3VnaCBJCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4zNjciIC8+CgptaWdodCBwZXJoYXBzIGRpc2NvdmVyIGNlcnRhaW4gc3VwZXJmbHVpdGllcyB3aGljaCBJCnRoaW5rIGhlIHdvdWxkIGhhdmUgcHJ1bmVkIGF3YXkgKGZvciB0aGUgZ2VuZXJhbAp2aWV3IG9mIHRoZSBsZWFybmVkIGlzIHRoYXQgaGUgcG9zc2Vzc2VkIG1hbnkgdmlydHVlcwphbmQgYSBmZXcgZmF1bHRzLCBhbmQgaGUgaGltc2VsZjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5CcnV0LjwvaGk+IHhjaS4gMzE2LiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5PcmF0LjwvaGk+IHh4eC4gMTA3Ljwvbm90ZT4gc3RhdGVzIHRoYXQgaGUgaGFzCnN1Y2NlZWRlZCBpbiBzdXBwcmVzc2luZyBtdWNoIG9mIGhpcyB5b3V0aGZ1bApleHViZXJhbmNlKSwgbm9uZSB0aGUgbGVzcywgaW4gdmlldyBvZiB0aGUgZmFjdCB0aGF0LAphbHRob3VnaCBoZSBoYWQgYnkgbm8gbWVhbnMgYSBsb3cgb3BpbmlvbiBvZiBoaW1zZWxmLCBoZSBuZXZlciBjbGFpbWVkIHRvIGJlIHRoZSBwZXJmZWN0IHNhZ2UsIGFuZCwKaGFkIGhlIGJlZW4gZ3JhbnRlZCBsb25nZXIgbGlmZSBhbmQgbGVzcyB0cm91YmxlZCBjb25kaXRpb25zIGZvciB0aGUgY29tcG9zaXRpb24gb2YgaGlzIHdvcmtzLCB3b3VsZCBkb3VidGxlc3MgaGF2ZSBzcG9rZW4gYmV0dGVyIHN0aWxsLCBJIHNoYWxsIG5vdCBsYXkgbXlzZWxmCm9wZW4gdG8gdGhlIGNoYXJnZSBvZiB1bmdlbmVyb3VzIGNyaXRpY2lzbSwgaWYgSSBzYXkKdGhhdCBJIGJlbGlldmUgdGhhdCBoZSBmYWlsZWQgYWN0dWFsbHkgdG8gYWNoaWV2ZSB0aGF0CnBlcmZlY3Rpb24gdG8gdGhlIGF0dGFpbm1lbnQgb2Ygd2hpY2ggbm9uZSBoYXZlCmFwcHJvYWNoZWQgbW9yZSBuZWFybHksPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QnJ1dC48L2hpPiB4Y2kuIDMxNi4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T3JhdC48L2hpPiB4eHguIDEwNy48L3RyYW5zbGF0aW9uPg=="
translation['12.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gYW5kIGluZGVlZCBoYWQgSSBmZWx0IG90aGVyd2lzZSBpbiB0aGlzIGNvbm5leGlvbiwgSSBtaWdodCBoYXZlIGRlZmVuZGVkIG15CnBvaW50IHdpdGggZ3JlYXRlciBib2xkbmVzcyBhbmQgZnJlZWRvbS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+UXVpbnRpbGlhbidzIHJldmVyZW5jZSBmb3IgQ2ljZXJvIGlzIHN1Y2ggdGhhdCBoZSBmZWVscwpoYW1wZXJlZCBpbiBtYWludGFpbmluZyBoaXMgdGhlc2lzLjwvbm90ZT4gTWFyY3VzCkFudG9uaXVzIGRlY2xhcmVkIHRoYXQgaGUgaGFkIHNlZW4gbm8gbWFuIHdobyB3YXMKZ2VudWluZWx5IGVsb3F1ZW50IChhbmQgdG8gYmUgZWxvcXVlbnQgaXMgYSBmYXIgbGVzcwphY2hpZXZlbWVudCB0aGFuIHRvIGJlIGFuIG9yYXRvciksIHdoaWxlIENpY2VybyBoaW1zZWxmIGhhcyBmYWlsZWQgdG8gZmluZCBoaXMgb3JhdG9yIGluIGFjdHVhbCBsaWZlIGFuZAptZXJlbHkgaW1hZ2luZXMgYW5kIHN0cml2ZXMgdG8gZGVwaWN0IHRoZSBpZGVhbC4gU2hhbGwKSSB0aGVuIGJlIGFmcmFpZCB0byBzYXkgdGhhdCBpbiB0aGUgZXRlcm5pdHkgb2YgdGltZQp0aGF0IGlzIHlldCB0byBiZSwgc29tZXRoaW5nIG1vcmUgcGVyZmVjdCBtYXkgYmUgZm91bmQKdGhhbiBoYXMgeWV0IGV4aXN0ZWQ/PC90cmFuc2xhdGlvbj4="
translation['12.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gSSBzYXkgbm90aGluZyBvZiB0aG9zZSBjcml0aWNzCndobyB3aWxsIG5vdCBhbGxvdyBzdWZmaWNpZW50IGNyZWRpdCBldmVuIGZvciBlbG9xdWVuY2UKdG8gQ2ljZXJvIGFuZCBEZW1vc3RoZW5lcywgYWx0aG91Z2ggQ2ljZXJvIGhpbXNlbGYKZG9lcyBub3QgcmVnYXJkIERlbW9zdGhlbmVzIGFzIGZsYXdsZXNzLCBidXQgYXNzZXJ0cwp0aGF0IGhlIHNvbWV0aW1lcyBub2RzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgeC4gaS4gMjQuPC9ub3RlPiB3aGlsZSBldmVuIENpY2VybyBmYWlscyB0bwpzYXRpc2Z5IEJydXR1cyBhbmQgQ2FsdnVzIChhdCBhbnkgcmF0ZSB0aGV5IGNyaXRpY2lzZWQKaGlzIHN0eWxlIHRvIGhpcyBmYWNlKSwgb3IgdG8gd2luIHRoZSBjb21wbGV0ZSBhcHByb3ZhbApvZiBlaXRoZXIgb2YgdGhlIEFzaW5paSwgd2hvIGluIHZhcmlvdXMgcGFzc2FnZXMgYXR0YWNrCnRoZSBmYXVsdHMgb2YgaGlzIG9yYXRvcnkgaW4gbGFuZ3VhZ2Ugd2hpY2ggaXMgcG9zaXRpdmVseQpob3N0aGUuPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzY5IiAvPgoKPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjMiIHVuaXQ9InNlY3Rpb24iIC8+SG93ZXZlciwgbGV0IHVzIGZseSBpbiB0aGUgZmFjZSBvZiBuYXR1cmUgYW5kCmFzc3VtZSB0aGF0IGEgYmFkIG1hbiBoYXMgYmVlbiBkaXNjb3ZlcmVkIHdobyBpcwplbmRvd2VkIHdpdGggdGhlIGhpZ2hlc3QgZWxvcXVlbmNlLiBJIHNoYWxsIG5vbmUKdGhlIGxlc3MgZGVueSB0aGF0IGhlIGlzIGFuIG9yYXRvci4gRm9yIEkgc2hvdWxkIG5vdAphbGxvdyB0aGF0IGV2ZXJ5IG1hbiB3aG8gaGFzIHNob3duIGhpbXNlbGYgcmVhZHkKd2l0aCBoaXMgaGFuZHMgd2FzIG5lY2Vzc2FyaWx5IGEgYnJhdmUgbWFuLCBiZWNhdXNlCnRydWUgY291cmFnZSBjYW5ub3QgYmUgY29uY2VpdmVkIG9mIHdpdGhvdXQgdGhlCmFjY29tcGFuaW1lbnQgb2YgdmlydHVlLjxtaWxlc3RvbmUgbj0iMjQiIHVuaXQ9InNlY3Rpb24iIC8+IFN1cmVseSB0aGUgYWR2b2NhdGUgd2hvCmlzIGNhbGxlZCB0byBkZWZlbmQgdGhlIGFjY3VzZWQgcmVxdWlyZXMgdG8gYmUgYSBtYW4Kb2YgaG9ub3VyLCBob25vdXIgd2hpY2ggZ3JlZWQgY2Fubm90IGNvcnJ1cHQsIGluZmx1ZW5jZSBzZWR1Y2UsIG9yIGZlYXIgZGlzbWF5LiBTaGFsbCB3ZSB0aGVuIGRpZ25pZnkgdGhlIHRyYWl0b3IsIHRoZSBkZXNlcnRlciwgdGhlIHR1cm5jb2F0IHdpdGggdGhlCnNhY3JlZCBuYW1lIG9mIG9yYXRvcj8gQnV0IGlmIHRoZSBxdWFsaXR5IHdoaWNoIGlzCnVzdWFsbHkgdGVybWVkIGdvb2RuZXNzIGlzIHRvIGJlIGZvdW5kIGV2ZW4gaW4gcXVpdGUKb3JkaW5hcnkgYWR2b2NhdGVzLCB3aHkgc2hvdWxkIG5vdCB0aGUgb3JhdG9yLCB3aG8KaGFzIG5vdCB5ZXQgZXhpc3RlZCwgYnV0IG1heSBzdGlsbCBiZSBib3JuLCBiZSBubyBsZXNzCnBlcmZlY3QgaW4gY2hhcmFjdGVyIHRoYW4gaW4gZXhjZWxsZW5jZSBvZiBzcGVlY2g/CjxtaWxlc3RvbmUgbj0iMjUiIHVuaXQ9InNlY3Rpb24iIC8+SXQgaXMgbm8gaGFjay1hZHZvY2F0ZSwgbm8gaGlyZWxpbmcgcGxlYWRlciwgbm9yIHlldCwKdG8gdXNlIG5vIGhhcnNlciB0ZXJtLCBhIHNlcnZpY2VhYmxlIGF0dG9ybmV5IG9mIHRoZQpjbGFzcyBnZW5lcmFsbHkga25vd24gYXMgPGhpIHJlbmQ9Iml0YWxpY3MiPmNhdXNpZGljaSw8L2hpPiB0aGF0IEkgYW0gc2Vla2luZyB0bwpmb3JtLCBidXQgcmF0aGVyIGEgbWFuIHdobyB0byBleHRyYW9yZGluYXJ5IG5hdHVyYWwKZ2lmdHMgaGFzIGFkZGVkIGEgdGhvcm91Z2ggbWFzdGVyeSBvZiBhbGwgdGhlIGZhaXJlc3QKYnJhbmNoZXMgb2Yga25vd2xlZGdlLCBhIG1hbiBzZW50IGJ5IGhlYXZlbiB0byBiZQp0aGUgYmxlc3Npbmcgb2YgbWFua2luZCwgb25lIHRvIHdob20gYWxsIGhpc3RvcnkKY2FuIGZpbmQgbm8gcGFyYWxsZWwsIHVuaXF1ZWx5IHBlcmZlY3QgaW4gZXZlcnkgZGV0YWlsCmFuZCB1dHRlcmx5IG5vYmxlIGFsaWtlIGluIHRob3VnaHQgYW5kIHNwZWVjaC48bWlsZXN0b25lIG49IjI2IiB1bml0PSJzZWN0aW9uIiAvPiBIb3cKc21hbGwgYSBwb3J0aW9uIG9mIGFsbCB0aGVzZSBhYmlsaXRpZXMgd2lsbCBiZSByZXF1aXJlZApmb3IgdGhlIGRlZmVuY2Ugb2YgdGhlIGlubm9jZW50LCB0aGUgcmVwcmVzc2lvbiBvZgpjcmltZSBvciB0aGUgc3VwcG9ydCBvZiB0cnV0aCBhZ2FpbnN0IGZhbHNlaG9vZCBpbgpzdWl0cyBpbnZvbHZpbmcgcXVlc3Rpb25zIG9mIG1vbmV5PyBJdCBpcyB0cnVlIHRoYXQKb3VyIHN1cHJlbWUgb3JhdG9yIHdpbGwgYmVhciBoaXMgcGFydCBpbiBzdWNoIHRhc2tzLApidXQgaGlzIHBvd2VycyB3aWxsIGJlIGRpc3BsYXllZCB3aXRoIGJyaWdodGVyIHNwbGVuZG91ciBpbiBncmVhdGVyIG1hdHRlcnMgdGhhbiB0aGVzZSwgd2hlbiBoZSBpcwpjYWxsZWQgdXBvbiB0byBkaXJlY3QgdGhlIGNvdW5zZWxzIG9mIHRoZSBzZW5hdGUgYW5kCgo8cGIgaWQ9InAuMzcxIiAvPgoKZ3VpZGUgdGhlIHBlb3BsZSBmcm9tIHRoZSBwYXRocyBvZiBlcnJvciB0byBiZXR0ZXIKdGhpbmdzLjxtaWxlc3RvbmUgbj0iMjciIHVuaXQ9InNlY3Rpb24iIC8+IFdhcyBub3QgdGhpcyB0aGUgbWFuIGNvbmNlaXZlZCBieSBWaXJnaWwKYW5kIGRlc2NyaWJlZCBhcyBxdWVsbGluZyBhIHJpb3Qgd2hlbiB0b3JjaGVzIGFuZApzdG9uZXMgaGF2ZSBiZWd1biB0byBmbHk6PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+QWVuLjwvaGk+IGkuIDE1MSA8aGkgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PC9ub3RlPgoKPHF1b3RlIHJlbmQ9ImJsb2NrcXVvdGUiPgo8cXVvdGU+PGw+VGhlbiwgaWYgYmVmb3JlIHRoZWlyIGV5ZXMgc29tZSBzdGF0ZXNtYW4gZ3JhdmU8L2w+CjxsPlN0YW5kIGZvcnRoLCB3aXRoIHZpcnR1ZSBhbmQgaGlnaCBzZXJ2aWNlIGNyb3duZWQsPC9sPgo8bD5TdHJhaWdodCBhcmUgdGhleSBkdW1iIGFuZCBzdGFuZCBpbnRlbnQgdG8gaGVhci48L2w+PC9xdW90ZT48L3F1b3RlPgoKSGVyZSB0aGVuIHdlIGhhdmUgb25lIHdobyBpcyBiZWZvcmUgYWxsIGVsc2UgYQpnb29kIG1hbiwgYW5kIGl0IGlzIG9ubHkgYWZ0ZXIgdGhpcyB0aGF0IHRoZSBwb2V0IGFkZHMKdGhhdCBoZSBpcyBza2lsbGVkIGluIHNwZWFraW5nOgoKPHF1b3RlIHJlbmQ9ImJsb2NrcXVvdGUiPgo8bD48cXVvdGU+SGlzIHdvcmRzIHRoZWlyIG1pbmRzIGNvbnRyb2wsIHRoZWlyIHBhc3Npb25zIHNvb3RoZS48L3F1b3RlPjwvbD48L3F1b3RlPgoKQWdhaW4sPG1pbGVzdG9uZSBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz4gd2lsbCBub3QgdGhpcyBzYW1lIG1hbiwgd2hvbSB3ZSBhcmUgc3RyaXZpbmcKdG8gZm9ybSwgaWYgaW4gdGltZSBvZiB3YXIgaGUgYmUgY2FsbGVkIHVwb24gdG8gaW5zcGlyZQpoaXMgc29sZGllcnMgd2l0aCBjb3VyYWdlIGZvciB0aGUgZnJheSwgZHJhdyBmb3IgaGlzCmVsb3F1ZW5jZSBvbiB0aGUgaW5uZXJtb3N0IHByZWNlcHRzIG9mIHBoaWxvc29waHk/CkZvciBob3cgY2FuIG1lbiB3aG8gc3RhbmQgdXBvbiB0aGUgdmVyZ2Ugb2YgYmF0dGxlCmJhbmlzaCBhbGwgdGhlIGNyb3dkaW5nIGZlYXJzIG9mIGhhcmRzaGlwLCBwYWluIGFuZApkZWF0aCBmcm9tIHRoZWlyIG1pbmRzLCB1bmxlc3MgdGhvc2UgZmVhcnMgYmUgcmVwbGFjZWQgYnkgdGhlIHNlbnNlIG9mIHRoZSBkdXR5IHRoYXQgdGhleSBvd2UKdGhlaXIgY291bnRyeSwgYnkgY291cmFnZSBhbmQgdGhlIGxpdmVseSBpbWFnZSBvZiBhCnNvbGRpZXIncyBob25vdXI/PG1pbGVzdG9uZSBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIGFzc3VyZWRseSB0aGUgbWFuIHdobyB3aWxsCmJlc3QgaW5zcGlyZSBzdWNoIGZlZWxpbmdzIGluIG90aGVycyBpcyBoZSB3aG8gaGFzCmZpcnN0IGluc3BpcmVkIHRoZW0gaW4gaGltc2VsZi4gRm9yIGhvd2V2ZXIgd2Ugc3RyaXZlCnRvIGNvbmNlYWwgaXQsIGluc2luY2VyaXR5IHdpbGwgYWx3YXlzIGJldHJheSBpdHNlbGYsIGFuZAp0aGVyZSB3YXMgbmV2ZXIgaW4gYW55IG1hbiBzbyBncmVhdCBlbG9xdWVuY2UgYXMKd291bGQgbm90IGJlZ2luIHRvIHN0dW1ibGUgYW5kIGhlc2l0YXRlIHNvIHNvb24gYXMKaGlzIHdvcmRzIHJhbiBjb3VudGVyIHRvIGhpcyBpbm1vc3QgdGhvdWdodHMuPG1pbGVzdG9uZSBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz4gTm93OgphIGJhZCBtYW4gY2Fubm90IGhlbHAgc3BlYWtpbmcgdGhpbmdzIG90aGVyIHRoYW4KaGUgZmVlbHMuIE9uIHRoZSBvdGhlciBsYW5kLCB0aGUgZ29vZCB3aWxsIG5ldmVyIGJlCmF0IGEgbG9zcyBmb3IgaG9ub3VyYWJsZSB3b3JkcyBvciBmYWlsIHRvIGZpbmQgbWF0dGVyCmZ1bGwgb2YgdmlydHVlIGZvciB1dHRlcmFuY2UsIHNpbmNlIGFtb25nIGhpcyB2aXJ0dWVzCnByYWN0aWNhbCB3aXNkb20gd2lsbCBiZSBvbmUuIEFuZCBldmVuIHRob3VnaCBoaXMKCjxwYiBpZD0icC4zNzMiIC8+CgppbWFnaW5hdGlvbiBsYWNrcyBhcnRpZmljZSB0byBsZW5kIGl0IGNoYXJtLCBpdHMgb3duCm5hdHVyZSB3aWxsIGJlIG9ybmFtZW50IGVub3VnaCwgZm9yIGlmIGhvbm91ciBkaWN0YXRlCnRoZSB3b3Jkcywgd2Ugc2hhbGwgZmluZCBlbG9xdWVuY2UgdGhlcmUgYXMgd2VsbC4KPG1pbGVzdG9uZSBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUsIGxldCB0aG9zZSB0aGF0IGFyZSB5b3VuZywgb3IgcmF0aGVyIGxldCBhbGwKb2YgdXMsIHdoYXRldmVyIG91ciBhZ2UsIHNpbmNlIGl0IGlzIG5ldmVyIHRvbyBsYXRlIHRvCnJlc29sdmUgdG8gZm9sbG93IHdoYXQgaXMgcmlnaHQsIHN0cml2ZSB3aXRoIGFsbCBvdXIKaGVhcnRzIGFuZCBkZXZvdGUgYWxsIG91ciBlZmZvcnRzIHRvIHRoZSBwdXJzdWl0IG9mIHZpcnR1ZQphbmQgZWxvcXVlbmNlOyBhbmQgcGVyY2hhbmNlIGl0IG1heSBiZSBncmFudGVkIHRvIHVzCnRvIGF0dGFpbiB0byB0aGUgcGVyZmVjdGlvbiB0aGF0IHdlIHNlZWsuIEZvciBzaW5jZQpuYXR1cmUgZG9lcyBub3QgZm9yYmlkIHRoZSBhdHRhaW5tZW50IG9mIGVpdGhlciwgd2h5CnNob3VsZCBub3Qgc29tZW9uZSBzdWNjZWVkIGluIGF0dGFpbmluZyBib3RoIHRvZ2V0aGVyPyBBbmQgd2h5IHNob3VsZCBub3QgZWFjaCBvZiB1cyBob3BlIHRvIGJlCnRoYXQgaGFwcHkgbWFuPzxtaWxlc3RvbmUgbj0iMzIiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCBpZiBvdXIgcG93ZXJzIGFyZSBpbmFkZXF1YXRlCnRvIHN1Y2ggYWNoaWV2ZW1lbnQsIHdlIHNoYWxsIHN0aWxsIGJlIHRoZSBiZXR0ZXIgZm9yCnRoZSBkb3VibGUgZWZmb3J0IGluIHByb3BvcnRpb24gdG8gdGhlIGRpc3RhbmNlIHdoaWNoCndlIGhhdmUgYWR2YW5jZWQgdG93YXJkIGVpdGhlciBnb2FsLiBBdCBhbnkgcmF0ZQpsZXQgdXMgYmFuaXNoIGZyb20gb3VyIGhlYXJ0cyB0aGUgZGVsdXNpb24gdGhhdAplbG9xdWVuY2UsIHRoZSBmYWlyZXN0IG9mIGFsbCB0aGluZ3MsIGNhbiBiZSBjb21iaW5lZAp3aXRoIHZpY2UuIFRoZSBwb3dlciBvZiBzcGVha2luZyBpcyBldmVuIHRvIGJlCmFjY291bnRlZCBhbiBldmlsIHdoZW4gaXQgaXMgZm91bmQgaW4gZXZpbCBtZW47IGZvciBpdAptYWtlcyBpdHMgcG9zc2Vzc29ycyB5ZXQgd29yc2UgdGhhbiB0aGV5IHdlcmUgYmVmb3JlLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['12.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5Ib3dldmVyLCBsZXQgdXMgZmx5IGluIHRoZSBmYWNlIG9mIG5hdHVyZSBhbmQKYXNzdW1lIHRoYXQgYSBiYWQgbWFuIGhhcyBiZWVuIGRpc2NvdmVyZWQgd2hvIGlzCmVuZG93ZWQgd2l0aCB0aGUgaGlnaGVzdCBlbG9xdWVuY2UuIEkgc2hhbGwgbm9uZQp0aGUgbGVzcyBkZW55IHRoYXQgaGUgaXMgYW4gb3JhdG9yLiBGb3IgSSBzaG91bGQgbm90CmFsbG93IHRoYXQgZXZlcnkgbWFuIHdobyBoYXMgc2hvd24gaGltc2VsZiByZWFkeQp3aXRoIGhpcyBoYW5kcyB3YXMgbmVjZXNzYXJpbHkgYSBicmF2ZSBtYW4sIGJlY2F1c2UKdHJ1ZSBjb3VyYWdlIGNhbm5vdCBiZSBjb25jZWl2ZWQgb2Ygd2l0aG91dCB0aGUKYWNjb21wYW5pbWVudCBvZiB2aXJ0dWUuPC90cmFuc2xhdGlvbj4="
translation['12.1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz4gU3VyZWx5IHRoZSBhZHZvY2F0ZSB3aG8KaXMgY2FsbGVkIHRvIGRlZmVuZCB0aGUgYWNjdXNlZCByZXF1aXJlcyB0byBiZSBhIG1hbgpvZiBob25vdXIsIGhvbm91ciB3aGljaCBncmVlZCBjYW5ub3QgY29ycnVwdCwgaW5mbHVlbmNlIHNlZHVjZSwgb3IgZmVhciBkaXNtYXkuIFNoYWxsIHdlIHRoZW4gZGlnbmlmeSB0aGUgdHJhaXRvciwgdGhlIGRlc2VydGVyLCB0aGUgdHVybmNvYXQgd2l0aCB0aGUKc2FjcmVkIG5hbWUgb2Ygb3JhdG9yPyBCdXQgaWYgdGhlIHF1YWxpdHkgd2hpY2ggaXMKdXN1YWxseSB0ZXJtZWQgZ29vZG5lc3MgaXMgdG8gYmUgZm91bmQgZXZlbiBpbiBxdWl0ZQpvcmRpbmFyeSBhZHZvY2F0ZXMsIHdoeSBzaG91bGQgbm90IHRoZSBvcmF0b3IsIHdobwpoYXMgbm90IHlldCBleGlzdGVkLCBidXQgbWF5IHN0aWxsIGJlIGJvcm4sIGJlIG5vIGxlc3MKcGVyZmVjdCBpbiBjaGFyYWN0ZXIgdGhhbiBpbiBleGNlbGxlbmNlIG9mIHNwZWVjaD8KPC90cmFuc2xhdGlvbj4="
translation['12.1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyBubyBoYWNrLWFkdm9jYXRlLCBubyBoaXJlbGluZyBwbGVhZGVyLCBub3IgeWV0LAp0byB1c2Ugbm8gaGFyc2VyIHRlcm0sIGEgc2VydmljZWFibGUgYXR0b3JuZXkgb2YgdGhlCmNsYXNzIGdlbmVyYWxseSBrbm93biBhcyA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jYXVzaWRpY2ksPC9oaT4gdGhhdCBJIGFtIHNlZWtpbmcgdG8KZm9ybSwgYnV0IHJhdGhlciBhIG1hbiB3aG8gdG8gZXh0cmFvcmRpbmFyeSBuYXR1cmFsCmdpZnRzIGhhcyBhZGRlZCBhIHRob3JvdWdoIG1hc3Rlcnkgb2YgYWxsIHRoZSBmYWlyZXN0CmJyYW5jaGVzIG9mIGtub3dsZWRnZSwgYSBtYW4gc2VudCBieSBoZWF2ZW4gdG8gYmUKdGhlIGJsZXNzaW5nIG9mIG1hbmtpbmQsIG9uZSB0byB3aG9tIGFsbCBoaXN0b3J5CmNhbiBmaW5kIG5vIHBhcmFsbGVsLCB1bmlxdWVseSBwZXJmZWN0IGluIGV2ZXJ5IGRldGFpbAphbmQgdXR0ZXJseSBub2JsZSBhbGlrZSBpbiB0aG91Z2h0IGFuZCBzcGVlY2guPC90cmFuc2xhdGlvbj4="
translation['12.1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz4gSG93CnNtYWxsIGEgcG9ydGlvbiBvZiBhbGwgdGhlc2UgYWJpbGl0aWVzIHdpbGwgYmUgcmVxdWlyZWQKZm9yIHRoZSBkZWZlbmNlIG9mIHRoZSBpbm5vY2VudCwgdGhlIHJlcHJlc3Npb24gb2YKY3JpbWUgb3IgdGhlIHN1cHBvcnQgb2YgdHJ1dGggYWdhaW5zdCBmYWxzZWhvb2QgaW4Kc3VpdHMgaW52b2x2aW5nIHF1ZXN0aW9ucyBvZiBtb25leT8gSXQgaXMgdHJ1ZSB0aGF0Cm91ciBzdXByZW1lIG9yYXRvciB3aWxsIGJlYXIgaGlzIHBhcnQgaW4gc3VjaCB0YXNrcywKYnV0IGhpcyBwb3dlcnMgd2lsbCBiZSBkaXNwbGF5ZWQgd2l0aCBicmlnaHRlciBzcGxlbmRvdXIgaW4gZ3JlYXRlciBtYXR0ZXJzIHRoYW4gdGhlc2UsIHdoZW4gaGUgaXMKY2FsbGVkIHVwb24gdG8gZGlyZWN0IHRoZSBjb3Vuc2VscyBvZiB0aGUgc2VuYXRlIGFuZAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzcxIiAvPgoKZ3VpZGUgdGhlIHBlb3BsZSBmcm9tIHRoZSBwYXRocyBvZiBlcnJvciB0byBiZXR0ZXIKdGhpbmdzLjwvdHJhbnNsYXRpb24+"
translation['12.1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz4gV2FzIG5vdCB0aGlzIHRoZSBtYW4gY29uY2VpdmVkIGJ5IFZpcmdpbAphbmQgZGVzY3JpYmVkIGFzIHF1ZWxsaW5nIGEgcmlvdCB3aGVuIHRvcmNoZXMgYW5kCnN0b25lcyBoYXZlIGJlZ3VuIHRvIGZseTo8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QWVuLjwvaGk+IGkuIDE1MSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zcXEuPC9oaT48L25vdGU+Cgo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZW4uPC9oaT4gaS4gMTUxIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9ImJsb2NrcXVvdGUiPgo8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj48bCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4sIGlmIGJlZm9yZSB0aGVpciBleWVzIHNvbWUgc3RhdGVzbWFuIGdyYXZlPC9sPgo8bCBjbGFzcz0idHJhbnNsYXRpb24iPlN0YW5kIGZvcnRoLCB3aXRoIHZpcnR1ZSBhbmQgaGlnaCBzZXJ2aWNlIGNyb3duZWQsPC9sPgo8bCBjbGFzcz0idHJhbnNsYXRpb24iPlN0cmFpZ2h0IGFyZSB0aGV5IGR1bWIgYW5kIHN0YW5kIGludGVudCB0byBoZWFyLjwvbD48L3F1b3RlPjwvcXVvdGU+CgpIZXJlIHRoZW4gd2UgaGF2ZSBvbmUgd2hvIGlzIGJlZm9yZSBhbGwgZWxzZSBhCmdvb2QgbWFuLCBhbmQgaXQgaXMgb25seSBhZnRlciB0aGlzIHRoYXQgdGhlIHBvZXQgYWRkcwp0aGF0IGhlIGlzIHNraWxsZWQgaW4gc3BlYWtpbmc6Cgo8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj48bCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4sIGlmIGJlZm9yZSB0aGVpciBleWVzIHNvbWUgc3RhdGVzbWFuIGdyYXZlPC9sPgo8bCBjbGFzcz0idHJhbnNsYXRpb24iPlN0YW5kIGZvcnRoLCB3aXRoIHZpcnR1ZSBhbmQgaGlnaCBzZXJ2aWNlIGNyb3duZWQsPC9sPgo8bCBjbGFzcz0idHJhbnNsYXRpb24iPlN0cmFpZ2h0IGFyZSB0aGV5IGR1bWIgYW5kIHN0YW5kIGludGVudCB0byBoZWFyLjwvbD48L3F1b3RlPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiwgaWYgYmVmb3JlIHRoZWlyIGV5ZXMgc29tZSBzdGF0ZXNtYW4gZ3JhdmU8L2w+CjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U3RhbmQgZm9ydGgsIHdpdGggdmlydHVlIGFuZCBoaWdoIHNlcnZpY2UgY3Jvd25lZCw8L2w+CjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U3RyYWlnaHQgYXJlIHRoZXkgZHVtYiBhbmQgc3RhbmQgaW50ZW50IHRvIGhlYXIuPC9sPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9ImJsb2NrcXVvdGUiPgo8bCBjbGFzcz0idHJhbnNsYXRpb24iPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkhpcyB3b3JkcyB0aGVpciBtaW5kcyBjb250cm9sLCB0aGVpciBwYXNzaW9ucyBzb290aGUuPC9xdW90ZT48L2w+PC9xdW90ZT4KCkFnYWluLDxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SGlzIHdvcmRzIHRoZWlyIG1pbmRzIGNvbnRyb2wsIHRoZWlyIHBhc3Npb25zIHNvb3RoZS48L3F1b3RlPjwvbD48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5IaXMgd29yZHMgdGhlaXIgbWluZHMgY29udHJvbCwgdGhlaXIgcGFzc2lvbnMgc29vdGhlLjwvcXVvdGU+PC90cmFuc2xhdGlvbj4="
translation['12.1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz4gd2lsbCBub3QgdGhpcyBzYW1lIG1hbiwgd2hvbSB3ZSBhcmUgc3RyaXZpbmcKdG8gZm9ybSwgaWYgaW4gdGltZSBvZiB3YXIgaGUgYmUgY2FsbGVkIHVwb24gdG8gaW5zcGlyZQpoaXMgc29sZGllcnMgd2l0aCBjb3VyYWdlIGZvciB0aGUgZnJheSwgZHJhdyBmb3IgaGlzCmVsb3F1ZW5jZSBvbiB0aGUgaW5uZXJtb3N0IHByZWNlcHRzIG9mIHBoaWxvc29waHk/CkZvciBob3cgY2FuIG1lbiB3aG8gc3RhbmQgdXBvbiB0aGUgdmVyZ2Ugb2YgYmF0dGxlCmJhbmlzaCBhbGwgdGhlIGNyb3dkaW5nIGZlYXJzIG9mIGhhcmRzaGlwLCBwYWluIGFuZApkZWF0aCBmcm9tIHRoZWlyIG1pbmRzLCB1bmxlc3MgdGhvc2UgZmVhcnMgYmUgcmVwbGFjZWQgYnkgdGhlIHNlbnNlIG9mIHRoZSBkdXR5IHRoYXQgdGhleSBvd2UKdGhlaXIgY291bnRyeSwgYnkgY291cmFnZSBhbmQgdGhlIGxpdmVseSBpbWFnZSBvZiBhCnNvbGRpZXIncyBob25vdXI/PC90cmFuc2xhdGlvbj4="
translation['12.1.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIGFzc3VyZWRseSB0aGUgbWFuIHdobyB3aWxsCmJlc3QgaW5zcGlyZSBzdWNoIGZlZWxpbmdzIGluIG90aGVycyBpcyBoZSB3aG8gaGFzCmZpcnN0IGluc3BpcmVkIHRoZW0gaW4gaGltc2VsZi4gRm9yIGhvd2V2ZXIgd2Ugc3RyaXZlCnRvIGNvbmNlYWwgaXQsIGluc2luY2VyaXR5IHdpbGwgYWx3YXlzIGJldHJheSBpdHNlbGYsIGFuZAp0aGVyZSB3YXMgbmV2ZXIgaW4gYW55IG1hbiBzbyBncmVhdCBlbG9xdWVuY2UgYXMKd291bGQgbm90IGJlZ2luIHRvIHN0dW1ibGUgYW5kIGhlc2l0YXRlIHNvIHNvb24gYXMKaGlzIHdvcmRzIHJhbiBjb3VudGVyIHRvIGhpcyBpbm1vc3QgdGhvdWdodHMuPC90cmFuc2xhdGlvbj4="
translation['12.1.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz4gTm93OgphIGJhZCBtYW4gY2Fubm90IGhlbHAgc3BlYWtpbmcgdGhpbmdzIG90aGVyIHRoYW4KaGUgZmVlbHMuIE9uIHRoZSBvdGhlciBsYW5kLCB0aGUgZ29vZCB3aWxsIG5ldmVyIGJlCmF0IGEgbG9zcyBmb3IgaG9ub3VyYWJsZSB3b3JkcyBvciBmYWlsIHRvIGZpbmQgbWF0dGVyCmZ1bGwgb2YgdmlydHVlIGZvciB1dHRlcmFuY2UsIHNpbmNlIGFtb25nIGhpcyB2aXJ0dWVzCnByYWN0aWNhbCB3aXNkb20gd2lsbCBiZSBvbmUuIEFuZCBldmVuIHRob3VnaCBoaXMKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjM3MyIgLz4KCmltYWdpbmF0aW9uIGxhY2tzIGFydGlmaWNlIHRvIGxlbmQgaXQgY2hhcm0sIGl0cyBvd24KbmF0dXJlIHdpbGwgYmUgb3JuYW1lbnQgZW5vdWdoLCBmb3IgaWYgaG9ub3VyIGRpY3RhdGUKdGhlIHdvcmRzLCB3ZSBzaGFsbCBmaW5kIGVsb3F1ZW5jZSB0aGVyZSBhcyB3ZWxsLgo8L3RyYW5zbGF0aW9uPg=="
translation['12.1.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUsIGxldCB0aG9zZSB0aGF0IGFyZSB5b3VuZywgb3IgcmF0aGVyIGxldCBhbGwKb2YgdXMsIHdoYXRldmVyIG91ciBhZ2UsIHNpbmNlIGl0IGlzIG5ldmVyIHRvbyBsYXRlIHRvCnJlc29sdmUgdG8gZm9sbG93IHdoYXQgaXMgcmlnaHQsIHN0cml2ZSB3aXRoIGFsbCBvdXIKaGVhcnRzIGFuZCBkZXZvdGUgYWxsIG91ciBlZmZvcnRzIHRvIHRoZSBwdXJzdWl0IG9mIHZpcnR1ZQphbmQgZWxvcXVlbmNlOyBhbmQgcGVyY2hhbmNlIGl0IG1heSBiZSBncmFudGVkIHRvIHVzCnRvIGF0dGFpbiB0byB0aGUgcGVyZmVjdGlvbiB0aGF0IHdlIHNlZWsuIEZvciBzaW5jZQpuYXR1cmUgZG9lcyBub3QgZm9yYmlkIHRoZSBhdHRhaW5tZW50IG9mIGVpdGhlciwgd2h5CnNob3VsZCBub3Qgc29tZW9uZSBzdWNjZWVkIGluIGF0dGFpbmluZyBib3RoIHRvZ2V0aGVyPyBBbmQgd2h5IHNob3VsZCBub3QgZWFjaCBvZiB1cyBob3BlIHRvIGJlCnRoYXQgaGFwcHkgbWFuPzwvdHJhbnNsYXRpb24+"
translation['12.1.32'] = ""
translation['12.1.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoaW5rIEkgaGVhciBjZXJ0YWluIHBlcnNvbnMgKGZvciB0aGVyZSB3aWxsCmFsd2F5cyBiZSBzb21lIHdobyBoYWQgcmF0aGVyIGJlIGVsb3F1ZW50IHRoYW4KZ29vZCkgYXNraW5nLCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5XaHkgdGhlbiBpcyB0aGVyZSBzbyBtdWNoIGFydCBpbiBjb25uZXhpb24gd2l0aCBlbG9xdWVuY2U/IFdoeSBoYXZlIHlvdSB0YWxrZWQgc28KbXVjaCBvZiAnZ2xvc3NlcywnPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNvbG9yPC9oaT4gaXMgYSB0ZWNobmljYWwgdGVybSBmb3IgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+dGhlIHBhcnRpY3VsYXIgYXNwZWN0IGdpdmVuCnRvIGEgY2FzZSBieSBza2lsZnVsIG1hbmlwdWxhdGlvbiBvZiB0aGUgZmFjdHPigJR0aGUgJ2dsb3NzJwpvciAndmFybmlzaCcgcHV0IG9uIHRoZW0gYnkgdGhlIGFjY3VzZWQgb3IgYWNjdXNlci48L3F1b3RlPuKAlFBldGVyc29uIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPm9uIFF1aW50LjwvaGk+IFguIGkuIDExNi48L25vdGU+IHRoZSBtZXRob2RzIG9mIGRlZmVuY2UgdG8gYmUKZW1wbG95ZWQgaW4gZGlmZmljdWx0IGNhc2VzLCBhbmQgc29tZXRpbWVzIGV2ZW4gb2YKYWN0dWFsIGNvbmZlc3Npb24gb2YgZ3VpbHQsIHVubGVzcyBpdCBpcyB0aGUgY2FzZSB0aGF0CnRoZSBwb3dlciBhbmQgZm9yY2Ugb2Ygc3BlZWNoIGF0IHRpbWVzIHRyaXVtcGhzIG92ZXIKdHJ1dGggaXRzZWxmPyBGb3IgYSBnb29kIG1hbiB3aWxsIG9ubHkgcGxlYWQgZ29vZApjYXNlcywgYW5kIHRob3NlIG1pZ2h0IHNhZmVseSBiZSBsZWZ0IHRvIHRydXRoIHRvCnN1cHBvcnQgd2l0aG91dCB0aGUgYWlkIG9mIGxlYXJuaW5nLjwvcXVvdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNvbG9yPC9oaT4gaXMgYSB0ZWNobmljYWwgdGVybSBmb3IgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+dGhlIHBhcnRpY3VsYXIgYXNwZWN0IGdpdmVuCnRvIGEgY2FzZSBieSBza2lsZnVsIG1hbmlwdWxhdGlvbiBvZiB0aGUgZmFjdHPigJR0aGUgJ2dsb3NzJwpvciAndmFybmlzaCcgcHV0IG9uIHRoZW0gYnkgdGhlIGFjY3VzZWQgb3IgYWNjdXNlci48L3F1b3RlPuKAlFBldGVyc29uIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPm9uIFF1aW50LjwvaGk+IFguIGkuIDExNi48L25vdGU+IHRoZSBtZXRob2RzIG9mIGRlZmVuY2UgdG8gYmUKZW1wbG95ZWQgaW4gZGlmZmljdWx0IGNhc2VzLCBhbmQgc29tZXRpbWVzIGV2ZW4gb2YKYWN0dWFsIGNvbmZlc3Npb24gb2YgZ3VpbHQsIHVubGVzcyBpdCBpcyB0aGUgY2FzZSB0aGF0CnRoZSBwb3dlciBhbmQgZm9yY2Ugb2Ygc3BlZWNoIGF0IHRpbWVzIHRyaXVtcGhzIG92ZXIKdHJ1dGggaXRzZWxmPyBGb3IgYSBnb29kIG1hbiB3aWxsIG9ubHkgcGxlYWQgZ29vZApjYXNlcywgYW5kIHRob3NlIG1pZ2h0IHNhZmVseSBiZSBsZWZ0IHRvIHRydXRoIHRvCnN1cHBvcnQgd2l0aG91dCB0aGUgYWlkIG9mIGxlYXJuaW5nLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNvbG9yPC9oaT4gaXMgYSB0ZWNobmljYWwgdGVybSBmb3IgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+dGhlIHBhcnRpY3VsYXIgYXNwZWN0IGdpdmVuCnRvIGEgY2FzZSBieSBza2lsZnVsIG1hbmlwdWxhdGlvbiBvZiB0aGUgZmFjdHPigJR0aGUgJ2dsb3NzJwpvciAndmFybmlzaCcgcHV0IG9uIHRoZW0gYnkgdGhlIGFjY3VzZWQgb3IgYWNjdXNlci48L3F1b3RlPuKAlFBldGVyc29uIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPm9uIFF1aW50LjwvaGk+IFguIGkuIDExNi48L3RyYW5zbGF0aW9uPg=="
translation['12.1.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz4gTm93LCB0aG91Z2gKbXkgcmVwbHkgdG8gdGhlc2UgY3JpdGljcyB3aWxsIGluIHRoZSBmaXJzdCBwbGFjZSBiZQphIGRlZmVuY2Ugb2YgbXkgb3duIHdvcmssIGl0IHdpbGwgYWxzbyBleHBsYWluIHdoYXQKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjM3NSIgLz4KCkkgY29uc2lkZXIgdG8gYmUgdGhlIGR1dHkgb2YgYSBnb29kIG1hbiBvbiBvY2Nhc2lvbnMKd2hlbiBjaXJjdW1zdGFuY2VzIGhhdmUgY2F1c2VkIGhpbSB0byB1bmRlcnRha2UgdGhlIGRlZmVuY2Ugb2YgdGhlIGd1aWx0eS4gRm9yIGl0IGlzIGJ5IG5vCm1lYW5zIHVzZWxlc3MgdG8gY29uc2lkZXIgaG93IGF0IHRpbWVzIHdlIHNob3VsZApzcGVhayBpbiBkZWZlbmNlIG9mIGZhbHNlaG9vZCBvciBldmVuIG9mIGluanVzdGljZSwgaWYKb25seSBmb3IgdGhpcyByZWFzb24sIHRoYXQgc3VjaCBhbiBpbnZlc3RpZ2F0aW9uIHdpbGwKZW5hYmxlIHVzIHRvIGRldGVjdCBhbmQgZGVmZWF0IHRoZW0gd2l0aCB0aGUgZ3JlYXRlcgplYXNlLCBqdXN0IGFzIHRoZSBwaHlzaWNpYW4gd2hvIGhhcyBhIHRob3JvdWdoCmtub3dsZWRnZSBvZiBhbGwgdGhhdCBjYW4gaW5qdXJlIHRoZSBoZWFsdGggd2lsbCBiZQphbGwgdGhlIG1vcmUgc2tpbGZ1bCBpbiB0aGUgcHJlc2NyaXB0aW9uIG9mIHJlbWVkaWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['12.1.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIEFjYWRlbWljaWFucywgYWx0aG91Z2ggdGhleSB3aWxsIGFyZ3VlIG9uCmVpdGhlciBzaWRlIG9mIGEgcXVlc3Rpb24sIGRvIG5vdCB0aGVyZWJ5IGNvbW1pdAp0aGVtc2VsdmVzIHRvIHRha2luZyBvbmUgb2YgdGhlc2UgdHdvIHZpZXdzIGFzIHRoZWlyCmd1aWRlIGluIGxpZmUgdG8gdGhlIGV4Y2x1c2lvbiBvZiB0aGUgb3RoZXIsIHdoaWxlIHRoZQpmYW1vdXMgQ2FybmVhZGVzLCB3aG8gaXMgc2FpZCB0byBoYXZlIHNwb2tlbiBhdApSb21lIGluIHRoZSBwcmVzZW5jZSBvZiBDYXRvIHRoZSBDZW5zb3IsIGFuZCB0bwpoYXZlIGFyZ3VlZCBhZ2FpbnN0IGp1c3RpY2Ugd2l0aCBubyBsZXNzIHZpZ291ciB0aGFuCmhlIGhhZCBhcmd1ZWQgZm9yIGp1c3RpY2Ugb24gdGhlIHByZWNlZGluZyBkYXksIHdhcwpub3QgaGltc2VsZiBhbiB1bmp1c3QgbWFuLiBCdXQgdGhlIG5hdHVyZSBvZiB2aXJ0dWUKaXMgcmV2ZWFsZWQgYnkgdmljZSwgaXRzIG9wcG9zaXRlLCBqdXN0aWNlIGJlY29tZXMgeWV0Cm1vcmUgbWFuaWZlc3QgZnJvbSB0aGUgY29udGVtcGxhdGlvbiBvZiBpbmp1c3RpY2UsCmFuZCB0aGVyZSBhcmUgbWFueSBvdGhlciB0aGluZ3MgdGhhdCBhcmUgcHJvdmVkIGJ5CnRoZWlyIGNvbnRyYXJpZXMuIENvbnNlcXVlbnRseSB0aGUgc2NoZW1lcyBvZiBoaXMKYWR2ZXJzYXJpZXMgc2hvdWxkIGJlIG5vIGxlc3Mgd2VsbCBrbm93biB0byB0aGUKb3JhdG9yIHRoYW4gdGhvc2Ugb2YgdGhlIGVuZW15IHRvIGEgY29tbWFuZGVyIGluCnRoZSBmaWVsZC48L3RyYW5zbGF0aW9uPg=="
translation['12.1.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGl0IGlzIGV2ZW4gdHJ1ZSwgYWx0aG91Z2ggYXQgZmlyc3Qgc2lnaHQKaXQgc2VlbXMgaGFyZCB0byBiZWxpZXZlLCB0aGF0IHRoZXJlIG1heSBiZSBzb3VuZApyZWFzb24gd2h5IGF0IHRpbWVzIGEgZ29vZCBtYW4gd2hvIGlzIGFwcGVhcmluZwpmb3IgdGhlIGRlZmVuY2Ugc2hvdWxkIGF0dGVtcHQgdG8gY29uY2VhbCB0aGUgdHJ1dGgKZnJvbSB0aGUganVkZ2UuIElmIGFueSBvZiBteSByZWFkZXJzIGlzIHN1cnByaXNlZAphdCBteSBtYWtpbmcgc3VjaCBhIHN0YXRlbWVudCAoYWx0aG91Z2ggdGhpcwpvcGluaW9uIGlzIG5vdCBvZiBteSBvd24gaW52ZW50aW9uLCBidXQgaXMgZGVyaXZlZApmcm9tIHRob3NlIHdob20gYW50aXF1aXR5IHJlZ2FyZGVkIGFzIHRoZSBncmVhdGVzdAp0ZWFjaGVycyBvZiB3aXNkb20pLCBJIHdvdWxkIGhhdmUgaGltIHJlZmxlY3QgdGhhdAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzc3IiAvPgoKdGhlcmUgYXJlIG1hbnkgdGhpbmdzIHdoaWNoIGFyZSBtYWRlIGhvbm91cmFibGUKb3IgdGhlIHJldmVyc2Ugbm90IGJ5IHRoZSBuYXR1cmUgb2YgdGhlIGZhY3RzLCBidXQgYnkKdGhlIGNhdXNlcyBmcm9tIHdoaWNoIHRoZXkgc3ByaW5nLjwvdHJhbnNsYXRpb24+"
translation['12.1.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGlmIHRvIHNsYXkKYSBtYW4gaXMgb2Z0ZW4gYSB2aXJ0dWUgYW5kIHRvIHB1dCBvbmUncyBvd24gY2hpbGRyZW4KdG8gZGVhdGggaXMgYXQgdGltZXMgdGhlIG5vYmxlc3Qgb2YgZGVlZHMsIGFuZCBpZiBpdAppcyBwZXJtaXNzaWJsZSBpbiB0aGUgcHVibGljIGludGVyZXN0IHRvIGRvIGRlZWRzCnlldCBtb3JlIGhvcnJpYmxlIHRvIHJlbGF0ZSB0aGFuIHRoZXNlLCB3ZSBzaG91bGQKYXNzdXJlZGx5IHRha2UgaW50byBjb25zaWRlcmF0aW9uIG5vdCBzb2xlbHkgYW5kCnNpbXBseSB3aGF0IGlzIHRoZSBuYXR1cmUgb2YgdGhlIGNhc2Ugd2hpY2ggdGhlCmdvb2QgbWFuIHVuZGVydGFrZXMgdG8gZGVmZW5kLCBidXQgd2hhdCBpcyBoaXMKcmVhc29uIGFuZCB3aGF0IGhpcyBwdXJwb3NlIGluIHNvIGRvaW5nLjwvdHJhbnNsYXRpb24+"
translation['12.1.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIGZpcnN0Cm9mIGFsbCBldmVyeW9uZSBtdXN0IGFsbG93LCB3aGF0IGV2ZW4gdGhlIHN0ZXJuZXN0Cm9mIHRoZSBTdG9pY3MgYWRtaXQsIHRoYXQgdGhlIGdvb2QgbWFuIHdpbGwgc29tZXRpbWVzIHRlbGwgYSBsaWUsIGFuZCBmdXJ0aGVyIHRoYXQgaGUgd2lsbCBzb21ldGltZXMgZG8Kc28gZm9yIGNvbXBhcmF0aXZlbHkgdHJpdmlhbCByZWFzb25zOyBmb3IgZXhhbXBsZSB3ZQp0ZWxsIGNvdW50bGVzcyBsaWVzIHRvIHNpY2sgY2hpbGRyZW4gZm9yIHRoZWlyIGdvb2QgYW5kCm1ha2UgbWFueSBwcm9taXNlcyB0byB0aGVtIHdoaWNoIHdlIGRvIG5vdCBpbnRlbmQKdG8gcGVyZm9ybS48L3RyYW5zbGF0aW9uPg=="
translation['12.1.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIHRoZXJlIGlzIGNsZWFybHkgZmFyIG1vcmUganVzdGlmaWNhdGlvbiBmb3IgbHlpbmcgd2hlbiBpdCBpcyBhIHF1ZXN0aW9uIG9mIGRpdmVydGluZwphbiBhc3Nhc3NpbiBmcm9tIGhpcyB2aWN0aW0gb3IgZGVjZWl2aW5nIGFuIGVuZW15CnRvIHNhdmUgb3VyIGNvdW50cnkuIENvbnNlcXVlbnRseSBhIHByYWN0aWNlIHdoaWNoCmlzIGF0IHRpbWVzIHJlcHJlaGVuc2libGUgZXZlbiBpbiBzbGF2ZXMsIG1heSBvbgpvdGhlciBvY2Nhc2lvbnMgYmUgcHJhaXNld29ydGh5IGV2ZW4gaW4gYSB3aXNlIG1hbi4KSWYgdGhpcyBiZSBncmFudGVkLCBJIGNhbiBzZWUgdGhhdCB0aGVyZSB3aWxsIGJlIG1hbnkKcG9zc2libGUgZW1lcmdlbmNpZXMgc3VjaCBhcyB0byBqdXN0aWZ5IGFuIG9yYXRvciBpbgp1bmRlcnRha2luZyBjYXNlcyBvZiBhIGtpbmQgd2hpY2gsIGluIHRoZSBhYnNlbmNlIG9mCmFueSBob25vdXJhYmxlIHJlYXNvbiwgaGUgd291bGQgaGF2ZSByZWZ1c2VkIHRvCnRvdWNoLjwvdHJhbnNsYXRpb24+"
translation['12.1.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz4gSW4gc2F5aW5nIHRoaXMgSSBkbyBub3QgbWVhbiB0aGF0IHdlIHNob3VsZApiZSByZWFkeSB1bmRlciBhbnkgY2lyY3Vtc3RhbmNlcyB0byBkZWZlbmQgb3VyCmZhdGhlciwgYnJvdGhlciBvciBmcmllbmQgd2hlbiBpbiBwZXJpbCAoc2luY2UgSQpob2xkIHRoYXQgd2Ugc2hvdWxkIGJlIGd1aWRlZCBieSBzdHJpY3RlciBydWxlcyBpbgpzdWNoIG1hdHRlcnMpLCBhbHRob3VnaCBzdWNoIGNvbnRpbmdlbmNpZXMgbWF5CndlbGwgY2F1c2UgdXMgbm8gbGl0dGxlIHBlcnBsZXhpdHksIHdoZW4gd2UgaGF2ZSB0bwpkZWNpZGUgYmV0d2VlbiB0aGUgcml2YWwgY2xhaW1zIG9mIGp1c3RpY2UgYW5kIG5hdHVyYWwKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjM3OSIgLz4KCmFmZmVjdGlvbi4gQnV0IGxldCB1cyBwdXQgdGhlIHByb2JsZW0gYmV5b25kIGFsbApxdWVzdGlvbiBvZiBkb3VidC4gU3VwcG9zZSBhIG1hbiB0byBoYXZlIHBsb3R0ZWQKYWdhaW5zdCBhIHR5cmFudCBhbmQgdG8gYmUgYWNjdXNlZCBvZiBoYXZpbmcgZG9uZSBzby4KV2hpY2ggb2YgdGhlIHR3byB3aWxsIHRoZSBvcmF0b3IsIGFzIGRlZmluZWQgYnkgdXMsCmRlc2lyZSB0byBzYXZlPyBBbmQgaWYgaGUgdW5kZXJ0YWtlcyB0aGUgZGVmZW5jZQpvZiB0aGUgYWNjdXNlZCwgd2lsbCBoZSBub3QgZW1wbG95IGZhbHNlaG9vZCB3aXRoCm5vIGxlc3MgcmVhZGluZXNzIHRoYW4gdGhlIGFkdm9jYXRlIHdobyBpcyBkZWZlbmRpbmcKYSBiYWQgY2FzZSBiZWZvcmUgYSBqdXJ5PzwvdHJhbnNsYXRpb24+"
translation['12.1.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIHN1cHBvc2UgdGhhdCB0aGUKanVkZ2UgaXMgbGlrZWx5IHRvIGNvbmRlbW4gYWN0cyB3aGljaCB3ZXJlIHJpZ2h0bHkKZG9uZSwgdW5sZXNzIHdlIGNhbiBjb252aW5jZSBoaW0gdGhhdCB0aGV5IHdlcmUKbmV2ZXIgZG9uZS4gSXMgbm90IHRoaXMgYW5vdGhlciBjYXNlIHdoZXJlIHRoZQpvcmF0b3Igd2lsbCBub3Qgc2hyaW5rIGV2ZW4gZnJvbSBsaWVzLCBpZiBzbyBoZSBtYXkKc2F2ZSBvbmUgd2hvIGlzIG5vdCBtZXJlbHkgaW5ub2NlbnQsIGJ1dCBhIHByYWlzZXdvcnRoeSBjaXRpemVuPyBBZ2Fpbiwgc3VwcG9zZSB0aGF0IHdlIHJlYWxpc2UgdGhhdApjZXJ0YWluIGFjdHMgYXJlIGp1c3QgaW4gdGhlbXNlbHZlcywgdGhvdWdoIHByZWp1ZGljaWFsCnRvIHRoZSBzdGF0ZSB1bmRlciBleGlzdGluZyBjaXJjdW1zdGFuY2VzLiBTaGFsbCB3ZQpub3QgdGhlbiBlbXBsb3kgbWV0aG9kcyBvZiBzcGVha2luZyB3aGljaCwgZGVzcGl0ZQp0aGUgZXhjZWxsZW5jZSBvZiB0aGVpciBpbnRlbnRpb24sIGJlYXIgYSBjbG9zZSByZXNlbWJsYW5jZSB0byBmcmF1ZC48L3RyYW5zbGF0aW9uPg=="
translation['12.1.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz4gRnVydGhlciwgbm8gb25lIHdpbGwgaGVzaXRhdGUKZm9yIGEgbW9tZW50IHRvIGhvbGQgdGhlIHZpZXcgdGhhdCBpdCBpcyBpbiB0aGUKaW50ZXJlc3RzIG9mIHRoZSBjb21tb253ZWFsdGggdGhhdCBndWlsdHkgcGVyc29ucwpzaG91bGQgYmUgYWNxdWl0dGVkIHJhdGhlciB0aGFuIHB1bmlzaGVkLCBpZiBpdCBiZQpwb3NzaWJsZSB0aGVyZWJ5IHRvIGNvbnZlcnQgdGhlbSB0byBhIGJldHRlciBzdGF0ZSBvZgptaW5kLCBhIHBvc3NpYmlsaXR5IHdoaWNoIGlzIGdlbmVyYWxseSBjb25jZWRlZC4gSWYKdGhlbiBpdCBpcyBjbGVhciB0byBhbiBvcmF0b3IgdGhhdCBhIG1hbiB3aG8gaXMgZ3VpbHR5Cm9mIHRoZSBvZmZlbmNlcyBsYWlkIHRvIGhpcyBjaGFyZ2Ugd2lsbCBiZWNvbWUgYSBnb29kCm1hbiwgd2lsbCBoZSBub3Qgc3RyaXZlIHRvIHNlY3VyZSBoaXMgYWNxdWl0dGFsPwo8L3RyYW5zbGF0aW9uPg=="
translation['12.1.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz5JbWFnaW5lIGZvciBleGFtcGxlIHRoYXQgYSBza2lsZnVsIGNvbW1hbmRlciwgd2l0aG91dCB3aG9zZSBhaWQgdGhlIHN0YXRlIGNhbm5vdCBob3BlIHRvIGNydXNoIGl0cwplbmVtaWVzLCBpcyBsYWJvdXJpbmcgdW5kZXIgYSBjaGFyZ2Ugd2hpY2ggaXMgb2J2aW91c2x5IHRydWU6IHdpbGwgbm90IHRoZSBjb21tb24gaW50ZXJlc3QgaXJyZXNpc3RpYmx5CnN1bW1vbiBvdXIgb3JhdG9yIHRvIGRlZmVuZCBoaW0/IFdlIGtub3cgYXQKYW55IHJhdGUgdGhhdCBGYWJyaWNpdXMgcHVibGljbHkgdm90ZWQgZm9yIGFuZCBzZWN1cmVkCnRoZSBlbGVjdGlvbiB0byB0aGUgY29uc3VsYXRlIG9mIENvcm5lbGl1cyBSdWZpbnVzLAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzgxIiAvPgoKZGVzcGl0ZSB0aGUgdGFjdCB0aGF0IGhlIHdhcyBhIGJhZCBjaXRpemVuIGFuZCBoaXMKcGVyc29uYWwgZW5lbXksIG1lcmVseSBiZWNhdXNlIGhlIGtuZXcgdGhhdCBoZQp3YXMgYSBjYXBhYmxlIGdlbmVyYWwgYW5kIHRoZSBzdGF0ZSB3YXMgdGhyZWF0ZW5lZAp3aXRoIHdhci48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlIGxhdGUgaXMgdW5jZXJ0YWluLCBidXQgdGhlIHJlZmVyZW5jZSBtdXN0IGJlIGVpdGhlciB0bwp0aGUgU2Ftbml0ZSB3YXIgb2YgMjkwIG9yIHRoZSB3YXIgd2l0aCBQeXJyaHVzLjwvbm90ZT4gQW5kIHdoZW4gY2VydGFpbiBwZXJzb25zIGV4cHJlc3NlZAp0aGVpciBzdXJwcmlzZSBhdCBoaXMgY29uZHVjdCwgaGUgcmVwbGllZCB0aGF0IGhlIGhhZApyYXRoZXIgYmUgcm9iYmVkIGJ5IGEgZmVsbG93LWNpdGl6ZW4gdGhhbiBiZSBzb2xkIGFzCmEgc2xhdmUgYnkgdGhlIGVuZW15LiBXZWxsIHRoZW4sIGhhZCBGYWJyaWNpdXMKYmVlbiBhbiBvcmF0b3IsIHdvdWxkIGhlIG5vdCBoYXZlIGRlZmVuZGVkIFJ1ZmludXMKYWdhaW5zdCBhIGNoYXJnZSBvZiBwZWN1bGF0aW9uLCBldmVuIHRob3VnaCBoaXMKZ3VpbHQgd2VyZSBhcyBjbGVhciBhcyBkYXk/PC90cmFuc2xhdGlvbj4="
translation['12.1.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz4gSSBtaWdodCBwcm9kdWNlIG1hbnkKb3RoZXIgc2ltaWxhciBleGFtcGxlcywgYnV0IG9uZSBvZiB0aGVtIHRha2VuIGF0CnJhbmRvbSBpcyBlbm91Z2guIEZvciBteSBwdXJwb3NlIGlzIG5vdCB0bwphc3NlcnQgdGhhdCBzdWNoIHRhc2tzIHdpbGwgb2Z0ZW4gYmUgaW5jdW1iZW50Cm9uIHRoZSBvcmF0b3Igd2hvbSBJIGRlc2lyZSB0byBmb3JtLCBidXQgbWVyZWx5IHRvCnNob3cgdGhhdCwgaW4gdGhlIGV2ZW50IG9mIGhpcyBiZWluZyBjb21wZWxsZWQgdG8KdGFrZSBzdWNoIGFjdGlvbiwgaXQgd2lsbCBub3QgaW52YWxpZGF0ZSBvdXIgZGVmaW5pdGlvbgpvZiBhbiBvcmF0b3IgYXMgYSA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5nb29kIG1hbiwgc2tpbGxlZCBpbiBzcGVha2luZy48L3F1b3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['12.1.45'] = ""
translation['12.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['12.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPlNpbmNlIHRoZW4gdGhlIG9yYXRvciBpcyBhIGdvb2QgbWFuLCBhbmQgc3VjaApnb29kbmVzcyBjYW5ub3QgYmUgY29uY2VpdmVkIGFzIGV4aXN0aW5nIGFwYXJ0IGZyb20KCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjM4MyIgLz4KCnZpcnR1ZSwgdmlydHVlLCBkZXNwaXRlIHRoZSBmYWN0IHRoYXQgaXQgaXMgaW4gcGFydApkZXJpdmVkIGZyb20gY2VydGFpbiBuYXR1cmFsIGltcHVsc2VzLCB3aWxsIHJlcXVpcmUgdG8KYmUgcGVyZmVjdGVkIGJ5IGluc3RydWN0aW9uLiBUaGUgb3JhdG9yIG11c3QgYWJvdmUKYWxsIHRoaW5ncyBkZXZvdGUgaGlzIGF0dGVudGlvbiB0byB0aGUgZm9ybWF0aW9uIG9mCm1vcmFsIGNoYXJhY3RlciBhbmQgbXVzdCBhY3F1aXJlIGEgY29tcGxldGUga25vd2xlZGdlIG9mIGFsbCB0aGF0IGlzIGp1c3QgYW5kIGhvbm91cmFibGUuIEZvciB3aXRob3V0CnRoaXMga25vd2xlZGdlIG5vIG9uZSBjYW4gYmUgZWl0aGVyIGEgZ29vZCBtYW4gb3IKc2tpbGxlZCBpbiBzcGVha2luZyw8L3RyYW5zbGF0aW9uPg=="
translation['12.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiB1bmxlc3MgaW5kZWVkIHdlIGFncmVlIHdpdGgKdGhvc2Ugd2hvIHJlZ2FyZCBtb3JhbGl0eSBhcyBpbnR1aXRpdmUgYW5kIGFzIG93aW5nCm5vdGhpbmcgdG8gaW5zdHJ1Y3Rpb246IGluZGVlZCB0aGV5IGdvIHNvIGZhciBhcyB0bwphY2tub3dsZWRnZSB0aGF0IGhhbmRpY3JhZnRzLCBub3QgZXhjbHVkaW5nIGV2ZW4KdGhvc2Ugd2hpY2ggYXJlIG1vc3QgZGVzcGlzZWQgYW1vbmcgdGhlbSwgY2FuCm9ubHkgYmUgYWNxdWlyZWQgYnkgdGhlIHJlc3VsdCBvZiB0ZWFjaGluZywgd2hlcmVhcwp2aXJ0dWUsIHdoaWNoIG9mIGFsbCBnaWZ0cyB0byBtYW4gaXMgdGhhdCB3aGljaCBtYWtlcwpoaW0gbW9zdCBuZWFyIGFraW4gdG8gdGhlIGltbW9ydGFsIGdvZHMsIGNvbWVzIHRvCmhpbSB3aXRob3V0IHNlYXJjaCBvciBlZmZvcnQsIGFzIGEgbmF0dXJhbCBjb25jb21pdGFudApvZiBiaXJ0aC4gQnV0IGNhbiB0aGUgbWFuIHdobyBkb2VzIG5vdCBrbm93IHdoYXQKYWJzdGluZW5jZSBpcywgY2xhaW0gdG8gYmUgdHJ1bHkgYWJzdGluZW50PzwvdHJhbnNsYXRpb24+"
translation['12.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBvciBicmF2ZSwgaWYKaGUgaGFzIG5ldmVyIHB1cmdlZCBoaXMgc291bCBvZiB0aGUgZmVhcnMgb2YgcGFpbiwgZGVhdGgKYW5kIHN1cGVyc3RpdGlvbj8gb3IganVzdCwgaXQgaGUgaGFzIG5ldmVyLCBpbiBsYW5ndWFnZQphcHByb2FjaGluZyB0aGF0IG9mIHBoaWxvc29waHksIGRpc2N1c3NlZCB0aGUgbmF0dXJlCm9mIHZpcnR1ZSBhbmQganVzdGljZSwgb3Igb2YgdGhlIGxhd3MgdGhhdCBoYXZlIGJlZW4KZ2l2ZW4gdG8gbWFua2luZCBieSBuYXR1cmUgb3IgZXN0YWJsaXNoZWQgYW1vbmcKaW5kaXZpZHVhbCBwZW9wbGVzIGFuZCBuYXRpb25zPyBXaGF0IGEgY29udGVtcHQKaXQgYXJndWVzIGZvciBzdWNoIHRoZW1lcyB0byByZWdhcmQgdGhlbSBhcyBiZWluZwpzbyBlYXN5IG9mIGNvbXByZWhlbnNpb24hPC90cmFuc2xhdGlvbj4="
translation['12.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBIb3dldmVyLCBJIHBhc3MgdGhpcyBieTsKZm9yIEkgYW0gc3VyZSB0aGF0IG5vIG9uZSB3aXRoIHRoZSBsZWFzdCBzbWF0dGVyaW5nCm9mIGxpdGVyYXJ5IGN1bHR1cmUgd2lsbCBoYXZlIHRoZSBzbGlnaHRlc3QgaGVzaXRhdGlvbgppbiBhZ3JlZWluZyB3aXRoIG1lLiBJIHdpbGwgcHJvY2VlZCB0byBteSBuZXh0CnBvaW50LCB0aGF0IG5vIG9uZSB3aWxsIGFjaGlldmUgc3VmZmljaWVudCBza2lsbCBldmVuIGluCnNwZWFraW5nLCB1bmxlc3MgaGUgbWFrZXMgYSB0aG9yb3VnaCBzdHVkeSBvZiBhbGwKdGhlIHdvcmtpbmdzIG9mIG5hdHVyZSBhbmQgZm9ybXMgaGlzIGNoYXJhY3RlciBvbgp0aGUgcHJlY2VwdHMgb2YgcGhpbG9zb3BoeSBhbmQgdGhlIGRpY3RhdGVzIG9mIHJlYXNvbi4KPC90cmFuc2xhdGlvbj4="
translation['12.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkZvciBpdCBpcyB3aXRoIGdvb2QgY2F1c2UgdGhhdCBMdWNpdXMgQ3Jhc3N1cywgaW4gdGhlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4zODUiIC8+Cgp0aGlyZCBib29rIG9mIHRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5kZSBPcmF0b3JlLDwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkNocy4geHguIHh4dmlpLiBhbmQgeHh4aS48L25vdGU+IGFmZmlybXMgdGhhdCBhbGwgdGhhdCBpcwpzYWlkIGNvbmNlcm5pbmcgZXF1aXR5LCBqdXN0aWNlLCB0cnV0aCBhbmQgdGhlIGdvb2QsCmFuZCB0aGVpciBvcHBvc2l0ZXMsIGZvcm1zIHBhcnQgb2YgdGhlIHN0dWRpZXMgb2YgYW4Kb3JhdG9yLCBhbmQgdGhhdCB0aGUgcGhpbG9zb3BoZXJzLCB3aGVuIHRoZXkgZXhlcnQKdGhlaXIgcG93ZXJzIG9mIHNwZWFraW5nIHRvIGRlZmVuZCB0aGVzZSB2aXJ0dWVzLCBhcmUKdXNpbmcgdGhlIHdlYXBvbnMgb2YgcmhldG9yaWMsIG5vdCB0aGVpciBvd24uIEJ1dApoZSBhbHNvIGNvbmZlc3NlcyB0aGF0IHRoZSBrbm93bGVkZ2Ugb2YgdGhlc2Ugc3ViamVjdHMgbXVzdCBiZSBzb3VnaHQgZnJvbSB0aGUgcGhpbG9zb3BoZXJzIGZvciB0aGUKcmVhc29uIHRoYXQsIGluIGhpcyBvcGluaW9uLCBwaGlsb3NvcGh5IGhhcyBtb3JlCmVmZmVjdGl2ZSBwb3NzZXNzaW9uIG9mIHRoZW0uPC90cmFuc2xhdGlvbj4="
translation['12.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBBbmQgaXQgaXMgZm9yIHRoZSBzYW1lCnJlYXNvbiB0aGF0IENpY2VybyBpbiBzZXZlcmFsIG9mIGhpcyBib29rcyBhbmQgbGV0dGVycwpwcm9jbGFpbXMgdGhhdCBlbG9xdWVuY2UgaGFzIGl0cyBmb3VudGFpbi1oZWFkIGluIHRoZQptb3N0IHNlY3JldCBzcHJpbmdzIG9mIHdpc2RvbSwgYW5kIHRoYXQgY29uc2VxdWVudGx5CmZvciBhIGNvbnNpZGVyYWJsZSB0aW1lIHRoZSBpbnN0cnVjdG9ycyBvZiBtb3JhbHMgYW5kCm9mIGVsb3F1ZW5jZSB3ZXJlIGlkZW50aWNhbC4gQWNjb3JkaW5nbHkgdGhpcyBleGhvcnRhdGlvbiBvZiBtaW5lIG11c3Qgbm90IGJlIHRha2VuIHRvIG1lYW4gdGhhdCBJCndpc2ggdGhlIG9yYXRvciB0byBiZSBhIHBoaWxvc29waGVyLCBzaW5jZSB0aGVyZSBpcyBubwpvdGhlciB3YXkgb2YgbGlmZSB0aGF0IGlzIGZ1cnRoZXIgcmVtb3ZlZCBmcm9tIHRoZQpkdXRpZXMgb2YgYSBzdGF0ZXNtYW4gYW5kIHRoZSB0YXNrcyBvZiBhbiBvcmF0b3IuCjwvdHJhbnNsYXRpb24+"
translation['12.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkZvciB3aGF0IHBoaWxvc29waGVyIGhhcyBldmVyIGJlZW4gYSBmcmVxdWVudApzcGVha2VyIGluIHRoZSBjb3VydHMgb3Igd29uIHJlbm93biBpbiBwdWJsaWMKYXNzZW1ibGllcz8gTmF5LCB3aGF0IHBoaWxvc29waGVyIGhhcyBldmVyIHRha2VuIGEKcHJvbWluZW50IHBhcnQgaW4gdGhlIGdvdmVybm1lbnQgb2YgdGhlIHN0YXRlLCB3aGljaApmb3JtcyB0aGUgbW9zdCBmcmVxdWVudCB0aGVtZSBvZiB0aGVpciBpbnN0cnVjdGlvbnM/Ck5vbmUgdGhlIGxlc3MgSSBkZXNpcmUgdGhhdCBoZSwgd2hvc2UgY2hhcmFjdGVyIEkgYW0Kc2Vla2luZyB0byBtb3VsZCwgc2hvdWxkIGJlIGEgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+d2lzZSBtYW48L3F1b3RlPiBpbiB0aGUKUm9tYW4gc2Vuc2UsIHRoYXQgaXMsIG9uZSB3aG8gcmV2ZWFscyBoaW1zZWxmIGFzIGEgdHJ1ZQpzdGF0ZXNtYW4sIG5vdCBpbiB0aGUgZGlzY3Vzc2lvbnMgb2YgdGhlIHN0dWR5LCBidXQKaW4gdGhlIGFjdHVhbCBwcmFjdGljZSBhbmQgZXhwZXJpZW5jZSBvZiBsaWZlLjwvdHJhbnNsYXRpb24+"
translation['12.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiBCdXQKaW5hc211Y2ggYXMgdGhlIHN0dWR5IG9mIHBoaWxvc29waHkgaGFzIGJlZW4KZGVzZXJ0ZWQgYnkgdGhvc2Ugd2hvIGhhdmUgdHVybmVkIHRvIHRoZSBwdXJzdWl0IG9mCmVsb3F1ZW5jZSwgYW5kIHNpbmNlIHBoaWxvc29waHkgbm8gbG9uZ2VyIG1vdmVzIGluCml0cyB0cnVlIHNwaGVyZSBvZiBhY3Rpb24gYW5kIGluIHRoZSBicm9hZCBkYXlsaWdodCBvZgp0aGUgZm9ydW0sIGJ1dCBoYXMgcmV0aXJlZCBmaXJzdCB0byBwb3JjaGVzIGFuZAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzg3IiAvPgoKZ3ltbmFzaWEgYW5kIGZpbmFsbHkgdG8gdGhlIGdhdGhlcmluZ3Mgb2YgdGhlIHNjaG9vbHMsIGFsbAp0aGF0IGlzIGVzc2VudGlhbCBmb3IgYW4gb3JhdG9yLCBhbmQgeWV0IGlzIG5vdCB0YXVnaHQKYnkgdGhlIHByb2Zlc3NvcnMgb2YgZWxvcXVlbmNlLCBtdXN0IHVuZG91YnRlZGx5IGJlCnNvdWdodCBmcm9tIHRob3NlIHBlcnNvbnMgaW4gd2hvc2UgcG9zc2Vzc2lvbiBpdApoYXMgcmVtYWluZWQuIFRoZSBhdXRob3JzIHdobyBoYXZlIGRpc2NvdXJzZWQgb24KdGhlIG5hdHVyZSBvZiB2aXJ0dWUgbXVzdCBiZSByZWFkIHRocm91Z2ggYW5kCnRocm91Z2gsIHRoYXQgdGhlIGxpZmUgb2YgdGhlIG9yYXRvciBtYXkgYmUgd2VkZGVkCnRvIHRoZSBrbm93bGVkZ2Ugb2YgdGhpbmdzIGh1bWFuIGFuZCBkaXZpbmUuPC90cmFuc2xhdGlvbj4="
translation['12.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBCdXQKaG93IG11Y2ggZ3JlYXRlciBhbmQgZmFpcmVyIHdvdWxkIHN1Y2ggc3ViamVjdHMKYXBwZWFyIGlmIHRob3NlIHdobyB0YXVnaHQgdGhlbSB3ZXJlIGFsc28gdGhvc2UKd2hvIGNvdWxkIGdpdmUgdGhlbSBtb3N0IGVsb3F1ZW50IGV4cHJlc3Npb24hIE8KdGhhdCB0aGUgZGF5IG1heSBkYXduIHdoZW4gdGhlIHBlcmZlY3Qgb3JhdG9yIG9mCm91ciBoZWFydCdzIGRlc2lyZSBzaGFsbCBjbGFpbSBmb3IgaGlzIG93biBwb3NzZXNzaW9uCnRoYXQgc2NpZW5jZSB0aGF0IGhhcyBsb3N0IHRoZSBhZmZlY3Rpb24gb2YgbWFua2luZAp0aHJvdWdoIHRoZSBhcnJvZ2FuY2Ugb2YgaXRzIGNsYWltcyBhbmQgdGhlIHZpY2VzIG9mCnNvbWUgdGhhdCBoYXZlIGJyb3VnaHQgZGlzZ3JhY2UgdXBvbiBpdHMgdmlydHVlcywKYW5kIHNoYWxsIHJlc3RvcmUgaXQgdG8gaXRzIHBsYWNlIGluIHRoZSBkb21haW4gb2YKZWxvcXVlbmNlLCBhcyB0aG91Z2ggaGUgaGFkIGJlZW4gdmljdG9yaW91cyBpbiBhCnRyaWFsIGZvciB0aGUgcmVzdG9yYXRpb24gb2Ygc3RvbGVuIGdvb2RzITwvdHJhbnNsYXRpb24+"
translation['12.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIHNpbmNlCnBoaWxvc29waHkgZmFsbHMgaW50byB0aHJlZSBkaXZpc2lvbnMsIHBoeXNpY3MsIGV0aGljcwphbmQgZGlhbGVjdGljLCB3aGljaCwgSSBhc2sgeW91LCBvZiB0aGVzZSBkZXBhcnRtZW50cyBpcyBub3QgY2xvc2VseSBjb25uZWN0ZWQgd2l0aCB0aGUgdGFzayBvZiB0aGUKb3JhdG9yPzxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TGV0IHVzIHJldmVyc2UgdGhlIG9yZGVyIGp1c3QgZ2l2ZW4gYW5kIGRlYWwgZmlyc3QKd2l0aCB0aGUgdGhpcmQgZGVwYXJ0bWVudCB3aGljaCBpcyBlbnRpcmVseSBjb25jZXJuZWQgd2l0aCB3b3Jkcy4gSWYgaXQgYmUgdHJ1ZSB0aGF0IHRvIGtub3cgdGhlCnByb3BlcnRpZXMgb2YgZWFjaCB3b3JkLCB0byBjbGVhciBhd2F5IGFtYmlndWl0aWVzLAp0byB1bnJhdmVsIHBlcnBsZXhpdGllcywgdG8gZGlzdGluZ3Vpc2ggYmV0d2VlbiB0cnV0aAphbmQgZmFsc2Vob29kLCB0byBwcm92ZSBvciB0byByZWZ1dGUgYXMgbWF5IGJlCmRlc2lyZWQsIGFsbCBmb3JtIHBhcnQgb2YgdGhlIGZ1bmN0aW9ucyBvZiBhbiBvcmF0b3IsCndobyBpcyB0aGVyZSB0aGF0IGNhbiBkb3VidCB0aGUgdHJ1dGggb2YgbXkgY29udGVudGlvbj88bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+IEkgZ3JhbnQgdGhhdCB3ZSBzaGFsbCBub3QgaGF2ZSB0byBlbXBsb3kKZGlhbGVjdGljIHdpdGggc3VjaCBtaW51dGUgYXR0ZW50aW9uIHRvIGRldGFpbCB3aGVuCndlIGFyZSBwbGVhZGluZyBpbiB0aGUgY291cnRzIGFzIHdoZW4gd2UgYXJlCgo8cGIgaWQ9InAuMzg5IiAvPgoKZW5nYWdlZCBpbiBwaGlsb3NvcGhpY2FsIGRlYmF0ZSwgc2luY2UgdGhlIG9yYXRvcidzCmR1dHkgaXMgbm90IG1lcmVseSB0byBpbnN0cnVjdCwgYnV0IGFsc28gdG8gbW92ZSBhbmQKZGVsaWdodCBoaXMgYXVkaWVuY2U7IGFuZCB0byBzdWNjZWVkIGluIGRvaW5nIHRoaXMKaGUgbmVlZHMgYSBzdHJlbmd0aCwgaW1wZXR1b3NpdHkgYW5kIGdyYWNlIGFzIHdlbGwuCkZvciBvcmF0b3J5IGlzIGxpa2UgYSByaXZlcjogdGhlIGN1cnJlbnQgaXMgc3Ryb25nZXIKd2hlbiBpdCBmbG93cyB3aXRoaW4gZGVlcCBiYW5rcyBhbmQgd2l0aCBhIG1pZ2h0eQpmbG9vZCwgdGhhbiB3aGVuIHRoZSB3YXRlcnMgYXJlIHNoYWxsb3cgYW5kIGJyb2tlbgpieSB0aGUgcGViYmxlcyB0aGF0IGJhciB0aGVpciB3YXkuPG1pbGVzdG9uZSBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIGp1c3QgYXMKdGhlIHRyYWluZXJzIG9mIHRoZSB3cmVzdGxpbmcgc2Nob29sIGRvIG5vdCBpbXBhcnQKdGhlIHZhcmlvdXMgPGhpIHJlbmQ9Iml0YWxpY3MiPnRocm93czwvaGk+IHRvIHRoZWlyIHB1cGlscyB0aGF0IHRob3NlIHdobwpoYXZlIGxlYXJudCB0aGVtIG1heSBtYWtlIHVzZSBvZiBhbGwgb2YgdGhlbSBpbgphY3R1YWwgd3Jlc3RsaW5nIG1hdGNoZXMgKGZvciB3ZWlnaHQgYW5kIHN0cmVuZ3RoCmFuZCB3aW5kIGNvdW50IGZvciBtb3JlIHRoYW4gdGhlc2UpLCBidXQgdGhhdCB0aGV5Cm1heSBoYXZlIGEgc3RvcmUgZnJvbSB3aGljaCB0byBkcmF3IG9uZSBvciB0d28Kb2Ygc3VjaCB0cmlja3MsIGFzIG9jY2FzaW9uIG1heSBvZmZlcjs8bWlsZXN0b25lIG49IjEzIiB1bml0PSJzZWN0aW9uIiAvPiBldmVuIHNvIHRoZQpzY2llbmNlIG9mIGRpYWxlY3RpYywgb3IgaWYgeW91IHByZWZlciBpdCBvZiBkaXNwdXRhdGlvbiwgd2hpbGUgaXQgaXMgb2Z0ZW4gdXNlZnVsIGluIGRlZmluaXRpb24sIGluZmVyZW5jZSwKZGlmZmVyZW50aWF0aW9uLCByZXNvbHV0aW9uIG9mIGFtYmlndWl0eSwgZGlzdGluY3Rpb24KYW5kIGNsYXNzaWZpY2F0aW9uLCBhcyBhbHNvIGluIGx1cmluZyBvbiBvciBlbnRhbmdsaW5nCm91ciBvcHBvbmVudHMsIHlldCBpZiBpdCBjbGFpbSB0byBhc3N1bWUgdGhlIGVudGlyZQpkaXJlY3Rpb24gb2YgdGhlIHN0cnVnZ2xlcyBvZiB0aGUgZm9ydW0sIHdpbGwgbWVyZWx5CnN0YW5kIGluIHRoZSB3YXkgb2YgYXJ0cyBzdXBlcmlvciB0byBpdHNlbGYgYW5kIGJ5IGl0cwp2ZXJ5IHN1YnRsZXR5IHdpbGwgZXhoYXVzdCB0aGUgc3RyZW5ndGggdGhhdCBoYXMKYmVlbiBwYXJlZCBkb3duIHRvIHN1aXQgaXRzIGxpbWl0YXRpb25zLjxtaWxlc3RvbmUgbj0iMTQiIHVuaXQ9InNlY3Rpb24iIC8+IEFzIGEKcmVzdWx0IHlvdSB3aWxsIGZpbmQgdGhhdCBjZXJ0YWluIHBlcnNvbnMgd2hvIHNob3cKYXN0b25pc2hpbmcgc2tpbGwgaW4gcGhpbG9zb3BoaWNhbCBkZWJhdGUsIGFzIHNvb24gYXMKdGhleSBxdWl0IHRoZSBzcGhlcmUgb2YgdGhlaXIgcXVpYmJsZXMsIGFyZSBhcyBoZWxwbGVzcyBpbiBhbnkgY2FzZSB0aGF0IGRlbWFuZHMgbW9yZSBzZXJpb3VzIHBsZWFkaW5nCmFzIHRob3NlIHNtYWxsIGFuaW1hbHMgd2hpY2gsIHRob3VnaCBuaW1ibGUgZW5vdWdoCmluIGEgY29uZmluZWQgc3BhY2UsIGFyZSBlYXNpbHkgY2FwdHVyZWQgaW4gYW4gb3BlbgpmaWVsZC48L3A+CjwvdHJhbnNsYXRpb24+"
translation['12.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gSSBncmFudCB0aGF0IHdlIHNoYWxsIG5vdCBoYXZlIHRvIGVtcGxveQpkaWFsZWN0aWMgd2l0aCBzdWNoIG1pbnV0ZSBhdHRlbnRpb24gdG8gZGV0YWlsIHdoZW4Kd2UgYXJlIHBsZWFkaW5nIGluIHRoZSBjb3VydHMgYXMgd2hlbiB3ZSBhcmUKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjM4OSIgLz4KCmVuZ2FnZWQgaW4gcGhpbG9zb3BoaWNhbCBkZWJhdGUsIHNpbmNlIHRoZSBvcmF0b3IncwpkdXR5IGlzIG5vdCBtZXJlbHkgdG8gaW5zdHJ1Y3QsIGJ1dCBhbHNvIHRvIG1vdmUgYW5kCmRlbGlnaHQgaGlzIGF1ZGllbmNlOyBhbmQgdG8gc3VjY2VlZCBpbiBkb2luZyB0aGlzCmhlIG5lZWRzIGEgc3RyZW5ndGgsIGltcGV0dW9zaXR5IGFuZCBncmFjZSBhcyB3ZWxsLgpGb3Igb3JhdG9yeSBpcyBsaWtlIGEgcml2ZXI6IHRoZSBjdXJyZW50IGlzIHN0cm9uZ2VyCndoZW4gaXQgZmxvd3Mgd2l0aGluIGRlZXAgYmFua3MgYW5kIHdpdGggYSBtaWdodHkKZmxvb2QsIHRoYW4gd2hlbiB0aGUgd2F0ZXJzIGFyZSBzaGFsbG93IGFuZCBicm9rZW4KYnkgdGhlIHBlYmJsZXMgdGhhdCBiYXIgdGhlaXIgd2F5LjwvdHJhbnNsYXRpb24+"
translation['12.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIGp1c3QgYXMKdGhlIHRyYWluZXJzIG9mIHRoZSB3cmVzdGxpbmcgc2Nob29sIGRvIG5vdCBpbXBhcnQKdGhlIHZhcmlvdXMgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+dGhyb3dzPC9oaT4gdG8gdGhlaXIgcHVwaWxzIHRoYXQgdGhvc2Ugd2hvCmhhdmUgbGVhcm50IHRoZW0gbWF5IG1ha2UgdXNlIG9mIGFsbCBvZiB0aGVtIGluCmFjdHVhbCB3cmVzdGxpbmcgbWF0Y2hlcyAoZm9yIHdlaWdodCBhbmQgc3RyZW5ndGgKYW5kIHdpbmQgY291bnQgZm9yIG1vcmUgdGhhbiB0aGVzZSksIGJ1dCB0aGF0IHRoZXkKbWF5IGhhdmUgYSBzdG9yZSBmcm9tIHdoaWNoIHRvIGRyYXcgb25lIG9yIHR3bwpvZiBzdWNoIHRyaWNrcywgYXMgb2NjYXNpb24gbWF5IG9mZmVyOzwvdHJhbnNsYXRpb24+"
translation['12.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gZXZlbiBzbyB0aGUKc2NpZW5jZSBvZiBkaWFsZWN0aWMsIG9yIGlmIHlvdSBwcmVmZXIgaXQgb2YgZGlzcHV0YXRpb24sIHdoaWxlIGl0IGlzIG9mdGVuIHVzZWZ1bCBpbiBkZWZpbml0aW9uLCBpbmZlcmVuY2UsCmRpZmZlcmVudGlhdGlvbiwgcmVzb2x1dGlvbiBvZiBhbWJpZ3VpdHksIGRpc3RpbmN0aW9uCmFuZCBjbGFzc2lmaWNhdGlvbiwgYXMgYWxzbyBpbiBsdXJpbmcgb24gb3IgZW50YW5nbGluZwpvdXIgb3Bwb25lbnRzLCB5ZXQgaWYgaXQgY2xhaW0gdG8gYXNzdW1lIHRoZSBlbnRpcmUKZGlyZWN0aW9uIG9mIHRoZSBzdHJ1Z2dsZXMgb2YgdGhlIGZvcnVtLCB3aWxsIG1lcmVseQpzdGFuZCBpbiB0aGUgd2F5IG9mIGFydHMgc3VwZXJpb3IgdG8gaXRzZWxmIGFuZCBieSBpdHMKdmVyeSBzdWJ0bGV0eSB3aWxsIGV4aGF1c3QgdGhlIHN0cmVuZ3RoIHRoYXQgaGFzCmJlZW4gcGFyZWQgZG93biB0byBzdWl0IGl0cyBsaW1pdGF0aW9ucy48L3RyYW5zbGF0aW9uPg=="
translation['12.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz4gQXMgYQpyZXN1bHQgeW91IHdpbGwgZmluZCB0aGF0IGNlcnRhaW4gcGVyc29ucyB3aG8gc2hvdwphc3RvbmlzaGluZyBza2lsbCBpbiBwaGlsb3NvcGhpY2FsIGRlYmF0ZSwgYXMgc29vbiBhcwp0aGV5IHF1aXQgdGhlIHNwaGVyZSBvZiB0aGVpciBxdWliYmxlcywgYXJlIGFzIGhlbHBsZXNzIGluIGFueSBjYXNlIHRoYXQgZGVtYW5kcyBtb3JlIHNlcmlvdXMgcGxlYWRpbmcKYXMgdGhvc2Ugc21hbGwgYW5pbWFscyB3aGljaCwgdGhvdWdoIG5pbWJsZSBlbm91Z2gKaW4gYSBjb25maW5lZCBzcGFjZSwgYXJlIGVhc2lseSBjYXB0dXJlZCBpbiBhbiBvcGVuCmZpZWxkLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE1IiB1bml0PSJzZWN0aW9uIiAvPlByb2NlZWRpbmcgdG8gbW9yYWwgcGhpbG9zb3BoeSBvciBldGhpY3MsIHdlIG1heQpub3RlIHRoYXQgaXQgYXQgYW55IHJhdGUgaXMgZW50aXJlbHkgc3VpdGVkIHRvIHRoZQpvcmF0b3IuIEZvciB2YXN0IGFzIGlzIHRoZSB2YXJpZXR5IG9mIGNhc2VzIChzaW5jZSBpbgoKPHBiIGlkPSJwLjM5MSIgLz4KCnRoZW0sIGFzIEkgaGF2ZSBwb2ludGVkIG91dCBpbiBwcmV2aW91cyBib29rcywgd2Ugc2Vlawp0byBkaXNjb3ZlciBjZXJ0YWluIHBvaW50cyBieSBjb25qZWN0dXJlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIDxtaWxlc3RvbmUgbj0iMyIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+dmkuIDQ1Ljwvbm90ZT4gcmVhY2ggb3VyCmNvbmNsdXNpb25zIGluIG90aGVycyBieSBtZWFucyBvZiBkZWZpbml0aW9uLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIElJSS4gdmkuIDQ1Ljwvbm90ZT4gZGlzcG9zZQpvZiBvdGhlcnMgb24gbGVnYWwgZ3JvdW5kcycgb3IgYnkgcmFpc2luZyB0aGUgcXVlc3Rpb24gb2YgY29tcGV0ZW5jZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBpbGwuIHZpLiAyMy48L25vdGU+IHdoaWxlIG90aGVyIHBvaW50cyBhcmUgZXN0YWJsaXNoZWQgYnkgc3lsbG9naXNtPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgSUlJLiB2aS4gMTUuPC9ub3RlPiBhbmQgb3RoZXJzIGludm9sdmUgY29udHJhZGljdGlvbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlByb2JhYmx5IGFuIGFsbHVzaW9uIHRvIGNvbnRyYWRpY3RvcnkgbGF3cy4gU2VlIFZJSUkuIHZpaS48L25vdGU+IG9yIGFyZSBkaXZlcnNlbHkgaW50ZXJwcmV0ZWQgb3dpbmcgdG8gc29tZQphbWJpZ3VpdHkgb2YgbGFuZ3VhZ2U8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBWSUkuIGl4Ljwvbm90ZT4pLCB0aGVyZSBpcyBzY2FyY2VseSBhIHNpbmdsZQpvbmUgd2hpY2ggZG9lcyBub3QgYXQgc29tZSBwb2ludCBvciBhbm90aGVyIGludm9sdmUKdGhlIGRpc2N1c3Npb24gb2YgZXF1aXR5IGFuZCB2aXJ0dWUsIHdoaWxlIHRoZXJlIGFyZQphbHNvLCBhcyBldmVyeW9uZSBrbm93cywgbm90IGEgZmV3IHdoaWNoIHR1cm4KZW50aXJlbHkgb24gcXVlc3Rpb25zIG9mIHF1YWxpdHkuPG1pbGVzdG9uZSBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4gaW4gZGVsaWJlcmF0aXZlIGFzc2VtYmxpZXMgaG93IGNhbiB3ZSBhZHZpc2UgYSBwb2xpY3kgd2l0aG91dApyYWlzaW5nIHRoZSBxdWVzdGlvbiBvZiB3aGF0IGlzIGhvbm91cmFibGU/IE5heSwKZXZlbiB0aGUgdGhpcmQgZGVwYXJ0bWVudCBvZiBvcmF0b3J5LCB3aGljaCBpcwpjb25jZXJuZWQgd2l0aCB0aGUgdGFza3Mgb2YgcHJhaXNlIGFuZCBkZW51bmNpYXRpb24sCm11c3Qgd2l0aG91dCBhIGRvdWJ0IGRlYWwgd2l0aCBxdWVzdGlvbnMgb2YgcmlnaHQKYW5kIHdyb25nLjxtaWxlc3RvbmUgbj0iMTciIHVuaXQ9InNlY3Rpb24iIC8+IEZvciB0aGUgb3JhdG9yIHdpbGwgYXNzdXJlZGx5IGhhdmUKbXVjaCB0byBzYXkgb24gc3VjaCB0b3BpY3MgYXMganVzdGljZSwgZm9ydGl0dWRlLAphYnN0aW5lbmNlLCBzZWxmLWNvbnRyb2wgYW5kIHBpZXR5LiBCdXQgdGhlIGdvb2QKbWFuLCB3aG8gaGFzIGNvbWUgdG8gdGhlIGtub3dsZWRnZSBvZiB0aGVzZSB0aGluZ3MKbm90IGJ5IG1lcmUgaGVhcnNheSwgYXMgdGhvdWdoIHRoZXkgd2VyZSBqdXN0IHdvcmRzCmFuZCBuYW1lcyBmb3IgaGlzIHRvbmd1ZSB0byBlbXBsb3ksIGJ1dCBoYXMgZ3Jhc3BlZAp0aGUgbWVhbmluZyBvZiB2aXJ0dWUgYW5kIGFjcXVpcmVkIGEgdHJ1ZSBmZWVsaW5nIGZvcgppdCwgd2lsbCBuZXZlciBiZSBwZXJwbGV4ZWQgd2hlbiBoZSBoYXMgdG8gdGhpbmsgb3V0CmEgcHJvYmxlbSwgYnV0IHdpbGwgc3BlYWsgb3V0IHRydWx5IHdoYXQgaGUKa25vd3MuPG1pbGVzdG9uZSBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz4gU2luY2UsIGhvd2V2ZXIsIDxoaSByZW5kPSJpdGFsaWNzIj5nZW5lcmFsPC9oaT4gcXVlc3Rpb25zIGFyZSBhbHdheXMKbW9yZSBpbXBvcnRhbnQgdGhhbiBzcGVjaWFsIChmb3IgdGhlIHBhcnRpY3VsYXIgaXMKY29udGFpbmVkIGluIHRoZSB1bml2ZXJzYWwsIHdoaWxlIHRoZSB1bml2ZXJzYWwgaXMKbmV2ZXIgdG8gYmUgcmVnYXJkZWQgYXMgc29tZXRoaW5nIHN1cGVyaW1wb3NlZCBvbgp0aGUgcGFydGljdWxhciksIGV2ZXJ5b25lIHdpbGwgcmVhZGlseSBhZG1pdCB0aGF0IHRoZQpzdHVkaWVzIG9mIHdoaWNoIHdlIGFyZSBzcGVha2luZyBhcmUgcHJlLWVtaW5lbnRseQpjb25jZXJuZWQgd2l0aCBnZW5lcmFsIHF1ZXN0aW9ucy48bWlsZXN0b25lIG49IjE5IiB1bml0PSJzZWN0aW9uIiAvPiBGdXJ0aGVyLCBzaW5jZQp0aGVyZSBhcmUgbnVtZXJvdXMgcG9pbnRzIHdoaWNoIHJlcXVpcmUgdG8gYmUKCjxwYiBpZD0icC4zOTMiIC8+CgpkZXRlcm1pbmVkIGJ5IGFwcHJvcHJpYXRlIGFuZCBjb25jaXNlIGRlZmluaXRpb25zCihoZW5jZSB0aGUgPGhpIHJlbmQ9Iml0YWxpY3MiPmRlZmluaXRpdmUgYmFzaXM8L2hpPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIElJSSB2aS4gMzEuPC9ub3RlPiBvZiBjYXNlcyksIGl0IGlzIHN1cmVseQpkZXNpcmFibGUgdGhhdCB0aGUgb3JhdG9yIHNob3VsZCBiZSBpbnN0cnVjdGVkIGluCnN1Y2ggdGhpbmdzIGJ5IHRob3NlIHdobyBoYXZlIGRldm90ZWQgc3BlY2lhbAphdHRlbnRpb24gdG8gdGhlIHN1YmplY3QuIEFnYWluLCBkb2VzIG5vdCBldmVyeQpxdWVzdGlvbiBvZiBsYXcgdHVybiBlaXRoZXIgb24gdGhlIHByZWNpc2UgbWVhbmluZwpvZiB3b3JkcywgdGhlIGRpc2N1c3Npb24gb2YgZXF1aXR5LCBvciBjb25qZWN0dXJlIGFzCnRvIHRoZSBpbnRlbnRpb27igJRzdWJqZWN0cyB3aGljaCBpbiBwYXJ0IGVuY3JvYWNoIG9uCnRoZSBkb21haW4gb2YgZGlhbGVjdGljIGFuZCBpbiBwYXJ0IG9uIHRoYXQgb2YgZXRoaWNzPwo8bWlsZXN0b25lIG49IjIwIiB1bml0PSJzZWN0aW9uIiAvPkNvbnNlcXVlbnRseSBhbGwgb3JhdG9yeSBpbnZvbHZlcyBhIG5hdHVyYWwgYWRtaXh0dXJlCm9mIGFsbCB0aGVzZSBwaGlsb3NvcGhpYyBlbGVtZW50c+KAlGF0IGxlYXN0LCB0aGF0IGlzIHRvCnNheSwgYWxsIG9yYXRvcnkgdGhhdCBpcyB3b3J0aHkgb2YgdGhlIG5hbWUuIEZvcgptZXJlIGdhcnJ1bGl0eSB0aGF0IGlzIGlnbm9yYW50IG9mIGFsbCBzdWNoIGxlYXJuaW5nCm11c3QgbmVlZHMgZ28gYXN0cmF5LCBzaW5jZSBpdHMgZ3VpZGVzIGFyZSBlaXRoZXIKbm9uLWV4aXN0ZW50IG9yIGZhbHNlLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['12.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Qcm9jZWVkaW5nIHRvIG1vcmFsIHBoaWxvc29waHkgb3IgZXRoaWNzLCB3ZSBtYXkKbm90ZSB0aGF0IGl0IGF0IGFueSByYXRlIGlzIGVudGlyZWx5IHN1aXRlZCB0byB0aGUKb3JhdG9yLiBGb3IgdmFzdCBhcyBpcyB0aGUgdmFyaWV0eSBvZiBjYXNlcyAoc2luY2UgaW4KCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjM5MSIgLz4KCnRoZW0sIGFzIEkgaGF2ZSBwb2ludGVkIG91dCBpbiBwcmV2aW91cyBib29rcywgd2Ugc2Vlawp0byBkaXNjb3ZlciBjZXJ0YWluIHBvaW50cyBieSBjb25qZWN0dXJlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjMiIHVuaXQ9ImNoYXB0ZXIiIC8+PG1pbGVzdG9uZSBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPnZpLiA0NS48L25vdGU+IHJlYWNoIG91cgpjb25jbHVzaW9ucyBpbiBvdGhlcnMgYnkgbWVhbnMgb2YgZGVmaW5pdGlvbiw8L3RyYW5zbGF0aW9uPg=="
translation['12.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['12.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPnZpLiA0NS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIElJSS4gdmkuIDQ1Ljwvbm90ZT4gZGlzcG9zZQpvZiBvdGhlcnMgb24gbGVnYWwgZ3JvdW5kcycgb3IgYnkgcmFpc2luZyB0aGUgcXVlc3Rpb24gb2YgY29tcGV0ZW5jZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIGlsbC4gdmkuIDIzLjwvbm90ZT4gd2hpbGUgb3RoZXIgcG9pbnRzIGFyZSBlc3RhYmxpc2hlZCBieSBzeWxsb2dpc208bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIElJSS4gdmkuIDE1Ljwvbm90ZT4gYW5kIG90aGVycyBpbnZvbHZlIGNvbnRyYWRpY3Rpb25zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlByb2JhYmx5IGFuIGFsbHVzaW9uIHRvIGNvbnRyYWRpY3RvcnkgbGF3cy4gU2VlIFZJSUkuIHZpaS48L25vdGU+IG9yIGFyZSBkaXZlcnNlbHkgaW50ZXJwcmV0ZWQgb3dpbmcgdG8gc29tZQphbWJpZ3VpdHkgb2YgbGFuZ3VhZ2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIFZJSS4gaXguPC9ub3RlPiksIHRoZXJlIGlzIHNjYXJjZWx5IGEgc2luZ2xlCm9uZSB3aGljaCBkb2VzIG5vdCBhdCBzb21lIHBvaW50IG9yIGFub3RoZXIgaW52b2x2ZQp0aGUgZGlzY3Vzc2lvbiBvZiBlcXVpdHkgYW5kIHZpcnR1ZSwgd2hpbGUgdGhlcmUgYXJlCmFsc28sIGFzIGV2ZXJ5b25lIGtub3dzLCBub3QgYSBmZXcgd2hpY2ggdHVybgplbnRpcmVseSBvbiBxdWVzdGlvbnMgb2YgcXVhbGl0eS48L3RyYW5zbGF0aW9uPg=="
translation['12.3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4gaW4gZGVsaWJlcmF0aXZlIGFzc2VtYmxpZXMgaG93IGNhbiB3ZSBhZHZpc2UgYSBwb2xpY3kgd2l0aG91dApyYWlzaW5nIHRoZSBxdWVzdGlvbiBvZiB3aGF0IGlzIGhvbm91cmFibGU/IE5heSwKZXZlbiB0aGUgdGhpcmQgZGVwYXJ0bWVudCBvZiBvcmF0b3J5LCB3aGljaCBpcwpjb25jZXJuZWQgd2l0aCB0aGUgdGFza3Mgb2YgcHJhaXNlIGFuZCBkZW51bmNpYXRpb24sCm11c3Qgd2l0aG91dCBhIGRvdWJ0IGRlYWwgd2l0aCBxdWVzdGlvbnMgb2YgcmlnaHQKYW5kIHdyb25nLjwvdHJhbnNsYXRpb24+"
translation['12.3.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZSBvcmF0b3Igd2lsbCBhc3N1cmVkbHkgaGF2ZQptdWNoIHRvIHNheSBvbiBzdWNoIHRvcGljcyBhcyBqdXN0aWNlLCBmb3J0aXR1ZGUsCmFic3RpbmVuY2UsIHNlbGYtY29udHJvbCBhbmQgcGlldHkuIEJ1dCB0aGUgZ29vZAptYW4sIHdobyBoYXMgY29tZSB0byB0aGUga25vd2xlZGdlIG9mIHRoZXNlIHRoaW5ncwpub3QgYnkgbWVyZSBoZWFyc2F5LCBhcyB0aG91Z2ggdGhleSB3ZXJlIGp1c3Qgd29yZHMKYW5kIG5hbWVzIGZvciBoaXMgdG9uZ3VlIHRvIGVtcGxveSwgYnV0IGhhcyBncmFzcGVkCnRoZSBtZWFuaW5nIG9mIHZpcnR1ZSBhbmQgYWNxdWlyZWQgYSB0cnVlIGZlZWxpbmcgZm9yCml0LCB3aWxsIG5ldmVyIGJlIHBlcnBsZXhlZCB3aGVuIGhlIGhhcyB0byB0aGluayBvdXQKYSBwcm9ibGVtLCBidXQgd2lsbCBzcGVhayBvdXQgdHJ1bHkgd2hhdCBoZQprbm93cy48L3RyYW5zbGF0aW9uPg=="
translation['12.3.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz4gU2luY2UsIGhvd2V2ZXIsIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmdlbmVyYWw8L2hpPiBxdWVzdGlvbnMgYXJlIGFsd2F5cwptb3JlIGltcG9ydGFudCB0aGFuIHNwZWNpYWwgKGZvciB0aGUgcGFydGljdWxhciBpcwpjb250YWluZWQgaW4gdGhlIHVuaXZlcnNhbCwgd2hpbGUgdGhlIHVuaXZlcnNhbCBpcwpuZXZlciB0byBiZSByZWdhcmRlZCBhcyBzb21ldGhpbmcgc3VwZXJpbXBvc2VkIG9uCnRoZSBwYXJ0aWN1bGFyKSwgZXZlcnlvbmUgd2lsbCByZWFkaWx5IGFkbWl0IHRoYXQgdGhlCnN0dWRpZXMgb2Ygd2hpY2ggd2UgYXJlIHNwZWFraW5nIGFyZSBwcmUtZW1pbmVudGx5CmNvbmNlcm5lZCB3aXRoIGdlbmVyYWwgcXVlc3Rpb25zLjwvdHJhbnNsYXRpb24+"
translation['12.3.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz4gRnVydGhlciwgc2luY2UKdGhlcmUgYXJlIG51bWVyb3VzIHBvaW50cyB3aGljaCByZXF1aXJlIHRvIGJlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4zOTMiIC8+CgpkZXRlcm1pbmVkIGJ5IGFwcHJvcHJpYXRlIGFuZCBjb25jaXNlIGRlZmluaXRpb25zCihoZW5jZSB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGVmaW5pdGl2ZSBiYXNpczwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBJSUkgdmkuIDMxLjwvbm90ZT4gb2YgY2FzZXMpLCBpdCBpcyBzdXJlbHkKZGVzaXJhYmxlIHRoYXQgdGhlIG9yYXRvciBzaG91bGQgYmUgaW5zdHJ1Y3RlZCBpbgpzdWNoIHRoaW5ncyBieSB0aG9zZSB3aG8gaGF2ZSBkZXZvdGVkIHNwZWNpYWwKYXR0ZW50aW9uIHRvIHRoZSBzdWJqZWN0LiBBZ2FpbiwgZG9lcyBub3QgZXZlcnkKcXVlc3Rpb24gb2YgbGF3IHR1cm4gZWl0aGVyIG9uIHRoZSBwcmVjaXNlIG1lYW5pbmcKb2Ygd29yZHMsIHRoZSBkaXNjdXNzaW9uIG9mIGVxdWl0eSwgb3IgY29uamVjdHVyZSBhcwp0byB0aGUgaW50ZW50aW9u4oCUc3ViamVjdHMgd2hpY2ggaW4gcGFydCBlbmNyb2FjaCBvbgp0aGUgZG9tYWluIG9mIGRpYWxlY3RpYyBhbmQgaW4gcGFydCBvbiB0aGF0IG9mIGV0aGljcz8KPC90cmFuc2xhdGlvbj4="
translation['12.3.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5Db25zZXF1ZW50bHkgYWxsIG9yYXRvcnkgaW52b2x2ZXMgYSBuYXR1cmFsIGFkbWl4dHVyZQpvZiBhbGwgdGhlc2UgcGhpbG9zb3BoaWMgZWxlbWVudHPigJRhdCBsZWFzdCwgdGhhdCBpcyB0bwpzYXksIGFsbCBvcmF0b3J5IHRoYXQgaXMgd29ydGh5IG9mIHRoZSBuYW1lLiBGb3IKbWVyZSBnYXJydWxpdHkgdGhhdCBpcyBpZ25vcmFudCBvZiBhbGwgc3VjaCBsZWFybmluZwptdXN0IG5lZWRzIGdvIGFzdHJheSwgc2luY2UgaXRzIGd1aWRlcyBhcmUgZWl0aGVyCm5vbi1leGlzdGVudCBvciBmYWxzZS48cCBjbGFzcz0idHJhbnNsYXRpb24iPlBoeXNpY3M8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+aS5lLjwvaGk+IG5hdHVyYWwgcGhsaWxvc29waHkgaW4gdGhlIHdpZGVzdCBzZW5zZS48L25vdGU+IG9uIHRoZSBvdGhlciBoYW5kIGlzIGZhciByaWNoZXIgdGhhbiB0aGUKb3RoZXIgYnJhbmNoZXMgb2YgcGhpbG9zb3BoeSwgaWYgdmlld2VkIGZyb20gdGhlCnN0YW5kcG9pbnQgb2YgcHJvdmlkaW5nIGV4ZXJjaXNlIGluIHNwZWFraW5nLCBpbgpwcm9wb3J0aW9uIGFzIGEgbG9mdGllciBpbnNwaXJhdGlvbiBpcyByZXF1aXJlZCB0bwpzcGVhayBvZiB0aGluZ3MgZGl2aW5lIHRoYW4gb2YgdGhpbmdzIGh1bWFuOyBhbmQKZnVydGhlciBpdCBpbmNsdWRlcyB3aXRoaW4gaXRzIHNjb3BlIHRoZSB3aG9sZSBvZgpldGhpY3MsIHdoaWNoIGFzIHdlIGhhdmUgc2hvd248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+wqcgMTUuPC9ub3RlPiBhcmUgZXNzZW50aWFsIHRvIHRoZQp2ZXJ5IGV4aXN0ZW5jZSBvZiBvcmF0b3J5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yLCBpZiB0aGUgd29ybGQgaXMKZ292ZXJuZWQgYnkgcHJvdmlkZW5jZSwgaXQgd2lsbCBjZXJ0YWlubHkgYmUgdGhlCmR1dHkgb2YgYWxsIGdvb2QgbWVuIHRvIGJlYXIgdGhlaXIgcGFydCBpbiB0aGUKYWRtaW5pc3RyYXRpb24gb2YgdGhlIHN0YXRlLiBJZiB0aGUgb3JpZ2luIG9mIG91cgpzb3VscyBiZSBkaXZpbmUsIHdlIG11c3Qgd2luIG91ciB3YXkgdG93YXJkcyB2aXJ0dWUKYW5kIGFianVyZSB0aGUgc2VydmljZSBvZiB0aGUgbHVzdHMgb2Ygb3VyIGVhcnRobHkKYm9keS4gQXJlIG5vdCB0aGVzZSB0aGVtZXMgd2hpY2ggdGhlIG9yYXRvciB3aWxsCmZyZXF1ZW50bHkgYmUgY2FsbGVkIHVwb24gdG8gaGFuZGxlPyBBZ2FpbiB0aGVyZQphcmUgcXVlc3Rpb25zIGNvbmNlcm5lZCB3aXRoIGF1Z3VyaWVzIGFuZCBvcmFjbGVzCm9yIGFueSBvdGhlciByZWxpZ2lvdXMgdG9waWMgKGFsbCBvZiB0aGVtIHN1YmplY3RzCnRoYXQgaGF2ZSBvZnRlbiBnaXZlbiByaXNlIHRvIHRoZSBtb3N0IGltcG9ydGFudCBkZWJhdGVzIGluIHRoZSBzZW5hdGUpIG9uIHdoaWNoIHRoZSBvcmF0b3Igd2lsbCBoYXZlIHRvCgo8cGIgaWQ9InAuMzk1IiAvPgoKZGlzY291cnNlLCBpZiBoZSBpcyBhbHNvIHRvIGJlIHRoZSBzdGF0ZXNtYW4gd2UKd291bGQgaGF2ZSBoaW0gYmUuIEFuZCBmaW5hbGx5LCBob3cgY2FuIHdlIGNvbmNlaXZlIG9mIGFueSByZWFsIGVsb3F1ZW5jZSBhdCBhbGwgcHJvY2VlZGluZyBmcm9tCmEgbWFuIHdobyBpcyBpZ25vcmFudCBvZiBhbGwgdGhhdCBpcyBiZXN0IGluIHRoZQp3b3JsZD88bWlsZXN0b25lIG49IjIyIiB1bml0PSJzZWN0aW9uIiAvPiBJZiBvdXIgcmVhc29uIGRpZCBub3QgbWFrZSB0aGVzZSBmYWN0cwpvYnZpb3VzLCB3ZSBzaG91bGQgc3RpbGwgYmUgbGVkIGJ5IGhpc3RvcmljYWwgZXhhbXBsZXMKdG8gYmVsaWV2ZSB0aGVpciB0cnV0aC4gRm9yIFBlcmljbGVzLCB3aG9zZSBlbG9xdWVuY2UsIGRlc3BpdGUgdGhlIGZhY3QgdGhhdCBpdCBoYXMgbGVmdCBubyB2aXNpYmxlCnJlY29yZCBmb3IgcG9zdGVyaXR5LCB3YXMgbm9uZSB0aGUgbGVzcywgaWYgd2UgbWF5CmJlbGlldmUgdGhlIGhpc3RvcmlhbnMgYW5kIHRoYXQgZnJlZS1zcGVha2luZyB0cmliZSwKdGhlIG9sZCBjb21pYyBwb2V0cywgZW5kb3dlZCB3aXRoIGFsbW9zdCBpbmNyZWRpYmxlCmZvcmNlLCBpcyBrbm93biB0byBoYXZlIGJlZW4gYSBwdXBpbCBvZiB0aGUgcGh5c2ljaXN0CkFuYXhhZ29yYXMsIHdoaWxlIERlbW9zdGhlbmVzLCBncmVhdGVzdCBvZiBhbGwgdGhlCm9yYXRvcnMgb2YgR3JlZWNlLCBzYXQgYXQgdGhlIGZlZXQgb2YgUGxhdG8uPG1pbGVzdG9uZSBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz4gQXMgZm9yCkNpY2VybywgaGUgaGFzIG9mdGVuIHByb2NsYWltZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5Pci4gaWlpIDEyPC9oaT48L25vdGU+IHRoZSBmYWN0IHRoYXQgaGUKb3dlZCBsZXNzIHRvIHRoZSBzY2hvb2xzIG9mIHJoZXRvcmljIHRoYW4gdG8gdGhlCndhbGtzIG9mIEFjYWRlbWU6IG5vciB3b3VsZCBoZSBldmVyIGhhdmUgZGV2ZWxvcGVkCnN1Y2ggYW1hemluZyBmZXJ0aWxpdHkgb2YgdGFsZW50LCBoYWQgaGUgYm91bmRlZCBoaXMKZ2VuaXVzIGJ5IHRoZSBsaW1pdHMgb2YgdGhlIGZvcnVtIGFuZCBub3QgYnkgdGhlCmZyb250aWVycyBvZiBuYXR1cmUgaGVyc2VsZi48L3A+Cjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5pLmUuPC9oaT4gbmF0dXJhbCBwaGxpbG9zb3BoeSBpbiB0aGUgd2lkZXN0IHNlbnNlLjwvbm90ZT4gb24gdGhlIG90aGVyIGhhbmQgaXMgZmFyIHJpY2hlciB0aGFuIHRoZQpvdGhlciBicmFuY2hlcyBvZiBwaGlsb3NvcGh5LCBpZiB2aWV3ZWQgZnJvbSB0aGUKc3RhbmRwb2ludCBvZiBwcm92aWRpbmcgZXhlcmNpc2UgaW4gc3BlYWtpbmcsIGluCnByb3BvcnRpb24gYXMgYSBsb2Z0aWVyIGluc3BpcmF0aW9uIGlzIHJlcXVpcmVkIHRvCnNwZWFrIG9mIHRoaW5ncyBkaXZpbmUgdGhhbiBvZiB0aGluZ3MgaHVtYW47IGFuZApmdXJ0aGVyIGl0IGluY2x1ZGVzIHdpdGhpbiBpdHMgc2NvcGUgdGhlIHdob2xlIG9mCmV0aGljcywgd2hpY2ggYXMgd2UgaGF2ZSBzaG93bjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmkuZS48L2hpPiBuYXR1cmFsIHBobGlsb3NvcGh5IGluIHRoZSB3aWRlc3Qgc2Vuc2UuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPsKnIDE1Ljwvbm90ZT4gYXJlIGVzc2VudGlhbCB0byB0aGUKdmVyeSBleGlzdGVuY2Ugb2Ygb3JhdG9yeS48L3RyYW5zbGF0aW9uPg=="
translation['12.3.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yLCBpZiB0aGUgd29ybGQgaXMKZ292ZXJuZWQgYnkgcHJvdmlkZW5jZSwgaXQgd2lsbCBjZXJ0YWlubHkgYmUgdGhlCmR1dHkgb2YgYWxsIGdvb2QgbWVuIHRvIGJlYXIgdGhlaXIgcGFydCBpbiB0aGUKYWRtaW5pc3RyYXRpb24gb2YgdGhlIHN0YXRlLiBJZiB0aGUgb3JpZ2luIG9mIG91cgpzb3VscyBiZSBkaXZpbmUsIHdlIG11c3Qgd2luIG91ciB3YXkgdG93YXJkcyB2aXJ0dWUKYW5kIGFianVyZSB0aGUgc2VydmljZSBvZiB0aGUgbHVzdHMgb2Ygb3VyIGVhcnRobHkKYm9keS4gQXJlIG5vdCB0aGVzZSB0aGVtZXMgd2hpY2ggdGhlIG9yYXRvciB3aWxsCmZyZXF1ZW50bHkgYmUgY2FsbGVkIHVwb24gdG8gaGFuZGxlPyBBZ2FpbiB0aGVyZQphcmUgcXVlc3Rpb25zIGNvbmNlcm5lZCB3aXRoIGF1Z3VyaWVzIGFuZCBvcmFjbGVzCm9yIGFueSBvdGhlciByZWxpZ2lvdXMgdG9waWMgKGFsbCBvZiB0aGVtIHN1YmplY3RzCnRoYXQgaGF2ZSBvZnRlbiBnaXZlbiByaXNlIHRvIHRoZSBtb3N0IGltcG9ydGFudCBkZWJhdGVzIGluIHRoZSBzZW5hdGUpIG9uIHdoaWNoIHRoZSBvcmF0b3Igd2lsbCBoYXZlIHRvCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4zOTUiIC8+CgpkaXNjb3Vyc2UsIGlmIGhlIGlzIGFsc28gdG8gYmUgdGhlIHN0YXRlc21hbiB3ZQp3b3VsZCBoYXZlIGhpbSBiZS4gQW5kIGZpbmFsbHksIGhvdyBjYW4gd2UgY29uY2VpdmUgb2YgYW55IHJlYWwgZWxvcXVlbmNlIGF0IGFsbCBwcm9jZWVkaW5nIGZyb20KYSBtYW4gd2hvIGlzIGlnbm9yYW50IG9mIGFsbCB0aGF0IGlzIGJlc3QgaW4gdGhlCndvcmxkPzwvdHJhbnNsYXRpb24+"
translation['12.3.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gSWYgb3VyIHJlYXNvbiBkaWQgbm90IG1ha2UgdGhlc2UgZmFjdHMKb2J2aW91cywgd2Ugc2hvdWxkIHN0aWxsIGJlIGxlZCBieSBoaXN0b3JpY2FsIGV4YW1wbGVzCnRvIGJlbGlldmUgdGhlaXIgdHJ1dGguIEZvciBQZXJpY2xlcywgd2hvc2UgZWxvcXVlbmNlLCBkZXNwaXRlIHRoZSBmYWN0IHRoYXQgaXQgaGFzIGxlZnQgbm8gdmlzaWJsZQpyZWNvcmQgZm9yIHBvc3Rlcml0eSwgd2FzIG5vbmUgdGhlIGxlc3MsIGlmIHdlIG1heQpiZWxpZXZlIHRoZSBoaXN0b3JpYW5zIGFuZCB0aGF0IGZyZWUtc3BlYWtpbmcgdHJpYmUsCnRoZSBvbGQgY29taWMgcG9ldHMsIGVuZG93ZWQgd2l0aCBhbG1vc3QgaW5jcmVkaWJsZQpmb3JjZSwgaXMga25vd24gdG8gaGF2ZSBiZWVuIGEgcHVwaWwgb2YgdGhlIHBoeXNpY2lzdApBbmF4YWdvcmFzLCB3aGlsZSBEZW1vc3RoZW5lcywgZ3JlYXRlc3Qgb2YgYWxsIHRoZQpvcmF0b3JzIG9mIEdyZWVjZSwgc2F0IGF0IHRoZSBmZWV0IG9mIFBsYXRvLjwvdHJhbnNsYXRpb24+"
translation['12.3.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz4gQXMgZm9yCkNpY2VybywgaGUgaGFzIG9mdGVuIHByb2NsYWltZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T3IuIGlpaSAxMjwvaGk+PC9ub3RlPiB0aGUgZmFjdCB0aGF0IGhlCm93ZWQgbGVzcyB0byB0aGUgc2Nob29scyBvZiByaGV0b3JpYyB0aGFuIHRvIHRoZQp3YWxrcyBvZiBBY2FkZW1lOiBub3Igd291bGQgaGUgZXZlciBoYXZlIGRldmVsb3BlZApzdWNoIGFtYXppbmcgZmVydGlsaXR5IG9mIHRhbGVudCwgaGFkIGhlIGJvdW5kZWQgaGlzCmdlbml1cyBieSB0aGUgbGltaXRzIG9mIHRoZSBmb3J1bSBhbmQgbm90IGJ5IHRoZQpmcm9udGllcnMgb2YgbmF0dXJlIGhlcnNlbGYuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T3IuIGlpaSAxMjwvaGk+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgdGhpcyBsZWFkcyBtZSB0byBhbm90aGVyIHF1ZXN0aW9uIGFzIHRvIHdoaWNoCnNjaG9vbCBvZiBwaGlsb3NvcGh5IGlzIGxpa2UgdG8gcHJvdmUgb2YgbW9zdCBzZXJ2aWNlCnRvIG9yYXRvcnksIGFsdGhvdWdoIHRoZXJlIGFyZSBvbmx5IGEgZmV3IHRoYXQgY2FuIGJlCnNhaWQgdG8gY29udGVuZCBmb3IgdGhpcyBob25vdXIuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI0IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgaW4gdGhlIGZpcnN0CnBsYWNlIEVwaWN1cnVzIGJhbmlzaGVzIHVzIGZyb20gaGlzIHByZXNlbmNlIHdpdGhvdXQKbW9yZSBhZG8sIHNpbmNlIGhlIGJpZHMgYWxsIGhpcyBmb2xsb3dlcnMgdG8gZmx5IGZyb20KbGVhcm5pbmcgaW4gdGhlIHN3aWZ0ZXN0IHNoaXAgdGhhdCB0aGV5IGNhbiBmaW5kLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGZvcmVpZ24gbGFuZz0iZ3JlZWsiPnBhaWRlaS9hbiBwYT1zYW4gYSlrYS90aW9uIGEpcmEvbWVub3MgZmV1PWdlLjwvZm9yZWlnbj48L25vdGU+Ck5vciB3b3VsZCBBcmlzdGlwcHVzLCB3aG8gcmVnYXJkcyB0aGUgaGlnaGVzdCBnb29kCmFzIGNvbnNpc3RpbmcgaW4gcGh5c2ljYWwgcGxlYXN1cmUsIGJlIGxpa2VseSB0byBleGhvcnQKdXMgdG8gdGhlIHRvaWxzIGVudGFpbGVkIGJ5IG91ciBzdHVkeS4gQW5kIHdoYXQKcGFydCBjYW4gUHlycmhvIGhhdmUgaW4gdGhlIHdvcmsgdGhhdCBpcyBiZWZvcmUgdXM/CkZvciBoZSB3aWxsIGhhdmUgZG91YnRzIGFzIHRvIHdoZXRoZXIgdGhlcmUgZXhpc3QKanVkZ2VzIHRvIGFkZHJlc3MsIGFjY3VzZWQgdG8gZGVmZW5kLCBvciBhIHNlbmF0ZQp3aGVyZSBoZSBjYW4gYmUgY2FsbGVkIHVwb24gdG8gc3BlYWsgaGlzIG9waW5pb24uCgo8cGIgaWQ9InAuMzk3IiAvPgoKPG1pbGVzdG9uZSBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5Tb21lIGF1dGhvcml0aWVzIGhvbGQgdGhhdCB0aGUgQWNhZGVteSB3aWxsIGJlIHRoZQptb3N0IHVzZWZ1bCBzY2hvb2wsIG9uIHRoZSBncm91bmQgdGhhdCBpdHMgaGFiaXQgb2YKZGlzcHV0aW5nIG9uIGJvdGggc2lkZXMgb2YgYSBxdWVzdGlvbiBhcHByb2FjaGVzCm1vc3QgbmVhcmx5IHRvIHRoZSBhY3R1YWwgcHJhY3RpY2Ugb2YgdGhlIGNvdXJ0cy4KQW5kIGJ5IHdheSBvZiBwcm9vZiB0aGV5IGFkZCB0aGUgZmFjdCB0aGF0IHRoaXMKc2Nob29sIGhhcyBwcm9kdWNlZCBzcGVha2VycyBoaWdobHkgcmVub3duZWQgZm9yCnRoZWlyIGVsb3F1ZW5jZS4gVGhlIFBlcmlwYXRldGljcyBhbHNvIG1ha2UgaXQgdGhlaXIKYm9hc3QgdGhhdCB0aGV5IGhhdmUgYSBmb3JtIG9mIHN0dWR5IHdoaWNoIGlzIG5lYXIKYWtpbiB0byBvcmF0b3J5LiBGb3IgaXQgd2FzIHdpdGggdGhlbSBpbiB0aGUgbWFpbgp0aGF0IG9yaWdpbmF0ZWQgdGhlIHByYWN0aWNlIG9mIGRlY2xhaW1pbmcgb24gZ2VuZXJhbApxdWVzdGlvbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlNlZSBJSS4gaS4gOS4gSUlJLiB2LiA1LiBhbmQgMTAuPC9ub3RlPiBieSB3YXkgb2YgZXhlcmNpc2UuIFRoZSBTdG9pY3MsIHRob3VnaApkcml2ZW4gdG8gYWRtaXQgdGhhdCwgZ2VuZXJhbGx5IHNwZWFraW5nLCB0aGVpciB0ZWFjaGVycwpoYXZlIGJlZW4gZGVmaWNpZW50IGJvdGggaW4gZnVsbG5lc3MgYW5kIGNoYXJtIG9mCmVsb3F1ZW5jZSwgc3RpbGwgY29udGVuZCB0aGF0IG5vIG1lbiBjYW4gcHJvdmUgbW9yZQphY3V0ZWx5IG9yIGRyYXcgY29uY2x1c2lvbnMgd2l0aCBncmVhdGVyIHN1YnRsZXR5CnRoYW4gdGhlbXNlbHZlcy48bWlsZXN0b25lIG49IjI2IiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgYWxsIHRoZXNlIGFyZ3VtZW50cyB0YWtlCnBsYWNlIHdpdGhpbiB0aGVpciBvd24gY2lyY2xlLCBmb3IsIGFzIHRob3VnaCB0aGV5CndlcmUgdGllZCBieSBzb21lIHNvbGVtbiBvYXRoIG9yIGhlbGQgZmFzdCBpbiB0aGUKYm9uZHMgb2Ygc29tZSBzdXBlcnN0aXRpb3VzIGJlbGllZiwgdGhleSBjb25zaWRlciB0aGF0Cml0IGlzIGEgY3JpbWUgdG8gYWJhbmRvbiBhIGNvbnZpY3Rpb24gb25jZSBmb3JtZWQuCk9uIHRoZSBvdGhlciBoYW5kLCB0aGVyZSBpcyBubyBuZWVkIGZvciBhbiBvcmF0b3IgdG8Kc3dlYXIgYWxsZWdpYW5jZSB0byBhbnkgb25lIHBoaWxvc29waGljIGNvZGUuPG1pbGVzdG9uZSBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCmxpZSBoYXMgYSBncmVhdGVyIGFuZCBub2JsZXIgYWltLCB0byB3aGljaCBoZSBkaXJlY3RzCmFsbCBoaXMgZWZmb3J0cyB3aXRoIGFzIG11Y2ggemVhbCBhcyBpZiBoZSB3ZXJlIGEKY2FuZGlkYXRlIGZvciBvZmZpY2UsIHNpbmNlIGhlIGlzIHRvIGJlIG1hZGUgcGVyZmVjdApub3Qgb25seSBpbiB0aGUgZ2xvcnkgb2YgYSB2aXJ0dW91cyBsaWZlLCBidXQgaW4gdGhhdCBvZgplbG9xdWVuY2UgYXMgd2VsbC4gSGUgd2lsbCBjb25zZXF1ZW50bHkgc2VsZWN0IGFzCmhpcyBtb2RlbHMgb2YgZWxvcXVlbmNlIGFsbCB0aGUgZ3JlYXRlc3QgbWFzdGVycyBvZgpvcmF0b3J5LCBhbmQgd2lsbCBjaG9vc2UgdGhlIG5vYmxlc3QgcHJlY2VwdHMgYW5kCnRoZSBtb3N0IGRpcmVjdCByb2FkIHRvIHZpcnR1ZSBhcyB0aGUgbWVhbnMgZm9yCnRoZSBmb3JtYXRpb24gb2YgYW4gdXByaWdodCBjaGFyYWN0ZXIuIEhlIHdpbGwKbmVnbGVjdCBubyBmb3JtIG9mIGV4ZXJjaXNlLCBidXQgd2lsbCBkZXZvdGUgc3BlY2lhbAphdHRlbnRpb24gdG8gdGhvc2Ugd2hpY2ggYXJlIG9mIHRoZSBoaWdoZXN0IGFuZApmYWlyZXN0IG5hdHVyZS48bWlsZXN0b25lIG49IjI4IiB1bml0PSJzZWN0aW9uIiAvPiBGb3Igd2hhdCBzdWJqZWN0IGNhbiBiZSBmb3VuZCBtb3JlCgo8cGIgaWQ9InAuMzk5IiAvPgoKZnVsbHkgYWRhcHRlZCB0byBhIHJpY2ggYW5kIHdlaWdodHkgZWxvcXVlbmNlIHRoYW4KdGhlIHRvcGljcyBvZiB2aXJ0dWUsIHBvbGl0aWNzLCBwcm92aWRlbmNlLCB0aGUgb3JpZ2luCm9mIHRoZSBzb3VsIGFuZCBmcmllbmRzaGlwPyBUaGUgdGhlbWVzIHdoaWNoIHRlbmQKdG8gZWxldmF0ZSBtaW5kIGFuZCBsYW5ndWFnZSBhbGlrZSBhcmUgcXVlc3Rpb25zCnN1Y2ggYXMgd2hhdCB0aGluZ3MgYXJlIHRydWx5IGdvb2QsIHdoYXQgbWVhbnMgdGhlcmUKYXJlIG9mIGFzc3VhZ2luZyBmZWFyLCByZXN0cmFpbmluZyB0aGUgcGFzc2lvbnMgYW5kCmxpZnRpbmcgdXMgYW5kIHRoZSBzb3VsIHRoYXQgY2FtZSBmcm9tIGhlYXZlbiBjbGVhcgpvZiB0aGUgZGVsdXNpb25zIG9mIHRoZSBjb21tb24gaGVyZC48L3A+CjwvdHJhbnNsYXRpb24+"
translation['12.3.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGluIHRoZSBmaXJzdApwbGFjZSBFcGljdXJ1cyBiYW5pc2hlcyB1cyBmcm9tIGhpcyBwcmVzZW5jZSB3aXRob3V0Cm1vcmUgYWRvLCBzaW5jZSBoZSBiaWRzIGFsbCBoaXMgZm9sbG93ZXJzIHRvIGZseSBmcm9tCmxlYXJuaW5nIGluIHRoZSBzd2lmdGVzdCBzaGlwIHRoYXQgdGhleSBjYW4gZmluZC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+cGFpZGVpL2FuIHBhPXNhbiBhKWthL3Rpb24gYSlyYS9tZW5vcyBmZXU9Z2UuPC9mb3JlaWduPjwvbm90ZT4KTm9yIHdvdWxkIEFyaXN0aXBwdXMsIHdobyByZWdhcmRzIHRoZSBoaWdoZXN0IGdvb2QKYXMgY29uc2lzdGluZyBpbiBwaHlzaWNhbCBwbGVhc3VyZSwgYmUgbGlrZWx5IHRvIGV4aG9ydAp1cyB0byB0aGUgdG9pbHMgZW50YWlsZWQgYnkgb3VyIHN0dWR5LiBBbmQgd2hhdApwYXJ0IGNhbiBQeXJyaG8gaGF2ZSBpbiB0aGUgd29yayB0aGF0IGlzIGJlZm9yZSB1cz8KRm9yIGhlIHdpbGwgaGF2ZSBkb3VidHMgYXMgdG8gd2hldGhlciB0aGVyZSBleGlzdApqdWRnZXMgdG8gYWRkcmVzcywgYWNjdXNlZCB0byBkZWZlbmQsIG9yIGEgc2VuYXRlCndoZXJlIGhlIGNhbiBiZSBjYWxsZWQgdXBvbiB0byBzcGVhayBoaXMgb3Bpbmlvbi4KCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPnBhaWRlaS9hbiBwYT1zYW4gYSlrYS90aW9uIGEpcmEvbWVub3MgZmV1PWdlLjwvZm9yZWlnbj48cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC4zOTciIC8+Cgo8L3RyYW5zbGF0aW9uPg=="
translation['12.3.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5Tb21lIGF1dGhvcml0aWVzIGhvbGQgdGhhdCB0aGUgQWNhZGVteSB3aWxsIGJlIHRoZQptb3N0IHVzZWZ1bCBzY2hvb2wsIG9uIHRoZSBncm91bmQgdGhhdCBpdHMgaGFiaXQgb2YKZGlzcHV0aW5nIG9uIGJvdGggc2lkZXMgb2YgYSBxdWVzdGlvbiBhcHByb2FjaGVzCm1vc3QgbmVhcmx5IHRvIHRoZSBhY3R1YWwgcHJhY3RpY2Ugb2YgdGhlIGNvdXJ0cy4KQW5kIGJ5IHdheSBvZiBwcm9vZiB0aGV5IGFkZCB0aGUgZmFjdCB0aGF0IHRoaXMKc2Nob29sIGhhcyBwcm9kdWNlZCBzcGVha2VycyBoaWdobHkgcmVub3duZWQgZm9yCnRoZWlyIGVsb3F1ZW5jZS4gVGhlIFBlcmlwYXRldGljcyBhbHNvIG1ha2UgaXQgdGhlaXIKYm9hc3QgdGhhdCB0aGV5IGhhdmUgYSBmb3JtIG9mIHN0dWR5IHdoaWNoIGlzIG5lYXIKYWtpbiB0byBvcmF0b3J5LiBGb3IgaXQgd2FzIHdpdGggdGhlbSBpbiB0aGUgbWFpbgp0aGF0IG9yaWdpbmF0ZWQgdGhlIHByYWN0aWNlIG9mIGRlY2xhaW1pbmcgb24gZ2VuZXJhbApxdWVzdGlvbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIElJLiBpLiA5LiBJSUkuIHYuIDUuIGFuZCAxMC48L25vdGU+IGJ5IHdheSBvZiBleGVyY2lzZS4gVGhlIFN0b2ljcywgdGhvdWdoCmRyaXZlbiB0byBhZG1pdCB0aGF0LCBnZW5lcmFsbHkgc3BlYWtpbmcsIHRoZWlyIHRlYWNoZXJzCmhhdmUgYmVlbiBkZWZpY2llbnQgYm90aCBpbiBmdWxsbmVzcyBhbmQgY2hhcm0gb2YKZWxvcXVlbmNlLCBzdGlsbCBjb250ZW5kIHRoYXQgbm8gbWVuIGNhbiBwcm92ZSBtb3JlCmFjdXRlbHkgb3IgZHJhdyBjb25jbHVzaW9ucyB3aXRoIGdyZWF0ZXIgc3VidGxldHkKdGhhbiB0aGVtc2VsdmVzLjwvdHJhbnNsYXRpb24+"
translation['12.3.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGFsbCB0aGVzZSBhcmd1bWVudHMgdGFrZQpwbGFjZSB3aXRoaW4gdGhlaXIgb3duIGNpcmNsZSwgZm9yLCBhcyB0aG91Z2ggdGhleQp3ZXJlIHRpZWQgYnkgc29tZSBzb2xlbW4gb2F0aCBvciBoZWxkIGZhc3QgaW4gdGhlCmJvbmRzIG9mIHNvbWUgc3VwZXJzdGl0aW91cyBiZWxpZWYsIHRoZXkgY29uc2lkZXIgdGhhdAppdCBpcyBhIGNyaW1lIHRvIGFiYW5kb24gYSBjb252aWN0aW9uIG9uY2UgZm9ybWVkLgpPbiB0aGUgb3RoZXIgaGFuZCwgdGhlcmUgaXMgbm8gbmVlZCBmb3IgYW4gb3JhdG9yIHRvCnN3ZWFyIGFsbGVnaWFuY2UgdG8gYW55IG9uZSBwaGlsb3NvcGhpYyBjb2RlLjwvdHJhbnNsYXRpb24+"
translation['12.3.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCmxpZSBoYXMgYSBncmVhdGVyIGFuZCBub2JsZXIgYWltLCB0byB3aGljaCBoZSBkaXJlY3RzCmFsbCBoaXMgZWZmb3J0cyB3aXRoIGFzIG11Y2ggemVhbCBhcyBpZiBoZSB3ZXJlIGEKY2FuZGlkYXRlIGZvciBvZmZpY2UsIHNpbmNlIGhlIGlzIHRvIGJlIG1hZGUgcGVyZmVjdApub3Qgb25seSBpbiB0aGUgZ2xvcnkgb2YgYSB2aXJ0dW91cyBsaWZlLCBidXQgaW4gdGhhdCBvZgplbG9xdWVuY2UgYXMgd2VsbC4gSGUgd2lsbCBjb25zZXF1ZW50bHkgc2VsZWN0IGFzCmhpcyBtb2RlbHMgb2YgZWxvcXVlbmNlIGFsbCB0aGUgZ3JlYXRlc3QgbWFzdGVycyBvZgpvcmF0b3J5LCBhbmQgd2lsbCBjaG9vc2UgdGhlIG5vYmxlc3QgcHJlY2VwdHMgYW5kCnRoZSBtb3N0IGRpcmVjdCByb2FkIHRvIHZpcnR1ZSBhcyB0aGUgbWVhbnMgZm9yCnRoZSBmb3JtYXRpb24gb2YgYW4gdXByaWdodCBjaGFyYWN0ZXIuIEhlIHdpbGwKbmVnbGVjdCBubyBmb3JtIG9mIGV4ZXJjaXNlLCBidXQgd2lsbCBkZXZvdGUgc3BlY2lhbAphdHRlbnRpb24gdG8gdGhvc2Ugd2hpY2ggYXJlIG9mIHRoZSBoaWdoZXN0IGFuZApmYWlyZXN0IG5hdHVyZS48L3RyYW5zbGF0aW9uPg=="
translation['12.3.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHdoYXQgc3ViamVjdCBjYW4gYmUgZm91bmQgbW9yZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuMzk5IiAvPgoKZnVsbHkgYWRhcHRlZCB0byBhIHJpY2ggYW5kIHdlaWdodHkgZWxvcXVlbmNlIHRoYW4KdGhlIHRvcGljcyBvZiB2aXJ0dWUsIHBvbGl0aWNzLCBwcm92aWRlbmNlLCB0aGUgb3JpZ2luCm9mIHRoZSBzb3VsIGFuZCBmcmllbmRzaGlwPyBUaGUgdGhlbWVzIHdoaWNoIHRlbmQKdG8gZWxldmF0ZSBtaW5kIGFuZCBsYW5ndWFnZSBhbGlrZSBhcmUgcXVlc3Rpb25zCnN1Y2ggYXMgd2hhdCB0aGluZ3MgYXJlIHRydWx5IGdvb2QsIHdoYXQgbWVhbnMgdGhlcmUKYXJlIG9mIGFzc3VhZ2luZyBmZWFyLCByZXN0cmFpbmluZyB0aGUgcGFzc2lvbnMgYW5kCmxpZnRpbmcgdXMgYW5kIHRoZSBzb3VsIHRoYXQgY2FtZSBmcm9tIGhlYXZlbiBjbGVhcgpvZiB0aGUgZGVsdXNpb25zIG9mIHRoZSBjb21tb24gaGVyZC48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaXQgaXMgZGVzaXJhYmxlIHRoYXQgd2Ugc2hvdWxkIG5vdCByZXN0cmljdCBvdXIKc3R1ZHkgdG8gdGhlIHByZWNlcHRzIG9mIHBoaWxvc29waHkgYWxvbmUuIEl0IGlzIHN0aWxsCm1vcmUgaW1wb3J0YW50IHRoYXQgd2Ugc2hvdWxkIGtub3cgYW5kIHBvbmRlcgpjb250aW51YWxseSBhbGwgdGhlIG5vYmxlc3Qgc2F5aW5ncyBhbmQgZGVlZHMgdGhhdCBoYXZlCmJlZW4gaGFuZGVkIGRvd24gdG8gdXMgZnJvbSBhbmNpZW50IHRpbWVzLiBBbmQKYXNzdXJlZGx5IHdlIHNoYWxsIG5vd2hlcmUgZmluZCBhIGxhcmdlciBvciBtb3JlCnJlbWFya2FibGUgc3RvcmUgb2YgdGhlc2UgdGhhbiBpbiB0aGUgcmVjb3JkcyBvZiBvdXIKb3duIGNvdW50cnkuPG1pbGVzdG9uZSBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz4gV2hvIHdpbGwgdGVhY2ggY291cmFnZSwganVzdGljZSwKbG95YWx0eSwgc2VsZi1jb250cm9sLCBzaW1wbGljaXR5LCBhbmQgY29udGVtcHQgb2YKZ3JpZWYgYW5kIHBhaW4gYmV0dGVyIHRoYW4gbWVuIGxpa2UgRmFicmljaXVzLCBDdXJpdXMsClJlZ3VsdXMsIERlY2l1cywgTXVjaXVzIGFuZCBjb3VudGxlc3Mgb3RoZXJzPyBGb3IKaWYgdGhlIEdyZWVrcyBiZWFyIGF3YXkgdGhlIHBhbG0gZm9yIG1vcmFsIHByZWNlcHRzLApSb21lIGNhbiBwcm9kdWNlIG1vcmUgc3RyaWtpbmcgZXhhbXBsZXMgb2YgbW9yYWwKcGVyZm9ybWFuY2UsIHdoaWNoIGlzIGEgZmFyIGdyZWF0ZXIgdGhpbmcuPG1pbGVzdG9uZSBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHRoZQptYW4gd2hvIGRvZXMgbm90IGJlbGlldmUgdGhhdCBpdCBpcyBlbm91Z2ggdG8gZml4CmhpcyBleWVzIG1lcmVseSBvbiBoaXMgb3duIGFnZSBhbmQgaGlzIG93biB0cmFuc2l0b3J5CmxpZmUsIGJ1dCByZWdhcmRzIHRoZSBzcGFjZSBhbGxvdHRlZCBmb3IgYW4gaG9ub3VyYWJsZQpsaWZlIGFuZCB0aGUgY291cnNlIGluIHdoaWNoIGdsb3J5J3MgcmFjZSBpcyBydW4gYXMKY29uZGl0aW9uZWQgc29sZWx5IGJ5IHRoZSBtZW1vcnkgb2YgcG9zdGVyaXR5LCB3aWxsCm5vdCByZXN0IGNvbnRlbnQgd2l0aCBhIG1lcmUga25vd2xlZGdlIG9mIHRoZQpldmVudHMgb2YgaGlzdG9yeS4gTm8sIGl0IGlzIGZyb20gdGhlIHRob3VnaHQgb2YKcG9zdGVyaXR5IHRoYXQgaGUgbXVzdCBpbnNwaXJlIGhpcyBzb3VsIHdpdGgganVzdGljZQphbmQgZGVyaXZlIHRoYXQgZnJlZWRvbSBvZiBzcGlyaXQgd2hpY2ggaXQgaXMgaGlzIGR1dHkKdG8gZGlzcGxheSB3aGVuIGhlIHBsZWFkcyBpbiB0aGUgY291cnRzIG9yIGdpdmVzCmNvdW5zZWwgaW4gdGhlIHNlbmF0ZS4gTm8gbWFuIHdpbGwgZXZlciBiZSB0aGUKY29uc3VtbWF0ZSBvcmF0b3Igb2Ygd2hvbSB3ZSBhcmUgaW4gcXVlc3QgdW5sZXNzCgo8cGIgaWQ9InAuNDAxIiAvPgoKaGUgaGFzIGJvdGggdGhlIGtub3dsZWRnZSBhbmQgdGhlIGNvdXJhZ2UgdG8gc3BlYWsKaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBwcm9tcHRpbmdzIG9mIGhvbm91ci48L3A+Cgo8L3RyYW5zbGF0aW9uPg=="
translation['12.3.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaXQgaXMgZGVzaXJhYmxlIHRoYXQgd2Ugc2hvdWxkIG5vdCByZXN0cmljdCBvdXIKc3R1ZHkgdG8gdGhlIHByZWNlcHRzIG9mIHBoaWxvc29waHkgYWxvbmUuIEl0IGlzIHN0aWxsCm1vcmUgaW1wb3J0YW50IHRoYXQgd2Ugc2hvdWxkIGtub3cgYW5kIHBvbmRlcgpjb250aW51YWxseSBhbGwgdGhlIG5vYmxlc3Qgc2F5aW5ncyBhbmQgZGVlZHMgdGhhdCBoYXZlCmJlZW4gaGFuZGVkIGRvd24gdG8gdXMgZnJvbSBhbmNpZW50IHRpbWVzLiBBbmQKYXNzdXJlZGx5IHdlIHNoYWxsIG5vd2hlcmUgZmluZCBhIGxhcmdlciBvciBtb3JlCnJlbWFya2FibGUgc3RvcmUgb2YgdGhlc2UgdGhhbiBpbiB0aGUgcmVjb3JkcyBvZiBvdXIKb3duIGNvdW50cnkuPC90cmFuc2xhdGlvbj4="
translation['12.3.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz4gV2hvIHdpbGwgdGVhY2ggY291cmFnZSwganVzdGljZSwKbG95YWx0eSwgc2VsZi1jb250cm9sLCBzaW1wbGljaXR5LCBhbmQgY29udGVtcHQgb2YKZ3JpZWYgYW5kIHBhaW4gYmV0dGVyIHRoYW4gbWVuIGxpa2UgRmFicmljaXVzLCBDdXJpdXMsClJlZ3VsdXMsIERlY2l1cywgTXVjaXVzIGFuZCBjb3VudGxlc3Mgb3RoZXJzPyBGb3IKaWYgdGhlIEdyZWVrcyBiZWFyIGF3YXkgdGhlIHBhbG0gZm9yIG1vcmFsIHByZWNlcHRzLApSb21lIGNhbiBwcm9kdWNlIG1vcmUgc3RyaWtpbmcgZXhhbXBsZXMgb2YgbW9yYWwKcGVyZm9ybWFuY2UsIHdoaWNoIGlzIGEgZmFyIGdyZWF0ZXIgdGhpbmcuPC90cmFuc2xhdGlvbj4="
translation['12.3.31'] = ""
translation['12.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgaGUgd2lsbCBiZSBhIG1lcmUgdHJhbnNtaXR0ZXIgb2YgdGhlCmluc3RydWN0aW9ucyB0aGF0IG90aGVycyBoYXZlIGdpdmVuIGhpbSwgaXQgd2lsbCBiZSBvbgp0aGUgYXV0aG9yaXR5IG9mIG90aGVycyB0aGF0IGhlIHByb3BvdW5kcyB3aGF0IGhlCmFza3MgdGhlIGp1ZGdlIHRvIGJlbGlldmUsIGFuZCBoZSB3aG9zZSBkdXR5IGl0IGlzIHRvCnN1Y2NvdXIgdGhlIGxpdGlnYW50IHdpbGwgaGltc2VsZiBiZSBpbiBuZWVkIG9mIHN1Y2NvdXIuCkl0IGlzIHRydWUgdGhhdCBhdCB0aW1lcyB0aGlzIG1heSBiZSBlZmZlY3RlZCB3aXRoIGJ1dApsaXR0bGUgaW5jb252ZW5pZW5jZSwgaWYgd2hhdCBoZSBhZHZhbmNlcyBmb3IgdGhlCmVkaWZpY2F0aW9uIG9mIHRoZSBqdWRnZSBoYXMgYmVlbiB0YXVnaHQgaGltIGFuZApjb21wb3NlZCBpbiB0aGUgc2VjbHVzaW9uIG9mIGhpcyBzdHVkeSBhbmQgbGVhcm50IGJ5CmhlYXJ0IHRoZXJlIGxpa2Ugb3RoZXIgZWxlbWVudHMgb2YgdGhlIGNhc2UuIEJ1dAp3aGF0IHdpbGwgaGUgZG8sIHdoZW4gaGUgaXMgY29uZnJvbnRlZCBieSB1bmV4cGVjdGVkCnByb2JsZW1zIHN1Y2ggYXMgZnJlcXVlbnRseSBhcmlzZSBpbiB0aGUgYWN0dWFsCmNvdXJzZSBvZiBwbGVhZGluZz8gV2lsbCBoZSBub3QgZGlzZ3JhY2UgaGltc2VsZiBieSBsb29raW5nIHJvdW5kIGFuZCBhc2tpbmcgdGhlIGp1bmlvciBjb3Vuc2VsCndobyBzaXQgb24gdGhlIGJlbmNoZXMgYmVoaW5kIGhpbSBmb3IgYWR2aWNlPzwvdHJhbnNsYXRpb24+"
translation['12.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBDYW4KbGllIGhvcGUgdG8gZ2V0IGEgdGhvcm91Z2ggZ3Jhc3Agb2Ygc3VjaCBpbmZvcm1hdGlvbgphdCB0aGUgdmVyeSBtb21lbnQgd2hlbiBoZSBpcyByZXF1aXJlZCB0byBwcm9kdWNlCml0IGluIGhpcyBzcGVlY2g/IENhbiBoZSBtYWtlIGhpcyBhc3NlcnRpb25zIHdpdGgKY29uZmlkZW5jZSBvciBzcGVhayB3aXRoIG5hdGl2ZSBzaW1wbGljaXR5IGFzIHRob3VnaApoaXMgYXJndW1lbnRzIHdlcmUgaGlzIG93bj8gR3JhbnQgdGhhdCBoZSBtYXkgZG8Kc28gaW4gaGlzIGFjdHVhbCBzcGVlY2guIEJ1dCB3aGF0IHdpbGwgaGUgZG8gaW4gYQpkZWJhdGUsIHdoZW4gaGUgaGFzIGNvbnRpbnVhbGx5IHRvIG1lZXQgZnJlc2ggcG9pbnRzCnJhaXNlZCBieSBoaXMgb3Bwb25lbnQgYW5kIGlzIGdpdmVuIG5vIHRpbWUgdG8gbGVhcm4KCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQwMyIgLz4KCnVwIGhpcyBjYXNlPyBXaGF0IHdpbGwgZG8sIGlmIGhlIGhhcyBubyBsZWdhbApleHBlcnQgdG8gYWR2aXNlIGhpbSBvciBpZiBoaXMgcHJvbXB0ZXIgdGhyb3VnaAppbnN1ZmZpY2llbnQga25vd2xlZGdlIG9mIHRoZSBzdWJqZWN0IHByb3ZpZGVzIGhpbQp3aXRoIGluZm9ybWF0aW9uIHRoYXQgaXMgZmFsc2U/IEl0IGlzIHRoZSBtb3N0IHNlcmlvdXMKZHJhd2JhY2sgb2Ygc3VjaCBpZ25vcmFuY2UsIHRoYXQgaGUgd2lsbCBhbHdheXMKYmVsaWV2ZSB0aGF0IGhpcyBhZHZpc2VyIGtub3dzIHdoYXQgaGUgaXMgdGFsa2luZwphYm91dC48L3RyYW5zbGF0aW9uPg=="
translation['12.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBJIGFtIG5vdCBpZ25vcmFudCBvZiB0aGUgZ2VuZXJhbGx5IHByZXZhaWxpbmcgY3VzdG9tLCBub3IgaGF2ZSBJIGZvcmdvdHRlbiB0aG9zZSB3aG8gc2l0IGJ5Cm91ciBzdG9yZS1jaGVzdHMgYW5kIHByb3ZpZGUgd2VhcG9ucyBmb3IgdGhlIHBsZWFkZXI6Ckkga25vdyB0b28gdGhhdCB0aGUgR3JlZWtzIGRpZCBsaWtld2lzZTogaGVuY2UKdGhlIG5hbWUgb2YgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJhZ21hdGljdXM8L2hpPiB3aGljaCB3YXMgYmVzdG93ZWQgb24Kc3VjaCBwZXJzb25zLiBCdXQgSSBhbSBzcGVha2luZyBvZiBhbiBvcmF0b3IsIHdobwpvd2VzIGl0IGFzIGEgZHV0eSB0byBoaXMgY2FzZSB0byBzZXJ2ZSBpdCBub3QgbWVyZWx5CmJ5IHRoZSBsb3VkbmVzcyBvZiBoaXMgdm9pY2UsIGJ1dCBieSBhbGwgb3RoZXIgbWVhbnMKdGhhdCBtYXkgYmUgb2YgYXNzaXN0YW5jZSB0byBpdC48L3RyYW5zbGF0aW9uPg=="
translation['12.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiBDb25zZXF1ZW50bHkgSSBkbwpub3Qgd2lzaCBteSBvcmF0b3IgdG8gYmUgaGVscGxlc3MsIGlmIGl0IHNvIGNoYW5jZQp0aGF0IGhlIHB1dHMgaW4gYW4gYXBwZWFyYW5jZSBmb3IgdGhlIHByZWxpbWluYXJ5CnByb2NlZWRpbmdzIHRvIHdoaWNoIHRoZSBob3VyIGJlZm9yZSB0aGUgY29tbWVuY2VtZW50IG9mIHRoZSB0cmlhbDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZCBob3JhbSBjb25zdGFyZTwvaGk+IGFwcGVhcnMgdG8gYmUgYSB0ZWNobmljYWwgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+dGVybTwvaGk+IGZvcgo8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5hcHBlcmFuY2UgYXQgdGhlIHByZWxpbWluYXJ5IGhvdXIuPC9xdW90ZT4gdGhlIHB1cnBvc2Ugb2Ygd2hpY2gKaXMgaW5kaWNhdGVkIGluIHRoZSBwYXJhcGhyYXNlIGdpdmVuIGFib3ZlLjwvbm90ZT4gaXMgYWxsb3R0ZWQsIG9yIHRvIGJlIHVuc2tpbGZ1bCBpbgp0aGUgcHJlcGFyYXRpb24gYW5kIHByb2R1Y3Rpb24gb2YgZXZpZGVuY2UuIEZvcgp3aG8sIHNvb25lciB0aGFuIGhpbXNlbGYsIHNob3VsZCBwcmVwYXJlIHRoZSBwb2ludHMKd2hpY2ggaGUgd2lzaGVzIHRvIGJlIGJyb3VnaHQgb3V0IHdoZW4gaGUgaXMKcGxlYWRpbmc/IFlvdSBtaWdodCBhcyB3ZWxsIHN1cHBvc2UgdGhhdCB0aGUKcXVhbGlmaWNhdGlvbnMgb2YgYSBzdWNjZXNzZnVsIGdlbmVyYWwgY29uc2lzdCBtZXJlbHkKaW4gY291cmFnZSBhbmQgZW5lcmd5IGluIHRoZSBmaWVsZCBvZiBiYXR0bGUgYW5kIHNraWxsCmluIG1lZXRpbmcgYWxsIHRoZSBkZW1hbmRzIG9mIGFjdHVhbCBjb25mbGljdCwgd2hpbGUKc3VmZmVyaW5nIGhpbSB0byBiZSBpZ25vcmFudCBvZiB0aGUgbWV0aG9kcyBvZiBsZXZ5aW5nIHRyb29wcywgbXVzdGVyaW5nIGFuZCBlcXVpcHBpbmcgaGlzIGZvcmNlcywKYXJyYW5naW5nIGZvciBzdXBwbGllcyBvciBzZWxlY3RpbmcgYSBzdWl0YWJsZSBwb3NpdGlvbgpmb3IgaGlzIGNhbXAsIGRlc3BpdGUgdGhlIGZhY3QgdGhhdCBwcmVwYXJhdGlvbiBmb3IKd2FyIGlzIGFuIGVzc2VudGlhbCBwcmVsaW1pbmFyeSBmb3IgaXRzIHN1Y2Nlc3NmdWwKY29uZHVjdC48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZCBob3JhbSBjb25zdGFyZTwvaGk+IGFwcGVhcnMgdG8gYmUgYSB0ZWNobmljYWwgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+dGVybTwvaGk+IGZvcgo8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5hcHBlcmFuY2UgYXQgdGhlIHByZWxpbWluYXJ5IGhvdXIuPC9xdW90ZT4gdGhlIHB1cnBvc2Ugb2Ygd2hpY2gKaXMgaW5kaWNhdGVkIGluIHRoZSBwYXJhcGhyYXNlIGdpdmVuIGFib3ZlLjwvdHJhbnNsYXRpb24+"
translation['12.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBBbmQgeWV0IHN1Y2ggYSBnZW5lcmFsIHdvdWxkIGJlYXIgYQp2ZXJ5IGNsb3NlIHJlc2VtYmxhbmNlIHRvIHRoZSBhZHZvY2F0ZSB3aG8gbGVhdmVzCm11Y2ggb2YgdGhlIGRldGFpbCB0aGF0IGlzIG5lY2Vzc2FyeSBmb3Igc3VjY2VzcyB0bwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDA1IiAvPgoKdGhlIGNhcmUgb2Ygb3RoZXJzLCBtb3JlIGVzcGVjaWFsbHkgaW4gdmlldyBvZiB0aGUKZmFjdCB0aGF0IHRoaXMsIHRoZSBtb3N0IG5lY2Vzc2FyeSBlbGVtZW50IGluIHRoZQptYW5hZ2VtZW50IG9mIGEgY2FzZSwgaXMgbm90IGFzIGRpZmZpY3VsdCBhcyBpdCBtYXkKcGVyaGFwcyBzZWVtIHRvIG91dHNpZGUgb2JzZXJ2ZXJzLiBGb3IgZXZlcnkgcG9pbnQKb2YgbGF3LCB3aGljaCBpcyBjZXJ0YWluLCBpcyBiYXNlZCBlaXRoZXIgb24gd3JpdHRlbgpsYXcgb3IgYWNjZXB0ZWQgY3VzdG9tOiBpZiwgb24gdGhlIG90aGVyIGhhbmQsIHRoZQpwb2ludCBpcyBkb3VidGZ1bCwgaXQgbXVzdCBiZSBleGFtaW5lZCBpbiB0aGUgbGlnaHQKb2YgZXF1aXR5LjwvdHJhbnNsYXRpb24+"
translation['12.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBMYXdzIHdoaWNoIGFyZSBlaXRoZXIgd3JpdHRlbiBvciBmb3VuZGVkCm9uIGFjY2VwdGVkIGN1c3RvbSBwcmVzZW50IG5vIGRpZmZpY3VsdHksIHNpbmNlIHRoZXkKY2FsbCBtZXJlbHkgZm9yIGtub3dsZWRnZSBhbmQgbWFrZSBubyBkZW1hbmQgb24KdGhlIGltYWdpbmF0aW9uLiBPbiB0aGUgb3RoZXIgaGFuZCwgdGhlIHBvaW50cyBleHBsYWluZWQgaW4gdGhlIHJ1bGluZ3Mgb2YgdGhlIGxlZ2FsIGV4cGVydHMgdHVybiBlaXRoZXIKb24gdGhlIGludGVycHJldGF0aW9uIG9mIHdvcmRzIG9yIG9uIHRoZSBkaXN0aW5jdGlvbgpiZXR3ZWVuIHJpZ2h0IGFuZCB3cm9uZy4gVG8gdW5kZXJzdGFuZCB0aGUgbWVhbmluZyBvZiBlYWNoIHdvcmQgaXMgZWl0aGVyIGNvbW1vbiB0byBhbGwgc2Vuc2libGUKbWVuIG9yIHRoZSBzcGVjaWFsIHBvc3Nlc3Npb24gb2YgdGhlIG9yYXRvciwgd2hpbGUKdGhlIGRlbWFuZHMgb2YgZXF1aXR5IGFyZSBrbm93biB0byBldmVyeSBnb29kCm1hbi48L3RyYW5zbGF0aW9uPg=="
translation['12.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiBOb3cgSSByZWdhcmQgdGhlIG9yYXRvciBhYm92ZSBhbGwgYXMgYmVpbmcKYSBtYW4gb2YgdmlydHVlIGFuZCBnb29kIHNlbnNlLCB3aG8gd2lsbCBub3QgYmUKc2VyaW91c2x5IHRyb3VibGVkLCBhZnRlciBoYXZpbmcgZGV2b3RlZCBoaW1zZWxmIHRvCnRoZSBzdHVkeSBvZiB0aGF0IHdoaWNoIGlzIGV4Y2VsbGVudCBieSBuYXR1cmUsIGlmCnNvbWUgbGVnYWwgZXhwZXJ0IGRpc2FncmVlcyB3aXRoIGhpbTsgZm9yIGV2ZW4gdGhleQphcmUgYWxsb3dlZCB0byBkaXNhZ3JlZSBhbW9uZyB0aGVtc2VsdmVzLiBCdXQgaWYKaGUgZnVydGhlciB3aXNoZXMgdG8ga25vdyB0aGUgdmlld3Mgb2YgZXZlcnlvbmUsCmhlIHdpbGwgcmVxdWlyZSB0byByZWFkLCBhbmQgcmVhZGluZyBpcyB0aGUgbGVhc3QKbGFib3Jpb3VzIG9mJyBhbGwgdGhlIHRhc2tzIHRoYXQgZmFsbCB0byB0aGUgc3R1ZGVudCdzCmxvdC48L3RyYW5zbGF0aW9uPg=="
translation['12.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBNb3Jlb3ZlciwgaWYgdGhlIGNsYXNzIG9mIGxlZ2FsIGV4cGVydHMgaXMgYXMgYSBydWxlCmRyYXduIGZyb20gdGhvc2Ugd2hvLCBpbiBkZXNwYWlyIG9mIG1ha2luZyBzdWNjZXNzZnVsIHBsZWFkZXJzLCBoYXZlIHRha2VuIHJlZnVnZSB3aXRoIHRoZSBsYXcsCmhvdyBlYXN5IGl0IG11c3QgYmUgZm9yIGFuIG9yYXRvciB0byBrbm93IHdoYXQKdGhvc2Ugc3VjY2VlZCBpbiBsZWFybmluZywgd2hvIGJ5IHRoZWlyIG93biBjb25mZXNzaW9uIGFyZSBpbmNhcGFibGUgb2YgYmVjb21pbmcgb3JhdG9ycyEgQnV0Ck1hcmN1cyBDYXRvIHdhcyBhdCBvbmNlIGEgZ3JlYXQgb3JhdG9yIGFuZCBhbgpleHBlcnQgbGF3eWVyLCB3aGlsZSBTY2Fldm9sYSBhbmQgU2Vydml1cyBTdWxwaWNpdXMKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQwNyIgLz4KCndlcmUgdW5pdmVyc2FsbHkgYWxsb3dlZCB0byBiZSBlbG9xdWVudCBhcyB3ZWxsLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5pLiBlLjwvaGk+IGFzIHdlbGwgYXMgZXhwZXJ0cyBvbiB0aGUgbGF3Ljwvbm90ZT4KPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+aS4gZS48L2hpPiBhcyB3ZWxsIGFzIGV4cGVydHMgb24gdGhlIGxhdy48L3RyYW5zbGF0aW9uPg=="
translation['12.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgQ2ljZXJvIG5vdCBtZXJlbHkgcG9zc2Vzc2VkIGEgc3VmZmljaWVudCBzdXBwbHkgb2YKbGVnYWwga25vd2xlZGdlIHRvIHNlcnZlIGhpcyBuZWVkcyB3aGVuIHBsZWFkaW5nLApidXQgYWN0dWFsbHkgYmVnYW4gdG8gd3JpdGUgb24gdGhlIHN1YmplY3QsIHNvIHRoYXQKaXQgaXMgY2xlYXIgdGhhdCBhbiBvcmF0b3IgaGFzIG5vdCBtZXJlbHkgdGltZSB0bwpsZWFybiwgYnV0IGV2ZW4gdG8gdGVhY2ggdGhlIGxhdy48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5MZXQgbm8gb25lLCBob3dldmVyLCByZWdhcmQgdGhlIGFkdmljZSBJIGhhdmUKZ2l2ZW4gYXMgdG8gdGhlIGF0dGVudGlvbiBkdWUgdG8gdGhlIGRldmVsb3BtZW50Cm9mIGNoYXJhY3RlciBhbmQgdGhlIHN0dWR5IG9mIHRoZSBsYXcgYXMgYmVpbmcKaW1wdWduZWQgYnkgdGhlIGZhY3QgdGhhdCB3ZSBhcmUgZmFtaWxpYXIgd2l0aAptYW55IHdobywgYmVjYXVzZSB0aGV5IHdlcmUgd2Vhcnkgb2YgdGhlIHRvaWwKZW50YWlsZWQgb24gdGhvc2Ugd2hvIHNlZWsgdG8gc2NhbGUgdGhlIGhlaWdodHMKb2YgZWxvcXVlbmNlLCBoYXZlIGJldGFrZW4gdGhlbXNlbHZlcyB0byB0aGUgc3R1ZHkKb2YgbGF3IGFzIGEgcmVmdWdlIGZvciB0aGVpciBpbmRvbGVuY2UuIFNvbWUgb2YKdGhlc2UgdHJhbnNmZXIgdGhlaXIgYXR0ZW50aW9uIHRvIHRoZSBwcmFldG9yJ3MgZWRpY3RzCm9yIHRoZSBjaXZpbCBsYXcsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGUgcGlyYWV0b3IncyBlZGljdHMgd2VyZSBkaXNwbGF5ZWQgb24gYSB3aGl0ZW5lZCBib2FyZAooPGhpIHJlbmQ9Iml0YWxpY3MiPmluIGFsYm88L2hpPiksIHdoaWxlIHRoZSBoZWFkaW5ncyBvZiB0aGUgY2l2aWwgbGF3IHdlcmUgd3JpdHRlbiBpbgpyZWQuPC9ub3RlPiBhbmQgaGF2ZSBwcmVmZXJyZWQgdG8gYmVjb21lCnNwZWNpYWxpc3RzIGluIDxoaSByZW5kPSJpdGFsaWNzIj5mb3JtdWxhZSw8L2hpPiBvciBsZWdhbGlzdHMsIGFzIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPmRlIE9yLjwvaGk+IEkuIGl2LiAyMzEuPC9ub3RlPiBjYWxscwp0aGVtLCBvbiB0aGUgcHJldGV4dCBvZiBjaG9vc2luZyBhIG1vcmUgdXNlZnVsCmJyYW5jaCBvZiBzdHVkeSwgd2hlcmVhcyB0aGVpciByZWFsIG1vdGl2ZSB3YXMgaXRzCmNvbXBhcmF0aXZlIGVhc2luZXNzLjxtaWxlc3RvbmUgbj0iMTIiIHVuaXQ9InNlY3Rpb24iIC8+IE90aGVycyBhcmUgdGhlIHZpY3RpbXMgb2YgYQptb3JlIGFycm9nYW50IGZvcm0gb2Ygc2xvdGg7IHRoZXkgYXNzdW1lIGEgc3Rlcm4KYWlyIGFuZCBsZXQgdGhlaXIgYmVhcmRzIGdyb3csIGFuZCwgYXMgdGhvdWdoIGRlc3Bpc2luZyB0aGUgcHJlY2VwdHMgb2Ygb3JhdG9yeSwgc2l0IGZvciBhIHdoaWxlIGluCnRoZSBzY2hvb2xzIG9mIHRoZSBwaGlsb3NvcGhlcnMsIHRoYXQsIGJ5IGFuIGFzc3VtcHRpb24gb2YgYSBzZXZlcmUgbWllbiBiZWZvcmUgdGhlIHB1YmxpYyBnYXplIGFuZCBieQphbiBhZmZlY3RlZCBjb250ZW1wdCBvZiBvdGhlcnMgdGhleSBtYXkgYXNzZXJ0IHRoZWlyCm1vcmFsIHN1cGVyaW9yaXR5LCB3aGlsZSBsZWFkaW5nIGEgbGlmZSBvZiBkZWJhdWNoZXJ5CmF0IGhvbWUuIEZvciBwaGlsb3NvcGh5IG1heSBiZSBjb3VudGVyZmVpdGVkLCBidXQKZWxvcXVlbmNlIG5ldmVyLjwvcD4KCjwvdHJhbnNsYXRpb24+"
translation['12.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5MZXQgbm8gb25lLCBob3dldmVyLCByZWdhcmQgdGhlIGFkdmljZSBJIGhhdmUKZ2l2ZW4gYXMgdG8gdGhlIGF0dGVudGlvbiBkdWUgdG8gdGhlIGRldmVsb3BtZW50Cm9mIGNoYXJhY3RlciBhbmQgdGhlIHN0dWR5IG9mIHRoZSBsYXcgYXMgYmVpbmcKaW1wdWduZWQgYnkgdGhlIGZhY3QgdGhhdCB3ZSBhcmUgZmFtaWxpYXIgd2l0aAptYW55IHdobywgYmVjYXVzZSB0aGV5IHdlcmUgd2Vhcnkgb2YgdGhlIHRvaWwKZW50YWlsZWQgb24gdGhvc2Ugd2hvIHNlZWsgdG8gc2NhbGUgdGhlIGhlaWdodHMKb2YgZWxvcXVlbmNlLCBoYXZlIGJldGFrZW4gdGhlbXNlbHZlcyB0byB0aGUgc3R1ZHkKb2YgbGF3IGFzIGEgcmVmdWdlIGZvciB0aGVpciBpbmRvbGVuY2UuIFNvbWUgb2YKdGhlc2UgdHJhbnNmZXIgdGhlaXIgYXR0ZW50aW9uIHRvIHRoZSBwcmFldG9yJ3MgZWRpY3RzCm9yIHRoZSBjaXZpbCBsYXcsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRoZSBwaXJhZXRvcidzIGVkaWN0cyB3ZXJlIGRpc3BsYXllZCBvbiBhIHdoaXRlbmVkIGJvYXJkCig8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5pbiBhbGJvPC9oaT4pLCB3aGlsZSB0aGUgaGVhZGluZ3Mgb2YgdGhlIGNpdmlsIGxhdyB3ZXJlIHdyaXR0ZW4gaW4KcmVkLjwvbm90ZT4gYW5kIGhhdmUgcHJlZmVycmVkIHRvIGJlY29tZQpzcGVjaWFsaXN0cyBpbiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5pbiBhbGJvPC9oaT4pLCB3aGlsZSB0aGUgaGVhZGluZ3Mgb2YgdGhlIGNpdmlsIGxhdyB3ZXJlIHdyaXR0ZW4gaW4KcmVkLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmZvcm11bGFlLDwvaGk+IG9yIGxlZ2FsaXN0cywgYXMgQ2ljZXJvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIE9yLjwvaGk+IEkuIGl2LiAyMzEuPC9ub3RlPiBjYWxscwp0aGVtLCBvbiB0aGUgcHJldGV4dCBvZiBjaG9vc2luZyBhIG1vcmUgdXNlZnVsCmJyYW5jaCBvZiBzdHVkeSwgd2hlcmVhcyB0aGVpciByZWFsIG1vdGl2ZSB3YXMgaXRzCmNvbXBhcmF0aXZlIGVhc2luZXNzLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlIE9yLjwvaGk+IEkuIGl2LiAyMzEuPC90cmFuc2xhdGlvbj4="
translation['12.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gT3RoZXJzIGFyZSB0aGUgdmljdGltcyBvZiBhCm1vcmUgYXJyb2dhbnQgZm9ybSBvZiBzbG90aDsgdGhleSBhc3N1bWUgYSBzdGVybgphaXIgYW5kIGxldCB0aGVpciBiZWFyZHMgZ3JvdywgYW5kLCBhcyB0aG91Z2ggZGVzcGlzaW5nIHRoZSBwcmVjZXB0cyBvZiBvcmF0b3J5LCBzaXQgZm9yIGEgd2hpbGUgaW4KdGhlIHNjaG9vbHMgb2YgdGhlIHBoaWxvc29waGVycywgdGhhdCwgYnkgYW4gYXNzdW1wdGlvbiBvZiBhIHNldmVyZSBtaWVuIGJlZm9yZSB0aGUgcHVibGljIGdhemUgYW5kIGJ5CmFuIGFmZmVjdGVkIGNvbnRlbXB0IG9mIG90aGVycyB0aGV5IG1heSBhc3NlcnQgdGhlaXIKbW9yYWwgc3VwZXJpb3JpdHksIHdoaWxlIGxlYWRpbmcgYSBsaWZlIG9mIGRlYmF1Y2hlcnkKYXQgaG9tZS4gRm9yIHBoaWxvc29waHkgbWF5IGJlIGNvdW50ZXJmZWl0ZWQsIGJ1dAplbG9xdWVuY2UgbmV2ZXIuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+QWJvdmUgYWxsLCBvdXIgb3JhdG9yIHNob3VsZCBiZSBlcXVpcHBlZAp3aXRoIGEgcmljaCBzdG9yZSBvZiBleGFtcGxlcyBib3RoIG9sZCBhbmQgbmV3OgphbmQgaGUgb3VnaHQgbm90IG1lcmVseSB0byBrbm93IHRob3NlIHdoaWNoIGFyZQpyZWNvcmRlZCBpbiBoaXN0b3J5IG9yIHRyYW5zbWl0dGVkIGJ5IG9yYWwgdHJhZGl0aW9uCm9yIG9jY3VyIGZyb20gZGF5IHRvIGRheSwgYnV0IHNob3VsZCBub3QgbmVnbGVjdAoKPHBiIGlkPSJwLjQwOSIgLz4KCmV2ZW4gdGhvc2UgZmljdGl0aW91cyBleGFtcGxlcyBpbnZlbnRlZCBieSB0aGUgZ3JlYXQKcG9ldHMuPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBGb3Igd2hpbGUgdGhlIGZvcm1lciBoYXZlIHRoZSBhdXRob3JpdHkgb2YKZXZpZGVuY2Ugb3IgZXZlbiBvZiBsZWdhbCBkZWNpc2lvbnMsIHRoZSBsYXR0ZXIgYWxzbwplaXRoZXIgaGF2ZSB0aGUgd2FycmFudCBvZiBhbnRpcXVpdHkgb3IgYXJlIHJlZ2FyZGVkCmFzIGhhdmluZyBiZWVuIGludmVudGVkIGJ5IGdyZWF0IG1lbiB0byBzZXJ2ZSBhcwpsZXNzb25zIHRvIHRoZSB3b3JsZC4gSGUgc2hvdWxkIHRoZXJlZm9yZSBiZSBhY3F1YWludGVkIHdpdGggYXMgbWFueSBleGFtcGxlcyBhcyBwb3NzaWJsZS4gSXQgaXMKdGhpcyB3aGljaCBnaXZlcyBvbGQgYWdlIHNvIG11Y2ggYXV0aG9yaXR5LCBzaW5jZQp0aGUgb2xkIGFyZSBiZWxpZXZlZCB0byBoYXZlIGEgbGFyZ2VyIHN0b3JlIG9mIGtub3dsZWRnZSBhbmQgZXhwZXJpZW5jZSwgYXMgSG9tZXIgc28gZnJlcXVlbnRseSBiZWFycwp3aXRuZXNzLiBCdXQgd2UgbXVzdCBub3Qgd2FpdCB0aWxsIHRoZSBldmVuaW5nIG9mCm91ciBkYXlzLCBzaW5jZSBzdHVkeSBoYXMgdGhpcyBhZHZhbnRhZ2UgdGhhdCwgYXMgZmFyCmFzIGtub3dsZWRnZSBvZiBmYWN0cyBpcyBjb25jZXJuZWQsIGl0IGlzIGNhcGFibGUgb2YKZ2l2aW5nIHRoZSBpbXByZXNzaW9uIHRoYXQgd2UgaGF2ZSBsaXZlZCBpbiBhZ2VzCmxvbmcgZ29uZSBieS48L3A+Cgo8L3RyYW5zbGF0aW9uPg=="
translation['12.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['12.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPkFib3ZlIGFsbCwgb3VyIG9yYXRvciBzaG91bGQgYmUgZXF1aXBwZWQKd2l0aCBhIHJpY2ggc3RvcmUgb2YgZXhhbXBsZXMgYm90aCBvbGQgYW5kIG5ldzoKYW5kIGhlIG91Z2h0IG5vdCBtZXJlbHkgdG8ga25vdyB0aG9zZSB3aGljaCBhcmUKcmVjb3JkZWQgaW4gaGlzdG9yeSBvciB0cmFuc21pdHRlZCBieSBvcmFsIHRyYWRpdGlvbgpvciBvY2N1ciBmcm9tIGRheSB0byBkYXksIGJ1dCBzaG91bGQgbm90IG5lZ2xlY3QKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQwOSIgLz4KCmV2ZW4gdGhvc2UgZmljdGl0aW91cyBleGFtcGxlcyBpbnZlbnRlZCBieSB0aGUgZ3JlYXQKcG9ldHMuPC90cmFuc2xhdGlvbj4="
translation['12.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBGb3Igd2hpbGUgdGhlIGZvcm1lciBoYXZlIHRoZSBhdXRob3JpdHkgb2YKZXZpZGVuY2Ugb3IgZXZlbiBvZiBsZWdhbCBkZWNpc2lvbnMsIHRoZSBsYXR0ZXIgYWxzbwplaXRoZXIgaGF2ZSB0aGUgd2FycmFudCBvZiBhbnRpcXVpdHkgb3IgYXJlIHJlZ2FyZGVkCmFzIGhhdmluZyBiZWVuIGludmVudGVkIGJ5IGdyZWF0IG1lbiB0byBzZXJ2ZSBhcwpsZXNzb25zIHRvIHRoZSB3b3JsZC4gSGUgc2hvdWxkIHRoZXJlZm9yZSBiZSBhY3F1YWludGVkIHdpdGggYXMgbWFueSBleGFtcGxlcyBhcyBwb3NzaWJsZS4gSXQgaXMKdGhpcyB3aGljaCBnaXZlcyBvbGQgYWdlIHNvIG11Y2ggYXV0aG9yaXR5LCBzaW5jZQp0aGUgb2xkIGFyZSBiZWxpZXZlZCB0byBoYXZlIGEgbGFyZ2VyIHN0b3JlIG9mIGtub3dsZWRnZSBhbmQgZXhwZXJpZW5jZSwgYXMgSG9tZXIgc28gZnJlcXVlbnRseSBiZWFycwp3aXRuZXNzLiBCdXQgd2UgbXVzdCBub3Qgd2FpdCB0aWxsIHRoZSBldmVuaW5nIG9mCm91ciBkYXlzLCBzaW5jZSBzdHVkeSBoYXMgdGhpcyBhZHZhbnRhZ2UgdGhhdCwgYXMgZmFyCmFzIGtub3dsZWRnZSBvZiBmYWN0cyBpcyBjb25jZXJuZWQsIGl0IGlzIGNhcGFibGUgb2YKZ2l2aW5nIHRoZSBpbXByZXNzaW9uIHRoYXQgd2UgaGF2ZSBsaXZlZCBpbiBhZ2VzCmxvbmcgZ29uZSBieS48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz5TdWNoIGFyZSB0aGUgaW5zdHJ1bWVudHMgb2Ygd2hpY2ggSSBwcm9taXNlZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPlByLjwvaGk+IDIyIGFuZCB4aWkuIDxoaSByZW5kPSJpdGFsaWNzIj5Qci48L2hpPiA0Ljwvbm90ZT4KdG8gZ2l2ZSBhY2NvdW50LCB0aGUgaW5zdHJ1bWVudHMsIHRoYXQgaXMsIG5vdCBtZXJlbHkKb2YgdGhlIGFydCwgYXMgc29tZSBoYXZlIGhlbGQsIGJ1dCBvZiB0aGUgb3JhdG9yIGhpbXNlbGYuIFRoZXNlIGFyZSB0aGUgd2VhcG9ucyB0aGF0IGhlIHNob3VsZCBoYXZlCnJlYWR5IHRvIGhpcyBoYW5kLCB0aGlzIHRoZSBrbm93bGVkZ2Ugd2l0aCB3aGljaCBoZQptdXN0IGJlIGVxdWlwcGVkLCB3aGlsZSBpdCBtdXN0IGJlIHN1cHBsZW1lbnRlZCBieQphIHJlYWR5IHN0b3JlIG9mIHdvcmRzIGFuZCBmaWd1cmVzLCBwb3dlciBvZiBpbWFnaW5hdGlvbiwgc2tpbGwgaW4gYXJyYW5nZW1lbnQsIHJldGVudGl2ZW5lc3Mgb2YgbWVtb3J5CmFuZCBncmFjZSBvZiBkZWxpdmVyeS4gQnV0IG9mIGFsbCB0aGVzZSBxdWFsaXRpZXMgdGhlCmhpZ2hlc3QgaXMgdGhhdCBsb2Z0aW5lc3Mgb2Ygc291bCB3aGljaCBmZWFyIGNhbm5vdApkaXNtYXkgbm9yIHVwcm9hciB0ZXJyaWZ5IG5vciB0aGUgYXV0aG9yaXR5IG9mIHRoZQphdWRpZW5jZSBmZXR0ZXIgZnVydGhlciB0aGFuIHRoZSByZXNwZWN0IHdoaWNoIGlzCnRoZWlyIGR1ZS48bWlsZXN0b25lIG49IjIiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBhbHRob3VnaCB0aGUgdmljZXMgd2hpY2ggYXJlIGl0cwpvcHBvc2l0ZXMsIHN1Y2ggYXMgYXJyb2dhbmNlLCB0ZW1lcml0eSwgaW1wdWRlbmNlCmFuZCBwcmVzdW1wdGlvbiwgYXJlIGFsbCBwb3NpdGl2ZWx5IG9ibm94aW91cywgc3RpbGwKd2l0aG91dCBjb25zdGFuY3ksIGNvbmZpZGVuY2UgYW5kIGNvdXJhZ2UsIGFydCwgc3R1ZHkKYW5kIHByb2ZpY2llbmN5IHdpbGwgYmUgb2Ygbm8gYXZhaWwuIFlvdSBtaWdodCBhcwp3ZWxsIHB1dCB3ZWFwb25zIGludG8gdGhlIGhhbmRzIG9mIHRoZSB1bndhcmxpa2UKYW5kIHRoZSBjb3dhcmQuIEl0IGlzIGluZGVlZCB3aXRoIHNvbWUgcmVsdWN0YW5jZSwKCjxwYiBpZD0icC40MTEiIC8+CgphcyBpdCBtYXkgZ2l2ZSByaXNlIHRvIG1pc3VuZGVyc3RhbmRpbmcsIHRoYXQgSSBzYXkKdGhhdCBldmVuIG1vZGVzdHkgKHdoaWNoLCB0aG91Z2ggYSBmYXVsdCBpbiBpdHNlbGYsIGlzCmFuIGFtaWFibGUgZmFpbGluZyB3aGljaCBtYXkgZWFzaWx5IGJlIHRoZSBtb3RoZXIgb2YKdmlydHVlcykgaXMgb24gb2NjYXNpb24gYW4gaW1wZWRpbWVudCBhbmQgaGFzCmZyZXF1ZW50bHkgY2F1c2VkIHRoZSBmcnVpdHMgb2YgZ2VuaXVzIGFuZCBzdHVkeSB0bwpjb25zdW1lIGF3YXkgaW4gdGhlIG1pbGRldyBvZiBvYnNjdXJpdHkgbWVyZWx5CmJlY2F1c2UgdGhleSBoYXZlIG5ldmVyIGJlZW4gZGlzcGxheWVkIHRvIHRoZSBwdWJsaWMKZGF5LjxtaWxlc3RvbmUgbj0iMyIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGluIGNhc2UgYW55IG9mIG15IHJlYWRlcnMgc2hvdWxkIHN0aWxsIGxhY2sKc2tpbGwgdG8gZGlzdGluZ3Vpc2ggdGhlIHByZWNpc2UgbWVhbmluZyBvZiBlYWNoCndvcmQsIEkgd291bGQgaGF2ZSBoaW0ga25vdyB0aGF0IGl0IGlzIG5vdCBob25lc3QKc2hhbWUgdGhhdCBpcyB0aGUgb2JqZWN0IG9mIG15IGNyaXRpY2lzbSwgYnV0IHRoYXQKZXhjZXNzIG9mIG1vZGVzdHkgd2hpY2ggaXMgcmVhbGx5IGEgZm9ybSBvZiBmZWFyCmRldGVycmluZyB0aGUgc291bCBmcm9tIGRvaW5nIHdoYXQgaXMgaXRzIGR1dHkgdG8gZG8sCmFuZCByZXN1bHRpbmcgaW4gY29uZnVzaW9uIG9mIG1pbmQsIHJlZ3JldCB0aGF0IG91cgp0YXNrIHdhcyBldmVyIGJlZ3VuLCBhbmQgc3VkZGVuIHNpbGVuY2UuIEZvciB3aG8KY2FuIGhlc2l0YXRlIHRvIGdpdmUgdGhlIG5hbWUgb2YgZmF1bHQgdG8gYSBmZWVsaW5nCnRoYXQgbWFrZXMgYSBtYW4gYXNoYW1lZCB0byBkbyB3aGF0IGlzIHJpZ2h0PzxtaWxlc3RvbmUgbj0iNCIgdW5pdD0ic2VjdGlvbiIgLz4gT24KdGhlIG90aGVyIGhhbmQsIEkgYW0gbm90IHVud2lsbGluZyB0aGF0IHRoZSBtYW4gd2hvCmhhcyBnb3QgdG8gbWFrZSBhIHNwZWVjaCBzaG91bGQgc2hvdyBzaWducyBvZgpuZXJ2b3VzbmVzcyB3aGVuIGhlIHJpc2VzIHRvIGhpcyBmZWV0LCBzaG91bGQgY2hhbmdlCmNvbG91ciBhbmQgbWFrZSBpdCBjbGVhciB0aGF0IGhlIGZlZWxzIHRoZSByaXNrcyBvZiBoaXMKcG9zaXRpb246IGluZGVlZCwgaWYgdGhlc2Ugc3ltcHRvbXMgZG8gbm90IG9jY3VyCm5hdHVyYWxseSwgaXQgd2lsbCBiZSBuZWNlc3NhcnkgdG8gc2ltdWxhdGUgdGhlbS4KQnV0IHRoZSBmZWVsaW5nIHRoYXQgc3RpcnMgdXMgc2hvdWxkIGJlIGR1ZSB0byB0aGUKcmVhbGlzYXRpb24gb2YgdGhlIG1hZ25pdHVkZSBvZiBvdXIgdGFzayBhbmQgbm90IHRvCmZlYXI6IHdlIHNob3VsZCBiZSBtb3ZlZCwgYnV0IG5vdCB0byB0aGUgZXh0ZW50IG9mCmNvbGxhcHNpbmcuIEJ1dCB0aGUgYmVzdCByZW1lZHkgZm9yIHN1Y2ggZXhjZXNzCm9mIG1vZGVzdHkgaXMgY29uZmlkZW5jZTogaG93ZXZlciBncmVhdCBvdXIgbmF0dXJhbAp0aW1pZGl0eSBvZiBtaWVuLCB3ZSBzaGFsbCBmaW5kIHN0cmVuZ3RoIGFuZCBzdXBwb3J0CmluIHRoZSBjb25zY2lvdXNuZXNzIG9mIHRoZSBub2JpbGl0eSBvZiBvdXIgdGFzay48L3A+CjwvdHJhbnNsYXRpb24+"
translation['12.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['12.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPlN1Y2ggYXJlIHRoZSBpbnN0cnVtZW50cyBvZiB3aGljaCBJIHByb21pc2VkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlByLjwvaGk+IDIyIGFuZCB4aWkuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlByLjwvaGk+IDQuPC9ub3RlPgp0byBnaXZlIGFjY291bnQsIHRoZSBpbnN0cnVtZW50cywgdGhhdCBpcywgbm90IG1lcmVseQpvZiB0aGUgYXJ0LCBhcyBzb21lIGhhdmUgaGVsZCwgYnV0IG9mIHRoZSBvcmF0b3IgaGltc2VsZi4gVGhlc2UgYXJlIHRoZSB3ZWFwb25zIHRoYXQgaGUgc2hvdWxkIGhhdmUKcmVhZHkgdG8gaGlzIGhhbmQsIHRoaXMgdGhlIGtub3dsZWRnZSB3aXRoIHdoaWNoIGhlCm11c3QgYmUgZXF1aXBwZWQsIHdoaWxlIGl0IG11c3QgYmUgc3VwcGxlbWVudGVkIGJ5CmEgcmVhZHkgc3RvcmUgb2Ygd29yZHMgYW5kIGZpZ3VyZXMsIHBvd2VyIG9mIGltYWdpbmF0aW9uLCBza2lsbCBpbiBhcnJhbmdlbWVudCwgcmV0ZW50aXZlbmVzcyBvZiBtZW1vcnkKYW5kIGdyYWNlIG9mIGRlbGl2ZXJ5LiBCdXQgb2YgYWxsIHRoZXNlIHF1YWxpdGllcyB0aGUKaGlnaGVzdCBpcyB0aGF0IGxvZnRpbmVzcyBvZiBzb3VsIHdoaWNoIGZlYXIgY2Fubm90CmRpc21heSBub3IgdXByb2FyIHRlcnJpZnkgbm9yIHRoZSBhdXRob3JpdHkgb2YgdGhlCmF1ZGllbmNlIGZldHRlciBmdXJ0aGVyIHRoYW4gdGhlIHJlc3BlY3Qgd2hpY2ggaXMKdGhlaXIgZHVlLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlByLjwvaGk+IDIyIGFuZCB4aWkuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlByLjwvaGk+IDQuPC90cmFuc2xhdGlvbj4="
translation['12.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgYWx0aG91Z2ggdGhlIHZpY2VzIHdoaWNoIGFyZSBpdHMKb3Bwb3NpdGVzLCBzdWNoIGFzIGFycm9nYW5jZSwgdGVtZXJpdHksIGltcHVkZW5jZQphbmQgcHJlc3VtcHRpb24sIGFyZSBhbGwgcG9zaXRpdmVseSBvYm5veGlvdXMsIHN0aWxsCndpdGhvdXQgY29uc3RhbmN5LCBjb25maWRlbmNlIGFuZCBjb3VyYWdlLCBhcnQsIHN0dWR5CmFuZCBwcm9maWNpZW5jeSB3aWxsIGJlIG9mIG5vIGF2YWlsLiBZb3UgbWlnaHQgYXMKd2VsbCBwdXQgd2VhcG9ucyBpbnRvIHRoZSBoYW5kcyBvZiB0aGUgdW53YXJsaWtlCmFuZCB0aGUgY293YXJkLiBJdCBpcyBpbmRlZWQgd2l0aCBzb21lIHJlbHVjdGFuY2UsCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40MTEiIC8+CgphcyBpdCBtYXkgZ2l2ZSByaXNlIHRvIG1pc3VuZGVyc3RhbmRpbmcsIHRoYXQgSSBzYXkKdGhhdCBldmVuIG1vZGVzdHkgKHdoaWNoLCB0aG91Z2ggYSBmYXVsdCBpbiBpdHNlbGYsIGlzCmFuIGFtaWFibGUgZmFpbGluZyB3aGljaCBtYXkgZWFzaWx5IGJlIHRoZSBtb3RoZXIgb2YKdmlydHVlcykgaXMgb24gb2NjYXNpb24gYW4gaW1wZWRpbWVudCBhbmQgaGFzCmZyZXF1ZW50bHkgY2F1c2VkIHRoZSBmcnVpdHMgb2YgZ2VuaXVzIGFuZCBzdHVkeSB0bwpjb25zdW1lIGF3YXkgaW4gdGhlIG1pbGRldyBvZiBvYnNjdXJpdHkgbWVyZWx5CmJlY2F1c2UgdGhleSBoYXZlIG5ldmVyIGJlZW4gZGlzcGxheWVkIHRvIHRoZSBwdWJsaWMKZGF5LjwvdHJhbnNsYXRpb24+"
translation['12.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgaW4gY2FzZSBhbnkgb2YgbXkgcmVhZGVycyBzaG91bGQgc3RpbGwgbGFjawpza2lsbCB0byBkaXN0aW5ndWlzaCB0aGUgcHJlY2lzZSBtZWFuaW5nIG9mIGVhY2gKd29yZCwgSSB3b3VsZCBoYXZlIGhpbSBrbm93IHRoYXQgaXQgaXMgbm90IGhvbmVzdApzaGFtZSB0aGF0IGlzIHRoZSBvYmplY3Qgb2YgbXkgY3JpdGljaXNtLCBidXQgdGhhdApleGNlc3Mgb2YgbW9kZXN0eSB3aGljaCBpcyByZWFsbHkgYSBmb3JtIG9mIGZlYXIKZGV0ZXJyaW5nIHRoZSBzb3VsIGZyb20gZG9pbmcgd2hhdCBpcyBpdHMgZHV0eSB0byBkbywKYW5kIHJlc3VsdGluZyBpbiBjb25mdXNpb24gb2YgbWluZCwgcmVncmV0IHRoYXQgb3VyCnRhc2sgd2FzIGV2ZXIgYmVndW4sIGFuZCBzdWRkZW4gc2lsZW5jZS4gRm9yIHdobwpjYW4gaGVzaXRhdGUgdG8gZ2l2ZSB0aGUgbmFtZSBvZiBmYXVsdCB0byBhIGZlZWxpbmcKdGhhdCBtYWtlcyBhIG1hbiBhc2hhbWVkIHRvIGRvIHdoYXQgaXMgcmlnaHQ/PC90cmFuc2xhdGlvbj4="
translation['12.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBPbgp0aGUgb3RoZXIgaGFuZCwgSSBhbSBub3QgdW53aWxsaW5nIHRoYXQgdGhlIG1hbiB3aG8KaGFzIGdvdCB0byBtYWtlIGEgc3BlZWNoIHNob3VsZCBzaG93IHNpZ25zIG9mCm5lcnZvdXNuZXNzIHdoZW4gaGUgcmlzZXMgdG8gaGlzIGZlZXQsIHNob3VsZCBjaGFuZ2UKY29sb3VyIGFuZCBtYWtlIGl0IGNsZWFyIHRoYXQgaGUgZmVlbHMgdGhlIHJpc2tzIG9mIGhpcwpwb3NpdGlvbjogaW5kZWVkLCBpZiB0aGVzZSBzeW1wdG9tcyBkbyBub3Qgb2NjdXIKbmF0dXJhbGx5LCBpdCB3aWxsIGJlIG5lY2Vzc2FyeSB0byBzaW11bGF0ZSB0aGVtLgpCdXQgdGhlIGZlZWxpbmcgdGhhdCBzdGlycyB1cyBzaG91bGQgYmUgZHVlIHRvIHRoZQpyZWFsaXNhdGlvbiBvZiB0aGUgbWFnbml0dWRlIG9mIG91ciB0YXNrIGFuZCBub3QgdG8KZmVhcjogd2Ugc2hvdWxkIGJlIG1vdmVkLCBidXQgbm90IHRvIHRoZSBleHRlbnQgb2YKY29sbGFwc2luZy4gQnV0IHRoZSBiZXN0IHJlbWVkeSBmb3Igc3VjaCBleGNlc3MKb2YgbW9kZXN0eSBpcyBjb25maWRlbmNlOiBob3dldmVyIGdyZWF0IG91ciBuYXR1cmFsCnRpbWlkaXR5IG9mIG1pZW4sIHdlIHNoYWxsIGZpbmQgc3RyZW5ndGggYW5kIHN1cHBvcnQKaW4gdGhlIGNvbnNjaW91c25lc3Mgb2YgdGhlIG5vYmlsaXR5IG9mIG91ciB0YXNrLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjUiIHVuaXQ9InNlY3Rpb24iIC8+VGhlcmUgYXJlIGFsc28gdGhvc2UgbmF0dXJhbCBpbnN0cnVtZW50cyB3aGljaCwgYXMKSSBtZW50aW9uZWQgYWJvdmUsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5JIDxoaSByZW5kPSJpdGFsaWNzIj5Qci48L2hpPiAyNy48L25vdGU+IG1heSBiZSBmdXJ0aGVyIGltcHJvdmVkIGJ5CmNhcmUsIHN1Y2ggYXMgdm9pY2UsIGx1bmdzIGFuZCBncmFjZSBvZiBjYXJyaWFnZQphbmQgbW92ZW1lbnQsIGFsbCBvZiB3aGljaCBhcmUgb2Ygc3VjaCBpbXBvcnRhbmNlCgo8cGIgaWQ9InAuNDEzIiAvPgoKYXMgZnJlcXVlbnRseSB0byBnaXZlIGEgc3BlYWtlciB0aGUgcmVwdXRhdGlvbiBmb3IKdGFsZW50LiBPdXIgb3duIGFnZSBoYXMgaGFkIG9yYXRvcnMgb2YgZ3JlYXRlcgpyZXNvdXJjZSBhbmQgcG93ZXIsIGJ1dCBUcmFjaGFsdXMgYXBwZWFyZWQgdG8gc3RhbmQKb3V0IGFib3ZlIGFsbCBoaXMgY29udGVtcG9yYXJpZXMsIHdoZW4gaGUgd2FzIHNwZWFraW5nLiBTdWNoIHdhcyB0aGUgZWxlY3QgcHJvZHVjZWQgYnkgaGlzIGxvZnR5CnN0YXR1cmUsIHRoZSBmaXJlIG9mIGhpcyBleWUsIHRoZSBkaWduaXR5IG9mIGhpcyBicm93LAp0aGUgZXhjZWxsZW5jZSBvZiBoaXMgZ2VzdHVyZSwgY291cGxlZCB3aXRoIGEgdm9pY2UKd2hpY2ggd2FzIG5vdCBhbG1vc3QgYSB0cmFnZWRpYW4ncywgYXMgQ2ljZXJvPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gSS4geHh2aWlpLiAxMjguPC9ub3RlPgpkZW1hbmRzIHRoYXQgaXQgc2hvdWxkIGJlLCBidXQgc3VycGFzc2VkIHRoZSB2b2ljZQpvZiBhbGwgdHJhZ2VkaWFucyB0aGF0IEkgaGF2ZSBldmVyIGhlYXJkLjxtaWxlc3RvbmUgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz4gQXQgYW55CnJhdGUgSSByZW1lbWJlciB0aGF0LCB3aGVuIGhlIHdhcyBzcGVha2luZyBpbiB0aGUKQmFzaWxpY2EgSnVsaWEgYmVmb3JlIHRoZSBmaXJzdCB0cmlidW5hbCwgYW5kIHRoZSBmb3VyCnBhbmVscyBvZiBqdWRnZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPk9mIHRoZSBDZW51dHVtdmlyYWwgQ291cnQuIEZvdXIgZGlmZmVyZW50IGNhc2VzIHdlcmUKYmVpbmcgdHJpZWQgc2ltdWx0YW5lb3VzbHkuPC9ub3RlPiB3ZXJlIGFzc2VtYmxlZCBhcyB1c3VhbCBhbmQgdGhlCndob2xlIGJ1aWxkaW5nIHdhcyBmdWxsIG9mIG5vaXNlLCBoZSBjb3VsZCBzdGlsbCBiZQpoZWFyZCBhbmQgdW5kZXJzdG9vZCBhbmQgYXBwbGF1ZGVkIGZyb20gYWxsIGZvdXIKdHJpYnVuYWxzIGF0IG9uY2UsIGEgZmFjdCB3aGljaCB3YXMgbm90IGNvbXBsaW1lbnRhcnkKdG8gdGhlIG90aGVyIHBsZWFkZXJzLiBCdXQgZ2lmdHMgbGlrZSB0aGVzZSBhcmUgc3VjaAphcyBhbGwgbWF5IHByYXkgZm9yIGFuZCBmZXcgYXJlIGhhcHB5IGVub3VnaCB0bwphdHRhaW4uIEFuZCBpZiB3ZSBjYW5ub3QgYWNoaWV2ZSBzdWNoIGZvcnR1bmUsIHdlCm11c3QgZXZlbiBiZSBjb250ZW50IHRvIGJlIGhlYXJkIGJ5IHRoZSBjb3VydCB3aGljaAp3ZSBhcmUgYWRkcmVzc2luZy4gU3VjaCB0aGVuIHNob3VsZCB0aGUgb3JhdG9yIGJlLAphbmQgc3VjaCBhcmUgdGhlIHRoaW5ncyB3aGljaCBoZSBzaG91bGQga25vdy48L3A+Cgo8L3RyYW5zbGF0aW9uPg=="
translation['12.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIGFyZSBhbHNvIHRob3NlIG5hdHVyYWwgaW5zdHJ1bWVudHMgd2hpY2gsIGFzCkkgbWVudGlvbmVkIGFib3ZlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5JIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlByLjwvaGk+IDI3Ljwvbm90ZT4gbWF5IGJlIGZ1cnRoZXIgaW1wcm92ZWQgYnkKY2FyZSwgc3VjaCBhcyB2b2ljZSwgbHVuZ3MgYW5kIGdyYWNlIG9mIGNhcnJpYWdlCmFuZCBtb3ZlbWVudCwgYWxsIG9mIHdoaWNoIGFyZSBvZiBzdWNoIGltcG9ydGFuY2UKCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlByLjwvaGk+IDI3LjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQxMyIgLz4KCmFzIGZyZXF1ZW50bHkgdG8gZ2l2ZSBhIHNwZWFrZXIgdGhlIHJlcHV0YXRpb24gZm9yCnRhbGVudC4gT3VyIG93biBhZ2UgaGFzIGhhZCBvcmF0b3JzIG9mIGdyZWF0ZXIKcmVzb3VyY2UgYW5kIHBvd2VyLCBidXQgVHJhY2hhbHVzIGFwcGVhcmVkIHRvIHN0YW5kCm91dCBhYm92ZSBhbGwgaGlzIGNvbnRlbXBvcmFyaWVzLCB3aGVuIGhlIHdhcyBzcGVha2luZy4gU3VjaCB3YXMgdGhlIGVsZWN0IHByb2R1Y2VkIGJ5IGhpcyBsb2Z0eQpzdGF0dXJlLCB0aGUgZmlyZSBvZiBoaXMgZXllLCB0aGUgZGlnbml0eSBvZiBoaXMgYnJvdywKdGhlIGV4Y2VsbGVuY2Ugb2YgaGlzIGdlc3R1cmUsIGNvdXBsZWQgd2l0aCBhIHZvaWNlCndoaWNoIHdhcyBub3QgYWxtb3N0IGEgdHJhZ2VkaWFuJ3MsIGFzIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5kZSBPci48L2hpPiBJLiB4eHZpaWkuIDEyOC48L25vdGU+CmRlbWFuZHMgdGhhdCBpdCBzaG91bGQgYmUsIGJ1dCBzdXJwYXNzZWQgdGhlIHZvaWNlCm9mIGFsbCB0cmFnZWRpYW5zIHRoYXQgSSBoYXZlIGV2ZXIgaGVhcmQuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3IuPC9oaT4gSS4geHh2aWlpLiAxMjguPC90cmFuc2xhdGlvbj4="
translation['12.5.6'] = ""
translation['12.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['12.6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBhZ2UgYXQgd2hpY2ggdGhlIG9yYXRvciBzaG91bGQgYmVnaW4gdG8KcGxlYWQgd2lsbCBvZiBjb3Vyc2UgZGVwZW5kIG9uIHRoZSBkZXZlbG9wbWVudCBvZgpoaXMgc3RyZW5ndGguIEkgc2hhbGwgbm90IHNwZWNpZnkgaXQgZnVydGhlciwgc2luY2UgaXQKaXMgY2xlYXIgdGhhdCBEZW1vc3RoZW5lcyBwbGVhZGVkIGFnYWluc3QgaGlzCmd1YXJkaWFucyB3aGlsZSBoZSB3YXMgc3RpbGwgYSBtZXJlIGJveSwgQ2FsdnVzLApDYWVzYXIgYW5kIFBvbGxpbzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5EZW1vc3RoZW5lcyB3YXMgMTgsIENyYXNzdXMgMTksIENhZXNhciAyMSwgQXNpbml1cyBQb2xsaW8KYW5kIENhbHZ1cyBub3QgbXVjaCBvbGRlci4gU2VlIFRhYy4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+RGlhbC48L2hpPiAzNC48L25vdGU+IGFsbCB1bmRlcnRvb2sgY2FzZXMgb2YgdGhlIGZpcnN0CmltcG9ydGFuY2UgYmVmb3JlIHRoZXkgd2VyZSBvbGQgZW5vdWdoIHRvIGJlCnF1YWxpZmllZCBmb3IgdGhlIHF1YWVzdG9yc2hpcCwgb3RoZXJzIGFyZSBzYWlkIHRvIGhhdmUKcGxlYWRlZCB3aGlsZSBzdGlsbCB3ZWFyaW5nIHRoZSBnYXJiIG9mIGJveWhvb2QsCmFuZCBBdWd1c3R1cyBDYWVzYXIgZGVsaXZlcmVkIGEgZnVuZXJhbCBvcmF0aW9uIG92ZXIKaGlzIGdyYW5kbW90aGVyIGZyb20gdGhlIHB1YmxpYyByb3N0cmEgd2hlbiBoZSB3YXMKb25seSB0d2VsdmUgeWVhcnMgb2xkLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkRpYWwuPC9oaT4gMzQuPC90cmFuc2xhdGlvbj4="
translation['12.6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBJbiBteSBvcGluaW9uIHdlIHNob3VsZCBhaW0KCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQxNSIgLz4KCmF0IGEgaGFwcHkgbWVhbi4gVGhlIHVucmlwZSBicm93IG9mIGJveWhvb2QKc2hvdWxkIG5vdCBiZSBwcmVtYXR1cmVseSByb2JiZWQgb2YgaXRzIGluZ2VudW91cwphaXIgbm9yIHNob3VsZCB0aGUgeW91bmcgc3BlYWtlcidzIHBvd2VycyBiZSBicm91Z2h0CmJlZm9yZSB0aGUgcHVibGljIHdoaWxlIHlldCB1bmZvcm1lZCwgc2luY2Ugc3VjaCBhCnByYWN0aWNlIGxlYWRzIHRvIGEgY29udGVtcHQgZm9yIHN0dWR5LCBsYXlzIHRoZQpmb3VuZGF0aW9ucyBvZiBpbXB1ZGVuY2UgYW5kIGluZHVjZXMgYSBmYXVsdCB3aGljaAppcyBwZXJuaWNpb3VzIGluIGFsbCBkZXBhcnRtZW50cyBvZiBsaWZlLCBuYW1lbHksIGEgc2VsZi1jb25maWRlbmNlIHRoYXQgaXMgbm90IGp1c3RpZmllZCBieSB0aGUgc3BlYWtlcidzCnJlc291cmNlcy48L3RyYW5zbGF0aW9uPg=="
translation['12.6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBPbiB0aGUgb3RoZXIgaGFuZCwgaXQgaXMgdW5kZXNpcmFibGUgdG8KcG9zdHBvbmUgdGhlIGFwcHJlbnRpY2VzaGlwIG9mIHRoZSBiYXIgdGlsbCBvbGQgYWdlOgpmb3IgdGhlIGZlYXIgb2YgYXBwZWFyaW5nIGluIHB1YmxpYyBncm93cyBkYWlseSBhbmQKdGhlIG1hZ25pdHVkZSBvZiB0aGUgdGFzayBvbiB3aGljaCB3ZSBtdXN0IHZlbnR1cmUKY29udGludWFsbHkgaW5jcmVhc2VzIGFuZCB3ZSB3YXN0ZSB0aW1lIGRlbGliZXJhdGluZwp3aGVuIHdlIHNob3VsZCBiZWdpbiwgdGlsbCB3ZSBmaW5kIGl0IGlzIHRvbyBsYXRlIHRvCmJlZ2luIGF0IGFsbC4gQ29uc2VxdWVudGx5IGl0IGlzIGRlc2lyYWJsZSB0aGF0IHRoZQpmcnVpdCBvZiBvdXIgc3R1ZGllcyBzaG91bGQgYmUgYnJvdWdodCBiZWZvcmUgdGhlCnB1YmxpYyBleWUgd2hpbGUgaXQgaXMgc3RpbGwgZnJlc2ggYW5kIHN3ZWV0LCB3aGlsZSBpdAptYXkgaG9wZSBmb3IgaW5kdWxnZW5jZSBhbmQgYmUgc2VjdXJlIG9mIGEga2luZGx5CmRpc3Bvc2l0aW9uIGluIHRoZSBhdWRpZW5jZSwgd2hpbGUgYm9sZG5lc3MgaXMgbm90CnVuYmVjb21pbmcgYW5kIHlvdXRoIGNvbXBlbnNhdGVzIGZvciBhbGwgZGVmZWN0cwphbmQgYm95aXNoIGV4dHJhdmFnYW5jZSBpcyByZWdhcmRlZCBhcyBhIHNpZ24gb2YKbmF0dXJhbCB2aWdvdXIuPC90cmFuc2xhdGlvbj4="
translation['12.6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBUYWtlIGZvciBleGFtcGxlIHRoZSB3aG9sZSBvZiB0aGUKd2VsbC1rbm93biBwYXNzYWdlIGZyb20gQ2ljZXJvJ3MgZGVmZW5jZSBvZiBTZXh0dXMKUm9zY2l1czo8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIFJvc2UuIEFtZXIuPC9oaT4geHh2aS4gNzIuPC9ub3RlPiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gUm9zZS4gQW1lci48L2hpPiB4eHZpLiA3Mi48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Gb3Igd2hhdCBpcyBtb3JlIGNvbW1vbiB0aGFuIHRoZSBhaXIKdG8gdGhlIGxpdmluZywgdGhhbiB0aGUgZWFydGggdG8gdGhlIGRlYWQsIHRoYW4gdGhlCnNlYSB0byBtYXJpbmVycyBvciB0aGUgc2hvcmUgdG8gc2hpcHdyZWNrZWQgbWVuPzwvcXVvdGU+CmV0Yy4gVGhpcyBwYXNzYWdlIHdhcyBkZWxpdmVyZWQgYXQgdGhlIGFnZSBvZgp0d2VudHktc2l4IGFtaWQgbG91ZCBhcHBsYXVzZSBmcm9tIHRoZSBhdWRpZW5jZSwKYnV0IGluIGxhdGVyIHllYXJzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPk9yYXQuPC9oaT4geHh4LiAxMDcuPC9ub3RlPiBoZSBhY2tub3dsZWRnZXMgdGhhdCB0aGUgZmVybWVudApvZiB5b3V0aCBoYXMgZGllZCBkb3duIGFuZCBoaXMgc3R5bGUgYmVlbiBjbGFyaWZpZWQKd2l0aCBhZ2UuIEFuZCwgaW5kZWVkLCBob3dldmVyIG11Y2ggcHJpdmF0ZSBzdHVkeQptYXkgY29udHJpYnV0ZSB0byBzdWNjZXNzLCB0aGVyZSBpcyBzdGlsbCBhIHBlY3VsaWFyCnByb2ZpY2llbmN5IHRoYXQgdGhlIGNvdXJ0cyBhbG9uZSBjYW4gZ2l2ZTogZm9yIHRoZXJlCnRoZSBhdG1vc3BoZXJlIGlzIGNoYW5nZWQgYW5kIHRoZSByZWFsaXR5IG9mIHRoZQoKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T3JhdC48L2hpPiB4eHguIDEwNy48cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40MTciIC8+CgpwZXJpbCBwdXRzIGEgZGlmZmVyZW50IGNvbXBsZXhpb24gb24gdGhpbmdzLCB3aGlsZSwgaWYKaXQgaXMgaW1wb3NzaWJsZSB0byBjb21iaW5lIHRoZSB0d28sIHByYWN0aWNlIHdpdGhvdXQKdGhlb3J5IGlzIG1vcmUgdXNlZnVsIHRoYW4gdGhlb3J5IHdpdGhvdXQgcHJhY3RpY2UuCkNvbnNlcXVlbnRseSw8L3RyYW5zbGF0aW9uPg=="
translation['12.6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiBzb21lIHdobyBoYXZlIGdyb3duIG9sZCBpbiB0aGUKc2Nob29scyBsb3NlIHRoZWlyIGhlYWRzIHdoZW4gY29uZnJvbnRlZCBieSB0aGUKbm92ZWx0eSBvZiB0aGUgbGF3IGNvdXJ0cyBhbmQgd2lzaCB0aGF0IGl0IHdlcmUKcG9zc2libGUgdG8gcmVwcm9kdWNlIGFsbCB0aGUgY29uZGl0aW9ucyB1bmRlciB3aGljaAp0aGV5IGRlbGl2ZXJlZCB0aGVpciBleGVyY2lzZXMuIEJ1dCB0aGVyZSBzaXRzIHRoZQpqdWRnZSBpbiBzaWxlbmNlLCB0aGVpciBvcHBvbmVudCBiZWxsb3dzIGF0IHRoZW0sIG5vCnJhc2ggdXR0ZXJhbmNlIHBhc3NlcyB1bm5vdGljZWQgYW5kIGFsbCBhc3N1bXB0aW9ucwptdXN0IGJlIHByb3ZlZCwgdGhlIGNsb2NrIGN1dHMgc2hvcnQgdGhlIHNwZWVjaCB0aGF0CmhhcyBiZWVuIGxhYm9yaW91c2x5IHBpZWNlZCB0b2dldGhlciBhdCB0aGUgY29zdCBvZgpob3VycyBvZiBzdHVkeSBib3RoIGJ5IGRheSBhbmQgbmlnaHQsIGFuZCB0aGVyZSBhcmUKY2VydGFpbiBjYXNlcyB3aGljaCByZXF1aXJlIHNpbXBsaWNpdHkgb2YgbGFuZ3VhZ2UgYW5kCnRoZSBhYmFuZG9ubWVudCBvZiB0aGUgcGVycGV0dWFsIGJvbWJhc3Qgb2YgdGhlCnNjaG9vbHMsIGEgZmFjdCB3aGljaCB0aGVzZSBmbHVlbnQgZmVsbG93cyBjb21wbGV0ZWx5CmZhaWwgdG8gcmVhbGlzZS48L3RyYW5zbGF0aW9uPg=="
translation['12.6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBBbmQgc28geW91IHdpbGwgZmluZCBzb21lIHBlcnNvbnMKd2hvIHJlZ2FyZCB0aGVtc2VsdmVzIGFzIHRvbyBlbG9xdWVudCB0byBzcGVhayBpbgp0aGUgY291cnRzLiBPbiB0aGUgb3RoZXIgaGFuZCwgdGhlIG1hbiwgd2hvbSB3ZQpjb25kdWN0ZWQgdG8gdGhlIGZvcnVtIHdoaWxlIHN0aWxsIHlvdW5nIGFuZCBpbiB0aGUKY2hhcm0gb2YgaW1tYXR1cml0eSwgc2hvdWxkIGJlZ2luIHdpdGggYXMgZWFzeSBhbmQKZmF2b3VyYWJsZSBhIGNhc2UgYXMgbWF5IGJlIChqdXN0IGFzIHRoZSBjdWJzIG9mIHdpbGQKYmVhc3RzIGFyZSBicm91Z2h0IHVwIHRvIHN0YXJ0IHdpdGggb24gc29mdGVyCmZvcm1zIG9mIHByZXkpLCBhbmQgc2hvdWxkIG5vdCBwcm9jZWVkIHN0cmFpZ2h0CmZyb20gdGhpcyBjb21tZW5jZW1lbnQgdG8gcGxlYWQgY2FzZSBhZnRlciBjYXNlCndpdGhvdXQgYSBicmVhaywgb3IgY2F1c2UgaGlzIHRhbGVudHMgdG8gc2V0IGFuZApoYXJkZW4gd2hpbGUgdGhleSBzdGlsbCByZXF1aXJlIG5vdXJpc2htZW50OyBvbiB0aGUKY29udHJhcnksIGFzIHNvb24gYXMgaGUgaGFzIGNvbWUgdG8gcmVhbGlzZSB0aGUgbmF0dXJlCm9mIHRoZSBjb25mbGljdHMgaW4gd2hpY2ggaGUgd2lsbCBoYXZlIHRvIGVuZ2FnZSBhbmQKdGhlIG9iamVjdCB0byB3aGljaCBoaXMgc3R1ZGllcyBzaG91bGQgYmUgZGlyZWN0ZWQsIGhlCnNob3VsZCB0YWtlIGFuIGludGVydmFsIG9mIHJlc3QgYW5kIHJlZnJlc2htZW50LgpUaHVzLDwvdHJhbnNsYXRpb24+"
translation['12.6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBhdCBhbiBhZ2UgdG8gd2hpY2ggYm9sZG5lc3MgaXMgc3RpbGwgbmF0dXJhbCwgaGUKd2lsbCBmaW5kIGl0IGVhc3kgdG8gZ2V0IG92ZXIgdGhlIHRpbWlkaXR5IHdoaWNoIGludmFyaWFibHkgYWNjb21wYW5pZXMgdGhlIHBlcmlvZCBvZiBhcHByZW50aWNlc2hpcCwgYW5kCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40MTkiIC8+Cgp3aWxsIG5vdCwgb24gdGhlIG90aGVyIGhhbmQsIGNhcnJ5IGhpcyBib2xkbmVzcyBzbyBmYXIKYXMgdG8gbGVhZCBoaW0gdG8gZGVzcGlzZSB0aGUgZGlmZmljdWx0aWVzIG9mIGhpcyB0YXNrLgpUaGlzIHdhcyB0aGUgbWV0aG9kIGVtcGxveWVkIGJ5IENpY2VybzogZm9yIHdoZW4KaGUgaGFkIGFscmVhZHkgd29uIGEgZGlzdGluZ3Vpc2hlZCBwb3NpdGlvbiBhdCB0aGUKYmFyIG9mIGhpcyBkYXksIGhlIHRvb2sgc2hpcCB0byBBc2lhIGFuZCB0aGVyZSBzdHVkaWVkCnVuZGVyIGEgbnVtYmVyIG9mIHByb2Zlc3NvcnMgb2YgcGhpbG9zb3BoeSBhbmQKcmhldG9yaWMsIGJ1dCBhYm92ZSBhbGwgdW5kZXIgQXBvbGxvbml1cyBNb2xvbiwKd2hvc2UgbGVjdHVyZXMgaGUgaGFkIGF0dGVuZGVkIGF0IFJvbWUgYW5kIHRvCndob20gaGUgbm93IGF0IFJob2RlcyBlbnRydXN0ZWQgdGhlIHJlZmFzaGlvbmluZwphbmQgcmVjYXN0aW5nIG9mIGhpcyBzdHlsZS4gSXQgaXMgb25seSB3aGVuIHRoZW9yeQphbmQgcHJhY3RpY2UgYXJlIGJyb3VnaHQgaW50byBhIHBlcmZlY3QgaGFybW9ueQp0aGF0IHRoZSBvcmF0b3IgcmVhcHMgdGhlIHJld2FyZCBvZiBhbGwgaGlzIHN0dWR5LjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjciIHVuaXQ9ImNoYXB0ZXIiIC8+PG1pbGVzdG9uZSBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gb3VyIG9yYXRvciBoYXMgZGV2ZWxvcGVkIGhpcyBzdHJlbmd0aAp0byBzdWNoIGEgcGl0Y2ggdGhhdCBpdCBpcyBlcXVhbCB0byBldmVyeSBraW5kIG9mIGNvbmZhY3QgaW4gd2hpY2ggaGUgbWF5IGJlIGNhbGxlZCB1cG9uIHRvIGJlYXIgaGlzIHBhcnQsCmhpcyBmaXJzdCBjb25zaWRlcmF0aW9uIHNob3VsZCBiZSB0byBleGVyY2lzZSBjYXJlIGluCnRoZSBjaG9pY2Ugb2YgdGhlIGNhc2VzIHdoaWNoIGhlIHByb3Bvc2VzIHRvIHVuZGVydGFrZS4gQSBnb29kIG1hbiB3aWxsIHVuZG91YnRlZGx5IHByZWZlciBkZWZlbmNlCnRvIHByb3NlY3V0aW9uLCBidXQgaGUgd2lsbCBub3QgaGF2ZSBzdWNoIGEgcm9vdGVkCm9iamVjdGlvbiB0byB0aGUgdGFzayBvZiBhY2N1c2VyIGFzIHRvIGRpc3JlZ2FyZCBoaXMKZHV0eSB0b3dhcmRzIHRoZSBzdGF0ZSBvciB0b3dhcmRzIGluZGl2aWR1YWxzIGFuZApyZWZ1c2UgdG8gY2FsbCBhbnkgbWFuIHRvIHJlbmRlciBhbiBhY2NvdW50IG9mIGhpcwp3YXkgb2YgbGlmZS4gRm9yIHRoZSBsYXdzIHRoZW1zZWx2ZXMgd291bGQgYmUKcG93ZXJsZXNzIHdpdGhvdXQgdGhlIGFzc2lzdGFuY2Ugb2YgYWR2b2NhdGVzIGVxdWFsCnRvIHRoZSB0YXNrIG9mIHN1cHBvcnRpbmcgdGhlbTsgYW5kIHRvIHJlZ2FyZCBpdCBhcyBhCnNpbiB0byBkZW1hbmQgdGhlIHB1bmlzaG1lbnQgb2YgY3JpbWUgaXMgYWxtb3N0IGVxdWl2YWxlbnQgdG8gdGhlIHNhbmN0aW9uaW5nIG9mIGNyaW1lLCB3aGlsZSBpdCBpcyBjZXJ0YWlubHkKY29udHJhcnkgdG8gdGhlIGludGVyZXN0IG9mIHRoZSBnb29kIHRvIGdpdmUgdGhlCndpY2tlZCBmcmVlIGxlYXZlIHRvIHdvcmsgdGhlaXIgd2lsbC48bWlsZXN0b25lIG49IjIiIHVuaXQ9InNlY3Rpb24iIC8+IFRoZXJlZm9yZSwgb3VyCm9yYXRvciB3aWxsIG5vdCBzdWZmZXIgdGhlIGNvbXBsYWludHMgb2Ygb3VyIGFsbGllcywgdGhlCmRlYXRoIG9mIGZyaWVuZHMgb3Iga2luc21lbiwgb3IgY29uc3BpcmFjaWVzIHRoYXQKdGhyZWF0ZW4gdGhlIGNvbW1vbiB3ZWFsIHRvIGdvIHVuYXZlbmdlZCwgd2hpbGUKaGlzIGNvbmR1Y3Qgd2lsbCBiZSBnb3Zlcm5lZCBub3QgYnkgYSBwYXNzaW9uIHRvCnNlY3VyZSB0aGUgcHVuaXNobWVudCBvZiB0aGUgZ3VpbHR5LCBidXQgYnkgdGhlCgo8cGIgaWQ9InAuNDIxIiAvPgoKZGVzaXJlIHRvIGNvcnJlY3QgdmljZSBhbmQgcmVmb3JtIG1vcmFscy4gRm9yIGZlYXIKaXMgdGhlIG9ubHkgbWVhbnMgb2YgcmVzdHJhaW5pbmcgdGhvc2Ugd2hvIGNhbm5vdApiZSBsZWQgdG8gYmV0dGVyIHdheXMgYnkgdGhlIHZvaWNlIG9mIHJlYXNvbi48bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+IENvbnNlcXVlbnRseSwgd2hpbGUgdG8gZGV2b3RlIG9uZSdzIGxpZmUgdG8gdGhlIHRhc2sgb2YKYWNjdXNhdGlvbiwgYW5kIHRvIGJlIHRlbXB0ZWQgYnkgdGhlIGhvcGUgb2YgcmV3YXJkCnRvIGJyaW5nIHRoZSBndWlsdHkgdG8gdHJpYWwgaXMgbGl0dGxlIGJldHRlciB0aGFuIG1ha2luZwpvbmUncyBsaXZpbmcgYnkgaGlnaHdheSByb2JiZXJ5LCBub25lIHRoZSBsZXNzIHRvIHJpZApvbmUncyBjb3VudHJ5IG9mIHRoZSBwZXN0cyB0aGF0IGduYXcgaXRzIHZpdGFscyBpcwpjb25kdWN0IHdvcnRoeSBvZiBjb21wYXJpc29uIHdpdGggdGhhdCBvZiBoZXJvZXMsCndobyBjaGFtcGlvbiB0aGVpciBjb3VudHJ5J3MgY2F1c2UgaW4gdGhlIGZpZWxkIG9mCmJhdHRsZS4gRm9yIHRoaXMgcmVhc29uIG1lbiB3aG8gd2VyZSBsZWFkZXJzIG9mIHRoZQpzdGF0ZSBoYXZlIG5vdCByZWZ1c2VkIHRvIHVuZGVydGFrZSB0aGlzIHBvcnRpb24gb2YKYW4gb3JhdG9yJ3MgZHV0eSwgYW5kIGV2ZW4geW91bmcgbWVuIG9mIGhpZ2ggcmFuawpoYXZlIGJlZW4gcmVnYXJkZWQgYXMgZ2l2aW5nIHRoZWlyIGNvdW50cnkgYSBwbGVkZ2UKb2YgdGhlaXIgZGV2b3Rpb24gYnkgYWNjdXNpbmcgYmFkIGNpdGl6ZW5zLCBzaW5jZSBpdAp3YXMgdGhvdWdodCB0aGF0IHRoZWlyIGhhdHJlZCBvZiBldmlsIGFuZCB0aGVpcgpyZWFkaW5lc3MgdG8gaW5jdXIgZW5taXR5IHdlcmUgcHJvb2ZzIG9mIHRoZWlyIGNvbmZpZGVuY2UgaW4gdGhlaXIgb3duIHJlY3RpdHVkZS48bWlsZXN0b25lIG49IjQiIHVuaXQ9InNlY3Rpb24iIC8+IFN1Y2ggYWN0aW9uIHdhcwp0YWtlbiBieSBIb3J0ZW5zaXVzLCB0aGUgTHVjdWxsaSwgU3VscGljaXVzLCBDaWNlcm8sCkNhZXNhciBhbmQgbWFueSBvdGhlcnMsIGFtb25nIHRoZW0gYm90aCB0aGUgQ2F0b3MsCm9mIHdob20gb25lIHdhcyBhY3R1YWxseSBjYWxsZWQgdGhlIFdpc2UsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+aS5lLjwvaGk+IENhdG8gdGhlIEVsZGVyLjwvbm90ZT4gd2hpbGUgaWYKdGhlIG90aGVyIGlzIG5vdCByZWdhcmRlZCBhcyB3aXNlLCBJIGRvIG5vdCBrbm93IG9mCmFueSB0aGF0IGNhbiBjbGFpbSB0aGUgdGl0bGUgYWZ0ZXIgaGltLiBPbiB0aGUgb3RoZXIKaGFuZCwgdGhpcyBzYW1lIG9yYXRvciBvZiBvdXJzIHdpbGwgbm90IGRlZmVuZCBhbGwgYW5kCnN1bmRyeTogdGhhdCBoYXZlbiBvZiBzYWZldHkgd2hpY2ggaGlzIGVsb3F1ZW5jZQpwcm92aWRlcyB3aWxsIG5ldmVyIGJlIG9wZW5lZCB0byBwaXJhdGVzIGFzIGl0IGlzIHRvCm90aGVycywgYW5kIGhlIHdpbGwgYmUgbGVkIHRvIHVuZGVydGFrZSBjYXNlcyBtYWlubHkKYnkgY29uc2lkZXJhdGlvbiBvZiB0aGVpciBuYXR1cmUuPG1pbGVzdG9uZSBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiBIb3dldmVyLCBzaW5jZQpvbmUgbWFuIGNhbm5vdCB1bmRlcnRha2UgdGhlIGNhc2VzIG9mIGFsbCBsaXRpZ2FudHMKd2hvIGFyZSBub3QsIGFzIG1hbnkgdW5kb3VidGVkbHkgYXJlLCBkaXNob25lc3QsIGhlCndpbGwgYmUgaW5mbHVlbmNlZCB0byBzb21lIGV4dGVudCBieSB0aGUgY2hhcmFjdGVyCm9mIHRoZSBwZXJzb25zIHdobyByZWNvbW1lbmQgY2xpZW50cyB0byBoaXMgcHJvdGVjdGlvbiBhbmQgYWxzbyBieSB0aGUgY2hhcmFjdGVyIG9mIHRoZSBsaXRpZ2FudHMKdGhlbXNlbHZlcywgYW5kIHdpbGwgYWxsb3cgaGltc2VsZiB0byBiZSBtb3ZlZCBieQoKPHBiIGlkPSJwLjQyMyIgLz4KCnRoZSB3aXNoZXMgb2YgYWxsIHZpcnR1b3VzIG1lbjsgZm9yIGEgZ29vZCBtYW4gd2lsbApuYXR1cmFsbHkgaGF2ZSBzdWNoIGZvciBoaXMgbW9zdCBpbnRpbWF0ZSBmcmllbmRzLgo8bWlsZXN0b25lIG49IjYiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IGhlIG11c3QgcHV0IGF3YXkgZnJvbSBoaW0gdHdvIGtpbmRzIG9mCnByZXRlbnRpb3VzIGRpc3BsYXksIHRoZSBvbmUgY29uc2lzdGluZyBpbiB0aGUKb2ZmaWNpb3VzIHByb2ZmZXJpbmcgb2YgaGlzIHNlcnZpY2VzIHRvIHRoZSBwb3dlcmZ1bAphZ2FpbnN0IHRob3NlIG9mIG1lYW5lciBwb3NpdGlvbiwgYW5kIHRoZSBvdGhlciwKd2hpY2ggaXMgZXZlbiBtb3JlIG9idHJ1c2l2ZSwgaW4gZGVsaWJlcmF0ZWx5IHN1cHBvcnRpbmcgaW5mZXJpb3JzIGFnYWluc3QgdGhvc2Ugb2YgaGlnaCBkZWdyZWUuIEZvciBhCmNhc2UgaXMgbm90IHJlbmRlcmVkIGVpdGhlciBqdXN0IG9yIHRoZSByZXZlcnNlIGJ5IHRoZQpzb2NpYWwgcG9zaXRpb24gb2YgdGhlIHBhcnRpZXMgZW5nYWdlZC4gTm9yLCBhZ2FpbiwKd2lsbCBhIHNlbnNlIG9mIHNoYW1lIGRldGVyIGhpbSBmcm9tIHRocm93aW5nIG92ZXIKYSBjYXNlIHdoaWNoIGhlIGhhcyB1bmRlcnRha2VuIGluIHRoZSBiZWxpZWYgdGhhdCBpdApoYWQganVzdGljZSBvbiBpdHMgc2lkZSwgYnV0IHdoaWNoIGhpcyBzdHVkeSBvZiB0aGUKZmFjdHMgaGFzIHNob3duIHRvIGJlIHVuanVzdCwgYWx0aG91Z2ggYmVmb3JlIGRvaW5nCnNvIGhlIHNob3VsZCBnaXZlIGhpcyBjbGllbnQgaGlzIHRydWUgb3BpbmlvbiBvbiB0aGUKY2FzZS48bWlsZXN0b25lIG49IjciIHVuaXQ9InNlY3Rpb24iIC8+IEZvciwgaWYgd2UganVkZ2UgYXJpZ2h0LCB0aGVyZSBpcyBubyBncmVhdGVyCmJlbmVmaXQgdGhhdCB3ZSBjYW4gY29uZmVyIG9uIG91ciBjbGllbnRzIHRoYW4gdGhpcywKdGhhdCB3ZSBzaG91bGQgbm90IGNoZWF0IHRoZW0gYnkgZ2l2aW5nIHRoZW0gZW1wdHkKaG9wZXMgb2Ygc3VjY2Vzcy4gT24gdGhlIG90aGVyIGhhbmQsIG5vIGNsaWVudCB0aGF0CmRvZXMgbm90IHRha2UgaGlzIGFkdm9jYXRlIGludG8gaGlzIGNvdW5zZWwgZGVzZXJ2ZXMKdGhhdCBhZHZvY2F0ZSdzIGFzc2lzdGFuY2UsIGFuZCBpdCBpcyBjZXJ0YWlubHkgdW53b3J0aHkKb2Ygb3VyIGlkZWFsIG9yYXRvciB0aGF0IGhlIHNob3VsZCB3aXR0aW5nbHkgZGVmZW5kCmluanVzdGljZS4gRm9yIGlmIGhlIGlzIGxlZCB0byBkZWZlbmQgd2hhdCBpcyBmYWxzZQpieSBhbnkgb2YgdGhlIG1vdGl2ZXMgd2hpY2ggSSBtZW50aW9uZWQgYWJvdmUsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5YSUkuIGkuIDM2Ljwvbm90ZT4gaGlzCm93biBhY3Rpb24gd2lsbCBzdGlsbCBiZSBob25vdXJhYmxlLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['12.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['12.7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gb3VyIG9yYXRvciBoYXMgZGV2ZWxvcGVkIGhpcyBzdHJlbmd0aAp0byBzdWNoIGEgcGl0Y2ggdGhhdCBpdCBpcyBlcXVhbCB0byBldmVyeSBraW5kIG9mIGNvbmZhY3QgaW4gd2hpY2ggaGUgbWF5IGJlIGNhbGxlZCB1cG9uIHRvIGJlYXIgaGlzIHBhcnQsCmhpcyBmaXJzdCBjb25zaWRlcmF0aW9uIHNob3VsZCBiZSB0byBleGVyY2lzZSBjYXJlIGluCnRoZSBjaG9pY2Ugb2YgdGhlIGNhc2VzIHdoaWNoIGhlIHByb3Bvc2VzIHRvIHVuZGVydGFrZS4gQSBnb29kIG1hbiB3aWxsIHVuZG91YnRlZGx5IHByZWZlciBkZWZlbmNlCnRvIHByb3NlY3V0aW9uLCBidXQgaGUgd2lsbCBub3QgaGF2ZSBzdWNoIGEgcm9vdGVkCm9iamVjdGlvbiB0byB0aGUgdGFzayBvZiBhY2N1c2VyIGFzIHRvIGRpc3JlZ2FyZCBoaXMKZHV0eSB0b3dhcmRzIHRoZSBzdGF0ZSBvciB0b3dhcmRzIGluZGl2aWR1YWxzIGFuZApyZWZ1c2UgdG8gY2FsbCBhbnkgbWFuIHRvIHJlbmRlciBhbiBhY2NvdW50IG9mIGhpcwp3YXkgb2YgbGlmZS4gRm9yIHRoZSBsYXdzIHRoZW1zZWx2ZXMgd291bGQgYmUKcG93ZXJsZXNzIHdpdGhvdXQgdGhlIGFzc2lzdGFuY2Ugb2YgYWR2b2NhdGVzIGVxdWFsCnRvIHRoZSB0YXNrIG9mIHN1cHBvcnRpbmcgdGhlbTsgYW5kIHRvIHJlZ2FyZCBpdCBhcyBhCnNpbiB0byBkZW1hbmQgdGhlIHB1bmlzaG1lbnQgb2YgY3JpbWUgaXMgYWxtb3N0IGVxdWl2YWxlbnQgdG8gdGhlIHNhbmN0aW9uaW5nIG9mIGNyaW1lLCB3aGlsZSBpdCBpcyBjZXJ0YWlubHkKY29udHJhcnkgdG8gdGhlIGludGVyZXN0IG9mIHRoZSBnb29kIHRvIGdpdmUgdGhlCndpY2tlZCBmcmVlIGxlYXZlIHRvIHdvcmsgdGhlaXIgd2lsbC48L3RyYW5zbGF0aW9uPg=="
translation['12.7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBUaGVyZWZvcmUsIG91cgpvcmF0b3Igd2lsbCBub3Qgc3VmZmVyIHRoZSBjb21wbGFpbnRzIG9mIG91ciBhbGxpZXMsIHRoZQpkZWF0aCBvZiBmcmllbmRzIG9yIGtpbnNtZW4sIG9yIGNvbnNwaXJhY2llcyB0aGF0CnRocmVhdGVuIHRoZSBjb21tb24gd2VhbCB0byBnbyB1bmF2ZW5nZWQsIHdoaWxlCmhpcyBjb25kdWN0IHdpbGwgYmUgZ292ZXJuZWQgbm90IGJ5IGEgcGFzc2lvbiB0bwpzZWN1cmUgdGhlIHB1bmlzaG1lbnQgb2YgdGhlIGd1aWx0eSwgYnV0IGJ5IHRoZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDIxIiAvPgoKZGVzaXJlIHRvIGNvcnJlY3QgdmljZSBhbmQgcmVmb3JtIG1vcmFscy4gRm9yIGZlYXIKaXMgdGhlIG9ubHkgbWVhbnMgb2YgcmVzdHJhaW5pbmcgdGhvc2Ugd2hvIGNhbm5vdApiZSBsZWQgdG8gYmV0dGVyIHdheXMgYnkgdGhlIHZvaWNlIG9mIHJlYXNvbi48L3RyYW5zbGF0aW9uPg=="
translation['12.7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBDb25zZXF1ZW50bHksIHdoaWxlIHRvIGRldm90ZSBvbmUncyBsaWZlIHRvIHRoZSB0YXNrIG9mCmFjY3VzYXRpb24sIGFuZCB0byBiZSB0ZW1wdGVkIGJ5IHRoZSBob3BlIG9mIHJld2FyZAp0byBicmluZyB0aGUgZ3VpbHR5IHRvIHRyaWFsIGlzIGxpdHRsZSBiZXR0ZXIgdGhhbiBtYWtpbmcKb25lJ3MgbGl2aW5nIGJ5IGhpZ2h3YXkgcm9iYmVyeSwgbm9uZSB0aGUgbGVzcyB0byByaWQKb25lJ3MgY291bnRyeSBvZiB0aGUgcGVzdHMgdGhhdCBnbmF3IGl0cyB2aXRhbHMgaXMKY29uZHVjdCB3b3J0aHkgb2YgY29tcGFyaXNvbiB3aXRoIHRoYXQgb2YgaGVyb2VzLAp3aG8gY2hhbXBpb24gdGhlaXIgY291bnRyeSdzIGNhdXNlIGluIHRoZSBmaWVsZCBvZgpiYXR0bGUuIEZvciB0aGlzIHJlYXNvbiBtZW4gd2hvIHdlcmUgbGVhZGVycyBvZiB0aGUKc3RhdGUgaGF2ZSBub3QgcmVmdXNlZCB0byB1bmRlcnRha2UgdGhpcyBwb3J0aW9uIG9mCmFuIG9yYXRvcidzIGR1dHksIGFuZCBldmVuIHlvdW5nIG1lbiBvZiBoaWdoIHJhbmsKaGF2ZSBiZWVuIHJlZ2FyZGVkIGFzIGdpdmluZyB0aGVpciBjb3VudHJ5IGEgcGxlZGdlCm9mIHRoZWlyIGRldm90aW9uIGJ5IGFjY3VzaW5nIGJhZCBjaXRpemVucywgc2luY2UgaXQKd2FzIHRob3VnaHQgdGhhdCB0aGVpciBoYXRyZWQgb2YgZXZpbCBhbmQgdGhlaXIKcmVhZGluZXNzIHRvIGluY3VyIGVubWl0eSB3ZXJlIHByb29mcyBvZiB0aGVpciBjb25maWRlbmNlIGluIHRoZWlyIG93biByZWN0aXR1ZGUuPC90cmFuc2xhdGlvbj4="
translation['12.7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBTdWNoIGFjdGlvbiB3YXMKdGFrZW4gYnkgSG9ydGVuc2l1cywgdGhlIEx1Y3VsbGksIFN1bHBpY2l1cywgQ2ljZXJvLApDYWVzYXIgYW5kIG1hbnkgb3RoZXJzLCBhbW9uZyB0aGVtIGJvdGggdGhlIENhdG9zLApvZiB3aG9tIG9uZSB3YXMgYWN0dWFsbHkgY2FsbGVkIHRoZSBXaXNlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5pLmUuPC9oaT4gQ2F0byB0aGUgRWxkZXIuPC9ub3RlPiB3aGlsZSBpZgp0aGUgb3RoZXIgaXMgbm90IHJlZ2FyZGVkIGFzIHdpc2UsIEkgZG8gbm90IGtub3cgb2YKYW55IHRoYXQgY2FuIGNsYWltIHRoZSB0aXRsZSBhZnRlciBoaW0uIE9uIHRoZSBvdGhlcgpoYW5kLCB0aGlzIHNhbWUgb3JhdG9yIG9mIG91cnMgd2lsbCBub3QgZGVmZW5kIGFsbCBhbmQKc3VuZHJ5OiB0aGF0IGhhdmVuIG9mIHNhZmV0eSB3aGljaCBoaXMgZWxvcXVlbmNlCnByb3ZpZGVzIHdpbGwgbmV2ZXIgYmUgb3BlbmVkIHRvIHBpcmF0ZXMgYXMgaXQgaXMgdG8Kb3RoZXJzLCBhbmQgaGUgd2lsbCBiZSBsZWQgdG8gdW5kZXJ0YWtlIGNhc2VzIG1haW5seQpieSBjb25zaWRlcmF0aW9uIG9mIHRoZWlyIG5hdHVyZS48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5pLmUuPC9oaT4gQ2F0byB0aGUgRWxkZXIuPC90cmFuc2xhdGlvbj4="
translation['12.7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiBIb3dldmVyLCBzaW5jZQpvbmUgbWFuIGNhbm5vdCB1bmRlcnRha2UgdGhlIGNhc2VzIG9mIGFsbCBsaXRpZ2FudHMKd2hvIGFyZSBub3QsIGFzIG1hbnkgdW5kb3VidGVkbHkgYXJlLCBkaXNob25lc3QsIGhlCndpbGwgYmUgaW5mbHVlbmNlZCB0byBzb21lIGV4dGVudCBieSB0aGUgY2hhcmFjdGVyCm9mIHRoZSBwZXJzb25zIHdobyByZWNvbW1lbmQgY2xpZW50cyB0byBoaXMgcHJvdGVjdGlvbiBhbmQgYWxzbyBieSB0aGUgY2hhcmFjdGVyIG9mIHRoZSBsaXRpZ2FudHMKdGhlbXNlbHZlcywgYW5kIHdpbGwgYWxsb3cgaGltc2VsZiB0byBiZSBtb3ZlZCBieQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDIzIiAvPgoKdGhlIHdpc2hlcyBvZiBhbGwgdmlydHVvdXMgbWVuOyBmb3IgYSBnb29kIG1hbiB3aWxsCm5hdHVyYWxseSBoYXZlIHN1Y2ggZm9yIGhpcyBtb3N0IGludGltYXRlIGZyaWVuZHMuCjwvdHJhbnNsYXRpb24+"
translation['12.7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBoZSBtdXN0IHB1dCBhd2F5IGZyb20gaGltIHR3byBraW5kcyBvZgpwcmV0ZW50aW91cyBkaXNwbGF5LCB0aGUgb25lIGNvbnNpc3RpbmcgaW4gdGhlCm9mZmljaW91cyBwcm9mZmVyaW5nIG9mIGhpcyBzZXJ2aWNlcyB0byB0aGUgcG93ZXJmdWwKYWdhaW5zdCB0aG9zZSBvZiBtZWFuZXIgcG9zaXRpb24sIGFuZCB0aGUgb3RoZXIsCndoaWNoIGlzIGV2ZW4gbW9yZSBvYnRydXNpdmUsIGluIGRlbGliZXJhdGVseSBzdXBwb3J0aW5nIGluZmVyaW9ycyBhZ2FpbnN0IHRob3NlIG9mIGhpZ2ggZGVncmVlLiBGb3IgYQpjYXNlIGlzIG5vdCByZW5kZXJlZCBlaXRoZXIganVzdCBvciB0aGUgcmV2ZXJzZSBieSB0aGUKc29jaWFsIHBvc2l0aW9uIG9mIHRoZSBwYXJ0aWVzIGVuZ2FnZWQuIE5vciwgYWdhaW4sCndpbGwgYSBzZW5zZSBvZiBzaGFtZSBkZXRlciBoaW0gZnJvbSB0aHJvd2luZyBvdmVyCmEgY2FzZSB3aGljaCBoZSBoYXMgdW5kZXJ0YWtlbiBpbiB0aGUgYmVsaWVmIHRoYXQgaXQKaGFkIGp1c3RpY2Ugb24gaXRzIHNpZGUsIGJ1dCB3aGljaCBoaXMgc3R1ZHkgb2YgdGhlCmZhY3RzIGhhcyBzaG93biB0byBiZSB1bmp1c3QsIGFsdGhvdWdoIGJlZm9yZSBkb2luZwpzbyBoZSBzaG91bGQgZ2l2ZSBoaXMgY2xpZW50IGhpcyB0cnVlIG9waW5pb24gb24gdGhlCmNhc2UuPC90cmFuc2xhdGlvbj4="
translation['12.7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IsIGlmIHdlIGp1ZGdlIGFyaWdodCwgdGhlcmUgaXMgbm8gZ3JlYXRlcgpiZW5lZml0IHRoYXQgd2UgY2FuIGNvbmZlciBvbiBvdXIgY2xpZW50cyB0aGFuIHRoaXMsCnRoYXQgd2Ugc2hvdWxkIG5vdCBjaGVhdCB0aGVtIGJ5IGdpdmluZyB0aGVtIGVtcHR5CmhvcGVzIG9mIHN1Y2Nlc3MuIE9uIHRoZSBvdGhlciBoYW5kLCBubyBjbGllbnQgdGhhdApkb2VzIG5vdCB0YWtlIGhpcyBhZHZvY2F0ZSBpbnRvIGhpcyBjb3Vuc2VsIGRlc2VydmVzCnRoYXQgYWR2b2NhdGUncyBhc3Npc3RhbmNlLCBhbmQgaXQgaXMgY2VydGFpbmx5IHVud29ydGh5Cm9mIG91ciBpZGVhbCBvcmF0b3IgdGhhdCBoZSBzaG91bGQgd2l0dGluZ2x5IGRlZmVuZAppbmp1c3RpY2UuIEZvciBpZiBoZSBpcyBsZWQgdG8gZGVmZW5kIHdoYXQgaXMgZmFsc2UKYnkgYW55IG9mIHRoZSBtb3RpdmVzIHdoaWNoIEkgbWVudGlvbmVkIGFib3ZlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5YSUkuIGkuIDM2Ljwvbm90ZT4gaGlzCm93biBhY3Rpb24gd2lsbCBzdGlsbCBiZSBob25vdXJhYmxlLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjgiIHVuaXQ9InNlY3Rpb24iIC8+SXQgaXMgYW4gb3BlbiBxdWVzdGlvbiB3aGV0aGVyIGhlIHNob3VsZCBuZXZlcgpkZW1hbmQgYSBmZWUgZm9yIGhpcyBzZXJ2aWNlcy4gVG8gZGVjaWRlIHRoZQpxdWVzdGlvbiBhdCBmaXJzdCBzaWdodCB3b3VsZCBiZSB0aGUgYWN0IG9mIGEgZm9vbC4KRm9yIHdlIGFsbCBrbm93IHRoYXQgYnkgZmFyIHRoZSBtb3N0IGhvbm91cmFibGUKY291cnNlLCBhbmQgdGhlIG9uZSB3aGljaCBpcyBtb3N0IGluIGtlZXBpbmcgd2l0aCBhCmxpYmVyYWwgZWR1Y2F0aW9uIGFuZCB0aGF0IHRlbXBlciBvZiBtaW5kIHdoaWNoIHdlCmRlc2lkZXJhdGUsIGlzIG5vdCB0byBzZWxsIG91ciBzZXJ2aWNlcyBub3IgdG8gZGViYXNlCnRoZSB2YWx1ZSBvZiBzdWNoIGEgYm9vbiBhcyBlbG9xdWVuY2UsIHNpbmNlIHRoZXJlCmFyZSBub3QgYSBmZXcgdGhpbmdzIHdoaWNoIGNvbWUgdG8gYmUgcmVnYXJkZWQgYXMKCjxwYiBpZD0icC40MjUiIC8+CgpjaGVhcCwgbWVyZWx5IGJlY2F1c2UgdGhleSBoYXZlIGEgcHJpY2Ugc2V0IHVwb24KdGhlbS48bWlsZXN0b25lIG49IjkiIHVuaXQ9InNlY3Rpb24iIC8+IFRoaXMgbXVjaCBldmVuIHRoZSBibGluZCBjYW4gc2VlLCBhcyB0aGUKc2F5aW5nIGlzLCBhbmQgbm8gb25lIHdobyBpcyB0aGUgcG9zc2Vzc29yIG9mIHN1ZmZpY2llbnQKd2VhbHRoIHRvIHNhdGlzZnkgaGlzIG5lZWRzIChhbmQgdGhhdCBkb2VzIG5vdCBpbXBseQphbnkgZ3JlYXQgb3B1bGVuY2UpIHdpbGwgc2VlayB0byBzZWN1cmUgYW4gaW5jb21lCmJ5IHN1Y2ggbWV0aG9kcyB3aXRob3V0IGxheWluZyBoaW1zZWxmIG9wZW4gdG8gdGhlCmNoYXJnZSBvZiBtZWFubmVzcy4gT24gdGhlIG90aGVyIGhhbmQsIGlmIGhpcwpkb21lc3RpYyBjaXJjdW1zdGFuY2VzIGFyZSBzdWNoIGFzIHRvIHJlcXVpcmUgc29tZQphZGRpdGlvbiB0byBoaXMgaW5jb21lIHRvIGVuYWJsZSBoaW0gdG8gbWVldCB0aGUKbmVjZXNzYXJ5IGRlbWFuZHMgdXBvbiBoaXMgcHVyc2UsIHRoZXJlIGlzIG5vdCBhCnBoaWxvc29waGVyIHdobyB3b3VsZCBmb3JiaWQgaGltIHRvIGFjY2VwdCB0aGlzIGZvcm0Kb2YgcmVjb21wZW5zZSBmb3IgaGlzIHNlcnZpY2VzLCBzaW5jZSBjb2xsZWN0aW9ucyB3ZXJlCm1hZGUgZXZlbiBvbiBiZWhhbGYgb2YgU29jcmF0ZXMsIGFuZCBaZW5vLCBDbGVhbnRoZXMKYW5kIENocnlzaXBwdXMgdG9vayBmZWVzIGZyb20gdGhlaXIgcHVwaWxzLjxtaWxlc3RvbmUgbj0iMTAiIHVuaXQ9InNlY3Rpb24iIC8+IE5vcgpjYW4gSSBzZWUgaG93IHdlIGNhbiB0dXJuIGEgbW9yZSBob25lc3QgcGVubnkgdGhhbgpieSBwZXJmb3JtYW5jZSBvZiB0aGUgbW9zdCBob25vdXJhYmxlIG9mIHRhc2tzIGFuZApieSBhY2NlcHRpbmcgbW9uZXkgZnJvbSB0aG9zZSB0byB3aG9tIHdlIGhhdmUKcmVuZGVyZWQgdGhlIG1vc3Qgc2lnbmFsIHNlcnZpY2VzIGFuZCB3aG8sIGlmIHRoZXkKbWFkZSBubyByZXR1cm4gZm9yIHdoYXQgd2UgaGF2ZSBkb25lIGZvciB0aGVtLAp3b3VsZCBzaG93IHRoZW1zZWx2ZXMgdW5kZXNlcnZpbmcgdG8gaGF2ZSBiZWVuCmRlZmVuZGVkIGJ5IHVzLiBOYXksIGl0IGlzIG5vdCBvbmx5IGp1c3QsIGJ1dApuZWNlc3NhcnkgdGhhdCB0aGlzIHNob3VsZCBiZSBzbywgc2luY2UgdGhlIGR1dGllcyBvZgphZHZvY2FjeSBhbmQgdGhlIGJlc3Rvd2FsIG9mIGV2ZXJ5IG1pbnV0ZSBvZiBvdXIKdGltZSBvbiB0aGUgYWZmYWlycyBvZiBvdGhlcnMgZGVwcml2ZSB1cyBvZiBhbGwgb3RoZXIKbWVhbnMgb2YgbWFraW5nIG1vbmV5LjxtaWxlc3RvbmUgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCB3ZSBtdXN0IG5vbmUgdGhlCmxlc3Mgb2JzZXJ2ZSB0aGUgaGFwcHkgbWVhbiwgYW5kIGl0IG1ha2VzIG5vIHNtYWxsCmRpZmZlcmVuY2UgZnJvbSB3aG9tIHdlIHRha2UgcGF5bWVudCwgd2hhdCBwYXltZW50IHdlIGRlbWFuZCwgYW5kIGhvdyBsb25nIHdlIGNvbnRpbnVlIHRvIGRvCnNvLiBBcyBmb3IgdGhlIHBpcmF0aWNhbCBwcmFjdGljZSBvZiBiYXJnYWluaW5nIGFuZAp0aGUgc2NhbmRhbG91cyB0cmFmZmljIG9mIHRob3NlIHdobyBwcm9wb3J0aW9uIHRoZWlyCmZlZXMgdG8gdGhlIHBlcmlsIGluIHdoaWNoIHRoZWlyIHdvdWxkLWJlIGNsaWVudApzdGFuZHMsIHN1Y2ggYSBwcm9jZWR1cmUgd2lsbCBiZSBlc2NoZXdlZCBldmVuIGJ5CnRob3NlIHdobyBhcmUgbW9yZSB0aGFuIGhhbGYgc2NvdW5kcmVscywgbW9yZQplc3BlY2lhbGx5IHNpbmNlIHRoZSBhZHZvY2F0ZSB3aG8gZGV2b3RlcyBoaW1zZWxmCgo8cGIgaWQ9InAuNDI3IiAvPgoKdG8gdGhlIGRlZmVuY2Ugb2YgZ29vZCBtZW4gYW5kIHdvcnRoeSBjYXVzZXMgd2lsbApoYXZlIG5vdGhpbmcgdG8gZmVhciBmcm9tIGluZ3JhdGl0dWRlLiBBbmQgZXZlbiBpZgphIGNsaWVudCBzaG91bGQgcHJvdmUgdW5ncmF0ZWZ1bCwgaXQgaXMgYmV0dGVyIHRoYXQgaGUKc2hvdWxkIGJlIHRoZSBzaW5uZXIgYW5kIG5vdCBvdXIgb3JhdG9yLjxtaWxlc3RvbmUgbj0iMTIiIHVuaXQ9InNlY3Rpb24iIC8+IFRvIGNvbmVsdWRlLCB0aGVuLCB0aGUgb3JhdG9yIHdpbGwgbm90IHNlZWsgdG8gbWFrZSBtb3JlCm1vbmV5IHRoYW4gaXMgc3VmZmljaWVudCBmb3IgaGlzIG5lZWRzLCBhbmQgZXZlbiBpZiBoZQppcyBwb29yLCBoZSB3aWxsIG5vdCByZWdhcmQgaGlzIHBheW1lbnQgYXMgYSBmZWUsIGJ1dApyYXRoZXIgYXMgdGhlIGV4cHJlc3Npb24gb2YgdGhlIHByaW5jaXBsZSB0aGF0IG9uZQpnb29kIHR1cm4gZGVzZXJ2ZXMgYW5vdGhlciwgc2luY2UgaGUgd2lsbCBiZSB3ZWxsCmF3YXJlIHRoYXQgaGUgaGFzIGNvbmZlcnJlZCBmYXIgbW9yZSB0aGFuIGhlIHJlY2VpdmVzLgpGb3IgaXQgZG9lcyBub3QgZm9sbG93IHRoYXQgYmVjYXVzZSBoaXMgc2VydmljZXMKb3VnaHQgbm90IHRvIGJlIHNvbGQsIHRoZXkgc2hvdWxkIHRoZXJlZm9yZSBiZQp1bnJlbXVuZXJhdGVkLiBGaW5hbGx5LCBncmF0aXR1ZGUgaXMgcHJpbWFyaWx5IHRoZQpidXNpbmVzcyBvZiB0aGUgZGVidG9yLjwvcD4KCjwvdHJhbnNsYXRpb24+"
translation['12.7.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkl0IGlzIGFuIG9wZW4gcXVlc3Rpb24gd2hldGhlciBoZSBzaG91bGQgbmV2ZXIKZGVtYW5kIGEgZmVlIGZvciBoaXMgc2VydmljZXMuIFRvIGRlY2lkZSB0aGUKcXVlc3Rpb24gYXQgZmlyc3Qgc2lnaHQgd291bGQgYmUgdGhlIGFjdCBvZiBhIGZvb2wuCkZvciB3ZSBhbGwga25vdyB0aGF0IGJ5IGZhciB0aGUgbW9zdCBob25vdXJhYmxlCmNvdXJzZSwgYW5kIHRoZSBvbmUgd2hpY2ggaXMgbW9zdCBpbiBrZWVwaW5nIHdpdGggYQpsaWJlcmFsIGVkdWNhdGlvbiBhbmQgdGhhdCB0ZW1wZXIgb2YgbWluZCB3aGljaCB3ZQpkZXNpZGVyYXRlLCBpcyBub3QgdG8gc2VsbCBvdXIgc2VydmljZXMgbm9yIHRvIGRlYmFzZQp0aGUgdmFsdWUgb2Ygc3VjaCBhIGJvb24gYXMgZWxvcXVlbmNlLCBzaW5jZSB0aGVyZQphcmUgbm90IGEgZmV3IHRoaW5ncyB3aGljaCBjb21lIHRvIGJlIHJlZ2FyZGVkIGFzCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40MjUiIC8+CgpjaGVhcCwgbWVyZWx5IGJlY2F1c2UgdGhleSBoYXZlIGEgcHJpY2Ugc2V0IHVwb24KdGhlbS48L3RyYW5zbGF0aW9uPg=="
translation['12.7.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBUaGlzIG11Y2ggZXZlbiB0aGUgYmxpbmQgY2FuIHNlZSwgYXMgdGhlCnNheWluZyBpcywgYW5kIG5vIG9uZSB3aG8gaXMgdGhlIHBvc3Nlc3NvciBvZiBzdWZmaWNpZW50CndlYWx0aCB0byBzYXRpc2Z5IGhpcyBuZWVkcyAoYW5kIHRoYXQgZG9lcyBub3QgaW1wbHkKYW55IGdyZWF0IG9wdWxlbmNlKSB3aWxsIHNlZWsgdG8gc2VjdXJlIGFuIGluY29tZQpieSBzdWNoIG1ldGhvZHMgd2l0aG91dCBsYXlpbmcgaGltc2VsZiBvcGVuIHRvIHRoZQpjaGFyZ2Ugb2YgbWVhbm5lc3MuIE9uIHRoZSBvdGhlciBoYW5kLCBpZiBoaXMKZG9tZXN0aWMgY2lyY3Vtc3RhbmNlcyBhcmUgc3VjaCBhcyB0byByZXF1aXJlIHNvbWUKYWRkaXRpb24gdG8gaGlzIGluY29tZSB0byBlbmFibGUgaGltIHRvIG1lZXQgdGhlCm5lY2Vzc2FyeSBkZW1hbmRzIHVwb24gaGlzIHB1cnNlLCB0aGVyZSBpcyBub3QgYQpwaGlsb3NvcGhlciB3aG8gd291bGQgZm9yYmlkIGhpbSB0byBhY2NlcHQgdGhpcyBmb3JtCm9mIHJlY29tcGVuc2UgZm9yIGhpcyBzZXJ2aWNlcywgc2luY2UgY29sbGVjdGlvbnMgd2VyZQptYWRlIGV2ZW4gb24gYmVoYWxmIG9mIFNvY3JhdGVzLCBhbmQgWmVubywgQ2xlYW50aGVzCmFuZCBDaHJ5c2lwcHVzIHRvb2sgZmVlcyBmcm9tIHRoZWlyIHB1cGlscy48L3RyYW5zbGF0aW9uPg=="
translation['12.7.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz4gTm9yCmNhbiBJIHNlZSBob3cgd2UgY2FuIHR1cm4gYSBtb3JlIGhvbmVzdCBwZW5ueSB0aGFuCmJ5IHBlcmZvcm1hbmNlIG9mIHRoZSBtb3N0IGhvbm91cmFibGUgb2YgdGFza3MgYW5kCmJ5IGFjY2VwdGluZyBtb25leSBmcm9tIHRob3NlIHRvIHdob20gd2UgaGF2ZQpyZW5kZXJlZCB0aGUgbW9zdCBzaWduYWwgc2VydmljZXMgYW5kIHdobywgaWYgdGhleQptYWRlIG5vIHJldHVybiBmb3Igd2hhdCB3ZSBoYXZlIGRvbmUgZm9yIHRoZW0sCndvdWxkIHNob3cgdGhlbXNlbHZlcyB1bmRlc2VydmluZyB0byBoYXZlIGJlZW4KZGVmZW5kZWQgYnkgdXMuIE5heSwgaXQgaXMgbm90IG9ubHkganVzdCwgYnV0Cm5lY2Vzc2FyeSB0aGF0IHRoaXMgc2hvdWxkIGJlIHNvLCBzaW5jZSB0aGUgZHV0aWVzIG9mCmFkdm9jYWN5IGFuZCB0aGUgYmVzdG93YWwgb2YgZXZlcnkgbWludXRlIG9mIG91cgp0aW1lIG9uIHRoZSBhZmZhaXJzIG9mIG90aGVycyBkZXByaXZlIHVzIG9mIGFsbCBvdGhlcgptZWFucyBvZiBtYWtpbmcgbW9uZXkuPC90cmFuc2xhdGlvbj4="
translation['12.7.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHdlIG11c3Qgbm9uZSB0aGUKbGVzcyBvYnNlcnZlIHRoZSBoYXBweSBtZWFuLCBhbmQgaXQgbWFrZXMgbm8gc21hbGwKZGlmZmVyZW5jZSBmcm9tIHdob20gd2UgdGFrZSBwYXltZW50LCB3aGF0IHBheW1lbnQgd2UgZGVtYW5kLCBhbmQgaG93IGxvbmcgd2UgY29udGludWUgdG8gZG8Kc28uIEFzIGZvciB0aGUgcGlyYXRpY2FsIHByYWN0aWNlIG9mIGJhcmdhaW5pbmcgYW5kCnRoZSBzY2FuZGFsb3VzIHRyYWZmaWMgb2YgdGhvc2Ugd2hvIHByb3BvcnRpb24gdGhlaXIKZmVlcyB0byB0aGUgcGVyaWwgaW4gd2hpY2ggdGhlaXIgd291bGQtYmUgY2xpZW50CnN0YW5kcywgc3VjaCBhIHByb2NlZHVyZSB3aWxsIGJlIGVzY2hld2VkIGV2ZW4gYnkKdGhvc2Ugd2hvIGFyZSBtb3JlIHRoYW4gaGFsZiBzY291bmRyZWxzLCBtb3JlCmVzcGVjaWFsbHkgc2luY2UgdGhlIGFkdm9jYXRlIHdobyBkZXZvdGVzIGhpbXNlbGYKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQyNyIgLz4KCnRvIHRoZSBkZWZlbmNlIG9mIGdvb2QgbWVuIGFuZCB3b3J0aHkgY2F1c2VzIHdpbGwKaGF2ZSBub3RoaW5nIHRvIGZlYXIgZnJvbSBpbmdyYXRpdHVkZS4gQW5kIGV2ZW4gaWYKYSBjbGllbnQgc2hvdWxkIHByb3ZlIHVuZ3JhdGVmdWwsIGl0IGlzIGJldHRlciB0aGF0IGhlCnNob3VsZCBiZSB0aGUgc2lubmVyIGFuZCBub3Qgb3VyIG9yYXRvci48L3RyYW5zbGF0aW9uPg=="
translation['12.7.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gVG8gY29uZWx1ZGUsIHRoZW4sIHRoZSBvcmF0b3Igd2lsbCBub3Qgc2VlayB0byBtYWtlIG1vcmUKbW9uZXkgdGhhbiBpcyBzdWZmaWNpZW50IGZvciBoaXMgbmVlZHMsIGFuZCBldmVuIGlmIGhlCmlzIHBvb3IsIGhlIHdpbGwgbm90IHJlZ2FyZCBoaXMgcGF5bWVudCBhcyBhIGZlZSwgYnV0CnJhdGhlciBhcyB0aGUgZXhwcmVzc2lvbiBvZiB0aGUgcHJpbmNpcGxlIHRoYXQgb25lCmdvb2QgdHVybiBkZXNlcnZlcyBhbm90aGVyLCBzaW5jZSBoZSB3aWxsIGJlIHdlbGwKYXdhcmUgdGhhdCBoZSBoYXMgY29uZmVycmVkIGZhciBtb3JlIHRoYW4gaGUgcmVjZWl2ZXMuCkZvciBpdCBkb2VzIG5vdCBmb2xsb3cgdGhhdCBiZWNhdXNlIGhpcyBzZXJ2aWNlcwpvdWdodCBub3QgdG8gYmUgc29sZCwgdGhleSBzaG91bGQgdGhlcmVmb3JlIGJlCnVucmVtdW5lcmF0ZWQuIEZpbmFsbHksIGdyYXRpdHVkZSBpcyBwcmltYXJpbHkgdGhlCmJ1c2luZXNzIG9mIHRoZSBkZWJ0b3IuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOCIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+V2UgaGF2ZSBuZXh0IHRvIGNvbnNpZGVyIGhvdyBhIGNhc2Ugc2hvdWxkCmJlIHN0dWRpZWQsIHNpbmNlIHN1Y2ggc3R1ZHkgaXMgdGhlIGZvdW5kYXRpb24gb2YKb3JhdG9yeS4gVGhlcmUgaXMgbm8gb25lIHNvIGRlc3RpdHV0ZSBvZiBhbGwgdGFsZW50CmFzLCBhZnRlciBtYWtpbmcgaGltc2VsZiB0aG9yb3VnaGx5IGZhbWlsaWFyIHdpdGggYWxsCnRoZSBmYWN0cyBvZiBoaXMgY2FzZSwgdG8gYmUgdW5hYmxlIGF0IGxlYXN0IHRvIGNvbW11bmljYXRlIHRob3NlIGZhY3RzIHRvIHRoZSBqdWRnZS48bWlsZXN0b25lIG49IjIiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCB0aG9zZSB3aG8KZGV2b3RlIGFueSBzZXJpb3VzIGF0dGVudGlvbiB0byBzdWNoIHN0dWR5IGFyZSB2ZXJ5CmZldyBpbmRlZWQuIEZvciwgdG8gc2F5IG5vdGhpbmcgb2YgdGhvc2UgY2FyZWxlc3MKYWR2b2NhdGVzIHdobyBhcmUgcXVpdGUgaW5kaWZmZXJlbnQgYXMgdG8gd2hhdCB0aGUKcGl2b3Qgb2YgdGhlIHdob2xlIGNhc2UgbWF5IGJlLCBwcm92aWRlZCBvbmx5IHRoZXJlCmFyZSBwb2ludHMgd2hpY2gsIHRob3VnaCBpcnJlbGV2YW50IHRvIHRoZSBjYXNlLCB3aWxsCmdpdmUgdGhlbSB0aGUgb3Bwb3J0dW5pdHkgb2YgZGVjbGFpbWluZyBpbiB0aHVuZGVyb3VzIHRvbmVzIG9uIHRoZSBjaGFyYWN0ZXIgb2YgcGVyc29ucyBpbnZvbHZlZCBvcgpkZXZlbG9waW5nIHNvbWUgY29tbW9ucGxhY2UsIHRoZXJlIGFyZSBzb21lIHdobwphcmUgc28gcGVydmVydGVkIGJ5IHZhbml0eSB0aGF0LCBvbiB0aGUgb2Z0LXJlcGVhdGVkCnByZXRleHQgdGhhdCB0aGV5IGFyZSBvY2N1cGllZCBieSBvdGhlciBidXNpbmVzcywKdGhleSBiaWQgdGhlaXIgY2xpZW50IGNvbWUgdG8gdGhlbSBvbiB0aGUgZGF5IHByZWNlZGluZyB0aGUgdHJpYWwgb3IgZWFybHkgb24gdGhlIG1vcm5pbmcgb2YgdGhlIGRheQppdHNlbGYsIGFuZCBzb21ldGltZXMgZXZlbiBib2FzdCB0aGF0IHRoZXkgbGVhcm50IHVwCnRoZWlyIGNhc2Ugd2hpbGUgc2l0dGluZyBpbiBjb3VydDs8bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+IHdoaWxlIG90aGVycyBieQoKPHBiIGlkPSJwLjQyOSIgLz4KCndheSBvZiBjcmVhdGluZyBhbiBpbXByZXNzaW9uIG9mIGV4dHJhb3JkaW5hcnkgdGFsZW50LAphbmQgdG8gbWFrZSBpdCBzZWVtIHRoYXQgdGhleSBhcmMgcXVpY2sgaW4gdGhlIHVwdGFrZSwgcHJldGVuZCB0aGF0IHRoZXkgaGF2ZSBncmFzcGVkIHRoZSBmYWN0cyBvZgp0aGUgY2FzZSBhbmQgdW5kZXJzdGFuZCB0aGUgc2l0dWF0aW9uIGFsbW9zdCBiZWZvcmUKdGhleSBoYXZlIGhlYXJkIHdoYXQgaXQgaXMsIGFuZCB0aGVuIGFmdGVyIGNoYW50aW5nCm91dCBzb21lIGxvbmcgYW5kIGZsdWVudCBkaXNjb3Vyc2Ugd2hpY2ggaGFzIG5vdWdodAp0byBkbyBlaXRoZXIgd2l0aCB0aGUganVkZ2Ugb3IgdGhlaXIgY2xpZW50LCBidXQKYXdha2VucyB0aGUgY2xhbW9yb3VzIGFwcGxhdXNlIG9mIHRoZSBhdWRpZW5jZSwKdGhleSBhcmUgZXNjb3J0ZWQgaG9tZSB0aHJvdWdoIHRoZSBmb3J1bSwgcGVyc3BpcmluZwphdCBldmVyeSBwb3JlIGFuZCBhdHRlbmRlZCBieSBmbG9ja3Mgb2YgZW50aHVzaWFzdGljCmZyaWVuZHMuPG1pbGVzdG9uZSBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBGdXJ0aGVyLCBJIHdvdWxkIG5vdCBldmVuIHRvbGVyYXRlIHRoZQphZmZlY3RhdGlvbiBvZiB0aG9zZSB3aG8gaW5zaXN0IHRoYXQgdGhlaXIgZnJpZW5kcywgYW5kCm5vdCB0aGVtc2VsdmVzLCBzaG91bGQgYmUgaW5zdHJ1Y3RlZCBpbiB0aGUgZmFjdHMKb2YgdGhlIGNhc2UsIHRob3VnaCB0aGlzIGlzIGEgbGVzcyBzZXJpb3VzIGV2aWwsIGlmIHRoZQpmcmllbmRzIGNhbiBiZSByZWxpZWQgdXBvbiB0byBsZWFybiBhbmQgc3VwcGx5IHRoZQpmYWN0cyBjb3JyZWN0bHkuIEJ1dCB3aG8gY2FuIGdpdmUgc3VjaCBlZmZlY3RpdmUKc3R1ZHkgdG8gdGhlIGNhc2UgYXMgdGhlIGFkdm9jYXRlIGhpbXNlbGY/IEhvdwpjYW4gdGhlIGludGVybWVkaWFyeSwgdGhlIGdvLWJldHdlZW4gb3IgaW50ZXJwcmV0ZXIsCmRldm90ZSBoaW1zZWxmIHdob2xlLWhlYXJ0ZWRseSB0byB0aGUgc3R1ZHkgb2Ygb3RoZXIKbWVuJ3MgY2FzZXMsIHdoZW4gdGhvc2Ugd2hvIGhhdmUgZ290IHRvIGRvIHRoZQphY3R1YWwgcGxlYWRpbmcgZG8gbm90IHRoaW5rIGl0IHdvcnRoIHdoaWxlIHRvIGdldAp1cCB0aGVpciBvd24/PG1pbGVzdG9uZSBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiBPbiB0aGUgb3RoZXIgaGFuZCwgaXQgaXMgYSBtb3N0CnBlcm5pY2lvdXMgcHJhY3RpY2UgdG8gcmVzdCBjb250ZW50IHdpdGggYSB3cml0dGVuCnN0YXRlbWVudCBvZiB0aGUgY2FzZSBjb21wb3NlZCBlaXRoZXIgYnkgdGhlIGxpdGlnYW50CndobyBiZXRha2VzIGhpbXNlbGYgdG8gYW4gYWR2b2NhdGUgYmVjYXVzZSBoZSBmaW5kcwp0aGF0IGhpcyBvd24gcG93ZXJzIGFyZSBub3QgZXF1YWwgdG8gdGhlIGNvbmR1Y3Qgb2YKaGlzIGNhc2UsIG9yIGJ5IHNvbWUgbWVtYmVyIG9mIHRoYXQgY2xhc3Mgb2YgbGVnYWwKYWR2aXNlcnM8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5BZHZvY2F0dXM8L2hpPiBpcyBoZXJlIHVzZWQgaW4gaXRzIG9yaWdpbmFsIHNlbnNlLiBCeSBRdWludGlsaWFuJ3MgdGltZSBpdCBoYWQgY29tZSBhbHNvIHRvIG1lYW4gPHF1b3RlPmFkdm9jYXRlLDwvcXVvdGU+IGFuZCBpcwpvZnRlbiBzbyB1c2VkIGJ5IGhpbSBlbHNld2hlcmUuPC9ub3RlPiB3aG8gYWRtaXQgdGhhdCB0aGV5IGFyZSBpbmNhcGFibGUgb2YgcGxlYWRpbmcsIGFuZCB0aGVuIHByb2NlZWQgdG8gdGFrZSB1cG9uIHRoZW1zZWx2ZXMgdGhlCm1vc3QgZGlmZmljdWx0IG9mIGFsbCB0aGUgdGFza3MgdGhhdCBjb25mcm9udCB0aGUgcGxlYWRlci4KRm9yIGlmIGEgbWFuIGlzIGNhcGFibGUgb2YganVkZ2luZyB3aGF0IHNob3VsZCBiZQpzYWlkLCB3aGF0IGNvbmNlYWxlZCwgd2hhdCBhdm9pZGVkLCBhbHRlcmVkIG9yIGV2ZW4KaW52ZW50ZWQsIHdoeSBzaG91bGQgaGUgbm90IGFwcGVhciBhcyBvcmF0b3IgaGltc2VsZiwKc2luY2UgaGUgcGVyZm9ybXMgdGhlIGZhciBtb3JlIGRpZmZpY3VsdCBmZWF0IG9mIG1ha2luZwoKPHBiIGlkPSJwLjQzMSIgLz4KCmFuIG9yYXRvcj88bWlsZXN0b25lIG49IjYiIHVuaXQ9InNlY3Rpb24iIC8+IFN1Y2ggcGVyc29ucyB3b3VsZCBub3QsIGhvd2V2ZXIsIGRvIHNvCm11Y2ggaGFybSBpZiB0aGV5IHdvdWxkIG9ubHkgcHV0IGRvd24gYWxsIHRoZQpmYWN0cyBhcyB0aGV5IG9jY3VycmVkLiBCdXQgYXMgaXQgaXMsIHRoZXkgYWRkIHN1Z2dlc3Rpb25zIG9mIHRoZWlyIG93biwgcHV0IHRoZWlyIG93biBjb25zdHJ1Y3Rpb24gb24KdGhlIGZhY3RzIGFuZCBpbnNlcnQgaW52ZW50aW9ucyB3aGljaCBhcmUgZmFyIG1vcmUKZGFtYWdpbmcgdGhhbiB0aGUgdW52YXJuaXNoZWQgdHJ1dGguIEFuZCB0aGVuCnRoZSBhZHZvY2F0ZSBhcyBhIHJ1bGUsIG9uIHJlY2VpdmluZyB0aGUgZG9jdW1lbnQsCnJlZ2FyZHMgaXQgYXMgYSBjcmltZSB0byBtYWtlIGFueSBhbHRlcmF0aW9uLCBhbmQKa2VlcHMgdG8gaXQgYXMgZmFpdGhmdWxseSBhcyBpZiBpdCB3ZXJlIGEgdGhlbWUgc2V0IGZvcgpkZWNsYW1hdGlvbiBpbiB0aGUgc2Nob29scy4gVGhlIHNlcXVlbCBpcyB0aGF0IHRoZXkKYXJlIHRyaXBwZWQgdXAgYW5kIGhhdmUgdG8gbGVhcm4gZnJvbSB0aGVpciBvcHBvbmVudHMgdGhlIGNhc2Ugd2hpY2ggdGhleSByZWZ1c2VkIHRvIGxlYXJuIGZyb20gdGhlaXIKb3duIGNsaWVudHMuPG1pbGVzdG9uZSBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBXZSBzaG91bGQgdGhlcmVmb3JlIGFib3ZlIGFsbCBhbGxvdwp0aGUgcGFydGllcyBjb25jZXJuZWQgYW1wbGUgdGltZSBmb3IgYW4gaW50ZXJ2aWV3IGluCmEgcGxhY2UgZnJlZSBmcm9tIGludGVycnVwdGlvbiwgYW5kIHNob3VsZCBldmVuCmV4aG9ydCB0aGVtIHRvIHNldCBmb3J0aCBvbiB0aGUgc3BvdCBhbGwgdGhlIGZhY3RzIGluCmFzIG1hbnkgd29yZHMgYXMgdGhleSBtYXkgY2hvb3NlIHRvIHVzZSBhbmQgYWxsb3dpbmcgdGhlbSB0byBnbyBhcyBmYXIgYmFjayBhcyB0aGV5IHBsZWFzZS4gRm9yIGl0IGlzCmxlc3Mgb2YgYSBkcmF3YmFjayB0byBsaXN0ZW4gdG8gYSBudW1iZXIgb2YgaXJyZWxldmFudApmYWN0cyB0aGFuIHRvIGJlIGxlZnQgaW4gaWdub3JhbmNlIG9mIGVzc2VudGlhbHMuCk1vcmVvdmVyLDxtaWxlc3RvbmUgbj0iOCIgdW5pdD0ic2VjdGlvbiIgLz4gdGhlIG9yYXRvciB3aWxsIG9mdGVuIGRldGVjdCBib3RoIHRoZSBldmlsCmFuZCBpdHMgcmVtZWR5IGluIGZhY3RzIHdoaWNoIHRoZSBsaXRpZ2FudCByZWdhcmRlZAphcyBkZXZvaWQgb2YgYWxsIGltcG9ydGFuY2UsIG9uZSB3YXkgb3IgdGhlIG90aGVyLgpGdXJ0aGVyLCB0aGUgYWR2b2NhdGUgd2hvIGhhcyBnb3QgdG8gcGxlYWQgdGhlIGNhc2UKc2hvdWxkIG5vdCBwdXQgc3VjaCBleGNlc3NpdmUgY29uZmlkZW5jZSBpbiBoaXMKcG93ZXJzIG9mIG1lbW9yeSBhcyB0byBkaXNkYWluIHRvIGpvdCBkb3duIHdoYXQgaGUKaGFzIGhlYXJkLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['12.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['12.8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPldlIGhhdmUgbmV4dCB0byBjb25zaWRlciBob3cgYSBjYXNlIHNob3VsZApiZSBzdHVkaWVkLCBzaW5jZSBzdWNoIHN0dWR5IGlzIHRoZSBmb3VuZGF0aW9uIG9mCm9yYXRvcnkuIFRoZXJlIGlzIG5vIG9uZSBzbyBkZXN0aXR1dGUgb2YgYWxsIHRhbGVudAphcywgYWZ0ZXIgbWFraW5nIGhpbXNlbGYgdGhvcm91Z2hseSBmYW1pbGlhciB3aXRoIGFsbAp0aGUgZmFjdHMgb2YgaGlzIGNhc2UsIHRvIGJlIHVuYWJsZSBhdCBsZWFzdCB0byBjb21tdW5pY2F0ZSB0aG9zZSBmYWN0cyB0byB0aGUganVkZ2UuPC90cmFuc2xhdGlvbj4="
translation['12.8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgdGhvc2Ugd2hvCmRldm90ZSBhbnkgc2VyaW91cyBhdHRlbnRpb24gdG8gc3VjaCBzdHVkeSBhcmUgdmVyeQpmZXcgaW5kZWVkLiBGb3IsIHRvIHNheSBub3RoaW5nIG9mIHRob3NlIGNhcmVsZXNzCmFkdm9jYXRlcyB3aG8gYXJlIHF1aXRlIGluZGlmZmVyZW50IGFzIHRvIHdoYXQgdGhlCnBpdm90IG9mIHRoZSB3aG9sZSBjYXNlIG1heSBiZSwgcHJvdmlkZWQgb25seSB0aGVyZQphcmUgcG9pbnRzIHdoaWNoLCB0aG91Z2ggaXJyZWxldmFudCB0byB0aGUgY2FzZSwgd2lsbApnaXZlIHRoZW0gdGhlIG9wcG9ydHVuaXR5IG9mIGRlY2xhaW1pbmcgaW4gdGh1bmRlcm91cyB0b25lcyBvbiB0aGUgY2hhcmFjdGVyIG9mIHBlcnNvbnMgaW52b2x2ZWQgb3IKZGV2ZWxvcGluZyBzb21lIGNvbW1vbnBsYWNlLCB0aGVyZSBhcmUgc29tZSB3aG8KYXJlIHNvIHBlcnZlcnRlZCBieSB2YW5pdHkgdGhhdCwgb24gdGhlIG9mdC1yZXBlYXRlZApwcmV0ZXh0IHRoYXQgdGhleSBhcmUgb2NjdXBpZWQgYnkgb3RoZXIgYnVzaW5lc3MsCnRoZXkgYmlkIHRoZWlyIGNsaWVudCBjb21lIHRvIHRoZW0gb24gdGhlIGRheSBwcmVjZWRpbmcgdGhlIHRyaWFsIG9yIGVhcmx5IG9uIHRoZSBtb3JuaW5nIG9mIHRoZSBkYXkKaXRzZWxmLCBhbmQgc29tZXRpbWVzIGV2ZW4gYm9hc3QgdGhhdCB0aGV5IGxlYXJudCB1cAp0aGVpciBjYXNlIHdoaWxlIHNpdHRpbmcgaW4gY291cnQ7PC90cmFuc2xhdGlvbj4="
translation['12.8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiB3aGlsZSBvdGhlcnMgYnkKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQyOSIgLz4KCndheSBvZiBjcmVhdGluZyBhbiBpbXByZXNzaW9uIG9mIGV4dHJhb3JkaW5hcnkgdGFsZW50LAphbmQgdG8gbWFrZSBpdCBzZWVtIHRoYXQgdGhleSBhcmMgcXVpY2sgaW4gdGhlIHVwdGFrZSwgcHJldGVuZCB0aGF0IHRoZXkgaGF2ZSBncmFzcGVkIHRoZSBmYWN0cyBvZgp0aGUgY2FzZSBhbmQgdW5kZXJzdGFuZCB0aGUgc2l0dWF0aW9uIGFsbW9zdCBiZWZvcmUKdGhleSBoYXZlIGhlYXJkIHdoYXQgaXQgaXMsIGFuZCB0aGVuIGFmdGVyIGNoYW50aW5nCm91dCBzb21lIGxvbmcgYW5kIGZsdWVudCBkaXNjb3Vyc2Ugd2hpY2ggaGFzIG5vdWdodAp0byBkbyBlaXRoZXIgd2l0aCB0aGUganVkZ2Ugb3IgdGhlaXIgY2xpZW50LCBidXQKYXdha2VucyB0aGUgY2xhbW9yb3VzIGFwcGxhdXNlIG9mIHRoZSBhdWRpZW5jZSwKdGhleSBhcmUgZXNjb3J0ZWQgaG9tZSB0aHJvdWdoIHRoZSBmb3J1bSwgcGVyc3BpcmluZwphdCBldmVyeSBwb3JlIGFuZCBhdHRlbmRlZCBieSBmbG9ja3Mgb2YgZW50aHVzaWFzdGljCmZyaWVuZHMuPC90cmFuc2xhdGlvbj4="
translation['12.8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBGdXJ0aGVyLCBJIHdvdWxkIG5vdCBldmVuIHRvbGVyYXRlIHRoZQphZmZlY3RhdGlvbiBvZiB0aG9zZSB3aG8gaW5zaXN0IHRoYXQgdGhlaXIgZnJpZW5kcywgYW5kCm5vdCB0aGVtc2VsdmVzLCBzaG91bGQgYmUgaW5zdHJ1Y3RlZCBpbiB0aGUgZmFjdHMKb2YgdGhlIGNhc2UsIHRob3VnaCB0aGlzIGlzIGEgbGVzcyBzZXJpb3VzIGV2aWwsIGlmIHRoZQpmcmllbmRzIGNhbiBiZSByZWxpZWQgdXBvbiB0byBsZWFybiBhbmQgc3VwcGx5IHRoZQpmYWN0cyBjb3JyZWN0bHkuIEJ1dCB3aG8gY2FuIGdpdmUgc3VjaCBlZmZlY3RpdmUKc3R1ZHkgdG8gdGhlIGNhc2UgYXMgdGhlIGFkdm9jYXRlIGhpbXNlbGY/IEhvdwpjYW4gdGhlIGludGVybWVkaWFyeSwgdGhlIGdvLWJldHdlZW4gb3IgaW50ZXJwcmV0ZXIsCmRldm90ZSBoaW1zZWxmIHdob2xlLWhlYXJ0ZWRseSB0byB0aGUgc3R1ZHkgb2Ygb3RoZXIKbWVuJ3MgY2FzZXMsIHdoZW4gdGhvc2Ugd2hvIGhhdmUgZ290IHRvIGRvIHRoZQphY3R1YWwgcGxlYWRpbmcgZG8gbm90IHRoaW5rIGl0IHdvcnRoIHdoaWxlIHRvIGdldAp1cCB0aGVpciBvd24/PC90cmFuc2xhdGlvbj4="
translation['12.8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiBPbiB0aGUgb3RoZXIgaGFuZCwgaXQgaXMgYSBtb3N0CnBlcm5pY2lvdXMgcHJhY3RpY2UgdG8gcmVzdCBjb250ZW50IHdpdGggYSB3cml0dGVuCnN0YXRlbWVudCBvZiB0aGUgY2FzZSBjb21wb3NlZCBlaXRoZXIgYnkgdGhlIGxpdGlnYW50CndobyBiZXRha2VzIGhpbXNlbGYgdG8gYW4gYWR2b2NhdGUgYmVjYXVzZSBoZSBmaW5kcwp0aGF0IGhpcyBvd24gcG93ZXJzIGFyZSBub3QgZXF1YWwgdG8gdGhlIGNvbmR1Y3Qgb2YKaGlzIGNhc2UsIG9yIGJ5IHNvbWUgbWVtYmVyIG9mIHRoYXQgY2xhc3Mgb2YgbGVnYWwKYWR2aXNlcnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QWR2b2NhdHVzPC9oaT4gaXMgaGVyZSB1c2VkIGluIGl0cyBvcmlnaW5hbCBzZW5zZS4gQnkgUXVpbnRpbGlhbidzIHRpbWUgaXQgaGFkIGNvbWUgYWxzbyB0byBtZWFuIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmFkdm9jYXRlLDwvcXVvdGU+IGFuZCBpcwpvZnRlbiBzbyB1c2VkIGJ5IGhpbSBlbHNld2hlcmUuPC9ub3RlPiB3aG8gYWRtaXQgdGhhdCB0aGV5IGFyZSBpbmNhcGFibGUgb2YgcGxlYWRpbmcsIGFuZCB0aGVuIHByb2NlZWQgdG8gdGFrZSB1cG9uIHRoZW1zZWx2ZXMgdGhlCm1vc3QgZGlmZmljdWx0IG9mIGFsbCB0aGUgdGFza3MgdGhhdCBjb25mcm9udCB0aGUgcGxlYWRlci4KRm9yIGlmIGEgbWFuIGlzIGNhcGFibGUgb2YganVkZ2luZyB3aGF0IHNob3VsZCBiZQpzYWlkLCB3aGF0IGNvbmNlYWxlZCwgd2hhdCBhdm9pZGVkLCBhbHRlcmVkIG9yIGV2ZW4KaW52ZW50ZWQsIHdoeSBzaG91bGQgaGUgbm90IGFwcGVhciBhcyBvcmF0b3IgaGltc2VsZiwKc2luY2UgaGUgcGVyZm9ybXMgdGhlIGZhciBtb3JlIGRpZmZpY3VsdCBmZWF0IG9mIG1ha2luZwoKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QWR2b2NhdHVzPC9oaT4gaXMgaGVyZSB1c2VkIGluIGl0cyBvcmlnaW5hbCBzZW5zZS4gQnkgUXVpbnRpbGlhbidzIHRpbWUgaXQgaGFkIGNvbWUgYWxzbyB0byBtZWFuIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmFkdm9jYXRlLDwvcXVvdGU+IGFuZCBpcwpvZnRlbiBzbyB1c2VkIGJ5IGhpbSBlbHNld2hlcmUuPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDMxIiAvPgoKYW4gb3JhdG9yPzwvdHJhbnNsYXRpb24+"
translation['12.8.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBTdWNoIHBlcnNvbnMgd291bGQgbm90LCBob3dldmVyLCBkbyBzbwptdWNoIGhhcm0gaWYgdGhleSB3b3VsZCBvbmx5IHB1dCBkb3duIGFsbCB0aGUKZmFjdHMgYXMgdGhleSBvY2N1cnJlZC4gQnV0IGFzIGl0IGlzLCB0aGV5IGFkZCBzdWdnZXN0aW9ucyBvZiB0aGVpciBvd24sIHB1dCB0aGVpciBvd24gY29uc3RydWN0aW9uIG9uCnRoZSBmYWN0cyBhbmQgaW5zZXJ0IGludmVudGlvbnMgd2hpY2ggYXJlIGZhciBtb3JlCmRhbWFnaW5nIHRoYW4gdGhlIHVudmFybmlzaGVkIHRydXRoLiBBbmQgdGhlbgp0aGUgYWR2b2NhdGUgYXMgYSBydWxlLCBvbiByZWNlaXZpbmcgdGhlIGRvY3VtZW50LApyZWdhcmRzIGl0IGFzIGEgY3JpbWUgdG8gbWFrZSBhbnkgYWx0ZXJhdGlvbiwgYW5kCmtlZXBzIHRvIGl0IGFzIGZhaXRoZnVsbHkgYXMgaWYgaXQgd2VyZSBhIHRoZW1lIHNldCBmb3IKZGVjbGFtYXRpb24gaW4gdGhlIHNjaG9vbHMuIFRoZSBzZXF1ZWwgaXMgdGhhdCB0aGV5CmFyZSB0cmlwcGVkIHVwIGFuZCBoYXZlIHRvIGxlYXJuIGZyb20gdGhlaXIgb3Bwb25lbnRzIHRoZSBjYXNlIHdoaWNoIHRoZXkgcmVmdXNlZCB0byBsZWFybiBmcm9tIHRoZWlyCm93biBjbGllbnRzLjwvdHJhbnNsYXRpb24+"
translation['12.8.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBXZSBzaG91bGQgdGhlcmVmb3JlIGFib3ZlIGFsbCBhbGxvdwp0aGUgcGFydGllcyBjb25jZXJuZWQgYW1wbGUgdGltZSBmb3IgYW4gaW50ZXJ2aWV3IGluCmEgcGxhY2UgZnJlZSBmcm9tIGludGVycnVwdGlvbiwgYW5kIHNob3VsZCBldmVuCmV4aG9ydCB0aGVtIHRvIHNldCBmb3J0aCBvbiB0aGUgc3BvdCBhbGwgdGhlIGZhY3RzIGluCmFzIG1hbnkgd29yZHMgYXMgdGhleSBtYXkgY2hvb3NlIHRvIHVzZSBhbmQgYWxsb3dpbmcgdGhlbSB0byBnbyBhcyBmYXIgYmFjayBhcyB0aGV5IHBsZWFzZS4gRm9yIGl0IGlzCmxlc3Mgb2YgYSBkcmF3YmFjayB0byBsaXN0ZW4gdG8gYSBudW1iZXIgb2YgaXJyZWxldmFudApmYWN0cyB0aGFuIHRvIGJlIGxlZnQgaW4gaWdub3JhbmNlIG9mIGVzc2VudGlhbHMuCk1vcmVvdmVyLDwvdHJhbnNsYXRpb24+"
translation['12.8.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiB0aGUgb3JhdG9yIHdpbGwgb2Z0ZW4gZGV0ZWN0IGJvdGggdGhlIGV2aWwKYW5kIGl0cyByZW1lZHkgaW4gZmFjdHMgd2hpY2ggdGhlIGxpdGlnYW50IHJlZ2FyZGVkCmFzIGRldm9pZCBvZiBhbGwgaW1wb3J0YW5jZSwgb25lIHdheSBvciB0aGUgb3RoZXIuCkZ1cnRoZXIsIHRoZSBhZHZvY2F0ZSB3aG8gaGFzIGdvdCB0byBwbGVhZCB0aGUgY2FzZQpzaG91bGQgbm90IHB1dCBzdWNoIGV4Y2Vzc2l2ZSBjb25maWRlbmNlIGluIGhpcwpwb3dlcnMgb2YgbWVtb3J5IGFzIHRvIGRpc2RhaW4gdG8gam90IGRvd24gd2hhdCBoZQpoYXMgaGVhcmQuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3Igc2hvdWxkIG9uZSBoZWFyaW5nIGJlIHJlZ2FyZGVkIGFzIHN1ZmZpY2llbnQuClRoZSBsaXRpZ2FudCBzaG91bGQgYmUgbWFkZSB0byByZXBlYXQgaGlzIHN0YXRlbWVudHMKYXQgbGVhc3Qgb25jZSwgbm90IG1lcmVseSBiZWNhdXNlIGNlcnRhaW4gcG9pbnRzIG1heQpoYXZlIGVzY2FwZWQgaGltIG9uIHRoZSBvY2Nhc2lvbiBvZiBoaXMgZmlyc3Qgc3RhdGVtZW50LCBhcyBpcyBleHRyZW1lbHkgbGlrZWx5IHRvIGhhcHBlbiBpZiwgYXMgaXMgb2Z0ZW4KdGhlIGNhc2UsIGhlIGlzIGEgbWFuIG9mIG5vIGVkdWNhdGlvbiwgYnV0IGFsc28gdGhhdAp3ZSBtYXkgbm90ZSB3aGV0aGVyIGhlIHN0aWNrcyB0byB3aGF0IGhlIG9yaWdpbmFsbHkKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQzMyIgLz4KCnNhaWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjkiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBhIGxhcmdlIG51bWJlciBvZiBjbGllbnRzIGxpZSwgYW5kIGhvbGQKZm9ydGgsIG5vdCBhcyBpZiB0aGV5IHdlcmUgaW5zdHJ1Y3RpbmcgdGhlaXIgYWR2b2NhdGUKaW4gdGhlIGZhY3RzIG9mIHRoZSBjYXNlLCBidXQgYXMgaWYgdGhleSB3ZXJlIHBsZWFkaW5nCndpdGggYSBqdWRnZS4gQ29uc2VxdWVudGx5IHdlIG11c3QgbmV2ZXIgYmUgdG9vCnJlYWR5IHRvIGJlbGlldmUgdGhlbSwgYnV0IG11c3QgdGVzdCB0aGVtIGluIGV2ZXJ5CndheSwgdHJ5IHRvIGNvbmZ1c2UgdGhlbSBhbmQgZHJhdyB0aGVtIG91dC48bWlsZXN0b25lIG49IjEwIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IKanVzdCBhcyBkb2N0b3JzIGhhdmUgdG8gZG8gbW9yZSB0aGFuIHRyZWF0IHRoZQphaWxtZW50cyB3aGljaCBtZWV0IHRoZSBleWUsIGFuZCBuZWVkIGFsc28gdG8KZGlzY292ZXIgdGhvc2Ugd2hpY2ggaGUgaGlkLCBzaW5jZSB0aGVpciBwYXRpZW50cwpvZnRlbiBjb25jZWFsIHRoZSB0cnV0aCwgc28gdGhlIGFkdm9jYXRlIG11c3QgbG9vawpvdXQgZm9yIG1vcmUgcG9pbnRzIHRoYW4gaGlzIGNsaWVudCBkaXNjbG9zZXMgdG8gaGltLgpBZnRlciBoZSBjb25zaWRlcnMgdGhhdCBoZSBoYXMgZ2l2ZW4gYSBzdWZmaWNpZW50bHkKcGF0aWVudCBoZWFyaW5nIHRvIHRoZSBsYXR0ZXIncyBzdGF0ZW1lbnRzLCBoZSBtdXN0CmFzc3VtZSBhbm90aGVyIGNoYXJhY3RlciBhbmQgYWRvcHQgdGhlIHLDtGxlIG9mIGhpcwpvcHBvbmVudCwgdXJnaW5nIGV2ZXJ5IGNvbmNlaXZhYmxlIG9iamVjdGlvbiB0aGF0IGEKZGlzY3Vzc2lvbiBvZiB0aGUga2luZCB3aGljaCB3ZSBhcmUgY29uc2lkZXJpbmcgbWF5CnBlcm1pdC48bWlsZXN0b25lIG49IjExIiB1bml0PSJzZWN0aW9uIiAvPiBUaGUgY2xpZW50IG11c3QgYmUgc3ViamVjdGVkIHRvIGEgaG9zdGhlCmNyb3NzLWV4YW1pbmF0aW9uIGFuZCBnaXZlbiBubyBwZWFjZTogZm9yIGJ5IGVucXVpcmluZyBpbnRvIGV2ZXJ5dGhpbmcsIHdlIHNoYWxsIHNvbWV0aW1lcyBjb21lCnVwb24gdGhlIHRydXRoIHdoZXJlIHdlIGxlYXN0IGV4cGVjdCBpdC48L3A+CjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQzMyIgLz4KCnNhaWQuPC90cmFuc2xhdGlvbj4="
translation['12.8.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgYSBsYXJnZSBudW1iZXIgb2YgY2xpZW50cyBsaWUsIGFuZCBob2xkCmZvcnRoLCBub3QgYXMgaWYgdGhleSB3ZXJlIGluc3RydWN0aW5nIHRoZWlyIGFkdm9jYXRlCmluIHRoZSBmYWN0cyBvZiB0aGUgY2FzZSwgYnV0IGFzIGlmIHRoZXkgd2VyZSBwbGVhZGluZwp3aXRoIGEganVkZ2UuIENvbnNlcXVlbnRseSB3ZSBtdXN0IG5ldmVyIGJlIHRvbwpyZWFkeSB0byBiZWxpZXZlIHRoZW0sIGJ1dCBtdXN0IHRlc3QgdGhlbSBpbiBldmVyeQp3YXksIHRyeSB0byBjb25mdXNlIHRoZW0gYW5kIGRyYXcgdGhlbSBvdXQuPC90cmFuc2xhdGlvbj4="
translation['12.8.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCmp1c3QgYXMgZG9jdG9ycyBoYXZlIHRvIGRvIG1vcmUgdGhhbiB0cmVhdCB0aGUKYWlsbWVudHMgd2hpY2ggbWVldCB0aGUgZXllLCBhbmQgbmVlZCBhbHNvIHRvCmRpc2NvdmVyIHRob3NlIHdoaWNoIGhlIGhpZCwgc2luY2UgdGhlaXIgcGF0aWVudHMKb2Z0ZW4gY29uY2VhbCB0aGUgdHJ1dGgsIHNvIHRoZSBhZHZvY2F0ZSBtdXN0IGxvb2sKb3V0IGZvciBtb3JlIHBvaW50cyB0aGFuIGhpcyBjbGllbnQgZGlzY2xvc2VzIHRvIGhpbS4KQWZ0ZXIgaGUgY29uc2lkZXJzIHRoYXQgaGUgaGFzIGdpdmVuIGEgc3VmZmljaWVudGx5CnBhdGllbnQgaGVhcmluZyB0byB0aGUgbGF0dGVyJ3Mgc3RhdGVtZW50cywgaGUgbXVzdAphc3N1bWUgYW5vdGhlciBjaGFyYWN0ZXIgYW5kIGFkb3B0IHRoZSByw7RsZSBvZiBoaXMKb3Bwb25lbnQsIHVyZ2luZyBldmVyeSBjb25jZWl2YWJsZSBvYmplY3Rpb24gdGhhdCBhCmRpc2N1c3Npb24gb2YgdGhlIGtpbmQgd2hpY2ggd2UgYXJlIGNvbnNpZGVyaW5nIG1heQpwZXJtaXQuPC90cmFuc2xhdGlvbj4="
translation['12.8.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIGNsaWVudCBtdXN0IGJlIHN1YmplY3RlZCB0byBhIGhvc3RoZQpjcm9zcy1leGFtaW5hdGlvbiBhbmQgZ2l2ZW4gbm8gcGVhY2U6IGZvciBieSBlbnF1aXJpbmcgaW50byBldmVyeXRoaW5nLCB3ZSBzaGFsbCBzb21ldGltZXMgY29tZQp1cG9uIHRoZSB0cnV0aCB3aGVyZSB3ZSBsZWFzdCBleHBlY3QgaXQuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JbiBmYWN0LCB0aGUgYWR2b2NhdGUgd2hvIGlzIG1vc3Qgc3VjY2Vzc2Z1bCBpbgpnZXR0aW5nIHVwIGhpcyBjYXNlIGlzIGhlIHdobyBpcyBpbmNyZWR1bG91cy4gRm9yCnRoZSBjbGllbnQgcHJvbWlzZXMgZXZlcnl0aGluZzogdGhlIHBlb3BsZSwgaGUgc2F5cywKd2lsbCBiZWFyIHdpdG5lc3MgdG8gdGhlIHRydXRoIG9mIHdoYXQgaGUgc2F5cywgaGUgY2FuCnByb2R1Y2UgZG9jdW1lbnRhcnkgZXZpZGVuY2UgYXQgYSBtb21lbnQncyBub3RpY2UKYW5kIHRoZXJlIGFyZSBzb21lIHBvaW50cyB3aGljaCBoZSBzYXlzIGhpcyBvcHBvbmVudAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIiIHVuaXQ9InNlY3Rpb24iIC8+d2lsbCBub3QgZGVueS4gSXQgaXMgdGhlcmVmb3JlIG5lY2Vzc2FyeSB0byBsb29rIGludG8KZXZlcnkgZG9jdW1lbnQgY29ubmVjdGVkIHdpdGggdGhlIGNhc2UsIGFuZCB3aGVyZQp0aGUgbWVyZSBzaWdodCBvZiB0aGVtIGlzIG5vdCBzdWZmaWNpZW50LCB0aGV5IG11c3QKYmUgcmVhZCB0aHJvdWdoLiBGb3IgdmVyeSBmcmVxdWVudGx5IHRoZXkgYXJlCmVpdGhlciBub3QgYXQgYWxsIHdoYXQgdGhlIGNsaWVudCBhbGxlZ2VkIHRoZW0gdG8gYmUsCm9yIGNvbnRhaW4gbGVzcywgb3IgYXJlIG1peGVkIHVwIHdpdGggZWxlbWVudHMgdGhhdAptYXkgZGFtYWdlIG91ciBjYXNlLCBvciBwcm92ZSBtb3JlIHRoYW4gaXMgcmVxdWlyZWQKYW5kIGFyZSBsaWtlbHkgdG8gZGV0cmFjdCBmcm9tIHRoZWlyIGNyZWRpYmlsaXR5IGp1c3QKCjxwYiBpZD0icC40MzUiIC8+CgpiZWNhdXNlIHRoZXkgYXJlIHNvIGV4dHJhdmFnYW50LjxtaWxlc3RvbmUgbj0iMTMiIHVuaXQ9InNlY3Rpb24iIC8+IEZ1cnRoZXIsIGl0IHdpbGwKb2Z0ZW4gYmUgZm91bmQgdGhhdCB0aGUgdGhyZWFkIGlzIGJyb2tlbiBvciB0aGUgc2VhbAp0YW1wZXJlZCB3aXRoIG9yIHRoZSBzaWduYXR1cmVzIHVuc3VwcG9ydGVkIGJ5CndpdG5lc3Nlcy4gQW5kIHVubGVzcyB5b3UgZGlzY292ZXIgc3VjaCBmYWN0cyBhdApob21lLCB0aGV5IHdpbGwgdGFrZSB5b3UgYnkgc3VycHJpc2UgaW4gY291cnQgYW5kCnRyaXAgeW91IHVwLCBkb2luZyB5b3UgbW9yZSBoYXJtIGJ5IGZvcmNpbmcgeW91IHRvCmFiYW5kb24gdGhlbSB0aGFuIHRoZXkgd291bGQgaGF2ZSBkb25lIGhhZCB0aGV5Cm5ldmVyIGJlZW4gcHJvbWlzZWQgeW91LiBUaGVyZSBhcmUgYWxzbyBhIG51bWJlcgpvZiBwb2ludHMgd2hpY2ggdGhlIGNsaWVudCByZWdhcmRzIGFzIGlycmVsZXZhbnQgdG8KaGlzIGNhc2UsIHdoaWNoIHRoZSBhZHZvY2F0ZSB3aWxsIGJlIGFibGUgdG8gZWxpY2l0LApwcm92aWRlZCBoZSBnbyBjYXJlZnVsbHkgdGhyb3VnaCBhbGwgdGhlIDxxdW90ZT5kd2VsbGluZyBwbGFjZXM8L3F1b3RlPiBvZiBhcmd1bWVudCB3aGljaCBJIGhhdmUgYWxyZWFkeSBkZXNjcmliZWQuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5WLiB4LiAyMCA8aGkgcmVuZD0iaXRhbGljcyI+c3FxLiBpLiBlLjwvaGk+IHNvdXJjZXMgZnJvbSB3aGljaCBhcmd1bWVudHMgbWF5IGJlCmRyYXduLjwvbm90ZT4KPG1pbGVzdG9uZSBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhvdWdoLCBmb3IgcmVhc29ucyBhbHJlYWR5IG1lbnRpb25lZCwgaXQgaXMKbW9zdCB1bmRlc2lyYWJsZSB0aGF0IGhlIHNob3VsZCBodW50IGZvciBhbmQgdHJ5CmV2ZXJ5IHNpbmdsZSBvbmUgb2YgdGhvc2UsIHdoaWxlIGFjdHVhbGx5IGVuZ2FnZWQgaW4KcGxlYWRpbmcgaGlzIGNhc2UsIGl0IGlzIG1vc3QgbmVjZXNzYXJ5IGluIHRoZSBwcmVsaW1pbmFyeSBzdHVkeSBvZiB0aGUgY2FzZSB0byBsZWF2ZSBubyBzdG9uZSB1bnR1cm5lZCB0bwpkaXNjb3ZlciB0aGUgY2hhcmFjdGVyIG9mIHRoZSBwZXJzb25zIGludm9sdmVkLCB0aGUKY2lyY3Vtc3RhbmNlcyBvZiB0aW1lIGFuZCBwbGFjZSwgdGhlIGN1c3RvbXMgYW5kCmRvY3VtZW50cyBjb25jZXJuZWQsIGFuZCB0aGUgcmVzdCwgZnJvbSB3aGljaCB3ZQptYXkgbm90IG1lcmVseSBkZWR1Y2UgdGhlIHByb29mcyBrbm93biBhcyBhcnRpZmljaWFsLApidXQgbWF5IGFsc28gZGlzY292ZXIgd2hpY2ggd2l0bmVzc2VzIGFyZSBtb3N0IHRvIGJlCmZlYXJlZCBhbmQgdGhlIGJlc3QgbWV0aG9kIG9mIHJlZnV0aW5nIHRoZW0uIEZvcgppdCBtYWtlcyBhIGdyZWF0IGRpZmZlcmVuY2Ugd2hldGhlciBpdCBiZSBlbnZ5LApoYXRyZWQgb3IgY29udGVtcHQgdGhhdCBmb3JtcyB0aGUgY2hpZWYgb2JzdGFjbGUgdG8KdGhlIHN1Y2Nlc3Mgb2YgdGhlIGRlZmVuY2UsIHNpbmNlIG9mIHRoZXNlIG9ic3RhY2xlcwp0aGUgZmlyc3QgdGVsbHMgbW9zdCBhZ2FpbnN0IHN1cGVyaW9ycywgdGhlIHNlY29uZAphZ2FpbnN0IGVxdWFscywgYW5kIHRoZSB0aGlyZCBhZ2FpbnN0IHRob3NlIG9mIGxvdwpkZWdyZWUuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['12.8.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz53aWxsIG5vdCBkZW55LiBJdCBpcyB0aGVyZWZvcmUgbmVjZXNzYXJ5IHRvIGxvb2sgaW50bwpldmVyeSBkb2N1bWVudCBjb25uZWN0ZWQgd2l0aCB0aGUgY2FzZSwgYW5kIHdoZXJlCnRoZSBtZXJlIHNpZ2h0IG9mIHRoZW0gaXMgbm90IHN1ZmZpY2llbnQsIHRoZXkgbXVzdApiZSByZWFkIHRocm91Z2guIEZvciB2ZXJ5IGZyZXF1ZW50bHkgdGhleSBhcmUKZWl0aGVyIG5vdCBhdCBhbGwgd2hhdCB0aGUgY2xpZW50IGFsbGVnZWQgdGhlbSB0byBiZSwKb3IgY29udGFpbiBsZXNzLCBvciBhcmUgbWl4ZWQgdXAgd2l0aCBlbGVtZW50cyB0aGF0Cm1heSBkYW1hZ2Ugb3VyIGNhc2UsIG9yIHByb3ZlIG1vcmUgdGhhbiBpcyByZXF1aXJlZAphbmQgYXJlIGxpa2VseSB0byBkZXRyYWN0IGZyb20gdGhlaXIgY3JlZGliaWxpdHkganVzdAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDM1IiAvPgoKYmVjYXVzZSB0aGV5IGFyZSBzbyBleHRyYXZhZ2FudC48L3RyYW5zbGF0aW9uPg=="
translation['12.8.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gRnVydGhlciwgaXQgd2lsbApvZnRlbiBiZSBmb3VuZCB0aGF0IHRoZSB0aHJlYWQgaXMgYnJva2VuIG9yIHRoZSBzZWFsCnRhbXBlcmVkIHdpdGggb3IgdGhlIHNpZ25hdHVyZXMgdW5zdXBwb3J0ZWQgYnkKd2l0bmVzc2VzLiBBbmQgdW5sZXNzIHlvdSBkaXNjb3ZlciBzdWNoIGZhY3RzIGF0CmhvbWUsIHRoZXkgd2lsbCB0YWtlIHlvdSBieSBzdXJwcmlzZSBpbiBjb3VydCBhbmQKdHJpcCB5b3UgdXAsIGRvaW5nIHlvdSBtb3JlIGhhcm0gYnkgZm9yY2luZyB5b3UgdG8KYWJhbmRvbiB0aGVtIHRoYW4gdGhleSB3b3VsZCBoYXZlIGRvbmUgaGFkIHRoZXkKbmV2ZXIgYmVlbiBwcm9taXNlZCB5b3UuIFRoZXJlIGFyZSBhbHNvIGEgbnVtYmVyCm9mIHBvaW50cyB3aGljaCB0aGUgY2xpZW50IHJlZ2FyZHMgYXMgaXJyZWxldmFudCB0bwpoaXMgY2FzZSwgd2hpY2ggdGhlIGFkdm9jYXRlIHdpbGwgYmUgYWJsZSB0byBlbGljaXQsCnByb3ZpZGVkIGhlIGdvIGNhcmVmdWxseSB0aHJvdWdoIGFsbCB0aGUgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+ZHdlbGxpbmcgcGxhY2VzPC9xdW90ZT4gb2YgYXJndW1lbnQgd2hpY2ggSSBoYXZlIGFscmVhZHkgZGVzY3JpYmVkLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5WLiB4LiAyMCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zcXEuIGkuIGUuPC9oaT4gc291cmNlcyBmcm9tIHdoaWNoIGFyZ3VtZW50cyBtYXkgYmUKZHJhd24uPC9ub3RlPgo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zcXEuIGkuIGUuPC9oaT4gc291cmNlcyBmcm9tIHdoaWNoIGFyZ3VtZW50cyBtYXkgYmUKZHJhd24uPC90cmFuc2xhdGlvbj4="
translation['12.8.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhvdWdoLCBmb3IgcmVhc29ucyBhbHJlYWR5IG1lbnRpb25lZCwgaXQgaXMKbW9zdCB1bmRlc2lyYWJsZSB0aGF0IGhlIHNob3VsZCBodW50IGZvciBhbmQgdHJ5CmV2ZXJ5IHNpbmdsZSBvbmUgb2YgdGhvc2UsIHdoaWxlIGFjdHVhbGx5IGVuZ2FnZWQgaW4KcGxlYWRpbmcgaGlzIGNhc2UsIGl0IGlzIG1vc3QgbmVjZXNzYXJ5IGluIHRoZSBwcmVsaW1pbmFyeSBzdHVkeSBvZiB0aGUgY2FzZSB0byBsZWF2ZSBubyBzdG9uZSB1bnR1cm5lZCB0bwpkaXNjb3ZlciB0aGUgY2hhcmFjdGVyIG9mIHRoZSBwZXJzb25zIGludm9sdmVkLCB0aGUKY2lyY3Vtc3RhbmNlcyBvZiB0aW1lIGFuZCBwbGFjZSwgdGhlIGN1c3RvbXMgYW5kCmRvY3VtZW50cyBjb25jZXJuZWQsIGFuZCB0aGUgcmVzdCwgZnJvbSB3aGljaCB3ZQptYXkgbm90IG1lcmVseSBkZWR1Y2UgdGhlIHByb29mcyBrbm93biBhcyBhcnRpZmljaWFsLApidXQgbWF5IGFsc28gZGlzY292ZXIgd2hpY2ggd2l0bmVzc2VzIGFyZSBtb3N0IHRvIGJlCmZlYXJlZCBhbmQgdGhlIGJlc3QgbWV0aG9kIG9mIHJlZnV0aW5nIHRoZW0uIEZvcgppdCBtYWtlcyBhIGdyZWF0IGRpZmZlcmVuY2Ugd2hldGhlciBpdCBiZSBlbnZ5LApoYXRyZWQgb3IgY29udGVtcHQgdGhhdCBmb3JtcyB0aGUgY2hpZWYgb2JzdGFjbGUgdG8KdGhlIHN1Y2Nlc3Mgb2YgdGhlIGRlZmVuY2UsIHNpbmNlIG9mIHRoZXNlIG9ic3RhY2xlcwp0aGUgZmlyc3QgdGVsbHMgbW9zdCBhZ2FpbnN0IHN1cGVyaW9ycywgdGhlIHNlY29uZAphZ2FpbnN0IGVxdWFscywgYW5kIHRoZSB0aGlyZCBhZ2FpbnN0IHRob3NlIG9mIGxvdwpkZWdyZWUuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTUiIHVuaXQ9InNlY3Rpb24iIC8+SGF2aW5nIHRodXMgZ2l2ZW4gYSB0aG9yb3VnaCBleGFtaW5hdGlvbgp0byB0aGUgY2FzZSBhbmQgY2xlYXJseSBlbnZpc2FnZWQgYWxsIHRob3NlIHBvaW50cwp3aGljaCB3aWxsIHRlbGwgZm9yIG9yIGFnYWluc3QgaGlzIGNsaWVudCwgdGhlIG9yYXRvcgptdXN0IHRoZW4gcGxhY2UgaGltc2VsZiBpbiB0aGUgcG9zaXRpb24gb2YgYSB0aGlyZApwZXJzb24sIG5hbWVseSwgdGhlIGp1ZGdlLCBhbmQgaW1hZ2luZSB0aGF0IHRoZQoKPHBiIGlkPSJwLjQzNyIgLz4KCmNhc2UgaXMgYmVpbmcgcGxlYWRlZCBiZWZvcmUgaGltc2VsZiwgYW5kIGFzc3VtZQp0aGF0IHRoZSBwb2ludCB3aGljaCB3b3VsZCBoYXZlIGNhcnJpZWQgbW9zdCB3ZWlnaHQKd2l0aCBoaW1zZWxmLCBoYWQgaGUgYmVlbiB0cnlpbmcgdGhlIGNhc2UsIGlzIGxpa2VseQp0byBoYXZlIHRoZSBncmVhdGVzdCBpbmZsdWVuY2Ugd2l0aCB0aGUgYWN0dWFsIGp1ZGdlLgpUaHVzIGhlIHdpbGwgcmFyZWx5IGJlIGRlY2VpdmVkIGFzIHRvIHRoZSByZXN1bHQgb2YKdGhlIHRyaWFsLCBvciwgaWYgaGUgaXMsIGl0IHdpbGwgYmUgdGhlIGZhdWx0IG9mIHRoZSBqdWRnZS48L3A+Cgo8L3RyYW5zbGF0aW9uPg=="
translation['12.8.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5IYXZpbmcgdGh1cyBnaXZlbiBhIHRob3JvdWdoIGV4YW1pbmF0aW9uCnRvIHRoZSBjYXNlIGFuZCBjbGVhcmx5IGVudmlzYWdlZCBhbGwgdGhvc2UgcG9pbnRzCndoaWNoIHdpbGwgdGVsbCBmb3Igb3IgYWdhaW5zdCBoaXMgY2xpZW50LCB0aGUgb3JhdG9yCm11c3QgdGhlbiBwbGFjZSBoaW1zZWxmIGluIHRoZSBwb3NpdGlvbiBvZiBhIHRoaXJkCnBlcnNvbiwgbmFtZWx5LCB0aGUganVkZ2UsIGFuZCBpbWFnaW5lIHRoYXQgdGhlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40MzciIC8+CgpjYXNlIGlzIGJlaW5nIHBsZWFkZWQgYmVmb3JlIGhpbXNlbGYsIGFuZCBhc3N1bWUKdGhhdCB0aGUgcG9pbnQgd2hpY2ggd291bGQgaGF2ZSBjYXJyaWVkIG1vc3Qgd2VpZ2h0CndpdGggaGltc2VsZiwgaGFkIGhlIGJlZW4gdHJ5aW5nIHRoZSBjYXNlLCBpcyBsaWtlbHkKdG8gaGF2ZSB0aGUgZ3JlYXRlc3QgaW5mbHVlbmNlIHdpdGggdGhlIGFjdHVhbCBqdWRnZS4KVGh1cyBoZSB3aWxsIHJhcmVseSBiZSBkZWNlaXZlZCBhcyB0byB0aGUgcmVzdWx0IG9mCnRoZSB0cmlhbCwgb3IsIGlmIGhlIGlzLCBpdCB3aWxsIGJlIHRoZSBmYXVsdCBvZiB0aGUganVkZ2UuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+QXMgcmVnYXJkcyB0aGUgcG9pbnRzIHRvIGJlIG9ic2VydmVkIGluIHRoZQphY3R1YWwgcGxlYWRpbmcsIEkgaGF2ZSBkZWFsdCB3aXRoIHRoZXNlIGluIGV2ZXJ5CnBvcnRpb24gb2YgdGhpcyB3b3JrLCBidXQgdGhlcmUgc3RpbGwgcmVtYWluIGEgZmV3IG9uCndoaWNoIEkgbXVzdCB0b3VjaCBhcyBiZWluZyBzcGVjaWFsbHkgYXBwcm9wcmlhdGUgdG8KdGhlIHByZXNlbnQgcGxhY2UsIHNpbmNlIHRoZXkgYXJlIGNvbmNlcm5lZCBub3Qgc28KbXVjaCB3aXRoIHRoZSBhcnQgb2Ygc3BlYWtpbmcgYXMgd2l0aCB0aGUgZHV0aWVzCm9mIHRoZSBhZHZvY2F0ZS4gQWJvdmUgYWxsIGl0IGlzIGltcG9ydGFudCB0aGF0IGhlCnNob3VsZCBuZXZlciwgbGlrZSBzbyBtYW55LCBiZSBsZWQgYnkgYSBkZXNpcmUgdG8gd2luCmFwcGxhdXNlIHRvIG5lZ2xlY3QgdGhlIGludGVyZXN0IG9mIHRoZSBhY3R1YWwgY2FzZS4KPG1pbGVzdG9uZSBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkl0IGlzIG5vdCBhbHdheXMgdGhlIGR1dHkgb2YgZ2VuZXJhbHMgaW4gdGhlIGZpZWxkIHRvCmxlYWQgdGhlaXIgYXJtaWVzIHRocm91Z2ggZmxhdCBhbmQgc21pbGluZyBjb3VudHJ5OgppdCB3aWxsIG9mdGVuIGJlIG5lY2Vzc2FyeSB0byBjcm9zcyBydWdnZWQgbW91bnRhaW4KcmFuZ2VzLCB0byBzdG9ybSBjaXRpZXMgcGxhY2VkIG9uIGluYWNjZXNzaWJsZSBjbGlmZnMgb3IKcmVuZGVyZWQgZGlmZmljdWx0IG9mIGFjY2VzcyBieSBlbGFib3JhdGUgZm9ydGlmaWNhdGlvbnMuClNpbWlsYXJseSBvcmF0b3J5IHdpbGwgYWx3YXlzIGJlIGdsYWQgb2YgdGhlIG9wcG9ydHVuaXR5IG9mIG1hbsWTdXZyaW5nIGluIGFsbCBpdHMgZnJlZWRvbSBhbmQgZGVsaWdodGluZyB0aGUgc3BlY3RhdG9yIGJ5IHRoZSBkZXBsb3ltZW50IG9mIGl0cyBmdWxsCnN0cmVuZ3RoIGZvciBjb25mbGljdCBpbiB0aGUgb3BlbiBmaWVsZDs8bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+IGJ1dCBpZiBpdCBpcwpmb3JjZWQgdG8gZW50ZXIgdGhlIHRvcnR1b3VzIGRlZmlsZXMgb2YgdGhlIGxhdywgb3IKZGFyayBwbGFjZXMgd2hlbmNlIHRoZSB0cnV0aCBoYXMgdG8gYmUgZHJhZ2dlZApmb3J0aCwgaXQgd2lsbCBub3QgZ28gcHJhbmNpbmcgaW4gZnJvbnQgb2YgdGhlIGVuZW15J3MKbGluZXMgbm9yIGxhdW5jaCBpdHMgc2hhZnRzIG9mIHF1aXZlcmluZyBhbmQgcGFzc2lvbmF0ZQplcGlncmFtIG9mIHRoZSBmYXNoaW9uIHRoYXQgaXMgbm93IHNvIHBvcHVsYXIsIGJ1dAp3aWxsIHdhZ2Ugd2FyIGJ5IG1lYW5zIG9mIHNhcCBhbmQgbWluZSBhbmQgYW1idXNoCmFuZCBhbGwgdGhlIHRhY3RpY3Mgb2Ygc2VjcmVjeS48bWlsZXN0b25lIG49IjQiIHVuaXQ9InNlY3Rpb24iIC8+IE5vbmUgb2YgdGhlc2UKbWV0aG9kcyB3aW4gYXBwbGF1c2UgZHVyaW5nIHRoZWlyIGFjdHVhbCBleGVjdXRpb246CnRoZSByZXdhcmQgY29tZXMgYWZ0ZXIgdGhleSBoYXZlIGJlZW4gY2FycmllZCB0byBhCnN1Y2Nlc3NmdWwgdGVybWluYXRpb24sIHdoZW4gZXZlbiB0aGUgbW9zdCBhbWJpdGlvdXMKCjxwYiBpZD0icC40MzkiIC8+Cgp3aWxsIHJlYXAgYSByaWNoZXIgcmVjb21wZW5zZSB0aGFuIHRoZXkgY291bGQgZXZlcgpoYXZlIHNlY3VyZWQgYnkgb3RoZXIgbWVhbnMuIEZvciBzbyBzb29uIGFzIHRoZQp0aHVuZGVycyBvZiBhcHBsYXVzZSBhd2FrZW5lZCBhbW9uZyB0aGVpciBhZG1pcmVycwpieSB0aGVzZSBhZmZlY3RlZCBkZWNsYW1hdG9yeSBkaXNwbGF5cyBoYXZlIGRpZWQKYXdheSwgdGhlIGdsb3J5IG9mIHRydWUgdmlydHVlIHJpc2VzIGFnYWluIHdpdGgKcmVuZXdlZCBzcGxlbmRvdXIsIHRoZSBqdWRnZXMgZG8gbm90IGNvbmNlYWwgd2hvCml0IGlzIGhhcyBtb3ZlZCB0aGVtLCB0aGUgd2VsbC10cmFpbmVkIG9yYXRvciB3aW5zCnRoZWlyIGJlbGllZiBhbmQgb3JhdG9yeSByZWNlaXZlcyBpdHMgb25seSBnZW51aW5lCnRyaWJ1dGUsIHRoZSBwcmFpc2UgYWNjb3JkZWQgaXQgd2hlbiBpdHMgdGFzayBpcyBkb25lLgo8bWlsZXN0b25lIG49IjUiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIG9sZCBvcmF0b3JzIGluZGVlZCB1c2VkIHRvIGNvbmNlYWwgdGhlaXIgZWxvcXVlbmNlLCBhIG1ldGhvZCB3aGljaCBpcyByZWNvbW1lbmRlZCBieSBNYXJjdXMKQW50b25pdXMsIGFzIGEgbWVhbnMgb2Ygc2VjdXJpbmcgdGhhdCB0aGUgc3BlYWtlcidzCndvcmRzIHNob3VsZCBjYXJyeSBjb252aWN0aW9uIGFuZCBvZiBtYXNraW5nIHRoZQphZHZvY2F0ZSdzIHJlYWwgZGVzaWducy4gQnV0IHRoZSB0cnV0aCBpcyB0aGF0IHRoZQplbG9xdWVuY2Ugb2YgdGhvc2UgZGF5cyB3YXMgY2FwYWJsZSBvZiBjb25jZWFsbWVudCwKZm9yIGl0IGhhZCBub3QgeWV0IGF0dGFpbmVkIHRoYXQgc3BsZW5kb3VyIG9mIGRpY3Rpb24Kd2hpY2ggbWFrZXMgaXQgaW1wb3NzaWJsZSB0byBoaWRlIGl0cyBsaWdodCB1bmRlciBhCmJ1c2hlbC4gVGhlcmVmb3JlIGFydGlmaWNlIGFuZCBzdHJhdGFnZW0gc2hvdWxkIGJlCm1hc2tlZCwgc2luY2UgZGV0ZWN0aW9uIGluIHN1Y2ggY2FzZXMgc3BlbGxzIGZhaWx1cmUuClRodXMgZmFyLCBhbmQgdGh1cyBvbmx5LCBtYXkgZWxvcXVlbmNlIGhvcGUgdG8gZW5qb3kKdGhlIGFkdmFudGFnZXMgb2Ygc2VjcmVjeS48bWlsZXN0b25lIG49IjYiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCB3aGVuIHdlIGNvbWUgdG8KY29uc2lkZXIgdGhlIGNob2ljZSBvZiB3b3JkcywgdGhlIHdlaWdodCBlc3NlbnRpYWwKdG8gZ2VuZXJhbCByZWZsZXhpb25zIGFuZCB0aGUgZWxlZ2FuY2UgZGVtYW5kZWQgYnkKZmlndXJlcywgd2UgYXJlIGNvbmZyb250ZWQgYnkgZWxlbWVudHMgd2hpY2ggbXVzdAplaXRoZXIgc3RyaWtlIHRoZSBhdHRlbnRpb24gb3IgYmUgY29uZGVtbmVkIHRvIG5vbmV4aXN0ZW5jZS4gQnV0IHRoZSB2ZXJ5IGZhY3QgdGhhdCB0aGV5IHN0cmlrZSB0aGUKYXR0ZW50aW9uIGlzIGEgcmVhc29uIHdoeSB0aGV5IHNob3VsZCBub3QgZmxhdW50CnRoZW1zZWx2ZXMgb2J0cnVzaXZlbHkuIEFuZCwgaWYgd2UgaGF2ZSB0byBtYWtlCnRoZSBjaG9pY2UsIEkgc2hvdWxkIHByZWZlciB0aGF0IGl0IHNob3VsZCBiZSB0aGUKY2F1c2UsIGFuZCBub3QgdGhlIG9yYXRvciwgdG8gd2hpY2ggd2UgYXdhcmQgb3VyCnByYWlzZS4gTmV2ZXJ0aGVsZXNzLCB0aGUgdHJ1ZSBvcmF0b3Igd2lsbCBhY2hpZXZlCnRoZSBkaXN0aW5jdGlvbiBvZiBzZWVtaW5nIHRvIHNwZWFrIHdpdGggYWxsIHRoZQpleGNlbGxlbmNlIHRoYXQgYW4gZXhjZWxsZW50IGNhc2UgZGVzZXJ2ZXMuIE9uZQp0aGluZyBtYXkgYmUgcmVnYXJkZWQgYXMgY2VydGFpbiwgdGhhdCBubyBvbmUgY2FuCgo8cGIgaWQ9InAuNDQxIiAvPgoKcGxlYWQgd29yc2UgdGhhbiBoZSB3aG8gd2lucyBhcHBsYXVzZSBkZXNwaXRlIHRoZQpkaXNhcHByb3ZhbCBtZXRlZCBvdXQgdG8gaGlzIGNhc2UuIEZvciB0aGUgaW5ldml0YWJsZQpjb25jbHVzaW9uIGlzIHRoYXQgdGhlIGFwcGxhdXNlIG11c3QgaGF2ZSBiZWVuCmV2b2tlZCBieSBzb21ldGhpbmcgaGF2aW5nIG5vIGNvbm5leGlvbiB3aXRoIHRoZQpjYXNlLjxtaWxlc3RvbmUgbj0iNyIgdW5pdD0ic2VjdGlvbiIgLz4gRnVydGhlciwgdGhlIHRydWUgb3JhdG9yIHdpbGwgbm90IHR1cm4gdXAgaGlzCm5vc2UgYXQgY2FzZXMgb2YgbWlub3IgaW1wb3J0YW5jZSBvbiB0aGUgZ3JvdW5kIG9mCnRoZWlyIGJlaW5nIGJlbmVhdGggaGlzIGRpZ25pdHkgb3IgYXMgYmVpbmcgbGlrZWx5CnRvIGRldHJhY3QgZnJvbSBoaXMgcmVwdXRhdGlvbiBiZWNhdXNlIHRoZSBzdWJqZWN0Cm1hdHRlciBkb2VzIG5vdCBhbGxvdyBoaXMgZ2VuaXVzIGZ1bGwgc2NvcGUuIEZvciB0aGUKc3Ryb25nZXN0IHJlYXNvbiBmb3IgdW5kZXJ0YWtpbmcgYSBjYXNlIGlzIHRvIGJlIGZ1bmQKaW4gb3VyIGR1dHkgdG93YXJkcyBvdXIgY2xpZW50czogbmF5LCB3ZSBzaG91bGQgZXZlbgpkZXNpcmUgdGhlIHN1aXRzIGluIHdoaWNoIG91ciBmcmllbmRzIGFyZSBpbnZvbHZlZCB0bwpoZSBhcyB1bmltcG9ydGFudCBhcyBwb3NzaWJsZSwgYW5kIHJlbWVtYmVyIHRoYXQgdGhlCmFkdm9jYXRlIHdobyBnaXZlcyBhbiBhZGVxdWF0ZSBwcmVzZW50bWVudCB0byBoaXMKY2FzZSwgaGFzIHNwb2tlbiBleGNlZWRpbmcgd2VsbC48L3A+CjwvdHJhbnNsYXRpb24+"
translation['12.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJjaGFwdGVyIiAvPjwvdHJhbnNsYXRpb24+"
translation['12.9.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPkFzIHJlZ2FyZHMgdGhlIHBvaW50cyB0byBiZSBvYnNlcnZlZCBpbiB0aGUKYWN0dWFsIHBsZWFkaW5nLCBJIGhhdmUgZGVhbHQgd2l0aCB0aGVzZSBpbiBldmVyeQpwb3J0aW9uIG9mIHRoaXMgd29yaywgYnV0IHRoZXJlIHN0aWxsIHJlbWFpbiBhIGZldyBvbgp3aGljaCBJIG11c3QgdG91Y2ggYXMgYmVpbmcgc3BlY2lhbGx5IGFwcHJvcHJpYXRlIHRvCnRoZSBwcmVzZW50IHBsYWNlLCBzaW5jZSB0aGV5IGFyZSBjb25jZXJuZWQgbm90IHNvCm11Y2ggd2l0aCB0aGUgYXJ0IG9mIHNwZWFraW5nIGFzIHdpdGggdGhlIGR1dGllcwpvZiB0aGUgYWR2b2NhdGUuIEFib3ZlIGFsbCBpdCBpcyBpbXBvcnRhbnQgdGhhdCBoZQpzaG91bGQgbmV2ZXIsIGxpa2Ugc28gbWFueSwgYmUgbGVkIGJ5IGEgZGVzaXJlIHRvIHdpbgphcHBsYXVzZSB0byBuZWdsZWN0IHRoZSBpbnRlcmVzdCBvZiB0aGUgYWN0dWFsIGNhc2UuCjwvdHJhbnNsYXRpb24+"
translation['12.9.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkl0IGlzIG5vdCBhbHdheXMgdGhlIGR1dHkgb2YgZ2VuZXJhbHMgaW4gdGhlIGZpZWxkIHRvCmxlYWQgdGhlaXIgYXJtaWVzIHRocm91Z2ggZmxhdCBhbmQgc21pbGluZyBjb3VudHJ5OgppdCB3aWxsIG9mdGVuIGJlIG5lY2Vzc2FyeSB0byBjcm9zcyBydWdnZWQgbW91bnRhaW4KcmFuZ2VzLCB0byBzdG9ybSBjaXRpZXMgcGxhY2VkIG9uIGluYWNjZXNzaWJsZSBjbGlmZnMgb3IKcmVuZGVyZWQgZGlmZmljdWx0IG9mIGFjY2VzcyBieSBlbGFib3JhdGUgZm9ydGlmaWNhdGlvbnMuClNpbWlsYXJseSBvcmF0b3J5IHdpbGwgYWx3YXlzIGJlIGdsYWQgb2YgdGhlIG9wcG9ydHVuaXR5IG9mIG1hbsWTdXZyaW5nIGluIGFsbCBpdHMgZnJlZWRvbSBhbmQgZGVsaWdodGluZyB0aGUgc3BlY3RhdG9yIGJ5IHRoZSBkZXBsb3ltZW50IG9mIGl0cyBmdWxsCnN0cmVuZ3RoIGZvciBjb25mbGljdCBpbiB0aGUgb3BlbiBmaWVsZDs8L3RyYW5zbGF0aW9uPg=="
translation['12.9.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBidXQgaWYgaXQgaXMKZm9yY2VkIHRvIGVudGVyIHRoZSB0b3J0dW91cyBkZWZpbGVzIG9mIHRoZSBsYXcsIG9yCmRhcmsgcGxhY2VzIHdoZW5jZSB0aGUgdHJ1dGggaGFzIHRvIGJlIGRyYWdnZWQKZm9ydGgsIGl0IHdpbGwgbm90IGdvIHByYW5jaW5nIGluIGZyb250IG9mIHRoZSBlbmVteSdzCmxpbmVzIG5vciBsYXVuY2ggaXRzIHNoYWZ0cyBvZiBxdWl2ZXJpbmcgYW5kIHBhc3Npb25hdGUKZXBpZ3JhbSBvZiB0aGUgZmFzaGlvbiB0aGF0IGlzIG5vdyBzbyBwb3B1bGFyLCBidXQKd2lsbCB3YWdlIHdhciBieSBtZWFucyBvZiBzYXAgYW5kIG1pbmUgYW5kIGFtYnVzaAphbmQgYWxsIHRoZSB0YWN0aWNzIG9mIHNlY3JlY3kuPC90cmFuc2xhdGlvbj4="
translation['12.9.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBOb25lIG9mIHRoZXNlCm1ldGhvZHMgd2luIGFwcGxhdXNlIGR1cmluZyB0aGVpciBhY3R1YWwgZXhlY3V0aW9uOgp0aGUgcmV3YXJkIGNvbWVzIGFmdGVyIHRoZXkgaGF2ZSBiZWVuIGNhcnJpZWQgdG8gYQpzdWNjZXNzZnVsIHRlcm1pbmF0aW9uLCB3aGVuIGV2ZW4gdGhlIG1vc3QgYW1iaXRpb3VzCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40MzkiIC8+Cgp3aWxsIHJlYXAgYSByaWNoZXIgcmVjb21wZW5zZSB0aGFuIHRoZXkgY291bGQgZXZlcgpoYXZlIHNlY3VyZWQgYnkgb3RoZXIgbWVhbnMuIEZvciBzbyBzb29uIGFzIHRoZQp0aHVuZGVycyBvZiBhcHBsYXVzZSBhd2FrZW5lZCBhbW9uZyB0aGVpciBhZG1pcmVycwpieSB0aGVzZSBhZmZlY3RlZCBkZWNsYW1hdG9yeSBkaXNwbGF5cyBoYXZlIGRpZWQKYXdheSwgdGhlIGdsb3J5IG9mIHRydWUgdmlydHVlIHJpc2VzIGFnYWluIHdpdGgKcmVuZXdlZCBzcGxlbmRvdXIsIHRoZSBqdWRnZXMgZG8gbm90IGNvbmNlYWwgd2hvCml0IGlzIGhhcyBtb3ZlZCB0aGVtLCB0aGUgd2VsbC10cmFpbmVkIG9yYXRvciB3aW5zCnRoZWlyIGJlbGllZiBhbmQgb3JhdG9yeSByZWNlaXZlcyBpdHMgb25seSBnZW51aW5lCnRyaWJ1dGUsIHRoZSBwcmFpc2UgYWNjb3JkZWQgaXQgd2hlbiBpdHMgdGFzayBpcyBkb25lLgo8L3RyYW5zbGF0aW9uPg=="
translation['12.9.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBvbGQgb3JhdG9ycyBpbmRlZWQgdXNlZCB0byBjb25jZWFsIHRoZWlyIGVsb3F1ZW5jZSwgYSBtZXRob2Qgd2hpY2ggaXMgcmVjb21tZW5kZWQgYnkgTWFyY3VzCkFudG9uaXVzLCBhcyBhIG1lYW5zIG9mIHNlY3VyaW5nIHRoYXQgdGhlIHNwZWFrZXIncwp3b3JkcyBzaG91bGQgY2FycnkgY29udmljdGlvbiBhbmQgb2YgbWFza2luZyB0aGUKYWR2b2NhdGUncyByZWFsIGRlc2lnbnMuIEJ1dCB0aGUgdHJ1dGggaXMgdGhhdCB0aGUKZWxvcXVlbmNlIG9mIHRob3NlIGRheXMgd2FzIGNhcGFibGUgb2YgY29uY2VhbG1lbnQsCmZvciBpdCBoYWQgbm90IHlldCBhdHRhaW5lZCB0aGF0IHNwbGVuZG91ciBvZiBkaWN0aW9uCndoaWNoIG1ha2VzIGl0IGltcG9zc2libGUgdG8gaGlkZSBpdHMgbGlnaHQgdW5kZXIgYQpidXNoZWwuIFRoZXJlZm9yZSBhcnRpZmljZSBhbmQgc3RyYXRhZ2VtIHNob3VsZCBiZQptYXNrZWQsIHNpbmNlIGRldGVjdGlvbiBpbiBzdWNoIGNhc2VzIHNwZWxscyBmYWlsdXJlLgpUaHVzIGZhciwgYW5kIHRodXMgb25seSwgbWF5IGVsb3F1ZW5jZSBob3BlIHRvIGVuam95CnRoZSBhZHZhbnRhZ2VzIG9mIHNlY3JlY3kuPC90cmFuc2xhdGlvbj4="
translation['12.9.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgd2hlbiB3ZSBjb21lIHRvCmNvbnNpZGVyIHRoZSBjaG9pY2Ugb2Ygd29yZHMsIHRoZSB3ZWlnaHQgZXNzZW50aWFsCnRvIGdlbmVyYWwgcmVmbGV4aW9ucyBhbmQgdGhlIGVsZWdhbmNlIGRlbWFuZGVkIGJ5CmZpZ3VyZXMsIHdlIGFyZSBjb25mcm9udGVkIGJ5IGVsZW1lbnRzIHdoaWNoIG11c3QKZWl0aGVyIHN0cmlrZSB0aGUgYXR0ZW50aW9uIG9yIGJlIGNvbmRlbW5lZCB0byBub25leGlzdGVuY2UuIEJ1dCB0aGUgdmVyeSBmYWN0IHRoYXQgdGhleSBzdHJpa2UgdGhlCmF0dGVudGlvbiBpcyBhIHJlYXNvbiB3aHkgdGhleSBzaG91bGQgbm90IGZsYXVudAp0aGVtc2VsdmVzIG9idHJ1c2l2ZWx5LiBBbmQsIGlmIHdlIGhhdmUgdG8gbWFrZQp0aGUgY2hvaWNlLCBJIHNob3VsZCBwcmVmZXIgdGhhdCBpdCBzaG91bGQgYmUgdGhlCmNhdXNlLCBhbmQgbm90IHRoZSBvcmF0b3IsIHRvIHdoaWNoIHdlIGF3YXJkIG91cgpwcmFpc2UuIE5ldmVydGhlbGVzcywgdGhlIHRydWUgb3JhdG9yIHdpbGwgYWNoaWV2ZQp0aGUgZGlzdGluY3Rpb24gb2Ygc2VlbWluZyB0byBzcGVhayB3aXRoIGFsbCB0aGUKZXhjZWxsZW5jZSB0aGF0IGFuIGV4Y2VsbGVudCBjYXNlIGRlc2VydmVzLiBPbmUKdGhpbmcgbWF5IGJlIHJlZ2FyZGVkIGFzIGNlcnRhaW4sIHRoYXQgbm8gb25lIGNhbgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDQxIiAvPgoKcGxlYWQgd29yc2UgdGhhbiBoZSB3aG8gd2lucyBhcHBsYXVzZSBkZXNwaXRlIHRoZQpkaXNhcHByb3ZhbCBtZXRlZCBvdXQgdG8gaGlzIGNhc2UuIEZvciB0aGUgaW5ldml0YWJsZQpjb25jbHVzaW9uIGlzIHRoYXQgdGhlIGFwcGxhdXNlIG11c3QgaGF2ZSBiZWVuCmV2b2tlZCBieSBzb21ldGhpbmcgaGF2aW5nIG5vIGNvbm5leGlvbiB3aXRoIHRoZQpjYXNlLjwvdHJhbnNsYXRpb24+"
translation['12.9.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBGdXJ0aGVyLCB0aGUgdHJ1ZSBvcmF0b3Igd2lsbCBub3QgdHVybiB1cCBoaXMKbm9zZSBhdCBjYXNlcyBvZiBtaW5vciBpbXBvcnRhbmNlIG9uIHRoZSBncm91bmQgb2YKdGhlaXIgYmVpbmcgYmVuZWF0aCBoaXMgZGlnbml0eSBvciBhcyBiZWluZyBsaWtlbHkKdG8gZGV0cmFjdCBmcm9tIGhpcyByZXB1dGF0aW9uIGJlY2F1c2UgdGhlIHN1YmplY3QKbWF0dGVyIGRvZXMgbm90IGFsbG93IGhpcyBnZW5pdXMgZnVsbCBzY29wZS4gRm9yIHRoZQpzdHJvbmdlc3QgcmVhc29uIGZvciB1bmRlcnRha2luZyBhIGNhc2UgaXMgdG8gYmUgZnVuZAppbiBvdXIgZHV0eSB0b3dhcmRzIG91ciBjbGllbnRzOiBuYXksIHdlIHNob3VsZCBldmVuCmRlc2lyZSB0aGUgc3VpdHMgaW4gd2hpY2ggb3VyIGZyaWVuZHMgYXJlIGludm9sdmVkIHRvCmhlIGFzIHVuaW1wb3J0YW50IGFzIHBvc3NpYmxlLCBhbmQgcmVtZW1iZXIgdGhhdCB0aGUKYWR2b2NhdGUgd2hvIGdpdmVzIGFuIGFkZXF1YXRlIHByZXNlbnRtZW50IHRvIGhpcwpjYXNlLCBoYXMgc3Bva2VuIGV4Y2VlZGluZyB3ZWxsLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjgiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IHRoZXJlIGFyZSBzbyBoZSB3aG8sIGV2ZW4gYWx0aG91Z2ggdGhlIGNhc2VzCndoaWNoIHRoZXkgaGF2ZSB1bmRlcnRha2VuIGdpdmUgYnV0IHNtYWxsIHNjb3BlIGZvcgplbG9xdWVuY2UsIG5vbmUgdGhlIGxlc3MgdHJpY2sgaXQgb3V0IHdpdGggbWF0dGVyCmRyYXduIGZyb20gd2l0aG91dCBhbmQsIGlmIGFsbCBlbHNlIGZhaWxzLCBmaWxsIHVwIHRoZQpnYXBzIGluIHRoZWlyIGNhc2Ugd2l0aCBhYnVzZSBvZiB0aGVpciBvcHBvbmVudHMsCnRydWUgaWYgcG9zc2libGUsIGJ1dCBmYWxzZSBpZiBuZWNlc3NhcnksIHRoZSBzb2xlIGNvbnNpZGVyYXRpb24gdGhhdCB3ZWlnaHMgd2l0aCB0aGVtIGJlaW5nIHRoYXQgaXQgYWZmb3JkcwpleGVyY2lzZSBmb3IgdGhlaXIgdGFsZW50cyBhbmQgaXMgbGlrZWx5IHRvIHdpbiBhcHBsYXVzZQpkdXJpbmcgaXRzIGRlbGl2ZXJ5LiBTdWNoIGNvbmR1Y3Qgc2VlbXMgdG8gbWUgc28KdW53b3J0aHkgb2Ygb3VyIHBlcmZlY3Qgb3JhdG9yIHRoYXQsIGluIG15IG9waW5pb24sCmhlIHdpbGwgbm90IGV2ZW4gYnJpbmcgdHJ1ZSBjaGFyZ2VzIGFnYWluc3QgaGlzCm9wcG9uZW50cyB1bmxlc3MgdGhlIGNhc2UgZGVtYW5kLjxtaWxlc3RvbmUgbj0iOSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGl0IGlzIGEKZG9nJ3MgZWxvcXVlbmNlLCBhcyBBcHBpdXMgc2F5cywgdG8gdW5kZXJ0YWtlIHRoZQp0YXNrIG9mIGFidXNpbmcgb25lJ3Mgb3Bwb25lbnQsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+QSBjb2duaXRvcjwvaGk+IGlzIG9uZSB3aG8gcmVwcmVzZW50cyBhbm90aGVyLiBUaGUgbGl0aWdhbnQKbWF5IGFidXNlIGhpcyBvcHBvbmVudCwgYnV0IHRoYXQgZG9lcyBub3QganVzdGlmeSBoaXMKYWR2b2NhdGUgaW4gZG9pbmcgc28uPC9ub3RlPiBhbmQgdGhleSB3aG8gZG8gc28Kc2hvdWxkIHN0ZWVsIHRoZW1zZWx2ZXMgaW4gYWR2YW5jZSB0byB0aGUgcHJvc3BlY3QKb2YgYmVpbmcgdGFyZ2V0cyBmb3IgbGlrZSBhYnVzZSB0aGVtc2VsdmVzLCBzaW5jZQp0aG9zZSB3aG8gYWRvcHQgdGhpcyBzdHlsZSBvZiBwbGVhZGluZyBhcmUgZnJlcXVlbnRseQphdHRhY2tlZCB0aGVtc2VsdmVzLCBhbmQgdGhlcmUgY2FuIGF0IGFueSByYXRlIGJlCm5vIGRvdWJ0IHRoYXQgdGhlIGxpdGlnYW50IHBheXMgZGVhcmx5IGZvciB0aGUgdmlvbGVuY2UKCjxwYiBpZD0icC40NDMiIC8+CgpvZiBoaXMgYWR2b2NhdGUuIEJ1dCBzdWNoIGZhdWx0cyBhcmUgbGVzcyBzZXJpb3VzIHRoYW4KdGhhdCB3aGljaCBsaWVzIGRlZXAgaW4gdGhlIHNvdWwgaXRzZWxmLCBtYWtpbmcgdGhlCmV2aWwgc3BlYWtlciB0byBkaWZmZXIgZnJvbSB0aGUgZXZpbCBkb2VyIG9ubHkgaW4KcmVzcGVjdCBvZiBvcHBvcnR1bml0eS48bWlsZXN0b25lIG49IjEwIiB1bml0PSJzZWN0aW9uIiAvPiBJdCBpcyBub3QgdW5jb21tb24gZm9yCnRoZSBsaXRpZ2FudCB0byBkZW1hbmQgYSBiYXNlIGFuZCBpbmh1bWFuIGdyYXRpZmljYXRpb24gb2YgaGlzIHJhbmNvdXIsIHN1Y2ggYXMgbm90IGEgc2luZ2xlIG1hbiBhbW9uZwp0aGUgYXVkaWVuY2Ugd2lsbCBhcHByb3ZlLCBmb3IgaXQgaXMgb24gcmV2ZW5nZSByYXRoZXIKdGhhbiBvbiBwcm90ZWN0aW9uIHRoYXQgaGlzIGhlYXJ0IGlzIHNldC4gQnV0IGluIHRoaXMsCmFzIGluIGEgbnVtYmVyIG9mIG90aGVyIHBvaW50cywgaXQgaXMgdGhlIGR1dHkgb2YgdGhlCm9yYXRvciB0byByZWZ1c2UgdG8gY29tcGx5IHdpdGggaGlzIGNsaWVudHMnIGRlc2lyZXMuCkZvciBob3cgY2FuIGEgbWFuIHdpdGggdGhlIGxlYXN0IGRlZ3JlZSBvZiBnZW50bGVtYW5seSBmZWVsaW5nIGNvbnNlbnQgdG8gbWFrZSBhIGJydXRhbCBhdHRhY2sgbWVyZWx5CmJlY2F1c2UgYW5vdGhlciBkZXNpcmVzIGl0PzxtaWxlc3RvbmUgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+IEFuZCB5ZXQgdGhlcmUgYXJlIHNvbWUKd2hvIHRha2UgcGxlYXN1cmUgaW4gZGlyZWN0aW5nIHRoZWlyIG9uc2xhdWdodHMKYWdhaW5zdCB0aGVpciBvcHBvbmVudHMnIGNvdW5zZWwgYXMgd2VsbCwgYSBwcmFjdGljZQp3aGljaCwgdW5sZXNzIHRoZXkgaGF2ZSBkZXNlcnZlZCBzdWNoIGF0dGFja3MsIHNob3dzCmFuIGluaHVtYW4gZGlzcmVnYXJkIG9mIHRoZSBkdXRpZXMgaW5jdW1iZW50IG9uIHRoZQpwcm9mZXNzaW9uLCBhbmQgaXMgbm90IG1lcmVseSB1c2VsZXNzIHRvIHRoZSBzcGVha2VyCihzaW5jZSBoZSB0aGVyZWJ5IGdpdmVzIGhpcyBvcHBvbmVudCB0aGUgcmlnaHQgdG8KcmVwbHkgaW4gdGhlIHNhbWUgc3RyYWluKSwgYnV0IGNvbnRyYXJ5IHRvIHRoZQppbnRlcmVzdHMgb2YgaGlzIGNhc2UsIHNpbmNlIGl0IGNyZWF0ZXMgYSBob3N0aGUgYW5kCmFudGFnb25pc3RpYyBkaXNwb3NpdGlvbiBpbiB0aGUgYWR2b2NhdGVzIGF0dGFja2VkLAp3aG9zZSBlbG9xdWVuY2UsIGhvd2V2ZXIgZmVlYmxlIGl0IG1heSBiZSwgd2lsbCBiZQpyZWRvdWJsZWQgYnkgcmVzZW50bWVudCBhdCB0aGUgaW5zdWx0cyB0byB3aGljaAp0aGV5IGhhdmUgYmVlbiBzdWJqZWN0ZWQuPG1pbGVzdG9uZSBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gQWJvdmUgYWxsLCBpdCBpbnZvbHZlcyBhCmNvbXBsZXRlIHdhc3RlIG9mIG9uZSBvZiB0aGUgbW9zdCB2YWx1YWJsZSBvZiBhbgpvcmF0b3IncyBhc3NldHMsIG5hbWVseSB0aGF0IHNlbGYtcmVzdHJhaW50IHdoaWNoIGdpdmVzCndlaWdodCBhbmQgY3JlZGl0IHRvIGhpcyB3b3JkcywgaWYgaGUgZGViYXNlcyBoaW1zZWxmIGZyb20gYW4gaG9uZXN0IG1hbiBpbnRvIGEgc25hcmxpbmcgd3JhbmdsZXIsCmRpcmVjdGluZyBhbGwgaGlzIGVmZm9ydHMgbm90IHRvIHdpbiB0aGUgZ29vZHdpbGwgb2YgdGhlCmp1ZGdlLCBidXQgdG8gZ3JhdGlmeSBoaXMgY2xpZW50J3Mgc3BpdGUuPG1pbGVzdG9uZSBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gT2Z0ZW4gdG9vCnRoZSBhdHRyYWN0aW9ucyBvZiBmcmVlZG9tIG9mIHNwZWVjaCB3aWxsIGx1cmUgaGltCmludG8gYSByYXNobmVzcyBvZiBsYW5ndWFnZSBwZXJpbG91cyBub3QgbWVyZWx5IHRvCnRoZSBpbnRlcmVzdHMgb2YgdGhlIGNhc2UsIGJ1dCB0byB0aG9zZSBvZiB0aGUgc3BlYWtlcgoKPHBiIGlkPSJwLjQ0NSIgLz4KCmhpbXNlbGYuIEl0IHdhcyBub3Qgd2l0aG91dCBnb29kIHJlYXNvbiB0aGF0IFBlcmljbGVzIHVzZWQgdG8gcHJheSB0aGF0IG5vIHdvcmQgbWlnaHQgb2NjdXIgdG8gaGlzCm1pbmQgdGhhdCBjb3VsZCBnaXZlIG9mZmVuY2UgdG8gdGhlIHBlb3BsZS4gQnV0CndoYXQgaGUgZmVsdCB3aXRoIHJlZ2FyZCB0byB0aGUgcGVvcGxlLCBJIGZlZWwgd2l0aApyZWdhcmQgdG8gZXZlcnkgYXVkaWVuY2UsIHNpbmNlIHRoZXkgY2FuIGNhdXNlIGp1c3QKYXMgbXVjaCBoYXJtIHRvIHRoZSBvcmF0b3IgYXMgdGhlIHBlb3BsZSBjb3VsZApldmVyIGRvIHRvIFBlcmljbGVzLiBGb3IgdXR0ZXJhbmNlcyB3aGljaCBzZWVtZWQKY291cmFnZW91cyBhdCB0aGUgbW9tZW50IG9mIHNwZWFraW5nLCBhcmUgY2FsbGVkCmZvb2xpc2ggd2hlbiBpdCBpcyBmb3VuZCB0aGF0IHRoZXkgaGF2ZSBnaXZlbiBvZmZlbmNlLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['12.9.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGVyZSBhcmUgc28gaGUgd2hvLCBldmVuIGFsdGhvdWdoIHRoZSBjYXNlcwp3aGljaCB0aGV5IGhhdmUgdW5kZXJ0YWtlbiBnaXZlIGJ1dCBzbWFsbCBzY29wZSBmb3IKZWxvcXVlbmNlLCBub25lIHRoZSBsZXNzIHRyaWNrIGl0IG91dCB3aXRoIG1hdHRlcgpkcmF3biBmcm9tIHdpdGhvdXQgYW5kLCBpZiBhbGwgZWxzZSBmYWlscywgZmlsbCB1cCB0aGUKZ2FwcyBpbiB0aGVpciBjYXNlIHdpdGggYWJ1c2Ugb2YgdGhlaXIgb3Bwb25lbnRzLAp0cnVlIGlmIHBvc3NpYmxlLCBidXQgZmFsc2UgaWYgbmVjZXNzYXJ5LCB0aGUgc29sZSBjb25zaWRlcmF0aW9uIHRoYXQgd2VpZ2hzIHdpdGggdGhlbSBiZWluZyB0aGF0IGl0IGFmZm9yZHMKZXhlcmNpc2UgZm9yIHRoZWlyIHRhbGVudHMgYW5kIGlzIGxpa2VseSB0byB3aW4gYXBwbGF1c2UKZHVyaW5nIGl0cyBkZWxpdmVyeS4gU3VjaCBjb25kdWN0IHNlZW1zIHRvIG1lIHNvCnVud29ydGh5IG9mIG91ciBwZXJmZWN0IG9yYXRvciB0aGF0LCBpbiBteSBvcGluaW9uLApoZSB3aWxsIG5vdCBldmVuIGJyaW5nIHRydWUgY2hhcmdlcyBhZ2FpbnN0IGhpcwpvcHBvbmVudHMgdW5sZXNzIHRoZSBjYXNlIGRlbWFuZC48L3RyYW5zbGF0aW9uPg=="
translation['12.9.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgaXQgaXMgYQpkb2cncyBlbG9xdWVuY2UsIGFzIEFwcGl1cyBzYXlzLCB0byB1bmRlcnRha2UgdGhlCnRhc2sgb2YgYWJ1c2luZyBvbmUncyBvcHBvbmVudCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+QSBjb2duaXRvcjwvaGk+IGlzIG9uZSB3aG8gcmVwcmVzZW50cyBhbm90aGVyLiBUaGUgbGl0aWdhbnQKbWF5IGFidXNlIGhpcyBvcHBvbmVudCwgYnV0IHRoYXQgZG9lcyBub3QganVzdGlmeSBoaXMKYWR2b2NhdGUgaW4gZG9pbmcgc28uPC9ub3RlPiBhbmQgdGhleSB3aG8gZG8gc28Kc2hvdWxkIHN0ZWVsIHRoZW1zZWx2ZXMgaW4gYWR2YW5jZSB0byB0aGUgcHJvc3BlY3QKb2YgYmVpbmcgdGFyZ2V0cyBmb3IgbGlrZSBhYnVzZSB0aGVtc2VsdmVzLCBzaW5jZQp0aG9zZSB3aG8gYWRvcHQgdGhpcyBzdHlsZSBvZiBwbGVhZGluZyBhcmUgZnJlcXVlbnRseQphdHRhY2tlZCB0aGVtc2VsdmVzLCBhbmQgdGhlcmUgY2FuIGF0IGFueSByYXRlIGJlCm5vIGRvdWJ0IHRoYXQgdGhlIGxpdGlnYW50IHBheXMgZGVhcmx5IGZvciB0aGUgdmlvbGVuY2UKCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkEgY29nbml0b3I8L2hpPiBpcyBvbmUgd2hvIHJlcHJlc2VudHMgYW5vdGhlci4gVGhlIGxpdGlnYW50Cm1heSBhYnVzZSBoaXMgb3Bwb25lbnQsIGJ1dCB0aGF0IGRvZXMgbm90IGp1c3RpZnkgaGlzCmFkdm9jYXRlIGluIGRvaW5nIHNvLjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQ0MyIgLz4KCm9mIGhpcyBhZHZvY2F0ZS4gQnV0IHN1Y2ggZmF1bHRzIGFyZSBsZXNzIHNlcmlvdXMgdGhhbgp0aGF0IHdoaWNoIGxpZXMgZGVlcCBpbiB0aGUgc291bCBpdHNlbGYsIG1ha2luZyB0aGUKZXZpbCBzcGVha2VyIHRvIGRpZmZlciBmcm9tIHRoZSBldmlsIGRvZXIgb25seSBpbgpyZXNwZWN0IG9mIG9wcG9ydHVuaXR5LjwvdHJhbnNsYXRpb24+"
translation['12.9.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz4gSXQgaXMgbm90IHVuY29tbW9uIGZvcgp0aGUgbGl0aWdhbnQgdG8gZGVtYW5kIGEgYmFzZSBhbmQgaW5odW1hbiBncmF0aWZpY2F0aW9uIG9mIGhpcyByYW5jb3VyLCBzdWNoIGFzIG5vdCBhIHNpbmdsZSBtYW4gYW1vbmcKdGhlIGF1ZGllbmNlIHdpbGwgYXBwcm92ZSwgZm9yIGl0IGlzIG9uIHJldmVuZ2UgcmF0aGVyCnRoYW4gb24gcHJvdGVjdGlvbiB0aGF0IGhpcyBoZWFydCBpcyBzZXQuIEJ1dCBpbiB0aGlzLAphcyBpbiBhIG51bWJlciBvZiBvdGhlciBwb2ludHMsIGl0IGlzIHRoZSBkdXR5IG9mIHRoZQpvcmF0b3IgdG8gcmVmdXNlIHRvIGNvbXBseSB3aXRoIGhpcyBjbGllbnRzJyBkZXNpcmVzLgpGb3IgaG93IGNhbiBhIG1hbiB3aXRoIHRoZSBsZWFzdCBkZWdyZWUgb2YgZ2VudGxlbWFubHkgZmVlbGluZyBjb25zZW50IHRvIG1ha2UgYSBicnV0YWwgYXR0YWNrIG1lcmVseQpiZWNhdXNlIGFub3RoZXIgZGVzaXJlcyBpdD88L3RyYW5zbGF0aW9uPg=="
translation['12.9.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIHlldCB0aGVyZSBhcmUgc29tZQp3aG8gdGFrZSBwbGVhc3VyZSBpbiBkaXJlY3RpbmcgdGhlaXIgb25zbGF1Z2h0cwphZ2FpbnN0IHRoZWlyIG9wcG9uZW50cycgY291bnNlbCBhcyB3ZWxsLCBhIHByYWN0aWNlCndoaWNoLCB1bmxlc3MgdGhleSBoYXZlIGRlc2VydmVkIHN1Y2ggYXR0YWNrcywgc2hvd3MKYW4gaW5odW1hbiBkaXNyZWdhcmQgb2YgdGhlIGR1dGllcyBpbmN1bWJlbnQgb24gdGhlCnByb2Zlc3Npb24sIGFuZCBpcyBub3QgbWVyZWx5IHVzZWxlc3MgdG8gdGhlIHNwZWFrZXIKKHNpbmNlIGhlIHRoZXJlYnkgZ2l2ZXMgaGlzIG9wcG9uZW50IHRoZSByaWdodCB0bwpyZXBseSBpbiB0aGUgc2FtZSBzdHJhaW4pLCBidXQgY29udHJhcnkgdG8gdGhlCmludGVyZXN0cyBvZiBoaXMgY2FzZSwgc2luY2UgaXQgY3JlYXRlcyBhIGhvc3RoZSBhbmQKYW50YWdvbmlzdGljIGRpc3Bvc2l0aW9uIGluIHRoZSBhZHZvY2F0ZXMgYXR0YWNrZWQsCndob3NlIGVsb3F1ZW5jZSwgaG93ZXZlciBmZWVibGUgaXQgbWF5IGJlLCB3aWxsIGJlCnJlZG91YmxlZCBieSByZXNlbnRtZW50IGF0IHRoZSBpbnN1bHRzIHRvIHdoaWNoCnRoZXkgaGF2ZSBiZWVuIHN1YmplY3RlZC48L3RyYW5zbGF0aW9uPg=="
translation['12.9.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gQWJvdmUgYWxsLCBpdCBpbnZvbHZlcyBhCmNvbXBsZXRlIHdhc3RlIG9mIG9uZSBvZiB0aGUgbW9zdCB2YWx1YWJsZSBvZiBhbgpvcmF0b3IncyBhc3NldHMsIG5hbWVseSB0aGF0IHNlbGYtcmVzdHJhaW50IHdoaWNoIGdpdmVzCndlaWdodCBhbmQgY3JlZGl0IHRvIGhpcyB3b3JkcywgaWYgaGUgZGViYXNlcyBoaW1zZWxmIGZyb20gYW4gaG9uZXN0IG1hbiBpbnRvIGEgc25hcmxpbmcgd3JhbmdsZXIsCmRpcmVjdGluZyBhbGwgaGlzIGVmZm9ydHMgbm90IHRvIHdpbiB0aGUgZ29vZHdpbGwgb2YgdGhlCmp1ZGdlLCBidXQgdG8gZ3JhdGlmeSBoaXMgY2xpZW50J3Mgc3BpdGUuPC90cmFuc2xhdGlvbj4="
translation['12.9.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gT2Z0ZW4gdG9vCnRoZSBhdHRyYWN0aW9ucyBvZiBmcmVlZG9tIG9mIHNwZWVjaCB3aWxsIGx1cmUgaGltCmludG8gYSByYXNobmVzcyBvZiBsYW5ndWFnZSBwZXJpbG91cyBub3QgbWVyZWx5IHRvCnRoZSBpbnRlcmVzdHMgb2YgdGhlIGNhc2UsIGJ1dCB0byB0aG9zZSBvZiB0aGUgc3BlYWtlcgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDQ1IiAvPgoKaGltc2VsZi4gSXQgd2FzIG5vdCB3aXRob3V0IGdvb2QgcmVhc29uIHRoYXQgUGVyaWNsZXMgdXNlZCB0byBwcmF5IHRoYXQgbm8gd29yZCBtaWdodCBvY2N1ciB0byBoaXMKbWluZCB0aGF0IGNvdWxkIGdpdmUgb2ZmZW5jZSB0byB0aGUgcGVvcGxlLiBCdXQKd2hhdCBoZSBmZWx0IHdpdGggcmVnYXJkIHRvIHRoZSBwZW9wbGUsIEkgZmVlbCB3aXRoCnJlZ2FyZCB0byBldmVyeSBhdWRpZW5jZSwgc2luY2UgdGhleSBjYW4gY2F1c2UganVzdAphcyBtdWNoIGhhcm0gdG8gdGhlIG9yYXRvciBhcyB0aGUgcGVvcGxlIGNvdWxkCmV2ZXIgZG8gdG8gUGVyaWNsZXMuIEZvciB1dHRlcmFuY2VzIHdoaWNoIHNlZW1lZApjb3VyYWdlb3VzIGF0IHRoZSBtb21lbnQgb2Ygc3BlYWtpbmcsIGFyZSBjYWxsZWQKZm9vbGlzaCB3aGVuIGl0IGlzIGZvdW5kIHRoYXQgdGhleSBoYXZlIGdpdmVuIG9mZmVuY2UuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTQiIHVuaXQ9InNlY3Rpb24iIC8+SW4gdmlldyBvZiB0aGUgdGFjdCB0aGF0IHRoZXJlIGlzIGNvbW1vbmx5IGEgZ3JlYXQKdmFyaWV0eSBpbiB0aGUgYWltcyB3aGljaCBwbGVhZGVycyBzZXQgYmVmb3JlIHRoZW1zZWx2ZXMgYW5kIHRoYXQgdGhlIGRpbGlnZW5jZSBzaG93biBieSBzb21lIGlzCmJyYW5kZWQgYXMgdGVkaW91cyBjYXV0aW9uLCB3aGlsZSB0aGUgcmVhZGluZXNzIG9mCm90aGVycyBpcyBjcml0aWNpc2VkIGFzIHJhc2huZXNzLCBJIHRoaW5rIHRoYXQgdGhpcyB3aWxsCmJlIGFuIGFwcHJvcHJpYXRlIHBsYWNlIHRvIHNldCBmb3J0aCBteSB2aWV3cyBhcyB0bwpob3cgdGhlIG9yYXRvciBtYXkgc3RyaWtlIHRoZSBoYXBweSBtZWFuLjxtaWxlc3RvbmUgbj0iMTUiIHVuaXQ9InNlY3Rpb24iIC8+IEhlIHdpbGwKc2hvdyBhbGwgdGhlIGRpbGlnZW5jZSBvZiB3aGljaCBoZSBpcyBjYXBhYmxlIGluIGhpcwpwbGVhZGluZy4gRm9yIHRvIHBsZWFkIHdvcnNlIHRoYW4gaGUgbWlnaHQgaGF2ZQpkb25lLCBpcyBub3QgbWVyZWx5IGFuIGluZGljYXRpb24gb2YgbmVnbGlnZW5jZSwgYnV0CnN0YW1wcyBoaW0gYXMgYSBoYWQgbWFuIGFuZCBhIHRyYWl0b3IsIGRpc2xveWFsIHRvIHRoZQpjYXVzZSB3aGljaCBoZSBoYXMgdW5kZXJ0YWtlbi4gQ29uc2VxdWVudGx5IGhlCm11c3QgcmVmdXNlIHRvIHVuZGVydGFrZSBtb3JlIGNhc2VzIHRoYW4gaGUgZmVlbHMKaGUgY2FuIG1hbmFnZS48bWlsZXN0b25lIG49IjE2IiB1bml0PSJzZWN0aW9uIiAvPiBBcyBmYXIgYXMgcG9zc2libGUgaGUgd2lsbCBkZWxpdmVyCm9ubHkgd2hhdCBoZSBoYXMgd3JpdHRlbiwgYW5kLCBpZiBjaXJjdW1zdGFuY2VzCnBlcm1pdCwgb25seSB3aGF0IGhlIGhhcywgYXMgRGVtb3N0aGVuZXMgc2F5cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRoaXMgcGFzc2FnZSBpcyBvdXIgc29sZSBhdXRob3JpdHkgZm9yIHRoZSBzYXlpbmcuPC9ub3RlPgpjYXJ2ZWQgaW50byBzaGFwZS4gU3VjaCBhIHByYWN0aWNlIGlzIHBvc3NpYmxlIGluCmZpcnN0IGhlYXJpbmdzIGFuZCBhbHNvIGluIHN1YnNlcXVlbnQgaGVhcmluZ3Mgc3VjaCBhcwphcmUgZ3JhbnRlZCBpbiB0aGUgcHVibGljIGNvdXJ0cyBhZnRlciBhbiBpbnRlcnZhbCBvZgpzZXZlcmFsIGRheXMuIE9uIHRoZSBvdGhlciBoYW5kLCB3aGVuIHdlIGhhdmUgdG8KcmVwbHkgb24gdGhlIHNwb3QsIGl0IGlzIGltcG9zc2libGUgdG8gcHJlcGFyZSBldmVyeXRoaW5nOiBpbiBmYWN0IGZvciB0aGUgbGVzcyByZWFkeSB0eXBlIG9mIHNwZWFrZXIsIGl0Cm1heSwgaW4gdGhlIGV2ZW50IG9mIGhpcyBvcHBvbmVudHMgcHV0dGluZyBmb3J3YXJkCmFyZ3VtZW50cyBxdWl0ZSBvdGhlciB0aGFuIHRob3NlIHdoaWNoIHRoZXkgd2VyZQpleHBlY3RlZCB0byBhZHZhbmNlLCBiZSBhIHBvc2l0aXZlIGRyYXdiYWNrIHRvIGhhdmUKCjxwYiBpZD0icC40NDciIC8+Cgp3cml0dGVuIGFueXRoaW5nLjxtaWxlc3RvbmUgbj0iMTciIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBpdCBpcyBvbmx5IHdpdGggcmVsdWN0YW5jZQp0aGF0IHN1Y2ggc3BlYWtlcnMgd2lsbCB1bmRlciBzdWNoIGNpcmN1bXN0YW5jZXMKY29uc2VudCB0byBhYmFuZG9uIHdoYXQgdGhleSBoYXZlIHdyaXR0ZW4sIGFuZAp0aHJvdWdob3V0IHRoZWlyIHBsZWFkaW5nIGtlZXAgbG9va2luZyBiYWNrIGFuZAp0cnlpbmcgdG8gZGlzY292ZXIgd2hldGhlciBhbnkgcG9ydGlvbiBvZiB0aGVpcgptYW51c2NyaXB0IGNhbiBiZSBzYXZlZCBmcm9tIHRoZSB3cmVjayBhbmQgaW50ZXJwb2xhdGVkIGludG8gd2hhdCB0aGV5IGhhdmUgdG8gaW1wcm92aXNlLiBBbmQgaWYKdGhleSBkbyBtYWtlIHN1Y2ggaW50ZXJwb2xhdGlvbnMsIHRoZSByZXN1bHQgaXMgYSBsYWNrCm9mJyBjb2hlc2lvbiB3aGljaCBpcyBiZXRyYXllZCBub3QgbWVyZWx5IGJ5IHRoZQpnYXBpbmcgb2YgdGhlIHNlYW1zIHdoZXJlIHRoZSBwYXRjaCBoYXMgYmVlbiB1bnNraWxmdWxseSBpbnNlcnRlZCwgYnV0IGJ5IHRoZSBkaWZmZXJlbmNlcyBvZiBzdHlsZS4KPG1pbGVzdG9uZSBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Db25zZXF1ZW50bHksIHRoZSB2aWdvdXIgb2YgdGhlaXIgZWxvcXVlbmNlIHdpbGwgYmUKaGFtcGVyZWQgYW5kIHRoZWlyIHRob3VnaHQgd2lsbCBsYWNrIGNvbm5leGlvbiwgZWFjaApvZiB3aGljaCBjaXJjdW1zdGFuY2VzIHJlYWN0cyB1bmZhdm91cmFibHkgdXBvbiB0aGUKb3RoZXIsIHNpbmNlIHdoYXQgaXMgd3JpdHRlbiB0cmFtbWVscyB0aGUgbWluZAppbnN0ZWFkIG9mIGZvbGxvd2luZyBpdHMgbGVhZC4gVGhlcmVmb3JlLCBpbiBzdWNoCnBsZWFkaW5ncyB3ZSBtdXN0LCBhcyB0aGUgcnVzdGljIGFkYWdlIHNheXMsIDxxdW90ZT5zdGFuZApvbiBhbGwgb3VyIGZlZXQuPC9xdW90ZT48bWlsZXN0b25lIG49IjE5IiB1bml0PSJzZWN0aW9uIiAvPiBGb3Igc2luY2UgdGhlIGNhc2UgdHVybnMgb24gdGhlCnByb3BvdW5kaW5nIGFuZCByZWZ1dGF0aW9uIG9mIGFyZ3VtZW50cywgaXQgaXMKYWx3YXlzIHBvc3NpYmxlIHRvIHdyaXRlIG91dCB3aGF0IHdlIHByb3Bvc2UgdG8KYWR2YW5jZSBvbiBvdXIgb3duIGJlaGFsZiwgYW5kIHNpbWlsYXIgcHJlcGFyYXRpb24KaXMgYWxzbyBwb3NzaWJsZSB3aXRoIHJlZ2FyZCB0byB0aGUgcmVmdXRhdGlvbiBvZiBzdWNoCnJlcGxpZXMgYXMgYXJlIGFic29sdXRlbHkgY2VydGFpbiB0byBiZSBtYWRlIGJ5IG91cgphZHZlcnNhcnk6IGZvciB0aGVyZSBhcmUgdGltZXMgd2hlbiB3ZSBoYXZlIHRoaXMKY2VydGFpbnR5LiBCdXQgd2l0aCByZWdhcmQgdG8gYWxsIG90aGVyIHBvcnRpb25zIG9mCm91ciBzcGVlY2gsIHRoZSBvbmx5IHByZXBhcmF0aW9uIHRoYXQgaXMgcG9zc2libGUgaW4KYWR2YW5jZSBjb25zaXN0cyBpbiBhIHRob3JvdWdoIGtub3dsZWRnZSBvZiBvdXIKY2FzZSwgd2hpbGUgdGhlcmUgaXMgYSBzZWNvbmQgcHJlY2F1dGlvbiB3aGljaCBtYXkKYmUgdGFrZW4gaW4gY291cnQsIGNvbnNpc3RpbmcgaW4gZ2l2aW5nIG91ciBiZXN0CmF0dGVudGlvbiB0byBvdXIgb3Bwb25lbnQncyBzcGVlY2guPG1pbGVzdG9uZSBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz4gT24gdGhlIG90aGVyCmhhbmQsIHRoZXJlIGlzIG11Y2ggdGhhdCBtYXkgYmUgdGhvdWdodCBvdXQgaW4KYWR2YW5jZSBhbmQgd2UgbWF5IGZvcmVhcm0gb3VyIG1pbmQgYWdhaW5zdCBhbGwKcG9zc2libGUgZW1lcmdlbmNpZXMsIGEgY291cnNlIHdoaWNoIGlzIGZhciBzYWZlcgp0aGFuIHdyaXRpbmcsIHNpbmNlIGEgdHJhaW4gb2YgdGhvdWdodCBjYW4gZWFzaWx5IGJlCgo8cGIgaWQ9InAuNDQ5IiAvPgoKYWJhbmRvbmVkIG9yIGRpdmVydGVkIGluIGEgbmV3IGRpcmVjdGlvbi4gQnV0CndoZXRoZXIgd2UgaGF2ZSB0byBpbXByb3Zpc2UgYSByZXBseSwgb3IgYXJlIG9ibGlnZWQKdG8gc3BlYWsgZXh0ZW1wb3JlIGJ5IHNvbWUgb3RoZXIgcmVhc29uLCB0aGUgb3JhdG9yCm9uIHdob20gdHJhaW5pbmcsIHN0dWR5IGFuZCBwcmFjdGljZSBoYXZlIGNvbmZlcnJlZAp0aGUgZ2lmdCBvZiBmYWNpbGl0eSwgd2lsbCBuZXZlciByZWdhcmQgaGltc2VsZiBhcyBsb3N0Cm9yIHRha2VuIGF0IGhvcGVsZXNzIGRpc2FkdmFudGFnZS48bWlsZXN0b25lIG49IjIxIiB1bml0PSJzZWN0aW9uIiAvPiBIZSBzdGFuZHMKYXJtZWQgZm9yIGJhdHRsZSwgZXZlciByZWFkeSBmb3IgdGhlIGZyYXksIGFuZCBoaXMKZWxvcXVlbmNlIHdpbGwgbm8gbW9yZSBmYWlsIGhpbSBpbiB0aGUgY291cnRzIHRoYW4Kc3BlZWNoIHdpbGwgZmFpbCBoaW0gaW4gZG9tZXN0aWMgYWZmYWlycyBhbmQgdGhlIGRhaWx5CmNvbmNlcm5zIG9mIGxpZmU6IGFuZCBoZSB3aWxsIG5ldmVyIHNoaXJrIGhpcyBidXJkZW4KZm9yIGZlYXIgb2YgZmFpbGluZyB0byBmaW5kIHdvcmRzLCBwcm92aWRlZCBoZSBoYXMgdGltZQp0byBzdHVkeSBoaXMgY2FzZTogZm9yIGFsbCBvdGhlciBrbm93bGVkZ2Ugd2lsbCBhbHdheXMKYmUgaGlzIGF0IGNvbW1hbmQuPC9wPgoKPC90cmFuc2xhdGlvbj4="
translation['12.9.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5JbiB2aWV3IG9mIHRoZSB0YWN0IHRoYXQgdGhlcmUgaXMgY29tbW9ubHkgYSBncmVhdAp2YXJpZXR5IGluIHRoZSBhaW1zIHdoaWNoIHBsZWFkZXJzIHNldCBiZWZvcmUgdGhlbXNlbHZlcyBhbmQgdGhhdCB0aGUgZGlsaWdlbmNlIHNob3duIGJ5IHNvbWUgaXMKYnJhbmRlZCBhcyB0ZWRpb3VzIGNhdXRpb24sIHdoaWxlIHRoZSByZWFkaW5lc3Mgb2YKb3RoZXJzIGlzIGNyaXRpY2lzZWQgYXMgcmFzaG5lc3MsIEkgdGhpbmsgdGhhdCB0aGlzIHdpbGwKYmUgYW4gYXBwcm9wcmlhdGUgcGxhY2UgdG8gc2V0IGZvcnRoIG15IHZpZXdzIGFzIHRvCmhvdyB0aGUgb3JhdG9yIG1heSBzdHJpa2UgdGhlIGhhcHB5IG1lYW4uPC90cmFuc2xhdGlvbj4="
translation['12.9.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz4gSGUgd2lsbApzaG93IGFsbCB0aGUgZGlsaWdlbmNlIG9mIHdoaWNoIGhlIGlzIGNhcGFibGUgaW4gaGlzCnBsZWFkaW5nLiBGb3IgdG8gcGxlYWQgd29yc2UgdGhhbiBoZSBtaWdodCBoYXZlCmRvbmUsIGlzIG5vdCBtZXJlbHkgYW4gaW5kaWNhdGlvbiBvZiBuZWdsaWdlbmNlLCBidXQKc3RhbXBzIGhpbSBhcyBhIGhhZCBtYW4gYW5kIGEgdHJhaXRvciwgZGlzbG95YWwgdG8gdGhlCmNhdXNlIHdoaWNoIGhlIGhhcyB1bmRlcnRha2VuLiBDb25zZXF1ZW50bHkgaGUKbXVzdCByZWZ1c2UgdG8gdW5kZXJ0YWtlIG1vcmUgY2FzZXMgdGhhbiBoZSBmZWVscwpoZSBjYW4gbWFuYWdlLjwvdHJhbnNsYXRpb24+"
translation['12.9.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz4gQXMgZmFyIGFzIHBvc3NpYmxlIGhlIHdpbGwgZGVsaXZlcgpvbmx5IHdoYXQgaGUgaGFzIHdyaXR0ZW4sIGFuZCwgaWYgY2lyY3Vtc3RhbmNlcwpwZXJtaXQsIG9ubHkgd2hhdCBoZSBoYXMsIGFzIERlbW9zdGhlbmVzIHNheXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRoaXMgcGFzc2FnZSBpcyBvdXIgc29sZSBhdXRob3JpdHkgZm9yIHRoZSBzYXlpbmcuPC9ub3RlPgpjYXJ2ZWQgaW50byBzaGFwZS4gU3VjaCBhIHByYWN0aWNlIGlzIHBvc3NpYmxlIGluCmZpcnN0IGhlYXJpbmdzIGFuZCBhbHNvIGluIHN1YnNlcXVlbnQgaGVhcmluZ3Mgc3VjaCBhcwphcmUgZ3JhbnRlZCBpbiB0aGUgcHVibGljIGNvdXJ0cyBhZnRlciBhbiBpbnRlcnZhbCBvZgpzZXZlcmFsIGRheXMuIE9uIHRoZSBvdGhlciBoYW5kLCB3aGVuIHdlIGhhdmUgdG8KcmVwbHkgb24gdGhlIHNwb3QsIGl0IGlzIGltcG9zc2libGUgdG8gcHJlcGFyZSBldmVyeXRoaW5nOiBpbiBmYWN0IGZvciB0aGUgbGVzcyByZWFkeSB0eXBlIG9mIHNwZWFrZXIsIGl0Cm1heSwgaW4gdGhlIGV2ZW50IG9mIGhpcyBvcHBvbmVudHMgcHV0dGluZyBmb3J3YXJkCmFyZ3VtZW50cyBxdWl0ZSBvdGhlciB0aGFuIHRob3NlIHdoaWNoIHRoZXkgd2VyZQpleHBlY3RlZCB0byBhZHZhbmNlLCBiZSBhIHBvc2l0aXZlIGRyYXdiYWNrIHRvIGhhdmUKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQ0NyIgLz4KCndyaXR0ZW4gYW55dGhpbmcuPC90cmFuc2xhdGlvbj4="
translation['12.9.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGl0IGlzIG9ubHkgd2l0aCByZWx1Y3RhbmNlCnRoYXQgc3VjaCBzcGVha2VycyB3aWxsIHVuZGVyIHN1Y2ggY2lyY3Vtc3RhbmNlcwpjb25zZW50IHRvIGFiYW5kb24gd2hhdCB0aGV5IGhhdmUgd3JpdHRlbiwgYW5kCnRocm91Z2hvdXQgdGhlaXIgcGxlYWRpbmcga2VlcCBsb29raW5nIGJhY2sgYW5kCnRyeWluZyB0byBkaXNjb3ZlciB3aGV0aGVyIGFueSBwb3J0aW9uIG9mIHRoZWlyCm1hbnVzY3JpcHQgY2FuIGJlIHNhdmVkIGZyb20gdGhlIHdyZWNrIGFuZCBpbnRlcnBvbGF0ZWQgaW50byB3aGF0IHRoZXkgaGF2ZSB0byBpbXByb3Zpc2UuIEFuZCBpZgp0aGV5IGRvIG1ha2Ugc3VjaCBpbnRlcnBvbGF0aW9ucywgdGhlIHJlc3VsdCBpcyBhIGxhY2sKb2YnIGNvaGVzaW9uIHdoaWNoIGlzIGJldHJheWVkIG5vdCBtZXJlbHkgYnkgdGhlCmdhcGluZyBvZiB0aGUgc2VhbXMgd2hlcmUgdGhlIHBhdGNoIGhhcyBiZWVuIHVuc2tpbGZ1bGx5IGluc2VydGVkLCBidXQgYnkgdGhlIGRpZmZlcmVuY2VzIG9mIHN0eWxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['12.9.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Db25zZXF1ZW50bHksIHRoZSB2aWdvdXIgb2YgdGhlaXIgZWxvcXVlbmNlIHdpbGwgYmUKaGFtcGVyZWQgYW5kIHRoZWlyIHRob3VnaHQgd2lsbCBsYWNrIGNvbm5leGlvbiwgZWFjaApvZiB3aGljaCBjaXJjdW1zdGFuY2VzIHJlYWN0cyB1bmZhdm91cmFibHkgdXBvbiB0aGUKb3RoZXIsIHNpbmNlIHdoYXQgaXMgd3JpdHRlbiB0cmFtbWVscyB0aGUgbWluZAppbnN0ZWFkIG9mIGZvbGxvd2luZyBpdHMgbGVhZC4gVGhlcmVmb3JlLCBpbiBzdWNoCnBsZWFkaW5ncyB3ZSBtdXN0LCBhcyB0aGUgcnVzdGljIGFkYWdlIHNheXMsIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPnN0YW5kCm9uIGFsbCBvdXIgZmVldC48L3F1b3RlPjwvdHJhbnNsYXRpb24+"
translation['12.9.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHNpbmNlIHRoZSBjYXNlIHR1cm5zIG9uIHRoZQpwcm9wb3VuZGluZyBhbmQgcmVmdXRhdGlvbiBvZiBhcmd1bWVudHMsIGl0IGlzCmFsd2F5cyBwb3NzaWJsZSB0byB3cml0ZSBvdXQgd2hhdCB3ZSBwcm9wb3NlIHRvCmFkdmFuY2Ugb24gb3VyIG93biBiZWhhbGYsIGFuZCBzaW1pbGFyIHByZXBhcmF0aW9uCmlzIGFsc28gcG9zc2libGUgd2l0aCByZWdhcmQgdG8gdGhlIHJlZnV0YXRpb24gb2Ygc3VjaApyZXBsaWVzIGFzIGFyZSBhYnNvbHV0ZWx5IGNlcnRhaW4gdG8gYmUgbWFkZSBieSBvdXIKYWR2ZXJzYXJ5OiBmb3IgdGhlcmUgYXJlIHRpbWVzIHdoZW4gd2UgaGF2ZSB0aGlzCmNlcnRhaW50eS4gQnV0IHdpdGggcmVnYXJkIHRvIGFsbCBvdGhlciBwb3J0aW9ucyBvZgpvdXIgc3BlZWNoLCB0aGUgb25seSBwcmVwYXJhdGlvbiB0aGF0IGlzIHBvc3NpYmxlIGluCmFkdmFuY2UgY29uc2lzdHMgaW4gYSB0aG9yb3VnaCBrbm93bGVkZ2Ugb2Ygb3VyCmNhc2UsIHdoaWxlIHRoZXJlIGlzIGEgc2Vjb25kIHByZWNhdXRpb24gd2hpY2ggbWF5CmJlIHRha2VuIGluIGNvdXJ0LCBjb25zaXN0aW5nIGluIGdpdmluZyBvdXIgYmVzdAphdHRlbnRpb24gdG8gb3VyIG9wcG9uZW50J3Mgc3BlZWNoLjwvdHJhbnNsYXRpb24+"
translation['12.9.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz4gT24gdGhlIG90aGVyCmhhbmQsIHRoZXJlIGlzIG11Y2ggdGhhdCBtYXkgYmUgdGhvdWdodCBvdXQgaW4KYWR2YW5jZSBhbmQgd2UgbWF5IGZvcmVhcm0gb3VyIG1pbmQgYWdhaW5zdCBhbGwKcG9zc2libGUgZW1lcmdlbmNpZXMsIGEgY291cnNlIHdoaWNoIGlzIGZhciBzYWZlcgp0aGFuIHdyaXRpbmcsIHNpbmNlIGEgdHJhaW4gb2YgdGhvdWdodCBjYW4gZWFzaWx5IGJlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40NDkiIC8+CgphYmFuZG9uZWQgb3IgZGl2ZXJ0ZWQgaW4gYSBuZXcgZGlyZWN0aW9uLiBCdXQKd2hldGhlciB3ZSBoYXZlIHRvIGltcHJvdmlzZSBhIHJlcGx5LCBvciBhcmUgb2JsaWdlZAp0byBzcGVhayBleHRlbXBvcmUgYnkgc29tZSBvdGhlciByZWFzb24sIHRoZSBvcmF0b3IKb24gd2hvbSB0cmFpbmluZywgc3R1ZHkgYW5kIHByYWN0aWNlIGhhdmUgY29uZmVycmVkCnRoZSBnaWZ0IG9mIGZhY2lsaXR5LCB3aWxsIG5ldmVyIHJlZ2FyZCBoaW1zZWxmIGFzIGxvc3QKb3IgdGFrZW4gYXQgaG9wZWxlc3MgZGlzYWR2YW50YWdlLjwvdHJhbnNsYXRpb24+"
translation['12.9.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gSGUgc3RhbmRzCmFybWVkIGZvciBiYXR0bGUsIGV2ZXIgcmVhZHkgZm9yIHRoZSBmcmF5LCBhbmQgaGlzCmVsb3F1ZW5jZSB3aWxsIG5vIG1vcmUgZmFpbCBoaW0gaW4gdGhlIGNvdXJ0cyB0aGFuCnNwZWVjaCB3aWxsIGZhaWwgaGltIGluIGRvbWVzdGljIGFmZmFpcnMgYW5kIHRoZSBkYWlseQpjb25jZXJucyBvZiBsaWZlOiBhbmQgaGUgd2lsbCBuZXZlciBzaGlyayBoaXMgYnVyZGVuCmZvciBmZWFyIG9mIGZhaWxpbmcgdG8gZmluZCB3b3JkcywgcHJvdmlkZWQgaGUgaGFzIHRpbWUKdG8gc3R1ZHkgaGlzIGNhc2U6IGZvciBhbGwgb3RoZXIga25vd2xlZGdlIHdpbGwgYWx3YXlzCmJlIGhpcyBhdCBjb21tYW5kLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgbj0iMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcXVlc3Rpb24gb2YgdGhlIDxxdW90ZT5raW5kIG9mIHN0eWxlPC9xdW90ZT4gdG8gYmUKYWRvcHRlZCByZW1haW5zIHRvIGJlIGRpc2N1c3NlZC4gVGhpcyB3YXMgZGVzY3JpYmVkCmluIG15IG9yaWdpbmFsIGRpdmlzaW9uPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5JSS4geGl2LiA1Ljwvbm90ZT4gb2YgbXkgc3ViamVjdCBhcyBmb3JtaW5nIGl0cwp0aGlyZCBwb3J0aW9uOiBmb3IgSSBwcm9taXNlZCB0aGF0IEkgd291bGQgc3BlYWsgb2YKdGhlIGFydCwgdGhlIGFydGlzdCBhbmQgdGhlIHdvcmsuIEJ1dCBzaW5jZSBvcmF0b3J5CmlzIHRoZSB3b3JrIGJvdGggb2YgcmhldG9yaWMgYW5kIG9mIHRoZSBvcmF0b3IsIGFuZApzaW5jZSBpdCBoYXMgbWFueSBmb3JtcywgYXMgSSBzaGFsbCBzaG93LCB0aGUgYXJ0IGFuZAp0aGUgYXJ0aXN0IGFyZSBpbnZvbHZlZCBpbiB0aGUgY29uc2lkZXJhdGlvbiBvZiBhbGwKdGhlc2UgZm9ybXMuIEJ1dCB0aGV5IGRpZmZlciBncmVhdGx5IGZyb20gb25lCmFub3RoZXIsIGFuZCBub3QgbWVyZWx5IGluIDxoaSByZW5kPSJpdGFsaWNzIj5zcGVjaWVzLDwvaGk+IGFzIHN0YXR1ZSBkaWZmZXJzCmZyb20gc3RhdHVlLCBwaWN0dXJlIGZyb20gcGljdHVyZSBhbmQgc3BlZWNoIGZyb20Kc3BlZWNoLCBidXQgaW4gPGhpIHJlbmQ9Iml0YWxpY3MiPmdlbnVzPC9oaT4gYXMgd2VsbCwgYXMsIGZvciBleGFtcGxlLApFdHJ1c2NhbiBzdGF0dWVzIGRpZmZlciBmcm9tIEdyZWVrIGFuZCBBc2lhdGljCm9yYXRvcnMgZnJvbSBBdHRpYy48bWlsZXN0b25lIG49IjIiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCB0aGVzZSBkaWZmZXJlbnQga2luZHMgb2YKd29yaywgb2Ygd2hpY2ggSSBzcGVhaywgYXJlIG5vdCBtZXJlbHkgdGhlIHByb2R1Y3QKb2YgZGlmZmVyZW50IGF1dGhvcnMsIGJ1dCBoYXZlIGVhY2ggdGhlaXIgb3duIGZvbGxvd2luZyBvZiBhZG1pcmVycywgd2l0aCB0aGUgcmVzdWx0IHRoYXQgdGhlIHBlcmZlY3QKb3JhdG9yIGhhcyBub3QgeWV0IGJlZW4gZm91bmQsIGEgc3RhdGVtZW50IHdoaWNoCnBlcmhhcHMgbWF5IGJlIGV4dGVuZGVkIHRvIGFsbCBhcnRzLCBub3QgbWVyZWx5CmJlY2F1c2Ugc29tZSBxdWFsaXRpZXMgYXJlIG1vcmUgZXZpZGVudCBpbiBzb21lCmFydGlzdHMgdGhhbiBpbiBvdGhlcnMsIGJ1dCBiZWNhdXNlIG9uZSBzaW5nbGUgZm9ybQoKPHBiIGlkPSJwLjQ1MSIgLz4KCndpbGwgbm90IHNhdGlzZnkgYWxsIGNyaXRpY3MsIGEgZmFjdCB3aGljaCBpcyBkdWUgaW4KcGFydCB0byBjb25kaXRpb25zIG9mIHRpbWUgb3IgcGxhY2UsIGluIHBhcnQgdG8gdGhlCnRhc3RlIGFuZCBpZGVhbHMgb2YgaW5kaXZpZHVhbHMuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['12.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0iY2hhcHRlciIgLz48L3RyYW5zbGF0aW9uPg=="
translation['12.10.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBxdWVzdGlvbiBvZiB0aGUgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+a2luZCBvZiBzdHlsZTwvcXVvdGU+IHRvIGJlCmFkb3B0ZWQgcmVtYWlucyB0byBiZSBkaXNjdXNzZWQuIFRoaXMgd2FzIGRlc2NyaWJlZAppbiBteSBvcmlnaW5hbCBkaXZpc2lvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5JSS4geGl2LiA1Ljwvbm90ZT4gb2YgbXkgc3ViamVjdCBhcyBmb3JtaW5nIGl0cwp0aGlyZCBwb3J0aW9uOiBmb3IgSSBwcm9taXNlZCB0aGF0IEkgd291bGQgc3BlYWsgb2YKdGhlIGFydCwgdGhlIGFydGlzdCBhbmQgdGhlIHdvcmsuIEJ1dCBzaW5jZSBvcmF0b3J5CmlzIHRoZSB3b3JrIGJvdGggb2YgcmhldG9yaWMgYW5kIG9mIHRoZSBvcmF0b3IsIGFuZApzaW5jZSBpdCBoYXMgbWFueSBmb3JtcywgYXMgSSBzaGFsbCBzaG93LCB0aGUgYXJ0IGFuZAp0aGUgYXJ0aXN0IGFyZSBpbnZvbHZlZCBpbiB0aGUgY29uc2lkZXJhdGlvbiBvZiBhbGwKdGhlc2UgZm9ybXMuIEJ1dCB0aGV5IGRpZmZlciBncmVhdGx5IGZyb20gb25lCmFub3RoZXIsIGFuZCBub3QgbWVyZWx5IGluIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNwZWNpZXMsPC9oaT4gYXMgc3RhdHVlIGRpZmZlcnMKZnJvbSBzdGF0dWUsIHBpY3R1cmUgZnJvbSBwaWN0dXJlIGFuZCBzcGVlY2ggZnJvbQpzcGVlY2gsIGJ1dCBpbiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5nZW51czwvaGk+IGFzIHdlbGwsIGFzLCBmb3IgZXhhbXBsZSwKRXRydXNjYW4gc3RhdHVlcyBkaWZmZXIgZnJvbSBHcmVlayBhbmQgQXNpYXRpYwpvcmF0b3JzIGZyb20gQXR0aWMuPC90cmFuc2xhdGlvbj4="
translation['12.10.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgdGhlc2UgZGlmZmVyZW50IGtpbmRzIG9mCndvcmssIG9mIHdoaWNoIEkgc3BlYWssIGFyZSBub3QgbWVyZWx5IHRoZSBwcm9kdWN0Cm9mIGRpZmZlcmVudCBhdXRob3JzLCBidXQgaGF2ZSBlYWNoIHRoZWlyIG93biBmb2xsb3dpbmcgb2YgYWRtaXJlcnMsIHdpdGggdGhlIHJlc3VsdCB0aGF0IHRoZSBwZXJmZWN0Cm9yYXRvciBoYXMgbm90IHlldCBiZWVuIGZvdW5kLCBhIHN0YXRlbWVudCB3aGljaApwZXJoYXBzIG1heSBiZSBleHRlbmRlZCB0byBhbGwgYXJ0cywgbm90IG1lcmVseQpiZWNhdXNlIHNvbWUgcXVhbGl0aWVzIGFyZSBtb3JlIGV2aWRlbnQgaW4gc29tZQphcnRpc3RzIHRoYW4gaW4gb3RoZXJzLCBidXQgYmVjYXVzZSBvbmUgc2luZ2xlIGZvcm0KCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQ1MSIgLz4KCndpbGwgbm90IHNhdGlzZnkgYWxsIGNyaXRpY3MsIGEgZmFjdCB3aGljaCBpcyBkdWUgaW4KcGFydCB0byBjb25kaXRpb25zIG9mIHRpbWUgb3IgcGxhY2UsIGluIHBhcnQgdG8gdGhlCnRhc3RlIGFuZCBpZGVhbHMgb2YgaW5kaXZpZHVhbHMuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZmlyc3QgZ3JlYXQgcGFpbnRlcnMsIHdob3NlIHdvcmtzIGRlc2VydmUKaW5zcGVjdGlvbiBmb3Igc29tZXRoaW5nIG1vcmUgdGhhbiB0aGVpciBtZXJlCmFudGlxdWl0eSwgYXJlIHNhaWQgdG8gaGF2ZSBiZWVuIFBvbHlnbm90dXMgYW5kCkFnbGFvcGxsb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5PZiB0aGUgcGFpbnRlcnMgbWVudGlvbmVkIGluIHRoaXMgYW5kIHRoZSBmb2xsb3dpbmcKc2VjdGlvbnMgUG9seWdsb3R1cyBvZiBUaGFzb3MsIHNvbiBvZiBBZ2xhb3Bob24sIHBhaW50ZWQgYXQKQXRoZW5zIGluIHRoZSBtaWRkbGUgb2YgdGhlIDV0aCBjZW50dXJ5IEIuQy4uIFp1bmlzIG9mCkhlcmFjZWxlYSBQYXJyaGFzaXVzIG9mIEVwaGVzdXMgZmxvdXJpc2hlZCA0MjDigJMzOTAsIHdoaWxlCnRoZSByZW1haW5kZXIgYXJlIHBhaW50ZXJzIG9mIHRoZSA0dGggY2VudHVyeS4gT2YgdGhlc2UKUGFsbXBoaWx1cyBvZiBTaWN5b24gd2FzIHRoZSB0ZWFjaGVyIG9mIE1lbGFudGhpdXMgYW5kCkFwZWxsZXMsIHRoZSBsYXR0ZXIgYmVpbmcgdGhlIG1vc3QgZmFtb3VzIHBhaW50ZXIgb2YgYW50aXF1aXR5Ljwvbm90ZT4gd2hvc2Ugc2ltcGxlIGNvbG91cmluZyBoYXMgc3RpbGwgc3VjaAplbnRodXNpYXN0aWMgYWRtaXJlcnMgdGhhdCB0aGV5IHByZWZlciB0aGVzZSBhbG1vc3QKcHJpbWl0aXZlIHdvcmtzLCB3aGljaCBtYXkgYmUgcmVnYXJkZWQgYXMgdGhlIGZpcnN0CmZvdW5kYXRpb25zIG9mIHRoZSBhcnQgdGhhdCB3YXMgdG8gYmUsIG92ZXIgdGhlIHdvcmtzCm9mIHRoZSBncmVhdGVzdCBvZiB0aGVpciBzdWNjZXNzb3JzLCB0aGVpciBtb3RpdmUKYmVpbmcsIGluIG15IG9waW5pb24sIGFuIG9zdGVudGF0aW91cyBkZXNpcmUgdG8gc2VlbQpwZXJzb25zIG9mIHN1cGVyaW9yIHRhc3RlLjxtaWxlc3RvbmUgbj0iNCIgdW5pdD0ic2VjdGlvbiIgLz4gTGF0ZXIgWmV1eGlzIGFuZCBQYXJyaGFzaXVzIGNvbnRyaWJ1dGVkIG11Y2ggdG8gdGhlIHByb2dyZXNzIG9mIHBhaW50aW5nLgpUaGVzZSBhcnRpc3RzIHdlcmUgc2VwYXJhdGVkIGJ5IG5vIGdyZWF0IGRpc3RhbmNlIG9mCnRpbWUsIHNpbmNlIGJvdGggZmxvdXJpc2hlZCBhYm91dCB0aGUgcGVyaW9kIG9mIHRoZQpQZWxvcG9ubmVzaWFuIHdhcjogZm9yIGV4YW1wbGUsIFhlbm9waG9uPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+TWVtb2lyLjwvaGk+IElJSS4geC4gMS48L25vdGU+IGhhcwpwcmVzZXJ2ZWQgYSBjb252ZXJzYXRpb24gYmV0d2VlbiBTb2NyYXRlcyBhbmQKUGFycmhhc2l1cy4gVGhlIGZpcnN0LW1lbnRpb25lZCBzZWVtcyB0byBoYXZlCmRpc2NvdmVyZWQgdGhlIG1ldGhvZCBvZiByZXByZXNlbnRpbmcgbGlnaHQgYW5kCnNoYWRlLCB3aGlsZSB0aGUgbGF0dGVyIGlzIHNhaWQgdG8gaGF2ZSBkZXZvdGVkCnNwZWNpYWwgYXR0ZW50aW9uIHRvIHRoZSB0cmVhdG1lbnQgb2YgbGluZS48bWlsZXN0b25lIG49IjUiIHVuaXQ9InNlY3Rpb24iIC8+IEZvcgpaZXV4aXMgZW1waGFzaXNlZCB0aGUgbGltYnMgb2YgdGhlIGh1bWFuIGJvZHksPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+SS5lLjwvaGk+IGJ5IGdpdmluZyB0aGVtIHJvdW5kbmVzcyBhbmQgc29saWRpdHkgYnkgaGlzIHRyZWF0bWVudCBvZiBsaWdodCBhbmQgc2hhZGUuPC9ub3RlPgp0aGlua2luZyB0aGVyZWJ5IHRvIGFkZCBkaWduaXR5IGFuZCBncmFuZGV1ciB0bwpoaXMgc3R5bGU6IGl0IGlzIGdlbmVyYWxseSBzdXBwb3NlZCB0aGF0IGluIHRoaXMgaGUKZm9sbG93ZWQgdGhlIGV4YW1wbGUgb2YgSG9tZXIsIHdobyBsaWtlcyB0bwpyZXByZXNlbnQgZXZlbiBoaXMgZmVtYWxlIGNoYXJhY3RlcnMgYXMgYmVpbmcgb2YKaGVyb2ljIG1vdWxkLiBQYXJyaGFzaXVzLCBvbiB0aGUgb3RoZXIgaGFuZCwgd2FzCnNvIGZpbmUgYSBkcmF1Z2h0c21hbiB0aGF0IGhlIGhhcyBiZWVuIHN0eWxlZCB0aGUKbGF3LWdpdmVyIG9mIGhpcyBhcnQsIG9uIHRoZSBncm91bmQgdGhhdCBhbGwgb3RoZXIKYXJ0aXN0cyB0YWtlIGhpcyByZXByZXNlbnRhdGlvbnMgb2YgZ29kcyBhbmQgaGVyb2VzIGFzCm1vZGVscywgYXMgdGhvdWdoIG5vIG90aGVyIGNvdXJzZSB3ZXJlIHBvc3NpYmxlLgo8bWlsZXN0b25lIG49IjYiIHVuaXQ9InNlY3Rpb24iIC8+SXQgd2FzLCBob3dldmVyLCBmcm9tIGFib3V0IHRoZSBwZXJpb2Qgb2YgdGhlIHJlaWduCm9mIFBoaWxpcCBkb3duIHRvIHRoYXQgb2YgdGhlIHN1Y2Nlc3NvcnMgb2YgQWxleGFuZGVyCgo8cGIgaWQ9InAuNDUzIiAvPgoKdGhhdCBwYWludGluZyBmbG91cmlzaGVkIG1vcmUgZXNwZWNpYWxseSwgYWx0aG91Z2gKdGhlIGRpZmZlcmVudCBhcnRpc3RzIGFyZSBkaXN0aW5ndWlzaGVkIGZvciBkaWZmZXJlbnQKZXhjZWxsZW5jZXMuIFByb3RvZ2VuZXMsIGZvciBleGFtcGxlLCB3YXMgcmVub3duZWQKZm9yIGFjY3VyYWN5LCBQYW1waGlsdXMgYW5kIE1lbGFudGhpdXMgZm9yIHNvdW5kbmVzcyBvZiB0YXN0ZSwgQW50aXBoaWx1cyBmb3IgZmFjaWxpdHksIFRoZW9uIG9mIFNhbW9zCmZvciBoaXMgZGVwaWN0aW9uIG9mIGltYWdpbmFyeSBzY2VuZXMsIGtub3duIGFzCjxmb3JlaWduIGxhbmc9ImdyZWVrIj5mYW50YXNpL2FpLDwvZm9yZWlnbj4gYW5kIEFwZWxsZXMgZm9yIGdlbml1cyBhbmQgZ3JhY2UsIGluIHRoZQpsYXR0ZXIgb2Ygd2hpY2ggcXVhbGl0aWVzIGhlIHRvb2sgZXNwZWNpYWwgcHJpZGUuCkV1cGhyYW5vciwgb24gdGhlIG90aGVyIGhhbmQsIHdhcyBhZG1pcmVkIG9uIHRoZQpncm91bmQgdGhhdCwgd2hpbGUgaGUgcmFua2VkIHdpdGggdGhlIG1vc3QgZW1pbmVudAptYXN0ZXJzIG9mIG90aGVyIGFydHMsIGhlIGF0IHRoZSBzYW1lIHRpbWUgYWNoaWV2ZWQKbWFydmVsbG91cyBza2lsbCBpbiB0aGUgYXJ0cyBvZiBzY3VscHR1cmUgYW5kIHBhaW50aW5nLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['12.10.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBmaXJzdCBncmVhdCBwYWludGVycywgd2hvc2Ugd29ya3MgZGVzZXJ2ZQppbnNwZWN0aW9uIGZvciBzb21ldGhpbmcgbW9yZSB0aGFuIHRoZWlyIG1lcmUKYW50aXF1aXR5LCBhcmUgc2FpZCB0byBoYXZlIGJlZW4gUG9seWdub3R1cyBhbmQKQWdsYW9wbGxvbiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+T2YgdGhlIHBhaW50ZXJzIG1lbnRpb25lZCBpbiB0aGlzIGFuZCB0aGUgZm9sbG93aW5nCnNlY3Rpb25zIFBvbHlnbG90dXMgb2YgVGhhc29zLCBzb24gb2YgQWdsYW9waG9uLCBwYWludGVkIGF0CkF0aGVucyBpbiB0aGUgbWlkZGxlIG9mIHRoZSA1dGggY2VudHVyeSBCLkMuLiBadW5pcyBvZgpIZXJhY2VsZWEgUGFycmhhc2l1cyBvZiBFcGhlc3VzIGZsb3VyaXNoZWQgNDIw4oCTMzkwLCB3aGlsZQp0aGUgcmVtYWluZGVyIGFyZSBwYWludGVycyBvZiB0aGUgNHRoIGNlbnR1cnkuIE9mIHRoZXNlClBhbG1waGlsdXMgb2YgU2ljeW9uIHdhcyB0aGUgdGVhY2hlciBvZiBNZWxhbnRoaXVzIGFuZApBcGVsbGVzLCB0aGUgbGF0dGVyIGJlaW5nIHRoZSBtb3N0IGZhbW91cyBwYWludGVyIG9mIGFudGlxdWl0eS48L25vdGU+IHdob3NlIHNpbXBsZSBjb2xvdXJpbmcgaGFzIHN0aWxsIHN1Y2gKZW50aHVzaWFzdGljIGFkbWlyZXJzIHRoYXQgdGhleSBwcmVmZXIgdGhlc2UgYWxtb3N0CnByaW1pdGl2ZSB3b3Jrcywgd2hpY2ggbWF5IGJlIHJlZ2FyZGVkIGFzIHRoZSBmaXJzdApmb3VuZGF0aW9ucyBvZiB0aGUgYXJ0IHRoYXQgd2FzIHRvIGJlLCBvdmVyIHRoZSB3b3JrcwpvZiB0aGUgZ3JlYXRlc3Qgb2YgdGhlaXIgc3VjY2Vzc29ycywgdGhlaXIgbW90aXZlCmJlaW5nLCBpbiBteSBvcGluaW9uLCBhbiBvc3RlbnRhdGlvdXMgZGVzaXJlIHRvIHNlZW0KcGVyc29ucyBvZiBzdXBlcmlvciB0YXN0ZS48L3RyYW5zbGF0aW9uPg=="
translation['12.10.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBMYXRlciBaZXV4aXMgYW5kIFBhcnJoYXNpdXMgY29udHJpYnV0ZWQgbXVjaCB0byB0aGUgcHJvZ3Jlc3Mgb2YgcGFpbnRpbmcuClRoZXNlIGFydGlzdHMgd2VyZSBzZXBhcmF0ZWQgYnkgbm8gZ3JlYXQgZGlzdGFuY2Ugb2YKdGltZSwgc2luY2UgYm90aCBmbG91cmlzaGVkIGFib3V0IHRoZSBwZXJpb2Qgb2YgdGhlClBlbG9wb25uZXNpYW4gd2FyOiBmb3IgZXhhbXBsZSwgWGVub3Bob248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+TWVtb2lyLjwvaGk+IElJSS4geC4gMS48L25vdGU+IGhhcwpwcmVzZXJ2ZWQgYSBjb252ZXJzYXRpb24gYmV0d2VlbiBTb2NyYXRlcyBhbmQKUGFycmhhc2l1cy4gVGhlIGZpcnN0LW1lbnRpb25lZCBzZWVtcyB0byBoYXZlCmRpc2NvdmVyZWQgdGhlIG1ldGhvZCBvZiByZXByZXNlbnRpbmcgbGlnaHQgYW5kCnNoYWRlLCB3aGlsZSB0aGUgbGF0dGVyIGlzIHNhaWQgdG8gaGF2ZSBkZXZvdGVkCnNwZWNpYWwgYXR0ZW50aW9uIHRvIHRoZSB0cmVhdG1lbnQgb2YgbGluZS48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5NZW1vaXIuPC9oaT4gSUlJLiB4LiAxLjwvdHJhbnNsYXRpb24+"
translation['12.10.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IKWmV1eGlzIGVtcGhhc2lzZWQgdGhlIGxpbWJzIG9mIHRoZSBodW1hbiBib2R5LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5JLmUuPC9oaT4gYnkgZ2l2aW5nIHRoZW0gcm91bmRuZXNzIGFuZCBzb2xpZGl0eSBieSBoaXMgdHJlYXRtZW50IG9mIGxpZ2h0IGFuZCBzaGFkZS48L25vdGU+CnRoaW5raW5nIHRoZXJlYnkgdG8gYWRkIGRpZ25pdHkgYW5kIGdyYW5kZXVyIHRvCmhpcyBzdHlsZTogaXQgaXMgZ2VuZXJhbGx5IHN1cHBvc2VkIHRoYXQgaW4gdGhpcyBoZQpmb2xsb3dlZCB0aGUgZXhhbXBsZSBvZiBIb21lciwgd2hvIGxpa2VzIHRvCnJlcHJlc2VudCBldmVuIGhpcyBmZW1hbGUgY2hhcmFjdGVycyBhcyBiZWluZyBvZgpoZXJvaWMgbW91bGQuIFBhcnJoYXNpdXMsIG9uIHRoZSBvdGhlciBoYW5kLCB3YXMKc28gZmluZSBhIGRyYXVnaHRzbWFuIHRoYXQgaGUgaGFzIGJlZW4gc3R5bGVkIHRoZQpsYXctZ2l2ZXIgb2YgaGlzIGFydCwgb24gdGhlIGdyb3VuZCB0aGF0IGFsbCBvdGhlcgphcnRpc3RzIHRha2UgaGlzIHJlcHJlc2VudGF0aW9ucyBvZiBnb2RzIGFuZCBoZXJvZXMgYXMKbW9kZWxzLCBhcyB0aG91Z2ggbm8gb3RoZXIgY291cnNlIHdlcmUgcG9zc2libGUuCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkkuZS48L2hpPiBieSBnaXZpbmcgdGhlbSByb3VuZG5lc3MgYW5kIHNvbGlkaXR5IGJ5IGhpcyB0cmVhdG1lbnQgb2YgbGlnaHQgYW5kIHNoYWRlLjwvdHJhbnNsYXRpb24+"
translation['12.10.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkl0IHdhcywgaG93ZXZlciwgZnJvbSBhYm91dCB0aGUgcGVyaW9kIG9mIHRoZSByZWlnbgpvZiBQaGlsaXAgZG93biB0byB0aGF0IG9mIHRoZSBzdWNjZXNzb3JzIG9mIEFsZXhhbmRlcgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDUzIiAvPgoKdGhhdCBwYWludGluZyBmbG91cmlzaGVkIG1vcmUgZXNwZWNpYWxseSwgYWx0aG91Z2gKdGhlIGRpZmZlcmVudCBhcnRpc3RzIGFyZSBkaXN0aW5ndWlzaGVkIGZvciBkaWZmZXJlbnQKZXhjZWxsZW5jZXMuIFByb3RvZ2VuZXMsIGZvciBleGFtcGxlLCB3YXMgcmVub3duZWQKZm9yIGFjY3VyYWN5LCBQYW1waGlsdXMgYW5kIE1lbGFudGhpdXMgZm9yIHNvdW5kbmVzcyBvZiB0YXN0ZSwgQW50aXBoaWx1cyBmb3IgZmFjaWxpdHksIFRoZW9uIG9mIFNhbW9zCmZvciBoaXMgZGVwaWN0aW9uIG9mIGltYWdpbmFyeSBzY2VuZXMsIGtub3duIGFzCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPmZhbnRhc2kvYWksPC9mb3JlaWduPiBhbmQgQXBlbGxlcyBmb3IgZ2VuaXVzIGFuZCBncmFjZSwgaW4gdGhlCmxhdHRlciBvZiB3aGljaCBxdWFsaXRpZXMgaGUgdG9vayBlc3BlY2lhbCBwcmlkZS4KRXVwaHJhbm9yLCBvbiB0aGUgb3RoZXIgaGFuZCwgd2FzIGFkbWlyZWQgb24gdGhlCmdyb3VuZCB0aGF0LCB3aGlsZSBoZSByYW5rZWQgd2l0aCB0aGUgbW9zdCBlbWluZW50Cm1hc3RlcnMgb2Ygb3RoZXIgYXJ0cywgaGUgYXQgdGhlIHNhbWUgdGltZSBhY2hpZXZlZAptYXJ2ZWxsb3VzIHNraWxsIGluIHRoZSBhcnRzIG9mIHNjdWxwdHVyZSBhbmQgcGFpbnRpbmcuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgc2FtZSBkaWZmZXJlbmNlcyBleGlzdCBiZXR3ZWVuIHNjdWxwdG9ycy4gVGhlCmFydCBvZiBDYWxsb24gYW5kIEhlZ2VzaWFzPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5DYWxsb24gb2YgQWVnaW5hIGFuZCBIZWdlc2lhcyBmbG91cmlzaGVkIGluIHRoZSBsYXR0ZXIKeWVhcnMgb2YgdGhlIDZ0aCBjZW50dXJ5LiBDYWxhbWlzIG9mIEF0aGVucyBhbmQgTXlyb24gb2YKRWxldXRoZWFlLCBmaXJzdCBoYWxmIG9mIDV0aCBjZW50dXJ5eS4gUGhpZGxpYXMgb2YgQXRoZW5zIGFuZApQb2x5ZWxpdHVzIG9mIEFyZ29zLCB0aGUgdHdvIG1vc3QgZmFtb3VzIHNjdWxwdG9ycyBvZiB0aGUKc2Vjb25kIGhhbGYgb2YgNXRoIGNlbnR1cnkuIFByYXhpdGVsZXMsIG1pZGRsZSBvZiA0dGgKY2VudHVyeS4gTHlzaXBwdXMgYW5kIERlbWV0cml1cywgbGFzdCBoYWxmIG9mIDR0aCBjZW50dXJ5Ljwvbm90ZT4gaXMgc29tZXdoYXQgcnVkZSBhbmQKcmVjYWxscyB0aGUgRXRydXNjYW5zLCBidXQgdGhlIHdvcmsgb2YgQ2FsYW1pcyBoYXMKYWxyZWFkeSBiZWd1biB0byBiZSBsZXNzIHN0aWZmLCB3aGlsZSBNeXJvbidzIHN0YXR1ZXMKc2hvdyBhIGdyZWF0ZXIgc29mdG5lc3Mgb2YgZm9ybSB0aGFuIGhhZCBiZWVuCmFjaGlldmVkIGJ5IHRoZSBhcnRpc3RzIGp1c3QgbWVudGlvbmVkLiBQb2x5Y2xpdHVzCnN1cnBhc3NlZCBhbGwgb3RoZXJzIGZvciBjYXJlIGFuZCBncmFjZSwgYnV0IGFsdGhvdWdoCnRoZSBtYWpvcml0eSBvZiBjcml0aWNzIGFjY291bnQgaGltIGFzIHRoZSBncmVhdGVzdApvZiBzY3VscHRvcnMsIHRvIGF2b2lkIG1ha2luZyBoaW0gZmF1bHRsZXNzIHRoZXkKZXhwcmVzcyB0aGUgb3BpbmlvbiB0aGF0IGhpcyB3b3JrIGlzIGxhY2tpbmcgaW4KZ3JhbmRldXIuPG1pbGVzdG9uZSBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiBGb3Igd2hpbGUgaGUgZ2F2ZSB0aGUgaHVtYW4gZm9ybSBhbgppZGVhbCBncmFjZSwgaGUgaXMgdGhvdWdodCB0byBoYXZlIGJlZW4gbGVzcyBzdWNjZXNzZnVsIGluIHJlcHJlc2VudGluZyB0aGUgZGlnbml0eSBvZiB0aGUgZ29kcy4gaGUgaXMKZnVydGhlciBhbGxlZ2VkIHRvIGhhdmUgc2hydW5rIGZyb20gcmVwcmVzZW50aW5nCnBlcnNvbnMgb2YgbWF0dXJlciB5ZWFycywgYW5kIHRvIGhhdmUgdmVudHVyZWQgb24Kbm90aGluZyBtb3JlIGRpZmZpY3VsdCB0aGFuIGEgc21vb3RoIGFuZCBiZWFyZGxlc3MKZmFjZS4gQnV0IHRoZSBxdWFsaXRpZXMgbGFja2luZyBpbiBQb2x5Y2xpdHVzIGFyZQphbGxvd2VkIHRvIGhhdmUgYmVlbiBwb3NzZXNzZWQgYnkgUGhpZGlhcyBhbmQKQWxjYW1lbmVzLjxtaWxlc3RvbmUgbj0iOSIgdW5pdD0ic2VjdGlvbiIgLz4gT24gdGhlIG90aGVyIGhhbmQsIFBoaWRpYXMgaXMgcmVnYXJkZWQKYXMgbW9yZSBnaWZ0ZWQgaW4gaGlzIHJlcHJlc2VudGF0aW9uIG9mIGdvZHMgdGhhbiBvZgptZW4sIGFuZCBpbmRlZWQgZm9yIGNocnlzZWxlcGhhbnRpbmUgc3RhdHVlcyBoZSBpcwp3aXRob3V0IGEgcGVlciwgYXMgaGUgd291bGQgaW4gdHJ1dGggYmUsIGV2ZW4gaWYgaGUKCjxwYiBpZD0icC40NTUiIC8+CgpoYWQgcHJvZHVjZWQgbm90aGluZyBpbiB0aGlzIG1hdGVyaWFsIGJleW9uZCBoaXMKTWluZXJ2YSBhdCBBdGhlbnMgYW5kIGhpcyBKdXBpdGVyIGF0IE9seW1waWEgaW4KRWxpcywgd2hvc2UgYmVhdXR5IGlzIHN1Y2ggdGhhdCBpdCBpcyBzYWlkIHRvIGhhdmUKYWRkZWQgc29tZXRoaW5nIGV2ZW4gdG8gdGhlIGF3ZSB3aXRoIHdoaWNoIHRoZQpnb2Qgd2FzIGFscmVhZHkgcmVnYXJkZWQ6IHNvIHBlcmZlY3RseSBkaWQgdGhlCm1hamVzdHkgb2YgdGhlIHdvcmsgZ2l2ZSB0aGUgaW1wcmVzc2lvbiBvZiBnb2RoZWFkLgpMeXNpcHB1cyBhbmQgUHJheGl0ZWxlcyBhcmUgYXNzZXJ0ZWQgdG8gYmUgc3VwcmVtZQphcyByZWdhcmRzIGZhaXRoZnVsbmVzcyB0byBuYXR1cmUuIEZvciBEZW1ldHJpdXMgaXMKYmxhbWVkIGZvciBjYXJyeWluZyByZWFsaXNtIHRvbyBmYXIsIGFuZCBpcyBsZXNzCmNvbmNlcm5lZCBhYm91dCB0aGUgYmVhdXR5IHRoYW4gdGhlIHRydXRoIG9mIGhpcwp3b3JrLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['12.10.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBzYW1lIGRpZmZlcmVuY2VzIGV4aXN0IGJldHdlZW4gc2N1bHB0b3JzLiBUaGUKYXJ0IG9mIENhbGxvbiBhbmQgSGVnZXNpYXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+Q2FsbG9uIG9mIEFlZ2luYSBhbmQgSGVnZXNpYXMgZmxvdXJpc2hlZCBpbiB0aGUgbGF0dGVyCnllYXJzIG9mIHRoZSA2dGggY2VudHVyeS4gQ2FsYW1pcyBvZiBBdGhlbnMgYW5kIE15cm9uIG9mCkVsZXV0aGVhZSwgZmlyc3QgaGFsZiBvZiA1dGggY2VudHVyeXkuIFBoaWRsaWFzIG9mIEF0aGVucyBhbmQKUG9seWVsaXR1cyBvZiBBcmdvcywgdGhlIHR3byBtb3N0IGZhbW91cyBzY3VscHRvcnMgb2YgdGhlCnNlY29uZCBoYWxmIG9mIDV0aCBjZW50dXJ5LiBQcmF4aXRlbGVzLCBtaWRkbGUgb2YgNHRoCmNlbnR1cnkuIEx5c2lwcHVzIGFuZCBEZW1ldHJpdXMsIGxhc3QgaGFsZiBvZiA0dGggY2VudHVyeS48L25vdGU+IGlzIHNvbWV3aGF0IHJ1ZGUgYW5kCnJlY2FsbHMgdGhlIEV0cnVzY2FucywgYnV0IHRoZSB3b3JrIG9mIENhbGFtaXMgaGFzCmFscmVhZHkgYmVndW4gdG8gYmUgbGVzcyBzdGlmZiwgd2hpbGUgTXlyb24ncyBzdGF0dWVzCnNob3cgYSBncmVhdGVyIHNvZnRuZXNzIG9mIGZvcm0gdGhhbiBoYWQgYmVlbgphY2hpZXZlZCBieSB0aGUgYXJ0aXN0cyBqdXN0IG1lbnRpb25lZC4gUG9seWNsaXR1cwpzdXJwYXNzZWQgYWxsIG90aGVycyBmb3IgY2FyZSBhbmQgZ3JhY2UsIGJ1dCBhbHRob3VnaAp0aGUgbWFqb3JpdHkgb2YgY3JpdGljcyBhY2NvdW50IGhpbSBhcyB0aGUgZ3JlYXRlc3QKb2Ygc2N1bHB0b3JzLCB0byBhdm9pZCBtYWtpbmcgaGltIGZhdWx0bGVzcyB0aGV5CmV4cHJlc3MgdGhlIG9waW5pb24gdGhhdCBoaXMgd29yayBpcyBsYWNraW5nIGluCmdyYW5kZXVyLjwvdHJhbnNsYXRpb24+"
translation['12.10.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiBGb3Igd2hpbGUgaGUgZ2F2ZSB0aGUgaHVtYW4gZm9ybSBhbgppZGVhbCBncmFjZSwgaGUgaXMgdGhvdWdodCB0byBoYXZlIGJlZW4gbGVzcyBzdWNjZXNzZnVsIGluIHJlcHJlc2VudGluZyB0aGUgZGlnbml0eSBvZiB0aGUgZ29kcy4gaGUgaXMKZnVydGhlciBhbGxlZ2VkIHRvIGhhdmUgc2hydW5rIGZyb20gcmVwcmVzZW50aW5nCnBlcnNvbnMgb2YgbWF0dXJlciB5ZWFycywgYW5kIHRvIGhhdmUgdmVudHVyZWQgb24Kbm90aGluZyBtb3JlIGRpZmZpY3VsdCB0aGFuIGEgc21vb3RoIGFuZCBiZWFyZGxlc3MKZmFjZS4gQnV0IHRoZSBxdWFsaXRpZXMgbGFja2luZyBpbiBQb2x5Y2xpdHVzIGFyZQphbGxvd2VkIHRvIGhhdmUgYmVlbiBwb3NzZXNzZWQgYnkgUGhpZGlhcyBhbmQKQWxjYW1lbmVzLjwvdHJhbnNsYXRpb24+"
translation['12.10.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPiBPbiB0aGUgb3RoZXIgaGFuZCwgUGhpZGlhcyBpcyByZWdhcmRlZAphcyBtb3JlIGdpZnRlZCBpbiBoaXMgcmVwcmVzZW50YXRpb24gb2YgZ29kcyB0aGFuIG9mCm1lbiwgYW5kIGluZGVlZCBmb3IgY2hyeXNlbGVwaGFudGluZSBzdGF0dWVzIGhlIGlzCndpdGhvdXQgYSBwZWVyLCBhcyBoZSB3b3VsZCBpbiB0cnV0aCBiZSwgZXZlbiBpZiBoZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDU1IiAvPgoKaGFkIHByb2R1Y2VkIG5vdGhpbmcgaW4gdGhpcyBtYXRlcmlhbCBiZXlvbmQgaGlzCk1pbmVydmEgYXQgQXRoZW5zIGFuZCBoaXMgSnVwaXRlciBhdCBPbHltcGlhIGluCkVsaXMsIHdob3NlIGJlYXV0eSBpcyBzdWNoIHRoYXQgaXQgaXMgc2FpZCB0byBoYXZlCmFkZGVkIHNvbWV0aGluZyBldmVuIHRvIHRoZSBhd2Ugd2l0aCB3aGljaCB0aGUKZ29kIHdhcyBhbHJlYWR5IHJlZ2FyZGVkOiBzbyBwZXJmZWN0bHkgZGlkIHRoZQptYWplc3R5IG9mIHRoZSB3b3JrIGdpdmUgdGhlIGltcHJlc3Npb24gb2YgZ29kaGVhZC4KTHlzaXBwdXMgYW5kIFByYXhpdGVsZXMgYXJlIGFzc2VydGVkIHRvIGJlIHN1cHJlbWUKYXMgcmVnYXJkcyBmYWl0aGZ1bG5lc3MgdG8gbmF0dXJlLiBGb3IgRGVtZXRyaXVzIGlzCmJsYW1lZCBmb3IgY2FycnlpbmcgcmVhbGlzbSB0b28gZmFyLCBhbmQgaXMgbGVzcwpjb25jZXJuZWQgYWJvdXQgdGhlIGJlYXV0eSB0aGFuIHRoZSB0cnV0aCBvZiBoaXMKd29yay48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3csIGlmIHdlIHR1cm4gb3VyIGF0dGVudGlvbiB0byB0aGUgdmFyaW91cyBzdHlsZXMKb2Ygb3JhdG9yeSwgd2Ugc2hhbGwgZmluZCBhbG1vc3QgYXMgZ3JlYXQgdmFyaWV0eSBvZgp0YWxlbnRzIGFzIHRoZXJlIGFyZSBvZiBwZXJzb25hbCBhcHBlYXJhbmNlLiBUaGVyZQp3ZXJlIGNlcnRhaW4ga2luZHMgb2Ygb3JhdG9yeSB3aGljaCwgb3dpbmcgdG8gdGhlCmNpcmN1bXN0YW5jZXMgb2YgdGhlIGFnZSwgc3VmZmVyZWQgZnJvbSBsYWNrIG9mIHBvbGlzaCwKYWx0aG91Z2ggaW4gb3RoZXIgcmVzcGVjdHMgdGhleSBkaXNwbGF5ZWQgcmVtYXJrYWJsZQpnZW5pdXMuIEluIHRoaXMgY2xhc3Mgd2UgbWF5IHBsYWNlIG9yYXRvcnMgc3VjaCBhcwpMYWVsaXVzLCBBZnJpY2FudXMsIENhdG8sIGFuZCBldmVuIHRoZSBHcmFjY2hpLAp3aG9tIHdlIG1heSBjYWxsIHRoZSA8cXVvdGU+UG9seWdub3RpPC9xdW90ZT4gYW5kIDxxdW90ZT5DYWxsb25lczwvcXVvdGU+Cm9mIG9yYXRvcnkuPG1pbGVzdG9uZSBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gQW1vbmcgb3JhdG9ycyBvZiB0aGUgaW50ZXJtZWRpYXRlCnR5cGUgd2UgbWF5IHJhbmsgTHVjaXVzIENyYXNzdXMgYW5kIFF1aW50dXMKSG9ydGVuc2l1cy4gVGhlbiBsZXQgdXMgdHVybiB0byBhIHZhc3QgaGFydmVzdCBvZgpvcmF0b3JzIHdobyBmbG91cmlzaGVkIG11Y2ggYWJvdXQgdGhlIHNhbWUgcGVyaW9kLgpJdCBpcyBoZXJlIHRoYXQgd2UgZmluZCB0aGUgdmlnb3VyIG9mIENhZXNhciwgdGhlCm5hdHVyYWwgdGFsZW50IG9mIENhZWxpdXMsIHRoZSBzdWJ0bGV0eSBvZiBDYWxpZGl1cywKdGhlIGFjY3VyYWN5IG9mIFBvbGxpbywgdGhlIGRpZ25pdHkgb2YgTWVzc2FsYSwgdGhlCmF1c3Rlcml0eSBvZiBDYWx2dXMsIHRoZSBncmF2aXR5IG9mIEJydXR1cywgdGhlIGFjdW1lbgpvZiBTdWxwaWNpdXMgYW5kIHRoZSBiaXR0ZXJuZXNzIG9mIENhc3NpdXMsIHdoaWxlCmFtb25nIHRob3NlIHdob20gd2UgaGF2ZSBzZWVuIG91cnNlbHZlcyB3ZQphZG1pcmUgdGhlIGZsdWVuY3kgb2YgU2VuZWNhLCB0aGUgc3RyZW5ndGggb2YgQWZyaWNhbnVzLCB0aGUgbWVsbG93bmVzcyBvZiBBZmVyLCB0aGUgY2hhcm0gb2YgQ3Jpc3B1cywKdGhlIHNvbm9yaXR5IG9mIFRyYWNoYWx1cyBhbmQgdGhlIGVsZWdhbmNlIG9mIFNlY3VuZHVzLjxtaWxlc3RvbmUgbj0iMTIiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCBpbiBDaWNlcm8gd2UgaGF2ZSBvbmUgd2hvIGlzIG5vdCwKCjxwYiBpZD0icC40NTciIC8+CgpsaWtlIEV1cGhyYW5vciwgbWVyZWx5IGRpc3Rpbmd1aXNoZWQgaW4gYSBudW1iZXIKb2YgZGlmZmVyZW50IGZvcm1zIG9mIGFydCwgYnV0IGlzIHN1cHJlbWUgaW4gYWxsIHRoZQpkaWZmZXJlbnQgcXVhbGl0aWVzIHdoaWNoIGFyZSBwcmFpc2VkIGluIGVhY2ggaW5kaXZpZHVhbApvcmF0b3IuPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgcmVuZD0iaXRhbGljcyI+Q3AuPC9oaT4geC4gaS4gMTA1IDxoaSByZW5kPSJpdGFsaWNzIj5zcS48L2hpPjwvbm90ZT4gQW5kIHlldCBldmVuIGhpcyBvd24gY29udGVtcG9yYXJpZXMKdmVudHVyZWQgdG8gYXR0YWNrIGhpbSBvbiB0aGUgZ3JvdW5kIHRoYXQgaGUgd2FzCmJvbWJhc3RpYywgQXNpYXRpYywgcmVkdW5kYW50LCBnaXZlbiB0byBleGNlc3NpdmUKcmVwZXRpdGlvbiwgbGlhYmxlIGF0IHRpbWVzIHRvIGJlIHBvaW50bGVzcyBpbiBoaXMKd2l0dGljaXNtcywgc2Vuc3VvdXMsIGV4dHJhdmFnYW50IGFuZCAoYW4gb3V0cmFnZW91cwphY2N1c2F0aW9uISkgYWxtb3N0IGVmZmVtaW5hdGUgaW4gaGlzIHJoeXRobS48bWlsZXN0b25lIG49IjEzIiB1bml0PSJzZWN0aW9uIiAvPiBBbmQKbGF0ZXIsIGFmdGVyIGhlIGhhZCBmYWxsZW4gYSB2aWN0aW0gdG8gdGhlIHByb3NjcmlwdGlvbiBvZiB0aGUgc2Vjb25kIHRyaXVtdmlyYXRlLCB0aG9zZSB3aG8gaGF0ZWQKYW5kIGVudmllZCBoaW0gYW5kIHJlZ2FyZGVkIGhpbSBhcyB0aGVpciByaXZhbCwgbmF5LApldmVuIHRob3NlIHdobyBoYWQgZmxhdHRlcmVkIGhpbSBpbiB0aGUgZGF5cyBvZiBoaXMKcG93ZXIsIGF0dGFja2VkIGhpbSBub3cgdGhhdCBoZSBjb3VsZCBubyBsb25nZXIKcmVwbHkuIEJ1dCB0aGF0IHZlcnkgbWFuLCB3aG8gaXMgbm93IHJlZ2FyZGVkCmJ5IHNvbWUgYXMgYmVpbmcgdG9vIGplanVuZSBhbmQgZHJ5LCB3YXMgYXR0YWNrZWQKYnkgaGlzIHBlcnNvbmFsIGVuZW1pZXMgb24gbm8gb3RoZXIgZ3JvdW5kIHRoYW4KdGhhdCBoaXMgc3R5bGUgd2FzIHRvbyBmbG9yaWQgYW5kIGhpcyB0YWxlbnRzIHRvbyBsaXR0bGUKdW5kZXIgY29udHJvbC4gQm90aCBjaGFyZ2VzIGFyZSBmYWxzZSwgYnV0IHRoZXJlIGlzCm1vcmUgY29sb3VyIGZvciB0aGUgaGUgaW4gdGhlIGxhdHRlciBjYXNlIHRoYW4gaW4KdGhlIGZvcm1lci48bWlsZXN0b25lIG49IjE0IiB1bml0PSJzZWN0aW9uIiAvPiBUaG9zZSwgaG93ZXZlciwgd2hvIGNyaXRpY2lzZWQgaGltCm1vc3Qgc2V2ZXJlbHkgd2VyZSB0aGUgc3BlYWtlcnMgd2hvIGRlc2lyZWQgdG8gYmUKcmVnYXJkZWQgYXMgdGhlIGltaXRhdG9ycyBvZiBBdHRpYyBvcmF0b3J5LiBUaGlzCmNvdGVyaWUsIHJlZ2FyZGluZyB0aGVtc2VsdmVzIGFzIHRoZSBzb2xlIGluaXRpYXRlcyBpbgp0aGUgbXlzdGVyaWVzIG9mIHRoZWlyIGFydCwgYXNzYWlsZWQgaGltIGFzIGFuIGFsaWVuLAppbmRpZmZlcmVudCB0byB0aGVpciBzdXBlcnN0aXRpb25zIGFuZCByZWZ1c2luZyB0byBiZQpib3VuZCBieSB0aGVpciBsYXdzLiBUaGVpciBkZXNjZW5kYW50cyBhcmUgYW1vbmcKdXMgdG8tZGF5LCBhIHdpdGhlcmVkLCBzYXBsZXNzIGFuZCBhbmVtaWMgYmFuZC4KPG1pbGVzdG9uZSBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgaXMgdGhleSB0aGF0IGZsYXVudCB0aGVpciB3ZWFrbmVzcyB1bmRlciB0aGUKbmFtZSBvZiBoZWFsdGgsIGluIGRlZmlhbmNlIG9mIHRoZSBhY3R1YWwgdHJ1dGgsIGFuZApiZWNhdXNlIHRoZXkgY2Fubm90IGVuZHVyZSB0aGUgZGF6emxpbmcgcmF5cyBvZiB0aGUKc3VuIG9mIGVsb3F1ZW5jZSwgaGlkZSB0aGVtc2VsdmVzIGJlbmVhdGggdGhlCnNoYWRvdyBvZiBhIG1pZ2h0eSBuYW1lLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPkkuZS48L2hpPiBBdHRpYy48L25vdGU+IEhvd2V2ZXIsIGFzIENpY2VybyBoaW1zZWxmIGFuc3dlcmVkIHRoZW0gYXQgbGVuZ3RoIGFuZCBpbiBhIG51bWJlciBvZgoKPHBiIGlkPSJwLjQ1OSIgLz4KCnBhc3NhZ2VzLCBpdCB3aWxsIGJlIHNhZmVyIGZvciBtZSB0byBiZSBicmllZiBpbiBteQp0cmVhdG1lbnQgb2YgdGhpcyB0b3BpYy48L3A+CjwvdHJhbnNsYXRpb24+"
translation['12.10.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3csIGlmIHdlIHR1cm4gb3VyIGF0dGVudGlvbiB0byB0aGUgdmFyaW91cyBzdHlsZXMKb2Ygb3JhdG9yeSwgd2Ugc2hhbGwgZmluZCBhbG1vc3QgYXMgZ3JlYXQgdmFyaWV0eSBvZgp0YWxlbnRzIGFzIHRoZXJlIGFyZSBvZiBwZXJzb25hbCBhcHBlYXJhbmNlLiBUaGVyZQp3ZXJlIGNlcnRhaW4ga2luZHMgb2Ygb3JhdG9yeSB3aGljaCwgb3dpbmcgdG8gdGhlCmNpcmN1bXN0YW5jZXMgb2YgdGhlIGFnZSwgc3VmZmVyZWQgZnJvbSBsYWNrIG9mIHBvbGlzaCwKYWx0aG91Z2ggaW4gb3RoZXIgcmVzcGVjdHMgdGhleSBkaXNwbGF5ZWQgcmVtYXJrYWJsZQpnZW5pdXMuIEluIHRoaXMgY2xhc3Mgd2UgbWF5IHBsYWNlIG9yYXRvcnMgc3VjaCBhcwpMYWVsaXVzLCBBZnJpY2FudXMsIENhdG8sIGFuZCBldmVuIHRoZSBHcmFjY2hpLAp3aG9tIHdlIG1heSBjYWxsIHRoZSA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Qb2x5Z25vdGk8L3F1b3RlPiBhbmQgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2FsbG9uZXM8L3F1b3RlPgpvZiBvcmF0b3J5LjwvdHJhbnNsYXRpb24+"
translation['12.10.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gQW1vbmcgb3JhdG9ycyBvZiB0aGUgaW50ZXJtZWRpYXRlCnR5cGUgd2UgbWF5IHJhbmsgTHVjaXVzIENyYXNzdXMgYW5kIFF1aW50dXMKSG9ydGVuc2l1cy4gVGhlbiBsZXQgdXMgdHVybiB0byBhIHZhc3QgaGFydmVzdCBvZgpvcmF0b3JzIHdobyBmbG91cmlzaGVkIG11Y2ggYWJvdXQgdGhlIHNhbWUgcGVyaW9kLgpJdCBpcyBoZXJlIHRoYXQgd2UgZmluZCB0aGUgdmlnb3VyIG9mIENhZXNhciwgdGhlCm5hdHVyYWwgdGFsZW50IG9mIENhZWxpdXMsIHRoZSBzdWJ0bGV0eSBvZiBDYWxpZGl1cywKdGhlIGFjY3VyYWN5IG9mIFBvbGxpbywgdGhlIGRpZ25pdHkgb2YgTWVzc2FsYSwgdGhlCmF1c3Rlcml0eSBvZiBDYWx2dXMsIHRoZSBncmF2aXR5IG9mIEJydXR1cywgdGhlIGFjdW1lbgpvZiBTdWxwaWNpdXMgYW5kIHRoZSBiaXR0ZXJuZXNzIG9mIENhc3NpdXMsIHdoaWxlCmFtb25nIHRob3NlIHdob20gd2UgaGF2ZSBzZWVuIG91cnNlbHZlcyB3ZQphZG1pcmUgdGhlIGZsdWVuY3kgb2YgU2VuZWNhLCB0aGUgc3RyZW5ndGggb2YgQWZyaWNhbnVzLCB0aGUgbWVsbG93bmVzcyBvZiBBZmVyLCB0aGUgY2hhcm0gb2YgQ3Jpc3B1cywKdGhlIHNvbm9yaXR5IG9mIFRyYWNoYWx1cyBhbmQgdGhlIGVsZWdhbmNlIG9mIFNlY3VuZHVzLjwvdHJhbnNsYXRpb24+"
translation['12.10.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGluIENpY2VybyB3ZSBoYXZlIG9uZSB3aG8gaXMgbm90LAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDU3IiAvPgoKbGlrZSBFdXBocmFub3IsIG1lcmVseSBkaXN0aW5ndWlzaGVkIGluIGEgbnVtYmVyCm9mIGRpZmZlcmVudCBmb3JtcyBvZiBhcnQsIGJ1dCBpcyBzdXByZW1lIGluIGFsbCB0aGUKZGlmZmVyZW50IHF1YWxpdGllcyB3aGljaCBhcmUgcHJhaXNlZCBpbiBlYWNoIGluZGl2aWR1YWwKb3JhdG9yLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5DcC48L2hpPiB4LiBpLiAxMDUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3EuPC9oaT48L25vdGU+IEFuZCB5ZXQgZXZlbiBoaXMgb3duIGNvbnRlbXBvcmFyaWVzCnZlbnR1cmVkIHRvIGF0dGFjayBoaW0gb24gdGhlIGdyb3VuZCB0aGF0IGhlIHdhcwpib21iYXN0aWMsIEFzaWF0aWMsIHJlZHVuZGFudCwgZ2l2ZW4gdG8gZXhjZXNzaXZlCnJlcGV0aXRpb24sIGxpYWJsZSBhdCB0aW1lcyB0byBiZSBwb2ludGxlc3MgaW4gaGlzCndpdHRpY2lzbXMsIHNlbnN1b3VzLCBleHRyYXZhZ2FudCBhbmQgKGFuIG91dHJhZ2VvdXMKYWNjdXNhdGlvbiEpIGFsbW9zdCBlZmZlbWluYXRlIGluIGhpcyByaHl0aG0uPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Q3AuPC9oaT4geC4gaS4gMTA1IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxLjwvaGk+PC90cmFuc2xhdGlvbj4="
translation['12.10.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kCmxhdGVyLCBhZnRlciBoZSBoYWQgZmFsbGVuIGEgdmljdGltIHRvIHRoZSBwcm9zY3JpcHRpb24gb2YgdGhlIHNlY29uZCB0cml1bXZpcmF0ZSwgdGhvc2Ugd2hvIGhhdGVkCmFuZCBlbnZpZWQgaGltIGFuZCByZWdhcmRlZCBoaW0gYXMgdGhlaXIgcml2YWwsIG5heSwKZXZlbiB0aG9zZSB3aG8gaGFkIGZsYXR0ZXJlZCBoaW0gaW4gdGhlIGRheXMgb2YgaGlzCnBvd2VyLCBhdHRhY2tlZCBoaW0gbm93IHRoYXQgaGUgY291bGQgbm8gbG9uZ2VyCnJlcGx5LiBCdXQgdGhhdCB2ZXJ5IG1hbiwgd2hvIGlzIG5vdyByZWdhcmRlZApieSBzb21lIGFzIGJlaW5nIHRvbyBqZWp1bmUgYW5kIGRyeSwgd2FzIGF0dGFja2VkCmJ5IGhpcyBwZXJzb25hbCBlbmVtaWVzIG9uIG5vIG90aGVyIGdyb3VuZCB0aGFuCnRoYXQgaGlzIHN0eWxlIHdhcyB0b28gZmxvcmlkIGFuZCBoaXMgdGFsZW50cyB0b28gbGl0dGxlCnVuZGVyIGNvbnRyb2wuIEJvdGggY2hhcmdlcyBhcmUgZmFsc2UsIGJ1dCB0aGVyZSBpcwptb3JlIGNvbG91ciBmb3IgdGhlIGhlIGluIHRoZSBsYXR0ZXIgY2FzZSB0aGFuIGluCnRoZSBmb3JtZXIuPC90cmFuc2xhdGlvbj4="
translation['12.10.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz4gVGhvc2UsIGhvd2V2ZXIsIHdobyBjcml0aWNpc2VkIGhpbQptb3N0IHNldmVyZWx5IHdlcmUgdGhlIHNwZWFrZXJzIHdobyBkZXNpcmVkIHRvIGJlCnJlZ2FyZGVkIGFzIHRoZSBpbWl0YXRvcnMgb2YgQXR0aWMgb3JhdG9yeS4gVGhpcwpjb3RlcmllLCByZWdhcmRpbmcgdGhlbXNlbHZlcyBhcyB0aGUgc29sZSBpbml0aWF0ZXMgaW4KdGhlIG15c3RlcmllcyBvZiB0aGVpciBhcnQsIGFzc2FpbGVkIGhpbSBhcyBhbiBhbGllbiwKaW5kaWZmZXJlbnQgdG8gdGhlaXIgc3VwZXJzdGl0aW9ucyBhbmQgcmVmdXNpbmcgdG8gYmUKYm91bmQgYnkgdGhlaXIgbGF3cy4gVGhlaXIgZGVzY2VuZGFudHMgYXJlIGFtb25nCnVzIHRvLWRheSwgYSB3aXRoZXJlZCwgc2FwbGVzcyBhbmQgYW5lbWljIGJhbmQuCjwvdHJhbnNsYXRpb24+"
translation['12.10.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgaXMgdGhleSB0aGF0IGZsYXVudCB0aGVpciB3ZWFrbmVzcyB1bmRlciB0aGUKbmFtZSBvZiBoZWFsdGgsIGluIGRlZmlhbmNlIG9mIHRoZSBhY3R1YWwgdHJ1dGgsIGFuZApiZWNhdXNlIHRoZXkgY2Fubm90IGVuZHVyZSB0aGUgZGF6emxpbmcgcmF5cyBvZiB0aGUKc3VuIG9mIGVsb3F1ZW5jZSwgaGlkZSB0aGVtc2VsdmVzIGJlbmVhdGggdGhlCnNoYWRvdyBvZiBhIG1pZ2h0eSBuYW1lLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5JLmUuPC9oaT4gQXR0aWMuPC9ub3RlPiBIb3dldmVyLCBhcyBDaWNlcm8gaGltc2VsZiBhbnN3ZXJlZCB0aGVtIGF0IGxlbmd0aCBhbmQgaW4gYSBudW1iZXIgb2YKCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkkuZS48L2hpPiBBdHRpYy48cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40NTkiIC8+CgpwYXNzYWdlcywgaXQgd2lsbCBiZSBzYWZlciBmb3IgbWUgdG8gYmUgYnJpZWYgaW4gbXkKdHJlYXRtZW50IG9mIHRoaXMgdG9waWMuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTYiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIGRpc3RpbmN0aW9uIGJldHdlZW4gdGhlIEF0dGljIGFuZCB0aGUgQXNpYXRpYwpzY2hvb2xzIHRha2VzIHVzIGJhY2sgdG8gYW50aXF1aXR5LiBUaGUgZm9ybWVyIHdlcmUKcmVnYXJkZWQgYXMgY29uY2lzZSBhbmQgaGVhbHRoeSwgdGhlIGxhdHRlciBhcyBlbXB0eQphbmQgaW5mbGF0ZWQ6IHRoZSBmb3JtZXIgd2VyZSByZW1hcmthYmxlIGZvciB0aGUKYWJzZW5jZSBvZiBhbGwgc3VwZXJmbHVpdHksIHdoaWxlIHRoZSBsYXR0ZXIgd2VyZQpkZWZpY2llbnQgYWxpa2UgaW4gdGFzdGUgYW5kIHJlc3RyYWludC4gVGhlIHJlYXNvbgpmb3IgdGhpcyBkaXZpc2lvbiwgYWNjb3JkaW5nIHRvIHNvbWUgYXV0aG9yaXRpZXMsCmFtb25nIHRoZW0gU2FudHJhLCBpcyB0byBiZSBmb3VuZCBpbiB0aGUgZmFjdCB0aGF0LAphcyBHcmVlayBncmFkdWFsbHkgZXh0ZW5kZWQgaXRzIHJhbmdlIGludG8gdGhlCm5laWdoYm91cmluZyBjaXRpZXMgb2YgQXNpYSwgdGhlcmUgYXJvc2UgYSBjbGFzcyBvZgptZW4gd2hvIGRlc2lyZWQgdG8gZGlzdGluZ3Vpc2ggdGhlbXNlbHZlcyBhcyBvcmF0b3JzCmJlZm9yZSB0aGV5IGhhZCBhY3F1aXJlZCBzdWZmaWNpZW50IGNvbW1hbmQgb2YgdGhlCmxhbmd1YWdlLCBhbmQgd2hvIGNvbnNlcXVlbnRseSBiZWdhbiB0byBleHByZXNzCmJ5IHBlcmlwaHJhc2VzIHdoYXQgY291bGQgaGF2ZSBiZWVuIGV4cHJlc3NlZApkaXJlY3RseSwgdW50aWwgZmluYWxseSB0aGlzIHByYWN0aWNlIGJlY2FtZSBhbiBpbmdyYWluZWQgaGFiaXQuPG1pbGVzdG9uZSBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz4gTXkgb3duIHZpZXcsIGhvd2V2ZXIsIGlzIHRoYXQgdGhlCmRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgdHdvIHN0eWxlcyBpcyBhdHRyaWJ1dGFibGUgdG8KdGhlIGNoYXJhY3RlciBib3RoIG9mIHRoZSBvcmF0b3JzIGFuZCB0aGUgYXVkaWVuY2VzCndob20gdGhleSBhZGRyZXNzZWQ6IHRoZSBBdGhlbmlhbnMsIHdpdGggdGhlaXIKcG9saXNoIGFuZCByZWZpbmVtZW50LCByZWZ1c2VkIHRvIHRvbGVyYXRlIGVtcHRpbmVzcwphbmQgcmVkdW5kYW5jZSwgd2hpbGUgdGhlIEFzaWF0aWNzLCBiZWluZyBuYXR1cmFsbHkKZ2l2ZW4gdG8gYm9tYmFzdCBhbmQgb3N0ZW50YXRpb24sIHdlcmUgcHVmZmVkIHVwCndpdGggYSBwYXNzaW9uIGZvciBhIG1vcmUgdmFpbmdsb3Jpb3VzIHN0eWxlIG9mCmVsb3F1ZW5jZS48bWlsZXN0b25lIG49IjE4IiB1bml0PSJzZWN0aW9uIiAvPiBBdCBhIGxhdGVyIHBlcmlvZCwgdGhlIGNyaXRpY3MsIHRvIHdob20Kd2Ugb3dlIHRoaXMgY2xhc3NpZmljYXRpb24sIGFkZGVkIGEgdGhpcmQgc3R5bGUsIHRoZQpSaG9kaWFuLCB3aGljaCB0aGV5IGFzc2VydGVkIHRvIGhlIG1pZHdheSBiZXR3ZWVuCnRoZSB0d28gYW5kIHRvIGJlIGEgYmxlbmQgb2YgYm90aCwgc2luY2UgdGhlIG9yYXRvcnMKb2YgdGhpcyBzY2hvb2wgYXJlIG5laXRoZXIgc28gY29uY2lzZSBhcyB0aGUgQXR0aWMgbm9yCnJlZHVuZGFudCBsaWtlIHRoZSBBc2lhdGljIHNjaG9vbCwgYnV0IGFwcGVhciB0bwpkZXJpdmUgdGhlaXIgc3R5bGUgaW4gcGFydCBmcm9tIHRoZWlyIG5hdGlvbmFsIGNoYXJhY3RlcmlzdGljcywgaW4gcGFydCBmcm9tIHRob3NlIG9mIHRoZWlyIGZvdW5kZXIuPG1pbGVzdG9uZSBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCml0IHdhcyBBZXNjaGluZXMgd2hvIGludHJvZHVjZWQgdGhlIGN1bHR1cmUgb2YKCjxwYiBpZD0icC40NjEiIC8+CgpBdGhlbnMgYXQgUmhvZGVzLCB3aGljaCBoZSBoYWQgY2hvc2VuIGFzIGhpcyBwbGFjZQpvZiBleGlsZTogYW5kIGp1c3QgYXMgY2VydGFpbiBwbGFudHMgZGVnZW5lcmF0ZSBhcyBhCnJlc3VsdCBvZiBjaGFuZ2Ugb2Ygc29pbCBhbmQgY2xpbWF0ZSwgc28gdGhlIGZpbmUgQXR0aWMKZmxhdm91ciB3YXMgbWFycmVkIGJ5IHRoZSBhZG1peHR1cmUgb2YgZm9yZWlnbgppbmdyZWRpZW50cy4gQ29uc2VxdWVudGx5IGNlcnRhaW4gb2YgdGhlIG9yYXRvcnMgb2YKdGhpcyBzY2hvb2wgYXJlIHJlZ2FyZGVkIGFzIHNvbWV3aGF0IHNsb3cgYW5kCmxhY2tpbmcgaW4gZW5lcmd5LCB0aG91Z2ggbm90IGRldm9pZCBvZiBhIGNlcnRhaW4Kd2VpZ2h0LCBhbmQgYXMgcmVzZW1ibGluZyBwbGFjaWQgcG9vbHMgcmF0aGVyIHRoYW4KdGhlIGxpbXBpZCBzcHJpbmdzIG9mIEF0aGVucyBvciB0aGUgdHVyYmlkIHRvcnJlbnRzCm9mIEFzaWEuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['12.10.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZGlzdGluY3Rpb24gYmV0d2VlbiB0aGUgQXR0aWMgYW5kIHRoZSBBc2lhdGljCnNjaG9vbHMgdGFrZXMgdXMgYmFjayB0byBhbnRpcXVpdHkuIFRoZSBmb3JtZXIgd2VyZQpyZWdhcmRlZCBhcyBjb25jaXNlIGFuZCBoZWFsdGh5LCB0aGUgbGF0dGVyIGFzIGVtcHR5CmFuZCBpbmZsYXRlZDogdGhlIGZvcm1lciB3ZXJlIHJlbWFya2FibGUgZm9yIHRoZQphYnNlbmNlIG9mIGFsbCBzdXBlcmZsdWl0eSwgd2hpbGUgdGhlIGxhdHRlciB3ZXJlCmRlZmljaWVudCBhbGlrZSBpbiB0YXN0ZSBhbmQgcmVzdHJhaW50LiBUaGUgcmVhc29uCmZvciB0aGlzIGRpdmlzaW9uLCBhY2NvcmRpbmcgdG8gc29tZSBhdXRob3JpdGllcywKYW1vbmcgdGhlbSBTYW50cmEsIGlzIHRvIGJlIGZvdW5kIGluIHRoZSBmYWN0IHRoYXQsCmFzIEdyZWVrIGdyYWR1YWxseSBleHRlbmRlZCBpdHMgcmFuZ2UgaW50byB0aGUKbmVpZ2hib3VyaW5nIGNpdGllcyBvZiBBc2lhLCB0aGVyZSBhcm9zZSBhIGNsYXNzIG9mCm1lbiB3aG8gZGVzaXJlZCB0byBkaXN0aW5ndWlzaCB0aGVtc2VsdmVzIGFzIG9yYXRvcnMKYmVmb3JlIHRoZXkgaGFkIGFjcXVpcmVkIHN1ZmZpY2llbnQgY29tbWFuZCBvZiB0aGUKbGFuZ3VhZ2UsIGFuZCB3aG8gY29uc2VxdWVudGx5IGJlZ2FuIHRvIGV4cHJlc3MKYnkgcGVyaXBocmFzZXMgd2hhdCBjb3VsZCBoYXZlIGJlZW4gZXhwcmVzc2VkCmRpcmVjdGx5LCB1bnRpbCBmaW5hbGx5IHRoaXMgcHJhY3RpY2UgYmVjYW1lIGFuIGluZ3JhaW5lZCBoYWJpdC48L3RyYW5zbGF0aW9uPg=="
translation['12.10.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz4gTXkgb3duIHZpZXcsIGhvd2V2ZXIsIGlzIHRoYXQgdGhlCmRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgdHdvIHN0eWxlcyBpcyBhdHRyaWJ1dGFibGUgdG8KdGhlIGNoYXJhY3RlciBib3RoIG9mIHRoZSBvcmF0b3JzIGFuZCB0aGUgYXVkaWVuY2VzCndob20gdGhleSBhZGRyZXNzZWQ6IHRoZSBBdGhlbmlhbnMsIHdpdGggdGhlaXIKcG9saXNoIGFuZCByZWZpbmVtZW50LCByZWZ1c2VkIHRvIHRvbGVyYXRlIGVtcHRpbmVzcwphbmQgcmVkdW5kYW5jZSwgd2hpbGUgdGhlIEFzaWF0aWNzLCBiZWluZyBuYXR1cmFsbHkKZ2l2ZW4gdG8gYm9tYmFzdCBhbmQgb3N0ZW50YXRpb24sIHdlcmUgcHVmZmVkIHVwCndpdGggYSBwYXNzaW9uIGZvciBhIG1vcmUgdmFpbmdsb3Jpb3VzIHN0eWxlIG9mCmVsb3F1ZW5jZS48L3RyYW5zbGF0aW9uPg=="
translation['12.10.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz4gQXQgYSBsYXRlciBwZXJpb2QsIHRoZSBjcml0aWNzLCB0byB3aG9tCndlIG93ZSB0aGlzIGNsYXNzaWZpY2F0aW9uLCBhZGRlZCBhIHRoaXJkIHN0eWxlLCB0aGUKUmhvZGlhbiwgd2hpY2ggdGhleSBhc3NlcnRlZCB0byBoZSBtaWR3YXkgYmV0d2Vlbgp0aGUgdHdvIGFuZCB0byBiZSBhIGJsZW5kIG9mIGJvdGgsIHNpbmNlIHRoZSBvcmF0b3JzCm9mIHRoaXMgc2Nob29sIGFyZSBuZWl0aGVyIHNvIGNvbmNpc2UgYXMgdGhlIEF0dGljIG5vcgpyZWR1bmRhbnQgbGlrZSB0aGUgQXNpYXRpYyBzY2hvb2wsIGJ1dCBhcHBlYXIgdG8KZGVyaXZlIHRoZWlyIHN0eWxlIGluIHBhcnQgZnJvbSB0aGVpciBuYXRpb25hbCBjaGFyYWN0ZXJpc3RpY3MsIGluIHBhcnQgZnJvbSB0aG9zZSBvZiB0aGVpciBmb3VuZGVyLjwvdHJhbnNsYXRpb24+"
translation['12.10.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCml0IHdhcyBBZXNjaGluZXMgd2hvIGludHJvZHVjZWQgdGhlIGN1bHR1cmUgb2YKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQ2MSIgLz4KCkF0aGVucyBhdCBSaG9kZXMsIHdoaWNoIGhlIGhhZCBjaG9zZW4gYXMgaGlzIHBsYWNlCm9mIGV4aWxlOiBhbmQganVzdCBhcyBjZXJ0YWluIHBsYW50cyBkZWdlbmVyYXRlIGFzIGEKcmVzdWx0IG9mIGNoYW5nZSBvZiBzb2lsIGFuZCBjbGltYXRlLCBzbyB0aGUgZmluZSBBdHRpYwpmbGF2b3VyIHdhcyBtYXJyZWQgYnkgdGhlIGFkbWl4dHVyZSBvZiBmb3JlaWduCmluZ3JlZGllbnRzLiBDb25zZXF1ZW50bHkgY2VydGFpbiBvZiB0aGUgb3JhdG9ycyBvZgp0aGlzIHNjaG9vbCBhcmUgcmVnYXJkZWQgYXMgc29tZXdoYXQgc2xvdyBhbmQKbGFja2luZyBpbiBlbmVyZ3ksIHRob3VnaCBub3QgZGV2b2lkIG9mIGEgY2VydGFpbgp3ZWlnaHQsIGFuZCBhcyByZXNlbWJsaW5nIHBsYWNpZCBwb29scyByYXRoZXIgdGhhbgp0aGUgbGltcGlkIHNwcmluZ3Mgb2YgQXRoZW5zIG9yIHRoZSB0dXJiaWQgdG9ycmVudHMKb2YgQXNpYS48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5ObyBvbmUgdGhlcmVmb3JlIHNob3VsZCBoYXZlIGFueSBoZXNpdGF0aW9uIGluCnByb25vdW5jaW5nIEF0dGljIG9yYXRvcnkgdG8gYmUgYnkgZmFyIHRoZSBiZXN0LiBCdXQKYWx0aG91Z2ggYWxsIEF0dGljIHdyaXRlcnMgaGF2ZSBzb21ldGhpbmcgaW4gY29taW9uLCBuYW1lbHkgYSBrZWVuIGFuZCBleGFjdCBqdWRnZW1lbnQsIHRoZWlyCnRhbGVudHMgbWFuaXRlc3QgdGhlbXNlbHZlcyBpbiBhIG51bWJlciBvZiBkaWZmZXJlbnQKZm9ybXMuPG1pbGVzdG9uZSBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gQ29uc2VxdWVudGx5IEkgcmVnYXJkIHRob3NlIGNyaXRpY3MgYXMgY29tbWl0dGluZyBhIHNlcmlvdXMgZXJyb3Igd2hvIHJlZ2FyZCBvbmx5IHRob3NlCmF1dGhvcnMgYXMgQXR0aWMgd2hvLCB3aGlsZSB0aGV5IGFyZSBzaW1wbGUsIGx1Y2lkCmFuZCBleHByZXNzaXZlLCBhcmUgbm9uZSB0aGUgbGVzcyBjb250ZW50IHdpdGggYQpjZXJ0YWluIGZydWdhbGl0eSBvZiBlbG9xdWVuY2UsIGFuZCBrZWVwIHRoZWlyIGhhbmRzCm1vZGVzdGx5IHdpdGhpbiB0aGUgZm9sZHMgb2YgdGhlaXIgY2xvYWtzLiBGb3Igd2hhdAphdXRob3IgaXMgdGhlcmUgd2hvIGFuc3dlcnMgdG8gdGhpcyBjb25jZXB0aW9uPyBJCmFtIHByZXBhcmVkIHRvIGdyYW50IHRoYXQgdGhlcmUgaXMgTHlzaWFzLCBzaW5jZSBoZQppcyB0aGUgZmF2b3VyaXRlIG1vZGVsIG9mIHRoZSBhZG1pcmVycyBvZiB0aGlzIHNjaG9vbCwKYW5kIHN1Y2ggYW4gYWRtaXNzaW9uIHdpbGwgc2F2ZSB1cyBmcm9tIGJlaW5nCnJlZmVycmVkIHRvIENvY2N1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlIG9ubHkgQ29jY3VzIGtub3duIHRvIHVzIGlzIHN0YXRlZCBieSBTdWlkYXMgdG8KaGF2ZSBiZWVuIGEgcHVwaWwgb2YgSXNvY3JhdGVzLCB3aGVyZWFzIHdlIHNob3VsZCBoZXJlCmhhdmUgZXhwZWN0ZWQgUXVpbnRpbGlhbiB0byByZWZlciB0byBzb21lIG9yYXRvciBvZiB0aGUKNXRoIGNlbnR1cnkgY29udGVtcG9yYXJ5IHdpdGggQW5kb2NpZGVzIChjbG9zaW5nIGRlY2FkZXMKb2YgNHRoIGNlbnR1cnkpLjwvbm90ZT4gYW5kIEFuZG9jaWRlcy48bWlsZXN0b25lIG49IjIyIiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgSSBzaG91bGQgbGlrZQp0byBhc2sgd2hldGhlciBJc29jcmF0ZXMgc3Bva2UgaW4gdGhlIEF0dGljIHN0eWxlLgpGb3IgdGhlcmUgaXMgbm8gYXV0aG9yIGxlc3MgbGlrZSBMeXNpYXMuIFRoZXkgd2lsbAphbnN3ZXIgaW4gdGhlIG5lZ2F0aXZlLiBBbmQgeWV0IGl0IGlzIHRvIHRoZSBzY2hvb2wKb2YgSXNvY3JhdGVzIHRoYXQgd2Ugb3dlIHRoZSBncmVhdGVzdCBvcmF0b3JzLiBMZXQKdXMgbG9vayBmb3Igc29tZXRoaW5nIGNsb3Nlci4gSXMgSHlwZXJpZGVzCkF0dGljPyBZZXMsIHRoZXkgcmVwbHksIGJ1dCBvZiBhbiBvdmVyLXNlbnN1b3VzCmNoYXJhY3Rlci4gSSBwYXNzIGJ5IGEgbnVtYmVyIG9mIG9yYXRvcnMsIHN1Y2ggYXMKTHl1Y3JndXMgYW5kIEFyaXN0b2dlaXRvbiBhbmQgdGhlaXIgcHJlZGVjZXNzb3JzCgo8cGIgaWQ9InAuNDYzIiAvPgoKSXNhZXVzIGFuZCBBbnRpcGhvbjsgZm9yIHRob3VnaCB0aGV5IGhhdmUgYSBjZXJ0YWluCjxoaSByZW5kPSJpdGFsaWNzIj5nZW5lcmljPC9oaT4gcmVzZW1ibGFuY2UsIHRoZXkgbWF5IGJlIHNhaWQgdG8gZGlmZmVyIGluCjxoaSByZW5kPSJpdGFsaWNzIj5zcGVjaWVzLjwvaGk+PG1pbGVzdG9uZSBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHdoYXQgb2YgQWVzZWhpbmVzLCB3aG9tIEkgbWVudGlvbmVkCmp1c3Qgbm93PyBJcyBub3QgaGlzIHN0eWxlIGFtcGxlciBhbmQgaG9sZGVyIGFuZAptb3JlIGxvZnR5IHRoYW4gdGhlaXJzPyBBbmQgd2hhdCBvZiBEZW1vc3RoZW5lcwpoaW1zZWxmPyBEaWQgbm90IGhlIHN1cnBhc3MgYWxsIHRob3NlIHNpbXBsZSBhbmQKY2lyY3Vtc3BlY3Qgb3JhdG9ycyBpbiBmb3JjZSwgbG9mdGluZXNzLCBlbmVyZ3ksIHBvbGlzaAphbmQgcmh5dGhtPyBEb2VzIGhlIG5vdCByaXNlIHRvIGdyZWF0IGhlaWdodHMgaW4KaGlzIDxoaSByZW5kPSJpdGFsaWNzIj5jb21tb25wbGFjZXM8L2hpPiBEb2VzIGhlIG5vdCByZWpvaWNlIGluIHRoZSBlbXBsb3ltZW50IG9mIGZpZ3VyZXM/IERvZXMgaGUgbm90IG1ha2UgYnJpbGxpYW50IHVzZSBvZgptZXRhcGhvcj8gRG9lcyBoZSBub3QgbGVuZCBhIHZvaWNlLCBhIGZpY3RpdGlvdXMKdXR0ZXJhbmNlIHRvIHNwZWVjaGxlc3MgdGhpbmdzPzxtaWxlc3RvbmUgbj0iMjQiIHVuaXQ9InNlY3Rpb24iIC8+IERvZXMgbm90IGhpcyBmYW1vdXMKb2F0aCBieSB0aGUgd2FycmlvcnMgd2hvIGZlbGwgZmlnaHRpbmcgZm9yIHRoZWlyIGNvdW50cnkKYXQgU2FsYW1pcyBhbmQgTWFyYXRob24gc2hvdyB0aGF0IFBsYXRvIHdhcyBoaXMKbWFzdGVyPyBBbmQgc2hhbGwgd2UgY2FsbCBQbGF0byBhbiBBc2lhdGljLCBQbGF0bwp3aG8gYXMgYSBydWxlIGRlc2VydmVzIGNvbXBhcmlzb24gd2l0aCBwb2V0cyBpbnN0aW5jdAp3aXRoIHRoZSBkaXZpbmUgZmlyZSBvZiBpbnNwaXJhdGlvbj8gV2hhdCBvZiBQZXJpY2xlcz8KQ2FuIHdlIGJlbGlldmUgdGhhdCBoaXMgc3R5bGUgd2FzIGxpa2UgdGhlIHNsZW5kZXIKc3RyZWFtIG9mIEx5c2lhcycgZWxvcXVlbmNlLCB3aGVuIHRoZSBjb21lZGlhbnMsCmV2ZW4gd2hpbGUgdGhleSByZXZpbGUgaGltLCBjb21wYXJlIGhpcyBvcmF0b3J5IHRvCnRoZSBib2x0cyBhbmQgdGh1bmRlciBvZiB0aGUgc2tpZXM/PG1pbGVzdG9uZSBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz4gV2hhdCBpcyB0aGUKcmVhc29uLCB0aGVuLCB3aHkgdGhlc2UgY3JpdGljcyByZWdhcmQgdGhhdCBzdHlsZQp3aGljaCBmbG93cyBpbiBhIHNsZW5kZXIgdHJpY2tsZSBhbmQgYmFiYmxlcyBhbW9uZwp0aGUgcGViYmxlcyBhcyBoYXZpbmcgdGhlIHRydWUgQXR0aWMgZmxhdm91ciBhbmQKdGhlIHRydWUgc2NlbnQgb2YgQXR0aWMgdGh5bWU/IEkgcmVhbGx5IHRoaW5rIHRoYXQsCmlmIHRoZXkgd2VyZSB0byBkaXNjb3ZlciBhIHNvaWwgb2YgZXhjZXB0aW9uYWwgcmljaG5lc3MKYW5kIGEgY3JvcCBvZiB1bnVzdWFsIGFidW5kYW5jZSB3aXRoaW4gdGhlIGJvdW5kYXJpZXMKb2YgQXR0aWNhLCB0aGV5IHdvdWxkIGRlbnkgaXQgdG8gYmUgQXR0aWMsIG9uIHRoZQpncm91bmQgdGhhdCBpdCBoYXMgcHJvZHVjZWQgbW9yZSBzZWVkIHRoYW4gaXQKcmVjZWl2ZWQ6IGZvciB5b3Ugd2lsbCByZW1lbWJlciB0aGUgbW9ja2luZyBjb21tZW50cyBwYXNzZWQgYnkgTWVuYW5kZXI8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5HZW9yZy4gMzUgc3FxLjwvaGk+IChLb2VydGUpOyA8Zm9yZWlnbiBsYW5nPSJncmVlayI+YSlwZS9kd2tlbiBvKXJxdz1zIGthaVwgZGlrYWkvd3MsIG91KSBwbGUvb24sIHwgYSlsbCcgYXUpdG9cIHRvXCBtZS90cm9uLjwvZm9yZWlnbj48L25vdGU+IG9uIHRoZSBleGFjdCBmaWRlbGl0eQp3aXRoIHdoaWNoIHRoZSBzb2lsIG9mIEF0dGljYSByZXBheXMgaXRzIGRlcG9zaXRzLgo8bWlsZXN0b25lIG49IjI2IiB1bml0PSJzZWN0aW9uIiAvPldlbGwsIHRoZW4sIGlmIGFueSBtYW4gc2hvdWxkLCBpbiBhZGRpdGlvbiB0byB0aGUKYWN0dWFsIHZpcnR1ZXMgd2hpY2ggdGhlIGdyZWF0IG9yYXRvciBEZW1vc3RoZW5lcwoKPHBiIGlkPSJwLjQ2NSIgLz4KCnBvc3Nlc3NlZCwgc2hvdyBoaW1zZWxmIHRvIGJlIHRoZSBwb3NzZXNzb3Igb2Ygb3RoZXJzLAp0aGF0IGVpdGhlciBvd2luZyB0byBoaXMgb3duIHRlbXBlcmFtZW50IG9yIHRoZQpsYXdzIG9mIEF0aGVuczxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VlIElJLiB4dmkuIDQuIFF1aW50aWxpYW4gYWxsdWRlcyB0byBhbiBhbGxlZ2VkIGxhdyBmb3JiaWRkaW5nIEF0aGVuaWFuIG9yYXRvcywgdG8gYXBwZWFsIHRvIHRoZSBlbW90aW9ucyBpbiB0aGUKbGF3IGNvdXJ0cy48L25vdGU+IERlbW9zdGhlbmVzIGlzIHRob3VnaHQgdG8gaGF2ZQpsYWNrZWQsIGFuZCBzaG91bGQgcmV2ZWFsIGluIGhpbXNlbGYgdGhlIHBvd2VyIG9mCnN0cm9uZ2x5IHN0aXJyaW5nIHRoZSBlbW90aW9ucywgc2hhbGwgSSBoZWFyIG9uZSBvZgp0aGVzZSBjcml0aWNzIHByb3Rlc3RpbmcgdGhhdCBEZW1vc3RoZW5lcyBuZXZlciBkaWQKdGhpcz8gQW5kIGlmIGhlIHByb2R1Y2VzIHNvbWV0aGluZyByaHl0aG1pY2FsbHkKc3VwZXJpb3IgKGFuIGltcG9zc2libGUgZmVhdCwgcGVyaGFwcywgYnV0IGxldCB1cwphc3N1bWUgaXQgdG8gYmUgc28pLCBhcmUgd2UgdG8gYmUgdG9sZCB0aGF0IGl0IGlzIG5vdApBdHRpYz8gVGhlc2UgY3JpdGljcyB3b3VsZCBzaG93IGZpbmVyIGZlZWxpbmcgYW5kCmJldHRlciBqdWRnZW1lbnQsIGlmIHRoZXkgdG9vayB0aGUgdmlldyB0aGF0IEF0dGljCmVsb3F1ZW5jZSBtZWFudCBwZXJmZWN0IGVsb3F1ZW5jZS48L3A+CjwvdHJhbnNsYXRpb24+"
translation['12.10.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5ObyBvbmUgdGhlcmVmb3JlIHNob3VsZCBoYXZlIGFueSBoZXNpdGF0aW9uIGluCnByb25vdW5jaW5nIEF0dGljIG9yYXRvcnkgdG8gYmUgYnkgZmFyIHRoZSBiZXN0LiBCdXQKYWx0aG91Z2ggYWxsIEF0dGljIHdyaXRlcnMgaGF2ZSBzb21ldGhpbmcgaW4gY29taW9uLCBuYW1lbHkgYSBrZWVuIGFuZCBleGFjdCBqdWRnZW1lbnQsIHRoZWlyCnRhbGVudHMgbWFuaXRlc3QgdGhlbXNlbHZlcyBpbiBhIG51bWJlciBvZiBkaWZmZXJlbnQKZm9ybXMuPC90cmFuc2xhdGlvbj4="
translation['12.10.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz4gQ29uc2VxdWVudGx5IEkgcmVnYXJkIHRob3NlIGNyaXRpY3MgYXMgY29tbWl0dGluZyBhIHNlcmlvdXMgZXJyb3Igd2hvIHJlZ2FyZCBvbmx5IHRob3NlCmF1dGhvcnMgYXMgQXR0aWMgd2hvLCB3aGlsZSB0aGV5IGFyZSBzaW1wbGUsIGx1Y2lkCmFuZCBleHByZXNzaXZlLCBhcmUgbm9uZSB0aGUgbGVzcyBjb250ZW50IHdpdGggYQpjZXJ0YWluIGZydWdhbGl0eSBvZiBlbG9xdWVuY2UsIGFuZCBrZWVwIHRoZWlyIGhhbmRzCm1vZGVzdGx5IHdpdGhpbiB0aGUgZm9sZHMgb2YgdGhlaXIgY2xvYWtzLiBGb3Igd2hhdAphdXRob3IgaXMgdGhlcmUgd2hvIGFuc3dlcnMgdG8gdGhpcyBjb25jZXB0aW9uPyBJCmFtIHByZXBhcmVkIHRvIGdyYW50IHRoYXQgdGhlcmUgaXMgTHlzaWFzLCBzaW5jZSBoZQppcyB0aGUgZmF2b3VyaXRlIG1vZGVsIG9mIHRoZSBhZG1pcmVycyBvZiB0aGlzIHNjaG9vbCwKYW5kIHN1Y2ggYW4gYWRtaXNzaW9uIHdpbGwgc2F2ZSB1cyBmcm9tIGJlaW5nCnJlZmVycmVkIHRvIENvY2N1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGUgb25seSBDb2NjdXMga25vd24gdG8gdXMgaXMgc3RhdGVkIGJ5IFN1aWRhcyB0bwpoYXZlIGJlZW4gYSBwdXBpbCBvZiBJc29jcmF0ZXMsIHdoZXJlYXMgd2Ugc2hvdWxkIGhlcmUKaGF2ZSBleHBlY3RlZCBRdWludGlsaWFuIHRvIHJlZmVyIHRvIHNvbWUgb3JhdG9yIG9mIHRoZQo1dGggY2VudHVyeSBjb250ZW1wb3Jhcnkgd2l0aCBBbmRvY2lkZXMgKGNsb3NpbmcgZGVjYWRlcwpvZiA0dGggY2VudHVyeSkuPC9ub3RlPiBhbmQgQW5kb2NpZGVzLjwvdHJhbnNsYXRpb24+"
translation['12.10.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IEkgc2hvdWxkIGxpa2UKdG8gYXNrIHdoZXRoZXIgSXNvY3JhdGVzIHNwb2tlIGluIHRoZSBBdHRpYyBzdHlsZS4KRm9yIHRoZXJlIGlzIG5vIGF1dGhvciBsZXNzIGxpa2UgTHlzaWFzLiBUaGV5IHdpbGwKYW5zd2VyIGluIHRoZSBuZWdhdGl2ZS4gQW5kIHlldCBpdCBpcyB0byB0aGUgc2Nob29sCm9mIElzb2NyYXRlcyB0aGF0IHdlIG93ZSB0aGUgZ3JlYXRlc3Qgb3JhdG9ycy4gTGV0CnVzIGxvb2sgZm9yIHNvbWV0aGluZyBjbG9zZXIuIElzIEh5cGVyaWRlcwpBdHRpYz8gWWVzLCB0aGV5IHJlcGx5LCBidXQgb2YgYW4gb3Zlci1zZW5zdW91cwpjaGFyYWN0ZXIuIEkgcGFzcyBieSBhIG51bWJlciBvZiBvcmF0b3JzLCBzdWNoIGFzCkx5dWNyZ3VzIGFuZCBBcmlzdG9nZWl0b24gYW5kIHRoZWlyIHByZWRlY2Vzc29ycwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDYzIiAvPgoKSXNhZXVzIGFuZCBBbnRpcGhvbjsgZm9yIHRob3VnaCB0aGV5IGhhdmUgYSBjZXJ0YWluCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmdlbmVyaWM8L2hpPiByZXNlbWJsYW5jZSwgdGhleSBtYXkgYmUgc2FpZCB0byBkaWZmZXIgaW4KPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3BlY2llcy48L2hpPjwvdHJhbnNsYXRpb24+"
translation['12.10.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHdoYXQgb2YgQWVzZWhpbmVzLCB3aG9tIEkgbWVudGlvbmVkCmp1c3Qgbm93PyBJcyBub3QgaGlzIHN0eWxlIGFtcGxlciBhbmQgaG9sZGVyIGFuZAptb3JlIGxvZnR5IHRoYW4gdGhlaXJzPyBBbmQgd2hhdCBvZiBEZW1vc3RoZW5lcwpoaW1zZWxmPyBEaWQgbm90IGhlIHN1cnBhc3MgYWxsIHRob3NlIHNpbXBsZSBhbmQKY2lyY3Vtc3BlY3Qgb3JhdG9ycyBpbiBmb3JjZSwgbG9mdGluZXNzLCBlbmVyZ3ksIHBvbGlzaAphbmQgcmh5dGhtPyBEb2VzIGhlIG5vdCByaXNlIHRvIGdyZWF0IGhlaWdodHMgaW4KaGlzIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNvbW1vbnBsYWNlczwvaGk+IERvZXMgaGUgbm90IHJlam9pY2UgaW4gdGhlIGVtcGxveW1lbnQgb2YgZmlndXJlcz8gRG9lcyBoZSBub3QgbWFrZSBicmlsbGlhbnQgdXNlIG9mCm1ldGFwaG9yPyBEb2VzIGhlIG5vdCBsZW5kIGEgdm9pY2UsIGEgZmljdGl0aW91cwp1dHRlcmFuY2UgdG8gc3BlZWNobGVzcyB0aGluZ3M/PC90cmFuc2xhdGlvbj4="
translation['12.10.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz4gRG9lcyBub3QgaGlzIGZhbW91cwpvYXRoIGJ5IHRoZSB3YXJyaW9ycyB3aG8gZmVsbCBmaWdodGluZyBmb3IgdGhlaXIgY291bnRyeQphdCBTYWxhbWlzIGFuZCBNYXJhdGhvbiBzaG93IHRoYXQgUGxhdG8gd2FzIGhpcwptYXN0ZXI/IEFuZCBzaGFsbCB3ZSBjYWxsIFBsYXRvIGFuIEFzaWF0aWMsIFBsYXRvCndobyBhcyBhIHJ1bGUgZGVzZXJ2ZXMgY29tcGFyaXNvbiB3aXRoIHBvZXRzIGluc3RpbmN0CndpdGggdGhlIGRpdmluZSBmaXJlIG9mIGluc3BpcmF0aW9uPyBXaGF0IG9mIFBlcmljbGVzPwpDYW4gd2UgYmVsaWV2ZSB0aGF0IGhpcyBzdHlsZSB3YXMgbGlrZSB0aGUgc2xlbmRlcgpzdHJlYW0gb2YgTHlzaWFzJyBlbG9xdWVuY2UsIHdoZW4gdGhlIGNvbWVkaWFucywKZXZlbiB3aGlsZSB0aGV5IHJldmlsZSBoaW0sIGNvbXBhcmUgaGlzIG9yYXRvcnkgdG8KdGhlIGJvbHRzIGFuZCB0aHVuZGVyIG9mIHRoZSBza2llcz88L3RyYW5zbGF0aW9uPg=="
translation['12.10.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz4gV2hhdCBpcyB0aGUKcmVhc29uLCB0aGVuLCB3aHkgdGhlc2UgY3JpdGljcyByZWdhcmQgdGhhdCBzdHlsZQp3aGljaCBmbG93cyBpbiBhIHNsZW5kZXIgdHJpY2tsZSBhbmQgYmFiYmxlcyBhbW9uZwp0aGUgcGViYmxlcyBhcyBoYXZpbmcgdGhlIHRydWUgQXR0aWMgZmxhdm91ciBhbmQKdGhlIHRydWUgc2NlbnQgb2YgQXR0aWMgdGh5bWU/IEkgcmVhbGx5IHRoaW5rIHRoYXQsCmlmIHRoZXkgd2VyZSB0byBkaXNjb3ZlciBhIHNvaWwgb2YgZXhjZXB0aW9uYWwgcmljaG5lc3MKYW5kIGEgY3JvcCBvZiB1bnVzdWFsIGFidW5kYW5jZSB3aXRoaW4gdGhlIGJvdW5kYXJpZXMKb2YgQXR0aWNhLCB0aGV5IHdvdWxkIGRlbnkgaXQgdG8gYmUgQXR0aWMsIG9uIHRoZQpncm91bmQgdGhhdCBpdCBoYXMgcHJvZHVjZWQgbW9yZSBzZWVkIHRoYW4gaXQKcmVjZWl2ZWQ6IGZvciB5b3Ugd2lsbCByZW1lbWJlciB0aGUgbW9ja2luZyBjb21tZW50cyBwYXNzZWQgYnkgTWVuYW5kZXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+R2VvcmcuIDM1IHNxcS48L2hpPiAoS29lcnRlKTsgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+YSlwZS9kd2tlbiBvKXJxdz1zIGthaVwgZGlrYWkvd3MsIG91KSBwbGUvb24sIHwgYSlsbCcgYXUpdG9cIHRvXCBtZS90cm9uLjwvZm9yZWlnbj48L25vdGU+IG9uIHRoZSBleGFjdCBmaWRlbGl0eQp3aXRoIHdoaWNoIHRoZSBzb2lsIG9mIEF0dGljYSByZXBheXMgaXRzIGRlcG9zaXRzLgo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5HZW9yZy4gMzUgc3FxLjwvaGk+IChLb2VydGUpOyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj5hKXBlL2R3a2VuIG8pcnF3PXMga2FpXCBkaWthaS93cywgb3UpIHBsZS9vbiwgfCBhKWxsJyBhdSl0b1wgdG9cIG1lL3Ryb24uPC9mb3JlaWduPjwvdHJhbnNsYXRpb24+"
translation['12.10.26'] = ""
translation['12.10.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5TdGlsbCBJIHNob3VsZCBmaW5kIHRoaXMgYXR0aXR1ZGUgbGVzcyBpbnRvbGVyYWJsZSBpZgppdCB3ZXJlIG9ubHkgdGhlIEdyZWVrcyB0aGF0IGluc2lzdGVkIG9uIGl0LiBGb3IgTGF0aW4KZWxvcXVlbmNlLCBhbHRob3VnaCBpbiBteSBvcGluaW9uIGl0IGNsb3NlbHkgcmVzZW1ibGVzCnRoZSBHcmVlayBhcyBmYXIgYXMgaW52ZW50aW9uLCBhcnJhbmdlbWVudCwganVkZ2VtZW50IGFuZCB0aGUgbGlrZSBhcmUgY29uY2VybmVkLCBhbmQgbWF5IGluZGVlZCBiZQpyZWdhcmRlZCBhcyBpdHMgZGlzY2lwbGUsIGNhbm5vdCBhc3BpcmUgdG8gaW1pdGF0ZSBpdAppbiBwb2ludCBvZiBlbG9jdXRpb24uIEZvciwgaW4gdGhlIGZpcnN0IHBsYWNlLCBpdCBpcwpoYXJzaGVyIGluIHNvdW5kLCBzaW5jZSBvdXIgYWxwaGFiZXQgZG9lcyBub3QgY29udGFpbgp0aGUgbW9zdCBldXBob25pb3VzIG9mIHRoZSBHcmVlayBsZXR0ZXJzLCBvbmUgYQp2b3dlbCBhbmQgdGhlIG90aGVyIGEgY29uc29uYW50LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj5mPC9mb3JlaWduPiBhbGlvIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPmc8L2ZvcmVpZ24+Ljwvbm90ZT4gdGhhbiB3aGljaCB0aGVyZQphcmUgbm9uZSB0aGF0IGZhbGwgbW9yZSBzd2VldGx5IG9uIHRoZSBlYXIsIGFuZAp3aGljaCB3ZSBhcmUgZm9yY2VkIHRvIGJvcnJvdyB3aGVuZXZlciB3ZSB1c2UKR3JlZWsgd29yZHMuPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+ZjwvZm9yZWlnbj4gYWxpbyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj5nPC9mb3JlaWduPi48L3RyYW5zbGF0aW9uPg=="
translation['12.10.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIHJlc3VsdCBvZiBzdWNoIGJvcnJvd2luZyBpcywgZm9yCnNvbWUgcmVhc29uIG9yIG90aGVyLCB0aGUgaW1tZWRpYXRlIGFjY2Vzc2lvbiB0bwpvdXIgbGFuZ3VhZ2Ugb2YgYSBjZXJ0YWluIGxpdmVsaW5lc3MgYW5kIGNoYXJtLgpUYWtlLCBmb3IgZXhhbXBsZSwgd29yZHMgc3VjaCBhcyA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zZXBoeXJpPC9oaT4gYW5kIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnpvcGhvcmk6PC9oaT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+RnJpZXplcy48L25vdGU+CmlmIHRoZXkgd2VyZSBzcGVsdCBhY2NvcmRpbmcgdG8gdGhlIExhdGluIGFscGhhYmV0LAp0aGV5IHdvdWxkIHByb2R1Y2UgYSBoZWF2eSBhbmQgYmFyYmFyb3VzIHNvdW5kLgpGb3Igd2UgcmVwbGFjZSB0aGVzZSBsZXR0ZXJzIGJ5IG90aGVycyBvZiBhIGhhcnNoCmFuZCB1bnBsZWFzYW50IGNoYXJhY3Rlciw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+RiBhbmQgVTsgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+emVmdXJpIGFuZCB6b2ZvcmkuPC9oaT48L25vdGU+IGZyb20gd2hpY2ggR3JlZWNlIGlzCmhhcHBpbHkgaW1tdW5lLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnplZnVyaSBhbmQgem9mb3JpLjwvaGk+PC90cmFuc2xhdGlvbj4="
translation['12.10.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZSBzaXh0aCBsZXR0ZXIgaW4gb3VyIGFscGhhYmV0CmlzIHJlcHJlc2VudGVkIGJ5IGEgc291bmQgd2hpY2ggY2FuIHNjYXJjZWx5IGJlCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40NjciIC8+CgpjYWxsZWQgaHVtYW4gb3IgZXZlbiBhcnRpY3VsYXRlLCBiZWluZyBwcm9kdWNlZCBieQpmb3JjaW5nIHRoZSBhaXIgdGhyb3VnaCB0aGUgaW50ZXJzdGljZXMgb2YgdGhlIHRlZXRoLgpTdWNoIGEgc291bmQsIGV2ZW4gd2hlbiBmb2xsb3dlZCBieSBhIHZvd2VsLCBpcwpoYXJzaCBlbm91Z2ggYW5kLCBhcyBvZnRlbiBhcyBpdCBjbGFzaGVzICg8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5mcmFuZ2l0PC9oaT7vvIkKd2l0aCBhIGNvbnNvbmFudCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Y3AuPC9oaT4gSS4gaXYuIDExLjwvbm90ZT4gYXMgaXQgZG9lcyBpbiB0aGlzIHZlcnkgd29yZAo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5jcC48L2hpPiBJLiBpdi4gMTEuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZnJhbmdpdCw8L2hpPiBiZWNvbWVzIGhhcnNoZXIgc3RpbGwuIFRoZW4gdGhlcmUgaXMgdGhlCkFlb2xpYyBkaWdhbW1hIHdob3NlIHNvdW5kIG9jY3VycyBpbiB3b3JkcyBzdWNoCmFzIG91ciA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zZXJ2dXM8L2hpPiBhbmQgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+Y2VydnVzOzwvaGk+IGZvciBldmVuIHRob3VnaCB3ZSBoYXZlCnJlamVjdGVkIHRoZSBhY3R1YWwgZm9ybSBvZiB0aGUgbGV0dGVyLCB3ZSBjYW5ub3QKZ2V0IHJpZCBvZiB0aGF0IHdoaWNoIGl0IHJlcHJlc2VudHMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkEgc291bmQgYXBwcm94aW1hdGluZyB0byBvdXIgVy48L25vdGU+PC90cmFuc2xhdGlvbj4="
translation['12.10.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz4gU2ltaWxhcmx5IHRoZQpsZXR0ZXIgUSwgd2hpY2ggaXMgc3VwZXJmbHVvdXMgYW5kIHVzZWxlc3Mgc2F2ZSBmb3IKdGhlIHB1cnBvc2Ugb2YgYXR0YWNoaW5nIHRvIGl0c2VsZiB0aGUgdm93ZWxzIGJ5CndoaWNoIGl0IGlzIGZvbGxvd2VkLCByZXN1bHRzIGluIHRoZSBmb3JtYXRpb24gb2YKaGFyc2ggc3lsbGFibGVzLCBhcywgZm9yIGV4YW1wbGUsIHdoZW4gd2Ugd3JpdGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZXF1b3M8L2hpPgphbmQgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+YWVxdXVtLDwvaGk+IG1vcmUgZXNwZWNpYWxseSBzaW5jZSB0aGVzZSB0d28gdm93ZWxzCnRvZ2V0aGVyIHByb2R1Y2UgYSBzb3VuZCBmb3Igd2hpY2ggR3JlZWsgaGFzIG5vCmVxdWl2YWxlbnQgYW5kIHdoaWNoIGNhbm5vdCB0aGVyZWZvcmUgYmUgZXhwcmVzc2VkCmluIEdyZWVrIGxldHRlcnMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPlRoZSBzb3VuZCBvZiBRIGluIGl0c2VsZiBkb2VzIG5vdCBkaWZmZXIgZnJvbSBDLiBJdAp3b3VsZCB0aGVyZWZvcmUgYmUgdXNlbGVzcywgc2F2ZSBhcyBhbiBpbmRpY2F0aW9uIHRoYXQgVSBhbmQKYW5vdGhlciB2b3dlbCBhcmUgdG8gZm9sbG93LiBUaGUgVSBpbiB0aGlzIGNvbWJpbmF0aW9uCmZvbGxvd2luZyBRIHdhcywgYXMgRG9uYXR1cyBsYXRlciBwb2ludGVkIG91dCwgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+bmVpdGhlciBhCnZvd2VsIG5vciBhIGNvbnNvbmFudCw8L3F1b3RlPiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5pLmUuPC9oaT4gaXQgd2FzIHNvbWV0aGluZyBiZXR3ZWVuIFUKYW5kIFYuPC9ub3RlPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPm5laXRoZXIgYQp2b3dlbCBub3IgYSBjb25zb25hbnQsPC9xdW90ZT4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+aS5lLjwvaGk+IGl0IHdhcyBzb21ldGhpbmcgYmV0d2VlbiBVCmFuZCBWLjwvdHJhbnNsYXRpb24+"
translation['12.10.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIHdlIGhhdmUgYSBudW1iZXIgb2YKd29yZHMgd2hpY2ggZW5kIHdpdGggTSwgYSBsZXR0ZXIgd2hpY2ggc3VnZ2VzdHMKdGhlIG1vb2luZyBvZiBhIGNvdywgYW5kIGlzIG5ldmVyIHRoZSBmaW5hbCBsZXR0ZXIKaW4gYW55IEdyZWVrIHdvcmQ6IGZvciBpbiBpdHMgcGxhY2UgdGhleSB1c2UgdGhlCmxldHRlcnMgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+bnUsPC9oaT4gdGhlIHNvdW5kIG9mIHdoaWNoIGlzIG5hdHVyYWxseSBwbGVhc2FudAphbmQgcHJvZHVjZXMgYSByaW5naW5nIHRvbmUgd2hlbiBpdCBvY2N1cnMgYXQgdGhlCmVuZCBvZicgYSB3b3JkLCB3aGVyZWFzIGluIExhdGluIHRoaXMgdGVybWluYXRpb24gaXMKc2NhcmNlbHkgZXZlciBmb3VuZC48L3RyYW5zbGF0aW9uPg=="
translation['12.10.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4sIHdlIGhhdmUgc3lsbGFibGVzIHdoaWNoCnByb2R1Y2Ugc3VjaCBhIGhhcnNoIGVmZmVjdCBieSBlbmRpbmcgaW4gQiBhbmQKRCwgdGhhdCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5tYW55LDwvaGk+IG5vdCwgaXQgaXMgdHJ1ZSwgb2Ygb3VyIG1vc3QgYW5jaWVudAp3cml0ZXJzLCBidXQgc3RpbGwgd3JpdGVycyBvZiBjb25zaWRlcmFibGUgYW50aXF1aXR5LApoYXZlIGF0dGVtcHRlZCB0byBtaXRpZ2F0ZSB0aGUgaGFyc2huZXNzIG5vdCBtZXJlbHkKYnkgc2F5aW5nIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmF2ZXJzYTwvaGk+IGZvciA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5hYnZlcnNhLDwvaGk+IGJ1dCBieSBhZGRpbmcgYW4gUwp0byB0aGUgcHJlcG9zaXRpb24gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+YWIsPC9oaT4gYWx0aG91Z2ggUyBpcyBhbiB1Z2x5IGxldHRlcgo8L3RyYW5zbGF0aW9uPg=="
translation['12.10.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5pbiBpdHNlbGYgT3VyIGFjY2VudHMgYWxzbyBhcmUgbGVzcyBhZ3JlZWFibGUgdGhhbgp0aG9zZSBvZiB0aGUgR3JlZWtzLiBUaGlzIGlzIGR1ZSB0byBhIGNlcnRhaW4gcmlnaWRpdHkKYW5kIG1vbm90b255IG9mIHByb251bmNpYXRpb24sIHNpbmNlIHRoZSBmaW5hbAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDY5IiAvPgoKc3lsbGFibGUgaXMgbmV2ZXIgbWFya2VkIGJ5IHRoZSByaXNlIG9mIHRoZSBhY3V0ZQphY2NlbnQgbm9yIGJ5IHRoZSByaXNlIGFuZCBmaWxsIG9mIHRoZSBjaXJjdW1mbGV4LCBidXQKb25lIG9yIGV2ZW4gdHdvIGdyYXZlIGFjY2VudHM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SS5lLjwvaGk+IHRoZSBsYXN0IHN5bGxhYmxlIGFuZCBvZnRlbiB0aGUgbGFzdCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj50d288L2hpPiBzeWxsYWJsZXMKaGF2ZSB0aGUgZ3JhdmUgYWNjZW50LiBTZWUgSS4gdi4gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PC9ub3RlPiBhcmUgcmVndWxhcmx5IHRvIGJlCmZvdW5kIGF0IHRoZSBlbmQuIENvbnNlcXVlbnRseSB0aGUgR3JlZWsgbGFuZ3VhZ2UKaXMgc28gbXVjaCBtb3JlIGFncmVlYWJsZSBpbiBzb3VuZCB0aGFuIHRoZSBMYXRpbiwKdGhhdCBvdXIgcG9ldHMsIHdoZW5ldmVyIHRoZXkgd2lzaCB0aGVpciB2ZXJzZSB0bwpiZSBlc3BlY2lhbGx5IGhhcm1vbmlvdXMsIGFkb3JuIGl0IHdpdGggR3JlZWsgd29yZHMuCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPkkuZS48L2hpPiB0aGUgbGFzdCBzeWxsYWJsZSBhbmQgb2Z0ZW4gdGhlIGxhc3QgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+dHdvPC9oaT4gc3lsbGFibGVzCmhhdmUgdGhlIGdyYXZlIGFjY2VudC4gU2VlIEkuIHYuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPjwvdHJhbnNsYXRpb24+"
translation['12.10.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5BIHN0aWxsIHN0cm9uZ2VyIGluZGljYXRpb24gb2YgdGhlIGluZmVyaW9yaXR5IG9mIExhdGluCmlzIHRvIGJlIGZvdW5kIGluIHRoZSBmYWN0IHRoYXQgdGhlcmUgYXJlIG1hbnkgdGhpbmdzCndoaWNoIGhhdmUgbm8gTGF0aW4gbmFtZXMsIHNvIHRoYXQgaXQgaXMgbmVjZXNzYXJ5CnRvIGV4cHJlc3MgdGhlbSBieSBtZXRhcGhvciBvciBwZXJpcGhyYXNpcywgd2hpbGUKZXZlbiBpbiB0aGUgY2FzZSBvZiB0aGluZ3Mgd2hpY2ggaGF2ZSBuYW1lcywgdGhlCmV4dHJlbWUgcG92ZXJ0eSBvZiB0aGUgbGFuZ3VhZ2UgbGVhZHMgdXMgdG8gcmVzb3J0CnRvIHRoZSBzYW1lIHByYWN0aWNlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5JLmUuPC9oaT4gYmVjYXVzZSB0aGUgbmFtZXMgYXJlIG5vdCBob2xseSBhZGVxdWF0ZSBhbmQKdGhlcmUgYXJlIG5vIHNhdGlzZmFjdG9yeSBzeW5vbnltcy48L25vdGU+IE9uIHRoZSBvdGhlciBoYW5kLCB0aGUKR3JlZWtzIGhhdmUgbm90IG1lcmVseSBhYnVuZGFuY2Ugb2Ygd29yZHMsIGJ1dAp0aGV5IGhhdmUgYWxzbyBhIG51bWJlciBvZiBkaWZmZXJlbnQgZGlhbGVjdHMuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SS5lLjwvaGk+IGJlY2F1c2UgdGhlIG5hbWVzIGFyZSBub3QgaG9sbHkgYWRlcXVhdGUgYW5kCnRoZXJlIGFyZSBubyBzYXRpc2ZhY3Rvcnkgc3lub255bXMuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzUiIHVuaXQ9InNlY3Rpb24iIC8+Q29uc2VxdWVudGx5IGhlIHdobyBkZW1hbmRzIGZyb20gTGF0aW4gdGhlCmdyYWNlIG9mIEF0dGljIEdyZWVrLCBtdXN0IGZpcnN0IHByb3ZpZGUgYSBsaWtlCmNoYXJtIG9mIHRvbmUgYW5kIGVxdWFsIHJpY2huZXNzIG9mIHZvY2FidWxhcnkuIElmCnRoaXMgYWR2YW50YWdlIGlzIGRlbmllZCB1cywgd2UgbXVzdCBhZGFwdCBvdXIKdGhvdWdodHMgdG8gc3VpdCB0aGUgd29yZHMgd2UgaGF2ZSBhbmQsIHdoZXJlIG91cgptYXR0ZXIgaXMgdW51c3VhbGx5IHNsaWdodCBhbmQgZGVsaWNhdGUsIG11c3QgYXZvaWQKZXhwcmVzc2luZyBpdCBpbiB3b3JkcyB3aGljaCBhcmUsIEkgd2lsbCBub3Qgc2F5IHRvbwpncm9zcywgYnV0IGF0IGFueSByYXRlIHRvbyBzdHJvbmcgZm9yIGl0LCBmb3IgZmVhciB0aGF0CnRoZSBjb21iaW5hdGlvbiBzaG91bGQgcmVzdWx0IGluIHRoZSBkZXN0cnVjdGlvbgpib3RoIG9mIGRlbGljYWN5IGFuZCBmb3JjZS48bWlsZXN0b25lIG49IjM2IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgdGhlIGxlc3MgaGVscCB3ZQpnZXQgZnJvbSB0aGUgbGFuZ3VhZ2UsIHRoZSBtb3JlIG11c3Qgd2UgcmVseSBvbgppbnZlbnRpdmVuZXNzIG9mIHRob3VnaHQgdG8gYnJpbmcgdXMgdGhyb3VnaCB0aGUKY29uZmxpY3QuIFdlIG11c3QgZGlzY292ZXIgc2VudGltZW50cyBmdWxsIG9mIGxvZnRpbmVzcyBhbmQgdmFyaWV0eSwgbXVzdCBzdGlyIGFsbCB0aGUgZW1vdGlvbnMgYW5kCmlsbHVtaW5lIG91ciBzdHlsZSBieSBicmlsbGlhbmNlIG9mIG1ldGFwaG9yLiBTaW5jZQp3ZSBjYW5ub3QgYmUgc28gZGVsaWNhdGUsIGxldCB1cyBiZSBzdHJvbmdlci4gSWYKdGhleSBiZWF0IHVzIGZvciBzdWJ0bGV0eSwgbGV0IHVzIHByZXZhaWwgYnkgd2VpZ2h0LAphbmQgaWYgdGhleSBoYXZlIGdyZWF0ZXIgcHJlY2lzaW9uLCBsZXQgdXMgb3V0ZG8KCjxwYiBpZD0icC40NzEiIC8+Cgp0aGVtIGluIGZ1bGxuZXNzIG9mIGV4cHJlc3Npb24uPG1pbGVzdG9uZSBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz4gRXZlbiB0aGUgbGVzc2VyCm9yYXRvcnMgb2YgR3JlZWNlIGhhdmUgdGhlaXIgb3duIGhhdmVucyB3aGVyZSB0aGV5Cm1heSByaWRlIGluIHNhZmV0eSw8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPk93aW5nIHRvIHRoZSBzdWJ0bGV0eSBhbmQgZGVsaWNhY3kgb2YgdGhlIEdyZWVrCmxhbmd1YWdlIGV2ZW4gc2Vjb25kLXJhdGUgdGFsZW50IHdpbGwgaGUgYWJsZSB0byB3aW4gZGlzdGluY3Rpb24gaW4gZGVhbGluZyB3aXRoIG1pbm9yIHRoaW5ncy4gQnV0IHRoZSBjb2Fyc2VyIGFuZAptb3JlIGZ1bGwtYmxvb2RlZCBuYXR1cmUgb2YgTGF0aW4gbWFrZXMgdGhpcyBkaWZmaWN1bHQuPC9ub3RlPiB3aGlsZSB3ZSBhcyBhIHJ1bGUgY2FycnkgbW9yZQpzYWlsLiBMZXQgc3Ryb25nZXIgZ2FsZXMgZmlsbCBvdXIgY2FudmFzLCBhbmQgeWV0IGxldAp1cyBub3QgYWx3YXlzIGtlZXAgdGhlIGhpZ2ggc2VhczsgZm9yIGF0IHRpbWVzIHdlCm11c3QgY2xpbmcgdG8gc2hvcmUuIFRoZSBHcmVla3MgY2FuIGVhc2lseSB0cmF2ZXJzZQphbnkgc2hhbGxvd3M7IEkgbXVzdCBmaW5kIGEgZGVlcGVyLCB0aG91Z2ggbm90Cm11Y2ggZGVlcGVyLCBjaGFubmVsLCB0aGF0IG15IGJhcmsgbWF5IG5vdCBydW4KYWdyb3VuZC48bWlsZXN0b25lIG49IjM4IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgZXZlbiB0aG91Z2ggdGhlIEdyZWVrcyBzdXJwYXNzIHVzCndoZXJlIGNpcmN1bXN0YW5jZXMgY2FsbCBmb3IgZGVsaWNhY3kgYW5kIHJlc3RyYWludCwKdGhvdWdoIHdlIGFja25vd2xlZGdlIHRoZWlyIHN1cGVyaW9yaXR5IGluIHRoaXMKcmVzcGVjdCBhbG9uZSwgYW5kIHRoZXJlZm9yZSBkbyBub3QgY2xhaW0gdG8gcml2YWwKdGhlbSBpbiBjb21lZHksIHRoYXQgaXMgbm8ganVzdGlmaWNhdGlvbiBmb3Igb3VyCmFiYW5kb25tZW50IG9mIHRoaXMgZGVwYXJ0bWVudCBvZiBvcmF0b3J5LCBidXQKcmF0aGVyIGEgcmVhc29uIHdoeSB3ZSBzaG91bGQgaGFuZGxlIGl0IGFzIGJlc3Qgd2UKY2FuLiBOb3cgd2UgY2FuIGF0IGFueSByYXRlIHJlc2VtYmxlIHRoZSBHcmVla3MKaW4gdGhlIG1ldGhvZCBhbmQganVkZ2VtZW50IHdpdGggd2hpY2ggd2UgdHJlYXQKb3VyIG1hdHRlciwgYWx0aG91Z2ggdGhhdCBncmFjZSBvZiBsYW5ndWFnZSwgd2hpY2gKb3VyIHdvcmRzIGNhbm5vdCBwcm92aWRlLCBtdXN0IGJlIHNlY3VyZWQgYnkgdGhlCmFkbWl4dHVyZSBvZiBmb3JlaWduIGNvbmRpbWVudHMuPG1pbGVzdG9uZSBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGV4YW1wbGUsIGlzCm5vdCBDaWNlcm8gc2hyZXdkLCBzaW1wbGUgYW5kIG5vdCB1bmR1bHkgZXhhbHRlZAppbiB0b25lLCB3aGVuIGhlIGRlYWxzIHdpdGggcHJpdmF0ZSBlYXNlcz8gSXMgbm90CkNhbGlkaXVzIGFsc28gZGlzdGluZ3Vpc2hlZCBmb3IgdGhlIHNhbWUgdmlydHVlPwpXZXJlIG5vdCBTY2lwaW8sIExhZWxpdXMgYW5kIENhdG8gdGhlIEF0dGljIG9yYXRvcnMKb2YgUm9tZT8gU3VyZWx5IHdlIG91Z2h0IHRvIGJlIHNhdGlzZmllZCB3aXRoCnRoZW0sIHNpbmNlIG5vdGhpbmcgY2FuIGJlIGJldHRlci48L3A+CjwvdHJhbnNsYXRpb24+"
translation['12.10.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5Db25zZXF1ZW50bHkgaGUgd2hvIGRlbWFuZHMgZnJvbSBMYXRpbiB0aGUKZ3JhY2Ugb2YgQXR0aWMgR3JlZWssIG11c3QgZmlyc3QgcHJvdmlkZSBhIGxpa2UKY2hhcm0gb2YgdG9uZSBhbmQgZXF1YWwgcmljaG5lc3Mgb2Ygdm9jYWJ1bGFyeS4gSWYKdGhpcyBhZHZhbnRhZ2UgaXMgZGVuaWVkIHVzLCB3ZSBtdXN0IGFkYXB0IG91cgp0aG91Z2h0cyB0byBzdWl0IHRoZSB3b3JkcyB3ZSBoYXZlIGFuZCwgd2hlcmUgb3VyCm1hdHRlciBpcyB1bnVzdWFsbHkgc2xpZ2h0IGFuZCBkZWxpY2F0ZSwgbXVzdCBhdm9pZApleHByZXNzaW5nIGl0IGluIHdvcmRzIHdoaWNoIGFyZSwgSSB3aWxsIG5vdCBzYXkgdG9vCmdyb3NzLCBidXQgYXQgYW55IHJhdGUgdG9vIHN0cm9uZyBmb3IgaXQsIGZvciBmZWFyIHRoYXQKdGhlIGNvbWJpbmF0aW9uIHNob3VsZCByZXN1bHQgaW4gdGhlIGRlc3RydWN0aW9uCmJvdGggb2YgZGVsaWNhY3kgYW5kIGZvcmNlLjwvdHJhbnNsYXRpb24+"
translation['12.10.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZSBsZXNzIGhlbHAgd2UKZ2V0IGZyb20gdGhlIGxhbmd1YWdlLCB0aGUgbW9yZSBtdXN0IHdlIHJlbHkgb24KaW52ZW50aXZlbmVzcyBvZiB0aG91Z2h0IHRvIGJyaW5nIHVzIHRocm91Z2ggdGhlCmNvbmZsaWN0LiBXZSBtdXN0IGRpc2NvdmVyIHNlbnRpbWVudHMgZnVsbCBvZiBsb2Z0aW5lc3MgYW5kIHZhcmlldHksIG11c3Qgc3RpciBhbGwgdGhlIGVtb3Rpb25zIGFuZAppbGx1bWluZSBvdXIgc3R5bGUgYnkgYnJpbGxpYW5jZSBvZiBtZXRhcGhvci4gU2luY2UKd2UgY2Fubm90IGJlIHNvIGRlbGljYXRlLCBsZXQgdXMgYmUgc3Ryb25nZXIuIElmCnRoZXkgYmVhdCB1cyBmb3Igc3VidGxldHksIGxldCB1cyBwcmV2YWlsIGJ5IHdlaWdodCwKYW5kIGlmIHRoZXkgaGF2ZSBncmVhdGVyIHByZWNpc2lvbiwgbGV0IHVzIG91dGRvCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40NzEiIC8+Cgp0aGVtIGluIGZ1bGxuZXNzIG9mIGV4cHJlc3Npb24uPC90cmFuc2xhdGlvbj4="
translation['12.10.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz4gRXZlbiB0aGUgbGVzc2VyCm9yYXRvcnMgb2YgR3JlZWNlIGhhdmUgdGhlaXIgb3duIGhhdmVucyB3aGVyZSB0aGV5Cm1heSByaWRlIGluIHNhZmV0eSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+T3dpbmcgdG8gdGhlIHN1YnRsZXR5IGFuZCBkZWxpY2FjeSBvZiB0aGUgR3JlZWsKbGFuZ3VhZ2UgZXZlbiBzZWNvbmQtcmF0ZSB0YWxlbnQgd2lsbCBoZSBhYmxlIHRvIHdpbiBkaXN0aW5jdGlvbiBpbiBkZWFsaW5nIHdpdGggbWlub3IgdGhpbmdzLiBCdXQgdGhlIGNvYXJzZXIgYW5kCm1vcmUgZnVsbC1ibG9vZGVkIG5hdHVyZSBvZiBMYXRpbiBtYWtlcyB0aGlzIGRpZmZpY3VsdC48L25vdGU+IHdoaWxlIHdlIGFzIGEgcnVsZSBjYXJyeSBtb3JlCnNhaWwuIExldCBzdHJvbmdlciBnYWxlcyBmaWxsIG91ciBjYW52YXMsIGFuZCB5ZXQgbGV0CnVzIG5vdCBhbHdheXMga2VlcCB0aGUgaGlnaCBzZWFzOyBmb3IgYXQgdGltZXMgd2UKbXVzdCBjbGluZyB0byBzaG9yZS4gVGhlIEdyZWVrcyBjYW4gZWFzaWx5IHRyYXZlcnNlCmFueSBzaGFsbG93czsgSSBtdXN0IGZpbmQgYSBkZWVwZXIsIHRob3VnaCBub3QKbXVjaCBkZWVwZXIsIGNoYW5uZWwsIHRoYXQgbXkgYmFyayBtYXkgbm90IHJ1bgphZ3JvdW5kLjwvdHJhbnNsYXRpb24+"
translation['12.10.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGV2ZW4gdGhvdWdoIHRoZSBHcmVla3Mgc3VycGFzcyB1cwp3aGVyZSBjaXJjdW1zdGFuY2VzIGNhbGwgZm9yIGRlbGljYWN5IGFuZCByZXN0cmFpbnQsCnRob3VnaCB3ZSBhY2tub3dsZWRnZSB0aGVpciBzdXBlcmlvcml0eSBpbiB0aGlzCnJlc3BlY3QgYWxvbmUsIGFuZCB0aGVyZWZvcmUgZG8gbm90IGNsYWltIHRvIHJpdmFsCnRoZW0gaW4gY29tZWR5LCB0aGF0IGlzIG5vIGp1c3RpZmljYXRpb24gZm9yIG91cgphYmFuZG9ubWVudCBvZiB0aGlzIGRlcGFydG1lbnQgb2Ygb3JhdG9yeSwgYnV0CnJhdGhlciBhIHJlYXNvbiB3aHkgd2Ugc2hvdWxkIGhhbmRsZSBpdCBhcyBiZXN0IHdlCmNhbi4gTm93IHdlIGNhbiBhdCBhbnkgcmF0ZSByZXNlbWJsZSB0aGUgR3JlZWtzCmluIHRoZSBtZXRob2QgYW5kIGp1ZGdlbWVudCB3aXRoIHdoaWNoIHdlIHRyZWF0Cm91ciBtYXR0ZXIsIGFsdGhvdWdoIHRoYXQgZ3JhY2Ugb2YgbGFuZ3VhZ2UsIHdoaWNoCm91ciB3b3JkcyBjYW5ub3QgcHJvdmlkZSwgbXVzdCBiZSBzZWN1cmVkIGJ5IHRoZQphZG1peHR1cmUgb2YgZm9yZWlnbiBjb25kaW1lbnRzLjwvdHJhbnNsYXRpb24+"
translation['12.10.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGV4YW1wbGUsIGlzCm5vdCBDaWNlcm8gc2hyZXdkLCBzaW1wbGUgYW5kIG5vdCB1bmR1bHkgZXhhbHRlZAppbiB0b25lLCB3aGVuIGhlIGRlYWxzIHdpdGggcHJpdmF0ZSBlYXNlcz8gSXMgbm90CkNhbGlkaXVzIGFsc28gZGlzdGluZ3Vpc2hlZCBmb3IgdGhlIHNhbWUgdmlydHVlPwpXZXJlIG5vdCBTY2lwaW8sIExhZWxpdXMgYW5kIENhdG8gdGhlIEF0dGljIG9yYXRvcnMKb2YgUm9tZT8gU3VyZWx5IHdlIG91Z2h0IHRvIGJlIHNhdGlzZmllZCB3aXRoCnRoZW0sIHNpbmNlIG5vdGhpbmcgY2FuIGJlIGJldHRlci48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBhcmUgc3RpbGwgc29tZSBjcml0aWNzIHdobyBkZW55IHRoYXQgYW55CmZvcm0gb2YgZWxvcXVlbmNlIGlzIHB1cmVseSBuYXR1cmFsLCBleGNlcHQgdGhhdAp3aGljaCBjbG9zZWx5IHJlc2VtYmxlcyB0aGUgb3JkaW5hcnkgc3BlZWNoIG9mIGV2ZXJ5ZGF5IGxpZmUsIHdoaWNoIHdlIHVzZSB0byBvdXIgZnJpZW5kcywgb3VyIHdpdmVzLCBvdXIKY2hpbGRyZW4gYW5kIG91ciBzbGF2ZXMsIGEgbGFuZ3VhZ2UsIHRoYXQgaXMgdG8gc2F5LAp3aGljaCBjb250ZW50cyBpdHNlbGYgd2l0aCBleHByZXNzaW5nIHRoZSBwdXJwb3NlCm9mIHRoZSBtaW5kIHdpdGhvdXQgc2Vla2luZyB0byBkaXNjb3ZlciBhbnl0aGluZwppbiB0aGUgd2F5IG9mIGVsYWJvcmF0ZSBhbmQgZmFyLWZldGNoZWQgcGhyYXNlb2xvZ3kuCgo8cGIgaWQ9InAuNDczIiAvPgoKQW5kIHRoZXkgaG9sZCB0aGF0IHdoYXRldmVyIGlzIGFkZGVkIHRvIHRoaXMKc2ltcGxpY2l0eSBsYXlzIHRoZSBzcGVha2VyIG9wZW4gdG8gdGhlIGNoYXJnZSBvZgphZmZlY3RhdGlvbiBhbmQgcHJldGVudGlvdXMgb3N0ZW50YXRpb24gb2Ygc3BlZWNoLAp2b2lkIG9mIGFsbCBzaW5jZXJpdHkgYW5kIGVsYWJvcmF0ZWQgbWVyZWx5IGZvciB0aGUKc2FrZSBvZiB0aGUgd29yZHMsIGFsdGhvdWdoIHRoZSBzb2xlIGR1dHkgYXNzaWduZWQKdG8gd29yZHMgYnkgbmF0dXJlIGlzIHRvIGJlIHRoZSBzZXJ2YW50cyBvZiB0aG91Z2h0Lgo8bWlsZXN0b25lIG49IjQxIiB1bml0PSJzZWN0aW9uIiAvPlN1Y2ggbGFuZ3VhZ2UgbWF5IGJlIGNvbXBhcmVkIHRvIHRoZSBib2RpZXMgb2YKYXRobGV0ZXMsIHdoaWNoIGFsdGhvdWdoIHRoZXkgZGV2ZWxvcCB0aGVpciBzdHJlbmd0aApieSBleGVyY2lzZSBhbmQgZGlldCwgYXJlIG9mIHVubmF0dXJhbCBncm93dGggYW5kCmFibm9ybWFsIGluIGFwcGVhcmFuY2UuIEZvciB3aGF0LCBzYXkgdGhlc2UgY3JpdGljcywKaXMgdGhlIGdvb2Qgb2YgZXhwcmVzc2luZyBhIHRoaW5nIGJ5IHBlcmlwaHJhc2lzIG9yCm1ldGFwaG9yICh0aGF0IGlzLCBlaXRoZXIgYnkgYSBudW1iZXIgb2Ygd29yZHMgb3IKYnkgd29yZHMgd2hpY2ggaGF2ZSBubyBjb25uZXhpb24gd2l0aCB0aGUgdGhpbmcpLAp3aGVuIGV2ZXJ5dGhpbmcgaGFzIGJlZW4gYWxsb3R0ZWQgYSBuYW1lIG9mIGl0cwpvd24/PG1pbGVzdG9uZSBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz4gRmluYWxseSwgdGhleSB1cmdlIHRoYXQgYWxsIHRoZSBlYXJsaWVzdCBvcmF0b3JzCnNwb2tlIGFjY29yZGluZyB0byB0aGUgZGljdGF0ZXMgb2YgbmF0dXJlLCBidXQgdGhhdApzdWJzZXF1ZW50bHkgdGhlcmUgYXJvc2UgYSBjbGFzcyBvZiBzcGVha2VycyByZXNlbWJsaW5nIHBvZXRzIHJhdGhlciB0aGFuIG9yYXRvcnMsIHdobyByZWdhcmRlZApmYWxzZSBhbmQgYXJ0aWZpY2lhbCBtZXRob2RzIG9mIGV4cHJlc3Npb24gYXMgcG9zaXRpdmUKbWVyaXRzOyB0aGV5IHdlcmUsIGl0IGlzIHRydWUsIG1vcmUgc3BhcmluZyB0aGFuCnRoZSBwb2V0cyBpbiB0aGVpciB1c2Ugb2Ygc3VjaCBleHByZXNzaW9ucywgYnV0IG5vbmUKdGhlIGxlc3Mgd29ya2VkIG9uIHNpbWlsYXIgbGluZXMuIFRoZXJlIGlzIHNvbWUKdHJ1dGggaW4gdGhpcyBjb250ZW50aW9uLCBhbmQgd2Ugc2hvdWxkIHRoZXJlZm9yZQpiZSBjYXJlZnVsIG5vdCB0byBkZXBhcnQgZnJvbSB0aGUgbW9yZSBleGFjdCB1c2FnZQpvZiBvcmRpbmFyeSBzcGVlY2ggdG8gdGhlIGV4dGVudCB0aGF0IGlzIGRvbmUgYnkKY2VydGFpbiBvcmF0b3JzLjxtaWxlc3RvbmUgbj0iNDMiIHVuaXQ9InNlY3Rpb24iIC8+IE9uIHRoZSBvdGhlciBoYW5kLCB0aGF0IGlzIG5vCnJlYXNvbiBmb3IgdGh1cyBjYWx1bW5pYXRpbmcgdGhlIG1hbiB3aG8sIGFzIEkgc2FpZAppbiBkZWFsaW5nIHdpdGggdGhlIHN1YmplY3Qgb2YgYXJ0aXN0aWMgc3RydWN0dXJlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+eC4gY2guIDQuPC9ub3RlPgpzdWNjZWVkcyBpbiBpbXByb3ZpbmcgdXBvbiB0aGUgYmFyZSBuZWNlc3NhcmllcyBvZgpzdHlsZS4gRm9yIHRoZSBjb21tb24gbGFuZ3VhZ2Ugb2YgZXZlcnkgZGF5IHNlZW1zCnRvIG1lIHRvIGJlIG9mIGEgZGlmZmVyZW50IGNoYXJhY3RlciBmcm9tIHRoZSBzdHlsZQpvZiBhbiBlbG9xdWVudCBzcGVha2VyLiBJZiBhbGwgdGhhdCB3YXMgcmVxdWlyZWQgb2YKdGhlIGxhdHRlciB3YXMgbWVyZWx5IHRvIGluZGljYXRlIHRoZSBmYWN0cywgaGUgbWlnaHQKcmVzdCBjb250ZW50IHdpdGggbGl0ZXJhbG5lc3Mgb2YgbGFuZ3VhZ2UsIHdpdGhvdXQKCjxwYiBpZD0icC40NzUiIC8+CgpmdXJ0aGVyIGVsYWJvcmF0aW9uLiBCdXQgc2luY2UgaXQgaXMgaGlzIGR1dHkgdG8KZGVsaWdodCBhbmQgbW92ZSBoaXMgYXVkaWVuY2UgYW5kIHRvIHBsYXkgdXBvbgp0aGUgdmFyaW91cyBmZWVsaW5ncywgaXQgYmVjb21lcyBuZWNlc3NhcnkgZm9yIGhpbQp0byBlbXBsb3kgdGhvc2UgYWRkaXRpb25hbCBhaWRzIHdoaWNoIGFyZSBncmFudGVkCnRvIHVzIGJ5IHRoYXQgc2FtZSBuYXR1cmUgd2hpY2ggZ2F2ZSB1cyBzcGVlY2guCjxtaWxlc3RvbmUgbj0iNDQiIHVuaXQ9InNlY3Rpb24iIC8+SXQgaXMsIGluIGZhY3QsIGFzIG5hdHVyYWwgdG8gZG8gdGhpcyBhcyB0byBoYXJkZW4gdGhlCm11c2NsZXMsIGluY3JlYXNlIG91ciBzdHJlbmd0aCBhbmQgaW1wcm92ZSBvdXIgY29tcGxleGlvbiBieSBtZWFucyBvZiBleGVyY2lzZS4gSXQgaXMgZm9yIHRoaXMgcmVhc29uCnRoYXQgYW1vbmcgYWxsIG5hdGlvbnMgb25lIG1hbiBpcyByZWdhcmRlZCBhcyBtb3JlCmVsb3F1ZW50IGFuZCBtb3JlIGF0dHJhY3RpdmUgaW4gaGlzIHN0eWxlIHRoYW4KYW5vdGhlciAoc2luY2UgaWYgdGhpcyB3ZXJlIG5vdCB0aGUgY2FzZSwgYWxsIHNwZWFrZXJzCndvdWxkIGJlIGVxdWFsKTsgYnV0IHRoZSBzYW1lIG1lbiBzcGVhayBkaWZmZXJlbnRseSBvbiBkaWZmZXJlbnQgc3ViamVjdHMgYW5kIG9ic2VydmUgZGlzdGluY3Rpb25zCm9mIGNoYXJhY3Rlci4gQ29uc2VxdWVudGx5IHRoZSBtb3JlIGVmZmVjdGl2ZSBhCm1hbidzIHNwZWFraW5nLCB0aGUgbW9yZSBpbiBhY2NvcmRhbmNlIHdpdGggdGhlCm5hdHVyZSBvZiBlbG9xdWVuY2Ugd2lsbCBpdCBiZS48L3A+CjwvdHJhbnNsYXRpb24+"
translation['12.10.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBhcmUgc3RpbGwgc29tZSBjcml0aWNzIHdobyBkZW55IHRoYXQgYW55CmZvcm0gb2YgZWxvcXVlbmNlIGlzIHB1cmVseSBuYXR1cmFsLCBleGNlcHQgdGhhdAp3aGljaCBjbG9zZWx5IHJlc2VtYmxlcyB0aGUgb3JkaW5hcnkgc3BlZWNoIG9mIGV2ZXJ5ZGF5IGxpZmUsIHdoaWNoIHdlIHVzZSB0byBvdXIgZnJpZW5kcywgb3VyIHdpdmVzLCBvdXIKY2hpbGRyZW4gYW5kIG91ciBzbGF2ZXMsIGEgbGFuZ3VhZ2UsIHRoYXQgaXMgdG8gc2F5LAp3aGljaCBjb250ZW50cyBpdHNlbGYgd2l0aCBleHByZXNzaW5nIHRoZSBwdXJwb3NlCm9mIHRoZSBtaW5kIHdpdGhvdXQgc2Vla2luZyB0byBkaXNjb3ZlciBhbnl0aGluZwppbiB0aGUgd2F5IG9mIGVsYWJvcmF0ZSBhbmQgZmFyLWZldGNoZWQgcGhyYXNlb2xvZ3kuCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40NzMiIC8+CgpBbmQgdGhleSBob2xkIHRoYXQgd2hhdGV2ZXIgaXMgYWRkZWQgdG8gdGhpcwpzaW1wbGljaXR5IGxheXMgdGhlIHNwZWFrZXIgb3BlbiB0byB0aGUgY2hhcmdlIG9mCmFmZmVjdGF0aW9uIGFuZCBwcmV0ZW50aW91cyBvc3RlbnRhdGlvbiBvZiBzcGVlY2gsCnZvaWQgb2YgYWxsIHNpbmNlcml0eSBhbmQgZWxhYm9yYXRlZCBtZXJlbHkgZm9yIHRoZQpzYWtlIG9mIHRoZSB3b3JkcywgYWx0aG91Z2ggdGhlIHNvbGUgZHV0eSBhc3NpZ25lZAp0byB3b3JkcyBieSBuYXR1cmUgaXMgdG8gYmUgdGhlIHNlcnZhbnRzIG9mIHRob3VnaHQuCjwvdHJhbnNsYXRpb24+"
translation['12.10.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz5TdWNoIGxhbmd1YWdlIG1heSBiZSBjb21wYXJlZCB0byB0aGUgYm9kaWVzIG9mCmF0aGxldGVzLCB3aGljaCBhbHRob3VnaCB0aGV5IGRldmVsb3AgdGhlaXIgc3RyZW5ndGgKYnkgZXhlcmNpc2UgYW5kIGRpZXQsIGFyZSBvZiB1bm5hdHVyYWwgZ3Jvd3RoIGFuZAphYm5vcm1hbCBpbiBhcHBlYXJhbmNlLiBGb3Igd2hhdCwgc2F5IHRoZXNlIGNyaXRpY3MsCmlzIHRoZSBnb29kIG9mIGV4cHJlc3NpbmcgYSB0aGluZyBieSBwZXJpcGhyYXNpcyBvcgptZXRhcGhvciAodGhhdCBpcywgZWl0aGVyIGJ5IGEgbnVtYmVyIG9mIHdvcmRzIG9yCmJ5IHdvcmRzIHdoaWNoIGhhdmUgbm8gY29ubmV4aW9uIHdpdGggdGhlIHRoaW5nKSwKd2hlbiBldmVyeXRoaW5nIGhhcyBiZWVuIGFsbG90dGVkIGEgbmFtZSBvZiBpdHMKb3duPzwvdHJhbnNsYXRpb24+"
translation['12.10.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz4gRmluYWxseSwgdGhleSB1cmdlIHRoYXQgYWxsIHRoZSBlYXJsaWVzdCBvcmF0b3JzCnNwb2tlIGFjY29yZGluZyB0byB0aGUgZGljdGF0ZXMgb2YgbmF0dXJlLCBidXQgdGhhdApzdWJzZXF1ZW50bHkgdGhlcmUgYXJvc2UgYSBjbGFzcyBvZiBzcGVha2VycyByZXNlbWJsaW5nIHBvZXRzIHJhdGhlciB0aGFuIG9yYXRvcnMsIHdobyByZWdhcmRlZApmYWxzZSBhbmQgYXJ0aWZpY2lhbCBtZXRob2RzIG9mIGV4cHJlc3Npb24gYXMgcG9zaXRpdmUKbWVyaXRzOyB0aGV5IHdlcmUsIGl0IGlzIHRydWUsIG1vcmUgc3BhcmluZyB0aGFuCnRoZSBwb2V0cyBpbiB0aGVpciB1c2Ugb2Ygc3VjaCBleHByZXNzaW9ucywgYnV0IG5vbmUKdGhlIGxlc3Mgd29ya2VkIG9uIHNpbWlsYXIgbGluZXMuIFRoZXJlIGlzIHNvbWUKdHJ1dGggaW4gdGhpcyBjb250ZW50aW9uLCBhbmQgd2Ugc2hvdWxkIHRoZXJlZm9yZQpiZSBjYXJlZnVsIG5vdCB0byBkZXBhcnQgZnJvbSB0aGUgbW9yZSBleGFjdCB1c2FnZQpvZiBvcmRpbmFyeSBzcGVlY2ggdG8gdGhlIGV4dGVudCB0aGF0IGlzIGRvbmUgYnkKY2VydGFpbiBvcmF0b3JzLjwvdHJhbnNsYXRpb24+"
translation['12.10.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz4gT24gdGhlIG90aGVyIGhhbmQsIHRoYXQgaXMgbm8KcmVhc29uIGZvciB0aHVzIGNhbHVtbmlhdGluZyB0aGUgbWFuIHdobywgYXMgSSBzYWlkCmluIGRlYWxpbmcgd2l0aCB0aGUgc3ViamVjdCBvZiBhcnRpc3RpYyBzdHJ1Y3R1cmUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPnguIGNoLiA0Ljwvbm90ZT4Kc3VjY2VlZHMgaW4gaW1wcm92aW5nIHVwb24gdGhlIGJhcmUgbmVjZXNzYXJpZXMgb2YKc3R5bGUuIEZvciB0aGUgY29tbW9uIGxhbmd1YWdlIG9mIGV2ZXJ5IGRheSBzZWVtcwp0byBtZSB0byBiZSBvZiBhIGRpZmZlcmVudCBjaGFyYWN0ZXIgZnJvbSB0aGUgc3R5bGUKb2YgYW4gZWxvcXVlbnQgc3BlYWtlci4gSWYgYWxsIHRoYXQgd2FzIHJlcXVpcmVkIG9mCnRoZSBsYXR0ZXIgd2FzIG1lcmVseSB0byBpbmRpY2F0ZSB0aGUgZmFjdHMsIGhlIG1pZ2h0CnJlc3QgY29udGVudCB3aXRoIGxpdGVyYWxuZXNzIG9mIGxhbmd1YWdlLCB3aXRob3V0Cgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40NzUiIC8+CgpmdXJ0aGVyIGVsYWJvcmF0aW9uLiBCdXQgc2luY2UgaXQgaXMgaGlzIGR1dHkgdG8KZGVsaWdodCBhbmQgbW92ZSBoaXMgYXVkaWVuY2UgYW5kIHRvIHBsYXkgdXBvbgp0aGUgdmFyaW91cyBmZWVsaW5ncywgaXQgYmVjb21lcyBuZWNlc3NhcnkgZm9yIGhpbQp0byBlbXBsb3kgdGhvc2UgYWRkaXRpb25hbCBhaWRzIHdoaWNoIGFyZSBncmFudGVkCnRvIHVzIGJ5IHRoYXQgc2FtZSBuYXR1cmUgd2hpY2ggZ2F2ZSB1cyBzcGVlY2guCjwvdHJhbnNsYXRpb24+"
translation['12.10.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcywgaW4gZmFjdCwgYXMgbmF0dXJhbCB0byBkbyB0aGlzIGFzIHRvIGhhcmRlbiB0aGUKbXVzY2xlcywgaW5jcmVhc2Ugb3VyIHN0cmVuZ3RoIGFuZCBpbXByb3ZlIG91ciBjb21wbGV4aW9uIGJ5IG1lYW5zIG9mIGV4ZXJjaXNlLiBJdCBpcyBmb3IgdGhpcyByZWFzb24KdGhhdCBhbW9uZyBhbGwgbmF0aW9ucyBvbmUgbWFuIGlzIHJlZ2FyZGVkIGFzIG1vcmUKZWxvcXVlbnQgYW5kIG1vcmUgYXR0cmFjdGl2ZSBpbiBoaXMgc3R5bGUgdGhhbgphbm90aGVyIChzaW5jZSBpZiB0aGlzIHdlcmUgbm90IHRoZSBjYXNlLCBhbGwgc3BlYWtlcnMKd291bGQgYmUgZXF1YWwpOyBidXQgdGhlIHNhbWUgbWVuIHNwZWFrIGRpZmZlcmVudGx5IG9uIGRpZmZlcmVudCBzdWJqZWN0cyBhbmQgb2JzZXJ2ZSBkaXN0aW5jdGlvbnMKb2YgY2hhcmFjdGVyLiBDb25zZXF1ZW50bHkgdGhlIG1vcmUgZWZmZWN0aXZlIGEKbWFuJ3Mgc3BlYWtpbmcsIHRoZSBtb3JlIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUKbmF0dXJlIG9mIGVsb3F1ZW5jZSB3aWxsIGl0IGJlLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ1IiB1bml0PSJzZWN0aW9uIiAvPkkgaGF2ZSwgdGhlcmVmb3JlLCBubyBzdHJvbmcgb2JqZWN0aW9uIGV2ZW4gdG8gdGhlCnZpZXdzIGV4cHJlc3NlZCBieSB0aG9zZSB3aG8gdGhpbmsgdGhhdCBzb21lIGNvbmNlc3Npb24gc2hvdWxkIGJlIG1hZGUgdG8gdGhlIGNpcmN1bXN0YW5jZXMgdW5kZXIgd2hpY2gKd2Ugc3BlYWsgYW5kIHRvIHRoZSBlYXJzIG9mIHRoZSBhdWRpZW5jZSB3aGljaApyZXF1aXJlIHNvbWV0aGluZyBtb3JlIHBvbGlzaGVkIGFuZCBlbW90aW9uYWwgdGhhbgpvcmRpbmFyeSBzcGVlY2guIEZvciB0aGlzIHJlYXNvbiBJIGNvbnNpZGVyIHRoYXQgaXQKd291bGQgYmUgYWJzdXJkIHRvIHJlc3RyaWN0IGFuIG9yYXRvciB0byB0aGUgc3R5bGUgb2YKdGhlIHByZWRlY2Vzc29ycyBvZiBDYXRvIGFuZCB0aGUgR3JhY2NoaSwgb3IgZXZlbgpvZiB0aG9zZSBvcmF0b3JzIHRoZW1zZWx2ZXMuIEFuZCBJIG5vdGUgdGhhdCBpdCB3YXMKdGhlIHByYWN0aWNlIG9mIENpY2Vybywgd2hpbGUgZGV2b3RpbmcgaGltc2VsZiBpbiB0aGUKbWFpbiB0byB0aGUgaW50ZXJlc3RzIG9mIGhpcyBjYXNlLCB0byB0YWtlIGludG8gYWNjb3VudAp0aGUgZGVsZWN0YXRpb24gb2YgaGlzIGF1ZGllbmNlIGFzIHdlbGwsIHNpbmNlLCBhcyBoZQpwb2ludGVkIG91dCwgaGlzIG93biBpbnRlcmVzdHMgd2VyZSBjb25jZXJuZWQgYXMKd2VsbCBhcyB0aG9zZSBvZiBoaXMgY2xpZW50LCBhbHRob3VnaCBvZiBjb3Vyc2UgdGhlCmxhdHRlciB3ZXJlIG9mIHBhcmFtb3VudCBpbXBvcnRhbmNlLiBGb3IgaGlzIHZlcnkKY2hhcm0gd2FzIGEgdmFsdWFibGUgYXNzZXQuPG1pbGVzdG9uZSBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz4gSSBkbyBub3Qga25vdyB3aGF0CmNhbiBiZSBhZGRlZCBieSB3YXkgb2YgaW1wcm92ZW1lbnQgdG8gdGhlIGNoYXJtcwpvZiBoaXMgc3R5bGUsIGV4Y2VwdCBwZXJoYXBzIHRoZSBpbnRyb2R1Y3Rpb24gb2YKCjxwYiBpZD0icC40NzciIC8+Cgpzb21ldGhpbmcgbW9yZSBpbiB0aGUgd2F5IG9mIGJyaWxsaWFudCByZWZsZXhpb25zIHRvCnN1aXQgdGhlIHRhc3RlIG9mIG91ciBvd24gdGltZXMuIEZvciB0aGlzIGNhbiBiZSBkb25lCndpdGhvdXQgaW5qdXJ5IHRvIHRoZSB0cmVhdG1lbnQgb2Ygb3VyIGNhc2Ugb3IgaW5wYWlyaW5nIHRoZSBhdXRob3JpdHkgb2Ygb3VyIGxhbmd1YWdlLCBwcm92aWRlZCB0aGF0CnN1Y2ggZW1iZWxsaXNobWVudHMgYXJlIG5vdCB0b28gZnJlcXVlbnQgb3IgY29udGludW91cywgYW5kIGRvIG5vdCBtdXR1YWxseSBkZXN0cm95IHRoZSBlZmZlY3RzCndoaWNoIHRoZXkgd2VyZSBkZXNpZ25lZCB0byBwcm9kdWNlLjxtaWxlc3RvbmUgbj0iNDciIHVuaXQ9InNlY3Rpb24iIC8+IEkgYW0gcmVhZHkKdG8gZ28gc28gZmFyIGFsb25nIHRoZSBwYXRoIG9mIGNvbmNlc3Npb24sIGJ1dCBsZXQgbm8KbWFuIHByZXNzIG1lIGZ1cnRoZXIuIEkgY29uY3VyIGluIHRoZSBmYXNoaW9uIG9mCnRoZSBkYXkgdG8gdGhlIGV4dGVudCBvZiBhZ3JlZWluZyB0aGF0IHRoZSB0b2dhCnNob3VsZCBub3QgYmUgbG9uZyBpbiB0aGUgbmFwLCBidXQgbm90IHRvIHRoZSBleHRlbnQKb2YgaW5zaXN0aW5nIHRoYXQgaXQgc2hvdWxkIGJlIG9mIHNpbGs6IEkgYWdyZWUgdGhhdAp0aGUgaGFpciBzaG91bGQgYmUgY3V0LCBidXQgbm90IHRoYXQgaXQgc2hvdWxkIGJlCmRyZXNzZWQgaW4gdGllcnMgYW5kIHJpbmdsZXRzLCBzaW5jZSB3ZSBtdXN0IGFsd2F5cwpyZW1lbWJlciB0aGF0IG9ybmFtZW50cywgdW5sZXNzIHRoZXkgYmUganVkZ2VkCmZyb20gdGhlIHN0YW5kcG9pbnQgb2YgdGhlIGZvcCBhbmQgdGhlIGRlYmF1Y2hlZSwKYXJlIGFsd2F5cyBlZmZlY3RpdmUgaW4gcHJvcG9ydGlvbiB0byB0aGVpciBzZWVtbGluZXNzLgo8bWlsZXN0b25lIG49IjQ4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aXRoIHJlZ2FyZCB0byB0aG9zZSBwYXNzYWdlcyB0byB3aGljaCB3ZSBnaXZlCnRoZSBuYW1lIG9mIDxoaSByZW5kPSJpdGFsaWNzIj5yZWZsZXhpb25zLDwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5Gb3IgdGhpcyBldmVyLXJlY3VycmluZyB0ZWNobmljYWwgdGVybSB0aGVyZSBpcyBubwphZGVxdWF0ZSB0cmFuc2xhdGlvbi4gSXQgbWVhbnMgYSA8cXVvdGU+cmVmbGV4aW9uIGNvYWNoZWQgaW4KYXBob3Jpc3RpYyBvciBlcGlncmFtbWF0aWMgZm9ybS48L3F1b3RlPjwvbm90ZT4gYSBmb3JtIG9mIG9ybmFtZW50IHdoaWNoCndhcyBub3QgZW1wbG95ZWQgYnkgdGhlIGFuY2llbnRzIGFuZCwgYWJvdmUgYWxsLApub3QgYnkgdGhlIEdyZWVrcywgYWx0aG91Z2ggSSBkbyBmaW5kIGl0IGluIENpY2VybywKd2hvIGNhbiBkZW55IHRoZWlyIHVzZWZ1bG5lc3MsIHByb3ZpZGVkIHRoZXkgYXJlCnJlbGV2YW50IHRvIHRoZSBjYXNlLCBhcmUgbm90IHRvbyBkaWZmdXNlIGFuZCBjb250cmlidXRlIHRvIG91ciBzdWNjZXNzPyBGb3IgdGhleSBzdHJpa2UgdGhlIG1pbmQKYW5kIG9mdGVuIHByb2R1Y2UgYSBkZWNpc2l2ZSBlZmZlY3QgYnkgb25lIHNpbmdsZQpibG93LCB3aGlsZSB0aGVpciB2ZXJ5IGJyZXZpdHkgbWFrZXMgdGhlbSBjbGluZyB0bwp0aGUgbWVtb3J5LCBhbmQgdGhlIHBsZWFzdXJlIHdoaWNoIHRoZXkgcHJvZHVjZQpoYXMgdGhlIGZvcmNlIG9mIHBlcnN1YXNpb24uPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['12.10.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz5JIGhhdmUsIHRoZXJlZm9yZSwgbm8gc3Ryb25nIG9iamVjdGlvbiBldmVuIHRvIHRoZQp2aWV3cyBleHByZXNzZWQgYnkgdGhvc2Ugd2hvIHRoaW5rIHRoYXQgc29tZSBjb25jZXNzaW9uIHNob3VsZCBiZSBtYWRlIHRvIHRoZSBjaXJjdW1zdGFuY2VzIHVuZGVyIHdoaWNoCndlIHNwZWFrIGFuZCB0byB0aGUgZWFycyBvZiB0aGUgYXVkaWVuY2Ugd2hpY2gKcmVxdWlyZSBzb21ldGhpbmcgbW9yZSBwb2xpc2hlZCBhbmQgZW1vdGlvbmFsIHRoYW4Kb3JkaW5hcnkgc3BlZWNoLiBGb3IgdGhpcyByZWFzb24gSSBjb25zaWRlciB0aGF0IGl0CndvdWxkIGJlIGFic3VyZCB0byByZXN0cmljdCBhbiBvcmF0b3IgdG8gdGhlIHN0eWxlIG9mCnRoZSBwcmVkZWNlc3NvcnMgb2YgQ2F0byBhbmQgdGhlIEdyYWNjaGksIG9yIGV2ZW4Kb2YgdGhvc2Ugb3JhdG9ycyB0aGVtc2VsdmVzLiBBbmQgSSBub3RlIHRoYXQgaXQgd2FzCnRoZSBwcmFjdGljZSBvZiBDaWNlcm8sIHdoaWxlIGRldm90aW5nIGhpbXNlbGYgaW4gdGhlCm1haW4gdG8gdGhlIGludGVyZXN0cyBvZiBoaXMgY2FzZSwgdG8gdGFrZSBpbnRvIGFjY291bnQKdGhlIGRlbGVjdGF0aW9uIG9mIGhpcyBhdWRpZW5jZSBhcyB3ZWxsLCBzaW5jZSwgYXMgaGUKcG9pbnRlZCBvdXQsIGhpcyBvd24gaW50ZXJlc3RzIHdlcmUgY29uY2VybmVkIGFzCndlbGwgYXMgdGhvc2Ugb2YgaGlzIGNsaWVudCwgYWx0aG91Z2ggb2YgY291cnNlIHRoZQpsYXR0ZXIgd2VyZSBvZiBwYXJhbW91bnQgaW1wb3J0YW5jZS4gRm9yIGhpcyB2ZXJ5CmNoYXJtIHdhcyBhIHZhbHVhYmxlIGFzc2V0LjwvdHJhbnNsYXRpb24+"
translation['12.10.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz4gSSBkbyBub3Qga25vdyB3aGF0CmNhbiBiZSBhZGRlZCBieSB3YXkgb2YgaW1wcm92ZW1lbnQgdG8gdGhlIGNoYXJtcwpvZiBoaXMgc3R5bGUsIGV4Y2VwdCBwZXJoYXBzIHRoZSBpbnRyb2R1Y3Rpb24gb2YKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQ3NyIgLz4KCnNvbWV0aGluZyBtb3JlIGluIHRoZSB3YXkgb2YgYnJpbGxpYW50IHJlZmxleGlvbnMgdG8Kc3VpdCB0aGUgdGFzdGUgb2Ygb3VyIG93biB0aW1lcy4gRm9yIHRoaXMgY2FuIGJlIGRvbmUKd2l0aG91dCBpbmp1cnkgdG8gdGhlIHRyZWF0bWVudCBvZiBvdXIgY2FzZSBvciBpbnBhaXJpbmcgdGhlIGF1dGhvcml0eSBvZiBvdXIgbGFuZ3VhZ2UsIHByb3ZpZGVkIHRoYXQKc3VjaCBlbWJlbGxpc2htZW50cyBhcmUgbm90IHRvbyBmcmVxdWVudCBvciBjb250aW51b3VzLCBhbmQgZG8gbm90IG11dHVhbGx5IGRlc3Ryb3kgdGhlIGVmZmVjdHMKd2hpY2ggdGhleSB3ZXJlIGRlc2lnbmVkIHRvIHByb2R1Y2UuPC90cmFuc2xhdGlvbj4="
translation['12.10.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz4gSSBhbSByZWFkeQp0byBnbyBzbyBmYXIgYWxvbmcgdGhlIHBhdGggb2YgY29uY2Vzc2lvbiwgYnV0IGxldCBubwptYW4gcHJlc3MgbWUgZnVydGhlci4gSSBjb25jdXIgaW4gdGhlIGZhc2hpb24gb2YKdGhlIGRheSB0byB0aGUgZXh0ZW50IG9mIGFncmVlaW5nIHRoYXQgdGhlIHRvZ2EKc2hvdWxkIG5vdCBiZSBsb25nIGluIHRoZSBuYXAsIGJ1dCBub3QgdG8gdGhlIGV4dGVudApvZiBpbnNpc3RpbmcgdGhhdCBpdCBzaG91bGQgYmUgb2Ygc2lsazogSSBhZ3JlZSB0aGF0CnRoZSBoYWlyIHNob3VsZCBiZSBjdXQsIGJ1dCBub3QgdGhhdCBpdCBzaG91bGQgYmUKZHJlc3NlZCBpbiB0aWVycyBhbmQgcmluZ2xldHMsIHNpbmNlIHdlIG11c3QgYWx3YXlzCnJlbWVtYmVyIHRoYXQgb3JuYW1lbnRzLCB1bmxlc3MgdGhleSBiZSBqdWRnZWQKZnJvbSB0aGUgc3RhbmRwb2ludCBvZiB0aGUgZm9wIGFuZCB0aGUgZGViYXVjaGVlLAphcmUgYWx3YXlzIGVmZmVjdGl2ZSBpbiBwcm9wb3J0aW9uIHRvIHRoZWlyIHNlZW1saW5lc3MuCjwvdHJhbnNsYXRpb24+"
translation['12.10.48'] = ""
translation['12.10.49'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBhcmUsIGhvd2V2ZXIsIHNvbWUgd2hvLCB3aGlsZSBhbGxvd2luZwp0aGUgYWN0dWFsIGRlbGl2ZXJ5IG9mIHN1Y2ggc3BlY2lhbGx5IGJyaWxsaWFudCBmb3JtcwpvZiBvcm5hbWVudCwgdGhpbmsgdGhhdCB0aGV5IHNob3VsZCBiZSBleGNsdWRlZApmcm9tIHRoZSB3cml0dGVuIHNwZWVjaC4gQ29uc2VxdWVudGx5IEkgbXVzdCBub3QKZGlzbWlzcyBldmVuIHRoaXMgdG9waWMgd2l0aG91dCBhIHdvcmQgb2YgZGlzY3Vzc2lvbi4gRm9yIGEgbnVtYmVyIG9mIGxlYXJuZWQgYXV0aG9yaXRpZXMKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQ3OSIgLz4KCmhhdmUgaGVsZCB0aGF0IHRoZSB3cml0dGVuIGFuZCB0aGUgc3Bva2VuIHNwZWVjaApzdGFuZCBvbiBkaWZmZXJlbnQgZm9vdGluZ3MsIGFuZCB0aGF0IGNvbnNlcXVlbnRseQpzb21lIG9mIHRoZSBtb3N0IGVsb3F1ZW50IG9mIHNwZWFrZXJzIGhhdmUgbGVmdApub3RoaW5nIGZvciBwb3N0ZXJpdHkgdG8gcmVhZCBpbiBkdXJhYmxlIGxpdGVyYXJ5IGZvcm0sCmFzLCBmb3IgZXhhbXBsZSwgaXMgdGhlIGNhc2Ugd2l0aCBQZXJpY2xlcyBhbmQgRGVjYWRlcwpBZ2FpbiwgdGhleSB1cmdlIHRoYXQgdGhlcmUgaGF2ZSBiZWVuIGF1dGhvcnMsIGxpa2UKSXNvY3JhdGVzLCB3aG8sIHdoaWxlIGFkbWlyYWJsZSB3cml0ZXJzLCB3ZXJlIG5vdAp3ZWxsLWZpdHRlZCBmb3IgYWN0dWFsIHNwZWFraW5nOzwvdHJhbnNsYXRpb24+"
translation['12.10.50'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0ic2VjdGlvbiIgLz4gYW5kLCBmdXJ0aGVyLCB0aGF0CmFjdHVhbCBwbGVhZGluZyBpcyBjaGFyYWN0ZXJpc2VkIGJ5IGEgZ3JlYXRlciBlbmVyZ3kKYW5kIGJ5IHRoZSBlbXBsb3ltZW50LCBhbG1vc3QgdmVyZ2luZyBvbiBsaWNlbnNlLApvZiBldmVyeSBhcnRpZmljZSBkZXNpZ25lZCB0byBwbGVhc2UsIHNpbmNlIHRoZSBtaW5kcwpvZiBhbiB1bmVkdWNhdGVkIGF1ZGllbmNlIHJlcXVpcmUgdG8gYmUgbW92ZWQgYW5kCmxlZC4gT24gdGhlIG90aGVyIGhhbmQsIHRoZSB3cml0dGVuIHNwZWVjaCB3aXRoCmlzIHB1Ymxpc2hlZCBhcyBhIG1vZGVsIG9mIHN0eWxlIG11c3QgYmUgcG9saXNoZWQKYW5kIGZpbGVkIGFuZCBicm91Z2h0IGludG8gY29uZm9ybWl0eSB3aXRoIHRoZQphY2NlcHRlZCBydWxlcyBhbmQgc3RhbmRhcmRzIG9mIGFydGlzdGljIGNvbnN0cnVjdGlvbiwKc2luY2UgaXQgd2lsbCBjb21lIGludG8gdGhlIGhhbmRzIG9mIGxlYXJuZWQgbWVuCmFuZCBpdHMgYXJ0IHdpbGwgYmUganVkZ2VkIGJ5IGFydGlzdHMuPC90cmFuc2xhdGlvbj4="
translation['12.10.51'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlc2Ugc3VidGxlCnRlYWNoZXJzIChmb3Igc3VjaCB0aGV5IGhhdmUgcGVyc3VhZGVkIHRoZW1zZWx2ZXMKYW5kIG90aGVycyB0aGF0IHRoZXkgYXJlKSBoYXZlIGxhaWQgaXQgZG93biB0aGF0CnRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj5wYXJhL2RlaWdtYTwvZm9yZWlnbj48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+U2VjIHYuIHhpLiAxLiBQYXJhbGxlbHMgYW5kIGVzcGVjaWFsbHkgaGlzdG9yaWNhbCBvbmVzLjwvbm90ZT4gaXMgYmVzdCBzdWl0ZWQgZm9yIGFjdHVhbCBzcGVlY2ggYW5kCnRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj5lKW5xdS9taG1hPC9mb3JlaWduPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgdi4geGl2LiAxIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPiBBIGZvcm0gb2Ygc3lsbG9naXNtLjwvbm90ZT4gZm9yIHdyaXRpbmcuIE15IG93biB2aWV3IGlzIHRoYXQKdGhlcmUgaXMgYWJzb2x1dGVseSBubyBkaWZmZXJlbmNlIGJldHdlZW4gd3JpdGluZwp3ZWxsIGFuZCBzcGVha2luZyB3ZWxsLCBhbmQgdGhhdCBhIHdyaXR0ZW4gc3BlZWNoCmlzIG1lcmVseSBhIHJlY29yZCBvZiBvbmUgdGhhdCBoYXMgYWN0dWFsbHkgYmVlbgpkZWxpdmVyZWQuIENvbnNlcXVlbnRseSBpdCBtdXN0IGluIG15IG9waW5pb24KcG9zc2VzcyBldmVyeSBraW5kIG9mIG1lcml0LCBhbmQgbm90ZSB0aGF0IEkgc2F5Cm1lcml0LCBub3QgZmF1bHQuIEZvciBJIGtub3cgdGhhdCBmYXVsdHMgZG8gc29tZXRpbWVzIG1lZXQgd2l0aCB0aGUgYXBwcm92YWwgb2YgdGhlIHVuZWR1Y2F0ZWQuCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPiBBIGZvcm0gb2Ygc3lsbG9naXNtLjwvdHJhbnNsYXRpb24+"
translation['12.10.52'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MiIgdW5pdD0ic2VjdGlvbiIgLz5XaGF0LCB0aGVuLCB3aWxsIGJlIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gd2hhdCBpcwp3cml0dGVuIGFuZCB3aGF0IGlzIHNwb2tlbj8gSWYgSSB3ZXJlIGdpdmVuIGEganVyeQpvZiB3aXNlIG1lbiwgSSBzaG91bGQgY3V0IGRvd24gYSBsYXJnZSBudW1iZXIgb2YKcGFzc2FnZXMgZnJvbSB0aGUgc3BlZWNoZXMgbm90IG9ubHkgb2YgQ2ljZXJvLCBidXQKZXZlbiBvZiBEZW1vc3RoZW5lcywgd2hvIGlzIG11Y2ggbW9yZSBjb25jaXNlLgoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDgxIiAvPgoKRm9yIHdpdGggc3VjaCBhIGp1cnkgdGhlcmUgd291bGQgYmUgbm8gbmVlZCB0bwphcHBlYWwgdG8gdGhlIGVtb3Rpb25zIG5vciB0byBjaGFybSBhbmQgc29vdGhlIHRoZQplYXJzLCBzaW5jZSBhY2NvcmRpbmcgdG8gQXJpc3RvdGxlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlJoZXQuPC9oaT4gaWlpLiAxMy48L25vdGU+IGV2ZW4gZXhvcmRpYSBhcmUKc3VwZXJmbHVvdXMsIGlmIGFkZHJlc3NlZCB0byBzdWNoIHBlcnNvbnMsIGFzIHRoZXkKd2lsbCBoYXZlIG5vIGluZmx1ZW5jZSB1cG9uIGp1ZGdlcyB3aG8gYXJlIHRydWx5Cndpc2U6IGl0IHdpbGwgYmUgc3VmZmljaWVudCB0byBzdGF0ZSB0aGUgZmFjdHMgd2l0aApwcmVjaXNpb24gYW5kIHNpZ25pZmljYW5jZSBhbmQgdG8gbWFyc2hhbCBvdXIgYXJyYXkKb2YgcHJvb2ZzLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlJoZXQuPC9oaT4gaWlpLiAxMy48L3RyYW5zbGF0aW9uPg=="
translation['12.10.53'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MyIgdW5pdD0ic2VjdGlvbiIgLz4gU2luY2UsIGhvd2V2ZXIsIG91ciBqdWRnZXMgYXJlIHRoZQpwZW9wbGUsIG9yIGRyYXduIGZyb20gdGhlIHBlb3BsZSwgYW5kIHNpbmNlIHRob3NlCndobyBhcmUgYXBwb2ludGVkIHRvIGdpdmUgc2VudGVuY2UgYXJlIGZyZXF1ZW50bHkKaWxsLWVkdWNhdGVkIGFuZCBzb21ldGltZXMgbWVyZSBydXN0aWNzLCBpdCBiZWNvbWVzCm5lY2Vzc2FyeSB0byBlbXBsb3kgZXZlcnkgbWV0aG9kIHRoYXQgd2UgdGhpbmsKbGlrZWx5IHRvIGFzc2lzdCBvdXIgY2FzZSwgYW5kIHRoZXNlIGFydGlmaWNlcyBtdXN0Cm5vdCBtZXJlbHkgYmUgcHJvZHVjZWQgaW4gc3BlZWNoLCBidXQgZXhoaWJpdGVkIGluCnRoZSB3cml0dGVuIHZlcnNpb24gYXMgd2VsbCwgYXQgbGVhc3QgaWYgaW4gd3JpdGluZyBpdApvdXIgZGVzaWduIGlzIHRvIHNob3cgaG93IGl0IHNob3VsZCBiZSBzcG9rZW4uPC90cmFuc2xhdGlvbj4="
translation['12.10.54'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NCIgdW5pdD0ic2VjdGlvbiIgLz4gSWYKRGVtb3N0aGVuZXMgb3IgQ2ljZXJvIGhhZCBzcG9rZW4gdGhlIHdvcmRzIGFzCnRoZXkgd3JvdGUgdGhlbSwgd291bGQgZWl0aGVyIGhhdmUgc3Bva2VuIGlsbApBbmQgaXMgb3VyIGFjcXVhaW50YW5jZSB3aXRoIGVpdGhlciBvZiB0aG9zZSB0d28KZ3JlYXQgb3JhdG9ycyBiYXNlZCBvbiBhbnl0aGluZyBzYXZlIHRoZWlyIHdyaXRpbmdzPwpEaWQgdGhleSBzcGVhayBiZXR0ZXIsIHRoZW4sIG9yIHdvcnNlIHRoYW4gdGhleQp3cm90ZT8gSWYgdGhleSBzcG9rZSB3b3JzZSwgYWxsIHRoYXQgY2FuIGJlIHNhaWQKaXMgdGhhdCB0aGV5IHNob3VsZCBoYXZlIHNwb2tlbiBhcyB0aGV5IHdyb3RlLAp3aGlsZSwgaWYgdGhleSBzcG9rZSBiZXR0ZXIsIHRoZXkgc2hvdWxkIGhhdmUKd3JpdHRlbiBhcyB0aGV5IHNwb2tlLjwvdHJhbnNsYXRpb24+"
translation['12.10.55'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NSIgdW5pdD0ic2VjdGlvbiIgLz4gV2VsbCwgeW91IGFzaywgaXMgYW4gb3JhdG9yCnRoZW4gYWx3YXlzIHRvIHNwZWFrIGFzIGhlIHdyaXRlcz8gSWYgcG9zc2libGUsCmFsd2F5cy4gSWYsIGhvd2V2ZXIsIHRoZSB0aW1lIGFsbG93ZWQgYnkgdGhlCmp1ZGdlIGlzIHRvbyBzaG9ydCBmb3IgdGhpcyB0byBiZSBwb3NzaWJsZSwgaGUgd2lsbApoYXZlIHRvIGN1dCBvdXQgbXVjaCB0aGF0IGhlIHNob3VsZCBoYXZlIHNhaWQsCmJ1dCB0aGUgcHVibGlzaGVkIHNwZWVjaCB3aWxsIGNvbnRhaW4gdGhlIG9taXR0ZWQKcGFzc2FnZXMuIE9uIHRoZSBvdGhlciBoYW5kLCBzdWNoIHBhc3NhZ2VzIGFzCndlcmUgdXR0ZXJlZCBtZXJlbHkgdG8gc3VpdCB0aGUgY2hhcmFjdGVyIG9mIHRoZQpqdWRnZXMgd2lsbCBub3QgYmUgcHVibGlzaGVkIGZvciB0aGUgYmVuZWZpdCBvZgpwb3N0ZXJpdHksIGZvciBmZWFyIHRoYXQgdGhleSBzaG91bGQgc2VlbSB0byBpbmRpY2F0ZQoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDgzIiAvPgoKdGhlIGF1dGhvcidzIGRlbGliZXJhdGUganVkZ2VtZW50IGluc3RlYWQgb2YgYmVpbmcKYSBtZXJlIGNvbmNlc3Npb24gdG8gdGhlIG5lZWRzIG9mIHRoZSBtb21lbnQuCjwvdHJhbnNsYXRpb24+"
translation['12.10.56'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgaXMgbW9zdCBpbXBvcnRhbnQgdGhhdCB3ZSBzaG91bGQga25vdyBob3cKdGhlIGp1ZGdlIGlzIGRpc3Bvc2VkIHRvIGxpc3RlbiwgYW5kIGhpcyBmYWNlIHdpbGwKb2Z0ZW4gKGFzIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5Ob3QgaW4gYW55IGV4dGFudCB3b3JrLjwvbm90ZT4gcmVtaW5kcyB1cykgc2VydmUgYXMgYSBndWlkZSB0bwp0aGUgc3BlYWtlci4gQ29uc2VxdWVudGx5IHdlIG11c3QgcHJlc3MgdGhlIHBvaW50cwp0aGF0IHdlIHNlZSBjb21tZW5kIHRoZW1zZWx2ZXMgdG8gaGltLCBhbmQgZHJhdwpiYWNrIGZyb20gdGhvc2Ugd2hpY2ggYXJlIGlsbC1yZWNlaXZlZCwgd2hpbGUgb3VyCmFjdHVhbCBsYW5ndWFnZSBtdXN0IGJlIHNvIG1vZGlmaWVkIHRoYXQgaGUgd2lsbApmaW5kIG91ciBhcmd1bWVudHMgYXMgaW50ZWxsaWdpYmxlIGFzIHBvc3NpYmxlLiBUaGF0CnRoaXMgc2hvdWxkIGJlIG5lY2Vzc2FyeSBpcyBzY2FyY2VseSBzdXJwcmlzaW5nLCB3aGVuCndlIGNvbnNpZGVyIHRoZSBhbHRlcmF0aW9ucyB0aGF0IGFyZSBmcmVxdWVudGx5Cm5lY2Vzc2FyeSB0byBzdWl0IHRoZSBjaGFyYWN0ZXJzIG9mIHRoZSBkaWZmZXJlbnQKd2l0bmVzc2VzLjwvdHJhbnNsYXRpb24+"
translation['12.10.57'] = ""
translation['12.10.58'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBpcyBhbm90aGVyIHRocmVlZm9sZCBkaXZpc2lvbiwgd2hlcmVieSwKaXQgaXMgaGVsZCwgd2UgbWF5IGRpZmZlcmVudGlhdGUgdGhyZWUgc3R5bGVzIG9mCnNwZWFraW5nLCBhbGwgb2YgdGhlbSBjb3JyZWN0LiBUaGUgZmlyc3QgaXMgdGVybWVkCnRoZSBwbGFpbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zdWJ0aWxpczwvaGk+ICg8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5saXQuPC9oaT4gPSBmaW5lbHkgd292ZW4pIGFwcGxpZWQgdG8gc3R5bGUgaGFzIHRocmVlCm1lYW5pbmdzOiAoYSkgcmVmaW5lZCwgKGIpIHByZWNpc2UsIChjKSBwbGFpbi4gU2VlIFNhbmR5cyBvbgpDaWMuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPk9yLjwvaGk+IHZpLiAyMC48L25vdGU+IChvciA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zdWJ0aWxpczwvaGk+ICg8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5saXQuPC9oaT4gPSBmaW5lbHkgd292ZW4pIGFwcGxpZWQgdG8gc3R5bGUgaGFzIHRocmVlCm1lYW5pbmdzOiAoYSkgcmVmaW5lZCwgKGIpIHByZWNpc2UsIChjKSBwbGFpbi4gU2VlIFNhbmR5cyBvbgpDaWMuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPk9yLjwvaGk+IHZpLiAyMC48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj5pKXN4bm8vbjwvZm9yZWlnbj4pLCB0aGUgc2Vjb25kIGdyYW5kIGFuZApmb3JjaWJsZSAob3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+YShkcm8vbjwvZm9yZWlnbj4pLCBhbmQgdGhlIHRoaXJkIGVpdGhlciBpbnRlcm1lZGlhdGUgb3IgZmxvcmlkLCB0aGUgbGF0dGVyIGJlaW5nIGEgdHJhbnNsYXRpb24Kb2YgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+YSlucWhyby9uLjwvZm9yZWlnbj48L3RyYW5zbGF0aW9uPg=="
translation['12.10.59'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OSIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIG5hdHVyZSBvZiB0aGVzZSB0aHJlZSBzdHlsZXMgaXMsCmJyb2FkbHkgc3BlYWtpbmcsIGFzIGZvbGxvd3MuIFRoZSBmaXJzdCB3b3VsZCBzZWVtCmJlc3QgYWRhcHRlZCBmb3IgaW5zdHJ1Y3RpbmcsIHRoZSBzZWNvbmQgZm9yIG1vdmluZywKYW5kIHRoZSB0aGlyZCAoYnkgd2hpY2hldmVyIG5hbWUgd2UgY2FsbCBpdCkgZm9yCmNoYXJtaW5nIG9yLCBhcyBvdGhlcnMgd291bGQgaGF2ZSBpdCwgY29uY2lsaWF0aW5nCnRoZSBhdWRpZW5jZTsgZm9yIGluc3RydWN0aW9uIHRoZSBxdWFsaXR5IG1vc3QKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQ4NSIgLz4KCm5lZWRlZCBpcyBhY3VtZW4sIGZvciBjb25jaWxpYXRpb24gZ2VudGxlbmVzcywgYW5kCmZvciBzdGlycmluZyB0aGUgZW1vdGlvbnMgZm9yY2UuIENvbnNlcXVlbnRseSBpdCBpcwptYWlubHkgaW4gdGhlIHBsYWluIHN0eWxlIHRoYXQgd2Ugc2hhbGwgc3RhdGUgb3VyCmZhY3RzIGFuZCBhZHZhbmNlIG91ciBwcm9vZnMsIHRob3VnaCBpdCBzaG91bGQgYmUKYm9ybmUgaW4gbWluZCB0aGF0IHRoaXMgc3R5bGUgd2lsbCBvZnRlbiBiZSBzdWZmaWNpZW50bHkKZnVsbCBpbiBpdHNlbGYgd2l0aG91dCBhbnkgYXNzaXN0YW5jZSB3aGF0ZXZlciBmcm9tCnRoZSBvdGhlciB0d28uPC90cmFuc2xhdGlvbj4="
translation['12.10.60'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MCIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlIGludGVybWVkaWF0ZSBzdHlsZSB3aWxsIGhhdmUKbW9yZSBmcmVxdWVudCByZWNvdXJzZSB0byBtZXRhcGhvciBhbmQgd2lsbCBtYWtlCmEgbW9yZSBhdHRyYWN0aXZlIHVzZSBvZiBmaWd1cmVzLCB3aGlsZSBpdCB3aWxsIGludHJvZHVjZSBhbGx1cmluZyBkaWdyZXNzaW9ucywgd2lsbCBiZSBuZWF0IGluIHJoeXRobQphbmQgcGxlYXNpbmcgaW4gaXRzIHJlZmxleGlvbnM6IGl0cyBmbG93LCBob3dldmVyLCB3aWxsCmJlIGdlbnRsZSwgbGlrZSB0aGF0IG9mIGEgcml2ZXIgd2hvc2Ugd2F0ZXJzIGFyZSBjbGVhciwKYnV0IG92ZXJzaGFkb3dlZCBieSB0aGUgZ3JlZW4gYmFua3Mgb24gZWl0aGVyIHNpZGUuCjwvdHJhbnNsYXRpb24+"
translation['12.10.61'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaGUgd2hvc2UgZWxvcXVlbmNlIGlzIGxpa2UgdG8gc29tZSBncmVhdCB0b3JyZW50CnRoYXQgcm9sbHMgZG93biByb2NrcyBhbmQgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+ZGlzZGFpbnMgYSBicmlkZ2U8L3F1b3RlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5WZXJnLiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZW4uPC9oaT4gdmlpaS4gNzI4Ljwvbm90ZT4gYW5kCmNhcnZlcyBvdXQgaXRzIG93biBiYW5rcyBmb3IgaXRzZWxmLCB3aWxsIHN3ZWVwIHRoZQpqdWRnZSBmcm9tIGhpcyBmZWV0LCBzdHJ1Z2dsZSBhcyBoZSBtYXksIGFuZCBmb3JjZQpoaW0gdG8gZ28gd2hpdGhlciBoZSBiZWFycyBoaW0uIFRoaXMgaXMgdGhlIG9yYXRvcgp0aGF0IHdpbGwgY2FsbCB0aGUgZGVhZCB0byBsaWZlIChhcywgZm9yIGV4YW1wbGUsIENpY2VybwpjYWxscyB1cG9uIEFwcGl1cyBDYWVjdXM8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZW4uPC9oaT4gdmlpaS4gNzI4Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj5TZWUgSUlJLiB2aWlpLiA1NC4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2ljZXJvIGluIHRoZSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gQ2FjbGlvPC9oaT4gbWFrZXMgYm90aApBcHBpdXMgQ2FlY3VzIGFuZCBoZXIgYnJvdGhlciBDbG9kaXVzIGFkZHJlc3MgQ2xvZGlhIHRoZQpmb3JtZXIgcmVidWtpbmcgaGVyIGZvciBoZXIgaW1tb3JhbGl0eSwgdGhlIGxhdHRlciBleGhvcnRpbmcKaGVyIHRoZXJldG8uPC9xdW90ZT48L25vdGU+KTsgaXQgaXMgaW4gaGlzIHBhZ2VzCnRoYXQgaGlzIG5hdGl2ZSBsYW5kIGl0c2VsZiB3aWxsIGNyeSBhbG91ZCBhbmQgYXQKdGltZXMgYWRkcmVzcyB0aGUgb3JhdG9yIGhpbXNlbGYsIGFzIGl0IGFkZHJlc3NlcwpDaWNlcm8gaW4gdGhlIHNwZWVjaCBkZWxpdmVyZWQgYWdhaW5zdCBDYXRpbGluZSBpbgp0aGUgc2VuYXRlLjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPkNpY2VybyBpbiB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIENhY2xpbzwvaGk+IG1ha2VzIGJvdGgKQXBwaXVzIENhZWN1cyBhbmQgaGVyIGJyb3RoZXIgQ2xvZGl1cyBhZGRyZXNzIENsb2RpYSB0aGUKZm9ybWVyIHJlYnVraW5nIGhlciBmb3IgaGVyIGltbW9yYWxpdHksIHRoZSBsYXR0ZXIgZXhob3J0aW5nCmhlciB0aGVyZXRvLjwvcXVvdGU+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIENhY2xpbzwvaGk+IG1ha2VzIGJvdGgKQXBwaXVzIENhZWN1cyBhbmQgaGVyIGJyb3RoZXIgQ2xvZGl1cyBhZGRyZXNzIENsb2RpYSB0aGUKZm9ybWVyIHJlYnVraW5nIGhlciBmb3IgaGVyIGltbW9yYWxpdHksIHRoZSBsYXR0ZXIgZXhob3J0aW5nCmhlciB0aGVyZXRvLjwvdHJhbnNsYXRpb24+"
translation['12.10.62'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MiIgdW5pdD0ic2VjdGlvbiIgLz4gU3VjaCBhbiBvcmF0b3Igd2lsbCBhbHNvIGV4YWx0IGhpcyBzdHlsZQpieSBhbXBsaWZpY2F0aW9uIGFuZCByaXNlIGV2ZW4gdG8gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+aHlwZXJib2xlLDwvaGk+IGFzIHdoZW4KQ2ljZXJvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlBoaWwuPC9oaT4gSUkuIHh4dmlpLiA2Ny4gVGhlIHBhc3NhZ2UgY29udGludWVzOiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5jb3VsZApzY2FyY2UsIG1ldGhpbmtzLCBoYXZlIHN3YWxsb3dlZCB3aXRoIHN1Y2ggc3BlZWQgc28gbWFueQp0aGluZ3MsIHNjYXR0ZXJlZCBpbiBzbyBtYW55IHBsYWNlcy48L3F1b3RlPjwvbm90ZT4gY3JpZXMsIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlBoaWwuPC9oaT4gSUkuIHh4dmlpLiA2Ny4gVGhlIHBhc3NhZ2UgY29udGludWVzOiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5jb3VsZApzY2FyY2UsIG1ldGhpbmtzLCBoYXZlIHN3YWxsb3dlZCB3aXRoIHN1Y2ggc3BlZWQgc28gbWFueQp0aGluZ3MsIHNjYXR0ZXJlZCBpbiBzbyBtYW55IHBsYWNlcy48L3F1b3RlPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgQ2hhcnliZGlzIHdhcyBldmVyIHNvIHZvcmFjaW91cyE8L3F1b3RlPiBvciA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5CeSB0aGUgZ29kIG9mIHRydXRoLCBldmVuIE9jZWFuJ3MKc2VsZiw8L3F1b3RlPiBldGMuIChJIGNob29zZSB0aGVzZSBmaW5lIHBhc3NhZ2VzIGFzIGJlaW5nCmZhbWlsaWFyIHRvIHRoZSBzdHVkZW50KS4gSXQgaXMgc3VjaCBhbiBvbmUgdGhhdAp3aWxsIGJyaW5nIGRvd24gdGhlIEdvZHMgdG8gZm9ybSBwYXJ0IG9mIGhpcwphdWRpZW5jZSBvciBldmVuIHRvIHNwZWFrIHdpdGggaGltLCBhcyBpbiB0aGUKZm9sbG93aW5nLCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Gb3Igb24geW91IEkgY2FsbCwgeWUgaGlsbHMgYW5kIGdyb3ZlcwpvZiBBbGJhLCBvbiB5b3UsIEkgc2F5LCB5ZSBmYWxsZW4gYWx0YXJzIG9mIHRoZQpBbGJhbnMsIGFsdGFycyB0aGF0IHdlcmUgb25jZSB0aGUgcGVlcnMgYW5kIGVxdWFscwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDg3IiAvPgoKb2YgdGhlIGhvbHkgcGxhY2VzIG9mIFJvbWUuPC9xdW90ZT48cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40ODciIC8+CgpvZiB0aGUgaG9seSBwbGFjZXMgb2YgUm9tZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvLCBNaWwuPC9oaT4geHh4aS4gODUuPC9ub3RlPiBUaGlzIGlzIGhlIHRoYXQgd2lsbAppbnNwaXJlIGFuZ2VyIG9yIHBpdHksIGFuZCB3aGlsZSBoZSBzcGVha3MgdGhlIGp1ZGdlCndpbGwgY2FsbCB1cG9uIHRoZSBnb2RzIGFuZCB3ZWVwLCBmb2xsb3dpbmcgaGltCndoZXJldmVyIGhlIHN3ZWVwcyBoaW0gZnJvbSBvbmUgZW1vdGlvbiB0bwphbm90aGVyLCBhbmQgbm8gbG9uZ2VyIGFza2luZyBtZXJlbHkgZm9yIGluc3RydWN0aW9uLgo8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8sIE1pbC48L2hpPiB4eHhpLiA4NS48L3RyYW5zbGF0aW9uPg=="
translation['12.10.63'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVyZWZvcmUgaWYgb25lIG9mIHRoZXNlIHRocmVlIHN0eWxlcyBoYXMgdG8gYmUKc2VsZWN0ZWQgdG8gdGhlIGV4Y2x1c2lvbiBvZiB0aGUgb3RoZXJzLCB3aG8gd2lsbApoZXNpdGF0ZSB0byBwcmVmZXIgdGhpcyBzdHlsZSB0byBhbGwgb3RoZXJzLCBzaW5jZSBpdAppcyBieSBmYXIgdGhlIHN0cm9uZ2VzdCBhbmQgdGhlIGJlc3QgYWRhcHRlZCB0byB0aGUKbW9zdCBpbXBvcnRhbnQgY2FzZXM/PC90cmFuc2xhdGlvbj4="
translation['12.10.64'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NCIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIEhvbWVyIGhpbXNlbGYgYXNzaWducwp0byBNZW5lbGF1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5NaWwuPC9oaT4gaWlpLiAyMTQuIFRoZSB3b3JkcyB3aGljaCBRdWludGlsaWFuIHRyYW5zbGF0ZXMgYnkKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+bm9uIGRlZXJyYXJlIHZlcmJoaXM8L2hpPiBhcmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+b3UpZCcgYSlmYW1hcnRvZXBoL3MsPC9mb3JlaWduPiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5ubyBzdHVtYmxlciBpbgpzcGVlY2gsPC9xdW90ZT4gcmF0aGVyIHRoYW4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Y29ycmVjdCBpbiBzcGVlY2guPC9xdW90ZT48L25vdGU+IGFuIGVsb3F1ZW5jZSwgdGVyc2UgYW5kIHBsZWFzaW5nLCBleGFjdAooZm9yIHRoYXQgaXMgd2hhdCBpcyBtZWFudCBieSA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5NaWwuPC9oaT4gaWlpLiAyMTQuIFRoZSB3b3JkcyB3aGljaCBRdWludGlsaWFuIHRyYW5zbGF0ZXMgYnkKPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+bm9uIGRlZXJyYXJlIHZlcmJoaXM8L2hpPiBhcmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+b3UpZCcgYSlmYW1hcnRvZXBoL3MsPC9mb3JlaWduPiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5ubyBzdHVtYmxlciBpbgpzcGVlY2gsPC9xdW90ZT4gcmF0aGVyIHRoYW4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Y29ycmVjdCBpbiBzcGVlY2guPC9xdW90ZT48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5tYWtpbmcgbm8gZXJyb3JzIGluCndvcmRzPC9xdW90ZT4pIGFuZCBkZXZvaWQgb2YgYWxsIHJlZHVuZGFuY2UsIHdoaWNoIHF1YWxpdGllcwphcmUgdmlydHVlcyBvZiB0aGUgZmlyc3QgdHlwZTogYW5kIGhlIHNheXMgdGhhdCBmcm9tCnRoZSBsaXBzIG9mIE5lc3Rvcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5JbC48L2hpPiBpLiAyNDkuPC9ub3RlPiBmbG93ZWQgc3BlZWNoIHN3ZWV0ZXIgdGhhbiBob25leSwKdGhhbiB3aGljaCBhc3N1cmVkbHkgd2UgY2FuIGNvbmNlaXZlIG5vIGdyZWF0ZXIKZGVsaWdodDogYnV0IHdoZW4gaGUgc2Vla3MgdG8gZXhwcmVzcyB0aGUgc3VwcmVtZQpnaWZ0IG9mIGVsb3F1ZW5jZSBwb3NzZXNzZWQgYnkgVWx5c3NlczxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPklsLjwvaGk+IGkuIDI0OS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SWwuPC9oaT4gaWlpLiAyMjEuPC9ub3RlPiBoZSBnaXZlcyBhCm1pZ2h0eSB2b2ljZSBhbmQgYSB2ZWhlbWVuY2Ugb2Ygb3JhdG9yeSBlcXVhbCB0bwp0aGUgc25vd3Mgb2Ygd2ludGVyIGluIHRoZSBhYnVuZGFuY2UgYW5kIHRoZSB2aWdvdXIKb2YgaXRzIHdvcmRzLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPklsLjwvaGk+IGlpaS4gMjIxLjwvdHJhbnNsYXRpb24+"
translation['12.10.65'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NSIgdW5pdD0ic2VjdGlvbiIgLz4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2l0aCBoaW0gdGhlbiw8L3F1b3RlPiBoZSBzYXlzLCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5ubyBtb3J0YWwKd2lsbCBjb250ZW5kLCBhbmQgbWVuIHNoYWxsIGxvb2sgdXBvbiBoaW0gYXMgb24gYQpnb2QuPC9xdW90ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+QSBibGVuZCBvZiA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5JbC48L2hpPiBpaWkuIDIyMyBhbmQgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T2QuPC9oaT4gdmlpaS4gMTczLjwvbm90ZT4gSXQgaXMgdGhpcyBmb3JjZSBhbmQgaW1wZXR1b3NpdHkgdGhhdCBFdXBvbGlzCmFkbWlyZXMgaW4gUGVyaWNsZXMsIHRoaXMgdGhhdCBBcmlzdG9waGFuZXM8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5JbC48L2hpPiBpaWkuIDIyMyBhbmQgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T2QuPC9oaT4gdmlpaS4gMTczLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIj48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZWguPC9oaT4gNTMwLiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGluIGhpcyB3cmF0aCBQZXJpY2xlcyB0aGUgT2x5bXBpYW4KbGlnaHRlbmVkIGFuZCB0aHVuZGVyZWQgYW5kIHRocmV3IGFsbCBHcmVlY2UgaW50byBjb25mdXNpb24uPC9xdW90ZT48L25vdGU+IGNvbXBhcmVzCnRvIHRoZSB0aHVuZGVyYm9sdCwgdGhpcyB0aGF0IGlzIHRoZSBwb3dlciBvZiB0cnVlCmVsb3F1ZW5jZS48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5BZWguPC9oaT4gNTMwLiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGluIGhpcyB3cmF0aCBQZXJpY2xlcyB0aGUgT2x5bXBpYW4KbGlnaHRlbmVkIGFuZCB0aHVuZGVyZWQgYW5kIHRocmV3IGFsbCBHcmVlY2UgaW50byBjb25mdXNpb24uPC9xdW90ZT48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgZWxvcXVlbmNlIGNhbm5vdCBiZSBjb25maW5lZCBldmVuIHRvIHRoZXNlCnRocmVlIGZvcm1zIG9mIHN0eWxlLiBGb3IganVzdCBhcyB0aGUgdGhpcmQgc3R5bGUgaXMKaW50ZXJtZWRpYXRlIGJldHdlZW4gdGhlIGdyYW5kIGFuZCB0aGUgcGxhaW4gc3R5bGUsCnNvIGVhY2ggb2YgdGhlc2UgdGhyZWUgYXJlIHNlcGFyYXRlZCBieSBpbnRlcnNwYWNlcwoKPHBiIGlkPSJwLjQ4OSIgLz4KCndoaWNoIGFyZSBvY2N1cGllZCBieSBpbnRlcm1lZGlhdGUgc3R5bGVzIGNvbXBvdW5kZWQgb2YgdGhlIHR3byB3aGljaCBoZSBvbiBlaXRoZXIgc2lkZS48bWlsZXN0b25lIG49IjY3IiB1bml0PSJzZWN0aW9uIiAvPiBGb3IKdGhlcmUgYXJlIHN0eWxlcyBmdWxsZXIgb3IgcGxhaW5lciB0aGFuIHRoZSBwbGFpbiwgYW5kCmdlbnRsZXIgb3IgbW9yZSB2ZWhlbWVudCB0aGFuIHRoZSB2ZWhlbWVudCwgd2hpbGUKdGhlIGdlbnRsZXIgc3R5bGUgaXRzZWxmIG1heSBlaXRoZXIgcmlzZSB0byBncmVhdGVyCmZvcmNlIG9yIHNpbmsgdG8gbWlsZGVyIHRvbmVzLiBUaHVzIHdlIG1heSBkaXNjb3ZlcgphbG1vc3QgY291bnRsZXNzIHNwZWNpZXMgb2Ygc3R5bGVzLCBlYWNoIGRpZmZlcmluZyBmcm9tCnRoZSBvdGhlciBieSBzb21lIGZpbmUgc2hhZGUgb2YgZGlmZmVyZW5jZS4gV2UgbWF5CmRyYXcgYSBwYXJhbGxlbCBmcm9tIHRoZSB3aW5kcy4gSXQgaXMgZ2VuZXJhbGx5IGFjY2VwdGVkIHRoYXQgdGhlcmUgYXJlIGZvdXIgYmxvd2luZyBmcm9tIHRoZSBmb3VyCnF1YXJ0ZXJzIG9mIHRoZSBnbG9iZSwgYnV0IHdlIGZpbmQgdGhlcmUgYXJlIGFsc28KYSBsYXJnZSBudW1iZXIgb2Ygd2luZHMgd2hpY2ggaGUgYmV0d2VlbiB0aGVzZSwKY2FsbGVkIGJ5IGEgdmFyaWV0eSBvZiBuYW1lcywgYW5kIGluIGNlcnRhaW4gY2FzZXMKY29uZmluZWQgdG8gY2VydGFpbiBkaXN0cmljdHMgYW5kIHJpdmVyIHZhbGxleXMuPG1pbGVzdG9uZSBuPSI2OCIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlCnNhbWUgdGhpbmcgbWF5IGJlIG5vdGVkIGluIG11c2ljLiBGb3IgYWZ0ZXIgYXNzaWduaW5nIGZpdmUgbm90ZXMgdG8gdGhlIGx5cmUsIG11c2ljaWFucyBmaWxsIHVwIHRoZQppbnRlcnZhbHMgYmV0d2VlbiB0aGUgc3RyaW5ncyBieSBhIHZhcmlldHkgb2Ygbm90ZXMsCmFuZCBiZXR3ZWVuIHRoZXNlIGFnYWluIHRoZXkgaW50ZXJwb3NlIHlldCBvdGhlcnMsCnNvIHRoYXQgdGhlIG9yaWdpbmFsIGRpdmlzaW9ucyBhZG1pdCBvZiBhIG51bWJlciBvZgpncmFkYXRpb25zLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['12.10.66'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgZWxvcXVlbmNlIGNhbm5vdCBiZSBjb25maW5lZCBldmVuIHRvIHRoZXNlCnRocmVlIGZvcm1zIG9mIHN0eWxlLiBGb3IganVzdCBhcyB0aGUgdGhpcmQgc3R5bGUgaXMKaW50ZXJtZWRpYXRlIGJldHdlZW4gdGhlIGdyYW5kIGFuZCB0aGUgcGxhaW4gc3R5bGUsCnNvIGVhY2ggb2YgdGhlc2UgdGhyZWUgYXJlIHNlcGFyYXRlZCBieSBpbnRlcnNwYWNlcwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDg5IiAvPgoKd2hpY2ggYXJlIG9jY3VwaWVkIGJ5IGludGVybWVkaWF0ZSBzdHlsZXMgY29tcG91bmRlZCBvZiB0aGUgdHdvIHdoaWNoIGhlIG9uIGVpdGhlciBzaWRlLjwvdHJhbnNsYXRpb24+"
translation['12.10.67'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCnRoZXJlIGFyZSBzdHlsZXMgZnVsbGVyIG9yIHBsYWluZXIgdGhhbiB0aGUgcGxhaW4sIGFuZApnZW50bGVyIG9yIG1vcmUgdmVoZW1lbnQgdGhhbiB0aGUgdmVoZW1lbnQsIHdoaWxlCnRoZSBnZW50bGVyIHN0eWxlIGl0c2VsZiBtYXkgZWl0aGVyIHJpc2UgdG8gZ3JlYXRlcgpmb3JjZSBvciBzaW5rIHRvIG1pbGRlciB0b25lcy4gVGh1cyB3ZSBtYXkgZGlzY292ZXIKYWxtb3N0IGNvdW50bGVzcyBzcGVjaWVzIG9mIHN0eWxlcywgZWFjaCBkaWZmZXJpbmcgZnJvbQp0aGUgb3RoZXIgYnkgc29tZSBmaW5lIHNoYWRlIG9mIGRpZmZlcmVuY2UuIFdlIG1heQpkcmF3IGEgcGFyYWxsZWwgZnJvbSB0aGUgd2luZHMuIEl0IGlzIGdlbmVyYWxseSBhY2NlcHRlZCB0aGF0IHRoZXJlIGFyZSBmb3VyIGJsb3dpbmcgZnJvbSB0aGUgZm91cgpxdWFydGVycyBvZiB0aGUgZ2xvYmUsIGJ1dCB3ZSBmaW5kIHRoZXJlIGFyZSBhbHNvCmEgbGFyZ2UgbnVtYmVyIG9mIHdpbmRzIHdoaWNoIGhlIGJldHdlZW4gdGhlc2UsCmNhbGxlZCBieSBhIHZhcmlldHkgb2YgbmFtZXMsIGFuZCBpbiBjZXJ0YWluIGNhc2VzCmNvbmZpbmVkIHRvIGNlcnRhaW4gZGlzdHJpY3RzIGFuZCByaXZlciB2YWxsZXlzLjwvdHJhbnNsYXRpb24+"
translation['12.10.68'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OCIgdW5pdD0ic2VjdGlvbiIgLz4gVGhlCnNhbWUgdGhpbmcgbWF5IGJlIG5vdGVkIGluIG11c2ljLiBGb3IgYWZ0ZXIgYXNzaWduaW5nIGZpdmUgbm90ZXMgdG8gdGhlIGx5cmUsIG11c2ljaWFucyBmaWxsIHVwIHRoZQppbnRlcnZhbHMgYmV0d2VlbiB0aGUgc3RyaW5ncyBieSBhIHZhcmlldHkgb2Ygbm90ZXMsCmFuZCBiZXR3ZWVuIHRoZXNlIGFnYWluIHRoZXkgaW50ZXJwb3NlIHlldCBvdGhlcnMsCnNvIHRoYXQgdGhlIG9yaWdpbmFsIGRpdmlzaW9ucyBhZG1pdCBvZiBhIG51bWJlciBvZgpncmFkYXRpb25zLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjY5IiB1bml0PSJzZWN0aW9uIiAvPkVsb3F1ZW5jZSBoYXMsIHRoZXJlZm9yZSwgYSBxdWFudGl0eSBvZiBkaWZmZXJlbnQKYXNwZWN0cywgYnV0IGl0IGlzIHNoZWVyIGZvbGx5IHRvIGlucXVpcmUgd2hpY2ggb2YgdGhlc2UKdGhlIG9yYXRvciBzaG91bGQgdGFrZSBhcyBoaXMgbW9kZWwsIHNpbmNlIGV2ZXJ5CnNwZWNpZXMgdGhhdCBpcyBpbiBpdHNlbGYgY29ycmVjdCBoYXMgaXRzIHVzZSwgYW5kIHdoYXQKaXMgY29tbW9ubHkgY2FsbGVkIDxoaSByZW5kPSJpdGFsaWNzIj5zdHlsZSBvZiBzcGVha2luZzwvaGk+IGRvZXMgbm90IGRlcGVuZApvbiB0aGUgb3JhdG9yLiBGb3IgaGUgd2lsbCB1c2UgYWxsIHN0eWxlcywgYXMgY2lyY3Vtc3RhbmNlcyBtYXkgZGVtYW5kLCBhbmQgdGhlIGNob2ljZSB3aWxsIGJlCmRldGVybWluZWQgbm90IG9ubHkgYnkgdGhlIGNhc2UgYXMgYSB3aG9sZSwgYnV0IGJ5CnRoZSBkZW1hbmRzIG9mIHRoZSBkaWZmZXJlbnQgcG9ydGlvbnMgb2YgdGhlIGNhc2UuCjxtaWxlc3RvbmUgbj0iNzAiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIGp1c3QgYXMgaGUgd2lsbCBub3Qgc3BlYWsgaW4gdGhlIHNhbWUgd2F5IHdoZW4KaGUgaXMgZGVmZW5kaW5nIGEgY2xpZW50IG9uIGEgY2FwaXRhbCBjaGFyZ2UgYW5kCndoZW4gaGUgaXMgc3BlYWtpbmcgaW4gYSBsYXdzdWl0IGNvbmNlcm5lZCB3aXRoIGFuCmluaGVyaXRhbmNlLCBvciBkaXNjdXNzaW5nIGludGVyZGljdHMgYW5kIHN1aXRzIHRha2luZwp0aGUgZm9ybSBvZiBhIHdhZ2VyLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPmNwLjwvaGk+IEkuIHguIDUgYW5kIElWLiBpaS4gNjEuIDxoaSByZW5kPSJpdGFsaWNzIj5TcG9uc2lvPC9oaT4gKD0gd2FnZXIpIHdhcyBhIGZvcm0Kb2YgbGF3c3VpdCBpbiB3aGljaCB0aGUgbGl0aWdhbnQgcHJvbWlzZWQgdG8gcGF5IGEgY2VydGFpbgpzdW0gb2YgbW9uZXkgaWYgaGUgbG9zdCBoaXMgY2FzZS4gVGhlIDxoaSByZW5kPSJpdGFsaWNzIj5pbnRyZGlldDwvaGk+IHdhcyBhbiBvcmRlcgppc3N1ZWQgYnkgdGhlIHByYWV0b3IgY29tbWFuZGluZyBvciBwcm9oaWJpdGluZyBjZXJ0YWluCmFjdGlvbi48L25vdGU+IG9yIGNsYWltcyBpbiBjb25uZXhpb24gd2l0aAoKPHBiIGlkPSJwLjQ5MSIgLz4KCmxvYW5zLCBzbyB0b28gaGUgd2lsbCBwcmVzZXJ2ZSBhIGR1ZSBkaXN0aW5jdGlvbgpiZXR3ZWVuIHRoZSBzcGVlY2hlcyB3aGljaCBoZSBtYWtlcyBpbiB0aGUgc2VuYXRlLApiZWZvcmUgdGhlIHBlb3BsZSBhbmQgaW4gcHJpdmF0ZSBjb25zdWx0YXRpb25zLCB3aGlsZQpoZSB3aWxsIGFsc28gaW50cm9kdWNlIG51bWVyb3VzIG1vZGlmaWNhdGlvbnMgdG8Kc3VpdCB0aGUgZGlmZmVyZW50IHBlcnNvbnMgYW5kIGNpcmN1bXN0YW5jZXMgb2YgdGltZQphbmQgcGxhY2UuIFRodXMgaW4gb25lIGFuZCB0aGUgc2FtZSBzcGVlY2ggaGUKd2lsbCB1c2Ugb25lIHN0eWxlIGZvciBzdGlycmluZyB0aGUgZW1vdGlvbnMsIGFuZAphbm90aGVyIHRvIGNvbmNpbGlhdGUgaGlzIGhlYXJlcnM7IGl0IGlzIGZyb20gZGlmZmVyZW50CnNvdXJjZXMgdGhhdCBoZSB3aWxsIGRlcml2ZSBhbmdlciBvciBwaXR5LCBhbmQgdGhlCmFydCB3aGljaCBoZSBlbXBsb3lzIGluIGluc3RydWN0aW5nIHRoZSBqdWRnZSB3aWxsCmJlIG90aGVyIHRoYW4gdGhhdCB3aGljaCBoZSBlbXBsb3lzIHRvIG1vdmUgaGltLgo8bWlsZXN0b25lIG49IjcxIiB1bml0PSJzZWN0aW9uIiAvPkhlIHdpbGwgbm90IG1haW50YWluIHRoZSBzYW1lIHRvbmUgdGhyb3VnaG91dCBoaXMKPGhpIHJlbmQ9Iml0YWxpY3MiPmV4b3JkaXVtLCBzdGF0ZW1lbnQgb2YgZmFjdCwgYXJndW1lbnRzLCBkaWdyZXNzaW9uPC9oaT4gYW5kCjxoaSByZW5kPSJpdGFsaWNzIj5wZXJvcmF0aW9uLjwvaGk+IEhlIHdpbGwgc3BlYWsgZ3JhdmVseSwgc2V2ZXJlbHksIHNoYXJwbHksCndpdGggdmVoZW1lbmNlLCBlbmVyZ3ksIGZ1bGxuZXNzLCBiaXR0ZXJuZXNzLCBvcgpnZW5pYWxpdHksIHF1aWV0bHksIHNpbXBseSwgSGF0dGVyaW5nbHksIGdlbnRseSwgc3dlZXRseSwKYnJpZWZ5IG9yIHdpdHRpbHk7IGhlIHdpbGwgbm90IGFsd2F5cyBiZSBsaWtlIGhpbXNlbGYsIGJ1dCBoZSB3aWxsIG5ldmVyIGJlIHVud29ydGh5IG9mIGhpbXNlbGYuCjxtaWxlc3RvbmUgbj0iNzIiIHVuaXQ9InNlY3Rpb24iIC8+VGh1cyB0aGUgcHVycG9zZSBmb3Igd2hpY2ggb3JhdG9yeSB3YXMgYWJvdmUgYWxsCmRlc2lnbmVkIHdpbGwgYmUgc2VjdXJlZCwgdGhhdCBpcyB0byBzYXksIGhlIHdpbGwKc3BlYWsgd2l0aCBwcm9maXQgYW5kIHdpdGggcG93ZXIgdG8gZWZmZWN0IGhpcyBhaW0sCndoaWxlIGhlIHdpbGwgYWxzbyB3aW4gdGhlIHByYWlzZSBub3QgbWVyZWx5IG9mIHRoZQpsZWFybmVkLCBidXQgb2YgdGhlIG11bHRpdHVkZSBhcyB3ZWxsLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['12.10.69'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OSIgdW5pdD0ic2VjdGlvbiIgLz5FbG9xdWVuY2UgaGFzLCB0aGVyZWZvcmUsIGEgcXVhbnRpdHkgb2YgZGlmZmVyZW50CmFzcGVjdHMsIGJ1dCBpdCBpcyBzaGVlciBmb2xseSB0byBpbnF1aXJlIHdoaWNoIG9mIHRoZXNlCnRoZSBvcmF0b3Igc2hvdWxkIHRha2UgYXMgaGlzIG1vZGVsLCBzaW5jZSBldmVyeQpzcGVjaWVzIHRoYXQgaXMgaW4gaXRzZWxmIGNvcnJlY3QgaGFzIGl0cyB1c2UsIGFuZCB3aGF0CmlzIGNvbW1vbmx5IGNhbGxlZCA8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5zdHlsZSBvZiBzcGVha2luZzwvaGk+IGRvZXMgbm90IGRlcGVuZApvbiB0aGUgb3JhdG9yLiBGb3IgaGUgd2lsbCB1c2UgYWxsIHN0eWxlcywgYXMgY2lyY3Vtc3RhbmNlcyBtYXkgZGVtYW5kLCBhbmQgdGhlIGNob2ljZSB3aWxsIGJlCmRldGVybWluZWQgbm90IG9ubHkgYnkgdGhlIGNhc2UgYXMgYSB3aG9sZSwgYnV0IGJ5CnRoZSBkZW1hbmRzIG9mIHRoZSBkaWZmZXJlbnQgcG9ydGlvbnMgb2YgdGhlIGNhc2UuCjwvdHJhbnNsYXRpb24+"
translation['12.10.70'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IganVzdCBhcyBoZSB3aWxsIG5vdCBzcGVhayBpbiB0aGUgc2FtZSB3YXkgd2hlbgpoZSBpcyBkZWZlbmRpbmcgYSBjbGllbnQgb24gYSBjYXBpdGFsIGNoYXJnZSBhbmQKd2hlbiBoZSBpcyBzcGVha2luZyBpbiBhIGxhd3N1aXQgY29uY2VybmVkIHdpdGggYW4KaW5oZXJpdGFuY2UsIG9yIGRpc2N1c3NpbmcgaW50ZXJkaWN0cyBhbmQgc3VpdHMgdGFraW5nCnRoZSBmb3JtIG9mIGEgd2FnZXIsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNwLjwvaGk+IEkuIHguIDUgYW5kIElWLiBpaS4gNjEuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlNwb25zaW88L2hpPiAoPSB3YWdlcikgd2FzIGEgZm9ybQpvZiBsYXdzdWl0IGluIHdoaWNoIHRoZSBsaXRpZ2FudCBwcm9taXNlZCB0byBwYXkgYSBjZXJ0YWluCnN1bSBvZiBtb25leSBpZiBoZSBsb3N0IGhpcyBjYXNlLiBUaGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+aW50cmRpZXQ8L2hpPiB3YXMgYW4gb3JkZXIKaXNzdWVkIGJ5IHRoZSBwcmFldG9yIGNvbW1hbmRpbmcgb3IgcHJvaGliaXRpbmcgY2VydGFpbgphY3Rpb24uPC9ub3RlPiBvciBjbGFpbXMgaW4gY29ubmV4aW9uIHdpdGgKCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmNwLjwvaGk+IEkuIHguIDUgYW5kIElWLiBpaS4gNjEuIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPlNwb25zaW88L2hpPiAoPSB3YWdlcikgd2FzIGEgZm9ybQpvZiBsYXdzdWl0IGluIHdoaWNoIHRoZSBsaXRpZ2FudCBwcm9taXNlZCB0byBwYXkgYSBjZXJ0YWluCnN1bSBvZiBtb25leSBpZiBoZSBsb3N0IGhpcyBjYXNlLiBUaGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+aW50cmRpZXQ8L2hpPiB3YXMgYW4gb3JkZXIKaXNzdWVkIGJ5IHRoZSBwcmFldG9yIGNvbW1hbmRpbmcgb3IgcHJvaGliaXRpbmcgY2VydGFpbgphY3Rpb24uPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDkxIiAvPgoKbG9hbnMsIHNvIHRvbyBoZSB3aWxsIHByZXNlcnZlIGEgZHVlIGRpc3RpbmN0aW9uCmJldHdlZW4gdGhlIHNwZWVjaGVzIHdoaWNoIGhlIG1ha2VzIGluIHRoZSBzZW5hdGUsCmJlZm9yZSB0aGUgcGVvcGxlIGFuZCBpbiBwcml2YXRlIGNvbnN1bHRhdGlvbnMsIHdoaWxlCmhlIHdpbGwgYWxzbyBpbnRyb2R1Y2UgbnVtZXJvdXMgbW9kaWZpY2F0aW9ucyB0bwpzdWl0IHRoZSBkaWZmZXJlbnQgcGVyc29ucyBhbmQgY2lyY3Vtc3RhbmNlcyBvZiB0aW1lCmFuZCBwbGFjZS4gVGh1cyBpbiBvbmUgYW5kIHRoZSBzYW1lIHNwZWVjaCBoZQp3aWxsIHVzZSBvbmUgc3R5bGUgZm9yIHN0aXJyaW5nIHRoZSBlbW90aW9ucywgYW5kCmFub3RoZXIgdG8gY29uY2lsaWF0ZSBoaXMgaGVhcmVyczsgaXQgaXMgZnJvbSBkaWZmZXJlbnQKc291cmNlcyB0aGF0IGhlIHdpbGwgZGVyaXZlIGFuZ2VyIG9yIHBpdHksIGFuZCB0aGUKYXJ0IHdoaWNoIGhlIGVtcGxveXMgaW4gaW5zdHJ1Y3RpbmcgdGhlIGp1ZGdlIHdpbGwKYmUgb3RoZXIgdGhhbiB0aGF0IHdoaWNoIGhlIGVtcGxveXMgdG8gbW92ZSBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['12.10.71'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MSIgdW5pdD0ic2VjdGlvbiIgLz5IZSB3aWxsIG5vdCBtYWludGFpbiB0aGUgc2FtZSB0b25lIHRocm91Z2hvdXQgaGlzCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmV4b3JkaXVtLCBzdGF0ZW1lbnQgb2YgZmFjdCwgYXJndW1lbnRzLCBkaWdyZXNzaW9uPC9oaT4gYW5kCjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnBlcm9yYXRpb24uPC9oaT4gSGUgd2lsbCBzcGVhayBncmF2ZWx5LCBzZXZlcmVseSwgc2hhcnBseSwKd2l0aCB2ZWhlbWVuY2UsIGVuZXJneSwgZnVsbG5lc3MsIGJpdHRlcm5lc3MsIG9yCmdlbmlhbGl0eSwgcXVpZXRseSwgc2ltcGx5LCBIYXR0ZXJpbmdseSwgZ2VudGx5LCBzd2VldGx5LApicmllZnkgb3Igd2l0dGlseTsgaGUgd2lsbCBub3QgYWx3YXlzIGJlIGxpa2UgaGltc2VsZiwgYnV0IGhlIHdpbGwgbmV2ZXIgYmUgdW53b3J0aHkgb2YgaGltc2VsZi4KPC90cmFuc2xhdGlvbj4="
translation['12.10.72'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MiIgdW5pdD0ic2VjdGlvbiIgLz5UaHVzIHRoZSBwdXJwb3NlIGZvciB3aGljaCBvcmF0b3J5IHdhcyBhYm92ZSBhbGwKZGVzaWduZWQgd2lsbCBiZSBzZWN1cmVkLCB0aGF0IGlzIHRvIHNheSwgaGUgd2lsbApzcGVhayB3aXRoIHByb2ZpdCBhbmQgd2l0aCBwb3dlciB0byBlZmZlY3QgaGlzIGFpbSwKd2hpbGUgaGUgd2lsbCBhbHNvIHdpbiB0aGUgcHJhaXNlIG5vdCBtZXJlbHkgb2YgdGhlCmxlYXJuZWQsIGJ1dCBvZiB0aGUgbXVsdGl0dWRlIGFzIHdlbGwuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNzMiIHVuaXQ9InNlY3Rpb24iIC8+VGhleSBtYWtlIHRoZSBncmF2ZXN0IG1pc3Rha2Ugd2hvIGNvbnNpZGVyIHRoYXQKdGhlIHN0eWxlIHdoaWNoIGlzIGJlc3QgYWRhcHRlZCB0byB3aW4gcG9wdWxhcml0eQphbmQgYXBwbGF1c2UgaXMgYSBmYXVsdHkgYW5kIGNvcnJ1cHQgc3R5bGUgb2Ygc3BlYWtpbmcKd2hpY2ggcmV2ZWxzIGluIGxpY2Vuc2Ugb2YgZGljdGlvbiBvciB3YW50b25zIGluCmNoaWxkaXNoIGVwaWdyYW0gb3Igc3dlbGxzIHdpdGggc3RpbHRlZCBib21iYXN0IG9yCnJpb3RzIGluIGVtcHR5IGNvbW1vbnBsYWNlIG9yIGFkb3JucyBpdHNlbGYgd2l0aApibG9zc29tcyBvZiBlbG9xdWVuY2Ugd2hpY2ggd2lsbCBmYWxsIHRvIGVhcnRoIGlmCmJ1dCBsaWdodGx5IHNoYWtlbiwgb3IgcmVnYXJkcyBleHRyYXZhZ2FuY2UgYXMKc3VibGltZSBvciByYXZlcyB3aWxkbHkgdW5kZXIgdGhlIHByZXRleHQgb2YgZnJlZQpzcGVlY2guPG1pbGVzdG9uZSBuPSI3NCIgdW5pdD0ic2VjdGlvbiIgLz4gSSBhbSByZWFkeSB0byBhZG1pdCB0aGF0IHN1Y2ggcXVhbGl0aWVzCnBsZWFzZSBtYW55LCBhbmQgSSBmZWVsIG5vIHN1cnByaXNlIHRoYXQgdGhpcyBzaG91bGQKCjxwYiBpZD0icC40OTMiIC8+CgpiZSB0aGUgY2FzZS4gRm9yIGFueSBraW5kIG9mIGVsb3F1ZW5jZSBpcyBwbGVhc2luZwphbmQgYXR0cmFjdGl2ZSB0byB0aGUgY2FyLCBhbmQgZXZlcnkgZWZmb3J0IG9mIHRoZQp2b2ljZSBpbnNwaXJlcyBhIG5hdHVyYWwgcGxlYXN1cmUgaW4gdGhlIHNvdWwgb2YgbWFuOwppbmRlZWQgdGhpcyBpcyB0aGUgc29sZSBjYXVzZSBvZiB0aG9zZSBmYW1pbGlhciBnYXRoZXJpbmdzIGluIHRoZSBGb3J1bSBvciBvbiB0aGUgT2xkIFdhbGwsPG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5UaGUgPGhpIHJlbmQ9Iml0YWxpY3MiPmFnZ2VyPC9oaT4gb2YgU2Vydml1cyBUdWxsaXVzLCB3aGljaCBzZXJ2ZWQgYXMgYSBwcm9tZW5hZGVjLgpUaGUgbmVhcmVzdCBtb2Rlcm4gcGFyYWxsZWwgbWF5IGJlIGZvdW5kIGluIHRoZSA8cXVvdGU+SHlkZQpQYXJrIG9yYXRvci48L3F1b3RlPjwvbm90ZT4gc28gdGhhdCB0aGVyZQppcyBzbWFsbCByZWFzb24gZm9yIHdvbmRlciBpZiBhbnkgcGxlYWRlciBpcyBzYWZlIHRvCmRyYXcgYSByaW5nIG9mIGxpc3RlbmVycyBmcm9tIHRoZSBjcm93ZC48bWlsZXN0b25lIG49Ijc1IiB1bml0PSJzZWN0aW9uIiAvPiBBbmQgd2hlbgphbnkgdW51c3VhbGx5IHByZWNpb3VzIHBocmFzZSBzdHJpa2VzIHRoZSBlYXJzIG9mIGFuCnVuZWR1Y2F0ZWQgYXVkaWVuY2UsIHdoYXRldmVyIGl0cyB0cnVlIG1lcml0cywgaXQKd2FrZW5zIHRoZWlyIGFkbWlyYXRpb24ganVzdCBmb3IgdGhlIHZlcnkgcmVhc29uCnRoYXQgdGhleSBmZWVsIHRoZXkgY291bGQgbmV2ZXIgaGF2ZSBwcm9kdWNlZCBpdAp0aGVtc2VsdmVzLiBBbmQgaXQgZGVzZXJ2ZXMgdGhlaXIgYWRtaXJhdGlvbiwgc2luY2UKZXZlbiBzdWNoIHN1Y2Nlc3MgaXMgaGFyZCB0byBhdHRhaW4uIE9uIHRoZSBvdGhlcgpoYW5kLCB3aGVuIHN1Y2ggZGlzcGxheXMgYXJlIGNvbXBhcmVkIHdpdGggdGhlaXIKYmV0dGVycywgdGhleSBzaW5rIGludG8gaW5zaWduaWZpY2FuY2UgYW5kIGZhZGUgb3V0Cm9mIHNpZ2h0LCBmb3IgdGhleSBhcmUgbGlrZSB3b29sIGR5ZWQgcmVkIHRoYXQKcGxlYXNlcyBpbiB0aGUgYWJzZW5jZSBvZiBwdXJwbGUsIGJ1dCwgYXMgT3ZpZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPkhhbG0uIEFtLjwvaGk+IDcwNyA8aGkgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PC9ub3RlPiBzYXlzLAppZiBjb21wYXJlZCB3aXRoIGEgY2xvYWsgb2YgVHlyaWFuIGR5ZSwgcGFsZXMgaW4gdGhlCnByZXNlbmNlIG9mIHRoZSBmYWlyZXIgaHVlLjxtaWxlc3RvbmUgbj0iNzYiIHVuaXQ9InNlY3Rpb24iIC8+IElmLCBob3dldmVyLCB3ZSB0ZXN0CnN1Y2ggY29ycnVwdCBlbG9xdWVuY2UgYnkgdGhlIHRvdWNoc3RvbmUgb2YgYSBjcml0aWNhbAp0YXN0ZSwgYXMsIGZvciBleGFtcGxlLCB3ZSB0ZXN0IGluZmVyaW9yIGR5ZXMgd2l0aApzdWxwaHVyLCBpdCB3aWxsIGxheSBhc2lkZSB0aGUgZmFsc2UgYnJpbGxpYW5jZSB0aGF0CmRlY2VpdmVkIHRoZSBleWUgYW5kIGZhZGUgdG8gYSBwYWxsb3IgYWxtb3N0IHRvbwpyZXB1bHNpdmUgdG8gZGVzY3JpYmUuIFN1Y2ggcGFzc2FnZXMgc2hpbmUgb25seSBpbgp0aGUgYWJzZW5jZSBvZiB0aGUgc3VubGlnaHQsIGp1c3QgYXMgY2VydGFpbiB0aW55Cmluc2VjdHMgc2VlbSB0cmFuc2Zvcm1lZCBpbiB0aGUgZGFya25lc3MgdG8gbGl0dGxlCmZsYW1lcyBvZiBmaXJlLiBGaW5hbGx5LCB3aGlsZSBtYW55IGFwcHJvdmUgb2YgdGhpbmdzCnRoYXQgYXJlIGJhZCwgbm8gb25lIGRpc2FwcHJvdmVzIG9mIHRoYXQgd2hpY2ggaXMKZ29vZC48L3A+CjwvdHJhbnNsYXRpb24+"
translation['12.10.73'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MyIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IG1ha2UgdGhlIGdyYXZlc3QgbWlzdGFrZSB3aG8gY29uc2lkZXIgdGhhdAp0aGUgc3R5bGUgd2hpY2ggaXMgYmVzdCBhZGFwdGVkIHRvIHdpbiBwb3B1bGFyaXR5CmFuZCBhcHBsYXVzZSBpcyBhIGZhdWx0eSBhbmQgY29ycnVwdCBzdHlsZSBvZiBzcGVha2luZwp3aGljaCByZXZlbHMgaW4gbGljZW5zZSBvZiBkaWN0aW9uIG9yIHdhbnRvbnMgaW4KY2hpbGRpc2ggZXBpZ3JhbSBvciBzd2VsbHMgd2l0aCBzdGlsdGVkIGJvbWJhc3Qgb3IKcmlvdHMgaW4gZW1wdHkgY29tbW9ucGxhY2Ugb3IgYWRvcm5zIGl0c2VsZiB3aXRoCmJsb3Nzb21zIG9mIGVsb3F1ZW5jZSB3aGljaCB3aWxsIGZhbGwgdG8gZWFydGggaWYKYnV0IGxpZ2h0bHkgc2hha2VuLCBvciByZWdhcmRzIGV4dHJhdmFnYW5jZSBhcwpzdWJsaW1lIG9yIHJhdmVzIHdpbGRseSB1bmRlciB0aGUgcHJldGV4dCBvZiBmcmVlCnNwZWVjaC48L3RyYW5zbGF0aW9uPg=="
translation['12.10.74'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NCIgdW5pdD0ic2VjdGlvbiIgLz4gSSBhbSByZWFkeSB0byBhZG1pdCB0aGF0IHN1Y2ggcXVhbGl0aWVzCnBsZWFzZSBtYW55LCBhbmQgSSBmZWVsIG5vIHN1cnByaXNlIHRoYXQgdGhpcyBzaG91bGQKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQ5MyIgLz4KCmJlIHRoZSBjYXNlLiBGb3IgYW55IGtpbmQgb2YgZWxvcXVlbmNlIGlzIHBsZWFzaW5nCmFuZCBhdHRyYWN0aXZlIHRvIHRoZSBjYXIsIGFuZCBldmVyeSBlZmZvcnQgb2YgdGhlCnZvaWNlIGluc3BpcmVzIGEgbmF0dXJhbCBwbGVhc3VyZSBpbiB0aGUgc291bCBvZiBtYW47CmluZGVlZCB0aGlzIGlzIHRoZSBzb2xlIGNhdXNlIG9mIHRob3NlIGZhbWlsaWFyIGdhdGhlcmluZ3MgaW4gdGhlIEZvcnVtIG9yIG9uIHRoZSBPbGQgV2FsbCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+VGhlIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmFnZ2VyPC9oaT4gb2YgU2Vydml1cyBUdWxsaXVzLCB3aGljaCBzZXJ2ZWQgYXMgYSBwcm9tZW5hZGVjLgpUaGUgbmVhcmVzdCBtb2Rlcm4gcGFyYWxsZWwgbWF5IGJlIGZvdW5kIGluIHRoZSA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5IeWRlClBhcmsgb3JhdG9yLjwvcXVvdGU+PC9ub3RlPiBzbyB0aGF0IHRoZXJlCmlzIHNtYWxsIHJlYXNvbiBmb3Igd29uZGVyIGlmIGFueSBwbGVhZGVyIGlzIHNhZmUgdG8KZHJhdyBhIHJpbmcgb2YgbGlzdGVuZXJzIGZyb20gdGhlIGNyb3dkLjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmFnZ2VyPC9oaT4gb2YgU2Vydml1cyBUdWxsaXVzLCB3aGljaCBzZXJ2ZWQgYXMgYSBwcm9tZW5hZGVjLgpUaGUgbmVhcmVzdCBtb2Rlcm4gcGFyYWxsZWwgbWF5IGJlIGZvdW5kIGluIHRoZSA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIj5IeWRlClBhcmsgb3JhdG9yLjwvcXVvdGU+PC90cmFuc2xhdGlvbj4="
translation['12.10.75'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NSIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIHdoZW4KYW55IHVudXN1YWxseSBwcmVjaW91cyBwaHJhc2Ugc3RyaWtlcyB0aGUgZWFycyBvZiBhbgp1bmVkdWNhdGVkIGF1ZGllbmNlLCB3aGF0ZXZlciBpdHMgdHJ1ZSBtZXJpdHMsIGl0Cndha2VucyB0aGVpciBhZG1pcmF0aW9uIGp1c3QgZm9yIHRoZSB2ZXJ5IHJlYXNvbgp0aGF0IHRoZXkgZmVlbCB0aGV5IGNvdWxkIG5ldmVyIGhhdmUgcHJvZHVjZWQgaXQKdGhlbXNlbHZlcy4gQW5kIGl0IGRlc2VydmVzIHRoZWlyIGFkbWlyYXRpb24sIHNpbmNlCmV2ZW4gc3VjaCBzdWNjZXNzIGlzIGhhcmQgdG8gYXR0YWluLiBPbiB0aGUgb3RoZXIKaGFuZCwgd2hlbiBzdWNoIGRpc3BsYXlzIGFyZSBjb21wYXJlZCB3aXRoIHRoZWlyCmJldHRlcnMsIHRoZXkgc2luayBpbnRvIGluc2lnbmlmaWNhbmNlIGFuZCBmYWRlIG91dApvZiBzaWdodCwgZm9yIHRoZXkgYXJlIGxpa2Ugd29vbCBkeWVkIHJlZCB0aGF0CnBsZWFzZXMgaW4gdGhlIGFic2VuY2Ugb2YgcHVycGxlLCBidXQsIGFzIE92aWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+SGFsbS4gQW0uPC9oaT4gNzA3IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPnNxcS48L2hpPjwvbm90ZT4gc2F5cywKaWYgY29tcGFyZWQgd2l0aCBhIGNsb2FrIG9mIFR5cmlhbiBkeWUsIHBhbGVzIGluIHRoZQpwcmVzZW5jZSBvZiB0aGUgZmFpcmVyIGh1ZS48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5IYWxtLiBBbS48L2hpPiA3MDcgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+c3FxLjwvaGk+PC90cmFuc2xhdGlvbj4="
translation['12.10.76'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NiIgdW5pdD0ic2VjdGlvbiIgLz4gSWYsIGhvd2V2ZXIsIHdlIHRlc3QKc3VjaCBjb3JydXB0IGVsb3F1ZW5jZSBieSB0aGUgdG91Y2hzdG9uZSBvZiBhIGNyaXRpY2FsCnRhc3RlLCBhcywgZm9yIGV4YW1wbGUsIHdlIHRlc3QgaW5mZXJpb3IgZHllcyB3aXRoCnN1bHBodXIsIGl0IHdpbGwgbGF5IGFzaWRlIHRoZSBmYWxzZSBicmlsbGlhbmNlIHRoYXQKZGVjZWl2ZWQgdGhlIGV5ZSBhbmQgZmFkZSB0byBhIHBhbGxvciBhbG1vc3QgdG9vCnJlcHVsc2l2ZSB0byBkZXNjcmliZS4gU3VjaCBwYXNzYWdlcyBzaGluZSBvbmx5IGluCnRoZSBhYnNlbmNlIG9mIHRoZSBzdW5saWdodCwganVzdCBhcyBjZXJ0YWluIHRpbnkKaW5zZWN0cyBzZWVtIHRyYW5zZm9ybWVkIGluIHRoZSBkYXJrbmVzcyB0byBsaXR0bGUKZmxhbWVzIG9mIGZpcmUuIEZpbmFsbHksIHdoaWxlIG1hbnkgYXBwcm92ZSBvZiB0aGluZ3MKdGhhdCBhcmUgYmFkLCBubyBvbmUgZGlzYXBwcm92ZXMgb2YgdGhhdCB3aGljaCBpcwpnb29kLjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49Ijc3IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGUgdHJ1ZSBvcmF0b3Igd2lsbCBub3QgbWVyZWx5IGJlIGFibGUgdG8KYWNoaWV2ZSBhbGwgdGhlIGZlYXRzIG9mIHdoaWNoIEkgaGF2ZSBzcG9rZW4gd2l0aApzdXByZW1lIGV4Y2VsbGVuY2UsIGJ1dCB3aXRoIHRoZSB1dG1vc3QgZWFzZSBhcwp3ZWxsLiBGb3IgdGhlIHNvdmVyZWlnbiBwb3dlciBvZiBlbG9xdWVuY2UgYW5kCnRoZSB2b2ljZSB0aGF0IGF3YWtlbnMgd2VsbC1kZXNlcnZlZCBhcHBsYXVzZSB3aWxsCgo8cGIgaWQ9InAuNDk1IiAvPgoKYmUgZnJlZSBmcm9tIHRoZSBwZXJwZXR1YWwgZGlzdHJlc3Mgb2YgaGFyYXNzaW5nCmFueGlldHkgd2hpY2ggd2FzdGVzIGFuZCBmZXZlcnMgdGhlIG9yYXRvciB3aG8KcGFpbmZ1bGx5IGNvcnJlY3RzIGhpbXNlbGYgYW5kIHBpbmVzIGF3YXkgb3ZlciB0aGUKbGFib3Jpb3VzIHdlaWdoaW5nIGFuZCBwaWVjaW5nIHRvZ2V0aGVyIG9mIGhpcwp3b3Jkcy48bWlsZXN0b25lIG49Ijc4IiB1bml0PSJzZWN0aW9uIiAvPiBObywgb3VyIG9yYXRvciwgYnJpbGxpYW50LCBzdWJsaW1lIGFuZApvcHVsZW50IG9mIHNwZWVjaCwgaXMgbG9yZCBhbmQgbWFzdGVyIG9mIGFsbCB0aGUKcmVzb3VyY2VzIG9mIGVsb3F1ZW5jZSwgd2hvc2UgYWZmbHVlbmNlIHN1cnJvdW5kcwpoaW0uIEZvciBoZSB0aGF0IGhhcyByZWFjaGVkIHRoZSBzdW1taXQgaGFzIG5vCm1vcmUgd2VhcnkgaGlsbHMgdG8gc2NhbGUuIEF0IGZpcnN0IHRoZSBjbGltYmVyJ3MgdG9pbAppcyBoYXJkLCBidXQgdGhlIGhpZ2hlciBoZSBtb3VudHMgdGhlIGVhc2llciBiZWNvbWVzIHRoZSBncmFkaWVudCBhbmQgdGhlIHJpY2hlciB0aGUgc29pbC48bWlsZXN0b25lIG49Ijc5IiB1bml0PSJzZWN0aW9uIiAvPiBBbmQKaWYgYnkgcGVyc2V2ZXJhbmNlIG9mIHN0dWR5IGhlIHBhc3MgZXZlbiBiZXlvbmQKdGhlc2UgZ2VudGxlciBzbG9wZXMsIGZydWl0cyBmb3Igd2hpY2ggbm9uZSBoYXZlCnRvaWxlZCB0aHJ1c3QgdGhlbXNlbHZlcyB1cG9uIGhpbSwgYW5kIGFsbCB0aGluZ3MKc3ByaW5nIGZvcnRoIHVuYmlkZGVuOyBhbmQgeWV0IGlmIHRoZXkgYmUgbm90CmdhdGhlcmVkIGRhaWx5LCB0aGV5IHdpbGwgd2l0aGVyIGF3YXkuIEJ1dCBldmVuCnN1Y2ggd2VhbHRoIG11c3Qgb2JzZXJ2ZSB0aGUgbWVhbiwgd2l0aG91dCB3aGljaApub3RoaW5nIGlzIGVpdGhlciBwcmFpc2V3b3J0aHkgb3IgYmVuZWZpY2lhbCwgd2hpbGUKYnJpbGxpYW5jZSBtdXN0IGJlIGF0dGVuZGVkIGJ5IG1hbmxpbmVzcywgYW5kIGltYWdpbmF0aW9uIGJ5IHNvdW5kbmVzcyBvZiB0YXN0ZS48bWlsZXN0b25lIG49IjgwIiB1bml0PSJzZWN0aW9uIiAvPiBUaHVzIHRoZSB3b3JrcwpvZiB0aGUgb3JhdG9yIHdpbGwgYmUgZ3JlYXQgbm90IGV4dHJhdmFnYW50LCBzdWJsaW1lCm5vdCBib21iYXN0aWMsIGJvbGQgbm90IHJhc2gsIHNldmVyZSBidXQgbm90IGdsb29teSwKZ3JhdmUgYnV0IG5vdCBzbG93LCByaWNoIGJ1dCBub3QgbHV4dXJpYW50LCBwbGVhc2luZwpidXQgbm90IGVmZmVtaW5hdGUsIGdyYW5kIGJ1dCBub3QgZ3JhbmRpb3NlLiBJdCBpcwp0aGUgc2FtZSB3aXRoIG90aGVyIHF1YWxpdGllczogdGhlIG1lYW4gaXMgc2FmZXN0LApmb3IgdGhlIHdvcnN0IG9mIGFsbCBmYXVsdHMgaXMgdG8gZmx5IHRvIGV4dHJlbWVzLjwvcD4KCjwvdHJhbnNsYXRpb24+"
translation['12.10.77'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIHRydWUgb3JhdG9yIHdpbGwgbm90IG1lcmVseSBiZSBhYmxlIHRvCmFjaGlldmUgYWxsIHRoZSBmZWF0cyBvZiB3aGljaCBJIGhhdmUgc3Bva2VuIHdpdGgKc3VwcmVtZSBleGNlbGxlbmNlLCBidXQgd2l0aCB0aGUgdXRtb3N0IGVhc2UgYXMKd2VsbC4gRm9yIHRoZSBzb3ZlcmVpZ24gcG93ZXIgb2YgZWxvcXVlbmNlIGFuZAp0aGUgdm9pY2UgdGhhdCBhd2FrZW5zIHdlbGwtZGVzZXJ2ZWQgYXBwbGF1c2Ugd2lsbAoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNDk1IiAvPgoKYmUgZnJlZSBmcm9tIHRoZSBwZXJwZXR1YWwgZGlzdHJlc3Mgb2YgaGFyYXNzaW5nCmFueGlldHkgd2hpY2ggd2FzdGVzIGFuZCBmZXZlcnMgdGhlIG9yYXRvciB3aG8KcGFpbmZ1bGx5IGNvcnJlY3RzIGhpbXNlbGYgYW5kIHBpbmVzIGF3YXkgb3ZlciB0aGUKbGFib3Jpb3VzIHdlaWdoaW5nIGFuZCBwaWVjaW5nIHRvZ2V0aGVyIG9mIGhpcwp3b3Jkcy48L3RyYW5zbGF0aW9uPg=="
translation['12.10.78'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OCIgdW5pdD0ic2VjdGlvbiIgLz4gTm8sIG91ciBvcmF0b3IsIGJyaWxsaWFudCwgc3VibGltZSBhbmQKb3B1bGVudCBvZiBzcGVlY2gsIGlzIGxvcmQgYW5kIG1hc3RlciBvZiBhbGwgdGhlCnJlc291cmNlcyBvZiBlbG9xdWVuY2UsIHdob3NlIGFmZmx1ZW5jZSBzdXJyb3VuZHMKaGltLiBGb3IgaGUgdGhhdCBoYXMgcmVhY2hlZCB0aGUgc3VtbWl0IGhhcyBubwptb3JlIHdlYXJ5IGhpbGxzIHRvIHNjYWxlLiBBdCBmaXJzdCB0aGUgY2xpbWJlcidzIHRvaWwKaXMgaGFyZCwgYnV0IHRoZSBoaWdoZXIgaGUgbW91bnRzIHRoZSBlYXNpZXIgYmVjb21lcyB0aGUgZ3JhZGllbnQgYW5kIHRoZSByaWNoZXIgdGhlIHNvaWwuPC90cmFuc2xhdGlvbj4="
translation['12.10.79'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OSIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kCmlmIGJ5IHBlcnNldmVyYW5jZSBvZiBzdHVkeSBoZSBwYXNzIGV2ZW4gYmV5b25kCnRoZXNlIGdlbnRsZXIgc2xvcGVzLCBmcnVpdHMgZm9yIHdoaWNoIG5vbmUgaGF2ZQp0b2lsZWQgdGhydXN0IHRoZW1zZWx2ZXMgdXBvbiBoaW0sIGFuZCBhbGwgdGhpbmdzCnNwcmluZyBmb3J0aCB1bmJpZGRlbjsgYW5kIHlldCBpZiB0aGV5IGJlIG5vdApnYXRoZXJlZCBkYWlseSwgdGhleSB3aWxsIHdpdGhlciBhd2F5LiBCdXQgZXZlbgpzdWNoIHdlYWx0aCBtdXN0IG9ic2VydmUgdGhlIG1lYW4sIHdpdGhvdXQgd2hpY2gKbm90aGluZyBpcyBlaXRoZXIgcHJhaXNld29ydGh5IG9yIGJlbmVmaWNpYWwsIHdoaWxlCmJyaWxsaWFuY2UgbXVzdCBiZSBhdHRlbmRlZCBieSBtYW5saW5lc3MsIGFuZCBpbWFnaW5hdGlvbiBieSBzb3VuZG5lc3Mgb2YgdGFzdGUuPC90cmFuc2xhdGlvbj4="
translation['12.10.80'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MCIgdW5pdD0ic2VjdGlvbiIgLz4gVGh1cyB0aGUgd29ya3MKb2YgdGhlIG9yYXRvciB3aWxsIGJlIGdyZWF0IG5vdCBleHRyYXZhZ2FudCwgc3VibGltZQpub3QgYm9tYmFzdGljLCBib2xkIG5vdCByYXNoLCBzZXZlcmUgYnV0IG5vdCBnbG9vbXksCmdyYXZlIGJ1dCBub3Qgc2xvdywgcmljaCBidXQgbm90IGx1eHVyaWFudCwgcGxlYXNpbmcKYnV0IG5vdCBlZmZlbWluYXRlLCBncmFuZCBidXQgbm90IGdyYW5kaW9zZS4gSXQgaXMKdGhlIHNhbWUgd2l0aCBvdGhlciBxdWFsaXRpZXM6IHRoZSBtZWFuIGlzIHNhZmVzdCwKZm9yIHRoZSB3b3JzdCBvZiBhbGwgZmF1bHRzIGlzIHRvIGZseSB0byBleHRyZW1lcy48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0iY2hhcHRlciIgLz48bWlsZXN0b25lIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+QWZ0ZXIgZW1wbG95aW5nIHRoZXNlIGdpZnRzIG9mIGVsb3F1ZW5jZSBpbgp0aGUgY291cnRzLCBpbiBjb3VuY2lscywgaW4gcHVibGljIGFzc2VtYmxpZXMgYW5kIHRoZQpkZWJhdGVzIG9mIHRoZSBzZW5hdGUsIGFuZCwgaW4gYSB3b3JkLCBpbiB0aGUgcGVyZm9ybWFuY2Ugb2YgYWxsIHRoZSBkdXRpZXMgb2YgYSBnb29kIGNpdGl6ZW4sIHRoZQpvcmF0b3Igd2lsbCBicmluZyBoaXMgYWN0aXZpdGllcyB0byBhIGNsb3NlIGluIGEgbWFubmVyCndvcnRoeSBvZiBhIGJsYW1lbGVzcyBsaWZlIHNwZW50IGluIHRoZSBwdXJzdWl0IG9mCnRoZSBub2JsZXN0IG9mIHByb2Zlc3Npb25zLiBBbmQgaGUgd2lsbCBkbyB0aGlzLApub3QgYmVjYXVzZSBoZSBjYW4gZXZlciBoYXZlIGVub3VnaCBvZiBkb2luZyBnb29kLAoKPHBiIGlkPSJwLjQ5NyIgLz4KCm9yIGJlY2F1c2Ugb25lIGVuZG93ZWQgd2l0aCBpbnRlbGxlY3QgYW5kIHRhbGVudHMKc3VjaCBhcyBoaXMgd291bGQgbm90IGJlIGp1c3RpZmllZCBpbiBwcmF5aW5nIHRoYXQKc3VjaCBnbG9yaW91cyBsYWJvdXJzIG1heSBiZSBwcm9sb25nZWQgdG8gdGhlaXIKdXRtb3N0IHNwYW4sIGJ1dCBmb3IgdGhpcyByZWFzb24sIHRoYXQgaXQgaXMgaGlzIGR1dHkKdG8gbG9vayB0byB0aGUgZnV0dXJlLCBmb3IgZmVhciB0aGF0IGhpcyB3b3JrIG1heSBiZQpsZXNzIGVmZmVjdGl2ZSB0aGFuIGl0IGhhcyBiZWVuIGluIHRoZSBwYXN0LjxtaWxlc3RvbmUgbj0iMiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIHRoZQpvcmF0b3IgZGVwZW5kcyBub3QgbWVyZWx5IG9uIGhpcyBrbm93bGVkZ2UsIHdoaWNoCmluY3JlYXNlcyB3aXRoIHRoZSB5ZWFycywgYnV0IG9uIGhpcyB2b2ljZSwgbHVuZ3MgYW5kCnBvd2VycyBvZiBlbmR1cmFuY2UuIEFuZCBpZiB0aGVzZSBiZSBicm9rZW4gb3IKaW1wYWlyZWQgYnkgYWdlIG9yIGhlYWx0aCwgaGUgbXVzdCBiZXdhcmUgdGhhdCBoZQpkb2VzIG5vdCBmYWxsIHNob3J0IGluIHNvbWV0aGluZyBvZiBoaXMgaGlnaCByZXB1dGF0aW9uIGFzIGEgbWFzdGVyIG9mIG9yYXRvcnksIHRoYXQgZmF0aWd1ZSBkb2VzIG5vdAppbnRlcnJ1cHQgaGlzIGVsb3F1ZW5jZSwgdGhhdCBoZSBpcyBub3QgYnJvdWdodCB0bwpyZWFsaXNlIHRoYXQgc29tZSBvZiBoaXMgd29yZHMgYXJlIGluYXVkaWJsZSwgb3IgdG8KbW91cm4gdGhhdCBoZSBpcyBub3Qgd2hhdCBvbmNlIGhlIHdhcy48bWlsZXN0b25lIG49IjMiIHVuaXQ9InNlY3Rpb24iIC8+IERvbWl0aXVzCkFmZXIgd2FzIGJ5IGZhciB0aGUgZ3JlYXRlc3Qgb2YgYWxsIHRoZSBvcmF0b3JzIHdob20KaXQgaGFzIGJlZW4gbXkgZ29vZCBmb3J0dW5lIHRvIGtub3csIGFuZCBJIHNhdwpoaW0sIHdoZW4gZmFyIGFkdmFuY2VkIGluIHllYXJzLCBkYWlseSBsb3Npbmcgc29tZXRoaW5nIG9mIHRoYXQgYXV0aG9yaXR5IHdoaWNoIGhpcyBtZXJpdHMgaGFkIHdvbgpmb3IgaGltOyBoZSB3aG9zZSBzdXByZW1hY3kgaW4gdGhlIGNvdXJ0cyBoYWQgb25jZQpiZWVuIHVuaXZlcnNhbGx5IGFja25vd2xlZGdlZCwgbm93IHBsZWFkZWQgYW1pZAp0aGUgdW53b3J0aHkgbGF1Z2h0ZXIgb2Ygc29tZSwgYW5kIHRoZSBzaWxlbnQKYmx1c2hlcyBvZiBvdGhlcnMsIGdpdmluZyBvY2Nhc2lvbiB0byB0aGUgbWFsaWNpb3VzCnNheWluZyB0aGF0IGhlIGhhZCByYXRoZXIgPHF1b3RlPmZhaW50IHRoYW4gZmluaXNoLjwvcXVvdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIj5CeSA8cXVvdGU+ZmluaXNoPC9xdW90ZT4gaXMgbWVhbnQgPHF1b3RlPnJldGlyZSBmcm9tIHBsZWFkaW5nLjwvcXVvdGU+PC9ub3RlPjxtaWxlc3RvbmUgbj0iNCIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kCnlldCBldmVuIHRoZW4sIHdoYXRldmVyIGhpcyBkZWZpY2llbmNpZXMsIGhlIHNwb2tlCm5vdCBiYWRseSwgYnV0IG1lcmVseSBsZXNzIHdlbGwuPC9wPgo8L3RyYW5zbGF0aW9uPg=="
translation['12.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0iY2hhcHRlciIgLz48L3RyYW5zbGF0aW9uPg=="
translation['12.11.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIGVtcGxveWluZyB0aGVzZSBnaWZ0cyBvZiBlbG9xdWVuY2UgaW4KdGhlIGNvdXJ0cywgaW4gY291bmNpbHMsIGluIHB1YmxpYyBhc3NlbWJsaWVzIGFuZCB0aGUKZGViYXRlcyBvZiB0aGUgc2VuYXRlLCBhbmQsIGluIGEgd29yZCwgaW4gdGhlIHBlcmZvcm1hbmNlIG9mIGFsbCB0aGUgZHV0aWVzIG9mIGEgZ29vZCBjaXRpemVuLCB0aGUKb3JhdG9yIHdpbGwgYnJpbmcgaGlzIGFjdGl2aXRpZXMgdG8gYSBjbG9zZSBpbiBhIG1hbm5lcgp3b3J0aHkgb2YgYSBibGFtZWxlc3MgbGlmZSBzcGVudCBpbiB0aGUgcHVyc3VpdCBvZgp0aGUgbm9ibGVzdCBvZiBwcm9mZXNzaW9ucy4gQW5kIGhlIHdpbGwgZG8gdGhpcywKbm90IGJlY2F1c2UgaGUgY2FuIGV2ZXIgaGF2ZSBlbm91Z2ggb2YgZG9pbmcgZ29vZCwKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjQ5NyIgLz4KCm9yIGJlY2F1c2Ugb25lIGVuZG93ZWQgd2l0aCBpbnRlbGxlY3QgYW5kIHRhbGVudHMKc3VjaCBhcyBoaXMgd291bGQgbm90IGJlIGp1c3RpZmllZCBpbiBwcmF5aW5nIHRoYXQKc3VjaCBnbG9yaW91cyBsYWJvdXJzIG1heSBiZSBwcm9sb25nZWQgdG8gdGhlaXIKdXRtb3N0IHNwYW4sIGJ1dCBmb3IgdGhpcyByZWFzb24sIHRoYXQgaXQgaXMgaGlzIGR1dHkKdG8gbG9vayB0byB0aGUgZnV0dXJlLCBmb3IgZmVhciB0aGF0IGhpcyB3b3JrIG1heSBiZQpsZXNzIGVmZmVjdGl2ZSB0aGFuIGl0IGhhcyBiZWVuIGluIHRoZSBwYXN0LjwvdHJhbnNsYXRpb24+"
translation['12.11.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IgdGhlCm9yYXRvciBkZXBlbmRzIG5vdCBtZXJlbHkgb24gaGlzIGtub3dsZWRnZSwgd2hpY2gKaW5jcmVhc2VzIHdpdGggdGhlIHllYXJzLCBidXQgb24gaGlzIHZvaWNlLCBsdW5ncyBhbmQKcG93ZXJzIG9mIGVuZHVyYW5jZS4gQW5kIGlmIHRoZXNlIGJlIGJyb2tlbiBvcgppbXBhaXJlZCBieSBhZ2Ugb3IgaGVhbHRoLCBoZSBtdXN0IGJld2FyZSB0aGF0IGhlCmRvZXMgbm90IGZhbGwgc2hvcnQgaW4gc29tZXRoaW5nIG9mIGhpcyBoaWdoIHJlcHV0YXRpb24gYXMgYSBtYXN0ZXIgb2Ygb3JhdG9yeSwgdGhhdCBmYXRpZ3VlIGRvZXMgbm90CmludGVycnVwdCBoaXMgZWxvcXVlbmNlLCB0aGF0IGhlIGlzIG5vdCBicm91Z2h0IHRvCnJlYWxpc2UgdGhhdCBzb21lIG9mIGhpcyB3b3JkcyBhcmUgaW5hdWRpYmxlLCBvciB0bwptb3VybiB0aGF0IGhlIGlzIG5vdCB3aGF0IG9uY2UgaGUgd2FzLjwvdHJhbnNsYXRpb24+"
translation['12.11.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPiBEb21pdGl1cwpBZmVyIHdhcyBieSBmYXIgdGhlIGdyZWF0ZXN0IG9mIGFsbCB0aGUgb3JhdG9ycyB3aG9tCml0IGhhcyBiZWVuIG15IGdvb2QgZm9ydHVuZSB0byBrbm93LCBhbmQgSSBzYXcKaGltLCB3aGVuIGZhciBhZHZhbmNlZCBpbiB5ZWFycywgZGFpbHkgbG9zaW5nIHNvbWV0aGluZyBvZiB0aGF0IGF1dGhvcml0eSB3aGljaCBoaXMgbWVyaXRzIGhhZCB3b24KZm9yIGhpbTsgaGUgd2hvc2Ugc3VwcmVtYWN5IGluIHRoZSBjb3VydHMgaGFkIG9uY2UKYmVlbiB1bml2ZXJzYWxseSBhY2tub3dsZWRnZWQsIG5vdyBwbGVhZGVkIGFtaWQKdGhlIHVud29ydGh5IGxhdWdodGVyIG9mIHNvbWUsIGFuZCB0aGUgc2lsZW50CmJsdXNoZXMgb2Ygb3RoZXJzLCBnaXZpbmcgb2NjYXNpb24gdG8gdGhlIG1hbGljaW91cwpzYXlpbmcgdGhhdCBoZSBoYWQgcmF0aGVyIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmZhaW50IHRoYW4gZmluaXNoLjwvcXVvdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPkJ5IDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmZpbmlzaDwvcXVvdGU+IGlzIG1lYW50IDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPnJldGlyZSBmcm9tIHBsZWFkaW5nLjwvcXVvdGU+PC9ub3RlPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPmZpbmlzaDwvcXVvdGU+IGlzIG1lYW50IDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iPnJldGlyZSBmcm9tIHBsZWFkaW5nLjwvcXVvdGU+PC90cmFuc2xhdGlvbj4="
translation['12.11.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBBbmQKeWV0IGV2ZW4gdGhlbiwgd2hhdGV2ZXIgaGlzIGRlZmljaWVuY2llcywgaGUgc3Bva2UKbm90IGJhZGx5LCBidXQgbWVyZWx5IGxlc3Mgd2VsbC48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZXJlZm9yZSBiZWZvcmUgZXZlciBoZSBmYWxsIGEgcHJleSB0byB0aGUgYW1idXNoCndoZXJlIHRpbWUgbGllcyBpbiB3YWl0IGZvciBoaW0sIHRoZSBvcmF0b3Igc2hvdWxkCnNvdW5kIHRoZSByZXRyZWF0IGFuZCBzZWVrIGhhcmJvdXIgd2hpbGUgaGlzIHNoaXAKaXMgeWV0IGludGFjdC4gRm9yIHRoZSBmcnVpdHMgb2YgaGlzIHN0dWRpZXMgd2lsbApub3QgYmUgbGVzc2VuZWQgYnkgcmV0aXJlbWVudC4gRWl0aGVyIGhlIHdpbGwgYmVxdWVhdGggdGhlIGhpc3Rvcnkgb2YgaGlzIG93biB0aW1lcyBmb3IgdGhlIGRlbGlnaHQKb2YgYWZ0ZXIgYWdlcywgb3Igd2lsbCBpbnRlcnByZXQgdGhlIGxhdyB0byB0aG9zZQp3aG8gc2VlayBoaXMgY291bnNlbHMsIGFzIEx1Y2l1cyBDcmFzc3VzIHByb3Bvc2VzCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40OTkiIC8+Cgp0byBkbyBpbiB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3JhdG9yZTwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlPC9oaT4gKDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPk9yLjwvaGk+IEkuIHhsaWkuIDE5MC48L25vdGU+IG9mIENpY2Vybywgb3IgY29tcG9zZSBzb21lCnRyZWF0aXNlIG9uIHRoZSBhcnQgb2Ygb3JhdG9yeSwgb3IgZ2l2ZSB3b3J0aHkgdXR0ZXJhbmNlCnRvIHRoZSBzdWJsaW1lc3QgaWRlYWxzIG9mIGNvbmR1Y3QuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjUiIHVuaXQ9InNlY3Rpb24iIC8+IEhpcyBob3VzZQp3aWxsLCBhcyBpbiB0aGUgZGF5cyBvZiBvbGQsIGJlIHRocm9uZ2VkIGJ5IGFsbAp0aGUgYmVzdCBvZiB0aGUgcmlzaW5nIGdlbmVyYXRpb24sIHdobyB3aWxsIHNlZWsgdG8KbGVhcm4gZnJvbSBoaW0gYXMgZnJvbSBhbiBvcmFjbGUgaG93IHRoZXkgbWF5IGZpbmQKdGhlIHBhdGggdG8gdHJ1ZSBlbG9xdWVuY2UuIEFuZCBoZSBhcyB0aGVpciBmYXRoZXIKaW4gdGhlIGFydCB3aWxsIG1vdWxkIHRoZW0gdG8gYWxsIGV4Y2VsbGVuY2UsIGFuZApsaWtlIHNvbWUgb2xkIHBpbG90IHdpbGwgdGVhY2ggdGhlbSBvZiB0aGUgc2hvcmVzCndoZXJlYnkgdGhlaXIgc2hpcHMgbXVzdCBzYWlsLCBvZiB0aGUgaGFyYm91cnMgd2hlcmUKdGhleSBtYXkgc2hlbHRlciwgYW5kIHRoZSBzaWducyBvZiB0aGUgd2VhdGhlciwgYW5kCndpbGwgZXhwb3VuZCB0byB0aGVtIHdoYXQgdGhleSBzaGFsbCBkbyB3aGVuIHRoZQpicmVlemUgaXMgZmFpciBvciB0aGUgdGVtcGVzdCBibG93cy4gV2hlcmV0byBoZQp3aWxsIGJlIGluY2xpbmVkIG5vdCBvbmx5IGJ5IHRoZSBjb21tb24gZHV0eSBvZgpodW1hbml0eSwgYnV0IGJ5IGEgY2VydGFpbiBwYXNzaW9uIGZvciB0aGUgdGFzayB0aGF0Cm9uY2Ugd2FzIGhpcywgc2luY2Ugbm8gbWFuIGRlc2lyZXMgdGhhdCB0aGUgYXJ0CndoZXJlaW4gaGUgd2FzIG9uY2Ugc3VwcmVtZSBzaG91bGQgc3VmZmVyIGRlY2F5Cm9yIGRpbWludXRpb24uPG1pbGVzdG9uZSBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBBbmQgd2hhdCBjYW4gYmUgbW9yZSBob25vdXJhYmxlCnRoYW4gdG8gdGVhY2ggdGhhdCB3aGljaCB5b3Uga25vdyBzdXJwYXNzaW5nIHdlbGw/Ckl0IHdhcyBmb3IgdGhpcyB0aGF0IHRoZSBlbGRlciBDYWVsaXVzIGJyb3VnaHQgaGlzIHNvbgp0byBDaWNlcm8sIGFzIHRoZSBsYXR0ZXI8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSByZW5kPSJpdGFsaWNzIj5wcm8gQ2FlbC48L2hpPiBpdi4gMTAuPC9ub3RlPiB0ZWxscyB1cywgYW5kIGl0IHdhcyB3aXRoIHRoaXMKaW50ZW50IHRoYXQgdGhlIHNhbWUgZ3JlYXQgb3JhdG9yIHRvb2sgdXBvbiBoaW1zZWxmCnRoZSBkdXRpZXMgb2YgaW5zdHJ1Y3RvciwgYW5kIHRyYWluZWQgUGFuc2EsIEhpcnRpdXMKYW5kIERvbGFiZWxsYSBieSBkZWNsYWltaW5nIGRhaWx5IGJlZm9yZSB0aGVtIG9yCmhlYXJpbmcgdGhlbSBkZWNsYWltLjxtaWxlc3RvbmUgbj0iNyIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIEkga25vdyBub3Qgd2hldGhlcgp3ZSBzaG91bGQgbm90IGRlZW0gaXQgdGhlIGhhcHBpZXN0IG1vbWVudCBpbiBhbgpvcmF0b3IncyBsaWZlLCB3aGVuIGhlIGhhcyByZXRpcmVkIGZyb20gdGhlIHB1YmxpYwpnYXplLCB0aGUgY29uc2VjcmF0ZWQgcHJpZXN0IG9mIGVsb3F1ZW5jZSwgZnJlZSBmcm9tCmVudnkgYW5kIGZhciBmcm9tIHN0cmlmZSwgd2hlbiBoZSBoYXMgc2V0IGhpcyBnbG9yeQpvbiBhIHBpbm5hY2xlIGJleW9uZCB0aGUgcmVhY2ggb2YgZGV0cmFjdGlvbiwgZW5qb3lzLAp3aGlsZSBzdGlsbCBsaXZpbmcsIHRoYXQgdmVuZXJhdGlvbiB3aGljaCBtb3N0IG1lbgp3aW4gYnV0IGFmdGVyIGRlYXRoLCBhbmQgc2VlcyBob3cgZ3JlYXQgc2hhbGwgYmUgaGlzCnJlbm93biBhbWlkIGdlbmVyYXRpb25zIHlldCB1bmJvcm4uPC9wPgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC40OTkiIC8+Cgp0byBkbyBpbiB0aGUgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGUgT3JhdG9yZTwvaGk+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPmRlPC9oaT4gKDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPk9yLjwvaGk+IEkuIHhsaWkuIDE5MC48L25vdGU+IG9mIENpY2Vybywgb3IgY29tcG9zZSBzb21lCnRyZWF0aXNlIG9uIHRoZSBhcnQgb2Ygb3JhdG9yeSwgb3IgZ2l2ZSB3b3J0aHkgdXR0ZXJhbmNlCnRvIHRoZSBzdWJsaW1lc3QgaWRlYWxzIG9mIGNvbmR1Y3QuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+ZGU8L2hpPiAoPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T3IuPC9oaT4gSS4geGxpaS4gMTkwLjwvdHJhbnNsYXRpb24+"
translation['12.11.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPiBIaXMgaG91c2UKd2lsbCwgYXMgaW4gdGhlIGRheXMgb2Ygb2xkLCBiZSB0aHJvbmdlZCBieSBhbGwKdGhlIGJlc3Qgb2YgdGhlIHJpc2luZyBnZW5lcmF0aW9uLCB3aG8gd2lsbCBzZWVrIHRvCmxlYXJuIGZyb20gaGltIGFzIGZyb20gYW4gb3JhY2xlIGhvdyB0aGV5IG1heSBmaW5kCnRoZSBwYXRoIHRvIHRydWUgZWxvcXVlbmNlLiBBbmQgaGUgYXMgdGhlaXIgZmF0aGVyCmluIHRoZSBhcnQgd2lsbCBtb3VsZCB0aGVtIHRvIGFsbCBleGNlbGxlbmNlLCBhbmQKbGlrZSBzb21lIG9sZCBwaWxvdCB3aWxsIHRlYWNoIHRoZW0gb2YgdGhlIHNob3Jlcwp3aGVyZWJ5IHRoZWlyIHNoaXBzIG11c3Qgc2FpbCwgb2YgdGhlIGhhcmJvdXJzIHdoZXJlCnRoZXkgbWF5IHNoZWx0ZXIsIGFuZCB0aGUgc2lnbnMgb2YgdGhlIHdlYXRoZXIsIGFuZAp3aWxsIGV4cG91bmQgdG8gdGhlbSB3aGF0IHRoZXkgc2hhbGwgZG8gd2hlbiB0aGUKYnJlZXplIGlzIGZhaXIgb3IgdGhlIHRlbXBlc3QgYmxvd3MuIFdoZXJldG8gaGUKd2lsbCBiZSBpbmNsaW5lZCBub3Qgb25seSBieSB0aGUgY29tbW9uIGR1dHkgb2YKaHVtYW5pdHksIGJ1dCBieSBhIGNlcnRhaW4gcGFzc2lvbiBmb3IgdGhlIHRhc2sgdGhhdApvbmNlIHdhcyBoaXMsIHNpbmNlIG5vIG1hbiBkZXNpcmVzIHRoYXQgdGhlIGFydAp3aGVyZWluIGhlIHdhcyBvbmNlIHN1cHJlbWUgc2hvdWxkIHN1ZmZlciBkZWNheQpvciBkaW1pbnV0aW9uLjwvdHJhbnNsYXRpb24+"
translation['12.11.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBBbmQgd2hhdCBjYW4gYmUgbW9yZSBob25vdXJhYmxlCnRoYW4gdG8gdGVhY2ggdGhhdCB3aGljaCB5b3Uga25vdyBzdXJwYXNzaW5nIHdlbGw/Ckl0IHdhcyBmb3IgdGhpcyB0aGF0IHRoZSBlbGRlciBDYWVsaXVzIGJyb3VnaHQgaGlzIHNvbgp0byBDaWNlcm8sIGFzIHRoZSBsYXR0ZXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+cHJvIENhZWwuPC9oaT4gaXYuIDEwLjwvbm90ZT4gdGVsbHMgdXMsIGFuZCBpdCB3YXMgd2l0aCB0aGlzCmludGVudCB0aGF0IHRoZSBzYW1lIGdyZWF0IG9yYXRvciB0b29rIHVwb24gaGltc2VsZgp0aGUgZHV0aWVzIG9mIGluc3RydWN0b3IsIGFuZCB0cmFpbmVkIFBhbnNhLCBIaXJ0aXVzCmFuZCBEb2xhYmVsbGEgYnkgZGVjbGFpbWluZyBkYWlseSBiZWZvcmUgdGhlbSBvcgpoZWFyaW5nIHRoZW0gZGVjbGFpbS48aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJpdGFsaWNzIj5wcm8gQ2FlbC48L2hpPiBpdi4gMTAuPC90cmFuc2xhdGlvbj4="
translation['12.11.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPiBBbmQgSSBrbm93IG5vdCB3aGV0aGVyCndlIHNob3VsZCBub3QgZGVlbSBpdCB0aGUgaGFwcGllc3QgbW9tZW50IGluIGFuCm9yYXRvcidzIGxpZmUsIHdoZW4gaGUgaGFzIHJldGlyZWQgZnJvbSB0aGUgcHVibGljCmdhemUsIHRoZSBjb25zZWNyYXRlZCBwcmllc3Qgb2YgZWxvcXVlbmNlLCBmcmVlIGZyb20KZW52eSBhbmQgZmFyIGZyb20gc3RyaWZlLCB3aGVuIGhlIGhhcyBzZXQgaGlzIGdsb3J5Cm9uIGEgcGlubmFjbGUgYmV5b25kIHRoZSByZWFjaCBvZiBkZXRyYWN0aW9uLCBlbmpveXMsCndoaWxlIHN0aWxsIGxpdmluZywgdGhhdCB2ZW5lcmF0aW9uIHdoaWNoIG1vc3QgbWVuCndpbiBidXQgYWZ0ZXIgZGVhdGgsIGFuZCBzZWVzIGhvdyBncmVhdCBzaGFsbCBiZSBoaXMKcmVub3duIGFtaWQgZ2VuZXJhdGlvbnMgeWV0IHVuYm9ybi48cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkkgY2FuIHNheSB3aXRoIGEgZ29vZCBjb25zY2llbmNlIHRoYXQsIGFzIGZhciBhcwoKPHBiIGlkPSJwLjUwMSIgLz4KCm15IHBvb3IgcG93ZXJzIGhhdmUgcGVybWl0dGVkLCBJIGhhdmUgcHVibGlzaGVkCmZyYW5rbHkgYW5kIGRpc2ludGVyZXN0ZWRseSwgZm9yIHRoZSBiZW5lZml0IG9mIHN1Y2gKYXMgbWlnaHQgd2lzaCB0byBsZWFybiwgYWxsIHRoYXQgbXkgcHJldmlvdXMga25vd2xlZGdlIGFuZCB0aGUgcmVzZWFyY2hlcyBtYWRlIGZvciB0aGUgcHVycG9zZSBvZgp0aGlzIHdvcmsgbWlnaHQgc3VwcGx5LiBBbmQgdG8gaGF2ZSB0YXVnaHQgd2hhdApsaWUga25vd3MgaXMgc2F0aXNmYWN0aW9uIGVub3VnaCBmb3IgYW55IGdvb2QgbWFuLgo8bWlsZXN0b25lIG49IjkiIHVuaXQ9InNlY3Rpb24iIC8+SSBmZWFyLCBob3dldmVyLCB0aGF0IEkgbWF5IGJlIHJlZ2FyZGVkIGFzIHNldHRpbmcKdG9vIGxvZnR5IGFuIGlkZWFsIGZvciB0aGUgb3JhdG9yIGJ5IGluc2lzdGluZyB0aGF0IGhlCnNob3VsZCBiZSBhIGdvb2QgbWFuIHNraWxsZWQgaW4gc3BlYWtpbmcsIG9yIGFzCmltcG9zaW5nIHRvbyBtYW55IHN1YmplY3RzIG9mIHN0dWR5IG9uIHRoZSBsZWFybmVyLgpGb3IgaW4gYWRkaXRpb24gdG8gdGhlIG1hbnkgYnJhbmNoZXMgb2Yga25vd2xlZGdlCndoaWNoIGhhdmUgdG8gYmUgc3R1ZGllZCBpbiBib3lob29kIGFuZCB0aGUgdHJhZGl0aW9uYWwgcnVsZXMgb2YgZWxvcXVlbmNlLCBJIGhhdmUgZW5qb2luZWQgdGhlIHN0dWR5Cm9mIG1vcmFscyBhbmQgb2YgY2l2aWwgbGF3LCBzbyB0aGF0IEkgYW0gYWZyYWlkIHRoYXQKZXZlbiB0aG9zZSB3aG8gaGF2ZSByZWdhcmRlZCB0aGVzZSB0aGluZ3MgYXMKZXNzZW50aWFsIHRvIG15IHRoZW1lLCBtYXkgaGUgYXBwYWxsZWQgYXQgdGhlIGRlbGF5CndoaWNoIHRoZXkgaW1wb3NlIGFuZCBhYmFuZG9uIGFsbCBob3BlIG9mIGFjaGlldmVtZW50IGJlZm9yZSB0aGV5IGhhdmUgcHV0IG15IHByZWNlcHRzIHRvIHRoZSB0ZXN0Lgo8bWlsZXN0b25lIG49IjEwIiB1bml0PSJzZWN0aW9uIiAvPkkgd291bGQgYXNrIHRoZW0gdG8gY29uc2lkZXIgaG93IGdyZWF0IGFyZSB0aGUKcG93ZXJzIG9mIHRoZSBtaW5kIG9mIG1hbiBhbmQgaG93IGFzdG9uaXNoaW5nIGl0cwpjYXBhY2l0eSBmb3IgY2FycnlpbmcgaXRzIGRlc2lyZXMgaW50byBleGVjdXRpb246IGZvcgpoYXMgbm90IG1hbiBzdWNjZWVkZWQgaW4gY3Jvc3NpbmcgdGhlIGhpZ2ggc2VhcywgaW4KbGVhcm5pbmcgdGhlIG51bWJlciBhbmQgdGhlIGNvdXJzZXMgb2YgdGhlIHN0YXJzLAphbmQgYWxtb3N0IG1lYXN1cmluZyB0aGUgdW5pdmVyc2UgaXRzZWxmLCBhbGwgb2YgdGhlbQphY2NvbXBsaXNobWVudHMgb2YgbGVzcyBpbXBvcnRhbmNlIHRoYW4gb3JhdG9yeSwgYnV0Cm9mIGZhciBncmVhdGVyIGRpZmZpY3VsdHk/IEFuZCB0aGVuIGxldCB0aGVtIHJlZmxlY3QKb24gdGhlIGdyZWF0bmVzcyBvZicgdGhlaXIgYWltcyBhbmQgb24gdGhlIGZhY3QgdGhhdApubyBsYWJvdXIgc2hvdWxkIGJlIHRvbyBodWdlIGZvciB0aG9zZSB0aGF0IGFyZQpiZWNrb25lZCBieSB0aGUgaG9wZSBvZiBzdWNoIHJld2FyZC48bWlsZXN0b25lIG49IjExIiB1bml0PSJzZWN0aW9uIiAvPiBJZiB0aGV5IGNhbgpvbmx5IHJpc2UgdG8gdGhlIGhlaWdodCBvZiB0aGlzIGNvbmNlcHRpb24sIHRoZXkgd2lsbApmaW5kIGl0IGVhc2llciB0byBlbnRlciBvbiB0aGlzIHBvcnRpb24gb2YgdGhlaXIgdGFzaywKYW5kIHdpbGwgY2Vhc2UgdG8gcmVnYXJkIHRoZSByb2FkIGFzIGltcGFzc2FibGUgb3IKZXZlbiBoYXJkLiBGb3IgdGhlIGZpcnN0IGFuZCBncmVhdGVzdCBvZicgdGhlIGFpbXMKd2Ugc2V0IGJlZm9yZSB1cywgbmFtZWx5IHRoYXQgd2Ugc2hhbGwgYmUgZ29vZAoKPHBiIGlkPSJwLjUwMyIgLz4KCm1lbiwgZGVwZW5kcyBmb3IgaXRzIGFjaGlldmVtZW50IG1haW5seSBvbiB0aGUKd2lsbCB0byBzdWNjZWVkOiBhbmQgaGUgdGhhdCB0cnVseSBhbmQgc2luY2VyZWx5CmZvcm1zIHN1Y2ggcmVzb2x2ZSwgd2lsbCBlYXNpbHkgYWNxdWlyZSB0aG9zZSBmb3JtcwpvZiBrbm93bGVkZ2UgdGhhdCB0ZWFjaCB0aGUgd2F5IHRvIHZpcnR1ZS48bWlsZXN0b25lIG49IjEyIiB1bml0PSJzZWN0aW9uIiAvPiBGb3IKdGhlIHByZWNlcHRzIHRoYXQgYXJlIGVuam9pbmVkIHVwb24gdXMgYXJlIG5vdApzbyBjb21wbGV4IG9yIHNvIG51bWVyb3VzIHRoYXQgdGhleSBtYXkgYmUKYWNxdWlyZWQgYnkgbGl0dGxlIG1vcmUgdGhhbiBhIGZldyB5ZWFycycgc3R1ZHkuIEl0CmlzIHJlcHVnbmFuY2UgdG8gbGVhcm4gdGhhdCBtYWtlcyBzdWNoIGxhYm91ciBsb25nLgpGb3IgaWYgeW91IHdpbGwgb25seSBiZWxpZXZlIGl0LCB5b3Ugd2lsbCBxdWlja2x5IGxlYXJuCnRoZSBwcmluY2lwbGVzIHRoYXQgc2hhbGwgbGVhZCB5b3UgdG8gYSBsaWZlIG9mIHZpcnR1ZQphbmQgaGFwcGluZXNzLiBGb3IgbmF0dXJlIGJyb3VnaHQgdXMgaW50byB0aGUgd29ybGQKdGhhdCB3ZSBtaWdodCBhdHRhaW4gdG8gYWxsIGV4Y2VsbGVuY2Ugb2YgbWluZCwgYW5kCnNvIGVhc3kgaXMgaXQgZm9yIHRob3NlIHRvIGxlYXJuIHdobyBzZWVrIGZvciBiZXR0ZXIKdGhpbmdzLCB0aGF0IGhlIHdobyBkaXJlY3RzIGhpcyBnYXplIGFyaWdodCB3aWxsCnJhdGhlciBtYXJ2ZWwgdGhhdCB0aGUgYmFkIHNob3VsZCBiZSBzbyBtYW55LjxtaWxlc3RvbmUgbj0iMTMiIHVuaXQ9InNlY3Rpb24iIC8+IEZvcgphcyB3YXRlciBpcyB0aGUgbmF0dXJhbCBlbGVtZW50IG9mIGZpc2gsIGRyeSBsYW5kCmZvciBjcmVhdHVyZXMgb2YgdGhlIGVhcnRoIGFuZCB0aGUgY2lyY3VtYW1iaWVudAphdG1vc3BoZXJlIGZvciB3aW5nZWQgdGhpbmdzLCBldmVuIHNvIGl0IHNob3VsZApiZSBlYXNpZXIgdG8gbGl2ZSBhY2NvcmRpbmcgdG8gbmF0dXJlIHRoYW4gY291bnRlcgp0byBoZXIgd2lsbC4gQXMgcmVnYXJkcyBvdGhlciBhY2NvbXBsaXNobWVudHMsCnRoZXJlIGFyZSBwbGVudHkgb2YgeWVhcnMgYXZhaWxhYmxlIGZvciB0aGVpciBhY3F1aXNpdGlvbiwgZXZlbiB0aG91Z2ggd2UgbWVhc3VyZSB0aGUgbGlmZSBvZiBtYW4gbm90CmJ5IHRoZSBzcGFuIG9mIGFnZSwgYnV0IGJ5IHRoZSBwZXJpb2Qgb2YgeW91dGguIEZvcgppbiBldmVyeSBjYXNlIG9yZGVyIGFuZCBtZXRob2QgYW5kIGEgc2Vuc2Ugb2YgcHJvcG9ydGlvbiB3aWxsIHNob3J0ZW4gb3VyIGxhYm91ci48bWlsZXN0b25lIG49IjE0IiB1bml0PSJzZWN0aW9uIiAvPiBCdXQgdGhlIGNoaWVmIGZhdWx0CmxpZXMgd2l0aCBvdXIgdGVhY2hlcnMsIGluIHRoYXQgdGhleSBsb3ZlIHRvIGtlZXAgYmFjawp0aGUgcHVwaWxzIHRoZXkgaGF2ZSBtYW5hZ2VkIHRvIGxheSB0aGVpciBoYW5kcyBvbiwKcGFydGx5IGZyb20gdGhlIGRlc2lyZSB0byBkcmF3IHRoZWlyIG1pc2VyYWJsZSBmZWVzCmZvciBhcyBsb25nIGFzIHBvc3NpYmxlLCBwYXJ0bHkgb3V0IG9mIG9zdGVudGF0aW9uLCB0bwplbmhhbmNlIHRoZSBkaWZmaWN1bHR5IG9mIGFjcXVpcmluZyB0aGUga25vd2xlZGdlCndoaWNoIHRoZXkgcHJvbWlzZSB0byBpbXBhcnQsIGFuZCB0byBzb21lIGV4dGVudApvd2luZyB0byB0aGVpciBpZ25vcmFuY2Ugb3IgY2FyZWxlc3NuZXNzIGluIHRlYWNoaW5nLgpUaGUgbmV4dCBtb3N0IHNlcmlvdXMgZmF1bHQgbGllcyBpbiBvdXJzZWx2ZXMsIHdobwp0aGluayBpdCBiZXR0ZXIgdG8gbGluZ2VyIG92ZXIgd2hhdCB3ZSBoYXZlIGxlYXJuZWQKCjxwYiBpZD0icC41MDUiIC8+Cgp0aGFuIHRvIGxlYXJuIHdoYXQgd2UgZG8gbm90IHlldCBrbm93LjxtaWxlc3RvbmUgbj0iMTUiIHVuaXQ9InNlY3Rpb24iIC8+IEZvciBleGFtcGxlLCB0byByZXN0cmljdCBteSByZW1hcmtzIG1haW5seSB0byB0aGUgc3R1ZHkKb2YgcmhldG9yaWMsIHdoYXQgaXMgdGhlIHVzZSBvZiBzcGVuZGluZyBzbyBtYW55CnllYXJzLCBhZnRlciB0aGUgZmFzaGlvbiBub3cgc28gcHJldmFsZW50IChmb3IgSSB3aWxsCnNheSBub3RoaW5nIG9mIHRob3NlIHdobyBzcGVuZCBhbG1vc3QgdGhlaXIgd2hvbGUKbGl2ZXMpLCBpbiBkZWNsYWltaW5nIGluIHRoZSBzY2hvb2xzIGFuZCBkZXZvdGluZyBzbwptdWNoIGxhYm91ciB0byB0aGUgdHJlYXRtZW50IG9mIGZpY3RpdGlvdXMgdGhlbWVzLAp3aGVuIGl0IHdvdWxkIGJlIHBvc3NpYmxlIHdpdGggYnV0IHNsaWdodCBleHBlbmRpdHVyZQpvZiB0aW1lIHRvIGZvcm0gc29tZSBpZGVhIG9mIHdoYXQgdGhlIHRydWUgY29uZmxpY3RzCmFyZSBpbiB3aGljaCB0aGUgb3JhdG9yIG11c3QgZW5nYWdlLCBhbmQgb2YgdGhlCmxhd3Mgb2Ygc3BlYWtpbmcgd2hpY2ggaGUgb3VnaHQgdG8gZm9sbG93PzxtaWxlc3RvbmUgbj0iMTYiIHVuaXQ9InNlY3Rpb24iIC8+IEluCnNheWluZyB0aGlzLCBJIGRvIG5vdCBmb3IgYSBtb21lbnQgbWVhbiB0byBzdWdnZXN0CnRoYXQgd2Ugc2hvdWxkIGV2ZXIgb21pdCB0byBleGVyY2lzZSBvdXJzZWx2ZXMgaW4Kc3BlYWtpbmcuIEkgbWVyZWx5IHVyZ2UgdGhhdCB3ZSBzaG91bGQgbm90IGdyb3cgb2xkCm92ZXIgb25lIHNwZWNpYWwgZm9ybSBvZiBleGVyY2lzZS4gV2UgaGF2ZSBiZWVuIGluIGEKcG9zaXRpb24gdG8gYWNxdWlyZSB2YXJpZWQga25vd2xlZGdlLCB0byBmYW1pbGlhcmlzZQpvdXJzZWx2ZXMgd2l0aCB0aGUgcHJpbmNpcGxlcyB0aGF0IHNob3VsZCBndWlkZSBvdXIKbGlmZSwgYW5kIHRvIHRyeSBvdXIgc3RyZW5ndGggaW4gdGhlIGNvdXJ0cywgd2hpbGUgd2UKd2VyZSBzdGlsbCBhdHRlbmRpbmcgdGhlIHNjaG9vbHMuIFRoZSB0aGVvcnkgb2Ygc3BlYWtpbmcgaXMgb2Ygc3VjaCBhIG5hdHVyZSB0aGF0IGl0IGRvZXMgbm90IGRlbWFuZAptYW55IHllYXJzIGZvciBpdHMgYWNxdWlzaXRpb24uIEZvciBhbnkgb25lIG9mIHRoZQp2YXJpb3VzIGJyYW5jaGVzIG9mIGtub3dsZWRnZSB3aGljaCBJIGhhdmUgbWVudGlvbmVkIHdpbGwsIGFzIGEgcnVsZSwgYmUgZm91bmQgdG8gYmUgY29tcHJpc2VkIGluCmEgZmV3IHZvbHVtZXMsIGEgZmFjdCB3aGljaCBzaG93cyB0aGF0IGluc3RydWN0aW9uCmRvZXMgbm90IHJlcXVpcmUgYW4gaW5kZWZpbml0ZSBhbW91bnQgb2YgdGltZSB0byBiZQpkZXZvdGVkIHRvIGl0LiBUaGUgcmVzdCBkZXBlbmRzIGVudGlyZWx5IG9uIHByYWN0aWNlLAp3aGljaCBhdCBvbmNlIGRldmVsb3BzIG91ciBwb3dlcnMgYW5kIG1haW50YWlucwp0aGVtLCBvbmNlIGRldmVsb3BlZC48bWlsZXN0b25lIG49IjE3IiB1bml0PSJzZWN0aW9uIiAvPiBLbm93bGVkZ2UgaW5jcmVhc2VzIGRheQpieSBkYXksIGFuZCB5ZXQgaG93IG1hbnkgYm9va3MgaXMgaXQgYWJzb2x1dGVseQpuZWNlc3NhcnkgdG8gcmVhZCBpbiBvdXIgc2VhcmNoIGZvciBpdHMgYXR0YWlubWVudCwgZm9yCmV4YW1wbGVzIG9mIGZhY3RzIGZyb20gdGhlIGhpc3RvcmlhbnMgb3Igb2YgZWxvcXVlbmNlCmZyb20gdGhlIG9yYXRvcnMsIG9yLCBhZ2FpbiwgZm9yIHRoZSBvcGluaW9ucyBvZiB0aGUKcGhpbG9zb3BoZXJzIGFuZCB0aGUgbGF3eWVycywgdGhhdCBpcyB0byBzYXksIGlmIHdlCmFyZSBjb250ZW50IHRvIHJlYWQgbWVyZWx5IHdoYXQgaXMgdXNlZnVsIHdpdGhvdXQKCjxwYiBpZD0icC41MDciIC8+CgphdHRlbXB0aW5nIHRoZSBpbXBvc3NpYmxlIHRhc2sgb2YgcmVhZGluZyBldmVyeXRoaW5nPzxtaWxlc3RvbmUgbj0iMTgiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCBpdCBpcyBvdXJzZWx2ZXMgdGhhdCBtYWtlIHRoZSB0aW1lIGZvcgpzdHVkeSBzaG9ydDogZm9yIGhvdyBsaXR0bGUgdGltZSB3ZSBhbGxvdCB0byBpdCEKU29tZSBob3VycyBhcmUgcGFzc2VkIGluIHRoZSBmdXRpbGUgbGFib3VyIG9mIGNlcmVtb25pYWwgY2FsbHMsIG90aGVycyBpbiBpZGxlIGNoYXR0ZXIsIG90aGVycyBpbiBzdGFyaW5nCmF0IHRoZSBzaG93cyBvZiB0aGUgdGhlYXRyZSwgYW5kIG90aGVycyBhZ2FpbiBpbgpmZWFzdGluZy4gVG8gdGhpcyBhZGQgYWxsIHRoZSB2YXJpb3VzIGZvcm1zIG9mIGFtdXNlbWVudCwgdGhlIGluc2FuZSBhdHRlbnRpb24gZGV2b3RlZCB0byB0aGUgY3VsdGl2YXRpb24Kb2YgdGhlIGJvZHksIGpvdXJuZXlzIGFicm9hZCwgdmlzaXRzIHRvIHRoZSBjb3VudHJ5LAphbnhpb3VzIGNhbGN1bGF0aW9uIG9mIGxvc3MgYW5kIGdhaW4sIHRoZSBhbGx1cmVtZW50cwpvZiBsdXN0LCB3aW5lLWJpYmJpbmcgYW5kIHRob3NlIHJlbWFpbmluZyBob3Vycwp3aGljaCBhcmUgYWxsIHRvbyBmZXcgdG8gZ3JhdGlmeSBvdXIgc291bHMgb24gZmlyZQp3aXRoIHBhc3Npb24gZm9yIGV2ZXJ5IGtpbmQgb2YgcGxlYXN1cmUuPG1pbGVzdG9uZSBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz4gSWYgYWxsIHRoaXMKdGltZSB3ZXJlIHNwZW50IG9uIHN0dWR5LCBsaWZlIHdvdWxkIHNlZW0gbG9uZwplbm91Z2ggYW5kIHRoZXJlIHdvdWxkIGJlIHBsZW50eSBvZiB0aW1lIGZvciBsZWFybmluZywgZXZlbiB0aG91Z2ggd2Ugc2hvdWxkIHRha2UgdGhlIGhvdXJzIG9mIGRheWxpZ2h0IG9ubHkgaW50byBvdXIgYWNjb3VudCwgd2l0aG91dCBhc2tpbmcgYW55CmFzc2lzdGFuY2UgZnJvbSB0aGUgbmlnaHQsIG9mIHdoaWNoIG5vIGxpdHRsZSBzcGFjZQppcyBzdXBlcmZsdW91cyBldmVuIGZvciB0aGUgaGVhdmllc3Qgc2xlZXBlci4gQXMgaXQKaXMsIHdlIGNvdW50IG5vdCB0aGUgeWVhcnMgd2hpY2ggd2UgaGF2ZSBnaXZlbiB0bwpzdHVkeSwgYnV0IHRoZSB5ZWFycyB3ZSBoYXZlIGxpdmVkLjxtaWxlc3RvbmUgbj0iMjAiIHVuaXQ9InNlY3Rpb24iIC8+IEFuZCBpbmRlZWQKZXZlbiBhbHRob3VnaCBnZW9tZXRyaWNpYW5zLCBtdXNpY2lhbnMgYW5kIGdyYW1tYXJpYW5zLCB0b2dldGhlciB3aXRoIHRoZSBwcm9mZXNzb3JzIG9mIGV2ZXJ5IG90aGVyCmJyYW5jaCBvZiBrbm93bGVkZ2UsIHNwZW5kIGFsbCB0aGVpciBsaXZlcywgaG93ZXZlcgpsb25nLCBpbiB0aGUgc3R1ZHkgb2Ygb25lIHNpbmdsZSBzY2llbmNlLCBpdCBkb2VzIG5vdAp0aGVyZWZvcmUgZm9sbG93IHRoYXQgd2UgcmVxdWlyZSBzZXZlcmFsIGxpdmVzIG1vcmUKaWYgd2UgYXJlIHRvIGxlYXJuIG1vcmUuIEZvciB0aGV5IGRvIG5vdCBzcGVuZCBhbGwKdGhlaXIgZGF5cyBldmVuIHRvIG9sZCBhZ2UgaW4gbGVhcm5pbmcgdGhlc2UgdGhpbmdzLApidXQgYmVpbmcgY29udGVudCB0byBoYXZlIGxlYXJuZWQgdGhlc2UgdGhpbmdzIGFuZApub3RoaW5nIG1vcmUsIGV4aGF1c3QgdGhlaXIgbGVuZ3RoIG9mIHllYXJzIG5vdCBpbgphY3F1aXJpbmcsIGJ1dCBpbiBpbXBhcnRpbmcga25vd2xlZGdlLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['12.11.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkkgY2FuIHNheSB3aXRoIGEgZ29vZCBjb25zY2llbmNlIHRoYXQsIGFzIGZhciBhcwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNTAxIiAvPgoKbXkgcG9vciBwb3dlcnMgaGF2ZSBwZXJtaXR0ZWQsIEkgaGF2ZSBwdWJsaXNoZWQKZnJhbmtseSBhbmQgZGlzaW50ZXJlc3RlZGx5LCBmb3IgdGhlIGJlbmVmaXQgb2Ygc3VjaAphcyBtaWdodCB3aXNoIHRvIGxlYXJuLCBhbGwgdGhhdCBteSBwcmV2aW91cyBrbm93bGVkZ2UgYW5kIHRoZSByZXNlYXJjaGVzIG1hZGUgZm9yIHRoZSBwdXJwb3NlIG9mCnRoaXMgd29yayBtaWdodCBzdXBwbHkuIEFuZCB0byBoYXZlIHRhdWdodCB3aGF0CmxpZSBrbm93cyBpcyBzYXRpc2ZhY3Rpb24gZW5vdWdoIGZvciBhbnkgZ29vZCBtYW4uCjwvdHJhbnNsYXRpb24+"
translation['12.11.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkkgZmVhciwgaG93ZXZlciwgdGhhdCBJIG1heSBiZSByZWdhcmRlZCBhcyBzZXR0aW5nCnRvbyBsb2Z0eSBhbiBpZGVhbCBmb3IgdGhlIG9yYXRvciBieSBpbnNpc3RpbmcgdGhhdCBoZQpzaG91bGQgYmUgYSBnb29kIG1hbiBza2lsbGVkIGluIHNwZWFraW5nLCBvciBhcwppbXBvc2luZyB0b28gbWFueSBzdWJqZWN0cyBvZiBzdHVkeSBvbiB0aGUgbGVhcm5lci4KRm9yIGluIGFkZGl0aW9uIHRvIHRoZSBtYW55IGJyYW5jaGVzIG9mIGtub3dsZWRnZQp3aGljaCBoYXZlIHRvIGJlIHN0dWRpZWQgaW4gYm95aG9vZCBhbmQgdGhlIHRyYWRpdGlvbmFsIHJ1bGVzIG9mIGVsb3F1ZW5jZSwgSSBoYXZlIGVuam9pbmVkIHRoZSBzdHVkeQpvZiBtb3JhbHMgYW5kIG9mIGNpdmlsIGxhdywgc28gdGhhdCBJIGFtIGFmcmFpZCB0aGF0CmV2ZW4gdGhvc2Ugd2hvIGhhdmUgcmVnYXJkZWQgdGhlc2UgdGhpbmdzIGFzCmVzc2VudGlhbCB0byBteSB0aGVtZSwgbWF5IGhlIGFwcGFsbGVkIGF0IHRoZSBkZWxheQp3aGljaCB0aGV5IGltcG9zZSBhbmQgYWJhbmRvbiBhbGwgaG9wZSBvZiBhY2hpZXZlbWVudCBiZWZvcmUgdGhleSBoYXZlIHB1dCBteSBwcmVjZXB0cyB0byB0aGUgdGVzdC4KPC90cmFuc2xhdGlvbj4="
translation['12.11.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5JIHdvdWxkIGFzayB0aGVtIHRvIGNvbnNpZGVyIGhvdyBncmVhdCBhcmUgdGhlCnBvd2VycyBvZiB0aGUgbWluZCBvZiBtYW4gYW5kIGhvdyBhc3RvbmlzaGluZyBpdHMKY2FwYWNpdHkgZm9yIGNhcnJ5aW5nIGl0cyBkZXNpcmVzIGludG8gZXhlY3V0aW9uOiBmb3IKaGFzIG5vdCBtYW4gc3VjY2VlZGVkIGluIGNyb3NzaW5nIHRoZSBoaWdoIHNlYXMsIGluCmxlYXJuaW5nIHRoZSBudW1iZXIgYW5kIHRoZSBjb3Vyc2VzIG9mIHRoZSBzdGFycywKYW5kIGFsbW9zdCBtZWFzdXJpbmcgdGhlIHVuaXZlcnNlIGl0c2VsZiwgYWxsIG9mIHRoZW0KYWNjb21wbGlzaG1lbnRzIG9mIGxlc3MgaW1wb3J0YW5jZSB0aGFuIG9yYXRvcnksIGJ1dApvZiBmYXIgZ3JlYXRlciBkaWZmaWN1bHR5PyBBbmQgdGhlbiBsZXQgdGhlbSByZWZsZWN0Cm9uIHRoZSBncmVhdG5lc3Mgb2YnIHRoZWlyIGFpbXMgYW5kIG9uIHRoZSBmYWN0IHRoYXQKbm8gbGFib3VyIHNob3VsZCBiZSB0b28gaHVnZSBmb3IgdGhvc2UgdGhhdCBhcmUKYmVja29uZWQgYnkgdGhlIGhvcGUgb2Ygc3VjaCByZXdhcmQuPC90cmFuc2xhdGlvbj4="
translation['12.11.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gSWYgdGhleSBjYW4Kb25seSByaXNlIHRvIHRoZSBoZWlnaHQgb2YgdGhpcyBjb25jZXB0aW9uLCB0aGV5IHdpbGwKZmluZCBpdCBlYXNpZXIgdG8gZW50ZXIgb24gdGhpcyBwb3J0aW9uIG9mIHRoZWlyIHRhc2ssCmFuZCB3aWxsIGNlYXNlIHRvIHJlZ2FyZCB0aGUgcm9hZCBhcyBpbXBhc3NhYmxlIG9yCmV2ZW4gaGFyZC4gRm9yIHRoZSBmaXJzdCBhbmQgZ3JlYXRlc3Qgb2YnIHRoZSBhaW1zCndlIHNldCBiZWZvcmUgdXMsIG5hbWVseSB0aGF0IHdlIHNoYWxsIGJlIGdvb2QKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjUwMyIgLz4KCm1lbiwgZGVwZW5kcyBmb3IgaXRzIGFjaGlldmVtZW50IG1haW5seSBvbiB0aGUKd2lsbCB0byBzdWNjZWVkOiBhbmQgaGUgdGhhdCB0cnVseSBhbmQgc2luY2VyZWx5CmZvcm1zIHN1Y2ggcmVzb2x2ZSwgd2lsbCBlYXNpbHkgYWNxdWlyZSB0aG9zZSBmb3JtcwpvZiBrbm93bGVkZ2UgdGhhdCB0ZWFjaCB0aGUgd2F5IHRvIHZpcnR1ZS48L3RyYW5zbGF0aW9uPg=="
translation['12.11.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCnRoZSBwcmVjZXB0cyB0aGF0IGFyZSBlbmpvaW5lZCB1cG9uIHVzIGFyZSBub3QKc28gY29tcGxleCBvciBzbyBudW1lcm91cyB0aGF0IHRoZXkgbWF5IGJlCmFjcXVpcmVkIGJ5IGxpdHRsZSBtb3JlIHRoYW4gYSBmZXcgeWVhcnMnIHN0dWR5LiBJdAppcyByZXB1Z25hbmNlIHRvIGxlYXJuIHRoYXQgbWFrZXMgc3VjaCBsYWJvdXIgbG9uZy4KRm9yIGlmIHlvdSB3aWxsIG9ubHkgYmVsaWV2ZSBpdCwgeW91IHdpbGwgcXVpY2tseSBsZWFybgp0aGUgcHJpbmNpcGxlcyB0aGF0IHNoYWxsIGxlYWQgeW91IHRvIGEgbGlmZSBvZiB2aXJ0dWUKYW5kIGhhcHBpbmVzcy4gRm9yIG5hdHVyZSBicm91Z2h0IHVzIGludG8gdGhlIHdvcmxkCnRoYXQgd2UgbWlnaHQgYXR0YWluIHRvIGFsbCBleGNlbGxlbmNlIG9mIG1pbmQsIGFuZApzbyBlYXN5IGlzIGl0IGZvciB0aG9zZSB0byBsZWFybiB3aG8gc2VlayBmb3IgYmV0dGVyCnRoaW5ncywgdGhhdCBoZSB3aG8gZGlyZWN0cyBoaXMgZ2F6ZSBhcmlnaHQgd2lsbApyYXRoZXIgbWFydmVsIHRoYXQgdGhlIGJhZCBzaG91bGQgYmUgc28gbWFueS48L3RyYW5zbGF0aW9uPg=="
translation['12.11.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yCmFzIHdhdGVyIGlzIHRoZSBuYXR1cmFsIGVsZW1lbnQgb2YgZmlzaCwgZHJ5IGxhbmQKZm9yIGNyZWF0dXJlcyBvZiB0aGUgZWFydGggYW5kIHRoZSBjaXJjdW1hbWJpZW50CmF0bW9zcGhlcmUgZm9yIHdpbmdlZCB0aGluZ3MsIGV2ZW4gc28gaXQgc2hvdWxkCmJlIGVhc2llciB0byBsaXZlIGFjY29yZGluZyB0byBuYXR1cmUgdGhhbiBjb3VudGVyCnRvIGhlciB3aWxsLiBBcyByZWdhcmRzIG90aGVyIGFjY29tcGxpc2htZW50cywKdGhlcmUgYXJlIHBsZW50eSBvZiB5ZWFycyBhdmFpbGFibGUgZm9yIHRoZWlyIGFjcXVpc2l0aW9uLCBldmVuIHRob3VnaCB3ZSBtZWFzdXJlIHRoZSBsaWZlIG9mIG1hbiBub3QKYnkgdGhlIHNwYW4gb2YgYWdlLCBidXQgYnkgdGhlIHBlcmlvZCBvZiB5b3V0aC4gRm9yCmluIGV2ZXJ5IGNhc2Ugb3JkZXIgYW5kIG1ldGhvZCBhbmQgYSBzZW5zZSBvZiBwcm9wb3J0aW9uIHdpbGwgc2hvcnRlbiBvdXIgbGFib3VyLjwvdHJhbnNsYXRpb24+"
translation['12.11.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IHRoZSBjaGllZiBmYXVsdApsaWVzIHdpdGggb3VyIHRlYWNoZXJzLCBpbiB0aGF0IHRoZXkgbG92ZSB0byBrZWVwIGJhY2sKdGhlIHB1cGlscyB0aGV5IGhhdmUgbWFuYWdlZCB0byBsYXkgdGhlaXIgaGFuZHMgb24sCnBhcnRseSBmcm9tIHRoZSBkZXNpcmUgdG8gZHJhdyB0aGVpciBtaXNlcmFibGUgZmVlcwpmb3IgYXMgbG9uZyBhcyBwb3NzaWJsZSwgcGFydGx5IG91dCBvZiBvc3RlbnRhdGlvbiwgdG8KZW5oYW5jZSB0aGUgZGlmZmljdWx0eSBvZiBhY3F1aXJpbmcgdGhlIGtub3dsZWRnZQp3aGljaCB0aGV5IHByb21pc2UgdG8gaW1wYXJ0LCBhbmQgdG8gc29tZSBleHRlbnQKb3dpbmcgdG8gdGhlaXIgaWdub3JhbmNlIG9yIGNhcmVsZXNzbmVzcyBpbiB0ZWFjaGluZy4KVGhlIG5leHQgbW9zdCBzZXJpb3VzIGZhdWx0IGxpZXMgaW4gb3Vyc2VsdmVzLCB3aG8KdGhpbmsgaXQgYmV0dGVyIHRvIGxpbmdlciBvdmVyIHdoYXQgd2UgaGF2ZSBsZWFybmVkCgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC41MDUiIC8+Cgp0aGFuIHRvIGxlYXJuIHdoYXQgd2UgZG8gbm90IHlldCBrbm93LjwvdHJhbnNsYXRpb24+"
translation['12.11.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGV4YW1wbGUsIHRvIHJlc3RyaWN0IG15IHJlbWFya3MgbWFpbmx5IHRvIHRoZSBzdHVkeQpvZiByaGV0b3JpYywgd2hhdCBpcyB0aGUgdXNlIG9mIHNwZW5kaW5nIHNvIG1hbnkKeWVhcnMsIGFmdGVyIHRoZSBmYXNoaW9uIG5vdyBzbyBwcmV2YWxlbnQgKGZvciBJIHdpbGwKc2F5IG5vdGhpbmcgb2YgdGhvc2Ugd2hvIHNwZW5kIGFsbW9zdCB0aGVpciB3aG9sZQpsaXZlcyksIGluIGRlY2xhaW1pbmcgaW4gdGhlIHNjaG9vbHMgYW5kIGRldm90aW5nIHNvCm11Y2ggbGFib3VyIHRvIHRoZSB0cmVhdG1lbnQgb2YgZmljdGl0aW91cyB0aGVtZXMsCndoZW4gaXQgd291bGQgYmUgcG9zc2libGUgd2l0aCBidXQgc2xpZ2h0IGV4cGVuZGl0dXJlCm9mIHRpbWUgdG8gZm9ybSBzb21lIGlkZWEgb2Ygd2hhdCB0aGUgdHJ1ZSBjb25mbGljdHMKYXJlIGluIHdoaWNoIHRoZSBvcmF0b3IgbXVzdCBlbmdhZ2UsIGFuZCBvZiB0aGUKbGF3cyBvZiBzcGVha2luZyB3aGljaCBoZSBvdWdodCB0byBmb2xsb3c/PC90cmFuc2xhdGlvbj4="
translation['12.11.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz4gSW4Kc2F5aW5nIHRoaXMsIEkgZG8gbm90IGZvciBhIG1vbWVudCBtZWFuIHRvIHN1Z2dlc3QKdGhhdCB3ZSBzaG91bGQgZXZlciBvbWl0IHRvIGV4ZXJjaXNlIG91cnNlbHZlcyBpbgpzcGVha2luZy4gSSBtZXJlbHkgdXJnZSB0aGF0IHdlIHNob3VsZCBub3QgZ3JvdyBvbGQKb3ZlciBvbmUgc3BlY2lhbCBmb3JtIG9mIGV4ZXJjaXNlLiBXZSBoYXZlIGJlZW4gaW4gYQpwb3NpdGlvbiB0byBhY3F1aXJlIHZhcmllZCBrbm93bGVkZ2UsIHRvIGZhbWlsaWFyaXNlCm91cnNlbHZlcyB3aXRoIHRoZSBwcmluY2lwbGVzIHRoYXQgc2hvdWxkIGd1aWRlIG91cgpsaWZlLCBhbmQgdG8gdHJ5IG91ciBzdHJlbmd0aCBpbiB0aGUgY291cnRzLCB3aGlsZSB3ZQp3ZXJlIHN0aWxsIGF0dGVuZGluZyB0aGUgc2Nob29scy4gVGhlIHRoZW9yeSBvZiBzcGVha2luZyBpcyBvZiBzdWNoIGEgbmF0dXJlIHRoYXQgaXQgZG9lcyBub3QgZGVtYW5kCm1hbnkgeWVhcnMgZm9yIGl0cyBhY3F1aXNpdGlvbi4gRm9yIGFueSBvbmUgb2YgdGhlCnZhcmlvdXMgYnJhbmNoZXMgb2Yga25vd2xlZGdlIHdoaWNoIEkgaGF2ZSBtZW50aW9uZWQgd2lsbCwgYXMgYSBydWxlLCBiZSBmb3VuZCB0byBiZSBjb21wcmlzZWQgaW4KYSBmZXcgdm9sdW1lcywgYSBmYWN0IHdoaWNoIHNob3dzIHRoYXQgaW5zdHJ1Y3Rpb24KZG9lcyBub3QgcmVxdWlyZSBhbiBpbmRlZmluaXRlIGFtb3VudCBvZiB0aW1lIHRvIGJlCmRldm90ZWQgdG8gaXQuIFRoZSByZXN0IGRlcGVuZHMgZW50aXJlbHkgb24gcHJhY3RpY2UsCndoaWNoIGF0IG9uY2UgZGV2ZWxvcHMgb3VyIHBvd2VycyBhbmQgbWFpbnRhaW5zCnRoZW0sIG9uY2UgZGV2ZWxvcGVkLjwvdHJhbnNsYXRpb24+"
translation['12.11.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz4gS25vd2xlZGdlIGluY3JlYXNlcyBkYXkKYnkgZGF5LCBhbmQgeWV0IGhvdyBtYW55IGJvb2tzIGlzIGl0IGFic29sdXRlbHkKbmVjZXNzYXJ5IHRvIHJlYWQgaW4gb3VyIHNlYXJjaCBmb3IgaXRzIGF0dGFpbm1lbnQsIGZvcgpleGFtcGxlcyBvZiBmYWN0cyBmcm9tIHRoZSBoaXN0b3JpYW5zIG9yIG9mIGVsb3F1ZW5jZQpmcm9tIHRoZSBvcmF0b3JzLCBvciwgYWdhaW4sIGZvciB0aGUgb3BpbmlvbnMgb2YgdGhlCnBoaWxvc29waGVycyBhbmQgdGhlIGxhd3llcnMsIHRoYXQgaXMgdG8gc2F5LCBpZiB3ZQphcmUgY29udGVudCB0byByZWFkIG1lcmVseSB3aGF0IGlzIHVzZWZ1bCB3aXRob3V0Cgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC41MDciIC8+CgphdHRlbXB0aW5nIHRoZSBpbXBvc3NpYmxlIHRhc2sgb2YgcmVhZGluZyBldmVyeXRoaW5nPzwvdHJhbnNsYXRpb24+"
translation['12.11.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGl0IGlzIG91cnNlbHZlcyB0aGF0IG1ha2UgdGhlIHRpbWUgZm9yCnN0dWR5IHNob3J0OiBmb3IgaG93IGxpdHRsZSB0aW1lIHdlIGFsbG90IHRvIGl0IQpTb21lIGhvdXJzIGFyZSBwYXNzZWQgaW4gdGhlIGZ1dGlsZSBsYWJvdXIgb2YgY2VyZW1vbmlhbCBjYWxscywgb3RoZXJzIGluIGlkbGUgY2hhdHRlciwgb3RoZXJzIGluIHN0YXJpbmcKYXQgdGhlIHNob3dzIG9mIHRoZSB0aGVhdHJlLCBhbmQgb3RoZXJzIGFnYWluIGluCmZlYXN0aW5nLiBUbyB0aGlzIGFkZCBhbGwgdGhlIHZhcmlvdXMgZm9ybXMgb2YgYW11c2VtZW50LCB0aGUgaW5zYW5lIGF0dGVudGlvbiBkZXZvdGVkIHRvIHRoZSBjdWx0aXZhdGlvbgpvZiB0aGUgYm9keSwgam91cm5leXMgYWJyb2FkLCB2aXNpdHMgdG8gdGhlIGNvdW50cnksCmFueGlvdXMgY2FsY3VsYXRpb24gb2YgbG9zcyBhbmQgZ2FpbiwgdGhlIGFsbHVyZW1lbnRzCm9mIGx1c3QsIHdpbmUtYmliYmluZyBhbmQgdGhvc2UgcmVtYWluaW5nIGhvdXJzCndoaWNoIGFyZSBhbGwgdG9vIGZldyB0byBncmF0aWZ5IG91ciBzb3VscyBvbiBmaXJlCndpdGggcGFzc2lvbiBmb3IgZXZlcnkga2luZCBvZiBwbGVhc3VyZS48L3RyYW5zbGF0aW9uPg=="
translation['12.11.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz4gSWYgYWxsIHRoaXMKdGltZSB3ZXJlIHNwZW50IG9uIHN0dWR5LCBsaWZlIHdvdWxkIHNlZW0gbG9uZwplbm91Z2ggYW5kIHRoZXJlIHdvdWxkIGJlIHBsZW50eSBvZiB0aW1lIGZvciBsZWFybmluZywgZXZlbiB0aG91Z2ggd2Ugc2hvdWxkIHRha2UgdGhlIGhvdXJzIG9mIGRheWxpZ2h0IG9ubHkgaW50byBvdXIgYWNjb3VudCwgd2l0aG91dCBhc2tpbmcgYW55CmFzc2lzdGFuY2UgZnJvbSB0aGUgbmlnaHQsIG9mIHdoaWNoIG5vIGxpdHRsZSBzcGFjZQppcyBzdXBlcmZsdW91cyBldmVuIGZvciB0aGUgaGVhdmllc3Qgc2xlZXBlci4gQXMgaXQKaXMsIHdlIGNvdW50IG5vdCB0aGUgeWVhcnMgd2hpY2ggd2UgaGF2ZSBnaXZlbiB0bwpzdHVkeSwgYnV0IHRoZSB5ZWFycyB3ZSBoYXZlIGxpdmVkLjwvdHJhbnNsYXRpb24+"
translation['12.11.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz4gQW5kIGluZGVlZApldmVuIGFsdGhvdWdoIGdlb21ldHJpY2lhbnMsIG11c2ljaWFucyBhbmQgZ3JhbW1hcmlhbnMsIHRvZ2V0aGVyIHdpdGggdGhlIHByb2Zlc3NvcnMgb2YgZXZlcnkgb3RoZXIKYnJhbmNoIG9mIGtub3dsZWRnZSwgc3BlbmQgYWxsIHRoZWlyIGxpdmVzLCBob3dldmVyCmxvbmcsIGluIHRoZSBzdHVkeSBvZiBvbmUgc2luZ2xlIHNjaWVuY2UsIGl0IGRvZXMgbm90CnRoZXJlZm9yZSBmb2xsb3cgdGhhdCB3ZSByZXF1aXJlIHNldmVyYWwgbGl2ZXMgbW9yZQppZiB3ZSBhcmUgdG8gbGVhcm4gbW9yZS4gRm9yIHRoZXkgZG8gbm90IHNwZW5kIGFsbAp0aGVpciBkYXlzIGV2ZW4gdG8gb2xkIGFnZSBpbiBsZWFybmluZyB0aGVzZSB0aGluZ3MsCmJ1dCBiZWluZyBjb250ZW50IHRvIGhhdmUgbGVhcm5lZCB0aGVzZSB0aGluZ3MgYW5kCm5vdGhpbmcgbW9yZSwgZXhoYXVzdCB0aGVpciBsZW5ndGggb2YgeWVhcnMgbm90IGluCmFjcXVpcmluZywgYnV0IGluIGltcGFydGluZyBrbm93bGVkZ2UuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjEiIHVuaXQ9InNlY3Rpb24iIC8+SG93ZXZlciwgdG8gc2F5IG5vdGhpbmcgb2YgSG9tZXIsIGluIHdob20gd2UKbWF5IGZpbmQgZWl0aGVyIHRoZSBwZXJmZWN0IGFjaGlldmVtZW50cywgb3IgYXQKYW55IHJhdGUgY2xlYXIgc2lnbnMgb2YgdGhlIGtub3dsZWRnZSBvZiBldmVyeSBhcnQsCgo8cGIgaWQ9InAuNTA5IiAvPgoKYW5kIHRvIHBhc3MgYnkgSGlwcGlhcyBvZiBFbGlzLCB3aG8gbm90IG1lcmVseQpib2FzdGVkIGhpcyBrbm93bGVkZ2Ugb2YgdGhlIGxpYmVyYWwgYXJ0cywgYnV0IHdvcmUKYSByb2JlLCBhIHJpbmcgYW5kIHNob2VzLCBhbGwgb2Ygd2hpY2ggaGUgaGFkIG1hZGUKd2l0aCBoaXMgb3duIGhhbmRzLCBhbmQgaGFkIHRyYWluZWQgaGltc2VsZiB0byBiZQppbmRlcGVuZGVudCBvZiBleHRlcm5hbCBhc3Npc3RhbmNlLCB3ZSBhY2NlcHQgdGhlCnVuaXZlcnNhbCB0cmFkaXRpb24gb2YgR3JlZWNlIHRvIHRoZSBlZmZlY3QgdGhhdApHb3JnaWFzLCB0cml1bXBoYW50IG92ZXIgYWxsIHRoZSBjb3VudGxlc3MgaWxscyBpbmNpZGVudCB0byBleHRyZW1lIG9sZCBhZ2UsIHdvdWxkIGJpZCBoaXMgaGVhcmVycwpwcm9wb3VuZCBhbnkgcXVlc3Rpb25zIHRoZXkgcGxlYXNlZCBmb3IgaGltIHRvCmFuc3dlci48bWlsZXN0b25lIG49IjIyIiB1bml0PSJzZWN0aW9uIiAvPiBBZ2FpbiBpbiB3aGF0IGJyYW5jaCBvZiBrbm93bGVkZ2UKd29ydGh5IG9mIGxpdGVyYXJ5IGV4cHJlc3Npb24gd2FzIFBsYXRvIGRlZmljaWVudD8KSG93IG1hbnkgZ2VuZXJhdGlvbnMnIHN0dWR5IGRpZCBBcmlzdG90bGUgcmVxdWlyZSB0byBlbWJyYWNlIG5vdCBtZXJlbHkgdGhlIHdob2xlIHJhbmdlIG9mCnBoaWxvc29waGljYWwgYW5kIHJoZXRvcmljYWwga25vd2xlZGdlLCBidXQgdG8KaW52ZXN0aWdhdGUgdGhlIG5hdHVyZSBvZiBldmVyeSBiZWFzdCBhbmQgcGxhbnQuCkFuZCB5ZXQgdGhleSBoYWQgdG8gZGlzY292ZXIgYWxsIHRoZXNlIHRoaW5ncyB3aGljaAp3ZSBvbmx5IGhhdmUgdG8gbGVhcm4uIEFudGlxdWl0eSBoYXMgZ2l2ZW4gdXMgYWxsCnRoZXNlIHRlYWNoZXJzIGFuZCBhbGwgdGhlc2UgcGF0dGVybnMgZm9yIG91ciBpbWl0YXRpb24sCnRoYXQgdGhlcmUgbWlnaHQgYmUgbm8gZ3JlYXRlciBoYXBwaW5lc3MgY29uY2VpdmFibGUKdGhhbiB0byBiZSBib3JuIGluIHRoaXMgYWdlIGFib3ZlIGFsbCBvdGhlcnMsIHNpbmNlCmFsbCBwcmV2aW91cyBhZ2VzIGhhdmUgdG9pbGVkIHRoYXQgd2UgbWlnaHQgcmVhcCB0aGUKZnJ1aXQgb2YgdGhlaXIgd2lzZG9tLjxtaWxlc3RvbmUgbj0iMjMiIHVuaXQ9InNlY3Rpb24iIC8+IE1hcmN1cyBDYXRvIHdhcyBhdCBvbmNlIGEKZ3JlYXQgZ2VuZXJhbCwgYSBwaGlsb3NvcGhlciwgb3JhdG9yLCBoaXN0b3JpYW4sIGFuZAphbiBleHBlcnQgYm90aCBpbiBsYXcgYW5kIGFncmljdWx0dXJlLCBhbmQgZGVzcGl0ZQpoaXMgbWlsaXRhcnkgbGFib3VycyBhYnJvYWQgYW5kIHRoZSBkaXN0cmFjdGlvbnMgb2YKcG9saXRpY2FsIHN0cnVnZ2xlcyBhdCBob21lLCBhbmQgZGVzcGl0ZSB0aGUgcnVkZW5lc3MKb2YgdGhlIGFnZSBpbiB3aGljaCBoZSBsaXZlZCwgaGUgbm9uZSB0aGUgbGVzcwpsZWFybmVkIEdyZWVrLCB3aGVuIGZhciBhZHZhbmNlZCBpbiB5ZWFycywgdGhhdCBoZQptaWdodCBwcm92ZSB0byBtYW5raW5kIHRoYXQgZXZlbiBvbGQgbWVuIGFyZQpjYXBhYmxlIG9mIGxlYXJuaW5nIHRoYXQgb24gd2hpY2ggdGhleSBoYXZlIHNldAp0aGVpciBoZWFydHMuPG1pbGVzdG9uZSBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz4gSG93IHdpZGUsIGFsbW9zdCB1bml2ZXJzYWwsIHdhcyB0aGUKa25vd2xlZGdlIHRoYXQgVmFycm8gY29tbXVuaWNhdGVkIHRvIHRoZSB3b3JsZCEKV2hhdCBvZiBhbGwgdGhhdCBnb2VzIHRvIG1ha2UgdXAgdGhlIGVxdWlwbWVudCBvZgphbiBvcmF0b3Igd2FzIGxhY2tpbmcgdG8gQ2ljZXJvPyBXaHkgc2hvdWxkIEkgc2F5Cgo8cGIgaWQ9InAuNTExIiAvPgoKbW9yZSwgc2luY2UgZXZlbiBDb3JuZWxpdXMgQ2Vsc3VzLCBhIG1hbiBvZiB2ZXJ5Cm9yZGluYXJ5IGFiaWxpdHksIG5vdCBtZXJlbHkgd3JvdGUgYWJvdXQgcmhldG9yaWMgaW4KYWxsIGl0cyBkZXBhcnRtZW50cywgYnV0IGxlZnQgdHJlYXRpc2VzIG9uIHRoZSBhcnQgb2YKd2FyLCBhZ3JpY3VsdHVyZSBhbmQgbWVkaWNpbmUgYXMgd2VsbC4gSW5kZWVkIHRoZQpoaWdoIGFtYml0aW9uIHJldmVhbGVkIGJ5IGhpcyBkZXNpZ24gZ2l2ZXMgaGltIHRoZQpyaWdodCB0byBhc2sgdXMgdG8gYmVsaWV2ZSB0aGF0IGhlIHdhcyBhY3F1YWludGVkCndpdGggYWxsIHRoZXNlIHN1YmplY3RzLjwvcD4KPC90cmFuc2xhdGlvbj4="
translation['12.11.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5Ib3dldmVyLCB0byBzYXkgbm90aGluZyBvZiBIb21lciwgaW4gd2hvbSB3ZQptYXkgZmluZCBlaXRoZXIgdGhlIHBlcmZlY3QgYWNoaWV2ZW1lbnRzLCBvciBhdAphbnkgcmF0ZSBjbGVhciBzaWducyBvZiB0aGUga25vd2xlZGdlIG9mIGV2ZXJ5IGFydCwKCjxwYiBjbGFzcz0idHJhbnNsYXRpb24iIGlkPSJwLjUwOSIgLz4KCmFuZCB0byBwYXNzIGJ5IEhpcHBpYXMgb2YgRWxpcywgd2hvIG5vdCBtZXJlbHkKYm9hc3RlZCBoaXMga25vd2xlZGdlIG9mIHRoZSBsaWJlcmFsIGFydHMsIGJ1dCB3b3JlCmEgcm9iZSwgYSByaW5nIGFuZCBzaG9lcywgYWxsIG9mIHdoaWNoIGhlIGhhZCBtYWRlCndpdGggaGlzIG93biBoYW5kcywgYW5kIGhhZCB0cmFpbmVkIGhpbXNlbGYgdG8gYmUKaW5kZXBlbmRlbnQgb2YgZXh0ZXJuYWwgYXNzaXN0YW5jZSwgd2UgYWNjZXB0IHRoZQp1bml2ZXJzYWwgdHJhZGl0aW9uIG9mIEdyZWVjZSB0byB0aGUgZWZmZWN0IHRoYXQKR29yZ2lhcywgdHJpdW1waGFudCBvdmVyIGFsbCB0aGUgY291bnRsZXNzIGlsbHMgaW5jaWRlbnQgdG8gZXh0cmVtZSBvbGQgYWdlLCB3b3VsZCBiaWQgaGlzIGhlYXJlcnMKcHJvcG91bmQgYW55IHF1ZXN0aW9ucyB0aGV5IHBsZWFzZWQgZm9yIGhpbSB0bwphbnN3ZXIuPC90cmFuc2xhdGlvbj4="
translation['12.11.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz4gQWdhaW4gaW4gd2hhdCBicmFuY2ggb2Yga25vd2xlZGdlCndvcnRoeSBvZiBsaXRlcmFyeSBleHByZXNzaW9uIHdhcyBQbGF0byBkZWZpY2llbnQ/CkhvdyBtYW55IGdlbmVyYXRpb25zJyBzdHVkeSBkaWQgQXJpc3RvdGxlIHJlcXVpcmUgdG8gZW1icmFjZSBub3QgbWVyZWx5IHRoZSB3aG9sZSByYW5nZSBvZgpwaGlsb3NvcGhpY2FsIGFuZCByaGV0b3JpY2FsIGtub3dsZWRnZSwgYnV0IHRvCmludmVzdGlnYXRlIHRoZSBuYXR1cmUgb2YgZXZlcnkgYmVhc3QgYW5kIHBsYW50LgpBbmQgeWV0IHRoZXkgaGFkIHRvIGRpc2NvdmVyIGFsbCB0aGVzZSB0aGluZ3Mgd2hpY2gKd2Ugb25seSBoYXZlIHRvIGxlYXJuLiBBbnRpcXVpdHkgaGFzIGdpdmVuIHVzIGFsbAp0aGVzZSB0ZWFjaGVycyBhbmQgYWxsIHRoZXNlIHBhdHRlcm5zIGZvciBvdXIgaW1pdGF0aW9uLAp0aGF0IHRoZXJlIG1pZ2h0IGJlIG5vIGdyZWF0ZXIgaGFwcGluZXNzIGNvbmNlaXZhYmxlCnRoYW4gdG8gYmUgYm9ybiBpbiB0aGlzIGFnZSBhYm92ZSBhbGwgb3RoZXJzLCBzaW5jZQphbGwgcHJldmlvdXMgYWdlcyBoYXZlIHRvaWxlZCB0aGF0IHdlIG1pZ2h0IHJlYXAgdGhlCmZydWl0IG9mIHRoZWlyIHdpc2RvbS48L3RyYW5zbGF0aW9uPg=="
translation['12.11.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz4gTWFyY3VzIENhdG8gd2FzIGF0IG9uY2UgYQpncmVhdCBnZW5lcmFsLCBhIHBoaWxvc29waGVyLCBvcmF0b3IsIGhpc3RvcmlhbiwgYW5kCmFuIGV4cGVydCBib3RoIGluIGxhdyBhbmQgYWdyaWN1bHR1cmUsIGFuZCBkZXNwaXRlCmhpcyBtaWxpdGFyeSBsYWJvdXJzIGFicm9hZCBhbmQgdGhlIGRpc3RyYWN0aW9ucyBvZgpwb2xpdGljYWwgc3RydWdnbGVzIGF0IGhvbWUsIGFuZCBkZXNwaXRlIHRoZSBydWRlbmVzcwpvZiB0aGUgYWdlIGluIHdoaWNoIGhlIGxpdmVkLCBoZSBub25lIHRoZSBsZXNzCmxlYXJuZWQgR3JlZWssIHdoZW4gZmFyIGFkdmFuY2VkIGluIHllYXJzLCB0aGF0IGhlCm1pZ2h0IHByb3ZlIHRvIG1hbmtpbmQgdGhhdCBldmVuIG9sZCBtZW4gYXJlCmNhcGFibGUgb2YgbGVhcm5pbmcgdGhhdCBvbiB3aGljaCB0aGV5IGhhdmUgc2V0CnRoZWlyIGhlYXJ0cy48L3RyYW5zbGF0aW9uPg=="
translation['12.11.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz4gSG93IHdpZGUsIGFsbW9zdCB1bml2ZXJzYWwsIHdhcyB0aGUKa25vd2xlZGdlIHRoYXQgVmFycm8gY29tbXVuaWNhdGVkIHRvIHRoZSB3b3JsZCEKV2hhdCBvZiBhbGwgdGhhdCBnb2VzIHRvIG1ha2UgdXAgdGhlIGVxdWlwbWVudCBvZgphbiBvcmF0b3Igd2FzIGxhY2tpbmcgdG8gQ2ljZXJvPyBXaHkgc2hvdWxkIEkgc2F5Cgo8cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC41MTEiIC8+Cgptb3JlLCBzaW5jZSBldmVuIENvcm5lbGl1cyBDZWxzdXMsIGEgbWFuIG9mIHZlcnkKb3JkaW5hcnkgYWJpbGl0eSwgbm90IG1lcmVseSB3cm90ZSBhYm91dCByaGV0b3JpYyBpbgphbGwgaXRzIGRlcGFydG1lbnRzLCBidXQgbGVmdCB0cmVhdGlzZXMgb24gdGhlIGFydCBvZgp3YXIsIGFncmljdWx0dXJlIGFuZCBtZWRpY2luZSBhcyB3ZWxsLiBJbmRlZWQgdGhlCmhpZ2ggYW1iaXRpb24gcmV2ZWFsZWQgYnkgaGlzIGRlc2lnbiBnaXZlcyBoaW0gdGhlCnJpZ2h0IHRvIGFzayB1cyB0byBiZWxpZXZlIHRoYXQgaGUgd2FzIGFjcXVhaW50ZWQKd2l0aCBhbGwgdGhlc2Ugc3ViamVjdHMuPHAgY2xhc3M9InRyYW5zbGF0aW9uIj48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjUiIHVuaXQ9InNlY3Rpb24iIC8+QnV0LCBpdCB3aWxsIGJlIHVyZ2VkLCB0byBjYXJyeSBvdXQgc3VjaCBhIHRhc2sgaXMKZGlmZmljdWx0IGFuZCBoYXMgbmV2ZXIgYmVlbiBhY2NvbXBsaXNoZWQuIFRvCndoaWNoIEkgcmVwbHkgdGhhdCBzdWZmaWNpZW50IGVuY291cmFnZW1lbnQgZm9yCnN0dWR5IG1heSBiZSBmb3VuZCBpbiB0aGUgZmFjdCwgZmlyc3RseSwgdGhhdCBuYXR1cmUKZG9lcyBub3QgZm9yYmlkIHN1Y2ggYWNoaWV2ZW1lbnQgYW5kIGl0IGRvZXMgbm90CmZvbGxvdyB0aGF0LCBiZWNhdXNlIGEgdGhpbmcgbmV2ZXIgaGFzIGJlZW4gZG9uZSwgaXQKdGhlcmVmb3JlIG5ldmVyIGNhbiBiZSBkb25lLCBhbmQgc2Vjb25kbHksIHRoYXQgYWxsCmdyZWF0IGFjaGlldmVtZW50cyBoYXZlIHJlcXVpcmVkIHRpbWUgZm9yIHRoZWlyIGZpcnN0CmFjY29tcGxpc2htZW50LjxtaWxlc3RvbmUgbj0iMjYiIHVuaXQ9InNlY3Rpb24iIC8+IFBvZXRyeSBoYXMgcmlzZW4gdG8gdGhlIGhlaWdodHMKb2YgZ2xvcnksIHRoYW5rcyB0byB0aGUgZWZmb3J0cyBvZiBwb2V0cyBzbyBmYXIgYXBhcnQKYXMgSG9tZXIgYW5kIFZpcmdpbCwgYW5kIG9yYXRvcnkgb3dlcyBpdHMgcG9zaXRpb24KdG8gdGhlIGdlbml1cyBvZiBEZW1vc3RoZW5lcyBhbmQgQ2ljZXJvLiBGaW5hbGx5LAp3aGF0ZXZlciBpcyBiZXN0IGluIGl0cyBvd24gc3BoZXJlIG11c3QgYXQgc29tZQpwcmV2aW91cyB0aW1lIGhhdmUgYmVlbiBub24tZXhpc3RlbnQuIEJ1dCBldmVuIGlmCmEgbWFuIGRlc3BhaXIgb2YgcmVhY2hpbmcgc3VwcmVtZSBleGNlbGxlbmNlIChhbmQKd2h5IHNob3VsZCBoZSBkZXNwYWlyLCBpZiBoZSBoYXZlIHRhbGVudHMsIGhlYWx0aCwKY2FwYWNpdHkgYW5kIHRlYWNoZXJzIHRvIGFpZCBoaW0/KSwgaXQgaXMgbm9uZSB0aGUKbGVzcyBhIGZpbmUgYWNoaWV2ZW1lbnQsIGFzIENpY2Vybzxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCI+PGhpIHJlbmQ9Iml0YWxpY3MiPk9yLjwvaGk+IGkuIDQuPC9ub3RlPiBzYXlzLCB0byB3aW4gdGhlCnJhbmsgb2Ygc2Vjb25kIG9yIGV2ZW4gdGhpcmQuPG1pbGVzdG9uZSBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGV2ZW4gaWYgYSBzb2xkaWVyCmNhbm5vdCBhY2hpZXZlIHRoZSBnbG9yeSBvZiBBY2hpbGxlcyBpbiB3YXIsIGhlIHdpbGwKbm90IGRlc3Bpc2UgZmFtZSBzdWNoIGFzIGZlbGwgdG8gdGhlIGxvdCBvZiBBamF4IGFuZApEaW9tZWRlLCB3aGlsZSB0aG9zZSB3aG8gY2Fubm90IGJlIEhvbWVycyBtYXkKYmUgY29udGVudCB0byByZWFjaCB0aGUgbGV2ZWwgb2YgVHlydGFldXMuIE5heSwgaWYKbWVuIGhhZCBiZWVuIG9ic2Vzc2VkIGJ5IHRoZSBjb252aWN0aW9uIHRoYXQgaXQgd2FzCmltcG9zc2libGUgdG8gc3VycGFzcyB0aGUgbWFuIHdobyBoYWQgc28gZmFyIHNob3duCmhpbXNlbGYgYmVzdCwgdGhvc2Ugd2hvbSB3ZSBub3cgcmVnYXJkIGFzIGJlc3QKd291bGQgbmV2ZXIgaGF2ZSByZWFjaGVkIHN1Y2ggZGlzdGluY3Rpb24sIEx1Y3JldGl1cwoKPHBiIGlkPSJwLjUxMyIgLz4KCmFuZCBNYWNlciB3b3VsZCBuZXZlciBoYXZlIGJlZW4gc3VjY2VlZGVkIGJ5ClZpcmdpbCwgbm9yIENyYXNzdXMgYW5kIEhvcnRlbnNpdXMgYnkgQ2ljZXJvLCBub3IKdGhleSBpbiB0aGVpciB0dXJuIGJ5IHRob3NlIHdobyBmbG91cmlzaGVkIGFmdGVyCnRoZW0uPG1pbGVzdG9uZSBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGV2ZW4gdGhvdWdoIHdlIGNhbm5vdCBob3BlIHRvIHN1cnBhc3MKdGhlIGdyZWF0LCBpdCBpcyBzdGlsbCBhIGhpZ2ggaG9ub3VyIHRvIGZvbGxvdyBpbiB0aGVpcgpmb290c3RlcHMuIERpZCBQb2xsaW8gYW5kIE1lc3NhbGEsIHdobyBiZWdhbiB0bwpwbGVhZCB3aGVuIENpY2VybyBoZWxkIHRoZSBjaXRhZGVsIG9mIGVsb3F1ZW5jZSwKZmFpbCB0byBvYnRhaW4gc3VmZmljaWVudCBob25vdXIgaW4gdGhlaXIgbGlmZXRpbWUgb3IKdG8gaGFuZCBkb3duIGEgZmFpciBuYW1lIHRvIHBvc3Rlcml0eT8gVGhlIGFydHMKd2hpY2ggaGF2ZSBiZWVuIGRldmVsb3BlZCB0byB0aGUgaGlnaGVzdCBwaXRjaApvZiBleGNlbGxlbmNlIHdvdWxkIGRlc2VydmUgYnV0IGlsbCBvZiBtYW5raW5kIGlmCnRoYXQgd2hpY2ggd2FzIGJlc3QgaGFkIGFsc28gYmVlbiB0aGUgbGFzdCBvZiBpdHMKbGluZS48bWlsZXN0b25lIG49IjI5IiB1bml0PSJzZWN0aW9uIiAvPiBBZGQgdG8gdGhpcyB0aGUgZnVydGhlciBjb25zaWRlcmF0aW9uIHRoYXQKZXZlbiBtb2RlcmF0ZSBlbG9xdWVuY2UgaXMgb2Z0ZW4gcHJvZHVjdGl2ZSBvZgpncmVhdCByZXN1bHRzIGFuZCwgaWYgc3VjaCBzdHVkaWVzIGFyZSB0byBiZSBtZWFzdXJlZApzb2xlbHkgYnkgdGhlaXIgdXRpbGl0eSwgaXMgYWxtb3N0IGVxdWFsIHRvIHRoZSBwZXJmZWN0CmVsb3F1ZW5jZSBmb3Igd2hpY2ggd2Ugc2Vlay4gTm9yIHdvdWxkIGl0IGJlIGRpZmZpY3VsdAp0byBwcm9kdWNlIGVpdGhlciBhbmNpZW50IG9yIHJlY2VudCBleGFtcGxlcyB0byBzaG93CnRoYXQgdGhlcmUgaXMgbm8gb3RoZXIgc291cmNlIGZyb20gd2hpY2ggbWVuIGhhdmUKcmVhcGVkIHN1Y2ggYSBoYXJ2ZXN0IG9mIHdlYWx0aCwgaG9ub3VyLCBmcmllbmRzaGlwCmFuZCBnbG9yeSwgYm90aCBwcmVzZW50IGFuZCB0byBjb21lLiBCdXQgaXQgd291bGQKYmUgYSBkaXNncmFjZSB0byBsZWFybmluZyB0byBmb2xsb3cgdGhlIGZhc2hpb24gb2YgdGhvc2UKd2hvIHNheSB0aGF0IHRoZXkgcHVyc3VlIG5vdCB2aXJ0dWUsIGJ1dCBvbmx5IHRoZQpwbGVhc3VyZSBkZXJpdmVkIGZyb20gdmlydHVlLCBhbmQgdG8gZGVtYW5kIHRoaXMKbWVhbmVyIHJlY29tcGVuc2UgZnJvbSB0aGUgbm9ibGVzdCBvZiBhbGwgYXJ0cywgd2hvc2UKcHJhY3RpY2UgYW5kIGV2ZW4gd2hvc2UgcG9zc2Vzc2lvbiBpcyBhbXBsZSByZXdhcmQKZm9yIGFsbCBvdXIgbGFib3Vycy48bWlsZXN0b25lIG49IjMwIiB1bml0PSJzZWN0aW9uIiAvPiBXaGVyZWZvcmUgbGV0IHVzIHNlZWsgd2l0aCBhbGwKb3VyIGhlYXJ0cyB0aGF0IHRydWUgbWFqZXN0eSBvZiBvcmF0b3J5LCB0aGUgZmFpcmVzdApnaWZ0IG9mIGdvZCB0byBtYW4sIHdpdGhvdXQgd2hpY2ggYWxsIHRoaW5ncyBhcmUKc3RyaWNrZW4gZHVtYiBhbmQgcm9iYmVkIGFsaWtlIG9mIHByZXNlbnQgZ2xvcnkgYW5kCnRoZSBpbW1vcnRhbCByZWNvcmQgb2YgcG9zdGVyaXR5OyBhbmQgbGV0IHVzIHByZXNzCmZvcndhcmQgdG8gd2hhdHNvZXZlciBpcyBiZXN0LCBzaW5jZSwgaWYgd2UgZG8gdGhpcywKd2Ugc2hhbGwgZWl0aGVyIHJlYWNoIHRoZSBzdW1taXQgb3IgYXQgbGVhc3Qgc2VlCm1hbnkgb3RoZXJzIGZhciBiZW5lYXRoIHVzLjwvcD4KCjwvdHJhbnNsYXRpb24+"
translation['12.11.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQsIGl0IHdpbGwgYmUgdXJnZWQsIHRvIGNhcnJ5IG91dCBzdWNoIGEgdGFzayBpcwpkaWZmaWN1bHQgYW5kIGhhcyBuZXZlciBiZWVuIGFjY29tcGxpc2hlZC4gVG8Kd2hpY2ggSSByZXBseSB0aGF0IHN1ZmZpY2llbnQgZW5jb3VyYWdlbWVudCBmb3IKc3R1ZHkgbWF5IGJlIGZvdW5kIGluIHRoZSBmYWN0LCBmaXJzdGx5LCB0aGF0IG5hdHVyZQpkb2VzIG5vdCBmb3JiaWQgc3VjaCBhY2hpZXZlbWVudCBhbmQgaXQgZG9lcyBub3QKZm9sbG93IHRoYXQsIGJlY2F1c2UgYSB0aGluZyBuZXZlciBoYXMgYmVlbiBkb25lLCBpdAp0aGVyZWZvcmUgbmV2ZXIgY2FuIGJlIGRvbmUsIGFuZCBzZWNvbmRseSwgdGhhdCBhbGwKZ3JlYXQgYWNoaWV2ZW1lbnRzIGhhdmUgcmVxdWlyZWQgdGltZSBmb3IgdGhlaXIgZmlyc3QKYWNjb21wbGlzaG1lbnQuPC90cmFuc2xhdGlvbj4="
translation['12.11.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz4gUG9ldHJ5IGhhcyByaXNlbiB0byB0aGUgaGVpZ2h0cwpvZiBnbG9yeSwgdGhhbmtzIHRvIHRoZSBlZmZvcnRzIG9mIHBvZXRzIHNvIGZhciBhcGFydAphcyBIb21lciBhbmQgVmlyZ2lsLCBhbmQgb3JhdG9yeSBvd2VzIGl0cyBwb3NpdGlvbgp0byB0aGUgZ2VuaXVzIG9mIERlbW9zdGhlbmVzIGFuZCBDaWNlcm8uIEZpbmFsbHksCndoYXRldmVyIGlzIGJlc3QgaW4gaXRzIG93biBzcGhlcmUgbXVzdCBhdCBzb21lCnByZXZpb3VzIHRpbWUgaGF2ZSBiZWVuIG5vbi1leGlzdGVudC4gQnV0IGV2ZW4gaWYKYSBtYW4gZGVzcGFpciBvZiByZWFjaGluZyBzdXByZW1lIGV4Y2VsbGVuY2UgKGFuZAp3aHkgc2hvdWxkIGhlIGRlc3BhaXIsIGlmIGhlIGhhdmUgdGFsZW50cywgaGVhbHRoLApjYXBhY2l0eSBhbmQgdGVhY2hlcnMgdG8gYWlkIGhpbT8pLCBpdCBpcyBub25lIHRoZQpsZXNzIGEgZmluZSBhY2hpZXZlbWVudCwgYXMgQ2ljZXJvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiPjxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Iml0YWxpY3MiPk9yLjwvaGk+IGkuIDQuPC9ub3RlPiBzYXlzLCB0byB3aW4gdGhlCnJhbmsgb2Ygc2Vjb25kIG9yIGV2ZW4gdGhpcmQuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iaXRhbGljcyI+T3IuPC9oaT4gaS4gNC48L3RyYW5zbGF0aW9uPg=="
translation['12.11.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz4gRm9yIGV2ZW4gaWYgYSBzb2xkaWVyCmNhbm5vdCBhY2hpZXZlIHRoZSBnbG9yeSBvZiBBY2hpbGxlcyBpbiB3YXIsIGhlIHdpbGwKbm90IGRlc3Bpc2UgZmFtZSBzdWNoIGFzIGZlbGwgdG8gdGhlIGxvdCBvZiBBamF4IGFuZApEaW9tZWRlLCB3aGlsZSB0aG9zZSB3aG8gY2Fubm90IGJlIEhvbWVycyBtYXkKYmUgY29udGVudCB0byByZWFjaCB0aGUgbGV2ZWwgb2YgVHlydGFldXMuIE5heSwgaWYKbWVuIGhhZCBiZWVuIG9ic2Vzc2VkIGJ5IHRoZSBjb252aWN0aW9uIHRoYXQgaXQgd2FzCmltcG9zc2libGUgdG8gc3VycGFzcyB0aGUgbWFuIHdobyBoYWQgc28gZmFyIHNob3duCmhpbXNlbGYgYmVzdCwgdGhvc2Ugd2hvbSB3ZSBub3cgcmVnYXJkIGFzIGJlc3QKd291bGQgbmV2ZXIgaGF2ZSByZWFjaGVkIHN1Y2ggZGlzdGluY3Rpb24sIEx1Y3JldGl1cwoKPHBiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgaWQ9InAuNTEzIiAvPgoKYW5kIE1hY2VyIHdvdWxkIG5ldmVyIGhhdmUgYmVlbiBzdWNjZWVkZWQgYnkKVmlyZ2lsLCBub3IgQ3Jhc3N1cyBhbmQgSG9ydGVuc2l1cyBieSBDaWNlcm8sIG5vcgp0aGV5IGluIHRoZWlyIHR1cm4gYnkgdGhvc2Ugd2hvIGZsb3VyaXNoZWQgYWZ0ZXIKdGhlbS48L3RyYW5zbGF0aW9uPg=="
translation['12.11.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz4gQnV0IGV2ZW4gdGhvdWdoIHdlIGNhbm5vdCBob3BlIHRvIHN1cnBhc3MKdGhlIGdyZWF0LCBpdCBpcyBzdGlsbCBhIGhpZ2ggaG9ub3VyIHRvIGZvbGxvdyBpbiB0aGVpcgpmb290c3RlcHMuIERpZCBQb2xsaW8gYW5kIE1lc3NhbGEsIHdobyBiZWdhbiB0bwpwbGVhZCB3aGVuIENpY2VybyBoZWxkIHRoZSBjaXRhZGVsIG9mIGVsb3F1ZW5jZSwKZmFpbCB0byBvYnRhaW4gc3VmZmljaWVudCBob25vdXIgaW4gdGhlaXIgbGlmZXRpbWUgb3IKdG8gaGFuZCBkb3duIGEgZmFpciBuYW1lIHRvIHBvc3Rlcml0eT8gVGhlIGFydHMKd2hpY2ggaGF2ZSBiZWVuIGRldmVsb3BlZCB0byB0aGUgaGlnaGVzdCBwaXRjaApvZiBleGNlbGxlbmNlIHdvdWxkIGRlc2VydmUgYnV0IGlsbCBvZiBtYW5raW5kIGlmCnRoYXQgd2hpY2ggd2FzIGJlc3QgaGFkIGFsc28gYmVlbiB0aGUgbGFzdCBvZiBpdHMKbGluZS48L3RyYW5zbGF0aW9uPg=="
translation['12.11.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz4gQWRkIHRvIHRoaXMgdGhlIGZ1cnRoZXIgY29uc2lkZXJhdGlvbiB0aGF0CmV2ZW4gbW9kZXJhdGUgZWxvcXVlbmNlIGlzIG9mdGVuIHByb2R1Y3RpdmUgb2YKZ3JlYXQgcmVzdWx0cyBhbmQsIGlmIHN1Y2ggc3R1ZGllcyBhcmUgdG8gYmUgbWVhc3VyZWQKc29sZWx5IGJ5IHRoZWlyIHV0aWxpdHksIGlzIGFsbW9zdCBlcXVhbCB0byB0aGUgcGVyZmVjdAplbG9xdWVuY2UgZm9yIHdoaWNoIHdlIHNlZWsuIE5vciB3b3VsZCBpdCBiZSBkaWZmaWN1bHQKdG8gcHJvZHVjZSBlaXRoZXIgYW5jaWVudCBvciByZWNlbnQgZXhhbXBsZXMgdG8gc2hvdwp0aGF0IHRoZXJlIGlzIG5vIG90aGVyIHNvdXJjZSBmcm9tIHdoaWNoIG1lbiBoYXZlCnJlYXBlZCBzdWNoIGEgaGFydmVzdCBvZiB3ZWFsdGgsIGhvbm91ciwgZnJpZW5kc2hpcAphbmQgZ2xvcnksIGJvdGggcHJlc2VudCBhbmQgdG8gY29tZS4gQnV0IGl0IHdvdWxkCmJlIGEgZGlzZ3JhY2UgdG8gbGVhcm5pbmcgdG8gZm9sbG93IHRoZSBmYXNoaW9uIG9mIHRob3NlCndobyBzYXkgdGhhdCB0aGV5IHB1cnN1ZSBub3QgdmlydHVlLCBidXQgb25seSB0aGUKcGxlYXN1cmUgZGVyaXZlZCBmcm9tIHZpcnR1ZSwgYW5kIHRvIGRlbWFuZCB0aGlzCm1lYW5lciByZWNvbXBlbnNlIGZyb20gdGhlIG5vYmxlc3Qgb2YgYWxsIGFydHMsIHdob3NlCnByYWN0aWNlIGFuZCBldmVuIHdob3NlIHBvc3Nlc3Npb24gaXMgYW1wbGUgcmV3YXJkCmZvciBhbGwgb3VyIGxhYm91cnMuPC90cmFuc2xhdGlvbj4="
translation['12.11.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz4gV2hlcmVmb3JlIGxldCB1cyBzZWVrIHdpdGggYWxsCm91ciBoZWFydHMgdGhhdCB0cnVlIG1hamVzdHkgb2Ygb3JhdG9yeSwgdGhlIGZhaXJlc3QKZ2lmdCBvZiBnb2QgdG8gbWFuLCB3aXRob3V0IHdoaWNoIGFsbCB0aGluZ3MgYXJlCnN0cmlja2VuIGR1bWIgYW5kIHJvYmJlZCBhbGlrZSBvZiBwcmVzZW50IGdsb3J5IGFuZAp0aGUgaW1tb3J0YWwgcmVjb3JkIG9mIHBvc3Rlcml0eTsgYW5kIGxldCB1cyBwcmVzcwpmb3J3YXJkIHRvIHdoYXRzb2V2ZXIgaXMgYmVzdCwgc2luY2UsIGlmIHdlIGRvIHRoaXMsCndlIHNoYWxsIGVpdGhlciByZWFjaCB0aGUgc3VtbWl0IG9yIGF0IGxlYXN0IHNlZQptYW55IG90aGVycyBmYXIgYmVuZWF0aCB1cy48cGIgY2xhc3M9InRyYW5zbGF0aW9uIiBpZD0icC41MTUiIC8+Cgo8cCBjbGFzcz0idHJhbnNsYXRpb24iPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5TdWNoLCBNYXJjZWxsdXMgVmljdG9yaXVzLCB3ZXJlIHRoZSB2aWV3cyBieQp0aGUgZXhwcmVzc2lvbiBvZiB3aGljaCBpdCBzZWVtZWQgdG8gbWUgdGhhdCBJCm1pZ2h0LCBhcyBmYXIgYXMgaW4gbWUgbGF5LCBoZWxwIHRvIGFkdmFuY2UgdGhlCnRlYWNoaW5nIG9mIG9yYXRvcnkuIElmIHRoZSBrbm93bGVkZ2Ugb2YgdGhlc2UKcHJpbmNpcGxlcyBwcm92ZXMgdG8gYmUgb2Ygc21hbGwgcHJhY3RpY2FsIHV0aWxpdHkgdG8KdGhlIHlvdW5nIHN0dWRlbnQsIGl0IHNob3VsZCBhdCBsZWFzdCBwcm9kdWNlIHdoYXQKW3ZhbHVlIG1vcmUs4oCUdGhlIHdpbGwgdG8gZG8gd2VsbC48L3A+Cgo8L3RyYW5zbGF0aW9uPg=="
