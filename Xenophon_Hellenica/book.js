var translations = [];
var translatedSection = null;
var current = 0;

function updateScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  console.log(page)

  var bookmarkedPageFieldName = book + "Page";
  var bookmarkedPage = localStorage.getItem(bookmarkedPageFieldName);
  if (bookmarkedPage == null) {
    localStorage.setItem(bookmarkedPageFieldName, page);
  }

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";

  var scrollPosition = localStorage.getItem(positionOnPage);
  if (scrollPosition == null) {
    scrollPosition = window.pageYOffset;
    localStorage.setItem(positionOnPage, scrollPosition);
    return;
  }

  if (bookmarkedPage == page) {
    window.scrollTo(0, scrollPosition)
    return;
  }
  window.location = bookmarkedPage;
}

function storeScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  localStorage.setItem(book + "Page", page);

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";
  scrollPosition = window.pageYOffset;
  localStorage.setItem(positionOnPage, scrollPosition);
}

function showNextOnHelper(evt) {
  current++;
  if (current > translations.length - 1) {
    current = 0;
  }
  var translation = translations[current];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = (current + 1) + "/" + translations.length;
    helper.appendChild(transCount);
  }
}

function updateHelper(evt, lineNumber, translationsForWord) {
  if (typeof updateHelper.currentWord === 'object') {
    updateHelper.currentWord.style.textDecoration = "none";
  }
  
  if (evt.target == updateHelper.currentWord) {
    displayTranslation(lineNumber);
    return;
  }

  evt.target.style.textDecoration = "underline red";
  updateHelper.currentWord = evt.target;

  if (typeof updateHelper.previousCommentBubble === 'object' 
      && updateHelper.previousCommentBubble != null) {
    updateHelper.previousCommentBubble.style.display = "none";
  }
  var commentBubble = document.getElementById("indicator-" + lineNumber);
  if (commentBubble != null) {
    commentBubble.style.display = "inline";
  }
  updateHelper.previousCommentBubble = commentBubble;

  showTitle(lineNumber);

  translations = translationsForWord;
  var translation = translations[0];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  helper.style.display = "block";

  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = "1/" + translations.length;
    helper.appendChild(transCount);
  }

  storeScrollPosition();
}

function showTitle(lineNumber) {
  if (Array.isArray(lineNumber)) {
    lineNumber = lineNumber[0];
  }
  lineNumber = lineNumber.replace(/\./g, '');
  var page = parseInt(parseInt(lineNumber, 10) / 100, 10);
  if (isNaN(page)) {
    return;
  }
  var result = page % 2;
  
  var titleToShow = titleElements[result];
  var innerHTML = "<span class=\"title\">" + titleToShow + "</span>";
  masthead.innerHTML = innerHTML;
}

function displayTranslation(refs) {
  if (translatedSection) {
    for (var i = 0; i < translatedSection.length; i++) {
        translatedSection[i].style.backgroundColor = "";
    }
  }
  translatedSection = null;
  for (var i = 0; i < refs.length; i++) {
    var ref = refs[i];
    translatedSection = document.getElementsByClassName(ref);
    if (translatedSection)
      break;
  }
  if (!translatedSection) {
    return;
  }
  if (!translation.hasOwnProperty(ref)) {
    return;
  }
  for (var i = 0; i < translatedSection.length; i++) {
      translatedSection[i].style.backgroundColor = "yellow";
  }
  parallel_translation.innerHTML = atobUTF8(translation[ref]);
  parallel_translation.style.display = "block";
}

function hideTranslation() {
  for (var i = 0; i < translatedSection.length; i++) {
      translatedSection[i].style.backgroundColor = "";
  }
  parallel_translation.style.display = "none";
}


function displayComment(line) {
  comment.innerHTML = atobUTF8(commentary[line]);
  comment.style.display = "block";
}

function hideComment() {
  comment.style.display = "none";
}

if ('serviceWorker' in navigator) {
  window.addEventListener('load', function() {
    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {
      // Registration was successful
      console.log('ServiceWorker registration successful with scope: ', registration.scope);
    }, function(err) {
      // registration failed :(
      console.log('ServiceWorker registration failed: ', err);
    });
  });
}

window.onload = updateScrollPosition;
var translation={}
translation['1.1.1'] = ""
translation['1.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TaG9ydGx5IGFmdGVyIHRoaXMsIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIHdpbnRlciwgRG9yaWV1cywgdGhlIHNvbiBvZiBEaWFnb3Jhcywgc2FpbGVkIGludG8gdGhlIEhlbGxlc3BvbnQgZnJvbSBSaG9kZXMgd2l0aCBmb3VydGVlbiBzaGlwcywgYXJyaXZpbmcgYXQgZGF5YnJlYWsuIEFuZCB3aGVuIHRoZSBBdGhlbmlhbiBkYXktd2F0Y2hlciBkZXNjcmliZWQgaGltLCBoZSBzaWduYWxsZWQgdG8gdGhlIGdlbmVyYWxzLCBhbmQgdGhleSBwdXQgb3V0IGFnYWluc3QgaGltIHdpdGggdHdlbnR5IHNoaXBzOyBhbmQgRG9yaWV1cywgZmxlZWluZyBmcm9tIHRoZW0gdG93YXJkcyB0aGUgc2hvcmUsIGJlYWNoZWQgaGlzIHRyaXJlbWVzLCBhcyBmYXN0IGFzIGhlIGdvdCB0aGVtIGNsZWFyIG9mIHRoZSBlbmVteSwgaW4gdGhlIG5laWdoYm91cmhvb2Qgb2YgUmhvZXRldW0uCjwvdHJhbnNsYXRpb24+"
translation['1.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZSBBdGhlbmlhbnMgY2FtZSBuZWFyLCB0aGUgbWVuIHVuZGVyIERvcmlldXMgZm91Z2h0LCBmcm9tIHRoZWlyIHNoaXBzIGFuZCBmcm9tIHRoZSBzaG9yZSwgdW50aWwgdGhlIEF0aGVuaWFucyBzYWlsZWQgYXdheSB0byBNYWR5dHVzLCB0byB0aGUgcmVzdCBvZiB0aGVpciBmbGVldCwgd2l0aG91dCBoYXZpbmcgYWNjb21wbGlzaGVkIGFueXRoaW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgTWluZGFydXMgY2F1Z2h0IHNpZ2h0IG9mIHRoZSBiYXR0bGUgYXMgaGUgd2FzIHNhY3JpZmljaW5nIHRvIEF0aGVuYSBhdCBJbGl1bSwgYW5kIGh1cnJ5aW5nIHRvIHRoZSBzZWEgaGUgbGF1bmNoZWQgaGlzIHRyaXJlbWVzIGFuZCBzZXQgb3V0LCBpbiBvcmRlciB0byBwaWNrIHVwIHRoZSBzaGlwcyB1bmRlciBEb3JpZXVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGUgQXRoZW5pYW5zIHNldCBvdXQgYWdhaW5zdCBoaW0gYW5kIGRpZCBiYXR0bGUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDExIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDExIj40MTEgQi5DLjwvZGF0ZT48L25vdGU+IGFsb25nIHRoZSBzdHJhbmQgbmVhciBBYnlkdXMsIGZyb20gbW9ybmluZyB0aWxsIGxhdGUgYWZ0ZXJub29uLiBUaGV5IHdlcmUgYXQgc29tZSBwb2ludHMgdmljdG9yaW91cyBhbmQgYXQgb3RoZXJzIGRlZmVhdGVkLCB3aGVuIEFsY2liaWFkZXMgc2FpbGVkIGludG8gdGhlIEhlbGxlc3BvbnQgdG8gdGhlaXIgc3VwcG9ydCwgd2l0aCBlaWdodGVlbiBzaGlwcy4KPGRhdGUgYXV0aG5hbWU9Ii00MTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MTEiPjQxMSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['1.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJldXBvbiB0aGUgUGVsb3Bvbm5lc2lhbnMgdG9vayB0byBmbGlnaHQgaW4gdGhlIGRpcmVjdGlvbiBvZiBBYnlkdXM7IGFuZCBQaGFybmFiYXp1cyBjYW1lIGFsb25nIHRoZSBzaG9yZSB0byB0aGVpciBhaWQsIGFuZCByaWRpbmcgaGlzIGhvcnNlIGludG8gdGhlIHNlYSBhcyBmYXIgYXMgcG9zc2libGUsIGJvcmUgYSBzaGFyZSBpbiB0aGUgZmlnaHRpbmcgYW5kIGNoZWVyZWQgb24gaGlzIGZvbGxvd2VycywgY2F2YWxyeSBhbmQgaW5mYW50cnkuCjwvdHJhbnNsYXRpb24+"
translation['1.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk1lYW53aGlsZSB0aGUgUGVsb3Bvbm5lc2lhbnMgbWFkZSBhIGJhcnJpZXIgb2YgdGhlaXIgc2hpcHMgYW5kIG1hcnNoYWxsZWQgdGhlbXNlbHZlcyBvbiB0aGUgc2hvcmUgYW5kIGZvdWdodC4gQXQgbGVuZ3RoIHRoZSBBdGhlbmlhbnMgc2FpbGVkIGF3YXkgdG8gU2VzdHVzIGFmdGVyIGNhcHR1cmluZyB0aGlydHkgb2YgdGhlIGVuZW15J3Mgc2hpcHMsIHRob3VnaCB3aXRob3V0IHRoZWlyIGNyZXdzLCBhbmQgcmVjb3ZlcmluZyB0aG9zZSB3aGljaCB0aGV5IGhhZCBwcmV2aW91c2x5IGxvc3QgdGhlbXNlbHZlcy4KPC90cmFuc2xhdGlvbj4="
translation['1.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkZyb20gU2VzdHVzIGFsbCBidXQgZm9ydHkgb2YgdGhlaXIgc2hpcHMgd2VudCBvZmYgaW4gZGlmZmVyZW50IGRpcmVjdGlvbnMsIG91dHNpZGUgdGhlIEhlbGxlc3BvbnQsIHRvIGNvbGxlY3QgbW9uZXk7IGFuZCBUaHJhc3lsbHVzLCB3aG8gd2FzIG9uZSBvZiB0aGUgZ2VuZXJhbHMsIHNldCBzYWlsIGZvciBBdGhlbnMgdG8gcmVwb3J0IHRoZXNlIGV2ZW50cyBhbmQgdG8gYXNrIGZvciB0cm9vcHMgYW5kIHNoaXBzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIFRpc3NhcGhlcm5lcyBjYW1lIHRvIHRoZSBIZWxsZXNwb250OyBhbmQgd2hlbiBBbGNpYmlhZGVzIHdpdGggYSBzaW5nbGUgdHJpcmVtZSB3ZW50IHRvIHZpc2l0IGhpbSwgYmVhcmluZyBmcmllbmRseSBvZmZlcmluZ3MgYW5kIGdpZnRzLCBUaXNzYXBoZXJuZXMgc2VpemVkIGhpbSBhbmQgaW1wcmlzb25lZCBoaW0gaW4gU2FyZGlzLCBzYXlpbmcgdGhhdCB0aGUgS2luZyBvcmRlcmVkIGhpbSB0byBtYWtlIHdhciB1cG9uIHRoZSBBdGhlbmlhbnMuCjwvdHJhbnNsYXRpb24+"
translation['1.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGlydHkgZGF5cyBsYXRlciwgaG93ZXZlciwgQWxjaWJpYWRlcywgdG9nZXRoZXIgd2l0aCBNYW50aXRoZXVzLCB3aG8gaGFkIGJlZW4gdGFrZW4gcHJpc29uZXIgaW4gQ2FyaWEsIHByb3ZpZGVkIHRoZW1zZWx2ZXMgd2l0aCBob3JzZXMgYW5kIG1hZGUgdGhlaXIgZXNjYXBlIGZyb20gU2FyZGlzIGJ5IG5pZ2h0IHRvIENsYXpvbWVuYWUuCjwvdHJhbnNsYXRpb24+"
translation['1.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVhbndoaWxlIHRoZSBBdGhlbmlhbnMgYXQgU2VzdHVzLCBsZWFybmluZyB0aGF0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDEwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDEwIj40MTAgQi5DLjwvZGF0ZT48L25vdGU+IE1pbmRhcnVzIHdhcyBwbGFubmluZyB0byBzYWlsIGFnYWluc3QgdGhlbSB3aXRoIHNpeHR5IHNoaXBzLCB3aXRoZHJldyBieSBuaWdodCB0byBDYXJkaWEuIFRoZXJlPGRhdGUgYXV0aG5hbWU9Ii00MTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MTAiPjQxMCBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQxMCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMCI+NDEwIEIuQy48L2RhdGU+PC9ub3RlPiBBbGNpYmlhZGVzIGpvaW5lZCB0aGVtLCBjb21pbmcgZnJvbSBDbGF6b21lbmFlIHdpdGggZml2ZSB0cmlyZW1lcyBhbmQgYSBkaXNwYXRjaCBib2F0LiBCdXQgdXBvbiBsZWFybmluZyB0aGF0IHRoZSBQZWxvcG9ubmVzaWFuIHNoaXBzIGhhZCBzZXQgb3V0IGZyb20gQWJ5ZHVzIHRvIEN5emljdXMsIGhlIHByb2NlZWRlZCBvdmVybGFuZCB0byBTZXN0dXMgYW5kIGdhdmUgb3JkZXJzIHRoYXQgdGhlIHNoaXBzIHNob3VsZCBzYWlsIGFyb3VuZCB0byB0aGF0IHBsYWNlLgo8ZGF0ZSBhdXRobmFtZT0iLTQxMCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMCI+NDEwIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['1.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgaGFkIGFycml2ZWQgdGhlcmUgYW5kIGhlIHdhcyBvbiB0aGUgcG9pbnQgb2YgcHV0dGluZyBvdXQgdG8gc2VhIGZvciBiYXR0bGUsIFRoZXJhbWVuZXMgc2FpbGVkIGluIGZyb20gTWFjZWRvbmlhIHdpdGggYSByZWluZm9yY2VtZW50IG9mIHR3ZW50eSBzaGlwcywgYW5kIGF0IHRoZSBzYW1lIHRpbWUgVGhyYXN5YnVsdXMgYXJyaXZlZCBmcm9tIFRoYXNvcyB3aXRoIHR3ZW50eSBtb3JlLCBib3RoIG9mIHRoZW0gaGF2aW5nIGJlZW4gZW5nYWdlZCBpbiBjb2xsZWN0aW5nIG1vbmV5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYWZ0ZXIgYmlkZGluZyB0aGVtIGFsc28gdG8gZm9sbG93IGFmdGVyIGhpbSB3aGVuIHRoZXkgaGFkIHJlbW92ZWQgdGhlaXIgY3J1aXNpbmcgc2FpbHMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRodXMg4oCcY2xlYXJpbmcgZm9yIGFjdGlvbi7igJ08L25vdGU+IEFsY2liaWFkZXMgc2V0IG9mZiB3aXRoIGhpcyBvd24gc2hpcHMgdG8gUGFyaXVtOyBhbmQgd2hlbiBhbGwgdGhlIHNoaXBzIGhhZCBjb21lIHRvZ2V0aGVyIGF0IFBhcml1bSwgdG8gdGhlIG51bWJlciBvZiBlaWdodHktc2l4LCB0aGV5IHNldCBzYWlsIGR1cmluZyB0aGUgZW5zdWluZyBuaWdodCwgYW5kIG9uIHRoZSBuZXh0IGRheSBhdCBicmVha2Zhc3QgdGltZSBhcnJpdmVkIGF0IFByb2Nvbm5lc3VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSB0aGV5IGxlYXJuZWQgdGhhdCBNaW5kYXJ1cyB3YXMgYXQgQ3l6aWN1cywgYW5kIGFsc28gUGhhcm5hYmF6dXMgd2l0aCBoaXMgYXJteS4gQWNjb3JkaW5nbHkgdGhleSByZW1haW5lZCB0aGF0IGRheSBhdCBQcm9jb25uZXN1cywgYnV0IG9uIHRoZSBmb2xsb3dpbmcgZGF5IEFsY2liaWFkZXMgY2FsbGVkIGFuIGFzc2VtYmx5IG9mIGhpcyBtZW4gYW5kIHRvbGQgdGhlbSB0aGF0IHRoZXkgbXVzdCBuZWVkcyBmaWdodCBhdCBzZWEsIGZpZ2h0IG9uIGxhbmQsIGFuZCBmaWdodCBhZ2FpbnN0IGZvcnRyZXNzZXMuIOKAnEZvciB3ZSzigJ0gaGUgc2FpZCwg4oCcaGF2ZSBubyBtb25leSwgYnV0IHRoZSBlbmVteSBoYXZlIGFuIGFidW5kYW5jZSBvZiBpdCBmcm9tIHRoZSBLaW5nLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgb24gdGhlIHByZWNlZGluZyBkYXksIHdoZW4gdGhleSBoYWQgY29tZSB0byBhbmNob3IsIEFsY2liaWFkZXMgaGFkIHRha2VuIGludG8gaGlzIGN1c3RvZHkgYWxsIHRoZSB2ZXNzZWxzIGluIHRoZSBoYXJib3VyLCBldmVuIHRoZSBzbWFsbCBvbmVzLCBpbiBvcmRlciB0aGF0IG5vIG9uZSBzaG91bGQgcmVwb3J0IHRvIHRoZSBlbmVteSB0aGUgc2l6ZSBvZiBoaXMgZmxlZXQsIGFuZCBoZSBtYWRlIHByb2NsYW1hdGlvbiB0aGF0IGRlYXRoIHdvdWxkIGJlIHRoZSBwdW5pc2htZW50IG9mIGFueSBvbmUgd2hvIHdhcyBjYXVnaHQgc2FpbGluZyBhY3Jvc3MgdG8gdGhlIG90aGVyIHNpZGUgb2YgdGhlIHN0cmFpdC4KPC90cmFuc2xhdGlvbj4="
translation['1.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYWZ0ZXIgdGhlIGFzc2VtYmx5IGhlIG1hZGUgcHJlcGFyYXRpb25zIGZvciBiYXR0bGUgYW5kLCBpbiB0aGUgbWlkc3Qgb2YgYSBoZWF2eSByYWluLCBzZXQgb3V0IGZvciBDeXppY3VzLiBXaGVuIGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDEwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDEwIj40MTAgQi5DLjwvZGF0ZT48L25vdGU+IHdhcyBuZWFyIEN5emljdXMsIHRoZSB3ZWF0aGVyIGNsZWFyZWQgYW5kIHRoZSBzdW4gY2FtZSBvdXQsIGFuZCBoZSBzaWdodGVkIHRoZSBzaGlwcyB1bmRlciBNaW5kYXJ1cywgc2l4dHkgaW4gbnVtYmVyLCBlbmdhZ2VkIGluIHByYWN0aWNlIGF0IHNvbWUgZGlzdGFuY2UgZnJvbSB0aGUgaGFyYm91ciBhbmQgYWxyZWFkeSBjdXQgb2ZmIGZyb20gaXQgYnkgaGlzIG93biBmbGVldC4KPGRhdGUgYXV0aG5hbWU9Ii00MTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MTAiPjQxMCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['1.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIFBlbG9wb25uZXNpYW5zLCB3aGVuIHRoZXkgc2F3IHRoYXQgdGhlIEF0aGVuaWFuIHRyaXJlbWVzIHdlcmUgZmFyIG1vcmUgbnVtZXJvdXMgdGhhbiBiZWZvcmUgYW5kIHdlcmUgbmVhciB0aGUgaGFyYm91ciwgZmxlZCB0byB0aGUgc2hvcmU7IGFuZCBtb29yaW5nIHRoZWlyIHNoaXBzIHRvZ2V0aGVyLCB0aGV5IGZvdWdodCB3aXRoIHRoZWlyIGFkdmVyc2FyaWVzIGFzIHRoZXkgc2FpbGVkIGRvd24gdXBvbiB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BbGNpYmlhZGVzLCBob3dldmVyLCB3aXRoIHR3ZW50eSBvZiBoaXMgc2hpcHMgc2FpbGVkIHJvdW5kIHRoZSBmbGVldHMgYW5kIGxhbmRlZCBvbiB0aGUgc2hvcmUuIFdoZW4gTWluZGFydXMgc2F3IHRoaXMsIGhlIGFsc28gbGFuZGVkLCBhbmQgZmVsbCBmaWdodGluZyBvbiB0aGUgc2hvcmU7IGFuZCB0aG9zZSB3aG8gd2VyZSB3aXRoIGhpbSBmbGVkLiBBbmQgdGhlIEF0aGVuaWFucyB0b29rIGF3YXkgd2l0aCB0aGVtIHRvIFByb2Nvbm5lc3VzIGFsbCB0aGUgUGVsb3Bvbm5lc2lhbiBzaGlwcywgZXhjZXB0IHRob3NlIG9mIHRoZSBTeXJhY3VzYW5zOyBmb3IgdGhlc2Ugd2VyZSBidXJuZWQgYnkgdGhlaXIgb3duIGNyZXdzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gcm9tIFByb2Nvbm5lc3VzIHRoZSBBdGhlbmlhbnMgc2FpbGVkIG9uIHRoZSBuZXh0IGRheSBhZ2FpbnN0IEN5emljdXM7CjwvdHJhbnNsYXRpb24+"
translation['1.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgdGhlIEN5emljZW5lcyBhZG1pdHRlZCB0aGVtLCBpbmFzbXVjaCBhcyB0aGUgUGVsb3Bvbm5lc2lhbnMgYW5kIFBoYXJuYWJhenVzIGhhZCBldmFjdWF0ZWQgdGhlIGNpdHkuCjwvdHJhbnNsYXRpb24+"
translation['1.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSBBbGNpYmlhZGVzIHJlbWFpbmVkIGZvciB0d2VudHkgZGF5cywgYW5kIGFmdGVyIG9idGFpbmluZyBhIGdyZWF0IGRlYWwgb2YgbW9uZXkgZnJvbSB0aGUgQ3l6aWNlbmVzLCBidXQgd2l0aG91dCBkb2luZyBhbnkgZnVydGhlciBoYXJtIGluIHRoZSBjaXR5LCBzYWlsZWQgYmFjayB0byBQcm9jb25uZXN1cy4gRnJvbSB0aGVyZSBoZSBzYWlsZWQgdG8gUGVyaW50aHVzIGFuZCBTZWx5bWJyaWEuCjwvdHJhbnNsYXRpb24+"
translation['1.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIFBlcmludGhpYW5zIGFkbWl0dGVkIHRoZSBBdGhlbmlhbiBmb3JjZXMgdG8gdGhlaXIgY2l0eSwgYW5kIHRoZSBTZWx5bWJyaWFucywgd2hpbGUgbm90IGFkbWl0dGluZyB0aGVtLCBnYXZlIHRoZW0gbW9uZXkuCjwvdHJhbnNsYXRpb24+"
translation['1.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5Gcm9tIHRoZXJlIHRoZXkgcHJvY2VlZGVkIHRvIENocnlzb3BvbGlzLCBpbiBDYWxjaGVkb25pYSwgYW5kIGZvcnRpZmllZCBpdCwgZXN0YWJsaXNoZWQgYSBjdXN0b20gaG91c2UgaW4gdGhlIGNpdHksIGFuZCBwcm9jZWVkZWQgdG8gY29sbGVjdCB0aGUgdGl0aGUtZHV0eSBmcm9tIHZlc3NlbHMgc2FpbGluZyBvdXQgb2YgdGhlIFBvbnR1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JLmUuLCBhIHRheCBvZiB0ZW4gcGVyIGNlbnQuIG9uIGFsbCBnb29kcyBwYXNzaW5nIG91dCB0aHJvdWdoIHRoZSBCb3Nwb3J1cy48L25vdGU+OyB0aGV5IGFsc28gbGVmdCB0aGVyZSBhcyBhIGdhcnJpc29uIHRoaXJ0eSBzaGlwcyBhbmQgdHdvIG9mIHRoZSBnZW5lcmFscyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MTAiPjQxMCBCLkMuPC9kYXRlPjwvbm90ZT4gVGhlcmFtZW5lcyBhbmQgRXVtYWNodXMsIHRvIGhhdmUgY2hhcmdlIG9mIHRoZSBmb3J0LCB0byBhdHRlbmQgdG8gdGhlIG91dGdvaW5nIHNoaXBzLCBhbmQgdG8gaGFybSB0aGUgZW5lbXkgaW4gYW55IG90aGVyIHdheSB0aGV5IGNvdWxkLiBUaGUgb3RoZXIgZ2VuZXJhbHMgcmV0dXJuZWQgdG8gdGhlIEhlbGxlc3BvbnQuCjxkYXRlIGF1dGhuYW1lPSItNDEwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDEwIj40MTAgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['1.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVhbndoaWxlIGEgbGV0dGVyIGRpc3BhdGNoZWQgdG8gTGFjZWRhZW1vbiBieSBIaXBwb2NyYXRlcywgdmljZS1hZG1pcmFsIHVuZGVyIE1pbmRhcnVzLCB3YXMgaW50ZXJjZXB0ZWQgYW5kIHRha2VuIHRvIEF0aGVuczsgaXQgcmFuIGFzIGZvbGxvd3M6IOKAnFRoZSBzaGlwcyBhcmUgZ29uZS4gTWluZGFydXMgaXMgZGVhZC4gVGhlIG1lbiBhcmUgc3RhcnZpbmcuIFdlIGtub3cgbm90IHdoYXQgdG8gZG8u4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5QaGFybmFiYXp1cywgaG93ZXZlciwgdXJnZWQgdGhlIHdob2xlIFBlbG9wb25uZXNpYW4gYXJteSBhbmQgdGhlaXIgYWxsaWVzIG5vdCB0byBiZSBkaXNjb3VyYWdlZCBvdmVyIGEgbWF0dGVyIG9mIHNoaXAtdGltYmVy4oCUZm9yIGhlIHNhaWQgdGhlcmUgd2FzIHBsZW50eSBvZiB0aGF0IGluIHRoZSBLaW5nJ3MgbGFuZOKAlHNvIGxvbmcgYXMgdGhlaXIgYm9kaWVzIHdlcmUgc2FmZTsgYW5kIGhlIG5vdCBvbmx5IGdhdmUgdG8gZWFjaCBtYW4gYSBjbG9hayBhbmQgc3Vic2lzdGVuY2UgZm9yIHR3byBtb250aHMsIGJ1dCBoZSBhbHNvIGFybWVkIHRoZSBzYWlsb3JzIGFuZCBzZXQgdGhlbSBhcyBndWFyZHMgb3ZlciBoaXMgb3duIGNvYXN0bGluZS4KPC90cmFuc2xhdGlvbj4="
translation['1.1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgY2FsbGluZyB0b2dldGhlciB0aGUgZ2VuZXJhbHMgYW5kIHNoaXAtY2FwdGFpbnMgZnJvbSB0aGUgdmFyaW91cyBzdGF0ZXMsIGhlIGJhZGUgdGhlbSBidWlsZCB0cmlyZW1lcyBhdCBBbnRhbmRydXMgdG8gZXF1YWwgdGhlIG51bWJlciB3aGljaCB0aGV5IGhhZCBzZXZlcmFsbHkgbG9zdCwgZ2l2aW5nIHRoZW0gbW9uZXkgZm9yIHRoZSBwdXJwb3NlIGFuZCB0ZWxsaW5nIHRoZW0gdG8gZ2V0IHRpbWJlciBmcm9tIE1vdW50IElkYS4KPC90cmFuc2xhdGlvbj4="
translation['1.1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hpbGUgdGhlIHNoaXAtYnVpbGRpbmcgd2FzIGdvaW5nIG9uLCB0aGUgU3lyYWN1c2FucyBoZWxwZWQgdGhlIEFudGFuZHJpYW5zIHRvIGZpbmlzaCBhIHBvcnRpb24gb2YgdGhlaXIgd2FsbCwgYW5kIGluIHRoZSBnYXJyaXNvbi1kdXR5IG1hZGUgdGhlbXNlbHZlcyBtb3N0IHBvcHVsYXIuIEZvciB0aGlzIHJlYXNvbiB0aGUgU3lyYWN1c2FucyBub3cgZW5qb3kgYXQgQW50YW5kcnVzIHRoZSBwcml2aWxlZ2VzIG9mIGJlbmVmYWN0b3JzIGFuZCBjaXRpemVucy4gQXMgZm9yIFBoYXJuYWJhenVzLCBhZnRlciBtYWtpbmcgdGhlc2UgYXJyYW5nZW1lbnRzIGhlIHdlbnQgYXQgb25jZSB0byB0aGUgcmVsaWVmIG9mIENhbGNoZWRvbi4KPC90cmFuc2xhdGlvbj4="
translation['1.1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyB0aW1lIHdvcmQgY2FtZSBmcm9tIGhvbWUgdG8gdGhlIFN5cmFjdXNhbiBnZW5lcmFscyB0aGF0IHRoZXkgaGFkIGJlZW4gYmFuaXNoZWQgYnkgdGhlIGRlbW9jcmF0aWMgcGFydHkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBnZW5lcmFscyBiZWluZyBvZiB0aGUgb2xpZ2FyY2hpY2FsIHBhcnR5IGluIFN5cmFjdXNlLjwvbm90ZT4gQWNjb3JkaW5nbHkgdGhleSBjYWxsZWQgdG9nZXRoZXIgdGhlaXIgc29sZGllcnMgYW5kLCB0aHJvdWdoIEhlcm1vY3JhdGVzIGFzIHNwb2tlc21hbiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MTAiPjQxMCBCLkMuPC9kYXRlPjwvbm90ZT4gbGFtZW50ZWQgdGhlaXIgbWlzZm9ydHVuZSBpbiBiZWluZyB1bmp1c3RseSBhbmQgaWxsZWdhbGx5IGJhbmlzaGVkLCBhbGwgd2l0aG91dCBleGNlcHRpb24uIFRoZXkgdXJnZWQgdGhlaXIgc29sZGllcnMgdG8gY29udGludWUgemVhbG91cyBpbiB0aGUgZnV0dXJlLCBhcyB0aGV5IGhhZCBiZWVuIGluIHRoZSBwYXN0LCBhbmQgdG8gYmUgdHJ1ZSBtZW4gaW4gb2JleWluZyBldmVyeSBvcmRlcjsgYW5kIHRoZXkgZGlyZWN0ZWQgdGhlbSB0byBjaG9vc2UgbmV3IGNvbW1hbmRlcnMsIHRvIGhvbGQgb2ZmaWNlIHVudGlsIHRob3NlIHdobyBoYWQgYmVlbiBjaG9zZW4gdG8gZmlsbCB0aGVpciBwbGFjZXMgc2hvdWxkIGFycml2ZSBmcm9tIFN5cmFjdXNlLgo8ZGF0ZSBhdXRobmFtZT0iLTQxMCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMCI+NDEwIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['1.1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbWVuLCBob3dldmVyLCBhbmQgcGFydGljdWxhcmx5IHRoZSBjYXB0YWlucyBhbmQgbWFyaW5lcyBhbmQgc3RlZXJzbWVuLCBzZXQgdXAgYSBzaG91dCBhdCB0aGlzIGFuZCBiYWRlIHRoZSBnZW5lcmFscyByZW1haW4gaW4gY29tbWFuZC4gVGhleSByZXBsaWVkIHRoYXQgdGhleSBvdWdodCBub3QgdG8gaW5kdWxnZSBpbiBwYXJ0aXphbiBvcHBvc2l0aW9uIHRvIHRoZWlyIG93biBnb3Zlcm5tZW50LiDigJxCdXQgaWYgYW55b25lLOKAnSB0aGV5IHNhaWQsIOKAnGhhcyBhbnkgY2hhcmdlIHRvIGJyaW5nIGFnYWluc3QgdXMsIHlvdSBzaG91bGQgZ2l2ZSB1cyBhIGhlYXJpbmcsIHJlbWVtYmVyaW5nIGhvdyBtYW55IG5hdmFsIGJhdHRsZXMgeW91IGhhdmUgd29uIGFuZCBob3cgbWFueSBzaGlwcyB5b3UgaGF2ZSBjYXB0dXJlZCB3aGVuIGZpZ2h0aW5nIGJ5IHlvdXJzZWx2ZXMsIGFuZCBob3cgb2Z0ZW4gd2hlbiBhc3NvY2lhdGVkIHdpdGggb3RoZXJzIHlvdSBoYXZlIHByb3ZlZCB5b3Vyc2VsdmVzIGludmluY2libGUgdW5kZXIgb3VyIGxlYWRlcnNoaXAsIG9jY3VweWluZyB0aGUgbW9zdCBob25vdXJhYmxlIHBvc3QgaW4gdGhlIGxpbmUgb2YgYmF0dGxlIG9uIGFjY291bnQgb2Ygb3VyIHNraWxsIGFuZCB5b3VyIG93biB6ZWFsb3VzIHNwaXJpdCwgZXhoaWJpdGVkIGJvdGggb24gbGFuZCBhbmQgc2VhLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBubyBvbmUgYnJvdWdodCBhbnkgY2hhcmdlIGFnYWluc3QgdGhlbSwgYXQgdGhlIHJlcXVlc3Qgb2YgdGhlIHRyb29wcyB0aGV5IHJlbWFpbmVkIHVudGlsIHRoZWlyIHN1Y2Nlc3NvcnMgYXJyaXZlZCzigJREZW1hcmNodXMsIHRoZSBzb24gb2YgRXBpY3lkZXMsIE15c2tvbiwgdGhlIHNvbiBvZiBNZW5lY3JhdGVzLCBhbmQgUG90YW1pcywgdGhlIHNvbiBvZiBHbm9zaXMuIFRoZW4sIGFmdGVyIG1vc3Qgb2YgdGhlIGNhcHRhaW5zIGhhZCB0YWtlbiBvYXRoIHRoYXQsIHdoZW4gdGhleSByZXR1cm5lZCB0byBTeXJhY3VzZSwgdGhleSB3b3VsZCBicmluZyB0aGVpciBnZW5lcmFscyBiYWNrIGZyb20gZXhpbGUsIHRoZXkgc3BlZCB0aGVtIG9uIHRoZWlyIHdheXMsIGNvbW1lbmRpbmcgdGhlbSBhbGw7CjwvdHJhbnNsYXRpb24+"
translation['1.1.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5idXQgaW4gcGFydGljdWxhciB0aG9zZSB3aG8gaGFkIGFzc29jaWF0ZWQgd2l0aCBIZXJtb2NyYXRlcyBmZWx0IGV4Y2VlZGluZ2x5IHRoZSBsb3NzIG9mIGhpcyBjYXJlIGFuZCBlbnRodXNpYXNtIGFuZCBkZW1vY3JhdGljIHNwaXJpdC4gRm9yIHRoZSBiZXN0IG9mIHRob3NlIHdob3NlIGFjcXVhaW50YW5jZSBoZSBtYWRlLCBib3RoIGNhcHRhaW5zIGFuZCBzdGVlcnNtZW4gYW5kIG1hcmluZXMsIGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDEwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDEwIj40MTAgQi5DLjwvZGF0ZT48L25vdGU+IHVzZWQgdG8gZ2F0aGVyIGV2ZXJ5IGRheSBpbiB0aGUgbW9ybmluZyBhbmQgYXQgZXZlbmluZyB0byBoaXMgb3duIHRlbnQsIHdoZXJlIGhlIGNvbW11bmljYXRlZCB0byB0aGVtIHdoYXRldmVyIGhlIHdhcyBwbGFubmluZyB0byBzYXkgb3IgdG8gZG87IGhlIGluc3RydWN0ZWQgdGhlbSBhbHNvLCBzb21ldGltZXMgZGlyZWN0aW5nIHRoZW0gdG8gc3BlYWsgZXggdGVtcG9yZSBhbmQgc29tZXRpbWVzIGFmdGVyIGRlbGliZXJhdGlvbi4KPGRhdGUgYXV0aG5hbWU9Ii00MTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MTAiPjQxMCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['1.1.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBhIHJlc3VsdCBvZiB0aGlzIEhlcm1vY3JhdGVzIGVuam95ZWQgdGhlIGdyZWF0ZXN0IHJlcHV0YXRpb24gaW4gdGhlIGdlbmVyYWwgY291bmNpbCwgYW5kIHdhcyB0aG91Z2h0IHN1cGVyaW9yIHRvIGFsbCBvdGhlcnMgYXMgc3BlYWtlciBhbmQgYWR2aXNlci4gSGUgbm93IHdlbnQgdG8gdmlzaXQgUGhhcm5hYmF6dXM7IGFuZCBzaW5jZSBoZSBoYWQgb25jZSBicm91Z2h0IGFuIGFjY3VzYXRpb24gYWdhaW5zdCBUaXNzYXBoZXJuZXMgYXQgTGFjZWRhZW1vbiwgaW4gd2hpY2ggQXN0eW9jaHVzIHN1cHBvcnRlZCBoaW0gYXMgd2l0bmVzcywgYW5kIGhhZCBiZWVuIGFkanVkZ2VkIHRvIHNwZWFrIHRoZSB0cnV0aCwgaGUgcmVjZWl2ZWQgbW9uZXkgZnJvbSBQaGFybmFiYXp1cyBiZWZvcmUgaGUgYXNrZWQgZm9yIGl0LCBhbmQgYnVzaWVkIGhpbXNlbGYgd2l0aCBjb2xsZWN0aW5nIG1lcmNlbmFyaWVzIGFuZCB0cmlyZW1lcyB3aXRoIGEgdmlldyB0byBoaXMgcmVzdG9yYXRpb24gdG8gU3lyYWN1c2UuIE1lYW53aGlsZSB0aGUgU3lyYWN1c2FucyB3aG8gc3VjY2VlZGVkIHRoZSBiYW5pc2hlZCBnZW5lcmFscyBhcnJpdmVkIGF0IE1pbGV0dXMgYW5kIHRvb2sgb3ZlciB0aGUgc2hpcHMgYW5kIHRoZSB0cm9vcHMuCjwvdHJhbnNsYXRpb24+"
translation['1.1.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgYWJvdXQgdGhpcyB0aW1lIGEgcmV2b2x1dGlvbiB0b29rIHBsYWNlIGluIFRoYXNvcywgYW5kIHRoZSBwYXJ0aXNhbnMgb2YgTGFjZWRhZW1vbiBhbmQgdGhlIExhY29uaWFuIGdvdmVybm9yIEV0ZW9uaWN1cyB3ZXJlIGRyaXZlbiBvdXQgb2YgdGhlIGlzbGFuZC4gQW5kIFBhc2lwcGlkYXMgdGhlIExhY29uaWFuLCB3aG8gd2FzIGFjY3VzZWQgb2YgaGF2aW5nIG1hbmFnZWQgdGhpcyBpbnRyaWd1ZSwgaW4gY29sbHVzaW9uIHdpdGggVGlzc2FwaGVybmVzLCB3YXMgYmFuaXNoZWQgZnJvbSBTcGFydGEsIHdoaWxlIENyYXRlc2lwcGlkYXMgd2FzIHNlbnQgb3V0IHRvIHRoZSBmbGVldCB3aGljaCBQYXNpcHBpZGFzIGhhZCBjb2xsZWN0ZWQgZnJvbSB0aGUgYWxsaWVzLCBhbmQgYXNzdW1lZCBjb21tYW5kIG9mIGl0IGF0IENoaW9zLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RHVyaW5nIHRoZXNlIGRheXMgYWxzbywgYW5kIHdoaWxlIFRocmFzeWxsdXMgd2FzIGluIEF0aGVucywgQWdpcyBtYWRlIGEgcmFpZCBmcm9tIERlY2VsZWEgdXAgdG8gdGhlIHZlcnkgd2FsbHMgb2YgdGhlIGNpdHk7IGFuZCBUaHJhc3lsbHVzIGxlZCBmb3J0aCB0aGUgQXRoZW5pYW5zIGFuZCBhbGwgb3RoZXJzIHdobyB3ZXJlIGluIHRoZSBjaXR5IGFuZCBtYXJzaGFsbGVkIHRoZW0gYmVzaWRlIHRoZSBMeWNldW0sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgZ3ltbmFzaXVtIG91dHNpZGUgdGhlIHdhbGxzLjwvbm90ZT4gd2l0aCB0aGUgaW50ZW50aW9uIG9mIGVuZ2FnaW5nIHRoZSBlbmVteSBpZiB0aGV5IGFwcHJvYWNoZWQuCjwvdHJhbnNsYXRpb24+"
translation['1.1.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIEFnaXMgc2F3IHRoaXMsIGhlIHdpdGhkcmV3IGluIGhhc3RlLCBhbmQgc29tZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQxMCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMCI+NDEwIEIuQy48L2RhdGU+PC9ub3RlPiBmZXcgb2YgaGlzIHJlYXIgbGluZSB3ZXJlIGtpbGxlZCBieSB0aGUgQXRoZW5pYW4gbGlnaHQgdHJvb3BzLiBJbiBjb25zZXF1ZW5jZSBvZiB0aGlzIG9jY3VycmVuY2UgdGhlIEF0aGVuaWFucyB3ZXJlIHN0aWxsIG1vcmUgcmVhZHkgdG8gZ2l2ZSBUaHJhc3lsbHVzIHRoZSBoZWxwIGZvciB3aGljaCBoZSBoYWQgY29tZSwgYW5kIHRoZXkgdm90ZWQgdGhhdCBoZSBtaWdodCBjaG9vc2Ugb3V0IGZvciBzZXJ2aWNlIGEgdGhvdXNhbmQgaG9wbGl0ZXMsIGEgaHVuZHJlZCBob3JzZW1lbiwgYW5kIGZpZnR5IHRyaXJlbWVzLgo8ZGF0ZSBhdXRobmFtZT0iLTQxMCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMCI+NDEwIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['1.1.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVhbndoaWxlIEFnaXMsIHdobyBjb3VsZCBzZWUgZnJvbSBEZWNlbGVhIGdyZWF0IG51bWJlcnMgb2YgZ3JhaW4tc2hpcHMgc2FpbGluZyBpbiB0byBQaXJhZXVzLCBzYWlkIHRoYXQgaXQgd2FzIHVzZWxlc3MgZm9yIGhpcyB0cm9vcHMgdG8gYmUgdHJ5aW5nIGFsbCB0aGlzIGxvbmcgdGltZSB0byBzaHV0IG9mZiB0aGUgQXRoZW5pYW5zIGZyb20gYWNjZXNzIHRvIHRoZWlyIGxhbmQsIHVubGVzcyBvbmUgc2hvdWxkIG9jY3VweSBhbHNvIHRoZSBjb3VudHJ5IGZyb20gd2hpY2ggdGhlIGdyYWluIHdhcyBjb21pbmcgaW4gYnkgc2VhOyBhbmQgdGhhdCBpdCB3YXMgYmVzdCB0byBzZW5kIHRvIENhbGNoZWRvbiBhbmQgQnl6YW50aXVtIENsZWFyY2h1cywgdGhlIHNvbiBvZiBSaGFtcGhpYXMsIHdobyB3YXMgZGlwbG9tYXRpYyBhZ2VudCBmb3IgdGhlIEJ5emFudGluZXMgYXQgU3BhcnRhLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoaXMgd2FzIHJlc29sdmVkIHVwb24sIGZpZnRlZW4gc2hpcHMgd2VyZSBtYW5uZWQgYnkgdGhlIE1lZ2FyaWFucyBhbmQgdGhlIG90aGVyIGFsbGllcywgbW9yZSBwcm9wZXJseSB0cmFuc3BvcnRzIHRoYW4gd2Fyc2hpcHMsIGFuZCBDbGVhcmNodXMgc2V0IG91dCB3aXRoIHRoZW0uIFRocmVlIG9mIGhpcyBzaGlwcyB3ZXJlIGRlc3Ryb3llZCBpbiB0aGUgSGVsbGVzcG9udCBieSB0aGUgbmluZSBBdHRpYyBzaGlwcyB3aGljaCB3ZXJlIGNvbnRpbnVhbGx5IG9uIGR1dHkgdGhlcmUgdG8gcHJvdGVjdCB0aGUgQXRoZW5pYW4gbWVyY2hhbnRtZW4sIGJ1dCB0aGUgcmVzdCBlc2NhcGVkIHRvIFNlc3R1cyBhbmQgZnJvbSB0aGVyZSBtYWRlIHRoZWlyIHdheSBzYWZlbHkgdG8gQnl6YW50aXVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.1.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U28gdGhlIHllYXIgZW5kZWQsIGJlaW5nIHRoZSB5ZWFyIGluIHdoaWNoIHRoZSBDYXJ0aGFnaW5pYW5zLCB1bmRlciB0aGUgbGVhZGVyc2hpcCBvZiBIYW5uaWJhbCwgbWFkZSBhbiBleHBlZGl0aW9uIGFnYWluc3QgU2ljaWx5LCB3aXRoIGFuIGFybXkgb2Ygb25lIGh1bmRyZWQgdGhvdXNhbmQgbWVuLCBhbmQgaW4gdGhlIGNvdXJzZSBvZiB0aHJlZSBtb250aHMgY2FwdHVyZWQgdHdvIEdyZWVrIGNpdGllcywgU2VsaW51cyBhbmQgSGltZXJhLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGUgbmV4dCB5ZWFy4oCUaW4gd2hpY2ggd2FzIGNlbGVicmF0ZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDkiPjQwOSBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlIG5pbmV0eS10aGlyZCBPbHltcGlhZCwgd2hlbiB0aGUgbmV3bHkgYWRkZWQgdHdvLWhvcnNlIHJhY2Ugd2FzIHdvbiBieSBFdWFnb3JhcyBvZiBFbGlzIGFuZCB0aGUgc3RhZGl1bTxkYXRlIGF1dGhuYW1lPSItNDA5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA5Ij40MDkgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIDIwMCB5YXJkcyBmb290LXJhY2UuPC9ub3RlPiBieSBFdWJvdGFzIG9mIEN5cmVuZSwgRXVhcmNoaXBwdXMgYmVpbmcgbm93IGVwaG9yIGF0IFNwYXJ0YSBhbmQgRXVjdGVtb24gYXJjaG9uIGF0IEF0aGVucyDigJR0aGUgQXRoZW5pYW5zIGZvcnRpZmllZCBUaG9yaWN1czsgYW5kIFRocmFzeWxsdXMgdG9vayB0aGUgc2hpcHMgd2hpY2ggaGFkIGJlZW4gdm90ZWQgaGltLCBlcXVpcHBlZCBmaXZlIHRob3VzYW5kIG9mIGhpcyBzYWlsb3JzIHNvIHRoYXQgaGUgbWlnaHQgZW1wbG95IHRoZW0gYXMgcGVsdGFzdHMgYWxzbywgYW5kIHNldCBzYWlsIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIHN1bW1lciBmb3IgU2Ftb3MuCjwvdHJhbnNsYXRpb24+"
translation['1.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHJlbWFpbmluZyB0aGVyZSBmb3IgdGhyZWUgZGF5cyBoZSBzYWlsZWQgdG8gUHlnZWxhOyBhbmQgdGhlcmUgaGUgbGFpZCB3YXN0ZSB0aGUgY291bnRyeSBhbmQgYXR0YWNrZWQgdGhlIHdhbGwgb2YgdGhlIHRvd24uIEEgZm9yY2UgZnJvbSBNaWxldHVzLCBob3dldmVyLCBjYW1lIHRvIHRoZSBhaWQgb2YgdGhlIFB5Z2VsYW5zLCBhbmQgZmluZGluZyB0aGUgQXRoZW5pYW4gbGlnaHQgdHJvb3BzIHNjYXR0ZXJlZCwgcHVyc3VlZCB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZXJldXBvbiB0aGUgcGVsdGFzdHMgYW5kIHR3byBjb21wYW5pZXMgb2YgdGhlIGhvcGxpdGVzIGNhbWUgdG8gdGhlIGFpZCBvZiB0aGVpciBsaWdodCB0cm9vcHMgYW5kIGtpbGxlZCBhbGwgYnV0IGEgZmV3IG9mIHRoZSBtZW4gZnJvbSBNaWxldHVzOyB0aGV5IGFsc28gY2FwdHVyZWQgYWJvdXQgdHdvIGh1bmRyZWQgc2hpZWxkcyBhbmQgc2V0IHVwIGEgdHJvcGh5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBuZXh0IGRheSB0aGV5IHNhaWxlZCB0byBOb3RpdW0gYW5kIGZyb20gdGhlcmUsIGFmdGVyIG1ha2luZyB0aGUgbmVjZXNzYXJ5IHByZXBhcmF0aW9ucywgbWFyY2hlZCB0byBDb2xvcGhvbjsgYW5kIHRoZSBDb2xvcGhvbmlhbnMgZ2F2ZSB0aGVtIHRoZWlyIGFsbGVnaWFuY2UuIEl0IHdhcyBub3cgdGhlIHRpbWUgd2hlbiB0aGUgZ3JhaW4gd2FzIHJpcGVuaW5nLCBhbmQgZHVyaW5nIHRoZSBmb2xsb3dpbmcgbmlnaHQgdGhleSBtYWRlIGEgcmFpZCBpbnRvIEx5ZGlhLCBidXJuZWQgbWFueSB2aWxsYWdlcywgYW5kIHNlaXplZCBtb25leSwgc2xhdmVzLCBhbmQgb3RoZXIgYm9vdHkgaW4gZ3JlYXQgcXVhbnRpdGllcy4KPC90cmFuc2xhdGlvbj4="
translation['1.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlN0YWdlcywgdGhlIFBlcnNpYW4sIGhvd2V2ZXIsIHdhcyBpbiB0aGlzIHJlZ2lvbiwgYW5kIHdoZW4gdGhlIEF0aGVuaWFucyBoYWQgc2NhdHRlcmVkIGZyb20gdGhlaXIgY2FtcCBmb3IgcHJpdmF0ZSBwbHVuZGVyLCBoZSBjYXB0dXJlZCBvbmUgb2YgdGhlbSBhbmQga2lsbGVkIHNldmVuIG90aGVycywgZGVzcGl0ZSB0aGUgZmFjdCB0aGF0IHRoZWlyIGNhdmFscnkgY2FtZSB0byB0aGUgcmVzY3VlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMgVGhyYXN5bGx1cyBsZWQgaGlzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA5Ij40MDkgQi5DLjwvZGF0ZT48L25vdGU+IGFybXkgYmFjayB0byB0aGUgY29hc3QsIHdpdGggdGhlIGludGVudGlvbiBvZiBzYWlsaW5nIHRvIEVwaGVzdXMuIEJ1dCB3aGVuIFRpc3NhcGhlcm5lcyBsZWFybmVkIG9mIHRoaXMgcGxhbiwgaGUgZ2F0aGVyZWQgdG9nZXRoZXIgYSBsYXJnZSBhcm15IGFuZCBzZW50IG91dCBob3JzZW1lbiB0byBjYXJyeSB3b3JkIHRvIGV2ZXJ5Ym9keSB0byByYWxseSBhdCBFcGhlc3VzIGZvciB0aGUgcHJvdGVjdGlvbiBvZiBBcnRlbWlzLgo8ZGF0ZSBhdXRobmFtZT0iLTQwOSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwOSI+NDA5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['1.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBub3csIG9uIHRoZSBzZXZlbnRlZW50aCBkYXkgYWZ0ZXIgaGlzIHJhaWQsIFRocmFzeWxsdXMgc2FpbGVkIHRvIEVwaGVzdXM7IGFuZCBoYXZpbmcgZGlzZW1iYXJrZWQgdGhlIGhvcGxpdGVzIGF0IHRoZSBmb290IG9mIE1vdW50IENvcmVzc3VzLCBhbmQgdGhlIGNhdmFscnksIHBlbHRhc3RzLCBtYXJpbmVzLCBhbmQgYWxsIHRoZSByZXN0IG5lYXIgdGhlIG1hcnNoIG9uIHRoZSBvcHBvc2l0ZSBzaWRlIG9mIHRoZSBjaXR5LCBoZSBsZWQgZm9yd2FyZCB0aGUgdHdvIGRpdmlzaW9ucyBhdCBkYXlicmVhay4KPC90cmFuc2xhdGlvbj4="
translation['1.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBkZWZlbmRlcnMgb2YgdGhlIGNpdHkgc2FsbGllZCBmb3J0aCB0byBtZWV0IHRoZSBhdHRhY2ss4oCUdGhlIEVwaGVzaWFucywgdGhlIGFsbGllcyB3aG9tIFRpc3NhcGhlcm5lcyBoYWQgYnJvdWdodCB0aGVtLCB0aGUgY3Jld3Mgb2YgdGhlIG9yaWdpbmFsIHR3ZW50eSBTeXJhY3VzYW4gc2hpcHMgYW5kIG9mIGZpdmUgb3RoZXJzIHdoaWNoIGNoYW5jZWQgdG8gaGF2ZSBhcnJpdmVkIHRoZXJlIGF0IHRoZSB0aW1lLCBuZXdseSBjb21lIGZyb20gU3lyYWN1c2UgdW5kZXIgdGhlIGNvbW1hbmQgb2YgRXVjbGVzLCB0aGUgc29uIG9mIEhpcHBvbiwgYW5kIEhlcmFjbGVpZGVzLCB0aGUgc29uIG9mIEFyaXN0b2dlbmVzLCBhbmQgZmluYWxseSwgdGhlIGNyZXdzIG9mIHR3byBTZWxpbnVudGluZSBzaGlwcy4KPC90cmFuc2xhdGlvbj4="
translation['1.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFsbCB0aGVzZSBjb250aW5nZW50cyBkaXJlY3RlZCB0aGVpciBmaXJzdCBhdHRhY2sgdXBvbiB0aGUgaG9wbGl0ZXMgYXQgQ29yZXNzdXM7IGFuZCBhZnRlciByb3V0aW5nIHRoZW0sIGtpbGxpbmcgYWJvdXQgYSBodW5kcmVkIG9mIHRoZW0sIGFuZCBwdXJzdWluZyB0aGUgcmVzdCBkb3duIHRvIHRoZSBzaG9yZSwgdGhleSB0dXJuZWQgdGhlaXIgYXR0ZW50aW9uIHRvIHRob3NlIGJ5IHRoZSBtYXJzaDsgYW5kIHRoZXJlIGFsc28gdGhlIEF0aGVuaWFucyB3ZXJlIHB1dCB0byBmbGlnaHQsIGFuZCBhYm91dCB0aHJlZSBodW5kcmVkIG9mIHRoZW0gd2VyZSBraWxsZWQuCjwvdHJhbnNsYXRpb24+"
translation['1.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGUgRXBoZXNpYW5zIHNldCB1cCBhIHRyb3BoeSB0aGVyZSBhbmQgYSBzZWNvbmQgYXQgQ29yZXNzdXMuIFRoZXkgYWxzbyBnYXZlIHRvIHRoZSBTeXJhY3VzYW5zIGFuZCBTZWxpbnVudGluZXMsIHdobyBoYWQgZXNwZWNpYWxseSBkaXN0aW5ndWlzaGVkIHRoZW1zZWx2ZXMsIHRoZSBwcml6ZXMgZm9yIHZhbG91ciwgbm90IG9ubHkgZ2VuZXJhbCBwcml6ZXMsIGJ1dCBtYW55IHRvIHBhcnRpY3VsYXIgaW5kaXZpZHVhbHMgYW1vbmcgdGhlbSwgd2hpbGUgdXBvbiBhbnkgb25lIG9mIHRoZW0gd2hvIGF0IGFueSB0aW1lIG1pZ2h0IGRlc2lyZSBpdCB0aGV5IGNvbmZlcnJlZCB0aGUgcHJpdmlsZWdlIG9mIGR3ZWxsaW5nIGluIEVwaGVzdXMgdGF4IGZyZWU7IGFuZCB0byB0aGUgU2VsaW51bnRpbmVzLCBhZnRlciBTZWxpbnVzIGhhZCBiZWVuIGRlc3Ryb3llZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QnkgdGhlIENhcnRoYWdpbmlhbnMsIHNob3J0bHkgYWZ0ZXIgdGhlIGV2ZW50cyBoZXJlIG5hcnJhdGVkLjwvbm90ZT4gdGhleSBnYXZlIHRoZSByaWdodHMgb2Y8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDkiPjQwOSBCLkMuPC9kYXRlPjwvbm90ZT4gRXBoZXNpYW4gY2l0aXplbnNoaXAgYXMgd2VsbC4KPGRhdGUgYXV0aG5hbWU9Ii00MDkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDkiPjQwOSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['1.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIHRoZSBBdGhlbmlhbnMsIGFmdGVyIG9idGFpbmluZyBhIHRydWNlIGFuZCBzbyByZWNvdmVyaW5nIHRoZSBib2RpZXMgb2YgdGhlaXIgZGVhZCwgdGhleSBzYWlsZWQgYmFjayB0byBOb3RpdW0sIGJ1cmllZCB0aGUgZGVhZCB0aGVyZSwgYW5kIHNhaWxlZCBvbiB0b3dhcmRzIExlc2JvcyBhbmQgdGhlIEhlbGxlc3BvbnQuCjwvdHJhbnNsYXRpb24+"
translation['1.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5XaGlsZSB0aGV5IHdlcmUgYXQgYW5jaG9yIGluIHRoZSBoYXJib3VyIG9mIE1ldGh5bW5hLCBpbiBMZXNib3MsIHRoZXkgc2F3IHNhaWxpbmcgcGFzdCB0aGVtIGZyb20gRXBoZXN1cyB0aGUgdHdlbnR5LWZpdmUgU3lyYWN1c2FuIHNoaXBzOyBhbmQgcHV0dGluZyBvdXQgdG8gdGhlIGF0dGFjayB0aGV5IGNhcHR1cmVkIGZvdXIgb2YgdGhlbSwgbWVuIGFuZCBhbGwsIGFuZCBjaGFzZWQgdGhlIHJlc3QgYmFjayB0byBFcGhlc3VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgVGhyYXN5bGx1cyBzZW50IGhvbWUgdG8gQXRoZW5zIGFsbCB0aGUgcHJpc29uZXJzIHdpdGggdGhlIGV4Y2VwdGlvbiBvZiBBbGNpYmlhZGVzOyB0aGlzIEFsY2liaWFkZXMsIHdobyB3YXMgYW4gQXRoZW5pYW4gYW5kIGEgY291c2luIGFuZCBmZWxsb3ctZXhpbGUgb2YgQWxjaWJpYWRlcyB0aGUgZ2VuZXJhbCwgaGUgY2F1c2VkIHRvIGJlIHN0b25lZCB0byBkZWF0aC4gVGhlbiBoZSBzZXQgc2FpbCB0byBTZXN0dXMgdG8gam9pbiB0aGUgcmVzdCBvZiB0aGUgYXJteTsgYW5kIGZyb20gU2VzdHVzIHRoZSBlbnRpcmUgZm9yY2UgY3Jvc3NlZCBvdmVyIHRvIExhbXBzYWN1cy4KPC90cmFuc2xhdGlvbj4="
translation['1.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIG5vdyB0aGUgd2ludGVyIGNhbWUgb24uIER1cmluZyB0aGUgY291cnNlIG9mIGl0IHRoZSBTeXJhY3VzYW4gcHJpc29uZXJzLCB3aG8gd2VyZSBpbW11cmVkIGluIHN0b25lIHF1YXJyaWVzIGluIFBpcmFldXMsIGR1ZyB0aHJvdWdoIHRoZSByb2NrIGFuZCBtYWRlIHRoZWlyIGVzY2FwZSBieSBuaWdodCwgbW9zdCBvZiB0aGVtIHRvIERlY2VsZWEgYW5kIHRoZSByZXN0IHRvIE1lZ2FyYS4KPC90cmFuc2xhdGlvbj4="
translation['1.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgYXQgTGFtcHNhY3VzIEFsY2liaWFkZXMgZW5kZWF2b3VyZWQgdG8gbWFyc2hhbCBoaXMgZW50aXJlIGFybXkgYXMgYSB1bml0LCBidXQgdGhlIG9sZCBzb2xkaWVycyB3ZXJlIHVud2lsbGluZyB0byBiZSBtYXJzaGFsbGVkIHdpdGggdGhlIHRyb29wcyBvZiBUaHJhc3lsbHVzOyBmb3IgdGhleSBzYWlkIHRoYXQgdGhleSBoYWQgbmV2ZXIga25vd24gZGVmZWF0LCB3aGlsZSB0aGUgb3RoZXJzIGhhZCBqdXN0IGNvbWUgZnJvbSBhIGRlZmVhdC4gQm90aCBjb250aW5nZW50cywgaG93ZXZlciwgd2ludGVyZWQgdGhlcmUgdG9nZXRoZXIsIG9jY3VweWluZyB0aGVtc2VsdmVzIGluIGZvcnRpZnlpbmcgTGFtcHNhY3VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGFsc28gbWFkZSBhbiBleHBlZGl0aW9uIGFnYWluc3QgQWJ5ZHVzOyBhbmQgUGhhcm5hYmF6dXMsIHdobyBjYW1lIHRvIGl0cyBhaWQgd2l0aCBhIGxhcmdlIGZvcmNlIG9mIGNhdmFscnksIHdhcyBkZWZlYXRlZCBpbiBiYXR0bGUgYW5kIHB1dCB0byBmbGlnaHQuIEFuZCBBbGNpYmlhZGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA5Ij40MDkgQi5DLjwvZGF0ZT48L25vdGU+IHB1cnN1ZWQgaGltIHdpdGggdGhlIEF0aGVuaWFuIGNhdmFscnkgYW5kIG9uZSBodW5kcmVkIGFuZCB0d2VudHkgb2YgdGhlIGhvcGxpdGVzLCB1bmRlciB0aGUgY29tbWFuZCBvZiBNZW5hbmRlciwgdW50aWwgZGFya25lc3MgY292ZXJlZCB0aGUgcmV0cmVhdC4KPGRhdGUgYXV0aG5hbWU9Ii00MDkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDkiPjQwOSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['1.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BcyBhIHJlc3VsdCBvZiB0aGlzIGJhdHRsZSB0aGUgc29sZGllcnMgY2FtZSB0b2dldGhlciBvZiB0aGVpciBvd24gYWNjb3JkIGFuZCB0aGUgb2xkIHRyb29wcyBmcmF0ZXJuaXNlZCB3aXRoIHRob3NlIHVuZGVyIFRocmFzeWxsdXMuIFRoZSBBdGhlbmlhbnMgYWxzbyBtYWRlIHNvbWUgb3RoZXIgZXhwZWRpdGlvbnMgZHVyaW5nIHRoZSB3aW50ZXIgaW50byB0aGUgaW50ZXJpb3IgYW5kIGxhaWQgd2FzdGUgdGhlIEtpbmcncyB0ZXJyaXRvcnkuCjwvdHJhbnNsYXRpb24+"
translation['1.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhlIHNhbWUgcGVyaW9kIHRoZSBMYWNlZGFlbW9uaWFucyBncmFudGVkIHRlcm1zIHRvIHRoZSBIZWxvdHMgd2hvIGhhZCByZXZvbHRlZCBhbmQgZmxlZCBmcm9tIE1hbGVhIHRvIENvcnlwaGFzaXVtLCBhbGxvd2luZyB0aGVtIHRvIGV2YWN1YXRlIENvcnlwaGFzaXVtIHVubW9sZXN0ZWQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkNvcnlwaGFzaXVtLCBvciBQeWxvcywgaGFkIGJlZW4gaW4gdGhlIGhhbmRzIG9mIHRoZSBBdGhlbmlhbnMgc2luY2UgPGRhdGUgYXV0aG5hbWU9Ii00MjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MjUiPjQyNSBCLkMuPC9kYXRlPiBJdCB3YXMgZ2Fycmlzb25lZCBsYXJnZWx5IGJ5IE1lc3NlbmlhbnMgYW5kIEhlbG90cy48L25vdGU+IEF0IGFib3V0IHRoZSBzYW1lIHRpbWUsIGFsc28sIHRoZSBjb2xvbmlzdHMgb2YgSGVyYWNsZWlhLCBpbiBUcmFjaGlzLCB3ZXJlIGJldHJheWVkIGJ5IHRoZSBBY2hhZWFucyBpbiBhIGJhdHRsZSB3aGVyZSBib3RoIHBlb3BsZXMgd2VyZSBkcmF3biB1cCBhZ2FpbnN0IHRoZWlyIGVuZW1pZXMsIHRoZSBPZXRhZWFucywgYW5kIGFzIGEgcmVzdWx0IGFib3V0IHNldmVuIGh1bmRyZWQgb2YgdGhlIEhlcmFjbGVvdHMgcGVyaXNoZWQsIHRvZ2V0aGVyIHdpdGggdGhlIExhY2VkYWVtb25pYW4gZ292ZXJub3IsIExhYm90YXMuCjxkYXRlIGF1dGhuYW1lPSItNDI1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDI1Ij40MjUgQi5DLjwvZGF0ZT4gSXQgd2FzIGdhcnJpc29uZWQgbGFyZ2VseSBieSBNZXNzZW5pYW5zIGFuZCBIZWxvdHMuPC90cmFuc2xhdGlvbj4="
translation['1.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U28gdGhpcyB5ZWFyIGVuZGVkLCBiZWluZyB0aGUgeWVhciBpbiB3aGljaCB0aGUgTWVkZXMsIHdobyBoYWQgcmV2b2x0ZWQgZnJvbSBEYXJpdXMsIGtpbmcgb2YgdGhlIFBlcnNpYW5zLCB3ZXJlIGFnYWluIHJlZHVjZWQgdG8gc3ViamVjdGlvbi4KPC90cmFuc2xhdGlvbj4="
translation['1.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5EdXJpbmcgdGhlIGVuc3VpbmcgeWVhciB0aGUgdGVtcGxlIG9mPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA4Ij40MDggQi5DLjwvZGF0ZT48L25vdGU+IEF0aGVuYSBhdCBQaG9jYWVhIHdhcyBzdHJ1Y2sgYnkgbGlnaHRuaW5nIGFuZCBzZXQgb24gZmlyZS4gV2hlbiB0aGUgd2ludGVyIGVuZGVkIGFuZCBzcHJpbmcgYmVnYW4s4oCUUGFudGFjbGVzIGJlaW5nIG5vdyBlcGhvciBhbmQgQW50aWdlbmVzIGFyY2hvbiwgYW5kIHRoZSB3YXIgaGF2aW5nIGNvbnRpbnVlZCBmb3IgdHdlbnR5LXR3byB5ZWFyc+KAlHRoZSBBdGhlbmlhbnMgc2FpbGVkIHdpdGggdGhlaXIgZW50aXJlIGZvcmNlIHRvIFByb2Nvbm5lc3VzLgo8ZGF0ZSBhdXRobmFtZT0iLTQwOCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwOCI+NDA4IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['1.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZyb20gdGhlcmUgdGhleSBzZXQgb3V0IGFnYWluc3QgQ2FsY2hlZG9uIGFuZCBCeXphbnRpdW0sIGFuZCB3ZW50IGludG8gY2FtcCBuZWFyIENhbGNoZWRvbi4gTm93IHRoZSBDYWxjaGVkb25pYW5zLCB3aGVuIHRoZXkgbGVhcm5lZCB0aGF0IHRoZSBBdGhlbmlhbnMgd2VyZSBhcHByb2FjaGluZywgaGFkIHB1dCBhbGwgdGhlaXIgcG9ydGFibGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDgiPjQwOCBCLkMuPC9kYXRlPjwvbm90ZT4gcHJvcGVydHkgaW4gdGhlIGtlZXBpbmcgb2YgdGhlIEJpdGh5bmlhbiBUaHJhY2lhbnMsIHRoZWlyIG5laWdoYm91cnMuCjxkYXRlIGF1dGhuYW1lPSItNDA4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA4Ij40MDggQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['1.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFsY2liaWFkZXMsIGhvd2V2ZXIsIHRha2luZyBhIGZldyBvZiB0aGUgaG9wbGl0ZXMgYW5kIHRoZSBjYXZhbHJ5LCBhbmQgZ2l2aW5nIG9yZGVycyB0aGF0IHRoZSBzaGlwcyBzaG91bGQgc2FpbCBhbG9uZyB0aGUgY29hc3QsIHdlbnQgdG8gdGhlIEJpdGh5bmlhbnMgYW5kIGRlbWFuZGVkIHRoZSBwcm9wZXJ0eSBvZiB0aGUgQ2FsY2hlZG9uaWFucywgc2F5aW5nIHRoYXQgaWYgdGhleSBkaWQgbm90IGdpdmUgaXQgdG8gaGltLCBoZSB3b3VsZCBtYWtlIHdhciB1cG9uIHRoZW07IHNvIHRoZXkgZ2F2ZSBpdCBvdmVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIEFsY2liaWFkZXMgcmV0dXJuZWQgdG8gaGlzIGNhbXAgd2l0aCB0aGUgYm9vdHksIGFmdGVyIGhhdmluZyBjb25jbHVkZWQgYSB0cmVhdHkgd2l0aCB0aGUgQml0aHluaWFucywgaGUgcHJvY2VlZGVkIHdpdGggaGlzIHdob2xlIGFybXkgdG8gaW52ZXN0IENhbGNoZWRvbiBieSBidWlsZGluZyBhIHdvb2RlbiBzdG9ja2FkZSB3aGljaCBleHRlbmRlZCBmcm9tIHNlYSB0byBzZWEsIHRha2luZyBpbiB0aGUgcml2ZXIgYWxzbyBpbiBzbyBmYXIgYXMgdGhpcyB3YXMgcHJhY3RpY2FibGUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPuKAnEZyb20gc2VhIHRvIHNlYSzigJ0gaS5lLiBmcm9tIEJvc3BvcnVzIHRvIFByb3BvbnRpcy4gVGhlIOKAnHJpdmVy4oCdIGJyb2tlIHRoZSBsaW5lIG9mIHRoZSBzdG9ja2FkZSwgYnV0IHRoZSBsYXR0ZXIgd2FzIGNhcnJpZWQgYXMgbmVhciBhcyBwb3NzaWJsZSB0byBlYWNoIGJhbmsgb2YgdGhlIHJpdmVyLjwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['1.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJldXBvbiBIaXBwb2NyYXRlcywgdGhlIExhY2VkYWVtb25pYW4gZ292ZXJub3IsIGxlZCBmb3J0aCBoaXMgdHJvb3BzIGZyb20gdGhlIGNpdHkgdG8gZG8gYmF0dGxlOyBhbmQgdGhlIEF0aGVuaWFucyBtYXJzaGFsbGVkIHRoZW1zZWx2ZXMgYWdhaW5zdCBoaW0sIHdoaWxlIFBoYXJuYWJhenVzLCBvdXRzaWRlIHRoZSBzdG9ja2FkZSwgd2l0aCBpbmZhbnRyeSBhbmQgaG9yc2VtZW4gaW4gZ3JlYXQgbnVtYmVycywgdHJpZWQgdG8gYWlkIEhpcHBvY3JhdGVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk5vdyBmb3IgYSBsb25nIHRpbWUgSGlwcG9jcmF0ZXMgYW5kIFRocmFzeWxsdXMgZm91Z2h0LCBlYWNoIHdpdGggaGlzIGhvcGxpdGVzLCB1bnRpbCBBbGNpYmlhZGVzIGNhbWUgdG8gdGhlIHJlc2N1ZSB3aXRoIGEgZmV3IGhvcGxpdGVzIGFuZCB0aGUgY2F2YWxyeS4gVGhlbiBIaXBwb2NyYXRlcyB3YXMga2lsbGVkLCBhbmQgdGhvc2Ugd2hvIHdlcmUgd2l0aCBoaW0gZmxlZCBiYWNrIGludG8gdGhlIGNpdHkuCjwvdHJhbnNsYXRpb24+"
translation['1.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkF0IHRoZSBzYW1lIHRpbWUgUGhhcm5hYmF6dXMsIHVuYWJsZSB0byBlZmZlY3QgYSBqdW5jdGlvbiB3aXRoIEhpcHBvY3JhdGVzIG93aW5nIHRvIHRoZSBuYXJyb3duZXNzIG9mIHRoZSBzcGFjZSwgc2luY2UgdGhlIHN0b2NrYWRlIGNhbWUgZG93biBjbG9zZSB0byB0aGUgcml2ZXIsIHJldGlyZWQgdG8gdGhlIEhlcmFjbGVpdW0gaW4gdGhlIENhbGNoZWRvbmlhbiB0ZXJyaXRvcnksIHdoZXJlIGhlIGhhZCBoaXMgY2FtcC4KPC90cmFuc2xhdGlvbj4="
translation['1.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMgQWxjaWJpYWRlcyB3ZW50IG9mZiB0byB0aGUgSGVsbGVzcG9udCBhbmQgdGhlIENoZXJzb25lc2UgdG8gY29sbGVjdCBtb25leTsgYW5kIHRoZSByZXN0IG9mIHRoZSBnZW5lcmFscyBjb25jbHVkZWQgYSBjb21wYWN0IHdpdGggUGhhcm5hYmF6dXMgd2hpY2ggcHJvdmlkZWQgdGhhdCwgaW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDgiPjQwOCBCLkMuPC9kYXRlPjwvbm90ZT4gY29uc2lkZXJhdGlvbiBvZiB0aGVpciBzcGFyaW5nIENhbGNoZWRvbiwgUGhhcm5hYmF6dXMgc2hvdWxkIGdpdmUgdGhlIEF0aGVuaWFucyB0d2VudHkgdGFsZW50cyBhbmQgc2hvdWxkIGNvbmR1Y3QgQXRoZW5pYW4gYW1iYXNzYWRvcnMgdG8gdGhlIEtpbmc7CjxkYXRlIGF1dGhuYW1lPSItNDA4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA4Ij40MDggQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['1.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPnRoZXkgYWxzbyByZWNlaXZlZCBmcm9tIFBoYXJuYWJhenVzIGEgcGxlZGdlIHVuZGVyIG9hdGggdGhhdCB0aGUgQ2FsY2hlZG9uaWFucyBzaG91bGQgcGF5IHRvIHRoZSBBdGhlbmlhbnMgcHJlY2lzZWx5IHRoZSBzYW1lIHRyaWJ1dGUgdGhleSBoYWQgYmVlbiBhY2N1c3RvbWVkIHRvIHBheSBhbmQgc2hvdWxkIHNldHRsZSB0aGUgYXJyZWFycyBvZiB0cmlidXRlLCB3aGlsZSB0aGV5IG9uIHRoZWlyIHNpZGUgbWFkZSBvYXRoIHRoYXQgdGhlIEF0aGVuaWFucyB3b3VsZCBub3Qgd2FnZSB3YXIgdXBvbiB0aGUgQ2FsY2hlZG9uaWFucyB1bnRpbCB0aGUgYW1iYXNzYWRvcnMgc2hvdWxkIHJldHVybiBmcm9tIHRoZSBLaW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbGNpYmlhZGVzIHdhcyBub3QgcHJlc2VudCBhdCB0aGUgZXhjaGFuZ2Ugb2YgdGhlc2Ugb2F0aHMsIGJ1dCB3YXMgaW4gdGhlIG5laWdoYm91cmhvb2Qgb2YgU2VseW1icmlhOyBhbmQgd2hlbiBoZSBoYWQgY2FwdHVyZWQgdGhhdCBjaXR5LCBoZSBjYW1lIHRvIEJ5emFudGl1bSwgYnJpbmdpbmcgd2l0aCBoaW0gYWxsIHRoZSBmb3JjZXMgb2YgdGhlIENoZXJzb25lc2lhbnMgYW5kIHNvbGRpZXJzIGZyb20gVGhyYWNlIGFuZCBtb3JlIHRoYW4gdGhyZWUgaHVuZHJlZCBob3JzZW1lbi4KPC90cmFuc2xhdGlvbj4="
translation['1.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgUGhhcm5hYmF6dXMgdGhvdWdodCB0aGF0IEFsY2liaWFkZXMgYWxzbyBvdWdodCB0byBnaXZlIGhpcyBvYXRoLCBhbmQgc28gd2FpdGVkIGF0IENhbGNoZWRvbiB1bnRpbCBoZSBzaG91bGQgY29tZSBmcm9tIEJ5emFudGl1bTsgYnV0IHdoZW4gaGUgY2FtZSwgaGUgc2FpZCB0aGF0IGhlIHdvdWxkIG5vdCBtYWtlIG9hdGggdW5sZXNzIFBoYXJuYWJhenVzIGFsc28gc2hvdWxkIGRvIHRoZSBsaWtlIHRvIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['1.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGUgZW5kLCBBbGNpYmlhZGVzIG1hZGUgb2F0aCBhdCBDaHJ5c29wb2xpcyB0byB0aGUgcmVwcmVzZW50YXRpdmVzIG9mIFBoYXJuYWJhenVzLCBNaXRyb2JhdGVzIGFuZCBBcm5hcGVzLCBhbmQgUGhhcm5hYmF6dXMgYXQgQ2FsY2hlZG9uIHRvIHRoZSByZXByZXNlbnRhdGl2ZXMgb2YgQWxjaWJpYWRlcywgRXVyeXB0b2xlbXVzIGFuZCBEaW90aW11cywgYm90aCBwYXJ0aWVzIG5vdCBvbmx5IGdpdmluZyB0aGUgb2ZmaWNpYWwgb2F0aCBidXQgYWxzbyBtYWtpbmcgcGVyc29uYWwgcGxlZGdlcyB0byBvbmUgYW5vdGhlci4KPC90cmFuc2xhdGlvbj4="
translation['1.3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5JbW1lZGlhdGVseSBhZnRlciB0aGlzIFBoYXJuYWJhenVzIHdlbnQgYXdheSwgbGVhdmluZyB3b3JkIHRoYXQgdGhlIGFtYmFzc2Fkb3JzIHdobyB3ZXJlIGdvaW5nIHRvIHRoZSBLaW5nIHNob3VsZCBtZWV0IGhpbSBhdCBDeXppY3VzLiBUaGUgQXRoZW5pYW5zIHdobyB3ZXJlIHNlbnQgd2VyZSBEb3JvdGhldXMsIFBoaWxvY3lkZXMsIFRoZW9nZW5lcywgRXVyeXB0b2xlbXVzLCBhbmQgTWFudGl0aGV1cywgYW5kIHdpdGggdGhlbSB0d28gQXJnaXZlcywgQ2xlb3N0cmF0dXMgYW5kIFB5cnJvbG9jaHVzOyBhbWJhc3NhZG9ycyBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgYWxzbyB3ZW50IGFsb25nLCBQYXNpcHBpZGFzIGFuZCBvdGhlcnMsIGFuZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwOCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwOCI+NDA4IEIuQy48L2RhdGU+PC9ub3RlPiB3aXRoIHRoZW0gSGVybW9jcmF0ZXMsIHdobyB3YXMgYWxyZWFkeSBhbiBleGlsZSBmcm9tIFN5cmFjdXNlLCBhbmQgaGlzIGJyb3RoZXIgUHJveGVudXMuCjxkYXRlIGF1dGhuYW1lPSItNDA4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA4Ij40MDggQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['1.3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hpbGUgUGhhcm5hYmF6dXMgd2FzIGNvbmR1Y3RpbmcgdGhpcyBwYXJ0eSwgdGhlIEF0aGVuaWFucyB3ZXJlIGJlc2llZ2luZyBCeXphbnRpdW07IHRoZXkgaGFkIGJ1aWx0IGEgc3RvY2thZGUgYXJvdW5kIHRoZSBjaXR5LCBhbmQgd2VyZSBhdHRhY2tpbmcgaXRzIHdhbGwgd2l0aCBtaXNzaWxlcyBmcm9tIGEgZGlzdGFuY2UgYW5kIGJ5IGNsb3NlIGFzc2F1bHQuCjwvdHJhbnNsYXRpb24+"
translation['1.3.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5XaXRoaW4gQnl6YW50aXVtIHdhcyBDbGVhcmNodXMgdGhlIExhY2VkYWVtb25pYW4sIGl0cyBnb3Zlcm5vciwgYW5kIHdpdGggaGltIHNvbWUgTGFjb25pYW4gUGVyaW9lY2ksIGEgZmV3IGVtYW5jaXBhdGVkIEhlbG90cywgYSBjb250aW5nZW50IG9mIE1lZ2FyaWFucywgdW5kZXIgdGhlIGNvbW1hbmQgb2YgSGVsaXh1cyB0aGUgTWVnYXJpYW4sIGFuZCBvbmUgb2YgQm9lb3RpYW5zLCB1bmRlciB0aGUgY29tbWFuZCBvZiBDb2VyYXRhZGFzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIEF0aGVuaWFucywgZmluZGluZyB0aGF0IHRoZXkgd2VyZSB1bmFibGUgdG8gYWNjb21wbGlzaCBhbnl0aGluZyBieSBmb3JjZSwgcGVyc3VhZGVkIHNvbWUgb2YgdGhlIEJ5emFudGluZXMgdG8gYmV0cmF5IHRoZSBjaXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.3.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgQ2xlYXJjaHVzLCB0aGUgZ292ZXJub3IsIHN1cHBvc2luZyB0aGF0IG5vIG9uZSB3b3VsZCBkbyB0aGF0LCBhcnJhbmdlZCBldmVyeXRoaW5nIGFzIHdlbGwgYXMgaGUgY291bGQsIHR1cm5lZCBvdmVyIHRoZSBjaGFyZ2Ugb2YgdGhlIGNpdHkgdG8gQ29lcmF0YWRhcyBhbmQgSGVsaXh1cywgYW5kIGNyb3NzZWQgdG8gdGhlIG9wcG9zaXRlIHNob3JlIHRvIG1lZXQgUGhhcm5hYmF6dXMsIGluIG9yZGVyIHRvIGdldCBmcm9tIGhpbSBwYXkgZm9yIHRoZSBzb2xkaWVycyBhbmQgYWxzbyB0byBjb2xsZWN0IHNoaXBzLiBIaXMgcGxhbiB3YXMgdG8gYXNzZW1ibGUgdGhvc2Ugd2hpY2ggaGFkIGJlZW4gbGVmdCBiZWhpbmQgYnkgUGFzaXBwaWRhcyBhcyBndWFyZHNoaXBzIGFuZCB3ZXJlIG5vdyBpbiB0aGUgSGVsbGVzcG9udCwgdGhvc2UgYXQgQW50YW5kcnVzLCBhbmQgdGhvc2Ugd2hpY2ggQWdlc2FuZHJpZGFzLCBhIGxpZXV0ZW5hbnQgb2YgTWluZGFydXMsIGhhZCB1bmRlciBoaXMgY29tbWFuZCBvbiB0aGUgVGhyYWNpYW4gY29hc3QsIGFuZCBmaW5hbGx5LCB0byBoYXZlIG90aGVyIHNoaXBzIGJ1aWx0OyB0aGVuLCBhZnRlciBnYXRoZXJpbmcgdGhlbSBhbGwgdG9nZXRoZXIsIGhlIHRob3VnaHQgdG8gaGFycnkgdGhlIGFsbGllcyBvZiB0aGUgQXRoZW5pYW5zIGFuZCBzbyBkcmF3IG9mZiB0aGVpciBhcm15IGZyb20gQnl6YW50aXVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.3.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBDbGVhcmNodXMgaGFkIHNhaWxlZCBhd2F5LCB0aG9zZSB3aG8gd2FudGVkIHRvIGJldHJheSB0aGUgY2l0eSBvZiB0aGUgQnl6YW50aW5lcyBzZXQgYWJvdXQgdGhlaXIgd29yayzigJRDeWRvbiwgQXJpc3RvbiwgQW5heGljcmF0ZXMsIEx5Y3VyZ3VzLCBhbmQgQW5heGlsYXVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.3.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIEFuYXhpbGF1cyB3YXMgYWZ0ZXJ3YXJkcyB0cmllZCBmb3IgaGlzIGxpZmUgYXQgTGFjZWRhZW1vbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwOCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwOCI+NDA4IEIuQy48L2RhdGU+PC9ub3RlPiBiZWNhdXNlIG9mIHRoaXMgYmV0cmF5YWwsIGJ1dCB3YXMgYWNxdWl0dGVkLCBvbiB0aGUgcGxlYSB0aGF0IGhlIGRpZCBub3QgYmV0cmF5IHRoZSBjaXR5LCBidXQgcmF0aGVyIHNhdmVkIGl0OyBoZSB3YXMgYSBCeXphbnRpbmUsIGhlIHNhaWQsIG5vdCBhIExhY2VkYWVtb25pYW4sIGFuZCB3aGVuIGhlIHNhdyBjaGlsZHJlbiBhbmQgd29tZW4gcGVyaXNoaW5nIG9mIHN0YXJ2YXRpb24s4oCUZm9yIENsZWFyY2h1cywgaGUgc2FpZCwgZ2F2ZSB3aGF0ZXZlciBwcm92aXNpb25zIHRoZSBjaXR5IGNvbnRhaW5lZCB0byB0aGUgc29sZGllcnMgb2YgdGhlIExhY2VkYWVtb25pYW5zLOKAlGhlIGhhZCBmb3IgdGhpcyByZWFzb24gYWRtaXR0ZWQgdGhlIGVuZW15LCBub3QgZm9yIHRoZSBzYWtlIG9mIG1vbmV5IG5vciBvdXQgb2YgaGF0cmVkIHRvIHRoZSBMYWNlZGFlbW9uaWFucy4KPGRhdGUgYXV0aG5hbWU9Ii00MDgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDgiPjQwOCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['1.3.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBoYXMgYmVlbiBzYWlkLCBob3dldmVyLCB0aGVzZSBiZXRyYXllcnMgbWFkZSB0aGVpciBwcmVwYXJhdGlvbnMsIGFuZCB0aGVuLCBvcGVuaW5nIGJ5IG5pZ2h0IHRoZSBnYXRlcyB0aGF0IGxlYWQgdG8gdGhlIFRocmFjaWFuIFNxdWFyZSwgYXMgaXQgaXMgY2FsbGVkLCBsZXQgaW4gdGhlIEF0aGVuaWFuIGFybXkgYW5kIEFsY2liaWFkZXMuCjwvdHJhbnNsYXRpb24+"
translation['1.3.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgSGVsaXh1cyBhbmQgQ29lcmF0YWRhcywgd2hvIGtuZXcgbm90aGluZyBvZiB3aGF0IHdhcyBnb2luZyBvbiwgaHVycmllZCB0byB0aGUgbWFya2V0LXBsYWNlIHdpdGggYWxsIHRoZWlyIHRyb29wczsgYnV0IHdoZW4gdGhleSBmb3VuZCB0aGF0IHRoZSBlbmVteSB3ZXJlIG1hc3RlcnMgZXZlcnl3aGVyZSBhbmQgdGhhdCB0aGV5IGNvdWxkIGRvIG5vdGhpbmcsIHRoZXkgc3VycmVuZGVyZWQgdGhlbXNlbHZlcy4KPC90cmFuc2xhdGlvbj4="
translation['1.3.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IHdlcmUgYWxsIHNlbnQgb2ZmIHRvIEF0aGVucywgYW5kIGFzIHRoZXkgd2VyZSBkaXNlbWJhcmtpbmcgYXQgUGlyYWV1cywgQ29lcmF0YWRhcyBzbGlwcGVkIGF3YXkgaW4gdGhlIGNyb3dkIGFuZCBtYWRlIGhpcyBlc2NhcGUgdG8gRGVjZWxlYS4KPC90cmFuc2xhdGlvbj4="
translation['1.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBmb3IgUGhhcm5hYmF6dXMgYW5kIHRoZSBhbWJhc3NhZG9ycywgd2hpbGUgdGhleSB3ZXJlIHNwZW5kaW5nIHRoZSB3aW50ZXIgYXQgR29yZGl1bSwgaW4gUGhyeWdpYSwgdGhleSBoZWFyZCB3aGF0IGhhZCBoYXBwZW5lZCBhdCBCeXphbnRpdW0uCjwvdHJhbnNsYXRpb24+"
translation['1.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBhcyB0aGV5IHdlcmUgY29udGludWluZyB0aGVpciBqb3VybmV5IHRvIHRoZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNyI+NDA3IEIuQy48L2RhdGU+PC9ub3RlPiBLaW5nLCBhdCB0aGUgb3BlbmluZyBvZiB0aGUgc3ByaW5nLCB0aGV5IG1ldCBub3Qgb25seSB0aGUgTGFjZWRhZW1vbmlhbiBhbWJhc3NhZG9ycyByZXR1cm5pbmcs4oCUQm9lb3RpdXMgYW5kIGhpcyBjb2xsZWFndWVzIGFuZCB0aGUgbWVzc2VuZ2VyczxkYXRlIGF1dGhuYW1lPSItNDA3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA3Ij40MDcgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHJlZmVyZW5jZSBpcyB1bmNlcnRhaW4uPC9ub3RlPiBiZXNpZGVzLCB3aG8gcmVwb3J0ZWQgdGhhdCB0aGUgTGFjZWRhZW1vbmlhbnMgaGFkIG9idGFpbmVkIGZyb20gdGhlIEtpbmcgZXZlcnl0aGluZyB0aGV5IHdhbnRlZCzigJQKPC90cmFuc2xhdGlvbj4="
translation['1.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPmJ1dCBhbHNvIEN5cnVzLCB3aG8gaGFkIGNvbWUgaW4gb3JkZXIgdG8gYmUgcnVsZXIgb2YgYWxsIHRoZSBwZW9wbGVzIG9uIHRoZSBjb2FzdCBhbmQgdG8gc3VwcG9ydCB0aGUgTGFjZWRhZW1vbmlhbnMgaW4gdGhlIHdhci4gVGhpcyBDeXJ1cyBicm91Z2h0IHdpdGg8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDciPjQwNyBCLkMuPC9kYXRlPjwvbm90ZT4gaGltIGEgbGV0dGVyLCBhZGRyZXNzZWQgdG8gYWxsIHRoZSBkd2VsbGVycyB1cG9uIHRoZSBzZWE8ZGF0ZSBhdXRobmFtZT0iLTQwNyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNyI+NDA3IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gdGhlIG1hcml0aW1lIHByb3ZpbmNlcyBvZiBBc2lhIE1pbm9yLCBhcyBjb250cmFzdGVkIHdpdGggdGhlIGludGVyaW9yIG9mIHRoZSBQZXJzaWFuIEVtcGlyZS48L25vdGU+IGFuZCBiZWFyaW5nIHRoZSBLaW5nJ3Mgc2VhbCwgd2hpY2ggY29udGFpbmVkIGFtb25nIG90aGVyIHRoaW5ncyB0aGVzZSB3b3Jkczog4oCcSSBzZW5kIGRvd24gQ3lydXMgYXMgY2FyYW51cyBvZiB0aG9zZSB3aG9zZSBtdXN0ZXJpbmctcGxhY2UgaXMgQ2FzdG9sdXMu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZSB3b3JkIOKAnGNhcmFudXPigJ0gbWVhbnMg4oCcbG9yZC7igJ0gV2hlbiB0aGUgQXRoZW5pYW4gYW1iYXNzYWRvcnMgaGVhcmQgYWxsIHRoaXMgYW5kIHNhdyBDeXJ1cywgdGhleSB3aXNoZWQsIGlmIGl0IHdlcmUgcG9zc2libGUsIHRvIG1ha2UgdGhlaXIgam91cm5leSB0byB0aGUgS2luZywgYnV0IG90aGVyd2lzZSB0byByZXR1cm4gaG9tZS4KPC90cmFuc2xhdGlvbj4="
translation['1.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkN5cnVzLCBob3dldmVyLCBkaXJlY3RlZCBQaGFybmFiYXp1cyBlaXRoZXIgdG8gZ2l2ZSB0aGUgYW1iYXNzYWRvcnMgaW50byBoaXMgY2hhcmdlLCBvciBhdCBhbnkgcmF0ZSBub3QgdG8gbGV0IHRoZW0gZ28gaG9tZSBhcyB5ZXQsIGZvciBoZSB3aXNoZWQgdGhlIEF0aGVuaWFucyBub3QgdG8ga25vdyBvZiB3aGF0IHdhcyBnb2luZyBvbi4KPC90cmFuc2xhdGlvbj4="
translation['1.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlBoYXJuYWJhenVzLCBhY2NvcmRpbmdseSwgaW4gb3JkZXIgdGhhdCBDeXJ1cyBtaWdodCBub3QgY2Vuc3VyZSBoaW0sIGRldGFpbmVkIHRoZSBhbWJhc3NhZG9ycyBmb3IgYSB0aW1lLCBub3cgc2F5aW5nIHRoYXQgaGUgd291bGQgY29uZHVjdCB0aGVtIHRvIHRoZSBLaW5nLCBhbmQgYWdhaW4sIHRoYXQgaGUgd291bGQgbGV0IHRoZW0gZ28gaG9tZTsKPC90cmFuc2xhdGlvbj4="
translation['1.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPmJ1dCB3aGVuIHRocmVlIHllYXJzIGhhZCBwYXNzZWQsIGhlIHJlcXVlc3RlZCBDeXJ1cyB0byByZWxlYXNlIHRoZW0sIG9uIHRoZSBwbGVhIHRoYXQgaGUgaGFkIGdpdmVuIGhpcyBvYXRoIHRvIGNvbmR1Y3QgdGhlbSBiYWNrIHRvIHRoZSBjb2FzdCwgc2luY2UgaGUgY291bGQgbm90IHRha2UgdGhlbSB0byB0aGUgS2luZy4gU28gdGhleSBzZW50IHRoZSBhbWJhc3NhZG9ycyB0byBBcmlvYmFyemFuZXMgYW5kIGRpcmVjdGVkIGhpbSB0byBlc2NvcnQgdGhlbSBvbjsgYW5kIGhlIGNvbmR1Y3RlZCB0aGVtIHRvIENpdXMsIGluIE15c2lhLCB3aGVuY2UgdGhleSBzZXQgc2FpbCB0byBqb2luIHRoZSBBdGhlbmlhbiBhcm15Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFud2hpbGUgQWxjaWJpYWRlcywgd2lzaGluZyB0byBzYWlsIGhvbWUgd2l0aCBoaXMgdHJvb3BzLCBtYWRlIHN0cmFpZ2h0IGZvciBTYW1vczsgZnJvbSB0aGVyZSBoZSBzYWlsZWQsIHdpdGggdHdlbnR5IG9mIHRoZSBzaGlwcywgdG8gdGhlIENlcmFtaWMgR3VsZiwgaW4gQ2FyaWE7IGFuZCBhZnRlciBjb2xsZWN0aW5nIHRoZXJlIGEgaHVuZHJlZCB0YWxlbnRzLCBoZSByZXR1cm5lZCB0byBTYW1vcy4KPC90cmFuc2xhdGlvbj4="
translation['1.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRocmFzeWJ1bHVzLCBob3dldmVyLCB3aXRoIHRoaXJ0eSBzaGlwcywgd2VudCBvZmYgdG8gdGhlIFRocmFjaWFuIGNvYXN0LCB3aGVyZSBoZSByZWR1Y2VkIGFsbCB0aGUgcGxhY2VzIHdoaWNoIGhhZCByZXZvbHRlZCB0byB0aGUgTGFjZWRhZW1vbmlhbnMsIGFuZCBlc3BlY2lhbGx5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA3Ij40MDcgQi5DLjwvZGF0ZT48L25vdGU+IFRoYXNvcywgd2hpY2ggd2FzIGluIGEgYmFkIHN0YXRlIG9uIGFjY291bnQgb2Ygd2FycyBhbmQgcmV2b2x1dGlvbnMgYW5kIGZhbWluZS4KPGRhdGUgYXV0aG5hbWU9Ii00MDciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDciPjQwNyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['1.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaHJhc3lsbHVzIGZpbmFsbHksIHdpdGggdGhlIHJlc3Qgb2YgdGhlIGZsZWV0LCBzYWlsZWQgaG9tZSB0byBBdGhlbnM7IGJ1dCBiZWZvcmUgaGUgYXJyaXZlZCwgdGhlIEF0aGVuaWFucyBoYWQgY2hvc2VuIGFzIGdlbmVyYWxzIEFsY2liaWFkZXMsIHdobyB3YXMgc3RpbGwgaW4gZXhpbGUsIFRocmFzeWJ1bHVzLCB3aG8gd2FzIGFic2VudCwgYW5kIGFzIGEgdGhpcmQsIGZyb20gYW1vbmcgdGhvc2UgYXQgaG9tZSwgQ29ub24uCjwvdHJhbnNsYXRpb24+"
translation['1.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm93IEFsY2liaWFkZXMgc2FpbGVkIGZyb20gU2Ftb3Mgd2l0aCBoaXMgdHdlbnR5IHNoaXBzIGFuZCBoaXMgbW9uZXkgdG8gUGFyb3MsIGFuZCBmcm9tIHRoZXJlIGRpcmVjdGVkIGhpcyBjb3Vyc2Ugc3RyYWlnaHQgdG8gR3l0aGVpdW0sIGluIG9yZGVyIHRvIHRha2UgYSBsb29rIGF0IHRoZSB0aGlydHkgdHJpcmVtZXMgd2hpY2ggaGUgaGVhcmQgdGhlIExhY2VkYWVtb25pYW5zIHdlcmUgbWFraW5nIHJlYWR5IHRoZXJlIGFuZCB0byBzZWUgaG93IGhpcyBjaXR5IGZlbHQgdG93YXJkIGhpbSwgd2l0aCByZWZlcmVuY2UgdG8gaGlzIGhvbWVjb21pbmcuCjwvdHJhbnNsYXRpb24+"
translation['1.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBoZSBmb3VuZCB0aGF0IHRoZSB0ZW1wZXIgb2YgdGhlIEF0aGVuaWFucyB3YXMga2luZGx5LCB0aGF0IHRoZXkgaGFkIGNob3NlbiBoaW0gZ2VuZXJhbCwgYW5kIHRoYXQgaGlzIGZyaWVuZHMgd2VyZSB1cmdpbmcgaGltIGJ5IHBlcnNvbmFsIG1lc3NhZ2VzIHRvIHJldHVybiwgaGUgc2FpbGVkIGluIHRvIFBpcmFldXMsIGFycml2aW5nIG9uIHRoZSBkYXkgd2hlbiB0aGUgY2l0eSB3YXMgY2VsZWJyYXRpbmcgdGhlIFBseW50ZXJpYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5XaGVuIHRoZSBjbG90aGluZyBvZiB0aGUgYW5jaWVudCB3b29kZW4gc3RhdHVlIG9mIEF0aGVuYSBQb2xpYXMgd2FzIHJlbW92ZWQgYW5kIHdhc2hlZCAoPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DOu+G9u869zrXOuc69PC9mb3JlaWduPikuPC9ub3RlPiBhbmQgdGhlIHN0YXR1ZSBvZiBBdGhlbmEgd2FzIHZlaWxlZCBmcm9tIHNpZ2h0LOKAlGEgY2lyY3Vtc3RhbmNlIHdoaWNoIHNvbWUgcGVvcGxlIGltYWdpbmVkIHdhcyBvZiBpbGwgb21lbiwgYm90aCBmb3IgaGltIGFuZCBmb3IgdGhlIHN0YXRlOyBmb3Igb24gdGhhdCBkYXkgbm8gQXRoZW5pYW4gd291bGQgdmVudHVyZSB0byBlbmdhZ2UgaW4gYW55IHNlcmlvdXMgYnVzaW5lc3MuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+AzrvhvbvOvc61zrnOvTwvZm9yZWlnbj4pLjwvdHJhbnNsYXRpb24+"
translation['1.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBoZSBzYWlsZWQgaW4sIHRoZSBjb21tb24gY3Jvd2Qgb2YgUGlyYWV1cyBhbmQgb2YgdGhlIGNpdHkgZ2F0aGVyZWQgdG8gaGlzIHNoaXBzLCBmaWxsZWQgd2l0aCB3b25kZXIgYW5kIGRlc2lyaW5nIHRvIHNlZSB0aGUgZmFtb3VzIEFsY2liaWFkZXMuIFNvbWUgb2YgdGhlbSBzYWlkIHRoYXQgaGUgd2FzIHRoZSBiZXN0IG9mIHRoZSBjaXRpemVuczsgdGhhdCBoZSBhbG9uZSB3YXMgYmFuaXNoZWQgd2l0aG91dCBqdXN0IGNhdXNlLCBidXQgcmF0aGVyIGJlY2F1c2UgaGUgd2FzIHBsb3R0ZWQgYWdhaW5zdCBieSB0aG9zZSB3aG8gaGFkIGxlc3MgcG93ZXIgdGhhbiBoZSBhbmQgc3Bva2UgbGVzcyB3ZWxsIGFuZCBvcmRlcmVkIHRoZWlyIHBvbGl0aWNhbCBkb2luZ3Mgd2l0aCBhIHZpZXcgdG8gdGhlaXIgb3duIHByaXZhdGUgZ2Fpbiwgd2hlcmVhcyBoZSB3YXMgYWx3YXlzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA3Ij40MDcgQi5DLjwvZGF0ZT48L25vdGU+IGFkdmFuY2luZyB0aGUgY29tbW9uIHdlYWwsIGJvdGggYnkgaGlzIG93biBtZWFucyBhbmQgYnkgdGhlIHBvd2VyIG9mIHRoZSBzdGF0ZS4KPGRhdGUgYXV0aG5hbWU9Ii00MDciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDciPjQwNyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['1.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGUgdGltZSBpbiBxdWVzdGlvbiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SW4gPGRhdGUgYXV0aG5hbWU9Ii00MTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MTUiPjQxNSBCLkMuPC9kYXRlPiwganVzdCBiZWZvcmUgdGhlIGRlcGFydHVyZSBvZiBBbGNpYmlhZGVzIHdpdGggdGhlIFN5cmFjdXNhbiBleHBlZGl0aW9uLjwvbm90ZT4gdGhleSBzYWlkLCBoZSB3YXMgd2lsbGluZyB0byBiZSBicm91Z2h0IHRvIHRyaWFsIGF0IG9uY2UsIHdoZW4gdGhlIGNoYXJnZSBoYWQganVzdCBiZWVuIG1hZGUgdGhhdCBoZSBoYWQgY29tbWl0dGVkIHNhY3JpbGVnZSBhZ2FpbnN0IHRoZSBFbGV1c2luaWFuIE15c3RlcmllczsgaGlzIGVuZW1pZXMsIGhvd2V2ZXIsIHBvc3Rwb25lZCB0aGUgdHJpYWwsIHdoaWNoIHdhcyBvYnZpb3VzbHkgaGlzIHJpZ2h0LCBhbmQgdGhlbiwgd2hlbiBoZSB3YXMgYWJzZW50LCByb2JiZWQgaGltIG9mIGhpcyBmYXRoZXJsYW5kOwo8ZGF0ZSBhdXRobmFtZT0iLTQxNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxNSI+NDE1IEIuQy48L2RhdGU+LCBqdXN0IGJlZm9yZSB0aGUgZGVwYXJ0dXJlIG9mIEFsY2liaWFkZXMgd2l0aCB0aGUgU3lyYWN1c2FuIGV4cGVkaXRpb24uPC90cmFuc2xhdGlvbj4="
translation['1.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz50aGVyZWFmdGVyLCBpbiBoaXMgZXhpbGUsIGhlbHBsZXNzIGFzIGEgc2xhdmUgYW5kIGluIGRhbmdlciBvZiBoaXMgbGlmZSBldmVyeSBkYXksIGhlIHdhcyBmb3JjZWQgdG8gcGF5IGNvdXJ0IHRvIHRob3NlIHdob20gaGUgaGF0ZWQgbW9zdDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgU3BhcnRhbnMgYW5kIHRoZSBQZXJzaWFucy48L25vdGU+OyBhbmQgdGhvdWdoIGhlIHNhdyB0aG9zZSB3aG8gd2VyZSBkZWFyZXN0IHRvIGhpbSwgaGlzIGZlbGxvdy1jaXRpemVucyBhbmQga2luc21lbiBhbmQgYWxsIEF0aGVucywgbWFraW5nIG1pc3Rha2VzLCBoZSB3YXMgZGViYXJyZWQgYnkgaGlzIGJhbmlzaG1lbnQgZnJvbSB0aGUgb3Bwb3J0dW5pdHkgb2YgaGVscGluZyB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgbm90IHRoZSB3YXksIHRoZXkgc2FpZCwgb2YgbWVuIHN1Y2ggYXMgaGUgdG8gZGVzaXJlIHJldm9sdXRpb24gb3IgYSBjaGFuZ2UgaW4gZ292ZXJubWVudDsgZm9yIHVuZGVyIHRoZSBkZW1vY3JhY3kgaXQgaGFkIGJlZW4gaGlzIGZvcnR1bmUgdG8gYmUgbm90IG9ubHkgc3VwZXJpb3IgdG8gaGlzIGNvbnRlbXBvcmFyaWVzIGJ1dCBhbHNvIG5vdCBpbmZlcmlvciB0byBoaXMgZWxkZXJzLCB3aGlsZSBoaXMgZW5lbWllcywgb24gdGhlIG90aGVyIGhhbmQsIHdlcmUgaGVsZCBpbiBwcmVjaXNlbHkgdGhlIHNhbWUgbG93IGVzdGltYXRpb24gYWZ0ZXIgaGlzIGJhbmlzaG1lbnQgYXMgYmVmb3JlOyBsYXRlciwgaG93ZXZlciwgd2hlbiB0aGV5IGhhZCBnYWluZWQgcG93ZXIsIHRoZXkgaGFkIHNsYWluIHRoZSBiZXN0IG1lbiwgYW5kIHNpbmNlIHRoZXkgYWxvbmUgd2VyZSBsZWZ0LCB0aGV5IHdlcmUgYWNjZXB0ZWQgYnkgdGhlIGNpdGl6ZW5zIG1lcmVseSBmb3IgdGhlIHJlYXNvbiB0aGF0IGJldHRlciBtZW4gd2VyZSBub3QgYXZhaWxhYmxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T3RoZXJzLCBob3dldmVyLCBzYWlkIHRoYXQgQWxjaWJpYWRlcyBhbG9uZSB3YXMgcmVzcG9uc2libGUgZm9yIHRoZWlyIHBhc3QgdHJvdWJsZXMsIGFuZCBhcyBmb3IgdGhlIGlsbHMgd2hpY2ggdGhyZWF0ZW5lZCB0byBiZWZhbGwgdGhlIHN0YXRlLCBoZSBhbG9uZSB3b3VsZCBwcm9iYWJseSBwcm92ZSB0byBiZSB0aGUgcHJpbWUgY2F1c2Ugb2YgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['1.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVhbndoaWxlIEFsY2liaWFkZXMsIHdobyBoYWQgY29tZSB0byBhbmNob3IgY2xvc2UgdG8gdGhlIHNob3JlLCBkaWQgbm90IGF0IG9uY2UgZGlzZW1iYXJrLCB0aHJvdWdoIGZlYXIgb2YgaGlzIGVuZW1pZXM7IGJ1dCBtb3VudGluZyB1cG9uIHRoZSBkZWNrIG9mPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA3Ij40MDcgQi5DLjwvZGF0ZT48L25vdGU+IGhpcyBzaGlwLCBoZSBsb29rZWQgdG8gc2VlIHdoZXRoZXIgaGlzIGZyaWVuZHMgd2VyZSBwcmVzZW50Lgo8ZGF0ZSBhdXRobmFtZT0iLTQwNyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNyI+NDA3IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['1.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBoZSBzaWdodGVkIGhpcyBjb3VzaW4gRXVyeXB0b2xlbXVzLCB0aGUgc29uIG9mIFBlaXNpYW5heCwgYW5kIGhpcyBvdGhlciByZWxhdGl2ZXMgYW5kIHdpdGggdGhlbSBoaXMgZnJpZW5kcywgdGhlbiBoZSBkaXNlbWJhcmtlZCBhbmQgd2VudCB1cCB0byB0aGUgY2l0eSwgYWNjb21wYW5pZWQgYnkgYSBwYXJ0eSB3aG8gd2VyZSBwcmVwYXJlZCB0byBxdWVsbCBhbnkgYXR0YWNrIHRoYXQgYW55b25lIG1pZ2h0IG1ha2UgdXBvbiBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['1.4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYWZ0ZXIgaGUgaGFkIHNwb2tlbiBpbiBoaXMgb3duIGRlZmVuY2UgYmVmb3JlIHRoZSBTZW5hdGUgYW5kIHRoZSBBc3NlbWJseSwgc2F5aW5nIHRoYXQgaGUgaGFkIG5vdCBjb21taXR0ZWQgc2FjcmlsZWdlIGFuZCB0aGF0IGhlIGhhZCBiZWVuIHVuanVzdGx5IHRyZWF0ZWQsIGFuZCBhZnRlciBtb3JlIG9mIHRoZSBzYW1lIHNvcnQgaGFkIGJlZW4gc2FpZCwgd2l0aCBubyBvbmUgc3BlYWtpbmcgaW4gb3Bwb3NpdGlvbiBiZWNhdXNlIHRoZSBBc3NlbWJseSB3b3VsZCBub3QgaGF2ZSB0b2xlcmF0ZWQgaXQsIGhlIHdhcyBwcm9jbGFpbWVkIGdlbmVyYWwtaW4tY2hpZWYgd2l0aCBhYnNvbHV0ZSBhdXRob3JpdHksIHRoZSBwZW9wbGUgdGhpbmtpbmcgdGhhdCBoZSB3YXMgdGhlIG1hbiB0byByZWNvdmVyIGZvciB0aGUgc3RhdGUgaXRzIGZvcm1lciBwb3dlcjsgdGhlbiwgYXMgaGlzIGZpcnN0IGFjdCwgaGUgbGVkIG91dCBhbGwgaGlzIHRyb29wcyBhbmQgY29uZHVjdGVkIGJ5IGxhbmQgdGhlIHByb2Nlc3Npb248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+RnJvbSBBdGhlbnMgdG8gdGhlIHRlbXBsZSBvZiBEZW1ldGVyIGF0IEVsZXVzaXMuPC9ub3RlPiBvZiB0aGUgRWxldXNpbmlhbiBNeXN0ZXJpZXMsIHdoaWNoIHRoZSBBdGhlbmlhbnMgaGFkIGJlZW4gY29uZHVjdGluZyBieSBzZWEgb24gYWNjb3VudCBvZiB0aGUgd2FyOwo8L3RyYW5zbGF0aW9uPg=="
translation['1.4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgYWZ0ZXIgdGhpcyBoZSBjb2xsZWN0ZWQgYW4gYXJtYW1lbnQgb2YgZmlmdGVlbiBodW5kcmVkIGhvcGxpdGVzLCBvbmUgaHVuZHJlZCBhbmQgZmlmdHkgaG9yc2VtZW4sIGFuZCBvbmUgaHVuZHJlZCBzaGlwcy4gVGhlbiwgaW4gdGhlIGZvdXJ0aCBtb250aCBhZnRlciBoaXMgcmV0dXJuIHRvIEF0aGVucywgaGUgc2V0IHNhaWwgZm9yIEFuZHJvcywgd2hpY2ggaGFkIHJldm9sdGVkIGZyb20gdGhlIEF0aGVuaWFuczsgYW5kIHdpdGggaGltIHdlcmUgc2VudCBBcmlzdG9jcmF0ZXMgYW5kIEFkZWltYW50dXMsIHRoZSBzb24gb2YgTGV1Y29sb3BoaWRlcywgdGhlIGdlbmVyYWxzIHdobyBoYWQgYmVlbiBjaG9zZW4gZm9yIHNlcnZpY2UgYnkgbGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['1.4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWxjaWJpYWRlcyBkaXNlbWJhcmtlZCBoaXMgYXJteSBhdCBHYXVyaXVtLCBpbiB0aGUgdGVycml0b3J5IG9mIEFuZHJvczsgYW5kIHdoZW4gdGhlIG1lbiBvZiBBbmRyb3MgYW5kIHRoZSBMYWNvbmlhbnMgd2hvIHdlcmUgdGhlcmUgY2FtZSBmb3J0aCB0byBtZWV0IGhpbSwgdGhlIEF0aGVuaWFucyByb3V0ZWQgdGhlbSwgc2h1dCB0aGVtIHVwIGluIHRoZWlyIGNpdHksIGFuZCBraWxsZWQgc29tZSBmZXcgb2YgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['1.4.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSBBbGNpYmlhZGVzIHNldCB1cCBhIHRyb3BoeSwgYW5kIGFmdGVyIHJlbWFpbmluZyB0aGVyZSBhIGZldyBkYXlzLCBzYWlsZWQgdG8gU2Ftb3MsIGFuZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNyI+NDA3IEIuQy48L2RhdGU+PC9ub3RlPiBmcm9tIFNhbW9zIGFzIGEgYmFzZSBwcm9zZWN1dGVkIHRoZSB3YXIuCjxkYXRlIGF1dGhuYW1lPSItNDA3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA3Ij40MDcgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['1.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3QgbG9uZyBiZWZvcmUgdGhpcyB0aGUgTGFjZWRhZW1vbmlhbnMgaGFkIHNlbnQgb3V0IEx5c2FuZGVyIGFzIGFkbWlyYWwsIHNpbmNlIENyYXRlc2lwcGlkYXMnIHRlcm0gb2Ygb2ZmaWNlIGhhZCBleHBpcmVkLiBBbmQgYWZ0ZXIgTHlzYW5kZXIgaGFkIGFycml2ZWQgYXQgUmhvZGVzIGFuZCBzZWN1cmVkIHNvbWUgc2hpcHMgdGhlcmUsIGhlIHNhaWxlZCB0byBDb3MgYW5kIE1pbGV0dXMsIGFuZCBmcm9tIHRoZXJlIHRvIEVwaGVzdXMsIHdoZXJlIGhlIHJlbWFpbmVkIHdpdGggc2V2ZW50eSBzaGlwcyB1bnRpbCBDeXJ1cyBhcnJpdmVkIGF0IFNhcmRpcy4gT24gaGlzIGFycml2YWwgTHlzYW5kZXIgd2VudCB1cCB0byB2aXNpdCBoaW0sIGFjY29tcGFuaWVkIGJ5IHRoZSBhbWJhc3NhZG9ycyBmcm9tIExhY2VkYWVtb24uCjwvdHJhbnNsYXRpb24+"
translation['1.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gYW5kIHRoZXJlIHRoZXkgdG9sZCBDeXJ1cyBvZiB0aGUgZGVlZHMgb2Ygd2hpY2ggVGlzc2FwaGVybmVzIGhhZCBiZWVuIGd1aWx0eSwgYW5kIGJlZ2dlZCBoaW0gdG8gc2hvdyB0aGUgdXRtb3N0IHplYWwgaW4gdGhlIHdhci4KPC90cmFuc2xhdGlvbj4="
translation['1.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkN5cnVzIHJlcGxpZWQgdGhhdCB0aGlzIHdhcyB3aGF0IGhpcyBmYXRoZXIgaGFkIGluc3RydWN0ZWQgaGltIHRvIGRvLCBhbmQgdGhhdCBoZSBoYWQgbm8gb3RoZXIgaW50ZW50aW9uIGhpbXNlbGYsIGJ1dCB3b3VsZCBkbyBldmVyeXRoaW5nIHBvc3NpYmxlOyBoZSBoYWQgYnJvdWdodCB3aXRoIGhpbSwgaGUgc2FpZCwgZml2ZSBodW5kcmVkIHRhbGVudHM7IGlmIHRoaXMgYW1vdW50IHNob3VsZCBwcm92ZSBpbnN1ZmZpY2llbnQsIGhlIHdvdWxkIHVzZSBoaXMgb3duIG1vbmV5LCB3aGljaCBoaXMgZmF0aGVyIGhhZCBnaXZlbiBoaW07IGFuZCBpZiB0aGlzIHRvbyBzaG91bGQgcHJvdmUgaW5hZGVxdWF0ZSwgaGUgd291bGQgZ28gc28gZmFyIGFzIHRvIGJyZWFrIHVwIHRoZSB0aHJvbmUgd2hlcmVvbiBoZSBzYXQsIHdoaWNoIHdhcyBvZiBzaWx2ZXIgYW5kIGdvbGQuCjwvdHJhbnNsYXRpb24+"
translation['1.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBhbWJhc3NhZG9ycyB0aGFua2VkIGhpbSwgYW5kIHVyZ2VkIGhpbSB0byBtYWtlIHRoZSB3YWdlIG9mIGVhY2ggc2FpbG9yIGFuIEF0dGljIGRyYWNobWE8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIEF0dGljIGRyYWNobWEgPSBhYm91dCA5IGQuIG9yIDE4IGNlbnRzOyBpdCB3YXMgdGhlIGF2ZXJhZ2Ugd2FnZSBvZiBhbiBvcmRpbmFyeSBkYXktbGFib3VyZXIuPC9ub3RlPiBhIGRheSwgZXhwbGFpbmluZyB0aGF0IGlmIHRoaXMgd2VyZSBtYWRlIHRoZSByYXRlLCB0aGUgc2FpbG9ycyBvZiB0aGUgQXRoZW5pYW4gZmxlZXQgd291bGQgZGVzZXJ0IHRoZWlyIHNoaXBzLCBhbmQgaGVuY2UgaGUgd291bGQgc3BlbmQgbGVzcyBtb25leS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2luY2UgdGhlIHdhciB3b3VsZCBiZSBicm91Z2h0IHRvIGEgc3BlZWR5IGNvbmNsdXNpb24sIHRoZSBBdGhlbmlhbiBzYWlsb3JzIGdvaW5nIG92ZXIgdG8gdGhlIExhY2VkYWVtb25pYW4gZmxlZXQgZm9yIHRoZSBzYWtlIG9mIHRoZSBoaWdoZXIgd2FnZS48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['1.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkhlIHJlcGxpZWQgdGhhdCB0aGVpciBwbGFuIHdhcyBhIGdvb2Qgb25lLCBidXQgdGhhdCBpdCB3YXMgbm90IHBvc3NpYmxlIGZvciBoaW0gdG8gYWN0IGNvbnRyYXJ5IHRvIHRoZSBLaW5nJ3MgaW5zdHJ1Y3Rpb25zOyBiZXNpZGVzLCB0aGUgb3JpZ2luYWwgY29tcGFjdCByYW4gaW4gdGhpcyB3YXksIHRoYXQgdGhlIEtpbmcgc2hvdWxkIGdpdmUgdGhpcnR5IG1pbmFlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgbWluYT0xMDAgZHJhY2htYWU9NjAwIG9ib2xzLiBBIHNoaXAncyBjcmV3IG5vcm1hbGx5IG51bWJlcmVkIDIwMCBtZW47IGhlbmNlIDMwIG1pbmFlIHBlciBtb250aCBwZXIgc2hpcD0zIG9ib2xzIHBlciBkYXkgcGVyIG1hbi48L25vdGU+IHBlciBtb250aCB0byBlYWNoIHNoaXAsIHdoYXRldmVyIG51bWJlciBvZiBzaGlwcyB0aGUgTGFjZWRhZW1vbmlhbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDciPjQwNyBCLkMuPC9kYXRlPjwvbm90ZT4gbWlnaHQgd2lzaCB0byBtYWludGFpbi4KPGRhdGUgYXV0aG5hbWU9Ii00MDciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDciPjQwNyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['1.5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkx5c2FuZGVyIGFjY29yZGluZ2x5IGRyb3BwZWQgdGhlIG1hdHRlciBmb3IgdGhlIG1vbWVudDsgYnV0IGFmdGVyIGRpbm5lciwgd2hlbiBDeXJ1cyBkcmFuayBoaXMgaGVhbHRoIGFuZCBhc2tlZCBoaW0gYnkgd2hhdCBhY3QgaGUgY291bGQgZ3JhdGlmeSBoaW0gbW9zdCwgTHlzYW5kZXIgcmVwbGllZDog4oCcQnkgYWRkaW5nIGFuIG9ib2wgdG8gdGhlIHBheSBvZiBlYWNoIHNhaWxvci7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBmcm9tIHRoaXMgdGltZSBmb3J0aCB0aGUgd2FnZSB3YXMgZm91ciBvYm9scywgd2hlcmVhcyBpdCBoYWQgcHJldmlvdXNseSBiZWVuIHRocmVlLiBDeXJ1cyBhbHNvIHNldHRsZWQgdGhlIGFycmVhcnMgb2YgcGF5IGFuZCBnYXZlIHRoZW0gYSBtb250aCdzIHdhZ2UgaW4gYWR2YW5jZSBiZXNpZGVzLCBzbyB0aGF0IHRoZSBtZW4gb2YgdGhlIGZsZWV0IHdlcmUgbXVjaCBtb3JlIHplYWxvdXMuCjwvdHJhbnNsYXRpb24+"
translation['1.5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGVuIHRoZSBBdGhlbmlhbnMgaGVhcmQgb2YgdGhpcywgdGhleSB3ZXJlIGRlc3BvbmRlbnQsIGFuZCBzZW50IGFtYmFzc2Fkb3JzIHRvIEN5cnVzIHRocm91Z2ggVGlzc2FwaGVybmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkN5cnVzLCBob3dldmVyLCB3b3VsZCBub3QgcmVjZWl2ZSB0aGVtLCBhbHRob3VnaCBUaXNzYXBoZXJuZXMgdXJnZWQgaGltIHRvIGRvIHNvIGFuZCBhZHZpc2VkIGhpbSB0byBzZWUgdG8gaXQgdGhhdCBubyBzaW5nbGUgR3JlZWsgc3RhdGUgc2hvdWxkIGJlY29tZSBzdHJvbmcsIGJ1dCB0aGF0IGFsbCBiZSBrZXB0IHdlYWsgdGhyb3VnaCBjb25zdGFudCBxdWFycmVsbGluZyBhbW9uZyB0aGVtc2VsdmVzLOKAlHRoZSBwb2xpY3kgaGUgaGltc2VsZiBoYWQgZm9sbG93ZWQgb24gdGhlIGFkdmljZSBvZiBBbGNpYmlhZGVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gVGh1Yy4gOC4gNDYuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['1.5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIEx5c2FuZGVyLCB3aGVuIGhlIGhhZCBmaW5pc2hlZCBvcmdhbmlzaW5nIGhpcyBmbGVldCwgaGUgaGF1bGVkIGFzaG9yZSB0aGUgc2hpcHMgd2hpY2ggd2VyZSBhdCBFcGhlc3VzLCBub3cgbmluZXR5IGluIG51bWJlciwgYW5kIGtlcHQgcXVpZXQsIHdoaWxlIHRoZSBzaGlwcyB3ZXJlIGJlaW5nIGRyaWVkIG91dCBhbmQgcmVwYWlyZWQuCjwvdHJhbnNsYXRpb24+"
translation['1.5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5NZWFudGltZSBBbGNpYmlhZGVzLCBoZWFyaW5nIHRoYXQgVGhyYXN5YnVsdXMgaGFkIGNvbWUgb3V0IGZyb20gdGhlIEhlbGxlc3BvbnQgYW5kIHdhcyBpbnZlc3RpbmcgUGhvY2FlYSwgc2FpbGVkIGFjcm9zcyB0byBzZWUgaGltLCBsZWF2aW5nIGluIGNvbW1hbmQgb2YgdGhlIGZsZWV0IEFudGlvY2h1cywgdGhlIHBpbG90IG9mIGhpcyBvd24gc2hpcCwgd2l0aCBvcmRlcnMgbm90IHRvIGF0dGFjayBMeXNhbmRlcidzIHNoaXBzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbnRpb2NodXMsIGhvd2V2ZXIsIHdpdGggaGlzIG93biBzaGlwIGFuZCBvbmUgb3RoZXIgc2FpbGVkIGZyb20gTm90aXVtIGludG8gdGhlIGhhcmJvdXIgb2YgRXBoZXN1cyBhbmQgY29hc3RlZCBhbG9uZyBwYXN0IHRoZSB2ZXJ5IHByb3dzIG9mIEx5c2FuZGVyJ3Mgc2hpcHMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk9uIHRoaXMgaW5jaWRlbnQgc2VlIFBsdXRhcmNoLCA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BbGMuPC90aXRsZT4gMzUuPC9ub3RlPgo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BbGMuPC90aXRsZT4gMzUuPC90cmFuc2xhdGlvbj4="
translation['1.5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5MeXNhbmRlciBhdCBmaXJzdCBsYXVuY2hlZCBhIGZldyBzaGlwcyBhbmQgcHVyc3VlZCBoaW0sIGJ1dCB3aGVuIHRoZSBBdGhlbmlhbnMgY2FtZSB0byB0aGUgYWlkIG9mIEFudGlvY2h1cyB3aXRoIG1vcmUgc2hpcHMsIGhlIHRoZW4gZm9ybWVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA3Ij40MDcgQi5DLjwvZGF0ZT48L25vdGU+IGludG8gbGluZSBvZiBiYXR0bGUgZXZlcnkgc2hpcCBoZSBoYWQgYW5kIHNhaWxlZCBhZ2FpbnN0IHRoZW0uIFRoZXJldXBvbiB0aGUgQXRoZW5pYW5zIGFsc28gbGF1bmNoZWQgdGhlIHJlc3Qgb2YgdGhlaXIgdHJpcmVtZXMgYXQgTm90aXVtIGFuZCBzZXQgb3V0LCBhcyBlYWNoIG9uZSBnb3QgYSBjbGVhciBjb3Vyc2UuCjxkYXRlIGF1dGhuYW1lPSItNDA3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA3Ij40MDcgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['1.5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Gcm9tIHRoYXQgbW9tZW50IHRoZXkgZmVsbCB0byBmaWdodGluZywgdGhlIG9uZSBzaWRlIGluIGdvb2Qgb3JkZXIsIGJ1dCB0aGUgQXRoZW5pYW5zIHdpdGggdGhlaXIgc2hpcHMgc2NhdHRlcmVkLCBhbmQgZm91Z2h0IHVudGlsIHRoZSBBdGhlbmlhbnMgdG9vayB0byBmbGlnaHQsIGFmdGVyIGxvc2luZyBmaWZ0ZWVuIHRyaXJlbWVzLiBBcyBmb3IgdGhlIG1lbiB1cG9uIHRoZW0sIHRoZSBncmVhdGVyIHBhcnQgZXNjYXBlZCwgYnV0IHNvbWUgd2VyZSB0YWtlbiBwcmlzb25lcnMuIFRoZW4gTHlzYW5kZXIsIGFmdGVyIHRha2luZyBwb3NzZXNzaW9uIG9mIGhpcyBwcml6ZXMgYW5kIHNldHRpbmcgdXAgYSB0cm9waHkgYXQgTm90aXVtLCBzYWlsZWQgYWNyb3NzIHRvIEVwaGVzdXMsIHdoaWxlIHRoZSBBdGhlbmlhbnMgd2VudCB0byBTYW1vcy4gQWZ0ZXIgdGhpcyBBbGNpYmlhZGVzIGNhbWUgdG8gU2Ftb3MsIHNldCBzYWlsIHdpdGggYWxsIGhpcyBzaGlwcyB0byB0aGUgaGFyYm91ciBvZiBFcGhlc3VzLCBhbmQgZm9ybWVkIHRoZSBmbGVldCBpbiBsaW5lIGF0IHRoZSBtb3V0aCBvZiB0aGUgaGFyYm91ciBhcyBhIGNoYWxsZW5nZSB0byBiYXR0bGUsIGluIGNhc2UgYW55b25lIGNhcmVkIHRvIGZpZ2h0LiBCdXQgd2hlbiBMeXNhbmRlciBkaWQgbm90IHNhaWwgb3V0IGFnYWluc3QgaGltLCBiZWNhdXNlIGhpcyBmbGVldCB3YXMgY29uc2lkZXJhYmx5IGluZmVyaW9yIGluIG51bWJlcnMsIEFsY2liaWFkZXMgc2FpbGVkIGJhY2sgdG8gU2Ftb3MuIEFuZCBhIGxpdHRsZSBsYXRlciB0aGUgTGFjZWRhZW1vbmlhbnMgY2FwdHVyZWQgRGVscGhpbml1bSBhbmQgRWlvbi4KPC90cmFuc2xhdGlvbj4="
translation['1.5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgQXRoZW5pYW5zIGF0IGhvbWUgZ290IHRoZSBuZXdzIG9mIHRoZSBiYXR0bGUgYXQgTm90aXVtLCB0aGV5IHdlcmUgYW5ncnkgd2l0aCBBbGNpYmlhZGVzLCB0aGlua2luZyB0aGF0IGhlIGhhZCBsb3N0IHRoZSBzaGlwcyB0aHJvdWdoIG5lZ2xlY3Qgb2YgZHV0eSBhbmQgZGlzc29sdXRlIGNvbmR1Y3QsIGFuZCB0aGV5IGNob3NlIHRlbiBuZXcgZ2VuZXJhbHMsIENvbm9uLCBEaW9tZWRvbiwgTGVvbiwgUGVyaWNsZXMsIEVyYXNpbmlkZXMsIEFyaXN0b2NyYXRlcywgQXJjaGVzdHJhdHVzLCBQcm90b21hY2h1cywgVGhyYXN5bGx1cywgYW5kIEFyaXN0b2dlbmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5TbyBBbGNpYmlhZGVzLCB3aG8gd2FzIGluIGRpc2Zhdm91ciB3aXRoIHRoZSBhcm15IGFzIHdlbGwsIHRvb2sgYSB0cmlyZW1lIGFuZCBzYWlsZWQgYXdheSB0byBoaXMgY2FzdGxlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldoaWNoIGhlIGhhZCBjb25zdHJ1Y3RlZCwgc2F5cyBQbHV0YXJjaCAoQWxjLjM2KSwgdG8gc2VydmUgaGltIGFzIGEgcGxhY2Ugb2YgcmVmdWdlIGluIGNhc2Ugb2YgcG9zc2libGUgdHJvdWJsZS48L25vdGU+IGluIHRoZSBDaGVyc29uZXNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.5.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIENvbm9uIHNldCBzYWlsIGZyb20gQW5kcm9zLCB3aXRoIHRoZSB0d2VudHkgc2hpcHMgd2hpY2ggaGUgaGFkLCB0byBTYW1vcywgdGhlcmUgdG88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDciPjQwNyBCLkMuPC9kYXRlPjwvbm90ZT4gYXNzdW1lIGNvbW1hbmQgb2YgdGhlIGZsZWV0IGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgdm90ZSB3aGljaCB0aGUgQXRoZW5pYW5zIGhhZCBwYXNzZWQuIFRoZXkgYWxzbyBzZW50IFBoYW5vc3RoZW5lcyB0byBBbmRyb3MsIHdpdGggZm91ciBzaGlwcywgdG8gcmVwbGFjZSBDb25vbi4KPGRhdGUgYXV0aG5hbWU9Ii00MDciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDciPjQwNyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['1.5.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgd2F5IFBoYW5vc3RoZW5lcyBmZWxsIGluIHdpdGggdHdvIFRodXJpYW4gdHJpcmVtZXMgYW5kIGNhcHR1cmVkIHRoZW0sIGNyZXdzIGFuZCBhbGw7IGFuZCB0aGUgbWVuIHdobyB3ZXJlIHRodXMgdGFrZW4gd2VyZSBhbGwgaW1wcmlzb25lZCBieSB0aGUgQXRoZW5pYW5zLCBidXQgdGhlaXIgY29tbWFuZGVyLCBEb3JpZXVzLCBhIFJob2RpYW4gYnkgYmlydGgsIGJ1dCBzb21lIHRpbWUgYmVmb3JlIGV4aWxlZCBmcm9tIGJvdGggQXRoZW5zIGFuZCBSaG9kZXMgYnkgdGhlIEF0aGVuaWFucywgd2hvIGhhZCBjb25kZW1uZWQgaGltIGFuZCBoaXMga2luc21lbiB0byBkZWF0aCwgYW5kIG5vdyBhIGNpdGl6ZW4gb2YgVGh1cmlpLCB0aGV5IHNldCBmcmVlIHdpdGhvdXQgZXZlbiBleGFjdGluZyBhIHJhbnNvbSwgdGFraW5nIHBpdHkgdXBvbiBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['1.5.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBtZWFud2hpbGUsIENvbm9uIGhhZCBhcnJpdmVkIGF0IFNhbW9zLCB3aGVyZSBoZSBmb3VuZCB0aGUgQXRoZW5pYW4gZmxlZXQgaW4gYSBzdGF0ZSBvZiBkZXNwb25kZW5jeSwgaGUgbWFubmVkIHdpdGggZnVsbCBjb21wbGVtZW50cyBzZXZlbnR5IHRyaXJlbWVzIGluc3RlYWQgb2YgdGhlIGZvcm1lciBudW1iZXIsIHdoaWNoIHdhcyBtb3JlIHRoYW4gYSBodW5kcmVkLCBhbmQgc2V0dGluZyBvdXQgd2l0aCB0aGlzIGZsZWV0LCBpbiBjb21wYW55IHdpdGggdGhlIG90aGVyIGdlbmVyYWxzLCBsYW5kZWQgaGVyZSBhbmQgdGhlcmUgaW4gdGhlIGVuZW15J3MgdGVycml0b3J5IGFuZCBwbHVuZGVyZWQgaXQuCjwvdHJhbnNsYXRpb24+"
translation['1.5.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U28gdGhlIHllYXIgZW5kZWQsIGJlaW5nIHRoZSB5ZWFyIGluIHdoaWNoIHRoZSBDYXJ0aGFnaW5pYW5zIG1hZGUgYW4gZXhwZWRpdGlvbiB0byBTaWNpbHkgd2l0aCBvbmUgaHVuZHJlZCBhbmQgdHdlbnR5IHRyaXJlbWVzIGFuZCBhbiBhcm15IG9mIG9uZSBodW5kcmVkIGFuZCB0d2VudHkgdGhvdXNhbmQgbWVuLCBhbmQgYWx0aG91Z2ggZGVmZWF0ZWQgaW4gYmF0dGxlLCBzdGFydmVkIEFjcmFnYXMgaW50byBzdWJtaXNzaW9uIGFmdGVyIGJlc2llZ2luZyBpdCBmb3Igc2V2ZW4gbW9udGhzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGUgZW5zdWluZyB5ZWFy4oCUdGhlIHllYXIgaW4gd2hpY2ggdGhlcmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDYiPjQwNiBCLkMuPC9kYXRlPjwvbm90ZT4gd2FzIGFuIGVjbGlwc2Ugb2YgdGhlIG1vb24gb25lIGV2ZW5pbmcsIGFuZCB0aGUgb2xkIHRlbXBsZTxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+T24gdGhlIEFjcm9wb2xpcy4gT24gaXRzIGlkZW50aXR5IHNlZSBEJ09vZ2UsIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkFjcm9wb2xpcyBvZiBBdGhlbnM8L3RpdGxlPiwgQXBwZW5kaXggSUlJLjwvbm90ZT4gb2YgQXRoZW5hIGF0IEF0aGVucyB3YXMgYnVybmVkLCBQaXR5YXMgYmVpbmcgbm93IGVwaG9yIGF0IFNwYXJ0YSBhbmQgQ2FsbGlhcyBhcmNob24gYXQgQXRoZW5z4oCUdGhlIExhY2VkYWVtb25pYW5zIHNlbnQgQ2FsbGljcmF0aWRhcyB0byB0YWtlIGNvbW1hbmQ8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BY3JvcG9saXMgb2YgQXRoZW5zPC90aXRsZT4sIEFwcGVuZGl4IElJSS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDYiPjQwNiBCLkMuPC9kYXRlPjwvbm90ZT4gb2YgdGhlIGZsZWV0LCBzaW5jZSBMeXNhbmRlcidzIHRlcm0gb2Ygb2ZmaWNlIGhhZCBlbmRlZCAoYW5kIHdpdGggaXQgdGhlIHR3ZW50eS1mb3VydGggeWVhciBvZiB0aGUgd2FyKS4KPGRhdGUgYXV0aG5hbWU9Ii00MDYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDYiPjQwNiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['1.6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIEx5c2FuZGVyIGRlbGl2ZXJlZCBvdmVyIHRoZSBzaGlwcywgaGUgdG9sZCBDYWxsaWNyYXRpZGFzIHRoYXQgaGUgZGlkIHNvIGFzIG1hc3RlciBvZiB0aGUgc2VhIGFuZCB2aWN0b3IgaW4gYmF0dGxlLiBDYWxsaWNyYXRpZGFzLCBob3dldmVyLCBiYWRlIGhpbSBjb2FzdCBhbG9uZyBmcm9tIEVwaGVzdXMgb24gdGhlIGxlZnQgb2YgU2Ftb3MsIHdoZXJlIHRoZSBBdGhlbmlhbiBzaGlwcyB3ZXJlLCBhbmQgZGVsaXZlciBvdmVyIHRoZSBmbGVldCBhdCBNaWxldHVzOyB0aGVuLCBoZSBzYWlkLCBoZSB3b3VsZCBncmFudCBoaW0gdGhhdCBoZSB3YXMgbWFzdGVyIG9mIHRoZSBzZWEuCjwvdHJhbnNsYXRpb24+"
translation['1.6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGVuIEx5c2FuZGVyIHJlcGxpZWQgdGhhdCBoZSB3b3VsZCBub3QgbWVkZGxlIHdoZW4gYW5vdGhlciB3YXMgY29tbWFuZGVyLCBDYWxsaWNyYXRpZGFzLCBsZWZ0IHRvIGhpbXNlbGYsIG1hbm5lZCB3aXRoIHNhaWxvcnMgZnJvbSBDaGlvcyBhbmQgUmhvZGVzIGFuZCBvdGhlciBhbGxpZWQgc3RhdGVzIGZpZnR5IHNoaXBzIGluIGFkZGl0aW9uIHRvIHRob3NlIHdoaWNoIGhlIGhhZCByZWNlaXZlZCBmcm9tIEx5c2FuZGVyLiBBbmQgYWZ0ZXIgYXNzZW1ibGluZyB0aGUgZW50aXJlIGZsZWV0LCBhIHRvdGFsIG9mIG9uZSBodW5kcmVkIGFuZCBmb3J0eSBzaGlwcywgaGUgcHJlcGFyZWQgdG8gbWVldCB0aGUgZW5lbXkuCjwvdHJhbnNsYXRpb24+"
translation['1.6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGVuIGhlIGZvdW5kIG91dCB0aGF0IEx5c2FuZGVyJ3MgZnJpZW5kcyB3ZXJlIGludHJpZ3VpbmcgYWdhaW5zdCBoaW0s4oCUdGhleSBub3Qgb25seSByZW5kZXJlZCBoYWxmLWhlYXJ0ZWQgc2VydmljZSwgYnV0IGFsc28gc3ByZWFkIHRoZSByZXBvcnQgaW4gdGhlIGNpdGllcyB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyBtYWRlIGEgc2VyaW91cyBtaXN0YWtlIGluIGNoYW5naW5nIHRoZWlyIGFkbWlyYWxzOyBmb3IgaW4gcGxhY2Ugb2YgbWVuIHdobyB3ZXJlIHByb3ZpbmcgdGhlbXNlbHZlcyBmaXQgYW5kIHdlcmUganVzdCBjb21pbmcgdG8gdW5kZXJzdGFuZCBuYXZhbCBtYXR0ZXJzIGFuZCBrbmV3IHdlbGwgaG93IHRvIGRlYWwgd2l0aCBtZW4sIHRoZXkgZnJlcXVlbnRseSBzZW50IG91dCBtZW4gd2hvIHdlcmUgdW5hY3F1YWludGVkIHdpdGggdGhlIHNlYSBhbmQgdW5rbm93biB0byB0aGUgcGVvcGxlIG5lYXIgdGhlIHNlYXQgb2Ygd2FyOyBhbmQgdGhlcmUgd2FzIGRhbmdlciwgdGhleSBzYWlkLCBvZiB0aGVpciBtZWV0aW5nIHdpdGggZGlzYXN0ZXIgb24gdGhpcyBhY2NvdW50LOKAlGFmdGVyIGhlYXJpbmcgb2YgYWxsIHRoaXMgQ2FsbGljcmF0aWRhcyBjYWxsZWQgdG9nZXRoZXIgdGhlIExhY2VkYWVtb25pYW5zIHdobyB3ZXJlIHRoZXJlIGFuZCBhZGRyZXNzZWQgdGhlbTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC9ub3RlPiBhcyBmb2xsb3dzOgo8ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['1.6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJLCBmb3IgbXkgcGFydCwgYW0gY29udGVudCB0byBzdGF5IGF0IGhvbWUsIGFuZCBpZiBMeXNhbmRlciBvciBhbnlvbmUgZWxzZSBwcm9mZXNzZXMgdG8gYmUgbW9yZSBleHBlcmllbmNlZCBpbiBuYXZhbCBhZmZhaXJzLCBJIHdpbGwgbm90IHN0YW5kIGluIGhpcyB3YXkgc28gZmFyIGFzIEkgYW0gY29uY2VybmVkOyBidXQgaXQgaXMgSSB3aG8gaGF2ZSBiZWVuIHNlbnQgYnkgdGhlIHN0YXRlIHRvIGNvbW1hbmQgdGhlIGZsZWV0LCBhbmQgSSBjYW5ub3QgZG8gb3RoZXJ3aXNlIHRoYW4gb2JleSBteSBvcmRlcnMgdG8gdGhlIGJlc3Qgb2YgbXkgcG93ZXIuIEFzIGZvciB5b3UsIGluIHZpZXcgb2YgdGhlIGFtYml0aW9uIHdoaWNoIEkgY2hlcmlzaCBhbmQgdGhlIGNyaXRpY2lzbXMgd2hpY2ggb3VyIHN0YXRlIGluY3VycyzigJRhbmQgeW91IGtub3cgdGhlbSBhcyB3ZWxsIGFzIEkgZG8s4oCUZ2l2ZSBtZSB3aGF0ZXZlciBhZHZpY2Ugc2VlbXMgdG8geW91IGJlc3Qgb24gdGhlIHF1ZXN0aW9uIG9mIG15IHJlbWFpbmluZyBoZXJlIG9yIHNhaWxpbmcgYmFjayBob21lIHRvIHJlcG9ydCB0aGUgY29uZGl0aW9ucyB3aGljaCBleGlzdCBoZXJlLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TaW5jZSBubyBvbmUgZGFyZWQgdG8gcHJvcG9zZSBhbnl0aGluZyBlbHNlIHRoYW4gdGhhdCBoZSBzaG91bGQgb2JleSB0aGUgYXV0aG9yaXRpZXMgYXQgaG9tZSBhbmQgZG8gdGhlIHdvcmsgZm9yIHdoaWNoIGhlIGhhZCBjb21lLCBoZSB3ZW50IHRvIEN5cnVzIGFuZCBhc2tlZCBmb3IgcGF5IGZvciB0aGUgc2FpbG9yczsgQ3lydXMsIGhvd2V2ZXIsIHRvbGQgaGltIHRvIHdhaXQgZm9yIHR3byBkYXlzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBDYWxsaWNyYXRpZGFzLCBpbmRpZ25hbnQgYXQgYmVpbmcgdGh1cyBwdXQgb2ZmIGFuZCBkcml2ZW4gdG8gYW5nZXIgYnkgaGF2aW5nIHRvIGRhbmNlIGF0dGVuZGFuY2UgYXQgaGlzIGdhdGVzLCBkZWNsYXJpbmcgdGhhdCB0aGUgR3JlZWtzIHdlcmUgaW4gYSBzb3JyeSBwbGlnaHQsIHRvYWR5aW5nIHRvIGJhcmJhcmlhbnMgZm9yIHRoZSBzYWtlIG9mIG1vbmV5LCBhbmQgc2F5aW5nIHRoYXQgaWYgaGUgcmVhY2hlZCBob21lIGluIHNhZmV0eSBoZSB3b3VsZCBkbyBoaXMgYmVzdCB0byByZWNvbmNpbGUgdGhlIEF0aGVuaWFucyBhbmQgdGhlIExhY2VkYWVtb25pYW5zLCBzYWlsZWQgYXdheSB0byBNaWxldHVzOwo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPmFuZCBhZnRlciBkZXNwYXRjaGluZyB0cmlyZW1lcyBmcm9tIHRoZXJlIHRvIExhY2VkYWVtb24gdG8gZ2V0IG1vbmV5LCBoZSBnYXRoZXJlZCB0aGUgTWlsZXNpYW5zIGluIGFzc2VtYmx5IGFuZCBzcG9rZSBhcyBmb2xsb3dzOjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxVcG9uIG1lLCBtZW4gb2YgTWlsZXR1cywgbGllcyB0aGUgbmVjZXNzaXR5IG9mIG9iZXlpbmcgdGhlIGF1dGhvcml0aWVzIGF0IGhvbWU7IGFuZCBhcyBmb3IgeW91LCBJIGNsYWltIHRoYXQgeW91IHNob3VsZCBzaG93IHRoZSB1dG1vc3QgemVhbCBpbiB0aGlzIHdhciwgYmVjYXVzZSB5b3UgZHdlbGwgYW1vbmcgYmFyYmFyaWFucyBhbmQgaW4gdGhlIHBhc3QgaGF2ZSBzdWZmZXJlZCB2ZXJ5IG1hbnkgaWxscyBhdCB0aGVpciBoYW5kcy4KPC90cmFuc2xhdGlvbj4="
translation['1.6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB5b3Ugc2hvdWxkIGFzIGxlYWRlcnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDYiPjQwNiBCLkMuPC9kYXRlPjwvbm90ZT4gc2hvdyB0aGUgb3RoZXIgYWxsaWVzIGhvdyB3ZSBtYXkgaW5mbGljdCB0aGUgdXRtb3N0IGhhcm0gdXBvbiB0aGUgZW5lbXkgaW4gdGhlIHNob3J0ZXN0IHRpbWUsIHVudGlsIHRoZSBwZW9wbGUgcmV0dXJuIGZyb20gTGFjZWRhZW1vbiB3aG9tIEkgaGF2ZSBzZW50IHRoaXRoZXIgdG8gZ2V0IG1vbmV5Owo8ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['1.6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5mb3IgdGhlIG1vbmV5IHdoaWNoIEx5c2FuZGVyIGhhZCBvbiBoYW5kIGhlIGdhdmUgYmFjayB0byBDeXJ1cywgYXMgdGhvdWdoIGl0IHdlcmUgdW5uZWVkZWQgc3VycGx1cywgYW5kIHdlbnQgaGlzIHdheTsgYW5kIGFzIGZvciBDeXJ1cywgd2hlbmV2ZXIgSSB2aXNpdGVkIGhpbSBoZSBpbnZhcmlhYmx5IHB1dCBvZmYgZ2l2aW5nIG1lIGFuIGF1ZGllbmNlLCBhbmQgSSBjb3VsZCBub3QgYnJpbmcgbXlzZWxmIHRvIGRhbmNlIGF0dGVuZGFuY2UgYXQgaGlzIGdhdGVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgSSBwcm9taXNlIHlvdSB0aGF0IGZvciB3aGF0ZXZlciBnb29kIHJlc3VsdHMgd2UgYWNoaWV2ZSB3aGlsZSB3ZSBhcmUgd2FpdGluZyBmb3IgdGhlIGZ1bmRzIGZyb20gU3BhcnRhIEkgd2lsbCBtYWtlIHlvdSBhbiBhZGVxdWF0ZSByZXR1cm4uIExldCB1cyB0aGVuLCB3aXRoIHRoZSBoZWxwIG9mIHRoZSBnb2RzLCBzaG93IHRoZSBiYXJiYXJpYW5zIHRoYXQgZXZlbiB3aXRob3V0IHBheWluZyBjb3VydCB0byB0aGVtIHdlIGNhbiBwdW5pc2ggb3VyIGVuZW1pZXMu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.6.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBoZSBoYWQgc2FpZCB0aGlzLCBtYW55IGFyb3NlLCBwYXJ0aWN1bGFybHkgdGhvc2Ugd2hvIHdlcmUgYWNjdXNlZCBvZiBvcHBvc2luZyBoaW0sIGFuZCBpbiBhbGFybSBwcm9wb3NlZCBhIGdyYW50IG9mIG1vbmV5LCBvZmZlcmluZyBwcml2YXRlIGNvbnRyaWJ1dGlvbnMgYXMgd2VsbC4gQW5kIHRha2luZyB0aGlzIG1vbmV5IGFuZCBzdXBwbHlpbmcgZnJvbSBDaGlvcyBhIHBheW1lbnQgb2YgZml2ZSBkcmFjaG1hZSBhcGllY2UgZm9yIGhpcyBzZWFtZW4sIGhlIHNhaWxlZCBhZ2FpbnN0IE1ldGh5bW5hLCBpbiBMZXNib3MsIHdoaWNoIHdhcyBob3N0aWxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGUgTWV0aHltbmFlYW5zIHJlZnVzZWQgdG8gc3VycmVuZGVyLOKAlGZvciB0aGVyZSB3YXMgYW4gQXRoZW5pYW4gZ2Fycmlzb24gaW4gdGhlIHBsYWNlIGFuZCB0aG9zZSB3aG8gaGFkIGNvbnRyb2wgb2YgdGhlIGdvdmVybm1lbnQgd2VyZSBwYXJ0aXNhbnMgb2YgQXRoZW5zLCDigJRDYWxsaWNyYXRpZGFzIGF0dGFja2VkIHRoZSBjaXR5IGFuZCBjYXB0dXJlZCBpdCBieSBzdG9ybS4KPC90cmFuc2xhdGlvbj4="
translation['1.6.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BbGwgdGhlIHByb3BlcnR5IHdoaWNoIGl0IGNvbnRhaW5lZCB0aGUgc29sZGllcnMgc2VpemVkIGFzIGJvb3R5LCBidXQgYWxsIHRoZSBjYXB0aXZlcyBDYWxsaWNyYXRpZGFzIGFzc2VtYmxlZCBpbiB0aGUgbWFya2V0LXBsYWNlOyBhbmQgd2hlbiBoaXMgYWxsaWVzIHVyZ2VkIGhpbSB0byBzZWxsIGludG8gc2xhdmVyeSB0aGUgTWV0aHltbmFlYW5zIGFzIHdlbGwgYXMgdGhlIEF0aGVuaWFucywgaGUgc2FpZCB0aGF0IHdoaWxlIGhlIHdhcyBjb21tYW5kZXIgbm8gR3JlZWsgc2hvdWxkIGJlIGVuc2xhdmVkIGlmPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48L25vdGU+IGhlIGNvdWxkIGhlbHAgaXQuCjxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['1.6.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSBvbiB0aGUgbmV4dCBkYXkgaGUgbGV0IHRoZSBNZXRoeW1uYWVhbnMgZ28gZnJlZSwgYnV0IHNvbGQgdGhlIG1lbWJlcnMgb2YgdGhlIEF0aGVuaWFuIGdhcnJpc29uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkkuZS4sIENhbGxpY3JhdGlkYXMgYWdyZWVzIHdpdGggaGlzIGFsbGllcyBpbiByZWdhcmRpbmcgdGhlIHNhbGUgb2YgdGhlIEF0aGVuaWFucyBhcyBhIG1hdHRlciBvZiBjb3Vyc2UuIFdoYXQgaGUgb2JqZWN0ZWQgdG8gd2FzIHRoZSBlbnNsYXZpbmcgb2YgdGhlIGluaGFiaXRhbnRzIG9mIGNhcHR1cmVkIHRvd25zIHdoaWNoIGhhZCBjaGFuY2VkIHRvIGJlIGluIHBvc3Nlc3Npb24gb2YgdGhlIEF0aGVuaWFucy48L25vdGU+IGFuZCBzdWNoIG9mIHRoZSBjYXB0aXZlcyBhcyB3ZXJlIHNsYXZlczsgdGhlbiBoZSBzZW50IHdvcmQgdG8gQ29ub24gdGhhdCBoZSB3b3VsZCBwdXQgYSBzdG9wIHRvIGhpcyBwbGF5aW5nIHRoZSB3YW50b24gd2l0aCBoaXMgYnJpZGUsIHRoZSBzZWEuIEFuZCB3aGVuIGhlIGNhdWdodCBzaWdodCBvZiBDb25vbiBwdXR0aW5nIG91dCB0byBzZWEgYXQgZGF5YnJlYWssIGhlIHB1cnN1ZWQgaGltLCBhaW1pbmcgdG8gY3V0IG9mZiBoaXMgY291cnNlIHRvIFNhbW9zLCBzbyB0aGF0IGhlIGNvdWxkIG5vdCBkaXJlY3QgaGlzIGZsaWdodCB0aGl0aGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5Db25vbidzIHNoaXBzLCBob3dldmVyLCBtYWRlIGdvb2Qgc3BlZWQgYXMgaGUgZmxlZCwgYmVjYXVzZSB0aGUgYmVzdCBvYXJzbWVuIGhhZCBiZWVuIHBpY2tlZCBvdXQgb2YgYSBncmVhdCBtYW55IGNyZXdzIGFuZCBhc3NlbWJsZWQgaW4gYSBmZXc7IGluIHRoZSBlbmQgaGUgc291Z2h0IHJlZnVnZSBpbiB0aGUgaGFyYm91ciBvZiBNeXRpbGVuZSwgaW4gTGVzYm9zLCBhbmQgd2l0aCBoaW0gdHdvIG1vcmUgb2YgdGhlIHRlbiBnZW5lcmFscywgTGVvbiBhbmQgRXJhc2luaWRlcy4gQnV0IENhbGxpY3JhdGlkYXMsIHB1cnN1aW5nIHdpdGggb25lIGh1bmRyZWQgYW5kIHNldmVudHkgc2hpcHMsIHNhaWxlZCBpbnRvIHRoZSBoYXJib3VyIHNpbXVsdGFuZW91c2x5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgQ29ub24sIHRod2FydGVkIGluIGhpcyBwbGFuIGJ5IHRoZSBlbmVteSdzIHN3aWZ0bmVzcywgd2FzIGZvcmNlZCB0byBnaXZlIGJhdHRsZSBhdCB0aGUgbW91dGggb2YgdGhlIGhhcmJvdXIgYW5kIGxvc3QgdGhpcnR5IHNoaXBzOyB0aGVpciBjcmV3cywgaG93ZXZlciwgZXNjYXBlZCB0byB0aGUgbGFuZDsgYW5kIHRoZSByZW1haW5kZXIgb2YgaGlzIHNoaXBzLCBmb3J0eSBpbiBudW1iZXIsIGhlIGRyZXcgdXAgb24gc2hvcmUgdW5kZXIgdGhlIHdhbGwgb2YgdGhlIGNpdHkuCjwvdHJhbnNsYXRpb24+"
translation['1.6.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gQ2FsbGljcmF0aWRhcyBhbmNob3JlZCBpbiB0aGUgaGFyYm91ciBhbmQgYmxvY2thZGVkIGhpbSBvbiB0aGF0IHNpZGUsIGhvbGRpbmcgdGhlIG91dGxldCB0byB0aGUgc2VhLiBBcyBmb3IgdGhlIGxhbmQgc2lkZSwgaGUgc3VtbW9uZWQgdGhlIE1ldGh5bW5hZWFucyB0byBjb21lIHRvIGhpcyBhaWQgd2l0aCB0aGVpciBlbnRpcmUgZm9yY2UgYW5kIGJyb3VnaHQgb3ZlciBoaXMgYXJteSBmcm9tIENoaW9zOyBhbmQgbW9uZXkgY2FtZSB0byBoaW0gZnJvbSBDeXJ1cy4KPC90cmFuc2xhdGlvbj4="
translation['1.6.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBDb25vbiBmb3VuZCBoaW1zZWxmIGJsb2NrYWRlZCBib3RoIGJ5IGxhbmQgYW5kIGJ5IHNlYSwgYW5kIHdhcyB1bmFibGUgdG8gcHJvY3VyZSBwcm92aXNpb25zIGZyb20gYW55d2hlcmUs4oCUYW5kIHRoZSBwZW9wbGUgaW4gdGhlIGNpdHkgd2VyZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC9ub3RlPiBtYW55LCBhbmQgdGhlIEF0aGVuaWFucyBjb3VsZCBub3QgY29tZSB0byBoaXMgYWlkIGJlY2F1c2UgdGhleSBoYWQgbm90IGxlYXJuZWQgb2YgdGhlc2UgZXZlbnRzLOKAlGhlIGxhdW5jaGVkIHR3byBvZiBoaXMgZmFzdGVzdCBzaGlwcyBhbmQgbWFubmVkIHRoZW0gYmVmb3JlIGRheWJyZWFrLCBwaWNraW5nIG91dCB0aGUgYmVzdCBvYXJzbWVuIGZyb20gaGlzIHdob2xlIGZsZWV0LCBzaGlmdGluZyB0aGUgbWFyaW5lcyB0byB0aGUgaG9sZCBvZiB0aGUgc2hpcHMsIGFuZCBzZXR0aW5nIHVwIHRoZSBzaWRlIHNjcmVlbnMuPGRhdGUgYXV0aG5hbWU9Ii00MDYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDYiPjQwNiBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UZW1wb3Jhcnkgc2NyZWVucyBzZXQgdXAgYWxvbmcgdGhlIGJ1bHdhcmtzLCBvcmRpbmFyaWx5IHNlcnZpbmcgZm9yIHByb3RlY3Rpb24gYWdhaW5zdCBtaXNzaWxlcywgaGVyZSBmb3IgY29uY2VhbG1lbnQuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGNvbnRpbnVlZCBpbiB0aGlzIHdheSB0aHJvdWdoIHRoZSBkYXksIGJ1dCBlYWNoIGV2ZW5pbmcgaGUgaGFkIHRoZW0gZGlzZW1iYXJrIHdoZW4gZGFya25lc3MgY2FtZSBvbiwgc28gdGhhdCB0aGUgZW5lbXkgbWlnaHQgbm90IHBlcmNlaXZlIHRoYXQgdGhleSB3ZXJlIHNvIGRvaW5nLiBPbiB0aGUgZmlmdGggZGF5IHRoZXkgcHV0IG9uIGJvYXJkIGEgbW9kZXJhdGUgcXVhbnRpdHkgb2YgcHJvdmlzaW9ucywgYW5kIHdoZW4gaXQgY2FtZSB0byBiZSBtaWRkYXkgYW5kIHRoZSBibG9ja2FkZXJzIHdlcmUgY2FyZWxlc3MgYW5kIHNvbWUgb2YgdGhlbSBhc2xlZXAsIHRoZXkgcm93ZWQgb3V0IG9mIHRoZSBoYXJib3VyLCBhbmQgb25lIG9mIHRoZSBzaGlwcyBzZXQgb3V0IGZvciB0aGUgSGVsbGVzcG9udCBhbmQgdGhlIG90aGVyIHRvIHRoZSBvcGVuIHNlYS4KPC90cmFuc2xhdGlvbj4="
translation['1.6.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIGJsb2NrYWRlcnMsIGFzIHRoZXkgc2V2ZXJhbGx5IGdvdCB0aGVpciBzaGlwcyBjbGVhciBvZiBvbmUgYW5vdGhlciwgY3V0dGluZyBhd2F5IHRoZWlyIGFuY2hvcnMgYW5kIHJvdXNpbmcgdGhlbXNlbHZlcyBmcm9tIHNsZWVwLCBoYXN0ZW5lZCB0byB0aGUgcHVyc3VpdCBpbiBjb25mdXNpb24sIGZvciBpdCBjaGFuY2VkIHRoYXQgdGhleSBoYWQgYmVlbiBicmVha2Zhc3Rpbmcgb24gdGhlIHNob3JlOyBhbmQgd2hlbiB0aGV5IGhhZCBlbWJhcmtlZCwgdGhleSBwdXJzdWVkIHRoZSB2ZXNzZWwgd2hpY2ggaGFkIG1hZGUgZm9yIHRoZSBvcGVuIHNlYSwgYW5kIGF0IHN1bnNldCB0aGV5IG92ZXJoYXVsZWQgaGVyIGFuZCwgYWZ0ZXIgY2FwdHVyaW5nIGhlciBpbiBiYXR0bGUsIHRvb2sgaGVyIGluIHRvdyBhbmQgYnJvdWdodCBoZXIgYmFjaywgbWVuIGFuZCBhbGwsIHRvIHRoZWlyIGZsZWV0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIHNoaXAgd2hpY2ggZmxlZCB0b3dhcmQgdGhlIEhlbGxlc3BvbnQgZXNjYXBlZCwgYW5kIG9uIGl0cyBhcnJpdmFsIGF0IEF0aGVucyByZXBvcnRlZCB0aGUgYmxvY2thZGUuIE1lYW53aGlsZSBEaW9tZWRvbiwgc2Vla2luZyB0byBhaWQgQ29ub24sIGJsb2NrYWRlZCBhcyBoZSB3YXMsIGFuY2hvcmVkIHdpdGggdHdlbHZlIHNoaXBzIGluIHRoZSBzdHJhaXQgb2YgTXl0aWxlbmUuCjwvdHJhbnNsYXRpb24+"
translation['1.6.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5DYWxsaWNyYXRpZGFzLCBob3dldmVyLCBzYWlsZWQgZG93biB1cG9uIGhpbSBzdWRkZW5seSBhbmQgY2FwdHVyZWQgdGVuIG9mIGhpcyBzaGlwcywgRGlvbWVkb24gZXNjYXBpbmcgd2l0aCBoaXMgb3duIHNoaXAgYW5kIG9uZSBvdGhlci4KPC90cmFuc2xhdGlvbj4="
translation['1.6.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgQXRoZW5pYW5zIGhlYXJkIG9mIHdoYXQgaGFkIGhhcHBlbmVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48L25vdGU+IGFuZCBvZiB0aGUgYmxvY2thZGUsIHRoZXkgdm90ZWQgdG8gZ28gdG8gdGhlIHJlc2N1ZSB3aXRoIG9uZSBodW5kcmVkIGFuZCB0ZW4gc2hpcHMsIHB1dHRpbmcgYWJvYXJkIGFsbCB3aG8gd2VyZSBvZiBtaWxpdGFyeSBhZ2UsIHdoZXRoZXIgc2xhdmU8ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkl0IHdhcyBvbmx5IGluIHJhcmUgY2FzZXMgdGhhdCB0aGUgQXRoZW5pYW5zIGVtcGxveWVkIHNsYXZlcyBmb3IgbWlsaXRhcnkgc2VydmljZS48L25vdGU+IG9yIGZyZWU7IGFuZCB3aXRoaW4gdGhpcnR5IGRheXMgdGhleSBtYW5uZWQgdGhlIG9uZSBodW5kcmVkIGFuZCB0ZW4gc2hpcHMgYW5kIHNldCBmb3J0aC4gRXZlbiB0aGUga25pZ2h0czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5XaG8gd2VyZSBvcmRpbmFyaWx5IGV4ZW1wdCBmcm9tIHNlcnZpY2UgYXQgc2VhLjwvbm90ZT4gd2VudCBhYm9hcmQgaW4gY29uc2lkZXJhYmxlIG51bWJlcnMuCjwvdHJhbnNsYXRpb24+"
translation['1.6.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIHRoZXkgc2FpbGVkIHRvIFNhbW9zIGFuZCBmcm9tIHRoZXJlIGdvdCB0ZW4gU2FtaWFuIHNoaXBzOyB0aGV5IGNvbGxlY3RlZCBhbHNvIG1vcmUgdGhhbiB0aGlydHkgb3RoZXJzIGZyb20gdGhlIHJlc3Qgb2YgdGhlIGFsbGllcywgZm9yY2luZyBldmVyeWJvZHkgdG8gZW1iYXJrLCBhbmQgaW4gbGlrZSBtYW5uZXIgd2hhdGV2ZXIgQXRoZW5pYW4gc2hpcHMgaGFwcGVuZWQgdG8gYmUgYWJyb2FkLiBBbmQgdGhlIHRvdGFsIG51bWJlciBvZiB0aGUgc2hpcHMgY2FtZSB0byBtb3JlIHRoYW4gb25lIGh1bmRyZWQgYW5kIGZpZnR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgQ2FsbGljcmF0aWRhcywgd2hlbiBoZSBoZWFyZCB0aGF0IHRoZSByZWxpZWYgZXhwZWRpdGlvbiB3YXMgYWxyZWFkeSBhdCBTYW1vcywgbGVmdCBiZWhpbmQgaGltIGF0IE15dGlsZW5lIGZpZnR5IHNoaXBzIHdpdGggRXRlb25pY3VzIGFzIGNvbW1hbmRlciwgYW5kIHNldHRpbmcgc2FpbCB3aXRoIHRoZSByZW1haW5pbmcgb25lIGh1bmRyZWQgYW5kIHR3ZW50eSwgdG9vayBkaW5uZXIgYXQgQ2FwZSBNYWxlYSBpbiBMZXNib3MuCjwvdHJhbnNsYXRpb24+"
translation['1.6.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgc2FtZSBkYXkgaXQgY2hhbmNlZCB0aGF0IHRoZSBBdGhlbmlhbnMgdG9vayBkaW5uZXIgb24gdGhlIEFyZ2ludXNhZSBpc2xhbmRzLiBUaGVzZSBsaWUgb3Bwb3NpdGUgTXl0aWxlbmUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoYXQgaXMsIGJldHdlZW4gTGVzYm9zIGFuZCB0aGUgbWFpbmxhbmQgb2YgQXNpYSBNaW5vci48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['1.6.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBDYWxsaWNyYXRpZGFzIHNhdyB0aGVpciBmaXJlcyBkdXJpbmcgdGhlIG5pZ2h0IGFuZCBwZW9wbGUgcmVwb3J0ZWQgdG8gaGltIHRoYXQgaXQgd2FzIHRoZSBBdGhlbmlhbnMsIGhlIHByb3Bvc2VkIHRvIHB1dCB0byBzZWEgYXQgYWJvdXQgbWlkbmlnaHQsIGluIG9yZGVyIHRvIGF0dGFjayB0aGVtIHVuZXhwZWN0ZWRseTsgYnV0IGEgaGVhdnkgcmFpbiBjb21pbmcgb24sIHdpdGggdGh1bmRlciwgcHJldmVudGVkIHRoZSBzZXR0aW5nIG91dC4gQW5kIHdoZW4gaXQgY2Vhc2VkLCBoZSBzYWlsZWQgYXQgZGF5YnJlYWsgZm9yIHRoZSBBcmdpbnVzYWUuCjwvdHJhbnNsYXRpb24+"
translation['1.6.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIEF0aGVuaWFucyBzdG9vZCBvdXQgdG8gbWVldCBoaW0sIGV4dGVuZGluZyB0aGVpciBsZWZ0IHdpbmcgb3V0IHRvIHNlYSBhbmQgYXJyYW5nZWQgaW4gdGhlIGZvbGxvd2luZyBvcmRlcjogQXJpc3RvY3JhdGVzLCBpbiBjb21tYW5kIG9mIHRoZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC9ub3RlPiBsZWZ0IHdpbmcsIGxlZCB0aGUgd2F5IHdpdGggZmlmdGVlbiBzaGlwcywgYW5kIG5leHQgaW4gb3JkZXIgRGlvbWVkb24gd2l0aCBmaWZ0ZWVuIG1vcmU7IGFuZCBQZXJpY2xlcyB3YXMgc3RhdGlvbmVkIGJlaGluZCBBcmlzdG9jcmF0ZXMgYW5kIEVyYXNpbmlkZXMgYmVoaW5kIERpb21lZG9uOyBhbmQgYmVzaWRlIERpb21lZG9uIHdlcmUgdGhlIFNhbWlhbnMgd2l0aCB0ZW4gc2hpcHMsIGRyYXduIHVwIGluIHNpbmdsZSBsaW5lOyBhbmQgdGhlaXIgY29tbWFuZGVyIHdhcyBhIFNhbWlhbiBuYW1lZCBIaXBwZXVzOyBhbmQgbmV4dCB0byB0aGVtIHdlcmUgdGhlIHRlbiBzaGlwcyBvZiB0aGUgdGF4aWFyY2hzLDxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGVuIHRheGlhcmNocywgb25lIGZvciBlYWNoIEF0aGVuaWFuIHRyaWJlLCBjb21tYW5kZWQgdGhlIGNvbnRpbmdlbnRzICg8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG9sc6+zrXOuc+CPC9mb3JlaWduPikgZnVybmlzaGVkIGJ5IHRoZWlyIHNldmVyYWwgdHJpYmVzLjwvbm90ZT4gYWxzbyBpbiBzaW5nbGUgbGluZTsgYW5kIGJlaGluZCB0aGVzZSB0aGUgdGhyZWUgc2hpcHMgb2YgdGhlIG5hdWFyY2hzPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4ThvbHOvs61zrnPgjwvZm9yZWlnbj4pIGZ1cm5pc2hlZCBieSB0aGVpciBzZXZlcmFsIHRyaWJlcy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+TWFuaWZlc3RseSBzdWJvcmRpbmF0ZSBvZmZpY2VycywgYnV0IHRoZSBwcmVjaXNlIG1lYW5pbmcgb2YgdGhlIHRpdGxlIGluIHRoZSBBdGhlbmlhbiBuYXZ5IGlzIHVua25vd24uPC9ub3RlPiBhbmQgYWxzbyBzb21lIHNoaXBzIGZyb20gdGhlIGFsbGllczsKPC90cmFuc2xhdGlvbj4="
translation['1.6.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgdGhlIHJpZ2h0IHdpbmcgd2FzIHVuZGVyIHRoZSBjb21tYW5kIG9mIFByb3RvbWFjaHVzLCB3aXRoIGZpZnRlZW4gc2hpcHM7IGFuZCBiZXNpZGUgaGltIHdhcyBUaHJhc3lsbHVzIHdpdGggZmlmdGVlbiBtb3JlOyBhbmQgTHlzaWFzLCB3aXRoIHRoZSBzYW1lIG51bWJlciBvZiBzaGlwcywgd2FzIHN0YXRpb25lZCBiZWhpbmQgUHJvdG9tYWNodXMsIGFuZCBBcmlzdG9nZW5lcyBiZWhpbmQgVGhyYXN5bGx1cy4KPC90cmFuc2xhdGlvbj4="
translation['1.6.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgc2hpcHMgd2VyZSBhcnJhbmdlZCBpbiB0aGlzIHdheSBzbyBhcyBub3QgdG8gZ2l2ZSB0aGUgZW5lbXkgYSBjaGFuY2Ugb2YgYnJlYWtpbmcgdGhyb3VnaDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTOueG9s866z4DOu86/z4XPgjwvZm9yZWlnbj4gY29uc2lzdGVkIGluIGRyaXZpbmcgYXQgZnVsbCBzcGVlZCBiZXR3ZWVuIHR3byBzaGlwcyBvZiB0aGUgZW5lbXkncyBsaW5lLOKAlGJyZWFraW5nIG9hcnMgYW5kIGluZmxpY3RpbmcgYW55IG90aGVyIHBvc3NpYmxlIGRhbWFnZSBvbiB0aGUgd2F5LOKAlGFuZCB0aGVuIHR1cm5pbmcgdG8gYXR0YWNrIHRoZSBzdGVybnMgb3Igc2lkZXMgb2YgdGhlIGhvc3RpbGUgc2hpcHMuIEluIHRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM61z4HhvbfPgM67zr/Phc+CPC9mb3JlaWduPiB0aGUgc2FtZSBvYmplY3Qgd2FzIGFjY29tcGxpc2hlZCBieSByb3dpbmcgYXJvdW5kIHRoZSBlbmQgb2YgdGhlIGVuZW15J3MgbGluZS48L25vdGU+IHRoZSBsaW5lOyBmb3IgdGhlIEF0aGVuaWFucyB3ZXJlIGluZmVyaW9yIGluIHNlYW1hbnNoaXAuIEJ1dCBhbGwgdGhlIHZlc3NlbHMgb2YgdGhlIExhY2VkYWVtb25pYW5zIHdlcmUgYXJyYW5nZWQgaW4gc2luZ2xlIGxpbmUsIHdpdGggYSB2aWV3IHRvIGJyZWFraW5nIHRocm91Z2ggdGhlIGVuZW15IGFuZCBjaXJjbGluZyByb3VuZCBoaW0sIGluYXNtdWNoIGFzIHRoZXkgaGFkIHN1cGVyaW9yIHNlYW1lbi4gQW5kIENhbGxpY3JhdGlkYXMgd2FzIG9uIHRoZSByaWdodCB3aW5nLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtM654b2zzrrPgM67zr/Phc+CPC9mb3JlaWduPiBjb25zaXN0ZWQgaW4gZHJpdmluZyBhdCBmdWxsIHNwZWVkIGJldHdlZW4gdHdvIHNoaXBzIG9mIHRoZSBlbmVteSdzIGxpbmUs4oCUYnJlYWtpbmcgb2FycyBhbmQgaW5mbGljdGluZyBhbnkgb3RoZXIgcG9zc2libGUgZGFtYWdlIG9uIHRoZSB3YXks4oCUYW5kIHRoZW4gdHVybmluZyB0byBhdHRhY2sgdGhlIHN0ZXJucyBvciBzaWRlcyBvZiB0aGUgaG9zdGlsZSBzaGlwcy4gSW4gdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+AzrXPgeG9t8+AzrvOv8+Fz4I8L2ZvcmVpZ24+IHRoZSBzYW1lIG9iamVjdCB3YXMgYWNjb21wbGlzaGVkIGJ5IHJvd2luZyBhcm91bmQgdGhlIGVuZCBvZiB0aGUgZW5lbXkncyBsaW5lLjwvdHJhbnNsYXRpb24+"
translation['1.6.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgSGVybW9uIHRoZSBNZWdhcmlhbiwgdGhlIHBpbG90IG9mIENhbGxpY3JhdGlkYXMnIHNoaXAsIHNhaWQgdG8gaGltIHRoYXQgaXQgd2FzIHdlbGwgdG8gc2FpbCBhd2F5OyBmb3IgdGhlIHRyaXJlbWVzIG9mIHRoZSBBdGhlbmlhbnMgd2VyZSBmYXIgbW9yZSBudW1lcm91cy4gQ2FsbGljcmF0aWRhcywgaG93ZXZlciwgc2FpZCB0aGF0IFNwYXJ0YSB3b3VsZCBmYXJlIG5vbmUgdGhlIHdvcnNlIGlmIGhlIHdlcmUga2lsbGVkLCBidXQgZmxpZ2h0LCBoZSBzYWlkLCB3b3VsZCBiZSBhIGRpc2dyYWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyB0aGV5IGZlbGwgdG8gZmlnaHRpbmcsIGFuZCBmb3VnaHQgZm9yIGEgbG9uZyB0aW1lLCB0aGVpciBzaGlwcyBhdCBmaXJzdCBpbiBjbG9zZSBvcmRlciBhbmQgYWZ0ZXJ3YXJkczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC9ub3RlPiBzY2F0dGVyZWQuIEJ1dCB3aGVuIENhbGxpY3JhdGlkYXMsIGFzIGhpcyBzaGlwIHJhbW1lZCBhbiBlbmVteSwgZmVsbCBvdmVyYm9hcmQgaW50byB0aGUgc2VhIGFuZCBkaXNhcHBlYXJlZCwgYW5kIFByb3RvbWFjaHVzIGFuZCB0aG9zZSB3aXRoIGhpbSBvbiB0aGUgcmlnaHQgd2luZyBkZWZlYXRlZCB0aGUgb3Bwb3NpbmcgTGFjZWRhZW1vbmlhbiBsZWZ0LCB0aGVuIGJlZ2FuIGEgZmxpZ2h0IG9mIHRoZSBQZWxvcG9ubmVzaWFucyB0byBDaGlvcywgdGhvdWdoIHZlcnkgbWFueSB3ZW50IHRvIFBob2NhZWE7IHdoaWxlIHRoZSBBdGhlbmlhbnMgc2FpbGVkIGJhY2sgdG8gdGhlIEFyZ2ludXNhZS4KPGRhdGUgYXV0aG5hbWU9Ii00MDYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDYiPjQwNiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['1.6.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbG9zcyBvbiB0aGUgQXRoZW5pYW4gc2lkZSB3YXMgdHdlbnR5LWZpdmUgc2hpcHMsIGNyZXdzIGFuZCBhbGwsIHdpdGggdGhlIGV4Y2VwdGlvbiBvZiBhIGZldyBtZW4gd2hvIHdlcmUgYnJvdWdodCB0byBzaG9yZSwgYW5kIG9uIHRoZSBQZWxvcG9ubmVzaWFuIHNpZGUgbmluZSBMYWNvbmlhbiBzaGlwcywgb3V0IG9mIGEgdG90YWwgb2YgdGVuLCBhbmQgbW9yZSB0aGFuIHNpeHR5IHNoaXBzIG9mIHRoZSBhbGxpZXMuCjwvdHJhbnNsYXRpb24+"
translation['1.6.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIHZpY3RvcnkgaXQgd2FzIHJlc29sdmVkIGJ5IHRoZSBBdGhlbmlhbiBnZW5lcmFscyB0aGF0IFRoZXJhbWVuZXMgYW5kIFRocmFzeWJ1bHVzLCB3aG8gd2VyZSBzaGlwLWNhcHRhaW5zLCBhbmQgc29tZSBvZiB0aGUgdGF4aWFyY2hzLCBzaG91bGQgc2FpbCB3aXRoIGZvcnR5LXNldmVuIHNoaXBzIHRvIHRoZSBhaWQgb2YgdGhlIGRpc2FibGVkIHZlc3NlbHMgYW5kIHRoZSBtZW4gb24gYm9hcmQgdGhlbSwgd2hpbGUgdGhleSB0aGVtc2VsdmVzIHdlbnQgd2l0aCB0aGUgcmVzdCBvZiB0aGUgZmxlZXQgdG8gYXR0YWNrIHRoZSBzaGlwcyB1bmRlciBFdGVvbmljdXMgd2hpY2ggd2VyZSBibG9ja2FkaW5nIE15dGlsZW5lLiBCdXQgZGVzcGl0ZSB0aGVpciBkZXNpcmUgdG8gY2Fycnkgb3V0IHRoZXNlIG1lYXN1cmVzLCB0aGUgd2luZCBhbmQgYSBoZWF2eSBzdG9ybSB3aGljaCBjYW1lIG9uIHByZXZlbnRlZCB0aGVtOyBhY2NvcmRpbmdseSwgYWZ0ZXIgc2V0dGluZyB1cCBhIHRyb3BoeSwgdGhleSBiaXZvdWFja2VkIHdoZXJlIHRoZXkgd2VyZS4KPC90cmFuc2xhdGlvbj4="
translation['1.6.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIEV0ZW9uaWN1cywgdGhlIGRpc3BhdGNoLWJvYXQgcmVwb3J0ZWQgdG8gaGltIHRoZSB3aG9sZSBzdG9yeSBvZiB0aGUgYmF0dGxlLiBIZSwgaG93ZXZlciwgc2VudCB0aGUgYm9hdCBvdXQgYWdhaW4sIHRlbGxpbmcgdGhvc2Ugd2hvIHdlcmUgaW4gaXQgdG8gc2FpbCBvdXQgb2YgdGhlIGhhcmJvdXIgaW4gc2lsZW5jZSBhbmQgbm90IHRhbGsgd2l0aCBhbnlvbmUsIGFuZCB0aGVuIHRvIHNhaWwgYmFjayBpbW1lZGlhdGVseSB0byBoaXMgZmxlZXQsIHdlYXJpbmcgZ2FybGFuZHMgYW5kIHNob3V0aW5nIHRoYXQgQ2FsbGljcmF0aWRhcyBoYWQgYmVlbiB2aWN0b3Jpb3VzIGluIGJhdHRsZSBhbmQgdGhhdCBhbGwgdGhlIHNoaXBzIG9mIHRoZSBBdGhlbmlhbnMgaGFkIGJlZW4gZGVzdHJveWVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.6.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIHRoZXkgcHJvY2VlZGVkIHRvIGRvOyBhbmQgd2hlbiB0aGV5IHdlcmUgc2FpbGluZyBpbiwgRXRlb25pY3VzIGJlZ2FuIHRvIG9mZmVyIHNhY3JpZmljZXMgZm9yIHRoZSBnb29kPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48L25vdGU+IG5ld3MsIGFuZCBnYXZlIG9yZGVycyB0aGF0IHRoZSBzb2xkaWVycyBzaG91bGQgdGFrZSB0aGVpciBkaW5uZXIsIHRoYXQgdGhlIHRyYWRlcnMgc2hvdWxkIHB1dCB0aGVpciBnb29kcyBpbnRvIHRoZWlyIGJvYXRzIGluIHNpbGVuY2UgYW5kIHNhaWwgb2ZmIHRvIENoaW9zIChmb3IgdGhlIHdpbmQgd2FzIGZhdm91cmFibGUpLCBhbmQgdGhhdCB0aGUgdHJpcmVtZXMgYWxzbyBzaG91bGQgc2FpbCB0aGl0aGVyIHdpdGggYWxsIHNwZWVkLgo8ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['1.6.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaGUgaGltc2VsZiBsZWQgaGlzIGxhbmQgZm9yY2VzIGJhY2sgdG8gTWV0aHltbmEsIGFmdGVyIHNldHRpbmcgZmlyZSB0byB0aGVpciBjYW1wLiBDb25vbiBub3cgbGF1bmNoZWQgaGlzIHNoaXBzLCBhbmQsIHNpbmNlIHRoZSBlbmVteSBoYWQgc3RvbGVuIGF3YXkgYW5kIHRoZSB3aW5kIHdhcyBxdWlldGVyLCB3ZW50IHRvIG1lZXQgdGhlIEF0aGVuaWFucywgd2hvIGhhZCBieSB0aGlzIHRpbWUgc2V0IG91dCBmcm9tIHRoZSBBcmdpbnVzYWUsIGFuZCB0b2xkIHRoZW0gd2hhdCBFdGVvbmljdXMgaGFkIGRvbmUuIFRoZSBBdGhlbmlhbnMgcHV0IGluIHRvIE15dGlsZW5lLCBzYWlsZWQgdGhlbmNlIGFnYWluc3QgQ2hpb3MsIGFuZCwgYWNjb21wbGlzaGluZyBub3RoaW5nIHRoZXJlLCBzYWlsZWQgYmFjayB0b3dhcmRzIFNhbW9zLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgdGhlIHBlb3BsZSBhdCBob21lIGRlcG9zZWQgdGhlIGFib3ZlLW1lbnRpb25lZCBnZW5lcmFscywgd2l0aCB0aGUgZXhjZXB0aW9uIG9mIENvbm9uOyBhbmQgYXMgaGlzIGNvbGxlYWd1ZXMgdGhleSBjaG9zZSB0d28gbWVuLCBBZGVpbWFudHVzIGFuZCBQaGlsb2NsZXMuIEFzIGZvciB0aG9zZSBnZW5lcmFscyB3aG8gaGFkIHRha2VuIHBhcnQgaW4gdGhlIGJhdHRsZSwgdHdvIG9mIHRoZW3igJRQcm90b21hY2h1cyBhbmQgQXJpc3RvZ2VuZXPigJRkaWQgbm90IHJldHVybiB0byBBdGhlbnMsIGJ1dCB3aGVuIHRoZSBvdGhlciBzaXggY2FtZSBob21l4oCUCjwvdHJhbnNsYXRpb24+"
translation['1.7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlBlcmljbGVzLCBEaW9tZWRvbiwgTHlzaWFzLCBBcmlzdG9jcmF0ZXMsIFRocmFzeWxsdXMsIGFuZCBFcmFzaW5pZGVzLOKAlEFyY2hlZGVtdXMsIHdobyB3YXMgYXQgdGhhdCB0aW1lIGEgbGVhZGVyIG9mIHRoZSBwb3B1bGFyIHBhcnR5IGF0IEF0aGVucyBhbmQgaGFkIGNoYXJnZSBvZiB0aGUgdHdvLW9ib2wgZnVuZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Rm9yIHRoZSByZWxpZWYgb2YgcG92ZXJ0eSBhbmQgZGlzdHJlc3MgY2F1c2VkIGJ5IHRoZSB3YXIsIG5vdCB0byBiZSBjb25mb3VuZGVkIHdpdGggdGhlIHRoZW9yaWMgZnVuZDsgc2VlIFdpbGFtb3dpdHosIEFyaXN0b3RlbGVzIHVuZCBBdGhlbiwgVm9sLiBJSS4gcHAuIDIxMiBmZi48L25vdGU+IGJyb3VnaHQgYWNjdXNhdGlvbiBhZ2FpbnN0IEVyYXNpbmlkZXMgYmVmb3JlIGEgY291cnQgYW5kIHVyZ2VkIHRoYXQgYSBmaW5lIGJlIGltcG9zZWQgdXBvbiBoaW0sIGNsYWltaW5nIHRoYXQgaGUgaGFkIGluIGhpcyBwb3NzZXNzaW9uIG1vbmV5IGZyb20gdGhlIEhlbGxlc3BvbnQgd2hpY2ggYmVsb25nZWQgdG8gdGhlIHBlb3BsZTsgaGUgYWNjdXNlZCBoaW0sIGZ1cnRoZXIsIG9mIG1pc2NvbmR1Y3QgYXMgZ2VuZXJhbC4gQW5kIHRoZSBjb3VydCBkZWNyZWVkIHRoYXQgRXJhc2luaWRlcyBzaG91bGQgYmUgaW1wcmlzb25lZC4KPC90cmFuc2xhdGlvbj4="
translation['1.7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMgdGhlIGdlbmVyYWxzIG1hZGUgYSBzdGF0ZW1lbnQgYmVmb3JlIHRoZSBTZW5hdGUgaW4gcmVnYXJkIHRvIHRoZSBiYXR0bGUgYW5kIHRoZSB2aW9sZW5jZSBvZiB0aGUgc3Rvcm07IGFuZCB1cG9uIG1vdGlvbiBvZjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC9ub3RlPiBUaW1vY3JhdGVzLCB0aGF0IHRoZSBvdGhlcnMgYWxzbyBzaG91bGQgYmUgaW1wcmlzb25lZCBhbmQgdHVybmVkIG92ZXIgdG8gdGhlIEFzc2VtYmx5IGZvciB0cmlhbCwgdGhlIFNlbmF0ZSBpbXByaXNvbmVkIHRoZW0uCjxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['1.7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMgYSBtZWV0aW5nIG9mIHRoZSBBc3NlbWJseSB3YXMgY2FsbGVkLCBhdCB3aGljaCBhIG51bWJlciBvZiBwZW9wbGUsIGFuZCBwYXJ0aWN1bGFybHkgVGhlcmFtZW5lcywgc3Bva2UgYWdhaW5zdCB0aGUgZ2VuZXJhbHMsIHNheWluZyB0aGF0IHRoZXkgb3VnaHQgdG8gcmVuZGVyIGFuIGFjY291bnQgb2YgdGhlaXIgY29uZHVjdCBpbiBub3QgcGlja2luZyB1cCB0aGUgc2hpcHdyZWNrZWQuIEZvciBhcyBwcm9vZiB0aGF0IHRoZSBnZW5lcmFscyBmYXN0ZW5lZCB0aGUgcmVzcG9uc2liaWxpdHkgdXBvbiBubyBwZXJzb24gYXBhcnQgZnJvbSB0aGVtc2VsdmVzLCBUaGVyYW1lbmVzIHNob3dlZCBhIGxldHRlciB3aGljaCB0aGV5IGhhZCBzZW50IHRvIHRoZSBTZW5hdGUgYW5kIHRvIHRoZSBBc3NlbWJseSwgaW4gd2hpY2ggdGhleSBwdXQgdGhlIGJsYW1lIHVwb24gbm90aGluZyBidXQgdGhlIHN0b3JtLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMgdGhlIHNldmVyYWwgZ2VuZXJhbHMgc3Bva2UgaW4gdGhlaXIgb3duIGRlZmVuY2UgKHRob3VnaCBicmllZmx5LCBmb3IgdGhleSB3ZXJlIG5vdCBncmFudGVkIHRoZSBoZWFyaW5nIHByZXNjcmliZWQgYnkgdGhlIGxhdykgYW5kIHN0YXRlZCB3aGF0IHRoZXkgaGFkIGRvbmUsIHNheWluZyB0aGF0IHRoZXkgdGhlbXNlbHZlcyB1bmRlcnRvb2sgdG8gc2FpbCBhZ2FpbnN0IHRoZSBlbmVteSBhbmQgdGhhdCB0aGV5IGFzc2lnbmVkIHRoZSBkdXR5IG9mIHJlY292ZXJpbmcgdGhlIHNoaXB3cmVja2VkIHRvIGNlcnRhaW4gb2YgdGhlIGNhcHRhaW5zIHdobyB3ZXJlIGNvbXBldGVudCBtZW4gYW5kIGhhZCBiZWVuIGdlbmVyYWxzIGluIHRoZSBwYXN0LOKAlFRoZXJhbWVuZXMsIFRocmFzeWJ1bHVzLCBhbmQgb3RoZXJzIG9mIHRoYXQgc29ydDsKPC90cmFuc2xhdGlvbj4="
translation['1.7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPmFuZCBpZiB0aGV5IGhhZCB0byBibGFtZSBhbnksIHRoZXkgY291bGQgYmxhbWUgbm8gb25lIGVsc2UgaW4gdGhlIG1hdHRlciBvZiB0aGUgcmVjb3ZlcnkgZXhjZXB0IHRoZXNlIG1lbiwgdG8gd2hvbSB0aGUgZHV0eSB3YXMgYXNzaWduZWQuIOKAnEFuZCB3ZSBzaGFsbCBub3Qs4oCdIHRoZXkgYWRkZWQsIOKAnGp1c3QgYmVjYXVzZSB0aGV5IGFjY3VzZSB1cywgZmFsc2VseSBzYXkgdGhhdCB0aGV5IHdlcmUgdG8gYmxhbWUsIGJ1dCByYXRoZXIgdGhhdCBpdCB3YXMgdGhlIHZpb2xlbmNlIG9mIHRoZSBzdG9ybSB3aGljaCBwcmV2ZW50ZWQgdGhlIHJlY292ZXJ5LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZXkgb2ZmZXJlZCBhcyB3aXRuZXNzZXMgdG8gdGhlIHRydXRoIG9mIHRoZXNlIHN0YXRlbWVudHMgdGhlIHBpbG90cyBhbmQgbWFueSBvdGhlcnMgYW1vbmcgdGhlaXIgc2hpcC1jb21wYW5pb25zLiBXaXRoIHN1Y2ggYXJndW1lbnRzIHRoZXkgd2VyZSBvbiB0aGUgcG9pbnQgb2YgcGVyc3VhZGluZyB0aGUgQXNzZW1ibHksIGFuZCBtYW55IG9mIHRoZSBjaXRpemVucyByb3NlIGFuZCB3YW50ZWQgdG8gZ2l2ZSBiYWlsIGZvciB0aGVtOyBpdCB3YXMgZGVjaWRlZCwgaG93ZXZlciwgdGhhdCB0aGUgbWF0dGVyIHNob3VsZCBiZSBwb3N0cG9uZWQgdG8gYW5vdGhlciBtZWV0aW5nIG9mIHRoZSBBc3NlbWJseSAoZm9yPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48L25vdGU+IGJ5IHRoYXQgdGltZSBpdCB3YXMgbGF0ZSBpbiB0aGUgZGF5IGFuZCB0aGV5IGNvdWxkIG5vdCBoYXZlIGRpc3Rpbmd1aXNoZWQgdGhlIGhhbmRzIGluIHRoZSB2b3RpbmcpLCBhbmQgdGhhdCB0aGUgU2VuYXRlIHNob3VsZCBkcmFmdCBhbmQgYnJpbmcgaW4gYSBwcm9wb3NhbDxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QXRoZW5pYW4gcHJvY2VkdXJlIHJlcXVpcmVkIGluIGdlbmVyYWwgdGhhdCBhIG1hdHRlciBzaG91bGQgZmlyc3QgYmUgY29uc2lkZXJlZCBieSB0aGUgU2VuYXRlLCB3aG9zZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM+Bzr/Oss6/4b27zrvOteG9u868zrE8L2ZvcmVpZ24+LCBvciBwcmVsaW1pbmFyeSByZXNvbHV0aW9uLCB3YXMgdGhlbiByZWZlcnJlZCB0byB0aGUgQXNzZW1ibHkgZm9yIGZpbmFsIGFjdGlvbi48L25vdGU+IHJlZ2FyZGluZyB0aGUgbWFubmVyIGluIHdoaWNoIHRoZSBtZW4gc2hvdWxkIGJlIHRyaWVkLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM+Bzr/Oss6/4b27zrvOteG9u868zrE8L2ZvcmVpZ24+LCBvciBwcmVsaW1pbmFyeSByZXNvbHV0aW9uLCB3YXMgdGhlbiByZWZlcnJlZCB0byB0aGUgQXNzZW1ibHkgZm9yIGZpbmFsIGFjdGlvbi48L3RyYW5zbGF0aW9uPg=="
translation['1.7.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZSBBcGF0dXJpYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIGZhbWlseSBmZXN0aXZhbCwgYXQgd2hpY2ggdGhlIG1lbWJlcnMgb2YgZWFjaCBBdGhlbmlhbiBjbGFuIGdhdGhlcmVkIHRvZ2V0aGVyLjwvbm90ZT4gd2FzIGNlbGVicmF0ZWQsIGF0IHdoaWNoIGZhdGhlcnMgYW5kIGtpbnNtZW4gbWVldCB0b2dldGhlci4gQWNjb3JkaW5nbHkgVGhlcmFtZW5lcyBhbmQgaGlzIHN1cHBvcnRlcnMgYXJyYW5nZWQgYXQgdGhpcyBmZXN0aXZhbCB3aXRoIGEgbGFyZ2UgbnVtYmVyIG9mIHBlb3BsZSwgd2hvIHdlcmUgY2xhZCBpbiBtb3VybmluZyBnYXJtZW50cyBhbmQgaGFkIHRoZWlyIGhhaXIgY2xvc2Ugc2hhdmVuLCB0byBhdHRlbmQgdGhlIG1lZXRpbmcgb2YgdGhlIEFzc2VtYmx5LCBwcmV0ZW5kaW5nIHRoYXQgdGhleSB3ZXJlIGtpbnNtZW4gb2YgdGhvc2Ugd2hvIGhhZCBwZXJpc2hlZCwgYW5kIHRoZXkgYnJpYmVkIENhbGxpeGVpbnVzIHRvIGFjY3VzZSB0aGUgZ2VuZXJhbHMgaW4gdGhlIFNlbmF0ZS4KPC90cmFuc2xhdGlvbj4="
translation['1.7.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gdGhleSBjYWxsZWQgYW4gQXNzZW1ibHksIGF0IHdoaWNoIHRoZSBTZW5hdGUgYnJvdWdodCBpbiBpdHMgcHJvcG9zYWwsIHdoaWNoIENhbGxpeGVpbnVzIGhhZCBkcmFmdGVkIGluIHRoZSBmb2xsb3dpbmcgdGVybXM6IOKAnFJlc29sdmVkLCB0aGF0IHNpbmNlIHRoZSBBdGhlbmlhbnMgaGF2ZSBoZWFyZCBpbiB0aGUgcHJldmlvdXMgbWVldGluZyBvZiB0aGUgQXNzZW1ibHkgYm90aCB0aGUgYWNjdXNlcnMgd2hvIGJyb3VnaHQgY2hhcmdlcyBhZ2FpbnN0IHRoZSBnZW5lcmFscyBhbmQgdGhlIGdlbmVyYWxzIHNwZWFraW5nIGluIHRoZWlyIG93biBkZWZlbmNlLCB0aGV5IGRvIG5vdyBvbmUgYW5kIGFsbCBjYXN0IHRoZWlyIHZvdGVzIGJ5IHRyaWJlczsgYW5kIHRoYXQgdHdvIHVybnMgYmUgc2V0IGF0IHRoZSB2b3RpbmctcGxhY2Ugb2YgZWFjaCB0cmliZTsgYW5kIHRoYXQgaW4gZWFjaCB0cmliZSBhIGhlcmFsZCBwcm9jbGFpbSB0aGF0IHdob2V2ZXIgYWRqdWRnZXMgdGhlIGdlbmVyYWxzIGd1aWx0eSwgZm9yIG5vdCBwaWNraW5nIHVwIHRoZSBtZW4gd2hvIHdvbiB0aGUgdmljdG9yeSBpbiB0aGUgbmF2YWwgYmF0dGxlLCBzaGFsbCBjYXN0IGhpcyB2b3RlIGluIHRoZSBmaXJzdCB1cm4sIGFuZCB3aG9ldmVyIGFkanVkZ2VzIHRoZW0gbm90IGd1aWx0eSwgc2hhbGwgY2FzdCBoaXMgdm90ZSBpbiB0aGUgc2Vjb25kOwo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgaWYgdGhleSBiZSBhZGp1ZGdlZCBndWlsdHksIHRoYXQgdGhleSBiZSBwdW5pc2hlZCB3aXRoIGRlYXRoIGFuZCBoYW5kZWQgb3ZlciB0byB0aGUgRWxldmVuLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIEJvYXJkIHdoaWNoIGhhZCBjaGFyZ2Ugb2YgY29uZGVtbmVkIHByaXNvbmVycyBhbmQgb2YgdGhlIGV4ZWN1dGlvbiBvZiB0aGUgZGVhdGggc2VudGVuY2UuPC9ub3RlPiBhbmQgdGhhdCB0aGVpciBwcm9wZXJ0eSBiZSBjb25maXNjYXRlZCBhbmQgdGhlIHRlbnRoIHRoZXJlb2YgYmVsb25nIHRvIHRoZSBnb2RkZXNzLuKAnTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BdGhlbmEsIHRoZSBzdGF0ZSBkZWl0eSwgaW50byB3aG9zZSB0cmVhc3VyeSBhIHRlbnRoIHBhcnQgb2YgdGhlIHJldmVudWUgZGVyaXZlZCBmcm9tIGNvbmZpc2NhdGlvbnMgd2FzIHJlZ3VsYXJseSBwYWlkLjwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['1.7.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlcmUgY2FtZSBiZWZvcmUgdGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48L25vdGU+IEFzc2VtYmx5IGEgbWFuIHdobyBzYWlkIHRoYXQgaGUgaGFkIGJlZW4gc2F2ZWQgYnkgZmxvYXRpbmcgdXBvbiBhIG1lYWwtdHViLCBhbmQgdGhhdCB0aG9zZSB3aG8gd2VyZSBwZXJpc2hpbmcgY2hhcmdlZCBoaW0gdG8gcmVwb3J0IHRvIHRoZSBwZW9wbGUsIGlmIGhlIHdlcmUgc2F2ZWQsIHRoYXQgdGhlIGdlbmVyYWxzIGRpZCBub3QgcGljayB1cCB0aGUgbWVuIHdobyBoYWQgcHJvdmVkIHRoZW1zZWx2ZXMgbW9zdCBicmF2ZSBpbiB0aGUgc2VydmljZSBvZiB0aGVpciBjb3VudHJ5Lgo8ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['1.7.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgRXVyeXB0b2xlbXVzLCB0aGUgc29uIG9mIFBlaXNpYW5heCwgYW5kIHNvbWUgb3RoZXJzIHNlcnZlZCBhIHN1bW1vbnMgdXBvbiBDYWxsaXhlaW51cywgYWxsZWdpbmcgdGhhdCBoZSBoYWQgbWFkZSBhbiB1bmNvbnN0aXR1dGlvbmFsIHByb3Bvc2FsLiBBbmQgc29tZSBvZiB0aGUgcGVvcGxlIGFwcGxhdWRlZCB0aGlzIGFjdCwgYnV0IHRoZSBncmVhdGVyIG51bWJlciBjcmllZCBvdXQgdGhhdCBpdCB3YXMgbW9uc3Ryb3VzIGlmIHRoZSBwZW9wbGUgd2VyZSB0byBiZSBwcmV2ZW50ZWQgZnJvbSBkb2luZyB3aGF0ZXZlciB0aGV5IHdpc2hlZC4KPC90cmFuc2xhdGlvbj4="
translation['1.7.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5JbmRlZWQsIHdoZW4gTHljaXNjdXMgdGhlcmV1cG9uIG1vdmVkIHRoYXQgdGhlc2UgbWVuIGFsc28gc2hvdWxkIGJlIGp1ZGdlZCBieSB0aGUgdmVyeSBzYW1lIHZvdGUgYXMgdGhlIGdlbmVyYWxzLCB1bmxlc3MgdGhleSB3aXRoZHJldyB0aGUgc3VtbW9ucywgdGhlIG1vYiBicm9rZSBvdXQgYWdhaW4gd2l0aCBzaG91dHMgb2YgYXBwcm92YWwsIGFuZCB0aGV5IHdlcmUgY29tcGVsbGVkIHRvIHdpdGhkcmF3IHRoZSBzdW1tb25zZXMuCjwvdHJhbnNsYXRpb24+"
translation['1.7.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgd2hlbiBzb21lIG9mIHRoZSBQcnl0YW5lczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BbiBleGVjdXRpdmUgY29tbWl0dGVlIG9mIHRoZSBTZW5hdGUsIHdobyBwcmVzaWRlZCBvdmVyIHRoZSBtZWV0aW5ncyBvZiBib3RoIFNlbmF0ZSBhbmQgQXNzZW1ibHkuPC9ub3RlPiByZWZ1c2VkIHRvIHB1dCB0aGUgcXVlc3Rpb24gdG8gdGhlIHZvdGUgaW4gdmlvbGF0aW9uIG9mIHRoZSBsYXcsIENhbGxpeGVpbnVzIGFnYWluIG1vdW50ZWQgdGhlIHBsYXRmb3JtPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6y4b+GzrzOsTwvZm9yZWlnbj4uPC9ub3RlPiBhbmQgdXJnZWQgdGhlIHNhbWUgY2hhcmdlIGFnYWluc3QgdGhlbTsgYW5kIHRoZSBjcm93ZCBjcmllZCBvdXQgdG8gc3VtbW9uIHRvIGNvdXJ0IHRob3NlIHdobyByZWZ1c2VkLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OsuG/hs68zrE8L2ZvcmVpZ24+LjwvdHJhbnNsYXRpb24+"
translation['1.7.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZSBQcnl0YW5lcywgc3RyaWNrZW4gd2l0aCBmZWFyLCBhZ3JlZWQgdG8gcHV0IHRoZSBxdWVzdGlvbizigJRhbGwgb2YgdGhlbSBleGNlcHQgU29jcmF0ZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk9uIFNvY3JhdGVzJyBjb25kdWN0IGF0IHRoaXMgdGltZSBjcC4gUGxhdG8sIEFwb2wuIDMyQiBhbmQgWGVuLiBNZW0uIEkuIGkuIDE4Ljwvbm90ZT4gdGhlIHNvbiBvZiBTb3Bocm9uaXNjdXM7IGFuZCBoZSBzYWlkIHRoYXQgaW4gbm8gY2FzZSB3b3VsZCBoZSBhY3QgZXhjZXB0IGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgbGF3Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIEV1cnlwdG9sZW11cyBtb3VudGVkIHRoZSBwbGF0Zm9ybSBhbmQgc3Bva2UgYXMgZm9sbG93cyBpbiBkZWZlbmNlIG9mIHRoZSBnZW5lcmFsczo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSBoYXZlIGNvbWUgdG8gdGhlIHBsYXRmb3JtLCBtZW4gb2YgQXRoZW5zLCBwYXJ0bHkgdG8gYWNjdXNlIFBlcmljbGVzLCB0aG91Z2ggaGUgaXMgbXkga2luc21hbiBhbmQgaW50aW1hdGUsIGFuZCBEaW9tZWRvbiwgd2hvIGlzIG15IGZyaWVuZCwgcGFydGx5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48L25vdGU+IHRvIHNwZWFrIGluIHRoZWlyIGRlZmVuY2UsIGFuZCBwYXJ0bHkgdG8gYWR2aXNlIHRoZSBtZWFzdXJlcyB3aGljaCBzZWVtIHRvIG1lIHRvIGJlIGJlc3QgZm9yIHRoZSBzdGF0ZSBhcyBhIHdob2xlLgo8ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['1.7.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5JIGFjY3VzZSB0aGVtLCBiZWNhdXNlIHRoZXkgcGVyc3VhZGVkIHRoZWlyIGNvbGxlYWd1ZXMgdG8gY2hhbmdlIHRoZWlyIHB1cnBvc2Ugd2hlbiB0aGV5IHdhbnRlZCB0byBzZW5kIGEgbGV0dGVyIHRvIHRoZSBTZW5hdGUgYW5kIHRvIHlvdSwgaW4gd2hpY2ggdGhleSBzdGF0ZWQgdGhhdCB0aGV5IGFzc2lnbmVkIHRvIFRoZXJhbWVuZXMgYW5kIFRocmFzeWJ1bHVzLCB3aXRoIGZvcnR5LXNldmVuIHRyaXJlbWVzLCB0aGUgZHV0eSBvZiBwaWNraW5nIHVwIHRoZSBzaGlwd3JlY2tlZCwgYW5kIHRoYXQgdGhleSBmYWlsZWQgdG8gcGVyZm9ybSB0aGlzIGR1dHkuCjwvdHJhbnNsYXRpb24+"
translation['1.7.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5TdWNoIGJlaW5nIHRoZSBjYXNlLCBhcmUgdGhlc2UgZ2VuZXJhbHMgdG8gc2hhcmUgdGhlIGJsYW1lIG5vdyB3aXRoIFRoZXJhbWVuZXMgYW5kIFRocmFzeWJ1bHVzLCBhbHRob3VnaCBpdCB3YXMgdGhvc2UgYWxvbmUgd2hvIGJsdW5kZXJlZCwgYW5kIGFyZSB0aGV5IG5vdywgaW4gcmV0dXJuIGZvciB0aGUgaHVtYW5pdHkgdGhleSBzaG93ZWQgdGhlbiwgdG8gYmUgcHV0IGluIGhhemFyZCBvZiB0aGVpciBsaXZlcyB0aHJvdWdoIHRoZSBtYWNoaW5hdGlvbnMgb2YgdGhvc2UgbWVuIGFuZCBjZXJ0YWluIG90aGVycz8KPC90cmFuc2xhdGlvbj4="
translation['1.7.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5ObyEgYXQgbGVhc3Qgbm90IGlmIHlvdSB0YWtlIG15IGFkdmljZSBhbmQgZm9sbG93IHRoZSBqdXN0IGFuZCByaWdodGVvdXMgY291cnNlLCB0aGUgY291cnNlIHdoaWNoIHdpbGwgYmVzdCBlbmFibGUgeW91IHRvIGxlYXJuIHRoZSB0cnV0aCBhbmQgdG8gYXZvaWQgZmluZGluZyBvdXQgaGVyZWFmdGVyLCB0byB5b3VyIHNvcnJvdywgdGhhdCBpdCBpcyB5b3UgeW91cnNlbHZlcyB3aG8gaGF2ZSBzaW5uZWQgbW9zdCBncmlldm91c2x5LCBub3Qgb25seSBhZ2FpbnN0IHRoZSBnb2RzLCBidXQgYWdhaW5zdCB5b3Vyc2VsdmVzLiBUaGUgYWR2aWNlIEkgZ2l2ZSB5b3UgaXMgc3VjaCB0aGF0LCBpdCB5b3UgZm9sbG93IGl0LCB5b3UgY2Fubm90IGJlIGRlY2VpdmVkIGVpdGhlciBieSBtZSBvciBieSBhbnlvbmUgZWxzZSwgYW5kIHRoYXQgd2l0aCBmdWxsIGtub3dsZWRnZSB5b3Ugd2lsbCBwdW5pc2ggdGhlIGd1aWx0eSB3aXRoIHdoYXRldmVyIHB1bmlzaG1lbnQgeW91IG1heSBkZXNpcmUsIGVpdGhlciBhbGwgb2YgdGhlbSB0b2dldGhlciBvciBlYWNoIG9uZSBzZXBhcmF0ZWx5LCBuYW1lbHksIGJ5IGZpcnN0IGdyYW50aW5nIHRoZW0gYXQgbGVhc3Qgb25lIGRheSwgaWYgbm90IG1vcmUsIHRvIHNwZWFrIGluIHRoZWlyIG93biBkZWZlbmNlLCBhbmQgYnkgcHV0dGluZyB5b3VyIHRydXN0LCBub3Qgc28gbXVjaCBpbiBvdGhlcnMsIGJ1dCBpbiB5b3Vyc2VsdmVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgeW91IGFsbCBrbm93LCBtZW4gb2YgQXRoZW5zLCB0aGF0IHRoZSBkZWNyZWUgb2YgQ2Fubm9udXMgaXMgZXhjZWVkaW5nbHkgc2V2ZXJlOiBpdCBwcm92aWRlcyB0aGF0IGlmIGFueW9uZSBzaGFsbCB3cm9uZyB0aGUgcGVvcGxlIG9mIEF0aGVucywgaGUgc2hhbGwgcGxlYWQgaGlzIGNhc2UgaW4gZmV0dGVycyBiZWZvcmUgdGhlIHBlb3BsZSwgYW5kIGlmIGhlIGJlIGFkanVkZ2VkIGd1aWx0eSwgaGUgc2hhbGwgYmUgcHV0IHRvIGRlYXRoIGJ5IGJlaW5nIGNhc3QgaW50bzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC9ub3RlPiB0aGUgcGl0LCBhbmQgaGlzIHByb3BlcnR5IHNoYWxsIGJlIGNvbmZpc2NhdGVkIGFuZCB0aGUgdGVudGggcGFydCB0aGVyZW9mIHNoYWxsIGJlbG9uZyB0byB0aGUgZ29kZGVzcy4KPGRhdGUgYXV0aG5hbWU9Ii00MDYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDYiPjQwNiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['1.7.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5VbmRlciB0aGlzIGRlY3JlZSBJIHVyZ2UgeW91IHRvIHRyeSB0aGUgZ2VuZXJhbHMsIGFuZCwgYnkgWmV1cywgaWYgaXQgc28gcGxlYXNlIHlvdSwgUGVyaWNsZXMsIG15IGtpbnNtYW4sIGZpcnN0IG9mIHRoZW0gYWxsOyBmb3IgaXQgd291bGQgYmUgYmFzZSBmb3IgbWUgdG8gdGhpbmsgbW9yZSBvZiBoaW0gdGhhbiBvZiB0aGUgZ2VuZXJhbCBpbnRlcmVzdHMgb2YgdGhlIHN0YXRlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5PciBpZiB5b3UgZG8gbm90IHdpc2ggdG8gZG8gdGhpcywgdHJ5IHRoZW0gdW5kZXIgdGhlIGZvbGxvd2luZyBsYXcsIHdoaWNoIGFwcGxpZXMgdG8gdGVtcGxlLXJvYmJlcnMgYW5kIHRyYWl0b3JzOiBuYW1lbHksIGlmIGFueW9uZSBzaGFsbCBiZSBhIHRyYWl0b3IgdG8gdGhlIHN0YXRlIG9yIHNoYWxsIHN0ZWFsIHNhY3JlZCBwcm9wZXJ0eSwgaGUgc2hhbGwgYmUgdHJpZWQgYmVmb3JlIGEgY291cnQsIGFuZCBpZiBoZSBiZSBjb252aWN0ZWQsIGhlIHNoYWxsIG5vdCBiZSBidXJpZWQgaW4gQXR0aWNhLCBhbmQgaGlzIHByb3BlcnR5IHNoYWxsIGJlIGNvbmZpc2NhdGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5CeSB3aGljaGV2ZXIgb2YgdGhlc2UgbGF3cyB5b3UgY2hvb3NlLCBtZW4gb2YgQXRoZW5zLCBsZXQgdGhlIG1lbiBiZSB0cmllZCwgZWFjaCBvbmUgc2VwYXJhdGVseSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SXQgd2FzIGEgZ2VuZXJhbCBwcmluY2lwbGUgb2YgQXRoZW5pYW4gbGF34oCUcGVyaGFwcyBzcGVjaWZpY2FsbHkgc3RhdGVkIGluIHRoZSBkZWNyZWUgb2YgQ2Fubm9udXMgKHNlZSBhYm92ZSnigJR0aGF0IGVhY2ggYWNjdXNlZCBwZXJzb24gaGFkIHRoZSByaWdodCB0byBhIHNlcGFyYXRlIHRyaWFsLjwvbm90ZT4gYW5kIGxldCB0aGUgZGF5IGJlIGRpdmlkZWQgaW50byB0aHJlZSBwYXJ0cywgb25lIHdoZXJlaW4geW91IHNoYWxsIGdhdGhlciBhbmQgdm90ZSBhcyB0byB3aGV0aGVyIHlvdSBqdWRnZSB0aGVtIGd1aWx0eSBvciBub3QsIGFub3RoZXIgd2hlcmVpbiB0aGUgYWNjdXNlcnMgc2hhbGwgcHJlc2VudCB0aGVpciBjYXNlLCBhbmQgYW5vdGhlciB3aGVyZWluIHRoZSBhY2N1c2VkIHNoYWxsIG1ha2UgdGhlaXIgZGVmZW5jZS4KPC90cmFuc2xhdGlvbj4="
translation['1.7.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSWYgdGhpcyBpcyBkb25lLCB0aGUgZ3VpbHR5IHdpbGwgaW5jdXIgdGhlIHNldmVyZXN0IHB1bmlzaG1lbnQsIGFuZCB0aGUgZ3VpbHRsZXNzIHdpbGwgYmUgc2V0IGZyZWUgYnkgeW91LCBtZW4gb2YgQXRoZW5zLCBhbmQgd2lsbCBub3QgYmUgcHV0IHRvIGRlYXRoIHVuanVzdGx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgeW91cnNlbHZlcywgeW91IHdpbGwgYmUgZ3JhbnRpbmcgYSB0cmlhbCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIGxhdyBhbmQgc3RhbmRpbmcgdHJ1ZSB0byByZWxpZ2lvbiBhbmQgeW91ciBvYXRocywgYW5kIHlvdSB3aWxsIG5vdCBiZSBmaWdodGluZyBvbiB0aGUgc2lkZSBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgYnkgcHV0dGluZyB0byBkZWF0aCB0aGUgbWVuIHdobyBjYXB0dXJlZCBzZXZlbnR5IHNoaXBzIGZyb20gdGhlbSBhbmQgZGVmZWF0ZWQgdGhlbSzigJRieSBwdXR0aW5nIHRvIGRlYXRoIHRoZXNlIG1lbiwgSSBzYXksIHdpdGhvdXQgYSB0cmlhbCwgaW4gdmlvbGF0aW9uIG9mIHRoZSBsYXcuCjwvdHJhbnNsYXRpb24+"
translation['1.7.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5XaGF0IGlzIGl0LCBwcmF5LCB0aGF0IHlvdSBmZWFyLCB0aGF0IHlvdSBhcmUgaW4gc3VjaDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC9ub3RlPiBleGNlc3NpdmUgaGFzdGU/IERvIHlvdSBmZWFyIGxlc3QgeW91IHdpbGwgbG9zZSB0aGUgcmlnaHQgdG8gcHV0IHRvIGRlYXRoIGFuZCBzZXQgZnJlZSBhbnlvbmUgeW91IHBsZWFzZSBpZiB5b3UgcHJvY2VlZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIGxhdywgYnV0IHRoaW5rIHRoYXQgeW91IHdpbGwgcmV0YWluIHRoaXMgcmlnaHQgaWYgeW91IHByb2NlZWQgaW4gdmlvbGF0aW9uIG9mIHRoZSBsYXcsIGJ5IHRoZSBtZXRob2Qgd2hpY2ggQ2FsbGl4ZWludXMgcGVyc3VhZGVkIHRoZSBTZW5hdGUgdG8gcmVwb3J0IHRvIHRoZSBwZW9wbGUsIHRoYXQgaXMsIGJ5IGEgc2luZ2xlIHZvdGU/CjxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['1.7.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5ZZXMsIGJ1dCB5b3UgbWlnaHQgcG9zc2libHkgYmUgcHV0dGluZyB0byBkZWF0aCBzb21lIG9uZSB3aG8gaXMgcmVhbGx5IGlubm9jZW50OyBhbmQgcmVwZW50YW5jZSBhZnRlcndhcmRz4oCUYWgsIHJlbWVtYmVyIGhvdyBwYWluZnVsIGFuZCB1bmF2YWlsaW5nIGl0IGFsd2F5cyBpcywgYW5kIGVzcGVjaWFsbHkgd2hlbiBvbmUncyBlcnJvciBoYXMgYnJvdWdodCBhYm91dCBhIG1hbidzIGRlYXRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.7.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5Zb3Ugd291bGQgZG8gYSBtb25zdHJvdXMgdGhpbmcgaWYsIGFmdGVyIGdyYW50aW5nIGluIHRoZSBwYXN0IHRvIEFyaXN0YXJjaHVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JbiA8ZGF0ZSBhdXRobmFtZT0iLTQxMSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMSI+NDExIEIuQy48L2RhdGU+IEFyaXN0YXJjaHVzIGhlbHBlZCB0byBlc3RhYmxpc2ggdGhlIHNob3J0LWxpdmVkIG9saWdhcmNoaWNhbCBnb3Zlcm5tZW50IG9mIHRoZSBGb3VyIEh1bmRyZWQuPC9ub3RlPiB0aGUgZGVzdHJveWVyIG9mIHRoZSBkZW1vY3JhY3kgYW5kIGFmdGVyd2FyZHMgdGhlIGJldHJheWVyIG9mIE9lbm9lIHRvIHlvdXIgZW5lbWllcyB0aGUgVGhlYmFucywgYSBkYXkgaW4gd2hpY2ggdG8gZGVmZW5kIGhpbXNlbGYgYXMgaGUgcGxlYXNlZCwgYW5kIGFsbG93aW5nIGhpbSBhbGwgaGlzIG90aGVyIHJpZ2h0cyB1bmRlciB0aGUgbGF3LOKAlGlmLCBJIHNheSwgeW91IHNoYWxsIG5vdyBkZXByaXZlIHRoZSBnZW5lcmFscywgd2hvIGhhdmUgZG9uZSBldmVyeXRoaW5nIHRvIHlvdXIgc2F0aXNmYWN0aW9uLCBhbmQgaGF2ZSBkZWZlYXRlZCB0aGUgZW5lbXksIG9mIHRoZXNlIHNhbWUgcmlnaHRzLgo8ZGF0ZSBhdXRobmFtZT0iLTQxMSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxMSI+NDExIEIuQy48L2RhdGU+IEFyaXN0YXJjaHVzIGhlbHBlZCB0byBlc3RhYmxpc2ggdGhlIHNob3J0LWxpdmVkIG9saWdhcmNoaWNhbCBnb3Zlcm5tZW50IG9mIHRoZSBGb3VyIEh1bmRyZWQuPC90cmFuc2xhdGlvbj4="
translation['1.7.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5MZXQgbm8gc3VjaCBhY3QgYmUgeW91cnMsIG1lbiBvZiBBdGhlbnMsIGJ1dCBndWFyZCB0aGUgbGF3cywgd2hpY2ggYXJlIHlvdXIgb3duIGFuZCBhYm92ZSBhbGwgZWxzZSBoYXZlIG1hZGUgeW91IHN1cHJlbWVseSBncmVhdCwgYW5kIGRvIG5vdCB0cnkgdG8gZG8gYW55dGhpbmcgd2l0aG91dCB0aGVpciBzYW5jdGlvbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIG5vdyBjb21lIGJhY2sgdG8gdGhlIGFjdHVhbCBjaXJjdW1zdGFuY2VzIHVuZGVyIHdoaWNoIHRoZSBtaXN0YWtlcyBhcmUgdGhvdWdodCB0byBoYXZlIGJlZW4gY29tbWl0dGVkIGJ5IHRoZSBnZW5lcmFscy4gV2hlbiwgYWZ0ZXIgd2lubmluZyB0aGUgYmF0dGxlLCB0aGV5IHNhaWxlZCBpbiB0byB0aGUgc2hvcmUsIERpb21lZG9uIHVyZ2VkIHRoYXQgdGhleSBzaG91bGQgb25lIGFuZCBhbGwgcHV0IG91dCB0byBzZWEgaW4gbGluZSBhbmQgcGljayB1cCB0aGUgd3JlY2thZ2UgYW5kIHRoZSBzaGlwd3JlY2tlZCBtZW4sIHdoaWxlIEVyYXNpbmlkZXMgcHJvcG9zZWQgdGhhdCBhbGwgc2hvdWxkIHNhaWwgd2l0aCB0aGUgdXRtb3N0IHNwZWVkIGFnYWluc3QgdGhlIGVuZW15IGF0IE15dGlsZW5lLiBCdXQgVGhyYXN5bGx1cyBzYWlkIHRoYXQgYm90aCB0aGluZ3M8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDYiPjQwNiBCLkMuPC9kYXRlPjwvbm90ZT4gd291bGQgYmUgYWNjb21wbGlzaGVkIGlmIHRoZXkgc2hvdWxkIGxlYXZlIHNvbWUgb2YgdGhlIHNoaXBzIHRoZXJlIGFuZCBzaG91bGQgc2FpbCB3aXRoIHRoZSByZXN0IGFnYWluc3QgdGhlIGVuZW15Owo8ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['1.7.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgaWYgdGhpcyBwbGFuIHdlcmUgZGVjaWRlZCB1cG9uLCBoZSBhZHZpc2VkIHRoYXQgZWFjaCBvZiB0aGUgZ2VuZXJhbHMsIHdobyB3ZXJlIGVpZ2h0IGluIG51bWJlciwgc2hvdWxkIGxlYXZlIGJlaGluZCB0aHJlZSBzaGlwcyBmcm9tIGhpcyBvd24gZGl2aXNpb24sIGFuZCB0aGF0IHRoZXkgc2hvdWxkIGFsc28gbGVhdmUgdGhlIHRlbiBzaGlwcyBvZiB0aGUgdGF4aWFyY2hzLCB0aGUgdGVuIG9mIHRoZSBTYW1pYW5zLCBhbmQgdGhlIHRocmVlIG9mIHRoZSBuYXVhcmNocy4gVGhlc2UgYW1vdW50IGFsbCB0b2xkIHRvIGZvcnR5LXNldmVuIHNoaXBzLCBmb3VyIGZvciBlYWNoIG9uZSBvZiB0aGUgbG9zdCB2ZXNzZWxzLCB3aGljaCB3ZXJlIHR3ZWx2ZSBpbiBudW1iZXIuCjwvdHJhbnNsYXRpb24+"
translation['1.7.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BbW9uZyB0aGUgY2FwdGFpbnMgd2hvIHdlcmUgbGVmdCBiZWhpbmQgd2VyZSBib3RoIFRocmFzeWJ1bHVzIGFuZCBUaGVyYW1lbmVzLCB0aGUgbWFuIHdobyBhY2N1c2VkIHRoZSBnZW5lcmFscyBhdCB0aGUgZm9ybWVyIG1lZXRpbmcgb2YgdGhlIEFzc2VtYmx5LiBBbmQgd2l0aCB0aGUgcmVzdCBvZiB0aGUgc2hpcHMgdGhleSBwbGFubmVkIHRvIHNhaWwgYWdhaW5zdCB0aGUgZW5lbXkncyBmbGVldC4gTm93IHdoYXQgb25lIG9mIHRoZXNlIGFjdHMgZGlkIHRoZXkgbm90IGRvIGFkZXF1YXRlbHkgYW5kIHdlbGw/IEl0IGlzIGJ1dCBqdXN0LCB0aGVyZWZvcmUsIHRoYXQgdGhvc2UsIG9uIHRoZSBvbmUgaGFuZCwgd2hvIHdlcmUgZGV0YWlsZWQgdG8gZ28gYWdhaW5zdCB0aGUgZW5lbXkgc2hvdWxkIGJlIGhlbGQgdG8gYWNjb3VudCBmb3IgdGhlaXIgbGFjayBvZiBzdWNjZXNzIGluIGRlYWxpbmcgd2l0aCB0aGUgZW5lbXksIGFuZCB0aGF0IHRob3NlLCBvbiB0aGUgb3RoZXIgaGFuZCwgd2hvIHdlcmUgZGV0YWlsZWQgdG8gcmVjb3ZlciB0aGUgc2hpcHdyZWNrZWQsIGluIGNhc2UgdGhleSBkaWQgbm90IGRvIHdoYXQgdGhlIGdlbmVyYWxzIG9yZGVyZWQsIHNob3VsZCBiZSB0cmllZCBmb3Igbm90IHJlY292ZXJpbmcgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['1.7.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIG11Y2gsIGhvd2V2ZXIsIEkgY2FuIHNheSBpbiBkZWZlbmNlIG9mIGJvdGggcGFydGllcywgdGhhdCB0aGUgc3Rvcm0gYWJzb2x1dGVseSBwcmV2ZW50ZWQgdGhlbSBmcm9tIGRvaW5nIGFueSBvZiB0aGUgdGhpbmdzIHdoaWNoIHRoZSBnZW5lcmFscyBoYWQgcGxhbm5lZC4gQW5kIGFzIHdpdG5lc3NlcyB0byB0aGlzIGZhY3QgeW91IGhhdmUgdGhvc2Ugd2hvIHdlcmUgc2F2ZWQgYnkgbWVyZSBjaGFuY2UsIGFtb25nIHdob20gaXMgb25lIG9mIG91ciBnZW5lcmFscywgd2hvIGNhbWUgdGhyb3VnaCBzYWZlbHkgb24gYSBkaXNhYmxlZCBzaGlwLCBhbmQgd2hvbSB0aGV5IG5vdyBiaWQgeW91IGp1ZGdlIGJ5IHRoZSBzYW1lIHZvdGUgKGFsdGhvdWdoIGF0IHRoYXQgdGltZSBoZSBuZWVkZWQgdG8gYmUgcGlja2VkIHVwIGhpbXNlbGYpIGJ5IHdoaWNoIHlvdSBqdWRnZSB0aG9zZSB3aG8gZGlkIG5vdCBkbyB3aGF0IHRoZXk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDYiPjQwNiBCLkMuPC9kYXRlPjwvbm90ZT4gd2VyZSBvcmRlcmVkIHRvIGRvLgo8ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['1.7.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5EbyBub3QsIHRoZW4sIG1lbiBvZiBBdGhlbnMsIGluIHRoZSBmYWNlIG9mIHlvdXIgdmljdG9yeSBhbmQgeW91ciBnb29kIGZvcnR1bmUsIGFjdCBsaWtlIG1lbiB3aG8gYXJlIGJlYXRlbiBhbmQgdW5mb3J0dW5hdGUsIG5vciwgaW4gdGhlIGZhY2Ugb2YgaGVhdmVuJ3MgdmlzaXRhdGlvbiwgc2hvdyB5b3Vyc2VsdmVzIHVucmVhc29uYWJsZSBieSBnaXZpbmcgYSB2ZXJkaWN0IG9mIHRyZWFjaGVyeSBpbnN0ZWFkIG9mIGhlbHBsZXNzbmVzcywgc2luY2UgdGhleSBmb3VuZCB0aGVtc2VsdmVzIHVuYWJsZSBvbiBhY2NvdW50IG9mIHRoZSBzdG9ybSB0byBkbyB3aGF0IHRoZXkgaGFkIGJlZW4gb3JkZXJlZCB0byBkbzsgbmF5LCBpdCB3b3VsZCBiZSBmYXIgbW9yZSBqdXN0IGZvciB5b3UgdG8gaG9ub3VyIHRoZSB2aWN0b3JzIHdpdGggZ2FybGFuZHMgdGhhbiwgeWllbGRpbmcgdG8gdGhlIHBlcnN1YXNpb25zIG9mIHdpY2tlZCBtZW4sIHRvIHB1bmlzaCB0aGVtIHdpdGggZGVhdGgu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.7.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBFdXJ5cHRvbGVtdXMgaGFkIHRodXMgc3Bva2VuLCBoZSBvZmZlcmVkIGEgcmVzb2x1dGlvbiB0aGF0IHRoZSBtZW4gYmUgdHJpZWQgdW5kZXIgdGhlIGRlY3JlZSBvZiBDYW5ub251cywgZWFjaCBvbmUgc2VwYXJhdGVseTsgd2hlcmVhcyB0aGUgcHJvcG9zYWwgb2YgdGhlIFNlbmF0ZSB3YXMgdG8ganVkZ2UgdGhlbSBhbGwgYnkgYSBzaW5nbGUgdm90ZS4gVGhlIHZvdGUgYmVpbmcgbm93IHRha2VuIGFzIGJldHdlZW4gdGhlc2UgdHdvIHByb3Bvc2FscywgdGhleSBkZWNpZGVkIGF0IGZpcnN0IGluIGZhdm91ciBvZiB0aGUgcmVzb2x1dGlvbiBvZiBFdXJ5cHRvbGVtdXM7IGJ1dCB3aGVuIE1lbmVjbGVzIGludGVycG9zZWQgYW4gb2JqZWN0aW9uIHVuZGVyIG9hdGg8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QXBwYXJlbnRseSBxdWVzdGlvbmluZyB0aGUgbGVnYWxpdHkgb2YgRXVyeXB0b2xlbXVzJyBwcm9wb3NhbC4gVW5kZXIgdGhlIGxhdyBzdWNoIGFuIG9iamVjdGlvbiBzaG91bGQgaGF2ZSBzdXNwZW5kZWQgdGhlIGNvbnNpZGVyYXRpb24gb2YgdGhlIG1hdHRlciBiZWZvcmUgdGhlIEFzc2VtYmx5LCBidXQgaW4gdGhpcyBjYXNlIGl0IHNlZW1zIHRvIGhhdmUgaGFkIG5vIHN1Y2ggcmVzdWx0Ljwvbm90ZT4gYW5kIGEgc2Vjb25kIHZvdGUgd2FzIHRha2VuLCB0aGV5IGRlY2lkZWQgaW4gZmF2b3VyIG9mIHRoYXQgb2YgdGhlIFNlbmF0ZS4gQWZ0ZXIgdGhpcyB0aGV5IGNvbmRlbW5lZCB0aGUgZ2VuZXJhbHMgd2hvIHRvb2sgcGFydCBpbiB0aGUgYmF0dGxlLCBlaWdodCBpbiBhbGw7IGFuZCB0aGUgc2l4IHdobyB3ZXJlIGluIEF0aGVucyB3ZXJlIHB1dCB0byBkZWF0aC4KPC90cmFuc2xhdGlvbj4="
translation['1.7.35'] = ""
translation['2.1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgdHJvb3BzIHRoYXQgd2VyZSBhdCBDaGlvcyB1bmRlciBFdGVvbmljdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIEkuIHZpLiAzNiBmLjwvbm90ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDYiPjQwNiBCLkMuPC9kYXRlPjwvbm90ZT4gc3Vic2lzdGVkLCBzbyBsb25nIGFzIHRoZSBzdW1tZXIgbGFzdGVkLCB1cG9uIHRoZSBwcm9kdWNlIG9mIHRoZSBzZWFzb24gYW5kIGJ5IHdvcmtpbmcgZm9yIGhpcmUgdXAgYW5kIGRvd24gdGhlIGlzbGFuZDsgd2hlbiB3aW50ZXIgY2FtZSBvbiwgaG93ZXZlciwgYW5kIHRoZXkgd2VyZSB3aXRob3V0IGZvb2QgYW5kIHBvb3JseSBjbGFkIGFuZCB1bnNob2QsIHRoZXkgZ290IHRvZ2V0aGVyIGFuZCBhZ3JlZWQgdG8gbWFrZSBhbiBhdHRhY2sgdXBvbiBDaGlvczsgYW5kIGl0IHdhcyBkZWNpZGVkIHRoYXQgdGhvc2Ugd2hvIGFwcHJvdmVkIHRoaXMgcGxhbiBzaG91bGQgY2FycnkgYSByZWVkLCBzbyB0aGF0IHRoZXkgY291bGQgdGVsbCBob3cgbnVtZXJvdXMgdGhleSB3ZXJlLgo8ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['2.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGVuIEV0ZW9uaWN1cyBsZWFybmVkIG9mIHRoZSBwbG90LCBoZSB3YXMgdW5jZXJ0YWluIGhvdyB0byBkZWFsIHdpdGggdGhlIG1hdHRlciBvbiBhY2NvdW50IG9mIHRoZSBncmVhdCBudW1iZXIgb2YgdGhlIHJlZWQtYmVhcmVycy4gVG8gYXR0YWNrIHRoZW0gb3Blbmx5IHNlZW1lZCB0byBoaW0gdG8gYmUgZGFuZ2Vyb3VzLCBmb3IgaGUgZmVhcmVkIHRoYXQgdGhleSBtaWdodCBydXNoIHRvIHRoZWlyIGFybXMsIGdhaW4gcG9zc2Vzc2lvbiBvZiB0aGUgY2l0eSwgdHVybiBlbmVtaWVzLCBhbmQgc28gcnVpbiBldmVyeXRoaW5nLCBpbiBjYXNlIHRoZXkgc2hvdWxkIHByZXZhaWw7IHdoaWxlLCBpbiB0aGUgb3RoZXIgY2FzZSwgdG8gYmUgcHV0dGluZyBhbGxpZWQgc29sZGllcnMgdG8gZGVhdGggaW4gc3VjaCBudW1iZXJzIHdhcyBhbHNvIGNsZWFybHkgYSBzZXJpb3VzIG1hdHRlciwgZm9yIGluIHRoaXMgd2F5IHRoZSBMYWNlZGFlbW9uaWFucyBtaWdodCBpbmN1ciBoYXJzaCBjcml0aWNpc20gYW1vbmcgdGhlIG90aGVyIEdyZWVrcyBhcyB3ZWxsLCBhbmQgdGhlIHRyb29wcyBtaWdodCBiZSBkaXNhZmZlY3RlZCB0b3dhcmQgdGhlIGNhdXNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFjY29yZGluZ2x5IGhlIHRvb2sgd2l0aCBoaW0gZmlmdGVlbiBtZW4gYXJtZWQgd2l0aCBkYWdnZXJzIGFuZCBwcm9jZWVkZWQgdGhyb3VnaCB0aGUgY2l0eSwgYW5kIG1lZXRpbmcgYSBtYW4gc3VmZmVyaW5nIGZyb20gb3BodGhhbG1pYSBhcyBoZSB3YXMgbGVhdmluZyBhIHBoeXNpY2lhbidzIGhvdXNlLCBhIHJlZWQgaW4gaGlzIGhhbmQsIGhlIHB1dCBoaW0gdG8gZGVhdGguCjwvdHJhbnNsYXRpb24+"
translation['2.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIGFuIHVwcm9hciByZXN1bHRlZCBhbmQgcGVvcGxlIGFza2VkIHdoeSB0aGUgbWFuIGhhZCBiZWVuIHB1dCB0byBkZWF0aCwgRXRlb25pY3VzIG9yZGVyZWQgaGlzIGZvbGxvd2VycyB0byBnaXZlIG91dCB3b3JkIHRoYXQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDYiPjQwNiBCLkMuPC9kYXRlPjwvbm90ZT4gaXQgd2FzIGJlY2F1c2UgaGUgaGFkIHRoZSByZWVkLiBBcyBhIHJlc3VsdCBvZiB0aGlzIGFubm91bmNlbWVudCBhbGwgdGhvc2Ugd2hvIHdlcmUgY2FycnlpbmcgcmVlZHMgdGhyZXcgdGhlbSBhd2F5LCBlYWNoIG1hbiBhcyBoZSBoZWFyZCB0aGUgcmVwb3J0IGJlaW5nIGFmcmFpZCB0aGF0IGhlIG1pZ2h0IGJlIHNlZW4gd2l0aCBvbmUuCjxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['2.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMgRXRlb25pY3VzIGNhbGxlZCB0b2dldGhlciB0aGUgQ2hpYW5zIGFuZCBiYWRlIHRoZW0gY29udHJpYnV0ZSBtb25leSwgaW4gb3JkZXIgdGhhdCB0aGUgc2FpbG9ycyBtaWdodCBnZXQgdGhlaXIgcGF5IGFuZCBub3QgYXR0ZW1wdCBhbnl0aGluZyBzZWRpdGlvdXM7IGFuZCB0aGUgQ2hpYW5zIGRpZCBzby4gQXQgdGhlIHNhbWUgdGltZSBoZSBvcmRlcmVkIGhpcyBtZW4gdG8gZW1iYXJrIHVwb24gdGhlaXIgc2hpcHM7IGFuZCBnb2luZyBhbG9uZyBwYXN0IGVhY2ggc2hpcCBpbiBpdHMgdHVybiBoZSBlbmNvdXJhZ2VkIGFuZCBhZHZpc2VkIHRoZW0gYXQgbGVuZ3RoLCBhcyB0aG91Z2ggaGUga25ldyBub3RoaW5nIG9mIHdoYXQgaGFkIGhhcHBlbmVkLCBhbmQgZGlzdHJpYnV0ZWQgYSBtb250aCdzIHBheSB0byBhbGwgaGFuZHMuCjwvdHJhbnNsYXRpb24+"
translation['2.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZSBDaGlhbnMgYW5kIHRoZSByZXN0IG9mIHRoZSBhbGxpZXMgZ2F0aGVyZWQgYXQgRXBoZXN1cyBhbmQgcmVzb2x2ZWQsIGluIHZpZXcgb2YgdGhlIGV4aXN0aW5nIHNpdHVhdGlvbiwgdG8gc2VuZCBhbWJhc3NhZG9ycyB0byBMYWNlZGFlbW9uIHRvIHJlcG9ydCB0aGUgZmFjdHMgYW5kIHRvIGFzayBmb3IgTHlzYW5kZXIgYXMgY29tbWFuZGVyIG9mIHRoZSBmbGVldCwgYSBtYW4gd2hvIHdhcyBpbiBoaWdoIGZhdm91ciBhbW9uZyB0aGUgYWxsaWVzIGFzIGEgcmVzdWx0IG9mIGhpcyBmb3JtZXIgY29tbWFuZCwgd2hlbiBoZSB3b24gdGhlIGJhdHRsZSBvZiBOb3RpdW0uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSBJLiB2LiAxMS0xNC48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['2.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFtYmFzc2Fkb3JzIHdlcmUgYWNjb3JkaW5nbHkgc2VudCwgYW5kIHdpdGggdGhlbSB3ZW50IGFsc28gZW52b3lzIGZyb20gQ3lydXMgd2l0aCB0aGUgc2FtZSByZXF1ZXN0LiBBbmQgdGhlIExhY2VkYWVtb25pYW5zIGdyYW50ZWQgdGhlbSBMeXNhbmRlciBhcyB2aWNlLWFkbWlyYWwsIGJ1dCBtYWRlIEFyYWN1cyBhZG1pcmFsOyBmb3IgaXQgd2FzIGNvbnRyYXJ5IHRvIHRoZWlyIGxhdyBmb3IgYSBtYW4gdG8gaG9sZCB0aGUgb2ZmaWNlIG9mIGFkbWlyYWwgdHdpY2U7IG5ldmVydGhlbGVzcywgdGhleSBwdXQgdGhlIHNoaXBzIHVuZGVyIHRoZSBjb21tYW5kIG9mIEx5c2FuZGVy4oCUdGhlIHdhciBoYXZpbmcgbm93IGxhc3RlZCB0d2VudHktZml2ZSB5ZWFycy4KPC90cmFuc2xhdGlvbj4="
translation['2.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3YXMgaW4gdGhpcyB5ZWFyIHRoYXQgQ3lydXMgcHV0IHRvIGRlYXRoIEF1dG9ib2VzYWNlcyBhbmQgTWl0cmFldXMsIHdobyB3ZXJlIHNvbnMgb2YgRGFyaXVzJyBzaXN0ZXLigJR0aGUgZGF1Z2h0ZXIgb2YgRGFyaXVzJyBmYXRoZXIgWGVyeGVz4oCUYmVjYXVzZSB1cG9uIG1lZXRpbmcgaGltIHRoZXkgZGlkIG5vdCB0aHJ1c3QgdGhlaXIgaGFuZHMgdGhyb3VnaCB0aGUgY29yw6osIGFuIGhvbm91ciB0aGV5IHNob3cgdGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDYgQi5DLjwvZGF0ZT48L25vdGU+IEtpbmcgYWxvbmUuIChUaGUgY29yw6ogaXMgYSBsb25nZXIgc2xlZXZlIHRoYW4gdGhlIGNoZWlyaXMsIGFuZCBhIG1hbiB3aG8gaGFkIGhpcyBoYW5kIGluIG9uZSB3b3VsZCBiZSBwb3dlcmxlc3MgdG8gZG8gYW55dGhpbmcuKQo8ZGF0ZSBhdXRobmFtZT0iLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNiI+NDA2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['2.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkluIGNvbnNlcXVlbmNlLCBIaWVyYW1lbmVzIGFuZCBoaXMgd2lmZSBzYWlkIHRvIERhcml1cyB0aGF0IGl0IHdvdWxkIGJlIHNoYW1lZnVsIGlmIGhlIHdlcmUgdG8gb3Zlcmxvb2sgc3VjaCB3YW50b24gdmlvbGVuY2Ugb24gdGhlIHBhcnQgb2YgQ3lydXM7IGFuZCBEYXJpdXMsIG9uIHRoZSBwbGVhIHRoYXQgaGUgd2FzIGlsbCwgc2VudCBtZXNzZW5nZXJzIGFuZCBzdW1tb25lZCBDeXJ1cyB0byBjb21lIHRvIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['2.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gdGhlIGZvbGxvd2luZyB5ZWFy4oCUQXJjaHl0YXMgYmVpbmcgbm93IGVwaG9yLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNSI+NDA1IEIuQy48L2RhdGU+PC9ub3RlPiBhbmQgQWxleGlhcyBhcmNob24gYXQgQXRoZW5z4oCUTHlzYW5kZXIgYXJyaXZlZCBhdCBFcGhlc3VzIGFuZCBzZW50IGZvciBFdGVvbmljdXMgdG8gY29tZSB0aGl0aGVyIGZyb20gQ2hpb3Mgd2l0aCB0aGUgc2hpcHMsIHdoaWxlIGhlIGFsc28gZ2F0aGVyZWQgdG9nZXRoZXIgYWxsIHRoZSBvdGhlciBzaGlwcyB0aGF0IHdlcmUgYW55d2hlcmUgdG8gYmUgZm91bmQ7IHRoZW4gaGUgb2NjdXBpZWQgaGltc2VsZiB3aXRoIHJlZml0dGluZyB0aGVzZSB2ZXNzZWxzIGFuZCBidWlsZGluZyBtb3JlIGF0IEFudGFuZHJ1cy4KPGRhdGUgYXV0aG5hbWU9Ii00MDUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDUiPjQwNSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5NZWFudGltZSBoZSB3ZW50IHRvIEN5cnVzIGFuZCBhc2tlZCBmb3IgbW9uZXk7IGFuZCBDeXJ1cyB0b2xkIGhpbSB0aGF0IHRoZSBmdW5kcyBwcm92aWRlZCBieSB0aGUgS2luZyBoYWQgYmVlbiBzcGVudCwgaW4gZmFjdCBtdWNoIG1vcmUgYmVzaWRlcywgc2hvd2luZyBoaW0gaG93IG11Y2ggZWFjaCBvZiB0aGUgYWRtaXJhbHMgaGFkIHJlY2VpdmVkOyBuZXZlcnRoZWxlc3MgaGUgZGlkIGdpdmUgaGltIG1vbmV5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdXBvbiByZWNlaXZpbmcgaXQgTHlzYW5kZXIgYXBwb2ludGVkIHRvIGVhY2ggdHJpcmVtZSBpdHMgY2FwdGFpbiBhbmQgcGFpZCBoaXMgc2FpbG9ycyB0aGUgd2FnZXMgdGhhdCB3ZXJlIGR1ZSB0aGVtLiBNZWFud2hpbGUgdGhlIEF0aGVuaWFuIGdlbmVyYWxzIGFsc28gd2VyZSBnZXR0aW5nIHRoZWlyIGZsZWV0IGluIHJlYWRpbmVzcywgYXQgU2Ftb3MuCjwvdHJhbnNsYXRpb24+"
translation['2.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyBwb2ludCBDeXJ1cyBzZW50IGZvciBMeXNhbmRlciwgZm9yIGEgbWVzc2VuZ2VyIGhhZCBjb21lIHRvIGhpbSBmcm9tIGhpcyBmYXRoZXIgd2l0aCB3b3JkIHRoYXQgaGUgd2FzIGlsbCBhbmQgc3VtbW9uZWQgaGltLCBoZSBiZWluZyBhdCBUaGFtbmVyaWEsIGluIE1lZGlhLCBuZWFyIHRoZSBjb3VudHJ5IG9mIHRoZSBDYWR1c2lhbnMsIGFnYWluc3Qgd2hvbSBoZSBoYWQgbWFkZSBhbiBleHBlZGl0aW9uLCBmb3IgdGhleSB3ZXJlIGluIHJldm9sdC4KPC90cmFuc2xhdGlvbj4="
translation['2.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBMeXNhbmRlciBhcnJpdmVkLCBDeXJ1cyB3YXJuZWQgaGltIG5vdCB0byBnaXZlIGJhdHRsZSB0byB0aGUgQXRoZW5pYW5zIHVubGVzcyBoZSBzaG91bGQgZmFyIG91dG51bWJlciB0aGVtIGluIHNoaXBzOyBmb3IsIEN5cnVzIHNhaWQsIGJvdGggdGhlIEtpbmcgYW5kIGhlIGhhZCBtb25leSBpbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNSI+NDA1IEIuQy48L2RhdGU+PC9ub3RlPiBhYnVuZGFuY2UsIGFuZCBoZW5jZSwgc28gZmFyIGFzIHRoYXQgcG9pbnQgd2FzIGNvbmNlcm5lZCwgaXQgd291bGQgYmUgcG9zc2libGUgdG8gbWFuIG1hbnkgc2hpcHMuIEhlIHRoZW4gYXNzaWduZWQgdG8gTHlzYW5kZXIgYWxsIHRoZSB0cmlidXRlIHdoaWNoIGNhbWUgaW4gZnJvbSBoaXMgY2l0aWVzIGFuZCBiZWxvbmdlZCB0byBoaW0gcGVyc29uYWxseSwgYW5kIGdhdmUgaGltIGFsc28gdGhlIGJhbGFuY2UgaGUgaGFkIG9uIGhhbmQ7IGFuZCwgYWZ0ZXIgcmVtaW5kaW5nIEx5c2FuZGVyIGhvdyBnb29kIGEgZnJpZW5kIGhlIHdhcyBib3RoIHRvIHRoZSBMYWNlZGFlbW9uaWFuIHN0YXRlIGFuZCB0byBoaW0gcGVyc29uYWxseSwgaGUgc2V0IG91dCBvbiB0aGUgam91cm5leSB0byBoaXMgZmF0aGVyLgo8ZGF0ZSBhdXRobmFtZT0iLTQwNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNSI+NDA1IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['2.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IEx5c2FuZGVyLCB3aGVuIEN5cnVzIGhhZCB0aHVzIGdpdmVuIG92ZXIgdG8gaGltIGFsbCBoaXMgbW9uZXkgYW5kIHNldCBvdXQsIGluIHJlc3BvbnNlIHRvIHRoZSBzdW1tb25zLCB0byB2aXNpdCBoaXMgc2ljayBmYXRoZXIsIGRpc3RyaWJ1dGVkIHBheSB0byBoaXMgbWVuIGFuZCBzZXQgc2FpbCB0byB0aGUgQ2VyYW1pYyBHdWxmLCBpbiBDYXJpYS4gVGhlcmUgaGUgYXR0YWNrZWQgYSBjaXR5IG5hbWVkIENlZHJlaWFlIHdoaWNoIHdhcyBhbiBhbGx5IG9mIHRoZSBBdGhlbmlhbnMsIGFuZCBvbiB0aGUgc2Vjb25kIGRheSdzIGFzc2F1bHQgY2FwdHVyZWQgaXQgYnkgc3Rvcm0gYW5kIHJlZHVjZWQgdGhlIGluaGFiaXRhbnRzIHRvIHNsYXZlcnk7IHRoZXkgd2VyZSBhIG1peHR1cmUgb2YgR3JlZWsgYW5kIGJhcmJhcmlhbiBibG9vZC4gVGhlbmNlIGhlIHNhaWxlZCBhd2F5IHRvIFJob2Rlcy4KPC90cmFuc2xhdGlvbj4="
translation['2.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIEF0aGVuaWFucywgdGhleSBoYXJyaWVkIHRoZSB0ZXJyaXRvcnkgb2YgdGhlIEtpbmcsIHVzaW5nIFNhbW9zIGFzIGEgYmFzZSwgYW5kIHNhaWxlZCBhZ2FpbnN0IENoaW9zIGFuZCBFcGhlc3VzOyB0aGV5IHdlcmUgYWxzbyBtYWtpbmcgdGhlaXIgcHJlcGFyYXRpb25zIGZvciBiYXR0bGUsIGFuZCBoYWQgY2hvc2VuIHRocmVlIGdlbmVyYWxzIGluIGFkZGl0aW9uIHRvIHRoZSBmb3JtZXIgbnVtYmVyLOKAlE1lbmFuZGVyLCBUeWRldXMsIGFuZCBDZXBoaXNvZG90dXMuCjwvdHJhbnNsYXRpb24+"
translation['2.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgTHlzYW5kZXIgc2FpbGVkIGZyb20gUmhvZGVzIGFsb25nIHRoZSBjb2FzdCBvZiBJb25pYSB0byB0aGUgSGVsbGVzcG9udCwgaW4gb3JkZXIgdG8gcHJldmVudCB0aGUgcGFzc2luZyBvdXQgb2YgdGhlIGdyYWluLXNoaXBzIGFuZCB0byB0YWtlIGFjdGlvbiBhZ2FpbnN0IHRoZSBjaXRpZXMgd2hpY2ggaGFkIHJldm9sdGVkIGZyb20gdGhlIExhY2VkYWVtb25pYW5zLiBUaGUgQXRoZW5pYW5zIGxpa2V3aXNlIHNldCBvdXQgdGhpdGhlciBmcm9tIENoaW9zLCBrZWVwaW5nIHRvIHRoZSBvcGVuIHNlYTsKPC90cmFuc2xhdGlvbj4="
translation['2.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5mb3IgQXNpYSB3YXMgaG9zdGlsZSB0byB0aGVtLiBCdXQgTHlzYW5kZXIgY29hc3RlZCBhbG9uZyBmcm9tIEFieWR1cyB0byBMYW1wc2FjdXMsIHdoaWNoIHdhcyBhbiBhbGx5IG9mIHRoZSBBdGhlbmlhbnM7IGFuZCB0aGUgcGVvcGxlIG9mIEFieWR1cyBhbmQgdGhlIG90aGVyIGNpdGllcyB3ZXJlIGF0IGhhbmQgb24gdGhlIHNob3JlIHRvIHN1cHBvcnQgaGltLCBiZWluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNSI+NDA1IEIuQy48L2RhdGU+PC9ub3RlPiBjb21tYW5kZWQgYnkgVGhvcmF4LCBhIExhY2VkYWVtb25pYW4uCjxkYXRlIGF1dGhuYW1lPSItNDA1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA1Ij40MDUgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['2.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZXkgYXR0YWNrZWQgdGhlIGNpdHkgYW5kIGNhcHR1cmVkIGl0IGJ5IHN0b3JtLCB3aGVyZXVwb24gdGhlIHNvbGRpZXJzIHBsdW5kZXJlZCBpdC4gSXQgd2FzIGEgd2VhbHRoeSBjaXR5LCBmdWxsIG9mIHdpbmUgYW5kIGdyYWluIGFuZCBhbGwgb3RoZXIga2luZHMgb2Ygc3VwcGxpZXMuIEJ1dCBMeXNhbmRlciBsZXQgZ28gYWxsIHRoZSBmcmVlIHBlcnNvbnMgd2hvIHdlcmUgY2FwdHVyZWQuCjwvdHJhbnNsYXRpb24+"
translation['2.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIEF0aGVuaWFucyBoYWQgYmVlbiBzYWlsaW5nIGluIHRoZSB3YWtlIG9mIEx5c2FuZGVyJ3MgZmxlZXQsIGFuZCB0aGV5IGFuY2hvcmVkIGF0IEVsYWV1cywgaW4gdGhlIENoZXJzb25lc2UsIHdpdGggb25lIGh1bmRyZWQgYW5kIGVpZ2h0eSBzaGlwcy4gV2hpbGUgdGhleSB3ZXJlIGJyZWFrZmFzdGluZyB0aGVyZSwgdGhlIG5ld3MgYWJvdXQgTGFtcHNhY3VzIHdhcyByZXBvcnRlZCB0byB0aGVtLCBhbmQgdGhleSBzZXQgb3V0IGltbWVkaWF0ZWx5IHRvIFNlc3R1cy4KPC90cmFuc2xhdGlvbj4="
translation['2.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5Gcm9tIHRoZXJlLCBhcyBzb29uIGFzIHRoZXkgaGFkIHByb3Zpc2lvbmVkLCB0aGV5IHNhaWxlZCB0byBBZWdvc3BvdGFtaSwgd2hpY2ggaXMgb3Bwb3NpdGUgTGFtcHNhY3VzLCB0aGUgSGVsbGVzcG9udCBhdCB0aGlzIHBvaW50IGJlaW5nIGFib3V0IGZpZnRlZW4gc3RhZGlhPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBzdGFkaXVtID0gYy4gNjAwIGZlZXQuPC9ub3RlPiB3aWRlLiBUaGVyZSB0aGV5IHRvb2sgZGlubmVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZHVyaW5nIHRoZSBlbnN1aW5nIG5pZ2h0LCB3aGVuIGVhcmx5IGRhd24gY2FtZSwgTHlzYW5kZXIgZ2F2ZSB0aGUgc2lnbmFsIGZvciBoaXMgbWVuIHRvIHRha2UgYnJlYWtmYXN0IGFuZCBlbWJhcmsgdXBvbiB0aGVpciBzaGlwcywgYW5kIGFmdGVyIG1ha2luZyBldmVyeXRoaW5nIHJlYWR5IGZvciBiYXR0bGUgYW5kIHN0cmV0Y2hpbmcgdGhlIHNpZGUgc2NyZWVucyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIEkuIHZpLiAxOSBhbmQgbm90ZS48L25vdGU+IGhlIGdhdmUgb3JkZXJzIHRoYXQgbm8gb25lIHNob3VsZCBzdGlyIGZyb20gaGlzIHBvc2l0aW9uIG9yIHB1dCBvdXQuCjwvdHJhbnNsYXRpb24+"
translation['2.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BdCBzdW5yaXNlIHRoZSBBdGhlbmlhbnMgZm9ybWVkIHRoZWlyIHNoaXBzIGluIGxpbmUgZm9yIGJhdHRsZSBhdCB0aGUgbW91dGggb2YgdGhlIGhhcmJvdXIuIFNpbmNlLCBob3dldmVyLCBMeXNhbmRlciBkaWQgbm90IHB1dCBvdXQgYWdhaW5zdCB0aGVtLCB0aGV5IHNhaWxlZCBiYWNrIGFnYWluLCB3aGVuIGl0IGdyZXcgbGF0ZSBpbiB0aGUgZGF5LCB0byBBZWdvc3BvdGFtaS4KPC90cmFuc2xhdGlvbj4="
translation['2.1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gTHlzYW5kZXIgb3JkZXJlZCB0aGUgc3dpZnRlc3Qgb2YgaGlzIHNoaXBzIHRvIGZvbGxvdyB0aGUgQXRoZW5pYW5zIGFuZCwgd2hlbiB0aGV5IGhhZCBkaXNlbWJhcmtlZCwgdG8gb2JzZXJ2ZSB3aGF0IHRoZXkgZGlkLCBhbmQgdGhlbiB0byBzYWlsIGJhY2sgYW5kIHJlcG9ydCB0byBoaW07IGFuZCBoZSBkaWQgbm90IGRpc2VtYmFyayBoaXMgbWVuIGZyb20gdGhlaXIgdmVzc2VscyB1bnRpbCB0aGVzZSBzY291dC1zaGlwcyBoYWQgcmV0dXJuZWQuIFRoaXMgaGUgZGlkIGZvciBmb3VyIGRheXM7IGFuZCB0aGUgQXRoZW5pYW5zIGNvbnRpbnVlZCB0byBzYWlsIG91dCBhbmQgb2ZmZXIgYmF0dGxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5NZWFudGltZSBBbGNpYmlhZGVzLCB3aG8gY291bGQgZGlzY2VybiBmcm9tIGhpcyBjYXN0bGUgdGhhdCB0aGUgQXRoZW5pYW5zIHdlcmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDUiPjQwNSBCLkMuPC9kYXRlPjwvbm90ZT4gbW9vcmVkIG9uIGFuIG9wZW4gc2hvcmUsIHdpdGggbm8gY2l0eSBuZWFyIGJ5LCBhbmQgd2VyZSBmZXRjaGluZyB0aGVpciBwcm92aXNpb25zIGZyb20gU2VzdHVzLCBhIGRpc3RhbmNlIG9mIGZpZnRlZW4gc3RhZGlhIGZyb20gdGhlaXIgc2hpcHMsIHdoaWxlIHRoZSBlbmVteSwgYmVpbmcgaW4gYSBoYXJib3VyIGFuZCBuZWFyIGEgY2l0eSwgaGFkIGV2ZXJ5dGhpbmcgbmVlZGZ1bCwgdG9sZCB0aGUgQXRoZW5pYW5zIHRoYXQgdGhleSB3ZXJlIG5vdCBtb29yZWQgaW4gYSBnb29kIHBsYWNlLCBhbmQgYWR2aXNlZCB0aGVtIHRvIHNoaWZ0IHRoZWlyIGFuY2hvcmFnZSB0byBTZXN0dXMgYW5kIHRodXMgZ2FpbiBhIGhhcmJvdXIgYW5kIGEgY2l0eTsg4oCcZm9yIGlmIHlvdSBhcmUgdGhlcmUs4oCdIGhlIHNhaWQsIOKAnHlvdSB3aWxsIGJlIGFibGUgdG8gZmlnaHQgd2hlbiB5b3UgcGxlYXNlLuKAnQo8ZGF0ZSBhdXRobmFtZT0iLTQwNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNSI+NDA1IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['2.1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgZ2VuZXJhbHMsIGhvd2V2ZXIsIGFuZCBlc3BlY2lhbGx5IFR5ZGV1cyBhbmQgTWVuYW5kZXIsIGJhZGUgaGltIGJlIGdvbmU7IGZvciB0aGV5IHNhaWQgdGhhdCB0aGV5IHdlcmUgaW4gY29tbWFuZCBub3csIG5vdCBoZS4gU28gaGUgd2VudCBhd2F5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm93IEx5c2FuZGVyLCBvbiB0aGUgZmlmdGggZGF5IHRoZSBBdGhlbmlhbnMgc2FpbGVkIG91dCBhZ2FpbnN0IGhpbSwgdG9sZCBoaXMgbWVuLCB3aG8gZm9sbG93ZWQgdGhlbSBiYWNrLCB0aGF0IGFzIHNvb24gYXMgdGhleSBzYXcgdGhhdCB0aGUgZW5lbXkgaGFkIGRpc2VtYmFya2VkIGFuZCBoYWQgc2NhdHRlcmVkIHVwIGFuZCBkb3duIHRoZSBDaGVyc29uZXNlLCDigJRhbmQgdGhlIEF0aGVuaWFucyBkaWQgdGhpcyBmYXIgbW9yZSBmcmVlbHkgZXZlcnkgZGF5LCBub3Qgb25seSBiZWNhdXNlIHRoZXkgYm91Z2h0IHRoZWlyIHByb3Zpc2lvbnMgYXQgYSBkaXN0YW5jZSwgYnV0IGFsc28gYmVjYXVzZSB0aGV5IHByZXN1bWVkIHRvIHRoaW5rIGxpZ2h0bHkgb2YgTHlzYW5kZXIgZm9yIG5vdCBwdXR0aW5nIG91dCB0byBtZWV0IHRoZW0s4oCUdGhleSB3ZXJlIHRvIHNhaWwgYmFjayB0byBoaW0gYW5kIHRvIGhvaXN0IGEgc2hpZWxkIHdoZW4gbWlkd2F5IGluIHRoZWlyIGNvdXJzZS4gQW5kIHRoZXkgZGlkIGp1c3QgYXMgaGUgaGFkIG9yZGVyZWQuCjwvdHJhbnNsYXRpb24+"
translation['2.1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5TdHJhaWdodHdheSBMeXNhbmRlciBnYXZlIGEgc2lnbmFsIHRvIGhpcyBmbGVldCB0byBzYWlsIHdpdGggYWxsIHNwZWVkLCBhbmQgVGhvcmF4IHdpdGggaGlzIHRyb29wcyB3ZW50IHdpdGggdGhlIGZsZWV0LiBOb3cgd2hlbiBDb25vbiBzYXcgdGhlIG9uY29taW5nIGF0dGFjaywgaGUgc2lnbmFsbGVkIHRoZSBBdGhlbmlhbnMgdG8gaGFzdGVuIHdpdGggYWxsIHRoZWlyIG1pZ2h0IHRvIHRoZWlyIHNoaXBzLiBCdXQgc2luY2UgaGlzIG1lbiB3ZXJlIHNjYXR0ZXJlZCBoZXJlIGFuZCB0aGVyZSwgc29tZSBvZiB0aGUgc2hpcHMgaGFkIGJ1dCB0d28gYmFua3Mgb2Ygb2FycyBtYW5uZWQsIHNvbWUgYnV0IG9uZSwgYW5kIHNvbWUgd2VyZSBlbnRpcmVseSBlbXB0eTsgQ29ub24ncyBvd24gc2hpcCwgaW5kZWVkLCBhbmQgc2V2ZW4gb3RoZXJzIGFjY29tcGFueWluZyBoaW0sIHdoaWNoIHdlcmUgZnVsbHkgbWFubmVkLCBwdXQgdG8gc2VhIGluIGNsb3NlIG9yZGVyLCBhbmQgdGhlIFBhcmFsdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+T25lIG9mIHRoZSDigJxzdGF0ZSB0cmlyZW1lcyzigJ0gd2hpY2ggd2VyZSBlbXBsb3llZCBmb3IgdmFyaW91cyBwdWJsaWMgbWlzc2lvbnMgYW5kIGFzIGRpc3BhdGNoLWJvYXRzLjwvbm90ZT4gd2l0aCB0aGVtLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNSI+NDA1IEIuQy48L2RhdGU+PC9ub3RlPiBidXQgYWxsIHRoZSByZXN0IEx5c2FuZGVyIGNhcHR1cmVkIG9uIHRoZSBiZWFjaC4gSGUgYWxzbyBnYXRoZXJlZCB1cCBvbiB0aGUgc2hvcmUgbW9zdCBvZiB0aGUgbWVuIG9mIHRoZWlyIGNyZXdzOyBzb21lLCBob3dldmVyLCBnYWluZWQgdGhlIHNoZWx0ZXIgb2YgdGhlIG5laWdoYm91cmluZyBzdHJvbmdob2xkcy4KPGRhdGUgYXV0aG5hbWU9Ii00MDUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDUiPjQwNSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.1.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHdoZW4gQ29ub24sIGZsZWVpbmcgd2l0aCBoaXMgbmluZSBzaGlwcywgcmVhbGl6ZWQgdGhhdCB0aGUgQXRoZW5pYW4gY2F1c2Ugd2FzIGxvc3QsIGhlIHB1dCBpbiBhdCBBYmFybmlzLCB0aGUgcHJvbW9udG9yeSBvZiBMYW1wc2FjdXMsIGFuZCB0aGVyZSBzZWl6ZWQgdGhlIGNydWlzaW5nIHNhaWxzIHRoYXQgYmVsb25nZWQgdG8gTHlzYW5kZXIncyBzaGlwczsgdGhlbiBoZSBzYWlsZWQgYXdheSB3aXRoIGVpZ2h0IHNoaXBzIHRvIHNlZWsgcmVmdWdlIHdpdGggRXVhZ29yYXMgaW4gQ3lwcnVzLCB3aGlsZSB0aGUgUGFyYWx1cyB3ZW50IHRvIEF0aGVucyB3aXRoIHRoZSB0aWRpbmdzIG9mIHdoYXQgaGFkIGhhcHBlbmVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.1.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgTHlzYW5kZXIsIGhlIHRvb2sgaGlzIHByaXplcyBhbmQgcHJpc29uZXJzIGFuZCBldmVyeXRoaW5nIGVsc2UgYmFjayB0byBMYW1wc2FjdXMsIHRoZSBwcmlzb25lcnMgaW5jbHVkaW5nIFBoaWxvY2xlcywgQWRlaW1hbnR1cywgYW5kIHNvbWUgb2YgdGhlIG90aGVyIGdlbmVyYWxzLiBGdXJ0aGVybW9yZSwgb24gdGhlIGRheSB3aGVuIGhlIGFjaGlldmVkIHRoaXMgdmljdG9yeSBoZSBzZW50IFRoZW9wb21wdXMsIHRoZSBNaWxlc2lhbiBidWNjYW5lZXIsIHRvIExhY2VkYWVtb24gdG8gcmVwb3J0IHdoYXQgaGFkIGhhcHBlbmVkLCBhbmQgVGhlb3BvbXB1cyBhcnJpdmVkIGFuZCBkZWxpdmVyZWQgaGlzIG1lc3NhZ2Ugb24gdGhlIHRoaXJkIGRheS4KPC90cmFuc2xhdGlvbj4="
translation['2.1.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIEx5c2FuZGVyIGdhdGhlcmVkIHRvZ2V0aGVyIHRoZSBhbGxpZXMgYW5kIGJhZGUgdGhlbSBkZWxpYmVyYXRlIHJlZ2FyZGluZyB0aGUgZGlzcG9zaXRpb24gdG8gYmUgbWFkZSBvZiB0aGUgcHJpc29uZXJzLiBUaGVyZXVwb24gbWFueSBjaGFyZ2VzIGJlZ2FuIHRvIGJlIHVyZ2VkIGFnYWluc3QgdGhlIEF0aGVuaWFucywgbm90IG9ubHkgdG91Y2hpbmcgdGhlIG91dHJhZ2VzIHRoZXkgaGFkIGFscmVhZHkgY29tbWl0dGVkIGFuZCB3aGF0IHRoZXkgaGFkIHZvdGVkIHRvIGRvIGlmIHRoZXkgd2VyZSB2aWN0b3Jpb3VzIGluIHRoZSBiYXR0bGUsIOKAlG5hbWVseSwgdG8gY3V0IG9mZiB0aGUgcmlnaHQgaGFuZCBvZiBldmVyeSBtYW4gdGFrZW4gYWxpdmUs4oCUYnV0IGFsc28gdGhlIGZhY3QgdGhhdCBhZnRlciBjYXB0dXJpbmcgdHdvIHRyaXJlbWVzLCBvbmUgYSBDb3JpbnRoaWFuIGFuZCB0aGUgb3RoZXIgYW4gQW5kcmlhbiwgdGhleSBoYWQgdGhyb3duIHRoZSBjcmV3cyBvdmVyYm9hcmQgdG8gYSBtYW4uIEFuZCBpdCB3YXMgUGhpbG9jbGVzLCBvbmUgb2YgdGhlIEF0aGVuaWFuIGdlbmVyYWxzLCB3aG8gaGFkIHRodXMgbWFkZSBhd2F5IHdpdGggdGhlc2UgbWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.1.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5NYW55IG90aGVyIHN0b3JpZXMgd2VyZSB0b2xkLCBhbmQgaXQgd2FzIGZpbmFsbHkgcmVzb2x2ZWQgdG8gcHV0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA1Ij40MDUgQi5DLjwvZGF0ZT48L25vdGU+IHRvIGRlYXRoIGFsbCBvZiB0aGUgcHJpc29uZXJzIHdobyB3ZXJlIEF0aGVuaWFucywgd2l0aCB0aGUgZXhjZXB0aW9uIG9mIEFkZWltYW50dXMsIGJlY2F1c2UgaGUgd2FzIHRoZSBvbmUgbWFuIHdobyBpbiB0aGUgQXRoZW5pYW4gQXNzZW1ibHkgaGFkIG9wcG9zZWQgdGhlIGRlY3JlZSBpbiByZWdhcmQgdG8gY3V0dGluZyBvZmYgdGhlIGhhbmRzIG9mIGNhcHRpdmVzOyBoZSB3YXMgY2hhcmdlZCwgaG93ZXZlciwgYnkgc29tZSBwZW9wbGUgd2l0aCBoYXZpbmcgYmV0cmF5ZWQgdGhlIGZsZWV0LiBBcyB0byBQaGlsb2NsZXMsIHdobyB0aHJldyBvdmVyYm9hcmQgdGhlIEFuZHJpYW5zIGFuZCBDb3JpbnRoaWFucywgTHlzYW5kZXIgZmlyc3QgYXNrZWQgaGltIHdoYXQgaGUgZGVzZXJ2ZWQgdG8gc3VmZmVyIGZvciBoYXZpbmcgYmVndW4gb3V0cmFnZW91cyBwcmFjdGljZXMgdG93YXJkcyBHcmVla3MsIGFuZCB0aGVuIGhhZCBoaXMgdGhyb2F0IGN1dC4KPGRhdGUgYXV0aG5hbWU9Ii00MDUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDUiPjQwNSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciBzZXR0aW5nIGluIG9yZGVyIHRoZSBhZmZhaXJzIG9mIExhbXBzYWN1cywgTHlzYW5kZXIgc2FpbGVkIGFnYWluc3QgQnl6YW50aXVtIGFuZCBDYWxjaGVkb24uIEFuZCB0aGUgcGVvcGxlIG9mIHRob3NlIGNpdGllcyBhZG1pdHRlZCBoaW0sIGFsbG93aW5nIHRoZSBBdGhlbmlhbiBnYXJyaXNvbnMsIGJ5IHRoZSB0ZXJtcyBvZiB0aGUgc3VycmVuZGVyLCB0byB3aXRoZHJhdy4gQW5kIHRob3NlIHdobyBoYWQgYmV0cmF5ZWQgQnl6YW50aXVtIHRvIEFsY2liaWFkZXMgZmxlZCBhdCB0aGlzIHRpbWUgdG8gdGhlIFBvbnR1cywgYnV0IGFmdGVyd2FyZHMgdGhleSB3ZW50IHRvIEF0aGVucyBhbmQgYmVjYW1lIEF0aGVuaWFuIGNpdGl6ZW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk5vdyB0aGUgQXRoZW5pYW4gZ2Fycmlzb25zLCBhbmQgaW4gZmFjdCBldmVyeSBvdGhlciBBdGhlbmlhbiB3aG9tIGhlIHNhdyBhbnl3aGVyZSwgTHlzYW5kZXIgc2VudCBob21lIHRvIEF0aGVucywgZ2l2aW5nIHRoZW0gc2FmZSBjb25kdWN0IGlmIHRoZXkgc2FpbGVkIHRvIHRoYXQgb25lIHBsYWNlIGFuZCBub3QgaWYgdGhleSB3ZW50IHRvIGFueSBvdGhlcjsgZm9yIGhlIGtuZXcgdGhhdCB0aGUgbW9yZSBwZW9wbGUgd2VyZSBjb2xsZWN0ZWQgaW4gdGhlIGNpdHkgYW5kIFBpcmFldXMsIHRoZSBtb3JlIHF1aWNrbHkgdGhlcmUgd291bGQgYmUgYSBzY2FyY2l0eSBvZiBwcm92aXNpb25zLiBUaGVuLCBhZnRlciBsZWF2aW5nIFN0aGVuZWxhdXMsIGEgTGFjb25pYW4sIGFzIGdvdmVybm9yIG9mIEJ5emFudGl1bSBhbmQgQ2FsY2hlZG9uLCBoZSBzYWlsZWQgYmFjayB0byBMYW1wc2FjdXMgYW5kIG9jY3VwaWVkIGhpbXNlbGYgd2l0aCByZWZpdHRpbmcgaGlzIHNoaXBzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3YXMgYXQgbmlnaHQgdGhhdCB0aGUgUGFyYWx1cyBhcnJpdmVkIGF0IEF0aGVucyB3aXRoIHRpZGluZ3Mgb2YgdGhlIGRpc2FzdGVyLCBhbmQgYSBzb3VuZCBvZiB3YWlsaW5nIHJhbiBmcm9tIFBpcmFldXMgdGhyb3VnaCB0aGUgbG9uZyB3YWxscyB0byB0aGUgY2l0eSwgb25lIG1hbiBwYXNzaW5nIG9uIHRoZSBuZXdzIHRvIGFub3RoZXI7IGFuZCBkdXJpbmcgdGhhdCBuaWdodCBubyBvbmUgc2xlcHQsIGFsbCBtb3VybmluZywgbm90IGZvciB0aGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDUiPjQwNSBCLkMuPC9kYXRlPjwvbm90ZT4gbG9zdCBhbG9uZSwgYnV0IGZhciBtb3JlIGZvciB0aGVpciBvd24gc2VsdmVzLCB0aGlua2luZyB0aGF0IHRoZXkgd291bGQgc3VmZmVyIHN1Y2ggdHJlYXRtZW50IGFzIHRoZXkgaGFkIHZpc2l0ZWQgdXBvbiB0aGUgTWVsaWFucyw8ZGF0ZSBhdXRobmFtZT0iLTQwNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNSI+NDA1IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldoZW4gTWVsb3Mgc3VycmVuZGVyZWQgdG8gdGhlIEF0aGVuaWFucywgaW4gPGRhdGUgYXV0aG5hbWU9Ii00MTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MTYiPjQxNiBCLkMuPC9kYXRlPiwgdGhlIG1lbiB3aG8gd2VyZSB0YWtlbiB3ZXJlIHB1dCB0byBkZWF0aCBhbmQgdGhlIHdvbWVuIGFuZCBjaGlsZHJlbiBzb2xkIGludG8gc2xhdmVyeSAoVGh1Yy4gdi4gMTE2KS4gVGhlIEFlZ2luZXRhbnMgd2VyZSBleHBlbGxlZCBmcm9tIHRoZWlyIGlzbGFuZCBpbiA8ZGF0ZSBhdXRobmFtZT0iLTQzMSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQzMSI+NDMxIEIuQy48L2RhdGU+IFNldmVuIHllYXJzIGxhdGVyIGEgbGFyZ2UgbnVtYmVyIG9mIHRoZW0gd2VyZSBjYXB0dXJlZCBpbiB0aGVpciBwbGFjZSBvZiByZWZ1Z2UsIGluIFBlbG9wb25uZXN1cywgYW5kIHB1dCB0byBkZWF0aCAoVGh1Yy4gaWkuIDI3IGFuZCBpdi4gNTcpLiBUaGUgb3RoZXIgcGVvcGxlcyBtZW50aW9uZWQgaGFkIGJlZW4gc2ltaWxhcmx5IGV4aWxlZCwgZW5zbGF2ZWQsIG9yIG1hc3NhY3JlZC48L25vdGU+IGNvbG9uaXN0cyBvZiB0aGUgTGFjZWRhZW1vbmlhbnMsIGFmdGVyIHJlZHVjaW5nIHRoZW0gYnkgc2llZ2UsIGFuZCB1cG9uIHRoZSBIaXN0aWFlYW5zIGFuZCBTY2lvbmFlYW5zIGFuZCBUb3JvbmFlYW5zIGFuZCBBZWdpbmV0YW5zIGFuZCBtYW55IG90aGVyIEdyZWVrIHBlb3BsZXMuCjxkYXRlIGF1dGhuYW1lPSItNDE2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDE2Ij40MTYgQi5DLjwvZGF0ZT4sIHRoZSBtZW4gd2hvIHdlcmUgdGFrZW4gd2VyZSBwdXQgdG8gZGVhdGggYW5kIHRoZSB3b21lbiBhbmQgY2hpbGRyZW4gc29sZCBpbnRvIHNsYXZlcnkgKFRodWMuIHYuIDExNikuIFRoZSBBZWdpbmV0YW5zIHdlcmUgZXhwZWxsZWQgZnJvbSB0aGVpciBpc2xhbmQgaW4gPGRhdGUgYXV0aG5hbWU9Ii00MzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MzEiPjQzMSBCLkMuPC9kYXRlPiBTZXZlbiB5ZWFycyBsYXRlciBhIGxhcmdlIG51bWJlciBvZiB0aGVtIHdlcmUgY2FwdHVyZWQgaW4gdGhlaXIgcGxhY2Ugb2YgcmVmdWdlLCBpbiBQZWxvcG9ubmVzdXMsIGFuZCBwdXQgdG8gZGVhdGggKFRodWMuIGlpLiAyNyBhbmQgaXYuIDU3KS4gVGhlIG90aGVyIHBlb3BsZXMgbWVudGlvbmVkIGhhZCBiZWVuIHNpbWlsYXJseSBleGlsZWQsIGVuc2xhdmVkLCBvciBtYXNzYWNyZWQuPC90cmFuc2xhdGlvbj4="
translation['2.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBmb2xsb3dpbmcgZGF5IHRoZXkgY29udmVuZWQgYW4gQXNzZW1ibHksIGF0IHdoaWNoIGl0IHdhcyByZXNvbHZlZCB0byBibG9jayB1cCBhbGwgdGhlIGhhcmJvdXJzIGV4Y2VwdCBvbmUsIHRvIHJlcGFpciB0aGUgd2FsbHMsIHRvIHN0YXRpb24gZ3VhcmRzLCBhbmQgaW4gYWxsIG90aGVyIHJlc3BlY3RzIHRvIGdldCB0aGUgY2l0eSByZWFkeSBmb3IgYSBzaWVnZS4gVGhleSBidXNpZWQgdGhlbXNlbHZlcywgYWNjb3JkaW5nbHksIHdpdGggdGhlc2UgbWF0dGVycy4KPC90cmFuc2xhdGlvbj4="
translation['2.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFud2hpbGUgTHlzYW5kZXIsIHNhaWxpbmcgb3V0IG9mIHRoZSBIZWxsZXNwb250IHdpdGggdHdvIGh1bmRyZWQgc2hpcHMsIGFycml2ZWQgYXQgTGVzYm9zIGFuZCBhcnJhbmdlZCB0aGUgYWZmYWlycyBvZiBNeXRpbGVuZSBhbmQgdGhlIG90aGVyIGNpdGllcyBvZiB0aGUgaXNsYW5kOyBhbmQgaGUgc2VudCBFdGVvbmljdXMgd2l0aCB0ZW4gdHJpcmVtZXMgdG8gdGhlIHBsYWNlcyBvbiB0aGUgVGhyYWNpYW4gY29hc3QsIGFuZCBFdGVvbmljdXMgYnJvdWdodCBvdmVyIGV2ZXJ5dGhpbmcgaW4gdGhhdCByZWdpb24gdG8gdGhlIHNpZGUgb2YgdGhlIExhY2VkYWVtb25pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkluZGVlZCwgdGhlIHJlc3Qgb2YgdGhlIEdyZWVrIHdvcmxkIGFsc28gaGFkIGZhbGxlbiBhd2F5IGZyb20gdGhlIEF0aGVuaWFucyBpbW1lZGlhdGVseSBhZnRlciB0aGUgYmF0dGxlLCB3aXRoIHRoZSBleGNlcHRpb24gb2YgU2Ftb3M7IHRoZXJlIHRoZSBwZW9wbGUgc2xhdWdodGVyZWQgdGhlIGFyaXN0b2NyYXRzIGFuZCBoZWxkIHBvc3Nlc3Npb24gb2YgdGhlaXIgY2l0eS4KPC90cmFuc2xhdGlvbj4="
translation['2.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMgTHlzYW5kZXIgc2VudCB3b3JkIHRvIEFnaXMsIGF0IERlY2VsZWEsIGFuZCB0byBMYWNlZGFlbW9uIHRoYXQgaGUgd2FzIGNvbWluZyB3aXRoIHR3byBodW5kcmVkIHNoaXBzLiBUaGVyZXVwb24gdGhlIExhY2VkYWVtb25pYW5zIHRvb2sgdGhlIGZpZWxkIHdpdGggdGhlaXIgd2hvbGUgZm9yY2UsIGFuZCBsaWtld2lzZSB0aGUgcmVzdCBvZiB0aGUgUGVsb3Bvbm5lc2lhbnMgZXhjZXB0aW5nIHRoZSBBcmdpdmVzLCBhdCB0aGUgY29tbWFuZCBvZiBQYXVzYW5pYXMsIHRoZSBvdGhlciBraW5nIG9mIHRoZSBMYWNlZGFlbW9uaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['2.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIGFsbCBoYWQgYmVlbiBnYXRoZXJlZCB0b2dldGhlciwgUGF1c2FuaWFzIGxlZCB0aGVtIHRvIEF0aGVucyBhbmQgZW5jYW1wZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDUiPjQwNSBCLkMuPC9kYXRlPjwvbm90ZT4gaW4gdGhlIEFjYWRlbXkuCjxkYXRlIGF1dGhuYW1lPSItNDA1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA1Ij40MDUgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['2.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk1lYW50aW1lIEx5c2FuZGVyLCB1cG9uIHJlYWNoaW5nIEFlZ2luYSwgcmVzdG9yZWQgdGhlIHN0YXRlIHRvIHRoZSBBZWdpbmV0YW5zLCBnYXRoZXJpbmcgdG9nZXRoZXIgYXMgbWFueSBvZiB0aGVtIGFzIGhlIGNvdWxkLCBhbmQgaGUgZGlkIHRoZSBzYW1lIHRoaW5nIGZvciB0aGUgTWVsaWFucyBhbHNvIGFuZCBmb3IgYWxsIHRoZSBvdGhlcnMgd2hvIGhhZCBiZWVuIGRlcHJpdmVkIG9mIHRoZWlyIG5hdGl2ZSBzdGF0ZXMuIFRoZW4sIGFmdGVyIGxheWluZyB3YXN0ZSBTYWxhbWlzLCBoZSBhbmNob3JlZCBhdCBQaXJhZXVzIHdpdGggb25lIGh1bmRyZWQgYW5kIGZpZnR5IHNoaXBzIGFuZCBjbG9zZWQgdGhlIGVudHJhbmNlIHRvIHRoZSBoYXJib3VyIGFnYWluc3QgYWxsIG1lcmNoYW50bWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHRoZSBBdGhlbmlhbnMsIGJlaW5nIHRodXMgYmVzaWVnZWQgYnkgbGFuZCBhbmQgYnkgc2VhLCBrbmV3IG5vdCB3aGF0IHRvIGRvLCBzaW5jZSB0aGV5IGhhZCBuZWl0aGVyIHNoaXBzIG5vciBhbGxpZXMgbm9yIHByb3Zpc2lvbnM7IGFuZCB0aGV5IHRob3VnaHQgdGhhdCB0aGVyZSB3YXMgbm8gd2F5IG91dCwgc2F2ZSBvbmx5IHRvIHN1ZmZlciB0aGUgcGFpbnMgd2hpY2ggdGhleSBoYWQgdGhlbXNlbHZlcyBpbmZsaWN0ZWQsIG5vdCBpbiByZXRhbGlhdGlvbiwgYnV0IGluIHdhbnRvbm5lc3MgYW5kIHVuanVzdGx5IHVwb24gdGhlIHBlb3BsZSBvZiBzbWFsbCBzdGF0ZXMsIGZvciBubyBvdGhlciBzaW5nbGUgcmVhc29uIHRoYW4gYmVjYXVzZSB0aGV5IHdlcmUgaW4gYWxsaWFuY2Ugd2l0aCB0aGUgTGFjZWRhZW1vbmlhbnMuCjwvdHJhbnNsYXRpb24+"
translation['2.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGlzIGFjY291bnQgdGhleSByZXN0b3JlZCB0byB0aGUgZGlzZnJhbmNoaXNlZCB0aGVpciBwb2xpdGljYWwgcmlnaHRzIGFuZCBoZWxkIG91dCBzdGVhZGZhc3RseSwgcmVmdXNpbmcgdG8gbWFrZSBvdmVydHVyZXMgZm9yIHBlYWNlIGV2ZW4gdGhvdWdoIG1hbnkgd2VyZSBkeWluZyBpbiB0aGUgY2l0eSBmcm9tIHN0YXJ2YXRpb24uIFdoZW4sIGhvd2V2ZXIsIHRoZWlyIHByb3Zpc2lvbnMgaGFkIGVudGlyZWx5IGdpdmVuIG91dCwgdGhleSBzZW50IGFtYmFzc2Fkb3JzIHRvIEFnaXMgZGVjbGFyaW5nIHRoZWlyIHdpc2ggdG8gYmVjb21lIGFsbGllcyBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgd2hpbGUgc3RpbGwga2VlcGluZyB0aGVpciB3YWxscyBhbmQgUGlyYWV1cywgYW5kIG9uIHRoZXNlIHRlcm1zIHRvIGNvbmNsdWRlIGEgdHJlYXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgQWdpcyBiYWRlIHRoZW0gZ28gdG8gTGFjZWRhZW1vbiwgc2F5aW5nIHRoYXQgaGUgaGltc2VsZiBoYWQgbm8gYXV0aG9yaXR5LiBBbmQgd2hlbiB0aGUgYW1iYXNzYWRvcnMgcmVwb3J0ZWQgdG8gdGhlIEF0aGVuaWFucyB0aGlzIHJlcGx5LCB0aGV5IHNlbnQgdGhlbSB0byBMYWNlZGFlbW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGV5IHdlcmUgYXQgU2VsbGFzaWEsIG5lYXIgTGFjb25pYSwgYW5kIHRoZSBlcGhvcnMgbGVhcm5lZCBmcm9tIHRoZW0gd2hhdCBwcm9wb3NhbHMgdGhleSB3ZXJlIGJyaW5naW5nLOKAlHRoZSBzYW1lLCBuYW1lbHksIGFzIHRob3NlIHdoaWNoIHRoZXkgaGFkIHByZXNlbnRlZCB0byBBZ2lzLOKAlHRoZXkgZGlyZWN0ZWQgdGhlbSB0byBnbyBiYWNrIGFnYWluIHdpdGhvdXQgY29taW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA1Ij40MDUgQi5DLjwvZGF0ZT48L25vdGU+IGEgc3RlcCBmYXJ0aGVyIGFuZCwgaWYgdGhleSByZWFsbHkgaGFkIGFueSBkZXNpcmUgZm9yIHBlYWNlLCB0byB0YWtlIGJldHRlciBjb3Vuc2VsIGJlZm9yZSB0aGV5IHJldHVybmVkLgo8ZGF0ZSBhdXRobmFtZT0iLTQwNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNSI+NDA1IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['2.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGUgYW1iYXNzYWRvcnMgcmVhY2hlZCBob21lIGFuZCByZXBvcnRlZCB0aGlzIHRvIHRoZSBwZW9wbGUsIGRlc3BvbmRlbmN5IGRlc2NlbmRlZCB1cG9uIGFsbDsgZm9yIHRoZXkgaW1hZ2luZWQgdGhhdCB0aGV5IHdvdWxkIGJlIHJlZHVjZWQgdG8gc2xhdmVyeSwgYW5kIHRoYXQgd2hpbGUgdGhleSB3ZXJlIHNlbmRpbmcgYW5vdGhlciBzZXQgb2YgYW1iYXNzYWRvcnMsIG1hbnkgd291bGQgZGllIG9mIHRoZSBmYW1pbmUuCjwvdHJhbnNsYXRpb24+"
translation['2.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5OZXZlcnRoZWxlc3MsIG5vIG9uZSB3YW50ZWQgdG8gbWFrZSBhbnkgcHJvcG9zYWwgaW52b2x2aW5nIHRoZSBkZXN0cnVjdGlvbiBvZiB0aGUgd2FsbHM7IGZvciB3aGVuIEFyY2hlc3RyYXR1cyBzYWlkIGluIHRoZSBTZW5hdGUgdGhhdCBpdCB3YXMgYmVzdCB0byBtYWtlIHBlYWNlIHdpdGggdGhlIExhY2VkYWVtb25pYW5zIG9uIHRoZSB0ZXJtcyB0aGV5IG9mZmVyZWTigJRhbmQgdGhlIHRlcm1zIHdlcmUgdGhhdCB0aGV5IHNob3VsZCB0ZWFyIGRvd24gYSBwb3J0aW9uIHRlbiBzdGFkaWEgbG9uZyBvZiBlYWNoIG9mIHRoZSB0d28gbG9uZyB3YWxscyzigJRoZSB3YXMgdGhyb3duIGludG8gcHJpc29uLCBhbmQgYSBkZWNyZWUgd2FzIHBhc3NlZCBmb3JiaWRkaW5nIHRoZSBtYWtpbmcgb2YgYSBwcm9wb3NhbCBvZiB0aGlzIHNvcnQuCjwvdHJhbnNsYXRpb24+"
translation['2.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhpcyBiZWluZyB0aGUgY29uZGl0aW9uIG9mIGFmZmFpcnMgaW4gQXRoZW5zLCBUaGVyYW1lbmVzIHNhaWQgaW4gdGhlIEFzc2VtYmx5IHRoYXQgaWYgdGhleSB3ZXJlIHdpbGxpbmcgdG8gc2VuZCBoaW0gdG8gTHlzYW5kZXIsIGhlIHdvdWxkIGZpbmQgb3V0IGJlZm9yZSBoZSBjYW1lIGJhY2sgd2hldGhlciB0aGUgTGFjZWRhZW1vbmlhbnMgd2VyZSBpbnNpc3RlbnQgaW4gdGhlIG1hdHRlciBvZiB0aGUgd2FsbHMgYmVjYXVzZSB0aGV5IHdpc2hlZCB0byByZWR1Y2UgdGhlIGNpdHkgdG8gc2xhdmVyeSwgb3IgaW4gb3JkZXIgdG8gb2J0YWluIGEgZ3VhcmFudGVlIG9mIGdvb2QgZmFpdGguIFVwb24gYmVpbmcgc2VudCwgaG93ZXZlciwgaGUgc3RheWVkIHdpdGggTHlzYW5kZXIgdGhyZWUgbW9udGhzIGFuZCBtb3JlLCB3YWl0aW5nIGZvciB0aGUgdGltZSB3aGVuLCBvbiBhY2NvdW50IG9mIHRoZSBmYWlsdXJlIG9mIHByb3Zpc2lvbnMsIHRoZSBBdGhlbmlhbnMgd291bGQgYWdyZWUgdG8gYW55dGhpbmcgYW5kIGV2ZXJ5dGhpbmcgd2hpY2ggbWlnaHQgYmUgcHJvcG9zZWQuCjwvdHJhbnNsYXRpb24+"
translation['2.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBoZSByZXR1cm5lZCBpbiB0aGUgZm91cnRoIG1vbnRoLCBoZSByZXBvcnRlZCBpbiB0aGUgQXNzZW1ibHkgdGhhdCBMeXNhbmRlciBoYWQgZGV0YWluZWQgaGltIGFsbCB0aGlzIHRpbWUgYW5kIGhhZCB0aGVuIGRpcmVjdGVkIGhpbSB0byBnbyB0byBMYWNlZGFlbW9uLCBzYXlpbmcgdGhhdCBoZSBoYWQgbm8gYXV0aG9yaXR5IGluIHRoZSBtYXR0ZXJzIGNvbmNlcm5pbmcgd2hpY2ggVGhlcmFtZW5lcyBhc2tlZCBmb3IgaW5mb3JtYXRpb24sIGJ1dCBvbmx5IHRoZSBlcGhvcnMuIEFmdGVyIHRoaXMgVGhlcmFtZW5lcyB3YXMgY2hvc2VuIGFtYmFzc2Fkb3IgdG8gTGFjZWRhZW1vbiB3aXRoPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA1Ij40MDUgQi5DLjwvZGF0ZT48L25vdGU+IGZ1bGwgcG93ZXIsIGJlaW5nIGF0IHRoZSBoZWFkIG9mIGFuIGVtYmFzc3kgb2YgdGVuLgo8ZGF0ZSBhdXRobmFtZT0iLTQwNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNSI+NDA1IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['2.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5MeXNhbmRlciBtZWFud2hpbGUgc2VudCBBcmlzdG90ZWxlcywgYW4gQXRoZW5pYW4gZXhpbGUsIGluIGNvbXBhbnkgd2l0aCBzb21lIExhY2VkYWVtb25pYW5zLCB0byByZXBvcnQgdG8gdGhlIGVwaG9ycyB0aGF0IHRoZSBhbnN3ZXIgaGUgaGFkIG1hZGUgdG8gVGhlcmFtZW5lcyB3YXMgdGhhdCB0aGV5IG9ubHkgaGFkIGF1dGhvcml0eSBpbiB0aGUgbWF0dGVyIG9mIHBlYWNlIGFuZCB3YXIuCjwvdHJhbnNsYXRpb24+"
translation['2.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiBUaGVyYW1lbmVzIGFuZCB0aGUgb3RoZXIgYW1iYXNzYWRvcnMgd2VyZSBhdCBTZWxsYXNpYSBhbmQsIG9uIGJlaW5nIGFza2VkIHdpdGggd2hhdCBwcm9wb3NhbHMgdGhleSBoYWQgY29tZSwgcmVwbGllZCB0aGF0IHRoZXkgaGFkIGZ1bGwgcG93ZXIgdG8gdHJlYXQgZm9yIHBlYWNlLCB0aGUgZXBob3JzIHRoZXJldXBvbiBnYXZlIG9yZGVycyB0byBzdW1tb24gdGhlbSB0byBMYWNlZGFlbW9uLiBXaGVuIHRoZXkgYXJyaXZlZCwgdGhlIGVwaG9ycyBjYWxsZWQgYW4gYXNzZW1ibHksIGF0IHdoaWNoIHRoZSBDb3JpbnRoaWFucyBhbmQgVGhlYmFucyBpbiBwYXJ0aWN1bGFyLCB0aG91Z2ggbWFueSBvdGhlciBHcmVla3MgYWdyZWVkIHdpdGggdGhlbSwgb3Bwb3NlZCBtYWtpbmcgYSB0cmVhdHkgd2l0aCB0aGUgQXRoZW5pYW5zIGFuZCBmYXZvdXJlZCBkZXN0cm95aW5nIHRoZWlyIGNpdHkuCjwvdHJhbnNsYXRpb24+"
translation['2.2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgTGFjZWRhZW1vbmlhbnMsIGhvd2V2ZXIsIHNhaWQgdGhhdCB0aGV5IHdvdWxkIG5vdCBlbnNsYXZlIGEgR3JlZWsgY2l0eSB3aGljaCBoYWQgZG9uZSBncmVhdCBzZXJ2aWNlIGFtaWQgdGhlIGdyZWF0ZXN0IHBlcmlscyB0aGF0IGhhZCBiZWZhbGxlbiBHcmVlY2UsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIHRoZSBQZXJzaWFuIHdhcnMuPC9ub3RlPiBhbmQgdGhleSBvZmZlcmVkIHRvIG1ha2UgcGVhY2Ugb24gdGhlc2UgY29uZGl0aW9uczogdGhhdCB0aGUgQXRoZW5pYW5zIHNob3VsZCBkZXN0cm95IHRoZSBsb25nIHdhbGxzIGFuZCB0aGUgd2FsbHMgb2YgUGlyYWV1cywgc3VycmVuZGVyIGFsbCB0aGVpciBzaGlwcyBleGNlcHQgdHdlbHZlLCBhbGxvdyB0aGVpciBleGlsZXMgdG8gcmV0dXJuLCBjb3VudCB0aGUgc2FtZSBwZW9wbGUgZnJpZW5kcyBhbmQgZW5lbWllcyBhcyB0aGUgTGFjZWRhZW1vbmlhbnMgZGlkLCBhbmQgZm9sbG93IHRoZSBMYWNlZGFlbW9uaWFucyBib3RoIGJ5IGxhbmQgYW5kIGJ5IHNlYSB3aGVyZXZlciB0aGV5IHNob3VsZCBsZWFkIHRoZSB3YXkuCjwvdHJhbnNsYXRpb24+"
translation['2.2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U28gVGhlcmFtZW5lcyBhbmQgaGlzIGZlbGxvdy1hbWJhc3NhZG9ycyBicm91Z2h0IGJhY2sgdGhpcyB3b3JkIHRvIEF0aGVucy4gQW5kIGFzIHRoZXkgd2VyZSBlbnRlcmluZyB0aGUgY2l0eSwgYSBncmVhdCBjcm93ZCBnYXRoZXJlZCBhcm91bmQgdGhlbSwgZmVhcmZ1bCB0aGF0IHRoZXkgaGFkIHJldHVybmVkIHVuc3VjY2Vzc2Z1bDsgZm9yIGl0IHdhcyBubyBsb25nZXIgcG9zc2libGUgdG8gZGVsYXksIG9uIGFjY291bnQgb2YgdGhlIG51bWJlciB3aG8gd2VyZSBkeWluZyBvZiB0aGUgZmFtaW5lLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgbmV4dCBkYXkgdGhlIGFtYmFzc2Fkb3JzIHJlcG9ydGVkIHRvIHRoZSBBc3NlbWJseTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNSI+NDA1IEIuQy48L2RhdGU+PC9ub3RlPiB0aGUgdGVybXMgb24gd2hpY2ggdGhlIExhY2VkYWVtb25pYW5zIG9mZmVyZWQgdG8gbWFrZSBwZWFjZTsgVGhlcmFtZW5lcyBhY3RlZCBhcyBzcG9rZXNtYW4gZm9yIHRoZSBlbWJhc3N5LCBhbmQgdXJnZWQgdGhhdCBpdCB3YXMgYmVzdCB0byBvYmV5IHRoZSBMYWNlZGFlbW9uaWFucyBhbmQgdGVhciBkb3duIHRoZSB3YWxscy4gQW5kIHdoaWxlIHNvbWUgc3Bva2UgaW4gb3Bwb3NpdGlvbiB0byBoaW0sIGEgZmFyIGdyZWF0ZXIgbnVtYmVyIHN1cHBvcnRlZCBoaW0sIGFuZCBpdCB3YXMgdm90ZWQgdG8gYWNjZXB0IHRoZSBwZWFjZS4KPGRhdGUgYXV0aG5hbWU9Ii00MDUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDUiPjQwNSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIEx5c2FuZGVyIHNhaWxlZCBpbnRvIFBpcmFldXMsIHRoZSBleGlsZXMgcmV0dXJuZWQsIGFuZCB0aGUgUGVsb3Bvbm5lc2lhbnMgd2l0aCBncmVhdCBlbnRodXNpYXNtIGJlZ2FuIHRvIHRlYXIgZG93biB0aGUgd2FsbHMgdG8gdGhlIG11c2ljIG9mIGZsdXRlLWdpcmxzLCB0aGlua2luZyB0aGF0IHRoYXQgZGF5IHdhcyB0aGUgYmVnaW5uaW5nIG9mIGZyZWVkb20gZm9yIEdyZWVjZS4KPC90cmFuc2xhdGlvbj4="
translation['2.2.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U28gdGhlIHllYXIgZW5kZWQsIGluIHRoZSBtaWRkbGUgb2Ygd2hpY2ggRGlvbnlzaXVzIG9mIFN5cmFjdXNlLCB0aGUgc29uIG9mIEhlcm1vY3JhdGVzLCBiZWNhbWUgdHlyYW50LCBhZnRlciB0aGUgQ2FydGhhZ2luaWFucyBoYWQgYmVlbiBkZWZlYXRlZCBpbiBiYXR0bGUgYnkgdGhlIFN5cmFjdXNhbnMsIGJ1dCBoYWQgY2FwdHVyZWQgQWNyYWdhcyBieSBmYW1pbmUsIHRoZSBTaWNlbGlvdHMgYWJhbmRvbmluZyB0aGUgY2l0eS4KPC90cmFuc2xhdGlvbj4="
translation['2.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGUgZm9sbG93aW5nIHllYXLigJRpbiB3aGljaCB3YXMgY2VsZWJyYXRlZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNCI+NDA0IEIuQy48L2RhdGU+PC9ub3RlPiBhbiBPbHltcGlhZCwgd2hlcmVpbiBDcm9jaW5hcyB0aGUgVGhlc3NhbGlhbiB3YXMgdmljdG9yaW91cyBpbiB0aGUgc3RhZGl1bSwgRW5kaXVzIGJlaW5nIG5vdyBlcGhvciBhdCBTcGFydGEgYW5kIFB5dGhvZG9ydXMgYXJjaG9uIGF0IEF0aGVucy4gU2luY2UsIGhvd2V2ZXIsIFB5dGhvZG9ydXMgd2FzIGNob3NlbiBkdXJpbmcgdGhlIHRpbWUgb2YgdGhlIG9saWdhcmNoeSwgdGhlIEF0aGVuaWFucyBkbyBub3QgdXNlIGhpcyBuYW1lIHRvIG1hcmsgdGhlIHllYXIsIGJ1dCBjYWxsIGl0IOKAnHRoZSBhcmNob25sZXNzIHllYXIu4oCdIEFuZCB0aGlzIG9saWdhcmNoeSBjYW1lIGludG8gYmVpbmcgaW4gdGhlIHdheSBoZXJlYWZ0ZXIgZGVzY3JpYmVkPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgY3JpdGljYWwgbm90ZSBvbiB0aGUgdGV4dC48L25vdGU+4oCUCiAgICA8L3RyYW5zbGF0aW9uPg=="
translation['2.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPml0IHdhcyB2b3RlZCBieSB0aGUgcGVvcGxlIHRvIGNob29zZSB0aGlydHkgbWVuIHRvIGZyYW1lIHRoZSBhbmNpZW50IGxhd3M8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiwgdGhvc2Ugb2YgQ2xlaXN0aGVuZXMgYW5kIFNvbG9uLCBhcyBjb250cmFzdGVkIHdpdGggdGhlIHJhZGljYWwsIGV4dHJlbWUgZGVtb2NyYWN5IG9mIG1vcmUgcmVjZW50IHRpbWVzLiBDcC4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gQXRoLiBQb2wuIDI5LjE3IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBDb25zdC4gQXRoLiAyOS4xNzwvYmlibD48L25vdGU+IGludG8gYSBjb25zdGl0dXRpb24gdW5kZXIgd2hpY2ggdG8gY29uZHVjdCB0aGUgZ292ZXJubWVudC4gQW5kIHRoZSBmb2xsb3dpbmcgbWVuIHdlcmUgY2hvc2VuOiBQb2x5Y2hhcmVzLCBDcml0aWFzLCBNZWxvYml1cywgSGlwcG9sb2NodXMsIEV1Y2xlaWRlcywgSGllcm9uLCBNbmVzaWxvY2h1cywgQ2hyZW1vbiwgVGhlcmFtZW5lcywgQXJlc2lhcywgRGlvY2xlcywgUGhhZWRyaWFzLCBDaGFlcmVsZW9zLCBBbmFldGl1cywgUGVpc29uLCBTb3Bob2NsZXMsIEVyYXRvc3RoZW5lcywgQ2hhcmljbGVzLCBPbm9tYWNsZXMsPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gQXRoLiBQb2wuIDI5LjE3IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBDb25zdC4gQXRoLiAyOS4xNzwvYmlibD48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvbm90ZT4gVGhlb2duaXMsIEFlc2NoaW5lcywgVGhlb2dlbmVzLCBDbGVvbWVkZXMsIEVyYXNpc3RyYXR1cywgUGhlaWRvbiwgRHJhY29udGlkZXMsIEV1bWF0aGVzLCBBcmlzdG90ZWxlcywgSGlwcG9tYWNodXMsIE1uZXNpdGhlaWRlcy4KPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhpcyBoYWQgYmVlbiBkb25lLCBMeXNhbmRlciBzYWlsZWQgb2ZmIHRvIFNhbW9zLCB3aGlsZSBBZ2lzIHdpdGhkcmV3IHRoZSBsYW5kIGZvcmNlIGZyb20gRGVjZWxlYSBhbmQgZGlzbWlzc2VkIHRoZSBzZXZlcmFsIGNvbnRpbmdlbnRzIHRvIHRoZWlyIGNpdGllcy4KPC90cmFuc2xhdGlvbj4="
translation['2.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3YXMgbmVhciB0aGlzIGRhdGUsIGFuZCBhdCBhYm91dCB0aGUgdGltZSBvZiBhbiBlY2xpcHNlIG9mIHRoZSBzdW4sIHRoYXQgTHljb3Bocm9uIG9mIFBoZXJhZSwgd2hvIHdhbnRlZCB0byBtYWtlIGhpbXNlbGYgcnVsZXIgb2YgYWxsIFRoZXNzYWx5LCBkZWZlYXRlZCBpbiBiYXR0bGUgdGhvc2UgYW1vbmcgdGhlIFRoZXNzYWxpYW5zIHdobyBvcHBvc2VkIGhpbSwgbmFtZWx5IHRoZSBMYXJpc2FlYW5zIGFuZCBvdGhlcnMsIGFuZCBzbGV3IG1hbnkgb2YgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['2.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3YXMgYXQgdGhlIHNhbWUgdGltZSBhbHNvIHRoYXQgRGlvbnlzaXVzLCB0aGUgdHlyYW50IG9mIFN5cmFjdXNlLCB3YXMgZGVmZWF0ZWQgaW4gYmF0dGxlIGJ5IHRoZSBDYXJ0aGFnaW5pYW5zIGFuZCBsb3N0IEdlbGEgYW5kIENhbWFyaW5hLiBTaG9ydGx5IGFmdGVyd2FyZHMgYWxzbyB0aGUgTGVvbnRpbmVzLCB3aG8gaGFkIGJlZW4gZHdlbGxpbmcgYXQgU3lyYWN1c2UsIHJldm9sdGVkIGZyb20gRGlvbnlzaXVzIGFuZCB0aGUgU3lyYWN1c2FucyBhbmQgcmV0dXJuZWQgdG8gdGhlaXIgb3duIGNpdHkuIEFuZCBpbW1lZGlhdGVseSB0aGVyZWFmdGVyIHRoZSBTeXJhY3VzYW4gaG9yc2VtZW4gd2VyZSBkZXNwYXRjaGVkIGJ5IERpb255c2l1cyB0byBDYXRhbmEuCjwvdHJhbnNsYXRpb24+"
translation['2.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFud2hpbGUgdGhlIFNhbWlhbnMgd2VyZSBiZWluZyBiZXNpZWdlZCBieSBMeXNhbmRlciBvbiBldmVyeSBzaWRlLCBhbmQgd2hlbiwgc2VlaW5nIHRoYXQgYXQgZmlyc3QgdGhleSByZWZ1c2VkIHRvIGNvbWUgdG8gdGVybXMsIGhlIHdhcyBvbiB0aGUgcG9pbnQgb2YgbWFraW5nIGFuIGF0dGFjayB1cG9uIHRoZW0sIHRoZXkgY2FtZSB0byBhbiBhZ3JlZW1lbnQgd2l0aCBoaW0gdGhhdCBldmVyeSBmcmVlIHBlcnNvbiBzaG91bGQgZGVwYXJ0IGZyb20gdGhlIGNpdHkgd2l0aCBidXQgb25lIGNsb2FrIGFuZCB0aGF0IGFsbCBlbHNlIHNob3VsZCBiZSBzdXJyZW5kZXJlZDsgYW5kIG9uIHRoZXNlIHRlcm1zIHRoZXkgd2l0aGRyZXcuCjwvdHJhbnNsYXRpb24+"
translation['2.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBMeXNhbmRlciBnYXZlIG92ZXIgdGhlIGNpdHkgYW5kIGV2ZXJ5dGhpbmcgdGhlcmVpbiB0byB0aGUgZm9ybWVyIGNpdGl6ZW5zLCBhbmQgYXBwb2ludGVkIHRlbiBydWxlcnMgdG8gZ3VhcmQgaXQ7IHRoZW4gaGUgZGlzbWlzc2VkIHRoZSBuYXZhbCBjb250aW5nZW50cyBvZiB0aGUgYWxsaWVzIHRvIHRoZWlyIHNldmVyYWw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvbm90ZT4gY2l0aWVzLAo8ZGF0ZSBhdXRobmFtZT0iLTQwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNCI+NDA0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['2.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPmFuZCBoZSBzYWlsZWQgaG9tZSB3aXRoIHRoZSBMYWNvbmlhbiBzaGlwcyB0byBMYWNlZGFlbW9uLCB0YWtpbmcgd2l0aCBoaW0gdGhlIHByb3dzIG9mIHRoZSBjYXB0dXJlZCBzaGlwcywgdGhlIHRyaXJlbWVzIGZyb20gUGlyYWV1cyBleGNlcHQgdHdlbHZlLCB0aGUgY3Jvd25zIHdoaWNoIGhlIGhhZCByZWNlaXZlZCBmcm9tIHRoZSBjaXRpZXMgYXMgZ2lmdHMgdG8gaGltc2VsZiBpbmRpdmlkdWFsbHksIGZvdXIgaHVuZHJlZCBhbmQgc2V2ZW50eSB0YWxlbnRzIGluIG1vbmV5LCBiZWluZyB0aGUgYmFsYW5jZSB0aGF0IHJlbWFpbmVkIG9mIHRoZSB0cmlidXRlIG1vbmV5IHdoaWNoIEN5cnVzIGhhZCBhc3NpZ25lZCB0byBoaW0gZm9yIHRoZSBwcm9zZWN1dGlvbiBvZiB0aGUgd2FyLCBhbmQgd2hhdGV2ZXIgZWxzZSBoZSBoYWQgb2J0YWluZWQgZHVyaW5nIHRoZSBjb3Vyc2Ugb2YgdGhlIHdhci4KPC90cmFuc2xhdGlvbj4="
translation['2.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFsbCB0aGVzZSB0aGluZ3MgaGUgZGVsaXZlcmVkIG92ZXIgdG8gdGhlIExhY2VkYWVtb25pYW5zIGF0IHRoZSBjbG9zZSBvZiB0aGUgc3VtbWVy4oCUd2l0aCB3aGljaCBlbmRlZCB0aGUgdHdlbnR5LWVpZ2h0IHllYXJzIGFuZCBzaXggbW9udGhzIG9mIHRoZSB3YXIsIGR1cmluZyB3aGljaCB5ZWFycyB0aGUgZXBvbnltb3VzIGVwaG9ycyB3ZXJlIHRoZSBmb2xsb3dpbmc6IEFlbmVzaWFzIGZpcnN0LCBpbiB3aG9zZSB0ZXJtIHRoZSB3YXIgYmVnYW4sIGluIHRoZSBmaWZ0ZWVudGggeWVhciBvZiB0aGUgdGhpcnR5IHllYXJzJyB0cnVjZSB3aGljaCBmb2xsb3dlZCB0aGUgY29ucXVlc3Qgb2YgRXVib2VhLCBhbmQgYWZ0ZXIgaGltIHRoZSBmb2xsb3dpbmc6CjwvdHJhbnNsYXRpb24+"
translation['2.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5CcmFzaWRhcywgSXNhbm9yLCBTb3N0cmF0aWRhcywgRXhhcmNodXMsIEFnZXNpc3RyYXR1cywgQW5nZW5pZGFzLCBPbm9tYWNsZXMsIFpldXhpcHB1cywgUGl0eWFzLCBQbGVpc3RvbGFzLCBDbGVpbm9tYWNodXMsIElsYXJjaHVzLCBMZW9uLCBDaGFlcmlsYXMsIFBhdGVzaWFkYXMsIENsZW9zdGhlbmVzLCBMeWNhcml1cywgRXBlcmF0dXMsIE9ub21hbnRpdXMsIEFsZXhpcHBpZGFzLCBNaXNnb2xhaWRhcywgSXNpYXMsIEFyYWN1cywgRXVhcmNoaXBwdXMsIFBhbnRhY2xlcywgUGl0eWFzLCBBcmNoeXRhcywgYW5kIEVuZGl1czsgaXQgd2FzIGluIEVuZGl1cycgdGVybSB0aGF0IEx5c2FuZGVyIHNhaWxlZCBob21lIGFmdGVyIHBlcmZvcm1pbmcgdGhlIGRlZWRzIGFib3ZlIGRlc2NyaWJlZC4KPC90cmFuc2xhdGlvbj4="
translation['2.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGF0IEF0aGVucyB0aGUgVGhpcnR5IGhhZCBiZWVuIGNob3NlbiBhcyBzb29uIGFzIHRoZSBsb25nIHdhbGxzIGFuZCB0aGUgd2FsbHMgcm91bmQgUGlyYWV1cyB3ZXJlIGRlbW9saXNoZWQ7IGFsdGhvdWdoIGNob3NlbiwgaG93ZXZlciwgZm9yIHRoZSBwdXJwb3NlIG9mIGZyYW1pbmcgYSBjb25zdGl0dXRpb24gdW5kZXIgd2hpY2ggdG8gY29uZHVjdCB0aGUgZ292ZXJubWVudCwgdGhleSBjb250aW51YWxseSBkZWxheWVkIGZyYW1pbmcgYW5kIHB1Ymxpc2hpbmcgdGhpcyBjb25zdGl0dXRpb24sIGJ1dCB0aGV5IGFwcG9pbnRlZCBhIFNlbmF0ZSBhbmQgdGhlIG90aGVyIG1hZ2lzdHJhdGVzIGFzIHRoZXkgc2F3IGZpdC4KPC90cmFuc2xhdGlvbj4="
translation['2.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuLCBhcyBhIGZpcnN0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA0Ij40MDQgQi5DLjwvZGF0ZT48L25vdGU+IHN0ZXAsIHRoZXkgYXJyZXN0ZWQgYW5kIGJyb3VnaHQgdG8gdHJpYWwgZm9yIHRoZWlyIGxpdmVzIHRob3NlIHBlcnNvbnMgd2hvLCBieSBjb21tb24ga25vd2xlZGdlLCBoYWQgbWFkZSBhIGxpdmluZyBpbiB0aGUgdGltZSBvZiB0aGUgZGVtb2NyYWN5IGJ5IGFjdGluZyBhcyBpbmZvcm1lcnMgYW5kIGhhZCBiZWVuIG9mZmVuc2l2ZSB0byB0aGUgYXJpc3RvY3JhdHM7IGFuZCB0aGUgU2VuYXRlIHdhcyBnbGFkIHRvIHByb25vdW5jZSB0aGVzZSBwZW9wbGUgZ3VpbHR5LCBhbmQgdGhlIHJlc3Qgb2YgdGhlIGNpdGl6ZW5z4oCUYXQgbGVhc3QgYWxsIHdobyB3ZXJlIGNvbnNjaW91cyB0aGF0IHRoZXkgd2VyZSBub3Qgb2YgdGhlIHNhbWUgc29ydCB0aGVtc2VsdmVz4oCUd2VyZSBub3QgYXQgYWxsIGRpc3BsZWFzZWQuCjxkYXRlIGF1dGhuYW1lPSItNDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA0Ij40MDQgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['2.3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBob3dldmVyLCB0aGUgVGhpcnR5IGJlZ2FuIHRvIGNvbnNpZGVyIGhvdyB0aGV5IG1pZ2h0IGJlY29tZSBmcmVlIHRvIGRvIGp1c3QgYXMgdGhleSBwbGVhc2VkIHdpdGggdGhlIHN0YXRlLCB0aGVpciBmaXJzdCBhY3Qgd2FzIHRvIHNlbmQgQWVzY2hpbmVzIGFuZCBBcmlzdG90ZWxlcyB0byBMYWNlZGFlbW9uIGFuZCBwZXJzdWFkZSBMeXNhbmRlciB0byBoZWxwIHRoZW0gdG8gc2VjdXJlIHRoZSBzZW5kaW5nIG9mIGEgTGFjZWRhZW1vbmlhbiBnYXJyaXNvbiwgdG8gcmVtYWluIHVudGlsLCBhcyB0aGV5IHNhaWQsIHRoZXkgY291bGQgcHV0IOKAnHRoZSBzY291bmRyZWxz4oCdIG91dCBvZiB0aGUgd2F5IGFuZCBlc3RhYmxpc2ggdGhlaXIgZ292ZXJubWVudDsgYW5kIHRoZXkgcHJvbWlzZWQgdG8gbWFpbnRhaW4gdGhpcyBnYXJyaXNvbiBhdCB0aGVpciBvd24gY2hhcmdlcy4KPC90cmFuc2xhdGlvbj4="
translation['2.3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5MeXNhbmRlciBjb25zZW50ZWQsIGFuZCBoZWxwZWQgdGhlbSB0byBzZWN1cmUgdGhlIGRpc3BhdGNoIG9mIHRoZSB0cm9vcHMgYW5kIG9mIENhbGxpYml1cyBhcyBnb3Zlcm5vci4gQnV0IHdoZW4gdGhleSBoYWQgZ290IHRoZSBnYXJyaXNvbiwgdGhleSBwYWlkIGNvdXJ0IHRvIENhbGxpYml1cyBpbiBldmVyeSB3YXksIGluIG9yZGVyIHRoYXQgaGUgbWlnaHQgYXBwcm92ZSBvZiBldmVyeXRoaW5nIHRoZXkgZGlkLCBhbmQgYXMgaGUgZGV0YWlsZWQgZ3VhcmRzbWVuIHRvIGdvIHdpdGggdGhlbSwgdGhleSBhcnJlc3RlZCB0aGUgcGVvcGxlIHdob20gdGhleSB3aXNoZWQgdG8gcmVhY2gs4oCUbm90IG5vdyDigJx0aGUgc2NvdW5kcmVsc+KAnSBhbmQgcGVyc29ucyBvZiBsaXR0bGUgYWNjb3VudCwgYnV0IGZyb20gdGhpcyB0aW1lIGZvcnRoIHRoZSBtZW4gd2hvLCB0aGV5IHRob3VnaHQsIHdlcmUgbGVhc3QgbGlrZWx5IHRvIHN1Ym1pdCB0byBiZWluZyBpZ25vcmVkLCBhbmQgd2hvLCBpZiB0aGV5IHVuZGVydG9vayB0byBvZmZlciBhbnkgb3Bwb3NpdGlvbiwgd291bGQgb2J0YWluIHN1cHBvcnRlcnMgaW4gdGhlIGdyZWF0ZXN0IG51bWJlcnMuCjwvdHJhbnNsYXRpb24+"
translation['2.3.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGluIHRoZSBiZWdpbm5pbmcgQ3JpdGlhcyBhbmQgVGhlcmFtZW5lcyB3ZXJlIGFncmVlZCBpbiB0aGVpciBwb2xpY3kgYW5kIGZyaWVuZGx5OyBidXQgd2hlbiBDcml0aWFzIHNob3dlZCBoaW1zZWxmIGVhZ2VyIHRvIHB1dCBtYW55IHRvIGRlYXRoLCBiZWNhdXNlLCBmb3Igb25lIHRoaW5nLCBoZSBoYWQgYmVlbiBiYW5pc2hlZCBieSB0aGUgZGVtb2NyYWN5LCBUaGVyYW1lbmVzIG9wcG9zZWQgaGltLCBzYXlpbmcgdGhhdCBpdDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNCI+NDA0IEIuQy48L2RhdGU+PC9ub3RlPiB3YXMgbm90IHJlYXNvbmFibGUgdG8gcHV0IGEgbWFuIHRvIGRlYXRoIGJlY2F1c2UgaGUgd2FzIGhvbm91cmVkIGJ5IHRoZSBjb21tb25zLCBwcm92aWRlZCBoZSB3YXMgZG9pbmcgbm8gaGFybSB0byB0aGUgYXJpc3RvY3JhdHMuIOKAnEZvcizigJ0gc2FpZCBoZSwg4oCceW91IGFuZCBJIGFsc28gaGF2ZSBzYWlkIGFuZCBkb25lIG1hbnkgdGhpbmdzIGZvciB0aGUgc2FrZSBvZiB3aW5uaW5nIHRoZSBmYXZvdXIgb2YgdGhlIGNpdHku4oCdCjxkYXRlIGF1dGhuYW1lPSItNDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA0Ij40MDQgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['2.3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIENyaXRpYXMgKGZvciBoZSBzdGlsbCB0cmVhdGVkIFRoZXJhbWVuZXMgYXMgYSBmcmllbmQpIHJlcGxpZWQgdGhhdCBpdCB3YXMgaW1wb3NzaWJsZSBmb3IgcGVvcGxlIHdobyB3YW50ZWQgdG8gZ2FpbiBwb3dlciBub3QgdG8gcHV0IG91dCBvZiB0aGUgd2F5IHRob3NlIHdobyB3ZXJlIGJlc3QgYWJsZSB0byB0aHdhcnQgdGhlbS4g4oCcQnV0IGlmLOKAnSBoZSBzYWlkLCDigJxtZXJlbHkgYmVjYXVzZSB3ZSBhcmUgdGhpcnR5IGFuZCBub3Qgb25lLCB5b3UgaW1hZ2luZSB0aGF0IGl0IGlzIGFueSB0aGUgbGVzcyBuZWNlc3NhcnkgZm9yIHVzIHRvIGtlZXAgYSBjbG9zZSB3YXRjaCBvdmVyIHRoaXMgZ292ZXJubWVudCwganVzdCBhcyBvbmUgd291bGQgaWYgaXQgd2VyZSBhbiBhYnNvbHV0ZSBtb25hcmNoeSwgeW91IGFyZSBmb29saXNoLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiwgb24gYWNjb3VudCBvZiB0aGUgZ3JlYXQgbnVtYmVycyBjb250aW51YWxseeKAlGFuZCB1bmp1c3RseeKAlHB1dCB0byBkZWF0aCwgaXQgd2FzIGV2aWRlbnQgdGhhdCBtYW55IHdlcmUgYmFuZGluZyB0b2dldGhlciBhbmQgd29uZGVyaW5nIHdoYXQgdGhlIHN0YXRlIHdhcyBjb21pbmcgdG8sIFRoZXJhbWVuZXMgc3Bva2UgYWdhaW4sIHNheWluZyB0aGF0IHVubGVzcyB0aGV5IGFkbWl0dGVkIGFuIGFkZXF1YXRlIG51bWJlciBvZiBjaXRpemVucyBpbnRvIHBhcnRuZXJzaGlwIHdpdGggdGhlbSBpbiB0aGUgbWFuYWdlbWVudCBvZiBhZmZhaXJzLCBpdCB3b3VsZCBiZSBpbXBvc3NpYmxlIGZvciB0aGUgb2xpZ2FyY2h5IHRvIGVuZHVyZS4KPC90cmFuc2xhdGlvbj4="
translation['2.3.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSBDcml0aWFzIGFuZCB0aGUgcmVzdCBvZiB0aGUgVGhpcnR5LCB3aG8gd2VyZSBieSB0aGlzIHRpbWUgYWxhcm1lZCBhbmQgZmVhcmVkIGFib3ZlIGFsbCB0aGF0IHRoZSBjaXRpemVucyB3b3VsZCBmbG9jayB0byB0aGUgc3VwcG9ydCBvZiBUaGVyYW1lbmVzLCBlbnJvbGxlZCBhIGJvZHkgb2YgdGhyZWUgdGhvdXNhbmQsIHdobyB3ZXJlIHRvIHNoYXJlLCBhcyB0aGV5IHNhaWQsIGluIHRoZSBnb3Zlcm5tZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyYW1lbmVzLCBob3dldmVyLCBvYmplY3RlZCB0byB0aGlzIG1vdmUgYWxzbywgc2F5aW5nIHRoYXQsIGluIHRoZSBmaXJzdCBwbGFjZSwgaXQgc2VlbWVkIHRvIGhpbSBhYnN1cmQgdGhhdCwgd2hlbiB0aGV5IHdhbnRlZCB0byBtYWtlIHRoZSBiZXN0IG9mIHRoZSBjaXRpemVucyB0aGVpciBhc3NvY2lhdGVzLCB0aGV5IHNob3VsZCBsaW1pdCB0aGVtc2VsdmVzIHRvIHRocmVlIHRob3VzYW5kLCBhcyB0aG91Z2ggdGhpcyBudW1iZXIgbXVzdCBzb21laG93IGJlIGdvb2QgbWVuIGFuZCB0cnVlIGFuZCB0aGVyZSBjb3VsZCBuZWl0aGVyIGJlIGV4Y2VsbGVudCBtZW4gb3V0c2lkZSB0aGlzIGJvZHkgbm9yIHJhc2NhbHMgd2l0aGluPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA0Ij40MDQgQi5DLjwvZGF0ZT48L25vdGU+IGl0LiDigJxCZXNpZGVzLOKAnSBoZSBzYWlkLCDigJx3ZSBhcmUgdW5kZXJ0YWtpbmcsIGluIG15IG9waW5pb24sIHR3byBhYnNvbHV0ZWx5IGluY29uc2lzdGVudCB0aGluZ3Ms4oCUdG8gcmlnIHVwIG91ciBnb3Zlcm5tZW50IG9uIHRoZSBiYXNpcyBvZiBmb3JjZSBhbmQgYXQgdGhlIHNhbWUgdGltZSB0byBtYWtlIGl0IHdlYWtlciB0aGFuIGl0cyBzdWJqZWN0cy7igJ0KPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.3.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhpcyB3YXMgd2hhdCBUaGVyYW1lbmVzIHNhaWQuIEFzIGZvciB0aGUgVGhpcnR5LCB0aGV5IGhlbGQgYSByZXZpZXcsIHRoZSBUaHJlZSBUaG91c2FuZCBhc3NlbWJsaW5nIGluIHRoZSBtYXJrZXQtcGxhY2UgYW5kIHRob3NlIHdobyB3ZXJlIG5vdCBvbiDigJx0aGUgcm9sbOKAnSBpbiB2YXJpb3VzIHBsYWNlcyBoZXJlIGFuZCB0aGVyZTsgdGhlbiB0aGV5IGdhdmUgdGhlIG9yZGVyIHRvIHBpbGUgYXJtcywgYW5kIHdoaWxlIHRoZSBtZW4gd2VyZSBvZmYgZHV0eSBhbmQgYXdheSwgdGhleSBzZW50IHRoZWlyIExhY2VkYWVtb25pYW4gZ3VhcmRzbWVuIGFuZCBzdWNoIGNpdGl6ZW5zIGFzIHdlcmUgaW4gc3ltcGF0aHkgd2l0aCB0aGVtLCBzZWl6ZWQgdGhlIGFybXMgb2YgYWxsIGV4Y2VwdCB0aGUgVGhyZWUgVGhvdXNhbmQsIGNhcnJpZWQgdGhlbSB1cCB0byB0aGUgQWNyb3BvbGlzLCBhbmQgZGVwb3NpdGVkIHRoZW0gaW4gdGhlIHRlbXBsZS4KPC90cmFuc2xhdGlvbj4="
translation['2.3.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm93LCB3aGVuIHRoaXMgaGFkIGJlZW4gYWNjb21wbGlzaGVkLCB0aGlua2luZyB0aGF0IHRoZXkgd2VyZSBhdCBsZW5ndGggZnJlZSB0byBkbyB3aGF0ZXZlciB0aGV5IHBsZWFzZWQsIHRoZXkgcHV0IG1hbnkgcGVvcGxlIHRvIGRlYXRoIG91dCBvZiBwZXJzb25hbCBlbm1pdHksIGFuZCBtYW55IGFsc28gZm9yIHRoZSBzYWtlIG9mIHNlY3VyaW5nIHRoZWlyIHByb3BlcnR5LiBPbmUgbWVhc3VyZSB0aGF0IHRoZXkgcmVzb2x2ZWQgdXBvbiwgaW4gb3JkZXIgdG8gZ2V0IG1vbmV5IHRvIHBheSB0aGVpciBndWFyZHNtZW4sIHdhcyB0aGF0IGVhY2ggb2YgdGhlaXIgbnVtYmVyIHNob3VsZCBzZWl6ZSBvbmUgb2YgdGhlIGFsaWVucyByZXNpZGluZyBpbiB0aGUgY2l0eSwgYW5kIHRoYXQgdGhleSBzaG91bGQgcHV0IHRoZXNlIG1lbiB0byBkZWF0aCBhbmQgY29uZmlzY2F0ZSB0aGVpciBwcm9wZXJ0eS4KPC90cmFuc2xhdGlvbj4="
translation['2.3.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGV5IGJhZGUgVGhlcmFtZW5lcyBhbHNvIHRvIHNlaXplIGFueW9uZSBoZSBwbGVhc2VkOyBhbmQgaGUgcmVwbGllZDog4oCcQnV0IGl0IGlzIG5vdCBob25vdXJhYmxlLCBhcyBpdCBzZWVtcyB0byBtZSzigJ0gaGUgc2FpZCwg4oCcZm9yIHBlb3BsZSB3aG8gc3R5bGUgdGhlbXNlbHZlcyB0aGUgYmVzdCBjaXRpemVucyB0byBjb21taXQgYWN0cyBvZiBncmVhdGVyIGluanVzdGljZSB0aGFuIHRoZSBpbmZvcm1lcnMgdXNlZCB0byBkby4gRm9yIHRoZXkgYWxsb3dlZCB0aG9zZSBmcm9tIHdob20gdGhleSBnb3QgbW9uZXksIHRvIGxpdmU7IGJ1dCBzaGFsbCB3ZSwgaW4gb3JkZXIgdG8gZ2V0IG1vbmV5LCBwdXQgdG8gZGVhdGggbWVuIHdobyBhcmUgZ3VpbHR5IG9mIG5vIHdyb25nLWRvaW5nPyBBcmUgbm90IHN1Y2ggYWN0cyBhbHRvZ2V0aGVyIG1vcmUgdW5qdXN0IHRoYW4gdGhlaXJzIHdlcmU/4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.3.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZSBUaGlydHksIHRoaW5raW5nIHRoYXQgVGhlcmFtZW5lcyB3YXMgYW4gb2JzdGFjbGUgdG8gdGhlaXIgZG9pbmcgd2hhdGV2ZXIgdGhleSBwbGVhc2VkLCBwbG90dGVkIGFnYWluc3Q8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvbm90ZT4gaGltLCBhbmQga2VwdCBhY2N1c2luZyBoaW0gdG8gaW5kaXZpZHVhbCBzZW5hdG9ycywgb25lIHRvIG9uZSBtYW4gYW5kIGFub3RoZXIgdG8gYW5vdGhlciwgb2YgaW5qdXJpbmcgdGhlIGdvdmVybm1lbnQuIEFuZCBhZnRlciBwYXNzaW5nIHRoZSB3b3JkIHRvIHNvbWUgeW91bmcgbWVuLCB3aG8gc2VlbWVkIHRvIHRoZW0gbW9zdCBhdWRhY2lvdXMsIHRvIGJlIGluIGF0dGVuZGFuY2Ugd2l0aCBkYWdnZXJzIGhpZGRlbiB1bmRlciB0aGVpciBhcm1zLCB0aGV5IGNvbnZlbmVkIHRoZSBTZW5hdGUuCjxkYXRlIGF1dGhuYW1lPSItNDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA0Ij40MDQgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['2.3.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHdoZW4gVGhlcmFtZW5lcyBhcnJpdmVkLCBDcml0aWFzIGFyb3NlIGFuZCBzcG9rZSBhcyBmb2xsb3dzOjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxHZW50bGVtZW4gb2YgdGhlIFNlbmF0ZSwgaWYgYW55b25lIGFtb25nIHlvdSB0aGlua3MgdGhhdCBtb3JlIHBlb3BsZSB0aGFuIGlzIGZpdHRpbmcgYXJlIGJlaW5nIHB1dCB0byBkZWF0aCwgbGV0IGhpbSByZWZsZWN0IHRoYXQgd2hlcmUgZ292ZXJubWVudHMgYXJlIGNoYW5nZWQgdGhlc2UgdGhpbmdzIGFsd2F5cyB0YWtlIHBsYWNlOyBhbmQgaXQgaXMgaW5ldml0YWJsZSB0aGF0IHRob3NlIHdobyBhcmUgY2hhbmdpbmcgdGhlIGdvdmVybm1lbnQgaGVyZSB0byBhbiBvbGlnYXJjaHkgc2hvdWxkIGhhdmUgbW9zdCBudW1lcm91cyBlbmVtaWVzLCBib3RoIGJlY2F1c2UgdGhlIHN0YXRlIGlzIHRoZSBtb3N0IHBvcHVsb3VzIG9mIHRoZSBHcmVlayBzdGF0ZXMgYW5kIGJlY2F1c2UgdGhlIGNvbW1vbnMgaGF2ZSBiZWVuIGJyZWQgdXAgaW4gYSBjb25kaXRpb24gb2YgZnJlZWRvbSBmb3IgdGhlIGxvbmdlc3QgdGltZS4KPC90cmFuc2xhdGlvbj4="
translation['2.3.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2UsIGJlbGlldmluZyB0aGF0IGZvciBtZW4gbGlrZSBvdXJzZWx2ZXMgYW5kIHlvdSBkZW1vY3JhY3kgaXMgYSBncmlldm91cyBmb3JtIG9mIGdvdmVybm1lbnQsIGFuZCBjb252aW5jZWQgdGhhdCB0aGUgY29tbW9ucyB3b3VsZCBuZXZlciBiZWNvbWUgZnJpZW5kbHkgdG8gdGhlIExhY2VkYWVtb25pYW5zLCBvdXIgcHJlc2VydmVycywgd2hpbGUgdGhlIGFyaXN0b2NyYXRzIHdvdWxkIGNvbnRpbnVlIGV2ZXIgZmFpdGhmdWwgdG8gdGhlbSwgZm9yIHRoZXNlIHJlYXNvbnMgYXJlIGVzdGFibGlzaGluZywgd2l0aCB0aGUgYXBwcm92YWwgb2YgdGhlIExhY2VkYWVtb25pYW5zLCB0aGUgcHJlc2VudCBmb3JtIG9mIGdvdmVybm1lbnQuCjwvdHJhbnNsYXRpb24+"
translation['2.3.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaWYgd2UgZmluZCBhbnlvbmUgb3Bwb3NlZCB0byB0aGUgb2xpZ2FyY2h5LCBzbyBmYXIgYXMgd2UgaGF2ZSB0aGUgcG93ZXIgd2UgcHV0IGhpbSBvdXQgb2YgdGhlIHdheTsgYnV0IGluIHBhcnRpY3VsYXIgd2UgY29uc2lkZXIgaXQgdG8gYmUgcmlnaHQgdGhhdCwgaWYgYW55IG9uZSBvZiBvdXIgb3duIG51bWJlciBpcyBoYXJtaW5nIHRoaXMgb3JkZXIgb2YgdGhpbmdzLCBoZSBzaG91bGQgYmUgcHVuaXNoZWQuCjwvdHJhbnNsYXRpb24+"
translation['2.3.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IGluIGZhY3Qgd2UgZmluZCB0aGlzIG1hbiBUaGVyYW1lbmVzIHRyeWluZywgYnkgd2hhdCBtZWFucyBoZSBjYW4sIHRvIGRlc3Ryb3kgYm90aCBvdXJzZWx2ZXMgYW5kIHlvdS4gQXMgcHJvb2YgdGhhdCB0aGlzIGlzIHRydWUgeW91IHdpbGwgZGlzY292ZXIsIGlmIHlvdSBjb25zaWRlciB0aGUgbWF0dGVyLCB0aGF0IG5vIG9uZSBmaW5kcyBtb3JlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA0Ij40MDQgQi5DLjwvZGF0ZT48L25vdGU+IGZhdWx0IHdpdGggdGhlIHByZXNlbnQgcHJvY2VlZGluZ3MgdGhhbiBUaGVyYW1lbmVzIGhlcmUsIG9yIG9mZmVycyBtb3JlIG9wcG9zaXRpb24gd2hlbiB3ZSB3aXNoIHRvIHB1dCBzb21lIGRlbWFnb2d1ZSBvdXQgb2YgdGhlIHdheS4gTm93IGlmIGhlIGhhZCBoZWxkIHRoZXNlIHZpZXdzIGZyb20gdGhlIGJlZ2lubmluZywgaGUgd2FzLCB0byBiZSBzdXJlLCBhbiBlbmVteSwgYnV0IG5ldmVydGhlbGVzcyBoZSB3b3VsZCBub3QganVzdGx5IGJlIGRlZW1lZCBhIHNjb3VuZHJlbC4KPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.3.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5JbiBmYWN0LCBob3dldmVyLCBoZSB3YXMgdGhlIHZlcnkgbWFuIHdobyB0b29rIHRoZSBpbml0aWF0aXZlIGluIHRoZSBwb2xpY3kgb2YgZXN0YWJsaXNoaW5nIGEgY29yZGlhbCB1bmRlcnN0YW5kaW5nIHdpdGggdGhlIExhY2VkYWVtb25pYW5zOyBoZSB3YXMgdGhlIHZlcnkgbWFuIHdobyBiZWdhbiB0aGUgb3ZlcnRocm93IG9mIHRoZSBkZW1vY3JhY3ksIGFuZCB3aG8gdXJnZWQgeW91IG1vc3QgdG8gaW5mbGljdCBwdW5pc2htZW50IHVwb24gdGhvc2Ugd2hvIHdlcmUgZmlyc3QgYnJvdWdodCBiZWZvcmUgeW91IGZvciB0cmlhbDsgYnV0IG5vdywgd2hlbiB5b3UgYW5kIHdlIGhhdmUgbWFuaWZlc3RseSBiZWNvbWUgaGF0ZWZ1bCB0byB0aGUgZGVtb2NyYXRzLCBoZSBubyBsb25nZXIgYXBwcm92ZXMgb2Ygd2hhdCBpcyBnb2luZyBvbizigJRqdXN0IHNvIHRoYXQgaGUgbWF5IGdldCBvbiB0aGUgc2FmZSBzaWRlIGFnYWluLCBhbmQgdGhhdCB3ZSBtYXkgYmUgcHVuaXNoZWQgZm9yIHdoYXQgaGFzIGJlZW4gZG9uZS4KPC90cmFuc2xhdGlvbj4="
translation['2.3.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUgaGUgb3VnaHQgdG8gYmUgcHVuaXNoZWQsIG5vdCBtZXJlbHkgYXMgYW4gZW5lbXksIGJ1dCBhbHNvIGFzIGEgdHJhaXRvciBib3RoIHRvIHlvdSBhbmQgdG8gb3Vyc2VsdmVzLiBBbmQgdHJlYXNvbiBpcyBhIGZhciBtb3JlIGRyZWFkZnVsIHRoaW5nIHRoYW4gd2FyLCBpbmFzbXVjaCBhcyBpdCBpcyBoYXJkZXIgdG8gdGFrZSBwcmVjYXV0aW9uIGFnYWluc3QgdGhlIGhpZGRlbiB0aGFuIGFnYWluc3QgdGhlIG9wZW4gZGFuZ2VyLCBhbmQgYSBmYXIgbW9yZSBoYXRlZnVsIHRoaW5nLCBpbmFzbXVjaCBhcyBtZW4gbWFrZSBwZWFjZSB3aXRoIGVuZW1pZXMgYW5kIGJlY29tZSB0aGVpciB0cnVzdGZ1bCBmcmllbmRzIGFnYWluLCBidXQgaWYgdGhleSBjYXRjaCBhIG1hbiBwbGF5aW5nIHRoZSB0cmFpdG9yLCB0aGV5IG5ldmVyIGluIGFueSBjYXNlIG1ha2UgcGVhY2Ugd2l0aCB0aGF0IG1hbiBvciB0cnVzdCBoaW0gdGhlcmVhZnRlci4KPC90cmFuc2xhdGlvbj4="
translation['2.3.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IHRvIGxldCB5b3Uga25vdyB0aGF0IHRoaXMgbWFuJ3MgcHJlc2VudCBkb2luZ3MgYXJlIG5vdGhpbmcgbmV3LCBidXQgdGhhdCBoZSBpcywgcmF0aGVyLCBhIHRyYWl0b3IgYnkgbmF0dXJlLCBJIHdpbGwgcmVjYWxsIHRvIHlvdSBoaXMgcGFzdCBkZWVkcy4gVGhpcyBtYW4gaW4gdGhlIGJlZ2lubmluZywgYWx0aG91Z2ggaGUgaGFkIHJlY2VpdmVkIGhvbm91cnMgYXQgdGhlIGhhbmRzIG9mIHRoZSBkZW1vY3JhY3ksIHdhcyBleHRyZW1lbHkgZWFnZXIsIGxpa2UgaGlzIGZhdGhlciBIYWdub24sIHRvIGNoYW5nZSB0aGUgZGVtb2NyYWN5IGludG8gdGhlIG9saWdhcmNoeSBvZiB0aGUgRm91ciBIdW5kcmVkLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgbm90ZSBvbiBJLiB2aWkuIDI4Ljwvbm90ZT4gYW5kIGhlIHdhcyBhIGxlYWRlciBpbiB0aGF0IGdvdmVybm1lbnQuIFdoZW4sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA0Ij40MDQgQi5DLjwvZGF0ZT48L25vdGU+IGhvd2V2ZXIsIGhlIHBlcmNlaXZlZCB0aGF0IHNvbWUgb3Bwb3NpdGlvbiB0byB0aGUgb2xpZ2FyY2h5IHdhcyBnYXRoZXJpbmcsIGhlIGxvb2sgdGhlIGxlYWQgYWdhaW7igJRhcyBjaGFtcGlvbiBvZiB0aGUgZGVtb2NyYXRzIGFnYWluc3QgdGhlIG9saWdhcmNocyEgVGhhdCBpcyB0aGUgcmVhc29uLCB5b3Uga25vdywgd2h5IGhlIGlzIG5pY2tuYW1lZCBgQnVza2luJzoKPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.3.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5mb3IgYXMgdGhlIGJ1c2tpbiBzZWVtcyB0byBmaXQgYm90aCBmZWV0LCBzbyBoZSBmYWNlcyBib3RoIHdheXMuIEJ1dCwgVGhlcmFtZW5lcywgdGhlIG1hbiB3aG8gZGVzZXJ2ZXMgdG8gbGl2ZSBvdWdodCBub3QgdG8gYmUgY2xldmVyIGF0IGxlYWRpbmcgaGlzIGNvbXJhZGVzIGludG8gZGFuZ2Vyb3VzIHVuZGVydGFraW5ncyBhbmQgdGhlbiwgaWYgYW55IGhpbmRyYW5jZSBvZmZlcnMgaXRzZWxmLCB0byB0dXJuIGFyb3VuZCBvbiB0aGUgaW5zdGFudCwgYnV0IGhlIG91Z2h0LCBhcyBvbmUgb24gc2hpcGJvYXJkLCB0byBob2xkIHRvIGhpcyB0YXNrIHVudGlsIHRoZXkgY29tZSBpbnRvIGEgZmFpciBicmVlemUuIE90aGVyd2lzZSwgaG93IGluIHRoZSB3b3JsZCB3b3VsZCBzYWlsb3JzIHJlYWNoIHRoZSBwb3J0IGZvciB3aGljaCB0aGV5IGFyZSBib3VuZCwgaWYgdGhleSBzaG91bGQgc2FpbCBpbiB0aGUgb3Bwb3NpdGUgZGlyZWN0aW9uIHRoZSBtb21lbnQgYW55IGhpbmRyYW5jZSBvZmZlcmVkIGl0c2VsZj8KPC90cmFuc2xhdGlvbj4="
translation['2.3.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyB0cnVlLCBvZiBjb3Vyc2UsIHRoYXQgYWxsIHNvcnRzIG9mIGNoYW5nZXMgaW4gZ292ZXJubWVudCBhcmUgYXR0ZW5kZWQgYnkgbG9zcyBvZiBsaWZlLCBidXQgeW91LCB0aGFua3MgdG8geW91ciBjaGFuZ2luZyBzaWRlcyBzbyBlYXNpbHksIHNoYXJlIHRoZSByZXNwb25zaWJpbGl0eSwgbm90IG1lcmVseSBmb3IgdGhlIHNsYXVnaHRlciBvZiBhIGxhcmdlIG51bWJlciBvZiBvbGlnYXJjaHMgYnkgdGhlIGNvbW1vbnMsIGJ1dCBhbHNvIGZvciB0aGUgc2xhdWdodGVyIG9mIGEgbGFyZ2UgbnVtYmVyIG9mIGRlbW9jcmF0cyBieSB0aGUgYXJpc3RvY3JhY3kuIEFuZCB0aGlzIFRoZXJhbWVuZXMsIHlvdSByZW1lbWJlciwgd2FzIHRoZSBtYW4gd2hvLCBhbHRob3VnaCBkZXRhaWxlZCBieSB0aGUgZ2VuZXJhbHMgdG8gcGljayB1cCB0aGUgQXRoZW5pYW5zIHdob3NlIHNoaXBzIHdlcmUgZGlzYWJsZWQgaW4gdGhlIGJhdHRsZSBvZmYgTGVzYm9zLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgSS4gdmkuIDM1LCB2aWkuIDQgZmYuPC9ub3RlPiBmYWlsZWQgdG8gZG8gc28sIGFuZCBuZXZlcnRoZWxlc3Mgd2FzIHRoZSB2ZXJ5IG9uZSB3aG8gYWNjdXNlZCB0aGUgZ2VuZXJhbHMgYW5kIGJyb3VnaHQgYWJvdXQgdGhlaXIgZGVhdGggaW4gb3JkZXIgdGhhdCBoZSBtaWdodCBzYXZlIGhpcyBvd24gbGlmZSEKPC90cmFuc2xhdGlvbj4="
translation['2.3.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IHdoZW4gYSBtYW4gY2xlYXJseSBzaG93cyB0aGF0IGhlIGlzIGFsd2F5cyBsb29raW5nIG91dCBmb3IgaGlzIG93biBhZHZhbnRhZ2UgYW5kIHRha2luZyBubyB0aG91Z2h0IGZvciBob25vdXIgb3IgaGlzIGZyaWVuZHMsIGhvdyBpbiB0aGUgd29ybGQgY2FuIGl0IGJlIHJpZ2h0IHRvIHNwYXJlIGhpbT8gT3VnaHQgd2Ugbm90IHN1cmVseSwga25vd2luZyBvZiBoaXMgcHJldmlvdXMgY2hhbmdlcywgdG8gdGFrZSBjYXJlIHRoYXQgaGUgc2hhbGwgbm90IGJlIGFibGUgdG8gZG8gdGhlIHNhbWUgdGhpbmcgdG8gdXMgYWxzbz88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvbm90ZT4gV2UgdGhlcmVmb3JlIGFycmFpZ24gaGltIG9uIHRoZSBjaGFyZ2Ugb2YgcGxvdHRpbmcgYWdhaW5zdCBhbmQgYmV0cmF5aW5nIGJvdGggb3Vyc2VsdmVzIGFuZCB5b3UuIEFuZCBpbiBwcm9vZiB0aGF0IHdoYXQgd2UgYXJlIHRodXMgZG9pbmcgaXMgcHJvcGVyLCBjb25zaWRlciB0aGlzIGZhY3QgYWxzby4KPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.3.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgY29uc3RpdHV0aW9uIG9mIHRoZSBMYWNlZGFlbW9uaWFucyBpcywgd2Uga25vdywgZGVlbWVkIHRoZSBiZXN0IG9mIGFsbCBjb25zdGl0dXRpb25zLiBOb3cgaW4gTGFjZWRhZW1vbiBpZiBvbmUgb2YgdGhlIGVwaG9ycyBzaG91bGQgdW5kZXJ0YWtlIHRvIGZpbmQgZmF1bHQgd2l0aCB0aGUgZ292ZXJubWVudCBhbmQgdG8gb3Bwb3NlIHdoYXQgd2FzIGJlaW5nIGRvbmUgaW5zdGVhZCBvZiB5aWVsZGluZyB0byB0aGUgbWFqb3JpdHksIGRvIHlvdSBub3Qgc3VwcG9zZSB0aGF0IGhlIHdvdWxkIGJlIHJlZ2FyZGVkLCBub3Qgb25seSBieSB0aGUgZXBob3JzIHRoZW1zZWx2ZXMgYnV0IGFsc28gYnkgYWxsIHRoZSByZXN0IG9mIHRoZSBzdGF0ZSwgYXMgaGF2aW5nIG1lcml0ZWQgdGhlIHNldmVyZXN0IHB1bmlzaG1lbnQ/IEV2ZW4gc28geW91LCBpZiB5b3UgYXJlIHdpc2UsIHdpbGwgbm90IHNwYXJlIHRoaXMgVGhlcmFtZW5lcywgYnV0IHJhdGhlciB5b3Vyc2VsdmVzOyBmb3IgdG8gbGVhdmUgaGltIGFsaXZlIHdvdWxkIGNhdXNlIG1hbnkgb2YgdGhvc2Ugd2hvIGhvbGQgb3Bwb3NpdGUgdmlld3MgdG8geW91cnMgdG8gY2hlcmlzaCBoaWdoIHRob3VnaHRzLCB3aGlsZSB0byBkZXN0cm95IGhpbSB3b3VsZCBjdXQgb2ZmIHRoZSBob3BlcyBvZiB0aGVtIGFsbCwgYm90aCB3aXRoaW4gYW5kIHdpdGhvdXQgdGhlIGNpdHku4oCdCjwvdHJhbnNsYXRpb24+"
translation['2.3.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBDcml0aWFzIGhhZCBzbyBzcG9rZW4sIGhlIHNhdCBkb3duOyBhbmQgVGhlcmFtZW5lcyByb3NlIGFuZCBzYWlkOiDigJxJIHdpbGwgbWVudGlvbiBmaXJzdCwgZ2VudGxlbWVuLCB0aGUgbGFzdCB0aGluZyBDcml0aWFzIHNhaWQgYWdhaW5zdCBtZS4gSGUgc2F5cyB0aGF0IEkgYnJvdWdodCBhYm91dCB0aGUgZGVhdGggb2YgdGhlIGdlbmVyYWxzIGJ5IG15IGFjY3VzYXRpb24uIEJ1dCBpdCB3YXMgbm90IEksIGFzIHlvdSBrbm93LCB3aG8gYmVnYW4gdGhlIG1hdHRlciBieSBhY2N1c2luZyB0aGVtOyBvbiB0aGUgY29udHJhcnksIGl0IHdhcyB0aGV5IHdobyBhY2N1c2VkIG1lLCBieSBzdGF0aW5nIHRoYXQgYWx0aG91Z2ggdGhhdCBkdXR5IHdhcyBhc3NpZ25lZCBtZSBieSB0aGVtLCBJIGZhaWxlZCB0byBwaWNrIHVwIHRoZSB1bmZvcnR1bmF0ZXMgaW4gdGhlIGJhdHRsZSBvZmYgTGVzYm9zLiBJIHNhaWQgaW4gbXkgZGVmZW5jZSB0aGF0IG9uIGFjY291bnQgb2YgdGhlIHN0b3JtIGl0IHdhcyBub3QgcG9zc2libGUgZXZlbiB0byBzYWlsLCBtdWNoIGxlc3MgdG8gcGljayB1cCB0aGUgbWVuLCBhbmQgaXQgd2FzIGRlY2lkZWQgYnkgdGhlIHN0YXRlIHRoYXQgbXkgcGxlYSB3YXMgYSByZWFzb25hYmxlIG9uZSwgd2hpbGUgdGhlIGdlbmVyYWxzIHdlcmUgY2xlYXJseSBhY2N1c2luZyB0aGVtc2VsdmVzLiBGb3IgdGhvdWdoIHRoZXkgc2FpZCBpdCB3YXMgcG9zc2libGUgdG8gc2F2ZSB0aGUgbWVuLCB0aGV5IG5ldmVydGhlbGVzcyBzYWlsZWQgYXdheSBhbmQgbGVmdCB0aGVtIHRvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA0Ij40MDQgQi5DLjwvZGF0ZT48L25vdGU+IHBlcmlzaC4KPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.3.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5JIGRvIG5vdCB3b25kZXIsIGhvd2V2ZXIsIHRoYXQgQ3JpdGlhcyBoYXMgbWlzdW5kZXJzdG9vZCB0aGUgbWF0dGVyOyBmb3Igd2hlbiB0aGVzZSBldmVudHMgdG9vayBwbGFjZSwgaXQgY2hhbmNlZCB0aGF0IGhlIHdhcyBub3QgaGVyZTsgaGUgd2FzIGVzdGFibGlzaGluZyBhIGRlbW9jcmFjeSBpbiBUaGVzc2FseSBhbG9uZyB3aXRoIFByb21ldGhldXMsIGFuZCBhcm1pbmcgdGhlIHNlcmZzIGFnYWluc3QgdGhlaXIgbWFzdGVycy4KPC90cmFuc2xhdGlvbj4="
translation['2.3.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5Hb2QgZm9yYmlkIHRoYXQgYW55IG9mIHRoZSB0aGluZ3Mgd2hpY2ggaGUgd2FzIGRvaW5nIHRoZXJlIHNob3VsZCBjb21lIHRvIHBhc3MgaGVyZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSBxdWl0ZSBhZ3JlZSB3aXRoIGhpbSwgaG93ZXZlciwgb24gdGhpcyBwb2ludCwgdGhhdCBpZiBhbnlvbmUgaXMgZGVzaXJvdXMgb2YgZGVwb3NpbmcgeW91IGZyb20geW91ciBvZmZpY2UgYW5kIGlzIG1ha2luZyBzdHJvbmcgdGhvc2Ugd2hvIGFyZSBwbG90dGluZyBhZ2FpbnN0IHlvdSwgaXQgaXMganVzdCBmb3IgaGltIHRvIGluY3VyIHRoZSBzZXZlcmVzdCBwdW5pc2htZW50LiBCdXQgSSB0aGluayB5b3UgY2FuIGJlc3QganVkZ2Ugd2hvIGl0IGlzIHRoYXQgaXMgZG9pbmcgdGhpcywgaWYgeW91IHdpbGwgY29uc2lkZXIgdGhlIGNvdXJzZSB3aGljaCBlYWNoIG9mIHVzIHR3byBoYXMgdGFrZW4gYW5kIGlzIG5vdyB0YWtpbmcuCjwvdHJhbnNsYXRpb24+"
translation['2.3.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5XZWxsIHRoZW4sIHVwIHRvIHRoZSB0aW1lIHdoZW4geW91IGJlY2FtZSBtZW1iZXJzIG9mIHRoZSBTZW5hdGUgYW5kIG1hZ2lzdHJhdGVzIHdlcmUgYXBwb2ludGVkIGFuZCB0aGUgbm90b3Jpb3VzIGluZm9ybWVycyB3ZXJlIGJyb3VnaHQgdG8gdHJpYWwsIGFsbCBvZiB1cyBoZWxkIHRoZSBzYW1lIHZpZXdzOyBidXQgd2hlbiB0aGVzZSBUaGlydHkgYmVnYW4gdG8gYXJyZXN0IG1lbiBvZiB3b3J0aCBhbmQgc3RhbmRpbmcsIHRoZW4gSSwgb24gbXkgc2lkZSwgYmVnYW4gdG8gaG9sZCB2aWV3cyBvcHBvc2VkIHRvIHRoZWlycy4KPC90cmFuc2xhdGlvbj4="
translation['2.3.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igd2hlbiBMZW9uIHRoZSBTYWxhbWluaWFuIHdhcyBwdXQgdG8gZGVhdGgs4oCUYSBtYW4gb2YgY2FwYWNpdHksIGJvdGggYWN0dWFsbHkgYW5kIGJ5IHJlcHV0ZSzigJRhbHRob3VnaCBoZSB3YXMgbm90IGd1aWx0eSBvZiBhIHNpbmdsZSBhY3Qgb2Ygd3JvbmctZG9pbmcsIEkga25ldyB0aGF0IHRob3NlIHdobyB3ZXJlIGxpa2UgaGltIHdvdWxkIGJlIGZlYXJmdWwsIGFuZCwgYmVpbmcgZmVhcmZ1bCwgd291bGQgYmUgZW5lbWllcyBvZiB0aGlzIGdvdmVybm1lbnQuIEkgYWxzbyBrbmV3LCB3aGVuIE5pY2VyYXR1cywgdGhlIHNvbiBvZiBOaWNpYXMsIHdhcyBhcnJlc3RlZCzigJRhIG1hbiBvZiB3ZWFsdGggd2hvLCBsaWtlIGhpcyBmYXRoZXIsIGhhZCBuZXZlciBkb25lIGFueXRoaW5nIHRvIGN1cnJ5IHBvcHVsYXIgZmF2b3VyLOKAlHRoYXQgdGhvc2Ugd2hvIHdlcmUgbGlrZSBoaW0gd291bGQgYmVjb21lIGhvc3RpbGUgdG8gdXMuCjwvdHJhbnNsYXRpb24+"
translation['2.3.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZnVydGhlciwgd2hlbiBBbnRpcGhvbiwgd2hvIGR1cmluZyB0aGUgd2FyIHN1cHBsaWVkIGZyb20gaGlzIG93biBtZWFucyB0d28gZmFzdC1zYWlsaW5nIHRyaXJlbWVzLCB3YXMgcHV0IHRvIGRlYXRoIGJ5IHVzLCBJIGtuZXcgdGhhdCBhbGwgdGhvc2Ugd2hvIGhhZCBiZWVuIHplYWxvdXMgaW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlIHN0YXRlJ3MgY2F1c2Ugd291bGQgbG9vayB1cG9uIHVzIHdpdGggc3VzcGljaW9uLiBJIG9iamVjdGVkLCBhbHNvLCB3aGVuIHRoZXkgc2FpZCB0aGF0IGVhY2ggb2YgdXMgbXVzdCBzZWl6ZSBvbmUgb2YgdGhlIHJlc2lkZW50IGFsaWVuczsgZm9yIGl0IHdhcyBlbnRpcmVseSBjbGVhciB0aGF0IGlmIHRoZXNlIG1lbiB3ZXJlIHB1dCB0byBkZWF0aCwgdGhlIHdob2xlIGJvZHkgb2Ygc3VjaCBhbGllbnMgd291bGQgYmVjb21lIGVuZW1pZXMgb2YgdGhlIGdvdmVybm1lbnQuCjxkYXRlIGF1dGhuYW1lPSItNDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA0Ij40MDQgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['2.3.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz5JIG9iamVjdGVkIGxpa2V3aXNlIHdoZW4gdGhleSB0b29rIGF3YXkgZnJvbSB0aGUgcGVvcGxlIHRoZWlyIGFybXMsIGJlY2F1c2UgSSB0aG91Z2h0IHRoYXQgd2Ugb3VnaHQgbm90IHRvIG1ha2UgdGhlIHN0YXRlIHdlYWs7IGZvciBJIHNhdyB0aGF0LCBpbiBwcmVzZXJ2aW5nIHVzLCB0aGUgcHVycG9zZSBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgaGFkIG5vdCBiZWVuIHRoYXQgd2UgbWlnaHQgYmVjb21lIGZldyBpbiBudW1iZXIgYW5kIHVuYWJsZSB0byBkbyB0aGVtIGFueSBzZXJ2aWNlOyBmb3IgaWYgdGhpcyBoYWQgYmVlbiB3aGF0IHRoZXkgZGVzaXJlZCwgaXQgd2FzIHdpdGhpbiB0aGVpciBwb3dlciwgYnkga2VlcGluZyB1cCB0aGUgcHJlc3N1cmUgb2YgZmFtaW5lIGEgbGl0dGxlIHdoaWxlIGxvbmdlciwgdG8gbGVhdmUgbm90IGEgc2luZ2xlIG1hbiBhbGl2ZS4KPC90cmFuc2xhdGlvbj4="
translation['2.3.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgdGhlIGhpcmluZyBvZiBndWFyZHNtZW4gZGlkIG5vdCBwbGVhc2UgbWUsIGZvciB3ZSBtaWdodCBoYXZlIGVubGlzdGVkIGluIG91ciBzZXJ2aWNlIGFuIGVxdWFsIG51bWJlciBvZiBvdXIgb3duIGNpdGl6ZW5zLCB1bnRpbCB3ZSwgdGhlIHJ1bGVycywgc2hvdWxkIGVhc2lseSBoYXZlIG1hZGUgb3Vyc2VsdmVzIG1hc3RlcnMgb2Ygb3VyIHN1YmplY3RzLiBBbmQgZnVydGhlciwgd2hlbiBJIHNhdyB0aGF0IG1hbnkgaW4gdGhlIGNpdHkgd2VyZSBiZWNvbWluZyBob3N0aWxlIHRvIHRoaXMgZ292ZXJubWVudCBhbmQgdGhhdCBtYW55IHdlcmUgYmVjb21pbmcgZXhpbGVzLCBpdCBkaWQgbm90IHNlZW0gdG8gbWUgYmVzdCB0byBiYW5pc2ggZWl0aGVyIFRocmFzeWJ1bHVzIG9yIEFueXR1cyBvciBBbGNpYmlhZGVzOyBmb3IgSSBrbmV3IHRoYXQgYnkgc3VjaCBtZWFzdXJlcyB0aGUgb3Bwb3NpdGlvbiB3b3VsZCBiZSBtYWRlIHN0cm9uZywgaWYgb25jZSB0aGUgY29tbW9ucyBzaG91bGQgYWNxdWlyZSBjYXBhYmxlIGxlYWRlcnMgYW5kIGlmIHRob3NlIHdobyB3aXNoZWQgdG8gYmUgbGVhZGVycyBzaG91bGQgZmluZCBhIG11bHRpdHVkZSBvZiBzdXBwb3J0ZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IHdvdWxkIHRoZSBtYW4gd2hvIG9mZmVycyBvcGVubHkgdGhpcyBzb3J0IG9mIGFkbW9uaXRpb24gYmUgZmFpcmx5IHJlZ2FyZGVkIGFzIGEgd2VsbC13aXNoZXIsIG9yIGFzIGEgdHJhaXRvcj8gSXQgaXMgbm90LCBDcml0aWFzLCB0aGUgbWVuIHdobyBwcmV2ZW50IG9uZSdzIG1ha2luZyBlbmVtaWVzIGluIGFidW5kYW5jZSBub3IgdGhlIG1lbiB3aG8gdGVhY2ggb25lIGhvdyB0byBnYWluIGFsbGllcyBpbiB0aGUgZ3JlYXRlc3QgbnVtYmVycyzigJRpdCBpcyBub3QgdGhlc2UsIEkgc2F5LCB3aG8gbWFrZSBvbmUncyBlbmVtaWVzIHN0cm9uZzsgYnV0IGl0IGlzIG11Y2ggcmF0aGVyIHRob3NlIHdobzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNCI+NDA0IEIuQy48L2RhdGU+PC9ub3RlPiB1bmp1c3RseSByb2Igb3RoZXJzIG9mIHByb3BlcnR5IGFuZCBwdXQgdG8gZGVhdGggcGVvcGxlIHdobyBhcmUgZ3VpbHR5IG9mIG5vIHdyb25nLCB3aG8sIEkgc2F5LCBtYWtlIHRoZWlyIG9wcG9uZW50cyBudW1lcm91cyBhbmQgYmV0cmF5IG5vdCBvbmx5IHRoZWlyIGZyaWVuZHMgYnV0IGFsc28gdGhlbXNlbHZlcywgYW5kIGFsbCB0byBzYXRpc2Z5IHRoZWlyIGNvdmV0b3VzbmVzcy4KPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.3.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaWYgaXQgaXMgbm90IGV2aWRlbnQgaW4gYW55IG90aGVyIHdheSB0aGF0IHdoYXQgSSBzYXkgaXMgdHJ1ZSwgbG9vayBhdCB0aGUgbWF0dGVyIGluIHRoaXMgd2F5OiBkbyB5b3Ugc3VwcG9zZSB0aGF0IFRocmFzeWJ1bHVzIGFuZCBBbnl0dXMgYW5kIHRoZSBvdGhlciBleGlsZXMgd291bGQgcHJlZmVyIHRvIGhhdmUgdXMgZm9sbG93IGhlcmUgdGhlIHBvbGljeSB3aGljaCBJIGFtIHVyZ2luZyBieSB3b3JkLCBvciB0aGUgcG9saWN5IHdoaWNoIHRoZXNlIG1lbiBhcmUgY2Fycnlpbmcgb3V0IGluIGRlZWQ/IEZvciBteSBwYXJ0LCBJIGZhbmN5IHRoYXQgbm93IHRoZXkgYmVsaWV2ZSBldmVyeSBzcG90IGlzIGZ1bGwgb2YgYWxsaWVzLCB3aGlsZSBpZiB0aGUgYmVzdCBlbGVtZW50IGluIHRoZSBzdGF0ZSB3ZXJlIGZyaWVuZGx5IHRvIHVzLCB0aGV5IHdvdWxkIGNvdW50IGl0IGRpZmZpY3VsdCBldmVuIHRvIHNldCBmb290IGFueXdoZXJlIGluIHRoZSBsYW5kIQo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgYXMgdG8gaGlzIHN0YXRlbWVudCB0aGF0IEkgaGF2ZSBhIHByb3BlbnNpdHkgdG8gYmUgYWx3YXlzIGNoYW5naW5nIHNpZGVzLCBjb25zaWRlciB0aGVzZSBmYWN0cyBhbHNvOiBpdCB3YXMgdGhlIHBlb3BsZSBpdHNlbGYsIGFzIGV2ZXJ5Ym9keSBrbm93cywgd2hpY2ggdm90ZWQgZm9yIHRoZSBnb3Zlcm5tZW50IG9mIHRoZSBGb3VyIEh1bmRyZWQsIGJlaW5nIGFkdmlzZWQgdGhhdCB0aGUgTGFjZWRhZW1vbmlhbnMgd291bGQgdHJ1c3QgYW55IGZvcm0gb2YgZ292ZXJubWVudCBzb29uZXIgdGhhbiBhIGRlbW9jcmFjeS4KPC90cmFuc2xhdGlvbj4="
translation['2.3.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGUgTGFjZWRhZW1vbmlhbnMgZGlkIG5vdCBpbiB0aGUgbGVhc3QgcmVsYXggdGhlaXIgZWZmb3J0cyBpbiBwcm9zZWN1dGluZyB0aGUgd2FyLCBhbmQgQXJpc3RvdGVsZXMsIE1lbGFudGhpdXMsIEFyaXN0YXJjaHVzLCBhbmQgdGhlaXIgZmVsbG93LWdlbmVyYWxzIHdlcmUgZm91bmQgdG8gYmUgYnVpbGRpbmcgYSBmb3J0IG9uIHRoZSBwZW5pbnN1bGEsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkNvbW1hbmRpbmcgdGhlIGhhcmJvdXIgb2YgUGlyYWV1cy48L25vdGU+IGludG8gd2hpY2ggdGhleSBwcm9wb3NlZCB0byBhZG1pdCB0aGUgZW5lbXkgYW5kIHNvIGJyaW5nIHRoZSBzdGF0ZSB1bmRlciB0aGUgY29udHJvbCBvZiB0aGVtc2VsdmVzIGFuZCB0aGVpciBvbGlnYXJjaGljYWwgYXNzb2NpYXRlcyzigJRpZiBJIHBlcmNlaXZlZCB0aGlzIHBsYW4gYW5kIHRod2FydGVkIGl0LCBpcyB0aGF0IGJlaW5nIGEgdHJhaXRvciB0byBvbmUncyBmcmllbmRzPwo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSGUgZHVicyBtZSBgQnVza2luLCcgYmVjYXVzZSwgYXMgaGUgc2F5cywgSSB0cnkgdG8gZml0IGJvdGggcGFydGllcy4gQnV0IGZvciB0aGUgbWFuIHdobyBwbGVhc2VzIG5laXRoZXIgcGFydHks4oCUd2hhdCBpbiB0aGUgbmFtZSBvZiB0aGUgZ29kcyBzaG91bGQgd2UgY2FsbCBoaW0/IEZvciB5b3UgaW4gdGhlIGRheXMgb2YgdGhlIGRlbW9jcmFjeTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNCI+NDA0IEIuQy48L2RhdGU+PC9ub3RlPiB3ZXJlIHJlZ2FyZGVkIGFzIHRoZSBiaXR0ZXJlc3Qgb2YgYWxsIGhhdGVycyBvZiB0aGUgY29tbW9ucywgYW5kIHVuZGVyIHRoZSBhcmlzdG9jcmFjeSB5b3UgaGF2ZSBzaG93biB5b3Vyc2VsZiB0aGUgYml0dGVyZXN0IG9mIGFsbCBoYXRlcnMgb2YgdGhlIGJldHRlciBjbGFzc2VzLgo8ZGF0ZSBhdXRobmFtZT0iLTQwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNCI+NDA0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['2.3.48'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgSSwgQ3JpdGlhcywgYW0gZm9yZXZlciBhdCB3YXIgd2l0aCB0aGUgbWVuIHdobyBkbyBub3QgdGhpbmsgdGhlcmUgY291bGQgYmUgYSBnb29kIGRlbW9jcmFjeSB1bnRpbCB0aGUgc2xhdmVzIGFuZCB0aG9zZSB3aG8gd291bGQgc2VsbCB0aGUgc3RhdGUgZm9yIGxhY2sgb2YgYSBzaGlsbGluZyBzaG91bGQgc2hhcmUgaW4gdGhlIGdvdmVybm1lbnQsIGFuZCBvbiB0aGUgb3RoZXIgaGFuZCBJIGFtIGZvcmV2ZXIgYW4gZW5lbXkgdG8gdGhvc2Ugd2hvIGRvIG5vdCB0aGluayB0aGF0IGEgZ29vZCBvbGlnYXJjaHkgY291bGQgYmUgZXN0YWJsaXNoZWQgdW50aWwgdGhleSBzaG91bGQgYnJpbmcgdGhlIHN0YXRlIHRvIHRoZSBwb2ludCBvZiBiZWluZyBydWxlZCBhYnNvbHV0ZWx5IGJ5IGEgZmV3LiBCdXQgdG8gZGlyZWN0IHRoZSBnb3Zlcm5tZW50IGluIGNvbXBhbnkgd2l0aCB0aG9zZSB3aG8gaGF2ZSB0aGUgbWVhbnMgdG8gYmUgb2Ygc2VydmljZSwgd2hldGhlciB3aXRoIGhvcnNlcyBvciB3aXRoIHNoaWVsZHMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIGNvdWxkIGVxdWlwIHRoZW1zZWx2ZXMgYXQgdGhlaXIgb3duIGV4cGVuc2UgYXMgaG9yc2VtZW4gb3IgKDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs68zrXPhOKAmSDhvIDPg8+A4b23zrTPic69PC9mb3JlaWduPikgYXMgaG9wbGl0ZXMuPC9ub3RlPuKAlHRoaXMgcGxhbiBJIHJlZ2FyZGVkIGFzIGJlc3QgaW4gZm9ybWVyIGRheXMgYW5kIEkgZG8gbm90IGNoYW5nZSBteSBvcGluaW9uIG5vdy4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrzOtc+E4oCZIOG8gM+Dz4DhvbfOtM+Jzr08L2ZvcmVpZ24+KSBhcyBob3BsaXRlcy48L3RyYW5zbGF0aW9uPg=="
translation['2.3.49'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaWYgeW91IGNhbiBtZW50aW9uIGFueSBpbnN0YW5jZSwgQ3JpdGlhcywgd2hlcmUgSSBqb2luZWQgaGFuZHMgd2l0aCBkZW1hZ29ndWVzIG9yIGRlc3BvdHMgYW5kIHVuZGVydG9vayB0byBkZXByaXZlIG1lbiBvZiBzdGFuZGluZyBvZiB0aGVpciBjaXRpemVuc2hpcCwgdGhlbiBzcGVhay4gRm9yIGlmIEkgYW0gZm91bmQgZ3VpbHR5IGVpdGhlciBvZiBkb2luZyB0aGlzIHRoaW5nIG5vdyBvciBvZiBldmVyIGhhdmluZyBkb25lIGl0IGluIHRoZSBwYXN0LCBJIGFkbWl0IHRoYXQgSSBzaG91bGQganVzdGx5IHN1ZmZlciB0aGUgdmVyeSB1dHRlcm1vc3Qgb2YgYWxsIHBlbmFsdGllcyBhbmQgYmUgcHV0IHRvIGRlYXRoLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['2.3.50'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB3aXRoIHRoZXNlIHdvcmRzIGhlIGNlYXNlZCBzcGVha2luZyBhbmQgdGhlIFNlbmF0ZSBoYWQgc2hvd24gaXRzIGdvb2Qgd2lsbCBieSBhcHBsYXVzZSwgQ3JpdGlhcywgcmVhbGl6aW5nIHRoYXQgaWYgaGUgc2hvdWxkIGFsbG93IHRoZSBTZW5hdGUgdG8gcGFzcyBqdWRnbWVudCBvbiB0aGUgY2FzZSwgVGhlcmFtZW5lcyB3b3VsZCBlc2NhcGUsIGFuZCB0aGlua2luZyB0aGF0IHRoaXMgd291bGQgYmUgdW5lbmR1cmFibGUsIHdlbnQgYW5kIGhlbGQgYSBicmllZiBjb25zdWx0YXRpb24gd2l0aCB0aGUgVGhpcnR5LCBhbmQgdGhlbiB3ZW50IG91dCBhbmQgb3JkZXJlZCB0aGUgbWVuIHdpdGggdGhlIGRhZ2dlcnMgdG8gdGFrZSB0aGVpciBzdGFuZCBhdCB0aGUgcmFpbGluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZXBhcmF0aW5nIHRoZSBTZW5hdGUgZnJvbSB0aGUgYXVkaXRvcml1bS48L25vdGU+IGluIHBsYWluIHNpZ2h0IG9mIHRoZSBTZW5hdGUuCjwvdHJhbnNsYXRpb24+"
translation['2.3.51'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGhlIGNhbWUgaW4gYWdhaW4gYW5kPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA0Ij40MDQgQi5DLjwvZGF0ZT48L25vdGU+IHNhaWQ6IOKAnFNlbmF0b3JzLCBJIGRlZW0gaXQgdGhlIGR1dHkgb2YgYSBsZWFkZXIgd2hvIGlzIHdoYXQgaGUgb3VnaHQgdG8gYmUsIGluIGNhc2UgaGUgc2VlcyB0aGF0IGhpcyBmcmllbmRzIGFyZSBiZWluZyBkZWNlaXZlZCwgbm90IHRvIHBlcm1pdCBpdC4gSSwgdGhlcmVmb3JlLCBzaGFsbCBmb2xsb3cgdGhhdCBjb3Vyc2UuIEJlc2lkZXMsIHRoZXNlIG1lbiB3aG8gaGF2ZSB0YWtlbiB0aGVpciBzdGFuZCBoZXJlIHNheSB0aGF0IGlmIHdlIHByb3Bvc2UgdG8gbGV0IGEgbWFuIGdvIHdobyBpcyBtYW5pZmVzdGx5IGluanVyaW5nIHRoZSBvbGlnYXJjaHksIHRoZXkgd2lsbCBub3Qgc3VmZmVyIHVzIHRvIGRvIHNvLiBOb3cgaXQgaXMgcHJvdmlkZWQgaW4gdGhlIG5ldyBsYXdzIHRoYXQgd2hpbGUgbm8gb25lIG9mIHRob3NlIHdobyBhcmUgb24gdGhlIHJvbGwgb2YgdGhlIFRocmVlIFRob3VzYW5kIG1heSBiZSBwdXQgdG8gZGVhdGggd2l0aG91dCB5b3VyIHZvdGUsIHRoZSBUaGlydHkgc2hhbGwgaGF2ZSBwb3dlciBvZiBsaWZlIG9yIGRlYXRoIG92ZXIgdGhvc2Ugb3V0c2lkZSB0aGUgcm9sbC4gSSwgdGhlcmVmb3JlLOKAnSBoZSBzYWlkLCDigJxzdHJpa2Ugb2ZmIHRoaXMgbWFuIFRoZXJhbWVuZXMgZnJvbSB0aGUgcm9sbCwgd2l0aCB0aGUgYXBwcm92YWwgb2YgYWxsIHRoZSBUaGlydHkuIFRoYXQgYmVpbmcgZG9uZSzigJ0gaGUgYWRkZWQsIOKAnHdlIG5vdyBjb25kZW1uIGhpbSB0byBkZWF0aC7igJ0KPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.3.52'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBUaGVyYW1lbmVzIGhlYXJkIHRoaXMsIGhlIHNwcmFuZyB0byB0aGUgYWx0YXIgYW5kIHNhaWQ6IOKAnEFuZCBJLCBzaXJzLOKAnSBzYWlkIGhlLCDigJxiZWcgb25seSBiYXJlIGp1c3RpY2Us4oCUdGhhdCBpdCBiZSBub3Qgd2l0aGluIHRoZSBwb3dlciBvZiBDcml0aWFzIHRvIHN0cmlrZSBvZmYgZWl0aGVyIG1lIG9yIHdob21zb2V2ZXIgb2YgeW91IGhlIG1heSB3aXNoLCBidXQgcmF0aGVyIHRoYXQgYm90aCBpbiB5b3VyIGNhc2UgYW5kIGluIG1pbmUgdGhlIGp1ZGdtZW50IG1heSBiZSByZW5kZXJlZCBzdHJpY3RseSBpbiBhY2NvcmRhbmNlIHdpdGggdGhhdCBsYXcgd2hpY2ggdGhlc2UgbWVuIGhhdmUgbWFkZSByZWdhcmRpbmcgdGhvc2Ugb24gdGhlIHJvbGwuCjwvdHJhbnNsYXRpb24+"
translation['2.3.53'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MyIgdW5pdD0ic2VjdGlvbiIgLz5UbyBiZSBzdXJlLOKAnSBzYWlkIGhlLCDigJxJIGtub3csIEkgc3dlYXIgYnkgdGhlIGdvZHMsIG9ubHkgdG9vIHdlbGwsIHRoYXQgdGhpcyBhbHRhciB3aWxsIGF2YWlsIG1lIG5vdGhpbmcsIGJ1dCBJIHdpc2ggdG8gc2hvdyB0aGF0IHRoZXNlIFRoaXJ0eSBhcmUgbm90IG9ubHkgbW9zdCB1bmp1c3QgdG93YXJkIG1lbiwgYnV0IGFsc28gbW9zdCBpbXBpb3VzIHRvd2FyZCB0aGUgZ29kcy4gQnV0IEkgYW0gc3VycHJpc2VkIGF0IHlvdSzigJ0gaGUgc2FpZCwg4oCcZ2VudGxlbWVuIG9mIHRoZSBhcmlzdG9jcmFjeSwgdGhhdCB5b3UgYXJlIG5vdCBnb2luZyB0byBkZWZlbmQgeW91ciBvd24gcmlnaHRzLCBlc3BlY2lhbGx5IHdoZW4geW91IGtub3cgdGhhdCBteSBuYW1lIGlzIG5vdCBhIHdoaXQgZWFzaWVyIHRvIHN0cmlrZSBvZmYgdGhhbiB0aGUgbmFtZSBvZiBlYWNoIG9mIHlvdS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['2.3.54'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NCIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGlzIG1vbWVudCB0aGUgaGVyYWxkIG9mIHRoZSBUaGlydHkgb3JkZXJlZCB0aGUgRWxldmVuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSBvbiBJLiB2aWkuIDEwLjwvbm90ZT4gdG8gc2VpemUgVGhlcmFtZW5lczsgYW5kIHdoZW4gdGhleSBjYW1lIGluLCBhdHRlbmRlZCBieSB0aGVpciBzZXJ2YW50cyBhbmQgd2l0aDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNCI+NDA0IEIuQy48L2RhdGU+PC9ub3RlPiBTYXR5cnVzLCB0aGUgbW9zdCBhdWRhY2lvdXMgYW5kIHNoYW1lbGVzcyBvZiB0aGVtLCBhdCB0aGVpciBoZWFkLCBDcml0aWFzIHNhaWQ6IOKAnFdlIGhhbmQgb3ZlciB0byB5b3Us4oCdIHNhaWQgaGUsIOKAnHRoaXMgbWFuIFRoZXJhbWVuZXMsIGNvbmRlbW5lZCBhY2NvcmRpbmcgdG8gdGhlIGxhdy4gRG8geW91LCB0aGUgRWxldmVuLCB0YWtlIGhpbSBhbmQgbGVhZCBoaW0gdG8gdGhlIHByb3BlciBwbGFjZSBhbmQgZG8gdGhhdCB3aGljaCBmb2xsb3dzLuKAnQo8ZGF0ZSBhdXRobmFtZT0iLTQwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNCI+NDA0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['2.3.55'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBDcml0aWFzIGhhZCBzcG9rZW4gdGhlc2Ugd29yZHMsIFNhdHlydXMgZHJhZ2dlZCBUaGVyYW1lbmVzIGF3YXkgZnJvbSB0aGUgYWx0YXIsIGFuZCBoaXMgc2VydmFudHMgbGVudCB0aGVpciBhaWQuIEFuZCBUaGVyYW1lbmVzLCBhcyB3YXMgbmF0dXJhbCwgY2FsbGVkIHVwb24gZ29kcyBhbmQgbWVuIHRvIHdpdG5lc3Mgd2hhdCB3YXMgZ29pbmcgb24uIEJ1dCB0aGUgc2VuYXRvcnMga2VwdCBxdWlldCwgc2VlaW5nIHRoYXQgdGhlIG1lbiBhdCB0aGUgcmFpbCB3ZXJlIG9mIHRoZSBzYW1lIHNvcnQgYXMgU2F0eXJ1cyBhbmQgdGhhdCB0aGUgc3BhY2UgaW4gZnJvbnQgb2YgdGhlIHNlbmF0ZS1ob3VzZSB3YXMgZmlsbGVkIHdpdGggdGhlIGd1YXJkc21lbiwgYW5kIGJlaW5nIHdlbGwgYXdhcmUgdGhhdCB0aGUgZm9ybWVyIGhhZCBjb21lIGFybWVkIHdpdGggZGFnZ2Vycy4KPC90cmFuc2xhdGlvbj4="
translation['2.3.56'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NiIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGV5IGxlZCB0aGUgbWFuIGF3YXkgdGhyb3VnaCB0aGUgbWFya2V0LXBsYWNlLCB3aGlsZSBoZSBwcm9jbGFpbWVkIGluIGEgdmVyeSBsb3VkIHZvaWNlIHRoZSB3cm9uZ3MgaGUgd2FzIHN1ZmZlcmluZy4gT25lIHNheWluZyBvZiBoaXMgdGhhdCBpcyByZXBvcnRlZCB3YXMgdGhpczogd2hlbiBTYXR5cnVzIHRvbGQgaGltIHRoYXQgaWYgaGUgZGlkIG5vdCBrZWVwIHF1aWV0LCBoZSB3b3VsZCBzdWZmZXIgZm9yIGl0LCBoZSBhc2tlZDog4oCcVGhlbiBpZiBJIGRvIGtlZXAgcXVpZXQsIHNoYWxsIEkgbm90IHN1ZmZlcj/igJ0gQW5kIHdoZW4sIGJlaW5nIGNvbXBlbGxlZCB0byBkaWUsIGhlIGhhZCBkcnVuayB0aGUgaGVtbG9jaywgdGhleSBzYWlkIHRoYXQgaGUgdGhyZXcgb3V0IHRoZSBsYXN0IGRyb3BzLCBsaWtlIGEgbWFuIHBsYXlpbmcga290dGFib3MsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBnYW1lIGNvbnNpc3RlZCBpbiB0aHJvd2luZyB0aGUgbGFzdCBkcm9wcyBmcm9tIGEgd2luZS1jdXAgaW50byBhIGJhc2luLCBhdCB0aGUgc2FtZSB0aW1lIHByb25vdW5jaW5nIHRoZSBuYW1lIGFuZCB3aXNoaW5nIHRoZSBoZWFsdGggb2YgdGhlIHBlcnNvbiB3aG9tIG9uZSBsb3ZlZC48L25vdGU+IGFuZCBleGNsYWltZWQ6IOKAnEhlcmUncyB0byB0aGUgaGVhbHRoIG9mIG15IGJlbG92ZWQgQ3JpdGlhcy7igJ0gTm93IEkgYW0gbm90IHVuYXdhcmUgb2YgdGhpcywgdGhhdCB0aGVzZSBhcmUgbm90IHNheWluZ3Mgd29ydGh5IG9mIHJlY29yZDsgc3RpbGwsIEkgZGVlbSBpdCBhZG1pcmFibGUgaW4gdGhlIG1hbiB0aGF0IHdoZW4gZGVhdGggd2FzIGNsb3NlIGF0IGhhbmQsIG5laXRoZXIgc2VsZi1wb3NzZXNzaW9uIG5vciB0aGUgc3Bpcml0IG9mIHBsYXlmdWxuZXNzIGRlcGFydGVkIGZyb20gaGlzIHNvdWwuCjwvdHJhbnNsYXRpb24+"
translation['2.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TbywgdGhlbiwgVGhlcmFtZW5lcyBkaWVkOyBidXQgdGhlIFRoaXJ0eSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvbm90ZT4gdGhpbmtpbmcgdGhhdCBub3cgdGhleSBjb3VsZCBwbGF5IHRoZSB0eXJhbnQgd2l0aG91dCBmZWFyLCBpc3N1ZWQgYSBwcm9jbGFtYXRpb24gZm9yYmlkZGluZyB0aG9zZSB3aG8gd2VyZSBvdXRzaWRlIHRoZSByb2xsIHRvIGVudGVyIHRoZSBjaXR5IGFuZCBldmljdGVkIHRoZW0gZnJvbSB0aGVpciBlc3RhdGVzLCBpbiBvcmRlciB0aGF0IHRoZXkgdGhlbXNlbHZlcyBhbmQgdGhlaXIgZnJpZW5kcyBtaWdodCBoYXZlIHRoZXNlIHBlb3BsZSdzIGxhbmRzLiBBbmQgd2hlbiB0aGV5IGZsZWQgdG8gUGlyYWV1cywgdGhleSBkcm92ZSBtYW55IG9mIHRoZW0gYXdheSBmcm9tIHRoZXJlIGFsc28sIGFuZCBmaWxsZWQgYm90aCBNZWdhcmEgYW5kIFRoZWJlcyB3aXRoIHRoZSByZWZ1Z2Vlcy4KPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5QcmVzZW50bHkgVGhyYXN5YnVsdXMgc2V0IG91dCBmcm9tIFRoZWJlcyB3aXRoIGFib3V0IHNldmVudHkgY29tcGFuaW9ucyBhbmQgc2VpemVkIFBoeWxlLCBhIHN0cm9uZyBmb3J0cmVzcy4gQW5kIHRoZSBUaGlydHkgbWFyY2hlZCBvdXQgZnJvbSB0aGUgY2l0eSBhZ2FpbnN0IGhpbSB3aXRoIHRoZSBUaHJlZSBUaG91c2FuZCBhbmQgdGhlIGNhdmFscnksIHRoZSB3ZWF0aGVyIGJlaW5nIHZlcnkgZmluZSBpbmRlZWQuIFdoZW4gdGhleSByZWFjaGVkIFBoeWxlLCBzb21lIG9mIHRoZSB5b3VuZyBtZW4gd2VyZSBzbyBib2xkIGFzIHRvIGF0dGFjayB0aGUgZm9ydHJlc3MgYXQgb25jZSwgYnV0IHRoZXkgYWNjb21wbGlzaGVkIG5vdGhpbmcgYW5kIHN1ZmZlcmVkIHNvbWUgd291bmRzIHRoZW1zZWx2ZXMgYmVmb3JlIHRoZXkgcmV0aXJlZC4KPC90cmFuc2xhdGlvbj4="
translation['2.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGlsZSB0aGUgVGhpcnR5IHdlcmUgcGxhbm5pbmcgdG8gaW52ZXN0IHRoZSBwbGFjZSwgc28gYXMgdG8gZm9yY2UgdGhlbSB0byBzdXJyZW5kZXIgYnkgc2h1dHRpbmcgb2ZmIHRoZWlyIGF2ZW51ZXMgZm9yIHJlY2VpdmluZyBwcm92aXNpb25zLCBhIHZlcnkgaGVhdnkgc25vdyBzdG9ybSBjYW1lIG9uIGR1cmluZyB0aGUgbmlnaHQgYW5kIGNvbnRpbnVlZCBvbiB0aGUgZm9sbG93aW5nIGRheS4gU28gdGhleSBjYW1lIGJhY2sgdG8gdGhlIGNpdHkgaW4gdGhlIHNub3csIGFmdGVyIGxvc2luZyBhIGdvb2RseSBudW1iZXIgb2YgdGhlaXIgY2FtcC1mb2xsb3dlcnMgYnkgdGhlIGF0dGFja3Mgb2YgdGhlIG1lbiBpbiBQaHlsZS4KPC90cmFuc2xhdGlvbj4="
translation['2.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gdGhlIFRoaXJ0eSwga25vd2luZyB0aGF0IHRoZSBlbmVteSB3b3VsZCBhbHNvIGdhdGhlciBwbHVuZGVyIGZyb20gdGhlIGZhcm1zIGlmIHRoZXJlIHdlcmUgbm8gZm9yY2UgdG8gcHJvdGVjdCB0aGVtLCBzZW50IG91dCBhbGwgYnV0IGEgZmV3IG9mIHRoZSBMYWNvbmlhbiBndWFyZHNtZW4gYW5kIHR3byBkaXZpc2lvbnMgb2YgdGhlIGNhdmFscnkgdG8gdGhlIG91dGx5aW5nIGRpc3RyaWN0cyBhYm91dCBmaWZ0ZWVuIHN0YWRpYSBmcm9tIFBoeWxlLiBUaGVzZSB0cm9vcHMgbWFkZSB0aGVpciBjYW1wIGluIGEgYnVzaHkgc3BvdCBhbmQgcHJvY2VlZGVkIHRvIGtlZXAgZ3VhcmQuCjwvdHJhbnNsYXRpb24+"
translation['2.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk5vdyBieSB0aGlzIHRpbWUgYWJvdXQgc2V2ZW4gaHVuZHJlZCBtZW4gd2VyZSBnYXRoZXJlZCBhdCBQaHlsZSwgYW5kIGR1cmluZyB0aGUgbmlnaHQgVGhyYXN5YnVsdXMgbWFyY2hlZCBkb3duIHdpdGg8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlbTsgYW5kIGFib3V0IHRocmVlIG9yIGZvdXIgc3RhZGlhIGZyb20gdGhlIGd1YXJkc21lbiBoZSBoYWQgaGlzIHRyb29wcyBncm91bmQgdGhlaXIgYXJtcyBhbmQga2VlcCBxdWlldC4KPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gd2hlbiBpdCB3YXMgZHJhd2luZyB0b3dhcmRzIGRheSBhbmQgdGhlIGVuZW15IHdlcmUgYWxyZWFkeSBnZXR0aW5nIHVwIGFuZCBnb2luZyBhd2F5IGZyb20gdGhlaXIgY2FtcCB3aGl0aGVyc29ldmVyIGVhY2ggb25lIGhhZCB0byBnbywgYW5kIHRoZSBncm9vbXMgd2VyZSBrZWVwaW5nIHVwIGEgaHViYnViIGFzIHRoZXkgY3VycmllZCB0aGVpciBob3JzZXMsIGF0IHRoaXMgbW9tZW50IFRocmFzeWJ1bHVzIGFuZCBoaXMgbWVuIHBpY2tlZCB1cCB0aGVpciBhcm1zIGFuZCBjaGFyZ2VkIG9uIHRoZSBydW4uIFRoZXkgc3RydWNrIGRvd24gc29tZSBvZiB0aGUgZW5lbXkgYW5kIHR1cm5lZCB0aGVtIGFsbCB0byBmbGlnaHQsIHB1cnN1aW5nIHRoZW0gZm9yIHNpeCBvciBzZXZlbiBzdGFkaWE7IGFuZCB0aGV5IGtpbGxlZCBtb3JlIHRoYW4gb25lIGh1bmRyZWQgYW5kIHR3ZW50eSBvZiB0aGUgaG9wbGl0ZXMsIGFuZCBhbW9uZyB0aGUgY2F2YWxyeSBOaWNvc3RyYXR1cywgbmlja25hbWVkIOKAnHRoZSBiZWF1dGlmdWws4oCdIGFuZCB0d28gbW9yZSBiZXNpZGVzLCBjYXRjaGluZyB0aGVtIHdoaWxlIHN0aWxsIGluIHRoZWlyIGJlZHMuCjwvdHJhbnNsYXRpb24+"
translation['2.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gYWZ0ZXIgcmV0dXJuaW5nIGZyb20gdGhlIHB1cnN1aXQgYW5kIGVyZWN0aW5nIGEgdHJvcGh5IGFuZCBwYWNraW5nIHVwIGFsbCB0aGUgYXJtcyBhbmQgYmFnZ2FnZSB0aGV5IGhhZCBjYXB0dXJlZCwgdGhleSB3ZW50IGJhY2sgdG8gUGh5bGUuIEFuZCB3aGVuIHRoZSBjYXZhbHJ5IGZyb20gdGhlIGNpdHkgY2FtZSB0byB0aGUgcmVzY3VlLCB0aGVyZSB3ZXJlIG5vbmUgb2YgdGhlIGVuZW15IGxlZnQgdG8gYmUgc2Vlbjsgc28gYWZ0ZXIgd2FpdGluZyB1bnRpbCB0aGVpciByZWxhdGl2ZXMgaGFkIHRha2VuIHVwIHRoZSBib2RpZXMgb2YgdGhlIGRlYWQsIHRoZXkgcmV0dXJuZWQgdG8gdGhlIGNpdHkuCjwvdHJhbnNsYXRpb24+"
translation['2.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZSBUaGlydHksIGRlZW1pbmcgdGhlaXIgZ292ZXJubWVudCBubyBsb25nZXIgc2VjdXJlLCBmb3JtZWQgYSBwbGFuIHRvIGFwcHJvcHJpYXRlIEVsZXVzaXMsIHNvIGFzIHRvIGhhdmUgYSBwbGFjZSBvZiByZWZ1Z2UgaWYgaXQgc2hvdWxkIHByb3ZlIG5lY2Vzc2FyeS4gQWNjb3JkaW5nbHkgQ3JpdGlhcyBhbmQgdGhlIHJlc3Qgb2YgdGhlIFRoaXJ0eSwgaGF2aW5nIGlzc3VlZCBvcmRlcnMgdG8gdGhlIGNhdmFscnkgdG8gYWNjb21wYW55IHRoZW0sIHdlbnQgdG8gRWxldXNpcy4gVGhlcmUgdGhleSBoZWxkIGEgcmV2aWV3IG9mIHRoZSB0b3duc3Blb3BsZSB1bmRlciBndWFyZCBvZiB0aGUgY2F2YWxyeSwgcHJldGVuZGluZyB0aGF0IHRoZXkgd2FudGVkIHRvIGtub3cgaG93IG51bWVyb3VzIHRoZXkgd2VyZSBhbmQgaG93IGxhcmdlIGFuIGFkZGl0aW9uYWwgZ2Fycmlzb24gdGhleSB3b3VsZCByZXF1aXJlLCBhbmQgdGhlbiBvcmRlcmVkIHRoZW0gYWxsIHRvIHJlZ2lzdGVyOyBhbmQgZWFjaCBtYW4gd2hlbiBoZSBoYWQgcmVnaXN0ZXJlZCBoYWQgdG8gcGFzcyBvdXQgYnkgdGhlIGdhdGUgaW4gdGhlIHRvd24gd2FsbCBpbiB0aGUgZGlyZWN0aW9uIG9mIHRoZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNCI+NDA0IEIuQy48L2RhdGU+PC9ub3RlPiBzZWEuIE1lYW53aGlsZSB0aGV5IGhhZCBzdGF0aW9uZWQgdGhlIGNhdmFscnkgb24gdGhlIHNob3JlIG9uIGVpdGhlciBzaWRlIG9mIHRoZSBnYXRlLCBhbmQgYXMgZWFjaCBtYW4gcGFzc2VkIG91dCB0aGVpciBzZXJ2YW50cyBib3VuZCBoaW0gZmFzdC4gQW5kIHdoZW4gYWxsIGhhZCB0aHVzIGJlZW4gc2VpemVkLCB0aGV5IG9yZGVyZWQgTHlzaW1hY2h1cywgdGhlIGNhdmFscnkgY29tbWFuZGVyLCB0byB0YWtlIHRoZW0gdG8gQXRoZW5zIGFuZCB0dXJuIHRoZW0gb3ZlciB0byB0aGUgRWxldmVuLgo8ZGF0ZSBhdXRobmFtZT0iLTQwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNCI+NDA0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['2.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBmb2xsb3dpbmcgZGF5IHRoZXkgc3VtbW9uZWQgdG8gdGhlIE9kZXVtPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgYnVpbGRpbmcgZGVzaWduZWQgZm9yIG11c2ljYWwgcGVyZm9ybWFuY2VzLiBJdCB3YXMgIGp1c3Qgb3V0c2lkZSB0aGUgY2l0eSwgdG8gdGhlIHNvdXRoLWVhc3QuPC9ub3RlPiB0aGUgaG9wbGl0ZXMgd2hvIHdlcmUgb24gdGhlIHJvbGwgYW5kIHRoZSBjYXZhbHJ5IGFsc28uIFRoZW4gQ3JpdGlhcyByb3NlIGFuZCBzYWlkOiDigJxXZSwgZ2VudGxlbWVuLOKAnSBzYWlkIGhlLCDigJxhcmUgZXN0YWJsaXNoaW5nIHRoaXMgZ292ZXJubWVudCBubyBsZXNzIGZvciB5b3UgdGhhbiBmb3Igb3Vyc2VsdmVzLiBUaGVyZWZvcmUsIGV2ZW4gYXMgeW91IHdpbGwgc2hhcmUgaW4gaG9ub3Vycywgc28gYWxzbyB5b3UgbXVzdCBzaGFyZSBpbiB0aGUgZGFuZ2Vycy4gVGhlcmVmb3JlIHlvdSBtdXN0IHZvdGUgY29uZGVtbmF0aW9uIG9mIHRoZSBFbGV1c2luaWFucyB3aG8gaGF2ZSBiZWVuIHNlaXplZCwgdGhhdCB5b3UgbWF5IGhhdmUgdGhlIHNhbWUgaG9wZXMgYW5kIGZlYXJzIGFzIHdlLuKAnSBUaGVuIGhlIHNob3dlZCB0aGVtIGEgcGxhY2UgYW5kIGJhZGUgdGhlbSBjYXN0IHRoZWlyIGJhbGxvdHMgdGhlcmVpbiwgaW4gcGxhaW4gc2lnaHQgb2YgZXZlcnlib2R5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIExhY29uaWFuIGd1YXJkc21lbiB3ZXJlIGluIG9uZSBoYWxmIG9mIHRoZSBPZGV1bSwgZnVsbHkgYXJtZWQ7IGFuZCB0aGVzZSBwcm9jZWVkaW5ncyB3ZXJlIHBsZWFzaW5nIGFsc28gdG8gc3VjaCBvZiB0aGUgY2l0aXplbnMgYXMgY2FyZWQgb25seSBmb3IgdGhlaXIgb3duIGFkdmFudGFnZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U29vbiBhZnRlciB0aGlzIFRocmFzeWJ1bHVzIHRvb2sgdGhlIG1lbiBvZiBQaHlsZSwgd2hvIGhhZCBub3cgZ2F0aGVyZWQgdG8gdGhlIG51bWJlciBvZiBhYm91dCBvbmUgdGhvdXNhbmQsIGFuZCBjYW1lIGJ5IG5pZ2h0IHRvIFBpcmFldXMuIFdoZW4gdGhlIFRoaXJ0eSBsZWFybmVkIG9mIHRoaXMsIHRoZXkgYXQgb25jZSBzZXQgb3V0IGFnYWluc3QgaGltLCB3aXRoIHRoZSBMYWNvbmlhbiBndWFyZHNtZW4gYW5kIHRoZWlyIG93biBjYXZhbHJ5IGFuZCBob3BsaXRlczsgdGhlbiB0aGV5IGFkdmFuY2VkIGFsb25nIHRoZSBjYXJyaWFnZSByb2FkIHdoaWNoIGxlYWRzIHVwIHRvIFBpcmFldXMuCjwvdHJhbnNsYXRpb24+"
translation['2.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZm9yIGEgdGltZSB0aGUgbWVuIGZyb20gUGh5bGUgdHJpZWQgdG8gcHJldmVudCB0aGVpciBjb21pbmcgdXAsIGJ1dCB3aGVuIHRoZXkgc2F3IHRoYXQgdGhlIGxpbmUgb2YgdGhlIHRvd24gd2FsbCwgZXh0ZW5zaXZlIGFzIGl0IHdhcywgbmVlZGVkIGEgbGFyZ2UgZm9yY2UgZm9yIGl0cyBkZWZlbmNlLCB3aGVyZWFzIHRoZXkgd2VyZSBub3QgeWV0IG51bWVyb3VzLCB0aGV5IGdhdGhlcmVkIGluIGEgY29tcGFjdCBib2R5IG9uIHRoZSBoaWxsIG9mPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA0Ij40MDQgQi5DLjwvZGF0ZT48L25vdGU+IE11bmljaGlhLjxkYXRlIGF1dGhuYW1lPSItNDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA0Ij40MDQgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+T24gdGhlIGVhc3Rlcm4gc2lkZSBvZiB0aGUgUGlyYWV1cyBwZW5pbnN1bGEuPC9ub3RlPiBBbmQgdGhlIG1lbiBmcm9tIHRoZSBjaXR5LCB3aGVuIHRoZXkgY2FtZSB0byB0aGUgbWFya2V0LXBsYWNlIG9mIEhpcHBvZGFtdXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBhcmNoaXRlY3Qgb2YgdGhlIG1hcmtldC1wbGFjZSwgYXMgd2VsbCBhcyBvZiB0aGUgd2hvbGUgdG93biBvZiBQaXJhZXVzLjwvbm90ZT4gZmlyc3QgZm9ybWVkIHRoZW1zZWx2ZXMgaW4gbGluZSBvZiBiYXR0bGUsIHNvIHRoYXQgdGhleSBmaWxsZWQgdGhlIHJvYWQgd2hpY2ggbGVhZHMgdG8gdGhlIHRlbXBsZSBvZiBBcnRlbWlzIG9mIE11bmljaGlhIGFuZCB0aGUgc2FuY3R1YXJ5IG9mIEJlbmRpczsgYW5kIHRoZXkgbWFkZSBhIGxpbmUgbm90IGxlc3MgdGhhbiBmaWZ0eSBzaGllbGRzIGluIGRlcHRoOyB0aGVuLCBpbiB0aGlzIGZvcm1hdGlvbiwgdGhleSBhZHZhbmNlZCB1cCB0aGUgaGlsbC4KPC90cmFuc2xhdGlvbj4="
translation['2.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIG1lbiBmcm9tIFBoeWxlLCB0aGV5IHRvbyBmaWxsZWQgdGhlIHJvYWQsIGJ1dCB0aGV5IG1hZGUgYSBsaW5lIG5vdCBtb3JlIHRoYW4gdGVuIGhvcGxpdGVzIGluIGRlcHRoLiBCZWhpbmQgdGhlIGhvcGxpdGVzLCBob3dldmVyLCB3ZXJlIHN0YXRpb25lZCBwZWx0YXN0cyBhbmQgbGlnaHQgamF2ZWxpbi1tZW4sIGFuZCBiZWhpbmQgdGhlbSB0aGUgc3RvbmUtdGhyb3dlcnMuIEFuZCBvZiB0aGVzZSB0aGVyZSB3ZXJlIG1hbnksIGZvciB0aGV5IGNhbWUgZnJvbSB0aGF0IG5laWdoYm91cmhvb2QuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBub3csIHdoaWxlIHRoZSBlbmVteSB3ZXJlIGFkdmFuY2luZywgVGhyYXN5YnVsdXMgb3JkZXJlZCBoaXMgbWVuIHRvIGdyb3VuZCB0aGVpciBzaGllbGRzIGFuZCBkaWQgdGhlIHNhbWUgaGltc2VsZiwgdGhvdWdoIHN0aWxsIGtlZXBpbmcgdGhlIHJlc3Qgb2YgaGlzIGFybXMsIGFuZCB0aGVuIHRvb2sgaGlzIHN0YW5kIGluIHRoZSBtaWRzdCBvZiB0aGVtIGFuZCBzcG9rZSBhcyBmb2xsb3dzOgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz7igJxGZWxsb3ctY2l0aXplbnMsIEkgd2lzaCB0byBpbmZvcm0gc29tZSBvZiB5b3UgYW5kIHRvIHJlbWluZCBvdGhlcnMgdGhhdCB0aG9zZSB3aG8gZm9ybSB0aGUgcmlnaHQgd2luZyBvZiB0aGUgYXBwcm9hY2hpbmcgZm9yY2UgYXJlIHRoZSB2ZXJ5IG1lbiB3aG9tIHlvdSB0dXJuZWQgdG8gZmxpZ2h0IGFuZCBwdXJzdWVkIGZvdXIgZGF5cyBhZ28sIGJ1dCB0aGUgbWVuIHVwb24gdGhlIGV4dHJlbWUgbGVmdOKAlHRoZXksIHllcyB0aGV5LCBhcmUgdGhlIFRoaXJ0eSwgd2hvIHJvYmJlZCB1cyBvZiBvdXIgY2l0eSB3aGVuIHdlIHdlcmUgZ3VpbHR5IG9mIG5vIHdyb25nLCBhbmQgZHJvdmUgdXMgZnJvbSBvdXIgaG9tZXMsIGFuZCBwcm9zY3JpYmVkIHRob3NlIHdobyB3ZXJlIGRlYXJlc3QgdG8gdXMuIEJ1dCBub3csIGJlaG9sZCwgdGhleSBoYXZlIGZvdW5kIHRoZW1zZWx2ZXMgaW4gYSBzaXR1YXRpb24gaW4gd2hpY2ggdGhleSBuZXZlciBleHBlY3RlZCB0byBiZSwgYnV0IHdlIGFsd2F5cyBwcmF5ZWQgdGhhdCB0aGV5IG1pZ2h0IGJlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igd2l0aCBhcm1zIGluIG91ciBoYW5kcyB3ZSBzdGFuZCBmYWNlIHRvIGZhY2Ugd2l0aCB0aGVtOyBhbmQgdGhlIGdvZHMsIGJlY2F1c2Ugb25jZSB3ZSB3ZXJlIHNlaXplZCB3aGlsZSBkaW5pbmcgb3Igc2xlZXBpbmcgb3I8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvbm90ZT4gdHJhZGluZywgYmVjYXVzZSBzb21lIG9mIHVzIGFsc28gd2VyZSBiYW5pc2hlZCB3aGVuIHdlIHdlcmUgbm90IG9ubHkgZ3VpbHR5IG9mIG5vIG9mZmVuY2UsIGJ1dCB3ZXJlIG5vdCBldmVuIGluIHRoZSBjaXR5LCBhcmUgbm93IG1hbmlmZXN0bHkgZmlnaHRpbmcgb24gb3VyIHNpZGUuIEZvciBpbiBmYWlyIHdlYXRoZXIgdGhleSBzZW5kIGEgc3Rvcm0sIHdoZW4gaXQgaXMgdG8gb3VyIGFkdmFudGFnZSwgYW5kIHdoZW4gd2UgYXR0YWNrLCB0aGV5IGdyYW50IHVzLCB0aG91Z2ggd2UgYXJlIGZldyBpbiBudW1iZXIgYW5kIG91ciBlbmVtaWVzIGFyZSBtYW55LCB0byBzZXQgdXAgdHJvcGhpZXMgb2YgdmljdG9yeTsKPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgbm93IGluIGxpa2UgbWFubmVyIHRoZXkgaGF2ZSBicm91Z2h0IHVzIHRvIGEgcGxhY2Ugd2hlcmUgdGhlIG1lbiBiZWZvcmUgeW91LCBiZWNhdXNlIHRoZXkgYXJlIG1hcmNoaW5nIHVwIGhpbGwsIGNhbm5vdCB0aHJvdyBlaXRoZXIgc3BlYXJzIG9yIGphdmVsaW5zIG92ZXIgdGhlIGhlYWRzIG9mIHRob3NlIGluIGZyb250IG9mIHRoZW0sIHdoaWxlIHdlLCB0aHJvd2luZyBib3RoIHNwZWFycyBhbmQgamF2ZWxpbnMgYW5kIHN0b25lcyBkb3duIGhpbGwsIHNoYWxsIHJlYWNoIHRoZW0gYW5kIHN0cmlrZSBkb3duIG1hbnkuCjwvdHJhbnNsYXRpb24+"
translation['2.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhvdWdoIG9uZSB3b3VsZCBoYXZlIHN1cHBvc2VkIHRoYXQgd2Ugc2hvdWxkIGhhdmUgdG8gZmlnaHQgd2l0aCB0aGVpciBmcm9udCByYW5rcyBhdCBsZWFzdCBvbiBldmVuIHRlcm1zLCB5ZXQgaW4gZmFjdCwgaWYgeW91IGxldCBmbHkgeW91ciBtaXNzaWxlcyB3aXRoIGEgd2lsbCwgYXMgeW91IHNob3VsZCwgbm8gb25lIHdpbGwgbWlzcyBoaXMgbWFuIHdoZW4gdGhlIHJvYWQgaXMgZnVsbCBvZiB0aGVtLCBhbmQgdGhleSBpbiB0aGVpciBlZmZvcnRzIHRvIHByb3RlY3QgdGhlbXNlbHZlcyB3aWxsIGJlIGNvbnRpbnVhbGx5IHNrdWxraW5nIHVuZGVyIHRoZWlyIHNoaWVsZHMuIFlvdSB3aWxsIHRoZXJlZm9yZSBiZSBhYmxlLCBqdXN0IGFzIGlmIHRoZXkgd2VyZSBibGluZCBtZW4sIHRvIHN0cmlrZSB0aGVtIHdoZXJldmVyIHlvdSBwbGVhc2UgYW5kIHRoZW4gbGVhcCB1cG9uIHRoZW0gYW5kIG92ZXJ0aHJvdyB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm93LCBjb21yYWRlcywgd2UgbXVzdCBzbyBhY3QgdGhhdCBlYWNoIG1hbiBzaGFsbCBmZWVsIGluIGhpcyBicmVhc3QgdGhhdCBoZSBpcyBjaGllZmx5IHJlc3BvbnNpYmxlIGZvciB0aGUgdmljdG9yeS4gRm9yIHZpY3RvcnksIEdvZCB3aWxsaW5nLCB3aWxsIG5vdyBnaXZlIGJhY2sgdG8gdXMgY291bnRyeSBhbmQgaG9tZXMsIGZyZWVkb20gYW5kIGhvbm91cnMsIGNoaWxkcmVuLCB0byBzdWNoIGFzIGhhdmUgdGhlbSwgYW5kIHdpdmVzLiBIYXBweSwgaW5kZWVkLCBhcmUgdGhvc2Ugb2YgdXMgd2hvIHNoYWxsIHdpbiB0aGUgdmljdG9yeSBhbmQgbGl2ZSB0byBiZWhvbGQgdGhlIGdsYWRkZXN0IGRheSBvZiBhbGwhIEFuZCBoYXBweSBhbHNvIGhlIHdobyBpcyBzbGFpbjsgZm9yIG5vIG9uZSwgaG93ZXZlciByaWNoIGhlIG1heSBiZSwgd2lsbCBnYWluIGEgbW9udW1lbnQgc28gZ2xvcmlvdXMuIE5vdywgd2hlbiB0aGUgcmlnaHQgbW9tZW50IGNvbWVzLCBJIHdpbGwgc3RyaWtlIHVwIHRoZSBwYWVhbjsgYW5kIHdoZW4gd2UgY2FsbCBFbnlhbGl1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIEFyZXMuPC9ub3RlPiB0byBvdXIgYWlkLCB0aGVuIGxldCB1cyBhbGwsIG1vdmVkIGJ5IG9uZSBzcGlyaXQsIHRha2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvbm90ZT4gdmVuZ2VhbmNlIHVwb24gdGhlc2UgbWVuIGZvciB0aGUgb3V0cmFnZXMgd2UgaGF2ZSBzdWZmZXJlZC7igJ0KPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgc2F5aW5nIHRoZXNlIHdvcmRzIGFuZCB0dXJuaW5nIGFib3V0IHRvIGZhY2UgdGhlIGVuZW15LCBoZSBrZXB0IHF1aWV0OyBmb3IgdGhlIHNlZXIgYmFkZSB0aGVtIG5vdCB0byBhdHRhY2sgdW50aWwgb25lIG9mIHRoZWlyIG93biBudW1iZXIgd2FzIGVpdGhlciBraWxsZWQgb3Igd291bmRlZC4g4oCcQnV0IGFzIHNvb24gYXMgdGhhdCBoYXBwZW5zLOKAnSBoZSBzYWlkLCDigJx3ZSBzaGFsbCBsZWFkIG9uLCBhbmQgdG8geW91IHdobyBmb2xsb3cgd2lsbCBjb21lIHZpY3RvcnksIGJ1dCBkZWF0aCwgbWV0aGlua3MsIHRvIG1lLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaGlzIHNheWluZyBkaWQgbm90IHByb3ZlIGZhbHNlLCBmb3Igd2hlbiB0aGV5IGhhZCB0YWtlbiB1cCB0aGVpciBzaGllbGRzLCBoZSwgYXMgdGhvdWdoIGxlZCBvbiBieSBhIGtpbmQgb2YgZmF0ZSwgbGVhcGVkIGZvcnRoIGZpcnN0IG9mIGFsbCwgZmVsbCB1cG9uIHRoZSBlbmVteSwgYW5kIHdhcyBzbGFpbiwgYW5kIGhlIGxpZXMgYnVyaWVkIGF0IHRoZSBmb3JkIG9mIHRoZSBDZXBoaXN1czsgYnV0IHRoZSBvdGhlcnMgd2VyZSB2aWN0b3Jpb3VzLCBhbmQgcHVyc3VlZCB0aGUgZW5lbXkgYXMgZmFyIGFzIHRoZSBsZXZlbCBncm91bmQuIEluIHRoaXMgYmF0dGxlIGZlbGwgdHdvIG9mIHRoZSBUaGlydHksIENyaXRpYXMgYW5kIEhpcHBvbWFjaHVzLCBvbmUgb2YgdGhlIFRlbiB3aG8gcnVsZWQgaW4gUGlyYWV1cywgQ2hhcm1pZGVzLCB0aGUgc29uIG9mIEdsYXVjb24sIGFuZCBhYm91dCBzZXZlbnR5IG9mIHRoZSBvdGhlcnMuIEFuZCB0aGUgdmljdG9ycyB0b29rIHBvc3Nlc3Npb24gb2YgdGhlaXIgYXJtcywgYnV0IHRoZXkgZGlkIG5vdCBzdHJpcCBvZmYgdGhlIHR1bmljPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldvcm4gdW5kZXJuZWF0aCB0aGUgYnJlYXN0cGxhdGUuIFRoZSB2aWN0b3JzLCB0aGVuLCBhcHByb3ByaWF0ZWQgdGhlIGFybXMgYW5kIGFybW91ciBvZiB0aGUgZGVhZCwgYnV0IG5vdCB0aGVpciBjbG90aGluZy48L25vdGU+IG9mIGFueSBjaXRpemVuLiBXaGVuIHRoaXMgaGFkIGJlZW4gZG9uZSBhbmQgd2hpbGUgdGhleSB3ZXJlIGdpdmluZyBiYWNrIHRoZSBib2RpZXMgb2YgdGhlIGRlYWQsIG1hbnkgb24gZWl0aGVyIHNpZGUgbWluZ2xlZCBhbmQgdGFsa2VkIHdpdGggb25lIGFub3RoZXIuCjwvdHJhbnNsYXRpb24+"
translation['2.4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgQ2xlb2NyaXR1cywgdGhlIGhlcmFsZCBvZiB0aGUgaW5pdGlhdGVkLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIGluIHRoZSBFbGV1c2luaWFuIG15c3Rlcmllcy48L25vdGU+IGEgbWFuIHdpdGggYSB2ZXJ5IGZpbmUgdm9pY2UsIG9idGFpbmVkIHNpbGVuY2UgYW5kIHNhaWQ6IOKAnEZlbGxvdyBjaXRpemVucywgd2h5IGRvIHlvdSBkcml2ZSB1cyBvdXQgb2YgdGhlIGNpdHk/IHdoeSBkbyB5b3Ugd2lzaCB0byBraWxsIHVzPyBGb3Igd2UgbmV2ZXIgZGlkIHlvdSBhbnkgaGFybSwgYnV0IHdlIGhhdmUgc2hhcmVkIHdpdGggeW91IGluIHRoZSBtb3N0IHNvbGVtbiByaXRlcyBhbmQgc2FjcmlmaWNlcyBhbmQgdGhlIG1vc3Qgc3BsZW5kaWQgZmVzdGl2YWxzLCB3ZSBoYXZlIGJlZW4gY29tcGFuaW9ucyBpbiB0aGUgZGFuY2UgYW5kIHNjaG9vbG1hdGVzIGFuZCBjb21yYWRlcyBpbiBhcm1zLCBhbmQgd2UgaGF2ZSBicmF2ZWQgbWFueSBkYW5nZXJzIHdpdGggeW91IGJvdGggYnkgbGFuZCBhbmQgYnkgc2VhIGluIGRlZmVuc2Ugb2YgdGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDA0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA0Ij40MDQgQi5DLjwvZGF0ZT48L25vdGU+IGNvbW1vbiBzYWZldHkgYW5kIGZyZWVkb20gb2YgdXMgYm90aC4KPGRhdGUgYXV0aG5hbWU9Ii00MDQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDQiPjQwNCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGUgbmFtZSBvZiB0aGUgZ29kcyBvZiBvdXIgZmF0aGVycyBhbmQgbW90aGVycywgaW4gdGhlIG5hbWUgb2Ygb3VyIHRpZXMgb2Yga2luc2hpcCBhbmQgbWFycmlhZ2UgYW5kIGNvbXJhZGVzaGlwLOKAlGZvciBhbGwgdGhlc2UgbWFueSBvZiB1cyBzaGFyZSB3aXRoIG9uZSBhbm90aGVyLOKAlGNlYXNlLCBvdXQgb2Ygc2hhbWUgYmVmb3JlIGdvZHMgYW5kIG1lbiwgdG8gc2luIGFnYWluc3QgeW91ciBmYXRoZXJsYW5kLCBhbmQgZG8gbm90IG9iZXkgdGhvc2UgbW9zdCBhY2N1cnNlZCBUaGlydHksIHdobyBmb3IgdGhlIHNha2Ugb2YgdGhlaXIgcHJpdmF0ZSBnYWluIGhhdmUga2lsbGVkIGluIGVpZ2h0IG1vbnRocyBtb3JlIEF0aGVuaWFucywgYWxtb3N0LCB0aGFuIGFsbCB0aGUgUGVsb3Bvbm5lc2lhbnMgaW4gdGVuIHllYXJzIG9mIHdhci4KPC90cmFuc2xhdGlvbj4="
translation['2.4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB3ZSBtaWdodCBsaXZlIGluIHBlYWNlIGFzIGZlbGxvdyBjaXRpemVucywgdGhlc2UgbWVuIGJyaW5nIHVwb24gdXMgd2FyIHdpdGggb25lIGFub3RoZXIsIGEgd2FyIG1vc3QgdXR0ZXJseSBzaGFtZWZ1bCBhbmQgaW50b2xlcmFibGUsIHV0dGVybHkgdW5ob2x5IGFuZCBoYXRlZCBieSBib3RoIGdvZHMgYW5kIG1lbi4gWWV0IGZvciBhbGwgdGhhdCwgYmUgd2VsbCBhc3N1cmVkIHRoYXQgZm9yIHNvbWUgb2YgdGhvc2Ugbm93IHNsYWluIGJ5IG91ciBoYW5kcyBub3Qgb25seSB5b3UsIGJ1dCB3ZSBhbHNvLCBoYXZlIHdlcHQgYml0dGVybHku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRodXMgaGUgc3Bva2U7IGJ1dCB0aGUgc3Vydml2aW5nIG9mZmljaWFscyBvZiB0aGUgb2xpZ2FyY2h5LCBwYXJ0bHkgYmVjYXVzZSB0aGVpciBmb2xsb3dlcnMgd2VyZSBoZWFyaW5nIHN1Y2ggdGhpbmdzLCBsZWQgdGhlbSBiYWNrIHRvIHRoZSBjaXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgZm9sbG93aW5nIGRheSB0aGUgVGhpcnR5LCB1dHRlcmx5IGRlamVjdGVkIGFuZCB3aXRoIGJ1dCBmZXcgYWRoZXJlbnRzIGxlZnQsIGhlbGQgdGhlaXIgc2Vzc2lvbiBpbiB0aGUgY291bmNpbC1jaGFtYmVyOyBhbmQgYXMgZm9yIHRoZSBUaHJlZSBUaG91c2FuZCwgd2hlcmV2ZXIgdGhlaXIgc2V2ZXJhbCBkZXRhY2htZW50cyB3ZXJlIHN0YXRpb25lZCwgZXZlcnl3aGVyZSB0aGV5IGJlZ2FuIHRvIHF1YXJyZWwgd2l0aCBvbmUgYW5vdGhlci4gRm9yIGFsbCB0aG9zZSB3aG8gaGFkIGRvbmUgYW55IGFjdCBvZiBlc3BlY2lhbCB2aW9sZW5jZSBhbmQgd2VyZSB0aGVyZWZvcmUgZmVhcmZ1bCwgdXJnZWQgc3RyZW51b3VzbHkgdGhhdCB0aGV5IG91Z2h0IG5vdCB0byB5aWVsZCB0byB0aGUgbWVuIGluIFBpcmFldXM7IHdoaWxlIHRob3NlIHdobyB3ZXJlIGNvbmZpZGVudCB0aGF0IHRoZXkgaGFkIGRvbmUgbm8gd3JvbmcsIGFyZ3VlZCBpbiB0aGVpciBvd24gbWluZHMgYW5kIHNldCBmb3J0aCB0byB0aGUgb3RoZXJzIHRoYXQgdGhlcmUgd2FzIG5vIG5lZWQgb2YgdGhlaXIgc3VmZmVyaW5nIHRoZXNlIGV2aWxzLCBhbmQgdGhleSBzYWlkIHRoYXQgdGhleSBvdWdodCBub3QgdG8gb2JleSB0aGUgVGhpcnR5IG9yIGFsbG93IHRoZW0gdG8gcnVpbiB0aGUgc3RhdGUuIEluIHRoZSBlbmQgdGhleSB2b3RlZCB0byBkZXBvc2UgdGhlIFRoaXJ0eSBhbmQgY2hvb3NlIG90aGVycy4gQW5kIHRoZXkgY2hvc2UgdGVuLCBvbmUgZnJvbTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNCI+NDA0IEIuQy48L2RhdGU+PC9ub3RlPiBlYWNoIHRyaWJlLgo8ZGF0ZSBhdXRobmFtZT0iLTQwNCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwNCI+NDA0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['2.4.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIFRoaXJ0eSB0aGVyZXVwb24gcmV0aXJlZCB0byBFbGV1c2lzOyBhbmQgdGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDAzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDAzIj40MDMgQi5DLjwvZGF0ZT48L25vdGU+IFRlbiwgd2l0aCB0aGUgYWlkIG9mIHRoZSBjYXZhbHJ5IGNvbW1hbmRlcnMsIHRvb2sgY2FyZSBvZiB0aGUgbWVuIGluIHRoZSBjaXR5LCB3aG8gd2VyZSBpbiBhIHN0YXRlIG9mIGdyZWF0IGRpc3F1aWV0IGFuZCBkaXN0cnVzdCBvZiBvbmUgYW5vdGhlci4gSW4gZmFjdCwgZXZlbiB0aGUgY2F2YWxyeSBkaWQgZ3VhcmQgZHV0eSBieSBuaWdodCwgYmVpbmcgcXVhcnRlcmVkIGluIHRoZSBPZGV1bSBhbmQga2VlcGluZyB3aXRoIHRoZW0gYm90aCB0aGVpciBob3JzZXMgYW5kIHRoZWlyIHNoaWVsZHM8ZGF0ZSBhdXRobmFtZT0iLTQwMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwMyI+NDAzIEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gaW4gb3JkZXIgdG8gc2VydmUgYm90aCBhcyBob3JzZW1lbiBhbmQgYXMgaG9wbGl0ZXMuIFNlZSBiZWxvdyBhbmQgY3AuIG5vdGUgb24gaWlpLiA0OC48L25vdGU+OyBhbmQgc3VjaCB3YXMgdGhlIHN1c3BpY2lvbiB0aGF0IHByZXZhaWxlZCwgdGhhdCB0aGV5IHBhdHJvbGxlZCBhbG9uZyB0aGUgd2FsbHM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiBvdXRzaWRlIHRoZSB3YWxscyAoc2VlIG5vdGUgb24gT2RldW0sICA5KS4gSW4gdGhlaXIg4oCcZGlzdHJ1c3Qgb2Ygb25lIGFub3RoZXLigJ0gKHNlZSBhYm92ZSkgdGhleSBzb3VnaHQgYnkgdGhpcyBtZWFucyB0byBwcmV2ZW50IGRlc2VydGlvbnMgdG8gUGlyYWV1cy48L25vdGU+IGZyb20gZXZlbmluZyBvbndhcmRzIHdpdGggdGhlaXIgc2hpZWxkcywgYW5kIHRvd2FyZCBkYXduIHdpdGggdGhlaXIgaG9yc2VzLCBmZWFyaW5nIGNvbnRpbnVhbGx5IHRoYXQgdGhleSBtaWdodCBiZSBhdHRhY2tlZCBieSBwYXJ0aWVzIG9mIG1lbiBmcm9tIFBpcmFldXMuCjwvdHJhbnNsYXRpb24+"
translation['2.4.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbGF0dGVyLCB3aG8gd2VyZSBub3cgbnVtZXJvdXMgYW5kIGluY2x1ZGVkIGFsbCBzb3J0cyBvZiBwZW9wbGUsIHdlcmUgZW5nYWdlZCBpbiBtYWtpbmcgc2hpZWxkcywgc29tZSBvZiB3b29kLCBvdGhlcnMgb2Ygd2lja2VyLXdvcmssIGFuZCBpbiBwYWludGluZyB0aGVtLiBBbmQgaGF2aW5nIGdpdmVuIHBsZWRnZXMgdGhhdCB3aG9ldmVyIGZvdWdodCB3aXRoIHRoZW0gc2hvdWxkIGJlIGFjY29yZGVkIGVxdWFsaXR5IGluIHRheGF0aW9uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgZmF2b3VyZWQgY2xhc3Mgb2YgcmVzaWRlbnQgYWxpZW5zLCB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b23z4POv8+AzrXOu861Pc65z4I8L2ZvcmVpZ24+LCBzdG9vZCB1cG9uIGFuIGVxdWFsIGZvb3Rpbmcgd2l0aCBBdGhlbmlhbiBjaXRpemVucyBpbiByZXNwZWN0IHRvIHRheGVzLjwvbm90ZT4gd2l0aCBjaXRpemVucyBldmVuIGlmIHRoZXkgd2VyZSBmb3JlaWduZXJzLCB0aGV5IG1hcmNoZWQgZm9ydGggYmVmb3JlIHRlbiBkYXlzIGhhZCBwYXNzZWQsIGEgbGFyZ2UgYm9keSBvZiBob3BsaXRlcyB3aXRoIG51bWVyb3VzIGxpZ2h0IHRyb29wczsgdGhleSBhbHNvIGdvdCB0b2dldGhlciBhYm91dCBzZXZlbnR5IGhvcnNlbWVuOyBhbmQgdGhleSBtYWRlIGZvcmF5cyBhbmQgY29sbGVjdGVkIHdvb2QgYW5kIHByb2R1Y2UsIGFuZCB0aGVuIGNhbWUgYmFjayB0byBzcGVuZCB0aGUgbmlnaHQgaW4gUGlyYWV1cy4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b23z4POv8+AzrXOu861Pc65z4I8L2ZvcmVpZ24+LCBzdG9vZCB1cG9uIGFuIGVxdWFsIGZvb3Rpbmcgd2l0aCBBdGhlbmlhbiBjaXRpemVucyBpbiByZXNwZWN0IHRvIHRheGVzLjwvdHJhbnNsYXRpb24+"
translation['2.4.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIG1lbiBpbiB0aGUgY2l0eSwgbm9uZSBvZiB0aGVtIHdlbnQgZm9ydGggZnJvbSB0aGUgd2FsbHMgdW5kZXIgYXJtcyBleGNlcHQgdGhlIGNhdmFscnksIHdobyBzb21ldGltZXMgY2FwdHVyZWQgZm9yYWdpbmcgcGFydGllcyBtYWRlIHVwIG9mIHRoZSBtZW4gZnJvbSBQaXJhZXVzIGFuZCBpbmZsaWN0ZWQgbG9zc2VzIHVwb24gdGhlaXIgbWFpbiBib2R5LiBUaGV5IGFsc28gZmVsbCBpbiB3aXRoIHNvbWUgcGVvcGxlIG9mIEFleG9uZSB3aG8gd2VyZSBnb2luZyB0byB0aGVpciBvd24gZmFybXMgYWZ0ZXIgcHJvdmlzaW9uczs8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDMiPjQwMyBCLkMuPC9kYXRlPjwvbm90ZT4gYW5kIEx5c2ltYWNodXMsIHRoZSBjYXZhbHJ5IGNvbW1hbmRlciwgcHV0IHRoZXNlIG1lbiB0byB0aGUgc3dvcmQsIGFsdGhvdWdoIHRoZXkgcGxlYWRlZCBlYXJuZXN0bHkgYW5kIG1hbnkgb2YgdGhlIGNhdmFscnltZW4gd2VyZSBtdWNoIG9wcG9zZWQgdG8gdGhlIHByb2NlZWRpbmcuCjxkYXRlIGF1dGhuYW1lPSItNDAzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDAzIj40MDMgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['2.4.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5JbiByZXRhbGlhdGlvbiwgdGhlIG1lbiBpbiBQaXJhZXVzIGtpbGxlZCBvbmUgb2YgdGhlIGNhdmFscnltZW4sIENhbGxpc3RyYXR1cywgb2YgdGhlIHRyaWJlIG9mIExlb250aXMsIGhhdmluZyBjYXB0dXJlZCBoaW0gaW4gdGhlIGNvdW50cnkuIEZvciBieSB0aGlzIHRpbWUgdGhleSB3ZXJlIHZlcnkgY29uZmlkZW50LCBzbyB0aGF0IHRoZXkgZXZlbiBtYWRlIGF0dGFja3MgdXBvbiB0aGUgd2FsbCBvZiB0aGUgY2l0eS4gQW5kIHBlcmhhcHMgaXQgaXMgcHJvcGVyIHRvIG1lbnRpb24gYWxzbyB0aGUgZm9sbG93aW5nIGRldmljZSBvZiB0aGUgZW5naW5lZXIgaW4gdGhlIGNpdHk6IHdoZW4gaGUgbGVhcm5lZCB0aGF0IHRoZSBlbmVteSB3ZXJlIGludGVuZGluZyB0byBicmluZyB1cCB0aGVpciBzaWVnZS1lbmdpbmVzIGJ5IHRoZSByYWNlLWNvdXJzZSB3aGljaCBsZWFkcyBmcm9tIHRoZSBMeWNldW0sIGhlIG9yZGVyZWQgYWxsIGhpcyB0ZWFtcyB0byBoYXVsIHN0b25lcyBlYWNoIGxhcmdlIGVub3VnaCB0byBsb2FkIGEgd2Fnb24gYW5kIGRyb3AgdGhlbSBhdCB3aGF0ZXZlciBzcG90IGluIHRoZSBjb3Vyc2UgZWFjaCBkcml2ZXIgcGxlYXNlZC4gV2hlbiB0aGlzIGhhZCBiZWVuIGRvbmUsIGVhY2ggc2luZ2xlIG9uZSBvZiB0aGUgc3RvbmVzIGNhdXNlZCB0aGUgZW5lbXkgYSBncmVhdCBkZWFsIG9mIHRyb3VibGUuCjwvdHJhbnNsYXRpb24+"
translation['2.4.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIG5vdywgd2hlbiB0aGUgVGhpcnR5IGluIEVsZXVzaXMgc2VudCBhbWJhc3NhZG9ycyB0byBMYWNlZGFlbW9uLCBhbmQgbGlrZXdpc2UgdGhvc2UgaW4gdGhlIGNpdHkgd2hvIHdlcmUgb24gdGhlIHJvbGwsIGFuZCBhc2tlZCBmb3IgYWlkIG9uIHRoZSBwbGVhIHRoYXQgdGhlIGNvbW1vbnMgaGFkIHJldm9sdGVkIGZyb20gdGhlIExhY2VkYWVtb25pYW5zLCBMeXNhbmRlciwgY2FsY3VsYXRpbmcgdGhhdCBpdCB3YXMgcG9zc2libGUgdG8gYmxvY2thZGUgdGhlIG1lbiBpbiBQaXJhZXVzIGJvdGggYnkgbGFuZCBhbmQgYnkgc2VhIGFuZCB0byBmb3JjZSB0aGVtIHRvIGEgcXVpY2sgc3VycmVuZGVyIGlmIHRoZXkgd2VyZSBjdXQgb2ZmIGZyb20gcHJvdmlzaW9ucywgbGVudCBoaXMgYXNzaXN0YW5jZSB0byB0aGUgYW1iYXNzYWRvcnMsIHdpdGggdGhlIHJlc3VsdCB0aGF0IGEgaHVuZHJlZCB0YWxlbnRzIHdhcyBsb2FuZWQgdG8gdGhlIEF0aGVuaWFuIG9saWdhcmNocyBhbmQgdGhhdCBMeXNhbmRlciBoaW1zZWxmIHdhcyBzZW50IG91dCBhcyBnb3Zlcm5vciBvbiBsYW5kIGFuZCBoaXMgYnJvdGhlciBMaWJ5cyBhcyBhZG1pcmFsIG9mIHRoZSBmbGVldC4KPC90cmFuc2xhdGlvbj4="
translation['2.4.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSwgTHlzYW5kZXIgcHJvY2VlZGVkIHRvIEVsZXVzaXMgYW5kIGJ1c2llZCBoaW1zZWxmIHdpdGggZ2F0aGVyaW5nIGEgbGFyZ2UgZm9yY2Ugb2YgUGVsb3Bvbm5lc2lhbiBob3BsaXRlczsgbWVhbndoaWxlIHRoZSBhZG1pcmFsIGtlcHQgZ3VhcmQgb24gdGhlIHNlYSwgdG8gcHJldmVudCBhbnkgc3VwcGxpZXMgZnJvbSBjb21pbmcgaW4gYnkgd2F0ZXIgdG8gdGhlIGJlc2llZ2VkOyBzbyB0aGF0IHRoZSBtZW4gaW4gUGlyYWV1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwMyI+NDAzIEIuQy48L2RhdGU+PC9ub3RlPiB3ZXJlIHNvb24gaW4gZGlmZmljdWx0aWVzIGFnYWluLCB3aGlsZSB0aGUgbWVuIGluIHRoZSBjaXR5IGFnYWluIGhhZCB0aGVpciB0dXJuIG9mIGJlaW5nIGNvbmZpZGVudCwgaW4gcmVsaWFuY2UgdXBvbiBMeXNhbmRlci4gV2hpbGUgbWF0dGVycyB3ZXJlIHByb2NlZWRpbmcgaW4gdGhpcyB3YXksIFBhdXNhbmlhcyB0aGUga2luZywgc2VpemVkIHdpdGggZW52eSBvZiBMeXNhbmRlciBiZWNhdXNlLCBieSBhY2NvbXBsaXNoaW5nIHRoaXMgcHJvamVjdCwgaGUgd291bGQgbm90IG9ubHkgd2luIGZhbWUgYnV0IGFsc28gbWFrZSBBdGhlbnMgaGlzIG93biwgcGVyc3VhZGVkIHRocmVlIG9mIHRoZSBmaXZlIGVwaG9ycyBhbmQgbGVkIGZvcnRoIGEgTGFjZWRhZW1vbmlhbiBhcm15Lgo8ZGF0ZSBhdXRobmFtZT0iLTQwMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwMyI+NDAzIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['2.4.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYWxsIHRoZSBhbGxpZXMgbGlrZXdpc2UgZm9sbG93ZWQgd2l0aCBoaW0sIGV4Y2VwdGluZyB0aGUgQm9lb3RpYW5zIGFuZCB0aGUgQ29yaW50aGlhbnM7IGFuZCB0aGUgcGxlYSBvZiB0aGVzZSB3YXMgdGhhdCB0aGV5IGRpZCBub3QgdGhpbmsgdGhleSB3b3VsZCBiZSB0cnVlIHRvIHRoZWlyIG9hdGhzIGlmIHRoZXkgdG9vayB0aGUgZmllbGQgYWdhaW5zdCB0aGUgQXRoZW5pYW5zIHdoZW4gdGhlIGxhdHRlciB3ZXJlIGRvaW5nIG5vdGhpbmcgaW4gdmlvbGF0aW9uIG9mIHRoZSB0cmVhdHk7IGluIGZhY3QsIGhvd2V2ZXIsIHRoZXkgYWN0ZWQgYXMgdGhleSBkaWQgYmVjYXVzZSB0aGV5IHN1cHBvc2VkIHRoYXQgdGhlIExhY2VkYWVtb25pYW5zIHdhbnRlZCB0byBtYWtlIHRoZSB0ZXJyaXRvcnkgb2YgdGhlIEF0aGVuaWFucyB0aGVpciBvd24gc3VyZSBwb3NzZXNzaW9uLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TbyBQYXVzYW5pYXMgZW5jYW1wZWQgb24gdGhlIHBsYWluIHdoaWNoIGlzIGNhbGxlZCBIYWxpcGVkdW0sIG5lYXIgUGlyYWV1cywgaGltc2VsZiBjb21tYW5kaW5nIHRoZSByaWdodCB3aW5nLCB3aGlsZSBMeXNhbmRlciBhbmQgaGlzIG1lcmNlbmFyaWVzIGZvcm1lZCB0aGUgbGVmdC4KPC90cmFuc2xhdGlvbj4="
translation['2.4.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuLCBzZW5kaW5nIGFtYmFzc2Fkb3JzIHRvIHRoZSBtZW4gaW4gUGlyYWV1cywgUGF1c2FuaWFzIGJhZGUgdGhlbSBkaXNwZXJzZSB0byB0aGVpciBob21lczsgYW5kIHdoZW4gdGhleSByZWZ1c2VkIHRvIG9iZXksIGhlIGF0dGFja2VkIHRoZW0sIGF0IGxlYXN0IHNvIGZhciBhcyB0byByYWlzZSB0aGUgd2FyLWNyeSwgaW4gb3JkZXIgdGhhdCBpdCBtaWdodCBub3QgYmUgZXZpZGVudCB0aGF0IGhlIGZlbHQga2luZGx5IHRvd2FyZCB0aGVtLiBBbmQgd2hlbiBoZSBoYWQgcmV0aXJlZCB3aXRob3V0IGFjY29tcGxpc2hpbmcgYW55dGhpbmcgYnkgaGlzIGF0dGFjaywgb24gdGhlIG5leHQgZGF5IGhlIHRvb2sgdHdvIHJlZ2ltZW50cyBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIHRocmVlIHRyaWJlcyBvZiB0aGUgQXRoZW5pYW4gY2F2YWxyeSBhbmQgcHJvY2VlZGVkIGFsb25nIHRoZSBzaG9yZSB0byB0aGUgU3RpbGwgSGFyYm91ciw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QXBwYXJlbnRseSB0aGUgaW5sZXQgdG8gdGhlIHdlc3Qgb2YgdGhlIG1haW4gaGFyYm91ciBvZiBQaXJhZXVzLjwvbm90ZT4gbG9va2luZyB0byBzZWUgd2hlcmUgUGlyYWV1cyBjb3VsZCBiZXN0IGJlIHNodXQgb2ZmIGJ5IGEgd2FsbC4KPC90cmFuc2xhdGlvbj4="
translation['2.4.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBoZSB3YXMgcmV0dXJuaW5nLCBzb21lIG9mIHRoZSBlbmVteSBhdHRhY2tlZCBoaW0gYW5kIGNhdXNlZCBoaW0gdHJvdWJsZSwgd2hlcmV1cG9uLCBiZWNvbWluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwMyI+NDAzIEIuQy48L2RhdGU+PC9ub3RlPiBhbmdyeSwgaGUgb3JkZXJlZCB0aGUgY2F2YWxyeSB0byBjaGFyZ2UgdXBvbiB0aGVtIGF0IGZ1bGwgc3BlZWQsIGFuZCB0aGUgaW5mYW50cnltZW4gd2l0aGluIHRlbiB5ZWFycyBvZiBtaWxpdGFyeSBhZ2U8ZGF0ZSBhdXRobmFtZT0iLTQwMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwMyI+NDAzIEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkkuZS4gdGhlIHlvdW5nZXN0IHRlbiB5ZWFyLWNsYXNzZXMsIGVhY2ggeWVhci1jbGFzcyBpbmNsdWRpbmcgdGhvc2Ugd2hvIHJlYWNoZWQgbWlsaXRhcnkgYWdlIChJLmUuLCB0aGUgYWdlIG9mIDIwKSBpbiB0aGUgc2FtZSB5ZWFyLjwvbm90ZT4gdG8gZm9sbG93IHRoZSBjYXZhbHJ5OyB3aGlsZSBoZSBoaW1zZWxmIHdpdGggdGhlIHJlc3Qgb2YgaGlzIHRyb29wcyBjYW1lIGFsb25nIGluIHRoZSByZWFyLiBBbmQgdGhleSBraWxsZWQgbmVhcmx5IHRoaXJ0eSBvZiB0aGUgZW5lbXkncyBsaWdodCB0cm9vcHMgYW5kIHB1cnN1ZWQgdGhlIHJlc3QgdG8gdGhlIHRoZWF0cmUgaW4gUGlyYWV1cy4KPC90cmFuc2xhdGlvbj4="
translation['2.4.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSwgYXMgaXQgY2hhbmNlZCwgdGhlIHdob2xlIGJvZHkgb2YgdGhlIGxpZ2h0IHRyb29wcyBhbmQgbGlrZXdpc2UgdGhlIGhvcGxpdGVzIG9mIHRoZSBtZW4gaW4gUGlyYWV1cyB3ZXJlIGFybWluZyB0aGVtc2VsdmVzLiBBbmQgdGhlIGxpZ2h0IHRyb29wcywgcnVzaGluZyBmb3J0aCBhdCBvbmNlLCBzZXQgdG8gdGhyb3dpbmcgamF2ZWxpbnMsIGh1cmxpbmcgc3RvbmVzLCBzaG9vdGluZyBhcnJvd3MsIGFuZCBkaXNjaGFyZ2luZyBzbGluZ3M7IHRoZW4gdGhlIExhY2VkYWVtb25pYW5zLCBzaW5jZSBtYW55IG9mIHRoZW0gd2VyZSBiZWluZyB3b3VuZGVkIGFuZCB0aGV5IHdlcmUgaGFyZCBwcmVzc2VkLCBnYXZlIGdyb3VuZCwgdGhvdWdoIHN0aWxsIGZhY2luZyB0aGUgZW5lbXk7IGFuZCBhdCB0aGlzIHRoZSBsYXR0ZXIgYXR0YWNrZWQgbXVjaCBtb3JlIHZpZ29yb3VzbHkuIEluIHRoaXMgYXR0YWNrIENoYWVyb24gYW5kIFRoaWJyYWNodXMsIGJvdGggb2YgdGhlbSBwb2xlbWFyY2hzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgdGl0bGUgb2YgdGhlIGNvbW1hbmRlciBvZiBhIExhY2VkYWVtb25pYW4gcmVnaW1lbnQuPC9ub3RlPiB3ZXJlIHNsYWluLCBhbmQgTGFjcmF0ZXMsIHRoZSBPbHltcGljIHZpY3RvciwgYW5kIG90aGVyIExhY2VkYWVtb25pYW5zIHdobyBsaWUgYnVyaWVkIGJlZm9yZSB0aGUgZ2F0ZXMgb2YgQXRoZW5zIGluIHRoZSBDZXJhbWVpY3VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgVGhyYXN5YnVsdXMgYW5kIHRoZSByZXN0IG9mIGhpcyB0cm9vcHPigJR0aGF0IGlzLCB0aGUgaG9wbGl0ZXPigJR3aGVuIHRoZXkgc2F3IHRoZSBzaXR1YXRpb24sIGNhbWUgcnVubmluZyB0byBsZW5kIGFpZCwgYW5kIHF1aWNrbHkgZm9ybWVkIGluIGxpbmUsIGVpZ2h0IGRlZXAsIGluIGZyb250IG9mIHRoZWlyIGNvbXJhZGVzLiBBbmQgUGF1c2FuaWFzLCBiZWluZyBoYXJkIHByZXNzZWQgYW5kIHJldHJlYXRpbmcgYWJvdXQgZm91ciBvciBmaXZlIHN0YWRpYSB0byBhIGhpbGwsIHNlbnQgb3JkZXJzIHRvIHRoZSBMYWNlZGFlbW9uaWFucyBhbmQgdG8gdGhlIGFsbGllcyB0byBqb2luIGhpbS4gVGhlcmUgaGUgZm9ybWVkIGFuIGV4dHJlbWVseSBkZWVwIHBoYWxhbnggYW5kIGxlZCB0aGUgY2hhcmdlIGFnYWluc3QgdGhlIEF0aGVuaWFucy4gVGhlIEF0aGVuaWFucyBkaWQgaW5kZWVkIGFjY2VwdCBiYXR0bGUgYXQgY2xvc2UgcXVhcnRlcnM7IGJ1dCBpbiB0aGUgZW5kIHNvbWUgb2YgdGhlbSB3ZXJlIHB1c2hlZCBpbnRvIHRoZSBtaXJlIG9mIHRoZSBtYXJzaCBvZiBIYWxhZSBhbmQgb3RoZXJzIGdhdmUgd2F5OyBhbmQgYWJvdXQgb25lIGh1bmRyZWQgYW5kIGZpZnR5IG9mIHRoZW0gd2VyZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwMyI+NDAzIEIuQy48L2RhdGU+PC9ub3RlPiBzbGFpbi4KPGRhdGUgYXV0aG5hbWU9Ii00MDMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDMiPjQwMyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['2.4.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmV1cG9uIFBhdXNhbmlhcyBzZXQgdXAgYSB0cm9waHkgYW5kIHJldHVybmVkIHRvIGhpcyBjYW1wOyBhbmQgZGVzcGl0ZSB3aGF0IGhhZCBoYXBwZW5lZCBoZSB3YXMgbm90IGFuZ3J5IHdpdGggdGhlbSwgYnV0IHNlbnQgc2VjcmV0bHkgYW5kIGluc3RydWN0ZWQgdGhlIG1lbiBpbiBQaXJhZXVzIHRvIHNlbmQgYW1iYXNzYWRvcnMgdG8gaGltIGFuZCB0aGUgZXBob3JzIHdobyB3ZXJlIHdpdGggaGltLCB0ZWxsaW5nIHRoZW0gYWxzbyB3aGF0IHByb3Bvc2FscyB0aGVzZSBhbWJhc3NhZG9ycyBzaG91bGQgb2ZmZXI7IGFuZCB0aGV5IG9iZXllZCBoaW0uIEhlIGFsc28gc2V0IGFib3V0IGRpdmlkaW5nIHRoZSBtZW4gaW4gdGhlIGNpdHksIGFuZCBnYXZlIGRpcmVjdGlvbnMgdGhhdCBhcyBtYW55IG9mIHRoZW0gYXMgcG9zc2libGUgc2hvdWxkIGdhdGhlciB0b2dldGhlciBhbmQgY29tZSB0byBoaW0gYW5kIHRoZSBlcGhvcnMgYW5kIHNheSB0aGF0IHRoZXkgaGFkIG5vIGRlc2lyZSB0byBiZSB3YWdpbmcgd2FyIHdpdGggdGhlIG1lbiBpbiBQaXJhZXVzLCBidXQgcmF0aGVyIHRvIGJlIHJlY29uY2lsZWQgd2l0aCB0aGVtIGFuZCBpbiBjb21tb24gd2l0aCB0aGVtIHRvIGJlIGZyaWVuZHMgb2YgdGhlIExhY2VkYWVtb25pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgTmF1Y2xlaWRhcyBhbHNvLCB3aG8gd2FzIGFuIGVwaG9yLCB3YXMgcGxlYXNlZCB0byBoZWFyIHRoaXMuIEZvciwgYXMgaXQgaXMgY3VzdG9tYXJ5IGZvciB0d28gb2YgdGhlIGVwaG9ycyB0byBiZSB3aXRoIGEga2luZyBvbiBhIGNhbXBhaWduLCBzbyBpbiB0aGlzIGluc3RhbmNlIE5hdWNsZWlkYXMgYW5kIG9uZSBvdGhlciB3ZXJlIHByZXNlbnQsIGFuZCBib3RoIG9mIHRoZW0gaGVsZCB0byB0aGUgcG9saWN5IG9mIFBhdXNhbmlhcyByYXRoZXIgdGhhbiB0byB0aGF0IG9mIEx5c2FuZGVyLiBGb3IgdGhpcyByZWFzb24gdGhleSBlYWdlcmx5IHNlbnQgdG8gTGFjZWRhZW1vbiBib3RoIHRoZSBlbnZveXMgZnJvbSBQaXJhZXVzLCBoYXZpbmcgdGhlIHByb3Bvc2FscyBmb3IgcGVhY2Ugd2l0aCB0aGUgTGFjZWRhZW1vbmlhbnMsIGFuZCB0aGUgZW52b3lzIGZyb20gdGhlIGNpdHkgcGFydHkgYXMgcHJpdmF0ZSBpbmRpdmlkdWFscywgbmFtZWx5LCBDZXBoaXNvcGhvbiBhbmQgTWVsZXR1cy4KPC90cmFuc2xhdGlvbj4="
translation['2.4.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBob3dldmVyLCB0aGVzZSBtZW4gaGFkIGRlcGFydGVkIGZvciBMYWNlZGFlbW9uLCB0aGUgYXV0aG9yaXRpZXMgaW4gdGhlIGNpdHkgYWxzbyBwcm9jZWVkZWQgdG8gc2VuZCBhbWJhc3NhZG9ycywgd2l0aCB0aGUgbWVzc2FnZSB0aGF0IHRoZXkgc3VycmVuZGVyZWQgYm90aCB0aGUgd2FsbHMgd2hpY2ggdGhleSBwb3NzZXNzZWQgYW5kIHRoZW1zZWx2ZXMgdG8gdGhlIExhY2VkYWVtb25pYW5zLCB0byBkbyB3aXRoIHRoZW0gYXMgdGhleSB3aXNoZWQ7IGFuZCB0aGV5IHNhaWQgdGhleSBjb3VudGVkIGl0IG9ubHkgZmFpciB0aGF0IHRoZSBtZW4gaW4gUGlyYWV1cywgaWYgdGhleSBjbGFpbWVkIHRvIGJlIGZyaWVuZHMgb2YgdGhlIExhY2VkYWVtb25pYW5zLCBzaG91bGQgaW4gbGlrZSBtYW5uZXIgc3VycmVuZGVyIFBpcmFldXMgYW5kIE11bmljaGlhLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSBlcGhvcnMgYW5kIHRoZSBtZW1iZXJzIG9mIHRoZSBMYWNlZGFlbW9uaWFuIGFzc2VtYmx5IGhhZCBoZWFyZCBhbGwgdGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDAzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDAzIj40MDMgQi5DLjwvZGF0ZT48L25vdGU+IGFtYmFzc2Fkb3JzLCB0aGV5IGRpc3BhdGNoZWQgZmlmdGVlbiBtZW4gdG8gQXRoZW5zIGFuZCBjb21taXNzaW9uZWQgdGhlbSwgaW4gY29uanVuY3Rpb24gd2l0aCBQYXVzYW5pYXMsIHRvIGVmZmVjdCBhIHJlY29uY2lsaWF0aW9uIGluIHRoZSBiZXN0IHdheSB0aGV5IGNvdWxkLiBBbmQgdGhleSBlZmZlY3RlZCBhIHJlY29uY2lsaWF0aW9uIG9uIHRoZXNlIHRlcm1zLCB0aGF0IHRoZSB0d28gcGFydGllcyBzaG91bGQgYmUgYXQgcGVhY2Ugd2l0aCBvbmUgYW5vdGhlciBhbmQgdGhhdCBldmVyeSBtYW4gc2hvdWxkIGRlcGFydCB0byBoaXMgaG9tZSBleGNlcHQgdGhlIG1lbWJlcnMgb2YgdGhlIFRoaXJ0eSwgYW5kIG9mIHRoZSBFbGV2ZW4sIGFuZCBvZiB0aGUgVGVuIHdobyBoYWQgcnVsZWQgaW4gUGlyYWV1cy4gVGhleSBhbHNvIGRlY2lkZWQgdGhhdCBpZiBhbnkgb2YgdGhlIG1lbiBpbiB0aGUgY2l0eSB3ZXJlIGFmcmFpZCwgdGhleSBzaG91bGQgc2V0dGxlIGF0IEVsZXVzaXMuCjxkYXRlIGF1dGhuYW1lPSItNDAzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDAzIj40MDMgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['2.4.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGVzZSB0aGluZ3MgaGFkIGJlZW4gYWNjb21wbGlzaGVkLCBQYXVzYW5pYXMgZGlzYmFuZGVkIGhpcyBhcm15IGFuZCB0aGUgbWVuIGZyb20gUGlyYWV1cyB3ZW50IHVwIHRvIHRoZSBBY3JvcG9saXMgdW5kZXIgYXJtcyBhbmQgb2ZmZXJlZCBzYWNyaWZpY2UgdG8gQXRoZW5hLiBXaGVuIHRoZXkgaGFkIGNvbWUgZG93biwgdGhlIGdlbmVyYWxzIGNvbnZlbmVkIGFuIEFzc2VtYmx5LiBUaGVyZSBUaHJhc3lidWx1cyBzcG9rZSBhcyBmb2xsb3dzOgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz7igJxJIGFkdmlzZSB5b3Us4oCdIGhlIHNhaWQsIOKAnG1lbiBvZiB0aGUgY2l0eSwgdG8gYGtub3cgeW91cnNlbHZlcy4nIEFuZCB5b3Ugd291bGQgYmVzdCBsZWFybiB0byBrbm93IHlvdXJzZWx2ZXMgd2VyZSB5b3UgdG8gY29uc2lkZXIgd2hhdCBncm91bmRzIHlvdSBoYXZlIGZvciBhcnJvZ2FuY2UsIHRoYXQgeW91IHNob3VsZCB1bmRlcnRha2UgdG8gcnVsZSBvdmVyIHVzLiBBcmUgeW91IG1vcmUganVzdD8gQnV0IHRoZSBjb21tb25zLCB0aG91Z2ggcG9vcmVyIHRoYW4geW91LCBuZXZlciBkaWQgeW91IGFueSB3cm9uZyBmb3IgdGhlIHNha2Ugb2YgbW9uZXk7IHdoaWxlIHlvdSwgdGhvdWdoIHJpY2hlciB0aGFuIGFueSBvZiB0aGVtLCBoYXZlIGRvbmUgbWFueSBkaXNncmFjZWZ1bCB0aGluZ3MgZm9yIHRoZSBzYWtlIG9mIGdhaW4uIEJ1dCBzaW5jZSB5b3UgY2FuIGxheSBubyBjbGFpbSB0byBqdXN0aWNlLCBjb25zaWRlciB0aGVuIHdoZXRoZXIgaXQgaXMgY291cmFnZSB0aGF0IHlvdSBoYXZlIGEgcmlnaHQgdG8gcHJpZGUgeW91cnNlbHZlcyB1cG9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.4.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hhdCBiZXR0ZXIgdGVzdCBjb3VsZCB0aGVyZSBiZSBvZiB0aGlzIHRoYW4gdGhlIHdheSB3ZSBtYWRlIHdhciB1cG9uIG9uZSBhbm90aGVyPyBXZWxsIHRoZW4sIHdvdWxkIHlvdSBzYXkgdGhhdCB5b3UgYXJlIHN1cGVyaW9yIGluIGludGVsbGlnZW5jZSwgeW91IHdobyBoYXZpbmcgYSB3YWxsLCBhcm1zLCBtb25leSwgYW5kIHRoZSBQZWxvcG9ubmVzaWFucyBhcyBhbGxpZXMsIGhhdmUgYmVlbiB3b3JzdGVkIGJ5IG1lbiB3aG8gaGFkIG5vbmUgb2YgdGhlc2U/IElzIGl0IHRoZSBMYWNlZGFlbW9uaWFucywgdGhlbiwgdGhpbms8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDMiPjQwMyBCLkMuPC9kYXRlPjwvbm90ZT4geW91LCB0aGF0IHlvdSBtYXkgcHJpZGUgeW91cnNlbHZlcyB1cG9uPyBIb3cgc28/IFdoeSwgdGhleSBoYXZlIGRlbGl2ZXJlZCB5b3UgdXAgdG8gdGhpcyBvdXRyYWdlZCBwb3B1bGFjZSwganVzdCBhcyBtZW4gZmFzdGVuIGEgY2xvZyB1cG9uIHRoZSBuZWNrcyBvZiBzbmFwcGluZyBkb2dzIGFuZCBkZWxpdmVyIHRoZW0gdXAgdG8ga2VlcGVycywgYW5kIG5vdyBoYXZlIGdvbmUgYXdheSBhbmQgbGVmdCB5b3UuCjxkYXRlIGF1dGhuYW1lPSItNDAzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDAzIj40MDMgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['2.4.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5OZXZlcnRoZWxlc3MsIG15IGNvbXJhZGVzLCBJIGFtIG5vdCB0aGUgbWFuIHRvIGFzayB5b3UgdG8gdmlvbGF0ZSBhbnkgb25lIG9mIHRoZSBwbGVkZ2VzIHRvIHdoaWNoIHlvdSBoYXZlIHN3b3JuLCBidXQgSSBhc2sgeW91IHJhdGhlciB0byBzaG93IHRoaXMgdmlydHVlIGFsc28sIGluIGFkZGl0aW9uIHRvIHlvdXIgb3RoZXIgdmlydHVlcyzigJR0aGF0IHlvdSBhcmUgdHJ1ZSB0byB5b3VyIG9hdGhzIGFuZCBhcmUgZ29kLWZlYXJpbmcgbWVuLuKAnSBXaGVuIGhlIGhhZCBzYWlkIHRoaXMgYW5kIG1vcmUgdG8gdGhlIHNhbWUgZWZmZWN0LCBhbmQgaGFkIHRvbGQgdGhlbSB0aGF0IHRoZXJlIHdhcyBubyBuZWVkIG9mIHRoZWlyIGJlaW5nIGRpc3R1cmJlZCwgYnV0IHRoYXQgdGhleSBoYWQgb25seSB0byBsaXZlIHVuZGVyIHRoZSBsYXdzIHRoYXQgaGFkIHByZXZpb3VzbHkgYmVlbiBpbiBmb3JjZSwgaGUgZGlzbWlzc2VkIHRoZSBBc3NlbWJseS4KPC90cmFuc2xhdGlvbj4="
translation['2.4.43'] = ""
translation['3.1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TbyBlbmRlZCB0aGUgY2l2aWwgc3RyaWZlIGF0IEF0aGVucy4gU2hvcnRseTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTQwMSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwMSI+NDAxIEIuQy48L2RhdGU+PC9ub3RlPiBhZnRlciB0aGlzIEN5cnVzIHNlbnQgbWVzc2VuZ2VycyB0byBMYWNlZGFlbW9uIGFuZCBhc2tlZCB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyBzaG91bGQgc2hvdyB0aGVtc2VsdmVzIGFzIGdvb2QgZnJpZW5kcyB0byBoaW0gYXMgaGUgd2FzIHRvIHRoZW0gaW4gdGhlIHdhciBhZ2FpbnN0IHRoZSBBdGhlbmlhbnMuIEFuZCB0aGUgZXBob3JzLCB0aGlua2luZyB0aGF0IHdoYXQgaGUgc2FpZCB3YXMgZmFpciwgc2VudCBpbnN0cnVjdGlvbnMgdG8gU2FtaXVzLCBhdCB0aGF0IHRpbWUgdGhlaXIgYWRtaXJhbCwgdG8gaG9sZCBoaW1zZWxmIHVuZGVyIEN5cnVzJyBvcmRlcnMsIGluIGNhc2UgaGUgaGFkIGFueSByZXF1ZXN0IHRvIG1ha2UuIEFuZCBpbiBmYWN0IFNhbWl1cyBkaWQgemVhbG91c2x5IGp1c3Qgd2hhdCBDeXJ1cyBhc2tlZCBvZiBoaW06IGhlIHNhaWxlZCByb3VuZCB0byBDaWxpY2lhIGF0IHRoZSBoZWFkIG9mIGhpcyBmbGVldCwgaW4gY29tcGFueSB3aXRoIHRoZSBmbGVldCBvZiBDeXJ1cywgYW5kIG1hZGUgaXQgaW1wb3NzaWJsZSBmb3IgU3llbm5lc2lzLCB0aGUgcnVsZXIgb2YgQ2lsaWNpYSwgdG8gb3Bwb3NlIEN5cnVzIGJ5IGxhbmQgaW4gaGlzIG1hcmNoIGFnYWluc3QgdGhlIFBlcnNpYW4ga2luZy4KPGRhdGUgYXV0aG5hbWU9Ii00MDEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDEiPjQwMSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFzIHRvIGhvdyBDeXJ1cyBjb2xsZWN0ZWQgYW4gYXJteSBhbmQgd2l0aCB0aGlzIGFybXkgbWFkZSB0aGUgbWFyY2ggdXAgY291bnRyeSBhZ2FpbnN0IGhpcyBicm90aGVyLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BcnRheGVyeGVzLjwvbm90ZT4gaG93IHRoZSBiYXR0bGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QXQgQ3VuYXhhLCBuZWFyIEJhYnlsb24sIGluIHRoZSBhdXR1bW4gb2YgPGRhdGUgYXV0aG5hbWU9Ii00MDEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDEiPjQwMSBCLkMuPC9kYXRlPjwvbm90ZT4gd2FzIGZvdWdodCwgaG93IEN5cnVzIHdhcyBzbGFpbiwgYW5kIGhvdyBhZnRlciB0aGF0IHRoZSBHcmVla3MgZWZmZWN0ZWQgdGhlaXIgcmV0dXJuIGluIHNhZmV0eSB0byB0aGUgc2Vh4oCUYWxsIHRoaXMgaGFzIGJlZW4gd3JpdHRlbiBieSBUaGVtaXN0b2dlbmVzPGRhdGUgYXV0aG5hbWU9Ii00MDEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDEiPjQwMSBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Vbmtub3duIGV4Y2VwdCBmb3IgdGhpcyByZWZlcmVuY2UuIEl0IHdvdWxkIHNlZW0gdGhhdCBYZW5vcGhvbidzIG93biA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmFiYXNpczwvdGl0bGU+IHdhcyBub3QgcHVibGlzaGVkIGF0IHRoZSB0aW1lIHdoZW4gdGhlc2Ugd29yZHMgd2VyZSB3cml0dGVuLjwvbm90ZT4gdGhlIFN5cmFjdXNhbi4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5hYmFzaXM8L3RpdGxlPiB3YXMgbm90IHB1Ymxpc2hlZCBhdCB0aGUgdGltZSB3aGVuIHRoZXNlIHdvcmRzIHdlcmUgd3JpdHRlbi48L3RyYW5zbGF0aW9uPg=="
translation['3.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgd2hlbiBUaXNzYXBoZXJuZXMsIHdobyB3YXMgdGhvdWdodCB0byBoYXZlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItNDAwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDAwIj40MDAgQi5DLjwvZGF0ZT48L25vdGU+IHByb3ZlZCBoaW1zZWxmIHZlcnkgdmFsdWFibGUgdG8gdGhlIEtpbmcgaW4gdGhlIHdhciBhZ2FpbnN0IGhpcyBicm90aGVyLCB3YXMgc2VudCBkb3duIGFzIHNhdHJhcCBib3RoIG9mIHRoZSBwcm92aW5jZXMgd2hpY2ggaGUgaGltc2VsZiBoYWQgcHJldmlvdXNseSBydWxlZCBhbmQgb2YgdGhvc2Ugd2hpY2ggQ3lydXMgaGFkIHJ1bGVkLCBoZSBzdHJhaWdodHdheTxkYXRlIGF1dGhuYW1lPSItNDAwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDAwIj40MDAgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii00MDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDAiPjQwMCBCLkMuPC9kYXRlPjwvbm90ZT4gZGVtYW5kZWQgdGhhdCBhbGwgdGhlIElvbmlhbiBjaXRpZXMgc2hvdWxkIGJlIHN1YmplY3QgdG8gaGltLiBCdXQgdGhleSwgYm90aCBiZWNhdXNlIHRoZXkgd2FudGVkIHRvIGJlIGZyZWUgYW5kIGJlY2F1c2UgdGhleSBmZWFyZWQgVGlzc2FwaGVybmVzLCBpbmFzbXVjaCBhcyB0aGV5IGhhZCBjaG9zZW4gQ3lydXMsIHdoaWxlIGhlIHdhcyBsaXZpbmcsIGluc3RlYWQgb2YgaGltLCByZWZ1c2VkIHRvIGFkbWl0IGhpbSBpbnRvIHRoZWlyIGNpdGllcyBhbmQgc2VudCBhbWJhc3NhZG9ycyB0byBMYWNlZGFlbW9uIGFza2luZyB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucywgc2luY2UgdGhleSB3ZXJlIHRoZSBsZWFkZXJzIG9mIGFsbCBIZWxsYXMsIHNob3VsZCB1bmRlcnRha2UgdG8gcHJvdGVjdCB0aGVtIGFsc28sIHRoZSBHcmVla3MgaW4gQXNpYSwgaW4gb3JkZXIgdGhhdCB0aGVpciBsYW5kIG1pZ2h0IG5vdCBiZSBsYWlkIHdhc3RlIGFuZCB0aGF0IHRoZXkgdGhlbXNlbHZlcyBtaWdodCBiZSBmcmVlLgo8ZGF0ZSBhdXRobmFtZT0iLTQwMCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwMCI+NDAwIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFjY29yZGluZ2x5LCB0aGUgTGFjZWRhZW1vbmlhbnMgc2VudCB0aGVtPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk5Ij4zOTkgQi5DLjwvZGF0ZT48L25vdGU+IFRoaWJyb24gYXMgZ292ZXJub3IsIGdpdmluZyBoaW0gYW4gYXJteSBtYWRlIHVwIG9mIGEgdGhvdXNhbmQgZW1hbmNpcGF0ZWQgSGVsb3RzIGFuZCBmb3VyIHRob3VzYW5kIG9mIHRoZSBvdGhlciBQZWxvcG9ubmVzaWFucy4gVGhpYnJvbiBhbHNvIGFza2VkIGZyb20gdGhlIEF0aGVuaWFucyB0aHJlZSBodW5kcmVkIGNhdmFscnltZW4sIHNheWluZyB0aGF0IGhlIHdvdWxkIHByb3ZpZGUgcGF5IGZvciB0aGVtIGhpbXNlbGYuIEFuZCB0aGUgQXRoZW5pYW5zIHNlbnQgc29tZSBvZiB0aG9zZSB3aG8gaGFkIHNlcnZlZCBhcyBjYXZhbHJ5bWVuIGluIHRoZSB0aW1lIG9mIHRoZSBUaGlydHksIHRoaW5raW5nIGl0IHdvdWxkIGJlIGEgZ2FpbiB0byB0aGUgZGVtb2NyYWN5IGlmIHRoZXkgc2hvdWxkIGxpdmUgaW4gZm9yZWlnbiBsYW5kcyBhbmQgcGVyaXNoIHRoZXJlLgo8ZGF0ZSBhdXRobmFtZT0iLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OSI+Mzk5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkZ1cnRoZXJtb3JlLCB3aGVuIHRoZXkgYXJyaXZlZCBpbiBBc2lhLCBUaGlicm9uIGFsc28gZ2F0aGVyZWQgdHJvb3BzIGZyb20gdGhlIEdyZWVrIGNpdGllcyBvZiB0aGUgbWFpbmxhbmQ7IGZvciBhdCB0aGF0IHRpbWUgYWxsIHRoZSBjaXRpZXMgb2JleWVkIGFueSBjb21tYW5kIGEgTGFjZWRhZW1vbmlhbiBtaWdodCBnaXZlLiBOb3cgd2hpbGUgaGUgd2FzIGF0IHRoZSBoZWFkIG9mIHRoaXMgYXJteSwgVGhpYnJvbiBkaWQgbm90IHZlbnR1cmUgdG8gZGVzY2VuZCB0byBsZXZlbCBncm91bmQsIGJlY2F1c2UgaGUgc2F3IHRoZSBlbmVteSdzIGNhdmFscnksIGJ1dCB3YXMgc2F0aXNmaWVkIGlmIGhlIGNvdWxkIGtlZXAgdGhlIHBhcnRpY3VsYXIgdGVycml0b3J5IHdoZXJlIGhlIGNoYW5jZWQgdG8gYmUgZnJvbSBiZWluZyByYXZhZ2VkLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPldoZW4sIGhvd2V2ZXIsIHRoZSBtZW4gd2hvIGhhZCBtYWRlIHRoZSBtYXJjaCB1cCBjb3VudHJ5IHdpdGggQ3lydXMgam9pbmVkIGZvcmNlcyB3aXRoIGhpbSBhZnRlciB0aGVpciBzYWZlIHJldHVybiwgZnJvbSB0aGF0IHRpbWUgb24gaGUgd291bGQgZHJhdyB1cCBoaXMgdHJvb3BzIGFnYWluc3QgVGlzc2FwaGVybmVzIGV2ZW4gb24gdGhlIHBsYWlucywgYW5kIGhlIGdvdCBwb3NzZXNzaW9uIG9mIGNpdGllcywgUGVyZ2FtdXMgYnkgdm9sdW50YXJ5IHN1cnJlbmRlciwgYW5kIGxpa2V3aXNlIFRldXRocmFuaWEgYW5kIEhhbGlzYXJuYSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTkiPjM5OSBCLkMuPC9kYXRlPjwvbm90ZT4gdHdvIGNpdGllcyB3aGljaCB3ZXJlIHVuZGVyIHRoZSBydWxlIG9mIEV1cnlzdGhlbmVzIGFuZCBQcm9jbGVzLCB0aGUgZGVzY2VuZGFudHMgb2YgRGVtYXJhdHVzIHRoZSBMYWNlZGFlbW9uaWFuOyBhbmQgdGhpcyB0ZXJyaXRvcnkgaGFkIGJlZW4gZ2l2ZW4gdG8gRGVtYXJhdHVzIGJ5IHRoZSBQZXJzaWFuIGtpbmc8ZGF0ZSBhdXRobmFtZT0iLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OSI+Mzk5IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlhlcnhlcywgaW4gPGRhdGUgYXV0aG5hbWU9Ii00ODAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00ODAiPjQ4MCBCLkMuPC9kYXRlPiBIZXJvZC4gdmlpLiAxMDEgZmYuPC9ub3RlPiBhcyBhIHJld2FyZCBmb3IgYWNjb21wYW55aW5nIGhpbSBvbiBoaXMgZXhwZWRpdGlvbiBhZ2FpbnN0IEdyZWVjZS4gRnVydGhlcm1vcmUsIEdvcmdpb24gYW5kIEdvbmd5bHVzIGdhdmUgaW4gdGhlaXIgYWxsZWdpYW5jZSB0byBUaGlicm9uLCB0aGV5IGJlaW5nIGJyb3RoZXJzLCBvbmUgb2YgdGhlbSB0aGUgcnVsZXIgb2YgR2FtYnJpdW0gYW5kIFBhbGFlZ2FtYnJpdW0sIHRoZSBvdGhlciBvZiBNeXJpbmEgYW5kIEdyeW5pdW07IGFuZCB0aGVzZSBjaXRpZXMgYWxzbyB3ZXJlIGEgZ2lmdCBmcm9tIHRoZSBQZXJzaWFuIGtpbmcgdG8gdGhlIGVhcmxpZXIgR29uZ3lsdXMsIGJlY2F1c2UgaGUgZXNwb3VzZWQgdGhlIFBlcnNpYW4gY2F1c2Us4oCUdGhlIG9ubHkgbWFuIGFtb25nIHRoZSBFcmV0cmlhbnMgd2hvIGRpZCBzbyzigJRhbmQgd2FzIHRoZXJlZm9yZSBiYW5pc2hlZC4KPGRhdGUgYXV0aG5hbWU9Ii00ODAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00ODAiPjQ4MCBCLkMuPC9kYXRlPiBIZXJvZC4gdmlpLiAxMDEgZmYuPC90cmFuc2xhdGlvbj4="
translation['3.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBvdGhlciBoYW5kLCB0aGVyZSB3ZXJlIHNvbWUgd2VhayBjaXRpZXMgd2hpY2ggVGhpYnJvbiBkaWQgYWN0dWFsbHkgY2FwdHVyZSBieSBzdG9ybTsgYXMgZm9yIExhcmlzYSAoRWd5cHRpYW4gTGFyaXNhLCBhcyBpdCBpcyBjYWxsZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QmVjYXVzZSBDeXJ1cyB0aGUgR3JlYXQgc2V0dGxlZCB0aGVyZSBhIG51bWJlciBvZiBjYXB0dXJlZCBFZ3lwdGlhbnMuIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cm9wLjwvdGl0bGU+IFZJSS4gaS4gNDUuPC9ub3RlPiksIHdoZW4gaXQgcmVmdXNlZCB0byB5aWVsZCBoZSBpbnZlc3RlZCBhbmQgYmVzaWVnZWQgaXQuIFdoZW4gaGUgcHJvdmVkIHVuYWJsZSB0byBjYXB0dXJlIGl0IGluIGFueSBvdGhlciB3YXksIGhlIHN1bmsgYSBzaGFmdCBhbmQgYmVnYW4gdG8gZGlnIGEgdHVubmVsIHRoZXJlZnJvbSwgd2l0aCB0aGUgaWRlYSBvZiBjdXR0aW5nIG9mZiB0aGVpciB3YXRlciBzdXBwbHkuIEFuZCB3aGVuIHRoZXkgbWFkZSBmcmVxdWVudCBzYWxsaWVzIGZyb20gd2l0aGluIHRoZSB3YWxsIGFuZCB0aHJldyBwaWVjZXMgb2Ygd29vZCBhbmQgc3RvbmVzIGludG8gdGhlIHNoYWZ0LCBoZSBtZXQgdGhpcyBtb3ZlIGJ5IG1ha2luZyBhIHdvb2RlbiBzaGVkIGFuZCBzZXR0aW5nIGl0IG92ZXIgdGhlIHNoYWZ0LiBUaGUgTGFyaXNhZWFucywgaG93ZXZlciwgc2FsbGllZCBmb3J0aCBieSBuaWdodCBhbmQgZGVzdHJveWVkIHRoZSBzaGVkIGFsc28sIGJ5IGZpcmUuIFRoZW4sIHNpbmNlIGhlIHNlZW1lZCB0byBiZSBhY2NvbXBsaXNoaW5nIG5vdGhpbmcsIHRoZSBlcGhvcnMgc2VudCBoaW0gd29yZCB0byBsZWF2ZSBMYXJpc2EgYW5kIHVuZGVydGFrZSBhIGNhbXBhaWduIGFnYWluc3QgQ2FyaWEuCjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cm9wLjwvdGl0bGU+IFZJSS4gaS4gNDUuPC90cmFuc2xhdGlvbj4="
translation['3.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuLCBpbiBwdXJzdWFuY2Ugb2YgaGlzIGludGVudGlvbiB0byBtYXJjaCBhZ2FpbnN0IENhcmlhLCBoZSB3YXMgYWxyZWFkeSBhdCBFcGhlc3VzLCBEZXJjeWxpZGFzIGFycml2ZWQgdG8gdGFrZSBjb21tYW5kIG9mIHRoZSBhcm15LCBhIG1hbiB3aG8gd2FzIHJlcHV0ZWQgdG8gYmUgZXhjZWVkaW5nbHkgcmVzb3VyY2VmdWw7IGluZGVlZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTkiPjM5OSBCLkMuPC9kYXRlPjwvbm90ZT4gaGUgYm9yZSB0aGUgbmlja25hbWUg4oCcU2lzeXBodXMu4oCdIFRoaWJyb24gYWNjb3JkaW5nbHkgd2VudCBiYWNrIGhvbWUsIGFuZCB3YXMgY29uZGVtbmVkIGFuZCBiYW5pc2hlZDsgZm9yIHRoZSBhbGxpZXMgYWNjdXNlZCBoaW0gb2YgYWxsb3dpbmcgaGlzIHNvbGRpZXJzIHRvIHBsdW5kZXIgdGhlaXIgZnJpZW5kcy4KPGRhdGUgYXV0aG5hbWU9Ii0zOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTkiPjM5OSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIERlcmN5bGlkYXMgdG9vayBvdmVyIHRoZSBjb21tYW5kIG9mIHRoZSBhcm15LCBiZWluZyBhd2FyZSB0aGF0IFRpc3NhcGhlcm5lcyBhbmQgUGhhcm5hYmF6dXMgd2VyZSBzdXNwaWNpb3VzIG9mIGVhY2ggb3RoZXIsIGhlIGNhbWUgdG8gYW4gdW5kZXJzdGFuZGluZyB3aXRoIFRpc3NhcGhlcm5lcyBhbmQgbGVkIGF3YXkgaGlzIGFybXkgaW50byB0aGUgdGVycml0b3J5IG9mIFBoYXJuYWJhenVzLCBwcmVmZXJyaW5nIHRvIG1ha2Ugd2FyIGFnYWluc3Qgb25lIG9mIHRoZSB0d28gcmF0aGVyIHRoYW4gYWdhaW5zdCBib3RoIHRvZ2V0aGVyLiBCZXNpZGVzLCBEZXJjeWxpZGFzIHdhcyBhbiBlbmVteSBvZiBQaGFybmFiYXp1cyBmcm9tIGVhcmxpZXIgZGF5czsgZm9yIGFmdGVyIGhlIGhhZCBiZWNvbWUgZ292ZXJub3IgYXQgQWJ5ZHVzIGF0IHRoZSB0aW1lIHdoZW4gTHlzYW5kZXIgd2FzIGFkbWlyYWwsIGhlIHdhcyBjb21wZWxsZWQsIGFzIGEgcmVzdWx0IG9mIGhpcyBiZWluZyBzbGFuZGVyZWQgYnkgUGhhcm5hYmF6dXMsIHRvIHN0YW5kIHNlbnRyeSwgY2FycnlpbmcgaGlzIHNoaWVsZOKAlGEgdGhpbmcgd2hpY2ggaXMgcmVnYXJkZWQgYnkgTGFjZWRhZW1vbmlhbnMgb2YgY2hhcmFjdGVyIGFzIGEgZGlzZ3JhY2U7IGZvciBpdCBpcyBhIHB1bmlzaG1lbnQgZm9yIGluc3Vib3JkaW5hdGlvbi4gT24gdGhpcyBhY2NvdW50LCB0aGVuLCBoZSB3YXMgYWxsIHRoZSBtb3JlIHBsZWFzZWQgdG8gcHJvY2VlZCBhZ2FpbnN0IFBoYXJuYWJhenVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZnJvbSB0aGUgb3V0c2V0IGhlIHdhcyBzbyBzdXBlcmlvciB0byBUaGlicm9uIGluIHRoZSBleGVyY2lzZSBvZiBjb21tYW5kIHRoYXQgaGUgbGVkIGhpcyB0cm9vcHMgdGhyb3VnaCB0aGUgY291bnRyeSBvZiBmcmllbmRzIGFsbCB0aGUgd2F5IHRvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPnBhcnQgb2YgaXQgd2FzIGluY2x1ZGVkIGluIHRoZSBzYXRyYXB5IG9mIFBoYXJuYWJhenVzLjwvbm90ZT4gdGhlIEFlb2xpcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QSBkaXN0cmljdCBpbiBub3J0aC13ZXN0ZXJuIEFzaWEgTWlub3IuIFRoZSBub3J0aGVybjwvbm90ZT4gaW4gdGhlIHRlcnJpdG9yeSBvZiBQaGFybmFiYXp1cywgd2l0aG91dCBkb2luZyBhbnkgaGFybSB3aGF0ZXZlciB0byBoaXMgYWxsaWVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGlzIEFlb2xpcyBiZWxvbmdlZCwgaW5kZWVkLCB0byBQaGFybmFiYXp1cywgYnV0IFplbmlzIG9mIERhcmRhbnVzIGhhZCwgd2hpbGUgaGUgbGl2ZWQsIGFjdGVkIGFzIHNhdHJhcCBvZiB0aGlzIHRlcnJpdG9yeSBmb3IgaGltOyB3aGVuIFplbmlzIGZlbGwgaWxsIGFuZCBkaWVkLCBhbmQgUGhhcm5hYmF6dXMgd2FzIHByZXBhcmluZyB0byBnaXZlIHRoZSBzYXRyYXB5IHRvIGFub3RoZXIgbWFuLCBNYW5pYSwgdGhlIHdpZmUgb2YgWmVuaXMsIHdobyB3YXMgYWxzbyBhIERhcmRhbmlhbiwgZml0dGVkIG91dCBhIGdyZWF0IHJldGludWUsIHRvb2sgcHJlc2VudHMgd2l0aCBoZXIgdG8gZ2l2ZSB0byBQaGFybmFiYXp1cyBoaW1zZWxmIGFuZCB0byB1c2UgZm9yIHdpbm5pbmcgdGhlIGZhdm91ciBvZiBoaXMgY29uY3ViaW5lczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OSI+Mzk5IEIuQy48L2RhdGU+PC9ub3RlPiBhbmQgdGhlIG1lbiB3aG8gaGFkIHRoZSBncmVhdGVzdCBpbmZsdWVuY2UgYXQgdGhlIGNvdXJ0IG9mIFBoYXJuYWJhenVzLCBhbmQgc2V0IGZvcnRoIHRvIHZpc2l0IGhpbS4gQW5kIHdoZW4gc2hlIGhhZCBnYWluZWQgYW4gYXVkaWVuY2Ugd2l0aCBoaW0sIHNoZSBzYWlkOgo8ZGF0ZSBhdXRobmFtZT0iLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OSI+Mzk5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz7igJxQaGFybmFiYXp1cywgbXkgaHVzYmFuZCB3YXMgbm90IG9ubHkgYSBmcmllbmQgdG8geW91IGluIGFsbCBvdGhlciB3YXlzLCBidXQgaGUgYWxzbyBwYWlkIG92ZXIgdGhlIHRyaWJ1dGVzIHdoaWNoIHdlcmUgeW91ciBkdWUsIHNvIHRoYXQgeW91IGNvbW1lbmRlZCBhbmQgaG9ub3VyZWQgaGltLiBOb3csIHRoZXJlZm9yZSwgaWYgSSBzZXJ2ZSB5b3Ugbm8gbGVzcyBmYWl0aGZ1bGx5IHRoYW4gaGUsIHdoeSBzaG91bGQgeW91IGFwcG9pbnQgYW5vdGhlciBhcyBzYXRyYXA/IEFuZCBpZiBJIGZhaWwgdG8gcGxlYXNlIHlvdSBpbiBhbnkgcG9pbnQsIHN1cmVseSBpdCB3aWxsIGJlIHdpdGhpbiB5b3VyIHBvd2VyIHRvIGRlcHJpdmUgbWUgb2YgbXkgb2ZmaWNlIGFuZCBnaXZlIGl0IHRvIGFub3RoZXIu4oCdCjwvdHJhbnNsYXRpb24+"
translation['3.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIFBoYXJuYWJhenVzIGhlYXJkIHRoaXMsIGhlIGRlY2lkZWQgdGhhdCB0aGUgd29tYW4gc2hvdWxkIGJlIHNhdHJhcC4gQW5kIHdoZW4gc2hlIGhhZCBiZWNvbWUgbWlzdHJlc3Mgb2YgdGhlIHByb3ZpbmNlLCBzaGUgbm90IG9ubHkgcGFpZCBvdmVyIHRoZSB0cmlidXRlcyBubyBsZXNzIGZhaXRoZnVsbHkgdGhhbiBoYWQgaGVyIGh1c2JhbmQsIGJ1dCBiZXNpZGVzIHRoaXMsIHdoZW5ldmVyIHNoZSB3ZW50IHRvIHRoZSBjb3VydCBvZiBQaGFybmFiYXp1cyBzaGUgYWx3YXlzIGNhcnJpZWQgaGltIGdpZnRzLCBhbmQgd2hlbmV2ZXIgaGUgY2FtZSBkb3duIHRvIGhlciBwcm92aW5jZSBzaGUgcmVjZWl2ZWQgaGltIHdpdGggZmFyIG1vcmUgbWFnbmlmaWNlbmNlIGFuZCBjb3VydGVzeSB0aGFuIGFueSBvZiBoaXMgb3RoZXIgZ292ZXJub3JzOwo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgc2hlIG5vdCBvbmx5IGtlcHQgc2VjdXJlbHkgZm9yIFBoYXJuYWJhenVzIHRoZSBjaXRpZXMgd2hpY2ggc2hlIGhhZCByZWNlaXZlZCBmcm9tIGhlciBodXNiYW5kLCBidXQgYWxzbyBnYWluZWQgcG9zc2Vzc2lvbiBvZiBjaXRpZXMgb24gdGhlIGNvYXN0IHdoaWNoIGhhZCBub3QgYmVlbiBzdWJqZWN0IHRvIGhpbSwgTGFyaXNhLCBIYW1heGl0dXMsIGFuZCBDb2xvbmFl4oCUYXR0YWNraW5nIHRoZWlyIHdhbGxzIHdpdGggYSBHcmVlayBtZXJjZW5hcnkgZm9yY2UsIHdoaWxlIHNoZSBoZXJzZWxmIGxvb2tlZCBvbiBmcm9tIGEgY2FycmlhZ2U7IGFuZCB3aGVuIGEgbWFuIHdvbiBoZXIgYXBwcm92YWwgc2hlIHdvdWxkIGJlc3RvdyBib3VudGVvdXMgZ2lmdHMgdXBvbiBoaW0sIHNvIHRoYXQgc2hlIGVxdWlwcGVkIGhlciBtZXJjZW5hcnkgZm9yY2UgaW4gdGhlIG1vc3Qgc3BsZW5kaWQgZmFzaGlvbi4gU2hlIGFsc28gYWNjb21wYW5pZWQgUGhhcm5hYmF6dXMgaW4gdGhlIGZpZWxkLCBldmVuIHdoZW4gaGUgaW52YWRlZCB0aGUgbGFuZCBvZiB0aGUgTXlzaWFucyBvciB0aGUgUGlzaWRpYW5zIGJlY2F1c2Ugb2YgdGhlaXIgY29udGludWFsbHkgcmF2YWdpbmcgdGhlIEtpbmcncyB0ZXJyaXRvcnkuIEluIHJldHVybiBmb3IgdGhlc2Ugc2VydmljZXMgUGhhcm5hYmF6dXMgcGFpZCBoZXIgbWFnbmlmaWNlbnQgaG9ub3VycywgYW5kIHNvbWV0aW1lcyBhc2tlZCBoZXIgdG8gYWlkIGhpbSBhcyBhIGNvdW5zZWxsb3IuCjwvdHJhbnNsYXRpb24+"
translation['3.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiBzaGUgd2FzIG1vcmUgdGhhbiBmb3J0eSB5ZWFycyBvbGQsIE1laWRpYXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk5Ij4zOTkgQi5DLjwvZGF0ZT48L25vdGU+IHdobyB3YXMgdGhlIGh1c2JhbmQgb2YgaGVyIGRhdWdodGVyLCB3YXMgZGlzdHVyYmVkIGJ5IGNlcnRhaW4gcGVvcGxlIHNheWluZyB0aGF0IGl0IHdhcyBhIGRpc2dyYWNlZnVsIHRoaW5nIGZvciBhIHdvbWFuIHRvIGJlIHRoZSBydWxlciB3aGlsZSBoZSB3YXMgaW4gcHJpdmF0ZSBzdGF0aW9uLCBhbmQgc2luY2UsIGFsdGhvdWdoIHNoZSBndWFyZGVkIGhlcnNlbGYgY2FyZWZ1bGx5IGFnYWluc3QgYWxsIG90aGVyIHBlb3BsZSwgYXMgd2FzIHByb3BlciBmb3IgYW4gYWJzb2x1dGUgcnVsZXIsIHNoZSB0cnVzdGVkIGhpbSBhbmQgZ2F2ZSBoaW0gaGVyIGFmZmVjdGlvbiwgYXMgYSB3b21hbiBuYXR1cmFsbHkgd291bGQgdG8gYSBzb24taW4tbGF3LCBoZSBtYWRlIGhpcyB3YXkgaW50byBoZXIgcHJlc2VuY2UsIGFzIHRoZSBzdG9yeSBnb2VzLCBhbmQgc3RyYW5nbGVkIGhlci4gSGUgYWxzbyBraWxsZWQgaGVyIHNvbiwgYSB5b3V0aCBvZiB2ZXJ5IGdyZWF0IGJlYXV0eSBhYm91dCBzZXZlbnRlZW4geWVhcnMgb2xkLgo8ZGF0ZSBhdXRobmFtZT0iLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OSI+Mzk5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGhlIGhhZCBkb25lIHRoZXNlIHRoaW5ncywgaGUgc2VpemVkIHRoZSBzdHJvbmcgY2l0aWVzIG9mIFNjZXBzaXMgYW5kIEdlcmdpcywgd2hlcmUgTWFuaWEgaGFkIGtlcHQgdGhlIG1vc3Qgb2YgaGVyIHRyZWFzdXJlLiBUaGUgb3RoZXIgY2l0aWVzLCBob3dldmVyLCB3b3VsZCBub3QgYWRtaXQgaGltIGludG8gdGhlaXIgd2FsbHMsIGJ1dCB0aGUgZ2Fycmlzb25zIHRoYXQgd2VyZSBpbiB0aGVtIGtlcHQgdGhlbSBzYWZlIGZvciBQaGFybmFiYXp1cy4gVGhlbiBNZWlkaWFzIHNlbnQgZ2lmdHMgdG8gUGhhcm5hYmF6dXMgYW5kIGNsYWltZWQgdGhlIHJpZ2h0IHRvIGJlIHJ1bGVyIG9mIHRoZSBwcm92aW5jZSwgZXZlbiBhcyBNYW5pYSBoYWQgYmVlbi4gQW5kIFBoYXJuYWJhenVzIGluIHJlcGx5IHRvbGQgaGltIHRvIHRha2UgZ29vZCBjYXJlIG9mIGhpcyBnaWZ0cyB1bnRpbCBoZSBjYW1lIGluIHBlcnNvbiBhbmQgdG9vayBwb3NzZXNzaW9uIG9mIHRoZW0gYW5kIG9mIGhpbSB0b287IGZvciBoZSBzYWlkIHRoYXQgaGUgd291bGQgbm90IHdpc2ggdG8gbGl2ZSBpZiBoZSBmYWlsZWQgdG8gYXZlbmdlIE1hbmlhLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgd2FzIGF0IHRoaXMganVuY3R1cmUgdGhhdCBEZXJjeWxpZGFzIGFycml2ZWQsIGFuZCBoZSBmb3J0aHdpdGggdG9vayBwb3NzZXNzaW9uIGluIGEgc2luZ2xlIGRheSBvZiBMYXJpc2EsIEhhbWF4aXR1cywgYW5kIENvbG9uYWUsIHRoZSBjaXRpZXMgb24gdGhlIGNvYXN0LCBieSB0aGVpciB2b2x1bnRhcnkgYWN0OyB0aGVuIGhlIHNlbnQgdG8gdGhlIGNpdGllcyBvZiBBZW9saXMgYWxzbyBhbmQgdXJnZWQgdGhlbSB0byBmcmVlIHRoZW1zZWx2ZXMsIGFkbWl0IGhpbSBpbnRvIHRoZWlyIHdhbGxzLCBhbmQgYmVjb21lIGFsbGllcy4gTm93IHRoZSBwZW9wbGUgb2YgTmVhbmRyaWEsIElsaXVtLCBhbmQgQ29jeWxpdW0gb2JleWVkIGhpbSwgZm9yIHRoZSBHcmVlayBnYXJyaXNvbnMgb2YgdGhvc2UgY2l0aWVzIGhhZCBiZWVuIGJ5IG5vIG1lYW5zIHdlbGwgdHJlYXRlZCBzaW5jZSB0aGUgZGVhdGggb2YgTWFuaWE7CjwvdHJhbnNsYXRpb24+"
translation['3.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5idXQgdGhlIG1hbiB3aG8gY29tbWFuZGVkIHRoZSBnYXJyaXNvbiBpbiBDZWJyZW4sIGEgdmVyeSBzdHJvbmcgcGxhY2UsIHRoaW5raW5nIHRoYXQgaWYgaGUgc3VjY2VlZGVkIGluPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk5Ij4zOTkgQi5DLjwvZGF0ZT48L25vdGU+IGtlZXBpbmcgdGhlIGNpdHkgZm9yIFBoYXJuYWJhenVzIGhlIHdvdWxkIHJlY2VpdmUgaG9ub3VycyBhdCBoaXMgaGFuZHMsIHJlZnVzZWQgdG8gYWRtaXQgRGVyY3lsaWRhcy4gVGhlcmV1cG9uIHRoZSBsYXR0ZXIsIGluIGFuZ2VyLCBtYWRlIHByZXBhcmF0aW9ucyBmb3IgYXR0YWNrLiBBbmQgd2hlbiB0aGUgc2FjcmlmaWNlcyB0aGF0IGhlIG9mZmVyZWQgZGlkIG5vdCBwcm92ZSBmYXZvdXJhYmxlIG9uIHRoZSBmaXJzdCBkYXksIGhlIHNhY3JpZmljZWQgYWdhaW4gb24gdGhlIGZvbGxvd2luZyBkYXkuIEFuZCB3aGVuIHRoZXNlIHNhY3JpZmljZXMgYWxzbyBkaWQgbm90IHByb3ZlIGZhdm91cmFibGUsIGhlIHRyaWVkIGFnYWluIG9uIHRoZSB0aGlyZCBkYXk7IGFuZCBmb3IgZm91ciBkYXlzIGhlIGtlcHQgcGVyc2lzdGVudGx5IG9uIHdpdGggaGlzIHNhY3JpZmljaW5nLCB0aG91Z2ggZ3JlYXRseSBkaXN0dXJiZWQgYnkgdGhlIGRlbGF5OyBmb3IgaGUgd2FzIGluIGhhc3RlIHRvIG1ha2UgaGltc2VsZiBtYXN0ZXIgb2YgYWxsIEFlb2xpcyBiZWZvcmUgUGhhcm5hYmF6dXMgY2FtZSB0byB0aGUgcmVzY3VlLgo8ZGF0ZSBhdXRobmFtZT0iLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OSI+Mzk5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgYSBjZXJ0YWluIEF0aGVuYWRhcywgYSBTaWN5b25pYW4gY2FwdGFpbiwgdGhpbmtpbmcgdGhhdCBEZXJjeWxpZGFzIHdhcyBhY3RpbmcgZm9vbGlzaGx5IGluIGRlbGF5aW5nLCBhbmQgdGhhdCBoZSB3YXMgc3Ryb25nIGVub3VnaCBvZiBoaW1zZWxmIHRvIGRlcHJpdmUgdGhlIENlYnJlbmlhbnMgb2YgdGhlaXIgd2F0ZXIgc3VwcGx5LCBydXNoZWQgZm9yd2FyZCB3aXRoIGhpcyBvd24gY29tcGFueSBhbmQgdHJpZWQgdG8gY2hva2UgdXAgdGhlaXIgc3ByaW5nLiBBbmQgdGhlIHBlb3BsZSB3aXRoaW4gdGhlIHdhbGxzLCBzYWxseWluZyBmb3J0aCBhZ2FpbnN0IGhpbSwgaW5mbGljdGVkIG1hbnkgd291bmRzIHVwb24gaGltLCBraWxsZWQgdHdvIG9mIGhpcyBtZW4sIGFuZCBkcm92ZSBiYWNrIHRoZSByZXN0IHdpdGggYmxvd3MgYW5kIG1pc3NpbGVzLiBCdXQgd2hpbGUgRGVyY3lsaWRhcyB3YXMgaW4gYSBzdGF0ZSBvZiB2ZXhhdGlvbiBhbmQgd2FzIHRoaW5raW5nIHRoYXQgaGlzIGF0dGFjayB3b3VsZCB0aHVzIGJlIG1hZGUgbGVzcyBzcGlyaXRlZCwgaGVyYWxkcyBjYW1lIGZvcnRoIGZyb20gdGhlIHdhbGwsIHNlbnQgYnkgdGhlIEdyZWVrcyBpbiB0aGUgY2l0eSwgYW5kIHNhaWQgdGhhdCB3aGF0IHRoZWlyIGNvbW1hbmRlciB3YXMgZG9pbmcgd2FzIG5vdCB0byB0aGVpciBsaWtpbmcsIGJ1dCB0aGF0IGZvciB0aGVpciBwYXJ0IHRoZXkgcHJlZmVycmVkIHRvIGJlIG9uIHRoZSBzaWRlIG9mIHRoZSBHcmVla3MgcmF0aGVyIHRoYW4gb2YgdGhlIGJhcmJhcmlhbi4KPC90cmFuc2xhdGlvbj4="
translation['3.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5XaGlsZSB0aGV5IHdlcmUgc3RpbGwgdGFsa2luZyBhYm91dCB0aGlzLCB0aGVyZSBjYW1lIGEgbWVzc2VuZ2VyIGZyb20gdGhlaXIgY29tbWFuZGVyLCB3aG8gc2VudCB3b3JkIHRoYXQgaGUgYWdyZWVkIHdpdGggYWxsIHRoYXQgdGhlIGZpcnN0IHBhcnR5IHdlcmUgc2F5aW5nLiBBY2NvcmRpbmdseSBEZXJjeWxpZGFzLCB3aG9zZSBzYWNyaWZpY2VzIG9uIHRoYXQgZGF5LCBhcyBpdCBjaGFuY2VkLCBoYWQganVzdCBwcm92ZWQgZmF2b3VyYWJsZSwgaW1tZWRpYXRlbHkgaGFkIGhpcyB0cm9vcHMgdGFrZSB1cCB0aGVpciBhcm1zIGFuZCBsZWQgdGhlbSB0b3dhcmQgdGhlIGdhdGVzOyBhbmQgdGhlIHBlb3BsZSB0aHJldyB0aGVtIG9wZW4gYW5kIGFkbWl0dGVkIGhpbS4gQW5kIGFmdGVyIHN0YXRpb25pbmcgYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OSI+Mzk5IEIuQy48L2RhdGU+PC9ub3RlPiBnYXJyaXNvbiBpbiB0aGlzIGNpdHkgYWxzbywgaGUgbWFyY2hlZCBhdCBvbmNlIGFnYWluc3QgU2NlcHNpcyBhbmQgR2VyZ2lzLgo8ZGF0ZSBhdXRobmFtZT0iLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OSI+Mzk5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IE1laWRpYXMsIHdobyB3YXMgZXhwZWN0aW5nIHRoZSBjb21pbmcgb2YgUGhhcm5hYmF6dXMgYW5kIG9uIHRoZSBvdGhlciBoYW5kIHdhcyBieSB0aGlzIHRpbWUgYWZyYWlkIG9mIGhpcyBvd24gY2l0aXplbnMsIHNlbnQgdG8gRGVyY3lsaWRhcyBhbmQgc2FpZCB0aGF0IGhlIHdvdWxkIGNvbWUgdG8gYSBjb25mZXJlbmNlIHdpdGggaGltIGlmIGhlIHNob3VsZCBmaXJzdCByZWNlaXZlIGhvc3RhZ2VzLiBBbmQgRGVyY3lsaWRhcyBzZW50IGhpbSBvbmUgbWFuIGZyb20gZWFjaCBvZiB0aGUgY2l0aWVzIG9mIHRoZSBhbGxpZXMsIGFuZCBiYWRlIGhpbSB0YWtlIGFzIG1hbnkgYW5kIHdob2V2ZXIgaGUgcGxlYXNlZC4gTWVpZGlhcyB0b29rIHRlbiBhbmQgY2FtZSBmb3J0aCBmcm9tIHRoZSBjaXR5LCBhbmQgd2hlbiBoZSBtZXQgRGVyY3lsaWRhcyBhc2tlZCBoaW0gb24gd2hhdCBjb25kaXRpb25zIGhlIGNvdWxkIGJlIGFuIGFsbHkgb2YgdGhlIExhY2VkYWVtb25pYW5zLiBEZXJjeWxpZGFzIHJlcGxpZWQsIG9uIGNvbmRpdGlvbiBvZiBhbGxvd2luZyBoaXMgY2l0aXplbnMgdG8gYmUgZnJlZSBhbmQgaW5kZXBlbmRlbnQ7IGFuZCBhcyBoZSBzYWlkIHRoaXMgaGUgcHJvY2VlZGVkIHRvIGFkdmFuY2UgdXBvbiBTY2Vwc2lzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIE1laWRpYXMsIHJlYWxpemluZyB0aGF0IGhlIHdvdWxkIG5vdCBiZSBhYmxlLCBhZ2FpbnN0IHRoZSB3aWxsIG9mIHRoZSBjaXRpemVucywgdG8gcHJldmVudCBoaXMgZG9pbmcgc28sIGFsbG93ZWQgaGltIHRvIGVudGVyIHRoZSBjaXR5LiBBbmQgRGVyY3lsaWRhcywgd2hlbiBoZSBoYWQgc2FjcmlmaWNlZCB0byBBdGhlbmEgb24gdGhlIGFjcm9wb2xpcyBvZiBTY2Vwc2lzLCBsZWQgZm9ydGggTWVpZGlhcycgZ2Fycmlzb24sIGdhdmUgb3ZlciB0aGUgY2l0eSB0byB0aGUgY2l0aXplbnMsIGFuZCB0aGVuLCBhZnRlciBleGhvcnRpbmcgdGhlbSB0byBvcmRlciB0aGVpciBwdWJsaWMgbGlmZSBhcyBHcmVla3MgYW5kIGZyZWVtZW4gc2hvdWxkLCBkZXBhcnRlZCBmcm9tIHRoZSBjaXR5IGFuZCBsZWQgaGlzIGFybXkgYWdhaW5zdCBHZXJnaXMuIEFuZCBtYW55IG9mIHRoZSBTY2Vwc2lhbnMgdG9vayBwYXJ0IGluIHRoZSBlc2NvcnQgd2hpY2ggYWNjb21wYW5pZWQgaGltIG9uIGhpcyB3YXksIHBheWluZyBoaW0gaG9ub3VyIGFuZCBiZWluZyB3ZWxsIHBsZWFzZWQgYXQgd2hhdCBoYWQgYmVlbiBkb25lLAo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgTWVpZGlhcyBhbHNvIGZvbGxvd2VkIGFsb25nIHdpdGggaGltIGFuZCB1cmdlZCBoaW0gdG8gZ2l2ZSBvdmVyIHRoZSBjaXR5IG9mIHRoZSBHZXJnaXRoaWFucyB0byBoaW0uIEFuZCBEZXJjeWxpZGFzIHRvbGQgaGltIG9ubHkgdGhhdCBoZSB3b3VsZCBub3QgZmFpbCB0byBvYnRhaW4gYW55IG9mIGhpcyByaWdodHM7IGFuZCBhcyBoZSBzYWlkIHRoaXMsIGhlIHdhcyBhcHByb2FjaGluZyB0aGUgZ2F0ZXMgb2YgdGhlIGNpdHkgdG9nZXRoZXIgd2l0aCBNZWlkaWFzLCBhbmQgdGhlIGFybXkgd2FzIGZvbGxvd2luZyBoaW0gaW4gZG91YmxlIGZpbGUgYXMgdGhvdWdoIG9uIGEgcGVhY2VmdWwgbWlzc2lvbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHRoZSBtZW4gb24gdGhlIHRvd2VycyBvZiBHZXJnaXMsIHdoaWNoIHdlcmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTkiPjM5OSBCLkMuPC9kYXRlPjwvbm90ZT4gZXh0cmVtZWx5IGhpZ2gsIGRpZCBub3QgdGhyb3cgdGhlaXIgbWlzc2lsZXMgYmVjYXVzZSB0aGV5IHNhdyBNZWlkaWFzIHdpdGggaGltOyBhbmQgd2hlbiBEZXJjeWxpZGFzIHNhaWQ6IOKAnEJpZCB0aGVtIG9wZW4gdGhlIGdhdGVzLCBNZWlkaWFzLCBzbyB0aGF0IHlvdSBtYXkgbGVhZCB0aGUgd2F5IGFuZCBJIG1heSBnbyB3aXRoIHlvdSB0byB0aGUgdGVtcGxlIGFuZCB0aGVyZSBzYWNyaWZpY2UgdG8gQXRoZW5hLOKAnSAgTWVpZGlhcywgYWx0aG91Z2ggaGUgc2hyYW5rIGZyb20gb3BlbmluZyB0aGUgZ2F0ZXMsIG5ldmVydGhlbGVzcyBvdXQgb2YgZmVhciB0aGF0IGhlIG1pZ2h0IGJlIHNlaXplZCBvbiB0aGUgc3BvdCwgZ2F2ZSB0aGUgb3JkZXIgdG8gb3BlbiB0aGVtLgo8ZGF0ZSBhdXRobmFtZT0iLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OSI+Mzk5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIERlcmN5bGlkYXMgZW50ZXJlZCBoZSBwcm9jZWVkZWQgdG8gdGhlIGFjcm9wb2xpcywga2VlcGluZyBNZWlkaWFzIHdpdGggaGltIGFzIGJlZm9yZTsgYW5kIGhlIG9yZGVyZWQgdGhlIHJlc3Qgb2YgaGlzIHNvbGRpZXJzIHRvIHRha2UgdGhlaXIgcG9zaXRpb25zIGFsb25nIHRoZSB3YWxscyB3aGlsZSBoZSwgd2l0aCB0aG9zZSBhYm91dCBoaW0sIHNhY3JpZmljZWQgdG8gQXRoZW5hLiBXaGVuIHRoZSBzYWNyaWZpY2UgaGFkIGJlZW4gY29tcGxldGVkIGhlIG1hZGUgcHJvY2xhbWF0aW9uIHRoYXQgdGhlIHNwZWFybWVuIG9mIE1laWRpYXMnIGJvZHlndWFyZCBzaG91bGQgdGFrZSB0aGVpciBwb3NpdGlvbnMgYXQgdGhlIHZhbiBvZiBoaXMgb3duIGFybXksIHNheWluZyB0aGF0IHRoZXkgd2VyZSB0byBzZXJ2ZSBoaW0gYXMgbWVyY2VuYXJpZXM7IGZvciBNZWlkaWFzLCBoZSBzYWlkLCBubyBsb25nZXIgaGFkIGFueXRoaW5nIHRvIGZlYXIuCjwvdHJhbnNsYXRpb24+"
translation['3.1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIE1laWRpYXMsIG5vdCBrbm93aW5nIHdoYXQgdG8gZG8sIHNhaWQ6IOKAnFdlbGwgYXMgZm9yIG1lLOKAnSBzYWlkIGhlLCDigJxJIHdpbGwgZ28gYXdheSB0byBwcmVwYXJlIGhvc3BpdGFsaXR5IGZvciB5b3Uu4oCdIEFuZCBEZXJjeWxpZGFzIHJlcGxpZWQ6IOKAnE5vLCBieSBaZXVzLCBmb3IgaXQgd291bGQgYmUgc2hhbWVmdWwgZm9yIG1lLCB3aG8gaGF2ZSBqdXN0IHNhY3JpZmljZWQsIHRvIGJlIGVudGVydGFpbmVkIGJ5IHlvdSBpbnN0ZWFkIG9mIGVudGVydGFpbmluZyB5b3UuIFN0YXksIHRoZXJlZm9yZSwgd2l0aCB1cywgYW5kIHdoaWxlIHRoZSBkaW5uZXIgaXMgcHJlcGFyaW5nIHlvdSBhbmQgSSB3aWxsIHRoaW5rIG91dCB3aGF0IGlzIGZhaXIgdG93YXJkIG9uZSBhbm90aGVyIGFuZCBhY3QgYWNjb3JkaW5nbHku4oCdCjwvdHJhbnNsYXRpb24+"
translation['3.1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGV5IHdlcmUgc2VhdGVkIERlcmN5bGlkYXMgYmVnYW4gYXNraW5nIHF1ZXN0aW9uczog4oCcVGVsbCBtZSwgTWVpZGlhcywgZGlkIHlvdXIgZmF0aGVyIGxlYXZlIHlvdSBtYXN0ZXIgb2YgaGlzIHByb3BlcnR5P+KAnSDigJxZZXMsIGluZGVlZCzigJ0gaGUgc2FpZC4g4oCcQW5kIGhvdyBtYW55IGhvdXNlcyBoYWQgeW91PyBIb3cgbWFueSBmYXJtcz8gSG93IG1hbnkgcGFzdHVyZXM/4oCdIEFzIE1laWRpYXMgYmVnYW4gdG8gbWFrZSBhIGxpc3QsIHRoZSBTY2Vwc2lhbnMgd2hvIHdlcmUgcHJlc2VudCBzYWlkLCDigJxIZSBpcyBkZWNlaXZpbmcgeW91LCBEZXJjeWxpZGFzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['3.1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz7igJxOb3cgZG9uJ3QgeW91LOKAnSBzYWlkIGhlLCDigJxiZSB0b28gcGV0dHkgYWJvdXQgdGhlIGRldGFpbHMu4oCdIFdoZW4gdGhlIGxpc3Qgb2YgdGhlIGluaGVyaXRhbmNlIG9mIE1laWRpYXMgaGFkIGJlZW4gbWFkZSBEZXJjeWxpZGFzIHNhaWQ6IOKAnFRlbGwgbWUsIHRvIHdob20gZGlkIE1hbmlhIGJlbG9uZz/igJ0gVGhleSBhbGwgc2FpZCB0aGF0IHNoZSBiZWxvbmdlZCB0byBQaGFybmFiYXp1cy4g4oCcVGhlbizigJ0gc2FpZCBoZSwg4oCcZG8gbm90IGhlciBwb3NzZXNzaW9ucyBiZWxvbmcgdG8gUGhhcm5hYmF6dXMgdG9vP+KAnSDigJxZZXMsIGluZGVlZCzigJ0gdGhleSBzYWlkLiDigJxUaGVuIHRoZXkgbXVzdCBiZSBvdXJzLOKAnSBoZSBzYWlkLCDigJxzaW5jZSB3ZSBhcmUgdmljdG9yaW91czsgZm9yIFBoYXJuYWJhenVzIGlzIG91ciBlbmVteS4gTGV0IHNvbWUgb25lLCB0aGVuLOKAnSBzYWlkIGhlLCDigJxsZWFkIHRoZSB3YXkgdG8gdGhlIHBsYWNlIHdoZXJlIHRoZSBwb3NzZXNzaW9ucyBvZiBNYW5pYeKAlG9yIHJhdGhlciBvZiBQaGFybmFiYXp1c+KAlGFyZSBzdG9yZWQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['3.1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiB0aGUgcmVzdCBsZWQgdGhlIHdheSB0byB0aGUgZHdlbGxpbmcgb2YgTWFuaWEsIHRvIHdoaWNoIE1laWRpYXMgaGFkIHN1Y2NlZWRlZCwgdGhlIGxhdHRlciBhbHNvIGZvbGxvd2VkLiBBbmQgd2hlbiBEZXJjeWxpZGFzIGVudGVyZWQgaGUgY2FsbGVkIHRoZSBzdGV3YXJkcywgdG9sZCBoaXMgc2VydmFudHMgdG8gc2VpemUgdGhlbSwgYW5kIGFubm91bmNlZCB0byB0aGVtIHRoYXQgaWYgdGhleSB3ZXJlIGNhdWdodCBjb25jZWFsaW5nIGFueSBvZiBNYW5pYSdzIHByb3BlcnR5IHRoZXkgc2hvdWxkIGhhdmUgdGhlaXIgdGhyb2F0cyBjdXQgb24gdGhlIHNwb3Q7IHNvIHRoZXkgc2hvd2VkIGl0IHRvIGhpbS4gV2hlbiBoZSBoYWQgc2VlbiBhbGwsIGhlIHNodXQgaXQgdXAsIHNlYWxlZCBpdCwgYW5kIHNldCBhIGd1YXJkIHVwb24gaXQuCjwvdHJhbnNsYXRpb24+"
translation['3.1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBoZSBjYW1lIG91dCBoZSBzYWlkIHRvIHNvbWUgb2YgdGhlIGNvbW1hbmRlcnMgb2YgZGl2aXNpb25zIGFuZCBjYXB0YWlucyB3aG9tIGhlIGZvdW5kIGF0IHRoZSBkb29yczog4oCcR2VudGxlbWVuLCB3ZSBoYXZlIGVhcm5lZCBwYXkgZm9yIHRoZSBhcm154oCUZWlnaHQgdGhvdXNhbmQgbWVu4oCUZm9yIGFsbW9zdCBhIHllYXI7IGFuZCBpZiB3ZSBlYXJuIGFueXRoaW5nIG1vcmUsIHRoYXQsIHRvbywgc2hhbGwgYmUgYWRkZWQu4oCdIEhlIHNhaWQgdGhpcyBiZWNhdXNlIGhlIGtuZXcgdGhhdCB1cG9uIGhlYXJpbmcgaXQgdGhlIHNvbGRpZXJzIHdvdWxkIGJlIGZhciBtb3JlIG9yZGVybHkgYW5kIG9iZWRpZW50LiBBbmQgd2hlbiBNZWlkaWFzIGFza2VkOiDigJxCdXQgYXMgZm9yIG1lLCBEZXJjeWxpZGFzLCB3aGVyZSBhbSBJIHRvIGR3ZWxsP+KAnSBoZSByZXBsaWVkOiDigJxKdXN0IHdoZXJlIGl0IGlzIG1vc3QgcHJvcGVyIHRoYXQgeW91IHNob3VsZCBkd2VsbCwgTWVpZGlhcywg4oCUaW4geW91ciBuYXRpdmUgY2l0eSwgU2NlcHNpcywgYW5kIGluIHlvdXIgZmF0aGVyJ3MgaG91c2Uu4oCdCjwvdHJhbnNsYXRpb24+"
translation['3.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciBEZXJjeWxpZGFzIGhhZCBhY2NvbXBsaXNoZWQgdGhlc2UgdGhpbmdzIGFuZCBnYWluZWQgcG9zc2Vzc2lvbiBvZiBuaW5lIGNpdGllcyBpbiBlaWdodCBkYXlzLCBoZSBzZXQgYWJvdXQgcGxhbm5pbmcgaG93IGhlIG1pZ2h0IGF2b2lkIGJlaW5nIGEgYnVyZGVuIHRvIGhpcyBhbGxpZXMsIGFzIFRoaWJyb24gaGFkIGJlZW4sIGJ5IHdpbnRlcmluZyBpbiBhIGZyaWVuZGx5IGNvdW50cnksIGFuZCBob3csIG9uIHRoZSBvdGhlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OSI+Mzk5IEIuQy48L2RhdGU+PC9ub3RlPiBoYW5kLCBQaGFybmFiYXp1cyBtaWdodCBub3QsIGRlc3Bpc2luZyB0aGUgTGFjZWRhZW1vbmlhbiBhcm15IGJlY2F1c2Ugb2YgaGlzIHN1cGVyaW9yaXR5IGluIGNhdmFscnksIGhhcm0gdGhlIEdyZWVrIGNpdGllcy4gU28gaGUgc2VudCB0byBQaGFybmFiYXp1cyBhbmQgYXNrZWQgaGltIHdoZXRoZXIgaGUgcHJlZmVycmVkIHRvIGhhdmUgcGVhY2Ugb3Igd2FyLiBBbmQgUGhhcm5hYmF6dXMsIHRoaW5raW5nIHRoYXQgQWVvbGlzIGhhZCBiZWVuIG1hZGUgYSBzdHJvbmcgYmFzZSBvZiBhdHRhY2sgdXBvbiBoaXMgb3duIGR3ZWxsaW5nLXBsYWNlLCBQaHJ5Z2lhLCBjaG9zZSBhIHRydWNlLgo8ZGF0ZSBhdXRobmFtZT0iLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OSI+Mzk5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZXNlIHRoaW5ncyBoYWQgdGFrZW4gcGxhY2UsIERlcmN5bGlkYXMgd2VudCB0byBCaXRoeW5pYW4gVGhyYWNlIGFuZCB0aGVyZSBwYXNzZWQgdGhlIHdpbnRlciwgYnkgbm8gbWVhbnMgdG8gdGhlIGRpc3BsZWFzdXJlIG9mIFBoYXJuYWJhenVzLCBmb3IgdGhlIEJpdGh5bmlhbnMgd2VyZSBvZnRlbiBhdCB3YXIgd2l0aCBoaW0uIEFuZCBkdXJpbmcgbW9zdCBvZiB0aGUgdGltZSBEZXJjeWxpZGFzIHdhcyBwbHVuZGVyaW5nIEJpdGh5bmlhIGluIHNhZmV0eSBhbmQgaGFkIHByb3Zpc2lvbnMgaW4gYWJ1bmRhbmNlOyB3aGVuLCBob3dldmVyLCBhIGZvcmNlIG9mIE9kcnlzaWFucywgYWJvdXQgdHdvIGh1bmRyZWQgaG9yc2VtZW4gYW5kIGFib3V0IHRocmVlIGh1bmRyZWQgcGVsdGFzdHMsIGNhbWUgdG8gaGltIGFzIGFsbGllcyBmcm9tIFNldXRoZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+S2luZyBvZiB0aGUgT2RyeXNpYW5zLCB3aG8gZHdlbHQg4oCcYWNyb3NzIHRoZSBzdHJhaXTigJ0gKGkuZS4sIHRoZSBCb3Nwb3J1cykgaW4gVGhyYWNlLjwvbm90ZT4gYWNyb3NzIHRoZSBzdHJhaXQsIHRoZXNlIHRyb29wcywgYWZ0ZXIgbWFraW5nIGEgY2FtcCBhYm91dCB0d2VudHkgc3RhZGlhIGZyb20gdGhlIEdyZWVrIGFybXkgYW5kIGVuY2xvc2luZyBpdCB3aXRoIGEgcGFsaXNhZGUsIGFza2VkIERlcmN5bGlkYXMgZm9yIHNvbWUgb2YgaGlzIGhvcGxpdGVzIGFzIGEgZ3VhcmQgZm9yIHRoZWlyIGNhbXAgYW5kIHRoZW4gc2FsbGllZCBmb3J0aCBmb3IgYm9vdHksIGFuZCBzZWl6ZWQgbWFueSBzbGF2ZXMgYW5kIG11Y2ggcHJvcGVydHkuCjwvdHJhbnNsYXRpb24+"
translation['3.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlaXIgY2FtcCB3YXMgYWxyZWFkeSBmdWxsIG9mIGEgZ3JlYXQgZGVhbCBvZiBwbHVuZGVyLCB0aGUgQml0aHluaWFucywgbGVhcm5pbmcgaG93IG1hbnkgd2VudCBvdXQgb24gdGhlIHJhaWRzIGFuZCBob3cgbWFueSBHcmVla3MgdGhleSBoYWQgbGVmdCBiZWhpbmQgYXMgYSBndWFyZCwgZ2F0aGVyZWQgdG9nZXRoZXIgaW4gZ3JlYXQgbnVtYmVycywgcGVsdGFzdHMgYW5kIGhvcnNlbWVuLCBhbmQgYXQgZGF5YnJlYWsgbWFkZSBhbiBhdHRhY2sgdXBvbiB0aGUgR3JlZWsgaG9wbGl0ZXMsIHdobyBudW1iZXJlZCBhYm91dCB0d28gaHVuZHJlZC4gV2hlbiB0aGUgYXR0YWNraW5nIHBhcnR5IGNhbWUgbmVhciwgc29tZSBvZiB0aGVtIGh1cmxlZCBzcGVhcnMgYW5kIG90aGVycyB0aHJldyBqYXZlbGlucyBhdCB0aGUgR3JlZWtzLiBBbmQgdGhlIGxhdHRlciwgd291bmRlZCBhbmQgc2xhaW4gb25lIGFmdGVyIGFub3RoZXIsIGFuZCB1bmFibGUgdG8gZG8gdGhlIGVuZW15IGFueSBoYXJtIGJlY2F1c2Ugb2YgYmVpbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTkiPjM5OSBCLkMuPC9kYXRlPjwvbm90ZT4gc2h1dCB1cCBpbiB0aGUgcGFsaXNhZGUsIHdoaWNoIHdhcyBhYm91dCB0aGUgaGVpZ2h0IG9mIGEgbWFuLCBmaW5hbGx5IGJyb2tlIHRocm91Z2ggdGhlaXIgb3duIGZvcnRpZmljYXRpb24gYW5kIGNoYXJnZWQgdXBvbiB0aGVtLgo8ZGF0ZSBhdXRobmFtZT0iLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OSI+Mzk5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gdGhlIEJpdGh5bmlhbnMsIHdoaWxlIHRoZXkgZ2F2ZSB3YXkgYXQgd2hhdGV2ZXIgcG9pbnQgdGhlIEdyZWVrcyBydXNoZWQgZm9ydGgsIGFuZCBlYXNpbHkgbWFkZSB0aGVpciBlc2NhcGUsIHNpbmNlIHRoZXkgd2VyZSBwZWx0YXN0cyBmbGVlaW5nIGZyb20gaG9wbGl0ZXMsIGtlcHQgdGhyb3dpbmcgamF2ZWxpbnMgdXBvbiB0aGVtIGZyb20gdGhlIG9uZSBzaWRlIGFuZCB0aGUgb3RoZXIgYW5kIHN0cnVjayBkb3duIG1hbnkgb2YgdGhlbSBhdCBldmVyeSBzYWxseTsgYW5kIGluIHRoZSBlbmQgdGhlIEdyZWVrcyB3ZXJlIHNob3QgZG93biBsaWtlIGNhdHRsZSBzaHV0IHVwIGluIGEgcGVuLiBBYm91dCBmaWZ0ZWVuIG9mIHRoZW0sIGhvd2V2ZXIsIG1hZGUgdGhlaXIgZXNjYXBlIHRvIHRoZSBtYWluIEdyZWVrIGNhbXAsIGFuZCB0aGVzZSBmaWZ0ZWVuIG9ubHkgYmVjYXVzZSwgYXMgc29vbiBhcyB0aGV5IHBlcmNlaXZlZCB0aGUgc2l0dWF0aW9uLCB0aGV5IGhhZCBzbGlwcGVkIGF3YXkgaW4gdGhlIGNvdXJzZSBvZiB0aGUgYmF0dGxlIHVuaGVlZGVkIGJ5IHRoZSBCaXRoeW5pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciB0aGUgbGF0dGVyLCB3aGVuIHRoZXkgaGFkIGFjY29tcGxpc2hlZCB0aGlzIHNwZWVkeSB2aWN0b3J5LCBoYWQgc2xhaW4gdGhlIE9kcnlzaWFuIFRocmFjaWFucyB3aG8gZ3VhcmRlZCB0aGUgdGVudHMsIGFuZCByZWNvdmVyZWQgYWxsIHRoZSBib290eSwgdGhleSBkZXBhcnRlZDsgc28gdGhhdCB0aGUgR3JlZWtzLCBvbiBjb21pbmcgdG8gdGhlIHJlc2N1ZSB3aGVuIHRoZXkgbGVhcm5lZCBvZiB0aGUgYWZmYWlyLCBmb3VuZCBub3RoaW5nIGluIHRoZSBjYW1wIGV4Y2VwdCBkZWFkIGJvZGllcyBzdHJpcHBlZCBiYXJlLiBCdXQgd2hlbiB0aGUgT2RyeXNpYW5zIHJldHVybmVkLCB0aGV5IGZpcnN0IGJ1cmllZCB0aGVpciBkZWFkLCBkcmFuayBhIGdyZWF0IGRlYWwgb2Ygd2luZSBpbiB0aGVpciBob25vdXIsIGFuZCBoZWxkIGEgaG9yc2UtcmFjZTsgYW5kIHRoZW4sIGZyb20gdGhhdCB0aW1lIG9uIG1ha2luZyBjb21tb24gY2FtcCB3aXRoIHRoZSBHcmVla3MsIHRoZXkgY29udGludWVkIHRvIHBsdW5kZXIgQml0aHluaWEgYW5kIGxheSBpdCB3YXN0ZSB3aXRoIGZpcmUuCjwvdHJhbnNsYXRpb24+"
translation['3.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BdCB0aGUgb3BlbmluZyBvZiB0aGUgc3ByaW5nIERlcmN5bGlkYXMgZGVwYXJ0ZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTgiPjM5OCBCLkMuPC9kYXRlPjwvbm90ZT4gZnJvbSBCaXRoeW5pYSBhbmQgY2FtZSB0byBMYW1wc2FjdXMuIFdoaWxlIGhlIHdhcyB0aGVyZSwgQXJhY3VzLCBOYXViYXRlcywgYW5kIEFudGlzdGhlbmVzIGFycml2ZWQgdW5kZXIgY29tbWlzc2lvbiBvZiB0aGUgYXV0aG9yaXRpZXMgYXQgaG9tZS4gVGhleSBjYW1lIHRvIG9ic2VydmUgaG93IG1hdHRlcnMgc3Rvb2QgaW4gZ2VuZXJhbCBpbiBBc2lhLCBhbmQgdG8gdGVsbCBEZXJjeWxpZGFzIHRvIHJlbWFpbiB0aGVyZSBhbmQgY29udGludWUgaW4gY29tbWFuZCBmb3IgdGhlIGVuc3VpbmcgeWVhcjsgYWxzbyB0byB0ZWxsIGhpbSB0aGF0IHRoZSBlcGhvcnMgaGFkIGdpdmVuIHRoZW0gaW5zdHJ1Y3Rpb25zPGRhdGUgYXV0aG5hbWU9Ii0zOTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTgiPjM5OCBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OCI+Mzk4IEIuQy48L2RhdGU+PC9ub3RlPiB0byBjYWxsIHRvZ2V0aGVyIHRoZSBzb2xkaWVycyBhbmQgc2F5IHRoYXQgd2hpbGUgdGhlIGVwaG9ycyBjZW5zdXJlZCB0aGVtIGZvciB3aGF0IHRoZXkgaGFkIGRvbmUgaW4gZm9ybWVyIGRheXMsIHRoZXkgY29tbWVuZGVkIHRoZW0gYmVjYXVzZSBub3cgdGhleSB3ZXJlIGRvaW5nIG5vIHdyb25nOyB0aGV5IHdlcmUgYWxzbyB0byBzYXkgaW4gcmVnYXJkIHRvIHRoZSBmdXR1cmUgdGhhdCBpZiB0aGUgc29sZGllcnMgd2VyZSBndWlsdHkgb2Ygd3JvbmctZG9pbmcgdGhlIGVwaG9ycyB3b3VsZCBub3QgdG9sZXJhdGUgaXQsIGJ1dCBpZiB0aGV5IGRlYWx0IGp1c3RseSBieSB0aGUgYWxsaWVzIHRoZXkgd291bGQgY29tbWVuZCB0aGVtLgo8ZGF0ZSBhdXRobmFtZT0iLTM5OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OCI+Mzk4IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPldoZW4sIGhvd2V2ZXIsIHRoZXkgY2FsbGVkIHRvZ2V0aGVyIHRoZSBzb2xkaWVycyBhbmQgdG9sZCB0aGVtIHRoZXNlIHRoaW5ncywgdGhlIGxlYWRlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Qcm9iYWJseSBYZW5vcGhvbiBoaW1zZWxmLjwvbm90ZT4gb2YgQ3lydXMnIGZvcm1lciB0cm9vcHMgcmVwbGllZDog4oCcQnV0LCBtZW4gb2YgTGFjZWRhZW1vbiwgd2UgYXJlIHRoZSBzYW1lIG1lbiBub3cgYXMgd2Ugd2VyZSBsYXN0IHllYXI7IGJ1dCBvdXIgY29tbWFuZGVyIG5vdyBpcyBvbmUgbWFuLCBhbmQgaW4gdGhlIHBhc3Qgd2FzIGFub3RoZXIuIFRoZXJlZm9yZSB5b3UgYXJlIGF0IG9uY2UgYWJsZSB0byBqdWRnZSBmb3IgeW91cnNlbHZlcyB0aGUgcmVhc29uIHdoeSB3ZSBhcmUgbm90IGF0IGZhdWx0IG5vdywgYWx0aG91Z2ggd2Ugd2VyZSB0aGVuLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['3.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGlsZSB0aGUgYW1iYXNzYWRvcnMgZnJvbSBob21lIGFuZCBEZXJjeWxpZGFzIHdlcmUgcXVhcnRlcmVkIHRvZ2V0aGVyLCBvbmUgb2YgQXJhY3VzJyBwYXJ0eSBtZW50aW9uZWQgdGhlIGZhY3QgdGhhdCB0aGV5IGhhZCBsZWZ0IGFtYmFzc2Fkb3JzIGZyb20gdGhlIENoZXJzb25lc2lhbnMgYXQgTGFjZWRhZW1vbi4gQW5kIHRoZXkgc2FpZCB0aGF0IHRoZXNlIGFtYmFzc2Fkb3JzIHN0YXRlZCB0aGF0IG5vdyB0aGV5IHdlcmUgdW5hYmxlIHRvIHRpbGwgdGhlaXIgbGFuZCBpbiB0aGUgQ2hlcnNvbmVzZSwgZm9yIGl0IHdhcyBiZWluZyBjb250aW51YWxseSBwaWxsYWdlZCBieSB0aGUgVGhyYWNpYW5zOyBidXQgaWYgaXQgd2VyZSBwcm90ZWN0ZWQgYnkgYSB3YWxsIGV4dGVuZGluZyBmcm9tIHNlYSB0byBzZWEsIHRoZXkgYW5kIGxpa2V3aXNlIGFsbCBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgd2hvIHNvIGRlc2lyZWQgd291bGQgaGF2ZSBhbiBhYnVuZGFuY2Ugb2YgZ29vZCwgdGlsbGFibGUgbGFuZC4gQ29uc2VxdWVudGx5LCB0aGV5IHNhaWQsIHRoZXkgd291bGQgbm90IGJlIHN1cnByaXNlZCBpZiBzb21lIExhY2VkYWVtb25pYW4gd2VyZSBpbiBmYWN0IHNlbnQgb3V0IGJ5IHRoZSBzdGF0ZSB3aXRoIGFuIGFybXkgdG8gcGVyZm9ybSB0aGlzIHRhc2suCjwvdHJhbnNsYXRpb24+"
translation['3.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk5vdyBEZXJjeWxpZGFzLCB3aGVuIGhlIGhlYXJkIHRoaXMsIGRpZCBub3QgbWFrZSBrbm93biB0byB0aGVtIHRoZSBwdXJwb3NlIHdoaWNoIGhlIGNoZXJpc2hlZCwgYnV0IGRpc21pc3NlZCB0aGVtIG9uIHRoZWlyIGpvdXJuZXkgdGhyb3VnaCB0aGUgR3JlZWsgY2l0aWVzIHRvIEVwaGVzdXMsIGJlaW5nIHdlbGwgcGxlYXNlZCB0aGF0IHRoZXkgd2VyZSBnb2luZyB0byBzZWUgdGhlIGNpdGllcyBlbmpveWluZyBhIHN0YXRlIG9mPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk4Ij4zOTggQi5DLjwvZGF0ZT48L25vdGU+IHBlYWNlIGFuZCBwcm9zcGVyaXR5LiBTbyB0aGV5IGRlcGFydGVkLiBCdXQgRGVyY3lsaWRhcywgaGF2aW5nIG5vdyBmb3VuZCBvdXQgdGhhdCBoZSB3YXMgdG8gcmVtYWluIGluIEFzaWEsIHNlbnQgdG8gUGhhcm5hYmF6dXMgYWdhaW4gYW5kIGFza2VkIHdoZXRoZXIgaGUgcHJlZmVycmVkIHRvIGhhdmUgYSB0cnVjZSwgYXMgZHVyaW5nIHRoZSB3aW50ZXIsIG9yIHdhci4gU2luY2UgUGhhcm5hYmF6dXMgb24gdGhpcyBvY2Nhc2lvbiBhZ2FpbiBjaG9zZSBhIHRydWNlLCB1bmRlciB0aGVzZSBjaXJjdW1zdGFuY2VzIERlcmN5bGlkYXMsIGxlYXZpbmcgdGhlIGNpdGllcyBvZiB0aGF0IHJlZ2lvbiBhbHNvIGluIHBlYWNlLCBjcm9zc2VkIHRoZSBIZWxsZXNwb250IHdpdGggaGlzIGFybXkgdG8gRXVyb3BlLCBhbmQgYWZ0ZXIgbWFyY2hpbmcgdGhyb3VnaCBhIHBvcnRpb24gb2YgVGhyYWNlIHdoaWNoIHdhcyBmcmllbmRseSBhbmQgYmVpbmcgZW50ZXJ0YWluZWQgYnkgU2V1dGhlcywgYXJyaXZlZCBhdCB0aGUgQ2hlcnNvbmVzZS4KPGRhdGUgYXV0aG5hbWU9Ii0zOTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTgiPjM5OCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBoZSBsZWFybmVkIHRoYXQgdGhpcyBDaGVyc29uZXNlIGNvbnRhaW5lZCBlbGV2ZW4gb3IgdHdlbHZlIHRvd25zIGFuZCB3YXMgYW4gZXh0cmVtZWx5IHByb2R1Y3RpdmUgYW5kIHJpY2ggbGFuZCwgYnV0IGhhZCBiZWVuIHJhdmFnZWQsIGV2ZW4gYXMgd2FzIHN0YXRlZCwgYnkgdGhlIFRocmFjaWFucywgYW5kIGZvdW5kIGFsc28gdGhhdCB0aGUgd2lkdGggb2YgdGhlIGlzdGhtdXMgd2FzIHRoaXJ0eS1zZXZlbiBzdGFkaWEsIGhlIGRpZCBub3QgZGVsYXksIGJ1dCBhZnRlciBvZmZlcmluZyBzYWNyaWZpY2VzIHByb2NlZWRlZCB0byBidWlsZCBhIHdhbGwsIGRpdmlkaW5nIHRoZSB3aG9sZSBkaXN0YW5jZSBwYXJ0IGJ5IHBhcnQgYW1vbmcgdGhlIHNvbGRpZXJzOyBhbmQgYnkgcHJvbWlzaW5nIHRoZW0gdGhhdCBoZSB3b3VsZCBnaXZlIHByaXplcyB0byB0aGUgZmlyc3Qgd2hvIGZpbmlzaGVkIHRoZWlyIHBhcnQsIGFuZCBhbHNvIHRvIHRoZSBvdGhlcnMgYXMgdGhleSBzZXZlcmFsbHkgbWlnaHQgZGVzZXJ2ZSwgaGUgY29tcGxldGVkIHRoZSB3YWxsLCBhbHRob3VnaCBoZSBoYWQgbm90IGJlZ3VuIHVwb24gaXQgdW50aWwgdGhlIHNwcmluZywgYmVmb3JlIHRoZSB0aW1lIG9mIGhhcnZlc3QuIEFuZCBoZSBicm91Z2h0IHVuZGVyIHRoZSBwcm90ZWN0aW9uIG9mIHRoZSB3YWxsIGVsZXZlbiB0b3ducywgbWFueSBoYXJib3VycywgYSBncmVhdCBkZWFsIG9mIGdvb2QgbGFuZCBzdWl0ZWQgZm9yIHJhaXNpbmcgZ3JhaW4gYW5kIGZydWl0LCBhbmQgYSB2YXN0IGFtb3VudCBvZiBzcGxlbmRpZCBwYXN0dXJlLWxhbmQgZm9yIGFsbCBraW5kcyBvZiBjYXR0bGUuCjwvdHJhbnNsYXRpb24+"
translation['3.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGhlIGhhZCBkb25lIHRoaXMsIGhlIGNyb3NzZWQgYmFjayBhZ2FpbiB0byBBc2lhLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBoZSB3YXMgbm93IGluc3BlY3RpbmcgdGhlIGNpdGllcyBvZiBBc2lhLCBoZSBzYXcgdGhhdCBpbiBnZW5lcmFsIHRoZXkgd2VyZSBpbiBnb29kIGNvbmRpdGlvbiwgYnV0IGZvdW5kIHRoYXQgZXhpbGVzIGZyb20gQ2hpb3MgaGVsZCBwb3NzZXNzaW9uIG9mIEF0YXJuZXVzLCBhIHN0cm9uZyBwbGFjZSwgYW5kIGZyb20gdGhpcyBhcyBhIGJhc2Ugd2VyZSBwaWxsYWdpbmcgSW9uaWEgYW5kIG1ha2luZyB0aGVpciBsaXZpbmcgdGhlcmVieS4gV2hlbiBoZSBsZWFybmVkIGZ1cnRoZXIgdGhhdCB0aGV5IGhhZCBhIGxhcmdlIHN0b2NrPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk4Ij4zOTggQi5DLjwvZGF0ZT48L25vdGU+IG9mIGdyYWluIGluIHRoZSBjaXR5LCBoZSBpbnZlc3RlZCBhbmQgYmVzaWVnZWQgdGhlbTsgYW5kIGluIGVpZ2h0IG1vbnRocyBoZSBicm91Z2h0IHRoZW0gdG8gdGVybXMsIGFwcG9pbnRlZCBEcmFjb24gb2YgUGVsbGVuZSB0byBoYXZlIGNoYXJnZSBvZiB0aGUgY2l0eSwgYW5kIGFmdGVyIHN0b3JpbmcgaW4gdGhlIHBsYWNlIGFsbCBraW5kcyBvZiBzdXBwbGllcyBpbiBhYnVuZGFuY2UsIHNvIHRoYXQgaGUgbWlnaHQgaGF2ZSBpdCBhcyBhIGhhbHRpbmctcGxhY2Ugd2hlbmV2ZXIgaGUgY2FtZSB0aGVyZSwgZGVwYXJ0ZWQgdG8gRXBoZXN1cywgd2hpY2ggaXMgZGlzdGFudCBmcm9tIFNhcmRpcyBhIHRocmVlIGRheXMnIGpvdXJuZXkuCjxkYXRlIGF1dGhuYW1lPSItMzk4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk4Ij4zOTggQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['3.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXAgdG8gdGhpcyB0aW1lIFRpc3NhcGhlcm5lcyBhbmQgRGVyY3lsaWRhcywgYW5kPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk3Ij4zOTcgQi5DLjwvZGF0ZT48L25vdGU+IHRoZSBHcmVla3Mgb2YgdGhpcyByZWdpb24gYW5kIHRoZSBiYXJiYXJpYW5zLCBjb250aW51ZWQgYXQgcGVhY2Ugd2l0aCBvbmUgYW5vdGhlci4gTm93LCBob3dldmVyLCBlbWJhc3NpZXMgY2FtZSB0byBMYWNlZGFlbW9uIGZyb20gdGhlIElvbmlhbiBjaXRpZXMgYW5kIHNldCBmb3J0aCB0aGF0IGl0IHdhcyBpbiB0aGUgcG93ZXIgb2YgVGlzc2FwaGVybmVzLCBpZiBoZSBjaG9zZSwgdG8gbGVhdmUgdGhlIEdyZWVrIGNpdGllcyBpbmRlcGVuZGVudDsgdGhlcmVmb3JlIHRoZXkgZXhwcmVzc2VkIHRoZSBiZWxpZWYgdGhhdCBpZiBDYXJpYSwgdGhlIHBhcnRpY3VsYXIgcHJvdmluY2Ugd2hlcmUgdGhlIHJlc2lkZW5jZSBvZiBUaXNzYXBoZXJuZXMgd2FzLCBzaG91bGQgc3VmZmVyIGhhcm0sIHVuZGVyIHRoZXNlIGNpcmN1bXN0YW5jZXMgaGUgd291bGQgdmVyeSBxdWlja2x5IGxlYXZlIHRoZW0gaW5kZXBlbmRlbnQuIFdoZW4gdGhlIGVwaG9ycyBoZWFyZCB0aGlzLCB0aGV5IHNlbnQgdG8gRGVyY3lsaWRhcyBhbmQgZ2F2ZSBvcmRlcnMgdGhhdCBoZSBzaG91bGQgY3Jvc3MgdGhlIHJpdmVyIGludG8gQ2FyaWEsIGFuZCB0aGF0IFBoYXJheCwgdGhlIGFkbWlyYWwsIHNob3VsZCBjb2FzdCBhbG9uZyB3aXRoIGhpcyBzaGlwcyB0byB0aGUgc2FtZSBwbGFjZS4gVGhleSBhY2NvcmRpbmdseSBkaWQgc28uCjxkYXRlIGF1dGhuYW1lPSItMzk3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk3Ij4zOTcgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['3.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaXQgY2hhbmNlZCB0aGF0IGF0IHRoaXMgdGltZSBQaGFybmFiYXp1cyBoYWQgY29tZSB0byB2aXNpdCBUaXNzYXBoZXJuZXMsIG5vdCBvbmx5IGJlY2F1c2UgVGlzc2FwaGVybmVzIGhhZCBiZWVuIGFwcG9pbnRlZCBnZW5lcmFsLWluLWNoaWVmLCBidXQgYWxzbyBmb3IgdGhlIHB1cnBvc2Ugb2YgYXNzdXJpbmcgaGltIHRoYXQgaGUgd2FzIHJlYWR5IHRvIG1ha2Ugd2FyIHRvZ2V0aGVyIHdpdGggaGltLCB0byBiZSBoaXMgYWxseSwgYW5kIHRvIGFpZCBoaW0gaW4gZHJpdmluZyB0aGUgR3JlZWtzIG91dCBvZiB0aGUgdGVycml0b3J5IG9mIHRoZSBLaW5nOyBmb3IgaGUgc2VjcmV0bHkgZW52aWVkIFRpc3NhcGhlcm5lcyBoaXMgcG9zaXRpb24gYXMgZ2VuZXJhbCBmb3IgdmFyaW91cyByZWFzb25zLCBidXQgaW4gcGFydGljdWxhciBoZSB0b29rIGl0IGhhcmRseSB0aGF0IGhlIGhhZCBiZWVuIGRlcHJpdmVkIG9mIEFlb2xpcy4gTm93IHdoZW4gVGlzc2FwaGVybmVzIGhlYXJkIGhpcyB3b3JkcywgaGUgc2FpZDog4oCcRmlyc3QsIHRoZW4sIGNyb3NzIG92ZXIgd2l0aCBtZSBpbnRvIENhcmlhLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NyI+Mzk3IEIuQy48L2RhdGU+PC9ub3RlPiBhbmQgdGhlbiB3ZSB3aWxsIGNvbnN1bHQgYWJvdXQgdGhlc2UgbWF0dGVycy7igJ0KPGRhdGUgYXV0aG5hbWU9Ii0zOTciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTciPjM5NyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGV5IHdlcmUgdGhlcmUsIHRoZXkgZGVjaWRlZCB0byBzdGF0aW9uIGFkZXF1YXRlIGdhcnJpc29ucyBpbiB0aGUgZm9ydHJlc3NlcyBhbmQgdG8gY3Jvc3MgYmFjayBhZ2FpbiB0byBJb25pYS4gQW5kIHdoZW4gRGVyY3lsaWRhcyBoZWFyZCB0aGF0IHRoZXkgaGFkIGNyb3NzZWQgdGhlIE1hZWFuZGVyIGFnYWluLCBoZSB0b2xkIFBoYXJheCB0aGF0IGhlIHdhcyBhZnJhaWQgVGlzc2FwaGVybmVzIGFuZCBQaGFybmFiYXp1cyBtaWdodCBvdmVycnVuIGFuZCBwaWxsYWdlIHRoZSBsYW5kLCB1bnByb3RlY3RlZCBhcyBpdCB3YXMsIGFuZCBzbyBjcm9zc2VkIG92ZXIgaGltc2VsZiB0byBJb25pYS4gTm93IHdoaWxlIHRoZXkgd2VyZSBvbiB0aGUgbWFyY2gsIHRoZSBhcm15IGJlaW5nIGJ5IG5vIG1lYW5zIGluIGJhdHRsZSBmb3JtYXRpb24sIHNpbmNlIHRoZXkgc3VwcG9zZWQgdGhhdCB0aGUgZW5lbXkgaGFkIGdvbmUgb24gYWhlYWQgaW50byB0aGUgdGVycml0b3J5IG9mIHRoZSBFcGhlc2lhbnMsIG9uIGEgc3VkZGVuIHRoZXkgc2F3IHNjb3V0cyBvbiB0aGUgYnVyaWFsLW1vdW5kcyBpbiBmcm9udCBvZiB0aGVtOwo8L3RyYW5zbGF0aW9uPg=="
translation['3.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgd2hlbiB0aGV5IGFsc28gc2VudCBtZW4gdG8gdGhlIHRvcHMgb2YgdGhlIG1vdW5kcyBhbmQgdG93ZXJzIGluIHRoZWlyIG5laWdoYm91cmhvb2QsIHRoZXkgbWFkZSBvdXQgYW4gYXJteSBkcmF3biB1cCBpbiBsaW5lIG9mIGJhdHRsZSB3aGVyZSB0aGVpciBvd24gcm9hZCByYW7igJRDYXJpYW5zIHdpdGggd2hpdGUgc2hpZWxkcywgdGhlIGVudGlyZSBQZXJzaWFuIGZvcmNlIHdoaWNoIGNoYW5jZWQgdG8gYmUgYXQgaGFuZCwgYWxsIHRoZSBHcmVlayB0cm9vcHMgd2hpY2ggZWFjaCBvZiB0aGUgdHdvIHNhdHJhcHMgaGFkLCBhbmQgaG9yc2VtZW4gaW4gZ3JlYXQgbnVtYmVycywgdGhvc2Ugb2YgVGlzc2FwaGVybmVzIHVwb24gdGhlIHJpZ2h0IHdpbmcgYW5kIHRob3NlIG9mIFBoYXJuYWJhenVzIHVwb24gdGhlIGxlZnQuCjwvdHJhbnNsYXRpb24+"
translation['3.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBEZXJjeWxpZGFzIGxlYXJuZWQgb2YgYWxsIHRoaXMsIGhlIHRvbGQgdGhlIGNvbW1hbmRlcnMgb2YgZGl2aXNpb25zIGFuZCB0aGUgY2FwdGFpbnMgdG8gZm9ybSB0aGVpciBtZW4gaW4gbGluZSwgZWlnaHQgZGVlcCwgYXMgcXVpY2tseSBhcyBwb3NzaWJsZSwgYW5kIHRvIHN0YXRpb24gdGhlIHBlbHRhc3RzIG9uIGVpdGhlciB3aW5nIGFuZCBsaWtld2lzZSB0aGUgY2F2YWxyeeKAlGFsbCB0aGF0IGhlIGNoYW5jZWQgdG8gaGF2ZSBhbmQgc3VjaCBhcyBpdCB3YXM7IG1lYW53aGlsZSBoZSBoaW1zZWxmIG9mZmVyZWQgc2FjcmlmaWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgYWxsIHRoYXQgcGFydCBvZiB0aGUgYXJteSB3aGljaCB3YXMgZnJvbSBQZWxvcG9ubmVzdXMga2VwdCBxdWlldCBhbmQgcHJlcGFyZWQgZm9yIGJhdHRsZTsgYnV0IGFzIGZvciB0aGUgbWVuIGZyb20gUHJpZW5lIGFuZCBBY2hpbGxlaXVtLCBmcm9tIHRoZSBpc2xhbmRzIGFuZCB0aGUgSW9uaWFuIGNpdGllcywgc29tZSBvZiB0aGVtIGxlZnQgdGhlaXIgYXJtcyBpbiB0aGUgc3RhbmRpbmcgZ3JhaW4gKGZvciB0aGUgZ3JhaW4gd2FzIHRhbGwgaW4gdGhlIHBsYWluIG9mIHRoZSBNYWVhbmRlcikgYW5kIHJhbiBhd2F5LCB3aGlsZSBhbGwgdGhvc2Ugd2hvIGRpZCBzdGFuZCBzaG93ZWQgY2xlYXJseSB0aGF0IHRoZXkgd291bGQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTciPjM5NyBCLkMuPC9kYXRlPjwvbm90ZT4gbm90IHN0YW5kIHZlcnkgbG9uZy4KPGRhdGUgYXV0aG5hbWU9Ii0zOTciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTciPjM5NyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgb3RoZXIgc2lkZSBQaGFybmFiYXp1cywgaXQgd2FzIHJlcG9ydGVkLCB3YXMgdXJnaW5nIGFuIGVuZ2FnZW1lbnQuIEJ1dCBUaXNzYXBoZXJuZXMsIHJlbWVtYmVyaW5nIHRoZSB3YXkgQ3lydXMnIHRyb29wcyBoYWQgbWFkZSB3YXIgd2l0aCB0aGUgUGVyc2lhbnMgYW5kIGJlbGlldmluZyB0aGF0IHRoZSBHcmVla3Mgd2VyZSBhbGwgbGlrZSB0aGVtLCBkaWQgbm90IHdpc2ggdG8gZmlnaHQsIGJ1dCBzZW50IHRvIERlcmN5bGlkYXMgYW5kIHNhaWQgdGhhdCBoZSB3YW50ZWQgdG8gY29tZSB0byBhIGNvbmZlcmVuY2Ugd2l0aCBoaW0uIEFuZCBEZXJjeWxpZGFzLCB0YWtpbmcgdGhlIGJlc3QtbG9va2luZyBvZiB0aGUgdHJvb3BzIGhlIGhhZCwgYm90aCBjYXZhbHJ5IGFuZCBpbmZhbnRyeSwgY2FtZSBmb3J3YXJkIHRvIG1lZXQgdGhlIG1lc3NlbmdlcnMgYW5kIHNhaWQ6IOKAnEZvciBteSBwYXJ0IEkgaGFkIHByZXBhcmVkIHRvIGZpZ2h0LCBhcyB5b3Ugc2VlOyBob3dldmVyLCBzaW5jZSBoZSB3aXNoZXMgdG8gY29tZSB0byBhIGNvbmZlcmVuY2UsIEkgaGF2ZSBubyBvYmplY3Rpb24gbXlzZWxmLiBCdXQgaWYgdGhpcyBpcyB0byBiZSBkb25lLCBwbGVkZ2VzIGFuZCBob3N0YWdlcyBtdXN0IGJlIGdpdmVuIGFuZCByZWNlaXZlZC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['3.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoaXMgcGxhbiBoYWQgYmVlbiBkZWNpZGVkIHVwb24gYW5kIGNhcnJpZWQgb3V0LCB0aGUgYXJtaWVzIHdlbnQgYXdheSwgdGhlIGJhcmJhcmlhbnMgdG8gVHJhbGxlcyBpbiBDYXJpYSwgYW5kIHRoZSBHcmVla3MgdG8gTGV1Y29waHJ5cywgd2hlcmUgdGhlcmUgd2FzIGEgdmVyeSBob2x5IHNocmluZSBvZiBBcnRlbWlzIGFuZCBhIGxha2UgbW9yZSB0aGFuIGEgc3RhZGl1bSBpbiBsZW5ndGgsIHdpdGggYSBzYW5keSBib3R0b20gYW5kIGFuIHVuZmFpbGluZyBzdXBwbHkgb2YgZHJpbmthYmxlLCB3YXJtIHdhdGVyLiBUaGlzLCB0aGVuLCB3YXMgd2hhdCB3YXMgZG9uZSBhdCB0aGF0IHRpbWU7IGJ1dCBvbiB0aGUgZm9sbG93aW5nIGRheSB0aGUgY29tbWFuZGVycyBjYW1lIHRvIHRoZSBwbGFjZSBhZ3JlZWQgdXBvbiwgYW5kIGl0IHNlZW1lZCBiZXN0IHRvIHRoZW0gdG8gbGVhcm4gZnJvbSBvbmUgYW5vdGhlciBvbiB3aGF0IHRlcm1zIGVhY2ggd291bGQgbWFrZSBwZWFjZS4KPC90cmFuc2xhdGlvbj4="
translation['3.2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5EZXJjeWxpZGFzIGFjY29yZGluZ2x5IHN0YXRlZCBoaXMgY29uZGl0aW9uLCB0aGF0IHRoZSBLaW5nIHNob3VsZCBsZWF2ZSB0aGUgR3JlZWsgY2l0aWVzIGluZGVwZW5kZW50OyBhbmQgVGlzc2FwaGVybmVzIGFuZCBQaGFybmFiYXp1cyBzdGF0ZWQgdGhlaXJzLCB0aGF0IHRoZSBHcmVlayBhcm15IHNob3VsZCBkZXBhcnQgZnJvbSB0aGUgY291bnRyeSBhbmQgdGhlIExhY2VkYWVtb25pYW4gZ292ZXJub3JzIGZyb20gdGhlIGNpdGllcy4gV2hlbiB0aGV5IGhhZCBzdGF0ZWQgdGhlc2UgdGVybXMgdG8gb25lIGFub3RoZXIsIHRoZXkgY29uY2x1ZGVkIGEgdHJ1Y2UsIHRvIGNvbnRpbnVlIHVudGlsIHRoZSBwcm9wb3NhbHMgc2hvdWxkIGJlIHJlcG9ydGVkIGJ5IERlcmN5bGlkYXMgdG8gTGFjZWRhZW1vbiwgYW5kIGJ5IFRpc3NhcGhlcm5lcyB0byB0aGUgS2luZy4KPC90cmFuc2xhdGlvbj4="
translation['3.2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hpbGUgdGhlc2UgdGhpbmdzIHdlcmUgYmVpbmcgZG9uZSBpbiBBc2lhIGJ5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk5Ij4zOTkgQi5DLjwvZGF0ZT48L25vdGU+IERlcmN5bGlkYXMsIHRoZSBMYWNlZGFlbW9uaWFucyBhdCB0aGUgc2FtZSB0aW1lIHdlcmUgZW5nYWdlZCBpbiB3YXIgYXQgaG9tZSwgYWdhaW5zdCB0aGUgRWxlYW5zLiBUaGV5IGhhZCBsb25nIGJlZW4gYW5ncnkgd2l0aCB0aGUgRWxlYW5zLCBib3RoIGJlY2F1c2UgdGhlIGxhdHRlciBoYWQgY29uY2x1ZGVkIGFuIGFsbGlhbmNlIHdpdGggdGhlIEF0aGVuaWFucywgQXJnaXZlcywgYW5kIE1hbnRpbmVhbnMsIGFuZCBiZWNhdXNlLCBhbGxlZ2luZyB0aGF0IGp1ZGdtZW50IGhhZCBiZWVuIHJlbmRlcmVkIGFnYWluc3QgdGhlIExhY2VkYWVtb25pYW5zLCB0aGV5IGhhZCBkZWJhcnJlZCB0aGVtIGZyb20gYm90aCB0aGUgaG9yc2UtcmFjZXMgYW5kIHRoZSBhdGhsZXRpYyBjb250ZXN0czs8ZGF0ZSBhdXRobmFtZT0iLTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5OSI+Mzk5IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkkuZS4sIGF0IHRoZSBPbHltcGljIGdhbWVzLjwvbm90ZT4gYW5kIHRoaXMgYWxvbmUgZGlkIG5vdCBzdWZmaWNlIHRoZW0sIGJ1dCBmdXJ0aGVybW9yZSwgYWZ0ZXIgTGljaGFzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgTGFjZWRhZW1vbmlhbi48L25vdGU+IGhhZCBtYWRlIG92ZXIgaGlzIGNoYXJpb3QgdG8gdGhlIFRoZWJhbnMgYW5kIHRoZXkgd2VyZSBwcm9jbGFpbWVkIHZpY3RvcmlvdXMsIHdoZW4gTGljaGFzIGNhbWUgaW4gdG8gcHV0IHRoZSBnYXJsYW5kIHVwb24gaGlzIGNoYXJpb3RlZXIsIHRoZXkgaGFkIHNjb3VyZ2VkIGhpbSwgYW4gb2xkIG1hbiwgYW5kIGRyaXZlbiBoaW0gb3V0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYWdhaW4sIGF0IGEgbGF0ZXIgdGltZSwgd2hlbiBBZ2lzIHdhcyBzZW50IHRvIHNhY3JpZmljZSB0byBaZXVzIGluIGFjY29yZGFuY2Ugd2l0aCBhbiBvcmFjbGUsIHRoZSBFbGVhbnMgd291bGQgbm90IGFsbG93IGhpbSB0byBwcmF5IGZvciB2aWN0b3J5IGluIHdhciwgc2F5aW5nIHRoYXQgZXZlbiBmcm9tIGFuY2llbnQgdGltZXMgaXQgd2FzIGFuIGVzdGFibGlzaGVkIHByaW5jaXBsZSB0aGF0IEdyZWVrcyBzaG91bGQgbm90IGNvbnN1bHQgdGhlIG9yYWNsZSBhYm91dCBhIHdhciB3aXRoIEdyZWVrczsgc28gdGhhdCBBZ2lzIHdlbnQgYXdheSB3aXRob3V0IHNhY3JpZmljaW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgaW4gY29uc2VxdWVuY2Ugb2YgYWxsIHRoZXNlIHRoaW5ncyB0aGF0IHRoZSBlcGhvcnMgYW5kIHRoZSBhc3NlbWJseSB3ZXJlIGFuZ3J5LCBhbmQgdGhleSBkZXRlcm1pbmVkIHRvIGJyaW5nIHRoZSBFbGVhbnMgdG8gdGhlaXIgc2Vuc2VzLiBBY2NvcmRpbmdseSwgdGhleSBzZW50IGFtYmFzc2Fkb3JzIHRvIEVsaXMgYW5kIHNhaWQgdGhhdCBpdCBzZWVtZWQgdG8gdGhlIGF1dGhvcml0aWVzIG9mIExhY2VkYWVtb24gdG8gYmUganVzdCB0aGF0IHRoZXkgc2hvdWxkIGxlYXZlIHRoZWlyIG91dGx5aW5nIHRvd25zIGluZGVwZW5kZW50LiBBbmQgd2hlbiB0aGUgRWxlYW5zIHJlcGxpZWQgdGhhdCB0aGV5IHdvdWxkIG5vdCBkbyBzbywgZm9yIHRoZSByZWFzb24gdGhhdCB0aGV5IGhlbGQgdGhlIHRvd25zIGFzIHByaXplcyBvZiB3YXIsIHRoZSBlcGhvcnMgY2FsbGVkIG91dCB0aGUgYmFuLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Phs+Bzr/Phc+B4b2wzr0gz4bOseG9t869zrXOuc69PC9mb3JlaWduPiB3YXMgYSBMYWNlZGFlbW9uaWFuIHBocmFzZSBjb3ZlcmluZyBib3RoIHRoZSBkZWNsYXJhdGlvbiBvZiB3YXIgYW5kIHRoZSBtb2JpbGl6YXRpb24gb2YgdGhlIGFybXkuPC9ub3RlPiBBbmQgQWdpcywgYXQgdGhlIGhlYWQgb2YgdGhlIGFybXksIG1hZGUgaGlzIGVudHJhbmNlIGludG8gdGhlIHRlcnJpdG9yeSBvZiBFbGlzIHRocm91Z2ggQWNoYWVhLCBhbG9uZyB0aGUgTGFyaXN1cy4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4bPgc6/z4XPgeG9sM69IM+GzrHhvbfOvc61zrnOvTwvZm9yZWlnbj4gd2FzIGEgTGFjZWRhZW1vbmlhbiBwaHJhc2UgY292ZXJpbmcgYm90aCB0aGUgZGVjbGFyYXRpb24gb2Ygd2FyIGFuZCB0aGUgbW9iaWxpemF0aW9uIG9mIHRoZSBhcm15LjwvdHJhbnNsYXRpb24+"
translation['3.2.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiB0aGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTkiPjM5OSBCLkMuPC9kYXRlPjwvbm90ZT4gYXJteSBoYWQgYnV0IGp1c3QgYXJyaXZlZCBpbiB0aGUgZW5lbXkncyBjb3VudHJ5IGFuZCB0aGUgbGFuZCB3YXMgYmVpbmcgbGFpZCB3YXN0ZSwgYW4gZWFydGhxdWFrZSB0b29rIHBsYWNlLiBUaGVuIEFnaXMsIHRoaW5raW5nIHRoYXQgdGhpcyB3YXMgYSBoZWF2ZW4tc2VudCBzaWduLCBkZXBhcnRlZCBhZ2FpbiBmcm9tIHRoZSBjb3VudHJ5IGFuZCBkaXNiYW5kZWQgaGlzIGFybXkuIEFzIGEgcmVzdWx0IG9mIHRoaXMgdGhlIEVsZWFucyB3ZXJlIG11Y2ggYm9sZGVyLCBhbmQgc2VudCBhcm91bmQgZW1iYXNzaWVzIHRvIGFsbCB0aGUgc3RhdGVzIHdoaWNoIHRoZXkga25ldyB0byBiZSB1bmZyaWVuZGx5IHRvIHRoZSBMYWNlZGFlbW9uaWFucy4KPGRhdGUgYXV0aG5hbWU9Ii0zOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTkiPjM5OSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.2.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGUgY291cnNlIG9mIHRoZSB5ZWFyLCBob3dldmVyLCB0aGUgZXBob3JzIGFnYWluIGNhbGxlZCBvdXQgdGhlIGJhbiBhZ2FpbnN0IEVsaXMsIGFuZCB3aXRoIHRoZSBleGNlcHRpb24gb2YgdGhlIEJvZW90aWFucyBhbmQgdGhlIENvcmludGhpYW5zIGFsbCB0aGUgYWxsaWVzLCBpbmNsdWRpbmcgdGhlIEF0aGVuaWFucywgdG9vayBwYXJ0IHdpdGggQWdpcyBpbiB0aGUgY2FtcGFpZ24uIE5vdyB3aGVuIEFnaXMgZW50ZXJlZCBFbGlzIGJ5IHdheSBvZiBBdWxvbiwgdGhlIExlcHJlYW5zIGF0IG9uY2UgcmV2b2x0ZWQgZnJvbSB0aGUgRWxlYW5zIGFuZCBjYW1lIG92ZXIgdG8gaGltLCB0aGUgTWFjaXN0aWFucyBsaWtld2lzZSBhdCBvbmNlLCBhbmQgYWZ0ZXIgdGhlbSB0aGUgRXBpdGFsaWFucy4gQW5kIHdoaWxlIGhlIHdhcyBjcm9zc2luZyB0aGUgcml2ZXIsIHRoZSBMZXRyaW5pYW5zLCBBbXBoaWRvbGlhbnMsIGFuZCBNYXJnYW5pYW5zIGNhbWUgb3ZlciB0byBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['3.2.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmV1cG9uIGhlIHdlbnQgdG8gT2x5bXBpYSBhbmQgb2ZmZXJlZCBzYWNyaWZpY2VzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk4Ij4zOTggQi5DLjwvZGF0ZT48L25vdGU+IHRvIE9seW1waWFuIFpldXMsIGFuZCB0aGlzIHRpbWUgbm8gb25lIHVuZGVydG9vayB0byBwcmV2ZW50IGhpbS4gQWZ0ZXIgaGlzIHNhY3JpZmljZXMgaGUgbWFyY2hlZCB1cG9uIHRoZSBjaXR5IG9mIEVsaXMsIGxheWluZyB0aGUgbGFuZCB3YXN0ZSB3aXRoIGF4ZSBhbmQgZmlyZSBhcyBoZSB3ZW50LCBhbmQgdmFzdCBudW1iZXJzIG9mIGNhdHRsZSBhbmQgdmFzdCBudW1iZXJzIG9mIHNsYXZlcyB3ZXJlIGNhcHR1cmVkIGluIHRoZSBjb3VudHJ5OyBpbnNvbXVjaCB0aGF0IG1hbnkgbW9yZSBvZiB0aGUgQXJjYWRpYW5zIGFuZCBBY2hhZWFucywgb24gaGVhcmluZyB0aGUgbmV3cywgY2FtZSBvZiB0aGVpciBvd24gYWNjb3JkIHRvIGpvaW4gdGhlIGV4cGVkaXRpb24gYW5kIHNoYXJlZCBpbiB0aGUgcGx1bmRlci4gSW4gZmFjdCB0aGlzIGNhbXBhaWduIHByb3ZlZCB0byBiZSBhIGhhcnZlc3QsIGFzIGl0IHdlcmUsIGZvciBQZWxvcG9ubmVzdXMuCjxkYXRlIGF1dGhuYW1lPSItMzk4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk4Ij4zOTggQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['3.2.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIEFnaXMgcmVhY2hlZCB0aGUgY2l0eSBoZSBkaWQgc29tZSBoYXJtIHRvIHRoZSBzdWJ1cmJzIGFuZCB0aGUgZ3ltbmFzaWEsIHdoaWNoIHdlcmUgYmVhdXRpZnVsLCBidXQgYXMgZm9yIHRoZSBjaXR5IGl0c2VsZiAoZm9yIGl0IHdhcyB1bndhbGxlZCkgdGhlIExhY2VkYWVtb25pYW5zIHRob3VnaHQgdGhhdCBoZSB3YXMgdW53aWxsaW5nLCByYXRoZXIgdGhhbiB1bmFibGUsIHRvIGNhcHR1cmUgaXQuIE5vdyB3aGlsZSB0aGUgY291bnRyeSB3YXMgYmVpbmcgcmF2YWdlZCBhbmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTgiPjM5OCBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlIExhY2VkYWVtb25pYW4gYXJteSB3YXMgaW4gdGhlIG5laWdoYm91cmhvb2Qgb2YgQ3lsbGVuZSwgdGhlIHBhcnR5IG9mIFhlbmlhc+KAlHRoZSBtYW4gb2Ygd2hvbSBpdCB3YXMgc2FpZCB0aGF0IGhlIG1lYXN1cmVkIG91dCB3aXRoIGEgYnVzaGVsIG1lYXN1cmUgdGhlIG1vbmV5IGhlIHJlY2VpdmVkIGZyb20gaGlzIGZhdGhlcuKAlHdpc2hpbmcgdG8gaGF2ZSB0aGVpciBjaXR5IGdvIG92ZXIgdG8gdGhlIExhY2VkYWVtb25pYW5zIGFuZCB0byByZWNlaXZlIHRoZSBjcmVkaXQgZm9yIHRoaXMsIHJ1c2hlZCBvdXQgb2YgYSBob3VzZSwgYXJtZWQgd2l0aCBzd29yZHMsIGFuZCBiZWdhbiBhIHNsYXVnaHRlcjsgYW5kIGhhdmluZyBraWxsZWQsIGFtb25nIG90aGVycywgYSBtYW4gd2hvIHJlc2VtYmxlZCBUaHJhc3lkYWV1cywgdGhlIGxlYWRlciBvZiB0aGUgY29tbW9ucywgdGhleSBzdXBwb3NlZCB0aGF0IHRoZXkgaGFkIGtpbGxlZCBUaHJhc3lkYWV1cyBoaW1zZWxmLCBzbyB0aGF0IHRoZSBjb21tb25zIGxvc3QgaGVhcnQgZW50aXJlbHkgYW5kIGtlcHQgcXVpZXQsCjxkYXRlIGF1dGhuYW1lPSItMzk4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk4Ij4zOTggQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['3.2.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz53aGlsZSB0aGUgbWVuIGVuZ2FnZWQgaW4gdGhlIHNsYXVnaHRlciBzdXBwb3NlZCB0aGF0IGV2ZXJ5dGhpbmcgd2FzIGFscmVhZHkgYWNjb21wbGlzaGVkIGFuZCB0aGVpciBzeW1wYXRoaXplcnMgZ2F0aGVyZWQgdW5kZXIgYXJtcyBpbiB0aGUgbWFya2V0LXBsYWNlLiBCdXQgaXQgY2hhbmNlZCB0aGF0IFRocmFzeWRhZXVzIHdhcyBzdGlsbCBhc2xlZXAgYXQgdGhlIHZlcnkgcGxhY2Ugd2hlcmUgaGUgaGFkIGJlY29tZSBkcnVuay4gQW5kIHdoZW4gdGhlIGNvbW1vbnMgbGVhcm5lZCB0aGF0IGhlIHdhcyBub3QgZGVhZCwgdGhleSBnYXRoZXJlZCByb3VuZCBoaXMgaG91c2Ugb24gYWxsIHNpZGVzLCBhcyBhIHN3YXJtIG9mIGJlZXMgYXJvdW5kIGl0cyBsZWFkZXIuCjwvdHJhbnNsYXRpb24+"
translation['3.2.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBUaHJhc3lkYWV1cyBwdXQgaGltc2VsZiBhdCB0aGVpciBoZWFkIGFuZCBsZWQgdGhlIHdheSwgYSBiYXR0bGUgdG9vayBwbGFjZSBpbiB3aGljaCB0aGUgY29tbW9ucyB3ZXJlIHZpY3RvcmlvdXMsIGFuZCB0aG9zZSB3aG8gaGFkIHVuZGVydGFrZW4gdGhlIHNsYXVnaHRlciB3ZXJlIGZvcmNlZCB0byBmbGVlIHRvIHRoZSBMYWNlZGFlbW9uaWFucy4gQXMgZm9yIEFnaXMsIHdoZW4gaGUgZGVwYXJ0ZWQgYW5kIGNyb3NzZWQgdGhlIEFscGhldXMgYWdhaW4sIGFmdGVyIGxlYXZpbmcgYSBnYXJyaXNvbiBpbiBFcGl0YWxpdW0gbmVhciB0aGUgQWxwaGV1cywgd2l0aCBMeXNpcHB1cyBhcyBnb3Zlcm5vciwgYW5kIGFsc28gbGVhdmluZyB0aGVyZSB0aGUgZXhpbGVzIGZyb20gRWxpcywgaGUgZGlzYmFuZGVkIGhpcyBhcm15IGFuZCByZXR1cm5lZCBob21lIGhpbXNlbGYuCjwvdHJhbnNsYXRpb24+"
translation['3.2.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RHVyaW5nIHRoZSByZXN0IG9mIHRoZSBzdW1tZXIgYW5kIHRoZSBlbnN1aW5nIHdpbnRlciB0aGUgY291bnRyeSBvZiB0aGUgRWxlYW5zIHdhcyBwbHVuZGVyZWQgYnkgTHlzaXBwdXMgYW5kIHRoZSBtZW4gd2l0aCBoaW0uIEJ1dCBpbiB0aGUgY291cnNlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk3Ij4zOTcgQi5DLjwvZGF0ZT48L25vdGU+IG9mIHRoZSBmb2xsb3dpbmcgc3VtbWVyIFRocmFzeWRhZXVzIHNlbnQgdG8gTGFjZWRhZW1vbiBhbmQgYWdyZWVkIHRvIHRlYXIgZG93biB0aGUgd2FsbHMgb2YgUGhlYSBhbmQgQ3lsbGVuZSwgdG8gbGVhdmUgdGhlIFRyaXBoeWxpYW4gdG93bnMgb2YgUGhyaXhhPGRhdGUgYXV0aG5hbWU9Ii0zOTciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTciPjM5NyBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NyI+Mzk3IEIuQy48L2RhdGU+PC9ub3RlPiBhbmQgRXBpdGFsaXVtIGluZGVwZW5kZW50LCBsaWtld2lzZSB0aGUgTGV0cmluaWFucywgQW1waGlkb2xpYW5zLCBhbmQgTWFyZ2FuaWFucywgYW5kIGJlc2lkZXMgdGhlc2UgdGhlIEFjcm9yaWFucyBhbmQgdGhlIHRvd24gb2YgTGFzaW9uLCB3aGljaCB3YXMgY2xhaW1lZCBieSB0aGUgQXJjYWRpYW5zLiBUaGUgRWxlYW5zLCBob3dldmVyLCBjbGFpbWVkIHRoZSByaWdodCB0byBob2xkIEVwZXVtLCB0aGUgdG93biBiZXR3ZWVuIEhlcmFlYSBhbmQgTWFjaXN0dXM7IGZvciB0aGV5IHNhaWQgdGhhdCB0aGV5IGhhZCBib3VnaHQgdGhlIHdob2xlIHRlcnJpdG9yeSBmb3IgdGhpcnR5IHRhbGVudHMgZnJvbSB0aGUgcGVvcGxlIHRvIHdob20gdGhlIHRvd24gYXQgdGhhdCB0aW1lIGJlbG9uZ2VkLCBhbmQgaGFkIHBhaWQgdGhlIG1vbmV5Lgo8ZGF0ZSBhdXRobmFtZT0iLTM5NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NyI+Mzk3IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.2.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIExhY2VkYWVtb25pYW5zLCBkZWNpZGluZyB0aGF0IGl0IHdhcyBubyBtb3JlIGp1c3QgdG8gZ2V0IHByb3BlcnR5IGZyb20gdGhlIHdlYWtlciBieSBhIGZvcmNlZCBwdXJjaGFzZSB0aGFuIGJ5IGEgZm9yY2libGUgc2VpenVyZSwgY29tcGVsbGVkIHRoZW0gdG8gbGVhdmUgdGhpcyB0b3duIGFsc28gaW5kZXBlbmRlbnQ7IHRoZXkgZGlkIG5vdCwgaG93ZXZlciwgZGlzcG9zc2VzcyB0aGVtIG9mIHRoZSBwcmVzaWRlbmN5IG9mIHRoZSBzaHJpbmUgb2YgT2x5bXBpYW4gWmV1cywgZXZlbiB0aG91Z2ggaXQgZGlkIG5vdCBiZWxvbmcgdG8gdGhlIEVsZWFucyBpbiBhbmNpZW50IHRpbWVzLCBmb3IgdGhleSB0aG91Z2h0IHRoYXQgdGhlIHJpdmFsIGNsYWltYW50czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgUGlzYXRhbnMsIHdobyBoYWQgaGFkIGNoYXJnZSBvZiB0aGUgT2x5bXBpYyBzaHJpbmUgYW5kIGdhbWVzIHVwIHRvIDxkYXRlIGF1dGhuYW1lPSItNTgwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNTgwIj41ODAgQi5DLjwvZGF0ZT48L25vdGU+IHdlcmUgY291bnRyeSBwZW9wbGUgYW5kIG5vdCBjb21wZXRlbnQgdG8gaG9sZCB0aGUgcHJlc2lkZW5jeS4gV2hlbiB0aGVzZSB0aGluZ3MgaGFkIGJlZW4gYWdyZWVkIHVwb24sIGEgcGVhY2UgYW5kIGFuIGFsbGlhbmNlIHdlcmUgY29uY2x1ZGVkIGJldHdlZW4gdGhlIEVsZWFucyBhbmQgdGhlIExhY2VkYWVtb25pYW5zLiBBbmQgc28gdGhlIHdhciBiZXR3ZWVuIHRoZSBMYWNlZGFlbW9uaWFucyBhbmQgdGhlIEVsZWFucyBlbmRlZC4KPGRhdGUgYXV0aG5hbWU9Ii01ODAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii01ODAiPjU4MCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIEFnaXMsIGhhdmluZyBnb25lIHRvIERlbHBoaSBhbmQgb2ZmZXJlZCB0byB0aGUgZ29kIHRoZSBhcHBvaW50ZWQgdGl0aGUgb2YgaGlzIGJvb3R5LCBvbiBoaXMgd2F5IGJhY2sgZmVsbCBzaWNrIGF0IEhlcmFlYSwgYmVpbmcgbm93IGFuIG9sZCBtYW4sIGFuZCBhbHRob3VnaCBoZSB3YXMgc3RpbGwgbGl2aW5nIHdoZW4gYnJvdWdodCBob21lIHRvIExhY2VkYWVtb24sIG9uY2UgdGhlcmUgaGUgdmVyeSBzb29uIGRpZWQ7IGFuZCBoZSByZWNlaXZlZCBhIGJ1cmlhbCBtb3JlIHNwbGVuZGlkIHRoYW4gYmVsb25ncyB0byBtYW4uIFdoZW4gdGhlIHByZXNjcmliZWQgZGF5cyBvZiBtb3VybmluZyBoYWQgYmVlbiByZWxpZ2lvdXNseSBvYnNlcnZlZCBhbmQgaXQgd2FzIG5lY2Vzc2FyeSB0byBhcHBvaW50IGEga2luZywgTGVvdHljaGlkZXMsIHdobyBjbGFpbWVkIHRvIGJlIGEgc29uIG9mIEFnaXMsIGFuZCBBZ2VzaWxhdXMsIGEgYnJvdGhlciBvZiBBZ2lzLCBjb250ZW5kZWQgZm9yIHRoZSBraW5nc2hpcC4KPC90cmFuc2xhdGlvbj4="
translation['3.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBMZW90eWNoaWRlcyBzYWlkOjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NyI+Mzk3IEIuQy48L2RhdGU+PC9ub3RlPiDigJxCdXQsIEFnZXNpbGF1cywgdGhlIGxhdyBkaXJlY3RzLCBub3QgdGhhdCBhIGJyb3RoZXIsIGJ1dCB0aGF0IGEgc29uIG9mIGEga2luZywgc2hvdWxkIGJlIGtpbmc7IGlmLCBob3dldmVyLCB0aGVyZSBzaG91bGQgY2hhbmNlIHRvIGJlIG5vIHNvbiwgaW4gdGhhdCBjYXNlIHRoZSBicm90aGVyIHdvdWxkIGJlIGtpbmcu4oCdIOKAnEl0IGlzIEksIHRoZW4sIHdobyBzaG91bGQgYmUga2luZy7igJ0g4oCcSG93IHNvLCB3aGVuIEkgYW0gYWxpdmU/4oCdIOKAnEJlY2F1c2UgaGUgd2hvbSB5b3UgY2FsbCB5b3VyIGZhdGhlciBzYWlkIHRoYXQgeW91IHdlcmUgbm90IGhpcyBzb24u4oCdIOKAnE5heSwgYnV0IG15IG1vdGhlciwgd2hvIGtub3dzIGZhciBiZXR0ZXIgdGhhbiBoZSBkaWQsIHNheXMgZXZlbiB0byB0aGlzIGRheSB0aGF0IEkgYW0u4oCdIOKAnEJ1dCBQb3NlaWRvbiBzaG93ZWQgdGhhdCB5b3UgYXJlIGVudGlyZWx5IGluIHRoZSB3cm9uZywgZm9yIGhlIGRyb3ZlIHlvdXIgZmF0aGVyPGRhdGUgYXV0aG5hbWU9Ii0zOTciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTciPjM5NyBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5MZW90eWNoaWRlcyB3YXMgcmVwdXRlZCB0byBiZSB0aGUgc29uIG9mIEFsY2liaWFkZXMuIEZvciB0aGUgaW5jaWRlbnQgaGVyZSBtZW50aW9uZWQsIGNwLiBQbHV0LiA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BbGMuPC90aXRsZT4gMjMuPC9ub3RlPiBvdXQgb2YgaGVyIGNoYW1iZXIgaW50byB0aGUgb3BlbiBieSBhbiBlYXJ0aHF1YWtlLiBBbmQgdGltZSBhbHNvLCB3aGljaCBpcyBzYWlkIHRvIGJlIHRoZSB0cnVlc3Qgd2l0bmVzcywgZ2F2ZSB0ZXN0aW1vbnkgdGhhdCB0aGUgZ29kIHdhcyByaWdodDsgZm9yIHlvdSB3ZXJlIGJvcm4gaW4gdGhlIHRlbnRoIG1vbnRoIGZyb20gdGhlIHRpbWUgd2hlbiBoZSBmbGVkIGZyb20gdGhlIGNoYW1iZXIu4oCdIFN1Y2ggd2VyZSB0aGUgd29yZHMgd2hpY2ggcGFzc2VkIGJldHdlZW4gdGhlc2UgdHdvLgo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BbGMuPC90aXRsZT4gMjMuPC90cmFuc2xhdGlvbj4="
translation['3.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBEaW9wZWl0aGVzLCBhIG1hbiB2ZXJ5IHdlbGwgdmVyc2VkIGluIG9yYWNsZXMsIHNhaWQgaW4gc3VwcG9ydCBvZiBMZW90eWNoaWRlcyB0aGF0IHRoZXJlIHdhcyBhbHNvIGFuIG9yYWNsZSBvZiBBcG9sbG8gd2hpY2ggYmFkZSB0aGUgTGFjZWRhZW1vbmlhbnMgYmV3YXJlIG9mIHRoZSBsYW1lIGtpbmdzaGlwLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BZ2VzaWxhdXMgd2FzIGxhbWUuPC9ub3RlPiBMeXNhbmRlciwgaG93ZXZlciwgbWFkZSByZXBseSB0byBoaW0sIG9uIGJlaGFsZiBvZiBBZ2VzaWxhdXMsIHRoYXQgaGUgZGlkIG5vdCBzdXBwb3NlIHRoZSBnb2Qgd2FzIGJpZGRpbmcgdGhlbSBiZXdhcmUgbGVzdCBhIGtpbmcgb2YgdGhlaXJzIHNob3VsZCBnZXQgYSBzcHJhaW4gYW5kIGJlY29tZSBsYW1lLCBidXQgcmF0aGVyIGxlc3Qgb25lIHdobyB3YXMgbm90IG9mIHRoZSByb3lhbCBzdG9jayBzaG91bGQgYmVjb21lIGtpbmcuIEZvciB0aGUga2luZ3NoaXAgd291bGQgYmUgbGFtZSBpbiB2ZXJ5IHRydXRoIHdoZW4gaXQgd2FzIG5vdCB0aGUgZGVzY2VuZGFudHMgb2YgSGVyYWNsZXMgd2hvIHdlcmUgYXQgdGhlIGhlYWQgb2YgdGhlIHN0YXRlLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIGhlYXJpbmcgc3VjaCBhcmd1bWVudHMgZnJvbSBib3RoIGNsYWltYW50cyB0aGUgc3RhdGUgY2hvc2UgQWdlc2lsYXVzIGtpbmcuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldoZW4gQWdlc2lsYXVzIGhhZCBiZWVuIG5vdCB5ZXQgYSB5ZWFyIGluIHRoZSBraW5nbHkgb2ZmaWNlLCBvbmNlIHdoaWxlIGhlIHdhcyBvZmZlcmluZyBvbmUgb2YgdGhlIGFwcG9pbnRlZCBzYWNyaWZpY2VzIGluIGJlaGFsZiBvZiB0aGUgc3RhdGUsIHRoZSBzZWVyIHNhaWQgdGhhdCB0aGUgZ29kcyByZXZlYWxlZCBhIGNvbnNwaXJhY3kgb2YgdGhlIG1vc3Q8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTciPjM5NyBCLkMuPC9kYXRlPjwvbm90ZT4gdGVycmlibGUgc29ydC4gQW5kIHdoZW4gaGUgc2FjcmlmaWNlZCBhZ2FpbiwgdGhlIHNlZXIgc2FpZCB0aGF0IHRoZSBzaWducyBhcHBlYXJlZCBzdGlsbCBtb3JlIHRlcnJpYmxlLiBBbmQgdXBvbiBoaXMgc2FjcmlmaWNpbmcgZm9yIHRoZSB0aGlyZCB0aW1lLCBoZSBzYWlkOiDigJxBZ2VzaWxhdXMsIGp1c3Qgc3VjaCBhIHNpZ24gaXMgZ2l2ZW4gbWUgYXMgd291bGQgYmUgZ2l2ZW4gaWYgd2Ugd2VyZSBpbiB0aGUgdmVyeSBtaWRzdCBvZiB0aGUgZW5lbXku4oCdIFRoZXJlLXVwb24gdGhleSBtYWRlIG9mZmVyaW5ncyB0byB0aGUgZ29kcyB3aG8gYXZlcnQgZXZpbCBhbmQgdG8gdGhvc2Ugd2hvIGdyYW50IHNhZmV0eSwgYW5kIGhhdmluZyB3aXRoIGRpZmZpY3VsdHkgb2J0YWluZWQgZmF2b3VyYWJsZSBvbWVucywgY2Vhc2VkIHNhY3JpZmljaW5nLiBBbmQgd2l0aGluIGZpdmUgZGF5cyBhZnRlciB0aGUgc2FjcmlmaWNlIHdhcyBlbmRlZCBhIG1hbiByZXBvcnRlZCB0byB0aGUgZXBob3JzIGEgY29uc3BpcmFjeSwgYW5kIENpbmFkb24gYXMgdGhlIGhlYWQgb2YgdGhlIGFmZmFpci4KPGRhdGUgYXV0aG5hbWU9Ii0zOTciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTciPjM5NyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoaXMgQ2luYWRvbiB3YXMgYSB5b3VuZyBtYW4sIHN0dXJkeSBvZiBib2R5IGFuZCBzdG91dCBvZiBoZWFydCwgYnV0IG5vdCBvbmUgb2YgdGhlIHBlZXJzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCB0aG9zZSB3aG8gZW5qb3llZCBmdWxsIHJpZ2h0cyBvZiBjaXRpemVuc2hpcCwgdGhlIOKAnFNwYXJ0aWF0YWUu4oCdPC9ub3RlPiBBbmQgd2hlbiB0aGUgZXBob3JzIGFza2VkIGhvdyBoZSBoYWQgc2FpZCB0aGF0IHRoZSBwbGFuIHdvdWxkIGJlIGNhcnJpZWQgb3V0LCB0aGUgaW5mb3JtZXIgcmVwbGllZCB0aGF0IENpbmFkb24gaGFkIHRha2VuIGhpbSB0byB0aGUgZWRnZSBvZiB0aGUgbWFya2V0LXBsYWNlIGFuZCBkaXJlY3RlZCBoaW0gdG8gY291bnQgaG93IG1hbnkgU3BhcnRpYXRhZSB0aGVyZSB3ZXJlIGluIHRoZSBtYXJrZXQtcGxhY2UuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBTcGFydGlhdGFlLCBhbHdheXMgZmV3IGluIG51bWJlciBpbiBjb21wYXJpc29uIHdpdGggdGhlIG90aGVyIGVsZW1lbnRzIG9mIHRoZSBMYWNvbmlhbiBwb3B1bGF0aW9uIChzZWUgYmVsb3cpLCB3ZXJlIG5vdyBiZWNvbWluZyBzdGVhZGlseSBmZXdlciBieSByZWFzb24gb2YgY29uc3RhbnQgd2FycyBhbmQgdGhlIGRlbW9yYWxpc2luZyBpbmZsdWVuY2Ugb2Ygd2VhbHRoIGFuZCBsdXh1cnkuPC9ub3RlPiDigJxBbmQgSSzigJ0gaGUgc2FpZCwg4oCcYWZ0ZXIgY291bnRpbmcga2luZyBhbmQgZXBob3JzIGFuZCBzZW5hdG9ycyBhbmQgYWJvdXQgZm9ydHkgb3RoZXJzLCBhc2tlZCBgV2h5LCBDaW5hZG9uLCBkaWQgeW91IGJpZCBtZSBjb3VudCB0aGVzZSBtZW4/JyBBbmQgaGUgcmVwbGllZDogYEJlbGlldmUsJyBzYWlkIGhlLCBgdGhhdCB0aGVzZSBtZW4gYXJlIHlvdXIgZW5lbWllcywgYW5kIHRoYXQgYWxsIHRoZSBvdGhlcnMgd2hvIGFyZSBpbiB0aGUgbWFya2V0LXBsYWNlLCBtb3JlIHRoYW4gZm91ciB0aG91c2FuZCBpbiBudW1iZXIsIGFyZSB5b3VyIGFsbGllcy4n4oCdIEluIHRoZSBzdHJlZXRzIGFsc28sIHRoZSBpbmZvcm1lciBzYWlkLCBDaW5hZG9uIHBvaW50ZWQgb3V0IGFzIGVuZW1pZXMgaGVyZSBvbmUgYW5kIHRoZXJlIHR3byB3aG8gbWV0IHRoZW0sIGFuZCBhbGwgdGhlIHJlc3QgYXMgYWxsaWVzOyBhbmQgb2YgYWxsIHdobyBjaGFuY2VkIHRvIGJlIG9uIHRoZSBjb3VudHJ5IGVzdGF0ZXMgYmVsb25naW5nIHRvIFNwYXJ0aWF0YWUsIHdoaWxlIHRoZXJlIHdvdWxkIGJlIG9uZSB3aG9tIGhlIHdvdWxkIHBvaW50IG91dCBhcyBhbiBlbmVteSwgbmFtZWx5IHRoZSBtYXN0ZXIsIHlldCB0aGVyZSB3b3VsZCBiZSBtYW55IG9uIGVhY2ggZXN0YXRlIG5hbWVkIGFzIGFsbGllcy4KPC90cmFuc2xhdGlvbj4="
translation['3.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlIGVwaG9ycyBhc2tlZCBob3c8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTciPjM5NyBCLkMuPC9kYXRlPjwvbm90ZT4gbWFueSBDaW5hZG9uIHNhaWQgdGhlcmUgcmVhbGx5IHdlcmUgd2hvIHdlcmUgaW4gdGhlIHNlY3JldCBvZiB0aGlzIGFmZmFpciwgdGhlIGluZm9ybWVyIHJlcGxpZWQgdGhhdCBoZSBzYWlkIGluIHJlZ2FyZCB0byB0aGlzIHBvaW50IHRoYXQgdGhvc2Ugd2hvIHdlcmUgaW4gdGhlIHNlY3JldCB3aXRoIGhpbXNlbGYgYW5kIHRoZSBvdGhlciBsZWFkZXJzIHdlcmUgYnkgbm8gbWVhbnMgbWFueSwgdGhvdWdoIHRydXN0d29ydGh5OyB0aGUgbGVhZGVycywgaG93ZXZlciwgcHV0IGl0IHRoaXMgd2F5LCB0aGF0IGl0IHdhcyB0aGV5IHdobyBrbmV3IHRoZSBzZWNyZXQgb2YgYWxsIHRoZSBvdGhlcnPigJRIZWxvdHMsIGZyZWVkbWVuLCBsZXNzZXIgU3BhcnRpYXRhZSwgYW5kIFBlcmlvZWNpOyBmb3Igd2hlbmV2ZXIgYW1vbmcgdGhlc2UgY2xhc3NlcyBhbnkgbWVudGlvbiB3YXMgbWFkZSBvZiBTcGFydGlhdGFlLCBubyBvbmUgd2FzIGFibGUgdG8gY29uY2VhbCB0aGUgZmFjdCB0aGF0IGhlIHdvdWxkIGJlIGdsYWQgdG8gZWF0IHRoZW0gcmF3Lgo8ZGF0ZSBhdXRobmFtZT0iLTM5NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NyI+Mzk3IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlIGVwaG9ycyBhc2tlZCBhZ2Fpbjog4oCcQW5kIHdoZXJlIGRpZCB0aGV5IHNheSB0aGV5IHdvdWxkIGdldCB3ZWFwb25zP+KAnSB0aGUgaW5mb3JtZXIgcmVwbGllZCB0aGF0IENpbmFkb24gc2FpZDog4oCcT2YgY291cnNlIHRob3NlIG9mIHVzIHdobyBhcmUgaW4gdGhlIGFybXkgaGF2ZSB3ZWFwb25zIG9mIG91ciBvd24sIGFuZCBhcyBmb3IgdGhlIG1hc3Nlc+KAneKAlGhlIGxlZCBoaW0sIGhlIHNhaWQsIHRvIHRoZSBpcm9uIG1hcmtldCwgYW5kIHNob3dlZCBoaW0gZ3JlYXQgcXVhbnRpdGllcyBvZiBrbml2ZXMsIHN3b3Jkcywgc3BpdHMsIGF4ZXMsIGhhdGNoZXRzLCBhbmQgc2lja2xlcy4gQW5kIGhlIHNhaWQsIHRoZSBpbmZvcm1lciBjb250aW51ZWQsIHRoYXQgYWxsIHRob3NlIHRvb2xzIHdpdGggd2hpY2ggbWVuIHdvcmsgdGhlIGxhbmQgYW5kIHRpbWJlciBhbmQgc3RvbmUgd2VyZSBsaWtld2lzZSB3ZWFwb25zLCBhbmQgdGhhdCBtb3N0IG9mIHRoZSBvdGhlciBpbmR1c3RyaWVzIGFsc28gaGFkIGluIHRoZWlyIGltcGxlbWVudHMgYWRlcXVhdGUgd2VhcG9ucywgZXNwZWNpYWxseSBhZ2FpbnN0IHVuYXJtZWQgbWVuLiBXaGVuIGhlIHdhcyBhc2tlZCBhZ2FpbiBhdCB3aGF0IHRpbWUgdGhpcyB0aGluZyB3YXMgdG8gYmUgZG9uZSwgaGUgc2FpZCB0aGF0IG9yZGVycyBoYWQgYmVlbiBnaXZlbiBoaW0gdG8gc3RheSBpbiB0aGUgY2l0eS4KPC90cmFuc2xhdGlvbj4="
translation['3.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5VcG9uIGhlYXJpbmcgdGhlc2Ugc3RhdGVtZW50cyB0aGUgZXBob3JzIGNhbWUgdG8gdGhlIGNvbmNsdXNpb24gdGhhdCBoZSB3YXMgZGVzY3JpYmluZyBhIHdlbGwtY29uc2lkZXJlZCBwbGFuLCBhbmQgd2VyZSBncmVhdGx5IGFsYXJtZWQ7IGFuZCB3aXRob3V0IGV2ZW4gY29udmVuaW5nIHRoZSBMaXR0bGUgQXNzZW1ibHksPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSByZWZlcmVuY2UgaXMgdW5jZXJ0YWluLjwvbm90ZT4gYXMgaXQgd2FzIGNhbGxlZCwgYnV0IG1lcmVseSBnYXRoZXJpbmcgYWJvdXQgdGhlbeKAlG9uZSBlcGhvciBoZXJlIGFuZCBhbm90aGVyIHRoZXJl4oCUc29tZSBvZiB0aGUgc2VuYXRvcnMsIHRoZXkgZGVjaWRlZCB0byBzZW5kIENpbmFkb24gdG8gQXVsb24gYWxvbmcgd2l0aCBvdGhlcnMgb2YgdGhlIHlvdW5nZXIgbWVuLCBhbmQgdG8gb3JkZXIgaGltIHRvIGJyaW5nIGJhY2sgd2l0aDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NyI+Mzk3IEIuQy48L2RhdGU+PC9ub3RlPiBoaW0gY2VydGFpbiBvZiB0aGUgQXVsb25pYW5zIGFuZCBIZWxvdHMgd2hvc2UgbmFtZXMgd2VyZSB3cml0dGVuIGluIHRoZSBvZmZpY2lhbCBkaXNwYXRjaC4gQW5kIHRoZXkgb3JkZXJlZCBoaW0gdG8gYnJpbmcgYWxzbyB0aGUgd29tYW4gd2hvIHdhcyBzYWlkIHRvIGJlIHRoZSBtb3N0IGJlYXV0aWZ1bCB3b21hbiBpbiBBdWxvbiBhbmQgd2FzIHRob3VnaHQgdG8gYmUgY29ycnVwdGluZyB0aGUgTGFjZWRhZW1vbmlhbnMgd2hvIGNhbWUgdGhlcmUsIG9sZGVyIGFuZCB5b3VuZ2VyIGFsaWtlLgo8ZGF0ZSBhdXRobmFtZT0iLTM5NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NyI+Mzk3IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk5vdyBDaW5hZG9uIGhhZCBwZXJmb3JtZWQgb3RoZXIgc2VydmljZXMgb2YgYSBsaWtlIHNvcnQgZm9yIHRoZSBlcGhvcnMgaW4gdGhlIHBhc3Q7IHNvIHRoaXMgdGltZSB0aGV5IGdhdmUgaGltIHRoZSBkaXNwYXRjaCBpbiB3aGljaCB3ZXJlIHdyaXR0ZW4gdGhlIG5hbWVzIG9mIHRob3NlIHdobyB3ZXJlIHRvIGJlIGFycmVzdGVkLiBBbmQgd2hlbiBoZSBhc2tlZCB3aGljaCBvZiB0aGUgeW91bmcgbWVuIGhlIHNob3VsZCB0YWtlIHdpdGggaGltLCB0aGV5IHNhaWQ6IOKAnEdvIGFuZCBiaWQgdGhlIGVsZGVzdCBvZiB0aGUgY29tbWFuZGVycyBvZiB0aGUgZ3VhcmQgdG8gc2VuZCB3aXRoIHlvdSBzaXggb3Igc2V2ZW4gb2YgdGhvc2Ugd2hvIG1heSBjaGFuY2UgdG8gYmUgYXQgaGFuZC7igJ0gSW4gZmFjdCB0aGV5IGhhZCB0YWtlbiBjYXJlIHRoYXQgdGhlIGNvbW1hbmRlciBzaG91bGQga25vdyB3aG9tIGhlIHdhcyB0byBzZW5kLCBhbmQgdGhhdCB0aG9zZSB3aG8gd2VyZSBzZW50IHNob3VsZCBrbm93IHRoYXQgaXQgd2FzIENpbmFkb24gd2hvbSB0aGV5IHdlcmUgdG8gYXJyZXN0LiBUaGUgZXBob3JzIHNhaWQgdGhpcyB0aGluZyBiZXNpZGVzIHRvIENpbmFkb24sIHRoYXQgdGhleSB3b3VsZCBzZW5kIHRocmVlIHdhZ29ucywgc28gdGhhdCB0aGV5IHdvdWxkIG5vdCBoYXZlIHRvIGJyaW5nIGJhY2sgdGhlIHByaXNvbmVycyBvbiBmb2904oCUdHJ5aW5nIHRvIGNvbmNlYWwsIGFzIGZhciBhcyB0aGV5IGNvdWxkLCB0aGUgZmFjdCB0aGF0IHRoZXkgd2VyZSBzZW5kaW5nIGFmdGVyIG9uZSBtYW7igJRoaW1zZWxmLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcmVhc29uIHRoZXkgZGlkIG5vdCBwbGFuIHRvIGFycmVzdCBoaW0gaW4gdGhlIGNpdHkgd2FzIHRoYXQgdGhleSBkaWQgbm90IGtub3cgaG93IGdyZWF0IHdhcyB0aGUgZXh0ZW50IG9mIHRoZSBwbG90LCBhbmQgdGhleSB3aXNoZWQgdG8gaGVhciBmcm9tIENpbmFkb24gd2hvIGhpcyBhY2NvbXBsaWNlcyB3ZXJlIGJlZm9yZSB0aGVzZSBzaG91bGQgbGVhcm4gdGhhdCB0aGV5IGhhZCBiZWVuIGluZm9ybWVkIGFnYWluc3QsIGluIG9yZGVyIHRvIHByZXZlbnQgdGhlaXIgZXNjYXBpbmcuIEFjY29yZGluZ2x5LCB0aG9zZSB3aG8gbWFkZSB0aGUgYXJyZXN0IHdlcmUgdG8gZGV0YWluIENpbmFkb24sIGFuZCBhZnRlciBsZWFybmluZyBmcm9tIGhpbSB0aGUgbmFtZXMgb2YgaGlzIGNvbmZlZGVyYXRlcywgdG8gd3JpdGUgdGhlbSBkb3duIGFuZCBzZW5kIHRoZW0gYmFjayBhcyBxdWlja2x5IGFzIHBvc3NpYmxlIHRvIHRoZSBlcGhvcnMuIEFuZCBzbyBzZXJpb3VzbHkgZGlkIHRoZSBlcGhvcnMgcmVnYXJkIHRoZSBtYXR0ZXIgdGhhdCB0aGV5IGV2ZW4gc2VudCBhIHJlZ2ltZW50IG9mIGNhdmFscnkgdG8gc3VwcG9ydCB0aGUgbWVuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk3Ij4zOTcgQi5DLjwvZGF0ZT48L25vdGU+IHdobyBoYWQgc2V0IG91dCBmb3IgQXVsb24uCjxkYXRlIGF1dGhuYW1lPSItMzk3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk3Ij4zOTcgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['3.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSBtYW4gaGFkIGJlZW4gc2VpemVkIGFuZCBhIGhvcnNlbWFuIGhhZCByZXR1cm5lZCB3aXRoIHRoZSBuYW1lcyBvZiB0aG9zZSB3aG9tIENpbmFkb24gaGFkIGxpc3RlZCwgdGhlIGVwaG9ycyBpbW1lZGlhdGVseSBwcm9jZWVkZWQgdG8gYXJyZXN0IHRoZSBzZXIgVGlzYW1lbnVzIGFuZCB0aGUgbW9zdCBpbmZsdWVudGlhbCBvZiB0aGUgb3RoZXJzLiBBbmQgd2hlbiBDaW5hZG9uIHdhcyBicm91Z2h0IGJhY2sgYW5kIHF1ZXN0aW9uZWQsIGFuZCBjb25mZXNzZWQgZXZlcnl0aGluZyBhbmQgdG9sZCB0aGUgbmFtZXMgb2YgaGlzIGNvbmZlZGVyYXRlcywgdGhleSBhc2tlZCBoaW0gZmluYWxseSB3aGF0IGluIHRoZSB3b3JsZCB3YXMgaGlzIG9iamVjdCBpbiB1bmRlcnRha2luZyB0aGlzIHRoaW5nLiBIZSByZXBsaWVkOiDigJxJIHdpc2hlZCB0byBiZSBpbmZlcmlvciB0byBubyBvbmUgaW4gTGFjZWRhZW1vbi7igJ0gVGhlcmV1cG9uIGhlIHdhcyBzdHJhaWdodHdheSBib3VuZCBmYXN0LCBuZWNrIGFuZCBhcm1zLCBpbiBhIGNvbGxhciwgYW5kIHVuZGVyIHNjb3VyZ2UgYW5kIGdvYWQgd2FzIGRyYWdnZWQgYWJvdXQgdGhyb3VnaCB0aGUgY2l0eSwgaGUgYW5kIHRob3NlIHdpdGggaGltLiBBbmQgc28gdGhleSBtZXQgdGhlaXIgcHVuaXNobWVudC4KPC90cmFuc2xhdGlvbj4="
translation['3.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIGEgU3lyYWN1c2FuIG5hbWVkIEhlcm9kYXMsIGJlaW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk2Ij4zOTYgQi5DLjwvZGF0ZT48L25vdGU+IGluIFBob2VuaWNpYSB3aXRoIGEgY2VydGFpbiBzaGlwb3duZXIsIGFuZCBzZWVpbmcgUGhvZW5pY2lhbiB3YXItc2hpcHPigJRzb21lIG9mIHRoZW0gc2FpbGluZyBpbiBmcm9tIG90aGVyIHBsYWNlcywgb3RoZXJzIGx5aW5nIHRoZXJlIGZ1bGx5IG1hbm5lZCwgYW5kIHlldCBvdGhlcnMgc3RpbGwgbWFraW5nIHJlYWR5IGZvciBzZWHigJRhbmQgaGVhcmluZywgYmVzaWRlcywgdGhhdCB0aGVyZSB3ZXJlIHRvIGJlIHRocmVlIGh1bmRyZWQgb2YgdGhlbSwgZW1iYXJrZWQgb24gdGhlIGZpcnN0IGJvYXQgdGhhdCBzYWlsZWQgdG8gR3JlZWNlIGFuZCByZXBvcnRlZCB0byB0aGUgTGFjZWRhZW1vbmlhbnMgdGhhdCB0aGUgS2luZyBhbmQgVGlzc2FwaGVybmVzIHdlcmUgcHJlcGFyaW5nIHRoaXMgZXhwZWRpdGlvbjsgYnV0IHdoaXRoZXIgaXQgd2FzIGJvdW5kIGhlIHNhaWQgaGUgZGlkIG5vdCBrbm93Lgo8ZGF0ZSBhdXRobmFtZT0iLTM5NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NiI+Mzk2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGlsZSB0aGUgTGFjZWRhZW1vbmlhbnMgd2VyZSBpbiBhIHN0YXRlIG9mIGdyZWF0IGV4Y2l0ZW1lbnQsIGFuZCB3ZXJlIGdhdGhlcmluZyB0b2dldGhlciB0aGVpciBhbGxpZXMgYW5kIHRha2luZyBjb3Vuc2VsIGFzIHRvIHdoYXQgdGhleSBzaG91bGQgZG8sIEx5c2FuZGVyLCB0aGlua2luZyB0aGF0IHRoZSBHcmVla3Mgd291bGQgYmUgZmFyIHN1cGVyaW9yIG9uIHRoZSBzZWEsIGFuZCByZWZsZWN0aW5nIHRoYXQgdGhlIGxhbmQgZm9yY2Ugd2hpY2ggd2VudCB1cCBjb3VudHJ5IHdpdGggQ3lydXMgaGFkIHJldHVybmVkIHNhZmVseSwgcGVyc3VhZGVkIEFnZXNpbGF1cyB0byBwcm9taXNlLCBpbiBjYXNlIHRoZSBMYWNlZGFlbW9uaWFucyB3b3VsZCBnaXZlIGhpbSB0aGlydHkgU3BhcnRpYXRhZSwgdHdvIHRob3VzYW5kIGVtYW5jaXBhdGVkIEhlbG90cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTYiPjM5NiBCLkMuPC9kYXRlPjwvbm90ZT4gYW5kIGEgY29udGluZ2VudCBvZiBzaXggdGhvdXNhbmQgb2YgdGhlIGFsbGllcywgdG8gbWFrZSBhbiBleHBlZGl0aW9uIHRvIEFzaWEuIFN1Y2ggd2VyZSB0aGUgbW90aXZlcyB3aGljaCBhY3R1YXRlZCBMeXNhbmRlciwgYnV0LCBpbiBhZGRpdGlvbiwgaGUgd2FudGVkIHRvIG1ha2UgdGhlIGV4cGVkaXRpb24gd2l0aCBBZ2VzaWxhdXMgb24gaGlzIG93biBhY2NvdW50IGFsc28sIGluIG9yZGVyIHRoYXQgd2l0aCB0aGUgYWlkIG9mIEFnZXNpbGF1cyBoZSBtaWdodCByZS1lc3RhYmxpc2ggdGhlIGRlY2FyY2hpZXM8ZGF0ZSBhdXRobmFtZT0iLTM5NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NiI+Mzk2IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkluIHRoZSBjaXRpZXMgd2hpY2ggZmVsbCB1bmRlciBoaXMgY29udHJvbCBhZnRlciB0aGUgYmF0dGxlIG9mIEFlZ29zcG90YW1pIEx5c2FuZGVyIGhhZCBlc3RhYmxpc2hlZCBvbGlnYXJjaGljYWwgZ292ZXJubWVudHMsIHRoZSBzdXByZW1lIHBvd2VyIGJlaW5nIGxvZGdlZCBpbiBhIGNvdW5jaWwgb2YgdGVuLCBjb3JyZXNwb25kaW5nIHRvIHRoZSDigJxUaGlydHnigJ0gYXQgQXRoZW5zLjwvbm90ZT4gd2hpY2ggaGFkIGJlZW4gc2V0IHVwIGJ5IGhpbSBpbiB0aGUgY2l0aWVzLCBidXQgaGFkIGJlZW4gb3ZlcnRocm93biB0aHJvdWdoIHRoZSBlcGhvcnMsIHdobyBoYWQgaXNzdWVkIGEgcHJvY2xhbWF0aW9uIHJlc3RvcmluZyB0byB0aGUgY2l0aWVzIHRoZWlyIGFuY2llbnQgZm9ybSBvZiBnb3Zlcm5tZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoZW4gQWdlc2lsYXVzIG9mZmVyZWQgdG8gdW5kZXJ0YWtlIHRoZSBjYW1wYWlnbiwgdGhlIExhY2VkYWVtb25pYW5zIGdhdmUgaGltIGV2ZXJ5dGhpbmcgaGUgYXNrZWQgZm9yIGFuZCBwcm92aXNpb25zIGZvciBzaXggbW9udGhzLiBBbmQgd2hlbiBoZSBtYXJjaGVkIGZvcnRoIGZyb20gdGhlIGNvdW50cnkgYWZ0ZXIgb2ZmZXJpbmcgYWxsIHRoZSBzYWNyaWZpY2VzIHdoaWNoIHdlcmUgcmVxdWlyZWQsIGluY2x1ZGluZyB0aGF0IGF0IHRoZSBmcm9udGllciw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U3BhcnRhbiBjb21tYW5kZXJzIGFsd2F5cyBvZmZlcmVkIHNhY3JpZmljZXMgdG8gWmV1cyBhbmQgQXRoZW5hIGJlZm9yZSBjcm9zc2luZyB0aGUgTGFjb25pYW4gZnJvbnRpZXIuPC9ub3RlPiBoZSBkaXNwYXRjaGVkIG1lc3NlbmdlcnMgdG8gdGhlIHZhcmlvdXMgY2l0aWVzIGFuZCBhbm5vdW5jZWQgaG93IG1hbnkgbWVuIHdlcmUgdG8gYmUgc2VudCBmcm9tIGVhY2ggY2l0eSwgYW5kIHdoZXJlIHRoZXkgd2VyZSB0byByZXBvcnQ7IHdoaWxlIGFzIGZvciBoaW1zZWxmLCBoZSBkZXNpcmVkIHRvIGdvIGFuZCBvZmZlciBzYWNyaWZpY2UgYXQgQXVsaXMsIHRoZSBwbGFjZSB3aGVyZSBBZ2FtZW1ub24gaGFkIHNhY3JpZmljZWQgYmVmb3JlIGhlIHNhaWxlZCB0byBUcm95Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gaGUgaGFkIHJlYWNoZWQgQXVsaXMsIGhvd2V2ZXIsIHRoZSBCb2VvdGFyY2hzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgcHJlc2lkaW5nIG9mZmljaWFscyBvZiB0aGUgQm9lb3RpYW4gTGVhZ3VlLjwvbm90ZT4gb24gbGVhcm5pbmcgdGhhdCBoZSB3YXMgc2FjcmlmaWNpbmcsIHNlbnQgaG9yc2VtZW4gYW5kIGJhZGUgaGltIGRpc2NvbnRpbnVlIGhpcyBzYWNyaWZpY2luZywgYW5kIHRoZXkgdGhyZXcgZnJvbSB0aGUgYWx0YXIgdGhlIHZpY3RpbXMgd2hpY2ggdGhleSBmb3VuZCBhbHJlYWR5IG9mZmVyZWQuIFRoZW4gQWdlc2lsYXVzLCBjYWxsaW5nIHRoZSBnb2RzIHRvIHdpdG5lc3MsIGFuZCBmdWxsIG9mIGFuZ2VyLCBlbWJhcmtlZCB1cG9uIGhpcyB0cmlyZW1lIGFuZCBzYWlsZWQgYXdheS4gQW5kIHdoZW4gaGUgYXJyaXZlZCBhdCBHZXJhc3R1cyBhbmQgaGFkIGNvbGxlY3RlZCB0aGVyZSBhcyBsYXJnZSBhIHBhcnQgb2YgaGlzIGFybXkgYXMgaGUgY291bGQsIGhlIGRpcmVjdGVkIGhpcyBjb3Vyc2UgdG8gRXBoZXN1cy4KPC90cmFuc2xhdGlvbj4="
translation['3.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIGhlIHJlYWNoZWQgRXBoZXN1cywgVGlzc2FwaGVybmVzIGF0IG9uY2Ugc2VudCBhbmQgYXNrZWQgaGltIHdpdGggd2hhdCBpbnRlbnQgaGUgaGFkIGNvbWUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk2Ij4zOTYgQi5DLjwvZGF0ZT48L25vdGU+IEFuZCBoZSBhbnN3ZXJlZDog4oCcVGhhdCB0aGUgY2l0aWVzIGluIEFzaWEgc2hhbGwgYmUgaW5kZXBlbmRlbnQsIGFzIGFyZSB0aG9zZSBpbiBvdXIgcGFydCBvZiBHcmVlY2Uu4oCdIEluIHJlcGx5IHRvIHRoaXMgVGlzc2FwaGVybmVzIHNhaWQ6IOKAnFRoZW4gaWYgeW91IGFyZSB3aWxsaW5nIHRvIG1ha2UgYSB0cnVjZSB1bnRpbCBJIGNhbiBzZW5kIHRvIHRoZSBLaW5nLCBJIHRoaW5rIHlvdSBjb3VsZCBhY2NvbXBsaXNoIHRoaXMgb2JqZWN0IGFuZCwgaWYgeW91IHNob3VsZCBzbyBkZXNpcmUsIHNhaWwgYmFjayBob21lLuKAnSDigJxJbmRlZWQgSSBzaG91bGQgc28gZGVzaXJlLOKAnSBzYWlkIGhlLCDigJxpZiBJIGNvdWxkIGJ1dCB0aGluayB0aGF0IEkgd2FzIG5vdCBiZWluZyBkZWNlaXZlZCBieSB5b3Uu4oCdIOKAnEJ1dCzigJ0gc2FpZCBoZSwg4oCcaXQgaXMgcG9zc2libGUgZm9yIHlvdSB0byByZWNlaXZlIGEgZ3VhcmFudGVlIG9uIHRoaXMgcG9pbnQsIHRoYXQgaW4gdmVyeSB0cnV0aCBhbmQgd2l0aG91dCBndWlsZSwgaWYgeW91IGZvbGxvdyB0aGlzIGNvdXJzZSwgd2Ugd2lsbCBkbyBubyBoYXJtIHRvIGFueSBwYXJ0IG9mIHlvdXIgZG9tYWluIGR1cmluZyB0aGUgdHJ1Y2Uu4oCdCjxkYXRlIGF1dGhuYW1lPSItMzk2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk2Ij4zOTYgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['3.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMgYWdyZWVtZW50IGhhZCBiZWVuIHJlYWNoZWQsIFRpc3NhcGhlcm5lcyBtYWRlIG9hdGggdG8gdGhlIGNvbW1pc3Npb25lcnMgd2hvIHdlcmUgc2VudCB0byBoaW0sIEhlcmlwcGlkYXMsIERlcmN5bGlkYXMsIGFuZCBNZWdpbGx1cywgdGhhdCBpbiB2ZXJ5IHRydXRoIGFuZCB3aXRob3V0IGd1aWxlIGhlIHdvdWxkIG5lZ290aWF0ZSB0aGUgcGVhY2UsIGFuZCB0aGV5IGluIHR1cm4gbWFkZSBvYXRoIG9uIGJlaGFsZiBvZiBBZ2VzaWxhdXMgdG8gVGlzc2FwaGVybmVzIHRoYXQgaW4gdmVyeSB0cnV0aCwgaWYgaGUgZGlkIHRoaXMsIEFnZXNpbGF1cyB3b3VsZCBzdGVhZGZhc3RseSBvYnNlcnZlIHRoZSB0cnVjZS4gTm93IFRpc3NhcGhlcm5lcyBzdHJhaWdodHdheSB2aW9sYXRlZCB0aGUgb2F0aHMgd2hpY2ggaGUgaGFkIHN3b3JuOyBmb3IgaW5zdGVhZCBvZiBrZWVwaW5nIHBlYWNlIGhlIHNlbnQgdG8gdGhlIEtpbmcgZm9yIGEgbGFyZ2UgYXJteSBpbiBhZGRpdGlvbiB0byB0aGF0IHdoaWNoIGhlIGhhZCBiZWZvcmUuIEJ1dCBBZ2VzaWxhdXMsIHRob3VnaCBoZSB3YXMgYXdhcmUgb2YgdGhpcywgbmV2ZXJ0aGVsZXNzIGNvbnRpbnVlZCB0byBhYmlkZSBieSB0aGUgdHJ1Y2UuCjwvdHJhbnNsYXRpb24+"
translation['3.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFud2hpbGUsIGR1cmluZyB0aGUgdGltZSB0aGF0IEFnZXNpbGF1cyB3YXMgc3BlbmRpbmcgaW4gcXVpZXQgYW5kIGxlaXN1cmUgYXQgRXBoZXN1cywgc2luY2UgdGhlIGdvdmVybm1lbnRzIGluIHRoZSBjaXRpZXMgd2VyZSBpbiBhIHN0YXRlIG9mIGNvbmZ1c2lvbuKAlGZvciBpdCB3YXMgbm8gbG9uZ2VyIGRlbW9jcmFjeSwgYXMgaW4gdGhlIHRpbWUgb2YgQXRoZW5pYW4gcnVsZSwgbm9yIGRlY2FyY2h5LCBhcyBpbiB0aGUgdGltZSBvZiBMeXNhbmRlcuKAlGFuZCBzaW5jZSB0aGUgcGVvcGxlIGFsbCBrbmV3IEx5c2FuZGVyLCB0aGV5IGJlc2V0IGhpbSB3aXRoIHJlcXVlc3RzIHRoYXQgaGUgc2hvdWxkIG9idGFpbiBmcm9tIEFnZXNpbGF1cyB0aGUgZ3JhbnRpbmcgb2YgdGhlaXIgcGV0aXRpb25zOyBhbmQgZm9yIHRoaXMgcmVhc29uIGEgdmVyeSBncmVhdCBjcm93ZCB3YXMgY29udGludWFsbHkgY291cnRpbmcgYW5kIGZvbGxvd2luZyBoaW0sIHNvIHRoYXQgQWdlc2lsYXVzIGFwcGVhcmVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk2Ij4zOTYgQi5DLjwvZGF0ZT48L25vdGU+IHRvIGJlIGEgbWFuIGluIHByaXZhdGUgc3RhdGlvbiBhbmQgTHlzYW5kZXIga2luZy4KPGRhdGUgYXV0aG5hbWU9Ii0zOTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTYiPjM5NiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk5vdyBBZ2VzaWxhdXMgc2hvd2VkIGFmdGVyd2FyZHMgdGhhdCBoZSBhbHNvIHdhcyBlbnJhZ2VkIGJ5IHRoZXNlIHRoaW5nczsgYnV0IHRoZSB0aGlydHkgU3BhcnRpYXRhZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgIDIgYWJvdmUuPC9ub3RlPiB3aXRoIGhpbSB3ZXJlIHNvIGplYWxvdXMgdGhhdCB0aGV5IGNvdWxkIG5vdCBrZWVwIHNpbGVuY2UsIGJ1dCBzYWlkIHRvIEFnZXNpbGF1cyB0aGF0IEx5c2FuZGVyIHdhcyBkb2luZyBhbiB1bmxhd2Z1bCB0aGluZyBpbiBjb25kdWN0aW5nIGhpbXNlbGYgbW9yZSBwb21wb3VzbHkgdGhhbiByb3lhbHR5LiBXaGVuLCBob3dldmVyLCBMeXNhbmRlciBub3cgYmVnYW4gdG8gaW50cm9kdWNlIHBlb3BsZSB0byBBZ2VzaWxhdXMsIHRoZSBraW5nIHdvdWxkIGluIGV2ZXJ5IGNhc2UgZGlzbWlzcywgd2l0aG91dCBncmFudGluZyB0aGVpciBwZXRpdGlvbnMsIHRob3NlIHdobyB3ZXJlIGtub3duIGJ5IGhpbSB0byBiZSBzdXBwb3J0ZWQgaW4gYW55IHdheSBieSBMeXNhbmRlci4gQW5kIHdoZW4gTHlzYW5kZXIgZm91bmQgdGhhdCB0aGUgb3V0Y29tZSB3YXMgaW52YXJpYWJseSB0aGUgb3Bwb3NpdGUgb2Ygd2hhdCBoZSBkZXNpcmVkLCBoZSByZWFsaXplZCBob3cgdGhlIG1hdHRlciBzdG9vZDsgYW5kIGhlIG5vIGxvbmdlciBhbGxvd2VkIGEgY3Jvd2QgdG8gZm9sbG93IGhpbSwgd2hpbGUgaGUgcGxhaW5seSB0b2xkIHRob3NlIHdobyB3YW50ZWQgaGltIHRvIGdpdmUgdGhlbSBhbnkgaGVscCB0aGF0IHRoZXkgd291bGQgZmFyZSB3b3JzZSBpZiBoZSBzdXBwb3J0ZWQgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['3.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBiZWluZyBkaXN0cmVzc2VkIGF0IGhpcyBkaXNncmFjZSwgaGUgd2VudCB0byBBZ2VzaWxhdXMgYW5kIHNhaWQ6IOKAnEFnZXNpbGF1cywgaXQgc2VlbXMgdGhhdCB5b3UsIGF0IGxlYXN0LCB1bmRlcnN0YW5kIGhvdyB0byBodW1pbGlhdGUgeW91ciBmcmllbmRzLuKAnSDigJxZZXMsIGJ5IFpldXMsIEkgZG8s4oCdIHNhaWQgaGUsIOKAnGF0IGFueSByYXRlIHRob3NlIHdobyB3aXNoIHRvIGFwcGVhciBncmVhdGVyIHRoYW4gSTsgYnV0IGFzIGZvciB0aG9zZSB3aG8gZXhhbHQgbWUsIGlmIEkgc2hvdWxkIHByb3ZlIG5vdCB0byBrbm93IGhvdyB0byBob25vdXIgdGhlbSBpbiByZXR1cm4sIEkgc2hvdWxkIGJlIGFzaGFtZWQu4oCdIEFuZCBMeXNhbmRlciBzYWlkOiDigJxXZWxsLCBwZXJoYXBzIGl0IGlzIGluZGVlZCB0cnVlIHRoYXQgeW91IGFyZSBhY3RpbmcgbW9yZSBwcm9wZXJseSB0aGFuIEkgYWN0ZWQuIFRoZXJlZm9yZSBncmFudCBtZSB0aGlzIGZhdm91ciBhdCBsZWFzdDogaW4gb3JkZXIgdGhhdCBJIG1heSBub3QgYmUgc2hhbWVkIGJ5IGhhdmluZyBubyBpbmZsdWVuY2Ugd2l0aCB5b3UsIGFuZCBtYXkgbm90IGJlIGluIHlvdXIgd2F5LCBzZW5kIG1lIG9mZiBzb21ld2hlcmUuIEZvciwgd2hlcmV2ZXIgSSBtYXkgYmUsIEkgc2hhbGwgZW5kZWF2b3VyIHRvIGJlIHVzZWZ1bCB0byB5b3Uu4oCdCjwvdHJhbnNsYXRpb24+"
translation['3.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIGhlIGhhZCB0aHVzIHNwb2tlbiwgQWdlc2lsYXVzIGFsc28gdGhvdWdodCBpdCBiZXN0IHRvIGZvbGxvdyB0aGlzIGNvdXJzZSwgYW5kIGhlIHNlbnQgaGltIHRvIHRoZSBIZWxsZXNwb250LiBUaGVyZSBMeXNhbmRlciwgdXBvbiBsZWFybmluZyB0aGF0IFNwaXRocmlkYXRlcyB0aGUgUGVyc2lhbiBoYWQgc3VmZmVyZWQgYSBzbGlnaHQgYXQgdGhlIGhhbmRzIG9mIFBoYXJuYWJhenVzLCBoYWQgYSBjb25mZXJlbmNlIHdpdGggaGltIGFuZCBwZXJzdWFkZWQgaGltIHRvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk2Ij4zOTYgQi5DLjwvZGF0ZT48L25vdGU+IHJldm9sdCwgdGFraW5nIHdpdGggaGltIGhpcyBjaGlsZHJlbiBhbmQgdGhlIG1vbmV5IGhlIGhhZCBhdCBoYW5kIGFuZCBhYm91dCB0d28gaHVuZHJlZCBob3JzZW1lbi4gQW5kIEx5c2FuZGVyIGxlZnQgZXZlcnl0aGluZyBlbHNlIGF0IEN5emljdXMsIGJ1dCBwdXQgU3BpdGhyaWRhdGVzIGhpbXNlbGYgYW5kIGhpcyBzb24gb24gYm9hcmQgc2hpcCBhbmQgYnJvdWdodCB0aGVtIHdpdGggaGltIHRvIEFnZXNpbGF1cy4gQW5kIHdoZW4gQWdlc2lsYXVzIHNhdyB0aGVtLCBoZSB3YXMgcGxlYXNlZCB3aXRoIHRoZSBleHBsb2l0LCBhbmQgaW1tZWRpYXRlbHkgaW5xdWlyZWQgYWJvdXQgdGhlIHRlcnJpdG9yeSBhbmQgZ292ZXJubWVudCBvZiBQaGFybmFiYXp1cy4KPGRhdGUgYXV0aG5hbWU9Ii0zOTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTYiPjM5NiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoZW4gVGlzc2FwaGVybmVzLCBncm93aW5nIGNvbmZpZGVudCBiZWNhdXNlIG9mIHRoZSBhcm15IHdoaWNoIGhhZCBjb21lIGRvd24gZnJvbSB0aGUgS2luZywgZGVjbGFyZWQgd2FyIHVwb24gQWdlc2lsYXVzIGlmIGhlIGRpZCBub3QgZGVwYXJ0IGZyb20gQXNpYSwgdGhlIGFsbGllcyBhbmQgdGhlIExhY2VkYWVtb25pYW5zIHdobyB3ZXJlIHByZXNlbnQgc2hvd2VkIHRoYXQgdGhleSB3ZXJlIGdyZWF0bHkgZGlzdHVyYmVkLCB0aGlua2luZyB0aGF0IHRoZSBmb3JjZSB3aGljaCBBZ2VzaWxhdXMgaGFkIHdhcyBpbmZlcmlvciB0byB0aGUgS2luZydzIGFycmF5OyBidXQgQWdlc2lsYXVzLCBoaXMgY291bnRlbmFuY2UgcmFkaWFudCwgb3JkZXJlZCB0aGUgYW1iYXNzYWRvcnMgdG8gY2FycnkgYmFjayB3b3JkIHRvIFRpc3NhcGhlcm5lcyB0aGF0IGhlIGZlbHQgdmVyeSBncmF0ZWZ1bCB0byBoaW0gYmVjYXVzZSwgYnkgdmlvbGF0aW5nIGhpcyBvYXRoLCBoZSBoYWQgbWFkZSB0aGUgZ29kcyBlbmVtaWVzIG9mIGhpcyBzaWRlIGFuZCBhbGxpZXMgb2YgdGhlIEdyZWVrcy4gVGhlbiBoZSBzdHJhaWdodHdheSBnYXZlIG9yZGVycyB0byB0aGUgc29sZGllcnMgdG8gcGFjayB1cCBmb3IgYSBjYW1wYWlnbiwgYW5kIHNlbnQgd29yZCB0byB0aGUgY2l0aWVzIHdoaWNoIGhhZCB0byBiZSB2aXNpdGVkIGJ5IGFueW9uZSB3aG8gbWFyY2hlZCB1cG9uIENhcmlhLCB0aGF0IHRoZXkgc2hvdWxkIG1ha2UgcmVhZHkgYSBtYXJrZXQuIEhlIGFsc28gZGlzcGF0Y2hlZCBvcmRlcnMgdG8gdGhlIElvbmlhbnMsIEFlb2xpYW5zLCBhbmQgSGVsbGVzcG9udGluZXMgdG8gc2VuZCB0byBoaW0gYXQgRXBoZXN1cyB0cm9vcHMgd2hpY2ggc2hvdWxkIHRha2UgcGFydCBpbiB0aGUgY2FtcGFpZ24uCjwvdHJhbnNsYXRpb24+"
translation['3.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgVGlzc2FwaGVybmVzLCBib3RoIGJlY2F1c2UgQWdlc2lsYXVzIGhhZCBubyBjYXZhbHJ5IChhbmQgQ2FyaWEgd2FzIHVuc3VpdGVkIGZvciBjYXZhbHJ5KSwgYW5kIGJlY2F1c2UgaGUgYmVsaWV2ZWQgdGhhdCBoZSB3YXMgYW5ncnkgd2l0aCBoaW0gb24gYWNjb3VudCBvZiBoaXMgdHJlYWNoZXJ5LCBtYWRlIHVwIGhpcyBtaW5kIHRoYXQgaGUgd2FzIHJlYWxseSBnb2luZyB0byBtYXJjaCBhZ2FpbnN0IGhpcyBvd24gcmVzaWRlbmNlIGluIENhcmlhLCBhbmQgYWNjb3JkaW5nbHkgc2VudCBhbGwgaGlzIGluZmFudHJ5IGFjcm9zcyBpbnRvIHRoYXQgcHJvdmluY2UsIGFuZCBhcyBmb3IgaGlzIGNhdmFscnksIGhlIGxlZCBpdCByb3VuZCBpbnRvIHRoZSBwbGFpbiBvZiB0aGUgTWFlYW5kZXIsIHRoaW5raW5nIHRoYXQgaGUgd2FzIHN0cm9uZyBlbm91Z2ggdG8gdHJhbXBsZSB0aGUgR3JlZWtzIHVuZGVyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk2Ij4zOTYgQi5DLjwvZGF0ZT48L25vdGU+IGZvb3Qgd2l0aCBoaXMgaG9yc2VtZW4gYmVmb3JlIHRoZXkgc2hvdWxkIHJlYWNoIHRoZSByZWdpb25zIHdoaWNoIHdlcmUgdW5maXQgZm9yIGNhdmFscnkuIEFnZXNpbGF1cywgaG93ZXZlciwgaW5zdGVhZCBvZiBwcm9jZWVkaW5nIGFnYWluc3QgQ2FyaWEsIHN0cmFpZ2h0d2F5IHR1cm5lZCBpbiB0aGUgb3Bwb3NpdGUgZGlyZWN0aW9uIGFuZCBtYXJjaGVkIHRvd2FyZHMgUGhyeWdpYSwgYW5kIGhlIHBpY2tlZCB1cCBhbmQgbGVkIGFsb25nIHdpdGggaGltIHRoZSBjb250aW5nZW50cyB3aGljaCBtZXQgaGltIG9uIHRoZSBtYXJjaCwgc3ViZHVlZCB0aGUgY2l0aWVzLCBhbmQsIHNpbmNlIGhlIGZlbGwgdXBvbiB0aGVtIHVuZXhwZWN0ZWRseSwgb2J0YWluZWQgZ3JlYXQgcXVhbnRpdGllcyBvZiBib290eS4KPGRhdGUgYXV0aG5hbWU9Ii0zOTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTYiPjM5NiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Nb3N0IG9mIHRoZSB0aW1lIGhlIHB1cnN1ZWQgaGlzIG1hcmNoIHRocm91Z2ggdGhlIGNvdW50cnkgaW4gc2FmZXR5OyBidXQgd2hlbiBoZSB3YXMgbm90IGZhciBmcm9tIERhc2N5bGVpdW0sIGhpcyBob3JzZW1lbiwgd2hvIHdlcmUgZ29pbmcgb24gYWhlYWQgb2YgaGltLCByb2RlIHRvIHRoZSB0b3Agb2YgYSBoaWxsIHNvIGFzIHRvIHNlZSB3aGF0IHdhcyBpbiBmcm9udC4gQW5kIGJ5IGNoYW5jZSB0aGUgaG9yc2VtZW4gb2YgUGhhcm5hYmF6dXMsIHVuZGVyIHRoZSBjb21tYW5kIG9mIFJoYXRoaW5lcyBhbmQgQmFnYWV1cywgaGlzIGJhc3RhcmQgYnJvdGhlciwganVzdCBhYm91dCBlcXVhbCB0byB0aGUgR3JlZWsgY2F2YWxyeSBpbiBudW1iZXIsIGhhZCBiZWVuIHNlbnQgb3V0IGJ5IFBoYXJuYWJhenVzIGFuZCBsaWtld2lzZSByb2RlIHRvIHRoZSB0b3Agb2YgdGhpcyBzYW1lIGhpbGwuIEFuZCB3aGVuIHRoZSB0d28gc3F1YWRyb25zIHNhdyBvbmUgYW5vdGhlciwgbm90IHNvIG11Y2ggYXMgZm91ciBwbGV0aHJhPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBwbGV0aHJ1bT1jLiAxMDAgZmVldC48L25vdGU+IGFwYXJ0LCBhdCBmaXJzdCBib3RoIGhhbHRlZCwgdGhlIEdyZWVrIGhvcnNlbWVuIGJlaW5nIGRyYXduIHVwIGZvdXIgZGVlcCBsaWtlIGEgcGhhbGFueCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIOKAnHBoYWxhbnjigJ0gb2YgdGhpcyBwZXJpb2Qgd2FzIHNvbWV0aW1lcyBmb3VyLCBzZWxkb20gbW9yZSB0aGFuIGVpZ2h0LCBkZWVwLiBUaGUgdGVuZGVuY3kgb2YgbGF0ZXIgdGFjdGljcyB3YXMgdG8gaW5jcmVhc2UgaXRzIGRlcHRoIGdyZWF0bHkgKGNwLiBJVi4gaWkuIDE4LCBWSS4gaXYuIDEyKSwgYSB0ZW5kZW5jeSB3aGljaCBjdWxtaW5hdGVkIGluIHRoZSBmYW1vdXMgTWFjZWRvbmlhbiBwaGFsYW54Ljwvbm90ZT4gYW5kIHRoZSBiYXJiYXJpYW5zIHdpdGggYSBmcm9udCBvZiBub3QgbW9yZSB0aGFuIHR3ZWx2ZSwgYnV0IG1hbnkgbWVuIGRlZXAuIFRoZW4sIGhvd2V2ZXIsIHRoZSBiYXJiYXJpYW5zIGNoYXJnZWQuCjwvdHJhbnNsYXRpb24+"
translation['3.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgY2FtZSB0byBhIGhhbmQtdG8taGFuZCBlbmNvdW50ZXIsIGFsbCBvZiB0aGUgR3JlZWtzIHdobyBzdHJ1Y2sgYW55b25lIGJyb2tlIHRoZWlyIHNwZWFycywgd2hpbGUgdGhlIGJhcmJhcmlhbnMsIGJlaW5nIGFybWVkIHdpdGggamF2ZWxpbnMgb2YgY29ybmVsLXdvb2QsIHNwZWVkaWx5IGtpbGxlZCB0d2VsdmUgbWVuIGFuZCB0d28gaG9yc2VzLiBUaGVyZXVwb24gdGhlIEdyZWVrcyB3ZXJlIHR1cm5lZCB0byBmbGlnaHQuIEJ1dCB3aGVuIEFnZXNpbGF1cyBjYW1lIHRvIHRoZSByZXNjdWUgd2l0aCB0aGUgaG9wbGl0ZXMsIHRoZSBiYXJiYXJpYW5zIHdpdGhkcmV3IGFnYWluIGFuZCBvbmUgb2YgdGhlbSB3YXMga2lsbGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIGNhdmFscnkgYmF0dGxlIGhhZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NiI+Mzk2IEIuQy48L2RhdGU+PC9ub3RlPiB0YWtlbiBwbGFjZSBhbmQgQWdlc2lsYXVzIG9uIHRoZSBuZXh0IGRheSB3YXMgb2ZmZXJpbmcgc2FjcmlmaWNlcyB3aXRoIGEgdmlldyB0byBhbiBhZHZhbmNlLCB0aGUgbGl2ZXJzIG9mIHRoZSB2aWN0aW1zIHdlcmUgZm91bmQgdG8gYmUgbGFja2luZyBhIGxvYmUuIFRoaXMgc2lnbiBoYXZpbmcgcHJlc2VudGVkIGl0c2VsZiwgaGUgdHVybmVkIGFuZCBtYXJjaGVkIHRvIHRoZSBzZWEuIEFuZCBwZXJjZWl2aW5nIHRoYXQsIHVubGVzcyBoZSBvYnRhaW5lZCBhbiBhZGVxdWF0ZSBjYXZhbHJ5IGZvcmNlLCBoZSB3b3VsZCBub3QgYmUgYWJsZSB0byBjYW1wYWlnbiBpbiB0aGUgcGxhaW5zLCBoZSByZXNvbHZlZCB0aGF0IHRoaXMgbXVzdCBiZSBwcm92aWRlZCwgc28gdGhhdCBoZSBtaWdodCBub3QgaGF2ZSB0byBjYXJyeSBvbiBhIHNrdWxraW5nIHdhcmZhcmUuIEFjY29yZGluZ2x5IGhlIGFzc2lnbmVkIHRoZSByaWNoZXN0IG1lbiBvZiBhbGwgdGhlIGNpdGllcyBpbiB0aGF0IHJlZ2lvbiB0byB0aGUgZHV0eSBvZiByYWlzaW5nIGhvcnNlczsgYW5kIGJ5IHByb2NsYWltaW5nIHRoYXQgd2hvZXZlciBzdXBwbGllZCBhIGhvcnNlIGFuZCBhcm1zIGFuZCBhIGNvbXBldGVudCBtYW4gd291bGQgbm90IGhhdmUgdG8gc2VydmUgaGltc2VsZiwgaGUgY2F1c2VkIHRoZXNlIGFycmFuZ2VtZW50cyB0byBiZSBjYXJyaWVkIG91dCB3aXRoIGFsbCB0aGUgZXhwZWRpdGlvbiB0aGF0IHdhcyB0byBiZSBleHBlY3RlZCB3aGVuIG1lbiB3ZXJlIGVhZ2VybHkgbG9va2luZyBmb3Igc3Vic3RpdHV0ZXMgdG8gZGllIGluIHRoZWlyIHN0ZWFkLgo8ZGF0ZSBhdXRobmFtZT0iLTM5NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NiI+Mzk2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcywgd2hlbiBzcHJpbmcgd2FzIGp1c3QgY29taW5nIG9uLCBoZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC9ub3RlPiBnYXRoZXJlZCBoaXMgd2hvbGUgYXJteSBhdCBFcGhlc3VzOyBhbmQgZGVzaXJpbmcgdG8gdHJhaW4gdGhlIGFybXksIGhlIG9mZmVyZWQgcHJpemVzIGJvdGggdG8gdGhlIGhlYXZ5LWFybWVkIGRpdmlzaW9ucywgZm9yIHRoZSBkaXZpc2lvbiB3aGljaCBzaG91bGQgYmUgaW4gdGhlIGJlc3QgcGh5c2ljYWwgY29uZGl0aW9uLCBhbmQgdG8gdGhlIGNhdmFscnkgZGl2aXNpb25zLCBmb3IgdGhlIG9uZSB3aGljaCBzaG91bGQgc2hvdyB0aGUgYmVzdCBob3JzZW1hbnNoaXA7IGFuZCBoZSBhbHNvIG9mZmVyZWQgcHJpemVzIHRvIHBlbHRhc3RzIGFuZCBib3dtZW4sIGZvciBhbGwgd2hvIHNob3VsZCBwcm92ZSB0aGVtc2VsdmVzIGJlc3QgaW4gdGhlaXIgcmVzcGVjdGl2ZSBkdXRpZXMuIFRoZXJldXBvbiBvbmUgbWlnaHQgaGF2ZSBzZWVuIGFsbCB0aGUgZ3ltbmFzaWEgZnVsbCBvZiBtZW4gZXhlcmNpc2luZywgdGhlIGhpcHBvZHJvbWUgZnVsbCBvZiByaWRlcnMsIGFuZCB0aGUgamF2ZWxpbi1tZW4gYW5kIGJvd21lbiBwcmFjdGlzaW5nLgo8ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5JbiBmYWN0LCBoZSBtYWRlIHRoZSBlbnRpcmUgY2l0eSwgd2hlcmUgaGUgd2FzIHN0YXlpbmcsIGEgc2lnaHQgd29ydGggc2VlaW5nOyBmb3IgdGhlIG1hcmtldCB3YXMgZnVsbCBvZiBhbGwgc29ydHMgb2YgaG9yc2VzIGFuZCB3ZWFwb25zLCBvZmZlcmVkIGZvciBzYWxlLCBhbmQgdGhlIGNvcHBlci13b3JrZXJzLCBjYXJwZW50ZXJzLCBzbWl0aHMsIGxlYXRoZXItY3V0dGVycywgYW5kIHBhaW50ZXJzIHdlcmUgYWxsIGVuZ2FnZWQgaW4gbWFraW5nIG1hcnRpYWwgd2VhcG9ucywgc28gdGhhdCBvbmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjwvbm90ZT4gbWlnaHQgaGF2ZSB0aG91Z2h0IHRoYXQgdGhlIGNpdHkgd2FzIHJlYWxseSBhIHdvcmtzaG9wIG9mIHdhci4KPGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgb25lIHdvdWxkIGhhdmUgYmVlbiBlbmNvdXJhZ2VkIGF0IGFub3RoZXIgc2lnaHQgYWxzb+KAlEFnZXNpbGF1cyBpbiB0aGUgdmFuLCBhbmQgYWZ0ZXIgaGltIHRoZSByZXN0IG9mIHRoZSBzb2xkaWVycywgcmV0dXJuaW5nIGdhcmxhbmRlZCBmcm9tIHRoZSBneW1uYXNpYSBhbmQgZGVkaWNhdGluZyB0aGVpciBnYXJsYW5kcyB0byBBcnRlbWlzLiBGb3Igd2hlcmUgbWVuIHJldmVyZW5jZSB0aGUgZ29kcywgdHJhaW4gdGhlbXNlbHZlcyBpbiBkZWVkcyBvZiB3YXIsIGFuZCBwcmFjdGlzZSBvYmVkaWVuY2UgdG8gYXV0aG9yaXR5LCBtYXkgd2Ugbm90IHJlYXNvbmFibHkgc3VwcG9zZSB0aGF0IHN1Y2ggYSBwbGFjZSBhYm91bmRzIGluIGhpZ2ggaG9wZXM/CjwvdHJhbnNsYXRpb24+"
translation['3.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYWdhaW4sIGJlbGlldmluZyB0aGF0IHRvIGZlZWwgY29udGVtcHQgZm9yIG9uZSdzIGVuZW1pZXMgaW5mdXNlcyBhIGNlcnRhaW4gY291cmFnZSBmb3IgdGhlIGZpZ2h0LCBBZ2VzaWxhdXMgZ2F2ZSBvcmRlcnMgdG8gaGlzIGhlcmFsZHMgdGhhdCB0aGUgYmFyYmFyaWFucyB3aG8gd2VyZSBjYXB0dXJlZCBieSB0aGUgR3JlZWsgcmFpZGluZyBwYXJ0aWVzIHNob3VsZCBiZSBleHBvc2VkIGZvciBzYWxlIG5ha2VkLiBUaHVzIHRoZSBzb2xkaWVycywgc2VlaW5nIHRoYXQgdGhlc2UgbWVuIHdlcmUgd2hpdGUtc2tpbm5lZCBiZWNhdXNlIHRoZXkgbmV2ZXIgd2VyZSB3aXRob3V0IHRoZWlyIGNsb3RoaW5nLCBhbmQgc29mdCBhbmQgdW51c2VkIHRvIHRvaWwgYmVjYXVzZSB0aGV5IGFsd2F5cyByb2RlIGluIGNhcnJpYWdlcywgY2FtZSB0byB0aGUgY29uY2x1c2lvbiB0aGF0IHRoZSB3YXIgd291bGQgYmUgaW4gbm8gd2F5IGRpZmZlcmVudCBmcm9tIGhhdmluZyB0byBmaWdodCB3aXRoIHdvbWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVhbndoaWxlIHRoZSB5ZWFyIGhhZCBub3cgZW5kZWQgc2luY2UgdGhlIHRpbWUgd2hlbiBBZ2VzaWxhdXMgaGFkIHNldCBzYWlsIGZyb20gR3JlZWNlLCBzbyB0aGF0IEx5c2FuZGVyIGFuZCB0aGUgdGhpcnR5IFNwYXJ0aWF0YWUgc2FpbGVkIGJhY2sgaG9tZSwgYW5kIEhlcmlwcGlkYXMgd2l0aCBoaXMgdGhpcnR5IGNhbWUgYXMgdGhlaXIgc3VjY2Vzc29ycy4gT2YgdGhlc2UsIEFnZXNpbGF1cyBhc3NpZ25lZCBYZW5vY2xlcyBhbmQgb25lIG90aGVyIHRvIHRoZSBjb21tYW5kIG9mIHRoZSBjYXZhbHJ5LCBTY3l0aGVzIHRvIHRoZSBjb21tYW5kIG9mIHRoZSBIZWxvdCBob3BsaXRlcywgSGVyaXBwaWRhcyB0byB0aGUgQ3lyZWFucyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SS5lLiB0aGUgR3JlZWsgdHJvb3BzIHdoaWNoIGhhZCBzZXJ2ZWQgdW5kZXIgQ3lydXMsIGFuZCBub3cgbWFkZSBwYXJ0IG9mIEFnZXNpbGF1cycgYXJteS4gQ3AuIElJSS4gaS4gNiwgaWkuIDcuPC9ub3RlPiBhbmQgTXlnZG9uIHRvIHRoZSB0cm9vcHMgZnJvbSB0aGUgYWxsaWVkIGNpdGllcywgYW5kIGhlIGFubm91bmNlZCB0byB0aGVtIHRoYXQgaGUgd291bGQgaW1tZWRpYXRlbHkgbGVhZCB0aGVtIGJ5IHRoZSBzaG9ydGVzdCByb3V0ZSB0byB0aGUgYmVzdCBwYXJ0cyBvZiB0aGUgY291bnRyeSwgaGlzIG9iamVjdCBiZWluZyB0byBoYXZlIHRoZW0gYmVnaW4gYXQgb25jZSB0byBwcmVwYXJlIHRoZWlyIGJvZGllcyBhbmQgc3Bpcml0cyBmb3IgdGhlIGZyYXkuCjwvdHJhbnNsYXRpb24+"
translation['3.4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaXNzYXBoZXJuZXMsIGhvd2V2ZXIsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk1Ij4zOTUgQi5DLjwvZGF0ZT48L25vdGU+IHRob3VnaHQgdGhhdCBoZSB3YXMgc2F5aW5nIHRoaXMgZnJvbSBhIGRlc2lyZSB0byBkZWNlaXZlIGhpbSBhZ2FpbiwgYW5kIHRoYXQgdGhpcyB0aW1lIGhlIHdvdWxkIHJlYWxseSBpbnZhZGUgQ2FyaWEsIGFuZCBhY2NvcmRpbmdseSBoZSBzZW50IGhpcyBpbmZhbnRyeSBhY3Jvc3MgaW50byBDYXJpYSwganVzdCBhcyBiZWZvcmUsIGFuZCBzdGF0aW9uZWQgaGlzIGNhdmFscnkgaW4gdGhlIHBsYWluIG9mIHRoZSBNYWVhbmRlci4gQWdlc2lsYXVzLCBob3dldmVyLCBkaWQgbm90IGJlbGllIGhpcyB3b3JkcywgYnV0LCBldmVuIGFzIGhlIGhhZCBhbm5vdW5jZWQsIG1hcmNoZWQgc3RyYWlnaHQgdG8gdGhlIG5laWdoYm91cmhvb2Qgb2YgU2FyZGlzLiBGb3IgdGhyZWUgZGF5cyBoZSBwcm9jZWVkZWQgdGhyb3VnaCBhIGNvdW50cnkgYmFyZSBvZiBlbmVtaWVzLCBhbmQgaGFkIHByb3Zpc2lvbnMgZm9yIHRoZSBhcm15IGluIGFidW5kYW5jZSwgYnV0IG9uIHRoZSBmb3VydGggZGF5IHRoZSBjYXZhbHJ5IG9mIHRoZSBlbmVteSBjYW1lIHVwLgo8ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlaXIgY29tbWFuZGVyIHRvbGQgdGhlIGxlYWRlciBvZiB0aGUgYmFnZ2FnZS10cmFpbiB0byBjcm9zcyB0aGUgUGFjdG9sdXMgcml2ZXIgYW5kIGVuY2FtcCwgd2hpbGUgdGhlIGhvcnNlbWVuIHRoZW1zZWx2ZXMsIGdldHRpbmcgc2lnaHQgb2YgdGhlIGNhbXAtZm9sbG93ZXJzIG9uIHRoZSBzaWRlIG9mIHRoZSBHcmVla3MsIHNjYXR0ZXJlZCBmb3IgcGx1bmRlciwga2lsbGVkIGEgbGFyZ2UgbnVtYmVyIG9mIHRoZW0uIE9uIHBlcmNlaXZpbmcgdGhpcyBBZ2VzaWxhdXMgb3JkZXJlZCBoaXMgaG9yc2VtZW4gdG8gZ28gdG8gdGhlaXIgYWlkLiBBbmQgdGhlIFBlcnNpYW5zLCBpbiB0aGVpciB0dXJuLCB3aGVuIHRoZXkgc2F3IHRoaXMgbW92ZW1lbnQsIGdhdGhlcmVkIHRvZ2V0aGVyIGFuZCBmb3JtZWQgYW4gb3Bwb3NpbmcgbGluZSwgd2l0aCB2ZXJ5IG1hbnkgY29tcGFuaWVzIG9mIHRoZWlyIGhvcnNlbWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIEFnZXNpbGF1cywgYXdhcmUgdGhhdCB0aGUgaW5mYW50cnkgb2YgdGhlIGVuZW15IHdhcyBub3QgeWV0IGF0IGhhbmQsIHdoaWxlIG9uIGhpcyBzaWRlIG5vbmUgb2YgdGhlIGFybXMgd2hpY2ggaGFkIGJlZW4gbWFkZSByZWFkeSB3YXMgbWlzc2luZywgZGVlbWVkIGl0IGEgZml0IHRpbWUgdG8gam9pbiBiYXR0bGUgaWYgaGUgY291bGQuIFRoZXJlZm9yZSwgYWZ0ZXIgb2ZmZXJpbmcgc2FjcmlmaWNlLCBoZSBhdCBvbmNlIGxlZCBoaXMgcGhhbGFueCBhZ2FpbnN0IHRoZSBvcHBvc2luZyBsaW5lIG9mIGhvcnNlbWVuLCBvcmRlcmluZyB0aGUgZmlyc3QgdGVuIHllYXItY2xhc3Nlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DcC4gSUkuIGl2LiAzMiBhbmQgdGhlIG5vdGUgdGhlcmVvbi48L25vdGU+IG9mIHRoZSBob3BsaXRlcyB0byBydW4gdG8gY2xvc2UgcXVhcnRlcnMgd2l0aCB0aGUgZW5lbXksIGFuZCBiaWRkaW5nIHRoZSBwZWx0YXN0cyBsZWFkIHRoZSB3YXkgYXQgYSBkb3VibGUtcXVpY2suIEhlIGFsc28gc2VudCB3b3JkIHRvIGhpcyBjYXZhbHJ5IHRvIGF0dGFjaywgaW4gdGhlIGFzc3VyYW5jZSB0aGF0IGhlIGFuZCB0aGUgd2hvbGUgYXJteSB3ZXJlIGZvbGxvd2luZyB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.4.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIFBlcnNpYW5zIG1ldCB0aGUgYXR0YWNrIG9mIHRoZSBjYXZhbHJ5OyBidXQgd2hlbiB0aGUgd2hvbGUgZm9ybWlkYWJsZSBhcnJheSB0b2dldGhlciB3YXMgdXBvbiB0aGVtLCB0aGV5IGdhdmUgd2F5LCBhbmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjwvbm90ZT4gc29tZSBvZiB0aGVtIHdlcmUgc3RydWNrIGRvd24gYXQgb25jZSBpbiBjcm9zc2luZyB0aGUgcml2ZXIsIHdoaWxlIHRoZSByZXN0IGZsZWQgb24uIEFuZCB0aGUgR3JlZWtzLCBwdXJzdWluZyB0aGVtLCBjYXB0dXJlZCB0aGVpciBjYW1wIGFzIHdlbGwuIFRoZW4gdGhlIHBlbHRhc3RzLCBhcyB3YXMgbmF0dXJhbCwgYmV0b29rIHRoZW1zZWx2ZXMgdG8gcGx1bmRlcmluZzsgYnV0IEFnZXNpbGF1cyBlbmNsb3NlZCBhbGwgYWxpa2UsIGZyaWVuZHM8ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNvIHRoYXQgdGhlIHBlbHRhc3RzIG1pZ2h0IG5vdCBhcHByb3ByaWF0ZSB0byB0aGVtc2VsdmVzIGJvb3R5IHdoaWNoIGJlbG9uZ2VkIHRvIGFsbCBpbiBjb21tb24uPC9ub3RlPiBhcyB3ZWxsIGFzIGZvZXMsIHdpdGhpbiB0aGUgY2lyY2xlIG9mIGhpcyBjYW1wLiBBbmQgbm90IG9ubHkgd2FzIG11Y2ggb3RoZXIgcHJvcGVydHkgY2FwdHVyZWQsIHdoaWNoIGZldGNoZWQgbW9yZSB0aGFuIHNldmVudHkgdGFsZW50cywgYnV0IGl0IHdhcyBhdCB0aGlzIHRpbWUgdGhhdCB0aGUgY2FtZWxzIGFsc28gd2VyZSBjYXB0dXJlZCB3aGljaCBBZ2VzaWxhdXMgYnJvdWdodCBiYWNrIHdpdGggaGltIHRvIEdyZWVjZS4KPC90cmFuc2xhdGlvbj4="
translation['3.4.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGlzIGJhdHRsZSB0b29rIHBsYWNlIFRpc3NhcGhlcm5lcyBjaGFuY2VkIHRvIGJlIGF0IFNhcmRpcywgc28gdGhhdCB0aGUgUGVyc2lhbnMgY2hhcmdlZCBoaW0gd2l0aCBoYXZpbmcgYmV0cmF5ZWQgdGhlbS4gRnVydGhlcm1vcmUsIHRoZSBQZXJzaWFuIEtpbmcgaGltc2VsZiBjb25jbHVkZWQgdGhhdCBUaXNzYXBoZXJuZXMgd2FzIHJlc3BvbnNpYmxlIGZvciB0aGUgYmFkIHR1cm4gaGlzIGFmZmFpcnMgd2VyZSB0YWtpbmcsIGFuZCBhY2NvcmRpbmdseSBzZW50IGRvd24gVGl0aHJhdXN0ZXMgYW5kIGN1dCBvZmYgaGlzIGhlYWQuIEFmdGVyIGhlIGhhZCBkb25lIHRoaXMsIFRpdGhyYXVzdGVzIHNlbnQgYW1iYXNzYWRvcnMgdG8gQWdlc2lsYXVzIHdpdGggdGhpcyBtZXNzYWdlOiDigJxBZ2VzaWxhdXMsIHRoZSBtYW4gd2hvIHdhcyByZXNwb25zaWJsZSBmb3IgdGhlIHRyb3VibGUgaW4geW91ciBleWVzIGFuZCBvdXJzIGhhcyByZWNlaXZlZCBoaXMgcHVuaXNobWVudDsgYW5kIHRoZSBLaW5nIGRlZW1zIGl0IGZpdHRpbmcgdGhhdCB5b3Ugc2hvdWxkIHNhaWwgYmFjayBob21lLCBhbmQgdGhhdCB0aGUgY2l0aWVzIGluIEFzaWEsIHJldGFpbmluZyB0aGVpciBpbmRlcGVuZGVuY2UsIHNob3VsZCByZW5kZXIgaGltIHRoZSBhbmNpZW50IHRyaWJ1dGUu4oCdCjwvdHJhbnNsYXRpb24+"
translation['3.4.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIEFnZXNpbGF1cyByZXBsaWVkIHRoYXQgaGUgY291bGQgbm90IGRvIHRoaXMgd2l0aG91dCB0aGUgc2FuY3Rpb24gb2YgdGhlIGF1dGhvcml0aWVzIGF0IGhvbWUsIFRpdGhyYXVzdGVzIHNhaWQsIOKAnEJ1dCBhdCBsZWFzdCwgdW50aWwgeW91IHJlY2VpdmUgd29yZCBmcm9tIHRoZSBjaXR5LCBnbyBvdmVyIGludG8gdGhlIHRlcnJpdG9yeSBvZiBQaGFybmFiYXp1cywgc2luY2UgaXQgaXMgSSB3aG8gaGF2ZSB0YWtlbiB2ZW5nZWFuY2UgdXBvbiB5b3VyIGVuZW15LuKAnSDigJxUaGVuLCB1bnRpbCBJIGdvIHRoZXJlLOKAnSBzYWlkIEFnZXNpbGF1cywg4oCcZ2l2ZSBtZSBwcm92aXNpb25zIGZvciB0aGUgYXJteS7igJ0gVGl0aHJhdXN0ZXMgYWNjb3JkaW5nbHkgZ2F2ZSBoaW0gdGhpcnR5IHRhbGVudHM7IGFuZCBoZSB0b29rIGl0IGFuZCBzZXQgb3V0IGZvciBQaGFybmFiYXp1cycgcHJvdmluY2Ugb2Y8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjwvbm90ZT4gUGhyeWdpYS4KPGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.4.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBoZSB3YXMgaW4gdGhlIHBsYWluIHdoaWNoIGlzIGFib3ZlIEN5bWUsIG9yZGVycyBjYW1lIHRvIGhpbSBmcm9tIHRoZSBhdXRob3JpdGllcyBhdCBob21lIHRvIGV4ZXJjaXNlIGNvbW1hbmQgYXMgaGUgdGhvdWdodCBiZXN0IG92ZXIgdGhlIGZsZWV0IGFsc28sIGFuZCB0byBhcHBvaW50IGFzIGFkbWlyYWwgd2hvbXNvZXZlciBoZSB3aXNoZWQuIE5vdyB0aGUgTGFjZWRhZW1vbmlhbnMgZGlkIHRoaXMgYmVjYXVzZSB0aGV5IHJlYXNvbmVkIHRoYXQgaWYgdGhlIHNhbWUgbWFuIHdlcmUgaW4gY29tbWFuZCBvZiBib3RoIGFybXkgYW5kIGZsZWV0LCB0aGUgYXJteSB3b3VsZCBiZSBtdWNoIHN0cm9uZ2VyIGJlY2F1c2UgdGhlIHN0cmVuZ3RoIG9mIGJvdGggd291bGQgYmUgdW5pdGVkLCBhbmQgdGhlIGZsZWV0IGxpa2V3aXNlIGJlY2F1c2UgdGhlIGFybXkgd291bGQgYXBwZWFyIHdoZXJldmVyIGl0IHdhcyBuZWVkZWQuCjwvdHJhbnNsYXRpb24+"
translation['3.4.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBBZ2VzaWxhdXMgaGVhcmQgdGhpcywgaW4gdGhlIGZpcnN0IHBsYWNlIGhlIHNlbnQgb3JkZXJzIHRvIHRoZSBjaXRpZXMgaW4gdGhlIGlzbGFuZHMgYW5kIG9uIHRoZSBjb2FzdCB0byBidWlsZCB0cmlyZW1lcyBpbiBzdWNoIG51bWJlcnMgYXMgdGhlIHNldmVyYWwgY2l0aWVzIGRlc2lyZWQuIEFuZCB0aGUgcmVzdWx0IHdhcyBuZXcgdHJpcmVtZXMgdG8gdGhlIG51bWJlciBvZiBvbmUgaHVuZHJlZCBhbmQgdHdlbnR5LCBjb25zaXN0aW5nIG9mIHRob3NlIHdoaWNoIHRoZSBjaXRpZXMgb2ZmZXJlZCBhbmQgdGhvc2Ugd2hpY2ggcHJpdmF0ZSBpbmRpdmlkdWFscyBidWlsdCBvdXQgb2YgZGVzaXJlIHRvIHBsZWFzZSBBZ2VzaWxhdXMuCjwvdHJhbnNsYXRpb24+"
translation['3.4.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGhlIGFwcG9pbnRlZCBhcyBhZG1pcmFsIFBlaXNhbmRlciwgaGlzIHdpZmUncyBicm90aGVyLCBhIG1hbiB3aG8gd2FzIGFtYml0aW91cyBhbmQgb2YgYSBzdG91dCBzcGlyaXQsIGJ1dCByYXRoZXIgaW5leHBlcmllbmNlZCBpbiBtYWtpbmcgc3VjaCBwcm92aXNpb25zIGFzIHdlcmUgbmVlZGZ1bC4gU28gUGVpc2FuZGVyIGRlcGFydGVkIGFuZCBidXNpZWQgaGltc2VsZiB3aXRoIG5hdmFsIG1hdHRlcnM7IGFuZCBBZ2VzaWxhdXMgY29udGludWVkIHRoZSBtYXJjaCB0byBQaHJ5Z2lhIG9uIHdoaWNoIGhlIGhhZCBzZXQgb3V0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgbm93IFRpdGhyYXVzdGVzLCB3aG8gdGhvdWdodCBoZSBoYWQgZm91bmQgb3V0IHRoYXQgQWdlc2lsYXVzIGRlc3Bpc2VkIHRoZSBwb3dlciBvZiB0aGUgS2luZyBhbmQgZGlkIG5vdCBpbiB0aGUgbGVhc3QgaW50ZW5kIHRvIGRlcGFydCBmcm9tIEFzaWEsIGJ1dCByYXRoZXIgaGFkIGdyZWF0IGhvcGVzIHRoYXQgaGUgd291bGQgb3ZlcmNvbWUgdGhlIEtpbmcsIGJlaW5nIHBlcnBsZXhlZCB0byBrbm93IGhvdyB0byBkZWFsIHdpdGggdGhlIHNpdHVhdGlvbiwgc2VudCBUaW1vY3JhdGVzIHRoZSBSaG9kaWFuIHRvIEdyZWVjZSwgZ2l2aW5nIGhpbSBnb2xkIHRvIHRoZSB2YWx1ZSBvZiBmaWZ0eSB0YWxlbnRzIG9mIHNpbHZlciwgYW5kIGJhZGUgaGltIHVuZGVydGFrZSwgb24gcmVjZWlwdCBvZiB0aGUgc3VyZXN0IHBsZWRnZXMsIHRvIGdpdmUgdGhpcyBtb25leSB0byB0aGUgbGVhZGVycyBpbiB0aGUgdmFyaW91cyBzdGF0ZXMgb24gY29uZGl0aW9uIHRoYXQgdGhleTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC9ub3RlPiBzaG91bGQgbWFrZSB3YXIgdXBvbiB0aGUgTGFjZWRhZW1vbmlhbnMuIFNvIFRpbW9jcmF0ZXMgd2VudCBhbmQgZ2F2ZSBoaXMgbW9uZXksIGF0IFRoZWJlcyB0byBBbmRyb2NsZWlkYXMsIElzbWVuaWFzLCBhbmQgR2FsYXhpZG9ydXM7IGF0IENvcmludGggdG8gVGltb2xhdXMgYW5kIFBvbHlhbnRoZXM7IGFuZCBhdCBBcmdvcyB0byBDeWxvbiBhbmQgaGlzIGZvbGxvd2Vycy4KPGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGUgQXRoZW5pYW5zLCBldmVuIHRob3VnaCB0aGV5IGRpZCBub3QgcmVjZWl2ZSBhIHNoYXJlIG9mIHRoaXMgZ29sZCwgd2VyZSBuZXZlcnRoZWxlc3MgZWFnZXIgZm9yIHRoZSB3YXIsIHRoaW5raW5nIHRoYXQgdGhlaXJzIHdhcyB0aGUgcmlnaHQgdG8gcnVsZS4gVGhlbiB0aG9zZSB3aG8gaGFkIHRha2VuIHRoZSBtb25leSBzZXQgdG8gd29yayBpbiB0aGVpciBvd24gc3RhdGVzIHRvIGRlZmFtZSB0aGUgTGFjZWRhZW1vbmlhbnM7IGFuZCB3aGVuIHRoZXkgaGFkIGJyb3VnaHQgdGhlaXIgcGVvcGxlIHRvIGEgZmVlbGluZyBvZiBoYXRyZWQgdG93YXJkIHRoZW0sIHRoZXkgdW5kZXJ0b29rLCBmdXJ0aGVyLCB0byB1bml0ZSB0aGUgbGFyZ2VzdCBzdGF0ZXMgd2l0aCBvbmUgYW5vdGhlci4KPC90cmFuc2xhdGlvbj4="
translation['3.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgdGhlIGxlYWRpbmcgbWVuIGluIFRoZWJlcywgYmVpbmcgYXdhcmUgdGhhdCB1bmxlc3Mgc29tZW9uZSBiZWdhbiB3YXIgdGhlIExhY2VkYWVtb25pYW5zIHdvdWxkIG5vdCBicmVhayB0aGUgcGVhY2Ugd2l0aCB0aGVpciBhbGxpZXMsIHBlcnN1YWRlZCB0aGUgT3B1bnRpYW4gTG9jcmlhbnMgdG8gbGV2eSBtb25leSBmcm9tIHRoZSB0ZXJyaXRvcnkgd2hpY2ggd2FzIGluIGRpc3B1dGUgYmV0d2VlbiB0aGUgUGhvY2lhbnMgYW5kIHRoZW1zZWx2ZXMsIGZvciB0aGV5IHRob3VnaHQgdGhhdCBpZiB0aGlzIHdhcyBkb25lIHRoZSBQaG9jaWFucyB3b3VsZCBpbnZhZGUgTG9jcmlzLiBBbmQgdGhleSB3ZXJlIG5vdCBkaXNhcHBvaW50ZWQsIGZvciB0aGUgUGhvY2lhbnMgZGlkIGF0IG9uY2UgaW52YWRlIExvY3JpcyBhbmQgc2VpemUgcHJvcGVydHkgbWFueSB0aW1lcyBhcyB2YWx1YWJsZS4KPC90cmFuc2xhdGlvbj4="
translation['3.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gQW5kcm9jbGVpZGFzIGFuZCBoaXMgZm9sbG93ZXJzIHNwZWVkaWx5IHBlcnN1YWRlZCB0aGUgVGhlYmFucyB0byBhaWQgdGhlIExvY3JpYW5zLCBvbiB0aGUgZ3JvdW5kIHRoYXQgdGhlIFBob2NpYW5zIGhhZCBpbnZhZGVkLCBub3QgdGhlIGRpc3B1dGVkIHRlcnJpdG9yeSwgYnV0IExvY3Jpcywgd2hpY2ggd2FzIGFkbWl0dGVkIHRvIGJlIGEgZnJpZW5kbHkgYW5kIGFsbGllZCBjb3VudHJ5LiBBbmQgd2hlbiB0aGUgVGhlYmFucyBtYWRlIGEgY291bnRlci1pbnZhc2lvbiBpbnRvIFBob2NpcyBhbmQgbGFpZCB3YXN0ZSB0aGUgbGFuZCwgdGhlIFBob2NpYW5zIHN0cmFpZ2h0d2F5IHNlbnQgYW1iYXNzYWRvcnMgdG8gTGFjZWRhZW1vbiBhbmQgYXNrZWQgdGhlIExhY2VkYWVtb25pYW5zIHRvIGFpZCB0aGVtLCBzZXR0aW5nIGZvcnRoIHRoYXQgdGhleSBoYWQgbm90IGJlZ3VuIHdhciwgYnV0IGhhZCBnb25lIGFnYWluc3QgdGhlIExvY3JpYW5zIGluIHNlbGYtZGVmZW5jZS4KPC90cmFuc2xhdGlvbj4="
translation['3.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB0aGUgTGFjZWRhZW1vbmlhbnMgd2VyZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC9ub3RlPiBnbGFkIHRvIHNlaXplIGEgcHJldGV4dCBmb3IgdW5kZXJ0YWtpbmcgYSBjYW1wYWlnbiBhZ2FpbnN0IHRoZSBUaGViYW5zLCBmb3IgdGhleSBoYWQgbG9uZyBiZWVuIGFuZ3J5IHdpdGggdGhlbSBib3RoIG9uIGFjY291bnQgb2YgdGhlaXIgY2xhaW1pbmcgQXBvbGxvJ3MgdGVudGg8ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIG9mIHRoZSBzcG9pbHMgb2YgdGhlIFBlbG9wb25uZXNpYW4gV2FyLjwvbm90ZT4gYXQgRGVjZWxlYSBhbmQgdGhlaXIgcmVmdXNpbmcgdG8gZm9sbG93IHRoZW0gYWdhaW5zdCBQaXJhZXVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DcC4gSUkuIGl2LiAzMC48L25vdGU+IEZ1cnRoZXJtb3JlLCB0aGV5IGNoYXJnZWQgdGhlbSB3aXRoIHBlcnN1YWRpbmcgdGhlIENvcmludGhpYW5zIGxpa2V3aXNlIG5vdCB0byBqb2luIGluIHRoYXQgY2FtcGFpZ24uIEFnYWluLCB0aGV5IHJlY2FsbGVkIHRoYXQgdGhleSBoYWQgcmVmdXNlZCB0byBwZXJtaXQgQWdlc2lsYXVzIHRvIHNhY3JpZmljZSBhdCBBdWxpcyBhbmQgaGFkIGNhc3QgZnJvbSB0aGUgYWx0YXIgdGhlIHZpY3RpbXMgYWxyZWFkeSBvZmZlcmVkLCBhbmQgdGhhdCB0aGV5IGFsc28gd291bGQgbm90IGpvaW4gQWdlc2lsYXVzIGZvciB0aGUgY2FtcGFpZ24gaW4gQXNpYS4gVGhleSBhbHNvIHJlYXNvbmVkIHRoYXQgaXQgd2FzIGEgZmF2b3VyYWJsZSB0aW1lIHRvIGxlYWQgZm9ydGggYW4gYXJteSBhZ2FpbnN0IHRoZSBUaGViYW5zIGFuZCBwdXQgYSBzdG9wIHRvIHRoZWlyIGluc29sZW50IGJlaGF2aW91ciB0b3dhcmQgdGhlbTsgZm9yIG1hdHRlcnMgaW4gQXNpYSB3ZXJlIGluIGFuIGV4Y2VsbGVudCBjb25kaXRpb24gZm9yIHRoZW0sIEFnZXNpbGF1cyBiZWluZyB2aWN0b3Jpb3VzLCBhbmQgaW4gR3JlZWNlIHRoZXJlIHdhcyBubyBvdGhlciB3YXIgdG8gaGluZGVyIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['3.5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBjaXR5IG9mIHRoZSBMYWNlZGFlbW9uaWFucyBiZWluZyB0aHVzIG1pbmRlZCwgdGhlIGVwaG9ycyBjYWxsZWQgb3V0IHRoZSBiYW4gYW5kIHNlbnQgTHlzYW5kZXIgdG8gUGhvY2lzIHdpdGggb3JkZXJzIHRvIHJlcG9ydCBhdCBIYWxpYXJ0dXMsIGJyaW5naW5nIHdpdGggaGltIHRoZSBQaG9jaWFucyB0aGVtc2VsdmVzIGFuZCBhbHNvIHRoZSBPZXRhZWFucywgSGVyYWNsZW90cywgTWFsaWFucywgYW5kIEFlbmlhbmlhbnMuIEFuZCBQYXVzYW5pYXMgYWxzbywgd2hvIHdhcyB0byBoYXZlIGNoaWVmIGNvbW1hbmQsIGFncmVlZCB0byBhcHBlYXIgYXQgSGFsaWFydHVzIG9uIGFuIGFwcG9pbnRlZCBkYXksIHdpdGggdGhlIHRyb29wcyBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIHRoZSBvdGhlciBQZWxvcG9ubmVzaWFucy4gTm93IEx5c2FuZGVyIGNhcnJpZWQgb3V0IGFsbCBoaXMgb3JkZXJzIGFuZCwgYmVzaWRlcywgY2F1c2VkIHRoZSBPcmNob21lbmlhbnMgdG8gcmV2b2x0IGZyb20gdGhlIFRoZWJhbnMuCjwvdHJhbnNsYXRpb24+"
translation['3.5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBQYXVzYW5pYXMsIHdoZW4gaGlzIHNhY3JpZmljZSBhdCB0aGUgZnJvbnRpZXIgcHJvdmVkIGZhdm91cmFibGUsIHNlbnQgb3V0IGhpcyBvZmZpY2VycyB0byBtdXN0ZXIgdGhlIGFsbGllcywgYW5kIHdhaXRlZCBmb3IgdGhlIHRyb29wcyBmcm9tIHRoZSBvdXRseWluZyB0b3ducyBvZiBMYWNvbmlhLCBoZSBtZWFud2hpbGUgcmVzdGluZyBhdCBUZWdlYS4gQnV0IHdoZW4gaXQgYmVjYW1lIGNsZWFyIHRvIHRoZSBUaGViYW5zIHRoYXQgdGhlIExhY2VkYWVtb25pYW5zIHdlcmUgZ29pbmcgdG8gaW52YWRlIHRoZWlyIGxhbmQsIHRoZXkgc2VudCBhbWJhc3NhZG9ycyB0byBBdGhlbnMgd2l0aCB0aGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjwvbm90ZT4gZm9sbG93aW5nIG1lc3NhZ2U6CjxkYXRlIGF1dGhuYW1lPSItMzk1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk1Ij4zOTUgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['3.5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxNZW4gb2YgQXRoZW5zLCBhcyByZWdhcmRzIHlvdXIgY29tcGxhaW50cyBhZ2FpbnN0IHVzIGZvciBoYXZpbmcgdm90ZWQgZm9yIGhhcnNoIG1lYXN1cmVzIHRvd2FyZCB5b3UgYXQgdGhlIGNvbmNsdXNpb24gb2YgdGhlIHdhciw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q3AuIElJLiBpaS4gMTkuPC9ub3RlPiB5b3VyIGNvbXBsYWludHMgYXJlIG5vdCBqdXN0aWZpZWQ7IGZvciBpdCB3YXMgbm90IHRoZSBzdGF0ZSB3aGljaCB2b3RlZCBmb3IgdGhvc2UgbWVhc3VyZXMsIGJ1dCBvbmx5IHRoZSBvbmUgaW5kaXZpZHVhbCB3aG8gcHJvcG9zZWQgdGhlbSwgYSBtYW4gd2hvIGNoYW5jZWQgYXQgdGhhdCB0aW1lIHRvIGhhdmUgYSBzZWF0IGluIHRoZSBhc3NlbWJseSBvZiB0aGUgYWxsaWVzLiBCdXQgd2hlbiB0aGUgTGFjZWRhZW1vbmlhbnMgc3VtbW9uZWQgdXMgdG8gdGhlIGF0dGFjayB1cG9uIFBpcmFldXMsIHRoZW4gdGhlIHdob2xlIHN0YXRlIHZvdGVkIG5vdCB0byBqb2luIHRoZW0gaW4gdGhlIGNhbXBhaWduLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DcC4gSUkuIGl2LiAzMC48L25vdGU+IFRoZXJlZm9yZSwgc2luY2UgaXQgaXMgY2hpZWZseSBvbiB5b3VyIGFjY291bnQgdGhhdCB0aGUgTGFjZWRhZW1vbmlhbnMgYXJlIGFuZ3J5IHdpdGggdXMsIHdlIHRoaW5rIGl0IGlzIGZhaXIgdGhhdCB5b3Ugc2hvdWxkIGFpZCBvdXIgc3RhdGUuCjwvdHJhbnNsYXRpb24+"
translation['3.5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3ZSBjb25zaWRlciBpdCBpbiBhIGZhciBncmVhdGVyIGRlZ3JlZSBpbmN1bWJlbnQgdXBvbiBhbGwgdGhvc2UgYW1vbmcgeW91IHdobyBiZWxvbmdlZCB0byB0aGUgY2l0eTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DcC4gSUkuIGl2LiAxMSwgMjQsIGV0Yy48L25vdGU+IHBhcnR5IHRoYXQgeW91IHNob3VsZCB6ZWFsb3VzbHkgdGFrZSB0aGUgZmllbGQgYWdhaW5zdCB0aGUgTGFjZWRhZW1vbmlhbnMuIEZvciB0aGUgTGFjZWRhZW1vbmlhbnMsIGFmdGVyIGVzdGFibGlzaGluZyB5b3UgYXMgYW4gb2xpZ2FyY2h5IGFuZCBtYWtpbmcgeW91IG9iamVjdHMgb2YgaGF0cmVkIHRvIHRoZSBjb21tb25zLCBjYW1lIHdpdGggYSBncmVhdCBmb3JjZSwgb3N0ZW5zaWJseSBhcyB5b3VyIGFsbGllcywgYW5kIGRlbGl2ZXJlZCB5b3Ugb3ZlciB0byB0aGUgZGVtb2NyYXRzLiBDb25zZXF1ZW50bHksIGluIHNvIGZhciBhcyBpdCBkZXBlbmRlZCB1cG9uIHRoZW0sIHlvdSB3b3VsZCBjZXJ0YWlubHkgaGF2ZSBwZXJpc2hlZCwgYnV0IHRoZSBjb21tb25zIGhlcmUgc2F2ZWQgeW91Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgbWVuIG9mIEF0aGVucywgYWx0aG91Z2ggd2UgYWxsIHVuZGVyc3RhbmQgdGhhdCB5b3Ugd291bGQgbGlrZSB0byByZWNvdmVyIHRoZSBkb21pbmlvbiB3aGljaCB5b3UgZm9ybWVybHkgcG9zc2Vzc2VkLCB3ZSBhc2sgaW4gd2hhdCB3YXkgdGhpcyBpcyBtb3JlIGxpa2VseSB0byBjb21lIHRvIHBhc3MgdGhhbiBieSB5b3VyIGFpZGluZyB0aG9zZSB3aG8gYXJlIHdyb25nZWQgYnkgdGhlIExhY2VkYWVtb25pYW5zPyBBbmQgZG8gbm90IGJlIGFmcmFpZCBiZWNhdXNlIHRoZXkgcnVsZSBvdmVyIG1hbnksIGJ1dCBtdWNoIHJhdGhlciBiZSBvZiBnb29kIGNvdXJhZ2Ugb24gdGhhdCBhY2NvdW50LCBrZWVwaW5nIGluIG1pbmQgeW91ciBvd24gY2FzZSwgdGhhdCB3aGVuIHRoZSBzdWJqZWN0cyBvdmVyIHdob20geW91IHJ1bGVkIHdlcmUgdGhlIG1vc3QgbnVtZXJvdXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk1Ij4zOTUgQi5DLjwvZGF0ZT48L25vdGU+IHRoZW4geW91IGhhZCB0aGUgbW9zdCBlbmVtaWVzLiBUbyBiZSBzdXJlIHRoZXkgY29uY2VhbGVkIHRoZWlyIGVubWl0eSB0byB5b3Ugc28gbG9uZyBhcyB0aGV5IGhhZCBubyBvbmUgdG8gd2hvbSB0byByZXZvbHQsIGJ1dCBhcyBzb29uIGFzIHRoZSBMYWNlZGFlbW9uaWFucyBvZmZlcmVkIHRoZW1zZWx2ZXMgYXMgbGVhZGVycywgdGhlbiB0aGV5IHNob3dlZCB3aGF0IHRoZWlyIGZlZWxpbmdzIHdlcmUgdG93YXJkIHlvdS4KPGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5FdmVuIHNvIG5vdywgaWYgd2UgYW5kIHlvdSBhcmUgZm91bmQgaW4gYXJtcyB0b2dldGhlciBhZ2FpbnN0IHRoZSBMYWNlZGFlbW9uaWFucywgYmUgd2VsbCBhc3N1cmVkIHRoYXQgdGhvc2Ugd2hvIGhhdGUgdGhlbSB3aWxsIGFwcGVhciBpbiBmdWxsIG51bWJlcnMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoYXQgd2Ugc3BlYWsgdHJ1dGggeW91IHdpbGwgc2VlIGF0IG9uY2UgaWYgeW91IGNvbnNpZGVyIHRoZSBtYXR0ZXIuIEZvciB3aG8gaXMgbm93IGxlZnQgdGhhdCBpcyBmcmllbmRseSB0byB0aGVtPyBIYXZlIG5vdCB0aGUgQXJnaXZlcyBiZWVuIGhvc3RpbGUgdG8gdGhlbSBmcm9tIGFsbCB0aW1lPwo8L3RyYW5zbGF0aW9uPg=="
translation['3.5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm93IHRoZSBFbGVhbnMsIHdob20gdGhleSBoYXZlIHJvYmJlZCBvZiBtdWNoIHRlcnJpdG9yeSBhbmQgbWFueSBjaXRpZXMsIGhhdmUgYmVlbiBhZGRlZCB0byB0aGUgbnVtYmVyIG9mIHRoZWlyIGVuZW1pZXMuIEFzIGZvciB0aGUgQ29yaW50aGlhbnMsIEFyY2FkaWFucywgYW5kIEFjaGFlYW5zLCB3aGF0IHNoYWxsIHdlIHNheSBvZiB0aGVtLCB3aG8gaW4gdGhlIHdhciBhZ2FpbnN0IHlvdSwgYXQgdGhlIGVhcm5lc3QgZW50cmVhdHkgb2YgdGhlIExhY2VkYWVtb25pYW5zLCBib3JlIGEgc2hhcmUgb2YgYWxsIGhhcmRzaGlwcyBhbmQgcGVyaWxzIGFuZCBleHBlbnNlczsgYnV0IHdoZW4gdGhlIExhY2VkYWVtb25pYW5zIGhhZCBhY2NvbXBsaXNoZWQgd2hhdCB0aGV5IGRlc2lyZWQsIHdoYXQgZG9taW5pb24gb3IgaG9ub3VyIG9yIHdoYXQgY2FwdHVyZWQgdHJlYXN1cmUgZGlkIHRoZXkgZXZlciBzaGFyZSB3aXRoIHRoZW0/IE5heSwgaXQgaXMgdGhlaXIgSGVsb3RzIHdob20gdGhleSBkZWVtIGl0IHByb3BlciB0byBhcHBvaW50IGFzIGdvdmVybm9ycywgd2hpbGUgdG93YXJkIHRoZWlyIGFsbGllcywgd2hvIGFyZSBmcmVlIG1lbiwgdGhleSBoYXZlIGJlaGF2ZWQgdGhlbXNlbHZlcyBsaWtlIG1hc3RlcnMgc2luY2UgdGhleSBoYXZlIGFjaGlldmVkIHN1Y2Nlc3MuCjwvdHJhbnNsYXRpb24+"
translation['3.5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgaXQgaXMgcGxhaW4gdGhhdCB0aGV5IGhhdmUgZGVjZWl2ZWQgaW4gbGlrZSBtYW5uZXIgdGhlIHBlb3BsZXMgd2hvbSB0aGV5IHdvbiBhd2F5IGZyb20geW91OyBmb3IgaW5zdGVhZCBvZiBmcmVlZG9tIHRoZXkgaGF2ZSBnaXZlbiB0aGVtIGEgZG91YmxlIHNlcnZpdHVkZeKAlHRoZXkgYXJlIHVuZGVyIHRoZSB0eXJhbnQgcnVsZSBib3RoIG9mIHRoZSBnb3Zlcm5vcnMgYW5kIG9mIHRoZSBkZWNhcmNoaWVzIHdoaWNoIEx5c2FuZGVyIGVzdGFibGlzaGVkIGluIGVhY2ggY2l0eS4gVGFrZSB0aGUgS2luZyBvZiBBc2lhIGFsc28g4oCUYWx0aG91Z2ggaGlzIGNvbnRyaWJ1dGlvbnMgaGVscGVkIHRoZW0gbW9zdCB0byB3aW4gdGhlIHZpY3Rvcnkgb3ZlciB5b3UsIHdoYXQgYmV0dGVyIHRyZWF0bWVudCBpcyBoZSBub3cgcmVjZWl2aW5nIHRoYW4gaWYgaGUgaGFkIGpvaW5lZCB3aXRoIHlvdTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC9ub3RlPiBhbmQgc3ViZHVlZCB0aGVtPwo8ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['3.5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Ib3csIHRoZW4sIGNhbiBpdCBiZSBkb3VidGZ1bCB0aGF0IGlmIHlvdSBpbiB5b3VyIHR1cm4gb2ZmZXIgeW91cnNlbHZlcyBhcyBsZWFkZXJzIG9mIHRob3NlIHdobyBhcmUgc28gbWFuaWZlc3RseSB3cm9uZ2VkLCB5b3Ugd2lsbCBub3cgYmVjb21lIGJ5IGZhciB0aGUgZ3JlYXRlc3Qgb2YgYWxsIHRoZSBzdGF0ZXMgdGhhdCBoYXZlIGV2ZXIgYmVlbj8gRm9yIGF0IHRoZSB0aW1lIHdoZW4geW91IGhlbGQgZG9taW5pb24geW91IHdlcmUgdGhlIGxlYWRlcnMsIHlvdSByZWNhbGwsIG9mIHRob3NlIG9ubHkgd2hvIGR3ZWx0IG9uIHRoZSBzZWE7IGJ1dCBub3cgeW91IHdvdWxkIGJlY29tZSB0aGUgbGVhZGVycyBvZiBhbGwgYWxpa2XigJRvZiBvdXJzZWx2ZXMsIG9mIHRoZSBQZWxvcG9ubmVzaWFucywgb2YgdGhvc2Ugd2hvbSB5b3UgZm9ybWVybHkgcnVsZWQsIGFuZCBvZiB0aGUgS2luZyBoaW1zZWxmIHdpdGggaGlzIHZhc3QgcG93ZXIuIEFuZCB3ZSBjZXJ0YWlubHkgd2VyZSB2YWx1YWJsZSBhbGxpZXMgdG8gdGhlIExhY2VkYWVtb25pYW5zLCBhcyB5b3Ugc28gd2VsbCBrbm93OyBidXQgbm93IHdlIGNhbiBiZSBleHBlY3RlZCB0byBzdXBwb3J0IHlvdSBhbHRvZ2V0aGVyIG1vcmUgc3RvdXRseSB0aGFuIHdlIHN1cHBvcnRlZCB0aGUgTGFjZWRhZW1vbmlhbnMgdGhlbjsgZm9yIGl0IGlzIGJ5IG5vIG1lYW5zIG9uIGJlaGFsZiBvZiBpc2xhbmRlcnMgb3IgU3lyYWN1c2Fucywgb3IgaW4gZmFjdCBvZiBhbnkgYWxpZW4gcGVvcGxlLCB0aGF0IHdlIHNoYWxsIGJlIGxlbmRpbmcgb3VyIGFpZCBhcyB3ZSB3ZXJlIHRoZW4sIGJ1dCBvbiBiZWhhbGYgb2Ygb3VyIG93biBpbmp1cmVkIHNlbHZlcy4KPC90cmFuc2xhdGlvbj4="
translation['3.5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhpcyBhbHNvIGlzIHRvIGJlIHdlbGwgdW5kZXJzdG9vZCwgdGhhdCB0aGUgc2VsZmlzaGx5IGFjcXVpcmVkIGRvbWluaW9uIG9mIHRoZSBMYWNlZGFlbW9uaWFucyBpcyBmYXIgZWFzaWVyIHRvIGRlc3Ryb3kgdGhhbiB0aGUgZW1waXJlIHdoaWNoIHdhcyBvbmNlIHlvdXJzLiBGb3IgeW91IGhhZCBhIG5hdnkgYW5kIHJ1bGVkIG92ZXIgbWVuIHdobyBoYWQgbm9uZSwgd2hpbGUgdGhleSwgYmVpbmcgZmV3LCBhcnJvZ2F0ZSB0byB0aGVtc2VsdmVzIGRvbWluaW9uIG92ZXIgbWVuIHdobyBhcmUgbWFueSB0aW1lcyB0aGVpciBudW1iZXIgYW5kIGFyZSBmdWxseSBhcyB3ZWxsIGFybWVkLiBUaGlzLCB0aGVuLCBpcyBvdXIgcHJvcG9zYWw7IGJ1dCBiZSB3ZWxsIGFzc3VyZWQsIG1lbiBvZiBBdGhlbnMsIHRoYXQgd2UgYmVsaWV2ZSB3ZSBhcmUgaW52aXRpbmcgeW91IHRvIGJlbmVmaXRzIGZhciBncmVhdGVyIGZvciB5b3VyIHN0YXRlIHRoYW4gZm9yIG91ciBvd24u4oCdCjwvdHJhbnNsYXRpb24+"
translation['3.5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2l0aCB0aGVzZSB3b3JkcyBoZSBjZWFzZWQgc3BlYWtpbmcuIEJ1dCBhcyBmb3IgdGhlIEF0aGVuaWFucywgdmVyeSBtYW55IHNwb2tlIGluIHN1cHBvcnQgb2YgaGltIGFuZCB0aGV5IHZvdGVkIHVuYW5pbW91c2x5IHRvIGFpZCB0aGUgVGhlYmFucy4gQW5kIFRocmFzeWJ1bHVzLCBhZnRlciBnaXZpbmcgdGhlIGFtYmFzc2Fkb3JzIHRoZSBkZWNyZWUgZm9yIGFuIGFuc3dlciwgcG9pbnRlZCBvdXQgYWxzbyB0aGF0LCBhbHRob3VnaCBQaXJhZXVzIHdhcyB3aXRob3V0IHdhbGxzLCB0aGV5IHdvdWxkIG5ldmVydGhlbGVzcyBicmF2ZSB0aGUgZGFuZ2VyIG9mIHJlcGF5aW5nIHRvIHRoZSBUaGViYW5zIGEgZ3JlYXRlciBmYXZvdXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjwvbm90ZT4gdGhhbiB0aGV5IGhhZCByZWNlaXZlZC4g4oCcRm9yIHdoZXJlYXMgeW91LOKAnSBoZSBzYWlkLCDigJxkaWQgbm90IGpvaW4gaW4gdGhlIGNhbXBhaWduIGFnYWluc3QgdXMsIHdlIGFyZSBnb2luZyB0byBmaWdodCBhbG9uZyB3aXRoIHlvdSBhZ2FpbnN0IHRoZW0sIGluIGNhc2UgdGhleSBtYXJjaCB1cG9uIHlvdS7igJ0KPGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['3.5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGUgVGhlYmFucyB3ZW50IGF3YXkgYW5kIG1hZGUgcHJlcGFyYXRpb25zIGZvciBkZWZlbmRpbmcgdGhlbXNlbHZlcywgYW5kIHRoZSBBdGhlbmlhbnMgZm9yIGFpZGluZyB0aGVtLiBBbmQgaW4gZmFjdCB0aGUgTGFjZWRhZW1vbmlhbnMgZGlkIG5vdCBsb25nZXIgZGVsYXksIGJ1dCBQYXVzYW5pYXMgdGhlIGtpbmcgbWFyY2hlZCBpbnRvIEJvZW90aWEgd2l0aCB0aGUgdHJvb3BzIGZyb20gaG9tZSBhbmQgdGhvc2UgZnJvbSBQZWxvcG9ubmVzdXMgZXhjZXB0IHRoZSBDb3JpbnRoaWFucywgd2hvIHJlZnVzZWQgdG8gYWNjb21wYW55IHRoZW0uIEFuZCBMeXNhbmRlciwgYXQgdGhlIGhlYWQgb2YgdGhlIGFybXkgZnJvbSBQaG9jaXMsIE9yY2hvbWVudXMsIGFuZCB0aGUgcGxhY2VzIGluIHRoYXQgcmVnaW9uLCBhcnJpdmVkIGF0IEhhbGlhcnR1cyBiZWZvcmUgUGF1c2FuaWFzLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.5.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5IYXZpbmcgYXJyaXZlZCwgaGUgZGlkIG5vdCBrZWVwIHF1aWV0IGFuZCB3YWl0IGZvciB0aGUgYXJteSBmcm9tIExhY2VkYWVtb24sIGJ1dCB3ZW50IHVwIHRvIHRoZSB3YWxsIG9mIHRoZSBIYWxpYXJ0aWFucyB3aXRoIHRoZSB0cm9vcHMgd2hpY2ggaGUgaGFkLiBBbmQgYXQgZmlyc3QgaGUgdHJpZWQgdG8gcGVyc3VhZGUgdGhlbSB0byByZXZvbHQgZnJvbSB0aGUgVGhlYmFucyBhbmQgYmVjb21lIGluZGVwZW5kZW50OyBidXQgd2hlbiBzb21lIG9mIHRoZSBUaGViYW5zLCB3aG8gd2VyZSB3aXRoaW4gdGhlIHdhbGwsIHByZXZlbnRlZCB0aGVtIGZyb20gZG9pbmcgc28sIGhlIG1hZGUgYW4gYXR0YWNrIHVwb24gdGhlIHdhbGwuCjwvdHJhbnNsYXRpb24+"
translation['3.5.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgb24gaGVhcmluZyBvZiB0aGlzIHRoZSBUaGViYW5zIGNhbWUgb24gdGhlIHJ1biB0byB0aGUgcmVzY3VlLCBib3RoIGhvcGxpdGVzIGFuZCBjYXZhbHJ5LiBXaGV0aGVyIGl0IHdhcyB0aGF0IHRoZXkgZmVsbCB1cG9uIEx5c2FuZGVyIHVuYXdhcmVzLCBvciB0aGF0IGhlIHNhdyB0aGVtIGNvbWluZyBhbmQgbmV2ZXJ0aGVsZXNzIHN0b29kIGhpcyBncm91bmQgaW4gdGhlIGJlbGllZiB0aGF0IGhlIHdvdWxkIGJlIHZpY3RvcmlvdXMsIGlzIHVuY2VydGFpbjsgYnV0IHRoaXMgYXQgYW55IHJhdGUgaXMgY2xlYXIsIHRoYXQgdGhlIGJhdHRsZSB0b29rIHBsYWNlIGJlc2lkZSB0aGUgd2FsbDsgYW5kIGEgdHJvcGh5IHN0YW5kcyBhdCB0aGUgZ2F0ZXMgb2YgdGhlIEhhbGlhcnRpYW5zLiBOb3cgd2hlbiBMeXNhbmRlciBoYWQgYmVlbiBraWxsZWQgYW5kIGhpcyB0cm9vcHMgd2VyZSBmbGVlaW5nIHRvIHRoZSBtb3VudGFpbiwgdGhlIFRoZWJhbnMgcHVyc3VlZCBzdG91dGx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.5.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGV5IGhhZCByZWFjaGVkIHRoZSBoZWlnaHRzIGluIHRoZWlyIHB1cnN1aXQgYW5kIGNhbWUgdXBvbiByb3VnaCBjb3VudHJ5IGFuZCBuYXJyb3cgd2F5cywgdGhlIGhvcGxpdGVzIG9mIHRoZSBlbmVteSB0dXJuZWQgYWJvdXQgYW5kIHRocmV3IGphdmVsaW5zIGFuZCBvdGhlciBtaXNzaWxlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC9ub3RlPiB1cG9uIHRoZW0uIEFuZCB3aGVuIHR3byBvciB0aHJlZSBvZiB0aGVtIHdobyB3ZXJlIGluIHRoZSB2YW4gaGFkIGJlZW4gc3RydWNrIGRvd24sIGFuZCB0aGUgZW5lbXkgYmVnYW4gdG8gcm9sbCBzdG9uZXMgZG93biB0aGUgaGlsbCB1cG9uIHRoZSByZXN0IGFuZCB0byBhdHRhY2sgdGhlbSB3aXRoIGdyZWF0IHNwaXJpdCwgdGhlIFRoZWJhbnMgd2VyZSBkcml2ZW4gaW4gZmxpZ2h0IGZyb20gdGhlIHNsb3BlLCBhbmQgbW9yZSB0aGFuIHR3byBodW5kcmVkIG9mIHRoZW0gd2VyZSBraWxsZWQuCjxkYXRlIGF1dGhuYW1lPSItMzk1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk1Ij4zOTUgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['3.5.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhpcyBkYXksIHRoZXJlZm9yZSwgdGhlIFRoZWJhbnMgd2VyZSBkZXNwb25kZW50LCB0aGlua2luZyB0aGF0IHRoZXkgaGFkIHN1ZmZlcmVkIGxvc3NlcyBubyBsZXNzIHNldmVyZSB0aGFuIHRob3NlIHRoZXkgaGFkIGluZmxpY3RlZDsgb24gdGhlIGZvbGxvd2luZyBkYXksIGhvd2V2ZXIsIHdoZW4gdGhleSBsZWFybmVkIHRoYXQgdGhlIFBob2NpYW5zIGFuZCB0aGUgcmVzdCBoYWQgYWxsIGdvbmUgYXdheSBpbiB0aGUgbmlnaHQgdG8gdGhlaXIgc2V2ZXJhbCBob21lcywgdGhlbiB0aGV5IGJlZ2FuIHRvIGJlIG1vcmUgZWxhdGVkIG92ZXIgdGhlaXIgZXhwbG9pdC4gQnV0IHdoZW4sIG9uIHRoZSBvdGhlciBoYW5kLCBQYXVzYW5pYXMgYXBwZWFyZWQgd2l0aCB0aGUgYXJteSBmcm9tIExhY2VkYWVtb24sIHRoZXkgYWdhaW4gdGhvdWdodCB0aGF0IHRoZXkgd2VyZSBpbiBncmVhdCBkYW5nZXIsIGFuZCwgYnkgYWxsIGFjY291bnRzLCB0aGVyZSB3YXMgZGVlcCBzaWxlbmNlIGFuZCBkZXNwb25kZW5jeSBpbiB0aGVpciBhcm15Lgo8L3RyYW5zbGF0aW9uPg=="
translation['3.5.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBob3dldmVyLCBvbiB0aGUgbmV4dCBkYXkgdGhlIEF0aGVuaWFucyBhcnJpdmVkIGFuZCBmb3JtZWQgaW4gbGluZSBvZiBiYXR0bGUgd2l0aCB0aGVtLCB3aGlsZSBQYXVzYW5pYXMgZGlkIG5vdCBhZHZhbmNlIGFnYWluc3QgdGhlbSBub3Igb2ZmZXIgYmF0dGxlLCB0aGVuIHRoZSBlbGF0aW9uIG9mIHRoZSBUaGViYW5zIGluY3JlYXNlZCBncmVhdGx5OyBhcyBmb3IgUGF1c2FuaWFzLCBoZSBjYWxsZWQgdG9nZXRoZXIgdGhlIGNvbW1hbmRlcnMgb2YgcmVnaW1lbnRzIGFuZCBvZiBmaWZ0aWVzLCBhbmQgdG9vayBjb3Vuc2VsIHdpdGggdGhlbSBhcyB0byB3aGV0aGVyIGhlIHNob3VsZCBqb2luIGJhdHRsZSBvciByZWNvdmVyIGJ5IG1lYW5zIG9mIGEgdHJ1Y2UgdGhlIGJvZGllcyBvZiBMeXNhbmRlciBhbmQgdGhvc2Ugd2hvIGZlbGwgd2l0aCBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['3.5.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSBQYXVzYW5pYXMgYW5kIHRoZSBvdGhlciBMYWNlZGFlbW9uaWFucyB3aG8gd2VyZSBpbiBhdXRob3JpdHksIGNvbnNpZGVyaW5nIHRoYXQgTHlzYW5kZXIgd2FzIGRlYWQgYW5kIHRoYXQgdGhlIGFybXkgdW5kZXIgaGlzIGNvbW1hbmQgaGFkIGJlZW4gZGVmZWF0ZWQgYW5kIHdhcyBnb25lLCB3aGlsZSB0aGUgQ29yaW50aGlhbnMgaGFkIGFsdG9nZXRoZXIgcmVmdXNlZCB0byBhY2NvbXBhbnkgdGhlbSBhbmQgdGhvc2Ugd2hvIGhhZCBjb21lPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gdGhlIG90aGVyIFBlbG9wb25uZXNpYW5zIChjcC4gMTcgYWJvdmUpLjwvbm90ZT4gd2VyZSBub3Qgc2VydmluZyB3aXRoIGFueSBzcGlyaXQ7IGNvbnNpZGVyaW5nIGFsc28gdGhlIG1hdHRlciBvZiBob3JzZW1lbiwgdGhhdCB0aGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjwvbm90ZT4gZW5lbXkncyB3ZXJlIG51bWVyb3VzIHdoaWxlIHRoZWlyIG93biB3ZXJlIGZldywgYW5kLCBtb3N0IGltcG9ydGFudCBvZiBhbGwsIHRoYXQgdGhlIGJvZGllcyBsYXkgY2xvc2UgdXAgdG8gdGhlIHdhbGwsIHNvIHRoYXQgZXZlbiBpbiBjYXNlIG9mIHZpY3RvcnkgaXQgd291bGQgbm90IGJlIGVhc3kgdG8gcmVjb3ZlciB0aGVtIG9uIGFjY291bnQgb2YgdGhlIG1lbiB1cG9uIHRoZSB0b3dlcnPigJRmb3IgYWxsIHRoZXNlIHJlYXNvbnMgdGhleSBkZWNpZGVkIHRoYXQgaXQgd2FzIGJlc3QgdG8gcmVjb3ZlciB0aGUgYm9kaWVzIHVuZGVyIGEgdHJ1Y2UuCjxkYXRlIGF1dGhuYW1lPSItMzk1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk1Ij4zOTUgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['3.5.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgVGhlYmFucywgaG93ZXZlciwgc2FpZCB0aGF0IHRoZXkgd291bGQgbm90IGdpdmUgdXAgdGhlIGRlYWQgZXhjZXB0IG9uIGNvbmRpdGlvbiB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyBzaG91bGQgZGVwYXJ0IGZyb20gdGhlaXIgY291bnRyeS4gVGhlIExhY2VkYWVtb25pYW5zIHdlbGNvbWVkIHRoZXNlIGNvbmRpdGlvbnMsIGFuZCB3ZXJlIHJlYWR5LCBhZnRlciB0YWtpbmcgdXAgdGhlaXIgZGVhZCwgdG8gZGVwYXJ0IGZyb20gQm9lb3RpYS4gV2hlbiB0aGlzIGhhZCBiZWVuIGRvbmUsIHRoZSBMYWNlZGFlbW9uaWFucyBtYXJjaGVkIG9mZiBkZXNwb25kZW50bHksIHdoaWxlIHRoZSBUaGViYW5zIGJlaGF2ZWQgbW9zdCBpbnNvbGVudGx54oCUaW4gY2FzZSBhIG1hbiB0cmVzcGFzc2VkIG5ldmVyIHNvIGxpdHRsZSB1cG9uIGFueW9uZSdzIGxhbmRzLCBjaGFzaW5nIGhpbSBiYWNrIHdpdGggYmxvd3MgaW50byB0aGUgcm9hZHMuIFRodXMgaXQgd2FzIHRoYXQgdGhpcyBjYW1wYWlnbiBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgY2FtZSB0byBpdHMgZW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['3.5.25'] = ""
translation['4.1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgd2hlbiBBZ2VzaWxhdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q3AuIElJSS4gaXYuIDI5Ljwvbm90ZT4gYXJyaXZlZCwgYXQgdGhlIGJlZ2lubmluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC9ub3RlPiBvZiBhdXR1bW4sIGluIFBoYXJuYWJhenVzJyBwcm92aW5jZSBvZiBQaHJ5Z2lhLCBoZSBsYWlkIHRoZSBsYW5kIHdhc3RlIHdpdGggZmlyZSBhbmQgc3dvcmQgYW5kIGdhaW5lZCBwb3NzZXNzaW9uIG9mIGNpdGllcywgc29tZSBieSBmb3JjZSwgb3RoZXJzIGJ5IHRoZWlyIHZvbHVudGFyeSBzdXJyZW5kZXIuCjxkYXRlIGF1dGhuYW1lPSItMzk1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk1Ij4zOTUgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIFNwaXRocmlkYXRlcyBzYWlkIHRoYXQgaWYgaGUgd291bGQgY29tZSB0byBQYXBobGFnb25pYSB3aXRoIGhpbSwgaGUgd291bGQgYnJpbmcgdGhlIGtpbmcgb2YgdGhlIFBhcGhsYWdvbmlhbnMgdG8gYSBjb25mZXJlbmNlIGFuZCBtYWtlIGhpbSBhbiBhbGx5LCBBZ2VzaWxhdXMgZWFnZXJseSB1bmRlcnRvb2sgdGhlIGpvdXJuZXksIHNpbmNlIHRoaXMgd2FzIGEgdGhpbmcgaGUgaGFkIGxvbmcgZGVzaXJlZOKAlHRvIHdpbiBzb21lIG5hdGlvbiBhd2F5IGZyb20gdGhlIFBlcnNpYW4gS2luZy4KPC90cmFuc2xhdGlvbj4="
translation['4.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5VcG9uIGhpcyBhcnJpdmluZyBpbiBQYXBobGFnb25pYSwgT3R5cyBjYW1lIGFuZCBjb25jbHVkZWQgYW4gYWxsaWFuY2U7IGZvciBoZSBoYWQgYmVlbiBzdW1tb25lZCBieSB0aGUgUGVyc2lhbiBLaW5nIGFuZCBoYWQgcmVmdXNlZCB0byBnbyB1cCB0byBoaW0uIEhlIGFsc28sIGJ5IHRoZSBwZXJzdWFzaW9uIG9mIFNwaXRocmlkYXRlcywgbGVmdCBiZWhpbmQgZm9yIEFnZXNpbGF1cyBhIHRob3VzYW5kIGhvcnNlbWVuIGFuZCB0d28gdGhvdXNhbmQgcGVsdGFzdHMuCjwvdHJhbnNsYXRpb24+"
translation['4.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBBZ2VzaWxhdXMsIGZlZWxpbmcgZ3JhdGVmdWwgdG8gU3BpdGhyaWRhdGVzIGZvciB0aGVzZSB0aGluZ3MsIHNhaWQgdG8gaGltOiDigJxUZWxsIG1lLCBTcGl0aHJpZGF0ZXMsIHdvdWxkIHlvdSBub3QgZ2l2ZSB5b3VyIGRhdWd0aGVyIHRvIE90eXM/4oCdIOKAnEZhciBtb3JlIHdpbGxpbmdseSzigJ0gc2FpZCBoZSwg4oCcdGhhbiBoZSB3b3VsZCBhY2NlcHQgaGVyLCB0aGUgZGF1Z2h0ZXIgb2YgYW4gZXhpbGUsIHdoaWxlIGhlIGlzIGxvcmQgb2YgYSBncmVhdCBsYW5kIGFuZCBwb3dlci7igJ0gU28gYXQgdGhhdCB0aW1lIG5vdGhpbmcgbW9yZSB3YXMgc2FpZCBhYm91dCB0aGUgbWFycmlhZ2UuCjwvdHJhbnNsYXRpb24+"
translation['4.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGVuIE90eXMgd2FzIGFib3V0IHRvIGRlcGFydCwgaGUgY2FtZSB0byBBZ2VzaWxhdXMgdG8gYmlkIGhpbSBmYXJld2VsbC4gVGhlbiBBZ2VzaWxhdXMgYmVnYW4gY29udmVyc2F0aW9uIHdpdGggaGltIGluIHRoZSBwcmVzZW5jZSBvZiB0aGUgdGhpcnR5IFNwYXJ0aWF0YWUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkNwLiBJSUkuIGl2LiAyMC48L25vdGU+IGFmdGVyIGFza2luZyBTcGl0aHJpZGF0ZXMgdG8gd2l0aGRyYXcuCjwvdHJhbnNsYXRpb24+"
translation['4.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPuKAnFRlbGwgbWUs4oCdIGhlIHNhaWQsIOKAnE90eXMsIHRvIHdoYXQgc29ydCBvZiBhIGZhbWlseTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC9ub3RlPiBkb2VzIFNwaXRocmlkYXRlcyBiZWxvbmc/4oCdIE90eXMgcmVwbGllZCB0aGF0IGhlIHdhcyBpbmZlcmlvciBpbiByYW5rIHRvIG5vIG9uZSBvZiBhbGwgdGhlIFBlcnNpYW5zLiDigJxBbmQgaGF2ZSB5b3Ugbm90aWNlZCBoaXMgc29uLOKAnSBzYWlkIEFnZXNpbGF1cywg4oCcaG93IGhhbmRzb21lIGhlIGlzP+KAnSDigJxUbyBiZSBzdXJlIEkgaGF2ZTsgZm9yIEkgZGluZWQgd2l0aCBoaW0gbGFzdCBldmVuaW5nLuKAnSDigJxUaGV5IHNheSBoaXMgZGF1Z2h0ZXIgaXMgaGFuZHNvbWVyIHRoYW4gdGhlIHNvbi7igJ0KPGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPuKAnFllcywgYnkgWmV1cyzigJ0gc2FpZCBPdHlzLCDigJxzaGUgY2VydGFpbmx5IGlzIGJlYXV0aWZ1bC7igJ0g4oCcQW5kIEks4oCdIHNhaWQgaGUsIOKAnHNpbmNlIHlvdSBoYXZlIGJlY29tZSBhIGZyaWVuZCBvZiBvdXJzLCBzaG91bGQgbGlrZSB0byBhZHZpc2UgeW91IHRvIHRha2UgdGhlIGdpcmwgYXMgeW91ciB3aWZlLCBmb3Igc2hlIGlzIHZlcnkgYmVhdXRpZnVs4oCUYW5kIHdoYXQgaXMgbW9yZSBwbGVhc2FudCB0byBhIGh1c2JhbmQgdGhhbiB0aGF0P+KAlGFuZCB0aGUgZGF1Z2h0ZXIgb2YgYSBmYXRoZXIgdmVyeSB3ZWxsIGJvcm4gYW5kIHBvc3Nlc3NlZCBvZiBzbyBncmVhdCBwb3dlciwgYSBtYW4gd2hvLCB3aGVuIHdyb25nZWQgYnkgUGhhcm5hYmF6dXMsIHRha2VzIHN1Y2ggdmVuZ2VhbmNlIHVwb24gaGltIHRoYXQgaGUgaGFzLCBhcyB5b3Ugc2VlLCBtYWRlIGhpbSBhbiBleGlsZSBmcm9tIGhpcyB3aG9sZSBjb3VudHJ5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJlIHdlbGwgYXNzdXJlZCwgbW9yZW92ZXIs4oCdIGhlIHNhaWQsIOKAnHRoYXQgZXZlbiBhcyBoZSBpcyBhYmxlIHRvIHRha2UgdmVuZ2VhbmNlIHVwb24gUGhhcm5hYmF6dXMsIGFuIGVuZW15LCBzbyBoZSB3b3VsZCBhbHNvIGJlIGFibGUgdG8gYmVuZWZpdCBhIGZyaWVuZCBJIGFzayB5b3UgYWxzbyB0byB0YWtlIGludG8gY29uc2lkZXJhdGlvbiB0aGF0LCBpZiB0aGlzIHBsYW4gc2hvdWxkIGJlIGNhcnJpZWQgb3V0LCBpdCB3b3VsZCBub3QgYmUgaGUgYWxvbmUgdGhhdCB3b3VsZCBiZSBhIGNvbm5leGlvbiBvZiB5b3VycywgYnV0IEkgdG9vIGFuZCB0aGUgcmVzdCBvZiB0aGUgTGFjZWRhZW1vbmlhbnMsIGFuZCwgc2luY2Ugd2UgYXJlIHRoZSBsZWFkZXJzIG9mIEdyZWVjZSwgdGhlIHJlc3Qgb2YgR3JlZWNlIGFzIHdlbGwuCjwvdHJhbnNsYXRpb24+"
translation['4.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBmdXJ0aGVyLCBpZiB5b3Ugc2hvdWxkIGRvIHRoaXMsIHdobyBjb3VsZCBwb3NzaWJseSBoYXZlIGEgbW9yZSBtYWduaWZpY2VudCB3ZWRkaW5nIHRoYW4geW91PyBGb3Igd2hhdCBicmlkZSB3YXMgZXZlciBlc2NvcnRlZCBieSBzbyBtYW55IGhvcnNlbWVuIGFuZCBwZWx0YXN0cyBhbmQgaG9wbGl0ZXMgYXMgd291bGQgZXNjb3J0IHlvdXIgd2lmZSB0byB5b3VyIGhvdXNlP+KAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgT3R5cyBhc2tlZCwg4oCcQnV0IGlzIHRoaXMs4oCdIHNhaWQgaGUsIOKAnHdoaWNoIHlvdSBhcmUgcHJvcG9zaW5nLCBBZ2VzaWxhdXMsIHBsZWFzaW5nIHRvIFNwaXRocmlkYXRlcyBhbHNvP+KAnSDigJxCeSB0aGUgZ29kcyzigJ0gc2FpZCBBZ2VzaWxhdXMsIOKAnGl0IHdhcyBub3QgaGUgdGhhdCBiYWRlIG1lIHNheSB0aGlzOyBidXQgSSBmb3IgbXkgb3duIHBhcnQsIGV2ZW4gdGhvdWdoIEkgcmVqb2ljZSBleGNlZWRpbmdseTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC9ub3RlPiB3aGVuIEkgcHVuaXNoIGFuIGVuZW15LCBiZWxpZXZlIHRoYXQgSSBhbSBmYXIgbW9yZSBwbGVhc2VkIHdoZW4gSSBkaXNjb3ZlciBzb21lIGdvb2QgdGhpbmcgZm9yIG15IGZyaWVuZHMu4oCdCjxkYXRlIGF1dGhuYW1lPSItMzk1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk1Ij4zOTUgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz7igJxXaHksIHRoZW4s4oCdIHNhaWQgaGUsIOKAnGRvIHlvdSBub3QgZmluZCBvdXQgd2hldGhlciB0aGlzIGlzIHBsZWFzaW5nIHRvIGhpbSBhbHNvP+KAnSBBbmQgQWdlc2lsYXVzIHNhaWQ6IOKAnEhlcmlwcGlkYXMsIGRvIHlvdSBtZW4gYWxsIGdvIGFuZCBwZXJzdWFkZSBoaW0gdG8gZGVzaXJlIHRoZSBzYW1lIHRoaW5ncyB0aGF0IHdlIGRvLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGV5IHdlbnQgYW5kIHNldCBhYm91dCBwZXJzdWFkaW5nIGhpbS4gQW5kIHdoZW4gdGhleSBoYWQgc3BlbnQgc29tZSB0aW1lIGF3YXksIEFnZXNpbGF1cyBzYWlkOiDigJxEbyB5b3Ugd2lzaCwgT3R5cywgdGhhdCB3ZSBzaG91bGQgY2FsbCBoaW0gaW4gYW5kIHRhbGsgd2l0aCBoaW0gb3Vyc2VsdmVzP+KAnSDigJxJIGRvIHRoaW5rIHRoYXQgaGUgd291bGQgYmUgZmFyIG1vcmUgbGlrZWx5IHRvIGJlIHBlcnN1YWRlZCBieSB5b3UgdGhhbiBieSBhbGwgdGhlIHJlc3QgcHV0IHRvZ2V0aGVyLuKAnSBUaGVyZXVwb24gQWdlc2lsYXVzIGNhbGxlZCBpbiBib3RoIFNwaXRocmlkYXRlcyBhbmQgdGhlIG90aGVycy4KPC90cmFuc2xhdGlvbj4="
translation['4.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYXMgc29vbiBhcyB0aGV5IGNhbWUgaW4sIEhlcmlwcGlkYXMgc2FpZDog4oCcV2h5LCBBZ2VzaWxhdXMsIG5lZWQgb25lIG1ha2UgYSBsb25nIHN0b3J5IGFib3V0IGFsbCB0aGF0IHdhcyBzYWlkPyBUaGUgdXBzaG90IG9mIGl0IGlzIHRoYXQgU3BpdGhyaWRhdGVzIHNheXMgaGUgd291bGQgYmUgZ2xhZCB0byBkbyBhbnl0aGluZyB0aGF0IHlvdSB0aGluayBiZXN0LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz7igJxXZWxsLCB0aGVuLOKAnSBzYWlkIEFnZXNpbGF1cywg4oCcSSB0aGluayBpdCBiZXN0IHRoYXQgeW91LCBTcGl0aHJpZGF0ZXMsIHNob3VsZCBnaXZlIHlvdXIgZGF1Z2h0ZXIgdG8gT3R5c+KAlGFuZCBtYXkgZ29vZCBmb3J0dW5lIGF0dGVuZCB1cG9uIHRoZSBkZWVk4oCUYW5kIHRoYXQgeW91LCBPdHlzLCBzaG91bGQgYWNjZXB0IGhlci4gQnV0IHdlIGNvdWxkIG5vdCBmZXRjaCB0aGUgZ2lybCBieSBsYW5kIGJlZm9yZSBzcHJpbmcu4oCdIOKAnEJ1dCwgYnkgWmV1cyzigJ0gc2FpZCBPdHlzLCDigJxzaGUgY291bGQgYmUgc2VudCBieSBzZWEgYXQgb25jZSwgaWYgeW91IHNvIGRlc2lyZWQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['4.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gdGhleSBnYXZlIGFuZCByZWNlaXZlZCBwbGVkZ2VzIHRvIHJhdGlmeSB0aGlzIGFncmVlbWVudCwgYW5kIHNvIHNlbnQgT3R5cyBvbiBoaXMgd2F5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgQWdlc2lsYXVzLCBiZWluZyBub3cgYXNzdXJlZCB0aGF0IE90eXMgd2FzIGVhZ2VyLCBpbW1lZGlhdGVseSBtYW5uZWQgYSB0cmlyZW1lIGFuZCBvcmRlcmVkIENhbGxpYXMgdGhlIExhY2VkYWVtb25pYW4gdG8gZmV0Y2ggdGhlIGdpcmwsIHdoaWxlIGhlIHNldCBvZmYgaGltc2VsZiBmb3IgRGFzY3lsZWl1bSwgdGhlIHBsYWNlIHdoZXJlIHRoZSBwYWxhY2Ugb2YgUGhhcm5hYmF6dXMgd2FzIHNpdHVhdGVkLCBhbmQgcm91bmQgYWJvdXQgaXQgd2VyZSBtYW55IGxhcmdlIHZpbGxhZ2VzLCBzdG9yZWQgd2l0aCBwcm92aXNpb25zIGluIGFidW5kYW5jZSwgYW5kIHNwbGVuZGlkIHdpbGQgYW5pbWFscywgc29tZSBvZjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC9ub3RlPiB0aGVtIGluIGVuY2xvc2VkIHBhcmtzLCBvdGhlcnMgaW4gb3BlbiBzcGFjZXMuCjxkYXRlIGF1dGhuYW1lPSItMzk1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk1Ij4zOTUgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZSB3YXMgYWxzbyBhIHJpdmVyLCBmdWxsIG9mIGFsbCBraW5kcyBvZiBmaXNoLCBmbG93aW5nIGJ5IHRoZSBwYWxhY2UuIEFuZCwgYmVzaWRlcywgdGhlcmUgd2FzIHdpbmdlZCBnYW1lIGluIGFidW5kYW5jZSBmb3IgdGhvc2Ugd2hvIGtuZXcgaG93IHRvIHRha2UgaXQuIFRoZXJlIGhlIHNwZW50IHRoZSB3aW50ZXIsIHByb2N1cmluZyBwcm92aXNpb25zIGZvciBoaXMgYXJteSBwYXJ0bHkgb24gdGhlIHNwb3QsIGFuZCBwYXJ0bHkgYnkgbWVhbnMgb2YgZm9yYWdpbmcgZXhwZWRpdGlvbnMuCjwvdHJhbnNsYXRpb24+"
translation['4.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgb24gb25lIG9jY2FzaW9uLCB3aGlsZSB0aGUgc29sZGllcnMgd2VyZSBnZXR0aW5nIHRoZWlyIHByb3Zpc2lvbnMgaW4gZGlzZGFpbmZ1bCBhbmQgY2FyZWxlc3MgZmFzaGlvbiwgYmVjYXVzZSB0aGV5IGhhZCBub3QgcHJldmlvdXNseSBtZXQgd2l0aCBhbnkgbWlzaGFwLCBQaGFybmFiYXp1cyBjYW1lIHVwb24gdGhlbSwgc2NhdHRlcmVkIGFzIHRoZXkgd2VyZSBvdmVyIHRoZSBwbGFpbiwgd2l0aCB0d28gc2N5dGhlLWJlYXJpbmcgY2hhcmlvdHMgYW5kIGFib3V0IGZvdXIgaHVuZHJlZCBob3JzZW1lbi4KPC90cmFuc2xhdGlvbj4="
translation['4.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiB0aGUgR3JlZWtzIHNhdyBoaW0gYWR2YW5jaW5nIHVwb24gdGhlbSwgdGhleSByYW4gdG9nZXRoZXIgdG8gdGhlIG51bWJlciBvZiBhYm91dCBzZXZlbiBodW5kcmVkOyBQaGFybmFiYXp1cywgaG93ZXZlciwgZGlkIG5vdCBkZWxheSwgYnV0IHB1dHRpbmcgaGlzIGNoYXJpb3RzIGluIGZyb250LCBhbmQgcG9zdGluZyBoaW1zZWxmIGFuZCB0aGUgaG9yc2VtZW4gYmVoaW5kIHRoZW0sIGhlIGdhdmUgb3JkZXJzIHRvIGNoYXJnZSB1cG9uIHRoZSBHcmVla3MuCjwvdHJhbnNsYXRpb24+"
translation['4.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGUgY2hhcmlvdHMgZGFzaGVkIGludG8gdGhlIGNsb3NlLWdhdGhlcmVkIGNyb3dkIGFuZCBzY2F0dGVyZWQgaXQsIHRoZSBob3JzZW1lbiBzcGVlZGlseSBzdHJ1Y2sgZG93biBhYm91dCBhIGh1bmRyZWQgbWVuLCB3aGlsZSB0aGUgcmVzdCBmbGVkIGZvciByZWZ1Z2UgdG8gQWdlc2lsYXVzOyBmb3IgaGUgY2hhbmNlZCB0byBiZSBuZWFyIGF0IGhhbmQgd2l0aCB0aGUgaG9wbGl0ZXMuCjwvdHJhbnNsYXRpb24+"
translation['4.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gdGhlIHRoaXJkIG9yIGZvdXJ0aCBkYXkgZm9sbG93aW5nIHRoaXMgaW5jaWRlbnQsIFNwaXRocmlkYXRlcyBsZWFybmVkIHRoYXQgUGhhcm5hYmF6dXMgd2FzIGVuY2FtcGVkIGluIGEgbGFyZ2UgdmlsbGFnZSBuYW1lZCBDYXVlLCBhYm91dCBvbmUgaHVuZHJlZCBhbmQgc2l4dHkgc3RhZGlhIGF3YXksIGFuZCBhdCBvbmNlIHRvbGQgSGVyaXBwaWRhcy4KPC90cmFuc2xhdGlvbj4="
translation['4.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgSGVyaXBwaWRhcywgZWFnZXIgdG8gYWNoaWV2ZSBhIGJyaWxsaWFudCBleHBsb2l0LCBhc2tlZCBmcm9tIEFnZXNpbGF1cyBob3BsaXRlcyB0byB0aGUgbnVtYmVyIG9mIHR3byB0aG91c2FuZCwgYXMgbWFueSBwZWx0YXN0cywgYW5kIGZvciBob3JzZW1lbiwgdGhvc2Ugb2YgU3BpdGhyaWRhdGVzLCB0aGUgUGFwaGxhZ29uaWFucywgYW5kIGFzIG1hbnkgb2YgdGhlIEdyZWVrcyBhcyBoZSBjb3VsZCBwZXJzdWFkZSB0byBqb2luIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['4.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIEFnZXNpbGF1cyBoYWQgcHJvbWlzZWQgaGltIHRoZXNlIHRyb29wcyBIZXJpcHBpZGFzIHByb2NlZWRlZCB0byBzYWNyaWZpY2U7IGFuZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC9ub3RlPiB0b3dhcmRzIGV2ZW5pbmcgaGUgb2J0YWluZWQgZmF2b3VyYWJsZSBvbWVucyBhbmQgdGVybWluYXRlZCBoaXMgc2FjcmlmaWNlLiBUaGVyZXVwb24gaGUgZ2F2ZSBvcmRlcnMgdG8gaGlzIG1lbiB0byBnZXQgdGhlaXIgZGlubmVyLCBhbmQgdGhlbiByZXBvcnQgaW4gZnJvbnQgb2YgdGhlIGNhbXAuIEJ1dCBieSB0aGUgdGltZSBkYXJrbmVzcyBoYWQgY29tZSBvbiwgbm90IHNvIG11Y2ggYXMgdGhlIGhhbGYgb2YgdGhlIHNldmVyYWwgZGV0YWNobWVudHMgaGFkIGNvbWUgb3V0Lgo8ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['4.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5Ib3dldmVyLCBpbiBvcmRlciB0aGF0IHRoZSByZXN0IG9mIHRoZSB0aGlydHkgU3BhcnRpYXRhZSBtaWdodCBub3QgbGF1Z2ggYXQgaGltLCBhcyB0aGV5IHdvdWxkIGlmIGhlIGdhdmUgdXAgaGlzIHBsYW4sIGhlIHNldCBvdXQgd2l0aCB0aGUgZm9yY2UgdGhhdCBoZSBoYWQuCjwvdHJhbnNsYXRpb24+"
translation['4.1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBhdCBkYXlicmVhayBoZSBmZWxsIHVwb24gdGhlIGVuY2FtcG1lbnQgb2YgUGhhcm5hYmF6dXMsIG1hbnkgb2YgaGlzIG91dHBvc3RzLCB3aG8gd2VyZSBNeXNpYW5zLCB3ZXJlIHNsYWluLCB0aGUgdHJvb3BzIHRoZW1zZWx2ZXMgc2NhdHRlcmVkIGluIGZsaWdodCwgYW5kIHRoZSBjYW1wIHdhcyBjYXB0dXJlZCwgYW5kIHdpdGggaXQgbWFueSBkcmlua2luZy1jdXBzIGFuZCBvdGhlciBhcnRpY2xlcyBzdWNoIGFzIGEgbWFuIGxpa2UgUGhhcm5hYmF6dXMgd291bGQgbmF0dXJhbGx5IGhhdmUsIGFuZCBiZXNpZGVzIHRoZXNlIHRoaW5ncyBhIGdyZWF0IGRlYWwgb2YgYmFnZ2FnZSBhbmQgbWFueSBiYWdnYWdlIGFuaW1hbHMuCjwvdHJhbnNsYXRpb24+"
translation['4.1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhyb3VnaCBmZWFyIHRoYXQsIGlmIGhlIHRvb2sgdXAgYSBmaXhlZCBwb3NpdGlvbiBhbnl3aGVyZSwgaGUgd291bGQgYmUgc3Vycm91bmRlZCBhbmQgYmVzaWVnZWQsIFBoYXJuYWJhenVzIGtlcHQgZ29pbmcgZmlyc3QgdG8gb25lIGFuZCB0aGVuIHRvIGFub3RoZXIgcGFydCBvZiB0aGUgY291bnRyeSwgZXZlbiBhcyB0aGUgbm9tYWRzIGRvLCB2ZXJ5IGNhcmVmdWxseSBjb25jZWFsaW5nIGhpcyBlbmNhbXBtZW50cy4KPC90cmFuc2xhdGlvbj4="
translation['4.1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiB0aGUgUGFwaGxhZ29uaWFucyBhbmQgU3BpdGhyaWRhdGVzIGhhZCBicm91Z2h0IGluIHRoZSBwcm9wZXJ0eSB0aGV5IGhhZCBjYXB0dXJlZCwgSGVyaXBwaWRhcyBwb3N0ZWQgY29tbWFuZGVycyBvZiBkaXZpc2lvbnMgYW5kIGNvbXBhbmllcyB0byBpbnRlcmNlcHQgdGhlbSwgYW5kIHRvb2sgZXZlcnl0aGluZyBhd2F5IGZyb20gYm90aCBTcGl0aHJpZGF0ZXMgYW5kIHRoZSBQYXBobGFnb25pYW5zLCBtZXJlbHkgaW4gb3JkZXIgdGhhdCBoZSBtaWdodCBoYXZlIGEgZ3JlYXQgcXVhbnRpdHkgb2YgYm9vdHkgdG8gdHVybiBpbiB0byB0aGUgb2ZmaWNpYWxzIHdobyBzb2xkIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5LCBob3dldmVyLCB3b3VsZCBub3Qgc3RhbmQgYmVpbmcgc28gdHJlYXRlZCwgYnV0LCBmZWVsaW5nIHRoYXQgdGhleSBoYWQgYmVlbiB3cm9uZ2VkIGFuZCBkaXNob25vdXJlZCwgcGFja2VkIHVwIGFuZCB3ZW50IG9mZiBkdXJpbmcgdGhlIG5pZ2h0IHRvIEFyaWFldXMgYXQgU2FyZGlzLCBwdXR0aW5nIHRoZWlyIHRydXN0IGluIEFyaWFldXMgYmVjYXVzZSBoZSBhbHNvIGhhZCByZXZvbHRlZCBmcm9tIHRoZSBLaW5nIGFuZCBtYWRlIHdhciB1cG9uIGhpbS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QXMgZGVzY3JpYmVkIGluIHRoZSA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmFiYXNpczwvdGl0bGU+Ljwvbm90ZT4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5hYmFzaXM8L3RpdGxlPi48L3RyYW5zbGF0aW9uPg=="
translation['4.1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm90aGluZyBoYXBwZW5lZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC9ub3RlPiBkdXJpbmcgdGhlIGNhbXBhaWduIHdoaWNoIHdhcyBtb3JlIGRpc3RyZXNzaW5nIHRvIEFnZXNpbGF1cyB0aGFuIHRoZSBkZXNlcnRpb24gb2YgU3BpdGhyaWRhdGVzLCBNZWdhYmF0ZXMsPGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Tb24gb2YgU3BpdGhyaWRhdGVzLjwvbm90ZT4gYW5kIHRoZSBQYXBobGFnb25pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHRoZXJlIHdhcyBhIGNlcnRhaW4gQXBvbGxvcGhhbmVzIG9mIEN5emljdXMgd2hvIGNoYW5jZWQgdG8gYmUgYW4gb2xkIGZyaWVuZCBvZiBQaGFybmFiYXp1cyBhbmQgYXQgdGhhdCB0aW1lIGhhZCBiZWNvbWUgYSBmcmllbmQgb2YgQWdlc2lsYXVzIGFsc28uIFRoaXMgbWFuLCBhY2NvcmRpbmdseSwgc2FpZCB0byBBZ2VzaWxhdXMgdGhhdCBoZSB0aG91Z2h0IGhlIGNvdWxkIGJyaW5nIFBoYXJuYWJhenVzIHRvIGEgY29uZmVyZW5jZSB3aXRoIGhpbSBpbiByZWdhcmQgdG8gZXN0YWJsaXNoaW5nIGZyaWVuZGx5IHJlbGF0aW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['4.1.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBBZ2VzaWxhdXMgaGVhcmQgd2hhdCBoZSBoYWQgdG8gc2F5LCBBcG9sbG9waGFuZXMsIGFmdGVyIG9idGFpbmluZyBhIHRydWNlIGFuZCBhIHBsZWRnZSwgYnJvdWdodCBQaGFybmFiYXp1cyB3aXRoIGhpbSB0byBhIHBsYWNlIHdoaWNoIGhhZCBiZWVuIGFncmVlZCB1cG9uLCB3aGVyZSBBZ2VzaWxhdXMgYW5kIHRoZSB0aGlydHkgU3BhcnRpYXRhZSB3aXRoIGhpbSB3ZXJlIGx5aW5nIG9uIHRoZSBncm91bmQgaW4gYSBncmFzc3kgc3BvdCBhd2FpdGluZyB0aGVtOyBQaGFybmFiYXp1cywgaG93ZXZlciwgY2FtZSBpbiBhIGRyZXNzIHdoaWNoIHdhcyB3b3J0aCBtdWNoIGdvbGQuIEJ1dCB3aGVuIGhpcyBhdHRlbmRhbnRzIHdlcmUgcHJvY2VlZGluZyB0byBzcHJlYWQgcnVncyBiZW5lYXRoIGhpbSwgdXBvbiB3aGljaCB0aGUgUGVyc2lhbnMgc2l0IHNvZnRseSwgaGUgd2FzIGFzaGFtZWQgdG8gaW5kdWxnZSBpbiBsdXh1cnksIHNlZWluZyBhcyBoZSBkaWQgdGhlIHNpbXBsaWNpdHkgb2YgQWdlc2lsYXVzOyBzbyBoZSB0b28gbGF5IGRvd24gb24gdGhlIGdyb3VuZCB3aXRob3V0IGZ1cnRoZXIgYWRvLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZmlyc3QgdGhleSBnYXZlIGVhY2ggb3RoZXIgZ3JlZXRpbmcsIHRoZW4gUGhhcm5hYmF6dXMgaGVsZCBvdXQgaGlzIHJpZ2h0IGhhbmQgYW5kIEFnZXNpbGF1cyBoZWxkIG91dCBoaXMgdG8gbWVldCBpdC4gQWZ0ZXIgdGhpcyBQaGFybmFiYXp1cyBiZWdhbiBzcGVha2luZyzigJRmb3IgaGUgd2FzIHRoZSBlbGRlcjoKPC90cmFuc2xhdGlvbj4="
translation['4.1.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQWdlc2lsYXVzIGFuZCBhbGwgeW91IExhY2VkYWVtb25pYW5zIHdobyBhcmUgcHJlc2VudCwgSSBiZWNhbWUgeW91ciBmcmllbmQgYW5kIGFsbHkgYXQgdGhlIHRpbWUgd2hlbiB5b3Ugd2VyZSBhdCB3YXIgd2l0aCB0aGUgQXRoZW5pYW5zLCBhbmQgbm90IG9ubHkgZGlkIEkgbWFrZSB5b3VyIGZsZWV0IHN0cm9uZyBieSBwcm92aWRpbmcgbW9uZXksIGJ1dCBvbiB0aGUgbGFuZCBJIG15c2VsZiBmb3VnaHQgb24gaG9yc2ViYWNrIHdpdGggeW91IGFuZCBkcm92ZSB5b3VyIGVuZW1pZXMgaW50byB0aGUgc2VhLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DcC4gSS4gaS4gNiwgMjQsIDI1LCBldGMuPC9ub3RlPiBBbmQgeW91IGNhbm5vdCBhY2N1c2UgbWUsIGFzIHlvdSBhY2N1c2VkIFRpc3NhcGhlcm5lcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTUiPjM5NSBCLkMuPC9kYXRlPjwvbm90ZT4gb2YgYW55IGRvdWJsZS1kZWFsaW5nIHRvd2FyZCB5b3UgYXQgYW55IHRpbWUsIGVpdGhlciBpbiBkZWVkIG9yIHdvcmQuCjxkYXRlIGF1dGhuYW1lPSItMzk1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk1Ij4zOTUgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.1.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5TdWNoIGEgZnJpZW5kIEkgcHJvdmVkIG15c2VsZiwgYW5kIG5vdyBJIGFtIGJyb3VnaHQgdG8gc3VjaCBhIHBhc3MgYnkgeW91IHRoYXQgSSBoYXZlIG5vdCBzbyBtdWNoIGFzIGEgbWVhbCBpbiBteSBvd24gbGFuZCB1bmxlc3MsIGxpa2UgdGhlIGJlYXN0cywgSSBwaWNrIHVwIGEgYml0IG9mIHdoYXQgeW91IG1heSBsZWF2ZS4gQW5kIHRoZSBiZWF1dGlmdWwgZHdlbGxpbmdzIGFuZCBwYXJrcywgZnVsbCBvZiB0cmVlcyBhbmQgd2lsZCBhbmltYWxzLCB3aGljaCBteSBmYXRoZXIgbGVmdCBtZSwgaW4gd2hpY2ggSSB0b29rIGRlbGlnaHQs4oCUYWxsIHRoZXNlIHBhcmtzIEkgc2VlIGN1dCBkb3duLCBhbGwgdGhlc2UgZHdlbGxpbmdzIGJ1cm5lZCB0byB0aGUgZ3JvdW5kLiBJZiBpdCBpcyBJIHRoYXQgZG8gbm90IHVuZGVyc3RhbmQgZWl0aGVyIHdoYXQgaXMgcmlnaHRlb3VzIG9yIHdoYXQgaXMganVzdCwgZG8geW91IHRlYWNoIG1lIGhvdyB0aGVzZSBhcmUgdGhlIGRlZWRzIG9mIG1lbiB3aG8ga25vdyBob3cgdG8gcmVwYXkgZmF2b3Vycy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['4.1.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGh1cyBoZSBzcG9rZS4gQW5kIGFsbCB0aGUgdGhpcnR5IFNwYXJ0aWF0YWUgd2VyZSBmaWxsZWQgd2l0aCBzaGFtZSBiZWZvcmUgaGltIGFuZCBmZWxsIHNpbGVudDsgYnV0IEFnZXNpbGF1cyBhdCBsZW5ndGggc2FpZDog4oCcSSB0aGluayB5b3Uga25vdywgUGhhcm5hYmF6dXMsIHRoYXQgaW4gdGhlIEdyZWVrIHN0YXRlcywgYWxzbywgbWVuIGJlY29tZSBndWVzdC1mcmllbmRzIG9mIG9uZSBhbm90aGVyLiBCdXQgdGhlc2UgbWVuLCB3aGVuIHRoZWlyIHN0YXRlcyBjb21lIHRvIHdhciwgZmlnaHQgd2l0aCB0aGVpciBmYXRoZXJsYW5kcyBldmVuIGFnYWluc3QgdGhlaXIgZm9ybWVyIGZyaWVuZHMsIGFuZCwgaWYgaXQgc28gY2hhbmNlLCBzb21ldGltZXMgZXZlbiBraWxsIG9uZSBhbm90aGVyLiBBbmQgc28gd2UgdG8tZGF5LCBiZWluZyBhdCB3YXIgd2l0aCB5b3VyIGtpbmcsIGFyZSBjb25zdHJhaW5lZCB0byByZWdhcmQgYWxsIHRoYXQgaXMgaGlzIGFzIGhvc3RpbGU7IGFzIGZvciB5b3Vyc2VsZiwgaG93ZXZlciwgd2Ugc2hvdWxkIHByaXplIGl0IGFib3ZlIGV2ZXJ5dGhpbmcgdG8gYmVjb21lIGZyaWVuZHMgb2YgeW91cnMuCjwvdHJhbnNsYXRpb24+"
translation['4.1.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaWYgaXQgd2VyZSBhbiBleGNoYW5nZSB0aGF0IHlvdSBoYWQgdG8gbWFrZSwgZnJvbSB0aGUgS2luZyBhcyBtYXN0ZXIgdG8gdXMgYXMgbWFzdGVycywgSSBmb3IgbXkgcGFydCBzaG91bGQgbm90IGFkdmlzZSB5b3UgdG8gbWFrZSB0aGUgZXhjaGFuZ2U7IGJ1dCBpbiBmYWN0IGl0IGlzIHdpdGhpbiB5b3VyIHBvd2VyIGJ5IGpvaW5pbmcgd2l0aCB1cyB0byBsaXZlIGluIHRoZSBlbmpveW1lbnQgb2YgeW91ciBwb3NzZXNzaW9ucyB3aXRob3V0IGRvaW5nIGhvbWFnZSB0byBhbnlvbmUgb3IgaGF2aW5nIGFueSBtYXN0ZXIuIEFuZCBiZWluZyBmcmVlIGlzIHdvcnRoLCBpbiBteSBvcGluaW9uLCBhcyBtdWNoIGFzIGFsbCBtYW5uZXIgb2YgcG9zc2Vzc2lvbnMuCjwvdHJhbnNsYXRpb24+"
translation['4.1.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5ZZXQgaXQgaXMgbm90IHRoaXMgdGhhdCB3ZSB1cmdlIHVwb24geW91LCB0byBiZSBmcmVlIGFuZCBwb29yLCBidXQgcmF0aGVyIGJ5IGVtcGxveWluZyB1cyBhcyBhbGxpZXMgdG8gaW5jcmVhc2UsIG5vdDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PC9ub3RlPiB0aGUgS2luZydzIGVtcGlyZSwgYnV0IHlvdXIgb3duLCBzdWJkdWluZyB0aG9zZSB3aG8gYXJlIG5vdyB5b3VyIGZlbGxvdy1zbGF2ZXMgc28gdGhhdCB0aGV5IHNoYWxsIGJlIHlvdXIgc3ViamVjdHMuIEFuZCBpZiwgYmVpbmcgZnJlZSwgeW91IHNob3VsZCBhdCB0aGUgc2FtZSB0aW1lIGJlY29tZSByaWNoLCB3aGF0IHdvdWxkIHlvdSBsYWNrIG9mIGJlaW5nIGFsdG9nZXRoZXIgaGFwcHk/4oCdCjxkYXRlIGF1dGhuYW1lPSItMzk1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk1Ij4zOTUgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.1.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcU2hhbGwgSSwgdGhlbizigJ0gc2FpZCBQaGFybmFiYXp1cywg4oCcdGVsbCB5b3UgZnJhbmtseSBqdXN0IHdoYXQgSSBzaGFsbCBkbz/igJ0g4oCcSXQgc3VyZWx5IGJlY29tZXMgeW91IHRvIGRvIHNvLuKAnSDigJxXZWxsLCB0aGVuLOKAnSBzYWlkIGhlLCDigJxpZiB0aGUgS2luZyBzZW5kcyBhbm90aGVyIGFzIGdlbmVyYWwgYW5kIG1ha2VzIG1lIGhpcyBzdWJvcmRpbmF0ZSwgSSBzaGFsbCBjaG9vc2UgdG8gYmUgeW91ciBmcmllbmQgYW5kIGFsbHk7IGJ1dCBpZiBoZSBhc3NpZ25zIHRoZSBjb21tYW5kIHRvIG1lLOKAlHNvIHN0cm9uZywgaXQgc2VlbXMsIGlzIHRoZSBwb3dlciBvZiBhbWJpdGlvbuKAlHlvdSBtYXkgYmUgd2VsbCBhc3N1cmVkIHRoYXQgSSBzaGFsbCB3YXIgdXBvbiB5b3UgdG8gdGhlIGJlc3Qgb2YgbXkgYWJpbGl0eS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['4.1.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgQWdlc2lsYXVzIGdyYXNwZWQgaGlzIGhhbmQgYW5kIHNhaWQ6IOKAnE8gdGhhdCB5b3UsIG5vYmxlIHNpciwgYSBtYW4gb2Ygc3VjaCBhIHNwaXJpdCwgbWF5IGNvbWUgdG8gYmUgb3VyIGZyaWVuZC4gQnV0IGF0IGxlYXN0LOKAnSBoZSBzYWlkLCDigJxiZSBhc3N1cmVkIG9mIG9uZSB0aGluZywgdGhhdCBub3cgSSBhbSBnb2luZyBhd2F5IGZyb20geW91ciBsYW5kIGFzIHNwZWVkaWx5IGFzIEkgY2FuLCBhbmQgaW4gdGhlIGZ1dHVyZSwgZXZlbiBpZiB3YXIgY29udGludWVzLCB3ZSBzaGFsbCB3aXRoaG9sZCBvdXIgaGFuZHMgZnJvbSB5b3UgYW5kIHlvdXJzIHNvIGxvbmcgYXMgd2UgY2FuIHR1cm4gb3VyIGF0dGFjayBhZ2FpbnN0IGFub3RoZXIu4oCdCjwvdHJhbnNsYXRpb24+"
translation['4.1.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2l0aCB0aGVzZSB3b3JkcyBoZSBicm9rZSB1cCB0aGUgbWVldGluZy4gQW5kIFBoYXJuYWJhenVzIG1vdW50ZWQgaGlzIGhvcnNlIGFuZCByb2RlIGF3YXksIGJ1dCBoaXMgc29uIGJ5IFBhcmFwaXRhLCB3aG8gd2FzIHN0aWxsIGluIHRoZSBibG9vbSBvZiB5b3V0aCwgcmVtYWluaW5nIGJlaGluZCwgcmFuIHVwIHRvIEFnZXNpbGF1cyBhbmQgc2FpZCB0byBoaW06IOKAnEFnZXNpbGF1cywgSSBtYWtlIHlvdSBteSBndWVzdC1mcmllbmQu4oCdIOKAnEFuZCBJIGFjY2VwdCB5b3VyIGZyaWVuZHNoaXAu4oCdIOKAnFJlbWVtYmVyLCB0aGVuLOKAnSBoZSBzYWlkLiBBbmQgaW1tZWRpYXRlbHkgaGUgZ2F2ZSBoaXMgamF2ZWxpbuKAlGl0IHdhcyBhIGJlYXV0aWZ1bCBvbmXigJR0byBBZ2VzaWxhdXMuIEFuZCBoZSwgYWNjZXB0aW5nIGl0LCB0b29rIG9mZiBhbmQgZ2F2ZSB0byB0aGUgYm95IGluIHJldHVybiBhIHNwbGVuZGlkIHRyYXBwaW5nIHdoaWNoIElkYWV1cywgaGlzIHNlY3JldGFyeSwgaGFkIHJvdW5kIGhpcyBob3JzZSdzIG5lY2suIFRoZW4gdGhlIGJveSBsZWFwZWQgdXBvbiBoaXMgaG9yc2UgYW5kIGZvbGxvd2VkIGFmdGVyIGhpcyBmYXRoZXIuCjwvdHJhbnNsYXRpb24+"
translation['4.1.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYWZ0ZXJ3YXJkcywgd2hlbiBoaXMgYnJvdGhlciBoYWQgZGVwcml2ZWQgdGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk1Ij4zOTUgQi5DLjwvZGF0ZT48L25vdGU+IHNvbiBvZiBQYXJhcGl0YSBvZiBoaXMgZG9tYWluIGR1cmluZyB0aGUgYWJzZW5jZSBvZiBQaGFybmFiYXp1cywgYW5kIGhhZCBtYWRlIGhpbSBhbiBleGlsZSwgQWdlc2lsYXVzIG5vdCBvbmx5IGNhcmVkIGZvciBoaW0gaW4gZXZlcnkgd2F5LCBidXQgaW4gcGFydGljdWxhciwgc2luY2UgaGUgaGFkIGJlY29tZSBlbmFtb3VyZWQgb2YgdGhlIHNvbiBvZiBFdWFsY2VzIGFuIEF0aGVuaWFuLCBtYWRlIGV2ZXJ5IGVmZm9ydCBmb3IgaGlzIHNha2UgdG8gaGF2ZSBFdWFsY2VzJyBzb24sIGluYXNtdWNoIGFzIGhlIHdhcyB0YWxsZXIgdGhhbiBhbnkgb2YgdGhlIG90aGVyIGJveXMsIGFkbWl0dGVkIHRvIHRoZSBzdGFkaXVtIHJhY2UgYXQgT2x5bXBpYS48ZGF0ZSBhdXRobmFtZT0iLTM5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NSI+Mzk1IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBzdGFkaXVtLCBvciB0d28gaHVuZHJlZCB5YXJkcycgZGFzaCwgd2FzIGEgcmFjZSBmb3IgbWVuIGFuZCBFdWFsY2VzJyBzb24gd2FzIHRvbyB5b3VuZyB0byBiZSBlbGlnaWJsZSwgYnV0IGhpcyB1bnVzdWFsIGhlaWdodCB0b2xkIGluIGhpcyBmYXZvdXIuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['4.1.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U28gYXQgdGhhdCB0aW1lIEFnZXNpbGF1cyBpbW1lZGlhdGVseSBtYXJjaGVkIG9mZiBvdXQgb2YgdGhlIHRlcnJpdG9yeSBvZiBQaGFybmFiYXp1cywganVzdCBhcyBoZSBoYWQgdG9sZCBoaW0gaGUgd291bGQ7IGJlc2lkZXMsIHNwcmluZyB3YXMgbm93PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48L25vdGU+IGFsbW9zdCBhdCBoYW5kLiBBbmQgdXBvbiBhcnJpdmluZyBpbiB0aGUgcGxhaW4gb2YgVGhlYmUgaGUgZW5jYW1wZWQgbmVhciB0aGUgc2hyaW5lIG9mIEFydGVtaXMgb2YgQXN0eXJhLCBhbmQgdGhlcmUgZ2F0aGVyZWQgdG9nZXRoZXIgZnJvbSBhbGwgcXVhcnRlcnMgYSB2ZXJ5IGdyZWF0IGFybXkgaW4gYWRkaXRpb24gdG8gdGhhdCB3aGljaCBoZSBoYWQuIEZvciBoZSB3YXMgcHJlcGFyaW5nIHRvIG1hcmNoIGFzIGZhciBhcyBoZSBjb3VsZCBpbnRvIHRoZSBpbnRlcmlvciwgdGhpbmtpbmcgdGhhdCBoZSB3b3VsZCBkZXRhY2ggZnJvbSB0aGUgS2luZyBhbGwgdGhlIG5hdGlvbnMgd2hpY2ggaGUgY291bGQgcHV0IGluIGhpcyByZWFyLgo8ZGF0ZSBhdXRobmFtZT0iLTM5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NCI+Mzk0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['4.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZ2VzaWxhdXMsIHRoZW4sIHdhcyBvY2N1cGllZCB3aXRoIHRoZXNlIHRoaW5ncy4gQnV0IHRoZSBMYWNlZGFlbW9uaWFucyBhdCBob21lLCB3aGVuIHRoZXkgZm91bmQgb3V0IGRlZmluaXRlbHkgdGhhdCB0aGUgbW9uZXk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q3AuIElJSS4gdi4gbC48L25vdGU+IGhhZCBjb21lIHRvIEdyZWVjZSwgYW5kIHRoYXQgdGhlIGxhcmdlc3Qgc3RhdGVzIGhhZCB1bml0ZWQgZm9yIHdhciBhZ2FpbnN0IHRoZW0sIGJlbGlldmVkIHRoYXQgdGhlaXIgc3RhdGUgd2FzIGluIGRhbmdlciwgYW5kIHRob3VnaHQgdGhhdCBpdCB3YXMgbmVjZXNzYXJ5IHRvIHVuZGVydGFrZSBhIGNhbXBhaWduLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGlsZSB0aGVtc2VsdmVzIG1ha2luZyBwcmVwYXJhdGlvbnMgZm9yIHRoaXMsIHRoZXkgYWxzbyBpbW1lZGlhdGVseSBzZW50IEVwaWN5ZGlkYXMgdG8gZmV0Y2ggQWdlc2lsYXVzLiBBbmQgd2hlbiBFcGljeWRpZGFzIGFycml2ZWQgaW4gQXNpYSwgaGUgdG9sZCBBZ2VzaWxhdXMgdGhlIGdlbmVyYWwgY29uZGl0aW9uIG9mIGFmZmFpcnMsIGFuZCB0aGF0IHRoZSBzdGF0ZSBiYWRlIGhpbSBjb21lIGFzIHNwZWVkaWx5IGFzIHBvc3NpYmxlIHRvIHRoZSBhaWQgb2YgaGlzIGZhdGhlcmxhbmQuCjwvdHJhbnNsYXRpb24+"
translation['4.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGVuIEFnZXNpbGF1cyBoZWFyZCB0aGlzLCBhbHRob3VnaCBoZSB3YXMgZGlzdHVyYmVkLCBjb25zaWRlcmluZyB3aGF0IGhvbm91cnMgYW5kIHdoYXQgaG9wZXMgaGUgd2FzIGRlcHJpdmVkIG9mLCBuZXZlcnRoZWxlc3MsIGNhbGxpbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTQiPjM5NCBCLkMuPC9kYXRlPjwvbm90ZT4gdG9nZXRoZXIgdGhlIGFsbGllcywgaGUgbWFkZSBrbm93biB0byB0aGVtIHdoYXQgdGhlIHN0YXRlIGNvbW1hbmRlZCwgYW5kIHNhaWQgdGhhdCBpdCB3YXMgbmVjZXNzYXJ5IHRvIGdvIHRvIHRoZSBhaWQgb2YgdGhlIGZhdGhlcmxhbmQuIOKAnEJ1dCBpZiB0aG9zZSBtYXR0ZXJzIHR1cm4gb3V0IHN1Y2Nlc3NmdWxseSwgYmUgd2VsbCBhc3N1cmVkLCBteSBhbGxpZXMs4oCdIGhlIHNhaWQsIOKAnHRoYXQgSSBzaGFsbCBub3QgZm9yZ2V0IHlvdSwgYnV0IHNoYWxsIHJldHVybiBhZ2FpbiB0byBhY2NvbXBsaXNoIHRoZSB0aGluZ3Mgd2hpY2ggeW91IGRlc2lyZS7igJ0KPGRhdGUgYXV0aG5hbWU9Ii0zOTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTQiPjM5NCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlVwb24gaGVhcmluZyB0aGlzIG1hbnkgYnVyc3QgaW50byB0ZWFycywgYnV0IHRoZXkgYWxsIHZvdGVkIHRvIGdvIHdpdGggQWdlc2lsYXVzIHRvIHRoZSBhaWQgb2YgTGFjZWRhZW1vbiwgcmVzb2x2ZWQsIGlmIG1hdHRlcnMgdGhlcmUgc2hvdWxkIHR1cm4gb3V0IHN1Y2Nlc3NmdWxseSwgdG8gYnJpbmcgaGltIGJhY2sgYWdhaW4gd2l0aCB0aGVtIHRvIEFzaWEuCjwvdHJhbnNsYXRpb24+"
translation['4.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFjY29yZGluZ2x5IHRoZXkgbWFkZSBwcmVwYXJhdGlvbnMgdG8gZm9sbG93IHdpdGggaGltLiBBcyBmb3IgQWdlc2lsYXVzLCBoZSBsZWZ0IGJlaGluZCBoaW0gaW4gQXNpYSBFdXhlbnVzIGFzIGdvdmVybm9yLCBhbmQgd2l0aCBoaW0gYSBnYXJyaXNvbiBvZiBub3QgbGVzcyB0aGFuIGZvdXIgdGhvdXNhbmQgbWVuLCBzbyB0aGF0IGhlIGNvdWxkIGtlZXAgdGhlIGNpdGllcyBzYWZlOyBhbmQgc2VlaW5nIHRoYXQgbW9zdCBvZiBoaXMgb3duIHNvbGRpZXJzIHdlcmUgbW9yZSBkZXNpcm91cyBvZiByZW1haW5pbmcgdGhhbiBvZiB1bmRlcnRha2luZyBhIGNhbXBhaWduIGFnYWluc3QgR3JlZWtzLCBpbiB0aGUgZGVzaXJlIHRvIGxlYWQgd2l0aCBoaW0gdGhlIGJlc3QgbWVuIGFuZCBhcyBtYW55IGFzIHBvc3NpYmxlIGhlIG9mZmVyZWQgcHJpemVzIHRvIHRoZSBjaXRpZXMsIGZvciB0aGUgb25lIHdoaWNoIHNob3VsZCBzZW5kIHRoZSBiZXN0IGZvcmNlLCBhbmQgdG8gdGhlIGNhcHRhaW5zIG9mIHRoZSBtZXJjZW5hcmllcywgZm9yIHRoZSBvbmUgd2hvIHNob3VsZCBqb2luIHRoZSBleHBlZGl0aW9uIHdpdGggdGhlIGJlc3QgZXF1aXBwZWQgY29tcGFueSBvZiBob3BsaXRlcywgb2YgYm93bWVuLCBhbmQgb2YgcGVsdGFzdHMuIEhlIGxpa2V3aXNlIGFubm91bmNlZCB0byB0aGUgY29tbWFuZGVycyBvZiBjYXZhbHJ5IHRoYXQgaGUgd291bGQgYWxzbyBnaXZlIGEgcHJpemUgb2YgdmljdG9yeSB0byB0aGUgb25lIHdobyBzaG91bGQgZnVybmlzaCB0aGUgYmVzdCBtb3VudGVkIGFuZCBiZXN0IGVxdWlwcGVkIGJhdHRhbGlvbi4KPC90cmFuc2xhdGlvbj4="
translation['4.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBoZSBzYWlkIHRoYXQgaGUgd291bGQgbWFrZSB0aGUgZGVjaXNpb24gaW4gdGhlIENoZXJzb25lc2UsIHdoZW4gdGhleSBoYWQgY3Jvc3NlZCBmcm9tIEFzaWEgdG8gRXVyb3BlLCBoaXMgcHVycG9zZSBiZWluZyB0byBsZXQgdGhlbSB1bmRlcnN0YW5kIHRob3JvdWdobHkgdGhhdCB0aGV5IG11c3Qgc2VsZWN0IHRoZWlyIHRyb29wcyB3aXRoIGNhcmUuCjwvdHJhbnNsYXRpb24+"
translation['4.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciB0aGUgcHJpemVzLCBtb3N0IG9mIHRoZW0gd2VyZSBiZWF1dGlmdWxseSB3cm91Z2h0IGFybXMsIGJvdGggZm9yIGhvcGxpdGVzIGFuZCBmb3IgaG9yc2VtZW47IHRoZXJlIHdlcmUgYWxzbyB3cmVhdGhzIG9mIGdvbGQsIGFuZCB0aGUgcHJpemVzIGFsbCB0b2xkIGNvc3Qgbm90IGxlc3MgdGhhbiBmb3VyIHRhbGVudHMuIEFzIGE8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTQiPjM5NCBCLkMuPC9kYXRlPjwvbm90ZT4gcmVzdWx0LCBob3dldmVyLCBvZiB0aGUgZXhwZW5kaW5nIG9mIHRoaXMgc3VtLCBhcm1zIHdvcnRoIGEgdmFzdCBzdW0gb2YgbW9uZXkgd2VyZSBwcm92aWRlZCBmb3IgdGhlIGFybXkuCjxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIGhlIGhhZCBjcm9zc2VkIHRoZSBIZWxsZXNwb250LCBNZW5hc2N1cywgSGVyaXBwaWRhcywgYW5kIE9yc2lwcHVzIHdlcmUgYXBwb2ludGVkIGFzIGp1ZGdlcyBmcm9tIHRoZSBzaWRlIG9mIHRoZSBMYWNlZGFlbW9uaWFucywgYW5kIGZyb20gdGhhdCBvZiB0aGUgYWxsaWVzIG9uZSBmcm9tIGVhY2ggY2l0eS4gVGhlbiBBZ2VzaWxhdXMsIGFmdGVyIGhlIGhhZCBtYWRlIHRoZSBkZWNpc2lvbiwgbWFyY2hlZCBvbiB3aXRoIGhpcyBhcm15IGJ5IHRoZSBzYW1lIHJvdXRlIHdoaWNoIHRoZSBQZXJzaWFuIGtpbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+WGVyeGVzLjwvbm90ZT4gZm9sbG93ZWQgd2hlbiBoZSBtYWRlIGhpcyBleHBlZGl0aW9uIGFnYWluc3QgR3JlZWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFud2hpbGUgdGhlIGVwaG9ycyBjYWxsZWQgb3V0IHRoZSBiYW47IGFuZCBzaW5jZSBBZ2VzaXBvbGlzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNvbiBvZiBQYXVzYW5pYXM7IGNwLiBJSUkuIHYuIDI1Ljwvbm90ZT4gd2FzIHN0aWxsIGEgYm95LCB0aGUgc3RhdGUgY29tbWFuZGVkIEFyaXN0b2RlbXVzLCB3aG8gd2FzIG9mIHRoZSByb3lhbCBmYW1pbHkgYW5kIHRoZSBib3kncyBndWFyZGlhbiwgdG8gbGVhZCB0aGUgYXJteS4KPC90cmFuc2xhdGlvbj4="
translation['4.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiB0aGUgTGFjZWRhZW1vbmlhbnMgd2VyZSBtYXJjaGluZyBmb3J0aCBhbmQgdGhlaXIgZW5lbWllcyBoYWQgZ2F0aGVyZWQgdG9nZXRoZXIsIHRoZSBsYXR0ZXIgbWV0IGFuZCB0b29rIGNvdW5zZWwgYXMgdG8gaG93IHRoZXkgbWlnaHQgZmlnaHQgdGhlIGJhdHRsZSB3aXRoIHRoZSBncmVhdGVzdCBhZHZhbnRhZ2UgdG8gdGhlbXNlbHZlcy4KPC90cmFuc2xhdGlvbj4="
translation['4.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIFRpbW9sYXVzIG9mIENvcmludGggc3Bva2UgYXMgZm9sbG93czog4oCcSXQgc2VlbXMgdG8gbWUs4oCdIGhlIHNhaWQsIOKAnGZlbGxvdyBhbGxpZXMsIHRoYXQgdGhlIGNhc2Ugb2YgdGhlIExhY2VkYWVtb25pYW5zIGlzIG11Y2ggdGhlIHNhbWUgYXMgdGhhdCBvZiByaXZlcnMuIEZvciByaXZlcnMgYXQgdGhlaXIgc291cmNlcyBhcmUgbm90IGxhcmdlLCBidXQgZWFzeSB0byBjcm9zcywgeWV0IHRoZSBmYXJ0aGVyIG9uIHRoZXkgZ28sIG90aGVyIHJpdmVycyBlbXB0eSBpbnRvIHRoZW0gYW5kIG1ha2UgdGhlaXIgY3VycmVudCBzdHJvbmdlcjsKPC90cmFuc2xhdGlvbj4="
translation['4.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQganVzdCBzbyB0aGUgTGFjZWRhZW1vbmlhbnMsIGF0IHRoZSBwbGFjZSB3aGVuY2UgdGhleSBjb21lIGZvcnRoLCBhcmUgYWxvbmUgYnkgdGhlbXNlbHZlcywgYnV0IGFzIHRoZXkgZ28gb24gYW5kIGtlZXAgYXR0YWNoaW5nIHRoZSBjaXRpZXMgdG8gdGhlbSwgdGhleSBiZWNvbWUgbW9yZSBudW1lcm91cyBhbmQgaGFyZGVyIHRvIGZpZ2h0IGFnYWluc3QuIEFnYWluLCBJIHNlZSzigJ0gaGUgc2FpZCwg4oCcdGhhdCBhbGwgd2hvIHdpc2ggdG8gZGVzdHJveSB3YXNwcywgaW4gY2FzZSB0aGV5IHRyeSB0byBjYXB0dXJlIHRoZSB3YXNwcyBhcyB0aGV5IGlzc3VlIGZvcnRoLCBhcmUgc3R1bmcgYnkgbWFueSBvZiB0aGVtOyBidXQgaWYgdGhleSBhcHBseSB0aGUgZmlyZSB3aGlsZSB0aGUgd2FzcHMgYXJlIHN0aWxsIGluIHRoZWlyIG5lc3RzLCB0aGV5IHN1ZmZlciBubyBoYXJtIGFuZCBzdWJkdWUgdGhlIHdhc3BzLiBDb25zaWRlcmluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NCI+Mzk0IEIuQy48L2RhdGU+PC9ub3RlPiB0aGVzZSB0aGluZ3MsIHRoZXJlZm9yZSwgSSBiZWxpZXZlIGl0IGlzIGJlc3QgdG8gZmlnaHQgdGhlIGJhdHRsZSBpbiBMYWNlZGFlbW9uIGl0c2VsZiBpZiBwb3NzaWJsZSwgYnV0IGlmIG5vdCwgYXMgbmVhciB0aGVyZSBhcyB3ZSBjYW4u4oCdIFNpbmNlIGl0IHdhcyB0aG91Z2h0IHRoYXQgaGlzIGFkdmljZSB3YXMgZ29vZCwgdGhleSB2b3RlZCBmb3IgdGhpcyBjb3Vyc2UuCjxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hpbGUgdGhleSB3ZXJlIG5lZ290aWF0aW5nIGFib3V0IHRoZSBsZWFkZXJzaGlwIGFuZCB0cnlpbmcgdG8gY29tZSB0byBhbiBhZ3JlZW1lbnQgd2l0aCBvbmUgYW5vdGhlciBhcyB0byB0aGUgbnVtYmVyIG9mIHJhbmtzIGluIGRlcHRoIGluIHdoaWNoIHRoZSB3aG9sZSBhcm15IHNob3VsZCBiZSBkcmF3biB1cCwgaW4gb3JkZXIgdG8gcHJldmVudCB0aGUgc3RhdGVzIGZyb20gbWFraW5nIHRoZWlyIHBoYWxhbnhlcyB0b28gZGVlcCBhbmQgdGh1cyBnaXZpbmcgdGhlIGVuZW15IGEgY2hhbmNlIG9mIHN1cnJvdW5kaW5nIHRoZW0s4oCUbWVhbndoaWxlIHRoZSBMYWNlZGFlbW9uaWFucywgaGF2aW5nIGFscmVhZHkgcGlja2VkIHVwIHRoZSBUZWdlYW5zIGFuZCBNYW50aW5lYW5zLCB3ZXJlIG9uIHRoZWlyIG91dHdhcmQgbWFyY2gsIHRha2luZyB0aGUgcm9hZCBhbG9uZyB0aGUgc2VhLXNob3JlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BcHBhcmVudGx5IHRoZSBBcmdvbGljIEd1bGYuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['4.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYXMgdGhlIHR3byBhcm1pZXMgbWFyY2hlZCBvbiwgdGhlIENvcmludGhpYW5zIGFuZCB0aGVpciBhbGxpZXMgd2VyZSBpbiB0aGUgZGlzdHJpY3Qgb2YgTmVtZWEsIGFuZCB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIHRoZWlyIGFsbGllcyBhdCBTaWN5b24sIGF0IGFsbW9zdCB0aGUgc2FtZSB0aW1lLiBOb3cgd2hlbiB0aGUgbGF0dGVyIGhhZCBtYWRlIHRoZWlyIGVudHJ5IGludG8gQ29yaW50aGlhbiB0ZXJyaXRvcnkgYnkgd2F5IG9mIEVwaWVpY2VpYSwgYXQgZmlyc3QgdGhlIGxpZ2h0IHRyb29wcyBvZiB0aGVpciBhZHZlcnNhcmllcyBkaWQgdGhlbSBhIGdyZWF0IGRlYWwgb2YgaGFybSBieSB0aHJvd2luZyBtaXNzaWxlcyBhbmQgZGlzY2hhcmdpbmcgYXJyb3dzIHVwb24gdGhlbSBmcm9tIHRoZSBoZWlnaHRzIHVwb24gdGhlaXIgcmlnaHQuCjwvdHJhbnNsYXRpb24+"
translation['4.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGV5IGhhZCBkZXNjZW5kZWQgdG93YXJkcyB0aGUgc2VhLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgQ29yaW50aGlhbiBHdWxmLjwvbm90ZT4gdGhleSBtYXJjaGVkIG9uIGJ5IHRoaXMgcm91dGUgdGhyb3VnaCB0aGUgcGxhaW4sIGRldmFzdGF0aW5nIGFuZCBidXJuaW5nIHRoZSBsYW5kLiBUaGUgZW5lbXkgYWxzbywgaG93ZXZlciwgcmV0aXJlZCBhbmQgZW5jYW1wZWQsIGdldHRpbmcgdGhlIHJpdmVyLWJlZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5PZiB0aGUgTmVtZWEuPC9ub3RlPiBpbiBmcm9udCBvZiB0aGVtOyBhbmQgd2hlbiwgYXMgdGhleSBhZHZhbmNlZCwgdGhlIExhY2VkYWVtb25pYW5zIHdlcmUgZGlzdGFudCBub3Qgc28gbXVjaCBhcyB0ZW4gc3RhZGlhIGZyb20gdGhlIGVuZW15LCB0aGV5IGFsc28gZW5jYW1wZWQgd2hlcmUgdGhleSB3ZXJlIGFuZCByZW1haW5lZCBxdWlldC4KPC90cmFuc2xhdGlvbj4="
translation['4.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIG5vdyBJIHdpbGwgc3RhdGUgdGhlIG51bWJlcnMgb24gZWl0aGVyIHNpZGUuIEFzIGZvciBob3BsaXRlcywgdGhlcmUgaGFkIGdhdGhlcmVkIHRvZ2V0aGVyIG9mIHRoZSBMYWNlZGFlbW9uaWFucyBhYm91dCBzaXggdGhvdXNhbmQsIG9mIHRoZSBFbGVhbnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48L25vdGU+IFRyaXBoeWxpYW5zLCBBY3JvcmlhbnMsIGFuZCBMYXNpb25pYW5zIGFsbW9zdCB0aHJlZSB0aG91c2FuZCwgYW5kIG9mIHRoZSBTaWN5b25pYW5zIG9uZSB0aG91c2FuZCBmaXZlIGh1bmRyZWQsIHdoaWxlIG9mIHRoZSBFcGlkYXVyaWFucywgVHJvZXplbmlhbnMsIEhlcm1pb25pYW5zLCBhbmQgSGFsaWFucyB0aGVyZSB3ZXJlIG5vdCBsZXNzIHRoYW4gdGhyZWUgdGhvdXNhbmQuIEJlc2lkZXMgdGhlc2UgdGhlcmUgd2VyZSBob3JzZW1lbiBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgdG8gdGhlIG51bWJlciBvZiBhYm91dCBzZXZlbiBodW5kcmVkLCBDcmV0YW4gYm93bWVuIHdobyBhY2NvbXBhbmllZCB0aGUgYXJteSwgYWJvdXQgdGhyZWUgaHVuZHJlZCwgYW5kLCBmdXJ0aGVyLCBzbGluZ2VycyBvZiB0aGUgTWFyZ2FuaWFucywgTGV0cmluaWFucywgYW5kIEFtcGhpZG9saWFucywgbm90IGxlc3MgdGhhbiBmb3VyIGh1bmRyZWQuIFRoZSBQaGxpYXNpYW5zLCBob3dldmVyLCB3b3VsZCBub3Qgam9pbiB0aGVtOyBmb3IgdGhleSBzYWlkIHRoYXQgdGhleSB3ZXJlIGtlZXBpbmcgYSBob2x5IHRydWNlLjxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiwgb24gYWNjb3VudCBvZiBzb21lIHJlbGlnaW91cyBmZXN0aXZhbC48L25vdGU+IFRoaXMsIHRoZW4sIHdhcyB0aGUgZm9yY2Ugb24gdGhlIHNpZGUgb2YgdGhlIExhY2VkYWVtb25pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIGZvcmNlIG9mIHRoZSBlbmVteSB3aGljaCB3YXMgZ2F0aGVyZWQgdG9nZXRoZXIgaW5jbHVkZWQsIG9mIHRoZSBBdGhlbmlhbnMgYWJvdXQgc2l4IHRob3VzYW5kIGhvcGxpdGVzLCBvZiB0aGUgQXJnaXZlcywgYWNjb3JkaW5nIHRvIGFsbCBhY2NvdW50cywgYWJvdXQgc2V2ZW4gdGhvdXNhbmQsIG9mIHRoZSBCb2VvdGlhbnMgKHNpbmNlIHRoZSBPcmNob21lbmlhbnMgd2VyZSBub3QgcHJlc2VudCkgb25seSBhYm91dCBmaXZlIHRob3VzYW5kLCBvZiB0aGUgQ29yaW50aGlhbnMgYWJvdXQgdGhyZWUgdGhvdXNhbmQsIGFuZCwgZnVydGhlciwgZnJvbSB0aGUgd2hvbGUgb2YgRXVib2VhIG5vdCBsZXNzIHRoYW4gdGhyZWUgdGhvdXNhbmQuIFRoaXMgd2FzIHRoZSBudW1iZXIgb2YgdGhlIGhvcGxpdGVzOyBidXQgYXMgZm9yIGhvcnNlbWVuLCB0aGVyZSB3ZXJlIG9mIHRoZSBCb2VvdGlhbnMgKHNpbmNlIHRoZSBPcmNob21lbmlhbnMgd2VyZSBub3QgcHJlc2VudCkgYWJvdXQgZWlnaHQgaHVuZHJlZCwgb2YgdGhlIEF0aGVuaWFucyBhYm91dCBzaXggaHVuZHJlZCwgb2YgdGhlIENoYWxjaWRpYW5zIGZyb20gRXVib2VhIGFib3V0IG9uZSBodW5kcmVkLCBhbmQgb2YgdGhlIE9wdW50aWFuIExvY3JpYW5zIGFib3V0IGZpZnR5LiBBbmQgb2YgbGlnaHQgdHJvb3BzIGFsc28gdGhlcmUgd2FzIGEgZ3JlYXRlciBudW1iZXIgd2l0aCB0aGUgcGFydHkgb2YgdGhlIENvcmludGhpYW5zOyBmb3IgdGhlIE96b2xpYW4gTG9jcmlhbnMsIE1hbGlhbnMsIGFuZCBBY2FybmFuaWFucyB3ZXJlIHdpdGggdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['4.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhpcywgdGhlbiwgd2FzIHRoZSBmb3JjZSBvbiBlaXRoZXIgc2lkZS4gTm93IHRoZSBCb2VvdGlhbnMsIHNvIGxvbmcgYXMgdGhleSBvY2N1cGllZCB0aGUgbGVmdCB3aW5nLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JbiB0aGlzIHBvc2l0aW9uIHRoZXkgd2VyZSBvcHBvc2l0ZSB0aGUgTGFjZWRhZW1vbmlhbnMsIHdobyBhbHdheXMgdG9vayB0aGUgcmlnaHQgd2luZy48L25vdGU+IHdlcmUgbm90IGluIHRoZSBsZWFzdCBlYWdlciB0byBqb2luIGJhdHRsZTsgYnV0IHdoZW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTQiPjM5NCBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlIEF0aGVuaWFucyB0b29rIHBvc2l0aW9uIG9wcG9zaXRlIHRoZSBMYWNlZGFlbW9uaWFucywgYW5kIHRoZSBCb2VvdGlhbnMgdGhlbXNlbHZlcyBnb3QgdGhlIHJpZ2h0IHdpbmcgYW5kIHdlcmUgc3RhdGlvbmVkIG9wcG9zaXRlIHRoZSBBY2hhZWFucywgdGhleSBpbW1lZGlhdGVseSBzYWlkIHRoYXQgdGhlIHNhY3JpZmljZXMgd2VyZSBmYXZvdXJhYmxlIGFuZCBnYXZlIHRoZSBvcmRlciB0byBtYWtlIHJlYWR5LCBzYXlpbmcgdGhhdCB0aGVyZSB3b3VsZCBiZSBhIGJhdHRsZS4gQW5kIGluIHRoZSBmaXJzdCBwbGFjZSwgZGlzcmVnYXJkaW5nIHRoZSBzaXh0ZWVuLXJhbmsgZm9ybWF0aW9uLDxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+RXZpZGVudGx5IGFncmVlZCB1cG9uLiBjLnAuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gNC4yLjEzIiB2YWxpZD0ieWVzIj5YZW4uIEhlbGwuIDQuMi4xMzwvYmlibD48L25vdGU+IHRoZXkgbWFkZSB0aGVpciBwaGFsYW54IGV4Y2VlZGluZ2x5IGRlZXAsIGFuZCwgYmVzaWRlcywgdGhleSBhbHNvIHZlZXJlZCB0byB0aGUgcmlnaHQgaW4gbGVhZGluZyB0aGUgYWR2YW5jZSwgaW4gb3JkZXIgdG8gb3V0ZmxhbmsgdGhlIGVuZW15IHdpdGggdGhlaXIgd2luZzsgYW5kIHRoZSBBdGhlbmlhbnMsIGluIG9yZGVyIG5vdCB0byBiZSBkZXRhY2hlZCBmcm9tIHRoZSByZXN0IG9mIHRoZSBsaW5lLCBmb2xsb3dlZCB0aGVtIHRvd2FyZHMgdGhlIHJpZ2h0LCBhbHRob3VnaCB0aGV5IGtuZXcgdGhhdCB0aGVyZSB3YXMgZGFuZ2VyIG9mIHRoZWlyIGJlaW5nIHN1cnJvdW5kZWQuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ilhlbi4gSGVsbC4gNC4yLjEzIiB2YWxpZD0ieWVzIj5YZW4uIEhlbGwuIDQuMi4xMzwvYmlibD48L3RyYW5zbGF0aW9uPg=="
translation['4.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgZm9yIGEgdGltZSB0aGUgTGFjZWRhZW1vbmlhbnMgZGlkIG5vdCBwZXJjZWl2ZSB0aGF0IHRoZSBlbmVteSB3ZXJlIGFkdmFuY2luZzsgZm9yIHRoZSBwbGFjZSB3YXMgdGhpY2tseSBvdmVyZ3Jvd247IGJ1dCB3aGVuIHRoZSBsYXR0ZXIgc3RydWNrIHVwIHRoZSBwYWVhbiwgdGhlbiBhdCBsZW5ndGggdGhleSBrbmV3LCBhbmQgaW1tZWRpYXRlbHkgZ2F2ZSBvcmRlcnMgaW4gdGhlaXIgdHVybiB0aGF0IGFsbCBzaG91bGQgbWFrZSByZWFkeSBmb3IgYmF0dGxlLiBBbmQgd2hlbiB0aGV5IGhhZCBiZWVuIGRyYXduIHVwIHRvZ2V0aGVyIGluIHRoZSBwb3NpdGlvbnMgd2hpY2ggdGhlIExhY2VkYWVtb25pYW4gbGVhZGVycyBvZiB0aGUgYWxsaWVzIGFzc2lnbmVkIHRvIHRoZSBzZXZlcmFsIGRpdmlzaW9ucywgdGhleSBwYXNzZWQgdGhlIHdvcmQgYWxvbmcgdG8gZm9sbG93IHRoZSB2YW4uIE5vdyB0aGUgTGFjZWRhZW1vbmlhbnMgYWxzbyB2ZWVyZWQgdG8gdGhlIHJpZ2h0IGluIGxlYWRpbmcgdGhlIGFkdmFuY2UsIGFuZCBleHRlbmRlZCB0aGVpciB3aW5nIHNvIGZhciBiZXlvbmQgdGhhdCBvZiB0aGUgZW5lbXkgdGhhdCBvbmx5IHNpeCB0cmliZXMgb2YgdGhlIEF0aGVuaWFucyBmb3VuZCB0aGVtc2VsdmVzIG9wcG9zaXRlIHRoZSBMYWNlZGFlbW9uaWFucywgdGhlIG90aGVyIGZvdXIgYmVpbmcgb3Bwb3NpdGUgdGhlIFRlZ2VhbnMuCjwvdHJhbnNsYXRpb24+"
translation['4.2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGUgYXJtaWVzIHdlcmUgbm93IG5vdCBzbyBtdWNoIGFzIGEgc3RhZGl1bSBhcGFydCwgdGhlIExhY2VkYWVtb25pYW5zIHNhY3JpZmljZWQgdGhlIGdvYXQgdG8gQXJ0ZW1pcyBBZ3JvdGVyYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Hb2RkZXNzIG9mIHRoZSBjaGFzZS48L25vdGU+LCBhcyBpcyB0aGVpciBjdXN0b20sIGFuZCBsZWQgdGhlIGNoYXJnZSB1cG9uIHRoZWlyIGFkdmVyc2FyaWVzLCB3aGVlbGluZyByb3VuZCB0aGVpciBvdmVybGFwcGluZyB3aW5nIGluIG9yZGVyIHRvIHN1cnJvdW5kIHRoZW0uIFdoZW4gdGhleSBoYWQgY29tZSB0byBjbG9zZSBlbmNvdW50ZXIsIGFsbCB0aGUgYWxsaWVzIG9mPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48L25vdGU+IHRoZSBMYWNlZGFlbW9uaWFucyB3ZXJlIG92ZXJjb21lIGJ5IHRoZWlyIGFkdmVyc2FyaWVzIGV4Y2VwdCB0aGUgbWVuIG9mIFBlbGxlbmUsIHdobywgYmVpbmcgcGl0dGVkIGFnYWluc3QgdGhlIFRoZXNwaWFucywgZm91Z2h0IGFuZCBmZWxsIGluIHRoZWlyIHBsYWNlcyzigJRhcyBkaWQgYWxzbyBtYW55IG9mIHRoZSBvdGhlciBzaWRlLgo8ZGF0ZSBhdXRobmFtZT0iLTM5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NCI+Mzk0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['4.2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIExhY2VkYWVtb25pYW5zIHRoZW1zZWx2ZXMgb3ZlcmNhbWUgdGhhdCBwYXJ0IG9mIHRoZSBBdGhlbmlhbnMgd2hpY2ggdGhleSBjb3ZlcmVkLCBhbmQgd2hlZWxpbmcgcm91bmQgd2l0aCB0aGVpciBvdmVybGFwcGluZyB3aW5nIGtpbGxlZCBtYW55IG9mIHRoZW0sIGFuZCB0aGVuLCB1bnNjYXRoZWQgYXMgdGhleSB3ZXJlLCBtYXJjaGVkIG9uIHdpdGggbGluZXMgdW5icm9rZW4uIFRoZXkgcGFzc2VkIGJ5IHRoZSBvdGhlciBmb3VyIHRyaWJlcyBvZiB0aGUgQXRoZW5pYW5zIGJlZm9yZSB0aGUgbGF0dGVyIGhhZCByZXR1cm5lZCBmcm9tIHRoZSBwdXJzdWl0LCBzbyB0aGF0IG5vbmUgb2YgdGhlc2Ugd2VyZSBraWxsZWQgZXhjZXB0IHN1Y2ggYXMgZmVsbCBpbiB0aGUgb3JpZ2luYWwgZW5jb3VudGVyLCBhdCB0aGUgaGFuZHMgb2YgdGhlIFRlZ2VhbnM7CjwvdHJhbnNsYXRpb24+"
translation['4.2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5idXQgdGhlIExhY2VkYWVtb25pYW5zIGRpZCBjb21lIHVwb24gdGhlIEFyZ2l2ZXMgYXMgdGhleSB3ZXJlIHJldHVybmluZyBmcm9tIHRoZSBwdXJzdWl0LCBhbmQgd2hlbiB0aGUgZmlyc3QgcG9sZW1hcmNoIHdhcyBhYm91dCB0byBhdHRhY2sgdGhlbSBpbiBmcm9udCwgaXQgaXMgc2FpZCB0aGF0IHNvbWUgb25lIHNob3V0ZWQgb3V0IHRvIGxldCB0aGVpciBmcm9udCByYW5rcyBwYXNzIGJ5LiBXaGVuIHRoaXMgaGFkIGJlZW4gZG9uZSwgdGhleSBzdHJ1Y2sgdGhlbSBvbiB0aGVpciB1bnByb3RlY3RlZCBzaWRlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIG9uIHRoZSByaWdodHIgc2lkZSwgdGhlIHNoaWVsZCBiZWluZyBjYXJyaWVkIG9uIHRoZSBsZWZ0IGFybS48L25vdGU+IGFzIHRoZXkgcmFuIHBhc3QsIGFuZCBraWxsZWQgbWFueSBvZiB0aGVtLiBUaGUgTGFjZWRhZW1vbmlhbnMgYWxzbyBhdHRhY2tlZCB0aGUgQ29yaW50aGlhbnMgYXMgdGhleSB3ZXJlIHJldHVybmluZy4gQW5kLCBmdXJ0aGVybW9yZSwgdGhleSBsaWtld2lzZSBjYW1lIHVwb24gc29tZSBvZiB0aGUgVGhlYmFucyByZXR1cm5pbmcgZnJvbSB0aGUgcHVyc3VpdCwgYW5kIGtpbGxlZCBhIGxhcmdlIG51bWJlciBvZiB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVzZSB0aGluZ3MgaGF2aW5nIHRha2VuIHBsYWNlLCB0aGUgZGVmZWF0ZWQgdHJvb3BzIGF0IGZpcnN0IGZsZWQgdG8gdGhlIHdhbGxzIG9mIENvcmludGg7IGJ1dCBhZnRlcndhcmRzLCBzaW5jZSB0aGUgQ29yaW50aGlhbnMgc2h1dCB0aGVtIG91dCwgdGhleSBlbmNhbXBlZCBhZ2FpbiBpbiB0aGVpciBvbGQgY2FtcC4gVGhlIExhY2VkYWVtb25pYW5zLCBvbiB0aGUgb3RoZXIgaGFuZCwgcmV0dXJuaW5nIHRvIHRoZSBwbGFjZSB3aGVyZSB0aGV5IGZpcnN0IGVuZ2FnZWQgdGhlIGVuZW15LCBzZXQgdXAgYSB0cm9waHkuIFN1Y2gsIHRoZW4sIHdhcyB0aGUgaXNzdWUgb2YgdGhpcyBiYXR0bGUuCjwvdHJhbnNsYXRpb24+"
translation['4.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFud2hpbGUgQWdlc2lsYXVzIHdhcyBodXJyeWluZyBmcm9tIEFzaWEgdG8gdGhlIHJlc2N1ZTsgYW5kIHdoZW4gaGUgd2FzIGF0IEFtcGhpcG9saXMsIERlcmN5bGlkYXMgYnJvdWdodCBoaW0gd29yZCB0aGF0IHRoaXMgdGltZSB0aGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTQiPjM5NCBCLkMuPC9kYXRlPjwvbm90ZT4gTGFjZWRhZW1vbmlhbnMgd2VyZSB2aWN0b3Jpb3VzLCBhbmQgdGhhdCBvbmx5IGVpZ2h0IG9mIHRoZW0gaGFkIGJlZW4ga2lsbGVkLCBidXQgb2YgdGhlIGVuZW15IGEgdmFzdCBudW1iZXI7IGhlIG1hZGUgaXQga25vd24gdG8gaGltLCBob3dldmVyLCB0aGF0IG5vdCBhIGZldyBvZiB0aGUgYWxsaWVzIG9mIHRoZSBMYWNlZGFlbW9uaWFucyBoYWQgYWxzbyBmYWxsZW4uCjxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIEFnZXNpbGF1cyBhc2tlZDog4oCcV291bGQgaXQgbm90IGJlIGFkdmFudGFnZW91cywgRGVyY3lsaWRhcywgaWYgdGhlIGNpdGllcyB3aGljaCBhcmUgc2VuZGluZyB0aGVpciB0cm9vcHMgd2l0aCB1cyBzaG91bGQgbGVhcm4gb2YgdGhlIHZpY3RvcnkgYXMgc3BlZWRpbHkgYXMgcG9zc2libGU/4oCdIERlcmN5bGlkYXMgcmVwbGllZDog4oCcSXQgaXMgY2VydGFpbmx5IGxpa2VseSB0aGF0IHRoZXkgd291bGQgYmUgaW4gYmV0dGVyIHNwaXJpdHMgaWYgdGhleSBoZWFyZCBvZiB0aGlzLuKAnSDigJxUaGVuIGFyZSBub3QgeW91IHRoZSBtYW4gd2hvIGNvdWxkIHJlcG9ydCBpdCBiZXN0LCBzaW5jZSB5b3Ugd2VyZSBwcmVzZW50IGF0IHRoZSBiYXR0bGU/4oCdIEFuZCBEZXJjeWxpZGFzLCBnbGFkIHRvIGhlYXIgdGhpcywgZm9yIGhlIHdhcyBhbHdheXMgZm9uZCBvZiB0cmF2ZWwsIHJlcGxpZWQ6IOKAnElmIHlvdSBzaG91bGQgc28gb3JkZXIu4oCdIOKAnFdlbGwsIEkgZG8s4oCdIHNhaWQgQWdlc2lsYXVzLCDigJxhbmQgSSBiaWQgeW91IGFubm91bmNlLCBmdXJ0aGVyLCB0aGF0IGlmIHRoZSBwcmVzZW50IHVuZGVydGFraW5nIGFsc28gdHVybnMgb3V0IHdlbGwsIHdlIHNoYWxsIGNvbWUgYmFjayBhZ2FpbiwgZXZlbiBhcyB3ZSBzYWlkLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFjY29yZGluZ2x5IERlcmN5bGlkYXMgc2V0IG91dCBhdCBvbmNlIGZvciB0aGUgSGVsbGVzcG9udC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIEFnZXNpbGF1cywgcGFzc2luZyB0aHJvdWdoIE1hY2Vkb25pYSwgYXJyaXZlZCBpbiBUaGVzc2FseS4gVGhlbiB0aGUgTGFyaXNhZWFucywgQ3Jhbm5vbmlhbnMsIFNjb3R1c3NhZWFucywgYW5kIFBoYXJzYWxpYW5zLCB3aG8gd2VyZSBhbGxpZXMgb2YgdGhlIEJvZW90aWFucywgYW5kIGluIGZhY3QgYWxsIHRoZSBUaGVzc2FsaWFucyBleGNlcHQgdGhvc2Ugb2YgdGhlbSB3aG8gY2hhbmNlZCBhdCB0aGF0IHRpbWUgdG8gYmUgZXhpbGVzLCBmb2xsb3dlZCBhZnRlciBoaW0gYW5kIGtlcHQgbW9sZXN0aW5nIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['4.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBmb3IgYSB0aW1lIGhlIGxlZCB0aGUgYXJteSBpbiBhIGhvbGxvdyBzcXVhcmUsIHdpdGggb25lIGhhbGYgb2YgdGhlIGhvcnNlbWVuIGluIGZyb250IGFuZCB0aGUgb3RoZXIgaGFsZiBhdCB0aGUgcmVhcjsgYnV0IHdoZW4gdGhlIFRoZXNzYWxpYW5zLCBieSBjaGFyZ2luZyB1cG9uIHRob3NlIHdobyB3ZXJlIGJlaGluZCwga2VwdCBpbnRlcmZlcmluZyB3aXRoIGhpcyBwcm9ncmVzcywgaGUgc2VudCBhbG9uZyB0byB0aGUgcmVhciB0aGUgdmFuZ3VhcmQgb2YgaG9yc2VtZW4gYWxzbywgZXhjZXB0IHRob3NlIGFib3V0IGhpcyBvd24gcGVyc29uLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGVuIHRoZSB0d28gZm9yY2VzIGhhZCBmb3JtZWQgaW4gbGluZSBvZiBiYXR0bGUgYWdhaW5zdCBvbmUgYW5vdGhlciwgdGhlIFRoZXNzYWxpYW5zLCB0aGlua2luZyB0aGF0IGl0IHdhcyBub3QgZXhwZWRpZW50IHRvIGVuZ2FnZSBhcyBjYXZhbHJ5IGluIGEgYmF0dGxlIHdpdGggaG9wbGl0ZXMsIHR1cm5lZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NCI+Mzk0IEIuQy48L2RhdGU+PC9ub3RlPiByb3VuZCBhbmQgc2xvd2x5IHJldGlyZWQuCjxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGUgR3JlZWtzIHZlcnkgY2F1dGlvdXNseSBmb2xsb3dlZCB0aGVtLiBBZ2VzaWxhdXMsIGhvd2V2ZXIsIHBlcmNlaXZpbmcgdGhlIG1pc3Rha2VzIHdoaWNoIGVhY2ggc2lkZSB3YXMgbWFraW5nLCBzZW50IHRoZSB2ZXJ5IHN0YWx3YXJ0IGhvcnNlbWVuIHdobyB3ZXJlIGFib3V0IGhpcyBwZXJzb24gYW5kIG9yZGVyZWQgdGhlbSBub3Qgb25seSB0byBnaXZlIHdvcmQgdG8gdGhlIG90aGVycyB0byBwdXJzdWUgd2l0aCBhbGwgc3BlZWQsIGJ1dCB0byBkbyBsaWtld2lzZSB0aGVtc2VsdmVzLCBhbmQgbm90IHRvIGdpdmUgdGhlIFRoZXNzYWxpYW5zIGEgY2hhbmNlIHRvIGZhY2Ugcm91bmQgYWdhaW4uCjwvdHJhbnNsYXRpb24+"
translation['4.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZSBUaGVzc2FsaWFucyBzYXcgdGhlbSBydXNoaW5nIHVwb24gdGhlbSB1bmV4cGVjdGVkbHksIHNvbWUgb2YgdGhlbSBmbGVkLCBvdGhlcnMgdHVybmVkIGFib3V0LCBhbmQgb3RoZXJzLCBpbiB0cnlpbmcgdG8gZG8gdGhpcywgd2VyZSBjYXB0dXJlZCB3aGlsZSB0aGVpciBob3JzZXMgd2VyZSB0dXJuZWQgaGFsZiByb3VuZC4KPC90cmFuc2xhdGlvbj4="
translation['4.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBQb2x5Y2hhcm11cyB0aGUgUGhhcnNhbGlhbiwgd2hvIHdhcyB0aGUgY29tbWFuZGVyIG9mIHRoZSBjYXZhbHJ5LCB0dXJuZWQgcm91bmQgYW5kIGZlbGwgZmlnaHRpbmcsIHRvZ2V0aGVyIHdpdGggdGhvc2UgYWJvdXQgaGltLiBXaGVuIHRoaXMgaGFwcGVuZWQsIHRoZXJlIGZvbGxvd2VkIGEgaGVhZGxvbmcgZmxpZ2h0IG9uIHRoZSBwYXJ0IG9mIHRoZSBUaGVzc2FsaWFucywgc28gdGhhdCBzb21lIG9mIHRoZW0gd2VyZSBraWxsZWQgYW5kIG90aGVycyB3ZXJlIGNhcHR1cmVkLiBBdCBhbGwgZXZlbnRzIHRoZXkgZGlkIG5vdCBzdG9wIHVudGlsIHRoZXkgaGFkIGFycml2ZWQgYXQgTW91bnQgTmFydGhhY2l1bS4KPC90cmFuc2xhdGlvbj4="
translation['4.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoYXQgZGF5LCBhY2NvcmRpbmdseSwgQWdlc2lsYXVzIHNldCB1cCBhIHRyb3BoeSBiZXR3ZWVuIFByYXMgYW5kIE5hcnRoYWNpdW0gYW5kIHJlbWFpbmVkIG9uIHRoZSBmaWVsZCBvZiBiYXR0bGUsIGdyZWF0bHkgcGxlYXNlZCB3aXRoIGhpcyBleHBsb2l0LCBpbiB0aGF0IGhlIGhhZCBiZWVuIHZpY3RvcmlvdXMsIG92ZXIgdGhlIHBlb3BsZSB3aG8gcHJpZGUgdGhlbXNlbHZlcyBwYXJ0aWN1bGFybHkgdXBvbiB0aGVpciBob3JzZW1hbnNoaXAsIHdpdGggdGhlIGNhdmFscnkgdGhhdCBoZSBoYWQgaGltc2VsZiBnYXRoZXJlZCB0b2dldGhlci4gQW5kIG9uIHRoZSBmb2xsb3dpbmcgZGF5IGhlIGNyb3NzZWQgdGhlIEFjaGFlYW4gbW91bnRhaW5zIG9mIFBodGhpYSBhbmQgbWFyY2hlZCBvbiB0aHJvdWdoIGEgZnJpZW5kbHkgY291bnRyeSBhbGwgdGhlIHJlc3Qgb2YgdGhlIHdheSwgZXZlbiB0byB0aGUgYm91bmRhcmllcyBvZiB0aGUgQm9lb3RpYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBoZSB3YXMgYXQgdGhlIGVudHJhbmNlIHRvIEJvZW90aWEsIHRoZSBzdW4gc2VlbWVkIHRvIGFwcGVhciBjcmVzY2VudC1zaGFwZWQsIGFuZCB3b3JkIHdhcyBicm91Z2h0IHRvIGhpbSB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyBoYWQgYmVlbiBkZWZlYXRlZCBpbiB0aGUgbmF2YWwgYmF0dGxlIGFuZCB0aGUgYWRtaXJhbCwgUGVpc2FuZGVyLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DcC4gSUlJLiBpdi4gMjkuPC9ub3RlPiBoYWQgYmVlbiBraWxsZWQuIEl0IHdhcyBhbHNvIHN0YXRlZCBpbiB3aGF0IHdheSB0aGUgYmF0dGxlIGhhZCBiZWVuIGZvdWdodC4KPC90cmFuc2xhdGlvbj4="
translation['4.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaXQgd2FzIG5lYXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTQiPjM5NCBCLkMuPC9kYXRlPjwvbm90ZT4gQ25pZG9zIHRoYXQgdGhlIGZsZWV0cyBzYWlsZWQgYWdhaW5zdCBvbmUgYW5vdGhlciwgYW5kIFBoYXJuYWJhenVzLCB3aG8gd2FzIGFkbWlyYWwsIHdhcyB3aXRoIHRoZSBQaG9lbmljaWFuIHNoaXBzLCB3aGlsZSBDb25vbjxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q3AuIElJLiBpLiAyOS4gVGhyb3VnaCB0aGUgaW5mbHVlbmNlIG9mIFBoYXJuYWJhenVzLCBDb25vbiBoYWQgYmVlbiBjb21taXNzaW9uZWQgYSBQZXJzaWFuIGFkbWlyYWwuIEhpcyBmbGVldCB3YXMg4oCcR3JlZWvigJ0gbWVyZWx5IGluIHRoZSBzZW5zZSB0aGF0IGl0IHdhcyBtYW5uZWQgYnkgR3JlZWsgbWVyY2VuYXJpZXMgYW5kIHZvbHVudGVlcnMuPC9ub3RlPiB3aXRoIHRoZSBHcmVlayBmbGVldCB3YXMgcG9zdGVkIGluIGZyb250IG9mIGhpbS4KPC90cmFuc2xhdGlvbj4="
translation['4.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBQZWlzYW5kZXIsIGluIHNwaXRlIG9mIGhpcyBzaGlwcyBiZWluZyBjbGVhcmx5IGZld2VyIHRoYW4gdGhlIEdyZWVrIHNoaXBzIHVuZGVyIENvbm9uLCBoYWQgZm9ybWVkIGhpcyBsaW5lIG9mIGJhdHRsZSBhZ2FpbnN0IHRoZW0sIGhpcyBhbGxpZXMgb24gdGhlIGxlZnQgd2luZyBpbW1lZGlhdGVseSBmbGVkLCBhbmQgaGUgaGltc2VsZiwgYWZ0ZXIgY29taW5nIHRvIGNsb3NlIGVuY291bnRlciB3aXRoIHRoZSBlbmVteSwgd2FzIGRyaXZlbiBhc2hvcmUsIGhpcyB0cmlyZW1lIGRhbWFnZWQgYnkgdGhlIGVuZW15J3MgYmVha3M7IGFuZCBhbGwgdGhlIG90aGVycyB3aG8gd2VyZSBkcml2ZW4gYXNob3JlIGFiYW5kb25lZCB0aGVpciBzaGlwcyBhbmQgbWFkZSB0aGVpciBlc2NhcGUgYXMgYmVzdCB0aGV5IGNvdWxkIHRvIENuaWRvcywgYnV0IGhlIGZlbGwgZmlnaHRpbmcgb24gYm9hcmQgaGlzIHNoaXAuCjwvdHJhbnNsYXRpb24+"
translation['4.3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgQWdlc2lsYXVzLCBvbiBsZWFybmluZyB0aGVzZSB0aGluZ3MsIGF0IGZpcnN0IHdhcyBvdmVyY29tZSB3aXRoIHNvcnJvdzsgYnV0IHdoZW4gaGUgaGFkIGNvbnNpZGVyZWQgdGhhdCB0aGUgbW9zdCBvZiBoaXMgdHJvb3BzIHdlcmUgdGhlIHNvcnQgb2YgbWVuIHRvIHNoYXJlIGdsYWRseSBpbiBnb29kIGZvcnR1bmUgaWYgZ29vZCBmb3J0dW5lIGNhbWUsIGJ1dCB0aGF0IGlmIHRoZXkgc2F3IGFueXRoaW5nIHVucGxlYXNhbnQsIHRoZXkgd2VyZSB1bmRlciBubyBjb21wdWxzaW9uIHRvIHNoYXJlIGluIGl0LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JLmUuLCBiZWluZyBwcmFjdGljYWxseSB2b2x1bnRlZXJzIChjcC4gaWkuIDQpLjwvbm90ZT7igJR0aGVyZXVwb24sIGNoYW5naW5nIHRoZSByZXBvcnQsIGhlIHNhaWQgdGhhdCB3b3JkIGhhZCBjb21lIHRoYXQgUGVpc2FuZGVyIHdhcyBkZWFkLCBidXQgdmljdG9yaW91cyBpbiB0aGUgbmF2YWwgYmF0dGxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYXQgdGhlIG1vbWVudCBvZiBzYXlpbmcgdGhlc2UgdGhpbmdzIGhlIG9mZmVyZWQgc2FjcmlmaWNlIGFzIGlmIGZvciBnb29kIG5ld3MsIGFuZCBzZW50IGFyb3VuZCB0byBtYW55IHBlb3BsZSBwb3J0aW9ucyBvZiB0aGUgdmljdGltcyB3aGljaCBoYWQgYmVlbiBvZmZlcmVkOyBzbyB0aGF0IHdoZW4gYSBza2lybWlzaCB3aXRoIHRoZSBlbmVteSB0b29rIHBsYWNlLCB0aGUgdHJvb3BzIG9mIEFnZXNpbGF1cyB3b24gdGhlIGRheSBpbiBjb25zZXF1ZW5jZSBvZiB0aGUgcmVwb3J0IHRoYXQgdGhlIExhY2VkYWVtb25pYW5zIHdlcmUgdmljdG9yaW91cyBpbiB0aGUgbmF2YWwgYmF0dGxlLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhvc2Ugd2hvIHdlcmUgbm93IGRyYXduIHVwIGFnYWluc3QgQWdlc2lsYXVzIHdlcmUgdGhlIEJvZW90aWFucywgQXRoZW5pYW5zLCBBcmdpdmVzLCBDb3JpbnRoaWFucywgQWVuaWFuaWFucywgRXVib2VhbnMsIGFuZCBib3RoPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkNwLiBpaS4gMTcuPC9ub3RlPiB0aGUgTG9jcmlhbiBwZW9wbGVzOyB3aGlsZSB3aXRoIEFnZXNpbGF1cyB3YXMgYSByZWdpbWVudCBvZiBMYWNlZGFlbW9uaWFucyB3aGljaCBoYWQgY3Jvc3NlZCBvdmVyIGZyb20gQ29yaW50aCwgaGFsZjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NCI+Mzk0IEIuQy48L2RhdGU+PC9ub3RlPiBvZiB0aGUgcmVnaW1lbnQgZnJvbSBPcmNob21lbnVzLCBmdXJ0aGVybW9yZSB0aGUgZW1hbmNpcGF0ZWQgSGVsb3RzIGZyb20gTGFjZWRhZW1vbiB3aG8gaGFkIG1hZGUgdGhlIGV4cGVkaXRpb24gd2l0aCBoaW0sIGJlc2lkZXMgdGhlc2UgdGhlIGZvcmVpZ24gY29udGluZ2VudCB3aGljaCBIZXJpcHBpZGFzIGNvbW1hbmRlZCwgYW5kLCBmdXJ0aGVybW9yZSwgdGhlIHRyb29wcyBmcm9tIHRoZSBHcmVlayBjaXRpZXMgaW4gQXNpYSBhbmQgZnJvbSBhbGwgdGhvc2UgY2l0aWVzIGluIEV1cm9wZSB3aGljaCBoZSBoYWQgYnJvdWdodCBvdmVyIGFzIGhlIHBhc3NlZCB0aHJvdWdoIHRoZW07IGFuZCBmcm9tIHRoZSBpbW1lZGlhdGUgbmVpZ2hib3VyaG9vZCB0aGVyZSBjYW1lIHRvIGhpbSBob3BsaXRlcyBvZiB0aGUgT3JjaG9tZW5pYW5zIGFuZCBQaG9jaWFucy4gQXMgZm9yIHBlbHRhc3RzLCB0aG9zZSB3aXRoIEFnZXNpbGF1cyB3ZXJlIGZhciBtb3JlIG51bWVyb3VzOyBvbiB0aGUgb3RoZXIgaGFuZCwgdGhlIGhvcnNlbWVuIG9mIGVpdGhlciBzaWRlIHdlcmUgYWJvdXQgZXF1YWwgaW4gbnVtYmVyLgo8ZGF0ZSBhdXRobmFtZT0iLTM5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NCI+Mzk0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['4.3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzLCB0aGVuLCB3YXMgdGhlIGZvcmNlIG9uIGJvdGggc2lkZXM7IGFuZCBJIHdpbGwgYWxzbyBkZXNjcmliZSB0aGUgYmF0dGxlLCBhbmQgaG93IGl0IHByb3ZlZCB0byBiZSBsaWtlIG5vIG90aGVyIG9mIHRoZSBiYXR0bGVzIG9mIG91ciB0aW1lLiBUaGV5IG1ldCBvbiB0aGUgcGxhaW4gb2YgQ29yb25lYSwgdGhvc2Ugd2l0aCBBZ2VzaWxhdXMgY29taW5nIGZyb20gdGhlIENlcGhpc3VzLCBhbmQgdGhvc2Ugd2l0aCB0aGUgVGhlYmFucyBmcm9tIE1vdW50IEhlbGljb24uIEFuZCBBZ2VzaWxhdXMgb2NjdXBpZWQgdGhlIHJpZ2h0IHdpbmcgb2YgdGhlIGFybXkgdW5kZXIgaGlzIGNvbW1hbmQsIHdoaWxlIHRoZSBPcmNob21lbmlhbnMgd2VyZSBhdCB0aGUgZXh0cmVtZSBlbmQgb2YgaGlzIGxlZnQgd2luZy4gT24gdGhlIG90aGVyIHNpZGUsIHRoZSBUaGViYW5zIHRoZW1zZWx2ZXMgd2VyZSBvbiB0aGUgcmlnaHQgYW5kIHRoZSBBcmdpdmVzIG9jY3VwaWVkIHRoZWlyIGxlZnQgd2luZy4KPC90cmFuc2xhdGlvbj4="
translation['4.3.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGFzIHRoZSBvcHBvc2luZyBhcm1pZXMgd2VyZSBjb21pbmcgdG9nZXRoZXIsIHRoZXJlIHdhcyBkZWVwIHNpbGVuY2UgZm9yIGEgdGltZSBpbiBib3RoIGxpbmVzOyBidXQgd2hlbiB0aGV5IHdlcmUgZGlzdGFudCBmcm9tIG9uZSBhbm90aGVyIGFib3V0IGEgc3RhZGl1bSwgdGhlIFRoZWJhbnMgcmFpc2VkIHRoZSB3YXItY3J5IGFuZCBydXNoZWQgdG8gY2xvc2UgcXVhcnRlcnMgb24gdGhlIHJ1bi4gV2hlbiwgaG93ZXZlciwgdGhlIGRpc3RhbmNlIGJldHdlZW4gdGhlIGFybWllcyB3YXMgc3RpbGwgYWJvdXQgdGhyZWUgcGxldGhyYSwgdGhlIHRyb29wcyB3aG9tIEhlcmlwcGlkYXMgY29tbWFuZGVkLCBhbmQgd2l0aCB0aGVtIHRoZSBJb25pYW5zLCBBZW9saWFucywgYW5kIEhlbGxlc3BvbnRpbmVzLCByYW4gZm9ydGggaW4gdGhlaXIgdHVybiBmcm9tIHRoZSBwaGFsYW54IG9mIEFnZXNpbGF1cywgYW5kIHRoZSB3aG9sZSBtYXNzIGpvaW5lZCBpbiB0aGUgY2hhcmdlIGFuZCwgd2hlbiB0aGV5IGNhbWUgd2l0aGluIHNwZWFyIHRocnVzdCwgcHV0IHRvIGZsaWdodCB0aGUgZm9yY2UgaW4gdGhlaXIgZnJvbnQuIEFzIGZvciB0aGUgQXJnaXZlcywgdGhleTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NCI+Mzk0IEIuQy48L2RhdGU+PC9ub3RlPiBkaWQgbm90IGF3YWl0IHRoZSBhdHRhY2sgb2YgdGhlIGZvcmNlcyBvZiBBZ2VzaWxhdXMsIGJ1dCBmbGVkIHRvIE1vdW50IEhlbGljb24uCjxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.3.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gc29tZSBvZiB0aGUgbWVyY2VuYXJpZXMgd2VyZSBhbHJlYWR5IGdhcmxhbmRpbmcgQWdlc2lsYXVzLCB3aGVuIGEgbWFuIGJyb3VnaHQgaGltIHdvcmQgdGhhdCB0aGUgVGhlYmFucyBoYWQgY3V0IHRoZWlyIHdheSB0aHJvdWdoIHRoZSBPcmNob21lbmlhbnMgYW5kIHdlcmUgaW4gYW1vbmcgdGhlIGJhZ2dhZ2UgdHJhaW4uIEFuZCBoZSBpbW1lZGlhdGVseSB3aGVlbGVkIGhpcyBwaGFsYW54IGFuZCBsZWQgdGhlIGFkdmFuY2UgYWdhaW5zdCB0aGVtOyBidXQgdGhlIFRoZWJhbnMgb24gdGhlaXIgc2lkZSwgd2hlbiB0aGV5IHNhdyB0aGF0IHRoZWlyIGFsbGllcyBoYWQgdGFrZW4gcmVmdWdlIGF0IE1vdW50IEhlbGljb24sIHdpc2hpbmcgdG8gYnJlYWsgdGhyb3VnaCB0byBqb2luIHRoZWlyIG93biBmcmllbmRzLCBtYXNzZWQgdGhlbXNlbHZlcyB0b2dldGhlciBhbmQgY2FtZSBvbiBzdG91dGx5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyBwb2ludCBvbmUgbWF5IHVucXVlc3Rpb25hYmx5IGNhbGwgQWdlc2lsYXVzIGNvdXJhZ2VvdXM7IGF0IGxlYXN0IGhlIGNlcnRhaW5seSBkaWQgbm90IGNob29zZSB0aGUgc2FmZXN0IGNvdXJzZS4gRm9yIHdoaWxlIGhlIG1pZ2h0IGhhdmUgbGV0IHRoZSBtZW4gcGFzcyBieSB3aG8gd2VyZSB0cnlpbmcgdG8gYnJlYWsgdGhyb3VnaCBhbmQgdGhlbiBoYXZlIGZvbGxvd2VkIHRoZW0gYW5kIG92ZXJjb21lIHRob3NlIGluIHRoZSByZWFyLCBoZSBkaWQgbm90IGRvIHRoaXMsIGJ1dCBjcmFzaGVkIGFnYWluc3QgdGhlIFRoZWJhbnMgZnJvbnQgdG8gZnJvbnQ7IGFuZCBzZXR0aW5nIHNoaWVsZHMgYWdhaW5zdCBzaGllbGRzIHRoZXkgc2hvdmVkLCBmb3VnaHQsIGtpbGxlZCwgYW5kIHdlcmUga2lsbGVkLiBGaW5hbGx5LCBzb21lIG9mIHRoZSBUaGViYW5zIGJyb2tlIHRocm91Z2ggYW5kIHJlYWNoZWQgTW91bnQgSGVsaWNvbiwgYnV0IG1hbnkgd2VyZSBraWxsZWQgd2hpbGUgbWFraW5nIHRoZWlyIHdheSB0aGl0aGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiB0aGUgdmljdG9yeSBoYWQgZmFsbGVuIHRvIEFnZXNpbGF1cyBhbmQgaGUgaGltc2VsZiBoYWQgYmVlbiBjYXJyaWVkLCB3b3VuZGVkLCB0byB0aGUgcGhhbGFueCwgc29tZSBvZiB0aGUgaG9yc2VtZW4gcm9kZSB1cCBhbmQgdG9sZCBoaW0gdGhhdCBhYm91dCBlaWdodHkgb2YgdGhlIGVuZW15LCBzdGlsbCBhcm1lZCwgaGFkIHRha2VuIHNoZWx0ZXIgaW4gdGhlIHRlbXBsZSBvZiBBdGhlbmEsIGFuZCBhc2tlZCBoaW0gd2hhdCB0aGV5IHNob3VsZCBkby4gQW5kIGhlLCBhbHRob3VnaCBoZSBoYWQgcmVjZWl2ZWQgbWFueSB3b3VuZHMsIG5ldmVydGhlbGVzcyBkaWQgbm90IGZvcmdldCB0aGUgZGVpdHksIGJ1dCBvcmRlcmVkIHRoZW0gdG8gYWxsb3cgdGhlc2UgbWVuIHRvIGdvIGF3YXkgd2hpdGhlcnNvZXZlciB0aGV5IHdpc2hlZCwgYW5kIHdvdWxkIHBlcm1pdCB0aGVtIHRvIGNvbW1pdCBubyB3cm9uZy4gVGhlbuKAlGl0IHdhcyBhbHJlYWR5IGxhdGXigJR0aGV5IHRvb2sgZGlubmVyIGFuZCBsYXkgZG93biB0byByZXN0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaW4gdGhlIG1vcm5pbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTQiPjM5NCBCLkMuPC9kYXRlPjwvbm90ZT4gQWdlc2lsYXVzIGdhdmUgb3JkZXJzIHRoYXQgR3lsaXMsIHRoZSBwb2xlbWFyY2gsIHNob3VsZCBkcmF3IHVwIHRoZSBhcm15IGluIGxpbmUgb2YgYmF0dGxlIGFuZCBzZXQgdXAgYSB0cm9waHksIHRoYXQgYWxsIHNob3VsZCBkZWNrIHRoZW1zZWx2ZXMgd2l0aCBnYXJsYW5kcyBpbiBob25vdXIgb2YgdGhlIGdvZCw8ZGF0ZSBhdXRobmFtZT0iLTM5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NCI+Mzk0IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBEb3JpYW4gQXBvbGxvLjwvbm90ZT4gYW5kIHRoYXQgYWxsIHRoZSBmbHV0ZS1wbGF5ZXJzIHNob3VsZCBwbGF5LiBBbmQgdGhleSBkaWQgdGhlc2UgdGhpbmdzLiBUaGUgVGhlYmFucywgaG93ZXZlciwgc2VudCBoZXJhbGRzIGFza2luZyB0byBidXJ5IHRoZWlyIGRlYWQgdW5kZXIgYSB0cnVjZS4gSW4gdGhpcyB3YXksIGFjY29yZGluZ2x5LCB0aGUgdHJ1Y2Ugd2FzIG1hZGUsIGFuZCBBZ2VzaWxhdXMgd2VudCB0byBEZWxwaGkgYW5kIG9mZmVyZWQgdG8gdGhlIGdvZCBhIHRpdGhlIG9mIHRoZSBhbW91bnQgZGVyaXZlZCBmcm9tIGhpcyBib290eSwgYW4gb2ZmZXJpbmcgb2Ygbm90IGxlc3MgdGhhbiBvbmUgaHVuZHJlZCB0YWxlbnRzOyBidXQgR3lsaXMsIHRoZSBwb2xlbWFyY2gsIHdpdGhkcmV3IHdpdGggdGhlIGFybXkgdG8gUGhvY2lzIGFuZCBmcm9tIHRoZXJlIG1hZGUgYW4gaW52YXNpb24gb2YgTG9jcmlzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.3.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZm9yIG1vc3Qgb2YgdGhlIGRheSB0aGUgc29sZGllcnMgYnVzaWVkIHRoZW1zZWx2ZXMgaW4gY2Fycnlpbmcgb2ZmIHBvcnRhYmxlIHByb3BlcnR5IGFuZCBwcm92aXNpb25zIGZyb20gdGhlIHZpbGxhZ2VzOyBidXQgd2hlbiBpdCB3YXMgdG93YXJkcyBldmVuaW5nIGFuZCB0aGV5IHdlcmUgd2l0aGRyYXdpbmcsIHRoZSBMYWNlZGFlbW9uaWFucyBiZWluZyBpbiB0aGUgcmVhciwgdGhlIExvY3JpYW5zIGZvbGxvd2VkIGFmdGVyIHRoZW0gdGhyb3dpbmcgc3RvbmVzIGFuZCBqYXZlbGlucy4gQW5kIHdoZW4gdGhlIExhY2VkYWVtb25pYW5zLCB0dXJuaW5nIGFib3V0IGFuZCBzZXR0aW5nIG91dCBpbiBwdXJzdWl0LCBoYWQgc3RydWNrIGRvd24gc29tZSBvZiB0aGVtLCBhZnRlciB0aGF0LCBhbHRob3VnaCB0aGUgTG9jcmlhbnMgbm8gbG9uZ2VyIGZvbGxvd2VkIGluIHRoZWlyIHJlYXIsIHRoZXkgdGhyZXcgbWlzc2lsZXMgdXBvbiB0aGVtIGZyb20gdGhlIGhlaWdodHMgdXBvbiB0aGVpciByaWdodC4KPC90cmFuc2xhdGlvbj4="
translation['4.3.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZSBMYWNlZGFlbW9uaWFucyBhZ2FpbiB1bmRlcnRvb2sgdG8gcHVyc3VlIHRoZW0sIGV2ZW4gdXAgdGhlIHNsb3BlOyBidXQgc2luY2UgZGFya25lc3Mgd2FzIGNvbWluZyBvbiBhbmQsIGFzIHRoZXkgd2VyZSByZXRpcmluZyBmcm9tIHRoZSBwdXJzdWl0LCBzb21lIG9mIHRoZW0gZmVsbCBvbiBhY2NvdW50IG9mIHRoZSByb3VnaG5lc3Mgb2YgdGhlIGNvdW50cnksIG90aGVycyBiZWNhdXNlIHRoZXkgY291bGQgbm90IHNlZSB3aGF0IHdhcyBhaGVhZCBvZiB0aGVtLCBhbmQgc3RpbGwgb3RoZXJzIGZyb20gdGhlIG1pc3NpbGVzIG9mIHRoZSBlbmVteSwgdW5kZXIgdGhlc2UgY2lyY3Vtc3RhbmNlcyBHeWxpcywgdGhlIHBvbGVtYXJjaCwgYW5kIFBlbGxlcywgb25lIG9mIGhpcyBjb21yYWRlcywgd2VyZSBzbGFpbiwgYW5kIGluIGFsbCBhYm91dCBlaWdodGVlbiBvZiB0aGUgU3BhcnRpYXRhZSwgc29tZSBieSBiZWluZyBzdG9uZWQgdG8gZGVhdGgsIHNvbWUgYnkgamF2ZWxpbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NCI+Mzk0IEIuQy48L2RhdGU+PC9ub3RlPiB3b3VuZHMuIEFuZCBpZiBzb21lIG9mIHRob3NlIHdobyB3ZXJlIGluIHRoZSBjYW1wIGF0IGRpbm5lciBoYWQgbm90IGNvbWUgdG8gdGhlaXIgYWlkLCBhbGwgb2YgdGhlbSB3b3VsZCBoYXZlIGJlZW4gaW4gZGFuZ2VyIG9mIHBlcmlzaGluZy4KPGRhdGUgYXV0aG5hbWU9Ii0zOTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTQiPjM5NCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZSB2YXJpb3VzIGNvbnRpbmdlbnRzIG9mIHRoZSBhcm15IHdlcmUgZGlzbWlzc2VkIHRvIHRoZWlyIHNldmVyYWwgY2l0aWVzIGFuZCBBZ2VzaWxhdXMgYWxzbyBzYWlsZWQgYmFjayBob21lLiBBbmQgZnJvbSB0aGF0IHRpbWUgb24gdGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzkzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkzIj4zOTMgQi5DLjwvZGF0ZT48L25vdGU+IEF0aGVuaWFucywgQm9lb3RpYW5zLCBBcmdpdmVzLCBhbmQgdGhlaXIgYWxsaWVzIGNvbnRpbnVlZCB0aGUgd2FyLCBtYWtpbmcgQ29yaW50aCB0aGVpciBiYXNlLCBhbmQgdGhlIExhY2VkYWVtb25pYW5zIGFuZCB0aGVpciBhbGxpZXMgZnJvbSBTaWN5b24uIEFzIHRoZSBDb3JpbnRoaWFucywgaG93ZXZlciwgc2F3IHRoYXQgdGhlaXIgb3duIGxhbmQgd2FzIGJlaW5nIGxhaWQgd2FzdGUgYW5kIHRoYXQgbWFueSBvZiB0aGVtIHdlcmUgYmVpbmcga2lsbGVkIGJlY2F1c2UgdGhleSB3ZXJlIGNvbnRpbnVhbGx5IG5lYXIgdGhlIGVuZW15LCB3aGlsZSB0aGUgcmVzdCBvZiB0aGUgYWxsaWVzIHdlcmUgbGl2aW5nIGluIHBlYWNlIHRoZW1zZWx2ZXMgYW5kIHRoZWlyIGxhbmRzIHdlcmUgdW5kZXIgY3VsdGl2YXRpb24sIHRoZSBtb3N0IGFuZCBiZXN0IG9mIHRoZW0gY2FtZSB0byBkZXNpcmUgcGVhY2UsIGFuZCB1bml0aW5nIHRvZ2V0aGVyIHVyZ2VkIHRoaXMgY291cnNlIHVwb24gb25lIGFub3RoZXIuCjxkYXRlIGF1dGhuYW1lPSItMzkzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkzIj4zOTMgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGUgQXJnaXZlcywgQXRoZW5pYW5zLCBCb2VvdGlhbnMsIGFuZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MiI+MzkyIEIuQy48L2RhdGU+PC9ub3RlPiB0aG9zZSBhbW9uZyB0aGUgQ29yaW50aGlhbnMgd2hvIGhhZCByZWNlaXZlZCBhIHNoYXJlIG9mIHRoZSBtb25leSBmcm9tIHRoZSBLaW5nLCBhcyB3ZWxsIGFzIHRob3NlIHdobyBoYWQgbWFkZSB0aGVtc2VsdmVzIGNoaWVmbHkgcmVzcG9uc2libGUgZm9yIHRoZSB3YXIsIHJlYWxpemluZyB0aGF0IGlmIHRoZXkgZGlkIG5vdCBwdXQgb3V0IG9mIHRoZSB3YXkgdGhlIHBlb3BsZSB3aG8gaGFkIHR1cm5lZCB0b3dhcmQgcGVhY2UsIHRoZSBzdGF0ZSB3b3VsZCBiZSBpbiBkYW5nZXIgb2YgZ29pbmcgb3ZlciB0byB0aGUgTGFjZWRhZW1vbmlhbnMgYWdhaW4sIHVuZGVydG9vaywgdW5kZXIgdGhlc2UgY2lyY3Vtc3RhbmNlcywgdG8gYnJpbmcgYWJvdXQgYSBnZW5lcmFsIG1hc3NhY3JlLiBBbmQgaW4gdGhlIGZpcnN0IHBsYWNlLCB0aGV5IGRldmlzZWQgdGhlIG1vc3Qgc2FjcmlsZWdpb3VzIG9mIGFsbCBzY2hlbWVzOyBmb3Igb3RoZXIgcGVvcGxlLCBldmVuIGlmIGEgbWFuIGlzIGNvbmRlbW5lZCBieSBwcm9jZXNzIG9mIGxhdywgZG8gbm90IHB1dCBoaW0gdG8gZGVhdGggZHVyaW5nIGEgcmVsaWdpb3VzIGZlc3RpdmFsOyBidXQgdGhlc2UgbWVuIGNob3NlIHRoZSBsYXN0IGRheSBvZiB0aGUgRXVjbGVhLDxkYXRlIGF1dGhuYW1lPSItMzkyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkyIj4zOTIgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGZlc3RpdmFsIG9mIEFydGVtaXMgRXVjbGVhLjwvbm90ZT4gYmVjYXVzZSB0aGV5IHRob3VnaHQgdGhleSB3b3VsZCBjYXRjaCBtb3JlIHBlb3BsZSBpbiB0aGUgbWFya2V0LXBsYWNlLCBzbyBhcyB0byBraWxsIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['4.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gYWdhaW4sIHdoZW4gdGhlIHNpZ25hbCB3YXMgZ2l2ZW4gdG8gdGhvc2Ugd2hvIGhhZCBiZWVuIHRvbGQgd2hvbSB0aGV5IHdlcmUgdG88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTIiPjM5MiBCLkMuPC9kYXRlPjwvbm90ZT4ga2lsbCwgdGhleSBkcmV3IHRoZWlyIHN3b3JkcyBhbmQgc3RydWNrIG1lbiBkb3duLOKAlG9uZSB3aGlsZSBzdGFuZGluZyBpbiBhIHNvY2lhbCBncm91cCwgYW5vdGhlciB3aGlsZSBzaXR0aW5nIGluIGhpcyBzZWF0LCBzdGlsbCBhbm90aGVyIGluIHRoZSB0aGVhdHJlLCBhbmQgYW5vdGhlciBldmVuIHdoaWxlIGhlIHdhcyBzaXR0aW5nIGFzIGp1ZGdlIGluIGEgZHJhbWF0aWMgY29udGVzdC4gTm93IHdoZW4gdGhlIHNpdHVhdGlvbiBiZWNhbWUga25vd24sIHRoZSBiZXR0ZXIgY2xhc3NlcyBpbW1lZGlhdGVseSBmbGVkLCBpbiBwYXJ0IHRvIHRoZSBzdGF0dWVzIG9mIHRoZSBnb2RzIGluIHRoZSBtYXJrZXQtcGxhY2UsIGluIHBhcnQgdG8gdGhlIGFsdGFyczsgdGhlbiB0aGUgY29uc3BpcmF0b3JzLCB1dHRlcmx5IHNhY3JpbGVnaW91cyBhbmQgd2l0aG91dCBzbyBtdWNoIGFzIGEgc2luZ2xlIHRob3VnaHQgZm9yIGNpdmlsaXplZCB1c2FnZSwgYm90aCB0aG9zZSB3aG8gZ2F2ZSB0aGUgb3JkZXJzIGFuZCB0aG9zZSB3aG8gb2JleWVkLCBrZXB0IHVwIHRoZSBzbGF1Z2h0ZXIgZXZlbiBhdCB0aGUgaG9seSBwbGFjZXMsIHNvIHRoYXQgc29tZSBldmVuIGFtb25nIHRob3NlIHdobyB3ZXJlIG5vdCB2aWN0aW1zIG9mIHRoZSBhdHRhY2ssIGJlaW5nIHJpZ2h0LW1pbmRlZCBtZW4sIHdlcmUgZGlzbWF5ZWQgaW4gdGhlaXIgaGVhcnRzIGF0IGJlaG9sZGluZyBzdWNoIGltcGlldHkuCjxkYXRlIGF1dGhuYW1lPSItMzkyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkyIj4zOTIgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkluIHRoaXMgd2F5IG1hbnkgb2YgdGhlIG9sZGVyIG1lbiB3ZXJlIGtpbGxlZDsgZm9yIGl0IHdhcyB0aGV5IGVzcGVjaWFsbHkgd2hvIGNoYW5jZWQgdG8gYmUgaW4gdGhlIG1hcmtldC1wbGFjZTsgd2hpbGUgdGhlIHlvdW5nZXIgbWVuLCBzaW5jZSBQYXNpbWVsdXMgc3VzcGVjdGVkIHdoYXQgd2FzIGdvaW5nIHRvIGhhcHBlbiwgaGFkIHJlbWFpbmVkIHF1aWV0bHkgaW4gdGhlIGd5bW5hc2l1bSBvZiBDcmFuZWl1bS4gQnV0IHdoZW4gdGhleSBoZWFyZCB0aGUgb3V0Y3J5IGFuZCBzb21lIGhhZCBjb21lIHRvIHRoZW0gaW4gZmxpZ2h0IGZyb20gdGhlIG1hc3NhY3JlLCB0aGVyZXVwb24sIHJ1c2hpbmcgdXAgb24gdGhlIHNsb3BlcyBvZiBBY3JvY29yaW50aHVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgY2l0YWRlbCBvZiBDb3JpbnRoLjwvbm90ZT4gdGhleSBiZWF0IG9mZiBhbiBhdHRhY2sgd2hpY2ggdGhlIEFyZ2l2ZXMgYW5kIHRoZSByZXN0IG1hZGUgdXBvbiB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPldoaWxlIHRoZXkgd2VyZSBkZWxpYmVyYXRpbmcsIGhvd2V2ZXIsIGFzIHRvIHdoYXQgdGhleSBzaG91bGQgZG8sIHRoZSBjYXBpdGFsIGZlbGwgZnJvbSBhIGNvbHVtbiwgYWx0aG91Z2ggdGhlcmUgaGFkIGJlZW4gbmVpdGhlciBlYXJ0aHF1YWtlIG5vciB3aW5kLiBMaWtld2lzZSwgd2hlbiB0aGV5IHNhY3JpZmljZWQsIHRoZSBvbWVucyBmcm9tIHRoZSB2aWN0aW1zIHdlcmUgc3VjaCB0aGF0IHRoZSBzZWVycyBzYWlkIGl0IHdhcyBiZXR0ZXIgdG8gZGVzY2VuZCBmcm9tIHRoZSBwbGFjZS4gQW5kIGF0IGZpcnN0IHRoZXkgcmV0aXJlZCBiZXlvbmQgdGhlIHRlcnJpdG9yeSBvZiBDb3JpbnRoIHdpdGggdGhlIGludGVudGlvbiBvZiBnb2luZyBpbnRvIGV4aWxlOyBidXQgd2hlbiB0aGVpciBmcmllbmRzIGFuZCBtb3RoZXJzIGFuZCBzaXN0ZXJzIGtlcHQgY29taW5nIHRvIHRoZW0gYW5kIHRyeWluZyB0byBkaXNzdWFkZSB0aGVtLCBhbmQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzkyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkyIj4zOTIgQi5DLjwvZGF0ZT48L25vdGU+IGZ1cnRoZXIsIHNvbWUgb2YgdGhlIHZlcnkgbWVuIHdobyB3ZXJlIGluIHBvd2VyIHByb21pc2VkIHVuZGVyIG9hdGggdGhhdCB0aGV5IHNob3VsZCBzdWZmZXIgbm8gaGFybSwgdW5kZXIgdGhlc2UgY2lyY3Vtc3RhbmNlcyBzb21lIG9mIHRoZW0gcmV0dXJuZWQgaG9tZS4KPGRhdGUgYXV0aG5hbWU9Ii0zOTIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTIiPjM5MiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZXkgc2F3LCBob3dldmVyLCB0aGF0IHRob3NlIHdobyB3ZXJlIGluIHBvd2VyIHdlcmUgcnVsaW5nIGxpa2UgdHlyYW50cywgYW5kIHBlcmNlaXZlZCB0aGF0IHRoZWlyIHN0YXRlIHdhcyBiZWluZyBwdXQgb3V0IG9mIGV4aXN0ZW5jZSwgaW5hc211Y2ggYXMgYm91bmRhcnkgc3RvbmVzIGhhZCBiZWVuIHJlbW92ZWQgYW5kIHRoZWlyIGZhdGhlcmxhbmQgd2FzIGNhbGxlZCBBcmdvcyBpbnN0ZWFkIG9mIENvcmludGg7IGFuZCwgd2hpbGUgdGhleSB3ZXJlIGNvbXBlbGxlZCB0byBzaGFyZSBpbiB0aGUgcmlnaHRzIG9mIGNpdGl6ZW5zaGlwIGF0IEFyZ29zLCBmb3Igd2hpY2ggdGhleSBoYWQgbm8gZGVzaXJlLCB0aGV5IGhhZCBsZXNzIGluZmx1ZW5jZSBpbiB0aGVpciBzdGF0ZSB0aGFuIGFsaWVucy4gU29tZSBvZiB0aGVtLCBhY2NvcmRpbmdseSwgY2FtZSB0byB0aGUgYmVsaWVmIHRoYXQgbGlmZSB1bmRlciBzdWNoIGNvbmRpdGlvbnMgd2FzIG5vdCBlbmR1cmFibGU7IGJ1dCBpZiB0aGV5IGVuZGVhdm91cmVkIHRvIG1ha2UgdGhlaXIgZmF0aGVybGFuZCBDb3JpbnRoIGFnYWluLCBldmVuIGFzIGl0IGhhZCBiZWVuIGZyb20gdGhlIGJlZ2lubmluZywgYW5kIHRvIG1ha2UgaXQgZnJlZSwgYW5kIG5vdCBvbmx5IHB1cmUgb2YgdGhlIHN0YWluIG9mIHRoZSBtdXJkZXJlcnMsIGJ1dCBibGVzdCB3aXRoIGFuIG9yZGVybHkgZ292ZXJubWVudCwgdGhleSB0aG91Z2h0IGl0IGEgd29ydGh5IGRlZWQsIGlmIHRoZXkgY291bGQgYWNjb21wbGlzaCB0aGVzZSB0aGluZ3MsIHRvIGJlY29tZSBzYXZpb3VycyBvZiB0aGVpciBmYXRoZXJsYW5kLCBidXQgaWYgdGhleSBjb3VsZCBub3QgZG8gc28sIHRvIG1lZXQgYSBtb3N0IHByYWlzZXdvcnRoeSBkZWF0aCBpbiBzdHJpdmluZyBhZnRlciB0aGUgZmFpcmVzdCBhbmQgZ3JlYXRlc3QgYmxlc3NpbmdzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFjY29yZGluZ2x5IHR3byBtZW4sIFBhc2ltZWx1cyBhbmQgQWxjaW1lbmVzLCB1bmRlcnRvb2sgYnkgd2FkaW5nIHRocm91Z2ggYSB0b3JyZW50IHRvIGVmZmVjdCBhIG1lZXRpbmcgd2l0aCBQcmF4aXRhcywgdGhlIExhY2VkYWVtb25pYW4gcG9sZW1hcmNoLCB3aG8gY2hhbmNlZCB0byBiZSBvbiBnYXJyaXNvbiBkdXR5IHdpdGggaGlzIHJlZ2ltZW50IGF0IFNpY3lvbiwgYW5kIHRvbGQgaGltIHRoYXQgdGhleSBjb3VsZCBnaXZlIGhpbSBlbnRyYW5jZSB0byB0aGUgd2FsbHMgd2hpY2ggcmVhY2hlZCBkb3duIHRvIExlY2hhZXVtLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgcG9ydCBvZiBDb3JpbnRoLjwvbm90ZT4gQW5kIFByYXhpdGFzLCBzaW5jZSBldmVuIGJlZm9yZSB0aGlzIGhlIGhhZCBrbm93biB0aGUgdHdvIG1lbiB0byBiZSB0cnVzdHdvcnRoeSwgdHJ1c3RlZCB0aGVtLCBhbmQgYWZ0ZXIgYXJyYW5naW5nIHRoYXQgdGhlIHJlZ2ltZW50IHdoaWNoIHdhcyBhYm91dCB0byBkZXBhcnQgZnJvbSBTaWN5b24gc2hvdWxkIGFsc28gcmVtYWluLCBtYWRlIHBsYW5zIGZvciBoaXMgZW50cmFuY2UuCjwvdHJhbnNsYXRpb24+"
translation['4.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZSB0d28gbWVuLCBwYXJ0bHkgYnk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTIiPjM5MiBCLkMuPC9kYXRlPjwvbm90ZT4gYWNjaWRlbnQgYW5kIHBhcnRseSBieSBjb250cml2YW5jZSwgaGFkIGJlZW4gbWFkZSBzZW50aW5lbHMgYXQgdGhlIHZlcnkgZ2F0ZSB3aGVyZSB0aGUgdHJvcGh5IHN0YW5kcywgdGhlbiBQcmF4aXRhcyBjYW1lIHdpdGggaGlzIHJlZ2ltZW50LCB0aGUgU2ljeW9uaWFucywgYW5kIGFsbCB0aGUgQ29yaW50aGlhbnMgd2hvIGNoYW5jZWQgdG8gYmUgZXhpbGVzLiBCdXQgd2hlbiBoZSB3YXMgYXQgdGhlIGdhdGUsIGJlaW5nIGFmcmFpZCB0byBtYWtlIHRoZSBlbnRyeSwgaGUgd2lzaGVkIHRvIHNlbmQgaW4gb25lIG9mIGhpcyB0cnVzdGVkIG1lbiB0byBleGFtaW5lIHRoZSBzaXR1YXRpb24gaW5zaWRlLiBUaGVuIHRoZSB0d28gQ29yaW50aGlhbnMgbGVkIGhpbSBpbiBhbmQgc2hvd2VkIGhpbSBldmVyeXRoaW5nIGluIHNvIHN0cmFpZ2h0Zm9yd2FyZCBhIG1hbm5lciB0aGF0IHRoZSBtYW4gd2hvIHdlbnQgaW4gcmVwb3J0ZWQgdGhhdCBhbGwgd2FzIHRydWx5IGp1c3QgYXMgdGhleSBzYWlkLiBUaGVyZXVwb24gUHJheGl0YXMgZW50ZXJlZC4KPGRhdGUgYXV0aG5hbWU9Ii0zOTIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTIiPjM5MiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZSB3YWxscywgaG93ZXZlciwgYXJlIGEgbG9uZyBkaXN0YW5jZSBmcm9tIGVhY2ggb3RoZXI7IGhpcyB0cm9vcHMsIGluIGNvbnNlcXVlbmNlLCB3aGVuIHRoZXkgZm9ybWVkIGluIGxpbmUgZm9yIGJhdHRsZSwgdGhvdWdodCB0aGVtc2VsdmVzIHRvIGJlIGZldyBpbiBudW1iZXIsIGFuZCB0aGVyZWZvcmUgbWFkZSBhIHN0b2NrYWRlIGFuZCBhcyBnb29kIGEgdHJlbmNoIGFzIHRoZXkgY291bGQgaW4gZnJvbnQgb2YgdGhlbSwgdG8gcHJvdGVjdCB0aGVtIHVudGlsIHRoZWlyIGFsbGllcyBzaG91bGQgY29tZSB0byB0aGVpciBhaWQuIEJlc2lkZXMsIHRoZXJlIHdhcyBhIGdhcnJpc29uIG9mIFRoZWJhbnMgaW4gdGhlaXIgcmVhciwgYXQgdGhlIHBvcnQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyB0aGUgZGF5IGFmdGVyIHRoZSBuaWdodCBvbiB3aGljaCB0aGV5IGVudGVyZWQgdGhleSBwYXNzZWQgd2l0aG91dCBhIGJhdHRsZTsgYnV0IG9uIHRoZSBmb2xsb3dpbmcgZGF5IGNhbWUgdGhlIEFyZ2l2ZXMsIGh1cnJ5aW5nIHdpdGggYWxsIHNwZWVkIHRvIHRoZSByZXNjdWU7IGFuZCBmaW5kaW5nIHRoZSBMYWNlZGFlbW9uaWFucyBzdGF0aW9uZWQgb24gdGhlIHJpZ2h0IG9mIHRoZWlyIG93biBsaW5lLCB0aGUgU2ljeW9uaWFucyBuZXh0IHRvIHRoZW0sIGFuZCB0aGUgQ29yaW50aGlhbiBleGlsZXMsIGFib3V0IG9uZSBodW5kcmVkIGFuZCBmaWZ0eSBpbiBudW1iZXIsIGJ5IHRoZSBlYXN0ZXJuIHdhbGwsIHRoZSBlbmVteSBmb3JtZWQgaW4gbGluZSBhZ2FpbnN0IHRoZW0gd2l0aCB0aGUgbWVyY2VuYXJpZXMgdW5kZXIgSXBoaWNyYXRlcyBjbG9zZSB0byB0aGUgZWFzdGVybiB3YWxsLCBhbmQgbmV4dCB0byB0aGVtIHRoZSBBcmdpdmVzOyB3aGlsZSB0aGUgQ29yaW50aGlhbnMgZnJvbSB0aGUgY2l0eSBvY2N1cGllZCB0aGVpciBsZWZ0IHdpbmcuCjwvdHJhbnNsYXRpb24+"
translation['4.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZSBBcmdpdmVzLCBmaWxsZWQgd2l0aCBvdmVyd2VlbmluZyBjb25maWRlbmNlIG9uIGFjY291bnQgb2YgdGhlaXIgbnVtYmVycywgYWR2YW5jZWQgYXQgb25jZTsgYW5kIHRoZXkgZGVmZWF0ZWQgdGhlIFNpY3lvbmlhbnMsIGFuZCBicmVha2luZyB0aHJvdWdoIHRoZSBzdG9ja2FkZSBwdXJzdWVkIHRoZW0gdG8gdGhlIHNlYSBhbmQgdGhlcmUga2lsbGVkIG1hbnkgb2YgdGhlbS4gQnV0IFBhc2ltYWNodXMsIHRoZSBMYWNlZGFlbW9uaWFuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzkyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkyIj4zOTIgQi5DLjwvZGF0ZT48L25vdGU+IGNvbW1hbmRlciBvZiBob3JzZSwgYXQgdGhlIGhlYWQgb2YgYSBmZXcgaG9yc2VtZW4sIHdoZW4gaGUgc2F3IHRoZSBTaWN5b25pYW5zIGhhcmQgcHJlc3NlZCwgdGllZCBoaXMgaG9yc2VzIHRvIHRyZWVzLCB0b29rIGZyb20gdGhlIFNpY3lvbmlhbnMgdGhlaXIgc2hpZWxkcywgYW5kIGFkdmFuY2VkIHdpdGggYSB2b2x1bnRlZXIgZm9yY2UgYWdhaW5zdCB0aGUgQXJnaXZlcy4gVGhlIEFyZ2l2ZXMsIGhvd2V2ZXIsIHNlZWluZyB0aGUgU2lnbWFzIHVwb24gdGhlIHNoaWVsZHMsIGRpZCBub3QgZmVhciB0aGVzZSBvcHBvbmVudHMgYXQgYWxsLCB0aGlua2luZyB0aGF0IHRoZXkgd2VyZSBTaWN5b25pYW5zLiBUaGVuLCBhcyB0aGUgc3RvcnkgZ29lcywgUGFzaW1hY2h1cyBzYWlkOiDigJxCeSB0aGUgdHdpbiBnb2RzLDxkYXRlIGF1dGhuYW1lPSItMzkyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkyIj4zOTIgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q2FzdG9yIGFuZCBQb2xsdXguPC9ub3RlPiBBcmdpdmVzLCB0aGVzZSBTaWdtYXMgd2lsbCBkZWNlaXZlIHlvdSzigJ0gYW5kIGNhbWUgdG8gY2xvc2UgcXVhcnRlcnMgd2l0aCB0aGVtOyBhbmQgZmlnaHRpbmcgdGh1cyB3aXRoIGEgZmV3IGFnYWluc3QgbWFueSBoZSB3YXMgc2xhaW4sIGFuZCBsaWtld2lzZSBvdGhlcnMgb2YgaGlzIHBhcnR5CjwvdHJhbnNsYXRpb24+"
translation['4.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gTWVhbndoaWxlIHRoZSBDb3JpbnRoaWFuIGV4aWxlcywgYmVpbmcgdmljdG9yaW91cyBvdmVyIHRoZSB0cm9vcHMgb3Bwb3NlZCB0byB0aGVtLCBwdXNoZWQgdGhlaXIgd2F5IHRocm91Z2ggaW4gdGhlIGlubGFuZCBkaXJlY3Rpb24gYW5kIGdvdCBuZWFyIHRoZSB3YWxsIHdoaWNoIHN1cnJvdW5kZWQgdGhlIGNpdHkuIEFzIGZvciB0aGUgTGFjZWRhZW1vbmlhbnMsIHdoZW4gdGhleSBwZXJjZWl2ZWQgdGhhdCB0aGUgZm9yY2VzIG9wcG9zZWQgdG8gdGhlIFNpY3lvbmlhbnMgd2VyZSB2aWN0b3Jpb3VzLCB0aGV5IGlzc3VlZCBmb3J0aCBmcm9tIHRoZSBzdG9ja2FkZSBhbmQgd2VudCB0byB0aGUgcmVzY3VlLCBrZWVwaW5nIHRoZSBzdG9ja2FkZSBvbiB0aGVpciBsZWZ0LiBCdXQgd2hlbiB0aGUgQXJnaXZlcyBoZWFyZCB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyB3ZXJlIGluIHRoZWlyIHJlYXIsIHRoZXkgdHVybmVkIGFyb3VuZCBhbmQgYnVyc3Qgb3V0IG9mIHRoZSBzdG9ja2FkZSBhZ2FpbiBvbiB0aGUgcnVuLiBBbmQgdGhvc2UgdXBvbiB0aGVpciBleHRyZW1lIHJpZ2h0IHdlcmUgc3RydWNrIG9uIHRoZWlyIHVucHJvdGVjdGVkIHNpZGVzIGJ5IHRoZSBMYWNlZGFlbW9uaWFucyBhbmQga2lsbGVkLCBidXQgdGhvc2Ugd2hvIHdlcmUgbmVhciB0aGUgd2FsbCwgY3Jvd2RlZCB0b2dldGhlciBpbiBhIGRpc29yZGVybHkgbWFzcywgY29udGludWVkIHRoZWlyIHJldHJlYXQgdG93YXJkcyB0aGUgY2l0eS4gV2hlbiwgaG93ZXZlciwgdGhleSBjYW1lIHVwb24gdGhlIENvcmludGhpYW4gZXhpbGVzIGFuZCBkaXNjb3ZlcmVkIHRoYXQgdGhleSB3ZXJlIGVuZW1pZXMsIHRoZXkgdHVybmVkIGJhY2sgYWdhaW4uIFRoZXJldXBvbiBzb21lIG9mIHRoZW0sIGNsaW1iaW5nIHVwIGJ5IHRoZSBzdGVwcyB0byB0aGUgdG9wIG9mIHRoZSB3YWxsLCBqdW1wZWQgZG93biBvbiB0aGUgb3RoZXIgc2lkZSBhbmQgd2VyZSBraWxsZWQsIG90aGVycyBwZXJpc2hlZCBhcm91bmQgdGhlIHN0ZXBzLCBiZWluZyBzaG92ZWQgYW5kIHN0cnVjayBieSB0aGUgZW5lbXksIGFuZCBzdGlsbCBvdGhlcnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTIiPjM5MiBCLkMuPC9kYXRlPjwvbm90ZT4gd2VyZSB0cm9kZGVuIHVuZGVyIGZvb3QgYnkgb25lIGFub3RoZXIgYW5kIHN1ZmZvY2F0ZWQuCjxkYXRlIGF1dGhuYW1lPSItMzkyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkyIj4zOTIgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIExhY2VkYWVtb25pYW5zIHdlcmUgaW4gbm8gdW5jZXJ0YWludHkgYWJvdXQgd2hvbSB0aGV5IHNob3VsZCBraWxsOyBmb3IgdGhlbiBhdCBsZWFzdCBoZWF2ZW4gZ3JhbnRlZCB0aGVtIGFuIGFjaGlldmVtZW50IHN1Y2ggYXMgdGhleSBjb3VsZCBuZXZlciBldmVuIGhhdmUgcHJheWVkIGZvci4gRm9yIHRvIGhhdmUgYSBjcm93ZCBvZiBlbmVtaWVzIGRlbGl2ZXJlZCBpbnRvIHRoZWlyIGhhbmRzLCBmcmlnaHRlbmVkLCBwYW5pYy1zdHJpY2tlbiwgcHJlc2VudGluZyB0aGVpciB1bnByb3RlY3RlZCBzaWRlcywgbm8gb25lIHJhbGx5aW5nIHRvIGhpcyBvd24gZGVmZW5jZSwgYnV0IGFsbCByZW5kZXJpbmcgYWxsIHBvc3NpYmxlIGFzc2lzdGFuY2UgdG93YXJkIHRoZWlyIG93biBkZXN0cnVjdGlvbizigJRob3cgY291bGQgb25lIGhlbHAgcmVnYXJkaW5nIHRoaXMgYXMgYSBnaWZ0IGZyb20gaGVhdmVuPyBPbiB0aGF0IGRheSwgYXQgYWxsIGV2ZW50cywgc28gbWFueSBmZWxsIHdpdGhpbiBhIHNob3J0IHRpbWUgdGhhdCBtZW4gYWNjdXN0b21lZCB0byBzZWUgaGVhcHMgb2YgY29ybiwgd29vZCwgb3Igc3RvbmVzLCBiZWhlbGQgdGhlbiBoZWFwcyBvZiBkZWFkIGJvZGllcy4gRnVydGhlcm1vcmUsIHRoZSBCb2VvdGlhbnMgb2YgdGhlIGdhcnJpc29uIGluIHRoZSBwb3J0IHdlcmUgYWxzbyBraWxsZWQsIHNvbWUgdXBvbiB0aGUgd2FsbHMsIGFuZCBvdGhlcnMgYWZ0ZXIgdGhleSBoYWQgY2xpbWJlZCB1cCBvbiB0aGUgcm9vZnMgb2YgdGhlIHNoaXAtaG91c2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIHRoZSBDb3JpbnRoaWFucyBhbmQgQXJnaXZlcyBjYXJyaWVkIG9mIHRoZWlyIGRlYWQgdW5kZXIgYSB0cnVjZSwgYW5kIHRoZSBhbGxpZXMgb2YgdGhlIExhY2VkYWVtb25pYW5zIGNhbWUgdG8gdGhlaXIgYWlkLiBBbmQgd2hlbiB0aGV5IHdlcmUgZ2F0aGVyZWQgdG9nZXRoZXIsIGluIHRoZSBmaXJzdCBwbGFjZSBQcmF4aXRhcyBkZWNpZGVkIHRvIHRlYXIgZG93biBhIHBvcnRpb24gb2YgdGhlIHdhbGxzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkkuZS4sIHRoZSB3YWxscyB3aGljaCBjb25uZWN0ZWQgQ29yaW50aCB3aXRoIExlY2hhZXVtLiBjcC4gIDcuPC9ub3RlPiBzbyBhcyB0byBtYWtlIGEgcGFzc2FnZSB0aHJvdWdoIHdpZGUgZW5vdWdoIGZvciBhbiBhcm15LCBhbmQgc2Vjb25kbHksIHB1dHRpbmcgaGltc2VsZiBhdCB0aGUgaGVhZCBvZiBoaXMgYXJteSwgaGUgYWR2YW5jZWQgYnkgdGhlIHJvYWQgdG8gTWVnYXJhIGFuZCBjYXB0dXJlZCBieSBzdG9ybSwgZmlyc3QgU2lkdXMgYW5kIHRoZW4gQ3JvbW15b24uIEFuZCBhZnRlciBzdGF0aW9uaW5nIGdhcnJpc29ucyBpbiB0aGVzZSBzdHJvbmdob2xkcyBoZSBtYXJjaGVkIGJhY2sgYWdhaW47IHRoZW4gaGUgZm9ydGlmaWVkIEVwaWVpY2VpYSwgaW4gb3JkZXIgdGhhdCBpdCBtaWdodCBzZXJ2ZSBhcyBhbiBvdXRwb3N0IHRvIHByb3RlY3QgdGhlIHRlcnJpdG9yeSBvZiBoaXMgYWxsaWVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JLmUuLCB0aGUgU2ljeW9uaWFucy48L25vdGU+IGFuZCB0aGVuIGRpc2JhbmRlZCBoaXMgYXJteSBhbmQgaGltc2VsZiB3aXRoZHJldyBieSB0aGUgcm9hZCB0byBMYWNlZGFlbW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnJvbSB0aGlzIHRpbWUgb24gbGFyZ2UgYXJtaWVzIG9mIGNpdGl6ZW5zIHdlcmUgbm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTEiPjM5MSBCLkMuPC9kYXRlPjwvbm90ZT4gbG9uZ2VyIGVtcGxveWVkIG9uIGVpdGhlciBzaWRlLCBmb3IgdGhlIHN0YXRlcyBtZXJlbHkgc2VudCBvdXQgZ2Fycmlzb25zLCB0aGUgb25lIHBhcnR5IHRvIENvcmludGgsIHRoZSBvdGhlciB0byBTaWN5b24sIGFuZCBndWFyZGVkIHRoZSB3YWxscyBvZiB0aGVzZSBjaXRpZXMuIEVhY2ggc2lkZSwgaG93ZXZlciwgaGFkIG1lcmNlbmFyaWVzLCBhbmQgd2l0aCB0aGVzZSBwcm9zZWN1dGVkIHRoZSB3YXIgdmlnb3JvdXNseS4KPGRhdGUgYXV0aG5hbWU9Ii0zOTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTEiPjM5MSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgd2FzIGF0IHRoaXMgdGltZSBhbHNvIHRoYXQgSXBoaWNyYXRlcyBpbnZhZGVkIHRoZSB0ZXJyaXRvcnkgb2YgUGhsaXVzLCBzZXQgYW4gYW1idXNoLCBtZWFud2hpbGUgcGx1bmRlcmluZyB3aXRoIGEgZmV3IGZvbGxvd2VycywgYW5kIHdoZW4gdGhlIG1lbiBmcm9tIHRoZSBjaXR5IGNhbWUgb3V0IGFnYWluc3QgaGltIGluIGFuIHVuZ3VhcmRlZCB3YXksIGtpbGxlZCBzbyBtYW55IG9mIHRoZW0gdGhhdCB0aGUgUGhsaWFzaWFucywgYWx0aG91Z2ggYmVmb3JlIHRoaXMgdGhleSBoYWQgcmVmdXNlZCB0byByZWNlaXZlIHRoZSBMYWNlZGFlbW9uaWFucyB3aXRoaW4gdGhlaXIgd2FsbCwgZnJvbSBmZWFyIHRoYXQgdGhlIGxhdHRlciB3b3VsZCBicmluZyBiYWNrIHRvIHRoZSBjaXR5IHRoZSBwZW9wbGUgd2hvIHNhaWQgdGhhdCB0aGV5IHdlcmUgaW4gZXhpbGUgb24gYWNjb3VudCBvZiB0aGVpciBMYWNlZGFlbW9uaWFuIHN5bXBhdGhpZXMsIHdlcmUgdGhlbiBzZWl6ZWQgd2l0aCBzdWNoIHBhbmljIGZlYXIgb2YgdGhlIG1lbiBmcm9tIENvcmludGggdGhhdCB0aGV5IHNlbnQgZm9yIHRoZSBMYWNlZGFlbW9uaWFucyBhbmQgcHV0IHRoZSBjaXR5IGFuZCB0aGUgY2l0YWRlbCBpbiB0aGVpciBoYW5kcyB0byBndWFyZC4gQW5kIHRoZSBMYWNlZGFlbW9uaWFucywgYWx0aG91Z2ggdGhleSB3ZXJlIHdlbGwgbWluZGVkIHRvd2FyZCB0aGUgZXhpbGVzLCBkdXJpbmcgYWxsIHRoZSB0aW1lIHRoYXQgdGhleSBoZWxkIHRoZWlyIGNpdHkgbWFkZSBub3Qgc28gbXVjaCBhcyB0aGUgbGVhc3QgbWVudGlvbiBvZiBhIHJlc3RvcmF0aW9uIG9mIGV4aWxlcywgYnV0IHdoZW4gdGhlIGNpdHkgc2VlbWVkIHRvIGhhdmUgcmVjb3ZlcmVkIGl0cyBjb3VyYWdlLCB0aGV5IGRlcGFydGVkLCBhZnRlciBnaXZpbmcgb3ZlciB0byB0aGUgUGhsaWFzaWFucyBib3RoIHRoZWlyIGNpdHkgYW5kIHRoZWlyIGxhd3MgdW5jaGFuZ2VkLCBwcmVjaXNlbHkgYXMgdGhleSB3ZXJlIHdoZW4gdGhleSB0b29rIHRoZSBjaXR5IGluIGNoYXJnZS4KPC90cmFuc2xhdGlvbj4="
translation['4.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgSXBoaWNyYXRlcyBhbmQgaGlzIHRyb29wcyBpbnZhZGVkIG1hbnkgZGlzdHJpY3RzIG9mIEFyY2FkaWEgYWxzbywgd2hlcmUgdGhleSBwbHVuZGVyZWQgYW5kIG1hZGUgYXR0YWNrcyB1cG9uIHRoZSB3YWxsZWQgdG93bnM7IGZvciB0aGUgaG9wbGl0ZXMgb2YgdGhlIEFyY2FkaWFucyBkaWQgbm90IGNvbWUgb3V0IGZyb20gdGhlaXIgd2FsbHMgYXQgYWxsIHRvIG1lZXQgdGhlbTsgc3VjaCBmZWFyIHRoZXkgaGFkIGNvbmNlaXZlZCBvZiB0aGUgcGVsdGFzdHMuIEJ1dCB0aGUgcGVsdGFzdHMgaW4gdGhlaXIgdHVybiB3ZXJlIHNvIGFmcmFpZCBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgdGhhdCB0aGV5IGRpZCBub3QgYXBwcm9hY2ggd2l0aGluIGEgamF2ZWxpbidzIGNhc3Qgb2YgdGhlIGhvcGxpdGVzOyBmb3IgaXQgaGFkIG9uY2UgaGFwcGVuZWQgdGhhdCB0aGUgeW91bmdlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MSI+MzkxIEIuQy48L2RhdGU+PC9ub3RlPiBtZW4gYW1vbmcgdGhlIExhY2VkYWVtb25pYW5zLCBwdXJzdWluZyBldmVuIGZyb20gc28gZ3JlYXQgYSBkaXN0YW5jZSBhcyB0aGF0LCBvdmVydG9vayBhbmQga2lsbGVkIHNvbWUgb2YgdGhlbS4KPGRhdGUgYXV0aG5hbWU9Ii0zOTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTEiPjM5MSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hpbGUgdGhlIExhY2VkYWVtb25pYW5zIGZlbHQgY29udGVtcHQgZm9yIHRoZSBwZWx0YXN0cywgdGhleSBmZWx0IGV2ZW4gZ3JlYXRlciBjb250ZW1wdCBmb3IgdGhlaXIgb3duIGFsbGllczsgZm9yIG9uY2UsIHdoZW4gdGhlIE1hbnRpbmVhbnMgd2VudCBvdXQgYWdhaW5zdCBwZWx0YXN0cyB3aG8gaGFkIHNhbGxpZWQgZm9ydGggZnJvbSB0aGUgd2FsbCB0aGF0IGV4dGVuZHMgdG8gTGVjaGFldW0sIHRoZXkgaGFkIGdpdmVuIHdheSB1bmRlciB0aGUgamF2ZWxpbnMgb2YgdGhlIHBlbHRhc3RzIGFuZCBzb21lIG9mIHRoZW0gaGFkIGJlZW4ga2lsbGVkIGFzIHRoZXkgZmxlZDsgc28gdGhhdCB0aGUgTGFjZWRhZW1vbmlhbnMgd2VyZSBldmVuIHNvIHVua2luZCBhcyB0byBtYWtlIGdhbWUgb2YgdGhlaXIgYWxsaWVzLCBzYXlpbmcgdGhhdCB0aGV5IGZlYXJlZCB0aGUgcGVsdGFzdHMganVzdCBhcyBjaGlsZHJlbiBmZWFyIGhvYmdvYmxpbnMuIEFzIGZvciB0aGVtc2VsdmVzLCBzZXR0aW5nIG91dCBmcm9tIExlY2hhZXVtIGFzIGEgYmFzZSB3aXRoIG9uZSByZWdpbWVudCBhbmQgdGhlIENvcmludGhpYW4gZXhpbGVzLCB0aGV5IG1hZGUgZXhwZWRpdGlvbnMgYWxsIHJvdW5kIGFib3V0IHRoZSBjaXR5IG9mIHRoZSBDb3JpbnRoaWFuczsKPC90cmFuc2xhdGlvbj4="
translation['4.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5idXQgdGhlIEF0aGVuaWFucywgb24gdGhlIG90aGVyIGhhbmQsIGZlYXJpbmcgdGhlIHBvd2VyIG9mIHRoZSBMYWNlZGFlbW9uaWFucyBhbmQgdGhpbmtpbmcgdGhhdCB0aGV5IG1pZ2h0IGNvbWUgYWdhaW5zdCB0aGVtLCBub3cgdGhhdCB0aGUgbG9uZyB3YWxscyBvZiB0aGUgQ29yaW50aGlhbnMgaGFkIGJlZW4gZGVzdHJveWVkLCBkZWNpZGVkIHRoYXQgaXQgd2FzIGJlc3QgdG8gcmVidWlsZCB0aGUgd2FsbHMgZGVzdHJveWVkIGJ5IFByYXhpdGFzLiBTbyB0aGV5IGNhbWUgd2l0aCB0aGVpciBmdWxsIGZvcmNlLCBhY2NvbXBhbmllZCBieSBtYXNvbnMgYW5kIGNhcnBlbnRlcnMsIGFuZCBjb21wbGV0ZWQgd2l0aGluIGEgZmV3IGRheXMgdGhlIHdhbGwgdG93YXJkIFNpY3lvbiBhbmQgdGhlIHdlc3QsIG1ha2luZyBhIHZlcnkgZXhjZWxsZW50IHdhbGwgb2YgaXQsIGFuZCB0aGVuIHdlbnQgb24gdG8gYnVpbGQgdGhlIGVhc3Rlcm4gd2FsbCBpbiBtb3JlIGxlaXN1cmVseSBmYXNoaW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIExhY2VkYWVtb25pYW5zIG9uIHRoZWlyIHNpZGUsIGNvbnNpZGVyaW5nIHRoYXQgdGhlIEFyZ2l2ZXMgd2VyZSBlbmpveWluZyB0aGUgZnJ1aXRzIG9mIHRoZWlyIGxhbmRzIGF0IGhvbWUgYW5kIHRha2luZyBwbGVhc3VyZSBpbiB0aGUgd2FyLCBtYWRlIGFuIGV4cGVkaXRpb24gYWdhaW5zdCB0aGVtLiBBZ2VzaWxhdXMgd2FzIGluIGNvbW1hbmQsIGFuZCBhZnRlciBsYXlpbmcgd2FzdGUgYWxsIHRoZWlyIHRlcnJpdG9yeSBoZSBwcm9jZWVkZWQgc3RyYWlnaHQgZnJvbSB0aGVyZSBhY3Jvc3MgdGhlIG1vdW50YWlucyBieSB3YXkgb2YgVGVuZWEgdG8gQ29yaW50aCBhbmQgY2FwdHVyZWQgdGhlIHdhbGxzIHRoYXQgaGFkIGJlZW4gcmVidWlsdCBieSB0aGUgQXRoZW5pYW5zLiBBbmQgaGlzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzkxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkxIj4zOTEgQi5DLjwvZGF0ZT48L25vdGU+IGJyb3RoZXIgVGVsZXV0aWFzIGFsc28gY2FtZSB0byBoaXMgc3VwcG9ydCBieSBzZWEsIHdpdGggYWJvdXQgdHdlbHZlIHRyaXJlbWVzOyBzbyB0aGF0IHRoZWlyIG1vdGhlciB3YXMgZGVlbWVkIGhhcHB5IGluIHRoYXQgb24gdGhlIHNhbWUgZGF5IG9uZSBvZiB0aGUgc29ucyB3aG9tIHNoZSBib3JlIGNhcHR1cmVkIGJ5IGxhbmQgdGhlIHdhbGxzIG9mIHRoZSBlbmVteSBhbmQgdGhlIG90aGVyIGJ5IHNlYSBoaXMgc2hpcHMgYW5kIGRvY2steWFyZHMuIEFuZCBhdCB0aGF0IHRpbWUsIGFmdGVyIGFjY29tcGxpc2hpbmcgdGhlc2UgdGhpbmdzLCBBZ2VzaWxhdXMgZGlzYmFuZGVkIHRoZSBhcm15IG9mIHRoZSBhbGxpZXMgYW5kIGxlZCBoaXMgY2l0aXplbiBmb3JjZSBiYWNrIGhvbWUuCjxkYXRlIGF1dGhuYW1lPSItMzkxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkxIj4zOTEgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZSBMYWNlZGFlbW9uaWFucywgdXBvbiBoZWFyaW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkwIj4zOTAgQi5DLjwvZGF0ZT48L25vdGU+IGZyb20gdGhlIENvcmludGhpYW4gZXhpbGVzIHRoYXQgdGhlIHBlb3BsZSBpbiB0aGUgY2l0eSBoYWQgYWxsIHRoZWlyIGNhdHRsZSBpbiBQaXJhZXVtPGRhdGUgYXV0aG5hbWU9Ii0zOTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTAiPjM5MCBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIG1vdW50YWlub3VzIHBlbmluc3VsYSBvZiBjb25zaWRlcmFibGUgZXh0ZW50IG9uIHRoZSBub3J0aC13ZXN0ZXJuIHNpZGUgb2YgdGhlIGlzdGhtdXMgb2YgQ29yaW50aCAoc2VlIG5vdGUgMiwgYmVsb3cpLiBBdCBpdHMgd2VzdGVybiBleHRyZW1pdHkgd2FzIHRoZSBIZXJhZXVtLCBvciB0ZW1wbGUgb2YgSGVyYSAoc2VlICA1LCBiZWxvdyksIG5lYXIgd2hpY2ggd2FzIGEgc21hbGwgbGFrZSAoNikuIEluIHRoZSBub3J0aC1lYXN0ZXJuIHBhcnQgb2YgdGhlIHBlbmluc3VsYSB3YXMgdGhlIGZvcnRyZXNzIG9mIE9lbm9lICg1KS48L25vdGU+IGFuZCB0aGVyZSBrZXB0IHRoZW0gc2FmZSwgYW5kIHRoYXQgbWFueSB3ZXJlIGJlaW5nIG1haW50YWluZWQgZnJvbSB0aGlzIHN1cHBseSwgbWFkZSBhbm90aGVyIGV4cGVkaXRpb24gdG8gdGhlIHRlcnJpdG9yeSBvZiBDb3JpbnRoLCBBZ2VzaWxhdXMgYmVpbmcgaW4gY29tbWFuZCB0aGlzIHRpbWUgYWxzby4gQW5kIGZpcnN0IGhlIGNhbWUgdG8gdGhlIElzdGhtdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHRlcm0gd2FzIHVzZWQgYnkgdGhlIEdyZWVrcywgbm90IChhcyBpbiB0aGUgcHJlY2VkaW5nIG5vdGUpIG9mIHRoZSBlbnRpcmUgbmVjayBvZiBsYW5kIGNvbm5lY3RpbmcgUGVsb3Bvbm5lc3VzIHdpdGggbm9ydGhlcm4gR3JlZWNlLCBidXQgb25seSBvZiBpdHMgbmFycm93ZXN0IHBhcnQsIHNvbWUgdGhyZWUgb3IgZm91ciBtaWxlcyBub3J0aC1lYXN0IG9mIHRoZSBjaXR5IG9mIENvcmludGggVG93YXJkIHRoZSBlYXN0ZXJuIHNpZGUgb2YgdGhpcyBJc3RobXVzIHByb3BlciB3YXMgdGhlIGZhbW91cyBzYW5jdHVhcnkgb2YgUG9zZWlkb24gd2hlcmUsIGV2ZXJ5IHR3byB5ZWFycywgdGhlIElzdGhtaWFuIGdhbWVzIHdlcmUgY2VsZWJyYXRlZC48L25vdGU+OyBmb3IgaXQgd2FzIHRoZSBtb250aCBkdXJpbmcgd2hpY2ggdGhlIElzdGhtaWFuIGdhbWVzIGFyZSBjZWxlYnJhdGVkLCBhbmQgdGhlIEFyZ2l2ZXMgY2hhbmNlZCBhdCB0aGUgdGltZSB0byBiZSBvZmZlcmluZyB0aGUgc2FjcmlmaWNlIHRoZXJlIHRvIFBvc2VpZG9uLCBhcyB0aG91Z2ggQXJnb3Mgd2VyZSBDb3JpbnRoLiBCdXQgd2hlbiB0aGV5IGxlYXJuZWQgdGhhdCBBZ2VzaWxhdXMgd2FzIGFwcHJvYWNoaW5nLCB0aGV5IGxlZnQgYmVoaW5kIGJvdGggdGhlIHZpY3RpbXMgdGhhdCBoYWQgYmVlbiBvZmZlcmVkIGFuZCB0aGUgYnJlYWtmYXN0IHRoYXQgd2FzIGJlaW5nIG1hZGUgcmVhZHkgYW5kIHJldGlyZWQgdG8gdGhlIGNpdHkgaW4gdmVyeSBncmVhdCBmZWFyLCBhbG9uZyB0aGUgcm9hZCBsZWFkaW5nIHRvIENlbmNocmVhZS4KPC90cmFuc2xhdGlvbj4="
translation['4.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFnZXNpbGF1cywgaG93ZXZlciwgZGlkIG5vdCBwdXJzdWUgdGhlbSwgZXZlbiB0aG91Z2ggaGUgc2F3IHRoZW0sIGJ1dCBlbmNhbXBpbmcgaW4gdGhlIHNhY3JlZCBwcmVjaW5jdCBvZmZlcmVkIHNhY3JpZmljZSBoaW1zZWxmIHRvIHRoZSBnb2QgYW5kIHdhaXRlZCB1bnRpbCB0aGUgQ29yaW50aGlhbiBleGlsZXMgaGFkIGNvbmR1Y3RlZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MCI+MzkwIEIuQy48L2RhdGU+PC9ub3RlPiB0aGUgc2FjcmlmaWNlIGFuZCB0aGUgZ2FtZXMgaW4gaG9ub3VyIG9mIFBvc2VpZG9uLiBCdXQgd2hlbiBBZ2VzaWxhdXMgaGFkIGxlZnQgdGhlIElzdGhtdXMsIHRoZSBBcmdpdmVzIGNlbGVicmF0ZWQgdGhlIElzdGhtaWFuIGdhbWVzIGFsbCBvdmVyIGFnYWluLiBJbiB0aGF0IHllYXIsIGFjY29yZGluZ2x5LCBpbiBzb21lIG9mIHRoZSBjb250ZXN0cyBpbmRpdmlkdWFsIGNvbXBldGl0b3JzIHdlcmUgYmVhdGVuIHR3aWNlLCB3aGlsZSBpbiBvdGhlcnMgdGhlIHNhbWUgY29tcGV0aXRvcnMgd2VyZSB0d2ljZSBwcm9jbGFpbWVkIHZpY3RvcnMuCjxkYXRlIGF1dGhuYW1lPSItMzkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkwIj4zOTAgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbiB0aGUgZm91cnRoIGRheSBBZ2VzaWxhdXMgbGVkIGhpcyBhcm15IGFnYWluc3QgUGlyYWV1bS4gQnV0IHNlZWluZyB0aGF0IGl0IHdhcyBndWFyZGVkIGJ5IG1hbnksIGhlIHdpdGhkcmV3IGFmdGVyIGJyZWFrZmFzdCBpbiB0aGUgZGlyZWN0aW9uIG9mIHRoZSBjYXBpdGFsLCBhcyB0aG91Z2ggdGhlIGNpdHkgd2VyZSBnb2luZyB0byBiZSBiZXRyYXllZCB0byBoaW07IHNvIHRoYXQgdGhlIENvcmludGhpYW5zLCBpbiBmZWFyIHRoYXQgdGhlIGNpdHkgd2FzIHRvIGJlIGJldHJheWVkIGJ5IHNvbWUgb25lLCBzdW1tb25lZCBJcGhpY3JhdGVzIHdpdGggdGhlIGdyZWF0ZXIgcGFydCBvZiBoaXMgcGVsdGFzdHMuIEFnZXNpbGF1cywgaG93ZXZlciwgdXBvbiBwZXJjZWl2aW5nIHRoYXQgdGhleSBoYWQgcGFzc2VkIGJ5IGR1cmluZyB0aGUgbmlnaHQsIHR1cm5lZCBhYm91dCwgYW5kIGF0IGRheWJyZWFrIHByb2NlZWRlZCB0byBsZWFkIGhpcyBhcm15IHRvIFBpcmFldW0uIEFuZCBoZSBoaW1zZWxmIGFkdmFuY2VkIGJ5IHdheSBvZiB0aGUgaG90IHNwcmluZ3M8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2l0dWF0ZWQgbmVhciB0aGUgc2hvcmUgb24gdGhlIHJvYWQgbGVhZGluZyBmcm9tIHRoZSBJc3RobXVzIHRvIFBpcmFldW0uPC9ub3RlPiwgYnV0IGhlIHNlbnQgb25lIHJlZ2ltZW50IHVwIHRoZSBoZWlnaHRzIHRvIHByb2NlZWQgYWxvbmcgdGhlIHRvcG1vc3QgcmlkZ2UuIE9uIHRoYXQgbmlnaHQsIGFjY29yZGluZ2x5LCBoZSB3YXMgaW4gY2FtcCBhdCB0aGUgaG90IHNwcmluZ3MsIHdoaWxlIHRoZSByZWdpbWVudCBiaXZvdWFja2VkLCBob2xkaW5nIHBvc3Nlc3Npb24gb2YgdGhlIGhlaWdodHMuCjwvdHJhbnNsYXRpb24+"
translation['4.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkl0IHdhcyB0aGVuIHRoYXQgQWdlc2lsYXVzIHdvbiBjcmVkaXQgYnkgYSB0cmlmbGluZyBidXQgdGltZWx5IGV4cGVkaWVudC4gRm9yIHNpbmNlIG5vIG9uZSBhbW9uZyB0aG9zZSB3aG8gY2FycmllZCBwcm92aXNpb25zIGZvciB0aGUgcmVnaW1lbnQgaGFkIGJyb3VnaHQgZmlyZSwgYW5kIGl0IHdhcyBjb2xkLCBub3Qgb25seSBiZWNhdXNlIHRoZXkgd2VyZSBhdCBhIGhpZ2ggYWx0aXR1ZGUsIGJ1dCBhbHNvIGJlY2F1c2UgdGhlcmUgaGFkIGJlZW4gcmFpbiBhbmQgaGFpbCB0b3dhcmRzIGV2ZW5pbmfigJRhbmQgYmVzaWRlcywgdGhleSBoYWQgZ29uZSB1cCBpbiBsaWdodCBjbG90aGluZyBzdWl0YWJsZSB0byB0aGUgc3VtbWVyIHNlYXNvbuKAlGFuZCB0aGV5IHdlcmUgc2hpdmVyaW5nIGFuZCwgaW4gdGhlIGRhcmtuZXNzLCBoYWQgbm8gaGVhcnQgZm9yIHRoZWlyIGRpbm5lciwgQWdlc2lsYXVzIHNlbnQgdXAgbm90IGxlc3MgdGhhbiB0ZW4gbWVuIGNhcnJ5aW5nIGZpcmUgaW4gZWFydGhlbiBwb3RzLiBBbmQgd2hlbiB0aGVzZSBtZW4gaGFkIGNsaW1iZWQgdXAgYnkgb25lIHdheSBhbmQgYW5vdGhlciBhbmQgbWFueSBsYXJnZSBmaXJlcyBoYWQgYmVlbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MCI+MzkwIEIuQy48L2RhdGU+PC9ub3RlPiBtYWRlLCBzaW5jZSB0aGVyZSB3YXMgYSBncmVhdCBkZWFsIG9mIGZ1ZWwgYXQgaGFuZCwgYWxsIHRoZSBzb2xkaWVycyBhbm9pbnRlZCB0aGVtc2VsdmVzIGFuZCBtYW55IG9mIHRoZW0gb25seSB0aGVuIGJlZ2FuIHRoZWlyIGRpbm5lci4gSXQgd2FzIG9uIHRoaXMgbmlnaHQgYWxzbyB0aGF0IHRoZSB0ZW1wbGUgb2YgUG9zZWlkb248ZGF0ZSBhdXRobmFtZT0iLTM5MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MCI+MzkwIEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSBub3RlIDIsIHAuIDMyMy48L25vdGU+IHdhcyBzZWVuIGJ1cm5pbmc7IGJ1dCBubyBvbmUga25vd3MgYnkgd2hvbSBpdCB3YXMgc2V0IG9uIGZpcmUuCjwvdHJhbnNsYXRpb24+"
translation['4.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGVuIHRoZSBwZW9wbGUgaW4gUGlyYWV1bSBwZXJjZWl2ZWQgdGhhdCB0aGUgaGVpZ2h0cyB3ZXJlIG9jY3VwaWVkLCB0aGV5IGdhdmUgbm8gZnVydGhlciB0aG91Z2h0IHRvIGRlZmVuZGluZyB0aGVtc2VsdmVzLCBidXQgZmxlZCBmb3IgcmVmdWdlIHRvIHRoZSBIZXJhZXVtLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5TZWUgbm90ZSAxLCBwLiAzMjMuPC9ub3RlPiBtZW4gYW5kIHdvbWVuLCBzbGF2ZXMgYW5kIGZyZWVtZW4sIGFuZCB0aGUgZ3JlYXRlciBwYXJ0IG9mIHRoZSBjYXR0bGUuIEFuZCBBZ2VzaWxhdXMgd2l0aCB0aGUgYXJteSBwcm9jZWVkZWQgYWxvbmcgdGhlIHNlYSBzaG9yZTsgd2hpbGUgdGhlIHJlZ2ltZW50LCBkZXNjZW5kaW5nIGF0IHRoZSBzYW1lIHRpbWUgZnJvbSB0aGUgaGVpZ2h0cywgY2FwdHVyZWQgT2Vub2UsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSBub3RlIDEsIHAuIDMyMy48L25vdGU+IHRoZSBzdHJvbmdob2xkIHdoaWNoIGhhZCBiZWVuIGZvcnRpZmllZCBpbiBQaXJhZXVtLCBhbmQgdG9vayBwb3NzZXNzaW9uIG9mIGFsbCB0aGF0IHdhcyB3aXRoaW4gaXQsIGFuZCBpbiBmYWN0IGFsbCB0aGUgc29sZGllcnMgb24gdGhhdCBkYXkgcG9zc2Vzc2VkIHRoZW1zZWx2ZXMgb2YgcHJvdmlzaW9ucyBpbiBhYnVuZGFuY2UgZnJvbSB0aGUgZmFybXMuIE1lYW53aGlsZSB0aG9zZSB3aG8gaGFkIHRha2VuIHJlZnVnZSBpbiB0aGUgSGVyYWV1bSBjYW1lIG91dCwgd2l0aCB0aGUgcHVycG9zZSBvZiBsZWF2aW5nIGl0IHRvIEFnZXNpbGF1cyB0byBkZWNpZGUgYXMgaGUgY2hvc2UgaW4gcmVnYXJkIHRvIHRoZW0uIEhlIGRlY2lkZWQgdG8gZGVsaXZlciBvdmVyIHRvIHRoZSBleGlsZXMgYWxsIHRob3NlIHdobyBoYWQgYSBwYXJ0IGluIHRoZSBtYXNzYWNyZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Yy5wLiA0LjQuMjwvbm90ZT4gYW5kIHRoYXQgYWxsIGVsc2Ugc2hvdWxkIGJlIHNvbGQuCjwvdHJhbnNsYXRpb24+"
translation['4.5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJldXBvbiB0aGUgcHJpc29uZXJzIGNhbWUgZm9ydGggZnJvbSB0aGUgSGVyYWV1bSwgYSB2ZXJ5IGdyZWF0IG51bWJlciBvZiB0aGVtLCB0b2dldGhlciB3aXRoIHRoZWlyIHByb3BlcnR5OyBhbmQgbWFueSBlbWJhc3NpZXMgZnJvbSB2YXJpb3VzIHN0YXRlcyBwcmVzZW50ZWQgdGhlbXNlbHZlcywgd2hpbGUgZnJvbSB0aGUgQm9lb3RpYW5zIGluIHBhcnRpY3VsYXIgYW1iYXNzYWRvcnMgaGFkIGNvbWUgdG8gYXNrIHdoYXQgdGhleSBzaG91bGQgZG8gaW4gb3JkZXIgdG8gb2J0YWluIHBlYWNlLiBBZ2VzaWxhdXMsIGhvd2V2ZXIsIGluIGEgdmVyeSBsb2Z0eSB3YXkgYWZmZWN0ZWQgbm90IGV2ZW4gdG8gc2VlIHRoZXNlIGFtYmFzc2Fkb3JzLCBhbHRob3VnaCBQaGFyYXgsIGRpcGxvbWF0aWMgYWdlbnQgZm9yIHRoZSBUaGViYW5zIGF0IExhY2VkYWVtb24sIHdhcyBzdGFuZGluZyBiZXNpZGUgdGhlbSBmb3IgdGhlIHB1cnBvc2Ugb2YgcHJlc2VudGluZyB0aGVtIHRvIGhpbTsgYnV0IHNpdHRpbmcgaW4gdGhlIGNpcmN1bGFyIHN0cnVjdHVyZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgcmVmZXJlbmNlIGlzIHVuY2VydGFpbi48L25vdGU+IG5lYXIgdGhlIGxha2UsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSBub3RlIDEsIHAuIDMyMzwvbm90ZT4gaGUgb2NjdXBpZWQgaGltc2VsZiBpbiB3YXRjaGluZyB0aGUgZ3JlYXQgcXVhbnRpdHkgb2Y8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTAiPjM5MCBCLkMuPC9kYXRlPjwvbm90ZT4gcHJpc29uZXJzIGFuZCBwcm9wZXJ0eSB0aGF0IHdhcyBiZWluZyBicm91Z2h0IG91dC4gQW5kIHNvbWUgTGFjZWRhZW1vbmlhbnMgZnJvbSB0aGUgY2FtcCBmb2xsb3dlZCB3aXRoIHRoZWlyIHNwZWFycyB0byBndWFyZCB0aGUgcHJpc29uZXJzLCBhbmQgd2VyZSBtdWNoIHJlZ2FyZGVkIGJ5IHRoZSBieXN0YW5kZXJzOyBmb3Igc29tZWhvdyBtZW4gd2hvIGFyZSBmb3J0dW5hdGUgYW5kIHZpY3RvcmlvdXMgc2VlbSBldmVyIHRvIGJlIGEgbm90ZXdvcnRoeSBzcGVjdGFjbGUuCjxkYXRlIGF1dGhuYW1lPSItMzkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkwIj4zOTAgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGlsZSBBZ2VzaWxhdXMgd2FzIHN0aWxsIHNpdHRpbmcgdGhlcmUgaW4gdGhlIGF0dGl0dWRlIG9mIGEgbWFuIHdobyBleHVsdGVkIGluIHdoYXQgaGFkIGJlZW4gYWNjb21wbGlzaGVkLCBhIGhvcnNlbWFuIHJvZGUgdXAsIGhpcyBob3JzZSBzd2VhdGluZyBwcm9mdXNlbHkuIEFuZCBiZWluZyBhc2tlZCBieSBtYW55IHBlb3BsZSB3aGF0IG5ld3MgaGUgYnJvdWdodCwgaGUgbWFkZSBubyByZXBseSB0byBhbnlvbmUsIGJ1dCB3aGVuIGhlIHdhcyBuZWFyIEFnZXNpbGF1cywgaGUgbGVhcGVkIGRvd24gZnJvbSBoaXMgaG9yc2UsIHJhbiB1cCB0byBoaW0sIGFuZCB3aXRoIGEgdmVyeSBnbG9vbXkgZmFjZSB0b2xkIGhpbSBvZiB0aGUgZGlzYXN0ZXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+RGVzY3JpYmVkIGluIDExLTE3LCBiZWxvdy48L25vdGU+IHRvIHRoZSByZWdpbWVudCBzdGF0aW9uZWQgaW4gTGVjaGFldW0uIFdoZW4gQWdlc2lsYXVzIGhlYXJkIHRoaXMsIGhlIGltbWVkaWF0ZWx5IGxlYXBlZCB1cCBmcm9tIGhpcyBzZWF0LCBzZWl6ZWQgaGlzIHNwZWFyLCBhbmQgb3JkZXJlZCB0aGUgaGVyYWxkIHRvIHN1bW1vbiB0aGUgY29tbWFuZGVycyBvZiByZWdpbWVudHMgYW5kIG9mIGZpZnRpZXMgYW5kIHRoZSBsZWFkZXJzIG9mIHRoZSBhbGxpZXMuCjwvdHJhbnNsYXRpb24+"
translation['4.5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSBjYW1lIHJ1bm5pbmcgdG9nZXRoZXIsIGhlIHRvbGQgdGhlIHJlc3Qgb2YgdGhlbSB0byBmb2xsb3cgYWxvbmcgYXMgcXVpY2tseSBhcyBwb3NzaWJsZSBhZnRlciBzd2FsbG93aW5nIHdoYXQgdGhleSBjb3VsZOKAlGZvciB0aGV5IGhhZCBub3QgeWV0IGJyZWFrZmFzdGVk4oCUd2hpbGUgaGUgaGltc2VsZiB3aXRoIGhpcyB0ZW50IGNvbXBhbmlvbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHRlbnQgY29tcGFuaW9ucyBvZiBhIFNwYXJ0YW4ga2luZyB3ZXJlIHRoZSBzaXggcG9sZW1hcmNocywgb3IgY29tbWFuZGVycyBvZiByZWdpbWVudHMsIGFuZCB0aHJlZSBvdGhlciBTcGFydGlhdGFlLiBYZW4uIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPmRlIFJlcC4gTGFjLjwvdGl0bGU+IHhpaWkuIDEuPC9ub3RlPiB3ZW50IG9uIGFoZWFkIGJyZWFrZmFzdGxlc3MgQW5kIHRoZSBzcGVhcm1lbiBvZiBoaXMgYm9keS1ndWFyZCwgZnVsbHkgYXJtZWQsIGFjY29tcGFuaWVkIGhpbSB3aXRoIGFsbCBzcGVlZCwgaGUgbGVhZGluZyB0aGUgd2F5IGFuZCBoaXMgdGVudCBjb21wYW5pb25zIGZvbGxvd2luZyBhZnRlciBoaW0uIEJ1dCB3aGVuIGhlIGhhZCBhbHJlYWR5IHBhc3NlZCB0aGUgaG90IHNwcmluZ3MgYW5kIGNvbWUgdG8gdGhlIHBsYWluIG9mIExlY2hhZXVtLCB0aHJlZSBob3JzZW1lbiByb2RlIHVwIGFuZCByZXBvcnRlZCB0aGF0IHRoZSBib2RpZXMgb2YgdGhlIGRlYWQgaGFkIGJlZW4gcmVjb3ZlcmVkLiBXaGVuIGhlIGhlYXJkIHRoaXMsIGhlIGdhdmUgdGhlIG9yZGVyIHRvIGdyb3VuZCBhcm1zLCBhbmQgYWZ0ZXIgcmVzdGluZyB0aGUgYXJteSBmb3IgYSBzaG9ydCB0aW1lLCBsZWQgaXQgYmFjayBhZ2FpbiB0byB0aGUgSGVyYWV1bTsgYW5kIG9uIHRoZSBmb2xsb3dpbmcgZGF5IGhlIGV4cG9zZWQgdGhlIHByaXNvbmVycyBhbmQ8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5kZSBSZXAuIExhYy48L3RpdGxlPiB4aWlpLiAxLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MCI+MzkwIEIuQy48L2RhdGU+PC9ub3RlPiBjYXB0dXJlZCBwcm9wZXJ0eSBmb3Igc2FsZS4KPGRhdGUgYXV0aG5hbWU9Ii0zOTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTAiPjM5MCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgYW1iYXNzYWRvcnMgb2YgdGhlIEJvZW90aWFucyB3ZXJlIG5vdyBzdW1tb25lZCBhbmQgYXNrZWQgZm9yIHdoYXQgcHVycG9zZSB0aGV5IGhhZCBjb21lLiBUaGV5IG1hZGUgbm8gZnVydGhlciBtZW50aW9uIG9mIHBlYWNlLCBidXQgc2FpZCB0aGF0IGlmIHRoZXJlIHdlcmUgbm90aGluZyB0byBoaW5kZXIsIHRoZXkgZGVzaXJlZCB0byBwYXNzIGludG8gdGhlIGNpdHkgdG8gam9pbiB0aGVpciBvd24gc29sZGllcnMuIEFuZCBBZ2VzaWxhdXMgc2FpZCB3aXRoIGEgbGF1Z2gsIOKAnE9uIHRoZSBjb250cmFyeSwgSSBrbm93IHRoYXQgeW91IGFyZSBub3QgZGVzaXJvdXMgb2Ygc2VlaW5nIHlvdXIgc29sZGllcnMsIGJ1dCBvZiBiZWhvbGRpbmcgdGhlIGdvb2QgZm9ydHVuZSBvZiB5b3VyIGZyaWVuZHMsIHRoYXQgeW91IG1heSBzZWUgaG93IGdyZWF0IGl0IGhhcyBiZWVuLiBXYWl0LCB0aGVyZWZvcmUs4oCdIGhlIHNhaWQsIOKAnGZvciBJIHdpbGwgY29uZHVjdCB5b3UgbXlzZWxmLCBhbmQgYnkgYmVpbmcgd2l0aCBtZSB5b3Ugd2lsbCBmaW5kIG91dCBiZXR0ZXIgd2hhdCBtYW5uZXIgb2YgdGhpbmcgaXQgaXMgdGhhdCBoYXMgaGFwcGVuZWQu4oCdCjwvdHJhbnNsYXRpb24+"
translation['4.5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaGUgZGlkIG5vdCBiZWxpZSBoaXMgd29yZHMsIGJ1dCBvbiB0aGUgbmV4dCBkYXksIGFmdGVyIG9mZmVyaW5nIHNhY3JpZmljZSwgaGUgbGVkIGhpcyBhcm15IHRvIHRoZSBjaXR5LiBIZSBkaWQgbm90IHRocm93IGRvd24gdGhlIHRyb3BoeSwgYnV0IGJ5IGN1dHRpbmcgZG93biBhbmQgYnVybmluZyBhbnkgZnJ1aXQtdHJlZSB0aGF0IHdhcyBzdGlsbCBsZWZ0LCBoZSBzaG93ZWQgdGhhdCBubyBvbmUgd2FudGVkIHRvIGNvbWUgb3V0IGFnYWluc3QgaGltLiBXaGVuIGhlIGhhZCBkb25lIHRoaXMsIGhlIGVuY2FtcGVkIG5lYXIgTGVjaGFldW07IGFzIGZvciB0aGUgYW1iYXNzYWRvcnMgb2YgdGhlIFRoZWJhbnMsIGFsdGhvdWdoIGhlIGRpZCBub3QgbGV0IHRoZW0gZ28gaW50byB0aGUgY2l0eSwgeWV0IGhlIHNlbnQgdGhlbSBob21lIGJ5IHNlYSB0byBDcmV1c2lzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIEJvZW90aWFuIHBvcnQgb24gdGhlIENvcmludGhpYW4gR3VsZi48L25vdGU+IE5vdyBpbmFzbXVjaCBhcyBzdWNoIGEgY2FsYW1pdHkgaGFkIGJlZW4gdW51c3VhbCB3aXRoIHRoZSBMYWNlZGFlbW9uaWFucywgdGhlcmUgd2FzIGdyZWF0IG1vdXJuaW5nIHRocm91Z2hvdXQgdGhlIExhY29uaWFuIGFybXksIGV4Y2VwdCBhbW9uZyB0aG9zZSB3aG9zZSBzb25zLCBmYXRoZXJzLCBvciBicm90aGVycyBoYWQgZmFsbGVuIHdoZXJlIHRoZXkgc3Rvb2Q7IHRoZXksIGhvd2V2ZXIsIHdlbnQgYWJvdXQgbGlrZSB2aWN0b3JzLCB3aXRoIHNoaW5pbmcgY291bnRlbmFuY2VzIGFuZCBmdWxsIG9mIGV4dWx0YXRpb24gaW4gdGhlaXIgb3duIG1pc2ZvcnR1bmUuCjwvdHJhbnNsYXRpb24+"
translation['4.5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGl0IHdhcyBpbiB0aGUgZm9sbG93aW5nIHdheSB0aGF0IHRoZSBkaXNhc3RlciB0byB0aGUgcmVnaW1lbnQgaGFwcGVuZWQuIFRoZSBBbXljbGFlYW5zIGludmFyaWFibHkgZ28gYmFjayBob21lIHRvIHRoZSBmZXN0aXZhbCBvZiB0aGUgSHlhY2ludGhpYSBmb3IgdGhlIHBhZWFuIHRvIEFwb2xsbywgd2hldGhlciB0aGV5IGNoYW5jZSB0byBiZSBvbiBhIGNhbXBhaWduIG9yIGF3YXkgZnJvbSBob21lIGZvciBhbnkgb3RoZXIgcmVhc29uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MCI+MzkwIEIuQy48L2RhdGU+PC9ub3RlPiBBY2NvcmRpbmdseSBBZ2VzaWxhdXMgaGFkIG9uIHRoaXMgb2NjYXNpb24gbGVmdCBiZWhpbmQgYXQgTGVjaGFldW0gYWxsIHRoZSBBbXljbGFlYW5zIGluIHRoZSBhcm15LiBOb3cgdGhlIHBvbGVtYXJjaCBpbiBjb21tYW5kIG9mIHRoZSBnYXJyaXNvbiB0aGVyZSBkZXRhaWxlZCB0aGUgZ2Fycmlzb24gdHJvb3BzIG9mIHRoZSBhbGxpZXMgdG8gZ3VhcmQgdGhlIHdhbGwsIGFuZCBoaW1zZWxmIHdpdGggdGhlIHJlZ2ltZW50IG9mIGhvcGxpdGVzIGFuZCB0aGUgcmVnaW1lbnQgb2YgaG9yc2VtZW4gY29uZHVjdGVkIHRoZSBBbXljbGFlYW5zIGFsb25nIHBhc3QgdGhlIGNpdHkgb2YgdGhlIENvcmludGhpYW5zLgo8ZGF0ZSBhdXRobmFtZT0iLTM5MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MCI+MzkwIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['4.5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGV5IHdlcmUgZGlzdGFudCBmcm9tIFNpY3lvbiBhYm91dCB0d2VudHkgb3IgdGhpcnR5IHN0YWRpYSwgdGhlIHBvbGVtYXJjaCB3aXRoIHRoZSBob3BsaXRlcywgd2hvIHdlcmUgYWJvdXQgc2l4IGh1bmRyZWQgaW4gbnVtYmVyLCBzZXQgb3V0IHRvIHJldHVybiB0byBMZWNoYWV1bSwgYW5kIG9yZGVyZWQgdGhlIGNvbW1hbmRlciBvZiBob3JzZSB0byBmb2xsb3cgYWZ0ZXIgaGltIHdpdGggdGhlIHJlZ2ltZW50IG9mIGhvcnNlbWVuIGFmdGVyIHRoZXkgaGFkIGVzY29ydGVkIHRoZSBBbXljbGFlYW5zIGFzIGZhciBhcyB0aGV5IHRoZW1zZWx2ZXMgZGlyZWN0ZWQuIE5vdyB0aGV5IHdlcmUgYnkgbm8gbWVhbnMgdW5hd2FyZSB0aGF0IHRoZXJlIHdlcmUgbWFueSBwZWx0YXN0cyBhbmQgbWFueSBob3BsaXRlcyBpbiBDb3JpbnRoOyBidXQgb24gYWNjb3VudCBvZiB0aGVpciBwcmV2aW91cyBzdWNjZXNzZXMgdGhleSBjb250ZW1wdHVvdXNseSB0aG91Z2h0IHRoYXQgbm8gb25lIHdvdWxkIGF0dGFjayB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhvc2UgaW4gdGhlIGNpdHkgb2YgdGhlIENvcmludGhpYW5zLCBib3RoIENhbGxpYXMsIHRoZSBzb24gb2YgSGlwcG9uaWN1cywgY29tbWFuZGVyIG9mIHRoZSBBdGhlbmlhbiBob3BsaXRlcywgYW5kIElwaGljcmF0ZXMsIGxlYWRlciBvZiB0aGUgcGVsdGFzdHMsIHdoZW4gdGhleSBkZXNjcmllZCB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIHNhdyB0aGF0IHRoZXkgd2VyZSBub3Qgb25seSBmZXcgaW4gbnVtYmVyLCBidXQgYWxzbyB1bmFjY29tcGFuaWVkIGJ5IGVpdGhlciBwZWx0YXN0cyBvciBjYXZhbHJ5LCB0aG91Z2h0IHRoYXQgaXQgd2FzIHNhZmUgdG8gYXR0YWNrIHRoZW0gd2l0aCB0aGVpciBmb3JjZSBvZiBwZWx0YXN0cy4gRm9yIGlmIHRoZXkgc2hvdWxkIHByb2NlZWQgYWxvbmcgdGhlIHJvYWQsIHRoZXkgY291bGQgYmUgYXR0YWNrZWQgd2l0aCBqYXZlbGlucyBvbiB0aGVpciB1bnByb3RlY3RlZCBzaWRlIGFuZCBkZXN0cm95ZWQ7IGFuZCBpZiB0aGV5IHNob3VsZCB1bmRlcnRha2UgdG8gcHVyc3VlLCB0aGV5IHdpdGggdGhlaXIgcGVsdGFzdHMsIHRoZSBuaW1ibGVzdCBvZiBhbGwgdHJvb3BzLCBjb3VsZCBlYXNpbHkgZXNjYXBlIHRoZSBob3BsaXRlcy4KPC90cmFuc2xhdGlvbj4="
translation['4.5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5IYXZpbmcgY29tZSB0byB0aGlzIGNvbmNsdXNpb24sIHRoZXkgbGVkIGZvcnRoIHRoZWlyIHRyb29wcy4gQW5kIENhbGxpYXMgZm9ybWVkIGhpcyBob3BsaXRlcyBpbiBsaW5lIG9mIGJhdHRsZSBub3QgZmFyIGZyb20gdGhlIGNpdHksIHdoaWxlIElwaGljcmF0ZXMgd2l0aCBoaXMgcGVsdGFzdHMgYXR0YWNrZWQgdGhlIExhY2VkYWVtb25pYW4gcmVnaW1lbnQuIE5vdyB3aGVuIHRoZSBMYWNlZGFlbW9uaWFuczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MCI+MzkwIEIuQy48L2RhdGU+PC9ub3RlPiB3ZXJlIGJlaW5nIGF0dGFja2VkIHdpdGggamF2ZWxpbnMsIGFuZCBzZXZlcmFsIG1lbiBoYWQgYmVlbiB3b3VuZGVkIGFuZCBzZXZlcmFsIG90aGVycyBzbGFpbiwgdGhleSBkaXJlY3RlZCB0aGUgc2hpZWxkLWJlYXJlcnM8ZGF0ZSBhdXRobmFtZT0iLTM5MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MCI+MzkwIEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNsYXZlcyB3aG8gY2FycmllZCB0aGUgc2hpZWxkcyBvZiB0aGUgaG9wbGl0ZXMuPC9ub3RlPiB0byB0YWtlIHVwIHRoZXNlIHdvdW5kZWQgbWVuIGFuZCBjYXJyeSB0aGVtIGJhY2sgdG8gTGVjaGFldW07IGFuZCB0aGVzZSB3ZXJlIHRoZSBvbmx5IG1lbiBpbiB0aGUgcmVnaW1lbnQgd2hvIHdlcmUgcmVhbGx5IHNhdmVkLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuLCBzYXZlZCBib3RoIGluIGxpZmUgYW5kIGluIGhvbm91ci48L25vdGU+IFRoZW4gdGhlIHBvbGVtYXJjaCBvcmRlcmVkIHRoZSBmaXJzdCB0ZW4geWVhci1jbGFzc2VzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSBub3RlIG9uIElJLiBpdi4gMzIuPC9ub3RlPiB0byBkcml2ZSBvZmYgdGhlaXIgYXNzYWlsYW50cy4KPC90cmFuc2xhdGlvbj4="
translation['4.5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGV5IHB1cnN1ZWQsIHRoZXkgY2F1Z2h0IG5vIG9uZSwgc2luY2UgdGhleSB3ZXJlIGhvcGxpdGVzIHB1cnN1aW5nIHBlbHRhc3RzIGF0IHRoZSBkaXN0YW5jZSBvZiBhIGphdmVsaW4ncyBjYXN0OyBmb3IgSXBoaWNyYXRlcyBoYWQgZ2l2ZW4gb3JkZXJzIHRvIHRoZSBwZWx0YXN0cyB0byByZXRpcmUgYmVmb3JlIHRoZSBob3BsaXRlcyBnb3QgbmVhciB0aGVtOyBhbmQgZnVydGhlciwgd2hlbiB0aGUgTGFjZWRhZW1vbmlhbnMgd2VyZSByZXRpcmluZyBmcm9tIHRoZSBwdXJzdWl0LCBiZWluZyBzY2F0dGVyZWQgYmVjYXVzZSBlYWNoIG1hbiBoYWQgcHVyc3VlZCBhcyBzd2lmdGx5IGFzIGhlIGNvdWxkLCB0aGUgdHJvb3BzIG9mIElwaGljcmF0ZXMgdHVybmVkIGFib3V0LCBhbmQgbm90IG9ubHkgZGlkIHRob3NlIGluIGZyb250IGFnYWluIGh1cmwgamF2ZWxpbnMgdXBvbiB0aGUgTGFjZWRhZW1vbmlhbnMsIGJ1dCBhbHNvIG90aGVycyBvbiB0aGUgZmxhbmssIHJ1bm5pbmcgYWxvbmcgdG8gcmVhY2ggdGhlaXIgdW5wcm90ZWN0ZWQgc2lkZS4gSW5kZWVkLCBhdCB0aGUgdmVyeSBmaXJzdCBwdXJzdWl0IHRoZSBwZWx0YXN0cyBzaG90IGRvd24gbmluZSBvciB0ZW4gb2YgdGhlbS4gQW5kIGFzIHNvb24gYXMgdGhpcyBoYXBwZW5lZCwgdGhleSBiZWdhbiB0byBwcmVzcyB0aGUgYXR0YWNrIG11Y2ggbW9yZSBib2xkbHkuCjwvdHJhbnNsYXRpb24+"
translation['4.5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuLCBhcyB0aGUgTGFjZWRhZW1vbmlhbnMgY29udGludWVkIHRvIHN1ZmZlciBsb3NzZXMsIHRoZSBwb2xlbWFyY2ggYWdhaW4gb3JkZXJlZCB0aGUgZmlyc3QgZmlmdGVlbiB5ZWFyLWNsYXNzZXMgdG8gcHVyc3VlLiBCdXQgd2hlbiB0aGVzZSBmZWxsIGJhY2ssIGV2ZW4gbW9yZSBvZiB0aGVtIHdlcmUgc2hvdCBkb3duIHRoYW4gYXQgdGhlIGZpcnN0IHJldGlyZW1lbnQuIEFuZCBub3cgdGhhdCB0aGUgYmVzdCBtZW4gaGFkIGFscmVhZHkgYmVlbiBraWxsZWQsIHRoZSBob3JzZW1lbiBqb2luZWQgdGhlbSwgYW5kIHdpdGggdGhlIGhvcnNlbWVuIHRoZXkgYWdhaW4gdW5kZXJ0b29rIGEgcHVyc3VpdC4gQnV0IHdoZW4gdGhlIHBlbHRhc3RzIHR1cm5lZCB0byBmbGlnaHQsIGF0IHRoYXQgbW9tZW50IHRoZSBob3JzZW1lbiBtYW5hZ2VkIHRoZWlyIGF0dGFjayBiYWRseTsgZm9yIHRoZXkgZGlkIG5vdCBjaGFzZSB0aGUgZW5lbXkgdW50aWwgdGhleSBoYWQga2lsbGVkIHNvbWUgb2YgdGhlbSwgYnV0IGJvdGggaW4gdGhlIHB1cnN1aXQgYW5kIGluIHRoZSB0dXJuaW5nIGJhY2t3YXJkIGtlcHQgYW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTAiPjM5MCBCLkMuPC9kYXRlPjwvbm90ZT4gZXZlbiBmcm9udCB3aXRoIHRoZSBob3BsaXRlcy4gQW5kIHdoYXQgd2l0aCBzdHJpdmluZyBhbmQgc3VmZmVyaW5nIGluIHRoaXMgd2F5IGFnYWluIGFuZCBhZ2FpbiwgdGhlIExhY2VkYWVtb25pYW5zIHRoZW1zZWx2ZXMga2VwdCBjb250aW51YWxseSBiZWNvbWluZyBmZXdlciBhbmQgZmFpbnRlciBvZiBoZWFydCwgd2hpbGUgdGhlaXIgZW5lbWllcyB3ZXJlIGJlY29taW5nIGJvbGRlciwgYW5kIHRob3NlIHdobyBhdHRhY2tlZCB0aGVtIGNvbnRpbnVhbGx5IG1vcmUgbnVtZXJvdXMuCjxkYXRlIGF1dGhuYW1lPSItMzkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkwIj4zOTAgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUgaW4gZGVzcGVyYXRpb24gdGhleSBnYXRoZXJlZCB0b2dldGhlciBvbiBhIHNtYWxsIGhpbGwsIGRpc3RhbnQgZnJvbSB0aGUgc2VhIGFib3V0IHR3byBzdGFkaWEsIGFuZCBmcm9tIExlY2hhZXVtIGFib3V0IHNpeHRlZW4gb3Igc2V2ZW50ZWVuIHN0YWRpYS4gQW5kIHRoZSBtZW4gaW4gTGVjaGFldW0sIHVwb24gcGVyY2VpdmluZyB0aGVtLCBlbWJhcmtlZCBpbiBzbWFsbCBib2F0cyBhbmQgY29hc3RlZCBhbG9uZyB1bnRpbCB0aGV5IGNhbWUgb3Bwb3NpdGUgdGhlIGhpbGwuIFRoZW4gdGhlIHRyb29wcywgYmVpbmcgbm93IGRlc3BlcmF0ZSwgYmVjYXVzZSB0aGV5IHdlcmUgc3VmZmVyaW5nIGFuZCBiZWluZyBzbGFpbiwgd2hpbGUgdW5hYmxlIHRvIGluZmxpY3QgYW55IGhhcm0gdGhlbXNlbHZlcywgYW5kLCBiZXNpZGVzIHRoaXMsIHNlZWluZyB0aGUgQXRoZW5pYW4gaG9wbGl0ZXMgYWxzbyBjb21pbmcgYWdhaW5zdCB0aGVtLCB0b29rIHRvIGZsaWdodC4gQW5kIHNvbWUgb2YgdGhlbSBwbHVuZ2VkIGludG8gdGhlIHNlYSwgYW5kIHNvbWUgZmV3IG1hZGUgdGhlaXIgZXNjYXBlIHdpdGggdGhlIGhvcnNlbWVuIHRvIExlY2hhZXVtLiBCdXQgaW4gYWxsIHRoZSBiYXR0bGVzIGFuZCBpbiB0aGUgZmxpZ2h0IGFib3V0IHR3byBodW5kcmVkIGFuZCBmaWZ0eSBvZiB0aGVtIHdlcmUga2lsbGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5UaHVzIGl0IHdhcyB0aGF0IHRoZXNlIGV2ZW50cyB0b29rIHBsYWNlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIEFnZXNpbGF1cyBkZXBhcnRlZCB3aXRoIHRoZSBkZWZlYXRlZCByZWdpbWVudCwgYW5kIGxlZnQgYW5vdGhlciBiZWhpbmQgaGltIGluIExlY2hhZXVtLiBBbmQgYXMgaGUgcGFzc2VkIGFsb25nIGhvbWV3YXJkLCBoZSBsZWQgaGlzIHRyb29wcyBpbnRvIHRoZSBjaXRpZXMgYXMgbGF0ZSBpbiB0aGUgZGF5IGFzIGhlIGNvdWxkIGFuZCBzZXQgb3V0IGFnYWluIGluIHRoZSBtb3JuaW5nIGFzIGVhcmx5IGFzIGhlIGNvdWxkLiBXaGVuIGhlIGFwcHJvYWNoZWQgTWFudGluZWEsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkNwLiBpdi4gMTcuPC9ub3RlPiBieSBsZWF2aW5nIE9yY2hvbWVudXMgYmVmb3JlIGRhd24gaGUgcGFzc2VkIGJ5IHRoYXQgY2l0eSB3aGlsZSBpdCB3YXMgc3RpbGwgZGFyazogc28gaGFyZCwgaGUgdGhvdWdodCwgd291bGQgdGhlIHNvbGRpZXJzIGZpbmQgaXQgdG8gc2VlIHRoZSBNYW50aW5lYW5zIHJlam9pY2luZyBhdCB0aGVpciBtaXNmb3J0dW5lLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.5.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzLCBJcGhpY3JhdGVzIHdhcyB2ZXJ5IHN1Y2Nlc3NmdWwgaW4gaGlzIG90aGVyIHVuZGVydGFraW5ncyBhbHNvLiBGb3IgYWx0aG91Z2ggZ2Fycmlzb25zIGhhZCBiZWVuIHN0YXRpb25lZCBpbiBTaWR1cyBhbmQgQ3JvbW15b24gYnkgUHJheGl0YXMgd2hlbiBoZSBjYXB0dXJlZCB0aGVzZSBzdHJvbmdob2xkcywgYW5kIGluIE9lbm9lPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkwIj4zOTAgQi5DLjwvZGF0ZT48L25vdGU+IGJ5IEFnZXNpbGF1cyBhdCB0aGUgdGltZSB3aGVuIFBpcmFldW0gd2FzIHRha2VuLCBJcGhpY3JhdGVzIGNhcHR1cmVkIGFsbCB0aGVzZSBwbGFjZXMuIEluIExlY2hhZXVtLCBob3dldmVyLCB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIHRoZWlyIGFsbGllcyBtYWludGFpbmVkIHRoZWlyIGdhcnJpc29uLiBBbmQgdGhlIENvcmludGhpYW4gZXhpbGVzLCBubyBsb25nZXIgcHJvY2VlZGluZyBieSBsYW5kIGZyb20gU2ljeW9uIHBhc3QgQ29yaW50aCwgb24gYWNjb3VudCBvZiB0aGUgZGlzYXN0ZXIgdG8gdGhlIHJlZ2ltZW50LCBidXQgc2FpbGluZyBhbG9uZyB0aGUgY29hc3QgdG8gTGVjaGFldW0gYW5kIHNhbGx5aW5nIGZvcnRoIGZyb20gdGhlcmUsIGNhdXNlZCBhbm5veWFuY2UgdG8gdGhlIHBlb3BsZSBpbiB0aGUgY2l0eSBldmVuIGFzIHRoZXkgc3VmZmVyZWQgYW5ub3lhbmNlIHRoZW1zZWx2ZXMuCjxkYXRlIGF1dGhuYW1lPSItMzkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkwIj4zOTAgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.6.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZSBBY2hhZWFucywgd2hvIHdlcmUgaW4gcG9zc2Vzc2lvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OSI+Mzg5IEIuQy48L2RhdGU+PC9ub3RlPiBvZiBDYWx5ZG9u4oCUaW4gYW5jaWVudCB0aW1lcyBhbiBBZXRvbGlhbiB0b3duIOKAlGFuZCBoYWQgbWFkZSB0aGUgcGVvcGxlIG9mIENhbHlkb24gQWNoYWVhbiBjaXRpemVucywgd2VyZSBjb21wZWxsZWQgdG8ga2VlcCBhIGdhcnJpc29uIHRoZXJlLiBGb3IgdGhlIEFjYXJuYW5pYW5zIG1hZGUgYW4gZXhwZWRpdGlvbiBhZ2FpbnN0IHRoZSBjaXR5LCBhbmQgc29tZSBvZiB0aGUgQXRoZW5pYW5zIGFuZCBCb2VvdGlhbnMgam9pbmVkIHdpdGggdGhlbSwgYmVjYXVzZSB0aGUgQWNhcm5hbmlhbnMgd2VyZSB0aGVpciBhbGxpZXMuIFRoZXJlZm9yZSwgYmVpbmcgaGFyZCBwcmVzc2VkIGJ5IHRoZW0sIHRoZSBBY2hhZWFucyBzZW50IGFtYmFzc2Fkb3JzIHRvIExhY2VkYWVtb24uIEFuZCB1cG9uIHJlYWNoaW5nIHRoZXJlIHRoZSBhbWJhc3NhZG9ycyBzYWlkIHRoYXQgdGhleSB3ZXJlIG5vdCByZWNlaXZpbmcgZmFpciB0cmVhdG1lbnQgZnJvbSB0aGUgTGFjZWRhZW1vbmlhbnMuCjxkYXRlIGF1dGhuYW1lPSItMzg5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg5Ij4zODkgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.6.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPuKAnEZvciwgZ2VudGxlbWVuLOKAnSB0aGV5IHNhaWQsIOKAnHdlIHNlcnZlIHdpdGggeW91IGhvd3NvZXZlciB5b3UgZGlyZWN0IGFuZCBmb2xsb3cgd2hpdGhlcnNvZXZlciB5b3UgbGVhZDsgYnV0IG5vdyB0aGF0IHdlIGFyZSBiZXNpZWdlZCBieSB0aGUgQWNhcm5hbmlhbnMgYW5kIHRoZWlyIGFsbGllcywgdGhlIEF0aGVuaWFucyBhbmQgQm9lb3RpYW5zLCB5b3UgdGFrZSBubyB0aG91Z2h0IGZvciB1cy4gTm93IHdlIGNhbm5vdCBob2xkIG91dCBpZiB0aGVzZSB0aGluZ3MgZ28gb24gaW4gdGhpcyB3YXksIGJ1dCBlaXRoZXIgd2Ugc2hhbGwgYWJhbmRvbiB0aGUgd2FyIGluIFBlbG9wb25uZXN1cyBhbmQgYWxsIG9mIHVzIGNyb3NzIG92ZXIgYW5kIG1ha2Ugd2FyIGFnYWluc3QgdGhlIEFjYXJuYW5pYW5zIGFuZCB0aGVpciBhbGxpZXMsIG9yIGVsc2Ugd2Ugc2hhbGwgbWFrZSBwZWFjZSBvbiB3aGF0ZXZlciB0ZXJtcyB3ZSBjYW4u4oCdCjwvdHJhbnNsYXRpb24+"
translation['4.6.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPk5vdyB0aGV5IHNhaWQgdGhpcyBieSB3YXkgb2YgY292ZXJ0bHkgdGhyZWF0ZW5pbmcgdG8gd2l0aGRyYXcgZnJvbSB0aGVpciBhbGxpYW5jZSB3aXRoIHRoZSBMYWNlZGFlbW9uaWFucyB1bmxlc3MgdGhlIGxhdHRlciBzaG91bGQgaGVscCB0aGVtIGluIHJldHVybi4gSW4gdmlldzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OSI+Mzg5IEIuQy48L2RhdGU+PC9ub3RlPiBvZiB0aGlzIHN0YXRlbWVudCwgaXQgc2VlbWVkIHRvIHRoZSBlcGhvcnMgYW5kIHRoZSBhc3NlbWJseSB0aGF0IGl0IHdhcyBuZWNlc3NhcnkgdG8gdW5kZXJ0YWtlIGEgY2FtcGFpZ24gd2l0aCB0aGUgQWNoYWVhbnMgYWdhaW5zdCB0aGUgQWNhcm5hbmlhbnMuIEFuZCB0aGV5IHNlbnQgb3V0IEFnZXNpbGF1cywgd2l0aCB0d28gTGFjZWRhZW1vbmlhbiByZWdpbWVudHMgYW5kIHRoZSBjb3JyZXNwb25kaW5nIGNvbnRpbmdlbnQgb2YgdGhlIGFsbGllcy4gVGhlIEFjaGFlYW5zLCBob3dldmVyLCBqb2luZWQgaW4gdGhlIGNhbXBhaWduIHdpdGggdGhlaXIgZW50aXJlIGZvcmNlLgo8ZGF0ZSBhdXRobmFtZT0iLTM4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OSI+Mzg5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['4.6.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGVuIEFnZXNpbGF1cyBjcm9zc2VkIG92ZXIsIGFsbCB0aGUgQWNhcm5hbmlhbnMgb2YgdGhlIGNvdW50cnkgZGlzdHJpY3RzIGZsZWQgdG8gdGhlIHdhbGxlZCB0b3ducywgYW5kIGFsbCB0aGVpciBjYXR0bGUgd2VyZSBkcml2ZW4gb2ZmIHRvIHJlbW90ZSBwYXJ0cyB0byBwcmV2ZW50IHRoZWlyIGJlaW5nIGNhcHR1cmVkIGJ5IHRoZSBhcm15LiBCdXQgd2hlbiBBZ2VzaWxhdXMgYXJyaXZlZCBhdCB0aGUgYm9yZGVycyBvZiB0aGUgZW5lbXkncyBjb3VudHJ5LCBoZSBzZW50IHRvIHRoZSBnZW5lcmFsIGFzc2VtYmx5IG9mIHRoZSBBY2FybmFuaWFucyBhdCBTdHJhdHVzIGFuZCBzYWlkIHRoYXQgdW5sZXNzIHRoZXkgZGlzY29udGludWVkIHRoZWlyIGFsbGlhbmNlIHdpdGggdGhlIEJvZW90aWFucyBhbmQgQXRoZW5pYW5zIGFuZCBjaG9zZSBoaXMgcGVvcGxlIGFuZCB0aGUgQWNoYWVhbnMgYXMgYWxsaWVzLCBoZSB3b3VsZCBsYXkgd2FzdGUgdGhlaXIgd2hvbGUgdGVycml0b3J5LCBvbmUgcG9ydGlvbiBhZnRlciBhbm90aGVyLCBhbmQgd291bGQgbm90IHNwYXJlIGFueSBwb3J0aW9uIG9mIGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4sIHVwb24gdGhlaXIgcmVmdXNpbmcgdG8gb2JleSBoaW0sIGhlIHByb2NlZWRlZCB0byBkbyBzbywgY29udGludWFsbHkgZGV2YXN0YXRpbmcgdGhlIGxhbmQgYXMgaGUgd2VudCBhbmQgaGVuY2UgYWR2YW5jaW5nIG5vdCBtb3JlIHRoYW4gdGVuIG9yIHR3ZWx2ZSBzdGFkaWEgYSBkYXkuIFRoZSBBY2FybmFuaWFucywgdGhlcmVmb3JlLCBkZWVtaW5nIGl0IHNhZmUgb24gYWNjb3VudCBvZiB0aGUgc2xvdyBwcm9ncmVzcyBvZiB0aGUgYXJteSwgYnJvdWdodCBkb3duIHRoZWlyIGNhdHRsZSBmcm9tIHRoZSBtb3VudGFpbnMgYW5kIGNvbnRpbnVlZCB0byB0aWxsIHRoZSBncmVhdGVyIHBhcnQgb2YgdGhlaXIgbGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['4.6.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGVuIGl0IHNlZW1lZCB0byBBZ2VzaWxhdXMgdGhhdCB0aGV5IHdlcmUgbm93IHZlcnkgYm9sZCwgb24gdGhlIGZpZnRlZW50aCBvciBzaXh0ZWVudGggZGF5IGZyb20gdGhlIHRpbWUgd2hlbiBoZSBlbnRlcmVkIHRoZSBjb3VudHJ5LCBoZSBvZmZlcmVkIHNhY3JpZmljZSBpbiB0aGUgbW9ybmluZyBhbmQgYWNjb21wbGlzaGVkIGJlZm9yZSBldmVuaW5nIGEgbWFyY2ggb2Ygb25lIGh1bmRyZWQgYW5kIHNpeHR5IHN0YWRpYSB0byB0aGUgbGFrZSBvbiB3aG9zZSBiYW5rcyB3ZXJlIGFsbW9zdCBhbGwgdGhlIGNhdHRsZSBvZiB0aGUgQWNhcm5hbmlhbnMsIGFuZCBoZSBjYXB0dXJlZCBoZXJkcyBvZiBjYXR0bGUgYW5kIGRyb3ZlcyBvZiBob3JzZXMgaW4gbGFyZ2UgbnVtYmVycyBiZXNpZGVzIGFsbCBzb3J0cyBvZiBvdGhlciBzdG9jayBhbmQgZ3JlYXQgbnVtYmVycyBvZiBzbGF2ZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzg5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg5Ij4zODkgQi5DLjwvZGF0ZT48L25vdGU+IEFuZCBhZnRlciBlZmZlY3RpbmcgdGhpcyBjYXB0dXJlIGFuZCByZW1haW5pbmcgdGhlcmUgdGhyb3VnaCB0aGUgZW5zdWluZyBkYXksIGhlIG1hZGUgcHVibGljIHNhbGUgb2YgdGhlIGJvb3R5Lgo8ZGF0ZSBhdXRobmFtZT0iLTM4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OSI+Mzg5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['4.6.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk5vdywgaG93ZXZlciwgbWFueSBwZWx0YXN0cyBvZiB0aGUgQWNhcm5hbmlhbnMgY2FtZSB1cCwgYW5kLCBpbmFzbXVjaCBhcyBBZ2VzaWxhdXMgd2FzIGVuY2FtcGVkIG9uIHRoZSBtb3VudGFpbi1zaWRlLCBieSB0aHJvd2luZyBzdG9uZXMgYW5kIGRpc2NoYXJnaW5nIHRoZWlyIHNsaW5ncyBmcm9tIHRoZSByaWRnZSBvZiB0aGUgbW91bnRhaW4gdGhleSBzdWNjZWVkZWQsIHdpdGhvdXQgc3VmZmVyaW5nIGFueSBoYXJtIHRoZW1zZWx2ZXMsIGluIGZvcmNpbmcgdGhlIGFybXkgdG8gZGVzY2VuZCB0byB0aGUgcGxhaW4sIGV2ZW4gdGhvdWdoIHRoZSBtZW4gd2VyZSBhbHJlYWR5IG1ha2luZyBwcmVwYXJhdGlvbnMgZm9yIGRpbm5lci4gQnV0IGF0IG5pZ2h0IHRoZSBBY2FybmFuaWFucyBkZXBhcnRlZCwgYW5kIHRoZSB0cm9vcHMgcG9zdGVkIHNlbnRpbmVscyBhbmQgbGF5IGRvd24gdG8gcmVzdC4KPC90cmFuc2xhdGlvbj4="
translation['4.6.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbiB0aGUgbmV4dCBkYXkgQWdlc2lsYXVzIHVuZGVydG9vayB0byBsZWFkIGhpcyBhcm15IGF3YXkuIE5vdyB0aGUgcm9hZCB3aGljaCBsZWQgb3V0IGZyb20gdGhlIG1lYWRvdyBhbmQgcGxhaW4gc3Vycm91bmRpbmcgdGhlIGxha2Ugd2FzIG5hcnJvdyBvbiBhY2NvdW50IG9mIHRoZSBtb3VudGFpbnMgd2hpY2ggZW5jaXJjbGVkIGl0IHJvdW5kOyBhbmQgdGhlIEFjYXJuYW5pYW5zLCB0YWtpbmcgcG9zc2Vzc2lvbiBvZiB0aGVzZSBtb3VudGFpbnMsIHRocmV3IHN0b25lcyBhbmQgamF2ZWxpbnMgdXBvbiB0aGUgTGFjZWRhZW1vbmlhbnMgZnJvbSB0aGUgaGVpZ2h0cyB1cG9uIHRoZWlyIHJpZ2h0LCBhbmQgZGVzY2VuZGluZyBncmFkdWFsbHkgdG8gdGhlIHNwdXJzIG9mIHRoZSBtb3VudGFpbnMgcHJlc3NlZCB0aGUgYXR0YWNrIGFuZCBjYXVzZWQgdHJvdWJsZSB0byBzdWNoIGFuIGV4dGVudCB0aGF0IHRoZSBhcm15IHdhcyBubyBsb25nZXIgYWJsZSB0byBwcm9jZWVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZSBob3BsaXRlcyBhbmQgdGhlIGhvcnNlbWVuIGxlZnQgdGhlIHBoYWxhbnggYW5kIHB1cnN1ZWQgdGhlaXIgYXNzYWlsYW50cywgdGhleSBjb3VsZCBuZXZlciBkbyB0aGVtIGFueSBoYXJtOyBmb3Igd2hlbiB0aGUgQWNhcm5hbmlhbnMgZmVsbCBiYWNrLCB0aGV5IHdlcmUgc3BlZWRpbHkgaW4gc2FmZSBwbGFjZXMuIFRoZW4gQWdlc2lsYXVzLCB0aGlua2luZyBpdCBhIGRpZmZpY3VsdCBtYXR0ZXIgZm9yIGhpcyB0cm9vcHMgdG8gZ28gb3V0IHRocm91Z2ggdGhlIG5hcnJvdyBwYXNzIHVuZGVyIHRoZXNlIGF0dGFja3MsIGRlY2lkZWQgdG8gcHVyc3VlIHRoZSBtZW4gd2hvIHdlcmUgYXR0YWNraW5nIHRoZW0gb24gdGhlIGxlZnQsIHZlcnkgbWFueSBpbiBudW1iZXI7IGZvciB0aGUgbW91bnRhaW4gb24gdGhpcyBzaWRlIHdhcyBtb3JlIGFjY2Vzc2libGUgYm90aCBmb3IgaG9wbGl0ZXMgYW5kIGhvcnNlcy4KPC90cmFuc2xhdGlvbj4="
translation['4.6.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hpbGUgaGUgd2FzIHNhY3JpZmljaW5nLCB0aGUgQWNhcm5hbmlhbnMgcHJlc3NlZCB0aGVtIHZlcnkgaGFyZCB3aXRoIHRocm93aW5nIHN0b25lcyBhbmQgamF2ZWxpbnMsIGFuZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OSI+Mzg5IEIuQy48L2RhdGU+PC9ub3RlPiBjb21pbmcgY2xvc2UgdXAgdG8gdGhlbSB3b3VuZGVkIG1hbnkuIEJ1dCB3aGVuIGhlIGdhdmUgdGhlIHdvcmQsIHRoZSBmaXJzdCBmaWZ0ZWVuIHllYXItY2xhc3NlcyBvZiB0aGUgaG9wbGl0ZXMgcmFuIGZvcnRoLCB0aGUgaG9yc2VtZW4gY2hhcmdlZCwgYW5kIGhlIGhpbXNlbGYgd2l0aCB0aGUgb3RoZXIgdHJvb3BzIGZvbGxvd2VkLgo8ZGF0ZSBhdXRobmFtZT0iLTM4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OSI+Mzg5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['4.6.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRob3NlIGFtb25nIHRoZSBBY2FybmFuaWFucyB3aG8gaGFkIGNvbWUgZG93biB0aGUgbW91bnRhaW5zIGFuZCB3ZXJlIHRocm93aW5nIG1pc3NpbGVzIHF1aWNrbHkgZ2F2ZSB3YXkgYW5kLCBhcyB0aGV5IHRyaWVkIHRvIGVzY2FwZSB1cGhpbGwsIHdlcmUga2lsbGVkIG9uZSBhZnRlciBhbm90aGVyOyBvbiB0aGUgc3VtbWl0LCBob3dldmVyLCB3ZXJlIHRoZSBob3BsaXRlcyBvZiB0aGUgQWNhcm5hbmlhbnMsIGRyYXduIHVwIGluIGxpbmUgb2YgYmF0dGxlLCBhbmQgdGhlIGdyZWF0ZXIgcGFydCBvZiB0aGUgcGVsdGFzdHMsIGFuZCB0aGVyZSB0aGV5IHN0b29kIGZpcm0sIGFuZCBub3Qgb25seSBkaXNjaGFyZ2VkIHRoZWlyIG90aGVyIG1pc3NpbGVzLCBidXQgYnkgaHVybGluZyB0aGVpciBzcGVhcnMgc3RydWNrIGRvd24gaG9yc2VtZW4gYW5kIGtpbGxlZCBzb21lIGhvcnNlcy4gQnV0IHdoZW4gdGhleSB3ZXJlIG5vdyBhbG1vc3QgYXQgY2xvc2UgcXVhcnRlcnMgd2l0aCB0aGUgTGFjZWRhZW1vbmlhbiBob3BsaXRlcywgdGhleSBnYXZlIHdheSwgYW5kIHRoZXJlIGZlbGwgb24gdGhhdCBkYXkgYWJvdXQgdGhyZWUgaHVuZHJlZCBvZiB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXNlIHRoaW5ncyBoYWQgdGFrZW4gcGxhY2UsIEFnZXNpbGF1cyBzZXQgdXAgYSB0cm9waHkuIEFuZCBhZnRlcndhcmRzLCBnb2luZyBhYm91dCB0aHJvdWdoIHRoZSBjb3VudHJ5LCBoZSBsYWlkIGl0IHdhc3RlIHdpdGggYXhlIGFuZCBmaXJlOyBoZSBhbHNvIG1hZGUgYXNzYXVsdHMgdXBvbiBzb21lIG9mIHRoZSBjaXRpZXMsIGJlaW5nIGNvbXBlbGxlZCBieSB0aGUgQWNoYWVhbnMgdG8gZG8gc28sIGJ1dCBkaWQgbm90IGNhcHR1cmUgYW55IG9uZSBvZiB0aGVtLiBBbmQgd2hlbiBhdCBsZW5ndGggYXV0dW1uIHdhcyBjb21pbmcgb24sIGhlIHNldCBhYm91dCBkZXBhcnRpbmcgZnJvbSB0aGUgY291bnRyeS4KPC90cmFuc2xhdGlvbj4="
translation['4.6.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIEFjaGFlYW5zLCBob3dldmVyLCB0aG91Z2h0IHRoYXQgaGUgaGFkIGFjY29tcGxpc2hlZCBub3RoaW5nIGJlY2F1c2UgaGUgaGFkIGdhaW5lZCBwb3NzZXNzaW9uIG9mIG5vIGNpdHksIHdpdGggb3Igd2l0aG91dCBpdHMgY29uc2VudCwgYW5kIHRoZXkgYmVnZ2VkIGhpbSwgZXZlbiBpZiBoZSBkaWQgbm90aGluZyBlbHNlLCBhdCBsZWFzdCB0byBzdGF5IGxvbmcgZW5vdWdoIHRvIHByZXZlbnQgdGhlIEFjYXJuYW5pYW5zIGZyb20gc293aW5nIHRoZWlyIHNlZWQuIEhlIHJlcGxpZWQgdGhhdCB3aGF0IHRoZXkgd2VyZSBwcm9wb3Npbmcgd2FzIHRoZSBvcHBvc2l0ZSBvZiB0aGUgYWR2YW50YWdlb3VzIGNvdXJzZS4g4oCcRm9yLOKAnSBoZSBzYWlkLCDigJxJIHNoYWxsIGFnYWluIGxlYWQgYW4gZXhwZWRpdGlvbiBoaXRoZXIgbmV4dCBzdW1tZXI7IGFuZCB0aGUgbW9yZSB0aGVzZSBwZW9wbGUgc293LCB0aGUgbW9yZSB0aGV5IHdpbGwgZGVzaXJlIHBlYWNlLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.6.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5IYXZpbmcgc2FpZCB0aGlzLCBoZSBkZXBhcnRlZCBvdmVybGFuZCB0aHJvdWdoPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzg5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg5Ij4zODkgQi5DLjwvZGF0ZT48L25vdGU+IEFldG9saWEgYnkgc3VjaCByb2FkcyBhcyBuZWl0aGVyIG1hbnkgbm9yIGZldyBjb3VsZCB0cmF2ZXJzZSBhZ2FpbnN0IHRoZSB3aWxsIG9mIHRoZSBBZXRvbGlhbnM7IHRoZXkgYWxsb3dlZCBoaW0sIGhvd2V2ZXIsIHRvIHBhc3MgdGhyb3VnaDsgZm9yIHRoZXkgaG9wZWQgdGhhdCBoZSB3b3VsZCBhaWQgdGhlbSB0byByZWNvdmVyIE5hdXBhY3R1cy4gQW5kIHdoZW4gaGUgcmVhY2hlZCB0aGUgcG9pbnQgb3Bwb3NpdGUgUmhpdW0sIGhlIGNyb3NzZWQgb3ZlciBhdCB0aGF0IHBvaW50IGFuZCByZXR1cm5lZCBob21lOyBmb3IgdGhlIEF0aGVuaWFucyBiYXJyZWQgdGhlIHBhc3NhZ2UgZnJvbSBDYWx5ZG9uIHRvIFBlbG9wb25uZXN1czxkYXRlIGF1dGhuYW1lPSItMzg5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg5Ij4zODkgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SGVuY2UsIGluc3RlYWQgb2YgY3Jvc3NpbmcgZGlyZWN0bHkgZnJvbSBDYWx5ZG9uLCB0aGUgYXJteSB3YXMgY29tcGVsbGVkIHRvIHByb2NlZWQgYSBsb25nIGRpc3RhbmNlIHRvIHRoZSBlYXN0d2FyZCwgdGhyb3VnaCBkaWZmaWN1bHQgY291bnRyeSAoc2VlIGFib3ZlKSwgdG8gcmVhY2ggdGhlIFN0cmFpdCBvZiBSaGl1bS48L25vdGU+IHdpdGggdGhlaXIgdHJpcmVtZXMsIHVzaW5nIE9lbmlhZGFlIGFzIGEgYmFzZS4KPC90cmFuc2xhdGlvbj4="
translation['4.7.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZSB3aW50ZXIgaGFkIHBhc3NlZCwgYXQgdGhlIHZlcnk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODgiPjM4OCBCLkMuPC9kYXRlPjwvbm90ZT4gYmVnaW5uaW5nIG9mIHNwcmluZyBBZ2VzaWxhdXMgYWdhaW4gY2FsbGVkIG91dCB0aGUgYmFuIGFnYWluc3QgdGhlIEFjYXJuYW5pYW5zLCBpbiBhY2NvcmRhbmNlIHdpdGggaGlzIHByb21pc2UgdG8gdGhlIEFjaGFlYW5zLiBCdXQgdGhlIEFjYXJuYW5pYW5zLCBsZWFybmluZyBvZiB0aGlzIGFuZCB0aGlua2luZyB0aGF0IGluYXNtdWNoIGFzIHRoZWlyIGNpdGllcyB3ZXJlIGluIHRoZSBpbnRlcmlvciB0aGV5IHdvdWxkIGJlIGp1c3QgYXMgdHJ1bHkgYmVzaWVnZWQgYnkgdGhlIHBlb3BsZSB3aG8gZGVzdHJveWVkIHRoZWlyIGNvcm4gYXMgaWYgdGhleSB3ZXJlIGJlc2llZ2VkIGJ5IGFuIGFybXkgZW5jYW1wZWQgYXJvdW5kIHRoZW0sIHNlbnQgYW1iYXNzYWRvcnMgdG8gTGFjZWRhZW1vbiBhbmQgY29uY2x1ZGVkIHBlYWNlIHdpdGggdGhlIEFjaGFlYW5zIGFuZCBhbiBhbGxpYW5jZSB3aXRoIHRoZSBMYWNlZGFlbW9uaWFucy4gVGh1cyBlbmRlZCB0aGUgYWZmYWlyIG9mIHRoZSBBY2FybmFuaWFucy4KPGRhdGUgYXV0aG5hbWU9Ii0zODgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODgiPjM4OCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.7.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIGl0IHNlZW1lZCB0byB0aGUgTGFjZWRhZW1vbmlhbnMgdGhhdCBpdCB3YXMgbm90IHNhZmUgZm9yIHRoZW0gdG8gdW5kZXJ0YWtlIGEgY2FtcGFpZ24gYWdhaW5zdCB0aGUgQXRoZW5pYW5zIG9yIGFnYWluc3QgdGhlIEJvZW90aWFucyB3aGlsZSBsZWF2aW5nIGluIHRoZWlyIHJlYXIgYSBob3N0aWxlIHN0YXRlIGJvcmRlcmluZyB1cG9uIExhY2VkYWVtb24gYW5kIG9uZSBzbyBsYXJnZSBhcyB0aGF0IG9mIHRoZSBBcmdpdmVzOyB0aGV5IGFjY29yZGluZ2x5IGNhbGxlZCBvdXQgdGhlIGJhbiBhZ2FpbnN0IEFyZ29zLiBOb3cgd2hlbiBBZ2VzaXBvbGlzIGxlYXJuZWQgdGhhdCBoZSB3YXMgdG8gbGVhZCB0aGUgYmFuLCBhbmQgd2hlbiB0aGUgc2FjcmlmaWNlcyB3aGljaCBoZSBvZmZlcmVkIGF0IHRoZSBmcm9udGllciBwcm92ZWQgZmF2b3VyYWJsZSwgaGUgd2VudCB0byBPbHltcGlhIGFuZCBjb25zdWx0ZWQgdGhlIG9yYWNsZSBvZiB0aGUgZ29kLCBhc2tpbmcgd2hldGhlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OCI+Mzg4IEIuQy48L2RhdGU+PC9ub3RlPiBpdCB3b3VsZCBiZSBjb25zaXN0ZW50IHdpdGggcGlldHkgaWYgaGUgZGlkIG5vdCBhY2tub3dsZWRnZSB0aGUgaG9seSB0cnVjZSBjbGFpbWVkIGJ5IHRoZSBBcmdpdmVzOyBmb3IsIGhlIHVyZ2VkLCBpdCB3YXMgbm90IHdoZW4gdGhlIGFwcG9pbnRlZCB0aW1lIGNhbWUsIGJ1dCB3aGVuIHRoZSBMYWNlZGFlbW9uaWFucyB3ZXJlIGFib3V0IHRvIGludmFkZSB0aGVpciB0ZXJyaXRvcnksIHRoYXQgdGhleSBwbGVhZGVkIHRoZSBzYWNyZWQgbW9udGhzLjxkYXRlIGF1dGhuYW1lPSItMzg4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg4Ij4zODggQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIGNhbGVuZGFycyBvZiBkaWZmZXJlbnQgR3JlZWsgc3RhdGVzIHZhcmllZCBzbyBtdWNoIHRoYXQgc2hhcnAgcHJhY3RpY2Ugb2YgdGhlIHNvcnQgaGVyZSBhbGxlZ2VkLCBpLmUuLCBzaGlmdGluZyB0aGUgdGltZXMgb2YgcmVsaWdpb3VzIGZlc3RpdmFscyB0byBtZWV0IGFuIGVtZXJnZW5jeSwgd2FzIG5vdCBkaWZmaWN1bHQgb3IgdW51c3VhbC4gQ3AuIGlpLiAxNiBhbmQgVGh1Yy4gdi4gNTQuPC9ub3RlPiBBbmQgdGhlIGdvZCBzaWduaWZpZWQgdG8gaGltIHRoYXQgaXQgd2FzIGNvbnNpc3RlbnQgd2l0aCBwaWV0eSBmb3IgaGltIG5vdCB0byBhY2tub3dsZWRnZSBhIGhvbHkgdHJ1Y2Ugd2hpY2ggd2FzIHBsZWFkZWQgdW5qdXN0bHkuIFRoZW4gQWdlc2lwb2xpcyBwcm9jZWVkZWQgc3RyYWlnaHQgZnJvbSB0aGVyZSB0byBEZWxwaGkgYW5kIGFza2VkIEFwb2xsbyBpbiBoaXMgdHVybiB3aGV0aGVyIGhlIGFsc28gaGVsZCB0aGUgc2FtZSBvcGluaW9uIGFzIGhpcyBmYXRoZXIgWmV1cyBpbiByZWdhcmQgdG8gdGhlIHRydWNlLiBBbmQgQXBvbGxvIGFuc3dlcmVkIHRoYXQgaGUgZGlkIGhvbGQgcXVpdGUgdGhlIHNhbWUgb3Bpbmlvbi4KPC90cmFuc2xhdGlvbj4="
translation['4.7.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlVuZGVyIHRoZXNlIGNpcmN1bXN0YW5jZXMgQWdlc2lwb2xpcyBsZWQgZm9ydGggaGlzIGFybXkgZnJvbSBQaGxpdXPigJRmb3IgaXQgaGFkIGJlZW4gYXNzZW1ibGluZyBmb3IgaGltIHRoZXJlIHdoaWxlIGhlIHdhcyBhd2F5IHZpc2l0aW5nIHRoZSBob2x5IHBsYWNlc+KAlGFuZCBlbnRlcmVkIHRoZSB0ZXJyaXRvcnkgb2YgQXJnb3MgYnkgd2F5IG9mIE5lbWVhLiBBbmQgd2hlbiB0aGUgQXJnaXZlcyByZWFsaXplZCB0aGF0IHRoZXkgd291bGQgbm90IGJlIGFibGUgdG8gaGluZGVyIHRoZSBpbnZhc2lvbiwgdGhleSBzZW50LCBhcyB0aGV5IHdlcmUgd29udCB0byBkbywgdHdvIGhlcmFsZHMsIGdhcmxhbmRlZCwgcGxlYWRpbmcgYSBob2x5IHRydWNlLiBCdXQgQWdlc2lwb2xpcyBpbiByZXBseSBzYWlkIHRoYXQgdGhlIGdvZHMgZGlkIG5vdCB0aGluayB0aGV5IHdlcmUgbWFraW5nIHRoaXMgcGxlYSBqdXN0bHksIGFuZCBzbyBoZSByZWZ1c2VkIHRvIGFja25vd2xlZGdlIHRoZSB0cnVjZSwgYnV0IGFkdmFuY2VkIGludG8gdGhlaXIgdGVycml0b3J5IGFuZCBjYXVzZWQgZ3JlYXQgZGlzdHJlc3MgYW5kIHRlcnJvciBib3RoIGluIHRoZSBjb3VudHJ5IGFuZCBpbiB0aGUgY2l0eS4KPC90cmFuc2xhdGlvbj4="
translation['4.7.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgd2hpbGUgaGUgd2FzIGF0IGRpbm5lciBpbiB0aGUgbGFuZCBvZiB0aGUgQXJnaXZlcywgb24gdGhlIGZpcnN0IGV2ZW5pbmcgb2YgaGlzIHN0YXkgdGhlcmUsIGFuZCB3aGVuIHRoZSBhZnRlci1kaW5uZXIgbGliYXRpb25zIGhhZCBqdXN0IGJlZW4gbWFkZSwgdGhlIGdvZCBzZW50IGFuIGVhcnRocXVha2U7IGFuZCBhbGwgdGhlIExhY2VkYWVtb25pYW5zLCB0aG9zZSBpbiB0aGUgcm95YWwgdGVudCB0YWtpbmcgdGhlIGxlYWQsIHN0cnVjayB1cCB0aGUgcGFlYW4gdG8gUG9zZWlkb248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VG8gd2hvbSBlYXJ0aHF1YWtlcyB3ZXJlIGFzY3JpYmVkIGJ5IHRoZSBHcmVla3MuPC9ub3RlPjsgYW5kIHRoZSByZXN0IG9mIHRoZSBzb2xkaWVycyBleHBlY3RlZCB0byByZXRpcmUgZnJvbSB0aGUgY291bnRyeSwgYmVjYXVzZSBBZ2lzIGxpa2V3aXNlLCBvbiBhbiBvY2Nhc2lvbiB3aGVuIGFuIGVhcnRocXVha2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii04ODgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii04ODgiPjg4OCBCLkMuPC9kYXRlPjwvbm90ZT4gdG9vayBwbGFjZSwgaGFkIHdpdGhkcmF3biBoaXMgYXJteSBmcm9tIEVsaXMuPGRhdGUgYXV0aG5hbWU9Ii04ODgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii04ODgiPjg4OCBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DcC4gSUlJLiBpaS4gMjQuPC9ub3RlPiBCdXQgQWdlc2lwb2xpcyBzYWlkIHRoYXQgaWYgdGhlIGdvZCBoYWQgc2VudCBhbiBlYXJ0aHF1YWtlIHdoZW4gaGUgd2FzIGFib3V0IHRvIGludmFkZSwgaGUgc2hvdWxkIGhhdmUgdGhvdWdodCB0aGF0IGhlIHdhcyBmb3JiaWRkaW5nIHRoZSBpbnZhc2lvbjsgYnV0IHNpbmNlIGhlIHNlbnQgaXQgYWZ0ZXIgaGUgaGFkIGludmFkZWQsIGhlIGJlbGlldmVkIHRoYXQgaGUgd2FzIHVyZ2luZyBoaW0gb247CjwvdHJhbnNsYXRpb24+"
translation['4.7.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPmFjY29yZGluZ2x5LCBvbiB0aGUgbmV4dCBkYXksIGFmdGVyIG9mZmVyaW5nIHNhY3JpZmljZXMgdG8gUG9zZWlkb24sIGhlIGFnYWluIGxlZCBvbiBoaXMgZm9yY2VzLCBhZHZhbmNpbmcgZmFyIGludG8gdGhlIGNvdW50cnkuIEFuZCBpbmFzbXVjaCBhcyBBZ2VzaWxhdXMgaGFkIGxhdGVseSBtYWRlIGFuIGV4cGVkaXRpb24gaW50byBBcmdvcywgQWdlc2lwb2xpcywgZmluZGluZyBvdXQgZnJvbSB0aGUgc29sZGllcnMgaG93IGZhciBBZ2VzaWxhdXMgaGFkIGxlZCBoaXMgYXJteSBpbiB0aGUgZGlyZWN0aW9uIG9mIHRoZSB3YWxsLCBhbmQgaG93IGZhciBoZSBoYWQgbGFpZCB3YXN0ZSB0aGUgbGFuZCwgZW5kZWF2b3VyZWQsIGxpa2UgYW4gYXRobGV0ZSBpbiB0aGUgcGVudGF0aGx1bSwgdG8gZ28gYmV5b25kIGhpbSBhdCBldmVyeSBwb2ludC4KPC90cmFuc2xhdGlvbj4="
translation['4.7.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk9uIG9uZSBvY2Nhc2lvbiBpdCB3YXMgb25seSB3aGVuIGhlIHdhcyBiZWluZyBwZWx0ZWQgd2l0aCBtaXNzaWxlcyBmcm9tIHRoZSB0b3dlcnMgdGhhdCBoZSByZWNyb3NzZWQgdGhlIHRyZW5jaGVzIGFyb3VuZCB0aGUgY2l0eSB3YWxsOyBhbmQgb25jZSwgd2hlbiBtb3N0IG9mIHRoZSBBcmdpdmVzIHdlcmUgYXdheSBpbiBMYWNvbmlhLCBoZSBhcHByb2FjaGVkIHNvIG5lYXIgdGhlIGdhdGVzIHRoYXQgdGhlIEFyZ2l2ZXMgd2hvIHdlcmUgYXQgdGhlIGdhdGVzIHNodXQgb3V0IHRoZSBob3JzZW1lbiBvZiB0aGUgQm9lb3RpYW5zIHdobyB3YW50ZWQgdG8gZW50ZXIsIHRocm91Z2ggZmVhciB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyB3b3VsZCBydXNoIGluIGF0IHRoZSBnYXRlcyBhbG9uZyB3aXRoIHRoZW07IHNvIHRoYXQgdGhlIGhvcnNlbWVuIHdlcmUgY29tcGVsbGVkIHRvIGNsaW5nLCBsaWtlIGJhdHMsIHRpZ2h0IHRvIHRoZSB3YWxscyBiZW5lYXRoIHRoZSBiYXR0bGVtZW50cy4gQW5kIGlmIGl0IGhhZCBub3QgY2hhbmNlZCB0aGF0IHRoZSBDcmV0YW5zIHdlcmUgb2ZmIG9uIGEgcGx1bmRlcmluZyBleHBlZGl0aW9uIHRvIE5hdXBsaWEgYXQgdGhhdCB0aW1lLCBtYW55IG1lbiBhbmQgaG9yc2VzIHdvdWxkIGhhdmUgYmVlbiBzaG90IGRvd24gYnkgdGhlaXIgYXJyb3dzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.7.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMsIHdoaWxlIEFnZXNpcG9saXMgd2FzIGVuY2FtcGluZyBuZWFyIHRoZSBlbmNsb3NlZCBzcGFjZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHJlZmVyZW5jZSBpcyB1bmtub3duLjwvbm90ZT4gYSB0aHVuZGVyYm9sdCBmZWxsIGludG8gaGlzIGNhbXA7IGFuZCBzb21lIG1lbiB3ZXJlIGtpbGxlZCBieSBiZWluZyBzdHJ1Y2ssIG90aGVycyBieSB0aGUgc2hvY2suIEFmdGVyIHRoaXMsIGRlc2lyaW5nIHRvIGZvcnRpZnkgYSBnYXJyaXNvbiBwb3N0IGF0IHRoZSBlbnRyYW5jZSB0byB0aGUgQXJnaXZlIGNvdW50cnkgd2hpY2ggbGVhZHMgcGFzdCBNb3VudCBDZWx1c2EsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzg4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg4Ij4zODggQi5DLjwvZGF0ZT48L25vdGU+IGhlIG9mZmVyZWQgc2FjcmlmaWNlOyBhbmQgdGhlIGxpdmVycyBvZiB0aGUgdmljdGltcyB3ZXJlIGZvdW5kIHRvIGJlIGxhY2tpbmcgYSBsb2JlLiBXaGVuIHRoaXMgaGFwcGVuZWQsIGhlIGxlZCBoaXMgYXJteSBhd2F5IGFuZCBkaXNiYW5kZWQgaXQsIGhhdmluZyBpbmZsaWN0ZWQgdmVyeSBncmVhdCBoYXJtIHVwb24gdGhlIEFyZ2l2ZXMgYmVjYXVzZSBoZSBoYWQgaW52YWRlZCB0aGVpciBsYW5kIHVuZXhwZWN0ZWRseS4KPGRhdGUgYXV0aG5hbWU9Ii0zODgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODgiPjM4OCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.8.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBmb3IgdGhlIHdhciBieSBsYW5kLCBpdCB3YXMgYmVpbmcgd2FnZWQgaW4gdGhlIG1hbm5lciBkZXNjcmliZWQuIEkgd2lsbCBub3cgcmVjb3VudCB3aGF0IGhhcHBlbmVkIGJ5IHNlYSBhbmQgaW4gdGhlIGNpdGllcyBvbiB0aGUgY29hc3Qgd2hpbGUgYWxsIHRoZXNlIHRoaW5ncyB3ZXJlIGdvaW5nIG9uLCBhbmQgd2lsbCBkZXNjcmliZSBzdWNoIG9mIHRoZSBldmVudHMgYXMgYXJlIHdvcnRoeSBvZiByZWNvcmQsIHdoaWxlIHRob3NlIHdoaWNoIGRvIG5vdCBkZXNlcnZlIG1lbnRpb24gSSB3aWxsIHBhc3Mgb3Zlci4gSW4gdGhlIGZpcnN0IHBsYWNlLCB0aGVuLCBQaGFybmFiYXp1cyBhbmQgQ29ub24sIGFmdGVyIGRlZmVhdGluZyB0aGUgTGFjZWRhZW1vbmlhbnMgaW4gdGhlIG5hdmFsIGJhdHRsZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q3AuIGlpaS4gMTAgZi48L25vdGU+IG1hZGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTQiPjM5NCBCLkMuPC9kYXRlPjwvbm90ZT4gYSB0b3VyIG9mIHRoZSBpc2xhbmRzIGFuZCB0aGUgY2l0aWVzIG9uIHRoZSBzZWEgY29hc3QsIGRyb3ZlIG91dCB0aGUgTGFjb25pYW4gZ292ZXJub3JzLCBhbmQgZW5jb3VyYWdlZCB0aGUgY2l0aWVzIGJ5IHNheWluZyB0aGF0IHRoZXkgd291bGQgbm90IGVzdGFibGlzaCBmb3J0aWZpZWQgY2l0YWRlbHMgd2l0aGluIHRoZWlyIHdhbGxzIGFuZCB3b3VsZCBsZWF2ZSB0aGVtIGluZGVwZW5kZW50Lgo8ZGF0ZSBhdXRobmFtZT0iLTM5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NCI+Mzk0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['4.8.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGUgcGVvcGxlIG9mIHRoZSBjaXRpZXMgcmVjZWl2ZWQgdGhpcyBhbm5vdW5jZW1lbnQgd2l0aCBqb3kgYW5kIGFwcHJvdmFsLCBhbmQgZW50aHVzaWFzdGljYWxseSBzZW50IGdpZnRzIG9mIGZyaWVuZHNoaXAgdG8gUGhhcm5hYmF6dXMuIENvbm9uLCBpdCBzZWVtcywgd2FzIGFkdmlzaW5nIFBoYXJuYWJhenVzIHRoYXQgaWYgaGUgYWN0ZWQgaW4gdGhpcyB3YXksIGFsbCB0aGUgY2l0aWVzIHdvdWxkIGJlIGZyaWVuZGx5IHRvIGhpbSwgYnV0IGlmIGl0IHNob3VsZCBiZSBldmlkZW50IHRoYXQgaGUgd2FudGVkIHRvIGVuc2xhdmUgdGhlbSwgaGUgc2FpZCB0aGF0IGVhY2ggc2luZ2xlIGNpdHkgd2FzIGNhcGFibGUgb2YgbWFraW5nIGEgZ3JlYXQgZGVhbCBvZiB0cm91YmxlIGFuZCB0aGF0IHRoZXJlIHdhcyBkYW5nZXIgdGhhdCB0aGUgcGVvcGxlIG9mIEdyZWVjZSBhbHNvLCBpZiB0aGV5IGxlYXJuZWQgb2YgdGhpcywgd291bGQgYmVjb21lIHVuaXRlZC4KPC90cmFuc2xhdGlvbj4="
translation['4.8.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlBoYXJuYWJhenVzIHdhcyBhY2NvcmRpbmdseSBhY2NlcHRpbmcgdGhpcyBjb3Vuc2VsLiBUaGVuLCBkaXNlbWJhcmtpbmcgYXQgRXBoZXN1cywgaGUgZ2F2ZSBDb25vbiBmb3J0eSB0cmlyZW1lcyBhbmQgdG9sZCBoaW0gdG8gbWVldCBoaW0gYXQgU2VzdHVzLCB3aGlsZSBoZSBoaW1zZWxmIHByb2NlZWRlZCBieSBsYW5kIGFsb25nIHRoZSBjb2FzdCB0byBoaXMgb3duIHByb3ZpbmNlLiBGb3IgRGVyY3lsaWRhcywgd2hvIGhhZCBsb25nIGJlZW4gYW4gZW5lbXkgb2YgaGlzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DcC4gSUlJLiBpLiA5Ljwvbm90ZT4gY2hhbmNlZCB0byBiZSBpbiBBYnlkdXMgYXQgdGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48L25vdGU+IHRpbWUgd2hlbiB0aGUgbmF2YWwgYmF0dGxlIHRvb2sgcGxhY2UsIGFuZCBoZSBkaWQgbm90LCBsaWtlIHRoZSBvdGhlciBMYWNlZGFlbW9uaWFuIGdvdmVybm9ycywgcXVpdCB0aGUgY2l0eSwgYnV0IHRvb2sgcG9zc2Vzc2lvbiBvZiBBYnlkdXMgYW5kIHdhcyBrZWVwaW5nIGl0IGZyaWVuZGx5IHRvIHRoZSBMYWNlZGFlbW9uaWFucy4gRm9yIGhlIGNhbGxlZCB0b2dldGhlciB0aGUgcGVvcGxlIG9mIHRoZSB0b3duIGFuZCBzcG9rZSBhcyBmb2xsb3dzOgo8ZGF0ZSBhdXRobmFtZT0iLTM5NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5NCI+Mzk0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['4.8.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxHZW50bGVtZW4sIGF0IHRoaXMgbW9tZW50IGl0IGlzIHBvc3NpYmxlIGZvciB5b3UsIHdobyBldmVuIGluIGZvcm1lciBkYXlzIGhhdmUgYmVlbiBmcmllbmRzIG9mIG91ciBzdGF0ZSwgdG8gc2hvdyB5b3Vyc2VsdmVzIGJlbmVmYWN0b3JzIG9mIHRoZSBMYWNlZGFlbW9uaWFucy4gRm9yIHNob3dpbmcgbG95YWx0eSBpbiB0aGUgbWlkc3Qgb2YgcHJvc3Blcml0eSBjYWxscyBmb3Igbm8gcGFydGljdWxhciBhZG1pcmF0aW9uLCBidXQgYWx3YXlzLCBpZiBtZW4gc2hvdyB0aGVtc2VsdmVzIHN0ZWFkZmFzdCB3aGVuIGZyaWVuZHMgaGF2ZSBmYWxsZW4gdXBvbiBtaXNmb3J0dW5lcywgdGhpcyBpcyByZW1lbWJlcmVkIGZvciBhbGwgdGltZS4gRG8gbm90IHN1cHBvc2UgdGhhdCBqdXN0IGJlY2F1c2Ugd2UgaGF2ZSBiZWVuIGRlZmVhdGVkIGluIHRoZSBuYXZhbCBiYXR0bGUsIHdlIGFyZSB0aGVyZWZvcmUgZXZlciBhZnRlcndhcmQgdG8gYmUgY291bnRlZCBmb3IgbmF1Z2h0LiBOYXksIGV2ZW4gaW4gZm9ybWVyIHRpbWVzLCB5b3UgcmVjYWxsLCB3aGVuIHRoZSBBdGhlbmlhbnMgd2VyZSBydWxlcnMgb2YgdGhlIHNlYSwgb3VyIHN0YXRlIHdhcyBhYmxlIGJvdGggdG8gY29uZmVyIGJlbmVmaXQgdXBvbiBmcmllbmRzIGFuZCB0byBpbmZsaWN0IGhhcm0gdXBvbiBlbmVtaWVzLiBBbmQgdGhlIGdyZWF0ZXIgdGhlIGV4dGVudCB0byB3aGljaCB0aGUgb3RoZXIgY2l0aWVzIGhhdmUsIGFsb25nIHdpdGggZm9ydHVuZSwgdHVybmVkIGF3YXkgZnJvbSB1cywgYnkgc28gbXVjaCB0aGUgZ3JlYXRlciBpbiByZWFsaXR5IHdvdWxkIHlvdXIgZmlkZWxpdHkgYmUgbWFkZSBtYW5pZmVzdC4gQnV0IGlmIGFueW9uZSBpcyBhZnJhaWQgdGhhdCB3ZSBtYXkgYmUgYmVzaWVnZWQgaGVyZSBib3RoIGJ5IGxhbmQgYW5kIGJ5IHNlYSwgbGV0IGhpbSByZWZsZWN0IHRoYXQgdGhlcmUgaXMgbm90IHlldCBhIEdyZWVrIGZsZWV0IG9uIHRoZSBzZWEsIGFuZCBpZiB0aGUgYmFyYmFyaWFucyBzaGFsbCB1bmRlcnRha2UgdG8gcnVsZSB0aGUgc2VhLCBHcmVlY2Ugd2lsbCBub3QgdG9sZXJhdGUgdGhpczsgc28gdGhhdCBpbiBoZWxwaW5nIGhlcnNlbGYgc2hlIHdpbGwgYWxzbyBiZWNvbWUgeW91ciBhbGx5LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5VcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMsIHRoZSBBYnlkZW5lcyB5aWVsZGVkIGNvbXBsaWFuY2UsIG5vdCB1bndpbGxpbmdseSwgYnV0IHdpdGggZW50aHVzaWFzbSwgYW5kIHRoZXkgcmVjZWl2ZWQga2luZGx5IHRoZSBMYWNlZGFlbW9uaWFuIGdvdmVybm9ycyB3aG8gY2FtZSB0byBBYnlkdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiwgaW4gZmxpZ2h0IGZyb20gdGhlaXIgc2V2ZXJhbCB0b3ducy48L25vdGU+IGFuZCBzZW50IGZvciB0aG9zZSB3aG8gd2VyZSBlbHNld2hlcmUuIFRoZW4sIGFmdGVyIG1hbnkgZ29vZCBtZW4gaGFkIGJlZW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTQiPjM5NCBCLkMuPC9kYXRlPjwvbm90ZT4gY29sbGVjdGVkIGluIHRoZSBjaXR5LCBEZXJjeWxpZGFzIGNyb3NzZWQgb3ZlciB0byBTZXN0dXMsIHdoaWNoIGlzIG9wcG9zaXRlIEFieWR1cyBhbmQgZGlzdGFudCBub3QgbW9yZSB0aGFuIGVpZ2h0IHN0YWRpYSwgZ2F0aGVyZWQgdG9nZXRoZXIgYWxsIHdobyBoYWQgb2J0YWluZWQgbGFuZCBpbiB0aGUgQ2hlcnNvbmVzZTxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q3AuIElJSS4gaWkuIDEwLjwvbm90ZT4gdGhyb3VnaCB0aGUgTGFjZWRhZW1vbmlhbnMsIGFuZCByZWNlaXZlZCBhbHNvIGFsbCB0aG9zZSBnb3Zlcm5vcnMgd2hvIGhhZCBiZWVuIGRyaXZlbiBvdXQgaW4gbGlrZSBmYXNoaW9uIGZyb20gdGhlIGNpdGllcyBvbiB0aGUgRXVyb3BlYW4gc2lkZSwgc2F5aW5nIHRvIHRoZW0gdGhhdCB0aGV5IG91Z2h0IG5vdCB0byBiZSBkaXNjb3VyYWdlZCwgZWl0aGVyLCB3aGVuIHRoZXkgcmVmbGVjdGVkIHRoYXQgZXZlbiBpbiBBc2lhLCB3aGljaCBoYWQgYmVsb25nZWQgZnJvbSBhbGwgdGltZSB0byB0aGUgS2luZywgdGhlcmUgd2FzIFRlbW51c+KAlG5vdCBhIGxhcmdlIGNpdHnigJRhbmQgQWVnYWUgYW5kIG90aGVyIHBsYWNlcyBpbiB3aGljaCBwZW9wbGUgd2VyZSBhYmxlIHRvIGR3ZWxsIHdpdGhvdXQgYmVpbmcgc3ViamVjdCB0byB0aGUgS2luZy4g4oCcSW4gYW55IGV2ZW50LOKAnSBoZSBzYWlkLCDigJx3aGF0IHN0cm9uZ2VyIHBsYWNlIGNvdWxkIHlvdSBmaW5kIHRoYW4gU2VzdHVzLCB3aGF0IHBsYWNlIGhhcmRlciB0byBjYXB0dXJlIGJ5IHNpZWdlPyBGb3IgaXQgaXMgYSBwbGFjZSB3aGljaCByZXF1aXJlcyBib3RoIHNoaXBzIGFuZCB0cm9vcHMgaWYgaXQgaXMgdG8gYmUgYmVzaWVnZWQu4oCdIEJ5IHN1Y2ggd29yZHMgaGUga2VwdCB0aGVzZSBtZW4gYWxzbyBmcm9tIGJlaW5nIHBhbmljLXN0cmlja2VuLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgd2hlbiBQaGFybmFiYXp1cyBmb3VuZCBib3RoIEFieWR1cyBhbmQgU2VzdHVzIGluIHRoaXMgY29uZGl0aW9uLCBoZSBtYWRlIHByb2NsYW1hdGlvbiB0byB0aGVpciBpbmhhYml0YW50cyB0aGF0IGlmIHRoZXkgZGlkIG5vdCBleHBlbCB0aGUgTGFjZWRhZW1vbmlhbnMgaGUgd291bGQgbWFrZSB3YXIgdXBvbiB0aGVtLiBBbmQgdXBvbiB0aGVpciByZWZ1c2luZyB0byBvYmV5LCBoZSBkaXJlY3RlZCBDb25vbiB0byBwcmV2ZW50IHRoZW0gZnJvbSBzYWlsaW5nIHRoZSBzZWEsIHdoaWxlIGhlIGhpbXNlbGYgcHJvY2VlZGVkIHRvIGxheSB3YXN0ZSB0aGUgdGVycml0b3J5IG9mIHRoZSBBYnlkZW5lcy4gQnV0IGZhaWxpbmcgdG8gbWFrZSBhbnkgcHJvZ3Jlc3MgdG93YXJkIHN1YmR1aW5nIHRoZW0sIGhlIGhpbXNlbGYgd2VudCBiYWNrIGhvbWUsIG9yZGVyaW5nIENvbm9uIHRvIHRyeSB0byB3aW4gb3ZlciB0aGUgY2l0aWVzIGFsb25nIHRoZSBIZWxsZXNwb250LCB0byB0aGUgZW5kIHRoYXQgYXMgbGFyZ2UgYSBmbGVldCBhcyBwb3NzaWJsZSBtaWdodCBiZSBnYXRoZXJlZCB0b2dldGhlciBieSB0aGUgY29taW5nIG9mIHRoZSBzcHJpbmcuIEZvciBoZSB3YXMgYW5ncnkgd2l0aCB0aGUgTGFjZWRhZW1vbmlhbnMgb24gYWNjb3VudCBvZiB3aGF0IGhlIGhhZCBzdWZmZXJlZCBhdCB0aGVpciBoYW5kcywgYW5kIHRoZXJlZm9yZSBkZXNpcmVkIGFib3ZlIGFsbCB0aGluZ3MgdG8gZ28gdG8gdGhlaXIgY291bnRyeSBhbmQgdGFrZSB3aGF0IHZlbmdlYW5jZSB1cG9uIHRoZW08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTQiPjM5NCBCLkMuPC9kYXRlPjwvbm90ZT4gaGUgY291bGQuCjxkYXRlIGF1dGhuYW1lPSItMzk0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzk0Ij4zOTQgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.8.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkluIHN1Y2ggb2NjdXBhdGlvbnMsIGFjY29yZGluZ2x5LCB0aGV5IHBhc3NlZCB0aGUgd2ludGVyOyBidXQgYXQgdGhlIG9wZW5pbmcgb2Ygc3ByaW5nLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MyI+MzkzIEIuQy48L2RhdGU+PC9ub3RlPiBoYXZpbmcgZnVsbHkgbWFubmVkIGEgbGFyZ2UgbnVtYmVyIG9mIHNoaXBzIGFuZCBoaXJlZCBhIGZvcmNlIG9mIG1lcmNlbmFyaWVzIGJlc2lkZXMsIFBoYXJuYWJhenVzLCBhbmQgQ29ub24gd2l0aCBoaW0sIHNhaWxlZCB0aHJvdWdoIHRoZSBpc2xhbmRzIHRvIE1lbG9zLCBhbmQgbWFraW5nIHRoYXQgdGhlaXIgYmFzZSwgd2VudCBvbiB0byBMYWNlZGFlbW9uLiBBbmQgZmlyc3QgUGhhcm5hYmF6dXMgcHV0IGluIGF0IFBoZXJhZSBhbmQgbGFpZCB3YXN0ZSB0aGlzIHJlZ2lvbjsgdGhlbiBoZSBtYWRlIGRlc2NlbnRzIGF0IG9uZSBwb2ludCBhbmQgYW5vdGhlciBvZiB0aGUgY29hc3QgYW5kIGRpZCB3aGF0ZXZlciBoYXJtIGhlIGNvdWxkLiBCdXQgYmVpbmcgZmVhcmZ1bCBiZWNhdXNlIHRoZSBjb3VudHJ5IHdhcyBkZXN0aXR1dGUgb2YgaGFyYm91cnMsIGJlY2F1c2UgdGhlIExhY2VkYWVtb25pYW5zIG1pZ2h0IHNlbmQgcmVsaWVmIGZvcmNlcywgYW5kIGJlY2F1c2UgcHJvdmlzaW9ucyB3ZXJlIHNjYXJjZSBpbiB0aGUgbGFuZCwgaGUgcXVpY2tseSB0dXJuZWQgYWJvdXQsIGFuZCBzYWlsaW5nIGF3YXksIGNhbWUgdG8gYW5jaG9yIGF0IFBob2VuaWN1cyBpbiB0aGUgaXNsYW5kIG9mIEN5dGhlcmEuCjxkYXRlIGF1dGhuYW1lPSItMzkzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkzIj4zOTMgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.8.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgd2hlbiB0aG9zZSB3aG8gaGVsZCBwb3NzZXNzaW9uIG9mIHRoZSBjaXR5IG9mIHRoZSBDeXRoZXJpYW5zIGFiYW5kb25lZCB0aGVpciB3YWxscyB0aHJvdWdoIGZlYXIgb2YgYmVpbmcgY2FwdHVyZWQgYnkgc3Rvcm0sIGhlIGFsbG93ZWQgdGhlbSB0byBkZXBhcnQgdG8gTGFjb25pYSB1bmRlciBhIHRydWNlLCBhbmQgaGF2aW5nIHJlcGFpcmVkIHRoZSB3YWxsIG9mIHRoZSBDeXRoZXJpYW5zLCBsZWZ0IGluIEN5dGhlcmEgYSBnYXJyaXNvbiBvZiBoaXMgb3duIGFuZCBOaWNvcGhlbXVzLCBhbiBBdGhlbmlhbiwgYXMgZ292ZXJub3IuIEFmdGVyIGRvaW5nIHRoZXNlIHRoaW5ncyBhbmQgc2FpbGluZyB0byB0aGUgSXN0aG11cyBvZiBDb3JpbnRoIGFuZCB0aGVyZSBleGhvcnRpbmcgdGhlIGFsbGllcyB0byBjYXJyeSBvbiB0aGUgd2FyIHplYWxvdXNseSBhbmQgc2hvdyB0aGVtc2VsdmVzIG1lbiBmYWl0aGZ1bCB0byB0aGUgS2luZywgaGUgbGVmdCB0aGVtIGFsbCB0aGUgbW9uZXkgdGhhdCBoZSBoYWQgYW5kIHNhaWxlZCBvZmYgaG9tZXdhcmQuCjwvdHJhbnNsYXRpb24+"
translation['4.8.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGVuIENvbm9uIHNhaWQgdGhhdCBpZiBoZSB3b3VsZCBhbGxvdyBoaW0gdG8gaGF2ZSB0aGUgZmxlZXQsIGhlIHdvdWxkIG1haW50YWluIGl0IGJ5IGNvbnRyaWJ1dGlvbnMgZnJvbSB0aGUgaXNsYW5kcyBhbmQgd291bGQgbWVhbndoaWxlIHB1dCBpbiBhdCBBdGhlbnMgYW5kIGFpZCB0aGUgQXRoZW5pYW5zIGluIHJlYnVpbGRpbmcgdGhlaXIgbG9uZyB3YWxscyBhbmQgdGhlIHdhbGwgYXJvdW5kIFBpcmFldXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkRlc3Ryb3llZCBhdCB0aGUgY2xvc2Ugb2YgdGhlIFBlbG9wb25uZXNpYW4gV2FyLiBjcC4gSUkuIGlpLiAyMC0yMy48L25vdGU+IGFkZGluZyB0aGVpciBoZSBrbmV3IG5vdGhpbmcgY291bGQgYmUgYSBoZWF2aWVyIGJsb3cgdG8gdGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzkzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkzIj4zOTMgQi5DLjwvZGF0ZT48L25vdGU+IExhY2VkYWVtb25pYW5zIHRoYW4gdGhpcy4g4oCcQW5kIGJ5IHRoaXMgYWN0LCB0aGVyZWZvcmUs4oCdIGhlIHNhaWQsIOKAnHlvdSB3aWxsIGhhdmUgY29uZmVycmVkIGEgZmF2b3VyIHVwb24gdGhlIEF0aGVuaWFucyBhbmQgaGF2ZSB0YWtlbiB2ZW5nZWFuY2UgdXBvbiB0aGUgTGFjZWRhZW1vbmlhbnMsIGluYXNtdWNoIGFzIHlvdSB3aWxsIHVuZG8gZm9yIHRoZW0gdGhlIGRlZWQgZm9yIHdob3NlIGFjY29tcGxpc2htZW50IHRoZXkgdW5kZXJ3ZW50IHRoZSBtb3N0IHRvaWwgYW5kIHRyb3VibGUu4oCdIFBoYXJuYWJhenVzLCB1cG9uIGhlYXJpbmcgdGhpcywgZWFnZXJseSBkaXNwYXRjaGVkIGhpbSB0byBBdGhlbnMgYW5kIGdhdmUgaGltIGFkZGl0aW9uYWwgbW9uZXkgZm9yIHRoZSByZWJ1aWxkaW5nIG9mIHRoZSB3YWxscy4KPGRhdGUgYXV0aG5hbWU9Ii0zOTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTMiPjM5MyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.8.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXBvbiBoaXMgYXJyaXZhbCBDb25vbiBlcmVjdGVkIGEgbGFyZ2UgcGFydCBvZiB0aGUgd2FsbCwgZ2l2aW5nIGhpcyBvd24gY3Jld3MgZm9yIHRoZSB3b3JrLCBwYXlpbmcgdGhlIHdhZ2VzIG9mIGNhcnBlbnRlcnMgYW5kIG1hc29ucywgYW5kIG1lZXRpbmcgd2hhdGV2ZXIgb3RoZXIgZXhwZW5zZSB3YXMgbmVjZXNzYXJ5LiBUaGVyZSB3ZXJlIHNvbWUgcGFydHMgb2YgdGhlIHdhbGwsIGhvd2V2ZXIsIHdoaWNoIHRoZSBBdGhlbmlhbnMgdGhlbXNlbHZlcywgYXMgd2VsbCBhcyB2b2x1bnRlZXJzIGZyb20gQm9lb3RpYSBhbmQgZnJvbSBvdGhlciBzdGF0ZXMsIGFpZGVkIGluIGJ1aWxkaW5nLiBUaGUgQ29yaW50aGlhbnMsIG9uIHRoZSBvdGhlciBoYW5kLCBtYW5uZWQgc2hpcHMgd2l0aCB0aGUgbW9uZXkgd2hpY2ggUGhhcm5hYmF6dXMgbGVmdCwgYXBwb2ludGVkIEFnYXRoaW51cyBhcyBhZG1pcmFsLCBhbmQgZXN0YWJsaXNoZWQgdGhlaXIgbWFzdGVyeSBvZiB0aGUgc2VhIGluIHRoZSBndWxmIGFyb3VuZCBBY2hhZWEgYW5kIExlY2hhZXVtLiBBbmQgdGhlIExhY2VkYWVtb25pYW5zIG9uIHRoZWlyIHNpZGUgbWFubmVkIHNoaXBzLCB3aGljaCBQb2RhbmVtdXMgY29tbWFuZGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBoZSB3YXMga2lsbGVkIGluIGFuIGF0dGFjayB3aGljaCB0b29rIHBsYWNlLCBhbmQgUG9sbGlzIGluIGhpcyB0dXJuLCB3aG8gd2FzIHZpY2UtYWRtaXJhbCwgd2FzIHdvdW5kZWQgYW5kIHdlbnQgaG9tZSwgSGVyaXBwaWRhcyB0b29rIGNvbW1hbmQgb2YgdGhlc2Ugc2hpcHMuIFByb2FlbnVzLCB0aGUgQ29yaW50aGlhbiwgaG93ZXZlciwgd2hvIGhhZCBzdWNjZWVkZWQgdG8gdGhlIGNvbW1hbmQgb2YgdGhlIHNoaXBzIG9mIEFnYXRoaW51cywgYWJhbmRvbmVkIFJoaXVtLCBhbmQgdGhlIExhY2VkYWVtb25pYW5zIHRvb2sgaXQgb3Zlci4gQWZ0ZXIgdGhpcyBUZWxldXRpYXMgY2FtZSB0byBhc3N1bWUgY2hhcmdlIG9mIHRoZSBzaGlwcyBvZiBIZXJpcHBpZGFzLCBhbmQgaGUgaW4gaGlzIHR1cm4gd2FzIG5vdyBtYXN0ZXIgb2YgdGhlIGd1bGYuCjwvdHJhbnNsYXRpb24+"
translation['4.8.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHRoZSBMYWNlZGFlbW9uaWFucywgdXBvbiBoZWFyaW5nIHRoYXQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTIiPjM5MiBCLkMuPC9kYXRlPjwvbm90ZT4gQ29ub24gd2FzIG5vdCBvbmx5IHJlYnVpbGRpbmcgdGhlaXIgd2FsbCBmb3IgdGhlIEF0aGVuaWFucyBvdXQgb2YgdGhlIEtpbmcncyBtb25leSwgYnV0IHdhcyBhbHNvLCB3aGlsZSBtYWludGFpbmluZyBoaXMgZmxlZXQgZnJvbSB0aGUgbGF0dGVyJ3MgZnVuZHMsPGRhdGUgYXV0aG5hbWU9Ii0zOTIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTIiPjM5MiBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MiI+MzkyIEIuQy48L2RhdGU+PC9ub3RlPiBlbmdhZ2VkIGluIHdpbm5pbmcgb3ZlciB0aGUgaXNsYW5kcyBhbmQgdGhlIGNvYXN0IGNpdGllcyBvbiB0aGUgbWFpbmxhbmQgdG8gdGhlIEF0aGVuaWFucywgY29uY2VpdmVkIHRoZSBpZGVhIHRoYXQgaWYgdGhleSBpbmZvcm1lZCBUaXJpYmF6dXMsIHdobyB3YXMgdGhlIEtpbmcncyBnZW5lcmFsLCBvZiB0aGVzZSB0aGluZ3MsIHRoZXkgY291bGQgZWl0aGVyIGJyaW5nIFRpcmliYXp1cyBvdmVyIGVudGlyZWx5IHRvIHRoZWlyIHNpZGUgb3IgYXQgbGVhc3QgcHV0IGFuIGVuZCB0byBoaXMgbWFpbnRhaW5pbmcgQ29ub24ncyBmbGVldC4gSGF2aW5nIGNvbWUgdG8gdGhpcyBjb25jbHVzaW9uLCB0aGV5IHNlbnQgQW50YWxjaWRhcyB0byBUaXJpYmF6dXMgd2l0aCBpbnN0cnVjdGlvbnMgdG8gaW5mb3JtIFRpcmliYXp1cyBvZiB0aGVzZSBmYWN0cywgYW5kIHRvIGVuZGVhdm91ciB0byBtYWtlIHBlYWNlIGJldHdlZW4gdGhlIHN0YXRlIGFuZCB0aGUgS2luZy4KPGRhdGUgYXV0aG5hbWU9Ii0zOTIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTIiPjM5MiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.8.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGUgQXRoZW5pYW5zIGxlYXJuZWQgb2YgdGhpcywgdGhleSBsaWtld2lzZSBzZW50IGFtYmFzc2Fkb3JzLOKAlENvbm9uIGF0IHRoZWlyIGhlYWQsIGFuZCBIZXJtb2dlbmVzLCBEaW9uLCBDYWxsaXN0aGVuZXMsIGFuZCBDYWxsaW1lZG9uLiBUaGV5IGFsc28gaW52aXRlZCBhbWJhc3NhZG9ycyBmcm9tIHRoZWlyIGFsbGllcyB0byBnbyB3aXRoIHRoZW07IGFuZCBhbWJhc3NhZG9ycyBkaWQgY29tZSBmcm9tIHRoZSBCb2VvdGlhbnMsIGZyb20gQ29yaW50aCwgYW5kIGZyb20gQXJnb3MuCjwvdHJhbnNsYXRpb24+"
translation['4.8.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgaGFkIHJlYWNoZWQgdGhlaXIgZGVzdGluYXRpb24sIEFudGFsY2lkYXMgc2FpZCB0byBUaXJpYmF6dXMgdGhhdCBoZSBoYWQgY29tZSBkZXNpcmluZyBwZWFjZSBiZXR3ZWVuIGhpcyBzdGF0ZSBhbmQgdGhlIEtpbmcsIGFuZCwgZnVydGhlcm1vcmUsIGp1c3Qgc3VjaCBhIHBlYWNlIGFzIHRoZSBLaW5nIGhhZCB3aXNoZWQgZm9yLiBGb3IgdGhlIExhY2VkYWVtb25pYW5zLCBoZSBzYWlkLCB1cmdlZCBubyBjbGFpbSBhZ2FpbnN0IHRoZSBLaW5nIHRvIHRoZSBHcmVlayBjaXRpZXMgaW4gQXNpYSBhbmQgdGhleSB3ZXJlIGNvbnRlbnQgdGhhdCBhbGwgdGhlIGlzbGFuZHMgYW5kIHRoZSBHcmVlayBjaXRpZXMgaW4gZ2VuZXJhbCBzaG91bGQgYmUgaW5kZXBlbmRlbnQuIOKAnEFuZCB5ZXQs4oCdIGhlIHNhaWQsIOKAnGlmIHdlIGFyZSByZWFkeSB0byBhZ3JlZSB0byBzdWNoIGNvbmRpdGlvbnMsIHdoeSBzaG91bGQgdGhlIEtpbmcgYmUgYXQgd2FyIHdpdGggdXMgb3IgYmUgc3BlbmRpbmcgbW9uZXk/IEluZGVlZCwgaWYgc3VjaCB0ZXJtcyB3ZXJlIG1hZGUsIHdlIGNvdWxkIG5vdCB0YWtlIHRoZSBmaWVsZCBhZ2FpbnN0IHRoZSBLaW5nLCBlaXRoZXI7IHRoZSBBdGhlbmlhbnMgY291bGQgbm90IHVubGVzcyB3ZSBhc3N1bWVkIHRoZSBsZWFkZXJzaGlwLCBhbmQgd2UgY291bGQgbm90IGlmIHRoZSBjaXRpZXMgd2VyZSBpbmRlcGVuZGVudC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['4.8.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IFRpcmliYXp1cyB3YXMgbWlnaHRpbHkgcGxlYXNlZCBhdCBoZWFyaW5nIHRoZSB3b3JkcyBvZiBBbnRhbGNpZGFzOyBidXQgdG8gdGhlIG9wcG9uZW50cyBvZiBBbnRhbGNpZGFzIHRoZXNlIHByb3Bvc2FscyB3ZW50IG5vIGZ1cnRoZXIgdGhhbiB3b3Jkcy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+TGl0ZXJhbGx5LCDigJx3ZXJlIHdvcmRzIG9ubHnigJ07IGkuZS4gd2VyZSBub3QgdHJlYXRlZCBhcyBhIHJlYXNvbmFibGUgYmFzaXMgZm9yIGEgcGVhY2UuPC9ub3RlPiBGb3IgdGhlIEF0aGVuaWFucyB3ZXJlIGFmcmFpZCB0byBhZ3JlZSB0aGF0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzkyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkyIj4zOTIgQi5DLjwvZGF0ZT48L25vdGU+IHRoZSBjaXRpZXMgYW5kIHRoZSBpc2xhbmRzIHNob3VsZCBiZSBpbmRlcGVuZGVudCBsZXN0IHRoZXkgc2hvdWxkIGJlIGRlcHJpdmVkIG9mIExlbW5vcywgSW1icm9zLCBhbmQgU2N5cm9zPGRhdGUgYXV0aG5hbWU9Ii0zOTIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTIiPjM5MiBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGVzZSBpc2xhbmRzIHdlcmUgYW1vbmcgdGhlIGVhcmxpZXN0IHBvc3Nlc3Npb25zIG9mIEF0aGVucy4gVGhleSB3ZXJlIGxvc3QgYXQgdGhlIGNsb3NlIG9mIHRoZSBQZWxvcG9ubmVzaWFuIFdhciwgYnV0IGhhZCByZWNlbnRseSBiZWVuIHJlY292ZXJlZC48L25vdGU+OyBhbmQgdGhlIFRoZWJhbnMsIGxlc3QgdGhleSBzaG91bGQgYmUgY29tcGVsbGVkIHRvIGxlYXZlIHRoZSBCb2VvdGlhbiBjaXRpZXMgaW5kZXBlbmRlbnQ7IHdoaWxlIHRoZSBBcmdpdmVzIHRob3VnaHQgdGhhdCB0aGV5IGNvdWxkIG5vdCBrZWVwIENvcmludGggYXMgQXJnb3MsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkNwLiBpdi4gNi48L25vdGU+IGEgdGhpbmcgd2hpY2ggdGhleSBkZXNpcmVkLCBpZiBzdWNoIGFuIGFncmVlbWVudCBhbmQgcGVhY2Ugd2VyZSBjb25jbHVkZWQuIFNvIGl0IHdhcyB0aGF0IHRoaXMgcHJvamVjdCBvZiBwZWFjZSBjYW1lIHRvIG5hdWdodCwgYW5kIHRoZSBhbWJhc3NhZG9ycyByZXR1cm5lZCB0byB0aGVpciBzZXZlcmFsIGhvbWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIFRpcmliYXp1cywgaGUgdGhvdWdodCB0aGF0IGl0IHdhcyBub3Qgc2FmZSBmb3IgaGltIHRvIHRha2UgdGhlIHNpZGUgb2YgdGhlIExhY2VkYWVtb25pYW5zIHdpdGhvdXQgdGhlIEtpbmcncyBhcHByb3ZhbDsgaW4gc2VjcmV0LCBob3dldmVyLCBoZSBnYXZlIG1vbmV5IHRvIEFudGFsY2lkYXMsIHRvIHRoZSBlbmQgdGhhdCBhIGZsZWV0IG1pZ2h0IGJlIG1hbm5lZCBieSB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIHRodXMgdGhlIEF0aGVuaWFucyBhbmQgdGhlaXIgYWxsaWVzIGJlIG1hZGUgbW9yZSBkZXNpcm91cyBvZiBwZWFjZSwgYW5kIGhlIGFsc28gaW1wcmlzb25lZCBDb25vbiwgb24gdGhlIGdyb3VuZCB0aGF0IGhlIHdhcyB3cm9uZ2luZyB0aGUgS2luZyBhbmQgdGhhdCB0aGUgY2hhcmdlcyBtYWRlIGJ5IHRoZSBMYWNlZGFlbW9uaWFucyB3ZXJlIHRydWUuIEFmdGVyIGRvaW5nIHRoZXNlIHRoaW5ncyBoZSBwcm9jZWVkZWQgdG8gZ28gdXAgdG8gdGhlIEtpbmcgZm9yIHRoZSBwdXJwb3NlIG9mIHRlbGxpbmcgaGltIG5vdCBvbmx5IHRoZSBwcm9wb3NhbHMgb2YgdGhlIExhY2VkYWVtb25pYW5zLCBidXQgYWxzbyB0aGF0IGhlIGhhZCBhcnJlc3RlZCBDb25vbiBhcyBhIHdyb25nLWRvZXIsIGFuZCBsaWtld2lzZSB0byBhc2sgdGhlIEtpbmcgd2hhdCBoZSBzaG91bGQgZG8gYWJvdXQgYWxsIHRoZXNlIG1hdHRlcnMuCjwvdHJhbnNsYXRpb24+"
translation['4.8.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIEtpbmcsIHdoZW4gVGlyaWJhenVzIGhhZCBhcnJpdmVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzkxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkxIj4zOTEgQi5DLjwvZGF0ZT48L25vdGU+IGF0IGhpcyBjYXBpdGFsIGluIHRoZSBpbnRlcmlvciwgc2VudCBkb3duIFN0cnV0aGFzIHRvIHRha2UgY2hhcmdlIG9mIGFmZmFpcnMgb24gdGhlIGNvYXN0LiBTdHJ1dGhhcywgaG93ZXZlciwgZGV2b3RlZCBoaW1zZWxmIGFzc2lkdW91c2x5IHRvIHRoZSBBdGhlbmlhbnMgYW5kIHRoZWlyIGFsbGllcywgcmVtZW1iZXJpbmcgYWxsIHRoZSBoYXJtIHdoaWNoIHRoZSBLaW5nJ3MgY291bnRyeSBoYWQgc3VmZmVyZWQgYXQgdGhlIGhhbmRzIG9mIEFnZXNpbGF1cy4gVGhlIExhY2VkYWVtb25pYW5zIGFjY29yZGluZ2x5LCB3aGVuIHRoZXkgc2F3PGRhdGUgYXV0aG5hbWU9Ii0zOTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTEiPjM5MSBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MSI+MzkxIEIuQy48L2RhdGU+PC9ub3RlPiB0aGF0IFN0cnV0aGFzIHdhcyBob3N0aWxlIHRvIHRoZW0gYW5kIGZyaWVuZGx5IHRvIHRoZSBBdGhlbmlhbnMsIHNlbnQgVGhpYnJvbiB0byBtYWtlIHdhciB1cG9uIGhpbS4gQW5kIFRoaWJyb24sIGNyb3NzaW5nIG92ZXIgdG8gQXNpYSBhbmQgZW1wbG95aW5nIGFzIGEgYmFzZSBvZiBvcGVyYXRpb25zIG5vdCBvbmx5IEVwaGVzdXMsIGJ1dCBhbHNvIHRoZSBjaXRpZXMgaW4gdGhlIHBsYWluIG9mIHRoZSBNYWVhbmRlcuKAlFByaWVuZSwgTGV1Y29waHJ5cywgYW5kIEFjaGlsbGV1bSzigJRwcm9jZWVkZWQgdG8gcGx1bmRlciB0aGUgdGVycml0b3J5IG9mIHRoZSBLaW5nLgo8ZGF0ZSBhdXRobmFtZT0iLTM5MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MSI+MzkxIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['4.8.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgdGltZSB3ZW50IG9uLCBob3dldmVyLCBTdHJ1dGhhcywgd2hvIGhhZCBvYnNlcnZlZCB0aGF0IHRoZSByYWlkaW5nIGV4cGVkaXRpb25zIG9mIFRoaWJyb24gd2VyZSBpbiBldmVyeSBjYXNlIGNhcnJpZWQgb3V0IGluIGEgZGlzb3JkZXJseSBhbmQgZGlzZGFpbmZ1bCBmYXNoaW9uLCBzZW50IGhvcnNlbWVuIHRvIHRoZSBwbGFpbiBhbmQgb3JkZXJlZCB0aGVtIHRvIHJ1c2ggdXBvbiB0aGUgZW5lbXkgYW5kIHN1cnJvdW5kIGFuZCBjYXJyeSBvZmYgd2hhdGV2ZXIgdGhleSBjb3VsZC4gTm93IGl0IGNoYW5jZWQgdGhhdCBUaGlicm9uLCBoYXZpbmcgZmluaXNoZWQgYnJlYWtmYXN0LCB3YXMgZW5nYWdlZCBpbiB0aHJvd2luZyB0aGUgZGlzY3VzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgaGVhdnkgY2lyY3VsYXIgZmxhdCBzdG9uZS4gVGhlIG9iamVjdCB3YXMgdG8gc2VlIHdobyBjb3VsZCBtYWtlIHRoZSBsb25nZXN0IHRocm93Ljwvbm90ZT4gd2l0aCBUaGVyc2FuZGVyLCB0aGUgZmx1dGUtcGxheWVyLiBGb3IgVGhlcnNhbmRlciB3YXMgbm90IG9ubHkgYSBnb29kIGZsdXRlLXBsYXllciwgYnV0IGhlIGFsc28gbGFpZCBjbGFpbSB0byBwaHlzaWNhbCBzdHJlbmd0aCwgaW5hc211Y2ggYXMgaGUgd2FzIGFuIGltaXRhdG9yIG9mIHRoaW5ncyBMYWNlZGFlbW9uaWFuLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIFN0cnV0aGFzLCB1cG9uIHNlZWluZyB0aGF0IHRoZSBlbmVteSB3ZXJlIG1ha2luZyB0aGVpciByYWlkIGluIGRpc29yZGVyLCBhbmQgdGhhdCB0aGUgZm9yZW1vc3Qgb2YgdGhlbSB3ZXJlIGZldyBpbiBudW1iZXIsIGFwcGVhcmVkIHVwb24gdGhlIHNjZW5lIHdpdGggYSBsYXJnZSBmb3JjZSBvZiBob3JzZW1lbiwgZHJhd24gdXAgaW4gZ29vZCBvcmRlci4gQW5kIHRoZSBmaXJzdCB3aG9tIHRoZXkga2lsbGVkIHdlcmUgVGhpYnJvbiBhbmQgVGhlcnNhbmRlcjsgYW5kIHdoZW4gdGhlc2UgbWVuIGZlbGwgdGhleSBwdXQgdG8gZmxpZ2h0IHRoZSByZXN0IG9mIHRoZSBhcm15IGFsc28sIGFuZCBpbiB0aGUgcHVyc3VpdCBzdHJ1Y2sgZG93biBhIHZlcnkgZ3JlYXQgbWFueS4gU29tZSBvZiBUaGlicm9uJ3MgbWVuLCBob3dldmVyLCBtYWRlIHRoZWlyIGVzY2FwZSB0byB0aGUgZnJpZW5kbHkgY2l0aWVzIGFuZCBhIGxhcmdlciBudW1iZXIgaGFkIGJlZW4gbGVmdCBpbiBjYW1wIGJlY2F1c2UgdGhleSBoYWQgbGVhcm5lZCBvZiB0aGUgZXhwZWRpdGlvbiB0b28gbGF0ZS4gRm9yIGZyZXF1ZW50bHksIGFzIGluIHRoaXMgY2FzZSBhbHNvLCBUaGlicm9uIHVuZGVydG9vayBoaXMgZXhwZWRpdGlvbnMgd2l0aG91dCBldmVuIHNlbmRpbmcgb3V0IG9yZGVycy4gVGh1cyBlbmRlZCB0aGVzZSBldmVudHMuCjwvdHJhbnNsYXRpb24+"
translation['4.8.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoZW4gdGhvc2Ugb2YgdGhlIFJob2RpYW5zIHdobyBoYWQgYmVlbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MSI+MzkxIEIuQy48L2RhdGU+PC9ub3RlPiBiYW5pc2hlZCBieSB0aGUgZGVtb2NyYXRpYyBmYWN0aW9uIGNhbWUgdG8gTGFjZWRhZW1vbiwgdGhleSBzZXQgZm9ydGggdGhhdCBpdCB3YXMgbm90IGV4cGVkaWVudCBmb3IgdGhlIExhY2VkYWVtb25pYW5zIHRvIGFsbG93IHRoZSBBdGhlbmlhbnMgdG8gc3ViZHVlIFJob2RlcyBhbmQgdGh1cyBnYWluIGZvciB0aGVtc2VsdmVzIHNvIGdyZWF0IGEgcG93ZXIuIFRoZSBMYWNlZGFlbW9uaWFucywgdGhlcmVmb3JlLCByZWFsaXppbmcgdGhhdCBpZiB0aGUgY29tbW9ucyBzaG91bGQgcHJldmFpbCwgYWxsIFJob2RlcyB3b3VsZCBiZWxvbmcgdG8gdGhlIEF0aGVuaWFucywgd2hpbGUgaWYgdGhlIHdlYWx0aGllciBjbGFzc2VzIHNob3VsZCBwcmV2YWlsLCBpdCB3b3VsZCBiZSB0aGVpciBvd24gcG9zc2Vzc2lvbiwgbWFubmVkIGZvciB0aGVtIGVpZ2h0IHNoaXBzIGFuZCBhcHBvaW50ZWQgRWNkaWN1cyBhcyBhZG1pcmFsIHRvIGNvbW1hbmQgdGhlbS4KPGRhdGUgYXV0aG5hbWU9Ii0zOTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTEiPjM5MSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.8.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IHNlbnQgb3V0IERpcGhyaWRhcyBhbHNvIG9uIGJvYXJkIHRoZXNlIHNoaXBzLCBhbmQgb3JkZXJlZCBoaW0gdG8gY3Jvc3Mgb3ZlciBpbnRvIEFzaWEgYW5kIHRvIGtlZXAgc2FmZSB0aGUgY2l0aWVzIHdoaWNoIGhhZCByZWNlaXZlZCBUaGlicm9uLCBhbmQgdGhlbiwgYWZ0ZXIgYXNzdW1pbmcgY29tbWFuZCBvZiB0aGF0IHBhcnQgb2YgVGhpYnJvbidzIGFybXkgd2hpY2ggd2FzIGxlZnQgYWxpdmUsIGFuZCBhZnRlciBnYXRoZXJpbmcgYW5vdGhlciBhcm15IGZyb20gd2hlcmV2ZXIgaGUgY291bGQsIHRvIG1ha2Ugd2FyIHVwb24gU3RydXRoYXMuIERpcGhyaWRhcyBhY2NvcmRpbmdseSBzZXQgYWJvdXQgdGhlc2UgdGhpbmdzLCBhbmQgaGUgd2FzIHN1Y2Nlc3NmdWwgbm90IG9ubHkgaW4gaGlzIG90aGVyIHVuZGVydGFraW5ncywgYnV0IHBhcnRpY3VsYXJseSBpbiBjYXB0dXJpbmcgVGlncmFuZXMsIHRoZSBodXNiYW5kIG9mIFN0cnV0aGFzJyBkYXVnaHRlciwgYW5kIGhpcyB3aWZlIGFsc28sIGFzIHRoZXkgd2VyZSBqb3VybmV5aW5nIHRvIFNhcmRpcywgYW5kIGluIG9idGFpbmluZyBhIGxhcmdlIHJhbnNvbSBmb3IgdGhlaXIgcmVsZWFzZSwgc28gdGhhdCBoZSB3YXMgYXQgb25jZSBhYmxlIHRvIGhpcmUgbWVyY2VuYXJpZXMgd2l0aCB0aGUgbW9uZXkgdGh1cyBvYnRhaW5lZC4KPC90cmFuc2xhdGlvbj4="
translation['4.8.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIERpcGhyaWRhcyB3YXMgYXMgYSBtYW4gbm8gbGVzcyBhdHRyYWN0aXZlIHRoYW4gVGhpYnJvbiwgYW5kIGFzIGEgZ2VuZXJhbCBoZSB3YXMgbW9yZSBzZWxmLWNvbnRyb2xsZWQgYW5kIGVudGVycHJpc2luZy4gRm9yIHRoZSBwbGVhc3VyZXMgb2YgdGhlIGJvZHkgZGlkIG5vdCBob2xkIHRoZSBtYXN0ZXJ5IG92ZXIgaGltLCBidXQgaW4gd2hhdGV2ZXIgdGFzayBoZSB3YXMgZW5nYWdlZCwgaGUgYWx3YXlzIGdhdmUgaGltc2VsZiB3aG9sbHkgdG8gaXQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFzIGZvciBFY2RpY3VzLCBhZnRlciBzYWlsaW5nIHRvIENuaWRvcyBhbmQgbGVhcm5pbmcgdGhhdCB0aGUgY29tbW9ucyBpbiBSaG9kZXMgd2VyZSBpbiBwb3NzZXNzaW9uIG9mIGV2ZXJ5dGhpbmcsIGFuZCB3ZXJlIG1hc3RlcnMgYm90aCBieSBsYW5kIGFuZCBieSBzZWEsIGhhdmluZyB0d2ljZSBhcyBtYW55IHRyaXJlbWVzIGFzIGhlIGhhZCBoaW1zZWxmLCBoZSByZW1haW5lZCBxdWlldCBpbiBDbmlkb3MuCjwvdHJhbnNsYXRpb24+"
translation['4.8.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgTGFjZWRhZW1vbmlhbnMsIG9uIHRoZSBvdGhlciBoYW5kLCB3aGVuIHRoZXkgZm91bmQgdGhhdCBoZSBoYWQgdG9vPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzkxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkxIj4zOTEgQi5DLjwvZGF0ZT48L25vdGU+IHNtYWxsIGEgZm9yY2UgdG8gYmUgb2Ygc2VydmljZSB0byB0aGVpciBmcmllbmRzLCBvcmRlcmVkIFRlbGV1dGlhcywgd2l0aCB0aGUgdHdlbHZlIHNoaXBzIHdoaWNoIGhlIGhhZCB1bmRlciBoaXMgY29tbWFuZCBpbiB0aGUgZ3VsZiByb3VuZCBBY2hhZWEgYW5kIExlY2hhZXVtLDxkYXRlIGF1dGhuYW1lPSItMzkxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkxIj4zOTEgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q3AuIDExLjwvbm90ZT4gdG8gc2FpbCBhcm91bmQgdG8gRWNkaWN1cywgc2VuZCBoaW0gYmFjayBob21lLCBhbmQgaGltc2VsZiBsb29rIGFmdGVyIHRoZSBpbnRlcmVzdHMgb2YgdGhvc2Ugd2hvIHdpc2hlZCB0byBiZSB0aGVpciBmcmllbmRzLCBhbmQgZG8gd2hhdGV2ZXIgaGFybSBoZSBjb3VsZCB0byB0aGVpciBlbmVtaWVzLiBBbmQgd2hlbiBUZWxldXRpYXMgYXJyaXZlZCBhdCBTYW1vcyBoZSBvYnRhaW5lZCBmcm9tIHRoZXJlIHNldmVuIG1vcmUgc2hpcHMgYW5kIHNhaWxlZCBvbiB0byBDbmlkb3MsIHdoaWxlIEVjZGljdXMgcmV0dXJuZWQgaG9tZS4KPC90cmFuc2xhdGlvbj4="
translation['4.8.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIFRlbGV1dGlhcyBjb250aW51ZWQgaGlzIHZveWFnZSB0byBSaG9kZXMsIGhhdmluZyBub3cgdHdlbnR5LXNldmVuIHNoaXBzOyBhbmQgd2hpbGUgc2FpbGluZyB0aGl0aGVyIGhlIGZlbGwgaW4gd2l0aCBQaGlsb2NyYXRlcywgdGhlIHNvbiBvZiBFcGhpYWx0ZXMsIHNhaWxpbmcgd2l0aCB0ZW4gdHJpcmVtZXMgZnJvbSBBdGhlbnMgdG8gQ3lwcnVzIGZvciB0aGUgcHVycG9zZSBvZiBhaWRpbmcgRXVhZ29yYXMsIGFuZCBjYXB0dXJlZCBhbGwgdGVuLiBCb3RoIHBhcnRpZXMgd2VyZSBhY3RpbmcgaW4gdGhpcyBhZmZhaXIgaW4gYSBtYW5uZXIgYWJzb2x1dGVseSBvcHBvc2VkIHRvIHRoZWlyIG93biBpbnRlcmVzdHM7IGZvciB0aGUgQXRoZW5pYW5zLCBhbHRob3VnaCB0aGV5IGhhZCB0aGUgS2luZyBmb3IgYSBmcmllbmQsIHdlcmUgc2VuZGluZyBhaWQgdG8gRXVhZ29yYXMgd2hvIHdhcyBtYWtpbmcgd2FyIHVwb24gdGhlIEtpbmcsIGFuZCBUZWxldXRpYXMsIGFsdGhvdWdoIHRoZSBMYWNlZGFlbW9uaWFucyB3ZXJlIGF0IHdhciB3aXRoIHRoZSBLaW5nLCB3YXMgZGVzdHJveWluZyBwZW9wbGUgd2hvIHdlcmUgc2FpbGluZyB0byBtYWtlIHdhciB1cG9uIGhpbS4gVGhlbiBUZWxldXRpYXMsIGFmdGVyIHNhaWxpbmcgYmFjayB0byBDbmlkb3MgYW5kIHNlbGxpbmcgdGhlcmUgdGhlIGJvb3R5IHdoaWNoIGhlIGhhZCBjYXB0dXJlZCwgYXJyaXZlZCBhdCBSaG9kZXMgb24gaGlzIHNlY29uZCB2b3lhZ2UgYW5kIHByb2NlZWRlZCB0byBhaWQgdGhvc2Ugd2hvIGhlbGQgdG8gdGhlIHNpZGUgb2YgdGhlIExhY2VkYWVtb25pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVhbndoaWxlIHRoZSBBdGhlbmlhbnMsIGNvbWluZyB0byB0aGUgYmVsaWVmPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkwIj4zOTAgQi5DLjwvZGF0ZT48L25vdGU+IHRoYXQgdGhlIExhY2VkYWVtb25pYW5zIHdlcmUgYWdhaW4gYWNxdWlyaW5nIHBvd2VyIG9uIHRoZSBzZWEsIHNlbnQgb3V0IGFnYWluc3QgdGhlbSBUaHJhc3lidWx1cywgb2YgdGhlIGRlbWUgU3RlaXJpYSwgd2l0aCBmb3J0eSBzaGlwcy4gV2hlbiBoZSBoYWQgc2FpbGVkIG91dCwgaGUgZ2F2ZSB1cCBoaXMgcGxhbiBvZiBhbiBleHBlZGl0aW9uIHRvIFJob2RlcywgdGhpbmtpbmcgb24gdGhlIG9uZSBoYW5kIHRoYXQgaGUgY291bGQgbm90IGVhc2lseSBwdW5pc2ggdGhlIGZyaWVuZHMgb2YgdGhlIExhY2VkYWVtb25pYW5zLDxkYXRlIGF1dGhuYW1lPSItMzkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkwIj4zOTAgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zOTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTAiPjM5MCBCLkMuPC9kYXRlPjwvbm90ZT4gc2luY2UgdGhleSBoZWxkIGEgZm9ydHJlc3MgYW5kIFRlbGV1dGlhcyB3YXMgdGhlcmUgd2l0aCBhIGZsZWV0IHRvIHN1cHBvcnQgdGhlbSwgYW5kLCBvbiB0aGUgb3RoZXIgaGFuZCwgdGhhdCB0aGUgZnJpZW5kcyBvZiBoaXMgb3duIHN0YXRlIHdvdWxkIG5vdCBmYWxsIHVuZGVyIHRoZSBwb3dlciBvZiB0aGUgZW5lbXksIHNpbmNlIHRoZXkgaGVsZCB0aGUgY2l0aWVzLCB3ZXJlIGZhciBtb3JlIG51bWVyb3VzLCBhbmQgaGFkIGJlZW4gdmljdG9yaW91cyBpbiBiYXR0bGUuCjxkYXRlIGF1dGhuYW1lPSItMzkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzkwIj4zOTAgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['4.8.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSBoZSBzYWlsZWQgdG8gdGhlIEhlbGxlc3BvbnQsIGFuZCwgc2luY2UgdGhlcmUgd2FzIG5vIGFkdmVyc2FyeSB0aGVyZSwgdGhvdWdodCB0aGF0IGhlIGNvdWxkIGFjY29tcGxpc2ggc29tZSB1c2VmdWwgc2VydmljZSBmb3IgaGlzIHN0YXRlLiBJbiB0aGUgZmlyc3QgcGxhY2UsIHRoZXJlZm9yZSwgbGVhcm5pbmcgdGhhdCBBbWVkb2N1cywgdGhlIGtpbmcgb2YgdGhlIE9kcnlzaWFucywgYW5kIFNldXRoZXMsIHRoZSBydWxlciBvZiB0aGUgY29hc3QgcmVnaW9uLCB3ZXJlIGF0IHZhcmlhbmNlLCBoZSByZWNvbmNpbGVkIHRoZW0gdG8gb25lIGFub3RoZXIgYW5kIG1hZGUgdGhlbSBmcmllbmRzIGFuZCBhbGxpZXMgb2YgdGhlIEF0aGVuaWFucywgdGhpbmtpbmcgdGhhdCBpZiB0aGV5IHdlcmUgZnJpZW5kbHksIHRoZSBHcmVlayBjaXRpZXMgc2l0dWF0ZWQgb24gdGhlIFRocmFjaWFuIGNvYXN0IHdvdWxkIGFsc28gc2hvdyBhIGdyZWF0ZXIgaW5jbGluYXRpb24gdG93YXJkcyB0aGUgQXRoZW5pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuLCB3aXRoIHRoaXMgbWF0dGVyIHN1Y2Nlc3NmdWxseSBhcnJhbmdlZCwgYW5kIHRoZSBjaXRpZXMgaW4gQXNpYSBpbiBhIGZhdm91cmFibGUgYXR0aXR1ZGUgb24gYWNjb3VudCBvZiB0aGUgS2luZydzIGJlaW5nIGEgZnJpZW5kIG9mIHRoZSBBdGhlbmlhbnMsIGhlIHNhaWxlZCB0byBCeXphbnRpdW0gYW5kIGZhcm1lZCBvdXQgdGhlIHRpdGhlLWR1dHkgb24gdmVzc2VscyBzYWlsaW5nIG91dCBvZiB0aGUgUG9udHVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gSS4gaS4gMjIgYW5kIG5vdGUuPC9ub3RlPiBIZSBhbHNvIGNoYW5nZWQgdGhlIGdvdmVybm1lbnQgb2YgdGhlIEJ5emFudGluZXMgZnJvbSBhbiBvbGlnYXJjaHkgdG8gYSBkZW1vY3JhY3ksIHNvIHRoYXQgdGhlIGNvbW1vbnMgb2YgQnl6YW50aXVtIHdlcmUgbm90IHNvcnJ5IHRvIHNlZSB0aGUgZ3JlYXRlc3QgcG9zc2libGUgbnVtYmVyIG9mIEF0aGVuaWFucyBwcmVzZW50IGluIHRoZWlyIGNpdHkuCjwvdHJhbnNsYXRpb24+"
translation['4.8.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGFmdGVyIGhlIGhhZCBhY2NvbXBsaXNoZWQgdGhlc2UgdGhpbmdzIGFuZCBoYWQgd29uIG92ZXIgdGhlIENhbGNoZWRvbmlhbnMgYWxzbyBhcyBmcmllbmRzLCBoZSBzYWlsZWQgYmFjayBvdXQgb2YgdGhlIEhlbGxlc3BvbnQuIEFuZCBmaW5kaW5nIHRoYXQgYWxsIHRoZSBjaXRpZXMgaW4gTGVzYm9zIGV4Y2VwdCBNeXRpbGVuZSB3ZXJlIG9uIHRoZSBzaWRlIG9mIHRoZSBMYWNlZGFlbW9uaWFucywgaGUgd2VudCBhZ2FpbnN0IG5vbmUgb2YgdGhlbSB1bnRpbCBoZSBoYWQgbWFyc2hhbGxlZCBpbiBNeXRpbGVuZSB0aGUgZm91ciBodW5kcmVkIGhvcGxpdGVzIGZyb20gaGlzIG93biBzaGlwcyBhbmQgYWxsIHRoZSBleGlsZXMgZnJvbSB0aGUgTGVzYmlhbiBjaXRpZXMgd2hvIGhhZCBmbGVkIGZvciByZWZ1Z2UgdG8gTXl0aWxlbmUsIGFuZCBoYWQgYWxzbyBhZGRlZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM5MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM5MCI+MzkwIEIuQy48L2RhdGU+PC9ub3RlPiB0byB0aGlzIGZvcmNlIHRoZSBzdG91dGVzdCBvZiB0aGUgTXl0aWxlbmFlYW5zIHRoZW1zZWx2ZXM7IG5vciwgZnVydGhlcm1vcmUsIHVudGlsIGhlIGhhZCBzdWdnZXN0ZWQgaG9wZXMsIGZpcnN0bHkgdG8gdGhlIE15dGlsZW5hZWFucywgdGhhdCBpZiBoZSBjYXB0dXJlZCB0aGUgY2l0aWVzIHRoZXkgd291bGQgYmUgdGhlIGxlYWRlcnMgb2YgYWxsIExlc2Jvcywgc2Vjb25kbHkgdG8gdGhlIGV4aWxlcywgdGhhdCBpZiB0aGV5IHByb2NlZWRlZCBhbGwgdG9nZXRoZXIgYWdhaW5zdCBlYWNoIHNpbmdsZSBvbmUgb2YgdGhlIGNpdGllcywgdGhleSB3b3VsZCBiZSBhYmxlLCBhY3RpbmcgaW4gdW5pc29uLCB0byBhY2NvbXBsaXNoIHRoZWlyIHJlc3RvcmF0aW9uIHRvIHRoZWlyIG5hdGl2ZSBzdGF0ZXMsIGFuZCBhZ2FpbiB0byBoaXMgbWFyaW5lcywgdGhhdCBieSBtYWtpbmcgTGVzYm9zIGxpa2V3aXNlIGZyaWVuZGx5IHRvIHRoZWlyIHN0YXRlIHRoZXkgd291bGQgYXQgb25jZSBvYnRhaW4gYSBncmVhdCBhYnVuZGFuY2Ugb2YgbW9uZXkuIFRoZW4sIGFmdGVyIGdpdmluZyB0aGVtIHRoaXMgZW5jb3VyYWdlbWVudCBhbmQgbWFyc2hhbGxpbmcgdGhlbSBpbiBsaW5lIG9mIGJhdHRsZSwgaGUgbGVkIHRoZW0gYWdhaW5zdCBNZXRoeW1uYS4KPGRhdGUgYXV0aG5hbWU9Ii0zOTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zOTAiPjM5MCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.8.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyaW1hY2h1cywgaG93ZXZlciwgd2hvIGNoYW5jZWQgdG8gYmUgdGhlIExhY2VkYWVtb25pYW4gZ292ZXJub3IsIG9uIGhlYXJpbmcgdGhhdCBUaHJhc3lidWx1cyB3YXMgY29taW5nIGFnYWluc3QgaGltLCB0b29rIHRoZSBtYXJpbmVzIGZyb20gaGlzIG93biBzaGlwcywgdGhlIE1ldGh5bW5hZWFucyB0aGVtc2VsdmVzLCBhbmQgYWxsIHRoZSBNeXRpbGVuYWVhbiBleGlsZXMgd2hvIGNoYW5jZWQgdG8gYmUgdGhlcmUsIGFuZCB3ZW50IHRvIG1lZXQgdGhlIGVuZW15IGF0IHRoZSBib3JkZXJzLiBBIGJhdHRsZSB3YXMgZm91Z2h0IGluIHdoaWNoIFRoZXJpbWFjaHVzIHdhcyBraWxsZWQgb24gdGhlIHNwb3QgYW5kIG1hbnkgb2YgdGhlIG90aGVycyB3ZXJlIGtpbGxlZCBhcyB0aGV5IGZsZWQuCjwvdHJhbnNsYXRpb24+"
translation['4.8.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIFRocmFzeWJ1bHVzIGJyb3VnaHQgb3ZlciBzb21lIG9mIHRoZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OSI+Mzg5IEIuQy48L2RhdGU+PC9ub3RlPiBjaXRpZXMsIGFuZCB3YXMgYnVzeSBjb2xsZWN0aW5nIG1vbmV5IGZvciBoaXMgc29sZGllcnMgYnkgcGx1bmRlcmluZyBmcm9tIHRob3NlIHdoaWNoIHJlZnVzZWQgdG8gY29tZSBvdmVyOyBtZWFud2hpbGUgaGUgd2FzIGVhZ2VyIHRvIGFycml2ZSBhdCBSaG9kZXMuIEJ1dCB0byB0aGUgZW5kIHRoYXQgdGhlcmUgYWxzbyBoZSBtaWdodCBtYWtlIGhpcyBhcm15IGFzIHN0cm9uZyBhcyBwb3NzaWJsZSwgaGUgY29sbGVjdGVkIG1vbmV5IGZyb20gdmFyaW91cyBjaXRpZXMsIGFuZCBjYW1lIHRvIEFzcGVuZHVzIGluIHBhcnRpY3VsYXIgYW5kIGFuY2hvcmVkIGluIHRoZSBFdXJ5bWVkb24gcml2ZXIuIEFuZCBhZnRlciBoZSBoYWQgYWxyZWFkeSByZWNlaXZlZCBtb25leSBmcm9tIHRoZSBBc3BlbmRpYW5zLCBoaXMgc29sZGllcnMgd3JvbmdmdWxseSBkaWQgc29tZSBwbHVuZGVyaW5nIGZyb20gdGhlaXIgbGFuZHM7IHRoZSBBc3BlbmRpYW5zIHRoZXJlZm9yZSBpbiBhbmdlciBmZWxsIHVwb24gaGltIGR1cmluZyB0aGUgbmlnaHQgYW5kIGN1dCBoaW0gZG93biBpbiBoaXMgdGVudC4KPGRhdGUgYXV0aG5hbWU9Ii0zODkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODkiPjM4OSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.8.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhpcywgdGhlbiwgd2FzIHRoZSBlbmQgb2YgVGhyYXN5YnVsdXMsIHdobyB3YXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODkiPjM4OSBCLkMuPC9kYXRlPjwvbm90ZT4gZXN0ZWVtZWQgYSBtb3N0IGV4Y2VsbGVudCBtYW4uIEFuZCB0aGUgQXRoZW5pYW5zIGNob3NlIEFneXJyaGl1cyBpbiBoaXMgcGxhY2UsIGFuZCBzZW50IGhpbSBvdXQgdG8gdGFrZSBjb21tYW5kIG9mIHRoZSBzaGlwcy4gVGhlIExhY2VkYWVtb25pYW5zLCBvbiB0aGUgb3RoZXIgaGFuZCwgbGVhcm5pbmcgdGhhdCB0aGUgdGl0aGUtZHV0eSBvbiB0aGUgdmVzc2VscyBzYWlsaW5nIG91dCBvZiB0aGUgUG9udHVzIGhhZCBiZWVuIHNvbGQgYXQgQnl6YW50aXVtIGJ5IHRoZSBBdGhlbmlhbnMsIHRoYXQgdGhleSB3ZXJlIGluIHBvc3Nlc3Npb24gb2YgQ2FsY2hlZG9uLCBhbmQgdGhhdCB0aGUgb3RoZXIgSGVsbGVzcG9udGluZSBjaXRpZXMgd2VyZSBpbiBhIGZhdm91cmFibGUgYXR0aXR1ZGUgdG93YXJkIHRoZW0gYmVjYXVzZSBQaGFybmFiYXp1cyB3YXMgdGhlaXIgZnJpZW5kLCBjb25jbHVkZWQgdGhhdCB0aGV5IG11c3QgYXR0ZW5kIHRvIHRoaXMgc2l0dWF0aW9uLgo8ZGF0ZSBhdXRobmFtZT0iLTM4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OSI+Mzg5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['4.8.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGRpZCBub3QsIGluZGVlZCwgZmluZCBhbnkgZmF1bHQgd2l0aCBEZXJjeWxpZGFzOyBidXQgQW5heGliaXVzLCBpbmFzbXVjaCBhcyB0aGUgZXBob3JzIGhhZCBiZWNvbWUgZnJpZW5kcyBvZiBoaXMsIHN1Y2NlZWRlZCBpbiBoYXZpbmcgaGltc2VsZiBzZW50IG91dCB0byBBYnlkdXMgYXMgZ292ZXJub3IuIEFuZCBoZSBwcm9taXNlZCB0aGF0IGlmIGhlIHJlY2VpdmVkIG1vbmV5IGFuZCBzaGlwcywgaGUgd291bGQgYWxzbyBtYWtlIHdhciB1cG9uIHRoZSBBdGhlbmlhbnMsIHNvIHRoYXQgbWF0dGVycyBtaWdodCBub3Qgc3RhbmQgc28gd2VsbCB3aXRoIHRoZW0gaW4gdGhlIEhlbGxlc3BvbnQuCjwvdHJhbnNsYXRpb24+"
translation['4.8.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSB0aGUgZXBob3JzIGdhdmUgQW5heGliaXVzIHRocmVlIHRyaXJlbWVzIGFuZCBtb25leSBlbm91Z2ggZm9yIGEgdGhvdXNhbmQgbWVyY2VuYXJpZXMsIGFuZCBzZW50IGhpbSBvdXQuIFdoZW4gaGUgaGFkIHJlYWNoZWQgQWJ5ZHVzLCBoaXMgb3BlcmF0aW9ucyBieSBsYW5kIHdlcmUgYXMgZm9sbG93czogYWZ0ZXIgY29sbGVjdGluZyBhIG1lcmNlbmFyeSBmb3JjZSwgaGUgcHJvY2VlZGVkIHRvIGRldGFjaCBzb21lIG9mIHRoZSBBZW9saWFuIGNpdGllcyBmcm9tIFBoYXJuYWJhenVzLCB0YWtlIHRoZSBmaWVsZCBpbiByZXRhbGlhdG9yeSBleHBlZGl0aW9ucyBhZ2FpbnN0IHRoZSBjaXRpZXMgd2hpY2ggaGFkIG1hZGUgZXhwZWRpdGlvbnMgYWdhaW5zdCBBYnlkdXMsIG1hcmNoIHVwb24gdGhlbSwgYW5kIGxheSB3YXN0ZSB0aGVpciB0ZXJyaXRvcnkuIE9uIHRoZSBuYXZhbCBzaWRlLCBpbiBhZGRpdGlvbiB0byB0aGUgc2hpcHMgd2hpY2ggaGUgaGFkIGhlIGZ1bGx5IG1hbm5lZCB0aHJlZSBvdGhlcnMgZnJvbSBBYnlkdXMsIGFuZCBicm91Z2h0IGludG8gcG9ydCB3aGF0ZXZlciBtZXJjaGFudCB2ZXNzZWwgaGUgZm91bmQgYW55d2hlcmUgYmVsb25naW5nIHRvIHRoZSBBdGhlbmlhbnMgb3IgdGhlaXIgYWxsaWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgQXRoZW5pYW5zLCBob3dldmVyLCBsZWFybmluZyBvZiB0aGVzZSB0aGluZ3MsIGFuZCBmZWFyaW5nIHRoYXQgdGhlIHJlc3VsdHMgb2YgYWxsIFRocmFzeWJ1bHVzJyB3b3JrIGluIHRoZSBIZWxsZXNwb250IG1pZ2h0IGJlIHJ1aW5lZCBmb3IgdGhlbSwgc2VudCBvdXQgYWdhaW5zdCBBbmF4aWJpdXMgSXBoaWNyYXRlcywgd2l0aCBlaWdodCBzaGlwcyBhbmQgYWJvdXQgb25lPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzg5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg5Ij4zODkgQi5DLjwvZGF0ZT48L25vdGU+IHRob3VzYW5kIHR3byBodW5kcmVkIHBlbHRhc3RzLiBUaGUgZ3JlYXRlciBwYXJ0IG9mIHRoZXNlIHdlcmUgdGhlIG1lbiB3aG9tIGhlIGhhZCBjb21tYW5kZWQgYXQgQ29yaW50aC48ZGF0ZSBhdXRobmFtZT0iLTM4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OSI+Mzg5IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNlZSBjaGFwcy4gaXYuIGFuZCB2Ljwvbm90ZT4gRm9yIHdoZW4gdGhlIEFyZ2l2ZXMgaGFkIGluY29ycG9yYXRlZCBDb3JpbnRoIGluIEFyZ29zLCB0aGV5IHNhaWQgdGhhdCB0aGV5IGhhZCBubyBuZWVkIG9mIHRoZW07IGZvciBJcGhpY3JhdGVzIGhhZCBwdXQgdG8gZGVhdGggc29tZSBvZiB0aGUgcGFydGlzYW5zIG9mIEFyZ29zOyBhY2NvcmRpbmdseSBoZSBoYWQgcmV0dXJuZWQgdG8gQXRoZW5zIGFuZCBjaGFuY2VkIHRvIGJlIGF0IGhvbWUgYXQgdGhpcyB0aW1lLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiBoZSByZWFjaGVkIHRoZSBDaGVyc29uZXNlLCBhdCBmaXJzdCBBbmF4aWJpdXMgYW5kIGhlIG1hZGUgd2FyIHVwb24gb25lIGFub3RoZXIgYnkgc2VuZGluZyBvdXQgcmFpZGluZyBwYXJ0aWVzOyBidXQgYXMgdGltZSB3ZW50IG9uIElwaGljcmF0ZXMgZm91bmQgb3V0IHRoYXQgQW5heGliaXVzIGhhZCBnb25lIHRvIEFudGFuZHJ1cyB3aXRoIGhpcyBtZXJjZW5hcmllcywgdGhlIExhY2VkYWVtb25pYW5zIHdobyB3ZXJlIHdpdGggaGltLCBhbmQgdHdvIGh1bmRyZWQgaG9wbGl0ZXMgZnJvbSBBYnlkdXMsIGFuZCBoZWFyZCB0aGF0IGhlIGhhZCBicm91Z2h0IEFudGFuZHJ1cyBpbnRvIHJlbGF0aW9ucyBvZiBmcmllbmRzaGlwIHdpdGggaGltLiBXaGVyZXVwb24sIHN1c3BlY3RpbmcgdGhhdCBhZnRlciBoZSBoYWQgYWxzbyBlc3RhYmxpc2hlZCBoaXMgZ2Fycmlzb24gdGhlcmUgaGUgd291bGQgcmV0dXJuIGFnYWluIGFuZCBicmluZyB0aGUgQWJ5ZGVuZXMgYmFjayBob21lLCBJcGhpY3JhdGVzIGNyb3NzZWQgb3ZlciBieSBuaWdodCB0byB0aGUgbW9zdCBkZXNlcnRlZCBwb3J0aW9uIG9mIHRoZSB0ZXJyaXRvcnkgb2YgQWJ5ZHVzLCBhbmQgZ29pbmcgdXAgaW50byB0aGUgbW91bnRhaW5zLCBzZXQgYW4gYW1idXNoLiBGdXJ0aGVybW9yZSwgaGUgb3JkZXJlZCB0aGUgdHJpcmVtZXMgd2hpY2ggaGFkIGJyb3VnaHQgaGltIGFjcm9zcyB0aGUgc3RyYWl0IHRvIHNhaWwgYXQgZGF5YnJlYWsgYWxvbmcgdGhlIGNvYXN0IG9mIHRoZSBDaGVyc29uZXNlLCB1cCB0aGUgc3RyYWl0LCBpbiBvcmRlciB0aGF0IGl0IG1pZ2h0IHNlZW0gdGhhdCBoZSBoYWQgc2FpbGVkIHVwIHRoZSBIZWxsZXNwb250IHRvIGNvbGxlY3QgbW9uZXksIGFzIGhlIHdhcyB3b250IHRvIGRvLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5IYXZpbmcgZG9uZSBhbGwgdGhlc2UgdGhpbmdzIGhlIHdhcyBub3QgZGlzYXBwb2ludGVkLCBmb3IgQW5heGliaXVzIGRpZCBjb21lIG1hcmNoaW5nIGJhY2ssIGV2ZW4gdGhvdWdo4oCUYXQgbGVhc3QsIGFzIHRoZSBzdG9yeSByYW7igJRoaXMgc2FjcmlmaWNlcyBvbiB0aGF0IGRheSBoYWQgbm90IHByb3ZlZCBmYXZvdXJhYmxlOyBidXQgZGVzcGl0ZSB0aGF0IGZhY3QsIGZpbGxlZCB3aXRoIGRpc2RhaW5mdWwgY29uZmlkZW5jZSBiZWNhdXNlIGhlIHdhcyBwcm9jZWVkaW5nIHRocm91Z2ggYSBmcmllbmRseSBjb3VudHJ5IGFuZCB0byBhIGZyaWVuZGx5IGNpdHksIGFuZCBiZWNhdXNlIGhlIGhlYXJkIGZyb20gdGhvc2Ugd2hvIG1ldCBoaW0gdGhhdCBJcGhpY3JhdGVzIGhhZCBzYWlsZWQgdXAgaW4gdGhlIGRpcmVjdGlvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OSI+Mzg5IEIuQy48L2RhdGU+PC9ub3RlPiBvZiBQcm9jb25uZXN1cywgaGUgd2FzIG1ha2luZyBoaXMgbWFyY2ggaW4gYSByYXRoZXIgY2FyZWxlc3MgZmFzaGlvbi4KPGRhdGUgYXV0aG5hbWU9Ii0zODkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODkiPjM4OSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['4.8.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5OZXZlcnRoZWxlc3MsIElwaGljcmF0ZXMgZGlkIG5vdCByaXNlIGZyb20gYW1idXNoIHNvIGxvbmcgYXMgdGhlIGFybXkgb2YgQW5heGliaXVzIHdhcyBvbiB0aGUgbGV2ZWwgZ3JvdW5kOyBidXQgd2hlbiB0aGUgQWJ5ZGVuZXMsIHdobyB3ZXJlIGluIHRoZSB2YW4sIHdlcmUgbm93IGluIHRoZSBwbGFpbiBvZiBDcmVtYXN0ZSwgd2hlcmUgdGhlaXIgZ29sZCBtaW5lcyBhcmUsIGFuZCB0aGUgcmVzdCBvZiB0aGUgYXJteSBhcyBpdCBmb2xsb3dlZCBhbG9uZyB3YXMgb24gdGhlIGRvd253YXJkIHNsb3BlLCBhbmQgQW5heGliaXVzIHdpdGggaGlzIExhY2VkYWVtb25pYW5zIHdhcyBqdXN0IGJlZ2lubmluZyB0aGUgZGVzY2VudCwgYXQgdGhpcyBtb21lbnQgSXBoaWNyYXRlcyBzdGFydGVkIGhpcyBtZW4gdXAgZnJvbSB0aGVpciBhbWJ1c2ggYW5kIHJ1c2hlZCB1cG9uIGhpbSBvbiB0aGUgcnVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIEFuYXhpYml1cywganVkZ2luZyB0aGF0IHRoZXJlIHdhcyBubyBob3BlIG9mIHNhZmV0eSwgaW5hc211Y2ggYXMgaGUgc2F3IHRoYXQgaGlzIGFybXkgZXh0ZW5kZWQgb3ZlciBhIGxvbmcgYW5kIG5hcnJvdyB3YXksIGFuZCB0aG91Z2h0IHRoYXQgdGhvc2Ugd2hvIGhhZCBnb25lIG9uIGFoZWFkIHdvdWxkIGNsZWFybHkgYmUgdW5hYmxlIHRvIGNvbWUgdG8gaGlzIGFzc2lzdGFuY2UgdXAgdGhlIGhpbGwsIGFuZCBzaW5jZSBoZSBhbHNvIHBlcmNlaXZlZCB0aGF0IGFsbCB3ZXJlIGluIGEgc3RhdGUgb2YgdGVycm9yIHdoZW4gdGhleSBzYXcgdGhlIGFtYnVzaCwgc2FpZCB0byB0aG9zZSB3aG8gd2VyZSB3aXRoIGhpbTog4oCcR2VudGxlbWVuLCBpdCBpcyBob25vdXJhYmxlIGZvciBtZSB0byBkaWUgaGVyZSwgYnV0IGRvIHlvdSBodXJyeSB0byBzYWZldHkgYmVmb3JlIGNvbWluZyB0byBjbG9zZSBlbmdhZ2VtZW50IHdpdGggdGhlIGVuZW15LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['4.8.39'] = ""
translation['5.1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoLCB0aGVuLCB3ZXJlIHRoZSBkb2luZ3Mgb2YgdGhlIEF0aGVuaWFuczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OSI+Mzg5IEIuQy48L2RhdGU+PC9ub3RlPiBhbmQgTGFjZWRhZW1vbmlhbnMgaW4gdGhlIHJlZ2lvbiBvZiB0aGUgSGVsbGVzcG9udC4gTWVhbndoaWxlIEV0ZW9uaWN1cyB3YXMgYWdhaW4gaW4gQWVnaW5hLCBhbmQgYWx0aG91Z2ggcHJldmlvdXNseSB0aGUgQWVnaW5ldGFucyBoYWQgYmVlbiBtYWludGFpbmluZyBjb21tZXJjaWFsIGludGVyY291cnNlIHdpdGggdGhlIEF0aGVuaWFucywgc3RpbGwsIG5vdyB0aGF0IHRoZSB3YXIgd2FzIGJlaW5nIGNhcnJpZWQgb24gYnkgc2VhIG9wZW5seSwgaGUsIHdpdGggdGhlIGFwcHJvdmFsIG9mIHRoZSBlcGhvcnMsIHVyZ2VkIG9uIGV2ZXJ5Ym9keSB3aG8gc28gd2lzaGVkLCB0byBwbHVuZGVyIEF0dGljYS4KPGRhdGUgYXV0aG5hbWU9Ii0zODkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODkiPjM4OSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPlRoZXJldXBvbiB0aGUgQXRoZW5pYW5zLCBiZWluZyBjdXQgb2ZmIGZyb20gc3VwcGxpZXMgYnkgdGhlIHBsdW5kZXJlcnMsIHNlbnQgdG8gQWVnaW5hIGEgZm9yY2Ugb2YgaG9wbGl0ZXMgYW5kIFBhbXBoaWx1cyBhcyB0aGVpciBnZW5lcmFsLCBidWlsdCBhIGZvcnRyZXNzIGFzIGEgYmFzZSBvZiBhdHRhY2sgdXBvbiB0aGUgQWVnaW5ldGFucywgYW5kIGJlc2llZ2VkIHRoZW0gYm90aCBieSBsYW5kIGFuZCBieSBzZWEgd2l0aCB0ZW4gdHJpcmVtZXMuIFRlbGV1dGlhcywgaG93ZXZlciwgd2hvIGNoYW5jZWQgdG8gaGF2ZSBhcnJpdmVkIG9uIG9uZSBvZiB0aGUgaXNsYW5kcyBpbiBxdWVzdCBvZiBhIGdyYW50IG9mIG1vbmV5LCB1cG9uIGhlYXJpbmcgb2YgdGhpcyAodGhhdCBpcywgaW4gcmVnYXJkIHRvIHRoZSBidWlsZGluZyBvZiB0aGUgZm9ydHJlc3MpIGNhbWUgdG8gdGhlIGFpZCBvZiB0aGUgQWVnaW5ldGFuczsgYW5kIGhlIGRyb3ZlIG9mZiB0aGUgQXRoZW5pYW4gZmxlZXQsIGJ1dCBQYW1waGlsdXMgc3VjY2VlZGVkIGluIGhvbGRpbmcgdGhlIGZvcnRyZXNzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIEhpZXJheCBhcnJpdmVkIGZyb20gTGFjZWRhZW1vbiBhcyBhZG1pcmFsLiBBbmQgaGUgdG9vayBvdmVyIHRoZSBmbGVldCwgd2hpbGUgVGVsZXV0aWFzLCB1bmRlciB0aGUgdmVyeSBoYXBwaWVzdCBjaXJjdW1zdGFuY2VzLCBzZXQgc2FpbCBmb3IgaG9tZS4gRm9yIHdoZW4gaGUgd2FzIGdvaW5nIGRvd24gdG8gdGhlIHNlYSBhcyBoZSBzZXQgb3V0IGZvciBob21lLCB0aGVyZSB3YXMgbm8gb25lIGFtb25nIHRoZSBzb2xkaWVycyB3aG8gZGlkIG5vdCBncmFzcCBoaXMgaGFuZCwgYW5kIG9uZSBkZWNrZWQgaGltIHdpdGggYSBnYXJsYW5kLCBhbm90aGVyIHdpdGggYSBmaWxsZXQsIGFuZCBvdGhlcnMgd2hvIGNhbWUgdG9vIGxhdGUsIG5ldmVydGhlbGVzcywgZXZlbiB0aG91Z2ggaGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODkiPjM4OSBCLkMuPC9kYXRlPjwvbm90ZT4gd2FzIG5vdyB1bmRlciB3YXksIHRocmV3IGdhcmxhbmRzIGludG8gdGhlIHNlYSBhbmQgcHJheWVkIGZvciBtYW55IGJsZXNzaW5ncyB1cG9uIGhpbS4KPGRhdGUgYXV0aG5hbWU9Ii0zODkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODkiPjM4OSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPiBOb3cgSSBhbSBhd2FyZSB0aGF0IEkgYW0gbm90IGRlc2NyaWJpbmcgaW4gdGhlc2UgaW5jaWRlbnRzIGFueSBlbnRlcnByaXNlIGludm9sdmluZyBtb25leSBleHBlbmRlZCBvciBkYW5nZXIgaW5jdXJyZWQgb3IgYW55IG1lbW9yYWJsZSBzdHJhdGFnZW07IGFuZCB5ZXQsIGJ5IFpldXMsIGl0IHNlZW1zIHRvIG1lIHRoYXQgaXQgaXMgd2VsbCB3b3J0aCBhIG1hbidzIHdoaWxlIHRvIGNvbnNpZGVyIHdoYXQgc29ydCBvZiBjb25kdWN0IGl0IHdhcyB0aGF0IGVuYWJsZWQgVGVsZXV0aWFzIHRvIGluc3BpcmUgdGhlIG1lbiBoZSBjb21tYW5kZWQgd2l0aCBzdWNoIGEgZmVlbGluZyB0b3dhcmQgaGltc2VsZi4gRm9yIHRvIGF0dGFpbiB0byB0aGlzIGlzIGluZGVlZCB0aGUgYWNoaWV2ZW1lbnQgb2YgYSB0cnVlIG1hbiwgbW9yZSBub3Rld29ydGh5IHRoYW4gdGhlIGV4cGVuZGl0dXJlIG9mIG11Y2ggbW9uZXkgYW5kIHRoZSBlbmNvdW50ZXJpbmcgb2YgbWFueSBkYW5nZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BcyBmb3IgSGllcmF4LCBvbiB0aGUgb3RoZXIgaGFuZCwgaGUgc2FpbGVkIGJhY2sgdG8gUmhvZGVzIHdpdGggdGhlIGJ1bGsgb2YgdGhlIHNoaXBzLCBidXQgbGVmdCBiZWhpbmQgaGltIGluIEFlZ2luYSB0d2VsdmUgdHJpcmVtZXMgYW5kIEdvcmdvcGFzLCBoaXMgdmljZS1hZG1pcmFsLCBhcyBnb3Zlcm5vci4gQW5kIGFmdGVyIHRoaXMgaXQgd2FzIHRoZSBBdGhlbmlhbnMgaW4gdGhlIGZvcnRyZXNzIHdobyB3ZXJlIGJlc2llZ2VkIHJhdGhlciB0aGFuIHRoZSBBZWdpbmV0YW5zIGluIHRoZSBjaXR5OyBpbnNvbXVjaCB0aGF0IHRoZSBBdGhlbmlhbnMsIGJ5IGEgZm9ybWFsIGRlY3JlZSwgbWFubmVkIGEgbGFyZ2UgbnVtYmVyIG9mIHNoaXBzIGFuZCBicm91Z2h0IGJhY2sgZnJvbSBBZWdpbmEgaW4gdGhlIGZpZnRoIG1vbnRoIHRoZSB0cm9vcHMgaW4gdGhlIGZvcnRyZXNzLiBCdXQgd2hlbiB0aGlzIGhhZCBiZWVuIGRvbmUsIHRoZSBBdGhlbmlhbnMgd2VyZSBhZ2FpbiBtb2xlc3RlZCBieSB0aGUgYmFuZHMgb2YgcmFpZGVycyBhbmQgYnkgR29yZ29wYXMsIGFuZCB0aGV5IG1hbm5lZCBhZ2FpbnN0IHRoZXNlIGVuZW1pZXMgdGhpcnRlZW4gc2hpcHMgYW5kIGNob3NlIEV1bm9tdXMgYXMgYWRtaXJhbCB0byBjb21tYW5kIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['5.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPiBOb3cgd2hpbGUgSGllcmF4IHdhcyBhdCBSaG9kZXMgdGhlIExhY2VkYWVtb25pYW5zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzg5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg5Ij4zODkgQi5DLjwvZGF0ZT48L25vdGU+IHNlbnQgb3V0IEFudGFsY2lkYXMgYXMgYWRtaXJhbCwgdGhpbmtpbmcgdGhhdCBieSBkb2luZyB0aGlzIHRoZXkgd291bGQgbW9zdCBwbGVhc2UgVGlyaWJhenVzIGFsc28uIEFuZCB3aGVuIEFudGFsY2lkYXMgYXJyaXZlZCBhdCBBZWdpbmEsIGhlIHRvb2sgd2l0aCBoaW0gdGhlIHNoaXBzIG9mIEdvcmdvcGFzIGFuZCBzYWlsZWQgdG8gRXBoZXN1cywgdGhlbiBzZW50IEdvcmdvcGFzIGJhY2sgYWdhaW4gdG8gQWVnaW5hIHdpdGggaGlzIHR3ZWx2ZSBzaGlwcywgYW5kIHB1dCBOaWNvbG9jaHVzLCBoaXMgdmljZS1hZG1pcmFsLCBpbiBjb21tYW5kIG9mIHRoZSByZXN0LiBUaGVyZXVwb248ZGF0ZSBhdXRobmFtZT0iLTM4OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OSI+Mzg5IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzg4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg4Ij4zODggQi5DLjwvZGF0ZT48L25vdGU+IE5pY29sb2NodXMsIHNlZWtpbmcgdG8gYWlkIHRoZSBwZW9wbGUgb2YgQWJ5ZHVzLCBwcm9jZWVkZWQgdG8gc2FpbCB0aGl0aGVyOyBoZSB0dXJuZWQgYXNpZGUsIGhvd2V2ZXIsIHRvIFRlbmVkb3MgYW5kIGxhaWQgd2FzdGUgaXRzIHRlcnJpdG9yeSwgYW5kIGhhdmluZyBvYnRhaW5lZCBtb25leSB0aGVyZSwgc2FpbGVkIG9uIHRvIEFieWR1cy4KPGRhdGUgYXV0aG5hbWU9Ii0zODgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODgiPjM4OCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gdGhlIGdlbmVyYWxzIG9mIHRoZSBBdGhlbmlhbnMgZ2F0aGVyZWQgdG9nZXRoZXIgZnJvbSBTYW1vdGhyYWNlLCBUaGFzb3MsIGFuZCB0aGUgcGxhY2VzIGluIHRoYXQgcmVnaW9uLCBhbmQgc2V0IG91dCB0byBhaWQgdGhlIHBlb3BsZSBvZiBUZW5lZG9zLiBCdXQgdXBvbiBsZWFybmluZyB0aGF0IE5pY29sb2NodXMgaGFkIHB1dCBpbiBhdCBBYnlkdXMgdGhleSB0aGVuLCBzZXR0aW5nIG91dCBmcm9tIHRoZSBDaGVyc29uZXNlIGFzIGEgYmFzZSwgYmxvY2thZGVkIGhpbSBhbmQgaGlzIHR3ZW50eS1maXZlIHNoaXBzIHdpdGggdGhlIHRoaXJ0eS10d28gc2hpcHMgdW5kZXIgdGhlaXIgY29tbWFuZC4gQXMgZm9yIEdvcmdvcGFzLCBvbiBoaXMgdm95YWdlIGJhY2sgZnJvbSBFcGhlc3VzIGhlIGZlbGwgaW4gd2l0aCBFdW5vbXVzLCBhbmQgZm9yIHRoZSBtb21lbnQgdG9vayByZWZ1Z2UgaW4gQWVnaW5hLCByZWFjaGluZyB0aGVyZSBhIGxpdHRsZSBiZWZvcmUgc3Vuc2V0LiBUaGVuIGhlIGF0IG9uY2UgZGlzZW1iYXJrZWQgaGlzIG1lbiBhbmQgZ2F2ZSB0aGVtIGRpbm5lci4KPC90cmFuc2xhdGlvbj4="
translation['5.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPiBNZWFud2hpbGUgRXVub211cywgYWZ0ZXIgd2FpdGluZyBhIHNob3J0IHRpbWUsIHNhaWxlZCBvZmYuIEFuZCB3aGVuIG5pZ2h0IGNhbWUgb24gaGUgbGVkIHRoZSB3YXksIGNhcnJ5aW5nIGEgbGlnaHQsIGFzIHRoZSBjdXN0b20gaXMsIHNvIHRoYXQgdGhlIHNoaXBzIHdoaWNoIHdlcmUgZm9sbG93aW5nIGhpbSBtaWdodCBub3QgZ28gYXN0cmF5LiBUaGVuIEdvcmdvcGFzIGltbWVkaWF0ZWx5IGVtYmFya2VkIGhpcyBtZW4gYW5kIGZvbGxvd2VkIG9uIGluIHRoZSBkaXJlY3Rpb24gb2YgdGhlIGxpZ2h0LCBrZWVwaW5nIGJlaGluZCB0aGUgZW5lbXkgc28gdGhhdCBoZSBzaG91bGQgbm90IGJlIHZpc2libGUgb3IgZ2l2ZSB0aGVtIGEgY2hhbmNlIHRvIG5vdGljZSBoaW07IHdoaWxlIGhpcyBib2F0c3dhaW5zIGdhdmUgdGhlIHRpbWUgYnkgY2xpY2tpbmcgc3RvbmVzIHRvZ2V0aGVyIGluc3RlYWQgb2Ygd2l0aCB0aGVpciB2b2ljZXMsIGFuZCBtYWRlIHRoZSBtZW4gZW1wbG95IGEgc2xpZGluZyBtb3Rpb24gb2YgdGhlIG9hcnMuCjwvdHJhbnNsYXRpb24+"
translation['5.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGVuIHRoZSBzaGlwcyBvZiBFdW5vbXVzIHdlcmUgY2xvc2UgdG8gdGhlIHNob3JlIG5lYXIgQ2FwZSBab3N0ZXIgaW4gQXR0aWNhLCBHb3Jnb3BhcyBnYXZlIHRoZSBvcmRlciBieSB0aGUgdHJ1bXBldCB0byBzYWlsIGFnYWluc3QgdGhlbS4gQW5kIGFzIGZvciBFdW5vbXVzLCB0aGUgbWVuIG9uIHNvbWUgb2YgaGlzIHNoaXBzIHdlcmUganVzdCBkaXNlbWJhcmtpbmcsIG90aGVycyB3ZXJlIHN0aWxsIG9jY3VwaWVkIGluIGNvbWluZyB0byBhbmNob3IsIGFuZCBvdGhlcnMgd2VyZSBldmVuIHlldCBvbiB0aGVpciB3YXkgdG93YXJkIHRoZSBzaG9yZS4gVGhlbiwgYSBiYXR0bGUgYmVpbmcgZm91Z2h0IGJ5IG1vb25saWdodCwgR29yZ29wYXMgY2FwdHVyZWQgZm91ciB0cmlyZW1lcywgYW5kIHRha2luZyB0aGVtIGluIHRvdyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODgiPjM4OCBCLkMuPC9kYXRlPjwvbm90ZT4gY2FycmllZCB0aGVtIG9mZiB0byBBZWdpbmE7IGJ1dCB0aGUgb3RoZXIgc2hpcHMgb2YgdGhlIEF0aGVuaWFucyBtYWRlIHRoZWlyIGVzY2FwZSB0byBQaXJhZXVzLgo8ZGF0ZSBhdXRobmFtZT0iLTM4OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OCI+Mzg4IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['5.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyBDaGFicmlhcyBzZXQgb3V0IG9uIGEgdm95YWdlIHRvIEN5cHJ1cyB0byBhaWQgRXVhZ29yYXMsIHdpdGggZWlnaHQgaHVuZHJlZCBwZWx0YXN0cyBhbmQgdGVuIHRyaXJlbWVzLCB0byB3aGljaCBmb3JjZSBoZSBoYWQgYWxzbyBhZGRlZCBtb3JlIHNoaXBzIGFuZCBhIGJvZHkgb2YgaG9wbGl0ZXMgb2J0YWluZWQgZnJvbSBBdGhlbnM7IGFuZCBkdXJpbmcgdGhlIG5pZ2h0IGhlIGhpbXNlbGYsIHdpdGggaGlzIHBlbHRhc3RzLCBsYW5kZWQgaW4gQWVnaW5hIGFuZCBzZXQgYW4gYW1idXNoIGluIGEgaG9sbG93IHBsYWNlIGJleW9uZCB0aGUgSGVyYWNsZWl1bS4gVGhlbiBhdCBkYXlicmVhaywganVzdCBhcyBoYWQgYmVlbiBhZ3JlZWQsIHRoZSBob3BsaXRlcyBvZiB0aGUgQXRoZW5pYW5zIGNhbWUsIHVuZGVyIHRoZSBjb21tYW5kIG9mIERlbWFlbmV0dXMsIGFuZCBhc2NlbmRlZCB0byBhIHBvaW50IGFib3V0IHNpeHRlZW4gc3RhZGlhIGJleW9uZCB0aGUgSGVyYWNsZWl1bSwgd2hlcmUgdGhlIHNvLWNhbGxlZCBUcmlweXJnaWE8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFRoZSByZWZlcmVuY2UgaXMgdW5jZXJ0YWluLjwvbm90ZT4gaXMuCjwvdHJhbnNsYXRpb24+"
translation['5.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz4gT24gaGVhcmluZyBvZiB0aGlzIEdvcmdvcGFzIHNhbGxpZWQgZm9ydGggdG8gdGhlIHJlc2N1ZSB3aXRoIHRoZSBBZWdpbmV0YW5zLCB0aGUgbWFyaW5lcyBmcm9tIGhpcyBzaGlwcywgYW5kIGVpZ2h0IFNwYXJ0aWF0YWUgd2hvIGNoYW5jZWQgdG8gYmUgdGhlcmUuIEhlIGFsc28gbWFkZSBwcm9jbGFtYXRpb24gdGhhdCBhbGwgZnJlZW1lbiBhbW9uZyB0aGUgY3Jld3Mgb2YgdGhlIHNoaXBzIHNob3VsZCBjb21lIHdpdGggaGltLCBzbyB0aGF0IG1hbnkgb2YgdGhlc2UgYWxzbyBqb2luZWQgdGhlIHJlbGllZiBmb3JjZSwgZWFjaCBtYW4gd2l0aCB3aGF0ZXZlciB3ZWFwb24gaGUgY291bGQgZ2V0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz4gTm93IHdoZW4gdGhvc2UgaW4gdGhlIHZhbiBoYWQgcGFzc2VkIGJ5IHRoZSBhbWJ1c2gsIENoYWJyaWFzIGFuZCBoaXMgZm9sbG93ZXJzIHJvc2UgdXAgYW5kIGltbWVkaWF0ZWx5IHRocmV3IGphdmVsaW5zIGFuZCBzdG9uZXMgdXBvbiB0aGUgZW5lbXkuIEFuZCB0aGUgaG9wbGl0ZXMgd2hvIGhhZCBkaXNlbWJhcmtlZCBmcm9tIHRoZSBzaGlwcyBhbHNvIGFkdmFuY2VkIHVwb24gdGhlbS4gVGhlbiB0aG9zZSBpbiB0aGUgdmFuLCBpbmFzbXVjaCBhcyB0aGV5IHdlcmUgbm90IGEgY29tcGFjdCBtYXNzLCB3ZXJlIHF1aWNrbHkga2lsbGVkLCBhbW9uZyB3aG9tIHdlcmUgR29yZ29wYXMgYW5kIHRoZSBMYWNlZGFlbW9uaWFuczsgYW5kIHdoZW4gdGhlc2UgaGFkIGZhbGxlbiB0aGUgcmVzdCBhbHNvIHdlcmUgcHV0IHRvIGZsaWdodC4gQW5kIHRoZXJlIGZlbGwgYWJvdXQgb25lIGh1bmRyZWQgYW5kIGZpZnR5IEFlZ2luZXRhbnMgYW5kIG5vdCBsZXNzIHRoYW4gdHdvIGh1bmRyZWQgZm9yZWlnbmVycywgYWxpZW5zIHJlc2lkZW50IGluIEFlZ2luYSwgYW5kIHNhaWxvcnMgd2hvIGhhZCBodXJyaWVkbHkgcnVzaGVkIGFzaG9yZS4KPC90cmFuc2xhdGlvbj4="
translation['5.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzIHRoZSBBdGhlbmlhbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODgiPjM4OCBCLkMuPC9kYXRlPjwvbm90ZT4gc2FpbGVkIHRoZSBzZWEganVzdCBhcyBpbiB0aW1lIG9mIHBlYWNlLCBmb3IgdGhlIExhY2VkYWVtb25pYW4gc2FpbG9ycyByZWZ1c2VkIHRvIHJvdyBmb3IgRXRlb25pY3VzLCBldmVuIHRob3VnaCBoZSB0cmllZCB0byBjb21wZWwgdGhlbSB0byBkbyBzbywgYmVjYXVzZSBoZSBkaWQgbm90IGdpdmUgdGhlbSBwYXkuPGRhdGUgYXV0aG5hbWU9Ii0zODgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODgiPjM4OCBCLkMuPC9kYXRlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZSBMYWNlZGFlbW9uaWFucyBzZW50IG91dCBUZWxldXRpYXMgYWdhaW4gdG8gdGFrZSBjb21tYW5kIG9mIHRoZXNlIHNoaXBzIGFzIGFkbWlyYWwuIEFuZCB3aGVuIHRoZSBzYWlsb3JzIHNhdyB0aGF0IGhlIGhhZCBjb21lLCB0aGV5IHdlcmUgZGVsaWdodGVkIGJleW9uZCBtZWFzdXJlLiBBbmQgaGUgY2FsbGVkIHRoZW0gdG9nZXRoZXIgYW5kIHNwb2tlIGFzIGZvbGxvd3M6CjwvdHJhbnNsYXRpb24+"
translation['5.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz7igJxGZWxsb3cgc29sZGllcnMsIEkgaGF2ZSBjb21lIHdpdGhvdXQgbW9uZXk7IHlldCBpZiBHb2QgYmUgd2lsbGluZyBhbmQgeW91IHBlcmZvcm0geW91ciBwYXJ0IHplYWxvdXNseSwgSSBzaGFsbCBlbmRlYXZvdXIgdG8gc3VwcGx5IHlvdSB3aXRoIHByb3Zpc2lvbnMgaW4gdGhlIGdyZWF0ZXN0IGFidW5kYW5jZS4gQW5kIGJlIHdlbGwgYXNzdXJlZCB0aGF0LCB3aGVuZXZlciBJIGFtIGluIGNvbW1hbmQgb2YgeW91LCBJIHByYXkganVzdCBhcyBlYXJuZXN0bHkgZm9yIHlvdXIgbGl2ZXMgYXMgZm9yIG15IG93bi4gQXMgdG8gcHJvdmlzaW9ucywgeW91IHdvdWxkIGJlIHN1cnByaXNlZCwgcGVyaGFwcywgaWYgSSBzaG91bGQgc2F5IHRoYXQgSSBhbSBtb3JlIGRlc2lyb3VzIG9mIHlvdXIgYmVpbmcgc3VwcGxpZWQgdGhhbiBvZiBiZWluZyBzdXBwbGllZCBteXNlbGY7IGluZGVlZCwgYnkgdGhlIGdvZHMsIEkgc2hvdWxkIHByZWZlciB0byBnbyB3aXRob3V0IGZvb2QgbXlzZWxmIGZvciB0d28gZGF5cyB0aGFuIHRvIGhhdmUgeW91IGdvIHdpdGhvdXQgZm9yIG9uZS4gQW5kIGp1c3QgYXMgbXkgZG9vciB3YXMgb3BlbiBpbiBkYXlzIHBhc3QsIGFzIHlvdSBrbm93LCBmb3IgaGltIHRvIGVudGVyIHdobyBoYWQgYW55IHJlcXVlc3QgdG8gbWFrZSBvZiBtZSwgc28gbGlrZXdpc2UgaXQgc2hhbGwgYmUgb3BlbiBub3cuCjwvdHJhbnNsYXRpb24+"
translation['5.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUsIHdoZW4geW91IGhhdmUgcHJvdmlzaW9ucyBpbiBhYnVuZGFuY2UsIHRoZW4geW91IHdpbGwgc2VlIG1lIGFsc28gbGl2aW5nIGJvdW50ZW91c2x5OyBidXQgaWYgeW91IHNlZSBtZSBzdWJtaXR0aW5nIHRvIGNvbGQgYW5kIGhlYXQgYW5kIG5pZ2h0LXdhdGNoaW5nLCBleHBlY3QgdG8gZW5kdXJlIGFsbCB0aGVzZSB0aGluZ3MgeW91cnNlbHZlcy4gRm9yIEkgZG8gbm90IGJpZCB5b3UgZG8gYW55IG9mIHRoZXNlIHRoaW5ncyB0aGF0IHlvdSBtYXkgc3VmZmVyIGRpc2NvbWZvcnQsIGJ1dCB0aGF0IGZyb20gdGhlbSB5b3UgbWF5IGdhaW4gc29tZXRoaW5nIGdvb2QuCjwvdHJhbnNsYXRpb24+"
translation['5.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgU3BhcnRhIHRvbyzigJ0gaGUgYWRkZWQsIOKAnHRoYXQgU3BhcnRhIG9mIG91cnMsIGZlbGxvdyBzb2xkaWVycywgd2hpY2ggaXMgYWNjb3VudGVkIHNvIHByb3NwZXJvdXMg4oCUIHNoZSBiZSB3ZWxsIGFzc3VyZWQsIHdvbiBoZXIgcHJvc3Blcml0eSBhbmQgaGVyIGdsb3J5LCBub3QgYnkgY2FyZWxlc3MgaWRsaW5nLCBidXQgYnkgYmVpbmcgd2lsbGluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OCI+Mzg4IEIuQy48L2RhdGU+PC9ub3RlPiB0byB1bmRlcmdvIGJvdGggdG9pbHMgYW5kIGRhbmdlcnMgd2hlbmV2ZXIgdGhlcmUgd2FzIG5lZWQuIE5vdyB5b3UgaW4gbGlrZSBtYW5uZXIgd2VyZSBpbiBmb3JtZXIgZGF5cywgYXMgSSBrbm93LCBnb29kIG1lbjsgYnV0IG5vdyB5b3UgbXVzdCBzdHJpdmUgdG8gcHJvdmUgeW91cnNlbHZlcyBldmVuIGJldHRlciBtZW4sIGluIG9yZGVyIHRoYXQsIGp1c3QgYXMgd2UgZ2xhZGx5IHVuZGVyZ28gdG9pbHMgdG9nZXRoZXIsIHNvIHdlIG1heSBnbGFkbHkgZW5qb3kgZ29vZCBmb3J0dW5lIHRvZ2V0aGVyLgo8ZGF0ZSBhdXRobmFtZT0iLTM4OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4OCI+Mzg4IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['5.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igd2hhdCBncmVhdGVyIGdsYWRuZXNzIGNhbiB0aGVyZSBiZSB0aGFuIHRvIGhhdmUgdG8gZmxhdHRlciBubyBvbmUgaW4gdGhlIHdvcmxkLCBHcmVlayBvciBiYXJiYXJpYW4sIGZvciB0aGUgc2FrZSBvZiBwYXksIGJ1dCB0byBiZSBhYmxlIHRvIHByb3ZpZGUgc3VwcGxpZXMgZm9yIG9uZXNlbGYsIGFuZCB3aGF0IGlzIG1vcmUsIGZyb20gdGhlIG1vc3QgaG9ub3VyYWJsZSBzb3VyY2U/IEZvciBiZSB3ZWxsIGFzc3VyZWQgdGhhdCBhYnVuZGFuY2UgZ2FpbmVkIGluIHdhciBmcm9tIHRoZSBlbmVteSB5aWVsZHMgbm90IG1lcmVseSBzdXN0ZW5hbmNlLCBidXQgYXQgdGhlIHNhbWUgdGltZSBmYWlyIGZhbWUgYW1vbmcgYWxsIG1lbi7igJ0KPC90cmFuc2xhdGlvbj4="
translation['5.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGh1cyBoZSBzcG9rZSwgYW5kIHRoZXkgYWxsIHNldCB1cCBhIHNob3V0LCBiaWRkaW5nIGhpbSBnaXZlIHdoYXRldmVyIG9yZGVyIHdhcyBuZWVkZnVsLCBpbiB0aGUgYXNzdXJhbmNlIHRoYXQgdGhleSB3b3VsZCBvYmV5LiBOb3cgaGUgY2hhbmNlZCB0byBoYXZlIGZpbmlzaGVkIHNhY3JpZmljaW5nLCBhbmQgaGUgc2FpZDog4oCcQ29tZSwgbXkgbWVuLCBnZXQgZGlubmVyLCBqdXN0IGFzIHlvdSB3ZXJlIGludGVuZGluZyB0byBkbyBhbnl3YXk7IGFuZCBwcm92aWRlIHlvdXJzZWx2ZXMsIEkgYmVnIHlvdSwgd2l0aCBmb29kIGZvciBvbmUgZGF5LiBUaGVuIGNvbWUgdG8gdGhlIHNoaXBzIHJpZ2h0IHNwZWVkaWx5LCB0aGF0IHdlIG1heSBzYWlsIHRvIHRoZSBwbGFjZSB3aGVyZSBHb2Qgd2lsbHMgdGhhdCB3ZSBnbywgYW5kIG1heSBhcnJpdmUgaW4gZ29vZCB0aW1lLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['5.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGV5IGhhZCBjb21lIGhlIGVtYmFya2VkIHRoZW0gdXBvbiB0aGUgc2hpcHMgYW5kIHNhaWxlZCBkdXJpbmcgdGhlIG5pZ2h0IHRvIHRoZSBoYXJib3VyIG9mIHRoZSBBdGhlbmlhbnMsIG5vdyBsZXR0aW5nIHRoZSBtZW4gcmVzdCBhbmQgYmlkZGluZyB0aGVtIGdldCBhIGxpdHRsZSBzbGVlcCwgYW5kIG5vdyBzZXR0aW5nIHRoZW0gYXQgdGhlIG9hcnMuIEJ1dCBpZiBhbnlvbmUgc3VwcG9zZXMgdGhhdCBpdCB3YXMgbWFkbmVzcyBmb3IgaGltIHRvIHNhaWwgd2l0aCB0d2VsdmUgdHJpcmVtZXMgYWdhaW5zdCBtZW4gd2hvIHBvc3Nlc3NlZCBtYW55IHNoaXBzLCBsZXQgc3VjaCBhIG9uZSBjb25zaWRlciBUZWxldXRpYXMnIGNhbGN1bGF0aW9ucy4KPC90cmFuc2xhdGlvbj4="
translation['5.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5IZSBjb25jZWl2ZWQgdGhhdCB0aGUgQXRoZW5pYW5zIHdlcmUgbW9yZSBjYXJlbGVzcyBhYm91dCB0aGVpciBmbGVldCBpbiB0aGUgaGFyYm91ciBub3cgdGhhdCBHb3Jnb3BhcyB3YXMgZGVhZDsgYW5kIGV2ZW4gaWYgdGhlcmUgd2VyZSB0cmlyZW1lcyBhdCBhbmNob3IgdGhlcmUsIGhlIGJlbGlldmVkIHRoYXQgaXQgd2FzIHNhZmVyIHRvIHNhaWwgYWdhaW5zdCB0d2VudHk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODgiPjM4OCBCLkMuPC9kYXRlPjwvbm90ZT4gc2hpcHMgd2hpY2ggd2VyZSBhdCBBdGhlbnMgdGhhbiBhZ2FpbnN0IHRlbiBlbHNld2hlcmUuIEZvciBpbiB0aGUgY2FzZSBvZiBzaGlwcyB0aGF0IHdlcmUgYWJyb2FkIGhlIGtuZXcgdGhhdCB0aGUgc2FpbG9ycyB3b3VsZCBiZSBxdWFydGVyZWQgb24gYm9hcmQgdGhlaXIgc2V2ZXJhbCBzaGlwcywgd2hpbGUgd2l0aCBzaGlwcyBhdCBBdGhlbnMgaGUgd2FzIGF3YXJlIHRoYXQgdGhlIGNhcHRhaW5zIHdvdWxkIGJlIHNsZWVwaW5nIGF0IGhvbWUgYW5kIHRoZSBzYWlsb3JzIHF1YXJ0ZXJlZCBoZXJlIGFuZCB0aGVyZS4KPGRhdGUgYXV0aG5hbWU9Ii0zODgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODgiPjM4OCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVzZSwgdGhlbiwgd2VyZSB0aGUgY29uc2lkZXJhdGlvbnMgd2hpY2ggaGUgaGFkIHdlaWdoZWQgYmVmb3JlIGhlIHNhaWxlZDsgYW5kIHdoZW4gaGUgd2FzIGRpc3RhbnQgZnJvbSB0aGUgaGFyYm91ciBmaXZlIG9yIHNpeCBzdGFkaWEsIGhlIHJlbWFpbmVkIHF1aWV0IGFuZCBsZXQgaGlzIG1lbiByZXN0LiBUaGVuLCBhcyBkYXkgd2FzIGRhd25pbmcsIGhlIGxlZCBvbiBhbmQgdGhleSBmb2xsb3dlZC4gTm93IGhlIGZvcmJhZGUgdGhlbSB0byBzaW5rIG9yIGhhcm0gYW55IG1lcmNoYW50IHZlc3NlbCB3aXRoIHRoZWlyIG93biBzaGlwczsgYnV0IGlmIHRoZXkgc2F3IGEgdHJpcmVtZSBhdCBhbmNob3IgYW55d2hlcmUsIGhlIG9yZGVyZWQgdGhlbSB0byB0cnkgdG8gbWFrZSBoZXIgdW5zZWF3b3J0aHksIGFuZCBmdXJ0aGVybW9yZSwgdG8gYnJpbmcgb3V0IGluIHRvdyB0aGUgbWVyY2hhbnQgc2hpcHMgd2hpY2ggd2VyZSBsb2FkZWQsIGFuZCB0byBib2FyZCB0aGUgbGFyZ2VyIG9uZXMgd2hlcmV2ZXIgdGhleSBjb3VsZCBhbmQgdGFrZSBvZmYgdGhlaXIgcGVvcGxlLiBJbmRlZWQsIHRoZXJlIHdlcmUgc29tZSBvZiBoaXMgbWVuIHdobyBldmVuIGxlYXBlZCBhc2hvcmUgb24gdG8gdGhlIERlaWdtYSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IEEgcXVheSB3aGVyZSBtZXJjaGFudHMgZGlzcGxheWVkIChjcC4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTOtc65zrrOvc+FzrzOuTwvZm9yZWlnbj4pIHRoZWlyIHdhcmVzLjwvbm90ZT4gc2VpemVkIG1lcmNoYW50cyBhbmQgb3duZXJzIG9mIHRyYWRpbmcgdmVzc2VscywgYW5kIGNhcnJpZWQgdGhlbSBhYm9hcmQgdGhlIHNoaXBzLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtM61zrnOus69z4XOvM65PC9mb3JlaWduPikgdGhlaXIgd2FyZXMuPC90cmFuc2xhdGlvbj4="
translation['5.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5IZSwgdGhlbiwgc3VjY2VlZGVkIGluIGFjY29tcGxpc2hpbmcgdGhlc2UgdGhpbmdzLiBCdXQgYXMgZm9yIHRoZSBBdGhlbmlhbnMsIHNvbWUgb2YgdGhlbSwgdXBvbiBoZWFyaW5nIHRoZSB1cHJvYXIsIHJhbiBmcm9tIHRoZWlyIGhvdXNlcyBpbnRvIHRoZSBzdHJlZXRzIHRvIHNlZSB3aGF0IHRoZSBzaG91dGluZyBtZWFudCwgb3RoZXJzIHJhbiBmcm9tIHRoZSBzdHJlZXRzIHRvIHRoZWlyIGhvbWVzIHRvIGdldCB0aGVpciB3ZWFwb25zLCBhbmQgc3RpbGwgb3RoZXJzIHRvIHRoZSBjaXR5IHRvIGNhcnJ5IHRoZSBuZXdzLiBUaGVuIGFsbCB0aGUgQXRoZW5pYW5zLCBob3BsaXRlcyBhbmQgaG9yc2VtZW4sIHJ1c2hlZCB0byB0aGUgcmVzY3VlLCB0aGlua2luZyB0aGF0IFBpcmFldXMgaGFkIGJlZW4gY2FwdHVyZWQuCjwvdHJhbnNsYXRpb24+"
translation['5.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgVGVsZXV0aWFzIHNlbnQgb2ZmIHRoZSBjYXB0dXJlZCBtZXJjaGFudCB2ZXNzZWxzIHRvIEFlZ2luYSBhbmQgZ2F2ZSBvcmRlcnMgdGhhdCB0aHJlZSBvciBmb3VyIG9mIHRoZSB0cmlyZW1lcyBzaG91bGQgY29udm95IHRoZW0gdGhpdGhlciwgd2hpbGUgd2l0aCB0aGUgcmVzdCBvZiB0aGUgdHJpcmVtZXMgaGUgY29hc3RlZCBhbG9uZyB0aGUgc2hvcmUgb2YgQXR0aWNhIGFuZCwgaW5hc211Y2ggYXMgaGUgd2FzIHNhaWxpbmcgb3V0IG9mIHRoZSBoYXJib3VyLCBjYXB0dXJlZCBncmVhdCBudW1iZXJzIG9mIGZpc2hpbmcgY3JhZnQgYW5kIGZlcnJ5Ym9hdHMgZnVsbCBvZiBwZW9wbGUgYXMgdGhleSB3ZXJlIHNhaWxpbmcgaW4gZnJvbSB0aGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODgiPjM4OCBCLkMuPC9kYXRlPjwvbm90ZT4gaXNsYW5kcy4gQW5kIG9uIGNvbWluZyB0byBTdW5pdW0gaGUgY2FwdHVyZWQgdHJhZGluZyB2ZXNzZWxzIGFsc28sIHNvbWUgb2YgdGhlbSBmdWxsIG9mIGNvcm4sIG90aGVycyBvZiBtZXJjaGFuZGlzZS4KPGRhdGUgYXV0aG5hbWU9Ii0zODgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODgiPjM4OCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5IYXZpbmcgZG9uZSBhbGwgdGhlc2UgdGhpbmdzIGhlIHNhaWxlZCBiYWNrIHRvIEFlZ2luYSwgYW5kIHdoZW4gaGUgaGFkIHNvbGQgaGlzIGJvb3R5IGhlIGdhdmUgdGhlIHNvbGRpZXJzIGEgbW9udGgncyBwYXkgaW4gYWR2YW5jZS4gSGUgbGlrZXdpc2UgZnJvbSB0aGF0IHRpbWUgZm9ydGggY3J1aXNlZCByb3VuZCBhbmQgY2FwdHVyZWQgd2hhdGV2ZXIgaGUgY291bGQuIEFuZCBieSBkb2luZyB0aGVzZSB0aGluZ3MgaGUgbWFpbnRhaW5lZCBoaXMgc2hpcHMgd2l0aCBmdWxsIGNvbXBsZW1lbnRzIG9mIHNhaWxvcnMsIGFuZCBrZXB0IGhpcyBzb2xkaWVycyBpbiBhIHN0YXRlIG9mIGdsYWQgYW5kIHByb21wdCBvYmVkaWVuY2UuCjwvdHJhbnNsYXRpb24+"
translation['5.1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIG5vdyBBbnRhbGNpZGFzIHJldHVybmVkIHdpdGggVGlyaWJhenVzIGZyb208bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODciPjM4NyBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlIFBlcnNpYW4gY2FwaXRhbCwgaGF2aW5nIGVmZmVjdGVkIGFuIGFncmVlbWVudCB0aGF0IHRoZSBLaW5nIHNob3VsZCBiZSBhbiBhbGx5IG9mIHRoZSBMYWNlZGFlbW9uaWFucyBpZiB0aGUgQXRoZW5pYW5zIGFuZCB0aGVpciBhbGxpZXMgcmVmdXNlZCB0byBhY2NlcHQgdGhlIHBlYWNlIHdoaWNoIGhlIGhpbXNlbGYgZGlyZWN0ZWQgdGhlbSB0byBhY2NlcHQuIEJ1dCB3aGVuIEFudGFsY2lkYXMgaGVhcmQgdGhhdCBOaWNvbG9jaHVzIHdpdGggaGlzIHNoaXBzIHdhcyBiZWluZyBibG9ja2FkZWQgYXQgQWJ5ZHVzIGJ5IElwaGljcmF0ZXMgYW5kIERpb3RpbXVzLCBoZSB3ZW50IG92ZXJsYW5kIHRvIEFieWR1cy4gQW5kIGZyb20gdGhlcmUgaGUgc2V0IG91dCBkdXJpbmcgdGhlIG5pZ2h0IHdpdGggdGhlIGZsZWV0LCBhZnRlciBzcHJlYWRpbmcgYSByZXBvcnQgdGhhdCB0aGUgQ2FsY2hlZG9uaWFucyB3ZXJlIHNlbmRpbmcgZm9yIGhpbTsgdGhlbiBoZSBjYW1lIHRvIGFuY2hvciBhdCBQZXJjb3RlIGFuZCByZW1haW5lZCBxdWlldCB0aGVyZS4KPGRhdGUgYXV0aG5hbWU9Ii0zODciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODciPjM4NyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIEF0aGVuaWFuIGZvcmNlcyB1bmRlciBEZW1hZW5ldHVzLCBEaW9ueXNpdXMsIExlb250aWNodXMsIGFuZCBQaGFuaWFzLCB1cG9uIGxlYXJuaW5nIG9mIGhpcyBkZXBhcnR1cmUsIGZvbGxvd2VkIGFmdGVyIGhpbSBpbiB0aGUgZGlyZWN0aW9uIG9mIFByb2Nvbm5lc3VzOyBhbmQgd2hlbiB0aGV5IGhhZCBzYWlsZWQgcGFzdCBoaW0sIEFudGFsY2lkYXMgdHVybmVkIGFib3V0IGFuZCBjYW1lIGJhY2sgdG8gQWJ5ZHVzLCBmb3IgaGUgaGFkIGhlYXJkIHRoYXQgUG9seXhlbnVzIHdhcyBhcHByb2FjaGluZyB3aXRoIHRoZSBzaGlwcyBmcm9tIFN5cmFjdXNlIGFuZCBJdGFseSwgdHdlbnR5IGluIG51bWJlciwgYW5kIGhlIHdpc2hlZCB0byBqb2luIHRoZXNlIGFsc28gdG8gaGlzIGNvbW1hbmQuIEJ1dCBzb29uIGFmdGVyIHRoaXMgVGhyYXN5YnVsdXMsIG9mIHRoZSBkZW1lIENvbGx5dHVzLCBjYW1lIHNhaWxpbmcgZnJvbSBUaHJhY2Ugd2l0aCBlaWdodCBzaGlwcywgZGVzaXJpbmcgdG8gdW5pdGUgd2l0aCB0aGUgb3RoZXIgQXRoZW5pYW4gc2hpcHMuCjwvdHJhbnNsYXRpb24+"
translation['5.1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgQW50YWxjaWRhcywgd2hlbiBoaXMgc2NvdXRzIHNpZ25hbGxlZCB0bzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4NyI+Mzg3IEIuQy48L2RhdGU+PC9ub3RlPiBoaW0gdGhhdCBlaWdodCB0cmlyZW1lcyB3ZXJlIGFwcHJvYWNoaW5nLCBlbWJhcmtlZCB0aGUgc2FpbG9ycyBvbiB0d2VsdmUgb2YgaGlzIGZhc3Rlc3Qgc2hpcHMsIGdhdmUgb3JkZXJzIHRoYXQgaWYgYW55b25lIHdhcyBsYWNraW5nIG1lbiwgaGUgc2hvdWxkIGZpbGwgdXAgaGlzIGNyZXcgZnJvbSB0aGUgc2hpcHMgbGVmdCBiZWhpbmQsIGFuZCBsYXkgaW4gd2FpdCB3aXRoIHRoZSB1dG1vc3QgcG9zc2libGUgY29uY2VhbG1lbnQuIFRoZW4sIGFzIHRoZSBlbmVteSB3ZXJlIHNhaWxpbmcgcGFzdCBoaW0sIGhlIHB1cnN1ZWQ7IGFuZCB0aGV5LCB1cG9uIHNlZWluZyBoaW0sIGZsZWQuIE5vdyBoZSBzcGVlZGlseSBzdWNjZWVkZWQgaW4gb3ZlcmhhdWxpbmcgdGhlIHNsb3dlc3Qgb2YgdGhlIGVuZW15J3Mgc2hpcHMgd2l0aCBoaXMgZmFzdGVzdDsgYnV0IGdpdmluZyBvcmRlcnMgdG8gdGhlIGxlYWRlcnMgb2YgaGlzIG93biBmbGVldCBub3QgdG8gYXR0YWNrIHRoZSBoaW5kbW9zdCBzaGlwcywgaGUgY29udGludWVkIHRoZSBwdXJzdWl0IG9mIHRob3NlIHdoaWNoIHdlcmUgYWhlYWQuIEFuZCB3aGVuIGhlIGhhZCBjYXB0dXJlZCB0aGVtLCB0aG9zZSB3aG8gd2VyZSBiZWhpbmQsIHVwb24gc2VlaW5nIHRoYXQgdGhlIGxlYWRlcnMgb2YgdGhlaXIgZmxlZXQgd2VyZSBiZWluZyB0YWtlbiwgb3V0IG9mIGRpc2NvdXJhZ2VtZW50IHdlcmUgdGhlbXNlbHZlcyB0YWtlbiBldmVuIGJ5IHRoZSBzbG93ZXIgc2hpcHMgb2YgQW50YWxjaWRhczsgYW5kIHRoZSByZXN1bHQgd2FzIHRoYXQgYWxsIHRoZSBzaGlwcyB3ZXJlIGNhcHR1cmVkLgo8ZGF0ZSBhdXRobmFtZT0iLTM4NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4NyI+Mzg3IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['5.1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYWZ0ZXIgdGhlIHR3ZW50eSBzaGlwcyBmcm9tIFN5cmFjdXNlIGhhZCBjb21lIGFuZCBqb2luZWQgQW50YWxjaWRhcywgYW5kIHRoZSBzaGlwcyBmcm9tIGFsbCB0aGF0IHBhcnQgb2YgSW9uaWEgb2Ygd2hpY2ggVGlyaWJhenVzIHdhcyBtYXN0ZXIgaGFkIGFsc28gY29tZSwgYW5kIG1vcmUgc3RpbGwgaGFkIGJlZW4gbWFubmVkIGZyb20gdGhlIHRlcnJpdG9yeSBvZiBBcmlvYmFyemFuZXMg4oCUIGZvciBBbnRhbGNpZGFzIHdhcyBhbiBvbGQgZnJpZW5kIG9mIEFyaW9iYXJ6YW5lcywgYW5kIFBoYXJuYWJhenVzIGhhZCBhdCB0aGlzIHRpbWUgZ29uZSB1cCB0byB0aGUgY2FwaXRhbCBpbiByZXNwb25zZSB0byBhIHN1bW1vbnMsIHRoaXMgYmVpbmcgdGhlIG9jY2FzaW9uIHdoZW4gaGUgbWFycmllZCB0aGUgS2luZydzIGRhdWdodGVyIOKAlCB0aGVuIEFudGFsY2lkYXMsIHRoZSB3aG9sZSBudW1iZXIgb2YgaGlzIHNoaXBzIGFtb3VudGluZyB0byBtb3JlIHRoYW4gZWlnaHR5LCB3YXMgbWFzdGVyIG9mIHRoZSBzZWEsIHNvIHRoYXQgaGUgYWxzbyBwcmV2ZW50ZWQgdGhlIHNoaXBzIGZyb20gdGhlIFBvbnR1cyBmcm9tIHNhaWxpbmcgdG8gQXRoZW5zLCBhbmQgY29tcGVsbGVkIHRoZW0gdG8gc2FpbCB0byB0aGUgcG9ydHMgb2YgaGlzIHBlb3BsZSdzIGFsbGllcy4KPC90cmFuc2xhdGlvbj4="
translation['5.1.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgQXRoZW5pYW5zLCB0aGVyZWZvcmUsIHNlZWluZyB0aGF0IHRoZSBlbmVteSdzIHNoaXBzIHdlcmUgbWFueSwgZmVhcmluZyB0aGF0IHRoZXkgbWlnaHQgYmUgY29tcGxldGVseSBzdWJkdWVkLCBhcyB0aGV5IGhhZCBiZWVuIGJlZm9yZSwgbm93IHRoYXQgdGhlIEtpbmcgaGFkIGJlY29tZSBhbiBhbGx5IG9mIHRoZSBMYWNlZGFlbW9uaWFucywgYW5kIGJlaW5nIGJlc2V0IGJ5IHRoZSByYWlkaW5nIHBhcnRpZXMgZnJvbSBBZWdpbmEsIGZvcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4NyI+Mzg3IEIuQy48L2RhdGU+PC9ub3RlPiB0aGVzZSByZWFzb25zIHdlcmUgZXhjZWVkaW5nbHkgZGVzaXJvdXMgb2YgcGVhY2UuIE9uIHRoZSBvdGhlciBoYW5kIHRoZSBMYWNlZGFlbW9uaWFucywgd2hhdCB3aXRoIG1haW50YWluaW5nIGEgZ2Fycmlzb24gb2Ygb25lIHJlZ2ltZW50IGF0IExlY2hhZXVtIGFuZCBhbm90aGVyIGF0IE9yY2hvbWVudXMsIGtlZXBpbmcgd2F0Y2ggdXBvbiB0aGVpciBhbGxpZWQgc3RhdGVzIOKAlCB0aG9zZSB3aGljaCB0aGV5IHRydXN0ZWQsIHRvIHByZXZlbnQgdGhlaXIgYmVpbmcgZGVzdHJveWVkLCBhbmQgdGhvc2Ugd2hpY2ggdGhleSBkaXN0cnVzdGVkLCB0byBwcmV2ZW50IHRoZWlyIHJldm9sdGluZyDigJQgYW5kIHN1ZmZlcmluZyBhbmQgY2F1c2luZyB0cm91YmxlIGFyb3VuZCBDb3JpbnRoLCB3ZXJlIG91dCBvZiBwYXRpZW5jZSB3aXRoIHRoZSB3YXIuIEFzIGZvciB0aGUgQXJnaXZlcywga25vd2luZyB0aGF0IHRoZSBMYWNlZGFlbW9uaWFuIGJhbiBoYWQgYmVlbiBjYWxsZWQgb3V0IGFnYWluc3QgdGhlbSwgYW5kIGJlaW5nIGF3YXJlIHRoYXQgdGhlaXIgcGxlYSBvZiB0aGUgc2FjcmVkIG1vbnRoczxkYXRlIGF1dGhuYW1lPSItMzg3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg3Ij4zODcgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIElWLiB2aWkuIDIgZi4gYW5kIG5vdGUuPC9ub3RlPiB3b3VsZCBubyBsb25nZXIgYmUgb2YgYW55IGhlbHAgdG8gdGhlbSwgdGhleSBhbHNvIHdlcmUgZWFnZXIgZm9yIHBlYWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.1.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGF0IHdoZW4gVGlyaWJhenVzIG9yZGVyZWQgdGhvc2UgdG8gYmUgcHJlc2VudCB3aG8gZGVzaXJlZCB0byBnaXZlIGVhciB0byB0aGUgcGVhY2Ugd2hpY2ggdGhlIEtpbmcgaGFkIHNlbnQgZG93biwgYWxsIHNwZWVkaWx5IHByZXNlbnRlZCB0aGVtc2VsdmVzLiBBbmQgd2hlbiB0aGV5IGhhZCBjb21lIHRvZ2V0aGVyLCBUaXJpYmF6dXMgc2hvd2VkIHRoZW0gdGhlIEtpbmcncyBzZWFsIGFuZCB0aGVuIHJlYWQgdGhlIHdyaXRpbmcuIEl0IHJhbiBhcyBmb2xsb3dzOgo8L3RyYW5zbGF0aW9uPg=="
translation['5.1.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcS2luZyBBcnRheGVyeGVzIHRoaW5rcyBpdCBqdXN0IHRoYXQgdGhlIGNpdGllcyBpbiBBc2lhIHNob3VsZCBiZWxvbmcgdG8gaGltLCBhcyB3ZWxsIGFzIENsYXpvbWVuYWUgYW5kIEN5cHJ1cyBhbW9uZyB0aGUgaXNsYW5kcywgYW5kIHRoYXQgdGhlIG90aGVyIEdyZWVrIGNpdGllcywgYm90aCBzbWFsbCBhbmQgZ3JlYXQsIHNob3VsZCBiZSBsZWZ0IGluZGVwZW5kZW50LCBleGNlcHQgTGVtbm9zLCBJbWJyb3MsIGFuZCBTY3lyb3M7IGFuZCB0aGVzZSBzaG91bGQgYmVsb25nLCBhcyBvZiBvbGQsIHRvIHRoZSBBdGhlbmlhbnMuIEJ1dCB3aGljaGV2ZXIgb2YgdGhlIHR3byBwYXJ0aWVzIGRvZXMgbm90IGFjY2VwdCB0aGlzIHBlYWNlLCB1cG9uIHRoZW0gSSB3aWxsIG1ha2Ugd2FyLCBpbiBjb21wYW55IHdpdGggdGhvc2Ugd2hvIGRlc2lyZSB0aGlzIGFycmFuZ2VtZW50LCBib3RoIGJ5IGxhbmQgYW5kIGJ5IHNlYSwgd2l0aCBzaGlwcyBhbmQgd2l0aCBtb25leS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['5.1.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VXBvbiBoZWFyaW5nIHRoZXNlIHdvcmRzIHRoZSBhbWJhc3NhZG9ycyBmcm9tIHRoZSB2YXJpb3VzIHN0YXRlcyByZXBvcnRlZCB0aGVtIHRvIHRoZWlyIG93biBzZXZlcmFsIHN0YXRlcy4gQW5kIGFsbCB0aGUgb3RoZXJzIHN3b3JlIHRoYXQgdGhleSB3b3VsZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4NyI+Mzg3IEIuQy48L2RhdGU+PC9ub3RlPiBzdGVhZGZhc3RseSBvYnNlcnZlIHRoZXNlIHByb3Zpc2lvbnMsIGJ1dCB0aGUgVGhlYmFucyBjbGFpbWVkIHRoZSByaWdodCB0byB0YWtlIHRoZSBvYXRoIGluIHRoZSBuYW1lIG9mIGFsbCB0aGUgQm9lb3RpYW5zLiBBZ2VzaWxhdXMsIGhvd2V2ZXIsIHJlZnVzZWQgdG8gYWNjZXB0IHRoZWlyIG9hdGhzIHVubGVzcyB0aGV5IHN3b3JlLCBqdXN0IGFzIHRoZSBLaW5nJ3Mgd3JpdGluZyBkaXJlY3RlZCwgdGhhdCBldmVyeSBjaXR5LCB3aGV0aGVyIHNtYWxsIG9yIGdyZWF0LCBzaG91bGQgYmUgaW5kZXBlbmRlbnQuIEJ1dCB0aGUgYW1iYXNzYWRvcnMgb2YgdGhlIFRoZWJhbnMgc2FpZCB0aGF0IHRoZXNlIHdlcmUgbm90IHRoZSBpbnN0cnVjdGlvbnMgd2hpY2ggaGFkIGJlZW4gZ2l2ZW4gdGhlbS4g4oCcR28gdGhlbizigJ0gc2FpZCBBZ2VzaWxhdXMsIOKAnGFuZCBhc2sgeW91ciBwZW9wbGU7IGFuZCByZXBvcnQgdG8gdGhlbSB0aGlzIGFsc28sIHRoYXQgaWYgdGhleSBkbyBub3Qgc28gYWN0LCB0aGV5IHdpbGwgYmUgc2h1dCBvdXQgZnJvbSB0aGUgdHJlYXR5LuKAnSBUaGUgVGhlYmFucyBhbWJhc3NhZG9ycyBhY2NvcmRpbmdseSBkZXBhcnRlZC4KPGRhdGUgYXV0aG5hbWU9Ii0zODciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODciPjM4NyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.1.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5BZ2VzaWxhdXMsIGhvd2V2ZXIsIG9uIGFjY291bnQgb2YgaGlzIGhhdHJlZCBmb3IgdGhlIFRoZWJhbnMsIGRpZCBub3QgZGVsYXksIGJ1dCBhZnRlciB3aW5uaW5nIG92ZXIgdGhlIGVwaG9ycyBwcm9jZWVkZWQgYXQgb25jZSB0byBwZXJmb3JtIGhpcyBzYWNyaWZpY2VzLiBBbmQgd2hlbiB0aGUgb2ZmZXJpbmcgYXQgdGhlIGZyb250aWVyIHByb3ZlZCBmYXZvdXJhYmxlLCB1cG9uIGhpcyBhcnJpdmFsIGF0IFRlZ2VhIGhlIHNlbnQgaG9yc2VtZW4gaGl0aGVyIGFuZCB0aGl0aGVyIGFtb25nIHRoZSBQZXJpb2VjaSB0byBoYXN0ZW4gdGhlaXIgY29taW5nLCBhbmQgbGlrZXdpc2Ugc2VudCBtdXN0ZXJpbmcgb2ZmaWNlcnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IExhY2VkYWVtb25pYW4gb2ZmaWNlcnMgd2hvIGFzc2VtYmxlZCBhbmQgY29tbWFuZGVkIHRoZSBjb250aW5nZW50cyBvZiB0aGUgYWxsaWVzLjwvbm90ZT4gdG8gdGhlIHZhcmlvdXMgY2l0aWVzIG9mIHRoZSBhbGxpZXMuIEJ1dCBiZWZvcmUgaGUgaGFkIHNldCBvdXQgZnJvbSBUZWdlYSwgdGhlIFRoZWJhbnMgYXJyaXZlZCB3aXRoIHdvcmQgdGhhdCB0aGV5IHdvdWxkIGxlYXZlIHRoZSBjaXRpZXMgaW5kZXBlbmRlbnQuIEFuZCBzbyB0aGUgTGFjZWRhZW1vbmlhbnMgcmV0dXJuZWQgaG9tZSBhbmQgdGhlIFRoZWJhbnMgd2VyZSBmb3JjZWQgdG8gYWNjZWRlIHRvIHRoZSB0cmVhdHksIGFsbG93aW5nIHRoZSBCb2VvdGlhbiBjaXRpZXMgdG8gYmUgaW5kZXBlbmRlbnQuCjwvdHJhbnNsYXRpb24+"
translation['5.1.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIENvcmludGhpYW5zLCBvbiB0aGUgb3RoZXIgaGFuZCwgd291bGQgbm90IGRpc21pc3MgdGhlIGdhcnJpc29uIG1haW50YWluZWQgaW4gdGhlaXIgY2l0eSBieSB0aGUgQXJnaXZlcy4gQWdlc2lsYXVzLCBob3dldmVyLCBtYWRlIHByb2NsYW1hdGlvbiB0byB0aGVzZSBwZW9wbGVzIGFsc28sIHNheWluZyB0byB0aGUgQ29yaW50aGlhbnMgdGhhdCBpZiB0aGV5IGRpZCBub3QgZGlzbWlzcyB0aGUgQXJnaXZlcywgYW5kIHRvIHRoZSBBcmdpdmVzIHRoYXQgaWYgdGhleSBkaWQgbm90IGRlcGFydCBmcm9tIENvcmludGgsIGhlIHdvdWxkIG1ha2Ugd2FyIHVwb24gdGhlbS4gQW5kIHdoZW4sIGFzIGEgcmVzdWx0IG9mIHRoZSBmZWFyIHdoaWNoIHNlaXplZCBib3RoIHBlb3BsZXMsIHRoZSBBcmdpdmVzIGRlcGFydGVkIGFuZCB0aGUgc3RhdGUgb2YgdGhlIENvcmludGhpYW5zIHJlZ2FpbmVkIGl0cyBzZWxmLWdvdmVybm1lbnQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzg3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg3Ij4zODcgQi5DLjwvZGF0ZT48L25vdGU+IHRoZSBhdXRob3JzIG9mIHRoZSBtYXNzYWNyZTxkYXRlIGF1dGhuYW1lPSItMzg3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg3Ij4zODcgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIElWLiBpdi4gMi48L25vdGU+IGFuZCB0aG9zZSB3aG8gc2hhcmVkIHRoZSByZXNwb25zaWJpbGl0eSBmb3IgdGhlIGRlZWQgd2l0aGRyZXcgb2YgdGhlaXIgb3duIGFjY29yZCBmcm9tIENvcmludGgsIHdoaWxlIHRoZSByZXN0IG9mIHRoZSBjaXRpemVucyB3aWxsaW5nbHkgcmVjZWl2ZWQgYmFjayB0aGUgZm9ybWVyIGV4aWxlcy4KPC90cmFuc2xhdGlvbj4="
translation['5.1.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGVzZSB0aGluZ3MgaGFkIGJlZW4gYWNjb21wbGlzaGVkIGFuZCB0aGUgc3RhdGVzIGhhZCBzd29ybiB0aGF0IHRoZXkgd291bGQgYWJpZGUgYnkgdGhlIHRyZWF0eSB3aGljaCB0aGUgS2luZyBoYWQgcHJvcG9zZWQsIHRoZXJldXBvbiB0aGUgYXJtaWVzIHdlcmUgZGlzYmFuZGVkIGFuZCB0aGUgbmF2YWwgYXJtYW1lbnRzIHdlcmUgbGlrZXdpc2UgZGlzYmFuZGVkLiBUaHVzIGl0IHdhcyB0aGF0IHRoaXMgcGVhY2Ugd2FzIGVzdGFibGlzaGVkIGJldHdlZW4gdGhlIExhY2VkYWVtb25pYW5zIGFuZCBBdGhlbmlhbnMgYW5kIHRoZWlyIGFsbGllcywgdGhlIGZpcnN0IHNpbmNlIHRoZSBvdXRicmVhayBvZiB0aGUgd2FyIHdoaWNoIGZvbGxvd2VkIHRoZSBkZXN0cnVjdGlvbiBvZiB0aGUgd2FsbHMgb2YgQXRoZW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.1.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hpbGUgaW4gdGhlIHdhciB0aGUgTGFjZWRhZW1vbmlhbnMgd2VyZSBubyBtb3JlIHRoYW4gaG9sZGluZyB0aGVpciBvd24gd2l0aCB0aGVpciBhbnRhZ29uaXN0cywgeWV0IGFzIGEgcmVzdWx0IG9mIHRoZSBzby1jYWxsZWQgUGVhY2Ugb2YgQW50YWxjaWRhcyB0aGV5IGdhaW5lZCBhIGZhciBtb3JlIGRpc3Rpbmd1aXNoZWQgcG9zaXRpb24uIEZvciBieSBoYXZpbmcgYmVjb21lIGNoYW1waW9ucyBvZiB0aGUgdHJlYXR5IHByb3Bvc2VkIGJ5IHRoZSBLaW5nIGFuZCBieSBlc3RhYmxpc2hpbmcgdGhlIGluZGVwZW5kZW5jZSBvZiB0aGUgY2l0aWVzIHRoZXkgZ2FpbmVkIGFuIGFkZGl0aW9uYWwgYWxseSBpbiBDb3JpbnRoLCBtYWRlIHRoZSBCb2VvdGlhbiBjaXRpZXMgaW5kZXBlbmRlbnQgb2YgdGhlIFRoZWJhbnMsIGEgdGhpbmcgd2hpY2ggdGhleSBoYWQgbG9uZyBkZXNpcmVkLCBhbmQgYWxzbyBwdXQgYSBzdG9wIHRvIHRoZSBkb2luZ3Mgb2YgdGhlIEFyZ2l2ZXMgaW4gYXBwcm9wcmlhdGluZyBDb3JpbnRoIGFzIHRoZWlyIG93biwgYnkgdGhyZWF0ZW5pbmcgdG8gY2FsbCBvdXQgdGhlIGJhbiBhZ2FpbnN0IHRoZW0gaWYgdGhleSBkaWQgbm90IGRlcGFydCBmcm9tIENvcmludGguCjwvdHJhbnNsYXRpb24+"
translation['5.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TaW5jZSBpbiBhbGwgdGhpcyBtYXR0ZXJzIGhhZCBwcm9jZWVkZWQgYXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODYiPjM4NiBCLkMuPC9kYXRlPjwvbm90ZT4gdGhleSBkZXNpcmVkLCB0aGUgTGFjZWRhZW1vbmlhbnMgcmVzb2x2ZWQsIGluIHRoZSBjYXNlIG9mIGFsbCBhbW9uZyB0aGVpciBhbGxpZXMgd2hvIGhhZCBiZWVuIGhvc3RpbGUgZHVyaW5nIHRoZSB3YXIgYW5kIG1vcmUgZmF2b3VyYWJseSBpbmNsaW5lZCB0b3dhcmQgdGhlIGVuZW15IHRoYW4gdG93YXJkIExhY2VkYWVtb24sIHRvIGNoYXN0aXNlIHRoZW0gYW5kIHB1dCB0aGVtIGluIHN1Y2ggYSBzaXR1YXRpb24gdGhhdCB0aGV5IGNvdWxkIG5vdCBiZSBkaXNsb3lhbC4gRmlyc3RseSwgdGhlcmVmb3JlLCB0aGV5IHNlbnQ8ZGF0ZSBhdXRobmFtZT0iLTM4NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4NiI+Mzg2IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzg2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg2Ij4zODYgQi5DLjwvZGF0ZT48L25vdGU+IHRvIHRoZSBNYW50aW5lYW5zIGFuZCBvcmRlcmVkIHRoZW0gdG8gdGVhciBkb3duIHRoZWlyIHdhbGwsIHNheWluZyB0aGF0IHRoZXkgY291bGQgbm90IHRydXN0IHRoZW0gaW4gYW55IG90aGVyIHdheSBub3QgdG8gdGFrZSBzaWRlcyB3aXRoIHRoZWlyIGVuZW1pZXMuCjxkYXRlIGF1dGhuYW1lPSItMzg2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg2Ij4zODYgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGV5IHNhaWQgdGhleSBoYWQgbm90ZWQgbm90IG9ubHkgdGhhdCB0aGUgTWFudGluZWFucyBoYWQgYmVlbiBzZW5kaW5nIGNvcm4gdG8gdGhlIEFyZ2l2ZXMgd2hlbiB0aGV5IHRoZW1zZWx2ZXMgd2VyZSBtYWtpbmcgd2FyIHVwb24gdGhhdCBwZW9wbGUsIGJ1dCBhbHNvIHRoYXQgc29tZXRpbWVzLCBvbiB0aGUgcHJldGV4dCBvZiBhIGhvbHkgdHJ1Y2UsIHRoZXkgaGFkIG5vdCBzZXJ2ZWQgaW4gdGhlIExhY2VkYWVtb25pYW4gYXJtaWVzIGF0IGFsbCwgYW5kIHdoZW4gdGhleSBoYWQgZmFsbGVuIGludG8gbGluZSwgaGFkIHNlcnZlZCBiYWRseS4gRnVydGhlcm1vcmUsIHRoZSBMYWNlZGFlbW9uaWFucyBzYWlkIHRoZXkgd2VyZSBhd2FyZSB0aGF0IHRoZXkgd2VyZSBlbnZpb3VzIGlmIGFueSBnb29kIGZvcnR1bmUgY2FtZSB0byB0aGVtLCBhbmQgZGVsaWdodGVkIGlmIGFueSBkaXNhc3RlciBiZWZlbCB0aGVtLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gSVYuIHYuIDE4Ljwvbm90ZT4gSXQgd2FzIGFsc28gY29tbW9uIHRhbGsgdGhhdCB0aGUgdGhpcnR5IHllYXJzJyB0cnVjZSwgY29uY2x1ZGVkIGFmdGVyIHRoZSBiYXR0bGUgb2YgTWFudGluZWEsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBJbiA8ZGF0ZSBhdXRobmFtZT0iLTQxOCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxOCI+NDE4IEIuQy48L2RhdGU+PC9ub3RlPiBoYWQgZXhwaXJlZCB0aGlzIHllYXIsIHNvIGZhciBhcyB0aGUgTWFudGluZWFucyB3ZXJlIGNvbmNlcm5lZC4KPGRhdGUgYXV0aG5hbWU9Ii00MTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MTgiPjQxOCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoZW4sIGFjY29yZGluZ2x5LCB0aGV5IG5vdyByZWZ1c2VkIHRvIHRlYXIgZG93biB0aGVpciB3YWxscywgdGhlIExhY2VkYWVtb25pYW5zIGNhbGxlZCBvdXQgdGhlIGJhbiBhZ2FpbnN0IHRoZW0uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBBZ2VzaWxhdXMgcmVxdWVzdGVkIHRoZSBzdGF0ZSB0byByZWxpZXZlIGhpbSBvZiB0aGUgY29tbWFuZCBvZiB0aGlzIGV4cGVkaXRpb24sIHNheWluZyB0aGF0IHRoZSBjaXR5IG9mIHRoZSBNYW50aW5lYW5zIGhhZCByZW5kZXJlZCBoaXMgZmF0aGVyIG1hbnkgc2VydmljZXMgaW4gdGhlIHdhcnMgYWdhaW5zdCBNZXNzZW5lOyBBZ2VzaXBvbGlzLCB0aGVyZWZvcmUsIGxlZCBmb3J0aCB0aGUgYmFuLCBldmVuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzg1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg1Ij4zODUgQi5DLjwvZGF0ZT48L25vdGU+IHRob3VnaCBoaXMgZmF0aGVyLCBQYXVzYW5pYXMsPGRhdGUgYXV0aG5hbWU9Ii0zODUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODUiPjM4NSBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gV2hvIHdhcyBzdGlsbCBsaXZpbmcsIHRob3VnaCBkZXBvc2VkIGFuZCBpbiBleGlsZS5jcC4gSUlJLiB2LiAyNS48L25vdGU+IHdhcyBvbiBleGNlZWRpbmdseSBmcmllbmRseSB0ZXJtcyB3aXRoIHRoZSBsZWFkZXJzIG9mIHRoZSBwb3B1bGFyIHBhcnR5IGluIE1hbnRpbmVhLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIGhlIGhhZCBlbnRlcmVkIE1hbnRpbmVhbiB0ZXJyaXRvcnksIGhlIGZpcnN0IGxhaWQgd2FzdGUgdGhlIGxhbmQ7IGJ1dCBzaW5jZSBldmVuIHRoZW4gdGhleSB3b3VsZCBub3QgdGVhciBkb3duIHRoZSB3YWxscywgaGUgcHJvY2VlZGVkIHRvIGRpZyBhIHRyZW5jaCByb3VuZCBhYm91dCB0aGUgY2l0eSwgd2l0aCBvbmUgaGFsZiBvZiB0aGUgc29sZGllcnMgc2l0dGluZyB1bmRlciBhcm1zIGluIGZyb250IG9mIHRoZSBkaWdnZXJzIHRvIHByb3RlY3QgdGhlbSwgYW5kIHRoZSBvdGhlciBoYWxmIHdvcmtpbmcuIEFuZCBhZnRlciB0aGUgdHJlbmNoIGhhZCBiZWVuIGNvbXBsZXRlZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODUiPjM4NSBCLkMuPC9kYXRlPjwvbm90ZT4gaGUgdGhlbiB3aXRob3V0IHJpc2sgYnVpbHQgYSB3YWxsIHJvdW5kIGFib3V0IHRoZSBjaXR5LiBMZWFybmluZywgaG93ZXZlciwgdGhhdCB0aGUgY29ybiBzdXBwbHkgaW4gdGhlIGNpdHkgd2FzIGFidW5kYW50LCBzaW5jZSB0aGVyZSBoYWQgYmVlbiBhIGdvb2QgaGFydmVzdCB0aGUgcHJldmlvdXMgeWVhciwgYW5kIHRoaW5raW5nIHRoYXQgaXQgd291bGQgYmUgYSBncmlldm91cyB0aGluZyBpZiBpdCBzaG91bGQgcHJvdmUgbmVjZXNzYXJ5IHRvIGJ1cmRlbiBib3RoIGhpcyBzdGF0ZSBhbmQgaXRzIGFsbGllcyBmb3IgYSBsb25nIHBlcmlvZCB3aXRoIGNhbXBhaWducywgaGUgZGFtbWVkIHVwIHRoZSByaXZlciB3aGljaCBmbG93ZWQgdGhyb3VnaCB0aGUgY2l0eTsgYW5kIGl0IHdhcyBhIHZlcnkgbGFyZ2Ugb25lLgo8ZGF0ZSBhdXRobmFtZT0iLTM4NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4NSI+Mzg1IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['5.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkl0cyBvdXRmbG93IGJlaW5nIHRodXMgY2hlY2tlZCwgdGhlIHdhdGVyIHJvc2Ugbm90IG9ubHkgYWJvdmUgdGhlIGZvdW5kYXRpb25zIG9mIHRoZSBob3VzZXMgYnV0IGFib3ZlIHRob3NlIG9mIHRoZSBjaXR5IHdhbGwuIFRoZW4gYXMgdGhlIGxvd2VyIGJyaWNrcyBiZWNhbWUgc29ha2VkIGFuZCBmYWlsZWQgdG8gc3VwcG9ydCB0aG9zZSBhYm92ZSB0aGVtLCB0aGUgd2FsbCBiZWdhbiBmaXJzdCB0byBjcmFjayBhbmQgdGhlbiB0byBnaXZlIHdheS4gQW5kIHRoZSBNYW50aW5lYW5zIGZvciBhIHRpbWUgdHJpZWQgdG8gcHJvcCBpdCB1cCB3aXRoIHRpbWJlcnMsIGFuZCBzb3VnaHQgY29udHJpdmFuY2VzIHRvIHByZXZlbnQgdGhlIHRvd2VyIGZyb20gZmFsbGluZzsgYnV0IHdoZW4gdGhleSB3ZXJlIG5vIGxvbmdlciBhYmxlIHRvIHJlc2lzdCB0aGUgd2F0ZXIsIGJlaW5nIHNlaXplZCB3aXRoIHRoZSBmZWFyIHRoYXQgaWYgYW55IHBvcnRpb24gb2YgdGhlIGVuY2lyY2xpbmcgd2FsbCBmZWxsIHRoZXkgd291bGQgYmVjb21lIHByaXNvbmVycyBvZiB3YXIsIHRoZXkgb2ZmZXJlZCB0byBhZ3JlZSB0byB0ZWFyIGRvd24gdGhlaXIgd2FsbHMuIFRoZSBMYWNlZGFlbW9uaWFucywgaG93ZXZlciwgc2FpZCB0aGF0IHRoZXkgd291bGQgbm90IG1ha2UgcGVhY2Ugd2l0aCB0aGVtIGV4Y2VwdCBvbiBjb25kaXRpb24gdGhhdCB0aGV5IHNob3VsZCBhbHNvIGR3ZWxsIGFwYXJ0IGluIHZpbGxhZ2VzLiBBbmQgdGhleSBmb3IgdGhlaXIgcGFydCwgY29taW5nIHRvIHRoZSBjb25jbHVzaW9uIHRoYXQgaXQgd2FzIG5lY2Vzc2FyeSwgYWdyZWVkIHRoYXQgdGhleSB3b3VsZCBkbyB0aGlzIGFsc28uCjwvdHJhbnNsYXRpb24+"
translation['5.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB0aGUgcGFydGlzYW5zIG9mIEFyZ29zIGFuZCB0aGUgbGVhZGVycyBvZiB0aGUgcG9wdWxhciBwYXJ0eSBleHBlY3RlZCB0aGF0IHRoZXkgd291bGQgYmUgcHV0IHRvIGRlYXRoLCBidXQgdGhlIGZhdGhlciBvZiBBZ2VzaXBvbGlzIG9idGFpbmVkIGZyb20gaGltIHRoZSBwcm9taXNlIHRoYXQgc2FmZXR5IHNob3VsZCBiZSBncmFudGVkIHRoZW0gYXMgdGhleSBkZXBhcnRlZCBmcm9tIHRoZSBjaXR5LCBiZWluZyBzaXh0eSBpbiBudW1iZXIuIFNvIG9uIGJvdGggc2lkZXMgb2YgdGhlIHJvYWQsIGJlZ2lubmluZyBhdCB0aGUgY2l0eSBnYXRlcywgc3Rvb2QgdGhlIExhY2VkYWVtb25pYW5zIHdpdGggdGhlaXIgc3BlYXJzLCB3YXRjaGluZyB0aG9zZSB3aG8gd2VyZSBjb21pbmcgb3V0LiBBbmQgYWx0aG91Z2ggdGhleSBoYXRlZCB0aGVtLCBuZXZlcnRoZWxlc3MgdGhleSBrZXB0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzg1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg1Ij4zODUgQi5DLjwvZGF0ZT48L25vdGU+IHRoZWlyIGhhbmRzIG9mZiB0aGVtIG1vcmUgZWFzaWx5IHRoYW4gZGlkIHRoZSBNYW50aW5lYW5zIGJlbG9uZ2luZyB0byB0aGUgYXJpc3RvY3JhdGljIHBhcnR5LiBMZXQgdGhpcywgdGhlbiwgc3RhbmQgcmVjb3JkZWQgYXMgYSBzdHJpa2luZyBleGFtcGxlIG9mIGdvb2QgZGlzY2lwbGluZS4KPGRhdGUgYXV0aG5hbWU9Ii0zODUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODUiPjM4NSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZSB3YWxsIHdhcyB0b3JuIGRvd24gYW5kIE1hbnRpbmVhIHdhcyBkaXZpZGVkIGludG8gZm91ciBzZXBhcmF0ZSB2aWxsYWdlcywganVzdCBhcyB0aGUgcGVvcGxlIGhhZCBkd2VsdCBpbiBhbmNpZW50IHRpbWVzLiBBbmQgYXQgZmlyc3QgdGhleSB3ZXJlIGRpc3BsZWFzZWQsIGJlY2F1c2UgdGhleSB3ZXJlIGNvbXBlbGxlZCB0byB0ZWFyIGRvd24gdGhlIGhvdXNlcyB3aGljaCB0aGV5IGhhZCBhbmQgdG8gYnVpbGQgb3RoZXJzOyBidXQgdGhlIG93bmVycyBvZiB0aGUgbGFuZGVkIHByb3BlcnR5LCBzaW5jZSB0aGV5IG5vdCBvbmx5IGR3ZWx0IG5lYXJlciB0byB0aGVpciBlc3RhdGVzLCB3aGljaCB3ZXJlIHJvdW5kIGFib3V0IHRoZSB2aWxsYWdlcywgYnV0IGFsc28gZW5qb3llZCBhbiBhcmlzdG9jcmF0aWMgZ292ZXJubWVudCBhbmQgd2VyZSByaWQgb2YgdGhlIHRyb3VibGVzb21lIGRlbWFnb2d1ZXMsIHdlcmUgcGxlYXNlZCB3aXRoIHdoYXQgaGFkIGJlZW4gZG9uZS4gQW5kIHRoZSBMYWNlZGFlbW9uaWFucyBzZW50IG11c3RlcmluZyBvZmZpY2VycyB0byB0aGVtLCBub3Qgc2luZ2x5LCBidXQgb25lIGZvciBlYWNoIHZpbGxhZ2UuIE1vcmVvdmVyLCB0aGV5IGNhbWUgZnJvbSB0aGVpciB2aWxsYWdlcyBmb3Igc2VydmljZSBpbiB0aGUgTGFjZWRhZW1vbmlhbiBhcm15IGZhciBtb3JlIHplYWxvdXNseSB0aGFuIHdoZW4gdGhleSB3ZXJlIHVuZGVyIGEgZGVtb2NyYXRpYyBnb3Zlcm5tZW50LiBUaHVzIGVuZGVkIHRoZSBhZmZhaXIgb2YgdGhlIE1hbnRpbmVhbnMsIHdoZXJlYnkgbWVuIHdlcmUgbWFkZSB3aXNlciBpbiB0aGlzIHBvaW50IGF0IGxlYXN0IOKAlCBub3QgdG8gbGV0IGEgcml2ZXIgcnVuIHRocm91Z2ggY2l0eSB3YWxscy4KPC90cmFuc2xhdGlvbj4="
translation['5.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgbm93IHRoZSBleGlsZXMgZnJvbSBQaGxpdXMsIGFzIHRoZXkgb2JzZXJ2ZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODQiPjM4NCBCLkMuPC9kYXRlPjwvbm90ZT4gdGhhdCB0aGUgTGFjZWRhZW1vbmlhbnMgd2VyZSBpbnZlc3RpZ2F0aW5nIHRvIHNlZSB3aGF0IHNvcnQgb2YgZnJpZW5kcyB0aGVpciBzZXZlcmFsIGFsbGllcyBoYWQgcHJvdmVkIHRvIGJlIHRvIHRoZW0gZHVyaW5nIHRoZSB3YXIsIHRoaW5raW5nIHRoYXQgaXQgd2FzIGFuIG9wcG9ydHVuZSB0aW1lLCBwcm9jZWVkZWQgdG8gTGFjZWRhZW1vbiBhbmQgc2V0IGZvcnRoIHRoYXQgc28gbG9uZyBhcyB0aGV5IHdlcmUgYXQgaG9tZSBpbiBQaGxpdXMsIHRoZSBjaXR5IGhhZCByZWNlaXZlZCB0aGUgTGFjZWRhZW1vbmlhbnMgd2l0aGluIGl0cyB3YWxscywgYW5kIGl0cyBwZW9wbGUgaGFkIGdvbmUgd2l0aCB0aGVtIG9uIHRoZWlyIGNhbXBhaWducyB3aGVyZXZlciB0aGV5IGxlZCB0aGUgd2F5OyBidXQgdGhhdCBhZnRlciB0aGUgUGhsaWFzaWFucyBoYWQgZHJpdmVuIHRoZW0gaW50byBleGlsZSwgdGhleSBoYWQgZGVjbGluZWQgdG8gZm9sbG93IGFueXdoZXJlLCBhbmQgaGFkIHJlZnVzZWQgdG8gcmVjZWl2ZSB0aGUgTGFjZWRhZW1vbmlhbnMg4oCUIGFuZCB0aGVtIGFsb25lIG9mIGFsbDxkYXRlIGF1dGhuYW1lPSItMzg0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg0Ij4zODQgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODQiPjM4NCBCLkMuPC9kYXRlPjwvbm90ZT4gbWVuIOKAlCB3aXRoaW4gdGhlaXIgZ2F0ZXMuCjxkYXRlIGF1dGhuYW1lPSItMzg0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzg0Ij4zODQgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlIGVwaG9ycyBoZWFyZCB0aGVzZSB0aGluZ3MsIHRoZXkgZGVjaWRlZCB0aGF0IHRoZSBtYXR0ZXIgZGVzZXJ2ZWQgYXR0ZW50aW9uLiBBY2NvcmRpbmdseSB0aGV5IHNlbnQgdG8gdGhlIGNpdHkgb2YgdGhlIFBobGlhc2lhbnMgYW5kIHNhaWQgdGhhdCB0aGUgZXhpbGVzIHdlcmUgZnJpZW5kcyBvZiB0aGUgTGFjZWRhZW1vbmlhbiBzdGF0ZSBhbmQgaGFkIGJlZW4gZXhpbGVkIGZvciBubyB3cm9uZy1kb2luZy4gVGhleSBzYWlkIGZ1cnRoZXIgdGhhdCB0aGV5IGRlZW1lZCBpdCBwcm9wZXIgdG8gZWZmZWN0IHRoZWlyIHJldHVybiBmcm9tIGJhbmlzaG1lbnQsIG5vdCBieSBjb21wdWxzaW9uLCBidXQgYnkgdm9sdW50YXJ5IGNvbnNlbnQgb2YgdGhlIFBobGlhc2lhbnMuIFVwb24gaGVhcmluZyB0aGlzIHRoZSBQaGxpYXNpYW5zIGNvbmNlaXZlZCB0aGUgZmVhciB0aGF0IGlmIHRoZSBMYWNlZGFlbW9uaWFucyBtYWRlIGFuIGV4cGVkaXRpb24gYWdhaW5zdCB0aGVtLCBzb21lIG9mIHRoZSBwZW9wbGUgd2l0aGluIHRoZSB3YWxscyB3b3VsZCBsZXQgdGhlbSBpbnRvIHRoZSBjaXR5LiBGb3Igbm90IG9ubHkgd2VyZSB0aGVyZSBtYW55IGtpbnNtZW4gb2YgdGhlIGV4aWxlcyBpbiB0aGUgY2l0eSwgYW5kIHBlb3BsZSB3aG8gd2VyZSBmcmllbmRseSB0byB0aGVtIGZvciBvdGhlciByZWFzb25zLCBidXQgYWxzbywgYXMgaXMgaW5kZWVkIHVzdWFsIGluIG1vc3QgY2l0aWVzLCBzb21lIGRlc2lyZWQgYSBjaGFuZ2Ugb2YgZ292ZXJubWVudCBhbmQgdGhlcmVmb3JlIHdhbnRlZCB0byBicmluZyBiYWNrIHRoZSBleGlsZXMuCjwvdHJhbnNsYXRpb24+"
translation['5.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5PbiBhY2NvdW50LCB0aGVuLCBvZiBzdWNoIGZlYXJzLCB0aGUgUGhsaWFzaWFucyB2b3RlZCB0byB0YWtlIGJhY2sgdGhlIGV4aWxlcyBhbmQgdG8gcmVzdG9yZSB0byB0aGVtIHRoZWlyIHVuZGlzcHV0ZWQgcHJvcGVydHksIHRob3NlIHdobyBoYWQgcHVyY2hhc2VkIHN1Y2ggcHJvcGVydHkgdG8gcmVjb3ZlciB0aGUgcHJpY2Ugb2YgaXQgZnJvbSB0aGUgcHVibGljIHRyZWFzdXJ5OyBhbmQgaWYgYW55IGRpc3B1dGUgc2hvdWxkIGFyaXNlIGluIGFueSBjYXNlIGJldHdlZW4gdGhlc2UgcHVyY2hhc2VycyBhbmQgdGhlIGV4aWxlcywgaXQgd2FzIHRvIGJlIHNldHRsZWQgYnkgbGVnYWwgcHJvY2Vzcy4gVGh1cyBlbmRlZCwgaW4gaXRzIHR1cm4sIHRoaXMgaW5jaWRlbnQgb2YgdGhlIFBobGlhc2lhbiBleGlsZXMgYXQgdGhhdCB0aW1lLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiB0aGVyZSBjYW1lIGFtYmFzc2Fkb3JzIHRvIExhY2VkYWVtb24gZnJvbTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4MyI+MzgzIEIuQy48L2RhdGU+PC9ub3RlPiBBY2FudGh1cyBhbmQgQXBvbGxvbmlhLCB3aGljaCBhcmUgdGhlIGxhcmdlc3Qgb2YgdGhlIGNpdGllcyBpbiB0aGUgbmVpZ2hib3VyaG9vZCBvZiBPbHludGh1cy4gQW5kIHdoZW4gdGhlIGVwaG9ycyBoZWFyZCB3aXRoIHdoYXQgb2JqZWN0IHRoZXkgaGFkIGNvbWUsIHRoZXkgYnJvdWdodCB0aGVtIGJlZm9yZSB0aGUgTGFjZWRhZW1vbmlhbiBhc3NlbWJseSBhbmQgdGhlIGFsbGllcy4KPGRhdGUgYXV0aG5hbWU9Ii0zODMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODMiPjM4MyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gQ2xlaWdlbmVzIG9mIEFjYW50aHVzIHNwb2tlIGFzIGZvbGxvd3M6IOKAnE1lbiBvZiBMYWNlZGFlbW9uIGFuZCBvZiB0aGUgYWxsaWVkIHN0YXRlcywgd2UgdGhpbmsgeW91IGFyZSB1bmF3YXJlIHRoYXQgYSBncmVhdCBkYW5nZXIgaXMgc3ByaW5naW5nIHVwIGluIEdyZWVjZS4gVG8gYmUgc3VyZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODMiPjM4MyBCLkMuPC9kYXRlPjwvbm90ZT4gYWxtb3N0IGFsbCBvZiB5b3Uga25vdyB0aGF0IE9seW50aHVzIGlzIHRoZSBsYXJnZXN0IG9mIHRoZSBjaXRpZXMgb24gdGhlIGNvYXN0IG9mIFRocmFjZS4gVGhlc2UgT2x5bnRoaWFucywgaW4gdGhlIGZpcnN0IHBsYWNlLCBhdHRhY2hlZCB0byB0aGVtc2VsdmVzIHNvbWUgb2YgdGhlIGNpdGllcyB3aXRoIHRoZSBwcm92aXNpb24gdGhhdCBhbGwgc2hvdWxkIGxpdmUgdW5kZXIgdGhlIHNhbWUgbGF3cyBhbmQgYmUgZmVsbG93LWNpdGl6ZW5zLCBhbmQgdGhlbiB0aGV5IHRvb2sgb3ZlciBzb21lIG9mIHRoZSBsYXJnZXIgY2l0aWVzIGFsc28uIEFmdGVyIHRoaXMgdGhleSB1bmRlcnRvb2ssIGZ1cnRoZXIsIHRvIGZyZWUgdGhlIGNpdGllcyBvZiBNYWNlZG9uaWEgZnJvbSBBbXludGFzLCBraW5nIG9mIHRoZSBNYWNlZG9uaWFucy4KPGRhdGUgYXV0aG5hbWU9Ii0zODMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODMiPjM4MyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGUgbmVhcmVzdCBvZiB0aGVtIGdhdmUgdGhlaXIgYWxsZWdpYW5jZSwgdGhleSBzcGVlZGlseSBwcm9jZWVkZWQgYWdhaW5zdCB0aG9zZSB3aGljaCB3ZXJlIGZhcnRoZXIgYXdheSBhbmQgbGFyZ2VyOyBhbmQgd2UgbGVmdCB0aGVtIGFscmVhZHkgaW4gcG9zc2Vzc2lvbiBvZiBhIGdyZWF0IG51bWJlciBvZiBNYWNlZG9uaWFuIGNpdGllcywgaW5jbHVkaW5nIGVzcGVjaWFsbHkgUGVsbGEsIHdoaWNoIGlzIHRoZSBsYXJnZXN0IG9mIHRoZSBjaXRpZXMgaW4gTWFjZWRvbmlhLiBXZSBhbHNvIGhhZCBpbmZvcm1hdGlvbiB0aGF0IEFteW50YXMgd2FzIHdpdGhkcmF3aW5nIGZyb20gaGlzIGNpdGllcyBhbmQgaGFkIGFscmVhZHkgYmVlbiBhbGwgYnV0IGRyaXZlbiBvdXQgb2YgYWxsIE1hY2Vkb25pYS4gVGhlIE9seW50aGlhbnMsIGZ1cnRoZXJtb3JlLCBzZW50IHRvIHVzIGFuZCB0byB0aGUgQXBvbGxvbmlhbnMgYW5kIGFubm91bmNlZCB0byB1cyB0aGF0IGlmIHdlIGRpZCBub3QgcHJlc2VudCBvdXJzZWx2ZXMgdG8gam9pbiB0aGVtIGluIHRoZWlyIGNhbXBhaWducywgdGhleSB3b3VsZCBjb21lIGFnYWluc3QgdXMuCjwvdHJhbnNsYXRpb24+"
translation['5.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQXMgZm9yIG91cnNlbHZlcywgaG93ZXZlciwgbWVuIG9mIExhY2VkYWVtb24sIHdlIGRlc2lyZSB0byBsaXZlIHVuZGVyIHRoZSBsYXdzIG9mIG91ciBmYXRoZXJzIGFuZCB0byBiZSBjaXRpemVucyBvZiBvdXIgb3duIGNpdHk7IGJ1dCB1bmxlc3Mgc29tZSBvbmUgc2hhbGwgY29tZSB0byBvdXIgYWlkLCBpdCB3aWxsIGJlIG5lY2Vzc2FyeSBmb3IgdXMgYWxzbyB0byBiZSB1bml0ZWQgd2l0aCB0aGVtLiBBbmQgeWV0IGF0IHRoaXMgbW9tZW50IHRoZXkgYWxyZWFkeSBoYXZlIG5vdCBsZXNzIHRoYW4gZWlnaHQgaHVuZHJlZCBob3BsaXRlcyBhbmQgZmFyIG1vcmUgdGhhbiB0aGF0IG51bWJlciBvZiBwZWx0YXN0czsgd2hpbGUgYXMgZm9yIGhvcnNlbWVuLCBpZiB3ZSBhbHNvIGJlY29tZSB1bml0ZWQgd2l0aCB0aGVtLCB0aGV5IHdpbGwgaGF2ZSBtb3JlIHRoYW4gb25lIHRob3VzYW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5BZ2Fpbiwgd2UgbGVmdCBhbWJhc3NhZG9ycyBib3RoIG9mIHRoZSBBdGhlbmlhbnMgYW5kIG9mIHRoZSBCb2VvdGlhbnMgYWxyZWFkeSB0aGVyZS4gQW5kIHdlIGhlYXJkIHJlcG9ydHMgdGhhdCB0aGUgT2x5bnRoaWFucyBvbiB0aGVpciBzaWRlIGhhZCB2b3RlZCB0byBzZW5kIGFtYmFzc2Fkb3JzIHdpdGggdGhlbSB0byB0aGVzZSBzdGF0ZXMgaW4gcmVnYXJkIHRvIHRoZSBtYXR0ZXIgb2YgYW4gYWxsaWFuY2UuIE5vdyBpZiBzbyBncmVhdCBhIHBvd2VyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzgzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgzIj4zODMgQi5DLjwvZGF0ZT48L25vdGU+IGlzIHRvIGJlIGFkZGVkIHRvIHRoZSBwcmVzZW50IHN0cmVuZ3RoIG9mIHRoZSBBdGhlbmlhbnMgYW5kIFRoZWJhbnMsIHRha2UgY2FyZSzigJ0gaGUgc2FpZCwg4oCcbGVzdCB5b3UgZmluZCB0aGF0IHNpdHVhdGlvbiBubyBsb25nZXIgZWFzeSB0byBoYW5kbGUuIEZ1cnRoZXJtb3JlLCBzaW5jZSB0aGUgT2x5bnRoaWFucyBhcmUgaW4gcG9zc2Vzc2lvbiBvZiBQb3RpZGFlYSwgd2hpY2ggaXMgb24gdGhlIGlzdGhtdXMgb2YgUGFsbGVuZSwgYmUgc3VyZSB0aGF0IHRoZSBjaXRpZXMgaW5jbHVkZWQgd2l0aGluIFBhbGxlbmUgd2lsbCBhbHNvIGJlIHN1YmplY3QgdG8gdGhlbS4gQW5kIGxldCB0aGlzIGZhY3QgYWxzbyBiZSBhIGZ1cnRoZXIgZXZpZGVuY2UgdG8geW91IHRoYXQgdGhlc2UgY2l0aWVzIGhhdmUgY29tZSB0byBmZWFyIHRoZSBPbHludGhpYW5zIG1pZ2h0aWx5IOKAlCB0aGF0IGFsdGhvdWdoIHRoZXkgZmVlbCB0aGUgdXRtb3N0IGhhdHJlZCB0b3dhcmQgdGhlIE9seW50aGlhbnMsIG5ldmVydGhlbGVzcyB0aGV5IGRpZCBub3QgZGFyZSB0byBzZW5kIGFtYmFzc2Fkb3JzIHdpdGggdXMgdG8gc2V0IGZvcnRoIHRoZXNlIHRoaW5ncy4KPGRhdGUgYXV0aG5hbWU9Ii0zODMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODMiPjM4MyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5Zb3Ugc2hvdWxkIGNvbnNpZGVyIHRoaXMgcXVlc3Rpb24gYWxzbywgaG93IHlvdSBjYW4gY29uc2lzdGVudGx5LCBhZnRlciBoYXZpbmcgdGFrZW4gY2FyZSBpbiB0aGUgY2FzZSBvZiBCb2VvdGlhIHRvIHByZXZlbnQgaXRzIGJlaW5nIHVuaXRlZCwgbmV2ZXJ0aGVsZXNzIGRpc3JlZ2FyZCB0aGUgZ2F0aGVyaW5nIG9mIGEgbXVjaCBncmVhdGVyIHBvd2VyLCBhbmQgd2hhdCBpcyBtb3JlLCBhIHBvd2VyIHdoaWNoIGlzIGJlY29taW5nIHN0cm9uZyBub3QgYnkgbGFuZCBvbmx5LCBidXQgYWxzbyBieSBzZWEuIEZvciB3aGF0IGluZGVlZCBpcyB0aGVyZSB0byBoaW5kZXIgc3VjaCBleHBhbnNpb24sIHNlZWluZyB0aGF0IHRoZSBjb3VudHJ5IGl0c2VsZiBwb3NzZXNzZXMgc2hpcC10aW1iZXIgYW5kIGhhcyByZXZlbnVlcyBmcm9tIG1hbnkgcG9ydHMgYW5kIG1hbnkgdHJhZGluZy1wbGFjZXMsIGFuZCBsaWtld2lzZSBhbiBhYnVuZGFudCBwb3B1bGF0aW9uIG9uIGFjY291bnQgb2YgdGhlIGFidW5kYW5jZSBvZiBmb29kPwo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZnVydGhlciwgbWFyayB5b3UsIHRoZXkgaGF2ZSBmb3IgbmVpZ2hib3VycyB0aG9zZSBUaHJhY2lhbnMgd2hvIGFyZSB1bmRlciBubyBraW5nLiBUaGV5IGV2ZW4gbm93IGFyZSBwYXlpbmcgY291cnQgdG8gdGhlIE9seW50aGlhbnM7IGFuZCBpZiB0aGV5IHNob3VsZCBjb21lIHVuZGVyIHRoZWlyIHN3YXksIHRoaXMgYWxzbyB3b3VsZCBiZSBhIGdyZWF0IHBvd2VyIGFkZGVkIHRvIHRoZSBPbHludGhpYW5zLiBUaGVuLCBpZiB0aGUgVGhyYWNpYW5zIHdlcmUgdGhlaXIgZm9sbG93ZXJzLCBzdHJhaWdodHdheSB0aGUgZ29sZCBtaW5lcyBvZiBNb3VudCBQYW5nYWV1bSBhbHNvIHdvdWxkIGJlY2tvbiB0byB0aGVtLiBBbmQgdGhlcmUgaXMgbm90IG9uZSBvZiB0aGVzZSB0aGluZ3Mgd2hpY2ggd2Ugc2F5IHdoaWNoIGlzIG5vdCBhbHNvIHNhaWQgdGhvdXNhbmRzIG9mIHRpbWVzIGFtb25nIHRoZSBwZW9wbGUgb2YgT2x5bnRodXMuCjwvdHJhbnNsYXRpb24+"
translation['5.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlaXIgcHJpZGUsIGhvdyBjb3VsZCBvbmUgZGVzY3JpYmUgaXQ/IEZvciB0aGUgZGVpdHksIHBlcmhhcHMsIGhhcyBzbyBvcmRlcmVkIGl0IHRoYXQgbWVuJ3MgcHJpZGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODMiPjM4MyBCLkMuPC9kYXRlPjwvbm90ZT4gc2hvdWxkIGluY3JlYXNlIHdpdGggdGhlaXIgcG93ZXIuPGRhdGUgYXV0aG5hbWU9Ii0zODMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODMiPjM4MyBCLkMuPC9kYXRlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZSwgdGhlbiwgbWVuIG9mIExhY2VkYWVtb24gYW5kIG9mIHRoZSBhbGxpZWQgc3RhdGVzLCByZXBvcnQgdGhhdCBzdWNoIGFyZSB0aGUgY29uZGl0aW9ucyB0aGVyZTsgaXQgaXMgZm9yIHlvdSB0byBkZWxpYmVyYXRlIGFzIHRvIHdoZXRoZXIgdGhleSBzZWVtIHRvIGRlc2VydmUgYXR0ZW50aW9uLiBCdXQgeW91IG11c3QgdW5kZXJzdGFuZCB0aGlzIGFsc28sIHRoYXQgdGhlIHBvd2VyIHdoaWNoIHdlIGhhdmUgZGVzY3JpYmVkIGFzIGdyZWF0IGlzIG5vdCB5ZXQgaGFyZCB0byB3cmVzdGxlIHdpdGguIEZvciBzdWNoIG9mIHRoZSBjaXRpZXMgYXMgc2hhcmUgaW4gdGhlIGNpdGl6ZW5zaGlwIG9mIE9seW50aHVzIHVud2lsbGluZ2x5LCB0aGVzZSwgSSBzYXksIHdpbGwgcXVpY2tseSBmYWxsIGF3YXkgaWYgdGhleSBzZWUgYW55IG9wcG9zaW5nIGZvcmNlIHByZXNlbnRpbmcgaXRzZWxmOwo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5pZiwgaG93ZXZlciwgdGhleSBvbmNlIGJlY29tZSBjbG9zZWx5IGNvbm5lY3RlZCBieSByZWNpcHJvY2FsIHJpZ2h0cyBvZiBpbnRlcm1hcnJpYWdlIGFuZCBvZiBwcm9wZXJ0eSwgd2hpY2ggaGF2ZSBhbHJlYWR5IGJlZW4gdm90ZWQsIGFuZCBmaW5kIHRoYXQgaXQgaXMgcHJvZml0YWJsZSB0byBiZSBvbiB0aGUgc2lkZSBvZiB0aGUgY29ucXVlcm9yIOKAlCBldmVuIGFzIHRoZSBBcmNhZGlhbnMgd2hlbiB0aGV5IGdvIHdpdGggeW91IGtlZXAgdGhlaXIgb3duIHBvc3Nlc3Npb25zIHNhZmUgYW5kIHBsdW5kZXIgdGhvc2Ugb2Ygb3RoZXJzIOKAlCB0aGVuLCBpdCBtYXkgYmUsIHRoaXMgY29uZmVkZXJhY3kgd2lsbCBubyBsb25nZXIgYmUgc28gZWFzeSB0byBicmVhayB1cC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['5.2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGVzZSB0aGluZ3MgaGFkIGJlZW4gc2FpZCwgdGhlIExhY2VkYWVtb25pYW5zIGdhdmUgdGhlaXIgYWxsaWVzIHBlcm1pc3Npb24gdG8gc3BlYWsgYW5kIGJhZGUgdGhlbSBhZHZpc2Ugd2hhdGV2ZXIgY291cnNlIGFueW9uZSBvZiB0aGVtIGRlZW1lZCBiZXN0IGJvdGggZm9yIFBlbG9wb25uZXN1cyBhbmQgZm9yIHRoZSBhbGxpZXMuIFRoZXJldXBvbiBtYW55LCBlc3BlY2lhbGx5IHRob3NlIHdobyBkZXNpcmVkIHRvIGdyYXRpZnkgdGhlIExhY2VkYWVtb25pYW5zLCBhZHZvY2F0ZWQgcmFpc2luZyBhbiBhcm15LCBhbmQgaXQgd2FzIGRlY2lkZWQgdGhhdCBlYWNoIHN0YXRlIHNob3VsZCBzZW5kIGl0cyBwcm9wb3J0aW9uYXRlIGNvbnRpbmdlbnQgZm9yIGFuIGFybXkgb2YgdGVuIHRob3VzYW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5Qcm9wb3NhbHMgd2VyZSBhbHNvIG1hZGUgdGhhdCBhbnkgc3RhdGUgd2hpY2ggc28gZGVzaXJlZCBzaG91bGQgYmUgYWxsb3dlZCB0byBnaXZlIG1vbmV5IGluc3RlYWQgb2YgbWVuLCB0aHJlZSBBZWdpbmV0YW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFRoZSBBZWdpbmV0YW4gb2JvbCB3YXMgd29ydGggbmVhcmx5IGhhbGYgYXMgbXVjaCBhZ2FpbiBhcyB0aGUgQXR0aWM7Y3AuIEkuIHYuIDUuPC9ub3RlPiBvYm9scyBwZXIgZGF5IGZvciBlYWNoIG1hbiwgd2hpbGUgaWYgYW55IHN0YXRlIG5vcm1hbGx5IGZ1cm5pc2hlZCBob3JzZW1lbiwgcGF5IGVxdWFsIHRvIHRoYXQgb2YgZm91ciBob3BsaXRlcyBzaG91bGQgYmUgZ2l2ZW4gZm9yIGVhY2ggaG9yc2VtYW47CjwvdHJhbnNsYXRpb24+"
translation['5.2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgaWYgYW55IG9uZSBvZiB0aGUgc3RhdGVzIHNob3VsZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4MyI+MzgzIEIuQy48L2RhdGU+PC9ub3RlPiBmYWlsIHRvIHNlbmQgaXRzIGNvbnRpbmdlbnQgdG8gdGhlIGFybXksIHRoZSBMYWNlZGFlbW9uaWFucyB3ZXJlIHRvIGJlIHBlcm1pdHRlZCB0byBmaW5lIHN1Y2ggc3RhdGUgYSBzdGF0ZXI8ZGF0ZSBhdXRobmFtZT0iLTM4MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4MyI+MzgzIEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBpLmUuLCB0d28gZHJhY2htYXMuPC9ub3RlPiBwZXIgZGF5IGZvciBlYWNoIG1hbi4KPC90cmFuc2xhdGlvbj4="
translation['5.2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXNlIHRoaW5ncyBoYWQgYmVlbiBkZWNpZGVkIHVwb24sIHRoZSBBY2FudGhpYW5zIHJvc2UgYWdhaW4gYW5kIGRlY2xhcmVkIHRoYXQgd2hpbGUgdGhlc2UgbWVhc3VyZXMgd2VyZSBleGNlbGxlbnQsIGl0IG5ldmVydGhlbGVzcyB3YXMgbm90IHBvc3NpYmxlIGZvciB0aGVtIHRvIGJlIHNwZWVkaWx5IGNhcnJpZWQgb3V0LiBUaGV5IHNhaWQgaXQgd2FzIGJldHRlciwgdGhlcmVmb3JlLCB0aGF0IHdoaWxlIHRoaXMgZXhwZWRpdGlvbiB3YXMgZ2F0aGVyaW5nLCBhIGNvbW1hbmRlciBzaG91bGQgc2V0IG91dCB3aXRoIGFsbCBwb3NzaWJsZSBzcGVlZCB3aXRoIGEgZm9yY2UgZnJvbSBMYWNlZGFlbW9uLCBvZiBzdWNoIHNpemUgYXMgY291bGQgdGFrZSB0aGUgZmllbGQgcXVpY2tseSwgYW5kIGxpa2V3aXNlIGZyb20gdGhlIG90aGVyIHN0YXRlczsgZm9yIGlmIHRoaXMgd2VyZSBkb25lLCB0aGUgY2l0aWVzIHdoaWNoIGhhZCBub3QgeWV0IGdvbmUgb3ZlciB0byB0aGUgT2x5bnRoaWFucyB3b3VsZCB0YWtlIG5vIHN0ZXAgaW4gdGhhdCBkaXJlY3Rpb24sIGFuZCB0aG9zZSB3aGljaCBoYWQgYmVlbiBjb2VyY2VkIHdvdWxkIGJlIGxlc3MgbGlrZWx5IHRvIGNvbnRpbnVlIGluIGFsbGlhbmNlIHdpdGggdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['5.2.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGlzIHBsYW4gYWxzbyB3YXMgYWRvcHRlZCwgYW5kIHRoZSBMYWNlZGFlbW9uaWFucyBzZW50IG91dCBFdWRhbWlkYXMsIGFuZCB3aXRoIGhpbSBlbWFuY2lwYXRlZCBIZWxvdHMgYW5kIG1lbiBvZiB0aGUgUGVyaW9lY2kgYW5kIHRoZSBTY2lyaXRhbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IEEgcGVvcGxlIHdobyBsaXZlZCBvbiB0aGUgbm9ydGhlcm4gZnJvbnRpZXIgb2YgTGFjb25pYS48L25vdGU+IHRvIHRoZSB0b3RhbCBudW1iZXIgb2YgYWJvdXQgdHdvIHRob3VzYW5kLiBOb3cgRXVkYW1pZGFzIG9uIHNldHRpbmcgb3V0IHJlcXVlc3RlZCB0aGUgZXBob3JzIHRvIGFsbG93IFBob2ViaWRhcywgaGlzIGJyb3RoZXIsIHRvIGdhdGhlciB0b2dldGhlciBhbGwgdGhlIHRyb29wcyBhc3NpZ25lZCB0byBoaW0gd2hpY2ggd2VyZSBsZWZ0IGJlaGluZCBhbmQgdG8gZm9sbG93IGFmdGVyIGhpbTsgYXMgZm9yIGhpbXNlbGYsIHdoZW4gaGUgcmVhY2hlZCB0aGUgcmVnaW9uIG9mIHRoZSBUaHJhY2lhbiBjb2FzdCwgaGUgc2VudCBnYXJyaXNvbnMgdG8gc3VjaCBvZiB0aGUgY2l0aWVzIGFzIGRlc2lyZWQgdGhlbSwgZ2FpbmVkIHBvc3Nlc3Npb24gb2YgUG90aWRhZWEsIHdoaWNoIGNhbWUgb3ZlciB2b2x1bnRhcmlseSwgYWx0aG91Z2ggaXQgd2FzIGFscmVhZHkgYW4gYWxseSBvZiB0aGUgT2x5bnRoaWFucywgYW5kIG1ha2luZyB0aGF0IGNpdHkgaGlzIGJhc2Ugb2Ygb3BlcmF0aW9ucywgY2FycmllZCBvbiB3YXIgaW4gdGhlIHdheSBvbmUgbmF0dXJhbGx5IHdvdWxkIHdobyBoYWQgYW4gaW5mZXJpb3IgZm9yY2UuCjwvdHJhbnNsYXRpb24+"
translation['5.2.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBQaG9lYmlkYXMsIGFmdGVyIGhlIGhhZCBnYXRoZXJlZCB0b2dldGhlciB0aGUgcmVtYWluaW5nIHBvcnRpb24gb2YgRXVkYW1pZGFzJyB0cm9vcHMsIHRvb2sgdGhlbSB1bmRlciBoaXMgY29tbWFuZCBhbmQgYmVnYW4gaGlzIG1hcmNoLiBBbmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODMiPjM4MyBCLkMuPC9kYXRlPjwvbm90ZT4gd2hlbiB0aGV5IGFycml2ZWQgaW4gdGhlIGRpc3RyaWN0IG9mIFRoZWJlcywgdGhleSBlbmNhbXBlZCBvdXRzaWRlIHRoZSBjaXR5LCBuZWFyIHRoZSBneW1uYXNpdW0uIE5vdyBzaW5jZSB0aGUgVGhlYmFucyB3ZXJlIGRpdmlkZWQgYnkgZmFjdGlvbnMsIGl0IGNoYW5jZWQgdGhhdCBJc21lbmlhcyBhbmQgTGVvbnRpYWRlcywgd2hvIHdlcmUgcG9sZW1hcmNoczxkYXRlIGF1dGhuYW1lPSItMzgzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgzIj4zODMgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFRoZSBwb2xlbWFyY2hzIHdlcmUgdGhlIGNoaWVmIG9mZmljaWFscyBvZiBUaGViZXMuPC9ub3RlPiwgd2VyZSBhdCB2YXJpYW5jZSB3aXRoIG9uZSBhbm90aGVyLCBhbmQgYm90aCBvZiB0aGVtIGxlYWRlcnMgb2YgdGhlaXIgcmVzcGVjdGl2ZSBwb2xpdGljYWwgY2x1YnMuIEhlbmNlIElzbWVuaWFzLCBvbiBhY2NvdW50IG9mIGhpcyBoYXRyZWQgZm9yIHRoZSBMYWNlZGFlbW9uaWFucywgZGlkIG5vdCBldmVuIGdvIG5lYXIgUGhvZWJpZGFzLiBMZW9udGlhZGVzLCBob3dldmVyLCBub3Qgb25seSBwYWlkIGNvdXJ0IHRvIGhpbSBpbiB2YXJpb3VzIHdheXMsIGJ1dCB3aGVuIGhlIGhhZCBiZWNvbWUgaW50aW1hdGUgd2l0aCBoaW0sIHNwb2tlIHRvIGhpbSBhcyBmb2xsb3dzOgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz7igJxQaG9lYmlkYXMsIGl0IGlzIHdpdGhpbiB5b3VyIHBvd2VyIHRoaXMgZGF5IHRvIHJlbmRlciB0aGUgZ3JlYXRlc3Qgc2VydmljZSB0byB5b3VyIGZhdGhlcmxhbmQ7IGZvciBpZiB5b3Ugd2lsbCBmb2xsb3cgbWUgd2l0aCB5b3VyIGhvcGxpdGVzLCBJIHdpbGwgbGVhZCB5b3UgaW50byB0aGUgQWNyb3BvbGlzLiBBbmQgdGhpcyBvbmNlIGFjY29tcGxpc2hlZCwgYmUgc3VyZSB0aGF0IFRoZWJlcyB3aWxsIGJlIGNvbXBsZXRlbHkgdW5kZXIgdGhlIGNvbnRyb2wgb2YgdGhlIExhY2VkYWVtb25pYW5zIGFuZCBvZiB1cyB3aG8gYXJlIHlvdXIgZnJpZW5kczsKPC90cmFuc2xhdGlvbj4="
translation['5.2.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz53aGVyZWFzIG5vdywgYXMgeW91IHNlZSwgcHJvY2xhbWF0aW9uIGhhcyBiZWVuIG1hZGUgZm9yYmlkZGluZyBhbnkgVGhlYmFuIGZyb20gc2VydmluZyB3aXRoIHlvdSBhZ2FpbnN0IHRoZSBPbHludGhpYW5zLiBCdXQgaWYgeW91IGpvaW4gd2l0aCB1cyBhbmQgYWNjb21wbGlzaCB0aGlzIGRlZWQsIHdlIHdpbGwgYXQgb25jZSBzZW5kIHdpdGggeW91IG1hbnkgaG9wbGl0ZXMgYW5kIG1hbnkgaG9yc2VtZW47IHNvIHRoYXQgeW91IHdpbGwgZ28gdG8gdGhlIGFpZCBvZiB5b3VyIGJyb3RoZXIgd2l0aCBhIGxhcmdlIGZvcmNlLCBhbmQgd2hpbGUgaGUgaXMgZ2V0dGluZyByZWFkeSB0byBzdWJkdWUgT2x5bnRodXMsIHlvdSB3aWxsIGFscmVhZHkgaGF2ZSBzdWJkdWVkIFRoZWJlcywgYSBmYXIgZ3JlYXRlciBzdGF0ZSB0aGFuIE9seW50aHVzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIFBob2ViaWRhcyBoZWFyZCB0aGlzLCBoZSB3YXMgZmlsbGVkIHdpdGggYm91eWFudCBob3BlczsgZm9yIGhlIHdhcyBhIG1hbiB3aXRoIGEgZmFyIGdyZWF0ZXIgcGFzc2lvbiBmb3IgcGVyZm9ybWluZyBzb21lIGJyaWxsaWFudCBhY2hpZXZlbWVudCB0aGFuIGZvciBsaWZlIGl0c2VsZiwgYWx0aG91Z2gsIG9uIHRoZSBvdGhlciBoYW5kLCBoZSB3YXMgbm90IHJlZ2FyZGVkIGFzIG9uZSB3aG8gd2VpZ2hlZCBoaXMgYWN0cyBvciBoYWQgbXVjaCBwcmFjdGljYWwgd2lzZG9tLiBBbmQgd2hlbiBoZSBoYWQgYWdyZWVkIHRvIHRoZSBwbGFuLCBMZW9udGlhZGVzIGRpcmVjdGVkIGhpbSB0byBzZXQgb3V0IG9uIGhpcyB3YXksIHByZXBhcmVkIGFzIGhlIHdhcyB0byBkZXBhcnQgZnJvbSBUaGViZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzgzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgzIj4zODMgQi5DLjwvZGF0ZT48L25vdGU+IOKAnEFuZCB3aGVuIHRoZSBwcm9wZXIgdGltZSBhcnJpdmVzLOKAnSBzYWlkIExlb250aWFkZXMsIOKAnEkgd2lsbCByZXR1cm4gdG8geW91IGFuZCBhY3QgYXMgeW91ciBndWlkZSBteXNlbGYu4oCdCjxkYXRlIGF1dGhuYW1lPSItMzgzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgzIj4zODMgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.2.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSwgd2hpbGUgdGhlIHNlbmF0ZSB3YXMgaW4gc2Vzc2lvbiBpbiB0aGUgcG9ydGljbyBpbiB0aGUgbWFya2V0LXBsYWNlLCBmb3IgdGhlIHJlYXNvbiB0aGF0IHRoZSB3b21lbiB3ZXJlIGNlbGVicmF0aW5nIHRoZSBmZXN0aXZhbCBvZiB0aGUgVGhlc21vcGhvcmlhIGluIHRoZSBDYWRtZWEsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBUaGUgVGhlYmFuIEFjcm9wb2xpcywgd2hpY2ggd2FzIHRoZSB1c3VhbCBtZWV0aW5nLXBsYWNlIG9mIHRoZSBzZW5hdGUuPC9ub3RlPiBhbmQgd2hpbGUsIGluYXNtdWNoIGFzIGl0IHdhcyBzdW1tZXIgYW5kIG1pZGRheSwgdGhlIHN0cmVldHMgd2VyZSBlbnRpcmVseSBkZXNlcnRlZCwgYXQgdGhpcyB0aW1lIExlb250aWFkZXMgcm9kZSBvdXQgb24gaG9yc2ViYWNrIHRvIG92ZXJ0YWtlIFBob2ViaWRhcywgdHVybmVkIGhpbSBiYWNrLCBhbmQgbGVkIGhpbSBzdHJhaWdodCB0byB0aGUgQWNyb3BvbGlzLiBBbmQgYWZ0ZXIgZXN0YWJsaXNoaW5nIFBob2ViaWRhcyB0aGVyZSB3aXRoIHRoZSB0cm9vcHMgdW5kZXIgaGlzIGNvbW1hbmQsIGdpdmluZyBoaW0gdGhlIGtleSB0byB0aGUgZ2F0ZXMsIGFuZCB0ZWxsaW5nIGhpbSB0byBsZXQgbm8gb25lIGludG8gdGhlIEFjcm9wb2xpcyB1bmxlc3MgaGUgaGltc2VsZiBzbyBvcmRlcmVkLCBoZSBwcm9jZWVkZWQgYXQgb25jZSB0byB0aGUgbWVldGluZyBvZiB0aGUgc2VuYXRlLiBBbmQgd2hlbiBoZSBoYWQgYXJyaXZlZCB0aGVyZSwgaGUgc3Bva2UgYXMgZm9sbG93czoKPC90cmFuc2xhdGlvbj4="
translation['5.2.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz7igJxCZSBub3QgYXQgYWxsIGRlc3BvbmRlbnQsIGdlbnRsZW1lbiwgYmVjYXVzZSB0aGUgTGFjZWRhZW1vbmlhbnMgYXJlIGluIHBvc3Nlc3Npb24gb2YgdGhlIEFjcm9wb2xpczsgZm9yIHRoZXkgc2F5IHRoYXQgdGhleSBoYXZlIG5vdCBjb21lIGFzIGVuZW1pZXMgdG8gYW55b25lIHdobyBpcyBub3QgZWFnZXIgZm9yIHdhcjsgYXMgZm9yIG1lLCBzaW5jZSB0aGUgbGF3IGRpcmVjdHMgdGhhdCBhIHBvbGVtYXJjaCBzaGFsbCBoYXZlIHBvd2VyIHRvIGFycmVzdCBhbnkgbWFuIHdobyBzZWVtcyB0byBiZSBkb2luZyBkZWVkcyB3aGljaCBkZXNlcnZlIGRlYXRoLCBJIGFycmVzdCBJc21lbmlhcyBoZXJlLCBhcyBhbiBpbnN0aWdhdG9yIG9mIHdhci4gVGhlcmVmb3JlIGRvIHlvdSBjYXB0YWlucywgYW5kIHlvdSB3aG8gaGF2ZSBiZWVuIGRldGFpbGVkIHdpdGggdGhlbSwgYXJpc2UsIHNlaXplIHRoaXMgbWFuLCBhbmQgbGVhZCBoaW0gYXdheSB0byB0aGUgcGxhY2Ugd2hlcmUgeW91IGhhdmUgYmVlbiBkaXJlY3RlZCB0byB0YWtlIGhpbS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['5.2.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhvc2Ugd2hvIGtuZXcgb2YgdGhlIHBsYW4gd2VyZSBvZiBjb3Vyc2UgcHJlc2VudCwgb2JleWVkIHRoZSBvcmRlciwgYW5kIHNlaXplZCBJc21lbmlhczsgYnV0IG9mIHRob3NlIHdobyBkaWQgbm90IGtub3cgYWJvdXQgaXQgYW5kIHdlcmUgb3Bwb25lbnRzIG9mIExlb250aWFkZXMgYW5kIGhpcyBwYXJ0eSwgc29tZSBmbGVkIGF0IG9uY2Ugb3V0IG9mIHRoZSBjaXR5LCBmZWFyaW5nIHRoYXQgdGhleSB3b3VsZCBiZSBwdXQgdG8gZGVhdGg7IG90aGVycyB3aXRoZHJldyBhdCBmaXJzdCB0byB0aGVpciBob21lczsgd2hlbiB0aGV5IGxlYXJuZWQsIGhvd2V2ZXIsIHRoYXQgSXNtZW5pYXMgd2FzIGltcHJpc29uZWQgaW4gdGhlIENhZG1lYSwgdGhlbiBhbGwgdGhvc2Ugd2hvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzgzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgzIj4zODMgQi5DLjwvZGF0ZT48L25vdGU+IGhlbGQgdGhlIHNhbWUgdmlld3MgYXMgQW5kcm9jbGVpZGFzIGFuZCBJc21lbmlhcyByZXRpcmVkIHRvIEF0aGVucywgdG8gdGhlIG51bWJlciBvZiBhYm91dCB0aHJlZSBodW5kcmVkLgo8ZGF0ZSBhdXRobmFtZT0iLTM4MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4MyI+MzgzIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['5.2.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGVzZSB0aGluZ3MgaGFkIGJlZW4gYWNjb21wbGlzaGVkLCB0aGV5IGNob3NlIGFub3RoZXIgcG9sZW1hcmNoIGluIHBsYWNlIG9mIElzbWVuaWFzLCBidXQgTGVvbnRpYWRlcyBwcm9jZWVkZWQgYXQgb25jZSB0byBMYWNlZGFlbW9uLiBUaGVyZSBoZSBmb3VuZCB0aGUgZXBob3JzIGFuZCB0aGUgbWFqb3JpdHkgb2YgdGhlIGNpdGl6ZW5zIGFuZ3J5IHdpdGggUGhvZWJpZGFzIGJlY2F1c2UgaGUgaGFkIGFjdGVkIGluIHRoaXMgbWF0dGVyIHdpdGhvdXQgYXV0aG9yaXphdGlvbiBieSB0aGUgc3RhdGUuIEFnZXNpbGF1cywgaG93ZXZlciwgc2FpZCB0aGF0IGlmIHdoYXQgaGUgaGFkIGRvbmUgd2FzIGhhcm1mdWwgdG8gTGFjZWRhZW1vbiwgaGUgZGVzZXJ2ZWQgdG8gYmUgcHVuaXNoZWQsIGJ1dCBpZiBhZHZhbnRhZ2VvdXMsIGl0IHdhcyBhIHRpbWUtaG9ub3VyZWQgY3VzdG9tIHRoYXQgYSBjb21tYW5kZXIsIGluIHN1Y2ggY2FzZXMsIGhhZCB0aGUgcmlnaHQgdG8gYWN0IG9uIGhpcyBvd24gaW5pdGlhdGl2ZS4g4oCcSXQgaXMgcHJlY2lzZWx5IHRoaXMgcG9pbnQsIHRoZXJlZm9yZSzigJ0gaGUgc2FpZCwg4oCcd2hpY2ggc2hvdWxkIGJlIGNvbnNpZGVyZWQsIHdoZXRoZXIgd2hhdCBoYXMgYmVlbiBkb25lIGlzIGdvb2Qgb3IgYmFkIGZvciB0aGUgc3RhdGUu4oCdCjwvdHJhbnNsYXRpb24+"
translation['5.2.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBMZW9udGlhZGVzIGNhbWUgYmVmb3JlIHRoZSBhc3NlbWJseSBhbmQgc3Bva2UgYXMgZm9sbG93czog4oCcTWVuIG9mIExhY2VkYWVtb24sIHRoYXQgdGhlIFRoZWJhbnMgd2VyZSBob3N0aWxlIHRvIHlvdSBiZWZvcmUgd2hhdCBoYXMgbm93IGJlZW4gZG9uZSBjYW1lIHRvIHBhc3MsIHlvdSB3ZXJlIHdvbnQgdG8gc2F5IHlvdXJzZWx2ZXM7IGZvciB5b3Ugc2F3IHRoYXQgdGhleSB3ZXJlIGFsd2F5cyBmcmllbmRseSB0byB5b3VyIGVuZW1pZXMsIGFuZCBlbmVtaWVzIHRvIHlvdXIgZnJpZW5kcy4gRGlkIHRoZXkgbm90IHJlZnVzZSB0byBqb2luIHlvdSBpbiB0aGUgY2FtcGFpZ24gYWdhaW5zdCB0aGUgQXRoZW5pYW4gY29tbW9ucyBpbiBQaXJhZXVzLCB3aG8gd2VyZSBiaXR0ZXIgZW5lbWllcyBvZiB5b3VycywgYW5kIGRpZCB0aGV5IG5vdCwgb24gdGhlIG90aGVyIGhhbmQsIG1hcmNoIGFnYWluc3QgdGhlIFBob2NpYW5zIGJlY2F1c2UgdGhleSBzYXcgdGhhdCB5b3Ugd2VyZSB3ZWxsIGRpc3Bvc2VkIHRvd2FyZHMgdGhlbT8KPC90cmFuc2xhdGlvbj4="
translation['5.2.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5BZ2Fpbiwga25vd2luZyB0aGF0IHlvdSB3ZXJlIG1ha2luZyB3YXIgdXBvbiB0aGUgT2x5bnRoaWFucywgdGhleSB1bmRlcnRvb2sgdG8gY29uY2x1ZGUgYW4gYWxsaWFuY2Ugd2l0aCB0aGVtLCBhbmQgeW91IGluIHRob3NlIHBhc3QgZGF5cyB3ZXJlIGFsd2F5cyB1bmVhc2lseSB3YXRjaGluZyBmb3IgdGhlIHRpbWUgd2hlbiB5b3Ugc2hvdWxkIGhlYXIgdGhhdCB0aGV5IHdlcmUgZm9yY2luZyBCb2VvdGlhIHRvIGJlIHVuZGVyIHRoZWlyIHN3YXk7IGJ1dCBub3cgdGhhdCB0aGlzIHN0cm9rZSBoYXMgYmVlbiBhY2NvbXBsaXNoZWQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzgzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgzIj4zODMgQi5DLjwvZGF0ZT48L25vdGU+IHRoZXJlIGlzIG5vIG5lZWQgb2YgeW91ciBmZWFyaW5nIHRoZSBUaGViYW5zOyBvbiB0aGUgY29udHJhcnksIGEgYnJpZWYgbWVzc2FnZSBmcm9tIHlvdSB3aWxsIHN1ZmZpY2UgdG8gc2VjdXJlIGZyb20gdGhhdCBxdWFydGVyIGFsbCB0aGUgc3VwcG9ydCB0aGF0IHlvdSBtYXkgZGVzaXJlLCBwcm92aWRlZCBvbmx5IHlvdSBzaG93IGFzIG11Y2ggY29uY2VybiBmb3IgdXMgYXMgd2UgaGF2ZSBzaG93biBmb3IgeW91LuKAnQo8ZGF0ZSBhdXRobmFtZT0iLTM4MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4MyI+MzgzIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['5.2.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5VcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgdGhlIExhY2VkYWVtb25pYW5zIHJlc29sdmVkLCBzbyBsb25nIGFzIHRoZSBBY3JvcG9saXMgaGFkIGJlZW4gc2VpemVkLCB0byBrZWVwIGl0IGdhcnJpc29uZWQsIGFuZCB0byBicmluZyBJc21lbmlhcyB0byB0cmlhbC4gQWNjb3JkaW5nbHkgdGhleSBzZW50IG91dCBhcyBqdWRnZXMgdGhyZWUgTGFjZWRhZW1vbmlhbnMgYW5kIG9uZSBmcm9tIGVhY2ggb2YgdGhlIGFsbGllZCBzdGF0ZXMsIHdoZXRoZXIgc21hbGwgb3IgZ3JlYXQuIEFuZCBpdCB3YXMgbm90IHVudGlsIHRoZSBjb3VydCBoZWxkIGl0cyBzaXR0aW5nIHRoYXQgY2hhcmdlcyB3ZXJlIGJyb3VnaHQgYWdhaW5zdCBJc21lbmlhcywg4oCUIHRoYXQgaGUgd2FzIGEgc3VwcG9ydGVyIG9mIHRoZSBiYXJiYXJpYW5zLCB0aGF0IGhlIGhhZCBiZWNvbWUgYSBndWVzdC1mcmllbmQgb2YgdGhlIFBlcnNpYW4gc2F0cmFwIHRvIHRoZSBodXJ0IG9mIEdyZWVjZSwgdGhhdCBoZSBoYWQgcmVjZWl2ZWQgYSBzaGFyZSBvZiB0aGUgbW9uZXkgd2hpY2ggY2FtZSBmcm9tIHRoZSBLaW5nLCBhbmQgdGhhdCBoZSBhbmQgQW5kcm9jbGVpZGFzIHdlcmUgY2hpZWZseSByZXNwb25zaWJsZSBmb3IgYWxsIHRoZSB0cm91YmxlIGFuZCBkaXNvcmRlciBpbiBHcmVlY2UuCjwvdHJhbnNsYXRpb24+"
translation['5.2.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5UbyBhbGwgdGhlc2UgY2hhcmdlcyBoZSBkaWQgaW5kZWVkIG1ha2UgYSBkZWZlbmNlLCBidXQgaGUgZmFpbGVkIHRvIHBlcnN1YWRlIHRoZSBjb3VydCB0aGF0IGhlIHdhcyBub3QgYSBtYW4gb2YgZ3JlYXQgYW5kIGV2aWwgdW5kZXJ0YWtpbmdzLiBTbyBoZSB3YXMgcHJvbm91bmNlZCBndWlsdHkgYW5kIHB1dCB0byBkZWF0aDsgYXMgZm9yIExlb250aWFkZXMgYW5kIGhpcyBwYXJ0eSwgdGhleSBoZWxkIHBvc3Nlc3Npb24gb2YgVGhlYmVzIGFuZCBnYXZlIHRoZSBMYWNlZGFlbW9uaWFucyB0aGVpciBzdXBwb3J0IGluIGV2ZW4gbW9yZSB0aGFuIHdhcyBkZW1hbmRlZCBvZiB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhlc2UgdGhpbmdzIGhhZCBiZWVuIGFjY29tcGxpc2hlZCwgdGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzgyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgyIj4zODIgQi5DLjwvZGF0ZT48L25vdGU+IExhY2VkYWVtb25pYW5zIHdpdGggbXVjaCBtb3JlIHNwaXJpdCBzZXQgYWJvdXQgZGlzcGF0Y2hpbmcgdGhlIGpvaW50IGFybXkgdG8gT2x5bnRodXMuIFRoZXkgc2VudCBvdXQgVGVsZXV0aWFzIGFzIGdvdmVybm9yLCBhbmQgbm90IG9ubHkgc2VudCB3aXRoIGhpbSB0aGVpciBvd24gZnVsbCBjb250aW5nZW50IG9mIHRoZSB0b3RhbCB0ZW4gdGhvdXNhbmQgbWVuLCBidXQgYWxzbyB0cmFuc21pdHRlZCBvZmZpY2lhbCBkaXNwYXRjaGVzIHRvIHRoZSB2YXJpb3VzIGFsbGllZCBzdGF0ZXMsIGRpcmVjdGluZyB0aGVtIHRvIGZvbGxvdyBUZWxldXRpYXMgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSByZXNvbHV0aW9uIG9mIHRoZSBhbGxpZXMuIEFuZDxkYXRlIGF1dGhuYW1lPSItMzgyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgyIj4zODIgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODIiPjM4MiBCLkMuPC9kYXRlPjwvbm90ZT4gYWxsIHRoZSBzdGF0ZXMgZ2F2ZSB0aGVpciBoZWFydHkgc3VwcG9ydCB0byBUZWxldXRpYXMsIOKAlCBmb3IgaGUgd2FzIHJlZ2FyZGVkIGFzIGEgbWFuIG5vdCB1bmdyYXRlZnVsIHRvIHRob3NlIHdobyBwZXJmb3JtZWQgYW55IHNlcnZpY2UsIOKAlCB3aGlsZSB0aGUgVGhlYmFuIHN0YXRlIGluIHBhcnRpY3VsYXIsIGluYXNtdWNoIGFzIGhlIHdhcyBhIGJyb3RoZXIgb2YgQWdlc2lsYXVzLCBlYWdlcmx5IHNlbnQgd2l0aCBoaW0gYm90aCBob3BsaXRlcyBhbmQgaG9yc2VtZW4uCjxkYXRlIGF1dGhuYW1lPSItMzgyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgyIj4zODIgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.2.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaGUgcHJvc2VjdXRlZCBoaXMgbWFyY2ggd2l0aCBubyBncmVhdCBzcGVlZCwgaGlzIGNvbmNlcm4gYmVpbmcgcmF0aGVyIHRvIG1ha2UgdGhlIGpvdXJuZXkgd2l0aG91dCBkb2luZyBhbnkgaGFybSB0byB0aGUgZnJpZW5kcyBvZiBoaXMgc3RhdGUgYW5kIHRvIGNvbGxlY3QgYXMgbGFyZ2UgYSBmb3JjZSBhcyBwb3NzaWJsZS4gSGUgYWxzbyBzZW50IHdvcmQgb24gYWhlYWQgdG8gQW15bnRhcyBhbmQgYXNrZWQgaGltIG5vdCBvbmx5IHRvIGhpcmUgbWVyY2VuYXJpZXMsIGJ1dCBsaWtld2lzZSB0byBnaXZlIG1vbmV5IHRvIHRoZSBraW5ncyBpbiBoaXMgbmVpZ2hib3VyaG9vZCwgdGhhdCB0aGV5IG1pZ2h0IGJlY29tZSBhbGxpZXMsIGlmIGhlIHJlYWxseSB3YW50ZWQgdG8gcmVjb3ZlciBoaXMgZG9taW5pb25zLiBGdXJ0aGVybW9yZSwgaGUgc2VudCB0byBEZXJkYXMsIHRoZSBydWxlciBvZiBFbGltaWEsIHBvaW50aW5nIG91dCB0byBoaW0gdGhhdCB0aGUgT2x5bnRoaWFucyBoYWQgYWxyZWFkeSBzdWJkdWVkIHRoZSBncmVhdGVyIHBvd2VyLCBNYWNlZG9uaWEsIGFuZCB3b3VsZCBub3QgbGV0IHRoZSBsZXNzZXIgZXNjYXBlIHVubGVzcyBzb21lb25lIHB1dCBhIHN0b3AgdG8gdGhlaXIgcHJlc3VtcHRpb24uCjwvdHJhbnNsYXRpb24+"
translation['5.2.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz5BcyBhIHJlc3VsdCBvZiBoaXMgZG9pbmcgdGhlc2UgdGhpbmdzIGhlIGhhZCBhIHZlcnkgbGFyZ2UgYXJteSB3aGVuIGhlIGFycml2ZWQgaW4gdGhlIHRlcnJpdG9yeSBvZiBoaXMgc3RhdGUncyBhbGxpZXMuIEFuZCB3aGVuIGhlIGhhZCBjb21lIHRvIFBvdGlkYWVhLCBoZSBwcm9jZWVkZWQgZnJvbSB0aGVyZSB3aXRoIGhpcyBhcm15IGluIG9yZGVyIG9mIGJhdHRsZSBpbnRvIHRoZSBlbmVteSdzIGNvdW50cnkuIE5vdyBvbiBoaXMgd2F5IHRvd2FyZCB0aGUgY2l0eSBvZiBPbHludGh1cyBoZSBuZWl0aGVyIGJ1cm5lZCBub3IgY3V0IGRvd24sIGJlbGlldmluZyB0aGF0IGFueXRoaW5nIG9mIHRoaXMgc29ydCBoZSBzaG91bGQgZG8gd291bGQgcHJvdmUgc28gbWFueSBvYnN0YWNsZXMgaW4gaGlzIHdheSBib3RoIGFzIGhlIGFwcHJvYWNoZWQgYW5kIGFzIGhlIHdpdGhkcmV3OyBidXQgaGUgYmVsaWV2ZWQgdGhhdCB3aGVuIGhlIHNob3VsZCByZXRpcmUgZnJvbSB0aGUgY2l0eSBpdCB3b3VsZCBiZSByaWdodCB0byBjdXQgZG93biB0aGUgdHJlZXMgYW5kIHB1dCB0aGVtIGluIHRoZSB3YXkgb2YgYW55b25lIHdobyBtaWdodCBjb21lIGFnYWluc3QgaGltIGZyb20gYmVoaW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.2.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHdoZW4gaGUgd2FzIGRpc3RhbnQgZnJvbSB0aGUgY2l0eSBub3Qgc28gbXVjaCBhcyB0ZW4gc3RhZGlhLCBoZSBoYWx0ZWQgdGhlIGFybXksIGhpbXNlbGYgb2NjdXB5aW5nIHRoZSBsZWZ0IHdpbmcsIOKAlCBmb3IgaW4gdGhpcyB3YXkgaXQgZmVsbCB0bzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4MiI+MzgyIEIuQy48L2RhdGU+PC9ub3RlPiBoaW0gdG8gYWR2YW5jZSBpbiB0aGUgZGlyZWN0aW9uIG9mIHRoZSBnYXRlIHdoZXJlIHRoZSBlbmVteSBpc3N1ZWQgZm9ydGgsIOKAlCB3aGlsZSB0aGUgcmVzdCBvZiB0aGUgcGhhbGFueCwgbWFkZSB1cCBvZiB0aGUgYWxsaWVzLCBzdHJldGNoZWQgYXdheSB0byB0aGUgcmlnaHQuIEFzIGZvciB0aGUgaG9yc2VtZW4sIGhlIGxpa2V3aXNlIHBvc3RlZCB1cG9uIHRoZSByaWdodCB3aW5nIHRoZSBMYWNvbmlhbnMsIHRoZSBUaGViYW5zLCBhbmQgYWxsIHRoZSBNYWNlZG9uaWFucyB3aG8gd2VyZSBwcmVzZW50LCB3aGlsZSBoZSBrZXB0IGJ5IGhpcyBvd24gc2lkZSBEZXJkYXMgYW5kIGhpcyBob3JzZW1lbiwgbnVtYmVyaW5nIGFib3V0IGZvdXIgaHVuZHJlZCwgbm90IG9ubHkgYmVjYXVzZSBoZSBhZG1pcmVkIHRoaXMgdHJvb3AsIGJ1dCBhbHNvIHRvIGRvIGhvbm91ciB0byBEZXJkYXMsIHNvIHRoYXQgaGUgc2hvdWxkIGJlIGdsYWQgaGUgaGFkIGpvaW5lZCB0aGUgZXhwZWRpdGlvbi4KPGRhdGUgYXV0aG5hbWU9Ii0zODIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODIiPjM4MiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.2.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGUgZW5lbXkgY2FtZSBhbmQgZm9ybWVkIGluIG9wcG9zaW5nIGxpbmUgYmVuZWF0aCB0aGUgY2l0eSB3YWxsLCB0aGVpciBob3JzZW1lbiwgbWFzc2luZyB0aGVtc2VsdmVzIHRvZ2V0aGVyLCBjaGFyZ2VkIHVwb24gdGhlIExhY29uaWFucyBhbmQgQm9lb3RpYW5zLiBBbmQgdGhleSBub3Qgb25seSBzdHJ1Y2sgZG93biBmcm9tIGhpcyBob3JzZSBQb2x5Y2hhcm11cywgdGhlIExhY2VkYWVtb25pYW4gY29tbWFuZGVyIG9mIGNhdmFscnksIGFuZCBpbmZsaWN0ZWQgdmVyeSBtYW55IHdvdW5kcyB1cG9uIGhpbSBhcyBoZSBsYXksIGJ1dCB0aGV5IGFsc28ga2lsbGVkIG90aGVycywgYW5kIGZpbmFsbHkgcHV0IHRvIGZsaWdodCB0aGUgY2F2YWxyeSB1cG9uIHRoZSByaWdodCB3aW5nLiBOb3cgYXMgdGhlIGNhdmFscnkgZmxlZCwgdGhlIGluZmFudHJ5IG5leHQgdGhlbSBhbHNvIGdhdmUgd2F5LCBhbmQgdGhlIHdob2xlIGFybXksIGluZGVlZCwgd291bGQgaGF2ZSBiZWVuIGluIGRhbmdlciBvZiBiZWluZyBkZWZlYXRlZCBoYWQgbm90IERlcmRhcyB3aXRoIGhpcyB0cm9vcCBkYXNoZWQgc3RyYWlnaHQgZm9yIHRoZSBnYXRlcyBvZiB0aGUgT2x5bnRoaWFucy4gQW5kIFRlbGV1dGlhcyBhbHNvIGFkdmFuY2VkIHRvIHRoZSBhdHRhY2sgd2l0aCBoaXMgdHJvb3BzIGluIGJhdHRsZSBvcmRlci4KPC90cmFuc2xhdGlvbj4="
translation['5.2.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSBPbHludGhpYW4gaG9yc2VtZW4gcGVyY2VpdmVkIHRoZXNlIG1vdmVtZW50cywgYmVpbmcgc2VpemVkIHdpdGggZmVhciBsZXN0IHRoZXkgc2hvdWxkIGJlIHNodXQgb3V0IGZyb20gdGhlIGdhdGVzLCB0aGV5IHR1cm5lZCBhYm91dCBhbmQgcmV0aXJlZCBpbiBncmVhdCBoYXN0ZS4gVGhlbiBEZXJkYXMga2lsbGVkIHZlcnkgbWFueSBvZiB0aGVtIGFzIHRoZXkgcm9kZSBwYXN0IGhpbS4gQW5kIHRoZSBmb290LXNvbGRpZXJzIG9mIHRoZSBPbHludGhpYW5zIGFsc28gcmV0aXJlZCBpbnRvIHRoZSBjaXR5OyBidXQgbm90IG1hbnkgb2YgdGhlbSB3ZXJlIGtpbGxlZCwgYmVjYXVzZSB0aGUgd2FsbCB3YXMgbmVhci4KPC90cmFuc2xhdGlvbj4="
translation['5.2.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBhIHRyb3BoeSBoYWQgYmVlbiBzZXQgdXAgYW5kIHRoaXMgdmljdG9yeSBoYWQgZmFsbGVuIHRvIFRlbGV1dGlhcywgdGhlbiBhcyBoZSB3aXRoZHJldzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4MiI+MzgyIEIuQy48L2RhdGU+PC9ub3RlPiBoZSBwcm9jZWVkZWQgdG8gY3V0IGRvd24gdGhlIHRyZWVzLiBOb3cgYWZ0ZXIgY29udGludWluZyB0aGUgY2FtcGFpZ24gdGhyb3VnaCB0aGlzIHN1bW1lciBoZSBkaXNtaXNzZWQgYm90aCB0aGUgTWFjZWRvbmlhbiBhcm15IGFuZCB0aGUgaG9yc2VtZW4gb2YgRGVyZGFzOyB0aGUgT2x5bnRoaWFucywgaG93ZXZlciwgb24gdGhlaXIgc2lkZSBtYWRlIGZyZXF1ZW50IHJhaWRzIGludG8gdGhlIHRlcnJpdG9yeSBvZiB0aGUgY2l0aWVzIGFsbGllZCB3aXRoIHRoZSBMYWNlZGFlbW9uaWFucywgYW5kIGNhcnJpZWQgb2ZmIGJvb3R5IGFuZCBraWxsZWQgbWVuLgo8ZGF0ZSBhdXRobmFtZT0iLTM4MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4MiI+MzgyIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['5.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BdCB0aGUgdmVyeSBiZWdpbm5pbmcgb2YgdGhlIGZvbGxvd2luZyBzcHJpbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODEiPjM4MSBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlIE9seW50aGlhbiBob3JzZW1lbiwgYWJvdXQgc2l4IGh1bmRyZWQgaW4gbnVtYmVyLCBoYWQgbWFkZSBhIHJhaWQgaW50byB0aGUgZGlzdHJpY3Qgb2YgQXBvbGxvbmlhIGF0IG1pZGRheSBhbmQgd2VyZSBzY2F0dGVyZWQgYWJvdXQgcGlsbGFnaW5nOyBhbmQgaXQgY2hhbmNlZCB0aGF0IG9uIHRoYXQgZGF5IERlcmRhcyBoYWQgYXJyaXZlZCB3aXRoIGhpcyBob3JzZW1lbiBhbmQgd2FzIGJyZWFrZmFzdGluZyBhdCBBcG9sbG9uaWEuIFdoZW4gaGUgc2F3IHRoZSByYWlkLCBoZSBrZXB0IHF1aWV0LCBrZWVwaW5nIGhpcyBob3JzZXMgc2FkZGxlZCBhbmQgYnJpZGxlZCBhbmQgdGhlaXIgcmlkZXJzIGZ1bGx5IGFybWVkLiBCdXQgd2hlbiB0aGUgT2x5bnRoaWFucyBjYW1lIHJpZGluZyBkaXNkYWluZnVsbHkgbm90IG9ubHkgaW50byB0aGUgc3VidXJicywgYnV0IHRvIHRoZSB2ZXJ5IGdhdGVzIG9mIHRoZSBjaXR5LCB0aGVuIGhlIGRhc2hlZCBmb3J0aCB3aXRoIGhpcyBtZW4gaW4gZ29vZCBvcmRlci4KPGRhdGUgYXV0aG5hbWU9Ii0zODEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODEiPjM4MSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB1cG9uIHNlZWluZyBoaW0gdGhlIGVuZW15IHRvb2sgdG8gZmxpZ2h0LiBCdXQgaGUsIHdoZW4gb25jZSBoZSBoYWQgdHVybmVkIHRoZW0gdG8gZmxpZ2h0LCBkaWQgbm90IHN0b3AgcHVyc3VpbmcgYW5kIGtpbGxpbmcgZm9yIG5pbmV0eSBzdGFkaWEsIHVudGlsIGhlIGhhZCBjaGFzZWQgdGhlbSB0byB0aGUgdmVyeSB3YWxsIG9mIHRoZSBPbHludGhpYW5zLiBJdCB3YXMgc2FpZCwgaW5kZWVkLCB0aGF0IERlcmRhcyBraWxsZWQgaW4gdGhpcyBhY3Rpb24gYWJvdXQgZWlnaHR5IGhvcnNlbWVuLiBBbmQgZnJvbSB0aGlzIGRheSBmb3J0aCB0aGUgZW5lbXkgc3RheWVkIG1vcmUgY2xvc2VseSB3aXRoaW4gdGhlaXIgd2FsbCBhbmQgY3VsdGl2YXRlZCBvbmx5IGFuIGV4Y2VlZGluZ2x5IHNtYWxsIHBvcnRpb24gb2YgdGhlaXIgbGFuZC4KPC90cmFuc2xhdGlvbj4="
translation['5.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFzIHRpbWUgd2VudCBvbiwgaG93ZXZlciwgYW5kIFRlbGV1dGlhcyBoYWQgbGVkIGhpcyBhcm15IHVwIHRvIHRoZSBjaXR5IG9mIHRoZSBPbHludGhpYW5zIGluIG9yZGVyIHRvIGRlc3Ryb3kgd2hhdGV2ZXIgdHJlZSB3YXMgbGVmdCBvciB3aGF0ZXZlciBmaWVsZCBoYWQgYmVlbiBjdWx0aXZhdGVkIGJ5IHRoZSBlbmVteSwgdGhlIE9seW50aGlhbiBob3JzZW1lbiBpc3N1ZWQgZm9ydGggYW5kLCBwcm9jZWVkaW5nIHF1aWV0bHksIGNyb3NzZWQgdGhlIHJpdmVyIHdoaWNoIGZsb3dzIGJ5IHRoZSBjaXR5IGFuZCBoZWxkIG9uIHRoZWlyIHdheSB0b3dhcmRzIHRoZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM4MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4MSI+MzgxIEIuQy48L2RhdGU+PC9ub3RlPiBvcHBvc2luZyBhcm15LiBBbmQgd2hlbiBUZWxldXRpYXMgc2F3IHRoZW0sIGJlaW5nIGlycml0YXRlZCBhdCB0aGVpciBhdWRhY2l0eSwgaGUgaW1tZWRpYXRlbHkgb3JkZXJlZCBUbGVtb25pZGFzLCB0aGUgbGVhZGVyIG9mIHRoZSBwZWx0YXN0cywgdG8gY2hhcmdlIGFnYWluc3QgdGhlbSBvbiB0aGUgcnVuLgo8ZGF0ZSBhdXRobmFtZT0iLTM4MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4MSI+MzgxIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['5.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGVuIHRoZSBPbHludGhpYW5zIHNhdyB0aGUgcGVsdGFzdHMgc2FsbHlpbmcgZm9ydGgsIHRoZXkgdHVybmVkIGFib3V0LCByZXRpcmVkIHF1aWV0bHksIGFuZCBjcm9zc2VkIHRoZSByaXZlciBhZ2Fpbi4gVGhlIHBlbHRhc3RzLCBvbiB0aGUgb3RoZXIgaGFuZCwgZm9sbG93ZWQgdmVyeSByYXNobHkgYW5kLCB3aXRoIHRoZSB0aG91Z2h0IHRoYXQgdGhlIGVuZW15IHdlcmUgaW4gZmxpZ2h0LCBwdXNoZWQgaW50byB0aGUgcml2ZXIgYWZ0ZXIgdGhlbSB0byBwdXJzdWUgdGhlbS4gVGhlcmV1cG9uIHRoZSBPbHludGhpYW4gaG9yc2VtZW4sIGF0IHRoZSBtb21lbnQgd2hlbiB0aGV5IHRob3VnaHQgdGhhdCB0aG9zZSB3aG8gaGFkIGNyb3NzZWQgdGhlIHJpdmVyIHdlcmUgc3RpbGwgZWFzeSB0byBoYW5kbGUsIHR1cm5lZCBhYm91dCBhbmQgZGFzaGVkIHVwb24gdGhlbSwgYW5kIHRoZXkgbm90IG9ubHkga2lsbGVkIFRsZW1vbmlkYXMgaGltc2VsZiwgYnV0IG1vcmUgdGhhbiBvbmUgaHVuZHJlZCBvZiB0aGUgb3RoZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBUZWxldXRpYXMsIGZpbGxlZCB3aXRoIGFuZ2VyIHdoZW4gaGUgc2F3IHdoYXQgd2FzIGdvaW5nIG9uLCBzbmF0Y2hlZCB1cCBoaXMgYXJtcyBhbmQgbGVkIHRoZSBob3BsaXRlcyBzd2lmdGx5IGZvcndhcmQsIHdoaWxlIGhlIG9yZGVyZWQgdGhlIHBlbHRhc3RzIGFuZCB0aGUgaG9yc2VtZW4gdG8gcHVyc3VlIGFuZCBub3Qgc3RvcCBwdXJzdWluZy4gTm93IGluIG1hbnkgb3RoZXIgaW5zdGFuY2VzIHRob3NlIHdobyBoYXZlIHByZXNzZWQgYSBwdXJzdWl0IHRvbyBjbG9zZSB0byBhIGNpdHkncyB3YWxsIGhhdmUgY29tZSBvZmYgYmFkbHkgaW4gdGhlaXIgcmV0cmVhdCwgYW5kIGluIHRoaXMgY2FzZSBhbHNvLCB3aGVuIHRoZSBtZW4gd2VyZSBzaG93ZXJlZCB3aXRoIG1pc3NpbGVzIGZyb20gdGhlIHRvd2VycywgdGhleSB3ZXJlIGZvcmNlZCB0byByZXRpcmUgaW4gZGlzb3JkZXIgYW5kIHRvIGd1YXJkIHRoZW1zZWx2ZXMgYWdhaW5zdCB0aGUgbWlzc2lsZXMuCjwvdHJhbnNsYXRpb24+"
translation['5.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkF0IHRoaXMgbW9tZW50IHRoZSBPbHludGhpYW5zIHNlbnQgb3V0IHRoZWlyIGhvcnNlbWVuIHRvIHRoZSBhdHRhY2ssIGFuZCB0aGUgcGVsdGFzdHMgYWxzbyBjYW1lIHRvIHRoZWlyIHN1cHBvcnQ7IGZpbmFsbHksIHRoZWlyIGhvcGxpdGVzIGxpa2V3aXNlIHJ1c2hlZCBvdXQsIGFuZCBmZWxsIHVwb24gdGhlIExhY2VkYWVtb25pYW4gcGhhbGFueCB3aGVuIGl0IHdhcyBhbHJlYWR5IGluIGNvbmZ1c2lvbi4gVGhlcmUgVGVsZXV0aWFzIGZlbGwgZmlnaHRpbmcuIEFuZCB3aGVuIHRoaXMgaGFwcGVuZWQsIHRoZSB0cm9vcHMgYWJvdXQgaGltIGF0IG9uY2UgZ2F2ZSB3YXksIGFuZCBpbiBmYWN0IG5vIG9uZSBzdG9vZCBoaXMgZ3JvdW5kIGFueSBsb25nZXIsIGJ1dCBhbGwgZmxlZCwgc29tZSBmb3IgU3BhcnRvbHVzLCBvdGhlcnMgZm9yIEFjYW50aHVzLCBvdGhlcnMgdG8gQXBvbGxvbmlhLCBhbmQgdGhlIG1ham9yaXR5IHRvIFBvdGlkYWVhLiBBcyB0aGV5IGZsZWQgaW4gYWxsIGRpcmVjdGlvbnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzgxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgxIj4zODEgQi5DLjwvZGF0ZT48L25vdGU+IHNvIGxpa2V3aXNlIHRoZSBlbmVteSBwdXJzdWVkIGluIGFsbCBkaXJlY3Rpb25zLCBhbmQga2lsbGVkIGEgdmFzdCBudW1iZXIgb2YgbWVuLCBpbmNsdWRpbmcgdGhlIG1vc3Qgc2VydmljZWFibGUgcGFydCBvZiB0aGUgYXJteS4KPGRhdGUgYXV0aG5hbWU9Ii0zODEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODEiPjM4MSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Gcm9tIHN1Y2ggZGlzYXN0ZXJzLCBob3dldmVyLCBJIGhvbGQgdGhhdCBtZW4gYXJlIHRhdWdodCB0aGUgbGVzc29uLCBjaGllZmx5LCBpbmRlZWQsIHRoYXQgdGhleSBvdWdodCBub3QgdG8gY2hhc3Rpc2UgYW55b25lLCBldmVuIHNsYXZlcywgaW4gYW5nZXIg4oCUIGZvciBtYXN0ZXJzIGluIGFuZ2VyIGhhdmUgb2Z0ZW4gc3VmZmVyZWQgZ3JlYXRlciBoYXJtIHRoYW4gdGhleSBoYXZlIGluZmxpY3RlZDsgYnV0IGVzcGVjaWFsbHkgdGhhdCwgaW4gZGVhbGluZyB3aXRoIGVuZW1pZXMsIHRvIGF0dGFjayB1bmRlciB0aGUgaW5mbHVlbmNlIG9mIGFuZ2VyIGFuZCBub3Qgd2l0aCBqdWRnbWVudCBpcyBhbiBhYnNvbHV0ZSBtaXN0YWtlLiBGb3IgYW5nZXIgaXMgYSB0aGluZyB3aGljaCBkb2VzIG5vdCBsb29rIGFoZWFkLCB3aGlsZSBqdWRnbWVudCBhaW1zIG5vIGxlc3MgdG8gZXNjYXBlIGhhcm0gdGhhbiB0byBpbmZsaWN0IGl0IHVwb24gdGhlIGVuZW15Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZSBMYWNlZGFlbW9uaWFucyBoZWFyZCBvZiB0aGlzIGFmZmFpciwgaXQgc2VlbWVkIHRvIHRoZW0gYXMgdGhleSBkZWxpYmVyYXRlZCB0aGF0IHRoZXkgbXVzdCBzZW5kIG91dCBubyBzbWFsbCBmb3JjZSwgaW4gb3JkZXIgdGhhdCB0aGUgcHJpZGUgb2YgdGhlIHZpY3RvcnMgbWlnaHQgYmUgcXVlbmNoZWQgYW5kIHRoYXQgdGhlIGVmZm9ydHMgYWxyZWFkeSBtYWRlIG1pZ2h0IG5vdCBnbyBmb3Igbm90aGluZy4gSGF2aW5nIGNvbWUgdG8gdGhpcyBjb25jbHVzaW9uLCB0aGV5IHNlbnQgb3V0IEFnZXNpcG9saXMsIHRoZSBraW5nLCBhcyBjb21tYW5kZXIsIGFuZCB3aXRoIGhpbSwgYXMgdGhleSBoYWQgc2VudCB3aXRoIEFnZXNpbGF1cyB0byBBc2lhLCB0aGlydHkgU3BhcnRpYXRhZS4KPC90cmFuc2xhdGlvbj4="
translation['5.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZXJlIGZvbGxvd2VkIHdpdGggaGltIGFsc28gbWFueSBvZiB0aGUgUGVyaW9lY2kgYXMgdm9sdW50ZWVycywgbWVuIG9mIHRoZSBiZXR0ZXIgY2xhc3MsIGFuZCBhbGllbnMgd2hvIGJlbG9uZ2VkIHRvIHRoZSBzby1jYWxsZWQgZm9zdGVyLWNoaWxkcmVuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIHdlcmUgYnJvdWdodCB1cCBhdCBTcGFydGEgYW5kIHdlbnQgdGhyb3VnaCB0aGUgdXN1YWwgY291cnNlIG9mIFNwYXJ0YW4gZGlzY2lwbGluZS4gWGVub3Bob24ncyBvd24gc29ucyBiZWxvbmdlZCB0byB0aGlzIGNsYXNzLjwvbm90ZT4gb2YgU3BhcnRhLCBhbmQgc29ucyBvZiB0aGUgU3BhcnRpYXRhZSBieSBIZWxvdCB3b21lbiwgZXhjZWVkaW5nbHkgZmluZWxvb2tpbmcgbWVuLCBub3Qgd2l0aG91dCBleHBlcmllbmNlIG9mIHRoZSBnb29kIGdpZnRzIG9mIHRoZSBzdGF0ZS4gRnVydGhlcm1vcmUsIHZvbHVudGVlcnMgZnJvbSB0aGUgYWxsaWVkIHN0YXRlcyBqb2luZWQgdGhlIGV4cGVkaXRpb24gYW5kIGhvcnNlbWVuIG9mIHRoZSBUaGVzc2FsaWFucywgd2hvIHdpc2hlZCB0byBiZWNvbWUga25vd24gdG8gQWdlc2lwb2xpcywgd2hpbGUgQW15bnRhcyBhbmQgRGVyZGFzIHRvb2sgcGFydCB3aXRoIGV2ZW4gZ3JlYXRlciBlYWdlcm5lc3MgdGhhbiBiZWZvcmUuIFVuZGVyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzgxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgxIj4zODEgQi5DLjwvZGF0ZT48L25vdGU+IHRoZXNlIGNpcmN1bXN0YW5jZXMgaXQgd2FzIHRoYXQgQWdlc2lwb2xpcyBtYXJjaGVkIGFnYWluc3QgT2x5bnRodXMuCjxkYXRlIGF1dGhuYW1lPSItMzgxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgxIj4zODEgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVhbndoaWxlIHRoZSBwZW9wbGUgb2YgUGhsaXVzLCBwYXJ0bHkgYmVjYXVzZSB0aGV5IGhhZCBiZWVuIGNvbW1lbmRlZCBieSBBZ2VzaXBvbGlzIGZvciBnaXZpbmcgaGltIGEgbGFyZ2Ugc3VtIG9mIG1vbmV5IGZvciBoaXMgY2FtcGFpZ24gYW5kIGdpdmluZyBpdCBzcGVlZGlseSwgcGFydGx5IGJlY2F1c2UgdGhleSB0aG91Z2h0IHRoYXQgd2l0aCBBZ2VzaXBvbGlzIGFicm9hZCBBZ2VzaWxhdXMgd291bGQgbm90IHRha2UgdGhlIGZpZWxkIGFnYWluc3QgdGhlbSwgYW5kIHRoYXQgaXQgbmV2ZXIgd291bGQgaGFwcGVuIHRoYXQgYm90aCB0aGUga2luZ3Mgd291bGQgYmUgb3V0c2lkZSBvZiBTcGFydGEgYXQgdGhlIHNhbWUgdGltZSwgYm9sZGx5IHJlZnVzZWQgdG8gZ3JhbnQgYW55IG9mIHRoZWlyIHJpZ2h0cyB0byB0aGUgcmVzdG9yZWQgZXhpbGVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gaWkuIDEwPC9ub3RlPiBGb3Igd2hpbGUgdGhlIGV4aWxlcyBkZW1hbmRlZCB0aGF0IHRoZSBxdWVzdGlvbnMgaW4gZGlzcHV0ZSBzaG91bGQgYmUgYnJvdWdodCB0byB0cmlhbCBiZWZvcmUgYW4gaW1wYXJ0aWFsIGNvdXJ0LCB0aGVpciBwb2xpY3kgd2FzIHRvIGNvbXBlbCB0aGVtIHRvIHBsZWFkIHRoZWlyIGNhc2VzIGluIHRoZSBjaXR5IGl0c2VsZi4gQW5kIHdoZW4gdGhlIGV4aWxlcyBhc2tlZCB3aGF0IG1hbm5lciBvZiB0cmlhbCB0aGF0IHdhcywgd2hlcmUgdGhlIHdyb25nLWRvZXJzIHdlcmUgdGhlbXNlbHZlcyB0aGUganVkZ2VzLCB0aGV5IHJlZnVzZWQgdG8gbGlzdGVuIHRvIHRoZW0gYXQgYWxsLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Db25zZXF1ZW50bHkgdGhlc2UgcmVzdG9yZWQgZXhpbGVzIGNhbWUgdG8gTGFjZWRhZW1vbiB0byBwcmVzZW50IHRoZWlyIGNoYXJnZSBhZ2FpbnN0IHRoZSBzdGF0ZSwgYW5kIG90aGVyIHBlb3BsZSBmcm9tIGhvbWUgY2FtZSB3aXRoIHRoZW0sIHNheWluZyB0aGF0IG1hbnkgZXZlbiBhbW9uZyB0aGUgY2l0aXplbnMgdGhvdWdodCB0aGF0IHRoZSBleGlsZXMgd2VyZSBub3QgcmVjZWl2aW5nIGp1c3QgdHJlYXRtZW50LiBCdXQgdGhlIHN0YXRlIG9mIFBobGl1cywgYW5nZXJlZCBhdCB0aGlzLCBmaW5lZCBhbGwgd2hvIGhhZCBnb25lIHRvIExhY2VkYWVtb24gd2l0aG91dCBiZWluZyBzZW50IGJ5IHRoZSBzdGF0ZS4KPC90cmFuc2xhdGlvbj4="
translation['5.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhvc2Ugd2hvIHdlcmUgdGh1cyBmaW5lZCB3ZXJlIGFmcmFpZCB0byByZXR1cm4gaG9tZSwgYnV0IHJlbWFpbmVkIGFuZCBwcm90ZXN0ZWQgdG8gdGhlIExhY2VkYWVtb25pYW5zLCBzYXlpbmc6IOKAnFRoZXNlIG1lbiwgd2hvIGFyZSBlbmdhZ2VkIGluIHRoZXNlIGhpZ2gtaGFuZGVkIHByb2NlZWRpbmdzLCBhcmUgdGhlIG1lbiB3aG8gaGF2ZSBiYW5pc2hlZCB1cyBhbmQgaGF2ZSBhbHNvIGV4Y2x1ZGVkIHlvdSBmcm9tIHRoZWlyIGNpdHksIHRoZXNlIGFyZSB0aGUgbWVuIHdobyBhcmUgYnV5aW5nIG91ciBwcm9wZXJ0eSBhbmQgcmVzb3J0aW5nIHRvIGhpZ2gtaGFuZGVkIG1lYXN1cmVzIHNvIGFzIG5vdCB0byBnaXZlIGl0IGJhY2ssIGFuZCBub3cgdGhlc2Ugc2FtZSBtZW4gaGF2ZSBjb250cml2ZWQgdG8gaGF2ZSBhIGZpbmUgaW5mbGljdGVkIHVwb24gdXMgZm9yIGNvbWluZyBoZXJlLCBzbyB0aGF0IGluIHRoZSBmdXR1cmUgbm8gb25lIHNoYWxsIGRhcmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODEiPjM4MSBCLkMuPC9kYXRlPjwvbm90ZT4gdG8gY29tZSBmb3IgdGhlIHB1cnBvc2Ugb2YgcmV2ZWFsaW5nIHdoYXQgaXMgZ29pbmcgb24gaW4gdGhlIHN0YXRlLuKAnQo8ZGF0ZSBhdXRobmFtZT0iLTM4MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM4MSI+MzgxIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['5.3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgc2luY2UgaXQgc2VlbWVkIHRoYXQgdGhlIFBobGlhc2lhbnMgd2VyZSByZWFsbHkgYWN0aW5nIGluc29sZW50bHksIHRoZSBlcGhvcnMgY2FsbGVkIG91dCB0aGUgYmFuIGFnYWluc3QgdGhlbS4gTm93IHRoaXMgd2FzIG5vdCBkaXNwbGVhc2luZyB0byBBZ2VzaWxhdXM7IGZvciB0aGUgZm9sbG93ZXJzIG9mIFBvZGFuZW11cyBoYWQgYmVlbiBmcmllbmRzIG9mIGhpcyBmYXRoZXIgQXJjaGlkYW11cyBhbmQgd2VyZSBhdCB0aGlzIHRpbWUgYW1vbmcgdGhlIHJlc3RvcmVkIGV4aWxlczsgd2hpbGUgdGhlIHBhcnRpc2FucyBvZiBQcm9jbGVzLCB0aGUgc29uIG9mIEhpcHBvbmljdXMsIHdlcmUgZnJpZW5kcyBvZiBoaXMgb3duLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiwgYWZ0ZXIgdGhlIHNhY3JpZmljZXMgYXQgdGhlIGZyb250aWVyIGhhZCBwcm92ZWQgZmF2b3VyYWJsZSwgaGUgbWFkZSBubyBkZWxheSBidXQgcHJvY2VlZGVkIG9uIHRoZSBtYXJjaCwgbWFueSBlbWJhc3NpZXMgbWV0IGhpbSBhbmQgb2ZmZXJlZCBoaW0gbW9uZXkgbm90IHRvIGludmFkZSB0aGUgY291bnRyeSBvZiBQaGxpdXMuIEhlIHJlcGxpZWQsIGhvd2V2ZXIsIHRoYXQgaGUgd2FzIG5vdCB0YWtpbmcgdGhlIGZpZWxkIHRvIGRvIHdyb25nLCBidXQgdG8gYWlkIHRob3NlIHdobyB3ZXJlIHN1ZmZlcmluZyB3cm9uZy4KPC90cmFuc2xhdGlvbj4="
translation['5.3.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5GaW5hbGx5IHRoZXkgc2FpZCB0aGF0IHRoZXkgd291bGQgZG8gYW55dGhpbmcgd2hhdHNvZXZlciwgYW5kIGJlZ2dlZCBoaW0gbm90IHRvIGludmFkZS4gSGUgYW5zd2VyZWQgYWdhaW4gdGhhdCBoZSBjb3VsZCBub3QgdHJ1c3QgdG8gd29yZHMsIGZvciB0aGV5IGhhZCBwcm92ZWQgZmFsc2UgdG8gdGhlaXIgd29yZCBpbiB0aGUgcHJldmlvdXMgY2FzZSwgYnV0IGhlIHNhaWQgdGhlcmUgd2FzIG5lZWQgb2Ygc29tZSBkZWVkIHRoYXQgb25lIGNvdWxkIHRydXN0LiBBbmQgd2hlbiBoZSB3YXMgYXNrZWQgd2hhdCBtYW5uZXIgb2YgZGVlZCB0aGlzIHdvdWxkIGJlLCBoZSByZXBsaWVkIGFnYWluOiDigJxUaGUgc2FtZSB0aGluZyzigJ0gc2FpZCBoZSwg4oCcdGhhdCB5b3UgZGlkIGJlZm9yZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIElWLiBpdi4gMTUuPC9ub3RlPiBhbmQgaW4gZG9pbmcgd2hpY2ggeW91IHN1ZmZlcmVkIG5vIHdyb25nIHdoYXRldmVyIGF0IG91ciBoYW5kcy7igJ0gQnkgdGhpcyBoZSBtZWFudCBnaXZpbmcgb3ZlciB0aGVpciBBY3JvcG9saXMuCjwvdHJhbnNsYXRpb24+"
translation['5.3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BcyB0aGV5IHJlZnVzZWQgdG8gZG8gdGhpcywgaGUgaW52YWRlZCB0aGVpciBsYW5kIGFuZCBxdWlja2x5IGJ1aWx0IGEgd2FsbCBvZiBjaXJjdW12YWxsYXRpb24gYXJvdW5kIHRoZSBjaXR5IGFuZCBiZXNpZWdlZCB0aGVtLiBBbmQgd2hlbiBtYW55IExhY2VkYWVtb25pYW5zIHNhaWQgdGhhdCBtZXJlbHkgZm9yIHRoZSBzYWtlIG9mIGEgZmV3IGluZGl2aWR1YWxzIHRoZXkgd2VyZSBtYWtpbmcgdGhlbXNlbHZlcyBoYXRlZCBieSBhIHN0YXRlIG9mIG1vcmUgdGhhbiBmaXZlIHRob3VzYW5kIG1lbiDigJQgZm9yIHRoZSBQaGxpYXNpYW5zIGhlbGQgdGhlaXIgYXNzZW1ibGllcyBpbiBwbGFpbiBzaWdodCBvZiB0aGUgcGVvcGxlIG91dHNpZGUgdGhlIGNpdHkganVzdCBmb3IgdGhlIHB1cnBvc2Ugb2YgbWFraW5nIHRoZSBmYWN0IG9mIHRoZWlyIG51bWJlcnMgZXZpZGVudCDigJQgQWdlc2lsYXVzIGRldmlzZWQgYSBzY2hlbWUgdG8gbWVldCB0aGlzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzgxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgxIj4zODEgQi5DLjwvZGF0ZT48L25vdGU+IHNpdHVhdGlvbi4KPGRhdGUgYXV0aG5hbWU9Ii0zODEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODEiPjM4MSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.3.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuZXZlciBhbnkgUGhsaWFzaWFucyBjYW1lIG91dCBvZiB0aGUgY2l0eSBlaXRoZXIgZnJvbSBmcmllbmRzaGlwIG9yIGtpbnNoaXAgd2l0aCB0aGUgZXhpbGVzLCBoZSBpbnN0cnVjdGVkIHRoZSBsYXR0ZXIgdG8gZm9ybSBjb21tb24gbWVzc2VzIG9mIHRoZWlyIG93biB3aXRoIHN1Y2ggb2YgdGhlIG5ldy1jb21lcnMgYXMgd2VyZSByZWFkeSB0byB1bmRlcnRha2UgdGhlIGFybXkgdHJhaW5pbmcsIGFuZCB0byBzdXBwbHkgbW9uZXkgZW5vdWdoIGZvciBwcm92aXNpb25zOyBoZSBhbHNvIHVyZ2VkIHRoZW0gdG8gcHJvdmlkZSBhcm1zIGZvciBhbGwgdGhlc2UgcGVvcGxlIGFuZCBub3QgdG8gaGVzaXRhdGUgdG8gYm9ycm93IG1vbmV5IGZvciB0aGlzIHB1cnBvc2UuIFRoZSBleGlsZXMgYWNjb3JkaW5nbHkgY2FycmllZCBvdXQgaGlzIGluanVuY3Rpb25zLCBhbmQgc2hvd2VkIGFzIGEgcmVzdWx0IG1vcmUgdGhhbiBhIHRob3VzYW5kIG1lbiBpbiBzcGxlbmRpZCBjb25kaXRpb24gb2YgYm9keSwgd2VsbCBkaXNjaXBsaW5lZCwgYW5kIGV4dHJlbWVseSB3ZWxsIGFybWVkOyBzbyB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyBmaW5hbGx5IHNhaWQgdGhhdCB0aGV5IGhhZCBuZWVkIG9mIHN1Y2ggZmVsbG93LXNvbGRpZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.3.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWdlc2lsYXVzLCB0aGVuLCB3YXMgb2NjdXBpZWQgd2l0aCB0aGVzZSB0aGluZ3MuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzgwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgwIj4zODAgQi5DLjwvZGF0ZT48L25vdGU+IEFzIGZvciBBZ2VzaXBvbGlzLCBoZSBhZHZhbmNlZCBzdHJhaWdodCBmcm9tIE1hY2Vkb25pYSBhbmQgaGFsdGVkIG5lYXIgdGhlIGNpdHkgb2YgdGhlIE9seW50aGlhbnMuIEFuZCB3aGVuIG5vIG9uZSB2ZW50dXJlZCB0byBjb21lIG91dCBhZ2FpbnN0IGhpbSwgaGUgdGhlbiBsYWlkIHdhc3RlIHdoYXRldmVyIHBhcnQgb2YgdGhlIE9seW50aGlhbiBjb3VudHJ5IHdhcyBsZWZ0IHVucmF2YWdlZCwgYW5kIHByb2NlZWRpbmcgaW50byB0aGUgdGVycml0b3J5IG9mIHRoZWlyIGFsbGllZCBjaXRpZXMsIGRlc3Ryb3llZCB0aGUgY29ybjsgYnV0IFRvcm9uZSBoZSBhdHRhY2tlZCBhbmQgY2FwdHVyZWQgYnkgc3Rvcm0uCjxkYXRlIGF1dGhuYW1lPSItMzgwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgwIj4zODAgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.3.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5XaGlsZSBoZSB3YXMgZW5nYWdlZCBpbiB0aGVzZSBvcGVyYXRpb25zLCBhdCBtaWRzdW1tZXIgYSBidXJuaW5nIGZldmVyIHNlaXplZCBoaW0uIEFuZCBzaW5jZSBoZSBoYWQgcHJldmlvdXNseSBzZWVuIHRoZSBzYW5jdHVhcnkgb2YgRGlvbnlzdXMgYXQgQXBoeXRpcywgYSBsb25naW5nIHRvb2sgcG9zc2Vzc2lvbiBvZiBoaW0gYXQgdGhpcyB0aW1lIGZvciBpdHMgc2hhZHkgcmVzdGluZy1wbGFjZXMgYW5kIGl0cyBjbGVhciwgY29vbCB3YXRlcnMuIEhlIHdhcyB0aGVyZWZvcmUgY2FycmllZCB0aGl0aGVyLCBzdGlsbCBsaXZpbmcsIGJ1dCwgbmV2ZXJ0aGVsZXNzLCBvbiB0aGUgc2V2ZW50aCBkYXkgZnJvbSB0aGUgdGltZSB3aGVuIGhlIGZlbGwgc2ljaywgaGUgY2FtZSB0byBoaXMgZW5kIG91dHNpZGUgdGhlIHNhbmN0dWFyeS4gQW5kIGhlIHdhcyBwbGFjZWQgaW4gaG9uZXkgYW5kIGNhcnJpZWQgaG9tZSwgYW5kIHJlY2VpdmVkIHRoZSByb3lhbCBidXJpYWwuCjwvdHJhbnNsYXRpb24+"
translation['5.3.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBBZ2VzaWxhdXMgaGVhcmQgb2YgdGhpcywgaGUgZGlkIG5vdCwgYXMgb25lIG1pZ2h0IGhhdmUgZXhwZWN0ZWQsIHJlam9pY2Ugb3ZlciBpdCwgYXMgb3ZlciB0aGUgZGVhdGggb2YgYW4gYWR2ZXJzYXJ5LCBidXQgaGUgd2VwdCwgYW5kIG1vdXJuZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zODAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zODAiPjM4MCBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlIGxvc3Mgb2YgaGlzIGNvbXBhbmlvbnNoaXA7IGZvciB0aGUga2luZ3Mgb2YgY291cnNlIGxvZGdlIHRvZ2V0aGVyIHdoZW4gdGhleSBhcmUgYXQgaG9tZS4gQW5kIEFnZXNpcG9saXMgd2FzIGEgbWFuIHdlbGwgZml0dGVkIHRvIGNvbnZlcnNlIHdpdGggQWdlc2lsYXVzIGFib3V0IHlvdXRoZnVsIGRheXMsIGh1bnRpbmcgZXhwbG9pdHMsIGhvcnNlcywgYW5kIGxvdmUgYWZmYWlyczsgYmVzaWRlcyB0aGlzIGhlIGFsc28gdHJlYXRlZCBBZ2VzaWxhdXMgd2l0aCBkZWZlcmVuY2UgaW4gdGhlaXIgYXNzb2NpYXRpb24gdG9nZXRoZXIgaW4gdGhlaXIgY29tbW9uIHF1YXJ0ZXJzLCBhcyBvbmUgd291bGQgbmF0dXJhbGx5IHRyZWF0IGFuIGVsZGVyLiBJbiB0aGUgcGxhY2UsIHRoZW4sIG9mIEFnZXNpcG9saXMgdGhlIExhY2VkYWVtb25pYW5zIHNlbnQgb3V0IFBvbHliaWFkZXMgdG8gT2x5bnRodXMgYXMgZ292ZXJub3IuCjxkYXRlIGF1dGhuYW1lPSItMzgwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzgwIj4zODAgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.3.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IEFnZXNpbGF1cyBoYWQgYWxyZWFkeSBnb25lIGJleW9uZCB0aGUgdGltZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3OSI+Mzc5IEIuQy48L2RhdGU+PC9ub3RlPiBmb3Igd2hpY2ggdGhlIGZvb2Qtc3VwcGx5IGluIFBobGl1cyB3YXMgc2FpZCB0byBzdWZmaWNlOyBmb3Igc2VsZi1yZXN0cmFpbnQgaW4gYXBwZXRpdGUgZGlmZmVycyBzbyBtdWNoIGZyb20gdW5yZXN0cmFpbmVkIGluZHVsZ2VuY2UgdGhhdCB0aGUgUGhsaWFzaWFucywgYnkgdm90aW5nIHRvIGNvbnN1bWUgaGFsZiBhcyBtdWNoIGZvb2QgYXMgYmVmb3JlIGFuZCBjYXJyeWluZyBvdXQgdGhpcyBkZWNpc2lvbiwgaGVsZCBvdXQgdW5kZXIgc2llZ2UgZm9yIHR3aWNlIGFzIGxvbmcgYSB0aW1lIGFzIHdhcyB0byBoYXZlIGJlZW4gZXhwZWN0ZWQuCjxkYXRlIGF1dGhuYW1lPSItMzc5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc5Ij4zNzkgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.3.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgY291cmFnZSBzb21ldGltZXMgZGlmZmVycyBzbyBtdWNoIGZyb20gY293YXJkaWNlIHRoYXQgYSBjZXJ0YWluIERlbHBoaW9uLCB3aG8gd2FzIHJlZ2FyZGVkIGFzIGEgYnJpbGxpYW50IG1hbiwgdGFraW5nIHRvIGhpbXNlbGYgdGhyZWUgaHVuZHJlZCBvZiB0aGUgUGhsaWFzaWFucywgd2FzIGFibGUgdG8gaG9sZCBpbiBjaGVjayB0aG9zZSB3aG8gZGVzaXJlZCB0byBtYWtlIHBlYWNlLCB3YXMgYWJsZSB0byBzaHV0IHVwIGFuZCBrZWVwIHVuZGVyIGd1YXJkIHRob3NlIHdob20gaGUgZGlzdHJ1c3RlZCwgYW5kIGhhZCB0aGUgcG93ZXIgdG8gY29tcGVsIHRoZSBtYXNzZXMgb2YgdGhlIHBlb3BsZSB0byBnbyB0byB0aGVpciBwb3N0cyBhbmQgYnkgcHV0dGluZyBzZW50aW5lbHMgb3ZlciB0aGVtIHRvIGtlZXAgdGhlc2UgcGVvcGxlIGZhaXRoZnVsLiBGcmVxdWVudGx5IGFsc28gaGUgd291bGQgc2FsbHkgZm9ydGggd2l0aCB0aGUgdGhyZWUgaHVuZHJlZCBwaWNrZWQgbWVuIGFuZCBiZWF0IG9mZiB0aGUgdHJvb3BzIG9uIGd1YXJkIGF0IG9uZSBwb2ludCBhbmQgYW5vdGhlciBvZiB0aGUgd2FsbCBvZiBjaXJjdW12YWxsYXRpb24uCjwvdHJhbnNsYXRpb24+"
translation['5.3.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBob3dldmVyLCB0aGVzZSBwaWNrZWQgbWVuIHdpdGggc2VhcmNoaW5nIGluIGV2ZXJ5IHdheSBjb3VsZCBub3QgZmluZCBmb29kIGluIHRoZSBjaXR5LCB0aGVyZXVwb24gdGhleSBzZW50IHRvIEFnZXNpbGF1cyBhbmQgYXNrZWQgaGltIHRvIGdpdmUgdGhlbSBzYWZlIGNvbmR1Y3QgZm9yIGdvaW5nIG9uIGFuIGVtYmFzc3kgdG8gTGFjZWRhZW1vbjsgZm9yIHRoZXkgc2FpZCB0aGF0IHRoZXkgaGFkIHJlc29sdmVkIHRvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc5Ij4zNzkgQi5DLjwvZGF0ZT48L25vdGU+IGxlYXZlIGl0IHRvIHRoZSBhdXRob3JpdGllcyBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgdG8gZG8gd2hhdGV2ZXIgdGhleSB3b3VsZCB3aXRoIHRoZSBjaXR5Lgo8ZGF0ZSBhdXRobmFtZT0iLTM3OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3OSI+Mzc5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['5.3.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5BZ2VzaWxhdXMsIGhvd2V2ZXIsIGFuZ2VyZWQgYmVjYXVzZSB0aGV5IHRyZWF0ZWQgaGltIGFzIG9uZSB3aXRob3V0IGF1dGhvcml0eSwgc2VudCB0byBoaXMgZnJpZW5kcyBhdCBob21lIGFuZCBhcnJhbmdlZCB0aGF0IHRoZSBkZWNpc2lvbiBhYm91dCBQaGxpdXMgc2hvdWxkIGJlIGxlZnQgdG8gaGltLCBidXQgbmV2ZXJ0aGVsZXNzIGhlIGdhdmUgc2FmZSBjb25kdWN0IHRvIHRoZSBlbWJhc3N5LiBUaGVuIGhlIGtlcHQgZ3VhcmQgd2l0aCBhIGZvcmNlIGV2ZW4gc3Ryb25nZXIgdGhhbiBiZWZvcmUsIGluIG9yZGVyIHRoYXQgbm8gb25lIG9mIHRoZSBwZW9wbGUgaW4gdGhlIGNpdHkgbWlnaHQgZXNjYXBlLiBJbiBzcGl0ZSBvZiB0aGlzLCBob3dldmVyLCBEZWxwaGlvbiwgYW5kIHdpdGggaGltIGEgYnJhbmRlZCBkZXNwZXJhZG8gd2hvIGhhZCBtYW55IHRpbWVzIHN0b2xlbiBhd2F5IHdlYXBvbnMgZnJvbSB0aGUgYmVzaWVnZXJzLCBlc2NhcGVkIGJ5IG5pZ2h0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.3.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBtZXNzZW5nZXJzIGFycml2ZWQgZnJvbSBMYWNlZGFlbW9uIHdpdGggd29yZCB0aGF0IHRoZSBzdGF0ZSBsZWZ0IGl0IHRvIEFnZXNpbGF1cyB0byBkZWNpZGUgYXMgaGUgdGhvdWdodCBiZXN0IHVwb24gbWF0dGVycyBpbiBQaGxpdXMsIEFnZXNpbGF1cyBkZWNpZGVkIGluIHRoaXMgd2F5IOKAlCB0aGF0IGZpZnR5IG1lbiBmcm9tIHRoZSByZXN0b3JlZCBleGlsZXMgYW5kIGZpZnR5IGZyb20gdGhlIHBlb3BsZSBhdCBob21lIHNob3VsZCwgaW4gdGhlIGZpcnN0IHBsYWNlLCBtYWtlIGlucXVpcnkgdG8gZGV0ZXJtaW5lIHdobyBvdWdodCBqdXN0bHkgdG8gYmUgbGVmdCBhbGl2ZSBpbiB0aGUgY2l0eSBhbmQgd2hvIG91Z2h0IHRvIGJlIHB1dCB0byBkZWF0aCwgYW5kLCBzZWNvbmRseSwgc2hvdWxkIGRyYXcgdXAgYSBjb25zdGl0dXRpb24gdW5kZXIgd2hpY2ggdG8gY29uZHVjdCB0aGUgZ292ZXJubWVudDsgYW5kIHVudGlsIHN1Y2ggdGltZSBhcyB0aGVzZSBtYXR0ZXJzIHNob3VsZCBiZSBzZXR0bGVkLCBoZSBsZWZ0IGJlaGluZCBoaW0gYSBnYXJyaXNvbiBhbmQgc2l4IG1vbnRocycgcGF5IGZvciB0aG9zZSB3aG8gY29tcG9zZWQgaXQuIEFmdGVyIGRvaW5nIGFsbCB0aGlzIGhlIGRpc21pc3NlZCB0aGUgYWxsaWVzIGFuZCBsZWQgaGlzIGNpdGl6ZW4gdHJvb3BzIGJhY2sgaG9tZS4gQW5kIHRodXMgdGhlIGFmZmFpciBvZiBQaGxpdXMgaW4gaXRzIHR1cm4gY2FtZSB0byBhIGNvbmNsdXNpb24sIGFmdGVyIGEgeWVhciBhbmQgZWlnaHQgbW9udGhzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.3.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyB0aW1lIGFsc28gUG9seWJpYWRlcyBjb21wZWxsZWQgdGhlIE9seW50aGlhbnMsIHdobyB3ZXJlIGluIGFuIGV4Y2VlZGluZ2x5IHdyZXRjaGVkIHN0YXRlIGZyb20gZmFtaW5lLCBpbmFzbXVjaCBhcyB0aGV5IGdvdCBubyBmb29kIGZyb20gdGhlaXIgb3duIGxhbmQgYW5kIG5vbmUgd2FzIGJyb3VnaHQgaW4gdG8gdGhlbSBieSBzZWEsIHRvIHNlbmQgdG8gTGFjZWRhZW1vbiB0byB0cmVhdCBmb3IgcGVhY2U7IGFuZCB0aG9zZSB3aG8gd2VudCB0aGl0aGVyLCBiZWluZyBhbWJhc3NhZG9ycyB3aXRoIGZ1bGwgcG93ZXJzLCBjb25jbHVkZWQgYSBjb21wYWN0IHRvIGNvdW50IHRoZSBzYW1lPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc5Ij4zNzkgQi5DLjwvZGF0ZT48L25vdGU+IHBlb3BsZSBlbmVtaWVzIGFuZCBmcmllbmRzIGFzIHRoZSBMYWNlZGFlbW9uaWFucyBkaWQsIHRvIGZvbGxvdyB3aGVyZXZlciB0aGV5IGxlZCB0aGUgd2F5LCBhbmQgdG8gYmUgdGhlaXIgYWxsaWVzLiBUaGVuIGFmdGVyIHRha2luZyBhbiBvYXRoIHRoYXQgdGhleSB3b3VsZCBhYmlkZSBieSB0aGlzIGNvbXBhY3QsIHRoZXkgd2VudCBiYWNrIGhvbWUuCjxkYXRlIGF1dGhuYW1lPSItMzc5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc5Ij4zNzkgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.3.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIG5vdyB0aGF0IHN1Y2Nlc3MgaGFkIHRvIHN1Y2ggYW4gZXh0ZW50IGF0dGVuZGVkIHRoZSBlZmZvcnRzIG9mIHRoZSBMYWNlZGFlbW9uaWFucyB0aGF0IHRoZSBUaGViYW5zIGFuZCB0aGUgcmVzdCBvZiB0aGUgQm9lb3RpYW5zIHdlcmUgY29tcGxldGVseSBpbiB0aGVpciBwb3dlciwgdGhlIENvcmludGhpYW5zIGhhZCBiZWNvbWUgYWJzb2x1dGVseSBmYWl0aGZ1bCwgdGhlIEFyZ2l2ZXMgaGFkIGJlZW4gaHVtYmxlZCBmb3IgdGhlIHJlYXNvbiB0aGF0IHRoZWlyIHBsZWEgb2YgdGhlIHNhY3JlZCBtb250aHMgd2FzIG5vIGxvbmdlciBvZiBhbnkgaGVscCB0byB0aGVtLCBhbmQgdGhlIEF0aGVuaWFucyB3ZXJlIGxlZnQgZGVzdGl0dXRlIG9mIGFsbGllcywgd2hpbGUgb24gdGhlIG90aGVyIGhhbmQgdGhvc2UgYW1vbmcgdGhlIGFsbGllcyBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgd2hvIGhhZCBiZWVuIHVuZnJpZW5kbHkgdG8gdGhlbSBoYWQgYmVlbiBjaGFzdGlzZWQsIGl0IHNlZW1lZCB0aGF0IHRoZXkgaGFkIGF0IGxlbmd0aCBlc3RhYmxpc2hlZCB0aGVpciBlbXBpcmUgbW9zdCBleGNlbGxlbnRseSBhbmQgc2VjdXJlbHkuCjwvdHJhbnNsYXRpb24+"
translation['5.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgb25lIGNvdWxkIG1lbnRpb24gbWFueSBvdGhlciBpbmNpZGVudHMsIGJvdGggYW1vbmcgR3JlZWtzIGFuZCBiYXJiYXJpYW5zLCB0byBwcm92ZSB0aGF0IHRoZSBnb2RzIGRvIG5vdCBmYWlsIHRvIHRha2UgaGVlZCBvZiB0aGUgd2lja2VkIG9yIG9mIHRob3NlIHdobyBkbyB1bnJpZ2h0ZW91cyB0aGluZ3M7IGJ1dCBhdCBwcmVzZW50IEkgd2lsbCBzcGVhayBvZiB0aGUgY2FzZSB3aGljaCBpcyBiZWZvcmUgbWUuIFRoZSBMYWNlZGFlbW9uaWFucywgbmFtZWx5LCB3aG8gaGFkIHN3b3JuIHRoYXQgdGhleSB3b3VsZCBsZWF2ZSB0aGUgc3RhdGVzIGluZGVwZW5kZW50LCBhZnRlciBzZWl6aW5nIHBvc3Nlc3Npb24gb2YgdGhlIEFjcm9wb2xpcyBvZiBUaGViZXMgd2VyZSBwdW5pc2hlZCBieSB0aGUgdmVyeSBtZW4sIHVuYWlkZWQsIHdobyBoYWQgYmVlbiB0aHVzIHdyb25nZWQsIGFsdGhvdWdoIGJlZm9yZSB0aGF0IHRpbWUgdGhleSBoYWQgbm90IGJlZW4gY29ucXVlcmVkIGJ5IGFueSBzaW5nbGUgb25lIG9mIGFsbCB0aGUgcGVvcGxlcyB0aGF0IGV2ZXIgZXhpc3RlZDsgd2hpbGUgYXMgZm9yIHRob3NlIGFtb25nIHRoZSBUaGViYW4gY2l0aXplbnMgd2hvIGhhZCBsZWQgdGhlbSBpbnRvIHRoZSBBY3JvcG9saXMgYW5kIGhhZCB3YW50ZWQgdGhlIHN0YXRlIHRvIGJlIGluIHN1YmplY3Rpb24gdG8gdGhlIExhY2VkYWVtb25pYW5zIGluIG9yZGVyIHRoYXQgdGhleSBtaWdodCBydWxlIGRlc3BvdGljYWxseSB0aGVtc2VsdmVzLCBqdXN0IHNldmVuIG9mIHRoZSBleGlsZXMgd2VyZSBlbm91Z2ggdG8gZGVzdHJveSB0aGUgZ292ZXJubWVudCBvZiB0aGVzZSBtZW4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc5Ij4zNzkgQi5DLjwvZGF0ZT48L25vdGU+IEhvdyBhbGwgdGhpcyBjYW1lIHRvIHBhc3MgSSB3aWxsIHByb2NlZWQgdG8gcmVsYXRlLgo8ZGF0ZSBhdXRobmFtZT0iLTM3OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3OSI+Mzc5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['5.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSB3YXMgYSBjZXJ0YWluIFBoaWxsaWRhcywgd2hvIGFjdGVkIGFzIHNlY3JldGFyeSB0byBBcmNoaWFzIGFuZCBoaXMgZmVsbG93IHBvbGVtYXJjaHM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFNlZSBub3RlIG9uIGlpLiAyNS4gSXQgc2VlbXMgbGlrZWx5IHRoYXQgdGhlIHBvbGVtYXJjaHMgd2VyZSB0aHJlZSBpbiBudW1iZXIsIGFsdGhvdWdoIEFyY2hpYXMgYW5kIFBoaWxpcHB1cyAoc2VlIGJlbG93KSBhcmUgdGhlIG9ubHkgb25lcyB3aG9tIFhlbm9waG9uIG1lbnRpb25zIGJ5IG5hbWUuPC9ub3RlPiBhbmQgaW4gb3RoZXIgd2F5cyBzZXJ2ZWQgdGhlbSwgYXMgaXQgc2VlbWVkLCBtb3N0IGV4Y2VsbGVudGx5LiBOb3cgdGhpcyBtYW4gd2VudCB0byBBdGhlbnMgb24gYSBtYXR0ZXIgb2YgYnVzaW5lc3MsIGFuZCB0aGVyZSBtZXQgTWVsb24sIG9uZSBvZiB0aGUgVGhlYmFucyBpbiBleGlsZSBhdCBBdGhlbnMgYW5kIGEgbWFuIHdobyBoYWQgYmVlbiBhbiBhY3F1YWludGFuY2Ugb2YgaGlzIGV2ZW4gYmVmb3JlIHRoaXMgdGltZS4gTWVsb24sIGFmdGVyIGxlYXJuaW5nIG9mIHRoZSBkb2luZ3Mgb2YgdGhlIHBvbGVtYXJjaCBBcmNoaWFzIGFuZCB0aGUgdHlyYW5ub3VzIHJ1bGUgb2YgUGhpbGlwcHVzLCBhbmQgZmluZGluZyBvdXQgdGhhdCBQaGlsbGlkYXMgaGF0ZWQgdGhlIGNvbmRpdGlvbnMgdGhhdCBleGlzdGVkIGF0IGhvbWUgZXZlbiBtb3JlIHRoYW4gaGUgaGltc2VsZiBkaWQsIGV4Y2hhbmdlZCBwbGVkZ2VzIHdpdGggaGltIGFuZCBjYW1lIHRvIGFuIGFncmVlbWVudCBhcyB0byBob3cgZXZlcnl0aGluZyBzaG91bGQgYmUgbWFuYWdlZC4KPC90cmFuc2xhdGlvbj4="
translation['5.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMgTWVsb24gdG9vayB3aXRoIGhpbSBzaXggb2YgdGhlIGZpdHRlc3QgbWVuIGFtb25nIHRoZSBleGlsZXMsIGFybWVkIHdpdGggZGFnZ2VycyBhbmQgbm8gb3RoZXIgd2VhcG9uLCBhbmQgaW4gdGhlIGZpcnN0IHBsYWNlIHByb2NlZWRlZCBieSBuaWdodCBpbnRvIHRoZSB0ZXJyaXRvcnkgb2YgVGhlYmVzOyB0aGVuIGFmdGVyIHNwZW5kaW5nIHRoZSBkYXkgaW4gYSBkZXNlcnRlZCBzcG90IHRoZXkgY2FtZSB0byB0aGUgY2l0eSBnYXRlcywgYXMgaWYgb24gdGhlaXIgd2F5IGJhY2sgZnJvbSB0aGUgY291bnRyeSwgYXQganVzdCB0aGUgdGltZSB3aGVuIHRoZSBsYXN0IHJldHVybmluZyBsYWJvdXJlcnMgY2FtZSBpbi4gV2hlbiB0aGV5IGhhZCBlbnRlcmVkIHRoZSBjaXR5LCB0aGV5IHNwZW50IHRoYXQgbmlnaHQgYXQgdGhlIGhvdXNlIG9mIGEgY2VydGFpbiBDaGFyb24sIGFuZCBsaWtld2lzZSBzcGVudCB0aGUgZm9sbG93aW5nIGRheSB0aGVyZS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFzIGZvciBQaGlsbGlkYXMsIHNpbmNlIHRoZSBwb2xlbWFyY2hzIGFsd2F5cyBjZWxlYnJhdGUgYSBmZXN0aXZhbCBvZiBBcGhyb2RpdGUgdXBvbiB0aGUgZXhwaXJhdGlvbiBvZiB0aGVpciB0ZXJtIG9mIG9mZmljZSwgaGUgd2FzIG1ha2luZyBhbGwgdGhlIGFycmFuZ2VtZW50cyBmb3IgdGhlbSwgYW5kIGluIHBhcnRpY3VsYXIsIGhhdmluZyBsb25nIGFnbyBwcm9taXNlZCB0byBicmluZyB0aGVtIHdvbWVuLCBhbmQgdGhlIG1vc3Qgc3RhdGVseSBhbmQgYmVhdXRpZnVsIHdvbWVuIHRoZXJlIHdlcmUgaW4gVGhlYmVzLCBoZSBzYWlkIGhlIHdvdWxkIGRvIHNvIGF0IHRoYXQgdGltZS4gQW5kIHRoZXkg4oCUIGZvciB0aGV5IHdlcmUgdGhhdCBzb3J0IG9mIG1lbiDigJQgZXhwZWN0ZWQgdG8gc3BlbmQgdGhlIG5pZ2h0IHZlcnkgcGxlYXNhbnRseS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPk5vdzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3OSI+Mzc5IEIuQy48L2RhdGU+PC9ub3RlPiB3aGVuIHRoZXkgaGFkIGRpbmVkIGFuZCB3aXRoIGhpcyB6ZWFsb3VzIGhlbHAgaGFkIHF1aWNrbHkgYmVjb21lIGRydW5rLCBhZnRlciB0aGV5IGhhZCBsb25nIHVyZ2VkIGhpbSB0byBicmluZyBpbiB0aGVpciBtaXN0cmVzc2VzIGhlIHdlbnQgb3V0IGFuZCBicm91Z2h0IE1lbG9uIGFuZCBoaXMgZm9sbG93ZXJzLCBoYXZpbmcgZHJlc3NlZCB1cCB0aHJlZSBvZiB0aGVtIGFzIG1hdHJvbnMgYW5kIHRoZSBvdGhlcnMgYXMgdGhlaXIgYXR0ZW5kYW50cy4KPGRhdGUgYXV0aG5hbWU9Ii0zNzkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzkiPjM3OSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkhlIGNvbmR1Y3RlZCB0aGVtIGFsbCB0byB0aGUgYW50ZXJvb20gYWRqb2luaW5nIHRoZSB0cmVhc3VyeSBvZiB0aGUgcG9sZW1hcmNocycgYnVpbGRpbmcsIGFuZCB0aGVuIGNhbWUgaW4gaGltc2VsZiBhbmQgdG9sZCBBcmNoaWFzIGFuZCBoaXMgY29sbGVhZ3VlcyB0aGF0IHRoZSB3b21lbiBzYWlkIHRoZXkgd291bGQgbm90IGVudGVyIGlmIGFueSBvZiB0aGUgc2VydmFudHMgd2VyZSBpbiB0aGUgcm9vbS4gQXQgdGhhdCB0aGUgcG9sZW1hcmNocyBzcGVlZGlseSBvcmRlcmVkIHRoZW0gYWxsIHRvIHdpdGhkcmF3LCB3aGlsZSBQaGlsbGlkYXMgZ2F2ZSB0aGVtIHdpbmUgYW5kIHNlbnQgdGhlbSBvZmYgdG8gdGhlIGhvdXNlIG9mIG9uZSBvZiB0aGVpciBudW1iZXIuIFRoZW4gaGUgbGVkIGluIHRoZSBzdXBwb3NlZCBjb3VydGVzYW5zIGFuZCBzZWF0ZWQgdGhlbSBvbmUgYmVzaWRlIGVhY2ggbWFuLiBBbmQgdGhlIGFncmVlbWVudCB3YXMsIHRoYXQgd2hlbiB0aGV5IHdlcmUgc2VhdGVkLCB0aGV5IHNob3VsZCB1bnZlaWwgdGhlbXNlbHZlcyBhbmQgc3RyaWtlIGF0IG9uY2UuCjwvdHJhbnNsYXRpb24+"
translation['5.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkl0IHdhcyBpbiB0aGlzIHdheSwgdGhlbiwgYXMgc29tZSB0ZWxsIHRoZSBzdG9yeSwgdGhhdCB0aGUgcG9sZW1hcmNocyB3ZXJlIGtpbGxlZCwgd2hpbGUgb3RoZXJzIHNheSB0aGF0IE1lbG9uIGFuZCBoaXMgZm9sbG93ZXJzIGNhbWUgaW4gYXMgdGhvdWdoIHRoZXkgd2VyZSByZXZlbGxlcnMgYW5kIGtpbGxlZCB0aGVtLiBBZnRlciB0aGlzIFBoaWxsaWRhcyB0b29rIHRocmVlIG9mIGhpcyBtZW4gYW5kIHByb2NlZWRlZCB0byB0aGUgaG91c2Ugb2YgTGVvbnRpYWRlcyBhbmQga25vY2tpbmcgYXQgdGhlIGRvb3IgaGUgc2FpZCB0aGF0IGhlIHdpc2hlZCB0byBnaXZlIGhpbSBhIG1lc3NhZ2UgZnJvbSB0aGUgcG9sZW1hcmNocy4gTm93IGl0IGNoYW5jZWQgdGhhdCBMZW9udGlhZGVzIGhhZCBkaW5lZCBieSBoaW1zZWxmIGFuZCB3YXMgc3RpbGwgcmVjbGluaW5nIG9uIGhpcyBjb3VjaCBhZnRlciBkaW5uZXIsIHdoaWxlIGhpcyB3aWZlIHNhdCBiZXNpZGUgaGltLCB3b3JraW5nIHdpdGggd29vbC4gQW5kIGJlbGlldmluZyBQaGlsbGlkYXMgdHJ1c3R3b3J0aHkgaGUgYmFkZSBoaW0gY29tZSBpbi4gV2hlbiB0aGUgcGFydHkgaGFkIGVudGVyZWQsIHRoZXkga2lsbGVkIExlb250aWFkZXMgYW5kIGZyaWdodGVuZWQgaGlzIHdpZmUgaW50byBzaWxlbmNlLiBBbmQgYXMgdGhleSB3ZW50IG91dCwgdGhleSBvcmRlcmVkIHRoYXQgdGhlIGRvb3Igc2hvdWxkIHJlbWFpbiBzaHV0OyBhbmQgdGhleSB0aHJlYXRlbmVkIHRoYXQgaWYgdGhleSBmb3VuZCBpdCBvcGVuLCB0aGV5IHdvdWxkIGtpbGwgYWxsIHdobyB3ZXJlIGluIHRoZSBob3VzZS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhlc2UgdGhpbmdzIGhhZCBiZWVuIGRvbmUsIFBoaWxsaWRhcyB0b29rIHR3byBvZiB0aGUgbWVuIGFuZCB3ZW50IHRvIHRoZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3OSI+Mzc5IEIuQy48L2RhdGU+PC9ub3RlPiBwcmlzb24sIGFuZCB0b2xkIHRoZSBrZWVwZXIgb2YgdGhlIHByaXNvbiB0aGF0IGhlIHdhcyBicmluZ2luZyBhIG1hbiBmcm9tIHRoZSBwb2xlbWFyY2hzIHdobyB3YXMgdG8gYmUgc2h1dCB1cC4gQW5kIGFzIHNvb24gYXMgdGhlIGtlZXBlciBvcGVuZWQgdGhlIGRvb3IsIHRoZXkgaW1tZWRpYXRlbHkga2lsbGVkIGhpbSBhbmQgcmVsZWFzZWQgdGhlIHByaXNvbmVycy4gVGhlbiB0aGV5IHNwZWVkaWx5IGFybWVkIHRoZXNlIG1lbiB3aXRoIHdlYXBvbnMgd2hpY2ggdGhleSB0b29rIGRvd24gZnJvbSB0aGUgcG9ydGljbywgYW5kLCBsZWFkaW5nIHRoZW0gdG8gdGhlIEFtcGhldW0sPGRhdGUgYXV0aG5hbWU9Ii0zNzkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzkiPjM3OSBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gVGhlIHNocmluZSBvZiB0aGUgVGhlYmFuIGhlcm8gQW1waGlvbi48L25vdGU+IG9yZGVyZWQgdGhlbSB0byBzdGFuZCB1bmRlciBhcm1zLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIHRoaXMgdGhleSBpbW1lZGlhdGVseSBtYWRlIHByb2NsYW1hdGlvbiB0byBhbGwgdGhlIFRoZWJhbnMsIGJvdGggaG9yc2VtZW4gYW5kIGhvcGxpdGVzLCB0byBjb21lIGZvcnRoIGZyb20gdGhlaXIgaG91c2VzLCBzYXlpbmcgdGhhdCB0aGUgdHlyYW50cyB3ZXJlIGRlYWQuIFRoZSBjaXRpemVucywgaG93ZXZlciwgc28gbG9uZyBhcyBuaWdodCBsYXN0ZWQsIHJlbWFpbmVkIHF1aWV0IG91dCBvZiBkaXN0cnVzdDsgYnV0IHdoZW4gZGF5IGNhbWUsIGFuZCB3aGF0IGhhZCB0YWtlbiBwbGFjZSB3YXMgZXZpZGVudCwgdGhlbiBib3RoIHRoZSBob3BsaXRlcyBhbmQgdGhlIGhvcnNlbWVuIHNwZWVkaWx5IHJ1c2hlZCBmb3J0aCB3aXRoIHRoZWlyIGFybXMgdG8gbGVuZCBhaWQuIFRoZSByZXR1cm5lZCBleGlsZXMgYWxzbyBzZW50IGhvcnNlbWVuIHRvIGZldGNoIHRoZSB0cm9vcHMgb2YgdGhlIEF0aGVuaWFucyB3aG8gd2VyZSBvbiB0aGUgYm9yZGVycyB1bmRlciB0d28gb2YgdGhlIGdlbmVyYWxzLiBBbmQgdGhlIGxhdHRlciwga25vd2luZyB0aGUgcHVycG9zZSBmb3Igd2hpY2ggdGhleSBoYWQgc2VudCBvdXQgdGhlIGhvcnNlbWVuLCBjYW1lIHRvIHRoZWlyIGFpZC4KPC90cmFuc2xhdGlvbj4="
translation['5.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoZW4gdGhlIExhY2VkYWVtb25pYW4gZ292ZXJub3IgaW4gdGhlIEFjcm9wb2xpcyBoZWFyZCB0aGUgcHJvY2xhbWF0aW9uIG9mIHRoZSBuaWdodCwgaGUgYXQgb25jZSBzZW50IHRvIFBsYXRhZWEgYW5kIFRoZXNwaWFlIGZvciBoZWxwLiBBbmQgdGhlIFRoZWJhbiBob3JzZW1lbiwgdXBvbiBwZXJjZWl2aW5nIHRoYXQgdGhlIFBsYXRhZWFucyB3ZXJlIGFwcHJvYWNoaW5nLCB3ZW50IG91dCB0byBtZWV0IHRoZW0gYW5kIGtpbGxlZCBtb3JlIHRoYW4gdHdlbnR5IG9mIHRoZW07IHRoZW4gYXMgc29vbiBhcyB0aGV5IGhhZCByZS1lbnRlcmVkIHRoZSBjaXR5IGFmdGVyIHRoaXMgYWNoaWV2ZW1lbnQsIGFuZCB0aGUgQXRoZW5pYW5zIGZyb20gdGhlIGJvcmRlcnMgaGFkIGFycml2ZWQsIHRoZXkgbWFkZSBhbiBhdHRhY2sgdXBvbiB0aGUgQWNyb3BvbGlzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiB0aG9zZSBpbiB0aGUgQWNyb3BvbGlzIHJlYWxpemVkIHRoYXQgdGhleSB3ZXJlIGZldyBpbiBudW1iZXIsIGFuZCBzYXcgdGhlIHNwaXJpdCBvZiBhbGwgd2hvIHdlcmUgY29taW5nIGFnYWluc3QgdGhlbSwg4oCUIGZvciB0aGVyZSB3ZXJlIGFsc28gb2ZmZXJzIG9mIGxhcmdlIHByaXplcyB0bzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3OSI+Mzc5IEIuQy48L2RhdGU+PC9ub3RlPiB0aG9zZSB3aG8gc2hvdWxkIGZpcnN0IGFzY2VuZCB0aGUgQWNyb3BvbGlzIOKAlCBiZWluZyBmcmlnaHRlbmVkIGluIGNvbnNlcXVlbmNlIG9mIHRoZXNlIHRoaW5ncywgdGhleSBzYWlkIHRoYXQgdGhleSB3b3VsZCB3aXRoZHJhdyBpZiB0aGUgVGhlYmFucyB3b3VsZCBhbGxvdyB0aGVtIHRvIGRvIHNvIGluIHNhZmV0eSwga2VlcGluZyB0aGVpciBhcm1zLiBBbmQgdGhlIFRoZWJhbnMgZ2xhZGx5IGdyYW50ZWQgd2hhdCB0aGV5IGFza2VkLCBhbmQgYWZ0ZXIgbWFraW5nIGEgdHJ1Y2UgYW5kIGdpdmluZyB0aGVpciBvYXRocyBsZXQgdGhlbSBnbyBmb3J0aCBvbiB0aGVzZSB0ZXJtcy4KPGRhdGUgYXV0aG5hbWU9Ii0zNzkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzkiPjM3OSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BcyB0aGV5IHdlcmUgb24gdGhlaXIgd2F5IG91dCwgaG93ZXZlciwgdGhlIGNpdGl6ZW5zIHNlaXplZCBhbmQga2lsbGVkIGFsbCB3aG9tIHRoZXkgcmVjb2duaXplZCBhcyBiZWxvbmdpbmcgdG8gdGhlIG51bWJlciBvZiB0aGVpciBwb2xpdGljYWwgZm9lcy4gVGhlcmUgd2VyZSBzb21lLCBpbmRlZWQsIHdobyB3ZXJlIHNwaXJpdGVkIGF3YXkgYW5kIHNhdmVkIGJ5IHRoZSBBdGhlbmlhbnMgd2hvIGhhZCBjb21lIGZyb20gdGhlIGJvcmRlcnMgd2l0aCB0aGVpciBzdXBwb3J0aW5nIGZvcmNlLiBCdXQgdGhlIFRoZWJhbnMgZXZlbiBzZWl6ZWQgdGhlIGNoaWxkcmVuIG9mIHRob3NlIHdobyBoYWQgYmVlbiBraWxsZWQsIHdoZW5ldmVyIHRoZXkgaGFkIGNoaWxkcmVuLCBhbmQgc2xhdWdodGVyZWQgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgTGFjZWRhZW1vbmlhbnMgbGVhcm5lZCBvZiB0aGVzZSBldmVudHMsIHRoZXkgcHV0IHRvIGRlYXRoIHRoZSBnb3Zlcm5vciB3aG8gaGFkIGFiYW5kb25lZCB0aGUgQWNyb3BvbGlzIGluc3RlYWQgb2Ygd2FpdGluZyBmb3IgdGhlIHJlbGllZiBmb3JjZSwgYW5kIGNhbGxlZCBvdXQgdGhlIGJhbiBhZ2FpbnN0IHRoZSBUaGViYW5zLiBOb3cgQWdlc2lsYXVzIHNhaWQgdGhhdCBpdCB3YXMgbW9yZSB0aGFuIGZvcnR5IHllYXJzIHNpbmNlIGhlIGhhZCBjb21lIG9mIG1pbGl0YXJ5IGFnZSwgYW5kIHBvaW50ZWQgb3V0IHRoYXQganVzdCBhcyBvdGhlciBtZW4gb2YgaGlzIGFnZSB3ZXJlIG5vIGxvbmdlciBib3VuZCB0byBzZXJ2ZSBvdXRzaWRlIHRoZWlyIG93biBjb3VudHJ5LCBzbyB0aGUgc2FtZSBsYXcgYXBwbGllZCB0byBraW5ncyBhbHNvLiBIZSwgdGhlbiwgb24gdGhpcyBwbGVhIHdvdWxkIG5vdCB1bmRlcnRha2UgdGhlIGNhbXBhaWduLiBJdCB3YXMgbm90LCBob3dldmVyLCBmb3IgdGhpcyByZWFzb24gdGhhdCBoZSBzdGF5ZWQgYXQgaG9tZSwgYnV0IGJlY2F1c2UgaGUgd2VsbCBrbmV3IHRoYXQgaWYgaGUgd2FzIGluIGNvbW1hbmQgdGhlIGNpdGl6ZW5zIHdvdWxkIHNheSB0aGF0IEFnZXNpbGF1cyB3YXMgbWFraW5nIHRyb3VibGUgZm9yIHRoZSBzdGF0ZSBpbiBvcmRlciB0aGF0IGhlIG1pZ2h0IGdpdmUgYXNzaXN0YW5jZSB0byB0eXJhbnRzLiBUaGVyZWZvcmUgaGUgbGV0IHRoZW0gZGVjaWRlIGFzIHRoZXkgd291bGQgYWJvdXQgdGhpcyBtYXR0ZXIuCjwvdHJhbnNsYXRpb24+"
translation['5.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIGVwaG9ycywgaGVhcmluZyB0aGUgc3RvcmllcyBvZiB0aG9zZSB3aG8gaGFkIGJlZW4gYmFuaXNoZWQgYWZ0ZXIgdGhlIHNsYXVnaHRlciBpbiBUaGViZXMsIHNlbnQgb3V0IENsZW9tYnJvdHVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gU3VjY2Vzc29yIG9mIEFnZXNpcG9saXMuPC9ub3RlPiDigJQgdGhpcyBiZWluZyB0aGUgZmlyc3QgdGltZSB0aGF0IGhlIGhhZCBhIGNvbW1hbmQsIOKAlCBpbiB0aGUgZGVhZCBvZiB3aW50ZXIuIE5vdzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3OSI+Mzc5IEIuQy48L2RhdGU+PC9ub3RlPiB0aGUgcm9hZCB3aGljaCBsZWFkcyB0aHJvdWdoIEVsZXV0aGVyYWUgd2FzIGd1YXJkZWQgYnkgQ2hhYnJpYXMgd2l0aCBwZWx0YXN0cyBvZiB0aGUgQXRoZW5pYW5zOyBidXQgQ2xlb21icm90dXMgY2xpbWJlZCB0aGUgbW91bnRhaW48ZGF0ZSBhdXRobmFtZT0iLTM3OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3OSI+Mzc5IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBNdC4gQ2l0aGFlcm9uLjwvbm90ZT4gYnkgdGhlIHJvYWQgbGVhZGluZyB0byBQbGF0YWVhLiBBbmQgYXQgdGhlIHN1bW1pdCBvZiB0aGUgcGFzcyBoaXMgcGVsdGFzdHMsIHdobyB3ZXJlIGxlYWRpbmcgdGhlIGFkdmFuY2UsIGZvdW5kIHRoZSBtZW4gd2hvIGhhZCBiZWVuIHJlbGVhc2VkIGZyb20gdGhlIHByaXNvbiwgYWJvdXQgb25lIGh1bmRyZWQgYW5kIGZpZnR5IGluIG51bWJlciwgb24gZ3VhcmQuIEFuZCB0aGUgcGVsdGFzdHMga2lsbGVkIHRoZW0gYWxsLCBleGNlcHQgZm9yIG9uZSBvciBhbm90aGVyIHdobyBtYXkgaGF2ZSBlc2NhcGVkOyB3aGVyZXVwb24gQ2xlb21icm90dXMgZGVzY2VuZGVkIHRvIFBsYXRhZWEsIHdoaWNoIHdhcyBzdGlsbCBmcmllbmRseS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGFmdGVyIGhlIGhhZCBhcnJpdmVkIGF0IFRoZXNwaWFlLCBoZSB3ZW50IG9uIGZyb20gdGhlcmUgdG8gQ3lub3NjZXBoYWxhZSwgd2hpY2ggYmVsb25nZWQgdG8gdGhlIFRoZWJhbnMsIGFuZCBlbmNhbXBlZC4gQnV0IGFmdGVyIHJlbWFpbmluZyB0aGVyZSBhYm91dCBzaXh0ZWVuIGRheXMgaGUgcmV0aXJlZCBhZ2FpbiB0byBUaGVzcGlhZS4gVGhlcmUgaGUgbGVmdCBTcGhvZHJpYXMgYXMgZ292ZXJub3IgYW5kIGEgdGhpcmQgcGFydCBvZiBlYWNoIGNvbnRpbmdlbnQgb2YgdGhlIGFsbGllczsgaGUgYWxzbyBnYXZlIG92ZXIgdG8gU3Bob2RyaWFzIGFsbCB0aGUgbW9uZXkgd2hpY2ggaGUgY2hhbmNlZCB0byBoYXZlIGJyb3VnaHQgZnJvbSBob21lIGFuZCBkaXJlY3RlZCBoaW0gdG8gaGlyZSBhIGZvcmNlIG9mIG1lcmNlbmFyaWVzIGJlc2lkZXMuCjwvdHJhbnNsYXRpb24+"
translation['5.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5TcGhvZHJpYXMsIHRoZW4sIHNldCBhYm91dCBkb2luZyB0aGlzLiBNZWFud2hpbGUgQ2xlb21icm90dXMgcHJvY2VlZGVkIHRvIGNvbmR1Y3QgdGhlIHNvbGRpZXJzIHVuZGVyIGhpcyBjb21tYW5kIGJhY2sgaG9tZXdhcmQgYnkgdGhlIHJvYWQgd2hpY2ggbGVhZHMgdGhyb3VnaCBDcmV1c2lzLCB0aGUgdHJvb3BzIGJlaW5nIHZhc3RseSBwdXp6bGVkIHRvIGtub3cgd2hldGhlciB0aGVyZSB3YXMgcmVhbGx5IHdhciBiZXR3ZWVuIHRoZW0gYW5kIHRoZSBUaGViYW5zLCBvciBwZWFjZTsgZm9yIGhlIGhhZCBsZWQgaGlzIGFybXkgaW50byB0aGUgY291bnRyeSBvZiB0aGUgVGhlYmFucyBhbmQgdGhlbiBkZXBhcnRlZCBhZnRlciBkb2luZyBqdXN0IGFzIGxpdHRsZSBkYW1hZ2UgYXMgaGUgY291bGQuCjwvdHJhbnNsYXRpb24+"
translation['5.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5XaGlsZSBoZSB3YXMgb24gdGhlIGhvbWV3YXJkIHdheSwgaG93ZXZlciwgYW4gZXh0cmFvcmRpbmFyeSB3aW5kIGJlc2V0IGhpbSwgd2hpY2ggc29tZSBpbmRlZWQgYXVndXJlZCB3YXMgYSBzaWduIGZvcmVzaGFkb3dpbmcgd2hhdCB3YXMgZ29pbmcgdG8gaGFwcGVuLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gVkkuIGl2LiAyLTE1Ljwvbm90ZT4gRm9yIGl0IG5vdCBvbmx5IGRpZCBtYW55IG90aGVyIHZpb2xlbnQgdGhpbmdzLCBidXQgd2hlbiBoZSBoYWQgbGVmdCBDcmV1c2lzIHdpdGggaGlzIGFybXkgYW5kIHdhcyBjcm9zc2luZyB0aGUgbW91bnRhaW4gcmlkZ2Ugd2hpY2ggcnVucyBkb3duIHRvIHRoZSBzZWEsIGl0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc5Ij4zNzkgQi5DLjwvZGF0ZT48L25vdGU+IGh1cmxlZCBkb3duIHRoZSBwcmVjaXBpY2UgZ3JlYXQgbnVtYmVycyBvZiBwYWNrYXNzZXMsIGJhZ2dhZ2UgYW5kIGFsbCwgd2hpbGUgdmVyeSBtYW55IHNoaWVsZHMgd2VyZSBzbmF0Y2hlZCBhd2F5IGZyb20gdGhlIHNvbGRpZXJzIGFuZCBmZWxsIGludG8gdGhlIHNlYS4KPGRhdGUgYXV0aG5hbWU9Ii0zNzkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzkiPjM3OSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5GaW5hbGx5IG1hbnkgb2YgdGhlIG1lbiwgdW5hYmxlIHRvIHByb2NlZWQgd2l0aCBhbGwgdGhlaXIgYXJtcywgbGVmdCB0aGVpciBzaGllbGRzIGJlaGluZCBoZXJlIGFuZCB0aGVyZSBvbiB0aGUgc3VtbWl0IG9mIHRoZSByaWRnZSwgcHV0dGluZyB0aGVtIGRvd24gb24gdGhlaXIgYmFja3MgYW5kIGZpbGxpbmcgdGhlbSB3aXRoIHN0b25lcy4gT24gdGhhdCBkYXksIHRoZW4sIHRoZXkgdG9vayBkaW5uZXIgYXMgYmVzdCB0aGV5IGNvdWxkIGF0IEFlZ29zdGhlbmEgaW4gdGhlIHRlcnJpdG9yeSBvZiBNZWdhcmE7IGFuZCBvbiB0aGUgZm9sbG93aW5nIGRheSB0aGV5IHdlbnQgYmFjayBhbmQgcmVjb3ZlcmVkIHRoZWlyIHNoaWVsZHMuIEFmdGVyIHRoaXMgYWxsIHJldHVybmVkIGF0IG9uY2UgdG8gdGhlaXIgc2V2ZXJhbCBob21lczsgZm9yIENsZW9tYnJvdHVzIGRpc21pc3NlZCB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHRoZSBBdGhlbmlhbnMsIHNlZWluZyB0aGUgcG93ZXIgb2YgdGhlIExhY2VkYWVtb25pYW5zIGFuZCB0aGF0IHRoZSB3YXIgd2FzIG5vIGxvbmdlciBpbiBDb3JpbnRoaWFuIHRlcnJpdG9yeSwgYnV0IHRoYXQgdGhlIExhY2VkYWVtb25pYW5zIHdlcmUgbm93IGdvaW5nIHBhc3QgQXR0aWNhIGFuZCBpbnZhZGluZyB0aGUgY291bnRyeSBvZiBUaGViZXMsIHdlcmUgc28gZmVhcmZ1bCB0aGF0IHRoZXkgYnJvdWdodCB0byB0cmlhbCB0aGUgdHdvIGdlbmVyYWxzIHdobyBoYWQgYmVlbiBwcml2eSB0byB0aGUgdXByaXNpbmcgb2YgTWVsb24gYWdhaW5zdCBMZW9udGlhZGVzIGFuZCBoaXMgcGFydHksIHB1dCBvbmUgb2YgdGhlbSB0byBkZWF0aCwgYW5kLCBzaW5jZSB0aGUgb3RoZXIgZGlkIG5vdCByZW1haW4gdG8gc3RhbmQgdHJpYWwsIGV4aWxlZCBoaW0uCjwvdHJhbnNsYXRpb24+"
translation['5.4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIFRoZWJhbnMsIGZvciB0aGVpciBwYXJ0LCBiZWluZyBhbHNvIGZlYXJmdWwgaW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzgiPjM3OCBCLkMuPC9kYXRlPjwvbm90ZT4gY2FzZSBubyBvdGhlcnMgZXhjZXB0IHRoZW1zZWx2ZXMgc2hvdWxkIG1ha2Ugd2FyIHVwb24gdGhlIExhY2VkYWVtb25pYW5zLCBkZXZpc2VkIHRoZSBmb2xsb3dpbmcgZXhwZWRpZW50LiBUaGV5IHBlcnN1YWRlZCBTcGhvZHJpYXMsIHRoZSBMYWNlZGFlbW9uaWFuIGdvdmVybm9yIGF0IFRoZXNwaWFlLCDigJQgYnkgZ2l2aW5nIGhpbSBtb25leSwgaXQgd2FzIHN1c3BlY3RlZCwg4oCUIHRvIGludmFkZSBBdHRpY2EsIHRoYXQgc28gaGUgbWlnaHQgaW52b2x2ZSB0aGUgQXRoZW5pYW5zIGluIHdhciB3aXRoIHRoZSBMYWNlZGFlbW9uaWFucy4gQW5kIGhlIGluIG9iZWRpZW5jZSB0byB0aGVpciBwZXJzdWFzaW9ucywgcHJvZmVzc2luZyB0aGF0IGhlIHdvdWxkIGNhcHR1cmUgUGlyYWV1cywgaW5hc211Y2ggYXMgaXQgc3RpbGwgaGFkIG5vIGdhdGVzLDxkYXRlIGF1dGhuYW1lPSItMzc4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc4Ij4zNzggQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIElWLiB2aWlpLiA5LCAxMC48L25vdGU+IGxlZCBmb3J0aCBoaXMgdHJvb3BzIGZyb20gVGhlc3BpYWUgYWZ0ZXIgdGhleSBoYWQgdGFrZW4gYW4gZWFybHkgZGlubmVyLCBzYXlpbmcgdGhhdCBoZSB3b3VsZCBmaW5pc2ggdGhlIGpvdXJuZXkgdG8gUGlyYWV1cyBiZWZvcmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzgiPjM3OCBCLkMuPC9kYXRlPjwvbm90ZT4gZGF5YnJlYWsuCjxkYXRlIGF1dGhuYW1lPSItMzc4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc4Ij4zNzggQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaGUgd2FzIHN0aWxsIGF0IFRocmlhIHdoZW4gZGF5bGlnaHQgY2FtZSB1cG9uIGhpbSwgYW5kIHRoZW4gaGUgbWFkZSBubyBlZmZvcnQgdG8gZXNjYXBlIG9ic2VydmF0aW9uLCBidXQgb24gdGhlIGNvbnRyYXJ5LCB3aGVuIGhlIGhhZCB0dXJuZWQgYWJvdXQsIHNlaXplZCBjYXR0bGUgYW5kIHBsdW5kZXJlZCBob3VzZXMuIE1lYW53aGlsZSBzb21lIG9mIHRob3NlIHdobyBmZWxsIGluIHdpdGggaGltIGR1cmluZyB0aGUgbmlnaHQgZmxlZCB0byB0aGUgY2l0eSBhbmQgcmVwb3J0ZWQgdG8gdGhlIEF0aGVuaWFucyB0aGF0IGEgdmVyeSBsYXJnZSBhcm15IHdhcyBjb21pbmcgYWdhaW5zdCB0aGVtLiBTbyB0aGV5IHNwZWVkaWx5IGFybWVkIHRoZW1zZWx2ZXMsIGJvdGggaG9yc2VtZW4gYW5kIGhvcGxpdGVzLCBhbmQga2VwdCBndWFyZCBvdmVyIHRoZSBjaXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaXQgY2hhbmNlZCBhbHNvIHRoYXQgdGhlcmUgd2VyZSBhbWJhc3NhZG9ycyBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgaW4gQXRoZW5zIGF0IHRoZSBob3VzZSBvZiBDYWxsaWFzLCB0aGVpciBkaXBsb21hdGljIGFnZW50LCDigJQgRXR5bW9jbGVzLCBBcmlzdG9sb2NodXMsIGFuZCBPY3lsbHVzOyBhbmQgd2hlbiB0aGUgbWF0dGVyIG9mIHRoZSBpbnZhc2lvbiB3YXMgcmVwb3J0ZWQsIHRoZSBBdGhlbmlhbnMgc2VpemVkIHRoZXNlIG1lbiBhbmQga2VwdCB0aGVtIHVuZGVyIGd1YXJkLCBpbiB0aGUgYmVsaWVmIHRoYXQgdGhleSB0b28gd2VyZSBjb25jZXJuZWQgaW4gdGhlIHBsb3QuIEJ1dCB0aGV5IHdlcmUgdXR0ZXJseSBkaXNtYXllZCBvdmVyIHRoZSBhZmZhaXIgYW5kIHNhaWQgaW4gdGhlaXIgZGVmZW5jZSB0aGF0IGlmIHRoZXkgaGFkIGtub3duIHRoYXQgYW4gYXR0ZW1wdCB3YXMgYmVpbmcgbWFkZSB0byBzZWl6ZSBQaXJhZXVzLCB0aGV5IHdvdWxkIG5ldmVyIGhhdmUgYmVlbiBzbyBmb29saXNoIGFzIHRvIHB1dCB0aGVtc2VsdmVzIGluIHRoZSBwb3dlciBvZiB0aGUgQXRoZW5pYW5zIGluIHRoZSBjaXR5LCBhbmQsIHN0aWxsIGxlc3MsIGF0IHRoZSBob3VzZSBvZiB0aGVpciBkaXBsb21hdGljIGFnZW50LCB3aGVyZSB0aGV5IHdvdWxkIG1vc3Qgc3BlZWRpbHkgYmUgZm91bmQuCjwvdHJhbnNsYXRpb24+"
translation['5.4.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IHNhaWQsIGZ1cnRoZXIsIHRoYXQgaXQgd291bGQgYmVjb21lIGNsZWFyIHRvIHRoZSBBdGhlbmlhbnMgYWxzbyB0aGF0IHRoZSBMYWNlZGFlbW9uaWFuIHN0YXRlIHdhcyBub3QgY29nbml6YW50IG9mIHRoaXMgYXR0ZW1wdCwgZWl0aGVyLiBGb3IgYXMgdG8gU3Bob2RyaWFzLCB0aGV5IHNhaWQgdGhleSB3ZWxsIGtuZXcgdGhhdCB0aGV5IHdvdWxkIGhlYXIgdGhhdCBoZSBoYWQgYmVlbiBwdXQgdG8gZGVhdGggYnkgdGhlIHN0YXRlLiBUaGV5IGFjY29yZGluZ2x5IHdlcmUgYWRqdWRnZWQgdG8gYmUgd2l0aG91dCBhbnkga25vd2xlZGdlIG9mIHRoZSBhZmZhaXIgYW5kIHdlcmUgcmVsZWFzZWQuCjwvdHJhbnNsYXRpb24+"
translation['5.4.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIGVwaG9ycyByZWNhbGxlZCBTcGhvZHJpYXMgYW5kIGJyb3VnaHQgY2FwaXRhbCBjaGFyZ2VzIGFnYWluc3QgaGltLiBIZSwgaG93ZXZlciwgb3V0IG9mIGZlYXIgZGlkIG5vdCBvYmV5IHRoZSBzdW1tb25zOyBidXQgbmV2ZXJ0aGVsZXNzLCBhbHRob3VnaCBoZSBkaWQgbm90IG9iZXkgYW5kIHByZXNlbnQgaGltc2VsZiBmb3IgdGhlIHRyaWFsLCBoZSB3YXMgYWNxdWl0dGVkLiBBbmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzgiPjM3OCBCLkMuPC9kYXRlPjwvbm90ZT4gaXQgc2VlbWVkIHRvIG1hbnkgdGhhdCB0aGUgZGVjaXNpb24gaW4gdGhpcyBjYXNlIHdhcyB0aGUgbW9zdCB1bmp1c3QgZXZlciBrbm93biBpbiBMYWNlZGFlbW9uLiBUaGUgcmVhc29uIGZvciBpdCB3YXMgYXMgZm9sbG93cy4KPGRhdGUgYXV0aG5hbWU9Ii0zNzgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzgiPjM3OCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.4.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3Bob2RyaWFzIGhhZCBhIHNvbiBDbGVvbnltdXMsIHdobyB3YXMgYXQgdGhlIGFnZSBqdXN0IGZvbGxvd2luZyBib3lob29kIGFuZCB3YXMsIGJlc2lkZXMsIHRoZSBoYW5kc29tZXN0IGFuZCBtb3N0IGhpZ2hseSByZWdhcmRlZCBvZiBhbGwgdGhlIHlvdXRocyBvZiBoaXMgeWVhcnMuIEFuZCBBcmNoaWRhbXVzLCB0aGUgc29uIG9mIEFnZXNpbGF1cywgY2hhbmNlZCB0byBiZSBleHRyZW1lbHkgZm9uZCBvZiBoaW0uIE5vdyB0aGUgZnJpZW5kcyBvZiBDbGVvbWJyb3R1cyB3ZXJlIHBvbGl0aWNhbCBhc3NvY2lhdGVzIG9mIFNwaG9kcmlhcywgYW5kIHdlcmUgdGhlcmVmb3JlIGluY2xpbmVkIHRvIGFjcXVpdCBoaW0sIGJ1dCB0aGV5IGZlYXJlZCBBZ2VzaWxhdXMgYW5kIGhpcyBmcmllbmRzLCBhbmQgbGlrZXdpc2UgdGhvc2Ugd2hvIHN0b29kIGJldHdlZW4gdGhlIHR3byBwYXJ0aWVzOyBmb3IgaXQgc2VlbWVkIHRoYXQgaGUgaGFkIGRvbmUgYSBkcmVhZGZ1bCBkZWVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUgU3Bob2RyaWFzIHNhaWQgdG8gQ2xlb255bXVzOiDigJxJdCBpcyB3aXRoaW4geW91ciBwb3dlciwgbXkgc29uLCB0byBzYXZlIHlvdXIgZmF0aGVyIGJ5IGJlZ2dpbmcgQXJjaGlkYW11cyB0byBtYWtlIEFnZXNpbGF1cyBmYXZvdXJhYmxlIHRvIG1lIGF0IG15IHRyaWFsLuKAnSBVcG9uIGhlYXJpbmcgdGhpcyBDbGVvbnltdXMgZ2F0aGVyZWQgY291cmFnZSB0byBnbyB0byBBcmNoaWRhbXVzIGFuZCBiZWdnZWQgaGltIGZvciBoaXMgc2FrZSB0byBiZWNvbWUgdGhlIHNhdmlvdXIgb2YgaGlzIGZhdGhlci4KPC90cmFuc2xhdGlvbj4="
translation['5.4.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiBBcmNoaWRhbXVzIHNhdyBDbGVvbnltdXMgd2VlcGluZywgaGUgd2VwdCB3aXRoIGhpbSBhcyBoZSBzdG9vZCBieSBoaXMgc2lkZTsgYW5kIHdoZW4gaGUgaGVhcmQgaGlzIHJlcXVlc3QsIGhlIHJlcGxpZWQ6IOKAnENsZW9ueW11cywgYmUgYXNzdXJlZCB0aGF0IEkgY2Fubm90IGV2ZW4gbG9vayBteSBmYXRoZXIgaW4gdGhlIGZhY2UsIGJ1dCBpZiBJIHdpc2ggdG8gYWNjb21wbGlzaCBzb21lIG9iamVjdCBpbiB0aGUgc3RhdGUsIEkgcGV0aXRpb24gZXZlcnlvbmUgZWxzZSByYXRoZXIgdGhhbiBteSBmYXRoZXI7IHlldCBuZXZlcnRoZWxlc3MsIHNpbmNlIHlvdSBzbyBiaWQgbWUsIGJlbGlldmUgdGhhdCBJIHdpbGwgdXNlIGV2ZXJ5IGVmZm9ydCB0byBhY2NvbXBsaXNoIHRoaXMgZm9yIHlvdS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['5.4.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGF0IHRpbWUsIGFjY29yZGluZ2x5LCBoZSB3ZW50IGZyb20gdGhlIHB1YmxpYyBtZXNzLXJvb20gdG8gaGlzIGhvbWUgYW5kIHJldGlyZWQgdG8gcmVzdDsgdGhlbiBoZSBhcm9zZSBhdCBkYXduIGFuZCBrZXB0IHdhdGNoLCBzbyB0aGF0IGhpcyBmYXRoZXIgc2hvdWxkIG5vdCBsZWF2ZSB0aGUgaG91c2Ugd2l0aG91dCBoaXMgbm90aWNlLiBCdXQgd2hlbiBoZSBzYXcgaGltIGdvaW5nIG91dCwgaW4gdGhlIGZpcnN0IHBsYWNlLCBpZiBhbnlvbmUgYW1vbmcgdGhlIGNpdGl6ZW5zIHdhcyBwcmVzZW50LCBoZSBnYXZlIHdheSB0byBhbGxvdyB0aGVtIHRvIGNvbnZlcnNlIHdpdGggQWdlc2lsYXVzLCBhbmQgYWdhaW4sIGlmIGl0IHdhcyBhPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc4Ij4zNzggQi5DLjwvZGF0ZT48L25vdGU+IHN0cmFuZ2VyLCBoZSBkaWQgdGhlIHNhbWUsIGFuZCBhZ2FpbiBoZSBldmVuIG1hZGUgd2F5IGZvciBhbnkgb25lIG9mIGhpcyBhdHRlbmRhbnRzIHdobyB3aXNoZWQgdG8gYWRkcmVzcyBoaW0uIEZpbmFsbHksIHdoZW4gQWdlc2lsYXVzIGNhbWUgYmFjayBmcm9tIHRoZSBFdXJvdGFzPGRhdGUgYXV0aG5hbWU9Ii0zNzgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzgiPjM3OCBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gVGhlIGdlbmVyYWwgZ2F0aGVyaW5nIHBsYWNlIG9mIHRoZSBTcGFydGFucyB3YXMgb24gdGhlIGJhbmtzIG9mIHRoZSBFdXJvdGFzLjwvbm90ZT4gYW5kIGVudGVyZWQgaGlzIGhvdXNlLCBBcmNoaWRhbXVzIHdlbnQgYXdheSB3aXRob3V0IGV2ZW4gaGF2aW5nIGFwcHJvYWNoZWQgaGltLiBPbiB0aGUgbmV4dCBkYXkgYWxzbyBoZSBhY3RlZCBpbiB0aGUgdmVyeSBzYW1lIHdheS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgQWdlc2lsYXVzLCB3aGlsZSBoZSBzdXNwZWN0ZWQgZm9yIHdoYXQgcmVhc29uIGhlIGtlcHQgZ29pbmcgdG8gYW5kIGZybyB3aXRoIGhpbSwgbmV2ZXJ0aGVsZXNzIGFza2VkIG5vIHF1ZXN0aW9uLCBidXQgbGV0IGhpbSBhbG9uZS4gQnV0IEFyY2hpZGFtdXMsIG9uIHRoZSBvdGhlciBoYW5kLCB3YXMgZWFnZXIsIG5hdHVyYWxseSBlbm91Z2gsIHRvIHNlZSBDbGVvbnltdXM7IHN0aWxsLCBoZSBkaWQgbm90IGtub3cgaG93IGhlIGNvdWxkIGdvIHRvIGhpbSB3aXRob3V0IGZpcnN0IGhhdmluZyB0YWxrZWQgd2l0aCBoaXMgZmF0aGVyIGFib3V0IHRoZSByZXF1ZXN0IHRoYXQgQ2xlb255bXVzIGhhZCBtYWRlLiBBbmQgdGhlIHBhcnRpc2FucyBvZiBTcGhvZHJpYXMsIHNpbmNlIHRoZXkgZGlkIG5vdCBzZWUgQXJjaGlkYW11cyBjb21pbmcgdG8gdmlzaXQgQ2xlb255bXVzLCB3aGVyZWFzIGZvcm1lcmx5IGhlIGhhZCBjb21lIG9mdGVuLCB3ZXJlIGluIHRoZSB1dG1vc3QgYW54aWV0eSwgZmVhcmluZyB0aGF0IGhlIGhhZCBiZWVuIHJlYnVrZWQgYnkgQWdlc2lsYXVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5GaW5hbGx5LCBob3dldmVyLCBBcmNoaWRhbXVzIGdhdGhlcmVkIGNvdXJhZ2UgdG8gYXBwcm9hY2ggQWdlc2lsYXVzIGFuZCBzYXk6IOKAnEZhdGhlciwgQ2xlb255bXVzIGJpZHMgbWUgcmVxdWVzdCB5b3UgdG8gc2F2ZSBoaXMgZmF0aGVyOyBhbmQgSSBtYWtlIHRoZSBzYW1lIHJlcXVlc3Qgb2YgeW91LCBpZiBpdCBpcyBwb3NzaWJsZS7igJ0gQW5kIEFnZXNpbGF1cyBhbnN3ZXJlZDog4oCcRm9yIHlvdXJzZWxmLCBJIGdyYW50IHlvdSBwYXJkb247IGJ1dCBob3cgY291bGQgSSBvYnRhaW4gbXkgb3duIHBhcmRvbiBmcm9tIHRoZSBzdGF0ZSBpZiBJIGZhaWxlZCB0byBwcm9ub3VuY2UgZ3VpbHR5IG9mIHdyb25nLWRvaW5nIGEgbWFuIHdobyBtYWRlIHRyYWZmaWMgZm9yIGhpbXNlbGYgdG8gdGhlIGh1cnQgb2YgdGhlIHN0YXRlLCBJIGRvIG5vdCBzZWUu4oCdCjwvdHJhbnNsYXRpb24+"
translation['5.4.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgYXQgdGhlIHRpbWUgQXJjaGlkYW11cyBzYWlkIG5vdGhpbmcgaW4gcmVwbHkgdG8gdGhlc2Ugd29yZHMsIGJ1dCB5aWVsZGluZyB0byB0aGUganVzdGljZSBvZiB0aGVtLCB3ZW50IGF3YXkuIEFmdGVyd2FyZHMsIGhvd2V2ZXIsIHdoZXRoZXIgYmVjYXVzZSBoZSBoYWQgY29uY2VpdmVkIHRoZSBpZGVhIGhpbXNlbGYgb3IgYmVjYXVzZSBpdCBoYWQgYmVlbiBzdWdnZXN0ZWQgdG8gaGltIGJ5IHNvbWUgb25lIGVsc2UsIGhlIHdlbnQgdG8gQWdlc2lsYXVzIGFuZCBzYWlkOiDigJxGYXRoZXIsIEkga25vdyB0aGF0IGlmIFNwaG9kcmlhcyBoYWQgZG9uZSBubyB3cm9uZywgeW91IHdvdWxkIGhhdmUgYWNxdWl0dGVkIGhpbTsgYnV0IGFzIGl0IGlzLCBpZiBoZSBoYXMgZG9uZSBzb21ldGhpbmcgd3JvbmcsIGxldCBoaW0gZm9yIG91ciBzYWtlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3OCI+Mzc4IEIuQy48L2RhdGU+PC9ub3RlPiBvYnRhaW4gcGFyZG9uIGF0IHlvdXIgaGFuZHMu4oCdIEFuZCBBZ2VzaWxhdXMgc2FpZDog4oCcV2VsbCwgaWYgdGhpcyBzaG91bGQgYmUgaG9ub3VyYWJsZSBmb3IgdXMsIGl0IHNoYWxsIGJlIHNvLuKAnSBVcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgQXJjaGlkYW11cyB3ZW50IGF3YXkgaW4gZ3JlYXQgZGVzcG9uZGVuY3kuCjxkYXRlIGF1dGhuYW1lPSItMzc4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc4Ij4zNzggQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.4.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgb25lIG9mIHRoZSBmcmllbmRzIG9mIFNwaG9kcmlhcyBpbiBjb252ZXJzYXRpb24gd2l0aCBFdHltb2NsZXMsIHNhaWQgdG8gaGltOiDigJxJIHN1cHBvc2Us4oCdIHNhaWQgaGUsIOKAnHRoYXQgeW91LCB0aGUgZnJpZW5kcyBvZiBBZ2VzaWxhdXMsIGFyZSBhbGwgZm9yIHB1dHRpbmcgU3Bob2RyaWFzIHRvIGRlYXRoLuKAnSBBbmQgRXR5bW9jbGVzIHJlcGxpZWQ6IOKAnEJ5IFpldXMsIHRoZW4gd2Ugc2hhbGwgbm90IGJlIGZvbGxvd2luZyB0aGUgc2FtZSBjb3Vyc2UgYXMgQWdlc2lsYXVzLCBmb3IgaGUgc2F5cyB0byBhbGwgd2l0aCB3aG9tIGhlIGhhcyBjb252ZXJzZWQgdGhlIHNhbWUgdGhpbmcsIOKAlCB0aGF0IGl0IGlzIGltcG9zc2libGUgdGhhdCBTcGhvZHJpYXMgaXMgbm90IGd1aWx0eSBvZiB3cm9uZy1kb2luZzsgYnV0IHRoYXQgd2hlbiwgYXMgY2hpbGQsIGJveSwgYW5kIHlvdW5nIG1hbiwgb25lIGhhcyBjb250aW51YWxseSBwZXJmb3JtZWQgYWxsIHRoZSBkdXRpZXMgb2YgYSBTcGFydGFuLCBpdCBpcyBhIGhhcmQgdGhpbmcgdG8gcHV0IHN1Y2ggYSBtYW4gdG8gZGVhdGg7IGZvciBTcGFydGEgaGFzIG5lZWQgb2Ygc3VjaCBzb2xkaWVycy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['5.4.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgbWFuLCB0aGVuLCB1cG9uIGhlYXJpbmcgdGhpcywgcmVwb3J0ZWQgaXQgdG8gQ2xlb255bXVzLiBBbmQgaGUsIGZpbGxlZCB3aXRoIGpveSwgd2VudCBhdCBvbmNlIHRvIEFyY2hpZGFtdXMgYW5kIHNhaWQ6IOKAnFdlIGtub3cgbm93IHRoYXQgeW91IGhhdmUgYSBjYXJlIGZvciB1czsgYW5kIGJlIHdlbGwgYXNzdXJlZCwgQXJjaGlkYW11cywgdGhhdCB3ZSBpbiBvdXIgdHVybiBzaGFsbCBzdHJpdmUgdG8gdGFrZSBjYXJlIHRoYXQgeW91IG1heSBuZXZlciBoYXZlIGNhdXNlIHRvIGJlIGFzaGFtZWQgb24gYWNjb3VudCBvZiBvdXIgZnJpZW5kc2hpcC7igJ0gQW5kIGhlIGRpZCBub3QgcHJvdmUgZmFsc2UgdG8gaGlzIHdvcmRzLCBmb3Igbm90IG9ubHkgZGlkIGhlIGFjdCBpbiBhbGwgd2F5cyBhcyBpdCBpcyBkZWVtZWQgaG9ub3VyYWJsZSBmb3IgYSBjaXRpemVuIG9mIFNwYXJ0YSB0byBhY3Qgd2hpbGUgaGUgbGl2ZWQsIGJ1dCBhdCBMZXVjdHJhLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gU2V2ZW4geWVhcnMgbGF0ZXI7Y3AuIFZJLiBpdi4gMTQuPC9ub3RlPiBmaWdodGluZyBpbiBkZWZlbmNlIG9mIGhpcyBraW5nIHdpdGggRGVpbm9uIHRoZSBwb2xlbWFyY2gsIGhlIGZlbGwgdGhyZWUgdGltZXMgYW5kIHdhcyB0aGUgZmlyc3Qgb2YgdGhlIGNpdGl6ZW5zIHRvIGxvc2UgaGlzIGxpZmUgaW4gdGhlIG1pZHN0IG9mIHRoZSBlbmVteS4gQW5kIHdoaWxlIGhpcyBkZWF0aCBjYXVzZWQgZXh0cmVtZSBncmllZiB0byBBcmNoaWRhbXVzLCBzdGlsbCwgYXMgaGUgcHJvbWlzZWQsIGhlIGRpZCBub3QgYnJpbmcgc2hhbWUgdXBvbiBoaW0sIGJ1dCByYXRoZXIgaG9ub3VyLiBJdCB3YXMgaW4gdGhpcyB3YXksIHRoZW4sIHRoYXQgU3Bob2RyaWFzIHdhcyBhY3F1aXR0ZWQuCjwvdHJhbnNsYXRpb24+"
translation['5.4.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIHRoZSBBdGhlbmlhbnMsIHRob3NlIGFtb25nIHRoZW0gd2hvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc4Ij4zNzggQi5DLjwvZGF0ZT48L25vdGU+IGZhdm91cmVkIHRoZSBCb2VvdGlhbnMgcG9pbnRlZCBvdXQgdG8gdGhlIHBlb3BsZSB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyBoYWQgbm90IG9ubHkgbm90IHB1bmlzaGVkIFNwaG9kcmlhcywgYnV0IGV2ZW4gY29tbWVuZGVkIGhpbSwgZm9yIHBsb3R0aW5nIGFnYWluc3QgQXRoZW5zLiBUaGVyZWZvcmUgdGhlIEF0aGVuaWFucyBmdXJuaXNoZWQgUGlyYWV1cyB3aXRoIGdhdGVzLCBzZXQgYWJvdXQgYnVpbGRpbmcgc2hpcHMsIGFuZCBnYXZlIGFpZCB0byB0aGUgQm9lb3RpYW5zIHdpdGggYWxsIHplYWwuCjxkYXRlIGF1dGhuYW1lPSItMzc4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc4Ij4zNzggQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.4.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgTGFjZWRhZW1vbmlhbnMgb24gdGhlaXIgc2lkZSBjYWxsZWQgb3V0IHRoZSBiYW4gYWdhaW5zdCB0aGUgVGhlYmFucywgYW5kIGJlbGlldmluZyB0aGF0IEFnZXNpbGF1cyB3b3VsZCBsZWFkIHRoZW0gd2l0aCBtb3JlIGp1ZGdtZW50IHRoYW4gQ2xlb21icm90dXMsIHJlcXVlc3RlZCBoaW0gdG8gYWN0IGFzIGNvbW1hbmRlciBvZiB0aGUgYXJteS4gQW5kIGhlLCBzYXlpbmcgdGhhdCBoZSB3b3VsZCBvZmZlciBubyBvYmplY3Rpb24gdG8gd2hhdGV2ZXIgdGhlIHN0YXRlIHRob3VnaHQgYmVzdCwgbWFkZSBoaXMgcHJlcGFyYXRpb25zIGZvciB0aGUgY2FtcGFpZ24uCjwvdHJhbnNsYXRpb24+"
translation['5.4.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaGUga25ldyB0aGF0IHVubGVzcyBvbmUgZmlyc3QgZ2FpbmVkIHBvc3Nlc3Npb24gb2YgTW91bnQgQ2l0aGFlcm9uLCBpdCB3b3VsZCBub3QgYmUgZWFzeSB0byBlZmZlY3QgYW4gZW50cmFuY2UgaW50byB0aGUgY291bnRyeSBvZiBUaGViZXM7IGhlIHRoZXJlZm9yZSwgdXBvbiBsZWFybmluZyB0aGF0IHRoZSBDbGV0b3JpYW5zIHdlcmUgYXQgd2FyIHdpdGggdGhlIE9yY2hvbWVuaWFucyBhbmQgd2VyZSBtYWludGFpbmluZyBhIGZvcmNlIG9mIG1lcmNlbmFyaWVzLCBjYW1lIHRvIGFuIGFncmVlbWVudCB3aXRoIHRoZW0gdGhhdCB0aGVpciBtZXJjZW5hcnkgZm9yY2Ugc2hvdWxkIGJlIHR1cm5lZCBvdmVyIHRvIGhpbSBpZiBoZSBoYWQgYW55IG5lZWQgb2YgaXQuCjwvdHJhbnNsYXRpb24+"
translation['5.4.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBoaXMgc2FjcmlmaWNlcyBhdCB0aGUgZnJvbnRpZXIgaGFkIHByb3ZlZCBmYXZvdXJhYmxlLCBiZWZvcmUgaGUgaGFkIGhpbXNlbGYgcmVhY2hlZCBUZWdlYSBoZSBzZW50IHRvIHRoZSBjb21tYW5kZXIgb2YgdGhlIG1lcmNlbmFyaWVzIGF0IENsZXRvciwgZ2F2ZSB0aGVtIHBheSBmb3IgYSBtb250aCwgYW5kIG9yZGVyZWQgdGhlbSB0byBvY2N1cHkgQ2l0aGFlcm9uIGluIGFkdmFuY2UuIE1lYW53aGlsZSBoZSBkaXJlY3RlZCB0aGUgT3JjaG9tZW5pYW5zIHRvIGNlYXNlIGZyb20gd2FyIHNvIGxvbmcgYXMgaGlzIGNhbXBhaWduIGxhc3RlZDsgaW5kZWVkLCBpZiBhbnkgc3RhdGUgdW5kZXJ0b29rIGFuIGV4cGVkaXRpb24gYWdhaW5zdCBhbnkgb3RoZXIgd2hpbGUgaGlzIGFybXkgd2FzIGluIHRoZSBmaWVsZCwgaGUgc2FpZCB0aGF0IGhpcyBmaXJzdCBhY3Qgd291bGQgYmUgdG8gZ28gYWdhaW5zdCB0aGF0IHN0YXRlLCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHJlc29sdXRpb24gb2YgdGhlIGFsbGllcy4KPC90cmFuc2xhdGlvbj4="
translation['5.4.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgQWdlc2lsYXVzIGhhZCBjcm9zc2VkIENpdGhhZXJvbiBhbmQgaGFkIGFycml2ZWQgYXQgVGhlc3BpYWUsIGhlIG1hZGUgdGhhdCBoaXMgYmFzZSBvZjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3OCI+Mzc4IEIuQy48L2RhdGU+PC9ub3RlPiBvcGVyYXRpb25zIGFuZCBwcm9jZWVkZWQgYWdhaW5zdCB0aGUgY291bnRyeSBvZiB0aGUgVGhlYmFucy4gV2hlbiBoZSBmb3VuZCwgaG93ZXZlciwgdGhhdCB0aGUgcGxhaW4gYW5kIHRoZSBtb3N0IHZhbHVhYmxlIHBvcnRpb25zIG9mIHRoZWlyIHRlcnJpdG9yeSBoYWQgYmVlbiBzdXJyb3VuZGVkIGJ5IGEgcHJvdGVjdGluZyB0cmVuY2ggYW5kIHN0b2NrYWRlLCBoZSBlbmNhbXBlZCBub3cgaGVyZSBhbmQgbm93IHRoZXJlLCBhbmQsIGxlYWRpbmcgZm9ydGggaGlzIGFybXkgYWZ0ZXIgYnJlYWtmYXN0LCBsYWlkIHdhc3RlIHRob3NlIHBhcnRzIG9mIHRoZSBjb3VudHJ5IHdoaWNoIHdlcmUgb24gaGlzIHNpZGUgb2YgdGhlIHN0b2NrYWRlIGFuZCB0cmVuY2guIEZvciB3aGVyZXZlciBBZ2VzaWxhdXMgYXBwZWFyZWQsIHRoZSBlbmVteSBtb3ZlZCBhbG9uZyB3aXRoaW4gdGhlIHN0b2NrYWRlIGFuZCBrZXB0IGluIGhpcyBmcm9udCwgZm9yIHRoZSBwdXJwb3NlIG9mIG9mZmVyaW5nIHJlc2lzdGFuY2UuCjxkYXRlIGF1dGhuYW1lPSItMzc4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc4Ij4zNzggQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.4.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgb25jZSwgd2hlbiBoZSB3YXMgYWxyZWFkeSB3aXRoZHJhd2luZyBpbiB0aGUgZGlyZWN0aW9uIG9mIGhpcyBjYW1wLCB0aGUgY2F2YWxyeSBvZiB0aGUgVGhlYmFucywgdXAgdG8gdGhhdCBtb21lbnQgaW52aXNpYmxlLCBzdWRkZW5seSBkYXNoZWQgb3V0IHRocm91Z2ggdGhlIGV4aXRzIHdoaWNoIGhhZCBiZWVuIG1hZGUgaW4gdGhlIHN0b2NrYWRlLCBhbmQgaW5hc211Y2ggYXMgdGhlIHBlbHRhc3RzIG9mIEFnZXNpbGF1cyB3ZXJlIGdvaW5nIGF3YXkgdG8gZGlubmVyIG9yIHdlcmUgbWFraW5nIHRoZWlyIHByZXBhcmF0aW9ucyBmb3IgZG9pbmcgc28sIHdoaWxlIHRoZSBob3JzZW1lbiB3ZXJlIHNvbWUgb2YgdGhlbSBzdGlsbCBkaXNtb3VudGVkIGFuZCBvdGhlcnMgaW4gdGhlIGFjdCBvZiBtb3VudGluZywgdGhlIFRoZWJhbnMgY2hhcmdlZCB1cG9uIHRoZW07IGFuZCB0aGV5IG5vdCBvbmx5IHN0cnVjayBkb3duIGEgbGFyZ2UgbnVtYmVyIG9mIHRoZSBwZWx0YXN0cywgYnV0IGFtb25nIHRoZSBob3JzZW1lbiBDbGVhcyBhbmQgRXBpY3lkaWRhcywgd2hvIHdlcmUgU3BhcnRpYXRhZSwgb25lIG9mIHRoZSBQZXJpb2VjaSwgRXVkaWN1cywgYW5kIHNvbWUgVGhlYmFuIGV4aWxlcywgc3VjaCBhcyBoYWQgbm90IHlldCBtb3VudGVkIHRoZWlyIGhvcnNlcy4KPC90cmFuc2xhdGlvbj4="
translation['5.4.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBBZ2VzaWxhdXMgdHVybmVkIGFib3V0IGFuZCBjYW1lIHRvIHRoZSByZXNjdWUgd2l0aCB0aGUgaG9wbGl0ZXMsIGhpcyBob3JzZW1lbiBjaGFyZ2VkIGFnYWluc3QgdGhlIGVuZW15J3MgaG9yc2VtZW4gYW5kIHRoZSBmaXJzdCB0ZW4geWVhci1jbGFzc2VzIG9mIHRoZSBob3BsaXRlcyByYW4gYWxvbmcgd2l0aCB0aGVtIHRvIHRoZSBhdHRhY2suIFRoZSBUaGViYW4gaG9yc2VtZW4sIGhvd2V2ZXIsIGFjdGVkIGxpa2UgbWVuIHdobyBoYWQgZHJ1bmsgYSBsaXR0bGUgYXQgbWlkZGF5OyBmb3IgYWx0aG91Z2ggdGhleSBhd2FpdGVkIHRoZSBvbmNvbWluZyBlbmVteSBpbiBvcmRlciB0byB0aHJvdyB0aGVpciBzcGVhcnMsIHRoZXkgdGhyZXcgYmVmb3JlIHRoZXkgd2VyZSB3aXRoaW4gcmFuZ2UuIFN0aWxsLCB0aG91Z2ggdGhleSB0dXJuZWQgYWJvdXQgYXQgc28gZ3JlYXQgYSBkaXN0YW5jZSwgdHdlbHZlIG9mIHRoZW0gd2VyZSBraWxsZWQuCjwvdHJhbnNsYXRpb24+"
translation['5.4.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBBZ2VzaWxhdXMgaGFkIG5vdGVkIHRoYXQgaXQgd2FzIGFsd2F5cyBhZnRlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3OCI+Mzc4IEIuQy48L2RhdGU+PC9ub3RlPiBicmVha2Zhc3QgdGhhdCB0aGUgZW5lbXkgYWxzbyBhcHBlYXJlZCwgaGUgb2ZmZXJlZCBzYWNyaWZpY2UgYXQgZGF5YnJlYWssIGxlZCBoaXMgYXJteSBmb3J3YXJkIGFzIHJhcGlkbHkgYXMgcG9zc2libGUsIGFuZCBwYXNzZWQgd2l0aGluIHRoZSBzdG9ja2FkZSBhdCBhbiB1bmd1YXJkZWQgcG9pbnQuIFRoZW4gaGUgZGV2YXN0YXRlZCBhbmQgYnVybmVkIHRoZSByZWdpb24gd2l0aGluIHRoZSBlbmNsb3N1cmUgdXAgdG8gdGhlIHdhbGxzIG9mIHRoZSBjaXR5LiBBZnRlciBkb2luZyB0aGlzIGFuZCB3aXRoZHJhd2luZyBhZ2FpbiB0byBUaGVzcGlhZSwgaGUgZm9ydGlmaWVkIHRoZWlyIGNpdHkgZm9yIHRoZSBUaGVzcGlhbnMuIFRoZXJlIGhlIGxlZnQgUGhvZWJpZGFzIGFzIGdvdmVybm9yLCB3aGlsZSBoZSBoaW1zZWxmIGNyb3NzZWQgdGhlIG1vdW50YWluIGFnYWluIHRvIE1lZ2FyYSwgZGlzYmFuZGVkIHRoZSBhbGxpZXMsIGFuZCBsZWQgaGlzIGNpdGl6ZW4gdHJvb3BzIGJhY2sgaG9tZS4KPGRhdGUgYXV0aG5hbWU9Ii0zNzgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzgiPjM3OCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.4.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyBQaG9lYmlkYXMgcGx1bmRlcmVkIHRoZSBUaGViYW5zIGJ5IHNlbmRpbmcgb3V0IGJhbmRzIG9mIGZyZWVib290ZXJzLCB3aGlsZSBieSBtYWtpbmcgcmFpZHMgaGUgZGV2YXN0YXRlZCB0aGVpciBsYW5kLiBUaGUgVGhlYmFucywgb24gdGhlaXIgc2lkZSwgZGVzaXJpbmcgdG8gYXZlbmdlIHRoZW1zZWx2ZXMsIG1hZGUgYW4gZXhwZWRpdGlvbiB3aXRoIHRoZWlyIGVudGlyZSBmb3JjZSBhZ2FpbnN0IHRoZSBjb3VudHJ5IG9mIHRoZSBUaGVzcGlhbnMuIEJ1dCB3aGVuIHRoZXkgd2VyZSB3aXRoaW4gdGhlIHRlcnJpdG9yeSBvZiBUaGVzcGlhZSwgUGhvZWJpZGFzIHByZXNzZWQgdGhlbSBjbG9zZSB3aXRoIGhpcyBwZWx0YXN0cyBhbmQgZGlkIG5vdCBhbGxvdyB0aGVtIHRvIHN0cmF5IGF0IGFueSBwb2ludCBmcm9tIHRoZWlyIHBoYWxhbng7IHNvIHRoYXQgdGhlIFRoZWJhbnMgaW4gZ3JlYXQgdmV4YXRpb24gcHJvY2VlZGVkIHRvIHJldHJlYXQgbW9yZSByYXBpZGx5IHRoYW4gdGhleSBoYWQgYWR2YW5jZWQsIGFuZCB0aGVpciBtdWxlLWRyaXZlcnMgYWxzbyB0aHJldyBhd2F5IHRoZSBwcm9kdWNlIHdoaWNoIHRoZXkgaGFkIHNlaXplZCBhbmQgcHVzaGVkIGZvciBob21lOyBzbyBkcmVhZGZ1bCBhIHBhbmljIGhhZCBmYWxsZW4gdXBvbiB0aGUgYXJteS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgUGhvZWJpZGFzIHByZXNzZWQgdXBvbiB0aGVtIGJvbGRseSwgaGF2aW5nIHdpdGggaGltIGhpcyBwZWx0YXN0cyBhbmQgZ2l2aW5nIG9yZGVycyB0byB0aGUgaG9wbGl0ZXMgdG8gZm9sbG93IGluIGJhdHRsZSBvcmRlci4gSW5kZWVkLCBoZSBjb25jZWl2ZWQgdGhlIGhvcGUgb2YgcHV0dGluZyB0aGUgVGhlYmFucyB0byByb3V0OyBmb3Igd2hpbGUgaGUgaGltc2VsZiB3YXMgbGVhZGluZyBvbiBzdG91dGx5LCBoZSB3YXMgZXhob3J0aW5nIHRoZSBvdGhlcnMgdG8gYXR0YWNrIHRoZSBlbmVteSBhbmQgb3JkZXJpbmcgdGhlIGhvcGxpdGVzIG9mIHRoZSBUaGVzcGlhbnMgdG8gZm9sbG93Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGUgaG9yc2VtZW4gb2YgdGhlIFRoZWJhbnMgYXMgdGhleSByZXRpcmVkIGNhbWUgdG8gYW4gaW1wYXNzYWJsZSByYXZpbmUsIHRoZXkgZmlyc3QgZ2F0aGVyZWQgdG9nZXRoZXIgYW5kIHRoZW4gdHVybmVkIHRvIGZhY2UgaGltLCBub3Qga25vd2luZyB3aGVyZSB0aGV5IGNvdWxkIGNyb3NzLiBOb3cgdGhlIHBlbHRhc3RzIHdlcmUgZmV3PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc4Ij4zNzggQi5DLjwvZGF0ZT48L25vdGU+IGluIG51bWJlcjsgdGhlIGZvcmVtb3N0IG9mIHRoZW0gd2VyZSB0aGVyZWZvcmUgc2VpemVkIHdpdGggZmVhciBvZiB0aGUgaG9yc2VtZW4gYW5kIHRvb2sgdG8gZmxpZ2h0OyBidXQgd2hlbiB0aGUgaG9yc2VtZW4sIGluIHRoZWlyIHR1cm4sIHNhdyB0aGlzLCB0aGV5IGFwcGxpZWQgdGhlIGxlc3NvbiB0aGV5IGhhZCBsZWFybmVkIGZyb20gdGhlIGZ1Z2l0aXZlcyBhbmQgYXR0YWNrZWQgdGhlbS4KPGRhdGUgYXV0aG5hbWU9Ii0zNzgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzgiPjM3OCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.4.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGVuIFBob2ViaWRhcyBhbmQgdHdvIG9yIHRocmVlIHdpdGggaGltIGZlbGwgZmlnaHRpbmcsIGFuZCB3aGVuIHRoaXMgaGFwcGVuZWQgdGhlIG1lcmNlbmFyaWVzIGFsbCB0b29rIHRvIGZsaWdodC4gQW5kIHdoZW4gYXMgdGhleSBmbGVkIHRoZXkgY2FtZSB0byB0aGUgaG9wbGl0ZXMgb2YgdGhlIFRoZXNwaWFucywgdGhlc2UgYWxzbywgdGhvdWdoIHByZXZpb3VzbHkgdGhleSBoYWQgYmVlbiBxdWl0ZSBwcm91ZGx5IGNvbmZpZGVudCB0aGF0IHRoZXkgd291bGQgbm90IGdpdmUgd2F5IGJlZm9yZSB0aGUgVGhlYmFucywgdG9vayB0byBmbGlnaHQgd2l0aG91dCBzbyBtdWNoIGFzIGJlaW5nIHB1cnN1ZWQgYXQgYWxsLiBGb3IgYnkgdGhpcyB0aW1lIGl0IHdhcyB0b28gbGF0ZSBpbiB0aGUgZGF5IGZvciBhIHB1cnN1aXQuIE5vdyBub3QgbWFueSBvZiB0aGUgVGhlc3BpYW5zIHdlcmUga2lsbGVkLCBidXQgbmV2ZXJ0aGVsZXNzIHRoZXkgZGlkIG5vdCBzdG9wIHVudGlsIHRoZXkgZ290IHdpdGhpbiB0aGVpciB3YWxsLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBhIHJlc3VsdCBvZiB0aGlzIGFmZmFpciB0aGUgc3Bpcml0cyBvZiB0aGUgVGhlYmFucyB3ZXJlIGtpbmRsZWQgYWdhaW4sIGFuZCB0aGV5IG1hZGUgZXhwZWRpdGlvbnMgdG8gVGhlc3BpYWUgYW5kIHRvIHRoZSBvdGhlciBjaXRpZXMgcm91bmQgYWJvdXQgdGhlbS4gVGhlIGRlbW9jcmF0aWMgZmFjdGlvbnMsIGhvd2V2ZXIsIHdpdGhkcmV3IGZyb20gdGhlc2UgY2l0aWVzIHRvIFRoZWJlcy4gRm9yIGluIGFsbCBvZiB0aGVtIG9saWdhcmNoaWNhbCBnb3Zlcm5tZW50cyBoYWQgYmVlbiBlc3RhYmxpc2hlZCwganVzdCBhcyBpbiBUaGViZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiwgZm9ybWVybHk7Y3AuIDEuPC9ub3RlPjsgdGhlIHJlc3VsdCB3YXMgdGhhdCB0aGUgZnJpZW5kcyBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgaW4gdGhlc2UgY2l0aWVzIHdlcmUgaW4gbmVlZCBvZiBhaWQuIEJ1dCBhZnRlciB0aGUgZGVhdGggb2YgUGhvZWJpZGFzIHRoZSBMYWNlZGFlbW9uaWFucyBtZXJlbHkgc2VudCBvdmVyIGJ5IHNlYSBhIHBvbGVtYXJjaCBhbmQgb25lIHJlZ2ltZW50LCBhbmQgdGh1cyBrZXB0IFRoZXNwaWFlIGdhcnJpc29uZWQuCjwvdHJhbnNsYXRpb24+"
translation['5.4.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgc3ByaW5nIGNhbWUsIGhvd2V2ZXIsIHRoZSBlcGhvcnMgYWdhaW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzciPjM3NyBCLkMuPC9kYXRlPjwvbm90ZT4gY2FsbGVkIG91dCB0aGUgYmFuIGFnYWluc3QgVGhlYmVzIGFuZCwganVzdCBhcyBiZWZvcmUsIHJlcXVlc3RlZCBBZ2VzaWxhdXMgdG8gdGFrZSBjb21tYW5kLiBOb3cgc2luY2UgaGUgaGVsZCB0aGUgc2FtZSB2aWV3cyBhcyBiZWZvcmUgYWJvdXQgaW52YWRpbmcgQm9lb3RpYSw8ZGF0ZSBhdXRobmFtZT0iLTM3NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NyI+Mzc3IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBTZWUgIDM2IGFib3ZlLjwvbm90ZT4gaGUgc2VudCB0byB0aGUgcG9sZW1hcmNoIGF0IFRoZXNwaWFlIGJlZm9yZSBldmVuIG9mZmVyaW5nIHRoZSBzYWNyaWZpY2UgYXQgdGhlIGZyb250aWVyIGFuZCBvcmRlcmVkIGhpbSB0byBvY2N1cHkgaW4gYWR2YW5jZSB0aGUgc3VtbWl0IG92ZXJsb29raW5nIHRoZSByb2FkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc3Ij4zNzcgQi5DLjwvZGF0ZT48L25vdGU+IHdoaWNoIGxlYWRzIG92ZXIgQ2l0aGFlcm9uIGFuZCB0byBndWFyZCBpdCB1bnRpbCBoZSBoaW1zZWxmIGFycml2ZWQuCjxkYXRlIGF1dGhuYW1lPSItMzc3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc3Ij4zNzcgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.4.48'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBoZSBoYWQgcGFzc2VkIHRoaXMgcG9pbnQgYW5kIGFycml2ZWQgYXQgUGxhdGFlYSwgaGUgcHJldGVuZGVkIHRoYXQgaGUgd2FzIGFnYWluIGdvaW5nIHRvIFRoZXNwaWFlIGZpcnN0LCBhbmQgc2VuZGluZyB0aGl0aGVyIGhlIGdhdmUgb3JkZXJzIHRoYXQgYSBtYXJrZXQgc2hvdWxkIGJlIG1hZGUgcmVhZHkgYW5kIHRoYXQgdGhlIGVtYmFzc2llcyBzaG91bGQgYXdhaXQgaGltIHRoZXJlOyBzbyB0aGF0IHRoZSBUaGViYW5zIGd1YXJkZWQgc3Ryb25nbHkgdGhlIHBhc3MgbGVhZGluZyBmcm9tIFRoZXNwaWFlIGludG8gdGhlaXIgY291bnRyeS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.49'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgb24gdGhlIGZvbGxvd2luZyBkYXkgYXQgZGF5YnJlYWssIGFmdGVyIG9mZmVyaW5nIHNhY3JpZmljZXMsIEFnZXNpbGF1cyBwcm9jZWVkZWQgYnkgdGhlIHJvYWQgdG8gRXJ5dGhyYWUuIEFuZCBhZnRlciBhY2NvbXBsaXNoaW5nIGluIG9uZSBkYXkgYSB0d28gZGF5cycgbWFyY2ggZm9yIGFuIGFybXksIGhlIHBhc3NlZCB0aGUgbGluZSBvZiB0aGUgc3RvY2thZGUgYXQgU2NvbHVzIGJlZm9yZSB0aGUgVGhlYmFucyByZXR1cm5lZCBmcm9tIGtlZXBpbmcgZ3VhcmQgYXQgdGhlIHBsYWNlIHdoZXJlIGhlIGhhZCBlbnRlcmVkIG9uIHRoZSBwcmV2aW91cyBvY2Nhc2lvbi4gSGF2aW5nIGRvbmUgdGhpcywgaGUgbGFpZCB3YXN0ZSB0aGUgcmVnaW9uIHRvIHRoZSBlYXN0IG9mIHRoZSBjaXR5IG9mIHRoZSBUaGViYW5zLCBhcyBmYXIgYXMgdGhlIHRlcnJpdG9yeSBvZiB0aGUgVGFuYWdyYWVhbnM7IGZvciBhdCB0aGF0IHRpbWUgSHlwYXRvZG9ydXMgYW5kIGhpcyBmb2xsb3dlcnMsIHdobyB3ZXJlIGZyaWVuZHMgb2YgdGhlIExhY2VkYWVtb25pYW5zLCBzdGlsbCBoZWxkIHBvc3Nlc3Npb24gb2YgVGFuYWdyYS4gQWZ0ZXIgdGhpcyBoZSBwcm9jZWVkZWQgdG8gcmV0aXJlLCBrZWVwaW5nIHRoZSB3YWxsIG9mIFRhbmFncmEgb24gaGlzIGxlZnQuCjwvdHJhbnNsYXRpb24+"
translation['5.4.50'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgdGhlIFRoZWJhbnMgY2FtZSB1cCBxdWlldGx5IGFuZCBmb3JtZWQgaW4gbGluZSBvZiBiYXR0bGUgYWdhaW5zdCBoaW0gb24gdGhlIGhpbGwgY2FsbGVkIE9sZCBXb21hbidzIEJyZWFzdCwgd2l0aCB0aGUgdHJlbmNoIGFuZCB0aGUgc3RvY2thZGUgaW4gdGhlaXIgcmVhciwgYmVsaWV2aW5nIHRoYXQgdGhpcyB3YXMgYSBnb29kIHBsYWNlIHRvIHJpc2sgYSBiYXR0bGU7IGZvciB0aGUgZ3JvdW5kIGF0IHRoaXMgcG9pbnQgd2FzIGEgcmF0aGVyIG5hcnJvdyBzdHJpcCBhbmQgaGFyZCB0byB0cmF2ZXJzZS4gV2hlbiBBZ2VzaWxhdXMgb2JzZXJ2ZWQgdGhpcywgaGUgZGlkIG5vdCBsZWFkIGhpcyBhcm15IGFnYWluc3QgdGhlbSwgYnV0IHR1cm5lZCBhc2lkZSBhbmQgcHJvY2VlZGVkIGluIHRoZSBkaXJlY3Rpb24gb2YgdGhlIGNpdHkuCjwvdHJhbnNsYXRpb24+"
translation['5.4.51'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgVGhlYmFucywgb24gdGhlIG90aGVyIGhhbmQsIGJlaW5nIHNlaXplZCB3aXRoIGZlYXIgZm9yIHRoZWlyIGNpdHksIGJlY2F1c2UgaXQgd2FzIGVtcHR5IG9mIGRlZmVuZGVycywgYWJhbmRvbmVkIHRoZSBwbGFjZSB3aGVyZSB0aGV5IHdlcmUgZHJhd24gdXAgYW5kIGh1cnJpZWQgdG93YXJkIHRoZSBjaXR5IG9uIHRoZSBydW4sIGJ5IHRoZSByb2FkIHdoaWNoIGxlYWRzIHRvIFBvdG5pYWU7IGZvciB0aGlzIHdhcyB0aGUgc2FmZXIgcm91dGUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc3Ij4zNzcgQi5DLjwvZGF0ZT48L25vdGU+IEFuZCBpdCByZWFsbHkgc2VlbWVkIHRoYXQgQWdlc2lsYXVzJyBleHBlZGllbnQgcHJvdmVkIGEgY2xldmVyIG9uZSwgZm9yIHRob3VnaCBoZSBsZWQgaGlzIGFybXkgZGlyZWN0bHkgYXdheSBmcm9tIHRoZSBlbmVteSwgaGUgY2F1c2VkIHRoZSBsYXR0ZXIgdG8gcmV0aXJlIG9uIHRoZSBydW4sIGFuZCB3aGlsZSB0aGUgZW5lbXkgcmFuIHBhc3QsIHNvbWUgb2YgaGlzIHBvbGVtYXJjaHMgd2l0aCB0aGVpciByZWdpbWVudHMgbmV2ZXJ0aGVsZXNzIHN1Y2NlZWRlZCBpbiBjaGFyZ2luZyB1cG9uIHRoZW0uCjxkYXRlIGF1dGhuYW1lPSItMzc3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc3Ij4zNzcgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.4.52'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgVGhlYmFucywgaG93ZXZlciwgaHVybGVkIHRoZWlyIHNwZWFycyBmcm9tIHRoZSBoaWxsLXRvcHMsIHNvIHRoYXQgQWx5cGV0dXMsIG9uZSBvZiB0aGUgcG9sZW1hcmNocywgd2FzIHN0cnVjayBhbmQga2lsbGVkOyBidXQgaW4gc3BpdGUgb2YgdGhhdCB0aGUgVGhlYmFucyB3ZXJlIHB1dCB0byBmbGlnaHQgZnJvbSB0aGlzIGhpbGwgYWxzby4gQ29uc2VxdWVudGx5IHRoZSBTY2lyaXRhbnMgYW5kIHNvbWUgb2YgdGhlIGhvcnNlbWVuIGNsaW1iZWQgdGhlIGhpbGwgYW5kIHNob3dlcmVkIGJsb3dzIHVwb24gdGhlIGhpbmQtbW9zdCBvZiB0aGUgVGhlYmFucyBhcyB0aGV5IHJ1c2hlZCBwYXN0IHRoZW0gdG93YXJkIHRoZSBjaXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.53'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MyIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIHRoZXkgZ290IG5lYXIgdGhlIHdhbGwsIGhvd2V2ZXIsIHRoZSBUaGViYW5zIHR1cm5lZCBhYm91dDsgYW5kIHRoZSBTY2lyaXRhbnMsIHVwb24gc2VlaW5nIHRoZW0sIGZlbGwgYmFjayBhdCBhIGZhc3RlciBwYWNlIHRoYW4gYSB3YWxrLiBOb3cgbm90IG9uZSBvZiB0aGVtIHdhcyBraWxsZWQ7IG5ldmVydGhlbGVzcywgdGhlIFRoZWJhbnMgc2V0IHVwIGEgdHJvcGh5LCBiZWNhdXNlIGFmdGVyIGNsaW1iaW5nIHRoZSBoaWxsIHRoZSBTY2lyaXRhbnMgaGFkIHJldGlyZWQuCjwvdHJhbnNsYXRpb24+"
translation['5.4.54'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgQWdlc2lsYXVzLCB3aGVuIGl0IHdhcyB0aW1lIGZvciBoaW0gdG8gZG8gc28sIGhlIHdpdGhkcmV3IGFuZCBlbmNhbXBlZCBhdCB0aGUgdmVyeSBzcG90IHdoZXJlIGhlIGhhZCBzZWVuIHRoZSBlbmVteSBkcmF3biB1cDsgdGhlbiBvbiB0aGUgZm9sbG93aW5nIGRheSBoZSBsZWQgaGlzIGFybXkgYXdheSBieSB0aGUgcm9hZCB0byBUaGVzcGlhZS4gQnV0IHNpbmNlIHRoZSBwZWx0YXN0cyB3aG8gd2VyZSBtZXJjZW5hcmllcyBpbiB0aGUgc2VydmljZSBvZiB0aGUgVGhlYmFucyBjbHVuZyBib2xkbHkgYXQgaGlzIGhlZWxzLCBhbmQga2VwdCBjYWxsaW5nIG91dCB0byBDaGFicmlhcyBiZWNhdXNlIGhlIHdhcyBub3QgZG9pbmcgdGhlIHNhbWUsIHRoZSBob3JzZW1lbiBvZiB0aGUgT2x5bnRoaWFucyDigJQgZm9yIHRoZXkgd2VyZSBub3cgc2VydmluZyB3aXRoIHRoZSBMYWNlZGFlbW9uaWFucyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlaXIgc3dvcm4gYWdyZWVtZW50IOKAlCB3aGVlbGVkIGFib3V0IGFuZCwgb25jZSBpbiBwdXJzdWl0IG9mIHRoZSBwZWx0YXN0cywgY2hhc2VkIHRoZW0gb24gdXAgYSBzbG9wZSBhbmQga2lsbGVkIHZlcnkgbWFueSBvZiB0aGVtOyBmb3Igd2hlbiBnb2luZyB1cCBhIGhpbGwgd2hlcmUgdGhlIHJpZGluZyBpcyBnb29kIGZvb3Qtc29sZGllcnMgYXJlIHF1aWNrbHkgb3ZlcnRha2VuIGJ5IGhvcnNlbWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.55'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiBBZ2VzaWxhdXMgaGFkIGFycml2ZWQgYXQgVGhlc3BpYWUsIGZpbmRpbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzciPjM3NyBCLkMuPC9kYXRlPjwvbm90ZT4gdGhhdCB0aGUgY2l0aXplbnMgd2VyZSBpbnZvbHZlZCBpbiBmYWN0aW9uYWwgc3RyaWZlLCBhbmQgdGhhdCB0aG9zZSB3aG8gc2FpZCB0aGV5IHdlcmUgc3VwcG9ydGVycyBvZiBMYWNlZGFlbW9uIHdhbnRlZCB0byBwdXQgdG8gZGVhdGggdGhlaXIgb3Bwb25lbnRzLCBvZiB3aG9tIE1lbm9uIHdhcyBvbmUsIGhlIGRpZCBub3QgYWxsb3cgdGhpcyBwcm9jZWVkaW5nOyBidXQgaGUgcmVjb25jaWxlZCB0aGVtIGFuZCBjb21wZWxsZWQgdGhlbSB0byBnaXZlIG9hdGhzIHRvIG9uZSBhbm90aGVyLCBhbmQgdGhlbiwgdGhpcyBiZWluZyBhY2NvbXBsaXNoZWQsIGhlIGNhbWUgYmFjayBhZ2FpbiBieSB3YXkgb2YgQ2l0aGFlcm9uLCB0YWtpbmcgdGhlIHJvYWQgbGVhZGluZyB0byBNZWdhcmEuIEZyb20gdGhlcmUgaGUgZGlzbWlzc2VkIHRoZSBhbGxpZXMgYW5kIGxlZCBoaXMgY2l0aXplbiB0cm9vcHMgYmFjayBob21lLgo8ZGF0ZSBhdXRobmFtZT0iLTM3NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NyI+Mzc3IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['5.4.56'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIFRoZWJhbnMgd2VyZSBub3cgZ3JlYXRseSBwaW5jaGVkIGZvciB3YW50IG9mIGNvcm4sIGJlY2F1c2UgdGhleSBoYWQgZ290IG5vIGNyb3BzIGZyb20gdGhlaXIgbGFuZCBmb3IgdHdvIHllYXJzOyB0aGV5IHRoZXJlZm9yZSBzZW50IG1lbiBhbmQgdHdvIHRyaXJlbWVzIHRvIFBhZ2FzYWUgYWZ0ZXIgY29ybiwgZ2l2aW5nIHRoZW0gdGVuIHRhbGVudHMuIEJ1dCB3aGlsZSB0aGV5IHdlcmUgYnV5aW5nIHVwIHRoZSBjb3JuLCBBbGNldGFzLCB0aGUgTGFjZWRhZW1vbmlhbiB3aG8gd2FzIGtlZXBpbmcgZ3VhcmQgaW4gT3JldXMsIG1hbm5lZCB0aHJlZSB0cmlyZW1lcywgdGFraW5nIGNhcmUgdGhhdCB0aGUgZmFjdCBzaG91bGQgbm90IGJlIHJlcG9ydGVkLiBBbmQgd2hlbiB0aGUgY29ybiB3YXMgb24gaXRzIHdheSBmcm9tIFBhZ2FzYWUsIEFsY2V0YXMgY2FwdHVyZWQgYm90aCBjb3JuIGFuZCB0cmlyZW1lcywgYW5kIG1hZGUgcHJpc29uZXJzIG9mIHRoZSBtZW4sIHdobyB3ZXJlIG5vdCBmZXdlciB0aGFuIHRocmVlIGh1bmRyZWQgaW4gbnVtYmVyLiBUaGVzZSBtZW4gaGUgdGhlbiBzaHV0IHVwIGluIHRoZSBBY3JvcG9saXMsIHdoZXJlIGhlIGhpbXNlbGYgaGFkIGhpcyBxdWFydGVycy4KPC90cmFuc2xhdGlvbj4="
translation['5.4.57'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgc2luY2UsIGFzIHRoZSBzdG9yeSByYW4sIHRoZXJlIHdhcyBhIGJveSBvZiBPcmV1cywgYW4gZXh0cmVtZWx5IGZpbmUgbGFkIHRvbywgd2hvIHdhcyBhbHdheXMgaW4gYXR0ZW5kYW5jZSB1cG9uIGhpbSwgQWxjZXRhcyB3ZW50IGRvd24gZnJvbSB0aGUgQWNyb3BvbGlzIGFuZCBvY2N1cGllZCBoaW1zZWxmIHdpdGggdGhpcyBib3kuIEFjY29yZGluZ2x5IHRoZSBwcmlzb25lcnMsIG9ic2VydmluZyBoaXMgY2FyZWxlc3NuZXNzLCBzZWl6ZWQgdGhlIEFjcm9wb2xpcywgYW5kIHRoZSBjaXR5IHJldm9sdGVkOyBzbyB0aGF0IHRoZXJlYWZ0ZXIgdGhlIFRoZWJhbnMgYnJvdWdodCBpbiBzdXBwbGllcyBvZiBjb3JuIGVhc2lseS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.58'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgdGhlIHNwcmluZyBjYW1lIG9uIGFnYWluLCBBZ2VzaWxhdXMgd2FzIGNvbmZpbmVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc2Ij4zNzYgQi5DLjwvZGF0ZT48L25vdGU+IHRvIGhpcyBiZWQuIEZvciB3aGVuIGhlIHdhcyBsZWFkaW5nIGhpcyBhcm15IGJhY2sgZnJvbSBUaGViZXMsIGFuZCwgaW4gTWVnYXJhLCB3YXMgYXNjZW5kaW5nIGZyb20gdGhlIEFwaHJvZGlzaXVtIHRvIHRoZSBnb3Zlcm5tZW50PGRhdGUgYXV0aG5hbWU9Ii0zNzYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzYiPjM3NiBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NiI+Mzc2IEIuQy48L2RhdGU+PC9ub3RlPiBidWlsZGluZywgc29tZSB2ZWluIG9yIG90aGVyIHdhcyBydXB0dXJlZCwgYW5kIHRoZSBibG9vZCBmcm9tIGhpcyBib2R5IHBvdXJlZCBpbnRvIGhpcyBzb3VuZDxkYXRlIGF1dGhuYW1lPSItMzc2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc2Ij4zNzYgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U2VlIElJSS4gaWlpLiAzIGFuZCBub3RlLjwvbm90ZT4gbGVnLiBUaGVuIGFzIHRoZSBsb3dlciBwYXJ0IG9mIGhpcyBsZWcgYmVjYW1lIGltbWVuc2VseSBzd29sbGVuIGFuZCB0aGUgcGFpbiB1bmVuZHVyYWJsZSwgYSBTeXJhY3VzYW4gc3VyZ2VvbiBvcGVuZWQgdGhlIHZlaW4gYXQgaGlzIGFua2xlLiBCdXQgd2hlbiBvbmNlIHRoZSBibG9vZCBoYWQgYmVndW4gdG8gZmxvdywgaXQgcmFuIG5pZ2h0IGFuZCBkYXksIGFuZCB3aXRoIGFsbCB0aGV5IGNvdWxkIGRvIHRoZXkgd2VyZSB1bmFibGUgdG8gY2hlY2sgdGhlIGZsb3cgdW50aWwgaGUgbG9zdCBjb25zY2lvdXNuZXNzOyB0aGVuLCBob3dldmVyLCBpdCBzdG9wcGVkLiBTbyBpdCBjYW1lIGFib3V0IHRoYXQgYWZ0ZXIgYmVpbmcgY2FycmllZCBiYWNrIHRvIExhY2VkYWVtb24gaGUgd2FzIGlsbCB0aGUgcmVzdCBvZiB0aGUgc3VtbWVyIGFuZCB0aHJvdWdob3V0IHRoZSB3aW50ZXIuCjwvdHJhbnNsYXRpb24+"
translation['5.4.59'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIExhY2VkYWVtb25pYW5zLCBob3dldmVyLCB3aGVuIHNwcmluZyB3YXMganVzdCBiZWdpbm5pbmcsIGFnYWluIGNhbGxlZCBvdXQgdGhlIGJhbiBhbmQgZGlyZWN0ZWQgQ2xlb21icm90dXMgdG8gdGFrZSBjb21tYW5kLiBOb3cgd2hlbiBoZSBhcnJpdmVkIGF0IENpdGhhZXJvbiB3aXRoIHRoZSBhcm15LCBoaXMgcGVsdGFzdHMgd2VudCBvbiBhaGVhZCBmb3IgdGhlIHB1cnBvc2Ugb2Ygb2NjdXB5aW5nIGluIGFkdmFuY2UgdGhlIGhlaWdodHMgYWJvdmUgdGhlIHJvYWQuIEJ1dCBzb21lIG9mIHRoZSBUaGViYW5zIGFuZCBBdGhlbmlhbnMgd2hvIHdlcmUgYWxyZWFkeSBpbiBwb3NzZXNzaW9uIG9mIHRoZSBzdW1taXQgYWxsb3dlZCB0aGUgcGVsdGFzdHMgdG8gcHVyc3VlIHRoZWlyIGFzY2VudCBmb3IgYSB0aW1lLCBidXQgd2hlbiB0aGV5IHdlcmUgY2xvc2UgdXBvbiB0aGVtLCByb3NlIGZyb20gdGhlaXIgY29uY2VhbG1lbnQsIHB1cnN1ZWQgdGhlbSwgYW5kIGtpbGxlZCBhYm91dCBmb3J0eS4gQWZ0ZXIgdGhpcyBoYWQgaGFwcGVuZWQsIENsZW9tYnJvdHVzLCBpbiB0aGUgYmVsaWVmIHRoYXQgaXQgd2FzIGltcG9zc2libGUgdG8gY3Jvc3Mgb3ZlciB0aGUgbW91bnRhaW4gaW50byB0aGUgY291bnRyeSBvZiB0aGUgVGhlYmFucywgbGVkIGJhY2sgYW5kIGRpc2JhbmRlZCBoaXMgYXJteS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.60'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgYWxsaWVzIGdhdGhlcmVkIHRvZ2V0aGVyIGF0IExhY2VkYWVtb24sIHNwZWVjaGVzIHdlcmUgZm9ydGhjb21pbmcgZnJvbSB0aGVtIHRvIHRoZSBlZmZlY3QgdGhhdCwgdGhyb3VnaCBzbGFja25lc3MgaW4gcHJvc2VjdXRpbmcgdGhlIHdhciwgdGhleSB3ZXJlIGdvaW5nIHRvIGJlIHdvcm4gb3V0IGJ5IGl0LiBGb3IgdGhleSBzYWlkIGl0IHdhcyB3aXRoaW4gdGhlaXIgcG93ZXIgdG8gbWFuIGZhciBtb3JlIHNoaXBzIHRoYW4gdGhlIEF0aGVuaWFucyBoYWQgYW5kIHRvIGNhcHR1cmUgdGhlaXIgY2l0eSBieSBzdGFydmF0aW9uOyBhbmQgaXQgd2FzIGFsc28gd2l0aGluIHRoZWlyIHBvd2VyIHRvIHRyYW5zcG9ydCBhbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NiI+Mzc2IEIuQy48L2RhdGU+PC9ub3RlPiBhcm15IGFjcm9zcyB0byBUaGViZXMgaW4gdGhlc2Ugc2FtZSBzaGlwcywgc3RlZXJpbmcgZm9yIFBob2NpcyBpZiB0aGV5IGNob3NlLCBvciwgaWYgdGhleSBjaG9zZSwgZm9yIENyZXVzaXMuCjxkYXRlIGF1dGhuYW1lPSItMzc2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc2Ij4zNzYgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['5.4.61'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MSIgdW5pdD0ic2VjdGlvbiIgLz5JbmZsdWVuY2VkIGJ5IHRoZXNlIGNvbnNpZGVyYXRpb25zIHRoZXkgbWFubmVkIHNpeHR5IHRyaXJlbWVzLCBhbmQgUG9sbGlzIHdhcyBtYWRlIGFkbWlyYWwgb2YgdGhlbS4gQW5kIHRob3NlIHdobyBoYWQgY29uY2VpdmVkIHRoZXNlIHZpZXdzIHdlcmUgbm90IGRpc2FwcG9pbnRlZCwgZm9yIHRoZSBBdGhlbmlhbnMgd2VyZSBpbiBmYWN0IGFzIGdvb2QgYXMgYmVzaWVnZWQ7IGZvciB3aGlsZSB0aGVpciBjb3JuIHNoaXBzIGdvdCBhcyBmYXIgYXMgR2VyYXN0dXMsIHRoZXkgd291bGQgbm90IG5vdyB2ZW50dXJlIHRvIHNhaWwgYWxvbmcgdGhlIGNvYXN0IGZyb20gdGhhdCBwb2ludCwgc2luY2UgdGhlIExhY2VkYWVtb25pYW4gZmxlZXQgd2FzIGluIHRoZSBuZWlnaGJvdXJob29kIG9mIEFlZ2luYSwgQ2VvcywgYW5kIEFuZHJvcy4gVGhlbiB0aGUgQXRoZW5pYW5zLCByZWFsaXppbmcgdGhlIG5lY2Vzc2l0eSB0aGF0IHdhcyB1cG9uIHRoZW0sIHdlbnQgb24gYm9hcmQgdGhlaXIgc2hpcHMgdGhlbXNlbHZlcywgam9pbmVkIGJhdHRsZSB3aXRoIFBvbGxpcyB1bmRlciB0aGUgbGVhZGVyc2hpcCBvZiBDaGFicmlhcywgYW5kIHdlcmUgdmljdG9yaW91cyBpbiB0aGUgYmF0dGxlLiBUaHVzIHRoZSBjb3JuIHdhcyBicm91Z2h0IGluIGZvciB0aGUgQXRoZW5pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.62'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MiIgdW5pdD0ic2VjdGlvbiIgLz5BZ2Fpbiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzUiPjM3NSBCLkMuPC9kYXRlPjwvbm90ZT4gd2hpbGUgdGhlIExhY2VkYWVtb25pYW5zIHdlcmUgcHJlcGFyaW5nIHRvIHRyYW5zcG9ydCBhbiBhcm15IGFjcm9zcyB0aGUgZ3VsZiB0byBwcm9jZWVkIGFnYWluc3QgdGhlIEJvZW90aWFucywgdGhlIFRoZWJhbnMgcmVxdWVzdGVkIHRoZSBBdGhlbmlhbnMgdG8gc2VuZCBhbiBleHBlZGl0aW9uIGFyb3VuZCBQZWxvcG9ubmVzdXMsIGJlbGlldmluZyB0aGF0IGlmIHRoaXMgd2VyZSBkb25lIGl0IHdvdWxkIG5vdCBiZSBwb3NzaWJsZSBmb3IgdGhlIExhY2VkYWVtb25pYW5zIGF0IG9uZSBhbmQgdGhlIHNhbWUgdGltZSB0byBndWFyZCB0aGVpciBvd24gY291bnRyeSBhbmQgbGlrZXdpc2UgdGhlIGFsbGllZCBjaXRpZXMgaW4gdGhlaXIgbmVpZ2hib3VyaG9vZCwgYW5kIGFsc28gdG8gc2VuZCBhY3Jvc3MgYW4gYXJteSBsYXJnZSBlbm91Z2ggdG8gb3Bwb3NlIHRoZW1zZWx2ZXMsIHRoZSBUaGViYW5zLgo8ZGF0ZSBhdXRobmFtZT0iLTM3NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NSI+Mzc1IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['5.4.63'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIEF0aGVuaWFucywgYW5ncnkgYXMgdGhleSB3ZXJlIHdpdGggdGhlIExhY2VkYWVtb25pYW5zIG9uIGFjY291bnQgb2YgU3Bob2RyaWFzJyBhY3QsIGRpZCBlYWdlcmx5IGRpc3BhdGNoIHRoZSBleHBlZGl0aW9uIGFyb3VuZCBQZWxvcG9ubmVzdXMsIG1hbm5pbmcgc2l4dHkgc2hpcHMgYW5kIGNob29zaW5nIFRpbW90aGV1cyBhcyB0aGVpciBjb21tYW5kZXIuIE5vdyBzaW5jZSB0aGUgZW5lbXkgaGFkIG5vdCBpbnZhZGVkIHRoZSB0ZXJyaXRvcnkgb2YgVGhlYmVzIGluIHRoZSB5ZWFyIHdoZW4gQ2xlb21icm90dXMgd2FzIGluIGNvbW1hbmQgb2YgdGhlIGFybXkgYW5kIGRpZCBub3QgZG8gc28gaW4gdGhlIHllYXIgd2hlbiBUaW1vdGhldXMgbWFkZSBoaXMgdm95YWdlLCB0aGUgVGhlYmFucyBib2xkbHkgdW5kZXJ0b29rIGV4cGVkaXRpb25zIGFnYWluc3QgdGhlIG5laWdoYm91cmluZyBjaXRpZXMgb2YgQm9lb3RpYSBhbmQgcmVjb3ZlcmVkIHRoZW08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzUiPjM3NSBCLkMuPC9kYXRlPjwvbm90ZT4gYSBzZWNvbmQgdGltZS4KPGRhdGUgYXV0aG5hbWU9Ii0zNzUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzUiPjM3NSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['5.4.64'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgVGltb3RoZXVzLCBhZnRlciBoZSBoYWQgc2FpbGVkIHJvdW5kIFBlbG9wb25uZXN1cyBoZSBicm91Z2h0IENvcmN5cmEgYXQgb25jZSB1bmRlciBoaXMgY29udHJvbDsgaGUgZGlkIG5vdCwgaG93ZXZlciwgZW5zbGF2ZSB0aGUgaW5oYWJpdGFudHMgb3IgYmFuaXNoIGluZGl2aWR1YWxzIG9yIGNoYW5nZSB0aGUgZ292ZXJubWVudC4gQXMgYSByZXN1bHQgb2YgdGhpcyBoZSBtYWRlIGFsbCB0aGUgc3RhdGVzIGluIHRoYXQgcmVnaW9uIG1vcmUgZmF2b3VyYWJseSBpbmNsaW5lZCB0byBoaW0uIFRoZQo8L3RyYW5zbGF0aW9uPg=="
translation['5.4.65'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NSIgdW5pdD0ic2VjdGlvbiIgLz5MYWNlZGFlbW9uaWFucywgaG93ZXZlciwgbWFubmVkIGEgZmxlZXQgdG8gb3Bwb3NlIGhpbSwgYW5kIHNlbnQgb3V0IE5pY29sb2NodXMsIGEgdmVyeSBkYXJpbmcgbWFuLCBhcyBhZG1pcmFsOyBhbmQgYXMgc29vbiBhcyBoZSBzaWdodGVkIHRoZSBzaGlwcyB1bmRlciBUaW1vdGhldXMsIGhlIGRpZCBub3QgZGVsYXksIGV2ZW4gdGhvdWdoIHNpeCBvZiBoaXMgc2hpcHMsIHRob3NlIGZyb20gQW1icmFjaWEsIHdlcmUgbm90IHdpdGggaGltLCBidXQgd2l0aCBmaWZ0eS1maXZlIHNoaXBzIGhlIGpvaW5lZCBiYXR0bGUgd2l0aCB0aG9zZSB1bmRlciBUaW1vdGhldXMsIHdoaWNoIG51bWJlcmVkIHNpeHR5LiBBbmQgYXQgdGhhdCB0aW1lIGhlIHdhcyBkZWZlYXRlZCwgYW5kIFRpbW90aGV1cyBzZXQgdXAgYSB0cm9waHkgYXQgQWx5emVpYS4KPC90cmFuc2xhdGlvbj4="
translation['5.4.66'] = ""
translation['6.1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgQXRoZW5pYW5zIGFuZCBMYWNlZGFlbW9uaWFucywgdGhlbiwgd2VyZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NSI+Mzc1IEIuQy48L2RhdGU+PC9ub3RlPiBvY2N1cGllZCB3aXRoIHRoZXNlIHRoaW5ncy4gQXMgZm9yIHRoZSBUaGViYW5zLCBhZnRlciB0aGV5IGhhZCBzdWJkdWVkIHRoZSBjaXRpZXMgaW4gQm9lb3RpYSB0aGV5IG1hZGUgYW4gZXhwZWRpdGlvbiBpbnRvIFBob2NpcyBhbHNvLiBBbmQgd2hlbiB0aGU8ZGF0ZSBhdXRobmFtZT0iLTM3NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NSI+Mzc1IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc0Ij4zNzQgQi5DLjwvZGF0ZT48L25vdGU+IFBob2NpYW5zLCBvbiB0aGVpciBzaWRlLCBzZW50IGFtYmFzc2Fkb3JzIHRvIExhY2VkYWVtb24gYW5kIHNhaWQgdGhhdCB1bmxlc3MgdGhlIExhY2VkYWVtb25pYW5zIGNhbWUgdG8gdGhlaXIgYXNzaXN0YW5jZSB0aGV5IHdvdWxkIG5vdCBiZSBhYmxlIHRvIGVzY2FwZSB5aWVsZGluZyB0byB0aGUgVGhlYmFucywgdGhlcmV1cG9uIHRoZSBMYWNlZGFlbW9uaWFucyBzZW50IENsZW9tYnJvdHVzLCB0aGUga2luZywgYWNyb3NzIHRvIFBob2NpcyBieSBzZWEsIGFuZCB3aXRoIGhpbSBmb3VyIHJlZ2ltZW50cyBvZiB0aGVpciBvd24gYW5kIHRoZSBjb3JyZXNwb25kaW5nIGNvbnRpbmdlbnRzPGRhdGUgYXV0aG5hbWU9Ii0zNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzQiPjM3NCBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gRm91ciByZWdpbWVudHMgd2FzIHR3by10aGlyZHMgb2YgdGhlIFNwYXJ0YW4gYXJteTsgZWFjaCBvbmUgb2YgdGhlIGFsbGllcyB3YXMgdGhlcmVmb3JlIHJlcXVpcmVkIHRvIHNlbmQgb3V0IHRoZSBzYW1lIGZyYWN0aW9uIG9mIGl0cyB0b3RhbCBmb3JjZXMuPC9ub3RlPiBvZiB0aGUgYWxsaWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BdCBhYm91dCB0aGlzIHRpbWUgUG9seWRhbWFzIG9mIFBoYXJzYWx1cyBhbHNvIGFycml2ZWQgZnJvbSBUaGVzc2FseSBhbmQgcHJlc2VudGVkIGhpbXNlbGYgYmVmb3JlIHRoZSBnZW5lcmFsIGFzc2VtYmx5IG9mIHRoZSBMYWNlZGFlbW9uaWFucy4gVGhpcyBtYW4gd2FzIG5vdCBvbmx5IGhlbGQgaW4gdmVyeSBoaWdoIHJlcHV0ZSB0aHJvdWdob3V0IGFsbCBUaGVzc2FseSwgYnV0IGluIGhpcyBvd24gY2l0eSB3YXMgcmVnYXJkZWQgYXMgc28gaG9ub3VyYWJsZSBhIG1hbiB0aGF0LCB3aGVuIHRoZSBQaGFyc2FsaWFucyBmZWxsIGludG8gZmFjdGlvbmFsIHN0cmlmZSwgdGhleSBwdXQgdGhlaXIgQWNyb3BvbGlzIGluIGhpcyBoYW5kcyBhbmQgZW50cnVzdGVkIHRvIGhpbSB0aGUgZHV0eSBvZiByZWNlaXZpbmcgdGhlIHJldmVudWVzLCBhbmQgb2YgZXhwZW5kaW5nLCBib3RoIGZvciByZWxpZ2lvdXMgcHVycG9zZXMgYW5kIGZvciB0aGUgYWRtaW5pc3RyYXRpb24gaW4gZ2VuZXJhbCwgYWxsIHRoZSBzdW1zIHdoaWNoIHdlcmUgcHJlc2NyaWJlZCBpbiB0aGVpciBsYXdzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBoZSBkaWQsIGluIGZhY3QsIHVzZSB0aGVzZSBmdW5kcyB0byBndWFyZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NCI+Mzc0IEIuQy48L2RhdGU+PC9ub3RlPiB0aGUgQWNyb3BvbGlzIGFuZCBrZWVwIGl0IHNhZmUgZm9yIHRoZW0sIGFuZCBsaWtld2lzZSB0byBhZG1pbmlzdGVyIHRoZWlyIG90aGVyIGFmZmFpcnMsIHJlbmRlcmluZyB0aGVtIGFuIGFjY291bnQgeWVhcmx5LiBBbmQgd2hlbmV2ZXIgdGhlcmUgd2FzIGEgZGVmaWNpdCBoZSBtYWRlIGl0IHVwIGZyb20gaGlzIG93biBwcml2YXRlIHB1cnNlLCBhbmQgd2hlbmV2ZXIgdGhlcmUgd2FzIGEgc3VycGx1cyBvZiByZXZlbnVlIGhlIHBhaWQgaGltc2VsZiBiYWNrLiBCZXNpZGVzLCBoZSB3YXMgaG9zcGl0YWJsZSBhbmQgbWFnbmlmaWNlbnQsIGFmdGVyIHRoZSBUaGVzc2FsaWFuIG1hbm5lci4gTm93IHdoZW4gdGhpcyBtYW4gYXJyaXZlZCBhdCBMYWNlZGFlbW9uIGhlIHNwb2tlIGFzIGZvbGxvd3M6CjxkYXRlIGF1dGhuYW1lPSItMzc0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc0Ij4zNzQgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxNZW4gb2YgTGFjZWRhZW1vbiwgSSBhbSB5b3VyIGRpcGxvbWF0aWMgYWdlbnQgYW5kIGBiZW5lZmFjdG9yLCc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IEEgdGl0bGUgb2YgaG9ub3VyIHdoaWNoIEdyZWVrIHN0YXRlcyBvZnRlbiBnYXZlIHRvIGFsaWVucyB3aG8gaGFkIHJlbmRlcmVkIHRoZW0gc2VydmljZS48L25vdGU+IGFzIGFsbCBteSBhbmNlc3RvcnMgaGF2ZSBiZWVuIG9mIHdob20gd2UgaGF2ZSBhbnkga25vd2xlZGdlOyBJIHRoZXJlZm9yZSBkZWVtIGl0IHByb3BlciwgaWYgSSBhbSBpbiBhbnkgZGlmZmljdWx0eSwgdG8gY29tZSB0byB5b3UsIGFuZCBpZiBhbnkgdHJvdWJsZSBpcyBnYXRoZXJpbmcgZm9yIHlvdSBpbiBUaGVzc2FseSwgdG8gbWFrZSBpdCBrbm93biB0byB5b3UuIE5vdyB5b3UgYWxzbywgSSBhbSB2ZXJ5IHN1cmUsIG9mdGVuIGhlYXIgdGhlIG5hbWUgb2YgSmFzb248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFR5cmFudCBvZiBQaGVyYWUsIGEgY2l0eSBpbiBzb3V0aC1lYXN0ZXJuIFRoZXNzYWx5Ljwvbm90ZT4gc3Bva2VuLCBmb3IgdGhlIG1hbiBoYXMgZ3JlYXQgcG93ZXIgYW5kIGlzIGZhbW91cy4gVGhpcyBtYW4sIGFmdGVyIGNvbmNsdWRpbmcgYSB0cnVjZSB3aXRoIG15IGNpdHksIGhhZCBhIG1lZXRpbmcgd2l0aCBtZSBhbmQgc3Bva2UgYXMgZm9sbG93czoKPC90cmFuc2xhdGlvbj4="
translation['6.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPmBQb2x5ZGFtYXMsIHRoYXQgSSBjb3VsZCBicmluZyBvdmVyIHlvdXIgY2l0eSwgUGhhcnNhbHVzLCBldmVuIGFnYWluc3QgaXRzIHdpbGwsIHlvdSBtYXkgY29uY2x1ZGUgZnJvbSB0aGUgZm9sbG93aW5nIGZhY3RzLiBZb3Uga25vdywnIGhlIHNhaWQsIGB0aGF0IEkgaGF2ZSBhcyBhbGxpZXMgdGhlIGdyZWF0ZXIgbnVtYmVyIGFuZCB0aGUgbGFyZ2VzdCBvZiB0aGUgY2l0aWVzIG9mIFRoZXNzYWx5OyBhbmQgSSBzdWJkdWVkIHRoZW0gd2hlbiB5b3Ugd2VyZSB3aXRoIHRoZW0gaW4gdGhlIGZpZWxkIGFnYWluc3QgbWUuIEZ1cnRoZXJtb3JlLCB5b3UgYXJlIGF3YXJlIHRoYXQgSSBoYXZlIG1lbiBvZiBvdGhlciBzdGF0ZXMgYXMgbWVyY2VuYXJpZXMgdG8gdGhlIG51bWJlciBvZiBzaXggdGhvdXNhbmQsIHdpdGggd2hvbSwgYXMgSSB0aGluaywgbm8gY2l0eSBjb3VsZCBlYXNpbHkgY29udGVuZC4gQXMgZm9yIG51bWJlcnMsJyBoZSBzYWlkLCBgb2YgY291cnNlIGFzIGdyZWF0IGEgZm9yY2UgbWlnaHQgbWFyY2ggb3V0IG9mIHNvbWUgb3RoZXIgY2l0eSBhbHNvOyBidXQgYXJtaWVzIG1hZGUgdXAgb2YgY2l0aXplbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzQiPjM3NCBCLkMuPC9kYXRlPjwvbm90ZT4gaW5jbHVkZSBtZW4gd2hvIGFyZSBhbHJlYWR5IGFkdmFuY2VkIGluIHllYXJzIGFuZCBvdGhlcnMgd2hvIGhhdmUgbm90IHlldCBjb21lIHRvIHRoZWlyIHByaW1lLiBGdXJ0aGVybW9yZSwgaW4gZXZlcnkgY2l0eSB2ZXJ5IGZldyBtZW4gdHJhaW4gdGhlaXIgYm9kaWVzLCBidXQgYW1vbmcgbXkgbWVyY2VuYXJpZXMgbm8gb25lIHNlcnZlcyB1bmxlc3MgaGUgaXMgYWJsZSB0byBlbmR1cmUgYXMgc2V2ZXJlIHRvaWxzIGFzIEkgbXlzZWxmLicKPGRhdGUgYXV0aG5hbWU9Ii0zNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzQiPjM3NCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBoZSBoaW1zZWxmIOKAlCBmb3IgSSBtdXN0IHRlbGwgeW91IHRoZSB0cnV0aCDigJQgaXMgZXhjZWVkaW5nbHkgc3Ryb25nIG9mIGJvZHkgYW5kIGEgbG92ZXIgb2YgdG9pbCBiZXNpZGVzLiBJbmRlZWQsIGhlIG1ha2VzIHRyaWFsIGV2ZXJ5IGRheSBvZiB0aGUgbWVuIHVuZGVyIGhpbSwgZm9yIGluIGZ1bGwgYXJtb3VyIGhlIGxlYWRzIHRoZW0sIGJvdGggb24gdGhlIHBhcmFkZS1ncm91bmQgYW5kIHdoZW5ldmVyIGhlIGlzIG9uIGEgY2FtcGFpZ24gYW55d2hlcmUuIEFuZCB3aG9tc29ldmVyIGFtb25nIGhpcyBtZXJjZW5hcmllcyBoZSBmaW5kcyB0byBiZSB3ZWFrbGluZ3MgaGUgY2FzdHMgb3V0LCBidXQgd2hvbXNvZXZlciBoZSBzZWVzIHRvIGJlIGZvbmQgb2YgdG9pbCBhbmQgZm9uZCBvZiB0aGUgZGFuZ2VycyBvZiB3YXIgaGUgcmV3YXJkcywgc29tZSB3aXRoIGRvdWJsZSBwYXksIG90aGVycyB3aXRoIHRyaXBsZSBwYXksIG90aGVycyBldmVuIHdpdGggcXVhZHJ1cGxlIHBheSwgYW5kIHdpdGggZ2lmdHMgYmVzaWRlcywgYXMgd2VsbCBhcyB3aXRoIGNhcmUgaW4gc2lja25lc3MgYW5kIG1hZ25pZmljZW5jZSBpbiBidXJpYWw7IHNvIHRoYXQgYWxsIHRoZSBtZXJjZW5hcmllcyBpbiBoaXMgc2VydmljZSBrbm93IHRoYXQgbWFydGlhbCBwcm93ZXNzIGFzc3VyZXMgdG8gdGhlbSBhIGxpZmUgb2YgZ3JlYXRlc3QgaG9ub3VyIGFuZCBhYnVuZGFuY2UuCjwvdHJhbnNsYXRpb24+"
translation['6.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxIZSBwb2ludGVkIG91dCB0byBtZSwgZnVydGhlciwgYWx0aG91Z2ggSSBrbmV3IGl0IGJlZm9yZSwgdGhhdCBoZSBhbHJlYWR5IGhhZCBhcyBzdWJqZWN0cyB0aGUgTWFyYWNpYW5zLCB0aGUgRG9sb3BpYW5zLCBhbmQgQWxjZXRhcywgdGhlIHJ1bGVyIGluIEVwaXJ1cy4gYFRoZXJlZm9yZSwnIGhlIHNhaWQsIGB3aGF0IGhhdmUgSSB0byBmZWFyIHRoYXQgSSBzaG91bGQgbm90IGV4cGVjdCB0byBzdWJkdWUgeW91IGVhc2lseT8gVG8gYmUgc3VyZSwgb25lIHdobyBkaWQgbm90IGtub3cgbWUgbWlnaHQgcGVyaGFwcyByZXRvcnQsIOKAnFRoZW4gd2h5IGRvIHlvdSBkZWxheSwgaW5zdGVhZCBvZiBwcm9zZWN1dGluZyB5b3VyIGNhbXBhaWduIGFnYWluc3QgdGhlIFBoYXJzYWxpYW5zIGF0IG9uY2U/4oCdIEJlY2F1c2UsIGJ5IFpldXMsIGl0IHNlZW1zIHRvIG1lIHRvIGJlIGFsdG9nZXRoZXIgYmV0dGVyIHRvIGJyaW5nIHlvdSBvdmVyIHRvIG15IHNpZGUgd2lsbGluZ2x5IHJhdGhlciB0aGFuIHVud2lsbGluZ2x5LiBGb3IgaWYgeW91IHdlcmUgY29uc3RyYWluZWQgYnkgZm9yY2UsIHlvdSwgb24gdGhlIG9uZSBoYW5kLCB3b3VsZCBiZSBwbGFubmluZyB3aGF0ZXZlciBoYXJtIHlvdSBjb3VsZCBhZ2FpbnN0IG1lLCBhbmQgSSwgb24gdGhlIG90aGVyLCBzaG91bGQgYmUgd2FudGluZyB0byBrZWVwIHlvdSBhcyB3ZWFrIGFzIEkgY291bGQ7PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc0Ij4zNzQgQi5DLjwvZGF0ZT48L25vdGU+IGJ1dCBpZiBpdCB3YXMgdGhyb3VnaCBwZXJzdWF0aW9uIHRoYXQgeW91IGpvaW5lZCB3aXRoIG1lLCBpdCBpcyBjbGVhciB0aGF0IHdlIHNob3VsZCBhZHZhbmNlIG9uZSBhbm90aGVyJ3MgaW50ZXJlc3RzIHRvIHRoZSBiZXN0IG9mIG91ciBhYmlsaXR5Lgo8ZGF0ZSBhdXRobmFtZT0iLTM3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NCI+Mzc0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk5vdyBJIGtub3csIFBvbHlkYW1hcywgdGhhdCB5b3VyIGNpdHkgbG9va3MgdG8geW91LCBhbmQgaWYgeW91IG1ha2UgaGVyIGZyaWVuZGx5IHRvIG1lIEkgcHJvbWlzZSB5b3UsJyBoZSBzYWlkLCBgdGhhdCBJIHdpbGwgbWFrZSB5b3UgdGhlIGdyZWF0ZXN0LCBuZXh0IHRvIG15c2VsZiwgb2YgYWxsIHRoZSBtZW4gaW4gR3JlZWNlOyBhbmQgd2hhdCBtYW5uZXIgb2YgZm9ydHVuZSBpdCBpcyB3aGVyZWluIEkgb2ZmZXIgeW91IHRoZSBzZWNvbmQgcGxhY2UsIGhlYXIgZnJvbSBtZSwgYW5kIGJlbGlldmUgbm90aGluZyB0aGF0IEkgc2F5IHVubGVzcyB1cG9uIGNvbnNpZGVyYXRpb24gaXQgYXBwZWFycyB0byB5b3UgdHJ1ZS4gV2VsbCwgdGhlbiwgdGhpcyBpcyBwbGFpbiB0byB1cywgdGhhdCBpZiBQaGFyc2FsdXMgYW5kIHRoZSBjaXRpZXMgd2hpY2ggYXJlIGRlcGVuZGVudCB1cG9uIHlvdSBzaG91bGQgYmUgYWRkZWQgdG8gbXkgcG93ZXIsIEkgY291bGQgZWFzaWx5IGJlY29tZSBUYWd1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gT3Zlci1sb3JkLCBhIFRoZXNzYWxpYW4gdGl0bGUuPC9ub3RlPiBvZiBhbGwgdGhlIFRoZXNzYWxpYW5zOyBhbmQsIGZ1cnRoZXIsIHRoYXQgd2hlbmV2ZXIgVGhlc3NhbHkgaXMgdW5kZXIgYSBUYWd1cywgaGVyIGhvcnNlbWVuIGFtb3VudCB0byBzaXggdGhvdXNhbmQgYW5kIG1vcmUgdGhhbiB0ZW4gdGhvdXNhbmQgbWVuIGJlY29tZSBob3BsaXRlcy4KPC90cmFuc2xhdGlvbj4="
translation['6.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIEkgc2VlIGJvdGggdGhlaXIgYm9kaWVzIGFuZCB0aGVpciBoaWdoIHNwaXJpdCwgSSB0aGluayB0aGF0IGlmIG9uZSBzaG91bGQgaGFuZGxlIHRoZW0gcmlnaHRseSwgdGhlcmUgd291bGQgYmUgbm8gcGVvcGxlIHRvIHdob20gdGhlIFRoZXNzYWxpYW5zIHdvdWxkIGRlaWduIHRvIGJlIHN1YmplY3QuIEFnYWluLCB3aGlsZSBUaGVzc2FseSBpcyBhbiBleGNlZWRpbmdseSBmbGF0IGxhbmQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBUaGVyZWZvcmUgVGhlc3NhbHkgd2FzIGZhbW91cyBmb3IgaXRzIGNhdmFscnksIGFuZCBwcm9kdWNlZCBob3BsaXRlcyBhbHNvIChzZWUgYWJvdmUpOyBidXQgcGVsdGFzdHMg4oCUIHdoaWNoIHdlcmUgYXQgdGhlaXIgYmVzdCBpbiBhIHJvdWdoIGNvdW50cnkg4oCUIGNvdWxkIG5ldmVydGhlbGVzcyBiZSBvYnRhaW5lZCwgSmFzb24gdXJnZXMsIGZyb20gdGhlIG1vdW50YWlub3VzIHJlZ2lvbnMgd2hpY2ggYWRqb2luZWQgVGhlc3NhbHkgYW5kIHdlcmUgbGlrZWx5IHRvIGJlY29tZSBzdWJqZWN0IHRvIGhpbSAoc2VlIGJlbG93KS48L25vdGU+IGFsbCB0aGUgcGVvcGxlcyByb3VuZCBhYm91dCBhcmUgc3ViamVjdCB0byBoZXIgYXMgc29vbiBhcyBhIFRhZ3VzIGlzIGVzdGFibGlzaGVkIGhlcmU7IGFuZCBhbG1vc3QgYWxsIHdobyBkd2VsbCBpbiB0aGVzZSBuZWlnaGJvdXJpbmcgcmVnaW9ucyBhcmUgamF2ZWxpbi1tZW4sIHNvIHRoYXQgaXQgaXMgbGlrZWx5IHRoYXQgb3VyIGZvcmNlIHdvdWxkIGJlIGZhciBzdXBlcmlvciBpbiBwZWx0YXN0cyBhbHNvLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgdGhlIEJvZW90aWFucyBhbmQgYWxsIHRoZSBvdGhlcnMgd2hvIGFyZSBhdCB3YXIgd2l0aCB0aGUgTGFjZWRhZW1vbmlhbnMgYXJlIG15IGFsbGllcywgYW5kIHRoZXkgYXJlIHJlYWR5IHRvIGJlIG15IGZvbGxvd2VycywgdG9vLCBpZiBvbmx5IEkgZnJlZSB0aGVtIGZyb20gdGhlIExhY2VkYWVtb25pYW5zLiBUaGUgQXRoZW5pYW5zIGFsc28sIEkga25vdyB2ZXJ5IHdlbGwsIHdvdWxkIGRvIGFueXRoaW5nIHRvIGJlY29tZSBhbGxpZXMgb2Ygb3VycywgYnV0IEkgZG8gbm90IHRoaW5rIGl0IGJlc3Q8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzQiPjM3NCBCLkMuPC9kYXRlPjwvbm90ZT4gdG8gZXN0YWJsaXNoIGEgZnJpZW5kc2hpcCB3aXRoIHRoZW07IGZvciBJIGJlbGlldmUgdGhhdCBJIGNvdWxkIG9idGFpbiBlbXBpcmUgYnkgc2VhIGV2ZW4gbW9yZSBlYXNpbHkgdGhhbiBieSBsYW5kLgo8ZGF0ZSBhdXRobmFtZT0iLTM3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NCI+Mzc0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcYFRvIHNlZSB3aGV0aGVyIG15IGNhbGN1bGF0aW9ucyBhcmUgcmVhc29uYWJsZSwgaGUgc2FpZCwgYGNvbnNpZGVyIHRoZXNlIHBvaW50cyBhbHNvLiBXaXRoIE1hY2Vkb25pYSBpbiBvdXIgcG9zc2Vzc2lvbiwgdGhlIHBsYWNlIGZyb20gd2hpY2ggdGhlIEF0aGVuaWFucyBnZXQgdGhlaXIgdGltYmVyLCB3ZSBzaGFsbCBvZiBjb3Vyc2UgYmUgYWJsZSB0byBjb25zdHJ1Y3QgZmFyIG1vcmUgc2hpcHMgdGhhbiB0aGV5LiBBZ2Fpbiwgd2hvIGFyZSBsaWtlbHkgdG8gYmUgYmV0dGVyIGFibGUgdG8gc3VwcGx5IHRoZXNlIHNoaXBzIHdpdGggbWVuLCB0aGUgQXRoZW5pYW5zIG9yIG91cnNlbHZlcywgd2hvIGhhdmUgc28gbWFueSBzZXJmcyBvZiBzbyBleGNlbGxlbnQgYSBzb3J0PyBBbmQgd2hvIGFyZSBsaWtlbHkgdG8gYmUgYmV0dGVyIGFibGUgdG8gbWFpbnRhaW4gdGhlIHNhaWxvcnMsIHdlLCB3aG8gb24gYWNjb3VudCBvZiBvdXIgYWJ1bmRhbmNlIGV2ZW4gaGF2ZSBjb3JuIHRvIGV4cG9ydCB0byBvdGhlciBsYW5kcywgb3IgdGhlIEF0aGVuaWFucywgd2hvIGhhdmUgbm90IGV2ZW4gZW5vdWdoIGZvciB0aGVtc2VsdmVzIHVubGVzcyB0aGV5IGJ1eSBpdD8KPC90cmFuc2xhdGlvbj4="
translation['6.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGFzIGZvciBtb25leSwgd2Ugc3VyZWx5IHNob3VsZCBiZSBsaWtlbHkgdG8gZW5qb3kgYSBncmVhdGVyIGFidW5kYW5jZSBvZiBpdCwgZm9yIHdlIHNob3VsZCBub3QgYmUgbG9va2luZyB0byBsaXR0bGUgaXNsYW5kcyBmb3Igb3VyIHJldmVudWVzLCBidXQgZHJhd2luZyB1cG9uIHRoZSByZXNvdXJjZXMgb2YgcGVvcGxlcyBvZiB0aGUgY29udGluZW50LiBGb3Igb2YgY291cnNlIGFsbCB3aG8gYXJlIHJvdW5kIGFib3V0IHVzIHBheSB0cmlidXRlIGFzIHNvb24gYXMgVGhlc3NhbHkgaXMgdW5kZXIgYSBUYWd1cy4gQW5kIHlvdSBjZXJ0YWlubHkga25vdyB0aGF0IGl0IGlzIGJ5IGRyYXdpbmcgdXBvbiB0aGUgcmVzb3VyY2VzLCBub3Qgb2YgaXNsYW5kcywgYnV0IG9mIGEgY29udGluZW50LCB0aGF0IHRoZSBLaW5nIG9mIHRoZSBQZXJzaWFucyBpcyB0aGUgcmljaGVzdCBvZiBtb3J0YWxzOyBhbmQgeWV0IEkgdGhpbmsgdGhhdCBpdCBpcyBldmVuIGVhc2llciB0byByZWR1Y2UgaGltIHRvIHN1YmplY3Rpb24gdGhhbiB0byByZWR1Y2UgR3JlZWNlLiBGb3IgSSBrbm93IHRoYXQgZXZlcnlib2R5IHRoZXJlLCBzYXZlIG9uZSBwZXJzb24sIGhhcyB0cmFpbmVkIGhpbXNlbGYgdG8gc2Vydml0dWRlIHJhdGhlciB0aGFuIHRvIHByb3dlc3MsIGFuZCBJIGtub3cgd2hhdCBtYW5uZXIgb2YgZm9yY2UgaXQgd2FzIOKAlCBib3RoIHRoYXQgd2hpY2ggd2VudCB1cCB3aXRoIEN5cnVzIGFuZCB0aGF0IHdoaWNoIHdlbnQgdXAgd2l0aCBBZ2VzaWxhdXMg4oCUIHRoYXQgYnJvdWdodCB0aGUgS2luZyB0byBleHRyZW1pdGllcy4nCjwvdHJhbnNsYXRpb24+"
translation['6.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IGluIGFuc3dlciB0byB0aGVzZSBzdGF0ZW1lbnRzIEkgcmVwbGllZCB0aGF0IHdoaWxlIHRoZSBvdGhlciBtYXR0ZXJzIHdoaWNoIGhlIG1lbnRpb25lZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NCI+Mzc0IEIuQy48L2RhdGU+PC9ub3RlPiB3ZXJlIHdvcnRoIGNvbnNpZGVyaW5nLCBuZXZlcnRoZWxlc3MgZm9yIHBlb3BsZSB3aG8gd2VyZSBmcmllbmRzIG9mIHRoZSBMYWNlZGFlbW9uaWFucyB0byBzZWNlZGUgYW5kIGdvIG92ZXIgdG8gdGhlaXIgZW5lbWllcyB3aXRob3V0IGhhdmluZyBhbnkgY2hhcmdlIHRvIGJyaW5nIGFnYWluc3QgdGhlbSDigJQgdGhpcywgSSBzYWlkLCBzZWVtZWQgdG8gbWUgdG8gYmUgaW1wcmFjdGljYWJsZS4gSGUgdGhlcmV1cG9uLCBhZnRlciBjb21tZW5kaW5nIG1lIGFuZCBzYXlpbmcgdGhhdCBoZSBtdXN0IGNsaW5nIHRvIG1lIHRoZSBtb3JlIGJlY2F1c2UgSSB3YXMgdGhhdCBzb3J0IG9mIGEgbWFuLCBwZXJtaXR0ZWQgbWUgdG8gY29tZSB0byB5b3UgYW5kIHNheSB0aGUgdHJ1dGgsIHRoYXQgaGUgd2FzIGludGVuZGluZyB0byB1bmRlcnRha2UgYSBjYW1wYWlnbiBhZ2FpbnN0IHRoZSBQaGFyc2FsaWFucyBpZiB3ZSBkaWQgbm90IHlpZWxkIHRvIGhpbS4gVGhlcmVmb3JlIGhlIGJhZGUgbWUgYXNrIGFzc2lzdGFuY2UgZnJvbSB5b3UuIGBBbmQgaWYsJyBzYWlkIGhlLCBgdGhlIGdvZHMgZ3JhbnQgdGhhdCB5b3UgcGVyc3VhZGUgdGhlbSB0byBzZW5kIGEgc3VwcG9ydGluZyBmb3JjZSBsYXJnZSBlbm91Z2ggdG8gbWFrZSB3YXIgd2l0aCBtZSwgc28gYmUgaXQsJyBoZSBzYWlkLCBgYW5kIGxldCB1cyBhYmlkZSBieSB3aGF0ZXZlciBtYXkgYmUgdGhlIHJlc3VsdCBvZiB0aGUgd2FyOyBidXQgaWYgaXQgc2VlbXMgdG8geW91IHRoYXQgdGhleSBkbyBub3QgZ2l2ZSB5b3UgYWRlcXVhdGUgYXNzaXN0YW5jZSwgd291bGQgeW91IG5vdCBqdXN0bHkgYmUgYmxhbWVsZXNzIHRoZW5jZWZvcnRoIGlmIHlvdSBzaG91bGQgZm9sbG93IHRoZSBjb3Vyc2UgdGhhdCBpcyBiZXN0IGZvciB5b3VyIGNpdHksIHdoaWNoIGhvbm91cnMgeW91PycKPGRhdGUgYXV0aG5hbWU9Ii0zNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzQiPjM3NCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSXQgaXMgYWJvdXQgdGhlc2UgbWF0dGVycywgdGhlbiwgdGhhdCBJIGhhdmUgY29tZSB0byB5b3UsIGFuZCBJIHRlbGwgeW91IHRoZSB3aG9sZSBzaXR1YXRpb24gdGhlcmUgYXMgSSBteXNlbGYgc2VlIGl0IGFuZCBoYXZlIGhlYXJkIGl0IGZyb20gaGlzIGxpcHMuIEFuZCBJIGJlbGlldmUgdGhhdCB0aGlzIGlzIHRoZSBjYXNlLCBtZW4gb2YgTGFjZWRhZW1vbiwgdGhhdCBpZiB5b3Ugc2VuZCB0aGl0aGVyIGEgZm9yY2Ugc3VjaCBhcyBzaGFsbCBzZWVtLCBub3QgdG8gbWUgb25seSwgYnV0IGFsc28gdG8gdGhlIHJlc3Qgb2YgdGhlIFRoZXNzYWxpYW5zLCBsYXJnZSBlbm91Z2ggdG8gbWFrZSB3YXIgdXBvbiBKYXNvbiwgdGhlIGNpdGllcyB3aWxsIHJldm9sdCBmcm9tIGhpbTsgZm9yIGFsbCBvZiB0aGVtIGFyZSBhZnJhaWQgb2YgdGhlIGxlbmd0aHMgdG8gd2hpY2ggdGhlIG1hbidzIHBvd2VyIHdpbGwgZ28uIEJ1dCBpZiB5b3UgaW1hZ2luZSB0aGF0IGVtYW5jaXBhdGVkIEhlbG90cyBhbmQgYSBwcml2YXRlIGluZGl2aWR1YWw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IGkuZS4sIG5vdCBhIGtpbmcuPC9ub3RlPiBhcyBjb21tYW5kZXIgd2lsbCBzdWZmaWNlLCBJIGFkdmlzZSB5b3UgdG8gcmVtYWluIHF1aWV0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IsIGJlIHdlbGwgYXNzdXJlZCwgdGhlIHdhciB3aWxsIGJlIGFnYWluc3Qgc3Ryb25nIGZvcmNlcyBhbmQgYWdhaW5zdCBhIG1hbiB3aG8gaXMgc28gc2FnYWNpb3VzIGEgZ2VuZXJhbCB0aGF0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc0Ij4zNzQgQi5DLjwvZGF0ZT48L25vdGU+IHdoYXRzb2V2ZXIgaGUgdW5kZXJ0YWtlcyB0byBhY2NvbXBsaXNoLCB3aGV0aGVyIGl0IGJlIGJ5IHNlY3JlY3ksIG9yIGJ5IGdldHRpbmcgYWhlYWQgb2YgYW4gZW5lbXksIG9yIGJ5IHNoZWVyIGZvcmNlLCBoZSBpcyBub3QgdmVyeSBhcHQgdG8gZmFpbCBvZiBoaXMgb2JqZWN0LiBGb3IgaGUgaXMgYWJsZSB0byBtYWtlIGFzIGdvb2QgdXNlIG9mIG5pZ2h0IGFzIG9mIGRheSwgYW5kIHdoZW4gaGUgaXMgaW4gaGFzdGUsIHRvIHRha2UgYnJlYWtmYXN0IGFuZCBkaW5uZXIgdG9nZXRoZXIgYW5kIGdvIG9uIHdpdGggaGlzIGxhYm91cnMuIEFuZCBoZSB0aGlua3MgaXQgaXMgcHJvcGVyIHRvIHJlc3Qgb25seSBhZnRlciBoZSBoYXMgcmVhY2hlZCB0aGUgZ29hbCBmb3Igd2hpY2ggaGUgaGFkIHNldCBvdXQgYW5kIGhhcyBhY2NvbXBsaXNoZWQgdGhlIHRoaW5ncyB0aGF0IGFyZSBuZWVkZnVsOyBtb3Jlb3ZlciwgaGUgaGFzIGFjY3VzdG9tZWQgaGlzIGZvbGxvd2VycyBhbHNvIHRvIHRoZSBzYW1lIGhhYml0cy4gWWV0IGhlIGFsc28ga25vd3MgaG93IHRvIHNhdGlzZnkgdGhlIHdpc2hlcyBvZiBoaXMgc29sZGllcnMgd2hlbiBieSBhZGRlZCB0b2lscyB0aGV5IGhhdmUgYWNoaWV2ZWQgc29tZSBzdWNjZXNzOyBzbyB0aGF0IGFsbCB3aG8gYXJlIHdpdGggaGltIGhhdmUgbGVhcm5lZCB0aGlzIGxlc3NvbiB0b28sIHRoYXQgZnJvbSB0b2lscyBjb21lIGluZHVsZ2VuY2VzLgo8ZGF0ZSBhdXRobmFtZT0iLTM3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NCI+Mzc0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgaGUgaGFzIGdyZWF0ZXIgc2VsZi1jb250cm9sIHRoYW4gYW55IG1hbiBJIGtub3cgYXMgcmVnYXJkcyB0aGUgcGxlYXN1cmVzIG9mIHRoZSBib2R5LCBzbyB0aGF0IGhlIGlzIG5vdCBwcmV2ZW50ZWQgYnkgc3VjaCB0aGluZ3MsIGVpdGhlciwgZnJvbSBkb2luZyBhbHdheXMgd2hhdCBuZWVkcyB0byBiZSBkb25lLiBDb25zaWRlciwgdGhlcmVmb3JlLCBhbmQgdGVsbCBtZSwgYXMgYmVzZWVtcyB5b3UsIHdoYXQgeW91IHdpbGwgYmUgYWJsZSB0byBkbyBhbmQgaW50ZW5kIHRvIGRvLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['6.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGh1cyBoZSBzcG9rZS4gQXMgZm9yIHRoZSBMYWNlZGFlbW9uaWFucywgYXQgdGhlIHRpbWUgdGhleSBkZWZlcnJlZCB0aGVpciBhbnN3ZXI7IGJ1dCBhZnRlciByZWNrb25pbmcgdXAgb24gdGhlIG5leHQgZGF5IGFuZCBvbiB0aGUgdGhpcmQgdGhlaXIgcmVnaW1lbnRzIGFicm9hZCwgdG8gc2VlIGhvdyBtYW55IHRoZXkgbnVtYmVyZWQsIGFuZCB0aGUgcmVnaW1lbnRzIHdoaWNoIHdlcmUgaW4gdGhlIHZpY2luaXR5IG9mIExhY2VkYWVtb24gdG8gYmUgZW1wbG95ZWQgYWdhaW5zdCB0aGUgdHJpcmVtZXMgb2YgdGhlIEF0aGVuaWFucyBhbmQgZm9yIHRoZSB3YXIgdXBvbiB0aGVpciBuZWlnaGJvdXJzLCB0aGV5IHJlcGxpZWQgdGhhdCBhdCBwcmVzZW50IHRoZXkgY291bGQgbm90IHNlbmQgaGltIGFuIGFkZXF1YXRlIHN1cHBvcnRpbmcgZm9yY2UsIGFuZCB0b2xkIGhpbSB0byBnbyBob21lIGFuZCBhcnJhbmdlIGhpcyBvd24gYWZmYWlycyBhbmQgdGhvc2Ugb2YgaGlzIGNpdHkgYXMgYmVzdCBoZSBjb3VsZC4KPC90cmFuc2xhdGlvbj4="
translation['6.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5IZSwgdGhlbiwgYWZ0ZXIgY29tbWVuZGluZyB0aGUgc3RyYWlnaHRmb3J3YXJkbmVzcyBvZiB0aGUgc3RhdGUsIGRlcGFydGVkLiBBbmQgaGUgYmVnZ2VkIEphc29uIG5vdCB0byBmb3JjZSBoaW0gdG8gZ2l2ZSBvdmVyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzc0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzc0Ij4zNzQgQi5DLjwvZGF0ZT48L25vdGU+IHRoZSBBY3JvcG9saXMgb2YgdGhlIFBoYXJzYWxpYW5zLCBoaXMgd2lzaCBiZWluZyB0aGF0IGhlIG1pZ2h0IHN0aWxsIGtlZXAgaXQgc2FmZSBmb3IgdGhvc2Ugd2hvIGhhZCBwdXQgaXQgaW50byBoaXMgaGFuZHM7IGJ1dCBoZSBnYXZlIGhpcyBvd24gY2hpbGRyZW4gdG8gSmFzb24gYXMgaG9zdGFnZXMsIHdpdGggdGhlIHByb21pc2Ugbm90IG9ubHkgdG8gd2luIG92ZXIgdGhlIGNpdHkgYW5kIG1ha2UgaXQgaGlzIHdpbGxpbmcgYWxseSwgYnV0IGFsc28gdG8gaGVscCBpbiBlc3RhYmxpc2hpbmcgaGltIGFzIFRhZ3VzLiBXaGVuLCBhY2NvcmRpbmdseSwgdGhleSBoYWQgZXhjaGFuZ2VkIHBsZWRnZXMgd2l0aCBvbmUgYW5vdGhlciwgdGhlIFBoYXJzYWxpYW5zIGF0IG9uY2Ugb2JzZXJ2ZWQgcGVhY2UsIGFuZCBKYXNvbiB3YXMgc3BlZWRpbHkgZXN0YWJsaXNoZWQgYnkgY29tbW9uIGNvbnNlbnQgYXMgVGFndXMgb2YgdGhlIFRoZXNzYWxpYW5zLgo8ZGF0ZSBhdXRobmFtZT0iLTM3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NCI+Mzc0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5IYXZpbmcgYmVjb21lIFRhZ3VzLCBoZSBhc3Nlc3NlZCB0aGUgY29udGluZ2VudHMgb2YgY2F2YWxyeSBhbmQgaG9wbGl0ZXMgdGhhdCB0aGUgY2l0aWVzIHdlcmUgdG8gZnVybmlzaCwgYWNjb3JkaW5nIHRvIHRoZSBhYmlsaXR5IG9mIGVhY2guIEFuZCB0aGUgcmVzdWx0IHdhcyB0aGF0IGhlIGhhZCBtb3JlIHRoYW4gZWlnaHQgdGhvdXNhbmQgaG9yc2VtZW4sIGluY2x1ZGluZyB0aGUgYWxsaWVzLCBoaXMgaG9wbGl0ZXMgd2VyZSByZWNrb25lZCBhdCBub3QgZmV3ZXIgdGhhbiB0d2VudHkgdGhvdXNhbmQsIGFuZCB0aGVyZSB3ZXJlIHBlbHRhc3RzIGVub3VnaCB0byBiZSBzZXQgaW4gYXJyYXkgYWdhaW5zdCB0aGUgd2hvbGUgd29ybGQ7IGZvciBpdCBpcyBhIHRhc2sgZXZlbiB0byBlbnVtZXJhdGUgdGhlIGNpdGllcyB3aGljaCBmdXJuaXNoZWQgdGhlbS4gRnVydGhlciwgaGUgc2VudCBvcmRlcnMgdG8gYWxsIHdobyBkd2VsdCByb3VuZCBhYm91dCB0byBwYXkgdGhlIHNhbWUgdHJpYnV0ZSBhcyBoYWQgYmVlbiBmaXhlZCBpbiB0aGUgdGltZSBvZiBTY29wYXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBSdWxlciBvZiBDcmFubm9uIGFuZCBUYWd1cyBvZiBUaGVzc2FseSBpbiB0aGUgcGVyaW9kIG9mIHRoZSBQZXJzaWFuIHdhcnMuPC9ub3RlPiBUaHVzIHRoZXNlIGV2ZW50cyB3ZXJlIHByb2NlZWRpbmcgdG8gdGhlaXIgaXNzdWU7IEkgbm93IHJldHVybiB0byB0aGUgcG9pbnQgYXQgd2hpY2ggSSBkaWdyZXNzZWQgd2hlbiBJIHRvb2sgdXAgdGhlIHN0b3J5IG9mIEphc29uLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgTGFjZWRhZW1vbmlhbnMsIHRoZW4sIGFuZCB0aGVpciBhbGxpZXMgd2VyZSBnYXRoZXJpbmcgdG9nZXRoZXIgaW4gUGhvY2lzLCBhbmQgdGhlIFRoZWJhbnMgaGFkIHdpdGhkcmF3biB0byB0aGVpciBvd24gY291bnRyeSBhbmQgd2VyZSBndWFyZGluZyB0aGUgcGFzc2VzLiBBcyBmb3IgdGhlIEF0aGVuaWFucywgc2luY2UgdGhleSBzYXcgdGhhdCB0aGUgVGhlYmFucyB3ZXJlIGdyb3dpbmcgaW4gcG93ZXIgdGhyb3VnaCB0aGVpciBoZWxwIGFuZCBzdGlsbCB3ZXJlIG5vdCBjb250cmlidXRpbmcgbW9uZXkgZm9yIHRoZWlyIGZsZWV0LCB3aGlsZSB0aGV5IHdlcmUgdGhlbXNlbHZlcyBiZWluZyB3b3JuIG91dCBieSBleHRyYW9yZGluYXJ5IHRheGVzLCBieSBwbHVuZGVyaW5nIGV4cGVkaXRpb25zIGZyb20gQWVnaW5hLCBhbmQgYnkgZ3VhcmRpbmcgdGhlaXIgdGVycml0b3J5LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NCI+Mzc0IEIuQy48L2RhdGU+PC9ub3RlPiB0aGV5IGNvbmNlaXZlZCBhIGRlc2lyZSB0byBjZWFzZSBmcm9tIHRoZSB3YXIsIGFuZCBzZW5kaW5nIGFtYmFzc2Fkb3JzIHRvIExhY2VkYWVtb24sIGNvbmNsdWRlZCBwZWFjZS4KPGRhdGUgYXV0aG5hbWU9Ii0zNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzQiPjM3NCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ud28gb2YgdGhlIEF0aGVuaWFuIGFtYmFzc2Fkb3JzLCBhY3RpbmcgaW4gYWNjb3JkYW5jZSB3aXRoIGEgZGVjcmVlIG9mIHRoZSBzdGF0ZSwgc2FpbGVkIGRpcmVjdGx5IGZyb20gdGhlcmUgYW5kIGdhdmUgb3JkZXJzIHRvIFRpbW90aGV1cyB0byBzYWlsIGJhY2sgaG9tZSwgaW5hc211Y2ggYXMgdGhlcmUgd2FzIHBlYWNlOyBhcyBoZSB3YXMgc2FpbGluZyBiYWNrLCBob3dldmVyLCBoZSBsYW5kZWQgaW4gdGhlaXIgY291bnRyeSB0aGUgZXhpbGVzIG9mIHRoZSBaYWN5bnRoaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['6.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZSBaYWN5bnRoaWFucyBpbiB0aGUgY2l0eSBzZW50IHRvIHRoZSBMYWNlZGFlbW9uaWFucyBhbmQgdG9sZCB0aGVtIHRoZSBzb3J0IG9mIHRyZWF0bWVudCB0aGV5IGhhZCByZWNlaXZlZCBhdCB0aGUgaGFuZHMgb2YgVGltb3RoZXVzLCB0aGUgTGFjZWRhZW1vbmlhbnMgaW1tZWRpYXRlbHkgZGVlbWVkIHRoZSBBdGhlbmlhbnMgZ3VpbHR5IG9mIHdyb25nLWRvaW5nLCBzZXQgYWJvdXQgcHJlcGFyaW5nIGEgZmxlZXQgYWdhaW4sIGFuZCBmaXhlZCB0aGUgcHJvcG9ydGlvbmF0ZSBjb250aW5nZW50cywgZm9yIGEgdG90YWwgb2Ygc2l4dHkgc2hpcHMsIGZyb20gTGFjZWRhZW1vbiBpdHNlbGYsIENvcmludGgsIExldWNhcywgQW1icmFjaWEsIEVsaXMsIFphY3ludGh1cywgQWNoYWVhLCBFcGlkYXVydXMsIFRyb2V6ZW4sIEhlcm1pb24sIGFuZCBIYWxpYWUuCjwvdHJhbnNsYXRpb24+"
translation['6.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gdGhleSBwdXQgTW5hc2lwcHVzIGluIGNvbW1hbmQgb2YgdGhpcyBmbGVldCBhcyBhZG1pcmFsIGFuZCBkaXJlY3RlZCBoaW0gdG8gbG9vayBhZnRlciBhbGwgdGhlaXIgaW50ZXJlc3RzIGluIHRoYXQgcGFydCBvZiB0aGUgc2VhLCBhbmQgZXNwZWNpYWxseSB0byBtYWtlIGFuIGV4cGVkaXRpb24gYWdhaW5zdCBDb3JjeXJhLiBUaGV5IGxpa2V3aXNlIHNlbnQgdG8gRGlvbnlzaXVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gVHlyYW50IG9mIFN5cmFjdXNlLjwvbm90ZT4gcG9pbnRpbmcgb3V0IHRoYXQgaXQgd2FzIGFkdmFudGFnZW91cyB0byBoaW0gYWxzbyB0aGF0IENvcmN5cmEgc2hvdWxkIG5vdCBiZSB1bmRlciB0aGUgQXRoZW5pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NbmFzaXBwdXMsIGFjY29yZGluZ2x5LCBhcyBzb29uIGFzIGhpcyBmbGVldCBoYWQgYmVlbiBnYXRoZXJlZCB0b2dldGhlciwgc2V0IHNhaWwgdG8gQ29yY3lyYTsgYW5kIGJlc2lkZXMgdGhlIHRyb29wcyBmcm9tIExhY2VkYWVtb24gd2hvIHNlcnZlZCB3aXRoIGhpbSBoZSBhbHNvIGhhZCBubyBmZXdlciB0aGFuIG9uZSB0aG91c2FuZCBmaXZlIGh1bmRyZWQgbWVyY2VuYXJpZXMuCjwvdHJhbnNsYXRpb24+"
translation['6.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGVuIGhlIGhhZCBkaXNlbWJhcmtlZCBoZSB3YXMgbWFzdGVyIG9mIHRoZSBjb3VudHJ5LCBsYWlkIHdhc3RlIHRoZSBsYW5kLCB3aGljaCB3YXMgbW9zdCBiZWF1dGlmdWxseSBjdWx0aXZhdGVkIGFuZCBwbGFudGVkLCBhbmQgZGVzdHJveWVkIG1hZ25pZmljZW50IGR3ZWxsaW5ncyBhbmQgd2luZS1jZWxsYXJzIHdpdGggd2hpY2ggdGhlIGZhcm1zIHdlcmUgZnVybmlzaGVkOzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NCI+Mzc0IEIuQy48L2RhdGU+PC9ub3RlPiB0aGUgcmVzdWx0IHdhcywgaXQgd2FzIHNhaWQsIHRoYXQgaGlzIHNvbGRpZXJzIGJlY2FtZSBzbyBsdXh1cmlvdXMgdGhhdCB0aGV5IHdvdWxkIG5vdCBkcmluayBhbnkgd2luZSB1bmxlc3MgaXQgaGFkIGEgZmluZSBib3VxdWV0LiBGdXJ0aGVybW9yZSwgdmVyeSBtYW55IHNsYXZlcyBhbmQgY2F0dGxlIHdlcmUgY2FwdHVyZWQgb24gdGhlIGZhcm1zLgo8ZGF0ZSBhdXRobmFtZT0iLTM3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NCI+Mzc0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyd2FyZHMgaGUgZW5jYW1wZWQgd2l0aCBoaXMgbGFuZCBmb3JjZXMgb24gYSBoaWxsIHdoaWNoIHdhcyBkaXN0YW50IGZyb20gdGhlIGNpdHkgYWJvdXQgZml2ZSBzdGFkaWEgYW5kIHNpdHVhdGVkIGJldHdlZW4gdGhlIGNpdHkgYW5kIHRoZSBjb3VudHJ5LCBzbyB0aGF0IGhlIG1pZ2h0IGZyb20gdGhlcmUgaW50ZXJjZXB0IGFueSBvZiB0aGUgQ29yY3lyYWVhbnMgd2hvIG1pZ2h0IHRyeSB0byBnbyBvdXQgdG8gdGhlaXIgbGFuZHM7IHRoZW4gaGUgaGFkIHRoZSBzYWlsb3JzIGZyb20gaGlzIHNoaXBzIGVuY2FtcCBvbiB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgY2l0eSwgYXQgYSBwb2ludCBmcm9tIHdoaWNoIGhlIHRob3VnaHQgdGhleSB3b3VsZCBvYnNlcnZlIGluIGdvb2QgdGltZSBhbnkgdmVzc2VscyB0aGF0IGFwcHJvYWNoZWQgYW5kIHByZXZlbnQgdGhlaXIgY29taW5nIGluLiBJbiBhZGRpdGlvbiBoZSBhbHNvIG1haW50YWluZWQgYSBibG9ja2FkZSBhdCB0aGUgbW91dGggb2YgdGhlIGhhcmJvdXIgd2hlbiB0aGUgd2VhdGhlciBkaWQgbm90IGludGVyZmVyZS4KPC90cmFuc2xhdGlvbj4="
translation['6.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkluIHRoaXMgd2F5LCB0aGVuLCBoZSBoZWxkIHRoZSBjaXR5IGJlc2llZ2VkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZSBDb3JjeXJhZWFucyBmb3VuZCB0aGVtc2VsdmVzIHVuYWJsZSB0byBnZXQgYW55dGhpbmcgZnJvbSB0aGVpciBmYXJtcyBiZWNhdXNlIHRoZXkgd2VyZSBvdmVybWFzdGVyZWQgYnkgbGFuZCwgd2hpbGUgb24gdGhlIG90aGVyIGhhbmQgbm90aGluZyB3YXMgYnJvdWdodCBpbiB0byB0aGVtIGJ5IHdhdGVyIGJlY2F1c2UgdGhleSB3ZXJlIG92ZXJtYXN0ZXJlZCBieSBzZWEsIHRoZXkgd2VyZSBpbiBncmVhdCBzdHJhaXRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFjY29yZGluZ2x5LCBzZW5kaW5nIHRvIHRoZSBBdGhlbmlhbnMsIHRoZXkgYmVnZ2VkIHRoZW0gdG8gY29tZSB0byB0aGVpciBhc3Npc3RhbmNlLCBhbmQgcG9pbnRlZCBvdXQgdGhhdCB0aGV5IHdvdWxkIGxvc2UgYSBncmVhdCBhZHZhbnRhZ2UgaWYgdGhleSB3ZXJlIGRlcHJpdmVkIG9mIENvcmN5cmEsIGFuZCB3b3VsZCBhZGQgZ3JlYXQgc3RyZW5ndGggdG8gdGhlaXIgZW5lbWllczsgZm9yIGZyb20gbm8gb3RoZXIgc3RhdGUsIHRoZXkgc2FpZCwgZXhjZXB0IEF0aGVucywgY291bGQgY29tZSBhIGdyZWF0ZXIgbnVtYmVyIG9mIHNoaXBzIG9yIGEgZ3JlYXRlciBhbW91bnQgb2YgbW9uZXkuIEZ1cnRoZXIsIENvcmN5cmEgd2FzIHNpdHVhdGVkIGluIGEgZmF2b3VyYWJsZSBwb3NpdGlvbiB3aXRoIHJlc3BlY3QgdG8gdGhlIENvcmludGhpYW4gR3VsZiBhbmQgdGhlIHN0YXRlcyB3aGljaCByZWFjaCBkb3duIHRvIGl0cyBzaG9yZXMsIGluIGEgZmF2b3VyYWJsZSBwb3NpdGlvbiBmb3IgZG9pbmcgZGFtYWdlIHRvIHRoZSB0ZXJyaXRvcnkgb2YgTGFjb25pYSwgYW5kIGluIGFuIGV4dHJlbWVseSBmYXZvdXJhYmxlIHBvc2l0aW9uIHdpdGggcmVzcGVjdCB0byBFcGlydXMgYWNyb3NzIHRoZSB3YXkgYW5kIHRoZSBjb2FzdHdpc2Ugcm91dGUgZnJvbSBTaWNpbHkgdG8gUGVsb3Bvbm5lc3VzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NCI+Mzc0IEIuQy48L2RhdGU+PC9ub3RlPgo8ZGF0ZSBhdXRobmFtZT0iLTM3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3NCI+Mzc0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSBBdGhlbmlhbnMgaGVhcmQgdGhlc2UgdGhpbmdzIHRoZXkgY2FtZSB0byB0aGUgY29uY2x1c2lvbiB0aGF0IHRoZXkgbXVzdCBnaXZlIHNlcmlvdXMgY2FyZSB0byB0aGUgbWF0dGVyLCBhbmQgdGhleSBzZW50IG91dCBDdGVzaWNsZXMgYXMgZ2VuZXJhbCB3aXRoIGFib3V0IHNpeCBodW5kcmVkIHBlbHRhc3RzIGFuZCByZXF1ZXN0ZWQgQWxjZXRhczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gaS4gNy48L25vdGU+IHRvIGhlbHAgdG8gY29udmV5IHRoZW0gYWNyb3NzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSB0aGVzZSB0cm9vcHMgd2VyZSBicm91Z2h0IGFjcm9zcyBieSBuaWdodCB0byBhIHBsYWNlIGluIHRoZSBjb3VudHJ5IG9mIENvcmN5cmEsIGFuZCBtYWRlIHRoZWlyIHdheSBpbnRvIHRoZSBjaXR5LiBUaGUgQXRoZW5pYW5zIGFsc28gdm90ZWQgdG8gbWFuIHNpeHR5IHNoaXBzLCBhbmQgZWxlY3RlZCBUaW1vdGhldXMgYXMgY29tbWFuZGVyIG9mIHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['6.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaGUgd2FzIHVuYWJsZSB0byBtYW4gaGlzIHNoaXBzIGF0IEF0aGVucywgYW5kPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzczIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzczIj4zNzMgQi5DLjwvZGF0ZT48L25vdGU+IHRoZXJlZm9yZSBzZXQgc2FpbCBmb3IgdGhlIGlzbGFuZHMgYW5kIGVuZGVhdm91cmVkIHRvIGNvbXBsZXRlIGhpcyBjcmV3cyB0aGVyZSwgdGhpbmtpbmcgdGhhdCBpdCB3YXMgYSBzZXJpb3VzIG1hdHRlciB0byBzYWlsIGxpZ2h0LWhlYXJ0ZWRseSBhcm91bmQgUGVsb3Bvbm5lc3VzIHRvIGF0dGFjayBzaGlwcyB3aXRoIHdlbGwtdHJhaW5lZCBjcmV3cy4KPGRhdGUgYXV0aG5hbWU9Ii0zNzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzMiPjM3MyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgQXRoZW5pYW5zLCBob3dldmVyLCBiZWxpZXZpbmcgdGhhdCBoZSB3YXMgdXNpbmcgdXAgdGhlIHRpbWUgb2YgdGhlIHllYXIgd2hpY2ggd2FzIGZhdm91cmFibGUgZm9yIGhpcyB2b3lhZ2UsIGRpZCBub3QgcGFyZG9uIGhpbSwgYnV0IGRlcG9zZWQgaGltIGZyb20gaGlzIG9mZmljZSBhbmQgY2hvc2UgSXBoaWNyYXRlcyBpbiBoaXMgcGxhY2UuCjwvdHJhbnNsYXRpb24+"
translation['6.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBzb29uIGFzIGhlIGFzc3VtZWQgb2ZmaWNlLCBoZSBwcm9jZWVkZWQgdG8gbWFuIGhpcyBzaGlwcyBleHBlZGl0aW91c2x5LCBhbmQgY29tcGVsbGVkIGhpcyBjYXB0YWlucyB0byBkbyB0aGVpciBkdXR5LiBIZSBhbHNvIG9idGFpbmVkIGZyb20gdGhlIEF0aGVuaWFucyB3aGF0ZXZlciB3YXItc2hpcHMgd2VyZSBjcnVpc2luZyBoZXJlIG9yIHRoZXJlIGluIHRoZSBuZWlnaGJvdXJob29kIG9mIEF0dGljYSwgYXMgd2VsbCBhcyB0aGUgUGFyYWx1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gSUkuIGkuIDI4Ljwvbm90ZT4gYW5kIHRoZSBTYWxhbWluaWEsIHNheWluZyB0aGF0IGlmIG1hdHRlcnMgaW4gQ29yY3lyYSB0dXJuZWQgb3V0IHN1Y2Nlc3NmdWxseSwgaGUgd291bGQgc2VuZCB0aGVtIGJhY2sgbWFueSBzaGlwcy4gQW5kIGhpcyBzaGlwcyBhbW91bnRlZCBpbiBhbGwgdG8gYWJvdXQgc2V2ZW50eS4KPC90cmFuc2xhdGlvbj4="
translation['6.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVhbndoaWxlIHRoZSBDb3JjeXJhZWFucyB3ZXJlIHN1ZmZlcmluZyBzbyBncmVhdGx5IGZyb20gaHVuZ2VyIHRoYXQgb24gYWNjb3VudCBvZiB0aGUgbnVtYmVyIG9mIHRoZSBkZXNlcnRlcnMgTW5hc2lwcHVzIGlzc3VlZCBhIHByb2NsYW1hdGlvbiBkaXJlY3RpbmcgdGhhdCB3aG9ldmVyIGRlc2VydGVkIHNob3VsZCBiZSBzb2xkIGludG8gc2xhdmVyeS4gQW5kIHdoZW4gdGhleSBrZXB0IG9uIGRlc2VydGluZyBub25lIHRoZSBsZXNzLCBhdCBsYXN0IGhlIGV2ZW4gdHJpZWQgdG8gZHJpdmUgdGhlbSBiYWNrIHdpdGg8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzMiPjM3MyBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlIHNjb3VyZ2UuIFRob3NlIGluIHRoZSBjaXR5LCBob3dldmVyLCB3b3VsZCBub3QgYWRtaXQgdGhlIHNsYXZlcyB3aXRoaW4gdGhlIHdhbGwgYWdhaW4sIGFuZCBtYW55IGRpZWQgb3V0c2lkZS4KPGRhdGUgYXV0aG5hbWU9Ii0zNzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzMiPjM3MyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgTW5hc2lwcHVzLCBzZWVpbmcgdGhlc2UgdGhpbmdzLCBhbmQgYmVsaWV2aW5nIHRoYXQgaGUgYWxsIGJ1dCBoYWQgcG9zc2Vzc2lvbiBvZiB0aGUgY2l0eSBhbHJlYWR5LCB3YXMgdHJ5aW5nIGlubm92YXRpb25zIHdpdGggaGlzIG1lcmNlbmFyaWVzLiBIZSBoYWQgYmVmb3JlIHRoaXMgZGlzbWlzc2VkIHNvbWUgb2YgdGhlbSBmcm9tIGhpcyBzZXJ2aWNlLCBhbmQgaGUgbm93IG93ZWQgdGhvc2Ugd2hvIHJlbWFpbmVkIGFzIG11Y2ggYXMgdHdvIG1vbnRocycgcGF5LiBUaGlzIHdhcyBub3QsIHNvIGl0IHdhcyBzYWlkLCBiZWNhdXNlIGhlIGxhY2tlZCBtb25leSwgZm9yIG1vc3Qgb2YgdGhlIHN0YXRlcyBoYWQgc2VudCBoaW0gbW9uZXkgaW5zdGVhZCBvZiBtZW4sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBVbmRlciB0aGUgYXJyYW5nZW1lbnQgZGVzY3JpYmVkIGluIHYuIGlpLiAyMS48L25vdGU+IGJlY2F1c2UgaXQgd2FzIGFuIG92ZXJzZWFzIGV4cGVkaXRpb24uCjwvdHJhbnNsYXRpb24+"
translation['6.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIHBlb3BsZSBpbiB0aGUgY2l0eSwgb2JzZXJ2aW5nIGZyb20gdGhlaXIgdG93ZXJzIHRoYXQgdGhlIGVuZW15J3MgcG9zdHMgd2VyZSBsZXNzIGNhcmVmdWxseSBndWFyZGVkIHRoYW4gZm9ybWVybHksIGFuZCB0aGF0IHRoZSBtZW4gd2VyZSBzY2F0dGVyZWQgdGhyb3VnaCB0aGUgY291bnRyeSwgbWFkZSBhIHNhbGx5LCBjYXB0dXJpbmcgc29tZSBvZiB0aGVtIGFuZCBjdXR0aW5nIGRvd24gb3RoZXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIE1uYXNpcHB1cyBwZXJjZWl2ZWQgdGhpcywgaGUgcHV0IG9uIGhpcyBhcm1vdXIgYW5kIHdlbnQgdG8gdGhlIHJlc2N1ZSBoaW1zZWxmLCB3aXRoIGFsbCB0aGUgaG9wbGl0ZXMgaGUgaGFkLCBhbmQgYXQgdGhlIHNhbWUgdGltZSBvcmRlcmVkIHRoZSBjYXB0YWlucyBhbmQgY29tbWFuZGVycyBvZiBkaXZpc2lvbnMgdG8gbGVhZCBmb3J0aCB0aGUgbWVyY2VuYXJpZXMuCjwvdHJhbnNsYXRpb24+"
translation['6.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBzb21lIGNhcHRhaW5zIHJlcGxpZWQgdGhhdCBpdCB3YXMgbm90IGVhc3kgdG8ga2VlcCBtZW4gb2JlZGllbnQgdW5sZXNzIHRoZXkgd2VyZSBnaXZlbiBwcm92aXNpb25zLCBoZSBzdHJ1Y2sgb25lIG9mIHRoZW0gd2l0aCBhIHN0YWZmIGFuZCBhbm90aGVyIHdpdGggdGhlIHNwaWtlIG9mIGhpcyBzcGVhci4gU28gaXQgd2FzLCB0aGVuLCB0aGF0IHdoZW4gaGlzIGZvcmNlcyBpc3N1ZWQgZnJvbSB0aGUgY2l0eSB3aXRoIGhpbSB0aGV5IHdlcmUgYWxsIGRpc3Bpcml0ZWQgYW5kIGhvc3RpbGUgdG8gaGltIOKAlCBhIHNpdHVhdGlvbiB0aGF0IGlzIGJ5IG5vIG1lYW5zIGNvbmR1Y2l2ZSB0byBmaWdodGluZy4KPC90cmFuc2xhdGlvbj4="
translation['6.2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGFmdGVyIGhlIGhhZCBmb3JtZWQgdGhlIHRyb29wcyBpbiBsaW5lLCBNbmFzaXBwdXMgaGltc2VsZiB0dXJuZWQgdG8gZmxpZ2h0IHRob3NlIG9mIHRoZSBlbmVteSB3aG8gd2VyZSBpbiBmcm9udCBvZiB0aGUgZ2F0ZXMsIGFuZCBwdXJzdWVkIHRoZW0uIFdoZW4sIGhvd2V2ZXIsIHRoZXNlIGNhbWUgbmVhciB0aGUgd2FsbCwgdGhleSB0dXJuZWQgYWJvdXQsIGFuZCBmcm9tIHRoZSB0b21ic3RvbmVzIHRocmV3IHNwZWFycyBhbmQgamF2ZWxpbnMgdXBvbiB0aGUgTGFjZWRhZW1vbmlhbnM7IG1lYW53aGlsZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MyI+MzczIEIuQy48L2RhdGU+PC9ub3RlPiBvdGhlcnMgc2FsbGllZCBvdXQgYnkgdGhlIG90aGVyIGdhdGVzIGFuZCBpbiBtYXNzIGZvcm1hdGlvbiBhdHRhY2tlZCB0aG9zZSB3aG8gd2VyZSBhdCB0aGUgZXh0cmVtZSBlbmQgb2YgdGhlIGxpbmUuCjxkYXRlIGF1dGhuYW1lPSItMzczIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzczIj4zNzMgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVzZSBsYXR0ZXIsIHdobyB3ZXJlIGRyYXduIHVwIG9ubHkgZWlnaHQgZGVlcCwgdGhpbmtpbmcgdGhhdCB0aGUgb3V0ZXIgZW5kIG9mIHRoZSBwaGFsYW54IHdhcyB0b28gd2VhaywgdW5kZXJ0b29rIHRvIHN3aW5nIGl0IGFyb3VuZCB1cG9uIGl0c2VsZi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDOvc6xz4PPhM+Bzr/PhuG9tTwvZm9yZWlnbj4gaW52b2x2ZWQgdHdvIG1vdmVtZW50cywgKDEpIGEgZmFjaW5nIGFib3V0LCBmb2xsb3dlZCBieSBhIG1hcmNoIHRvIHRoZSByZWFyLCBhbmQgKDIpIGEgdHVybmluZyBvZiB0aGUgbGluZSB1bnRpbCBpdCBzdG9vZCBiZWhpbmQgdGhlIGFkamFjZW50IHRyb29wcywgdGh1cyBkb3VibGluZyB0aGUgZGVwdGggb2YgdGhlIHBoYWxhbnguIEluIHRoaXMgY2FzZSB0aGUgZW5lbXkncyBhdHRhY2sgcHJldmVudGVkIHRoZSBhY2NvbXBsaXNobWVudCBvZiB0aGUgc2Vjb25kIG1vdmVtZW50Ljwvbm90ZT4gQnV0IGFzIHNvb24gYXMgdGhleSBiZWdhbiB0aGUgYmFja3dhcmQgbW92ZW1lbnQsIHRoZSBlbmVteSBmZWxsIHVwb24gdGhlbSwgaW4gdGhlIGJlbGllZiB0aGF0IHRoZXkgd2VyZSBpbiBmbGlnaHQsIGFuZCB0aGV5IGRpZCBub3QgZ28gb24gYW5kIHN3aW5nIGZvcndhcmQ7IGZ1cnRoZXJtb3JlLCB0aG9zZSB3aG8gd2VyZSBuZXh0IHRvIHRoZW0gYWxzbyBiZWdhbiB0byBmbGVlLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDOvc6xz4PPhM+Bzr/PhuG9tTwvZm9yZWlnbj4gaW52b2x2ZWQgdHdvIG1vdmVtZW50cywgKDEpIGEgZmFjaW5nIGFib3V0LCBmb2xsb3dlZCBieSBhIG1hcmNoIHRvIHRoZSByZWFyLCBhbmQgKDIpIGEgdHVybmluZyBvZiB0aGUgbGluZSB1bnRpbCBpdCBzdG9vZCBiZWhpbmQgdGhlIGFkamFjZW50IHRyb29wcywgdGh1cyBkb3VibGluZyB0aGUgZGVwdGggb2YgdGhlIHBoYWxhbnguIEluIHRoaXMgY2FzZSB0aGUgZW5lbXkncyBhdHRhY2sgcHJldmVudGVkIHRoZSBhY2NvbXBsaXNobWVudCBvZiB0aGUgc2Vjb25kIG1vdmVtZW50LjwvdHJhbnNsYXRpb24+"
translation['6.2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgTW5hc2lwcHVzLCB3aGlsZSBoZSB3YXMgdW5hYmxlIHRvIGFpZCB0aGUgdHJvb3BzIHdoaWNoIHdlcmUgaGFyZCBwcmVzc2VkLCBiZWNhdXNlIHRoZSBlbmVteSB3YXMgYXR0YWNraW5nIGhpbSBpbiBmcm9udCwgaGUgd2FzIGxlZnQgd2l0aCBhbiBldmVyIHNtYWxsZXIgbnVtYmVyIG9mIG1lbi4gRmluYWxseSwgYWxsIG9mIHRoZSBlbmVteSBtYXNzZWQgdGhlbXNlbHZlcyB0b2dldGhlciBhbmQgY2hhcmdlZCB1cG9uIE1uYXNpcHB1cyBhbmQgaGlzIHRyb29wcywgd2hpY2ggd2VyZSBieSB0aGlzIHRpbWUgdmVyeSBmZXcuIEFuZCB0aGUgY2l0aXplbnMsIHNlZWluZyB3aGF0IHdhcyBnb2luZyBvbiwgY2FtZSBvdXQgdG8gam9pbiBpbiB0aGUgYXR0YWNrLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGFmdGVyIHRoZXkgaGFkIGtpbGxlZCBNbmFzaXBwdXMsIGFsbCBzdHJhaWdodHdheSBqb2luZWQgaW4gdGhlIHB1cnN1aXQuIEFuZCB0aGV5IHByb2JhYmx5IHdvdWxkIGhhdmUgY2FwdHVyZWQgdGhlIHZlcnkgY2FtcCwgYWxvbmcgd2l0aCBpdHMgc3RvY2thZGUsIGhhZCBub3QgdGhlIHB1cnN1ZXJzIHR1cm5lZCBiYWNrIHVwb24gc2VlaW5nIHRoZSBjcm93ZCBvZiBjYW1wLWZvbGxvd2Vycywgb2YgYXR0ZW5kYW50cywgYW5kIG9mIHNsYXZlcywgaW1hZ2luaW5nIHRoYXQgdGhlcmUgd2FzIHNvbWUgZmlnaHRpbmcgYWJpbGl0eSBpbiB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGlzIHRpbWUsIGFjY29yZGluZ2x5LCB0aGUgQ29yY3lyYWVhbnMgc2V0IHVwIGEgdHJvcGh5IGFuZCBnYXZlIGJhY2sgdGhlIGJvZGllcyBvZiB0aGUgZGVhZCB1bmRlciBhIHRydWNlLiBBbmQgYWZ0ZXIgdGhpcyB0aGUgcGVvcGxlIGluIHRoZSBjaXR5IHdlcmUgc3RvdXRlciBvZiBoZWFydCwgd2hpbGUgdGhvc2Ugb3V0c2lkZSB3ZXJlIGluIHRoZSB1dG1vc3QgZGVzcG9uZGVuY3kuIEZvciB0aGVyZSB3YXMgbm90IG9ubHkgYSByZXBvcnQgdGhhdCBJcGhpY3JhdGVzIHdhcyBhbHJlYWR5IHByYWN0aWNhbGx5IGF0IGhhbmQsIGJ1dCB0aGUgQ29yY3lyYWVhbnMgd2VyZSBpbiBmYWN0IGFsc28gbWFubmluZyBzaGlwcy4KPC90cmFuc2xhdGlvbj4="
translation['6.2.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIEh5cGVybWVuZXMsIHdobyBjaGFuY2VkIHRvIGJlIHZpY2UtYWRtaXJhbCB1bmRlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MyI+MzczIEIuQy48L2RhdGU+PC9ub3RlPiBNbmFzaXBwdXMsIG1hbm5lZCBmdWxseSB0aGUgZW50aXJlIGZsZWV0IHdoaWNoIGhlIGhhZCB0aGVyZSwgYW5kIGFmdGVyIHNhaWxpbmcgcm91bmQgdG8gdGhlIHN0b2NrYWRlIGFuZCBmaWxsaW5nIGFsbCBoaXMgdHJhbnNwb3J0cyB3aXRoIHRoZSBzbGF2ZXMgYW5kIHRoZSBjYXB0dXJlZCBwcm9wZXJ0eSwgc2VudCB0aGVtIG9mZjsgaGUgaGltc2VsZiwgaG93ZXZlciwgd2l0aCBoaXMgbWFyaW5lcyBhbmQgc3VjaCBvZiB0aGUgc29sZGllcnMgYXMgaGFkIGJlZW4gbGVmdCBhbGl2ZSwga2VwdCBndWFyZCBvdmVyIHRoZSBzdG9ja2FkZTsKPGRhdGUgYXV0aG5hbWU9Ii0zNzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzMiPjM3MyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.2.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5idXQgZmluYWxseSB0aGV5LCB0b28sIGVtYmFya2VkIHVwb24gdGhlIHRyaXJlbWVzIGluIGdyZWF0IGNvbmZ1c2lvbiBhbmQgd2VudCBzYWlsaW5nIG9mZiwgbGVhdmluZyBiZWhpbmQgdGhlbSBhIGdyZWF0IGRlYWwgb2YgY29ybiwgbXVjaCB3aW5lLCBhbmQgbWFueSBzbGF2ZXMgYW5kIHNpY2sgc29sZGllcnM7IGZvciB0aGV5IHdlcmUgZXhjZWVkaW5nbHkgYWZyYWlkIHRoYXQgdGhleSB3b3VsZCBiZSBjYXVnaHQgb24gdGhlIGlzbGFuZCBieSB0aGUgQXRoZW5pYW5zLiBBbmQgc28gdGhleSByZWFjaGVkIExldWNhcyBpbiBzYWZldHkuCjwvdHJhbnNsYXRpb24+"
translation['6.2.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIElwaGljcmF0ZXMsIHdoZW4gaGUgYmVnYW4gaGlzIHZveWFnZSBhcm91bmQgUGVsb3Bvbm5lc3VzIGhlIHdlbnQgb24gd2l0aCBhbGwgbmVlZGZ1bCBwcmVwYXJhdGlvbnMgZm9yIGEgbmF2YWwgYmF0dGxlIGFzIGhlIHNhaWxlZDsgZm9yIGF0IHRoZSBvdXRzZXQgaGUgaGFkIGxlZnQgaGlzIGxhcmdlIHNhaWxzIGJlaGluZCBoaW0gYXQgQXRoZW5zLCBzaW5jZSBoZSBleHBlY3RlZCB0byBmaWdodCwgYW5kIG5vdywgZnVydGhlciwgaGUgbWFkZSBidXQgc2xpZ2h0IHVzZSBvZiBoaXMgc21hbGxlciBzYWlscywgZXZlbiBpZiB0aGUgd2luZCB3YXMgZmF2b3VyYWJsZTsgYnkgbWFraW5nIGhpcyB2b3lhZ2UsIHRoZW4sIHdpdGggdGhlIG9hciwgaGUga2VwdCBoaXMgbWVuIGluIGJldHRlciBjb25kaXRpb24gb2YgYm9keSBhbmQgY2F1c2VkIHRoZSBzaGlwcyB0byBnbyBmYXN0ZXIuCjwvdHJhbnNsYXRpb24+"
translation['6.2.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgd2hlbmV2ZXIgdGhlIGV4cGVkaXRpb24gd2FzIGdvaW5nIHRvIHRha2UgdGhlIG5vb25kYXkgb3IgdGhlIGV2ZW5pbmcgbWVhbCBhdCBhbnkgcGFydGljdWxhciBzcG90LCBoZSB3b3VsZCBvZnRlbiBkcmF3IGJhY2sgdGhlIGhlYWQgb2YgdGhlIGNvbHVtbiBmcm9tIHRoZSBzaG9yZSBvcHBvc2l0ZSB0aGUgcGxhY2UgaW4gcXVlc3Rpb247IHRoZW4gaGUgd291bGQgdHVybiB0aGUgbGluZSBhcm91bmQgYWdhaW4sIGNhdXNlIHRoZSB0cmlyZW1lcyB0byBoZWFkIHRvd2FyZCB0aGUgbGFuZCwgYW5kIHN0YXJ0IHRoZW0gb2ZmIGF0IGEgc2lnbmFsIHRvIHJhY2UgdG8gdGhlIHNob3JlLiBJdCB3YXMgY291bnRlZCBhIGdyZWF0IHByaXplIG9mIHZpY3RvcnkgdG8gYmUgdGhlIGZpcnN0IHRvIGdldCB3YXRlciBvciBhbnl0aGluZyBlbHNlIHRoZXkgbmVlZGVkLCBhbmQgdGhlIGZpcnN0IHRvIGdldCB0aGVpciBtZWFsLiBPbiB0aGUgb3RoZXIgaGFuZCwgdGhvc2Ugd2hvIHJlYWNoZWQgdGhlIHNob3JlIGxhc3QgaW5jdXJyZWQgYSBncmVhdCBwZW5hbHR5IGluIHRoYXQgdGhleSBjYW1lIG9mZiB3b3JzZSBpbiBhbGwgdGhlc2UgcG9pbnRzLCBhbmQgaW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzMiPjM3MyBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlIGZhY3QgdGhhdCB0aGV5IGhhZCB0byBwdXQgdG8gc2VhIGFnYWluIGF0IHRoZSBzYW1lIHRpbWUgYXMgdGhlIHJlc3Qgd2hlbiB0aGUgc2lnbmFsIHdhcyBnaXZlbjsgZm9yIHRoZSByZXN1bHQgd2FzIHRoYXQgdGhvc2Ugd2hvIGNhbWUgaW4gZmlyc3QgZGlkIGV2ZXJ5dGhpbmcgYXQgdGhlaXIgbGVpc3VyZSwgd2hpbGUgdGhvc2Ugd2hvIGNhbWUgaW4gbGFzdCBoYWQgdG8gaHVycnkuCjxkYXRlIGF1dGhuYW1lPSItMzczIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzczIj4zNzMgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.2.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgaW4gc2V0dGluZyB3YXRjaGVzLCBpZiBoZSBjaGFuY2VkIHRvIGJlIHRha2luZyB0aGUgbWlkZGF5IG1lYWwgaW4gYSBob3N0aWxlIGNvdW50cnksIGhlIHBvc3RlZCBzb21lIG9uIHRoZSBsYW5kLCBhcyBpcyBwcm9wZXIsIGJ1dCBiZXNpZGVzIGhlIGhvaXN0ZWQgdGhlIG1hc3RzIG9uIHRoZSBzaGlwcyBhbmQgaGFkIG1lbiBrZWVwIHdhdGNoIGZyb20gdGhlaXIgdG9wcy4gVGhlc2UgbWVuLCB0aGVyZWZvcmUsIGNvdWxkIHNlZSBtdWNoIGZhcnRoZXIsIGZyb20gdGhlaXIgaGlnaGVyIHBvaW50IG9mIHZpZXcsIHRoYW4gdGhvc2Ugb24gdGhlIGxldmVsLiBGdXJ0aGVyLCB3aGVyZXZlciBoZSBkaW5lZCBvciBzbGVwdCwgaGUgd291bGQgbm90IGhhdmUgYSBmaXJlIGluc2lkZSB0aGUgY2FtcCBkdXJpbmcgdGhlIG5pZ2h0LCBidXQga2VwdCBhIGxpZ2h0IGJ1cm5pbmcgaW4gZnJvbnQgb2YgaGlzIGZvcmNlcywgc28gdGhhdCBubyBvbmUgY291bGQgYXBwcm9hY2ggdW5vYnNlcnZlZC4gRnJlcXVlbnRseSwgaG93ZXZlciwgaWYgaXQgd2FzIGdvb2Qgd2VhdGhlciwgaGUgd291bGQgcHV0IHRvIHNlYSBhZ2FpbiBpbW1lZGlhdGVseSBhZnRlciBkaW5pbmc7IGFuZCBpZiB0aGVyZSB3YXMgYSBmYXZvdXJhYmxlIGJyZWV6ZSwgdGhleSBzYWlsZWQgYW5kIHJlc3RlZCBhdCB0aGUgc2FtZSB0aW1lLCB3aGlsZSBpZiBpdCB3YXMgbmVjZXNzYXJ5IHRvIHJvdywgaGUgcmVzdGVkIHRoZSBzYWlsb3JzIGJ5IHR1cm5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5BZ2Fpbiwgd2hlbiBoZSBzYWlsZWQgYnkgZGF5LCBoZSB3b3VsZCBsZWFkIHRoZSBmbGVldCwgYnkgc2lnbmFscywgYXQgb25lIHRpbWUgaW4gY29sdW1uIGFuZCBhdCBhbm90aGVyIGluIGxpbmUgb2YgYmF0dGxlOyBzbyB0aGF0LCB3aGlsZSBzdGlsbCBwdXJzdWluZyB0aGVpciB2b3lhZ2UsIHRoZXkgaGFkIGF0IHRoZSBzYW1lIHRpbWUgcHJhY3Rpc2VkIGFuZCBiZWNvbWUgc2tpbGxlZCBpbiBhbGwgdGhlIG1hbm9ldXZyZXMgb2YgYmF0dGxlIGJlZm9yZSB0aGV5IHJlYWNoZWQgdGhlIHNlYSB3aGljaCwgYXMgdGhleSBzdXBwb3NlZCwgd2FzIGhlbGQgYnkgdGhlIGVuZW15LiBBbmQgYWx0aG91Z2ggZm9yIHRoZSBtb3N0IHBhcnQgdGhleSB0b29rIGJvdGggdGhlaXIgbm9vbmRheSBhbmQgdGhlaXIgZXZlbmluZyBtZWFscyBpbiB0aGUgZW5lbXkncyBjb3VudHJ5LCBuZXZlcnRoZWxlc3MsIGJ5IGRvaW5nIG9ubHkgdGhlIG5lY2Vzc2FyeSB0aGluZ3MsIGhlIGFsd2F5cyBnb3QgdG8gc2VhIGJlZm9yZSB0aGUgZW5lbXkncyBmb3JjZXMgYXJyaXZlZCB0byByZXBlbCBoaW0gYW5kIHNwZWVkaWx5IGdvdCB1bmRlciB3YXkgYWdhaW4uCjwvdHJhbnNsYXRpb24+"
translation['6.2.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhlIHRpbWUgb2YgTW5hc2lwcHVzJyBkZWF0aCBJcGhpY3JhdGVzIGNoYW5jZWQgdG8gYmUgbmVhciB0aGUgU3BoYWdpYWUuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBJc2xhbmRzIHNpdHVhdGVkIG9mZiBQeWxvcyBpbiBMYWNvbmlhLjwvbm90ZT4gVGhlbiwgYWZ0ZXIgcmVhY2hpbmcgRWxpcyBhbmQgc2FpbGluZyBwYXN0IHRoZSBtb3V0aCBvZiB0aGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzMiPjM3MyBCLkMuPC9kYXRlPjwvbm90ZT4gQWxwaGV1cywgaGUgYW5jaG9yZWQgYmVuZWF0aCB0aGUgcHJvbW9udG9yeSBjYWxsZWQgSWNodGh5cy4gRnJvbSB0aGVyZSBoZSBwdXQgdG8gc2VhIG9uIHRoZSBmb2xsb3dpbmcgZGF5IGZvciBDZXBoYWxsZW5pYSwgaGF2aW5nIGhpcyBmbGVldCBpbiBzdWNoIG9yZGVyIGFuZCBtYWtpbmcgdGhlIHZveWFnZSBpbiBzdWNoIGEgd2F5IHRoYXQsIGlmIGl0IHNob3VsZCBiZSBuZWNlc3NhcnkgdG8gZmlnaHQsIGhlIHNob3VsZCBiZSByZWFkeSBpbiBhbGwgZXNzZW50aWFsIHJlc3BlY3RzIHRvIGRvIHNvLiBGb3IgaGUgaGFkIG5vdCBoZWFyZCB0aGUgbmV3cyBvZiBNbmFzaXBwdXMnIGRlYXRoIGZyb20gYW55IGV5ZXdpdG5lc3MsIGJ1dCBzdXNwZWN0ZWQgdGhhdCBpdCB3YXMgdG9sZCB0byBkZWNlaXZlIGhpbSwgYW5kIGhlbmNlIHdhcyBvbiBoaXMgZ3VhcmQ7IHdoZW4gaGUgYXJyaXZlZCBhdCBDZXBoYWxsZW5pYSwgaG93ZXZlciwgaGUgdGhlcmUgZ290IGRlZmluaXRlIGluZm9ybWF0aW9uLCBhbmQgc28gcmVzdGVkIGhpcyBmb3JjZXMuCjxkYXRlIGF1dGhuYW1lPSItMzczIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzczIj4zNzMgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.2.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IEkgYW0gYXdhcmUgdGhhdCBhbGwgdGhlc2UgbWF0dGVycyBvZiBwcmFjdGljZSBhbmQgdHJhaW5pbmcgYXJlIGN1c3RvbWFyeSB3aGVuZXZlciBtZW4gZXhwZWN0IHRvIGVuZ2FnZSBpbiBhIGJhdHRsZSBieSBzZWEsIGJ1dCB0aGF0IHdoaWNoIEkgY29tbWVuZCBpbiBJcGhpY3JhdGVzIGlzIHRoaXMsIHRoYXQgd2hlbiBpdCB3YXMgaW5jdW1iZW50IHVwb24gaGltIHRvIGFycml2ZSBzcGVlZGlseSBhdCB0aGUgcGxhY2Ugd2hlcmUgaGUgc3VwcG9zZWQgaGUgc2hvdWxkIGZpZ2h0IHdpdGggdGhlIGVuZW15LCBoZSBkaXNjb3ZlcmVkIGEgd2F5IHRvIGtlZXAgaGlzIG1lbiBmcm9tIGJlaW5nIGVpdGhlciwgYnkgcmVhc29uIG9mIHRoZSB2b3lhZ2UgdGhleSBoYWQgbWFkZSwgdW5za2lsbGVkIGluIHRoZSB0YWN0aWNzIG9mIGZpZ2h0aW5nIGF0IHNlYSwgb3IsIGJ5IHJlYXNvbiBvZiB0aGVpciBoYXZpbmcgYmVlbiB0cmFpbmVkIGluIHN1Y2ggdGFjdGljcywgYW55IHRoZSBtb3JlIHRhcmR5IGluIGFycml2aW5nIGF0IHRoZWlyIGRlc3RpbmF0aW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgc3ViZHVpbmcgdGhlIGNpdGllcyBpbiBDZXBoYWxsZW5pYSBoZSBzYWlsZWQgdG8gQ29yY3lyYS4gVGhlcmUsIHVwb24gaGVhcmluZyB0aGF0IHRlbiB0cmlyZW1lcyB3ZXJlIHNhaWxpbmcgdGhpdGhlciBmcm9tIERpb255c2l1cyB0byBhaWQgdGhlIExhY2VkYWVtb25pYW5zLCBoZSBmaXJzdCB3ZW50IGluIHBlcnNvbiBhbmQgbG9va2VkIG92ZXIgdGhlIGdyb3VuZCB0byBmaW5kIGEgcG9pbnQgZnJvbSB3aGljaCBhbnkgd2hvIGFwcHJvYWNoZWQgdGhlIGlzbGFuZCBjb3VsZCBiZSBzZWVuIGFuZCB0aGUgbWVuIHN0YXRpb25lZCB0aGVyZSB0byBzZW5kIHNpZ25hbHMgdG8gdGhlIGNpdHkgd291bGQgYmUgdmlzaWJsZTsgaGUgdGhlbiBzdGF0aW9uZWQgaGlzIHdhdGNoZXJzIGF0IHRoYXQgcG9pbnQuCjwvdHJhbnNsYXRpb24+"
translation['6.2.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5IZSBhbHNvIGFncmVlZCB3aXRoIHRoZW0gYXMgdG8gaG93IHRoZXkgd2VyZSB0byBzaWduYWwgd2hlbiB0aGUgZW5lbXkgd2VyZSBhcHByb2FjaGluZyBhbmQgd2hlbiB0aGV5IHdlcmUgYXQgYW5jaG9yLiBUaGVuIGhlIGdhdmUgaGlzIG9yZGVycyB0byB0d2VudHkgb2YgdGhlIGNhcHRhaW5zLCB3aG9zZSBkdXR5IGl0IHNob3VsZCBiZSB0bzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MyI+MzczIEIuQy48L2RhdGU+PC9ub3RlPiBmb2xsb3cgaGltIHdoZW4gdGhlIGhlcmFsZCBnYXZlIHRoZSB3b3JkOyBhbmQgaW4gY2FzZSBhbnlvbmUgZmFpbGVkIHRvIGZvbGxvdywgaGUgd2FybmVkIGhpbSB0aGF0IGhlIHdvdWxkIG5vdCBoYXZlIG9jY2FzaW9uIHRvIGZpbmQgZmF1bHQgd2l0aCBoaXMgcHVuaXNobWVudC4gTm93IHdoZW4gdGhlIHNpZ25hbCBjYW1lIHRoYXQgdGhlIHRyaXJlbWVzIHdlcmUgYXBwcm9hY2hpbmcsIGFuZCB3aGVuIHRoZSB3b3JkIHdhcyBnaXZlbiBieSB0aGUgaGVyYWxkLCB0aGUgYXJkb3VyIG9mIGFsbCB3YXMgYSBzaWdodCB3b3J0aCBzZWVpbmc7IGZvciB0aGVyZSB3YXMgbm8gb25lIGFtb25nIHRob3NlIHdobyB3ZXJlIHRvIHNhaWwgd2hvIGRpZCBub3QgcnVuIHRvIGdldCBhYm9hcmQgaGlzIHNoaXAuCjxkYXRlIGF1dGhuYW1lPSItMzczIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzczIj4zNzMgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.2.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIElwaGljcmF0ZXMgaGFkIHJlYWNoZWQgdGhlIHBsYWNlIHdoZXJlIHRoZSBlbmVteSdzIHRyaXJlbWVzIHdlcmUsIGhlIGZvdW5kIHRoZSBjcmV3cyBvZiBhbGwgc2F2ZSBvbmUgYWxyZWFkeSBkaXNlbWJhcmtlZCBvbiB0aGUgc2hvcmUsIGJ1dCBNZWxhbmlwcHVzLCB0aGUgUmhvZGlhbiwgaGFkIG5vdCBvbmx5IGFkdmlzZWQgdGhlIG90aGVycyBub3QgdG8gcmVtYWluIHRoZXJlLCBidXQgaGFkIG1hbm5lZCBoaXMgb3duIHNoaXAgYW5kIHdhcyBzYWlsaW5nIG91dCB0byBzZWEuIE5vdyBhbHRob3VnaCBoZSBtZXQgdGhlIHNoaXBzIG9mIElwaGljcmF0ZXMsIGhlIG5ldmVydGhlbGVzcyBlc2NhcGVkLCBidXQgYWxsIHRoZSBzaGlwcyBmcm9tIFN5cmFjdXNlIHdlcmUgY2FwdHVyZWQsIGFsb25nIHdpdGggdGhlaXIgY3Jld3MuCjwvdHJhbnNsYXRpb24+"
translation['6.2.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZXVwb24gSXBoaWNyYXRlcyBjdXQgb2ZmIHRoZSBiZWFrcyBhbmQgdG93ZWQgdGhlIHRyaXJlbWVzIGludG8gdGhlIGhhcmJvdXIgb2YgQ29yY3lyYTsgYXMgZm9yIHRoZSBjcmV3cywgaGUgY29uY2x1ZGVkIGFuIGFncmVlbWVudCB0aGF0IGVhY2ggbWFuIHNob3VsZCBwYXkgYSBmaXhlZCByYW5zb20sIHdpdGggdGhlIGV4Y2VwdGlvbiBvZiBDcmluaXBwdXMgdGhlIGNvbW1hbmRlciwgd2hvbSBoZSBrZXB0IHVuZGVyIGd1YXJkLCBpbnRlbmRpbmcgZWl0aGVyIHRvIGV4YWN0IGEgdmVyeSBsYXJnZSByYW5zb20gb3IgdG8gc2VsbCBoaW0uIENyaW5pcHB1cywgaG93ZXZlciwgd2FzIHNvIG1vcnRpZmllZCB0aGF0IGhlIGRpZWQgYnkgYSBzZWxmLWluZmxpY3RlZCBkZWF0aCwgYW5kIElwaGljcmF0ZXMgbGV0IHRoZSByZXN0IGdvLCBhY2NlcHRpbmcgQ29yY3lyYWVhbnMgYXMgc3VyZXRpZXMgZm9yIHRoZSByYW5zb21zLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.2.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaGUgbWFpbnRhaW5lZCBoaXMgc2FpbG9ycyBmb3IgdGhlIG1vc3QgcGFydCBieSBoYXZpbmcgdGhlbSB3b3JrIGZvciB0aGUgQ29yY3lyYWVhbnMgb24gdGhlaXIgbGFuZHM7IHRoZSBwZWx0YXN0cywgaG93ZXZlciwgYW5kIHRoZSBob3BsaXRlcyBmcm9tIGhpcyBzaGlwcyBoZSB0b29rIHdpdGggaGltIGFuZCBjcm9zc2VkIG92ZXIgdG8gQWNhcm5hbmlhLiBUaGVyZSBoZSBnYXZlIGFpZCB0byB0aGUgY2l0aWVzIHdoaWNoIHdlcmUgZnJpZW5kbHksIGluIGNhc2UgYW55IG9mIHRoZW0gbmVlZGVkIGFpZCwgYW5kIG1hZGUgd2FyIHVwb24gdGhlIFRoeXJpYW5zLCB3aG8gd2VyZSB2ZXJ5IHZhbGlhbnQgbWVuIGFuZCB3ZXJlIGluIHBvc3Nlc3Npb24gb2YgYSB2ZXJ5IHN0cm9uZyBmb3J0cmVzcy4KPC90cmFuc2xhdGlvbj4="
translation['6.2.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzIiPjM3MiBCLkMuPC9kYXRlPjwvbm90ZT4gaGUgdG9vayBvdmVyIHRoZSBmbGVldCB3aGljaCB3YXMgYXQgQ29yY3lyYSwgYW5kIHdpdGggYWxtb3N0IG5pbmV0eTxkYXRlIGF1dGhuYW1lPSItMzcyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcyIj4zNzIgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFRoZSBmbGVldCBvZiB0aGUgQ29yY3lyYWVhbnMgKGNwLiAyNCBhYm92ZSkgaGF2aW5nIGJlZW4gYWRkZWQgdG8gSXBoaWNyYXRlcycgb3JpZ2luYWwgc2V2ZW50eSAoMTQpIHNoaXBzLiBUaGUgdGV4dCwgaG93ZXZlciwgYXBwZWFycyB0byBiZSBmYXVsdHkuPC9ub3RlPiBzaGlwcyBmaXJzdCBzYWlsZWQgdG8gQ2VwaGFsbGVuaWEgYW5kIGNvbGxlY3RlZCBtb25leSwgaW4gc29tZSBjYXNlcyB3aXRoIHRoZSBjb25zZW50IG9mIHRoZSBwZW9wbGUsIGluIG90aGVyIGNhc2VzIGFnYWluc3QgdGhlaXIgd2lsbC4gVGhlbiBoZSBtYWRlIHByZXBhcmF0aW9ucyB0byBpbmZsaWN0IGRhbWFnZSB1cG9uIHRoZSB0ZXJyaXRvcnkgb2YgdGhlIExhY2VkYWVtb25pYW5zLCBhbmQgdG8gYnJpbmcgb3ZlciB0byBoaXMgc2lkZSBzdWNoIG9mIHRoZSBvdGhlciBob3N0aWxlIHN0YXRlcyBpbiB0aGF0IHJlZ2lvbiBhcyB3ZXJlIHdpbGxpbmcgYW5kIHRvIG1ha2Ugd2FyIHVwb24gc3VjaCBhcyB3b3VsZCBub3QgeWllbGQuCjwvdHJhbnNsYXRpb24+"
translation['6.2.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGZvciBteSBwYXJ0IEkgbm90IG9ubHkgY29tbWVuZCB0aGlzIGNhbXBhaWduIGluIHBhcnRpY3VsYXIgYW1vbmcgYWxsIHRoZSBjYW1wYWlnbnMgb2YgSXBoaWNyYXRlcywgYnV0IEkgY29tbWVuZCwgZnVydGhlciwgaGlzIGRpcmVjdGluZyB0aGUgQXRoZW5pYW5zIHRvIGNob29zZSBhcyBoaXMgY29sbGVhZ3VlcyBDYWxsaXN0cmF0dXMsIHRoZSBwb3B1bGFyIG9yYXRvciwgd2hvIHdhcyBub3QgdmVyeSBmYXZvdXJhYmx5IGluY2xpbmVkIHRvd2FyZCBoaW0sIGFuZCBDaGFicmlhcywgd2hvIHdhcyByZWdhcmRlZCBhcyBhIHZlcnkgZ29vZCBnZW5lcmFsLiBGb3IgaWYgaGUgdGhvdWdodCB0aGVtIHRvIGJlIGFibGUgbWVuIGFuZCBoZW5jZSB3aXNoZWQgdG8gdGFrZSB0aGVtIGFzIGFkdmlzZXJzLCBoZSBzZWVtcyB0byBtZSB0byBoYXZlIGRvbmUgYSB3aXNlIHRoaW5nLCB3aGlsZSBvbiB0aGUgb3RoZXIgaGFuZCBpZiBoZSBiZWxpZXZlZCB0aGVtIHRvIGJlIGhpcyBhZHZlcnNhcmllcyBhbmQgd2lzaGVkIGluIHNvIGJvbGQgYSB3YXkgdG8gcHJvdmUgdGhhdCBoZSB3YXMgbmVpdGhlciByZW1pc3Mgbm9yIG5lZ2xlY3RmdWwgaW4gYW55IHBvaW50LCB0aGlzIHNlZW1zIHRvIG1lIHRvIGJlIHRoZSBhY3Qgb2YgYSBtYW4gcG9zc2Vzc2VkIG9mIGdyZWF0IGNvbmZpZGVuY2UgaW4gaGltc2VsZi4gSGUsIHRoZW4sIHdhcyBvY2N1cGllZCB3aXRoIHRoZXNlIHRoaW5ncy4KPC90cmFuc2xhdGlvbj4="
translation['6.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFud2hpbGUgdGhlIEF0aGVuaWFucywgc2VlaW5nIHRoYXQgdGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L25vdGU+IFBsYXRhZWFucywgd2hvIHdlcmUgdGhlaXIgZnJpZW5kcywgaGFkIGJlZW4gZXhwZWxsZWQgZnJvbSBCb2VvdGlhIGFuZCBoYWQgZmxlZCB0byB0aGVtIGZvciByZWZ1Z2UsIGFuZCB0aGF0IHRoZSBUaGVzcGlhbnMgd2VyZSBiZXNlZWNoaW5nIHRoZW0gbm90IHRvIGFsbG93IHRoZW0gdG8gYmUgbGVmdCB3aXRob3V0IGEgY2l0eSwgbm8gbG9uZ2VyIGNvbW1lbmRlZCB0aGUgVGhlYmFucywgYnV0LCBvbiB0aGUgY29udHJhcnksIHdoaWxlIHRoZXkgd2VyZSBwYXJ0bHkgYXNoYW1lZCB0byBtYWtlIHdhciB1cG9uPGRhdGUgYXV0aG5hbWU9Ii0zNzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzEiPjM3MSBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MSI+MzcxIEIuQy48L2RhdGU+PC9ub3RlPiB0aGVtIGFuZCBwYXJ0bHkgcmVja29uZWQgaXQgdG8gYmUgaW5leHBlZGllbnQsIHRoZXkgbmV2ZXJ0aGVsZXNzIHJlZnVzZWQgYW55IGxvbmdlciB0byB0YWtlIHBhcnQgd2l0aCB0aGVtIGluIHdoYXQgdGhleSB3ZXJlIGRvaW5nLCBpbmFzbXVjaCBhcyB0aGV5IHNhdyB0aGF0IHRoZXkgd2VyZSBjYW1wYWlnbmluZyBhZ2FpbnN0IHRoZSBQaG9jaWFucywgd2hvIHdlcmUgb2xkIGZyaWVuZHMgb2YgdGhlIEF0aGVuaWFucywgYW5kIHdlcmUgYW5uaWhpbGF0aW5nIGNpdGllcyB3aGljaCBoYWQgYmVlbiBmYWl0aGZ1bCBpbiB0aGUgd2FyIGFnYWluc3QgdGhlIGJhcmJhcmlhbjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFRoZSBQbGF0YWVhbnMgYW5kIFRoZXNwaWFucyBoYWQsIGluIGZhY3QsIHdvbiBlc3BlY2lhbCBkaXN0aW5jdGlvbiBpbiB0aGUgUGVyc2lhbiB3YXJzLjwvbm90ZT4gYW5kIHdlcmUgZnJpZW5kbHkgdG8gQXRoZW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZvciB0aGVzZSByZWFzb25zIHRoZSBBdGhlbmlhbiBwZW9wbGUgdm90ZWQgdG8gbWFrZSBwZWFjZSwgYW5kIGluIHRoZSBmaXJzdCBwbGFjZSBzZW50IGFtYmFzc2Fkb3JzIHRvIFRoZWJlcyB0byBpbnZpdGUgdGhlIFRoZWJhbnMgdG8gZ28gd2l0aCB0aGVtIHRvIExhY2VkYWVtb24gdG8gdHJlYXQgZm9yIHBlYWNlIGlmIHRoZXkgc28gZGVzaXJlZDsgdGhlbiB0aGV5IHNlbnQgYW1iYXNzYWRvcnMgdG8gTGFjZWRhZW1vbiB0aGVtc2VsdmVzLiBBbW9uZyB0aG9zZSB3aG8gd2VyZSBjaG9zZW4gd2VyZSBDYWxsaWFzLCB0aGUgc29uIG9mIEhpcHBvbmljdXM7IEF1dG9jbGVzLCB0aGUgc29uIG9mIFN0cm9tYmljaGlkZXM7IERlbW9zdHJhdHVzLCB0aGUgc29uIG9mIEFyaXN0b3Bob247IEFyaXN0b2NsZXMsIENlcGhpc29kb3R1cywgTWVsYW5vcHVzLCBhbmQgTHljYWV0aHVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkNhbGxpc3RyYXR1cywgdGhlIHBvcHVsYXIgb3JhdG9yLCBhbHNvIHdlbnQgd2l0aCB0aGUgZW1iYXNzeTsgZm9yIGhlIGhhZCBwcm9taXNlZCBJcGhpY3JhdGVzIHRoYXQgaWYgaGUgd291bGQgbGV0IGhpbSBnbyBob21lLCBoZSB3b3VsZCBlaXRoZXIgc2VuZCBtb25leSBmb3IgdGhlIGZsZWV0IG9yIGJyaW5nIGFib3V0IHBlYWNlLCBhbmQgY29uc2VxdWVudGx5IGhlIGhhZCBiZWVuIGF0IEF0aGVucyBhbmQgZW5nYWdlZCBpbiBlZmZvcnRzIHRvIHNlY3VyZSBwZWFjZTsgYW5kIHdoZW4gdGhlIGFtYmFzc2Fkb3JzIGNhbWUgYmVmb3JlIHRoZSBhc3NlbWJseSBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIHRoZSByZXByZXNlbnRhdGl2ZXMgb2YgdGhlaXIgYWxsaWVzLCB0aGUgZmlyc3Qgb2YgdGhlbSB3aG8gc3Bva2Ugd2FzIENhbGxpYXMsIHRoZSB0b3JjaC1iZWFyZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBPZiB0aGUgRWxldXNpbmlhbiBteXN0ZXJpZXMuY3AuIElJLiBpdi4gMjAuPC9ub3RlPiBIZSB3YXMgdGhlIHNvcnQgb2YgbWFuIHRvIGVuam95IG5vIGxlc3MgYmVpbmcgcHJhaXNlZCBieSBoaW1zZWxmIHRoYW4gYnkgb3RoZXJzLCBhbmQgb24gdGhpcyBvY2Nhc2lvbiBoZSBiZWdhbiBpbiBhYm91dCB0aGUgZm9sbG93aW5nIHdvcmRzOgo8L3RyYW5zbGF0aW9uPg=="
translation['6.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxNZW4gb2YgTGFjZWRhZW1vbiwgYXMgcmVnYXJkcyB0aGUgcG9zaXRpb24gSSBob2xkIGFzIHlvdXIgZGlwbG9tYXRpYyBhZ2VudCwgSSBhbSBub3QgdGhlIG9ubHkgbWVtYmVyIG9mIG91ciBmYW1pbHkgd2hvIGhhcyBoZWxkIGl0LCBidXQgbXkgZmF0aGVyJ3MgZmF0aGVyIHJlY2VpdmVkIGl0IGZyb20gaGlzIGZhdGhlciBhbmQgaGFuZGVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L25vdGU+IGl0IG9uIHRvIGhpcyBkZXNjZW5kYW50czsgYW5kIEkgYWxzbyB3aXNoIHRvIG1ha2UgY2xlYXIgdG8geW91IGhvdyBoaWdobHkgZXN0ZWVtZWQgd2UgaGF2ZSBiZWVuIGJ5IG91ciBvd24gc3RhdGUuIEZvciB3aGVuZXZlciB0aGVyZSBpcyB3YXIgc2hlIGNob29zZXMgdXMgYXMgZ2VuZXJhbHMsIGFuZCB3aGVuZXZlciBzaGUgYmVjb21lcyBkZXNpcm91cyBvZiB0cmFucXVpbGxpdHkgc2hlIHNlbmRzIHVzIG91dCBhcyBwZWFjZW1ha2Vycy4gSSwgZm9yIGV4YW1wbGUsIGhhdmUgdHdpY2UgYmVmb3JlIG5vdyBjb21lIGhlcmUgdG8gdHJlYXQgZm9yIGEgdGVybWluYXRpb24gb2Ygd2FyLCBhbmQgb24gYm90aCB0aGVzZSBlbWJhc3NpZXMgSSBzdWNjZWVkZWQgaW4gYWNoaWV2aW5nIHBlYWNlIGJvdGggZm9yIHlvdSBhbmQgZm9yIG91cnNlbHZlczsgbm93IGZvciBhIHRoaXJkIHRpbWUgSSBhbSBjb21lLCBhbmQgaXQgaXMgbm93LCBJIGJlbGlldmUsIHRoYXQgd2l0aCBncmVhdGVyIGp1c3RpY2UgdGhhbiBldmVyIGJlZm9yZSBJIHNob3VsZCBvYnRhaW4gYSByZWNvbmNpbGlhdGlvbiBiZXR3ZWVuIHVzLiBGb3IKPGRhdGUgYXV0aG5hbWU9Ii0zNzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzEiPjM3MSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkkgc2VlIHRoYXQgeW91IGRvIG5vdCB0aGluayBvbmUgd2F5IGFuZCB3ZSBhbm90aGVyLCBidXQgdGhhdCB5b3UgYXMgd2VsbCBhcyB3ZSBhcmUgZGlzdHJlc3NlZCBvdmVyIHRoZSBkZXN0cnVjdGlvbiBvZiBQbGF0YWVhIGFuZCBUaGVzcGlhZS4gSG93LCB0aGVuLCBpcyBpdCBub3QgZml0dGluZyB0aGF0IG1lbiB3aG8gaG9sZCB0aGUgc2FtZSB2aWV3cyBzaG91bGQgYmUgZnJpZW5kcyBvZiBvbmUgYW5vdGhlciByYXRoZXIgdGhhbiBlbmVtaWVzPyBBZ2FpbiwgaXQgaXMgY2VydGFpbmx5IHRoZSBwYXJ0IG9mIHdpc2UgbWVuIG5vdCB0byB1bmRlcnRha2Ugd2FyIGV2ZW4gaWYgdGhleSBzaG91bGQgaGF2ZSBkaWZmZXJlbmNlcywgaWYgdGhleSBiZSBzbGlnaHQ7IGJ1dCBpZiwgaW4gZmFjdCwgd2Ugc2hvdWxkIGFjdHVhbGx5IGZpbmQgb3Vyc2VsdmVzIGluIGNvbXBsZXRlIGFncmVlbWVudCwgc2hvdWxkIHdlIG5vdCBiZSBhc3RvdW5kaW5nIGZvb2xzIG5vdCB0byBtYWtlIHBlYWNlPyAsIHdoaWxlIHRoZSBEaW9zY3VyaSwgQ2FzdG9yIGFuZCBQb2xsdXgsIHdlcmUgcHV0YXRpdmUgc29ucyBvZiBUeW5kYXJldXMgb2YgU3BhcnRhLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZSByaWdodCBjb3Vyc2UsIGluZGVlZCwgd291bGQgaGF2ZSBiZWVuIGZvciB1cyBub3QgdG8gdGFrZSB1cCBhcm1zIGFnYWluc3Qgb25lIGFub3RoZXIgaW4gdGhlIGJlZ2lubmluZywgc2luY2UgdGhlIHRyYWRpdGlvbiBpcyB0aGF0IHRoZSBmaXJzdCBzdHJhbmdlcnMgdG8gd2hvbSBUcmlwdG9sZW11cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VHJpcHRvbGVtdXMgb2YgRWxldXNpcyBoYWQsIGFjY29yZGluZyB0byB0aGUgbGVnZW5kLCBjYXJyaWVkIGZyb20gQXR0aWNhIHRocm91Z2hvdXQgR3JlZWNlIGJvdGggdGhlIGN1bHQgb2YgRGVtZXRlciBhbmQgdGhlIGtub3dsZWRnZSBvZiBoZXIgYXJ0IOKAlCBhZ3JpY3VsdHVyZS4gSGVyYWNsZXMgd2FzIHRoZSB0cmFkaXRpb25hbCBhbmNlc3RvciBvZiB0aGUgU3BhcnRhbiBraW5ncyAoY3AuIElJSS4gaWlpLikgd2hpbGUgdGhlIERpb3NjdXJpLCBDYXN0b3IgYW5kIFBvbGx1eCwgd2VyZSBwdXRhdGl2ZSBzb25zIG9mIFR5bmRhcmV1cyBvZiBTcGFydGEuPC9ub3RlPiBvdXIgYW5jZXN0b3IsIHJldmVhbGVkIHRoZSBteXN0aWMgcml0ZXMgb2YgRGVtZXRlciBhbmQgQ29yZSB3ZXJlIEhlcmFjbGVzLCB5b3VyIHN0YXRlJ3MgZm91bmRlciwgYW5kIHRoZSBEaW9zY3VyaSwgeW91ciBjaXRpemVuczsgYW5kLCBmdXJ0aGVyLCB0aGF0IGl0IHdhcyB1cG9uIFBlbG9wb25uZXN1cyB0aGF0IGhlIGZpcnN0IGJlc3Rvd2VkIHRoZSBzZWVkIG9mIERlbWV0ZXIncyBmcnVpdC4gSG93LCB0aGVuLCBjYW4gaXQgYmUgcmlnaHQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L25vdGU+IGVpdGhlciB0aGF0IHlvdSBzaG91bGQgZXZlciBjb21lIHRvIGRlc3Ryb3kgdGhlIGZydWl0IG9mIHRob3NlIHZlcnkgbWVuIGZyb20gd2hvbSB5b3UgcmVjZWl2ZWQgdGhlIHNlZWQsIG9yIHRoYXQgd2Ugc2hvdWxkIG5vdCBkZXNpcmUgdGhvc2UgdmVyeSBtZW4sIHRvIHdob20gd2UgZ2F2ZSB0aGUgc2VlZCwgdG8gb2J0YWluIHRoZSBncmVhdGVzdCBwb3NzaWJsZSBhYnVuZGFuY2Ugb2YgZm9vZD8gQnV0IGlmIGl0IGlzIGluZGVlZCBvcmRlcmVkIG9mIHRoZSBnb2RzIHRoYXQgd2FycyBzaG91bGQgY29tZSBhbW9uZyBtZW4sIHRoZW4gd2Ugb3VnaHQgdG8gYmVnaW4gd2FyIGFzIHRhcmRpbHkgYXMgd2UgY2FuLCBhbmQsIHdoZW4gaXQgaGFzIGNvbWUsIHRvIGJyaW5nIGl0IHRvIGFuIGVuZCBhcyBzcGVlZGlseSBhcyBwb3NzaWJsZS7igJ0KPGRhdGUgYXV0aG5hbWU9Ii0zNzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzEiPjM3MSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciBoaW0gQXV0b2NsZXMsIHdobyBoYWQgdGhlIHJlcHV0YXRpb24gb2YgYmVpbmcgYSB2ZXJ5IGluY2lzaXZlIG9yYXRvciwgc3Bva2UgYXMgZm9sbG93czog4oCcTWVuIG9mIExhY2VkYWVtb24sIHRoYXQgd2hhdCBJIGFtIGFib3V0IHRvIHNheSB3aWxsIG5vdCBiZSBzYWlkIHRvIHlvdXIgcGxlYXN1cmUsIEkgYW0gbm90IHVuYXdhcmU7IGJ1dCBpdCBzZWVtcyB0byBtZSB0aGF0IG1lbiB3aG8gZGVzaXJlIHRoZSBmcmllbmRzaGlwIHdoaWNoIHRoZXkgbWF5IGVzdGFibGlzaCB0byBlbmR1cmUgZm9yIHRoZSBsb25nZXN0IHBvc3NpYmxlIHRpbWUsIG91Z2h0IHRvIHBvaW50IG91dCB0byBvbmUgYW5vdGhlciB0aGUgY2F1c2VzIG9mIHRoZWlyIHdhcnMuIE5vdyB5b3UgYWx3YXlzIHNheSwgYFRoZSBjaXRpZXMgbXVzdCBiZSBpbmRlcGVuZGVudCwnIGJ1dCB5b3UgYXJlIHlvdXJzZWx2ZXMgdGhlIGdyZWF0ZXN0IG9ic3RhY2xlIGluIHRoZSB3YXkgb2YgdGhlaXIgaW5kZXBlbmRlbmNlLiBGb3IgdGhlIGZpcnN0IHN0aXB1bGF0aW9uIHlvdSBtYWtlIHdpdGggeW91ciBhbGxpZWQgY2l0aWVzIGlzIHRoaXMsIHRoYXQgdGhleSBmb2xsb3cgd2hlcmV2ZXIgeW91IG1heSBsZWFkLiBBbmQgeWV0IGhvdyBpcyB0aGlzIGNvbnNpc3RlbnQgd2l0aCBpbmRlcGVuZGVuY2U/CjwvdHJhbnNsYXRpb24+"
translation['6.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB5b3UgbWFrZSBmb3IgeW91cnNlbHZlcyBlbmVtaWVzIHdpdGhvdXQgdGFraW5nIGNvdW5zZWwgd2l0aCB5b3VyIGFsbGllcywgYW5kIGFnYWluc3QgdGhvc2UgZW5lbWllcyB5b3UgbGVhZCB0aGVtOyBzbyB0aGF0IGZyZXF1ZW50bHkgdGhleSB3aG8gYXJlIHNhaWQgdG8gYmUgaW5kZXBlbmRlbnQgYXJlIGNvbXBlbGxlZCB0byB0YWtlIHRoZSBmaWVsZCBhZ2FpbnN0IG1lbiBtb3N0IGZyaWVuZGx5IHRvIHRoZW1zZWx2ZXMuIEZ1cnRoZXJtb3JlIOKAlCBhbmQgdGhlcmUgY2FuIGJlIG5vdGhpbmcgaW4gdGhlIHdvcmxkIG1vcmUgb3Bwb3NlZCB0byBpbmRlcGVuZGVuY2Ug4oCUIHlvdSBlc3RhYmxpc2ggZ292ZXJubWVudHMgb2YgdGVuIGhlcmUgYW5kIGdvdmVybm1lbnRzIG9mIHRoaXJ0eSB0aGVyZTsgYW5kIGluIHRoZSBjYXNlIG9mIHRoZXNlIHJ1bGVycyB5b3VyIGNhcmUgaXMsIG5vdCB0aGF0IHRoZXkgc2hhbGwgcnVsZSBhY2NvcmRpbmcgdG8gbGF3LCBidXQgdGhhdCB0aGV5IHNoYWxsIGJlIGFibGUgdG8gaG9sZCBwb3NzZXNzaW9uIG9mIHRoZWlyIGNpdGllcyBieSBmb3JjZS4gU28gdGhhdCB5b3UgbWFuaWZlc3RseSB0YWtlIHBsZWFzdXJlIGluIGRlc3BvdGlzbXMgcmF0aGVyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L25vdGU+IHRoYW4gaW4gZnJlZSBnb3Zlcm5tZW50cy4KPGRhdGUgYXV0aG5hbWU9Ii0zNzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzEiPjM3MSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB3aGVuIHRoZSBLaW5nIGRpcmVjdGVkIHRoYXQgdGhlIGNpdGllcyBiZSBpbmRlcGVuZGVudCwgeW91IHNob3dlZCB5b3Vyc2VsdmVzIHN0cm9uZ2x5IG9mIHRoZSBvcGluaW9uIHRoYXQgaWYgdGhlIFRoZWJhbnMgZGlkIG5vdCBhbGxvdyBlYWNoIG9uZSBvZiB0aGVpciBjaXRpZXMsIG5vdCBvbmx5IHRvIHJ1bGUgaXRzZWxmLCBidXQgYWxzbyB0byBsaXZlIHVuZGVyIHdoYXRldmVyIGxhd3MgaXQgY2hvc2UsIHRoZXkgd291bGQgbm90IGJlIGFjdGluZyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIEtpbmcncyB3cml0aW5nOyBidXQgd2hlbiB5b3UgaGFkIHNlaXplZCB0aGUgQ2FkbWVhLCB5b3UgZGlkIG5vdCBwZXJtaXQgZXZlbiB0aGUgVGhlYmFucyB0aGVtc2VsdmVzIHRvIGJlIGluZGVwZW5kZW50LiBUaGUgcmlnaHQgdGhpbmcsIGhvd2V2ZXIsIGlzIHRoYXQgdGhvc2Ugd2hvIGFyZSBnb2luZyB0byBiZSBmcmllbmRzIHNob3VsZCBub3QgaW5zaXN0IHVwb24gb2J0YWluaW5nIHRoZWlyIGZ1bGwgcmlnaHRzIGZyb20gb3RoZXJzLCBhbmQgdGhlbiBzaG93IHRoZW1zZWx2ZXMgZGlzcG9zZWQgdG8gZ3Jhc3AgdGhlIG1vc3QgdGhleSBjYW4u4oCdCjwvdHJhbnNsYXRpb24+"
translation['6.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnkgdGhlc2Ugd29yZHMgaGUgY2F1c2VkIHNpbGVuY2Ugb24gdGhlIHBhcnQgb2YgYWxsLCB3aGlsZSBhdCB0aGUgc2FtZSB0aW1lIGhlIGdhdmUgcGxlYXN1cmUgdG8gdGhvc2Ugd2hvIHdlcmUgYW5ncnkgd2l0aCB0aGUgTGFjZWRhZW1vbmlhbnMuIEFmdGVyIGhpbSBDYWxsaXN0cmF0dXMgc2FpZDog4oCcTWVuIG9mIExhY2VkYWVtb24sIHRoYXQgbWlzdGFrZXMgaGF2ZSBub3QgYmVlbiBtYWRlLCBib3RoIG9uIG91ciBzaWRlIGFuZCBvbiB5b3VycywgSSBmb3Igb25lIGRvIG5vdCB0aGluayBJIGNvdWxkIGFzc2VydDsgYnV0IEkgZG8gbm90IGhvbGQgdG8gdGhlIG9waW5pb24gdGhhdCBvbmUgb3VnaHQgbmV2ZXIgYWdhaW4gdG8gaGF2ZSBhbnkgZGVhbGluZ3Mgd2l0aCBwZW9wbGUgd2hvIG1ha2UgbWlzdGFrZXMuIEZvciBJIHNlZSB0aGF0IG5vIG9uZSBpbiB0aGUgd29ybGQgcmVtYWlucyBhbHdheXMgZnJlZSBmcm9tIGVycm9yLiBBbmQgaXQgc2VlbXMgdG8gbWUgdGhhdCB0aHJvdWdoIG1ha2luZyBtaXN0YWtlcyBtZW4gc29tZXRpbWVzIGJlY29tZSBldmVuIGVhc2llciB0byBkZWFsIHdpdGgsIGVzcGVjaWFsbHkgaWYgdGhleSBoYXZlIGluY3VycmVkIHB1bmlzaG1lbnQgaW4gY29uc2VxdWVuY2Ugb2YgdGhlaXIgbWlzdGFrZXMsIGFzIHdlIGhhdmUuCjwvdHJhbnNsYXRpb24+"
translation['6.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5JbiB5b3VyIG93biBjYXNlLCBhbHNvLCBJIHNlZSB0aGF0IHNvbWV0aW1lcyBtYW55IHJldmVyc2VzIHJlc3VsdCBmcm9tIHRoZSB0aGluZ3MgeW91IGhhdmUgZG9uZSB3aXRoIHRvbyBsaXR0bGUganVkZ21lbnQsIGFtb25nIHdoaWNoIHdhcywgaW4gZmFjdCwgdGhlIHNlaXp1cmUgb2YgdGhlIENhZG1lYSBpbiBUaGViZXM7IG5vdywgYXQgYW55IHJhdGUsIHRoZSBjaXRpZXMgd2hpY2ggeW91IHdlcmUgZWFnZXIgdG8gbWFrZSBpbmRlcGVuZGVudCBoYXZlIGFsbCwgaW4gY29uc2VxdWVuY2Ugb2YgdGhlIHdyb25nIGRvbmUgdG8gdGhlIFRoZWJhbnMsIGZhbGxlbiBhZ2FpbiB1bmRlciB0aGVpciBwb3dlci4gSGVuY2UgSSBob3BlIHRoYXQgbm93LCB3aGVuIHdlIGhhdmUgYmVlbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MSI+MzcxIEIuQy48L2RhdGU+PC9ub3RlPiB0YXVnaHQgdGhhdCB0byBzZWVrIHNlbGZpc2ggYWR2YW50YWdlIGlzIHVucHJvZml0YWJsZSwgd2Ugc2hhbGwgYWdhaW4gYmUgcmVhc29uYWJsZSBpbiBvdXIgZnJpZW5kc2hpcCB3aXRoIGVhY2ggb3RoZXIuCjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdG91Y2hpbmcgdGhlIHNsYW5kZXJvdXMgYWxsZWdhdGlvbnMgb2YgY2VydGFpbiBwZW9wbGUgd2hvIHdpc2ggdG8gZGVmZWF0IHRoZSBwZWFjZSwgdG8gdGhlIGVmZmVjdCB0aGF0IHdlIGhhdmUgY29tZSBoZXJlLCBub3QgYmVjYXVzZSB3ZSBkZXNpcmUgZnJpZW5kc2hpcCwgYnV0IHJhdGhlciBiZWNhdXNlIHdlIGZlYXIgdGhhdCBBbnRhbGNpZGFzIG1heSBhcnJpdmUgd2l0aCBtb25leSBmcm9tIHRoZSBLaW5nLCBjb25zaWRlciBob3cgZm9vbGlzaGx5IHRoZXkgYXJlIHRhbGtpbmcuIEZvciB0aGUgS2luZyBkaXJlY3RlZCwgYXMgeW91IGtub3csIHRoYXQgYWxsIHRoZSBjaXRpZXMgaW4gR3JlZWNlIHdlcmUgdG8gYmUgaW5kZXBlbmRlbnQ7IHdoeSB0aGVuIHNob3VsZCB3ZSwgd2hvIGFncmVlIHdpdGggdGhlIEtpbmcgaW4gYm90aCB3b3JkIGFuZCBkZWVkLCBiZSBhZnJhaWQgb2YgaGltPyBPciBkb2VzIGFueW9uZSBpbWFnaW5lIHRoYXQgdGhlIEtpbmcgcHJlZmVycyB0byBzcGVuZCBtb25leSBhbmQgbWFrZSBvdGhlcnMgZ3JlYXQsIHJhdGhlciB0aGFuLCB3aXRob3V0IGV4cGVuc2UsIHRvIGhhdmUgdGhvc2UgdGhpbmdzIGFjY29tcGxpc2hlZCBmb3IgaGltIHdoaWNoIGhlIGp1ZGdlZCB0byBiZSBiZXN0Pwo8L3RyYW5zbGF0aW9uPg=="
translation['6.3.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcU28gbXVjaCBmb3IgdGhhdC4gV2h5LCB0aGVuLCBoYXZlIHdlIGNvbWU/IFRoYXQgaXQgc3VyZWx5IGlzIG5vdCBiZWNhdXNlIHdlIGFyZSBpbiBzdHJhaXRzLCB5b3UgY291bGQgZGlzY292ZXIsIGlmIHlvdSBwbGVhc2UsIGJ5IGxvb2tpbmcgYXQgdGhlIHNpdHVhdGlvbiBieSBzZWEgb3IsIGlmIHlvdSBwbGVhc2UsIGF0IHRoZSBzaXR1YXRpb24gYnkgbGFuZCBhdCB0aGUgcHJlc2VudCB0aW1lLiBXaGF0LCB0aGVuLCBpcyB0aGUgcmVhc29uPyBNYW5pZmVzdGx5IHRoYXQgc29tZSBvZiBvdXIgYWxsaWVzIGFyZSBkb2luZyB3aGF0IGlzIG5vdCBwbGVhc2luZyB0byB1cy4gQW5kIHBlcmhhcHMgd2UgYWxzbyBzaG91bGQgbGlrZSB0byBzaG93IHlvdSB0aGUgZ3JhdGl0dWRlIHdlIHJpZ2h0bHkgY29uY2VpdmVkIHRvd2FyZCB5b3UgYmVjYXVzZSB5b3UgcHJlc2VydmVkIHVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gQXQgdGhlIGNsb3NlIG9mIHRoZSBQZWxvcG9ubmVzaWFuIHdhciB0aGUgTGFjZWRhZW1vbmlhbnMgcmVqZWN0ZWQgdGhlIHByb3Bvc2FsIHVyZ2VkIGJ5IG1hbnkgb2YgdGhlaXIgYWxsaWVzLCB0aGF0IEF0aGVucyBzaG91bGQgYmUgZGVzdHJveWVkLmNwLiBJSS4gaWkuIDE5LCAyMC48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['6.3.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgdG8gbWVudGlvbiBhbHNvIHRoZSBtYXR0ZXIgb2YgZXhwZWRpZW5jeSwgdGhlcmUgYXJlLCBvZiBjb3Vyc2UsIGFtb25nIGFsbCB0aGUgY2l0aWVzIG9mIEdyZWVjZSwgc29tZSB0aGF0IHRha2UgeW91ciBzaWRlIGFuZCBvdGhlcnMgdGhhdCB0YWtlIG91cnMsIGFuZCBpbiBlYWNoIHNpbmdsZSBjaXR5IHNvbWUgcGVvcGxlIGZhdm91ciB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIG90aGVycyB0aGUgQXRoZW5pYW5zLiBJZiwgdGhlcmVmb3JlLCB3ZSBzaG91bGQgYmVjb21lIGZyaWVuZHMsIGZyb20gd2hhdCBxdWFydGVyIGNvdWxkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L25vdGU+IHdlIHdpdGggcmVhc29uIGV4cGVjdCBhbnkgdHJvdWJsZT8gRm9yIHdobyBjb3VsZCBwcm92ZSBzdHJvbmcgZW5vdWdoIHRvIHZleCB1cyBieSBsYW5kIGlmIHlvdSB3ZXJlIG91ciBmcmllbmRzPyBBbmQgd2hvIGNvdWxkIGRvIHlvdSBhbnkgaGFybSBieSBzZWEgaWYgd2Ugd2VyZSBmYXZvdXJhYmx5IGluY2xpbmVkIHRvd2FyZCB5b3U/CjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.3.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Nb3Jlb3Zlciwgd2UgYWxsIGtub3cgdGhhdCB3YXJzIGFyZSBmb3JldmVyIGJyZWFraW5nIG91dCBhbmQgYmVpbmcgY29uY2x1ZGVkLCBhbmQgdGhhdCB3ZSDigJQgaWYgbm90IG5vdywgc3RpbGwgYXQgc29tZSBmdXR1cmUgdGltZSDigJQgc2hhbGwgZGVzaXJlIHBlYWNlIGFnYWluLiBXaHksIHRoZW4sIHNob3VsZCB3ZSB3YWl0IGZvciB0aGUgdGltZSB3aGVuIHdlIHNoYWxsIGhhdmUgYmVjb21lIGV4aGF1c3RlZCBieSBhIG11bHRpdHVkZSBvZiBpbGxzLCBhbmQgbm90IHJhdGhlciBjb25jbHVkZSBwZWFjZSBhcyBxdWlja2x5IGFzIHBvc3NpYmxlIGJlZm9yZSBhbnl0aGluZyBpcnJlbWVkaWFibGUgaGFwcGVucz8KPC90cmFuc2xhdGlvbj4="
translation['6.3.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BZ2FpbiwgSSBmb3IgbXkgcGFydCBkbyBub3QgY29tbWVuZCB0aG9zZSBtZW4gd2hvLCB3aGVuIHRoZXkgaGF2ZSBiZWNvbWUgY29tcGV0aXRvcnMgaW4gdGhlIGdhbWVzIGFuZCBoYXZlIGFscmVhZHkgYmVlbiB2aWN0b3Jpb3VzIG1hbnkgdGltZXMgYW5kIGVuam95IGZhbWUsIGFyZSBzbyBmb25kIG9mIGNvbnRlc3QgdGhhdCB0aGV5IGRvIG5vdCBzdG9wIHVudGlsIHRoZXkgYXJlIGRlZmVhdGVkIGFuZCBzbyBlbmQgdGhlaXIgYXRobGV0aWMgdHJhaW5pbmc7IG5vciBvbiB0aGUgb3RoZXIgaGFuZCBkbyBJIGNvbW1lbmQgdGhvc2UgZGljZXJzIHdobywgaWYgdGhleSB3aW4gb25lIHN1Y2Nlc3MsIHRocm93IGZvciBkb3VibGUgc3Rha2VzLCBmb3IgSSBzZWUgdGhhdCB0aGUgbWFqb3JpdHkgb2Ygc3VjaCBwZW9wbGUgYmVjb21lIHV0dGVybHkgaW1wb3ZlcmlzaGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.3.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5XZSwgdGhlbiwgc2VlaW5nIHRoZXNlIHRoaW5ncywgb3VnaHQgbmV2ZXIgdG8gZW5nYWdlIGluIGEgY29udGVzdCBvZiBzdWNoIGEgc29ydCB0aGF0IHdlIHNoYWxsIGVpdGhlciB3aW4gYWxsIG9yIGxvc2UgYWxsLCBidXQgb3VnaHQgcmF0aGVyIHRvIGJlY29tZSBmcmllbmRzIG9mIG9uZSBhbm90aGVyIHdoaWxlIHdlIGFyZSBzdGlsbCBzdHJvbmcgYW5kIHN1Y2Nlc3NmdWwuIEZvciB0aHVzIHdlIHRocm91Z2ggeW91LCBhbmQgeW91IHRocm91Z2ggdXMsIGNvdWxkIHBsYXkgZXZlbiBhIGdyZWF0ZXIgcGFydCBpbiBHcmVlY2UgdGhhbiBpbiB0aW1lcyBnb25lIGJ5LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['6.3.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U2luY2UgdGhlc2UgbWVuIHdlcmUgYWRqdWRnZWQgdG8gaGF2ZSBzcG9rZW4gcmlnaHRseSwgdGhlIExhY2VkYWVtb25pYW5zIHZvdGVkIHRvIGFjY2VwdCB0aGUgcGVhY2UsIHdpdGggdGhlIHByb3Zpc2lvbiB0aGF0IGFsbCBzaG91bGQgd2l0aGRyYXcgdGhlaXIgZ292ZXJub3JzIGZyb20gdGhlIGNpdGllcywgZGlzYmFuZCB0aGVpciBhcm1hbWVudHMgYm90aCBvbiBzZWEgYW5kIG9uIGxhbmQsIGFuZCBsZWF2ZSB0aGUgY2l0aWVzIGluZGVwZW5kZW50LiBBbmQgaWYgYW55IHN0YXRlIHNob3VsZCBhY3QgaW4gdmlvbGF0aW9uIG9mIHRoaXMgYWdyZWVtZW50LCBpdCB3YXMgcHJvdmlkZWQgdGhhdCBhbnkgd2hpY2ggc28gZGVzaXJlZCBtaWdodCBhaWQgdGhlIGluanVyZWQgY2l0aWVzLCBidXQgdGhhdCBhbnk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzEiPjM3MSBCLkMuPC9kYXRlPjwvbm90ZT4gd2hpY2ggZGlkIG5vdCBzbyBkZXNpcmUgd2FzIG5vdCB1bmRlciBvYXRoIHRvIGJlIHRoZSBhbGx5IG9mIHRob3NlIHdobyB3ZXJlIGluanVyZWQuCjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.3.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGVzZSB0ZXJtcyB0aGUgTGFjZWRhZW1vbmlhbnMgdG9vayB0aGUgb2F0aCBmb3IgdGhlbXNlbHZlcyBhbmQgdGhlaXIgYWxsaWVzLCB3aGlsZSB0aGUgQXRoZW5pYW5zIGFuZCB0aGVpciBhbGxpZXMgdG9vayB0aGUgb2F0aCBzZXZlcmFsbHksIGNpdHkgYnkgY2l0eS4gVGhlIFRoZWJhbnMgYWxzbyBzaWduZWQgdGhlaXIgbmFtZXMgYW1vbmcgdGhlIGNpdGllcyB3aGljaCBoYWQgc3dvcm4sIGJ1dCBvbiB0aGUgZm9sbG93aW5nIGRheSB0aGVpciBhbWJhc3NhZG9ycyBjYW1lIGluIGFnYWluIGFuZCBkZW1hbmRlZCB0aGF0IHRoZSB3cml0aW5nIGJlIGNoYW5nZWQgdG8gcmVhZCB0aGF0IOKAnHRoZSBCb2VvdGlhbnPigJ0gaW5zdGVhZCBvZiDigJx0aGUgVGhlYmFuc+KAnSBoYWQgc3dvcm4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBpLmUuLCBpbnNpc3RpbmcgdXBvbiB0aGVpciBjbGFpbSB0byBoZWFkc2hpcCBpbiBCb2VvdGlhLjwvbm90ZT4gQWdlc2lsYXVzLCBob3dldmVyLCByZXBsaWVkIHRoYXQgaGUgd291bGQgY2hhbmdlIG5vIHBhcnQgb2Ygd2hhdCB0aGV5IGhhZCBzd29ybiB0byBhbmQgc2lnbmVkIGluIHRoZSBmaXJzdCBwbGFjZTsgYnV0IGlmIHRoZXkgZGlkIG5vdCB3aXNoIHRvIGJlIGluY2x1ZGVkIGluIHRoZSB0cmVhdHksIGhlIHNhaWQgdGhhdCBoZSB3b3VsZCBzdHJpa2Ugb3V0IHRoZWlyIG5hbWVzIGlmIHRoZXkgc28gZGlyZWN0ZWQuCjwvdHJhbnNsYXRpb24+"
translation['6.3.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBhY2NvcmRpbmdseSwgdW5kZXIgdGhlc2UgY2lyY3Vtc3RhbmNlcyB0aGUgb3RoZXJzIGhhZCBjb25jbHVkZWQgcGVhY2UsIHdoaWxlIHRoZSBvbmx5IGNvbnRyb3ZlcnN5IHdhcyB3aXRoIHRoZSBUaGViYW5zLCB0aGUgQXRoZW5pYW5zIHdlcmUgb2YgdGhlIG9waW5pb24gdGhhdCBub3cgdGhlcmUgd2FzIGhvcGUgdGhhdCB0aGUgVGhlYmFucyB3b3VsZCBiZSBkZWNpbWF0ZWQsIGFzIHRoZSBjb21tb24gc2F5aW5nIHB1dHMgaXQsIGFuZCBhcyBmb3IgdGhlIFRoZWJhbnMgdGhlbXNlbHZlcywgdGhleSB3ZW50IGhvbWUgdXR0ZXJseSBkZXNwb25kZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZSBBdGhlbmlhbnMsIG9uIHRoZWlyIHNpZGUsIHByb2NlZWRlZCB0byB3aXRoZHJhdyB0aGVpciBnYXJyaXNvbnMgZnJvbSB0aGUgY2l0aWVzIGFuZCB0byBzZW5kIGFmdGVyIElwaGljcmF0ZXMgYW5kIGhpcyBzaGlwcywgYW5kIHRoZXkgY29tcGVsbGVkIGhpbSB0byBnaXZlIGJhY2sgZXZlcnl0aGluZyB3aGljaCBoZSBoYWQgY2FwdHVyZWQgYWZ0ZXIgdGhlIHRpbWUgd2hlbiB0aGUgb2F0aHMgd2VyZSB0YWtlbiBhdCBMYWNlZGFlbW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGUgTGFjZWRhZW1vbmlhbnMsIG9uIHRoZSBvdGhlciBoYW5kLCB3aGlsZSB0aGV5IHdpdGhkcmV3IGJvdGggdGhlaXIgZ292ZXJub3JzIGFuZCB0aGVpciBnYXJyaXNvbnMgZnJvbSBhbGwgdGhlIG90aGVyIGNpdGllcywgZGlkIG5vdCBmb2xsb3cgdGhpcyBjb3Vyc2UgaW4gdGhlIGNhc2Ugb2YgQ2xlb21icm90dXMsIHdobyB3YXMgYXQgdGhlIGhlYWQgb2YgdGhlIGFybXkgaW4gUGhvY2lzIGFuZCBub3cgYXNrZWQgdGhlIGF1dGhvcml0aWVzIGF0IGhvbWUgd2hhdCBoZSBzaG91bGQgZG8uIFByb3Rob3VzIGRpZCBpbmRlZWQgc2F5IHRoYXQgaXQgc2VlbWVkIHRvIGhpbSB0aGV5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L25vdGU+IG91Z2h0IGZpcnN0IHRvIGRpc2JhbmQgdGhlIGFybXkgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZWlyIG9hdGhzIGFuZCBzZW5kIHJvdW5kIHdvcmQgdG8gdGhlIHZhcmlvdXMgY2l0aWVzIHRvIG1ha2UgY29udHJpYnV0aW9ucywgYXMgbGFyZ2UgYXMgZWFjaCBjaXR5IGNob3NlIHRvIG1ha2UsIHRvIHRoZSB0ZW1wbGUgb2YgQXBvbGxvLDxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IGkuZS4sIGZvciBhIHdhciBmdW5kLjwvbm90ZT4gYW5kIGFmdGVyd2FyZHMsIGluIGNhc2UgYW55b25lIHRyaWVkIHRvIHByZXZlbnQgdGhlIGNpdGllcyBmcm9tIGJlaW5nIGluZGVwZW5kZW50LCB0byBjYWxsIHRvZ2V0aGVyIGFnYWluIGF0IHRoYXQgdGltZSBhbGwgd2hvIHdpc2hlZCB0byBzdXBwb3J0IHRoZSBjYXVzZSBvZiBpbmRlcGVuZGVuY2UgYW5kIGxlYWQgdGhlbSBhZ2FpbnN0IHRob3NlIHdobyBvcHBvc2VkIGl0OyBmb3IgaGUgdGhvdWdodCwgaGUgY29udGludWVkLCB0aGF0IGluIHRoaXMgd2F5IHRoZSBnb2RzIHdvdWxkIGJlIG1vc3QgZmF2b3VyYWJseSBpbmNsaW5lZCB0b3dhcmQgdGhlbSBhbmQgdGhlIGNpdGllcyB3b3VsZCBiZSBsZWFzdCBhbm5veWVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPlRoZSBMYWNlZGFlbW9uaWFuIGFzc2VtYmx5LCBob3dldmVyLCB1cG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMsIGNhbWUgdG8gdGhlIGNvbmNsdXNpb24gdGhhdCBoZSB3YXMgdGFsa2luZyBub25zZW5zZTsgZm9yIGF0IHRoaXMgbW9tZW50LCBhcyBpdCBzZWVtcywgRmF0ZSB3YXMgbGVhZGluZyB0aGVtIG9uOyBhbmQgdGhleSBzZW50IG9yZGVycyB0byBDbGVvbWJyb3R1cyBub3QgdG8gZGlzYmFuZCBoaXMgYXJteSwgYnV0IHRvIGxlYWQgaXQgYXQgb25jZSBhZ2FpbnN0IHRoZSBUaGViYW5zIGlmIHRoZXkgZGlkIG5vdCBsZWF2ZSB0aGUgY2l0aWVzIGluZGVwZW5kZW50LiBXaGVuLCB0aGVyZWZvcmUsIGhlIGxlYXJuZWQgdGhhdCwgc28gZmFyIGZyb20gbGVhdmluZyB0aGUgY2l0aWVzIGluZGVwZW5kZW50LCB0aGUgVGhlYmFucyB3ZXJlIG5vdCBldmVuIGRpc2JhbmRpbmcgdGhlaXIgYXJteSwgaW4gb3JkZXIgdGhhdCB0aGV5IG1pZ2h0IG1hcnNoYWwgdGhlbXNlbHZlcyBhZ2FpbnN0IGhpbSwgdW5kZXIgdGhlc2UgY2lyY3Vtc3RhbmNlcyBoZSB1bmRlcnRvb2sgdG8gbGVhZCBoaXMgdHJvb3BzIGludG8gQm9lb3RpYS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IENsZW9tYnJvdHVzIGRpZCBub3QgZW50ZXIgQm9lb3RpYSBmcm9tIFBob2NpcyBhdCB0aGUgcG9pbnQgd2hlcmUgdGhlIFRoZWJhbnMgZXhwZWN0ZWQgaGltIHRvIGVudGVyIGFuZCB3aGVyZSB0aGV5IHdlcmUga2VlcGluZyBndWFyZCBhdCBhIG5hcnJvdyBwYXNzOyBidXQgcHJvY2VlZGluZyBieSB3YXkgb2YgVGhpc2JhZSBhbG9uZyBhIG1vdW50YWlub3VzIGFuZCB1bmV4cGVjdGVkIHJvdXRlLCBoZSBhcnJpdmVkIGF0IENyZXVzaXMsIGNhcHR1cmVkIGl0cyB3YWxsLCBhbmQgdG9vayB0d2VsdmUgdHJpcmVtZXMgYmVsb25naW5nIHRvIHRoZSBUaGViYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFmdGVyIGFjY29tcGxpc2hpbmcgdGhpcyBleHBsb2l0IGFuZCBtYXJjaGluZyB1cCBmcm9tIHRoZSBzZWEtY29hc3QsIGhlIGVuY2FtcGVkIGF0IExldWN0cmEsIGluIHRoZSB0ZXJyaXRvcnkgb2YgVGhlc3BpYWUuIEFuZCB0aGUgVGhlYmFucyBlbmNhbXBlZCBvbiB0aGUgb3Bwb3NpdGUgaGlsbCBub3QgdmVyeSBmYXIgYXdheSwgd2l0aCBubyBhbGxpZXMgZXhjZXB0IHRoZSBCb2VvdGlhbnMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L25vdGU+IFRoZW4gaGlzIGZyaWVuZHMgd2VudCB0byBDbGVvbWJyb3R1cyBhbmQgc2FpZDoKPGRhdGUgYXV0aG5hbWU9Ii0zNzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzEiPjM3MSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPuKAnENsZW9tYnJvdHVzLCBpZiB5b3UgbGV0IHRoZSBUaGViYW5zIGVzY2FwZSB3aXRob3V0IGEgYmF0dGxlLCB5b3Ugd2lsbCBiZSBpbiBkYW5nZXIgb2Ygc3VmZmVyaW5nIHRoZSB1dHRlcm1vc3QgcGVuYWx0eSBhdCB0aGUgaGFuZHMgb2YgeW91ciBzdGF0ZS4gRm9yIHRoZXkgd2lsbCByZW1lbWJlciBhZ2FpbnN0IHlvdSBub3Qgb25seSB0aGUgdGltZSB3aGVuIHlvdSByZWFjaGVkIEN5bm9zY2VwaGFsYWUgYW5kIGxhaWQgd2FzdGUgbm8gcGFydCBvZiB0aGUgY291bnRyeSBvZiB0aGUgVGhlYmFucywgYnV0IGFsc28gdGhlIHRpbWUgd2hlbiwgb24geW91ciBsYXRlciBleHBlZGl0aW9uLCB5b3Ugd2VyZSBiZWF0ZW4gYmFjayBmcm9tIGVmZmVjdGluZyB5b3VyIGVudHJhY2UsIGFsdGhvdWdoIEFnZXNpbGF1cyBhbHdheXMgbWFkZSBoaXMgZW50cmFuY2UgYnkgd2F5IG9mIENpdGhhZXJvbi4gVGhlcmVmb3JlIGlmIHlvdSByZWFsbHkgaGF2ZSBhIGNhcmUgZm9yIHlvdXJzZWxmIG9yIGEgZGVzaXJlIHRvIHNlZSB5b3VyIGZhdGhlcmxhbmQgYWdhaW4sIHlvdSBtdXN0IGxlYWQgYWdhaW5zdCB0aGVzZSBtZW4u4oCdIFN1Y2ggd2VyZSB0aGUgd29yZHMgb2YgaGlzIGZyaWVuZHM7IGJ1dCBoaXMgb3Bwb25lbnRzIHNhaWQ6IOKAnE5vdyBpcyB0aGUgdGltZSB3aGVuIHRoZSBtYW4gd2lsbCBtYWtlIGl0IGNsZWFyIHdoZXRoZXIgaGUgaXMgaW4gdHJ1dGggcGFydGlhbCB0byB0aGUgVGhlYmFucywgYXMgcnVtb3VyIGhhcyBpdC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['6.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5DbGVvbWJyb3R1cywgdGhlbiwgYXMgaGUgaGVhcmQgdGhlc2UgdGhpbmdzIHdhcyBzcHVycmVkIG9uIHRvIGpvaW4gYmF0dGxlLiBUaGUgbGVhZGVycyBvZiB0aGUgVGhlYmFucywgb24gdGhlIG90aGVyIGhhbmQsIGNhbGN1bGF0ZWQgdGhhdCBpZiB0aGV5IGRpZCBub3QgZmlnaHQsIHRoZSBjaXRpZXMgcm91bmQgYWJvdXQgd291bGQgcmV2b2x0IGZyb20gdGhlbSBhbmQgdGhleSB3b3VsZCB0aGVtc2VsdmVzIGJlIGJlc2llZ2VkOyBmdXJ0aGVyLCB0aGF0IGlmIHRoZSBwZW9wbGUgb2YgVGhlYmVzIHdlcmUgdGh1cyBjdXQgb2ZmIGZyb20gcHJvdmlzaW9ucywgdGhlIGNpdHkgaXRzZWxmIHdvdWxkIGJlIGluIGRhbmdlciBvZiB0dXJuaW5nIGFnYWluc3QgdGhlbS4gQW5kIHNpbmNlIG1hbnkgb2YgdGhlbSBoYWQgYmVlbiBpbiBleGlsZSBiZWZvcmUsIHRoZXkgZXN0aW1hdGVkIHRoYXQgaXQgd2FzIGJldHRlciB0byBkaWUgZmlnaHRpbmcgdGhhbiB0byBiZSBleGlsZWQgYWdhaW4uCjwvdHJhbnNsYXRpb24+"
translation['6.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkJlc2lkZXMgdGhpcywgdGhleSB3ZXJlIGFsc28gc29tZXdoYXQgZW5jb3VyYWdlZCBieSB0aGUgb3JhY2xlIHdoaWNoIHdhcyByZXBvcnRlZCDigJQgdGhhdCB0aGUgTGFjZWRhZW1vbmlhbnMgd2VyZSBkZXN0aW5lZCB0byBiZSBkZWZlYXRlZCBhdCB0aGUgc3BvdCB3aGVyZSBzdG9vZCB0aGUgbW9udW1lbnQgb2YgdGhlIHZpcmdpbnMsIHdobyBhcmUgc2FpZCB0byBoYXZlIGtpbGxlZCB0aGVtc2VsdmVzIGJlY2F1c2UgdGhleSBoYWQgYmVlbiB2aW9sYXRlZCBieSBjZXJ0YWluIExhY2VkYWVtb25pYW5zLiBUaGUgVGhlYmFucyBhY2NvcmRpbmdseSBkZWNvcmF0ZWQgdGhpcyBtb251bWVudCBiZWZvcmUgdGhlIGJhdHRsZS4gRnVydGhlcm1vcmUsIHJlcG9ydHMgd2VyZSBicm91Z2h0IHRvIHRoZW08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzEiPjM3MSBCLkMuPC9kYXRlPjwvbm90ZT4gZnJvbSB0aGUgY2l0eSB0aGF0IGFsbCB0aGUgdGVtcGxlcyB3ZXJlIG9wZW5pbmcgb2YgdGhlbXNlbHZlcywgYW5kIHRoYXQgdGhlIHByaWVzdGVzc2VzIHNhaWQgdGhhdCB0aGUgZ29kcyByZXZlYWxlZCB2aWN0b3J5LiBBbmQgdGhlIG1lc3NlbmdlcnMgcmVwb3J0ZWQgdGhhdCBmcm9tIHRoZSBIZXJhY2xlaXVtIHRoZSBhcm1zIGFsc28gaGFkIGRpc2FwcGVhcmVkLCBpbmRpY2F0aW5nIHRoYXQgSGVyYWNsZXMgaGFkIGdvbmUgZm9ydGggdG8gdGhlIGJhdHRsZS4gU29tZSwgdG8gYmUgc3VyZSwgc2F5IHRoYXQgYWxsIHRoZXNlIHRoaW5ncyB3ZXJlIGJ1dCBkZXZpY2VzIG9mIHRoZSBsZWFkZXJzLgo8ZGF0ZSBhdXRobmFtZT0iLTM3MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MSI+MzcxIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpbiB0aGUgYmF0dGxlLCBhdCBhbnkgcmF0ZSwgZXZlcnl0aGluZyB0dXJuZWQgb3V0IGFkdmVyc2VseSBmb3IgdGhlIExhY2VkYWVtb25pYW5zLCB3aGlsZSBmb3IgdGhlIG90aGVyIHNpZGUgZXZlcnl0aGluZyB3ZW50IHByb3NwZXJvdXNseSwgZXZlbiB0byB0aGUgZ2lmdHMgb2YgZm9ydHVuZS4gRm9yIGl0IHdhcyBhZnRlciB0aGUgbW9ybmluZyBtZWFsIHRoYXQgQ2xlb21icm90dXMgaGVsZCBoaXMgbGFzdCBjb3VuY2lsIG92ZXIgdGhlIGJhdHRsZSwgYW5kIGRyaW5raW5nIGEgbGl0dGxlLCBhcyB0aGV5IGRpZCwgYXQgdGhlIG1pZGRsZSBvZiB0aGUgZGF5LCBpdCB3YXMgc2FpZCB0aGF0IHRoZSB3aW5lIGhlbHBlZCBzb21ld2hhdCB0byBleGNpdGUgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['6.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB3aGVuIGJvdGggc2lkZXMgd2VyZSBhcm1pbmcgdGhlbXNlbHZlcyBhbmQgaXQgd2FzIGFscmVhZHkgZXZpZGVudCB0aGF0IHRoZXJlIHdvdWxkIGJlIGEgYmF0dGxlLCBpbiB0aGUgZmlyc3QgcGxhY2UsIGFmdGVyIHRob3NlIHdobyBoYWQgcHJvdmlkZWQgdGhlIG1hcmtldCBhbmQgc29tZSBiYWdnYWdlLWNhcnJpZXJzIGFuZCBzdWNoIGFzIGRpZCBub3Qgd2lzaCB0byBmaWdodCBoYWQgc2V0IG91dCB0byB3aXRoZHJhdyBmcm9tIHRoZSBCb2VvdGlhbiBhcm15LCB0aGUgTGFjZWRhZW1vbmlhbiBtZXJjZW5hcmllcyB1bmRlciBIaWVyb24sIHRoZSBwZWx0YXN0cyBvZiB0aGUgUGhvY2lhbnMsIGFuZCwgYW1vbmcgdGhlIGhvcnNlbWVuLCB0aGUgSGVyYWNsZW90cyBhbmQgUGhsaWFzaWFucyBtYWRlIGEgY2lyY3VpdCBhbmQgZmVsbCB1cG9uIHRoZXNlIHBlb3BsZSBhcyB0aGV5IHdlcmUgZGVwYXJ0aW5nLCBhbmQgbm90IG9ubHkgdHVybmVkIHRoZW0gYWJvdXQgYnV0IGNoYXNlZCB0aGVtIGJhY2sgdG8gdGhlIGNhbXAgb2YgdGhlIEJvZW90aWFucy4gVGhlcmVieSB0aGV5IG1hZGUgdGhlIEJvZW90aWFuIGFybXkgbXVjaCBsYXJnZXIgYW5kIG1vcmUgZGVuc2VseSBtYXNzZWQgdGhhbiBpdCBoYWQgYmVlbiBiZWZvcmUuCjwvdHJhbnNsYXRpb24+"
translation['6.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGUgc2Vjb25kIHBsYWNlLCBzaW5jZSB0aGUgc3BhY2UgYmV0d2VlbiB0aGUgYXJtaWVzIHdhcyBhIHBsYWluLCB0aGUgTGFjZWRhZW1vbmlhbnMgcG9zdGVkIHRoZWlyIGhvcnNlbWVuIGluIGZyb250IG9mIHRoZWlyIHBoYWxhbngsIGFuZCB0aGUgVGhlYmFucyBpbiBsaWtlIG1hbm5lciBwb3N0ZWQgdGhlaXJzIG92ZXIgYWdhaW5zdCB0aGVtLiBOb3cgdGhlIGNhdmFscnkgb2YgdGhlIFRoZWJhbnMgd2FzIGluIGdvb2QgdHJhaW5pbmcgYXMgYSByZXN1bHQgb2YgdGhlIHdhciB3aXRoIHRoZSBPcmNob21lbmlhbnMgYW5kIHRoZSB3YXIgd2l0aCB0aGUgVGhlc3BpYW5zLCB3aGlsZSB0aGUgY2F2YWxyeSBvZjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MSI+MzcxIEIuQy48L2RhdGU+PC9ub3RlPiB0aGUgTGFjZWRhZW1vbmlhbnMgd2FzIGV4Y2VlZGluZ2x5IHBvb3IgYXQgdGhhdCB0aW1lLgo8ZGF0ZSBhdXRobmFtZT0iLTM3MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MSI+MzcxIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlIHJpY2hlc3QgbWVuIGtlcHQgdGhlIGhvcnNlcywgYW5kIGl0IHdhcyBvbmx5IHdoZW4gdGhlIGJhbiB3YXMgY2FsbGVkIG91dCB0aGF0IHRoZSBhcHBvaW50ZWQgdHJvb3BlciBwcmVzZW50ZWQgaGltc2VsZjsgdGhlbiBoZSB3b3VsZCBnZXQgaGlzIGhvcnNlIGFuZCBzdWNoIGFybXMgYXMgd2VyZSBnaXZlbiBoaW0sIGFuZCB0YWtlIHRoZSBmaWVsZCBvbiB0aGUgbW9tZW50J3Mgbm90aWNlLiBBcyBmb3IgdGhlIG1lbiwgb24gdGhlIG90aGVyIGhhbmQsIGl0IHdhcyB0aG9zZSB3aG8gd2VyZSBsZWFzdCBzdHJvbmcgb2YgYm9keSBhbmQgbGVhc3QgYW1iaXRpb3VzIHdobyB3ZXJlIG1vdW50ZWQgb24gdGhlIGhvcnNlcy4KPC90cmFuc2xhdGlvbj4="
translation['6.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5TdWNoLCB0aGVuLCB3YXMgdGhlIGNhdmFscnkgb24gZWl0aGVyIHNpZGUuIENvbWluZyBub3cgdG8gdGhlIGluZmFudHJ5LCBpdCB3YXMgc2FpZCB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyBsZWQgZWFjaCBoYWxmLWNvbXBhbnkgdGhyZWUgZmlsZXMgYWJyZWFzdCwgYW5kIHRoYXQgdGhpcyByZXN1bHRlZCBpbiB0aGUgcGhhbGFueCBiZWluZyBub3QgbW9yZSB0aGFuIHR3ZWx2ZSBtZW4gZGVlcC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IGkuZS4sIHRoZSBoYWxmLWNvbXBhbnkgbnVtYmVyZWQgdGhpcnR5LXNpeCBtZW4uPC9ub3RlPiBUaGUgVGhlYmFucywgaG93ZXZlciwgd2VyZSBtYXNzZWQgbm90IGxlc3MgdGhhbiBmaWZ0eSBzaGllbGRzIGRlZXAsIGNhbGN1bGF0aW5nIHRoYXQgaWYgdGhleSBjb25xdWVyZWQgdGhhdCBwYXJ0IG9mIHRoZSBhcm15IHdoaWNoIHdhcyBhcm91bmQgdGhlIGtpbmcsIGFsbCB0aGUgcmVzdCBvZiBpdCB3b3VsZCBiZSBlYXN5IHRvIG92ZXJjb21lLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoZW4gQ2xlb21icm90dXMgYmVnYW4gdG8gbGVhZCBoaXMgYXJteSBhZ2FpbnN0IHRoZSBlbmVteSwgaW4gdGhlIGZpcnN0IHBsYWNlLCBiZWZvcmUgdGhlIHRyb29wcyB1bmRlciBoaW0gc28gbXVjaCBhcyBwZXJjZWl2ZWQgdGhhdCBoZSB3YXMgYWR2YW5jaW5nLCB0aGUgaG9yc2VtZW4gaGFkIGFscmVhZHkgam9pbmVkIGJhdHRsZSBhbmQgdGhvc2Ugb2YgdGhlIExhY2VkYWVtb25pYW5zIGhhZCBzcGVlZGlseSBiZWVuIHdvcnN0ZWQ7IHRoZW4gaW4gdGhlaXIgZmxpZ2h0IHRoZXkgaGFkIGZhbGxlbiBmb3VsIG9mIHRoZWlyIG93biBob3BsaXRlcywgYW5kLCBiZXNpZGVzLCB0aGUgY29tcGFuaWVzIG9mIHRoZSBUaGViYW5zIHdlcmUgbm93IGNoYXJnaW5nIHVwb24gdGhlbS4gTmV2ZXJ0aGVsZXNzLCB0aGUgZmFjdCB0aGF0IENsZW9tYnJvdHVzIGFuZCBoaXMgbWVuIHdlcmUgYXQgZmlyc3QgdmljdG9yaW91cyBpbiB0aGUgYmF0dGxlIG1heSBiZSBrbm93biBmcm9tIHRoaXMgY2xlYXIgaW5kaWNhdGlvbjogdGhleSB3b3VsZCBub3QgaGF2ZSBiZWVuIGFibGUgdG8gdGFrZSBoaW0gdXAgYW5kIGNhcnJ5IGhpbSBvZmYgc3RpbGwgbGl2aW5nLCBoYWQgbm90IHRob3NlIHdobyB3ZXJlIGZpZ2h0aW5nIGluIGZyb250IG9mIGhpbSBiZWVuIGhvbGRpbmcgdGhlIGFkdmFudGFnZSBhdCB0aGF0IHRpbWUuCjwvdHJhbnNsYXRpb24+"
translation['6.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBEZWlub24sIHRoZSBwb2xlbWFyY2gsIFNwaG9kcmlhcywgb25lIG9mIHRoZSBraW5nJ3MgdGVudC1jb21wYW5pb25zLCBhbmQgQ2xlb255bXVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MSI+MzcxIEIuQy48L2RhdGU+PC9ub3RlPiB0aGUgc29uIG9mIFNwaG9kcmlhcywgaGFkIGJlZW4ga2lsbGVkLCB0aGVuIHRoZSByb3lhbCBib2R5Z3VhcmQsIHRoZSBzby1jYWxsZWQgYWlkZXMgb2YgdGhlIHBvbGVtYXJjaCwgYW5kIHRoZSBvdGhlcnMgZmVsbCBiYWNrIHVuZGVyIHRoZSBwcmVzc3VyZSBvZiB0aGUgVGhlYmFuIG1hc3MsIHdoaWxlIHRob3NlIHdobyB3ZXJlIG9uIHRoZSBsZWZ0IHdpbmcgb2YgdGhlIExhY2VkYWVtb25pYW5zLCB3aGVuIHRoZXkgc2F3IHRoYXQgdGhlIHJpZ2h0IHdpbmcgd2FzIGJlaW5nIHB1c2hlZCBiYWNrLCBnYXZlIHdheS4gWWV0IGRlc3BpdGUgdGhlIGZhY3QgdGhhdCBtYW55IGhhZCBmYWxsZW4gYW5kIHRoYXQgdGhleSB3ZXJlIGRlZmVhdGVkLCBhZnRlciB0aGV5IGhhZCBjcm9zc2VkIHRoZSB0cmVuY2ggd2hpY2ggY2hhbmNlZCB0byBiZSBpbiBmcm9udCBvZiB0aGVpciBjYW1wIHRoZXkgZ3JvdW5kZWQgdGhlaXIgYXJtcyBhdCB0aGUgc3BvdCBmcm9tIHdoaWNoIHRoZXkgaGFkIHNldCBmb3J0aC4gVGhlIGNhbXAsIHRvIGJlIHN1cmUsIHdhcyBub3Qgb24gZ3JvdW5kIHdoaWNoIHdhcyBhbHRvZ2V0aGVyIGxldmVsLCBidXQgcmF0aGVyIG9uIHRoZSBzbG9wZSBvZiBhIGhpbGwuIEFmdGVyIHRoZSBkaXNhc3RlciBzb21lIG9mIHRoZSBMYWNlZGFlbW9uaWFucywgdGhpbmtpbmcgaXQgdW5lbmR1cmFibGUsIHNhaWQgdGhhdCB0aGV5IG91Z2h0IHRvIHByZXZlbnQgdGhlIGVuZW15IGZyb20gc2V0dGluZyB1cCB0aGVpciB0cm9waHkgYW5kIHRvIHRyeSB0byByZWNvdmVyIHRoZSBib2RpZXMgb2YgdGhlIGRlYWQsIG5vdCBieSBtZWFucyBvZiBhIHRydWNlLCBidXQgYnkgZmlnaHRpbmcuCjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgcG9sZW1hcmNocywgaG93ZXZlciwgc2VlaW5nIHRoYXQgb2YgdGhlIHdob2xlIG51bWJlciBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgYWxtb3N0IGEgdGhvdXNhbmQgaGFkIGJlZW4ga2lsbGVkOyBzZWVpbmcsIGZ1cnRoZXIsIHRoYXQgYW1vbmcgdGhlIFNwYXJ0aWF0YWUgdGhlbXNlbHZlcywgb2Ygd2hvbSB0aGVyZSB3ZXJlIHNvbWUgc2V2ZW4gaHVuZHJlZCB0aGVyZSwgYWJvdXQgZm91ciBodW5kcmVkIGhhZCBmYWxsZW47IGFuZCBwZXJjZWl2aW5nIHRoYXQgdGhlIGFsbGllcyB3ZXJlIG9uZSBhbmQgYWxsIHdpdGhvdXQgaGVhcnQgZm9yIGZpZ2h0aW5nLCB3aGlsZSBzb21lIG9mIHRoZW0gd2VyZSBub3QgZXZlbiBkaXNwbGVhc2VkIGF0IHdoYXQgaGFkIHRha2VuIHBsYWNlLCBnYXRoZXJlZCB0b2dldGhlciB0aGUgbW9zdCBpbXBvcnRhbnQgcGVyc29uYWdlcyBhbmQgZGVsaWJlcmF0ZWQgYWJvdXQgd2hhdCB0aGV5IHNob3VsZCBkby4gQW5kIGFzIGFsbCB0aG91Z2h0IGl0IGJlc3QgdG8gcmVjb3ZlciB0aGUgYm9kaWVzIG9mIHRoZSBkZWFkIGJ5IGEgdHJ1Y2UsIHRoZXkgZmluYWxseSBzZW50IGEgaGVyYWxkIHRvIGFzayBmb3IgYSB0cnVjZS4gQWZ0ZXIgdGhpcywgdGhlbiwgdGhlIFRoZWJhbnMgc2V0IHVwIGEgdHJvcGh5IGFuZCBnYXZlIGJhY2sgdGhlIGJvZGllcyB1bmRlciBhIHRydWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhlc2UgdGhpbmdzIGhhZCBoYXBwZW5lZCwgdGhlIG1lc3NlbmdlciB3aG8gd2FzIHNlbnQgdG8gY2FycnkgdGhlIG5ld3Mgb2YgdGhlIGNhbGFtaXR5IHRvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L25vdGU+IExhY2VkYWVtb24gYXJyaXZlZCB0aGVyZSBvbiB0aGUgbGFzdCBkYXkgb2YgdGhlIGZlc3RpdmFsIG9mIHRoZSBHeW1ub3BhZWRpYWUsPGRhdGUgYXV0aG5hbWU9Ii0zNzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzEiPjM3MSBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gQSBTcGFydGFuIGZlc3RpdmFsLCBjZWxlYnJhdGVkIHdpdGggc2luZ2luZywgZGFuY2luZywgYW5kIGd5bW5hc3RpYyBleGhpYml0aW9ucy48L25vdGU+IHdoZW4gdGhlIGNob3J1cyBvZiBtZW4gd2FzIGluIHRoZSB0aGVhdHJlLiBBbmQgd2hlbiB0aGUgZXBob3JzIGhlYXJkIG9mIHRoZSBkaXNhc3RlciwgdGhleSB3ZXJlIGluZGVlZCBkaXN0cmVzc2VkLCBhcywgSSBjb25jZWl2ZSwgd2FzIGluZXZpdGFibGU7IHlldCB0aGV5IGRpZCBub3Qgd2l0aGRyYXcgdGhlIGNob3J1cywgYnV0IHN1ZmZlcmVkIGl0IHRvIGZpbmlzaCBpdHMgcGVyZm9ybWFuY2UuIEZ1cnRoZXIsIGFsdGhvdWdoIHRoZXkgZHVseSBnYXZlIHRoZSBuYW1lcyBvZiB0aGUgZGVhZCB0byB0aGVpciBzZXZlcmFsIGtpbnNtZW4sIHRoZXkgZ2F2ZSBvcmRlcnMgdG8gdGhlIHdvbWVuIG5vdCB0byBtYWtlIGFueSBvdXRjcnksIGJ1dCB0byBiZWFyIHRoZSBjYWxhbWl0eSBpbiBzaWxlbmNlLiBBbmQgb24gdGhlIGZvbGxvd2luZyBkYXkgb25lIGNvdWxkIHNlZSB0aG9zZSB3aG9zZSByZWxhdGl2ZXMgaGFkIGJlZW4ga2lsbGVkIGdvaW5nIGFib3V0IGluIHB1YmxpYyB3aXRoIGJyaWdodCBhbmQgY2hlZXJmdWwgZmFjZXMsIHdoaWxlIG9mIHRob3NlIHdob3NlIHJlbGF0aXZlcyBoYWQgYmVlbiByZXBvcnRlZCBhcyBsaXZpbmcgeW91IHdvdWxkIGhhdmUgc2VlbiBidXQgZmV3LCBhbmQgdGhlc2UgZmV3IHdhbGtpbmcgYWJvdXQgZ2xvb215IGFuZCBkb3duY2FzdC4KPC90cmFuc2xhdGlvbj4="
translation['6.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyB0aGUgZXBob3JzIGNhbGxlZCBvdXQgdGhlIGJhbiBvZiB0aGUgdHdvIHJlbWFpbmluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gaS4gMSBhbmQgbm90ZS48L25vdGU+IHJlZ2ltZW50cywgZ29pbmcgdXAgYXMgZmFyIGFzIHRob3NlIHdobyB3ZXJlIGZvcnR5IHllYXJzIGJleW9uZCB0aGUgbWluaW11bSBtaWxpdGFyeSBhZ2U7IHRoZXkgYWxzbyBzZW50IG91dCBhbGwgdXAgdG8gdGhlIHNhbWUgYWdlIHdobyBiZWxvbmdlZCB0byB0aGUgcmVnaW1lbnRzIGFicm9hZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gaS5lLiwgbm93IGF0IExldWN0cmEuPC9ub3RlPjsgZm9yIGluIHRoZSBvcmlnaW5hbCBleHBlZGl0aW9uIHRvIFBob2NpcyBvbmx5IHRob3NlIG1lbiB3aG8gd2VyZSBub3QgbW9yZSB0aGFuIHRoaXJ0eS1maXZlIHllYXJzIGJleW9uZCB0aGUgbWluaW11bSBhZ2UgaGFkIHNlcnZlZDsgZnVydGhlcm1vcmUsIHRoZXkgb3JkZXJlZCB0aG9zZSB3aG8gYXQgdGhhdCB0aW1lIGhhZCBiZWVuIGxlZnQgYmVoaW5kIGluIHB1YmxpYyBvZmZpY2UgdG8gam9pbiB0aGVpciByZWdpbWVudHMuCjwvdHJhbnNsYXRpb24+"
translation['6.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgQWdlc2lsYXVzIGFzIGEgcmVzdWx0IG9mIGhpcyBpbGxuZXNzIHdhcyBub3QgeWV0IHN0cm9uZzsgYWNjb3JkaW5nbHkgdGhlIHN0YXRlIGRpcmVjdGVkIEFyY2hpZGFtdXMsIGhpcyBzb24sIHRvIGFjdCBhcyBjb21tYW5kZXIuIEFuZCB0aGUgVGVnZWFucyBzZXJ2ZWQgd2l0aCBoaW0gemVhbG91c2x5OyBmb3IgdGhlIGZvbGxvd2VycyBvZiBTdGFzaXBwdXMgd2VyZSBzdGlsbCBhbGl2ZSwgd2hvIHdlcmUgZmF2b3VyYWJsZSB0byB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIGhhZCBubyBzbGlnaHQgcG93ZXIgaW4gdGhlaXIgb3duIHN0YXRlLiBMaWtld2lzZSB0aGUgTWFudGluZWFucyBmcm9tIHRoZWlyIHZpbGxhZ2VzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBTZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiA1LjIuNSIgdmFsaWQ9InllcyI+WGVuLiBIZWxsLiA1LjIuNS03PC9iaWJsPi48L25vdGU+IHN1cHBvcnRlZCBoaW08YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJYZW4uIEhlbGwuIDUuMi41IiB2YWxpZD0ieWVzIj5YZW4uIEhlbGwuIDUuMi41LTc8L2JpYmw+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MSI+MzcxIEIuQy48L2RhdGU+PC9ub3RlPiBzdG91dGx5OyBmb3IgdGhleSBjaGFuY2VkIHRvIGJlIHVuZGVyIGFuIGFyaXN0b2NyYXRpYyBnb3Zlcm5tZW50LiBGdXJ0aGVybW9yZSwgdGhlIENvcmludGhpYW5zLCBTaWN5b25pYW5zLCBQaGxpYXNpYW5zLCBhbmQgQWNoYWVhbnMgZm9sbG93ZWQgaGltIHdpdGggYWxsIHplYWwsIGFuZCBvdGhlciBzdGF0ZXMgYWxzbyBzZW50IG91dCBzb2xkaWVycy4gTWVhbndoaWxlIHRoZSBMYWNlZGFlbW9uaWFucyB0aGVtc2VsdmVzIGFuZCB0aGUgQ29yaW50aGlhbnMgbWFubmVkIHRyaXJlbWVzIGFuZCByZXF1ZXN0ZWQgdGhlIFNpY3lvbmlhbnMgYWxzbyB0byBoZWxwIHRoZW0gaW4gc28gZG9pbmcsIGludGVuZGluZyB0byBjYXJyeSB0aGUgYXJteSBhY3Jvc3MgdGhlIGd1bGYgb24gdGhlc2Ugc2hpcHMuCjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgQXJjaGlkYW11cyBhY2NvcmRpbmdseSBvZmZlcmVkIGhpcyBzYWNyaWZpY2VzIGF0IHRoZSBmcm9udGllci48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIHRoZSBUaGViYW5zLCBpbW1lZGlhdGVseSBhZnRlciB0aGUgYmF0dGxlIHRoZXkgc2VudCB0byBBdGhlbnMgYSBnYXJsYW5kZWQgbWVzc2VuZ2VyLCBhbmQgd2hpbGUgdGVsbGluZyBvZiB0aGUgZ3JlYXRuZXNzIG9mIHRoZWlyIHZpY3RvcnksIHRoZXkgYXQgdGhlIHNhbWUgdGltZSB1cmdlZCB0aGUgQXRoZW5pYW5zIHRvIGNvbWUgdG8gdGhlaXIgYWlkLCBzYXlpbmcgdGhhdCBub3cgaXQgd2FzIHBvc3NpYmxlIHRvIHRha2UgdmVuZ2VhbmNlIHVwb24gdGhlIExhY2VkYWVtb25pYW5zIGZvciBhbGwgdGhlIGhhcm0gdGhleSBoYWQgZG9uZSB0byB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIFNlbmF0ZSBvZiB0aGUgQXRoZW5pYW5zIGNoYW5jZWQgdG8gYmUgaG9sZGluZyBpdHMgc2l0dGluZyBvbiB0aGUgQWNyb3BvbGlzLiBBbmQgd2hlbiB0aGV5IGhlYXJkIHdoYXQgaGFkIHRha2VuIHBsYWNlLCBpdCB3YXMgbWFkZSBjbGVhciB0byBldmVyeW9uZSB0aGF0IHRoZXkgd2VyZSBncmVhdGx5IGRpc3RyZXNzZWQ7IGZvciB0aGV5IGRpZCBub3QgaW52aXRlIHRoZSBoZXJhbGQgdG8gcGFydGFrZSBvZiBob3NwaXRhbGl0eSBhbmQgYWJvdXQgdGhlIG1hdHRlciBvZiBhaWQgdGhleSBnYXZlIGhpbSBubyBhbnN3ZXIuIFNvIHRoZSBoZXJhbGQgZGVwYXJ0ZWQgZnJvbSBBdGhlbnMgd2l0aG91dCBoYXZpbmcgcmVjZWl2ZWQgYSByZXBseS4gQnV0IHRvIEphc29uLCB3aG8gd2FzIHRoZWlyIGFsbHksIHRoZSBUaGViYW5zIHNlbnQgaW4gaGFzdGUsIHVyZ2luZyBoaW0gdG8gY29tZSB0byB0aGVpciBhaWQ7IGZvciB0aGV5IHdlcmUgZGViYXRpbmcgYW1vbmcgdGhlbXNlbHZlcyBob3cgdGhlIGZ1dHVyZSB3b3VsZCB0dXJuIG91dC4KPC90cmFuc2xhdGlvbj4="
translation['6.4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgSmFzb24gaW1tZWRpYXRlbHkgcHJvY2VlZGVkIHRvIG1hbiB0cmlyZW1lcywgYXMgdGhvdWdoIGhlIGludGVuZGVkIHRvIGdvIHRvIHRoZWlyIGFzc2lzdGFuY2UgYnkgc2VhLCBidXQgaW4gZmFjdCBoZSB0b29rIGhpcyBtZXJjZW5hcnkgZm9yY2UgYW5kIGhpcyBib2R5Z3VhcmQgb2YgY2F2YWxyeSBhbmQsIGFsdGhvdWdoIHRoZSBQaG9jaWFucyB3ZXJlIGVuZ2FnZWQgaW4gYSBiaXR0ZXIgd2FyZmFyZSBhZ2FpbnN0IGhpbSwgcHJvY2VlZGVkIGJ5IGxhbmQgdGhyb3VnaCB0aGVpciBjb3VudHJ5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L25vdGU+IGludG8gQm9lb3RpYSwgYXBwZWFyaW5nIGluIG1hbnkgb2YgdGhlaXIgdG93bnMgYmVmb3JlIGl0IHdhcyByZXBvcnRlZCB0byB0aGVtIHRoYXQgaGUgd2FzIG9uIHRoZSBtYXJjaC4gQXQgYW55IHJhdGUsIGJlZm9yZSB0aGV5IGNvdWxkIGdhdGhlciB0cm9vcHMgdG9nZXRoZXIgZnJvbSBoZXJlIGFuZCB0aGVyZSwgaGUgd2FzIGFscmVhZHkgZmFyIG9uIGFoZWFkLCB0aHVzIG1ha2luZyBpdCBjbGVhciB0aGF0IGluIG1hbnkgY2FzZXMgaXQgaXMgc3BlZWQgcmF0aGVyIHRoYW4gZm9yY2Ugd2hpY2ggYWNjb21wbGlzaGVzIHRoZSBkZXNpcmVkIHJlc3VsdHMuCjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHdoZW4gaGUgYXJyaXZlZCBpbiBCb2VvdGlhIGFuZCB0aGUgVGhlYmFucyBzYWlkIHRoYXQgbm93IHdhcyB0aGUgcmlnaHQgbW9tZW50IHRvIGF0dGFjayB0aGUgTGFjZWRhZW1vbmlhbnMsIGhlIHdpdGggaGlzIG1lcmNlbmFyaWVzIGZyb20gdGhlIGhlaWdodHMgYWJvdmUgYW5kIHRoZXkgYnkgYSBmcm9udGFsIGFzc2F1bHQsIEphc29uIHNvdWdodCB0byBkaXNzdWFkZSB0aGVtLCBwb2ludGluZyBvdXQgdGhhdCBzaW5jZSB0aGV5IGhhZCBkb25lIGEgZ29vZCB3b3JrLCBpdCB3YXMgbm90IHdvcnRoIHdoaWxlIGZvciB0aGVtIHRvIHZlbnR1cmUgYSBkZWNpc2l2ZSBlbmdhZ2VtZW50IGluIHdoaWNoIHRoZXkgd291bGQgZWl0aGVyIGFjY29tcGxpc2ggeWV0IGdyZWF0ZXIgdGhpbmdzIG9yIHdvdWxkIGJlIGRlcHJpdmVkIG9mIHRoZSB2aWN0b3J5IGFscmVhZHkgZ2FpbmVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz7igJxEbyB5b3Ugbm90IHNlZSzigJ0gaGUgc2FpZCwg4oCcdGhhdCBpbiB5b3VyIG93biBjYXNlIGl0IHdhcyB3aGVuIHlvdSBmb3VuZCB5b3Vyc2VsdmVzIGluIHN0cmFpdHMgdGhhdCB5b3Ugd29uIHRoZSB2aWN0b3J5PyBUaGVyZWZvcmUgb25lIG11c3Qgc3VwcG9zZSB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyBhbHNvLCBpZiB0aGV5IHdlcmUgaW4gbGlrZSBzdHJhaXRzLCB3b3VsZCBmaWdodCBpdCBvdXQgcmVnYXJkbGVzcyBvZiB0aGVpciBsaXZlcy4gQmVzaWRlcywgaXQgc2VlbXMgdGhhdCB0aGUgZGVpdHkgb2Z0ZW4gdGFrZXMgcGxlYXN1cmUgaW4gbWFraW5nIHRoZSBzbWFsbCBncmVhdCBhbmQgdGhlIGdyZWF0IHNtYWxsLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5XaXRoIHN1Y2ggd29yZHMsIHRoZW4sIGhlIGVuZGVhdm91cmVkIHRvIGRpc3N1YWRlIHRoZSBUaGViYW5zIGZyb20gbWFraW5nIHRoZSBmaW5hbCB2ZW50dXJlOyB0byB0aGUgTGFjZWRhZW1vbmlhbnMsIG9uIHRoZSBvdGhlciBoYW5kLCBoZSBwb2ludGVkIG91dCB3aGF0IG1hbm5lciBvZiB0aGluZyBhIGRlZmVhdGVkIGFybXkgd2FzLCBhbmQgd2hhdCBhbiBhcm15IHZpY3RvcmlvdXMuIOKAnEFuZCBpZiB5b3Ugd2lzaCzigJ0gaGUgc2FpZCwg4oCcdG8gZm9yZ2V0IHRoZSBkaXNhc3RlciB3aGljaCBoYXMgYmVmYWxsZW4geW91LCBJIGFkdmlzZSB5b3UgZmlyc3QgdG8gcmVjb3ZlciB5b3VyIGJyZWF0aCBhbmQgcmVzdCB5b3Vyc2VsdmVzLCBhbmQgdGhlbiwgYWZ0ZXIgeW91IGhhdmUgYmVjb21lIHN0cm9uZ2VyLCBnbyBpbnRvIGJhdHRsZSBhZ2FpbnN0IG1lbiB3aG8gYXJlIHVuY29ucXVlcmVkLiBCdXQgbm93LOKAnSBoZSBzYWlkLCDigJxiZSB3ZWxsIGFzc3VyZWQgdGhhdCBldmVuIGFtb25nIHlvdXIgYWxsaWVzIHRoZXJlIGFyZSB0aG9zZSB3aG8gYXJlIGhvbGRpbmcgY29udmVyc2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzEiPjM3MSBCLkMuPC9kYXRlPjwvbm90ZT4gd2l0aCB0aGUgZW5lbXkgYWJvdXQgYSB0cmVhdHkgb2YgZnJpZW5kc2hpcCB3aXRoIHRoZW07IGJ5IGFsbCBtZWFucywgdGhlbiwgdHJ5IHRvIG9idGFpbiBhIHRydWNlLiBBbmQgSSBhbSBteXNlbGYgZWFnZXIgZm9yIHRoaXMs4oCdIGhlIHNhaWQsIOKAnG91dCBvZiBhIGRlc2lyZSB0byBzYXZlIHlvdSwgYm90aCBiZWNhdXNlIG9mIG15IGZhdGhlcidzIGZyaWVuZHNoaXAgd2l0aCB5b3UgYW5kIGJlY2F1c2UgSSBhbSB5b3VyIGRpcGxvbWF0aWMgYWdlbnQu4oCdCjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.4.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5TdWNoLCB0aGVuLCB3ZXJlIHRoZSBhcmd1bWVudHMgaGUgdXJnZWQsIGJ1dCBoZSB3YXMgYWN0aW5nIHBlcmhhcHMgd2l0aCB0aGUgcHVycG9zZSB0aGF0IHRoZXNlIHR3byBwYXJ0aWVzLCBhdCB2YXJpYW5jZSBhcyB0aGV5IHdlcmUgd2l0aCBvbmUgYW5vdGhlciwgbWlnaHQgYm90aCBhbGlrZSBiZSBpbiBuZWVkIG9mIGhpbS4gVGhlIExhY2VkYWVtb25pYW5zLCBob3dldmVyLCBhZnRlciBoZWFyaW5nIGhpcyB3b3JkcyBiYWRlIGhpbSBuZWdvdGlhdGUgZm9yIHRoZSB0cnVjZTsgYW5kIHdoZW4gdGhlIHJlcG9ydCBjYW1lIHRoYXQgdGhlIHRydWNlIGhhZCBiZWVuIG1hZGUsIHRoZSBwb2xlbWFyY2hzIGdhdmUgb3JkZXJzIHRoYXQgYWZ0ZXIgZGluaW5nIGFsbCBzaG91bGQgaGF2ZSB0aGVpciBiYWdnYWdlIHBhY2tlZCBhbmQgcmVhZHkgd2l0aCB0aGUgcHVycG9zZSBvZiBzZXR0aW5nIG91dCBkdXJpbmcgdGhlIG5pZ2h0LCBpbiBvcmRlciB0aGF0IGF0IGRheWJyZWFrIHRoZXkgbWlnaHQgYmUgY2xpbWJpbmcgQ2l0aGFlcm9uLiBCdXQgd2hlbiB0aGUgbWVuIGhhZCBkaW5lZCBhbmQgYmVmb3JlIHRoZXkgd2VudCB0byByZXN0LCB0aGUgcG9sZW1hcmNocyBnYXZlIHRoZSBvcmRlciB0byBmb2xsb3csIGFuZCBsZWQgdGhlIHdheSBpbW1lZGlhdGVseSB1cG9uIHRoZSBmYWxsIG9mIGV2ZW5pbmcgYnkgdGhlIHJvYWQgdGhyb3VnaCBDcmV1c2lzLCB0cnVzdGluZyB0byBzZWNyZWN5IG1vcmUgdGhhbiB0byB0aGUgdHJ1Y2UuCjwvdHJhbnNsYXRpb24+"
translation['6.4.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgcHJvY2VlZGluZyB3aXRoIHZlcnkgZ3JlYXQgZGlmZmljdWx0eSwgc2luY2UgdGhleSB3ZXJlIHdpdGhkcmF3aW5nIGF0IG5pZ2h0IGFuZCBpbiBmZWFyIGFuZCBieSBhIGhhcmQgcm9hZCwgdGhleSBhcnJpdmVkIGF0IEFlZ29zdGhlbmEgaW4gdGhlIHRlcnJpdG9yeSBvZiBNZWdhcmEuIFRoZXJlIHRoZXkgZmVsbCBpbiB3aXRoIHRoZSBhcm15IHVuZGVyIEFyY2hpZGFtdXMuIEFuZCBhZnRlciB3YWl0aW5nIHRoZXJlIHVudGlsIGFsbCB0aGUgYWxsaWVzIGhhZCBqb2luZWQgaGltLCBBcmNoaWRhbXVzIGxlZCBiYWNrIHRoZSB3aG9sZSBhcm15IHRvZ2V0aGVyIGFzIGZhciBhcyBDb3JpbnRoOyBmcm9tIHRoZXJlIGhlIGRpc21pc3NlZCB0aGUgYWxsaWVzIGFuZCBsZWQgdGhlIGNpdGl6ZW4gdHJvb3BzIGJhY2sgaG9tZS4KPC90cmFuc2xhdGlvbj4="
translation['6.4.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIEphc29uLCBvbiBoaXMgd2F5IGJhY2sgdGhyb3VnaCBQaG9jaXMgaGUgY2FwdHVyZWQgdGhlIG91dGVyIGNpdHkgb2YgdGhlIEh5YW1wb2xpdGFucywgbGFpZCB3YXN0ZSB0aGVpciBsYW5kLCBhbmQga2lsbGVkIG1hbnkgb2YgdGhlbSwgYnV0IGhlIHBhc3NlZCB0aHJvdWdoIHRoZSByZXN0IG9mIFBob2NpcyB3aXRob3V0IGFueSBob3N0aWxlIGFjdC4gVXBvbiBhcnJpdmluZyBhdCBIZXJhY2xlaWEsIGhvd2V2ZXIsIGhlIGRlc3Ryb3llZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MSI+MzcxIEIuQy48L2RhdGU+PC9ub3RlPiB0aGUgd2FsbGVkIGNpdHkgb2YgdGhlIEhlcmFjbGVvdHMsIG1hbmlmZXN0bHkgaGF2aW5nIG5vIGZlYXIgdGhhdCB3aGVuIHRoaXMgcGFzc2FnZS13YXk8ZGF0ZSBhdXRobmFtZT0iLTM3MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MSI+MzcxIEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBUaGVybW9weWxhZS48L25vdGU+IGhhZCBiZWVuIHRodXMgdGhyb3duIG9wZW4gYW55b25lIHdvdWxkIG1hcmNoIGFnYWluc3QgaGlzIG93biBkb21pbmlvbiwgYnV0IHJhdGhlciBtYWtpbmcgcHJvdmlzaW9uIHRoYXQgbm9uZSBzaG91bGQgc2VpemUgSGVyYWNsZWlhLCBzaXR1YXRlZCBhcyBpdCB3YXMgYXQgYSBuYXJyb3cgcGFzcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlcm1vcHlsYWU8L25vdGU+IGFuZCBibG9jayBoaXMgd2F5IGlmIGhlIHdhbnRlZCB0byBtYXJjaCB0byBhbnkgcGxhY2UgaW4gR3JlZWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBoZSBoYWQgY29tZSBiYWNrIGFnYWluIHRvIFRoZXNzYWx5LCBoZSB3YXMgaW4gZ3JlYXQgcmVwdXRlIGJvdGggYmVjYXVzZSBoZSBoYWQgbGVnYWxseSBiZWVuIG1hZGUgVGFndXMgb2YgdGhlIFRoZXNzYWxpYW5zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBTZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiA2LjEuMTgiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gNi4xLjE4PC9iaWJsPjwvbm90ZT4gYW5kIGJlY2F1c2UgaGUgbWFpbnRhaW5lZCBhYm91dCBoaW0gbWFueSBtZXJjZW5hcmllcywgYm90aCBmb290LXNvbGRpZXJzIGFuZCBob3JzZW1lbiwgdGhlc2UgbW9yZW92ZXIgYmVpbmcgdHJvb3BzIHdoaWNoIGhhZCBiZWVuIHRyYWluZWQgdG8gdGhlIGhpZ2hlc3QgZWZmaWNpZW5jeTsgaGlzIHJlcHV0ZSB3YXMgeWV0IGdyZWF0ZXIgYnkgcmVhc29uIG9mIGhpcyBtYW55IGFsbGllcywgaW5jbHVkaW5nLCBpbiBhZGRpdGlvbiB0byB0aG9zZSB3aG9tIGhlIGFscmVhZHkgaGFkLCBhbHNvIHRob3NlIHdobyB3ZXJlIGRlc2lyb3VzIG9mIGJlY29taW5nIHN1Y2guIEFuZCBoZSB3YXMgdGhlIGdyZWF0ZXN0IG9mIHRoZSBtZW4gb2YgaGlzIHRpbWUgaW4gdGhhdCBoZSB3YXMgbm90IGxpZ2h0bHkgdG8gYmUgZGVzcGlzZWQgYnkgYW55b25lIHNvZXZlci4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iWGVuLiBIZWxsLiA2LjEuMTgiIHZhbGlkPSJ5ZXMiPlhlbi4gSGVsbC4gNi4xLjE4PC9iaWJsPjwvdHJhbnNsYXRpb24+"
translation['6.4.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoZW4gdGhlIFB5dGhpYW4gZmVzdGl2YWwgd2FzIGFwcHJvYWNoaW5nLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC9ub3RlPiBKYXNvbiBzZW50IG9yZGVycyB0byBoaXMgY2l0aWVzIHRvIG1ha2UgcmVhZHkgY2F0dGxlLCBzaGVlcCwgZ29hdHMsIGFuZCBzd2luZSBmb3IgdGhlIHNhY3JpZmljZS4gQW5kIGl0IHdhcyBzYWlkIHRoYXQgYWx0aG91Z2ggaGUgbGFpZCB1cG9uIGVhY2ggY2l0eSBhIHZlcnkgbW9kZXJhdGUgZGVtYW5kLCB0aGVyZSB3ZXJlIGNvbnRyaWJ1dGVkIG5vIGZld2VyIHRoYW4gYSB0aG91c2FuZCBjYXR0bGUgYW5kIG1vcmUgdGhhbiB0ZW4gdGhvdXNhbmQgb2YgdGhlIG90aGVyIGFuaW1hbHMuIEhlIGFsc28gbWFkZSBwcm9jbGFtYXRpb24gdGhhdCBhIGdvbGRlbiBjcm93biB3b3VsZCBiZSB0aGUgcHJpemUgb2YgdmljdG9yeSB0byB0aGUgY2l0eSB3aGljaCBzaG91bGQgcmVhciB0aGUgZmluZXN0IGJ1bGwgdG8gbGVhZCB0aGUgaGVyZCBpbiBob25vdXIgb2YgdGhlIGdvZC4KPGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.4.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVybW9yZSwgaGUgZ2F2ZSBvcmRlcnMgdG8gdGhlIFRoZXNzYWxpYW5zIHRvIG1ha2UgcHJlcGFyYXRpb25zIGZvciB0YWtpbmcgdGhlIGZpZWxkIGF0IHRoZSB0aW1lIG9mIHRoZSBQeXRoaWFuIGZlc3RpdmFsOyBmb3IgaGUgd2FzIGludGVuZGluZywgaXQgd2FzIHNhaWQsIHRvIGJlIGhpbXNlbGYgdGhlIGRpcmVjdG9yIGJvdGggb2YgdGhlIGZlc3RhbCBhc3NlbWJseSBpbiBob25vdXIgb2YgdGhlIGdvZCBhbmQgb2YgdGhlIGdhbWVzLiBXaGF0IGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzAgQi5DLjwvZGF0ZT48L25vdGU+IGludGVuZGVkLCBob3dldmVyLCBpbiByZWdhcmQgdG8gdGhlIHNhY3JlZCB0cmVhc3VyZXMsIGlzIGV2ZW4gdG8gdGhpcyBkYXkgdW5jZXJ0YWluOyBidXQgaXQgaXMgc2FpZCB0aGF0IHdoZW4gdGhlIERlbHBoaWFucyBhc2tlZCB0aGUgZ29kIHdoYXQgdGhleSBzaG91bGQgZG8gaWYgaGUgdHJpZWQgdG8gdGFrZSBhbnkgb2YgaGlzIHRyZWFzdXJlcywgQXBvbGxvIHJlcGxpZWQgdGhhdCBoZSB3b3VsZCBoaW1zZWxmIHRha2UgY2FyZSBvZiB0aGUgbWF0dGVyLgo8ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.4.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BdCBhbnkgcmF0ZSB0aGlzIG1hbiwgZ3JlYXQgYXMgaGUgd2FzIGFuZCBwdXJwb3NpbmcgZGVlZHMgc28gZ3JlYXQgYW5kIG9mIHN1Y2ggYSBraW5kLCBhZnRlciBoZSBoYWQgaGVsZCBhIHJldmlldyBhbmQgaW5zcGVjdGlvbiBvZiB0aGUgY2F2YWxyeSBvZiB0aGUgUGhlcmFlYW5zLCBhbmQgd2FzIG5vdyBpbiBoaXMgc2VhdCBhbmQgbWFraW5nIGFuc3dlciBpZiBhbnlvbmUgY2FtZSB0byBoaW0gd2l0aCBhbnkgcmVxdWVzdCwgd2FzIHN0cnVjayBkb3duIGFuZCBraWxsZWQgYnkgc2V2ZW4geW91bmcgbWVuIHdobyBjYW1lIHVwIHRvIGhpbSBhcyB0aG91Z2ggdGhleSBoYWQgc29tZSBxdWFycmVsIHdpdGggb25lIGFub3RoZXIuCjwvdHJhbnNsYXRpb24+"
translation['6.4.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiB0aGUgZ3VhcmRzbWVuIHdobyBhdHRlbmRlZCBoaW0gcnVzaGVkIHN0b3V0bHkgdG8gaGlzIGFpZCwgb25lIG9mIHRoZSB5b3VuZyBtZW4sIHdoaWxlIHN0aWxsIGluIHRoZSBhY3Qgb2Ygc3RyaWtpbmcgSmFzb24sIHdhcyBwaWVyY2VkIHdpdGggYSBsYW5jZSBhbmQga2lsbGVkOyBhIHNlY29uZCB3YXMgY2F1Z2h0IHdoaWxlIG1vdW50aW5nIGhpcyBob3JzZSwgc3VmZmVyZWQgbWFueSB3b3VuZHMsIGFuZCBzbyB3YXMga2lsbGVkOyBidXQgdGhlIHJlc3QgbGVhcGVkIHVwb24gdGhlIGhvcnNlcyB3aGljaCB0aGV5IGhhZCBpbiByZWFkaW5lc3MgYW5kIGVzY2FwZWQsIGFuZCBpbiBtb3N0IG9mIHRoZSBHcmVlayBjaXRpZXMgdG8gd2hpY2ggdGhleSBjYW1lIHRoZXkgd2VyZSBob25vdXJlZC4gVGhpcyBmYWN0LCBpbmRlZWQsIG1hZGUgaXQgcGxhaW4gdGhhdCB0aGUgR3JlZWtzIGhhZCBjb25jZWl2ZWQgYSB2ZXJ5IGdyZWF0IGZlYXIgbGVzdCBKYXNvbiBzaG91bGQgYmVjb21lIHR5cmFudC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IGkuZS4sIGFuIGFic29sdXRlIGFuZCBpcnJlc3BvbnNpYmxlIHJ1bGVyLCB3aGVyZWFzIHRoZSBwb3NpdGlvbiBvZiBUYWd1cyB3YXMgYSBsZWdhbCwgZWxlY3RpdmUgb2ZmaWNlLjwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['6.4.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBoZSBoYWQgdGh1cyBiZWVuIHNsYWluLCBQb2x5ZG9ydXMsIGhpcyBicm90aGVyLCBhbmQgUG9seXBocm9uIHN1Y2NlZWRlZCB0byB0aGUgb2ZmaWNlIG9mIFRhZ3VzLiBOb3cgUG9seWRvcnVzLCB3aGlsZSB0aGUgdHdvIHdlcmUgb24gdGhlaXIgd2F5IHRvIExhcmlzYSwgd2FzIGtpbGxlZCBhdCBuaWdodCBpbiBoaXMgc2xlZXAgYnkgUG9seXBocm9uLCBoaXMgYnJvdGhlciwgYXMgcGVvcGxlIHRob3VnaHQ7IGZvciBoaXMgZGVhdGggd2FzIHN1ZGRlbiBhbmQgd2l0aG91dCBtYW5pZmVzdCBjYXVzZS4KPC90cmFuc2xhdGlvbj4="
translation['6.4.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIFBvbHlwaHJvbiwgaW4gaGlzIHR1cm4sIGhlbGQgc3dheSBmb3IgYSB5ZWFyLCBhbmQgbWFkZSB0aGUgb2ZmaWNlIG9mIFRhZ3VzIGxpa2UgdGhlIHJ1bGUgb2YgYSB0eXJhbnQuIEZvciBpbiBQaGFyc2FsdXMgaGUgcHV0IHRvIGRlYXRoIFBvbHlkYW1hcyBhbmQgZWlnaHQgbW9yZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC9ub3RlPiBvZiB0aGUgYmVzdCBhbW9uZyB0aGUgY2l0aXplbnMsIGFuZCBmcm9tIExhcmlzYSBoZSBkcm92ZSBtYW55IGludG8gZXhpbGUuIFdoaWxlIHRodXMgZW5nYWdlZCBoZSwgYWxzbyw8ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY5Ij4zNjkgQi5DLjwvZGF0ZT48L25vdGU+IHdhcyBzbGFpbiBieSBBbGV4YW5kZXIsIHdobyBwb3NlZCBhcyBhdmVuZ2VyIG9mIFBvbHlkb3J1cyBhbmQgZGVzdHJveWVyIG9mIHRoZSB0eXJhbm55Lgo8ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.4.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBBbGV4YW5kZXIgaGFkIGhpbXNlbGYgc3VjY2VlZGVkIHRvIHRoZSBwb3NpdGlvbiBvZiBydWxlciwgaGUgcHJvdmVkIGEgY3J1ZWwgVGFndXMgdG8gdGhlIFRoZXNzYWxpYW5zLCBhIGNydWVsIGVuZW15IHRvIHRoZSBUaGViYW5zIGFuZCBBdGhlbmlhbnMsIGFuZCBhbiB1bmp1c3Qgcm9iYmVyIGJvdGggYnkgbGFuZCBhbmQgYnkgc2VhLiBCZWluZyBzdWNoIGEgbWFuLCBoZSBsaWtld2lzZSB3YXMgc2xhaW4gaW4gaGlzIHR1cm4sIHRoZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM1OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM1OCI+MzU4IEIuQy48L2RhdGU+PC9ub3RlPiBhY3R1YWwgZGVlZCBiZWluZyBkb25lIGJ5IGhpcyB3aWZlJ3MgYnJvdGhlcnMsIHRob3VnaCB0aGUgcGxhbiB3YXMgY29uY2VpdmVkIGJ5IHRoZSB3b21hbiBoZXJzZWxmLgo8ZGF0ZSBhdXRobmFtZT0iLTM1OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM1OCI+MzU4IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.4.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3Igc2hlIHJlcG9ydGVkIHRvIGhlciBicm90aGVycyB0aGF0IEFsZXhhbmRlciB3YXMgcGxvdHRpbmcgYWdhaW5zdCB0aGVtLCBhbmQgY29uY2VhbGVkIHRoZW0gd2l0aGluIHRoZSBob3VzZSBmb3IgdGhlIGVudGlyZSBkYXkuIFRoZW4gYWZ0ZXIgc2hlIGhhZCByZWNlaXZlZCBBbGV4YW5kZXIgaG9tZSBpbiBhIGRydW5rZW4gc3RhdGUgYW5kIGhhZCBwdXQgaGltIHRvIGJlZCwgd2hpbGUgdGhlIGxpZ2h0IHdhcyBsZWZ0IGJ1cm5pbmcgc2hlIGNhcnJpZWQgaGlzIHN3b3JkIG91dCBvZiB0aGUgY2hhbWJlci4gQW5kIHdoZW4gc2hlIHBlcmNlaXZlZCB0aGF0IGhlciBicm90aGVycyB3ZXJlIGhlc2l0YXRpbmcgdG8gZ28gaW4gYW5kIGF0dGFjayBBbGV4YW5kZXIsIHNoZSBzYWlkIHRoYXQgaWYgdGhleSBkaWQgbm90IGFjdCBhdCBvbmNlIHNoZSB3b3VsZCB3YWtlIGhpbS4gVGhlbiwgYXMgc29vbiBhcyB0aGV5IGhhZCBnb25lIGluLCBzaGUgY2xvc2VkIHRoZSBkb29yIGFuZCBoZWxkIGZhc3QgdG8gdGhlIGtub2NrZXIgdW50aWwgaGVyIGh1c2JhbmQgaGFkIGJlZW4ga2lsbGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.4.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgaGVyIGhhdHJlZCB0b3dhcmQgaGVyIGh1c2JhbmQgaXMgc2FpZCBieSBzb21lIHBlb3BsZSB0byBoYXZlIGJlZW4gY2F1c2VkIGJ5IHRoZSBmYWN0IHRoYXQgd2hlbiBBbGV4YW5kZXIgaGFkIGltcHJpc29uZWQgaGlzIG93biBmYXZvdXJpdGUsIHdobyB3YXMgYSBiZWF1dGlmdWwgeW91dGgsIGFuZCBzaGUgYmVnZ2VkIGhpbSB0byByZWxlYXNlIGhpbSwgaGUgdG9vayBoaW0gb3V0IGFuZCBzbGV3IGhpbTsgb3RoZXJzLCBob3dldmVyLCBzYXkgdGhhdCBpbmFzbXVjaCBhcyBubyBjaGlsZHJlbiB3ZXJlIGJlaW5nIGJvcm4gdG8gaGltIG9mIHRoaXMgd29tYW4sIEFsZXhhbmRlciB3YXMgc2VuZGluZyB0byBUaGViZXMgYW5kIHRyeWluZyB0byB3aW4gYXMgaGlzIHdpZmUgdGhlIHdpZG93IG9mIEphc29uLiBUaGUgcmVhc29ucywgdGhlbiwgZm9yIHRoZSBwbG90IG9uIHRoZSBwYXJ0IG9mIGhpcyB3aWZlIGFyZSB0aHVzIHN0YXRlZDsgYnV0IGFzIGZvciB0aG9zZSB3aG8gZXhlY3V0ZWQgdGhpcyBkZWVkLCBUaXNpcGhvbnVzLCB3aG8gd2FzIHRoZSBlbGRlc3Qgb2YgdGhlIGJyb3RoZXJzLCBoZWxkIHRoZSBwb3NpdGlvbiBvZiBydWxlciB1cCB0byB0aGUgdGltZSB3aGVuIHRoaXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNTgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNTgiPjM1OCBCLkMuPC9kYXRlPjwvbm90ZT4gbmFycmF0aXZlIHdhcyB3cml0dGVuLjxkYXRlIGF1dGhuYW1lPSItMzU4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzU4Ij4zNTggQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFhlbm9waG9uIHByb2JhYmx5IGRpZWQgaW4gPGRhdGUgYXV0aG5hbWU9Ii0zNTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNTQiPjM1NCBCLkMuPC9kYXRlPiBIZW5jZSB0aGlzIHBvcnRpb24gb2YgaGlzIG5hcnJhdGl2ZSB3YXMgd3JpdHRlbiA8ZGF0ZVJhbmdlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnJvbT0iLTM1OCI+YmV0d2VlbiAzNTggKHNlZSBhYm92ZSkgYW5kIDM1NCBCLkMuPC9kYXRlUmFuZ2U+PC9ub3RlPgo8ZGF0ZSBhdXRobmFtZT0iLTM1NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM1NCI+MzU0IEIuQy48L2RhdGU+IEhlbmNlIHRoaXMgcG9ydGlvbiBvZiBoaXMgbmFycmF0aXZlIHdhcyB3cml0dGVuIDxkYXRlUmFuZ2UgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItMzU4Ij5iZXR3ZWVuIDM1OCAoc2VlIGFib3ZlKSBhbmQgMzU0IEIuQy48L2RhdGVSYW5nZT48L3RyYW5zbGF0aW9uPg=="
translation['6.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbGwgdGhlIGV2ZW50cywgdGhlbiwgd2hpY2ggdG9vayBwbGFjZSBpbiBUaGVzc2FseSBpbiBjb25uZWN0aW9uIHdpdGggSmFzb24sIGFuZCwgYWZ0ZXIgaGlzIGRlYXRoLCBkb3duIHRvIHRoZSBydWxlIG9mIFRpc2lwaG9udXMsIGhhdmUgdGh1cyBiZWVuIGRlc2NyaWJlZDsgbm93IEkgcmV0dXJuIHRvIHRoZSBwb2ludCBmcm9tIHdoaWNoIEkgZGlncmVzc2VkIHRvIGRpc2N1c3MgdGhlc2UgbWF0dGVycy4gV2hlbiwgbmFtZWx5LCBBcmNoaWRhbXVzIGhhZCBsZWQgYmFjayBoaXMgYXJteSBmcm9tPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L25vdGU+IHRoZSByZWxpZWYgZXhwZWRpdGlvbiB0byBMZXVjdHJhLCB0aGUgQXRoZW5pYW5zLCB0YWtpbmcgdGhvdWdodCBvZiB0aGUgZmFjdCB0aGF0IHRoZSBQZWxvcG9ubmVzaWFucyBzdGlsbCBjb3VudGVkIHRoZW1zZWx2ZXMgYm91bmQgdG8gZm9sbG93IHRoZSBMYWNlZGFlbW9uaWFucywgYW5kIHRoYXQgdGhlIGxhdHRlciB3ZXJlIG5vdCB5ZXQgaW4gdGhlIHNhbWUgc2l0dWF0aW9uIHRvIHdoaWNoIHRoZXkgaGFkIGJyb3VnaHQgdGhlIEF0aGVuaWFucywgaW52aXRlZCB0byBBdGhlbnMgYWxsIHRoZSBjaXRpZXMgd2hpY2ggd2lzaGVkIHRvIHBhcnRpY2lwYXRlIGluIHRoZSBwZWFjZSB3aGljaCB0aGUgS2luZyBoYWQgc2VudCBkb3duLgo8ZGF0ZSBhdXRobmFtZT0iLTM3MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MSI+MzcxIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZXkgaGFkIGNvbWUgdG9nZXRoZXIsIHRoZXkgcGFzc2VkIGEgcmVzb2x1dGlvbiB0byB0YWtlIHRoZSBmb2xsb3dpbmcgb2F0aCwgaW4gY29tcGFueSB3aXRoIHN1Y2ggYXMgZGVzaXJlZCB0byBzaGFyZSBpbiB0aGUgcGVhY2U6IOKAnEkgd2lsbCBhYmlkZSBieSB0aGUgdHJlYXR5IHdoaWNoIHRoZSBLaW5nIHNlbnQgZG93biwgYW5kIGJ5IHRoZSBkZWNyZWVzIG9mIHRoZSBBdGhlbmlhbnMgYW5kIHRoZWlyIGFsbGllcy4gQW5kIGlmIGFueWJvZHkgdGFrZXMgdGhlIGZpZWxkIGFnYWluc3QgYW55IG9uZSBvZiB0aGUgY2l0aWVzIHdoaWNoIGhhdmUgc3dvcm4gdGhpcyBvYXRoLCBJIHdpbGwgY29tZSB0byBoZXIgYWlkIHdpdGggYWxsIG15IHN0cmVuZ3RoLuKAnSBOb3cgYWxsIHRoZSBvdGhlcnMgd2VyZSBwbGVhc2VkIHdpdGggdGhlIG9hdGg7IHRoZSBFbGVhbnMgb25seSBvcHBvc2VkIGl0LCBzYXlpbmcgdGhhdCBpdCB3YXMgbm90IHJpZ2h0IHRvIG1ha2UgZWl0aGVyIHRoZSBNYXJnYW5pYW5zLCBTY2lsbHVudGlhbnMsIG9yIFRyaXBoeWxpYW5zIGluZGVwZW5kZW50LCBmb3IgdGhlc2UgY2l0aWVzIHdlcmUgdGhlaXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGUgQXRoZW5pYW5zIGFuZCB0aGUgb3RoZXJzLCBhZnRlciB2b3RpbmcgdGhhdCBib3RoIHNtYWxsIGFuZCBncmVhdCBjaXRpZXMgYWxpa2Ugc2hvdWxkIGJlIGluZGVwZW5kZW50LCBldmVuIGFzIHRoZSBLaW5nIHdyb3RlLCBzZW50IG91dCB0aGUgb2ZmaWNlcnMgY2hhcmdlZCB3aXRoIGFkbWluaXN0ZXJpbmcgdGhlIG9hdGggYW5kIGRpcmVjdGVkIHRoZW0gdG8gYWRtaW5pc3RlciBpdCB0byB0aGUgaGlnaGVzdCBhdXRob3JpdGllcyBpbiBlYWNoIGNpdHkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcxIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcxIj4zNzEgQi5DLjwvZGF0ZT48L25vdGU+IEFuZCBhbGwgdG9vayB0aGUgb2F0aCBleGNlcHQgdGhlIEVsZWFucy48ZGF0ZSBhdXRobmFtZT0iLTM3MSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MSI+MzcxIEIuQy48L2RhdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFzIGEgbmF0dXJhbCByZXN1bHQgb2YgdGhlc2UgcHJvY2VlZGluZ3MgdGhlIE1hbnRpbmVhbnMsIGZlZWxpbmcgdGhhdCB0aGV5IHdlcmUgbm93IGVudGlyZWx5IGluZGVwZW5kZW50LCBhbGwgY2FtZSB0b2dldGhlciBhbmQgdm90ZWQgdG8gbWFrZSBNYW50aW5lYSBhIHNpbmdsZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gdi4gaWkuIDcuPC9ub3RlPiBjaXR5IGFuZCB0byBwdXQgYSB3YWxsIGFib3V0IGl0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGUgTGFjZWRhZW1vbmlhbnMsIG9uIHRoZSBvdGhlciBoYW5kLCB0aG91Z2h0IHRoYXQgaXQgd291bGQgYmUgYSBncmlldm91cyB0aGluZyBpZiB0aGlzIHdlcmUgZG9uZSB3aXRob3V0IHRoZWlyIGFwcHJvdmFsLiBUaGV5IGFjY29yZGluZ2x5IHNlbnQgQWdlc2lsYXVzIGFzIGFtYmFzc2Fkb3IgdG8gdGhlIE1hbnRpbmVhbnMsIGJlY2F1c2UgaGUgd2FzIHJlZ2FyZGVkIGFzIGFuIGFuY2VzdHJhbCBmcmllbmQgb2YgdGhlaXJzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gdi4gaWkuIDMuPC9ub3RlPiBOb3cgd2hlbiBoZSBoYWQgY29tZSB0byB0aGVtLCB0aGUgb2ZmaWNpYWxzIHJlZnVzZWQgdG8gYXNzZW1ibGUgZm9yIGhpbSB0aGUgTWFudGluZWFuIHBlb3BsZSwgYnV0IGJhZGUgaGltIHRlbGwgdGhlbSB3aGF0IGhlIGRlc2lyZWQuIEhlIHRoZW4gb2ZmZXJlZCB0aGVtIGhpcyBwcm9taXNlIHRoYXQsIGlmIHRoZXkgd291bGQgZGVzaXN0IGZyb20gdGhlaXIgd2FsbC1idWlsZGluZyBmb3IgdGhlIHByZXNlbnQsIGhlIHdvdWxkIGFycmFuZ2UgbWF0dGVycyBzbyB0aGF0IHRoZSB3YWxsIHNob3VsZCBiZSBjb25zdHJ1Y3RlZCB3aXRoIHRoZSBhcHByb3ZhbCBvZiBMYWNlZGFlbW9uIGFuZCB3aXRob3V0IGdyZWF0IGV4cGVuc2UuCjwvdHJhbnNsYXRpb24+"
translation['6.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZXkgcmVwbGllZCB0aGF0IGl0IHdhcyBpbXBvc3NpYmxlIHRvIGRlc2lzdCwgc2luY2UgYSByZXNvbHV0aW9uIHRvIGJ1aWxkIGF0IG9uY2UgaGFkIGJlZW4gYWRvcHRlZCBieSB0aGUgZW50aXJlIGNpdHksIEFnZXNpbGF1cyB0aGVyZXVwb24gZGVwYXJ0ZWQgaW4gYW5nZXIuIEl0IGRpZCBub3Qgc2VlbSB0byBiZSBwb3NzaWJsZSwgaG93ZXZlciwgdG8gbWFrZSBhbiBleHBlZGl0aW9uIGFnYWluc3QgdGhlbSwgaW5hc211Y2ggYXMgdGhlIHBlYWNlIGhhZCBiZWVuIGNvbmNsdWRlZCBvbiB0aGUgYmFzaXMgb2YgaW5kZXBlbmRlbmNlLiBNZWFud2hpbGUgc29tZSBvZiB0aGUgQXJjYWRpYW4gY2l0aWVzIHNlbnQgbWVuIHRvIGhlbHAgdGhlIE1hbnRpbmVhbnMgaW4gdGhlaXIgYnVpbGRpbmcsIGFuZCB0aGUgRWxlYW5zIG1hZGUgdGhlbSBhIGNvbnRyaWJ1dGlvbiBvZiB0aHJlZSB0YWxlbnRzIGluIG1vbmV5IHRvd2FyZCB0aGUgZXhwZW5zZSBvZiB0aGUgd2FsbC4gVGhlIE1hbnRpbmVhbnMsIHRoZW4sIHdlcmUgb2NjdXBpZWQgd2l0aCB0aGlzIHdvcmsuCjwvdHJhbnNsYXRpb24+"
translation['6.5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbW9uZyB0aGUgVGVnZWFucywgb24gdGhlIG90aGVyIGhhbmQsIHRoZSBmb2xsb3dlcnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvbm90ZT4gb2YgQ2FsbGliaXVzIGFuZCBQcm94ZW51cyB3ZXJlIG1ha2luZyBlZmZvcnRzIHRvIHRoZSBlbmQgdGhhdCBhbGwgdGhlIHBlb3BsZSBvZiBBcmNhZGlhIHNob3VsZCB1bml0ZSwgYW5kIHRoYXQgd2hhdGV2ZXIgbWVhc3VyZSB3YXMgY2FycmllZCBpbiB0aGU8ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzAgQi5DLjwvZGF0ZT48L25vdGU+IGNvbW1vbiBhc3NlbWJseSBzaG91bGQgYmUgYmluZGluZyBvbiB0aGUgc2V2ZXJhbCBjaXRpZXMgYXMgd2VsbDsgYnV0IHRoZSBmb2xsb3dlcnMgb2YgU3Rhc2lwcHVzIG1hZGUgaXQgdGhlaXIgcG9saWN5IHRvIGxlYXZlIHRoZWlyIGNpdHkgdW5kaXN0dXJiZWQgYW5kIHRvIGxpdmUgdW5kZXIgdGhlIGxhd3Mgb2YgdGhlaXIgZmF0aGVycy4KPGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB0aGUgZm9sbG93ZXJzIG9mIFByb3hlbnVzIGFuZCBDYWxsaWJpdXMsIGRlZmVhdGVkIGluIHRoZSBjb3VuY2lsIG9mIHRoZSBtYWdpc3RyYXRlcywgYW5kIGNvbmNlaXZpbmcgdGhlIHRob3VnaHQgdGhhdCBpZiB0aGUgcGVvcGxlIGNhbWUgdG9nZXRoZXIgdGhleSB3b3VsZCBwcm92ZSBmYXIgc3VwZXJpb3IgaW4gbnVtYmVycywgZ2F0aGVyZWQgb3Blbmx5IHVuZGVyIGFybXMuIFVwb24gc2VlaW5nIHRoaXMgdGhlIGZvbGxvd2VycyBvZiBTdGFzaXBwdXMgYWxzbyBhcm1lZCB0aGVtc2VsdmVzIGluIHRoZWlyIHR1cm4sIGFuZCB0aGV5IGRpZCBpbmRlZWQgcHJvdmUgZmV3ZXIgaW4gbnVtYmVyOyB3aGVuLCBob3dldmVyLCB0aGV5IGhhZCBzZXQgZm9ydGggZm9yIGJhdHRsZSwgdGhleSBraWxsZWQgUHJveGVudXMgYW5kIGEgZmV3IG90aGVycyBhbG9uZyB3aXRoIGhpbSwgYnV0IGFsdGhvdWdoIHRoZXkgcHV0IHRoZSByZXN0IHRvIGZsaWdodCB0aGV5IGRpZCBub3QgcHVyc3VlIHRoZW07IGZvciBTdGFzaXBwdXMgd2FzIHRoZSBzb3J0IG9mIG1hbiBub3QgdG8gZGVzaXJlIHRvIGtpbGwgbWFueSBvZiBoaXMgZmVsbG93LWNpdGl6ZW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gdGhlIGZvbGxvd2VycyBvZiBDYWxsaWJpdXMsIHdobyBoYWQgcmV0aXJlZCB0byBhIHBvc2l0aW9uIHVuZGVyIHRoZSBjaXR5IHdhbGwgYW5kIHRoZSBnYXRlcyBvbiB0aGUgc2lkZSB0b3dhcmQgTWFudGluZWEsIGluYXNtdWNoIGFzIHRoZWlyIGFkdmVyc2FyaWVzIHdlcmUgbm8gbG9uZ2VyIGF0dGFja2luZyB0aGVtLCByZW1haW5lZCBxdWlldGx5IGdhdGhlcmVkIHRoZXJlLiBUaGV5IGhhZCBsb25nIGJlZm9yZSB0aGlzIHNlbnQgdG8gdGhlIE1hbnRpbmVhbnMgYmlkZGluZyB0aGVtIGNvbWUgdG8gdGhlaXIgYWlkLCBidXQgd2l0aCB0aGUgZm9sbG93ZXJzIG9mIFN0YXNpcHB1cyB0aGV5IHdlcmUgbmVnb3RpYXRpbmcgZm9yIGEgcmVjb25jaWxpYXRpb24uIFdoZW4sIGhvd2V2ZXIsIHRoZSBNYW50aW5lYW5zIHdlcmUgdG8gYmUgc2VlbiBhcHByb2FjaGluZywgc29tZSBvZiB0aGVtIGxlYXBlZCB1cG9uIHRoZSB3YWxsLCB1cmdlZCB0aGUgTWFudGluZWFucyB0byBjb21lIG9uIHRvIHRoZWlyIGFzc2lzdGFuY2Ugd2l0aCBhbGwgcG9zc2libGUgc3BlZWQsIGFuZCB3aXRoIHNob3V0cyBleGhvcnRlZCB0aGVtIHRvIGh1cnJ5OyBvdGhlcnMgbWVhbndoaWxlIG9wZW5lZCB0aGUgZ2F0ZXMgdG8gdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['6.5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk5vdyB3aGVuIHRoZSBmb2xsb3dlcnMgb2YgU3Rhc2lwcHVzIHBlcmNlaXZlZCB3aGF0IHdhcyBnb2luZyBvbiwgdGhleSBydXNoZWQgb3V0IGJ5IHRoZSBnYXRlcyBsZWFkaW5nIHRvIFBhbGxhbnRpdW0sIGdhaW5lZCByZWZ1Z2UgaW4gdGhlIHRlbXBsZSBvZiBBcnRlbWlzIGJlZm9yZSB0aGV5IGNvdWxkIGJlIG92ZXJ0YWtlbiBieSB0aGVpciBwdXJzdWVycywgYW5kIGFmdGVyIHNodXR0aW5nIHRoZW1zZWx2ZXMgaW4sIHJlbWFpbmVkIHF1aWV0IHRoZXJlLiBCdXQgdGhlaXIgZm9lcyB3aG8gaGFkIGZvbGxvd2VkIGFmdGVyIHRoZW0gY2xpbWJlZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC9ub3RlPiB1cG9uIHRoZSB0ZW1wbGUsIGJyb2tlIHRocm91Z2ggdGhlIHJvb2YsIGFuZCBwZWx0ZWQgdGhlbSB3aXRoIHRoZSB0aWxlcy4gQW5kIHdoZW4gdGhlIHBlb3BsZSB3aXRoaW4gcmVhbGl6ZWQgdGhlIGhvcGVsZXNzbmVzcyBvZiB0aGVpciBzaXR1YXRpb24sIHRoZXkgYmFkZSB0aGVtIHN0b3AgYW5kIHNhaWQgdGhleSB3b3VsZCBjb21lIG91dC4gVGhlbiB0aGVpciBhZHZlcnNhcmllcywgYXMgc29vbiBhcyB0aGV5IGhhZCBnb3QgdGhlbSBpbiB0aGVpciBwb3dlciwgYm91bmQgdGhlbSwgdGhyZXcgdGhlbSBpbnRvIGEgd2Fnb24sIGFuZCBjYXJyaWVkIHRoZW0gYmFjayB0byBUZWdlYS4gVGhlcmUsIGluIGNvbXBhbnkgd2l0aCB0aGUgTWFudGluZWFucywgdGhleSBwYXNzZWQgc2VudGVuY2UgdXBvbiB0aGVtIGFuZCBwdXQgdGhlbSB0byBkZWF0aC4KPGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hpbGUgdGhlc2UgdGhpbmdzIHdlcmUgZ29pbmcgb24sIGFib3V0IGVpZ2h0IGh1bmRyZWQgb2YgdGhlIFRlZ2VhbnMgd2hvIHdlcmUgcGFydGlzYW5zIG9mIFN0YXNpcHB1cyBmbGVkIHRvIExhY2VkYWVtb24gYXMgZXhpbGVzLCBhbmQgc3Vic2VxdWVudGx5IHRoZSBMYWNlZGFlbW9uaWFucyBkZWNpZGVkIHRoYXQsIGluIGFjY29yZGFuY2Ugd2l0aCB0aGVpciBvYXRocywgdGhleSBvdWdodCB0byBhdmVuZ2UgdGhlIFRlZ2VhbnMgd2hvIGhhZCBiZWVuIHNsYWluIGFuZCB0byBhaWQgdGhvc2Ugd2hvIGhhZCBiZWVuIGJhbmlzaGVkLiBTbyB0aGV5IGRlY2lkZWQgdG8gbWFrZSBhbiBleHBlZGl0aW9uIGFnYWluc3QgdGhlIE1hbnRpbmVhbnMgb24gdGhlIGdyb3VuZCB0aGF0LCBpbiB2aW9sYXRpb24gb2YgdGhlaXIgb2F0aHMsIHRoZXkgaGFkIHByb2NlZWRlZCBpbiBhcm1zIGFnYWluc3QgdGhlIFRlZ2VhbnMuIFRoZSBlcGhvcnMgYWNjb3JkaW5nbHkgY2FsbGVkIG91dCB0aGUgYmFuLCBhbmQgdGhlIHN0YXRlIGRpcmVjdGVkIEFnZXNpbGF1cyB0byBhY3QgYXMgY29tbWFuZGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgbW9zdCBvZiB0aGUgQXJjYWRpYW5zIHdlcmUgZ2F0aGVyaW5nIHRvZ2V0aGVyIGF0IEFzZWEuIEJ1dCBzaW5jZSB0aGUgT3JjaG9tZW5pYW5zIHJlZnVzZWQgdG8gYmUgbWVtYmVycyBvZiB0aGUgQXJjYWRpYW4gTGVhZ3VlIG9uIGFjY291bnQgb2YgdGhlaXIgZW5taXR5IHRvd2FyZCB0aGUgTWFudGluZWFucywgYW5kIGhhZCBldmVuIHJlY2VpdmVkIGludG8gdGhlaXIgY2l0eSB0aGUgbWVyY2VuYXJ5IGZvcmNlLCBjb21tYW5kZWQgYnkgUG9seXRyb3B1cywgd2hpY2ggaGFkIGJlZW4gY29sbGVjdGVkIGF0IENvcmludGgsIHRoZSBNYW50aW5lYW5zIHdlcmUgcmVtYWluaW5nIGF0IGhvbWUgYW5kIGtlZXBpbmcgd2F0Y2ggdXBvbiB0aGVtLiBPbiB0aGUgb3RoZXIgaGFuZCwgdGhlIEhlcmFlYW5zIGFuZCBMZXByZWFucyB3ZXJlIHNlcnZpbmcgd2l0aCB0aGUgTGFjZWRhZW1vbmlhbnMgYWdhaW5zdCB0aGUgTWFudGluZWFucy4KPC90cmFuc2xhdGlvbj4="
translation['6.5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BZ2VzaWxhdXMsIHRoZW4sIHdoZW4gaGlzIHNhY3JpZmljZXMgYXQgdGhlIGZyb250aWVyIHByb3ZlZCBmYXZvdXJhYmxlLCBhdCBvbmNlIHByb2NlZWRlZCB0byBtYXJjaCBhZ2FpbnN0IEFyY2FkaWEuIEFuZCBoYXZpbmcgb2NjdXBpZWQgRXV0YWVhLCB3aGljaCB3YXMgYSBjaXR5IG9uIHRoZSBib3JkZXIsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzAgQi5DLjwvZGF0ZT48L25vdGU+IGFuZCBmb3VuZCB0aGVyZSB0aGUgb2xkZXIgbWVuLCB0aGUgd29tZW4sIGFuZCB0aGUgY2hpbGRyZW4gbGl2aW5nIGluIHRoZWlyIGhvdXNlcywgd2hpbGUgdGhlIG1lbiBvZiBtaWxpdGFyeSBhZ2UgaGFkIGdvbmUgdG8gdGhlIEFyY2FkaWFuIGFzc2VtYmx5LCBoZSBuZXZlcnRoZWxlc3MgZGlkIHRoZSBjaXR5IG5vIGhhcm0sIGJ1dCBhbGxvd2VkIHRoZSBwZW9wbGUgdG8gY29udGludWUgdG8gZHdlbGwgdGhlcmUsIGFuZCBoaXMgdHJvb3BzIGdvdCBldmVyeXRoaW5nIHRoYXQgdGhleSBuZWVkZWQgYnkgcHVyY2hhc2U7IGFuZCBpZiBhbnl0aGluZyBoYWQgYmVlbiB0YWtlbiBhcyBib290eSBhdCB0aGUgdGltZSB3aGVuIGhlIGVudGVyZWQgdGhlIGNpdHksIGhlIHNlYXJjaGVkIGl0IG91dCBhbmQgZ2F2ZSBpdCBiYWNrLiBIZSBhbHNvIG9jY3VwaWVkIGhpbXNlbGYsIGR1cmluZyB0aGUgd2hvbGUgdGltZSB0aGF0IGhlIHNwZW50IHRoZXJlIGF3YWl0aW5nIHRoZSBtZXJjZW5hcmllcyB1bmRlciBQb2x5dHJvcHVzLCBpbiByZXBhaXJpbmcgYWxsIHRob3NlIHBvcnRpb25zIG9mIHRoZSBjaXR5IHdhbGwgd2hpY2ggbmVlZGVkIGl0Lgo8ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWVhbndoaWxlIHRoZSBNYW50aW5lYW5zIG1hZGUgYW4gZXhwZWRpdGlvbiBhZ2FpbnN0IHRoZSBPcmNob21lbmlhbnMuIEFuZCB0aGV5IGNhbWUgb2ZmIHZlcnkgYmFkbHkgZnJvbSB0aGVpciBhdHRhY2sgdXBvbiB0aGUgY2l0eSB3YWxsLCBhbmQgc29tZSBvZiB0aGVtIHdlcmUga2lsbGVkOyBidXQgd2hlbiBpbiB0aGVpciByZXRyZWF0IHRoZXkgaGFkIHJlYWNoZWQgRWx5bWlhIGFuZCwgYWx0aG91Z2ggdGhlIE9yY2hvbWVuaWFuIGhvcGxpdGVzIG5vdyBkZXNpc3RlZCBmcm9tIGZvbGxvd2luZyB0aGVtLCBQb2x5dHJvcHVzIGFuZCBoaXMgdHJvb3BzIHdlcmUgdmVyeSBib2xkbHkgcHJlc3NpbmcgdXBvbiB0aGVtLCB0aGVuIHRoZSBNYW50aW5lYW5zLCByZWFsaXppbmcgdGhhdCBpZiB0aGV5IGRpZCBub3QgYmVhdCB0aGVtIG9mZiBtYW55IG9mIHRoZWlyIG93biBudW1iZXIgd291bGQgYmUgc3RydWNrIGRvd24gYnkgamF2ZWxpbnMsIHR1cm5lZCBhYm91dCBhbmQgY2hhcmdlZCB0aGVpciBhc3NhaWxhbnRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5Qb2x5dHJvcHVzIGZlbGwgZmlnaHRpbmcgd2hlcmUgaGUgc3Rvb2Q7IHRoZSByZXN0IGZsZWQsIGFuZCB2ZXJ5IG1hbnkgb2YgdGhlbSB3b3VsZCBoYXZlIGJlZW4ga2lsbGVkIGhhZCBub3QgdGhlIFBobGlhc2lhbiBob3JzZW1lbiBhcnJpdmVkLCBhbmQgYnkgcmlkaW5nIGFyb3VuZCB0byB0aGUgcmVhciBvZiB0aGUgTWFudGluZWFucyBtYWRlIHRoZW0gZGVzaXN0IGZyb20gdGhlaXIgcHVyc3VpdC4gVGhlIE1hbnRpbmVhbnMsIHRoZW4sIGFmdGVyIGFjY29tcGxpc2hpbmcgdGhlc2UgdGhpbmdzLCB3ZW50IGJhY2sgaG9tZS4KPC90cmFuc2xhdGlvbj4="
translation['6.5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWdlc2lsYXVzIGhlYXJkIG9mIHRoaXMgYWZmYWlyIGFuZCBjYW1lIHRvIHRoZSBjb25jbHVzaW9uIHRoYXQgdGhlIG1lcmNlbmFyaWVzIGZyb20gT3JjaG9tZW51cyBjb3VsZCBub3Qgbm93IGpvaW4gaGltOyB1bmRlciB0aGVzZSBjaXJjdW1zdGFuY2VzLCB0aGVyZWZvcmUsIGhlIGNvbnRpbnVlZCBoaXMgYWR2YW5jZS4gT24gdGhlIGZpcnN0IGRheSBoZSB0b29rIGRpbm5lciBpbiB0aGUgdGVycml0b3J5IG9mIFRlZ2VhLCBhbmQgb24gdGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzAgQi5DLjwvZGF0ZT48L25vdGU+IGZvbGxvd2luZyBkYXkgY3Jvc3NlZCBpbnRvIHRoZSB0ZXJyaXRvcnkgb2YgdGhlIE1hbnRpbmVhbnMgYW5kIGVuY2FtcGVkIGF0IHRoZSBmb290IG9mIHRoZSBtb3VudGFpbnMgdG8gdGhlIHdlc3Qgb2YgTWFudGluZWE7IHRoZXJlIGF0IHRoZSBzYW1lIHRpbWUgaGUgbGFpZCB3YXN0ZSB0aGUgbGFuZCBhbmQgcGx1bmRlcmVkIHRoZSBmYXJtcy4gTWVhbndoaWxlIHRoZSBBcmNhZGlhbnMgd2hvIGhhZCBhc3NlbWJsZWQgYXQgQXNlYSBtYWRlIHRoZWlyIHdheSBieSBuaWdodCB0byBUZWdlYS4KPGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgbmV4dCBkYXkgQWdlc2lsYXVzIGVuY2FtcGVkIGF0IGEgZGlzdGFuY2Ugb2YgYWJvdXQgdHdlbnR5IHN0YWRpYSBmcm9tIE1hbnRpbmVhLiBCdXQgdGhlIEFyY2FkaWFucyBmcm9tIFRlZ2VhLCBhIHZlcnkgbGFyZ2UgZm9yY2Ugb2YgaG9wbGl0ZXMsIG1hZGUgdGhlaXIgYXBwZWFyYW5jZTsgdGhleSB3ZXJlIHNraXJ0aW5nIHRoZSBtb3VudGFpbnMgYmV0d2VlbiBNYW50aW5lYSBhbmQgVGVnZWEsIGRlc2lyaW5nIHRvIGVmZmVjdCBhIGp1bmN0aW9uIHdpdGggdGhlIE1hbnRpbmVhbnMsIGZvciB0aGUgQXJnaXZlcywgd2hvIGNhbWUgd2l0aCB0aGVtLCB3ZXJlIG5vdCBpbiBmdWxsIGZvcmNlLiBBbmQgdGhlcmUgd2VyZSBzb21lIHdobyB0cmllZCB0byBwZXJzdWFkZSBBZ2VzaWxhdXMgdG8gYXR0YWNrIHRoZXNlIHRyb29wcyBzZXBhcmF0ZWx5OyBoZSwgaG93ZXZlciwgZmVhcmluZyB0aGF0IHdoaWxlIGhlIHdhcyBtYXJjaGluZyBhZ2FpbnN0IHRoZW0gdGhlIE1hbnRpbmVhbnMgbWlnaHQgaXNzdWUgZm9ydGggZnJvbSB0aGVpciBjaXR5IGFuZCBhdHRhY2sgaGltIGluIGZsYW5rIGFuZCByZWFyLCBqdWRnZWQgaXQgYmVzdCB0byBhbGxvdyB0aGUgdHdvIGhvc3RpbGUgZm9yY2VzIHRvIGNvbWUgdG9nZXRoZXIgYW5kLCBpbiBjYXNlIHRoZXkgd2lzaGVkIHRvIGZpZ2h0LCB0byBjb25kdWN0IHRoZSBiYXR0bGUgaW4gcmVndWxhciBmYXNoaW9uIGFuZCBpbiB0aGUgb3Blbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIEFyY2FkaWFucyBmcm9tIFRlZ2VhIGhhZCBieSBub3cgZWZmZWN0ZWQgYSBqdW5jdGlvbiB3aXRoIHRoZSBNYW50aW5lYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgb3RoZXIgaGFuZCwgdGhlIHBlbHRhc3RzIGZyb20gT3JjaG9tZW51cywgYW5kIHdpdGggdGhlbSB0aGUgaG9yc2VtZW4gb2YgdGhlIFBobGlhc2lhbnMsIG1hZGUgdGhlaXIgd2F5IGR1cmluZyB0aGUgbmlnaHQgcGFzdCBNYW50aW5lYSBhbmQgYXBwZWFyZWQgYXMgQWdlc2lsYXVzIHdhcyBzYWNyaWZpY2luZyBpbiBmcm9udCBvZiBoaXMgY2FtcCBhdCBkYXlicmVhazsgYW5kIHRoZXkgY2F1c2VkIHRoZSBMYWNlZGFlbW9uaWFucyB0byBmYWxsIGh1cnJpZWRseSBpbnRvIGxpbmUgYW5kIEFnZXNpbGF1cyBoaW1zZWxmIHRvIHJldGlyZSB0byB0aGUgY2FtcC4gQnV0IHdoZW4gdGhleSBoYWQgYmVlbiByZWNvZ25pemVkIGFzIGZyaWVuZHMsIGFuZCBBZ2VzaWxhdXMgaGFkIG9idGFpbmVkIGZhdm91cmFibGUgb21lbnMsIGltbWVkaWF0ZWx5IGFmdGVyIGJyZWFrZmFzdCBoZSBsZWQgaGlzIGFybXkgZm9yd2FyZC4gTGF0ZXIsIGFzIGV2ZW5pbmcgd2FzIGNvbWluZyBvbiwgaGUgdW53aXR0aW5nbHkgZW5jYW1wZWQgaW4gdGhlIHZhbGxleSB3aGljaCBsaWVzIGJlaGluZCB0aGUgdG93bjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC9ub3RlPiBvZiBNYW50aW5lYTsgaXQgaXMgc3Vycm91bmRlZCBieSBtb3VudGFpbnMgd2hpY2ggYXJlIG9ubHkgYSBzaG9ydCBkaXN0YW5jZSBhd2F5Lgo8ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.5.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5PbiB0aGUgZm9sbG93aW5nIGRheSBhdCBkYXlicmVhayBoZSB3YXMgb2ZmZXJpbmcgc2FjcmlmaWNlcyBpbiBmcm9udCBvZiB0aGUgYXJteTsgYW5kIHNlZWluZyB0aGF0IHRyb29wcyB3ZXJlIGdhdGhlcmluZyBmcm9tIHRoZSBjaXR5IG9mIHRoZSBNYW50aW5lYW5zIG9uIHRoZSBtb3VudGFpbnMgd2hpY2ggd2VyZSBhYm92ZSB0aGUgcmVhciBvZiBoaXMgYXJteSwgaGUgZGVjaWRlZCB0aGF0IGhlIG11c3QgbGVhZCBoaXMgbWVuIG91dCBvZiB0aGUgdmFsbGV5IHdpdGggYWxsIHBvc3NpYmxlIHNwZWVkLiBOb3cgaGUgZmVhcmVkIHRoYXQgaWYgaGUgbGVkIHRoZSB3YXkgaGltc2VsZiwgdGhlIGVuZW15IHdvdWxkIGZhbGwgdXBvbiBoaXMgcmVhcjsgYWNjb3JkaW5nbHksIHdoaWxlIGtlZXBpbmcgcXVpZXQgYW5kIHByZXNlbnRpbmcgaGlzIGZyb250IHRvd2FyZCB0aGUgZW5lbXksIGhlIG9yZGVyZWQgdGhlIG1lbiBhdCB0aGUgcmVhciB0byBmYWNlIGFib3V0IHRvIHRoZSByaWdodCBhbmQgbWFyY2ggYWxvbmcgYmVoaW5kIHRoZSBwaGFsYW54IHRvd2FyZCBoaW0uIEFuZCBpbiB0aGlzIG1hbm5lciBoZSB3YXMgYXQgdGhlIHNhbWUgdGltZSBsZWFkaW5nIHRoZW0gb3V0IG9mIHRoZSBuYXJyb3cgdmFsbGV5IGFuZCBtYWtpbmcgdGhlIHBoYWxhbnggY29udGludWFsbHkgc3Ryb25nZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBUaGUgc2NlbmUgaXMgYSBsb25nLCBuYXJyb3cgdmFsbGV5LiBUaGUgcmVhciAoPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/hvZDPgeG9sTwvZm9yZWlnbj4pIG9mIHRoZSBMYWNlZGFlbW9uaWFuIGxpbmUgaXMgYXQgdGhlIGhlYWQgb2YgdGhlIHZhbGxleSwgd2hpbGUgdGhlIHZhbiwgd2hlcmUgQWdlc2lsYXVzIGhhcyBoaXMgcG9zaXRpb24sIGlzIGF0IHRoZSBvcGVuaW5nIG9mIHRoZSB2YWxsZXkgaW50byB0aGUgcGxhaW4uIFRoZSBlbmVteSBhcmUgZ2F0aGVyaW5nIHVwb24gdGhlIGhpbGxzIG9uIG9uZSBzaWRlIG9mIHRoZSB2YWxsZXkuIEFnZXNpbGF1cyBmaXJzdCBmYWNlcyBoaXMgdHJvb3BzIHRvd2FyZCB0aGUgZW5lbXkgKDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+E4b2wIOG9hc+AzrvOsS4uLs+GzrHhvbfOvc+Jzr08L2ZvcmVpZ24+KS4gVGhlIG1hcmNoaW5nIGxpbmUgaXMgdGh1cyB0cmFuc2Zvcm1lZCwgdGVjaG5pY2FsbHksIGludG8gYSDigJxwaGFsYW54LOKAnSBvciBsaW5lIG9mIGJhdHRsZS4gVGhlbiwgYnkgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gM69zrHPg8+Ez4HOv8+G4b21PC9mb3JlaWduPiAoc2VlIG5vdGUgb24gaWkuIDIxKSwgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6/4b2Qz4HhvbE8L2ZvcmVpZ24+LCBpLmUuLCB0aGUgb3JpZ2luYWwgcmVhciBvZiB0aGUgbWFyY2hpbmcgbGluZSwgaXMgZm9sZGVkIGJhY2sgYW5kIGdyYWR1YWxseSBkcmF3biBvdXQsIOKAnGJlaGluZCB0aGUgcGhhbGFueCzigJ0gdG8gdGhlIG9wZW4gZW5kIG9mIHRoZSB2YWxsZXkuIFRoZSBlbnRpcmUgYXJteSBub3cgbWFyY2hlcyBvdXQgaW50byB0aGUgcGxhaW4uIFRoZXJlIHRoZSBwcm9jZXNzIGp1c3QgZGVzY3JpYmVkIGlzIHJldmVyc2VkLCBzbyBicmluZ2luZyB0aGUgbGluZSBiYWNrIHRvIGl0cyBvcmlnaW5hbCBmb3JtLjwvbm90ZT4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/hvZDPgeG9sTwvZm9yZWlnbj4pIG9mIHRoZSBMYWNlZGFlbW9uaWFuIGxpbmUgaXMgYXQgdGhlIGhlYWQgb2YgdGhlIHZhbGxleSwgd2hpbGUgdGhlIHZhbiwgd2hlcmUgQWdlc2lsYXVzIGhhcyBoaXMgcG9zaXRpb24sIGlzIGF0IHRoZSBvcGVuaW5nIG9mIHRoZSB2YWxsZXkgaW50byB0aGUgcGxhaW4uIFRoZSBlbmVteSBhcmUgZ2F0aGVyaW5nIHVwb24gdGhlIGhpbGxzIG9uIG9uZSBzaWRlIG9mIHRoZSB2YWxsZXkuIEFnZXNpbGF1cyBmaXJzdCBmYWNlcyBoaXMgdHJvb3BzIHRvd2FyZCB0aGUgZW5lbXkgKDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+E4b2wIOG9hc+AzrvOsS4uLs+GzrHhvbfOvc+Jzr08L2ZvcmVpZ24+KS4gVGhlIG1hcmNoaW5nIGxpbmUgaXMgdGh1cyB0cmFuc2Zvcm1lZCwgdGVjaG5pY2FsbHksIGludG8gYSDigJxwaGFsYW54LOKAnSBvciBsaW5lIG9mIGJhdHRsZS4gVGhlbiwgYnkgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gM69zrHPg8+Ez4HOv8+G4b21PC9mb3JlaWduPiAoc2VlIG5vdGUgb24gaWkuIDIxKSwgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6/4b2Qz4HhvbE8L2ZvcmVpZ24+LCBpLmUuLCB0aGUgb3JpZ2luYWwgcmVhciBvZiB0aGUgbWFyY2hpbmcgbGluZSwgaXMgZm9sZGVkIGJhY2sgYW5kIGdyYWR1YWxseSBkcmF3biBvdXQsIOKAnGJlaGluZCB0aGUgcGhhbGFueCzigJ0gdG8gdGhlIG9wZW4gZW5kIG9mIHRoZSB2YWxsZXkuIFRoZSBlbnRpcmUgYXJteSBub3cgbWFyY2hlcyBvdXQgaW50byB0aGUgcGxhaW4uIFRoZXJlIHRoZSBwcm9jZXNzIGp1c3QgZGVzY3JpYmVkIGlzIHJldmVyc2VkLCBzbyBicmluZ2luZyB0aGUgbGluZSBiYWNrIHRvIGl0cyBvcmlnaW5hbCBmb3JtLjwvdHJhbnNsYXRpb24+"
translation['6.5.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSBwaGFsYW54IGhhZCB0aHVzIGJlZW4gZG91YmxlZCBpbiBkZXB0aCwgaGUgcHJvY2VlZGVkIGludG8gdGhlIHBsYWluIHdpdGggdGhlIGhvcGxpdGVzIGluIHRoaXMgZm9ybWF0aW9uLCBhbmQgdGhlbiBleHRlbmRlZCB0aGUgYXJteSBhZ2FpbiBpbnRvIGEgbGluZSBuaW5lIG9yIHRlbiBzaGllbGRzIGRlZXAuIFRoZSBNYW50aW5lYW5zLCBob3dldmVyLCBub3cgZGVzaXN0ZWQgZnJvbSBjb21pbmcgZm9ydGggZnJvbSB0aGVpciBjaXR5LCBmb3IgdGhlIEVsZWFucywgd2hvIHdlcmUgbWFraW5nIHRoZSBjYW1wYWlnbiB3aXRoIHRoZW0sIHVyZ2VkIHRoZW0gbm90IHRvIGZpZ2h0IGEgYmF0dGxlIHVudGlsIHRoZSBUaGViYW5zIGFycml2ZWQ7IGFuZCB0aGV5IHNhaWQgdGhleSB3ZXJlIHF1aXRlIHN1cmUgdGhhdCB0aGUgVGhlYmFucyB3b3VsZCBjb21lLCBmb3IgdGhleSBoYWQgYm9ycm93ZWQgdGVuIHRhbGVudHMgZnJvbSB0aGUgRWxlYW5zIHRoZW1zZWx2ZXMgZm9yIHRoZSBleHBlbnNlcyBvZiB0aGUgZXhwZWRpdGlvbiB0byBhaWQgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['6.5.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgQXJjYWRpYW5zLCB0aGVuLCB1cG9uIGhlYXJpbmcgdGhpcywgcmVtYWluZWQgcXVpZXQgaW4gTWFudGluZWE7IGFuZCBBZ2VzaWxhdXMsIGV2ZW4gdGhvdWdoIGhlIHdhcyBleGNlZWRpbmdseSBkZXNpcm91czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC9ub3RlPiBvZiBsZWFkaW5nIGJhY2sgaGlzIGFybXkg4oCUIGZvciBpdCB3YXMgbWlkLXdpbnRlciDigJQgbmV2ZXJ0aGVsZXNzIHJlbWFpbmVkIHRoZXJlIGZvciB0aHJlZSBkYXlzLCBub3QgZmFyIGF3YXkgZnJvbSB0aGUgY2l0eSBvZiB0aGUgTWFudGluZWFucywgdGhhdCBoZSBtaWdodCBub3QgYmUgdGhvdWdodCB0byBiZSBodXJyeWluZyBoaXMgZGVwYXJ0dXJlIG91dCBvZiBmZWFyLiBPbiB0aGUgZm91cnRoIGRheSwgaG93ZXZlciwgYWZ0ZXIgYnJlYWtmYXN0aW5nIGVhcmx5IGhlIGJlZ2FuIGhpcyBob21ld2FyZCBtYXJjaCwgaW50ZW5kaW5nIHRvIGVuY2FtcCBhdCB0aGUgcGxhY2Ugd2hlcmUgaGUgaGFkIG9yaWdpbmFsbHkgbWFkZSBjYW1wIG9uIGhpcyBkZXBhcnR1cmUgZnJvbSBFdXRhZWEuCjxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzAgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.5.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgc2luY2Ugbm9uZSBvZiB0aGUgQXJjYWRpYW5zIGFwcGVhcmVkLCBoZSBjb250aW51ZWQgaGlzIG1hcmNoIGFzIHJhcGlkbHkgYXMgcG9zc2libGUgdG8gRXV0YWVhLCBldmVuIHRob3VnaCBpdCB3YXMgdmVyeSBsYXRlLCB3aXRoIHRoZSBkZXNpcmUgb2YgZ2V0dGluZyBoaXMgaG9wbGl0ZXMgYXdheSBiZWZvcmUgdGhleSBldmVuIHNhdyB0aGUgZW5lbXkncyBmaXJlcywgc28gdGhhdCBubyBvbmUgY291bGQgc2F5IHRoYXQgaGUgaGFkIHdpdGhkcmF3biBpbiBmbGlnaHQuIEZvciBoZSBzZWVtZWQgdG8gaGF2ZSBicm91Z2h0IHRoZSBzdGF0ZSBzb21lIHJlbGllZiBmcm9tIGl0cyBmb3JtZXIgZGVzcG9uZGVuY3ksIGluYXNtdWNoIGFzIGhlIGhhZCBpbnZhZGVkIEFyY2FkaWEgYW5kLCB0aG91Z2ggaGUgbGFpZCB3YXN0ZSB0aGUgbGFuZCwgbm9uZSBoYWQgYmVlbiB3aWxsaW5nIHRvIGZpZ2h0IHdpdGggaGltLiBBbmQgYWZ0ZXIgaGUgaGFkIGFycml2ZWQgaW4gTGFjb25pYSwgaGUgbGV0IHRoZSBTcGFydGlhdGFlIGdvIGhvbWUgYW5kIGRpc21pc3NlZCB0aGUgUGVyaW9lY2kgdG8gdGhlaXIgc2V2ZXJhbCBjaXRpZXMuCjwvdHJhbnNsYXRpb24+"
translation['6.5.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIHRoZSBBcmNhZGlhbnMsIHNpbmNlIEFnZXNpbGF1cyBoYWQgZGVwYXJ0ZWQgYW5kIHRoZXkgbGVhcm5lZCB0aGF0IGhpcyBhcm15IGhhZCBiZWVuIGRpc2JhbmRlZCwgd2hpbGUgdGhleSB0aGVtc2VsdmVzIHdlcmUgc3RpbGwgZ2F0aGVyZWQgdG9nZXRoZXIsIHRoZXkgbWFkZSBhbiBleHBlZGl0aW9uIGFnYWluc3QgdGhlIEhlcmFlYW5zLCBub3Qgb25seSBiZWNhdXNlIHRoZXkgcmVmdXNlZCB0byBiZSBtZW1iZXJzIG9mIHRoZSBBcmNhZGlhbiBMZWFndWUsIGJ1dCBhbHNvIGJlY2F1c2UgdGhleSBoYWQgam9pbmVkIHdpdGggdGhlIExhY2VkYWVtb25pYW5zIGluIGludmFkaW5nIEFyY2FkaWEuIEFuZCBhZnRlciBlbnRlcmluZyB0aGUgdGVycml0b3J5IG9mIEhlcmFlYSB0aGV5IHByb2NlZWRlZCB0byBidXJuIHRoZSBob3VzZXMgYW5kIGN1dCBkb3duIHRoZSB0cmVlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgd2FzIG5vdCB1bnRpbCB0aGUgVGhlYmFucyB3aXRoIHRoZWlyIHN1cHBvcnRpbmcgZm9yY2Ugd2VyZSByZXBvcnRlZCB0byBoYXZlIGFycml2ZWQgaW4gTWFudGluZWEgdGhhdCB0aGUgQXJjYWRpYW5zIGRlcGFydGVkIGZyb20gSGVyYWVhIGFuZCB1bml0ZWQgd2l0aCB0aGUgVGhlYmFucy4KPC90cmFuc2xhdGlvbj4="
translation['6.5.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXkgaGFkIGpvaW5lZCBmb3JjZXMsIHRoZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC9ub3RlPiBUaGViYW5zIHRob3VnaHQgdGhhdCBtYXR0ZXJzIHN0b29kIHdlbGwgd2l0aCB0aGVtLCBpbmFzbXVjaCBhcyB0aGV5IGhhZCBjb21lIHRvIGJyaW5nIGFpZCBhbmQgdGhlcmUgd2FzIG5vIGxvbmdlciBhbiBlbmVteSB0byBiZSBzZWVuIGluIHRoZSBsYW5kOyB0aGV5IGFjY29yZGluZ2x5IG1hZGUgdGhlaXIgcHJlcGFyYXRpb25zIGZvciBnb2luZyBiYWNrLiBCdXQgdGhlIEFyY2FkaWFucywgQXJnaXZlcywgYW5kIEVsZWFucyB1cmdlZCB0aGVtIHRvIGxlYWQgdGhlIHdheSB3aXRoIGFsbCBzcGVlZCBpbnRvIExhY29uaWEsIHBvaW50aW5nIG91dCB0aGUgbnVtYmVyIG9mIHRoZWlyIG93biB0cm9vcHM8ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBUaGUgVGhlYmFuIGFybXkgYWNjb3JkaW5nIHRvIFBsdXRhcmNoICg8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BZ2VzLjwvdGl0bGU+IDMxKSBudW1iZXJlZCA0MCwwMDAgaG9wbGl0ZXMsIHdoaWxlIERpb2RvcnVzICh4di4gNjIpIHB1dHMgdGhlIGNvbWJpbmVkIGZvcmNlcyBhdCBtb3JlIHRoYW4gNzAsMDAwIG1lbi48L25vdGU+IGFuZCBwcmFpc2luZyBiZXlvbmQgbWVhc3VyZSB0aGUgYXJteSBvZiB0aGUgVGhlYmFucy4gRm9yIGFsbCB0aGUgQm9lb3RpYW5zIHdlcmUgbm93IHRyYWluaW5nIHRoZW1zZWx2ZXMgaW4gdGhlIGNyYWZ0IG9mIGFybXMsIGdsb3J5aW5nIGluIHRoZWlyIHZpY3RvcnkgYXQgTGV1Y3RyYTsgYW5kIHRoZXkgd2VyZSByZWluZm9yY2VkIGJ5IHRoZSBQaG9jaWFucywgd2hvIGhhZCBiZWNvbWUgdGhlaXIgc3ViamVjdHMsIHRoZSBFdWJvZWFucyBmcm9tIGFsbCB0aGVpciBjaXRpZXMsIGJvdGggdGhlIExvY3JpYW4gcGVvcGxlcyw8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5BZ2VzLjwvdGl0bGU+IDMxKSBudW1iZXJlZCA0MCwwMDAgaG9wbGl0ZXMsIHdoaWxlIERpb2RvcnVzICh4di4gNjIpIHB1dHMgdGhlIGNvbWJpbmVkIGZvcmNlcyBhdCBtb3JlIHRoYW4gNzAsMDAwIG1lbi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIGl2LiBpaS4gMTcuPC9ub3RlPiB0aGUgQWNhcm5hbmlhbnMsIHRoZSBIZXJhY2xlb3RzLCBhbmQgdGhlIE1hbGlhbnM7IHRoZXkgd2VyZSBhbHNvIHJlaW5mb3JjZWQgYnkgaG9yc2VtZW4gYW5kIHBlbHRhc3RzIGZyb20gVGhlc3NhbHkuIFRoZSBBcmNhZGlhbnMsIHRoZW4sIHNlZWluZyBhbGwgdGhpcyBhbmQgZGVzY3JpYmluZyB0aGUgZGVhcnRoIG9mIG1lbiBpbiBMYWNlZGFlbW9uLCBiZWdnZWQgdGhlbSBieSBubyBtZWFucyB0byB0dXJuIGJhY2sgYmVmb3JlIGludmFkaW5nIHRoZSBjb3VudHJ5IG9mIHRoZSBMYWNlZGFlbW9uaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['6.5.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHdoaWxlIHRoZSBUaGViYW5zIGxpc3RlbmVkIHRvIHRoaXMgcmVxdWVzdCwgdGhleSB0b29rIGludG8gYWNjb3VudCwgb24gdGhlIG90aGVyIGhhbmQsIHRoZSBmYWN0IHRoYXQgTGFjb25pYSB3YXMgc2FpZCB0byBiZSBleGNlZWRpbmdseSBkaWZmaWN1bHQgdG8gZW50ZXIsIGFuZCB0aGF0IHRoZXkgYmVsaWV2ZWQgZ2Fycmlzb25zIHdlcmUgcG9zdGVkIGF0IHRoZSBwb2ludHMgb2YgZWFzaWVzdCBhY2Nlc3MuIEZvciBJc2Nob2xhdXMgd2FzIGF0IE9ldW0sIGluIFNjaXJpdGlzLCBjb21tYW5kaW5nIGEgZ2Fycmlzb24gY29tcG9zZWQgb2YgZW1hbmNpcGF0ZWQgSGVsb3RzIGFuZCBhYm91dCBmb3VyIGh1bmRyZWQgb2YgdGhlIHlvdW5nZXN0IG9mIHRoZSBUZWdlYW4gZXhpbGVzOyBhbmQgdGhlcmUgd2FzIGFub3RoZXIgZ2Fycmlzb24gYWxzbyBhdCBMZXVjdHJ1bSwgYWJvdmUgTWFsZWF0aXMuIFRoZSBUaGViYW5zIGxpa2V3aXNlIHdlaWdoZWQgdGhpcyBjb25zaWRlcmF0aW9uLCB0aGF0IHRoZSBmb3JjZSBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgd291bGQgZ2F0aGVyIHF1aWNrbHkgYW5kIHRoYXQgdGhleSB3b3VsZCBmaWdodCBub3doZXJlIGJldHRlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC9ub3RlPiB0aGFuIGluIHRoZWlyIG93biBjb3VudHJ5LiBUaGVyZWZvcmUsIHRha2luZyBpbnRvIGFjY291bnQgYWxsIHRoZXNlIHRoaW5ncywgdGhleSB3ZXJlIGJ5IG5vIG1lYW5zIGVhZ2VyIHRvIHByb2NlZWQgaW50byBMYWNlZGFlbW9uLgo8ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.5.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBwZW9wbGUgaGFkIGNvbWUgZnJvbSBDYXJ5YWUgdGVsbGluZyBvZiB0aGUgZGVhcnRoIG9mIG1lbiwgcHJvbWlzaW5nIHRoYXQgdGhleSB3b3VsZCB0aGVtc2VsdmVzIGFjdCBhcyBndWlkZXMsIGFuZCBiaWRkaW5nIHRoZSBUaGViYW5zIHNsYXkgdGhlbSBpZiB0aGV5IHdlcmUgZm91bmQgdG8gYmUgcHJhY3Rpc2luZyBhbnkgZGVjZXB0aW9uLCBhbmQgd2hlbiwgZnVydGhlciwgc29tZSBvZiB0aGUgUGVyaW9lY2kgYXBwZWFyZWQsIGFza2luZyB0aGUgVGhlYmFucyB0byBjb21lIHRvIHRoZWlyIGFpZCwgZW5nYWdpbmcgdG8gcmV2b2x0IGlmIG9ubHkgdGhleSB3b3VsZCBzaG93IHRoZW1zZWx2ZXMgaW4gdGhlIGxhbmQsIGFuZCBzYXlpbmcgYWxzbyB0aGF0IGV2ZW4gbm93IHRoZSBQZXJpb2VjaSB3aGVuIHN1bW1vbmVkIGJ5IHRoZSBTcGFydGlhdGFlIHdlcmUgcmVmdXNpbmcgdG8gZ28gYW5kIGhlbHAgdGhlbSDigJQgYXMgYSByZXN1bHQsIHRoZW4sIG9mIGhlYXJpbmcgYWxsIHRoZXNlIHJlcG9ydHMsIGluIHdoaWNoIGFsbCBhZ3JlZWQsIHRoZSBUaGViYW5zIHdlcmUgd29uIG92ZXIsIGFuZCBwdXNoZWQgaW4gd2l0aCB0aGVpciBvd24gZm9yY2VzIGJ5IHdheSBvZiBDYXJ5YWUsIHdoaWxlIHRoZSBBcmNhZGlhbnMgd2VudCBieSB3YXkgb2YgT2V1bSwgaW4gU2Npcml0aXMuCjwvdHJhbnNsYXRpb24+"
translation['6.5.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGlmIElzY2hvbGF1cyBoYWQgYWR2YW5jZWQgdG8gdGhlIGRpZmZpY3VsdCBwYXJ0IG9mIHRoZSBwYXNzIGFuZCBoYWQgbWFkZSBoaXMgc3RhbmQgdGhlcmUsIG5vIG9uZSwgYnkgYWxsIGFjY291bnRzLCBjb3VsZCBoYXZlIGFjY29tcGxpc2hlZCB0aGUgYXNjZW50IGJ5IHRoYXQgcm91dGUgYXQgbGVhc3Q7IGJ1dCBpbiBmYWN0LCBzaW5jZSBoZSB3aXNoZWQgdG8gZW1wbG95IHRoZSBPZWFucyBhcyBhbGxpZXMsIGhlIHJlbWFpbmVkIGluIHRoZSB2aWxsYWdlLCBhbmQgdGhlIEFyY2FkaWFucyBhc2NlbmRlZCB0aGUgcGFzcyBpbiB2ZXJ5IGdyZWF0IG51bWJlcnMuIFRoZXJlLCBpbiB0aGUgZmFjZS10by1mYWNlIGZpZ2h0aW5nLCB0aGUgdHJvb3BzIHdpdGggSXNjaG9sYXVzIHdlcmUgdmljdG9yaW91czsgYnV0IHdoZW4gdGhlIGVuZW15IHNob3dlcmVkIGJsb3dzIGFuZCBtaXNzaWxlcyB1cG9uIHRoZW0gZnJvbSB0aGUgcmVhciwgb24gdGhlIGZsYW5rLCBhbmQgZnJvbSB0aGUgaG91c2VzIHVwb24gd2hpY2ggdGhleSBtb3VudGVkLCB0aGVuIElzY2hvbGF1cyB3YXMga2lsbGVkIGFuZCBhbGwgdGhlIHJlc3QgYXMgd2VsbCwgdW5sZXNzIG9uZSBvciBhbm90aGVyIHNsaXBwZWQgdGhyb3VnaCB1bnJlY29nbml6ZWQuCjwvdHJhbnNsYXRpb24+"
translation['6.5.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciBhY2hpZXZpbmcgdGhpcyBkZWVkIHRoZSBBcmNhZGlhbnMgbWFyY2hlZCB0byBqb2luIHRoZSBUaGViYW5zIGF0IENhcnlhZTsgYW5kIHdoZW4gdGhlIFRoZWJhbnMgaGVhcmQgd2hhdCBoYWQgYmVlbiBhY2NvbXBsaXNoZWQgYnkgdGhlIEFyY2FkaWFucywgdGhleSBwcm9jZWVkZWQgdG8gbWFrZSB0aGUgZGVzY2VudCB3aXRoIGZhciBncmVhdGVyIGJvbGRuZXNzLiBDb21pbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvbm90ZT4gdG8gU2VsbGFzaWEsIHRoZXkgYXQgb25jZSBidXJuZWQgYW5kIHBpbGxhZ2VkIGl0OyBidXQgd2hlbiB0aGV5IGFycml2ZWQgaW4gdGhlIHBsYWluLCB0aGV5IGVuY2FtcGVkIHRoZXJlLCBpbiB0aGUgc2FjcmVkIHByZWNpbmN0IG9mIEFwb2xsby4gVGhlIG5leHQgZGF5IHRoZXkgbWFyY2hlZCBvbi48ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyB0aGV5IGRpZCBub3QgZXZlbiBtYWtlIHRoZSBhdHRlbXB0IHRvIGNyb3NzIG92ZXIgYnkgdGhlIGJyaWRnZSBhZ2FpbnN0IFNwYXJ0YSwgZm9yIGluIHRoZSBzYW5jdHVhcnkgb2YgQXRoZW5hIEFsZWEgdGhlIGhvcGxpdGVzIHdlcmUgdG8gYmUgc2VlbiwgcmVhZHkgdG8gb3Bwb3NlIHRoZW07IGJ1dCBrZWVwaW5nIHRoZSBFdXJvdGFzIG9uIHRoZWlyIHJpZ2h0IHRoZXkgcGFzc2VkIGFsb25nLCBidXJuaW5nIGFuZCBwbHVuZGVyaW5nIGhvdXNlcyBmdWxsIG9mIG1hbnkgdmFsdWFibGUgdGhpbmdzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIHBlb3BsZSBpbiB0aGUgY2l0eSwgdGhlIHdvbWVuIGNvdWxkIG5vdCBldmVuIGVuZHVyZSB0aGUgc2lnaHQgb2YgdGhlIHNtb2tlLCBzaW5jZSB0aGV5IGhhZCBuZXZlciBzZWVuIGFuIGVuZW15OyBidXQgdGhlIFNwYXJ0aWF0YWUsIHRoZWlyIGNpdHkgYmVpbmcgd2l0aG91dCB3YWxscywgd2VyZSBwb3N0ZWQgYXQgaW50ZXJ2YWxzLCBvbmUgaGVyZSwgYW5vdGhlciB0aGVyZSwgYW5kIHNvIGtlcHQgZ3VhcmQsIHRob3VnaHQgdGhleSB3ZXJlLCBhbmQgd2VyZSBzZWVuIHRvIGJlLCB2ZXJ5IGZldyBpbiBudW1iZXIuIEl0IHdhcyBhbHNvIGRldGVybWluZWQgYnkgdGhlIGF1dGhvcml0aWVzIHRvIG1ha2UgcHJvY2xhbWF0aW9uIHRvIHRoZSBIZWxvdHMgdGhhdCBpZiBhbnkgd2lzaGVkIHRvIHRha2UgdXAgYXJtcyBhbmQgYmUgYXNzaWduZWQgdG8gYSBwbGFjZSBpbiB0aGUgcmFua3MsIHRoZXkgc2hvdWxkIGJlIGdpdmVuIGEgcHJvbWlzZSB0aGF0IGFsbCBzaG91bGQgYmUgZnJlZSB3aG8gdG9vayBwYXJ0IGluIHRoZSB3YXIuCjwvdHJhbnNsYXRpb24+"
translation['6.5.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaXQgd2FzIHNhaWQgdGhhdCBhdCBmaXJzdCBtb3JlIHRoYW4gc2l4IHRob3VzYW5kIGVucm9sbGVkIHRoZW1zZWx2ZXMsIHNvIHRoYXQgdGhleSBpbiB0aGVpciB0dXJuIG9jY2FzaW9uZWQgZmVhciB3aGVuIHRoZXkgd2VyZSBtYXJzaGFsbGVkIHRvZ2V0aGVyLCBhbmQgd2VyZSB0aG91Z2h0IHRvIGJlIGFsbCB0b28gbnVtZXJvdXM7IGJ1dCB3aGVuIHRoZSBtZXJjZW5hcmllcyBmcm9tIE9yY2hvbWVudXMgcmVtYWluZWQgdHJ1ZSwgYW5kIHRoZSBMYWNlZGFlbW9uaWFucyByZWNlaXZlZCBhaWQgZnJvbSB0aGUgUGhsaWFzaWFucywgQ29yaW50aGlhbnMsIEVwaWRhdXJpYW5zLCBQZWxsZW5lYW5zLCBhbmQgbGlrZXdpc2Ugc29tZSBvZiB0aGUgb3RoZXIgc3RhdGVzLCB0aGVuIHRoZSBTcGFydGlhdGFlIHdlcmUgbGVzcyBmZWFyZnVsIG9mIHRob3NlIHdobyBoYWQgYmVlbiBlbnJvbGxlZC4KPC90cmFuc2xhdGlvbj4="
translation['6.5.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoZW4sIGluIGl0cyBvbndhcmQgbWFyY2gsIHRoZSBhcm15IG9mIHRoZSBlbmVteSBjYW1lIG9wcG9zaXRlIEFteWNsYWUsIGF0IHRoaXMgcG9pbnQgdGhleSBjcm9zc2VkIHRoZSBFdXJvdGFzLiBBbmQgd2hlcmV2ZXIgdGhlIFRoZWJhbnMgZW5jYW1wZWQgdGhleSBhdCBvbmNlIHRocmV3IGRvd24gaW4gZnJvbnQgb2YgdGhlaXIgbGluZXMgdGhlIGdyZWF0ZXN0IHBvc3NpYmxlIHF1YW50aXR5IG9mIHRoZSB0cmVlcyB3aGljaDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC9ub3RlPiB0aGV5IGN1dCBkb3duLCBhbmQgaW4gdGhpcyB3YXkgZ3VhcmRlZCB0aGVtc2VsdmVzOyB0aGUgQXJjYWRpYW5zLCBob3dldmVyLCBkaWQgbm90aGluZyBvZiB0aGlzIHNvcnQsIGJ1dCBsZWZ0IHRoZWlyIGNhbXAgYmVoaW5kIHRoZW0gYW5kIHR1cm5lZCB0aGVpciBhdHRlbnRpb24gdG8gcGx1bmRlcmluZyB0aGUgaG91c2VzLiBBZnRlciB0aGlzLCBvbiB0aGUgdGhpcmQgb3IgZm91cnRoIGRheSBvZiB0aGUgaW52YXNpb24sIHRoZSBob3JzZW1lbiBhZHZhbmNlZCB0byB0aGUgcmFjZS1jb3Vyc2UgaW4gdGhlIHNhbmN0dWFyeSBvZiBQb3NlaWRvbiBHYWVhb2NodXMgYnkgZGl2aXNpb25zLCB0aGUgVGhlYmFucyBpbiBmdWxsIGZvcmNlLCB0aGUgRWxlYW5zLCBhbmQgYWxsIHRoZSBob3JzZW1lbiB3aG8gd2VyZSB0aGVyZSBvZiB0aGUgUGhvY2lhbnMsIFRoZXNzYWxpYW5zLCBvciBMb2NyaWFucy4KPGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.5.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIGhvcnNlbWVuIG9mIHRoZSBMYWNlZGFlbW9uaWFucywgc2VlbWluZ2x5IHZlcnkgZmV3IGluIG51bWJlciwgd2VyZSBmb3JtZWQgaW4gbGluZSBhZ2FpbnN0IHRoZW0uIE1lYW53aGlsZSB0aGUgTGFjZWRhZW1vbmlhbnMgaGFkIHNldCBhbiBhbWJ1c2ggb2YgdGhlIHlvdW5nZXIgaG9wbGl0ZXMsIGFib3V0IHRocmVlIGh1bmRyZWQgaW4gbnVtYmVyLCBpbiB0aGUgaG91c2Ugb2YgdGhlIFR5bmRhcmlkYWUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBTZWUgbm90ZSBvbiBpaWkuIDYuPC9ub3RlPiBhbmQgYXQgdGhlIHNhbWUgbW9tZW50IHRoZXNlIG1lbiBydXNoZWQgZm9ydGggYW5kIHRoZWlyIGhvcnNlbWVuIGNoYXJnZWQuIFRoZSBlbmVteSwgaG93ZXZlciwgZGlkIG5vdCBhd2FpdCB0aGVpciBhdHRhY2ssIGJ1dCBnYXZlIHdheS4gQW5kIG9uIHNlZWluZyB0aGlzLCBtYW55IG9mIHRoZSBmb290LXNvbGRpZXJzIGFsc28gdG9vayB0byBmbGlnaHQuIEJ1dCB3aGVuIHRoZSBwdXJzdWVycyBzdG9wcGVkIGFuZCB0aGUgYXJteSBvZiB0aGUgVGhlYmFucyBzdG9vZCBmaXJtLCB0aGUgZW5lbXkgZW5jYW1wZWQgYWdhaW4uCjwvdHJhbnNsYXRpb24+"
translation['6.5.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5JdCBub3cgc2VlbWVkIHNvbWV3aGF0IG1vcmUgY2VydGFpbiB0aGF0IHRoZXkgd291bGQgbWFrZSBubyBmdXJ0aGVyIGF0dGVtcHQgdXBvbiB0aGUgY2l0eTsgYW5kIGluIGZhY3QgdGhlaXIgYXJteSBkZXBhcnRlZCB0aGVuY2UgYW5kIHRvb2sgdGhlIHJvYWQgdG93YXJkIEhlbG9zIGFuZCBHeXRoZWl1bS4gQW5kIHRoZXkgYnVybmVkIHN1Y2ggb2YgdGhlIHRvd25zIGFzIHdlcmUgdW53YWxsZWQgYW5kIG1hZGUgYSB0aHJlZSBkYXlzJyBhdHRhY2sgdXBvbiBHeXRoZWl1bSwgd2hlcmUgdGhlIExhY2VkYWVtb25pYW5zIGhhZCB0aGVpciBkb2NreWFyZHMuIFRoZXJlIHdlcmUgc29tZSBvZiB0aGUgUGVyaW9lY2kgYWxzbyB3aG8gbm90IG9ubHkgam9pbmVkIGluIHRoaXMgYXR0YWNrLCBidXQgZGlkIHJlZ3VsYXIgc2VydmljZSB3aXRoIHRoZSB0cm9vcHMgdGhhdCBmb2xsb3dlZCB0aGUgVGhlYmFucy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IEEgbW9zdCBzdHJpa2luZyBpbmRpY2F0aW9uIG9mIFhlbm9waG9uJ3MgcHJvLVNwYXJ0YW4gZmVlbGluZyAoc2VlIEludHJvZC4gcC4geCkgaXMgZm91bmQgaW4gdGhlIGZhY3QgdGhhdCBoZSBoZXJlIG9taXRzIGFsbCByZWZlcmVuY2UgdG8gdGhlIGdyZWF0ZXN0IG9mIHRoZSBodW1pbGlhdGlvbnMgd2hpY2ggU3BhcnRhIHN1ZmZlcmVkIGF0IHRoaXMgdGltZTogKDEpIHRoZSByZS1lc3RhYmxpc2htZW50IGJ5IEVwYW1pbm9uZGFzLCB0aGUgVGhlYmFuIGdlbmVyYWwsIG9mIHRoZSBpbmRlcGVuZGVuY2Ugb2YgTWVzc2VuaWEsIHdoaWNoIGZvciBjZW50dXJpZXMgaGFkIGJlZW4gc3ViamVjdCB0byB0aGUgU3BhcnRhbnM7IGFuZCAoMikgdGhlIGZvdW5kaW5nIG9mIOKAnHRoZSBncmVhdCBjaXR5LOKAnSBNZWdhbG9wb2xpcywgYXMgdGhlIGNhcGl0YWwgb2YgYW4gaW5kZXBlbmRlbnQgQXJjYWRpYS4gTmV2ZXJ0aGVsZXNzLCBYZW5vcGhvbiBhbGx1ZGVzIHNldmVyYWwgdGltZXMgaW4gdGhlIGZvbGxvd2luZyBib29rIHRvIHRoZSBhY2NvbXBsaXNoZWQgZmFjdCBvZiBNZXNzZW5pYW4gaW5kZXBlbmRlbmNlIGFuZCB0byBNZWdhbG9wb2xpcy48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['6.5.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgQXRoZW5pYW5zIGhlYXJkIG9mIGFsbCB0aGVzZSB0aGluZ3MsIHRoZXk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvbm90ZT4gd2VyZSBpbiBhIHN0YXRlIG9mIGNvbmNlcm4gYXMgdG8gd2hhdCB0aGV5IHNob3VsZCBkbyBpbiByZWdhcmQgdG8gdGhlIExhY2VkYWVtb25pYW5zLCBhbmQgYnkgcmVzb2x1dGlvbiBvZiB0aGUgU2VuYXRlIHRoZXkgY2FsbGVkIGEgbWVldGluZyBvZiB0aGUgQXNzZW1ibHkuIE5vdyBpdCBjaGFuY2VkIHRoYXQgdGhlcmUgd2VyZSBwcmVzZW50IGFtYmFzc2Fkb3JzIG9mIHRoZSBMYWNlZGFlbW9uaWFucyBhbmQgb2YgdGhlIGFsbGllcyB3aG8gc3RpbGwgcmVtYWluZWQgdG8gdGhlbS4gV2hlcmVmb3JlIHRoZSBMYWNlZGFlbW9uaWFucyBzcG9rZSDigJQgQXJhY3VzLCBPY3lsbHVzLCBQaGFyYXgsIEV0eW1vY2xlcywgYW5kIE9sb250aGV1cyDigJQgYWxtb3N0IGFsbCBvZiB0aGVtIHNheWluZyBtdWNoIHRoZSBzYW1lIHRoaW5ncy4gVGhleSByZW1pbmRlZCB0aGUgQXRoZW5pYW5zIHRoYXQgZnJvbSBhbGwgdGltZSB0aGUgdHdvIHBlb3BsZXMgaGFkIHN0b29kIGJ5IG9uZSBhbm90aGVyIGluIHRoZSBtb3N0IGltcG9ydGFudCBjcmlzZXMgZm9yIGdvb2QgZW5kczsgZm9yIHRoZXkgb24gdGhlaXIgc2lkZSwgdGhleSBzYWlkLCBoYWQgYWlkZWQgaW4gZXhwZWxsaW5nIHRoZSB0eXJhbnRzPGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gVGhlIGhvdXNlIG9mIHRoZSBQZWlzaXN0cmF0aWRhZSwgaW4gPGRhdGUgYXV0aG5hbWU9Ii01MTEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii01MTEiPjUxMSBCLkMuPC9kYXRlPjwvbm90ZT4gZnJvbSBBdGhlbnMsIHdoaWxlIHRoZSBBdGhlbmlhbnMsIG9uIHRoZSBvdGhlciBoYW5kLCBnYXZlIHRoZW0gemVhbG91cyBhc3Npc3RhbmNlIGF0IHRoZSB0aW1lIHdoZW4gdGhleSB3ZXJlIGhhcmQgcHJlc3NlZCBieSB0aGUgTWVzc2VuaWFucy48ZGF0ZSBhdXRobmFtZT0iLTUxMSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTUxMSI+NTExIEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBJbiB0aGUgc28tY2FsbGVkIFRoaXJkIE1lc3NlbmlhbiBXYXIsIDxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii00NjQvLTQ1NSIgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItNDY0IiB0bz0iLTQ1NSI+NDY0LTQ1NSBCLkMuPC9kYXRlUmFuZ2U+PC9ub3RlPgo8ZGF0ZVJhbmdlIGF1dGhuYW1lPSItNDY0Ly00NTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZnJvbT0iLTQ2NCIgdG89Ii00NTUiPjQ2NC00NTUgQi5DLjwvZGF0ZVJhbmdlPjwvdHJhbnNsYXRpb24+"
translation['6.5.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGV5IGFsc28gZGVzY3JpYmVkIGFsbCB0aGUgYmxlc3NpbmdzIHdoaWNoIHdlcmUgZW5qb3llZCBhdCB0aGUgdGltZSB3aGVuIGJvdGggcGVvcGxlcyB3ZXJlIGFjdGluZyBpbiB1bmlvbiwgcmVjYWxsaW5nIGhvdyB0aGV5IGhhZCB0b2dldGhlciBkcml2ZW4gdGhlIGJhcmJhcmlhbiBiYWNrLCByZWNhbGxpbmcgbGlrZXdpc2UgaG93IHRoZSBBdGhlbmlhbnMgaGFkIGJlZW4gY2hvc2VuIGJ5IHRoZSBHcmVla3MgYXMgbGVhZGVycyBvZiB0aGUgZmxlZXQgYW5kIGN1c3RvZGlhbnMgb2YgdGhlIGNvbW1vbiBmdW5kcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFJlZmVycmluZyB0byB0aGUgZm9ybWF0aW9uIG9mIHRoZSBDb25mZWRlcmFjeSBvZiBEZWxvcywgPGRhdGUgYXV0aG5hbWU9Ii00NzciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00NzciPjQ3NyBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlIExhY2VkYWVtb25pYW5zIHN1cHBvcnRpbmcgdGhpcyBjaG9pY2UsIHdoaWxlIHRoZXkgaGFkIHRoZW1zZWx2ZXMgYmVlbiBzZWxlY3RlZCBieSB0aGUgY29tbW9uIGNvbnNlbnQgb2YgYWxsIHRoZSBHcmVla3MgYXMgbGVhZGVycyBieSBsYW5kLCB0aGUgQXRoZW5pYW5zIGluIHRoZWlyIHR1cm4gc3VwcG9ydGluZyB0aGlzIHNlbGVjdGlvbi4KPGRhdGUgYXV0aG5hbWU9Ii00NzciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00NzciPjQ3NyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.5.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgb25lIG9mIHRoZW0gZXZlbiBzYWlkIHNvbWV0aGluZyBsaWtlIHRoaXM6IOKAnEJ1dCBpZiB5b3UgYW5kIHdlLCBnZW50bGVtZW4sIGNvbWUgdG8gYWdyZWVtZW50LCB0aGVyZSBpcyBob3BlIG5vdyB0aGF0IHRoZSBUaGViYW5zIHdpbGwgYmUgZGVjaW1hdGVkLCBhcyB0aGUgb2xkIHNheWluZyBoYXMgaXQu4oCdIFRoZSBBdGhlbmlhbnMsIGhvd2V2ZXIsIHdlcmUgbm90IHZlcnkgbXVjaCBpbmNsaW5lZCB0byBhY2NlcHQgYWxsIHRoaXMsIGFuZCBhIG11cm11ciB3ZW50IHJvdW5kIHRvIHRoZSBlZmZlY3QgdGhhdCDigJx0aGlzIGlzIHdoYXQgdGhleSBzYXkgbm93LCBidXQgaW4gdGhlIHRpbWUgd2hlbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC9ub3RlPiB0aGV5IHdlcmUgcHJvc3Blcm91cyB0aGV5IHdlcmUgaG9zdGlsZSB0byB1cy7igJ0gVGhlIHdlaWdodGllc3Qgb2YgdGhlIGFyZ3VtZW50cyB1cmdlZCBieSB0aGUgTGFjZWRhZW1vbmlhbnMgc2VlbWVkIHRvIHRoZWlyIGhlYXJlcnMgdG8gYmUsIHRoYXQgYXQgdGhlIHRpbWUgd2hlbiB0aGV5IHN1YmR1ZWQgdGhlIEF0aGVuaWFucywgdGhvdWdoIHRoZSBUaGViYW5zIHdhbnRlZCB0byBkZXN0cm95IEF0aGVucyB1dHRlcmx5LCBpdCB3YXMgdGhleSB3aG8gaGFkIHByZXZlbnRlZCBpdC4KPGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.5.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5Nb3N0IHN0cmVzcyB3YXMgbGFpZCwgaG93ZXZlciwgdXBvbiB0aGUgY29uc2lkZXJhdGlvbiB0aGF0IHRoZSBBdGhlbmlhbnMgd2VyZSByZXF1aXJlZCBieSB0aGVpciBvYXRocyB0byBjb21lIHRvIHRoZWlyIGFzc2lzdGFuY2U7IGZvciBpdCB3YXMgbm90IGJlY2F1c2UgdGhlIExhY2VkYWVtb25pYW5zIGhhZCBkb25lIHdyb25nIHRoYXQgdGhlIEFyY2FkaWFucyBhbmQgdGhvc2Ugd2l0aCB0aGVtIHdlcmUgbWFraW5nIGFuIGV4cGVkaXRpb24gYWdhaW5zdCB0aGVtLCBidXQgcmF0aGVyIGJlY2F1c2UgdGhleSBoYWQgZ29uZSB0byB0aGUgYWlkIG9mIHRoZSBUZWdlYW5zIGZvciB0aGUgcmVhc29uIHRoYXQgdGhlIE1hbnRpbmVhbnMsIGluIHZpb2xhdGlvbiBvZiB0aGVpciBvYXRocywgaGFkIHRha2VuIHRoZSBmaWVsZCBhZ2FpbnN0IHRoZW0uIEF0IHRoZXNlIHdvcmRzIGFuIHVwcm9hciBhZ2FpbiByYW4gdGhyb3VnaCB0aGUgQXNzZW1ibHk7IGZvciBzb21lIHNhaWQgdGhhdCB0aGUgTWFudGluZWFucyBoYWQgZG9uZSByaWdodCBpbiBhdmVuZ2luZyB0aGUgZm9sbG93ZXJzIG9mIFByb3hlbnVzIHdobyBoYWQgYmVlbiBzbGFpbiBieSB0aGUgZm9sbG93ZXJzIG9mIFN0YXNpcHB1cywgd2hpbGUgb3RoZXJzIHNhaWQgdGhhdCB0aGV5IHdlcmUgaW4gdGhlIHdyb25nIGJlY2F1c2UgdGhleSBoYWQgdGFrZW4gdXAgYXJtcyBhZ2FpbnN0IHRoZSBUZWdlYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hpbGUgdGhlIEFzc2VtYmx5IGl0c2VsZiB3YXMgdHJ5aW5nIHRvIGRldGVybWluZSB0aGVzZSBtYXR0ZXJzLCBDbGVpdGVsZXMsIGEgQ29yaW50aGlhbiwgYXJvc2UgYW5kIHNwb2tlIGFzIGZvbGxvd3M6IOKAnE1lbiBvZiBBdGhlbnMsIGl0IGlzIHBlcmhhcHMgYSBkaXNwdXRlZCBwb2ludCB3aG8gYmVnYW4gdGhlIHdyb25nLWRvaW5nOyBidXQgYXMgZm9yIHVzLCBjYW4gYW55b25lIGFjY3VzZSB1cyBvZiBoYXZpbmcsIGF0IGFueSB0aW1lIHNpbmNlIHBlYWNlIHdhcyBjb25jbHVkZWQsIGVpdGhlciBtYWRlIGEgY2FtcGFpZ24gYWdhaW5zdCBhbnkgY2l0eSwgb3IgdGFrZW4gYW55b25lJ3MgcHJvcGVydHksIG9yIGxhaWQgd2FzdGUgYW5vdGhlcidzIGxhbmQ/IFlldCwgbmV2ZXJ0aGVsZXNzLCB0aGUgVGhlYmFucyBoYXZlIGNvbWUgaW50byBvdXIgY291bnRyeSwgYW5kIGhhdmUgY3V0IGRvd24gdHJlZXMsIGFuZCBidXJuZWQgZG93biBob3VzZXMsIGFuZCBzZWl6ZWQgcHJvcGVydHkgYW5kIGNhdHRsZS4gSWYsIHRoZXJlZm9yZSwgeW91IGRvIG5vdCBhaWQgdXMsIHdobyBhcmUgc28gbWFuaWZlc3RseSB3cm9uZ2VkLCB3aWxsIHlvdSBub3Qgc3VyZWx5IGJlIGFjdGluZyBpbiB2aW9sYXRpb24gb2YgeW91ciBvYXRocz8gVGhleSB3ZXJlIHRoZSBzYW1lIG9hdGhzLCB5b3UgcmVtZW1iZXIsIHRoYXQgeW91IHlvdXJzZWx2ZXMgdG9vayBjYXJlIHRvPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzAgQi5DLjwvZGF0ZT48L25vdGU+IGhhdmUgYWxsIG9mIHVzIHN3ZWFyIHRvIGFsbCBvZiB5b3Uu4oCdIFRoZXJldXBvbiB0aGUgQXRoZW5pYW5zIHNob3V0ZWQgdGhlaXIgYXBwcm92YWwsIHNheWluZyB0aGF0IENsZWl0ZWxlcyBoYWQgc3Bva2VuIHRvIHRoZSBwb2ludCBhbmQgZmFpcmx5Lgo8ZGF0ZSBhdXRobmFtZT0iLTM3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM3MCI+MzcwIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['6.5.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBQcm9jbGVzLCBhIFBobGlhc2lhbiwgYXJvc2UgYWZ0ZXIgQ2xlaXRlbGVzIGFuZCBzYWlkOiDigJxNZW4gb2YgQXRoZW5zLCBpdCBpcyBjbGVhciB0byBldmVyeW9uZSwgSSBpbWFnaW5lLCB0aGF0IHlvdSBhcmUgdGhlIGZpcnN0IGFnYWluc3Qgd2hvbSB0aGUgVGhlYmFucyB3b3VsZCBtYXJjaCBpZiB0aGUgTGFjZWRhZW1vbmlhbnMgd2VyZSBnb3Qgb3V0IG9mIHRoZSB3YXk7IGZvciB0aGV5IHRoaW5rIHRoYXQgeW91IGFyZSB0aGUgb25seSBwZW9wbGUgaW4gR3JlZWNlIHdobyB3b3VsZCBzdGFuZCBpbiB0aGUgd2F5IG9mIHRoZWlyIGJlY29taW5nIHJ1bGVycyBvZiB0aGUgR3JlZWtzLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz5JZiB0aGlzIGlzIHNvLCBJLCBmb3IgbXkgcGFydCwgYmVsaWV2ZSB0aGF0IGlmIHlvdSB1bmRlcnRha2UgYSBjYW1wYWlnbiwgeW91IHdvdWxkIG5vdCBiZSBnaXZpbmcgYWlkIHRvIHRoZSBMYWNlZGFlbW9uaWFucyBzbyBtdWNoIGFzIHRvIHlvdXIgb3duIHNlbHZlcy4gRm9yIHRvIGhhdmUgdGhlIFRoZWJhbnMsIHdobyBhcmUgdW5mcmllbmRseSB0byB5b3UgYW5kIGR3ZWxsIG9uIHlvdXIgYm9yZGVycywgYmVjb21lIGxlYWRlcnMgb2YgdGhlIEdyZWVrcywgd291bGQgcHJvdmUgbXVjaCBtb3JlIGdyaWV2b3VzIHRvIHlvdSwgSSB0aGluaywgdGhhbiB3aGVuIHlvdSBoYWQgeW91ciBhbnRhZ29uaXN0cyBmYXIgYXdheS4gRnVydGhlcm1vcmUsIHlvdSB3b3VsZCBhaWQgeW91cnNlbHZlcyB3aXRoIG1vcmUgcHJvZml0IGlmIHlvdSBzaG91bGQgZG8gc28gd2hpbGUgdGhlcmUgYXJlIHN0aWxsIHBlb3BsZSB3aG8gd291bGQgZmlnaHQgb24geW91ciBzaWRlLCB0aGFuIGlmIHRoZXkgc2hvdWxkIHBlcmlzaCBmaXJzdCBhbmQgeW91IHNob3VsZCB0aGVuIGJlIGNvbXBlbGxlZCB0byBlbnRlciBieSB5b3Vyc2VsdmVzIHVwb24gYSBkZWNpc2l2ZSBzdHJ1Z2dsZSB3aXRoIHRoZSBUaGViYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IGlmIGFueSBhcmUgZmVhcmZ1bCB0aGF0IGluIGNhc2UgdGhlIExhY2VkYWVtb25pYW5zIGVzY2FwZSB0aGlzIHRpbWUsIHRoZXkgbWF5IGFnYWluIGluIHRoZSBmdXR1cmUgY2F1c2UgeW91IHRyb3VibGUsIHRha2UgdGhvdWdodCBvZiB0aGlzLCB0aGF0IGl0IGlzIG5vdCB0aG9zZSB3aG9tIG9uZSBiZW5lZml0cywgYnV0IHRob3NlIHdob20gb25lIGluanVyZXMsIG9mIHdob20gb25lIGhhcyB0byBmZWFyIHRoYXQgdGhleSBtYXkgc29tZSBkYXkgYXR0YWluIGdyZWF0IHBvd2VyLiBBbmQgeW91IHNob3VsZCBiZWFyIGluIG1pbmQgdGhpcyBsaWtld2lzZSwgdGhhdCBpdCBpcyBtZWV0IGJvdGggZm9yIGluZGl2aWR1YWxzIGFuZCBmb3Igc3RhdGVzIHRvIGFjcXVpcmUgYSBnb29kbHkgc3RvcmUgaW4gdGhlIGRheXMgd2hlbiB0aGV5IGFyZSBzdHJvbmdlc3QsIGluIG9yZGVyIHRoYXQsIGlmIHNvbWUgZGF5IHRoZXkgYmVjb21lIHBvd2VybGVzcywgdGhleSBtYXkgZHJhdyB1cG9uIHRoZWlyIHByZXZpb3VzIGxhYm91cnMgZm9yIHN1Y2NvdXIuCjwvdHJhbnNsYXRpb24+"
translation['6.5.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0byB5b3U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvbm90ZT4gaGFzIG5vdyBiZWVuIG9mZmVyZWQgYnkgc29tZSBnb2QgYW4gb3Bwb3J0dW5pdHksIGluIGNhc2UgeW91IGFpZCB0aGUgTGFjZWRhZW1vbmlhbnMgaW4gdGhlaXIgbmVlZCwgb2YgYWNxdWlyaW5nIHRoZW0gZm9yIGFsbCB0aW1lIGFzIGZyaWVuZHMgd2hvIHdpbGwgcGxlYWQgbm8gZXhjdXNlcy4gRm9yIGl0IGlzIG5vdCBpbiB0aGUgcHJlc2VuY2Ugb2Ygb25seSBhIGZldyB3aXRuZXNzZXMsIGFzIGl0IHNlZW1zIHRvIG1lLCB0aGF0IHRoZXkgd291bGQgbm93IHJlY2VpdmUgYmVuZWZpdCBhdCB5b3VyIGhhbmRzLCBidXQgdGhlIGdvZHMgd2lsbCBrbm93IG9mIHRoaXMsIHdobyBzZWUgYWxsIHRoaW5ncyBib3RoIG5vdyBhbmQgZm9yIGV2ZXIsIGFuZCBib3RoIHlvdXIgYWxsaWVzIGFuZCB5b3VyIGVuZW1pZXMga25vdyBhbHNvIHdoYXQgaXMgdGFraW5nIHBsYWNlLCBhbmQgdGhlIHdob2xlIHdvcmxkIG9mIEdyZWVrcyBhbmQgYmFyYmFyaWFucyBiZXNpZGVzLiBGb3IgdG8gbm9uZSBvZiB0aGVtIGFsbCBpcyBpdCBhIG1hdHRlciBvZiBpbmRpZmZlcmVuY2UuCjxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzAgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.5.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVyZWZvcmUsIGlmIHRoZSBMYWNlZGFlbW9uaWFucyBzaG91bGQgc2hvdyB0aGVtc2VsdmVzIGJhc2UgaW4gdGhlaXIgZGVhbGluZ3Mgd2l0aCB5b3UsIHdobyB3b3VsZCBldmVyIGFnYWluIGJlY29tZSBkZXZvdGVkIHRvIHRoZW0/IEJ1dCBpdCBpcyBmYWlyIHRvIGV4cGVjdCB0aGF0IHRoZXkgd2lsbCBwcm92ZSBnb29kIHJhdGhlciB0aGFuIGJhc2UgbWVuLCBmb3IgaWYgYW55IHBlb3BsZSBpbiB0aGUgd29ybGQgc2VlbSBjb25zaXN0ZW50bHkgdG8gaGF2ZSBzdHJpdmVuIGZvciBjb21tZW5kYXRpb24gYW5kIHRvIGhhdmUgYWJzdGFpbmVkIGZyb20gZGVlZHMgb2Ygc2hhbWUsIGl0IGlzIHRydWx5IHRoZXkuIEJlc2lkZXMgYWxsIHRoaXMsIHRha2UgdGhvdWdodCBvZiB0aGUgZm9sbG93aW5nIGNvbnNpZGVyYXRpb25zIGxpa2V3aXNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['6.5.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz5JZiBldmVyIGFnYWluIGRhbmdlciBzaG91bGQgY29tZSB0byBHcmVlY2UgZnJvbSBiYXJiYXJpYW5zLCB3aG9tIHdvdWxkIHlvdSB0cnVzdCBtb3JlIHRoYW4gdGhlIExhY2VkYWVtb25pYW5zPyBXaG9tIHdvdWxkIHlvdSBtb3JlIGdsYWRseSBtYWtlIHlvdXIgY29tcmFkZXMgaW4gdGhlIHJhbmtzIHRoYW4gdGhlc2UsIHdob3NlIGNvdW50cnltZW4sIHBvc3RlZCBhdCBUaGVybW9weWxhZSwgY2hvc2UgZXZlcnkgbWFuIHRvIGRpZSBmaWdodGluZyByYXRoZXIgdGhhbiB0byBsaXZlIGFuZCBhZG1pdCB0aGUgYmFyYmFyaWFuIHRvIEdyZWVjZT8gVGhlcmVmb3JlLCBib3RoIGJlY2F1c2UgdGhleSBwcm92ZWQgdGhlbXNlbHZlcyBicmF2ZSBtZW4gYWxvbmcgd2l0aCB5b3UsIGFuZCBiZWNhdXNlIHRoZXJlIGlzIGhvcGUgdGhhdCB0aGV5IHdpbGwgc28gcHJvdmUgdGhlbXNlbHZlcyBhZ2FpbiwgaXMgaXQgbm90IHN1cmVseSByaWdodCB0aGF0IHlvdSBhbmQgd2UgYWxpa2Ugc2hvdWxkIHNob3cgYWxsIGdvb2Qtd2lsbCB0b3dhcmQgdGhlbT8KPC90cmFuc2xhdGlvbj4="
translation['6.5.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSXQgaXMgYWxzbyB3b3J0aCB3aGlsZSB0byBzaG93IHRoZSBMYWNlZGFlbW9uaWFucyBnb29kLXdpbGwgZm9yIHRoZSBzYWtlIG9mIHRoZSBhbGxpZXMgd2hvIGFyZSBwcmVzZW50IHdpdGggdGhlbS4gRm9yIGJlIHdlbGwgYXNzdXJlZCB0aGF0IHRob3NlIHdobyByZW1haW4gZmFpdGhmdWwgdG8gdGhlbSBpbiB0aGVpciBtaXNmb3J0dW5lcyBhcmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlIHZlcnkgbWVuIHdobyB3b3VsZCBiZSBhc2hhbWVkIGlmIHRoZXkgZGlkIG5vdCBtYWtlIGR1ZSByZXF1aXRhbCB0byB5b3UuIEFuZCBpZiB3ZSB3aG8gYXJlIHdpbGxpbmcgdG8gc2hhcmUgdGhlIHBlcmlsIHdpdGggdGhlbSBzZWVtIHRvIGJlIHNtYWxsIHN0YXRlcywgcmVmbGVjdCB0aGF0IGlmIHlvdXIgc3RhdGUgaXMgYWRkZWQgdG8gb3VyIG51bWJlciwgd2Ugd2hvIGFpZCB0aGVtIHNoYWxsIG5vIGxvbmdlciBiZSBzbWFsbCBzdGF0ZXMuCjxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzAgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.5.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz5JbiBmb3JtZXIgZGF5cywgbWVuIG9mIEF0aGVucywgSSB1c2VkIGZyb20gaGVhcnNheSB0byBhZG1pcmUgdGhpcyBzdGF0ZSBvZiB5b3VycywgZm9yIEkgaGVhcmQgdGhhdCBhbGwgd2hvIHdlcmUgd3JvbmdlZCBhbmQgYWxsIHdobyB3ZXJlIGZlYXJmdWwgZmxlZCBoaXRoZXIgZm9yIHJlZnVnZSwgYW5kIGhlcmUgZm91bmQgYXNzaXN0YW5jZTsgbm93IEkgbm8gbG9uZ2VyIGhlYXIsIGJ1dCB3aXRoIG15IG93biBleWVzIGF0IHRoaXMgbW9tZW50IHNlZSB0aGUgTGFjZWRhZW1vbmlhbnMsIHRob3NlIG1vc3QgZmFtb3VzIG1lbiwgYW5kIHRoZWlyIG1vc3QgbG95YWwgZnJpZW5kcyBhcHBlYXJpbmcgaW4geW91ciBzdGF0ZSBhbmQgaW4gdGhlaXIgdHVybiByZXF1ZXN0aW5nIHlvdSB0byBhc3Npc3QgdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['6.5.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz5JIHNlZSBhbHNvIHRoZSBUaGViYW5zLCB3aG8gdGhlbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gU2VlIDM1IGFib3ZlLCBhbmQgY3AuIG5vdGUgb24gaWlpLiAxMy48L25vdGU+IGRpZCBub3Qgc3VjY2VlZCBpbiBwZXJzdWFkaW5nIHRoZSBMYWNlZGFlbW9uaWFucyB0byBlbnNsYXZlIHlvdSwgbm93IHJlcXVlc3RpbmcgeW91IHRvIGFsbG93IHRob3NlIHdobyBzYXZlZCB5b3UgdG8gcGVyaXNoLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJdCBpcyB0cnVseSBhIG5vYmxlIGRlZWQgdGhhdCBpcyB0b2xkIG9mIHlvdXIgYW5jZXN0b3JzLCB3aGVuIHRoZXkgZGlkIG5vdCBzdWZmZXIgdGhvc2UgQXJnaXZlcyB3aG8gZGllZCBhdCB0aGUgQ2FkbWVhIHRvIGdvIHVuYnVyaWVkOzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gQWZ0ZXIgdGhlIGRlZmVhdCBvZiB0aGUgbGVnZW5kYXJ5IGV4cGVkaXRpb24gb2YgdGhlIOKAnFNldmVuIGFnYWluc3QgVGhlYmVz4oCdIGl0IHdhcyBvbmx5IHRoZSBpbnRlcnZlbnRpb24gb2YgdGhlIEF0aGVuaWFucyB3aGljaCBjb21wZWxsZWQgdGhlIFRoZWJhbnMgdG8gcGVybWl0IHRoZSBidXJpYWwgb2YgdGhlIGVuZW15J3MgZGVhZC48L25vdGU+IGJ1dCB5b3Ugd291bGQgYWNoaWV2ZSBhIGZhciBub2JsZXIgZGVlZCBpZiB5b3UgZGlkIG5vdCBzdWZmZXIgdGhvc2UgTGFjZWRhZW1vbmlhbnMgd2hvIHN0aWxsIGxpdmUgZWl0aGVyIHRvIGluY3VyIGluc3VsdCBvciB0byBwZXJpc2guCjwvdHJhbnNsYXRpb24+"
translation['6.5.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hpbGUgdGhhdCBvdGhlciBkZWVkIHdhcyBhbHNvIG5vYmxlLCB3aGVuIHlvdSBjaGVja2VkIHRoZSBpbnNvbGVuY2Ugb2YgRXVyeXN0aGV1cyBhbmQgcHJlc2VydmVkIHRoZSBzb25zIG9mIEhlcmFjbGVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gVGhlIHNvbnMgb2YgSGVyYWNsZXMsIGRyaXZlbiBmcm9tIFBlbG9wb25uZXN1cyBieSBFdXJ5c3RoZXVzLCBmb3VuZCBwcm90ZWN0aW9uIGFuZCBhaWQgYXQgQXRoZW5zLjwvbm90ZT4gd291bGQgaXQgbm90IHN1cmVseSBiZSBhbiBldmVuIG5vYmxlciBvbmUgaWYgeW91IHNhdmVkIGZyb20gcGVyaXNoaW5nLCBub3QgbWVyZWx5IHRoZSBmb3VuZGVycywgYnV0IHRoZSB3aG9sZSBzdGF0ZSBhcyB3ZWxsPyBBbmQgbm9ibGVzdCBvZiBhbGwgZGVlZHMgaWYsIGFmdGVyIHRoZSBMYWNlZGFlbW9uaWFucyBzYXZlZCB5b3UgdGhlbiBieSBhPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzAgQi5DLjwvZGF0ZT48L25vdGU+IHZvdGUsIHZvaWQgb2YgZGFuZ2VyLCB5b3Ugc2hhbGwgYWlkIHRoZW0gbm93IHdpdGggYXJtcyBhbmQgYXQgdGhlIHJpc2sgb2YgeW91ciBsaXZlcy4KPGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['6.5.48'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0ic2VjdGlvbiIgLz5BZ2Fpbiwgd2hlbiBldmVuIHdlLCB3aG8gYnkgd29yZCB1cmdlIHlvdSB0byBhaWQgYnJhdmUgbWVuLCBhcmUgcHJvdWQgb2YgZG9pbmcgc28sIGl0IHdvdWxkIG1hbmlmZXN0bHkgYmUgZ2VuZXJvdXMgb2YgeW91LCB3aG8gYXJlIGFibGUgdG8gYWlkIGJ5IGFjdCwgaWYsIGFmdGVyIGJlaW5nIG1hbnkgdGltZXMgYm90aCBmcmllbmRzIGFuZCBlbmVtaWVzIG9mIHRoZSBMYWNlZGFlbW9uaWFucywgeW91IHNob3VsZCByZWNhbGwsIG5vdCB0aGUgaGFybSB5b3UgaGF2ZSBzdWZmZXJlZCBhdCB0aGVpciBoYW5kcywgYnV0IHJhdGhlciB0aGUgZmF2b3VycyB3aGljaCB5b3UgaGF2ZSwgcmVjZWl2ZWQsIGFuZCBzaG91bGQgcmVuZGVyIHRoZW0gcmVxdWl0YWwsIG5vdCBpbiBiZWhhbGYgb2YgeW91cnNlbHZlcyBhbG9uZSwgYnV0IGFsc28gaW4gYmVoYWxmIG9mIGFsbCBHcmVlY2UsIGJlY2F1c2UgaW4gaGVyIGJlaGFsZiB0aGV5IHByb3ZlZCB0aGVtc2VsdmVzIGJyYXZlIG1lbi7igJ0KPC90cmFuc2xhdGlvbj4="
translation['6.5.49'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyB0aGUgQXRoZW5pYW5zIGRlbGliZXJhdGVkLCBhbmQgdGhleSB3b3VsZCBub3QgZW5kdXJlIHRvIGxpc3RlbiB0byB0aG9zZSB3aG8gc3Bva2Ugb24gdGhlIG90aGVyIHNpZGUsIGJ1dCB2b3RlZCB0byBnbyB0byB0aGUgYWlkIG9mIHRoZSBMYWNlZGFlbW9uaWFucyBpbiBmdWxsIGZvcmNlLCBhbmQgY2hvc2UgSXBoaWNyYXRlcyBhcyBnZW5lcmFsLiBBbmQgd2hlbiBoaXMgc2FjcmlmaWNlcyBoYWQgcHJvdmVkIGZhdm91cmFibGUgYW5kIGhlIGhhZCBpc3N1ZWQgb3JkZXJzIHRvIGhpcyBtZW4gdG8gZGluZSBpbiB0aGUgQWNhZGVteSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIElJLiBpaS4gOC48L25vdGU+IG1hbnksIGl0IGlzIHNhaWQsIHdlbnQgdGhpdGhlciBhaGVhZCBvZiBJcGhpY3JhdGVzIGhpbXNlbGYuIEFmdGVyIHRoaXMgSXBoaWNyYXRlcyBsZWQgdGhlIHdheSBhbmQgdGhleSBmb2xsb3dlZCwgYmVsaWV2aW5nIHRoYXQgaGUgd291bGQgbGVhZCB0aGVtIHRvIHNvbWUgbm9ibGUgYWNoaWV2ZW1lbnQuIEFuZCB3aGVuLCBhZnRlciBhcnJpdmluZyBpbiBDb3JpbnRoLCBoZSBkZWxheWVkIHRoZXJlIGZvciBzb21lIGRheXMsIHRoZXkgYXQgb25jZSBiZWdhbiB0byBjZW5zdXJlIGhpbSwgZm9yIHRoZSBmaXJzdCB0aW1lLCBmb3IgdGhpcyBkZWxheTsgdGhlbiB3aGVuIGhlIGF0IGxlbmd0aCBtYXJjaGVkIHRoZW0gZm9ydGgsIHRoZXkgZWFnZXJseSBmb2xsb3dlZCB3aGVyZXZlciBoZSBsZWQgdGhlIHdheSwgYW5kIGVhZ2VybHkgYXR0YWNrZWQgYW55IHN0cm9uZ2hvbGQgYWdhaW5zdCB3aGljaCBoZSBicm91Z2h0IHRoZW0uCjwvdHJhbnNsYXRpb24+"
translation['6.5.50'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIGVuZW15IGluIExhY2VkYWVtb24sIG1hbnkgQXJjYWRpYW5zLCBBcmdpdmVzLCBhbmQgRWxlYW5zIGhhZCBhbHJlYWR5IGRlcGFydGVkLCBpbmFzbXVjaCBhcyB0aGV5IGxpdmVkIGp1c3QgYWNyb3NzIHRoZSBib3JkZXIsIHNvbWUgb2YgdGhlbSBsZWFkaW5nIGFuZCBvdGhlcnMgY2Fycnlpbmcgd2hhdCB0aGV5IGhhZCB0YWtlbiBhcyBwbHVuZGVyLiBPbiB0aGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvbm90ZT4gb3RoZXIgaGFuZCwgdGhlIFRoZWJhbnMgYW5kIHRoZSByZXN0IHdlcmUgZGVzaXJvdXMgb2YgZGVwYXJ0aW5nIGZyb20gdGhlIGNvdW50cnksIHBhcnRseSBmb3IgdGhlIHZlcnkgcmVhc29uIHRoYXQgdGhleSBzYXcgdGhlaXIgYXJteSBncm93aW5nIGRhaWx5IHNtYWxsZXIsIGFuZCBwYXJ0bHkgYmVjYXVzZSBwcm92aXNpb25zIHdlcmUgc2NhbnRpZXIsIHRoZSBzdXBwbHkgaGF2aW5nIGJlZW4gaW4gcGFydCB1c2VkIHVwIG9yIHN0b2xlbiBhd2F5LCBpbiBwYXJ0IHdhc3RlZCBvciBidXJuZWQgdXA7IGJlc2lkZXMsIGl0IHdhcyB3aW50ZXIsIHNvIHRoYXQgYnkgdGhpcyB0aW1lIGFsbCBhbGlrZSB3YW50ZWQgdG8gd2l0aGRyYXcuCjxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzAgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['6.5.51'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBhY2NvcmRpbmdseSwgdGhleSBwcm9jZWVkZWQgdG8gcmV0aXJlIGZyb20gTGFjZWRhZW1vbiwgdGhlbiwgb2YgY291cnNlLCBJcGhpY3JhdGVzIGxpa2V3aXNlIHByb2NlZWRlZCB0byBsZWFkIGJhY2sgdGhlIEF0aGVuaWFucyBmcm9tIEFyY2FkaWEgdG8gQ29yaW50aC4gTm93IEkgaGF2ZSBubyBmYXVsdCB0byBmaW5kIHdpdGggYW55IGdvb2QgZ2VuZXJhbHNoaXAgaGUgbWF5IGhhdmUgc2hvd24gb24gYW55IG90aGVyIG9jY2FzaW9uOyBidXQgYXMgcmVnYXJkcyBhbGwgaGlzIGFjdGlvbnMgYXQgdGhhdCB0aW1lLCBJIGZpbmQgdGhlbSB0byBoYXZlIGJlZW4gZWl0aGVyIGZ1dGlsZSBvciBpbmV4cGVkaWVudC4gRm9yIHdoaWxlIGhlIHVuZGVydG9vayB0byBrZWVwIGd1YXJkIGF0IE9uZXVtIHNvIHRoYXQgdGhlIFRoZWJhbnMgc2hvdWxkIG5vdCBiZSBhYmxlIHRvIGdldCBiYWNrIGhvbWUsIGhlIGxlZnQgdW5ndWFyZGVkIHRoZSBiZXN0IHBhc3MsIHdoaWNoIGxlZCBwYXN0IENlbmNocmVhZS4KPC90cmFuc2xhdGlvbj4="
translation['6.5.52'] = ""
translation['7.1.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbiB0aGUgZm9sbG93aW5nIHllYXIgYW1iYXNzYWRvcnMgb2YgdGhlIExhY2VkYWVtb25pYW5zPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY5Ij4zNjkgQi5DLjwvZGF0ZT48L25vdGU+IGFuZCB0aGVpciBhbGxpZXMsIHdpdGggZnVsbCBwb3dlcnMsIGNhbWUgdG8gQXRoZW5zIHRvIHRha2UgY291bnNlbCBhcyB0byB3aGF0IHNob3VsZCBiZSB0aGUgdGVybXMgb2YgdGhlIGFsbGlhbmNlIGJldHdlZW4gdGhlIExhY2VkYWVtb25pYW5zIGFuZCB0aGUgQXRoZW5pYW5zLiBBbmQgd2hpbGUgbWFueSBmb3JlaWduZXJzIGFuZCBtYW55IEF0aGVuaWFucyBzYWlkIHRoYXQgdGhlIGFsbGlhbmNlIG91Z2h0IHRvIGJlIG9uIHRlcm1zIG9mIGZ1bGwgZXF1YWxpdHksIFByb2NsZXMgdGhlIFBobGlhc2lhbiBtYWRlIHRoZSBmb2xsb3dpbmcgc3BlZWNoOgo8ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.1.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxNZW4gb2YgQXRoZW5zLCBzaW5jZSB5b3UgaGF2ZSBkZWNpZGVkIHRoYXQgaXQgaXMgYSBnb29kIHRoaW5nIHRvIG1ha2UgdGhlIExhY2VkYWVtb25pYW5zIHlvdXIgZnJpZW5kcywgaXQgc2VlbXMgdG8gbWUgdGhhdCB5b3Ugb3VnaHQgdG8gY29uc2lkZXIgdGhpcyBwb2ludCwgaG93IHRoZSBmcmllbmRzaGlwIGlzIHRvIGVuZHVyZSBmb3IgdGhlIGxvbmdlc3QgcG9zc2libGUgdGltZS4gTm93IGl0IGlzIG9ubHkgYnkgbWFraW5nIHRoZSBjb21wYWN0IG9uIHN1Y2ggdGVybXMgYXMgd2lsbCBiZSBtb3N0IGFkdmFudGFnZW91cyB0byBlYWNoIHBhcnR5IHRoYXQgd2UgY2FuIGV4cGVjdCBpdCB0byBiZSwgaW4gYWxsIHByb2JhYmlsaXR5LCBtb3N0IGVuZHVyaW5nLiBUaGUgb3RoZXIgcG9pbnRzLCB0aGVuLCBoYXZlIGJlZW4gcHJldHR5IHdlbGwgYWdyZWVkIHVwb24sIGJ1dCB0aGUgcXVlc3Rpb24gb2YgdGhlIGxlYWRlcnNoaXAgaXMgYXQgcHJlc2VudCB1bmRlciBkaXNjdXNzaW9uLiBOb3cgaXQgaGFzIGJlZW4gcHJvcG9zZWQgYnkgeW91ciBTZW5hdGUgdGhhdCB0aGUgbGVhZGVyc2hpcCBieSBzZWEgc2hhbGwgYmVsb25nIHRvIHlvdSwgYW5kIHRoZSBsZWFkZXJzaGlwIGJ5IGxhbmQgdG8gdGhlIExhY2VkYWVtb25pYW5zLiBBbmQgSSwgdG9vLCB0aGluayB0aGF0IHRoaXMgZGlzdGluY3Rpb24gaXMgYmFzZWQsIG5vdCBzbyBtdWNoIHVwb24gaHVtYW4ganVkZ21lbnQgYXMgdXBvbiBkaXZpbmUgYXJyYW5nZW1lbnQgYW5kIG9yZGVyaW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkluIHRoZSBmaXJzdCBwbGFjZSwgeW91IGhhdmUgYSBwb3NpdGlvbiBtb3N0IGV4Y2VsbGVudGx5IGFkYXB0ZWQgYnkgbmF0dXJlIGZvciBzdXByZW1hY3kgYnkgc2VhLiBGb3IgbW9zdCBvZiB0aGUgc3RhdGVzIHdoaWNoIGFyZSBkZXBlbmRlbnQgdXBvbiB0aGUgc2VhIGFyZSBzaXR1YXRlZCByb3VuZCBhYm91dCB5b3VyIHN0YXRlLCBhbmQgdGhleSBhcmUgYWxsIHdlYWtlciB0aGFuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY5Ij4zNjkgQi5DLjwvZGF0ZT48L25vdGU+IHlvdXJzLiBJbiBhZGRpdGlvbiB0byB0aGlzLCB5b3UgaGF2ZSBoYXJib3Vycywgd2l0aG91dCB3aGljaCBpdCBpcyBub3QgcG9zc2libGUgdG8gZW5qb3kgbmF2YWwgcG93ZXIuIEZ1cnRoZXJtb3JlLCB5b3UgYWxyZWFkeSBwb3NzZXNzIG1hbnkgdHJpcmVtZXMsIGFuZCBpdCBpcyBhIHRyYWRpdGlvbmFsIHBvbGljeSBvZiB5b3VycyB0byBrZWVwIGFkZGluZyBzaGlwcy4KPGRhdGUgYXV0aG5hbWU9Ii0zNjkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjkiPjM2OSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.1.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPllvdSBsaWtld2lzZSBwb3NzZXNzIGFzIHBlY3VsaWFybHkgeW91ciBvd24gYWxsIHRoZSBhcnRzIGFuZCBjcmFmdHMgd2hpY2ggaGF2ZSB0byBkbyB3aXRoIHNoaXBzLiBBZ2FpbiwgeW91IGFyZSBmYXIgc3VwZXJpb3IgdG8gb3RoZXIgbWVuIGluIGV4cGVyaWVuY2Ugb2YgbmF1dGljYWwgYWZmYWlycywgZm9yIG1vc3Qgb2YgeW91IGdldCB5b3VyIGxpdmVsaWhvb2QgZnJvbSB0aGUgc2VhOyBoZW5jZSwgd2hpbGUgYXR0ZW5kaW5nIHRvIHlvdXIgcHJpdmF0ZSBjb25jZXJucywgeW91IGFyZSBhbHNvIGF0IHRoZSBzYW1lIHRpbWUgZ2FpbmluZyBleHBlcmllbmNlIGZvciBlbmNvdW50ZXJzIGJ5IHNlYS4gSGVyZSBpcyBhbm90aGVyIHBvaW50IGFsc286IHRoZXJlIGlzIG5vIHBvcnQgZnJvbSB3aGljaCBtb3JlIHRyaXJlbWVzIGNhbiBzYWlsIGZvcnRoIGF0IG9uZSB0aW1lIHRoYW4gZnJvbSB5b3VyIGNpdHkuIEFuZCB0aGlzIGlzIGEgbWF0dGVyIG9mIG5vIHNsaWdodCBpbXBvcnRhbmNlIHdpdGggcmVmZXJlbmNlIHRvIGxlYWRlcnNoaXAsIGZvciBhbGwgbWVuIGxvdmUgYmVzdCB0byBqb2luIGZvcmNlcyB3aXRoIHRoZSBwb3dlciB3aGljaCBpcyBmaXJzdCB0byBzaG93IGl0c2VsZiBzdHJvbmcuCjwvdHJhbnNsYXRpb24+"
translation['7.1.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkZ1cnRoZXJtb3JlLCBpdCBoYXMgYWxzbyBiZWVuIGdyYW50ZWQgeW91IGJ5IHRoZSBnb2RzIHRvIGJlIHN1Y2Nlc3NmdWwgaW4gdGhpcyBwdXJzdWl0LiBGb3Igd2hpbGUgeW91IGhhdmUgZW5nYWdlZCBpbiB2ZXJ5IG1hbnkgYW5kIHZlcnkgZ3JlYXQgY29tYmF0cyBieSBzZWEsIHlvdSBoYXZlIG1ldCB3aXRoIGFuIGV4Y2VlZGluZ2x5IHNtYWxsIG51bWJlciBvZiBtaXNmb3J0dW5lcyBhbmQgaGF2ZSBhY2hpZXZlZCBhbiBleGNlZWRpbmdseSBsYXJnZSBudW1iZXIgb2Ygc3VjY2Vzc2VzLiBUaGVyZWZvcmUgaXQgaXMgbGlrZWx5IHRoYXQgdGhlIGFsbGllcyB3b3VsZCBsaWtlIGJlc3QgdG8gc2hhcmUgaW4gc3VjaCBwZXJpbHMgaWYgdGhleSB3ZXJlIHVuZGVyIHlvdXIgbGVhZGVyc2hpcC4KPC90cmFuc2xhdGlvbj4="
translation['7.1.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGF0IHRoaXMgZGV2b3Rpb24gdG8gdGhlIHNlYSBpcyBpbmRlZWQgYm90aCBuZWNlc3NhcnkgYW5kIHByb3BlciBmb3IgeW91LCB5b3UgbXVzdCBjb25jbHVkZSBmcm9tIHRoZSBmb2xsb3dpbmcgZmFjdDogdGhlIExhY2VkYWVtb25pYW5zIG9uY2UgbWFkZSB3YXIgdXBvbiB5b3UgZm9yIG1hbnkgeWVhcnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBUaGUgcmVmZXJlbmNlIGlzIHRvIHRoZSBQZWxvcG9ubmVzaWFuIFdhciwgd2hpY2ggd2FzIHRlcm1pbmF0ZWQgYnkgdGhlIGNhcHR1cmUgb2YgdGhlIEF0aGVuaWFuIGZsZWV0IGJ5IHRoZSBMYWNlZGFlbW9uaWFucyBhdCBBZWdvc3BvdGFtaSAoPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SGVsbC48L3RpdGxlPiBJSS4gaS4gMjAtMzIpLjwvbm90ZT4gYW5kIHRob3VnaCBtYXN0ZXJzIG9mIHlvdXIgbGFuZCBjb3VsZCBtYWtlIG5vIHByb2dyZXNzIHRvd2FyZCBkZXN0cm95aW5nIHlvdS4gQnV0IHdoZW4gYXQgbGVuZ3RoIHRoZSBkZWl0eSBncmFudGVkIHRoZW0gdG8gd2luIHRoZSBtYXN0ZXJ5IGJ5IHNlYSwgc3RyYWlnaHR3YXkgeW91IGZlbGwgY29tcGxldGVseSB1bmRlciB0aGVpciBwb3dlci48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5IZWxsLjwvdGl0bGU+IElJLiBpLiAyMC0zMikuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY5Ij4zNjkgQi5DLjwvZGF0ZT48L25vdGU+IEluIHRoZXNlIGNpcmN1bXN0YW5jZXMsIHRoZXJlZm9yZSwgaXQgaXMgcGxhaW4gdG8gYmUgc2VlbiB0aGF0IGFsbCB5b3VyIHNhZmV0eSBkZXBlbmRzIHVwb24gdGhlIHNlYS4KPGRhdGUgYXV0aG5hbWU9Ii0zNjkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjkiPjM2OSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.1.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPlN1Y2gsIHRoZW4sIGJlaW5nIHRoZSBzaXR1YXRpb24gb3JkYWluZWQgYnkgbmF0dXJlLCBob3cgY291bGQgeW91IGJlIGNvbnRlbnQgdG8gYWxsb3cgdGhlIExhY2VkYWVtb25pYW5zIHRvIGJlIGxlYWRlcnMgYnkgc2VhLCB3aGVuLCBpbiB0aGUgZmlyc3QgcGxhY2UsIHRoZXkgdGhlbXNlbHZlcyBhZG1pdCB0aGF0IHRoZXkgYXJlIGxlc3MgZXhwZXJpZW5jZWQgdGhhbiB5b3UgYXJlIGluIHRoaXMgd29yaywgYW5kIHdoZW4sIGluIHRoZSBzZWNvbmQgcGxhY2UsIHRoZXkgZG8gbm90IHJpc2sgYXMgbXVjaCBhcyB5b3UgZG8gaW4gY29udGVzdHMgYnkgc2VhLCBidXQgbWVyZWx5IHRoZSBwZW9wbGUgb24gYm9hcmQgdGhlIHRyaXJlbWVzLCB3aGVyZWFzIHlvdSByaXNrIHdpdmVzIGFuZCBjaGlsZHJlbiBhbmQgdGhlIGVudGlyZSBzdGF0ZS4KPC90cmFuc2xhdGlvbj4="
translation['7.1.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGlzIGlzIHRoZSBzaXR1YXRpb24gb24geW91ciBzaWRlOyBjb25zaWRlciBub3cgdGhhdCBvZiB0aGUgTGFjZWRhZW1vbmlhbnMuIEZpcnN0bHksIHRoZXkgZHdlbGwgaW4gdGhlIGludGVyaW9yOyBoZW5jZSwgc28gbG9uZyBhcyB0aGV5IGFyZSBtYXN0ZXJzIG9mIHRoZSBsYW5kLCB0aGV5IGNhbiBsZWFkIGEgY29tZm9ydGFibGUgZXhpc3RlbmNlIGV2ZW4gaWYgdGhleSBhcmUgc2h1dCBvZmYgZnJvbSB0aGUgc2VhLiBUaGVyZWZvcmUsIHJlYWxpemluZyB0aGlzIGZhY3QgdGhlbXNlbHZlcywgdGhleSBjYXJyeSBvbiB0aGVpciB0cmFpbmluZyBmcm9tIHRoZWlyIHZlcnkgYm95aG9vZCB3aXRoIGEgdmlldyB0byB3YXIgYnkgbGFuZC4gRnVydGhlcm1vcmUsIGluIHRoYXQgd2hpY2ggaXMgb2YgdGhlIGdyZWF0ZXN0IGltcG9ydGFuY2UsIG9iZWRpZW5jZSB0byB0aGVpciBjb21tYW5kZXJzLCB0aGV5IGFyZSBiZXN0IGJ5IGxhbmQsIGFzIHlvdSBhcmUgYnkgc2VhLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB0aGV5IG9uIHRoZWlyIHNpZGUgY2FuIHNldCBmb3J0aCBieSBsYW5kLCBhcyB5b3UgY2FuIHdpdGggYSBmbGVldCwgaW4gZ3JlYXRlc3QgbnVtYmVycyBhbmQgd2l0aCBncmVhdGVzdCBzcGVlZDsgdGhlcmVmb3JlIGl0IGlzIHRvIHRoZW0gaW4gdHVybiB0aGF0IHRoZSBhcm1pZXMgb2YgdGhlIGFsbGllcyB3b3VsZCBiZSBsaWtlbHkgdG8gYXR0YWNoIHRoZW1zZWx2ZXMgd2l0aCBncmVhdGVzdCBjb25maWRlbmNlLiBCZXNpZGVzLCB0aGUgZGVpdHkgaGFzIGdyYW50ZWQsIGFzIHRvIHlvdSBzdWNjZXNzIGJ5IHNlYSwgc28gdG8gdGhlbSBzdWNjZXNzIGJ5IGxhbmQ7IGZvciB3aGlsZSB0aGV5IG9uIHRoZWlyIHNpZGUgaGF2ZSBlbmdhZ2VkIGluIHZlcnkgbWFueSBjb21iYXRzIG9uIHRoZSBsYW5kLCB0aGV5IGhhdmUgaW5jdXJyZWQgYW4gZXhjZWVkaW5nbHkgc21hbGwgbnVtYmVyIG9mIGRlZmVhdHMsIGFuZCBoYXZlIHdvbiBhbiBleGNlZWRpbmdseSBsYXJnZSBudW1iZXIgb2YgdmljdG9yaWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhhdCB0aGlzIGRldm90aW9uIHRvIHRoZSBsYW5kIGlzIG5vIGxlc3MgbmVjZXNzYXJ5IGZvciB0aGVtIHRoYW4gZGV2b3Rpb24gdG8gdGhlIHNlYSBmb3IgeW91LCBvbmUgbWF5IGp1ZGdlIGZyb20gdGhlIHJlc3VsdHMuIEZvciB5b3UgbWFkZSB3YXIgdXBvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PC9ub3RlPiB0aGVtIGZvciBtYW55IHllYXJzLDxkYXRlIGF1dGhuYW1lPSItMzY5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY5Ij4zNjkgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFRoZSBzcGVha2VyIGlzIHJlZmVycmluZyBhZ2FpbiB0byB0aGUgUGVsb3Bvbm5lc2lhbiBXYXIuPC9ub3RlPiBhbmQgdGhvdWdoIHlvdSBkZWZlYXRlZCB0aGVtIG1hbnkgdGltZXMgYnkgc2VhLCBjb3VsZCBtYWtlIG5vIHByb2dyZXNzIHRvd2FyZCBzdWJkdWluZyB0aGVtLiBCdXQgc28gc29vbiBhcyB0aGV5IGluY3VycmVkIG9uZSBkZWZlYXQgb24gdGhlIGxhbmQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBBdCBMZXVjdHJhIChWSS4gaXYuIDEtMTUpLjwvbm90ZT4gaW1tZWRpYXRlbHkgdGhlaXIgd2l2ZXMgYW5kIGNoaWxkcmVuIGFuZCB0aGVpciBlbnRpcmUgc3RhdGUgd2VyZSBhdCBzdGFrZS4KPC90cmFuc2xhdGlvbj4="
translation['7.1.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5IZW5jZSBmb3IgdGhlbSwgb24gdGhlaXIgc2lkZSwgaXQgd291bGQgc3VyZWx5IGJlIGEgZHJlYWRmdWwgdGhpbmcgdG8gYWxsb3cgb3RoZXJzIHRvIGJlIGxlYWRlcnMgYnkgbGFuZCwgd2hlbiB0aGV5IHRoZW1zZWx2ZXMgYXJlIGJlc3QgYXQgdGhlIGFkbWluaXN0cmF0aW9uIG9mIGFmZmFpcnMgYnkgbGFuZC4gQXMgZm9yIG15c2VsZiwgdGhlcmVmb3JlLCB0aGUgY291cnNlIHdoaWNoIGhhcyBiZWVuIHByb3Bvc2VkIGJ5IHlvdXIgU2VuYXRlIGlzIHRoYXQgd2hpY2ggSSBoYXZlIHVyZ2VkLCBhbmQgd2hpY2ggSSBiZWxpZXZlIHRvIGJlIG1vc3QgYWR2YW50YWdlb3VzIHRvIGJvdGggcGFydGllczsgYW5kIG1heSB5b3UsIGZvciB5b3VyIHBhcnQsIGJlIGZvcnR1bmF0ZSBpbiByZWFjaGluZyB0aGUgY29uY2x1c2lvbiB0aGF0IGlzIGJlc3QgZm9yIHVzIGFsbC7igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.1.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGh1cyBoZSBzcG9rZSwgYW5kIGJvdGggdGhlIEF0aGVuaWFucyBhbmQgdGhvc2UgTGFjZWRhZW1vbmlhbnMgd2hvIHdlcmUgcHJlc2VudCBhcHBsYXVkZWQgaGlzIHNwZWVjaCB2aWdvcm91c2x5LiBCdXQgQ2VwaGlzb2RvdHVzIGNhbWUgZm9yd2FyZCBhbmQgc2FpZDog4oCcTWVuIG9mIEF0aGVucywgeW91IGRvIG5vdCBvYnNlcnZlIHRoYXQgeW91IGFyZSBiZWluZyBkZWNlaXZlZDsgYnV0IGlmIHlvdSB3aWxsIGxpc3RlbiB0byBtZSwgSSB3aWxsIHByb3ZlIGl0IHRvIHlvdSB2ZXJ5IHNwZWVkaWx5LiBBcyB0aGUgbWF0dGVyIG5vdyBzdGFuZHMsIHlvdSBhcmUgdG8gYmUgbGVhZGVycyBieSBzZWEuIEFuZCBpZiB0aGUgTGFjZWRhZW1vbmlhbnMgYXJlIHlvdXIgYWxsaWVzLCBpdCBpcyBjbGVhciB0aGF0IHRoZSBjYXB0YWlucywgYW5kIHBlcmhhcHMgdGhlIG1hcmluZXMgd2hvbSB0aGV5IHNlbmQgb3V0LCB3aWxsIGJlIExhY2VkYWVtb25pYW5zLCBidXQgaXQgaXMgYWxzbyBjbGVhciB0aGF0IHRoZSBzYWlsb3JzIHdpbGwgYmUgZWl0aGVyIEhlbG90cyBvciBtZXJjZW5hcmllcy4gWW91LCB0aGVyZWZvcmUsIHdpbGwgYmUgbGVhZGVycyBvZiB0aGVzZSBwZW9wbGUuCjwvdHJhbnNsYXRpb24+"
translation['7.1.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBob3dldmVyLCB0aGUgTGFjZWRhZW1vbmlhbnMgZ2l2ZSB5b3UgdGhlIG9yZGVyIGZvciBhIGNhbXBhaWduIGJ5IGxhbmQsIGl0IGlzIGNsZWFyIHRoYXQgeW91IHdpbGwgc2VuZCB5b3VyIGhvcGxpdGVzIGFuZCB5b3VyIGhvcnNlbWVuLiBCeSB0aGlzIHBsYW4sIHRoZXJlZm9yZSwgdGhleSBiZWNvbWUgbGVhZGVycyBvZiB5b3VyIG93biBzZWx2ZXMsIHdoaWxlIHlvdSBiZWNvbWUgbGVhZGVycyBtZXJlbHkgb2YgdGhlaXIgc2xhdmVzIGFuZCB0aGVpciBtZW4gb2YgbGVhc3QgYWNjb3VudC4gQW5zd2VyIG1lLOKAnSBoZSBzYWlkLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PC9ub3RlPiDigJxUaW1vY3JhdGVzIG9mIExhY2VkYWVtb24sIGRpZCB5b3Ugbm90IHNheSBhIG1vbWVudCBhZ28gdGhhdCB5b3UgaGFkIGNvbWUgd2l0aCBpbnRlbnQgdG8gbWFrZSB0aGUgYWxsaWFuY2Ugb24gdGVybXMgb2YgZnVsbCBlcXVhbGl0eT/igJ0g4oCcSSBkaWQgc2F5IHRoYXQu4oCdCjxkYXRlIGF1dGhuYW1lPSItMzY5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY5Ij4zNjkgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.1.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz7igJxUaGVuLOKAnSBzYWlkIENlcGhpc29kb3R1cywg4oCcaXMgdGhlcmUgYW55dGhpbmcgbW9yZSBlcXVhbCB0aGFuIHRoYXQgZWFjaCBwYXJ0eSBpbiB0dXJuIHNob3VsZCBiZSBsZWFkZXIgb2YgdGhlIGZsZWV0LCBhbmQgZWFjaCBpbiB0dXJuIGxlYWRlciBvZiB0aGUgYXJteSwgYW5kIHRoYXQgeW91LCBpZiB0aGVyZSBpcyBhbnkgYWR2YW50YWdlIGluIHRoZSBsZWFkZXJzaGlwIGJ5IHNlYSwgc2hvdWxkIHNoYXJlIHRoZXJlaW4sIGFuZCB3ZSBsaWtld2lzZSBpbiB0aGUgbWF0dGVyIG9mIGxlYWRlcnNoaXAgYnkgbGFuZD/igJ0gVXBvbiBoZWFyaW5nIHRoaXMgdGhlIEF0aGVuaWFucyB3ZXJlIGxlZCB0byBjaGFuZ2UgdGhlaXIgbWluZHMsIGFuZCB0aGV5IHZvdGVkIHRoYXQgZWFjaCBwYXJ0eSBzaG91bGQgaG9sZCB0aGUgbGVhZGVyc2hpcCBpbiB0dXJuIGZvciBwZXJpb2RzIG9mIGZpdmUgZGF5cy4KPC90cmFuc2xhdGlvbj4="
translation['7.1.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoZW4gYm90aCBwZW9wbGVzIGFuZCB0aGVpciBhbGxpZXMgaGFkIHByb2NlZWRlZCB0byBDb3JpbnRoLCBpdCB3YXMgZGV0ZXJtaW5lZCB0aGF0IHRoZXkgc2hvdWxkIHRvZ2V0aGVyIGd1YXJkIE9uZXVtLiBBY2NvcmRpbmdseSwgd2hpbGUgdGhlIFRoZWJhbnMgYW5kIHRoZWlyIGFsbGllcyB3ZXJlIG9uIHRoZSBtYXJjaCwgdGhleSBmb3JtZWQgdGhlaXIgbGluZXMgYW5kIHByb2NlZWRlZCB0byBrZWVwIGd1YXJkIGF0IG9uZSBwb2ludCBhbmQgYW5vdGhlciBvZiBPbmV1bSwgYnV0IHRoZSBMYWNlZGFlbW9uaWFucyBhbmQgdGhlIFBlbGxlbmVhbnMgYXQgdGhlIG1vc3QgYXNzYWlsYWJsZSBwb2ludC4gQW5kIHRoZSBUaGViYW5zIGFuZCB0aGVpciBhbGxpZXMsIHdoZW4gdGhleSB3ZXJlIGRpc3RhbnQgdGhpcnR5IHN0YWRpYSBmcm9tIHRoZSB0cm9vcHMgb24gZ3VhcmQsIGVuY2FtcGVkIGluIHRoZSBwbGFpbi4gVGhlbiwgYWZ0ZXIgY2FsY3VsYXRpbmcgdGhlIHRpbWUgYXQgd2hpY2ggdGhleSB0aG91Z2h0IHRoZXkgc2hvdWxkIHN0YXJ0IGluIG9yZGVyIHRvIGZpbmlzaCB0aGVpciBqb3VybmV5IGF0IGRhd24sIHRoZXkgbWFyY2hlZCB1cG9uIHRoZSBnYXJyaXNvbiBvZiB0aGUgTGFjZWRhZW1vbmlhbnMuCjwvdHJhbnNsYXRpb24+"
translation['7.1.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaW4gZmFjdCB0aGV5IGRpZCBub3QgcHJvdmUgbWlzdGFrZW4gaW4gdGhlIGhvdXIsIGJ1dCBmZWxsIHVwb24gdGhlIExhY2VkYWVtb25pYW5zIGFuZCB0aGUgUGVsbGVuZWFucyBhdCB0aGUgdGltZSB3aGVuIHRoZSBuaWdodCB3YXRjaGVzIHdlcmUganVzdCBjb21pbmcgdG8gYW4gZW5kLCBhbmQgdGhlIG1lbiB3ZXJlIHJpc2luZyBmcm9tIHRoZWlyIGNhbXAtYmVkcyBhbmQgZ29pbmcgd2hlcmV2ZXIgZWFjaCBvbmUgaGFkIHRvIGdvLiBUaGVyZXVwb24gdGhlIFRoZWJhbnMgbWFkZSB0aGVpciBhdHRhY2sgYW5kIGxhaWQgb24gdGhlaXIgYmxvd3Mg4oCUIG1lbiBwcmVwYXJlZCBhdHRhY2tpbmcgdGhvc2UgdW5wcmVwYXJlZCwgYW5kIG1lbiBpbiBnb29kIG9yZGVyIGFnYWluc3QgdGhvc2UgaW4gZGlzb3JkZXIuCjwvdHJhbnNsYXRpb24+"
translation['7.1.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgd2hlbiBzdWNoIGFzIGNhbWUgb3V0IG9mIHRoZSBhZmZhaXIgd2l0aCB0aGVpcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PC9ub3RlPiBsaXZlcyBoYWQgbWFkZSB0aGVpciBlc2NhcGUgdG8gdGhlIG5lYXJlc3QgaGlsbCwgYWx0aG91Z2ggdGhlIHBvbGVtYXJjaCBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgbWlnaHQgaGF2ZSBnb3QgYXMgbWFueSBob3BsaXRlcyBhbmQgYXMgbWFueSBwZWx0YXN0cyBhcyBoZSBwbGVhc2VkIGZyb20gdGhlIGZvcmNlcyBvZiB0aGUgYWxsaWVzIGFuZCBtaWdodCBoYXZlIGhlbGQgaGlzIHBvc2l0aW9uIOKAlCBmb3Igc3VwcGxpZXMgbWlnaHQgaGF2ZSBiZWVuIGJyb3VnaHQgaW4gc2FmZXR5IGZyb20gQ2VuY2hyZWFlIOKAlCBoZSBkaWQgbm90IGRvIHRoaXMsIGJ1dCB3aGlsZSB0aGUgVGhlYmFucyB3ZXJlIGluIGdyZWF0IHBlcnBsZXhpdHkgYXMgdG8gaG93IHRoZXkgd2VyZSB0byBkZXNjZW5kIG9uIHRoZSBzaWRlIGxvb2tpbmcgdG93YXJkIFNpY3lvbiwgZmFpbGluZyB3aGljaCB0aGV5IHdvdWxkIGhhdmUgdG8gZ28gYmFjayBhZ2FpbiwgaGUgY29uY2x1ZGVkIGEgdHJ1Y2Ugd2hpY2gsIGFzIG1vc3QgcGVvcGxlIHRob3VnaHQsIHdhcyBtb3JlIHRvIHRoZSBhZHZhbnRhZ2Ugb2YgdGhlIFRoZWJhbnMgdGhhbiB0byB0aGF0IG9mIGhpcyBvd24gc2lkZSwgYW5kIHVuZGVyIHRoZXNlIGNpcmN1bXN0YW5jZXMgZGVwYXJ0ZWQgYW5kIGxlZCBhd2F5IHRoZSB0cm9vcHMgdW5kZXIgaGlzIGNvbW1hbmQuCjxkYXRlIGF1dGhuYW1lPSItMzY5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY5Ij4zNjkgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.1.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIFRoZWJhbnMsIHRoZW4sIGFmdGVyIGRlc2NlbmRpbmcgaW4gc2FmZXR5IGFuZCBlZmZlY3RpbmcgYSBqdW5jdGlvbiB3aXRoIHRoZWlyIGFsbGllcywgdGhlIEFyY2FkaWFucywgQXJnaXZlcywgYW5kIEVsZWFucywgaW1tZWRpYXRlbHkgYXR0YWNrZWQgU2ljeW9uIGFuZCBQZWxsZW5lOyB0aGV5IGFsc28gbWFkZSBhbiBleHBlZGl0aW9uIHRvIEVwaWRhdXJ1cywgYW5kIGxhaWQgd2FzdGUgdGhlIHdob2xlIHRlcnJpdG9yeSBvZiB0aGUgRXBpZGF1cmlhbnMuIFJldHVybmluZyBmcm9tIHRoZXJlIGluIGEgbWFubmVyIHdoaWNoIHNob3dlZCBncmVhdCBkaXNkYWluIGZvciBhbGwgdGhlaXIgYWR2ZXJzYXJpZXMsIGFzIHNvb24gYXMgdGhleSBjYW1lIG5lYXIgdGhlIGNpdHkgb2YgdGhlIENvcmludGhpYW5zIHRoZXkgcnVzaGVkIGF0IHRoZSBkb3VibGUgdG93YXJkIHRoZSBnYXRlcyB0aHJvdWdoIHdoaWNoIG9uZSBwYXNzZXMgaW4gZ29pbmcgdG8gUGhsaXVzLCB3aXRoIHRoZSBpbnRlbnRpb24gb2YgYnVyc3RpbmcgaW4gaWYgdGhleSBjaGFuY2VkIHRvIGJlIG9wZW4uCjwvdHJhbnNsYXRpb24+"
translation['7.1.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgc29tZSBsaWdodCB0cm9vcHMgc2FsbGllZCBmb3J0aCBmcm9tIHRoZSBjaXR5IGFnYWluc3QgdGhlbSBhbmQgbWV0IHRoZSBwaWNrZWQgbWVuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBUaGUgZmFtb3VzIOKAnFNhY3JlZCBCYW5kLuKAnTwvbm90ZT4gb2YgdGhlIFRoZWJhbnMgYXQgYSBkaXN0YW5jZSBvZiBub3Qgc28gbXVjaCBhcyBmb3VyIHBsZXRocmEgZnJvbSB0aGUgY2l0eSB3YWxsczsgdGhlbiB0aGV5IGNsaW1iZWQgdXAgb24gYnVyaWFsIG1vbnVtZW50cyBhbmQgZWxldmF0ZWQgc3BvdHMsIGtpbGxlZCBhIHZlcnkgY29uc2lkZXJhYmxlIG51bWJlciBvZiB0aGUgdHJvb3BzIGluIHRoZSBmcm9udCByYW5rcyBieSBodXJsaW5nIGphdmVsaW5zIGFuZCBvdGhlciBtaXNzaWxlcywgYW5kIGFmdGVyIHB1dHRpbmcgdGhlIHJlc3QgdG8gZmxpZ2h0LCBwdXJzdWVkIHRoZW0gYWJvdXQgdGhyZWU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjkiPjM2OSBCLkMuPC9kYXRlPjwvbm90ZT4gb3IgZm91ciBzdGFkaWEuIFdoZW4gdGhpcyBoYWQgdGFrZW4gcGxhY2UgdGhlIENvcmludGhpYW5zIGRyYWdnZWQgdGhlIGJvZGllcyB0byB0aGUgd2FsbCwgYW5kIGFmdGVyIHRoZXkgaGFkIGdpdmVuIHRoZW0gYmFjayB1bmRlciBhIHRydWNlLCBzZXQgdXAgYSB0cm9waHkuIEluIHRoaXMgd2F5IHRoZSBhbGxpZXMgb2YgdGhlIExhY2VkYWVtb25pYW5zIHdlcmUgcmVuZXdlZCBpbiB0aGVpciBzcGlyaXRzLgo8ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.1.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SnVzdCBhZnRlciB0aGVzZSBldmVudHMgaGFkIGhhcHBlbmVkLCB0aGUgZXhwZWRpdGlvbiBzZW50IGJ5IERpb255c2l1cyB0byBhaWQgdGhlIExhY2VkYWVtb25pYW5zIHNhaWxlZCBpbiwgbnVtYmVyaW5nIG1vcmUgdGhhbiB0d2VudHkgdHJpcmVtZXMuIEFuZCB0aGV5IGJyb3VnaHQgQ2VsdHMsIEliZXJpYW5zLCBhbmQgYWJvdXQgZmlmdHkgaG9yc2VtZW4uIE9uIHRoZSBmb2xsb3dpbmcgZGF5IHRoZSBUaGViYW5zIGFuZCB0aGUgcmVzdCwgdGhlaXIgYWxsaWVzLCBhZnRlciBmb3JtaW5nIHRoZW1zZWx2ZXMgaW4gZGV0YWNoZWQgYm9kaWVzIGFuZCBmaWxsaW5nIHRoZSBwbGFpbiBhcyBmYXIgYXMgdGhlIHNlYSBhbmQgYXMgZmFyIGFzIHRoZSBoaWxscyBhZGpvaW5pbmcgdGhlIGNpdHksIGRlc3Ryb3llZCB3aGF0ZXZlciBvZiB2YWx1ZSB0aGVyZSB3YXMgaW4gdGhlIHBsYWluLiBBbmQgdGhlIGhvcnNlbWVuIG9mIHRoZSBBdGhlbmlhbnMgYW5kIG9mIHRoZSBDb3JpbnRoaWFucyBkaWQgbm90IGFwcHJvYWNoIHZlcnkgbmVhciB0aGVpciBhcm15LCBzZWVpbmcgdGhhdCB0aGUgZW5lbXkgd2VyZSBzdHJvbmcgYW5kIG51bWVyb3VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIGhvcnNlbWVuIHNlbnQgYnkgRGlvbnlzaXVzLCBmZXcgdGhvdWdoIHRoZXkgd2VyZSwgc2NhdHRlcmluZyB0aGVtc2VsdmVzIGhlcmUgYW5kIHRoZXJlLCB3b3VsZCByaWRlIGFsb25nIHRoZSBlbmVteSdzIGxpbmUsIGNoYXJnZSB1cG9uIHRoZW0gYW5kIHRocm93IGphdmVsaW5zIGF0IHRoZW0sIGFuZCB3aGVuIHRoZSBlbmVteSBiZWdhbiB0byBtb3ZlIGZvcnRoIGFnYWluc3QgdGhlbSwgd291bGQgcmV0cmVhdCwgYW5kIHRoZW4gdHVybiByb3VuZCBhbmQgdGhyb3cgdGhlaXIgamF2ZWxpbnMgYWdhaW4uIEFuZCB3aGlsZSBwdXJzdWluZyB0aGVzZSB0YWN0aWNzIHRoZXkgd291bGQgZGlzbW91bnQgZnJvbSB0aGVpciBob3JzZXMgYW5kIHJlc3QuIEJ1dCBpZiBhbnlvbmUgY2hhcmdlZCB1cG9uIHRoZW0gd2hpbGUgdGhleSB3ZXJlIGRpc21vdW50ZWQsIHRoZXkgd291bGQgbGVhcCBlYXNpbHkgdXBvbiB0aGVpciBob3JzZXMgYW5kIHJldHJlYXQuIE9uIHRoZSBvdGhlciBoYW5kLCBpZiBhbnkgcHVyc3VlZCB0aGVtIGZhciBmcm9tIHRoZSBUaGViYW4gYXJteSwgdGhleSB3b3VsZCBwcmVzcyB1cG9uIHRoZXNlIG1lbiB3aGVuIHRoZXkgd2VyZSByZXRpcmluZywgYW5kIGJ5IHRocm93aW5nIGphdmVsaW5zIHdvcmsgaGF2b2Mgd2l0aCB0aGVtLCBhbmQgdGh1cyB0aGV5IGNvbXBlbGxlZCB0aGUgZW50aXJlIGFybXksIGFjY29yZGluZyB0byB0aGVpciBvd24gd2lsbCwgZWl0aGVyIHRvIGFkdmFuY2Ugb3IgdG8gZmFsbCBiYWNrLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB0aGlzLCBob3dldmVyLCB0aGUgVGhlYmFucyByZW1haW5lZCBidXQgYSBmZXcgZGF5cyBhbmQgdGhlbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PC9ub3RlPiByZXR1cm5lZCBob21lLCBhbmQgdGhlIG90aGVycyBsaWtld2lzZSB0byB0aGVpciBzZXZlcmFsIGhvbWVzLiBUaGVuIHRoZSB0cm9vcHMgc2VudCBieSBEaW9ueXNpdXMgaW52YWRlZCB0aGUgdGVycml0b3J5IG9mIFNpY3lvbiwgYW5kIHRoZXkgbm90IG9ubHkgZGVmZWF0ZWQgdGhlIFNpY3lvbmlhbnMgaW4gYmF0dGxlIG9uIHRoZSBwbGFpbiBhbmQga2lsbGVkIGFib3V0IHNldmVudHkgb2YgdGhlbSwgYnV0IGNhcHR1cmVkIGJ5IHN0b3JtIHRoZSBzdHJvbmdob2xkIG9mIERlcmFzLiBBZnRlciB0aGVzZSBleHBsb2l0cyB0aGUgZmlyc3Qgc3VwcG9ydGluZyBmb3JjZSBzZW50IG91dCBieSBEaW9ueXNpdXMgc2FpbGVkIGJhY2sgdG8gU3lyYWN1c2UuPGRhdGUgYXV0aG5hbWU9Ii0zNjkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjkiPjM2OSBCLkMuPC9kYXRlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5VcCB0byB0aGlzIHRpbWUgdGhlIFRoZWJhbnMgYW5kIGFsbCB3aG8gaGFkIHJldm9sdGVkIGZyb20gdGhlIExhY2VkYWVtb25pYW5zIGhhZCBiZWVuIGFjdGluZyBhbmQgY2Fycnlpbmcgb24gdGhlaXIgY2FtcGFpZ25zIGluIGZ1bGwgYWNjb3JkLCB1bmRlciB0aGUgbGVhZGVyc2hpcCBvZiB0aGUgVGhlYmFucy4KPC90cmFuc2xhdGlvbj4="
translation['7.1.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3csIGhvd2V2ZXIsIHRoZXJlIGFwcGVhcmVkIGEgY2VydGFpbiBMeWNvbWVkZXMgb2YgTWFudGluZWEsIGEgbWFuIGluZmVyaW9yIHRvIG5vbmUgaW4gYmlydGgsIGZvcmVtb3N0IGluIHdlYWx0aCwgYW5kIGFtYml0aW91cyBiZXNpZGVzLCBhbmQgZmlsbGVkIHRoZSBBcmNhZGlhbnMgd2l0aCBzZWxmLWNvbmZpZGVuY2UsIHNheWluZyB0aGF0IGl0IHdhcyB0byB0aGVtIGFsb25lIHRoYXQgUGVsb3Bvbm5lc3VzIHdhcyBhIGZhdGhlcmxhbmQsIHNpbmNlIHRoZXkgd2VyZSB0aGUgb25seSBhdXRvY2h0aG9ub3VzIHN0b2NrIHRoYXQgZHdlbHQgdGhlcmVpbiwgYW5kIHRoYXQgdGhlIEFyY2FkaWFuIHBlb3BsZSB3YXMgdGhlIG1vc3QgbnVtZXJvdXMgb2YgYWxsIHRoZSBHcmVlayBwZW9wbGVzIGFuZCBoYWQgdGhlIHN0cm9uZ2VzdCBib2RpZXMuIEhlIGFsc28gZGVjbGFyZWQgdGhhdCB0aGV5IHdlcmUgdGhlIGJyYXZlc3QsIG9mZmVyaW5nIGFzIGV2aWRlbmNlIHRoZSBmYWN0IHRoYXQgd2hlbmV2ZXIgbWVuIG5lZWRlZCBtZXJjZW5hcmllcywgdGhlcmUgd2VyZSBub25lIHdob20gdGhleSBjaG9zZSBpbiBwcmVmZXJlbmNlIHRvIEFyY2FkaWFucy4gRnVydGhlcm1vcmUsIHRoZSBMYWNlZGFlbW9uaWFucyBoYWQgbmV2ZXIsIGhlIHNhaWQsIGludmFkZWQgdGhlIHRlcnJpdG9yeSBvZiBBdGhlbnMgd2l0aG91dCB0aGVpciBoZWxwLCBub3IgaGFkIHRoZSBUaGViYW5zIGF0IHByZXNlbnQgY29tZSB0byBMYWNlZGFlbW9uIHdpdGhvdXQgdGhlIGhlbHAgb2YgdGhlIEFyY2FkaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['7.1.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz7igJxJZiB5b3UgYXJlIHdpc2UsIHRoZXJlZm9yZSwgeW91IHdpbGwgbGVhdmUgb2ZmIGZvbGxvd2luZyB3aGVyZXZlciBhbnlvbmUgc3VtbW9ucyB5b3U7IGZvciBpbiBmb3JtZXIgZGF5cywgYnkgZm9sbG93aW5nIHRoZSBMYWNlZGFlbW9uaWFucywgeW91IG1hZGUgdGhlbSBncmVhdCwgYW5kIG5vdywgaWYgeW91IGZvbGxvdyB0aGUgVGhlYmFucyBoZWVkbGVzc2x5IGFuZCBkbyBub3QgbWFrZSB0aGUgY2xhaW0gdG8gZW5qb3kgdGhlIGxlYWRlcnNoaXAgYnkgdHVybnMgd2l0aCB0aGVtLCBpdCBtYXkgYmUgdGhhdCB5b3Ugd2lsbCBzb29uIGZpbmQgaW4gdGhlbSBhbm90aGVyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY5Ij4zNjkgQi5DLjwvZGF0ZT48L25vdGU+IHNldCBvZiBMYWNlZGFlbW9uaWFucy7igJ0gVXBvbiBoZWFyaW5nIHRoZXNlIHdvcmRzIHRoZSBBcmNhZGlhbnMgd2VyZSBwdWZmZWQgdXAsIGFuZCBsb3ZlZCBMeWNvbWVkZXMgYmV5b25kIG1lYXN1cmUsIGFuZCB0aG91Z2h0IHRoYXQgaGUgYWxvbmUgd2FzIGEgbWFuOyBzbyB0aGF0IHRoZXkgYXBwb2ludGVkIGFzIHRoZWlyIGxlYWRlcnMgd2hvbXNvZXZlciBoZSBkaXJlY3RlZCB0aGVtIHRvIGFwcG9pbnQuIEJ1dCB0aGUgQXJjYWRpYW5zIHdlcmUgZXhhbHRlZCBhcyBhIHJlc3VsdCBhbHNvIG9mIHRoZSBhY3R1YWwgYWNoaWV2ZW1lbnRzIHdoaWNoIGZlbGwgdG8gdGhlaXIgbG90Owo8ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.1.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5mb3Igd2hlbiB0aGUgQXJnaXZlcyBoYWQgaW52YWRlZCB0aGUgY291bnRyeSBvZiBFcGlkYXVydXMgYW5kIHRoZWlyIHdheSBvdXQgaGFkIGJlZW4gYmFycmVkIGJ5IHRoZSBtZXJjZW5hcmllcyB1bmRlciBDaGFicmlhcywgYW5kIGJ5IHRoZSBBdGhlbmlhbnMsIGFuZCB0aGUgQ29yaW50aGlhbnMsIHRoZXkgd2VudCB0byB0aGUgcmVzY3VlIGFuZCByZWxlYXNlZCB0aGUgQXJnaXZlcyBmcm9tIGFuIGFic29sdXRlIGJsb2NrYWRlLCBhbHRob3VnaCB0aGV5IGhhZCBub3Qgb25seSB0aGUgZW5lbXkncyB0cm9vcHMgYnV0IGFsc28gdGhlIGNoYXJhY3RlciBvZiB0aGUgY291bnRyeSB0byBjb250ZW5kIHdpdGguIFRoZXkgYWxzbyBtYWRlIGFuIGV4cGVkaXRpb24gdG8gQXNpbmUgaW4gTGFjb25pYSwgZGVmZWF0ZWQgdGhlIGdhcnJpc29uIG9mIHRoZSBMYWNlZGFlbW9uaWFucywgc2xldyBHZXJhbm9yLCB0aGUgU3BhcnRpYXRlIHdobyBoYWQgYmVjb21lIHBvbGVtYXJjaCwgYW5kIHBsdW5kZXJlZCB0aGUgb3V0ZXIgY2l0eSBvZiB0aGUgQXNpbmFlYW5zLiBBbmQgd2hlbmV2ZXIgdGhleSB3aXNoZWQgdG8gdGFrZSB0aGUgZmllbGQsIG5laXRoZXIgbmlnaHQgbm9yIHN0b3JtIG5vciBsZW5ndGggb2Ygam91cm5leSBub3IgZGlmZmljdWx0IG1vdW50YWlucyB3b3VsZCBwcmV2ZW50IHRoZW07IHNvIHRoYXQgYXQgdGhhdCB0aW1lIHRoZXkgY291bnRlZCB0aGVtc2VsdmVzIGFsdG9nZXRoZXIgdGhlIHN0cm9uZ2VzdCBvZiB0aGUgR3JlZWtzLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgdGhlc2UgcmVhc29ucyB0aGUgVGhlYmFucyBuYXR1cmFsbHkgZmVsdCBzb21ld2hhdCBqZWFsb3VzIGFuZCBubyBsb25nZXIgZnJpZW5kbHkgdG93YXJkIHRoZSBBcmNhZGlhbnMuIEFzIGZvciB0aGUgRWxlYW5zLCB3aGVuIHRoZXkgZGVtYW5kZWQgYmFjayBhZ2FpbiBmcm9tIHRoZSBBcmNhZGlhbnMgdGhlIGNpdGllcyBvZiB3aGljaCB0aGV5IGhhZCBiZWVuIGRlcHJpdmVkIGJ5IHRoZSBMYWNlZGFlbW9uaWFucyBhbmQgZm91bmQgdGhhdCB0aGUgQXJjYWRpYW5zIGdhdmUgbm8gaGVlZCB0byBwaHlsaWFucyBhbmQgdGhlIG90aGVycyB3aG8gaGFkIHJldm9sdGVkIGZyb20gdGhlbSwgYmVjYXVzZSB0aGVzZSBwZW9wbGUgc2FpZCB0aGV5IHdlcmUgQXJjYWRpYW5zLCBhcyBhIHJlc3VsdCBvZiB0aGlzIHRoZSBFbGVhbnMgaW4gdGhlaXIgdHVybiBmZWx0IHVuZnJpZW5kbHkgdG93YXJkIHRoZW0uIAo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hpbGUgdGhlIHNldmVyYWwgYWxsaWVzIHdlcmUgZWFjaCB0aHVzIGZpbGxlZCB3aXRoPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY4Ij4zNjggQi5DLjwvZGF0ZT48L25vdGU+IHByb3VkIGNvbmZpZGVuY2UgaW4gdGhlbXNlbHZlcywgUGhpbGlzY3VzIG9mIEFieWR1cyBjYW1lIGZyb20gQXJpb2JhcnphbmVzPGRhdGUgYXV0aG5hbWU9Ii0zNjgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjgiPjM2OCBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gdi4gaS4gMjguPC9ub3RlPiB3aXRoIGEgbGFyZ2UgYW1vdW50IG9mIG1vbmV5LiBBbmQgaW4gdGhlIGZpcnN0IHBsYWNlIGhlIGJyb3VnaHQgdG9nZXRoZXIgYXQgRGVscGhpIHRoZSBUaGViYW5zLCB0aGVpciBhbGxpZXMsIGFuZCB0aGUgTGFjZWRhZW1vbmlhbnMgdG8gbmVnb3RpYXRlIGluIHJlZ2FyZCB0byBwZWFjZS4gQnV0IHdoZW4gdGhleSBoYWQgYXJyaXZlZCB0aGVyZSwgdGhleSBkaWQgbm90IGNvbnN1bHQgdGhlIGdvZCBhdCBhbGwgYXMgdG8gaG93IHBlYWNlIHNob3VsZCBiZSBicm91Z2h0IGFib3V0LCBidXQgZGVsaWJlcmF0ZWQgZm9yIHRoZW1zZWx2ZXMuIFNpbmNlLCBob3dldmVyLCB0aGUgVGhlYmFucyB3b3VsZCBub3QgYWdyZWUgdGhhdCBNZXNzZW5lIHNob3VsZCBiZSBzdWJqZWN0IHRvIHRoZSBMYWNlZGFlbW9uaWFucyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFNlZSBub3RlIG9uIFZJLiB2LiAzMi48L25vdGU+IFBoaWxpc2N1cyBzZXQgYWJvdXQgY29sbGVjdGluZyBhIGxhcmdlIG1lcmNlbmFyeSBmb3JjZSBpbiBvcmRlciB0byBtYWtlIHdhciBvbiB0aGUgc2lkZSBvZiB0aGUgTGFjZWRhZW1vbmlhbnMuCjwvdHJhbnNsYXRpb24+"
translation['7.1.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hpbGUgdGhlc2UgdGhpbmdzIHdlcmUgZ29pbmcgb24gdGhlIHNlY29uZCBzdXBwb3J0aW5nIGZvcmNlIHNlbnQgb3V0IGJ5IERpb255c2l1cyBhcnJpdmVkLiBBbmQgd2hlbiB0aGUgQXRoZW5pYW5zIHNhaWQgdGhhdCBpdCBvdWdodCB0byBnbyB0byBUaGVzc2FseSB0byBvcHBvc2UgdGhlIFRoZWJhbnMsIHdoaWxlIHRoZSBMYWNlZGFlbW9uaWFucyB1cmdlZCB0aGF0IGl0IHNob3VsZCBnbyB0byBMYWNvbmlhLCB0aGUgbGF0dGVyIHBsYW4gY2FycmllZCB0aGUgZGF5IGFtb25nIHRoZSBhbGxpZXMuIEFjY29yZGluZ2x5LCBhZnRlciB0aGVzZSB0cm9vcHMgZnJvbSBEaW9ueXNpdXMgaGFkIHNhaWxlZCByb3VuZCB0byBMYWNlZGFlbW9uLCBBcmNoaWRhbXVzIHRvb2sgdGhlbSwgYWxvbmcgd2l0aCBoaXMgY2l0aXplbiBzb2xkaWVycywgYW5kIHNldCBvdXQgb24gYW4gZXhwZWRpdGlvbi4gSGUgY2FwdHVyZWQgQ2FyeWFlIGJ5IHN0b3JtIGFuZCBwdXQgdG8gdGhlIHN3b3JkIGFsbCB3aG9tIGhlIHRvb2sgcHJpc29uZXJzLiBGcm9tIHRoZXJlIGhlIG1hcmNoZWQgYXQgb25jZSB3aXRoIGhpcyB1bml0ZWQgZm9yY2VzIGFnYWluc3QgdGhlIHBlb3BsZSBvZiBQYXJyaGFzaWEsIGluIEFyY2FkaWEsIGFuZCBsYWlkIHdhc3RlIHRoZWlyIGxhbmQuCjwvdHJhbnNsYXRpb24+"
translation['7.1.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGUgQXJjYWRpYW5zIGFuZCBBcmdpdmVzIGNhbWUgdG8gdGhlaXIgYXNzaXN0YW5jZSwgaGUgcmV0aXJlZCBhbmQgZW5jYW1wZWQgaW4gdGhlIGhpbGxzIGFib3ZlIE1lbGVhLiBXaGlsZSBoZSB3YXMgdGhlcmUgQ2lzc2lkYXMsIHRoZSBjb21tYW5kZXIgb2YgdGhlIHN1cHBvcnRpbmcgZm9yY2UgZnJvbSBEaW9ueXNpdXMsIHNhaWQgdGhhdCB0aGUgdGltZSBmb3Igd2hpY2ggaGUgaGFkIGJlZW4gZGlyZWN0ZWQgdG8gc3RheSBoYWQgZXhwaXJlZC4gQW5kIGFzIHNvb24gYXMgaGUgaGFkIHNhaWQgdGhpcyBoZSBkZXBhcnRlZCBieSB0aGUgcm9hZCBsZWFkaW5nIHRvIFNwYXJ0YS4gQnV0IHdoZW4sIGFzIGhlIHdhcyBtYXJjaGluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OCI+MzY4IEIuQy48L2RhdGU+PC9ub3RlPiBhd2F5LCB0aGUgTWVzc2VuaWFucyB0cmllZCB0byBjdXQgaGltIG9mZiBhdCBhIG5hcnJvdyBwbGFjZSBvbiB0aGUgcm9hZCwgdGhlcmV1cG9uIGhlIHNlbnQgdG8gQXJjaGlkYW11cyBhbmQgYmFkZSBoaW0gY29tZSB0byBoaXMgYWlkLiBBbmQgQXJjaGlkYW11cyBkaWQgaW4gZmFjdCBkbyBzby4gVGhlbiBhcyBzb29uIGFzIHRoZXkgYWxsIGFycml2ZWQgYXQgdGhlIGJyYW5jaCByb2FkIGxlYWRpbmcgdG8gdGhlIGNvdW50cnkgb2YgdGhlIEV1dHJlc2lhbnMsIHRoZXJlIHdlcmUgdGhlIEFyY2FkaWFucyBhbmQgQXJnaXZlcyBhZHZhbmNpbmcgdG93YXJkcyBMYWNvbmlhLCB0aGV5IGFsc28gaGF2aW5nIHRoZSBpbnRlbnRpb24gb2Ygc2h1dHRpbmcgb2ZmIEFyY2hpZGFtdXMgZnJvbSBoaXMgaG9tZXdhcmQgd2F5LiBIZSBhY2NvcmRpbmdseSwgYXQganVzdCB0aGUgcG9pbnQgd2hlcmUgdGhlcmUgaXMgYSBsZXZlbCBzcGFjZSBhdCB0aGUganVuY3Rpb24gb2YgdGhlIHJvYWQgbGVhZGluZyB0byB0aGUgRXV0cmVzaWFucyBhbmQgdGhlIHJvYWQgdG8gTWVsZWEsIHR1cm5lZCBvdXQgb2YgaGlzIHBhdGggYW5kIGZvcm1lZCBoaXMgdHJvb3BzIGluIGxpbmUgZm9yIGJhdHRsZS4KPGRhdGUgYXV0aG5hbWU9Ii0zNjgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjgiPjM2OCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.1.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyBzYWlkIHRoYXQgaGUgYWxzbyB3ZW50IGFsb25nIGluIGZyb250IG9mIHRoZSBiYXR0YWxpb25zIGFuZCBleGhvcnRlZCBoaXMgbWVuIGluIHRoZSBmb2xsb3dpbmcgd29yZHM6IOKAnEZlbGxvdyBjaXRpemVucywgbGV0IHVzIG5vdyBwcm92ZSBvdXJzZWx2ZXMgYnJhdmUgbWVuIGFuZCB0aHVzIGJlIGFibGUgdG8gbG9vayBwZW9wbGUgaW4gdGhlIGZhY2U7IGxldCB1cyBoYW5kIG9uIHRvIHRob3NlIHdobyBjb21lIGFmdGVyIHVzIHRoZSBmYXRoZXJsYW5kIGFzIGl0IHdhcyB3aGVuIHdlIHJlY2VpdmVkIGl0IGZyb20gb3VyIGZhdGhlcnM7IGxldCB1cyBjZWFzZSB0byBmZWVsIHNoYW1lIGJlZm9yZSB3aXZlcyBhbmQgY2hpbGRyZW4gYW5kIGVsZGVycyBhbmQgc3RyYW5nZXJzLCBpbiB3aG9zZSBleWVzIHdlIHVzZWQgb25jZSB0byBiZSB0aGUgbW9zdCBoaWdobHkgaG9ub3VyZWQgb2YgYWxsIHRoZSBHcmVla3Mu4oCdCjwvdHJhbnNsYXRpb24+"
translation['7.1.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXNlIHdvcmRzIGhhZCBiZWVuIHNwb2tlbiwgaXQgaXMgc2FpZCB0aGF0IGZyb20gYSBjbGVhciBza3kgdGhlcmUgY2FtZSBsaWdodG5pbmdzIGFuZCB0aHVuZGVyaW5ncyBvZiBmYXZvdXJhYmxlIG9tZW4gZm9yIGhpbTsgYW5kIGl0IGNoYW5jZWQgYWxzbyB0aGF0IG9uIHRoZSByaWdodCB3aW5nIHdhcyBhIHNhbmN0dWFyeSBhbmQgYSBzdGF0dWUgb2YgSGVyYWNsZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBUaGUgY2lyY3Vtc3RhbmNlIHdhcyBvZiBnb29kIG9tZW4gYmVjYXVzZSBIZXJhY2xlcyB3YXMgdGhlIHRyYWRpdGlvbmFsIGFuY2VzdG9yIG9mIHRoZSBTcGFydGFuIGtpbmdzLjwvbm90ZT4gQXMgYSByZXN1bHQsIHRoZXJlZm9yZSwgb2YgYWxsIHRoZXNlIHRoaW5ncywgaXQgaXMgcmVwb3J0ZWQgdGhhdCB0aGUgc29sZGllcnMgd2VyZSBpbnNwaXJlZCB3aXRoIHNvIG11Y2ggc3RyZW5ndGggYW5kIGNvdXJhZ2UgdGhhdCBpdCB3YXMgYSB0YXNrIGZvciB0aGVpciBsZWFkZXJzIHRvIHJlc3RyYWluIHRoZW0gYXMgdGhleSBwdXNoZWQgZm9yd2FyZCB0byB0aGUgZnJvbnQuIEFuZCB3aGVuIEFyY2hpZGFtdXMgbGVkIHRoZSBhZHZhbmNlLCBvbmx5IGEgZmV3IG9mIHRoZSBlbmVteSB3YWl0ZWQgdGlsbCBoaXMgbWVuIGNhbWUgd2l0aGluIHNwZWFyLXRocnVzdDs8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjgiPjM2OCBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlc2Ugd2VyZSBraWxsZWQsIGFuZCB0aGUgcmVzdCB3ZXJlIGN1dCBkb3duIGFzIHRoZXkgZmxlZCwgbWFueSBieSB0aGUgaG9yc2VtZW4gYW5kIG1hbnkgYnkgdGhlIENlbHRzLgo8ZGF0ZSBhdXRobmFtZT0iLTM2OCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OCI+MzY4IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.1.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIGFzIHNvb24gYXMgdGhlIGJhdHRsZSBoYWQgZW5kZWQgYW5kIGhlIGhhZCBzZXQgdXAgYSB0cm9waHksIGhlIGltbWVkaWF0ZWx5IHNlbnQgaG9tZSBEZW1vdGVsZXMsIHRoZSBoZXJhbGQsIHRvIHJlcG9ydCB0aGUgZ3JlYXRuZXNzIG9mIGhpcyB2aWN0b3J5IGFuZCB0aGUgZmFjdCB0aGF0IG5vdCBzbyBtdWNoIGFzIG9uZSBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgaGFkIGJlZW4gc2xhaW4sIHdoaWxlIHZhc3QgbnVtYmVycyBvZiB0aGUgZW5lbXkgaGFkIGZhbGxlbi4gQW5kIHdoZW4gdGhlIHBlb3BsZSBhdCBTcGFydGEgaGVhcmQgdGhpcywgaXQgaXMgc2FpZCB0aGF0IGFsbCBvZiB0aGVtIHdlcHQsIGJlZ2lubmluZyB3aXRoIEFnZXNpbGF1cywgdGhlIHNlbmF0b3JzLCBhbmQgdGhlIGVwaG9yczsgc28gdHJ1ZSBpdCBpcywgaW5kZWVkLCB0aGF0IHRlYXJzIGJlbG9uZyB0byBqb3kgYW5kIHNvcnJvdyBhbGlrZS4gT24gdGhlIG90aGVyIGhhbmQsIGJvdGggdGhlIFRoZWJhbnMgYW5kIHRoZSBFbGVhbnMgd2VyZSBhbG1vc3QgYXMgd2VsbCBwbGVhc2VkIGFzIHRoZSBMYWNlZGFlbW9uaWFucyBhdCB0aGUgbWlzZm9ydHVuZSBvZiB0aGUgQXJjYWRpYW5zIOKAlCBzbyB2ZXhlZCBoYWQgdGhleSBiZWNvbWUgYnkgdGhpcyB0aW1lIGF0IHRoZWlyIHByZXN1bXB0aW9uLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIG5vdyB0aGUgVGhlYmFucywgd2hvIHdlcmUgY29udGludWFsbHkgcGxhbm5pbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjciPjM2NyBCLkMuPC9kYXRlPjwvbm90ZT4gaG93IHRoZXkgbWlnaHQgb2J0YWluIHRoZSBsZWFkZXJzaGlwIG9mIEdyZWVjZSwgaGl0IHVwb24gdGhlIGlkZWEgdGhhdCBpZiB0aGV5IHNob3VsZCBzZW5kIHRvIHRoZSBLaW5nIG9mIHRoZSBQZXJzaWFucywgdGhleSB3b3VsZCBnYWluIHNvbWUgYWR2YW50YWdlIGluIGhpbS4gVGhlcmV1cG9uIHRoZXkgaW1tZWRpYXRlbHkgc3VtbW9uZWQgdGhlaXIgYWxsaWVzLCBvbiB0aGUgcHJldGV4dCB0aGF0IEV1dGh5Y2xlcywgdGhlIExhY2VkYWVtb25pYW4sIHdhcyBhbHNvIGF0IHRoZSBLaW5nJ3MgY291cnQ7IGFuZCB0aGVyZSB3ZW50IHVwIHRoaXRoZXIgUGVsb3BpZGFzIGZvciB0aGUgVGhlYmFucywgQW50aW9jaHVzLCB0aGUgcGFuY3JhdGlhc3QsPGRhdGUgYXV0aG5hbWU9Ii0zNjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjciPjM2NyBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gVGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+AzrHOs866z4HhvbHPhM65zr/OvSw8L2ZvcmVpZ24+IGEgcmVndWxhciDigJxldmVudOKAnSBpbiB0aGUgR3JlZWsgbmF0aW9uYWwgZ2FtZXMsIHdhcyBhIGNvbWJpbmF0aW9uIG9mIGJveGluZyBhbmQgd3Jlc3RsaW5nLjwvbm90ZT4gZm9yIHRoZSBBcmNhZGlhbnMsIGFuZCBBcmNoaWRhbXVzIGZvciB0aGUgRWxlYW5zOyBhbiBBcmdpdmUgYWxzbyB3ZW50IHdpdGggdGhlbS4gQW5kIHRoZSBBdGhlbmlhbnMsIHVwb24gaGVhcmluZyBvZiB0aGlzLCBzZW50IHVwIFRpbWFnb3JhcyBhbmQgTGVvbi4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DOsc6zzrrPgeG9sc+EzrnOv869LDwvZm9yZWlnbj4gYSByZWd1bGFyIOKAnGV2ZW504oCdIGluIHRoZSBHcmVlayBuYXRpb25hbCBnYW1lcywgd2FzIGEgY29tYmluYXRpb24gb2YgYm94aW5nIGFuZCB3cmVzdGxpbmcuPC90cmFuc2xhdGlvbj4="
translation['7.1.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZSBhbWJhc3NhZG9ycyBhcnJpdmVkIHRoZXJlLCBQZWxvcGlkYXMgZW5qb3llZCBhIGdyZWF0IGFkdmFudGFnZSB3aXRoIHRoZSBQZXJzaWFuLiBGb3IgaGUgd2FzIGFibGUgdG8gc2F5IHRoYXQgaGlzIHBlb3BsZSB3ZXJlIHRoZSBvbmx5IG9uZXMgYW1vbmcgdGhlIEdyZWVrcyB3aG8gaGFkIGZvdWdodCBvbiB0aGUgc2lkZSBvZiB0aGUgS2luZyBhdCBQbGF0YWVhLCB0aGF0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY3Ij4zNjcgQi5DLjwvZGF0ZT48L25vdGU+IHRoZXkgaGFkIG5ldmVyIGFmdGVyd2FyZHMgdW5kZXJ0YWtlbiBhIGNhbXBhaWduIGFnYWluc3QgdGhlIEtpbmcsIGFuZCB0aGF0IHRoZSBMYWNlZGFlbW9uaWFucyBoYWQgbWFkZSB3YXIgdXBvbiB0aGVtIGZvciBwcmVjaXNlbHkgdGhlIHJlYXNvbiB0aGF0IHRoZXkgaGFkIGRlY2xpbmVkIHRvIGdvIHdpdGggQWdlc2lsYXVzIGFnYWluc3QgaGltPGRhdGUgYXV0aG5hbWU9Ii0zNjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjciPjM2NyBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gU2VlIElJSS4gdi4gNS48L25vdGU+IGFuZCBoYWQgcmVmdXNlZCB0byBwZXJtaXQgQWdlc2lsYXVzIHRvIHNhY3JpZmljZSB0byBBcnRlbWlzIGF0IEF1bGlzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gVGhpcyBpbmNpZGVudCBpcyBkZXNjcmliZWQgaW4gSUlJLiBpdi4gMy00Ljwvbm90ZT4gdGhlIHZlcnkgc3BvdCB3aGVyZSBBZ2FtZW1ub24sIGF0IHRoZSB0aW1lIHdoZW4gaGUgd2FzIHNhaWxpbmcgZm9ydGggdG8gQXNpYSwgaGFkIHNhY3JpZmljZWQgYmVmb3JlIGhlIGNhcHR1cmVkIFRyb3kuCjwvdHJhbnNsYXRpb24+"
translation['7.1.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5JdCBhbHNvIGNvbnRyaWJ1dGVkIGdyZWF0bHkgdG93YXJkIHRoZSB3aW5uaW5nIG9mIGhvbm91ciBmb3IgUGVsb3BpZGFzIHRoYXQgdGhlIFRoZWJhbnMgaGFkIGJlZW4gdmljdG9yaW91cyBpbiBiYXR0bGUgYXQgTGV1Y3RyYSwgYW5kIHRoYXQgdGhleSBoYWQgYWRtaXR0ZWRseSByYXZhZ2VkIHRoZSBjb3VudHJ5IG9mIHRoZSBMYWNlZGFlbW9uaWFucy4gUGVsb3BpZGFzIGFsc28gc2FpZCB0aGF0IHRoZSBBcmdpdmVzIGFuZCBBcmNhZGlhbnMgaGFkIGJlZW4gZGVmZWF0ZWQgYnkgdGhlIExhY2VkYWVtb25pYW5zIHdoZW4gdGhlIFRoZWJhbnMgd2VyZSBub3QgcHJlc2VudCB3aXRoIHRoZW0uIEFuZCB0aGUgQXRoZW5pYW4sIFRpbWFnb3JhcywgYm9yZSB3aXRuZXNzIGluIGhpcyBiZWhhbGYgdGhhdCBhbGwgdGhlc2UgdGhpbmdzIHdoaWNoIGhlIHNhaWQgd2VyZSB0cnVlLCBhbmQgc28gc3Rvb2Qgc2Vjb25kIGluIGhvbm91ciB0byBQZWxvcGlkYXMuCjwvdHJhbnNsYXRpb24+"
translation['7.1.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5QZWxvcGlkYXMgd2FzIHRoZXJlZm9yZSBhc2tlZCBieSB0aGUgS2luZyB3aGF0IGhlIGRlc2lyZWQgdG8gaGF2ZSB3cml0dGVuIGZvciBoaW07IGhlIHJlcGxpZWQsIHRoYXQgTWVzc2VuZSBzaG91bGQgYmUgaW5kZXBlbmRlbnQgb2YgdGhlIExhY2VkYWVtb25pYW5zIGFuZCB0aGF0IHRoZSBBdGhlbmlhbnMgc2hvdWxkIGRyYXcgdXAgdGhlaXIgc2hpcHMgb24gdGhlIGxhbmQ7IHRoYXQgaWYgdGhleSByZWZ1c2VkIG9iZWRpZW5jZSBpbiB0aGVzZSBwb2ludHMsIHRoZSBjb250cmFjdGluZyBwYXJ0aWVzIHdlcmUgdG8gbWFrZSBhbiBleHBlZGl0aW9uIGFnYWluc3QgdGhlbTsgYW5kIHRoYXQgaWYgYW55IGNpdHkgcmVmdXNlZCB0byBqb2luIGluIHN1Y2ggZXhwZWRpdGlvbiwgdGhleSB3ZXJlIHRvIHByb2NlZWQgZmlyc3Qgb2YgYWxsIGFnYWluc3QgdGhhdCBjaXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXNlIHRoaW5ncyBoYWQgYmVlbiB3cml0dGVuIGFuZCByZWFkIHRvIHRoZSBhbWJhc3NhZG9ycywgTGVvbiBzYWlkIGluIHRoZSBLaW5nJ3MgaGVhcmluZywg4oCcQnkgWmV1cywgQXRoZW5pYW5zLCBpdCBpcyB0aW1lIGZvciB5b3UsIGl0IHNlZW1zLCB0byBiZSBzZWVraW5nIHNvbWUgb3RoZXIgZnJpZW5kIGluc3RlYWQgb2YgdGhlIEtpbmcu4oCdIEFuZCB3aGVuIHRoZSBzZWNyZXRhcnkgaGFkIGludGVycHJldGVkIHRvIHRoZSBLaW5nIHdoYXQgdGhlIEF0aGVuaWFuIGhhZCBzYWlkLCBoZSBhZ2FpbiBicm91Z2h0IG91dCBhIGZ1cnRoZXIgd3JpdGluZzog4oCcQW5kIGlmIHRoZSBBdGhlbmlhbnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjciPjM2NyBCLkMuPC9kYXRlPjwvbm90ZT4gYXJlIGF3YXJlIG9mIGFueXRoaW5nIGp1c3RlciB0aGFuIHRoZXNlIHByb3Zpc2lvbnMsIGxldCB0aGVtIGNvbWUgdG8gdGhlIEtpbmcgYW5kIGluZm9ybSBoaW0u4oCdCjxkYXRlIGF1dGhuYW1lPSItMzY3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY3Ij4zNjcgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.1.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiB0aGUgYW1iYXNzYWRvcnMgaGFkIHJldHVybmVkIHRvIHRoZWlyIHNldmVyYWwgaG9tZXMsIFRpbWFnb3JhcyB3YXMgcHV0IHRvIGRlYXRoIGJ5IHRoZSBBdGhlbmlhbnMgb24gdGhlIGNvbXBsYWludCBvZiBMZW9uIHRoYXQgaGUgaGFkIHJlZnVzZWQgdG8gc2hhcmUgcXVhcnRlcnMgd2l0aCBoaW0gYW5kIGhhZCB0YWtlbiBjb3Vuc2VsIGluIGFsbCBtYXR0ZXJzIHdpdGggUGVsb3BpZGFzLiBBcyBmb3IgdGhlIG90aGVyIGFtYmFzc2Fkb3JzLCBBcmNoaWRhbXVzLCB0aGUgRWxlYW4sIHByYWlzZWQgdGhlIGRvaW5ncyBvZiB0aGUgS2luZywgYmVjYXVzZSBoZSBoYWQgaG9ub3VyZWQgRWxpcyBhYm92ZSB0aGUgQXJjYWRpYW5zOyBidXQgQW50aW9jaHVzLCBiZWNhdXNlIHRoZSBBcmNhZGlhbiBMZWFndWUgd2FzIGxlc3MgcmVnYXJkZWQsIGRpZCBub3QgYWNjZXB0IHRoZSByb3lhbCBnaWZ0cywgYW5kIHJlcG9ydGVkIGJhY2sgdG8gdGhlIFRlbiBUaG91c2FuZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gaS5lLiwgdGhlIEFyY2FkaWFuIGFzc2VtYmx5Ljwvbm90ZT4gdGhhdCB0aGUgS2luZyBoYWQgYmFrZXJzLCBhbmQgY29va3MsIGFuZCB3aW5lLXBvdXJlcnMsIGFuZCBkb29ya2VlcGVycyBpbiB2YXN0IG51bWJlcnMsIGJ1dCBhcyBmb3IgbWVuIHdobyBjb3VsZCBmaWdodCB3aXRoIEdyZWVrcywgaGUgc2FpZCB0aGF0IHRob3VnaCBoZSBzb3VnaHQgZGlsaWdlbnRseSBoZSBjb3VsZCBub3Qgc2VlIGFueS4gQmVzaWRlcyB0aGlzLCBoZSBzYWlkIHRoYXQgZm9yIGhpcyBwYXJ0IGhlIHRob3VnaHQgdGhhdCB0aGUgS2luZydzIHdlYWx0aCBvZiBtb25leSB3YXMgYWxzbyBtZXJlIHByZXRlbmNlLCBmb3IgaGUgc2FpZCB0aGF0IGV2ZW4gdGhlIGdvbGRlbiBwbGFuZS10cmVlLCB0aGF0IHdhcyBmb3JldmVyIGhhcnBlZCB1cG9uLCB3YXMgbm90IGxhcmdlIGVub3VnaCB0byBhZmZvcmQgc2hhZGUgZm9yIGEgZ3Jhc3Nob3BwZXIuCjwvdHJhbnNsYXRpb24+"
translation['7.1.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgVGhlYmFucyBoYWQgY2FsbGVkIHRvZ2V0aGVyIHJlcHJlc2VudGF0aXZlcyBmcm9tIGFsbCB0aGUgY2l0aWVzIHRvIGhlYXIgdGhlIGxldHRlciBmcm9tIHRoZSBLaW5nLCBhbmQgdGhlIFBlcnNpYW4gd2hvIGJvcmUgdGhlIGRvY3VtZW50LCBoYXZpbmcgc2hvd24gdGhlIEtpbmcncyBzZWFsLCBoYWQgcmVhZCB3aGF0IHdhcyB3cml0dGVuIHRoZXJlaW4sIGFsdGhvdWdoIHRoZSBUaGViYW5zIGRpcmVjdGVkIHRob3NlIHdobyBkZXNpcmVkIHRvIGJlIGZyaWVuZHMgb2YgdGhlIEtpbmcgYW5kIHRoZW1zZWx2ZXMgdG8gc3dlYXIgdG8gdGhlc2UgcHJvdmlzaW9ucywgdGhlIHJlcHJlc2VudGF0aXZlcyBmcm9tIHRoZSBjaXRpZXMgcmVwbGllZCB0aGF0IHRoZXkgaGFkIG5vdCBiZWVuIHNlbnQgdG8gZ2l2ZSB0aGVpciBvYXRocywgYnV0IHRvIGxpc3RlbjsgYW5kIGlmIHRoZSBUaGViYW5zIGhhZCBhbnkgZGVzaXJlIGZvciBvYXRocywgdGhleSBiYWRlIHRoZW0gc2VuZCB0byB0aGUgY2l0aWVzLiBJbmRlZWQgdGhlIEFyY2FkaWFuLCBMeWNvbWVkZXMsIHNhaWQgdGhpcyBiZXNpZGVzLCB0aGF0IGl0IHdhcyBub3QgZXZlbiBwcm9wZXIgZm9yIHRoZSBjb25ncmVzcyB0byBiZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NyI+MzY3IEIuQy48L2RhdGU+PC9ub3RlPiBoZWxkIGluIFRoZWJlcywgYnV0IHJhdGhlciBhdCB0aGUgc2VhdCBvZiB3YXIsIHdoZXJldmVyIGl0IG1pZ2h0IGJlLiBUaGVuLCBzaW5jZSB0aGUgVGhlYmFucyB3ZXJlIGFuZ3J5IHdpdGggaGltIGFuZCBzYWlkIHRoYXQgaGUgd2FzIGRlc3Ryb3lpbmcgdGhlIGNvbXBhY3Qgb2YgYWxsaWFuY2UsIGhlIHJlZnVzZWQgZXZlbiB0byBvY2N1cHkgYSBzZWF0IGF0IHRoZSBjb25ncmVzcywgYnV0IHRvb2sgaGltc2VsZiBvZmYsIGFuZCB3aXRoIGhpbSB3ZW50IGFsbCB0aGUgYW1iYXNzYWRvcnMgZnJvbSBBcmNhZGlhLgo8ZGF0ZSBhdXRobmFtZT0iLTM2NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NyI+MzY3IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.1.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSwgaW5hc211Y2ggYXMgdGhvc2Ugd2hvIGhhZCBjb21lIHRvZ2V0aGVyIHJlZnVzZWQgdG8gdGFrZSB0aGUgb2F0aCBhdCBUaGViZXMsIHRoZSBUaGViYW5zIHNlbnQgYW1iYXNzYWRvcnMgdG8gdGhlIGNpdGllcyBhbmQgZGlyZWN0ZWQgdGhlbSB0byBzd2VhciB0aGF0IHRoZXkgd291bGQgYWN0IGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgS2luZydzIGxldHRlciwgYmVsaWV2aW5nIHRoYXQgZWFjaCBvbmUgb2YgdGhlIGNpdGllcyB0YWtlbiBzaW5nbHkgd291bGQgaGVzaXRhdGUgdG8gaW5jdXIgdGhlIGhhdHJlZCBvZiB0aGVtc2VsdmVzIGFuZCB0aGUgS2luZyBhdCB0aGUgc2FtZSB0aW1lLiBXaGVuLCBob3dldmVyLCB1cG9uIHRoZSBhcnJpdmFsIG9mIHRoZSBhbWJhc3NhZG9ycyBhdCBDb3JpbnRoLCB0aGVpciBmaXJzdCBzdG9wcGluZy1wbGFjZSwgdGhlIENvcmludGhpYW5zIHJlc2lzdGVkIHRoZSBwcm9wb3NhbCwgYW5kIHJlcGxpZWQgdGhhdCB0aGV5IGhhZCBubyBkZXNpcmUgZm9yIG9hdGhzIHNoYXJlZCB3aXRoIHRoZSBLaW5nLCB0aGVuIG90aGVyIGNpdGllcyBhbHNvIGZvbGxvd2VkIHN1aXQsIGdpdmluZyB0aGVpciBhbnN3ZXJzIGluIHRoZSBzYW1lIHRlcm1zLiBUaHVzIGl0IHdhcyB0aGF0IHRoaXMgYXR0ZW1wdCBvbiB0aGUgcGFydCBvZiBQZWxvcGlkYXMgYW5kIHRoZSBUaGViYW5zIHRvIGdhaW4gdGhlIGxlYWRlcnNoaXAgY2FtZSB0byBpdHMgZW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RXBhbWlub25kYXMsIG9uIHRoZSBvdGhlciBoYW5kLCB3aXNoaW5nIHRvIGJyaW5nIG92ZXIgdGhlIEFjaGFlYW5zIHRvIHRoZSBzaWRlIG9mIHRoZSBUaGViYW5zLCBpbiBvcmRlciB0aGF0IHRoZSBBcmNhZGlhbnMgYW5kIHRoZSBvdGhlciBhbGxpZXMgbWlnaHQgYmUgbW9yZSBpbmNsaW5lZCB0byBnaXZlIGhlZWQgdG8gdGhlbSwgZGVjaWRlZCB0aGF0IGhlIG11c3QgbWFyY2ggZm9ydGggYWdhaW5zdCBBY2hhZWEuIEhlIHRoZXJlZm9yZSBwZXJzdWFkZWQgUGVpc2lhcywgdGhlIEFyZ2l2ZSwgd2hvIGhlbGQgdGhlIHBvc2l0aW9uIG9mIGdlbmVyYWwgYXQgQXJnb3MsIHRvIG9jY3VweSBPbmV1bTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gQSBtb3VudGFpbiByYW5nZSwgc291dGgtZWFzdCBvZiBDb3JpbnRoLCBvdmVyIHdoaWNoIHRoZSByb2FkIGZyb20gTm9ydGhlcm4gR3JlZWNlIGludG8gUGVsb3Bvbm5lc3VzIHBhc3NlZC48L25vdGU+IGluIGFkdmFuY2UuIEFuZCBQZWlzaWFzLCBhZnRlciBoZSBoYWQgbGVhcm5lZCB0aGF0IHRoZSBndWFyZCBvdmVyIE9uZXVtIHdhcyBiZWluZyBtYWludGFpbmVkIGNhcmVsZXNzbHkgYnkgTmF1Y2xlcywgd2hvIGNvbW1hbmRlZCB0aGUgbWVyY2VuYXJ5IHRyb29wcyBvZiB0aGUgTGFjZWRhZW1vbmlhbnMsIGFuZCBieSBUaW1vbWFjaHVzLCB0aGUgQXRoZW5pYW4sIGRpZCBpbmRlZWQgc2VpemUgdGhlIGhpbGwgYWJvdmUgQ2VuY2hyZWFlIGJ5IG5pZ2h0IHdpdGg8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjciPjM2NyBCLkMuPC9kYXRlPjwvbm90ZT4gdHdvIHRob3VzYW5kIGhvcGxpdGVzLCBoYXZpbmcgcHJvdmlzaW9ucyBmb3Igc2V2ZW4gZGF5cy4KPGRhdGUgYXV0aG5hbWU9Ii0zNjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjciPjM2NyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.1.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5XaXRoaW4gdGhpcyBudW1iZXIgb2YgZGF5cyB0aGUgVGhlYmFucyBhcnJpdmVkIGFuZCBjcm9zc2VkIG92ZXIgT25ldW0sIGFuZCBhbGwgdGhlIGFsbGllcyB0aGVyZXVwb24gbWFyY2hlZCBhZ2FpbnN0IEFjaGFlYSwgdW5kZXIgdGhlIGxlYWRlcnNoaXAgb2YgRXBhbWlub25kYXMuIE5vdyB1cG9uIHRoZSB1cmdlbnQgZW50cmVhdHkgd2hpY2ggdGhlIGFyaXN0b2NyYXRzIG9mIEFjaGFlYSBhZGRyZXNzZWQgdG8gaGltLCBFcGFtaW5vbmRhcyBlZmZlY3RlZCB0aHJvdWdoIGhpcyBwZXJzb25hbCBpbmZsdWVuY2UgYW4gYXJyYW5nZW1lbnQgdGhhdCB0aGVpciBvcHBvbmVudHMgd2VyZSBub3QgdG8gYmFuaXNoIHRoZSBhcmlzdG9jcmF0cyBvciB0byBjaGFuZ2UgdGhlIGZvcm0gb2YgZ292ZXJubWVudCwgYnV0IGFmdGVyIHJlY2VpdmluZyBwbGVkZ2VzIGZyb20gdGhlIEFjaGFlYW5zIHRoYXQgaW4gdmVyeSB0cnV0aCB0aGV5IHdvdWxkIGJlIGFsbGllcyBhbmQgd291bGQgZm9sbG93IHdoZXJldmVyIHRoZSBUaGViYW5zIGxlZCB0aGUgd2F5LCBoZSB0aGVyZXVwb24gcmV0dXJuZWQgaG9tZS4KPC90cmFuc2xhdGlvbj4="
translation['7.1.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBob3dldmVyLCB0aGUgQXJjYWRpYW5zIGFuZCB0aGUgQWNoYWVhbiBvcHBvc2l0aW9uIGJyb3VnaHQgYWdhaW5zdCBoaW0gdGhlIGNoYXJnZSB0aGF0IGhlIGhhZCBhcmFuZ2VkIG1hdHRlcnMgaW4gQWNoYWVhIGluIHRoZSBpbnRlcmVzdCBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIGhhZCB0aGVuIGdvbmUgYXdheSwgdGhlIFRoZWJhbnMgcmVzb2x2ZWQgdG8gc2VuZCBnb3Zlcm5vcnMgdG8gdGhlIEFjaGFlYW4gY2l0aWVzLiBXaGVuIHRoZXkgYXJyaXZlZCB0aGV5IGRyb3ZlIG91dCB0aGUgYXJpc3RvY3JhdHMsIHdpdGggdGhlIGFzc2lzdGFuY2Ugb2YgdGhlIGNvbW1vbnMsIGFuZCBlc3RhYmxpc2hlZCBkZW1vY3JhY2llcyBpbiBBY2hhZWEuIEJ1dCB0aG9zZSB3aG8gaGFkIGJlZW4gdGh1cyBleGlsZWQgc3BlZWRpbHkgYmFuZGVkIHRoZW1zZWx2ZXMgdG9nZXRoZXIsIHByb2NlZWRlZCBhZ2FpbnN0IGVhY2ggb25lIG9mIHRoZSBjaXRpZXMgc2luZ2x5LCBhbmQgYXMgdGhleSB3ZXJlIG5vdCBmZXcgaW4gbnVtYmVyLCBhY2NvbXBsaXNoZWQgdGhlaXIgcmVzdG9yYXRpb24gYW5kIGdhaW5lZCBwb3NzZXNzaW9uIG9mIHRoZSBjaXRpZXMuIFRoZW4sIHNpbmNlIGFmdGVyIHRoZWlyIHJlc3RvcmF0aW9uIHRoZXkgbm8gbG9uZ2VyIGZvbGxvd2VkIGEgbmV1dHJhbCBjb3Vyc2UsIGJ1dCBmb3VnaHQgemVhbG91c2x5IGluIHN1cHBvcnQgb2YgdGhlIExhY2VkYWVtb25pYW5zLCB0aGUgQXJjYWRpYW5zIHdlcmUgaGFyZCBwcmVzc2VkIGJ5IHRoZSBMYWNlZGFlbW9uaWFucyBvbiB0aGUgb25lIHNpZGUgYW5kIGJ5IHRoZSBBY2hhZWFucyBvbiB0aGUgb3RoZXIuCjwvdHJhbnNsYXRpb24+"
translation['7.1.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIFNpY3lvbiwgaXRzIGdvdmVybm1lbnQgdXAgdG8gdGhpcyB0aW1lIGhhZCBiZWVuIGluIGNvbmZvcm1pdHkgd2l0aCBpdHMgYW5jaWVudCBsYXdzLiBCdXQgbm93IEV1cGhyb24sIHdobyBoYWQgYmVlbiB0aGUgbW9zdCBwb3dlcmZ1bCBvZiB0aGUgY2l0aXplbnMgaW4gaGlzIGluZmx1ZW5jZSB3aXRoIHRoZSBMYWNlZGFlbW9uaWFucyBhbmQgd2lzaGVkIGluIGxpa2UgbWFubmVyIHRvIHN0YW5kIGZpcnN0IHdpdGggdGhlaXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjciPjM2NyBCLkMuPC9kYXRlPjwvbm90ZT4gYWR2ZXJzYXJpZXMgYWxzbywgc2FpZCB0byB0aGUgQXJnaXZlcyBhbmQgdG8gdGhlIEFyY2FkaWFucyB0aGF0IGlmIHRoZSByaWNoZXN0IG1lbiBzaG91bGQgcmVtYWluIGluIGNvbnRyb2wgb2YgU2ljeW9uLCBpdCB3YXMgbWFuaWZlc3QgdGhhdCB3aGVuZXZlciBhbiBvcHBvcnR1bml0eSBvZmZlcmVkLCB0aGUgY2l0eSB3b3VsZCBnbyBvdmVyIHRvIHRoZSBMYWNlZGFlbW9uaWFucyBhZ2Fpbiwg4oCcd2hpbGUgaWYgYSBkZW1vY3JhY3kgaXMgZXN0YWJsaXNoZWQsIGJlIHdlbGwgYXNzdXJlZCzigJ0gaGUgc2FpZCwg4oCcdGhhdCB0aGUgY2l0eSB3aWxsIHJlbWFpbiB0cnVlIHRvIHlvdS4gSWYsIHRoZXJlZm9yZSwgeW91IHdpbGwgYmUgYXQgaGFuZCB0byBzdXBwb3J0IG1lLCBJIHdpbGwgYmUgdGhlIG9uZSB0byBjYWxsIHRoZSBwZW9wbGUgdG9nZXRoZXIsIGFuZCBJIHdpbGwgbm90IG9ubHkgZ2l2ZSB5b3UgaW4gdGhpcyBhY3QgYSBwbGVkZ2Ugb2YgbXkgZ29vZCBmYWl0aCwgYnV0IHdpbGwgbWFrZSB0aGUgY2l0eSBzdGVhZGZhc3QgaW4gaXRzIGFsbGlhbmNlIHdpdGggeW91LiBUaGlzIEkgZG8sIHlvdSBtdXN0IHVuZGVyc3RhbmQs4oCdIGhlIHNhaWQsIOKAnGJlY2F1c2UsIGxpa2UgeW91cnNlbHZlcywgSSBoYXZlIGxvbmcgZm91bmQgdGhlIGFycm9nYW5jZSBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgaGFyZCB0byBlbmR1cmUsIGFuZCBJIHNob3VsZCBiZSBnbGFkIHRvIGVzY2FwZSBmcm9tIHNlcnZpdHVkZSB0byB0aGVtLuKAnQo8ZGF0ZSBhdXRobmFtZT0iLTM2NyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NyI+MzY3IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.1.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmdseSB0aGUgQXJjYWRpYW5zIGFuZCB0aGUgQXJnaXZlcywgdXBvbiBoZWFyaW5nIHRoZXNlIHdvcmRzLCBnbGFkbHkgcHJlc2VudGVkIHRoZW1zZWx2ZXMgdG8gc3VwcG9ydCBoaW0uIFRoZW4gaGUgaW1tZWRpYXRlbHkgY2FsbGVkIHRoZSBwZW9wbGUgdG9nZXRoZXIgaW4gdGhlIG1hcmtldC1wbGFjZSBpbiB0aGUgcHJlc2VuY2Ugb2YgdGhlIEFyZ2l2ZXMgYW5kIHRoZSBBcmNhZGlhbnMsIGFubm91bmNpbmcgdGhhdCB0aGUgZ292ZXJubWVudCB3YXMgdG8gYmUgb24gdGVybXMgb2YgZnVsbCBlcXVhbGl0eS4gV2hlbiB0aGV5IGhhZCBjb21lIHRvZ2V0aGVyLCBoZSBiYWRlIHRoZW0gY2hvb3NlIHdob21zb2V2ZXIgdGhleSBzYXcgZml0IGFzIGdlbmVyYWxzOyBhbmQgdGhleSBjaG9zZSBFdXBocm9uIGhpbXNlbGYsIEhpcHBvZGFtdXMsIENsZWFuZGVyLCBBY3Jpc2l1cywgYW5kIEx5c2FuZGVyLiBXaGVuIHRoaXMgaGFkIGJlZW4gZG9uZSwgaGUgYWxzbyBhcHBvaW50ZWQgQWRlYXMsIGhpcyBvd24gc29uLCB0byB0aGUgY29tbWFuZCBvZiB0aGUgbWVyY2VuYXJ5IHRyb29wcywgcmVtb3ZpbmcgTHlzaW1lbmVzLCB0aGVpciBmb3JtZXIgY29tbWFuZGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.1.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgc3RyYWlnaHR3YXkgRXVwaHJvbiBtYWRlIHNvbWUgb2YgdGhlc2UgbWVyY2VuYXJpZXMgZmFpdGhmdWwgdG8gaGltIGJ5IHRyZWF0aW5nIHRoZW0gZ2VuZXJvdXNseSwgYW5kIHRvb2sgb3RoZXJzIGludG8gaGlzIHBheSwgc3BhcmluZyBuZWl0aGVyIHRoZSBwdWJsaWMgbm9yIHRoZSBzYWNyZWQgZnVuZHMuIEhlIGxpa2V3aXNlIGF2YWlsZWQgaGltc2VsZiBvZiB0aGUgcHJvcGVydHkgb2YgYWxsIHRob3NlIHdob20gaGUgYmFuaXNoZWQgZm9yIGZhdm91cmluZyB0aGUgTGFjZWRhZW1vbmlhbnMuIEZ1cnRoZXJtb3JlLCBoZSB0cmVhY2hlcm91c2x5IHB1dCB0byBkZWF0aCBzb21lPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY3IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY3Ij4zNjcgQi5DLjwvZGF0ZT48L25vdGU+IG9mIGhpcyBmZWxsb3ctb2ZmaWNpYWxzIGFuZCBiYW5pc2hlZCBvdGhlcnMsIHNvIHRoYXQgaGUgYnJvdWdodCBldmVyeXRoaW5nIHVuZGVyIGhpcyBjb250cm9sIGFuZCB3YXMgbWFuaWZlc3RseSBhIHR5cmFudC4gQW5kIGhlIG1hbmFnZWQgdG8gaW5kdWNlIGhpcyBhbGxpZXMgdG8gcGVybWl0IHRoZXNlIHByb2NlZWRpbmdzIG9mIGhpcywgcGFydGx5IGJ5IHRoZSB1c2Ugb2YgbW9uZXksIGFuZCBwYXJ0bHkgYnkgZm9sbG93aW5nIHdpdGggdGhlbSB6ZWFsb3VzbHkgYXQgdGhlIGhlYWQgb2YgaGlzIG1lcmNlbmFyeSBmb3JjZSB3aGVyZXZlciB0aGV5IG1hZGUgYW4gZXhwZWRpdGlvbi4KPGRhdGUgYXV0aG5hbWU9Ii0zNjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjciPjM2NyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.2.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZXNlIG1hdHRlcnMgaGFkIHByb2dyZXNzZWQgdG8gdGhpczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PC9ub3RlPiBwb2ludCBhbmQgdGhlIEFyZ2l2ZXMgaGFkIGZvcnRpZmllZCBNb3VudCBUcmljYXJhbnVtLCBhYm92ZSB0aGUgSGVyYWV1bSwgYXMgYSBiYXNlIG9mIGF0dGFjayB1cG9uIFBobGl1cywgd2hpbGUgdGhlIFNpY3lvbmlhbnMgd2VyZSBmb3J0aWZ5aW5nIFRoeWFtaWEgb24gaXRzIGJvcmRlcnMsIHRoZSBQaGxpYXNpYW5zIHdlcmUgZXhjZWVkaW5nbHkgaGFyZCBwcmVzc2VkIGFuZCBzdWZmZXJlZCBmcm9tIGxhY2sgb2YgcHJvdmlzaW9uczsgbmV2ZXJ0aGVsZXNzLCB0aGV5IHJlbWFpbmVkIHN0ZWFkZmFzdCBpbiB0aGVpciBhbGxpYW5jZS4gQnV0IEkgd2lsbCBzcGVhayBmdXJ0aGVyIG9mIHRoZW07IGZvciB3aGlsZSBhbGwgdGhlIGhpc3RvcmlhbnMgbWFrZSBtZW50aW9uIG9mIHRoZSBsYXJnZSBzdGF0ZXMgaWYgdGhleSBoYXZlIHBlcmZvcm1lZCBhbnkgbm9ibGUgYWNoaWV2ZW1lbnQsIGl0IHNlZW1zIHRvIG1lIHRoYXQgaWYgYSBzdGF0ZSB3aGljaCBpcyBzbWFsbCBoYXMgYWNjb21wbGlzaGVkIG1hbnkgbm9ibGUgZGVlZHMsIGl0IGlzIGV2ZW4gbW9yZSBmaXR0aW5nIHRvIHNldCB0aGVtIGZvcnRoLgo8ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.2.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPk5vdyB0aGUgUGhsaWFzaWFucyBoYWQgYmVjb21lIGZyaWVuZHMgb2YgdGhlIExhY2VkYWVtb25pYW5zIGF0IGEgdGltZSB3aGVuIHRoZXkgd2VyZSBncmVhdGVzdDsgYW5kIHdoZW4gdGhleSBoYWQgYmVlbiBkZWZlYXRlZCBpbiB0aGUgYmF0dGxlIGF0IExldWN0cmEsIHdoZW4gbWFueSBvZiB0aGUgUGVyaW9lY2kgaGFkIHJldm9sdGVkIGZyb20gdGhlbSBhbmQgYWxsIHRoZSBIZWxvdHMgYWxzbyBoYWQgcmV2b2x0ZWQsIGFuZCBsaWtld2lzZSB0aGVpciBhbGxpZXMgd2l0aCB0aGUgZXhjZXB0aW9uIG9mIGEgdmVyeSBmZXcsIGFuZCB3aGVuIGFsbCB0aGUgR3JlZWtzLCBvbmUgbWlnaHQgc2F5LCB3ZXJlIGluIHRoZSBmaWVsZCBhZ2FpbnN0IHRoZW0sIHRoZSBQaGxpYXNpYW5zIHJlbWFpbmVkIHN0ZWFkZmFzdGx5IGZhaXRoZnVsLCBhbmQsIHRob3VnaCB0aGV5IGhhZCBhcyBlbmVtaWVzIHRoZSBtb3N0IHBvd2VyZnVsIG9mIHRoZSBwZW9wbGVzIGluIFBlbG9wb25uZXN1cyDigJQgdGhlIEFyY2FkaWFucyBhbmQgQXJnaXZlcyDigJQgbmV2ZXJ0aGVsZXNzIHdlbnQgdG88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlaXIgYXNzaXN0YW5jZS4gRnVydGhlcm1vcmUsIHdoZW4gaXQgZmVsbCB0byB0aGVpciBsb3QgdG8gY3Jvc3Mgb3ZlciB0byBQcmFzaWFlIGxhc3Qgb2YgdGhvc2Ugd2hvIGpvaW5lZCBpbiB0aGUgZXhwZWRpdGlvbiAoYW5kIHRoZXNlIHdlcmUgdGhlIENvcmludGhpYW5zLCBFcGlkYXVyaWFucywgVHJvZXplbmlhbnMsIEhlcm1pb25pYW5zLCBIYWxpYW5zLDxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzAgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNzAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNzAiPjM3MCBCLkMuPC9kYXRlPjwvbm90ZT4gU2ljeW9uaWFucywgYW5kIFBlbGxlbmVhbnMg4oCUCjxkYXRlIGF1dGhuYW1lPSItMzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzcwIj4zNzAgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.2.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPmZvciBhdCB0aGF0IHRpbWUgdGhlIGxhc3QgbWVudGlvbmVkIGhhZCBub3QgeWV0IHJldm9sdGVkIGZyb20gdGhlIExhY2VkYWVtb25pYW5zKSwgZXZlbiB3aGVuIHRoZSBMYWNlZGFlbW9uaWFuIGxlYWRlciB3ZW50IG9mZiB3aXRoIHRob3NlIHdobyBoYWQgY3Jvc3NlZCBmaXJzdCBhbmQgbGVmdCB0aGUgUGhsaWFzaWFucywgZXZlbiBzbyB0aGV5IGRpZCBub3QgdHVybiBiYWNrLCBidXQgaGlyZWQgYSBndWlkZSBmcm9tIFByYXNpYWUsIGFuZCwgYWx0aG91Z2ggdGhlIGVuZW15IHdlcmUgaW4gdGhlIG5laWdoYm91cmhvb2Qgb2YgQW15Y2xhZSwgc2xpcHBlZCB0aHJvdWdoIGFzIGJlc3QgdGhleSBjb3VsZCBhbmQgcmVhY2hlZCBTcGFydGEuIEFuZCB0aGUgTGFjZWRhZW1vbmlhbnMsIGJlc2lkZXMgaG9ub3VyaW5nIHRoZW0gaW4gb3RoZXIgd2F5cywgc2VudCB0aGVtIGFuIG94IGFzIGEgZ2lmdCBvZiBob3NwaXRhbGl0eS4KPC90cmFuc2xhdGlvbj4="
translation['7.2.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPkFnYWluLCB3aGVuIHRoZSBlbmVteSBoYWQgcmV0aXJlZCBmcm9tIExhY2VkYWVtb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY5IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY5Ij4zNjkgQi5DLjwvZGF0ZT48L25vdGU+IGFuZCB0aGUgQXJnaXZlcywgaW4gYW5nZXIgYXQgdGhlIGRldm90aW9uIG9mIHRoZSBQaGxpYXNpYW5zIHRvd2FyZCB0aGUgTGFjZWRhZW1vbmlhbnMsIGhhZCBpbnZhZGVkIHRoZSB0ZXJyaXRvcnkgb2YgUGhsaXVzIGluIGZ1bGwgZm9yY2UgYW5kIHdlcmUgbGF5aW5nIHdhc3RlIHRoZWlyIGxhbmQsIGV2ZW4gdGhlbiB0aGV5IGRpZCBub3QgeWllbGQ7IGJ1dCB3aGVuIHRoZSBBcmdpdmVzIHdlcmUgd2l0aGRyYXdpbmcsIGFmdGVyIGhhdmluZyBkZXN0cm95ZWQgYXMgbXVjaCBhcyB0aGV5IGNvdWxkLCB0aGUgaG9yc2VtZW4gb2YgdGhlIFBobGlhc2lhbnMgc2FsbGllZCBmb3J0aCBhbmQgZm9sbG93ZWQgYWZ0ZXIgdGhlbSwgYW5kLCBhbHRob3VnaCBhbGwgdGhlIEFyZ2l2ZSBob3JzZW1lbiBhbmQgdGhlIGNvbXBhbmllcyBwb3N0ZWQgYmVoaW5kIHRoZW0gd2VyZSBlbXBsb3llZCB0byBndWFyZCB0aGVpciByZWFyLCB0aGUgUGhsaWFzaWFucyBuZXZlcnRoZWxlc3MsIHdobyB3ZXJlIGJ1dCBzaXh0eSBpbiBudW1iZXIsIGF0dGFja2VkIHRoZXNlIHRyb29wcyBhbmQgdHVybmVkIHRvIGZsaWdodCB0aGUgZW50aXJlIHJlYXJndWFyZDsgdG8gYmUgc3VyZSB0aGV5IGtpbGxlZCBidXQgZmV3IG9mIHRoZW0sIHlldCB0aGV5IHNldCB1cCBhIHRyb3BoeSwgd2l0aCB0aGUgQXJnaXZlcyBsb29raW5nIG9uLCBwcmVjaXNlbHkgYXMgaWYgdGhleSBoYWQga2lsbGVkIHRoZW0gYWxsLgo8ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.2.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbmNlIGFnYWluLCB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIHRoZWlyIGFsbGllcyB3ZXJlIGd1YXJkaW5nIE9uZXVtLCBhbmQgdGhlIFRoZWJhbnMgd2VyZSBhcHByb2FjaGluZyB3aXRoIHRoZSBpbnRlbnRpb24gb2YgY3Jvc3Npbmcgb3ZlciB0aGUgbW91bnRhaW4uIEF0IHRoaXMgdGltZSwgYXMgdGhlIEFyY2FkaWFucyBhbmQgRWxlYW5zIHdlcmUgbWFyY2hpbmcgdGhyb3VnaCBOZW1lYSBpbiBvcmRlciB0byBlZmZlY3QgYSBqdW5jdGlvbiB3aXRoIHRoZSBUaGViYW5zLCBleGlsZXMgb2YgdGhlIFBobGlhc2lhbnMgbWFkZSB0aGVtIGFuIG9mZmVyIHRoYXQgaWYgdGhleSB3b3VsZCBvbmx5IHB1dCBpbiBhbiBhcHBlYXJhbmNlIHRvIGhlbHAgdGhlaXIgcGFydHksIHRoZXkgd291bGQgY2FwdHVyZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PC9ub3RlPiBQaGxpdXM7IGFuZCB3aGVuIHRoaXMgcGxhbiBoYWQgYmVlbiBhZ3JlZWQgdXBvbiwgZHVyaW5nIHRoZSBuaWdodCB0aGUgZXhpbGVzIGFuZCBvdGhlcnMgd2l0aCB0aGVtLCBhYm91dCBzaXggaHVuZHJlZCBpbiBudW1iZXIsIHNldCB0aGVtc2VsdmVzIGluIGFtYnVzaCBjbG9zZSB1bmRlciB0aGUgd2FsbCB3aXRoIHNjYWxpbmcgbGFkZGVycy4gVGhlbiBhcyBzb29uIGFzIHRoZSB3YXRjaG1lbiBzaWduYWxsZWQgZnJvbSBUcmljYXJhbnVtIHRoYXQgZW5lbWllcyB3ZXJlIGFwcHJvYWNoaW5nLCBhbmQgdGhlIGNpdHkgd2FzIGdpdmluZyBpdHMgYXR0ZW50aW9uIHRvIHRoZXNlIGxhc3QsIGF0IHRoaXMgbW9tZW50IHRob3NlIHdobyBzb3VnaHQgdG8gYmV0cmF5IHRoZSBjaXR5IHNpZ25hbGxlZCB0byB0aGUgcGVvcGxlIGluIGFtYnVzaCB0byBjbGltYiB1cC4KPGRhdGUgYXV0aG5hbWU9Ii0zNjkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjkiPjM2OSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.2.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPldoZW4gdGhleSBoYWQgY2xpbWJlZCB1cCBhbmQgZm91bmQgdGhlIHBvc3RzIG9mIHRoZSBndWFyZHMgd2Vha2x5IG1hbm5lZCwgdGhleSBwdXJzdWVkIHRoZSBkYXktZ3VhcmRzLCB3aG8gbnVtYmVyZWQgdGVuIChmb3Igb25lIG91dCBvZiBlYWNoIHNxdWFkIG9mIGZpdmUgd2FzIHJlZ3VsYXJseSBsZWZ0IGJlaGluZCBhcyBhIGRheS1ndWFyZCk7IGFuZCB0aGV5IGtpbGxlZCBvbmUgd2hpbGUgaGUgd2FzIHN0aWxsIGFzbGVlcCBhbmQgYW5vdGhlciBhZnRlciBoZSBoYWQgZmxlZCBmb3IgcmVmdWdlIHRvIHRoZSBIZXJhZXVtLiBBbmQgc2luY2UgdGhlIG90aGVyIGRheS1ndWFyZHMgaW4gdGhlaXIgZmxpZ2h0IGxlYXBlZCBkb3duIGZyb20gdGhlIHdhbGwgb24gdGhlIHNpZGUgbG9va2luZyB0b3dhcmQgdGhlIGNpdHksIHRoZSBtZW4gd2hvIGhhZCBjbGltYmVkIHVwIHdlcmUgaW4gdW5kaXNwdXRlZCBwb3NzZXNzaW9uIG9mIHRoZSBBY3JvcG9saXMuCjwvdHJhbnNsYXRpb24+"
translation['7.2.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB3aGVuIGFuIG91dGNyeSByZWFjaGVkIHRoZSBjaXR5IGFuZCB0aGUgY2l0aXplbnMgY2FtZSB0byB0aGUgcmVzY3VlLCBhdCBmaXJzdCB0aGUgZW5lbXkgaXNzdWVkIGZvcnRoIGZyb20gdGhlIEFjcm9wb2xpcyBhbmQgZm91Z2h0IGluIHRoZSBzcGFjZSBpbiBmcm9udCBvZiB0aGUgZ2F0ZXMgd2hpY2ggbGVhZCB0byB0aGUgY2l0eTsgYWZ0ZXJ3YXJkcywgYmVpbmcgYmVzZXQgb24gYWxsIHNpZGVzIGJ5IHRob3NlIHdobyBjYW1lIGFnYWluc3QgdGhlbSwgdGhleSB3aXRoZHJldyBhZ2FpbiB0byB0aGUgQWNyb3BvbGlzOyBhbmQgdGhlIGNpdGl6ZW5zIHBvdXJlZCBpbiB3aXRoIHRoZW0uIE5vdyB0aGUgc3BhY2Ugd2l0aGluIHRoZSBBY3JvcG9saXMgd2FzIGNsZWFyZWQgYXQgb25jZSwgYnV0IHRoZSBlbmVteSBtb3VudGVkIHVwb24gdGhlIHdhbGwgYW5kIHRoZSB0b3dlcnMgYW5kIHNob3dlcmVkIGJsb3dzIGFuZCBtaXNzaWxlcyB1cG9uIHRoZSBwZW9wbGUgd2hvIHdlcmUgd2l0aGluLiBNZWFud2hpbGUgdGhlIGxhdHRlciBkZWZlbmRlZCB0aGVtc2VsdmVzIGZyb20gdGhlIGdyb3VuZCBhbmQgYXR0YWNrZWQgdGhlIGVuZW15IGJ5IHRoZSBzdGVwcyB3aGljaCBsZWQgdXAgdG8gdGhlIHdhbGwuCjwvdHJhbnNsYXRpb24+"
translation['7.2.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPldoZW4sIGhvd2V2ZXIsIHRoZSBjaXRpemVucyBnYWluZWQgcG9zc2Vzc2lvbiBvZiBzb21lIG9mIHRoZSB0b3dlcnMgb24gdGhpcyBzaWRlIGFuZCBvbiB0aGF0LCB0aGV5IGNsb3NlZCBpbiBkZXNwZXJhdGUgYmF0dGxlIHdpdGggdGhvc2Ugd2hvIGhhZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PC9ub3RlPiBtb3VudGVkIHVwb24gdGhlaXIgd2FsbHMuIEFuZCB0aGUgZW5lbXksIGFzIHRoZXkgd2VyZSBmb3JjZWQgYmFjayBieSB0aGVtIOKAlCBieSB0aGVpciBjb3VyYWdlIGFzIHdlbGwgYXMgYnkgdGhlaXIgZmlnaHRpbmcg4oCUIHdlcmUgYmVpbmcgY3Jvd2RlZCB0b2dldGhlciBpbnRvIGFuIGV2ZXIgc21hbGxlciBzcGFjZS4gQXQgdGhpcyBjcml0aWNhbCBtb21lbnQgdGhlIEFyY2FkaWFucyBhbmQgQXJnaXZlcyB3ZXJlIGNpcmNsaW5nIGFyb3VuZCB0aGUgY2l0eSBhbmQgYmVnaW5uaW5nIHRvIGRpZyB0aHJvdWdoIHRoZSB3YWxsIG9mIHRoZSBBY3JvcG9saXMgZnJvbSBpdHMgdXBwZXIgc2lkZTs8ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBUaGUgd2FsbCBvZiB0aGUgQWNyb3BvbGlzIG9uIG9uZSBzaWRlIG1hZGUgcGFydCBvZiB0aGUgY2l0eSB3YWxsLCB3aGlsZSBvbiB0aGUgb3RoZXIgc2lkZSBpdCBzZXBhcmF0ZWQgdGhlIEFjcm9wb2xpcyBmcm9tIHRoZSBsb3dlciBjaXR5LiBUaGUgQXJjYWRpYW5zIGFuZCBBcmdpdmVzIGFyZSBtYW5pZmVzdGx5IGF0dGFja2luZyB0aGUgZmlyc3QgbWVudGlvbmVkLCBpLmUuLCBvdXRlciwgcGFydCBvZiB0aGUgd2FsbCBvZiB0aGUgQWNyb3BvbGlzOyBidXQgdGhlIHByZWNpc2UgbWVhbmluZyBvZiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6xz4ThvbAgzrrOtc+GzrHOu+G9tc69PC9mb3JlaWduPiBpcyB1bmNlcnRhaW4uPC9ub3RlPiBhbmQgYXMgZm9yIHRoZSBjaXRpemVucyB3aXRoaW4sIHNvbWUgd2VyZSBkZWFsaW5nIGJsb3dzIHVwb24gdGhlIHBlb3BsZSBvbiB0aGUgd2FsbCwgb3RoZXJzIHVwb24gdGhvc2Ugd2hvIHdlcmUgc3RpbGwgY2xpbWJpbmcgdXAgZnJvbSB0aGUgb3V0c2lkZSBhbmQgd2VyZSBvbiB0aGUgbGFkZGVycywgYW5kIHN0aWxsIG90aGVycyB3ZXJlIGZpZ2h0aW5nIGFnYWluc3QgdGhvc2UgYW1vbmcgdGhlIGVuZW15IHdobyBoYWQgbW91bnRlZCB1cG9uIHRoZSB0b3dlcnM7IHRoZXkgYWxzbyBmb3VuZCBmaXJlIGluIHRoZSB0ZW50cyBhbmQgYmVnYW4gdG8gc2V0IHRoZSB0b3dlcnMgYWJsYXplIGZyb20gYmVsb3csIGJyaW5naW5nIHVwIHNvbWUgc2hlYXZlcyB3aGljaCBjaGFuY2VkIHRvIGhhdmUgYmVlbiBoYXJ2ZXN0ZWQgb24gdGhlIEFjcm9wb2xpcyBpdHNlbGYuIFRoZW4gdGhlIHBlb3BsZSB1cG9uIHRoZSB0b3dlcnMsIGluIGZlYXIgb2YgdGhlIGZsYW1lcywganVtcGVkIG9mZiBvbmUgYWZ0ZXIgYW5vdGhlciwgd2hpbGUgdGhvc2UgdXBvbiB0aGUgd2FsbHMsIHVuZGVyIHRoZSBibG93cyBvZiB0aGVpciBodW1hbiBhZHZlcnNhcmllcywga2VwdCBmYWxsaW5nIG9mZi4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOsc+E4b2wIM66zrXPhs6xzrvhvbXOvTwvZm9yZWlnbj4gaXMgdW5jZXJ0YWluLjwvdHJhbnNsYXRpb24+"
translation['7.2.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZXkgaGFkIG9uY2UgYmVndW4gdG8gZ2l2ZSB3YXksIHNwZWVkaWx5IHRoZSB3aG9sZSBBY3JvcG9saXMgaGFkIGJlY29tZSBiYXJlIG9mIHRoZSBlbmVteS4gVGhlcmV1cG9uIHRoZSBob3JzZW1lbiBzdHJhaWdodHdheSBzYWxsaWVkIGZvcnRoIGZyb20gdGhlIGNpdHk7IGFuZCB0aGUgZW5lbXkgdXBvbiBzZWVpbmcgdGhlbSByZXRpcmVkLCBsZWF2aW5nIGJlaGluZCB0aGVpciBsYWRkZXJzLCB0aGVpciBkZWFkLCBhbmQgbGlrZXdpc2Ugc29tZSBvZiB0aGUgbGl2aW5nIHdobyBoYWQgYmVlbiBiYWRseSBsYW1lZC4gQW5kIHRoZSBudW1iZXIgb2YgdGhlIGVuZW15IHdobyB3ZXJlIGtpbGxlZCwgYm90aCBpbiB0aGUgZmlnaHRpbmcgd2l0aGluIGFuZCBieSBsZWFwaW5nIGRvd24gd2l0aG91dCwgd2FzIG5vdCBsZXNzIHRoYW4gZWlnaHR5LiBUaGVuIG9uZSBtaWdodCBoYXZlIGJlaGVsZCB0aGUgbWVuIGNvbmdyYXR1bGF0aW5nIG9uZSBhbm90aGVyIHdpdGggaGFuZGNsYXNwcyBvbiB0aGVpciBwcmVzZXJ2YXRpb24sIGFuZCB0aGUgd29tZW4gYnJpbmdpbmcgdGhlbSBkcmluayBhbmQgYXQgdGhlIHNhbWUgdGltZSBjcnlpbmcgZm9yIGpveS4gSW5kZWVkLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PC9ub3RlPiDigJxsYXVnaHRlciBtaW5nbGVkIHdpdGggdGVhcnPigJ08ZGF0ZSBhdXRobmFtZT0iLTM2OSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2OSI+MzY5IEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBBbiBhbGx1c2lvbiB0byA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5JbGlhZDwvdGl0bGU+IHZpLiA0ODQsPC9ub3RlPiBkaWQgb24gdGhhdCBvY2Nhc2lvbiByZWFsbHkgcG9zc2VzcyBhbGwgd2hvIHdlcmUgcHJlc2VudC4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SWxpYWQ8L3RpdGxlPiB2aS4gNDg0LDwvdHJhbnNsYXRpb24+"
translation['7.2.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gdGhlIGZvbGxvd2luZyB5ZWFyIGxpa2V3aXNlIHRoZSBBcmdpdmVzIGFuZCBhbGw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjgiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjgiPjM2OCBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlIEFyY2FkaWFucyBpbnZhZGVkIHRoZSB0ZXJyaXRvcnkgb2YgUGhsaXVzLiBUaGUgcmVhc29uIGZvciB0aGVpciBjb250aW51YWxseSBiZXNldHRpbmcgdGhlIFBobGlhc2lhbnMgd2FzIHBhcnRseSB0aGF0IHRoZXkgd2VyZSBhbmdyeSB3aXRoIHRoZW0sIGFuZCBwYXJ0bHkgdGhhdCB0aGV5IGhhZCB0aGUgY291bnRyeSBvZiB0aGUgUGhsaWFzaWFucyBiZXR3ZWVuIHRoZW0sIGFuZCB3ZXJlIGFsd2F5cyBpbiBob3BlIHRoYXQgdGhyb3VnaCB3YW50IG9mIHByb3Zpc2lvbnMgdGhleSB3b3VsZCBicmluZyB0aGVtIHRvIHRlcm1zLiBCdXQgb24gdGhpcyBpbnZhc2lvbiBhbHNvIHRoZSBob3JzZW1lbiBhbmQgdGhlIHBpY2tlZCB0cm9vcHMgb2YgdGhlIFBobGlhc2lhbnMsIGFsb25nIHdpdGggdGhlIGhvcnNlbWVuIG9mIHRoZSBBdGhlbmlhbnMgd2hvIHdlcmUgcHJlc2VudCwgYXR0YWNrZWQgdGhlbSBhdCB0aGUgY3Jvc3Npbmcgb2YgdGhlIHJpdmVyOyBhbmQgaGF2aW5nIHdvbiB0aGUgdmljdG9yeSwgdGhleSBtYWRlIHRoZSBlbmVteSByZXRpcmUgdW5kZXIgdGhlIGhlaWdodHMgZm9yIHRoZSByZXN0IG9mIHRoZSBkYXksIGp1c3QgYXMgaWYgdGhleSB3ZXJlIGtlZXBpbmcgY2FyZWZ1bGx5IGF3YXkgZnJvbSB0aGUgY29ybiBpbiB0aGUgcGxhaW4gYXMgdGhlIHByb3BlcnR5IG9mIGZyaWVuZHMsIHNvIGFzIG5vdCB0byB0cmFtcGxlIGl0IGRvd24uCjxkYXRlIGF1dGhuYW1lPSItMzY4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY4Ij4zNjggQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.2.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T24gYW5vdGhlciBvY2Nhc2lvbiB0aGUgVGhlYmFuIGdvdmVybm9yIGF0IFNpY3lvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PC9ub3RlPiBtYXJjaGVkIHVwb24gUGhsaXVzIGF0IHRoZSBoZWFkIG9mIHRoZSBnYXJyaXNvbiB3aGljaCBoZSBoYWQgdW5kZXIgaGlzIG93biBjb21tYW5kLCBhbmQgb2YgdGhlIFNpY3lvbmlhbnMgYW5kIFBlbGxlbmVhbnMg4oCUIGZvciBhdCB0aGF0IHRpbWUgdGhleSB3ZXJlIGFscmVhZHkgZm9sbG93aW5nIHRoZSBUaGViYW5zOyBhbmQgRXVwaHJvbiBhbHNvIHRvb2sgcGFydCBpbiB0aGUgZXhwZWRpdGlvbiB3aXRoIGhpcyBtZXJjZW5hcmllcywgYWJvdXQgdHdvIHRob3VzYW5kIGluIG51bWJlci4gTm93IHRoZSBtYWluIGJvZHkgb2YgdGhlIHRyb29wcyBkZXNjZW5kZWQgYWxvbmcgVHJpY2FyYW51bSB0b3dhcmQgdGhlIEhlcmFldW0gd2l0aCB0aGUgaW50ZW50aW9uIG9mIGxheWluZyB3YXN0ZSB0aGUgcGxhaW47IGJ1dCB0aGUgY29tbWFuZGVyIGxlZnQgdGhlIFNpY3lvbmlhbnMgYW5kIFBlbGxlbmVhbnMgYmVoaW5kIHVwb24gdGhlIGhlaWdodCBvdmVyIGFnYWluc3QgdGhlIGdhdGVzIGxlYWRpbmcgdG8gQ29yaW50aCwgc28gdGhhdCB0aGUgUGhsaWFzaWFucyBzaG91bGQgbm90IGdvIGFyb3VuZCBieSB0aGF0IHdheSBhbmQgZ2V0IGFib3ZlIGhpcyBtZW4gYXQgdGhlIEhlcmFldW0uCjxkYXRlIGF1dGhuYW1lPSItMzY2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY2Ij4zNjYgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.2.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBob3dldmVyLCB0aGUgcGVvcGxlIGluIHRoZSBjaXR5IHBlcmNlaXZlZCB0aGF0IHRoZSBlbmVteSBoYWQgc2V0IG91dDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PC9ub3RlPiBmb3IgdGhlIHBsYWluLCB0aGUgaG9yc2VtZW4gYW5kIHRoZSBwaWNrZWQgdHJvb3BzIG9mIHRoZSBQaGxpYXNpYW5zIHNhbGxpZWQgZm9ydGggYWdhaW5zdCB0aGVtLCBnYXZlIGJhdHRsZSwgYW5kIGRpZCBub3QgYWxsb3cgdGhlbSB0byBtYWtlIHRoZWlyIHdheSB0byB0aGUgcGxhaW4uIEFuZCB0aGV5IHNwZW50IG1vc3Qgb2YgdGhlIGRheSB0aGVyZSBpbiBmaWdodGluZyBhdCBsb25nIHJhbmdlLCB0aGUgdHJvb3BzIG9mIEV1cGhyb24gcHVyc3VpbmcgdXAgdG8gdGhlIHBvaW50IHdoZXJlIHRoZSBjb3VudHJ5IHdhcyBzdWl0ZWQgZm9yIGNhdmFscnksIGFuZCB0aGUgbWVuIGZyb20gdGhlIGNpdHkgYXMgZmFyIGFzIHRoZSBIZXJhZXVtLgo8ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.2.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBob3dldmVyLCBpdCBzZWVtZWQgdG8gYmUgdGhlIHByb3BlciB0aW1lLCB0aGUgZW5lbXkgcmV0aXJlZCBieSBhIGNpcmN1aXRvdXMgcm91dGUgb3ZlciBUcmljYXJhbnVtLCBmb3IgdGhlIHJhdmluZSBpbiBmcm9udCBvZiB0aGUgd2FsbCBwcmV2ZW50ZWQgdGhlbSBmcm9tIHJlYWNoaW5nIHRoZSBQZWxsZW5lYW5zIGJ5IHRoZSBkaXJlY3Qgd2F5LiBUaGVuIHRoZSBQaGxpYXNpYW5zLCBhZnRlciBmb2xsb3dpbmcgdGhlbSBhIGxpdHRsZSB3YXkgdXAgdGhlIGhpbGwsIHR1cm5lZCBiYWNrIGFuZCBjaGFyZ2VkIGFsb25nIHRoZSByb2FkIHdoaWNoIGxlYWRzIHBhc3QgdGhlIHdhbGwsIGFnYWluc3QgdGhlIFBlbGxlbmVhbnMgYW5kIHRob3NlIHdpdGggdGhlbS4KPC90cmFuc2xhdGlvbj4="
translation['7.2.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIHRyb29wcyBvZiB0aGUgVGhlYmFuIGdlbmVyYWwsIHVwb24gcGVyY2VpdmluZyB0aGUgaGFzdGUgb2YgdGhlIFBobGlhc2lhbnMsIGJlZ2FuIHJhY2luZyB3aXRoIHRoZW0gaW4gb3JkZXIgdG8gcmVhY2ggdGhlIFBlbGxlbmVhbnMgZmlyc3QgYW5kIGdpdmUgdGhlbSBhaWQuIFRoZSBob3JzZW1lbiwgaG93ZXZlciwgYXJyaXZlZCBmaXJzdCwgYW5kIGF0dGFja2VkIHRoZSBQZWxsZW5lYW5zLiBBbmQgd2hlbiBhdCB0aGUgb3V0c2V0IHRoZXkgd2l0aHN0b29kIHRoZSBhdHRhY2ssIHRoZSBQaGxpYXNpYW5zIGZlbGwgYmFjaywgYnV0IHRoZW4gYXR0YWNrZWQgYWdhaW4gaW4gY29tcGFueSB3aXRoIHN1Y2ggb2YgdGhlIGZvb3Qtc29sZGllcnMgYXMgaGFkIGNvbWUgdXAsIGFuZCBmb3VnaHQgaGFuZC10by1oYW5kLiBBdCB0aGlzIHRoZSBlbmVteSBnYXZlIHdheSwgYW5kIHNvbWUgb2YgdGhlIFNpY3lvbmlhbnMgZmVsbCBhbmQgdmVyeSBtYW55IG9mIHRoZSBQZWxsZW5lYW5zLCBhbmQgYnJhdmUgbWVuLCB0b28uCjwvdHJhbnNsYXRpb24+"
translation['7.2.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIHRoZXNlIHRoaW5ncyBoYWQgdGFrZW4gcGxhY2UgdGhlIFBobGlhc2lhbnMgc2V0IHVwIGEgdHJvcGh5LCBzb3VuZGluZyB0aGVpciBwYWVhbiBsb3VkbHksIGFzIHdhcyBuYXR1cmFsOyBhbmQgdGhlIHRyb29wcyBvZiB0aGUgVGhlYmFuIGdlbmVyYWwgYW5kIEV1cGhyb24gYWxsb3dlZCBhbGwgdGhpcyB0byBnbyBvbiwganVzdCBhcyBpZiB0aGV5IGhhZCBtYWRlIHRoZWlyIHJhY2UgdG8gc2VlIGEgc3BlY3RhY2xlLiBUaGVuLCBhZnRlciB0aGVzZSBwcm9jZWVkaW5ncyB3ZXJlIGZpbmlzaGVkLCB0aGUgb25lIHBhcnR5IGRlcGFydGVkIGZvciBTaWN5b24gYW5kIHRoZSBvdGhlciByZXR1cm5lZCB0byB0aGUgY2l0eS4KPC90cmFuc2xhdGlvbj4="
translation['7.2.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5vdGhlciBub2JsZSBkZWVkIHdoaWNoIHRoZSBQaGxpYXNpYW5zIHBlcmZvcm1lZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PC9ub3RlPiB3YXMgdGhpczogd2hlbiB0aGV5IGhhZCBtYWRlIGEgcHJpc29uZXIgb2YgUHJveGVudXMsIHRoZSBQZWxsZW5lYW4sIGV2ZW4gdGhvdWdoIHRoZXkgd2VyZSBpbiB3YW50IG9mIGV2ZXJ5dGhpbmcsIHRoZXkgbGV0IGhpbSBnbyB3aXRob3V0IGEgcmFuc29tLiBIb3cgY291bGQgb25lIGhlbHAgc2F5aW5nIHRoYXQgbWVuIHdobyBwZXJmb3JtZWQgc3VjaCBkZWVkcyB3ZXJlIG5vYmxlIGFuZCB2YWxpYW50Pwo8ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.2.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnVydGhlcm1vcmUsIHRoYXQgaXQgd2FzIG9ubHkgYnkgc3RvdXQgZW5kdXJhbmNlIHRoYXQgdGhleSBtYWludGFpbmVkIHRoZWlyIGZpZGVsaXR5IHRvIHRoZWlyIGZyaWVuZHMgaXMgY2xlYXJseSBtYW5pZmVzdDsgZm9yIHdoZW4gdGhleSB3ZXJlIHNodXQgb2ZmIGZyb20gdGhlIHByb2R1Y3RzIG9mIHRoZWlyIGxhbmQsIHRoZXkgbGl2ZWQgcGFydGx5IGJ5IHdoYXQgdGhleSBjb3VsZCBnZXQgZnJvbSB0aGUgZW5lbXkncyB0ZXJyaXRvcnksIGFuZCBwYXJ0bHkgYnkgYnV5aW5nIGZyb20gQ29yaW50aDsgdGhleSB3ZW50IHRvIHRoZSBtYXJrZXQgdGhyb3VnaCB0aGUgbWlkc3Qgb2YgbWFueSBkYW5nZXJzLCB3aXRoIGRpZmZpY3VsdHkgcHJvdmlkZWQgdGhlIHByaWNlIG9mIHN1cHBsaWVzLCB3aXRoIGRpZmZpY3VsdHkgYnJvdWdodCB0aHJvdWdoIHRoZSBlbmVteSdzIGxpbmVzIHRoZSBwZW9wbGUgd2hvIGZldGNoZWQgdGhlc2Ugc3VwcGxpZXMsIGFuZCB3ZXJlIGhhcmQgcHV0IHRvIGl0IHRvIGZpbmQgbWVuIHdobyB3b3VsZCBndWFyYW50ZWUgdGhlIHNhZmV0eSBvZiB0aGUgYmVhc3RzIG9mIGJ1cmRlbiB3aGljaCB3ZXJlIHRvIGNvbnZleSB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5BdCBsZW5ndGgsIHdoZW4gdGhleSB3ZXJlIGluIGRlc3BlcmF0ZSBzdHJhaXRzLCB0aGV5IGFycmFuZ2VkIHRoYXQgQ2hhcmVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBBbiBBdGhlbmlhbiBnZW5lcmFsLjwvbm90ZT4gc2hvdWxkIGVzY29ydCB0aGVpciBzdXBwbHkgdHJhaW4uIFVwb24gaGlzIGFycml2YWwgYXQgUGhsaXVzIHRoZXkgYmVnZ2VkIGhpbSB0byBoZWxwIHRoZW0gYWxzbyB0byBjb252b3kgdGhlaXIgbm9uLWNvbWJhdGFudHMgdG8gUGVsbGVuZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFNpbmNlIHRoZSBldmVudHMgZGVzY3JpYmVkIGluIDExLTE2IGFib3ZlIFBlbGxlbmUgaGFkIHJlam9pbmVkIHRoZSBMYWNlZGFlbW9uaWFuIGFsbGlhbmNlLjwvbm90ZT4gQWNjb3JkaW5nbHkgdGhleSBsZWZ0IHRoZXNlIHBlb3BsZSBhdCBQZWxsZW5lLCBhbmQgYWZ0ZXIgbWFraW5nIHRoZWlyIHB1cmNoYXNlcyBhbmQgcGFja2luZyBhcyBtYW55IGJlYXN0cyBvZiBidXJkZW4gYXMgdGhleSBjb3VsZCwgdGhleSBzZXQgb2ZmIGR1cmluZyB0aGUgbmlnaHQsIG5vdCB1bmF3YXJlIHRoYXQgdGhleSB3b3VsZCBiZSBhbWJ1c2hlZCBieSB0aGUgZW5lbXksIGJ1dCB0aGlua2luZyB0aGF0IHRvIGJlIHdpdGhvdXQgcHJvdmlzaW9ucyB3YXMgYSBtb3JlIGdyaWV2b3VzIHRoaW5nIHRoYW4gZmlnaHRpbmcuCjwvdHJhbnNsYXRpb24+"
translation['7.2.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIFBobGlhc2lhbnMsIHRvZ2V0aGVyIHdpdGggQ2hhcmVzLCB3ZW50IG9uIGFoZWFkLCBhbmQgd2hlbiB0aGV5IGNhbWUgdXBvbiB0aGUgZW5lbXkgdGhleSBpbW1lZGlhdGVseSBzZXQgdG8gd29yaywgYW5kLCBjaGVlcmluZyBvbmUgYW5vdGhlciBvbiwgcHJlc3NlZCB0aGVpciBhdHRhY2ssIHdoaWxlIGF0IHRoZSBzYW1lIHRpbWUgdGhleSBzaG91dGVkIHRvIENoYXJlcyB0byBjb21lIHRvIHRoZWlyIGFpZC4gQW5kPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY2Ij4zNjYgQi5DLjwvZGF0ZT48L25vdGU+IHdoZW4gdmljdG9yeSBoYWQgYmVlbiBhY2hpZXZlZCBhbmQgdGhlIGVuZW15IGRyaXZlbiBvdXQgb2YgdGhlIHJvYWQsIGluIHRoaXMgd2lzZSB0aGV5IGJyb3VnaHQgaG9tZSBpbiBzYWZldHkgYm90aCB0aGVtc2VsdmVzIGFuZCB0aGUgc3VwcGxpZXMgdGhleSB3ZXJlIGNvbnZleWluZy48ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBpbmFzbXVjaCBhcyB0aGUgUGhsaWFzaWFucyBoYWQgcGFzc2VkIHRoZSBuaWdodCB3aXRob3V0IHNsZWVwLCB0aGV5IHNsZXB0IHVudGlsIGZhciBvbiBpbiB0aGUgZGF5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBDaGFyZXMgYXJvc2UsIHRoZSBob3JzZW1lbiBhbmQgdGhlIGJlc3Qgb2YgdGhlIGhvcGxpdGVzIGNhbWUgdG8gaGltIGFuZCBzYWlkOiDigJxDaGFyZXMsIGl0IGlzIHdpdGhpbiB5b3VyIHBvd2VyIHRvLWRheSB0byBhY2NvbXBsaXNoIGEgc3BsZW5kaWQgZGVlZC4gRm9yIHRoZSBTaWN5b25pYW5zIGFyZSBmb3J0aWZ5aW5nIGEgcGxhY2UgdXBvbiBvdXIgYm9yZGVycyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDEuPC9ub3RlPiBhbmQgdGhleSBoYXZlIG1hbnkgYnVpbGRlcnMgYnV0IG5vdCB2ZXJ5IG1hbnkgaG9wbGl0ZXMuIE5vdyB0aGVyZWZvcmUgd2UsIHRoZSBob3JzZW1lbiBhbmQgdGhlIHN0b3V0ZXN0IG9mIHRoZSBob3BsaXRlcywgd2lsbCBsZWFkIHRoZSB3YXk7IGFuZCBpZiB5b3Ugd2lsbCBmb2xsb3cgdXMgd2l0aCB5b3VyIG1lcmNlbmFyeSBmb3JjZSwgcGVyaGFwcyB5b3Ugd2lsbCBmaW5kIHRoZSBidXNpbmVzcyBhbHJlYWR5IHNldHRsZWQgZm9yIHlvdSwgYW5kIHBlcmhhcHMgeW91ciBhcHBlYXJhbmNlIHdpbGwgdHVybiB0aGUgc2NhbGUsIGFzIGhhcHBlbmVkIGF0IFBlbGxlbmUuIEJ1dCBpZiBhbnl0aGluZyBpbiB3aGF0IHdlIHByb3Bvc2UgaXMgdW5hY2NlcHRhYmxlIHRvIHlvdSwgY29uc3VsdCB0aGUgZ29kcyBieSBzYWNyaWZpY2VzOyBmb3Igd2UgdGhpbmsgdGhhdCB0aGUgZ29kcyB3aWxsIGJpZCB5b3UgZG8gdGhpcyBldmVuIG1vcmUgdXJnZW50bHkgdGhhbiB3ZSBkby4gQW5kIHRoaXMsIENoYXJlcywgeW91IHNob3VsZCB3ZWxsIHVuZGVyc3RhbmQsIHRoYXQgaWYgeW91IGFjY29tcGxpc2ggdGhlc2UgdGhpbmdzIHlvdSB3aWxsIGhhdmUgc2VjdXJlZCBhIHN0cm9uZ2hvbGQgYXMgYSBiYXNlIG9mIGF0dGFjayB1cG9uIHRoZSBlbmVteSBhbmQgaGF2ZSBwcmVzZXJ2ZWQgYSBmcmllbmRseSBjaXR5LCBhbmQgeW91IHdpbGwgd2luIHRoZSBmYWlyZXN0IG9mIGZhbWUgaW4geW91ciBmYXRoZXJsYW5kIGFuZCBiZSBtb3N0IHJlbm93bmVkIGFtb25nIGJvdGggYWxsaWVzIGFuZCBlbmVtaWVzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.2.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5DaGFyZXMgYWNjb3JkaW5nbHkgd2FzIHBlcnN1YWRlZCBhbmQgb2ZmZXJlZCBzYWNyaWZpY2UsIHdoaWxlIG9uIHRoZSBQaGxpYXNpYW4gc2lkZSB0aGUgaG9yc2VtZW4gc3RyYWlnaHR3YXkgcHV0IG9uIHRoZWlyIGJyZWFzdHBsYXRlcyBhbmQgYnJpZGxlZCB0aGVpciBob3JzZXMsIGFuZCB0aGUgaG9wbGl0ZXMgbWFkZSBhbGwgdGhlIHByZXBhcmF0aW9ucyBuZWNlc3NhcnkgZm9yIGluZmFudHJ5LiBXaGVuIHRoZXkgaGFkIHRha2VuIHVwIHRoZWlyIGFybXMgYW5kIHdlcmUgcHJvY2VlZGluZyB0byB0aGUgcGxhY2Ugd2h1cmUgaGUgd2FzIHNhY3JpZmljaW5nLCBDaGFyZXMgYW5kIHRoZSBzZWVyIG1ldDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PC9ub3RlPiB0aGVtMGFuZCBzYWlkIHRoYXQgdGhlIHNhY3JpZmljZXMgd2VyZSBmYXZvdXJhYmxlLiDigJxXYWl0IGZvciB1cyzigJ0gdGhleSBzYWlkLCDigJxmb3Igd2UsIHRvbywgd2lsbCBzZXQgZm9ydGggYXQwb25jZS7igJ0gQW5kIGFzIHNvb24gYXMgd29yZCBoYWQgYmVlbiBnaXZlbiBieSB0aGUgaGVyYWxkLCBDaGFyZXMnIG1lcmNlbmFyaWVzIGFsc28gc3BlZWRpbHkgcnVzaGVkIG91dCB3aXRoIGEga2luZCBvZiBoZWF2ZW4tc2VudCBlYWdlcm5lc3MuCjxkYXRlIGF1dGhuYW1lPSItMzY2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY2Ij4zNjYgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.2.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiBDaGFyZXMgaGFkIGJlZ3VuIHRvIG1hcmNoLCB0aGUgY2F2YWxyeSBhbmQgaW5mYW50cnkgb2YgdGhlIFBobGlhc2lhbnMgd2VudCBvbiBhaGVhZCBvZiBoaW07IGFuZCBhdCBmaXJzdCB0aGV5IGxlZCB0aGUgd2F5IHJhcGlkbHksIGFuZCB0aGVuIHRoZXkgYmVnYW4gdG8gcnVuOyBmaW5hbGx5LCB0aGUgaG9yc2VtZW4gd2VyZSByaWRpbmcgYXQgdGhlIHRvcCBvZiB0aGVpciBzcGVlZCBhbmQgdGhlIGZvb3Qtc29sZGllcnMgd2VyZSBydW5ueW5nIGFzIGZhc3QgYXMgaXQgaXMgcG9zc2libGUgZm9yIG1lbiBpbiBsaW5lIHRvMGdvLCB3aGlsZSBhZnRlciB0aGVtIGNhbWUgQ2hhcmVzLCBmb2xsb3dpbmcgaW4geGFzdGUuIFRoZSB0aW1lIHdhcyBhIGxpdHRsZSBiZWZvcmUgc3Vuc2V0LCBhbmQgdGhleSBmb3VuZCB0aGUgZW5lbXkgYXQgdGhlIGZvcnRyZXNzLCBzb21lIGJhdGhpbmcsIHNvbWUgY29va2luZywgc29tZSBrbmVhZGluZywgYW5kIHNvbWUgbWFraW5nIHRoZWlyIGJlZHMuCjwvdHJhbnNsYXRpb24+"
translation['7.2.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgc28gc29vbiBhcyB0aGUgZW5lbXkgc2F3IHRoZSB2ZWhlbWVuY2Ugb2YgdGhlIG9uc2V0IHRoZXkgc3RyYWlnaHR3YXkgZmxlZCBpbiB0ZXJyb3IsIGxlYXZpbmcgYWxsIHRoZWlyIHByb3Zpc2lvbnMgYmVoaW5kIGZvciB0aGVzZSBicmF2ZSBtZW4uIFRoZSBsYXR0ZXIgYWNjb3JkaW5nbHkgbWFkZSB0aGVpciBkaW5uZXIgb2ZmIHRoZXNlIHByb3Zpc2lvbnMgcW5kIG1vcmUgd2hpY2ggY2FtZSBmcm9tIGhvbWUsIGFuZCBhZnRlciBwb3VyaW5nIGxpYmF0aW9ucyBpbiBob25vdXIgb2YgdGhlaXIgZ29vZCBmb3J0dW5lLCBzaW5naW5nIGEgcGFlYW4sIGFuZCBwb3N0aW5nIGd1YXJkcywgdGhleSB3ZW50IHRvIHNsZWVwLiBBbmQgdGhlIENvcmludGhpYW5zLCBhZnRlciBuZXdzIGhhZCByZWFjaGVkIHRoZW0gZHVyaW5nIHRoZSBuaWdodCBpbiByZWdhcmQgdG8gVGh5YW1pYSwgaW4gYSBtb3N0IGZyaWVuZGx5IHdheSBvcmRlcmVkIG91dCBieSBwcm9jbGFtYXRpb24gYWxsIHRoZWlyIHRlcW1zIGFuZCBwYWNrLWFuaW1hbHMsIGxvYWRlZCB0aGVtIHdpdGggY29ybiwgYW5kIGNvbnZveWVkIHRoZW0gdG8gUGhsaXVzOyBhbmQgc28gbG9uZyBhcyB0aGUgZm9ydGlmaWNhdGlvbnMgd2VyZSBidWlsZGluZyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IE5vdyBieSB0aGUgUGhsaWFzaWFucy48L25vdGU+IGNvbnZveXMgY29udGludWVkIHRvIGJlIHNlbnQgb3V0IGV2ZXJ5IGRheS4KPC90cmFuc2xhdGlvbj4="
translation['7.3.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgc3Rvcnkgb2YgdGhlIFBobGlhc2lhbnMsIHRoZW4sIGhvdyB0aGV5IHByb3ZlZCB0aGVtc2VsdmVzIGZhaXRoZnVsIHRvIHRoZWlyIGZyaWVuZHMgYW5kIGNvbnRpbnVlZCB2YWxpYW50IGluIHRoZSB3YXIsIGFuZCBob3csIHRob3VnaCBpbiB3cW50IG9mIGV2ZXJ5dGhpbmcsIHRoZXkgcmVtYWluZWQgc3RlYWRmYXN0IGluIHRoZWlyIGFsbGlhbmNlLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PC9ub3RlPiBoYXMgYmVlbiB0b2xkLiBBdCBhYm91dCB0aGlzIHRpbWUgQWVuZWFzIHRoZSBTdHltcGhhbGlhbiwgd2hvIGhhZCBiZWNvbWUgZ2VuZXJhbCBvZiB0aGUgQXJjYWRpYW5zLCB0aGlua2luZyB0aGF0IGNvbmRpdGlvbnMgaW4gU2ljeW9uIHdlcmUgbm90IHRvIGJlIGVuZHVyZWQsIHdlbnQgdXAgdG8gdGhlIEFjcm9wb2xpcyB3aXRoIGhpcyBvd24gYXJteSwgY2FsbGVkIHRvZ2V0aGVyIHRoZSBhcmlzdG9jcmF0cyBhbW9uZyB0aGUgU2ljeW9uaWFucyB3aG8gd2VyZSBpbiB0aGUgY2l0eSwgYW5kIHNlbnQgYWZ0ZXIgdGhvc2Ugd2hvIGhhZCBiZWVuIGV4aWxlZCB0aGVyZWZyb20gd2l0aG91dCBhIGRlY3JlZSBvZiB0aGUgcGVvcGxlLgo8ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.3.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBFdXBocm9uLCBzZWl6ZWQgd2l0aCBmZWFyIGF0IHRoZXNlIHByb2NlZWRpbmdzLCBmbGVkIGZvciByZWZ1Z2UgdG8gdGhlIHBvcnQgb2YgdGhlIFNpY3lvbmlhbnMsIGFuZCBhZnRlciBzdW1tb25pbmcgUGFzaW1lbHVzIHRvIGNvbWUgZnJvbSBDb3JpbnRoLCB0aHJvdWdoIGhpbSBoYW5kZWQgb3ZlciB0aGUgcG9ydCB0byB0aGUgTGFjZWRhZW1vbmlhbnMgYW5kIGFwcGVhcmVkIG9uY2UgbW9yZSBpbiB0aGVpciBhbGxpYW5jZSwgc2F5aW5nIHRoYXQgaGUgaGFkIGFsbCB0aGUgdGltZSByZW1haW5lZCBmYWl0aGZ1bCB0byB0aGUgTGFjZWRhZW1vbmlhbnMuIEZvciBoZSBzYWlkIHRoYXQgYXQgdGhlIHNhbWUgdGltZSB3aGVuIGEgdm90ZSB3YXMgdGFrZW4gaW4gdGhlIGNpdHkgYXMgdG8gd2hldGhlciB0aGUgU2ljeW9uaWFucyBzaG91bGQgZGVjaWRlIHRvIHJldm9sdCBmcm9tIHRoZW0sIGhlLCB3aXRoIGEgZmV3IG90aGVycywgdm90ZWQgYWdhaW5zdCBpdDsKPC90cmFuc2xhdGlvbj4="
translation['7.3.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB0aGF0IGFmdGVyd2FyZHMgaGUgaGFkIHNldCB1cCBhIGRlbW9jcmFjeSBvdXQgb2YgaGlzIGRlc2lyZSB0byBhdmVuZ2UgaGltc2VsZiBvbiB0aG9zZSB3aG8gaGFkIGJldHJheWVkIGhpbS4g4oCcQW5kIGF0IHRoaXMgbW9tZW50LOKAnSBoZSBzYWlkLCDigJxhbGwgd2hvIHdlcmUgdHJhaXRvcnMgdG8geW91IGFyZSBpbiBleGlsZSBieSBteSBhY3QuIE5vdyBpZiBJIGhhZCBmb3VuZCBteXNlbGYgYWJsZSwgSSBzaG91bGQgaGF2ZSBnb25lIG92ZXIgdG8geW91IHdpdGggdGhlIGVudGlyZSBjaXR5LiBBcyBpdCBpcywgSSBoYXZlIGdpdmVuIG92ZXIgdG8geW91IHRoZSBwb3J0LCBvdmVyIHdoaWNoIGFsb25lIEkgaGFkIGdhaW5lZCBjb250cm9sLuKAnSBUaG9zZSB3aG8gaGVhcmQgaGltIHNheSB0aGVzZSB3b3JkcyB3ZXJlIG1hbnksIGJ1dCBob3cgbWFueSBiZWxpZXZlZCBoaW0gaXMgYnkgbm8gbWVhbnMgY2xlYXIuCjwvdHJhbnNsYXRpb24+"
translation['7.3.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ib3dldmVyLCBzaW5jZSBJIGhhdmUgYmVndW4gaXQsIEkgZGVzaXJlIHRvIGZpbmlzaCB0aGUgc3Rvcnkgb2YgRXVwaHJvbi4gV2hlbiB0aGUgYXJpc3RvY3JhdHMgYW5kIHRoZSBjb21tb25zIGF0IFNpY3lvbiBoYWQgZmFsbGVuIGludG8gc3RyaWZlLCBFdXBocm9uIG9idGFpbmVkIGEgZm9yY2Ugb2YgbWVyY2VuYXJpZXMgZnJvbSBBdGhlbnMgYW5kIGNhbWUgYmFjayBhZ2Fpbi4gQW5kIHdpdGggdGhlIGhlbHAgb2YgdGhlIGNvbW1vbnMgaGUgd2FzIG1hc3RlciBvZiB0aGUgdG93bjsgYSBUaGViYW4gZ292ZXJub3IsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY2Ij4zNjYgQi5DLjwvZGF0ZT48L25vdGU+IGhvd2V2ZXIsIGhlbGQgdGhlIEFjcm9wb2xpcywgYW5kIHNpbmNlIEV1cGhyb24gcmVhbGl6ZWQgdGhhdCB3aXRoIHRoZSBUaGViYW5zIGhvbGRpbmcgdGhlIEFjcm9wb2xpcyBoZSBjb3VsZCBub3QgcG9zc2libHkgYmUgbWFzdGVyIG9mIHRoZSBzdGF0ZSwgaGUgZ290IHRvZ2V0aGVyIG1vbmV5IGFuZCBzZXQgb3V0IHdpdGggdGhlIGludGVudGlvbiBvZiBwZXJzdWFkaW5nIHRoZSBUaGViYW5zLCBieSBtZWFucyBvZiB0aGlzIG1vbmV5LCB0byBiYW5pc2ggdGhlIGFyaXN0b2NyYXRzIGFuZCBnaXZlIHRoZSBzdGF0ZSBvdmVyIHRvIGhpbSBhZ2Fpbi4KPGRhdGUgYXV0aG5hbWU9Ii0zNjYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjYiPjM2NiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.3.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPldoZW4sIGhvd2V2ZXIsIHRoZSBmb3JtZXIgZXhpbGVzIGxlYXJuZWQgb2YgaGlzIGpvdXJuZXkgYW5kIGhpcyBwbGFucywgdGhleSBsaWtld2lzZSBwcm9jZWVkZWQgdG8gVGhlYmVzLiBBbmQgYXMgdGhleSBzYXcgaGltIGluIGZhbWlsaWFyIGFzc29jaWF0aW9uIHdpdGggdGhlIFRoZWJhbiBvZmZpY2lhbHMsIHRoZXkgd2VyZSBzZWl6ZWQgd2l0aCBmZWFyIHRoYXQgaGUgbWlnaHQgYWNjb21wbGlzaCB3aGF0IGhlIHdhbnRlZCwgYW5kIHNvbWUgb2YgdGhlbSB0b29rIHRoZSByaXNrIGFuZCBzbGV3IEV1cGhyb24gdXBvbiB0aGUgQWNyb3BvbGlzIHdoaWxlIHRoZTBvZmZpY2lhbHMgYW5kIHRoZSBzZW5hdGUgd2VyZSBpbiBzZXNzaW9uIHRoZXJlLiBCdXQgdGhlIG9mZmljaWFscyBicm91Z2h0IHRob3NlIHdobyBoYWQgZG9uZSB0aGUgZGVlZCBiZWZvcmUgdGhlIHNlbmF0ZSBhbmQgc3Bva2UgYXMgZm9sbG93czoKPC90cmFuc2xhdGlvbj4="
translation['7.3.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJ1GZWxsb3cgY2l0aXplbnMsIHdlIGFycmFpZ24gb24gdGhlIHNhcGl0YWwgY2hhcmdlIHRoZXNlIG1lbiB3aG8gaGF2ZSBzbGFpbiBFdXBocm9uLCBzZWVpbmcsIGFzIHdlIGRvLCB0aGF0IHdoaWxlIHJpZ2h0LW1pbmRlZCBtZW4gY29tbWl0IG5vIHVuanVzdCBvciB1bnJpZ2h0ZW91cyBkZWVkLCBhbmQgdGhlIHdpY2tlZCwgYWx0aG91Z2ggdGhleSBjb21taXQgdGhlbSwgc3RyaXZlIHRvIGRvIHRoZW0gaW4gc2VjcmV0LCB0aGVzZSBwZXJzb25zIGhhdmUgc28gZmFyIHN1cnBhc3NlZCBhbGwgbWFua2luZCBpbiBoYXJkaWhvb2QgYW5kIHZpbGxhaW55IHRoYXQgaW4gdGhlIHByZXNlbmNlIG9mIHRoZSB2ZXJ5IG1hZ2lzdHJhdGVzIGFuZCBpbiB0aGUgcHJlc2VuY2Ugb2YgeW91LCB3aG8gYWxvbmUgaGF2ZSBhdXRob3JpdHkgdG8gZGVjaWRlIHdobyBzaGFsbCBkaWUgYW5kIHdobyBzaGFsbCBub3QsIHRoZXkgdG9vayBkZWNpc2lvbiBpbnRvIHRoZWlyIG93biBoYW5kcyBhbmQgc2xldyB0aGUgbWFuLiBUaGVyZWZvcmUgaWYgdGhlc2UgbWVuIGRvIG5vdCBzdWZmZXIgdGhlIGV4dHJlbWUgcGVuYWx0eSwgd2hvIHdpbGwgZXZlciBoYXZlIHRoZSBjb3VyYWdlIHRvIHZpc2l0IG91ciBjaXR5PyBBbmQgd2hhdCB3aWxsIGJlY29tZSBvZiB0aGUgY2l0eSBpZiBhbnkgb25lIHdobyBzbyBkZXNpcmVzIGlzIHRvIGJlIGFsbG93ZWQgdG8gc2xheSBhIG1hbiBiZWZvcmUgaGUgaGFzIG1hZGUga25vd24gZm9yIHdoYXQgcHVycG9zZSBoZSBoYXMgY29tZSBoZXJlPyBXZSwgdGhlbiwgYXJyYWlnbiB0aGVzZSBtZW4gYXMgdXR0ZXJseSB1bnJpZ2h0ZW91cywgdW5qdXN0LCBhbmQgbGF3bGVzcywgYW5kIGFzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY2Ij4zNjYgQi5DLjwvZGF0ZT48L25vdGU+IGhhdmluZyBzaG93biB0aGUgdXRtb3N0IGNvbnRlbXB0IGZvciBvdXIgY2l0eS4gSXQgaXMgZm9yIHlvdSwgYWZ0ZXIgeW91IGhhdmUgaGVhcmQsIHRvIGluZmxpY3QgdXBvbiB0aGVtIHN1Y2ggcGVuYWx0eSBhcyB0aGV5IHNlZW0gdG8geW91IHRvIGRlc2VydmUu4oCdCjxkYXRlIGF1dGhuYW1lPSItMzY2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY2Ij4zNjYgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.3.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoIHdlcmUgdGhlIHdvcmRzIG9mIHRoZSBvZmZpY2lhbHM7IGFzIGZvciB0aG9zZSB3aG8gaGFkIHNsYWluIEV1cGhyb24sIGFsbCBleGNlcHQgb25lIGRlbmllZCB0aGF0IHRoZXkgaGFkIGJlZW4gdGhlIHBlcnBldHJhdG9ycyBvZiB0aGUgZGVlZDsgYnV0IG9uZSBoYWQgYWRtaXR0ZWQgaXQsIGFuZCBiZWdhbiBoaXMgZGVmZW5jZSBpbiBzb21lIHN1Y2ggd29yZHMgYXMgdGhlc2U6IOKAnVN1cmVseSwgVGhlYmFucywgdG8gZmVlbCBjb250ZW1wdCBmb3IgeW91IGlzIG5vdCBwb3NzaWJsZSBmb3IgYSBtYW4gaWYgaGUga25vd3MgdGhhdCB5b3UgaGF2ZSBhdXRob3JpdHkgdG8gZG8gd2l0aCBoaW0gYXMgeW91IHdpbGw7IGluIHdoYXQsIHRoZW4sIGRpZCBJIHRydXN0IHdoZW4gSSBoZXJlIHNsZXcgdGhlIG1hbj8gQmUgd2VsbCBhc3N1cmVkIHRoYXQgaXQgd2FzIGZpcnN0IG9mIGFsbCBpbiB0aGUgYmVsaWVmIHRoYXQgSSB3YXMgZG9pbmcgYSBqdXN0IGRlZWQsIGFuZCBzZWNvbmRseSBpbiB0aGUgdGhvdWdodCB0aGF0IHlvdSB3b3VsZCBkZWNpZGUgcmlnaHRseTsgZm9yIEkga25ldyB0aGF0IHlvdSBsaWtld2lzZSwgaW4gZGVhbGluZyB3aXRoIHRoZSBwYXJ0eSBvZiBBcmNoaWFzIGFuZCBIeXBhdGVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gU2VlIHYuIGl2LiAyLTEyLjwvbm90ZT4gd2hvbSB5b3UgZm91bmQgdG8gaGF2ZSBwZXJmb3JtZWQgYWN0cyBsaWtlIHRob3NlIG9mIEV1cGhyb24sIGRpZCBub3Qgd2FpdCBmb3IgYSB2b3RlLCBidXQgcHVuaXNoZWQgdGhlbSBhcyBzb29uIGFzIHlvdSBmb3VuZCB5b3Vyc2VsdmVzIGFibGUgdG8gZG8gc28sIGJlbGlldmluZyB0aGF0IHRob3NlIHdobyBhcmUgbWFuaWZlc3RseSB1bnJpZ2h0ZW91cyBhbmQgdGhvc2Ugd2hvIGFyZSBwbGFpbmx5IHRyYWl0b3JzIGFuZCBhdHRlbXB0aW5nIHRvIGJlIHR5cmFudHMgYXJlIGFscmVhZHkgY29uZGVtbmVkIHRvIGRlYXRoIGJ5IGFsbCBtYW5raW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPldhcyBub3QgRXVwaHJvbiBhbHNvLCBJIGFzaywgZ3VpbHR5IHVuZGVyIGFsbCB0aGVzZSBoZWFkcz8gSW4gdGhlIGZpcnN0IHBsYWNlLCBoZSBmb3VuZCB0aGUgc2hyaW5lcyBmdWxsIG9mIG9mZmVyaW5ncyBib3RoIG9mIHNpbHZlciBhbmQgb2YgZ29sZCwgYW5kIGxlZnQgdGhlbSBlbXB0eSBvZiBhbGwgdGhlc2UgdHJlYXN1cmVzLiBBZ2Fpbiwgd2hvIGNvdWxkIGJlIG1vcmUgbWFuaWZlc3RseSBhIHRyYWl0b3IgdGhhbiBFdXBocm9uLCB3aG8gd2FzIHRoZSBjbG9zZXN0IG9mIGZyaWVuZHMgdG8gdGhlIExhY2VkYWVtb25pYW5zIGFuZCB0aGVuIGNob3NlIHlvdSBpbiB0aGVpciBzdGVhZCwgYW5kIGFmdGVyIGhlIGhhZCBnaXZlbiB5b3UgcGxlZGdlcyBhbmQgcmVjZWl2ZWQgcGxlZGdlcyBmcm9tIHlvdSwgYmV0cmF5ZWQgeW91IGFnYWluIGFuZCBoYW5kZWQgb3ZlciB0aGUgcG9ydCB0byB5b3VyIGFkdmVyc2FyaWVzPyBPbmNlIGFnYWluLCB3YXMgaGUgbm90IGJleW9uZCBxdWVzdGlvbiBhIHR5cmFudCwgd2hlbiBoZSBtYWRlIHNsYXZlcyBub3Qgb25seSBmcmVlIG1lfjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PC9ub3RlPiBidXQgZXZlbiBjaXRpemVucywgYW5kIHB1dCB0byBkZWF0aCBhbmQgYmFuaXNoZWQgYW5kIHJvYmJlZCBvZiBwcm9wZXJ0eSwgbm90IHRoZSBwZW9wbGUgd2hvIHdlcmUgZ3VpbHR5IG9mIHdyb25nLWRvaW5nLCBidXQgdGhvc2Ugd2hvbSBpdCBzdWl0ZWQgaGltIHRvIHRyZWF0IHRodXM/IEFuZCB0aGVzZSB3ZXJlIHRoZSBiZXR0ZXIgY2xhc3Nlcy4KPGRhdGUgYXV0aG5hbWU9Ii0zNjYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjYiPjM2NiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.3.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gYWZ0ZXIgaGUgaGFkIHJldHVybmVkIGFnYWluIHRvIHRoZSBjaXR5IGluIGNvbXBhbnkgd2l0aCB5b3VyIGJpdHRlciBhZHZlcnNhcmllcywgdGhlIEF0aGVuaWFucywgaGUgc2V0IGhpbXNlbGYgaW4gYXJtcyBhZ2FpbnN0IHlvdXIgZ292ZXJub3I7IGJ1dCBzaW5jZSBoZSBmb3VuZCBoaW1zZWxmIHVuYWJsZSB0byBleHBlbCBoaW0gZnJvbSB0aGUgQWNyb3BvbGlzLCBoZSBnb3QgdG9nZXRoZXIgbW9uZXkgYW5kIGNhbWUgaGl0aGVyLiBOb3cgaWYgaGUgaGFkIGJlZW4gc2hvd24gdG8gaGF2ZSBnYXRoZXJlZCBhcm1lZCBmb3JjZXMgd2l0aCB3aGljaCB0byBhdHRhY2sgeW91LCB5b3Ugd291bGQgZXZlbiBmZWVsIGdyYXRlZnVsIHRvIG1lIGZvciBzbGF5aW5nIGhpbTsgYnV0MHdoZW4gaGUgcHJvdmlkZWQgaGltc2VsZiB3aXRoIG1vbmV5IGluc3RlYWQsIGFuZCBjYW1lIHdpdGggdGhlIHB1cnBvc2Ugb2YgY29ycnVwdGluZyB5b3UgYnkgbWVhbnMgb2YgdGhpcyBtb25leSBhbmQgcGVyc3VhZGluZyB5b3UgdG8gbWFrZSBoaW0gbG9yZCBvZiB0aGUgY2l0eSBhZ2FpbiwgaG93IGNhbiBJIGp1c3RseSBiZSBwdXQgdG8gZGVhdGggYnkgeW91IGZvciBpbmZsaWN0aW5nIHVwb24gdGhlIG1hbiBoaXMgZHVlIHB1bmlzaG1lbnQ/IEZvciB3aGVyZWFzIHRob3NlIHdobyBhcmUgY29uc3RyYWluZWQgYnkgYXJtcyBzdWZmZXIgZGFtYWdlLCB5ZXQgdGhleSBhcmUgbm90IHRoZXJlYnkgc2hvd24gdG8gYmUgd2lja2VkIGF0IGFueSByYXRlOyBidXQgdGhvc2Ugd2hvIGFyZSBjb3JydXB0ZWQgYnkgbW9uZXkgaW4gdmlvbGF0aW9uIG9mIHRoZSByaWdodCBub3Qgb25seSBzdWZmZXIgZGFtYWdlLCBidXQgYXQgdGhlIHNhbWUgdGltZSBpbmN1ciBzaGFtZS4KPC90cmFuc2xhdGlvbj4="
translation['7.3.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5UbyBiZSBzdXJlLCBpZiBoZSBoYWQgYmVlbiBhbiBlbmVteSBvZiBtaW5lIGJ1dCBhIGZyaWVuZCBvZiB5b3VycywgSSBhZG1pdCBteXNlbGYgdGhhdCBpdCB3b3VsZCBub3QgaGF2ZSBiZWVuIHNlZW1seSBmb3IgbWUgdG8gc2xheSB0aGlzIG1hbiBpbiB5b3VyIGNpdHk7IGJ1dCB3aGVyZWluIHdhcyBoZSwgd2hvIHdhcyBhMHRyYWl0b3IgdG8geW91LCBtb3JlIG9mIGFuIGVuZW15IHRvIG1lIHRoYW4gdG8geW91PyBgQnV0LCBieSBaZXVzLCcgc29tZW9uZSBtaWdodCBzYXksIGBoZSBjYW1lIG9mIGhpcyBvd24gZnJlZSB3aWxsLicgU28sIHRoZW4sIGlmIGFueW9uZSBoYWQgc2xhaW4gaGltIHdoaWxlIGhlIHdhcyBrZWVwaW5nIGF3YXkgZnJvbSB5b3VyIGNpdHksIGhlIHdvdWxkIGhhdmUgb2J0YWluZWQgcHJhaXNlOyBidXQgYXMgaXQgaXMsIHdoZW4gaGUgY2FtZSBhZ2FpbiB0byBkbyB5b3UgbW9yZSB3cm9uZyBpbiBhZGRpdGlvbiB0byB3aGF0IGhlIGhhZCBkb25lIGJlZm9yZSwgZG9lcyBvbmUgc2F5IHRoYXQgaGUgaGFzIG5vdCBiZWVuIHNsYWluIGp1c3RseT8gV2hlcmUgY2FuIHN1Y2ggYSBvbmUgc2hvdyB0aGF0IGEgdHJ1Y2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjYiPjM2NiBCLkMuPC9kYXRlPjwvbm90ZT4gZXhpc3RzIGJldHdlZW4gR3JlZWtzIGFuZCB0cmFpdG9ycywgb3IgZG91YmxlLWRlc2VydGVycywgb3IgdHlyYW50cz8KPGRhdGUgYXV0aG5hbWU9Ii0zNjYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjYiPjM2NiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.3.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5CZXNpZGVzIGFsbCB0aGlzLCByZW1lbWJlciBhbHNvIHRoYXQgeW91IHZvdGVkLCBhbmQgcHJvcGVybHksIHRoYXQgZXhpbGVzIHNob3VsZCBiZSBzdWJqZWN0IHRvIGV4dHJhZGl0aW9uIGZyb20gYWxsIHRoZSBjaXRpZXMgb2YgdGhlIGFsbGlhbmNlLiBCdXQgYXMgZm9yIGFuIGV4aWxlIHdobyByZXR1cm5zIHdpdGhvdXQgYSBnZW5lcmFsIHJlc29sdXRpb24gb2YgdGhlIGFsbGllcywgY2FuIGFueW9uZSBleHBsYWluIHdoeSBpdCBpcyB1bmp1c3QgZm9yIHN1Y2ggYSBvbmUgdG8gYmUgcHV0IHRvIGRlYXRoPyBJIG1haW50YWluLCBnZW50bGVtZW4sIHRoYXQgaWYgeW91IHB1dCBtZSB0byBkZWF0aCwgeW91IHdpbGwgaGF2ZSBhdmVuZ2VkIGEgbWFuIHdobyB3YXMgdGhlIHdvcnN0IG9mIGFsbCB5b3VyIGVuZW1pZXMsIGJ1dCBpZiB5b3UgZGVjaWRlIHRoYXQgSSBoYXZlIGRvbmUgd2hhdCB3YXMgcmlnaHQsIHlvdSB3aWxsIGJlIGZvdW5kIHRvIGhhdmUgdGFrZW4gdmVuZ2VhbmNlIGJvdGggZm9yIHlvdXIgb3duIHNlbHZlcyBhbmQgZm9yIGFsbCB0aGUgYWxsaWVzLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.3.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIFRoZWJhbnMsIGFmdGVyIGhlYXJpbmcgdGhlc2Ugd29yZHMsIGRlY2lkZWQgdGhhdCBFdXBocm9uIGhhZCBtZXQgaGlzIGRlc2VydHM7IGhpcyBvd24gY2l0aXplbnMsIGhvd2V2ZXIsIGVzdGVlbWluZyBoaW0gYSBnb29kIG1hbiwgYnJvdWdodCBoaW0gaG9tZSwgYnVyaWVkIGhpbSBpbiB0aGVpciBtYXJrZXQtcGxhY2UsIGFuZCBwYXkgaGltIHBpb3VzIGhvbm91cnMgYXMgdGhlIGZvdW5kZXIgb2YgdGhlaXIgY2l0eS4gU28gdHJ1ZSBpdCBpcywgYXMgaXQgc2VlbXMsIHRoYXQgbW9zdCBwZW9wbGUgZGVmaW5lIGFzIGdvb2QgbWVuIHRoZWlyIG93biBiZW5lZmFjdG9ycy4KPC90cmFuc2xhdGlvbj4="
translation['7.4.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgc3Rvcnkgb2YgRXVwaHJvbiBoYXMgYmVlbiB0b2xkLCBhbmQgSSByZXR1cm4gdG8gdGhlIHBvaW50PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBpaS4gMjMuPC9ub3RlPiBmcm9tIHdoaWNoIEkgZGlncmVzc2VkIHRvIHRoaXMgc3ViamVjdC4gV2hpbGUsIG5hbWVseSwgdGhlIFBobGlhc2lhbnMgd2VyZSBzdGlsbCBmb3J0aWZ5aW5nIFRoeWFtaWEgYW5kIENoYXJlcyB3YXMgc3RpbGwgd2l0aCB0aGVtLCBPcm9wdXMgd2FzIHNlaXplZCBieSB0aG9zZSB3aG8gaGFkIGJlZW4gZXhpbGVkIHRoZXJlZnJvbS4gV2hlbiwgaG93ZXZlciwgdGhlIEF0aGVuaWFucyBoYWQgc2V0IG91dCBpbiBmdWxsIGZvcmNlIGFnYWluc3QgdGhlIGNpdHkgYW5kIGhhZCBzdW1tb25lZCBDaGFyZXMgZnJvbSBUaHlhbWlhLCB0aGUgcG9ydCBvZiB0aGUgU2ljeW9uaWFucyBpbiBpdHMgdHVybiB3YXMgcmVjYXB0dXJlZCBieSB0aGUgY2l0aXplbnMgb2YgU2ljeW9uIHRoZW1zZWx2ZXMgYW5kIHRoZSBBcmNhZGlhbnM7IGFzIGZvciB0aGUgQXRoZW5pYW5zLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PC9ub3RlPiBub25lIG9mIHRoZWlyIGFsbGllcyBjYW1lIHRvIHRoZWlyIGFzc2lzdGFuY2UsIGFuZCB0aGV5IHJldGlyZWQgYW5kIGxlZnQgT3JvcHVzIGluIHRoZSBwb3NzZXNzaW9uIG9mIHRoZSBUaGViYW5zIHBlbmRpbmcgYSBqdWRpY2lhbCBkZWNpc2lvbi4KPGRhdGUgYXV0aG5hbWU9Ii0zNjYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjYiPjM2NiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.4.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgbm93IEx5Y29tZWRlcywgdXBvbiBsZWFybmluZyB0aGF0IHRoZSBBdGhlbmlhbnMgd2VyZSBmaW5kaW5nIGZhdWx0IHdpdGggdGhlaXIgYWxsaWVzIGJlY2F1c2UsIHdoaWxlIHRoZXkgd2VyZSB0aGVtc2VsdmVzIHN1ZmZlcmluZyBtYW55IHRyb3VibGVzIG9uIHRoZWlyIGFjY291bnQsIG5vbmUgZ2F2ZSB0aGVtIGFueSBhc3Npc3RhbmNlIGluIHJldHVybiwgcGVyc3VhZGVkIHRoZSBUZW4gVGhvdXNhbmQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIGkuIDM4Ljwvbm90ZT4gdG8gbmVnb3RpYXRlIGZvciBhbiBhbGxpYW5jZSB3aXRoIHRoZSBBdGhlbmlhbnMuIEF0IGZpcnN0LCBpbmRlZWQsIHNvbWUgb2YgdGhlIEF0aGVuaWFucyB0b29rIGl0IGlsbCB0aGF0LCB3aGVuIHRoZXkgd2VyZSBmcmllbmRzIG9mIHRoZSBMYWNlZGFlbW9uaWFucywgdGhleSBzaG91bGQgYmVjb21lIGFsbGllcyBvZiB0aGVpciBhZHZlcnNhcmllczsgYnV0IHdoZW4gdXBvbiBjb25zaWRlcmF0aW9uIHRoZXkgZm91bmQgdGhhdCBpdCB3YXMgbm8gbGVzcyBhZHZhbnRhZ2VvdXMgdG8gdGhlIExhY2VkYWVtb25pYW5zIHRoYW4gdG8gdGhlbXNlbHZlcyB0aGF0IHRoZSBBcmNhZGlhbnMgc2hvdWxkIG5vdCByZXF1aXJlIHRoZSBzdXBwb3J0IG9mIHRoZSBUaGViYW5zLCB1bmRlciB0aGVzZSBjaXJjdW1zdGFuY2VzIHRoZXkgYWNjZXB0ZWQgdGhlIGFsbGlhbmNlIHdpdGggdGhlIEFyY2FkaWFucy4KPC90cmFuc2xhdGlvbj4="
translation['7.4.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPldoaWxlIEx5Y29tZWRlcyB3YXMgZW5nYWdlZCBpbiB0aGVzZSBuZWdvdGlhdGlvbnMsIHVwb24gaGlzIGRlcGFydHVyZSBmcm9tIEF0aGVucyBoZSBtZXQgaGlzIGRlYXRoIGJ5IHdoYXQgd2FzIHF1aXRlIG1hbmlmZXN0bHkgYSBkaXZpbmUgaW50ZXJwb3NpdGlvbi4gRm9yIHRoZXJlIHdlcmUgdmVyeSBtYW55IHNoaXBzIGF2YWlsYWJsZSBhbmQgaGUgc2VsZWN0ZWQgZnJvbSB0aGVtIHRoZSBvbmUgaGUgd2FudGVkIGFuZCBtYWRlIGFuIGFncmVlbWVudCB3aXRoIHRoZSBzYWlsb3JzIHRvIGxhbmQgaGltIHdoZXJldmVyIGhlIHNob3VsZCBoaW1zZWxmIGRpcmVjdDsgYW5kIGhlIGNob3NlIHRvIGxhbmQgYXQgdGhlIHZlcnkgc3BvdCB3aGVyZSB0aGUgQXJjYWRpYW4gZXhpbGVzIGNoYW5jZWQgdG8gYmUuIEhlLCB0aGVuLCBtZXQgaGlzIGRlYXRoIGluIHRoaXMgd2F5LCBidXQgdGhlIGFsbGlhbmNlIHdhcyByZWFsbHkgYWNjb21wbGlzaGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5NZWFudGltZSBEZW1vdGlvbiBzYWlkIGluIHRoZSBBc3NlbWJseSBvZiB0aGUgQXRoZW5pYW5zIHRoYXQgd2hpbGUgaXQgc2VlbWVkIHRvIGhpbSBhIGdvb2QgdGhpbmcgdG8gYmUgbmVnb3RpYXRpbmcgdGhpcyBmcmllbmRzaGlwIHdpdGggdGhlIEFyY2FkaWFucywgdGhleSBvdWdodCwgaGUgc2FpZCwgdG8gZ2l2ZSBpbnN0cnVjdGlvbnMgdG8gdGhlaXIgZ2VuZXJhbHMgdG8gc2VlIHRvIGl0IHRoYXQgQ29yaW50aCBhbHNvIHNob3VsZCBiZSBrZXB0IHNhZmUgZm9yIHRoZSBBdGhlbmlhbiBwZW9wbGU7IGFuZCBvbiBoZWFyaW5nIG9mPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY2Ij4zNjYgQi5DLjwvZGF0ZT48L25vdGU+IHRoaXMgdGhlIENvcmludGhpYW5zIHNwZWVkaWx5IHNlbnQgYWRlcXVhdGUgZ2Fycmlzb25zIG9mIHRoZWlyIG93biB0byBldmVyeSBwbGFjZSB3aGVyZSBBdGhlbmlhbnMgd2VyZSBvbiBndWFyZCBhbmQgdG9sZCB0aGUgbGF0dGVyIHRvIGRlcGFydCwgc2F5aW5nIHRoYXQgdGhleSBubyBsb25nZXIgaGFkIGFueSBuZWVkIG9mIGdhcnJpc29ucy4gVGhlIG1lbiBhY2NvcmRpbmdseSBvYmV5ZWQuIEFuZCBhcyBzb29uIGFzIHRoZSBBdGhlbmlhbnMgaGFkIGNvbWUgdG9nZXRoZXIgZnJvbSB0aGVpciBndWFyZC1zdGF0aW9ucyB0byB0aGUgY2l0eSBvZiBDb3JpbnRoLCB0aGUgQ29yaW50aGlhbnMgbWFkZSBwcm9jbGFtYXRpb24gdGhhdCBpZiBhbnkgb2YgdGhlIEF0aGVuaWFucyBoYWQgYmVlbiB3cm9uZ2VkLCB0aGV5IHdlcmUgdG8gcmVnaXN0ZXIgdGhlaXIgbmFtZXMsIGluIHRoZSBhc3N1cmFuY2UgdGhhdCB0aGV5IHdvdWxkIHJlY2VpdmUgdGhlaXIganVzdCBkdWVzLgo8ZGF0ZSBhdXRobmFtZT0iLTM2NiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NiI+MzY2IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.4.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPldoaWxlIHRoZXNlIG1hdHRlcnMgd2VyZSBpbiB0aGlzIHN0YXRlLCBDaGFyZXMgYXJyaXZlZCBhdCBDZW5jaHJlYWUgd2l0aCBhIGZsZWV0LiBBbmQgd2hlbiBoZSBsZWFybmVkIHdoYXQgaGFkIGJlZW4gZG9uZSwgaGUgc2FpZCB0aGF0IGhlIGhhZCBoZWFyZCB0aGVyZSB3YXMgcGxvdHRpbmcgYWdhaW5zdCB0aGUgc3RhdGUgYW5kIGhhZCBjb21lIHRvIGdpdmUgYWlkLiBUaGUgQ29yaW50aGlhbnMsIGhvd2V2ZXIsIHdoaWxlIHRoZXkgdGhhbmtlZCBoaW0sIHdlcmUgbm9uZSB0aGUgbW9yZSBkaXNwb3NlZCB0byBhZG1pdCBoaXMgc2hpcHMgaW50byB0aGVpciBoYXJib3VyLCBidXQgYmFkZSBoaW0gc2FpbCBhd2F5OyBhbmQgdGhleSBsaWtld2lzZSBzZW50IGF3YXkgdGhlIGhvcGxpdGVzIGFmdGVyIHJlbmRlcmluZyB0aGVtIHRoZWlyIGp1c3QgZHVlcy4gSXQgd2FzIGluIHRoaXMgd2F5LCB0aGVuLCB0aGF0IHRoZSBBdGhlbmlhbnMgZGVwYXJ0ZWQgZnJvbSBDb3JpbnRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPk9uIHRoZSBvdGhlciBoYW5kLCB0aGV5IHdlcmUgYm91bmQgYnkgdGhlIHRlcm1zIG9mIHRoZWlyIGFsbGlhbmNlIHRvIHNlbmQgdGhlaXIgY2F2YWxyeSB0byB0aGUgYWlkIG9mIHRoZSBBcmNhZGlhbnMgaW4gY2FzZSBhbnlvbmUgdG9vayB0aGUgZmllbGQgYWdhaW5zdCBBcmNhZGlhOyBidXQgdGhleSBkaWQgbm90IHNldCBmb290IHVwb24gTGFjb25pYSBmb3IgdGhlIHB1cnBvc2Ugb2Ygd2FyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgbm93IHRoZSBDb3JpbnRoaWFucywgaW4gdGhlIHRob3VnaHQgdGhhdCBpdCB3b3VsZCBiZSBkaWZmaWN1bHQgZm9yIHRoZW0gdG8gY29tZSBvZmYgc2FmZSwgc2luY2UgZXZlbiBiZWZvcmUgdGhpcyB0aW1lIHRoZXkgaGFkIGJlZW4gb3Zlcm1hc3RlcmVkIGJ5IGxhbmQgYW5kIG5vdyB0aGUgQXRoZW5pYW5zIGhhZCBiZWVuIGFkZGVkIHRvIHRoZSBudW1iZXIgb2YgdGhvc2Ugd2hvIHdlcmUgdW5mcmllbmRseSB0byB0aGVtLCByZXNvbHZlZCB0byBjb2xsZWN0IG1lcmNlbmFyaWVzLCBib3RoIGluZmFudHJ5IGFuZCBjYXZhbHJ5LiBPbmNlIGluIGNvbW1hbmQgb2YgdGhlc2UgdHJvb3BzLCB0aGV5IG5vdCBvbmx5IGd1YXJkZWQgdGhlaXIgY2l0eSBidXQgbGlrZXdpc2UgaW5mbGljdGVkIG11Y2ggaGFybSB1cG9uIHRoZWlyIGVuZW1pZXMgbmVhciBob21lOyBidXQgdG8gVGhlYmVzIHRoZXkgc2VudCBtZXNzZW5nZXJzIHRvIGFzayB3aGV0aGVyIHRoZXk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjYiPjM2NiBCLkMuPC9kYXRlPjwvbm90ZT4gY291bGQgb2J0YWluIHBlYWNlIGlmIHRoZXkgY2FtZSBmb3IgaXQuCjxkYXRlIGF1dGhuYW1lPSItMzY2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY2Ij4zNjYgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.4.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZSBUaGViYW5zIGJhZGUgdGhlbSBjb21lLCBzYXlpbmcgdGhhdCBwZWFjZSB3b3VsZCBiZSBncmFudGVkLCB0aGUgQ29yaW50aGlhbnMgcmVxdWVzdGVkIHRoYXQgdGhleSBzaG91bGQgYWxsb3cgdGhlbSB0byBnbyB0byB0aGVpciBhbGxpZXMgYWxzbywgdG8gdGhlIGVuZCB0aGF0IHRoZXkgbWlnaHQgY29uY2x1ZGUgdGhlIHBlYWNlIGluIGNvbXBhbnkgd2l0aCB0aG9zZSB3aG8gZGVzaXJlZCBwZWFjZSwgYW5kIGxlYXZlIHRob3NlIHdobyBwcmVmZXJyZWQgd2FyIHRvIGNvbnRpbnVlIHdhci4gVGhlIFRoZWJhbnMgaGF2aW5nIHBlcm1pdHRlZCB0aGVtIHRvIGRvIHRoaXMgbGlrZXdpc2UsIHRoZSBDb3JpbnRoaWFucyB3ZW50IHRvIExhY2VkYWVtb24gYW5kIHNhaWQ6CjwvdHJhbnNsYXRpb24+"
translation['7.4.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPuKAnE1lbiBvZiBMYWNlZGFlbW9uLCB3ZSBoYXZlIGNvbWUgdG8geW91IGFzIHlvdXIgZnJpZW5kcywgYW5kIHdlIGFzayB0aGF0IGluIGNhc2UgeW91IHNlZSBhbnkgc2FmZXR5IGZvciB1cyBpZiB3ZSBwZXJzaXN0IGluIHRoZSB3YXIsIHlvdSBtYWtlIGl0IGtub3duIHRvIHVzOyBidXQgaW4gY2FzZSB5b3UganVkZ2Ugb3VyIHNpdHVhdGlvbiB0byBiZSBob3BlbGVzcywgdGhhdCB5b3Ugam9pbiB3aXRoIHVzIGluIGNvbmNsdWRpbmcgcGVhY2UgaWYgaXQgaXMgdG8geW91ciBhZHZhbnRhZ2UgYWxzbzsgZm9yIHRoZXJlIGlzIG5vIG9uZSBpbiB0aGUgd29ybGQgYWxvbmcgd2l0aCB3aG9tIHdlIHNob3VsZCBtb3JlIGdsYWRseSBnYWluIHNhZmV0eSB0aGFuIHdpdGggeW91OyBpZiwgaG93ZXZlciwgeW91IGNvbnNpZGVyIHRoYXQgaXQgaXMgdG8geW91ciBhZHZhbnRhZ2UgdG8gY29udGludWUgdGhlIHdhciwgd2UgYmVnIHlvdSB0byBhbGxvdyB1cyB0byBjb25jbHVkZSBwZWFjZS4gRm9yIGlmIHdlIGFyZSBzYXZlZCwgd2UgbWlnaHQgcGVyaGFwcyBtYWtlIG91cnNlbHZlcyB1c2VmdWwgdG8geW91IGFnYWluIGF0IHNvbWUgZnV0dXJlIHRpbWU7IHdoZXJlYXMgaWYgd2UgYXJlIG5vdyBkZXN0cm95ZWQsIGl0IGlzIHBsYWluIHRoYXQgd2Ugc2hhbGwgbmV2ZXIgYmUgb2Ygc2VydmljZSBpbiB0aGUgZnV0dXJlLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['7.4.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5VcG9uIGhlYXJpbmcgdGhlc2Ugd29yZHMgdGhlIExhY2VkYWVtb25pYW5zIG5vdCBvbmx5IGFkdmlzZWQgdGhlIENvcmludGhpYW5zIHRvIGNvbmNsdWRlIHRoZSBwZWFjZSwgYnV0IGdhdmUgcGVybWlzc2lvbiB0byBzdWNoIG9mIHRoZWlyIG90aGVyIGFsbGllcyBhcyBwcmVmZXJyZWQgbm90IHRvIGNvbnRpbnVlIHRoZSB3YXIgaW4gY29tcGFueSB3aXRoIHRoZW0sIHRvIGNlYXNlOyBhcyBmb3IgdGhlbXNlbHZlcywgaG93ZXZlciwgdGhleSBzYWlkIHRoYXQgdGhleSB3b3VsZCBmaWdodCBvbiBhbmQgYWNjZXB0IHdoYXRldmVyIGZvcnR1bmUgaXQgcGxlYXNlZCB0aGUgZGVpdHkgdG8gc2VuZCwgYW5kIHRoYXQgdGhleSB3b3VsZCBuZXZlciBzdWJtaXQgdG8gYmUgZGVwcml2ZWQgb2Ygd2hhdCB0aGV5IGhhZCByZWNlaXZlZCBmcm9tIHRoZWlyIGZhdGhlcnMg4oCUIE1lc3NlbmUuCjwvdHJhbnNsYXRpb24+"
translation['7.4.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5TbyB0aGUgQ29yaW50aGlhbnMsIHVwb24gaGVhcmluZyB0aGVzZSB3b3JkcywgcHJvY2VlZGVkIHRvIFRoZWJlcyB0byBtYWtlIHRoZSBwZWFjZS4gVGhlIFRoZWJhbnMsIGhvd2V2ZXIsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY2Ij4zNjYgQi5DLjwvZGF0ZT48L25vdGU+IHdhbnRlZCB0aGVtIHRvIGJpbmQgdGhlbXNlbHZlcyB0byBhbiBhbGxpYW5jZSBhcyB3ZWxsOyBidXQgdGhleSByZXBsaWVkIHRoYXQgYW4gYWxsaWFuY2Ugd2FzIG5vdCBwZWFjZSBidXQgYW4gZXhjaGFuZ2Ugb2Ygd2FyLCBhbmQgdGhleSBzYWlkIHRoYXQgdGhleSBoYWQgY29tZSB0byBjb25jbHVkZSBhIHJlYWwgcGVhY2UsIGlmIHRoZSBUaGViYW5zIHNvIHBsZWFzZWQuIEFuZCB0aGUgVGhlYmFucywgc2VpemVkIHdpdGggYWRtaXJhdGlvbiBmb3IgdGhlbSBiZWNhdXNlLCBldmVuIHRob3VnaCB0aGV5IHdlcmUgaW4gcGVyaWwsIHRoZXkgcmVmdXNlZCB0byBiZSBpbnZvbHZlZCBpbiB3YXIgd2l0aCB0aGVpciBiZW5lZmFjdG9ycywgZ3JhbnRlZCBwZWFjZSB0byB0aGVtLCB0byB0aGUgUGhsaWFzaWFucywgYW5kIHRvIHRob3NlIHdobyBoYWQgY29tZSB3aXRoIHRoZW0gdG8gVGhlYmVzLCB3aXRoIHRoZSBjb25kaXRpb24gdGhhdCBlYWNoIHBhcnR5IHNob3VsZCBrZWVwIGl0cyBvd24gdGVycml0b3J5LiBBbmQgb24gdGhlc2UgdGVybXMgdGhlIG9hdGhzIHdlcmUgdGFrZW4uCjxkYXRlIGF1dGhuYW1lPSItMzY2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY2Ij4zNjYgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.4.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIHRoZSBQaGxpYXNpYW5zLCBpbmFzbXVjaCBhcyB0aGUgY29tcGFjdCBoYWQgYmVlbiBjb25jbHVkZWQgb24gdGhpcyBiYXNpcywgYXQgb25jZSB3aXRoZHJldyBmcm9tIFRoeWFtaWE7IGJ1dCB0aGUgQXJnaXZlcywgd2hvIGhhZCBzd29ybiB0byBtYWtlIHBlYWNlIG9uIHRoZXNlIHNhbWUgdGVybXMsIHdoZW4gdGhleSBmb3VuZCB0aGVtc2VsdmVzIHVuYWJsZSB0byBicmluZyBpdCBhYm91dCB0aGF0IHRoZSBQaGxpYXNpYW4gZXhpbGVzIHNob3VsZCByZW1haW4gYXQgVHJpY2FyYW51bSBvbiB0aGUgZ3JvdW5kIHRoYXQgdGhleSB3b3VsZCBiZSB3aXRoaW4gdGhlaXIgb3duIHN0YXRlLCB0b29rIG92ZXIgdGhlIHBsYWNlIGFuZCBrZXB0IGl0IGdhcnJpc29uZWQsIGNsYWltaW5nIG5vdyB0aGF0IHRoaXMgdGVycml0b3J5LCB3aGljaCBhIGxpdHRsZSB3aGlsZSBiZWZvcmUgdGhleSBoYWQgYmVlbiBsYXlpbmcgd2FzdGUgYXMgdGhvdWdoIGl0IHdlcmUgYW4gZW5lfXkncywgd2FzIHRoZWlyczsgYW5kIGFsdGhvdWdoIHRoZSBQaGxpYXNpYW5zIHByb3Bvc2VkIGEganVkaWNpYWwgZGVjaXNpb24sIHRoZXkgcmVmdXNlZCB0byBncmFudCB0aGUgcmVxdXVzdC4KPC90cmFuc2xhdGlvbj4="
translation['7.4.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgYWJvdXQgdGhpcyB0aW1lLCB0aGUgZmlyc3QgRGlvbnlzaXVzIGJlaW5nIG5vdyBkZWFkLCBoaXMgc29uIHNlbnQgdG8gdGhlIGFpZCBvZiB0aGUgTGFjZWRhZW1vbmlhbnMgdHdlbHZlIHRyaXJlbWVzIGFuZCBUaW1vY3JhdGVzIGFzIHRoZWlyIGNvbW1hbmRlci4gQW5kIHVwb24gaGlzIGFycml2YWwgaGUgaGVscGVkIHRoZW0gdG8gY2FwdHVyZSBTZWxsYXNpYTsgYW5kIGFmdGVyIGFjY29tcGxpc2hpbmcgdGhpcyBkZWVkIGhlIHNhaWxlZCBiYWNrIGhvbWUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdCBsb25nIGFmdGVyIHRoaXMgdGhlIEVsZWFucyBzZWl6ZWQgTGFzaW9uLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NSI+MzY1IEIuQy48L2RhdGU+PC9ub3RlPiB3aGljaCBpbiBhbmNpZW50IHRpbWVzIGhhZCBiZWVuIHRoZWlycywgYnV0IGF0IHByZXNlbnQgYmVsb25nZWQgdG8gdGhlIEFyY2FkaWFuIExlYWd1ZS4KPGRhdGUgYXV0aG5hbWU9Ii0zNjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjUiPjM2NSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.4.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5UeGUgQXJjYWRpYW5zLCBob3dldmVyLCBkaWQgbm90IGxldCB0aGUgbWF0dGVyIHBhc3MsIGJ1dCBhdCBvbmNlIGNhbGxlZCBvdXQgdGhlaXIgdHJvb3BzIGFuZCB3ZW50IHRvIHRoZSByZXNjdWUuIEFuZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NSI+MzY1IEIuQy48L2RhdGU+PC9ub3RlPiBvbiB0aGUgc2lkZSBvZiB0aGUgRWxlYW5zIHRoZSBUaHJlZSBIdW5kcmVkIGFuZCBsaWtld2lzZSB0aGUgRm91ciBIdW5kcmVkPGRhdGUgYXV0aG5hbWU9Ii0zNjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjUiPjM2NSBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gQXBwYXJlbnRseSB0d28gYm9kaWVzIG9mIHBpY2tlZCB0cm9vcHMuPC9ub3RlPiBjYW1lIG91dCB0byBtZWV0IHRoZW0uIE5vdyBhZnRlciB0aGUgRWxlYW5zIGhhZCBsYWluIGVuY2FtcGVkIG9uIGEgc29tZXdoYXQgbGV2ZWwgc3BvdCBvcHBvc2l0ZSB0aGUgZW5lbXkgdGhyb3VnaG91dCB0aGUgZGF5LCB0aGUgQXJjYWRpYW5zIGNsaW1iZWQgdXAgYnkgbmlnaHQgdG8gdGhlIHN1bW1pdCBvZiB0aGUgbW91bnRhaW4gd2hpY2ggd2FzIGFib3ZlIHRoZSBFbGVhbnM7IGFuZCBhdCBkYXlicmVhayB0aGV5IHByb2NlZWRlZCB0byBkZXNjZW5kIHVwb24gdGhlIEVsZWFucy4gVGhlbiB0aGUgbGF0dGVyLCBzZWVpbmcgdGhhdCB0aGUgQXJjYWRpYW5zIHdlcmUgbm90IG9ubHkgYXBwcm9hY2hpbmcgZnJvbSBoaWdoZXIgZ3JvdW5kIGJ1dCB3ZXJlIGFsc28gbWFueSB0aW1lcyB0aGVpciBudW1iZXIsIHdlcmUgeWV0IGFzaGFtZWQgdG8gcmV0cmVhdCB3aGlsZSBzdGlsbCBhdCBhIGRpc3RhbmNlLCBidXQgYWR2YW5jZWQgdG8gbWVldCB0aGUgZW5lbXksIGFuZCB0b29rIHRvIGZsaWdodCBvbmx5IGFmdGVyIGxldHRpbmcgdGhlbSBjb21lIHRvIGNsb3NlIHF1YXJ0ZXJzOyBhbmQgdGhleSBsb3N0IG1hbnkgbWVuIGFuZCBtYW55IGFybXMsIHNpbmNlIHRoZXkgcmV0cmVhdGVkIG92ZXIgZGlmZmljdWx0IGdyb3VuZC4KPC90cmFuc2xhdGlvbj4="
translation['7.4.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgQXJjYWRpYW5zIGhhZCBhY2NvbXBsaXNoZWQgdGhlc2UgdGhpbmdzLCB0aGV5IHByb2NlZWRlZCBhZ2FpbnN0IHRoZSBjaXRpZXMgb2YgdGhlIEFjcm9yaWFucy4gQW5kIGhhdmluZyBjYXB0dXJlZCB0aGVtLCB3aXRoIHRoZSBleGNlcHRpb24gb2YgVGhyYXVzdHVzLCB0aGV5IGFycml2ZWQgYXQgT2x5bXBpYSwgYW5kIGFmdGVyIGJ1aWxkaW5nIGEgc3RvY2thZGUgYXJvdW5kIHRoZSBoaWxsIG9mIENyb251cywga2VwdCBndWFyZCB0aGVyZSBhbmQgd2VyZSBtYXN0ZXJzIG9mIHRoZSBPbHltcGlhbiBtb3VudGFpbjsgdGhleSBsaWtld2lzZSBnYWluZWQgcG9zc2Vzc2lvbiBvZiBNYXJnYW5hLCB3aGljaCB3YXMgYmV0cmF5ZWQgdG8gdGhlbSBieSBzb21lIG9mIGl0cyBjaXRpemVucy4gV2hlbiBtYXR0ZXJzIGhhZCBwcm9ncmVzc2VkIHRvIHRoaXMgcG9pbnQsIHRoZSBFbGVhbnMgZmVsbCBiYWNrIGludG8gY29tcGxldGUgZGVzcG9uZGVuY3ksIHdoaWxlIHRoZSBBcmNhZGlhbnMgcHJvY2VlZGVkIGFnYWluc3QgdGhlaXIgY2FwaXRhbC4gQW5kIHRoZXkgYWR2YW5jZWQgYXMgZmFyIGFzIHRoZSBtYXJrZXRwbGFjZTsgdGhlcmUsIGhvd2V2ZXIsIHRoZSBob3JzZW1lbiBhbmQgdGhlIHJlc3Qgb2YgdGhlIEVsZWFucyBtYWRlIGEgc3RhbmQsIGFuZCB0aGV5IGRyb3ZlIHRoZSBBcmNhZGlhbnMgb3V0LCBraWxsZWQgc29tZSBvZiB0aGVtLCBhbmQgc2V0IHVwIGEgdHJvcGh5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlcmUgaGFkIGJlZW4gZGlzc2Vuc2lvbiBpbiBFbGlzIGV2ZW4gYmVmb3JlIHRoaXMgdGltZS4gRm9yIHRoZSBwYXJ0eSBvZiBDaGFyb3B1cywgVGhyYXNvbmlkYXMsIGFuZCBBcmdlaXVzIHdlcmUgdHJ5aW5nIHRvIGNvbnZlcnQgdGhlIHN0YXRlIGludG8gYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NSI+MzY1IEIuQy48L2RhdGU+PC9ub3RlPiBkZW1vY3JhY3ksIGFuZCB0aGUgcGFydHkgb2YgRXVhbGNhcywgSGlwcGlhcywgYW5kIFN0cmF0b2xhcyBpbnRvIGFuIG9saWdhcmNoeS4gQnV0IHdoZW4gdGhlIEFyY2FkaWFucyB3aXRoIGEgbGFyZ2UgZm9yY2Ugc2VlbWVkIHRvIGJlIGFsbGllcyBvZiB0aG9zZSB3aG8gd2lzaGVkIHRvIGhhdmUgYSBkZW1vY3JhY3ksIHRoZXJldXBvbiB0aGUgcGFydHkgb2YgQ2hhcm9wdXMgd2VyZSBib2xkZXIsIGFuZCBhZnRlciBtYWtpbmcgYXJyYW5nZW1lbnRzIHdpdGggdGhlIEFyY2FkaWFucyB0byBhaWQgdGhlbSwgc2VpemVkIHRoZSBBY3JvcG9saXMuCjxkYXRlIGF1dGhuYW1lPSItMzY1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY1Ij4zNjUgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.4.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgaG9yc2VtZW4sIGhvd2V2ZXIsIGFuZCB0aGUgVGhyZWUgSHVuZHJlZCBtYWRlIG5vIGRlbGF5LCBidXQgYXQgb25jZSBtYXJjaGVkIHVwIGFuZCBlamVjdGVkIHRoZW0sIHNvIHRoYXQgYWJvdXQgZm91ciBodW5kcmVkIG9mIHRoZSBjaXRpemVucywgd2l0aCBBcmdlaXVzIGFuZCBDaGFyb3B1cywgd2VyZSBiYW5pc2hlZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm90IGxvbmcgYWZ0ZXJ3YXJkcyB0aGVzZSBleGlsZXMgZW5saXN0ZWQgdGhlIGFpZCBvZiBzb21lIG9mIHRoZSBBcmNhZGlhbnMgYW5kIHNlaXplZCBQeWx1cy4gQW5kIG1hbnkgb2YgdGhlIGRlbW9jcmF0cyB3aXRoZHJldyBmcm9tIHRoZSBjYXBpdGFsIGFuZCBqb2luZWQgdGhlbSwgaW5hc211Y2ggYXMgdGhleSB3ZXJlIGluIHBvc3Nlc3Npb24gb2YgYSBnb29kIHN0cm9uZ2hvbGQgYW5kIGhhZCBhIGxhcmdlIGZvcmNlIOKAlCB0aGF0IG9mIHRoZSBBcmNhZGlhbnMg4oCUIHRvIHN1cHBvcnQgdGhlbS4gQWZ0ZXJ3YXJkcyB0aGUgQXJjYWRpYW5zIGludmFkZWQgdGhlIHRlcnJpdG9yeSBvZiB0aGUgRWxlYW5zIGFnYWluLCBiZWluZyBwZXJzdWFkZWQgYnkgdGhlIGV4eWxlcyB0aGF0IHRoZSBjaXR5IHdvdWxkIGNvbWUgb3ZlciB0byB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgb24gdGhhdCBvY2Nhc2lvbiB0aGUgQXNoYWVhbnMsIHdobyBoYWQgYmVjb21lIGZyaWVuZHMgb2YgdGhlIEVsZWFucywgZGVmZW5kZWQgdGhlaXIgY2l0eSBzdWNjZXNzZnVsbHksIHNvIHRoYXQgdGhlIEFyY2FkaWFucyByZXRpcmVkIHdpdGhvdXQgYWNjb21wbGlzaGluZyBhbnl0aGluZyBtb3JlIHRoYW4gdGhlIGxheWluZyB3YXN0ZSBvZiB0aGUgbGFuZCBvZiB0aGUgRWxlYX5zLiBBdCB0aGUgbW9tZW50LCBob3dldmVyLCB3aGVuIHRoZXkgd2VyZSBkZXBhcnRpbmcgZnJvbSB0aGUgRWxlYW4gdGVycml0b3J5LCB0aGV5IGxlYXJuZWQgdGhhdDB0aGUgUGVsbGVuZWFucyB3ZXJlIGluIEVsaXMsIGFuZCBhZnRlciBtYWtpbmcgYW4gZXhjZWVkaW5nbHkgbG9uZyBtYXJjaCBieSBuaWdodCBzZWl6ZWQgdGhlaXIgdG93biBvZiBPbHVydXM7IGZvciBieSB0aGlzIHRpbWUgdGhlIFBlbGxlbmVhbnMgaGFkIGNvbWUgYmFjayBhZ2FpbiB0byB0aGVpciBhbGxpYW5jZSB3aXRoIHRoZSBMYWNlZGFlbW9uaWFucy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFNlZSBpaS4gMTEgYW5kIG5vdGUgb24gaWkuIDE4Ljwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['7.4.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgd2hlbiB0aGUgUGVsbGVuZWFucyBsZWFybmVkIHRoZSBuZXdzIGluIHJlZ2FyZCB0byBPbHVydXMsIHRoZXkgaW4gdGhlaXIgdHVybiBtYWRlIGEgcm91bmRhYm91dCBtYXJjaDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NSI+MzY1IEIuQy48L2RhdGU+PC9ub3RlPiBhbmQgYXMgYmVzdCB0aGV5IGNvdWxkIGdvdCBpbnRvIHRoZWlyIG93biBzaXR5LCBQZWxsZW5lLiBBbmQgYWZ0ZXIgdGhpcyB0aGV5IGNhcnJpZWQgb24gd2FyIG5vdCBvbmx5IHdpdGggdGhlIEFyY2FkaWFucyBhdCBPbHVydXMsIGJ1dCBhbHNvIHdpdGggdGhlIGVudGlyZSBib2R5IG9mIHRoZSBkZW1vY3JhdHMgb2YgdGhlaXIgb3duIHN0YXRlLCBhbHRob3VnaCB0aGV5IHdlcmUgdGhlbXNlbHZlcyB2ZXJ5IGZldyBpbiBudW1iZXI7IGJ1dCBuZXZlcnRoZWxlc3MgdGhleSBkaWQgbm90IGNlYXNlIHVudGlsIHRoZXkgaGFkIGNhcHR1cmVkIE9sdXJ1cyBieSBzaWVnZS4KPGRhdGUgYXV0aG5hbWU9Ii0zNjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjUiPjM2NSBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.4.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIEFyY2FkaWFucyBvbiB0aGVpciBzaWRlIG1hZGUgeWV0IGFub3RoZXIgZXhwZWRpdGlvbiBpbnRvIEVsaXMuIEFuZCB3aGlsZSB0aGV5IHdlcmUgZW5jYW1wZWQgYmV0d2VlbiBDeWxsZW5lIGFuZCB0aGUgY2FwaXRhbCwgdGhlIEVsZWFucyBtYWRlIGFuIGF0dGFjayB1cG9uIHRoZW0sIGJ1dCB0aGUgQXJjYWRpYW5zIHN0b29kIHRoZWlyIGdyb3VuZCBhbmQgZGVmZWF0ZWQgdGhlbS4gVGhlbiBBbmRyb21hY2h1cywgdGhlIEVsZWFuIGNvbW1hbmRlciBvZiBob3JzZSwgdGhlIG1hbiB3aG8gd2FzIHRob3VnaHQgdG8gYmUgcmVzcG9uc2libGUgZm9yIGhhdmluZyBqb2luZWQgYmF0dGxlLCBraWxsZWQgaGltc2VsZjsgYnV0IHRoZSByZXN0IHJldGlyZWQgdG8gdGhlIGNpdHkuIEFtb25nIHRob3NlIHdobyBwZXJpc2hlZCBpbiB0aGlzIGJhdHRsZSB3YXMgYWxzbyBTb2NsZWlkZXMgdGhlIFNwYXJ0aWF0ZSwgd2hvIGhhZCBtZWFud2hpbGUgYXJyaXZlZDsgZm9yIGJ5IHRoaXMgdGltZSB0aGUgTGFjZWRhZW1vbmlhbnMgd2VyZSBhbGxpZXMgb2YgdGhlIEVsZWFucy4KPC90cmFuc2xhdGlvbj4="
translation['7.4.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgbm93IHRoZSBFbGVhbnMsIGJlaW5nIGhhcmQgcHJlc3NlZCBpbiB0aGVpciBvd24gbGFuZCwgc2VudCBhbWJhc3NhZG9ycyBhbmQgYXNrZWQgdGhlIExhY2VkYWVtb25pYW5zIGFsc28gdG8gdGFrZSB0aGUgZmllbGQgYWdhaW5zdCB0aGUgQXJjYWRpYW5zLCBiZWxpZXZpbmcgdGhhdCB0aGUgQXJjYWRpYW5zIHdvdWxkIGJlIG1vc3QgbGlrZWx5IHRvIGdpdmUgdXAgdGhlIHN0cnVnZ2xlIGluIHRoaXMgZXZlbnQsIHRoYXQgaXMsIGlmIHRoZXkgd2VyZSBiZXNldCBieSB3YXIgZnJvbSBib3RoIHNpZGVzLiBBcyBhIHJlc3VsdCBvZiB0aGlzIHJlcXVlc3QgQXJjaGlkYW11cyB0b29rIHRoZSBmaWVsZCB3aXRoIHRoZSBjaXRpemVuIHRyb29wcyBhbmQgc2VpemVkIENyb21udXMuIEFuZCBhZnRlciBsZWF2aW5nIGluIHRoZSB0b3duIGFzIGEgZ2Fycmlzb24gdGhyZWUgb2YgdGhlIHR3ZWx2ZSBiYXR0YWxpb25zLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gVGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs674b25z4fOv8+CPC9mb3JlaWduPiB3YXMgaGFsZiBhIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs684b25z4HOsTwvZm9yZWlnbj4gKHJlZ2ltZW50KS48L25vdGU+IGhlIHRoZW4gcmV0dXJuZWQgaG9tZXdhcmRzLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ou+G9uc+Hzr/PgjwvZm9yZWlnbj4gd2FzIGhhbGYgYSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvOG9uc+BzrE8L2ZvcmVpZ24+IChyZWdpbWVudCkuPC90cmFuc2xhdGlvbj4="
translation['7.4.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIEFyY2FkaWFucywgZ2F0aGVyZWQgdG9nZXRoZXIgYXMgdGhleSB3ZXJlIGluIGNvbnNlcXVlbmNlIG9mIHRoZWlyIGV4cGVkaXRpb24gaW50byBFbGlzLCBjYW1lIHRvIHRoZSByZXNjdWUgYW5kIHN1cnJvdW5kZWQgQ3JvbW51cyB3aXRoIGEgZG91YmxlIHN0b2NrYWRlLCBhbmQsIGJlaW5nIHRodXMgaW4gYSBzYWZlIHBvc2l0aW9uLCBiZXNpZWdlZCB0aGUgcGVvcGxlIGluIENyb21udXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzY1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY1Ij4zNjUgQi5DLjwvZGF0ZT48L25vdGU+IFRoZW4gdGhlIGNpdHkgb2YgTGFjZWRhZW1vbiwgZGlzdHJlc3NlZCBhdCB0aGUgYmVzaWVnaW5nIG9mIGl0cyBjaXRpemVucywgc2VudCBvdXQgYW4gYXJteS4gQW5kIG9uIHRoaXMgb2NjYXNpb24gYWxzbyBBcmNoaWRhbXVzIHdhcyBpbiBjb21tYW5kLiBXaGVuIGhlIGhhZCBjb21lLCBoZSBsYWlkIHdhc3RlIGFzIG11Y2ggYXMgaGUgY291bGQgYm90aCBvZiBBcmNhZGlhIGFuZCBvZiBTY2lyaXRpcywgYW5kIGRpZCBldmVyeXRoaW5nIGluIG9yZGVyLCBpZiBwb3NzaWJsZSwgdG8gZHJhdyBvZmYgdGhlIGJlc2llZ2Vycy4gVGhlIEFyY2FkaWFucywgaG93ZXZlciwgd2VyZSBub3QgYW55IG1vcmUgZGlzcG9zZWQgdG8gc3RpciB0aGFuIGJlZm9yZSwgYnV0IGRpc3JlZ2FyZGVkIGFsbCB0aGVzZSBkb2luZ3MuCjxkYXRlIGF1dGhuYW1lPSItMzY1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY1Ij4zNjUgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.4.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuIEFyY2hpZGFtdXMsIGVzcHlpbmcgYSBoaWxsIG92ZXIgd2hpY2ggdGhlIEFyY2FkaWFucyBoYWQgY2FycmllZCB0aGVpciBvdXRlciBzdG9ja2FkZSwgY2FtZSB0byB0aGUgY29uY2x1c2lvbiB0aGF0IGhlIGNvdWxkIGNhcHR1cmUgaXQsIGFuZCB0aGF0IGlmIGhlIGJlY2FtZSBtYXN0ZXIgb2YgdGhpcyBoaWxsLCB0aGUgYmVzaWVnZXJzIGF0IGl0cyBmb290IHdvdWxkIG5vdCBiZSBhYmxlIHRvIGhvbGQgdGhlaXIgcG9zaXRpb24uIE5vdyB3aGlsZSBoZSB3YXMgbGVhZGluZyB0aGUgd2F5IHRvIHRoaXMgcGxhY2UgYnkgYSByb3VuZGFib3V0IHJvdXRlLCBhcyBzb29uIGFzIHRoZSBwZWx0YXN0cyB3aG8gd2VyZSBydW5uaW5nIG9uIGFoZWFkIG9mIEFyY2hpZGFtdXMgY2F1Z2h0IHNpZ2h0IG9mIHRoZSBFcGFyaXRpPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBUaGUgbmFtZSBnaXZlbiB0byB0aGUgcmVndWxhciB0cm9vcHMgb2YgdGhlIEFyY2FkaWFuIExlYWd1ZS48L25vdGU+IG91dHNpZGUgdGhlIHN0b2NrYWRlLCB0aGV5IGF0dGFja2VkIHRoZW0sIGFuZCB0aGUgY2F2YWxyeSBlbmRlYXZvdXJlZCB0byBqb2luIGluIHRoZSBhdHRhY2suIFRoZSBlbmVteSwgaG93ZXZlciwgZGlkIG5vdCBnaXZlIHdheSwgYnV0IGZvcm1pbmcgdGhlbXNlbHZlcyBpbnRvIGEgY29tcGFjdCBib2R5LCByZW1haW5lZCBxdWlldC4gVGhlbiB0aGUgTGFjZWRhZW1vbmlhbnMgYXR0YWNrZWQgYWdhaW4uIFRoZSBlbmVteSBkaWQgbm90IGdpdmUgd2F5IGV2ZW4gdGhlbiwgYnV0IG9uIHRoZSBjb250cmFyeSBwcm9jZWVkZWQgdG8gYWR2YW5jZSwgYW5kIGJ5IHRoaXMgdGltZSB0aGVyZSB3YXMgYSBkZWFsIG9mIHNob3V0aW5nOyBBcmNoaWRhbXVzIGhpbXNlbGYgdGhlcmV1cG9uIGNhbWUgdG8gdGhlIHJlc2N1ZSwgdHVybmluZyBvZmYgYWxvbmcgdGhlIHdhZ29uIHJvYWQgd2hpY2ggcnVucyB0byBDcm9tbnVzIGFuZCBsZWFkaW5nIGhpcyBtZW4gaW4gZG91YmxlIGZpbGUsIGp1c3QgYXMgaGUgY2hhbmNlZCB0byBoYXZlIHRoZW0gZm9ybWVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgYXMgc29vbiBhcyB0aGUgdHdvIGZvcmNlcyBoYWQgY29tZSBuZWFyIHRvIG9uZSBhbm90aGVyLCB0aGUgdHJvb3BzIG9mIEFyY2hpZGFtdXMgaW4gY29sdW1uLCBzaW5jZSB0aGV5IHdlcmUgbWFyY2hpbmcgYWxvbmcgYSByb2FkLCBhbmQgdGhlIEFyY2FkaWFucyBtYXNzZWQgdG9nZXRoZXIgaW4gY2xvc2Ugb3JkZXIsIGF0IHRoaXMganVuY3R1cmUgdGhlIExhY2VkYWVtb25pYW5zIHdlcmUgbm88bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+MzY1IEIuQy48L25vdGU+IGxvbmdlciBhYmxlIHRvIGhvbGQgb3V0IGFnYWluc3QgdGhlIHN1cGVyaW9yIHdlaWdodCBvZiB0aGUgQXJjYWRpYW5zLCBidXQgQXJjaGlkYW11cyBzcGVlZGlseSByZWNlaXZlZCBhIHdvdW5kIHN0cmFpZ2h0IHRocm91Z2ggaGlzIHRoaWdoIGFuZCBzcGVlZGlseSB0aG9zZSB3aG8gZm91Z2h0IGluIGZyb250IG9mIGhpbSBrZXB0IGZhbGxpbmcsIGFtb25nIHRoZW0gUG9seWFlbmlkYXMgYW5kIENoaWxvbiwgd2hvIHdhcyBtYXJyaWVkIHRvIHRoZSBzaXN0ZXIgb2YgQXJjaGlkYW11czsgYW5kIHRoZSB3aG9sZSBudW1iZXIgb2YgdGhlbSB3aG8gZmVsbCBhdCB0aGF0IHRpbWUgd2FzIG5vdCBsZXNzIHRoYW4gdGhpcnR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiB0aGUgTGFjZWRhZW1vbmlhbnMgYXMgdGhleSByZXRpcmVkIGFsb25nIHRoZSByb2FkIGNhbWUgb3V0IGludG8gb3BlbiBncm91bmQsIHRoZXkgaW1tZWRpYXRlbHkgZm9ybWVkIHRoZW1zZWx2ZXMgaW4gbGluZSBvZiBiYXR0bGUgYWdhaW5zdCB0aGUgZW5lbXkuIFRoZSBBcmNhZGlhbnMgb24gdGhlaXIgc2lkZSBzdG9vZCBpbiBjbG9zZSBvcmRlciwganVzdCBhcyB0aGV5IHdlcmUsIGFuZCB3aGlsZSBpbmZlcmlvciBpbiBudW1iZXJzLCB0aGV5IHdlcmUgaW4gYmV0dGVyIHNwaXJpdHMgYnkgZmFyLCBzaW5jZSB0aGV5IGhhZCBhdHRhY2tlZCBhIGZvZSB3aG8gcmV0cmVhdGVkIGFuZCBoYWQga2lsbGVkIG1lbi4gVGhlIExhY2VkYWVtb25pYW5zLCBvbiB0aGUgb3RoZXIgaGFuZCwgd2VyZSBleGNlZWRpbmdseSBkZXNwb25kZW50LCBmb3IgdGhleSBzYXcgdGhhdCBBcmNoaWRhbXVzIHdhcyB3b3VuZGVkIGFuZCB0aGV5IGhhZCBoZWFyZCB0aGUgbmFtZXMgb2YgdGhlIGRlYWQsIHdobyB3ZXJlIG5vdCBvbmx5IGJyYXZlIG1lbiBidXQgd2VsbCBuaWdoIHRoZWlyIG1vc3QgZGlzdGluZ3Vpc2hlZC4KPC90cmFuc2xhdGlvbj4="
translation['7.4.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiwgdGhlIEFyY2FkaWFucyBiZWluZyBub3cgY2xvc2UgYXQgaGFuZCwgb25lIG9mIHRoZSBvbGRlciBtZW4gc2hvdXRlZCBvdXQgYW5kIHNhaWQ6IOKAnFdoeSwgc2lycywgc2hvdWxkIHdlIGZpZ2h0LCBhbmQgbm90IHJhdGhlciBtYWtlIGEgdHJ1Y2UgYW5kIGJlY29tZSByZWNvbmNpbGVkP+KAnSBib3RoIHNpZGVzIGhlYXJkIGhpbSBnbGFkbHkgYW5kIG1hZGUgYSB0cnVjZS4gQWNjb3JkaW5nbHkgdGhlIExhY2VkYWVtb25pYW5zIHRvb2sgdXAgdGhlaXIgZGVhZCBhbmQgZGVwYXJ0ZWQsIHdoaWxlIHRoZSBBcmNhZGlhbnMgcmV0dXJuZWQgdG8gdGhlIHBsYWNlIHdoZXJlIHRoZXkgaGFkIG9yaWdpbmFsbHkgYmVndW4gdG8gYWR2YW5jZSwgYW5kIHRoZXJlIHNldCB1cCBhIHRyb3BoeS4KPC90cmFuc2xhdGlvbj4="
translation['7.4.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hpbGUgdGhlIEFyY2FkaWFucyB3ZXJlIG9jY3VwaWVkIGFib3V0IENyb21udXMsIHRoZSBFbGVhbnMgaW4gdGhlIGNhcGl0YWwgcHJvY2VlZGVkIGluIHRoZSBmaXJzdCBwbGFjZSBhZ2FpbnN0IFB5bHVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gMTYuPC9ub3RlPiBhbmQgZmVsbCBpbiB3aXRoIHRoZSBQeWxpYW5zIGFmdGVyIHRoZSBsYXR0ZXIgaGFkIGJlZW4gZHJpdmVuIG91dCBvZiBUaGFsYW1hZS4gQW5kIHdoZW4gdGhlIGhvcnNlbWVuIG9mIHRoZSBFbGVhbnMsIGFzIHRoZXkgcm9kZSBhbG9uZywgY2F1Z2h0IHNpZ2h0IG9mIHRoZSBQeWxpYW5zLCB0aGV5IGRpZCBub3Q8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjUiPjM2NSBCLkMuPC9kYXRlPjwvbm90ZT4gZGVsYXksIGJ1dCBhdHRhY2tlZCBhdCBvbmNlLCBhbmQgdGhleSBraWxsZWQgc29tZSBvZiB0aGVtLCB3aGlsZSBvdGhlcnMgZmxlZCBmb3IgcmVmdWdlIHRvIGEgaGlsbDsgYnV0IGFzIHNvb24gYXMgdGhlIGluZmFudHJ5IGNhbWUgdXAgdGhleSBkaXNsb2RnZWQgdGhvc2UgdXBvbiB0aGUgaGlsbCBhbHNvLCBhbmQga2lsbGVkIHNvbWUgb2YgdGhlbSBvbiB0aGUgc3BvdCBhbmQgdG9vayBjYXB0aXZlIG90aGVycywgbmVhcmx5IHR3byBodW5kcmVkIGluIG51bWJlci4gVGhlcmV1cG9uIHRoZXkgc29sZCBhbGwgYW1vbmcgdGhlIHByaXNvbmVycyB3aG8gd2VyZSBmb3JlaWduZXJzIGFuZCBwdXQgdG8gdGhlIHN3b3JkIGFsbCB3aG8gd2VyZSBFbGVhbiBleGlsZXMuIEFmdGVyIHRoaXMgdGhlIEVsZWFucyBub3Qgb25seSBjYXB0dXJlZCB0aGUgUHlsaWFucywgYWxvbmcgd2l0aCB0aGVpciBzdHJvbmdob2xkLCBpbmFzbXVjaCBhcyBubyBvbmUgY2FtZSB0byB0aGVpciBhaWQsIGJ1dCBhbHNvIHJlY292ZXJlZCBNYXJnYW5hLgo8ZGF0ZSBhdXRobmFtZT0iLTM2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NSI+MzY1IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.4.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3IgdGhlIExhY2VkYWVtb25pYW5zLCB0aGV5IGFmdGVyd2FyZHMgd2VudCBhZ2FpbnN0IENyb21udXMgYWdhaW4gYnkgbmlnaHQsIG1hZGUgdGhlbXNlbHZlcyBtYXN0ZXJzIG9mIHRoZSBzdG9ja2FkZSB3aGljaCB3YXMgb3Bwb3NpdGUgdGhlIEFyZ2l2ZXMsIGFuZCBpbW1lZGlhdGVseSBwcm9jZWVkZWQgdG8gY2FsbCBmb3J0aCB0aGUgTGFjZWRhZW1vbmlhbnMgd2hvIHdlcmUgYmVzaWVnZWQgdGhlcmUuIE5vdyBhbGwgd2hvIGNoYW5jZWQgdG8gYmUgbmVhcmVzdCBhdCBoYW5kIGFuZCBzZWl6ZWQgdGhlIG9wcG9ydHVuaXR5IHByb21wdGx5LCBjYW1lIGZvcnRoOyBidXQgc3VjaCBhcyB3ZXJlIGZvcmVzdGFsbGVkIGJ5IGEgbGFyZ2UgYm9keSBvZiB0aGUgQXJjYWRpYW5zIHdoaWNoIGNhbWUgdG8gdGhlIHJlc2N1ZSwgd2VyZSBzaHV0IG9mZiBpbnNpZGUgdGhlIHN0b2NrYWRlLCBjYXB0dXJlZCwgYW5kIGRpc3RyaWJ1dGVkLiBBbmQgdGhlIEFyZ2l2ZXMgcmVjZWl2ZWQgb25lIHBvcnRpb24sIHRoZSBUaGViYW5zIG9uZSwgdGhlIEFyY2FkaWFucyBvbmUsIGFuZCB0aGUgTWVzc2VuaWFucyBvbmUuIEFuZCB0aGUgd2hvbGUgbnVtYmVyIHdobyB3ZXJlIGNhcHR1cmVkIG9mIHRoZSBTcGFydGlhdGFlIGFuZCB0aGUgUGVyaW9lY2kgY2FtZSB0byBtb3JlIHRoYW4gb25lIGh1bmRyZWQuCjwvdHJhbnNsYXRpb24+"
translation['7.4.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgQXJjYWRpYW5zIHdlcmUgbm8gbG9uZ2VyIG9jY3VwaWVkIHdpdGg8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjQiPjM2NCBCLkMuPC9kYXRlPjwvbm90ZT4gQ3JvbW51cywgdGhleSBvY2N1cGllZCB0aGVtc2VsdmVzIGFnYWluIHdpdGggdGhlIEVsZWFucywgYW5kIHRoZXkgbm90IG9ubHkga2VwdCBPbHltcGlhIG1vcmUgc3Ryb25nbHkgZ2Fycmlzb25lZCwgYnV0IGFsc28sIHNpbmNlIGFuIE9seW1waWMgeWVhciB3YXMgY29taW5nIG9uLCBwcmVwYXJlZCB0byBjZWxlYnJhdGUgdGhlIE9seW1waWMgZ2FtZXMgaW4gY29tcGFueSB3aXRoIHRoZSBQaXNhdGFucywgd2hvIHNheSB0aGF0IHRoZXkgd2VyZSB0aGUgZmlyc3QgdG8gaGF2ZSBjaGFyZ2Ugb2YgdGhlIHNhbmN0dWFyeS4gQnV0IHdoZW4gdGhlIG1vbnRoIGNhbWUgaW4gd2hpY2ggdGhlIE9seW1waWMgZ2FtZXMgdGFrZSBwbGFjZSBhbmQgdGhlIGRheXMgb24gd2hpY2ggdGhlIGZlc3RhbDxkYXRlIGF1dGhuYW1lPSItMzY0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzY0Ij4zNjQgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjQiPjM2NCBCLkMuPC9kYXRlPjwvbm90ZT4gYXNzZW1ibHkgZ2F0aGVycywgYXQgdGhpcyB0aW1lIHRoZSBFbGVhbnMsIGFmdGVyIG1ha2luZyB0aGVpciBwcmVwYXJhdGlvbnMgb3Blbmx5IGFuZCBzdW1tb25pbmcgdGhlIEFjaGFlYW5zIHRvIHRoZWlyIGFpZCwgcHJvY2VlZGVkIHRvIG1hcmNoIGFsb25nIHRoZSByb2FkIGxlYWRpbmcgdG8gT2x5bXBpYS4KPGRhdGUgYXV0aG5hbWU9Ii0zNjQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjQiPjM2NCBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.4.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIEFyY2FkaWFucyBoYWQgbmV2ZXIgaW1hZ2luZWQgdGhhdCB0aGUgRWxlYW5zIHdvdWxkIGNvbWUgYWdhaW5zdCB0aGVtLCBhbmQgd2VyZSB0aGVtc2VsdmVzIGRpcmVjdGluZyB0aGUgZmVzdGFsIG1lZXRpbmcgaW4gY29tcGFueSB3aXRoIHRoZSBQaXNhdGFucy4gVGhleSBoYWQgYWxyZWFkeSBmaW5pc2hlZCB0aGUgaG9yc2UtcmFjZSwgYW5kIHRoZSBldmVudHMgb2YgdGhlIHBlbnRhdGhsb248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFRoZSBwZW50YXRobHVtLCB3aGljaCBpbW1lZGlhdGVseSBmb2xsb3dlZCB0aGUgaG9yc2UtcmFjZSwgY29uc2lzdGVkIOKAlCBhcyBpdHMgbmFtZSBpbXBsaWVzIOKAlCBvZiBmaXZlIGV2ZW50cywgdml6LiwgcnVubmluZywganVtcGluZywgZGlzY3VzLXRocm93aW5nLCBqYXZlbGluLWh1cmxpbmcsIGFuZCB3cmVzdGxpbmcuIFRoZSBvcmRlciBvZiB0aGVzZSBldmVudHMgaXMgdW5jZXJ0YWluLCBleGNlcHQgdGhhdCB0aGUgd3Jlc3RsaW5nIGNvbnRlc3Qgd2FzIHRoZSBsYXN0LCB3aGlsZSB0aGUgZm9vdC1yYWNlIHdhcyBpbiBhbGwgcHJvYmFiaWxpdHkgdGhlIGZpcnN0LiBUaGUgZmlyc3QgZm91ciBldmVudHMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+KM+E4b2wIM60z4HOv868zrnOuuG8hDwvZm9yZWlnbj4gd2VyZSBoZWxkIGluIHRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtM+B4b25zrzOv8+CLDwvZm9yZWlnbj4gb3IgcmFjZS1jb3Vyc2UsIHRoZSB3cmVzdGxpbmcgdXN1YWxseSBpbiB0aGUgb3BlbiBzcGFjZSBpbiBmcm9udCBvZiB0aGUgdHJlYXN1cnkgc3RlcHMuPC9ub3RlPiBoZWxkIGluIHRoZSByYWNlLWNvdXJzZS4gQW5kIHRoZSBjb21wZXRpdG9ycyB3aG8gaGFkIHJlYWNoZWQgdGhlIHdyZXN0bGluZzxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPijPhOG9sCDOtM+Bzr/OvM65zrrhvIQ8L2ZvcmVpZ24+IHdlcmUgaGVsZCBpbiB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTPgeG9uc68zr/Pgiw8L2ZvcmVpZ24+IG9yIHJhY2UtY291cnNlLCB0aGUgd3Jlc3RsaW5nIHVzdWFsbHkgaW4gdGhlIG9wZW4gc3BhY2UgaW4gZnJvbnQgb2YgdGhlIHRyZWFzdXJ5IHN0ZXBzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gaS5lLiwgaGFkIHN1cnZpdmVkIHRoZSBmaXJzdCBmb3VyIGV2ZW50cy48L25vdGU+IHdlcmUgbm8gbG9uZ2VyIGluIHRoZSByYWNlLWNvdXJzZSwgYnV0IHdlcmUgd3Jlc3RsaW5nIGluIHRoZSBzcGFjZSBiZXR3ZWVuIHRoZSByYWNlLWNvdXJzZSBhbmQgdGhlIGFsdGFyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gVGhlIGdyZWF0IGFsdGFyIG9mIFpldXMsIHdob3NlIHNhY3JlZG5lc3Mgd2FzIGV4cGVzdGVkIHRvIHByb3RlY3QgdGhlbSBmcm9tIGFueSBhdHRhY2sgYnkgdGhlIEVsZWFucy48L25vdGU+IEZvciB0aGUgRWxlYW5zLCB1bmRlciBhcm1zLCBoYWQgYnkgdGhpcyB0aW1lIHJlYWNoZWQgdGhlIHNhY3JlZCBwcmVjaW5jdC4gVGhlbiB0aGUgQXJjYWRpYW5zLCB3aXRob3V0IGFkdmFuY2luZyB0byBtZWV0IHRoZW0sIGZvcn1lZCBpbiBsaW5lIG9mIGJhdHRsZSBvbiB0aGUgcml2ZXIgQ2xhZGF1cywgd2hpY2ggZmxvd3MgcGFzdCB0aGUgQWx0aXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFRoZSBpbm5lciBwb3J0aW9uIG9mIHRoZSBzYWNyZWQgcHJlY2luY3QgYm9yZSB0aGlzIG5hbWUuPC9ub3RlPiBhbmQgZW1wdGllcyBpbnRvIHRoZSBBbHBoZXVzLiBUaGV5IGhhZCBhbGxpZXMgYWxzbyB0byBzdXBwb3J0IHRoZW0sIGFib3V0IHR3byB0aG91c2FuZCBob3BsaXRlcyBvZiB0aGUgQXJnaXZlcyBhbmQgYWJvdXQgZm91ciBodW5kcmVkIGhvcnNlbWVuIG9mIHRoZSBBdGhlbmlhbnMuCjwvdHJhbnNsYXRpb24+"
translation['7.4.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhlIEVsZWFucyBmb3JtZWQgaW4gbGluZSBvbiB0aGUgb3Bwb3NpdGUgc2lkZSBvZiB0aGUgcml2ZXIsIGFuZCwgYWZ0ZXIgb2ZmZXJpbmcgc2FjcmlmaWNlLCBpbW1lZGlhdGVseSBhZHZhbmNlZC4gQW5kIGFsdGhvdWdoIGluIGZvcm1lciB0aW1lIHRoZXkgaGFkIGJlZW4gZGVzcGlzZWQgaW4gbWF0dGVycyBvZiB3YXIgYnkgdGhlIEFyY2FkaWFucyBhbmQgQXJnaXZlcywgYW5kIGRlc3Bpc2VkIGJ5IHRoZSBBY2hhZWFucyBhbmQgQXRoZW5pYW5zLCBuZXZlcnRoZWxlc3Mgb24gdGhhdCBkYXkgdGhleSBsZWQgdGhlaXIgYWxsaWVzIGZvcndhcmQsIGFzIG1lbiB3aG8gd2VyZSB1bmV4Y2VsbGVkIGluIHZhbG91ciwgYW5kIHRoZXkgbm90IG9ubHkgcm91dGVkIHRoZSBBcmNhZGlhbnMgYXQgb25jZSDigJQgZm9yIGl0IHdhcyB0aGVzZSB3aG9tIHRoZXkgZW5jb3VudGVyZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjQiPjM2NCBCLkMuPC9kYXRlPjwvbm90ZT4gZmlyc3Qg4oCUIGJ1dCB3aXRoc3Rvb2QgdGhlIGF0dGFjayBvZiB0aGUgQXJnaXZlcyB3aGVuIHRoZXkgY2FtZSB0byB0aGUgcmVzY3VlLCBhbmQgd29uIHRoZSB2aWN0b3J5IG92ZXIgdGhlbSBhbHNvLgo8ZGF0ZSBhdXRobmFtZT0iLTM2NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2NCI+MzY0IEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.4.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBob3dldmVyLCB0aGV5IGhhZCBwdXJzdWVkIHRoZSBlbmVteSB0byB0aGUgc3BhY2UgYmV0d2VlbiB0aGUgc2VuYXRlIGhvdXNlIGFuZCB0aGUgdGVtcGxlIG9mIEhlc3RpYSBhbmQgdGhlIHRoZWF0cmUgd2hpY2ggYWRqb2lucyB0aGVzZSBidWlsZGluZ3MsIGFsdGhvdWdoIHRoZXkgZm91Z2h0IG5vIGxlc3Mgc3RvdXRseSBhbmQga2VwdCBwdXNoaW5nIHRoZSBlbmVteSB0b3dhcmRzIHRoZSBhbHRhciwgc3RpbGwsIHNpbmNlIHRoZXkgd2VyZSBwZWx0ZWQgZnJvbSB0aGUgcm9vZnMgb2YgdGhlIHBvcnRpY29lcywgdGhlIHNlbmF0ZSBob3VzZSwgYW5kIHRoZSBncmVhdCB0ZW1wbGUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBPZiBaZXVzLjwvbm90ZT4gYW5kIHdlcmUgdGhlbXNlbHZlcyBmaWdodGluZyBvbiB0aGUgZ3JvdW5kLWxldmVsLCBzb21lIG9mIHRoZSBFbGVhbnMgd2VyZSBraWxsZWQsIGFtb25nIHRoZW0gU3RyYXRvbGFzIGhpbXNlbGYsIHRoZSBsZWFkZXIgb2YgdGhlIFRocmVlIEh1bmRyZWQuIFdoZW4gdGhpcyBoYXBwZW5lZCwgdGhleSByZXRpcmVkIHRvIHRoZWlyIG93biBjYW1wLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.4.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIEFyY2FkaWFucyBhbmQgdGhvc2Ugd2l0aCB0aGVtIHdlcmUgc28gZmVhcmZ1bCBmb3IgdGhlIGNvbWluZyBkYXkgdGhhdCB0aGV5IGRpZCBub3Qgc28gbXVjaCBhcyBnbyB0byByZXN0IGR1cmluZyB0aGUgbmlnaHQsIGJlaW5nIGVuZ2FnZWQgaW4gY3V0dGluZyBkb3duIHRoZSBjYXJlZnVsbHkgY29uc3RydWN0ZWQgYm9vdGhzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBCdWlsdCBieSBtZXJjaGFudHMgb3IgZm9yIHRoZSBzaGVsdGVyIGFuZCBjb252ZW5pZW5jZSBvZiB2aXNpdG9ycy48L25vdGU+IGFuZCBidWlsZGluZyBhIHN0b2NrYWRlLiBBcyBmb3IgdGhlIEVsZWFucywgd2hlbiB0aGV5IHJldHVybmVkIG9uIHRoZSBuZXh0IGRheSBhbmQgc2F3IHRoYXQgdGhlIHN0b2NrYWRlIHdhcyBhIHN0cm9uZyBvbmUgYW5kIHRoYXQgbWFueSBtZW4gaGFkIGNsaW1iZWQgdXAgb24gdGhlIHRlbXBsZXMsIHRoZXkgd2l0aGRyZXcgdG8gdGhlaXIgY2l0eSwgaGF2aW5nIHNob3duIHRoZW1zZWx2ZXMgc3VjaCBtZW4gaW4gcG9pbnQgb2YgdmFsb3VyIGFzIGEgZ29kIG5vIGRvdWJ0IGNvdWxkIHByb2R1Y2UgYnkgaGlzIGluc3BpcmF0aW9uIGV2ZW4gaW4gYSBkYXksIGJ1dCBodW1hbiBjcmVhdHVyZXMgY291bGQgbm90IG1ha2UgZXZlbiBpbiBhIGxvbmcgdGltZSBvdXQgb2YgdGhvc2Ugd2hvIHdlcmUgbm90IHZhbGlhbnQuCjwvdHJhbnNsYXRpb24+"
translation['7.4.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoaWxlIHRoZSBsZWFkZXJzIG9mIHRoZSBBcmNhZGlhbnMgd2VyZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MyI+MzYzIEIuQy48L2RhdGU+PC9ub3RlPiB1c2luZyB0aGUgc2FjcmVkIHRyZWFzdXJlcyw8ZGF0ZSBhdXRobmFtZT0iLTM2MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MyI+MzYzIEIuQy48L2RhdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBpLmUuLCBvZiBPbHltcGlhLjwvbm90ZT4gYW5kIHRoZXJlZnJvbSBtYWludGFpbmluZyB0aGUgRXBhcml0aSwgdGhlIE1hbnRpbmVhbnMgd2VyZSB0aGUgZmlyc3QgdG8gcGFzcyBhIHZvdGUgbm90IHRvIG1ha2UgdXNlIG9mIHRoZSBzYWNyZWQgdHJlYXN1cmVzLiBGb3IgdGhlbXNlbHZlcywgdGhleSBjb2xsZWN0ZWQgaW4gdGhlaXIgY2l0eSB0aGUgYW1vdW50IHdoaWNoIGZlbGwgdG8gdGhlaXIgc2hhcmUgdG93YXJkcyB0aGUgcGF5bWVudDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MyI+MzYzIEIuQy48L2RhdGU+PC9ub3RlPiBvZiB0aGUgRXBhcml0aSBhbmQgc2VudCBpdCBvZmYgdG8gdGhlIGxlYWRlcnMuIFRoZSBsZWFkZXJzLCBob3dldmVyLCBzYWlkIHRoYXQgdGhleSB3ZXJlIGRvaW5nIGhhcm0gdG8gdGhlIEFyY2FkaWFuIExlYWd1ZSwgYW5kIHN1bW1vbmVkIHRoZWlyIHJ1bGVycyBiZWZvcmUgdGhlIFRlbiBUaG91c2FuZDsgYW5kIHdoZW4gdGhleSByZWZ1c2VkIHRvIGhlZWQgdGhlIHN1bW1vbnMsIHRoZXkgcGFzc2VkIHNlbnRlbmNlIHVwb24gdGhlbSBhbmQgc2VudCB0aGUgRXBhcml0aSB0byBicmluZyB0aG9zZSB3aG8gaGFkIGJlZW4gdGh1cyBjb25kZW1uZWQuIFRoZW4gdGhlIE1hbnRpbmVhbnMgc2h1dCB0aGVpciBnYXRlcyBhbmQgd291bGQgbm90IGFkbWl0IHRoZSBFcGFyaXRpIHdpdGhpbiB0aGVpciB3YWxscy4KPGRhdGUgYXV0aG5hbWU9Ii0zNjMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjMiPjM2MyBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.4.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBhIHJlc3VsdCBvZiB0aGlzIHNvbWUgb3RoZXJzIGxpa2V3aXNlIHdlcmUgc29vbiBzYXlpbmcgaW4gdGhlIG1lZXRpbmcgb2YgdGhlIFRlbiBUaG91c2FuZCB0aGF0IHRoZXkgb3VnaHQgbm90IHRvIHVzZSB0aGUgc2FjcmVkIHRyZWFzdXJlcywgb3IgdG8gbGVhdmUgdG8gdGhlaXIgY2hpbGRyZW4gZm9yIGFsbCB0aW1lIHN1Y2ggYW4gb2ZmZW5jZSBpbiB0aGUgZXllcyBvZiB0aGUgZ29kcy4gV2hlbiwgYWNjb3JkaW5nbHksIGEgdm90ZSBoYWQgYmVlbiBwYXNzZWQgaW4gdGhlIEFyY2FkaWFuIGFzc2VtYmx5IG5vdCB0byBtYWtlIHVzZSBvZiB0aGUgc2FjcmVkIHRyZWFzdXJlcyBhbnkgbG9uZ2VyLCB0aG9zZSB3aG8gY291bGQgbm90IGJlbG9uZyB0byB0aGUgRXBhcml0aSB3aXRob3V0IHBheSBzcGVlZGlseSBiZWdhbiB0byBtZWx0IGF3YXksIHdoaWxlIHRob3NlIHdobyBjb3VsZCwgc3B1cnJlZCBvbiBvbmUgYW5vdGhlciBhbmQgYmVnYW4gdG8gZW5yb2xsIHRoZW1zZWx2ZXMgaW4gdGhlIEVwYXJpdGksIGluIG9yZGVyIHRoYXQgdGhleSBtaWdodCBub3QgYmUgaW4gdGhlIHBvd2VyIG9mIHRoYXQgYm9keSwgYnV0IHJhdGhlciB0aGF0IGl0IG1pZ2h0IGJlIGluIHRoZWlyIHBvd2VyLiBUaGVuIHN1Y2ggb2YgdGhlIEFyY2FkaWFuIGxlYWRlcnMgYXMgaGFkIGhxbmRsZWQgdGhlIHNhY3JlZCB0cmVhc3VyZXMsIHJlYWxpemluZyB0aGF0LCBpZiB0aGV5IGhhZCB0byByZW5kZXIgYW4gYWNjb3VudCwgdGhleSB3b3VsZCBiZSBpbiBkYW5nZXIgb2YgYmVpbmcgcHV0IHRvIGRlYXRoLCBzZW50IHRvIFRoZWJlcyBhbmQgZXhwbGFpbmVkIHRvIHRoZSBUaGViYW5zIHRoYXQgaWYgdGhleSBkaWQgbm90IHRha2UgdGhlIGZpZWxkLCB0aGUgQXJjYWRpYW5zIHdvdWxkIGJlIGxpa2VseSB0byBnbyBvdmVyIHRvIHRoZSBMYWNlZGFlbW9uaWFucyBhZ2Fpbi4KPC90cmFuc2xhdGlvbj4="
translation['7.4.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgVGhlYmFucyBhY2NvcmRpbmdseSBwcmVwYXJlZCB0byB0YWtlIHRoZSBmaWVsZDsgYnV0IHRob3NlIHdobyBzb3VnaHQgdGhlIGJlc3QgaW50ZXJlc3RzIG9mIFBlbG9wb25uZXN1cyBwZXJzdWFkZWQgdGhlIGdlbmVyYWwgYXNzZW1ibHkgb2YgdGhlIEFyY2FkaWFucyB0byBzZW5kIGFtYmFzc2Fkb3JzIGFuZCB0ZWxsIHRoZSBUaGViYW5zIG5vdCB0byBjb21lIHVuZGVyIGFybXMgdG8gQXJjYWRpYSB1bmxlc3MgdGhleSBzZW50IHRoZW0gYSBzdW1tb25zLiBBbmQgd2hpbGUgdGhleSBzYWlkIHRoaXMgdG8gdGhlIFRoZWJhbnMsIGF0IHRoZSBzYW1lIHRpbWUgdGhleTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MyI+MzYzIEIuQy48L2RhdGU+PC9ub3RlPiByZWFzb25lZCB0aGF0IHRoZXkgaGFkIG5vIGRlc2lyZSBmb3Igd2FyLiBGb3IgdGhleSBoZWxkIHRoYXQgdGhleSBoYWQgbm8gZGVzaXJlIGZvciB0aGUgcHJlc2lkZW5jeSBvZiB0aGUgc2hyaW5lIG9mIFpldXMsIGJ1dCB0aGF0IHRoZXkgd291bGQgYmUgYWN0aW5nIG1vcmUganVzdGx5IGFzIHdlbGwgYXMgbW9yZSByaWdodGVvdXNseSBpZiB0aGV5IGdhdmUgaXQgYmFjaywgYW5kIHRoYXQgaW4gdGhpcyB3YXksIGFzIHRoZXkgc3VwcG9zZWQsIHRoZXkgd291bGQgcGxlYXNlIHRoZSBnb2QgYmV0dGVyLiBOb3cgc2luY2UgdGhlIEVsZWFucyBhbHNvIHdlcmUgZGVzaXJvdXMgb2YgdGhpcyBjb3Vyc2UsIGJvdGggcGFydGllcyByZXNvbHZlZCB0byBtYWtlIHBlYWNlOyBhbmQgYSB0cnVjZSB3YXMgY29uY2x1ZGVkLgo8ZGF0ZSBhdXRobmFtZT0iLTM2MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MyI+MzYzIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.4.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz4mbHQ7XUlMRVNUT05FIEVEPSJQIiBVTklUPSJwYXJhIiZndDtBZnRlciB0aGUgb2F0aHMgaGFkIGJlZW4gdGFrZW4gYW5kLCBiZXNpZGVzIGFsbCB0aGUgcmVzdCwgdGhlIFRlZ2VhbnMgaGFkIHN3b3JuIGFuZCB0aGUgVGhlYmFuIGdvdmVybm9yIGhpbXNlbGYsIHdobyBjaGFuY2VkIHRvIGJlIGluIFRlZ2VhIHdpdGggdGhyZWUgaHVuZHJlZCBob3BsaXRlcyBvZiB0aGUgQm9lb3RpYW5zLCB0aGVuLCB3aGlsZSB0aGUgYnVsayBvZiB0aGUgQXJjYWRpYW5zLCBzdGlsbCByZW1haW5pbmcgdGhlcmUgaW4gVGVnZWEsIGZlYXN0ZWQgYW5kIG1hZGUgbWVycnksIHBvdXJlZCBsaWJhdGlvbnMgYW5kIHNhbmcgcGFlYW5zIG92ZXIgdGhlIGNvbmNsdXNpb24gb2YgcGVhY2UsIHRoZSBUaGViYW4gYW5kIHN1Y2ggb2YgdGhlIEFyY2FkaWFuIGxlYWRlcnMgYXMgd2VyZSBmZWFyZnVsIGFib3V0IHRoZWlyIGFjY291bnRzLCBhZnRlciBjbG9zaW5nIHR4ZSBnYXRlcyBpbiB0aGUgd2FsbCBvZiBUZWdlYSB3aXRoIHRoZSBoZWxwIG9mIHRoZSBCb2VvdGlhbnMgYW5kIHRoZWlyIHBhcnRpc2FucyBhbW9uZyB0aGUgRXBhcml0aSwgc2VudCB0byB0aGUgZmVhc3RlcnMgYW5kIHByb2NlZWRlZCB0byBzZWl6ZSB0aGUgYXJpc3RvY3JhdHMuIEJ1dCBpbmFzbXVjaCBhcyB0aGUgQXJjYWRpYW5zIG9mIGFsbCB0aGUgY2l0aWVzIHdlcmUgcHJlc2VudCBhbmQgYWxsIG9mIHRoZW0gd2VyZSBkZXNpcm91cyBvZiBoYXZpbmcgcGVhY2UsIHRob3NlIHdobyB3ZXJlIHNlaXplZCB3ZXJlIG5lY2Vzc2FyaWx5IG1hbnksIHNvIHRoYXQgdGhlaXIgcHJpc29uIHdhcyBzcGVlZGlseSBmdWxsLCBhbmQgdGhlIGNpdHkgaGFsbCBsaWtld2lzZS4KCjwvdHJhbnNsYXRpb24+"
translation['7.4.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz5TaW5jZSwgaG93ZXZlciwgdGhlcmUgd2VyZSBtYW55IHdobyBoYWQgYmVlbiBpbXByaXNvbmVkLCBhbmQgbWFueSB3aG8gaGFkIGxlYXBlZCBkb3duIG91dHNpZGUgdGhlIHdhbGwsIGFuZCBzb21lIGFsc28gd2hvIGhhZCBiZWVuIGxldCBvdXQgdGhyb3VnaCB0aGUgZ2F0ZXMgKGZvciBubyBvbmUsIHVubGVzcyBoZSBleHBlY3RlZCB0byBiZSBwdXQgdG8gZGVhdGgsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmNwLiAzNC48L25vdGU+IGZlbHQgcmVzZW50bWVudCBhZ2FpbnN0IGFueW9uZSBlbHNlKSwgaXQgd2FzIGEgY2F1c2Ugb2YgdGhlIGdyZWF0ZXN0IGVtYmFycmFzc21lbnQgdG8gdGhlIFRoZWJhbiBnb3Zlcm5vciBhbmQgdGhvc2Ugd2hvIHdlcmUgYWN0aW5nIHdpdGggaGltIGluIHRoaXMgbWF0dGVyIHRoYXQgb2YgdGhlIE1hbnRpbmVhbnMsIHdob20gdGhleSBtb3N0IHdhbnRlZCB0byBjYXB0dXJlLCB0aGV5IGhhZCBidXQgYSB2ZXJ5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzYzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzYzIj4zNjMgQi5DLjwvZGF0ZT48L25vdGU+IGZldzsgZm9yIGJlY2F1c2UgdGhlaXIgY2l0eSB3YXMgbmVhciBieSwgYWxtb3N0IGFsbCBvZiB0aGVtIGhhZCBnb25lIGhvbWUuCjxkYXRlIGF1dGhuYW1lPSItMzYzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzYzIj4zNjMgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.4.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoZW4gZGF5IGNhbWUgYW5kIHRoZSBNYW50aW5lYW5zIGxlYXJuZWQgd2hhdCBoYWQgYmVlbiBkb25lLCB0aGV5IHN0cmFpZ2h0d2F5IHNlbnQgdG8gdGhlIG90aGVyIEFyY2FkaWFuIGNpdGllcyBhbmQgZ2F2ZSB0aGVtIHdvcmQgdG8gaG9sZCB0aGVtc2VsdmVzIHVuZGVyIGFybXMgYW5kIHRvIGd1YXJkIHRoZSBwYXNzZXMuIFRoZSBNYW50aW5lYW5zIGxpa2V3aXNlIGZvbGxvd2VkIHRoaXMgY291cnNlIHRoZW1zZWx2ZXMsIGFuZCBhdCB0aGUgc2FtZSB0aW1lLCBzZW5kaW5nIHRvIFRlZ2VhLCBkZW1hbmRlZCBiYWNrIGFsbCB0aGUgbWVuIG9mIE1hbnRpbmVhIHdob20gdGhleSB3ZXJlIGhvbGRpbmcgdGhlcmU7IGFuZCB0aGV5IHNhaWQgdGhhdCB0aGV5IGRlbWFuZGVkIGluIHRoZSBjYXNlIG9mIHRoZSBvdGhlciBBcmNhZGlhbnMgYWxzbyB0aGF0IG5vIG9uZSBvZiB0aGVtIHNob3VsZCBiZSBrZXB0IGluIHByaXNvbiBvciBwdXQgdG8gZGVhdGggd2l0aG91dCBhIHRyaWFsLiBBbmQgaWYgYW55b25lIGhhZCBhbnkgY2hhcmdlcyB0byBicmluZyBhZ2FpbnN0IHRoZXNlIG1lbiwgdGhleSBnYXZlIGFzc3VyYW5jZXMgdGhhdCB0aGUgY2l0eSBvZiBNYW50aW5lYSBwbGVkZ2VkIGl0c2VsZiBpbiB2ZXJ5IHRydXRoIHRvIHByb2R1Y2UgYmVmb3JlIHRoZSBnZW5lcmFsIGFzc2VtYmx5IG9mIHRoZSBBcmNhZGlhbnMgYWxsIHdob20gYW55b25lIG1pZ2h0IHN1bW1vbiB0byB0cmlhbC4KPC90cmFuc2xhdGlvbj4="
translation['7.4.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgVGhlYmFuIGFjY29yZGluZ2x5LCBvbiBoZWFyaW5nIHRoaXMsIHdhcyBhdCBhIGxvc3MgdG8ga25vdyBob3cgaGUgc2hvdWxkIGRlYWwgd2l0aCB0aGUgbWF0dGVyLCBhbmQgcmVsZWFzZWQgYWxsIHRoZSBtZW4uIFRoZW4gb24gdGhlIGZvbGxvd2luZyBkYXkgaGUgY2FsbGVkIHRvZ2V0aGVyIGFzIG1hbnkgb2YgdGhlIEFyY2FkaWFucyBhcyBjaG9zZSB0byBnYXRoZXIgYW5kIHNhaWQgaW4gaGlzIGRlZmVuY2UgdGhhdCBoZSBoYWQgYmVlbiBkZWNlaXZlZC4gRm9yIGhlIGhhZCBoZWFyZCwgaGUgc2FpZCwgdGhhdCB0aGUgTGFjZWRhZW1vbmlhbnMgd2VyZSBvbiB0aGUgYm9yZGVycyB1bmRlciBhcm1zIGFuZCB0aGF0IHNvbWUgb2YgdGhlIEFyY2FkaWFucyB3ZXJlIGdvaW5nIHRvIGJldHJheSBUZWdlYSB0byB0aGVtLiBVcG9uIGhlYXJpbmcgdGhpcyB0aGV5IGFjcXVpdHRlZCBoaW0sIGFsdGhvdWdoIHRoZXkga25ldyB0aGF0IGhlIHdhcyBzcGVha2luZyBmYWxzZWx5IGFib3V0IHRoZW0sIGJ1dCB0aGV5IHNlbnQgYW1iYXNzYWRvcnMgdG8gVGhlYmVzIGFuZCBicm91Z2h0IGNoYXJnZXMgYWdhaW5zdCBoaW0sIHNheWluZyB0aGF0IGhlIG91Z2h0IHRvIGJlIHB1dCB0byBkZWF0aC4KPC90cmFuc2xhdGlvbj4="
translation['7.4.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgc2FpZCwgaG93ZXZlciwgdGhhdCBFcGFtaW5vbmRhcyAoZm9yIGhlIGNoYW5jZWQgdG8gYmUgZ2VuZXJhbCBhdCB0aGF0IHRpbWUpIHVyZ2VkIHRoYXQgaGUgaGFkIGFjdGVkIGZhciBtb3JlIHJpZ2h0bHkgd2hlbiBoZSBzZWl6ZWQgdGhlIG1lbiB0aGFuIHdoZW4gaGUgcmVsZWFzZWQgdGhlbS4g4oCcRm9yLOKAnSBoZSBzYWlkIHRvIHRoZSBhbWJhc3NhZG9ycyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjMiPjM2MyBCLkMuPC9kYXRlPjwvbm90ZT4g4oCcaXQgd2FzIG9uIHlvdXIgYWNjb3VudCB0aGF0IHdlIGVudGVyZWQgdXBvbiB3YXIsIGFuZCB5b3UgY29uY2x1ZGVkIHBlYWNlIHdpdGhvdXQgb3VyIGFwcHJvdmFsOyBzaG91bGQgd2Ugbm90LCB0aGVyZWZvcmUsIGJlIGp1c3RpZmllZCBpbiBjaGFyZ2luZyB5b3Ugd2l0aCB0cmVhc29uIGZvciB0aGlzIGFjdD8gQnV0IGJlIHdlbGwgYXNzdXJlZCzigJ0gc2FpZCBoZSwg4oCcdGhhdCB3ZSBzaGFsbCBtYWtlIGFuIGV4cGVkaXRpb24gdG8gQXJjYWRpYSBhbmQgc2hhbGwgd2FnZSB3YXIgaW4gY29tcGFueSB3aXRoIHRob3NlIHdobyBob2xkIHRvIG91ciBzaWRlLuKAnQo8ZGF0ZSBhdXRobmFtZT0iLTM2MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MyI+MzYzIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.5.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJjaGFwdGVyIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIHRoZXNlIHRoaW5ncyB3ZXJlIHJlcG9ydGVkIGJhY2sgdG8gdGhlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzYyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzYyIj4zNjIgQi5DLjwvZGF0ZT48L25vdGU+IGdlbmVyYWwgYXNzZW1ibHkgb2YgdGhlIEFyY2FkaWFucyBhbmQgdG8gdGhlIHNldmVyYWwgY2l0aWVzLCB0aGUgTWFudGluZWFucyBhbmQgc3VjaCBvZiB0aGUgb3RoZXIgQXJjYWRpYW5zIGFzIHdlcmUgY29uY2VybmVkIGZvciBQZWxvcG9ubmVzdXMgaW5mZXJyZWQgdGhlcmVmcm9tLCBhcyBkaWQgbGlrZXdpc2UgdGhlIEVsZWFucyBhbmQgdGhlIEFjaGFlYW5zLCB0aGF0IHRoZSBUaGViYW5zIG1hbmlmZXN0bHkgd2FudGVkIFBlbG9wb25uZXN1cyB0byBiZSBhcyB3ZWFrIGFzIHBvc3NpYmxlIHNvIHRoYXQgdGhleSBtaWdodCBhcyBlYXNpbHkgYXMgcG9zc2libGUgcmVkdWNlIGl0IHRvIHNsYXZlcnkuCjxkYXRlIGF1dGhuYW1lPSItMzYyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzYyIj4zNjIgQi5DLjwvZGF0ZT48L3RyYW5zbGF0aW9uPg=="
translation['7.5.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPuKAnEZvciB3aHkgaW4gdGhlIHdvcmxkLOKAnSB0aGV5IHNhaWQsIOKAnGRvIHRoZXkgd2lzaCB1cyB0byBtYWtlIHdhciB1bmxlc3MgaXQgaXMgaW4gb3JkZXIgdGhhdCB3ZSBtYXkgZG8gaGFybSB0byBvbmUgYW5vdGhlciBhbmQgY29uc2VxdWVudGx5IG1heSBib3RoIGZlZWwgdGhlIG5lZWQgb2YgdGhlbT8gT3Igd2h5LCB3aGVuIHdlIHNheSB0aGF0IHdlIGRvIG5vdCBhdCBwcmVzZW50IG5lZWQgdGhlbSwgYXJlIHRoZXkgcHJlcGFyaW5nIHRvIG1hcmNoIGZvcnRoPyBJcyBpdCBub3QgY2xlYXIgdGhhdCBpdCBpcyBmb3IgdGhlIHB1cnBvc2Ugb2Ygd29ya2luZyBzb21lIGhhcm0gdXBvbiB1cyB0aGF0IHRoZXkgYXJlIHByZXBhcmluZyB0byB0YWtlIHRoZSBmaWVsZD/igJ0KPC90cmFuc2xhdGlvbj4="
translation['7.5.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB0aGV5IHNlbnQgdG8gQXRoZW5zIGFsc28sIGJpZGRpbmcgdGhlIEF0aGVuaWFucyBjb21lIHRvIHRoZWlyIGFpZCwgd2hpbGUgYW1iYXNzYWRvcnMgZnJvbSB0aGUgRXBhcml0aSBwcm9jZWVkZWQgdG8gTGFjZWRhZW1vbiBhcyB3ZWxsLCB0byBpbnZpdGUgdGhlIGhlbHAgb2YgdGhlIExhY2VkYWVtb25pYW5zIGluIGNhc2UgdGhleSB3YW50ZWQgdG8gam9pbiBpbiBjaGVja2luZyBhbnkgd2hvIG1pZ2h0IGNvbWUgdG8gZW5zbGF2ZSBQZWxvcG9ubmVzdXMuIEFzIGZvciB0aGUgbWF0dGVyIG9mIHRoZSBsZWFkZXJzaGlwLCB0aGV5IGFycmFuZ2VkIGF0IG9uY2UgdGhhdCBlYWNoIHBlb3BsZSBzaG91bGQgaG9sZCBpdCB3aGlsZSB3aXRoaW4gaXRzIG93biB0ZXJyaXRvcnkuCjwvdHJhbnNsYXRpb24+"
translation['7.5.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGlsZSB0aGVzZSB0aGluZ3Mgd2VyZSBiZWluZyBkb25lLCBFcGFtaW5vbmRhcyB3YXMgb24gaGlzIG91dHdhcmQgbWFyY2ggYXQgdGhlIGhlYWQgb2YgYWxsIHRoZSBCb2VvdGlhbnMsIHRoZSBFdWJvZWFucywgYW5kIG1hbnkgb2YgdGhlIFRoZXNzYWxpYW5zLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MiI+MzYyIEIuQy48L2RhdGU+PC9ub3RlPiB3aG8gY2FtZSBib3RoIGZyb20gQWxleGFuZGVyPGRhdGUgYXV0aG5hbWU9Ii0zNjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjIiPjM2MiBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5jcC4gVkkuIGl2LiAzNCBmLjwvbm90ZT4gYW5kIGZyb20gaGlzIG9wcG9uZW50cy4gVGhlIFBob2NpYW5zLCBob3dldmVyLCBkZWNsaW5lZCB0byBqb2luIHRoZSBleHBlZGl0aW9uLCBzYXlpbmcgdGhhdCB0aGVpciBhZ3JlZW1lbnQgd2FzIHRvIGxlbmQgYWlkIGluIGNhc2UgYW55b25lIHdlbnQgYWdhaW5zdCBUaGViZXMsIGJ1dCB0aGF0IHRvIHRha2UgdGhlIGZpZWxkIGFnYWluc3Qgb3RoZXJzIHdhcyBub3QgaW4gdGhlIGFncmVlbWVudC4KPC90cmFuc2xhdGlvbj4="
translation['7.5.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkVwYW1pbm9uZGFzIHJlZmxlY3RlZCwgaG93ZXZlciwgdGhhdCBoaXMgcGVvcGxlIGhhZCBzdXBwb3J0ZXJzIGluIFBlbG9wb25uZXN1cyBhbHNvIOKAlCB0aGUgQXJnaXZlcywgdGhlIE1lc3NlbmlhbnMsIGFuZCBzdWNoIG9mIHRoZSBBcmNhZGlhbnMgYXMgaGVsZCB0byB0aGVpciBzaWRlLiBUaGVzZSB3ZXJlIHRoZSBUZWdlYW5zLCB0aGUgTWVnYWxvcG9saXRhbnMsIHRoZSBBc2VhbnMsIHRoZSBQYWxsYW50aWFucywgYW5kIHdoYXRldmVyIGNpdGllcyB3ZXJlIGNvbnN0cmFpbmVkIHRvIGFkb3B0IHRoaXMgY291cnNlIGZvciB0aGUgcmVhc29uIHRoYXQgdGhleSB3ZXJlIHNtYWxsIGFuZCBzdXJyb3VuZGVkIGJ5IHRoZXNlIG90aGVycy4KPC90cmFuc2xhdGlvbj4="
translation['7.5.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPkVwYW1pbm9uZGFzIGFjY29yZGluZ2x5IHB1c2hlZCBmb3J0aCB3aXRoIHNwZWVkOyBidXQgd2hlbiBoZSBhcnJpdmVkIGF0IE5lbWVhIGhlIGRlbGF5ZWQgdGhlcmUsIGhvcGluZyB0byBjYXRjaCB0aGUgQXRoZW5pYW5zIGFzIHRoZXkgcGFzc2VkIGJ5LCBhbmQgZXN0aW1hdGluZyB0aGF0IHRoaXMgd291bGQgYmUgYSBncmVhdCBhY2hpZXZlbWVudCwgbm90IG9ubHkgaW4gdGhlIHZpZXcgb2YgaGlzIHBlb3BsZSdzIGFsbGllcywgc28gYXMgdG8gZW5jb3VyYWdlIHRoZW0sIGJ1dCBhbHNvIGluIHRoYXQgb2YgdGhlaXIgb3Bwb25lbnRzLCBzbyB0aGF0IHRoZXkgd291bGQgZmFsbCBpbnRvIGRlc3BvbmRlbmN5IOKAlCBpbiBhIHdvcmQsIHRoYXQgZXZlcnkgbG9zcyB0aGUgQXRoZW5pYW5zIHN1ZmZlcmVkIHdhcyBhIGdhaW4gZm9yIHRoZSBUaGViYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.5.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPkFuZCBkdXJpbmcgdGhpcyBkZWxheSBvbiBoaXMgcGFydCBhbGwgdGhvc2Ugd2hvIGhlbGQgdGhlIHNhbWUgdmlld3M8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiwgb2YgaG9zdGlsaXR5IHRvIFRoZWJlcy48L25vdGU+IHdlcmUgZ2F0aGVyaW5nIHRvZ2V0aGVyIGF0IE1hbnRpbmVhLiBCdXQgd2hlbiBFcGFtaW5vbmRhcyBoZWFyZCB0aGF0IHRoZSBBdGhlbmlhbnMgaGFkIGdpdmVuIHVwIHRoZSBwbGFuIG9mIHByb2NlZWRpbmcgYnkgbGFuZCBhbmQgd2VyZSBwcmVwYXJpbmcgdG8gZ28gYnkgc2VhLCB3aXRoIHRoZSBpbnRlbnRpb24gb2YgbWFyY2hpbmcgdGhyb3VnaCBMYWNlZGFlbW9uIHRvIHRoZSBhaWQgb2YgdGhlIEFyY2FkaWFucywgdW5kZXIgdGhlc2UgY2lyY3Vtc3RhbmNlcyBoZSBzZXQgZm9ydGggZnJvbSBOZW1lYSBhbmQgYXJyaXZlZCBhdCBUZWdlYS4KPC90cmFuc2xhdGlvbj4="
translation['7.5.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPk5vdyBJIGZvciBteSBwYXJ0IGNvdWxkIG5vdCBzYXkgdGhhdCBoaXMgY2FtcGFpZ24gcHJvdmVkIGZvcnR1bmF0ZTsgeWV0IG9mIGFsbCBwb3NzaWJsZSBkZWVkcyBvZiBmb3JldGhvdWdodCBhbmQgZGFyaW5nIHRoZSBtYW4gc2VlbXMgdG8gbWUgdG8gaGF2ZSBsZWZ0IG5vdCBvbmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjIiPjM2MiBCLkMuPC9kYXRlPjwvbm90ZT4gdW5kb25lLiBGb3IsIGluIHRoZSBmaXJzdCBwbGFjZSwgSSBjb21tZW5kIGhpcyBwaXRjaGluZyBoaXMgY2FtcCB3aXRoaW4gdGhlIHdhbGwgb2YgVGVnZWEsIHdoZXJlIGhlIHdhcyBpbiBncmVhdGVyIHNhZmV0eSB0aGFuIGlmIGhlIGhhZCBiZWVuIGVuY2FtcGVkIG91dHNpZGUsIGFuZCB3aGVyZSB3aGF0ZXZlciB3YXMgYmVpbmcgZG9uZSB3YXMgbW9yZSBlbnRpcmVseSBjb25jZWFsZWQgZnJvbSB0aGUgZW5lbXkuIEZ1cnRoZXJtb3JlLCBpdCB3YXMgZWFzaWVyIGZvciBoaW0sIGJlaW5nIGluIHRoZSBjaXR5LCB0byBwcm92aWRlIGhpbXNlbGYgd2l0aCB3aGF0ZXZlciBoZSBuZWVkZWQuIFNpbmNlIHRoZSBlbmVteSwgb24gdGhlIG90aGVyIGhhbmQsIHdhcyBlbmNhbXBlZCBvdXRzaWRlLCBpdCB3YXMgcG9zc2libGUgdG8gc2VlIHdoZXRoZXIgdGhleSB3ZXJlIGRvaW5nIHRoaW5ncyByaWdodGx5IG9yIHdlcmUgbWFraW5nIG1pc3Rha2VzLiBBZ2Fpbiwgd2hpbGUgaGUgYmVsaWV2ZWQgdGhhdCBoZSB3YXMgc3Ryb25nZXIgdGhhbiBoaXMgYWR2ZXJzYXJpZXMsIGhlIGNvdWxkIG5ldmVyIGJlIGluZHVjZWQgdG8gYXR0YWNrIHRoZW0gd2hlbiBoZSBzYXcgdGhhdCB0aGV5IGhlbGQgdGhlIGFkdmFudGFnZSBpbiBwb3NpdGlvbi4KPGRhdGUgYXV0aG5hbWU9Ii0zNjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjIiPjM2MiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.5.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkhvd2V2ZXIsIHdoZW4gaGUgcGVyY2VpdmVkIHRoYXQgbm8gY2l0eSB3YXMgY29taW5nIG92ZXIgdG8gaGltIGFuZCB0aGF0IHRpbWUgd2FzIHBhc3Npbmcgb24sIGhlIGRlY2lkZWQgdGhhdCBzb21lIGFjdGlvbiBtdXN0IGJlIHRha2VuOyBvdGhlcndpc2UsIGluIHBsYWNlIG9mIGhpcyBmb3JtZXIgZmFtZSwgaGUgbXVzdCBleHBlY3QgZGVlcCBkaXNncmFjZS4gV2hlbiBoZSBiZWNhbWUgYXdhcmUsIHRoZXJlZm9yZSwgdGhhdCBoaXMgYWR2ZXJzYXJpZXMgaGFkIHRha2VuIHVwIGEgc3Ryb25nIHBvc2l0aW9uIGluIHRoZSBuZWlnaGJvdXJob29kIG9mIE1hbnRpbmVhIGFuZCB3ZXJlIHNlbmRpbmcgYWZ0ZXIgQWdlc2lsYXVzIGFuZCBhbGwgdGhlIExhY2VkYWVtb25pYW5zLCBhbmQgbGVhcm5lZCwgZnVydGhlciwgdGhhdCBBZ2VzaWxhdXMgaGFkIG1hcmNoZWQgZm9ydGggYW5kIHdhcyBhbHJlYWR5IGF0IFBlbGxlbmUsIGhlIGdhdmUgb3JkZXJzIHRvIGhpcyBtZW4gdG8gZ2V0IHRoZWlyIGRpbm5lciBhbmQgbGVkIGhpcyBhcm15IHN0cmFpZ2h0IHVwb24gU3BhcnRhLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.5.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgaGFkIG5vdCBhIENyZXRhbiBieSBhIGtpbmQgb2YgcHJvdmlkZW50aWFsIGNoYW5jZSBjb21lIGFuZCByZXBvcnRlZCB0byBBZ2VzaWxhdXMgdGhhdCB0aGUgYXJteSB3YXMgYWR2YW5jaW5nLCBoZSB3b3VsZCBoYXZlIGNhcHR1cmVkIHRoZSBjaXR5LCBsaWtlIGEgbmVzdCBlbnRpcmVseSBlbXB0eSBvZiBpdHMgZGVmZW5kZXJzLiBCdXQgd2hlbiBBZ2VzaWxhdXMsIGhhdmluZyByZWNlaXZlZCB3b3JkIG9mIHRoaXMgaW4gdGltZSwgaGFkIGdvdCBiYWNrIHRvIHRoZSBjaXR5IGFoZWFkIG9mIHRoZSBlbmVteSwgdGhlIFNwYXJ0aWF0YWUgcG9zdGVkIHRoZW1zZWx2ZXMgYXQgdmFyaW91cyBwb2ludHMgYW5kIGtlcHQgZ3VhcmQsIGFsdGhvdWdoIHRoZXkgd2VyZSBleHRyZW1lbHkgZmV3LiBGb3IgYWxsIHRoZWlyIGhvcnNlbWVuIHdlcmUgYXdheSBpbiBBcmNhZGlhIGFuZCBsaWtld2lzZSB0aGUgbWVyY2VuYXJ5IGZvcmNlIGFuZCB0aHJlZSBvZiB0aGUgYmF0dGFsaW9ucyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIGl2LiAyMC48L25vdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzYyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzYyIj4zNjIgQi5DLjwvZGF0ZT48L25vdGU+IHdoaWNoIG51bWJlcmVkIHR3ZWx2ZS4KPGRhdGUgYXV0aG5hbWU9Ii0zNjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjIiPjM2MiBCLkMuPC9kYXRlPjwvdHJhbnNsYXRpb24+"
translation['7.5.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoZW4gRXBhbWlub25kYXMgaGFkIGFycml2ZWQgd2l0aGluIHRoZSBjaXR5PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4sIHRoZSBvdXRseWluZyBwb3J0aW9uIG9mIHRoZSBjaXR5LiBTcGFydGEgaGFkIG5vIHdhbGxzLjwvbm90ZT4gb2YgdGhlIFNwYXJ0aWF0YWUsIGhlIGRpZCBub3QgYXR0ZW1wdCB0byBlbnRlciBhdCB0aGUgcG9pbnQgd2hlcmUgaGlzIHRyb29wcyB3b3VsZCBiZSBsaWtlbHkgdG8gaGF2ZSB0byBmaWdodCBvbiB0aGUgZ3JvdW5kLWxldmVsIGFuZCBiZSBwZWx0ZWQgZnJvbSB0aGUgaG91c2UtdG9wcywgbm9yIHdoZXJlIHRoZXkgd291bGQgZmlnaHQgd2l0aCBubyBhZHZhbnRhZ2Ugb3ZlciB0aGUgZmV3LCBhbHRob3VnaCB0aGV5IHdlcmUgbWFueTsgYnV0IGFmdGVyIGdhaW5pbmcgdGhlIHByZWNpc2UgcG9zaXRpb24gZnJvbSB3aGljaCBoZSBiZWxpZXZlZCB0aGF0IGhlIHdvdWxkIGVuam95IGFuIGFkdmFudGFnZSwgaGUgdW5kZXJ0b29rIHRvIGRlc2NlbmQgKGluc3RlYWQgb2YgYXNjZW5kaW5nKSBpbnRvIHRoZSBjaXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['7.5.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BcyBmb3Igd2hhdCBoYXBwZW5lZCB0aGVyZXVwb24sIG9uZSBtYXkgZWl0aGVyIGhvbGQgdGhlIGRlaXR5IHJlc3BvbnNpYmxlLCBvciBvbmUgbWF5IHNheSB0aGF0IG5vYm9keSBjb3VsZCB3aXRoc3RhbmQgZGVzcGVyYXRlIG1lbi4gRm9yIHdoZW4gQXJjaGlkYW11cyBsZWQgdGhlIGFkdmFuY2Ugd2l0aCBub3Qgc28gbXVjaCBhcyBhIGh1bmRyZWQgbWVuIGFuZCwgYWZ0ZXIgY3Jvc3NpbmcgdGhlIHZlcnkgdGhpbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IERpZmZpY3VsdCBncm91bmQsIGFwcGFyZW50bHkuPC9ub3RlPiB3aGljaCBzZWVtZWQgdG8gcHJlc2VudCBhbiBvYnN0YWNsZSwgbWFyY2hlZCB1cGhpbGwgYWdhaW5zdCB0aGUgYWR2ZXJzYXJ5LCBhdCB0aGF0IG1vbWVudCB0aGUgZmlyZS1icmVhdGhlcnMsIHRoZSBtZW4gd2hvIGhhZCBkZWZlYXRlZCB0aGUgTGFjZWRhZW1vbmlhbnMsIHRoZSBtZW4gd2hvIHdlcmUgYWx0b2dldGhlciBzdXBlcmlvciBpbiBudW1iZXJzIGFuZCB3ZXJlIG9jY3VweWluZyBoaWdoZXIgZ3JvdW5kIGJlc2lkZXMsIGRpZCBub3Qgd2l0aHN0YW5kIHRoZSBhdHRhY2sgb2YgdGhlIHRyb29wcyB1bmRlciBBcmNoaWRhbXVzLCBidXQgZ2F2ZSB3YXkuCjwvdHJhbnNsYXRpb24+"
translation['7.5.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgdGhvc2UgaW4gdGhlIHZhbiBvZiBFcGFtaW5vbmRhcycgYXJteSB3ZXJlIHNsYWluLCBidXQgd2hlbiB0aGUgdHJvb3BzIGZyb20gd2l0aGluIHRoZSBjaXR5LCBleHVsdGluZyBpbiB0aGVpciB2aWN0b3J5LCBwdXJzdWVkIGZhcnRoZXIgdGhhbiB3YXMgZml0dGluZywgdGhleSBpbiB0aGVpciB0dXJuIHdlcmUgc2xhaW47IGZvciwgYXMgaXQgc2VlbXMsIHRoZSBsaW5lIGhhZCBiZWVuIGRyYXduIGJ5IHRoZSBkZWl0eSBpbmRpY2F0aW5nIGhvdyBmYXIgdmljdG9yeSBoYWQgYmVlbiBncmFudGVkIHRoZW0uIEFyY2hpZGFtdXMgYWNjb3JkaW5nbHkgc2V0IHVwIGEgdHJvcGh5IGF0IHRoZSBzcG90IHdoZXJlIGhlIGhhZCB3b24gdGhlIHZpY3RvcnksIGFuZCBnYXZlIGJhY2sgdW5kZXIgYSB0cnVjZSB0aG9zZSBvZiB0aGUgZW5lbXkgd2hvIGhhZCBmYWxsZW4gdGhlcmUuCjwvdHJhbnNsYXRpb24+"
translation['7.5.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5FcGFtaW5vbmRhcywgb24gdGhlIG90aGVyIGhhbmQsIHJlZmxlY3Rpbmc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjIiPjM2MiBCLkMuPC9kYXRlPjwvbm90ZT4gdGhhdCB0aGUgQXJjYWRpYW5zIHdvdWxkIGJlIGNvbWluZyB0byBMYWNlZGFlbW9uIHRvIGJyaW5nIGFpZCwgaGFkIG5vIGRlc2lyZSB0byBmaWdodCBhZ2FpbnN0IHRoZW0gYW5kIGFnYWluc3QgYWxsIHRoZSBMYWNlZGFlbW9uaWFucyBhZnRlciB0aGV5IGhhZCBjb21lIHRvZ2V0aGVyLDxkYXRlIGF1dGhuYW1lPSItMzYyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzYyIj4zNjIgQi5DLjwvZGF0ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Y3AuIDEwLjwvbm90ZT4gZXNwZWNpYWxseSBzaW5jZSB0aGV5IGhhZCBtZXQgd2l0aCBzdWNjZXNzIGFuZCBoaXMgbWVuIHdpdGggZGlzYXN0ZXI7IHNvIGhlIG1hcmNoZWQgYmFjayBhcyByYXBpZGx5IGFzIGhlIGNvdWxkIHRvIFRlZ2VhLCBhbmQgYWxsb3dlZCBoaXMgaG9wbGl0ZXMgdG8gcmVzdCB0aGVyZSwgYnV0IHNlbnQgaGlzIGhvcnNlbWVuIG9uIHRvIE1hbnRpbmVhLCBiZWdnaW5nIHRoZW0gdG8gZW5kdXJlIHRoaXMgYWRkaXRpb25hbCBlZmZvcnQgYW5kIGV4cGxhaW5pbmcgdG8gdGhlbSB0aGF0IHByb2JhYmx5IGFsbCB0aGUgY2F0dGxlIG9mIHRoZSBNYW50aW5lYW5zIHdlcmUgb3V0c2lkZSB0aGUgY2l0eSBhbmQgbGlrZXdpc2UgYWxsIHRoZSBwZW9wbGUsIHBhcnRpY3VsYXJseSBhcyBpdCB3YXMgaGFydmVzdCB0aW1lLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.5.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhleSB0aGVuIHNldCBmb3J0aDsgYnV0IHRoZSBBdGhlbmlhbiBob3JzZW1lbiwgc2V0dGluZyBvdXQgZnJvbSBFbGV1c2lzLCBoYWQgdGFrZW4gZGlubmVyIGF0IHRoZSBJc3RobXVzIGFuZCwgYWZ0ZXIgaGF2aW5nIHBhc3NlZCB0aHJvdWdoIENsZW9uYWUgYWxzbywgY2hhbmNlZCB0byBiZSBhcHByb2FjaGluZyBNYW50aW5lYSBvciB0byBiZSBhbHJlYWR5IHF1YXJ0ZXJlZCB3aXRoaW4gdGhlIHdhbGwgaW4gdGhlIGhvdXNlcy4gQW5kIHdoZW4gdGhlIGVuZW15IHdlcmUgc2VlbiByaWRpbmcgdG93YXJkIHRoZSBjaXR5LCB0aGUgTWFudGluZWFucyBiZWdnZWQgdGhlIEF0aGVuaWFuIGhvcnNlbWVuIHRvIGhlbHAgdGhlbSwgaWYgaW4gYW55IHdheSB0aGV5IGNvdWxkOyBmb3Igb3V0c2lkZSB0aGUgd2FsbCB3ZXJlIGFsbCB0aGVpciBjYXR0bGUgYW5kIHRoZSBsYWJvdXJlcnMsIGFuZCBsaWtld2lzZSBtYW55IGNoaWxkcmVuIGFuZCBvbGRlciBtZW4gb2YgdGhlIGZyZWUgY2l0aXplbnMuIFdoZW4gdGhlIEF0aGVuaWFucyBoZWFyZCB0aGlzIHRoZXkgc2FsbGllZCBmb3J0aCB0byB0aGUgcmVzY3VlLCBhbHRob3VnaCB0aGV5IHdlcmUgc3RpbGwgd2l0aG91dCBicmVha2Zhc3QsIHRoZXkgYW5kIHRoZWlyIGhvcnNlcyBhcyB3ZWxsLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.5.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5IZXJlLCBhZ2Fpbiwgd2hvIHdvdWxkIG5vdCBhZG1pcmUgdGhlIHZhbG91ciBvZiB0aGVzZSBtZW4gYWxzbz8gRm9yIGFsdGhvdWdoIHRoZXkgc2F3IHRoYXQgdGhlIGVuZW15IHdlcmUgZmFyIG1vcmUgbnVtZXJvdXMsIGFuZCBhbHRob3VnaCBhIG1pc2ZvcnR1bmUgaGFkIGJlZmFsbGVuIHRoZSBob3JzZW1lbiBhdCBDb3JpbnRoLCB0aGV5IHRvb2sgbm8gYWNjb3VudCBvZiB0aGlzLCBub3Igb2YgdGhlIGZhY3QgdGhhdCB0aGV5IHdlcmUgYWJvdXQgdG8gZmlnaHQgd2l0aCB0aGUgVGhlYmFucyBhbmQgdGhlIFRoZXNzYWxpYW5zLCB3aG8gd2VyZSB0aG91Z2h0IHRvIGJlIHRoZSBiZXN0IG9mIGhvcnNlbWVuLCBidXQgcmF0aGVyLCBiZWluZyBhc2hhbWVkIHRvIGJlIGF0IGhhbmQgYW5kIHlldCByZW5kZXIgbm8gc2VydmljZSB0byB0aGVpciBhbGxpZXMsIGp1c3QgYXMgc29vbiBhcyB0aGV5IHNhdyB0aGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjIiPjM2MiBCLkMuPC9kYXRlPjwvbm90ZT4gZW5lbXkgdGhleSBjcmFzaGVkIHVwb24gdGhlbSwgZWFnZXJseSBkZXNpcmluZyB0byB3aW4gYmFjayB0aGVpciBhbmNlc3RyYWwgcmVwdXRlLgo8ZGF0ZSBhdXRobmFtZT0iLTM2MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MiI+MzYyIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.5.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYnkgZW5nYWdpbmcgaW4gdGhlIGJhdHRsZSB0aGV5IGRpZCBpbmRlZWQgcHJvdmUgdGhlIG1lYW5zIG9mIHNhdmluZyBmb3IgdGhlIE1hbnRpbmVhbnMgZXZlcnl0aGluZyB0aGF0IHdhcyBvdXRzaWRlIHRoZSB3YWxsLCBidXQgdGhlcmUgZmVsbCBicmF2ZSBtZW4gYW1vbmcgdGhlbTsgYW5kIHRob3NlIGFsc28gd2hvbSB0aGV5IHNsZXcgd2VyZSBtYW5pZmVzdGx5IG9mIGEgbGlrZSBzb3J0OyBmb3IgbmVpdGhlciBzaWRlIGhhZCBhbnkgd2VhcG9uIHNvIHNob3J0IHRoYXQgdGhleSBkaWQgbm90IHJlYWNoIG9uZSBhbm90aGVyIHRoZXJld2l0aC4gQW5kIHRoZSBBdGhlbmlhbnMgZGlkIG5vdCBhYmFuZG9uIHRoZWlyIG93biBkZWFkLCBhbmQgdGhleSBnYXZlIGJhY2sgc29tZSBvZiB0aGUgZW5lbXkncyB1bmRlciBhIHRydWNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.5.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXMgZm9yIEVwYW1pbm9uZGFzLCBvbiB0aGUgb3RoZXIgaGFuZCwgd2hlbiBoZSBjb25zaWRlcmVkIHRoYXQgd2l0aGluIGEgZmV3IGRheXMgaXQgd291bGQgYmUgbmVjZXNzYXJ5IGZvciBoaW0gdG8gZGVwYXJ0LCBiZWNhdXNlIHRoZSB0aW1lIGZpeGVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPiBBcHBhcmVudGx5IGVpdGhlciBieSB0aGUgVGhlYmFuIGdvdmVybm1lbnQgb3IgYnkgYWdyZWVtZW50IHdpdGggdGhlIGFsbGllcy48L25vdGU+IGZvciB0aGUgY2FtcGFpZ24gaGFkIGV4cGlyZWQsIGFuZCB0aGF0IGlmIGhlIHNob3VsZCBsZWF2ZSBiZWhpbmQgaGltIHVucHJvdGVjdGVkIHRoZSBwZW9wbGUgdG8gd2hvbSBoZSBoYWQgY29tZSBhcyBhbiBhbGx5LCB0aGV5IHdvdWxkIGJlIGJlc2llZ2VkIGJ5IHRoZWlyIGFkdmVyc2FyaWVzLCB3aGlsZSBoZSBoaW1zZWxmIHdvdWxkIGhhdmUgY29tcGxldGVseSB0YXJuaXNoZWQgaGlzIG93biByZXB1dGF0aW9uLCDigJQgZm9yIHdpdGggYSBsYXJnZSBmb3JjZSBvZiBob3BsaXRlcyBoZSBoYWQgYmVlbiBkZWZlYXRlZCBhdCBMYWNlZGFlbW9uIGJ5IGEgZmV3LCBhbmQgZGVmZWF0ZWQgbGlrZXdpc2UgaW4gYSBjYXZhbHJ5IGJhdHRsZSBhdCBNYW50aW5lYSwgYW5kIHRocm91Z2ggaGlzIGV4cGVkaXRpb24gdG8gUGVsb3Bvbm5lc3VzIGhhZCBtYWRlIGhpbXNlbGYgdGhlIGNhdXNlIG9mIHRoZSB1bmlvbiBvZiB0aGUgTGFjZWRhZW1vbmlhbnMsIHRoZSBBcmNhZGlhbnMsIHRoZSBBY2hhZWFucywgdGhlIEVsZWFucywgYW5kIHRoZSBBdGhlbmlhbnMsIOKAlCBoZSB0aG91Z2h0IGZvciB0aGVzZSByZWFzb25zIHRoYXQgaXQgd2FzIG5vdCBwb3NzaWJsZSBmb3IgaGltIHRvIHBhc3MgYnkgdGhlIGVuZW15IHdpdGhvdXQgYSBiYXR0bGUsIHNpbmNlIGhlIHJlYXNvbmVkIHRoYXQgaWYgaGUgd2VyZSB2aWN0b3Jpb3VzLCBoZSB3b3VsZCBtYWtlIHVwIGZvciBhbGwgdGhlc2UgdGhpbmdzLCB3aGlsZSBpZiBoZSB3ZXJlIHNsYWluLCBoZSBkZWVtZWQgdGhhdCBzdWNoIGFuIGVuZCB3b3VsZCBiZSBob25vdXJhYmxlIGZvciBvbmUgd2hvIHdhcyBzdHJpdmluZyB0byBsZWF2ZSB0byBoaXMgZmF0aGVybGFuZCBkb21pbmlvbiBvdmVyIFBlbG9wb25uZXN1cy4KPC90cmFuc2xhdGlvbj4="
translation['7.5.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdGhlIGZhY3QgdGhhdCBFcGFtaW5vbmRhcyBoaW1zZWxmIGVudGVydGFpbmVkIHN1Y2ggdGhvdWdodHMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiIHR5cGU9ImRhdGUiPjxkYXRlIGF1dGhuYW1lPSItMzYyIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItMzYyIj4zNjIgQi5DLjwvZGF0ZT48L25vdGU+IHNlZW1zIHRvIG1lIHRvIGJlIGluIG5vIHdpc2UgcmVtYXJrYWJsZSwg4oCUIGZvciBzdWNoIHRob3VnaHRzIGFyZSBuYXR1cmFsIHRvIGFtYml0aW91cyBtZW47IGJ1dCB0aGF0IGhlIGhhZCBicm91Z2h0IGhpcyBhcm15IHRvIHN1Y2ggYSBwb2ludCB0aGF0IHRoZSB0cm9vcHMgZmxpbmNoZWQgZnJvbSBubyB0b2lsLCB3aGV0aGVyIGJ5IG5pZ2h0IG9yIGJ5IGRheSwgYW5kIHNocmFuayBmcm9tIG5vIHBlcmlsLCBhbmQgYWx0aG91Z2ggdGhlIHByb3Zpc2lvbnMgdGhleSBoYWQgd2VyZSBzY2FudHksIHdlcmUgbmV2ZXJ0aGVsZXNzIHdpbGxpbmcgdG8gYmUgb2JlZGllbnQsIHRoaXMgc2VlbXMgdG8gbWUgdG8gYmUgbW9yZSByZW1hcmthYmxlLgo8ZGF0ZSBhdXRobmFtZT0iLTM2MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MiI+MzYyIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
translation['7.5.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYXQgdGhlIHRpbWUgd2hlbiBoZSBnYXZlIHRoZW0gdGhlIGxhc3Qgb3JkZXIgdG8gbWFrZSByZWFkeSwgc2F5aW5nIHRoYXQgdGhlcmUgd291bGQgYmUgYSBiYXR0bGUsIHRoZSBob3JzZW1lbiBlYWdlcmx5IHdoaXRlbmVkIHRoZWlyIGhlbG1ldHMgYXQgaGlzIGNvbW1hbmQsIHRoZSBob3BsaXRlcyBvZiB0aGUgQXJjYWRpYW5zIHBhaW50ZWQgY2x1YnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+IFRoZSBUaGViYW4gZGV2aWNlLjwvbm90ZT4gdXBvbiB0aGVpciBzaGllbGRzLCBhcyB0aG91Z2ggdGhleSB3ZXJlIFRoZWJhbnMsIGFuZCBhbGwgYWxpa2Ugc2hhcnBlbmVkIHRoZWlyIHNwZWFycyBhbmQgZGFnZ2VycyBhbmQgYnVybmlzaGVkIHRoZWlyIHNoaWVsZHMuCjwvdHJhbnNsYXRpb24+"
translation['7.5.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgd2hlbiBoZSBoYWQgbGVkIHRoZW0gZm9ydGgsIHRodXMgbWFkZSByZWFkeSwgaXQgaXMgd29ydGggd2hpbGUgYWdhaW4gdG8gbm90ZSB3aGF0IGhlIGRpZC4gSW4gdGhlIGZpcnN0IHBsYWNlLCBhcyB3YXMgbmF0dXJhbCwgaGUgZm9ybWVkIHRoZW0gaW4gbGluZSBvZiBiYXR0bGUuIEFuZCBieSBkb2luZyB0aGlzIGhlIHNlZW1lZCB0byBtYWtlIGl0IGNsZWFyIHRoYXQgaGUgd2FzIHByZXBhcmluZyBmb3IgYW4gZW5nYWdlbWVudDsgYnV0IHdoZW4gaGlzIGFybXkgaGFkIGJlZW4gZHJhd24gdXAgYXMgaGUgd2lzaGVkIGl0IHRvIGJlLCBoZSBkaWQgbm90IGFkdmFuY2UgYnkgdGhlIHNob3J0ZXN0IHJvdXRlIHRvd2FyZHMgdGhlIGVuZW15LCBidXQgbGVkIHRoZSB3YXkgdG93YXJkcyB0aGUgbW91bnRhaW5zIHdoaWNoIGxpZSB0byB0aGUgd2VzdHdhcmQgYW5kIG92ZXIgYWdhaW5zdCBUZWdlYSwgc28gdGhhdCBoZSBnYXZlIHRoZSBlbmVteSB0aGUgaW1wcmVzc2lvbiB0aGF0IGhlIHdvdWxkIG5vdCBqb2luIGJhdHRsZSBvbiB0aGF0IGRheS4KPC90cmFuc2xhdGlvbj4="
translation['7.5.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgYXMgc29vbiBhcyBoZSBoYWQgYXJyaXZlZCBhdCB0aGUgbW91bnRhaW4sIGFuZCB3aGVuIGhpcyBiYXR0bGUgbGluZSBoYWQgYmVlbiBleHRlbmRlZCB0byBpdHMgZnVsbCBsZW5ndGgsIGhlIGdyb3VuZGVkIGFybXMgYXQgdGhlIGZvb3Qgb2YgdGhlIGhlaWdodHMsIHNvIHRoYXQgaGUgc2VlbWVkIGxpa2Ugb25lIHdobyB3YXMgZW5jYW1waW5nLiBBbmQgYnkgc28gZG9pbmcgaGUgY2F1c2VkIGFtb25nIG1vc3Qgb2YgdGhlIGVuZW15IGEgcmVsYXhhdGlvbiBvZiB0aGVpciBtZW50YWwgcmVhZGluZXNzIGZvciBmaWdodGluZywgYW5kIGxpa2V3aXNlIGEgcmVsYXhhdGlvbiBvZiB0aGVpciByZWFkaW5lc3MgYXMgcmVnYXJkcyB0aGVpciBhcnJheSBmb3IgYmF0dGxlLiBJdCB3YXMgbm90IHVudGlsIGhlIGhhZCBtb3ZlZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIiB0eXBlPSJkYXRlIj48ZGF0ZSBhdXRobmFtZT0iLTM2MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MiI+MzYyIEIuQy48L2RhdGU+PC9ub3RlPiBhbG9uZyBzdWNjZXNzaXZlIGNvbXBhbml1cyB0byB0aGUgd2luZyB3aGVyZSBoZSB3YXMgc3RhdGlvbmVkLCBhbmQgaGFkIHdoZWVsZWQgdGhlbSBpbnRvIGxpbmUgdGh1cyBzdHJlbmd0aGVuaW5nIHRoZSBtYXNzIGZvcm1hdGlvbiBvZiB0aGlzIHdpbmcsPGRhdGUgYXV0aG5hbWU9Ii0zNjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjIiPjM2MiBCLkMuPC9kYXRlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gVGhlIGVudGlyZSBhcm15LCBtYXJjaGluZyBpbiBhIGxvbmcgY29sdW1uIG9mIGV2ZW4gd2lkdGgsIHdpdGggRXBhbWlub25kYXMgYXQgdGhlIGhlYWQsIOKAnHJpZ2h0LWZhY2Vk4oCdIHVwb24gcmVhY2hpbmcgdGhlIGRlc2lyZWQgcG9zaXRpb24sIHRodXMgZm9ybWluZyBhIGxvbmcgYmF0dGxlLWxpbmUsIG9mIGV2ZW4sIGJ1dCBzbGlnaHQsIGRlcHRoLCB3aXRoIEVwYW1pbm9uZGFzIG9uIHRoZSBsZWZ0IHdpbmcuIEhlIHdpc2hlZCwgaG93ZXZlciwgdG8gaW5jcmVhc2UgdGhlIGRlcHRoIG9mIHRoaXMgd2luZy4gSGUgYWNjb3JkaW5nbHkgY2F1c2VkIHN1Y2Nlc3NpdmUgY29tcGFuaWVzLCBmcm9tIHRoZSBjZW50cmUgYW5kIHRoZSByaWdodCB3aW5nLCB0byDigJxsZWZ0IGZhY2XigJ0gYWdhaW4gYW5kIG1hcmNoIGFsb25nIGJlaGluZCB0aGUgbGluZSB0byB0aGUgbGVmdCB3aW5nLCB0aHVzIGdyYWR1YWxseSBpbmNyZWFzaW5nIGl0cyBkZXB0aC48L25vdGU+IHRoYXQgaGUgZ2F2ZSB0aGUgb3JkZXIgdG8gdGFrZSB1cCBhcm1zIGFuZCBsZWQgdGhlIGFkdmFuY2U7IGFuZCBoaXMgdHJvb3BzIGZvbGxvd2VkLiBOb3cgYXMgc29vbiBhcyB0aGUgZW5lbXkgc2F3IHRoZW0gdW5leHBlY3RlZGx5IGFwcHJvYWNoaW5nLCBubyBvbmUgYW1vbmcgdGhlbSB3YXMgYWJsZSB0byBrZWVwIHF1aWV0LCBidXQgc29tZSBiZWdhbiBydW5uaW5nIHRvIHRoZWlyIHBvc3RzLCBvdGhlcnMgZm9ybWluZyBpbnRvIGxpbmUsIG90aGVycyBicmlkbGluZyBob3JzZXMsIGFuZCBvdGhlcnMgcHV0dGluZyBvbiBicmVhc3QtcGxhdGVzLCB3aGlsZSBhbGwgd2VyZSBsaWtlIG1lbiB3aG8gd2VyZSBhYm91dCB0byBzdWZmZXIsIHJhdGhlciB0eGFuIHRvIGluZmxpY3QsIGhhcm0uCjwvdHJhbnNsYXRpb24+"
translation['7.5.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5NZWFud2hpbGUgRXBhbWlub25kYXMgbGVkIGZvcndhcmQgaGlzIGFybXkgcHJvdyBvbiwgbGlrZSBhIHRyaXJlbWUsIGJlbGlldmluZyB0aGF0IGlmIGhlIGNvdWxkIHN0cmlrZSBhbmQgY3V0IHRocm91Z2ggYW55d2hlcmUsIGhlIHdvdWxkIGRlc3Ryb3kgdGhlIGVudGlyZSBhcm15IG9mIGhpcyBhZHZlcnNhcmllcy4gRm9yIGhlIHdhcyBwcmVwYXJpbmcgdG8gbWFrZSB0aGUgY29udGVzdCB3aXRoIHRoZSBzdHJvbmdlc3QgcGFydCBvZiBoaXMgZm9yY2UsIGFuZCB0aGUgd2Vha2VzdCBwYXJ0IGhlIGhhZCBzdGF0aW9uZWQgZmFyIGJhY2ssIGtub3dpbmcgdGhhdCBpZiBkZWZlYXRlZCBpdCB3b3VsZCBjYXVzZSBkaXNjb3VyYWdlbWVudCB0byB0aGUgdHJvb3BzIHdobyB3ZXJlIHdpdGggaGltIGFuZCBnaXZlIGNvdXJhZ2UgdG8gdGhlIGVuZW15LiBBZ2Fpbiwgd2hpbGUgdGhlIGVuZW15IGhhZCBmb3JtZWQgdGhlaXIgaG9yc2VtZW4gbGlrZSBhIHBoYWxhbnggb2YgaG9wbGl0ZXMsIOKAlCBzaXggZGVlcCBhbmQgd2l0aG91dCBpbnRlcm1pbmdsZWQgZm9vdCBzb2xkaWVycywg4oCUCjwvdHJhbnNsYXRpb24+"
translation['7.5.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5FcGFtaW5vbmRhcyBvbiB0aGUgb3RoZXIgaGFuZCBocWQgbWFkZSBhIHN0cm9uZyBjb2x1bW4gb2YgaGlzIGNhdmFscnksIGFsc28sIGFuZCBoYWQgbWluZ2xlZCBmb290IHNvbGRpZXJzIGFtb25nIHRoZW0sIGJlbGlldmluZyB0aGF0IHdoZW4gaGUgY3V0IHRocm91Z2ggdGhlIGVuZW15J3MgY2F2YWxyeSwgaGUgd291bGQgaGF2ZSBkZWZlYXRlZCB0aGUgZW50aXJlIG9wcG9zaW5nIGFybXk7IGZvciBpdCBpcyB2ZXJ5IGhhcmQgdG8gZmluZCBtZW4gd2hvIHdpbGwgc3RhbmQgZmlybSB3aGVuIHRoZXkgc2VlIGFueSBvZiB0aGVpciBvd24gc2lkZSBpbiBmbGlnaHQuIEFuZCBpbiBvcmRlciB0byBwcmV2ZW50IHRoZSBBdGhlbmlhbnMgb24gdGhlIGxlZnQgd2luZyBmcm9tIGNvbWluZyB0byB0aGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjIiPjM2MiBCLkMuPC9kYXRlPjwvbm90ZT4gYWlkIG9mIHRob3NlIHdobyB3ZXJlIHBvc3RlZCBuZXh0IHRvIHRoZW0sIGhlIHN0cXRpb25lZCBib3RoIGhvcnNlbWVuIGFuZCBob3BsaXRlcyB1cG9uIHNvbWUgaGlsbHMgb3ZlciBhZ2FpbnN0IHRoZW0sIGRlc2lyaW5nIHRvIGNyZWF0ZSBpbiB0aGVtIHRoZSBmZWFyIHRoYXQgaWYgdGhleSBwcm9jZWVkZWQgdG8gZ2l2ZSBhaWQsIHRoZXNlIHRyb29wcyB3b3VsZCBmYWxsIHVwb24gdGhlbSBmcm9tIGJlaGluZC48ZGF0ZSBhdXRobmFtZT0iLTM2MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MiI+MzYyIEIuQy48L2RhdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRodXMsIHRoZW4sIGhlIG1hZGUgaGlzIGF0dGFjaywgYW5kIGhlIHdhcyBub3QgZGlzYXBwb2ludGVkIG9mIGhpcyBob3BlOyBmb3IgYnkgZ2FpbmluZyB0aGUgbWFzdGVyeSBhdCB0aGUgcG9pbnQgd2hlcmUgaGUgc3RydWNrLCBoZSBjYXVzZWQgdGhlIGVudGlyZSBhcm15IG9mIGhpcyBhZHZlcnNhcmllcyB0byBmbGVlLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.5.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuLCBob3dldmVyLCBoZSBoYWQgaGltc2VsZiBmYWxsZW4sIHRob3NlIHdobyB3ZXJlIGxlZnQgcHJvdmVkIHVuYWJsZSB0byB0YWtlIGZ1bGwgYWR2YW50YWdlIHRoZXJlYWZ0ZXIgZXZlbiBvZiB0aGUgdmljdG9yeTsgYnV0IGFsdGhvdWdoIHRoZSBvcHBvc2luZyBwaGFsYW54IGhhZCBmbGVkIGJlZm9yZSB0aGVtLCB0aGVpciBob3BsaXRlcyBkaWQgbm90IGtpbGwgYSBzaW5nbGUgbWFuIG9yIGFkdmFuY2UgYmV5b25kIHRoZSBzcG90IHdoZXJlIHRoZSBjb2xsaXNpb24gaGFkIHRha2VuIHBsYWNlOyBhbmQgYWx0aG91Z2ggdGhlIGNhdmFscnkgYWxzbyBoYWQgZmxlZCBiZWZvcmUgdGhlbSwgdGhlaXIgY2F2YWxyeSBpbiBsaWtlIG1hbm5lciBkaWQgbm90IHB1cnN1ZSBhbmQga2lsbCBlaXRoZXIgaG9yc2VtZW4gb3IgaG9wbGl0ZXMsIGJ1dCBzbGlwcGVkIGJhY2sgdGltb3JvdXNseSwgbGlrZSBiZWF0ZW4gbWVuLCB0aHJvdWdoIHRoZSBsaW5lcyBvZiB0aGUgZmx5aW5nIGVuZW15LiBGdXJ0aGVybW9yZSwgd2hpbGUgdGhlIGludGVybWluZ2xlZCBmb290bWVuIGFuZCB0aGUgcGVsdGFzdHMsIHdobyBoYWQgc2hhcmVkIGluIHRoZSB2aWN0b3J5IG9mIHRoZSBjYXZhbHJ5LCBkaWQgbWFrZSB0aGVpciB3YXkgbGlrZSB2aWN0b3JzIHRvIHRoZSByZWdpb24gb2YgdGhlIGVuZW15J3MgbGVmdCB3aW5nLCBtb3N0IG9mIHRoZW0gd2VyZSB0aGVyZSBzbGFpbiBieSB0aGUgQXRoZW5pYW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['7.5.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGVzZSB0aGluZ3MgaGFkIHRha2VuIHBsYWNlLCB0aGUgb3Bwb3NpdGUgb2Ygd2hhdCBhbGwgbWVuIGJlbGlldmVkIHdvdWxkIGhhcHBlbiB3YXMgYnJvdWdodCB0byBwYXNzLiBGb3Igc2luY2Ugd2VsbC1uaWdoIGFsbCB0aGUgcGVvcGxlIG9mIEdyZWVjZSBoYWQgY29tZSB0b2dldGhlciBhbmQgZm9ybWVkIHRoZW1zZWx2ZXMgaW4gb3Bwb3NpbmcgbGluZXMsIHRoZXJlIHdhcyBubyBvbmUgd2hvIGRpZCBub3Qgc3VwcG9zZSB0aGF0IGlmIGEgYmF0dGxlIHdlcmUgZm91Z2h0LCB0aG9zZSB3aG8gcHJvdmVkIHZpY3RvcmlvdXMgd291bGQgYmUgdGhlIHJ1bGVycyBhbmQgdGhvc2Ugd2hvIHdlcmUgZGVmZWF0ZWQgd291bGQgYmUgdGhlaXIgc3ViamVjdHM7IGJ1dCB0aGUgZGVpdHkgc28gb3JkZXJlZCBpdCB0aGF0IGJvdGggcGFydGllcyBzZXQgdXAgYSB0cm9waHkgYXMgdGhvdWdoIHZpY3RvcmlvdXMgYW5kIG5laXRoZXIgdHJpZWQgdG8gaGluZGVyIHRob3NlIHdobyBzZXQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiIgdHlwZT0iZGF0ZSI+PGRhdGUgYXV0aG5hbWU9Ii0zNjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii0zNjIiPjM2MiBCLkMuPC9kYXRlPjwvbm90ZT4gdGhlbSB1cCwgdGhhdCBib3RoIGdhdmUgYmFjayB0aGUgZGVhZCB1bmRlciBhIHRydWNlIGFzIHRob3VnaCB2aWN0b3Jpb3VzLCBhbmQgYm90aCByZWNlaXZlZCBiYWNrIHRoZWlyIGRlYWQgdW5kZXIgYSB0cnVjZSBhcyB0aG91Z2ggZGVmZWF0ZWQsIGFuZCB0aGF0IHdoaWxlIGVhY2ggcGFydHkgY2xhaW1lZCB0byBiZSB2aWN0b3Jpb3VzLAo8ZGF0ZSBhdXRobmFtZT0iLTM2MiIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTM2MiI+MzYyIEIuQy48L2RhdGU+PC90cmFuc2xhdGlvbj4="
