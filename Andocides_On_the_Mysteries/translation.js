var translation={}
translation['1.Intro.1'] = ""
translation['1.Intro.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkZpcnN0LCBJIGFzayB5b3UgdG8gYmVhciBpbiBtaW5kIHRoYXQgaXQgaXMgbm90IGJlY2F1c2UgSSBoYXZlIGJlZW4gZm9yY2VkIHRvIGZhY2UgbXkgdHJpYWwgdGhhdCBJIGFtIGhlcmUgdG9kYXnigJRJIGhhdmUgbm90IGJlZW4gb24gYmFpbCwgbm9yIGhhdmUgSSBiZWVuIGtlcHQgaW4gY29uZmluZW1lbnQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoaXMgd2FzIG5vdCBjdXN0b21hcnkgaW4gYSBjYXNlIG9mIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8lM69zrTOtc65zr7Ouc+CPC9mb3JlaWduPi4gIFRoZSBhY2N1c2VkLCBpZiBhIGNpdGl6ZW4sIHdhcyB1c3VhbGx5IGdpdmVuIHRoZSBjaG9pY2Ugb2YgZnVybmlzaGluZyBzdXJldGllcyDvvIg8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDOs86zz4XOt8+EzrHhvbc8L2ZvcmVpZ24+77yJICBvciBzdWZmZXJpbmcgaW1wcmlzb25tZW50IHVudGlsIHRoZSBjYXNlIGNhbWUgaW50byBjb3VydC4gIFBvc3NpYmx5IGl0IHdhcyBmZWx0IHRoYXQgdGhlIGNvbmRpdGlvbnMgaW4gdGhlIHByZXNlbnQgaW5zdGFuY2Ugd2VyZSBleGNlcHRpb25hbCBhbmQgdGhhdCBBbmRvY2lkZXMgc2hvdWxkIGJlIGFsbG93ZWQgdGhlIG9wcG9ydHVuaXR5IG9mIHF1aXR0aW5nIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjgxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2ODEiPkF0dGljYTwvcGxhY2VOYW1lPiBpZiBoZSBzbyBkZXNpcmVkLjwvbm90ZT4gSSBhbSBoZXJlLCBmaXJzdCBhbmQgZm9yZW1vc3QgYmVjYXVzZSBJIHJlbHkgdXBvbiBqdXN0aWNlIGFuZCBzZWNvbmRseSBiZWNhdXNlIEkgcmVseSB1cG9uIHlvdTsgIEkgYmVsaWV2ZSB0aGF0IHlvdSB3aWxsIGRlY2lkZSBteSBjYXNlIGltcGFydGlhbGx5IGFuZCwgZmFyIHNvb25lciB0aGFuIGFsbG93IG15IGVuZW1pZXMgdG8gZGVmeSBqdXN0aWNlIGJ5IHRha2luZyBteSBsaWZlLCB3aWxsIHVwaG9sZCBqdXN0aWNlIGJ5IHByb3RlY3RpbmcgbWUsIGFzIHlvdXIgbGF3cyBhbmQgeW91ciBvYXRocyBhcyBqdXJvcnMgcmVxdWlyZSB5b3UgdG8gZG8uCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8lM69zrTOtc65zr7Ouc+CPC9mb3JlaWduPi4gIFRoZSBhY2N1c2VkLCBpZiBhIGNpdGl6ZW4sIHdhcyB1c3VhbGx5IGdpdmVuIHRoZSBjaG9pY2Ugb2YgZnVybmlzaGluZyBzdXJldGllcyDvvIg8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDOs86zz4XOt8+EzrHhvbc8L2ZvcmVpZ24+77yJICBvciBzdWZmZXJpbmcgaW1wcmlzb25tZW50IHVudGlsIHRoZSBjYXNlIGNhbWUgaW50byBjb3VydC4gIFBvc3NpYmx5IGl0IHdhcyBmZWx0IHRoYXQgdGhlIGNvbmRpdGlvbnMgaW4gdGhlIHByZXNlbnQgaW5zdGFuY2Ugd2VyZSBleGNlcHRpb25hbCBhbmQgdGhhdCBBbmRvY2lkZXMgc2hvdWxkIGJlIGFsbG93ZWQgdGhlIG9wcG9ydHVuaXR5IG9mIHF1aXR0aW5nIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjgxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2ODEiPkF0dGljYTwvcGxhY2VOYW1lPiBpZiBoZSBzbyBkZXNpcmVkLjwvdHJhbnNsYXRpb24+"
translation['1.Intro.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaXRoIGRlZmVuZGFudHMgd2hvIGZhY2UgYSB0cmlhbCBvZiB0aGVpciBvd24gZnJlZSB3aWxsLCBnZW50bGVtZW4sIGl0IHN0YW5kcyB0byByZWFzb24gdGhhdCB5b3Ugc2hvdWxkIGZlZWwgYXMgY29udmluY2VkIG9mIHRoZWlyIGlubm9jZW5jZSBhcyB0aGV5IGRvIHRoZW1zZWx2ZXMuICBXaGVuIGEgZGVmZW5kYW50IGFkbWl0cyBoaW1zZWxmIGd1aWx0eSBieSByZWZ1c2luZyB0byBhd2FpdCB0cmlhbCwgeW91IG5hdHVyYWxseSBlbmRvcnNlIHRoZSB2ZXJkaWN0IHdoaWNoIGhlIGhhcyBwYXNzZWQgdXBvbiBoaW1zZWxmOyAgc28gaXQgZm9sbG93cyB0aGF0IGlmIGEgbWFuIGlzIHByZXBhcmVkIHRvIGZhY2UgaGlzIHRyaWFsIGJlY2F1c2UgaGlzIGNvbnNjaWVuY2UgaXMgY2xlYXIsIHlvdSBzaG91bGQgbGV0IGhpcyB2ZXJkaWN0IHVwb24gaGltc2VsZiBkZXRlcm1pbmUgeW91ciBvd24gaW4gdGhlIHNhbWUgd2F5LCBpbnN0ZWFkIG9mIHByZXN1bWluZyBoaW0gZ3VpbHR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Intro.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk1pbmUgaXMgYSBjYXNlIGluIHBvaW50LiAgTXkgZW5lbWllcyBoYXZlIGJlZW4gc2F5aW5nLCBvciBzbyBJIGtlZXAgaGVhcmluZywgdGhhdCBJIHdvdWxkIHRha2UgdG8gbXkgaGVlbHMgaW5zdGVhZCBvZiBzdGFuZGluZyBteSBncm91bmQuICDigJxXaGF0IG1vdGl2ZSBjb3VsZCBBbmRvY2lkZXMgcG9zc2libHkgaGF2ZSBmb3IgYnJhdmluZyBzbyBoYXphcmRvdXMgYSB0cmlhbD/igJ0gdGhleSBhcmd1ZS4gIOKAnEhlIGNhbiBjb3VudCB1cG9uIGEgbGl2ZWxpaG9vZCBzdWZmaWNpZW50IGZvciBhbGwgaGlzIG5lZWRzLCBpZiBoZSBkb2VzIG5vIG1vcmUgdGhhbiB3aXRoZHJhdyBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjgxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2ODEiPkF0dGljYTwvcGxhY2VOYW1lPjsgIHdoaWxlIGlmIGhlIHJldHVybnMgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAxMTIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDExMiI+Q3lwcnVzPC9wbGFjZU5hbWU+IHdoZW5jZSBoZSBoYXMgY29tZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkRlIFJlZGl0dTwvdGl0bGU+IHNob3dzIHRoYXQgQW5kb2NpZGVzIGhhZCBzcGVudCBhIGNvbnNpZGVyYWJsZSB0aW1lIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMTEyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAxMTIiPkN5cHJ1czwvcGxhY2VOYW1lPiBkdXJpbmcgaGlzIHllYXJzIG9mIGV4aWxlLiAgSGUgd2FzIG9uIHZlcnkgZnJpZW5kbHkgdGVybXMgd2l0aCBFdmFnb3Jhcywgd2hvIGhhZCBzdWNjZWVkZWQgaW4gcmVnYWluaW5nIHRoZSB0aHJvbmUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTYWxhbWlzLCBDeXBydXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNhbGFtaXMsIEN5cHJ1cyI+U2FsYW1pczwvcGxhY2VOYW1lPiBpbiA0MTAuICBFdmFnb3JhcyB3YXMgbm90b3Jpb3VzbHkgZWFnZXIgdG8gYXR0cmFjdCBsaWtlbHkgR3JlZWsgc2V0dGxlcnMuPC9ub3RlPiBhbiBhYnVuZGFuY2Ugb2YgZ29vZCBsYW5kIGhhcyBiZWVuIG9mZmVyZWQgaGltIGFuZCBpcyBoaXMgZm9yIHRoZSBhc2tpbmcuICBXaWxsIGEgbWFuIGluIGhpcyBwb3NpdGlvbiB3YW50IHRvIHJpc2sgaGlzIGxpZmU/IFdoYXQgb2JqZWN0IGNvdWxkIGhlIGhhdmUgaW4gZG9pbmcgc28/IENhbm5vdCBoZSBzZWUgdGhlIHN0YXRlIG9mIHRoaW5ncyBpbiA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5EZSBSZWRpdHU8L3RpdGxlPiBzaG93cyB0aGF0IEFuZG9jaWRlcyBoYWQgc3BlbnQgYSBjb25zaWRlcmFibGUgdGltZSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDExMiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMTEyIj5DeXBydXM8L3BsYWNlTmFtZT4gZHVyaW5nIGhpcyB5ZWFycyBvZiBleGlsZS4gIEhlIHdhcyBvbiB2ZXJ5IGZyaWVuZGx5IHRlcm1zIHdpdGggRXZhZ29yYXMsIHdobyBoYWQgc3VjY2VlZGVkIGluIHJlZ2FpbmluZyB0aGUgdGhyb25lIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU2FsYW1pcywgQ3lwcnVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTYWxhbWlzLCBDeXBydXMiPlNhbGFtaXM8L3BsYWNlTmFtZT4gaW4gNDEwLiAgRXZhZ29yYXMgd2FzIG5vdG9yaW91c2x5IGVhZ2VyIHRvIGF0dHJhY3QgbGlrZWx5IEdyZWVrIHNldHRsZXJzLjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPj/igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.Intro.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoYXQgZW50aXJlbHkgbWlzcmVwcmVzZW50cyBteSBmZWVsaW5ncywgZ2VudGxlbWVuLiAgSSB3b3VsZCBuZXZlciBjb25zZW50IHRvIGEgbGlmZSBhYnJvYWQgd2hpY2ggY3V0IG1lIG9mZiBmcm9tIG15IGNvdW50cnksIHdoYXRldmVyIHRoZSBhZHZhbnRhZ2VzIGF0dGFjaGVkIHRvIGl0OyAgYW5kIGFsdGhvdWdoIGNvbmRpdGlvbnMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IG1heSBiZSB3aGF0IG15IGVuZW1pZXMgYWxsZWdlLCBJIHdvdWxkIHNvb25lciBiZSBhIGNpdGl6ZW4gb2YgaGVyIHRoYW4gb2YgYW55IG90aGVyIHN0YXRlIHdoaWNoIG1heSBhcHBlYXIgdG8gbWUgdG8gYmUganVzdCBub3cgYXQgdGhlIGhlaWdodCBvZiBwcm9zcGVyaXR5LiAgVGhvc2UgYXJlIHRoZSBmZWVsaW5ncyB3aGljaCBoYXZlIGxlZCBtZSB0byBwbGFjZSBteSBsaWZlIGluIHlvdXIgaGFuZHMuCjwvdHJhbnNsYXRpb24+"
translation['1.Intro.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIGFzayB5b3UsIHRoZW4sIHRvIHNob3cgbW9yZSBzeW1wYXRoeSB0byBtZSwgdGhlIGRlZmVuZGFudCwgZ2VudGxlbWVuLCB0aGFuIHRvIG15IGFjY3VzZXJzLCBpbiB0aGUga25vd2xlZGdlIHRoYXQgZXZlbiBpZiB5b3UgZ2l2ZSB1cyBhbiBpbXBhcnRpYWwgaGVhcmluZywgdGhlIGRlZmVuY2UgaXMgaW5ldml0YWJseSBhdCBhIGRpc2FkdmFudGFnZS4gIFRoZSBwcm9zZWN1dGlvbiBoYXZlIGJyb3VnaHQgdGhlaXIgY2hhcmdlIGluIHBlcmZlY3Qgc2FmZXR5LCBhZnRlciBlbGFib3JhdGluZyB0aGVpciBwbGFucyBhdCBsZWlzdXJlOyAgd2hlcmVhcyBJIHdobyBhbSBhbnN3ZXJpbmcgdGhhdCBjaGFyZ2UgYW0gZmlsbGVkIHdpdGggZmVhcjsgIG15IGxpZmUgaXMgYXQgc3Rha2UsIGFuZCBJIGhhdmUgYmVlbiBncm9zc2x5IG1pc3JlcHJlc2VudGVkLiAgWW91IGhhdmUgZ29vZCByZWFzb24gZm9yIHNob3dpbmcgbW9yZSBzeW1wYXRoeSB0byBtZSB0aGFuIHlvdSBkbyB0byBteSBhY2N1c2Vycy4KPC90cmFuc2xhdGlvbj4="
translation['1.Intro.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgdGhlcmUgaXMgYW5vdGhlciB0aGluZyB0byBiZSBib3JuZSBpbiBtaW5kLiAgU2VyaW91cyBjaGFyZ2VzIGhhdmUgb2Z0ZW4gYmVmb3JlIG5vdyBiZWVuIGRpc3Byb3ZlZCBhdCBvbmNlLCBhbmQgc28gZGVjaXNpdmVseSB0aGF0IHlvdSB3b3VsZCBtdWNoIHJhdGhlciBoYXZlIHB1bmlzaGVkIHRoZSBhY2N1c2VycyB0aGFuIHRoZSBhY2N1c2VkLiAgQWdhaW4sIHdpdG5lc3NlcyBoYXZlIGNhdXNlZCB0aGUgZGVhdGggb2YgaW5ub2NlbnQgbWVuIGJ5IGdpdmluZyBmYWxzZSBldmlkZW5jZSwgYW5kIGhhdmUgb25seSBiZWVuIGNvbnZpY3RlZCBvZiBwZXJqdXJ5IHdoZW4gaXQgd2FzIHRvbyBsYXRlIHRvIGJlIG9mIGhlbHAgdG8gdGhlIHZpY3RpbXMuICBXaGVuIHRoaXMga2luZCBvZiB0aGluZyBoYXMgYmVlbiBzbyBjb21tb24sIHlvdSBjYW4gaGFyZGx5IGRvIGxlc3MgdGhhbiByZWZ1c2UgZm9yIHRoZSBQcmVzZW50IHRvIGNvbnNpZGVyIHRoZSBwcm9zZWN1dGlvbidzIHN0YXRlbWVudCBvZiB0aGUgY2FzZSB0cnVzdHdvcnRoeS4gIFlvdSBtYXkgdXNlIGl0IHRvIGp1ZGdlIHdoZXRoZXIgdGhlIGNoYXJnZSBpcyBzZXJpb3VzIG9yIG5vdCBidXQgeW91IGNhbm5vdCB0ZWxsIHdoZXRoZXIgdGhlIGNoYXJnZSBpcyB0cnVlIG9yIGZhbHNlIHVudGlsIHlvdSBoYXZlIGhlYXJkIG15IHJlcGx5IGFzIHdlbGwuCjwvdHJhbnNsYXRpb24+"
translation['1.Intro.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgSSBhbSB3b25kZXJpbmcgYXQgd2hhdCBwb2ludCB0byBiZWdpbiBteSBkZWZlbmNlLCBnZW50bGVtZW4uICBTaGFsbCBJIHN0YXJ0IHdpdGggd2hhdCBvdWdodCB0byBiZSBkaXNjdXNzZWQgbGFzdCBhbmQgcHJvdmUgdGhhdCB0aGUgcHJvc2VjdXRpb24gZGlzb2JleWVkIHRoZSBsYXcgaW4gbG9kZ2luZyB0aGVpciBpbmZvcm1hdGlvbiBhZ2FpbnN0IG1lPzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIHJlZmVyZW5jZSwgYXBwYXJlbnRseSwgdG8gdGhlIGFtbmVzdHkgb2YgNDAzLiAgQWNjb3JkaW5nIHRvIEFuZG9jaWRlcywgaXQgZGViYXJyZWQgdGhlIHByb3NlY3V0aW9uIGZyb20gcmVvcGVuaW5nIGhpcyBjYXNlLjwvbm90ZT4gU2hhbGwgSSB0YWtlIHRoZSBkZWNyZWUgb2YgSXNvdGltaWRlcyBhbmQgc2hvdyB0aGF0IGl0IGhhcyBiZWVuIGFubnVsbGVkPyBTaGFsbCBJIHN0YXJ0IHdpdGggdGhlIGxhd3Mgd2hpY2ggaGF2ZSBiZWVuIHBhc3NlZCBhbmQgdGhlIG9hdGhzIHdoaWNoIGhhdmUgYmVlbiB0YWtlbj8gT3Igc2hhbGwgSSB0ZWxsIHlvdSB0aGUgc3RvcnkgcmlnaHQgZnJvbSB0aGUgYmVnaW5uaW5nPyBJIHdpbGwgZXhwbGFpbiB0aGUgY2hpZWYgcmVhc29uIGZvciBteSBoZXNpdGF0aW9uLiAgRG91YnRsZXNzIHRoZSBkaWZmZXJlbnQgY2hhcmdlcyBtYWRlIGhhdmUgbm90IG1vdmVkIHlvdSBhbGwgdG8gdGhlIHNhbWUgZGVncmVlLCBhbmQgZWFjaCBvZiB5b3UgaGFzIHNvbWUgb25lIG9mIHRoZW0gdG8gd2hpY2ggaGUgd291bGQgbGlrZSBtZSB0byByZXBseSBmaXJzdDsgIHlldCB0byBhbnN3ZXIgdGhlbSBhbGwgc2ltdWx0YW5lb3VzbHkgaXMgaW1wb3NzaWJsZS4gIE9uIHRoZSB3aG9sZSwgSSB0aGluayBpdCBiZXN0IHRvIHRlbGwgeW91IHRoZSBlbnRpcmUgc3RvcnkgZnJvbSB0aGUgYmVnaW5uaW5nLCBvbWl0dGluZyBub3RoaW5nOyAgb25jZSB5b3UgYXJlIHByb3Blcmx5IGFjcXVhaW50ZWQgd2l0aCB0aGUgZmFjdHMsIHlvdSB3aWxsIHNlZSBpbW1lZGlhdGVseSBob3cgdW5mb3VuZGVkIGFyZSB0aGUgY2hhcmdlcyB3aGljaCBteSBhY2N1c2VycyBoYXZlIGJyb3VnaHQgYWdhaW5zdCBtZS4KPC90cmFuc2xhdGlvbj4="
translation['1.Intro.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgdG8gcmV0dXJuIGEganVzdCB2ZXJkaWN0IGlzIGFscmVhZHksIEkgZmVlbCBzdXJlLCB5b3VyIGludGVudGlvbjsgIGluZGVlZCwgaXQgd2FzIGJlY2F1c2UgSSByZWxpZWQgdXBvbiB5b3UgdGhhdCBJIHN0b29kIG15IGdyb3VuZC4gIEkgaGF2ZSBvYnNlcnZlZCB0aGF0IGluIHN1aXRzIHB1YmxpYyBhbmQgcHJpdmF0ZSB0aGUgb25lIHRoaW5nIHRvIHdoaWNoIHlvdSBhdHRhY2ggc3VwcmVtZSBpbXBvcnRhbmNlIGlzIHRoYXQgeW91ciBkZWNpc2lvbiBzaG91bGQgYWNjb3JkIHdpdGggeW91ciBvYXRoOyAgYW5kIGl0IGlzIHRoYXQsIGFuZCB0aGF0IGFsb25lLCB3aGljaCBrZWVwcyBvdXIgY2l0eSB1bnNoYWtlbiwgaW4gc3BpdGUgb2YgdGhvc2Ugd2hvIHdvdWxkIGhhdmUgdGhpbmdzIG90aGVyd2lzZS4gIEkgZG8sIGhvd2V2ZXIsIGFzayB5b3UgdG8gbGlzdGVuIHRvIG15IGRlZmVuY2Ugd2l0aCBzeW1wYXRoeTsgIGRvIG5vdCByYW5nZSB5b3Vyc2VsdmVzIHdpdGggbXkgb3Bwb25lbnRzOyAgZG8gbm90IHZpZXcgbXkgc3Rvcnkgd2l0aCBzdXNwaWNpb247ICBkbyBub3Qgd2F0Y2ggZm9yIGZhdWx0cyBvZiBleHByZXNzaW9uLiAgSGVhciBteSBkZWZlbmNlIHRvIHRoZSBlbmQ6ICBhbmQgb25seSB0aGVuIHJldHVybiB0aGUgdmVyZGljdCB3aGljaCB5b3UgdGhpbmsgYmVzdCBiZWZpdHMgeW91cnNlbHZlcyBhbmQgYmVzdCBzYXRpc2ZpZXMgeW91ciBvYXRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Intro.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz5BcyBJIGhhdmUgYWxyZWFkeSB0b2xkIHlvdSwgZ2VudGxlbWVuLCBteSBkZWZlbmNlIHdpbGwgYmVnaW4gYXQgdGhlIGJlZ2lubmluZyBhbmQgb21pdCBub3RoaW5nLiAgSSBzaGFsbCBkZWFsIGZpcnN0IHdpdGggdGhlIGFjdHVhbCBjaGFyZ2Ugd2hpY2ggZnVybmlzaGVkIGdyb3VuZHMgZm9yIHRoZSBsb2RnaW5nIG9mIHRoZSBpbmZvcm1hdGlvbiB0aGF0IGhhcyBicm91Z2h0IG1lIGludG8gY291cnQgdG9kYXksIHByb2ZhbmF0aW9uIG9mIHRoZSBNeXN0ZXJpZXMuICBJIHNoYWxsIHNob3cgdGhhdCBJIGhhdmUgY29tbWl0dGVkIG5vIGFjdCBvZiBpbXBpZXR5LCB0aGF0IEkgaGF2ZSBuZXZlciB0dXJuZWQgaW5mb3JtZXIsIHRoYXQgSSBoYXZlIG5ldmVyIGFkbWl0dGVkIGd1aWx0LCBhbmQgdGhhdCBJIGRvIG5vdCBrbm93IHdoZXRoZXIgdGhlIHN0YXRlbWVudHMgbWFkZSB0byB5b3UgYnkgdGhvc2Ugd2hvIGRpZCB0dXJuIGluZm9ybWVycyB3ZXJlIHRydWUgb3IgZmFsc2UuICBPZiBhbGwgdGhpcyB5b3Ugc2hhbGwgaGF2ZSBwcm9vZi48L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSJOYXJyIiB1bml0PSJwYXJ0IiAvPgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBBc3NlbWJseSBoYWQgbWV0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkp1bmUsIDxkYXRlIGF1dGhuYW1lPSItNDE1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDE1Ij40MTU8L2RhdGU+IEIuQy4gIEFuZG9jaWRlcyBpcyBvdXIgb25seSBhdXRob3JpdHkgZm9yIHRoaXMgbGFzdC1taW51dGUgbWVldGluZyBvZiB0aGUgQXNzZW1ibHkuICBJdCB3YXMgcHJvYmFibHkgY29udmVuZWQgdG8gbWFrZSBmaW5hbCBhcnJhbmdlbWVudHMgZm9yIHRoZSBleHBlZGl0aW9uLjwvbm90ZT4gdG8gZ2l2ZSBhdWRpZW5jZSB0byBOaWNpYXMsIExhbWFjaHVzLCBhbmQgQWxjaWJpYWRlcywgdGhlIGdlbmVyYWxzIGFib3V0IHRvIGxlYXZlIHdpdGggdGhlIFNpY2lsaWFuIGV4cGVkaXRpb27igJRpbiBmYWN0LCBMYW1hY2h1cycgZmxhZy1zaGlwIHdhcyBhbHJlYWR5IGx5aW5nIG9mZnNob3Jl4oCUd2hlbiBzdWRkZW5seSBQeXRob25pY3VzIHJvc2UgYmVmb3JlIHRoZSBwZW9wbGUgYW5kIGNyaWVkOiAg4oCcQ291bnRyeW1lbiwgeW91IGFyZSBzZW5kaW5nIGZvcnRoIHRoaXMgbWlnaHR5IGhvc3QgaW4gYWxsIGl0cyBhcnJheSB1cG9uIGEgcGVyaWxvdXMgZW50ZXJwcmlzZS4gIFlldCB5b3VyIGNvbW1hbmRlciwgQWxjaWJpYWRlcywgaGFzIGJlZW4gaG9sZGluZyBjZWxlYnJhdGlvbnMgb2YgdGhlIE15c3RlcmllcyBpbiBhIHByaXZhdGUgaG91c2UsIGFuZCBvdGhlcnMgd2l0aCBoaW07ICBJIHdpbGwgcHJvdmUgaXQuICBHcmFudCBpbW11bml0eTxkYXRlIGF1dGhuYW1lPSItNDE1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDE1Ij40MTU8L2RhdGU+IEIuQy4gIEFuZG9jaWRlcyBpcyBvdXIgb25seSBhdXRob3JpdHkgZm9yIHRoaXMgbGFzdC1taW51dGUgbWVldGluZyBvZiB0aGUgQXNzZW1ibHkuICBJdCB3YXMgcHJvYmFibHkgY29udmVuZWQgdG8gbWFrZSBmaW5hbCBhcnJhbmdlbWVudHMgZm9yIHRoZSBleHBlZGl0aW9uLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgd29yZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvITOtM61zrnOsTwvZm9yZWlnbj4gaXMgdXNlZCBpbiB0d28gc2xpZ2h0bHkgZGlmZmVyZW50IHNlbnNlcy4gIO+8iGHvvIkgIEl0IGlzIHRoZSBpbW11bml0eSBncmFudGVkIGJ5IHRoZSBBc3NlbWJseSBvciBDb3VuY2lsIHRvIHBlcnNvbnMgd2hvIGhhdmUgYSBzdGF0ZW1lbnQgdG8gbWFrZSB0byB0aGVtLCBidXQgd2hvIGFyZSBkZWJhcnJlZCBmcm9tIGFkZHJlc3NpbmcgdGhlbSB3aXRob3V0IHNwZWNpYWwgcGVybWlzc2lvbi4gIFRoaXMgYXBwbGllZCB0byBzbGF2ZXMsIG1ldGljcywgYW5kIHdvbWVuLiAgSGVuY2UgQW5kcm9tYWNodXMsIFRldWNydXMsIGFuZCBBZ2FyaXN0ZSBhbGwgaGF2ZSB0byBvYnRhaW4gYW4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byEzrTOtc65zrE8L2ZvcmVpZ24+IGJlZm9yZSBsb2RnaW5nIHRoZWlyIGluZm9ybWF0aW9uLiAg77yIYu+8iSAgSXQgaXMgdGhlIGltbXVuaXR5IGdyYW50ZWQgdG8gYSBjcmltaW5hbCB3aG8gaXMgcHJlcGFyZWQgdG8gdHVybiBpbmZvcm1lci4gIE9mdGVuIHRoZSB0d28gc2Vuc2VzIGFyZSBjb21iaW5lZCwgYXMgaGVyZSBBbmRyb21hY2h1cyB3YXMgYm90aCBkZWJhcnJlZCBmcm9tIGFkZHJlc3NpbmcgdGhlIEFzc2VtYmx5IGluIG5vcm1hbCBjaXJjdW1zdGFuY2VzLCBhbmQgaGUgd2FzIGltcGxpY2F0ZWQgaW4gdGhlIGNyaW1lIHdoaWNoIGhlIHdhcyBleHBvc2luZy4gIFRoZSBzYW1lIGFwcGxpZXMgdG8gVGV1Y3J1cy48L25vdGU+IHRvIGhpbSB3aG9tIEkgaW5kaWNhdGUsIGFuZCBhIG5vbi1pbml0aWF0ZSwgYSBzbGF2ZSBiZWxvbmdpbmcgdG8gc29tZW9uZSBoZXJlIHByZXNlbnQsIHNoYWxsIGRlc2NyaWJlIHRoZSBNeXN0ZXJpZXMgdG8geW91LiAgWW91IGNhbiBwdW5pc2ggbWUgYXMgeW91IHdpbGwsIGlmIHRoYXQgaXMgbm90IHRoZSB0cnV0aC7igJ0KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byEzrTOtc65zrE8L2ZvcmVpZ24+IGlzIHVzZWQgaW4gdHdvIHNsaWdodGx5IGRpZmZlcmVudCBzZW5zZXMuICDvvIhh77yJICBJdCBpcyB0aGUgaW1tdW5pdHkgZ3JhbnRlZCBieSB0aGUgQXNzZW1ibHkgb3IgQ291bmNpbCB0byBwZXJzb25zIHdobyBoYXZlIGEgc3RhdGVtZW50IHRvIG1ha2UgdG8gdGhlbSwgYnV0IHdobyBhcmUgZGViYXJyZWQgZnJvbSBhZGRyZXNzaW5nIHRoZW0gd2l0aG91dCBzcGVjaWFsIHBlcm1pc3Npb24uICBUaGlzIGFwcGxpZWQgdG8gc2xhdmVzLCBtZXRpY3MsIGFuZCB3b21lbi4gIEhlbmNlIEFuZHJvbWFjaHVzLCBUZXVjcnVzLCBhbmQgQWdhcmlzdGUgYWxsIGhhdmUgdG8gb2J0YWluIGFuIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8hM60zrXOuc6xPC9mb3JlaWduPiBiZWZvcmUgbG9kZ2luZyB0aGVpciBpbmZvcm1hdGlvbi4gIO+8iGLvvIkgIEl0IGlzIHRoZSBpbW11bml0eSBncmFudGVkIHRvIGEgY3JpbWluYWwgd2hvIGlzIHByZXBhcmVkIHRvIHR1cm4gaW5mb3JtZXIuICBPZnRlbiB0aGUgdHdvIHNlbnNlcyBhcmUgY29tYmluZWQsIGFzIGhlcmUgQW5kcm9tYWNodXMgd2FzIGJvdGggZGViYXJyZWQgZnJvbSBhZGRyZXNzaW5nIHRoZSBBc3NlbWJseSBpbiBub3JtYWwgY2lyY3Vtc3RhbmNlcywgYW5kIGhlIHdhcyBpbXBsaWNhdGVkIGluIHRoZSBjcmltZSB3aGljaCBoZSB3YXMgZXhwb3NpbmcuICBUaGUgc2FtZSBhcHBsaWVzIHRvIFRldWNydXMuPC90cmFuc2xhdGlvbj4="
translation['1.Narr.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5BbGNpYmlhZGVzIGRlbmllZCB0aGUgY2hhcmdlIGF0IGdyZWF0IGxlbmd0aDsgIHNvIHRoZSBQcnl0YW5lczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGF0IHNlY3Rpb24gb2YgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiB3aGljaCBwcmVzaWRlZCBhdCBtZWV0aW5ncyBvZiB0aGUgRWNjbGVzaWEgZm9yIHRoZSB0aW1lIGJlaW5nLiAgRm9yIGZ1cnRoZXIgZGV0YWlscyBzZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW50aXBoLiA2LjQ1IiB2YWxpZD0ieWVzIj5BbnRpcGguIDYuNDU8L2JpYmw+IG5vdGUgMS48L25vdGU+IGRlY2lkZWQgdG8gY2xlYXIgdGhlIG1lZXRpbmcgb2Ygbm9uLWluaXRpYXRlcyBhbmQgdGhlbXNlbHZlcyBmZXRjaCB0aGUgbGFkIGluZGljYXRlZCBieSBQeXRob25pY3VzLiAgVGhleSB3ZW50IG9mZiwgYW5kIHJldHVybmVkIHdpdGggYSBzbGF2ZSBiZWxvbmdpbmcgdG8gQXJjaGViaWFkZXMsIHNvbiBvZiBQb2xlbWFyY2h1cy4gIEhpcyBuYW1lIHdhcyBBbmRyb21hY2h1cy4gIEFzIHNvb24gYXMgaW1tdW5pdHkgaGFkIGJlZW4gdm90ZWQgaGltLCBoZSBzdGF0ZWQgdGhhdCBNeXN0ZXJpZXMgaGFkIGJlZW4gY2VsZWJyYXRlZCBpbiBQdWx5dGlvbidzIGhvdXNlLiAgQWxjaWJpYWRlcywgTmljaWFkZXMgYW5kIE1lbGV0dXMg4oCUdGhvc2Ugd2VyZSB0aGUgYWN0dWFsIGNlbGVicmFudHM7ICBidXQgb3RoZXJzIGhhZCBiZWVuIHByZXNlbnQgYW5kIGhhZCB3aXRuZXNzZWQgd2hhdCB0b29rIHBsYWNlLiAgVGhlIGF1ZGllbmNlIGhhZCBhbHNvIGluY2x1ZGVkIHNsYXZlcywgbmFtZWx5LCBoaW1zZWxmLCBoaXMgYnJvdGhlciwgdGhlIGZsdXRlcGxheWVyIEhpY2VzaXVzLCBhbmQgTWVsZXR1cycgc2xhdmUuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiB3aGljaCBwcmVzaWRlZCBhdCBtZWV0aW5ncyBvZiB0aGUgRWNjbGVzaWEgZm9yIHRoZSB0aW1lIGJlaW5nLiAgRm9yIGZ1cnRoZXIgZGV0YWlscyBzZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW50aXBoLiA2LjQ1IiB2YWxpZD0ieWVzIj5BbnRpcGguIDYuNDU8L2JpYmw+IG5vdGUgMS48L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3VjaCB3YXMgdGhlIHN0YXRlbWVudCBvZiBBbmRyb21hY2h1cywgdGhlIGZpcnN0IG9mIHRoZSBpbmZvcm1lcnMuICBIZSBnYXZlIHRoZSBmb2xsb3dpbmcgbGlzdCBvZiBwZXJzb25zIGNvbmNlcm5lZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIG5hbWVzIG9mIGEgbnVtYmVyIG9mIHRob3NlIHdob3NlIGdvb2RzIHdlcmUgY29uZmlzY2F0ZWQgYW5kIHNvbGQgYWZ0ZXIgdGhlIG11dGlsYXRpb24gb2YgdGhlIEhlcm1hZSBoYXZlIHN1cnZpdmVkIG9uIGEgZnJhZ21lbnRhcnkgaW5zY3JpcHRpb24g77yISS5HLiAgaSAyLiAgMzI3LCAzMzLvvIkuICBUaGV5IGNvbmZpcm0gdGhlIGxpc3RzIGdpdmVuIGJ5IEFuZG9jaWRlcy4gIE9lb25pYXMsIFBhbmFldGl1cywgYW5kIFBvbHlzdHJhdHVzIGFyZSBtZW50aW9uZWQgZnJvbSB0aGUgbGlzdCBvZiBBbmRyb21hY2h1czogIEF4aW9jaHVzLCBBZGVpbWFudHVzLCBDZXBoaXNvZG9ydXMsIGFuZCBFdXBoaWxldHVzIGZyb20gdGhlIGxhdGVyIGxpc3RzIG9mIFRldWNydXMgYW5kIEFuZG9jaWRlcyBoaW1zZWxmLjwvbm90ZT4gYWxsIG9mIHdob20sIHNhdmUgUG9seXN0cmF0dXMsIGZsZWQgdGhlIGNvdW50cnkgYW5kIHdlcmUgc2VudGVuY2VkIHRvIGRlYXRoIGJ5IHlvdSBpbiB0aGVpciBhYnNlbmNlOyAgUG9seXN0cmF0dXMgd2FzIGFycmVzdGVkIGFuZCBleGVjdXRlZC4gIFRha2UgdGhlIGxpc3QsIHBsZWFzZSwgYW5kIHJlYWQgb3V0IHRoZWlyIG5hbWVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BZGRyZXNzZWQgdG8gdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6zz4HOsc68zrzOsc+EzrXhvbvPgjwvZm9yZWlnbj4gb3IgY2xlcmsgb2YgdGhlIGNvdXJ0Ljwvbm90ZT48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Os8+BzrHOvM68zrHPhM614b27z4I8L2ZvcmVpZ24+IG9yIGNsZXJrIG9mIHRoZSBjb3VydC48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJOYW1lcyI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TmFtZXM8L3RpdGxlPlRoZSBmb2xsb3dpbmcgd2VyZSBkZW5vdW5jZWQgYnkgQW5kcm9tYWNodXM6ICBBbGNpYmlhZGVzLCBOaWNpYWRlcywgTWVsZXR1cywgQXJjaGViaWFkZXMsIEFyY2hpcHB1cywgRGlvZ2VuZXMsIFBvbHlzdHJhdHVzLCBBcmlzdG9tZW5lcywgT2VvbmlhcywgUGFuYWV0aXVzLjwvcXVvdGU+Cjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk5hbWVzPC90aXRsZT5UaGUgZm9sbG93aW5nIHdlcmUgZGVub3VuY2VkIGJ5IEFuZHJvbWFjaHVzOiAgQWxjaWJpYWRlcywgTmljaWFkZXMsIE1lbGV0dXMsIEFyY2hlYmlhZGVzLCBBcmNoaXBwdXMsIERpb2dlbmVzLCBQb2x5c3RyYXR1cywgQXJpc3RvbWVuZXMsIE9lb25pYXMsIFBhbmFldGl1cy48L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhpcyB3YXMgdGhlIGZpcnN0IGluZm9ybWF0aW9uLCBnZW50bGVtZW47ICBpdCB3YXMgZHVlIHRvIEFuZHJvbWFjaHVzLCBhbmQgaW1wbGljYXRlZCB0aGUgcGVyc29ucyBtZW50aW9uZWQuICBOb3cgY2FsbCBEaW9nbmV0dXMsIHBsZWFzZS4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iV2l0bmVzcyI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2l0bmVzczwvdGl0bGU+WW91IHdlcmUgb24gdGhlIGNvbW1pc3Npb24gb2YgaW5xdWlyeSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QW4gZXh0cmFvcmRpbmFyeSBib2FyZCBvZiB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrbOt8+EzrfPhM6x4b23PC9mb3JlaWduPiB3YXMgc2V0IHVwIHRvIGludmVzdGlnYXRlIGJvdGggdGhlIHByb2ZhbmF0aW9uIG9mIHRoZSBNeXN0ZXJpZXMgYW5kIHRoZSBtdXRpbGF0b24gb2YgdGhlIEhlcm1hZTsgIHRoZXkgd291bGQgYWN0IGFzIGFuIGFkdmlzb3J5IGNvbW1pdHRlZSB0byB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrLOv8+FzrvhvbU8L2ZvcmVpZ24+LiAgUGVpc2FuZGVyIGFuZCBDaGFyaWNsZXMgd2VyZSBhbHNvIG1lbWJlcnMg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMzYiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjM2PC9iaWJsPu+8iS48L25vdGU+IERpb2duZXR1cyB3aGVuIFB5dGhvbmljdXMgaW1wZWFjaGVkIEFsY2liaWFkZXMgYmVmb3JlIHRoZSBBc3NlbWJseT8gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlllcy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPllvdSByZWNvbGxlY3QgdGhhdCBBbmRyb21hY2h1cyBsYWlkIGFuIGluZm9ybWF0aW9uIGFzIHRvIHdoYXQgd2FzIGdvaW5nIG9uIGluIFB1bHl0aW9uJ3MgaG91c2U/IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5ZZXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgdGhlc2UgYXJlIHRoZSBuYW1lcyBvZiB0aG9zZSBpbXBsaWNhdGVkIGJ5IHRoYXQgaW5mb3JtYXRpb24/IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5ZZXMuPC9xdW90ZT4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2l0bmVzczwvdGl0bGU+WW91IHdlcmUgb24gdGhlIGNvbW1pc3Npb24gb2YgaW5xdWlyeSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QW4gZXh0cmFvcmRpbmFyeSBib2FyZCBvZiB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrbOt8+EzrfPhM6x4b23PC9mb3JlaWduPiB3YXMgc2V0IHVwIHRvIGludmVzdGlnYXRlIGJvdGggdGhlIHByb2ZhbmF0aW9uIG9mIHRoZSBNeXN0ZXJpZXMgYW5kIHRoZSBtdXRpbGF0b24gb2YgdGhlIEhlcm1hZTsgIHRoZXkgd291bGQgYWN0IGFzIGFuIGFkdmlzb3J5IGNvbW1pdHRlZSB0byB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrLOv8+FzrvhvbU8L2ZvcmVpZ24+LiAgUGVpc2FuZGVyIGFuZCBDaGFyaWNsZXMgd2VyZSBhbHNvIG1lbWJlcnMg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMzYiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjM2PC9iaWJsPu+8iS48L25vdGU+IERpb2duZXR1cyB3aGVuIFB5dGhvbmljdXMgaW1wZWFjaGVkIEFsY2liaWFkZXMgYmVmb3JlIHRoZSBBc3NlbWJseT8gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrbOt8+EzrfPhM6x4b23PC9mb3JlaWduPiB3YXMgc2V0IHVwIHRvIGludmVzdGlnYXRlIGJvdGggdGhlIHByb2ZhbmF0aW9uIG9mIHRoZSBNeXN0ZXJpZXMgYW5kIHRoZSBtdXRpbGF0b24gb2YgdGhlIEhlcm1hZTsgIHRoZXkgd291bGQgYWN0IGFzIGFuIGFkdmlzb3J5IGNvbW1pdHRlZSB0byB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrLOv8+FzrvhvbU8L2ZvcmVpZ24+LiAgUGVpc2FuZGVyIGFuZCBDaGFyaWNsZXMgd2VyZSBhbHNvIG1lbWJlcnMg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMzYiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjM2PC9iaWJsPu+8iS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+WWVzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+WW91IHJlY29sbGVjdCB0aGF0IEFuZHJvbWFjaHVzIGxhaWQgYW4gaW5mb3JtYXRpb24gYXMgdG8gd2hhdCB3YXMgZ29pbmcgb24gaW4gUHVseXRpb24ncyBob3VzZT8gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlllcy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCB0aGVzZSBhcmUgdGhlIG5hbWVzIG9mIHRob3NlIGltcGxpY2F0ZWQgYnkgdGhhdCBpbmZvcm1hdGlvbj8gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlllcy48L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QSBzZWNvbmQgaW5mb3JtYXRpb24gZm9sbG93ZWQuICBBbiBhbGllbiBuYW1lZCBUZXVjcnVzLCByZXNpZGVudCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHF1aWV0bHkgd2l0aGRyZXcgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNZWdhcmEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1lZ2FyYSI+TWVnYXJhPC9wbGFjZU5hbWU+LiAgRnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1lZ2FyYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTWVnYXJhIj5NZWdhcmE8L3BsYWNlTmFtZT4gaGUgaW5mb3JtZWQgdGhlIENvdW5jaWwgdGhhdCBpZiBpbW11bml0eSB3ZXJlIGdyYW50ZWQgaGltLCBoZSB3YXMgcHJlcGFyZWQgbm90IG9ubHkgdG8gbG9kZ2UgYW4gaW5mb3JtYXRpb24gd2l0aCByZWdhcmQgdG8gdGhlIE15c3Rlcmllc+KAlGFzIG9uZSBvZiB0aGUgcGFydGljaXBhbnRzLCBoZSB3b3VsZCByZXZlYWwgdGhlIG5hbWVzIG9mIGhpcyBjb21wYW5pb25z4oCUYnV0IGhlIHdvdWxkIGFsc28gdGVsbCB3aGF0IGhlIGtuZXcgb2YgdGhlIG11dGlsYXRpb24gb2YgdGhlIEhlcm1hZS4gIFRoZSBDb3VuY2lsLCB3aGljaCBoYWQgc3VwcmVtZSBwb3dlcnMgYXQgdGhlIHRpbWUsIHZvdGVkIGFjY2VwdGFuY2U7ICBhbmQgbWVzc2VuZ2VycyB3ZXJlIHNlbnQgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNZWdhcmEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1lZ2FyYSI+TWVnYXJhPC9wbGFjZU5hbWU+IHRvIGZldGNoIGhpbS4gIEhlIHdhcyBicm91Z2h0IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgYW5kIG9uIGJlaW5nIGdyYW50ZWQgaW1tdW5pdHksIGZ1cm5pc2hlZCBhIGxpc3Qgb2YgaGlzIGFzc29jaWF0ZXMuICBObyBzb29uZXIgaGFkIFRldWNydXMgZGVub3VuY2VkIHRoZW0gdGhhbiB0aGV5IGZsZWQgdGhlIGNvdW50cnkuICBUYWtlIHRoZSBsaXN0LCBwbGVhc2UsIGFuZCByZWFkIG91dCB0aGVpciBuYW1lcy4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iTmFtZXMiPjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk5hbWVzPC90aXRsZT5UaGUgZm9sbG93aW5nIHdlcmUgZGVub3VuY2VkIGJ5IFRldWNydXM6ICBQaGFlZHJ1cywgR25pcGhvbmlkZXMsIElzb25vbXVzLCBIZXBoYWVzdG9kb3J1cywgQ2VwaGlzb2RvcnVzLCBoaW1zZWxmLCBEaW9nbmV0dXMsIFNtaW5keXJpZGVzLCBQaGlsb2NyYXRlcywgQW50aXBob24sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk5vdCwgb2YgY291cnNlLCB0aGUgb3JhdG9yLjwvbm90ZT4gVGVpc2FyY2h1cywgUGFudGFjbGVzLjwvcXVvdGU+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TmFtZXM8L3RpdGxlPlRoZSBmb2xsb3dpbmcgd2VyZSBkZW5vdW5jZWQgYnkgVGV1Y3J1czogIFBoYWVkcnVzLCBHbmlwaG9uaWRlcywgSXNvbm9tdXMsIEhlcGhhZXN0b2RvcnVzLCBDZXBoaXNvZG9ydXMsIGhpbXNlbGYsIERpb2duZXR1cywgU21pbmR5cmlkZXMsIFBoaWxvY3JhdGVzLCBBbnRpcGhvbiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Tm90LCBvZiBjb3Vyc2UsIHRoZSBvcmF0b3IuPC9ub3RlPiBUZWlzYXJjaHVzLCBQYW50YWNsZXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkxldCBtZSByZW1pbmQgeW91LCBnZW50bGVtZW4sIHRoYXQgeW91IGFyZSByZWNlaXZpbmcgY29uZmlybWF0aW9uIG9mIHRoZXNlIGZ1cnRoZXIgZmFjdHMgaW4gZXZlcnkgZGV0YWlsLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIERpb2duZXR1cywgd2hvIGhhZCBmaXJzdC1oYW5kIGtub3dsZWRnZSwgaGFkIGxpc3RlbmVkIHRvIHRoZSByZWNpdGFsIGluIHNpbGVuY2UuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QSB0aGlyZCBpbmZvcm1hdGlvbiBmb2xsb3dlZC4gIEFjY29yZGluZyB0byB0aGUgd2lmZSBvZiBBbGNtYWVvbmlkZXPigJRzaGUgaGFkIHByZXZpb3VzbHkgYmVlbiBtYXJyaWVkIHRvIERhbW9uIGFuZCB3YXMgbmFtZWQgQWdhcmlzdGXigJRhY2NvcmRpbmcsIGFzIEkgc2F5LCB0byBBbGNtYWVvbmlkZXMnIHdpZmUsIEFsY2liaWFkZXMsIEF4aW9jaHVzLCBhbmQgQWRlaW1hbnR1cyBjZWxlYnJhdGVkIE15c3RlcmllcyBpbiBDaGFybWlkZXMnIGhvdXNlLCBuZXh0IHRvIHRoZSBPbHltcGlldW0uICBObyBzb29uZXIgaGFkIHRoZSBpbmZvcm1hdGlvbiBiZWVuIGxvZGdlZCB0aGFuIHRob3NlIGNvbmNlcm5lZCBsZWZ0IHRoZSBjb3VudHJ5IHRvIGEgbWFuLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmUgd2FzIHN0aWxsIG9uZSBtb3JlIGluZm9ybWF0aW9uLiAgQWNjb3JkaW5nIHRvIEx5ZHVzLCBhIHNsYXZlIG9mIFBoZXJlY2xlcyBvZiBUaGVtYWN1cywgTXlzdGVyaWVzIHdlcmUgY2VsZWJyYXRlZCBhdCB0aGUgaG91c2Ugb2YgaGlzIG1hc3RlciwgUGhlcmVjbGVzLCBhdCBUaGVtYWN1cy4gIEhlIGdhdmUgYSBsaXN0IG9mIHRob3NlIGNvbmNlcm5lZCwgaW5jbHVkaW5nIG15IGZhdGhlciBhbW9uZyB0aGVtOyAgbXkgZmF0aGVyIGhhZCBiZWVuIHByZXNlbnQsIHNvIEx5ZHVzIHNhaWQsIGJ1dCBhc2xlZXAgd2l0aCBoaXMgaGVhZCB1bmRlciBoaXMgY2xvYWsuICBTcGV1c2lwcHVzLCBvbmUgb2YgdGhlIG1lbWJlcnMgb2YgdGhlIENvdW5jaWwsIHdhcyBmb3IgaGFuZGluZyB0aGVtIGFsbCBvdmVyIHRvIHRoZSBwcm9wZXIgY291cnQ7ICB3aGVyZXVwb24gbXkgZmF0aGVyIGZ1cm5pc2hlZCBzdXJpZXRpZXMgYW5kIGJyb3VnaHQgYW4gYWN0aW9uIGFnYWluc3QgU3BldXNpcHB1cyBmb3IgbWFraW5nIGFuIGlsbGVnYWwgcHJvcG9zYWwuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkx5ZHVzIGdhdmUgaGlzIGluZm9ybWF0aW9uIGJlZm9yZSB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrLOv8+FzrvhvbU8L2ZvcmVpZ24+LiAgU3BldXNpcHB1cyBhdCBvbmNlIHByb3Bvc2VkIHRoYXQgdGhlIG9mZmVuZGVycyBuYW1lZCBiZSB0cmllZCBieSB0aGUgSGVsaWFlYSBpbiB0aGUgdXN1YWwgd2F5LiAgTGVvZ29yYXMgcHJvdGVzdGVkIGFnYWluc3QgaGlzIGluY2x1c29uIGluIHRoZSBsaXN0IO+8iGHvvIkgIGJlY2F1c2UgaGUgaGFkIG5ldmVyIGJlZW4gbmVhciBUaGVtYWN1cyBhbmQg77yIYu+8iSAgYmVjYXVzZSBldmVuIEx5ZHVzIGRpZCBub3QgZ28gc28gZmFyIGFzIHRvIGFzc2VydCB0aGF0IGhlIGhhZCBoYWQgYW55IHBhcnQgaW4gdGhlIGNlbGVicmF0aW9uLiAgSGUgdGhlbiBibG9ja2VkIFNwZXVzaXBwdXMnIHByb3Bvc2FsIGJ5IGEgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrPPgc6xz4bhvbQgz4DOsc+BzrHOveG9uc68z4nOvTwvZm9yZWlnbj4gd2hpY2ggaGFkIHRvIGJlIHNldHRsZWQgYmVmb3JlIHRoZSBwcm9wb3NhbCBjb3VsZCB0YWtlIGVmZmVjdC4gIFRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Os8+BzrHPhuG9tTwvZm9yZWlnbj4gY2FtZSBiZWZvcmUgdGhlIEhlbGlhZWEgaW4gdGhlIHVzdWFsIHdheTsgIGFuZCBMZW9nb3JhcyBvYnRhaW5lZCBhIHZlcmRpY3QgaW4gaGlzIGZhdm91ci4gIEhlIGhhZCwgb2YgY291cnNlLCB0byBmdXJuaXNoIHN1cmV0aWVzIGZvciBoaXMgb3duIGFwcGVhcmFuY2UgaW4gdGhlIGV2ZW50IG9mIGhpcyBsb3NpbmcgaGlzIGNhc2UgYWdhaW5zdCBTcGV1c2lwcHVzLjwvbm90ZT4gVGhlIGNhc2Ugd2FzIHRyaWVkIGJlZm9yZSBzaXggdGhvdXNhbmQgY2l0aXplbnMuPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrLOv8+FzrvhvbU8L2ZvcmVpZ24+LiAgU3BldXNpcHB1cyBhdCBvbmNlIHByb3Bvc2VkIHRoYXQgdGhlIG9mZmVuZGVycyBuYW1lZCBiZSB0cmllZCBieSB0aGUgSGVsaWFlYSBpbiB0aGUgdXN1YWwgd2F5LiAgTGVvZ29yYXMgcHJvdGVzdGVkIGFnYWluc3QgaGlzIGluY2x1c29uIGluIHRoZSBsaXN0IO+8iGHvvIkgIGJlY2F1c2UgaGUgaGFkIG5ldmVyIGJlZW4gbmVhciBUaGVtYWN1cyBhbmQg77yIYu+8iSAgYmVjYXVzZSBldmVuIEx5ZHVzIGRpZCBub3QgZ28gc28gZmFyIGFzIHRvIGFzc2VydCB0aGF0IGhlIGhhZCBoYWQgYW55IHBhcnQgaW4gdGhlIGNlbGVicmF0aW9uLiAgSGUgdGhlbiBibG9ja2VkIFNwZXVzaXBwdXMnIHByb3Bvc2FsIGJ5IGEgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrPPgc6xz4bhvbQgz4DOsc+BzrHOveG9uc68z4nOvTwvZm9yZWlnbj4gd2hpY2ggaGFkIHRvIGJlIHNldHRsZWQgYmVmb3JlIHRoZSBwcm9wb3NhbCBjb3VsZCB0YWtlIGVmZmVjdC4gIFRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Os8+BzrHPhuG9tTwvZm9yZWlnbj4gY2FtZSBiZWZvcmUgdGhlIEhlbGlhZWEgaW4gdGhlIHVzdWFsIHdheTsgIGFuZCBMZW9nb3JhcyBvYnRhaW5lZCBhIHZlcmRpY3QgaW4gaGlzIGZhdm91ci4gIEhlIGhhZCwgb2YgY291cnNlLCB0byBmdXJuaXNoIHN1cmV0aWVzIGZvciBoaXMgb3duIGFwcGVhcmFuY2UgaW4gdGhlIGV2ZW50IG9mIGhpcyBsb3NpbmcgaGlzIGNhc2UgYWdhaW5zdCBTcGV1c2lwcHVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGlzIHJlcHJlc2VudHMgdGhlIHdob2xlIG9mIHRoZSBIZWxpYXN0cyBmb3IgdGhlIHllYXIuICBBIGp1cnkgb2YgdGhpcyBzaXplIG9jY3VycyBub3doZXJlIGVsc2U7ICBidXQgdGhlcmUgYXJlIG5vIGdvb2QgZ3JvdW5kcyBmb3IgZG91YnRpbmcgQW5kb2NpZGVzJyBmaWd1cmVzLjwvbm90ZT4gVGhlcmUgd2VyZSBzaXggdGhvdXNhbmQganVyb3JzLCBJIHJlcGVhdDsgIHlldCBTcGV1c2lwcHVzIGZhaWxlZCB0byBnYWxsIHRoZSB2b3RlcyBvZiB0d28gaHVuZHJlZC4gIEkgbWF5IGFkZCB0aGF0IG15IGZhdGhlciB3YXMgaW5kdWNlZCB0byBzdGF5IGluIHRoZSBjb3VudHJ5IHBhcnRseSBieSB0aGUgZW50cmVhdGllcyBvZiBoaXMgcmVsYXRpdmVzIGluIGdlbmVyYWwsIGJ1dCBwcmluY2lwYWxseSBieSBteSBvd24uCjwvdHJhbnNsYXRpb24+"
translation['1.Narr.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5LaW5kbHkgY2FsbCBDYWxsaWFzIGFuZCBTdGVwaGFudXPigJR5ZXMsIGFuZCBjYWxsIFBoaWxpcHB1cyBhbmQgQWxleGlwcHVzLiAgUGhpbGlwcHVzIGFuZCBBbGV4aXBwdXMgYXJlIHJlbGF0ZWQgdG8gQWN1bWVudXMgYW5kIEF1dG9jcmF0b3IsIHdobyBmbGVkIGluIGNvbnNlcXVlbmNlIG9mIHRoZSBpbmZvcm1hdGlvbiBsb2RnZWQgYnkgTHlkdXM7ICBBdXRvY3JhdG9yIGlzIGEgbmVwaGV3IG9mIHRoZSBvbmUsIGFuZCBBY3VtZW51cyBpcyB0aGUgb3RoZXIncyB1bmNsZS4gIFRoZXkgaGF2ZSBsaXR0bGUgcmVhc29uIHRvIGxvdmUgdGhlIG1hbiB3aG8gZHJvdmUgdGhlIHRoZW0gZnJvbSB0aGlzIGNvdW50cnksIGFuZCB0aGV5IHNob3VsZCBhbHNvIGtub3cgYmV0dGVyIHRoYW4gYW55b25lIHdobyBpdCB3YXMgd2hvIGNhdXNlZCB0aGVpciBleGlsZSBpbiB0aGUgZmlyc3QgaW5zdGFuY2UuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4g77yIMe+8iSAgU3BldXNpcHB1cywgd2hvIGhhZCBpbml0aWF0ZWQgcHJvY2VlZGluZ3MgYWdhaW5zdCB0aGVtLCBhbmQg77yIMu+8iSAgTHlkdXMsIGZyb20gd2hvbSB0aGUgaW5mb3JtYXRpb24gaGFkIG9yaWdpbmF0ZWQuPC9ub3RlPiBGYWNlIHRoZSBjb3VydCwgZ2VudGxlbWVuLCBhbmQgc3RhdGUgd2hldGhlciBJIGhhdmUgYmVlbiB0ZWxsaW5nIHRoZSB0cnV0aC4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iV2l0bmVzc2VzIj48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5XaXRuZXNzZXM8L3RpdGxlPjwvcXVvdGU+Cjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPldpdG5lc3NlczwvdGl0bGU+PC90cmFuc2xhdGlvbj4="
translation['1.Narr.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHRoYXQgeW91IGhhdmUgaGVhcmQgdGhlIGZhY3RzLCBnZW50bGVtZW4sIGFuZCB0aGUgd2l0bmVzc2VzIGhhdmUgY29uZmlybWVkIHRoZW0gZm9yIHlvdSwgbGV0IG1lIHJlbWluZCB5b3Ugb2YgdGhlIHZlcnNpb24gb2YgdGhvc2UgZmFjdHMgd2hpY2ggdGhlIHByb3NlY3V0aW9uIGhhZCB0aGUgZWZmcm9udGVyeSB0byBnaXZl4oCUZm9yIGFmdGVyIGFsbCwgdGhlIHJpZ2h0IHdheSB0byBjb25kdWN0IGEgZGVmZW5jZSBpcyB0byByZWNhbGwgdGhlIHN0YXRlbWVudHMgb2YgdGhlIHByb3NlY3V0aW9uIGFuZCBkaXNwcm92ZSB0aGVtLiAgQWNjb3JkaW5nIHRvIHRoZSBwcm9zZWN1dGlvbiwgSSBteXNlbGYgZ2F2ZSBpbmZvcm1hdGlvbiBpbiB0aGUgbWF0dGVyIG9mIHRoZSBNeXN0ZXJpZXMgYW5kIGluY2x1ZGVkIG15IG93biBmYXRoZXIgaW4gbXkgbGlzdCBvZiB0aG9zZSBwcmVzZW50OiAgeWVzLCB0dXJuZWQgaW5mb3JtZXIgYWdhaW5zdCBteSBvd24gZmF0aGVyLiAgSSBjYW5ub3QgaW1hZ2luZSBhIG1vcmUgb3V0cmFnZW91cywgYSBtb3JlIGFib21pbmFibGUgc3VnZ2VzdGlvbi4gIE15IGZhdGhlciB3YXMgZGVub3VuY2VkIGJ5IFBoZXJlY2xlcycgc2xhdmUsIEx5ZHVzOiAgaXQgd2FzIEkgd2hvIHBlcnN1YWRlZCBoaW0gdG8gcmVtYWluIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBpbnN0ZWFkIG9mIGVzY2FwaW5nIGludG8gZXhpbGXigJRhbmQgaXQgd2FzIG9ubHkgYWZ0ZXIgbnVtYmVybGVzcyBlbnRyZWF0aWVzIGFuZCBieSBjbGluZ2luZyB0byBoaXMga25lZXMgdGhhdCBJIGRpZCBzby4KPC90cmFuc2xhdGlvbj4="
translation['1.Narr.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz5XaGF0LCBwcmF5LCB3YXMgSSBhYm91dCBpbiBpbmZvcm1pbmcgYWdhaW5zdCBteSBmYXRoZXIsIGFzIHdlIGFyZSBhc2tlZCB0byBiZWxpZXZlIHRoYXQgSSBkaWQsIHdoZW4gYXQgdGhlIHNhbWUgdGltZSBJIHdhcyBiZWdnaW5nIGhpbSB0byByZW1haW4gaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+4oCUYmVnZ2luZyBoaW0sIHRoYXQgaXMsIHRvIGxldCBtZSBiZSBndWlsdHkgb2YgdGhlIGNvbnNlcXVlbmNlcyB0byBoaW1zZWxmPyBBZ2Fpbiwgd2UgYXJlIHRvIHN1cHBvc2UgdGhhdCBteSBmYXRoZXIgaGltc2VsZiBjb25zZW50ZWQgdG8gZmFjZSBhIHRyaWFsIHdoaWNoIHdhcyBib3VuZCB0byBoYXZlIG9uZSBvciBvdGhlciBvZiB0d28gdGVycmlibGUgcmVzdWx0cyBmb3IgaGltOyAgaWYgbXkgaW5mb3JtYXRpb24gYWdhaW5zdCBoaW0gd2FzIGRlZW1lZCB0cnVlLCBoaXMgYmxvb2Qgd291bGQgYmUgdXBvbiBteSBoYW5kczogIGlmIGhlIGhpbXNlbGYgd2FzIGFjcXVpdHRlZCwgbWluZSB3b3VsZCBiZSB1cG9uIGhpczsgIGJlY2F1c2UgdGhlIGxhdyByYW4gdGhhdCB3aGVyZWFzIGFuIGluZm9ybWVyJ3MgY2xhaW0gdG8gaW1tdW5pdHkgc2hvdWxkIGJlIGFsbG93ZWQgaWYgaGlzIGluZm9ybWF0aW9uIHdlcmUgdHJ1ZSwgaGUgc2hvdWxkIGJlIHB1dCB0byBkZWF0aCwgaWYgaXQgd2VyZSBub3QuICBZZXQgaWYgdGhlcmUgaXMgb25lIHRoaW5nIG9mIHdoaWNoIHlvdSBhcmUgYWxsIGNlcnRhaW4sIGl0IGlzIHRoZSBmYWN0IHRoYXQgbXkgZmF0aGVyIGFuZCBJIGJvdGggZXNjYXBlZCB3aXRoIG91ciBsaXZlcy4gIFRoYXQgY291bGQgbm90IGhhdmUgaGFwcGVuZWQsIGlmIEkgaGFkIGluZm9ybWVkIGFnYWluc3QgbXkgZmF0aGVyOiAgZWl0aGVyIGhlIG9yIEkgd291bGQgaGF2ZSBoYWQgdG8gZGllLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBhZ2FpbiwgYXNzdW1lIHRoYXQgaGUgYWN0dWFsbHkgZGVzaXJlZCB0byBzdGF5LiAgRG8geW91IGltYWdpbmUgdGhhdCBoaXMgZnJpZW5kcyB3b3VsZCBoYXZlIGxldCBoaW0gZG8gc28/IFdvdWxkIHRoZXkgaGF2ZSBnb25lIGJhaWwgZm9yIGhpbT8gV291bGQgdGhleSBub3QgaGF2ZSB1cmdlZCBoaW0gdG8gY2hhbmdlIGhpcyBtaW5kPyBXb3VsZCB0aGV5IG5vdCBoYXZlIGJlZ2dlZCBoaW0gdG8gZmluZCBzb21lIHBsYWNlIG9mIHJlZnVnZSBhYnJvYWQsIHdoZXJlIGhlIHdvdWxkIGJlIG91dCBvZiBoYXJtJ3Mgd2F5IGhpbXNlbGYgYW5kIHdvdWxkIGF2b2lkIGNhdXNpbmcgbXkgZGVhdGggYWxzbz8KPC90cmFuc2xhdGlvbj4="
translation['1.Narr.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHRvIHJldHVybiB0byBmYWN0czogIHdoZW4gcHJvc2VjdXRpbmcgU3BldXNpcHB1cyBmb3IgbWFraW5nIGFuIGlsbGVnYWwgcHJvcG9zYWwsIG9uZSB0aGluZyB1cG9uIHdoaWNoIG15IGZhdGhlciBpbnNpc3RlZCByZXBlYXRlZGx5IHdhcyB0aGF0IGhlIGhhZCBuZXZlciB2aXNpdGVkIFBoZXJlY2xlcyBhdCBUaGVtYWN1cyBpbiBoaXMgbGlmZTsgIGFuZCBoZSBvZmZlcmVkIHRoZSBkZWZlbmNlIHRoZSBvcHBvcnR1bml0eSBvZiBleGFtaW5pbmcgaGlzIHNsYXZlcyB1bmRlciB0b3J0dXJlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkZvciB0aGUgdG9ydHVyaW5nIG9mIHNsYXZlcyBjZi4gcC4gIDcwLiAgbm90ZS48L25vdGU+OyAgdGhvc2Ugd2hvIHdlcmUgcmVhZHkgdG8gaGFuZCBvdmVyIHRoZWlyIHNsYXZlcywgaGUgc2FpZCwgb3VnaHQgbm90IHRvIG1lZXQgd2l0aCBhIHJlZnVzYWwgb2YgdGhlIHRlc3Qgd2hpY2ggdGhleSB3ZXJlIHByb3Bvc2luZywgd2hlbiB0aG9zZSB3aG8gd2VyZSBub3QgcmVhZHkgdG8gaGFuZCB0aGVtIG92ZXIgd2VyZSBmb3JjZWQgdG8gZG8gc28uICBZb3UgYWxsIGtub3cgbXkgZmF0aGVyJ3MgY2hhbGxlbmdlIHRvIGJlIGEgZmFjdC4gIE5vdyBpZiB0aGVyZSBpcyBhbnkgdHJ1dGggaW4gdGhlIHByb3NlY3V0aW9uJ3MgYXNzZXJ0aW9uLCB3aGF0IGhhZCBTcGV1c2lwcHVzIHRvIHJlcGx5IGJ1dDogIOKAnFdoeSB0YWxrIG9mIHNsYXZlcywgTGVvZ29yYXM/IEhhcyBub3QgeW91ciBzb24gaGVyZSBpbmZvcm1lZCBhZ2FpbnN0IHlvdT8gRG9lcyBub3QgaGUgc2F5IHRoYXQgeW91IHdlcmUgYXQgVGhlbWFjdXM/IEFuZG9jaWRlcywgcHJvdmUgeW91ciBmYXRoZXIgZ3VpbHR5LCBvciB5b3VyIGNoYW5jZSBvZiBhIHBhcmRvbiBpcyBnb25lLuKAnSBXYXMgdGhhdCBTcGV1c2lwcHVzJyBuYXR1cmFsIHJldG9ydCBvciBub3QsIGdlbnRsZW1lbj8KPC90cmFuc2xhdGlvbj4="
translation['1.Narr.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5JIGZvciBvbmUgdGhpbmsgc28uICBJbiBmYWN0LCBpZiBJIGV2ZXIgZW50ZXJlZCBhIGNvdXJ0LCBpZiBJIHdhcyBldmVyIG1lbnRpb25lZCBpbiBjb25uZXhpb24gd2l0aCB0aGUgYWZmYWlyLCBvciBpZiB0aGVyZSBpcyBhbnkgcmVjb3JkZWQgaW5mb3JtYXRpb24gb3IgbGlzdCBjb250YWluaW5nIG15IG5hbWUsIGxldCBhbG9uZSBhbnkgZm9yIHdoaWNoIEkgd2FzIG15c2VsZiByZXNwb25zaWJsZSwgYW55b25lIHdobyB3aXNoZXMgaXMgd2VsY29tZSB0byBzdGVwIHVwIGhlcmUgYW5kIHByb3ZlIGl0IGFnYWluc3QgbWUuICBGb3IgbXkgb3duIHBhcnQsIEkgaGF2ZSBuZXZlciBrbm93biBhbnlvbmUgdGVsbCBzbyBvdXRyYWdlb3VzIG9yIHNvIHVuY29udmluY2luZyBhIHN0b3J5LiAgQWxsIHRoYXQgd2FzIG5lY2Vzc2FyeSwgdGhleSBpbWFnaW5lZCwgd2FzIHN1ZmZpY2llbnQgZWZmcm9udGVyeSB0byBicmluZyBhIGNoYXJnZTsgIHRoZSBwb3NzaWJpbGl0eSBvZiB0aGVpciBiZWluZyByZWZ1dGVkIGRpZCBub3QgZGlzdHVyYiB0aGVtIGluIHRoZSBsZWFzdC4gIEJlIGNvbnNpc3RlbnQsIHRoZW4uCjwvdHJhbnNsYXRpb24+"
translation['1.Narr.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz5IYWQgdGhpcyBhY2N1c2F0aW9uIG9mIHRoZWlycyBiZWVuIHRydWUsIHlvdXIgYW5nZXIgd291bGQgaGF2ZSBmYWxsZW4gdXBvbiBtZSwgYW5kIHlvdSB3b3VsZCBoYXZlIGNvbnNpZGVyZWQgdGhlIHNldmVyZXN0IHBlbmFsdHkganVzdGlmaWVkLiAgU28gbm93IHRoYXQgeW91IHNlZSB0aGVtIHRvIGJlIGx5aW5nLCBJIGRlbWFuZCB0aGF0IHlvdSBsb29rIHVwb24gdGhlbSBpbnN0ZWFkIGFzIHNjb3VuZHJlbHPigJRhbmQgd2l0aCBnb29kIHJlYXNvbiB0b286ICBmb3IgaWYgdGhlIHdvcnN0IG9mIHRoZWlyIGNoYXJnZXMgYXJlIHNob3duIHRvIGJlIGNvbnNwaWN1b3VzbHkgZmFsc2UsIEkgc2hhbGwgaGFyZGx5IGZpbmQgaXQgZGlmZmljdWx0IHRvIHByb3ZlIHRoZSBzYW1lIG9mIHRob3NlIHdoaWNoIGFyZSBsZXNzIHNlcmlvdXMuCjwvdHJhbnNsYXRpb24+"
translation['1.Narr.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3VjaCwgdGhlbiwgd2VyZSB0aGUgaW5mb3JtYXRpb25zIGxvZGdlZCBpbiBjb25uZXhpb24gd2l0aCB0aGUgTXlzdGVyaWVzOyAgdGhleSB3ZXJlLCBhcyBJIHNheSwgZm91ciBpbiBudW1iZXIuICBJIGhhdmUgcmVhZCB5b3UgdGhlIG5hbWVzIG9mIHRob3NlIHdobyB3ZW50IGludG8gZXhpbGUgYWZ0ZXIgZWFjaCwgYW5kIHRoZSB3aXRuZXNzZXMgaGF2ZSBnaXZlbiB0aGVpciBldmlkZW5jZS4gIEkgc2hhbGwgbm93IGRvIHNvbWV0aGluZyBtb3JlIHRvIGNvbnZpbmNlIHlvdSwgZ2VudGxlbWVuLiAgT2YgdGhvc2Ugd2hvIHdlbnQgaW50byBleGlsZSBhcyBhIHJlc3VsdCBvZiB0aGUgcHJvZmFuYXRpb24gb2YgdGhlIE15c3Rlcmllcywgc29tZSBkaWVkIGFicm9hZDsgIGJ1dCBvdGhlcnMgaGF2ZSByZXR1cm5lZCBhbmQgYXJlIGxpdmluZyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4uICBUaGVzZSBsYXN0IGFyZSBwcmVzZW50IGluIGNvdXJ0IGF0IG15IHJlcXVlc3QuCjwvdHJhbnNsYXRpb24+"
translation['1.Narr.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz5Bbnkgb2YgdGhlbSB3aG8gd2lzaGVzIGlzIHdlbGNvbWUgdG8gcHJvdmUsIGluIHRoZSB0aW1lIG5vdyBhbGxvdHRlZCB0byBtZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHRpbWUgYWxsb3dlZCBmb3IgdGhlIHNwZWVjaGVzIG9mIHRoZSBwcm9zZWN1dGlvbiBhbmQgZGVmZW5jZSBpbiBhbiBBdGhlbmlhbiBjb3VydCBvZiBsYXcgd2FzIGxpbWl0ZWQuICBJdCB3YXMgbWVhc3VyZWQgYnkgYSB3YXRlci1jbG9jayDvvIg8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous67zrXPiOG9u860z4HOsTwvZm9yZWlnbj7vvIkgIHdoaWNoIHZhcmllZCBpbiBzaXplIGFjY29yZGluZyB0byB0aGUgbmF0dXJlIG9mIHRoZSBjYXNlLiAgVGhlIG91dGZsb3cgb2Ygd2F0ZXIgd2FzIHN0b3BwZWQgZHVyaW5nIHRoZSByZWFkaW5nIG9mIGRvY3VtZW50cywgZGVwb3NpdGlvbnMsIGV0Yy4gIEhlcmUgQW5kb2NpZGVzIG9mZmVycyB0byBzdGFuZCBhc2lkZSB3aXRoIHRoZSBjbG9jayBzdGlsbCBydW5uaW5nLjwvbm90ZT4gdGhhdCBJIHdhcyByZXNwb25zaWJsZSBmb3IgdGhlIGV4aWxlIG9mIGFueSBvZiB0aGVpciBudW1iZXIsIHRoYXQgSSBpbmZvcm1lZCBhZ2FpbnN0IGFueSBvZiB0aGVtLCBvciB0aGF0IHRoZSB2YXJpb3VzIGdyb3VwcyBkaWQgbm90IGdvIGludG8gZXhpbGUgaW4gY29uc2VxdWVuY2Ugb2YgdGhlIHBhcnRpY3VsYXIgaW5mb3JtYXRpb25zIHdoaWNoIEkgaGF2ZSBkZXNjcmliZWQgdG8geW91LiAgSWYgSSBhbSBzaG93biBub3QgdG8gYmUgc3BlYWtpbmcgdGhlIHRydXRoLCB5b3UgbWF5IHB1bmlzaCBtZSBhcyB5b3Ugd2lsbC4gIEkgc2hhbGwgbm93IGludGVycnVwdCBteSBkZWZlbmNlIGFuZCBnaXZlIHBsYWNlIHRvIGFueW9uZSB3aG8gd2lzaGVzIHRvIHN0ZXAgdXAgaGVyZS4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOu861z4jhvbvOtM+BzrE8L2ZvcmVpZ24+77yJICB3aGljaCB2YXJpZWQgaW4gc2l6ZSBhY2NvcmRpbmcgdG8gdGhlIG5hdHVyZSBvZiB0aGUgY2FzZS4gIFRoZSBvdXRmbG93IG9mIHdhdGVyIHdhcyBzdG9wcGVkIGR1cmluZyB0aGUgcmVhZGluZyBvZiBkb2N1bWVudHMsIGRlcG9zaXRpb25zLCBldGMuICBIZXJlIEFuZG9jaWRlcyBvZmZlcnMgdG8gc3RhbmQgYXNpZGUgd2l0aCB0aGUgY2xvY2sgc3RpbGwgcnVubmluZy48L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIG5vdywgZ2VudGxlbWVuLCB3aGF0IGZvbGxvd2VkPyBBZnRlciB0aGUgdmFyaW91cyBpbmZvcm1hdGlvbnMgaGFkIGJlZW4gbGFpZCwgdGhlIHF1ZXN0aW9uIG9mIHJld2FyZHMgYXJvc2U6ICBmb3IgQ2xlb255bXVzJyBkZWNyZWUgaGFkIG9mZmVyZWQgb25lIHRob3VzYW5kIGRyYWNobWFlLCBhbmQgUGVpc2FuZGVyJ3MgdGVuLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgcXVlc3Rpb24gb2Ygb2ZmZXJpbmcgcmV3YXJkcyBmb3IgaW5mb3JtYXRpb24gcHJvYmFibHkgYXJvc2Ugd2hlbiB0aGUgY29tbWlzc2lvbiBvZiBpbnF1aXJ5IHdhcyBiZWluZyBhcHBvaW50ZWQuICBBZnRlciBDbGVvbnltdXMnIHRob3VzYW5kIGRyYWNobWFlIHdhcyBmb3VuZCB0byBiZSBwcm9kdWNpbmcgaW5zdWZmaWNpZW50IHJlc3VsdHMsIGl0IHdvdWxkIGJlIHN1cHBsZW1lbnRlZCBieSB0aGUgbXVjaCBtb3JlIHN1YnN0YW50aWFsIHN1bSBwcm9wb3NlZCBieSBQZWlzYW5kZXIuICBGb3IgUGVpc2FuZGVyIHNlZSBwLjM2Niwgbm90ZS48L25vdGU+IENvbmZsaWN0aW5nIGNsYWltcyB3ZXJlIG1hZGUgYnkgdGhlIGluZm9ybWVycyBJIGhhdmUgbWVudGlvbmVkLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuICBBbmRyb21hY2h1cywgVGV1Y3J1cywgQWdhcmlzdGUsIGFuZCBMeWR1cy4gIFB5dGhvbmljdXMnIGNsYWltIHdhcyBiYXNlZCBvbiB0aGUgZmFjdCB0aGF0IGhlIGhhZCBiZWVuIG9yaWdpbmFsbHkgcmVzcG9uc2libGUgZm9yIGJyaW5naW5nIHRoZSBtYXR0ZXIgdG8gdGhlIG5vdGljZSBvZiB0aGUgQXNzZW1ibHkuICBBbmRyb2NsZXMgaXMgaGVyZSBtZW50aW9uZWQgZm9yIHRoZSBmaXJzdCB0aW1lLiAgRnJvbSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJUaHVjLiA4LjY1IiB2YWxpZD0ieWVzIj5UaHVjLiA4LjY1PC9iaWJsPiBhbmQgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGx1dC4gQWxjLiAxOSIgdmFsaWQ9InllcyI+UGx1dC4gQWxjLiAxOTwvYmlibD4gaXQgaXMgY2xlYXIgdGhhdCBoZSBwbGF5ZWQgYW4gaW1wb3J0YW50IHBhcnQgaW4gdGhlIGludmVzdGlnYXRpb25zOyAgcHJvYmFibHkgaXQgd2FzIHRocm91Z2ggaGlzIGFnZW5jeSB0aGF0IFRldWNydXMsIHRoZSBmaXJzdCBpbmZvcm1lciB0byBhcHByb2FjaCB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrLOv8+FzrvhvbU8L2ZvcmVpZ24+LCB3YXMgaW5kdWNlZCB0byBjb21lIGZvcndhcmQuIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9kc+A4b2yz4Egz4Thv4bPgiDOss6/z4XOu+G/hs+CPC9mb3JlaWduPiBoZXJlIGNhbm5vdCBwb3NzaWJseSBtZWFuIOKAnG9uIHRoZSBDb3VuY2lsJ3MgYmVoYWxm4oCdOyAgdGhlcmUgd2FzIG5vIHF1ZXN0b24gb2YgcmV3YXJkaW5nIHRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Oss6/z4XOu861z4XPhM6x4b23PC9mb3JlaWduPi4gIEl0IGlzIG1vcmUgbGlrZSDigJxpbiB2aWV3IG9mIHRoZSBDb3VuY2lsJ3MgcGFydCBpbiB0aGUgYWZmYWly4oCdOyAgaS5lLiBBbmRyb2NsZXMgbWFpbnRhaW5lZCB0aGF0IHRoZSBDb3VuY2lsIGhhZCBiZWVuIG9mIG1vcmUgaW1wb3J0YW5jZSB0aHJvdWdob3V0IHRoYW4gdGhlIEFzc2VtYmx5LCBhbmQgdGhhdCB0aGVyZWZvcmUsIGFzIHRoZSBwZXJzb24gcmVzcG9uc2libGUgZm9yIHRoZSBmaXJzdCBkaXNjbG9zdXJlcyBtYWRlIHRvIGl0LCBoZSBoaW1zZWxmIGRlc2VydmVkIHRoZSBwcmluY2lwYWwgcmV3YXJkLjwvbm90ZT4gYnkgUHl0aG9uaWN1cywgb24gdGhlIGdyb3VuZCB0aGF0IGhlIGhhZCBmaXJzdCBicm91Z2h0IHRoZSBtYXR0ZXIgYmVmb3JlIHRoZSBBc3NlbWJseSwgYW5kIGJ5IEFuZHJvY2xlcywgd2hvIHVyZ2VkIHRoZSBwYXJ0IHBsYXllZCBieSB0aGUgQ291bmNpbC4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iVGh1Yy4gOC42NSIgdmFsaWQ9InllcyI+VGh1Yy4gOC42NTwvYmlibD4gYW5kIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsdXQuIEFsYy4gMTkiIHZhbGlkPSJ5ZXMiPlBsdXQuIEFsYy4gMTk8L2JpYmw+IGl0IGlzIGNsZWFyIHRoYXQgaGUgcGxheWVkIGFuIGltcG9ydGFudCBwYXJ0IGluIHRoZSBpbnZlc3RpZ2F0aW9uczsgIHByb2JhYmx5IGl0IHdhcyB0aHJvdWdoIGhpcyBhZ2VuY3kgdGhhdCBUZXVjcnVzLCB0aGUgZmlyc3QgaW5mb3JtZXIgdG8gYXBwcm9hY2ggdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiwgd2FzIGluZHVjZWQgdG8gY29tZSBmb3J3YXJkLiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvZHPgOG9ss+BIM+E4b+Gz4IgzrLOv8+Fzrvhv4bPgjwvZm9yZWlnbj4gaGVyZSBjYW5ub3QgcG9zc2libHkgbWVhbiDigJxvbiB0aGUgQ291bmNpbCdzIGJlaGFsZuKAnTsgIHRoZXJlIHdhcyBubyBxdWVzdG9uIG9mIHJld2FyZGluZyB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrLOv8+FzrvOtc+Fz4TOseG9tzwvZm9yZWlnbj4uICBJdCBpcyBtb3JlIGxpa2Ug4oCcaW4gdmlldyBvZiB0aGUgQ291bmNpbCdzIHBhcnQgaW4gdGhlIGFmZmFpcuKAnTsgIGkuZS4gQW5kcm9jbGVzIG1haW50YWluZWQgdGhhdCB0aGUgQ291bmNpbCBoYWQgYmVlbiBvZiBtb3JlIGltcG9ydGFuY2UgdGhyb3VnaG91dCB0aGFuIHRoZSBBc3NlbWJseSwgYW5kIHRoYXQgdGhlcmVmb3JlLCBhcyB0aGUgcGVyc29uIHJlc3BvbnNpYmxlIGZvciB0aGUgZmlyc3QgZGlzY2xvc3VyZXMgbWFkZSB0byBpdCwgaGUgaGltc2VsZiBkZXNlcnZlZCB0aGUgcHJpbmNpcGFsIHJld2FyZC48L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgdGhlcmVmb3JlIHB1YmxpY2x5IHJlc29sdmVkIHRoYXQgc3VjaCBtZW1iZXJzIG9mIHRoZSBjb3VydCBvZiB0aGUgVGhlc21vdGhldGFlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gdGhlIEhlbGlhZWEuICBBcyB3aXRoIExlb2dvcmFzJyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Os8+BzrHPhuG9tCDPgM6xz4HOsc694b25zrzPic69PC9mb3JlaWduPiB0aGUganVyeSBpcyBhbiBleGNlcHRpb25hbGx5IGxhcmdlIG9uZSwgYWx0aG91Z2ggaGVyZSB0aGUgc3BlY2lhbCBjaXJjdW1zdGFuY2VzIG1ha2UgaXRzIHNpemUgbW9yZSBlYXNpbHkgaW50ZWxsaWdpYmxlLiAgVGhlIGNhc2Ugd291bGQgdGFrZSB0aGUgZm9ybSBvZiBhIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs60zrnOsc60zrnOus6xz4PhvbfOsTwvZm9yZWlnbj4uPC9ub3RlPiBhcyB3ZXJlIGluaXRpYXRlcyBzaG91bGQgYmUgcHJlc2VudGVkIHdpdGggdGhlIGluZm9ybWF0aW9ucyBvZiB0aGUgc2V2ZXJhbCBjbGFpbWFudHMgYW5kIGRlY2lkZSBiZXR3ZWVuIHRoZW0uICBBcyBhIHJlc3VsdCB0aGUgcHJpbmNpcGFsIHJld2FyZCB3YXMgdm90ZWQgdG8gQW5kcm9tYWNodXMsIHRoZSBzZWNvbmQgdG8gVGV1Y3J1czsgIGFuZCBhdCB0aGUgZmVzdGl2YWwgb2YgdGhlIFBhbmF0aGVuYWVhPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrPPgc6xz4bhvbQgz4DOsc+BzrHOveG9uc68z4nOvTwvZm9yZWlnbj4gdGhlIGp1cnkgaXMgYW4gZXhjZXB0aW9uYWxseSBsYXJnZSBvbmUsIGFsdGhvdWdoIGhlcmUgdGhlIHNwZWNpYWwgY2lyY3Vtc3RhbmNlcyBtYWtlIGl0cyBzaXplIG1vcmUgZWFzaWx5IGludGVsbGlnaWJsZS4gIFRoZSBjYXNlIHdvdWxkIHRha2UgdGhlIGZvcm0gb2YgYSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtM65zrHOtM65zrrOsc+D4b23zrE8L2ZvcmVpZ24+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgUGFuYXRoZW5hZWEgd2FzIGhlbGQgZXZlcnkgeWVhciwgYmVnaW5uaW5nIG9uIHRoZSAxN3RoIG9mIEhlY2F0b21iYWVvbiDvvIhKdWx5IDh0aO+8iSwgYW5kIHdpdGggZXh0cmEgcG9tcCBldmVyeSBmb3VyIHllYXJzLCB3aGVuIHRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgOG9s8+AzrvOv8+CPC9mb3JlaWduPiBvZiBBdGhlbmEgd2FzIGNhcnJpZWQgaW4gcHJvY2Vzc2lvbi48L25vdGU+IEFuZHJvbWFjaHVzIHJlY2VpdmVkIHRlbiB0aG91c2FuZCBkcmFjaG1hZSBhbmQgVGV1Y3J1cyBvbmUgdGhvdXNhbmQuICBLaW5kbHkgY2FsbCB3aXRuZXNzZXMgdG8gY29uZmlybSB0aGlzLjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+A4b2zz4DOu86/z4I8L2ZvcmVpZ24+IG9mIEF0aGVuYSB3YXMgY2FycmllZCBpbiBwcm9jZXNzaW9uLjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9IldpdG5lc3NlcyI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2l0bmVzc2VzPC90aXRsZT48L3F1b3RlPgo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5XaXRuZXNzZXM8L3RpdGxlPjwvdHJhbnNsYXRpb24+"
translation['1.Narr.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U28gbXVjaCBmb3IgdGhlIHByb2ZhbmF0aW9uIG9mIHRoZSBNeXN0ZXJpZXMsIGdlbnRsZW1lbiwgb24gd2hpY2ggdGhlIGluZm9ybWF0aW9uIGxvZGdlZCBhZ2FpbnN0IG1lIGlzIGJhc2VkIGFuZCB3aGljaCB5b3UgYXJlIGhlcmUgYXMgaW5pdGlhdGVzIHRvIGludmVzdGlnYXRlLiAgSSBoYXZlIHNob3duIHRoYXQgSSBoYXZlIGNvbW1pdHRlZCBubyBhY3Qgb2YgaW1waWV0eSwgdGhhdCBJIGhhdmUgbmV2ZXIgdHVybmVkIGluZm9ybWVyLCB0aGF0IEkgaGF2ZSBuZXZlciBhZG1pdHRlZCBndWlsdCwgYW5kIHRoYXQgSSBoYXZlIG5vdCBhIHNpbmdsZSBvZmZlbmNlIGFnYWluc3QgdGhlIFR3byBHb2RkZXNzZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+RGVtZXRlciBhbmQgS29yZSwgdGhlIGNlbnRyYWwgZmlndXJlcyBvZiB0aGUgRWxldXNpcy1jdWx0Ljwvbm90ZT4gdXBvbiBteSBjb25zY2llbmNlLCB3aGV0aGVyIHNlcmlvdXMgb3Igb3RoZXJ3aXNlLiAgQW5kIGl0IGlzIHZpdGFsbHkgaW1wb3J0YW50IGZvciBtZSB0byBjb252aW5jZSB5b3Ugb2YgdGhpczsgIGZvciB0aGUgc3RvcmllcyB0b2xkIHlvdSBieSB0aGUgcHJvc2VjdXRpb24sIHdobyB0cmVhdGVkIHlvdSB0byBzbyBzaHJpbGwgYSByZWNpdGFsIG9mIGJsb29kY3VyZGxpbmcgaG9ycm9ycywgd2l0aCB0aGVpciBkZXNjcmlwdGlvbnMgb2YgcGFzdCBvZmZlbmRlcnMgd2hvIGhhdmUgbWFkZSBtb2NrIG9mIHRoZSBUd28gR29kZGVzc2VzIGFuZCBvZiB0aGUgZmVhcmZ1bCBlbmQgdG8gd2hpY2ggdGhleSBoYXZlIGJlZW4gYnJvdWdodCBhcyBhIHB1bmlzaG1lbnTigJR3aGF0LCBJIGFzayB5b3UsIGhhdmUgc3VjaCB0YWxlcyBhbmQgc3VjaCBjcmltZXMgdG8gZG8gd2l0aCBtZT8KPC90cmFuc2xhdGlvbj4="
translation['1.Narr.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyBJLCBpbiBmYWN0LCB3aG8gYW0gbXVjaCBtb3JlIHRydWx5IHRoZSBhY2N1c2VyLCBhbmQgdGhleSB0aGUgYWNjdXNlZC4gIFRoZXkgaGF2ZSBiZWVuIGd1aWx0eSBvZiBpbXBpZXR5OyAgYW5kIHRoZXJlZm9yZSwgSSBtYWludGFpbiwgdGhleSBkZXNlcnZlIGRlYXRoLiAgSSwgb24gdGhlIG90aGVyIGhhbmQsIGhhdmUgZG9uZSBubyB3cm9uZywgYW5kIHRoZXJlZm9yZSBJIGRlc2VydmUgdG8gZ28gdW5oYXJtZWQuICBJdCB3b3VsZCBiZSBub3RoaW5nIGxlc3MgdGhhbiBtb25zdHJvdXMgdG8gdmVudCB1cG9uIG1lIHRoZSB3cmF0aCB3aGljaCB0aGUgbWlzZGVlZHMgb2Ygb3RoZXJzIGhhdmUgYXJvdXNlZCBpbiB5b3UsIG9yIHRvIGxldCB0aGUgbWFsaWNpb3VzIGF0dGFjayB0byB3aGljaCBJIGhhdmUgYmVlbiBzdWJqZWN0ZWQgd2VpZ2ggbW9yZSB3aXRoIHlvdSB0aGFuIHRoZSB0cnV0aCwgd2hlbiB5b3Uga25vdyB0aGF0IGl0IGlzIG15IGVuZW1pZXMgd2hvIGFyZSByZXNwb25zaWJsZSBmb3IgaXQuICBPYnZpb3VzbHkgYW55b25lIHdobyB3YXMgZ3VpbHR5IG9mIGFuIG9mZmVuY2Ugc3VjaCBhcyB0aGF0IHdpdGggd2hpY2ggd2UgYXJlIGNvbmNlcm5lZCBjb3VsZCBub3QgY2xlYXIgaGltc2VsZiBieSBkZW55aW5nIHRoYXQgaGUgaGFkIGNvbW1pdHRlZCBpdDogIGZvciB0aGUgc2NydXRpbnkgdG8gd2hpY2ggYSBkZWZlbmRhbnQncyBzdGF0ZW1lbnRzIGFyZSBzdWJqZWN0ZWQgaXMgZm9ybWlkYWJsZSBpbmRlZWQgd2hlbiB0aGUgY291cnQgYWxyZWFkeSBrbm93cyB0aGUgdHJ1dGguICBCdXQgdG8gbWUgdGhlIGlucXVpcnkgaW50byB0aGUgZmFjdHMgaXMgdGhlIHZlcnkgb3Bwb3NpdGUgb2YgZW1iYXJyYXNzaW5nOyAgSSBoYXZlIG5vIG5lZWQgdG8gcmVzb3J0IHRvIGVudHJlYXRpZXMgb3IgYXBwZWFscyBmb3IgbWVyY3kgdG8gZ2FpbiBhbiBhY3F1aXR0YWwgdXBvbiBhIGNoYXJnZSBzdWNoIGFzIHRoaXM6ICBJIGhhdmUgbWVyZWx5IHRvIHNob3cgdGhlIGFic3VyZGl0eSBvZiB0aGUgc3RhdGVtZW50cyBvZiBteSBhY2N1c2VycyBieSByZW1pbmRpbmcgeW91IG9mIHdoYXQgYWN0dWFsbHkgb2NjdXJyZWQuCjwvdHJhbnNsYXRpb24+"
translation['1.Narr.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgeW91IHlvdXJzZWx2ZXMgaGF2ZSB0YWtlbiBzb2xlbW4gb2F0aHMgYXMgdGhlIGp1cm9ycyB3aG8gYXJlIHRvIGRlY2lkZSBteSBmYXRlOiAgYXMganVyb3JzIHlvdSBoYXZlIHN3b3JuIHRvIHNlZSB0aGF0IHRoYXQgZGVjaXNpb24gaXMgYSBmYWlyIG9uZSwgdW5kZXIgcGFpbiBvZiBjYXVzaW5nIHRoZSBtb3N0IHRlcnJpYmxlIG9mIGN1cnNlcyB0byBmYWxsIHVwb24geW91cnNlbHZlcyBhbmQgeW91ciBjaGlsZHJlbjsgIGFuZCBhdCB0aGUgc2FtZSB0aW1lIHlvdSBhcmUgaGVyZSBhcyBpbml0aWF0ZXMgd2hvIGhhdmUgd2l0bmVzc2VkIHRoZSByaXRlcyBvZiB0aGUgVHdvIEdvZGRlc3NlcywgaW4gb3JkZXIgdGhhdCB5b3UgbWF5IHB1bmlzaCB0aG9zZSB3aG8gYXJlIGd1aWx0eSBvZiBpbXBpZXR5IGFuZCBwcm90ZWN0IHRob3NlIHdobyBhcmUgaW5ub2NlbnQuCjwvdHJhbnNsYXRpb24+"
translation['1.Narr.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5VbmRlcnN0YW5kLCB0aGVuLCB0aGF0IHRvIGNvbmRlbW4gdGhlIGlubm9jZW50IGZvciBpbXBpZXR5IGlzIG5vIGxlc3MgYW4gYWN0IG9mIGltcGlldHkgdGhhbiB0byBhY3F1aXQgdGhlIGd1aWx0eS4gIEluZGVlZCwgaW4gdGhlIG5hbWUgb2YgdGhlIFR3byBHb2RkZXNzZXMgSSByZXBlYXQgeWV0IG1vcmUgc3Rlcm5seSB0aGUgY2hhcmdlIGxhaWQgdXBvbiB5b3UgYnkgbXkgYWNjdXNlcnMsIGZvciB0aGUgc2FrZSBib3RoIG9mIHRoZSByaXRlcyB3aGljaCB5b3UgaGF2ZSB3aXRuZXNzZWQgYW5kIG9mIHRoZSBHcmVla3Mgd2hvIGFyZSBjb21pbmcgdG8gdGhpcyBjaXR5IGZvciB0aGUgZmVzdGl2YWwuICBJZiBJIGhhdmUgY29tbWl0dGVkIGFueSBhY3Qgb2YgaW1waWV0eSwgaWYgSSBoYXZlIGFkbWl0dGVkIGd1aWx0LCBpZiBJIGhhdmUgaW5mb3JtZWQgYWdhaW5zdCBhbm90aGVyLCBvciBpZiBhbm90aGVyIGhhcyBpbmZvcm1lZCBhZ2FpbnN0IG1lLCB0aGVuIHB1dCBtZSB0byBkZWF0aDsgIEkgYXNrIG5vIG1lcmN5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaWYgb24gdGhlIG90aGVyIGhhbmQsIEkgaGF2ZSBjb21taXR0ZWQgbm8gb2ZmZW5jZSwgYW5kIGNvbXBsZXRlbHkgc2F0aXNmeSB5b3Ugb2YgdGhlIGZhY3QsIHRoZW4gSSBhc2sgeW91IHRvIGxldCB0aGUgd2hvbGUgbmF0aW9uIHNlZSB0aGF0IEkgaGF2ZSBiZWVuIGJyb3VnaHQgdG8gdHJpYWwgd3JvbmdmdWxseS4gIFNob3VsZCBDZXBoaXNpdXMgaGVyZSwgd2hvIHdhcyByZXNwb25zaWJsZSBmb3IgdGhlIGluZm9ybWF0aW9uIGxhaWQgYWdhaW5zdCBtZSwgZmFpbCB0byBnYWluIG9uZS1maWZ0aCBvZiB5b3VyIHZvdGVzIGFuZCBzbyBsb3NlIGhpcyByaWdodHMgYXMgYSBjaXRpemVuLCBoZSBpcyBmb3JiaWRkZW4gdG8gc2V0IGZvb3Qgd2l0aGluIHRoZSBzYW5jdHVhcnkgb2YgdGhlIFR3byBHb2RkZXNzZXMgdW5kZXIgcGFpbiBvZiBkZWF0aC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHByb3NlY3V0b3Igd2hvIGZhaWxlZCB0byBnYWluIG9uZS1maWZ0aCBvZiB0aGUgdm90ZXMgb2YgdGhlIGp1cnkgd2FzIGNvbmRlbW5lZCB0byBhIGZpbmUgb2Ygb25lIHRob3VzYW5kIGRyYWNobWFlIGFuZCBkZWJhcnJlZCBmcm9tIGJyaW5naW5nIGEgc2ltaWxhciBhY3Rpb24gaW4gdGhlIGZ1dHVyZS4gIEluIGEgY2FzZSBvZiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDPg861zrLOteG9t86xPC9mb3JlaWduPiwgc3VjaCBhcyB0aGUgcHJlc2VudCwgaGUgd2FzIGZ1cnRoZXIgZGVwcml2ZWQgb2YgdGhlIHJpZ2h0IG9mIGVudGVyaW5nIHRoZSB0ZW1wbGVzIG9mIHRoZSBnb2RzIGFnYWluc3Qgd2hvbSB0aGUgYWxsZWdlZCBhY3Qgb2YgaW1waWV0eSBoYWQgYmVlbiBjb21taXR0ZWQuICBUaHVzIENlcGhpc2l1cyBzdGFuZHMgdG8gc3VmZmVyIHBhcnRpYWwgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAz4TOuc684b23zrE8L2ZvcmVpZ24+OyAgdGhlIGZpbmUgd2lsbCBub3QgdHJvdWJsZSBoaW0sIGFzIENhbGxpYXMgaGFzIGluZGVtbmlmaWVkIGhpbSBpbiBhZHZhbmNlIO+8iDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjEyMSIgdmFsaWQ9InllcyI+QW5kb2MuIDEuMTIxPC9iaWJsPu+8iS48L25vdGU+IEFuZCBub3csIGlmIHlvdSB0aGluayBteSBkZWZlbmNlIHNhdGlzZmFjdG9yeSB1cCB0byB0aGUgcHJlc2VudCwgc2hvdyB5b3VyIGFwcHJvdmFsLCBzbyB0aGF0IEkgbWF5IHByZXNlbnQgd2hhdCByZW1haW5zIHdpdGggaW5jcmVhc2VkIGNvbmZpZGVuY2UuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gM+DzrXOss614b23zrE8L2ZvcmVpZ24+LCBzdWNoIGFzIHRoZSBwcmVzZW50LCBoZSB3YXMgZnVydGhlciBkZXByaXZlZCBvZiB0aGUgcmlnaHQgb2YgZW50ZXJpbmcgdGhlIHRlbXBsZXMgb2YgdGhlIGdvZHMgYWdhaW5zdCB3aG9tIHRoZSBhbGxlZ2VkIGFjdCBvZiBpbXBpZXR5IGhhZCBiZWVuIGNvbW1pdHRlZC4gIFRodXMgQ2VwaGlzaXVzIHN0YW5kcyB0byBzdWZmZXIgcGFydGlhbCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDPhM65zrzhvbfOsTwvZm9yZWlnbj47ICB0aGUgZmluZSB3aWxsIG5vdCB0cm91YmxlIGhpbSwgYXMgQ2FsbGlhcyBoYXMgaW5kZW1uaWZpZWQgaGltIGluIGFkdmFuY2Ug77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMTIxIiB2YWxpZD0ieWVzIj5BbmRvYy4gMS4xMjE8L2JpYmw+77yJLjwvdHJhbnNsYXRpb24+"
translation['1.Narr.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TmV4dCBjb21lcyB0aGUgbXV0aWxhdGlvbiBvZiB0aGUgaW1hZ2VzIGFuZCB0aGUgZGVudW5jaWF0aW9uIG9mIHRob3NlIHJlc3BvbnNpYmxlLiAgSSB3aWxsIGRvIGFzIEkgcHJvbWlzZWQgYW5kIHRlbGwgeW91IHRoZSB3aG9sZSBzdG9yeSBmcm9tIHRoZSBiZWdpbm5pbmcuICBPbiBoaXMgcmV0dXJuIGZyb20gTWVnYXJhIFRldWNydXMgd2FzIGd1YXJhbnRlZWQgaGlzIGltbXVuaXR5LiAgSGVyZXVwb24sIGJlc2lkZXMgY29tbXVuaWNhdGluZyB3aGF0IGhlIGtuZXcgYWJvdXQgdGhlIE15c3RlcmllcywgaGUgZ2F2ZSBhIGxpc3Qgb2YgZWlnaHRlZW4gb2YgdGhvc2UgcmVzcG9uc2libGUgZm9yIHRoZSBtdXRpbGF0aW9uIG9mIHRoZSBpbWFnZXMuICBPZiB0aGVzZSBlaWdodGVlbiwgYSBudW1iZXIgZmxlZCB0aGUgY291bnRyeSB1cG9uIGJlaW5nIGRlbm91bmNlZDsgIHRoZSByZW1haW5kZXIgd2VyZSBhcnJlc3RlZCBhbmQgZXhlY3V0ZWQgdXBvbiB0aGUgaW5mb3JtYXRpb24gbG9kZ2VkIGJ5IFRldWNydXMuICBLaW5kbHkgcmVhZCB0aGVpciBuYW1lcy4KPC90cmFuc2xhdGlvbj4="
translation['1.Narr.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJOYW1lcyI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TmFtZXM8L3RpdGxlPkluIHRoZSBtYXR0ZXIgb2YgdGhlIEhlcm1hZSBUZXVjcnVzIGRlbm91bmNlZDogIEV1Y3RlbW9uLCBHbGF1Y2lwcHVzLCBFdXJ5bWFjaHVzLCBQb2x5ZXVjdHVzLCBQbGF0bywgQW50aWRvcnVzLCBDaGFyaXBwdXMsIFRoZW9kb3J1cywgQWxjaXN0aGVuZXMsIE1lbmVzdHJhdHVzLCBFcnl4aW1hY2h1cywgRXVwaGlsZXR1cywgRXVyeWRhbWFzLCBQaGVyZWNsZXMsIE1lbGV0dXMsIFRpbWFudGhlcywgQXJjaGlkYW11cywgVGVsZW5pY3VzLjwvcXVvdGU+IDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPk5hbWVzPC90aXRsZT5JbiB0aGUgbWF0dGVyIG9mIHRoZSBIZXJtYWUgVGV1Y3J1cyBkZW5vdW5jZWQ6ICBFdWN0ZW1vbiwgR2xhdWNpcHB1cywgRXVyeW1hY2h1cywgUG9seWV1Y3R1cywgUGxhdG8sIEFudGlkb3J1cywgQ2hhcmlwcHVzLCBUaGVvZG9ydXMsIEFsY2lzdGhlbmVzLCBNZW5lc3RyYXR1cywgRXJ5eGltYWNodXMsIEV1cGhpbGV0dXMsIEV1cnlkYW1hcywgUGhlcmVjbGVzLCBNZWxldHVzLCBUaW1hbnRoZXMsIEFyY2hpZGFtdXMsIFRlbGVuaWN1cy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QSBudW1iZXIgb2YgdGhlc2UgbWVuIGhhdmUgcmV0dXJuZWQgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGFuZCBhcmUgcHJlc2VudCBpbiBjb3VydCwgYXMgYXJlIHNldmVyYWwgb2YgdGhlIHJlbGF0aXZlcyBvZiB0aG9zZSB3aG8gaGF2ZSBkaWVkLiAgQW55IG9mIHRoZW0gaXMgd2VsY29tZSB0byBzdGVwIHVwIGhlcmUsIGR1cmluZyB0aGUgdGltZSBub3cgYWxsb3R0ZWQgbWUsIGFuZCBwcm92ZSBhZ2FpbnN0IG1lIHRoYXQgSSBjYXVzZWQgZWl0aGVyIHRoZSBleGlsZSBvciB0aGUgZGVhdGggb2YgYSBzaW5nbGUgb25lLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIG5vdyBmb3Igd2hhdCBmb2xsb3dlZC4gIFBlaXNhbmRlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DYW1lIGludG8gcHJvbWluZW5jZSBvbmNlIG1vcmUgZHVyaW5nIHRoZSBzdHJ1Z2dsZXMgb2YgNDEyLTQxMS4gIEJ5IHRoZSBlbmQgb2YgNDEyIGhlIGhhZCBpZGVudGlmaWVkIGhpbXNlbGYgd2l0aCB0aGUgb2xpZ2FyY2hpYyBjYXVzZSwgYW5kIHdhcyBhY3RpdmUgaW4gdHJ5aW5nIHRvIHByb2N1cmUgdGhlIHJldHVybiBvZiBBbGNpYmlhZGVzLiAgSGUgd2FzIGxhcmdlbHkgcmVzcG9uc2libGUgZm9yIHRoZSBpbnN0YWxsYXRpb24gb2YgdGhlIEZvdXIgSHVuZHJlZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gaW4gNDExLCBhbmQgZGlkIGhpcyB1dG1vc3QgdG8gaGF2ZSBBbmRvY2lkZXMgcHV0IHRvIGRlYXRoIHdoZW4gaGUgYXR0ZW1wdGVkIHRvIHJldHVybiB0byBBdGhlbnMgZHVyaW5nIHRoYXQgeWVhciDvvIhjZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDIuMTMiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAyLjEzLTE1PC9iaWJsPu+8iS4gIEFmdGVyIHRoZSBmYWxsIG9mIHRoZSBGb3VyIEh1bmRyZWQgUGVpc2FuZGVyIGZsZWQgdG8gRGVjZWxlYTsgIGhlIHdhcyBjb25kZW1uZWQgdG8gZGVhdGggaW4gYWJzZW50aWEgYW5kIGhpcyBwcm9wZXJ0eSB3YXMgY29uZmlzY2F0ZWQuICBOb3RoaW5nIG1vcmUgaXMgaGVhcmQgb2YgaGltLiAgVGhyb3VnaG91dCBoZSB3YXMgYSBiaXR0ZXIgcGVyc29uYWwgZW5lbXkgb2YgQW5kb2NpZGVzLjwvbm90ZT4gYW5kIENoYXJpY2xlcyw8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gaW4gNDExLCBhbmQgZGlkIGhpcyB1dG1vc3QgdG8gaGF2ZSBBbmRvY2lkZXMgcHV0IHRvIGRlYXRoIHdoZW4gaGUgYXR0ZW1wdGVkIHRvIHJldHVybiB0byBBdGhlbnMgZHVyaW5nIHRoYXQgeWVhciDvvIhjZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDIuMTMiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAyLjEzLTE1PC9iaWJsPu+8iS4gIEFmdGVyIHRoZSBmYWxsIG9mIHRoZSBGb3VyIEh1bmRyZWQgUGVpc2FuZGVyIGZsZWQgdG8gRGVjZWxlYTsgIGhlIHdhcyBjb25kZW1uZWQgdG8gZGVhdGggaW4gYWJzZW50aWEgYW5kIGhpcyBwcm9wZXJ0eSB3YXMgY29uZmlzY2F0ZWQuICBOb3RoaW5nIG1vcmUgaXMgaGVhcmQgb2YgaGltLiAgVGhyb3VnaG91dCBoZSB3YXMgYSBiaXR0ZXIgcGVyc29uYWwgZW5lbXkgb2YgQW5kb2NpZGVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Bbm90aGVyIHR1cm5jb2F0LCB3aG8gc3RhcnRlZCBhcyBhbiBleHRyZW1lIHJhZGljYWwgYW5kIHRoZW4gYmVjYW1lIGEgbWVtYmVyIG9mIHRoZSBGb3VyIEh1bmRyZWQuICBMaWtlIFBlaXNhbmRlciwgaGUgZXNjYXBlZCB0byBEZWNlbGVhIGFmdGVyIHRoZWlyIGNvbGxhcHNlOyAgYnV0IGhlIHN1Y2NlZWRlZCBpbiBlZmZlY3RpbmcgaGlzIHJldHVybiBpbiA0MDQgd2hlbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gb3JkZXJlZCB0aGUgcmVzdG9yYXRpb24gb2YgZXhpbGVzLiAgSGUgYmVjYW1lIGEgbWVtYmVyIG9mIHRoZSBUaGlydHksIGFuZCB3YXMgcmVzcG9uc2libGUgZm9yIHNvbWUgb2YgdGhlaXIgd29yc3QgZXhjZXNzZXMuICBBZnRlciB0aGVpciBmYWxsIG5vdGhpbmcgbW9yZSBpcyBoZWFyZCBvZiBoaW0uICBGb3IgYSBza2V0Y2ggb2YgaGlzIGNvbmR1Y3QgYXQgdGhpcyBsYXRlciBwZXJpb2Qgc2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjEwMSIgdmFsaWQ9InllcyI+QW5kb2MuIDEuMTAxPC9iaWJsPi48L25vdGU+IHdobyB3ZXJlIHJlZ2FyZGVkIGluIHRob3NlIGRheXMgYXMgdGhlIG1vc3QgZmVydmVudCBvZiBkZW1vY3JhdHMsIHdlcmUgbWVtYmVycyBvZiB0aGUgY29tbWlzc2lvbiBvZiBpbnF1aXJ5LiAgVGhlc2UgdHdvIG1haW50YWluZWQgdGhhdCB0aGUgb3V0cmFnZSB3YXMgbm90IHRoZSB3b3JrIG9mIGEgc21hbGwgZ3JvdXAgb2YgY3JpbWluYWxzLCBidXQgYW4gb3JnYW5pemVkIGF0dGVtcHQgdG8gb3ZlcnRocm93IHRoZSBwb3B1bGFyIGdvdmVybm1lbnQ6ICBhbmQgdGhhdCB0aGVyZWZvcmUgaW5xdWlyaWVzIG91Z2h0IHN0aWxsIHRvIGJlIHB1cnN1ZWQgYXMgdmlnb3JvdXNseSBhcyBldmVyLiAgQXMgYSByZXN1bHQsIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiBvcmRlcmVkIHRoZSByZXN0b3JhdGlvbiBvZiBleGlsZXMuICBIZSBiZWNhbWUgYSBtZW1iZXIgb2YgdGhlIFRoaXJ0eSwgYW5kIHdhcyByZXNwb25zaWJsZSBmb3Igc29tZSBvZiB0aGVpciB3b3JzdCBleGNlc3Nlcy4gIEFmdGVyIHRoZWlyIGZhbGwgbm90aGluZyBtb3JlIGlzIGhlYXJkIG9mIGhpbS4gIEZvciBhIHNrZXRjaCBvZiBoaXMgY29uZHVjdCBhdCB0aGlzIGxhdGVyIHBlcmlvZCBzZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMTAxIiB2YWxpZD0ieWVzIj5BbmRvYy4gMS4xMDE8L2JpYmw+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiByZWFjaGVkIHN1Y2ggYSBzdGF0ZSB0aGF0IHRoZSBsb3dlcmluZyBvZiB0aGUgZmxhZywgYnkgdGhlIEhlcmFsZCwgd2hlbiBzdW1tb25pZyBhIG1lZXRpbmcgb2YgdGhlIENvdW5jaWwsIHdhcyBxdWl0ZSBhcyBtdWNoIGEgc2lnbmFsIGZvciB0aGUgY2l0aXplbnMgdG8gaHVycnkgZnJvbSB0aGUgQWdvcmEsIGVhY2ggaW4gdGVycm9yIG9mIGFycmVzdCwgYXMgaXQgd2FzIGZvciB0aGUgQ291bmNpbCB0byBwcm9jZWVkIHRvIHRoZSBDb3VuY2lsLWNoYW1iZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZXJlIGlzIHNvbWUgZG91YnQgYWJvdXQgdGhlIG1lYW5pbmcgb2YgdGhpcyBzdGF0ZW1lbnQuICDvvIhh77yJICBBY2NvcmRpbmcgdG8gU3VpZGFzLCBhIGZsYWcgd2FzIGhvaXN0ZWQgaW4gdGhlIEFnb3JhIGJlZm9yZSBtZWV0aW5ncyBvZiB0aGUgRWNjbGVzaWEgYW5hZCBsb3dlcmVkIHdoZW4gdGhleSB3ZXJlIGNvbmNsdWRlZC4gIElmIHRoaXMgaXMgdGhlIGZsYWcgcmVmZXJyZWQgdG8gaGVyZSwgdGhlIG1lZXRpbmcgb2YgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiBpcyB0aGUgbWVldGluZyBoZWxkIGltbWVkaWF0ZWx5IGFmdGVyIHRoZSBhZGpvdXJubWVudCBvZiB0aGUgRWNjbGVzaWEuICBUaGUgQWdvcmEgd291bGQgdGhlbiBiZSB0aHJvbmdlZCB3aXRoIGNpdGl6ZW5zIGNvbWluZyBmcm9tIHRoZSBQbnl4LiAg77yIYu+8iSAgUG9zc2libHkgYSBmbGFnIHdhcyBmbG93biBmcm9tIHRoZSByb29mIG9mIHRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Oss6/z4XOu861z4XPhOG9tc+BzrnOv869PC9mb3JlaWduPiBhbmQgdGFrZW4gZG93biB3aGVuIHRoZSBjb3VuY2lsIHdhcyBzaXR0aW5nLiAgVGhlcmUgaXMgbm8gZXZpZGVuY2UgZm9yIHRoaXMsIGhvd2V2ZXI7ICBhbmQgaXQgaXMgYSBwb3NzaWJsZSBvYmplY3Rpb24gdGhhdCB0aGlzIGxvd2VyaW5nIG9mIHRoZSBmbGFnIGR1cmluZyBhIG1lZXRpbmcgaXMgcHJlY2lzZWx5IHRoZSBvcHBvc2l0ZSBvZiB0aGUgY3VzdG9tIGZvbGxvd2VkIGluIHRoZSBjYXNlIG9mIHRoZSBFY2NsZXNpYS4gIElmIHRoZSBmaXJzdCBleHBsYW5hdGlvbiBjYW4gYmUgYWNjZXB0ZWQgd2UgbXVzdCBhc3N1bWUgdGhhdCBBbmRvY2lkZXMgaXMgcmVmZXJyaW5nIG9ubHkgdG8gdGhvc2UgbWVldGluZ3Mgb2YgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiB3aGljaCBvY2N1cnJlZCBhZnRlciBhIHNpdHRpbmcgb2YgdGhlIEVjY2xlc2lhOyAgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiBpbiBmYWN0IG1ldCBkYWlseS48L25vdGU+Cjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiBpcyB0aGUgbWVldGluZyBoZWxkIGltbWVkaWF0ZWx5IGFmdGVyIHRoZSBhZGpvdXJubWVudCBvZiB0aGUgRWNjbGVzaWEuICBUaGUgQWdvcmEgd291bGQgdGhlbiBiZSB0aHJvbmdlZCB3aXRoIGNpdGl6ZW5zIGNvbWluZyBmcm9tIHRoZSBQbnl4LiAg77yIYu+8iSAgUG9zc2libHkgYSBmbGFnIHdhcyBmbG93biBmcm9tIHRoZSByb29mIG9mIHRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Oss6/z4XOu861z4XPhOG9tc+BzrnOv869PC9mb3JlaWduPiBhbmQgdGFrZW4gZG93biB3aGVuIHRoZSBjb3VuY2lsIHdhcyBzaXR0aW5nLiAgVGhlcmUgaXMgbm8gZXZpZGVuY2UgZm9yIHRoaXMsIGhvd2V2ZXI7ICBhbmQgaXQgaXMgYSBwb3NzaWJsZSBvYmplY3Rpb24gdGhhdCB0aGlzIGxvd2VyaW5nIG9mIHRoZSBmbGFnIGR1cmluZyBhIG1lZXRpbmcgaXMgcHJlY2lzZWx5IHRoZSBvcHBvc2l0ZSBvZiB0aGUgY3VzdG9tIGZvbGxvd2VkIGluIHRoZSBjYXNlIG9mIHRoZSBFY2NsZXNpYS4gIElmIHRoZSBmaXJzdCBleHBsYW5hdGlvbiBjYW4gYmUgYWNjZXB0ZWQgd2UgbXVzdCBhc3N1bWUgdGhhdCBBbmRvY2lkZXMgaXMgcmVmZXJyaW5nIG9ubHkgdG8gdGhvc2UgbWVldGluZ3Mgb2YgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiB3aGljaCBvY2N1cnJlZCBhZnRlciBhIHNpdHRpbmcgb2YgdGhlIEVjY2xlc2lhOyAgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiBpbiBmYWN0IG1ldCBkYWlseS48L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGdlbmVyYWwgZGlzdHJlc3MgZW5jb3VyYWdlZCBEaW9jbGVpZGVzIHRvIGJyaW5nIGFuIGltcGVhY2htZW50IGJlZm9yZSB0aGUgQ291bmNpbC4gIEhlIGNsYWltZWQgdGhhdCBoZSBrbmV3IHdobyBoYWQgbXV0aWxhdGVkIHRoZSBIZXJtYWUsIGFuZCBnYXZlIHRoZWlyIG51bWJlciBhcyByb3VnaGx5IHRocmVlIGh1bmRyZWQuICBIZSB0aGVuIHdlbnQgb24gdG8gZXhwbGFpbiBob3cgaGUgaGFkIGNvbWUgdG8gd2l0bmVzcyB0aGUgb3V0cmFnZS4gIE5vdyBJIHdhbnQgeW91IHRvIHRoaW5rIGNhcmVmdWxseSBoZXJlLCBnZW50bGVtZW47ICB0cnkgdG8gcmVtZW1iZXIgd2hldGhlciBJIGFtIHRlbGxpbmcgdGhlIHRydXRoLCBhbmQgaW5mb3JtIHlvdXIgY29tcGFuaW9uczsgIGZvciBpdCB3YXMgYmVmb3JlIHlvdSB0aGF0IERpb2NsZWlkZXMgc3RhdGVkIGhpcyBjYXNlLCBhbmQgeW91IGFyZSBteSB3aXRuZXNzZXMgb2Ygd2hhdCBvY2N1cnJlZC4KPC90cmFuc2xhdGlvbj4="
translation['1.Narr.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RGlvY2xlaWRlcycgdGFsZSB3YXMgdGhhdCBoZSBoYWQgaGFkIHRvIGZldGNoIHRoZSBlYXJuaW5ncyBvZiBhIHNsYXZlIG9mIGhpcyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMDg5NSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEwODk1Ij5MYXVyaXVtPC9wbGFjZU5hbWU+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgbWluZXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTA4OTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMDg5NSI+TGF1cml1bTwvcGxhY2VOYW1lPiBpbiBTLiAgQXR0aWNhIHdlcmUgbGVhc2VkIGJ5IHRoZSBzdGF0ZSB0byBwcml2YXRlIGluZGl2aWR1YWxzLiAgVGhlc2UgaW4gdGhlaXIgdHVybiBoaXJlZCBzbGF2ZXMgdG8gd29yayB0aGVtLCBpZiB0aGV5IGhhZCBub3QgZW5vdWdoIG9mIHRoZWlyIG93bi4gIFRoZSBzbGF2ZSdzIGVhcm5pbmdzIHdlcmUgcGFpZCB0byBoaXMgbWFzdGVyLjwvbm90ZT4gSGUgYXJvc2UgYXQgYW4gZWFybHkgaG91ciwgbWlzdGFraW5nIHRoZSB0aW1lLCBhbmQgc3RhcnRlZCBvZmYgb24gaGlzIHdhbGsgYnkgdGhlIGxpZ2h0IG9mIGEgZnVJbCBtb29uLiAgQXMgaGUgd2FzIHBhc3NpbmcgdGhlIGdhdGV3YXkgb2YgdGhlIHRoZWF0cmUgb2YgRGlvbnlzdXMsIGhlIG5vdGljZWQgYSBsYXJnZSBib2R5IG9mIG1lbiBjb21pbmcgZG93biBpbnRvIHRoZSBvcmNoZXN0cmEgZnJvbSB0aGUgT2RldW0uPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTA4OTUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMDg5NSI+TGF1cml1bTwvcGxhY2VOYW1lPiBpbiBTLiAgQXR0aWNhIHdlcmUgbGVhc2VkIGJ5IHRoZSBzdGF0ZSB0byBwcml2YXRlIGluZGl2aWR1YWxzLiAgVGhlc2UgaW4gdGhlaXIgdHVybiBoaXJlZCBzbGF2ZXMgdG8gd29yayB0aGVtLCBpZiB0aGV5IGhhZCBub3QgZW5vdWdoIG9mIHRoZWlyIG93bi4gIFRoZSBzbGF2ZSdzIGVhcm5pbmdzIHdlcmUgcGFpZCB0byBoaXMgbWFzdGVyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgdGhlYXRyZSBvZiBEaW9ueXN1cyBsYXkgb24gdGhlIFMuRS4gIHNsb3BlcyBvZiB0aGUgQWNyb3BvbGlzLiAgQWRqb2luaW5nIGl0IHdhcyB0aGUgT2RldW0gb2YgUGVyaWNsZXMsIGEgcmVjdGFuZ3VsYXIgaGFsbCB3aXRoIGEgY29uaWNhbCByb29mLCB0aGUgcmVtYWlucyBvZiB3aGljaCBoYXZlIGJlZW4gYnJvdWdodCB0byBsaWdodCBpbiByZWNlbnQgeWVhcnM7ICBpdCB3YXMgdXNlZCBmb3IgbXVzaWNhbCBmZXN0aXZhbHMuPC9ub3RlPiBJbiBhbGFybSwgaGUgd2l0aGRyZXcgaW50byB0aGUgc2hhZG93IGFuZCBjcm91Y2hlZCBkb3duIGJldHdlZW4gdGhlIGNvbHVtbiBhbmQgdGhlIHBlZGVzdGFsIHdpdGggdGhlIGJyb256ZSBzdGF0dWUgb2YgdGhlIGdlbmVyYWwgdXBvbiBpdC4gIEhlIHRoZW4gc2F3IHNvbWUgdGhyZWUgaHVuZHJlZCBtZW4gc3RhbmRpbmcgYWJvdXQgaW4gZ3JvdXBzIG9mIGZpdmUgYW5kIHRlbiBhbmQsIGluIHNvbWUgY2FzZXMsIHR3ZW50eS4gIEhlIHJlY29nbml6ZWQgdGhlIGZhY2VzIG9mIHRoZSBtYWpvcml0eSwgYXMgaGUgY291bGQgc2VlIHRoZW0gaW4gdGhlIG1vb25saWdodC4KPC90cmFuc2xhdGlvbj4="
translation['1.Narr.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz5Ob3cgdG8gYmVnaW4gd2l0aCwgZ2VudGxlbWVuLCBEaW9jbGVpZGVzIGdhdmUgaGlzIHN0b3J5IHRoaXMgcGFydGljdWxhciBmb3JtIHNpbXBseSB0byBiZSBpbiBhIHBvc2l0aW9uIHRvIHNheSBvZiBhbnkgY2l0aXplbiwgYWNjb3JkaW5nIGFzIGhlIGNob3NlLCB0aGF0IGhlIHdhcyBvciB3YXMgbm90IG9uZSBvZiB0aGUgb2ZmZW5kZXJz4oCUYSBtb25zdHJvdXMgcHJvY2VlZGluZy4gIEhvd2V2ZXIsIHRvIGNvbnRpbnVlIGhpcyB0YWxlOiAgYWZ0ZXIgc2VlaW5nIHdoYXQgaGUgaGFkLCBoZSB3ZW50IG9uIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEwODk1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTA4OTUiPkxhdXJpdW08L3BsYWNlTmFtZT47ICBhbmQgd2hlbiBoZSBsZWFybmVkIG5leHQgZGF5IG9mIHRoZSBtdXRpbGF0aW9uIG9mIHRoZSBIZXJtYWUsIGhlIGtuZXcgYXQgb25jZSB0aGF0IGl0IHdhcyB0aGUgd29yayBvZiB0aGUgbWVuIGhlIGhhZCBub3RpY2VkLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz5PbiBoaXMgcmV0dXJuIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBoZSBmb3VuZCBhIGNvbW1pc3Npb24gYWxyZWFkeSBhcHBvaW50ZWQgdG8gaW52ZXN0aWdhdGUsIGFuZCBhIHJld2FyZCBvZiBvbmUgaHVuZHJlZCBtaW5hZSBvZmZlcmVkIGZvciBpbmZvcm1hdGlvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIHRoZSBzZWNvbmQsIGxhcmdlciByZXdhcmQgcHJvcG9zZWQgYnkgUGVpc2FuZGVyIO+8iDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjI3IiB2YWxpZD0ieWVzIj5BbmRvYy4gMS4yNzwvYmlibD7vvIkuPC9ub3RlPjsgIHNvIHNlZWluZyBFdXBoZW11cywgdGhlIGJyb3RoZXIgb2YgQ2FsbGlhcywgc29uIG9mIFRlbG9jbGVzLCBzaXR0aW5nIGluIGhpcyBzbWl0aHksIGhlIHRvb2sgaGltIHRvIHRoZSB0ZW1wbGUgb2YgSGVwaGFlc3R1cy4gIFRoZW4sIGFmdGVyIGRlc2NyaWJpbmcsIGFzIEkgaGF2ZSBkZXNjcmliZWQgdG8geW91LCBob3cgaGUgaGFkIHNlZW4gdXMgb24gdGhlIG5pZ2h0IGluIHF1ZXN0aW9uLCBoZSBzYWlkIHRoYXQgaGUgd291bGQgcmF0aGVyIHRha2Ugb3VyIG1vbmV5IHRoYW4gdGhlIHN0YXRlJ3MsIGFzIGhlIHdvdWxkIHRoZXJlYnkgYXZvaWQgbWFraW5nIGVuZW1pZXMgb2YgdXMuICBFdXBoZW11cyB0aGFua2VkIERpb2NsZWlkZXMgZm9yIGNvbmZpZGluZyBpbiBoaW0uICDigJxBbmQgbm93LOKAnSBoZSBhZGRlZCwg4oCcYmUgZ29vZCBlbm91Z2ggdG8gY29tZSB0byBMZW9nb3JhcycgaG91c2UsIHNvIHRoYXQgeW91IGFuZCBJIGNhbiBzZWUgQW5kb2NpZGVzIGFuZCB0aGUgb3RoZXJzIHdobyBtdXN0IGJlIGNvbnN1bHRlZC7igJ0KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMjciIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjI3PC9iaWJsPu+8iS48L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz5BY2NvcmRpbmcgdG8gaGlzIHN0b3J5LCBEaW9jbGVpZGVzIGNhbGxlZCBuZXh0IGRheS4gIE15IGZhdGhlciBoYXBwZW5lZCB0byBiZSBjb21pbmcgb3V0IGp1c3QgYXMgaGUgd2FzIGtub2NraW5nIGF0IHRoZSBkb29yLiAg4oCcQXJlIHlvdSB0aGUgbWFuIHRoZXkgYXJlIGV4cGVjdGluZyBpbiB0aGVyZT/igJ0gaGUgYXNrZWQuICDigJxXZWxsLCB3ZWxsLCB3ZSBtdXN0IG5vdCB0dXJuIGZyaWVuZHMgbGlrZSB5b3UgYXdheS7igJ0gQW5kIHdpdGggdGhlc2Ugd29yZHMgaGUgd2VudCBvZmYuICBUaGlzIHdhcyBhbiBhdHRlbXB0IHRvIGJyaW5nIGFib3V0IG15IGZhdGhlcidzIGRlYXRoIGJ5IHNob3dpbmcgdGhhdCBoZSB3YXMgaW4gdGhlIHNlY3JldC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlIGluZm9ybWVkIERpb2NsZWlkZXMsIG9yIHNvIGhlIGFsbGVnZWQsIHRoYXQgd2UgaGFkIGRlY2lkZWQgdG8gb2ZmZXIgaGltIHR3byB0YWxlbnRzIG9mIHNpbHZlciwgYXMgYWdhaW5zdCB0aGUgaHVuZHJlZCBtaW5hZSBmcm9tIHRoZSBUcmVhc3VyeSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiB0d2VudHkgbWluYWUgbW9yZS48L25vdGU+IGFuZCBwcm9taXNlZCB0aGF0IGhlIHNob3VsZCBiZWNvbWUgb25lIG9mIG91cnNlbHZlcywgaWYgd2UgYWNoaWV2ZWQgb3VyIGVuZC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SW1wbHlpbmcgdGhhdCB0aGUgbXV0aWxhdGlvbiBvZiB0aGUgSGVybWFlIHdhcyBkZWZpbml0ZWx5IHBhcnQgb2YgYSBwbG90IHRvIG92ZXJ0aHJvdyB0aGUgZGVtb2NyYWN5LiAgRGlvY2xlaWRlcyBpcyBwcm9taXNlZCBhIHBsYWNlIGluIHRoZSBvbGlnYXJjaGljIGdvdmVybm1lbnQgd2hpY2ggaXMgdG8gZm9sbG93Ljwvbm90ZT4gQm90aCBzaWRlcyB3ZXJlIHRvIGdpdmUgYSBndWFyYW50ZWUgb2YgZ29vZCBmYWl0aC4gIERpb2NsZWlkZXMgcmVwbGllZCB0aGF0IGhlIHdvdWxkIHRoaW5rIGl0IG92ZXI7CjwvdHJhbnNsYXRpb24+"
translation['1.Narr.42'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgd2UgdG9sZCBoaW0gdG8gbWVldCB1cyBhdCBDYWxsaWFzJyBob3VzZSwgc28gdGhhdCBDYWxsaWFzLCBzb24gb2YgVGVsb2NsZXMsIG1pZ2h0IGJlIHByZXNlbnQgYXMgd2VsbC4gIFRoaXMgd2FzIGEgc2ltaWxhciBhdHRlbXB0IHRvIGJyaW5nIGFib3V0IHRoZSBkZWF0aCBvZiBteSBicm90aGVyLWluLWxhdy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkRpb2NsZWlkZXMgc2FpZCB0aGF0IGhlIHdlbnQgdG8gQ2FsbGlhcycgaG91c2UsIGFuZCBhZnRlciB0ZXJtcyBoYWQgYmVlbiBhcnJhbmdlZCwgcGxlZGdlZCBoaXMgd29yZCBvbiB0aGUgQWNyb3BvbGlzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JbiBvbmUgb2YgdGhlIHRlbXBsZXMg77yIY2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjQwIiB2YWxpZD0ieWVzIj5BbmRvYy4gMS40MDwvYmlibD7vvIkuPC9ub3RlPiB3ZSBvbiBvdXIgc2lkZSBhZ3JlZWQgdG8gZ2l2ZSBoaW0gdGhlIG1vbmV5IHRoZSBmb2xsb3dpbmcgbW9udGg7ICBidXQgd2UgYnJva2Ugb3VyIHByb21pc2UgYW5kIGRpZCBub3QgZG8gc28uICBIZSBoYWQgdGhlcmVmb3JlIGNvbWUgdG8gcmV2ZWFsIHRoZSB0cnV0aC4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuNDAiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjQwPC9iaWJsPu+8iS48L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.43'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3VjaCB3YXMgdGhlIGltcGVhY2htZW50IGJyb3VnaHQgYnkgRGlvY2xlaWRlcywgZ2VudGxlbWVuLiAgSGUgZ2F2ZSBhIGxpc3Qgb2YgZm9ydHktdHdvIHBlcnNvbnMgd2hvbSBoZSBjbGFpbWVkIHRvIGhhdmUgcmVjb2duaXplZCwgYW5kIGF0IHRoZSBoZWFkIG9mIHRoZSBmb3J0eS10d28gYXBwZWFyZWQgTWFudGl0aGV1cyBhbmQgQXBzZXBoaW9uIHdobyB3ZXJlIG1lbWJlcnMgb2YgdGhlIENvdW5jaWwgYW5kIHByZXNlbnQgYXQgdGhhdCB2ZXJ5IG1lZXRpbmcuICBQZWlzYW5kZXIgaGVyZXVwb24gcm9zZSBhbmQgbW92ZWQgdGhhdCB0aGUgZGVjcmVlIHBhc3NlZCBpbiB0aGUgYXJjaG9uc2hpcCBvZiBTY2FtYW5kcml1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgZGVjcmVlIGZvcmJhZGUgdGhlIGV4YW1pbmF0aW9uIG9mIGNpdGl6ZW5zIHVuZGVyIHRvcnR1cmUuICBUaGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrLOv8+FzrvhvbU8L2ZvcmVpZ24+IGhhZCBiZWVuIGVtcG93ZXJlZCB0byBhY3QgZW50aXJlbHkgYXQgaXRzIG93biBkaXNjcmV0aW9uIGR1cmluZyB0aGUgY3Jpc2lzIO+8iCBjZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMTUiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjE1PC9iaWJsPu+8iSwgYW5kIHNvIGNvdWxkIHN1c3BlbmQgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+I4b21z4bOuc+DzrzOsTwvZm9yZWlnbj4gaW4gcXVlc3Rpb24gaWYgaXQgdGhvdWdodCBmaXQuPC9ub3RlPiBiZSBzdXNwZW5kZWQgYW5kIGFsbCB3aG9zZSBuYW1lcyB3ZXJlIG9uIHRoZSBsaXN0IHNlbnQgdG8gdGhlIHdoZWVsLCB0byBlbnN1cmUgdGhlIGRpc2NvdmVyeSBvZiBldmVyeW9uZSBjb25jZXJuZWQgYmVmb3JlIG5pZ2h0ZmFsbC4gIFRoZSBDb3VuY2lsIGJyb2tlIGludG8gc2hvdXRzIG9mIGFwcHJvdmFsLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Oss6/z4XOu+G9tTwvZm9yZWlnbj4gaGFkIGJlZW4gZW1wb3dlcmVkIHRvIGFjdCBlbnRpcmVseSBhdCBpdHMgb3duIGRpc2NyZXRpb24gZHVyaW5nIHRoZSBjcmlzaXMg77yIIGNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbmRvYy4gMS4xNSIgdmFsaWQ9InllcyI+QW5kb2MuIDEuMTU8L2JpYmw+77yJLCBhbmQgc28gY291bGQgc3VzcGVuZCB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4jhvbXPhs65z4POvM6xPC9mb3JlaWduPiBpbiBxdWVzdGlvbiBpZiBpdCB0aG91Z2h0IGZpdC48L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.44'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0ic2VjdGlvbiIgLz5BdCB0aGF0IE1hbnRpdGhldXMgYW5kIEFwc2VwaGlvbiB0b29rIHNhbmN0dWFyeSBvbiB0aGUgaGVhcnRoLCBhbmQgYXBwZWFsZWQgdG8gYmUgYWxsb3dlZCB0byBmdXJuaXNoIHN1cmV0aWVzIGFuZCBzdGFuZCB0cmlhbCwgaW5zdGVhZCBvZiBiZWluZyByYWNrZWQuICBUaGV5IGZpbmFsbHkgbWFuYWdlZCB0byBnYWluIHRoZWlyIHJlcXVlc3Q7ICBidXQgbm8gc29vbmVyIGhhZCB0aGV5IHByb3ZpZGVkIHRoZWlyIHN1cmV0aWVzIHRoYW4gdGhleSBsZWFwdCBvbiBob3JzZWJhY2sgYW5kIGRlc2VydGVkIHRvIHRoZSBlbmVteSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhleSB3b3VsZCBwcm9iYWJseSBtYWtlIGZvciB0aGUgQm9lb3RpYW4gZnJvbnRpZXIg77yIY2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjQ1IiB2YWxpZD0ieWVzIj5BbmRvYy4gMS40NTwvYmlibD4gYmVsb3fvvIksIHRob3VnaCBUaHVjeWRpZGVzIHN0YXRlcyB0aGF0IHRoZXJlIHdhcyBhbHNvIGEgU3BhcnRhbiBmb3JjZSBhdCB0aGUgSXN0aG11cyBhdCB0aGlzIHRpbWUg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iVGh1Yy4gNi42MSIgdmFsaWQ9InllcyI+VGh1Yy4gNi42MTwvYmlibD7vvIkuPC9ub3RlPiBsZWF2aW5nIHRoZSBzdXJldGllcyB0byB0aGVpciBmYXRlLCBhcyB0aGV5IHdlcmUgbm93IGxpYWJsZSB0byB0aGUgc2FtZSBwZW5hbHRpZXMgYXMgdGhlIHByaXNvbmVycyBmb3Igd2hvbSB0aGV5IGhhZCBnb25lIGJhaWwuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjQ1IiB2YWxpZD0ieWVzIj5BbmRvYy4gMS40NTwvYmlibD4gYmVsb3fvvIksIHRob3VnaCBUaHVjeWRpZGVzIHN0YXRlcyB0aGF0IHRoZXJlIHdhcyBhbHNvIGEgU3BhcnRhbiBmb3JjZSBhdCB0aGUgSXN0aG11cyBhdCB0aGlzIHRpbWUg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iVGh1Yy4gNi42MSIgdmFsaWQ9InllcyI+VGh1Yy4gNi42MTwvYmlibD7vvIkuPC90cmFuc2xhdGlvbj4="
translation['1.Narr.45'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIENvdW5jaWwgYWRqb3VybmVkIGZvciBhIHByaXZhdGUgY29uc3VsdGF0aW9uIGFuZCBpbiB0aGUgY291cnNlIG9mIGl0IGdhdmUgb3JkZXJzIGZvciBvdXIgYXJyZXN0IGFuZCBjbG9zZSBjb25maW5lbWVudC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+TGl0LiAg4oCcbWFkZSB1cyBmYXN0IGluIHRoZSBzdG9ja3Mu4oCdICBUaGVzZSB3ZXJlIGluIHRoZSBqYWlsIGl0c2VsZi48L25vdGU+IFRoZW4gdGhleSBzdW1tb25lZCB0aGUgR2VuZXJhbHMgYW5kIGJhZGUgdGhlbSBwcm9jbGFpbSB0aGF0IGNpdGl6ZW5zIHJlc2lkZW50IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBwcm9wZXIgd2VyZSB0byBwcm9jZWVkIHVuZGVyIGFybXMgdG8gdGhlIEFnb3JhOyAgdGhvc2UgYmV0d2VlbiB0aGUgTG9uZyBXYWxscyB0byB0aGUgVGhlc2V1bTsgIGFuZCB0aG9zZSBpbiBQZWlyYWV1cyB0byB0aGUgQWdvcmEgb2YgSGlwcG9kYW11cy4gIFRoZSBLbmlnaHRzIHdlcmUgdG8gYmUgbXVzdGVyZWQgYXQgdGhlIEFuYWNldW08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIEFnb3JhIG9mIEhpcHBvZGFtdXMgd2FzIHRoZSBBZ29yYSBvZiBQZWlyYWV1czogIHRoZSBBbmFjZXVtLCBhIHRlbXBsZSBvZiB0aGUgRGlvc2N1cmkgdG8gdGhlIE4uVy4gIG9mIHRoZSBBY3JvcG9saXMuPC9ub3RlPiBieSB0cnVtcGV0IGJlZm9yZSBuaWdodGZhbGwsIHdoaWxlIHRoZSBDb3VuY2lsIHdvdWxkIHRha2UgdXAgaXRzIHF1YXJ0ZXJzIG9uIHRoZSBBY3JvcG9saXMgZm9yIHRoZSBuaWdodCwgYW5kIHRoZSBQcnl0YW5lcyBpbiB0aGUgVGhvbHVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrjhvbnOu86/z4I8L2ZvcmVpZ24+IHdhcyBhIGNpcmN1bGFyIGJ1aWxkaW5nIHdpdGggYSBkb21lZCByb29mIHNpdHVhdGVkIGluIHRoZSBBZ29yYTsgIGl0IHdhcyBzb21ldGltZXMga25vd24gYXMgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+DzrrOueG9sc+CPC9mb3JlaWduPi4gIEl0IGlzIHRoZSBzYW1lIGFzIHRoZSBQcnl0YW5ldW0gbWVudGlvbmVkIGJlbG93LiAgVGhlIFByeXRhbmVzIGFuZCB0aGVpciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Os8+BzrHOvM68zrHPhM614b27z4I8L2ZvcmVpZ24+IGRpbmVkIHRoZXJlIGRhaWx5LCBhbmQgZGlzdGluZ3Vpc2hlZCBmb3JlaWduIHZpc2l0b3JzIHdlcmUgb2Z0ZW4gb2Z0ZW4gZW50ZXJ0YWluZWQgYXQgdGhlIFRob2x1cyBhdCB0aGUgcHVibGljIGNvc3QuICBEaW9jbGVpZGVzIHdhcyBhY2NvcmRlZCB0aGlzIHByaXZpbGVnZS4gSW4gdGhlIG1lYW50aW1lLCB0aGUgQm9lb3RpYW5zLCB3aG8gaGFkIGhlYXJkIHRoZSBuZXdzLCBoYWQgdGFrZW4gdGhlIGZpZWxkIGFuZCB3ZXJlIG9uIHRoZSBmcm9udGllcjsgIHdoaWxlIERpb2NsZWlkZXMsIHRoZSBhdXRob3Igb2YgYWxsIHRoZSBtaXNjaGllZiwgd2FzIGhhaWxlZCBhcyB0aGUgc2F2aW91ciBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT46ICBhIGdhcmxhbmQgd2FzIHBsYWNlZCB1cG9uIGhpcyBoZWFkLCBhbmQgaGUgd2FzIGRyaXZlbiB1cG9uIGFuIG94LWNhcnQgdG8gdGhlIFByeXRhbmV1bSwgd2hlcmUgaGUgd2FzIGVudGVydGFpbmVkLjwvbm90ZT4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrjhvbnOu86/z4I8L2ZvcmVpZ24+IHdhcyBhIGNpcmN1bGFyIGJ1aWxkaW5nIHdpdGggYSBkb21lZCByb29mIHNpdHVhdGVkIGluIHRoZSBBZ29yYTsgIGl0IHdhcyBzb21ldGltZXMga25vd24gYXMgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+DzrrOueG9sc+CPC9mb3JlaWduPi4gIEl0IGlzIHRoZSBzYW1lIGFzIHRoZSBQcnl0YW5ldW0gbWVudGlvbmVkIGJlbG93LiAgVGhlIFByeXRhbmVzIGFuZCB0aGVpciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Os8+BzrHOvM68zrHPhM614b27z4I8L2ZvcmVpZ24+IGRpbmVkIHRoZXJlIGRhaWx5LCBhbmQgZGlzdGluZ3Vpc2hlZCBmb3JlaWduIHZpc2l0b3JzIHdlcmUgb2Z0ZW4gb2Z0ZW4gZW50ZXJ0YWluZWQgYXQgdGhlIFRob2x1cyBhdCB0aGUgcHVibGljIGNvc3QuICBEaW9jbGVpZGVzIHdhcyBhY2NvcmRlZCB0aGlzIHByaXZpbGVnZS4gSW4gdGhlIG1lYW50aW1lLCB0aGUgQm9lb3RpYW5zLCB3aG8gaGFkIGhlYXJkIHRoZSBuZXdzLCBoYWQgdGFrZW4gdGhlIGZpZWxkIGFuZCB3ZXJlIG9uIHRoZSBmcm9udGllcjsgIHdoaWxlIERpb2NsZWlkZXMsIHRoZSBhdXRob3Igb2YgYWxsIHRoZSBtaXNjaGllZiwgd2FzIGhhaWxlZCBhcyB0aGUgc2F2aW91ciBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT46ICBhIGdhcmxhbmQgd2FzIHBsYWNlZCB1cG9uIGhpcyBoZWFkLCBhbmQgaGUgd2FzIGRyaXZlbiB1cG9uIGFuIG94LWNhcnQgdG8gdGhlIFByeXRhbmV1bSwgd2hlcmUgaGUgd2FzIGVudGVydGFpbmVkLjwvdHJhbnNsYXRpb24+"
translation['1.Narr.46'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGZpcnN0IG9mIGFsbCBJIHdhbnQgdGhvc2Ugb2YgeW91IHdobyB3aXRuZXNzZWQgYWxsIHRoaXMgdG8gcGljdHVyZSBpdCBvbmNlIG1vcmUgYW5kIGRlc2NyaWJlIGl0IHRvIHRob3NlIHdobyBkaWQgbm90LiAgTmV4dCBJIHdpbGwgYXNrIHRoZSBjbGVyayB0byBjYWxsIHRoZSBQcnl0YW5lcyBpbiBvZmZpY2UgYXQgdGhlIHRpbWUsIFBoaWxvY3JhdGVzIGFuZCBoaXMgY29sbGVhZ3Vlcy4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iV2l0bmVzc2VzIj48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5XaXRuZXNzZXM8L3RpdGxlPjwvcXVvdGU+Cjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPldpdG5lc3NlczwvdGl0bGU+PC90cmFuc2xhdGlvbj4="
translation['1.Narr.47'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIG5vdyBJIGFtIGFsc28gZ29pbmcgdG8gcmVhZCB5b3UgdGhlIG5hbWVzIG9mIHRob3NlIGRlbm91bmNlZCBieSBEaW9jbGVpZGVzLCBzbyB0aGF0IHlvdSBtYXkgc2VlIGhvdyBtYW55IHJlbGF0aXZlcyBvZiBtaW5lIGhlIHRyaWVkIHRvIHJ1aW4uICBGaXJzdCB0aGVyZSB3YXMgbXkgZmF0aGVyLCBhbmQgdGhlbiBteSBicm90aGVyLWluLWxhdzsgIG15IGZhdGhlciBoZSBoYWQgcmVwcmVzZW50ZWQgYXMgaW4gdGhlIHNlY3JldCwgd2hpbGUgaGUgaGFkIGFsbGVnZWQgdGhhdCBteSBicm90aGVyLWluLWxhdydzIGhvdXNlIHdhcyB0aGUgc2NlbmUgb2YgdGhlIG1lZXRpbmcuICBUaGUgbmFtZXMgb2YgdGhlIHJlc3QgeW91IHNoYWxsIGhlYXIuICBSZWFkIHRoZW0gb3V0IHRvIHRoZSBjb3VydC4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iJmx0O05hbWVzJmd0OyI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkNoYXJtaWRlcywgc29uIG9mIEFyaXN0b3RlbGVzLjwvcXVvdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkNoYXJtaWRlcywgc29uIG9mIEFyaXN0b3RlbGVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGF0IGlzIGEgY291c2luIG9mIG1pbmU7ICBoaXMgbW90aGVyIGFuZCBteSBmYXRoZXIgd2VyZSBicm90aGVyIGFuZCBzaXN0ZXIuIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9IiZsdDtOYW1lcyZndDsiPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UYXVyZWFzLiA8L3F1b3RlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UYXVyZWFzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhhdCBpcyBhIGNvdXNpbiBvZiBteSBmYXRoZXIncy4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iJmx0O05hbWVzJmd0OyI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5pc2FldXMuPC9xdW90ZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TmlzYWV1cy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QSBzb24gb2YgVGF1cmVhcy4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iJmx0O05hbWVzJmd0OyI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkNhbGxpYXMsIHNvbiBvZiBBbGNtYWVvbi48L3F1b3RlPiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Q2FsbGlhcywgc29uIG9mIEFsY21hZW9uLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BIGNvdXNpbiBvZiBteSBmYXRoZXIncy4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iJmx0O05hbWVzJmd0OyI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkV1cGhlbXVzLjwvcXVvdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkV1cGhlbXVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BIGJyb3RoZXIgb2YgQ2FsbGlhcywgc29uIG9mIFRlbG9jbGVzLiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSImbHQ7TmFtZXMmZ3Q7Ij48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+UGhyeW5pY2h1cywgc29uIG9mIE9yY2hlc2FtZW51cy48L3F1b3RlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5QaHJ5bmljaHVzLCBzb24gb2YgT3JjaGVzYW1lbnVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgIE1TLiByZWFkaW5nIGlzIHJldGFpbmVkIGJ5IHNvbWUgYW5kIHRyYW5zbGF0ZWQg4oCcdGhlIGV4LWRhbmNlcizigJ0gb24gdGhlIGdyb3VuZCB0aGF0IGEgZmFtb3VzIGRhbmNlciBuYW1lZCBQaHJ5bmljaHVzIHdhcyBsaXZpbmcgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGF0IHRoaXMgcGVyaW9kIO+8iCBjZi4gIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3BoLiBXYXNwcyAxMzAyIiB2YWxpZD0ieWVzIj5BcmlzdG9waC4gV2FzcHMgMTMwMjwvYmlibD7vvIkuICBCdXQgbm8gdHJ1ZSBwYXJhbGxlbCBjYW4gYmUgcHJvZHVjZWQgZm9yIHN1Y2ggYSB1c2Ugb2YgdGhlIGFvcmlzdCBwYXJ0aWNpcGxlLiAgSXQgaXMgcHJlZmVyYWJsZSB0byBlbWVuZCBhcyBpbiB0aGUgdGV4dCwgYXMgcHJvcGVyIG5hbWVzIHdpdGggYSBwYXJ0aWNpcGlhbCBmb3JtIHdlcmUgbm90IHVuY29tbW9uOyAgY2YuIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8iM66zrXPg86xzrzOtc694b25z4IsIOG8iM67zrXOvs6xzrzOtc694b25z4IsIM6kzrXOuc+DzrHOvM61zr3hvbnPgiwg4byIzrrOv8+FzrzOtc694b25z4I8L2ZvcmVpZ24+Ljwvbm90ZT4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGF0IHRoaXMgcGVyaW9kIO+8iCBjZi4gIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3BoLiBXYXNwcyAxMzAyIiB2YWxpZD0ieWVzIj5BcmlzdG9waC4gV2FzcHMgMTMwMjwvYmlibD7vvIkuICBCdXQgbm8gdHJ1ZSBwYXJhbGxlbCBjYW4gYmUgcHJvZHVjZWQgZm9yIHN1Y2ggYSB1c2Ugb2YgdGhlIGFvcmlzdCBwYXJ0aWNpcGxlLiAgSXQgaXMgcHJlZmVyYWJsZSB0byBlbWVuZCBhcyBpbiB0aGUgdGV4dCwgYXMgcHJvcGVyIG5hbWVzIHdpdGggYSBwYXJ0aWNpcGlhbCBmb3JtIHdlcmUgbm90IHVuY29tbW9uOyAgY2YuIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8iM66zrXPg86xzrzOtc694b25z4IsIOG8iM67zrXOvs6xzrzOtc694b25z4IsIM6kzrXOuc+DzrHOvM61zr3hvbnPgiwg4byIzrrOv8+FzrzOtc694b25z4I8L2ZvcmVpZ24+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BIGNvdXNpbi4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iJmx0O05hbWVzJmd0OyI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkV1Y3JhdGVzLjwvcXVvdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkV1Y3JhdGVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgYnJvdGhlciBvZiBOaWNpYXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSB3b3JkcyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvYEgzp3Ouc664b23zr/PhSDhvIDOtM61zrvPhuG9uc+CPC9mb3JlaWduPiBhcmUgbWlzcGxhY2VkIGluIHRoZSAgTVNTLiBBbmRvY2lkZXMgaXMgY2xlYXJseSBxdW90aW5nIGZyb20gYW4gb2ZmaWNpYWwgbGlzdDsgIGFuZCBpbiBzdWNoIGRvY3VtZW50cyBhIG1hbiB3b3VsZCBiZSByZWZlcnJlZCB0byBieSBoaXMgZmF0aGVyJ3MgbmFtZSwgbm90IGJ5IGhpcyBicm90aGVyJ3MuICBUaGUgcmVmZXJlbmNlIHRvIHRoZSBicm90aGVyIGlzIHBhcnQgb2YgdGhlIGNvbW1lbnRhcnkgb2YgQW5kb2NpZGVzIHdoaWNoIGZvbGxvd3MuICBUaGUgTmljaWFzIGluIHF1ZXN0aW9uIGlzIHRoZSBnZW5lcmFsLjwvbm90ZT4gSGUgaXMgQ2FsbGlhcycgYnJvdGhlci1pbi1sYXcuIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9gSDOnc65zrrhvbfOv8+FIOG8gM60zrXOu8+G4b25z4I8L2ZvcmVpZ24+IGFyZSBtaXNwbGFjZWQgaW4gdGhlICBNU1MuIEFuZG9jaWRlcyBpcyBjbGVhcmx5IHF1b3RpbmcgZnJvbSBhbiBvZmZpY2lhbCBsaXN0OyAgYW5kIGluIHN1Y2ggZG9jdW1lbnRzIGEgbWFuIHdvdWxkIGJlIHJlZmVycmVkIHRvIGJ5IGhpcyBmYXRoZXIncyBuYW1lLCBub3QgYnkgaGlzIGJyb3RoZXIncy4gIFRoZSByZWZlcmVuY2UgdG8gdGhlIGJyb3RoZXIgaXMgcGFydCBvZiB0aGUgY29tbWVudGFyeSBvZiBBbmRvY2lkZXMgd2hpY2ggZm9sbG93cy4gIFRoZSBOaWNpYXMgaW4gcXVlc3Rpb24gaXMgdGhlIGdlbmVyYWwuPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iJmx0O05hbWVzJmd0OyI+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkNyaXRpYXMuPC9xdW90ZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Q3JpdGlhcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5vdGhlciBjb3VzaW4gb2YgbXkgZmF0aGVyJ3M7ICB0aGVpciBtb3RoZXJzIHdlcmUgc2lzdGVycy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFsbCBvZiB0aGVzZSBhcHBlYXJlZCBhbW9uZyB0aGUgbGFzdCBmb3J0eSBvbiBEaW9jbGVpZGVzJyBsaXN0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.48'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2Ugd2VyZSBhbGwgdGhyb3duIGludG8gb25lIHByaXNvbi4gIERhcmtuZXNzIGZlbGwsIGFuZCB0aGUgZ2F0ZXMgd2VyZSBzaHV0LiAgTW90aGVycywgc2lzdGVycywgd2l2ZXMsIGFuZCBjaGlsZHJlbiBoYWQgZ2F0aGVyZWQuICBOb3RoaW5nIHdhcyB0byBiZSBoZWFyZCBzYXZlIHRoZSBjcmllcyBhbmQgbW9hbnMgb2YgZ3JpZWYtc3RyaWNrZW4gd3JldGNoZXMgYmV3YWlsaW5nIHRoZSBjYWxhbWl0eSB3aGljaCBoYWQgb3ZlcnRha2VuIHRoZW0uICBJbiB0aGUgbWlkc3Qgb2YgaXQgYWxsLCBDaGFybWlkZXMsIGEgY291c2luIG9mIG15IG93biBhZ2Ugd2hvIGhhZCBiZWVuIGJyb3VnaHQgdXAgd2l0aCBtZSBpbiBteSBvd24gaG9tZSBzaW5jZSBib3lob29kLCBzYWlkIHRvIG1lOgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.49'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OSIgdW5pdD0ic2VjdGlvbiIgLz7igJxZb3Ugc2VlIHRoZSB1dHRlciBob3BlbGVzc25lc3Mgb2Ygb3VyIHBvc2l0aW9uLCBBbmRvY2lkZXMuICBJIGhhdmUgbmV2ZXIgeWV0IHdpc2hlZCB0byBzYXkgYW55dGhpbmcgd2hpY2ggbWlnaHQgZGlzdHJlc3MgeW91OiAgYnV0IG5vdyBvdXIgcGxpZ2h0IGxlYXZlcyBtZSBubyBjaG9pY2UuICBZb3VyIGZyaWVuZHMgYW5kIGFzc29jaWF0ZXMgb3V0c2lkZSB0aGUgZmFtaWx5IGhhdmUgYWxsIGJlZW4gc3ViamVjdGVkIHRvIHRoZSBjaGFyZ2VzIHdoaWNoIGFyZSBub3cgdG8gcHJvdmUgb3VyIG93biB1bmRvaW5nOiAgYW5kIGhhbGYgb2YgdGhlbSBoYXZlIGJlZW4gcHV0IHRvIGRlYXRoLOKAlHdoaWxlIHRoZSBvdGhlciBoYWxmIGhhdmUgYWRtaXR0ZWQgdGhlaXIgZ3VpbHQgYnkgZ29pbmcgaW50byBleGlsZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q2hhcm1pZGVzJyBhcmd1bWVudCBzZWVtcyB0byBiZSB0aGF0LCBhcyBBbmRvY2lkZXMnIGZyaWVuZHMgaGF2ZSBhbHJlYWR5IGJlZW4gZXhwb3NlZCwgaGUgY2FuIGRvIG5vIGhhcm0gdG8gdGhlbSBieSBhbnkgcmV2ZWxhdGlvbnMgaGUgbWF5IGNob29zZSB0byBtYWtlLiAgT24gdGhlIG90aGVyIGhhbmQsIGhlIHdpbGwgYmUgYWJsZSB0byBzYXZlIGhpcyBmYW1pbHkgZnJvbSBjZXJ0YWluIGRlYXRoLjwvbm90ZT4KPC90cmFuc2xhdGlvbj4="
translation['1.Narr.50'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0ic2VjdGlvbiIgLz5JIGJlZyBvZiB5b3U6ICBpZiB5b3UgaGF2ZSBoZWFyZCBhbnl0aGluZyBjb25jZXJuaW5nIHRoaXMgYWZmYWlyLCBkaXNjbG9zZSBpdC4gIFNhdmUgeW91cnNlbGY6ICBzYXZlIHlvdXIgZmF0aGVyLCB3aG8gbXVzdCBiZSBkZWFyZXIgdG8geW91IHRoYW4gYW55b25lIGluIHRoZSB3b3JsZDogIHNhdmUgeW91ciBicm90aGVyLWluLWxhdywgdGhlIGh1c2JhbmQgb2YgeW91ciBvbmx5IHNpc3RlcjogIHNhdmUgYWxsIHRob3NlIG90aGVycyB3aG8gYXJlIGJvdW5kIHRvIHlvdSBieSB0aWVzIG9mIGJsb29kIGFuZCBmYW1pbHk6ICBhbmQgbGFzdGx5LCBzYXZlIG1lLCB3aG8gaGF2ZSBuZXZlciB2ZXhlZCB5b3UgaW4gbXkgbGlmZSBhbmQgd2hvIGFtIGV2ZXIgcmVhZHkgdG8gZG8gYW55dGhpbmcgZm9yIHlvdSBhbmQgeW91ciBnb29kLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.51'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhpcyBhcHBlYWwgZnJvbSBDaGFybWlkZXMsIGdlbnRsZW1lbiwgd2hpY2ggd2FzIGVjaG9lZCBieSB0aGUgcmVzdCwgd2hvIGVhY2ggYWRkcmVzc2VkIHRoZWlyIGVudHJlYXRpZXMgdG8gbWUgaW4gdHVybiwgSSB0aG91Z2h0IHRvIG15c2VsZjogIOKAnE5ldmVyLCBvaCwgbmV2ZXIgaGFzIGEgbWFuIGZvdW5kIGhpbXNlbGYgaW4gYSBtb3JlIHRlcnJpYmxlIHN0cmFpdCB0aGFuIEkuICBBbSBJIHRvIGxvb2sgb24gd2hpbGUgbXkgb3duIGtpbmRyZWQgcGVyaXNoIGZvciBhIGNyaW1lIHdoaWNoIHRoZXkgaGF2ZSBub3QgY29tbWl0dGVkOiAgd2hpbGUgdGhleSB0aGVtc2VsdmVzIGFyZSBwdXQgdG8gZGVhdGggYW5kIHRoZWlyIGdvb2RzIGFyZSBjb25maXNjYXRlZDogIG5heSBtb3JlLCB3aGlsZSB0aGUgbmFtZXMgb2YgcGVyc29ucyBlbnRpcmVseSBpbm5vY2VudCBvZiB0aGUgZGVlZCB3aGljaCBoYXMgYmVlbiBkb25lIGFyZSBpbnNjcmliZWQgdXBvbiBzdG9uZXMgb2YgcmVjb3JkIGFzIHRoZSBuYW1lcyBvZiBtZW4gYWNjdXJzZWQgaW4gdGhlIHNpZ2h0IG9mIGhlYXZlbj8gQW0gSSB0byBwYXkgbm8gaGVlZCB0byB0aHJlZSBodW5kcmVkIEF0aGVuaWFucyB3aG8gYXJlIHRvIGJlIHdyb25nZnVsbHkgcHV0IHRvIGRlYXRoLCB0byB0aGUgZGVzcGVyYXRlIHBsaWdodCBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHRvIHRoZSBzdXNwaWNpb25zIG9mIGNpdGl6ZW4gZm9yIGNpdGl6ZW4/IE9yIGFtIEkgdG8gcmV2ZWFsIHRvIG15IGNvdW50cnltZW4gdGhlIHN0b3J5IHRvbGQgbWUgYnkgdGhlIHRydWUgY3JpbWluYWwsIEV1cGhpbGV0dXM/4oCdPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFscmVhZHkgZGVub3VuY2VkIGJ5IFRldWNydXMg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMzUiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjM1PC9iaWJsPu+8iS48L25vdGU+CjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjM1IiB2YWxpZD0ieWVzIj5BbmRvYy4gMS4zNTwvYmlibD7vvIkuPC90cmFuc2xhdGlvbj4="
translation['1.Narr.52'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBhIGZ1cnRoZXIgdGhvdWdodCBzdHJ1Y2sgbWUsIGdlbnRsZW1lbi4gIEkgcmVtaW5kZWQgbXlzZWxmIHRoYXQgYSBudW1iZXIgb2YgdGhlIG9mZmVuZGVycyByZXNwb25zaWJsZSBmb3IgdGhlIG11dGlsYXRpb24gaGFkIGFscmVhZHkgYmVlbiBleGVjdXRlZCB1cG9uIHRoZSBpbmZvcm1hdGlvbiBsb2RnZWQgYnkgVGV1Y3J1cywgd2hpbGUgeWV0IG90aGVycyBoYWQgZXNjYXBlZCBpbnRvIGV4aWxlIGFuZCBiZWVuIHNlbnRlbmNlZCB0byBkZWF0aCBpbiB0aGVpciBhYnNlbmNlLiAgSW4gZmFjdCwgdGhlcmUgcmVtYWluZWQgb25seSBmb3VyIG9mIHRoZSBjcmltaW5hbHMgd2hvc2UgbmFtZXMgaGFkIG5vdCBiZWVuIGRpdnVsZ2VkIGJ5IFRldWNydXM6ICBQYW5hZXRpdXMsIENoYWVyZWRlbXVzLCBEaWFjcml0dXMsIGFuZCBMeXNpc3RyYXR1czsKPC90cmFuc2xhdGlvbj4="
translation['1.Narr.53'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgaXQgd2FzIG9ubHkgbmF0dXJhbCB0byBhc3N1bWUgdGhhdCB0aGV5IGhhZCBiZWVuIGFtb25nIHRoZSBmaXJzdCB0byBiZSBkZW5vdW5jZWQgYnkgRGlvY2xlaWRlcywgYXMgdGhleSB3ZXJlIGZyaWVuZHMgb2YgdGhvc2Ugd2hvIGhhZCBhbHJlYWR5IGJlZW4gcHV0IHRvIGRlYXRoLiAgSXQgd2FzIHRodXMgc3RpbGwgZG91YnRmdWwgd2hldGhlciB0aGV5IHdvdWxkIGVzY2FwZTogIGJ1dCBpdCB3YXMgY2VydGFpbiB0aGF0IG15IG93biBraW5kcmVkIHdvdWxkIHBlcmlzaCwgdW5sZXNzIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBsZWFybmVkIHRoZSB0cnV0aC4gIFNvIEkgZGVjaWRlZCB0aGF0IGl0IHdhcyBiZXR0ZXIgdG8gY3V0IG9mZiBmcm9tIHRoZWlyIGNvdW50cnkgZm91ciBtZW4gd2hvIHJpY2hseSBkZXNlcnZlZCBpdOKAlG1lbiBhbGl2ZSB0b2RheSBhbmQgcmVzdG9yZWQgdG8gaG9tZSBhbmQgcHJvcGVydHnigJR0aGFuIHRvIGxldCB0aG9zZSBvdGhlcnMgZ28gdG8gYSBkZWF0aCB3aGljaCB0aGV5IGhhZCBkb25lIG5vdGhpbmcgd2hhdGV2ZXIgdG8gZGVzZXJ2ZS4KPC90cmFuc2xhdGlvbj4="
translation['1.Narr.54'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SWYsIHRoZW4sIGFueSBvZiB5b3UgeW91cnNlbHZlcywgZ2VudGxlbWVuLCBvciBhbnkgb2YgdGhlIHB1YmxpYyBhdCBsYXJnZSBoYXMgZXZlciBiZWVuIHBvc3Nlc3NlZCB3aXRoIHRoZSBub3Rpb24gdGhhdCBJIGluZm9ybWVkIGFnYWluc3QgbXkgYXNzb2NpYXRlcyB3aXRoIHRoZSBvYmplY3Qgb2YgcHVyY2hhc2luZyBteSBvd24gbGlmZSBhdCB0aGUgcHJpY2Ugb2YgdGhlaXJz4oCUYSB0YWxlIGludmVudGVkIGJ5IG15IGVuZW1pZXMsIHdobyB3aXNoZWQgdG8gcHJlc2VudCBtZSBpbiB0aGUgYmxhY2tlc3QgY29sb3Vyc+KAlHVzZSB0aGUgZmFjdHMgdGhlbXNlbHZlcyBhcyBldmlkZW5jZTsKPC90cmFuc2xhdGlvbj4="
translation['1.Narr.55'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NSIgdW5pdD0ic2VjdGlvbiIgLz5mb3IgdG9kYXkgbm90IG9ubHkgaXMgaXQgaW5jdW1iZW50IHVwb24gbWUgdG8gZ2l2ZSBhIGZhaXRoZnVsIGFjY291bnQgb2YgbXlzZWxm4oCUSSBhbSBpbiB0aGUgcHJlc2VuY2UsIHJlbWVtYmVyLCBvZiB0aGUgYWN0dWFsIG9mZmVuZGVycyB3aG8gd2VudCBpbnRvIGV4aWxlIGFmdGVyIGNvbW1pdHRpbmcgdGhlIGNyaW1lIHdoaWNoIHdlIGFyZSBkaXNjdXNzaW5nOyAgdGhleSBrbm93IGJldHRlciB0aGFuIGFueW9uZSB3aGV0aGVyIEkgYW0gbHlpbmcgb3Igbm90LCBhbmQgdGhleSBoYXZlIG15IHBlcm1pc3Npb24gdG8gaW50ZXJydXB0IG1lIGFuZCBwcm92ZSB0aGF0IHdoYXQgSSBhbSBzYXlpbmcgaXMgdW50cnVl4oCUYnV0IGl0IGlzIG5vIGxlc3MgaW5jdW1iZW50IHVwb24geW91IHRvIGRpc2NvdmVyIHdoYXQgdHJ1bHkgaGFwcGVuZWQuCjwvdHJhbnNsYXRpb24+"
translation['1.Narr.56'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NiIgdW5pdD0ic2VjdGlvbiIgLz5JIHNheSB0aGlzLCBnZW50bGVtZW4sIGJlY2F1c2UgdGhlIGNoaWVmIHRhc2sgY29uZnJvbnRpbmcgbWUgaW4gdGhpcyB0cmlhbCBpcyB0byBwcmV2ZW50IGFueW9uZSB0aGlua2luZyB0aGUgd29yc2Ugb2YgbWUgb24gYWNjb3VudCBvZiBteSBlc2NhcGU6ICB0byBtYWtlIGZpcnN0IHlvdSBhbmQgdGhlbiB0aGUgd2hvbGUgd29ybGQgdW5kZXJzdGFuZCB0aGF0IHRoZSBleHBsYW5hdGlvbiBvZiBteSBiZWhhdmlvdXIgZnJvbSBzdGFydCB0byBmaW5pc2ggbGF5IGluIHRoZSBkZXNwZXJhdGUgcGxpZ2h0IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBhbmQsIHRvIGEgbGVzc2VyIGRlZ3JlZSwgaW4gdGhhdCBvZiBteSBvd24gZmFtaWx5LCBub3QgaW4gYW55IGxhY2sgb2YgcHJpbmNpcGxlcyBvciBjb3VyYWdlOiAgdG8gbWFrZSB5b3UgdW5kZXJzdGFuZCB0aGF0LCBpbiBkaXNjbG9zaW5nIHRoYXQgRXVwaGlsZXR1cyBoYWQgdG9sZCBtZSwgSSB3YXMgYWN0dWF0ZWQgc29sZWx5IGJ5IG15IGNvbmNlcm4gZm9yIG15IHJlbGF0aXZlcyBhbmQgZnJpZW5kcyBhbmQgYnkgbXkgY29uY2VybiBmb3IgdGhlIHN0YXRlIGFzIGEgd2hvbGUsIG1vdGl2ZXMgd2hpY2ggSSBmb3Igb25lIGNvbnNpZGVyIG5vdCBhIGRpc2dyYWNlIGJ1dCBhIGNyZWRpdC4gIElmIHRoaXMgcHJvdmVzIHRvIGJlIHRoZSB0cnV0aCBvZiB0aGUgbWF0dGVyLCBJIHRoaW5rIGl0IG9ubHkgbXkgZHVlIHRoYXQgSSBzaG91bGQgYmUgYWNxdWl0dGVkIHdpdGggbXkgZ29vZCBuYW1lIHVuaW1wYWlyZWQuCjwvdHJhbnNsYXRpb24+"
translation['1.Narr.57'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Q29tZSBub3csIGluIGNvbnNpZGVyaW5nIGEgY2FzZSwgYSBqdWRnZSBzaG91bGQgbWFrZSBhbGxvd2FuY2VzIGZvciBodW1hbiBzaG9ydGNvbWluZ3MsIGdlbnRsZW1lbiwgYXMgaGUgd291bGQgZG8sIHdlcmUgaGUgaW4gdGhlIHNhbWUgcGxpZ2h0IGhpbXNlbGYuICBXaGF0IHdvdWxkIGVhY2ggb2YgeW91IGhhdmUgZG9uZT8gSGFkIHRoZSBjaG9pY2UgbGFpbiBiZXR3ZWVuIGR5aW5nIGEgbm9ibGUgZGVhdGggYW5kIHByZXNlcnZpbmcgbXkgbGlmZSBhdCB0aGUgY29zdCBvZiBteSBob25vdXIsIG15IGJlaGF2aW91ciBtaWdodCB3ZWxsIGJlIGRlc2NyaWJlZCBhcyBiYXNl4oCUdGhvdWdoIG1hbnkgd291bGQgaGF2ZSBtYWRlIGV4YWN0bHkgdGhlIHNhbWUgY2hvaWNlOyAgdGhleSB3b3VsZCByYXRoZXIgaGF2ZSByZW1haW5lZCBhbGl2ZSB0aGFuIGhhdmUgZGllZCBsaWtlIGhlcm9lcy4KPC90cmFuc2xhdGlvbj4="
translation['1.Narr.58'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OCIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhlIGFsdGVybmF0aXZlcyBiZWZvcmUgbWUgd2VyZSBwcmVjaXNlbHkgdGhlIG9wcG9zaXRlLiAgT24gdGhlIG90aGVyIGhhbmQsIGlmIEkgcmVtYWluZWQgc2lsZW50LCBJIG15c2VsZiBkaWVkIGluIGRpc2dyYWNlIGZvciBhbiBhY3Qgb2YgaW1waWV0eSB3aGljaCBJIGhhZCBub3QgY29taXR0ZWQsIGFuZCBJIGFsbG93ZWQgbXkgZmF0aGVyLCBteSBicm90aGVyLWluLWxhdywgYW5kIGEgaG9zdCBvZiBteSByZWxhdGl2ZXMgYW5kIGNvdXNpbnMgdG8gcGVyaXNoIGluIGFkZGl0aW9uLiAgWWVzLCBJLCBhbmQgSSBhbG9uZSwgd2FzIHNlbmRpbmcgdGhlbSB0byB0aGVpciBkZWF0aCwgaWYgSSByZWZ1c2VkIHRvIHNheSB0aGF0IG90aGVycyB3ZXJlIHRvIGJsYW1lOyAgZm9yIERpb2NsZWlkZXMgaGFkIHRocm93biB0aGVtIGludG8gcHJpc29uIGJ5IGhpcyBsaWVzLCBhbmQgdGhleSBjb3VsZCBvbmx5IGJlIHJlc2N1ZWQgaWYgdGhlaXIgY291bnRyeW1lbiB3ZXJlIHB1dCBpbiBmdWxsIHBvc3Nlc3Npb24gb2YgdGhlIGZhY3RzOyAgdGhlcmVmb3JlIEkgYmVjYW1lIHRoZWlyIG11cmRlcmVyIGlmIEkgcmVmdXNlZCB0byB0ZWxsIHdoYXQgSSBoYWQgaGVhcmQuICBCZXNpZGVzIHRoaXMsIEkgd2FzIGNhdXNpbmcgdGhyZWUgaHVuZHJlZCBjaXRpemVucyB0byBwZXJpc2g7ICB3aGlsZSB0aGUgcGxpZ2h0IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiB3YXMgZ3Jvd2luZyBkZXNwZXJhdGUuCjwvdHJhbnNsYXRpb24+"
translation['1.Narr.59'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OSIgdW5pdD0ic2VjdGlvbiIgLz5UaGF0IGlzIHdoYXQgc2lsZW5jZSBtZWFudC4gIE9uIHRoZSBvdGhlciBoYW5kLCBieSByZXZlYWxpbmcgdGhlIHRydXRoIEkgc2F2ZWQgbXkgb3duIGxpZmUsIEkgc2F2ZWQgbXkgZmF0aGVyLCBJIHNhdmVkIHRoZSByZXN0IG9mIG15IGZhbWlseSwgYW5kIEkgZnJlZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGZyb20gdGhlIHBhbmljIHdoaWNoIHdhcyB3b3JraW5nIHN1Y2ggaGF2b2MuICBUcnVlLCBJIHdhcyBzZW5kaW5nIGZvdXIgbWVuIGludG8gZXhpbGU7ICBidXQgYWxsIGZvdXIgd2VyZSBndWlsdHkuICBBbmQgZm9yIHRoZSBvdGhlcnMsIHdobyBoYWQgYWxyZWFkeSBiZWVuIGRlbm91bmNlZCBieSBUZXVjcnVzLCBJIGFtIHN1cmUgdGhhdCBub25lIG9mIHRoZW0sIHdoZXRoZXIgZGVhZCBvciBpbiBleGlsZSwgd2FzIG9uZSB3aGl0IHRoZSB3b3JzZSBvZmYgZm9yIGFueSBkaXNjbG9zdXJlcyBvZiBtaW5lLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.60'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGFraW5nIGFsbCB0aGlzIGludG8gY29uc2lkZXJhdGlvbiwgZ2VudGxlbWVuLCBJIGZvdW5kIHRoYXQgdGhlIGxlYXN0IG9iamVjdGlvbmFibGUgb2YgdGhlIGNvdXJzZXMgb3BlbiB0byBtZSB3YXMgdG8gdGVsbCB0aGUgdHJ1dGggYXMgcXVpY2tseSBhcyBwb3NzaWJsZSwgdG8gcHJvdmUgdGhhdCBEaW9jbGVpZGVzIGhhZCBsaWVkLCBhbmQgc28gdG8gcHVuaXNoIHRoZSBzY291bmRyZWwgd2hvIHdhcyBjYXVzaW5nIHVzIHRvIGJlIHB1dCB0byBkZWF0aCB3cm9uZ2Z1bGx5IGFuZCBpbXBvc2luZyB1cG9uIHRoZSBwdWJsaWMsIHdoaWxlIGluIHJldHVybiBoZSB3YXMgYmVpbmcgaGFpbGVkIGFzIGEgc3VwcmVtZSBiZW5lZmFjdG9yIGFuZCByZXdhcmRlZCBmb3IgaGlzIHNlcnZpY2VzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.61'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MSIgdW5pdD0ic2VjdGlvbiIgLz5JIHRoZXJlZm9yZSBpbmZvcm1lZCB0aGUgQ291bmNpbCB0aGF0IEkga25ldyB0aGUgb2ZmZW5kZXJzLCBhbmQgc2hvd2VkIGV4YWN0bHkgd2hhdCBoYWQgb2NjdXJyZWQuICBUaGUgaWRlYSwgSSBzYWlkLCBoYWQgYmVlbiBzdWdnZXN0ZWQgYnkgRXVwaGlsZXR1cyBhdCBhIGRyaW5raW5nLXBhcnR5OyAgYnV0IEkgb3Bwb3NlZCBpdCwgYW5kIHN1Y2NlZWRlZCBpbiBwcmV2ZW50aW5nIGl0cyBleGVjdXRpb24gZm9yIHRoZSB0aW1lIGJlaW5nLiAgTGF0ZXIsIGhvd2V2ZXIsIEkgd2FzIHRocm93biBmcm9tIGEgY29sdCBvZiBtaW5lIGluIEN5bm9zYXJnZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QSBneW1uYXNpdW0gc2FjcmVkIHRvIEhlcmFjbGVzIG9uIHRoZSBlYXN0ZXJuIG91dHNraXJ0cyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIG5lYXIgdGhlIERpb21lYW4gR2F0ZS48L25vdGU+OyAgSSBicm9rZSBteSBjb2xsYXItYm9uZSBhbmQgZnJhY3R1cmVkIG15IHNrdWxsLCBhbmQgaGFkIHRvIGJlIHRha2VuIGhvbWUgb24gYSBsaXR0ZXIuCjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgbmVhciB0aGUgRGlvbWVhbiBHYXRlLjwvdHJhbnNsYXRpb24+"
translation['1.Narr.62'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MiIgdW5pdD0ic2VjdGlvbiIgLz5XaGVuIEV1cGhpbGV0dXMgc2F3IG15IGNvbmRpdGlvbiwgaGUgaW5mb3JtZWQgdGhlIG90aGVycyB0aGF0IEkgaGFkIGNvbnNlbnRlZCB0byBqb2luIHRoZW0gYW5kIGhhZCBwcm9taXNlZCBoaW0gdG8gbXV0aWxhdGUgdGhlIEhlcm1lcyBuZXh0IHRvIHRoZSBzaHJpbmUgb2YgUGhvcmJhczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5PbmUgb2YgdGhlIG1hbnkgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byhz4Hhv7fOsTwvZm9yZWlnbj4gc2NhdHRlcmVkIG92ZXIgdGhlIGNpdHkuICBQaG9yYmFzIHdhcyBhbiBBdHRpYyBoZXJvOyAgaGUgaGFkIGJlZW4gdGhlIGNoYXJpb3RlZXIgb2YgVGhlc2V1cy48L25vdGU+IGFzIG15IHNoYXJlIGluIHRoZSBlc2NhcGFkZS4gIEhlIHRvbGQgdGhlbSB0aGlzIHRvIGhvb2R3aW5rIHRoZW07ICBhbmQgdGhhdCBpcyB3aHkgdGhlIEhlcm1lcyB3aGljaCB5b3UgY2FuIGFsbCBzZWUgc3RhbmRpbmcgY2xvc2UgdG8gdGhlIGhvbWUgb2Ygb3VyIGZhbWlseSwgdGhlIEhlcm1lcyBkZWRpY2F0ZWQgYnkgdGhlIEFlZ2VpZCB0cmliZSwgd2FzIHRoZSBvbmx5IG9uZSBpbiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvKHPgeG/t86xPC9mb3JlaWduPiBzY2F0dGVyZWQgb3ZlciB0aGUgY2l0eS4gIFBob3JiYXMgd2FzIGFuIEF0dGljIGhlcm87ICBoZSBoYWQgYmVlbiB0aGUgY2hhcmlvdGVlciBvZiBUaGVzZXVzLjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiB1bm11dGlsYXRlZCwgaXQgYmVpbmcgdW5kZXJzdG9vZCB0aGF0IEkgd291bGQgYXR0ZW5kIHRvIGl0IGFzIEV1cGhpbGV0dXMgaGFkIHByb21pc2VkLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.63'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiB0aGUgb3RoZXJzIGxlYXJuZWQgdGhlIHRydXRoLCB0aGV5IHdlcmUgZnVyaW91cyB0byB0aGluayB0aGF0IEkgd2FzIGluIHRoZSBzZWNyZXQgd2l0aG91dCBoYXZpbmcgdGFrZW4gYW55IGFjdGl2ZSBwYXJ0OyAgYW5kIHRoZSBuZXh0IGRheSBJIHJlY2VpdmVkIGEgdmlzaXQgZnJvbSBNZWxldHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk1lbGV0dXMgaGFkIGFsc28gYmVlbiBjb25uZWN0ZWQgd2l0aCB0aGUgcHJvZmFuYXRpb24gb2YgdGhlIE15c3RlcmllczsgIGhpcyBuYW1lIGFwcGVhcnMgb24gQW5kcm9tYWNodXMnIGxpc3Qg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMTMiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjEzPC9iaWJsPu+8iS4gIExpa2UgRXVwaGlsZXR1cywgaGUgd2FzIGRlbm91bmNlZCBieSBUZXVjcnVzIGZvciBtdXRpbGF0aW9uIG9mIHRoZSBIZXJtYWUg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMzUiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjM1PC9iaWJsPu+8iS48L25vdGU+IGFuZCBFdXBoaWxldHVzLiAg4oCcV2UgaGF2ZSBtYW5hZ2VkIGl0IGFsbCByaWdodCwgQW5kb2NpZGVzLOKAnSB0aGV5IHRvbGQgbWUuICDigJxOb3cgaWYgeW91IHdpbGwgY29uc2VudCB0byBrZWVwIHF1aWV0IGFuZCBzYXkgbm90aGluZywgeW91IHdpbGwgZmluZCB1cyBqdXN0IGFzIGdvb2QgZnJpZW5kcyBhcyBiZWZvcmUuICBJZiB5b3UgZG8gbm90LCB5b3Ugd2lsbCBmaW5kIHRoYXQgeW91IGhhdmUgYmVlbiBtdWNoIG1vcmUgc3VjY2Vzc2Z1bCBhdCBtYWtpbmcgZW5lbWllcyBvZiB1cyB0aGFuIGF0IG1ha2luZyBmcmVzaCBmcmllbmRzIGJ5IHR1cm5pbmcgdHJhaXRvciB0byB1cy7igJ0KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMTMiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjEzPC9iaWJsPu+8iS4gIExpa2UgRXVwaGlsZXR1cywgaGUgd2FzIGRlbm91bmNlZCBieSBUZXVjcnVzIGZvciBtdXRpbGF0aW9uIG9mIHRoZSBIZXJtYWUg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMzUiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjM1PC9iaWJsPu+8iS48L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.64'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NCIgdW5pdD0ic2VjdGlvbiIgLz5JIHJlcGxpZWQgdGhhdCBJIGNlcnRhaW5seSB0aG91Z2h0IEV1cGhpbGV0dXMgYSBzY291bmRyZWwgZm9yIGFjdGluZyBhcyBoZSBoYWQ7ICBhbHRob3VnaCBoZSBhbmQgaGlzIGNvbXBhbmlvbnMgaGFkIGZhciBsZXNzIHRvIGZlYXIgZnJvbSBteSBiZWluZyBpbiB0aGUgc2VjcmV0IHRoYW4gZnJvbSB0aGUgbWVyZSBmYWN0IHRoYXQgdGhlIGRlZWQgd2FzIGRvbmUuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHN1cHBvcnRlZCB0aGlzIGFjY291bnQgYnkgaGFuZGluZyBvdmVyIG15IHNsYXZlIGZvciB0b3J0dXJlLCB0byBwcm92ZSB0aGF0IEkgd2FzIGlsbCBhdCB0aGUgdGltZSBpbiBxdWVzdGlvbiBhbmQgaGFkIG5vdCBldmVuIGxlZnQgbXkgYmVkOyAgYW5kIHRoZSBQcnl0YW5lcyBhcnJlc3RlZCB0aGUgd29tZW4tc2VydmFudHMgaW4gdGhlIGhvdXNlIHdoaWNoIHRoZSBjcmltaW5hbHMgaGFkIHVzZWQgYXMgdGhlaXIgYmFzZS4KICAgICAgPC90cmFuc2xhdGlvbj4="
translation['1.Narr.65'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NSIgdW5pdD0ic2VjdGlvbiIgLz5UaGUgQ291bmNpbCBhbmQgdGhlIGNvbW1pc3Npb24gb2YgaW5xdWlyeSB3ZW50IGludG8gdGhlIG1hdHRlciBjbG9zZWx5LCBhbmQgd2hlbiBhdCBsZW5ndGggdGhleSBmb3VuZCB0aGF0IGl0IHdhcyBhcyBJIHNhaWQgYW5kIHRoYXQgdGhlIHdpdG5lc3NlcyBjb3Jyb2JvcmF0ZWQgbWUgd2l0aG91dCBleGNlcHRpb24sIHRoZXkgc3VtbW9uZWQgRGlvY2xlaWRlcy4gIEhlLCBob3dldmVyLCBtYWRlIGEgbG9uZyBjcm9zcy1leGFtaW5hdGlvbiB1bm5lY2Vzc2FyeSBieSBhZG1pdHRpbmcgYXQgb25jZSB0aGF0IGhlIGhhZCBiZWVuIGx5aW5nLCBhbmQgYmVnZ2VkIHRoYXQgaGUgbWlnaHQgYmUgcGFyZG9uZWQgaWYgaGUgZGlzY2xvc2VkIHdobyBoYWQgaW5kdWNlZCBoaW0gdG8gdGVsbCBoaXMgc3Rvcnk7ICB0aGUgY3VscHJpdHMsIGhlIHNhaWQsIHdlcmUgQWxjaWJpYWRlcyBvZiBQaGVndXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QSBkZW1lIGluIHRoZSBuZWlnaGJvcmhvb2Qgb2YgTWFyYXRob24uPC9ub3RlPiBhbmQgQW1pYW50dXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBZWdpbmEgQ2l0eSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQWVnaW5hIENpdHkiPkFlZ2luYTwvcGxhY2VOYW1lPi4KPC90cmFuc2xhdGlvbj4="
translation['1.Narr.66'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NiIgdW5pdD0ic2VjdGlvbiIgLz5BbGNpYmlhZGVzIGFuZCBBbWlhbnR1cyBmbGVkIGZyb20gdGhlIGNvdW50cnkgaW4gdGVycm9yOyAgYW5kIHdoZW4geW91IGhlYXJkIHRoZSBmYWN0cyB5b3Vyc2VsdmVzLCB5b3UgaGFuZGVkIERpb2NsZWlkZXMgb3ZlciB0byB0aGUgY291cnQgYW5kIHB1dCBoaW0gdG8gZGVhdGguICBZb3UgcmVsZWFzZWQgdGhlIHByaXNvbmVycyBhd2FpdGluZyBleGVjdXRpb27igJRteSByZWxhdGl2ZXMsIHdobyBvd2VkIHRoZWlyIGVzY2FwZSB0byBtZSBhbG9uZeKAlHlvdSB3ZWxjb21lZCBiYWNrIHRoZSBleGlsZXMsIGFuZCB5b3Vyc2VsdmVzIHNob3VsZGVyZWQgYXJtczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuNDUiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjQ1PC9iaWJsPi48L25vdGU+IGFuZCBkaXNwZXJzZWQsIGZyZWVkIGZyb20gZ3JhdmUgZGFuZ2VyIGFuZCBkaXN0cmVzcy4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuNDUiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjQ1PC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.67'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm90IG9ubHkgZG8gdGhlIGNpcmN1bXN0YW5jZXMgaW4gd2hpY2ggSSBoZXJlIGZvdW5kIG15c2VsZiBlbnRpdGxlIG1lIHRvIHRoZSBzeW1wYXRoeSBvZiBhbGwsIGdlbnRsZW1lbiwgYnV0IG15IGNvbmR1Y3QgY2FuIGxlYXZlIHlvdSBpbiBubyBkb3VidCBhYm91dCBteSBpbnRlZ3JpdHkuICBXaGVuIEV1cGhpbGV0dXMgc3VnZ2VzdGVkIHRoYXQgd2UgcGxlZGdlIG91cnNlbHZlcyB0byB3aGF0IHdhcyB0aGUgd29yc3QgcG9zc2libGUgdHJlYWNoZXJ5LCBJIG9wcG9zZWQgaGltLCBJIGF0dGFja2VkIGhpbSwgSSBoZWFwZWQgb24gaGltIHRoZSBzY29ybiB3aGljaCBoZSBkZXNlcnZlZC4gIFlldCBvbmNlIGhpcyBjb21wYW5pb25zIGhhZCBjb21taXR0ZWQgdGhlIGNyaW1lLCBJIGtlcHQgdGhlaXIgc2VjcmV0OyAgaXQgd2FzIFRldWNydXMgd2hvIGxvZGdlZCB0aGUgaW5mb3JtYXRpb24gd2hpY2ggbGVkIHRvIHRoZWlyIGRlYXRoIG9yIGV4aWxlLCBiZWZvcmUgd2UgaGFkIGJlZW4gdGhyb3duIGludG8gcHJpc29uIGJ5IERpb2NsZWlkZXMgb3Igd2VyZSB0aHJlYXRlbmVkIHdpdGggZGVhdGguICBBZnRlciBvdXIgaW1wcmlzb25tZW50IEkgZGVub3VuY2VkIGZvdXIgcGVyc29uczogIFBhbmFldGl1cywgRGlhY3JpdHVzLCBMeXNpc3RyYXR1cywgYW5kIENoYWVyZWRlbXVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.68'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OCIgdW5pdD0ic2VjdGlvbiIgLz5JIHdhcyByZXNwb25zaWJsZSBmb3IgdGhlIGV4aWxlIG9mIHRoZXNlIGZvdXIsIEkgYWRtaXQ7ICBidXQgSSBzYXZlZCBteSBmYXRoZXIsIG15IGJyb3RoZXItaW4tbGF3LCB0aHJlZSBjb3VzaW5zLCBhbmQgc2V2ZW4gb3RoZXIgcmVsYXRpdmVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgZmlndXJlcyBnaXZlbiBoZXJlIGRvIG5vdCBjb3JyZXNwb25kIHdpdGggdGhlIGxpc3Qgb2YgNDcsIHdoZXJlIHRoZSBmYXRoZXIsIHRoZSBicm90aGVyLWluLWxhdywgdHdvIGNvdXNpbnMsIGFuZCBmaXZlIG90aGVyIHJlbGF0aXZlcyBvbmx5IGFyZSBtZW50aW9uZWQuICBUaGUgZmF1bHR5ICBNUy4gIHRyYWRpdGlvbiBvZiA0NyDvvIhzZWUgYXBwLiAgY3JpdC4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJsYXRpbiI+YWQgbG9jLjwvZm9yZWlnbj7vvIkgIG1ha2VzIGl0IG1vcmUgcHJvYmFibGUgdGhhdCBpdCBpcyB0aGUgbGlzdCB3aGljaCBpcyBpbmNvcnJlY3Q7ICBhbmQgYWx0ZXJhdGlvbiBvZiB0aGUgbnVtZXJhbHMgZ2l2ZW4gaW4gdGhlIHByZXNlbnQgcGFzc2FnZSBpcyBub3QgYSBzYXRpc2ZhY3Rvcnkgc29sdXRpb24gb2YgdGhlIGRpZmZpY3VsdHkuPC9ub3RlPiBhbGwgb2Ygd2hvbSB3ZXJlIGFib3V0IHRvIGJlIHB1dCB0byBkZWF0aCB3cm9uZ2Z1bGx5OyAgdGhleSBvd2UgaXQgdG8gbWUgdGhhdCB0aGV5IGFyZSBzdGlsbCBsb29raW5nIG9uIHRoZSBsaWdodCBvZiBkYXksIGFuZCB0aGV5IGFyZSB0aGUgZmlyc3QgdG8gYWNrbm93bGVkZ2UgaXQuICBJbiBhZGRpdGlvbiwgdGhlIHNjb3VuZHJlbCB3aG8gaGFkIHRocm93biB0aGUgd2hvbGUgb2YgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJsYXRpbiI+YWQgbG9jLjwvZm9yZWlnbj7vvIkgIG1ha2VzIGl0IG1vcmUgcHJvYmFibGUgdGhhdCBpdCBpcyB0aGUgbGlzdCB3aGljaCBpcyBpbmNvcnJlY3Q7ICBhbmQgYWx0ZXJhdGlvbiBvZiB0aGUgbnVtZXJhbHMgZ2l2ZW4gaW4gdGhlIHByZXNlbnQgcGFzc2FnZSBpcyBub3QgYSBzYXRpc2ZhY3Rvcnkgc29sdXRpb24gb2YgdGhlIGRpZmZpY3VsdHkuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGludG8gY2hhb3MgYW5kIGVuZGFuZ2VyZWQgaGVyIHZlcnkgZXhpc3RlbmNlIHdhcyBleHBvc2VkOyAgYW5kIHlvdXIgb3duIHN1c3BlbnNlIGFuZCBzdXNwaWNpb25zIG9mIG9uZSBhbm90aGVyIHdlcmUgYXQgYW4gZW5kLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Narr.69'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHJlY29sbGVjdCB3aGV0aGVyIHdoYXQgSSBoYXZlIGJlZW4gc2F5aW5nIGlzIHRydWUsIGdlbnRsZW1lbjsgIGFuZCBpZiB5b3Uga25vdyB0aGUgZmFjdHMsIG1ha2UgdGhlbSBjbGVhciB0byB0aG9zZSB3aG8gZG8gbm90LiAgTmV4dCBJIHdpbGwgYXNrIHRoZSBjbGVyayB0byBjYWxsIHRoZSBwZXJzb25zIHdobyBvd2VkIHRoZWlyIHJlbGVhc2UgdG8gbWU7ICBubyBvbmUga25vd3Mgd2hhdCBoYXBwZW5lZCBiZXR0ZXIgdGhhbiB0aGV5LCBhbmQgbm8gb25lIGNhbiBnaXZlIHRoZSBjb3VydCBhIGJldHRlciBhY2NvdW50IG9mIGl0LiAgVGhlIHBvc2l0aW9uLCB0aGVuLCBpcyB0aGlzLCBnZW50bGVtZW46ICB0aGV5IHdpbGwgYWRkcmVzcyB5b3UgZnJvbSB0aGUgcGxhdGZvcm0gZm9yIGFzIGxvbmcgYXMgeW91IGNhcmUgdG8gbGlzdGVuIHRvIHRoZW07ICB0aGVuLCB3aGVuIHlvdSBhcmUgc2F0aXNmaWVkLCBJIHdpbGwgcHJvY2VlZCB0byB0aGUgcmVtYWluZGVyIG9mIG15IGRlZmVuY2UuIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9IldpdG5lc3NlcyI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2l0bmVzc2VzPC90aXRsZT48L3F1b3RlPgo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5XaXRuZXNzZXM8L3RpdGxlPjwvdHJhbnNsYXRpb24+"
translation['1.Narr.70'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+WW91IG5vdyBrbm93IGV4YWN0bHkgd2hhdCB0b29rIHBsYWNlIGF0IHRoZSB0aW1lLCBJIGZvciBvbmUgdGhpbmsgdGhhdCBJIGhhdmUgZ2l2ZW4gYWxsIHRoZSBleHBsYW5hdGlvbnMgbmVjZXNzYXJ5LiAgSG93ZXZlciwgc2hvdWxkIGFueSBvZiB5b3Ugd2lzaCB0byBoZWFyIG1vcmUgb3IgdGhpbmsgdGhhdCBhbnkgcG9pbnQgaGFzIG5vdCBiZWVuIGRlYWx0IHdpdGggc2F0aXNmYWN0b3JpbHksIG9yIHNob3VsZCBJIGhhdmUgb21pdHRlZCBhbnl0aGluZywgaGFzIG9ubHkgdG8gcmlzZSBhbmQgbWVudGlvbiBpdCwgYW5kIEkgd2lsbCByZXBseSB0byBoaXMgaW5xdWlyeSBhcyB3ZWxsLiAgT3RoZXJ3aXNlLCBJIHdpbGwgcHJvY2VlZCB0byBleHBsYWluIHRoZSBsZWdhbCBwb3NpdGlvbiB0byB5b3UuPC90cmFuc2xhdGlvbj4="
translation['1.Proof.71'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSJQcm9vZiIgdW5pdD0icGFydCIgLz4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjcxIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZG1pdHRlZGx5LCBDZXBoaXNpdXMgaGVyZSBjb25mb3JtZWQgd2l0aCB0aGUgbGF3IGFzIGl0IHN0YW5kcyBpbiBsb2RnaW5nIGhpcyBpbmZvcm1hdGlvbiBhZ2FpbnN0IG1lOyAgYnV0IGhlIGlzIHJlc3RpbmcgaGlzIGNhc2UgdXBvbiBhbiBvbGQgZGVjcmVlLCBtb3ZlZCBieSBJc290aW1pZGVzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JbiA8ZGF0ZSBhdXRobmFtZT0iLTQxNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxNSI+NDE1PC9kYXRlPiAgQi5DLjwvbm90ZT4gd2hpY2ggZG9lcyBub3QgY29uY2VybiBtZSBhdCBhbGwuICBJc290aW1pZGVzIHByb3Bvc2VkIHRvIGV4Y2x1ZGUgZnJvbSB0ZW1wbGVzIGFsbCB3aG8gaGFkIGNvbW1pdHRlZCBhbiBhY3Qgb2YgaW1waWV0eSBhbmQgYWRtaXR0ZWQgdGhlaXIgZ3VpbHQuICBJIGhhdmUgZG9uZSBuZWl0aGVyOiAgSSBoYXZlIG5vdCBjb21taXR0ZWQgYW55IGFjdCBvZiBpbXBpZXR5LCBub3IgaGF2ZSBJIGFkbWl0dGVkIGd1aWx0Lgo8ZGF0ZSBhdXRobmFtZT0iLTQxNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQxNSI+NDE1PC9kYXRlPiAgQi5DLjwvdHJhbnNsYXRpb24+"
translation['1.Proof.72'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MiIgdW5pdD0ic2VjdGlvbiIgLz5GdXJ0aGVyLCBJIHdpbGwgcHJvdmUgdG8geW91IHRoYXQgdGhlIGRlY3JlZSBpbiBxdWVzdGlvbiBoYXMgYmVlbiByZXBlYWxlZCBhbmQgaXMgdm9pZC4gIEkgc2hhbGwgYmUgYWRvcHRpbmcgYSBkYW5nZXJvdXMgbGluZSBvZiBkZWZlbmNlIGhlcmUsIEkga25vdzsgIGlmIEkgZmFpbCB0byBjb252aW5jZSB5b3UsIEkgc2hhbGwgbXlzZWxmIGJlIHRoZSBzdWZmZXJlciwgYW5kIGlmIEkgc3VjY2VlZCBpbiBjb252aW5jaW5nIHlvdSwgSSBzaGFsbCBoYXZlIGNsZWFyZWQgbXkgb3Bwb25lbnRzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIGlmIEFuZG9jaWRlcyBjYW4gcHJvdmUgdGhhdCBoZSBpcyBwcm90ZWN0ZWQgYnkgdGhlIGFtbmVzdHksIGhlIHdpbGwgZW8gaXBzbyBjcmVhdGUgYSBwcmVjZWRlbnQgd2hlcmVieSBoaXMgYWNjdXNlcnMgd2lsbCB0aGVtc2VsdmVzIGJlIGFibGUgdG8gY2xhaW0gZXhlbXB0aW9uIGZyb20gcHVuaXNobWVudCBmb3IgdGhlIHZhcmlvdXMgb2ZmZW5jZXMgd2hpY2ggdGhleSBjb21taXR0ZWQgYmVmb3JlIDQwMy4gIFRoZSBuYXR1cmUgb2YgdGhlc2UgaXMgZXhwbGFpbmVkIGluIGRldGFpbCBsYXRlciDvvIggPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuOTIiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjkyPC9iaWJsPiBldCBzcXEu77yJLjwvbm90ZT4gSG93ZXZlciwgdGhlIHRydXRoIHNoYWxsIGJlIHRvbGQuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjkyIiB2YWxpZD0ieWVzIj5BbmRvYy4gMS45MjwvYmlibD4gZXQgc3FxLu+8iS48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.73'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhlIGxvc3Mgb2YgeW91ciBmbGVldCBhbmQgdGhlIGludmVzdG1lbnQgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBmbGVldCB3YXMgbG9zdCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMDA3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAwMDcwIj5BZWdvc3BvdGFtaTwvcGxhY2VOYW1lPiwgU2VwdC4gIDQwNTsgIHRoaXMgZGlzYXN0ZXIgd2FzIGZvbGxvd2VkIGJ5IHRoZSBzaWVnZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHdoaWNoIGZpbmFsbHkgY2FwaXR1bGF0ZWQgaW4gQXByaWwgNDA0LiAgVGhlIGRlY3JlZSBvZiBQYXRyb2NsZWlkZXMgd2FzIHBhc3NlZCBpbiB0aGUgYXV0dW1uIG9mIDQwNS48L25vdGU+IHlvdSBkaXNjdXNzZWQgd2F5cyBhbmQgbWVhbnMgb2YgcmUtdW5pdGluZyB0aGUgY2l0eS4gIEFzIGEgcmVzdWx0IHlvdSBkZWNpZGVkIHRvIHJlaW5zdGF0ZSB0aG9zZSB3aG8gaGFkIGxvc3QgdGhlaXIgY2l2aWMgcmlnaHRzLCBhIHJlc29sdXRpb24gbW92ZWQgYnkgUGF0cm9jbGVpZGVzLiAgTm93IHdobyB3ZXJlIHRoZSBkaXNmcmFuY2hpc2VkLCBhbmQgd2hhdCB3ZXJlIHRoZWlyIGRpZmZlcmVudCBkaXNhYmlsaXRpZXM/IEkgd2lsbCBleHBsYWluLjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw2MDAwMDcwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDYwMDAwNzAiPkFlZ29zcG90YW1pPC9wbGFjZU5hbWU+LCBTZXB0LiAgNDA1OyAgdGhpcyBkaXNhc3RlciB3YXMgZm9sbG93ZWQgYnkgdGhlIHNpZWdlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgd2hpY2ggZmluYWxseSBjYXBpdHVsYXRlZCBpbiBBcHJpbCA0MDQuICBUaGUgZGVjcmVlIG9mIFBhdHJvY2xlaWRlcyB3YXMgcGFzc2VkIGluIHRoZSBhdXR1bW4gb2YgNDA1Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Gb3IgdGhlIHJlbGV2YW5jZSBvZiB0aGUgZm9sbG93aW5nIHBhcmFncmFwaHMgc2VlIEludHJvZC4gIHBwLiAgMzMxLTMzMi48L25vdGU+IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GaXJzdCwgc3RhdGUtZGVidG9ycy4gIEFsbCB3aG8gaGFkIGJlZW4gY29uZGVtbmVkIG9uIHRoZWlyIGFjY291bnRzIHdoZW4gdmFjYXRpbmcgYSBwdWJsaWMgb2ZmaWNlLCBhbGwgd2hvIGhhZCBiZWVuIGNvbmRlbW5lZCBhcyBqdWRnZW1lbnQtZGVidG9ycyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+UGVyc29ucyBhZ2FpbnN0IHdob20ganVkZ2VtZW50IGhhZCBiZWVuIGdpdmVuIGluIGEgY2l2aWwgYWN0aW9uLCBidXQgd2hvIHJlZnVzZWQg77yIYe+8iSAgdG8gcGF5IHRoZSBkYW1hZ2VzIGF3YXJkZWQgdG8gdGhlIHBsYWludGlmZiBieSB0aGUgY291cnQsIO+8iGLvvIkgIHRvIGNlZGUgdG8gdGhlIHBsYWludGlmZiBwcm9wZXJ0eSB0byB3aGljaCBoZSBoYWQgZXN0YWJsaXNoZWQgaGlzIGNsYWltLCB3ZXJlIGxpYWJsZSB0byBhIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs604b23zrrOtyDhvJDOvs6/4b27zrvOt8+CPC9mb3JlaWduPi4gU3VjaCBzdWl0cyB3ZXJlIGNvbW1vbiBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHdoZXJlIHRoZSBtYWNoaW5lcnkgZm9yIGVuc3VyaW5nIHRoYXQgYSBqdWRnZW1lbnQgd2FzIGVuZm9yY2VkIHdhcyBsYW1lbnRhYmx5IGRlZmVjdGl2ZS48L25vdGU+IGFsbCB0aG9zZSBmaW5lZCBpbiBhIHB1YmxpYyBhY3Rpb24gb3IgdW5kZXIgdGhlIHN1bW1hcnkganVyaXNkaWN0aW9uIG9mIGEgbWFnaXN0cmF0ZSwgYWxsIHdobyBmYXJtZWQgdGF4ZXMgYW5kIHRoZW4gZGVmYXVsdGVkIG9yIHdlcmUgbGlhYmxlIHRvIHRoZSBzdGF0ZSBhcyBzdXJldGllcyBmb3IgYSBkZWZhdWx0ZXIsPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrThvbfOus63IOG8kM6+zr/hvbvOu863z4I8L2ZvcmVpZ24+LiBTdWNoIHN1aXRzIHdlcmUgY29tbW9uIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgd2hlcmUgdGhlIG1hY2hpbmVyeSBmb3IgZW5zdXJpbmcgdGhhdCBhIGp1ZGdlbWVudCB3YXMgZW5mb3JjZWQgd2FzIGxhbWVudGFibHkgZGVmZWN0aXZlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UYXgtZmFybWVycyB1c3VhbGx5IGZvcm1lZCB0aGVtc2VsdmVzIGludG8gY29tcGFuaWVzIGhlYWRlZCBieSBhbiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDPgc+H4b29zr3Ot8+CPC9mb3JlaWduPiB3aG8gcGVyc29uYWxseSBjb250cmFjdGVkIHdpdGggdGhlIHN0YXRlIGZvciB0aGUgcHVyY2hhc2Ugb2YgdGhlIHJpZ2h0IHRvIGNvbGxlY3QgYSBnaXZlbiB0YXguICBUaGUgYWdyZWVkIHN1bSB3YXMgbm90IHBhaWQgdW50aWwgdGhlIHRheCBoYWQgYmVlbiBjb2xsZWN0ZWQ7ICBhbmQgc28gdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gM+Bz4fhvb3Ovc63z4I8L2ZvcmVpZ24+IGhhZCB0byBmdXJuaXNoIHN1cmV0aWVzLCB3aG8gYmVjYW1lIGxpYWJsZSBpZiBoZSBoaW1zZWxmIGRlZmF1bHRlZC4gIEl0IHdhcyB0aGUgcHJhY3RpY2UgdG8gYXVjdGlvbiB0aGUgdmFyaW91cyB0YXhlcywgdGhlIGhpZ2hlc3QgYmlkZGVyIG9idGFpbmluZyB0aGUgcmlnaHQgdG8gZmFybSB0aGVtLCBjZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMTMzIiB2YWxpZD0ieWVzIj5BbmRvYy4gMS4xMzM8L2JpYmw+Ljwvbm90ZT4gaGFkIHRvIHBheSB3aXRoaW4gZWlnaHQgUHJ5dGFuaWVzOyAgb3RoZXJ3aXNlLCB0aGUgc3VtIGR1ZSB3YXMgZG91YmxlZCBhbmQgdGhlIGRlbGlucXVlbnQncyBwcm9wZXJ0eSBkaXN0cmFpbmVkIHVwb24uPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAz4HPh+G9vc69zrfPgjwvZm9yZWlnbj4gd2hvIHBlcnNvbmFsbHkgY29udHJhY3RlZCB3aXRoIHRoZSBzdGF0ZSBmb3IgdGhlIHB1cmNoYXNlIG9mIHRoZSByaWdodCB0byBjb2xsZWN0IGEgZ2l2ZW4gdGF4LiAgVGhlIGFncmVlZCBzdW0gd2FzIG5vdCBwYWlkIHVudGlsIHRoZSB0YXggaGFkIGJlZW4gY29sbGVjdGVkOyAgYW5kIHNvIHRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDPgc+H4b29zr3Ot8+CPC9mb3JlaWduPiBoYWQgdG8gZnVybmlzaCBzdXJldGllcywgd2hvIGJlY2FtZSBsaWFibGUgaWYgaGUgaGltc2VsZiBkZWZhdWx0ZWQuICBJdCB3YXMgdGhlIHByYWN0aWNlIHRvIGF1Y3Rpb24gdGhlIHZhcmlvdXMgdGF4ZXMsIHRoZSBoaWdoZXN0IGJpZGRlciBvYnRhaW5pbmcgdGhlIHJpZ2h0IHRvIGZhcm0gdGhlbSwgY2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjEzMyIgdmFsaWQ9InllcyI+QW5kb2MuIDEuMTMzPC9iaWJsPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHNpeCBjbGFzc2VzIG9mIHN0YXRlLWRlYnRvciBoZXJlIGVudW1lcmF0ZWQgc3VmZmVyZWQgZGlzZnJhbmNoaXNlbWVudCBvbmx5IHNvIGxvbmcgYXMgdGhlaXIgZGVidCByZW1haW5lZCB1bnBhaWQuICBUaGV5IHdlcmUgYWxsb3dlZCBlaWdodCBQcnl0YW5pZXMg77yIaS5lLiByb3VnaGx5IG5pbmUgbW9udGhz77yJICBpbiB3aGljaCB0byBmaW5kIHRoZSBtb25leTsgIGF0IHRoZSBlbmQgb2YgdGhhdCB0aW1lIHRoZWlyIHByb3BlcnR5IHdhcyBkaXN0cmFpbmVkIHVwb24gZm9yIGRvdWJsZSB0aGUgb3JpZ2luYWwgYW1vdW50LiAgU2hvdWxkIHRoZSBjb25maXNjYXRpb24gZmFpbCB0byBwcm9kdWNlIHRoZSByZXF1aXNpdGUgc3VtLCB0aGV5IHJlbWFpbmVkIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8hM+EzrnOvM6/zrk8L2ZvcmVpZ24+IHVudGlsIHRoZSBiYWxhbmNlIHdhcyBmb3J0aGNvbWluZy48L25vdGU+Cjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8hM+EzrnOvM6/zrk8L2ZvcmVpZ24+IHVudGlsIHRoZSBiYWxhbmNlIHdhcyBmb3J0aGNvbWluZy48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.74'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3VjaCB3YXMgb25lIGZvcm0gb2YgZGlzZnJhbmNoaXNlbWVudC4gIEFjY29yZGluZyB0byBhIHNlY29uZCwgZGVsaW5xdWVudHMgbG9zdCBhbGwgcGVyc29uYWwgcmlnaHRzLCBidXQgcmV0YWluZWQgcG9zc2Vzc2lvbiBvZiB0aGVpciBwcm9wZXJ0eS4gIFRoaXMgY2xhc3MgaW5jbHVkZWQgYWxsIHBlcnNvbnMgY29udmljdGVkIG9mIHRoZWZ0IG9yIG9mIGFjY2VwdGluZyBicmliZXPigJRpdCB3YXMgbGFpZCBkb3duIHRoYXQgYm90aCB0aGV5IGFuZCB0aGVpciBkZXNjZW5kYW50cyBzaG91bGQgbG9zZSB0aGVpciBwZXJzb25hbCByaWdodHMuICBTaW1pbGFybHksIGFsbCB3aG8gZGVzZXJ0ZWQgb24gdGhlIGZpZWxkIG9mIGJhdHRsZSwgd2hvIHdlcmUgZm91bmQgZ3VpbHR5IG9mIGV2YXNpb24gb2YgbWlsaXRhcnkgc2VydmljZSwgb2YgY293YXJkaWNlLCBvciBvZiB3aXRoaG9sZGluZyBhIHNoaXAgZnJvbSBhY3Rpb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPldoZW4gVHJpZXJhcmNocy48L25vdGU+IGFsbCB3aG8gdGhyZXcgYXdheSB0aGVpciBzaGllbGRzLCBvciB3ZXJlIHRocmljZSBjb252aWN0ZWQgb2YgZ2l2aW5nIHBlcmp1cmVkIGV2aWRlbmNlIG9yIG9mIGZhbHNlbHkgZW5kb3JzaW5nIGEgc3VtbW9ucyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+V2hlbmV2ZXIgYSBwbGFpbnRpZmYgaGFkIHRvIHNlcnZlIGEgc3VtbW9ucyBpbiBwZXJzb24sIHRoZSBsYXcgcmVxdWlyZWQgdGhhdCBoZSBzaG91bGQgZG8gc28gaW4gdGhlIHByZXNlbmNlIG9mIHdpdG5lc3Nlcy4gIFRoZSBuYW1lcyBvZiB0aGVzZSB3aXRuZXNzZXMgd2VyZSBlbnRlcmVkIG9uIHRoZSB3cml0LiAgSWYgdGhlIHBsYWludGlmZiBzZWN1cmVkIHRoZSB3aXRuZXNzZXMnIG5hbWVzIHdpdGhvdXQgc2VydmluZyB0aGUgc3VtbW9ucyBhbmQgc28gd29uIHRoZSBjYXNlIGJ5IGRlZmF1bHQsIHRoZSBkZWZlbmRhbnQgaGFkIHRoZSByaWdodCB0byBicmluZyBhIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6zz4HOsc+G4b20IM+IzrXPhc60zr/Ous67zrfPhM614b23zrHPgjwvZm9yZWlnbj4gYWdhaW5zdCB0aGUgd2l0bmVzc2VzIO+8iCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous67zrfPhOG/hs+BzrXPgjwvZm9yZWlnbj7vvIkgIGNvbmNlcm5lZC48L25vdGU+IG9yIHdobyB3ZXJlIGZvdW5kIGd1aWx0eSBvZiBtYWx0cmVhdGluZyB0aGVpciBwYXJlbnRzLCB3ZXJlIGRlcHJpdmVkIG9mIHRoZWlyIHBlcnNvbmFsIHJpZ2h0cywgd2hpbGUgcmV0YWluaW5nIHBvc3Nlc3Npb24gb2YgdGhlaXIgcHJvcGVydHkuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6zz4HOsc+G4b20IM+IzrXPhc60zr/Ous67zrfPhM614b23zrHPgjwvZm9yZWlnbj4gYWdhaW5zdCB0aGUgd2l0bmVzc2VzIO+8iCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous67zrfPhOG/hs+BzrXPgjwvZm9yZWlnbj7vvIkgIGNvbmNlcm5lZC48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.75'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T3RoZXJzIGFnYWluIGhhZCB0aGVpciByaWdodHMgY3VydGFpbGVkIGluIHNwZWNpZmllZCBkaXJlY3Rpb25zOyAgdGhleSB3ZXJlIG9ubHkgcGFydGlhbGx5LCBub3Qgd2hvbGx5LCBkaXNmcmFuY2hpc2VkLiAgVGhlIHNvbGRpZXJzIHdobyByZW1haW5lZCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gdW5kZXIgdGhlIEZvdXIgSHVuZHJlZCBhcmUgYSBjYXNlIGluIHBvaW50Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGlzIHBlbmFsdHkgYXBwZWFycyB0byBoYXZlIGJlZW4gaW5mbGljdGVkIGluIDQxMCwgYWZ0ZXIgdGhlIHJlc3RvcmF0aW9uIG9mIHRoZSBkZW1vY3JhY3kuPC9ub3RlPiBUaGV5IGVuam95ZWQgYWxsIHRoZSByaWdodHMgb2Ygb3JkaW5hcnkgY2l0aXplbnMsIGV4Y2VwdCB0aGF0IHRoZXkgd2VyZSBmb3JiaWRkZW4gdG8gc3BlYWsgaW4gdGhlIEFzc2VtYmx5IG9yIGJlY29tZSBtZW1iZXJzIG9mIHRoZSBDb3VuY2lsLiAgVGhleSBsb3N0IHRoZWlyIHJpZ2h0cyBpbiB0aGVzZSB0d28gcmVzcGVjdHMsIGJlY2F1c2UgaW4gdGhlaXIgY2FzZSB0aGUgbGltaXRlZCBkaXNhYmlsaXR5IHRvb2sgdGhpcyBwYXJ0aWN1bGFyIGZvcm0uCjwvdHJhbnNsYXRpb24+"
translation['1.Proof.76'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NiIgdW5pdD0ic2VjdGlvbiIgLz5PdGhlcnMgd2VyZSBkZXByaXZlZCBvZiB0aGUgcmlnaHQgb2YgYnJpbmdpbmcgYW4gaW5kaWN0bWVudCwgb3Igb2YgbG9kZ2luZyBhbiBpbmZvcm1hdGlvbjogIG90aGVycyBvZiBzYWlsaW5nIHVwIHRoZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjYzOCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjM4Ij5IZWxsZXNwb250PC9wbGFjZU5hbWU+LCBvciBvZiBjcm9zc2luZyB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMjc2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAyNzY1Ij5Jb25pYTwvcGxhY2VOYW1lPjogIHdoaWxlIHlldCBvdGhlcnMgd2VyZSBzcGVjaWZpY2FsbHkgZGViYXJyZWQgZnJvbSBlbnRlcmluZyB0aGUgQWdvcmEuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Zb3UgZW5hY3RlZCwgdGhlbiwgdGhhdCBib3RoIHRoZSBvcmlnaW5hbHMgYW5kIGFsbCBleHRhbnQgY29waWVzIG9mIHRoZXNlIHNldmVyYWwgZGVjcmVlcyBzaG91bGQgYmUgY2FuY2VsbGVkLCBhbmQgeW91ciBkaWZmZXJlbmNlcyBlbmRlZCBieSBhbiBleGNoYW5nZSBvZiBwbGVkZ2VzIG9uIHRoZSBBY3JvcG9saXMuICBLaW5kbHkgcmVhZCB0aGUgZGVjcmVlIG9mIFBhdHJvY2xlaWRlcyB3aGVyZWJ5IHRoaXMgd2FzIGVmZmVjdGVkLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgZGVjcmVlIHJlaW5zdGF0ZXMg77yIYe+8iSAgcHVibGljIGRlYnRvcnMgd2hvc2UgbmFtZXMgd2VyZSBzdGlsbCBvbiB0aGUgb2ZmaWNpYWwgcmVnaXN0ZXJzIGluIEp1bmUtSnVseSA0MDUsIO+8iGLvvIkgIHBvbGl0aWNhbCBvZmZlbmRlcnMgd2hvIGhhZCBzdWZmZXJlZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDPhM65zrzhvbfOsTwvZm9yZWlnbj4gaW4gNDEwIGFmdGVyIHRoZSBkb3duZmFsbCBvZiB0aGUgRm91ciBIdW5kcmVkIGFuZCB0aGUgcmVzdG9yYXRpb24gb2YgdGhlIGZ1bGwgZGVtb2NyYWN5LiAgVGhlc2UgaW5jbHVkZSBib3RoIG1lbWJlcnMgb2YgdGhlIEZvdXIgSHVuZHJlZCAgYW5kIHRoZWlyIHN1cHBvcnRlcnMuICBBbiBleGNlcHRpb24gaXMgbWFkZSwgaG93ZXZlciwgb2YgdGhvc2Ugb2xpZ2FyY2hzIHdobyBmbGVkIHRvIERlY2VsZWEg77yIZS5nLiBQZWlzYW5kZXIgYW5kIENoYXJpY2xlc++8iSwgYW5kIG9mIHBlcnNvbnMgaW4gZXhpbGUgZm9yIGhvbWljaWRlLCBtYXNzYWNyZSwgIG9yIGF0dGVtcHRlZCB0eXJhbm55LiAgVGhlIGxhc3QgdHdvIGNyaW1lcyBhcmUgb25seSBtZW50aW9uZWQgYmVjYXVzZSBQYXRyb2NsZWlkZXMgaXMgaGVyZSBxdW90aW5nIGZyb20gYSBsYXcgb2YgU29sb24ncyBhbmQgd2lzaGVzIHRvIGJlIGNvbXBsZXRlLiAgVHJpYWxzIGZvciBtYXNzYWNyZSBvciAgYXR0ZW1wdGVkIHR5cmFubnkgaGFkIGxvbmcgYmVlbiB1bmhlYXJkIG9mLiAgRm9yIHRoZSB0ZXh0IG9mIHRoZSBTb2xvbmlhbiBsYXcgc2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsdXQuIFNvbC4gMTkiIHZhbGlkPSJ5ZXMiPlBsdXQuIFNvbC4gMTk8L2JpYmw+Ljwvbm90ZT4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAz4TOuc684b23zrE8L2ZvcmVpZ24+IGluIDQxMCBhZnRlciB0aGUgZG93bmZhbGwgb2YgdGhlIEZvdXIgSHVuZHJlZCBhbmQgdGhlIHJlc3RvcmF0aW9uIG9mIHRoZSBmdWxsIGRlbW9jcmFjeS4gIFRoZXNlIGluY2x1ZGUgYm90aCBtZW1iZXJzIG9mIHRoZSBGb3VyIEh1bmRyZWQgIGFuZCB0aGVpciBzdXBwb3J0ZXJzLiAgQW4gZXhjZXB0aW9uIGlzIG1hZGUsIGhvd2V2ZXIsIG9mIHRob3NlIG9saWdhcmNocyB3aG8gZmxlZCB0byBEZWNlbGVhIO+8iGUuZy4gUGVpc2FuZGVyIGFuZCBDaGFyaWNsZXPvvIksIGFuZCBvZiBwZXJzb25zIGluIGV4aWxlIGZvciBob21pY2lkZSwgbWFzc2FjcmUsICBvciBhdHRlbXB0ZWQgdHlyYW5ueS4gIFRoZSBsYXN0IHR3byBjcmltZXMgYXJlIG9ubHkgbWVudGlvbmVkIGJlY2F1c2UgUGF0cm9jbGVpZGVzIGlzIGhlcmUgcXVvdGluZyBmcm9tIGEgbGF3IG9mIFNvbG9uJ3MgYW5kIHdpc2hlcyB0byBiZSBjb21wbGV0ZS4gIFRyaWFscyBmb3IgbWFzc2FjcmUgb3IgIGF0dGVtcHRlZCB0eXJhbm55IGhhZCBsb25nIGJlZW4gdW5oZWFyZCBvZi4gIEZvciB0aGUgdGV4dCBvZiB0aGUgU29sb25pYW4gbGF3IHNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbHV0LiBTb2wuIDE5IiB2YWxpZD0ieWVzIj5QbHV0LiBTb2wuIDE5PC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.77'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iRGVjcmVlIj48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5EZWNyZWU8L3RpdGxlPk9uIHRoZSBtb3Rpb24gb2YgUGF0cm9jbGVpZGVzOiAgd2hlcmVhcyB0aGUgQXRoZW5pYW5zIGhhdmUgZW5hY3RlZCB0aGF0IHBlcnNvbnMgZGlzZnJhbmNoaXNlZCBhbmQgcHVibGljIGRlYnRvcnMgbWF5IHNwZWFrIGFuZCBwcm9wb3NlIG1lYXN1cmVzIGluIHRoZSBBc3NlbWJseSB3aXRoIGltcHVuaXR5LCB0aGUgUGVvcGxlIHNoYWxsIHBhc3MgdGhlIGRlY3JlZSB3aGljaCB3YXMgcGFzc2VkIGF0IHRoZSB0aW1lIG9mIHRoZSBQZXJzaWFuIFdhcnMgYW5kIHdoaWNoIHByb3ZlZCBvZiBiZW5lZml0IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPi4gIEFzIHRvdWNoaW5nIHN1Y2ggb2YgdGhvc2UgcmVnaXN0ZXJlZCB3aXRoIHRoZSBTdXBlcmludGVuZGVudHMgb2YgUmV2ZW51ZSwgdGhlIFRyZWFzdXJlcnMgb2YgQXRoZW5hIGFuZCB0aGUgb3RoZXIgRGVpdGllcywgb3IgdGhlIEJhc2lsZXVzLCBhcyBoYWQgbm90IGJlZW4gcmVtb3ZlZCBmcm9tIHRoZSByZWdpc3RlciBiZWZvcmUgdGhlIGxhc3Qgc2l0dGluZyBvZiB0aGUgQ291bmNpbCBpbiB0aGUgYXJjaG9uc2hpcCBvZiBDYWxsaWFzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DYWxsaWFzIHdhcyBBcmNob24gZnJvbSA0MDYgdG8gNDA1LiAgSGlzIHllYXIgb2Ygb2ZmaWNlIHRlcm1pbmF0ZWQgaW4gSnVuZS1KdWx5IDQwNSwgYW5kIHRoZSBEZWNyZWUgb2YgUGF0cm9jbGVpZGVzIGZvbGxvd2VkIGR1cmluZyB0aGUgYXV0dW1uLjwvbm90ZT46PC9xdW90ZT4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RGVjcmVlPC90aXRsZT5PbiB0aGUgbW90aW9uIG9mIFBhdHJvY2xlaWRlczogIHdoZXJlYXMgdGhlIEF0aGVuaWFucyBoYXZlIGVuYWN0ZWQgdGhhdCBwZXJzb25zIGRpc2ZyYW5jaGlzZWQgYW5kIHB1YmxpYyBkZWJ0b3JzIG1heSBzcGVhayBhbmQgcHJvcG9zZSBtZWFzdXJlcyBpbiB0aGUgQXNzZW1ibHkgd2l0aCBpbXB1bml0eSwgdGhlIFBlb3BsZSBzaGFsbCBwYXNzIHRoZSBkZWNyZWUgd2hpY2ggd2FzIHBhc3NlZCBhdCB0aGUgdGltZSBvZiB0aGUgUGVyc2lhbiBXYXJzIGFuZCB3aGljaCBwcm92ZWQgb2YgYmVuZWZpdCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4uICBBcyB0b3VjaGluZyBzdWNoIG9mIHRob3NlIHJlZ2lzdGVyZWQgd2l0aCB0aGUgU3VwZXJpbnRlbmRlbnRzIG9mIFJldmVudWUsIHRoZSBUcmVhc3VyZXJzIG9mIEF0aGVuYSBhbmQgdGhlIG90aGVyIERlaXRpZXMsIG9yIHRoZSBCYXNpbGV1cywgYXMgaGFkIG5vdCBiZWVuIHJlbW92ZWQgZnJvbSB0aGUgcmVnaXN0ZXIgYmVmb3JlIHRoZSBsYXN0IHNpdHRpbmcgb2YgdGhlIENvdW5jaWwgaW4gdGhlIGFyY2hvbnNoaXAgb2YgQ2FsbGlhcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q2FsbGlhcyB3YXMgQXJjaG9uIGZyb20gNDA2IHRvIDQwNS4gIEhpcyB5ZWFyIG9mIG9mZmljZSB0ZXJtaW5hdGVkIGluIEp1bmUtSnVseSA0MDUsIGFuZCB0aGUgRGVjcmVlIG9mIFBhdHJvY2xlaWRlcyBmb2xsb3dlZCBkdXJpbmcgdGhlIGF1dHVtbi48L25vdGU+OjwvdHJhbnNsYXRpb24+"
translation['1.Proof.78'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OCIgdW5pdD0ic2VjdGlvbiIgLz48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJDb250aW51ZWQiPmFsbCB3aG8gYmVmb3JlIHRoYXQgZGF0ZSBoYWQgYmVlbiBkaXNmcmFuY2hpc2VkIGFzIGRlYnRvcnM6ICBvciBoYWQgYmVlbiBmb3VuZCBndWlsdHkgb2YgbWFsYWRtaW5pc3RyYXRpb24gYnkgdGhlIEF1ZGl0b3JzIGFuZCB0aGVpciBhc3Nlc3NvcnMgYXQgdGhlIEF1ZGl0b3JzJyBvZmZpY2VzOiAgb3IgaGFkIGJlZW4gaW5kaWN0ZWQgZm9yIG1hbGFkbWluaXN0cmF0aW9uLCBidXQgaGFkIG5vdCBhcyB5ZXQgYmVlbiBwdWJsaWNseSB0cmllZDogIG9yICZsdDtoYWQgYmVlbiBjb25kZW1uZWQgdG8gc3VmZmVyJmd0OyBzcGVjaWZpYyBkaXNhYmlsaXRpZXM6ICBvciBoYWQgYmVlbiBjb25kZW1uZWQgYXMgc3VyZXRpZXMgZm9yIGEgZGVmYXVsdGVyOyAgYW5kIGFsbCB3aG8gd2VyZSByZWNvcmRlZCBhcyBtZW1iZXJzIG9mIHRoZSBGb3VyIEh1bmRyZWQ6ICBvciB3aG8gaGFkIHJlY29yZGVkIGFnYWluc3QgdGhlbSBhbnkgYWN0IHBlcmZvcm1lZCB1bmRlciB0aGUgb2xpZ2FyY2h54oCUYWx3YXkgZXhjZXB0aW5nIHRob3NlIHB1YmxpY2x5IHJlY29yZGVkIGFzIGZ1Z2l0aXZlczogIHRob3NlIHdobyBoYXZlIGJlZW4gdHJpZWQgZm9yIGhvbWljaWRlIGJ5IHRoZSBBcmVvcGFndXMsIG9yIGJ5IHRoZSBFcGhldGFlLCB3aGV0aGVyIHNpdHRpbmcgYXQgdGhlIFByeWFuZXVtIG9yIHRoZSBEZWxwaGluaXVtLCB1bmRlciB0aGUgUHJlc2lkZW5jeSBvZiB0aGUgQmFzaWxldXMsIGFuZCBhcmUgbm93IGluIGV4aWxlIG9yIHVuZGVyIHNlbnRlbmNlIG9mIGRlYXRoPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBBcmVvcGFndXMgdHJpZWQgY2FzZXMgb2Ygd2lsZnVsIG11cmRlci4gIFRoZSBmaWZ0eS1vbmUgRXBoZXRhZSBzYXQgaW4gZGlmZmVyZW50IGNvdXJ0cyBhY2NvcmRpbmcgdG8gdGhlIG5hdHVyZSBvZiB0aGUgb2ZmZW5jZSB3aGljaCB0aGV5IHdlcmUgdHJ5aW5nLCBidXQgYWx3YXlzIGluIHRoZSBvcGVuIGFpciBmb3IgcmVsaWdpb3VzIHJlYXNvbnMuICBTaXR0aW5nIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM+A4b22IM6gz4HPhc+EzrHOvc614b234b+zPC9mb3JlaWduPiwgaW4gdGhlIHByZWNpbmN0cyBvZiB0aGUgUHJ5dGFuZXVtLCB0aGV5IGhlYXJkIGNhc2VzIG9mIGp1c3RpZmlhYmxlIGhvbWljaWRlIO+8iCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhuG9uc69zr/PgiDOtOG9t866zrHOuc6/z4I8L2ZvcmVpZ24+77yJOiAgc2l0dGluZyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDPgOG9tiDOlM61zrvPhs65zr3hvbfhv7M8L2ZvcmVpZ24+LCBpbiB0aGUgcHJlY2luY3RzIG9mIHRoZSB0ZW1wbGUgb2YgQXBvbGxvIERlbHBoaW5pdXMsIHRoZXkgaGVhcmQgY2FzZXMgb2YgaG9taWNpZGUgd2hlcmUgdGhlIGNyaW1pbmFsIHdhcyBhIHBlcnNvbiBvciBwZXJzb25zIHVua25vd24gb3Igd2hlcmUgZGVhdGggaGFkIGJlZW4gY2F1c2VkIGJ5IGFuIGluYW5pbWF0ZSBpbnN0cnVtZW50LiAgVGhleSBmdXJ0aGVyIG1ldCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDPgOG9tiDOoM6xzrvOu86xzrThvbfhv7M8L2ZvcmVpZ24+IHRvIHRyeSBjYXNlcyBvZiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhuG9uc69zr/PgiDhvIDOus6/4b27z4POuc6/z4I8L2ZvcmVpZ24+IGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Oss6/4b27zrvOtc+Fz4POuc+CIM+G4b25zr3Ov8+FIOG8gM66zr/Phc+D4b23zr/PhTwvZm9yZWlnbj7vvIhjZi4gQW50aXBob24sIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkNob3JldXRlczwvdGl0bGU+LCBsbnRyb2Qu77yJOyAgYW5kIGluIFBocmVhdHRvLCBhIHF1YXJ0ZXIgb2YgUGVpcmFldXMgb24gdGhlIHNlYS1zaG9yZSwgdG8gdHJ5IHBlcnNvbnMgYWxyZWFkeSBpbiBleGlsZSBmb3IgaG9taWNpZGUgYW5kIGNoYXJnZWQgd2l0aCBhIHNlY29uZCBtdXJkZXIsIGNvbW1pdHRlZCBiZWZvcmUgdGhleSBxdWl0dGVkIEF0dGljYS4gIFRoZSBhY2N1c2VkIHBsZWFkZWQgZnJvbSBhIGJvYXQuICBUaGVzZSBsYXN0IHR3byBjb3VydHMgYXJlIG5vdCBtZW50aW9uZWQgaGVyZS4gIFNlZSBhbHNvIEFudGlwaG9uLCA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UZXRyYWxvZ2llczwvdGl0bGU+LCBHZW4uICBJbnRyb2QuPC9ub3RlPjogIGFuZCB0aG9zZSBndWlsdHkgb2YgbWFzc2FjcmUgb3IgYXR0ZW1wdGVkIHR5cmFubnnigJQ8L3F1b3RlPgo8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIEFyZW9wYWd1cyB0cmllZCBjYXNlcyBvZiB3aWxmdWwgbXVyZGVyLiAgVGhlIGZpZnR5LW9uZSBFcGhldGFlIHNhdCBpbiBkaWZmZXJlbnQgY291cnRzIGFjY29yZGluZyB0byB0aGUgbmF0dXJlIG9mIHRoZSBvZmZlbmNlIHdoaWNoIHRoZXkgd2VyZSB0cnlpbmcsIGJ1dCBhbHdheXMgaW4gdGhlIG9wZW4gYWlyIGZvciByZWxpZ2lvdXMgcmVhc29ucy4gIFNpdHRpbmcgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQz4DhvbYgzqDPgc+Fz4TOsc69zrXhvbfhv7M8L2ZvcmVpZ24+LCBpbiB0aGUgcHJlY2luY3RzIG9mIHRoZSBQcnl0YW5ldW0sIHRoZXkgaGVhcmQgY2FzZXMgb2YganVzdGlmaWFibGUgaG9taWNpZGUg77yIIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+G4b25zr3Ov8+CIM604b23zrrOsc65zr/PgjwvZm9yZWlnbj7vvIk6ICBzaXR0aW5nIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM+A4b22IM6UzrXOu8+GzrnOveG9t+G/szwvZm9yZWlnbj4sIGluIHRoZSBwcmVjaW5jdHMgb2YgdGhlIHRlbXBsZSBvZiBBcG9sbG8gRGVscGhpbml1cywgdGhleSBoZWFyZCBjYXNlcyBvZiBob21pY2lkZSB3aGVyZSB0aGUgY3JpbWluYWwgd2FzIGEgcGVyc29uIG9yIHBlcnNvbnMgdW5rbm93biBvciB3aGVyZSBkZWF0aCBoYWQgYmVlbiBjYXVzZWQgYnkgYW4gaW5hbmltYXRlIGluc3RydW1lbnQuICBUaGV5IGZ1cnRoZXIgbWV0IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM+A4b22IM6gzrHOu867zrHOtOG9t+G/szwvZm9yZWlnbj4gdG8gdHJ5IGNhc2VzIG9mIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+G4b25zr3Ov8+CIOG8gM66zr/hvbvPg865zr/PgjwvZm9yZWlnbj4gYW5kIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/hvbvOu861z4XPg865z4Igz4bhvbnOvc6/z4Ug4byAzrrOv8+Fz4PhvbfOv8+FPC9mb3JlaWduPu+8iGNmLiBBbnRpcGhvbiwgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2hvcmV1dGVzPC90aXRsZT4sIGxudHJvZC7vvIk7ICBhbmQgaW4gUGhyZWF0dG8sIGEgcXVhcnRlciBvZiBQZWlyYWV1cyBvbiB0aGUgc2VhLXNob3JlLCB0byB0cnkgcGVyc29ucyBhbHJlYWR5IGluIGV4aWxlIGZvciBob21pY2lkZSBhbmQgY2hhcmdlZCB3aXRoIGEgc2Vjb25kIG11cmRlciwgY29tbWl0dGVkIGJlZm9yZSB0aGV5IHF1aXR0ZWQgQXR0aWNhLiAgVGhlIGFjY3VzZWQgcGxlYWRlZCBmcm9tIGEgYm9hdC4gIFRoZXNlIGxhc3QgdHdvIGNvdXJ0cyBhcmUgbm90IG1lbnRpb25lZCBoZXJlLiAgU2VlIGFsc28gQW50aXBob24sIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlRldHJhbG9naWVzPC90aXRsZT4sIEdlbi4gIEludHJvZC48L25vdGU+OiAgYW5kIHRob3NlIGd1aWx0eSBvZiBtYXNzYWNyZSBvciBhdHRlbXB0ZWQgdHlyYW5ueeKAlDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM+A4b22IM6gz4HPhc+EzrHOvc614b234b+zPC9mb3JlaWduPiwgaW4gdGhlIHByZWNpbmN0cyBvZiB0aGUgUHJ5dGFuZXVtLCB0aGV5IGhlYXJkIGNhc2VzIG9mIGp1c3RpZmlhYmxlIGhvbWljaWRlIO+8iCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhuG9uc69zr/PgiDOtOG9t866zrHOuc6/z4I8L2ZvcmVpZ24+77yJOiAgc2l0dGluZyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDPgOG9tiDOlM61zrvPhs65zr3hvbfhv7M8L2ZvcmVpZ24+LCBpbiB0aGUgcHJlY2luY3RzIG9mIHRoZSB0ZW1wbGUgb2YgQXBvbGxvIERlbHBoaW5pdXMsIHRoZXkgaGVhcmQgY2FzZXMgb2YgaG9taWNpZGUgd2hlcmUgdGhlIGNyaW1pbmFsIHdhcyBhIHBlcnNvbiBvciBwZXJzb25zIHVua25vd24gb3Igd2hlcmUgZGVhdGggaGFkIGJlZW4gY2F1c2VkIGJ5IGFuIGluYW5pbWF0ZSBpbnN0cnVtZW50LiAgVGhleSBmdXJ0aGVyIG1ldCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDPgOG9tiDOoM6xzrvOu86xzrThvbfhv7M8L2ZvcmVpZ24+IHRvIHRyeSBjYXNlcyBvZiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhuG9uc69zr/PgiDhvIDOus6/4b27z4POuc6/z4I8L2ZvcmVpZ24+IGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Oss6/4b27zrvOtc+Fz4POuc+CIM+G4b25zr3Ov8+FIOG8gM66zr/Phc+D4b23zr/PhTwvZm9yZWlnbj7vvIhjZi4gQW50aXBob24sIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkNob3JldXRlczwvdGl0bGU+LCBsbnRyb2Qu77yJOyAgYW5kIGluIFBocmVhdHRvLCBhIHF1YXJ0ZXIgb2YgUGVpcmFldXMgb24gdGhlIHNlYS1zaG9yZSwgdG8gdHJ5IHBlcnNvbnMgYWxyZWFkeSBpbiBleGlsZSBmb3IgaG9taWNpZGUgYW5kIGNoYXJnZWQgd2l0aCBhIHNlY29uZCBtdXJkZXIsIGNvbW1pdHRlZCBiZWZvcmUgdGhleSBxdWl0dGVkIEF0dGljYS4gIFRoZSBhY2N1c2VkIHBsZWFkZWQgZnJvbSBhIGJvYXQuICBUaGVzZSBsYXN0IHR3byBjb3VydHMgYXJlIG5vdCBtZW50aW9uZWQgaGVyZS4gIFNlZSBhbHNvIEFudGlwaG9uLCA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5UZXRyYWxvZ2llczwvdGl0bGU+LCBHZW4uICBJbnRyb2QuPC90cmFuc2xhdGlvbj4="
translation['1.Proof.79'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OSIgdW5pdD0ic2VjdGlvbiIgLz48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJDb250aW51ZWQiPnNoYWxsIG9uZSBhbmQgYWxsIGhhdmUgdGhlaXIgbmFtZXMgZXZlcnl3aGVyZSBjYW5jZWxsZWQgYnkgdGhlIFN1cGVyaW50ZW5kZW50cyBvZiBSZXZlbnVlIGFuZCBieSB0aGUgQ291bmNpbCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIGZvcmVnb2luZywgd2hlcmV2ZXIgYW55IHB1YmxpYyByZWNvcmQgb2YgdGhlaXIgb2ZmZW5jZSBiZSBmb3VuZDsgIGFuZCBhbnkgY29waWVzIG9mIHN1Y2ggcmVjb3JkcyB3aGljaCBhbnl3aGVyZSBleGlzdCBzaGFsbCBiZSBwcm9kdWNlZCBieSB0aGUgVGhlc21vdGhldGFlIGFuZCBvdGhlciBtYWdpc3RyYXRlcy4gIFRoaXMgc2hhbGwgYmUgZG9uZSB3aXRoaW4gdGhyZWUgZGF5cyBhZnRlciB0aGUgY29uc2VudCBvZiB0aGUgUGVvcGxlIGhhcyBiZWVuIGdpdmVuLiAgQW5kIG5vIG9uZSBzaGFsbCBzZWNyZXRseSByZXRhaW4gYSBjb3B5IG9mIHRob3NlIHJlY29yZHMgd2hpY2ggaXQgaGFzIGJlZW4gZGVjaWRlZCB0byBjYW5jZWwsIG5vciBzaGFsbCBoZSBhdCBhbnkgdGltZSBtYWtlIG1hbGljaW91cyByZWZlcmVuY2UgdG8gdGhlIHBhc3QuICBIZSB3aG8gZG9lcyBzbyBzaGFsbCBiZSBsaWFibGUgdG8gdGhlIHB1bmlzaG1lbnQgb2YgZnVnaXRpdmVzIGZyb20gdGhlIGNvdXJ0IG9mIHRoZSBBcmVvcGFndXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiBiZSBwdXQgdG8gZGVhdGgsIGlmIGhlIGlzIGV2ZXIgYXBwcmVoZW5kZWQgd2l0aGluIHRoZSBkb21pbmlvbnMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+Ljwvbm90ZT46ICB0byB0aGUgZW5kIHRoYXQgdGhlIEF0aGVuaWFucyBtYXkgbGl2ZSBpbiBhbGwgc2VjdXJpdHkgYm90aCBub3cgYW5kIGhlcmVhZnRlci48L3F1b3RlPgo8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiBiZSBwdXQgdG8gZGVhdGgsIGlmIGhlIGlzIGV2ZXIgYXBwcmVoZW5kZWQgd2l0aGluIHRoZSBkb21pbmlvbnMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+Ljwvbm90ZT46ICB0byB0aGUgZW5kIHRoYXQgdGhlIEF0aGVuaWFucyBtYXkgbGl2ZSBpbiBhbGwgc2VjdXJpdHkgYm90aCBub3cgYW5kIGhlcmVhZnRlci48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4uPC90cmFuc2xhdGlvbj4="
translation['1.Proof.80'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnkgdGhpcyBkZWNyZWUgeW91IHJlaW5zdGF0ZWQgdGhvc2Ugd2hvIGhhZCBsb3N0IHRoZWlyIHJpZ2h0czsgYnV0IG5laXRoZXIgdGhlIHByb3Bvc2FsIG9mIFBhdHJvY2xlaWRlcyBub3IgeW91ciBvd24gZW5hY3RtZW50IGNvbnRhaW5lZCBhbnkgcmVmZXJlbmNlIHRvIGEgcmVzdG9yYXRpb24gb2YgZXhpbGVzLiAgSG93ZXZlciwgYWZ0ZXIgeW91IGhhZCBjb21lIHRvIHRlcm1zIHdpdGggPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IGFuZCBkZW1vbGlzaGVkIHlvdXIgd2FsbHMsIHlvdSBhbGxvd2VkIHlvdXIgZXhpbGVzIHRvIHJldHVybiB0b28uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkluIEFwcmlsLCA0MDQuICBUaGUgVGhpcnR5IHdlcmUgaW5zdGFsbGVkIGJ5IHRoZSBmb2xsb3dpbmcgc3VtbWVyIG9uIHRoZSBtb3Rpb24gb2YgRHJhY29udGlkZXMsIHdoaWNoIHRoZSBwcmVzZW5jZSBvZiB0aGUgU3BhcnRhbiBnYXJyaXNvbiBtYWRlIGl0IGRpZmZpY3VsdCB0byByZWplY3QuICBJbiB0aGUgd2ludGVyIG9mIDQwNCBhIG51bWJlciBvZiB0aGUgZXhpbGVkIGRlbW9jcmF0cyB1bmRlciBUaHJhc3lidWx1cyBzZWl6ZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxQaHlsZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsUGh5bGUiPlBoeWxlPC9wbGFjZU5hbWU+IG9uIHRoZSBub3J0aGVybiBmcm9udGllciBvZiBBdHRpY2E7ICB0aGVuIHRoZXkgbW92ZWQgb24gUGVpcmFldXMgYW5kIGZvcnRpZmllZCBNdW55Y2hpYS4gIEJ5IEZlYnJ1YXJ5IDQwMyB0aGV5IHdlcmUgc3Ryb25nIGVub3VnaCB0byBjcnVzaCB0aGUgVGhpcnR5LCB0aGUgcmVtbmFudHMgb2Ygd2hvbSBmbGVkIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRWxldXNpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRWxldXNpcyI+RWxldXNpczwvcGxhY2VOYW1lPiwgd2hlbmNlIHRoZXkgd2VyZSBmaW5hbGx5IGV4dGlycGF0ZWQgaW4gNDAxLjwvbm90ZT4gVGhlbiB0aGUgVGhpcnR5IGNhbWUgaW50byBwb3dlciwgYW5kIHRoZXJlIGZvbGxvd2VkIHRoZSBvY2N1cGF0aW9uIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGh5bGUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFBoeWxlIj5QaHlsZTwvcGxhY2VOYW1lPiBvbiB0aGUgbm9ydGhlcm4gZnJvbnRpZXIgb2YgQXR0aWNhOyAgdGhlbiB0aGV5IG1vdmVkIG9uIFBlaXJhZXVzIGFuZCBmb3J0aWZpZWQgTXVueWNoaWEuICBCeSBGZWJydWFyeSA0MDMgdGhleSB3ZXJlIHN0cm9uZyBlbm91Z2ggdG8gY3J1c2ggdGhlIFRoaXJ0eSwgdGhlIHJlbW5hbnRzIG9mIHdob20gZmxlZCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEVsZXVzaXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEVsZXVzaXMiPkVsZXVzaXM8L3BsYWNlTmFtZT4sIHdoZW5jZSB0aGV5IHdlcmUgZmluYWxseSBleHRpcnBhdGVkIGluIDQwMS48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFBoeWxlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQaHlsZSI+UGh5bGU8L3BsYWNlTmFtZT4gYW5kIE11bnljaGlhLCBhbmQgdGhvc2UgdGVycmlibGUgc3RydWdnbGVzIHdoaWNoIEkgYW0gbG9hdGggdG8gcmVjYWxsIGVpdGhlciB0byBteXNlbGYgb3IgdG8geW91Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.81'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MSIgdW5pdD0ic2VjdGlvbiIgLz5BZnRlciB5b3VyIHJldHVybiBmcm9tIFBlaXJhZXVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkZlYnJ1YXJ5IDQwMy48L25vdGU+IHlvdSByZXNvbHZlZCB0byBsZXQgYnlnb25lcyBiZSBieWdvbmVzLCBpbiBzcGl0ZSBvZiB0aGUgb3Bwb3J0dW5pdHkgZm9yIHJldmVuZ2UuICBZb3UgY29uc2lkZXJlZCB0aGUgc2FmZXR5IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBvZiBtb3JlIGltcG9ydGFuY2UgdGhhbiB0aGUgc2V0dGxlbWVudCBvZiBwcml2YXRlIHNjb3JlczsgIHNvIGJvdGggc2lkZXMsIHlvdSBkZWNpZGVkLCB3ZXJlIHRvIGZvcmdldCB0aGUgcGFzdC4gIEFjY29yZGluZ2x5LCB5b3UgZWxlY3RlZCBhIGNvbW1pc3Npb24gb2YgdHdlbnR5IHRvIGdvdmVybiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gdW50aWwgYSBmcmVzaCBjb2RlIG9mIGxhd3MgaGFkIGJlZW4gYXV0aG9yaXplZDsgIGR1cmluZyB0aGUgaW50ZXJ2YWwgdGhlIGNvZGUgb2YgU29sb24gYW5kIHRoZSBzdGF0dXRlcyBvZiBEcmFjbyB3ZXJlIHRvIGJlIGluIGZvcmNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.82'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MiIgdW5pdD0ic2VjdGlvbiIgLz5Ib3dldmVyLCBhZnRlciB5b3UgaGFkIGNob3NlbiBhIENvdW5jaWwgYnkgbG90IGFuZCBlbGVjdGVkIE5vbW90aGV0YWUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkZ1cnRoZXIgZGV0YWlscyBhcmUgZ2l2ZW4gaW4gdGhlIGRlY3JlZSB3aGljaCBmb2xsb3dzLiAgVGhlIG9yZGluYXJ5IE5vbW90aGV0YWUgd2VyZSBjaG9zZW4gYnkgbG90IGZyb20gdGhlICBIZWxpYXN0cyBvZiBlYWNoIHllYXIgdG8gcmV2aXNlIHRoZSBleGlzdGluZyBsYXdzIGFuZCBleGFtaW5lIHByb3Bvc2VkIGFkZGl0aW9ucy4gIFRoZSBOb21vdGhldGFlIGhlcmUgbWVudGlvbmVkIGFyZSBhbiBlbnRpcmVseSBkaXN0aW5jdCBib2R5LiAgVGhleSB3ZXJlIDUwMCBpbiBudW1iZXIgYW5kIGVsZWN0ZWQgYnkgdGhlIGRlbWVzLiAgSW4gY29uanVuY3Rpb24gd2l0aCB0aGUgQ291bmNpbCB0aGV5IHdlcmUgdG8gcmV2aXNlIHRoZSBsYXdzLiAgSXQgd2FzIGZvdW5kLCBob3dldmVyLCB0aGF0IHRoZSBhbmFyY2h5IG9mIHRoZSBwcmV2aW91cyB5ZWFyIGhhZCByZW5kZXJlZCBhIHZhc3QgbnVtYmVyIG9mIGNpdGl6ZW5zIHRlY2huaWNhbGx5IGxpYWJsZSB0byBwdW5pc2htZW50LiAgVGhpcyBtZWFudCB0aGF0IGEgdmVyeSBleHRlbnNpdmUgbW9kaWZpY2F0aW9uIG9mIHRoZSBleGlzdGluZyBsZWdhbCBjb2RlIHdhcyAgbmVjZXNzYXJ5LiAgQSBjb21taXR0ZWUgd2FzIHRoZXJlZm9yZSBzZWxlY3RlZCBmcm9tIHRoZSAgNTAwIE5vbW90aGV0YWUgYnkgdGhlIENvdW5jaWwgdG8gZHJhZnQgYSBmcmVzaCBib2R5IG9mIGxhd3MuICBJdHMgcmVjb21tZW5kYXRpb25zIHdlcmUgdG8gYmUgc3VibWl0dGVkIHRvIHRoZSBDb3VuY2lsIGFuZCB0aGUgcmVtYWluaW5nIE5vbW90aGV0YWUgZm9yIGFwcHJvdmFsLiAgSW4gdGhlIGludGVydmFsIHRoZSBsYXdzIG9mIFNvbG9uIGFuZCB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrjOtc+DzrzOv+G9tzwvZm9yZWlnbj4gb2YgRHJhY28gZGVhbGluZyB3aXRoIGhvbWljaWRlIHdlcmUgdG8gYmUgaW4gZm9yY2UuPC9ub3RlPiB5b3UgYmVnYW4gdG8gZGlzY292ZXIgdGhhdCB0aGVyZSB3ZXJlIG5vdCBhIGZldyBvZiB0aGUgbGF3cyBvZiBTb2xvbiBhbmQgRHJhY28gdW5kZXIgd2hpY2ggbnVtYmVycyBvZiBjaXRpemVucyB3ZXJlIGxpYWJsZSwgb3dpbmcgdG8gcHJldmlvdXMgZXZlbnRzLiAgWW91IHRoZXJlZm9yZSBjYWxsZWQgYSBtZWV0aW5nIG9mIHRoZSBBc3NlbWJseSB0byBkaXNjdXNzIHRoZSBkaWZmaWN1bHR5LCBhbmQgYXMgYSByZXN1bHQgZW5hY3RlZCB0aGF0IHRoZSB3aG9sZSBvZiB0aGUgbGF3cyBzaG91bGQgYmUgcmV2aXNlZCBhbmQgdGhhdCBzdWNoIGFzIHdlcmUgYXBwcm92ZWQgc2hvdWxkIGJlIGluc2NyaWJlZCB0aGUgUG9ydGljby48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuM61z4POvM6/4b23PC9mb3JlaWduPiBvZiBEcmFjbyBkZWFsaW5nIHdpdGggaG9taWNpZGUgd2VyZSB0byBiZSBpbiBmb3JjZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Dz4TOv+G9sCDOss6xz4PhvbfOu861zrnOv8+CPC9mb3JlaWduPiBpbiB0aGUgQWdvcmEuPC9ub3RlPiBLaW5kbHkgcmVhZCB0aGUgZGVjcmVlLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg8+Ezr/hvbAgzrLOsc+D4b23zrvOtc65zr/PgjwvZm9yZWlnbj4gaW4gdGhlIEFnb3JhLjwvdHJhbnNsYXRpb24+"
translation['1.Proof.83'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iRGVjcmVlIj48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5EZWNyZWU8L3RpdGxlPk9uIHRoZSBtb3Rpb24gb2YgVGVpc2FtZW51czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5PbmUgb2YgdGhlIDUwMCBOb21vdGhldGFlLjwvbm90ZT4gdGhlIFBlb3BsZSBkZWNyZWVkIHRoYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGJlIGdvdmVybmVkIGFzIG9mIG9sZCwgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBsYXdzIG9mIFNvbG9uLCBoaXMgd2VpZ2h0cyBhbmQgaGlzIG1lYXN1cmVzLCBhbmQgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBzdGF0dXRlcyBvZiBEcmFjbywgd2hpY2ggd2UgdXNlZCBhZm9yZXRpbWUuICBTdWNoIGZ1cnRoZXIgbGF3cyBhcyBtYXkgYmUgbmVjZXNzYXJ5IHNoYWxsIGJlIGluc2NyaWJlZCB1cG9uIHRhYmxlcyBieSB0aGUgTm9tb3RoZXRhZSBlbGVjdGVkIGJ5IHRoZSBDb3VuY2lsIGFuZCBuYW1lZCBoZXJlYWZ0ZXIsIGV4cG9zZWQgYmVmb3JlIHRoZSBUcmliYWwgU3RhdHV0ZXMgZm9yIGFsbCB0byBzZWUsIGFuZCBoYW5kZWQgb3ZlciB0byB0aGUgbWFnaXN0cmF0ZXMgZHVyaW5nIHRoZSBwcmVzZW50IG1vbnRoLjwvcXVvdGU+Cjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkRlY3JlZTwvdGl0bGU+T24gdGhlIG1vdGlvbiBvZiBUZWlzYW1lbnVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk9uZSBvZiB0aGUgNTAwIE5vbW90aGV0YWUuPC9ub3RlPiB0aGUgUGVvcGxlIGRlY3JlZWQgdGhhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gYmUgZ292ZXJuZWQgYXMgb2Ygb2xkLCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIGxhd3Mgb2YgU29sb24sIGhpcyB3ZWlnaHRzIGFuZCBoaXMgbWVhc3VyZXMsIGFuZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHN0YXR1dGVzIG9mIERyYWNvLCB3aGljaCB3ZSB1c2VkIGFmb3JldGltZS4gIFN1Y2ggZnVydGhlciBsYXdzIGFzIG1heSBiZSBuZWNlc3Nhcnkgc2hhbGwgYmUgaW5zY3JpYmVkIHVwb24gdGFibGVzIGJ5IHRoZSBOb21vdGhldGFlIGVsZWN0ZWQgYnkgdGhlIENvdW5jaWwgYW5kIG5hbWVkIGhlcmVhZnRlciwgZXhwb3NlZCBiZWZvcmUgdGhlIFRyaWJhbCBTdGF0dXRlcyBmb3IgYWxsIHRvIHNlZSwgYW5kIGhhbmRlZCBvdmVyIHRvIHRoZSBtYWdpc3RyYXRlcyBkdXJpbmcgdGhlIHByZXNlbnQgbW9udGguPC90cmFuc2xhdGlvbj4="
translation['1.Proof.84'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NCIgdW5pdD0ic2VjdGlvbiIgLz48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJDb250aW51ZWQiPlRoZSBsYXdzIHRodXMgaGFuZGVkIG92ZXIsIGhvd2V2ZXIsIHNoYWxsIGJlIHN1Ym1pdHRlZCBiZWZvcmVoYW5kIHRvIHRoZSBzY3J1dGlueSBvZiB0aGUgQ291bmNpbCBhbmQgdGhlIGZpdmUgaHVuZHJlZCBOb21vdGhldGFlIGVsZWN0ZWQgYnkgdGhlIERlbWVzLCB3aGVuIHRoZXkgaGF2ZSB0YWtlbiB0aGVpciBvYXRoLiAgRnVydGhlciwgYW55IHByaXZhdGUgY2l0aXplbiB3aG8gc28gZGVzaXJlcyBtYXkgY29tZSBiZWZvcmUgdGhlIENvdW5jaWwgYW5kIHN1Z2dlc3QgaW1wcm92ZW1lbnRzIGluIHRoZSBsYXdzLiAgV2hlbiB0aGUgbGF3cyBoYXZlIGJlZW4gcmF0aWZpZWQsIHRoZXkgc2hhbGwgYmUgcGxhY2VkIHVuZGVyIHRoZSBndWFyZGlhbnNoaXAgb2YgdGhlIENvdW5jaWwgb2YgdGhlIEFyZW9wYWd1cywgdG8gdGhlIGVuZCB0aGF0IG9ubHkgc3VjaCBsYXdzIGFzIGhhdmUgYmVlbiByYXRpZmllZCBtYXkgYmUgYXBwbGllZCBieSBtYWdpc3RyYXRlcy4gIFRob3NlIGxhd3Mgd2hpY2ggYXJlIGFwcHJvdmVkIHNoYWxsIGJlIGluc2NyaWJlZCB1cG9uIHRoZSB3YWxsLCB3aGVyZSB0aGV5IHdlcmUgaW5zY3JpYmVkIGFmb3JldGltZSwgZm9yIGFsbCB0byBzZWUuPC9xdW90ZT4KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.85'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmUgd2FzIGEgcmV2aXNpb24gb2YgdGhlIGxhd3MsIGdlbnRsZW1lbiwgaW4gb2JlZGllbmNlIHRvIHRoaXMgZGVjcmVlLCBhbmQgc3VjaCBhcyB3ZXJlIGFwcHJvdmVkIHdlcmUgaW5zY3JpYmVkIGluIHRoZSBQb3J0aWNvLiAgV2hlbiB0aGlzIGhhZCBiZWVuIGRvbmUsIHdlIHBhc3NlZCBhIGxhdyB3aGljaCBpcyB1bml2ZXJzYWxseSBlbmZvcmNlZC4gIEtpbmRseSByZWFkIGl0LiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJMYXciPjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkxhdzwvdGl0bGU+SW4gbm8gY2lyY3Vtc3RhbmNlcyBzaGFsbCBtYWdpc3RyYXRlcyBlbmZvcmNlIGEgbGF3IHdoaWNoIGhhcyBub3QgYmVlbiBpbnNjcmliZWQuPC9xdW90ZT4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TGF3PC90aXRsZT5JbiBubyBjaXJjdW1zdGFuY2VzIHNoYWxsIG1hZ2lzdHJhdGVzIGVuZm9yY2UgYSBsYXcgd2hpY2ggaGFzIG5vdCBiZWVuIGluc2NyaWJlZC48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.86'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXMgYW55IGxvb3Bob2xlIGxlZnQgaGVyZT8gQ2FuIGEgc2luZ2xlIHN1aXQgYmUgYnJvdWdodCBiZWZvcmUgYSBqdXJ5IGJ5IGEgbWFnaXN0cmF0ZSBvciBzZXQgaW4gbW90aW9uIGJ5IG9uZSBvZiB5b3UsIHNhdmUgdW5kZXIgdGhlIGxhd3MgaW5zY3JpYmVkPyBUaGVuIGlmIGl0IGlzIGlsbGVnYWwgdG8gZW5mb3JjZSBhIGxhdyB3aGljaCBoYXMgbm90IGJlZW4gaW5zY3JpYmVkLCB0aGVyZSBjYW4gc3VyZWx5IGJlIG5vIHF1ZXN0aW9uIG9mIGVuZm9yY2luZyBhIGRlY3JlZSB3aGljaCBoYXMgbm90IGJlZW4gaW5zY3JpYmVkLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHdoZW4gd2Ugc2F3IHRoYXQgYSBncmVhdCBtYW55IGNpdGl6ZW5zIGhhZCBiZWVuIHBsYWNlZCBpbiBhIHNlcmlvdXMgcG9zaXRpb24gZWl0aGVyIGJ5IHByZXZpb3VzIGxhd3Mgb3IgYnkgcHJldmlvdXMgZGVjcmVlcywgd2UgZW5hY3RlZCB0aGUgbGF3cyB3aGljaCBmb2xsb3cgYXMgYSBzYWZlZ3VhcmQgYWdhaW5zdCB0aGUgdmVyeSB0aGluZyB3aGljaCBpcyBub3cgZ29pbmcgb247ICB3ZSB3aXNoZWQgdG8gcHJldmVudCBhbnl0aGluZyBvZiB0aGUga2luZCBoYXBwZW5pbmcsIHRoYXQgaXMgdG8gc2F5LCBhbmQgdG8gbWFrZSBpdCBpbXBvc3NpYmxlIGZvciBhbnlvbmUgdG8gcHJvc2VjdXRlIGZyb20gbWFsaWNlLiAgS2luZGx5IHJlYWQgdGhlIGxhd3MuCjwvdHJhbnNsYXRpb24+"
translation['1.Proof.87'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iTGF3cyI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TGF3czwvdGl0bGU+SW4gbm8gY2lyY3Vtc3RhbmNlcyBzaGFsbCBtYWdpc3RyYXRlcyBlbmZvcmNlIGEgbGF3IHdoaWNoIGhhcyBub3QgYmVlbiBpbnNjcmliZWQuICBObyBkZWNyZWUsIHdoZXRoZXIgb2YgdGhlIENvdW5jaWwgb3IgQXNzZW1ibHksIHNoYWxsIG92ZXJyaWRlIGEgbGF3LiAgTm8gbGF3IHNoYWxsIGJlIGRpcmVjdGVkIGFnYWluc3QgYW4gaW5kaXZpZHVhbCB3aXRob3V0IGFwcGx5aW5nIHRvIGFsbCBjaXRpemVucyBhbGlrZSwgdW5sZXNzIGFuIEFzc2VtYmx5IG9mIHNpeCB0aG91c2FuZCBzbyByZXNvbHZlIGJ5IHNlY3JldCBiYWxsb3QuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgcmVmZXJlbmNlIHRvIG9zdHJhY2lzbS48L25vdGU+PC9xdW90ZT4gPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TGF3czwvdGl0bGU+SW4gbm8gY2lyY3Vtc3RhbmNlcyBzaGFsbCBtYWdpc3RyYXRlcyBlbmZvcmNlIGEgbGF3IHdoaWNoIGhhcyBub3QgYmVlbiBpbnNjcmliZWQuICBObyBkZWNyZWUsIHdoZXRoZXIgb2YgdGhlIENvdW5jaWwgb3IgQXNzZW1ibHksIHNoYWxsIG92ZXJyaWRlIGEgbGF3LiAgTm8gbGF3IHNoYWxsIGJlIGRpcmVjdGVkIGFnYWluc3QgYW4gaW5kaXZpZHVhbCB3aXRob3V0IGFwcGx5aW5nIHRvIGFsbCBjaXRpemVucyBhbGlrZSwgdW5sZXNzIGFuIEFzc2VtYmx5IG9mIHNpeCB0aG91c2FuZCBzbyByZXNvbHZlIGJ5IHNlY3JldCBiYWxsb3QuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgcmVmZXJlbmNlIHRvIG9zdHJhY2lzbS48L25vdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldoYXQgd2FzIG5lZWRlZCB0byBjb21wbGV0ZSB0aGUgbGlzdD8gT25seSB0aGUgZm9sbG93aW5nIGxhdywgd2hpY2ggSSB3aWxsIGFzayB0aGUgY2xlcmsgdG8gcmVhZCB0byB5b3UuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJMYXdzIj48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5MYXdzPC90aXRsZT5BbGwgZGVjaXNpb25zIGdpdmVuIGluIHByaXZhdGUgc3VpdHMgYW5kIGJ5IGFyYml0cmF0b3JzIHVuZGVyIHRoZSBkZW1vY3JhY3kgc2hhbGwgYmUgdmFsaWQuICBCdXQgb2YgdGhlIGxhd3Mgb25seSB0aG9zZSBwYXNzZWQgc2luY2UgdGhlIGFyY2hvbnNoaXAgb2YgRXVjbGVpZGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4gbGF0ZXIgdGhhbiBtaWRzdW1tZXIsIDQwMy48L25vdGU+IHNoYWxsIGJlIGVuZm9yY2VkLjwvcXVvdGU+Cjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkxhd3M8L3RpdGxlPkFsbCBkZWNpc2lvbnMgZ2l2ZW4gaW4gcHJpdmF0ZSBzdWl0cyBhbmQgYnkgYXJiaXRyYXRvcnMgdW5kZXIgdGhlIGRlbW9jcmFjeSBzaGFsbCBiZSB2YWxpZC4gIEJ1dCBvZiB0aGUgbGF3cyBvbmx5IHRob3NlIHBhc3NlZCBzaW5jZSB0aGUgYXJjaG9uc2hpcCBvZiBFdWNsZWlkZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiBsYXRlciB0aGFuIG1pZHN1bW1lciwgNDAzLjwvbm90ZT4gc2hhbGwgYmUgZW5mb3JjZWQuPC90cmFuc2xhdGlvbj4="
translation['1.Proof.88'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHZhbGlkaXR5IG9mIGRlY2lzaW9ucyBnaXZlbiBpbiBwcml2YXRlIHN1aXRzIGFuZCBieSBhcmJpdHJhdG9ycyB1bmRlciB0aGUgZGVtb2NyYWN5IHlvdSB1cGhlbGQsIGdlbnRsZW1lbjsgIGFuZCB5b3UgZGlkIHNvIHRvIGF2b2lkIHRoZSBjYW5jZWxsaW5nIG9mIGRlYnRzIGFuZCB0aGUgcmVvcGVuaW5nIG9mIHN1Y2ggc3VpdHMsIGFuZCB0byBlbnN1cmUgdGhlIGVuZm9yY2VtZW50IG9mIHByaXZhdGUgY29udHJhY3RzLiAgT24gdGhlIG90aGVyIGhhbmQsIGluIHRoZSBtYXR0ZXIgb2YgcHVibGljIG9mZmVuY2VzIGRlYWx0IHdpdGggYnkgaW5kaWN0bWVudCwgZGVudW5jaWF0aW9uLCBpbmZvcm1hdGlvbiwgb3IgYXJyZXN0LCB5b3UgZW5hY3RlZCB0aGF0IG9ubHkgc3VjaCBsYXdzIHNob3VsZCBiZSBlbmZvcmNlZCBhcyBoYWQgYmVlbiBwYXNzZWQgc2luY2UgdGhlIGFyY2hvbnNoaXAgb2YgRXVjbGVpZGVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.89'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHlvdSBkZWNpZGVkIHRoYXQgdGhlIGxhd3Mgd2VyZSB0byBiZSByZXZpc2VkIGFuZCBhZnRlcndhcmRzIGluc2NyaWJlZCB0aGF0IGluIG5vIGNpcmN1bXN0YW5jZXMgd2VyZSBtYWdpc3RyYXRlcyB0byBlbmZvcmNlIGEgbGF3IHdoaWNoIGhhZCBub3QgYmVlbiBpbnNjcmliZWQ6ICB0aGF0IG5vIGRlY3JlZSwgd2hldGhlciBvZiB0aGUgQ291bmNpbCBvciB0aGUgQXNzZW1ibHksIHdhcyB0byBvdmVycmlkZSBhIGxhdzogIHRoYXQgbm8gbGF3IG1pZ2h0IGJlIGRpcmVjdGVkIGFnYWluc3QgYW4gaW5kaXZpZHVhbCB3aXRob3V0IGFwcGx5aW5nIHRvIGFsbCBjaXRpemVucyBhbGlrZTogIGFuZCB0aGF0IG9ubHkgc3VjaCBsYXdzIGFzIGhhZCBiZWVuIHBhc3NlZCBzaW5jZSB0aGUgYXJjaG9uc2hpcCBvZiBFdWNsZWlkZXMgd2VyZSB0byBiZSBlbmZvcmNlZC4gIEluIHZpZXcgb2YgdGhpcywgY2FuIGFueSBkZWNyZWUgcGFzc2VkIGJlZm9yZSB0aGUgYXJjaG9uc2hpcCBvZiBFdWNsZWlkZXMsIHdoYXRldmVyIGl0cyBpbXBvcnRhbmNlIG9yIHVuaW1wb3J0YW5jZSwgc3RpbGwgcmVtYWluIGluIGZvcmNlPyBJIGZvciBvbmUgdGhpbmsgbm90LCBnZW50bGVtZW4uICBKdXN0IGNvbnNpZGVyIHRoZSBtYXR0ZXIgZm9yIHlvdXJzZWx2ZXMuCjwvdHJhbnNsYXRpb24+"
translation['1.Proof.90'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIG5vdywgd2hhdCBvZiB5b3VyIG9hdGhzPyBGaXJzdCwgdGhlIG9hdGggaW4gd2hpY2ggdGhlIHdob2xlIGNpdHkgam9pbmVkLCB0aGUgb2F0aCB3aGljaCB5b3Ugc3dvcmUgb25lIGFuZCBhbGwgYWZ0ZXIgdGhlIHJlY29uY2lsaWF0aW9uOuKAnC4gIC4gIC4gIGFuZCBJIHdpbGwgaGFyYm91ciBubyBncmlldmFuY2UgYWdhaW5zdCBhbnkgY2l0aXplbiwgc2F2ZSBvbmx5IHRoZSBUaGlydHksIHRoZSBUZW4sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBib2FyZCBvZiB0ZW4gc2V0IHVwIGJ5IEx5c2FuZGVyIGluIFBlaXJhZXVzLiAgSXQgd2FzIG92ZXJ0aHJvd24gYnkgVGhyYXN5YnVsdXMgYXQgdGhlIGVuZCBvZiA0MDQuICBUaGUgRWxldmVuIGFyZSwgb2YgY291cnNlLCB0aGUgb3JkaW5hcnkgcG9saWNlLW1hZ2lzdHJhdGVzIHdobyBoYWQgYmVlbiBjb21wZWxsZWQgYnkgdGhlIFRoaXJ0eSB0byBkbyB0aGVpciBiaWRkaW5nLjwvbm90ZT4gYW5kIHRoZSBFbGV2ZW46ICBhbmQgZXZlbiBvZiB0aGVtIGFnYWluc3Qgbm9uZSB3aG8gc2hhbGwgY29uc2VudCB0byByZW5kZXIgYWNjb3VudCBvZiBoaXMgb2ZmaWNlLuKAnSBBZnRlciBzd2VhcmluZyB0byBmb3JnaXZlIGV2ZW4gdGhlIFRoaXJ0eSwgd2hvbSB5b3UgaGFkIHRvIHRoYW5rIGZvciBzdWZmZXJpbmdzIHVudG9sZCwgcHJvdmlkZWQgdGhhdCB0aGV5IHJlbmRlcmVkIGFjY291bnQgb2YgdGhlbXNlbHZlcywgeW91IGNhbiBoYXZlIGJlZW4gaW4gdmVyeSBsaXR0bGUgaHVycnkgdG8gaGFyYm91ciBncmlldmFuY2VzIGFnYWluc3QgdGhlIG9yZGluYXJ5IGNpdGl6ZW4uICBBZ2Fpbiwgd2hhdCBpcyB0aGUgb2F0aCBzd29ybiBieSB0aGUgQ291bmNpbCB3aGVuIGl0IHRha2VzIG9mZmljZT8KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.91'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MSIgdW5pdD0ic2VjdGlvbiIgLz7igJwuICAuICAuICBhbmQgSSB3aWxsIGFsbG93IG5vIGluZm9ybWF0aW9uIG9yIGFycmVzdCBhcmlzaW5nIG91dCBvZiBwYXN0IGV2ZW50cywgc2F2ZSBvbmx5IGluIHRoZSBjYXNlIG9mIHRob3NlIHdobyBmbGVkIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LuKAnTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRWxldXNpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRWxldXNpcyI+RWxldXNpczwvcGxhY2VOYW1lPiwgd2l0aCB0aGUgc3Vydml2aW5nIG1lbWJlcnMgb2YgdGhlIFRoaXJ0eSwgYWZ0ZXIgdGhlaXIgZG93bmZhbGwgaW4gRmVicnVhcnkgNDAzLjwvbm90ZT4gQW5kIHdoYXQgaXMgeW91ciBvd24gb2F0aCBhcyBqdXJvcnMsIGdlbnRsZW1lbj/igJwuICAuICAuICBhbmQgSSB3aWxsIGhhcmJvdXIgbm8gZ3JpZXZhbmNlIGFuZCBzdWJtaXQgdG8gbm8gaW5mbHVlbmNlLCBidXQgd2lsbCBnaXZlIG15IHZlcmRpY3QgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBsYXdzIGluIGZvcmNlIGF0IHRoZSBwcmVzZW50IHRpbWUu4oCdIExldCB0aG9zZSBvYXRocyBoZWxwIHlvdSB0byBkZWNpZGUgd2hldGhlciBJIGFtIHJpZ2h0IHdoZW4gSSBzYXkgdGhhdCBJIGFtIGNoYW1waW9uaW5nIHlvdXJzZWx2ZXMgYW5kIHRoZSBsYXdzLgo8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEVsZXVzaXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEVsZXVzaXMiPkVsZXVzaXM8L3BsYWNlTmFtZT4sIHdpdGggdGhlIHN1cnZpdmluZyBtZW1iZXJzIG9mIHRoZSBUaGlydHksIGFmdGVyIHRoZWlyIGRvd25mYWxsIGluIEZlYnJ1YXJ5IDQwMy48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.92'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIG5vdywgZ2VudGxlbWVuLCBjb25zaWRlciBob3cgbXkgYWNjdXNlcnMgc3RhbmQgd2l0aCByZWdhcmQgdG8gdGhlIGxhd3MuICBUaGV5IGFyZSBwcm9zZWN1dGluZyBvdGhlcnM7ICBidXQgd2hhdCBpcyB0aGVpciBvd24gcG9zaXRpb24/IENlcGhpc2l1cyBoZXJlIHB1cmNoYXNlZCBmcm9tIHRoZSBzdGF0ZSB0aGUgcmlnaHQgdG8gY29sbGVjdCBjZXJ0YWluIHB1YmxpYyByZW50cywgYW5kIG9idGFpbmVkIHRoZXJlYnkgYSByZXR1cm4gb2YgbmluZXR5IG1pbmFlIGZyb20gdGhlIGZhcm1lcnMgb2NjdXB5aW5nIHRoZSBsYW5kcyBjb25jZXJuZWQuICBIZSB0aGVuIGRlZmF1bHRlZDsgIGFuZCBzaW5jZSBoZSB3b3VsZCBoYXZlIGJlZW4gcGxhY2VkIGluIGNsb3NlIGNvbmZpbmVtZW50IGhhZCBoZSBhcHBlYXJlZCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.93'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MyIgdW5pdD0ic2VjdGlvbiIgLz7igJRpdCBiZWluZyBsYWlkIGRvd24gYnkgbGF3IHRoYXQgYW55IGRlZmF1bHRpbmcgdGF4IGZhcm1lciBtYXkgYmUgc28gcHVuaXNoZWQgYnkgdGhlIENvdW5jaWzigJRoZSByZXRpcmVkIGludG8gZXhpbGUuICBPd2luZywgaG93ZXZlciwgdG8gdGhlIGZhY3QgdGhhdCB5b3UgZGVjaWRlZCB0byBhcHBseSBvbmx5IHRob3NlIGxhd3MgcGFzc2VkIHNpbmNlIHRoZSBhcmNob25zaGlwIG9mIEV1Y2xlaWRlcywgQ2VwaGlzaXVzIGNvbnNpZGVycyBoaW1zZWxmIGVudGl0bGVkIHRvIGtlZXAgaGlzIHByb2ZpdHMgZnJvbSB5b3VyIGxhbmRzLiAgSGUgaXMgbm8gbG9uZ2VyIGFuIGV4aWxlLCBidXQgYSBjaXRpemVuOiAgbm8gbG9uZ2VyIGFuIG91dGNhc3Qgd2l0aG91dCByaWdodHMsIGJ1dCBhbiBpbmZvcm1lcuKAlGFuZCBhbGwgYmVjYXVzZSB5b3UgYXJlIGFwcGx5aW5nIG9ubHkgdGhlIHJldmlzZWQgbGF3cy4KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.94'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiB0aGVyZSBpcyBNZWxldHVzIGhlcmUuICBNZWxldHVzIGFycmVzdGVkIExlb248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA5MTIwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDkxMjAiPkxlb248L3BsYWNlTmFtZT4gaGVyZSBtZW50aW9uZWQgaXMgYWxtb3N0IGNlcnRhaW5seSB0aGUgTGVvbiBvZiBTYWxhbWlzIHdob20gU29jcmF0ZXMsIGF0IHRoZSByaXNrIG9mIGhpcyBvd24gbGlmZSwgcmVmdXNlZCB0byBhcnJlc3Qgd2hlbiBvcmRlcmVkIHRvIGRvIHNvIGJ5IHRoZSBUaGlydHkuICBTb21lIDxkYXRlIGF1dGhuYW1lPSIxNTAwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSIxNTAwIj4xNTAwPC9kYXRlPiBwZXJzb25zIHdlcmUgZXhlY3V0ZWQgd2l0aG91dCBhIHRyaWFsIGR1cmluZyB0aGUgcmVpZ24gb2YgdGVycm9yIO+8iDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Iklzb2MuIDcuNjciIHZhbGlkPSJ5ZXMiPklzb2MuIDcuNjc8L2JpYmw+77yJLjwvbm90ZT4gdW5kZXIgdGhlIFRoaXJ0eSwgYXMgeW91IGFsbCBrbm93OyAgYW5kIExlb24gd2FzIHB1dCB0byBkZWF0aCB3aXRob3V0IGEgdHJpYWwuICBCdXQgd2UgZmluZCBpdCBsYWlkIGRvd24gdGhhdCB0aGVyZSBzaGFsbCBiZSBubyBkaXN0aW5jdGlvbiBiZXR3ZWVuIHRoZSBwcmluY2lwYWwgd2hvIHBsYW5zIGEgY3JpbWUgYW5kIHRoZSBhZ2VudCB3aG8gY29tbWl0cyBpdDsgIHRoZSBsYXcgbm90IG9ubHkgZXhpc3RlZCBpbiB0aGUgcGFzdCwgYnV0IHN0aWxsIGV4aXN0cyBhbmQgaXMgc3RpbGwgZW5mb3JjZWQgYmVjYXVzZSBvZiBpdHMgZmFpcm5lc3MuICBRdWl0ZSBzbzsgIGJ1dCBMZW9uJ3Mgc29ucyBjYW5ub3QgcHJvc2VjdXRlIE1lbGV0dXMgZm9yIG11cmRlciwgYmVjYXVzZSBvbmx5IGxhd3MgcGFzc2VkIHNpbmNlIHRoZSBhcmNob25zaGlwIG9mIEV1Y2xlaWRlcyBjYW4gYmUgZW5mb3JjZWQuICBUaGUgZmFjdCBvZiB0aGUgYXJyZXN0LCBvZiBjb3Vyc2UsIGlzIG5vdCBkZW5pZWQsIGV2ZW4gYnkgTWVsZXR1cyBoaW1zZWxmLjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA5MTIwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDkxMjAiPkxlb248L3BsYWNlTmFtZT4gaGVyZSBtZW50aW9uZWQgaXMgYWxtb3N0IGNlcnRhaW5seSB0aGUgTGVvbiBvZiBTYWxhbWlzIHdob20gU29jcmF0ZXMsIGF0IHRoZSByaXNrIG9mIGhpcyBvd24gbGlmZSwgcmVmdXNlZCB0byBhcnJlc3Qgd2hlbiBvcmRlcmVkIHRvIGRvIHNvIGJ5IHRoZSBUaGlydHkuICBTb21lIDxkYXRlIGF1dGhuYW1lPSIxNTAwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSIxNTAwIj4xNTAwPC9kYXRlPiBwZXJzb25zIHdlcmUgZXhlY3V0ZWQgd2l0aG91dCBhIHRyaWFsIGR1cmluZyB0aGUgcmVpZ24gb2YgdGVycm9yIO+8iDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Iklzb2MuIDcuNjciIHZhbGlkPSJ5ZXMiPklzb2MuIDcuNjc8L2JpYmw+77yJLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgYXJndW1lbnQgb2YgdGhpcyBwYXJhZ3JhcGggaXMgbm90IHN0YXRlZCBhcyBjbGVhcmx5IGFzIGl0IG1pZ2h0IGJlLiAgQW5kb2NpZGVzIG1lYW5zOiAg77yIYe+8iSAgYWZ0ZXIgdGhlIGFtbmVzdHkgc3BlY2lhbCBsZWdhbCBtZWFzdXJlcyB3ZXJlIHRha2VuIHRvIGVuc3VyZSBhZ2FpbnN0IHByb3NlY3V0aW9uIGZvciBjcmltZXMgY29tbWl0dGVkIGJlZm9yZSA0MDM7ICB0aGVyZWZvcmUsIGFsdGhvdWdoIO+8iGLvvIkgIHRoZSBwcmluY2lwbGUgdGhhdCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Oss6/4b27zrvOtc+Fz4POuc+CIM+G4b25zr3Ov8+FIOG8kc66zr/Phc+D4b23zr/PhTwvZm9yZWlnbj4gZGVzZXJ2ZXMgdGhlIHNhbWUgcHVuaXNobWVudCBhcyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhuG9uc69zr/PgiDhvJHOus6/4b27z4POuc6/z4I8L2ZvcmVpZ24+IGl0c2VsZiBoYXMgYWx3YXlzIGJlZW4sIGFuZCBzdGlsbCBpcywgcmVjb2duaXplZCBhcyB2YWxpZCwgTWVsZXR1cyBjYW5ub3QgYmUgYWNjdXNlZCBvZiBoYXZpbmcgY2F1c2VkIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA5MTIwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDkxMjAiPkxlb248L3BsYWNlTmFtZT4ncyBkZWF0aC48L25vdGU+Cjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/hvbvOu861z4XPg865z4Igz4bhvbnOvc6/z4Ug4byRzrrOv8+Fz4PhvbfOv8+FPC9mb3JlaWduPiBkZXNlcnZlcyB0aGUgc2FtZSBwdW5pc2htZW50IGFzIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+G4b25zr3Ov8+CIOG8kc66zr/hvbvPg865zr/PgjwvZm9yZWlnbj4gaXRzZWxmIGhhcyBhbHdheXMgYmVlbiwgYW5kIHN0aWxsIGlzLCByZWNvZ25pemVkIGFzIHZhbGlkLCBNZWxldHVzIGNhbm5vdCBiZSBhY2N1c2VkIG9mIGhhdmluZyBjYXVzZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDkxMjAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwOTEyMCI+TGVvbjwvcGxhY2VOYW1lPidzIGRlYXRoLjwvdHJhbnNsYXRpb24+"
translation['1.Proof.95'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBFcGljaGFyZXMgaGVyZSwgYW4gdXR0ZXIgYmxhY2tndWFyZCwgYW5kIHByb3VkIG9mIGl0LCBhIG1hbiB3aG8gZG9lcyBoaXMgYmVzdCBub3QgdG8gbGV0IGhpcyBvd24gYnlnb25lcyBiZSBieWdvbmVz4oCUZnJpZW5kIEVwaWNoYXJlcyBzZXJ2ZWQgb24gdGhlIENvdW5jaWwgdW5kZXIgdGhlIFRoaXJ0eS4gIEFuZCB5ZXQgd2hhdCBkb2VzIHRoZSBsYXcgdXBvbiB0aGUgc3RvbmUgaW4gZnJvbnQgb2YgdGhlIENvdW5jaWwtY2hhbWJlciBzYXk/IOKAnFdob3NvZXZlciBzaGFsbCBob2xkIGEgcHVibGljIG9mZmljZSBhZnRlciB0aGUgc3VwcHJlc3Npb24gb2YgdGhlIGRlbW9jcmFjeSBtYXkgYmUgc2xhaW4gd2l0aCBpbXB1bml0eS4gIE5vIHRhaW50IHNoYWxsIHJlc3QgdXBvbiBoaXMgc2xheWVyLCBhbmQgaGUgc2hhbGwgcG9zc2VzcyB0aGUgZ29vZHMgb2YgdGhlIHNsYWluLuKAnSBUaHVzIGFzIGZhciBhcyBTb2xvbidzIGxhdyBpcyBjb25jZXJuZWQsIEVwaWNoYXJlcywgaXQgaXMgY2xlYXIgdGhhdCBhbnlvbmUgY2FuIGtpbGwgeW91IGhlcmUgYW5kIG5vdyB3aXRob3V0IGRlZmlsaW5nIGhpcyBoYW5kcy4KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.96'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NiIgdW5pdD0ic2VjdGlvbiIgLz5LaW5kbHkgcmVhZCB0aGUgbGF3IGZyb20gdGhlIHN0b25lIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJMYXciPjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkxhdzwvdGl0bGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBkZWNyZWUgd2FzIHBhc3NlZCBhZnRlciB0aGUgcmVzdG9yYXRpb24gb2YgdGhlIGZ1bGwgZGVtb2NyYWN5IGluIDxkYXRlIGF1dGhuYW1lPSItNDEwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDEwIj40MTA8L2RhdGU+LiAgRGVtb3BoYW50dXMgaXMgYSBtZW1iZXIgb2YgdGhlIGJvYXJkIG9mIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Dz4XOs86zz4HOsc+GzrXhv5bPgjwvZm9yZWlnbj7vvIjigJxjb21waWxlcnPigJ3vvIkgIGFwcG9pbnRlZCB0byByZXZpc2UgdGhlIGxhd3MuICBUaGUgcmV2aXNpb24gd2FzIG5vdCBjb21wbGV0ZWQgdW50aWwgYWZ0ZXIgdGhlIGFwcG9pbnRtZW50IG9mIHRoZSA1MDAgTm9tb3RoZXRhZSBpbiA0MDMgZm9yIGEgc2ltaWxhciBwdXJwb3NlLiAgVGhlIGRlY3JlZSB3YXMgYmFzZWQgb24gYSBTb2xvbmlhbiBsYXfvvIg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbmRvYy4gMS45NSIgdmFsaWQ9InllcyI+QW5kb2MuIDEuOTU8L2JpYmw+IGFkIGZpbi7vvIk7ICBoZW5jZSB0aGUgcmVmZXJlbmNlIGluIGl0IHRvIHR5cmFubnkuPC9ub3RlPiBFbmFjdGVkIGJ5IHRoZSBDb3VuY2lsIGFuZCBQZW9wbGUuICBQcnl0YW55IG9mIHRoZSB0cmliZSBBZWFudGlzLiAgU2VjcmV0YXJ5OiAgQ2xlaWdlbmVzLiAgUHJlc2lkZW50OiAgQm9ldGh1cy4gIFRoZSBlbmFjdG1lbnQgZm9sbG93aW5nIHdhcyBmcmFtZWQgYnkgRGVtb3BoYW50dXMgYW5kIGhpcyBjb2xsZWFndWVzLiAgVGhlIGRhdGUgb2YgdGhpcyBkZWNyZWUgaXMgdGhlIGZpcnN0IHNpdHRpbmcgb2YgdGhlIENvdW5jaWwgb2YgRml2ZSBIdW5kcmVkLCBjaG9zZW4gYnkgbG90LCBhdCB3aGljaCBDbGVpZ2VuZXMgYWN0ZWQgYXMgU2VjcmV0YXJ5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JZiBhbnlvbmUgc2hhbGwgc3VwcHJlc3MgdGhlIGRlbW9jcmFjeSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gb3IgaG9sZCBwdWJsaWMgb2ZmaWNlIGFmdGVyIGl0cyBzdXBwcmVzc2lvbiwgaGUgc2hhbGwgYmVjb21lIGEgcHVibGljIGVuZW15IGFuZCBiZSBzbGFpbiB3aXRoIGltcHVuaXR5OyAgaGlzIGdvb2RzIHNoYWxsIGJlIGNvbmZpc2NhdGVkIGFuZCBhIHRpdGhlIGdpdmVuIHRvIHRoZSBHb2RkZXNzLjwvcXVvdGU+Cjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkxhdzwvdGl0bGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBkZWNyZWUgd2FzIHBhc3NlZCBhZnRlciB0aGUgcmVzdG9yYXRpb24gb2YgdGhlIGZ1bGwgZGVtb2NyYWN5IGluIDxkYXRlIGF1dGhuYW1lPSItNDEwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDEwIj40MTA8L2RhdGU+LiAgRGVtb3BoYW50dXMgaXMgYSBtZW1iZXIgb2YgdGhlIGJvYXJkIG9mIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Dz4XOs86zz4HOsc+GzrXhv5bPgjwvZm9yZWlnbj7vvIjigJxjb21waWxlcnPigJ3vvIkgIGFwcG9pbnRlZCB0byByZXZpc2UgdGhlIGxhd3MuICBUaGUgcmV2aXNpb24gd2FzIG5vdCBjb21wbGV0ZWQgdW50aWwgYWZ0ZXIgdGhlIGFwcG9pbnRtZW50IG9mIHRoZSA1MDAgTm9tb3RoZXRhZSBpbiA0MDMgZm9yIGEgc2ltaWxhciBwdXJwb3NlLiAgVGhlIGRlY3JlZSB3YXMgYmFzZWQgb24gYSBTb2xvbmlhbiBsYXfvvIg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbmRvYy4gMS45NSIgdmFsaWQ9InllcyI+QW5kb2MuIDEuOTU8L2JpYmw+IGFkIGZpbi7vvIk7ICBoZW5jZSB0aGUgcmVmZXJlbmNlIGluIGl0IHRvIHR5cmFubnkuPC9ub3RlPiBFbmFjdGVkIGJ5IHRoZSBDb3VuY2lsIGFuZCBQZW9wbGUuICBQcnl0YW55IG9mIHRoZSB0cmliZSBBZWFudGlzLiAgU2VjcmV0YXJ5OiAgQ2xlaWdlbmVzLiAgUHJlc2lkZW50OiAgQm9ldGh1cy4gIFRoZSBlbmFjdG1lbnQgZm9sbG93aW5nIHdhcyBmcmFtZWQgYnkgRGVtb3BoYW50dXMgYW5kIGhpcyBjb2xsZWFndWVzLiAgVGhlIGRhdGUgb2YgdGhpcyBkZWNyZWUgaXMgdGhlIGZpcnN0IHNpdHRpbmcgb2YgdGhlIENvdW5jaWwgb2YgRml2ZSBIdW5kcmVkLCBjaG9zZW4gYnkgbG90LCBhdCB3aGljaCBDbGVpZ2VuZXMgYWN0ZWQgYXMgU2VjcmV0YXJ5LjxkYXRlIGF1dGhuYW1lPSItNDEwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDEwIj40MTA8L2RhdGU+LiAgRGVtb3BoYW50dXMgaXMgYSBtZW1iZXIgb2YgdGhlIGJvYXJkIG9mIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Dz4XOs86zz4HOsc+GzrXhv5bPgjwvZm9yZWlnbj7vvIjigJxjb21waWxlcnPigJ3vvIkgIGFwcG9pbnRlZCB0byByZXZpc2UgdGhlIGxhd3MuICBUaGUgcmV2aXNpb24gd2FzIG5vdCBjb21wbGV0ZWQgdW50aWwgYWZ0ZXIgdGhlIGFwcG9pbnRtZW50IG9mIHRoZSA1MDAgTm9tb3RoZXRhZSBpbiA0MDMgZm9yIGEgc2ltaWxhciBwdXJwb3NlLiAgVGhlIGRlY3JlZSB3YXMgYmFzZWQgb24gYSBTb2xvbmlhbiBsYXfvvIg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbmRvYy4gMS45NSIgdmFsaWQ9InllcyI+QW5kb2MuIDEuOTU8L2JpYmw+IGFkIGZpbi7vvIk7ICBoZW5jZSB0aGUgcmVmZXJlbmNlIGluIGl0IHRvIHR5cmFubnkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPklmIGFueW9uZSBzaGFsbCBzdXBwcmVzcyB0aGUgZGVtb2NyYWN5IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBvciBob2xkIHB1YmxpYyBvZmZpY2UgYWZ0ZXIgaXRzIHN1cHByZXNzaW9uLCBoZSBzaGFsbCBiZWNvbWUgYSBwdWJsaWMgZW5lbXkgYW5kIGJlIHNsYWluIHdpdGggaW1wdW5pdHk7ICBoaXMgZ29vZHMgc2hhbGwgYmUgY29uZmlzY2F0ZWQgYW5kIGEgdGl0aGUgZ2l2ZW4gdG8gdGhlIEdvZGRlc3MuPC90cmFuc2xhdGlvbj4="
translation['1.Proof.97'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NyIgdW5pdD0ic2VjdGlvbiIgLz48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJDb250aW51ZWQiPk5vIHNpbiBzaGFsbCBoZSBjb21taXQsIG5vIGRlZmlsZW1lbnQgc2hhbGwgaGUgc3VmZmVyIHdobyBzbGF5cyBzdWNoIGFuIG9uZSBvciB3aG8gY29uc3BpcmVzIHRvIHNsYXkgaGltLiAgQW5kIGFsbCB0aGUgQXRoZW5pYW5zIHNoYWxsIHRha2Ugb2F0aCBieSB0cmliZXMgYW5kIGJ5IGRlbWVzIG92ZXIgYSBzYWNyaWZpY2Ugd2l0aG91dCBibGVtaXNoIHRvIHNsYXkgc3VjaCBhbiBvbmUuICBBbmQgdGhpcyBzaGFsbCBiZSB0aGUgb2F0aDogIOKAnElmIGl0IGJlIGluIG15IHBvd2VyLCBJIHdpbGwgc2xheSBieSB3b3JkIGFuZCBieSBkZWVkLCBieSBteSB2b3RlIGFuZCBieSBteSBoYW5kLCB3aG9zb2V2ZXIgc2hhbGwgc3VwcHJlc3MgdGhlIGRlbW9jcmFjeSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHdob3NvZXZlciBzaGFsbCBob2xkIGFueSBwdWJsaWMgb2ZmaWNlIGFmdGVyIGl0cyBzdXBwcmVzc2lvbiwgYW5kIHdob3NvZXZlciBzaGFsbCBhdHRlbXB0IHRvIGJlY29tZSB0eXJhbnQgb3Igc2hhbGwgaGVscCB0byBpbnN0YWwgYSB0eXJhbnQuICBBbmQgaWYgYW5vdGhlciBzaGFsbCBzbGF5IHN1Y2ggYW4gb25lLCBJIHdpbGwgZGVlbSBoaW0gdG8gYmUgd2l0aG91dCBzaW4gaW4gdGhlIGV5ZXMgb2YgdGhlIGdvZHMgYW5kIHBvd2VycyBhYm92ZSwgYXMgaGF2aW5nIHNsYWluIGEgcHVibGljIGVuZW15LiAgQW5kIEkgd2lsbCBzZWxsIGFsbCB0aGUgZ29vZHMgb2YgdGhlIHNsYWluIGFuZCB3aWxsIGdpdmUgb3ZlciBvbmUgaGFsZiB0byB0aGUgc2xheWVyLCBhbmQgd2lsbCB3aXRoaG9sZCBub3RoaW5nIGZyb20gaGltLjwvcXVvdGU+CjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgd2hvc29ldmVyIHNoYWxsIGhvbGQgYW55IHB1YmxpYyBvZmZpY2UgYWZ0ZXIgaXRzIHN1cHByZXNzaW9uLCBhbmQgd2hvc29ldmVyIHNoYWxsIGF0dGVtcHQgdG8gYmVjb21lIHR5cmFudCBvciBzaGFsbCBoZWxwIHRvIGluc3RhbCBhIHR5cmFudC4gIEFuZCBpZiBhbm90aGVyIHNoYWxsIHNsYXkgc3VjaCBhbiBvbmUsIEkgd2lsbCBkZWVtIGhpbSB0byBiZSB3aXRob3V0IHNpbiBpbiB0aGUgZXllcyBvZiB0aGUgZ29kcyBhbmQgcG93ZXJzIGFib3ZlLCBhcyBoYXZpbmcgc2xhaW4gYSBwdWJsaWMgZW5lbXkuICBBbmQgSSB3aWxsIHNlbGwgYWxsIHRoZSBnb29kcyBvZiB0aGUgc2xhaW4gYW5kIHdpbGwgZ2l2ZSBvdmVyIG9uZSBoYWxmIHRvIHRoZSBzbGF5ZXIsIGFuZCB3aWxsIHdpdGhob2xkIG5vdGhpbmcgZnJvbSBoaW0uPC90cmFuc2xhdGlvbj4="
translation['1.Proof.98'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OCIgdW5pdD0ic2VjdGlvbiIgLz48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJDb250aW51ZWQiPkFuZCBpZiBhbnlvbmUgc2hhbGwgbG9zZSBoaXMgbGlmZSBpbiBzbGF5aW5nIHN1Y2ggYW4gb25lIG9yIGluIGF0dGVtcHRpbmcgdG8gc2xheSBoaW0sIEkgd2lsbCBzaG93IHRvIGhpbSBhbmQgdG8gaGlzIGNoaWxkcmVuIHRoZSBraW5kbmVzcyB3aGljaCB3YXMgc2hvd24gdG8gSGFybW9kaXVzIGFuZCBBcmlzdG9nZWl0b24gYW5kIHRvIHRoZWlyIGNoaWxkcmVuLiAgQW5kIGFsbCBvYXRocyBzd29ybiBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gb3IgaW4gdGhlIGFybXk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2NzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjY3MyI+U2Ftb3M8L3BsYWNlTmFtZT4gaW4gNDExLCB3aGVyZSBQZWlzYW5kZXIgaGFkIGF0IGZpcnN0IHN1Y2Nlc3NmdWxseSBpbnRyaWd1ZWQgZm9yIHRoZSBvdmVydGhyb3cgb2YgdGhlIGRlbW9jcmFjeSBhdCBob21lLjwvbm90ZT4gb3IgZWxzZXdoZXJlIGZvciB0aGUgb3ZlcnRocm93IG9mIHRoZSBBdGhlbmlhbiBkZW1vY3JhY3kgSSBhbm51bCBhbmQgYWJvbGlzaC7igJ0gQWxsIHRoZSBBdGhlbmlhbnMgc2hhbGwgdGFrZSB0aGlzIG9hdGggb3ZlciBhIHNhcmlmaWNlIHdpdGhvdXQgYmxlbWlzaCwgYXMgdGhlIGxhdyBlbmpvaW5zLCBiZWZvcmUgdGhlIERpb255c2lhLiAgQW5kIHRoZXkgc2hhbGwgcHJheSB0aGF0IGhlIHdobyBvYnNlcnZlcyB0aGlzIG9hdGggbWF5IGJlIGJsZXNzZWQgYWJ1bmRhbnRseTogIGJ1dCB0aGF0IGhlIHdobyBvYnNlcnZlcyBpdCBub3QgbWF5IHBlcmlzaCBmcm9tIHRoZSBlYXJ0aCwgYm90aCBoZSBhbmQgaGlzIGhvdXNlLjwvcXVvdGU+CjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBvciBpbiB0aGUgYXJteTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjY3MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjczIj5TYW1vczwvcGxhY2VOYW1lPiBpbiA0MTEsIHdoZXJlIFBlaXNhbmRlciBoYWQgYXQgZmlyc3Qgc3VjY2Vzc2Z1bGx5IGludHJpZ3VlZCBmb3IgdGhlIG92ZXJ0aHJvdyBvZiB0aGUgZGVtb2NyYWN5IGF0IGhvbWUuPC9ub3RlPiBvciBlbHNld2hlcmUgZm9yIHRoZSBvdmVydGhyb3cgb2YgdGhlIEF0aGVuaWFuIGRlbW9jcmFjeSBJIGFubnVsIGFuZCBhYm9saXNoLuKAnSBBbGwgdGhlIEF0aGVuaWFucyBzaGFsbCB0YWtlIHRoaXMgb2F0aCBvdmVyIGEgc2FyaWZpY2Ugd2l0aG91dCBibGVtaXNoLCBhcyB0aGUgbGF3IGVuam9pbnMsIGJlZm9yZSB0aGUgRGlvbnlzaWEuICBBbmQgdGhleSBzaGFsbCBwcmF5IHRoYXQgaGUgd2hvIG9ic2VydmVzIHRoaXMgb2F0aCBtYXkgYmUgYmxlc3NlZCBhYnVuZGFudGx5OiAgYnV0IHRoYXQgaGUgd2hvIG9ic2VydmVzIGl0IG5vdCBtYXkgcGVyaXNoIGZyb20gdGhlIGVhcnRoLCBib3RoIGhlIGFuZCBoaXMgaG91c2UuPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI2NzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjY3MyI+U2Ftb3M8L3BsYWNlTmFtZT4gaW4gNDExLCB3aGVyZSBQZWlzYW5kZXIgaGFkIGF0IGZpcnN0IHN1Y2Nlc3NmdWxseSBpbnRyaWd1ZWQgZm9yIHRoZSBvdmVydGhyb3cgb2YgdGhlIGRlbW9jcmFjeSBhdCBob21lLjwvdHJhbnNsYXRpb24+"
translation['1.Proof.99'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2VsbCwgTXIuIEluZm9ybWVyLCBpcyB0aGlzIGxhdyBpbiBmb3JjZT8gWWVzIG9yIG5vLCB5b3UgcHJhY3Rpc2VkIHZpbGxhaW4/PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFuIGVjaG8gb2YgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iU29waC4gQWouIDEwMyIgdmFsaWQ9InllcyI+U29waC4gQWouIDEwMzwvYmlibD4uPC9ub3RlPiBObzsgIGFuZCB0aGUgcmVhc29uIGZvciB0aGF0IGlzIG9mIGNvdXJzZSB0aGF0IG9ubHkgbGF3cyBwYXNzZWQgYWZ0ZXIgdGhlIGFyY2hvbnNoaXAgb2YgRXVjbGVpZGVzIGNhbiBiZSBhcHBsaWVkLiAgVGhhdCBpcyBob3cgeW91IGNvbWUgdG8gYmUgd2Fsa2luZyBhYm91dCB0aGlzIGNpdHkgYWxpdmXigJRoYXJkbHkgdGhlIGZhdGUgd2hpY2ggeW91IGRlc2VydmVkIGFmdGVyIG1ha2luZyBhIGxpdmluZyBhcyBhIGNvbW1vbiBpbmZvcm1lciB1bmRlciB0aGUgZGVtb2NyYWN5LCBhbmQgYmVjb21pbmcgdGhlIHRvb2wgb2YgdGhlIFRoaXJ0eSB1bmRlciB0aGUgb2xpZ2FyY2h5IHRvIGF2b2lkIGhhdmluZyB0byBkaXNnb3JnZSB5b3VyIHByb2ZpdHMuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlNvcGguIEFqLiAxMDMiIHZhbGlkPSJ5ZXMiPlNvcGguIEFqLiAxMDM8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['1.Proof.100'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDAiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IHRoYXQgaXMgbm90IGVub3VnaC4gIFlvdSBhY3R1YWxseSB0YWxrIHRvIG1lIG9mIG15IGludHJpZ3VlcyE8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiBwb2xpdGljYWwgaW50cmlndWVzLiAgQSByZWZlcmVuY2UgdG8gQW5kb2NpZGVzJyBtZW1iZXJzaGlwIG9mIGFuIG9saWdhcmNoaWMgY2x1YiDvvIggPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byRz4TOsc65z4HOteG9t86xPC9mb3JlaWduPu+8iS48L25vdGU+IFlvdSBhY3R1YWxseSBob2xkIG90aGVycyB1cCB0byBjZW5zdXJl4oCUICB5b3UsIHdobyBoYWQgbm90IHRoZSBkZWNlbmN5IHRvIGNvbmZpbmUgeW91ciBvd24gaW50cmlndWVzIHRvIGJ1dCBhIHNpbmdsZSBhZG1pcmVyLCBidXQgd2VsY29tZWQgdGhlIGVudGlyZSB3b3JsZCBmb3IgbmV4dCB0byBub3RoaW5nLCBhcyB0aGUgY291cnQga25vd3MsIGFuZCBzdXBwb3J0ZWQgeW91cnNlbGYgYnkgdmljZSwgeW91ciB2aWxsYWlub3VzIGFwcGVhcmFuY2Ugbm90d2l0aHN0YW5kaW5nLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJHPhM6xzrnPgc614b23zrE8L2ZvcmVpZ24+77yJLjwvdHJhbnNsYXRpb24+"
translation['1.Proof.101'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCB5ZXQsIGFsdGhvdWdoIHlvdXIgbGF3cyBkZW55IGhpbSBldmVuIHRoZSByaWdodCBvZiBkZWZlbmRpbmcgaGltc2VsZiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QmVjYXVzZSBvZiBoaXMgaW1tb3J0YWxpdHkuPC9ub3RlPiB0aGUgZmVsbG93IGhhcyB0aGUgaW1wdWRlbmNlIHRvIGFjY3VzZSBvdGhlcnMuICBSZWFsbHksIGdlbnRsZW1lbiwgYXMgSSBzYXQgd2F0Y2hpbmcgaGltIG1ha2UgaGlzIHNwZWVjaCBmb3IgdGhlIHByb3NlY3V0aW9uLCBJIHF1aXRlIHRob3VnaHQgdGhhdCBJIGhhZCBiZWVuIGFycmVzdGVkIGFuZCBwdXQgb24gdHJpYWwgYnkgdGhlIFRoaXJ0eS4gIFdobyB3b3VsZCBoYXZlIHByb3NlY3V0ZWQsIGlmIEkgaGFkIGZvdW5kIG15c2VsZiBpbiBjb3VydCBpbiB0aG9zZSBkYXlzPyBFcGljaGFyZXMsIG5vbmUgb3RoZXIuICBUaGVyZSBoZSB3b3VsZCBoYXZlIGJlZW4sIHJlYWR5IHdpdGggYSBjaGFyZ2UsIHVubGVzcyBJIGJvdWdodCBoaW0gb2ZmLiAgQW5kIGhlcmUgaGUgaXMgb25jZSBtb3JlLiAgV2hvLCBhZ2FpbiwgYnV0IENoYXJpY2xlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMzYiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjM2PC9iaWJsPiwgbm90ZS48L25vdGU+IHdvdWxkIGhhdmUgY3Jvc3MtZXhhbWluZWQgbWU/IOKAnFRlbGwgbWUgQW5kb2NpZGVzLOKAnSBoZSB3b3VsZCBoYXZlIGFza2VkLCDigJxkaWQgeW91IGdvIHRvIERlY2VsZWE8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbmRvYy4gMS4zNiIgdmFsaWQ9InllcyI+QW5kb2MuIDEuMzY8L2JpYmw+LCBub3RlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JbiA0MTEsIHdpdGggdGhlIEZvdXIgSHVuZHJlZCB3aGVuIHRoZXkgd2VyZSBvdmVydGhyb3duLjwvbm90ZT4gYW5kIG9jY3VweSBpdCBhcyBhIG1lbmFjZSB0byB5b3VyIGNvdW50cnk/4oCdIOKAnEkgZGlkIG5vdC7igJ0g4oCcV2VsbCwgZGlkIHlvdSBsYXkgQXR0aWNhIHdhc3RlIGFuZCBwaWxsYWdlIHlvdXIgZmVsbG93IEF0aGVuaWFucyBieSBsYW5kIG9yIGJ5IHNlYT/igJ0g4oCcTm8u4oCdIOKAnFRoZW4gYXQgbGVhc3QgeW91IGZvdWdodCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gYXQgc2VhLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMDA3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAwMDcwIj5BZWdvc3BvdGFtaTwvcGxhY2VOYW1lPiwgPGRhdGUgYXV0aG5hbWU9Ii00MDUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDUiPjQwNTwvZGF0ZT4gQi5DLiAgUG9zc2libHkgdGhpcyBpcyBhIHJlZmVyZW5jZSB0byB0aGUgdHJlYWNoZXJ5IG9mIHRoZSBwcm8tU3BhcnRhbiBlbGVtZW50cyBpbiB0aGUgQXRoZW5pYW4gbmF2eSBkdXJpbmcgdGhlIGJhdHRsZS4gIE1vcmUgcHJvYmFibHkgQ2hhcmljbGVzIGlzIHRoaW5raW5nIG9mIEF0aGVuaWFuIGV4aWxlcyB3aG8gc2VydmVkIHdpdGggdGhlIFNwYXJ0YW4gZm9yY2VzLjwvbm90ZT4gb3IgaGVscGVkIHRvIGRlbW9saXNoIGhlciB3YWxscyBvciBwdXQgZG93biBoZXIgZGVtb2NyYWN5LCBvciByZWluc3RhbGxlZCB5b3Vyc2VsZiBieSBmb3JjZT/igJ08cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMDA3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAwMDcwIj5BZWdvc3BvdGFtaTwvcGxhY2VOYW1lPiwgPGRhdGUgYXV0aG5hbWU9Ii00MDUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MDUiPjQwNTwvZGF0ZT4gQi5DLiAgUG9zc2libHkgdGhpcyBpcyBhIHJlZmVyZW5jZSB0byB0aGUgdHJlYWNoZXJ5IG9mIHRoZSBwcm8tU3BhcnRhbiBlbGVtZW50cyBpbiB0aGUgQXRoZW5pYW4gbmF2eSBkdXJpbmcgdGhlIGJhdHRsZS4gIE1vcmUgcHJvYmFibHkgQ2hhcmljbGVzIGlzIHRoaW5raW5nIG9mIEF0aGVuaWFuIGV4aWxlcyB3aG8gc2VydmVkIHdpdGggdGhlIFNwYXJ0YW4gZm9yY2VzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5JbiA8ZGF0ZSBhdXRobmFtZT0iLTQwMyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQwMyI+NDAzPC9kYXRlPiAgQkMuPC9ub3RlPuKAnE5vLCBJIGhhdmUgZG9uZSBub25lIG9mIHRob3NlIHRoaW5ncyBlaXRoZXIu4oCdIOKAnFRoZW4gZG8geW91IGV4cGVjdCB0byBlc2NhcGUgdGhlIGZhdGUgb2Ygc28gbWFueSBvdGhlcnM/4oCdCjxkYXRlIGF1dGhuYW1lPSItNDAzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDAzIj40MDM8L2RhdGU+ICBCQy48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.102'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkRvIHlvdSBub3QgYWdyZWUsIGdlbnRsZW1lbiwgdGhhdCB0aGF0IGlzIGp1c3QgaG93IEkgd291bGQgaGF2ZSBiZWVuIHRyZWF0ZWQgZm9yIHJlbWFpbmluZyBsb3lhbCB0byB5b3UsIGhhZCBJIGZhbGxlbiBpbnRvIHRoZSBjbHV0Y2hlcyBvZiB0aGUgVGhpcnR5PyBUaGVuIHdpbGwgaXQgbm90IGJlIGEgdHJhdmVzdHkgb2YganVzdGljZSBpZiBhIG1hbiB3aG9tIHRoZSBUaGlydHkgd291bGQgaGF2ZSBwdXQgdG8gZGVhdGgsIGFzIHRoZXkgZGlkIG90aGVycywgZm9yIGZhaWxpbmcgdG8gY29tbWl0IGFueSBhY3Qgb2YgZGlzbG95YWx0eSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIGlzIG5vdCB0byBiZSBhY3F1aXR0ZWQgd2hlbiB0cmllZCBiZWZvcmUgeW91IHdob20gaGUgcmVmdXNlZCB0byB3cm9uZz8gU3VjaCBhIHRoaW5nIHdvdWxkIGJlIGFuIG91dHJhZ2UuICBJdCB3b3VsZCBtYWtlIGFjcXVpdHRhbCBuZXh0IHRvIGltcG9zc2libGUgaW4gYW55IGNhc2Ugd2hhdHNvZXZlci4KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.103'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDMiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSB0cnV0aCBpcywgZ2VudGxlbWVuLCB0aGF0IGFsdGhvdWdoIHRoZSBwcm9zZWN1dGlvbiBtYXkgaGF2ZSBhdmFpbGVkIHRoZW1zZWx2ZXMgb2YgYSBwZXJmZWN0bHkgdmFsaWQgbGF3IGluIGxvZGdpbmcgdGhlaXIgaW5mb3JtYXRpb24gYWdhaW5zdCBtZSwgdGhleSBiYXNlZCB0aGVpciBjaGFyZ2UgdXBvbiB0aGF0IG9sZCBkZWNyZWUgd2hpY2ggaXMgY29uY2VybmVkIHdpdGggYW4gZW50aXJlbHkgZGlmZmVyZW50IG1hdHRlci4gIFNvIGlmIHlvdSBjb25kZW1uIG1lLCBiZXdhcmU6ICB5b3Ugd2lsbCBmaW5kIHRoYXQgYSBob3N0IG9mIG90aGVycyBvdWdodCB0byBiZSBhbnN3ZXJpbmcgZm9yIHRoZWlyIHBhc3QgY29uZHVjdCB3aXRoIGZhciBtb3JlIHJlYXNvbiB0aGFuIEkuICBGaXJzdCB0aGVyZSBhcmUgdGhlIG1lbiB3aG8gZm91Z2h0IHlvdSwgd2l0aCB3aG9tIHlvdSBzd29yZSBvYXRocyBvZiByZWNvbmNpbGlhdGlvbjogIHRoZW4gdGhlcmUgYXJlIHRoZSBleGlsZXMgd2hvbSB5b3UgcmVzdG9yZWQ6ICBhbmQgZmluYWxseSB0aGVyZSBhcmUgdGhlIGNpdGl6ZW5zIHdob3NlIHJpZ2h0cyB5b3UgZ2F2ZSBiYWNrIHRvIHRoZW0uICBGb3IgdGhlaXIgc2FrZXMgeW91IHJlbW92ZWQgc3RvbmVzIG9mIHJlY29yZCwgYW5udWxsZWQgbGF3cywgYW5kIGNhbmNlbGxlZCBkZWNyZWVzOyAgYW5kIGl0IGlzIGJlY2F1c2UgdGhleSB0cnVzdCB5b3UgdGhhdCB0aGV5IGFyZSBzdGlsbCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIGdlbnRsZW1lbi4KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.104'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDQiIHVuaXQ9InNlY3Rpb24iIC8+V2hhdCwgZG8geW91IGltYWdpbmUsIHdpbGwgdGhleSBwcmVzdW1lIHRoZWlyIG93biBwb3NpdGlvbiB0byBiZSwgaWYgdGhleSBmaW5kIHRoYXQgeW91IGFyZSBhbGxvd2luZyBwcm9zZWN1dGlvbnMgZm9yIHBhc3QgY29uZHVjdD8gV2lsbCBhbnkgb2YgdGhlbSBiZSByZWFkeSB0byBzdGFuZCB0cmlhbCBmb3IgaGlzIHBhc3QgY29uZHVjdD8gWWV0IGVuZW1pZXMgYW5kIGluZm9ybWVycyB3aWxsIHNwcmluZyB1cCByaWdodCBhbmQgbGVmdCwgcmVhZHkgdG8gYnJpbmcgZXZlcnkgbWFuIG9mIHRoZW0gaW50byBjb3VydC4KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.105'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDUiIHVuaXQ9InNlY3Rpb24iIC8+VG9kYXkgYm90aCBwYXJ0aWVzIGhhdmUgY29tZSB0byBsaXN0ZW4sIGJ1dCBmcm9tIHZlcnkgZGlmZmVyZW50IG1vdGl2ZXMuICBPbmUgc2lkZSB3YW50cyB0byBrbm93IHdoZXRoZXIgdGhleSBhcmUgdG8gcmVseSB1cG9uIHRoZSBsYXdzIGFzIHRoZXkgbm93IHN0YW5kIGFuZCBvbiB0aGUgb2F0aHMgd2hpY2ggeW91IGFuZCB0aGV5IHN3b3JlIHRvIG9uZSBhbm90aGVyOyAgd2hpbGUgdGhlIG90aGVycyBoYXZlIGNvbWUgdG8gc291bmQgb3VyIGZlZWxpbmdzLCB0byBmaW5kIG91dCB3aGV0aGVyIHRoZXkgd2lsbCBiZSBnaXZlbiBjb21wbGV0ZSBsaWNlbmNlIHRvIGZpbGwgdGhlaXIgcG9ja2V0cyBieSBpbmRpY3RtZW50cyxvciBpbmZvcm1hdGlvbnMsIG1heWJlLCBvciBhcnJlc3RzLiAgVGh1cyB0aGUgdHJ1dGggdGhlIG1hdHRlciBpcywgZ2VudGxlbWVuLCB0aGF0IGFsdGhvdWdoIGl0IGlzIG15IGxpZmUgYWxvbmUgd2hpY2ggaXMgYXQgc3Rha2UgaW4gdGhpcyB0cmlhbCwgeW91ciB2ZXJkaWN0IHdpbGwgZGVjaWRlIGZvciB0aGUgcHVibGljIGF0IGxhcmdlIHdoZXRoZXIgdGhleSBhcmUgdG8gcHV0IGZhaXRoIGluIHlvdXIgbGF3cywgb3Igd2hldGhlciwgb24gdGhlIG90aGVyIGhhbmQsIHRoZXkgbXVzdCBjaG9vc2UgYmV0d2VlbiBidXlpbmcgb2ZmIGluZm9ybWVycyBhbmQgcXVpdHRpbmcgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGFzIGZhc3QgYXMgdGhleSBjYW4uCjwvdHJhbnNsYXRpb24+"
translation['1.Proof.106'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDYiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPllvdXIgbWVhc3VyZXMgZm9yIHJldW5pdGluZyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIGdlbnRsZW1lbiwgaGF2ZSBub3QgYmVlbiB3YXN0ZWQ7ICB0aGV5IHdlcmUgYXBwcm9wcmlhdGUsIGFuZCB0aGV5IHdlcmUgc291bmQgcG9saWN5LiAgVG8gY29udmluY2UgeW91IG9mIHRoaXMsIEkgd2lzaCB0byBzYXkgYSBmZXcgd29yZHMgd2l0aCByZWdhcmQgdG8gdGhlbS4gIFRob3NlIHdlcmUgZGFyayBkYXlzIGZvciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gd2hlbiB0aGUgdHlyYW50cyBydWxlZCBoZXIgYW5kIHRoZSBkZW1vY3JhdHMgd2VyZSBpbiBleGlsZS4gIEJ1dCwgbGVkIGJ5IExlb2dvcmFzLCBteSBvd24gZ3JlYXQtZ3JhbmRmYXRoZXIsIGFuZCBDaGFyaWFzLCB3aG9zZSBkYXVnaHRlciBib3JlIG15IGdyYW5kZmF0aGVyIHRvIExlb2dvcmFzLCB5b3VyIGFuY2VzdG9ycyBjcnVzaGVkIHRoZSB0eXJhbnRzIG5lYXIgdGhlIHRlbXBsZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFBhbGxlbmUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFBhbGxlbmUiPlBhbGxlbmU8L3BsYWNlTmFtZT4sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFuZG9jaWRlcyB3YXMgYSBwb29yIGhpc3RvcmlhbiDvvIhjZi4gPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGVhY2Ugd2l0aCBTcC48L3RpdGxlPiwgSW50cm9kLu+8iS4gIEhlcmUgaGUgY29uZnVzZXMgdGhlIGJhdHRsZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFBhbGxlbmUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFBhbGxlbmUiPlBhbGxlbmU8L3BsYWNlTmFtZT4g77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGR0LiAxLjYyIiB2YWxpZD0ieWVzIj5IZHQuIDEuNjI8L2JpYmw+77yJLCBieSB3aGljaCBQZWlzaXN0cmF0dXMgcmVnYWluZWQgaGlzIHR5cmFubnkgZm9yIHRoZSB0aGlyZCB0aW1lIO+8iGMuICA1NDbvvIksIGFuZCB0aGUgYmF0dGxlIG9mIFNpZ2V1bSB3aGljaCByZXN1bHRlZCBpbiB0aGUgZmluYWwgZXhwdWxzaW9uIG9mIGhpcyBzb24gSGlwcGlhcywgdGhlIGxhc3Qgb2YgdGhlIGR5bmFzdHkg77yINTEw77yJLiAgTGVvZ29yYXMgYW5kIENoYXJpYXMgd2VyZSBub3QgYXMgcHJvbWluZW50IG9uIHRoaXMgb2NjYXNpb24gYXMgQW5kb2NpZGVzIHdvdWxkIGhhdmUgdGhlIGp1cnkgYmVsaWV2ZS4gIFRoZSBmYWxsIG9mIEhpcHBpYXMgd2FzIG1haW5seSBkdWUgdG8gdGhlIGVuZXJneSBvZiB0aGUgQWxjbWFlb25pZGFlIGFuZCB0aGUgc3Vic3RhbnRpYWwgaGVscCBwcm92aWRlZCBieSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4uPC9ub3RlPiBhbmQgY2FtZSBiYWNrIHRvIHRoZSBsYW5kIG9mIHRoZWlyIGJpcnRoLiAgU29tZSBvZiB0aGVpciBlbmVtaWVzIHRoZXkgcHV0IHRvIGRlYXRoLCBzb21lIHRoZXkgZXhpbGVkLCBhbmQgc29tZSB0aGV5IGFsbG93ZWQgdG8gbGl2ZSBvbiBpbiA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5QZWFjZSB3aXRoIFNwLjwvdGl0bGU+LCBJbnRyb2Qu77yJLiAgSGVyZSBoZSBjb25mdXNlcyB0aGUgYmF0dGxlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGFsbGVuZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsUGFsbGVuZSI+UGFsbGVuZTwvcGxhY2VOYW1lPiDvvIg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIZHQuIDEuNjIiIHZhbGlkPSJ5ZXMiPkhkdC4gMS42MjwvYmlibD7vvIksIGJ5IHdoaWNoIFBlaXNpc3RyYXR1cyByZWdhaW5lZCBoaXMgdHlyYW5ueSBmb3IgdGhlIHRoaXJkIHRpbWUg77yIYy4gIDU0Nu+8iSwgYW5kIHRoZSBiYXR0bGUgb2YgU2lnZXVtIHdoaWNoIHJlc3VsdGVkIGluIHRoZSBmaW5hbCBleHB1bHNpb24gb2YgaGlzIHNvbiBIaXBwaWFzLCB0aGUgbGFzdCBvZiB0aGUgZHluYXN0eSDvvIg1MTDvvIkuICBMZW9nb3JhcyBhbmQgQ2hhcmlhcyB3ZXJlIG5vdCBhcyBwcm9taW5lbnQgb24gdGhpcyBvY2Nhc2lvbiBhcyBBbmRvY2lkZXMgd291bGQgaGF2ZSB0aGUganVyeSBiZWxpZXZlLiAgVGhlIGZhbGwgb2YgSGlwcGlhcyB3YXMgbWFpbmx5IGR1ZSB0byB0aGUgZW5lcmd5IG9mIHRoZSBBbGNtYWVvbmlkYWUgYW5kIHRoZSBzdWJzdGFudGlhbCBoZWxwIHByb3ZpZGVkIGJ5IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPi48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gd2l0aG91dCB0aGUgcmlnaHRzIG9mIGNpdGl6ZW5zLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.107'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDciIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkxhdGVyIHRoZSBHcmVhdCBLaW5nIGludmFkZWQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+LiAgQXMgc29vbiBhcyBvdXIgZmF0aGVycyBzYXcgd2hhdCBhbiBvcmRlYWwgZmFjZWQgdGhlbSBhbmQgd2hhdCB2YXN0IGZvcmNlcyB0aGUgS2luZyB3YXMgYXNzZW1ibGluZywgdGhleSBkZWNyZWVkIHRoYXQgZXhpbGVzIHNob3VsZCBiZSByZXN0b3JlZCBhbmQgZGlzZnJhbmNoaXNlZCBjaXRpemVucyByZWluc3RhdGVkLCB0aGF0IHRoZXNlIHRvbyBzaG91bGQgdGFrZSB0aGVpciBwYXJ0IGluIHRoZSBwZXJpbG91cyBzdHJ1Z2dsZSBmb3IgZGVsaXZlcmFuY2UuICBBZnRlciBwYXNzaW5nIHRoaXMgZGVjcmVlLCBhbmQgZXhjaGFuZ2luZyBzb2xlbW4gcGxlZGdlcyBhbmQgb2F0aHMsIHRoZXkgZmVhcmxlc3NseSB0b29rIHVwIHRoZWlyIHN0YW5kIGFzIHRoZSBwcm90ZWN0b3JzIG9mIHRoZSB3aG9sZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4sIGFuZCBtZXQgdGhlIFBlcnNpYW5zIGF0IE1hcmF0aG9uOyAgZm9yIHRoZXkgZmVsdCB0aGF0IHRoZWlyIG93biB2YWxvdXIgd2FzIGl0c2VsZiBhIG1hdGNoIGZvciB0aGUgZW5lbXkgaG9yZGVzLiAgVGhleSBmb3VnaHQsIGFuZCB0aGV5IGNvbnF1ZXJlZC4gIFRoZXkgZ2F2ZSBiYWNrIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiBoZXIgZnJlZWRvbSwgYW5kIHRoZXkgZGVsaXZlcmVkIEF0dGljYSwgdGhlIGxhbmQgb2YgdGhlaXIgYmlydGguCjwvdHJhbnNsYXRpb24+"
translation['1.Proof.108'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDgiIHVuaXQ9InNlY3Rpb24iIC8+QWZ0ZXIgdGhlaXIgdHJpdW1waCwgaG93ZXZlciwgdGhleSByZWZ1c2VkIHRvIHJldml2ZSBvbGQgcXVhcnJlbHMuICBBbmQgdGhhdCBpcyBob3cgbWVuIHdobyBmb3VuZCB0aGVpciBjaXR5IGEgd2FzdGUsIGhlciB0ZW1wbGVzIGJ1cm50IHRvIHRoZSBncm91bmQsIGFuZCBoZXIgd2FsbHMgYW5kIGhvdXNlcyBpbiBydWlucywgbWVuIHdobyB3ZXJlIHV0dGVybHkgd2l0aG91dCByZXNvdXJjZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkFub3RoZXIgZ3Jvc3MgaGlzdG9yaWNhbCBlcnJvci4gIEFuZG9jaWRlcyBmYWlscyB0byBkaXN0aW5ndWlzaCBiZXR3ZWVuIHRoZSBmaXJzdCBQZXJzaWFuIGludmFzaW9uLCB3aGljaCBlbmRlZCB3aXRoIHRoZSBBdGhlbmlhbiB2aWN0b3J5IGF0IE1hcmF0aG9uIO+8iDxkYXRlIGF1dGhuYW1lPSItNDkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDkwIj40OTA8L2RhdGU+ICBCLkMu77yJICBhbmQgdGhlIHNlY29uZCDvvIg8ZGF0ZSBhdXRobmFtZT0iLTQ4MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQ4MCI+NDgwPC9kYXRlPiAgQi5DLu+8iSwgaW4gdGhlIGNvdXJzZSBvZiB3aGljaCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gd2FzIHNhY2tlZCBieSB0aGUgZW5lbXkuPC9ub3RlPiBicm91Z2h0IDxkYXRlIGF1dGhuYW1lPSItNDkwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDkwIj40OTA8L2RhdGU+ICBCLkMu77yJICBhbmQgdGhlIHNlY29uZCDvvIg8ZGF0ZSBhdXRobmFtZT0iLTQ4MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQ4MCI+NDgwPC9kYXRlPiAgQi5DLu+8iSwgaW4gdGhlIGNvdXJzZSBvZiB3aGljaCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gd2FzIHNhY2tlZCBieSB0aGUgZW5lbXkuPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IHVuZGVyIHRoZWlyIHN3YXkgYW5kIGhhbmRlZCBvbiB0byB5b3UgdGhlIGdsb3Jpb3VzIGFuZCBtaWdodHkgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IG9mIHRvZGF54oCUYnkgbGl2aW5nIGluIHVuaXR5LiAgTG9uZyBhZnRlcndhcmRzIHlvdSBpbiB5b3VyIHR1cm4gaGFkIHRvIGZhY2UgYSBjcmlzaXMganVzdCBhcyBncmVhdDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BZnRlciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMDA3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAwMDcwIj5BZWdvc3BvdGFtaTwvcGxhY2VOYW1lPi48L25vdGU+Owo8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMDA3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAwMDcwIj5BZWdvc3BvdGFtaTwvcGxhY2VOYW1lPi48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.109'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDkiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGJ5IGRlY2lkaW5nIHRvIHJlc3RvcmUgeW91ciBleGlsZXMgYW5kIGdpdmUgYmFjayB0aGVpciByaWdodHMgdG8gdGhlIGNpdGl6ZW5zIHdobyBoYWQgbG9zdCB0aGVtIHlvdSBzaG93ZWQgdGhhdCB5b3Ugc3RpbGwgaGFkIHRoZSBub2JsZSBzcGlyaXQgb2YgeW91ciBmb3JlZmF0aGVycy4gIFdoYXQsIHRoZW4sIGhhdmUgeW91IHN0aWxsIHRvIGRvIHRvIGVxdWFsIHRoZW0gaW4gZ2VuZXJvc2l0eT8gWW91IG11c3QgcmVmdXNlIHRvIGNoZXJpc2ggZ3JpZXZhbmNlcywgZ2VudGxlbWVuLCByZW1lbWJlcmluZyB0aGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBoYWQgZmFyIGxlc3MgaW4gdGhlIG9sZCBkYXlzIHVwb24gd2hpY2ggdG8gYnVpbGQgaGVyIGdyZWF0bmVzcyBhbmQgcHJvc3Blcml0eS4gIFRoZSBzYW1lIGdyZWF0bmVzcyBhbmQgcHJvc3Blcml0eSBhcmUgaGVycyBzdGlsbCwgd2VyZSBvbmx5IHdlLCBoZXIgY2l0aXplbnMsIHJlYWR5IHRvIGNvbnRyb2wgb3VyIHBhc3Npb25zIGFuZCBsaXZlIGluIHVuaXR5Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.110'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTAiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBwcm9zZWN1dGlvbiBoYXZlIGFsc28gYWNjdXNlZCBtZSBpbiBjb25uZXhpb24gd2l0aCB0aGUgc3VwcGxpYW50J3MgYm91Z2guICBUaGV5IGFsbGVnZSB0aGF0IGl0IHdhcyBJIHdobyBwbGFjZWQgaXQgaW4gdGhlIEVsZXVzaW5pdW0sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoaXMgc3Rvb2QgbmVhciB0aGUgQWNyb3BvbGlzIGFuZCB3YXMgcHJvYmFibHkgdGhlIHN0YXJ0aW5nLXBvaW50IGZvciB0aGUgcHJvY2Vzc2lvbiBhbG9uZyB0aGUgU2FjcmVkIFdheSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEVsZXVzaXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEVsZXVzaXMiPkVsZXVzaXM8L3BsYWNlTmFtZT4gZHVyaW5nIHRoZSBFbGV1c2luaWEuPC9ub3RlPiBhbmQgdGhhdCB1bmRlciBhbmNpZW50IGxhdyB0aGUgcGVuYWx0eSBmb3IgZG9pbmcgc3VjaCBhIHRoaW5nIGR1cmluZyB0aGUgTXlzdGVyaWVzIGlzIGRlYXRoLiAgVGhlIGltcHVkZW5jZSBvZiBpdCEgVGhleSByZXNvcnQgdG8gYSBydXNlIGZvciBteSB1bmRvaW5nLCBidXQgd2lsbCBub3QgbGVhdmUgd2VsbCBhbG9uZSB3aGVuIHRoZWlyIHBsb3QgcHJvdmVzIGEgZmFpbHVyZS4gIFRoZXkgcHJvY2VlZCB0byBicmluZyBhIGZvcm1hbCBhY2N1c2F0aW9uIGFnYWluc3QgbWUgaW4gc3BpdGUgb2YgaXQuCjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRWxldXNpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRWxldXNpcyI+RWxldXNpczwvcGxhY2VOYW1lPiBkdXJpbmcgdGhlIEVsZXVzaW5pYS48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.111'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IHdhcyBvbiBvdXIgcmV0dXJuIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxFbGV1c2lzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxFbGV1c2lzIj5FbGV1c2lzPC9wbGFjZU5hbWU+LCBhZnRlciB0aGUgaW5mb3JtYXRpb24gaGFkIGFscmVhZHkgYmVlbiBsb2RnZWQgYWdhaW5zdCBtZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiAgYWZ0ZXIgQ2VwaGlzaXVzIGhhZCBsb2RnZWQgaGlzIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8lM69zrTOtc65zr7Ouc+CIOG8gM+DzrXOss614b23zrHPgjwvZm9yZWlnbj4gd2l0aCB0aGUgQmFzaWxldXMuICBUaGUgQmFzaWxldXMgd291bGQgcmVwb3J0IHRoaXMgdG8gdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yzr/Phc674b21PC9mb3JlaWduPiB3aGVuIGl0IG1ldCBpbiB0aGUgRWxldXNpbml1bSwgYW5kIGJvdGggQ2VwaGlzaXVzIGFuZCBBbmRvY2lkZXMgd291bGQgaGF2ZSB0byBhdHRlbmQuPC9ub3RlPiBUaGUgQmFzaWxldXMgYXBwZWFyZWQgYmVmb3JlIHRoZSBQcnl0YW5lcyB0byBnaXZlIHRoZSB1c3VhbCByZXBvcnQgb24gYWxsIHRoYXQgaGFkIG9jY3VycmVkIGR1cmluZyB0aGUgcGVyZm9ybWFuY2Ugb2YgdGhlIGNlcmVtb25pZXMgdGhlcmUuICBUaGUgUHJ5dGFuZXMgc2FpZCB0aGF0IHRoZXkgd291bGQgYnJpbmcgaGltIGJlZm9yZSB0aGUgQ291bmNpbCwgYW5kIHRvbGQgaGltIHRvIGdpdmUgQ2VwaGlzaXVzIGFuZCBteXNlbGYgbm90aWNlIHRvIGF0dGVuZCBhdCB0aGUgRWxldXNpbml1bSwgYXMgaXQgd2FzIHRoZXJlIHRoYXQgdGhlIENvdW5jaWwgd2FzIHRvIHNpdCBpbiBjb25mb3JtaXR5IHdpdGggYSBsYXcgb2YgU29sb24ncywgd2hpY2ggbGF5cyBkb3duIHRoYXQgYSBzaXR0aW5nIHNoYWxsIGJlIGhlbGQgaW4gdGhlIEVsZXVzaW5pdW0gb24gdGhlIGRheSBhZnRlciB0aGUgTXlzdGVyaWVzLiAgV2UgZHVseSBhdHRlbmRlZDsKPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byUzr3OtM61zrnOvs65z4Ig4byAz4POtc6yzrXhvbfOsc+CPC9mb3JlaWduPiB3aXRoIHRoZSBCYXNpbGV1cy4gIFRoZSBCYXNpbGV1cyB3b3VsZCByZXBvcnQgdGhpcyB0byB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrLOv8+FzrvhvbU8L2ZvcmVpZ24+IHdoZW4gaXQgbWV0IGluIHRoZSBFbGV1c2luaXVtLCBhbmQgYm90aCBDZXBoaXNpdXMgYW5kIEFuZG9jaWRlcyB3b3VsZCBoYXZlIHRvIGF0dGVuZC48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.112'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHdoZW4gdGhlIENvdW5jaWwgaGFkIGFzc2VtYmxlZCwgQ2FsbGlhcywgc29uIG9mIEhpcHBvbmljdXMsIHdobyB3YXMgd2VhcmluZyBoaXMgY2VyZW1vbmlhbCByb2Jlcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QXMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrThvrPOtM6/4b+mz4fOv8+CPC9mb3JlaWduPiDvvIhUb3JjaC1iZWFyZXLvvIksIHRoZSBoZXJlZGl0YXJ5IG9mZmljZSBvZiBoaXMgZmFtaWx5LCB3aG8gYmVsb25nZWQgdG8gdGhlIGFuY2llbnQgY2xhbiBvZiB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrhvbXPgc+FzrrOtc+CPC9mb3JlaWduPi4gIFRoZSB0b3JjaCB3YXMgc3ltYm9saWMgb2YgRGVtZXRlcidzIHNlYXJjaCB0aHJvdWdoIHRoZSB3b3JsZCBmb3IgaGVyIGRhdWdodGVyLjwvbm90ZT4gcm9zZSBhbmQgYW5ub3VuY2VkIHRoYXQgYSBzdXBwbGlhbnQncyBib3VnaCBoYWQgYmVlbiBwbGFjZWQgb24gdGhlIGFsdGFyLiAgSGUgZGlzcGxheWVkIHRoaXMgYm91Z2ggdG8gdGhlIENvdW5jaWwuICBUaGVyZXVwb24gdGhlIGhlcmFsZDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs604b6zzrTOv+G/ps+Hzr/PgjwvZm9yZWlnbj4g77yIVG9yY2gtYmVhcmVy77yJLCB0aGUgaGVyZWRpdGFyeSBvZmZpY2Ugb2YgaGlzIGZhbWlseSwgd2hvIGJlbG9uZ2VkIHRvIHRoZSBhbmNpZW50IGNsYW4gb2YgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs664b21z4HPhc66zrXPgjwvZm9yZWlnbj4uICBUaGUgdG9yY2ggd2FzIHN5bWJvbGljIG9mIERlbWV0ZXIncyBzZWFyY2ggdGhyb3VnaCB0aGUgd29ybGQgZm9yIGhlciBkYXVnaHRlci48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+RXVjbGVzLCBtZW50aW9uZWQgYmVsb3cuICBIZSB3YXMgdGhlIG9mZmljaWFsIHRvd24tY3JpZXIgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IO+8iGNmLiAgMzbvvIksIGFuZCBhcHBlYXJzIGluIHZhcmlvdXMgaW5zY3JpcHRpb25zIO+8iGNmLiA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5JLkcuIGlpIDIuPC90aXRsZT4gNzPvvIkuICBUaGUgaW5zZXJ0aW9uIG9mIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9gTwvZm9yZWlnbj4gYmVmb3JlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM+AzrXOvs61zrvOuOG9vM69PC9mb3JlaWduPiBpcyB0aGUgc2ltcGxlc3QgY29ycmVjdGlvbiBvZiB0aGUgIE1TLiAgcmVhZGluZyBpbiB0aGUgbmV4dCBzZW50ZW5jZSBidXQgb25lLiAgT3RoZXJzIHdpc2ggdG8gZGlzdGluZ3Vpc2ggYmV0d2VlbiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvYEgzrrhv4bPgc+Fzr48L2ZvcmVpZ24+IGFuZCBFdWNsZXMuPC9ub3RlPiBjYWxsZWQgZm9yIHRoZSBwZXJzb24gcmVzcG9uc2libGUuICBUaGVyZSB3YXMgbm8gcmVwbHksIGFsdGhvdWdoIEkgd2FzIHN0YW5kaW5nIGNsb3NlIGJ5IGFuZCBpbiBmdWxsIHZpZXcgb2YgQ2VwaGlzaXVzLiAgV2hlbiBubyBvbmUgcmVwbGllZCwgYW5kIEV1Y2xlcyBoZXJlLCB3aG8gaGFkIGNvbWUgb3V0IHRvIGlucXVpcmUsIGhhZCBkaXNhcHBlYXJlZCBpbnNpZGUgb25jZSBtb3Jl4oCUYnV0IGNhbGwgaGltLiAgTm93LCBFdWNsZXMsIHRlc3RpZnkgd2hldGhlciB0aGVzZSBmYWN0cyBhcmUgY29ycmVjdCB0byBzdGFydCB3aXRoLiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4g77yIY2YuICAzNu+8iSwgYW5kIGFwcGVhcnMgaW4gdmFyaW91cyBpbnNjcmlwdGlvbnMg77yIY2YuIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkkuRy4gaWkgMi48L3RpdGxlPiA3M++8iS4gIFRoZSBpbnNlcnRpb24gb2YgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2BPC9mb3JlaWduPiBiZWZvcmUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQz4DOtc6+zrXOu8644b28zr08L2ZvcmVpZ24+IGlzIHRoZSBzaW1wbGVzdCBjb3JyZWN0aW9uIG9mIHRoZSAgTVMuICByZWFkaW5nIGluIHRoZSBuZXh0IHNlbnRlbmNlIGJ1dCBvbmUuICBPdGhlcnMgd2lzaCB0byBkaXN0aW5ndWlzaCBiZXR3ZWVuIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9gSDOuuG/hs+Bz4XOvjwvZm9yZWlnbj4gYW5kIEV1Y2xlcy48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJFdmlkZW5jZSI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXZpZGVuY2U8L3RpdGxlPjwvcXVvdGU+Cjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkV2aWRlbmNlPC90aXRsZT48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.113'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTMiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSB0cnV0aCBvZiBteSBhY2NvdW50IGhhcyBiZWVuIGF0dGVzdGVkIGFuZCBpdCBzZWVtcyB0byBtZSB0byBjb250cmFkaWN0IHRoZSBwcm9zZWN1dGlvbidzIHN0b3J5IGZsYXRseS4gIFRoZSBwcm9zZWN1dGlvbiwgeW91IG1heSByZW1lbWJlciwgYWxsZWdlZCB0aGF0IHRoZSBUd28gR29kZGVzc2VzIHRoZW1zZWx2ZXMgaW5mYXR1YXRlZCBtZSBhbmQgbWFkZSBtZSBwbGFjZSB0aGUgYm91Z2ggb24gdGhlIGFsdGFyIGluIGlnbm9yYW5jZSBvZiB0aGUgbGF3LCBpbiBvcmRlciB0aGF0IEkgbWlnaHQgYmUgcHVuaXNoZWQuICBCdXQgSSBtYWludGFpbiwgZ2VudGxlbWVuLCB0aGF0IGV2ZW4gaWYgZXZlcnkgd29yZCBvZiB0aGUgcHJvc2VjdXRpb24ncyBzdG9yeSBpcyB0cnVlLCBpdCB3YXMgdGhlIEdvZGRlc3NlcyB0aGVtc2VsdmVzIHdobyBzYXZlZCBteSBsaWZlLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.114'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTQiIHVuaXQ9InNlY3Rpb24iIC8+U3VwcG9zZSB0aGF0IEkgbGFpZCB0aGUgYm91Z2ggdGhlcmUsIGFuZCB0aGVuIGZhaWxlZCB0byBhbnN3ZXIgdGhlIEhlcmFsZC4gIFdhcyBpdCBub3QgSSBteXNlbGYgd2hvIHdhcyBicmluZ2luZyBhYm91dCBteSBkb29tIGJ5IHB1dHRpbmcgdGhlIGJvdWdoIG9uIHRoZSBhbHRhcj8gQW5kIHdhcyBpdCBub3QgYSBwaWVjZSBvZiBnb29kIGZvcnR1bmUsIG15IHNpbGVuY2UsIHRoYXQgc2F2ZWQgbWUsIGEgcGllY2Ugb2YgZ29vZCBmb3J0dW5lIGZvciB3aGljaCBJIGNsZWFybHkgaGFkIHRoZSBUd28gR29kZGVzc2VzIHRvIHRoYW5rPyBIYWQgdGhlIEdvZGRlc3NlcyBkZXNpcmVkIG15IGRlYXRoLCBJIG91Z2h0IHN1cmVseSB0byBoYXZlIGNvbmZlc3NlZCB0aGF0IEkgaGFkIGxhaWQgdGhlIGJvdWdoIHRoZXJlLCBldmVuIHRob3VnaCBJIGhhZCBub3QgZG9uZSBzby4gIEFzIGl0IHdhcywgSSBkaWQgbm90IGFuc3dlciwgbm9yIGhhZCBJIHBsYWNlZCB0aGUgYm91Z2ggb24gdGhlIGFsdGFyLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.115'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTUiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldoZW4gRXVjbGVzIGluZm9ybWVkIHRoZSBDb3VuY2lsIHRoYXQgdGhlcmUgaGFkIGJlZW4gbm8gcmVzcG9uc2UsIENhbGxpYXMgcm9zZSBvbmNlIG1vcmUgYW5kIHNhaWQgdGhhdCB1bmRlciBhbiBhbmNpZW50IGxhdywgYXMgb2ZmaWNpYWxseSBpbnRlcnByZXRlZCBvbiBhIGZvcm1lciBvY2Nhc2lvbiBieSBoaXMgZmF0aGVyLCBIaXBwb25pY3VzLCB0aGUgcGVuYWx0eSBmb3IgcGxhY2luZyBhIGJvdWdoIGluIHRoZSBFbGV1c2luaXVtIGR1cmluZyB0aGUgTXlzdGVyaWVzIHdhcyBpbnN0YW50IGRlYXRoLiAgSGUgYWRkZWQgdGhhdCBoZSBoYWQgaGVhcmQgdGhhdCBpdCB3YXMgSSB3aG8gaGFkIHB1dCBpdCB0aGVyZS4gIFRoZXJldXBvbiBDZXBoYWx1cyBoZXJlIGxlYXB0IHRvIGhpcyBmZWV0IGFuZCBjcmllZDoKPC90cmFuc2xhdGlvbj4="
translation['1.Proof.116'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTYiIHVuaXQ9InNlY3Rpb24iIC8+4oCcQ2FsbGlhcywgeW91IGltcGlvdXMgc2NvdW5kcmVsLCBmaXJzdCB5b3UgYXJlIGdpdmluZyBpbnRlcnByZXRhdGlvbnMsIHdoZW4geW91IGhhdmUgbm8gcmlnaHQgdG8gZG8gc3VjaCBhIHRoaW5nIGFzIGEgbWVtYmVyIG9mIHRoZSBDZXJ5Y2VzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQzr7hvbXOs863z4POuc+CPC9mb3JlaWduPiB3YXMgdGhlIHByZXJvZ2F0aXZlIG9mIEV1bG1vcGlkYWUgYWxvbmUuPC9ub3RlPiBUaGVuIHlvdSB0YWxrIG9mIGFuIOKAmGFuY2llbnQgbGF3LOKAmSB3aGVuIHRoZSBzdG9uZSBhdCB5b3VyIHNpZGUgbGF5cyBkb3duIHRoYXQgdGhlIHBlbmFsdHkgZm9yIHBsYWNpbmcgYSBib3VnaCBpbiB0aGUgRWxldXNpbml1bSBzaGFsbCBiZSBhIGZpbmUgb2YgYSB0aG91c2FuZCBkcmFjaG1hZS4gIEFuZCBsYXN0bHksIHdobyB0b2xkIHlvdSB0aGF0IEFuZG9jaWRlcyBoYWQgcHV0IHRoZSBib3VnaCB0aGVyZT8gU3VtbW9uIGhpbSBiZWZvcmUgdGhlIENvdW5jaWwsIHNvIHRoYXQgd2UgdG9vIG1heSBoZWFyIHdoYXQgaGUgaGFzIHRvIHNheS7igJ0gVGhlIHN0b25lIHdhcyByZWFkLCBhbmQgQ2FsbGlhcyBjb3VsZCBub3Qgc2F5IHdobyBoaXMgaW5mb3JtYW50IHdhcy4gIEl0IHdhcyB0aHVzIGNsZWFyIHRvIHRoZSBDb3VuY2lsIHRoYXQgaGUgaGFkIHB1dCB0aGUgYm91Z2ggdGhlcmUgaGltc2VsZi4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQzr7hvbXOs863z4POuc+CPC9mb3JlaWduPiB3YXMgdGhlIHByZXJvZ2F0aXZlIG9mIEV1bG1vcGlkYWUgYWxvbmUuPC90cmFuc2xhdGlvbj4="
translation['1.Proof.117'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTciIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBub3csIGdlbnRsZW1lbiwgeW91IHdvdWxkIHBlcmhhcHMgbGlrZSB0byBrbm93IHdoYXQgbW90aXZlIENhbGxpYXMgaGFkIGluIHB1dHRpbmcgdGhlIGJvdWdoIG9uIHRoZSBhbHRhci4gIEkgd2lsbCBleHBsYWluIHdoeSBoZSB0cmllZCB0byB0cmFwIG1lLiAgRXBpbHljdXMsIHNvbiBvZiBUZWlzYW5kZXIsIHdhcyBteSB1bmNsZSwgbXkgbW90aGVyJ3MgYnJvdGhlci48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Rm9yIHRoZSBmYW1pbHkgcmVsYXRpb25zaGlwcyBkZXNjcmliZWQgaGVyZSBhbmQgaW4gdGhlIGZvbGxvd2luZyBzZWUgcCAzMzQuPC9ub3RlPiBIZSBkaWVkIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAzMTIyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDMxMjIiPlNpY2lseTwvcGxhY2VOYW1lPiB3aXRob3V0IG1hbGUgaXNzdWUsIGJ1dCBsZWZ0IHR3byBkYXVnaHRlcnMgd2hvIG91Z2h0IG5vdyB0byBoYXZlIHBhc3NlZCB0byBMZWFncnVzIGFuZCBteXNlbGYuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPklmIGEgY2l0aXplbiBkaWVkIGludGVzdGF0ZSwgbGVhdmluZyBkYXVnaHRlcnMsIGJ1dCBubyBzb25zLCB0aGUgZGF1Z2h0ZXJzIGJlY2FtZSBoZWlyZXNzZXMg77yIIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM+A4b23zrrOu863z4HOv865PC9mb3JlaWduPu+8iSAgYW5kIHNoYXJlZCB0aGUgZXN0YXRlIGJldHdlZW4gdGhlbS4gIFRoZXkgd2VyZSB0aGVuIG9ibGlnZWQgYnkgbGF3IHRvIG1hcnJ5IHRoZWlyIG5lYXJlc3QgbWFsZSByZWxhdGl2ZXMsIGJ1dCBub3QgaW4gdGhlIGFzY2VuZGluZyBsaW5lLiAgVGhlIHJlbGF0aXZlcyBjb25jZXJuZWQgcHV0IGluIGEgY2xhaW0gYmVmb3JlIHRoZSBBcmNob24g77yIIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM+AzrnOtM65zrrOsc+D4b23zrE8L2ZvcmVpZ24+77yJLCBhbmQgaWYgaXQgd2FzIG5vdCBkaXNwdXRlZCwgdGhlIEFyY2hvbiBhZGp1ZGdlZCB0aGUgZGF1Z2h0ZXJzIHRvIHRoZW0gc2V2ZXJhbGx5IGFjY29yZGluZyB0byB0aGVpciBkZWdyZWVzIG9mIHJlbGF0aW9uc2hpcC4gIElmLCBob3dldmVyLCBhcyBoZXJlLCByaXZhbCBjbGFpbWFudHMgYXBwZWFyZWQsIGEgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTOuc6xzrTOuc66zrHPg+G9t86xPC9mb3JlaWduPiB3YXMgaGVsZCBhbmQgdGhlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM+A4b23zrrOu863z4HOv865PC9mb3JlaWduPiB3ZXJlIGFsbG90dGVkIGFjY29yZGluZ2x5Ljwvbm90ZT4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQz4DhvbfOus67zrfPgc6/zrk8L2ZvcmVpZ24+77yJICBhbmQgc2hhcmVkIHRoZSBlc3RhdGUgYmV0d2VlbiB0aGVtLiAgVGhleSB3ZXJlIHRoZW4gb2JsaWdlZCBieSBsYXcgdG8gbWFycnkgdGhlaXIgbmVhcmVzdCBtYWxlIHJlbGF0aXZlcywgYnV0IG5vdCBpbiB0aGUgYXNjZW5kaW5nIGxpbmUuICBUaGUgcmVsYXRpdmVzIGNvbmNlcm5lZCBwdXQgaW4gYSBjbGFpbSBiZWZvcmUgdGhlIEFyY2hvbiDvvIggPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQz4DOuc60zrnOus6xz4PhvbfOsTwvZm9yZWlnbj7vvIksIGFuZCBpZiBpdCB3YXMgbm90IGRpc3B1dGVkLCB0aGUgQXJjaG9uIGFkanVkZ2VkIHRoZSBkYXVnaHRlcnMgdG8gdGhlbSBzZXZlcmFsbHkgYWNjb3JkaW5nIHRvIHRoZWlyIGRlZ3JlZXMgb2YgcmVsYXRpb25zaGlwLiAgSWYsIGhvd2V2ZXIsIGFzIGhlcmUsIHJpdmFsIGNsYWltYW50cyBhcHBlYXJlZCwgYSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtM65zrHOtM65zrrOsc+D4b23zrE8L2ZvcmVpZ24+IHdhcyBoZWxkIGFuZCB0aGUgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byQz4DhvbfOus67zrfPgc6/zrk8L2ZvcmVpZ24+IHdlcmUgYWxsb3R0ZWQgYWNjb3JkaW5nbHkuPC90cmFuc2xhdGlvbj4="
translation['1.Proof.118'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTgiIHVuaXQ9InNlY3Rpb24iIC8+SGlzIHByaXZhdGUgYWZmYWlycyB3ZXJlIGluIGNvbmZ1c2lvbi4gIFRoZSB0YW5naWJsZSBwcm9wZXJ0eSB3aGljaCBoZSBsZWZ0IGRpZCBub3QgYW1vdW50IHRvIHR3byB0YWxlbnRzLCB3aGlsZSBoaXMgZGVidHMgY2FtZSB0byBtb3JlIHRoYW4gZml2ZS4gIEhvd2V2ZXIsIEkgYXJyYW5nZWQgYSBtZWV0aW5nIHdpdGggTGVhZ3J1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5MZWFncnVzLCBsaWtlIEFuZG9jaWRlcywgbXVzdCBoYXZlIGJlZW4gYSBjb3VzaW4uPC9ub3RlPiBiZWZvcmUgb3VyIGZyaWVuZHMgYW5kIHRvbGQgaGltIHRoYXQgdGhpcyB3YXMgdGhlIHRpbWUgZm9yIGRlY2VudCBtZW4gdG8gc2hvdyB0aGVpciByZXNwZWN0IGZvciBmYW1pbHkgdGllcy4KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.119'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTkiIHVuaXQ9InNlY3Rpb24iIC8+4oCcV2UgaGF2ZSBubyByaWdodCB0byBwcmVmZXIgYSB3ZWFsdGh5IG9yIHN1Y2Nlc3NmdWwgYWxsaWFuY2UgYW5kIGxvb2sgZG93biB1cG9uIHRoZSBkYXVnaHRlcnMgb2YgRXBpbHljdXMs4oCdIEkgYXJndWVkOiAg4oCcZm9yIGlmIEVwaWx5Y3VzIHdlcmUgYWxpdmUsIG9yIGhhZCBkaWVkIGEgcmljaCBtYW4sIHdlIHNob3VsZCBiZSBjbGFpbWluZyB0aGUgZ2lybHMgYXMgdGhlaXIgbmV4dCBvZiBraW4uICBXZSBzaG91bGQgaGF2ZSBtYXJyaWVkIHRoZW0gdGhlbiBlaXRoZXIgYmVjYXVzZSBvZiBFcGlseWN1cyBoaW1zZWxmIG9yIGJlY2F1c2Ugb2YgaGlzIG1vbmV5OyAgd2Ugd2lsbCBkbyB0aGUgc2FtZSBub3cgYmVjYXVzZSB3ZSBhcmUgbWVuIG9mIGhvbm91ci4gIERvIHlvdSBvYnRhaW4gYW4gb3JkZXIgb2YgdGhlIGNvdXJ0IGZvciB0aGUgb25lLCBhbmQgSSB3aWxsIGRvIHRoZSBzYW1lIGZvciB0aGUgb3RoZXIu4oCdCjwvdHJhbnNsYXRpb24+"
translation['1.Proof.120'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjAiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhlIGFzc2VudGVkLCBnZW50bGVtZW47ICBzbyBpbiBhY2NvcmRhbmNlIHdpdGggb3VyIGFncmVlbWVudCB3ZSBib3RoIGFwcGxpZWQgZm9yIGFuIG9yZGVyIG9mIHRoZSBjb3VydC4gIFRoZSBnaXJsIGNsYWltZWQgYnkgbWUgaGFwcGVuZWQgdG8gZmFsbCBpbGwsIGFuZCBkaWVkOyAgdGhlIG90aGVyIGlzIHN0aWxsIGFsaXZlLiAgTm93IENhbGxpYXMgdHJpZWQgdG8gYnJpYmUgTGVhZ3J1cyBpbnRvIGxldHRpbmcgaGltIGhhdmUgdGhpcyBzZWNvbmQgZGF1Z2h0ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkNhbGxpYXMgd2FzIGFjdHVhbGx5IGNsYWltaW5nIHRoZSBnaXJsIG9uIGhpcyBzb24ncyBiZWhhbGYg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMTIxIiB2YWxpZD0ieWVzIj5BbmRvYy4gMS4xMjE8L2JpYmw+77yJOyAgYXMgaGVyIGdyYW5kZmF0aGVyLCBoZSB3YXMgZm9yYmlkZGVuIGJ5IGxhdyB0byBtYXJyeSBoZXIgaGltc2VsZi48L25vdGU+IERpcmVjdGx5IEkgaGVhcmQgb2YgaXQsIEkgZGVwb3NpdGVkIGEgZmVlLDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjEyMSIgdmFsaWQ9InllcyI+QW5kb2MuIDEuMTIxPC9iaWJsPu+8iTsgIGFzIGhlciBncmFuZGZhdGhlciwgaGUgd2FzIGZvcmJpZGRlbiBieSBsYXcgdG8gbWFycnkgaGVyIGhpbXNlbGYuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM6xz4HhvbHPg8+EzrHPg865z4I8L2ZvcmVpZ24+IHdhcyBhIGZlZSBvZiBvbmUgZHJhY2htYWUsIHBhaWQgYnkgYW55b25lIGRpc3B1dGluZyB0aGUgY2xhaW0gb2YgYSByZWxhdGl2ZSB0byBhbiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDPgOG9t866zrvOt8+Bzr/PgjwvZm9yZWlnbj4uPC9ub3RlPiBhbmQgYmVnYW4gYnkgb2J0YWluaW5nIGxlYXZlIHRvIHByb2NlZWQgYWdhaW5zdCBMZWFncnVzLCB0byB0aGlzIGVmZmVjdDogIOKAnElmIHlvdSB3aWxsIGNsYWltIHRoZSBnaXJsIGZvciB5b3Vyc2VsZiwgdGFrZSBoZXIgYW5kIGdvb2QgbHVjayB0byB5b3UuICBJZiBub3QsIEkgd2lsbCBjbGFpbSBoZXIgbXlzZWxmLuKAnTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+AzrHPgeG9sc+Dz4TOsc+DzrnPgjwvZm9yZWlnbj4gd2FzIGEgZmVlIG9mIG9uZSBkcmFjaG1hZSwgcGFpZCBieSBhbnlvbmUgZGlzcHV0aW5nIHRoZSBjbGFpbSBvZiBhIHJlbGF0aXZlIHRvIGFuIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM+A4b23zrrOu863z4HOv8+CPC9mb3JlaWduPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+SWYgTGVhZ3J1cyBzdG9vZCBhc2lkZSwgQW5kb2NpZGVzIHdvdWxkIGhhdmUgYSBwcmlvciBjbGFpbSB0byBDYWxsaWFzJyBzb24gaW4gdGhlIGV5ZXMgb2YgdGhlIGxhdy48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['1.Proof.121'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjEiIHVuaXQ9InNlY3Rpb24iIC8+QXMgc29vbiBhcyBDYWxsaWFzIGxlYXJuZWQgb2YgdGhpcywgaGUgZW50ZXJlZCBhIGNsYWltIGZvciB0aGUgZ2lybCBpbiBoaXMgc29uJ3MgbmFtZSwgb24gdGhlIHRlbnRoIG9mIHRoZSBtb250aCwgdG8gcHJldmVudCBtZSBmcm9tIG9idGFpbmluZyBhbiBvcmRlci4gIFNvb24gYWZ0ZXIgdGhlIHR3ZW50aWV0aCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrXhvLDOuuG9sc60zrXPgjwvZm9yZWlnbj4uICBUaGUgbGFzdCB0ZW4gZGF5cyBvZiB0aGUgbW9udGguPC9ub3RlPiBkdXJpbmcgdGhlIE15c3RlcmllcyB3aGljaCBhcmUganVzdCBvdmVyLCBoZSBnaXZlcyBDZXBoaXNpdXMgYSB0aG91c2FuZCBkcmFjaG1hZSwgZ2V0cyBhbiBpbmZvcm1hdGlvbiBsb2RnZWQgYWdhaW5zdCBtZSwgYW5kIGludm9sdmVzIG1lIGluIHRvZGF5J3MgdHJpYWwuICBUaGVuLCB3aGVuIGhlIHNhdyB0aGF0IEkgd2FzIHN0YW5kaW5nIG15IGdyb3VuZCwgaGUgcHV0IHRoZSBib3VnaCBvbiB0aGUgYWx0YXIsIGludGVuZGluZyB0byBoYXZlIG1lIGVpdGhlciBwdXQgdG8gZGVhdGggd2l0aG91dCBhIHRyaWFsIG9yIGJhbmlzaGVkLCBhbmQgdGhlbiB0byBtYXJyeSB0aGUgZGF1Z2h0ZXIgb2YgRXBpbHljdXMgaGltc2VsZiBieSBicmliaW5nIExlYWdydXMuCjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs614bywzrrhvbHOtM61z4I8L2ZvcmVpZ24+LiAgVGhlIGxhc3QgdGVuIGRheXMgb2YgdGhlIG1vbnRoLjwvdHJhbnNsYXRpb24+"
translation['1.Proof.122'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjIiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhvd2V2ZXIsIGhlIHNhdyB0aGF0IGV2ZW4gdGh1cyBoZSB3b3VsZCBub3QgZ2V0IGhpcyB3YXkgd2l0aG91dCBjb21pbmcgaW50byBjb3VydDsgIHNvIGhlIGFwcHJvYWNoZWQgTHlzaXN0cmF0dXMsIEhlZ2Vtb24sIGFuZCBFcGljaGFyZXMsIHdob20gaGUgc2F3IHRvIGJlIGludGltYXRlIGZyaWVuZHMgb2YgbWluZS4gIEhlIGhhZCBpbnNvbGVuY2UgZW5vdWdoLCBoZSBoYWQgY29udGVtcHQgZW5vdWdoIGZvciB0aGUgbGF3IHRvIGluZm9ybSB0aGVtIHRoYXQgaWYgSSB3YXMgcHJlcGFyZWQgZXZlbiBub3cgdG8gcmVsaW5xdWlzaCBteSBjbGFpbXMgdG8gdGhlIGRhdWdodGVyIG9mIEVwaWx5Y3VzLCBoZSB3YXMgcmVhZHkgdG8gc3RvcCBwZXJzZWN1dGluZyBtZSwgdG8gY2FsbCBvZmYgQ2VwaGlzaXVzLCBhbmQgdG8gbWFrZSBhbWVuZHMgZm9yIGhpcyBiZWhhdmlvdXIgd2l0aCBvdXIgZnJpZW5kcyBhcyBhcmJpdHJhdG9ycy4KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.123'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjMiIHVuaXQ9InNlY3Rpb24iIC8+SSB0b2xkIGhpbSB0byBwcm9jZWVkIHdpdGggaGlzIGNhc2UgYW5kIGhpcmUgc3RpbGwgbW9yZSBoZWxwLiAg4oCcQnV0IGlmIHRoZSBwZW9wbGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IHJldHVybiBhIHRydWUgdmVyZGljdCBhbmQgSSBlc2NhcGUgeW91LOKAnSBJIHdhcm5lZCBoaW0sIOKAnHlvdSB3aWxsIGZpbmQgdGhhdCBpdCBpcyB5b3VyIHR1cm4sIEkgdGhpbmssIHRvIGZpZ2h0IGZvciB5b3VyIGxpZmUu4oCdIEFuZCB3aXRoIHlvdXIgcGVybWlzc2lvbiwgZ2VudGxlbWVuLCBJIHdpbGwgbm90IGRpc2FwcG9pbnQgaGltLiAgS2luZGx5IGNhbGwgd2l0bmVzc2VzIHRvIGNvbmZpcm0gd2hhdCBJIGhhdmUgYmVlbiBzYXlpbmcuIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9IldpdG5lc3NlcyI+PHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2l0bmVzc2VzPC90aXRsZT48L3F1b3RlPgo8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5XaXRuZXNzZXM8L3RpdGxlPjwvdHJhbnNsYXRpb24+"
translation['1.Proof.124'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjQiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCB5b3UgbXVzdCBsZXQgbWUgdGVsbCB5b3UgaG93IHRoZSBzb24gdG8gd2hvbSBDYWxsaWFzIHRyaWVkIHRvIGhhdmUgdGhlIGRhdWdodGVyIG9mIEVwaWx5Y3VzIGF3YXJkZWQgd2FzIGJvcm4gYW5kIGFja25vd2xlZGdlZCBieSBoaXMgZmF0aGVyOyAgaXQgaXMgcXVpdGUgd29ydGggaGVhcmluZywgZ2VudGxlbWVuLiAgQ2FsbGlhcyBtYXJyaWVkIGEgZGF1Z2h0ZXIgb2YgSXNjaG9tYWNodXM7ICBidXQgaGUgaGFkIG5vdCBiZWVuIGxpdmluZyB3aXRoIGhlciBhIHllYXIgYmVmb3JlIGhlIG1hZGUgaGVyIG1vdGhlciBoaXMgbWlzdHJlc3MuICBXYXMgZXZlciBtYW4gc28gdXR0ZXJseSB3aXRob3V0IHNoYW1lPyBIZSB3YXMgdGhlIHByaWVzdCBvZiB0aGUgTW90aGVyIGFuZCB0aGUgRGF1Z2h0ZXI7ICB5ZXQgaGUgbGl2ZWQgd2l0aCBtb3RoZXIgYW5kIGRhdWdodGVyIGFuZCBrZXB0IHRoZW0gYm90aCBpbiBoaXMgaG91c2UgdG9nZXRoZXIuCjwvdHJhbnNsYXRpb24+"
translation['1.Proof.125'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjUiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSB0aG91Z2h0IG9mIHRoZSBUd28gR29kZGVzc2VzIG1heSBub3QgaGF2ZSBhd29rZW4gYW55IHNoYW1lIG9yIGZlYXIgaW4gQ2FsbGlhczsgIGJ1dCB0aGUgZGF1Z2h0ZXIgb2YgSXNjaG9tYWNodXMgdGhvdWdodCBkZWF0aCBiZXR0ZXIgdGhhbiBhbiBleGlzdGVuY2Ugd2hlcmUgc3VjaCB0aGluZ3Mgd2VudCBvbiBiZWZvcmUgaGVyIHZlcnkgZXllcy4gIFNoZSB0cmllZCB0byBoYW5nIGhlcnNlbGY6ICBidXQgd2FzIHN0b3BwZWQgaW4gdGhlIGFjdC4gIFRoZW4sIHdoZW4gc2hlIHJlY292ZXJlZCwgc2hlIHJhbiBhd2F5IGZyb20gaG9tZTsgIHRoZSBtb3RoZXIgZHJvdmUgb3V0IHRoZSBkYXVnaHRlci4gIEZpbmFsbHkgQ2FsbGlhcyBncmV3IHRpcmVkIG9mIHRoZSBtb3RoZXIgYXMgd2VsbCwgYW5kIGRyb3ZlIGhlciBvdXQgaW4gaGVyIHR1cm4uICBTaGUgdGhlbiBzYWlkIHNoZSB3YXMgcHJlZ25hbnQgYnkgaGltOyAgYnV0IHdoZW4gc2hlIGdhdmUgYmlydGggdG8gYSBzb24sIENhbGxpYXMgZGVuaWVkIHRoYXQgdGhlIGNoaWxkIHdhcyBoaXMuCjwvdHJhbnNsYXRpb24+"
translation['1.Proof.126'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjYiIHVuaXQ9InNlY3Rpb24iIC8+QXQgdGhhdCwgdGhlIHdvbWFuJ3MgcmVsYXRpdmVzIGNhbWUgdG8gdGhlIGFsdGFyIGF0IHRoZSBBcGF0dXJpYTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5IZWxkIGZvciB0aHJlZSBkYXlzIGluIFB5YW5lcHNpb24g77yIT2N0Li1Ob3Yu77yJLiAgVGhlIGNpdGl6ZW5zIGFzc2VtYmxlZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6xz4ThvbAgz4bPgc6xz4TPgeG9t86xz4I8L2ZvcmVpZ24+LCBhbmQgb24gdGhlIHRoaXJkIGRheSDvvIggPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOv8+Fz4HOteG/ts+EzrnPgjwvZm9yZWlnbj7vvIkgIG5ld2x5IGJvcm4gY2hpbGRyZW4gd2VyZSByZWdpc3RlcmVkIGluIHRoZSBvZmZpY2lhbCBsaXN0IG9mIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Gz4HhvbHPhM6/z4HOtc+CPC9mb3JlaWduPi4gIEEgc2FjcmlmaWNlIGFjY29tcGFuaWVkIHRoZSByZWdpc3RyYXRpb24uICBUaGUgZmF0aGVyIGhhZCB0byBzd2VhciB0aGF0IHRoZSBjaGlsZCB3YXMgdGhlIGxlZ2l0aW1hdGUgb2Zmc3ByaW5nIG9mIGZyZWUtYm9ybiBwYXJlbnRzLCBib3RoIG9mIHdob20gd2VyZSBjaXRpemVucy48L25vdGU+IHdpdGggdGhlIGNoaWxkIGFuZCBhIHZpY3RpbSBmb3Igc2FjcmlmaWNlLCBhbmQgdG9sZCBDYWxsaWFzIHRvIGJlZ2luIHRoZSByaXRlcy4gIEhlIGFza2VkIHdob3NlIGNoaWxkIGl0IHdhcy4gIOKAnFRoZSBjaGlsZCBvZiBDYWxsaWFzLCBzb24gb2YgSGlwcG9uaWN1cyzigJ0gdGhleSByZXBsaWVkLiAg4oCcQnV0IEkgYW0gaGUu4oCdIOKAnFllcywgYW5kIHRoZSBjaGlsZCBpcyB5b3Vycy7igJ0gQ2FsbGlhcyB0b29rIGhvbGQgb2YgdGhlIGFsdGFyIGFuZCBzd29yZSB0aGF0IHRoZSBvbmx5IHNvbiBoZSBoYWQgb3IgaGFkIGV2ZXIgaGFkIHdhcyBIaXBwb25pY3VzLCBhbmQgdGhlIG1vdGhlciB3YXMgR2xhdWNvbidzIGRhdWdodGVyLiAgSWYgdGhhdCB3YXMgbm90IHRoZSB0cnV0aCwgaGUgcHJheWVkIHRoYXQgaGUgYW5kIGhpcyBob3VzZSBtaWdodCBwZXJpc2ggZnJvbSB0aGUgZWFydGjigJRhcyB0aGV5IHN1cmVseSB3aWxsLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6xz4ThvbAgz4bPgc6xz4TPgeG9t86xz4I8L2ZvcmVpZ24+LCBhbmQgb24gdGhlIHRoaXJkIGRheSDvvIggPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOv8+Fz4HOteG/ts+EzrnPgjwvZm9yZWlnbj7vvIkgIG5ld2x5IGJvcm4gY2hpbGRyZW4gd2VyZSByZWdpc3RlcmVkIGluIHRoZSBvZmZpY2lhbCBsaXN0IG9mIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Gz4HhvbHPhM6/z4HOtc+CPC9mb3JlaWduPi4gIEEgc2FjcmlmaWNlIGFjY29tcGFuaWVkIHRoZSByZWdpc3RyYXRpb24uICBUaGUgZmF0aGVyIGhhZCB0byBzd2VhciB0aGF0IHRoZSBjaGlsZCB3YXMgdGhlIGxlZ2l0aW1hdGUgb2Zmc3ByaW5nIG9mIGZyZWUtYm9ybiBwYXJlbnRzLCBib3RoIG9mIHdob20gd2VyZSBjaXRpemVucy48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.127'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjciIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBzb21lIHRpbWUgYWZ0ZXJ3YXJkcywgZ2VudGxlbWVuLCBoZSBmZWxsIGluIGxvdmUgd2l0aCB0aGUgYWJhbmRvbmVkIG9sZCBoYWcgb25jZSBtb3JlIGFuZCB3ZWxjb21lZCBoZXIgYmFjayBpbnRvIGhpcyBob3VzZSwgd2hpbGUgaGUgcHJlc2VudGVkIHRoZSBib3ksIGEgZ3Jvd24gbGFkIGJ5IHRoaXMgdGltZSwgdG8gdGhlIENlcnljZXMsIGFzc2VydGluZyB0aGF0IGhlIHdhcyBoaXMgb3duIHNvbi4gIENhbGxpYWRlcyBvcHBvc2VkIGhpcyBhZG1pc3Npb247ICBidXQgdGhlIENlcnljZXMgdm90ZWQgaW4gZmF2b3VyIG9mIHRoZSBsYXcgd2hpY2ggdGhleSBoYXZlLCB3aGVyZWJ5IGEgZmF0aGVyIGNhbiBpbnRyb2R1Y2UgaGlzIHNvbiwgaWYgaGUgc3dlYXJzIHRoYXQgaXQgaXMgaGlzIG93biBzb24gd2hvbSBoZSBpcyBpbnRyb2R1Y2luZy4gIFNvIENhbGxpYXMgdG9vayBob2xkIG9mIHRoZSBhbHRhciBhbmQgc3dvcmUgdGhhdCB0aGUgYm95IHdhcyBoaXMgbGVnaXRpbWF0ZSBzb24gYnkgQ2hyeXNpbGxhLiAgWWV0IGhlIGhhZCBkaXNvd25lZCB0aGF0IHNhbWUgc29uLiAgQ2FsbCB3aXRuZXNzZXMgdG8gY29uZmlybSBhbGwgdGhpcywgcGxlYXNlLiA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJXaXRuZXNzZXMiPjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPldpdG5lc3NlczwvdGl0bGU+PC9xdW90ZT4KPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2l0bmVzc2VzPC90aXRsZT48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.128'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjgiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkxldCB1cyBqdXN0IHNlZSwgZ2VudGxlbWVuLCB3aGV0aGVyIGFueXRoaW5nIG9mIHRoaXMga2luZCBoYXMgZXZlciBoYXBwZW5lZCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gYmVmb3JlLiAgQSBtYW4gbWFycmllcyBhIHdpZmUsIGFuZCB0aGVuIG1hcnJpZXMgdGhlIG1vdGhlciBhcyB3ZWxsIGFzIHRoZSBkYXVnaHRlci4gIFRoZSBtb3RoZXIgdHVybnMgdGhlIGRhdWdodGVyIG91dC4gIFRoZW4sIHdoaWxlIGxpdmluZyB3aXRoIHRoZSBtb3RoZXIsIGhlIHdhbnRzIHRvIG1hcnJ5IHRoZSBkYXVnaHRlciBvZiBFcGlseWN1cywgc28gdGhhdCB0aGUgZ3JhbmRkYXVnaHRlciBjYW4gdHVybiB0aGUgZ3JhbmRtb3RoZXIgb3V0LiAgV2h5LCB3aGF0IG91Z2h0IGhpcyBjaGlsZCB0byBiZSBjYWxsZWQ/CjwvdHJhbnNsYXRpb24+"
translation['1.Proof.129'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjkiIHVuaXQ9InNlY3Rpb24iIC8+UGVyc29uYWxseSwgSSBkbyBub3QgYmVsaWV2ZSB0aGF0IHRoZXJlIGlzIGFueW9uZSBpbmdlbmlvdXMgZW5vdWdoIHRvIGZpbmQgdGhlIHJpZ2h0IG5hbWUgZm9yIGhpbS4gIFRoZXJlIGFyZSB0aHJlZSB3b21lbiB3aXRoIHdob20gaGlzIGZhdGhlciB3aWxsIGhhdmUgbGl2ZWQ6ICBhbmQgaGUgaXMgdGhlIGFsbGVnZWQgc29uIG9mIG9uZSBvZiB0aGVtLCB0aGUgYnJvdGhlciBvZiBhbm90aGVyLCBhbmQgdGhlIHVuY2xlIG9mIHRoZSB0aGlyZC4gIFdoYXQgb3VnaHQgYSBzb24gbGlrZSB0aGF0IHRvIGJlIGNhbGxlZD8gT2VkaXB1cywgQWVnaXN0aHVzLCBvciB3aGF0Pwo8L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.130'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzAiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFzIGEgbWF0dGVyIG9mIGZhY3QsIEkgd2FudCB0byByZW1pbmQgeW91IGJyaWVmbHksIGdlbnRsZW1lbiwgb2YgYSBjZXJ0YWluIGluY2lkZW50IGNvbm5lY3RlZCB3aXRoIENhbGxpYXMuICBBcyB5b3UgbWF5IHJlbWVtYmVyLCB3aGVuIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiB3YXMgbWlzdHJlc3Mgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IGFuZCBhdCB0aGUgaGVpZ2h0IG9mIGhlciBwcm9zcGVyaXR5LCBhbmQgSGlwcG9uaWN1cyB3YXMgdGhlIHJpY2hlc3QgbWFuIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiwgYSBydW1vdXIgd2l0aCB3aGljaCB5b3UgYXJlIGFsbCBmYW1pbGlhciB3YXMgb24gdGhlIGxpcHMgb2YgbGl0dGxlIGNoaWxkcmVuIGFuZCBzaWxseSB3b21lbiB0aHJvdWdob3V0IHRoZSBjaXR5OiAg4oCcSGlwcG9uaWN1cyzigJ0gdGhleSBzYWlkLCDigJxoYXMgYW4gZXZpbCBzcGlyaXQgaW4gaGlzIGhvdXNlLCBhbmQgaXQgdXBzZXRzIGhpcyBib29rcy7igJ08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+TGl0LiAg4oCcaGlzIHRhYmxlLOKAnSB3aXRoIGEgcGxheSBvbiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM+B4b2xz4DOtc62zrE8L2ZvcmVpZ24+IG1lYW5pbmcgYSDigJxiYW5rLuKAnSBUaGUgcHVuIGNhbm5vdCBiZSByZW5kZXJlZCBleGFjdGx5IGluIEVuZ2xpc2guPC9ub3RlPiBZb3UgcmVtZW1iZXIgaXQsIGdlbnRsZW1lbi4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4TPgeG9sc+AzrXOts6xPC9mb3JlaWduPiBtZWFuaW5nIGEg4oCcYmFuay7igJ0gVGhlIHB1biBjYW5ub3QgYmUgcmVuZGVyZWQgZXhhY3RseSBpbiBFbmdsaXNoLjwvdHJhbnNsYXRpb24+"
translation['1.Proof.131'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzEiIHVuaXQ9InNlY3Rpb24iIC8+Tm93IGluIHdoYXQgc2Vuc2UgZG8geW91IHRoaW5rIHRoYXQgdGhlIHNheWluZyBjdXJyZW50IGluIHRob3NlIGRheXMgcHJvdmVkIHRydWU/IFdoeSwgSGlwcG9uaWN1cyBpbWFnaW5lZCB0aGF0IGhlIGhhZCBhIHNvbiBpbiBoaXMgaG91c2U7ICBidXQgdGhhdCBzb24gd2FzIHJlYWxseSBhbiBldmlsIHNwaXJpdCwgd2hpY2ggaGFzIHVwc2V0IGhpcyB3ZWFsdGgsIGhpcyBtb3JhbHMsIGFuZCBoaXMgd2hvbGUgbGlmZS4gIFNvIGl0IGlzIGFzIEhpcHBvbmljdXMnIGV2aWwgc3Bpcml0IHRoYXQgeW91IG11c3QgdGhpbmsgb2YgQ2FsbGlhcy4KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.132'] = ""
translation['1.Proof.133'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzMiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkkgd2lsbCB0ZWxsIHlvdSB0aGUgcmVhc29uIGZvciB0aGlzIGNoYW5nZSBvZiBmcm9udC4gIExhc3QgeWVhciBhbmQgdGhlIHllYXIgYmVmb3JlIG91ciBob25lc3QgQWd5cnJoaXVzIGhlcmUgd2FzIGNoaWVmIGNvbnRyYWN0b3IgZm9yIHRoZSB0d28gcGVyIGNlbnQgY3VzdG9tcyBkdXRpZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkxldmllZCBvbiBhbGwgaW1wb3J0cyBhbmQgZXhwb3J0cyBhdCBQZWlyYWV1cy48L25vdGU+IEhlIGZhcm1lZCB0aGVtIGZvciB0aGlydHkgdGFsZW50cywgYW5kIHRoZSBmcmllbmRzIGhlIG1lZXRzIHVuZGVyIHRoZSBwb3BsYXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QXBwYXJlbnRseSBhIHdlbGwta25vd24gc3BvdC4gIEl0IGlzIG5vdCBtZW50aW9uZWQgIGVsc2V3aGVyZS48L25vdGU+IGFsbCB0b29rIHNoYXJlcyB3aXRoIGhpbS4gIFlvdSBrbm93IHdoYXQgdGhleSBhcmUgbGlrZTsgIGl0IGlzIG15IGJlbGllZiB0aGF0IHRoZXkgbWVldCB0aGVyZSBmb3IgYSBkb3VibGUgcHVycG9zZTogIHRvIGJlIHBhaWQgZm9yIG5vdCByYWlzaW5nIHRoZSBiaWRkaW5nLCBhbmQgdG8gdGFrZSBzaGFyZXMgaW4gdGF4ZXMgd2hpY2ggaGF2ZSBiZWVuIGtub2NrZWQgZG93biBjaGVhcC4KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.134'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzQiIHVuaXQ9InNlY3Rpb24iIC8+QWZ0ZXIgbWFraW5nIGEgcHJvZml0IG9mIHNpeCB0YWxlbnRzLCB0aGV5IHNhdyB3aGF0IGEgZ29sZC1taW5lIHRoZSBidXNpbmVzcyB3YXM7ICBzbyB0aGV5IGNvbWJpbmVkLCBnYXZlIHJpdmFsIGJpZGRlcnMgYSBwZXJjZW50YWdlLCBhbmQgYWdhaW4gb2ZmZXJlZCB0aGlydHkgdGFsZW50cy4gIFRoZXJlIHdhcyBubyBjb21wZXRpdGlvbjsgIHNvIEkgd2VudCBiZWZvcmUgdGhlIENvdW5jaWwgYW5kIG91dGJpZCB0aGVtLCB1bnRpbCBJIHB1cmNoYXNlZCB0aGUgcmlnaHRzIGZvciB0aGlydHktc2l4IHRhbGVudHMuICBJIGhhZCBvdXN0ZWQgdGhlbS4gIEkgdGhlbiBmdXJuaXNoZWQgeW91IHdpdGggc3VyZXRpZXMsIGNvbGxlY3RlZCB0aGUgdGF4LCBhbmQgc2V0dGxlZCB3aXRoIHRoZSBzdGF0ZS4gIEkgZGlkIG5vdCBsb3NlIGJ5IGl0LCBhcyBteSBwYXJ0bmVycyBhbmQgSSBhY3R1YWxseSBtYWRlIGEgc21hbGwgcHJvZml0LiAgQXQgdGhlIHNhbWUgdGltZSBJIHN0b3BwZWQgQWd5cnJoaXVzIGFuZCBoaXMgZnJpZW5kcyBmcm9tIHNoYXJpbmcgc2l4IHRhbGVudHMgd2hpY2ggYmVsb25nZWQgdG8geW91Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.135'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzUiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXkgc2F3IHRoaXMgdGhlbXNlbHZlcywgYW5kIGRpc2N1c3NlZCB0aGUgc2l0dWF0aW9uLiAg4oCcVGhpcyBmZWxsb3cgd2lsbCBub3QgdGFrZSBhbnkgb2YgdGhlIHB1YmxpYyBtb25leSBoaW1zZWxmLOKAnSB0aGV5IGFyZ3VlZCwg4oCcYW5kIGhlIHdpbGwgbm90IGxldCB1cyB0YWtlIGFueSBlaXRoZXIuICBIZSB3aWxsIGJlIG9uIHRoZSB3YXRjaCBhbmQgc3RvcCBvdXIgc2hhcmluZyB3aGF0IGJlbG9uZ3MgdG8gdGhlIHN0YXRlOyAgYW5kIGZ1cnRoZXJtb3JlLCBpZiBoZSBjYXRjaGVzIGFueSBvZiB1cyBhY3RpbmcgZGlzaG9uZXN0bHksIGhlIHdpbGwgYnJpbmcgaGltIGludG8gdGhlIHB1YmxpYyBjb3VydHMgYW5kIHJ1aW4gaGltLiAgSGUgbXVzdCBiZSBnb3QgcmlkIG9mIGF0IGFsbCBjb3N0cy7igJ0KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.136'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzYiIHVuaXQ9InNlY3Rpb24iIC8+VGhlIHByb3NlY3V0aW9uIHdlcmUgYm91bmQgdG8gYmVoYXZlIHRodXMsIGdlbnRsZW1lbjsgIGJ1dCB5b3UgbXVzdCBkbyB0aGUgb3Bwb3NpdGU6ICBmb3IgSSBzaG91bGQgYmUgaGFwcHkgdG8gc2VlIHlvdSB3aXRoIGFzIG1hbnkgbWVuIGFzIHBvc3NpYmxlIGxpa2UgbXlzZWxmIGFuZCB0byBzZWUgbXkgYWNjdXNlcnMgc3RhbXBlZCBvdXQgb2YgZXhpc3RlbmNlLCBvciBhdCBsZWFzdCBjb25mcm9udGVkIGJ5IHRob3NlIHdobyB3aWxsIG5vdCBjb3VudGVuYW5jZSB0aGVpciBhY3Rpdml0aWVzLiAgU3VjaCBtZW4gc2hvdWxkIHNob3cgdGhlbXNlbHZlcyBzdGF1bmNoIGFuZCBpbXBhcnRpYWwgY2hhbXBpb25zIG9mIHlvdXIgaW50ZXJlc3RzLCBhbmQgdGhleSB3aWxsIGJlIGFibGUgdG8gc2VydmUgeW91IHdlbGwsIGlmIHRoZXkgYXJlIHdpbGxpbmcgdG8gZG8gc28uICBJIGZvciBvbmUgcHJvbWlzZSB5b3UgZWl0aGVyIHRvIHB1dCBhIHN0b3AgdG8gdGhlIHByYWN0aWNlcyBvZiB0aGUgcHJvc2VjdXRpb24gYW5kIHJlbmRlciB0aGVtIGJldHRlciBjaXRpemVucywgb3IgdG8gYnJpbmcgc3VjaCBvZiB0aGVtIGFzIGFyZSBndWlsdHkgb2YgY3JpbWluYWwgYmVoYXZpb3VyIGludG8gY291cnQgYW5kIGhhdmUgdGhlbSBwdW5pc2hlZC4KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.137'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzciIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBwcm9zZWN1dGlvbiBoYXZlIGFsc28gZm91bmQgZ3JvdW5kcyBmb3IgYXR0YWNraW5nIG1lIGluIHRoZSBmYWN0IHRoYXQgSSBhbSBhIG1lcmNoYW50IHdobyBvd25zIHNoaXBzLiAgV2UgYXJlIGFza2VkIHRvIGJlbGlldmUgdGhhdCB0aGUgb25seSBvYmplY3Qgb2YgdGhlIGdvZHMgaW4gc2F2aW5nIG1lIGZyb20gdGhlIGRhbmdlcnMgb2YgdGhlIHNlYSB3YXMsIGFwcGFyZW50bHksIHRvIGxldCBDZXBoaXNpdXMgcHV0IGFuIGVuZCB0byBtZSB3aGVuIEkgcmVhY2hlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4uICBObywgZ2VudGxlbWVuLiAgSSBmb3Igb25lIGNhbm5vdCBiZWxpZXZlIHRoYXQgaWYgdGhlIGdvZHMgY29uc2lkZXJlZCBtZSBndWlsdHkgb2YgYW4gb2ZmZW5jZSBhZ2FpbnN0IHRoZW0sIHRoZXkgd291bGQgaGF2ZSBiZWVuIGRpc3Bvc2VkIHRvIHNwYXJlIG1lIHdoZW4gdGhleSBoYWQgbWUgaW4gYSBzaXR1YXRpb24gb2YgdGhlIHV0bW9zdCBwZXJpbOKAlGZvciB3aGVuIGlzIG1hbiBpbiBncmVhdGVyIHBlcmlsIHRoYW4gb24gYSB3aW50ZXIgc2VhLXBhc3NhZ2U/IEFyZSB3ZSB0byBzdXBwb3NlIHRoYXQgdGhlIGdvZHMgaGFkIG15IHBlcnNvbiBhdCB0aGVpciBtZXJjeSBvbiBqdXN0IHN1Y2ggYSB2b3lhZ2UsIHRoYXQgdGhleSBoYWQgbXkgbGlmZSBhbmQgbXkgZ29vZHMgaW4gdGhlaXIgcG93ZXIsIGFuZCB0aGF0IGluIHNwaXRlIG9mIGl0IHRoZXkga2VwdCBtZSBzYWZlPwo8L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.138'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzgiIHVuaXQ9InNlY3Rpb24iIC8+V2h5LCBjb3VsZCB0aGV5IG5vdCBoYXZlIGNhdXNlZCBldmVuIG15IGNvcnBzZSB0byBiZSBkZW5pZWQgZHVlIGJ1cmlhbD8gRnVydGhlcm1vcmUsIGl0IHdhcyB3YXItdGltZTsgIHRoZSBzZWEgd2FzIGluZmVzdGVkIHdpdGggdHJpcmVtZXMgYW5kIHBpcmF0ZXMsIHdobyB0b29rIG1hbnkgYSB0cmF2ZWxsZXIgcHJpc29uZXIsIGFuZCBhZnRlciByb2JiaW5nIGhpbSBvZiBoaXMgYWxsLCBzZW50IGhpbSB0byBlbmQgaGlzIGRheXMgaW4gc2xhdmVyeS4gIEFuZCB0aGVyZSB3ZXJlIGZvcmVpZ24gc2hvcmVzIG9uIHdoaWNoIG1hbnkgYSB0cmF2ZWxsZXIgaGFkIGJlZW4gd3JlY2tlZCwgdG8gYmUgcHV0IHRvIGRlYXRoIGFmdGVyIG1lZXRpbmcgd2l0aCBzaGFtZWZ1bCBpbmRpZ25pdGllcyBhbmQgbWFsdHJlYXRtZW50Lgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.139'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMzkiIHVuaXQ9InNlY3Rpb24iIC8+SXMgaXQgY29uY2VpdmFibGUgdGhhdCB0aGUgZ29kcyBzYXZlZCBtZSBmcm9tIHBlcmlscyBvZiB0aGF0IG5hdHVyZSwgb25seSB0byBsZXQgdGhlbXNlbHZlcyBiZSBjaGFtcGlvbmVkIGJ5IENlcGhpc2l1cywgdGhlIGJpZ2dlc3Qgc2NvdW5kcmVsIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgd2hvc2UgY2l0aXplbiBoZSBjbGFpbXMgdG8gYmUgd2hlbiBoZSBpcyBub3RoaW5nIG9mIHRoZSBraW5kLCBhbmQgd2hvbSBldmVyeSBvbmUgb2YgeW91IHNpdHRpbmcgaW4gdGhpcyBjb3VydCBrbm93cyB0b28gd2VsbCB0byB0cnVzdCB3aXRoIGFueSB0aGluZyBiZWxvbmdpbmcgdG8gaGltPyBObywgZ2VudGxlbWVuOyAgdG8gbXkgbWluZCB0aGUgZGFuZ2VycyBvZiBhIHRyaWFsIGxpa2UgdGhlIHByZXNlbnQgYXJlIHRvIGJlIHJlZ2FyZGVkIGFzIHRoZSB3b3JrIG9mIG1hbiwgYW5kIHRoZSBkYW5nZXJzIG9mIHRoZSBzZWEgYXMgdGhlIHdvcmsgb2YgR29kLiAgU28gaWYgd2UgbXVzdCBwZXJmb3JjZSBzcGVjdWxhdGUgYWJvdXQgdGhlIGdvZHMsIEkgZm9yIG9uZSBhbSBzdXJlIHRoYXQgdGhleSB3b3VsZCBiZSBtb3ZlZCB0byB0aGUgZGVlcGVzdCB3cmF0aCBhbmQgaW5kaWduYXRpb24gdG8gc2VlIHRob3NlIHdob20gdGhleSBoYWQgdGhlbXNlbHZlcyBwcmVzZXJ2ZWQgYnJvdWdodCB0byBkZXN0cnVjdGlvbiBieSBtb3J0YWwgbWVuLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.140'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDAiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXJlIGlzIHlldCBhbm90aGVyIHRoaW5nIHdvcnRoIHlvdXIgY29uc2lkZXJhdGlvbiwgZ2VudGxlbWVuLiAgQXQgdGhlIG1vbWVudCB0aGUgd2hvbGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAwNzQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDA3NCI+R3JlZWNlPC9wbGFjZU5hbWU+IHRoaW5rcyB0aGF0IHlvdSBoYXZlIHNob3duIHRoZSBncmVhdGVzdCBnZW5lcm9zaXR5IGFuZCB3aXNkb20gaW4gZGV2b3RpbmcgeW91cnNlbHZlcywgbm90IHRvIHJldmVuZ2UsIGJ1dCB0byB0aGUgcHJlc2VydmF0aW9uIG9mIHlvdXIgY2l0eSBhbmQgdGhlIHJldW5pdGluZyBvZiBpdHMgY2l0aXplbnMuICBNYW55IGJlZm9yZSBub3cgaGF2ZSBzdWZmZXJlZCBubyBsZXNzIHRoYW4gd2U7ICBidXQgaXQgaXMgdmVyeSByaWdodGx5IHJlY29nbml6ZWQgdGhhdCB0aGUgcGVhY2VhYmxlIHNldHRsZW1lbnQgb2YgZGlmZmVyZW5jZXMgcmVxdWlyZXMgZ2VuZXJvc2l0eSBhbmQgc2VsZi1jb250cm9sLiAgTm93IGl0IGlzIGFja25vd2xlZGdlZCBvbiBhbGwgc2lkZXMsIGJ5IGZyaWVuZCBhbmQgZm9lIGFsaWtlLCB0aGF0IHlvdSBwb3NzZXNzIHRob3NlIGdpZnRzLiAgU28gZG8gbm90IGNoYW5nZSB5b3VyIHdheXM6ICBkbyBub3QgaGFzdGVuIHRvIHJvYiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gb2YgdGhlIGdsb3J5IHdoaWNoIHNoZSBoYXMgZ2FpbmVkIHRoZXJlYnksIG9yIGFsbG93IGl0IHRvIGJlIHN1cHBvc2VkIHRoYXQgeW91IGF1dGhvcml6ZWQgeW91ciBkZWNyZWUgbW9yZSBieSBjaGFuY2UgdGhhbiBieSBpbnRlbnRpb24uCjwvdHJhbnNsYXRpb24+"
translation['1.Proof.141'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkkgYmVnIHlvdSBvbmUgYW5kIGFsbCwgdGhlbiwgdG8gaG9sZCB0b3dhcmRzIG1lIHRoZSBmZWVsaW5ncyB3aGljaCB5b3UgaG9sZCB0b3dhcmRzIG15IGFuY2VzdG9ycywgc28gdGhhdCBJIG1heSBoYXZlIHRoZSBvcHBvcnR1bml0eSBvZiBpbWl0YXRpbmcgdGhlbS4gIFRoZXkgcmFuaywgcmVtZW1iZXIsIGFtb25nIHRoZSBtb3N0IHRpcmVsZXNzIGFuZCB0aGUgZ3JlYXRlc3QgYmVuZWZhY3RvcnMgb2Ygb3VyIGNpdHk7ICBhbmQgZm9yZW1vc3QgYW1vbmcgdGhlIG1hbnkgbW90aXZlcyB3aGljaCBpbnNwaXJlZCB0aGVtIGNhbWUgZGV2b3Rpb24gdG8geW91ciB3ZWxmYXJlIGFuZCB0aGUgaG9wZSB0aGF0IGlmIHRoZXkgb3IgYW55IG9mIHRoZWlyIGNoaWxkcmVuIHdlcmUgZXZlciBpbiBkYW5nZXIgb3IgZGlzdHJlc3MsIHRoZXkgd291bGQgZmluZCBwcm90ZWN0aW9uIGluIHlvdXIgc3ltcGF0aHkuICBZb3UgaGF2ZSBnb29kIHJlYXNvbiwgaW5kZWVkLCBmb3IgcmVtZW1iZXJpbmcgdGhlbTsKPC90cmFuc2xhdGlvbj4="
translation['1.Proof.142'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDIiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIGZyb20gdGhlIGhlcm9pYyBkZWVkcyBvZiB5b3VyIG93biBmb3JlZmF0aGVycyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gYXMgYSB3aG9sZSByZWNlaXZlZCBpbmVzdGltYWJsZSBiZW5lZml0LiAgQWZ0ZXIgdGhlIGxvc3Mgb2Ygb3VyIGZsZWV0LCB3aGVuIHRoZXJlIHdhcyBhIGdlbmVyYWwgZGVzaXJlIHRvIGNyaXBwbGUgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGZvcmV2ZXIsIHRoZSBTcGFydGFucywgYWx0aG91Z2ggb3VyIGVuZW1pZXMgYXQgdGhlIHRpbWUsIGRlY2lkZWQgdG8gc3BhcmUgaGVyIGJlY2F1c2Ugb2YgdGhlIHZhbGlhbnQgZXhwbG9pdHMgb2YgdGhvc2UgaGVyb2VzIHdobyBoYWQgbGVkIHRoZSB3aG9sZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gdG8gZnJlZWRvbS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAzLjIxIiB2YWxpZD0ieWVzIj5BbmRvYy4gMy4yMTwvYmlibD4uPC9ub3RlPgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbmRvYy4gMy4yMSIgdmFsaWQ9InllcyI+QW5kb2MuIDMuMjE8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['1.Proof.143'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDMiIHVuaXQ9InNlY3Rpb24iIC8+Tm93IHNpbmNlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBhcyBhIGNpdHkgd2FzIHNwYXJlZCBiZWNhdXNlIG9mIHRoZSBicmF2ZSBleHBsb2l0cyBvZiB5b3VyIGZvcmVmYXRoZXJzLCBJIGxpa2V3aXNlIGNsYWltIHRvIGJlIHNwYXJlZCBiZWNhdXNlIG9mIHRoZSBicmF2ZSBkZWVkcyBvZiBtaW5lOyAgZm9yIG15IG93biBmb3JlZmF0aGVycyB0aGVtc2VsdmVzIHBsYXllZCBubyBzbWFsbCBwYXJ0IGluIHRob3NlIHZlcnkgZXhwbG9pdHMgdG8gd2hpY2ggPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IG93ZWQgaGVyIHNhbHZhdGlvbiwgYW5kIEkgdGhlcmVmb3JlIGhhdmUgdGhlIHJpZ2h0IHRvIGV4cGVjdCBmcm9tIHlvdSB0aGUgbWVyY3kgc2hvd24gdG8geW91IHlvdXJzZWx2ZXMgYnkgdGhlIEdyZWVrcy4KPC90cmFuc2xhdGlvbj4="
translation['1.Proof.144'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDQiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoaW5rLCBmdXJ0aGVybW9yZSwgd2hhdCBhIGNpdGl6ZW4geW91IHdpbGwgaGF2ZSBpbiBtZSwgaWYgeW91IGdpdmUgbWUgeW91ciBwcm90ZWN0aW9uLiAgSSB3YXMgb25jZSwgYXMgeW91IGtub3csIGEgbWFuIG9mIGdyZWF0IHdlYWx0aC4gIFRoZW4gdG8gYmVnaW4gd2l0aCwgdGhyb3VnaCBubyBmYXVsdCBvZiBteSBvd24sIGJ1dCB0aHJvdWdoIHRoZSBkaXNhc3RlcnMgd2hpY2ggb3ZlcnRvb2sgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBJIHdhcyBwbHVuZ2VkIGludG8gdXR0ZXIgcGVudXJ5IGFuZCB3YW50LiAgSSB0aGVuIHN0YXJ0ZWQgbGlmZSBhZnJlc2gsIGEgbGlmZSBvZiBob25lc3QgdG9pbCwgd2l0aCBteSBicmFpbnMgYW5kIG15IGhhbmRzIHRvIGhlbHAgbWUuICBOYXkgbW9yZSwgSSBub3Qgb25seSBrbm93IHdoYXQgaXQgaXMgdG8gYmUgdGhlIGNpdGl6ZW4gb2YgYSBjaXR5IHN1Y2ggYXMgdGhpczsgIEkga25vdyB3aGF0IGl0IGlzIHRvIGJlIGFuIGFsaWVuIHNvam91cm5pbmcgaW4gdGhlIGxhbmRzIG9mIG5laWdoYm91cmluZyBwZW9wbGVzOyAgSSBoYXZlIGxlYXJudCB0aGUgbWVhbmluZyBvZiBzZWxmLWNvbnRyb2wgYW5kIGdvb2Qgc2Vuc2U7ICBJIGhhdmUgbGVhcm50IHdoYXQgaXQgaXMgdG8gc3VmZmVyIGZvciBvbmUncyBtaXN0YWtlcy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QW4gaW50ZXJlc3RpbmcgYWRtaXNzaW9uLiBDZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDIuNyIgdmFsaWQ9InllcyI+QW5kb2MuIDIuNzwvYmlibD4uPC9ub3RlPgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbmRvYy4gMi43IiB2YWxpZD0ieWVzIj5BbmRvYy4gMi43PC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['1.Proof.145'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDUiIHVuaXQ9InNlY3Rpb24iIC8+SSBoYXZlIGJlZW4gb24gdGVybXMgb2YgZmFtaWxpYXJpdHkgd2l0aCBtYW55LCBhbmQgSSBoYXZlIGhhZCBkZWFsaW5ncyB3aXRoIHN0aWxsIG1vcmUuICBJbiBjb25zZXF1ZW5jZSwgSSBoYXZlIGZvcm1lZCB0aWVzIGFuZCBmcmllbmRzaGlwcyB3aXRoIGtpbmdzLCB3aXRoIHN0YXRlcywgYW5kIHdpdGggaW5kaXZpZHVhbHMgdG9vLCBpbiBwbGVudHkuICBBY3F1aXQgbWUsIGFuZCB5b3Ugd2lsbCBzaGFyZSBpbiB0aGVtIGFsbCwgYW5kIGJlIGFibGUgdG8gbWFrZSB1c2Ugb2YgdGhlbSB3aGVuZXZlciBvY2Nhc2lvbiBtYXkgYXJpc2UuPC90cmFuc2xhdGlvbj4="
translation['1.Concl.146'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSJDb25jbCIgdW5pdD0icGFydCIgLz4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE0NiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHBvc2l0aW9uIGlzIGluIGZhY3QgdGhpcywgZ2VudGxlbWVuLiAgSWYgeW91IHNlbnRlbmNlIG1lIHRvIGRlYXRoIHRvZGF5LCB5b3UgbGVhdmUgbm90IGEgc2luZ2xlIG1lbWJlciBvZiBvdXIgZmFtaWx5IGFsaXZlOyAgaXQgcGVyaXNoZXMgcm9vdCBhbmQgYnJhbmNoLiAgWWV0IHRoZSBob21lIG9mIEFuZG9jaWRlcyBhbmQgTGVvZ29yYXMgZG9lcyBub3QgZGlzZ3JhY2UgeW91IGJ5IGl0cyBwcmVzZW5jZS4gIEl0IHdhcyBmYXIgbW9yZSB0cnVseSBhIGRpc2dyYWNlIGR1cmluZyBteSBleGlsZSwgd2hlbiBDbGVvcGhvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BbiBleHRyZW1lIGRlbW9jcmF0IHdobyBmaXJzdCBjYW1lIGludG8gcHJvbWluZW5jZSBhZnRlciB0aGUgY29sbGFwc2Ugb2YgdGhlIG9saWdhcmNoaWMgbW92ZW1lbnQgb2YgNDExLiAgSGUgIGludGVyZXN0ZWQgaGltc2VsZiBpbiBmaW5hbmNlLCBhbmQgd2FzIHJlc3BvbnNpYmxlIGZvciB0aGUgZG9sZSBvZiB0d28gb2JvbHMgYSBkYXkgcGFpZCB0byB0aGUgcG9vcmVyIGNsYXNzZXMgYWZ0ZXIgNDEwLiAgQWZ0ZXIgdGhlIGJhdHRsZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEN5emljdXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEN5emljdXMiPkN5emljdXM8L3BsYWNlTmFtZT4gaGUgc3VjY2VlZGVkIGluIGdldHRpbmcgdGhlIFNwYXJ0YW4gcGVhY2UgcHJvcG9zYWxzIHJlamVjdGVkLCBhbmQgaGUgZGlkIHRoZSBzYW1lIGFmdGVyIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw2MDAwMDcwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDYwMDAwNzAiPkFlZ29zcG90YW1pPC9wbGFjZU5hbWU+IO+8iDQwNe+8iS4gIEhlIHdhcyBmaW5hbGx5IHB1dCB0byBkZWF0aCBkdXJpbmcgdGhlIHNpZWdlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiB0aHJvdWdoIHRoZSBhZ2VuY3kgb2YgdGhlIHByby1TcGFydGFuIHBhcnR5IGluIHRoZSBjaXR5LiAgV2l0aCBoaXMgZXhlY3V0aW9uIGFjdGl2ZSByZXNpc3RhbmNlIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiBwcmFjdGljYWxseSBjYW1lIHRvIGFuIGVuZC48L25vdGU+IHRoZSBseXJlLW1ha2VyIG9jY3VwaWVkIGl0LiAgTm90IG9uZSBvZiB5b3UsIGluIHBhc3Npbmcgb3VyIGhvdXNlLCB3YXMgZXZlciByZW1pbmRlZCBvZiBhbiBpbmp1cnkgZG9uZSBoaW0gYnkgaXRzIG93bmVycyB3aGV0aGVyIHByaXZhdGVseSBvciBwdWJsaWNseS4KPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDeXppY3VzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDeXppY3VzIj5DeXppY3VzPC9wbGFjZU5hbWU+IGhlIHN1Y2NlZWRlZCBpbiBnZXR0aW5nIHRoZSBTcGFydGFuIHBlYWNlIHByb3Bvc2FscyByZWplY3RlZCwgYW5kIGhlIGRpZCB0aGUgc2FtZSBhZnRlciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMDA3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAwMDcwIj5BZWdvc3BvdGFtaTwvcGxhY2VOYW1lPiDvvIg0MDXvvIkuICBIZSB3YXMgZmluYWxseSBwdXQgdG8gZGVhdGggZHVyaW5nIHRoZSBzaWVnZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gdGhyb3VnaCB0aGUgYWdlbmN5IG9mIHRoZSBwcm8tU3BhcnRhbiBwYXJ0eSBpbiB0aGUgY2l0eS4gIFdpdGggaGlzIGV4ZWN1dGlvbiBhY3RpdmUgcmVzaXN0YW5jZSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gcHJhY3RpY2FsbHkgY2FtZSB0byBhbiBlbmQuPC90cmFuc2xhdGlvbj4="
translation['1.Concl.147'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDciIHVuaXQ9InNlY3Rpb24iIC8+VGhleSBoYXZlIGhlbGQgY291bnRsZXNzIGNvbW1hbmRzLCBhbmQgaGF2ZSB3b24geW91IG1hbnkgYSB2aWN0b3J5IG92ZXIgeW91ciBmb2VzIG9uIGxhbmQgYW5kIHNlYS4gIFRoZXkgaGF2ZSBoZWxkIGNvdW50bGVzcyBvdGhlciBvZmZpY2VzIGFuZCBoYW5kbGVkIHB1YmxpYyBtb25pZXM7ICB5ZXQgbm90IG9uY2UgaGF2ZSB0aGV5IGJlZW4gZm91bmQgZ3VpbHR5IG9mIGZyYXVkLiAgV2UgaGF2ZSBub3Qgd3JvbmdlZCB5b3UsIGFuZCB5b3UgaGF2ZSBub3Qgd3JvbmdlZCB1cy4gIE91ciBob3VzZSBpcyB0aGUgb2xkZXN0IGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgYW5kIGhhcyBhbHdheXMgYmVlbiB0aGUgZmlyc3QgdG8gb3BlbiBpdHMgZG9vcnMgdG8gdGhvc2UgaW4gbmVlZC4gIFlldCBuZXZlciBvbmNlIGhhcyBhbnkgbWVtYmVyIG9mIG15IGZhbWlseSBhcHBlYXJlZCBvbiB0cmlhbCBiZWZvcmUgeW91IGFuZCBhc2tlZCB5b3UgdG8gc2hvdyB5b3VyIGdyYXRpdHVkZSBmb3IgdGhlc2Ugc2VydmljZXMuCjwvdHJhbnNsYXRpb24+"
translation['1.Concl.148'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDgiIHVuaXQ9InNlY3Rpb24iIC8+U28gYWx0aG91Z2ggdGhleSBhcmUgZGVhZCwgYXQgbGVhc3QgZG8gbm90IGZvcmdldCB3aGF0IHRoZXkgZGlkLiAgUmVtZW1iZXIgdGhlaXIgYWNoaWV2ZW1lbnRzOiAgaW1hZ2luZSB0aGF0IHlvdSBjYW4gc2VlIHRoZW0gaW4gdGhlIGZsZXNoLCBiZWdnaW5nIHlvdSBmb3IgbXkgbGlmZS4gIEZvciBhZnRlciBhbGwsIHdob20gY2FuIEkgcHJvZHVjZSBoZXJlIHRvIHBsZWFkIGZvciBtZT8gTXkgZmF0aGVyPyBIZSBpcyBkZWFkLiAgTXkgYnJvdGhlcnM/IEkgaGF2ZSBub25lLiAgTXkgY2hpbGRyZW4/IFRoZXkgYXJlIHN0aWxsIHVuYm9ybi4KPC90cmFuc2xhdGlvbj4="
translation['1.Concl.149'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNDkiIHVuaXQ9InNlY3Rpb24iIC8+SXQgaXMgeW91IHdobyBtdXN0IGFjdCBhcyBteSBmYXRoZXIgYW5kIG15IGJyb3RoZXJzIGFuZCBteSBjaGlsZHJlbi4gIEl0IGlzIHdpdGggeW91IHRoYXQgSSBzZWVrIHJlZnVnZS4gIEl0IGlzIHRvIHlvdSB0aGF0IEkgdHVybiB3aXRoIG15IGVudHJlYXRpZXMgYW5kIG15IHByYXllcnMuICBZb3UgbXVzdCBwbGVhZCB3aXRoIHlvdXJzZWx2ZXMgZm9yIG15IGxpZmUsIGFuZCBzYXZlIGl0LiAgV2hlbiB5b3UgYXJlIHJlYWR5IHRvIGV4dGVuZCBjaXZpYyByaWdodHMgdG8gVGhlc3NhbGlhbnMgYW5kIEFuZHJpYW5zIG9uIHRoZSBncm91bmQgdGhhdCBtZW4gYXJlIHNjYXJjZSwgeW91IGNhbm5vdCBidXQgcmVmdXNlIHRvIHB1dCBhY2tub3dsZWRnZWQgY2l0aXplbnMgdG8gZGVhdGgsIG1lbiB3aG8gc2hvdWxkIHNlcnZlIHlvdSB3ZWxsLCBhbmQgd2hvIHdpbGwgaGF2ZSB0aGUgb3Bwb3J0dW5pdHkgb2YgZG9pbmcgc28saWYgdGhleSBhcmUgd2lsbGluZy4gIFlvdSBjYW5ub3QgYnV0IHJlZnVzZSwgZ2VudGxlbWVuLiAgQWdhaW4sIEkgYXNrIHlvdSB0byBzaG93IHlvdXIgYXBwcmVjaWF0aW9uIG9mIG15IHNlcnZpY2VzIHRvIHlvdS4gIFRoZW4sIGlmIHlvdSBsaXN0ZW4gdG8gbWUsIHlvdSB3aWxsIG5vdCByb2IgeW91cnNlbHZlcyBvZiBzdWNoIGZ1cnRoZXIgc2VydmljZXMgYXMgSSBtYXkgYmUgYWJsZSB0byByZW5kZXIuICBPbiB0aGUgb3RoZXIgaGFuZCwgaWYgeW91IGxpc3RlbiB0byBteSBvcHBvbmVudHMsIGV2ZW4gcmVwZW50YW5jZSBsYXRlciBvbiB3aWxsIGF2YWlsIHlvdSBub3RoaW5nLgo8L3RyYW5zbGF0aW9uPg=="
translation['1.Concl.150'] = ""
translation['2.Intro.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSJJbnRybyIgdW5pdD0icGFydCIgLz4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhhZCBzb21lIG90aGVyIG1hdHRlciBiZWVuIGF0IGlzc3VlLCBnZW50bGVtZW4sIEkgc2hvdWxkIGhhdmUgZmVsdCBubyBzdXJwcmlzZSBhdCBmaW5kaW5nIGEgZGlmZmVyZW5jZSBvZiBvcGluaW9uIGFtb25nIHRoZSBzcGVha2VycyB3aG8gYWRkcmVzc2VkIHlvdS4gQnV0IHdoZW4gdGhlIHF1ZXN0aW9uIGlzIHdoZXRoZXIgb3Igbm90IEksIG9yIGFueW9uZSBsZXNzIHdvcnRoeSB3aG8gc28gZGVzaXJlcywgc2hvdWxkIGRvIHRoaXMgc3RhdGUgYSBzZXJ2aWNlLCBub3RoaW5nIHNlZW1zIHRvIG1lIG1vcmUgZXh0cmFvcmRpbmFyeSB0aGFuIHRoYXQgY29udHJhcnkgdmlld3Mgc2hvdWxkIGJlIGhlbGQsIGluc3RlYWQgb2YgdGhlcmUgYmVpbmcgY29tcGxldGUgdW5hbmltaXR5OyBmb3IgaWYgdGhlIHN0YXRlIGlzIGNvbW1vbiB0byBhbGwgd2hvIGVuam95IGNpdmljIHJpZ2h0cywgdGhlIGJlbmVmaXRzIHdoaWNoIHRoZSBzdGF0ZSByZWNlaXZlcyBhcmUgbGlrZXdpc2UsIEkgcHJlc3VtZSwgY29tbW9uIGJlbmVmaXRzLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.Intro.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoIGRpc2FncmVlbWVudCBpcyBhIG1hdHRlciBmb3IgYWxhcm0gYW5kIGFzdG9uaXNobWVudDsgeWV0LCBhcyB5b3UgY2FuIHNlZSwgaXQgaGFzIGFscmVhZHkgYmVlbiBleHByZXNzZWQgYnkgc29tZSwgYW5kIHdpbGwgc2hvcnRseSBiZSBleHByZXNzZWQgYnkgb3RoZXJzLiAgSW5kZWVkLCBJIGFtIGNvbXBsZXRlbHkgYXQgYSBsb3NzIHRvIHVuZGVyc3RhbmQgd2h5IHRoZSBxdWVzdGlvbiBvZiB5b3VyIHJlY2VpdmluZyBhIGJlbmVmaXQgZnJvbSBtZSBzaG91bGQgY2F1c2Ugc3VjaCBleGNpdGVtZW50IGFtb25nIG91ciBmcmllbmRzIGhlcmUuICBUaGV5IG11c3QgZWl0aGVyIGJlIHRoZSBtb3N0IHN0dXBpZCBvZiBtYW5raW5kIG9yIHRoZSB3b3JzdCBvZiBwdWJsaWMgZW5lbWllcy4gIElmIHRoZXkgaG9sZCB0aGF0IHdoZW4gdGhlIHN0YXRlIGlzIHByb3NwZXJpbmcgdGhleSBhcmUgYmV0dGVyIG9mZiBpbmRpdmlkdWFsbHksIHRoZXkgYXJlIHNob3dpbmcgZXh0cmVtZSBzdHVwaWRpdHkgaW4gYWR2b2NhdGluZyB0b2RheSBhIHBvbGljeSB3aGljaCBkaXJlY3RseSBjb25mbGljdHMgd2l0aCB0aGVpciBvd24gaW50ZXJlc3RzOwo8L3RyYW5zbGF0aW9uPg=="
translation['2.Intro.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPndoaWxlIGlmIHRoZXkgZG8gbm90IGlkZW50aWZ5IHRoZWlyIGludGVyZXN0cyBhcyBpbmRpdmlkdWFscyB3aXRoIHlvdXJzIGFzIGEgY29tbXVuaXR5LCB0aGV5IGNhbiBvbmx5IGJlIHB1YmxpYyBlbmVtaWVzLiAgSW5kZWVkIHdoZW4gSSBzZWNyZXRseSBjb21tdW5pY2F0ZWQgdG8gdGhlIENvdW5jaWwgYSBwcm9wb3NhbCB3aGljaCB3b3VsZCBiZSBvZiB0aGUgdmVyeSBncmVhdGVzdCBzZXJ2aWNlIHRvIHRoaXMgY2l0eSBpZiBjYXJyaWVkIGludG8gZWZmZWN0LCBhbmQgcHJvdmVkIGFzIG11Y2ggY2xlYXJseSBhbmQgY29uY2x1c2l2ZWx5IHRvIHRoZSBtZW1iZXJzIHByZXNlbnQsIHN1Y2ggb2YgbXkgcHJlc2VudCBjcml0aWNzIGFzIHdlcmUgYW1vbmcgbXkgYXVkaWVuY2UgZm91bmQgaXQgYXMgaW1wb3NzaWJsZSBhcyBhbnlvbmUgZWxzZSB0byBzaG93IGJ5IGFyZ3VtZW50IHRoYXQgYW55IG9mIG15IHN0YXRlbWVudHMgd2FzIGluY29ycmVjdDsgeWV0IHRoZXkgYXJlIG5vdyB0cnlpbmcgdG8gaW1wdWduIHRob3NlIHN0YXRlbWVudHMuCjwvdHJhbnNsYXRpb24+"
translation['2.Intro.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPlRoaXMgcHJvdmVzLCB0aGVuLCB0aGF0IHRoZXkgYXJlIGFjdGluZyBub3Qgb24gdGhlaXIgb3duIGluaXRpYXRpdmXigJRvciB0aGV5IHdvdWxkIGhhdmUgaGFkIG5vIGhlc2l0YXRpb24gaW4gb3Bwb3NpbmcgbWUgb3JpZ2luYWxseeKAlGJ1dCBvbiB0aGUgaW5zdGlnYXRpb24gb2Ygb3RoZXJzLCBvZiBtZW4gc3VjaCBhcyBhcmUgdG8gYmUgZm91bmQgaW4gdGhpcyBjaXR5LCB3aG8gd291bGQgbm90IGFsbG93IHlvdSB0byByZWNlaXZlIGEgYmVuZWZpdCBmcm9tIG1lIGZvciBhbGwgdGhlIG1vbmV5IGluIHRoZSB3b3JsZC4gIFRoZXNlIG90aGVycyBoYXZlIG5vdCB0aGUgY291cmFnZSB0byBjb21lIGludG8gdGhlIG9wZW4gYW5kIG1ha2UgZ29vZCB0aGVpciBhc3NlcnRpb25zIGluIHBlcnNvbiwgYXMgdGhleSBhcmUgYWZyYWlkIG9mIGxldHRpbmcgdGhlaXIgb3duIHBvc3NpYmxlIHNob3J0Y29taW5ncyBhcyBwYXRyaW90cyBiZSBleGFtaW5lZCB0b28gY2xvc2VseS4gIEluc3RlYWQsIHRoZXkgc2VuZCBzdWJzdGl0dXRlcyB0byBhZGRyZXNzIHlvdSwgbWVuIHRvIHdob20gZWZmcm9udGVyeSBpcyBzZWNvbmQgbmF0dXJlLCBtZW4gd2hvIHdpbGwgdXR0ZXIgb3IgZmFjZSB0aGUgYml0dGVyZXN0IGFidXNlIHdpdGggY29tcGxldGUgaW5kaWZmZXJlbmNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.Intro.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPlRoZSBlbnRpcmUgc3RyZW5ndGggb2YgdGhlaXIgY2FzZSBhZ2FpbnN0IG1lLCBvbmUgZmluZHMsIGxpZXMgaW4gdGhlaXIgdGF1bnRpbmcgbWUgYXQgZXZlcnkgdHVybiB3aXRoIG15IG1pc2ZvcnR1bmVzOyBhbmQgdGhhdCB0b28gd2hlbiB0aGVpciBsaXN0ZW5lcnMga25vdyBiZXR0ZXIgdGhhbiB0aGV5LCBzbyB0aGF0IG5vdCBhIHdvcmQgd2hpY2ggdGhleSBoYXZlIHV0dGVyZWQgY2FuIGJyaW5nIHRoZW0gYW55IHRydWUgY3JlZGl0LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG8gbXkgbWluZCwgZ2VudGxlbWVuLCBoZSB3YXMgYSB3aXNlIG1hbiB3aG8gZmlyc3Qgc2FpZCB0aGF0IGV2ZXJ5IGh1bWFuIGJlaW5nIGlzIGJvcm4gdG8gbWVldCB3aXRoIGdvb2QgZm9ydHVuZSBhbmQgd2l0aCBiYWQ7IHRoYXQgdG8gbWFrZSBhIG1pc3Rha2UgaXMgdG8gbWVldCB3aXRoIGdyZWF0IGlsbCBmb3J0dW5lOjwvdHJhbnNsYXRpb24+"
translation['2.Narr.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSJOYXJyIiB1bml0PSJwYXJ0IiAvPgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgdGhhdCB3aGlsZSB0aG9zZSB3aG8gbWFrZSB0aGUgZmV3ZXN0IG1pc3Rha2VzIGFyZSB0aGUgbHVja2llc3QsIHRob3NlIHdobyByZXBlbnQgb2YgdGhlbSBzb29uZXN0IHNob3cgbW9zdCBnb29kIHNlbnNlLiBOb3IgaXMgdGhpcyB0aGUgcGVjdWxpYXIgbG90IG9mIHNvbWUgbWVuIG9ubHk7IGl0IGlzIHRoZSBjb21tb24gZmF0ZSBvZiBodW1hbml0eSB0byBtYWtlIG1pc3Rha2VzIGFuZCBzdWZmZXIgbWlzZm9ydHVuZS4gU28gZG8gYnV0IHJlbWVtYmVyIHRoZSBmcmFpbHR5IG9mIG1hbiBpbiBwYXNzaW5nIGp1ZGdlbWVudCB1cG9uIG1lLCBnZW50bGVtZW4sIGFuZCB5b3VyIGZlZWxpbmdzIGZvciBtZSB3aWxsIGJlIG1vcmUga2luZGx5LiAgSW5kZWVkIEkgZG8gbm90IGRlc2VydmUgaWxsLXdpbGwgc28gbXVjaCBhcyBzeW1wYXRoeSBmb3IgdGhlIHBhc3QuCjwvdHJhbnNsYXRpb24+"
translation['2.Narr.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPk93aW5nIHRv4oCUc2hhbGwgSSBzYXkgbXkgb3duIHlvdXRoZnVsIGZvbGx5LCBvciB0aGUgaW5mbHVlbmNlIG9mIG90aGVycyB3aG8gcGVyc3VhZGVkIG1lIGludG8gc3VjaCBhIHBpZWNlIG9mIG1hZG5lc3M/PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkEgY2xlYXIgaW5kaWNhdGlvbiB0aGF0IEFuZG9jaWRlcyBoYWQgYmVlbiBjb25jZXJuZWQgdG8gYXQgbGVhc3Qgc29tZSBleHRlbnQgaW4gdGhlIG11dGlsYXRpb24gb2YgdGhlIEhlcm1hZS48L25vdGU+4oCUSSB3YXMgbHVja2xlc3MgZW5vdWdoIHRvIGJlIGZvcmNlZCB0byBjaG9vc2UgYmV0d2VlbiB0d28gb2YgdGhlIG1vc3QgcGFpbmZ1bCBhbHRlcm5hdGl2ZXMgaW1hZ2luYWJsZS4gIE9uIHRoZSBvbmUgaGFuZCwgSSBjb3VsZCByZWZ1c2UgdG8gZGlzY2xvc2UgdGhlIGF1dGhvcnMgb2YgdGhlIG91dHJhZ2UuICBJbiB0aGF0IGNhc2UgSSBub3Qgb25seSB0cmVtYmxlZCBmb3IgbXkgb3duIGZhdGUsIGJ1dCBjYXVzZWQgdGhlIGRlYXRoIG9mIG15IGZhdGhlciwgd2hvIHdhcyBlbnRpcmVseSBpbm5vY2VudCwgYXMgd2VsbCBhcyBteSBvd27igJRoZSB3YXMgaW5ldml0YWJseSBkb29tZWQsIGlmIEkgcmVmdXNlZCB0byBzcGVhay4gIE9uIHRoZSBvdGhlciBoYW5kLCBJIGNvdWxkIHB1cmNoYXNlIG15IG93biBsaWZlIGFuZCBsaWJlcnR5IGFuZCBhdm9pZCBiZWNvbWluZyBteSBmYXRoZXIncyBtdXJkZXJlcuKAlGFuZCB3aGF0IHdvdWxkIGEgbWFuIG5vdCBicmluZyBoaW1zZWxmIHRvIGRvIHRvIGVzY2FwZSB0aGF0P+KAlGJ1dCBvbmx5IGJ5IHR1cm5pbmcgaW5mb3JtZXIuCjwvdHJhbnNsYXRpb24+"
translation['2.Narr.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PZiB0aGUgYWx0ZXJuYXRpdmVzIGJlZm9yZSBtZSwgdGhlbiwgSSBjaG9zZSB0aGF0IHdoaWNoIG1lYW50IHllYXJzIG9mIHNvcnJvdyBmb3IgbXlzZWxmLCBidXQgaW1tZWRpYXRlIHJlbGVhc2UgZm9yIHlvdSBmcm9tIHRoZSBkaXN0cmVzcyBvZiB0aGUgbW9tZW50LiBSZW1lbWJlciB5b3VyIHBlcmlsOiByZW1lbWJlciB5b3VyIGhlbHBsZXNzbmVzczogcmVtZW1iZXIgaG93IHlvdSBzdG9vZCBpbiBzdWNoIGZlYXIgb2Ygb25lIGFub3RoZXIgdGhhdCB5b3UgY2Vhc2VkIGdvaW5nIGFicm9hZCBldmVuIGludG8gdGhlIEFnb3JhLCBiZWNhdXNlIHlvdSBlYWNoIGV4cGVjdGVkIGFycmVzdC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjM2IiB2YWxpZD0ieWVzIj5BbmRvYy4gMS4zNjwvYmlibD4uPC9ub3RlPiBUaGF0IHN1Y2ggYSBzdGF0ZSBvZiB0aGluZ3Mgc2hvdWxkIGhhdmUgb2NjdXJyZWQgYXQgYWxsIHByb3ZlZCB0byBiZSBkdWUgb25seSBpbiBzbWFsbCBwYXJ0IHRvIG1lOyB0aGF0IGl0IGVuZGVkLCBvbiB0aGUgb3RoZXIgaGFuZCwgcHJvdmVkIHRvIGJlIGR1ZSB0byBtZSBhbG9uZS4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMzYiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjM2PC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['2.Narr.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPk5vdHdpdGhzdGFuZGluZywgSSBoYXZlIG5ldmVyIHN1Y2NlZWRlZCBpbiBiZWluZyBhbnl0aGluZyBzYXZlIHRoZSB1bmx1Y2tpZXN0IG1hbiBhbGl2ZTsgZm9yIHdoZW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IHdhcyBoZWFkaW5nIGZvciB0aGlzIGRpc2FzdGVyLCBubyBvbmUgY2FtZSBuZWFyIHN1ZmZlcmluZyB0aGUgc29ycm93cyB3aGljaCBJIHN1ZmZlcmVkOiBhbmQgd2hlbiBzaGUgd2FzIG9uY2UgbW9yZSByZWdhaW5pbmcgaGVyIHNlY3VyaXR5LCBJIHdhcyBvZiBhbGwgbWVuIHRoZSBtb3N0IHRvIGJlIHBpdGllZC4gIFRoZSBkZXNwZXJhdGUgZGlzdHJlc3Mgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGNvdWxkIGJlIHJlbWVkaWVkIG9ubHkgYXQgdGhlIGNvc3Qgb2YgbXkgZ29vZCBuYW1lOiBzbyB0aGF0IHlvdXIgZGVsaXZlcmFuY2UgbWVhbnQgbXkgb3duIHJ1aW4uICBJdCBpcyB5b3VyIGdyYXRpdHVkZSwgdGhlcmVmb3JlLCBub3QgeW91ciBzY29ybiB0aGF0IEkgZGVzZXJ2ZSBmb3IgbXkgc3VmZmVyaW5ncy4KPC90cmFuc2xhdGlvbj4="
translation['2.Narr.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhlIHRpbWUgSSBuZWVkZWQgbm9uZSB0byByZW1pbmQgbWUgb2YgbXkgcGxpZ2h04oCUcGFydGx5IHRocm91Z2ggbXkgb3duIGZvbGx5LCBwYXJ0bHkgdGhyb3VnaCB0aGUgZm9yY2Ugb2YgY2lyY3Vtc3RhbmNlcywgbm90aGluZyB3YXMgd2FudGluZyB0byBjb21wbGV0ZSBteSBtaXNlcnkgYW5kIG15IGRpc2dyYWNl4oCUYW5kIEkgc2F3IHRoYXQgeW91IHdvdWxkIGJlIGJlc3QgcGxlYXNlZCB3ZXJlIEkgdG8gYWRvcHQgdGhhdCBtb2RlIG9mIGxpZmUgYW5kIHRoYXQgcGxhY2Ugb2YgcmVzaWRlbmNlIHdoaWNoIHdvdWxkIGVuYWJsZSBtZSB0byByZW1haW4gZnVydGhlc3QgZnJvbSB5b3VyIHNpZ2h0Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BbmRvY2lkZXMgd2FzIG5vdCBleGlsZWQgdW5kZXIgdGhlIGFjdHVhbCB0ZXJtcyBvZiB0aGUgZGVjcmVlIG9mIElzb3RpbWlkZXMuICBUaGUgZGVjcmVlIG1hZGUgbGlmZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gc28gaW50b2xlcmFibGUgZm9yIGhpbSB0aGF0IGhlIGZvdW5kIGl0IGJldHRlciB0byB3aXRoZHJhdyBvZiBoaXMgb3duIGFjY29yZC48L25vdGU+IEV2ZW50dWFsbHksIGhvd2V2ZXIsIGFzIHdhcyBvbmx5IG5hdHVyYWwsIEkgd2FzIHNlaXplZCB3aXRoIGEgbG9uZ2luZyBmb3IgdGhlIG9sZCBsaWZlIGFzIGEgY2l0aXplbiBhbW9uZyB5b3Ugd2hpY2ggSSBoYWQgYWJhbmRvbmVkIGZvciBteSBwcmVzZW50IHBsYWNlIG9mIGV4aWxlOyBhbmQgSSBkZWNpZGVkIHRoYXQgSSBzaG91bGQgYmUgYmVzdCBhZHZpc2VkIGVpdGhlciB0byBoYXZlIGRvbmUgd2l0aCBsaWZlIG9yIHRvIHJlbmRlciB0aGlzIGNpdHkgc3VjaCBhIHNlcnZpY2UgYXMgd291bGQgZGlzcG9zZSB5b3UgdG8gbGV0IG1lIGF0IGxhc3QgcmVzdW1lIG15IHJpZ2h0cyBhcyB5b3VyIGZlbGxvdy4KICAgICAgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IHNvIGludG9sZXJhYmxlIGZvciBoaW0gdGhhdCBoZSBmb3VuZCBpdCBiZXR0ZXIgdG8gd2l0aGRyYXcgb2YgaGlzIG93biBhY2NvcmQuPC90cmFuc2xhdGlvbj4="
translation['2.Narr.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnJvbSB0aGF0IG1vbWVudCBJIGhhdmUgYmVlbiByZWNrbGVzcyBvZiBib3RoIGxpZmUgYW5kIGdvb2RzIHdoZW4gY2FsbGVkIHVwb24gZm9yIGEgcGVyaWxvdXMgdmVudHVyZS4gSW4gZmFjdCwgSSBhdCBvbmNlIHByb2NlZWRlZCB0byBzdXBwbHkgeW91ciBmb3JjZXMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTYW1vcyBDaXR5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTYW1vcyBDaXR5Ij5TYW1vczwvcGxhY2VOYW1lPiB3aXRoIG9hci1zcGFyc+KAlHRoaXMgd2FzIGFmdGVyIHRoZSBGb3VyIEh1bmRyZWQgaGFkIHNlaXplZCBwb3dlciBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiBpbiA0MTEuPC9ub3RlPuKAlHNpbmNlIEFyY2hlbGF1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5LaW5nIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNzE1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI3MTUiPk1hY2Vkb248L3BsYWNlTmFtZT4gZnJvbSA0MTMgdG8gMzk5IEIuQy48L25vdGU+IGhhZCBoZXJlZGl0YXJ5IGNvbm5leGlvbnMgd2l0aCBteSBmYW1pbHkgYW5kIG9mZmVyZWQgbWUgdGhlIHJpZ2h0IG9mIGN1dHRpbmcgYW5kIGV4cG9ydGluZyBhcyBtYW55IGFzIEkgd2lzaGVkLjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNzE1IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI3MTUiPk1hY2Vkb248L3BsYWNlTmFtZT4gZnJvbSA0MTMgdG8gMzk5IEIuQy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHRleHQgb2YgYW4gQXR0aWMgZGVjcmVlIGhvbm91cmluZyBBcmNoZWxhdXMgZm9yIHN1cHBseWluZyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvuG9u867zrEgzrrOseG9tiDOus+Jz4DhvbPOsc+CPC9mb3JlaWduPiBzdGlsbCBzdXJ2aXZlcyDvvIhJLkcuIGkgIDIgMTA177yJLiBJdCBtYXkgYmUgY29uc3VsdGVkIGJlc3QgaW4gdGhlIHJlc3RvcmVkIHZlcnNpb24gb2YgQi4gRC4gTWVyaXR0OyBzZWUgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2xhc3NpY2FsIFN0dWRpZXMgcHJlc2VudGVkIHRvIEVkd2FyZCBDYXBwczwvdGl0bGU+IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDE2MTkwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTYxOTAiPlByaW5jZXRvbjwvcGxhY2VOYW1lPiwgPGRhdGUgYXV0aG5hbWU9IjE5MzYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9IjE5MzYiPjE5MzY8L2RhdGU+LiAgTWVyaXR0IHdvdWxkIGRhdGUgaXQgdG8gPGRhdGVSYW5nZSBhdXRobmFtZT0iLTQwNy8tNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIGZyb209Ii00MDciIHRvPSItNDA2Ij40MDc8L2RhdGVSYW5nZT4tNDA2IEIuQy48L25vdGU+IEFuZCBub3Qgb25seSBkaWQgSSBzdXBwbHkgdGhlIHNwYXJzOyBJIHJlZnVzZWQgdG8gY2hhcmdlIG1vcmUgZm9yIHRoZW0gdGhhbiB0aGV5IGhhZCBjb3N0IG1lLCBhbHRob3VnaCBJIG1pZ2h0IGhhdmUgb2J0YWluZWQgYSBwcmljZSBvZiBmaXZlIGRyYWNobWFlIGFwaWVjZS4gIEluIGFkZGl0aW9uLCBJIHN1cHBsaWVkIGNvcm4gYW5kIGJyb256ZS4KPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr7hvbvOu86xIM66zrHhvbYgzrrPic+A4b2zzrHPgjwvZm9yZWlnbj4gc3RpbGwgc3Vydml2ZXMg77yISS5HLiBpICAyIDEwNe+8iS4gSXQgbWF5IGJlIGNvbnN1bHRlZCBiZXN0IGluIHRoZSByZXN0b3JlZCB2ZXJzaW9uIG9mIEIuIEQuIE1lcml0dDsgc2VlIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkNsYXNzaWNhbCBTdHVkaWVzIHByZXNlbnRlZCB0byBFZHdhcmQgQ2FwcHM8L3RpdGxlPiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjE5MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2MTkwIj5QcmluY2V0b248L3BsYWNlTmFtZT4sIDxkYXRlIGF1dGhuYW1lPSIxOTM2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSIxOTM2Ij4xOTM2PC9kYXRlPi4gIE1lcml0dCB3b3VsZCBkYXRlIGl0IHRvIDxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii00MDcvLTQwNiIgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItNDA3IiB0bz0iLTQwNiI+NDA3PC9kYXRlUmFuZ2U+LTQwNiBCLkMuPC90cmFuc2xhdGlvbj4="
translation['2.Narr.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5UaHVzIGVxdWlwcGVkLCB0aGUgZm9yY2VzIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjczIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzMiPlNhbW9zPC9wbGFjZU5hbWU+IHdlbnQgb24gdG8gZGVmZWF0IHRoZSBQZWxvcG9ubmVzaWFucyBhdCBzZWE8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+TW9zdCBwcm9iYWJseSB0aGUgYmF0dGxlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ3l6aWN1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ3l6aWN1cyI+Q3l6aWN1czwvcGxhY2VOYW1lPiwgQXByaWwgNDEwLiAgU2VlIEludHJvZC48L25vdGU+OyBhbmQgaXQgd2FzIHRoZXksIGFuZCB0aGV5IGFsb25lIHdobyBzYXZlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEN5emljdXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEN5emljdXMiPkN5emljdXM8L3BsYWNlTmFtZT4sIEFwcmlsIDQxMC4gIFNlZSBJbnRyb2QuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGF0IHRoZSB0aW1lLiAgTm93IGlmIHRob3NlIGhlcm9lcyByZW5kZXJlZCB5b3UgdHJ1ZSBzZXJ2aWNlIGJ5IHRoZWlyIGRlZWQsIEkgbWF5IGZhaXJseSBjbGFpbSB0aGF0IHRoYXQgc2VydmljZSB3YXMgaW4gbm8gc21hbGwgZGVncmVlIGR1ZSB0byBtZS4gIEhhZCB0aGF0IGFybXkgbm90IGJlZW4gZnVybmlzaGVkIHdpdGggc3VwcGxpZXMganVzdCB0aGVuLCB0aGV5IHdvdWxkIGhhdmUgYmVlbiBmaWdodGluZyBub3Qgc28gbXVjaCB0byBzYXZlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBhcyB0byBzYXZlIHRoZWlyIG93biBsaXZlcy4KPC90cmFuc2xhdGlvbj4="
translation['2.Narr.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gdGhlc2UgY2lyY3Vtc3RhbmNlcywgSSB3YXMgbm90IGEgbGl0dGxlIHN1cnByaXNlZCBhdCB0aGUgc2l0dWF0aW9uIHdoaWNoIEkgZm91bmQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LiAgSSByZXR1cm5lZCB0aGl0aGVyIGZ1bGx5IGV4cGVjdGluZyB0aGUgY29uZ3JhdHVsYXRpb25zIG9mIHRoZSBjaXR5IG9uIHRoZSBhY3RpdmUgd2F5IGluIHdoaWNoIEkgaGFkIGRpc3BsYXllZCBteSBkZXZvdGlvbiB0byB5b3VyIGludGVyZXN0cy4gIEluc3RlYWQsIGRpcmVjdGx5IHRoZXkgbGVhcm5lZCBvZiBteSBhcnJpdmFsLCBjZXJ0YWluIG9mIHRoZSBGb3VyIEh1bmRyZWQgc291Z2h0IG1lIG91dCwgYXJyZXN0ZWQgbWUsIGFuZCBicm91Z2h0IG1lIGJlZm9yZSB0aGUgQ291bmNpbC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiB0aGVpciBmZWxsb3ctbWVtYmVycyBvZiB0aGUgRm91ciBIdW5kcmVkLiAgVGhlIENvdW5jaWwgcHJvcGVyIGhhZCBiZWVuIHN1cGVyc2VkZWQuPC9ub3RlPgo8L3RyYW5zbGF0aW9uPg=="
translation['2.Narr.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5XaGVyZXVwb24gUGVpc2FuZGVyPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkZvciB0aGUgY2FyZWVyIG9mIFBlaXNhbmRlciBzZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW5kb2MuIDEuMzYiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjM2PC9iaWJsPiBub3RlLjwvbm90ZT4gYXQgb25jZSBjYW1lIHVwLCB0b29rIGhpcyBzdGFuZCBiZXNpZGUgbWUsIGFuZCBjcmllZDog4oCcR2VudGxlbWVuLCBJIGhlcmVieSBkZW5vdW5jZSB0aGlzIG1hbiBhcyBoYXZpbmcgc3VwcGxpZWQgY29ybiBhbmQgb2FyLXNwYXJzIHRvIHRoZSBlbmVteS7igJ0gVGhlbiBoZSB3ZW50IG9uIHRvIHRlbGwgdGhlIHdob2xlIHN0b3J5LiAgQnkgdGhpcyB0aW1lLCBvZiBjb3Vyc2UsIGl0IHdhcyBjbGVhciB0aGF0IHRoZXJlIGhhZCBiZWVuIGEgY29tcGxldGUgZXN0cmFuZ2VtZW50IGJldHdlZW4gdGhlIG1lbiBvbiBzZXJ2aWNlIGFuZCB0aGUgRm91ciBIdW5kcmVkLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbmRvYy4gMS4zNiIgdmFsaWQ9InllcyI+QW5kb2MuIDEuMzY8L2JpYmw+IG5vdGUuPC90cmFuc2xhdGlvbj4="
translation['2.Narr.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSBzYXcgdGhlIHVwcm9hciBpbnRvIHdoaWNoIHRoZSBtZWV0aW5nIHdhcyBicmVha2luZywgYW5kIGtuZXcgdGhhdCBJIHdhcyBsb3N0OyBzbyBJIHNwcmFuZyBhdCBvbmNlIHRvIHRoZSBoZWFydGggYW5kIGxhaWQgaG9sZCBvZiB0aGUgc2FjcmVkIGVtYmxlbXMuIFRoYXQgYWN0LCBhbmQgdGhhdCBhbG9uZSwgd2FzIG15IHNhbHZhdGlvbiBhdCB0aGUgdGltZTsgZm9yIGFsdGhvdWdoIEkgc3Rvb2QgZGlzZ3JhY2VkIGluIHRoZSBleWVzIG9mIHRoZSBnb2RzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Pd2luZyB0byBoaXMgcGFydGljaXBhdGlvbiBpbiB0aGUgbXV0aWxhdGlvbiBvZiB0aGUgSGVybWFlIGZvdXIgeWVhcnMgYmVmb3JlLjwvbm90ZT4gdGhleSwgaXQgc2VlbXMsIGhhZCBtb3JlIHBpdHkgb24gbWUgdGhhbiBkaWQgbWVuOyB3aGVuIG1lbiB3ZXJlIGRlc2lyb3VzIG9mIHB1dHRpbmcgdG8gZGVhdGgsIGl0IHdhcyB0aGUgZ29kcyB3aG8gc2F2ZWQgbXkgbGlmZS4gIE15IHN1YnNlcXVlbnQgaW1wcmlzb25tZW50IGFuZCB0aGUgZXh0ZW50IGFuZCBuYXR1cmUgb2YgdGhlIGJvZGlseSBzdWZmZXJpbmcgdG8gd2hpY2ggSSB3YXMgc3ViamVjdGVkIHdvdWxkIHRha2UgdG9vIGxvbmcgdG8gZGVzY3JpYmUuCjwvdHJhbnNsYXRpb24+"
translation['2.Narr.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz5JdCB3YXMgdGhlbiB0aGF0IEkgYmV3YWlsZWQgbXkgbHVja2xlc3NuZXNzIG1vcmUgYml0dGVybHkgdGhhbiBldmVyLiAgV2hlbiB0aGUgcGVvcGxlIGFwcGVhcmVkIHRvIGJlIGhhcmRseSB1c2VkLCBpdCB3YXMgSSB3aG8gc3VmZmVyZWQgaW4gdGhlaXIgc3RlYWQ7IG9uIHRoZSBvdGhlciBoYW5kLCB3aGVuIHRoZXkgaGFkIGJlZW4gbWFuaWZlc3RseSBiZW5lZml0ZWQgYnkgbWUsIHRoYXQgYWN0IG9mIHNlcnZpY2UgbGlrZXdpc2UgdGhyZWF0ZW5lZCBtZSB3aXRoIHJ1aW4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPmkuZS4g77yIYe+8iSBBbmRvY2lkZXMgcHV0IGFuIGVuZCB0byB0aGUgcmVpZ24gb2YgdGVycm9yIHdoaWNoIGZvbGxvd2VkIHRoZSBtdXRpbGF0aW9uIG9mIHRoZSBIZXJtYWUsIGJ1dCBhdCB0aGUgY29zdCBvZiBoaXMgb3duIGhhcHBpbmVzcy4gIO+8iGLvvIkgSGUgaGFkIGhlbHBlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gd2luIGEgdmljdG9yeSBvdmVyIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3BhcnRhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTcGFydGEiPlNwYXJ0YTwvcGxhY2VOYW1lPiBhdCBzZWEsIGJ1dCBoYWQgYWdhaW4gc3VmZmVyZWQgZm9yIGl0IGJ5IGltcHJpc29ubWVudCBhdCB0aGUgaGFuZHMgb2YgdGhlIEZvdXIgSHVuZHJlZC48L25vdGU+IEluZGVlZCBJIG5vIGxvbmdlciBoYWQgZWl0aGVyIHdheXMgb3IgbWVhbnMgb2Ygc3VzdGFpbmluZyBteSBob3BlczsgZXZlcnl3aGVyZSBJIHR1cm5lZCBJIHNhdyB3b2UgaW4gc3RvcmUgZm9yIG1lLiAgSG93ZXZlciwgZGlzaGVhcnRlbmluZyB0aG91Z2ggbXkgcmVjZXB0aW9uIGhhZCBiZWVuLCBJIHdhcyBubyBzb29uZXIgYSBmcmVlIG1hbiB0aGFuIG15IGV2ZXJ5IHRob3VnaHQgd2FzIGFnYWluIGRpcmVjdGVkIHRvIHRoZSBzZXJ2aWNlIG9mIHRoaXMgY2l0eS4KPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IHdpbiBhIHZpY3Rvcnkgb3ZlciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFNwYXJ0YSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3BhcnRhIj5TcGFydGE8L3BsYWNlTmFtZT4gYXQgc2VhLCBidXQgaGFkIGFnYWluIHN1ZmZlcmVkIGZvciBpdCBieSBpbXByaXNvbm1lbnQgYXQgdGhlIGhhbmRzIG9mIHRoZSBGb3VyIEh1bmRyZWQuPC90cmFuc2xhdGlvbj4="
translation['2.Narr.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+WW91IG11c3QgdW5kZXJzdGFuZCwgZ2VudGxlbWVuLCBob3cgZmFyIHN1Y2ggc2VydmljZXMgYXMgbWluZSBzdXJwYXNzIG9yZGluYXJ5IHNlcnZpY2VzLiAgV2hlbiBjaXRpemVucyB3aG8gaG9sZCBwdWJsaWMgb2ZmaWNlIGFkZCB0byB5b3VyIHJldmVudWVzLCBhcmUgdGhleSBub3QgaW4gZmFjdCBnaXZpbmcgeW91IHdoYXQgaXMgeW91cnMgYWxyZWFkeT8gIEFuZCB3aGVuIHRob3NlIHdobyBob2xkIG1pbGl0YXJ5IGNvbW1hbmQgYmVuZWZpdCB0aGVpciBjb3VudHJ5IGJ5IHNvbWUgZmluZSBleHBsb2l0LCBpcyBpdCBub3QgYnkgZXhwb3NpbmcgeW91ciBwZXJzb25zIHRvIGZhdGlndWUgYW5kIGRhbmdlciBhbmQgYnkgc3BlbmRpbmcgcHVibGljIG1vbmV5IGluIGFkZGl0aW9uIHRoYXQgdGhleSByZW5kZXIgeW91IHN1Y2ggc2VydmljZSBhcyB0aGV5IGRvPyBBZ2FpbiwgaWYgdGhleSBtYWtlIGEgbWlzdGFrZSBhdCBzb21lIHBvaW50LCBpdCBpcyBub3QgdGhleSB0aGVtc2VsdmVzIHdobyBwYXkgZm9yIHRoZWlyIG1pc3Rha2U7IGl0IGlzIHlvdSB3aG8gcGF5IGZvciB0aGUgZXJyb3Igd2hpY2ggd2FzIGR1ZSB0byB0aGVtLgo8L3RyYW5zbGF0aW9uPg=="
translation['2.Narr.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5ZZXQgeW91IGJlc3RvdyBjcm93bnMgb24gc3VjaCBwZXJzb25zIGFuZCBwdWJsaWNseSBwcm9jbGFpbSB0aGVtIGFzIGhlcm9lcy4gIEFuZCBJIHdpbGwgbm90IGRlbnkgdGhhdCB0aGV5IGRlc2VydmUgaXQ7IGl0IGlzIHByb29mIG9mIHNpZ25hbCBtZXJpdCB0byBiZSBhYmxlIHRvIHJlbmRlciBvbmUncyBjb3VudHJ5IGEgc2VydmljZSBpbiBhbnkgd2F5IHdoYXRzb2V2ZXIuICBCdXQgeW91IG11c3Qgc2VlIHRoYXQgdGhhdCBtYW4gaXMgZmFyIHRoZSB3b3J0aGllc3Qgd2hvIGhhcyB0aGUgY291cmFnZSB0byBleHBvc2UgaGlzIG93biBsaWZlIGFuZCBoaXMgb3duIGdvb2RzIHRvIGRhbmdlciBpbiBvcmRlciB0byBjb25mZXIgYSBiZW5lZml0IG9uIGhpcyBmZWxsb3ctY291bnRyeW1lbi4KPC90cmFuc2xhdGlvbj4="
translation['2.Narr.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TXkgcGFzdCBzZXJ2aWNlcyBtdXN0IGJlIGtub3duIHRvIGFsbW9zdCBhbGwgb2YgeW91LiAgQnV0IHRoZSBzZXJ2aWNlcyB3aGljaCBJIGFtIGFib3V0IHRvIHJlbmRlciwgd2hpY2ggSSBoYXZlLCBpbiBmYWN0LCBhbHJlYWR5IGJlZ3VuIHRvIHJlbmRlciwgaGF2ZSBiZWVuIHJldmVhbGVkIGluIHNlY3JldCB0byBvbmx5IGZpdmUgaHVuZHJlZCBvZiB5b3UgWyx0byB0aGUgQ291bmNpbCwgdGhhdCBpcyB0byBzYXk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHdvcmRzIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8oSDOss6/z4XOu+G9tTwvZm9yZWlnbj4gd2VyZSByaWdodGx5IGJyYWNrZXRlZCBieSBWYWxja2VuYWVyIGFzIGEgZ2xvc3MgdXBvbiB3aGF0IHByZWNlZGVzLiAgVGhlIOKAnHNlY3JldCBwcm9wb3NhbOKAnSBwbGFjZWQgYmVmb3JlIHRoZSBDb3VuY2lsIG11c3QgaGF2ZSBiZWVuIGNvbm5lY3RlZCB3aXRoIHRoZSBmdXR1cmUgY29ybi1zdXBwbHkgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LiAgQW5kb2NpZGVzIHdhcyBkb3VidGxlc3MgdG8gdXNlIGhpcyBpbmZsdWVuY2UgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDAxMTIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMDExMiI+Q3lwcnVzPC9wbGFjZU5hbWU+IHRvIGVuc3VyZSB0aGF0IGl0IHNob3VsZCBub3QgYmUgaW50ZXJydXB0ZWQuPC9ub3RlPl07IHRoZXksIEkgdGhpbmssIGFyZSBsaWtlbHkgdG8gbWFrZSBmYXIgZmV3ZXIgbWlzdGFrZXMgdGhhbiB5b3Ugd291bGQgYmUsIGhhZCB5b3UgdG8gZGViYXRlIHRoZSBtYXR0ZXIgaGVyZSBhbmQgbm93IGltbWVkaWF0ZWx5IGFmdGVyIGxpc3RlbmluZyB0byBteSBleHBsYW5hdGlvbnMuICBUaG9zZSBmaXZlIGh1bmRyZWQgYXJlIGNvbnNpZGVyaW5nIGF0IGxlaXN1cmUgdGhlIHByb3Bvc2FsIHBsYWNlZCBiZWZvcmUgdGhlbSwgYW5kIHRoZXkgYXJlIGxpYWJsZSB0byBiZSBjYWxsZWQgdG8gYWNjb3VudCBhbmQgY2Vuc3VyZWQgYnkgdGhlIHJlc3Qgb2YgeW91IGZvciBhbnkgbWlzdGFrZSB3aGljaCB0aGV5IG1heSBtYWtlOwo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvKEgzrLOv8+FzrvhvbU8L2ZvcmVpZ24+IHdlcmUgcmlnaHRseSBicmFja2V0ZWQgYnkgVmFsY2tlbmFlciBhcyBhIGdsb3NzIHVwb24gd2hhdCBwcmVjZWRlcy4gIFRoZSDigJxzZWNyZXQgcHJvcG9zYWzigJ0gcGxhY2VkIGJlZm9yZSB0aGUgQ291bmNpbCBtdXN0IGhhdmUgYmVlbiBjb25uZWN0ZWQgd2l0aCB0aGUgZnV0dXJlIGNvcm4tc3VwcGx5IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPi4gIEFuZG9jaWRlcyB3YXMgZG91YnRsZXNzIHRvIHVzZSBoaXMgaW5mbHVlbmNlIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMTEyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAxMTIiPkN5cHJ1czwvcGxhY2VOYW1lPiB0byBlbnN1cmUgdGhhdCBpdCBzaG91bGQgbm90IGJlIGludGVycnVwdGVkLjwvdHJhbnNsYXRpb24+"
translation['2.Narr.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz53aGVyZWFzIHlvdSBoYXZlIG5vbmUgdG8gaG9sZCB5b3UgdG8gYmxhbWUsIGFzIHlvdSB2ZXJ5IHJpZ2h0bHkgaGF2ZSB0aGUgcG93ZXIgb2Ygb3JkZXJpbmcgeW91ciBhZmZhaXJzIHdpc2VseSBvciBmb29saXNobHkgYXQgd2lsbC4gIEhvd2V2ZXIsIEkgd2lsbCBkaXNjbG9zZSB0byB5b3Ugc3VjaCBzZXJ2aWNlcyBhcyBJIGNhbiwgc3VjaCBzZXJ2aWNlcyBhcyBhcmUgbm90IGEgc2VjcmV0LCBiZWNhdXNlIHRoZXkgaGF2ZSBhbHJlYWR5IGJlZW4gcGVyZm9ybWVkLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSBuZWVkIG5vdCByZW1pbmQgeW91LCBJIGltYWdpbmUsIGhvdyB5b3UgcmVjZWl2ZWQgbmV3cyB0aGF0IG5vIGdyYWluIHdhcyB0byBiZSBleHBvcnRlZCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDExMiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMTEyIj5DeXBydXM8L3BsYWNlTmFtZT4uICBOb3cgSSB3YXMgYWJsZSB0byBoYW5kbGUgdGhlIHNpdHVhdGlvbiB3aXRoIHN1Y2ggZWZmZWN0IHRoYXQgdGhlIHBlcnNvbnMgd2hvIGhhZCBmb3JtZWQgdGhlIHBsb3QgYW5kIHB1dCBpdCBpbnRvIGV4ZWN1dGlvbiB3ZXJlIGZydXN0cmF0ZWQuCjwvdHJhbnNsYXRpb24+"
translation['2.Narr.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5JdCBpcyBvZiBubyBpbXBvcnRhbmNlIHRoYXQgeW91IHNob3VsZCBrbm93IGhvdyB0aGlzIHdhcyBkb25lOyB3aGF0IEkgZG8gd2lzaCB5b3UgdG8ga25vdyBpcyB0aGF0IHRoZSBzaGlwcyBvbiB0aGUgcG9pbnQgb2YgcHV0dGluZyBpbiB0byB0aGUgUGVpcmFldXMgYXQgdGhpcyBtb21lbnQgd2l0aCBhIGNhcmdvIG9mIGdyYWluIG51bWJlciBubyBsZXNzIHRoYW4gZm91cnRlZW47IHdoaWxlIHRoZSByZW1haW5kZXIgb2YgdGhlIGNvbnZveSB3aGljaCBzYWlsZWQgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDExMiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMTEyIj5DeXBydXM8L3BsYWNlTmFtZT4gd2lsbCBhcnJpdmUgaW4gYSBib2R5IHNob3J0bHkgYWZ0ZXIgdGhlbS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkkgd291bGQgaGF2ZSBnaXZlbiBhbGwgdGhlIG1vbmV5IGluIHRoZSB3b3JsZCB0byBiZSBhYmxlIHRvIHJldmVhbCB0byB5b3Ugd2l0aCBzYWZldHkgdGhlIHNlY3JldCBwcm9wb3NhbCB3aGljaCBJIGhhdmUgcGxhY2VkIGJlZm9yZSB0aGUgQ291bmNpbCwgc28gdGhhdCB5b3UgbWlnaHQga25vdyBhdCBvbmNlIHdoYXQgdG8gZXhwZWN0Lgo8L3RyYW5zbGF0aW9uPg=="
translation['2.Narr.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5JbnN0ZWFkLCB5b3Ugd2lsbCBvbmx5IGxlYXJuIHdoYXQgaXQgaXMgd2hlbiB5b3UgYmVnaW4gdG8gYmVuZWZpdCBieSBpdCwgYW5kIHRoYXQgd2lsbCBub3QgYmUgdW50aWwgaXQgaXMgcHV0IGludG8gZWZmZWN0LiAgSG93ZXZlciwgaWYgeW91IHdvdWxkIGNvbnNlbnQgZXZlbiBhcyBpdCBpcywgZ2VudGxlbWVuLCB0byBiZXN0b3cgb24gbWUgd2hhdCBpcyBvbmx5IGEgc21hbGwgdG9rZW4gb2YgZ3JhdGl0dWRlLCBhbmQgb25lIHdoaWNoIGlzIGJvdGggZWFzaWx5IGdyYW50ZWQgYW5kIGp1c3QsIG5vdGhpbmcgd291bGQgZ2l2ZSBtZSBtb3JlIGRlbGlnaHQuICBUaGF0IEkgYW0gZW50aXRsZWQgdG8gaXQgeW91IHdpbGwgc2VlIGF0IG9uY2UuICBJIGFtIGFza2luZyBvZiB5b3Ugb25seSB3aGF0IHlvdSB5b3Vyc2VsdmVzIGdhdmUgbWUgaW4gZnVsZmlsbWVudCBvZiBhIHNvbGVtbiBwcm9taXNlLCBidXQgd2VyZSBhZnRlcndhcmRzIHBlcnN1YWRlZCB0byB3aXRoZHJhdy4gIElmIHlvdSBhcmUgcHJlcGFyZWQgdG8gcmVzdG9yZSBpdCwgSSBhc2sgaXQgYXMgYSBmYXZvdXI7IGlmIHlvdSBhcmUgbm90LCBJIGNsYWltIGl0IGFzIG15IGR1ZS4KPC90cmFuc2xhdGlvbj4="
translation['2.Narr.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5JIG9mdGVuIHNlZSB5b3UgYmVzdG93aW5nIGNpdmljIHJpZ2h0cyBhbmQgc3Vic3RhbnRpYWwgZ3JhbnRzIG9mIG1vbmV5IHVwb24gYm90aCBzbGF2ZXMgYW5kIGZvcmVpZ25lcnMgZnJvbSBldmVyeSBwYXJ0IG9mIHRoZSB3b3JsZCwgaWYgdGhleSBwcm92ZSB0byBoYXZlIGRvbmUgeW91IHNvbWUgc2VydmljZS4gIEFuZCB5b3UgYXJlIGFjdGluZyB3aXNlbHkgaW4gbWFraW5nIHN1Y2ggZ2lmdHM7IHRoZXkgZW5nZW5kZXIgdGhlIGdyZWF0ZXN0IHBvc3NpYmxlIHdpbGxpbmduZXNzIHRvIHNlcnZlIHlvdS4gIE5vdyBteSBvd24gcmVxdWVzdCBpcyBtZXJlbHkgdGhpcy4gIFlvdSBkZWNyZWVkIG9uIHRoZSBtb3Rpb24gb2YgTWVuaXBwdXMgdGhhdCBJIHNob3VsZCBiZSBncmFudGVkIGltbXVuaXR5OyByZXN0b3JlIG1lIG15IHJpZ2h0cyB1bmRlciB0aGF0IGRlY3JlZS4gVGhlIGhlcmFsZCBzaGFsbCByZWFkIGl0IHRvIHlvdSwgYXMgaXQgaXMgbHlpbmcgZXZlbiBub3cgYW1vbmcgdGhlIHJlY29yZHMgaW4gdGhlIENvdW5jaWwtY2hhbWJlci4gPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0iRGVjcmVlIj48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5EZWNyZWU8L3RpdGxlPjwvcXVvdGU+Cjx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkRlY3JlZTwvdGl0bGU+PC90cmFuc2xhdGlvbj4="
translation['2.Narr.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhpcyBkZWNyZWUgdG8gd2hpY2ggeW91IGhhdmUgYmVlbiBsaXN0ZW5pbmcsIGdlbnRsZW1lbiwgd2FzIHBhc3NlZCBieSB5b3UgaW4gbXkgZmF2b3VyLCBidXQgYWZ0ZXJ3YXJkcyByZXZva2VkIHRvIG9ibGlnZSBhbm90aGVyLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIFBlaXNhbmRlci4gIEFuZG9jaWRlcyBtZWFudCB0aGF0IHRoZSBkZWNyZWUgb2YgTWVuaXBwdXMgd2FzIGVmZmVjdGl2ZWx5IHN0dWx0aWZpZWQgYnkgdGhlIGRlY3JlZSBvZiBJc290aW1pZGVzLCBwYXNzZWQgc2hvcnRseSBhZnRlcndhcmRzIGF0IFBlaXNhbmRlcidzIGluc3RpZ2F0aW9uLjwvbm90ZT4gQmUgYWR2aXNlZCBieSBtZSwgdGhlbi4gIElmIGFueSBvZiB5b3UgZmVlbHMgcHJlanVkaWNlZCBhZ2FpbnN0IG1lLCBsZXQgaGltIHJpZCBoaW1zZWxmIG9mIHRoYXQgcHJlanVkaWNlLiAgWW91IHdpbGwgYWRtaXQgdGhhdCBtZW4ncyBwZXJzb25zIGFyZSBub3QgdG8gYmxhbWUgZm9yIHRoZSBtaXN0YWtlcyB3aGljaCBzcHJpbmcgZnJvbSB0aGVpciBvcGluaW9ucy4gIE5vdyBteSBvd24gcGVyc29uIGlzIHN0aWxsIHVuY2hhbmdlZCwgYW5kIGlzIGZyZWUgZnJvbSBndWlsdDsgd2hlcmVhcyBkaWZmZXJlbnQgb3BpbmlvbnMgaGF2ZSByZXBsYWNlZCB0aGUgb2xkLiAgVGh1cyB5b3UgYXJlIGxlZnQgd2l0aG91dCBhbnkganVzdCBncm91bmQgZm9yIHByZWp1ZGljZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QSBzb3BoaXN0cnkgd29ydGh5IG9mIHRoZSBUZXRyYWxvZ2llcy48L25vdGU+CjwvdHJhbnNsYXRpb24+"
translation['2.Narr.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz5JbiB0aGUgY2FzZSBvZiBteSBvbGQgYmx1bmRlciB5b3UgbWFpbnRhaW5lZCB0aGF0IHlvdSBoYWQgdG8gdHJlYXQgdGhlIGluZGljYXRpb25zIGZ1cm5pc2hlZCBieSBjb25kdWN0IGFzIGRlY2lzaXZlLCBhbmQgdGhhdCB0aGVyZWZvcmUgeW91IHdlcmUgb2JsaWdlZCB0byByZWdhcmQgbWUgYXMgYSBjcmltaW5hbC4gIEJlIGNvbnNpc3RlbnQsIHRoZW47IHVzZSBvbmx5IHRoZSBpbmRpY2F0aW9ucyBmdXJuaXNoZWQgYnkgbXkgcHJlc2VudCBjb25kdWN0IHRvIHByb3ZlIHRoZSBnZW51aW5lbmVzcyBvZiBteSBwcmVzZW50IGRlc2lyZSB0byBzZXJ2ZSB5b3UuCjwvdHJhbnNsYXRpb24+"
translation['2.Narr.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnVydGhlcm1vcmUsIG15IGJlaGF2aW91ciB0b2RheSBpcyBtdWNoIG1vcmUgaW4ga2VlcGluZyB3aXRoIG15IGNoYXJhY3RlciB0aGFuIG15IGJlaGF2aW91ciB0aGVuLCBqdXN0IGFzIGl0IGFjY29yZHMgZmFyIG1vcmUgd2l0aCB0aGUgdHJhZGl0aW9ucyBvZiBteSBmYW1pbHkuICBJIGFtIG5vdCBseWluZyDigJQgbm8gbGllIG9mIHRoaXMgc29ydCBjb3VsZCBkZWNlaXZlIG15IG9sZGVyIGxpc3RlbmVycyDigJQgd2hlbiBJIHNheSB0aGF0IG15IGZhdGhlcidzIGdyYW5kZmF0aGVyLCBMZW9nb3JhcywgbGVkIGEgcmV2b2x0IG9mIHRoZSBwZW9wbGUgYWdhaW5zdCB0aGUgdHlyYW50cyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjEwNiIgdmFsaWQ9InllcyI+QW5kb2MuIDEuMTA2PC9iaWJsPiBhbmQgbm90ZS48L25vdGU+IGFuZCBpbiBzcGl0ZSBvZiB0aGUgb3Bwb3J0dW5pdHkgb2YgY29taW5nIHRvIHRlcm1zIHdpdGggdGhlbSwgbWFycnlpbmcgaW50byB0aGVpciBob3VzZSwgYW5kIHJ1bGluZyB0aGUgcGVvcGxlIG9mIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjEwNiIgdmFsaWQ9InllcyI+QW5kb2MuIDEuMTA2PC9iaWJsPiBhbmQgbm90ZS48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gYXQgdGhlaXIgc2lkZSwgY2hvc2UgdG8gc2hhcmUgdGhlIGV4aWxlIG9mIHRoZSBkZW1vY3JhdHMgYW5kIHN1ZmZlciB0aGUgaGFyZHNoaXBzIG9mIGJhbmlzaG1lbnQgcmF0aGVyIHRoYW4gdHVybiB0cmFpdG9yIHRvIHRoZW0uICBUaHVzIHRoZSBiZWhhdmlvdXIgb2YgbXkgZm9yZWZhdGhlcnMgc2hvdWxkIGJlIGFuIGFkZGl0aW9uYWwgaW5zcGlyYXRpb24gdG8gbWUgdG8gc2hvdyBhZmZlY3Rpb24gZm9yIHRoZSBwZW9wbGUsIGlmIEkgaGF2ZSBpbmRlZWQgcmVnYWluZWQgbXkgc2Vuc2VzIGF0IGxhc3Q7IGFuZCBpdCBhbHNvIGdpdmVzIHlvdSBhIG5hdHVyYWwgcmVhc29uIGZvciBhY2NlcHRpbmcgbXkgc2VydmljZXMgdGhlIG1vcmUgcmVhZGlseSwgaWYgeW91IHNlZSBtZSB0byBoYXZlIHlvdXIgaW50ZXJlc3RzIGF0IGhlYXJ0LjwvdHJhbnNsYXRpb24+"
translation['2.Concl.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSJDb25jbCIgdW5pdD0icGFydCIgLz4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZmFjdCB0aGF0IHlvdSBkZXByaXZlZCBtZSBvZiB0aGUgcGFyZG9uIHdoaWNoIHlvdSBoYWQgZ2l2ZW4gbWUgaGFzIG5ldmVyLCBJIGFzc3VyZSB5b3UsIGNhdXNlZCBtZSB0byBmZWVsIGFnZ3JpZXZlZC4gQWZ0ZXIgdGhvc2Ugc2NvdW5kcmVscyBoYWQgaW5kdWNlZCB5b3UgdG8gd3JvbmcgeW91ciBvd24gc2VsdmVzIHNvIGdyb3NzbHkgYXMgdG8gY2hhbmdlIGVtcGlyZSBmb3Igc2xhdmVyeSwgYW5kIHRvIHJlcGxhY2UgZGVtb2NyYWN5IGJ5IGRlc3BvdGlzbSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+aS5lLiB0aGUgRm91ciBIdW5kcmVkLjwvbm90ZT4gd2h5IHNob3VsZCBpdCBzdXJwcmlzZSBhbnkgb2YgeW91IHRoYXQgeW91IHdlcmUgaW5kdWNlZCB0byB3cm9uZyBtZSBsaWtld2lzZT8KPC90cmFuc2xhdGlvbj4="
translation['2.Concl.28'] = ""
translation['4.Intro.1'] = ""
translation['4.Intro.2'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzZWN0aW9uIiAvPkkgbXlzZWxmIGRlc2lyZWQgdG8gYmUgaW5jbHVkZWQgaW4gdGhpcyBudW1iZXI6IGFuZCBjb25zZXF1ZW50bHkgSSBub3cgZmluZCBteXNlbGYgaW4gdGhlIHV0bW9zdCBwZXJpbC4gIFRydWUsIGluIHlvdXJzZWx2ZXMgSSBoYXZlIGFuIGF1ZGllbmNlIGFjdGl2ZWx5IGRldm90ZWQgdG8gdGhlIHB1YmxpYyBnb29kLCBhbmQgdGhhdCBjaXJjdW1zdGFuY2UgbWFrZXMgZm9yIG15IHNhbHZhdGlvbjsgYnV0IEkgaGF2ZSBpbm51bWVyYWJsZSBlbmVtaWVzIG9mIHRoZSBtb3N0IGRhbmdlcm91cyBraW5kLCBhbmQgYnkgdGhlbSBJIGFtIGJlaW5nIG1pc3JlcHJlc2VudGVkLiAgTm9yIGlzIHRoZSBjb250ZXN0IGluIHdoaWNoIEkgYW0gZW5nYWdlZCBmb3IgdGhlIHdpbm5pbmcgb2YgYSBjcm93bjsgaXQgaXMgdG8gZGVjaWRlIHdoZXRoZXIgb25lIHdobyBoYXMgZG9uZSB0aGUgc3RhdGUgbm8gd3JvbmcgaXMgdG8gc3BlbmQgdGVuIHllYXJzIGluIGV4aWxlLiAgVGhlIGNvbXBldGl0b3JzIGZvciB0aGF0IHByaXplIGFyZSBBbGNpYmlhZGVzLCBOaWNpYXMsIGFuZCBteXNlbGYuICBVcG9uIG9uZSBvZiB1cyB0aGUgYmxvdyBtdXN0IGZhbGwuCjwvdHJhbnNsYXRpb24+"
translation['4.Intro.3'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgdGhlIGxlZ2lzbGF0b3I8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q2xlaXN0aGVuZXMsIGluIDxkYXRlIGF1dGhuYW1lPSItNTEwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNTEwIj41MTA8L2RhdGU+IEIuQyAuLCBjZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gQXRoLiBQb2wuIDIyIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBBdGguIFBvbC4gMjI8L2JpYmw+LiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6x4b22IM6z4b2wz4Egz4PPhc694b2zzrLOtyDPhM6/4b26z4IgzrzhvbLOvSDOo+G9uc67z4nOvc6/z4Igzr3hvbnOvM6/z4XPgiDhvIDPhs6xzr3hvbfPg86xzrkgz4ThvbTOvSDPhM+Fz4HOsc69zr3hvbfOtM6xIM60zrnhvbAgz4ThvbggzrzhvbQgz4fPgeG/hs+DzrjOsc65LCDOus6xzrnOvc6/4b26z4IgzrTDlSDhvITOu867zr/Phc+CIM64zrXhv5bOvc6xzrkgz4ThvbjOvSDOms67zrXOuc+DzrjhvbPOvc63zr0gz4PPhM6/z4fOsc624b25zrzOtc69zr/OvSDPhM6/4b+mIM+AzrvhvbXOuM6/z4XPgiwg4byQzr0gzr/hvLfPgiDhvJDPhOG9s864zrcgzrrOseG9tiDhvYEgz4DOtc+B4b22IM+Ezr/hv6Yg4b2Az4PPhM+BzrHOus65z4POvM6/4b+mIM694b25zrzOv8+CPC9mb3JlaWduPi4gIEZvciB0aGUgcHJvY2VkdXJlIGNmLiBQaGlsb2Nob3J1cyBmcmFnLiA3OWIsIEYuRy5ILiBpLiAzOTYuPC9ub3RlPiByZXNwb25zaWJsZSBmb3IgdGhpcyBkZXNlcnZlcyBjZW5zdXJlOyBmb3IgdGhlIGxhdyB3aGljaCBoZSBmcmFtZWQgdmlvbGF0ZXMgdGhlIG9hdGggb2YgdGhlIFBlb3BsZSBhbmQgQ291bmNpbC4gIFVuZGVyIHRoZSB0ZXJtcyBvZiB0aGF0IG9hdGggeW91IHN3ZWFyIHRvIGV4aWxlIG5vIG9uZSwgdG8gaW1wcmlzb24gbm8gb25lLCB0byBwdXQgbm8gb25lIHRvIGRlYXRoLCB3aXRob3V0IHRyaWFsOyB3aGVyZWFzIG9uIHRoaXMgcHJlc2VudCBvY2Nhc2lvbiwgd2hlbiB0aGUgcGVyc29uIG9zdHJhY2l6ZWQgaXMgdG8gYmUgY3V0IG9mZiBmcm9tIGhpcyBjb3VudHJ5IGZvciBzbyBsb25nLCBubyBhY2N1c2F0aW9uIGhhcyBiZWVuIG1hZGUsIG5vIGRlZmVuY2UgYWxsb3dlZCwgYW5kIHRoZSB2b3RpbmcgaXMgc2VjcmV0LgoKPGRhdGUgYXV0aG5hbWU9Ii01MTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii01MTAiPjUxMDwvZGF0ZT4gQi5DIC4sIGNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBBdGguIFBvbC4gMjIiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEF0aC4gUG9sLiAyMjwvYmlibD4uIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs66zrHhvbYgzrPhvbDPgSDPg8+Fzr3hvbPOss63IM+Ezr/hvbrPgiDOvOG9ss69IM6j4b25zrvPic69zr/PgiDOveG9uc68zr/Phc+CIOG8gM+GzrHOveG9t8+DzrHOuSDPhOG9tM69IM+Ez4XPgc6xzr3OveG9t860zrEgzrTOueG9sCDPhOG9uCDOvOG9tCDPh8+B4b+Gz4POuM6xzrksIM66zrHOuc69zr/hvbrPgiDOtMOVIOG8hM67zrvOv8+Fz4IgzrjOteG/ls69zrHOuSDPhOG9uM69IM6azrvOtc65z4POuOG9s869zrfOvSDPg8+Ezr/Ph86xzrbhvbnOvM61zr3Ov869IM+Ezr/hv6Ygz4DOu+G9tc64zr/Phc+CLCDhvJDOvSDOv+G8t8+CIOG8kM+E4b2zzrjOtyDOus6x4b22IOG9gSDPgM61z4HhvbYgz4TOv+G/piDhvYDPg8+Ez4HOsc66zrnPg868zr/hv6Ygzr3hvbnOvM6/z4I8L2ZvcmVpZ24+LiAgRm9yIHRoZSBwcm9jZWR1cmUgY2YuIFBoaWxvY2hvcnVzIGZyYWcuIDc5YiwgRi5HLkguIGkuIDM5Ni48L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.4'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJzZWN0aW9uIiAvPk1vcmVvdmVyLCBhdCBhIHRpbWUgbGlrZSB0aGlzIHRob3NlIHdobyBoYXZlIHBvbGl0aWNhbCBhc3NvY2lhdGVzIGFuZCBjb25mZWRlcmF0ZXMgaGF2ZSBhbiBhZHZhbnRhZ2Ugb3ZlciB0aGUgcmVzdCwgYmVjYXVzZSB0aGUganVkZ2VzIGFyZSBub3QgYXBwb2ludGVkIGJ5IGxvdCBhcyBpbiBjb3VydHMgb2YgbGF3OiBpbiB0aGUgcHJlc2VudCBkZWNpc2lvbiBldmVyeSBtZW1iZXIgb2YgdGhlIGNvbW11bml0eSBoYXMgYSB2b2ljZS4gQW5kIG5vdCBvbmx5IHRoYXQ6IHRoZSBsYXcgYXBwZWFycyB0byBtZSB0byBnbyBib3RoIHRvbyBmYXIgYW5kIG5vdCBmYXIgZW5vdWdoOyBmb3Igd3JvbmdzIGRvbmUgdG8gaW5kaXZpZHVhbHMgSSBjb25zaWRlciBzdWNoIHJlZHJlc3MgYXMgdGhpcyBleGNlc3NpdmU6IGZvciB3cm9uZ3MgZG9uZSB0byB0aGUgc3RhdGUgSSByZWdhcmQgaXQgYXMgYW4gaW5zdWZmaWNpZW50IGFuZCB1c2VsZXNzIHBlbmFsdHksIHdoZW4geW91IGhhdmUgdGhlIHJpZ2h0IHRvIHB1bmlzaCBieSBmaW5lLCBpbXByaXNvbm1lbnQsIG9yIGRlYXRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.5'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJzZWN0aW9uIiAvPkZ1cnRoZXJtb3JlLCBpZiBhIG1hbiBpcyBleGlsZWQgYmVjYXVzZSBoZSBpcyBhIGJhZCBjaXRpemVuLCBoaXMgbGVhdmluZyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gd2lsbCBub3QgY3VyZSBoaW07IHdoZXJldmVyIGhlIGxpdmVzLCBoZSB3aWxsIGRvIHRoaXMgY2l0eSBoYXJtIGFuZCBpbnRyaWd1ZSBhZ2FpbnN0IGhlciBubyBsZXNzIHRoYW4gaGl0aGVydG/igJRuYXkgbW9yZSBzbyBhbmQgd2l0aCBtb3JlIGp1c3RpZmljYXRpb24gdGhhbiBiZWZvcmUgaGlzIGJhbmlzaG1lbnQuICBUb2RheSwgdG9vLCBhYm92ZSBhbGwgZGF5cywgeW91ciBmcmllbmRzLCBJIGZlZWwsIGFyZSBmaWxsZWQgd2l0aCBzb3Jyb3cgYW5kIHlvdXIgZW5lbWllcyB3aXRoIGpveSwgYmVjYXVzZSB0aGV5IGtub3cgdGhhdCBpZiB5b3UgdW53aXR0aW5nbHkgYmFuaXNoIHlvdXIgYmVzdCBjaXRpemVuLCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gd2lsbCBkZXJpdmUgbm8gYmVuZWZpdCBmcm9tIGhpbSBmb3IgdGVuIHllYXJzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.6'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJzZWN0aW9uIiAvPlRoZW4gc3RpbGwgYW5vdGhlciBmYWN0IG1ha2VzIGl0IGVhc3kgdG8gc2VlIHRoYXQgdGhlIGxhdyBpcyBhIGJhZCBvbmU6ICB3ZSBhcmUgdGhlIG9ubHkgR3JlZWtzIHRvIG9ic2VydmUgaXQsIGFuZCBubyBvdGhlciBzdGF0ZSBpcyBwcmVwYXJlZCB0byBpbWl0YXRlIHVzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgZXZpZGVuY2Ugb24gdGhlIHN1YmplY3Qgb2Ygb3N0cmFjaXNtIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMDAwMDc0IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDEwMDAwNzQiPkdyZWVjZTwvcGxhY2VOYW1lPiBhdCBsYXJnZSBpcyB0b28gaW5jb25jbHVzaXZlIHRvIGVuYWJsZSB1cyBlaXRoZXIgdG8gYWNjZXB0IG9yIHRvIHJlamVjdCB0aGlzIHN0YXRlbWVudCB3aXRoIGNvbmZpZGVuY2UuICBJdCBpcyBrbm93biB0aGF0IHRoZSBpbnN0aXR1dGlvbiBleGlzdGVkIGZvciBhIHRpbWUgYXQgbGVhc3QgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBcmdvcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXJnb3MiPkFyZ29zPC9wbGFjZU5hbWU+IO+8iDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIFBvbC4gNS4xMzAyYi4xOCIgdmFsaWQ9InllcyI+QXJpc3RvdC4gUG9sLiA4LjMsIDEzMDJiIDE4PC9iaWJsPu+8iSwgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNaWxldHVzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxNaWxldHVzIj5NaWxldHVzPC9wbGFjZU5hbWU+IO+8iFNjaG9sLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG9waC4gS24uIDg1NSIgdmFsaWQ9InllcyI+QXJpc3RvcGguIEtuLiA4NTU8L2JpYmw+77yJLCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1lZ2FyYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTWVnYXJhIj5NZWdhcmE8L3BsYWNlTmFtZT4g77yIaWJpZC7vvIksIGFuZCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5cmFjdXNlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTeXJhY3VzZSI+U3lyYWN1c2U8L3BsYWNlTmFtZT4g77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRGlvZC4gMTEuODcuNiIgdmFsaWQ9InllcyI+RGlvLiBTaWMuIDExLjg3LjY8L2JpYmw+77yJLiAgSXQgd2FzIGludHJvZHVjZWQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3lyYWN1c2UiPlN5cmFjdXNlPC9wbGFjZU5hbWU+IGluIDxkYXRlIGF1dGhuYW1lPSItNDU0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDU0Ij40NTQ8L2RhdGU+IEIuQy4gdW5kZXIgdGhlIG5hbWUgb2YgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DOtc+EzrHOu865z4POvOG9uc+CPC9mb3JlaWduPiwgZGVmaW5pdGVseSBpbiBpbWl0YXRpb24gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+Ljwvbm90ZT4gWWV0IGl0IGlzIHJlY29nbml6ZWQgdGhhdCB0aGUgYmVzdCBpbnN0aXR1dGlvbnMgYXJlIHRob3NlIHdoaWNoIGhhdmUgcHJvdmVkIG1vc3Qgc3VpdGVkIHRvIGRlbW9jcmFjeSBhbmQgb2xpZ2FyY2h5IGFsaWtlIGFuZCB3aGljaCBhcmUgdGhlIG1vc3QgZ2VuZXJhbGx5IGZhdm91cmVkLgo8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5HcmVlY2U8L3BsYWNlTmFtZT4gYXQgbGFyZ2UgaXMgdG9vIGluY29uY2x1c2l2ZSB0byBlbmFibGUgdXMgZWl0aGVyIHRvIGFjY2VwdCBvciB0byByZWplY3QgdGhpcyBzdGF0ZW1lbnQgd2l0aCBjb25maWRlbmNlLiAgSXQgaXMga25vd24gdGhhdCB0aGUgaW5zdGl0dXRpb24gZXhpc3RlZCBmb3IgYSB0aW1lIGF0IGxlYXN0IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXJnb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEFyZ29zIj5BcmdvczwvcGxhY2VOYW1lPiDvvIg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBQb2wuIDUuMTMwMmIuMTgiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIFBvbC4gOC4zLCAxMzAyYiAxODwvYmlibD7vvIksIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsTWlsZXR1cyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTWlsZXR1cyI+TWlsZXR1czwvcGxhY2VOYW1lPiDvvIhTY2hvbC4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvcGguIEtuLiA4NTUiIHZhbGlkPSJ5ZXMiPkFyaXN0b3BoLiBLbi4gODU1PC9iaWJsPu+8iSwgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNZWdhcmEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1lZ2FyYSI+TWVnYXJhPC9wbGFjZU5hbWU+IO+8iGliaWQu77yJLCBhbmQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeXJhY3VzZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3lyYWN1c2UiPlN5cmFjdXNlPC9wbGFjZU5hbWU+IO+8iDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkRpb2QuIDExLjg3LjYiIHZhbGlkPSJ5ZXMiPkRpby4gU2ljLiAxMS44Ny42PC9iaWJsPu+8iS4gIEl0IHdhcyBpbnRyb2R1Y2VkIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3lyYWN1c2UiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPiBpbiA8ZGF0ZSBhdXRobmFtZT0iLTQ1NCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQ1NCI+NDU0PC9kYXRlPiBCLkMuIHVuZGVyIHRoZSBuYW1lIG9mIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+AzrXPhM6xzrvOuc+DzrzhvbnPgjwvZm9yZWlnbj4sIGRlZmluaXRlbHkgaW4gaW1pdGF0aW9uIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPi48L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.7'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJzZWN0aW9uIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHNlZSBubyByZWFzb24gZm9yIGR3ZWxsaW5nIGZ1cnRoZXIgb24gdGhpcyBzdWJqZWN0LCBhcywgd2hhdGV2ZXIgdGhlIG91dGNvbWUsIEkgc2hvdWxkIGFjaGlldmUgbm90aGluZyBvZiBpbW1lZGlhdGUgYWR2YW50YWdlLiAgQnV0IEkgZG8gYXNrIHlvdSB0byBwcmVzaWRlIG92ZXIgb3VyIHNwZWVjaGVzIGluIGEgZmFpciBhbmQgaW1wYXJ0aWFsIG1hbm5lciwgYW5kIG9uZSBhbmQgYWxsIHRvIGFjdCBhcyBBcmNob25zLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5EYWxtZXlkYSDvvIhBbmRvYy4sIGVkLiBCdWRl77yJIGlzIHByb2JhYmx5IHJpZ2h0IGluIGV4cGxhaW5pbmcgdGhpcyBhcyBhIHJlZmVyZW5jZSB0byB0aGUgcHJvY2VkdXJlIG9ic2VydmVkIHdoZW4gYW4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2Az4PPhM+BzrHOus65z4POvOG9uc+CPC9mb3JlaWduPiB3YXMgaGVsZC4gIEFjY29yZGluZyB0byB0aGUgU2Nob2xpYXN0IG9uIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3BoLiBLbi4gODU1IiB2YWxpZD0ieWVzIj5BcmlzdG9waC4gS24uIDg1NTwvYmlibD4sIHRoZSBwZW9wbGUgbWV0IHVuZGVyIHRoZSBwcmVzaWRlbmN5IG9mIHRoZSBBcmNob25zIGFuZCB0aGUgQm91bGUsIGkuZS4gdGhlIEFyY2hvbnMgdG9nZXRoZXIgd2l0aCB0aGUgUHJ5dGFuZXMgaW4gb2ZmaWNlIGZvciB0aGUgdGltZSBiZWluZy4gIFRoZXNlIGxhc3Qgd291bGQgaGF2ZSBvbmUgb2YgdGhlaXIgbWVtYmVycyBhcyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDPgM65z4PPhOG9sc+EzrfPgjwvZm9yZWlnbj4gb3IgcHJlc2lkZW50IGZvciB0aGUgZGF5LiAgVGhlIHNwZWFrZXIgaXMgdGhlcmVmb3JlIHVyZ2luZyBoaXMgYXVkaWVuY2UgdG8gcmVnYXJkIHRoZW1zZWx2ZXMgYXMgcGxhY2VkIGluIHRoZSBzYW1lIHJlc3BvbnNpYmxlIHBvc2l0aW9uIGFzIHRoZSBBcmNob25zIGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDPgM65z4PPhOG9sc+EzrfPgiDPhOG/ts69IM+Az4HPhc+EzrHOveG9s8+Jzr08L2ZvcmVpZ24+PC9ub3RlPiBEbyBub3QgY291bnRlbmFuY2UgYWJ1c2Ugb3IgdW5kdWUgZmxhdHRlcnkuICBTaG93IHlvdXJzZWx2ZXMga2luZGx5IHRvIGhpbSB3aG8gZGVzaXJlcyB0byBzcGVhayBhbmQgdG8gbGlzdGVuOiBzaG93IHlvdXJzZWx2ZXMgc3Rlcm4gdG8gaGltIHdobyBpcyBpbnNvbGVudCBhbmQgZGlzb3JkZXJseTsgZm9yIHlvdSB3aWxsIGRlY2lkZSBvdXIgZmF0ZSBhbGwgdGhlIGJldHRlciwgaWYgZWFjaCBvZiB0aGUgY2FzZXMgdG8gYmUgbGFpZCBiZWZvcmUgeW91IGlzIGdpdmVuIGEgaGVhcmluZy48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvYDPg8+Ez4HOsc66zrnPg8684b25z4I8L2ZvcmVpZ24+IHdhcyBoZWxkLiAgQWNjb3JkaW5nIHRvIHRoZSBTY2hvbGlhc3Qgb24gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvcGguIEtuLiA4NTUiIHZhbGlkPSJ5ZXMiPkFyaXN0b3BoLiBLbi4gODU1PC9iaWJsPiwgdGhlIHBlb3BsZSBtZXQgdW5kZXIgdGhlIHByZXNpZGVuY3kgb2YgdGhlIEFyY2hvbnMgYW5kIHRoZSBCb3VsZSwgaS5lLiB0aGUgQXJjaG9ucyB0b2dldGhlciB3aXRoIHRoZSBQcnl0YW5lcyBpbiBvZmZpY2UgZm9yIHRoZSB0aW1lIGJlaW5nLiAgVGhlc2UgbGFzdCB3b3VsZCBoYXZlIG9uZSBvZiB0aGVpciBtZW1iZXJzIGFzIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM+AzrnPg8+E4b2xz4TOt8+CPC9mb3JlaWduPiBvciBwcmVzaWRlbnQgZm9yIHRoZSBkYXkuICBUaGUgc3BlYWtlciBpcyB0aGVyZWZvcmUgdXJnaW5nIGhpcyBhdWRpZW5jZSB0byByZWdhcmQgdGhlbXNlbHZlcyBhcyBwbGFjZWQgaW4gdGhlIHNhbWUgcmVzcG9uc2libGUgcG9zaXRpb24gYXMgdGhlIEFyY2hvbnMgYW5kIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8kM+AzrnPg8+E4b2xz4TOt8+CIM+E4b+2zr0gz4DPgc+Fz4TOsc694b2zz4nOvTwvZm9yZWlnbj48L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.8'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIwIiB1bml0PSJOYXJyLCBQcm9vZiIgLz4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjgiIHVuaXQ9InNlY3Rpb24iIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IHJlbWFpbnMgZm9yIG1lIHRvIG1ha2UgYSBicmllZiByZWZlcmVuY2UgdG8gbXkgaG9zdGlsaXR5IHRvIHRoZSBkZW1vY3JhY3kgYW5kIG15IG1lbWJlcnNoaXAgb2YgYSBwb2xpdGljYWwgZmFjdGlvbi4gIEhhZCBJIG5ldmVyIGFwcGVhcmVkIGluIGNvdXJ0LCB5b3Ugd291bGQgaGF2ZSBoYWQgc29tZSByZWFzb24gZm9yIGxpc3RlbmluZyB0byBteSBhY2N1c2VycywgYW5kIGl0IHdvdWxkIGhhdmUgYmVlbiBuZWNlc3NhcnkgZm9yIG1lIHRvIGFuc3dlciB0aGVtIG9uIHRoZXNlIHBvaW50cy4gIEJ1dCBzaW5jZSBJIGhhdmUgYmVlbiB0cmllZCBhbmQgYWNxdWl0dGVkIGZvdXIgdGltZXMsIEkgZG8gbm90IGNvbnNpZGVyIGFueSBmdXJ0aGVyIGRpc2N1c3Npb24gb2YgdGhlIHN1YmplY3QganVzdGlmaWVkLiAgQmVmb3JlIGEgbWFuIGlzIHRyaWVkLCBpdCBpcyBkaWZmaWN1bHQgdG8ga25vdyB3aGV0aGVyIHRoZSBjaGFyZ2VzIG1hZGUgYWdhaW5zdCBoaW0gYXJlIGZhbHNlIG9yIHRydWU7IGJ1dCBhZnRlciBoaXMgYWNxdWl0dGFsIG9yIGNvbnZpY3Rpb24gdGhlIG1hdHRlciBpcyBkZWNpZGVkLCBhbmQgaXQgaXMgc2V0dGxlZCB3aGV0aGVyIHRoZXkgYXJlIHRoZSBvbmUgb3IgdGhlIG90aGVyLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.9'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJzZWN0aW9uIiAvPkhlbmNlIEkgY2Fubm90IGJ1dCB0aGluayBpdCBzdHJhbmdlIHRoYXQgd2hpbGUgZGVmZW5kYW50cyB3aG8gYXJlIGNvbnZpY3RlZCBieSBidXQgYSBzaW5nbGUgdm90ZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIGJ5IGEgbWFqb3JpdHkgb2Ygb25lLiAgSWYgdGhlIGp1cnkgd2FzIGVxdWFsbHkgZGl2aWRlZCwgdGhlIGFjY3VzZWQgd2FzIGFjcXVpdHRlZC4gIENmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbnRpcGguIDUuNTEiIHZhbGlkPSJ5ZXMiPkFudGlwaC4gNS41MTwvYmlibD4uPC9ub3RlPiBhcmUgcHV0IHRvIGRlYXRoIGFuZCBoYXZlIHRoZWlyIHByb3BlcnR5IGNvbmZpc2NhdGVkIGJ5IHlvdSwgdGhvc2Ugd2hvIHdpbiB0aGVpciBjYXNlIHNob3VsZCBoYXZlIHRvIGZhY2UgdGhlIHNhbWUgY2hhcmdlcyBhZ2FpbjogdGhhdCB3aGlsZSB0aGUgY291cnQgaGFzIHRoZSBwb3dlciB0byB0YWtlIGF3YXkgbGlmZSwgaXQgc2hvdWxkIHNvIGNsZWFybHkgbGFjayB0aGUgYXV0aG9yaXR5IHRvIHNhdmUgaXQgb25jZSBhbmQgZmluYWxseSwgZXNwZWNpYWxseSBhcyB0aGUgbGF3cyBmb3JiaWQgdGhlIHNhbWUgY2hhcmdlIHRvIGJlIGJyb3VnaHQgdHdpY2UgYWdhaW5zdCB0aGUgc2FtZSBkZWZlbmRhbnQsIGFuZCB5b3UgaGF2ZSBzd29ybiB0byBvYnNlcnZlIHRob3NlIGxhd3MuCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFudGlwaC4gNS41MSIgdmFsaWQ9InllcyI+QW50aXBoLiA1LjUxPC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.10'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSBzaGFsbCB0aGVyZWZvcmUgc2F5IG5vdGhpbmcgb2YgbXlzZWxmLiAgSSB3aXNoIGluc3RlYWQgdG8gcmVtaW5kIHlvdSBvZiB0aGUgcGFzdCBvZiBBbGNpYmlhZGVz4oCUIGFsdGhvdWdoIHN1Y2ggaXMgdGhlIG11bHRpdHVkZSBvZiBoaXMgbWlzZGVlZHMgdGhhdCBJIGFtIGF0IGEgbG9zcyB3aGVyZSB0byBiZWdpbjogdGhlcmUgaXMgbm90IG9uZSBvZiB0aGVtIHRoYXQgZG9lcyBub3QgcHJlc3MgZm9yIG1lbnRpb24uICBXZXJlIEkgZmFjZWQgd2l0aCB0aGUgdGFzayBvZiBkZXNjcmliaW5nIGF0IGxlbmd0aCBoaXMgY2FyZWVyIGFzIGFuIGFkdWx0ZXJlciwgYXMgYSBzdGVhbGVyIG9mIHRoZSB3aXZlcyBvZiBvdGhlcnMsIGFzIGEgcGVycGV0cmF0b3Igb2YgYWN0cyBvZiBsYXdsZXNzIHZpb2xlbmNlIGluIGdlbmVyYWwsIHRoZSB0aW1lIGF0IG15IGRpc3Bvc2FsIHdvdWxkIGJlIGFsbCB0b28gc2hvcnQsIGFuZCBJIHNob3VsZCBmdXJ0aGVybW9yZSBlYXJuIHRoZSBpbGwtd2lsbCBvZiBtYW55IG9mIG15IGZlbGxvd3MgZm9yIG1ha2luZyBwdWJsaWMgdGhlIGluanVyaWVzIHdoaWNoIHRoZXkgaGF2ZSBzdWZmZXJlZC4gIE9mIGhpcyBjb25kdWN0IHRvd2FyZHMgdGhlIHN0YXRlLCBob3dldmVyLCBhbmQgdG93YXJkcyB0aGUgbWVtYmVycyBvZiBoaXMgZmFtaWx5IGFuZCBzdWNoIGNpdGl6ZW5zIGFuZCBmb3JlaWduZXJzIGFzIGhhdmUgY3Jvc3NlZCBoaXMgcGF0aCwgSSB3aWxsIGdpdmUgeW91IHNvbWUgYWNjb3VudC4KPC90cmFuc2xhdGlvbj4="
translation['4.Intro.11'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VG8gYmVnaW4gd2l0aCwgaGUgcGVyc3VhZGVkIHlvdSB0byByZXZpc2UgdGhlIGFzc2Vzc21lbnQgb2YgdGhlIHRyaWJ1dGUgb2YgdGhlIHN1YmplY3Qtc3RhdGVzIG1hZGUgd2l0aCB0aGUgdXRtb3N0IGZhaXJuZXNzIGJ5IEFyaXN0ZWlkZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkluIDxkYXRlIGF1dGhuYW1lPSItNDc4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDc4Ij40Nzg8L2RhdGU+IEIuQy4sIGF0IHRoZSBmb3JtYXRpb24gb2YgdGhlIENvbmZlZGVyYWN5IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVsb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERlbG9zIj5EZWxvczwvcGxhY2VOYW1lPi4gIEFjY29yZGluZyB0byBUaHVjeWRpZGVzIO+8iDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlRodWMuIDEuOTYiIHZhbGlkPSJ5ZXMiPlRodWMuIDEuOTY8L2JpYmw+77yJLCB0aGUgdHJpYnV0ZSBhcyBhc3Nlc3NlZCBieSBBcmlzdGVpZGVzIGFtb3VudGVkIHRvIDQ2MCB0YWxlbnRzLiAgSXQgaXMgZGlmZmljdWx0IHRvIGFjY2VwdCB0aGlzIHN0YXRlbWVudCwgYXMgdGhlIGV4aXN0aW5nIHF1b3RhLWxpc3RzIHNob3cgdGhhdCBldmVuIGJldHdlZW4gPGRhdGUgYXV0aG5hbWU9Ii00NTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00NTAiPjQ1MDwvZGF0ZT4gQi5DLiBhbmQgPGRhdGUgYXV0aG5hbWU9Ii00MzYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MzYiPjQzNjwvZGF0ZT4gQi5DLiwgd2hlbiB0aGUgQ29uZmVkZXJhY3kgd2FzIGZhciBsYXJnZXIgYW5kIGNvbnRyaWJ1dGlvbnMgb2YgbW9uZXkgaGFkIGFsbW9zdCBlbnRpcmVseSBzdXBlcnNlZGVkIHRob3NlIG9mIHNoaXBzLCB0aGUgdG90YWwgc3VtIGNvbGxlY3RlZCBuZXZlciBleGNlZWRlZCA0NTUgdGFsZW50cy4gIFRoZSBvcmlnaW5hbCBhc3Nlc3NtZW50IG9mIEFyaXN0ZWlkZXMgY2Fubm90IGhhdmUgcHJvZHVjZWQgbXVjaCBtb3JlIHRoYW4gMjUwIHRhbGVudHMuPC9ub3RlPiBDaG9zZW4gd2l0aCBuaW5lIG90aGVycyB0byBwZXJmb3JtIHRoZSB0YXNrLDxkYXRlIGF1dGhuYW1lPSItNDc4IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDc4Ij40Nzg8L2RhdGU+IEIuQy4sIGF0IHRoZSBmb3JtYXRpb24gb2YgdGhlIENvbmZlZGVyYWN5IG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVsb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERlbG9zIj5EZWxvczwvcGxhY2VOYW1lPi4gIEFjY29yZGluZyB0byBUaHVjeWRpZGVzIO+8iDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlRodWMuIDEuOTYiIHZhbGlkPSJ5ZXMiPlRodWMuIDEuOTY8L2JpYmw+77yJLCB0aGUgdHJpYnV0ZSBhcyBhc3Nlc3NlZCBieSBBcmlzdGVpZGVzIGFtb3VudGVkIHRvIDQ2MCB0YWxlbnRzLiAgSXQgaXMgZGlmZmljdWx0IHRvIGFjY2VwdCB0aGlzIHN0YXRlbWVudCwgYXMgdGhlIGV4aXN0aW5nIHF1b3RhLWxpc3RzIHNob3cgdGhhdCBldmVuIGJldHdlZW4gPGRhdGUgYXV0aG5hbWU9Ii00NTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00NTAiPjQ1MDwvZGF0ZT4gQi5DLiBhbmQgPGRhdGUgYXV0aG5hbWU9Ii00MzYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MzYiPjQzNjwvZGF0ZT4gQi5DLiwgd2hlbiB0aGUgQ29uZmVkZXJhY3kgd2FzIGZhciBsYXJnZXIgYW5kIGNvbnRyaWJ1dGlvbnMgb2YgbW9uZXkgaGFkIGFsbW9zdCBlbnRpcmVseSBzdXBlcnNlZGVkIHRob3NlIG9mIHNoaXBzLCB0aGUgdG90YWwgc3VtIGNvbGxlY3RlZCBuZXZlciBleGNlZWRlZCA0NTUgdGFsZW50cy4gIFRoZSBvcmlnaW5hbCBhc3Nlc3NtZW50IG9mIEFyaXN0ZWlkZXMgY2Fubm90IGhhdmUgcHJvZHVjZWQgbXVjaCBtb3JlIHRoYW4gMjUwIHRhbGVudHMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPk5vdGhpbmcgaXMga25vd24gb2YgdGhpcyByZWFzc2Vzc21lbnQuICBJbiA8ZGF0ZSBhdXRobmFtZT0iLTQyNSIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQyNSI+NDI1PC9kYXRlPiBCLkMuIHRoZSBleGlzdGluZyB0cmlidXRlIGhhZCBiZWVuIHByYWN0aWNhbGx5IGRvdWJsZWQsIHByb2JhYmx5IGF0IHRoZSBpbnN0aWdhdGlvbiBvZiBDbGVvbiDvvIhJLkcuIGkxLiA2M++8iTsgYW5kIHRoZSBzcGVha2VyIG1heSBjb25jZWl2YWJseSBiZSBtYWtpbmcgYSBtaXN0YWtlbiByZWZlcmVuY2UgdG8gdGhpcywgYWx0aG91Z2ggQWxjaWJpYWRlcyB3b3VsZCBoYXZlIGJlZW4gb25seSBhYm91dCB0d2VudHktZml2ZSBhdCB0aGUgdGltZSwgYW5kIHRoZXJlZm9yZSB0b28geW91bmcgdG8gYmUgY29uY2VybmVkIGluIGl0LiAgQSBzZWNvbmQgYXR0ZW1wdCB0byBpbmNyZWFzZSB0aGUgcmV2ZW51ZSB3YXMgbWFkZSBjLiA0MTMsIHdoZW4gYSA1IHBlciBjZW50IHRvbGwgb24gbWFyaXRpbWUgY29tbWVyY2Ugd2FzIGluc3RpdHV0ZWQgaW4gbGlldSBvZiB0cmlidXRlIO+8iFRodWN5ZC4gdmlpLiAyOO+8iS48L25vdGU+IGhlIHByYWN0aWNhbGx5IGRvdWJsZWQgdGhlIGNvbnRyaWJ1dGlvbiBvZiBlYWNoIG1lbWJlciBvZiB0aGUgYWxsaWFuY2UsIHdoaWxlIGJ5IHNob3dpbmcgaG93IGZvcm1pZGFibGUgaGUgd2FzIGFuZCBob3cgaW5mbHVlbnRpYWwsIGhlIG1hZGUgdGhlIHJldmVudWVzIG9mIHRoZSBzdGF0ZSBhIG1lYW5zIG9mIHByb2N1cmluZyByZXZlbnVlIGZvciBoaW1zZWxmLjxkYXRlIGF1dGhuYW1lPSItNDI1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDI1Ij40MjU8L2RhdGU+IEIuQy4gdGhlIGV4aXN0aW5nIHRyaWJ1dGUgaGFkIGJlZW4gcHJhY3RpY2FsbHkgZG91YmxlZCwgcHJvYmFibHkgYXQgdGhlIGluc3RpZ2F0aW9uIG9mIENsZW9uIO+8iEkuRy4gaTEuIDYz77yJOyBhbmQgdGhlIHNwZWFrZXIgbWF5IGNvbmNlaXZhYmx5IGJlIG1ha2luZyBhIG1pc3Rha2VuIHJlZmVyZW5jZSB0byB0aGlzLCBhbHRob3VnaCBBbGNpYmlhZGVzIHdvdWxkIGhhdmUgYmVlbiBvbmx5IGFib3V0IHR3ZW50eS1maXZlIGF0IHRoZSB0aW1lLCBhbmQgdGhlcmVmb3JlIHRvbyB5b3VuZyB0byBiZSBjb25jZXJuZWQgaW4gaXQuICBBIHNlY29uZCBhdHRlbXB0IHRvIGluY3JlYXNlIHRoZSByZXZlbnVlIHdhcyBtYWRlIGMuIDQxMywgd2hlbiBhIDUgcGVyIGNlbnQgdG9sbCBvbiBtYXJpdGltZSBjb21tZXJjZSB3YXMgaW5zdGl0dXRlZCBpbiBsaWV1IG9mIHRyaWJ1dGUg77yIVGh1Y3lkLiB2aWkuIDI477yJLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5pLmUuIGhlIHVzZWQgaGlzIHBvc2l0aW9uIHRvIGV4dG9ydCBibGFja21haWwsIHVuZGVyIHRocmVhdCBvZiBhbiBleGNlc3NpdmUgYXNzZXNzbWVudC48L25vdGU+IE5vdyBqdXN0IGNvbnNpZGVyOiB3aGVuIG91ciBzYWZldHkgZGVwZW5kcyBlbnRpcmVseSB1cG9uIG91ciBhbGxpZXMgYW5kIHRob3NlIGFsbGllcyBhcmUgYWNrbm93bGVkZ2VkIHRvIGJlIHdvcnNlIG9mZiB0b2RheSB0aGFuIGluIHRoZSBwYXN0LCBob3cgY291bGQgYW55b25lIGRvIGdyZWF0ZXIgbWlzY2hpZWYgdGhhbiBieSBkb3VibGluZyB0aGUgdHJpYnV0ZSBvZiBlYWNoPwo8L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.12'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0ic2VjdGlvbiIgLz5JbiBmYWN0LCBpZiB5b3UgaG9sZCB0aGF0IEFyaXN0ZWlkZXMgd2FzIGEgZ29vZCBBdGhlbmlhbiBhbmQgYSBqdXN0IG9uZSwgeW91IGNhbiBvbmx5IHJlZ2FyZCBBbGNpYmlhZGVzIGFzIGEgc2NvdW5kcmVsLCBzaW5jZSBoaXMgcG9saWN5IHRvd2FyZHMgdGhlIHN1YmplY3Qtc3RhdGVzIGlzIHRoZSBleGFjdCBvcHBvc2l0ZSBvZiB0aGF0IG9mIEFyaXN0ZWlkZXMuIEluZGVlZCwgYmVjYXVzZSBvZiBoaXMgYmVoYXZpb3VyLCBtYW55IGFyZSBsZWF2aW5nIHRoZWlyIGhvbWVzIGFzIGV4aWxlcyBhbmQgZ29pbmcgb2ZmIHRvIHNldHRsZSBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRodXJpaSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVGh1cmlpIj5UaHVyaWk8L3BsYWNlTmFtZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+QSBjb2xvbnkgZm91bmRlZCBpbiA8ZGF0ZSBhdXRobmFtZT0iLTQ1MyIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQ1MyI+NDUzPC9kYXRlPiBCLkMuIG9uIHRoZSBzaXRlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3liYXJpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3liYXJpcyI+U3liYXJpczwvcGxhY2VOYW1lPiBpbiBTLiBJdGFseS4gIFRoZSBidWxrIG9mIHRoZSBzZXR0bGVycyB3ZXJlIEF0aGVuaWFuLCBhbHRob3VnaCBudW1iZXJzIGNhbWUgZnJvbSBhbGwgcGFydHMgb2YgdGhlIEdyZWVrIHdvcmxkLjwvbm90ZT47IHdoaWxlIHRoZSBiaXR0ZXIgZmVlbGluZyBvZiB0aGUgYWxsaWVzIHdpbGwgbWFuaWZlc3QgaXRzZWxmIGRpcmVjdGx5IHRoZXJlIGlzIGEgd2FyIGF0IHNlYSBiZXR3ZWVuIDxkYXRlIGF1dGhuYW1lPSItNDUzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDUzIj40NTM8L2RhdGU+IEIuQy4gb24gdGhlIHNpdGUgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTeWJhcmlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTeWJhcmlzIj5TeWJhcmlzPC9wbGFjZU5hbWU+IGluIFMuIEl0YWx5LiAgVGhlIGJ1bGsgb2YgdGhlIHNldHRsZXJzIHdlcmUgQXRoZW5pYW4sIGFsdGhvdWdoIG51bWJlcnMgY2FtZSBmcm9tIGFsbCBwYXJ0cyBvZiB0aGUgR3JlZWsgd29ybGQuPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxTcGFydGEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFNwYXJ0YSI+U3BhcnRhPC9wbGFjZU5hbWU+IGFuZCBvdXJzZWx2ZXMuICBJbiBteSBvd24gb3BpbmlvbiwgaGUgaXMgYSB3b3J0aGxlc3Mgc3RhdGVzbWFuIHdobyBjb25zaWRlcnMgb25seSB0aGUgcHJlc2VudCB3aXRob3V0IGFsc28gZ2l2aW5nIHRob3VnaHQgdG8gdGhlIGZ1dHVyZSwgd2hvIGFkdm9jYXRlcyB0aGUgcG9saWN5IHdoaWNoIHdpbGwgYmVzdCBwbGVhc2UgdGhlIHBlb3BsZSBhbmQgc2F5cyBub3RoaW5nIG9mIHRoYXQgd2hpY2ggdGhlaXIgdHJ1ZSBpbnRlcmVzdHMgcmVxdWlyZS4KPC90cmFuc2xhdGlvbj4="
translation['4.Intro.13'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSBhbSBhc3RvbmlzaGVkLCBmdXJ0aGVybW9yZSwgYXQgdGhvc2Ugd2hvIGFyZSBwZXJzdWFkZWQgdGhhdCBBbGNpYmlhZGVzIGlzIGEgbG92ZXIgb2YgZGVtb2NyYWN5LCB0aGF0IGZvcm0gb2YgZ292ZXJubWVudCB3aGljaCBtb3JlIHRoYW4gYW55IG90aGVyIHdvdWxkIHNlZW0gdG8gbWFrZSBlcXVhbGl0eSBpdHMgZW5kLiAgVGhleSBhcmUgbm90IHVzaW5nIGhpcyBwcml2YXRlIGxpZmUgYXMgZXZpZGVuY2Ugb2YgaGlzIGNoYXJhY3RlciwgaW4gc3BpdGUgb2YgdGhlIGZhY3QgdGhhdCBoaXMgZ3JlZWQgYW5kIGhpcyBhcnJvZ2FuY2UgYXJlIHBsYWluIHRvIHRoZW0uICBPbiBoaXMgbWFycmlhZ2Ugd2l0aCB0aGUgc2lzdGVyIG9mIENhbGxpYXMgaGUgcmVjZWl2ZWQgYSBkb3dyeSBvZiB0ZW4gdGFsZW50czsgeWV0IGFmdGVyIEhpcHBvbmljdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Rm9yIEhpcHBvbmljdXMgYW5kIENhbGxpdXMgY2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFuZG9jLiAxLjExNSIgdmFsaWQ9InllcyI+QW5kb2MuIDEuMTE1PC9iaWJsPiwgMTMwLjwvbm90ZT4gaGFkIGxvc3QgaGlzIGxpZmUgYXMgb25lIG9mIHRoZSBnZW5lcmFscyBhdCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbmRvYy4gMS4xMTUiIHZhbGlkPSJ5ZXMiPkFuZG9jLiAxLjExNTwvYmlibD4sIDEzMC48cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNjAwMTcwMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw2MDAxNzAwIj5EZWxpdW08L3BsYWNlTmFtZT4sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkluIDxkYXRlIGF1dGhuYW1lPSItNDI0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDI0Ij40MjQ8L2RhdGU+IEIuQy4gRGVtb3N0aGVuZXMgYW5kIEhpcHBvY3JhdGVzIHBsYW5uZWQgYSBqb2ludCBpbnZhc2lvbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjY4MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjgzIj5Cb2VvdGlhPC9wbGFjZU5hbWU+LiAgVGhlIHNjaGVtZSBtaXNjYXJyaWVkOyBhbmQgdGhlIEF0aGVuaWFucyB3ZXJlIGhlYXZpbHkgZGVmZWF0ZWQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDE3MDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwMTcwMCI+RGVsaXVtPC9wbGFjZU5hbWU+Ljwvbm90ZT4gaGUgZXhhY3RlZCBhbm90aGVyIHRlbiwgb24gdGhlIGdyb3VuZCB0aGF0IEhpcHBvbmljdXMgaGFkIGFncmVlZCB0byBhZGQgdGhpcyBmdXJ0aGVyIHN1bSBhcyBzb29uIGFzIEFsY2liaWFkZXMgc2hvdWxkIGhhdmUgYSBjaGlsZCBieSBoaXMgZGF1Z2h0ZXIuCjxkYXRlIGF1dGhuYW1lPSItNDI0IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDI0Ij40MjQ8L2RhdGU+IEIuQy4gRGVtb3N0aGVuZXMgYW5kIEhpcHBvY3JhdGVzIHBsYW5uZWQgYSBqb2ludCBpbnZhc2lvbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjY4MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyNjgzIj5Cb2VvdGlhPC9wbGFjZU5hbWU+LiAgVGhlIHNjaGVtZSBtaXNjYXJyaWVkOyBhbmQgdGhlIEF0aGVuaWFucyB3ZXJlIGhlYXZpbHkgZGVmZWF0ZWQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDE3MDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwMTcwMCI+RGVsaXVtPC9wbGFjZU5hbWU+LjwvdHJhbnNsYXRpb24+"
translation['4.Intro.14'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0ic2VjdGlvbiIgLz5UaGVuLCBhZnRlciBvYnRhaW5pbmcgYSBkb3dyeSBzdWNoIGFzIG5vIEdyZWVrIGhhZCBldmVyIG9idGFpbmVkIGJlZm9yZSwgaGUgYmVoYXZlZCBpbiBzbyBwcm9mbGlnYXRlIGEgZmFzaGlvbiwgYnJpbmdpbmcgbWlzdHJlc3Nlcywgc2xhdmUgYW5kIGZyZWUsIGludG8gdGhlIGJyaWRhbCBob3VzZSwgdGhhdCBoZSBkcm92ZSBoaXMgd2lmZSwgd2hvIHdhcyBhIGRlY2VudCB3b21hbiwgdG8gcHJlc2VudCBoZXJzZWxmIGJlZm9yZSB0aGUgQXJjaG9uLCBhcyBzaGUgd2FzIGxlZ2FsbHkgZW50aXRsZWQgdG8gZG8sIGFuZCBkaXZvcmNlIGhpbS4gIEF0IHRoYXQgaGUgZ2F2ZSBjb25zcGljdW91cyBwcm9vZiBvZiBoaXMgcG93ZXIuICBIZSBjYWxsZWQgaW4gaGlzIGZyaWVuZHMsIGFuZCBjYXJyaWVkIG9mZiBoaXMgd2lmZSBmcm9tIHRoZSBBZ29yYSBieSBmb3JjZSwgc2hvd2luZyB0aGUgd2hvbGUgd29ybGQgaGlzIGNvbnRlbXB0IGZvciB0aGUgbWFnaXN0cmF0ZXMsIHRoZSBsYXdzLCBhbmQgaGlzIGZlbGxvdyBBdGhlbmlhbnMgaW4gZ2VuZXJhbC4gIE5vciB3YXMgdGhpcyBvbmUgb3V0cmFnZSBlbm91Z2ggZm9yIGhpbS4gIEhlIHdlbnQgZnVydGhlci4KPC90cmFuc2xhdGlvbj4="
translation['4.Intro.15'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0ic2VjdGlvbiIgLz5JbiBvcmRlciB0byBwb3NzZXNzIGhpbXNlbGYgb2YgSGlwcG9uaWN1cycgZXN0YXRlLCBoZSBwbGFubmVkIHRoZSBhc3Nhc3NpbmF0aW9uIG9mIENhbGxpYXMuICBDYWxsaWFzIGhpbXNlbGYgYWNjdXNlZCBoaW0gb2YgaXQgYmVmb3JlIHlvdSBhbGwgaW4gdGhlIEFzc2VtYmx5LCBhbmQsIGZvciBmZWFyIHRoYXQgaGlzIHdlYWx0aCB3b3VsZCBjb3N0IGhpbSBoaXMgbGlmZSwgbWFkZSBvdmVyIGhpcyBwcm9wZXJ0eSB0byB0aGUgc3RhdGUgaW4gdGhlIGV2ZW50IG9mIGhpcyBkeWluZyB3aXRob3V0IGlzc3VlLiAgSG93ZXZlciwgQ2FsbGlhcyBuZWl0aGVyIGxhY2tzIGZyaWVuZHMgbm9yIGlzIGhlIGFuIGVhc3kgdmljdGltLiAgVGhhbmtzIHRvIGhpcyByaWNoZXMgaGUgY2FuIGJlIHN1cmUgb2YgcHJvdGVjdGlvbiBpbiBwbGVudHkuICBOb25lIHRoZSBsZXNzLCB3aGVuIGEgbWFuIG9mZmVycyB2aW9sZW5jZSB0byBoaXMgb3duIHdpZmUgYW5kIHBsb3RzIHRoZSBkZWF0aCBvZiBoaXMgYnJvdGhlci1pbi1sYXcsIGhvdyBpcyBoZSB0byBiZSBleHBlY3RlZCB0byBiZWhhdmUgdG93YXJkcyBzdWNoIG9mIGhpcyBmZWxsb3ctY2l0aXplbnMgYXMgY3Jvc3MgaGlzIHBhdGg/ICBFdmVyeW9uZSBoYXMgbW9yZSByZWdhcmQgZm9yIG1lbWJlcnMgb2YgaGlzIG93biBmYW1pbHkgdGhhbiBoZSBoYXMgZm9yIHN0cmFuZ2Vycy4KPC90cmFuc2xhdGlvbj4="
translation['4.Intro.16'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IG1vc3QgbW9uc3Ryb3VzIG9mIGFsbCBpcyB0aGUgZmFjdCB0aGF0IGEgbWFuIG9mIGhpcyBjaGFyYWN0ZXIgc2hvdWxkIHRhbGsgYXMgdGhvdWdoIGhlIHdlcmUgYSBmcmllbmQgb2YgdGhlIHBlb3BsZSwgYW5kIGNhbGwgb3RoZXJzIG9saWdhcmNocyBhbmQgZm9lcyBvZiB0aGUgZGVtb2NyYWN5LiAgWWVzLCBhbHRob3VnaCBoZSBoaW1zZWxmIGRlc2VydmVzIGRlYXRoIGZvciBiZWhhdmluZyBhcyBoZSBkb2VzLCBoZSBpcyBjaG9zZW4gYnkgeW91IHRvIHByb2NlZWQgYWdhaW5zdCBhbnkgd2hvc2Ugc3ltcGF0aGllcyBjb25mbGljdCB3aXRoIHlvdXJzIDsgYW5kIGhlIHBvc2VzIGFzIGd1YXJkaWFuIG9mIHRoZSBjb25zdGl0dXRpb24sIGluIHNwaXRlIG9mIHRoZSBmYWN0IHRoYXQgaGUgcmVmdXNlcyB0byBiZSB0aGUgZXF1YWwgb2YsIG9yIGJ1dCBsaXR0bGUgc3VwZXJpb3IgdG8sIGhpcyBmZWxsb3dzLiAgU28gY29tcGxldGVseSwgaW5kZWVkLCBkb2VzIGhlIGRlc3Bpc2UgeW91IHRoYXQgaGUgc3BlbmRzIGhpcyB0aW1lIGZsYXR0ZXJpbmcgeW91IGluIGEgYm9keSBhbmQgaW5zdWx0aW5nIHlvdSBpbmRpdmlkdWFsbHkuCjwvdHJhbnNsYXRpb24+"
translation['4.Intro.17'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0ic2VjdGlvbiIgLz5XaHksIHRoZXJlIGFyZSBubyBsaW1pdHMgdG8gaGlzIGltcHVkZW5jZS4gIEhlIHBlcnN1YWRlZCBBZ2F0aGFyY2h1cywgdGhlIGFydGlzdCwgdG8gYWNjb21wYW55IGhpbSBob21lLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5QbHV0YXJjaCBhbHNvIG1lbnRpb25zIHRoaXMgZXBpc29kZSDvvIg8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbHV0LiBBbGMuIDE2IiB2YWxpZD0ieWVzIj5QbHV0LiBBbGMuIDE2PC9iaWJsPu+8iSBidXQgYWRkcyB0aGF0IEFsY2liaWFkZXMgc2VudCBBZ2F0aGFyY2h1cyBhd2F5IHdpdGggYSByZXdhcmQuPC9ub3RlPiBhbmQgdGhlbiBmb3JjZWQgaGltIHRvIHBhaW50OyBhbmQgd2hlbiBBZ2F0aGFyY2h1cyBhcHBlYWxlZCB0byBoaW0sIHN0YXRpbmcgd2l0aCBwZXJmZWN0IHRydXRoIHRoYXQgaGUgY291bGQgbm90IG9ibGlnZSBoaW0gYXQgdGhlIG1vbWVudCBiZWNhdXNlIGhlIGhhZCBvdGhlciBlbmdhZ2VtZW50cywgQWxjaWJpYWRlcyB0aHJlYXRlbmVkIGhpbSB3aXRoIGltcHJpc29ubWVudCwgdW5sZXNzIGhlIHN0YXJ0ZWQgcGFpbnRpbmcgc3RyYWlnaHQgYXdheS4gIEFuZCBoZSBjYXJyaWVkIG91dCBoaXMgdGhyZWF0LiAgQWdhdGhhcmNodXMgb25seSBtYWRlIGhpcyBlc2NhcGUgdGhyZWUgbW9udGhzIGxhdGVyLCBieSBzbGlwcGluZyBwYXN0IGhpcyBndWFyZHMgYW5kIHJ1bm5pbmcgYXdheSBhcyBoZSBtaWdodCBoYXZlIGRvbmUgZnJvbSB0aGUga2luZyBvZiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbHV0LiBBbGMuIDE2IiB2YWxpZD0ieWVzIj5QbHV0LiBBbGMuIDE2PC9iaWJsPu+8iSBidXQgYWRkcyB0aGF0IEFsY2liaWFkZXMgc2VudCBBZ2F0aGFyY2h1cyBhd2F5IHdpdGggYSByZXdhcmQuPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDAyMzEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMDIzMSI+UGVyc2lhPC9wbGFjZU5hbWU+LiAgQnV0IHNvIHNoYW1lbGVzcyBpcyBBbGNpYmlhZGVzIHRoYXQgaGUgd2VudCB0byBBZ2F0aGFyY2h1cyBhbmQgYWNjdXNlZCBoaW0gb2YgZG9pbmcgaGltIGEgd3Jvbmc7IGluc3RlYWQgb2YgYXBvbG9naXppbmcgZm9yIGhpcyB2aW9sZW5jZSwgaGUgdXR0ZXJlZCB0aHJlYXRzIGFnYWluc3QgaGltIGZvciBsZWF2aW5nIGhpcyB3b3JrIHVuZmluaXNoZWQuICBEZW1vY3JhY3ksIGZyZWVkb20gd2VudCBmb3Igbm90aGluZzogQWdhdGhhcmNodXMgaGFkIGJlZW4gcHV0IGluIGNoYWlucyBleGFjdGx5IGxpa2UgYW55IGFja25vd2xlZGdlZCBzbGF2ZS4KPC90cmFuc2xhdGlvbj4="
translation['4.Intro.18'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0ic2VjdGlvbiIgLz5JdCBtYWtlcyBtZSBhbmdyeSB0byB0aGluayB0aGF0IHdoaWxlIHlvdSB5b3Vyc2VsdmVzIGNhbm5vdCBwbGFjZSBldmVuIG1hbGVmYWN0b3JzIHVuZGVyIGFycmVzdCB3aXRob3V0IHJpc2ssIGJlY2F1c2UgaXQgaXMgZW5hY3RlZCB0aGF0IGFueW9uZSB3aG8gZmFpbHMgdG8gZ2FpbiBvbmUtZmlmdGggb2YgdGhlIHZvdGVzIHNoYWxsIGJlIGxpYWJsZSB0byBhIGZpbmUgb2YgYSB0aG91c2FuZCBkcmFjaG1hZSwgQWxjaWJpYWRlcywgd2hvIGltcHJpc29uZWQgYSBtYW4gZm9yIHNvIGxvbmcgYW5kIGZvcmNlZCBoaW0gdG8gcGFpbnQsIHdlbnQgdW5wdW5pc2hlZOKAlG5heSwgaW5jcmVhc2VkIHRoZXJlYnkgdGhlIGF3ZSBhbmQgdGhlIGZlYXIgaW4gd2hpY2ggaGUgaXMgaGVsZC4gIEluIG91ciB0cmVhdGllcyB3aXRoIG90aGVyIHN0YXRlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Gb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PhvbvOvM6yzr/Ou86xPC9mb3JlaWduPiBzZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQW50aXBoLiA1Ljc4IiB2YWxpZD0ieWVzIj5BbnRpcGguIDUuNzg8L2JpYmw+IG5vdGUgMi48L25vdGU+IHdlIG1ha2UgaXQgYSBjb25kaXRpb24gdGhhdCBubyBmcmVlIG1hbiBzaGFsbCBiZSBpbXByaXNvbmVkIG9yIHBsYWNlZCBpbiBkdXJhbmNlLCBhbmQgYSBoZWF2eSBmaW5lIGlzIHByZXNjcmliZWQgYXMgdGhlIHBlbmFsdHkgZm9yIHNvIGRvaW5nLiBZZXQgd2hlbiBBbGNpYmlhZGVzIGJlaGF2ZWQgYXMgaGUgZGlkLCBubyBvbmUgc291Z2h0IHNhdGlzZmFjdGlvbiwgd2hldGhlciBmb3IgaGltc2VsZiBvciBmb3IgdGhlIHN0YXRlLgo8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg+G9u868zrLOv867zrE8L2ZvcmVpZ24+IHNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbnRpcGguIDUuNzgiIHZhbGlkPSJ5ZXMiPkFudGlwaC4gNS43ODwvYmlibD4gbm90ZSAyLjwvdHJhbnNsYXRpb24+"
translation['4.Intro.19'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0ic2VjdGlvbiIgLz5PYmVkaWVuY2UgdG8gdGhlIG1hZ2lzdHJhdGVzIGFuZCB0aGUgbGF3cyBpcyB0byBteSBtaW5kIHRoZSBvbmUgc2FmZWd1YXJkIG9mIHNvY2lldHk7IGFuZCBhbnlvbmUgd2hvIHNldHMgdGhlbSBhdCBub3VnaHQgaXMgZGVzdHJveWluZyBhdCBvbmUgYmxvdyB0aGUgc3VyZXN0IGd1YXJhbnRlZSBvZiBzZWN1cml0eSB3aGljaCB0aGUgc3RhdGUgcG9zc2Vzc2VzLiAgSXQgaXMgaGFyZCBlbm91Z2ggdG8gYmUgbWFkZSB0byBzdWZmZXIgYnkgdGhvc2Ugd2hvIGhhdmUgbm8gY29uY2VwdGlvbiBvZiByaWdodCBhbmQgd3Jvbmc7IGJ1dCBpdCBpcyBmYXIgbW9yZSBzZXJpb3VzIHdoZW4gYSBtYW4gd2hvIGtub3dzIHdoYXQgdGhlIHB1YmxpYyBpbnRlcmVzdCByZXF1aXJlcywgYWN0cyBpbiBkZWZpYW5jZSBvZiBpdC4gIEhlIHNob3dzIGNsZWFybHksIGFzIEFsY2liaWFkZXMgaGFzIGRvbmUsIHRoYXQgaW5zdGVhZCBvZiBob2xkaW5nIHRoYXQgaGUgb3VnaHQgaGltc2VsZiB0byBjb25mb3JtIHdpdGggdGhlIGxhd3Mgb2YgdGhlIHN0YXRlLCBoZSBleHBlY3RzIHlvdSB0byBjb25mb3JtIHdpdGggaGlzIG93biB3YXkgb2YgbGlmZS4KPC90cmFuc2xhdGlvbj4="
translation['4.Intro.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBhZ2FpbiwgcmVtZW1iZXIgVGF1cmVhczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5DZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRGVtLiAyMS4xNDciIHZhbGlkPSJ5ZXMiPkRlbS4gMjEuMTQ3PC9iaWJsPi48L25vdGU+IHdobyBjb21wZXRlZCBhZ2FpbnN0IEFsY2liaWFkZXMgYXMgQ2hvcmVndXMgb2YgYSBjaG9ydXMgb2YgYm95cy48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJEZW0uIDIxLjE0NyIgdmFsaWQ9InllcyI+RGVtLiAyMS4xNDc8L2JpYmw+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Gb3IgdGhlIGR1dGllcyBvZiBzdWNoIGEgQ2hvcmVndXMgc2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFudGlwaC4gNi4xMSIgdmFsaWQ9InllcyI+QW50aXBoLiA2LjExLTEzPC9iaWJsPi4gIENob3J1c2VzIG9mIGJveXMgc2VsZWN0ZWQgZnJvbSBlYWNoIG9mIHRoZSB0ZW4gdHJpYmVzIGNvbXBldGVkIGFnYWluc3Qgb25lIGFub3RoZXIgYXQgYWxsIHRoZSBtYWpvciBmZXN0aXZhbHMgb2YgdGhlIEF0dGljIHllYXIuPC9ub3RlPiBUaGUgbGF3IGFsbG93cyB0aGUgZWplY3Rpb24gb2YgYW55IG1lbWJlciB3aGF0c29ldmVyIG9mIGEgY29tcGV0aW5nIGNob3J1cyB3aG8gaXMgbm90IG9mIEF0aGVuaWFuIGJpcnRoLCBhbmQgaXQgaXMgZm9yYmlkZGVuIHRvIHJlc2lzdCBhbnkgYXR0ZW1wdCBhdCBzdWNoIGVqZWN0aW9uLiAgWWV0IGluIHlvdXIgcHJlc2VuY2UsIGluIHRoZSBwcmVzZW5jZSBvZiB0aGUgb3RoZXIgR3JlZWtzIHdobyB3ZXJlIGxvb2tpbmcgb24sIGFuZCBiZWZvcmUgYWxsIHRoZSBtYWdpc3RyYXRlcyBpbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbnRpcGguIDYuMTEiIHZhbGlkPSJ5ZXMiPkFudGlwaC4gNi4xMS0xMzwvYmlibD4uICBDaG9ydXNlcyBvZiBib3lzIHNlbGVjdGVkIGZyb20gZWFjaCBvZiB0aGUgdGVuIHRyaWJlcyBjb21wZXRlZCBhZ2FpbnN0IG9uZSBhbm90aGVyIGF0IGFsbCB0aGUgbWFqb3IgZmVzdGl2YWxzIG9mIHRoZSBBdHRpYyB5ZWFyLjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgQWxjaWJpYWRlcyBkcm92ZSBvZmYgVGF1cmVhcyB3aXRoIGhpcyBmaXN0cy48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+VGhlIHNwZWFrZXIgaXMgbm90IHZlcnkgY2xlYXIuICBBcHBhcmVudGx5IFRhdXJlYXMgYXR0ZW1wdGVkIHRvIHNlY3VyZSB0aGUgZWplY3Rpb24gb2YgYSBtZW1iZXIgb2YgQWxjaWJpYWRlcycgY2hvcnVzLCBidXQgbWV0IHdpdGggdmlvbGVudCByZXNpc3RhbmNlIGZyb20gQWxjaWJpYWRlcyBoaW1zZWxmLiAgQ2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkRlbS4gMjEuMTQ3IiB2YWxpZD0ieWVzIj5EZW0uIDIxLjE0NzwvYmlibD4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zqTOsc+Fz4HhvbPOsc69IOG8kM+A4b2xz4TOsc6+zrUgz4fOv8+BzrfOs86/4b+mzr3PhOKAmSDhvJDPgOG9tiDOuuG9uc+Bz4HOt8+CPC9mb3JlaWduPjwvbm90ZT4gVGhlIHNwZWN0YXRvcnMgc2hvd2VkIHRoZWlyIHN5bXBhdGh5IHdpdGggVGF1cmVhcyBhbmQgdGhlaXIgaGF0cmVkIG9mIEFsY2liaWFkZXMgYnkgYXBwbGF1ZGluZyB0aGUgb25lIGNob3J1cyBhbmQgcmVmdXNpbmcgdG8gbGlzdGVuIHRvIHRoZSBvdGhlciBhdCBhbGwuICBZZXQgVGF1cmVhcyB3YXMgbm9uZSB0aGUgYmV0dGVyIG9mZiBmb3IgdGhhdC4KPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRGVtLiAyMS4xNDciIHZhbGlkPSJ5ZXMiPkRlbS4gMjEuMTQ3PC9iaWJsPiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OpM6xz4XPgeG9s86xzr0g4byQz4DhvbHPhM6xzr7OtSDPh86/z4HOt86zzr/hv6bOvc+E4oCZIOG8kM+A4b22IM664b25z4HPgc63z4I8L2ZvcmVpZ24+PC90cmFuc2xhdGlvbj4="
translation['4.Intro.21'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0ic2VjdGlvbiIgLz5QYXJ0bHkgZnJvbSBmZWFyLCBwYXJ0bHkgZnJvbSBzdWJzZXJ2aWVuY2UsIHRoZSBqdWRnZXMgcHJvbm91bmNlZCBBbGNpYmlhZGVzIHRoZSB2aWN0b3IsIHRyZWF0aW5nIGhpbSBhcyBtb3JlIGltcG9ydGFudCB0aGFuIHRoZWlyIG9hdGguICBBbmQgaXQgc2VlbXMgdG8gbWUgb25seSBuYXR1cmFsIHRoYXQgdGhlIGp1ZGdlcyBzaG91bGQgdGh1cyBzZWVrIGZhdm91ciB3aXRoIEFsY2liaWFkZXMsIHdoZW4gdGhleSBjb3VsZCBzZWUgdGhhdCBUYXVyZWFzLCB3aG8gaGFkIHNwZW50IHNvIHZhc3QgYSBzdW0sIHdhcyBiZWluZyBzdWJqZWN0ZWQgdG8gaW5zdWx0cywgd2hpbGUgaGlzIHJpdmFsLCB3aG8gc2hvd2VkIHN1Y2ggY29udGVtcHQgZm9yIHRoZSBsYXcsIHdhcyBhbGwtcG93ZXJmdWwuICBUaGUgYmxhbWUgbGllcyB3aXRoIHlvdS4gIFlvdSByZWZ1c2UgdG8gcHVuaXNoIGluc29sZW5jZTsgYW5kIHdoaWxlIHlvdSBjaGFzdGlzZSBzZWNyZXQgd3Jvbmdkb2luZywgeW91IGFkbWlyZSBvcGVuIGVmZnJvbnRlcnkuCjwvdHJhbnNsYXRpb24+"
translation['4.Intro.22'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0ic2VjdGlvbiIgLz5UaGF0IGlzIHdoeSB0aGUgeW91bmcgc3BlbmQgdGhlaXIgZGF5cyBpbiB0aGUgY291cnRzIGluc3RlYWQgb2YgaW4gdGhlIGd5bW5hc2lhOyB0aGF0IGlzIHdoeSBvdXIgb2xkIG1lbiBmaWdodCBvdXIgYmF0dGxlcywgd2hpbGUgb3VyIHlvdW5nIG1lbiBtYWtlIHNwZWVjaGVz4oCUIHRoZXkgdGFrZSBBbGNpYmlhZGVzIGFzIHRoZWlyIG1vZGVsLCBBbGNpYmlhZGVzIHdobyBjYXJyaWVzIGhpcyB2aWxsYWlueSB0byBzdWNoIHVuaGVhcmQtb2YgbGVuZ3RocyB0aGF0LCBhZnRlciByZWNvbW1lbmRpbmcgdGhhdCB0aGUgcGVvcGxlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEwOTIyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTA5MjIiPk1lbG9zPC9wbGFjZU5hbWU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPkluIDxkYXRlIGF1dGhuYW1lPSItNDI1IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDI1Ij40MjU8L2RhdGU+IEIuQy4gTWVsb3MgcmVmdXNlZCB0byBwYXkgdGhlIGluY3JlYXNlZCB0cmlidXRlIGRlbWFuZGVkIG9mIGhlciwgYW5kIGR1cmluZyB0aGUgeWVhcnMgd2hpY2ggZm9sbG93ZWQgZGlzcGxheWVkIGEgZ2VuZXJhbCBkZWZpYW5jZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4uICA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gZmluYWxseSBhY3RlZCBpbiB0aGUgc3VtbWVyIG9mIDQxNi4gIEEgZmxlZXQgYXR0YWNrZWQgdGhlIGlzbGFuZCwgdGhlIG1hbGUgcG9wdWxhdGlvbiB3YXMgbWFzc2FjcmVkLCBhbmQgdGhlIHdvbWVuIGFuZCBjaGlsZHJlbiBzb2xkIGFzIHNsYXZlcy4gIFNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJUaHVjLiA1LjEiIHZhbGlkPSJ5ZXMiPlRodWMuIDU8L2JpYmw+Ljwvbm90ZT4gYmUgc29sZCBpbnRvIHNsYXZlcnksIGhlIHB1cmNoYXNlZCBhIHdvbWFuIGZyb20gYW1vbmcgdGhlIHByaXNvbmVycyBhbmQgaGFzIHNpbmNlIGhhZCBhIHNvbiBieSBoZXIsIGEgY2hpbGQgd2hvc2UgYmlydGggd2FzIG1vcmUgdW5uYXR1cmFsIHRoYW4gdGhhdCBvZiBBZWdpc+KAlHRodXMsPGRhdGUgYXV0aG5hbWU9Ii00MjUiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00MjUiPjQyNTwvZGF0ZT4gQi5DLiBNZWxvcyByZWZ1c2VkIHRvIHBheSB0aGUgaW5jcmVhc2VkIHRyaWJ1dGUgZGVtYW5kZWQgb2YgaGVyLCBhbmQgZHVyaW5nIHRoZSB5ZWFycyB3aGljaCBmb2xsb3dlZCBkaXNwbGF5ZWQgYSBnZW5lcmFsIGRlZmlhbmNlIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPi4gIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBmaW5hbGx5IGFjdGVkIGluIHRoZSBzdW1tZXIgb2YgNDE2LiAgQSBmbGVldCBhdHRhY2tlZCB0aGUgaXNsYW5kLCB0aGUgbWFsZSBwb3B1bGF0aW9uIHdhcyBtYXNzYWNyZWQsIGFuZCB0aGUgd29tZW4gYW5kIGNoaWxkcmVuIHNvbGQgYXMgc2xhdmVzLiAgU2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlRodWMuIDUuMSIgdmFsaWQ9InllcyI+VGh1Yy4gNTwvYmlibD4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNvbiBvZiBUaHllc3RlcyBieSBoaXMgb3duIGRhdWdodGVyLCBQZWxvcGVpYS4gIEhlIHdhcyBleHBvc2VkIGFzIGEgY2hpbGQsIGJ1dCBzYXZlZCBieSBzaGVwaGVyZHMuICBIaXMgdW5jbGUsIEF0cmV1cywgdGhlbiBicm91Z2h0IGhpbSB1cCBhcyBoaXMgb3duIHNvbi4gIExhdGVyIGhlIG11cmRlcmVkIEF0cmV1cyBhbmQgcGxhY2VkIFRoeWVzdGVzIG9uIGhpcyB0aHJvbmUuPC9ub3RlPiBzaW5jZSBoZSBpcyBzcHJ1bmcgZnJvbSBwYXJlbnRzIHdobyBhcmUgZWFjaCBvdGhlcidzIGRlYWRsaWVzdCBlbmVtaWVzLCBhbmQgb2YgaGlzIG5lYXJlc3Qga2luIHRoZSBvbmUgaGFzIGNvbW1pdHRlZCBhbmQgdGhlIG90aGVyIGhhcyBzdWZmZXJlZCB0aGUgbW9zdCB0ZXJyaWJsZSBvZiB3cm9uZ3MuCjwvdHJhbnNsYXRpb24+"
translation['4.Intro.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0ic2VjdGlvbiIgLz5JbmRlZWQgaXQgd291bGQgYmUgd2VsbCB0byBtYWtlIHN1Y2ggc2hhbWVsZXNzbmVzcyBzdGlsbCBwbGFpbmVyLiAgSGUgZ290IGhpbXNlbGYgYSBjaGlsZCBieSB0aGUgdmVyeSB3b21hbiB3aG9tIGhlIGhhZCB0dXJuZWQgZnJvbSBhIGZyZWUgY2l0aXplbiBpbnRvIGEgc2xhdmUsIHdob3NlIGZhdGhlciBhbmQga2luc2ZvbGsgaGUgaGFkIHB1dCB0byBkZWF0aCBhbmQgd2hvc2UgY2l0eSBoZSBoYWQgbWFkZSBhIHdhc3RlLCB0aGF0IGhlIG1pZ2h0IHRoZXJlYnkgbWFrZSBoaXMgc29uIHRoZSBkZWFkbHkgZW5lbXkgb2YgaGltc2VsZiBhbmQgb2YgdGhpcyBjaXR5OyBzbyBpbmV2aXRhYmx5IGlzIHRoZSBib3kgZHJpdmVuIHRvIGhhdGUgYm90aC4gIFdoZW4geW91IGFyZSBzaG93biB0aGluZ3Mgb2YgdGhpcyBraW5kIG9uIHRoZSB0cmFnaWMgc3RhZ2UsIHlvdSByZWdhcmQgdGhlbSB3aXRoIGhvcnJvcjsgYnV0IHdoZW4geW91IHNlZSB0aGVtIHRha2luZyBwbGFjZSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHlvdSByZW1haW4gdW5tb3ZlZOKAlGFuZCB5ZXQgeW91IGFyZSB1bmNlcnRhaW4gd2hldGhlciB0aGUgdGFsZXMgb2YgdHJhZ2VkeSBhcmUgZm91bmRlZCBvbiB0aGUgdHJ1dGggb3Igc3ByaW5nIG1lcmVseSBmcm9tIHRoZSBpbWFnaW5hdGlvbiBvZiB0aGUgcG9ldHM7IHdoZXJlYXMgeW91IHdlbGwga25vdyB0aGF0IHRoZXNlIG90aGVyIGxhd2xlc3Mgb3V0cmFnZXMsIHdoaWNoIHlvdSBhY2NlcHQgd2l0aCBpbmRpZmZlcmVuY2UsIGhhdmUgb2NjdXJyZWQgaW4gZmFjdC4KPC90cmFuc2xhdGlvbj4="
translation['4.Intro.24'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gYWRkaXRpb24gdG8gYWxsIHRoaXMsIHNvbWUgZGFyZSB0byBzYXkgdGhhdCB0aGUgbGlrZSBvZiBBbGNpYmlhZGVzIGhhcyBuZXZlciBiZWVuIGJlZm9yZS4gIEZvciBteSBwYXJ0LCBJIGJlbGlldmUgdGhhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gd2lsbCBtZWV0IHdpdGggdGVycmlibGUgY2FsYW1pdGllcyBhdCBoaXMgaGFuZHMsIHRoYXQgaGUgd2lsbCBiZSBkZWVtZWQgcmVzcG9uc2libGUgaGVyZWFmdGVyIGZvciBkaXNhc3RlcnMgc28gYXdmdWwgdGhhdCBubyBvbmUgd2lsbCByZW1lbWJlciBoaXMgcGFzdCBtaXNkZWVkczsgZm9yIGl0IGlzIG9ubHkgdG8gYmUgZXhwZWN0ZWQgdGhhdCBvbmUgd2hvIGhhcyBiZWd1biBoaXMgbGlmZSBpbiBzdWNoIGEgZmFzaGlvbiB3aWxsIG1ha2UgaXRzIGNsb3NlIG5vIGxlc3MgcG9ydGVudG91cy4gTWVuIG9mIHNlbnNlIHNob3VsZCBiZXdhcmUgb2YgdGhvc2Ugb2YgdGhlaXIgZmVsbG93cyB3aG8gZ3JvdyB0b28gZ3JlYXQsIHJlbWVtYmVyaW5nIHRoYXQgaXQgaXMgc3VjaCBhcyB0aGV5IHdobyBzZXQgdXAgdHlyYW5uaWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.25'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSBpbWFnaW5lIHRoYXQgQWxjaWJpYWRlcyB3aWxsIG1ha2Ugbm8gcmVwbHkgdG8gdGhpcywgYnV0IHdpbGwgdGFsayBpbnN0ZWFkIG9mIGhpcyB2aWN0b3J5IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsT2x5bXBpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsT2x5bXBpYSI+T2x5bXBpYTwvcGxhY2VOYW1lPiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+Q2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsdXQuIEFsYy4gMTMiIHZhbGlkPSJ5ZXMiPlBsdXQuIEFsYy4gMTM8L2JpYmw+IGZmLjwvbm90ZT4gYW5kIHRoYXQgaGUgd2lsbCBzZWVrIHRvIGRlZmVuZCBoaW1zZWxmIG9uIGFueSBncm91bmRzIHJhdGhlciB0aGFuIHRob3NlIG9uIHdoaWNoIGhlIGhhcyBiZWVuIGNoYXJnZWQuICBCdXQgSSB3aWxsIHVzZSB0aGUgdmVyeSBmYWN0cyB1cG9uIHdoaWNoIGhlIHJlbGllcyB0byBwcm92ZSB0aGF0IGhlIGRlc2VydmVzIGRlYXRoIHJhdGhlciB0aGFuIGFjcXVpdHRhbC4gIExldCBtZSBleHBsYWluLgo8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbHV0LiBBbGMuIDEzIiB2YWxpZD0ieWVzIj5QbHV0LiBBbGMuIDEzPC9iaWJsPiBmZi48L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RGlvbWVkZXMgdG9vayBhIGNoYXJpb3QtdGVhbSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE9seW1waWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE9seW1waWEiPk9seW1waWE8L3BsYWNlTmFtZT4uICBIZSB3YXMgYSBtYW4gb2YgbW9kZXJhdGUgbWVhbnMsIGJ1dCBkZXNpcmVkIHRvIHdpbiBhIGdhcmxhbmQgZm9yIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBhbmQgZm9yIGhpcyBmYW1pbHkgd2l0aCBzdWNoIHJlc291cmNlcyBhcyBoZSBoYWQsIHNpbmNlIGhlIGhlbGQgdGhhdCB0aGUgY2hhcmlvdC1yYWNlcyB3ZXJlIGZvciB0aGUgbW9zdCBwYXJ0IGRlY2lkZWQgYnkgY2hhbmNlLiAgRGlvbWVkZXMgd2FzIG5vIGNhc3VhbCBjb21wZXRpdG9yLCBidXQgYSBjaXRpemVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+T3IgcG9zc2libHk6IOKAnERpb21lZGVzIHdhcyBhIGNpdGl6ZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGFuZCBhIHBlcnNvbiBvZiBzb21lIGRpc3RpbmN0aW9uLuKAnTwvbm90ZT4gWWV0IHRoYW5rcyB0byBoaXMgaW5mbHVlbmNlIHdpdGggdGhlIE1hc3RlcnMgb2YgdGhlIEdhbWVzPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGFuZCBhIHBlcnNvbiBvZiBzb21lIGRpc3RpbmN0aW9uLuKAnTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Qcm9wZXJseSBrbm93biBhcyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJnOu867zrHOvc6/zrThvbfOus6xzrk8L2ZvcmVpZ24+LiBJbiB0aGUgdGltZSBvZiBQYXVzYW5pYXMgdGhleSBudW1iZXJlZCBlaWdodC4gIFRoZXkgd2VyZSBhcHBvaW50ZWQgYnkgbG90IGZyb20gdGhlIHdob2xlIGJvZHkgb2YgRWxlYW5zIGFuZCBoYWQgdGhlIGdlbmVyYWwgc3VwZXJpbnRlbmRlbmNlIG9mIHRoZSBHYW1lcy48L25vdGU+IGF0IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8mc67zrvOsc69zr/OtOG9t866zrHOuTwvZm9yZWlnbj4uIEluIHRoZSB0aW1lIG9mIFBhdXNhbmlhcyB0aGV5IG51bWJlcmVkIGVpZ2h0LiAgVGhleSB3ZXJlIGFwcG9pbnRlZCBieSBsb3QgZnJvbSB0aGUgd2hvbGUgYm9keSBvZiBFbGVhbnMgYW5kIGhhZCB0aGUgZ2VuZXJhbCBzdXBlcmludGVuZGVuY2Ugb2YgdGhlIEdhbWVzLjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRWxpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRWxpcyI+RWxpczwvcGxhY2VOYW1lPiwgQWxjaWJpYWRlcyBkZXByaXZlZCBoaW0gb2YgaGlzIHRlYW0gYW5kIGNvbXBldGVkIHdpdGggaXQgaGltc2VsZi4gIFdoYXQgd291bGQgaGUgaGF2ZSBkb25lLCBtYXkgd2UgYXNrLCBoYWQgb25lIG9mIHlvdXIgYWxsaWVzIGFycml2ZWQgd2l0aCBhIHRlYW0/CjwvdHJhbnNsYXRpb24+"
translation['4.Intro.27'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0ic2VjdGlvbiIgLz5JIGltYWdpbmUgaGUgd291bGQgaGF2ZSBiZWVuIGFsbCBlYWdlcm5lc3MgdG8gbGV0IGhpbSBjb21wZXRlIGFnYWluc3QgaGltc2VsZiwgY29uc2lkZXJpbmcgdGhhdCBoZSBoYWQgZm9yY2libHkgb3VzdGVkIGFuIEF0aGVuaWFuIHJpdmFsIGFuZCB0aGVuIGhhZCB0aGUgaW1wdWRlbmNlIHRvIGNvbnRlc3QgdGhlIHJhY2Ugd2l0aCBhbm90aGVyIG1hbidzIGhvcnNlc+KAlGFmdGVyIGhlIGhhZCwgaW4gZmFjdCwgd2FybmVkIHRoZSBHcmVla3MgaW4gZ2VuZXJhbCB0aGF0IHRoZXkgbXVzdCBub3QgYmUgc3VycHJpc2VkIGF0IGhpcyBvZmZlcmluZyB2aW9sZW5jZSB0byBhbnkgb2YgdGhlbSwgc2VlaW5nIHRoYXQgaGUgZG9lcyBub3QgdHJlYXQgaGlzIG93biBmZWxsb3cgQXRoZW5pYW5zIGFzIGhpcyBlcXVhbHMsIGJ1dCByb2JzIHRoZW0sIHN0cmlrZXMgdGhlbSwgdGhyb3dzIHRoZW0gaW50byBwcmlzb24sIGFuZCBleHRvcnRzIG1vbmV5IGZyb20gdGhlbSwgeWVzLCBzaG93cyB0aGUgZGVtb2NyYWN5IHRvIGJlIG5vdGhpbmcgYmV0dGVyIHRoYW4gYSBzaGFtLCBieSB0YWxraW5nIGxpa2UgYSBjaGFtcGlvbiBvZiB0aGUgcGVvcGxlIGFuZCBhY3RpbmcgbGlrZSBhIHR5cmFudCwgc2luY2UgaGUgaGFzIGZvdW5kIG91dCB0aGF0IHdoaWxlIHRoZSB3b3JkIOKAnHR5cmFubnnigJ0gZmlsbHMgeW91IHdpdGggY29uY2VybiwgdGhlIHRoaW5nIGZvciB3aGljaCBsZWF2ZXMgeW91IHVuZGlzdHVyYmVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.28'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0ic2VjdGlvbiIgLz5JbmRlZWQsIHNvIGRpZmZlcmVudCBpcyBoZSBmcm9tIHRoZSBTcGFydGFucyB0aGF0IHdoZXJlYXMgdGhlIFNwYXJ0YW5zIGFjY2VwdCBkZWZlYXQgZXZlbiBhdCB0aGUgaGFuZHMgb2YgdGhlaXIgYWxsaWVzLCB3aGVuIHRoZXkgY29tcGV0ZSBhZ2FpbnN0IHRoZW0sIEFsY2liaWFkZXMgd2lsbCBub3QgZW5kdXJlIGl0IGV2ZW4gYXQgdGhlIGhhbmRzIG9mIGhpcyBmZWxsb3ctY2l0aXplbnM7IGluIGZhY3QsIGhlIGhhcyBvcGVubHkgc3RhdGVkIHRoYXQgaGUgd2lsbCBicm9vayBubyByaXZhbHMuICBJdCBpcyBpbmV2aXRhYmxlIHRoYXQgc3VjaCBiZWhhdmlvdXIgc2hvdWxkIGNhdXNlIHRoZSBzdGF0ZXMgd2l0aGluIG91ciBjb25mZWRlcmFjeSB0byBmZWVsIHN5bXBhdGh5IGZvciBvdXIgZW5lbWllcyBhbmQgbG9hdGhpbmcgZm9yIHVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.29'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SW4gb3JkZXIgdG8gbWFrZSBpdCBjbGVhciwgaG93ZXZlciwgdGhhdCBoZSB3YXMgaW5zdWx0aW5nIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBhcyBhIHdob2xlIGluIGFkZGl0aW9uIHRvIERpb21lZGVzLCBoZSBhc2tlZCB0aGUgbGVhZGVycyBvZiB0aGUgQXRoZW5pYW4gZGVwdXRhdGlvbiB0byBsZW5kIGhpbSB0aGUgcHJvY2Vzc2lvbmFsIHZlc3NlbHMsIGFsbGVnaW5nIHRoYXQgaGUgaW50ZW5kZWQgdG8gdXNlIHRoZW0gZm9yIGEgY2VsZWJyYXRpb24gb2YgaGlzIHZpY3Rvcnkgb24gdGhlIGRheSBiZWZvcmUgdGhlIHNhY3JpZmljZTsgaGUgdGhlbiBhYnVzZWQgdGhlIHRydXN0IHBsYWNlZCBpbiBoaW0gYW5kIHJlZnVzZWQgdG8gcmV0dXJuIHRoZW0sIGFzIGhlIHdhbnRlZCB0byB1c2UgdGhlIGdvbGRlbiBiYXNpbnMgYW5kIGNlbnNlcnMgbmV4dCBkYXkgYmVmb3JlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBkaWQgc28uICBOYXR1cmFsbHksIHdoZW4gdGhvc2Ugc3RyYW5nZXJzIHdobyBkaWQgbm90IGtub3cgdGhhdCB0aGV5IGJlbG9uZ2VkIHRvIHVzIHNhdyB0aGUgc3RhdGUtcHJvY2Vzc2lvbiB0YWtpbmcgcGxhY2UgYWZ0ZXIgdGhhdCBvZiBBbGNpYmlhZGVzLCB0aGV5IGltYWdpbmVkIHRoYXQgd2Ugd2VyZSB1c2luZyBoaXMgdmVzc2Vsczogd2hpbGUgdGhvc2Ugd2hvIGhhZCBlaXRoZXIgaGVhcmQgdGhlIHRydXRoIGZyb20gdGhlIEF0aGVuaWFucyBwcmVzZW50IG9yIGVsc2Uga25ldyB0aGUgd2F5cyBvZiBBbGNpYmlhZGVzLCBsYXVnaGVkIGF0IHVzIHdoZW4gdGhleSBzYXcgb25lIG1hbiBzaG93aW5nIGhpbXNlbGYgc3VwZXJpb3IgdG8gb3VyIGVudGlyZSBjb21tdW5pdHkuCiAgICAgIDwvdHJhbnNsYXRpb24+"
translation['4.Intro.30'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBhZ2FpbiwgbG9vayBhdCB0aGUgYXJyYW5nZW1lbnRzIHdoaWNoIGhlIG1hZGUgZm9yIGhpcyBzdGF5IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsT2x5bXBpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsT2x5bXBpYSI+T2x5bXBpYTwvcGxhY2VOYW1lPiBhcyBhIHdob2xlLiAgRm9yIEFsY2liaWFkZXMgdGhlIHBlb3BsZSBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEVwaGVzb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEVwaGVzb3MiPkVwaGVzdXM8L3BsYWNlTmFtZT4gZXJlY3RlZCBhIFBlcnNpYW4gcGF2aWxpb24gdHdpY2UgYXMgbGFyZ2UgYXMgdGhhdCBvZiBvdXIgb2ZmaWNpYWwgZGVwdXRhdGlvbjogPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDaGlvcyBDaXR5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDaGlvcyBDaXR5Ij5DaGlvczwvcGxhY2VOYW1lPiBmdXJuaXNoZWQgaGltIHdpdGggYmVhc3RzIGZvciBzYWNyaWZpY2UgYW5kIHdpdGggZm9kZGVyIGZvciBoaXMgaG9yc2VzOiB3aGlsZSBoZSByZXF1aXNpdGlvbmVkIHdpbmUgYW5kIGV2ZXJ5dGhpbmcgZWxzZSBuZWNlc3NhcnkgZm9yIGhpcyBtYWludGVuYW5jZSBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjcyIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2NzIiPkxlc2JvczwvcGxhY2VOYW1lPi4gIEFuZCBzbyBsdWNreSBpcyBoZSB0aGF0IGFsdGhvdWdoIHRoZSBHcmVlayBwZW9wbGUgYXQgbGFyZ2UgY2FuIHRlc3RpZnkgdG8gaGlzIGxhd2xlc3NuZXNzIGFuZCBjb3JydXB0aW9uLCBoZSBoYXMgZ29uZSB1bnB1bmlzaGVkLiAgV2hpbGUgdGhvc2Ugd2hvIGhvbGQgb2ZmaWNlIHdpdGhpbiBhIHNpbmdsZSBjaXR5IGhhdmUgdG8gcmVuZGVyIGFjY291bnQgb2YgdGhhdCBvZmZpY2UsCjwvdHJhbnNsYXRpb24+"
translation['4.Intro.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0ic2VjdGlvbiIgLz5BbGNpYmlhZGVzLCB3aG9zZSBhdXRob3JpdHkgZXh0ZW5kcyBvdmVyIGFsbCBvdXIgYWxsaWVzIGFuZCB3aG8gcmVjZWl2ZXMgbW9uaWVzIGZyb20gdGhlbSwgaXMgbm90IGxpYWJsZSB0byBhbnN3ZXIgZm9yIGFueSBvZiBoaXMgcHVibGljIGFjdHM7IG9uIHRoZSBjb250cmFyeSwgYWZ0ZXIgYmVoYXZpbmcgYXMgSSBoYXZlIGRlc2NyaWJlZCwgaGUgd2FzIHJld2FyZGVkIHdpdGggZnJlZSBlbnRlcnRhaW5tZW50IGluIHRoZSBQcnl0YW5ldW08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PhvbfPhM63z4POuc+CIOG8kM69IM6gz4HPhc+EzrHOvc614b234b+zPC9mb3JlaWduPiB3YXMgdGhlIHVzdWFsIHJld2FyZCBmb3IgYSB2aWN0b3J5IGF0IHRoZSBnYW1lcyBvciBzaWduYWwgc2VydmljZSB0byB0aGUgc3RhdGUuIFRoZSBzYW1lIHByaXZpbGVnZSB3YXMgZ3JhbnRlZCBEaW9jbGVpZGVzIGluIDQxNSwgYWZ0ZXIgaGlzIGluZm9ybWF0aW9uIGluIHRoZSBtYXR0ZXIgb2YgdGhlIEhlcm1hZS4gIENmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbmRvYy4gMS40NSIgdmFsaWQ9InllcyI+QW5kb2MuIDEuNDU8L2JpYmw+Ljwvbm90ZT47IGFuZCBub3QgY29udGVudCB3aXRoIHRoYXQsIGhlIGlzIGZvciBldmVyIHRha2luZyBjcmVkaXQgZm9yIGhpcyB2aWN0b3J5LCBhcyB0aG91Z2ggaGUgaGFkIG5vdCBzbyBtdWNoIGJyb3VnaHQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PhvbfPhM63z4POuc+CIOG8kM69IM6gz4HPhc+EzrHOvc614b234b+zPC9mb3JlaWduPiB3YXMgdGhlIHVzdWFsIHJld2FyZCBmb3IgYSB2aWN0b3J5IGF0IHRoZSBnYW1lcyBvciBzaWduYWwgc2VydmljZSB0byB0aGUgc3RhdGUuIFRoZSBzYW1lIHByaXZpbGVnZSB3YXMgZ3JhbnRlZCBEaW9jbGVpZGVzIGluIDQxNSwgYWZ0ZXIgaGlzIGluZm9ybWF0aW9uIGluIHRoZSBtYXR0ZXIgb2YgdGhlIEhlcm1hZS4gIENmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBbmRvYy4gMS40NSIgdmFsaWQ9InllcyI+QW5kb2MuIDEuNDU8L2JpYmw+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBpbnRvIGRpc2dyYWNlIGFzIHdvbiBoZXIgYSBnYXJsYW5kIG9mIGhvbm91ci4gIE9ubHkgcmVmbGVjdCwgYW5kIHlvdSB3aWxsIGZpbmQgdGhhdCBtZW4gd2hvIGhhdmUgZ2l2ZW4gd2F5IGV2ZW4gdGVtcG9yYXJpbHkgdG8gYW55IHNpbmdsZSBvbmUgb2YgdGhlIGV4Y2Vzc2VzIGluIHdoaWNoIEFsY2liaWFkZXMgaGFzIGluZHVsZ2VkIHRpbWUgYW5kIGFnYWluLCBoYXZlIGJyb3VnaHQgcnVpbiB1cG9uIHRoZWlyIGhvdXNlczsgeWV0IEFsY2liaWFkZXMsIHdob3NlIGVudGlyZSBsaWZlIGlzIGRldm90ZWQgdG8gZXh0cmF2YWdhbmNlLCBoYXMgZG91YmxlZCBoaXMgd2VhbHRoLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.32'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0ic2VjdGlvbiIgLz5Zb3UgcmVnYXJkIGFzIG1pc2VycyB0aG9zZSB3aG8gYXJlIG5pZ2dhcmRseSBhbmQgY2xvc2UtZmlzdGVkOyBidXQgeW91IGFyZSBtaXN0YWtlbi4gIEl0IGlzIHRoZSBzcGVuZHRocmlmdCwgd2l0aCBoaXMgZW5kbGVzcyB3YW50cywgd2hvIHN0b29wcyBsb3dlc3QgdG8gZmlsbCBoaXMgcG9ja2V0cy4gIEluIGZhY3QsIGl0IHdpbGwgYmUgYSBwdWJsaWMgZGlzZ3JhY2UsIGlmIHlvdSBzaG93IHRvbGVyYW5jZSB0b3dhcmRzIGEgbWFuIHdobyBoYXMgYWNoaWV2ZWQgaGlzIHN1Y2Nlc3Mgb25seSB3aXRoIHRoZSBoZWxwIG9mIHlvdXIgbW9uZXksIHdoZW4gaW4gb3N0cmFjaXppbmcgQ2FsbGlhcywgc29uIG9mIERpZHltaXVzLCB3aG8gd29uIHZpY3RvcmllcyBhdCBhbGwgdGhlIGdyZWF0IGdhbWVzIGJ5IGhpcyBwZXJzb25hbCBwcm93ZXNzLCB5b3UgdG9vayBubyBhY2NvdW50IHdoYXRzb2V2ZXIgb2YgaGlzIGFjaGlldmVtZW50LCBhbHRob3VnaCBpdCB3YXMgYnkgaGlzIG93biBlZmZvcnRzIHRoYXQgaGUgYnJvdWdodCBnbG9yeSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4uCjwvdHJhbnNsYXRpb24+"
translation['4.Intro.33'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlbiBhZ2FpbiwgcmVtZW1iZXIgaG93IHN0ZWFkZmFzdCwgaG93IHRydWUgdG8gdGhlaXIgcHJpbmNpcGxlcyB5b3VyIGZhdGhlcnMgc2hvd2VkIHRoZW1zZWx2ZXMsIHdoZW4gdGhleSBvc3RyYWNpemVkIENpbW9uIGZvciBicmVha2luZyB0aGUgbGF3IGJ5IHRha2luZyBoaXMgb3duIHNpc3RlciB0byB3aWZlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBzdG9yeSBpcyBtZW50aW9uZWQgYnkgUGx1dGFyY2gg77yIPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGx1dC4gQ2ltLiAxNSIgdmFsaWQ9InllcyI+UGx1dC4gQ2ltLiAxNTwvYmlibD7vvIksIHdobywgaG93ZXZlciwgZ2l2ZXMgdGhlIGNvcnJlY3QgcmVhc29uIGZvciBDLidzIG9zdHJhY2lzbeKAlHRoZSBmYWlsdXJlIG9mIGhpcyBwcm8tU3BhcnRhbiBwb2xpY3kuICBIZSB3YXMgb3N0cmFjaXplZCBhbG1vc3QgaW1tZWRpYXRlbHkgYWZ0ZXIgaGlzIHJldHVybiBpbiBkaXNncmFjZSBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsSXRob21lIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxJdGhvbWUiPkl0aG9tZTwvcGxhY2VOYW1lPiBpbiA0NjEuPC9ub3RlPjsgYW5kIHlldCBub3Qgb25seSB3YXMgQ2ltb24gaGltc2VsZiBhbiBPbHltcGljIHZpY3RvcjsgaGlzIGZhdGhlciwgTWlsdGlhZGVzLCBoYWQgYmVlbiBvbmUgbGlrZXdpc2UuICBOZXZlcnRoZWxlc3MsIHRoZXkgdG9vayBubyBhY2NvdW50IG9mIGhpcyB2aWN0b3JpZXM7IGZvciBpdCB3YXMgbm90IGJ5IGhpcyBleHBsb2l0cyBhdCB0aGUgZ2FtZXMsIGJ1dCBieSBoaXMgbWFubmVyIG9mIGxpZmUgdGhhdCB0aGV5IGp1ZGdlZCBoaW0uCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsdXQuIENpbS4gMTUiIHZhbGlkPSJ5ZXMiPlBsdXQuIENpbS4gMTU8L2JpYmw+77yJLCB3aG8sIGhvd2V2ZXIsIGdpdmVzIHRoZSBjb3JyZWN0IHJlYXNvbiBmb3IgQy4ncyBvc3RyYWNpc23igJR0aGUgZmFpbHVyZSBvZiBoaXMgcHJvLVNwYXJ0YW4gcG9saWN5LiAgSGUgd2FzIG9zdHJhY2l6ZWQgYWxtb3N0IGltbWVkaWF0ZWx5IGFmdGVyIGhpcyByZXR1cm4gaW4gZGlzZ3JhY2UgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEl0aG9tZSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsSXRob21lIj5JdGhvbWU8L3BsYWNlTmFtZT4gaW4gNDYxLjwvdHJhbnNsYXRpb24+"
translation['4.Intro.34'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnVydGhlcm1vcmUsIGlmIGFjY291bnQgaXMgdG8gYmUgdGFrZW4gb2Ygb3VyIGZhbWlsaWVzLCBJIG9uIG15IHNpZGUgY2Fubm90IGNsYWltIGFueSBhY3F1YWludGFuY2Ugd2l0aCBvc3RyYWNpc20uICBObyBvbmUgY291bGQgc2hvdyB0aGF0IGFueSBraW5zbWFuIG9mIG1pbmUgaGFzIGV2ZXIgaGFkIHRoZSBtaXNmb3J0dW5lIHRvIHN1ZmZlciBpdC4gIEFsY2liaWFkZXMsIG9uIHRoZSBvdGhlciBoYW5kLCBrbm93cyBtb3JlIG9mIGl0IHRoYW4gYW55IG90aGVyIG1lbWJlciBvZiB0aGUgY29tbXVuaXR5LiAgSGlzIG1vdGhlcidzIGZhdGhlciwgTWVnYWNsZXMsIGFuZCBoaXMgZmF0aGVyJ3MgZmF0aGVyLCBBbGNpYmlhZGVzLCB3ZXJlIGJvdGggb3N0cmFjaXplZCB0d2ljZTsgc28gaXQgd2lsbCBiZSBuZWl0aGVyIHN1cnByaXNpbmcgbm9yIHVubmF0dXJhbCBpZiBoZSByZWNlaXZlcyB0aGUgc2FtZSB0cmVhdG1lbnQgYXMgaGlzIGFuY2VzdG9ycy4gIEluZGVlZCwgbm90IGV2ZW4gQWxjaWJpYWRlcyBoaW1zZWxmIHdvdWxkIHZlbnR1cmUgdG8gbWFpbnRhaW4gdGhhdCB0aGV5LCB0aGUgd29yc3QgbWlzY3JlYW50cyBvZiB0aGVpciB0aW1lIHRob3VnaCB0aGV5IHdlcmUsIGRpZCBub3QgaGF2ZSBtb3JlIHJlZ2FyZCBmb3IgZGVjZW5jeSBhbmQgaG9uZXN0eSB0aGFuIGhlIGhpbXNlbGY7IGZvciBubyBvbmUgaW4gdGhlIHdvcmxkIGNvdWxkIGZyYW1lIGFuIGFjY3VzYXRpb24gd2hpY2ggd291bGQgZG8ganVzdGljZSB0byBoaXMgbWlzZGVlZHMuCjwvdHJhbnNsYXRpb24+"
translation['4.Intro.35'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TW9yZW92ZXIsIHRoZSBsZWdpc2xhdG9yIHdobyBpbnN0aXR1dGVkIG9zdHJhY2lzbSBhcHBlYXJzIHRvIG1lIHRvIGhhdmUgaGFkIHRoZSBmb2xsb3dpbmcgaW50ZW50aW9uLiBPYnNlcnZpbmcgdGhhdCB3aGVuZXZlciBtZW1iZXJzIG9mIHRoZSBjb21tdW5pdHkgYXJlIG1vcmUgcG93ZXJmdWwgdGhhbiB0aGUgbWFnaXN0cmF0ZXMgYW5kIHRoZSBsYXdzLCBpdCBpcyBpbXBvc3NpYmxlIGZvciBhbiBpbmRpdmlkdWFsIHRvIG9idGFpbiByZWRyZXNzIGZyb20gdGhlbSwgaGUgYXJyYW5nZWQgdGhhdCBwdW5pc2htZW50IGZvciB0aGVpciBtaXNkZWVkcyBzaG91bGQgYmUgZXhhY3RlZCBieSB0aGUgc3RhdGUuICBOb3cgSSBteXNlbGYgaGF2ZSBiZWVuIHB1YmxpY2x5IHRyaWVkIGZvdXIgdGltZXMsIGFuZCBoYXZlIG5ldmVyIHByZXZlbnRlZCBhbnkgcHJpdmF0ZSBwZXJzb24gd2hvIHNvIGRlc2lyZWQgZnJvbSBicmluZ2luZyBtZSB0byBqdXN0aWNlLiAgT24gdGhlIG90aGVyIGhhbmQsIEFsY2liaWFkZXMsIHdobyBoYXMgd29ya2VkIHN1Y2ggbWlzY2hpZWYsIGhhcyBuZXZlciB5ZXQgZGFyZWQgdG8gYW5zd2VyIGZvciBpdCBpbiBhbnkgd2F5IHdoYXRzb2V2ZXIuCjwvdHJhbnNsYXRpb24+"
translation['4.Intro.36'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0ic2VjdGlvbiIgLz5TbyBmb3JiaWRkaW5nIGlzIGhlIHRoYXQgaW5zdGVhZCBvZiBwdW5pc2hpbmcgaGltIGZvciB0aGUgd3JvbmdzIHdoaWNoIGhlIGhhcyBkb25lIGFscmVhZHksIG1lbiBmZWFyIGhpbSBmb3Igd2hhdCBoZSB3aWxsIGRvIGhlcmVhZnRlcjsgYW5kIHdoaWxlIGl0IHBheXMgaGlzIHZpY3RpbXMgdG8gc3VmZmVyIGluIHNpbGVuY2UsIGhlIGhpbXNlbGYgaXMgbm90IHNhdGlzZmllZCB1bmxlc3MgaGUgY2FuIHdvcmsgaGlzIHdpbGwgaW4gdGhlIGZ1dHVyZSBhbHNvLiAgWWV0IEkgaGFyZGx5IGRlc2VydmUgdG8gYmUgb3N0cmFjaXplZCwgZ2VudGxlbWVuLCBpZiBJIGRvIG5vdCBkZXNlcnZlIHRvIGJlIHB1dCB0byBkZWF0aDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5BIHF1aWJibGUuICBUaGUgc3BlYWtlciB0cmllcyB0byBhcmd1ZSB0aGF0IGlmIGhlIHdhcyBhY3F1aXR0ZWQgd2hlbiB0cmllZCBmb3IgaGlzIGxpZmUsIGhlIG11c3Qgc2ltaWxhcmx5IGJlIGFjcXVpdHRlZCB3aGVuIHRoZSBwZW5hbHR5IGluIHF1ZXN0aW9uIGlzIGV4aWxlIGZvciB0ZW4geWVhcnMuPC9ub3RlPjsgYW5kIGlmIEkgd2FzIGFjcXVpdHRlZCB3aGVuIGJyb3VnaHQgdG8gdHJpYWwsIEkgY2Fubm90IGRlc2VydmUgdG8gYmUgc2VudCBpbnRvIGV4aWxlIHdoZW4gbm8gdHJpYWwgaGFzIHRha2VuIHBsYWNlOyBub3IgYWZ0ZXIgdmluZGljYXRpbmcgbXlzZWxmIHNvIG1hbnkgdGltZXMgaW4gY291cnQgY2FuIEkgYmUgdGhvdWdodCB0byBtZXJpdCBiYW5pc2htZW50IG9uIHRoZSBzYW1lIGdyb3VuZHMgb2YgYWNjdXNhdGlvbiBhZ2Fpbi4KPC90cmFuc2xhdGlvbj4="
translation['4.Intro.37'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgbWF5IGJlIG9iamVjdGVkIHRoYXQgd2hlbiBJIHdhcyBwcm9zZWN1dGVkLCB0aGUgYXR0YWNrIG1hZGUgdXBvbiBtZSB3YXMgYSB3ZWFrIG9uZSwgdGhhdCBteSBhY2N1c2VycyB3ZXJlIHVuaW1wcmVzc2l2ZSwgb3IgdGhhdCB0aGUgY2FzZSB3YXMgY29uZHVjdGVkIGJ5IGNhc3VhbCBlbmVtaWVzIGluc3RlYWQgb2YgYnkgdGhvc2Ugd2hvIGV4Y2VsIGJvdGggYXMgc3BlYWtlcnMgYW5kIGFzIG1lbiBvZiBhY3Rpb24gYW5kIHdobywgaW4gZmFjdCwgYnJvdWdodCBhYm91dCB0aGUgZGVhdGggb2YgdHdvIG9mIHRoZSBwZXJzb25zIGNoYXJnZWQgd2l0aCB0aGUgc2FtZSBvZmZlbmNlcyBhcyBteXNlbGYuICBJIGFuc3dlciB0aGF0IGp1c3RpY2UgcmVxdWlyZXMgeW91IHRvIGJhbmlzaCwgbm90IHRob3NlIHdob20sIGFmdGVyIHJlcGVhdGVkIGlucXVpcnksIHlvdSBoYXZlIGZvdW5kIHRvIGJlIGlubm9jZW50LCBidXQgdGhvc2Ugd2hvIHJlZnVzZSB0byByZW5kZXIgdG8gdGhlIHN0YXRlIGFuIGFjY291bnQgb2YgdGhlaXIgcGFzdC4KPC90cmFuc2xhdGlvbj4="
translation['4.Intro.38'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0ic2VjdGlvbiIgLz5JbmRlZWQgd2hhdCBzZWVtcyBzdHJhbmdlIHRvIG1lIGlzIHRoaXMuICBJZiBvbmUgc291Z2h0IHRvIHZpbmRpY2F0ZSBwZXJzb25zIHdobyBoYXZlIGJlZW4gcHV0IHRvIGRlYXRoIGJ5IHNob3dpbmcgdGhhdCB0aGV5IG1ldCB0aGVpciBlbmQgdW5qdXN0bHksIHN1Y2ggYW4gYXR0ZW1wdCB3b3VsZCBub3QgYmUgdG9sZXJhdGVkLiAgSWYsIG9uIHRoZSBvdGhlciBoYW5kLCB0aG9zZSB3aG8gaGF2ZSBiZWVuIGRlY2xhcmVkIGlubm9jZW50IHNob3VsZCBvbmNlIG1vcmUgYmUgYWNjdXNlZCBvbiB0aGUgc2FtZSBjaGFyZ2XigJRpcyBpdCBub3Qgb25seSByaWdodCB0aGF0IHlvdSBzaG91bGQgYmVoYXZlIGluIHRoZSBjYXNlIG9mIHRoZSBsaXZpbmcgYXMgeW91IHdvdWxkIGluIHRoZSBjYXNlIG9mIHRoZSBkZWFkPwo8L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.39'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgaXMgY2hhcmFjdGVyaXN0aWMgb2YgQWxjaWJpYWRlcyB0byBwYXkgbm8gYXR0ZW50aW9uIHRvIGxhd3Mgb3Igb2F0aHMgaGltc2VsZiwgYW5kIHRvIHRyeSB0byB0ZWFjaCB5b3UgdG8gZGlzcmVnYXJkIHRoZW0gYXMgd2VsbCwgYW5kIHdoaWxlIGhlIGlzIHJ1dGhsZXNzIGluIGJyaW5naW5nIGFib3V0IHRoZSBiYW5pc2htZW50IGFuZCB0aGUgZGVhdGggb2Ygb3RoZXJzLCB0byBoYXZlIHJlY291cnNlIHRvIGhlYXJ0cmVuZGluZyB0ZWFycyBhbmQgYXBwZWFscyBmb3IgbWVyY3kgb24gaGlzIG93biBhY2NvdW50LiAgTm9yIGRvZXMgc3VjaCBiZWhhdmlvdXIgc3VycHJpc2UgbWXigJRoZSBoYXMgZG9uZSBtdWNoIHRoYXQgY2FsbHMgZm9yIHRlYXJzLiAgQnV0IHdob3NlIGdvb2R3aWxsIHdpbGwgaGUgZ2FpbiBieSBoaXMgZW50cmVhdGllcywgSSB3b25kZXI/ICBUaGF0IG9mIHRoZSB5b3VuZywgdXBvbiB3aG9tIGhlIGhhcyBicm91Z2h0IHRoZSBkaXNmYXZvdXIgb2YgdGhlIHBlb3BsZSBieSBoaXMgaW5zb2xlbmNlLCBieSBoaXMgZW1wdHlpbmcgb2YgdGhlIGd5bW5hc2lhLCBhbmQgYnkgYmVoYXZpb3VyIHdoaWNoIGhpcyB5ZWFycyBkbyBub3Qgd2FycmFudD8gT3IgdGhhdCBvZiB0aGUgb2xkLCB3aG9zZSB3YXlzIGFyZSB0aGUgZXhhY3Qgb3Bwb3NpdGUgb2YgaGlzIG93biwgYW5kIHdob3NlIG1vZGUgb2YgbGlmZSBoZSBoYXMgdHJlYXRlZCB3aXRoIGNvbnRlbXB0Pwo8L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.40'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SG93ZXZlciwgaXQgaXMgbm90IHRoZSBtZXJlIGV4YWN0aW9uIG9mIHB1bmlzaG1lbnQgZnJvbSB3cm9uZ2RvZXJzIHRoZW1zZWx2ZXMgdGhhdCBzaG91bGQgYmUgeW91ciBvYmplY3Q7IHlvdSBzaG91bGQgc2VlayBhbHNvIHRvIHJlbmRlciBldmVyeW9uZSBlbHNlIG1vcmUgdXByaWdodCBhbmQgbW9yZSBzZWxmLWNvbnRyb2xsZWQgYnkgdGhlIHNpZ2h0IG9mIHRoYXQgcHVuaXNobWVudC4gIElmLCB0aGVuLCB5b3Ugc2VuZCBtZSBpbnRvIGV4aWxlLCB5b3Ugd2lsbCBzdHJpa2UgZmVhciBpbnRvIGFsbCBtZW4gb2Ygd29ydGguICBJZiwgb24gdGhlIG90aGVyIGhhbmQsIHlvdSBwdW5pc2ggQWxjaWJpYWRlcywgeW91IHdpbGwgaW5zcGlyZSBhIGdyZWF0ZXIgcmVzcGVjdCBmb3IgdGhlIGxhdyBpbiB0aG9zZSB3aG9zZSBpbnNvbGVuY2UgaXMgdW5jb250cm9sbGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['4.Intro.41'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SSB3aXNoLCBmdXJ0aGVyLCB0byByZW1pbmQgeW91IG9mIHdoYXQgSSBoYXZlIGRvbmUuIEkgaGF2ZSBiZWVuIHNlbnQgb24gbWlzc2lvbnMgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT4sIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDA2NjY3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDY2NjciPk1hY2Vkb25pYTwvcGxhY2VOYW1lPiwgdG8gTW9sb3NzaWEsIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNzA5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI3MDkiPlRoZXNwcm90aWE8L3BsYWNlTmFtZT4sIHRvIEl0YWx5LCBhbmQgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDMxMjIiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMzEyMiI+U2ljaWx5PC9wbGFjZU5hbWU+LiAgSW4gdGhlIGNvdXJzZSBvZiB0aGVtIEkgaGF2ZSByZWNvbmNpbGVkIHN1Y2ggYXMgaGFkIHF1YXJyZWxsZWQgd2l0aCB5b3UsIG90aGVycyBJIGhhdmUgd29uIG92ZXIgdG8gZnJpZW5kc2hpcCwgb3RoZXJzIEkgaGF2ZSBkZXRhY2hlZCBmcm9tIHlvdXIgZW5lbWllcy4gIElmIGV2ZXJ5IHJlcHJlc2VudGF0aXZlIG9mIHlvdXJzIGhhZCBkb25lIHRoZSBzYW1lLCB5b3Ugd291bGQgaGF2ZSBmZXcgZm9lcywgYW5kIHlvdSB3b3VsZCBoYXZlIGdhaW5lZCBtYW55IGFuIGFsbHkuPC90cmFuc2xhdGlvbj4="
