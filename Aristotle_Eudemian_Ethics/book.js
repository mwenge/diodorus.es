var translations = [];
var translatedSection = null;
var current = 0;

function updateScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  console.log(page)

  var bookmarkedPageFieldName = book + "Page";
  var bookmarkedPage = localStorage.getItem(bookmarkedPageFieldName);
  if (bookmarkedPage == null) {
    localStorage.setItem(bookmarkedPageFieldName, page);
  }

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";

  var scrollPosition = localStorage.getItem(positionOnPage);
  if (scrollPosition == null) {
    scrollPosition = window.pageYOffset;
    localStorage.setItem(positionOnPage, scrollPosition);
    return;
  }

  if (bookmarkedPage == page) {
    window.scrollTo(0, scrollPosition)
    return;
  }
  window.location = bookmarkedPage;
}

function storeScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  localStorage.setItem(book + "Page", page);

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";
  scrollPosition = window.pageYOffset;
  localStorage.setItem(positionOnPage, scrollPosition);
}

function showNextOnHelper(evt) {
  current++;
  if (current > translations.length - 1) {
    current = 0;
  }
  var translation = translations[current];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = (current + 1) + "/" + translations.length;
    helper.appendChild(transCount);
  }
}

function updateHelper(evt, lineNumber, translationsForWord) {
  if (typeof updateHelper.currentWord === 'object') {
    updateHelper.currentWord.style.textDecoration = "none";
  }
  
  if (evt.target == updateHelper.currentWord) {
    displayTranslation(lineNumber);
    return;
  }

  evt.target.style.textDecoration = "underline red";
  updateHelper.currentWord = evt.target;

  if (typeof updateHelper.previousCommentBubble === 'object' 
      && updateHelper.previousCommentBubble != null) {
    updateHelper.previousCommentBubble.style.display = "none";
  }
  var commentBubble = document.getElementById("indicator-" + lineNumber);
  if (commentBubble != null) {
    commentBubble.style.display = "inline";
  }
  updateHelper.previousCommentBubble = commentBubble;

  showTitle(lineNumber);

  translations = translationsForWord;
  var translation = translations[0];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  helper.style.display = "block";

  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = "1/" + translations.length;
    helper.appendChild(transCount);
  }

  storeScrollPosition();
}

function showTitle(lineNumber) {
  lineNumber = lineNumber.replace(/\./g, '');
  var page = parseInt(parseInt(lineNumber, 10) / 100, 10);
  if (isNaN(page)) {
    return;
  }
  var result = page % 2;
  
  var titleToShow = titleElements[result];
  var innerHTML = "<span class=\"title\">" + titleToShow + "</span>";
  masthead.innerHTML = innerHTML;
}

function displayTranslation(line) {
  if (translatedSection) {
    translatedSection.style.backgroundColor = "";
  }
  translatedSection = document.getElementById(line);
  if (!translatedSection) {
    return;
  }
  translatedSection.style.backgroundColor = "yellow";
  parallel_translation.innerHTML = atobUTF8(translation[line]);
  parallel_translation.style.display = "block";
}

function hideTranslation() {
  translatedSection.style.backgroundColor = "";
  parallel_translation.style.display = "none";
}


function displayComment(line) {
  comment.innerHTML = atobUTF8(commentary[line]);
  comment.style.display = "block";
}

function hideComment() {
  comment.style.display = "none";
}

if ('serviceWorker' in navigator) {
  window.addEventListener('load', function() {
    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {
      // Registration was successful
      console.log('ServiceWorker registration successful with scope: ', registration.scope);
    }, function(err) {
      // registration failed :(
      console.log('ServiceWorker registration failed: ', err);
    });
  });
}

window.onload = updateScrollPosition;
var translation={}
translation['1.1214a.1'] = ""
translation['1.1214a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBtYW48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlb2duaXMgKDI1NSBmLiB3aXRoIHNsaWdodCB2YXJpYXRpb24sIHF1b3RlZAoJCQkJCQlhbHNvIGluPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDEwOTlhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTA5OWEgMjc8L2JpYmw+Ljwvbm90ZT4KCQkJCQl3aG8gYXQgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDEwOTlhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTA5OWEgMjc8L2JpYmw+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVsb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERlbG9zIj5EZWxvczwvcGxhY2VOYW1lPiBzZXQgZm9ydGggaW4gdGhlCgkJCQkJcHJlY2luY3Qgb2YgdGhlIGdvZCBoaXMgb3duIG9waW5pb24gY29tcG9zZWQgYW4gaW5zY3JpcHRpb24gZm9yIHRoZQoJCQkJCWZvcmVjb3VydCBvZiB0aGUgdGVtcGxlIG9mIExldG8gaW4gd2hpY2ggaGUgZGlzdGluZ3Vpc2hlZCBnb29kbmVzcywKCQkJCQliZWF1dHkgYW5kIHBsZWFzYW50bmVzcyBhcyBub3QgYWxsIGJlaW5nIHByb3BlcnRpZXMgb2YgdGhlIHNhbWUgdGhpbmcuCgkJCQkJSGlzIHZlcnNlcyBhcmU6IDxjaXQgY2xhc3M9InRyYW5zbGF0aW9uIj4KCQkJCQkJPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImVsZWdpYWMiPkp1c3RpY2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IgJ1JpZ2h0ZW91c25lc3MnOyB0aGUgdGVybQoJCQkJCQkJCWluY2x1ZGVzIG1vcmUgdGhhbiBqdXN0aWNlLjwvbm90ZT4gaXMgZmFpcmVzdCwKCQkJCQkJCQlhbmQgSGVhbHRoIGlzIGJlc3QsPC9sPgoJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgdG8gd2luIG9uZSdzIGRlc2lyZSBpcyB0aGUgcGxlYXNhbnRlc3QuPC9sPgoJCQkJCQk8L3F1b3RlPgoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJUaGduLiAyNTUiPlRoZW9nLiAyNTVmLjwvYmlibD4KCQkJCQk8L2NpdD4gQnV0IGZvciBvdXIgcGFydCBsZXQgdXMgbm90IGFsbG93IHRoYXQgaGUgaXMgcmlnaHQ7IGZvcgoJCQkJCUhhcHBpbmVzczxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJlbGVnaWFjIj5KdXN0aWNlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yICdSaWdodGVvdXNuZXNzJzsgdGhlIHRlcm0KCQkJCQkJCQlpbmNsdWRlcyBtb3JlIHRoYW4ganVzdGljZS48L25vdGU+IGlzIGZhaXJlc3QsCgkJCQkJCQkJYW5kIEhlYWx0aCBpcyBiZXN0LDwvbD4KCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHRvIHdpbiBvbmUncyBkZXNpcmUgaXMgdGhlIHBsZWFzYW50ZXN0LjwvbD4KCQkJCQkJPC9xdW90ZT4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImVsZWdpYWMiPkp1c3RpY2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IgJ1JpZ2h0ZW91c25lc3MnOyB0aGUgdGVybQoJCQkJCQkJCWluY2x1ZGVzIG1vcmUgdGhhbiBqdXN0aWNlLjwvbm90ZT4gaXMgZmFpcmVzdCwKCQkJCQkJCQlhbmQgSGVhbHRoIGlzIGJlc3QsPC9sPgoJCQkJCQkJPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yICdSaWdodGVvdXNuZXNzJzsgdGhlIHRlcm0KCQkJCQkJCQlpbmNsdWRlcyBtb3JlIHRoYW4ganVzdGljZS48L25vdGU+IGlzIGZhaXJlc3QsCgkJCQkJCQkJYW5kIEhlYWx0aCBpcyBiZXN0LDxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHRvIHdpbiBvbmUncyBkZXNpcmUgaXMgdGhlIHBsZWFzYW50ZXN0LjwvbD4KCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iVGhnbi4gMjU1Ij5UaGVvZy4gMjU1Zi48L2JpYmw+CgkJCQkJPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yICdXZWxsLWJlaW5nJzsKCQkJCQkJdGhlIEdyZWVrIHdvcmQgaXMgZW50aXJlbHkgbm9uY29tbWl0dGFsIGFuZCBkb2VzIG5vdCBuZWNlc3NhcmlseQoJCQkJCQlkZW5vdGUgYSBzdGF0ZSBvZiBmZWVsaW5nLCBjb25zY2lvdXNuZXNzIG9mIHdlbGZhcmUuPC9ub3RlPiBpcwoJCQkJCWF0IG9uY2UgdGhlIHBsZWFzYW50ZXN0IGFuZCB0aGUgZmFpcmVzdCBhbmQgYmVzdCBvZiBhbGwgdGhpbmdzCgkJCQkJd2hhdGV2ZXIuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWJvdXQgZXZlcnkgdGhpbmcgYW5kIGV2ZXJ5IG5hdHVyYWwgc3BlY2llcwoJCQkJCXRoZXJlIGFyZSBtYW55IHZpZXdzIHRoYXQgaW52b2x2ZSBkaWZmaWN1bHR5IGFuZCByZXF1aXJlIGV4YW1pbmF0aW9uOwoJCQkJCW9mIHRoZXNlIHNvbWUgcmVsYXRlIG9ubHkgdG8gb3VyIGtub3dsZWRnZSBvZiB0aGUgdGhpbmcsIG90aGVycyBkZWFsCgkJCQkJYWxzbyB3aXRoIG1vZGVzIG9mIGFjcXVpcmluZyBpdCBhbmQgb2YgYWN0aW5nIGluIHJlbGF0aW9uIHRvIGl0LgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFzIHRvIGFsbCB0aG9zZQoJCQkJCXZpZXdzIHRoZXJlZm9yZSB0aGF0IGludm9sdmUgb25seSBzcGVjdWxhdGl2ZSBwaGlsb3NvcGh5LCB3ZSBtdXN0IHNheQoJCQkJCXdoYXRldmVyIG1heSBiZSBwcm9wZXIgdG8gdGhlIGlucXVpcnkgd2hlbiB0aGUgc3VpdGFibGUgb2NjYXNpb24KCQkJCQlvY2N1cnMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS40IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCB3ZSBtdXN0CgkJCQkJY29uc2lkZXIgZmlyc3Qgd2hhdCB0aGUgZ29vZCBsaWZlIGNvbnNpc3RzIGluIGFuZCBob3cgaXQgaXMgdG8gYmUKCQkJCQlvYnRhaW5lZOKAlHdoZXRoZXIgYWxsIG9mIHRob3NlIHdobyByZWNlaXZlIHRoZSBkZXNpZ25hdGlvbgoJCQkJCSdoYXBweScgYWNxdWlyZSBoYXBwaW5lc3MgYnkgbmF0dXJlLCBhcyBpcyB0aGUgY2FzZSB3aXRoIHRhbGxuZXNzIGFuZAoJCQkJCXNob3J0bmVzcyBvZiBzdGF0dXJlIGFuZCBkaWZmZXJlbmNlcyBvZiBjb21wbGV4aW9uLCBvciBieSBzdHVkeSwgd2hpY2gKCQkJCQl3b3VsZCBpbXBseSB0aGF0IHRoZXJlIGlzIGEgc2NpZW5jZSBvZiBoYXBwaW5lc3MsIG9yIGJ5IHNvbWUgZm9ybSBvZgoJCQkJCXRyYWluaW5nLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3IgdGhlcmUKCQkJCQlhcmUgbWFueSBodW1hbiBhdHRyaWJ1dGVzIHRoYXQgYXJlIG5vdCBiZXN0b3dlZCBieSBuYXR1cmUgbm9yIGFjcXVpcmVkCgkJCQkJYnkgc3R1ZHkgYnV0IGdhaW5lZCBieSBoYWJpdHVhdGlvbuKAlGJhZCBhdHRyaWJ1dGVzIGJ5IHRob3NlCgkJCQkJdHJhaW5lZCBpbiBiYWQgaGFiaXRzIGFuZCBnb29kIGF0dHJpYnV0ZXMgYnkgdGhvc2UgdHJhaW5lZCBpbiBnb29kCgkJCQkJb25lcy4gPC90cmFuc2xhdGlvbj4="
translation['1.1214b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS41IiB1bml0PSJMb2ViIGNoYXAiIC8+IE9yIGRvZXMgaGFwcGluZXNzCgkJCQkJY29tZSBpbiBub25lIG9mIHRoZXNlIHdheXMsIGJ1dCBlaXRoZXIgYnkgYSBzb3J0IG9mIGVsZXZhdGlvbiBvZiBtaW5kCgkJCQkJaW5zcGlyZWQgYnkgc29tZSBkaXZpbmUgcG93ZXIsIGFzIGluIHRoZSBjYXNlIG9mIHBlcnNvbnMgcG9zc2Vzc2VkIGJ5CgkJCQkJYSBueW1waCBvciBhIGdvZCwgb3IsIGFsdGVybmF0aXZlbHksIGJ5IGZvcnR1bmU/IGZvciBtYW55IHBlb3BsZQoJCQkJCWlkZW50aWZ5IGhhcHBpbmVzcyB3aXRoIGdvb2QgZm9ydHVuZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgaXQgaXMgcHJldHR5CgkJCQkJY2xlYXIgdGhhdCB0aGUgcHJlc2VuY2Ugb2YgaGFwcGluZXNzIGlzIGJlc3Rvd2VkIHVwb24gbWVuIGJ5IGFsbCBvZgoJCQkJCXRoZXNlIHRoaW5ncywgb3IgYnkgc29tZSBvciBvbmUgb2YgdGhlbTsgZm9yIGFsbW9zdCBhbGwgdGhlIG1vZGVzIGluCgkJCQkJd2hpY2ggaXQgaXMgcHJvZHVjZWQgZmFsbCB1bmRlciB0aGVzZSBwcmluY2lwbGVzLCBpbmFzbXVjaCBhcyBhbGwgdGhlCgkJCQkJYWN0cyB0aGF0IHNwcmluZyBmcm9tIHRob3VnaHQgbWF5IGJlIGluY2x1ZGVkIHdpdGggdGhvc2UgdGhhdCBzcHJpbmcKCQkJCQlmcm9tIGtub3dsZWRnZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IHRvIGJlCgkJCQkJaGFwcHkgYW5kIHRvIGZpdmUgYmxpc3NmdWxseSBhbmQgZmluZWx5IG1heSBjb25zaXN0IGNoaWVmbHkgaW4gdGhyZWUKCQkJCQl0aGluZ3MgZGVlbWVkIHRvIGJlIG1vc3QgZGVzaXJhYmxlOiBzb21lIHBlb3BsZSBzYXkgdGhhdCBXaXNkb208bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIEdyZWVrIHRlcm0gaGVyZSBzdGlsbCByZXRhaW5zCgkJCQkJCXRoZSBnZW5lcmFsIHNlbnNlIHRoYXQgaXQgaGFzIGluCgkJCQkJCVBsYXRvLiBJbiB0aGUgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tmljb21hY2hlYW4KCQkJCQkJCUV0aGljczwvdGl0bGU+IGl0IGlzIGxpbWl0ZWQgdG8gUHJhY3RpY2FsIFdpc2RvbSwgcHJ1ZGVudGlhLAoJCQkJCQkncHJ1ZGVuY2UsJyBhcyBkaXN0aW5jdCBmcm9tIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs64zrXPic+B4b23zrE8L2ZvcmVpZ24+LCBzYXBpZW50aWEsICdzcGVjdWxhdGl2ZSB3aXNkb20uJzwvbm90ZT4gaXMKCQkJCQl0aGUgZ3JlYXRlc3QgZ29vZCwgb3RoZXJzIEdvb2RuZXNzPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tmljb21hY2hlYW4KCQkJCQkJCUV0aGljczwvdGl0bGU+IGl0IGlzIGxpbWl0ZWQgdG8gUHJhY3RpY2FsIFdpc2RvbSwgcHJ1ZGVudGlhLAoJCQkJCQkncHJ1ZGVuY2UsJyBhcyBkaXN0aW5jdCBmcm9tIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs64zrXPic+B4b23zrE8L2ZvcmVpZ24+LCBzYXBpZW50aWEsICdzcGVjdWxhdGl2ZSB3aXNkb20uJzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JdCBtdXN0IGFsd2F5cyBiZSByZW1lbWJlcmVkIHRoYXQgdGhlIEdyZWVrIHRlcm0gaXMgbGVzcwoJCQkJCQlsaW1pdGVkIGluIG1lYW5pbmcgdGhhbiAndmlydHVlLCcgYW5kIG1heSBkZW5vdGUgZXhjZWxsZW5jZSBpbgoJCQkJCQlhbnkgZGVwYXJ0bWVudCwgbm90IG9ubHkgbW9yYWwgZ29vZG5lc3MuPC9ub3RlPiBhbmQgb3RoZXJzCgkJCQkJUGxlYXN1cmUuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS44IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBjZXJ0YWluCgkJCQkJcGVyc29ucyBkZWJhdGUgYWJvdXQgdGhlaXIgaW1wb3J0YW5jZSBpbiByZWxhdGlvbiB0byBoYXBwaW5lc3MsCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyMTRiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1214b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmRlY2xhcmluZyB0aGF0IG9uZSBjb250cmlidXRlcyBtb3JlIHRvIGl0CgkJCQkJdGhhbiBhbm90aGVy4oCUc29tZSBob2xkaW5nIHRoYXQgV2lzZG9tIGlzIGEgZ3JlYXRlciBnb29kIHRoYW4KCQkJCQlHb29kbmVzcywgb3RoZXJzIHRoZSByZXZlcnNlLCBhbmQgb3RoZXJzIHRoYXQgUGxlYXN1cmUgaXMgYSBncmVhdGVyCgkJCQkJZ29vZCB0aGFuIGVpdGhlciBvZiB0aGVtOyBhbmQgc29tZSB0aGluayB0aGF0IHRoZSBoYXBweSBsaWZlIGNvbWVzCgkJCQkJZnJvbSB0aGVtIGFsbCwgb3RoZXJzIGZyb20gdHdvIG9mIHRoZW0sIG90aGVycyB0aGF0IGl0IGNvbnNpc3RzIGluCgkJCQkJc29tZSBvbmUgb2YgdGhlbS48L3RyYW5zbGF0aW9uPg=="
translation['1.1214b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkhhdmluZyB0aGVuIGluIHJlZ2FyZCB0byB0aGlzCgkJCQkJc3ViamVjdCBlc3RhYmxpc2hlZCB0aGF0IGV2ZXJ5Ym9keSBhYmxlIHRvIGxpdmUgYWNjb3JkaW5nIHRvIGhpcyBvd24KCQkJCQlwdXJwb3NpdmUgY2hvaWNlIHNob3VsZCBzZXQgYmVmb3JlIGhpbSBzb21lIG9iamVjdCBmb3Igbm9ibGUgbGl2aW5nIHRvCgkJCQkJYWltIGF0PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiAgICAgICBOaWMuIEV0aC4gMTA5NGEuMjAiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuCgkJCQkJCU5pYy4gRXRoLiAxMDk0YSAyMiwgMTA5NWEKCQkJCQkJMjItMjYuPC9iaWJsPjwvbm90ZT7igJRlaXRoZXIgaG9ub3Igb3IgZWxzZSBnbG9yeSBvciB3ZWFsdGggb3IKCQkJCQljdWx0dXJl4oCUb24gd2hpY2ggaGUgd2lsbCBrZWVwIGhpcyBleWVzIGZpeGVkIGluIGFsbCBoaXMKCQkJCQljb25kdWN0IChzaW5jZSBjbGVhcmx5IGl0IGlzIGEgbWFyayBvZiBtdWNoIGZvbGx5IG5vdCB0byBoYXZlIG9uZSdzCgkJCQkJbGlmZSByZWd1bGF0ZWQgd2l0aCByZWdhcmQgdG8gc29tZSBFbmQpLCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiAgICAgICBOaWMuIEV0aC4gMTA5NGEuMjAiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuCgkJCQkJCU5pYy4gRXRoLiAxMDk0YSAyMiwgMTA5NWEKCQkJCQkJMjItMjYuPC9iaWJsPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IGl0IGlzIHRoZXJlZm9yZSBtb3N0IG5lY2Vzc2FyeSBmaXJzdCB0byBkZWNpZGUKCQkJCQl3aXRoaW4gb25lc2VsZiwgbmVpdGhlciBoYXN0aWx5IG5vciBjYXJlbGVzc2x5LCBpbiB3aGljaCBvZiB0aGUgdGhpbmdzCgkJCQkJdGhhdCBiZWxvbmcgdG8gdXMgdGhlIGdvb2QgbGlmZSBjb25zaXN0cywgYW5kIHdoYXQgYXJlIHRoZQoJCQkJCWluZGlzcGVuc2FibGUgY29uZGl0aW9ucyBmb3IgbWVuJ3MgcG9zc2Vzc2luZyBpdC4gRm9yIHRoZXJlIGlzIGEKCQkJCQlkaXN0aW5jdGlvbiBiZXR3ZWVuIGhlYWx0aCBhbmQgdGhlIHRoaW5ncyB0aGF0IGFyZSBpbmRpc3BlbnNhYmxlCgkJCQkJY29uZGl0aW9ucyBvZiBoZWFsdGgsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IGFuZAoJCQkJCXRoaXMgaXMgc2ltaWxhcmx5IHRoZSBjYXNlIHdpdGggbWFueSBvdGhlciB0aGluZ3M7IGNvbnNlcXVlbnRseSBhbHNvCgkJCQkJdG8gbGl2ZSBmaW5lbHkgaXMgbm90IHRoZSBzYW1lIGFzIHRoZSB0aGluZ3Mgd2l0aG91dCB3aGljaCBsaXZpbmcKCQkJCQlmaW5lbHkgaXMgaW1wb3NzaWJsZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQW5kCgkJCQkJaW4gdGhlIGxhdHRlciBjbGFzcyBvZiB0aGluZ3Mgc29tZSB0aGF0IGFyZSBpbmRpc3BlbnNhYmxlIGNvbmRpdGlvbnMKCQkJCQlvZiBoZWFsdGggYW5kIGxpZmUgYXJlIG5vdCBwZWN1bGlhciB0byBzcGVjaWFsIHBlb3BsZSBidXQgY29tbW9uIHRvCgkJCQkJcHJhY3RpY2FsbHkgYWxsIG1lbuKAlGJvdGggc29tZSBzdGF0ZXMgYW5kIHNvbWUKCQkJCQlhY3Rpb25z4oCUZm9yIGluc3RhbmNlLCB3aXRob3V0IGJyZWF0aGluZyBvciBiZWluZyBhd2FrZSBvcgoJCQkJCXBhcnRpY2lwYXRpbmcgaW4gbW92ZW1lbnQgd2UgY291bGQgbm90IHBvc3Nlc3MgYW55IGdvb2Qgb3IgYW55IGV2aWwgYXQKCQkJCQlhbGw7IHdoZXJlYXMgb3RoZXJzIGFyZSBtb3JlIHBlY3VsaWFyIHRvIHNwZWNpYWwgdHlwZXMgb2YgbmF0dXJhbAoJCQkJCWNvbnN0aXR1dGlvbuKAlDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3IgaW5zdGFuY2UsIGVhdGluZyBtZWF0IGFuZCB0YWtpbmcgd2Fsa2luZyBleGVyY2lzZSBhZnRlciBkaW5uZXIKCQkJCQlhcmUgbm90IGNsb3NlbHkgcmVsYXRlZCB0byBoZWFsdGggaW4gdGhlIHNhbWUgd2F5IGFzIHRoZSBjb25kaXRpb25zCgkJCQkJbWVudGlvbmVkLiBBbmQgdGhlc2UgZmFjdHMgbXVzdCBub3QgYmUgb3Zlcmxvb2tlZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+SW4gdGhlIE1zcy4gdGhpcyBjbGF1c2UgY29tZXMgYmVmb3JlIHRoZQoJCQkJCQlwcmVjZWRpbmcgb25lLCAnZm9yIGluc3RhbmNlLCBlYXRpbmcgbWVhdCAuIC4gLgoJCQkJCQltZW50aW9uZWQuJzwvbm90ZT48L3RyYW5zbGF0aW9uPg=="
translation['1.1215a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJZm9yIHRoZXNlIGFyZSB0aGUgY2F1c2VzIG9mIHRoZSBkaXNwdXRlcyBhYm91dCB0aGUgcmVhbCBuYXR1cmUgb2YKCQkJCQloYXBwaW5lc3MgYW5kIGFib3V0IHRoZSBtZWFucyBvZiBwcm9jdXJpbmcgaXQ7IGZvciBzb21lIHBlb3BsZSByZWdhcmQKCQkJCQl0aGUgdGhpbmdzIHRoYXQgYXJlIGluZGlzcGVuc2FibGUgY29uZGl0aW9ucyBvZiBiZWluZyBoYXBweSBhcyBhY3R1YWwKCQkJCQlwYXJ0cyBvZiBoYXBwaW5lc3MuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IHRvIGV4YW1pbmUgYWxsIHRoZSBvcGluaW9ucwoJCQkJCXRoYXQgYW55IHBlb3BsZSBob2xkIGFib3V0IGhhcHBpbmVzcyBpcyBhIHN1cGVyZmx1b3VzIHRhc2s8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Q2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMDk1YSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDEwOTVhCgkJCQkJCTI4LTMwLCBiIDE5ZmYuPC9iaWJsPjwvbm90ZT4gRm9yIGNoaWxkcmVuIGFuZCB0aGUgc2ljayBhbmQKCQkJCQlpbnNhbmUgaGF2ZSBtYW55IG9waW5pb25zIHdoaWNoIG5vIHNlbnNpYmxlIG1hbiB3b3VsZCBkaXNjdXNzLCBmb3IKCQkJCQl0aGVzZSBwZXJzb25zIG5lZWQgbm90IGFyZ3VtZW50IGJ1dCB0aGUgZm9ybWVyIHRpbWUgaW4gd2hpY2ggdG8gZ3JvdwoJCQkJCXVwIGFuZCBhbHRlciBhbmQgdGhlIGxhdHRlciBtZWRpY2FsIG9yIG9mZmljaWFsIGNoYXN0aXNlbWVudAoJCQkJCSh0cmVhdG1lbnQgd2l0aCBkcnVncyBiZWluZyBjaGFzdGlzZW1lbnQganVzdCBhcyBtdWNoIGFzIGZsb2dnaW5nIGlzKS4KCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTA5NWEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4gRXRoLiAxMDk1YQoJCQkJCQkyOC0zMCwgYiAxOWZmLjwvYmlibD48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgc2ltaWxhcmx5IGl0IGlzCgkJCQkJYWxzbyBzdXBlcmZsdW91cyB0byBleGFtaW5lIHRoZSBvcGluaW9ucyBvZiB0aGUgbXVsdGl0dWRlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gICAgICAgIDEwOTViIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4KCQkJCQkJMTA5NWIgMTk8L2JpYmw+Ljwvbm90ZT4gZWl0aGVyOyA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gICAgICAgIDEwOTViIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4KCQkJCQkJMTA5NWIgMTk8L2JpYmw+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjE1YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1215a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGV5CgkJCQkJdGFsayBhdCByYW5kb20gYWJvdXQgYWxtb3N0IGV2ZXJ5dGhpbmcsIGFuZCBlc3BlY2lhbGx5IGFib3V0CgkJCQkJaGFwcGluZXNzLiBXZSBvdWdodCB0byBleGFtaW5lIG9ubHkgdGhlIG9waW5pb25zIG9mIHRoZSB3aXNlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSB3b3JkcyB0cmFuc2xhdGVkICdoYXBwaW5lc3MnCgkJCQkJCWFuZCAndGhlIG9waW5pb25zIG9mIHRoZSB3aXNlJyBhcmUgY29uamVjdHVyYWwgaW5zZXJ0aW9ucyBpbiB0aGUKCQkJCQkJR3JlZWsuPC9ub3RlPjsgZm9yIGl0IGlzIG91dCBvZiBwbGFjZSB0byBhcHBseSByZWFzb25pbmcgdG8KCQkJCQl0aG9zZSB3aG8gZG8gbm90IG5lZWQgcmVhc29uaW5nIGF0IGFsbCwgYnV0IGV4cGVyaWVuY2UuIDwvdHJhbnNsYXRpb24+"
translation['1.1215a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCBzaW5jZSBldmVyeSBzdWJqZWN0IGhhcwoJCQkJCXNwZWNpYWwgZGlmZmljdWx0aWVzIHJlbGF0ZWQgdG8gaXQsIGl0IGlzIGNsZWFyIHRoYXQgdGhlcmUgYXJlIHN1Y2ggaW4KCQkJCQlyZWdhcmQgdG8gdGhlIGhpZ2hlc3QgbGlmZSBhbmQgdGhlIGJlc3QgbW9kZSBvZiBleGlzdGVuY2U7IGl0IGlzIHRoZW4KCQkJCQl3ZWxsIHRvIGV4YW1pbmUgdGhlIG9waW5pb25zIHB1dHRpbmcgdGhlc2UgZGlmZmljdWx0aWVzLCBzaW5jZSB0aGUKCQkJCQlyZWZ1dGF0aW9ucyBhZHZhbmNlZCBieSB0aG9zZSB3aG8gY2hhbGxlbmdlIHRoZW0gYXJlIGRlbW9uc3RyYXRpb25zIG9mCgkJCQkJdGhlIHRoZW9yaWVzIHRoYXQgYXJlIG9wcG9zZWQgdG8gdGhlbS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Nb3Jlb3ZlciB0bwoJCQkJCW5vdGljZSBzdWNoIG1hdHRlcnMgaXMgZXNwZWNpYWxseSBhZHZhbnRhZ2VvdXMgd2l0aCBhIHZpZXcgdG8gdGhlCgkJCQkJc3ViamVjdHMgdG8gd2hpY2ggYWxsIGlucXVpcnkgb3VnaHQgdG8gYmUgZGlyZWN0ZWTigJR0aGUKCQkJCQlxdWVzdGlvbiB3aGF0IGFyZSB0aGUgbWVhbnMgdGhhdCBtYWtlIGl0IHBvc3NpYmxlIHRvIHBhcnRpY2lwYXRlIGluCgkJCQkJbGl2aW5nIHdlbGwgYW5kIGZpbmVseSAoaWYgJ2JsaXNzZnVsbHknIGlzIHRvbyBpbnZpZGlvdXMgYW4KCQkJCQlleHByZXNzaW9uKeKAlGFuZCB3aXRoIGEgdmlldyB0byB0aGUgaG9wZSB0aGF0IHdlIG1heSBoYXZlIG9mCgkJCQkJdGhlIHRoaW5ncyB0aGF0IGFyZSBnb29kIGluIHRoZSB2YXJpb3VzIGRlcGFydG1lbnRzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBGb3IgaWYgbGl2aW5nIGZpbmVseSBkZXBlbmRzCgkJCQkJb24gdGhpbmdzIHRoYXQgY29tZSBieSBmb3J0dW5lIG9yIGJ5IG5hdHVyZSwgaXQgd291bGQgYmUgYmV5b25kIHRoZQoJCQkJCWhvcGVzIG9mIG1hbnkgbWVuLCBmb3IgdGhlbiBpdHMgYXR0YWlubWVudCBpcyBub3QgdG8gYmUgc2VjdXJlZCBieQoJCQkJCWVmZm9ydCwgYW5kIGRvZXMgbm90IHJlc3Qgd2l0aCBtZW4gdGhlbXNlbHZlcyBhbmQgaXMgbm90IGEgbWF0dGVyIG9mCgkJCQkJdGhlaXIgb3duIGNvbmR1Y3Q7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy42IiB1bml0PSJMb2ViIGNoYXAiIC8+IGJ1dCBpZgoJCQkJCWl0IGNvbnNpc3RzIGluIG9uZXNlbGYgYW5kIG9uZSdzIG93biBhY3Rpb25zIGhhdmluZyBhIHBhcnRpY3VsYXIKCQkJCQlxdWFsaXR5LCB0aGUgZ29vZCB3b3VsZCBiZSBtb3JlIGNvbW1vbiBhbmQgbW9yZSBkaXZpbmXigJRtb3JlCgkJCQkJY29tbW9uIGJlY2F1c2UgaXQgd291bGQgYmUgcG9zc2libGUgZm9yIG1vcmUgcGVvcGxlIHRvIHNoYXJlIGl0LCBhbmQKCQkJCQltb3JlIGRpdmluZSBiZWNhdXNlIGhhcHBpbmVzcyB3b3VsZCB0aGVuIGJlIGluIHN0b3JlIGZvciB0aG9zZSB3aG8KCQkJCQltYWRlIHRoZW1zZWx2ZXMgYW5kIHRoZWlyIGFjdGlvbnMgb2YgYSBwYXJ0aWN1bGFyIHF1YWxpdHkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1215b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+IE1vc3Qgb2YgdGhlIHBvaW50cyBkZWJhdGVkIGFuZCB0aGUgZGlmZmljdWx0aWVzCgkJCQkJcmFpc2VkIHdpbGwgYmUgY2xlYXIgaWYgaXQgYmUgc2F0aXNmYWN0b3JpbHkgZGV0ZXJtaW5lZCB3aGF0IHRoZQoJCQkJCXByb3BlciBjb25jZXB0aW9uIG9mIGhhcHBpbmVzcyBpc+KAlGRvZXMgaXQgY29uc2lzdCBtZXJlbHkgaW4KCQkJCQlhIHBlcnNvbidzIHBvc3Nlc3Npbmcgc29tZSBwYXJ0aWN1bGFyIHF1YWxpdHkgb2Ygc3Bpcml0LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgd29yZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PiM+Fz4fhvbU8L2ZvcmVpZ24+LCB1c3VhbGx5IHJlbmRlcmVkICdzb3VsLCcgaGFzIG5vIHRlcm0KCQkJCQkJZXhhY3RseSBjb3JyZXNwb25kaW5nIHRvIGl0IGluIEVuZ2xpc2gsIGFzIGl0IGRlbm90ZXMgdGhlIHdob2xlCgkJCQkJCXZpdGFsaXR5IG9mIGEgbGl2aW5nIGNyZWF0dXJlLCB3aXRoIHRoZSB1bmNvbnNjaW91cyBmYWN0b3JzIG9mCgkJCQkJCW51dHJpdGlvbiBhbmQgZ3Jvd3RoIGFzIHdlbGwgYXMgY29uc2Npb3VzIGZlZWxpbmdzIG9yIGVtb3Rpb25zCgkJCQkJCWFuZCB0aG91Z2h0cy48L25vdGU+IGFzIHNvbWUgb2YgdGhlIHNhZ2VzIGFuZCB0aGUgb2xkZXIgdGhpbmtlcnMKCQkJCQloZWxkLCBvciBhbHRob3VnaCBhIHBhcnRpY3VsYXIgcGVyc29uYWwgY2hhcmFjdGVyIGlzIGluZGVlZCBhbgoJCQkJCWluZGlzcGVuc2FibGUgY29uZGl0aW9uLCBpcyBhIHBhcnRpY3VsYXIgcXVhbGl0eSBvZiBjb25kdWN0IGV2ZW4gbW9yZQoJCQkJCW5lY2Vzc2FyeT88Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PiM+Fz4fhvbU8L2ZvcmVpZ24+LCB1c3VhbGx5IHJlbmRlcmVkICdzb3VsLCcgaGFzIG5vIHRlcm0KCQkJCQkJZXhhY3RseSBjb3JyZXNwb25kaW5nIHRvIGl0IGluIEVuZ2xpc2gsIGFzIGl0IGRlbm90ZXMgdGhlIHdob2xlCgkJCQkJCXZpdGFsaXR5IG9mIGEgbGl2aW5nIGNyZWF0dXJlLCB3aXRoIHRoZSB1bmNvbnNjaW91cyBmYWN0b3JzIG9mCgkJCQkJCW51dHJpdGlvbiBhbmQgZ3Jvd3RoIGFzIHdlbGwgYXMgY29uc2Npb3VzIGZlZWxpbmdzIG9yIGVtb3Rpb25zCgkJCQkJCWFuZCB0aG91Z2h0cy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSBhcmUgdmFyaW91cyBkaWZmZXJlbnQgbW9kZXMgb2YgbGlmZSwKCQkJCQlhbmQgc29tZSBkbyBub3QgbGF5IGFueSBjbGFpbSB0byB3ZWxsLWJlaW5nIG9mIHRoZSBraW5kIHVuZGVyCgkJCQkJY29uc2lkZXJhdGlvbiwgYnV0IGFyZSBwdXJzdWVkIG1lcmVseSBmb3IgdGhlIHNha2Ugb2YgdGhpbmdzCgkJCQkJbmVjZXNzYXJ54oCUZm9yIGluc3RhbmNlIHRoZSBsaXZlcyBkZXZvdGVkIHRvIHRoZSB2dWxnYXIgYW5kCgkJCQkJbWVjaGFuaWMgYXJ0cyBhbmQgdGhvc2UgZGVhbGluZyB3aXRoIGJ1c2luZXNzIChieSB2dWxnYXIgYXJ0cyBJIG1lYW4KCQkJCQl0aG9zZSBwdXJzdWVkIG9ubHkgZm9yIHJlcHV0YXRpb24sIGJ5IG1lY2hhbmljIHRoZSBzZWRlbnRhcnkgYW5kCgkJCQkJd2FnZS1lYXJuaW5nIHB1cnN1aXRzLCBhbmQgYnkgYXJ0cyBvZiBidXNpbmVzcyB0aG9zZSBjb25jZXJuZWQgd2l0aAoJCQkJCW1hcmtldCBwdXJjaGFzZSBhbmQgcmV0YWlsIHNlbGxpbmcpOyBidXQgb24gdGhlIG90aGVyIGhhbmQsIHRoZSB0aGluZ3MKCQkJCQlyZWxhdGVkIHRvIHRoZSBoYXBweSBjb25kdWN0IG9mIGxpZmUgYmVpbmcgdGhyZWUsIHRoZSB0aGluZ3MgYWxyZWFkeQoJCQkJCW1lbnRpb25lZDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDEuMTIxNGEuMzAiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjE0YSAzMC1iIDU8L2JpYmw+Ljwvbm90ZT4gYXMgdGhlCgkJCQkJZ3JlYXRlc3QgcG9zc2libGUgZ29vZHMgZm9yIG1lbuKAlGdvb2RuZXNzLCB3aXNkb20gYW5kCgkJCQkJcGxlYXN1cmUsIHdlIHNlZSB0aGF0IHRoZXJlIGFyZSBhbHNvIHRocmVlIHdheXMgb2YgbGlmZSBpbiB3aGljaCB0aG9zZQoJCQkJCXRvIHdob20gZm9ydHVuZSBnaXZlcyBvcHBvcnR1bml0eTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAxLjEyMTRhLjMwIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTIxNGEgMzAtYiA1PC9iaWJsPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UGVyaGFwcyB0aGUgR3JlZWsgc2hvdWxkIGJlIGVtZW5kZWQgdG8gZ2l2ZSAndGhvc2Ugd2hvIGhhcHBlbgoJCQkJCQl0byBiZSBpbiBwb3dlci4nPC9ub3RlPiBpbnZhcmlhYmx5IGNob29zZSB0byBsaXZlLCB0aGUgbGlmZSBvZgoJCQkJCXBvbGl0aWNzLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGFjdGl2ZQoJCQkJCQljaXRpemVuc2hpcDogJ3N0YXRlc21hbnNoaXAnIGlzIHRvbyBsb2Z0eSBhIHRlcm0uPC9ub3RlPiB0aGUKCQkJCQlsaWZlIG9mIHBoaWxvc29waHksIGFuZCB0aGUgbGlmZSBvZiBlbmpveW1lbnQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjE1YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1215b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1215b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+T2YgdGhlc2UgdGhlCgkJCQkJcGhpbG9zb3BoaWMgbGlmZSBkZW5vdGVzIGJlaW5nIGNvbmNlcm5lZCB3aXRoIHRoZSBjb250ZW1wbGF0aW9uIG9mCgkJCQkJdHJ1dGgsIHRoZSBwb2xpdGljYWwgbGlmZSBtZWFucyBiZWluZyBvY2N1cGllZCB3aXRoIGhvbm9yYWJsZQoJCQkJCWFjdGl2aXRpZXMgKGFuZCB0aGVzZSBhcmUgdGhlIGFjdGl2aXRpZXMgdGhhdCBzcHJpbmcgZnJvbSBnb29kbmVzcyksCgkJCQkJYW5kIHRoZSBsaWZlIG9mIGVuam95bWVudCBpcyBjb25jZXJuZWQgd2l0aCB0aGUgcGxlYXN1cmVzIG9mIHRoZSBib2R5LgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC40IiB1bml0PSJMb2ViIGNoYXAiIC8+IE93aW5nIHRvIHRoaXMsCgkJCQkJZGlmZmVyZW50IHBlb3BsZSBnaXZlIHRoZSBuYW1lIG9mIGhhcHB5IHRvIGRpZmZlcmVudCBwZXJzb25zLCBhcyB3YXMKCQkJCQlzYWlkIGJlZm9yZSB0b287IGFuZCBBbmF4YWdvcmFzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZQoJCQkJCQlwaHlzaWNhbCBwaGlsb3NvcGhlciwgPGRhdGVSYW5nZSBhdXRobmFtZT0iLTUwMC8tNDI4IiBjbGFzcz0idHJhbnNsYXRpb24iIGZyb209Ii01MDAiIHRvPSItNDI4Ij41MDA8L2RhdGVSYW5nZT4tNDI4IEIuQy4sIGJvcm4gYXQgQ2xhem9tZW5hZSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMjUwMyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAyNTAzIj5Jb25pYTwvcGxhY2VOYW1lPiwgdGF1Z2h0IGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPi48L25vdGU+IG9mIENsYXpvbWVuYWUKCQkJCQl3aGVuIGFza2VkICdXaG8gaXMgdGhlIGhhcHBpZXN0IG1hbj8nIHNhaWQgJ05vbmUgb2YgdGhvc2Ugd2hvbSB5b3UKCQkJCQl0aGluaywgYnV0IGhlIHdvdWxkIHNlZW0gdG8geW91IGFuIG9kZCBzb3J0IG9mIHBlcnNvbi4nIEJ1dCBBbmF4YWdvcmFzCgkJCQkJYW5zd2VyZWQgaW4gdGhhdCB3YXkgYmVjYXVzZSBoZSBzYXcgdGhhdCB0aGUgbWFuIHdobyBwdXQgdGhlIHF1ZXN0aW9uCgkJCQkJc3VwcG9zZWQgaXQgdG8gYmUgaW1wb3NzaWJsZSB0byByZWNlaXZlIHRoZSBhcHBlbGxhdGlvbiAnaGFwcHknCgkJCQkJd2l0aG91dCBiZWluZyBncmVhdCBhbmQgYmVhdXRpZnVsIG9yIHJpY2gsIHdoZXJlYXMgaGUgaGltc2VsZiBwZXJoYXBzCgkJCQkJdGhvdWdodCB0aGF0IHRoZSBwZXJzb24gd2hvIGh1bWFubHkgc3BlYWtpbmcgZW5qb3lzIGJsaXNzIGlzIGhlIHRoYXQKCQkJCQlsaXZlcyBieSB0aGUgc3RhbmRhcmQgb2YganVzdGljZSB3aXRob3V0IHBhaW4gYW5kIGluIHB1cml0eSwgb3IKCQkJCQlwYXJ0aWNpcGF0ZXMgaW4gc29tZSBmb3JtIG9mIGRpdmluZSBjb250ZW1wbGF0aW9uLjxkYXRlUmFuZ2UgYXV0aG5hbWU9Ii01MDAvLTQyOCIgY2xhc3M9InRyYW5zbGF0aW9uIiBmcm9tPSItNTAwIiB0bz0iLTQyOCI+NTAwPC9kYXRlUmFuZ2U+LTQyOCBCLkMuLCBib3JuIGF0IENsYXpvbWVuYWUgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDEwMDI1MDMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMTAwMjUwMyI+SW9uaWE8L3BsYWNlTmFtZT4sIHRhdWdodCBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdGhlIG1hbiB3aG8gZGlzcGxheXMgdGhlIHZpcnR1ZXMgb2YKCQkJCQkJVGVtcGVyYW5jZSwgSnVzdGljZSBhbmQgV2lzZG9tICh0aGUgZm91cnRoIGNhcmRpbmFsIHZpcnR1ZSwKCQkJCQkJQ291cmFnZSwgaXMgb21pdHRlZCksIGVuaGFuY2VkIGJ5IHBsZWFzdXJlIG9yIGZyZWVkb20gZnJvbSBwYWluLgoJCQkJCQlUaGlzIHBhc3NhZ2UgaWxsdXN0cmF0ZXMgaG93IEFyaXN0b3RsZSBwcmVwYXJlZCB0aGUgd2F5IGZvciB0aGUKCQkJCQkJaGVkb25pc20gb2YgRXBpY3VydXMuPC9ub3RlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldoaWxlIHRoZXJlIGFyZSBtYW55CgkJCQkJZGlmZmVyZW50IHRoaW5ncyBhcyB0byB3aGljaCBpdCBpcyBub3QgZWFzeSB0byBtYWtlIGEgcmlnaHQganVkZ2VtZW50LAoJCQkJCXRoaXMgaXMgZXNwZWNpYWxseSB0aGUgY2FzZSB3aXRoIG9uZSBhYm91dCB3aGljaCBldmVyeWJvZHkgdGhpbmtzIHRoYXQKCQkJCQlpdCBpcyB2ZXJ5IGVhc3kgdG8ganVkZ2UgYW5kIHRoYXQgYW55Ym9keSBjYW4gZGVjaWRl4oCUdGhlCgkJCQkJcXVlc3Rpb24gd2hpY2ggb2YgdGhlIHRoaW5ncyBjb250YWluZWQgaW4gYmVpbmcgYWxpdmUgaXMgcHJlZmVyYWJsZSwKCQkJCQlhbmQgd2hpY2ggd2hlbiBhdHRhaW5lZCB3b3VsZCBmdWxseSBzYXRpc2Z5IGEgbWFuJ3MgZGVzaXJlLiBGb3IgbWFueQoJCQkJCW9mIGxpZmUncyBldmVudHMgYXJlIHN1Y2ggdGhhdCB0aGV5IGNhdXNlIG1lbiB0byB0aHJvdyBsaWZlCgkJCQkJYXdheSw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+Zm9yIGluc3RhbmNlLAoJCQkJCWRpc2Vhc2VzLCBleGNlc3NpdmUgcGFpbnMsIHN0b3Jtczsgc28gdGhhdCBpdCBpcyBjbGVhciB0aGF0IG9uIGFjY291bnQKCQkJCQlvZiB0aGVzZSB0aGluZ3MgYW55IHdheSBpdCB3b3VsZCBhY3R1YWxseSBiZSBwcmVmZXJhYmxlLCBpZiBzb21lb25lCgkJCQkJb2ZmZXJlZCB1cyB0aGUgY2hvaWNlLCBub3QgdG8gYmUgYm9ybiBhdCBhbGwuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJTb3BoLiBPQyAxMjI1IiB2YWxpZD0ieWVzIj5Tb3BoLiBPLkMuIDEyMjU8L2JpYmw+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrzhvbQgz4bhv6bOvc6xzrkgz4ThvbjOvSDhvIXPgM6xzr3PhM6xIM69zrnOuuG+twoJCQkJCQnOu+G9uc6zzr/OvTwvZm9yZWlnbj4uPC9ub3RlPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlNvcGguIE9DIDEyMjUiIHZhbGlkPSJ5ZXMiPlNvcGguIE8uQy4gMTIyNTwvYmlibD48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvOG9tCDPhuG/ps69zrHOuSDPhOG9uM69IOG8hc+AzrHOvc+EzrEgzr3Ouc664b63CgkJCQkJCc674b25zrPOv869PC9mb3JlaWduPi48L3RyYW5zbGF0aW9uPg=="
translation['1.1216a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBpbiBhZGRpdGlvbiwgdGhlIGtpbmQgb2YgbGlmZSB0aGF0IHBlb3BsZSBsaXZlCgkJCQkJd2hpbGUgc3RpbGwgY2hpbGRyZW4gaXMgbm90IGRlc2lyYWJsZeKAlGluIGZhY3Qgbm8gc2Vuc2libGUKCQkJCQlwZXJzb24gY291bGQgZW5kdXJlIHRvIGdvIGJhY2sgdG8gaXQgYWdhaW4uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBmdXJ0aGVyLCBtYW55IG9mIHRoZQoJCQkJCWV4cGVyaWVuY2VzIHRoYXQgY29udGFpbiBubyBwbGVhc3VyZSBub3IgcGFpbiwgYW5kIGFsc28gb2YgdGhvc2UgdGhhdAoJCQkJCWRvIGNvbnRhaW4gcGxlYXN1cmUgYnV0IHBsZWFzdXJlIG9mIGFuIGlnbm9ibGUga2luZCwgYXJlIHN1Y2ggdGhhdAoJCQkJCW5vbi1leGlzdGVuY2Ugd291bGQgYmUgYmV0dGVyIHRoYW4gYmVpbmcgYWxpdmUuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBnZW5lcmFsbHksIGlmIG9uZQoJCQkJCWNvbGxlY3RlZCB0b2dldGhlciB0aGUgd2hvbGUgb2YgdGhlIHRoaW5ncyB0aGF0IHRoZSB3aG9sZSBvZiBtYW5raW5kCgkJCQkJZG8gYW5kIGV4cGVyaWVuY2UgeWV0IGRvIGFuZCBleHBlcmllbmNlIHVud2lsbGluZ2x5LCBiZWNhdXNlIG5vdCBmb3IKCQkJCQl0aGUgc2FrZSBvZiB0aGUgdGhpbmdzIHRoZW1zZWx2ZXMsIGFuZCBpZiBvbmUgYWRkZWQgYW4gaW5maW5pdGUgZXh0ZW50CgkJCQkJb2YgdGltZSwgdGhlc2UgdGhpbmdzIHdvdWxkIG5vdCBjYXVzZSBhIG1hbiB0byBjaG9vc2UgdG8gYmUgYWxpdmUKCQkJCQlyYXRoZXIgdGhhbiBub3QgYWxpdmUuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS41IiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJQnV0IG1vcmVvdmVyLCBhbHNvIHRoZSBwbGVhc3VyZSBvZiBmb29kIG9yIG9mIHNleCBhbG9uZSwgd2l0aCB0aGUKCQkJCQlvdGhlciBwbGVhc3VyZXMgYWJzdHJhY3RlZCB0aGF0IGtub3dsZWRnZSBvciBzaWdodCBvciBhbnkgb3RoZXIgb2YgdGhlCgkJCQkJc2Vuc2VzIHByb3ZpZGVzIGZvciBodW1hbiBiZWluZ3MsIHdvdWxkIG5vdCBpbmR1Y2UgYW55Ym9keSB0byB2YWx1ZQoJCQkJCWxpZmUgaGlnaGVyIGlmIGhlIHdlcmUgbm90IHV0dGVybHkgc2xhdmlzaCwgZm9yIGl0IGlzIGNsZWFyIHRoYXQgdG8KCQkJCQlvbmUgbWFraW5nIHRoaXMgY2hvaWNlIHRoZXJlIHdvdWxkIGJlIG5vIGRpZmZlcmVuY2UgYmV0d2VlbiBiZWluZyBib3JuCgkJCQkJYSBiZWFzdCBvciBhIG1hbjsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gYXQgYWxsCgkJCQkJZXZlbnRzLCB0aGUgb3ggaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjgzMyI+RWd5cHQ8L3BsYWNlTmFtZT4sCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyMTZhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1216a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPndoaWNoIHRoZXkgcmV2ZXJlbmNlIGFzIEFwaXMsIGhhcyBhIGdyZWF0ZXIKCQkJCQlhYnVuZGFuY2Ugb2Ygc3VjaCBpbmR1bGdlbmNlcyB0aGFuIG1hbnkgbW9uYXJjaHMuIDwvdHJhbnNsYXRpb24+"
translation['1.1216a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS43IiB1bml0PSJMb2ViIGNoYXAiIC8+IE5vciBsaWtld2lzZSB3b3VsZCBhbnlvbmUKCQkJCQlkZXNpcmUgbGlmZSBmb3IgdGhlIHBsZWFzdXJlIG9mIHNsZWVwIGVpdGhlcjsgZm9yIHdoYXQgaXMgdGhlCgkJCQkJZGlmZmVyZW5jZSBiZXR3ZWVuIHNsdW1iZXJpbmcgd2l0aG91dCBiZWluZyBhd2FrZW5lZCBmcm9tIHRoZSBmaXJzdAoJCQkJCWRheSB0aWxsIHRoZSBsYXN0IG9mIGEgdGhvdXNhbmQgb3IgYW55IG51bWJlciBvZiB5ZWFycywgYW5kIGxpdmluZyBhCgkJCQkJdmVnZXRhYmxlIGV4aXN0ZW5jZT8gYW55IHdheSBwbGFudHMgc2VlbSB0byBwYXJ0aWNpcGF0ZSBpbiBsaWZlIG9mCgkJCQkJdGhhdCBraW5kOyBhbmQgc28gZG8gY2hpbGRyZW4gdG9vLCBpbmFzbXVjaCBhcyBhdCB0aGVpciBmaXJzdAoJCQkJCXByb2NyZWF0aW9uIGluIHRoZSBtb3RoZXIsIGFsdGhvdWdoIGFsaXZlLCB0aGV5IHN0YXkgYXNsZWVwIGFsbCB0aGUKCQkJCQl0aW1lLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBTbyB0aGF0IGl0IGlzIGNsZWFyCgkJCQkJZnJvbSBjb25zaWRlcmF0aW9ucyBvZiB0aGlzIHNvcnQgdGhhdCB0aGUgcHJlY2lzZSBuYXR1cmUgb2Ygd2VsbC1iZWluZwoJCQkJCWFuZCBvZiB0aGUgZ29vZCBpbiBsaWZlIGVzY2FwZXMgb3VyIGludmVzdGlnYXRpb24uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGl0IGlzIHNhaWQgdGhhdCB3aGVuIHNvbWVib2R5IHBlcnNpc3RlZCBpbiBwdXR0aW5nIHZhcmlvdXMKCQkJCQlkaWZmaWN1bHRpZXMgb2YgdGhpcyBzb3J0IHRvIEFuYXhhZ29yYXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAxLjEyMTViLjYiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjE1YiA2PC9iaWJsPgoJCQkJCQluLjwvbm90ZT4gYW5kIHdlbnQgb24gYXNraW5nIGZvciB3aGF0IG9iamVjdCBvbmUgc2hvdWxkIGNob29zZQoJCQkJCXRvIGNvbWUgaW50byBleGlzdGVuY2UgcmF0aGVyIHRoYW4gbm90LCBoZSByZXBsaWVkIGJ5IHNheWluZywgJ0ZvciB0aGUKCQkJCQlzYWtlIG9mIGNvbnRlbXBsYXRpbmcgdGhlIGhlYXZlbnMgYW5kIHRoZSB3aG9sZSBvcmRlciBvZiB0aGUKCQkJCQl1bml2ZXJzZS4nIEFuYXhhZ29yYXMgdGhlcmVmb3JlIHRob3VnaHQgdGhhdCB0aGUgYWx0ZXJuYXRpdmUgb2YgYmVpbmcKCQkJCQlhbGl2ZSB3YXMgdmFsdWFibGUgZm9yIHRoZSBzYWtlIG9mIHNvbWUga2luZCBvZiBrbm93bGVkZ2U7IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAxLjEyMTViLjYiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjE1YiA2PC9iaWJsPgoJCQkJCQluLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBidXQgdGhvc2Ugd2hvIGFzY3JpYmUgYmxpc3MKCQkJCQl0byBTYXJkYW5hcGFsbHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgbXl0aGljYWwga2luZyBvZgoJCQkJCQlBc3N5cmlhLCBwcm92ZXJiaWFsIGZvciBsdXh1cnksIGNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuICAgICAgICBFdGguIDEyOTViLjIyIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuCgkJCQkJCQlFdGguIDEyOTViIDIyPC9iaWJsPi48L25vdGU+IG9yIFNtaW5keXJpZGVzIG9mIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gICAgICAgIEV0aC4gMTI5NWIuMjIiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4KCQkJCQkJCUV0aC4gMTI5NWIgMjI8L2JpYmw+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3liYXJpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsU3liYXJpcyI+U3liYXJpczwvcGxhY2VOYW1lPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5HcmVlayBjb2xvbnkgaW4gUy4gSXRhbHkuIEZvciBTbWluZHlyaWRlcywgd2hvCgkJCQkJCQkJdHJhdmVsbGVkIHdpdGggMTAwMCBzbGF2ZXMgaW4gYXR0ZW5kYW5jZSwgc2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhkdC4gICAgICAgICAgIDYuMTI3IiB2YWxpZD0ieWVzIj5IZHQuCgkJCQkJCQkJCTYuMTI3PC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXRoLiA1LjI3MyI+QXRoZW5hZXVzIDUgcC4KCQkJCQkJCQkJCTI3MzwvYmlibD4uPC9ub3RlPiBvciBzb21lIG9mIHRoZSBvdGhlcnMgbGl2aW5nIHRoZSBsaWZlIG9mIGVuam95bWVudCwKCQkJCQlhbGwgYXBwZWFyIGZvciB0aGVpciBwYXJ0IHRvIHBsYWNlIGhhcHBpbmVzcyBpbiBkZWxpZ2h0OzxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhkdC4gICAgICAgICAgIDYuMTI3IiB2YWxpZD0ieWVzIj5IZHQuCgkJCQkJCQkJCTYuMTI3PC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXRoLiA1LjI3MyI+QXRoZW5hZXVzIDUgcC4KCQkJCQkJCQkJCTI3MzwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1216b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPiB3aGlsZSBhIGRpZmZlcmVudCBzZXQgd291bGQgbm90IGNob29zZSBlaXRoZXIKCQkJCQl3aXNkb20gb2YgYW55IGtpbmQgb3IgdGhlIGJvZGlseSBwbGVhc3VyZXMgaW4gcHJlZmVyZW5jZSB0byB0aGUKCQkJCQlhY3Rpb25zIHRoYXQgc3ByaW5nIGZyb20gZ29vZG5lc3M6IGF0IGFsbCBldmVudHMsIHNvbWUgcGVvcGxlIGNob29zZQoJCQkJCXRob3NlIGFjdGlvbnMgbm90IG9ubHkgZm9yIHRoZSBzYWtlIG9mIHJlcHV0YXRpb24gYnV0IGV2ZW4gd2hlbiB0aGV5CgkJCQkJYXJlIG5vdCBnb2luZyB0byBnZXQgYW55IGNyZWRpdC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCB0aGUgbWFqb3JpdHkgb2YgdGhvc2UgZW5nYWdlZCBpbiBwb2xpdGljcyBhcmUgbm90CgkJCQkJY29ycmVjdGx5IGRlc2lnbmF0ZWQgJ3BvbGl0aWNpYW5zLCcgZm9yIHRoZXkgYXJlIG5vdCB0cnVseSBwb2xpdGljYWwsCgkJCQkJc2luY2UgdGhlIHBvbGl0aWNhbCBtYW4gaXMgb25lIHdobyBwdXJwb3NlbHkgY2hvb3NlcyBub2JsZSBhY3Rpb25zIGZvcgoJCQkJCXRoZWlyIG93biBzYWtlLCB3aGVyZWFzIHRoZSBtYWpvcml0eSBlbWJyYWNlIHRoYXQgbW9kZSBvZiBsaWZlIGZvciB0aGUKCQkJCQlzYWtlIG9mIG1vbmV5IGFuZCBnYWluLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGF0IGhhcyBiZWVuIHNhaWQsIHRoZXJlZm9yZSwKCQkJCQlkZW1vbnN0cmF0ZXMgdGhhdCBhbGwgbWVuIGFzY3JpYmUgaGFwcGluZXNzIHRvIHRocmVlIG1vZGVzIG9mCgkJCQkJbGlmZeKAlHRoZSBwb2xpdGljYWwsIHRoZSBwaGlsb3NvcGhpYywgYW5kIHRoZSBsaWZlIG9mCgkJCQkJZW5qb3ltZW50Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgR3JlZWsgd29yZCBpcwoJCQkJCQlzcGVjaWFsbHkgYXNzb2NpYXRlZCB3aXRoIHNlbnN1YWwgcGxlYXN1cmVzLjwvbm90ZT4gQW1vbmcgdGhlc2UsCgkJCQkJdGhlIG5hdHVyZSBhbmQgcXVhbGl0eSBvZiB0aGUgcGxlYXN1cmUgY29ubmVjdGVkIHdpdGggdGhlIGJvZHkgYW5kCgkJCQkJd2l0aCBlbmpveW1lbnQsIGFuZCB0aGUgbWVhbnMgdGhhdCBwcm9jdXJlIGl0LCBhcmUgbm90IGhhcmQgdG8gc2VlOyBzbwoJCQkJCXRoYXQgaXQgaXMgbm90IG5lY2Vzc2FyeSBmb3IgdXMgdG8gaW5xdWlyZSB3aGF0IHRoZXNlIHBsZWFzdXJlcyBhcmUsCgkJCQkJYnV0IHdoZXRoZXIgdGhleSBjb25kdWNlIGF0IGFsbCB0byBoYXBwaW5lc3Mgb3Igbm90LCBhbmQgaG93IHRoZXkgc28KCQkJCQljb25kdWNlLCBhbmQsIGlmIGl0IGJlIHRoZSBjYXNlIHRoYXQgdGhlIG5vYmxlIGxpZmUgb3VnaHQgdG8gaGF2ZSBzb21lCgkJCQkJcGxlYXN1cmVzIGF0dGFjaGVkIHRvIGl0LCB3aGV0aGVyIHRoZXNlIGFyZSB0aGUgcGxlYXN1cmVzIHRoYXQgb3VnaHQKCQkJCQl0byBiZSBhdHRhY2hlZCwgb3Igd2hldGhlciB0aGVzZSBtdXN0IGJlIGVuam95ZWQgaW4gc29tZSBvdGhlciB3YXksCgkJCQkJd2hlcmVhcyB0aGUgcGxlYXN1cmVzIHdoaWNoIHBlb3BsZSByZWFzb25hYmx5IGJlbGlldmUgdG8gbWFrZSB0aGUKCQkJCQloYXBweSBtYW4ncyBsaWZlIHBsZWFzYW50IGFuZCBub3QgbWVyZWx5IHBhaW5sZXNzIGFyZSBkaWZmZXJlbnQKCQkJCQlvbmVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgdGhlc2UgbWF0dGVycyBtdXN0IGJlIGV4YW1pbmVkCgkJCQkJbGF0ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBwcm9taXNlZAoJCQkJCQlkaXNjdXNzaW9uIGRvZXMgbm90IG9jY3VyLCBidXQgc2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gICAgICAgIEV0aC4gMTE1M2IiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4KCQkJCQkJCUV0aC4gMTE1M2IgNy0yNTwvYmlibD4uPC9ub3RlPiBMZXQgdXMgZmlyc3QgY29uc2lkZXIKCQkJCQlHb29kbmVzcyBhbmQgV2lzZG9tPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiAgICAgICAgRXRoLiAxMTUzYiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLgoJCQkJCQkJRXRoLiAxMTUzYiA3LTI1PC9iaWJsPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAxLjEyMTRhLjMzIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTIxNGEgMzM8L2JpYmw+bi47IGJ1dCBwcmFjdGljYWwKCQkJCQkJd2lzZG9tIGlzIHNwZWNpYWxseSBpbXBsaWVkIGhlcmUuPC9ub3RlPuKAlHdoYXQgdGhlCgkJCQkJbmF0dXJlIG9mIGVhY2ggaXMsIGFuZCBhbHNvIHdoZXRoZXIgdGhleSB0aGVtc2VsdmVzIG9yIHRoZSBhY3Rpb25zCgkJCQkJdGhhdCBzcHJpbmcgZnJvbSB0aGVtIGFyZSBwYXJ0cyBvZiB0aGUgZ29vZCBsaWZlLCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gMS4xMjE0YS4zMyIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMTRhIDMzPC9iaWJsPm4uOyBidXQgcHJhY3RpY2FsCgkJCQkJCXdpc2RvbSBpcyBzcGVjaWFsbHkgaW1wbGllZCBoZXJlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjE2YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1216b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnNpbmNlIHRoYXQgdGhleSBhcmUgY29ubmVjdGVkIHdpdGggaGFwcGluZXNzIGlzIGFzc2VydGVkLAoJCQkJCWlmIG5vdCBieSBldmVyeWJvZHksIGF0IGFsbCBldmVudHMgYnkgYWxsIG9mIG1hbmtpbmQgd2hvIGFyZSB3b3J0aHkgb2YKCQkJCQljb25zaWRlcmF0aW9uLjwvdHJhbnNsYXRpb24+"
translation['1.1216b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BY2NvcmRpbmdseSBTb2NyYXRlcyB0aGUKCQkJCQlzZW5pb3I8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSB5b3VuZ2VyIFNvY3JhdGVzIHdhcwoJCQkJCQlhIHB1cGlsIG9mIFBsYXRvLjwvbm90ZT4gdGhvdWdodCB0aGF0IHRoZSBFbmQgaXMgdG8gZ2V0IHRvIGtub3cKCQkJCQl2aXJ0dWUsIGFuZCBoZSBwdXJzdWVkIGFuIGlucXVpcnkgaW50byB0aGUgbmF0dXJlIG9mIGp1c3RpY2UgYW5kCgkJCQkJY291cmFnZSBhbmQgZWFjaCBvZiB0aGUgZGl2aXNpb25zIG9mIHZpcnR1ZS4gQW5kIHRoaXMgd2FzIGEgcmVhc29uYWJsZQoJCQkJCXByb2NlZHVyZSwgc2luY2UgaGUgdGhvdWdodCB0aGF0IGFsbCB0aGUgdmlydHVlcyBhcmUgZm9ybXMgb2YKCQkJCQlrbm93bGVkZ2UsIHNvIHRoYXQga25vd2luZyBqdXN0aWNlIGFuZCBiZWluZyBqdXN0IG11c3QgZ28gdG9nZXRoZXIsCgkJCQkJZm9yIGFzIHNvb24gYXMgd2UgaGF2ZSBsZWFybnQgZ2VvbWV0cnkgYW5kIGFyY2hpdGVjdHVyZSwgd2UgYXJlCgkJCQkJYXJjaGl0ZWN0cyBhbmQgZ2VvbWV0cmljaWFuczsgb3dpbmcgdG8gd2hpY2ggaGUgdXNlZCB0byBpbnF1aXJlIHdoYXQKCQkJCQl2aXJ0dWUgaXMsIGJ1dCBub3QgaG93IGFuZCBmcm9tIHdoYXQgc291cmNlcyBpdCBpcyBwcm9kdWNlZC4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMTYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IGFsdGhvdWdoIHRoaXMKCQkJCQlkb2VzIGhhcHBlbiBpbiB0aGUgY2FzZSBvZiB0aGUgdGhlb3JldGljYWwgc2NpZW5jZXMsIGluYXNtdWNoIGFzCgkJCQkJYXN0cm9ub215IGFuZCBuYXR1cmFsIHNjaWVuY2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlCgkJCQkJCUdyZWVrIHRlcm0gcHJpbWFyaWx5IGRlbm90ZXMgYmlvbG9neSwgcmF0aGVyIHRoYW4gcGh5c2ljcyBpbiB0aGUKCQkJCQkJbW9kZXJuIHNlbnNlICh3aXRoIHdoaWNoIGNvbnRyYXN0IHRoZSBtb2Rlcm4gbGltaXRhdGlvbiBvZiB0aGUKCQkJCQkJdGVybSAncGh5c2lvbG9neSwnIGFuZCBvZiAncGh5c2ljJyBpbiB0aGUgc2Vuc2Ugb2YgbWVkaWNpbmUpOwoJCQkJCQlhY2NvcmRpbmdseSBpdCBkb2VzIG5vdCBoZXJlIGluY2x1ZGUgYXN0cm9ub215Ljwvbm90ZT4gYW5kCgkJCQkJZ2VvbWV0cnkgaGF2ZSBubyBvdGhlciBFbmQgZXhjZXB0IHRvIGdldCB0byBrbm93IGFuZCB0byBjb250ZW1wbGF0ZQoJCQkJCXRoZSBuYXR1cmUgb2YgdGhlIHRoaW5ncyB0aGF0IGFyZSB0aGUgc3ViamVjdHMgb2YgdGhlIHNjaWVuY2VzCgkJCQkJKGFsdGhvdWdoIGl0IGlzIHRydWUgdGhhdCB0aGV5IG1heSBxdWl0ZSBwb3NzaWJseSBiZSB1c2VmdWwgdG8gdXMKCQkJCQlhY2NpZGVudGFsbHkgZm9yIG1hbnkgb2Ygb3VyIG5lY2Vzc2FyeSByZXF1aXJlbWVudHMpLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMTciIHVuaXQ9IkxvZWIgY2hhcCIgLz4geWV0IHRoZSBFbmQgb2YgdGhlIHByb2R1Y3RpdmUKCQkJCQlzY2llbmNlcyBpcyBzb21ldGhpbmcgZGlmZmVyZW50IGZyb20gc2NpZW5jZSBhbmQga25vd2xlZGdlLCBmb3IKCQkJCQlleGFtcGxlIHRoZSBFbmQgb2YgbWVkaWNpbmUgaXMgaGVhbHRoIGFuZCB0aGF0IG9mIHBvbGl0aWNhbCBzY2llbmNlCgkJCQkJb3JkZXJlZCBnb3Zlcm5tZW50LCBvciBzb21ldGhpbmcgb2YgdGhhdCBzb3J0LCBkaWZmZXJlbnQgZnJvbSBtZXJlCgkJCQkJa25vd2xlZGdlIG9mIHRoZSBzY2llbmNlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMTgiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQWx0aG91Z2gsIHRoZXJlZm9yZSwgaXQgaXMgZmluZSBldmVuIHRvIGF0dGFpbiBhIGtub3dsZWRnZSBvZiB0aGUKCQkJCQl2YXJpb3VzIGZpbmUgdGhpbmdzLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbGwgdGhlCgkJCQkJc2FtZSBuZXZlcnRoZWxlc3MgaW4gdGhlIGNhc2Ugb2YgZ29vZG5lc3MgaXQgaXMgbm90IHRoZSBrbm93bGVkZ2Ugb2YKCQkJCQlpdHMgZXNzZW50aWFsIG5hdHVyZSB0aGF0IGlzIG1vc3QgdmFsdWFibGUgYnV0IHRoZSBhc2NlcnRhaW5tZW50IG9mCgkJCQkJdGhlIHNvdXJjZXMgdGhhdCBwcm9kdWNlIGl0LiBGb3Igb3VyIGFpbSBpcyBub3QgdG8ga25vdyB3aGF0IGNvdXJhZ2UKCQkJCQlpcyBidXQgdG8gYmUgY291cmFnZW91cywgbm90IHRvIGtub3cgd2hhdCBqdXN0aWNlIGlzIGJ1dCB0byBiZSBqdXN0LAoJCQkJCWluIHRoZSBzYW1lIHdheSBhcyB3ZSB3YW50IHRvIGJlIGhlYWx0aHkgcmF0aGVyIHRoYW4gdG8gYXNjZXJ0YWluIHdoYXQKCQkJCQloZWFsdGggaXMsIGFuZCB0byBiZSBpbiBnb29kIGNvbmRpdGlvbiBvZiBib2R5IHJhdGhlciB0aGFuIHRvCgkJCQkJYXNjZXJ0YWluIHdoYXQgZ29vZCBib2RpbHkgY29uZGl0aW9uIGlzLjwvdHJhbnNsYXRpb24+"
translation['1.1217a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBhYm91dCBhbGwKCQkJCQl0aGVzZSBtYXR0ZXJzIHRoZSBlbmRlYXZvciBtdXN0IGJlIG1hZGUgdG8gc2VlayB0byBjb252aW5jZSBieSBtZWFucwoJCQkJCW9mIHJhdGlvbmFsIGFyZ3VtZW50cywgdXNpbmcgb2JzZXJ2ZWQgZmFjdHMgYXMgZXZpZGVuY2VzIGFuZCBleGFtcGxlcy4KCQkJCQlGb3IgdGhlIGJlc3QgdGhpbmcgd291bGQgYmUgaWYgYWxsIG1hbmtpbmQgd2VyZSBzZWVuIHRvIGJlIGluCgkJCQkJYWdyZWVtZW50IHdpdGggdGhlIHZpZXdzIHRoYXQgd2lsbCBiZSBzdGF0ZWQsIGJ1dCBmYWlsaW5nIHRoYXQsIGF0IGFueQoJCQkJCXJhdGUgdGhhdCBhbGwgc2hvdWxkIGFncmVlIGluIHNvbWUgd2F5LiBBbmQgdGhpcyB0aGV5IHdpbGwgZG8gaWYgbGVkCgkJCQkJdG8gY2hhbmdlIHRoZWlyIGdyb3VuZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IgcGVyaGFwcwoJCQkJCQknbGVkIG9uIHN0ZXAgYnkgc3RlcC4nPC9ub3RlPiBmb3IgZXZlcnlvbmUgaGFzIHNvbWV0aGluZwoJCQkJCXJlbGF0aXZlIHRvIGNvbnRyaWJ1dGUgdG8gdGhlIHRydXRoLCBhbmQgd2UgbXVzdCBzdGFydCBmcm9tIHRoaXMgdG8KCQkJCQlnaXZlIGEgc29ydCBvZiBwcm9vZiBhYm91dCBvdXIgdmlld3M7IGZvciBmcm9tIHN0YXRlbWVudHMgdGhhdCBhcmUKCQkJCQl0cnVlIGJ1dCBub3QgY2xlYXJseSBleHByZXNzZWQsIGFzIHdlIGFkdmFuY2UsIGNsZWFybmVzcyB3aWxsIGFsc28gYmUKCQkJCQlhdHRhaW5lZCwgaWYgYXQgZXZlcnkgc3RhZ2Ugd2UgYWRvcHQgbW9yZSBzY2llbnRpZmljIHBvc2l0aW9ucyBpbgoJCQkJCWV4Y2hhbmdlIGZvciB0aGUgY3VzdG9tYXJ5IGNvbmZ1c2VkIHN0YXRlbWVudHMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBpbiBldmVyeSBpbnZlc3RpZ2F0aW9uCgkJCQkJYXJndW1lbnRzIHN0YXRlZCBpbiBwaGlsb3NvcGhpY2FsIGZvcm0gYXJlIGRpZmZlcmVudCBmcm9tIHRob3NlIHRoYXQKCQkJCQlhcmUgbm9uLXBoaWxvc29waGljYWw7IGhlbmNlIHdlIG11c3Qgbm90IHRoaW5rIHRoYXQgdGhlb3JldGljYWwgc3R1ZHkKCQkJCQlvZiBzdWNoIGEgc29ydCBhcyB0byBtYWtlIG1hbmlmZXN0IG5vdCBvbmx5IHRoZSBuYXR1cmUgb2YgYSB0aGluZyBidXQKCQkJCQlhbHNvIGl0cyBjYXVzZSBpcyBzdXBlcmZsdW91cyBldmVuIGZvciB0aGUgcG9saXRpY2FsIHN0dWRlbnQsIHNpbmNlCgkJCQkJdGhhdCBpcyB0aGUgcGhpbG9zb3BoaWMgcHJvY2VkdXJlIGluIGV2ZXJ5IGZpZWxkIG9mIGlucXVpcnkuCgkJCQkJTmV2ZXJ0aGVsZXNzIHRoaXMgcmVxdWlyZXMgbXVjaCBjYXV0aW9uLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIxN2EiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['1.1217a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1217a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+Rm9yIGJlY2F1c2UgdG8gc2F5IG5vdGhpbmcgYXQKCQkJCQlyYW5kb20gYnV0IHVzZSByZWFzb25lZCBhcmd1bWVudCBzZWVtcyB0byBtYXJrIGEgcGhpbG9zb3BoZXIsIHNvbWUKCQkJCQlwZW9wbGUgb2Z0ZW4gd2l0aG91dCBiZWluZyBkZXRlY3RlZCBhZHZhbmNlIGFyZ3VtZW50cyB0aGF0IGFyZSBub3QKCQkJCQlnZXJtYW5lIHRvIHRoZSBzdWJqZWN0IHVuZGVyIHRyZWF0bWVudCBhbmQgdGhhdCBoYXZlIG5vdGhpbmcgaW4gdGhlbQoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi40IiB1bml0PSJMb2ViIGNoYXAiIC8+IChhbmQgdGhleSBkbyB0aGlzCgkJCQkJc29tZXRpbWVzIHRocm91Z2ggaWdub3JhbmNlIGFuZCBzb21ldGltZXMgZnJvbSBjaGFybGF0YW5yeSksIHdoaWNoCgkJCQkJYnJpbmcgaXQgYWJvdXQgdGhhdCBldmVuIG1lbiBvZiBleHBlcmllbmNlIGFuZCBwcmFjdGljYWwgY2FwYWNpdHkgYXJlCgkJCQkJdGFrZW4gaW4gYnkgdGhlc2UgcGVvcGxlLCB3aG8gbmVpdGhlciBwb3NzZXNzIG5vciBhcmUgY2FwYWJsZSBvZgoJCQkJCWNvbnN0cnVjdGl2ZSBvciBwcmFjdGljYWwgdGhvdWdodC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBwcmFjdGljYWwgbWVuIG9mdGVuIHRoaW5rIHRoYXQgYW55IHN0cmluZyBvZiBhcmd1bWVudHMKCQkJCQkJY29uc3RpdHV0ZXMgcGhpbG9zb3BoeSwgdGhvdWdoIHRoZSBhcmd1ZXJzIG1heSBiZSBtZXJlCgkJCQkJCWNoYXJsYXRhbnMuPC9ub3RlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi41IiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJQW5kIHRoaXMgYmVmYWxscyB0aGVtIG93aW5nIHRvIGxhY2sgb2YgZWR1Y2F0aW9u4oCUZm9yIGluCgkJCQkJcmVzcGVjdCBvZiBlYWNoIHN1YmplY3QgaW5hYmlsaXR5IHRvIGRpc3Rpbmd1aXNoIGFyZ3VtZW50cyBnZXJtYW5lIHRvCgkJCQkJdGhlIHN1YmplY3QgZnJvbSB0aG9zZSBmb3JlaWduIHRvIGl0IGlzIGxhY2sgb2YgZWR1Y2F0aW9uLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgaXQgaXMgYWxzbyB3ZWxsIHRvIGp1ZGdlCgkJCQkJc2VwYXJhdGVseSB0aGUgc3RhdGVtZW50IG9mIHRoZSBjYXVzZSBhbmQgdGhlIGRlbW9uc3RyYXRlZCBmYWN0LCBib3RoCgkJCQkJZm9yIHRoZSByZWFzb24gc3RhdGVkIGp1c3Qgbm93LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4xCgkJCQkJCWFib3ZlLjwvbm90ZT4gdGhhdCBpdCBpcyBub3QgcHJvcGVyIGluIHJlZ2FyZCB0byBhbGwgdGhpbmdzIHRvCgkJCQkJYXR0ZW5kIHRvIHRoZW9yZXRpY2FsIGFyZ3VtZW50cywgYnV0IG9mdGVuIHJhdGhlciB0byB0aGUgZmFjdHMgb2YKCQkJCQlvYnNlcnZhdGlvbiAod2hlcmVhcyBub3cgd2hlbiBtZW4gYXJlIHVuYWJsZSB0byByZWZ1dGUgYW4gYXJndW1lbnQKCQkJCQl0aGV5IGFyZSBmb3JjZWQgdG8gYmVsaWV2ZSB3aGF0IGhhcyBiZWVuIHNhaWQpLCBhbmQgYWxzbyBiZWNhdXNlCgkJCQkJb2Z0ZW4sIGFsdGhvdWdoIHRoZSByZXN1bHQgdGhhdCBzZWVtcyB0byBoYXZlIGJlZW4gcHJvdmVkIGJ5IHRoZQoJCQkJCWFyZ3VtZW50cyBpcyB0cnVlLCBpdCBpcyBub3QgdHJ1ZSBiZWNhdXNlIG9mIHRoZSBjYXVzZSBhc3NlcnRlZCBpbiB0aGUKCQkJCQlhcmd1bWVudC4gRm9yIGl0IGlzIHBvc3NpYmxlIHRvIHByb3ZlIHRydXRoIGJ5IGZhbHNlaG9vZCwgYXMgaXMgY2xlYXIKCQkJCQlmcm9tIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkFuYWx5dGljczwvdGl0bGU+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuCgkJCQkJCWEgcHJvcG9zaXRpb24gdGhhdCBsb2dpY2FsbHkgZm9sbG93cyBmcm9tIHByZW1pc3NlcyB0aGF0IGFyZQoJCQkJCQlmYWxzZSBtYXkgYmUgYSBhIHRydWUgb25lOiBzZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gQVByLiA1M2IuMjYiPkFyaXN0b3QuIEFuYWwuIFByLiA1M2IgMjZmZi48L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiAgICAgICAgIEFQby4gODhhLjIwIj5BcmlzdG90LgoJCQkJCQkJQW5hbC4gUG9zdC4gODhhIDIwZmYuPC9iaWJsPiBBcmlzdG90bGUncyBzaW1wbGVzdCBleGFtcGxlCgkJCQkJCWlzIHRoZSBzeWxsb2dpc20gJ0EgbWFuIGlzIGEgc3RvbmUsIGJ1dCBhIHN0b25lIGlzIGFuIGFuaW1hbCwKCQkJCQkJdGhlcmVmb3JlIGEgbWFuIGlzIGFuIGFuaW1hbC4nPC9ub3RlPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEFQci4gNTNiLjI2Ij5BcmlzdG90LiBBbmFsLiBQci4gNTNiIDI2ZmYuPC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gICAgICAgICBBUG8uIDg4YS4yMCI+QXJpc3RvdC4KCQkJCQkJCUFuYWwuIFBvc3QuIDg4YSAyMGZmLjwvYmlibD4gQXJpc3RvdGxlJ3Mgc2ltcGxlc3QgZXhhbXBsZQoJCQkJCQlpcyB0aGUgc3lsbG9naXNtICdBIG1hbiBpcyBhIHN0b25lLCBidXQgYSBzdG9uZSBpcyBhbiBhbmltYWwsCgkJCQkJCXRoZXJlZm9yZSBhIG1hbiBpcyBhbiBhbmltYWwuJzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIHByZWZhdG9yeQoJCQkJCXJlbWFya3MgaGF2aW5nIGFsc28gYmVlbiBtYWRlLCBsZXQgdXMgcHJvY2VlZCBieSBzdGFydGluZyBmaXJzdCBmcm9tCgkJCQkJdGhlIGZpcnN0c3RhdGVtZW50cywgd2hpY2gsIGFzIGhhcyBiZWVuIHNhaWQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPgoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gMS4xMjE2Yi4zMiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMTZiIDMyZmYuPC9iaWJsPgoJCQkJCTwvbm90ZT4gYXJlIG5vdCBjbGVhcmx5IGV4cHJlc3NlZCw8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gMS4xMjE2Yi4zMiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMTZiIDMyZmYuPC9iaWJsPgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hZnRlcndhcmRzIHNlZWtpbmcgdG8gZGlzY292ZXIgY2xlYXJseSB0aGUgZXNzZW50aWFsCgkJCQkJbmF0dXJlIG9mIGhhcHBpbmVzcy4gPC90cmFuc2xhdGlvbj4="
translation['1.1217b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IE5vdwoJCQkJCWl0IGlzIGFncmVlZCB0aGF0IGhhcHBpbmVzcyBpcyB0aGUgZ3JlYXRlc3QgYW5kIGJlc3Qgb2YgaHVtYW4gZ29vZHMKCQkJCQkoYW5kIHdlIHNheSAnaHVtYW4nIGJlY2F1c2UgdGhlcmUgbWlnaHQgdmVyeSBsaWtlbHkgYWxzbyBiZSBhCgkJCQkJaGFwcGluZXNzIGJlbG9uZ2luZyB0byBzb21lIGhpZ2hlciBiZWluZywgZm9yIGluc3RhbmNlIGEgZ29kKTsKCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBzaW5jZSBub25lIG9mIHRoZQoJCQkJCW90aGVyIGFuaW1hbHMsIHdoaWNoIGFyZSBpbmZlcmlvciBpbiBuYXR1cmUgdG8gbWVuLCBzaGFyZSBpbiB0aGUKCQkJCQlkZXNpZ25hdGlvbiAnaGFwcHksJyBmb3IgYSBob3JzZSBpcyBub3QgaGFwcHksIG5vciBpcyBhIGJpcmQgbm9yIGEKCQkJCQlmaXNoIG5vciBhbnkgb3RoZXIgZXhpc3RpbmcgdGhpbmcgd2hvc2UgZGVzaWduYXRpb24gZG9lcyBub3QgaW5kaWNhdGUKCQkJCQl0aGF0IGl0IHBvc3Nlc3NlcyBpbiBpdHMgbmF0dXJlIGEgc2hhcmUgb2Ygc29tZXRoaW5nIGRpdmluZSwgYnV0IGl0IGlzCgkJCQkJYnkgc29tZSBvdGhlciBtb2RlIG9mIHBhcnRpY2lwYXRpbmcgaW4gdGhpbmdzIGdvb2QgdGhhdCBvbmUgb2YgdGhlbQoJCQkJCWhhcyBhIGJldHRlciBsaWZlIGFuZCBhbm90aGVyIGEgd29yc2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHRoZSBmYWN0IHRoYXQKCQkJCQl0aGlzIGlzIHNvIG11c3QgYmUgY29uc2lkZXJlZCBsYXRlci48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBwcm9taXNlIGlzIG5vdCBrZXB0Ljwvbm90ZT4gQXQgdGhlIHByZXNlbnQKCQkJCQlsZXQgdXMgc2F5IHRoYXQgYW1vbmcgdGhpbmdzIGdvb2Qgc29tZSBhcmUgd2l0aGluIHRoZSByYW5nZSBvZiBhY3Rpb24KCQkJCQlmb3IgYSBodW1hbiBiZWluZyBhbmQgb3RoZXJzIGFyZSBub3QuIEFuZCB3ZSBtYWtlIHRoaXMgZGlzdGluY3Rpb24gZm9yCgkJCQkJdGhlIHJlYXNvbiB0aGF0IHNvbWUgZXhpc3RpbmcgdGhpbmdzIGRvIG5vdCBwYXJ0aWNpcGF0ZSBpbiBjaGFuZ2UgYXQKCQkJCQlhbGwsIGFuZCB0aGVyZWZvcmUgc29tZSBnb29kIHRoaW5ncyBkbyBub3QsIGFuZCB0aGVzZSBhcmUgcGVyaGFwcyBpbgoJCQkJCXRoZWlyIG5hdHVyZSB0aGUgYmVzdCB0aGluZ3M7IGFuZCBzb21lIHRoaW5ncywgdGhvdWdoIHByYWN0aWNhYmxlLCBhcmUKCQkJCQlvbmx5IHByYWN0aWNhYmxlIGZvciBiZWluZ3Mgc3VwZXJpb3IgdG8gdXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy41IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBpbmFzbXVjaCBhcyAncHJhY3RpY2FibGUnCgkJCQkJaGFzIHR3byBtZWFuaW5ncyAoZm9yIGJvdGggdGhlIEVuZHMgZm9yIHdoaWNoIHdlIGFjdCBhbmQgdGhlIGFjdGlvbnMKCQkJCQl0aGF0IHdlIGRvIGFzIG1lYW5zIHRvIHRob3NlIEVuZHMgaGF2ZSB0byBkbyB3aXRoIGFjdGlvbuKAlGZvcgoJCQkJCWV4YW1wbGUgd2UgY2xhc3MgYW1vbmcgdGhpbmdzIHByYWN0aWNhYmxlIGJvdGggaGVhbHRoIGFuZCB3ZWFsdGggYW5kCgkJCQkJdGhlIHB1cnN1aXRzIHRoYXQgYXJlIGZvbGxvd2VkIGZvciB0aGUgc2FrZSBvZiBoZWFsdGggYW5kIHdlYWx0aCwKCQkJCQloZWFsdGh5IGV4ZXJjaXNlIGFuZCBsdWNyYXRpdmUgYnVzaW5lc3MpLCBpdCBpcyBjbGVhciB0aGF0IGhhcHBpbmVzcwoJCQkJCW11c3QgYmUgc2V0IGRvd24gYXMgdGhlIGJlc3Qgb2YgdGhlIHRoaW5ncyBwcmFjdGljYWJsZSBmb3IgYSBodW1hbgoJCQkJCWJlaW5nLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIxN2IiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['1.1217b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1217b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlIG11c3QgY29uc2lkZXIsIHRoZXJlZm9yZSwKCQkJCQl3aGF0IHRoZSBiZXN0IGlzLCBhbmQgaW4gaG93IG1hbnkgc2Vuc2VzIHRoZSB0ZXJtIGlzIHVzZWQuIFRoZSBhbnN3ZXIKCQkJCQlzZWVtcyB0byBiZSBwcmluY2lwYWxseSBjb250YWluZWQgaW4gdGhyZWUgdmlld3MuIEZvciBpdCBpcyBzYWlkIHRoYXQKCQkJCQl0aGUgYmVzdCBvZiBhbGwgdGhpbmdzIGlzIHRoZSBBYnNvbHV0ZSBHb29kLCBhbmQgdGhhdCB0aGUgQWJzb2x1dGUKCQkJCQlHb29kIGlzIHRoYXQgd2hpY2ggaGFzIHRoZSBhdHRyaWJ1dGVzIG9mIGJlaW5nIHRoZSBmaXJzdCBvZiBnb29kcyBhbmQKCQkJCQlvZiBiZWluZyBieSBpdHMgcHJlc2VuY2UgdGhlIGNhdXNlIHRvIHRoZSBvdGhlciBnb29kcyBvZiB0aGVpciBiZWluZwoJCQkJCWdvb2Q7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IGFuZCBib3RoIG9mIHRoZXNlCgkJCQkJYXR0cmlidXRlcywgaXQgaXMgc2FpZCwgYmVsb25nIHRvIHRoZSBGb3JtPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8uM604b2zzrE8L2ZvcmVpZ24+IGlzIGhlcmUKCQkJCQkJdXNlZCBpbiBpdHMgUGxhdG9uaWMgc2Vuc2UsIGFzIGEgc3lub255bSBmb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrXhvLbOtM6/z4I8L2ZvcmVpZ24+LCBjbGFzcy1mb3JtLCB0byBkZW5vdGUgdGhlCgkJCQkJCXBlcm1hbmVudCBpbW1hdGVyaWFsIHJlYWxpdHkgdGhhdCB1bmRlcmxpZXMgYW55IGdyb3VwIG9mIHRoaW5ncwoJCQkJCQljbGFzc2VkIHRvZ2V0aGVyIGluIHZpcnR1ZSBvZiBwb3NzZXNzaW5nIGEgY29tbW9uIHF1YWxpdHkuIEFuCgkJCQkJCTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8sM604b2zzrE8L2ZvcmVpZ24+IGlzIHBlcmNlcHRpYmxlIG9ubHkKCQkJCQkJYnkgdGhlIG1pbmQsIGJ1dCB0aGUgd29yZCBkb2VzIG5vdCBkZW5vdGUgdGhlIGNvbnRlbnQgb2YgYQoJCQkJCQltZW50YWwgcGVyY2VwdGlvbiwgYXMgZG9lcyB0aGUgZGVyaXZhdGl2ZSAnaWRlYScgaW4gb3JkaW5hcnkKCQkJCQkJRW5nbGlzaC48L25vdGU+IG9mIGdvb2QgKEkgbWVhbiBib3RoIGJlaW5nIHRoZSBmaXJzdCBvZiBnb29kcwoJCQkJCWFuZCBiZWluZyBieSBpdHMgcHJlc2VuY2UgdGhlIGNhdXNlIHRvIHRoZSBvdGhlciBnb29kcyBvZiB0aGVpciBiZWluZwoJCQkJCWdvb2QpLCBzaW5jZSBpdCBpcyBvZiB0aGF0IEZvcm0gdGhhdCBnb29kbmVzcyBpcyBtb3N0IHRydWx5IHByZWRpY2F0ZWQKCQkJCQkoaW5hc211Y2ggYXMgdGhlIG90aGVyIGdvb2RzIGFyZSBnb29kIGJ5IHBhcnRpY2lwYXRpb24gaW4gYW5kCgkJCQkJcmVzZW1ibGFuY2UgdG8gdGhlIEZvcm0gb2YgZ29vZCkgYW5kIGFsc28gaXQgaXMgdGhlIGZpcnN0IG9mIGdvb2RzLAoJCQkJCWZvciB0aGUgZGVzdHJ1Y3Rpb24gb2YgdGhhdCB3aGljaCBpcyBwYXJ0aWNpcGF0ZWQgaW4gaW52b2x2ZXMgdGhlCgkJCQkJZGVzdHJ1Y3Rpb24gb2YgdGhlIHRoaW5ncyBwYXJ0aWNpcGF0aW5nIGluIHRoZSBGb3JtICh3aGljaCBnZXQgdGhlaXIKCQkJCQlkZXNpZ25hdGlvbiBieSBwYXJ0aWNpcGF0aW5nIGluIGl0KSwgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4by4zrThvbPOsTwvZm9yZWlnbj4gaXMgaGVyZQoJCQkJCQl1c2VkIGluIGl0cyBQbGF0b25pYyBzZW5zZSwgYXMgYSBzeW5vbnltIGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OteG8ts60zr/PgjwvZm9yZWlnbj4sIGNsYXNzLWZvcm0sIHRvIGRlbm90ZSB0aGUKCQkJCQkJcGVybWFuZW50IGltbWF0ZXJpYWwgcmVhbGl0eSB0aGF0IHVuZGVybGllcyBhbnkgZ3JvdXAgb2YgdGhpbmdzCgkJCQkJCWNsYXNzZWQgdG9nZXRoZXIgaW4gdmlydHVlIG9mIHBvc3Nlc3NpbmcgYSBjb21tb24gcXVhbGl0eS4gQW4KCQkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4bywzrThvbPOsTwvZm9yZWlnbj4gaXMgcGVyY2VwdGlibGUgb25seQoJCQkJCQlieSB0aGUgbWluZCwgYnV0IHRoZSB3b3JkIGRvZXMgbm90IGRlbm90ZSB0aGUgY29udGVudCBvZiBhCgkJCQkJCW1lbnRhbCBwZXJjZXB0aW9uLCBhcyBkb2VzIHRoZSBkZXJpdmF0aXZlICdpZGVhJyBpbiBvcmRpbmFyeQoJCQkJCQlFbmdsaXNoLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IGFuZCB0aGF0IGlzIHRoZSByZWxhdGlvbiBleGlzdGluZyBiZXR3ZWVuIHdoYXQKCQkJCQlpcyBwcmltYXJ5IGFuZCB3aGF0IGlzIHN1YnNlcXVlbnQ7IHNvIHRoYXQgdGhlIEZvcm0gb2YgZ29vZCBpcyB0aGUKCQkJCQlBYnNvbHV0ZSBHb29kLCBpbmFzbXVjaCBhcyB0aGUgRm9ybSBvZiBnb29kIGlzIHNlcGFyYWJsZSBmcm9tIHRoZQoJCQkJCXRoaW5ncyB0aGF0IHBhcnRpY2lwYXRlIGluIGl0LCBhcyBhcmUgdGhlIG90aGVyIEZvcm1zIGFsc28uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGEgdGhvcm91Z2ggZXhhbWluYXRpb24gb2YgdGhpcyBvcGluaW9uIGJlbG9uZ3MgdG8gYW5vdGhlciBjb3Vyc2UKCQkJCQlvZiBzdHVkeSwgYW5kIG9uZSB0aGF0IGZvciB0aGUgbW9zdCBwYXJ0IG5lY2Vzc2FyaWx5IGxpZXMgbW9yZSBpbiB0aGUKCQkJCQlmaWVsZCBvZiBMb2dpYywgZm9yIHRoYXQgaXMgdGhlIG9ubHkgc2NpZW5jZSBkZWFsaW5nIHdpdGggYXJndW1lbnRzCgkJCQkJdGhhdCBhcmUgYXQgdGhlIHNhbWUgdGltZSBkZXN0cnVjdGl2ZSBhbmQgZ2VuZXJhbC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IGlmIHdlIGFyZSB0byBzcGVhayBhYm91dAoJCQkJCWl0IGNvbmNpc2VseSw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+d2Ugc2F5IHRoYXQgaW4KCQkJCQl0aGUgZmlyc3QgcGxhY2UgdG8gYXNzZXJ0IHRoZSBleGlzdGVuY2Ugb2YgYSBGb3JtIG5vdCBvbmx5IG9mIGdvb2QgYnV0CgkJCQkJb2YgYW55dGhpbmcgZWxzZSBpcyBhbiBleHByZXNzaW9uIG9mIGxvZ2ljIGFuZCBhIG1lcmUgYWJzdHJhY3Rpb24gKGJ1dAoJCQkJCXRoaXMgaGFzIGJlZW4gY29uc2lkZXJlZCBpbiB2YXJpb3VzIHdheXMgYm90aCBpbiBleHRyYW5lb3VzCgkJCQkJZGlzY291cnNlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgdXNlIG9mIHRoaXMKCQkJCQkJcGhyYXNlIGJ5IEFyaXN0b3RsZSBlbHNld2hlcmUgc2VlbXMgdG8gc2hvdyB0aGF0IGl0IGRlbm90ZXMKCQkJCQkJZG9jdHJpbmVzLCByZWNvcmRlZCBpbiBib29rcyBvciBmYW1pbGlhciBpbiBkZWJhdGUsIHRoYXQgd2VyZQoJCQkJCQlub3QgcGVjdWxpYXIgdG8gdGhlIFBlcmlwYXRldGljIHNjaG9vbC48L25vdGU+IGFuZCBpbiB0aG9zZSBvbgoJCQkJCXBoaWxvc29waGljYWwgbGluZXMpOyA8L3RyYW5zbGF0aW9uPg=="
translation['1.1218a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC42IiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJbmV4dCwgZXZlbiBncmFudGluZyB0aGF0IEZvcm1zIGFuZCB0aGUgRm9ybSBvZiBnb29kIGV4aXN0IGluIHRoZQoJCQkJCWZ1bGxlc3Qgc2Vuc2UsIHN1cmVseSB0aGlzIGlzIG9mIG5vIHByYWN0aWNhbCB2YWx1ZSBmb3IgdGhlIGdvb2QgbGlmZQoJCQkJCW9yIGZvciBjb25kdWN0LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC43IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZvciAnZ29vZCcgaGFzIG1hbnkgc2Vuc2VzLCBpbiBmYWN0IGFzIG1hbnkKCQkJCQlhcyAnYmVpbmcuJyBGb3IgdGhlIHRlcm0gJ2lzLCcgYXMgaXQgaGFzIGJlZW4gYW5hbHl6ZWQgaW4gb3RoZXIgd29ya3MsCgkJCQkJc2lnbmlmaWVzIG5vdyBzdWJzdGFuY2UsIG5vdyBxdWFsaXR5LCBub3cgcXVhbnRpdHksIG5vdyB0aW1lLCBhbmQgaW4KCQkJCQlhZGRpdGlvbiB0byB0aGVzZSBtZWFuaW5ncyBpdCBjb25zaXN0cyBub3cgaW4gdW5kZXJnb2luZyBjaGFuZ2UgYW5kCgkJCQkJbm93IGluIGNhdXNpbmcgaXQ7IGFuZCB0aGUgZ29vZCBpcyBmb3VuZCBpbiBlYWNoIG9mIHRoZXNlIGNhc2VzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gY2F0ZWdvcmllcy4gVGhlIGxhc3QgdHdvCgkJCQkJCXNwZWNpZmllZCBhcmUgZWxzZXdoZXJlIGRlc2lnbmF0ZWQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOuc69zrXhv5bOvTwvZm9yZWlnbj4gYW5kIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs66zrnOvc614b+Wz4POuM6xzrk8L2ZvcmVpZ24+LCBBY3Rpb24gYW5kIFBhc3Npb24uPC9ub3RlPuKAlGluCgkJCQkJZXNzZW5jZSwgYXMgbWluZCBhbmQgR29kLCBpbiBxdWFsaXR5IGp1c3RpY2UsIGluIHF1YW50aXR5IG1vZGVyYXRpb24sCgkJCQkJaW4gdGltZSBvcHBvcnR1bml0eSwgYW5kIGFzIGluc3RhbmNlcyBvZiBjaGFuZ2UsIHRoZSB0ZWFjaGVyIGFuZCB0aGUKCQkJCQl0YXVnaHQuIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs66zrnOvc614b+Wzr08L2ZvcmVpZ24+IGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous65zr3OteG/ls+DzrjOsc65PC9mb3JlaWduPiwgQWN0aW9uIGFuZCBQYXNzaW9uLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC44IiB1bml0PSJMb2ViIGNoYXAiIC8+IFRoZXJlZm9yZSwganVzdAoJCQkJCWFzIGJlaW5nIGlzIG5vdCBzb21lIG9uZSB0aGluZyBpbiByZXNwZWN0IG9mIHRoZSBjYXRlZ29yaWVzIG1lbnRpb25lZCwKCQkJCQlzbyBuZWl0aGVyIGlzIHRoZSBnb29kLCBhbmQgdGhlcmUgaXMgbm8gb25lIHNjaWVuY2UgZWl0aGVyIG9mIHRoZSByZWFsCgkJCQkJb3Igb2YgdGhlIGdvb2QuIEJ1dCBhbHNvIGV2ZW4gdGhlIGdvb2RzIHByZWRpY2F0ZWQgaW4gdGhlIHNhbWUKCQkJCQljYXRlZ29yeSwgZm9yIGV4YW1wbGUgb3Bwb3J0dW5pdHkgb3IgbW9kZXJhdGlvbiwgZG8gbm90IGZhbGwgd2l0aGluCgkJCQkJdGhlIHByb3ZpbmNlIG9mIGEgc2luZ2xlIHNjaWVuY2UgdG8gc3R1ZHksIGJ1dCBkaWZmZXJlbnQgc29ydHMgb2YKCQkJCQlvcHBvcnR1bml0eSBhbmQgb2YgbW9kZXJhdGlvbiBhcmUgc3R1ZGllZCBieSBkaWZmZXJlbnQgc2NpZW5jZXMsIGZvcgoJCQkJCWluc3RhbmNlIG9wcG9ydHVuaXR5IGFuZCBtb2RlcmF0aW9uIGluIHJlc3BlY3Qgb2YgZm9vZCBhcmUgc3R1ZGllZCBieQoJCQkJCW1lZGljaW5lIGFuZCBneW1uYXN0aWNzLCBpbiByZXNwZWN0IG9mIG1pbGl0YXJ5IG9wZXJhdGlvbnMgYnkKCQkJCQlzdHJhdGVnaWNzLCBhbmQgc2ltaWxhcmx5IGluIHJlc3BlY3Qgb2YgYW5vdGhlciBwdXJzdWl0IGJ5IGFub3RoZXIKCQkJCQlzY2llbmNlOyBzbyB0aGF0IGl0IGNhbiBoYXJkbHkgYmUgdGhlIGNhc2UgdGhhdCB0aGUgQWJzb2x1dGUgR29vZCBpcwoJCQkJCXRoZSBzdWJqZWN0IG9mIG9ubHkgb25lIHNjaWVuY2UuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjE4YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1218a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['1.1218a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC45IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFnYWluLCB3aGVyZXZlciB0aGVyZSBpcyBhIHNlcXVlbmNlIG9mIGZhY3RvcnMsIGEgcHJpb3IgYW5kIGEKCQkJCQlzdWJzZXF1ZW50LCB0aGVyZSBpcyBub3Qgc29tZSBjb21tb24gZWxlbWVudCBiZXNpZGUgdGhlc2UgZmFjdG9ycyBhbmQKCQkJCQl0aGF0IGVsZW1lbnQgc2VwYXJhYmxlOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz4KCQkJCQlmb3IgdGhlbiB0aGVyZSB3b3VsZCBiZSBzb21ldGhpbmcgcHJpb3IgdG8gdGhlIGZpcnN0IGluIHRoZSBzZXJpZXMsCgkJCQkJZm9yIHRoZSBjb21tb24gYW5kIHNlcGFyYWJsZSB0ZXJtIHdvdWxkIGJlIHByaW9yIGJlY2F1c2Ugd2hlbiB0aGUKCQkJCQljb21tb24gZWxlbWVudCB3YXMgZGVzdHJveWVkIHRoZSBmaXJzdCBmYWN0b3Igd291bGQgYmUgZGVzdHJveWVkLiBGb3IKCQkJCQlleGFtcGxlLCBpZiBkb3VibGUgaXMgdGhlIGZpcnN0IG9mIHRoZSBtdWx0aXBsZXMsIHRoZSBtdWx0aXBsaWNpdHkKCQkJCQlwcmVkaWNhdGVkIG9mIHRoZW0gaW4gY29tbW9uIGNhbm5vdCBleGlzdCBhcyBhIHNlcGFyYWJsZSB0aGluZywgZm9yCgkJCQkJdGhlbiBpdCB3aWxsIGJlIHByaW9yIHRvIGRvdWJsZSwgaWYgaXQgaXMgdGhlIGNhc2UgdGhhdCB0aGUgY29tbW9uCgkJCQkJZWxlbWVudCBpcyB0aGUgRm9ybSwgYXMgaXQgd291bGQgYmUgaWYgb25lIHdlcmUgdG8gbWFrZSB0aGUgY29tbW9uCgkJCQkJZWxlbWVudCBzZXBhcmFibGU6IGZvciBpZiBqdXN0aWNlIGlzIGEgZ29vZCwgYW5kIGNvdXJhZ2UsIHRoZXJlIGlzCgkJCQkJdGhlbiwgdGhleSBzYXksIGEgR29vZC1pbi1pdHNlbGYsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBzbyB0aGUgdGVybSAnaW4gaXRzZWxmJyBpcyBhZGRlZCB0byB0aGUgY29tbW9uCgkJCQkJZGVmaW5pdGlvbi4gQnV0IHdoYXQgY291bGQgdGhpcyBkZW5vdGUgZXhjZXB0IHRoYXQgdGhlIGdvb2QgaXMgZXRlcm5hbAoJCQkJCWFuZCBzZXBhcmFibGU/IFlldCBhIHRoaW5nIHRoYXQgaXMgd2hpdGUgZm9yIGRheXMgaXMgbm8gbW9yZSB3aGl0ZQoJCQkJCXRoYW4gYSB0aGluZyB0aGF0IGlzIHdoaXRlIGZvciBvbmUgZGF5LCBzbyB0aGF0IHRoZSBnb29kIGlzIG5vIG1vcmUKCQkJCQlnb29kIGJ5IGJlaW5nIGV0ZXJuYWw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHdvcmRzCgkJCQkJCXJlbmRlcmVkICd0aGUgZ29vZCBpcyAuIC4gLiBldGVybmFsJyBhcmUgYSBjb25qZWN0dXJhbAoJCQkJCQlpbnNlcnRpb24uPC9ub3RlPjsgbm9yIHlldCB0aGVyZWZvcmUgaXMgdGhlIGNvbW1vbiBnb29kIHRoZSBzYW1lCgkJCQkJYXMgdGhlIEZvcm0sIGZvciBpdCBpcyB0aGUgY29tbW9uIHByb3BlcnR5IG9mIGFsbCB0aGUgZ29vZHMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFsc28gdGhlIHByb3BlciBtZXRob2Qgb2YgcHJvdmluZyB0aGUgQWJzb2x1dGUgR29vZCBpcyB0aGUgY29udHJhcnkKCQkJCQlvZiB0aGUgbWV0aG9kIG5vdyBhZG9wdGVkLiBBdCBwcmVzZW50IGl0IGlzIGZyb20gdGhpbmdzIG5vdCBhZG1pdHRlZAoJCQkJCXRvIHBvc3Nlc3MgZ29vZG5lc3MgdGhhdCB0aGV5IHByb3ZlIHRoZSB0aGluZ3MgYWRtaXR0ZWQgdG8gYmUgZ29vZCwKCQkJCQlmb3IgaW5zdGFuY2UsIHRoZXkgcHJvdmUgZnJvbSBudW1iZXJzIHRoYXQganVzdGljZSBhbmQgaGVhbHRoIGFyZQoJCQkJCWdvb2QsIGJlY2F1c2UgdGhleSBhcmUgYXJyYW5nZW1lbnRzIGFuZCBudW1iZXJz4oCUPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm9uIHRoZSBhc3N1bXB0aW9uIHRoYXQgZ29vZG5lc3MKCQkJCQlpcyBhIHByb3BlcnR5IG9mIG51bWJlcnMgYW5kIG1vbmFkcyBiZWNhdXNlIHRoZSBBYnNvbHV0ZSBHb29kIGlzCgkJCQkJdW5pdHkuIDwvdHJhbnNsYXRpb24+"
translation['1.1218b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgdGhlIHByb3BlcgoJCQkJCW1ldGhvZCBpcyB0byBzdGFydCBmcm9tIHRoaW5ncyBhZG1pdHRlZCB0byBiZSBnb29kLCBmb3IgaW5zdGFuY2UKCQkJCQloZWFsdGgsIHN0cmVuZ3RoLCBzb2JyaWV0eSBvZiBtaW5kLCBhbmQgcHJvdmUgdGhhdCBiZWF1dHkgaXMgcHJlc2VudAoJCQkJCWV2ZW4gbW9yZSBpbiB0aGUgdW5jaGFuZ2luZzsgZm9yIGFsbCB0aGVzZSBhZG1pdHRlZCBnb29kcyBjb25zaXN0IGluCgkJCQkJb3JkZXIgYW5kIHJlc3QsIGFuZCB0aGVyZWZvcmUsIGlmIHRoYXQgaXMgc28sIHRoZSB0aGluZ3MgdW5jaGFuZ2luZwoJCQkJCWFyZSBnb29kIGluIGFuIGV2ZW4gZ3JlYXRlciBkZWdyZWUsIGZvciB0aGV5IHBvc3Nlc3Mgb3JkZXIgYW5kIHJlc3QgaW4KCQkJCQlhIGdyZWF0ZXIgZGVncmVlLuKAlDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgaXQgaXMgYSBoYXphcmRvdXMgd2F5IG9mIHByb3ZpbmcgdGhhdCB0aGUKCQkJCQlBYnNvbHV0ZSBHb29kIGlzIHVuaXR5IHRvIHNheSB0aGF0IG51bWJlcnMgYWltIGF0IHVuaXR5OyBmb3IgaXQgaXMgbm90CgkJCQkJY2xlYXJseSBzdGF0ZWQgaG93IHRoZXkgYWltIGF0IGl0LCBidXQgdGhlIGV4cHJlc3Npb24gaXMgdXNlZCBpbiB0b28KCQkJCQl1bnF1YWxpZmllZCBhIG1hbm5lcjsgYW5kIGhvdyBjYW4gb25lIHN1cHBvc2UgdGhhdCB0aGluZ3Mgbm90CgkJCQkJcG9zc2Vzc2luZyBsaWZlIGNhbiBoYXZlIGFwcGV0aXRpb24/IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBPbmUgb3VnaHQgdG8gc3R1ZHkgdGhpcyBtYXR0ZXIgY2FyZWZ1bGx5LCBhbmQKCQkJCQlub3QgbWFrZSBhbiB1bnJlYXNvbmVkIGFzc3VtcHRpb24gYWJvdXQgc29tZXRoaW5nIGFzIHRvIHdoaWNoIGl0IGlzCgkJCQkJbm90IGVhc3kgdG8gYXR0YWluIGNlcnRhaW50eSBldmVuIHdpdGggdGhlIGFpZCBvZgoJCQkJCXJlYXNvbi7igJRBbmQgdGhlIHN0YXRlbWVudCB0aGF0IGFsbCBleGlzdGluZyB0aGluZ3MgZGVzaXJlCgkJCQkJc29tZSBvbmUgZ29vZCBpcyBub3QgdHJ1ZTsgZWFjaCB0aGluZyBzZWVrcyBpdHMgb3duIHBhcnRpY3VsYXIgZ29vZCwKCQkJCQl0aGUgZXllIHNpZ2h0LCB0aGUgYm9keSBoZWFsdGgsIGFuZCBzaW1pbGFybHkgYW5vdGhlciB0aGluZyBhbm90aGVyCgkJCQkJZ29vZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMTYiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U3VjaCB0aGVuIGFyZSB0aGUgZGlmZmljdWx0aWVzIGluZGljYXRpbmcKCQkJCQl0aGF0IHRoZSBBYnNvbHV0ZSBHb29kIGRvZXMgbm90IGV4aXN0LOKAlGFuZCB0aGF0IGl0IGlzIG9mIG5vCgkJCQkJdXNlIGZvciBwb2xpdGljYWwgc2NpZW5jZSwgYnV0IHRoYXQgdGhpcyBoYXMgYSBzcGVjaWFsIGdvb2Qgb2YgaXRzCgkJCQkJb3duLCBhcyBoYXZlIHRoZSBvdGhlciBzY2llbmNlcyBhbHNv4oCUZm9yIGluc3RhbmNlIHRoZSBnb29kCgkJCQkJb2YgZ3ltbmFzdGljcyBpcyBnb29kIGJvZGlseSBjb25kaXRpb24uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjE3IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIHNlbnRlbmNlIHJlYWRzIGxpa2UgYSBtZXJlCgkJCQkJCW5vdGUuIFRoZSByZWZlcmVuY2Ugc2VlbXMgdG8gYmUgdG8gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiAgICAgICAgIEV0aC4gMS4xMjE3Yi4xNiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLgoJCQkJCQkJRXRoLiAxMjE3YiAxNi0xMjE4YSAzMjwvYmlibD4sIGVzcGVjaWFsbHkgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDEuMTIxN2EuMTkiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjE3YSAxOS0yNTwvYmlibD4uPC9ub3RlPkZ1cnRoZXIKCQkJCQl0aGVyZSBpcyBhbHNvIHdoYXQgaGFzIGJlZW4gd3JpdHRlbiBpbiB0aGUgZGlzY291cnNlOiBlaXRoZXIgdGhlCgkJCQkJQ2xhc3MtZm9ybSBvZiB0aGUgZ29vZCBpcyBpbiBpdHNlbGYgdXNlZnVsIHRvIG5vIHNjaWVuY2UsIG9yIGl0IGlzCgkJCQkJdXNlZnVsIHRvIGFsbCBhbGlrZS48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuICAgICAgICAgRXRoLiAxLjEyMTdiLjE2IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuCgkJCQkJCQlFdGguIDEyMTdiIDE2LTEyMThhIDMyPC9iaWJsPiwgZXNwZWNpYWxseSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gMS4xMjE3YS4xOSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMTdhIDE5LTI1PC9iaWJsPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnVydGhlciBpdCBpcyBub3QKCQkJCQlwcmFjdGljYWJsZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMTgiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHNpbWlsYXJseSB0aGUgZ29vZCBhcwoJCQkJCXVuaXZlcnNhbCBhbHNvIGlzIG5vdCBhbiBBYnNvbHV0ZSBHb29kIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjE4YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['1.1218b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPihmb3IKCQkJCQl1bml2ZXJzYWxpdHkgbWlnaHQgYmUgYW4gYXR0cmlidXRlIG9mIGV2ZW4gYSBzbWFsbCBnb29kKSwgYW5kIGFsc28gaXQKCQkJCQlpcyBub3QgcHJhY3RpY2FibGU7IGZvciBtZWRpY2FsIHNjaWVuY2UgZG9lcyBub3Qgc3R1ZHkgaG93IHRvIHByb2N1cmUKCQkJCQlhbiBhdHRyaWJ1dGUgdGhhdCBiZWxvbmdzIHRvIGFueXRoaW5nLCBidXQgaG93IHRvIHByb2N1cmUgaGVhbHRoLCBhbmQKCQkJCQlzaW1pbGFybHkgYWxzbyBlYWNoIG9mIHRoZSBvdGhlciBwcmFjdGljYWwgc2NpZW5jZXMuIDwvdHJhbnNsYXRpb24+"
translation['1.1218b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xOSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgJ2dvb2QnIGhhcyBtYW55IG1lYW5pbmdzLAoJCQkJCWFuZCB0aGVyZSBpcyBhIHBhcnQgb2YgaXQgdGhhdCBpcyBiZWF1dGlmdWwsIGFuZCBvbmUgZm9ybSBvZiBpdCBpcwoJCQkJCXByYWN0aWNhYmxlIGJ1dCBhbm90aGVyIGlzIG5vdC4gVGhlIHNvcnQgb2YgZ29vZCB0aGF0IGlzIHByYWN0aWNhYmxlCgkJCQkJaXMgdGhhdCB3aGljaCBpcyBhbiBvYmplY3QgYWltZWQgYXQsIGJ1dCB0aGUgZ29vZCBpbiB0aGluZ3MKCQkJCQl1bmNoYW5nZWFibGUgaXMgbm90IHByYWN0aWNhYmxlLiBJdCBpcyBtYW5pZmVzdCwgdGhlcmVmb3JlLCB0aGF0IHRoZQoJCQkJCUFic29sdXRlIEdvb2Qgd2UgYXJlIGxvb2tpbmcgZm9yIGlzIG5vdCB0aGUgRm9ybSBvZiBnb29kLCBub3IgeWV0IHRoZQoJCQkJCWdvb2QgYXMgdW5pdmVyc2FsLCBmb3IgdGhlIEZvcm0gaXMgdW5jaGFuZ2VhYmxlIGFuZCBpbXByYWN0aWNhYmxlLCBhbmQKCQkJCQl0aGUgdW5pdmVyc2FsIGdvb2QgdGhvdWdoIGNoYW5nZWFibGUgaXMgbm90IHByYWN0aWNhYmxlLiBCdXQgdGhlCgkJCQkJb2JqZWN0IGFpbWVkIGF0IGFzIEVuZCBpcyB0aGUgY2hpZWYgZ29vZCwgYW5kIGlzIHRoZSBjYXVzZSBvZiB0aGUKCQkJCQlzdWJvcmRpbmF0ZSBnb29kcyBhbmQgZmlyc3Qgb2YgYWxsOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMjAiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gc28gdGhhdCB0aGUgQWJzb2x1dGUgR29vZCB3b3VsZCBiZSB0aGlz4oCUdGhlCgkJCQkJRW5kIG9mIHRoZSBnb29kcyBwcmFjdGljYWJsZSBmb3IgbWFuLiBBbmQgdGhpcyBpcyB0aGUgZ29vZCB0aGF0IGNvbWVzCgkJCQkJdW5kZXIgdGhlIHN1cHJlbWUgb2YgYWxsIHRoZSBwcmFjdGljYWwgc2NpZW5jZXMsIHdoaWNoIGlzIFBvbGl0aWNzIGFuZAoJCQkJCUVjb25vbWljcyBhbmQgV2lzZG9tOyBmb3IgdGhlc2Ugc3RhdGVzIG9mIGNoYXJhY3RlciBkaWZmZXIgZnJvbSB0aGUKCQkJCQlvdGhlcnMgaW4gdGhlIGZhY3QgdGhhdCB0aGV5IGFyZSBzdXByZW1lICh3aGV0aGVyIHRoZXkgZGlmZmVyIGF0IGFsbAoJCQkJCWZyb20gb25lIGFub3RoZXIgbXVzdCBiZSBkaXNjdXNzZWQgbGF0ZXIgb248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTQxYiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDExNDFiIDIxLTExNDJhCgkJCQkJCTExPC9iaWJsPjwvbm90ZT4pLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTE0MWIiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4gRXRoLiAxMTQxYiAyMS0xMTQyYQoJCQkJCQkxMTwvYmlibD48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQW5kIHRoYXQgdGhlIEVuZCBzdGFuZHMgaW4gYSBjYXVzYWwgcmVsYXRpb24gdG8gdGhlCgkJCQkJbWVhbnMgc3Vib3JkaW5hdGUgdG8gaXQgaXMgc2hvd24gYnkgdGhlIG1ldGhvZCBvZiB0ZWFjaGVyczsgdGhleSBwcm92ZQoJCQkJCXRoYXQgdGhlIHZhcmlvdXMgbWVhbnMgYXJlIGVhY2ggZ29vZCBieSBmaXJzdCBkZWZpbmluZyB0aGUgRW5kLAoJCQkJCWJlY2F1c2UgdGhlIEVuZCBhaW1lZCBhdCBpcyBhIGNhdXNlOiBmb3IgZXhhbXBsZSwgc2luY2UgdG8gYmUgaW4KCQkJCQloZWFsdGggaXMgc28tYW5kLXNvLCB3aGF0IGNvbnRyaWJ1dGVzIHRvIGhlYWx0aCBtdXN0IG5lY2Vzc2FyaWx5IGJlCgkJCQkJc28tYW5kLXNvOzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50aGUKCQkJCQl3aG9sZXNvbWUgaXMgdGhlIGVmZmljaWVudCBjYXVzZSBvZiBoZWFsdGgsIHRob3VnaCBvbmx5IHRoZSBjYXVzZSBvZgoJCQkJCWl0cyBleGlzdGluZ+KAlGl0IGlzIG5vdCB0aGUgY2F1c2Ugb2YgaGVhbHRoJ3MgYmVpbmcgYSBnb29kLgoJCQkJCTwvdHJhbnNsYXRpb24+"
translation['2.1218b.31'] = ""
translation['2.1219a.31'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFmdGVyIHRoaXMgd2UgbXVzdCB0YWtlIGEgZnJlc2gKCQkJCQlzdGFydGluZy1wb2ludCBhbmQgZGlzY3VzcyB0aGUgc3ViamVjdHMgdGhhdCBmb2xsb3cuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBhbGwgZ29vZHMgYXJlIGVpdGhlciBleHRlcm5hbCBvciB3aXRoaW4KCQkJCQl0aGUgc3Bpcml0LCBhbmQgb2YgdGhlc2UgdHdvIGtpbmRzIHRoZSBsYXR0ZXIgYXJlIHByZWZlcmFibGUsIGFzIHdlCgkJCQkJY2xhc3MgdGhlbSBldmVuIGluIHRoZSBleHRyYW5lb3VzIGRpc2NvdXJzZXMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSBub3RlIG9uIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAxLjEyMTdiLjIzIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTIxN2IKCQkJCQkJMjM8L2JpYmw+Ljwvbm90ZT4gRm9yIFdpc2RvbSBhbmQgR29vZG5lc3MgYW5kIFBsZWFzdXJlIGFyZQoJCQkJCWluIHRoZSBzcGlyaXQsIGFuZCBlaXRoZXIgc29tZSBvciBhbGwgb2YgdGhlc2UgYXJlIHRob3VnaHQgYnkKCQkJCQlldmVyeWJvZHkgdG8gYmUgYW4gRW5kLiBBbmQgdGhlIGNvbnRlbnRzIG9mIHRoZSBzcGlyaXQgYXJlIGluIHR3bwoJCQkJCWdyb3Vwcywgb25lIHN0YXRlcyBvciBmYWN1bHRpZXMsIHRoZSBvdGhlciBhY3Rpdml0aWVzIGFuZAoJCQkJCXByb2Nlc3Nlcy48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gMS4xMjE3Yi4yMyIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMTdiCgkJCQkJCTIzPC9iaWJsPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5MZXQgdGhlc2UgYXNzdW1wdGlvbnMsIHRoZW4sIGJlIG1hZGUsIGFuZAoJCQkJCWxldCBpdCBiZSBhc3N1bWVkIGFzIHRvIEdvb2RuZXNzIHRoYXQgaXQgaXMgdGhlIGJlc3QgZGlzcG9zaXRpb24gb3IKCQkJCQlzdGF0ZSBvciBmYWN1bHR5IG9mIGVhY2ggY2xhc3Mgb2YgdGhpbmdzIHRoYXQgaGF2ZSBzb21lIHVzZSBvciB3b3JrLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjE5YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1219a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPlRoaXMgaXMgY2xlYXIgZnJvbSBpbmR1Y3Rpb24sIGZvciB3ZSBwb3NpdAoJCQkJCXRoaXMgaW4gYWxsIGNhc2VzOiBmb3IgaW5zdGFuY2UsIHRoZXJlIGlzIGEgZ29vZG5lc3MgdGhhdCBiZWxvbmdzIHRvIGEKCQkJCQljb2F0LCBmb3IgYSBjb2F0IGhhcyBhIHBhcnRpY3VsYXIgZnVuY3Rpb24gYW5kIHVzZSwgYW5kIHRoZSBiZXN0IHN0YXRlCgkJCQkJb2YgYSBjb2F0IGlzIGl0cyBnb29kbmVzczsgYW5kIHNpbWlsYXJseSB3aXRoIGEgc2hpcCBhbmQgYSBob3VzZSBhbmQKCQkJCQl0aGUgcmVzdC4gU28gdGhhdCB0aGUgc2FtZSBpcyB0cnVlIGFsc28gb2YgdGhlIHNwaXJpdCwgZm9yIGl0IGhhcyBhCgkJCQkJd29yayBvZiBpdHMgb3duLiA8L3RyYW5zbGF0aW9uPg=="
translation['2.1219a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZAoJCQkJCXRoZXJlZm9yZSBsZXQgdXMgYXNzdW1lIHRoYXQgdGhlIGJldHRlciB0aGUgc3RhdGUgaXMgdGhlIGJldHRlciBpcyB0aGUKCQkJCQl3b3JrIG9mIHRoYXQgc3RhdGUsIGFuZCB0aGF0IGFzIHN0YXRlcyBzdGFuZCBpbiByZWxhdGlvbiB0byBvbmUKCQkJCQlhbm90aGVyIHNvIGRvIHRoZSB3b3JrcyB0aGF0IHJlc3VsdCBmcm9tIHRoZW0uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS40IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCB0aGUgd29yayBvZiBlYWNoIHRoaW5nIGlzCgkJCQkJaXRzIEVuZDsgZnJvbSB0aGlzLCB0aGVyZWZvcmUsIGl0IGlzIHBsYWluIHRoYXQgdGhlIHdvcmsgaXMgYSBncmVhdGVyCgkJCQkJZ29vZCB0aGFuIHRoZSBzdGF0ZSwgZm9yIHRoZSBFbmQgaXMgdGhlIGJlc3QgYXMgYmVpbmcgYW4gRW5kLCBzaW5jZQoJCQkJCXRoZSBncmVhdGVzdCBnb29kIGlzIGFzc3VtZWQgYXMgYW4gRW5kIGFuZCBhcyB0aGUgdWx0aW1hdGUgb2JqZWN0IGZvcgoJCQkJCXRoZSBzYWtlIG9mIHdoaWNoIGFsbCB0aGUgb3RoZXIgdGhpbmdzIGV4aXN0LiBJdCBpcyBjbGVhciwgdGhlcmVmb3JlLAoJCQkJCXRoYXQgdGhlIHdvcmsgaXMgYSBncmVhdGVyIGdvb2QgdGhhbiB0aGUgc3RhdGUgYW5kIGRpc3Bvc2l0aW9uLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS41IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCB0aGUgdGVybSAnd29yaycKCQkJCQloYXMgdHdvIG1lYW5pbmdzOyBmb3Igc29tZSB0aGluZ3MgaGF2ZSBhIHdvcmsgdGhhdCBpcyBzb21ldGhpbmcKCQkJCQlkaWZmZXJlbnQgZnJvbSB0aGUgZW1wbG95bWVudCBvZiB0aGVtLCBmb3IgaW5zdGFuY2UgdGhlIHdvcmsgb2YKCQkJCQlhcmNoaXRlY3R1cmUgaXMgYSBob3VzZSwgbm90IHRoZSBhY3Qgb2YgYnVpbGRpbmcsIHRoYXQgb2YgbWVkaWNpbmUKCQkJCQloZWFsdGgsIG5vdCB0aGUgcHJvY2VzcyBvZiBoZWFsaW5nIG9yIGN1cmluZywgd2hlcmVhcyB3aXRoIG90aGVyCgkJCQkJdGhpbmdzIHRoZWlyIHdvcmsgaXMgdGhlIHByb2Nlc3Mgb2YgdXNpbmcgdGhlbSwgZm9yIGluc3RhbmNlIHRoZSB3b3JrCgkJCQkJb2Ygc2lnaHQgaXMgdGhlIGFjdCBvZiBzZWVpbmcsIHRoYXQgb2YgbWF0aGVtYXRpY2FsIHNjaWVuY2UgdGhlCgkJCQkJY29udGVtcGxhdGlvbiBvZiBtYXRoZW1hdGljYWwgdHJ1dGhzLiBTbyBpdCBmb2xsb3dzIHRoYXQgd2l0aCB0aGUKCQkJCQl0aGluZ3Mgd2hvc2Ugd29yayBpcyB0aGUgZW1wbG95bWVudCBvZiB0aGVtLCB0aGUgYWN0IG9mIGVtcGxveWluZyB0aGVtCgkJCQkJbXVzdCBiZSBvZiBtb3JlIHZhbHVlIHRoYW4gdGhlIHN0YXRlIG9mIHBvc3Nlc3NpbmcgdGhlbS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgdGhlc2UgcG9pbnRzIGhhdmluZyBiZWVuIGRlY2lkZWQgaW4gdGhpcyB3YXksPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPndlIHNheSB0aGF0IHRoZSBzYW1lIHdvcmsKCQkJCQliZWxvbmdzIHRvIGEgdGhpbmcgYW5kIHRvIGl0cyBnb29kbmVzcyAoYWx0aG91Z2ggbm90IGluIHRoZSBzYW1lIHdheSk6CgkJCQkJZm9yIGV4YW1wbGUsIGEgc2hvZSBpcyB0aGUgd29yayBvZiB0aGUgYXJ0IG9mIHNob2VtYWtpbmcgYW5kIG9mIHRoZQoJCQkJCWFjdCBvZiBzaG9lbWFraW5nOyBzbyBpZiB0aGVyZSBpcyBzdWNoIGEgdGhpbmcgYXMgc2hvZW1ha2luZyBnb29kbmVzcwoJCQkJCWFuZCBhIGdvb2Qgc2hvZW1ha2VyLCB0aGVpciB3b3JrIGlzIGEgZ29vZCBzaG9lOyBhbmQgaW4gdGhlIHNhbWUgd2F5CgkJCQkJaW4gdGhlIGNhc2Ugb2YgdGhlIG90aGVyIGFydHMgYWxzby48L3RyYW5zbGF0aW9uPg=="
translation['2.1219b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS43IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFnYWluLCBsZXQgdXMgZ3JhbnQgdGhhdAoJCQkJCXRoZSB3b3JrIG9mIHRoZSBzcGlyaXQgaXMgdG8gY2F1c2UgbGlmZSwgYW5kIHRoYXQgYmVpbmcgYWxpdmUgaXMKCQkJCQllbXBsb3ltZW50IGFuZCBiZWluZyBhd2FrZSAoZm9yIHNsZWVwIGlzIGEga2luZCBvZiBpbmFjdGl2aXR5IGFuZAoJCQkJCXJlc3QpOyB3aXRoIHRoZSBjb25zZXF1ZW5jZSB0aGF0IHNpbmNlIHRoZSB3b3JrIG9mIHRoZSBzcGlyaXQgYW5kIHRoYXQKCQkJCQlvZiBpdHMgZ29vZG5lc3MgYXJlIG5lY2Vzc2FyaWx5IG9uZSBhbmQgdGhlIHNhbWUsIHRoZSB3b3JrIG9mIGdvb2RuZXNzCgkJCQkJd291bGQgYmUgZ29vZCBsaWZlLiBUaGVyZWZvcmUgdGhpcyBpcyB0aGUgcGVyZmVjdCBnb29kLCB3aGljaCBhcyB3ZQoJCQkJCXNhdyBpcyBoYXBwaW5lc3MuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS44IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBpdAoJCQkJCWlzIGNsZWFyIGZyb20gdGhlIGFzc3VtcHRpb25zIGxhaWQgZG93biAoZm9yIHdlIHNhaWQgdGhhdCBoYXBwaW5lc3MgaXMKCQkJCQl0aGUgZ3JlYXRlc3QgZ29vZCBhbmQgdGhhdCB0aGUgRW5kcyBvciB0aGUgZ3JlYXRlc3Qgb2YgZ29vZHMgYXJlIGluCgkJCQkJdGhlIHNwaXJpdCwgYnV0IHRoaW5ncyBpbiB0aGUgc3Bpcml0IGFyZSBlaXRoZXIgYSBzdGF0ZSBvciBhbgoJCQkJCWFjdGl2aXR5KSB0aGF0LCBzaW5jZSBhbiBhY3Rpdml0eSBpcyBhIGJldHRlciB0aGluZyB0aGFuIGEgZGlzcG9zaXRpb24KCQkJCQlhbmQgdGhlIGJlc3QgYWN0aXZpdHkgdGhhbiB0aGUgYmVzdCBzdGF0ZSwgYW5kIHNpbmNlIGdvb2RuZXNzIGlzIHRoZQoJCQkJCWJlc3Qgc3RhdGUsIHRoZSBhY3Rpdml0eSBvZiBnb29kbmVzcyBpcyB0aGUgc3Bpcml0J3MgZ3JlYXRlc3QgZ29vZC4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgYWxzbyB3ZSBzYXcKCQkJCQl0aGF0IHRoZSBncmVhdGVzdCBnb29kIGlzIGhhcHBpbmVzcy4gVGhlcmVmb3JlIGhhcHBpbmVzcyBpcyB0aGUKCQkJCQlhY3Rpdml0eSBvZiBhIGdvb2Qgc3Bpcml0LiBBbmQgc2luY2Ugd2Ugc2F3PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gMS4xMjE4Yi43IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTIxOGIKCQkJCQkJNy0xMjwvYmlibD4uPC9ub3RlPiB0aGF0IGhhcHBpbmVzcyBpcyBzb21ldGhpbmcgcGVyZmVjdCwgYW5kCgkJCQkJbGlmZSBpcyBlaXRoZXIgcGVyZmVjdCBvciBpbXBlcmZlY3QsIGFuZCB0aGUgc2FtZSB3aXRoIGdvb2RuZXNzIChmb3IKCQkJCQlzb21lIGdvb2RuZXNzIGlzIGEgd2hvbGUgYW5kIHNvbWUgYSBwYXJ0KSwgYnV0IHRoZSBhY3Rpdml0eSBvZgoJCQkJCWltcGVyZmVjdCB0aGluZ3MgaXMgaW1wZXJmZWN0LCBpdCB3b3VsZCBmb2xsb3cgdGhhdCBoYXBwaW5lc3MgaXMgYW4KCQkJCQlhY3Rpdml0eSBvZiBwZXJmZWN0IGxpZmUgaW4gYWNjb3JkYW5jZSB3aXRoIHBlcmZlY3QKCQkJCQlnb29kbmVzcy48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gMS4xMjE4Yi43IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTIxOGIKCQkJCQkJNy0xMjwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCB0aGF0IG91ciBjbGFzc2lmaWNhdGlvbiBhbmQgZGVmaW5pdGlvbgoJCQkJCW9mIGl0IGFyZSBjb3JyZWN0IGlzIGV2aWRlbmNlZCBieSBvcGluaW9ucyB0aGF0IHdlIGFsbCBob2xkLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjE5YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1219b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkZvciB3ZSB0aGluayB0aGF0IHRvIGRvIHdlbGwgYW5kIGxpdmUgd2VsbAoJCQkJCWFyZSB0aGUgc2FtZSBhcyB0byBiZSBoYXBweTsgYnV0IGVhY2ggb2YgdGhlc2UsIGJvdGggbGlmZSBhbmQgYWN0aW9uLAoJCQkJCWlzIGVtcGxveW1lbnQgYW5kIGFjdGl2aXR5LCBpbmFzbXVjaCBhcyBhY3RpdmUgbGlmZSBpbnZvbHZlcyBlbXBsb3lpbmcKCQkJCQl0aGluZ3PigJR0aGUgY29wcGVyc21pdGggbWFrZXMgYSBicmlkbGUsIGJ1dCB0aGUgaG9yc2VtYW4gdXNlcwoJCQkJCWl0LiBUaGVyZSBpcyBhbHNvIHRoZSBldmlkZW5jZSBvZiB0aGUgb3BpbmlvbiB0aGF0IGEgcGVyc29uIGlzIG5vdAoJCQkJCWhhcHB5IGZvciBvbmUgZGF5IG9ubHksPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgc2luZ2xlCgkJCQkJCWhhcHB5IGRheSBkb2VzIG5vdCBtYWtlIG9uZSBhIGhhcHB5IChpLmUuIGZvcnR1bmF0ZSkgbWFuLjwvbm90ZT4KCQkJCQlhbmQgdGhhdCBhIGNoaWxkIGlzIG5vdCBoYXBweSwgbm9yIGFueSBwZXJpb2Qgb2YgbGlmZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JdCBpcyBhIG1pc3Rha2UgdG8gc2F5IHRoYXQgeW91dGgKCQkJCQkJKG9yIG1hdHVyaXR5LCBvciBvbGQgYWdlKSBpcyB0aGUgaGFwcHkgdGltZSBvZgoJCQkJCQlsaWZlLjwvbm90ZT4oaGVuY2UgYWxzbyBTb2xvbidzIGFkdmljZSBob2xkcyBnb29kLCBub3QgdG8gY2FsbCBhIG1hbgoJCQkJCWhhcHB5IHdoaWxlIGhlIGlzIGFsaXZlLCBidXQgb25seSB3aGVuIGhlIGhhcyByZWFjaGVkIHRoZSBlbmQpLCBmb3IKCQkJCQlub3RoaW5nIGluY29tcGxldGUgaXMgaGFwcHksIHNpbmNlIGl0IGlzIG5vdCBhIHdob2xlLiA8L3RyYW5zbGF0aW9uPg=="
translation['2.1219b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgYWdhaW4sIHRoZXJlIGFyZSB0aGUKCQkJCQlwcmFpc2VzIGdpdmVuIHRvIGdvb2RuZXNzIG9uIGFjY291bnQgb2YgaXRzIGRlZWRzLCBhbmQgcGFuZWd5cmljcwoJCQkJCWRlc2NyaWJpbmcgZGVlZHMgKGFuZCBpdCBpcyB0aGUgdmljdG9yaW91cyB3aG8gYXJlIGdpdmVuIHdyZWF0aHMsIG5vdAoJCQkJCXRob3NlIHdobyBhcmUgY2FwYWJsZSBvZiB3aW5uaW5nIGJ1dCBkbyBub3Qgd2luKTsgYW5kIHRoZXJlIGlzIHRoZQoJCQkJCWZhY3QgdGhhdCB3ZSBqdWRnZSBhIG1hbidzIGNoYXJhY3RlciBmcm9tIGhpcyBhY3Rpb25zLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQWxzbyB3aHkgaXMgaGFwcGluZXNzIG5vdAoJCQkJCXByYWlzZWQ/IEl0IGlzIGJlY2F1c2UgaXQgaXMgb24gYWNjb3VudCBvZiBpdCB0aGF0IHRoZSBvdGhlciB0aGluZ3MKCQkJCQlhcmUgcHJhaXNlZCwgZWl0aGVyIGJ5IGJlaW5nIHBsYWNlZCBpbiByZWxhdGlvbiB0byBpdCBvciBhcyBiZWluZwoJCQkJCXBhcnRzIG9mIGl0LiBIZW5jZSBmZWxpY2l0YXRpb24sIHByYWlzZSBhbmQgcGFuZWd5cmljIGFyZSBkaWZmZXJlbnQKCQkJCQl0aGluZ3M6IHBhbmVneXJpYyBpcyBhIHJlY2l0YWwgb2YgYSBwYXJ0aWN1bGFyIGV4cGxvaXQsIHByYWlzZSBhCgkJCQkJc3RhdGVtZW50IG9mIGEgbWFuJ3MgZ2VuZXJhbCBkaXN0aW5jdGlvbiwgZmVsaWNpdGF0aW9uIGlzIGJlc3Rvd2VkIG9uCgkJCQkJYW4gZW5kIGFjaGlldmVkLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMTMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gRnJvbQoJCQkJCXRoZXNlIGNvbnNpZGVyYXRpb25zIGxpZ2h0IGlzIGFsc28gdGhyb3duIG9uIHRoZSBxdWVzdGlvbiBzb21ldGltZXMKCQkJCQlyYWlzZWTigJR3aGF0IGlzIHRoZSBwcmVjaXNlIHJlYXNvbiB3aHkgdGhlIHZpcnR1b3VzIGFyZSBmb3IKCQkJCQloYWxmIHRoZWlyIGxpdmVzIG5vIGJldHRlciB0aGFuIHRoZSBiYXNlLCBzaW5jZSBhbGwgbWVuIGFyZSBhbGlrZSB3aGVuCgkJCQkJYXNsZWVwPzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5UaGUgcmVhc29uIGlzCgkJCQkJdGhhdCBzbGVlcCBpcyBpbmFjdGlvbiBvZiB0aGUgc3Bpcml0LCBub3QgYW4gYWN0aXZpdHkuIDwvdHJhbnNsYXRpb24+"
translation['2.1220a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBIZW5jZSB0aGUgZ29vZG5lc3Mgb2YgYW55CgkJCQkJb3RoZXIgcGFydCBvZiB0aGUgc3Bpcml0LCBmb3IgaW5zdGFuY2UgdGhlIG51dHJpdGl2ZSwgaXMgbm90IGEgcG9ydGlvbgoJCQkJCW9mIGdvb2RuZXNzIGFzIGEgd2hvbGUsIGp1c3QgYXMgYWxzbyBnb29kbmVzcyBvZiB0aGUgYm9keSBpcyBub3Q7IGZvcgoJCQkJCXRoZSBudXRyaXRpdmUgcGFydCBmdW5jdGlvbnMgbW9yZSBhY3RpdmVseSBpbiBzbGVlcCwgd2hlcmUgYXMgdGhlCgkJCQkJc2Vuc29yeSBhbmQgYXBwZXRpdGl2ZSBwYXJ0cyBhcmUgaW5lZmZlY3RpdmUgaW4gc2xlZXAuIEJ1dCBldmVuIHRoZQoJCQkJCWltYWdpbmF0aW9ucyBvZiB0aGUgdmlydHVvdXMsIHNvIGZhciBhcyB0aGUgaW1hZ2luYXRpdmUgZmFjdWx0eQoJCQkJCXBhcnRpY2lwYXRlcyBpbiBhbnkgbW9kZSBvZiBtb3Rpb24sIGFyZSBiZXR0ZXIgdGhhbiB0aG9zZSBvZiB0aGUgYmFzZSwKCQkJCQlwcm92aWRlZCB0aGV5IGFyZSBub3QgcGVydmVydGVkIGJ5IGRpc2Vhc2Ugb3IgbXV0aWxhdGlvbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMTUiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TmV4dCB3ZSBtdXN0IHN0dWR5IHRoZSBzcGlyaXQ7IGZvciBnb29kbmVzcyBpcyBhIHByb3BlcnR5IG9mIHRoZQoJCQkJCXNwaXJpdCwgaXQgaXMgbm90IGFjY2lkZW50YWwuIEFuZCBzaW5jZSBpdCBpcyBodW1hbiBnb29kbmVzcyB0aGF0IHdlCgkJCQkJYXJlIGludmVzdGlnYXRpbmcsIGxldCB1cyBiZWdpbiBieSBwb3NpdGluZyB0aGF0IHRoZSBzcGlyaXQgaGFzIHR3bwoJCQkJCXBhcnRzIHRoYXQgcGFydGFrZSBvZiByZWFzb24sIGJ1dCB0aGF0IHRoZXkgZG8gbm90IGJvdGggcGFydGFrZSBvZgoJCQkJCXJlYXNvbiBpbiB0aGUgc2FtZSBtYW5uZXIsIGJ1dCBvbmUgb2YgdGhlbSBieSBoYXZpbmcgYnkgbmF0dXJlIHRoZQoJCQkJCWNhcGFjaXR5IHRvIGdpdmUgb3JkZXJzLCBhbmQgdGhlIG90aGVyIHRvIG9iZXkgYW5kIGxpc3RlbiAobGV0IHVzCgkJCQkJbGVhdmUgb3V0IGFueSBwYXJ0IHRoYXQgaXMgaXJyYXRpb25hbCBpbiBhbm90aGVyIHdheTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRoZSBwYXJ0ICdjb25uZWN0ZWQgd2l0aAoJCQkJCQludXRyaXRpb24gYW5kIGdyb3d0aCwnIG1hbidzIGFuaW1hbCBsaWZlLCB3aGljaCBpcyBpcnJhdGlvbmFsCgkJCQkJCWFic29sdXRlbHksIGFuZCBub3QgbWVyZWx5IGluIHRoZSBzZW5zZSBvZiBub3QgcG9zc2Vzc2luZyByZWFzb24KCQkJCQkJYnV0IGJlaW5nIGNhcGFibGUgb2Ygb2JlZGllbmNlIHRvIGl0Ljwvbm90ZT4pLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMTYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQW5kIGl0IG1ha2VzIG5vIGRpZmZlcmVuY2UKCQkJCQl3aGV0aGVyIHRoZSBzcGlyaXQgaXMgZGl2aXNpYmxlIG9yIGlzIHVuZGl2aWRlZCB5ZXQgcG9zc2Vzc2VkIG9mCgkJCQkJZGlmZmVyZW50IGNhcGFjaXRpZXMsIG5hbWVseSB0aG9zZSBtZW50aW9uZWQsIGp1c3QgYXMgdGhlIGNvbmNhdmUgYW5kCgkJCQkJY29udmV4IHNpZGVzIGluIGEgY3VydmUgYXJlIGluc2VwYXJhYmxlLCBhbmQgdGhlIHN0cmFpZ2h0bmVzcyBhbmQKCQkJCQl3aGl0ZW5lc3MgaW4gYSBzdHJhaWdodCB3aGl0ZSBsaW5lLCBhbHRob3VnaCBhIHN0cmFpZ2h0IHRoaW5nIGlzIG5vdAoJCQkJCXdoaXRlIGV4Y2VwdCBhY2NpZGVudGFsbHkgYW5kIG5vdCBieSBpdHMgb3duIGVzc2VuY2UuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xNyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgd2UgaGF2ZSBhbHNvIGFic3RyYWN0ZWQKCQkJCQlhbnkgb3RoZXIgcGFydCBvZiB0aGUgc3Bpcml0IHRoYXQgdGhlcmUgbWF5IGJlLCBmb3IgaW5zdGFuY2UgdGhlCgkJCQkJZmFjdG9yIG9mIGdyb3d0aDsgZm9yIHRoZSBwYXJ0cyB0aGF0IHdlIGhhdmUgbWVudGlvbmVkIGFyZSB0aGUgc3BlY2lhbAoJCQkJCXByb3BlcnRpZXMgb2YgdGhlIGh1bWFuIHNwaXJpdCwgYW5kIGhlbmNlIHRoZSBleGNlbGxlbmNlcyBvZiB0aGUgcGFydAoJCQkJCWRlYWxpbmcgd2l0aCBudXRyaXRpb24gYW5kIGdyb3d0aCBhcmUgbm90IHRoZSBzcGVjaWFsIHByb3BlcnR5IG9mIGEKCQkJCQltYW4sIGZvciBuZWNlc3NhcmlseSwgaWYgY29uc2lkZXJlZCBhcyBhIG1hbiwgaGUgbXVzdCBwb3NzZXNzIGEKCQkJCQlyZWFzb25pbmcgZmFjdWx0eSBmb3IgYSBwcmluY2lwbGUgYW5kIHdpdGggYSB2aWV3IHRvIGNvbmR1Y3QsCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyMjBhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1220a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGUgcmVhc29uaW5nIGZhY3VsdHkgaXMgYSBwcmluY2lwbGUKCQkJCQljb250cm9sbGluZyBub3QgcmVhc29uaW5nIGJ1dCBhcHBldGl0ZSBhbmQgcGFzc2lvbnM7IDwvdHJhbnNsYXRpb24+"
translation['2.1220a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiB0aGVyZWZvcmUgaGUgbXVzdCBuZWNlc3NhcmlseQoJCQkJCXBvc3Nlc3MgdGhvc2UgcGFydHMuIEFuZCBqdXN0IGFzIGEgZ29vZCBjb25zdGl0dXRpb24gY29uc2lzdHMgb2YgdGhlCgkJCQkJc2VwYXJhdGUgZXhjZWxsZW5jZXMgb2YgdGhlIHBhcnRzIG9mIHRoZSBib2R5LCBzbyBhbHNvIHRoZSBnb29kbmVzcyBvZgoJCQkJCXRoZSBzcGlyaXQsIGFzIGJlaW5nIGFuIEVuZCwgaXMgY29tcG9zZWQgb2YgdGhlIHNlcGFyYXRlCgkJCQkJdmlydHVlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMTkiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIGdvb2RuZXNzIGhhcyB0d28gZm9ybXMsIG1vcmFsIHZpcnR1ZSBhbmQKCQkJCQlpbnRlbGxlY3R1YWwgZXhjZWxsZW5jZTsgZm9yIHdlIHByYWlzZSBub3Qgb25seSB0aGUganVzdCBidXQgYWxzbyB0aGUKCQkJCQlpbnRlbGxpZ2VudCBhbmQgdGhlIHdpc2UuIEZvciB3ZSBhc3N1bWVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gMS4xMjE4YS4zNyIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMThhCgkJCQkJCTM3ZmYuPC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDIuMTIxOWIuOCIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMTliIDhmZi4sCgkJCQkJCQkxNWZmLjwvYmlibD48L25vdGU+IHRoYXQgd2hhdCBpcyBwcmFpc2V3b3J0aHkgaXMgZWl0aGVyIGdvb2RuZXNzCgkJCQkJb3IgaXRzIHdvcmssIGFuZCB0aGVzZSBhcmUgbm90IGFjdGl2aXRpZXMgYnV0IHBvc3Nlc3MgYWN0aXZpdGllcy4KCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gMS4xMjE4YS4zNyIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMThhCgkJCQkJCTM3ZmYuPC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDIuMTIxOWIuOCIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMTliIDhmZi4sCgkJCQkJCQkxNWZmLjwvYmlibD48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMjAiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQW5kIHNpbmNlIHRoZQoJCQkJCWludGVsbGVjdHVhbCBleGNlbGxlbmNlcyBpbnZvbHZlIHJlYXNvbiwgdGhlc2UgZm9ybXMgb2YgZ29vZG5lc3MKCQkJCQliZWxvbmcgdG8gdGhlIHJhdGlvbmFsIHBhcnQsIHdoaWNoIGFzIGhhdmluZyByZWFzb24gaXMgaW4gY29tbWFuZCBvZgoJCQkJCXRoZSBzcGlyaXQ7IHdoZXJlYXMgdGhlIG1vcmFsIHZpcnR1ZXMgYmVsb25nIHRvIHRoZSBwYXJ0IHRoYXQgaXMKCQkJCQlpcnJhdGlvbmFsIGJ1dCBieSBuYXR1cmUgY2FwYWJsZSBvZiBmb2xsb3dpbmcgdGhlCgkJCQkJcmF0aW9uYWzigJRmb3IgaW4gc3RhdGluZyBhIG1hbidzIG1vcmFsIHF1YWxpdGllcyB3ZSBkbyBub3QKCQkJCQlzYXkgdGhhdCBoZSBpcyB3aXNlIG9yIGNsZXZlciBidXQgdGhhdCBoZSBpcyBnZW50bGUgb3IgcmFzaC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWZ0ZXIgdGhpcyB3ZSBtdXN0IGZpcnN0IGNvbnNpZGVyIE1vcmFsIEdvb2RuZXNz4oCUaXRzCgkJCQkJZXNzZW5jZSBhbmQgdGhlIG5hdHVyZSBvZiBpdHMgZGl2aXNpb25zIChmb3IgdGhhdCBpcyB0aGUgc3ViamVjdCBub3cKCQkJCQlhcnJpdmVkIGF0KSwgYW5kIHRoZSBtZWFucyBieSB3aGljaCBpdCBpcyBwcm9kdWNlZC4gT3VyIG1ldGhvZCBvZgoJCQkJCWlucXVpcnkgdGhlbiBtdXN0IGJlIHRoYXQgZW1wbG95ZWQgYnkgYWxsIHBlb3BsZSBpbiBvdGhlciBtYXR0ZXJzIHdoZW4KCQkJCQl0aGV5IGhhdmUgc29tZXRoaW5nIGluIGhhbmQgdG8gc3RhcnQgd2l0aOKAlHdlIG11c3QgZW5kZWF2b3IKCQkJCQlieSBtZWFucyBvZiBzdGF0ZW1lbnRzIHRoYXQgYXJlIHRydWUgYnV0IG5vdCBjbGVhcmx5IGV4cHJlc3NlZCB0bwoJCQkJCWFycml2ZSBhdCBhIHJlc3VsdCB0aGF0IGlzIGJvdGggdHJ1ZSBhbmQgY2xlYXIuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4yMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBGb3Igb3VyIHByZXNlbnQgc3RhdGUgaXMgYXMKCQkJCQlpZiB3ZSBrbmV3IHRoYXQgaGVhbHRoIGlzIHRoZSBiZXN0IGRpc3Bvc2l0aW9uIG9mIHRoZSBib2R5IGFuZCB0aGF0CgkJCQkJQ29yaXNjdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Q2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAyLjEyNDBiLjI1IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTI0MGIgMjU8L2JpYmw+IG4uPC9ub3RlPiBpcyB0aGUKCQkJCQlkYXJrZXN0IG1hbiBpbiB0aGUgbWFya2V0LXBsYWNlOzxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAyLjEyNDBiLjI1IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTI0MGIgMjU8L2JpYmw+IG4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmZvciB0aGF0IGlzIG5vdCB0byBrbm93IHdoYXQgaGVhbHRoIGlzIGFuZCB3aG8gQ29yaXNjdXMKCQkJCQlpcywgYnV0IG5ldmVydGhlbGVzcyB0byBiZSBpbiB0aGF0IHN0YXRlIGlzIGEgaGVscCB0b3dhcmRzIGtub3dpbmcKCQkJCQllYWNoIG9mIHRoZXNlIHRoaW5ncy7igJQ8L3RyYW5zbGF0aW9uPg=="
translation['2.1220b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4yMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBUaGVuIGxldCBpdCBmaXJzdCBiZSB0YWtlbiBhcyBncmFudGVkIHRoYXQgdGhlIGJlc3QKCQkJCQlkaXNwb3NpdGlvbiBpcyBwcm9kdWNlZCBieSB0aGUgYmVzdCBtZWFucywgYW5kIHRoYXQgdGhlIGJlc3QgYWN0aW9ucwoJCQkJCWluIGVhY2ggZGVwYXJ0bWVudCBvZiBjb25kdWN0IHJlc3VsdCBmcm9tIHRoZSBleGNlbGxlbmNlcyBiZWxvbmdpbmcgdG8KCQkJCQllYWNoIGRlcGFydG1lbnTigJRmb3IgZXhhbXBsZSwgaXQgaXMgdGhlIGJlc3QgZXhlcmNpc2VzIGFuZAoJCQkJCWZvb2QgdGhhdCBwcm9kdWNlIGEgZ29vZCBjb25kaXRpb24gb2YgYm9keSwgYW5kIGEgZ29vZCBjb25kaXRpb24gb2YKCQkJCQlib2R5IGVuYWJsZXMgbWVuIHRvIGRvIHRoZSBiZXN0IHdvcms7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4yNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBmdXJ0aGVyLCB0aGF0IGV2ZXJ5IGRpc3Bvc2l0aW9uIGlzIGJvdGgKCQkJCQlwcm9kdWNlZCBhbmQgZGVzdHJveWVkIGJ5IHRoZSBzYW1lIHRoaW5ncyBhcHBsaWVkIGluIGEgY2VydGFpbiBtYW5uZXIsCgkJCQkJZm9yIGV4YW1wbGUgaGVhbHRoIGJ5IGZvb2QgYW5kIGV4ZXJjaXNlcyBhbmQgY2xpbWF0ZTsgdGhlc2UgcG9pbnRzIGFyZQoJCQkJCWNsZWFyIGZyb20gaW5kdWN0aW9uLiBUaGVyZWZvcmUgZ29vZG5lc3MgdG9vIGlzIHRoZSBzb3J0IG9mCgkJCQkJZGlzcG9zaXRpb24gdGhhdCBpcyBjcmVhdGVkIGJ5IHRoZSBiZXN0IG1vdmVtZW50cyBpbiB0aGUgc3Bpcml0IGFuZCBpcwoJCQkJCWFsc28gdGhlIHNvdXJjZSBvZiB0aGUgcHJvZHVjdGlvbiBvZiB0aGUgc3Bpcml0J3MgYmVzdCBhY3Rpb25zIGFuZAoJCQkJCWVtb3Rpb25zOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gYW5kIGl0IGlzIGluCgkJCQkJb25lIHdheSBwcm9kdWNlZCBhbmQgaW4gYW5vdGhlciB3YXkgZGVzdHJveWVkIGJ5IHRoZSBzYW1lIHRoaW5ncywgYW5kCgkJCQkJaXRzIGVtcGxveW1lbnQgb2YgdGhlIHRoaW5ncyB0aGF0IGNhdXNlIGJvdGggaXRzIGluY3JlYXNlIGFuZCBpdHMKCQkJCQlkZXN0cnVjdGlvbiBpcyBkaXJlY3RlZCB0b3dhcmRzIHRoZSB0aGluZ3MgdG93YXJkcyB3aGljaCBpdCBjcmVhdGVzCgkJCQkJdGhlIGJlc3QgZGlzcG9zaXRpb24uIEFuZCB0aGlzIGlzIGluZGljYXRlZCBieSB0aGUgZmFjdCB0aGF0IGJvdGgKCQkJCQlnb29kbmVzcyBhbmQgYmFkbmVzcyBoYXZlIHRvIGRvIHdpdGggdGhpbmdzIHBsZWFzYW50IGFuZCBwYWluZnVsOyBmb3IKCQkJCQlwdW5pc2htZW50cywgd2hpY2ggYXJlIG1lZGljaW5lcywgYW5kIHdoaWNoIGFzIGlzIHRoZSBjYXNlIHdpdGggb3RoZXIKCQkJCQljdXJlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5lLmcuIGZldmVyLCB3aGljaCBpcwoJCQkJCQljYXVzZWQgYnkgaGVhdCwgaXMgY3VyZWQgYnkgY29sZCAodGhlIGNvbnRyYXJ5IGRvY3RyaW5lIHRvCgkJCQkJCWhvbW9lb3BhdGh5LCBzaW1pbGlhIHNpbWlsaWJ1cyBjdXJhbnR1cikuPC9ub3RlPiBvcGVyYXRlIGJ5CgkJCQkJbWVhbnMgb2Ygb3Bwb3NpdGVzLCBvcGVyYXRlIGJ5IG1lYW5zIG9mIHBsZWFzdXJlcyBhbmQgcGFpbnMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgaXMgY2xlYXIsIHRoZXJlZm9yZSwgdGhhdCBNb3JhbCBHb29kbmVzcyBoYXMgdG8gZG8gd2l0aCBwbGVhc3VyZXMKCQkJCQlhbmQgcGFpbnMuIEFuZCBzaW5jZSBtb3JhbCBjaGFyYWN0ZXIgaXMsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjIwYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1220b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFzIGV2ZW4gaXRzCgkJCQkJbmFtZSBpbXBsaWVzIHRoYXQgaXQgaGFzIGl0cyBncm93dGggZnJvbSBoYWJpdCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4bymzrjOv8+CPC9mb3JlaWduPiBkZXJpdmVkCgkJCQkJCWZyb20gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byUzrjOv8+CPC9mb3JlaWduPiBieSBsZW5ndGhlbmluZyBvZgoJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtTwvZm9yZWlnbj4gdG8gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrc8L2ZvcmVpZ24+OiBjZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExMDRiIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4KCQkJCQkJCTIuMy40PC9iaWJsPiBUaGlzIGNsYXVzZSBhbmQgdGhlIG9uZSBmb2xsb3dpbmcgaW50ZXJydXB0IHRoZQoJCQkJCQljb25zdHJ1Y3Rpb24gb2YgdGhlIHNlbnRlbmNlLjwvbm90ZT4gYW5kIGJ5IG91ciBvZnRlbiBtb3ZpbmcgaW4KCQkJCQlhIGNlcnRhaW4gd2F5IGEgaGFiaXQgbm90IGlubmF0ZSBpbiB1cyBpcyBmaW5hbGx5IHRyYWluZWQgdG8gYmUKCQkJCQlvcGVyYXRpdmUgaW4gdGhhdCB3YXkgKHdoaWNoIHdlIGRvIG5vdCBvYnNlcnZlIGluIGluYW5pbWF0ZSBvYmplY3RzLAoJCQkJCWZvciBub3QgZXZlbiBpZiB5b3UgdGhyb3cgYSBzdG9uZSB1cHdhcmRzIHRlbiB0aG91c2FuZCB0aW1lcyB3aWxsIGl0CgkJCQkJZXZlciByaXNlIHVwd2FyZCB1bmxlc3MgdW5kZXIgdGhlIG9wZXJhdGlvbiBvZiBmb3JjZSnigJRsZXQKCQkJCQltb3JhbCBjaGFyYWN0ZXIgdGhlbiBiZSBkZWZpbmVkIGFzIGEgcXVhbGl0eSBvZiB0aGUgc3Bpcml0IGluCgkJCQkJYWNjb3JkYW5jZSB3aXRoIGdvdmVybmluZyByZWFzb24gdGhhdCBpcyBjYXBhYmxlIG9mIGZvbGxvd2luZyB0aGUKCQkJCQlyZWFzb24uIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8ps64zr/PgjwvZm9yZWlnbj4gZGVyaXZlZAoJCQkJCQlmcm9tIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8lM64zr/PgjwvZm9yZWlnbj4gYnkgbGVuZ3RoZW5pbmcgb2YKCQkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrU8L2ZvcmVpZ24+IHRvIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs63PC9mb3JlaWduPjogY2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTA0YiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguCgkJCQkJCQkyLjMuNDwvYmlibD4gVGhpcyBjbGF1c2UgYW5kIHRoZSBvbmUgZm9sbG93aW5nIGludGVycnVwdCB0aGUKCQkJCQkJY29uc3RydWN0aW9uIG9mIHRoZSBzZW50ZW5jZS48L3RyYW5zbGF0aW9uPg=="
translation['2.1220b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IFdlIGhhdmUgdGhlbiB0bwoJCQkJCXNheSB3aGF0IGlzIHRoZSBwYXJ0IG9mIHRoZSBzcGlyaXQgaW4gcmVzcGVjdCBvZiB3aGljaCBvdXIgbW9yYWwKCQkJCQljaGFyYWN0ZXJzIGFyZSBvZiBhIGNlcnRhaW4gcXVhbGl0eS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQW5kIGl0IHdpbGwgYmUgaW4gcmVzcGVjdCBvZiBvdXIgZmFjdWx0aWVzIGZvcgoJCQkJCWVtb3Rpb25zIGFjY29yZGluZyB0byB3aGljaCBwZW9wbGUgYXJlIHRlcm1lZCBsaWFibGUgdG8gc29tZSBlbW90aW9uLAoJCQkJCWFuZCBhbHNvIG9mIHRoZSBzdGF0ZXMgb2YgY2hhcmFjdGVyIGFjY29yZGluZyB0byB3aGljaCBwZW9wbGUgcmVjZWl2ZQoJCQkJCWNlcnRhaW4gZGVzaWduYXRpb25zIGluIHJlc3BlY3Qgb2YgdGhlIGVtb3Rpb25zLCBiZWNhdXNlIG9mIHRoZWlyCgkJCQkJZXhwZXJpZW5jaW5nIG9yIGJlaW5nIGV4ZW1wdCBmcm9tIHNvbWUgZm9ybSBvZiBlbW90aW9uLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFmdGVyIHRoaXMgY29tZXMgdGhlIGNsYXNzaWZpY2F0aW9uLCBtYWRlIGluIHByZXZpb3VzCgkJCQkJZGlzY3Vzc2lvbnMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgYQoJCQkJCQlyZWZlcmVuY2UgdG8gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExMDViIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTEwNWIgMjA8L2JpYmw+LAoJCQkJCQlpbnNlcnRlZCBpbiB0aGUgYmVsaWVmIHRoYXQgdGhlIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkV1ZGVtaWFuIEV0aGljczwvdGl0bGU+CgkJCQkJCWlzIHRoZSBsYXRlciB3b3JrLjwvbm90ZT4gb2YgdGhlIG1vZGVzIG9mIGVtb3Rpb24sIHRoZSBmYWN1bHRpZXMKCQkJCQlhbmQgdGhlIHN0YXRlcyBvZiBjaGFyYWN0ZXIuIEJ5IGVtb3Rpb25zIEkgbWVhbiBzdWNoIHRoaW5ncyBhcyBhbmdlciwKCQkJCQlmZWFyLCBzaGFtZSwgZGVzaXJlLCBhbmQgZ2VuZXJhbGx5IHRob3NlIGV4cGVyaWVuY2VzIHRoYXQgYXJlIGluCgkJCQkJdGhlbXNlbHZlcyB1c3VhbGx5IGFjY29tcGFuaWVkIGJ5IHNlbnNvcnkgcGxlYXN1cmUgb3IgcGFpbi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExMDViIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTEwNWIgMjA8L2JpYmw+LAoJCQkJCQlpbnNlcnRlZCBpbiB0aGUgYmVsaWVmIHRoYXQgdGhlIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkV1ZGVtaWFuIEV0aGljczwvdGl0bGU+CgkJCQkJCWlzIHRoZSBsYXRlciB3b3JrLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCB0byB0aGVzZSB0aGVyZSBpcyBubwoJCQkJCXF1YWxpdHkgY29ycmVzcG9uZGluZyBbYnV0IHRoZXkgYXJlIHBhc3NpdmVdLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIGludGVycG9sYXRpb24gd2FzIG1hZGUgYnkgYW4gZWRpdG9yIHdobwoJCQkJCQlkZXJpdmVkIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Azr/OueG9uc+EzrfPgjwvZm9yZWlnbj4gZnJvbSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM6/zrnOteG/ls69PC9mb3JlaWduPi48L25vdGU+IEJ1dCBxdWFsaXR5CgkJCQkJY29ycmVzcG9uZHMgdG8gdGhlIGZhY3VsdGllczogYnkgZmFjdWx0aWVzIEkgbWVhbiB0aGUgcHJvcGVydGllcwoJCQkJCWFjdGluZyBieSB3aGljaCBwZXJzb25zIGFyZSBkZXNpZ25hdGVkIGJ5IHRoZSBuYW1lcyBvZiB0aGUgdmFyaW91cwoJCQkJCWVtb3Rpb25zLCBmb3IgaW5zdGFuY2UgY2hvbGVyaWMsIGluc2Vuc2l0aXZlLCBlcm90aWMsIGJhc2hmdWwsCgkJCQkJc2hhbWVsZXNzLiBTdGF0ZXMgb2YgY2hhcmFjdGVyIGFyZSB0aGUgc3RhdGVzIHRoYXQgY2F1c2UgdGhlIGVtb3Rpb25zCgkJCQkJdG8gYmUgcHJlc2VudCBlaXRoZXIgcmF0aW9uYWxseSBvciB0aGUgb3Bwb3NpdGU6PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DOv8654b25z4TOt8+CPC9mb3JlaWduPiBmcm9tIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Azr/Ouc614b+Wzr08L2ZvcmVpZ24+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3IgZXhhbXBsZSBjb3VyYWdlLCBzb2JyaWV0eSBvZiBtaW5kLAoJCQkJCWNvd2FyZGljZSwgcHJvZmxpZ2FjeS48L3RyYW5zbGF0aW9uPg=="
translation['2.1221a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIGRpc3RpbmN0aW9ucyBoYXZpbmcgYmVlbgoJCQkJCWVzdGFibGlzaGVkLCBpdCBtdXN0IGJlIGdyYXNwZWQgdGhhdCBpbiBldmVyeSBjb250aW51dW0gdGhhdCBpcwoJCQkJCWRpdmlzaWJsZSB0aGVyZSBpcyBleGNlc3MgYW5kIGRlZmljaWVuY3kgYW5kIGEgbWVhbiwgYW5kIHRoZXNlIGVpdGhlcgoJCQkJCWluIHJlbGF0aW9uIHRvIG9uZSBhbm90aGVyIG9yIGluIHJlbGF0aW9uIHRvIHVzLCBmb3IgaW5zdGFuY2UgaW4KCQkJCQlneW1uYXN0aWNzIG9yIG1lZGljaW5lIG9yIGFyY2hpdGVjdHVyZSBvciBuYXZpZ2F0aW9uLCBhbmQgaW4gYW55CgkJCQkJcHJhY3RpY2FsIHB1cnN1aXQgb2Ygd2hhdGV2ZXIgc29ydCwgYm90aCBzY2llbnRpZmljIGFuZCB1bnNjaWVudGlmaWMsCgkJCQkJYm90aCB0ZWNobmljYWwgYW5kIHVudGVjaG5pY2FsOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBmb3IgbW90aW9uIGlzIGEgY29udGludXVtLCBhbmQgY29uZHVjdCBpcyBhIG1vdGlvbi4KCQkJCQlBbmQgaW4gYWxsIHRoaW5ncyB0aGUgbWVhbiBpbiByZWxhdGlvbiB0byB1cyBpcyB0aGUgYmVzdCwgZm9yIHRoYXQgaXMKCQkJCQlhcyBrbm93bGVkZ2UgYW5kIHJlYXNvbiBiaWQuIEFuZCBldmVyeXdoZXJlIHRoaXMgYWxzbyBwcm9kdWNlcyB0aGUKCQkJCQliZXN0IHN0YXRlLiBUaGlzIGlzIHByb3ZlZCBieSBpbmR1Y3Rpb24gYW5kIHJlYXNvbjogY29udHJhcmllcyBhcmUKCQkJCQltdXR1YWxseSBkZXN0cnVjdGl2ZSwgYW5kIGV4dHJlbWVzIGFyZSBjb250cmFyeSBib3RoIHRvIGVhY2ggb3RoZXIgYW5kCgkJCQkJdG8gdGhlIG1lYW4sIGFzIHRoZSBtZWFuIGlzIGVpdGhlciBleHRyZW1lIGluIHJlbGF0aW9uIHRvIHRoZQoJCQkJCW90aGVy4oCUZm9yIGV4YW1wbGUgdGhlIGVxdWFsIGlzIGdyZWF0ZXIgdGhhbiB0aGUgbGVzcyBhbmQKCQkJCQlsZXNzIHRoYW4gdGhlIGdyZWF0ZXIuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJSGVuY2UgbW9yYWwgZ29vZG5lc3MgbXVzdCBiZSBjb25jZXJuZWQgd2l0aCBjZXJ0YWluIG1lYW5zIGFuZCBtdXN0IGJlCgkJCQkJYSBtaWRkbGUgc3RhdGUuIFdlIG11c3QsIHRoZXJlZm9yZSwgYXNjZXJ0YWluIHdoYXQgc29ydCBvZiBtaWRkbGUKCQkJCQlzdGF0ZSBpcyBnb29kbmVzcyBhbmQgd2l0aCB3aGF0IHNvcnQgb2YgbWVhbnMgaXQgaXMgY29uY2VybmVkLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy40IiB1bml0PSJMb2ViIGNoYXAiIC8+IExldCBlYWNoIHRoZW4gYmUKCQkJCQl0YWtlbiBieSB3YXkgb2YgaWxsdXN0cmF0aW9uIGFuZCBzdHVkaWVkIHdpdGggdGhlIGhlbHAgb2YgdGhlCgkJCQkJc2NoZWR1bGU6IDx0YWJsZSBjbGFzcz0idHJhbnNsYXRpb24iPgoJCQkJCQk8cm93IGNsYXNzPSJ0cmFuc2xhdGlvbiIgcm9sZT0iZGF0YSI+CgkJCQkJCQk8Y2VsbCBjbGFzcz0idHJhbnNsYXRpb24iIGNvbHM9IjEiIHJvbGU9ImRhdGEiIHJvd3M9IjEiPklyYXNjaWJpbGl0eTwvY2VsbD4KCQkJCQkJCTxjZWxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgY29scz0iMSIgcm9sZT0iZGF0YSIgcm93cz0iMSI+U3Bpcml0bGVzc25lc3M8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBwbGFjZSBpcwoJCQkJCQkJCWZpbGxlZCBpbiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTEwOGEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4gRXRoLiAxMTA4YQoJCQkJCQkJCQk3PC9iaWJsPiBieSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDOv8+BzrPOt8+D4b23zrE8L2ZvcmVpZ24+LCBTcGlyaXRsZXNzbmVzcywKCQkJCQkJCQlsYWNrIG9mIGlyYXNjaWJpbGl0eSwgYW5kIHBlcmhhcHMgdGhlIEdyZWVrCgkJCQkJCQkJc2hvdWxkIGJlIGFsdGVyZWQgdG8gdGhhdCBoZXJlLjwvbm90ZT48L2NlbGw+CgkJCQkJCQk8Y2VsbCBjbGFzcz0idHJhbnNsYXRpb24iIGNvbHM9IjEiIHJvbGU9ImRhdGEiIHJvd3M9IjEiPkdlbnRsZW5lc3M8L2NlbGw+CgkJCQkJCTwvcm93PgoJCQkJCQk8cm93IGNsYXNzPSJ0cmFuc2xhdGlvbiIgcm9sZT0iZGF0YSI+CgkJCQkJCQk8Y2VsbCBjbGFzcz0idHJhbnNsYXRpb24iIGNvbHM9IjEiIHJvbGU9ImRhdGEiIHJvd3M9IjEiPlJhc2huZXNzPC9jZWxsPgoJCQkJCQkJPGNlbGwgY2xhc3M9InRyYW5zbGF0aW9uIiBjb2xzPSIxIiByb2xlPSJkYXRhIiByb3dzPSIxIj5Db3dhcmRpY2U8L2NlbGw+CgkJCQkJCQk8Y2VsbCBjbGFzcz0idHJhbnNsYXRpb24iIGNvbHM9IjEiIHJvbGU9ImRhdGEiIHJvd3M9IjEiPkNvdXJhZ2U8L2NlbGw+CgkJCQkJCTwvcm93PgoJCQkJCTwvdGFibGU+CgkJCQkJPHJvdyBjbGFzcz0idHJhbnNsYXRpb24iIHJvbGU9ImRhdGEiPgoJCQkJCQkJPGNlbGwgY2xhc3M9InRyYW5zbGF0aW9uIiBjb2xzPSIxIiByb2xlPSJkYXRhIiByb3dzPSIxIj5JcmFzY2liaWxpdHk8L2NlbGw+CgkJCQkJCQk8Y2VsbCBjbGFzcz0idHJhbnNsYXRpb24iIGNvbHM9IjEiIHJvbGU9ImRhdGEiIHJvd3M9IjEiPlNwaXJpdGxlc3NuZXNzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgcGxhY2UgaXMKCQkJCQkJCQlmaWxsZWQgaW4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExMDhhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTEwOGEKCQkJCQkJCQkJNzwvYmlibD4gYnkgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzr/Pgc6zzrfPg+G9t86xPC9mb3JlaWduPiwgU3Bpcml0bGVzc25lc3MsCgkJCQkJCQkJbGFjayBvZiBpcmFzY2liaWxpdHksIGFuZCBwZXJoYXBzIHRoZSBHcmVlawoJCQkJCQkJCXNob3VsZCBiZSBhbHRlcmVkIHRvIHRoYXQgaGVyZS48L25vdGU+PC9jZWxsPgoJCQkJCQkJPGNlbGwgY2xhc3M9InRyYW5zbGF0aW9uIiBjb2xzPSIxIiByb2xlPSJkYXRhIiByb3dzPSIxIj5HZW50bGVuZXNzPC9jZWxsPgoJCQkJCQk8L3Jvdz4KCQkJCQkJPGNlbGwgY2xhc3M9InRyYW5zbGF0aW9uIiBjb2xzPSIxIiByb2xlPSJkYXRhIiByb3dzPSIxIj5JcmFzY2liaWxpdHk8L2NlbGw+CgkJCQkJCQk8Y2VsbCBjbGFzcz0idHJhbnNsYXRpb24iIGNvbHM9IjEiIHJvbGU9ImRhdGEiIHJvd3M9IjEiPlNwaXJpdGxlc3NuZXNzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgcGxhY2UgaXMKCQkJCQkJCQlmaWxsZWQgaW4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExMDhhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTEwOGEKCQkJCQkJCQkJNzwvYmlibD4gYnkgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzr/Pgc6zzrfPg+G9t86xPC9mb3JlaWduPiwgU3Bpcml0bGVzc25lc3MsCgkJCQkJCQkJbGFjayBvZiBpcmFzY2liaWxpdHksIGFuZCBwZXJoYXBzIHRoZSBHcmVlawoJCQkJCQkJCXNob3VsZCBiZSBhbHRlcmVkIHRvIHRoYXQgaGVyZS48L25vdGU+PC9jZWxsPgoJCQkJCQkJPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgcGxhY2UgaXMKCQkJCQkJCQlmaWxsZWQgaW4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExMDhhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTEwOGEKCQkJCQkJCQkJNzwvYmlibD4gYnkgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzr/Pgc6zzrfPg+G9t86xPC9mb3JlaWduPiwgU3Bpcml0bGVzc25lc3MsCgkJCQkJCQkJbGFjayBvZiBpcmFzY2liaWxpdHksIGFuZCBwZXJoYXBzIHRoZSBHcmVlawoJCQkJCQkJCXNob3VsZCBiZSBhbHRlcmVkIHRvIHRoYXQgaGVyZS48L25vdGU+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExMDhhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTEwOGEKCQkJCQkJCQkJNzwvYmlibD4gYnkgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzr/Pgc6zzrfPg+G9t86xPC9mb3JlaWduPiwgU3Bpcml0bGVzc25lc3MsCgkJCQkJCQkJbGFjayBvZiBpcmFzY2liaWxpdHksIGFuZCBwZXJoYXBzIHRoZSBHcmVlawoJCQkJCQkJCXNob3VsZCBiZSBhbHRlcmVkIHRvIHRoYXQgaGVyZS48Y2VsbCBjbGFzcz0idHJhbnNsYXRpb24iIGNvbHM9IjEiIHJvbGU9ImRhdGEiIHJvd3M9IjEiPkdlbnRsZW5lc3M8L2NlbGw+CgkJCQkJCTxyb3cgY2xhc3M9InRyYW5zbGF0aW9uIiByb2xlPSJkYXRhIj4KCQkJCQkJCTxjZWxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgY29scz0iMSIgcm9sZT0iZGF0YSIgcm93cz0iMSI+UmFzaG5lc3M8L2NlbGw+CgkJCQkJCQk8Y2VsbCBjbGFzcz0idHJhbnNsYXRpb24iIGNvbHM9IjEiIHJvbGU9ImRhdGEiIHJvd3M9IjEiPkNvd2FyZGljZTwvY2VsbD4KCQkJCQkJCTxjZWxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgY29scz0iMSIgcm9sZT0iZGF0YSIgcm93cz0iMSI+Q291cmFnZTwvY2VsbD4KCQkJCQkJPC9yb3c+CgkJCQkJPGNlbGwgY2xhc3M9InRyYW5zbGF0aW9uIiBjb2xzPSIxIiByb2xlPSJkYXRhIiByb3dzPSIxIj5SYXNobmVzczwvY2VsbD4KCQkJCQkJCTxjZWxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgY29scz0iMSIgcm9sZT0iZGF0YSIgcm93cz0iMSI+Q293YXJkaWNlPC9jZWxsPgoJCQkJCQkJPGNlbGwgY2xhc3M9InRyYW5zbGF0aW9uIiBjb2xzPSIxIiByb2xlPSJkYXRhIiByb3dzPSIxIj5Db3VyYWdlPC9jZWxsPgoJCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIyMWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1221a.1'] = ""
translation['2.1221a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy41IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIGFuZCBzdWNoIGFzIHRoZXNlIGFyZSB0aGUgZW1vdGlvbnMKCQkJCQl0aGF0IHRoZSBzcGlyaXQgZXhwZXJpZW5jZXMsIGFuZCB0aGV5IGFyZSBhbGwgZGVzaWduYXRlZCBmcm9tIGJlaW5nCgkJCQkJZWl0aGVyIGV4Y2Vzc2l2ZSBvciBkZWZlY3RpdmUuIFRoZSBtYW4gdGhhdCBnZXRzIGFuZ3J5IG1vcmUgYW5kIG1vcmUKCQkJCQlxdWlja2x5IGFuZCB3aXRoIG1vcmUgcGVvcGxlIHRoYW4gaGUgb3VnaHQgaXMgaXJhc2NpYmxlLCBoZSB0aGF0IGluCgkJCQkJcmVzcGVjdCBvZiBwZXJzb25zIGFuZCBvY2Nhc2lvbnMgYW5kIG1hbm5lciBpcyBkZWZpY2llbnQgaW4gYW5nZXIgaXMKCQkJCQlpbnNlbnNpdGl2ZTsgdGhlIG1hbiB0aGF0IGlzIG5vdCBhZnJhaWQgb2YgdGhpbmdzIG9mIHdoaWNoIGhlIG91Z2h0IHRvCgkJCQkJYmUgYWZyYWlkLCBub3Igd2hlbiBub3IgYXMgaGUgb3VnaHQsIGlzIHJhc2gsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy42IiB1bml0PSJMb2ViIGNoYXAiIC8+IGhlIHRoYXQgaXMgYWZyYWlkIG9mIHRoaW5ncyBvZgoJCQkJCXdoaWNoIGhlIG91Z2h0IG5vdCB0byBiZSBhZnJhaWQsIGFuZCB3aGVuIGFuZCBhcyBoZSBvdWdodCBub3QgdG8gYmUsCgkJCQkJaXMgY293YXJkbHkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBzaGFtZWxlc3MgYW5kCgkJCQkJCWRpZmZpZGVudCBhcmUgb21pdHRlZCBoZXJlOiBzZWUgdGhlIHRhYmxlCgkJCQkJCWFib3ZlLjwvbm90ZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+U2ltaWxhcmx5IGFsc28gb25lIHRoYXQgaXMgYSBwcmV5IHRvIGhpcyBkZXNpcmVzIGFuZCB0aGF0IGV4Y2VlZHMgaW4KCQkJCQlldmVyeXRoaW5nIHBvc3NpYmxlIGlzIHByb2ZsaWdhdGUsIGFuZCBvbmUgdGhhdCBpcyBkZWZpY2llbnQgYW5kIGRvZXMKCQkJCQlub3QgZGVzaXJlIGV2ZW4gdG8gYSBwcm9wZXIgZGVncmVlIGFuZCBpbiBhIG5hdHVyYWwgd2F5LCBidXQgaXMgYXMKCQkJCQlkZXZvaWQgb2YgZmVlbGluZyBhcyBhIHN0b25lLCBpcyBpbnNlbnNpdGl2ZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+RW52eSBpbiAxMiBjb21lcyBoZXJlIGluIHRoZQoJCQkJCQlzY2hlZHVsZS48L25vdGU+PC90cmFuc2xhdGlvbj4="
translation['2.1221b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy43IiB1bml0PSJMb2ViIGNoYXAiIC8+IFRoZQoJCQkJCW1hbiB0aGF0IHNlZWtzIGdhaW4gZnJvbSBldmVyeSBzb3VyY2UgaXMgYSBwcm9maXRlZXIsIGFuZCBoZSB0aGF0CgkJCQkJc2Vla3MgZ2FpbiBpZiBub3QgZnJvbSBubyBzb3VyY2UsIHlldCBmcm9tIGZldywgaXMgYSB3YXN0ZXIuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBwcm9kaWdhbCBhbmQgbWVhbiBpbiAxMCBjb21lcwoJCQkJCQloZXJlIGluIHRoZSBzY2hlZHVsZS48L25vdGU+IEhlIHRoYXQgcHJldGVuZHMgdG8gaGF2ZSBtb3JlCgkJCQkJcG9zc2Vzc2lvbnMgdGhhbiBoZSByZWFsbHkgaGFzIGlzIGEgYm9hc3RlciwgYW5kIGhlIHRoYXQgcHJldGVuZHMgdG8KCQkJCQloYXZlIGZld2VyIGlzIGEgc2VsZi1kZXByZWNpYXRvci4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gT25lIHRoYXQgam9pbnMgaW4gYXBwcm92YWwgbW9yZSB0aGFuIGlzIGZpdHRpbmcgaXMgYQoJCQkJCWZsYXR0ZXJlciwgb25lIHRoYXQgZG9lcyBzbyBsZXNzIHRoYW4gaXMgZml0dGluZyBpcyBzdXJseS4gVG8gYmUgdG9vCgkJCQkJY29tcGxhaXNhbnQgaXMgc3Vic2VydmllbmNlOyB0byBiZSBjb21wbGFpc2FudCBzZWxkb20gYW5kIHJlbHVjdGFudGx5CgkJCQkJaXMgc3R1YmJvcm5uZXNzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBZ2FpbiwKCQkJCQl0aGUgbWFuIHRoYXQgZW5kdXJlcyBubyBwYWluLCBub3QgZXZlbiBpZiBpdCBpcyBnb29kIGZvciBoaW0sIGlzCgkJCQkJbHV4dXJpb3VzOyBvbmUgdGhhdCBjYW4gZW5kdXJlIGFsbCBwYWluIGFsaWtlIGlzIHN0cmljdGx5IHNwZWFraW5nCgkJCQkJbmFtZWxlc3MsIGJ1dCBieSBtZXRhcGhvciBoZSBpcyBjYWxsZWQgaGFyZCwgcGF0aWVudCBvciBlbmR1cmluZy4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gSGUgdGhhdCByYXRlcwoJCQkJCWhpbXNlbGYgdG9vIGhpZ2ggaXMgdmFpbiwgaGUgdGhhdCByYXRlcyBoaW1zZWxmIHRvbyBsb3csCgkJCQkJc21hbGwtc3Bpcml0ZWQuIEFnYWluLCBoZSB0aGF0IGV4Y2VlZHMgaW4gYWxsIGV4cGVuZGl0dXJlIGlzIHByb2RpZ2FsLAoJCQkJCWhlIHRoYXQgZmFsbHMgc2hvcnQgaW4gYWxsLCBtZWFuLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gU2ltaWxhcmx5IHRoZSBzaGFiYnkgbWFuIGFuZCB0aGUKCQkJCQlzd2FnZ2VyZXLigJR0aGUgbGF0dGVyIGV4Y2VlZHMgd2hhdCBpcyBmaXR0aW5nIGFuZCB0aGUgZm9ybWVyCgkJCQkJZmFsbHMgYmVsb3cgaXQuIFRoZSByYXNjYWwgZ3Jhc3BzIHByb2ZpdCBieSBldmVyeSBtZWFucyBhbmQgZnJvbSBldmVyeQoJCQkJCXNvdXJjZSwgdGhlIHNpbXBsZXRvbiBkb2VzIG5vdCBtYWtlIHByb2ZpdCBldmVuIGZyb20gdGhlIHByb3BlcgoJCQkJCXNvdXJjZXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBFbnZ5IGNvbnNpc3RzCgkJCQkJaW4gYmVpbmcgYW5ub3llZCBhdCBwcm9zcGVyaXR5IG1vcmUgb2Z0ZW4gdGhhbiBvbmUgb3VnaHQgdG8gYmUsIGZvcgoJCQkJCXRoZSBlbnZpb3VzIGFyZSBhbm5veWVkIGJ5IHRoZSBwcm9zcGVyaXR5IGV2ZW4gb2YgdGhvc2Ugd2hvIGRlc2VydmUgdG8KCQkJCQlwcm9zcGVyOyB0aGUgb3Bwb3NpdGUgY2hhcmFjdGVyIGlzIGxlc3MgZGVmaW5pdGVseSBuYW1lZCwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyMjFiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1221b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCBpdCBpcyB0aGUgbWFuIHRoYXQgZ29lcyB0b28gZmFyIGluIG5vdCBiZWluZyBhbm5veWVkCgkJCQkJZXZlbiBhdCB0aGUgcHJvc3Blcml0eSBvZiB0aGUgdW5kZXNlcnZpbmcsIGFuZCBpcyBlYXN5IGdvaW5nLCBhcwoJCQkJCWdsdXR0b25zIGFyZSBpbiByZWdhcmQgdG8gZm9vZCwgd2hlcmVhcyBoaXMgb3Bwb3NpdGUgaXMKCQkJCQlkaWZmaWN1bHQtdGVtcGVyZWQgaW4gcmVzcGVjdCBvZiBqZWFsb3VzeS7igJQ8L3RyYW5zbGF0aW9uPg=="
translation['2.1221b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBJdCBpcyBzdXBlcmZsdW91cyB0byBzdGF0ZSBpbgoJCQkJCXRoZSBkZWZpbml0aW9uIHRoYXQgdGhlIHNwZWNpZmllZCByZWxhdGlvbiB0byBlYWNoIHRoaW5nIG11c3Qgbm90IGJlCgkJCQkJYWNjaWRlbnRhbDsgbm8gc2NpZW5jZSB3aGV0aGVyIHRoZW9yZXRpY2FsIG9yIHByb2R1Y3RpdmUgbWFrZXMgdGhpcwoJCQkJCWFkZGl0aW9uIHRvIHRoZSBkZWZpbml0aW9uIGVpdGhlciBpbiBkaXNjb3Vyc2Ugb3IgaW4gcHJhY3RpY2UsIGJ1dAoJCQkJCXRoaXMgYWRkaXRpb24gaXMgYWltZWQgYWdhaW5zdCB0aGUgbG9naWNhbCBxdWliYmxpbmcgb2YgdGhlIHNjaWVuY2VzLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBMZXQgdXMgdGhlbiBhY2NlcHQKCQkJCQl0aGVzZSBzaW1wbGUgZGVmaW5pdGlvbnMsIGFuZCBsZXQgdXMgbWFrZSB0aGVtIG1vcmUgcHJlY2lzZSB3aGVuIHdlCgkJCQkJYXJlIHNwZWFraW5nIGFib3V0IHRoZSBvcHBvc2l0ZSBkaXNwb3NpdGlvbnMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkluIEJvb2sgMy48L25vdGU+IEJ1dCB0aGVzZSBtb2RlcyBvZiBlbW90aW9uCgkJCQkJdGhlbXNlbHZlcyBhcmUgZGl2aWRlZCBpbnRvIHNwZWNpZXMgZGVzaWduYXRlZCBhY2NvcmRpbmcgdG8gdGhlaXIKCQkJCQlkaWZmZXJlbmNlIGluIHJlc3BlY3Qgb2YgdGltZSBvciBpbnRlbnNpdHkgb3IgaW4gcmVnYXJkIHRvIG9uZSBvZiB0aGUKCQkJCQlvYmplY3RzIHRoYXQgY2F1c2UgdGhlIGVtb3Rpb25zLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMTUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gSSBtZWFuIGZvciBpbnN0YW5jZSB0aGF0IGEgbWFuIGlzIGNhbGxlZAoJCQkJCXF1aWNrLXRlbXBlcmVkIGZyb20gZmVlbGluZyB0aGUgZW1vdGlvbiBvZiBhbmdlciBzb29uZXIgdGhhbiBoZSBvdWdodCwKCQkJCQloYXJzaCBhbmQgcGFzc2lvbmF0ZSBmcm9tIGZlZWxpbmcgaXQgbW9yZSB0aGFuIGhlIG91Z2h0LCBiaXR0ZXIgZnJvbQoJCQkJCWhhdmluZyBhIHRlbmRlbmN5IHRvIGNoZXJpc2ggaGlzIGFuZ2VyLCB2aW9sZW50IGFuZCBhYnVzaXZlIG93aW5nIHRvCgkJCQkJdGhlIGFjdHMgb2YgcmV0YWxpYXRpb24gdG8gd2hpY2ggaGlzIGFuZ2VyIGdpdmVzIHJpc2UuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBNZW4gYXJlIGNhbGxlZCBnb3VybWFuZHMgb3IKCQkJCQlnbHV0dG9ucyBhbmQgZHJ1bmthcmRzIGZyb20gaGF2aW5nIGFuIGlycmF0aW9uYWwgbGlhYmlsaXR5IHRvCgkJCQkJaW5kdWxnZW5jZSBpbiBvbmUgb3IgdGhlIG90aGVyIHNvcnQgb2YgbnV0cmltZW50LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xNyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgaXQgbXVzdCBub3QgYmUgaWdub3JlZCB0aGF0IHNvbWUgb2YgdGhlIHZpY2VzIG1lbnRpb25lZCBjYW5ub3QKCQkJCQliZSBjbGFzc2VkIHVuZGVyIHRoZSBoZWFkaW5nIG9mIG1hbm5lciwgaWYgbWFubmVyIGlzIHRha2VuIHRvIGJlCgkJCQkJZmVlbGluZyB0aGUgZW1vdGlvbiB0byBleGNlc3MuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPkZvciBleGFtcGxlLCBhIG1hbiBpcyBub3QgYW4gYWR1bHRlcmVyIGJlY2F1c2UgaGUKCQkJCQlleGNlZWRzIGluIGludGVyY291cnNlIHdpdGggbWFycmllZCB3b21lbiwgZm9yICdleGNlc3MnIGRvZXMgbm90IGFwcGx5CgkJCQkJaGVyZSwgYnV0IGFkdWx0ZXJ5IG1lcmVseSBpbiBpdHNlbGYgaXMgYSB2aWNlLCBzaW5jZSB0aGUgdGVybSBkZW5vdGluZwoJCQkJCXRoZSBwYXNzaW9uIGltcGxpY2l0bHkgZGVub3RlcyB0aGF0IHRoZSBtYW4gaXMgdmljaW91czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM6/zrnhvbnOvc60zrU8L2ZvcmVpZ24+PSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvM6/z4fOuM63z4HhvbnOvTwvZm9yZWlnbj48L25vdGU+OyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM6/zrnhvbnOvc60zrU8L2ZvcmVpZ24+PSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvM6/z4fOuM63z4HhvbnOvTwvZm9yZWlnbj48L3RyYW5zbGF0aW9uPg=="
translation['2.1222a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBhbmQgc2ltaWxhcmx5IHdpdGggb3V0cmFnZS4gSGVuY2UgbWVuIGRpc3B1dGUgdGhlCgkJCQkJY2hhcmdlLCBhbmQgYWRtaXQgaW50ZXJjb3Vyc2UgYnV0IGRlbnkgYWR1bHRlcnkgb24gdGhlIGdyb3VuZCBvZgoJCQkJCWhhdmluZyBhY3RlZCBpbiBpZ25vcmFuY2Ugb3IgdW5kZXIgY29tcHVsc2lvbiwgb3IgYWRtaXQgc3RyaWtpbmcgYQoJCQkJCWJsb3cgYnV0IGRlbnkgY29tbWl0dGluZyBhbiBvdXRyYWdlOyBhbmQgc2ltaWxhcmx5IGluIG1lZXRpbmcgdGhlCgkJCQkJb3RoZXIgY2hhcmdlcyBvZiB0aGUgc2FtZSBraW5kLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIHBvaW50cyBoYXZpbmcgYmVlbgoJCQkJCXRha2VuLCB3ZSBtdXN0IG5leHQgc2F5IHRoYXQgc2luY2UgdGhlIHNwaXJpdCBoYXMgdHdvIHBhcnRzLCBhbmQgdGhlCgkJCQkJdmlydHVlcyBhcmUgZGl2aWRlZCBiZXR3ZWVuIHRoZW0sIG9uZSBzZXQgYmVpbmcgdGhvc2Ugb2YgdGhlIHJhdGlvbmFsCgkJCQkJcGFydCwgaW50ZWxsZWN0dWFsIHZpcnR1ZXMsIHdob3NlIHdvcmsgaXMgdHJ1dGgsIHdoZXRoZXIgYWJvdXQgdGhlCgkJCQkJbmF0dXJlIG9mIGEgdGhpbmcgb3IgYWJvdXQgaXRzIG1vZGUgb2YgcHJvZHVjdGlvbiwgd2hpbGUgdGhlIG90aGVyIHNldAoJCQkJCWJlbG9uZ3MgdG8gdGhlIHBhcnQgdGhhdCBpcyBpcnJhdGlvbmFsIGJ1dCBwb3NzZXNzZXMgYXBwZXRpdGlvbgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IChmb3IgaWYgdGhlIHNwaXJpdAoJCQkJCWlzIGRpdmlkZWQgaW50byBwYXJ0cywgbm90IGFueSBhbmQgZXZlcnkgcGFydCBwb3NzZXNzZXMgYXBwZXRpdGlvbiksCgkJCQkJaXQgdGhlcmVmb3JlIGZvbGxvd3MgdGhhdCB0aGUgbW9yYWwgY2hhcmFjdGVyIGlzIHZpY2lvdXMgb3IgdmlydHVvdXMKCQkJCQlieSByZWFzb24gb2YgcHVyc3Vpbmcgb3IgYXZvaWRpbmcgY2VydGFpbiBwbGVhc3VyZXMgYW5kIHBhaW5zLiBUaGlzIGlzCgkJCQkJY2xlYXIgZnJvbSB0aGUgY2xhc3NpZmljYXRpb248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Q2YuCgkJCQkJCTEyMjBiIDctMjAuPC9ub3RlPiBvZiB0aGUgZW1vdGlvbnMsIGZhY3VsdGllcyBhbmQgc3RhdGVzIG9mCgkJCQkJY2hhcmFjdGVyLiBGb3IgdGhlIGZhY3VsdGllcyBhbmQgdGhlIHN0YXRlcyBhcmUgY29uY2VybmVkIHdpdGggdGhlCgkJCQkJbW9kZXMgb2YgZW1vdGlvbiwgYW5kIHRoZSBlbW90aW9ucyBhcmUgZGlzdGluZ3Vpc2hlZCBieSBwYWluIGFuZAoJCQkJCXBsZWFzdXJlOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBzbyB0aGF0IGl0CgkJCQkJZm9sbG93cyBmcm9tIHRoZXNlIGNvbnNpZGVyYXRpb25zIGFzIHdlbGwgYXMgZnJvbSB0aGUgcG9zaXRpb25zCgkJCQkJYWxyZWFkeSBsYWlkIGRvd24gdGhhdCBhbGwgbW9yYWwgZ29vZG5lc3MgaXMgY29uY2VybmVkIHdpdGggcGxlYXN1cmVzCgkJCQkJYW5kIHBhaW5zLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBGb3Igb3VyIHN0YXRlCgkJCQkJb2YgY2hhcmFjdGVyIGlzIHJlbGF0ZWQgdG8gYW5kIGNvbmNlcm5lZCB3aXRoIHN1Y2ggdGhpbmdzIGFzIGhhdmUgdGhlCgkJCQkJcHJvcGVydHkgb2YgbWFraW5nIGV2ZXJ5IHBlcnNvbidzIHNwaXJpdCB3b3JzZSBhbmQgYmV0dGVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIyMmEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1222a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkJ1dCB3ZSBzYXkgdGhhdCBtZW4gYXJlIHdpY2tlZCBvd2luZyB0byBwbGVhc3VyZXMgYW5kCgkJCQkJcGFpbnMsIHRocm91Z2ggcHVyc3VpbmcgYW5kIGF2b2lkaW5nIHRoZSB3cm9uZyBvbmVzIG9yIGluIHRoZSB3cm9uZwoJCQkJCXdheS4gSGVuY2UgYWxsIG1lbiByZWFkaWx5IGRlZmluZSB0aGUgdmlydHVlcyBhcyBpbnNlbnNpdGl2ZW5lc3Mgb3IKCQkJCQl0cmFucXVpbGxpdHkgaW4gcmVnYXJkIHRvIHBsZWFzdXJlcyBhbmQgcGFpbnMsIGFuZCB0aGUgdmljZXMgYnkgdGhlCgkJCQkJb3Bwb3NpdGUgcXVhbGl0aWVzLjwvdHJhbnNsYXRpb24+"
translation['2.1222a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBzaW5jZSBpdCBoYXMgYmVlbgoJCQkJCWFzc3VtZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDEyMThiIDM3CgkJCQkJCWZmLjwvbm90ZT4gdGhhdCBnb29kbmVzcyBpcyBhIHN0YXRlIG9mIGNoYXJhY3RlciBvZiBhIHNvcnQgdGhhdCBjYXVzZXMKCQkJCQltZW4gdG8gYmUgY2FwYWJsZSBvZiBkb2luZyB0aGUgYmVzdCBhY3Rpb25zIGFuZCBnaXZlcyB0aGVtIHRoZSBiZXN0CgkJCQkJZGlzcG9zaXRpb24gaW4gcmVnYXJkIHRvIHRoZSBncmVhdGVzdCBnb29kLCBhbmQgdGhlIGJlc3QgYW5kIGdyZWF0ZXN0CgkJCQkJZ29vZCBpcyB0aGF0IHdoaWNoIGlzIGluIGFjY29yZGFuY2Ugd2l0aCByaWdodCBwcmluY2lwbGUsIGFuZCB0aGlzIGlzCgkJCQkJdGhlIG1lYW4gYmV0d2VlbiBleGNlc3MgYW5kIGRlZmljaWVuY3kgcmVsYXRpdmUgdG8gb3Vyc2VsdmVzLCBpdCB3b3VsZAoJCQkJCW5lY2Vzc2FyaWx5IGZvbGxvdyB0aGF0IG1vcmFsIGdvb2RuZXNzIGNvcnJlc3BvbmRzIHdpdGggZWFjaAoJCQkJCXBhcnRpY3VsYXIgbWlkZGxlIHN0YXRlIGFuZCBpcyBjb25jZXJuZWQgd2l0aCBjZXJ0YWluIG1lYW4gcG9pbnRzIGluCgkJCQkJcGxlYXN1cmVzIGFuZCBwYWlucyBhbmQgcGxlYXNhbnQgYW5kIHBhaW5mdWwgdGhpbmdzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgdGhpcyBtaWRkbGUgc3RhdGUgd2lsbAoJCQkJCXNvbWV0aW1lcyBiZSBpbiBwbGVhc3VyZXMgKGZvciBldmVuIGluIHRoZXNlIHRoZXJlIGlzIGV4Y2VzcyBhbmQKCQkJCQlkZWZpY2llbmN5KSwgc29tZXRpbWVzIGluIHBhaW5zLCBzb21ldGltZXMgaW4gYm90aC4gRm9yIGhlIHRoYXQKCQkJCQlleGNlZWRzIGluIGZlZWxpbmcgZGVsaWdodCBleGNlZWRzIGluIHRoZSBwbGVhc2FudCwgYW5kIGhlIHRoYXQKCQkJCQlleGNlZWRzIGluIGZlZWxpbmcgcGFpbiBleGNlZWRzIGluIHRoZSBvcHBvc2l0ZeKAlGFuZCB0aGlzCgkJCQkJd2hldGhlciBoaXMgZmVlbGluZ3MgYXJlIGV4Y2Vzc2l2ZSBhYnNvbHV0ZWx5IG9yIGV4Y2Vzc2l2ZSBpbiByZWxhdGlvbgoJCQkJCXRvIHNvbWUgc3RhbmRhcmQsIGZvciBpbnN0YW5jZSBhcmUgZmVsdCBtb3JlIHRoYW4gb3JkaW5hcnkgbWVuIGZlZWwKCQkJCQl0aGVtOyB3aGVyZWFzIHRoZSBnb29kIG1hbiBmZWVscyBpbiB0aGUgcHJvcGVyCgkJCQkJd2F5LuKAlDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZAoJCQkJCXNpbmNlIHRoZXJlIGlzIGEgY2VydGFpbiBzdGF0ZSBvZiBjaGFyYWN0ZXIgd2hpY2ggcmVzdWx0cyBpbiBpdHMKCQkJCQlwb3NzZXNzb3IncyBiZWluZyBpbiBvbmUgaW5zdGFuY2Ugc3VjaCBhcyB0byBhY2NlcHQgYW4gZXhjZXNzIGFuZCBpbgoJCQkJCWFub3RoZXIgc3VjaCBhcyB0byBhY2NlcHQgYSBkZWZpY2llbmN5IG9mIHRoZSBzYW1lIHRoaW5nLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5pdCBmb2xsb3dzIHRoYXQgYXMgdGhlc2UgYWN0aW9ucwoJCQkJCWFyZSBjb250cmFyeSB0byBlYWNoIG90aGVyIGFuZCB0byB0aGUgbWVhbiwgc28gYWxzbyB0aGUgc3RhdGVzIG9mCgkJCQkJY2hhcmFjdGVyIHRoYXQgY2F1c2UgdGhlbSBhcmUgY29udHJhcnkgdG8gZWFjaCBvdGhlciBhbmQgdG8KCQkJCQl2aXJ0dWUuPC90cmFuc2xhdGlvbj4="
translation['2.1222b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGNvbWVzIGFib3V0LCBob3dldmVyLCB0aGF0IHNvbWV0aW1lcyBhbGwKCQkJCQl0aGUgb3Bwb3NpdGlvbnMgYXJlIG1vcmUgZXZpZGVudCwgc29tZXRpbWVzIHRob3NlIG9uIHRoZSBzaWRlIG9mCgkJCQkJZXhjZXNzLCBpbiBzb21lIGNhc2VzIHRob3NlIG9uIHRoZSBzaWRlIG9mIGRlZmljaWVuY3kuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS41IiB1bml0PSJMb2ViIGNoYXAiIC8+IFRoZSBjYXVzZSBvZiB0aGlzIGNvbnRyYXJpZXR5CgkJCQkJaXMgdGhhdCB0aGUgcmVzZW1ibGFuY2UgZG9lcyBub3QgYWx3YXlzIHJlYWNoIHRoZSBzYW1lIHBvaW50IG9mCgkJCQkJaW5lcXVhbGl0eSBpbiByZWdhcmQgdG8gdGhlIG1pZGRsZSwgYnV0IHNvbWV0aW1lcyBpdCBtYXkgcGFzcyBvdmVyCgkJCQkJbW9yZSBxdWlja2x5IGZyb20gdGhlIGV4Y2Vzcywgc29tZXRpbWVzIGZyb20gdGhlIGRlZmljaWVuY3ksIHRvIHRoZQoJCQkJCW1pZGRsZSBzdGF0ZSwgdGhlIHBlcnNvbiBmYXJ0aGVyIHJlbW92ZWQgZnJvbSB3aGljaCBzZWVtcyB0byBiZSBtb3JlCgkJCQkJY29udHJhcnk6IGZvciBpbnN0YW5jZSwgd2l0aCByZWdhcmQgdG8gdGhlIGJvZHkgZXhjZXNzIGlzIG1vcmUgaGVhbHRoeQoJCQkJCWFuZCBuZWFyZXIgdGhlIG1pZGRsZSB0aGFuIGRlZmljaWVuY3kgaW4gdGhlIGNhc2Ugb2YgZXhlcmNpc2VzIGJ1dAoJCQkJCWRlZmljaWVuY3kgdGhhbiBleGNlc3MgaW4gdGhlIGNhc2Ugb2YgZm9vZC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQ29uc2VxdWVudGx5IHRoZSBzdGF0ZXMgb2YKCQkJCQl3aWxsIGZhdm9yYWJsZSB0byBhdGhsZXRpYyB0cmFpbmluZyB3aWxsIGJlIHZhcmlvdXNseSBmYXZvcmFibGUgdG8KCQkJCQloZWFsdGggYWNjb3JkaW5nIHRvIHRoZSB0d28gZGlmZmVyZW50IGZpZWxkcyBvZiBjaG9pY2XigJRpbgoJCQkJCXRoZSBvbmUgY2FzZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JbiByZXNwZWN0IG9mIGFtb3VudAoJCQkJCQlvZiBleGVyY2lzZS48L25vdGU+IHRoZSBvdmVyLWVuZXJnZXRpYyBtZW4gJmx0O3dpbGwgYmUKCQkJCQluZWFyZXIgdGhlIG1lYW4gdGhhbiB0aGUgc2xhY2sgb25lcyZndDssIGluIHRoZSBvdGhlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JbiByZXNwZWN0IG9mIGFtb3VudCBvZgoJCQkJCQlmb29kLjwvbm90ZT4gdGhlIHRvbyBoYXJkeSAmbHQ7d2lsbCBiZSBuZWFyZXIgdGhlIG1lYW4gdGhhbiB0aGUKCQkJCQlzZWxmLWluZHVsZ2VudCBvbmVzJmd0OzsgYW5kIGFsc28gdGhlIGNoYXJhY3RlciBjb250cmFyeSB0byB0aGUKCQkJCQltb2RlcmF0ZSBhbmQgcmF0aW9uYWwgd2lsbCBiZSBpbiB0aGUgb25lIGNhc2UgdGhlIHNsYWNrIGFuZCBub3QgYm90aAoJCQkJCXRoZSBzbGFjayBhbmQgdGhlIG92ZXItZW5lcmdldGljLCBhbmQgaW4gdGhlIG90aGVyIGNhc2UgdGhlCgkJCQkJc2VsZi1pbmR1bGdlbnQgYW5kIG5vdCB0aGUgbWFuIHdobyBnb2VzIGh1bmdyeS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQW5kIHRoaXMgY29tZXMgYWJvdXQgYmVjYXVzZQoJCQkJCWZyb20gdGhlIHN0YXJ0IG91ciBuYXR1cmUgZG9lcyBub3QgZGl2ZXJnZSBmcm9tIHRoZSBtZWFuIGluIHRoZSBzYW1lCgkJCQkJd2F5IGFzIHJlZ2FyZHMgZXZlcnl0aGluZywgYnV0IGluIGVuZXJneSB3ZSBhcmUgZGVmaWNpZW50IGFuZCBpbgoJCQkJCXNlbGYtaW5kdWxnZW5jZSBleGNlc3NpdmUsIGFuZCB0aGlzIGlzIGFsc28gdGhlIHNhbWUgd2l0aCByZWdhcmQgdGhlCgkJCQkJc3Bpcml0LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgd2UgY2xhc3MgYXMKCQkJCQljb250cmFyeSB0byB0aGUgbWVhbiB0aGUgZGlzcG9zaXRpb24gdG8gd2hpY2ggd2UsIGFuZCBtb3N0IG1lbiwgYXJlCgkJCQkJbW9yZSBsaWFibGUgdG8gZXJyOyB3aGVyZWFzIHRoZSBvdGhlciBwYXNzZXMgdW5ub3RpY2VkIGFzIGlmCgkJCQkJbm9uLWV4aXN0ZW50LCBiZWNhdXNlIGl0cyByYXJpdHkgbWFrZXMgaXQgbm90IG9ic2VydmVkLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBGb3IgaW5zdGFuY2Ugd2UgY291bnQgYW5nZXIKCQkJCQl0aGUgY29udHJhcnkgb2YgZ2VudGxlbmVzcyBhbmQgdGhlIHBhc3Npb25hdGUgbWFuIHRoZSBjb250cmFyeSBvZiB0aGUKCQkJCQlnZW50bGU7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjIyYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1222b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnlldCB0aGVyZSBpcyBhbHNvIGV4Y2VzcyBpbiB0aGUgZGlyZWN0aW9uIG9mCgkJCQkJYmVpbmcgZ2VudGxlIGFuZCBwbGFjYWJsZSBhbmQgbm90IGJlaW5nIGFuZ3J5IHdoZW4gc3RydWNrLCBidXQgbWVuIG9mCgkJCQkJdGhhdCBzb3J0IGFyZSBmZXcsIGFuZCBldmVyeW9uZSBpcyBtb3JlIHByb25lIHRvIHRoZSBvdGhlciBleHRyZW1lOyBvbgoJCQkJCXdoaWNoIGFjY291bnQgbW9yZW92ZXIgYSBwYXNzaW9uYXRlIHRlbXBlciBpcyBub3QgYSBjaGFyYWN0ZXJpc3RpYyBvZgoJCQkJCWEgdG9hZHkuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgcHJvYmFibGUgYWx0ZXJhdGlvbiBvZgoJCQkJCQl0aGUgR3JlZWsgZ2l2ZXMgJ2lzIG5vdCByZWFkeSB0byBtYWtlIHVwIGEKCQkJCQkJcXVhcnJlbC4nPC9ub3RlPjwvdHJhbnNsYXRpb24+"
translation['2.1222b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgc2luY2Ugd2UgaGF2ZSBkZWFsdCB3aXRoCgkJCQkJdGhlIHNjaGVtZSBvZiBzdGF0ZXMgb2YgY2hhcmFjdGVyIGluIHJlc3BlY3Qgb2YgdGhlIHZhcmlvdXMgZW1vdGlvbnMKCQkJCQlpbiB3aGljaCB0aGVyZSBhcmUgZXhjZXNzZXMgYW5kIGRlZmljaWVuY2llcywgYW5kIG9mIHRoZSBvcHBvc2l0ZQoJCQkJCXN0YXRlcyBpbiBhY2NvcmRhbmNlIHdpdGggd2hpY2ggbWVuIGFyZSBkaXNwb3NlZCBpbiBhY2NvcmRhbmNlIHdpdGgKCQkJCQlyaWdodCBwcmluY2lwbGUgKHRob3VnaCB0aGUgcXVlc3Rpb24gd2hhdCBpcyB0aGUgcmlnaHQgcHJpbmNpcGxlIGFuZAoJCQkJCXdoYXQgcnVsZSBpcyB0byBndWlkZSB1cyBpbiBkZWZpbmluZyB0aGUgbWVhbiBtdXN0IGJlIGNvbnNpZGVyZWQKCQkJCQlsYXRlcjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgMTI0OWEgMjEKCQkJCQkJZmYuPC9ub3RlPiksIGl0IGlzIGV2aWRlbnQgdGhhdCBhbGwgdGhlIGZvcm1zIG9mIG1vcmFsIGdvb2RuZXNzIGFuZAoJCQkJCWJhZG5lc3MgaGF2ZSB0byBkbyB3aXRoIGV4Y2Vzc2VzIGFuZCBkZWZpY2llbmNpZXMgb2YgcGxlYXN1cmVzIGFuZAoJCQkJCXBhaW5zLCBhbmQgdGhhdCBwbGVhc3VyZXMgYW5kIHBhaW5zIHJlc3VsdCBmcm9tIHRoZSBzdGF0ZXMgb2YKCQkJCQljaGFyYWN0ZXIgYW5kIG1vZGVzIG9mIGVtb3Rpb24gbWVudGlvbmVkLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IHRoZW4gdGhlIGJlc3Qgc3RhdGUgaW4gcmVsYXRpb24gdG8gZWFjaAoJCQkJCWNsYXNzIG9mIHRoaW5nIGlzIHRoZSBtaWRkbGUgc3RhdGUuIEl0IGlzIGNsZWFyLCB0aGVyZWZvcmUsIHRoYXQgdGhlCgkJCQkJdmlydHVlcyB3aWxsIGJlIGVpdGhlciBhbGwgb3Igc29tZSBvZiB0aGVzZSBtaWRkbGUgc3RhdGVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkxldCB1cywgdGhlcmVmb3JlLCB0YWtlIGFub3RoZXIgc3RhcnRpbmctcG9pbnQgZm9yIHRoZSBlbnN1aW5nCgkJCQkJaW5xdWlyeS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHdyaXRlciBwcm9jZWVkcwoJCQkJCQl0byBkaXN0aW5ndWlzaCB0aGUgc3RyaWN0IHNlbnNlIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gM+Bz4fhvbU8L2ZvcmVpZ24+LCAnb3JpZ2luIG9yIGNhdXNlIG9mIGNoYW5nZScgKHdoaWNoIGFwcGxpZXMgdG8KCQkJCQkJbWFuIGFzIGNhcGFibGUgb2Ygdm9saXRpb24gYW5kIGFjdGlvbikgZnJvbSBpdHMgc2Vjb25kYXJ5IHNlbnNlLAoJCQkJCQknY2F1c2Ugb3IgZXhwbGFuYXRpb24gb2YgYW4gdW5jaGFuZ2luZyBzdGF0ZSBvZiB0aGluZ3MnICh3aGljaAoJCQkJCQlhcHBsaWVzIHRvIHRoZSAnZmlyc3QgcHJpbmNpcGxlcycgb2YgbWF0aGVtYXRpY3MpLjwvbm90ZT4gTm93CgkJCQkJYWxsIGVzc2VuY2VzIGFyZSBieSBuYXR1cmUgZmlyc3QgcHJpbmNpcGxlcyBvZiBhIGNlcnRhaW4ga2luZCwgb3dpbmcKCQkJCQl0byB3aGljaCBlYWNoIGlzIGFibGUgdG8gZ2VuZXJhdGUgbWFueSB0aGluZ3Mgb2YgdGhlIHNhbWUgc29ydCBhcwoJCQkJCWl0c2VsZiwgZm9yIGV4YW1wbGUgYSBtYW4gZW5nZW5kZXJzIG1lbiwgYW5kIGluIGdlbmVyYWwgYW4gYW5pbWFsCgkJCQkJYW5pbWFscywgYW5kIGEgcGxhbnQgcGxhbnRzLiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDPgc+H4b21PC9mb3JlaWduPiwgJ29yaWdpbiBvciBjYXVzZSBvZiBjaGFuZ2UnICh3aGljaCBhcHBsaWVzIHRvCgkJCQkJCW1hbiBhcyBjYXBhYmxlIG9mIHZvbGl0aW9uIGFuZCBhY3Rpb24pIGZyb20gaXRzIHNlY29uZGFyeSBzZW5zZSwKCQkJCQkJJ2NhdXNlIG9yIGV4cGxhbmF0aW9uIG9mIGFuIHVuY2hhbmdpbmcgc3RhdGUgb2YgdGhpbmdzJyAod2hpY2gKCQkJCQkJYXBwbGllcyB0byB0aGUgJ2ZpcnN0IHByaW5jaXBsZXMnIG9mIG1hdGhlbWF0aWNzKS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgaW4gYWRkaXRpb24gdG8gdGhpcywgb2J2aW91c2x5IG1hbiBhbG9uZSBhbW9uZwoJCQkJCWFuaW1hbHMgaW5pdGlhdGVzIGNlcnRhaW4gY29uZHVjdOKAlDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3Igd2Ugc2hvdWxkIG5vdCBhc2NyaWJlIGNvbmR1Y3QgdG8gYW55IG9mCgkJCQkJdGhlIG90aGVycy4gPC90cmFuc2xhdGlvbj4="
translation['2.1223a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCB0aGUgZmlyc3QKCQkJCQlwcmluY2lwbGVzIG9mIHRoYXQgc29ydCwgd2hpY2ggYXJlIHRoZSBmaXJzdCBzb3VyY2Ugb2YgbW90aW9ucywgYXJlCgkJCQkJY2FsbGVkIGZpcnN0IHByaW5jaXBsZXMgaW4gdGhlIHN0cmljdCBzZW5zZSwgYW5kIG1vc3QgcmlnaHRseSB0aG9zZQoJCQkJCXRoYXQgaGF2ZSBuZWNlc3NhcnkgcmVzdWx0czsgZG91YnRsZXNzIEdvZCBpcyBhIHJ1bGluZyBwcmluY2lwbGUgdGhhdAoJCQkJCWFjdHMgaW4gdGhpcyB3YXkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi40IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCB0aGUKCQkJCQlzdHJpY3Qgc2Vuc2Ugb2YgJ2ZpcnN0IHByaW5jaXBsZScgaXMgbm90IGZvdW5kIGluIGZpcnN0IHByaW5jaXBsZXMKCQkJCQlpbmNhcGFibGUgb2YgbW92ZW1lbnQsIGZvciBleGFtcGxlIHRob3NlIG9mIG1hdGhlbWF0aWNzLCBhbHRob3VnaCB0aGUKCQkJCQl0ZXJtIGlzIGluZGVlZCB1c2VkIG9mIHRoZW0gYnkgYW5hbG9neSwgZm9yIGluIG1hdGhlbWF0aWNzIGlmIHRoZQoJCQkJCWZpcnN0IHByaW5jaXBsZSB3ZXJlIGNoYW5nZWQgdmlydHVhbGx5IGFsbCB0aGUgdGhpbmdzIHByb3ZlZCBmcm9tIGl0CgkJCQkJd291bGQgY2hhbmdlLCB0aG91Z2ggdGhleSBkbyBub3QgY2hhbmdlIG93aW5nIHRvIHRoZW1zZWx2ZXMsIG9uZSBiZWluZwoJCQkJCWRlc3Ryb3llZCBieSB0aGUgb3RoZXIsIGV4Y2VwdCBieSBkZXN0cm95aW5nIHRoZSBhc3N1bXB0aW9uIGFuZAoJCQkJCXRoZXJlYnkgZXN0YWJsaXNoaW5nIGEgcHJvb2YuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmUuZy4KCQkJCQkJaWYgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAz4HPh+G9tTwvZm9yZWlnbj4gQSBsZWQgdG8gQiBhbmQgQywgb2YKCQkJCQkJd2hpY2ggQyB3YXMgYWJzdXJkLCB0aGVuIEMgYnkgcmVmdXRpbmcgQSB3b3VsZCByZWZ1dGUgdGhlIG90aGVyCgkJCQkJCWNvbnNlcXVlbmNlIEIgKFNvbG9tb24pLjwvbm90ZT48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDPgc+H4b21PC9mb3JlaWduPiBBIGxlZCB0byBCIGFuZCBDLCBvZgoJCQkJCQl3aGljaCBDIHdhcyBhYnN1cmQsIHRoZW4gQyBieSByZWZ1dGluZyBBIHdvdWxkIHJlZnV0ZSB0aGUgb3RoZXIKCQkJCQkJY29uc2VxdWVuY2UgQiAoU29sb21vbikuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IG1hbiBpcyBhIGZpcnN0IHByaW5jaXBsZSBvZiBhIGNlcnRhaW4KCQkJCQltb3Rpb24sIGZvciBhY3Rpb24gaXMgbW90aW9uLiBBbmQgc2luY2UgYXMgaW4gb3RoZXIgbWF0dGVycyB0aGUgZmlyc3QKCQkJCQlwcmluY2lwbGUgaXMgYSBjYXVzZSBvZiB0aGUgdGhpbmdzIHRoYXQgZXhpc3Qgb3IgY29tZSBpbnRvIGV4aXN0ZW5jZQoJCQkJCWJlY2F1c2Ugb2YgaXQsIHdlIG11c3QgdGhpbmsgYXMgd2UgZG8gaW4gdGhlIGNhc2Ugb2YgZGVtb25zdHJhdGlvbnMuCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gRm9yIGV4YW1wbGUsIGlmIGFzCgkJCQkJdGhlIGFuZ2xlcyBvZiBhIHRyaWFuZ2xlIGFyZSB0b2dldGhlciBlcXVhbCB0byB0d28gcmlnaHQgYW5nbGVzIHRoZQoJCQkJCWFuZ2xlcyBvZiBhIHF1YWRyaWxhdGVyYWwgYXJlIG5lY2Vzc2FyaWx5IGVxdWFsIHRvIGZvdXIgcmlnaHQgYW5nbGVzLAoJCQkJCXRoYXQgdGhlIGFuZ2xlcyBvZiBhIHRyaWFuZ2xlIGFyZSBlcXVhbCB0byB0d28gcmlnaHQgYW5nbGVzIGlzIGNsZWFybHkKCQkJCQl0aGUgY2F1c2Ugb2YgdGhhdCBmYWN0OyBhbmQgc3VwcG9zaW5nIGEgdHJpYW5nbGUgd2VyZSB0byBjaGFuZ2UsIGEKCQkJCQlxdWFkcmlsYXRlcmFsIHdvdWxkIG5lY2Vzc2FyaWx5IGNoYW5nZSB0b2/igJRmb3IgZXhhbXBsZSBpZgoJCQkJCXRoZSBhbmdsZXMgb2YgYSB0cmlhbmdsZSBiZWNhbWUgZXF1YWwgdG8gdGhyZWUgcmlnaHQgYW5nbGVzLCB0aGUKCQkJCQlhbmdsZXMgb2YgYSBxdWFkcmlsYXRlcmFsIHdvdWxkIGJlY29tZSBlcXVhbCB0byBzaXggcmlnaHQgYW5nbGVzLCBvcgoJCQkJCWlmIGZvdXIsIGVpZ2h0OyBhbHNvIGlmIGEgdHJpYW5nbGUgZG9lcyBub3QgY2hhbmdlIGJ1dCBpcyBhcwoJCQkJCWRlc2NyaWJlZCwgYSBxdWFkcmlsYXRlcmFsIHRvbyBtdXN0IG9mIG5lY2Vzc2l0eSBiZSBhcwoJCQkJCWRlc2NyaWJlZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgbmVjZXNzaXR5IG9mIHdoYXQgd2UgYXJlIGFyZ3VpbmcgaXMKCQkJCQljbGVhciBmcm9tIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkFuYWx5dGljczwvdGl0bGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBBUG8uIDEuMSI+QXJpc3RvdC4gQW5hbC4gUG9zdC4KCQkJCQkJMS4xPC9iaWJsPjwvbm90ZT47IGF0IHByZXNlbnQgd2UgY2Fubm90IGVpdGhlciBkZW55IG9yIGFmZmlybSBhbnl0aGluZwoJCQkJCWRlZmluaXRlbHkgZXhjZXB0IGp1c3QgdGhpcy4gU3VwcG9zaW5nIHRoZXJlIHdlcmUgbm8gZnVydGhlciBjYXVzZSBvZgoJCQkJCXRoZSB0cmlhbmdsZSdzIGhhdmluZyB0aGUgcHJvcGVydHkgc3RhdGVkLCB0aGVuIHRoZSB0cmlhbmdsZSB3b3VsZCBiZQoJCQkJCWEgc29ydCBvZiBmaXJzdCBwcmluY2lwbGUgb3IgY2F1c2Ugb2YgdGhlIGxhdGVyIHN0YWdlcy4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gQVBvLiAxLjEiPkFyaXN0b3QuIEFuYWwuIFBvc3QuCgkJCQkJCTEuMTwvYmlibD48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBIZW5jZSBpZiBpbiBmYWN0IHRoZXJlIGFyZQoJCQkJCWFtb25nIGV4aXN0aW5nIHRoaW5ncyBzb21lIHRoYXQgYWRtaXQgb2YgdGhlIG9wcG9zaXRlIHN0YXRlLCB0aGVpcgoJCQkJCWZpcnN0IHByaW5jaXBsZXMgYWxzbyBtdXN0IG5lY2Vzc2FyaWx5IGhhdmUgdGhlIHNhbWUgcXVhbGl0eTsKCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIyM2EiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1223a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBvZiB0aGluZ3MgdGhhdCBhcmUgb2YgbmVjZXNzaXR5IHRoZQoJCQkJCXJlc3VsdCBpcyBuZWNlc3NhcnksIGFsYmVpdCB0aGUgc3Vic2VxdWVudCBzdGFnZXMgbWF5IHBvc3NpYmx5IGhhcHBlbgoJCQkJCWluIHRoZSBvcHBvc2l0ZSB3YXkuIEFuZCB0aGUgdGhpbmdzIHRoYXQgZGVwZW5kIG9uIG1lbiB0aGVtc2VsdmVzIGluCgkJCQkJbWFueSBjYXNlcyBiZWxvbmcgdG8gdGhpcyBjbGFzcyBvZiB2YXJpYWJsZXMsIGFuZCBtZW4gYXJlIHRoZW1zZWx2ZXMKCQkJCQl0aGUgZmlyc3QgcHJpbmNpcGxlIG9mIHRoaW5ncyBvZiB0aGlzIHNvcnQuIDwvdHJhbnNsYXRpb24+"
translation['2.1223a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi45IiB1bml0PSJMb2ViIGNoYXAiIC8+IEhlbmNlIGl0IGlzIGNsZWFyIHRoYXQgYWxsIHRoZQoJCQkJCWFjdGlvbnMgb2Ygd2hpY2ggYSBtYW4gaXMgdGhlIGZpcnN0IHByaW5jaXBsZSBhbmQgY29udHJvbGxlciBtYXkKCQkJCQllaXRoZXIgaGFwcGVuIG9yIG5vdCBoYXBwZW4sIGFuZCB0aGF0IGl0IGRlcGVuZHMgb24gaGltc2VsZiBmb3IgdGhlbQoJCQkJCXRvIGhhcHBlbiBvciBub3QsIGFzIGhlIGNvbnRyb2xzIHRoZWlyIGV4aXN0ZW5jZSBvciBub24tZXhpc3RlbmNlLiBCdXQKCQkJCQlvZiB0aGluZ3Mgd2hpY2ggaXQgZGVwZW5kcyBvbiBoaW0gdG8gZG8gb3Igbm90IHRvIGRvIGhlIGlzIGhpbXNlbGYgdGhlCgkJCQkJY2F1c2UsIGFuZCB3aGF0IGhlIGlzIHRoZSBjYXVzZSBvZiBkZXBlbmRzIG9uIGhpbXNlbGYuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgc2luY2UgZ29vZG5lc3MgYW5kCgkJCQkJYmFkbmVzcyBhbmQgdGhlIGFjdGlvbnMgdGhhdCBzcHJpbmcgZnJvbSB0aGVtIGFyZSBpbiBzb21lIGNhc2VzCgkJCQkJcHJhaXNld29ydGh5IGFuZCBpbiBvdGhlciBjYXNlcyBibGFtZXdvcnRoeSAoZm9yIHByYWlzZSBhbmQgYmxhbWUgYXJlCgkJCQkJbm90IGdpdmVuIHRvIHRoaW5ncyB0aGF0IHdlIHBvc3Nlc3MgZnJvbSBuZWNlc3NpdHkgb3IgZm9ydHVuZSBvcgoJCQkJCW5hdHVyZSBidXQgdG8gdGhpbmdzIG9mIHdoaWNoIHdlIG91cnNlbHZlcyBhcmUgdGhlIGNhdXNlLCBzaW5jZSBmb3IKCQkJCQl0aGluZ3Mgb2Ygd2hpY2ggYW5vdGhlciBwZXJzb24gaXMgdGhlIGNhdXNlLCB0aGF0IHBlcnNvbiBoYXMgdGhlIGJsYW1lCgkJCQkJYW5kIHRoZSBwcmFpc2UpLCBpdCBpcyBjbGVhciB0aGF0IGJvdGggZ29vZG5lc3MgYW5kIGJhZG5lc3MgaGF2ZSB0byBkbwoJCQkJCXdpdGggdGhpbmdzIHdoZXJlIGEgbWFuIGlzIGhpbXNlbGYgdGhlIGNhdXNlIGFuZCBvcmlnaW4gb2YgaGlzCgkJCQkJYWN0aW9ucy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+IFdlIG11c3QsIHRoZW4sCgkJCQkJYXNjZXJ0YWluIHdoYXQgaXMgdGhlIGtpbmQgb2YgYWN0aW9ucyBvZiB3aGljaCBhIG1hbiBpcyBoaW1zZWxmIHRoZQoJCQkJCWNhdXNlIGFuZCBvcmlnaW4uIE5vdyB3ZSBhbGwgYWdyZWUgdGhhdCBlYWNoIG1hbiBpcyB0aGUgY2F1c2Ugb2YgYWxsCgkJCQkJdGhvc2UgYWN0cyB0aGF0IGFyZSB2b2x1bnRhcnkgYW5kIHB1cnBvc2l2ZSBmb3IgaGltIGluZGl2aWR1YWxseSwgYW5kCgkJCQkJdGhhdCBoZSBpcyBub3QgaGltc2VsZiB0aGUgY2F1c2Ugb2YgdGhvc2UgdGhhdCBhcmUgaW52b2x1bnRhcnkuIEFuZAoJCQkJCWNsZWFybHkgaGUgY29tbWl0cyB2b2x1bnRhcmlseSBhbGwgdGhlIGFjdHMgdGhhdCBoZSBjb21taXRzIHB1cnBvc2VseS4KCQkJCQlJdCBpcyBjbGVhciwgdGhlbiw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGhhdCBib3RoCgkJCQkJZ29vZG5lc3MgYW5kIGJhZG5lc3Mgd2lsbCBiZSBpbiB0aGUgY2xhc3Mgb2YgdGhpbmdzCgkJCQkJdm9sdW50YXJ5LjwvdHJhbnNsYXRpb24+"
translation['2.1223b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlIG11c3QsIHRoZXJlZm9yZSwgYXNjZXJ0YWluIHdoYXQgdm9sdW50YXJ5CgkJCQkJYW5kIGludm9sdW50YXJ5IG1lYW4sIGFuZCB3aGF0IGlzIHB1cnBvc2l2ZSBjaG9pY2UsIHNpbmNlIHRoZXkgZW50ZXIKCQkJCQlpbnRvIHRoZSBkZWZpbml0aW9uIG9mIGdvb2RuZXNzIGFuZCBiYWRuZXNzLiBBbmQgZmlyc3Qgd2UgbXVzdAoJCQkJCWNvbnNpZGVyIHRoZSBtZWFuaW5nIG9mIHZvbHVudGFyeSBhbmQgaW52b2x1bnRhcnkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IE5vdyB0aGV5IHdvdWxkIHNlZW0gdG8gcmVmZXIKCQkJCQl0byBvbmUgb2YgdGhyZWUgdGhpbmdz4oCUY29uZm9ybWl0eSB3aXRoIGFwcGV0aXRpb24sIG9yIHdpdGgKCQkJCQlwdXJwb3NpdmUgY2hvaWNlLCBvciB3aXRoIHRob3VnaHQ6IHZvbHVudGFyeSBpcyB3aGF0IGNvbmZvcm1zIHdpdGggb25lCgkJCQkJb2YgdGhlc2UgYW5kIGludm9sdW50YXJ5IGlzIHdoYXQgY29udHJhdmVuZXMgb25lIG9mIHRoZW0uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCBtb3Jlb3ZlciB0aGVyZSBhcmUgdGhyZWUKCQkJCQlzdWJkaXZpc2lvbnMgb2YgYXBwZXRpdGlvbuKAlHdpc2gsIHBhc3Npb24gYW5kIGRlc2lyZTsgc28gdGhhdAoJCQkJCXdlIGhhdmUgdG8gZGlzdGluZ3Vpc2ggdGhlc2UuIEFuZCBmaXJzdCB3ZSBtdXN0IGNvbnNpZGVyIGNvbmZvcm1pdHkKCQkJCQl3aXRoIGRlc2lyZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCB3b3VsZCBzZWVtIHRoYXQgZXZlcnl0aGluZyB0aGF0IGNvbmZvcm1zCgkJCQkJd2l0aCBkZXNpcmUgaXMgdm9sdW50YXJ5LiBGb3IgZXZlcnl0aGluZyBpbnZvbHVudGFyeSBzZWVtcyB0byBiZQoJCQkJCWZvcmNlZCwgYW5kIHdoYXQgaXMgZm9yY2VkIGFuZCBldmVyeXRoaW5nIHRoYXQgcGVvcGxlIGRvIG9yIHN1ZmZlcgoJCQkJCXVuZGVyIG5lY2Vzc2l0eSBpcyBwYWluZnVsLCBhcyBpbmRlZWQgRXZlbnVzIHNheXM6CgkJCQkJPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZWxlZ2lhYyI+Rm9yIGFsbCBuZWNlc3NpdHkgZG90aCBjYXVzZQoJCQkJCQkJZGlzdHJlc3PigJQ8L2w+CgkJCQkJPC9xdW90ZT4gRXZlbnVzIG9mIDxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJlbGVnaWFjIj5Gb3IgYWxsIG5lY2Vzc2l0eSBkb3RoIGNhdXNlCgkJCQkJCQlkaXN0cmVzc+KAlDwvbD4KCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFBhcm9zIENpdHkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFBhcm9zIENpdHkiPlBhcm9zPC9wbGFjZU5hbWU+ID0gVGhlb2cuIDQ3MgoJCQkJCTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5RdW90ZWQgYWxzbyA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBNZXQuIDUuMTAxNWEuMjgiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE1ldC4gMTAxNWEgMjg8L2JpYmw+IGFuZCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiAgICAgICBSaGV0LjEzNzBhLjEwIj5BcmlzdG90LgoJCQkJCQlSaGV0LjEzNzBhIDEwPC9iaWJsPiwgYW5kID0gVGhlb2duaWRlYSA0NzIgKGJ1dCB0aGF0IGhhcwoJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ph8+B4b+GzrzigJkg4byAzr3Ouc6xz4HhvbnOvTwvZm9yZWlnbj4pOwoJCQkJCQlwcm9iYWJseSBieSB0aGUgZWxkZXIgRXZlbnVzIG9mIFBhcm9zLCBmbC4gPGRhdGUgYXV0aG5hbWU9Ii00NjAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00NjAiPjQ2MDwvZGF0ZT4gQi5DLiAoQm93cmEsIENsLiBSZXYuIDQ4LjIpLjwvbm90ZT48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBNZXQuIDUuMTAxNWEuMjgiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE1ldC4gMTAxNWEgMjg8L2JpYmw+IGFuZCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiAgICAgICBSaGV0LjEzNzBhLjEwIj5BcmlzdG90LgoJCQkJCQlSaGV0LjEzNzBhIDEwPC9iaWJsPiwgYW5kID0gVGhlb2duaWRlYSA0NzIgKGJ1dCB0aGF0IGhhcwoJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ph8+B4b+GzrzigJkg4byAzr3Ouc6xz4HhvbnOvTwvZm9yZWlnbj4pOwoJCQkJCQlwcm9iYWJseSBieSB0aGUgZWxkZXIgRXZlbnVzIG9mIFBhcm9zLCBmbC4gPGRhdGUgYXV0aG5hbWU9Ii00NjAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00NjAiPjQ2MDwvZGF0ZT4gQi5DLiAoQm93cmEsIENsLiBSZXYuIDQ4LjIpLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy41IiB1bml0PSJMb2ViIGNoYXAiIC8+IHNvIHRoYXQgaWYgYSB0aGluZyBpcyBwYWluZnVsCgkJCQkJaXQgaXMgZm9yY2VkIGFuZCBpZiBhIHRoaW5nIGlzIGZvcmNlZCBpdCBpcyBwYWluZnVsOyBidXQgZXZlcnl0aGluZwoJCQkJCWNvbnRyYXJ5IHRvIGRlc2lyZSBpcyBwYWluZnVsIChmb3IgZGVzaXJlIGlzIGZvciB3aGF0IGlzIHBsZWFzYW50KSwgc28KCQkJCQl0aGF0IGl0IGlzIGZvcmNlZCBhbmQgaW52b2x1bnRhcnkuIFRoZXJlZm9yZSB3aGF0IGNvbmZvcm1zIHdpdGggZGVzaXJlCgkJCQkJaXMgdm9sdW50YXJ5LCBmb3IgdGhpbmdzIGNvbnRyYXJ5IHRvIGFuZCB0aGluZ3MgaW4gY29uZm9ybWl0eSB3aXRoCgkJCQkJZGVzaXJlIGFyZSBvcHBvc2l0ZSB0byBvbmUgYW5vdGhlci4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQWdhaW4sIGFsbCB3aWNrZWRuZXNzIG1ha2VzIGEgbWFuIG1vcmUgdW5yaWdodGVvdXMsCgkJCQkJYW5kIGxhY2sgb2Ygc2VsZi1jb250cm9sIHNlZW1zIHRvIGJlIHdpY2tlZG5lc3M7IGFuZCB0aGUgdW5jb250cm9sbGVkCgkJCQkJbWFuIGlzIHRoZSBzb3J0IG9mIG1hbiB0byBhY3QgaW4gY29uZm9ybWl0eSB3aXRoIGRlc2lyZSBjb250cmFyeSB0bwoJCQkJCWNhbGN1bGF0aW9uLCBhbmQgaGUgc2hvd3MgaGlzIGxhY2sgb2YgY29udHJvbCB3aGVuIGhpcyBjb25kdWN0IGlzCgkJCQkJZ3VpZGVkIGJ5IGRlc2lyZTsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyMjNiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1223b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnNvIHRoYXQgdGhlIHVuY29udHJvbGxlZCBtYW4gd2lsbAoJCQkJCWFjdCB1bnJpZ2h0ZW91c2x5IGJ5IGFjdGluZyBpbiBjb25mb3JtaXR5IHdpdGggZGVzaXJlLiBCdXQgdW5yaWdodGVvdXMKCQkJCQlhY3Rpb24gaXMgdm9sdW50YXJ5Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JbiB0aGUgTXNzLgoJCQkJCQl0aGlzIHNlbnRlbmNlIHByZWNlZGVzIHRoZSBvbmUgYmVmb3JlLjwvbm90ZT4gVGhlcmVmb3JlIGhlIHdpbGwKCQkJCQliZSBhY3Rpbmcgdm9sdW50YXJpbHksIGFuZCBhY3Rpb24gZ3VpZGVkIGJ5IGRlc2lyZSBpcyB2b2x1bnRhcnkuCgkJCQkJSW5kZWVkIGl0IHdvdWxkIGJlIHN0cmFuZ2UgaWYgdGhvc2Ugd2hvIGJlY29tZSB1bmNvbnRyb2xsZWQgd2lsbCBiZQoJCQkJCW1vcmUgcmlnaHRlb3VzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIHNlbnRlbmNlIHdvdWxkCgkJCQkJCWNvbWUgaW4gYmV0dGVyIGFib3ZlLCBhZnRlciAnYWN0aW5nIGluIGNvbmZvcm1pdHkgd2l0aAoJCQkJCQlkZXNpcmUuJzwvbm90ZT7igJQ8L3RyYW5zbGF0aW9uPg=="
translation['2.1223b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy43IiB1bml0PSJMb2ViIGNoYXAiIC8+IEZyb20gdGhlc2UgY29uc2lkZXJhdGlvbnMsIHRoZW4sIGl0IHdvdWxkIGFwcGVhciB0aGF0CgkJCQkJd2hhdCBpcyBpbiBjb25mb3JtaXR5IHdpdGggZGVzaXJlIGlzIHZvbHVudGFyeTsgYW5kIGZyb20gdGhpcyB0aGUKCQkJCQlvcHBvc2l0ZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5WaXouIHRoYXQgd2hhdCBpcwoJCQkJCQlhZ2FpbnN0IGRlc2lyZSBpcyBpbnZvbHVudGFyeS48L25vdGU+IGZvbGxvd3MsIGZvciBhbGwgdGhhdCBhCgkJCQkJbWFuIGRvZXMgdm9sdW50YXJpbHkgaGUgd2lzaGVzIHRvIGRvLCBhbmQgd2hhdCBoZSB3aXNoZXMgdG8gZG8gaGUgZG9lcwoJCQkJCXZvbHVudGFyaWx5LCBidXQgbm9ib2R5IHdpc2hlcyB3aGF0IGhlIHRoaW5rcyB0byBiZSBiYWQuIEJ1dCB5ZXQgdGhlCgkJCQkJdW5jb250cm9sbGVkIG1hbiBkb2VzIG5vdCBkbyB3aGF0IGhlIHdpc2hlcywgZm9yIGJlaW5nIHVuY29udHJvbGxlZAoJCQkJCW1lYW5zIGFjdGluZyBhZ2FpbnN0IHdoYXQgb25lIHRoaW5rcyB0byBiZSBiZXN0IG93aW5nIHRvIGRlc2lyZTsgaGVuY2UKCQkJCQlpdCB3aWxsIGNvbWUgYWJvdXQgdGhhdCB0aGUgc2FtZSBwZXJzb24gaXMgYWN0aW5nIHZvbHVudGFyaWx5IGFuZAoJCQkJCWludm9sdW50YXJpbHkgYXQgdGhlIHNhbWUgdGltZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IHRoaXMgaXMgaW1wb3NzaWJsZS4gQW5kIGZ1cnRoZXIsIHRoZQoJCQkJCXNlbGYtY29udHJvbGxlZCBtYW4gd2lsbCBhY3QgcmlnaHRlb3VzbHksIG9yIG1vcmUgcmlnaHRlb3VzbHkgdGhhbgoJCQkJCWxhY2sgb2YgY29udHJvbCB3aWxsOyBmb3Igc2VsZi1jb250cm9sIGlzIGdvb2RuZXNzLCBhbmQgZ29vZG5lc3MgbWFrZXMKCQkJCQltZW4gbW9yZSByaWdodGVvdXMuIEFuZCBhIG1hbiBleGVyY2lzZXMgc2VsZi1jb250cm9sIHdoZW4gaGUgYWN0cwoJCQkJCWFnYWluc3QgaGlzIGRlc2lyZSBpbiBjb25mb3JtaXR5IHdpdGggcmF0aW9uYWwgY2FsY3VsYXRpb24uIFNvIHRoYXQgaWYKCQkJCQlyaWdodGVvdXMgYWN0aW9uIGlzIHZvbHVudGFyeSwgYXMgYWxzbyB1bnJpZ2h0ZW91cyBhY3Rpb24gKGZvciBib3RoIG9mCgkJCQkJdGhlc2Ugc2VlbSB0byBiZSB2b2x1bnRhcnksIGFuZCBpZiBvbmUgb2YgdGhlbSBpcyB2b2x1bnRhcnkgaXQgZm9sbG93cwoJCQkJCW9mIG5lY2Vzc2l0eSB0aGF0IHRoZSBvdGhlciBpcyBhbHNvKSwgd2hlcmVhcyB3aGF0IGlzIGNvbnRyYXJ5IHRvCgkJCQkJZGVzaXJlIGlzIGludm9sdW50YXJ5LCBpdCB0aGVyZWZvcmUgZm9sbG93cyB0aGF0IHRoZSBzYW1lIHBlcnNvbiB3aWxsCgkJCQkJZG8gdGhlIHNhbWUgYWN0aW9uIHZvbHVudGFyaWx5IGFuZCBpbnZvbHVudGFyaWx5IGF0IHRoZSBzYW1lCgkJCQkJdGltZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgc2FtZSBhcmd1bWVudCBhcHBsaWVzIGFsc28gaW4gdGhlIGNhc2UKCQkJCQlvZiBwYXNzaW9uOzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3IgdGhlcmUgYXBwZWFyCgkJCQkJdG8gYmUgY29udHJvbCBhbmQgbGFjayBvZiBjb250cm9sIG9mIHBhc3Npb24gYXMgd2VsbCBhcyBvZiBkZXNpcmUgYW5kCgkJCQkJd2hhdCBpcyBjb250cmFyeSB0byBwYXNzaW9uIGlzIHBhaW5mdWwgYW5kIHJlc3RyYWludCBpcyBhIG1hdHRlciBvZgoJCQkJCWZvcmNlLCBzbyB0aGF0IGlmIHdoYXQgaXMgZm9yY2VkIGlzIGludm9sdW50YXJ5LCB3aGF0IGlzIGluIGFjY29yZGFuY2UKCQkJCQl3aXRoIHBhc3Npb24gd2lsbCBhbHdheXMgYmUgdm9sdW50YXJ5LiBFdmVuIEhlcmFjbGVpdHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBuYXR1cmFsIHBoaWxvc29waGVyIG9mCgkJCQkJCTxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRXBoZXNvcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRXBoZXNvcyI+RXBoZXN1czwvcGxhY2VOYW1lPiwgZmwuIGMuCgkJCQkJCTxkYXRlIGF1dGhuYW1lPSItNTEzIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNTEzIj41MTM8L2RhdGU+IEIuQy4gSGlzIHNlbnRlbmNlIGVuZGVkCgkJCQkJCTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG9hSDPhM65IM6z4b2wz4Eg4byCzr0gz4fPgeG/hM624b+DIM6z4b23zr3Otc+DzrjOsc65LAoJCQkJCQkJz4jPhc+H4b+Gz4Ig4b2gzr3OteG/ls+EzrHOuTwvZm9yZWlnbj4sIElhbWJsaWNodXMsCgkJCQkJCTx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlByb3RyZXB0aWN1czwvdGl0bGU+LCBwLiAxNDAuPC9ub3RlPiBzZWVtcyB0byBoYXZlCgkJCQkJaW4gdmlldyB0aGUgc3RyZW5ndGggb2YgcGFzc2lvbiB3aGVuIGhlIHJlbWFya3MgdGhhdCB0aGUgY2hlY2tpbmcgb2YKCQkJCQlwYXNzaW9uIGlzIHBhaW5mdWw7IGZvciAnSXQgaXMgZGlmZmljdWx0IChoZSBzYXlzKSB0byBkbyBiYXR0bGUgd2l0aAoJCQkJCXBhc3Npb24sIGZvciBpdCBidXlzIGl0cyB3aXNoIGF0IHRoZSBwcmljZSBvZiBsaWZlLicgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxFcGhlc29zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxFcGhlc29zIj5FcGhlc3VzPC9wbGFjZU5hbWU+LCBmbC4gYy4KCQkJCQkJPGRhdGUgYXV0aG5hbWU9Ii01MTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii01MTMiPjUxMzwvZGF0ZT4gQi5DLiBIaXMgc2VudGVuY2UgZW5kZWQKCQkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4b2FIM+EzrkgzrPhvbDPgSDhvILOvSDPh8+B4b+Ezrbhv4MgzrPhvbfOvc61z4POuM6xzrksCgkJCQkJCQnPiM+Fz4fhv4bPgiDhvaDOvc614b+Wz4TOsc65PC9mb3JlaWduPiwgSWFtYmxpY2h1cywKCQkJCQkJPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UHJvdHJlcHRpY3VzPC90aXRsZT4sIHAuIDE0MC48L3RyYW5zbGF0aW9uPg=="
translation['2.1224a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgaWYgaXQgaXMgaW1wb3NzaWJsZSB0byBkbwoJCQkJCXRoZSBzYW1lIGFjdCB2b2x1bnRhcmlseSBhbmQgaW52b2x1bnRhcmlseSBhdCB0aGUgc2FtZSB0aW1lIGFuZCBpbgoJCQkJCXJlc3BlY3Qgb2YgdGhlIHNhbWUgcGFydCBvZiB0aGUgYWN0LCBhY3Rpb24gZ3VpZGVkIGJ5IG9uZSdzIHdpc2ggaXMKCQkJCQltb3JlIHZvbHVudGFyeSB0aGFuIGFjdGlvbiBndWlkZWQgYnkgZGVzaXJlIG9yIHBhc3Npb24uIEFuZCBhIHByb29mIG9mCgkJCQkJdGhpcyBpcyB0aGF0IHdlIGRvIG1hbnkgdGhpbmdzIHZvbHVudGFyaWx5IHdpdGhvdXQgYW5nZXIgb3IKCQkJCQlkZXNpcmUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IHJlbWFpbnMsIHRoZXJlZm9yZSwgdG8gY29uc2lkZXIgd2hldGhlcgoJCQkJCWFjdGluZyBhcyB3ZSB3aXNoIGFuZCBhY3Rpbmcgdm9sdW50YXJpbHkgYXJlIHRoZSBzYW1lLiBUaGlzIGFsc28gc2VlbXMKCQkJCQlpbXBvc3NpYmxlLiBGb3IgaXQgaXMgYSBmdW5kYW1lbnRhbCBhc3N1bXB0aW9uIHdpdGggdXMsIGFuZCBhIGdlbmVyYWwKCQkJCQlvcGluaW9uLCB0aGF0IHdpY2tlZG5lc3MgbWFrZXMgbWVuIG1vcmUgdW5yaWdodGVvdXM7IGFuZCBsYWNrIG9mCgkJCQkJc2VsZi1jb250cm9sIHNlZW1zIHRvIGJlIGEgc29ydCBvZiB3aWNrZWRuZXNzLiBCdXQgZnJvbSB0aGUgaHlwb3RoZXNpcwoJCQkJCXRoYXQgYWN0aW5nIGFzIHdlIHdpc2ggYW5kIGFjdGluZyB2b2x1bnRhcmlseSBhcmUgdGhlIHNhbWUgdGhlCgkJCQkJb3Bwb3NpdGUgd2lsbCByZXN1bHQ7IGZvciBub2JvZHkgd2lzaGVzIHRoaW5ncyB0aGF0IGhlIHRoaW5rcyB0byBiZQoJCQkJCWJhZCwgeWV0IGhlIGRvZXMgdGhlbSB3aGVuIGhlIGhhcyBiZWNvbWUgdW5jb250cm9sbGVkLCBzbyBpZiB0byBkbwoJCQkJCWluanVzdGljZSBpcyB2b2x1bnRhcnkgYW5kIHRoZSB2b2x1bnRhcnkgaXMgd2hhdCBpcyBpbiBhY2NvcmRhbmNlIHdpdGgKCQkJCQlvbmUncyB3aXNoLCB0aGVuIHdoZW4gYSBtYW4gaGFzIGJlY29tZSB1bmNvbnRyb2xsZWQgaGUgd2lsbCBubyBsb25nZXIKCQkJCQliZSBhY3RpbmcgdW5qdXN0bHkgYnV0IHdpbGwgYmUgbW9yZSBqdXN0IHRoYW4gaGUgd2FzIGJlZm9yZSBoZSBsb3N0CgkJCQkJY29udHJvbCBvZiBoaW1zZWxmLiBCdXQgdGhpcyBpcyBpbXBvc3NpYmxlLiBUaGVyZWZvcmUgaXQgaXMgY2xlYXIgdGhhdAoJCQkJCWFjdGluZyB2b2x1bnRhcmlseSBkb2VzIG5vdCBtZWFuIGFjdGluZyBpbiBhY2NvcmRhbmNlIHdpdGggYXBwZXRpdGlvbgoJCQkJCW5vciBhY3RpbmcgaW52b2x1bnRhcmlseSBhY3RpbmcgaW4gb3Bwb3NpdGlvbiB0byBhcHBldGl0aW9uLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFsc28gaXQgaXMgY2xlYXIgZnJvbSB0aGUgZm9sbG93aW5nIGNvbnNpZGVyYXRpb25zIHRoYXQgdm9sdW50YXJ5CgkJCQkJYWN0aW9uIGRvZXMgbm90IG1lYW4gYWN0aW5nIGluIGFjY29yZGFuY2Ugd2l0aCBwdXJwb3NpdmUgY2hvaWNlLiBJdAoJCQkJCXdhcyBwcm92ZWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IsIGFsdGVyaW5nIHRoZSB0ZXh0LAoJCQkJCQknSXQgd2FzIHByb3ZlZCBub3QgdGhhdCBhY3RpbmcgaW4gYWNjb3JkYW5jZSB3aXRoIG9uZSdzIHdpc2hlcwoJCQkJCQlpcyB0aGUgc2FtZSB0aGluZyBhcyBhY3Rpbmcgdm9sdW50YXJpbHksIGJ1dCByYXRoZXIgdGhhdCBhbGwgb25lCgkJCQkJCXdpc2hlcyBpcyBhbHNvIHZvbHVudGFyeSBhbHRob3VnaCBpdCBpcyBwb3NzaWJsZSB0byBhY3QKCQkJCQkJdm9sdW50YXJpbHkgd2l0aG91dCB3aXNoaW5n4oCUdGhpcyBpcyBhbGwgdGhhdCBoYXMgYmVlbgoJCQkJCQlwcm92ZWQ7IGJ1dCBtYW55IHRoaW5ncyB0aGF0IHdlIHdpc2jigJQnPC9ub3RlPiB0aGF0CgkJCQkJYWN0aW5nIGluIGFjY29yZGFuY2Ugd2l0aCBvbmUncyB3aXNoIGlzIG5vdCBhY3RpbmcgaW52b2x1bnRhcmlseSwKCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIyNGEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1224a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCByYXRoZXIgZXZlcnl0aGluZyB0aGF0IG9uZSB3aXNoZXMgaXMgYWxzbwoJCQkJCXZvbHVudGFyeeKAlGl0IGhhcyBvbmx5IGJlZW4gcHJvdmVkIHRoYXQgaXQgaXMgcG9zc2libGUgdG8gZG8KCQkJCQlhIHRoaW5nIHZvbHVudGFyaWx5IHdpdGhvdXQgd2lzaGluZzsgYnV0IG1hbnkgdGhpbmdzIHRoYXQgd2Ugd2lzaCB3ZQoJCQkJCWRvIHN1ZGRlbmx5LCB3aGVyZWFzIG5vYm9keSBtYWtlcyBhIHB1cnBvc2l2ZSBjaG9pY2UKCQkJCQlzdWRkZW5seS48L3RyYW5zbGF0aW9uPg=="
translation['2.1224a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBpZiBhcyB3ZSBzYWlkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gMi4xMjIzYS4yMyIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMjNhCgkJCQkJCTIzZmYuPC9iaWJsPjwvbm90ZT4gdGhlIHZvbHVudGFyeSBtdXN0IG5lY2Vzc2FyaWx5IGJlIG9uZSBvZgoJCQkJCXRocmVlIHRoaW5nc+KAlHdoYXQgaXMgaW4gY29uZm9ybWl0eSB3aXRoIGFwcGV0aXRpb24sIG9yIHdpdGgKCQkJCQlwdXJwb3NpdmUgY2hvaWNlLCBvciB3aXRoIHRob3VnaHTigJQsIGFuZCBpZiBpdCBpcyBub3QgdGhlIHR3bwoJCQkJCWZvcm1lciwgaXQgcmVtYWlucyB0aGF0IHZvbHVudGFyaW5lc3MgY29uc2lzdHMgaW4gYWN0aW5nIHdpdGggc29tZQoJCQkJCWtpbmQgb2YgdGhvdWdodC4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDIuMTIyM2EuMjMiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjIzYQoJCQkJCQkyM2ZmLjwvYmlibD48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMyIgdW5pdD0iTG9lYiBjaGFwIiAvPgoJCQkJCU1vcmVvdmVyLCBsZXQgdXMgcHV0IGEgY29uY2x1c2lvbiB0byBvdXIgZGVsaW1pdGF0aW9uIG9mIHRoZSB2b2x1bnRhcnkKCQkJCQlhbmQgaW52b2x1bnRhcnkgYnkgY2FycnlpbmcgdGhlIHRob3VnaHQgYXJndW1lbnQgYSBsaXR0bGUgZnVydGhlci4KCQkJCQlBY3RpbmcgdW5kZXIgY29tcHVsc2lvbiBhbmQgbm90IHVuZGVyIGNvbXB1bHNpb24gc2VlbSB0byBiZSB0ZXJtcyBha2luCgkJCQkJdG8gdGhlIG9uZXMgbWVudGlvbmVkOyBmb3Igd2Ugc2F5IHRoYXQgZXZlcnl0aGluZyBmb3JjZWQgaXMKCQkJCQlpbnZvbHVudGFyeSBhbmQgZXZlcnl0aGluZyBpbnZvbHVudGFyeSBpcyBmb3JjZWQuIFNvIHdlIG11c3QgZmlyc3QKCQkJCQljb25zaWRlciB0aGUgZXhhY3QgbWVhbmluZyBvZiAnZm9yY2VkLCcgYW5kIGhvdyB3aGF0IGlzIGZvcmNlZCBpcwoJCQkJCXJlbGF0ZWQgdG8gdGhlIHZvbHVudGFyeSBhbmQgaW52b2x1bnRhcnkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC40IiB1bml0PSJMb2ViIGNoYXAiIC8+IEl0IHNlZW1zLCB0aGVuLCB0aGF0IGluIHRoZSBzcGhlcmUgb2YgY29uZHVjdAoJCQkJCSdmb3JjZWQnIG9yICduZWNlc3NhcnksJyBhbmQgZm9yY2Ugb3IgbmVjZXNzaXR5LCBhcmUgdGhlIG9wcG9zaXRlIG9mCgkJCQkJJ3ZvbHVudGFyeSwnIGFuZCBvZiBwZXJzdWFzaW9uLiBBbmQgd2UgZW1wbG95IHRoZSB0ZXJtcyBmb3JjZSBhbmQKCQkJCQluZWNlc3NpdHkgaW4gYSBnZW5lcmFsIHNlbnNlIGV2ZW4gaW4gdGhlIGNhc2Ugb2YgaW5hbmltYXRlIG9iamVjdHM6IHdlCgkJCQkJc2F5IHRoYXQgYSBzdG9uZSB0cmF2ZWxzIHVwd2FyZHMgYW5kIGZpcmUgZG93bndhcmRzIGJ5IGZvcmNlIGFuZCB1bmRlcgoJCQkJCW5lY2Vzc2l0eSwgd2hlcmVhcyB3aGVuIHRoZXkgdHJhdmVsIGFjY29yZGluZyB0byB0aGVpciBuYXR1cmFsIGFuZAoJCQkJCWludHJpbnNpYyBpbXB1bHNlIHdlIHNheSB0aGF0IHRoZXkgZG8gbm90IG1vdmUgdW5kZXIKCQkJCQlmb3JjZeKAlGFsdGhvdWdoIG5ldmVydGhlbGVzcyB0aGV5IGFyZSBub3Qgc3Bva2VuIG9mIGFzIG1vdmluZwoJCQkJCXZvbHVudGFyaWx5OjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz50aGUgc3RhdGUKCQkJCQlvcHBvc2l0ZSB0byBmb3JjZWQgbW90aW9uIGhhcyBubyBuYW1lLCBidXQgd2hlbiB0aGV5IHRyYXZlbCBjb250cmFyeQoJCQkJCXRvIHRoZWlyIG5hdHVyYWwgaW1wdWxzZSB3ZSBzYXkgdGhhdCB0aGV5IG1vdmUgYnkgZm9yY2UuIDwvdHJhbnNsYXRpb24+"
translation['2.1224b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC41IiB1bml0PSJMb2ViIGNoYXAiIC8+IFNpbWlsYXJseSBhbHNvIGluIHRoZSBjYXNlIG9mCgkJCQkJbGl2aW5nIHRoaW5ncyBhbmQgb2YgYW5pbWFscywgd2Ugc2VlIG1hbnkgYmVpbmcgYWN0ZWQgb24gYnkgZm9yY2UsIGFuZAoJCQkJCWFsc28gYWN0aW5nIHVuZGVyIGZvcmNlIHdoZW4gc29tZXRoaW5nIG1vdmVzIHRoZW0gZnJvbSBvdXRzaWRlLAoJCQkJCWNvbnRyYXJ5IHRvIHRoZSBpbXB1bHNlIHdpdGhpbiB0aGUgdGhpbmcgaXRzZWxmLiBJbiBpbmFuaW1hdGUgdGhpbmdzCgkJCQkJdGhlIG1vdmluZyBwcmluY2lwbGUgaXMgc2ltcGxlLCBidXQgaW4gbGl2aW5nIHRoaW5ncyBpdCBpcyBtdWx0aXBsZSwKCQkJCQlmb3IgYXBwZXRpdGlvbiBhbmQgcmF0aW9uYWwgcHJpbmNpcGxlIGFyZSBub3QgYWx3YXlzIGluIGhhcm1vbnkuCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gSGVuY2Ugd2hlcmVhcyBpbgoJCQkJCXRoZSBjYXNlIG9mIHRoZSBvdGhlciBhbmltYWxzIHRoZSBmYWN0b3Igb2YgZm9yY2UgaXMgc2ltcGxlLCBhcyBpdCBpcwoJCQkJCWluIHRoZSBjYXNlIG9mIGluYW5pbWF0ZSBvYmplY3RzLCBmb3IgYW5pbWFscyBkbyBub3QgcG9zc2VzcyByYXRpb25hbAoJCQkJCXByaW5jaXBsZSBhbmQgYXBwZXRpdGlvbiBpbiBvcHBvc2l0aW9uIHRvIGl0LCBidXQgbGl2ZSBieSB0aGVpcgoJCQkJCWFwcGV0aXRpb24sIGluIG1hbiBib3RoIGZvcm1zIG9mIGZvcmNlIGFyZSBwcmVzZW504oCUdGhhdCBpcywKCQkJCQlhdCBhIGNlcnRhaW4gYWdlLCB0aGUgYWdlIHRvIHdoaWNoIHdlIGF0dHJpYnV0ZSBhY3Rpb248bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IgJ2NvbmR1Y3QuJzwvbm90ZT4gaW4gdGhlIHByb3BlcgoJCQkJCXNlbnNlOyBmb3Igd2UgZG8gbm90IHNwZWFrIG9mIGEgY2hpbGQgYXMgYWN0aW5nLCBhbnkgbW9yZSB0aGFuIGEgd2lsZAoJCQkJCWFuaW1hbCwgYnV0IG9ubHkgYSBwZXJzb24gd2hvIGhhcyBhdHRhaW5lZCB0byBhY3RpbmcgYnkgcmF0aW9uYWwKCQkJCQljYWxjdWxhdGlvbi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz4gU28gd2hhdCBpcwoJCQkJCWZvcmNlZCBhbHdheXMgc2VlbXMgdG8gYmUgcGFpbmZ1bCwgYW5kIG5vIG9uZSBhY3RpbmcgdW5kZXIgZm9yY2UgYWN0cwoJCQkJCWdsYWRseS4gQ29uc2VxdWVudGx5IHRoZXJlIGlzIGEgZ3JlYXQgZGVhbCBvZiBkaXNwdXRlIGFib3V0IHRoZQoJCQkJCXNlbGYtY29udHJvbGxlZCBtYW4gYW5kIHRoZSB1bmNvbnRyb2xsZWQuIEZvciBlYWNoIG9mIHRoZW0gYWN0cyB1bmRlcgoJCQkJCWEgY29uZmxpY3Qgb2YgaW1wdWxzZXMgd2l0aGluIGhpbSwgc28gdGhhdCB0aGUgc2VsZi1jb250cm9sbGVkIG1hbiwKCQkJCQl0aGV5IHNheSwgYWN0cyB1bmRlciBmb3JjZSBpbiBkcmFnZ2luZyBoaW1zZWxmIGF3YXkgZnJvbSB0aGUgcGxlYXN1cmVzCgkJCQkJdGhhdCBoZSBjb3ZldHMgKGZvciBoZSBmZWVscyBwYWluIGluIGRyYWdnaW5nIGhpbXNlbGYgYXdheSBhZ2FpbnN0IHRoZQoJCQkJCXJlc2lzdGFuY2Ugb2YgYXBwZXRpdGlvbiksIHdoaWxlIHRoZSB1bmNvbnRyb2xsZWQgbWFuIGFjdHMgdW5kZXIgZm9yY2UKCQkJCQlpbiBnb2luZyBjb250cmFyeSB0byBoaXMgcmF0aW9uYWwgZmFjdWx0eS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IGhlIHNlZW1zIHRvIGZlZWwgbGVzcyBwYWluLCBiZWNhdXNlIGRlc2lyZQoJCQkJCWlzIGZvciB3aGF0IGlzIHBsZWFzYW50LCBhbmQgaGUgZm9sbG93cyBoaXMgZGVzaXJlOyBzbyB0aGF0IHRoZQoJCQkJCXVuY29udHJvbGxlZCBtYW4gcmF0aGVyIGFjdHMgdm9sdW50YXJpbHkgYW5kIG5vdCB1bmRlciBmb3JjZSwgYmVjYXVzZQoJCQkJCW5vdCBwYWluZnVsbHkuIE9uIHRoZSBvdGhlciBoYW5kIHBlcnN1YXNpb24gaXMgdGhvdWdodCB0byBiZSB0aGUKCQkJCQlvcHBvc2l0ZSBvZiBmb3JjZSBhbmQgbmVjZXNzaXR5OyBhbmQgdGhlIHNlbGYtY29udHJvbGxlZCBtYW4gaXMgbGVkCgkJCQkJdG93YXJkcyB0aGluZ3MgdGhhdCBoZSBoYXMgYmVlbiBwZXJzdWFkZWQgdG8gcHVyc3VlLCBhbmQgcHJvY2VlZHMgbm90CgkJCQkJdW5kZXIgZm9yY2UgYnV0IHZvbHVudGFyaWx5OyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIyNGIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1224b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPndoZXJlYXMgZGVzaXJlIGxlYWRzCgkJCQkJYSBtYW4gb24gd2l0aG91dCBlbXBsb3lpbmcgcGVyc3Vhc2lvbiwgc2luY2UgaXQgcG9zc2Vzc2VzIG5vIGVsZW1lbnQKCQkJCQlvZiByYXRpb25hbCBwcmluY2lwbGUuIDwvdHJhbnNsYXRpb24+"
translation['2.1224b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC45IiB1bml0PSJMb2ViIGNoYXAiIC8+IEl0CgkJCQkJaGFzLCB0aGVuLCBiZWVuIHN0YXRlZCB0aGF0IHRoZXNlIG1lbiBvbmx5IHNlZW0gdG8gYWN0IHVuZGVyIGZvcmNlIGFuZAoJCQkJCWludm9sdW50YXJpbHk7IGFuZCB3ZSBoYXZlIHNob3duIHRoZSByZWFzb27igJRpdCBpcyBiZWNhdXNlCgkJCQkJdGhlaXIgYWN0aW9uIGhhcyBhIGNlcnRhaW4gcmVzZW1ibGFuY2UgdG8gZm9yY2VkIGFjdGlvbiwganVzdCBhcyB3ZQoJCQkJCXNwZWFrIG9mIGZvcmNlZCBhY3Rpb24gZXZlbiBpbiB0aGUgY2FzZSBvZiBpbmFuaW1hdGUgb2JqZWN0cyB0b28uCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+IFlldCBuZXZlcnRoZWxlc3MKCQkJCQlpZiBvbmUgYWRkZWQgdGhlcmUgYWxzbyB0aGUgYWRkaXRpb24gbWFkZSBpbiBvdXIgZGVmaW5pdGlvbiwgdGhlCgkJCQkJc3RhdGVtZW50IGlzIHJlZnV0ZWQuIEZvciB3ZSBzcGVhayBvZiBhIHRoaW5nIGFzIGJlaW5nIGZvcmNlZCB0byBhY3QKCQkJCQl3aGVuIHNvbWV0aGluZyBleHRlcm5hbCBtb3ZlcyBpdCBvciBicmluZ3MgaXQgdG8gcmVzdCwgYWN0aW5nIGFnYWluc3QKCQkJCQl0aGUgaW1wdWxzZSB3aXRoaW4gdGhlIHRoaW5nIGl0c2VsZuKAlHdoZW4gdGhlcmUgaXMgbm8KCQkJCQlleHRlcm5hbCBtb3RpdmUsIHdlIGRvIG5vdCBzYXkgdGhhdCBpdCBhY3RzIHVuZGVyIGZvcmNlOyBhbmQgaW4gdGhlCgkJCQkJdW5jb250cm9sbGVkIG1hbiBhbmQgdGhlIHNlbGYtY29udHJvbGxlZCBpdCBpcyB0aGUgaW1wdWxzZSBwcmVzZW50IGluCgkJCQkJdGhlIG1hbiBoaW1zZWxmIHRoYXQgZHJpdmVzIGhpbSAoZm9yIGhlIGhhcyBib3RoIGltcHVsc2VzKSwgc28gdGhhdCBhcwoJCQkJCWZhciBhcyB0aGVzZSBjb25zaWRlcmF0aW9ucyBnbyBuZWl0aGVyIG9mIHRoZW0gd291bGQgYmUgYWN0aW5nIHVuZGVyCgkJCQkJZm9yY2UsIGJ1dCB2b2x1bnRhcmlseTsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJbm9yIHlldCBhcmUgdGhleSBhY3Rpbmcgb2YgbmVjZXNzaXR5LCBmb3IgYnkgbmVjZXNzaXR5IHdlIG1lYW4gYW4KCQkJCQlleHRlcm5hbCBwcmluY2lwbGUgdGhhdCBlaXRoZXIgY2hlY2tzIG9yIG1vdmVzIGEgbWFuIGluIG9wcG9zaXRpb24gdG8KCQkJCQloaXMgaW1wdWxzZeKAlGFzIGlmIEEgd2VyZSB0byB0YWtlIGhvbGQgb2YgQidzIGhhbmQgYW5kIHdpdGgKCQkJCQlpdCBzdHJpa2UgQywgQidzIHdpbGwgYW5kIGRlc2lyZSBib3RoIHJlc2lzdGluZzsgd2hlcmVhcyB3aGVuIHRoZQoJCQkJCXNvdXJjZSBvZiBhY3Rpb24gaXMgZnJvbSB3aXRoaW4sIHdlIGRvIG5vdCBzcGVhayBvZiB0aGUgYWN0IGFzIGRvbmUKCQkJCQl1bmRlciBmb3JjZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFnYWluLCBib3RoCgkJCQkJcGxlYXN1cmUgYW5kIHBhaW4gYXJlIHByZXNlbnQgaW4gYm90aCBjYXNlczsgZm9yIGEgbWFuIGV4ZXJjaXNpbmcKCQkJCQlzZWxmLWNvbnRyb2wgYm90aCBmZWVscyBwYWluIHdoZW4gaGUgZmluYWxseSBhY3RzIGluIG9wcG9zaXRpb24gdG8gaGlzCgkJCQkJZGVzaXJlIGFuZCBlbmpveXMgdGhlIHBsZWFzdXJlIG9mIGhvcGluZyB0aGF0IGhlIHdpbGwgYmUgYmVuZWZpdGVkCgkJCQkJbGF0ZXIgb24sIG9yIGlzIGV2ZW4gYmVpbmcgYmVuZWZpdGVkIGFscmVhZHksIGJ5IGJlaW5nIGluIGdvb2QKCQkJCQloZWFsdGg7PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZCB0aGUKCQkJCQl1bmNvbnRyb2xsZWQgbWFuIGVuam95cyBnZXR0aW5nIHdoYXQgaGUgZGVzaXJlcyBvd2luZyB0byBoaXMgbGFjayBvZgoJCQkJCXNlbGYtY29udHJvbCwgYnV0IGZlZWxzIHByb3NwZWN0aXZlIHBhaW4gYmVjYXVzZSBoZSB0aGlua3MgaGUgaXMgZG9pbmcKCQkJCQlhIGJhZCB0aGluZy4gPC90cmFuc2xhdGlvbj4="
translation['2.1225a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBIZW5jZSBpdCBpcwoJCQkJCXJlYXNvbmFibGUgdG8gc2F5IHRoYXQgZWFjaCBkb2VzIHdoYXQgaGUgZG9lcyB1bmRlciBjb21wdWxzaW9uLCBhbmQKCQkJCQl0aGF0IGVhY2ggaXMgYXQgb25lIHBvaW50IGFjdGluZyBpbnZvbHVudGFyaWx5LCBmcm9tIG1vdGl2ZXMgYm90aCBvZgoJCQkJCWFwcGV0aXRpb24gYW5kIG9mIHJhdGlvbmFsIGNhbGN1bGF0aW9u4oCUZm9yIGNhbGN1bGF0aW9uIGFuZAoJCQkJCWFwcGV0aXRpb24gYXJlIHRoaW5ncyBxdWl0ZSBzZXBhcmF0ZSwgYW5kIGVhY2ggaXMgcHVzaGVkIGFzaWRlIGJ5IHRoZQoJCQkJCW90aGVyLiBIZW5jZSBtZW4gdHJhbnNmZXIgdGhpcyB0byB0aGUgc3Bpcml0IGFzIGEgd2hvbGUsIGJlY2F1c2UgdGhleQoJCQkJCXNlZSBzb21ldGhpbmcgb2YgdGhpcyBzb3J0IGluIHRoZSBleHBlcmllbmNlcyBvZiB0aGUgc3Bpcml0LgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBOb3cgaXQgaXMKCQkJCQlhZG1pc3NpYmxlIHRvIHNheSB0aGlzIGluIHRoZSBjYXNlIG9mIHRoZSBwYXJ0cywgYnV0IHRoZSBzcGlyaXQgYXMgYQoJCQkJCXdob2xlIGJvdGggaW4gdGhlIHVuY29udHJvbGxlZCBhbmQgaW4gdGhlIHNlbGYtY29udHJvbGxlZCBtYW4gYWN0cwoJCQkJCXZvbHVudGFyaWx5LCBhbmQgaW4gbmVpdGhlciBjYXNlIGRvZXMgdGhlIG1hbiBhY3QgdW5kZXIgY29tcHVsc2lvbiwKCQkJCQlidXQgb25lIG9mIHRoZSBwYXJ0cyBpbiB0aGVtIHNvIGFjdHPigJRmb3Igd2UgcG9zc2VzcyBieQoJCQkJCW5hdHVyZSBib3RoIHBhcnRzOyBzaW5jZSByYXRpb25hbCBwcmluY2lwbGUgaXMgYSBuYXR1cmFsIHByb3BlcnR5LAoJCQkJCWJlY2F1c2UgaXQgd2lsbCBiZSBwcmVzZW50IGluIHVzIGlmIG91ciBncm93dGggaXMgYWxsb3dlZCBhbmQgbm90CgkJCQkJc3R1bnRlZCwgYW5kIGFsc28gZGVzaXJlIGlzIG5hdHVyYWwsIGJlY2F1c2UgaXQgYWNjb21wYW5pZXMgYW5kIGlzCgkJCQkJcHJlc2VudCBpbiB1cyBmcm9tIGJpcnRoOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMTUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gYW5kIHRoZXNlIGFyZSBwcmV0dHkgbmVhcmx5IHRoZSB0d28gdGhpbmdzIGJ5IHdoaWNoIHdlIGRlZmluZSB0aGUKCQkJCQluYXR1cmFs4oCUaXQgaXMgd2hhdCBhY2NvbXBhbmllcyBldmVyeWJvZHkgYXMgc29vbiBhcyBoZSBpcwoJCQkJCWJvcm4sIG9yIGVsc2Ugd2hhdCBjb21lcyB0byB1cyBpZiBkZXZlbG9wbWVudCBpcyBhbGxvd2VkIHRvIGdvIG9uCgkJCQkJcmVndWxhcmx5LCBmb3IgZXhhbXBsZSBncmV5IGhhaXIsIG9sZCBhZ2UsIGV0Yy4gVGhlcmVmb3JlIGVhY2ggb2YgdGhlCgkJCQkJdHdvIHBlcnNvbnMgaW4gYSB3YXkgYWN0cyBub3QgaW4gYWNjb3JkYW5jZSB3aXRoIG5hdHVyZSwgYnV0CgkJCQkJYWJzb2x1dGVseSBlYWNoIGRvZXMgYWN0IGFjY29yZGluZyB0byBuYXR1cmUsIHRob3VnaCBub3QgYWNjb3JkaW5nIHRvCgkJCQkJdGhlIHNhbWUgbmF0dXJlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMTYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGhlCgkJCQkJZGlmZmljdWx0aWVzLCB0aGVuLCByYWlzZWQgYWJvdXQgdGhlIHVuY29udHJvbGxlZCBhbmQgdGhlCgkJCQkJc2VsZi1jb250cm9sbGVkIG1hbiBhcmUgdGhlc2U6IGRvIGJvdGgsIG9yIGRvZXMgb25lIG9mIHRoZW0sIGFjdCB1bmRlcgoJCQkJCWNvbXB1bHNpb24sIHNvIHRoYXQgdGhleSBlaXRoZXIgYWN0IG5vdCB2b2x1bnRhcmlseSBvciBlbHNlCgkJCQkJdm9sdW50YXJpbHkgYW5kIHVuZGVyIGNvbXB1bHNpb24gYXQgdGhlIHNhbWUgdGltZeKAlGFuZCBpZgoJCQkJCXdoYXQgaXMgZG9uZSB1bmRlciBjb21wdWxzaW9uIGlzIGludm9sdW50YXJ5LCBhY3Qgdm9sdW50YXJpbHkgYW5kCgkJCQkJaW52b2x1bnRhcmlseSBhdCB0aGUgc2FtZSB0aW1lPyBBbmQgaXQgaXMgZmFpcmx5IGNsZWFyIGZyb20gd2hhdCBoYXMKCQkJCQliZWVuIHNhaWQgaG93IHRoZXNlIGRpZmZpY3VsdGllcyBhcmUgdG8gYmUgbWV0LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIyNWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1225a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1225a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xNyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgdGhlcmUgaXMgYW5vdGhlciB3YXkgaW4gd2hpY2ggcGVvcGxlIGFyZQoJCQkJCXNhaWQgdG8gYWN0IHVuZGVyIGNvbXB1bHNpb24gYW5kIG9mIG5lY2Vzc2l0eSB3aXRob3V0IGRpc2FncmVlbWVudAoJCQkJCWJldHdlZW4gcmF0aW9uYWwgcHJpbmNpcGxlIGFuZCBhcHBldGl0aW9uLCB3aGVuIHRoZXkgZG8gc29tZXRoaW5nIHRoYXQKCQkJCQl0aGV5IGNvbnNpZGVyIGFjdHVhbGx5IHBhaW5mdWwgYW5kIGJhZCBidXQgdGhleSBhcmUgZmFjZWQgYnkgZmxvZ2dpbmcKCQkJCQlvciBpbXByaXNvbm1lbnQgb3IgZXhlY3V0aW9uIGlmIHRoZXkgZG8gbm90IGRvIGl0OyBmb3IgaW4gdGhlc2UgY2FzZXMKCQkJCQl0aGV5IHNheSB0aGF0IHRoZXkgYXJlIGFjdGluZyB1bmRlciBuZWNlc3NpdHkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBQb3NzaWJseSwgaG93ZXZlciwgdGhpcyBpcwoJCQkJCW5vdCB0aGUgY2FzZSwgYnV0IHRoZXkgYWxsIGRvIHRoZSBhY3R1YWwgZGVlZHMgd2lsbGluZ2x5LCBzaW5jZSBpdCBpcwoJCQkJCW9wZW4gdG8gdGhlbSBub3QgdG8gZG8gdGhlbSBidXQgdG8gZW5kdXJlIHRoZSBwZW5hbHR5IHRocmVhdGVuZWQuCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjE5IiB1bml0PSJMb2ViIGNoYXAiIC8+IE1vcmVvdmVyLCBwZXJoYXBzCgkJCQkJc29tZW9uZSBtaWdodCBzYXkgdGhhdCBpbiBzb21lIGNhc2VzIHRoZXNlIGFjdGlvbnMgYXJlIGRvbmUgb2YKCQkJCQluZWNlc3NpdHkgYW5kIGluIG90aGVycyBub3QuIEZvciBpbiBjYXNlcyB3aGVyZSB0aGUgcHJlc2VuY2Ugb3IKCQkJCQlhYnNlbmNlIG9mIHN1Y2ggY2lyY3Vtc3RhbmNlcyBkZXBlbmRzIG9uIHRoZSBhZ2VudCBoaW1zZWxmLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciAnZm9yIGluIHRob3NlIG9mIHN1Y2ggYWN0cwoJCQkJCQl3aGljaCBpdCByZXN0cyB3aXRoIGhpbXNlbGYgdG8gZG8gb3Igbm90Lic8L25vdGU+IGV2ZW4gdGhlCgkJCQkJYWN0aW9ucyB0aGF0IGhlIGRvZXMgd2l0aG91dCB3aXNoaW5nIHRvIGRvIHRoZW0gaGUgZG9lcyB3aWxsaW5nbHkgYW5kCgkJCQkJbm90IHVuZGVyIGNvbXB1bHNpb247IGJ1dCB3aGVyZSBpbiBzdWNoIGNhc2VzIHRoZSBjaXJjdW1zdGFuY2VzIGRvIG5vdAoJCQkJCXJlc3Qgd2l0aCBoaW1zZWxmLCBoZSBhY3RzIHVuZGVyIGNvbXB1bHNpb24gaW4gYSBzZW5zZSwgdGhvdWdoIG5vdAoJCQkJCWluZGVlZCB1bmRlciBjb21wdWxzaW9uIGFic29sdXRlbHksIGJlY2F1c2UgaGUgZG9lcyBub3QgZGVmaW5pdGVseQoJCQkJCWNob29zZSB0aGUgYWN0dWFsIHRoaW5nIHRoYXQgaGUgZG9lcyBidXQgdGhlIG9iamVjdCBmb3Igd2hpY2ggaGUgZG9lcwoJCQkJCWl0OyBzaW5jZSBldmVuIGluIHRoZSBvYmplY3RzIG9mIGFjdGlvbiB0aGVyZSBpcyBhIGNlcnRhaW4gZGlmZmVyZW5jZS4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMjAiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gRm9yIGlmIHNvbWVvbmUKCQkJCQl3ZXJlIHRvIGtpbGwgYSBtYW4gdG8gcHJldmVudCBoaXMgY2F0Y2hpbmcgaGltIGJ5IGdyb3BpbmcgZm9yCgkJCQkJaGltLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGluCgkJCQkJCWJsaW5kLW1hbidzLWJsdWZmLCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvM+F4b+Tzr3OtM6xPC9mb3JlaWduPiBvcgoJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ph86xzrvOuuG/hiDOvM+F4b+WzrE8L2ZvcmVpZ24+Ljwvbm90ZT4gaXQKCQkJCQl3b3VsZCBiZSByaWRpY3Vsb3VzIGZvciBoaW0gdG8gc2F5IHRoYXQgaGUgaGFkIGRvbmUgaXQgdW5kZXIKCQkJCQljb21wdWxzaW9uIGFuZCBvZiBuZWNlc3NpdHnigJR0aGVyZSBtdXN0IGJlIHNvbWUgZ3JlYXRlciBhbmQKCQkJCQltb3JlIHBhaW5mdWwgZXZpbCB0aGF0IGhlIHdpbGwgc3VmZmVyIGlmIGhlIGRvZXMgbm90IGRvIGl0LiBJdCBpcyB3aGVuCgkJCQkJYSBtYW4gZG9lcyBzb21ldGhpbmcgZXZpbCBmb3IgdGhlIHNha2Ugb2Ygc29tZXRoaW5nIGdvb2QsIG9yIGZvcgoJCQkJCWRlbGl2ZXJhbmNlIGZyb20gYW5vdGhlciBldmlsLCB0aGF0IGhlIHdpbGwgYmUgYWN0aW5nIHVuZGVyIG5lY2Vzc2l0eQoJCQkJCWFuZCBieSBjb21wdWxzaW9uLCBvciBhdCBhbGwgZXZlbnRzIG5vdCBieSBuYXR1cmU7IGFuZCB0aGVuIGhlIHdpbGwKCQkJCQlyZWFsbHkgYmUgYWN0aW5nIHVud2lsbGluZ2x5LCBmb3IgdGhlc2UgYWN0aW9ucyBkbyBub3QgcmVzdCB3aXRoCgkJCQkJaGltc2VsZi48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvM+F4b+Tzr3OtM6xPC9mb3JlaWduPiBvcgoJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ph86xzrvOuuG/hiDOvM+F4b+WzrE8L2ZvcmVpZ24+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1225b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4yMSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBPbiB0aGlzIGFjY291bnQgbWFueSByZWNrb24KCQkJCQlldmVuIGxvdmUgYXMgaW52b2x1bnRhcnksIGFuZCBzb21lIGZvcm1zIG9mIGFuZ2VyLCBhbmQgbmF0dXJhbAoJCQkJCWltcHVsc2VzLCBiZWNhdXNlIHRoZWlyIHBvd2VyIGlzIGV2ZW4gYmV5b25kIG5hdHVyZTsgYW5kIHdlIHBhcmRvbgoJCQkJCXRoZW0gYXMgbmF0dXJhbGx5IGNhcGFibGUgb2YgY29uc3RyYWluaW5nIG5hdHVyZS4gQW5kIGl0IHdvdWxkIGJlCgkJCQkJdGhvdWdodCB0aGF0IGEgbWFuIGlzIGFjdGluZyBtb3JlIHVuZGVyIGNvbXB1bHNpb24gYW5kIGludm9sdW50YXJpbHkKCQkJCQl3aGVuIGhpcyBvYmplY3QgaXMgdG8gYXZvaWQgdmlvbGVudCBwYWluIHRoYW4gd2hlbiBpdCBpcyB0byBhdm9pZCBtaWxkCgkJCQkJcGFpbiwgYW5kIGluIGdlbmVyYWwgbW9yZSB3aGVuIGhpcyBvYmplY3QgaXMgdGhlIGF2b2lkYW5jZSBvZiBwYWluCgkJCQkJdGhhbiB3aGVuIGl0IGlzIHRvIGdhaW4gZW5qb3ltZW50LiBGb3Igd2hhdCByZXN0cyB3aXRoCgkJCQkJaGltc2VsZuKAlGFuZCBpdCB3aG9sbHkgdHVybnMgb24gdGhpc+KAlG1lYW5zIHdoYXQgaGlzCgkJCQkJbmF0dXJlIGlzIGFibGUgdG8gYmVhcjsgd2hhdCBoaXMgbmF0dXJlIGlzIG5vdCBhYmxlIHRvIGJlYXIgYW5kIHdoYXQKCQkJCQlpcyBub3QgYSBtYXR0ZXIgb2YgaGlzIG93biBuYXR1cmFsIGFwcGV0aXRpb24gb3IgY2FsY3VsYXRpb24gZG9lcyBub3QKCQkJCQlyZXN0IHdpdGggaGltc2VsZi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI4LjIyIiB1bml0PSJMb2ViIGNoYXAiIC8+IE9uCgkJCQkJdGhpcyBhY2NvdW50IGFsc28gaW4gdGhlIGNhc2Ugb2YgcGVyc29ucyB3aG8gYXJlIGluc3BpcmVkIGFuZCB1dHRlcgoJCQkJCXByb3BoZWNpZXMsIGFsdGhvdWdoIHRoZXkgcGVyZm9ybSBhbiBhY3Qgb2YgdGhvdWdodCwgbmV2ZXJ0aGVsZXNzIHdlCgkJCQkJZG8gbm90IHNheSB0aGF0IHNheWluZyB3aGF0IHRoZXkgc2FpZCBhbmQgZG9pbmcgd2hhdCB0aGV5IGRpZCByZXN0ZWQKCQkJCQl3aXRoIHRoZW1zZWx2ZXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC4yMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBOb3IgeWV0CgkJCQkJZG8gd2Ugc2F5IHRoYXQgd2hhdCBtZW4gZG8gYmVjYXVzZSBvZiBkZXNpcmUgcmVzdHMgd2l0aCB0aGVtc2VsdmVzOyBzbwoJCQkJCXRoYXQgc29tZSB0aG91Z2h0cyBhbmQgZW1vdGlvbnMsIG9yIHRoZSBhY3Rpb25zIHRoYXQgYXJlIGd1aWRlZCBieQoJCQkJCXN1Y2ggdGhvdWdodHMgYW5kIGNhbGN1bGF0aW9ucywgZG8gbm90IHJlc3Qgd2l0aCBvdXJzZWx2ZXMsIGJ1dCBpdCBpcwoJCQkJCWFzIFBoaWxvbGF1czxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QeXRoYWdvcmVhbgoJCQkJCQlwaGlsb3NvcGhlciBjb250ZW1wb3Jhcnkgd2l0aCBTb2NyYXRlcy48L25vdGU+CgkJCQkJc2FpZOKAlCdzb21lIGFyZ3VtZW50cyBhcmUgdG9vIHN0cm9uZyBmb3IgdXMuJyBIZW5jZSBpZiBpdCB3YXMKCQkJCQluZWNlc3NhcnkgdG8gY29uc2lkZXIgdGhlIHZvbHVudGFyeSBhbmQgaW52b2x1bnRhcnkgd2l0aCByZWZlcmVuY2UKCQkJCQlhbHNvIHRvIGFjdGluZyB1bmRlciBjb21wdWxzaW9uLCBsZXQgdGhpcyBiZSBvdXIgZGVjaXNpb24gb2YgdGhlCgkJCQkJbWF0dGVyIChmb3IgdGhvc2Ugd2hvIGNhdXNlIG1vc3QgaGluZHJhbmNlIC4gLiAuIHRoZSB2b2x1bnRhcnkgLiAuCgkJCQkJLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Tb21lIHdvcmRzIHNlZW0gdG8gaGF2ZQoJCQkJCQliZWVuIGxvc3QgaGVyZSAoPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzrvOu+G9sTwvZm9yZWlnbj4gc3VnZ2VzdHMKCQkJCQkJdGhhdCB0aGV5IGNvbnRhaW5lZCBhIG5lZ2F0aXZlKS48L25vdGU+IGFzIGFjdGluZyB1bmRlcgoJCQkJCWNvbXB1bHNpb24sIGJ1dCB2b2x1bnRhcmlseSkuPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzrvOu+G9sTwvZm9yZWlnbj4gc3VnZ2VzdHMKCQkJCQkJdGhhdCB0aGV5IGNvbnRhaW5lZCBhIG5lZ2F0aXZlKS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjkuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgdGhhdCB0aGlzIGlzCgkJCQkJY29uY2x1ZGVkLCBhbmQgYXMgdGhlIHZvbHVudGFyeSBoYXMgYmVlbiBmb3VuZCBub3QgdG8gYmUgZGVmaW5lZCBieQoJCQkJCWFwcGV0aXRpb24sIG5vciB5ZXQgYnkgcHVycG9zaXZlIGNob2ljZSwgaXQgdGhlcmVmb3JlIHJlbWFpbnMgdG8KCQkJCQlkZWZpbmUgaXQgYXMgdGhhdCB3aGljaCBpcyBpbiBhY2NvcmRhbmNlIHdpdGggdGhvdWdodC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyMjViIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1225b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1225b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IE5vdyB0aGUKCQkJCQl2b2x1bnRhcnkgc2VlbXMgdG8gYmUgdGhlIG9wcG9zaXRlIG9mIHRoZSBpbnZvbHVudGFyeTsgYW5kIGFjdGluZyB3aXRoCgkJCQkJa25vd2xlZGdlIG9mIGVpdGhlciB0aGUgcGVyc29uIGFjdGVkIG9uIG9yIHRoZSBpbnN0cnVtZW50IG9yIHRoZQoJCQkJCXJlc3VsdCAoZm9yIHNvbWV0aW1lcyB0aGUgYWdlbnQga25vd3MgdGhhdCBpdCBpcyBoaXMgZmF0aGVyIGJ1dCBkb2VzCgkJCQkJbm90IGludGVuZCB0byBraWxsIGhpbSBidXQgdG8gc2F2ZSBoaW3igJRhcyB0aGUgUGVsaWFkczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgZGF1Z2h0ZXJzIG9mIFBlbGlhcywgS2luZyBvZgoJCQkJCQlJb2xjaHVzLCBjdXQgaGltIHVwIGFuZCBib2lsZWQgaGltLCBoYXZpbmcgYmVlbiB0b2xkIGJ5IE1lZGVhCgkJCQkJCSh3aG8gd2FudGVkIEphc29uIHRvIGxlYXZlIGhpcyB0aHJvbmUpIHRoYXQgdGhpcyB3b3VsZCByZXN0b3JlCgkJCQkJCWhpcyB5b3V0aC48L25vdGU+IGRpZOKAlG9yIGtub3dzIHRoYXQgd2hhdCBoZSBpcwoJCQkJCW9mZmVyaW5nIGlzIGEgZHJpbmsgYnV0IG9mZmVycyBpdCBhcyBhIGxvdmUtY2hhcm0gb3Igd2luZSwgd2hlbiByZWFsbHkKCQkJCQlpdCBpcyBoZW1sb2NrKSBzZWVtcyB0byBiZSB0aGUgb3Bwb3NpdGUgb2YgYWN0aW5nIHdpdGhvdXQga25vd2luZyB0aGUKCQkJCQlwZXJzb24gYWN0ZWQgb24sIHRoZSBpbnN0cnVtZW50IGFuZCB0aGUgbmF0dXJlIG9mIHRoZSBhY3QsIHRocm91Z2gKCQkJCQlpZ25vcmFuY2UgYW5kIG5vdCBieSBhY2NpZGVudC4gQnV0IHRvIGFjdCB0aHJvdWdoIGlnbm9yYW5jZSBvZiB0aGUKCQkJCQlhY3QsIHRoZSBtZWFucyBhbmQgdGhlIHBlcnNvbiBhY3RlZCBvbiBpcyBpbnZvbHVudGFyeSBhY3Rpb24uCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGhlcmVmb3JlIHRoZQoJCQkJCW9wcG9zaXRlIGlzIHZvbHVudGFyeS4gSXQgZm9sbG93cyB0aGVuIHRoYXQgYWxsIHRoZSB0aGluZ3MgdGhhdCBhIG1hbgoJCQkJCWRvZXMgbm90IGluIGlnbm9yYW5jZSwgYW5kIHRocm91Z2ggaGlzIG93biBhZ2VuY3ksIHdoZW4gaXQgaXMgaW4gaGlzCgkJCQkJcG93ZXIgbm90IHRvIGRvIHRoZW0sIGFyZSB2b2x1bnRhcnkgYWN0cywgYW5kIGl0IGlzIGluIHRoaXMgdGhhdCB0aGUKCQkJCQl2b2x1bnRhcnkgY29uc2lzdHM7IGFuZCBhbGwgdGhlIHRoaW5ncyB0aGF0IGhlIGRvZXMgaW4gaWdub3JhbmNlLCBhbmQKCQkJCQl0aHJvdWdoIGJlaW5nIGluIGlnbm9yYW5jZSwgaGUgZG9lcyBpbnZvbHVudGFyaWx5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjkuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgc2luY2UgdG8gdW5kZXJzdGFuZCBvcgoJCQkJCWtub3cgaGFzIHR3byBtZWFuaW5ncywgb25lIGJlaW5nIHRvIGhhdmUgdGhlIGtub3dsZWRnZSBhbmQgdGhlIG90aGVyCgkJCQkJdG8gdXNlIGl0LCBhIG1hbiB3aG8gaGFzIGtub3dsZWRnZSBidXQgaXMgbm90IHVzaW5nIGl0IHdvdWxkIGluIG9uZQoJCQkJCWNhc2UgYmUganVzdGx5IGRlc2NyaWJlZCBhcyBhY3RpbmcgaW4gaWdub3JhbmNlIGJ1dCBpbiBhbm90aGVyIGNhc2UKCQkJCQl1bmp1c3RseeKAlCBuYW1lbHksIGlmIGhpcyBub24tZW1wbG95bWVudCBvZiB0aGUga25vd2xlZGdlCgkJCQkJd2VyZSBkdWUgdG8gY2FyZWxlc3NuZXNzLiBBbmQgc2ltaWxhcmx5IG9uZSB3b3VsZCBiZSBibGFtZWQgZm9yIG5vdAoJCQkJCWhhdmluZyB0aGUga25vd2xlZGdlLCBpZiBpdCB3ZXJlIHNvbWV0aGluZyB0aGF0IHdhcyBlYXN5IG9yIG5lY2Vzc2FyeQoJCQkJCWFuZCBoaXMgbm90IGhhdmluZyBpdCBpcyBkdWUgdG8gY2FyZWxlc3NuZXNzIG9yIHBsZWFzdXJlIG9yIHBhaW4uCgkJCQkJVGhlc2UgcG9pbnRzIHRoZXJlZm9yZSBtdXN0IGJlIGFkZGVkIHRvIG91ciBkZWZpbml0aW9uLiBMZXQgdGhpcywKCQkJCQl0aGVuLCBiZSBvdXIgbW9kZSBvZiBkZWZpbml0aW9uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgdGhlIEdyZWVrIHNob3VsZCBiZSBhbHRlcmVkIHRvIGdpdmUgJ0xldCB0aGlzIGJlIG91cgoJCQkJCQlkZWNpc2lvbi4nPC9ub3RlPiBhYm91dCB0aGUgdm9sdW50YXJ5IGFuZCBpbnZvbHVudGFyeS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TmV4dCBsZXQgdXMgc3BlYWsgYWJvdXQgcHVycG9zaXZlIGNob2ljZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHRlcm0gZGVub3RlcyBub3QgdGhlIGRlbGliZXJhdGUgY2hvaWNlIG9mIGFuCgkJCQkJCQlvYmplY3QgYnV0IHRoZSBzZWxlY3Rpb24gb2YgbWVhbnMgdG8gYXR0YWluIGFuIG9iamVjdDogc2VlCgkJCQkJCQk3Ljwvbm90ZT4gZmlyc3QgcmFpc2luZyB2YXJpb3VzIGRpZmZpY3VsdGllcyBhYm91dCBpdC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+Rm9yIG9uZSBtaWdodCBkb3VidCB0byB3aGljaAoJCQkJCWNsYXNzIGl0IG5hdHVyYWxseSBiZWxvbmdzIGFuZCBpbiB3aGF0IGNsYXNzIGl0IG91Z2h0IHRvIGJlIHB1dCwgYW5kCgkJCQkJd2hldGhlciB0aGUgdm9sdW50YXJ5IGFuZCB0aGUgcHVycG9zZWx5IGNob3NlbiBhcmUgZGlmZmVyZW50IHRoaW5ncyBvcgoJCQkJCXRoZSBzYW1lIHRoaW5nLiA8L3RyYW5zbGF0aW9uPg=="
translation['2.1226a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgYQoJCQkJCXZpZXcgc3BlY2lhbGx5IHB1dCBmb3J3YXJkIGZyb20gc29tZSBxdWFydGVycywgd2hpY2ggb24gaW5xdWlyeSBtYXkKCQkJCQlzZWVtIGNvcnJlY3QsIGlzIHRoYXQgcHVycG9zaXZlIGNob2ljZSBpcyBvbmUgb2YgdHdvIHRoaW5ncywgZWl0aGVyCgkJCQkJb3BpbmlvbiBvciBhcHBldGl0aW9uOyBmb3IgYm90aCBhcmUgc2VlbiB0byBhY2NvbXBhbnkgaXQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBOb3cgaXQgaXMgZXZpZGVudCB0aGF0IGl0IGlzCgkJCQkJbm90IGFwcGV0aXRpb247IGZvciBpbiB0aGF0IGNhc2UgaXQgd291bGQgYmUgZWl0aGVyIHdpc2ggb3IgZGVzaXJlIG9yCgkJCQkJcGFzc2lvbiwgc2luY2Ugbm9ib2R5IHdhbnRzIHRvIGdldCBhIHRoaW5nIHdpdGhvdXQgaGF2aW5nIGV4cGVyaWVuY2VkCgkJCQkJb25lIG9mIHRob3NlIGZlZWxpbmdzLiBOb3cgZXZlbiBhbmltYWxzIHBvc3Nlc3MgcGFzc2lvbiBhbmQgZGVzaXJlLAoJCQkJCWJ1dCB0aGV5IGRvIG5vdCBoYXZlIHB1cnBvc2l2ZSBjaG9pY2UuIEFuZCBhZ2FpbiwgYmVpbmdzIHRoYXQgcG9zc2VzcwoJCQkJCWJvdGggb2YgdGhlc2Ugb2Z0ZW4gbWFrZSBjaG9pY2VzIGV2ZW4gd2l0aG91dCBwYXNzaW9uIGFuZCBkZXNpcmU7IGFuZAoJCQkJCXdoaWxlIHRoZXkgYXJlIGV4cGVyaWVuY2luZyB0aGVzZSBmZWVsaW5ncyBkbyBub3QgbWFrZSBhIGNob2ljZSBidXQKCQkJCQlob2xkIG91dC4gQWdhaW4sIGRlc2lyZSBhbmQgcGFzc2lvbiBhcmUgYWx3YXlzIGFjY29tcGFuaWVkIGJ5IHBhaW4sCgkJCQkJYnV0IHdlIG9mdGVuIG1ha2UgYSBjaG9pY2UgZXZlbiB3aXRob3V0IHBhaW4uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgbW9yZW92ZXIgcHVycG9zaXZlIGNob2ljZQoJCQkJCWlzIG5vdCB0aGUgc2FtZSBhcyB3aXNoIGVpdGhlcjsgZm9yIG1lbiB3aXNoIGZvciBzb21lIHRoaW5ncyB0aGF0IHRoZXkKCQkJCQlrbm93IHRvIGJlIGltcG9zc2libGUsIGZvciBpbnN0YW5jZSB0byBiZSBraW5nIG9mIGFsbCBtYW5raW5kIGFuZCB0bwoJCQkJCWJlIGltbW9ydGFsLCBidXQgbm9ib2R5IHB1cnBvc2l2ZWx5IGNob29zZXMgYSB0aGluZyBrbm93aW5nIGl0IHRvIGJlCgkJCQkJaW1wb3NzaWJsZSwgbm9yIGluIGdlbmVyYWwgYSB0aGluZyB0aGF0LCB0aG91Z2ggcG9zc2libGUsIGhlIGRvZXMgbm90CgkJCQkJdGhpbmsgaW4gaGlzIG93biBwb3dlciB0byBkbyBvciBub3QgdG8gZG8uIFNvIHRoYXQgdGhpcyBtdWNoIGlzCgkJCQkJY2xlYXLigJRhIHRoaW5nIHB1cnBvc2l2ZWx5IGNob3NlbiBtdXN0IG5lY2Vzc2FyaWx5IGJlCgkJCQkJc29tZXRoaW5nIHRoYXQgcmVzdHMgd2l0aCBvbmVzZWxmLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIyNmEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1226a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1226a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgc2ltaWxhcmx5IGl0IGlzIG1hbmlmZXN0CgkJCQkJdGhhdCBwdXJwb3NpdmUgY2hvaWNlIGlzIG5vdCBvcGluaW9uIGVpdGhlciwgbm9yIHNvbWV0aGluZyB0aGF0IG9uZQoJCQkJCXNpbXBseSB0aGlua3M7IGZvciB3ZSBzYXc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUCI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMjNhIDE2LTE5PC9iaWJsPi48L25vdGU+IHRoYXQgYQoJCQkJCXRoaW5nIGNob3NlbiBpcyBzb21ldGhpbmcgaW4gb25lJ3Mgb3duIHBvd2VyLCBidXQgd2UgaGF2ZSBvcGluaW9ucyBhcwoJCQkJCXRvIG1hbnkgdGhpbmdzIHRoYXQgZG8gbm90IGRlcGVuZCBvbiB1cywgZm9yIGluc3RhbmNlIHRoYXQgdGhlCgkJCQkJZGlhZ29uYWwgb2YgYSBzcXVhcmUgaXMgaW5jb21tZW5zdXJhYmxlPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUCI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMjNhIDE2LTE5PC9iaWJsPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIE1zcy4gZ2l2ZSAnY29tbWVuc3VyYWJsZSwnIGJ1dCB0aGVyZSBpcyBubwoJCQkJCQlwb2ludCBpbiBzcGVjaWZ5aW5nIGFuIHVudHJ1ZSBvcGluaW9uLiBDZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gICAgICAgIE5pYy4gRXRoLiAxMTEyYS4yMCIgdmFsaWQ9InllcyI+QXJpc3RvdC4KCQkJCQkJCU5pYy4gRXRoLiAxMTEyYSAyMjwvYmlibD48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PgM61z4HhvbYgzrThvbQKCQkJCQkJCQnPhOG/ts69IOG8gM+KzrThvbfPic69IM6/4b2QzrTOteG9ts+CIM6yzr/Phc67zrXhvbvOtc+EzrHOuSwgzr/hvLfOv869IM+AzrXPgeG9tiDPhM6/4b+mCgkJCQkJCQkJzrrhvbnPg868zr/PhSwg4byiIM+E4b+Gz4IgzrTOuc6xzrzhvbPPhM+Bzr/PhSDOus6x4b22IM+E4b+Gz4Igz4DOu861z4XPgeG+ts+CIOG9hc+EzrkKCQkJCQkJCQnhvIDPg+G9u868zrzOtc+Ez4HOv865PC9mb3JlaWduPiAod2hlcmUgS2IgaGFzIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+D4b27zrzOvM61z4TPgc6/zrk8L2ZvcmVpZ24+KS48L25vdGU+IHdpdGggdGhlIHNpZGU7IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuICAgICAgICBOaWMuIEV0aC4gMTExMmEuMjAiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuCgkJCQkJCQlOaWMuIEV0aC4gMTExMmEgMjI8L2JpYmw+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4DOtc+B4b22IM604b20CgkJCQkJCQkJz4Thv7bOvSDhvIDPis604b23z4nOvSDOv+G9kM60zrXhvbbPgiDOss6/z4XOu8614b27zrXPhM6xzrksIM6/4by3zr/OvSDPgM61z4HhvbYgz4TOv+G/pgoJCQkJCQkJCc664b25z4POvM6/z4UsIOG8oiDPhOG/hs+CIM60zrnOsc684b2zz4TPgc6/z4UgzrrOseG9tiDPhOG/hs+CIM+AzrvOtc+Fz4HhvrbPgiDhvYXPhM65CgkJCQkJCQkJ4byAz4PhvbvOvM68zrXPhM+Bzr/OuTwvZm9yZWlnbj4gKHdoZXJlIEtiIGhhcyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg+G9u868zrzOtc+Ez4HOv865PC9mb3JlaWduPikuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC42IiB1bml0PSJMb2ViIGNoYXAiIC8+IGFuZCBhZ2FpbiwgY2hvaWNlIGlzIG5vdCB0cnVlCgkJCQkJb3IgZmFsc2UuIE5vciB5ZXQgaXMgcHVycG9zaXZlIGNob2ljZSBhbiBvcGluaW9uIGFib3V0IHByYWN0aWNhYmxlCgkJCQkJdGhpbmdzIHdpdGhpbiBvbmUncyBvd24gcG93ZXIgdGhhdCBtYWtlcyB1cyB0aGluayB0aGF0IHdlIG91Z2h0IHRvIGRvCgkJCQkJb3Igbm90IHRvIGRvIHNvbWV0aGluZzsgYnV0IHRoaXMgY2hhcmFjdGVyaXN0aWMgaXMgY29tbW9uIHRvIG9waW5pb24KCQkJCQlhbmQgdG8gd2lzaC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC43IiB1bml0PSJMb2ViIGNoYXAiIC8+IEZvciBubyBvbmUKCQkJCQlwdXJwb3NpdmVseSBjaG9vc2VzIGFueSBFbmQsIGJ1dCB0aGUgbWVhbnMgdG8gaGlzIEVuZOKAlEkgbWVhbgoJCQkJCWZvciBpbnN0YW5jZSBubyBvbmUgY2hvb3NlcyB0byBiZSBoZWFsdGh5LCBidXQgdG8gdGFrZSBhIHdhbGsgb3Igc2l0CgkJCQkJZG93biBmb3IgdGhlIHNha2Ugb2YgYmVpbmcgaGVhbHRoeSwgbm8gb25lIGNob29zZXMgdG8gYmUgd2VsbCBvZmYsIGJ1dAoJCQkJCXRvIGdvIGludG8gYnVzaW5lc3Mgb3IgdG8gc3BlY3VsYXRlIGZvciB0aGUgc2FrZSBvZiBiZWluZyB3ZWxsIG9mZjsKCQkJCQlhbmQgZ2VuZXJhbGx5LCBvbmUgd2hvIG1ha2VzIGEgY2hvaWNlIGFsd2F5cyBtYWtlcyBpdCBjbGVhciBib3RoIHdoYXQKCQkJCQloaXMgY2hvaWNlIGlzIGFuZCB3aGF0IGl0cyBvYmplY3QgaXMsICdvYmplY3QnIG1lYW5pbmcgdGhhdCBmb3IgdGhlCgkJCQkJc2FrZSBvZiB3aGljaCBoZSBjaG9vc2VzIHNvbWV0aGluZyBlbHNlIGFuZCAnY2hvaWNlJyBtZWFuaW5nIHRoYXQKCQkJCQl3aGljaCBoZSBjaG9vc2VzIGZvciB0aGUgc2FrZSBvZiBzb21ldGhpbmcgZWxzZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC44IiB1bml0PSJMb2ViIGNoYXAiIC8+IFdoZXJlYXMgY2xlYXJseSBpdCBpcwoJCQkJCXNwZWNpYWxseSBhbiBFbmQgdGhhdCBhIG1hbiB3aXNoZXMsIGFuZCB0aGUgZmVlbGluZyB0aGF0IGhlIG91Z2h0IHRvCgkJCQkJYmUgaGVhbHRoeSBhbmQgcHJvc3Blcm91cyBpcyBhbiBvcGluaW9uLiBTbyB0aGVzZSBjb25zaWRlcmF0aW9ucyBtYWtlCgkJCQkJaXQgY2xlYXIgdGhhdCBwdXJwb3NpdmUgY2hvaWNlIGlzIGRpZmZlcmVudCBmcm9tIGJvdGggb3BpbmlvbiBhbmQKCQkJCQl3aXNoLiBGb3JtaW5nIHdpc2hlcyBhbmQgZm9ybWluZyBvcGluaW9ucyBhcHBseSBzcGVjaWFsbHkgdG8gb25lJ3MKCQkJCQlFbmQ7IHB1cnBvc2l2ZSBjaG9pY2UgaXMgbm90IG9mIEVuZHMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC45IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGlzIGNsZWFyLAoJCQkJCXRoZW4sIHRoYXQgcHVycG9zaXZlIGNob2ljZSBpcyBub3QgZWl0aGVyIHdpc2ggb3Igb3BpbmlvbiBvciBqdWRnZW1lbnQKCQkJCQlzaW1wbHk7IGJ1dCBpbiB3aGF0IGRvZXMgaXQgZGlmZmVyIGZyb20gdGhlbT8gYW5kIGhvdyBpcyBpdCByZWxhdGVkIHRvCgkJCQkJdGhlIHZvbHVudGFyeT88bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+VG8gYW5zd2VyCgkJCQkJdGhlc2UgcXVlc3Rpb25zIHdpbGwgbWFrZSBpdCBjbGVhciB3aGF0IHB1cnBvc2l2ZSBjaG9pY2UgaXMuCgkJCQkJPC90cmFuc2xhdGlvbj4="
translation['2.1226b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gTm93IG9mIHRoaW5ncwoJCQkJCXRoYXQgY2FuIGJvdGggYmUgYW5kIG5vdCBiZSwgc29tZSBhcmUgc3VjaCB0aGF0IGl0IGlzIHBvc3NpYmxlIHRvCgkJCQkJZGVsaWJlcmF0ZSBhYm91dCB0aGVtLCBidXQgYWJvdXQgb3RoZXJzIGl0IGlzIG5vdCBwb3NzaWJsZS4gU29tZQoJCQkJCXRoaW5ncyBjYW4gZWl0aGVyIGJlIG9yIG5vdCBiZSBidXQgdGhlaXIgY29taW5nIGludG8gYmVpbmcgZG9lcyBub3QKCQkJCQlyZXN0IHdpdGggdXMsIGJ1dCBpbiBzb21lIGNhc2VzIGlzIGR1ZSB0byB0aGUgb3BlcmF0aW9uIG9mIG5hdHVyZSBhbmQKCQkJCQlpbiBvdGhlcnMgdG8gb3RoZXIgY2F1c2VzOyBhbmQgYWJvdXQgdGhlc2UgdGhpbmdzIG5vYm9keSB3b3VsZAoJCQkJCWRlbGliZXJhdGUgdW5sZXNzIGluIGlnbm9yYW5jZSBvZiB0aGUgZmFjdHMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IHdpdGggc29tZSB0aGluZ3Mgbm90CgkJCQkJb25seSB0aGVpciBleGlzdGVuY2Ugb3Igbm9uLWV4aXN0ZW5jZSBpcyBwb3NzaWJsZSwgYnV0IGFsc28gZm9yIGh1bWFuCgkJCQkJYmVpbmdzIHRvIGRlbGliZXJhdGUgYWJvdXQgdGhlbTsgYW5kIHRoZXNlIGFyZSBhbGwgdGhlIHRoaW5ncyB0aGF0IGl0CgkJCQkJcmVzdHMgd2l0aCB1cyB0byBkbyBvciBub3QgdG8gZG8uIEhlbmNlIHdlIGRvIG5vdCBkZWxpYmVyYXRlIGFib3V0CgkJCQkJYWZmYWlycyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMDE5OCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAwMTk4Ij5JbmRpYTwvcGxhY2VOYW1lPiwgb3IgYWJvdXQKCQkJCQlob3cgdG8gc3F1YXJlIHRoZSBjaXJjbGU7IGZvciBhZmZhaXJzIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAwMTk4IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDAxOTgiPkluZGlhPC9wbGFjZU5hbWU+IGRvIG5vdCByZXN0IHdpdGggdXMsIHdoZXJlYXMgdGhlIG9iamVjdHMgb2YKCQkJCQljaG9pY2UgYW5kIHRoaW5ncyBwcmFjdGljYWJsZSBhcmUgYW1vbmcgdGhpbmdzIHJlc3Rpbmcgd2l0aCB1cywgYW5kCgkJCQkJc3F1YXJpbmcgdGhlIGNpcmNsZSBpcyBlbnRpcmVseSBpbXByYWN0aWNhYmxlIChhbmQgdGh1cyBpdCBpcyBjbGVhcgoJCQkJCXRoYXQgcHVycG9zaXZlIGNob2ljZSBpcyBub3Qgc2ltcGx5IG9waW5pb24gZWl0aGVyKS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgcHVycG9zaXZlIGNob2ljZSBkb2VzCgkJCQkJbm90IGRlYWwgd2l0aCBhbGwgdGhlIHByYWN0aWNhYmxlIHRoaW5ncyByZXN0aW5nIHdpdGggdXMgZWl0aGVyLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMTMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gSGVuY2Ugb25lIG1pZ2h0CgkJCQkJYWxzbyByYWlzZSB0aGUgcXVlc3Rpb24sIHdoeSBpcyBpdCBleGFjdGx5IHRoYXQsIHdoZXJlYXMgZG9jdG9ycwoJCQkJCWRlbGliZXJhdGUgYWJvdXQgdGhpbmdzIGluIHRoZWlyIGZpZWxkIG9mIHNjaWVuY2UsIHNjaG9sYXJzIGRvIG5vdD8KCQkJCQlUaGUgcmVhc29uIGlzIHRoYXQgc2luY2UgZXJyb3Igb2NjdXJzIGluIHR3byB3YXlzIChmb3Igd2UgZXJyIGVpdGhlcgoJCQkJCWluIHJlYXNvbmluZywgb3IgaW4gcGVyY2VwdGlvbiB3aGVuIGFjdHVhbGx5IGRvaW5nIHRoZSB0aGluZyksIGluCgkJCQkJbWVkaWNpbmUgaXQgaXMgcG9zc2libGUgdG8gZXJyIGluIGJvdGggd2F5cywgYnV0IGluIGdyYW1tYXIgZXJyb3Igb25seQoJCQkJCW9jY3VycyBpbiBvdXIgcGVyY2VwdGlvbiBhbmQgYWN0aW9uLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIyNmIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1226b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnRvCgkJCQkJaW52ZXN0aWdhdGUgd2hpY2ggd291bGQgYmUgYW4gZW5kbGVzcyB1bmRlcnRha2luZy48L3RyYW5zbGF0aW9uPg=="
translation['2.1226b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U2luY2UgdGhlbiBwdXJwb3NpdmUgY2hvaWNlIGlzIG5vdCBlaXRoZXIgb3BpbmlvbiBub3Igd2lzaAoJCQkJCXNlcGFyYXRlbHksIG5vciB5ZXQgYm90aCAoZm9yIG5vIG9uZSBtYWtlcyBhIGRlbGliZXJhdGUgY2hvaWNlCgkJCQkJc3VkZGVubHksIGJ1dCBtZW4gZG8gc3VkZGVubHkgdGhpbmsgdGhleSBvdWdodCB0byBhY3QgYW5kIHdpc2ggdG8KCQkJCQlhY3QpLCB0aGVyZWZvcmUgaXQgYXJpc2VzIGFzIGZyb20gYm90aCwgZm9yIGJvdGggb2YgdGhlbSBhcmUgcHJlc2VudAoJCQkJCXdpdGggYSBwZXJzb24gY2hvb3NpbmcuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMTUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4KCQkJCQlCdXQgaG93IHB1cnBvc2l2ZSBjaG9pY2UgYXJpc2VzIG91dCBvZiBvcGluaW9uIGFuZCB3aXNoIG11c3QgYmUKCQkJCQljb25zaWRlcmVkLiBBbmQgaW5kZWVkIGluIGEgbWFubmVyIHRoZSBhY3R1YWwgdGVybSAnY2hvaWNlJyBtYWtlcyB0aGlzCgkJCQkJY2xlYXIuICdDaG9pY2UnIGlzICd0YWtpbmcsJyBidXQgbm90IHRha2luZyBzaW1wbHnigJRpdCBpcwoJCQkJCXRha2luZyBvbmUgdGhpbmcgaW4gcHJlZmVyZW5jZSB0byBhbm90aGVyOyBidXQgdGhpcyBjYW5ub3QgYmUgZG9uZQoJCQkJCXdpdGhvdXQgY29uc2lkZXJhdGlvbiBhbmQgZGVsaWJlcmF0aW9uOyBoZW5jZSBwdXJwb3NpdmUgY2hvaWNlIGFyaXNlcwoJCQkJCW91dCBvZiBkZWxpYmVyYXRpdmUgb3Bpbmlvbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjE2IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBub2JvZHkgZGVsaWJlcmF0ZXMKCQkJCQlhYm91dCBoaXMgRW5k4oCUdGhpcyBldmVyeWJvZHkgaGFzIGZpeGVkOyBidXQgbWVuIGRlbGliZXJhdGUKCQkJCQlhYm91dCB0aGUgbWVhbnMgbGVhZGluZyB0byB0aGVpciBFbmTigJRkb2VzIHRoaXMgY29udHJpYnV0ZSB0bwoJCQkJCWl0LCBvciBkb2VzIHRoaXMgPyBvciB3aGVuIGEgbWVhbnMgaGFzIGJlZW4gZGVjaWRlZCBvbiwgaG93IHdpbGwgdGhhdAoJCQkJCWJlIHByb2N1cmVkPyBhbmQgdGhpcyBkZWxpYmVyYXRpb24gYXMgdG8gbWVhbnMgd2UgYWxsIHB1cnN1ZSB1bnRpbCB3ZQoJCQkJCWhhdmUgY2FycmllZCB0aGUgc3RhcnRpbmctcG9pbnQgaW4gdGhlIHByb2Nlc3Mgb2YgcHJvZHVjaW5nIHRoZSBFbmQKCQkJCQliYWNrIHRvIG91cnNlbHZlcy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4xNyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBJZiwKCQkJCQl0aGVuLCBub2JvZHkgY2hvb3NlcyB3aXRob3V0IGZpcnN0IHByZXBhcmluZywgYW5kIGRlbGliZXJhdGluZyBhcyB0bwoJCQkJCXRoZSBjb21wYXJhdGl2ZSBtZXJpdHMgb2YgdGhlIGFsdGVybmF0aXZlcywgYW5kIGEgbWFuIGRlbGliZXJhdGVzIGFzCgkJCQkJdG8gdGhvc2UgYW1vbmcgdGhlIG1lYW5zIHRvIHRoZSBFbmQgY2FwYWJsZSBvZiBleGlzdGluZyBvciBub3QKCQkJCQlleGlzdGluZyB0aGF0IGFyZSB3aXRoaW4gb3VyIHBvd2VyLCBpdCBpcyBjbGVhciB0aGF0IHB1cnBvc2l2ZSBjaG9pY2UKCQkJCQlpcyBkZWxpYmVyYXRpdmUgYXBwZXRpdGlvbiBvZiB0aGluZ3Mgd2l0aGluIG9uZSdzIHBvd2VyLiBGb3Igd2UKCQkJCQlkZWxpYmVyYXRlIGFib3V0IGV2ZXJ5dGhpbmcgdGhhdCB3ZSBjaG9vc2UsIGFsdGhvdWdoIG9mIGNvdXJzZSB3ZSBkbwoJCQkJCW5vdCBjaG9vc2UgZXZlcnl0aGluZyB0aGF0IHdlIGRlbGliZXJhdGUgYWJvdXQuIEkgY2FsbCBhcHBldGl0aW9uCgkJCQkJZGVsaWJlcmF0aXZlIHdoZW4gaXRzIG9yaWdpbiBvciBjYXVzZSBpcyBkZWxpYmVyYXRpb24sPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZCB3aGVuIGEgbWFuIGRlc2lyZXMgYmVjYXVzZQoJCQkJCW9mIGhhdmluZyBkZWxpYmVyYXRlZC4gPC90cmFuc2xhdGlvbj4="
translation['2.1227a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMTgiIHVuaXQ9IkxvZWIgY2hhcCIgLz4KCQkJCQlUaGVyZWZvcmUgdGhlIGZhY3VsdHkgb2YgcHVycG9zaXZlIGNob2ljZSBpcyBub3QgcHJlc2VudCBpbiB0aGUgb3RoZXIKCQkJCQlhbmltYWxzLCBub3IgaW4gbWFuIGF0IGV2ZXJ5IGFnZSBub3IgaW4gZXZlcnkgY29uZGl0aW9uLCBmb3Igbm8gbW9yZQoJCQkJCWlzIHRoZSBhY3Qgb2YgZGVsaWJlcmF0aW9uLCBub3IgeWV0IHRoZSBjb25jZXB0IG9mIGNhdXNlOiBpdCBpcyBxdWl0ZQoJCQkJCXBvc3NpYmxlIHRoYXQgbWFueSBtZW4gbWF5IHBvc3Nlc3MgdGhlIGZhY3VsdHkgb2YgZm9ybWluZyBhbiBvcGluaW9uCgkJCQkJd2hldGhlciB0byBkbyBvciBub3QgdG8gZG8gYSB0aGluZyB3aXRob3V0IGFsc28gaGF2aW5nIHRoZSBwb3dlciBvZgoJCQkJCWZvcm1pbmcgdGhpcyBvcGluaW9uIGJ5IHByb2Nlc3Mgb2YgcmVhc29uaW5nLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjE5IiB1bml0PSJMb2ViIGNoYXAiIC8+IEZvciB0aGUgZGVsaWJlcmF0aXZlIGZhY3VsdHkKCQkJCQlpcyB0aGUgc3Bpcml0J3MgcG93ZXIgb2YgY29udGVtcGxhdGluZyBhIGtpbmQgb2YgY2F1c2XigJRmb3IKCQkJCQlvbmUgc29ydCBvZiBjYXVzZSBpcyB0aGUgZmluYWwgY2F1c2UsIGFzIGFsdGhvdWdoIGNhdXNlIG1lYW5zIGFueXRoaW5nCgkJCQkJYmVjYXVzZSBvZiB3aGljaCBhIHRoaW5nIGNvbWVzIGFib3V0LCBpdCBpcyB0aGUgb2JqZWN0IG9mIGEgdGhpbmcncwoJCQkJCWV4aXN0ZW5jZSBvciBwcm9kdWN0aW9uIHRoYXQgd2Ugc3BlY2lhbGx5IGRlc2lnbmF0ZSBhcyBpdHMgY2F1c2U6IGZvcgoJCQkJCWluc3RhbmNlLCBpZiBhIG1hbiB3YWxrcyBpbiBvcmRlciB0byBmZXRjaCB0aGluZ3MsIGZldGNoaW5nIHRoaW5ncyBpcwoJCQkJCXRoZSBjYXVzZSBvZiBoaXMgd2Fsa2luZy4gQ29uc2VxdWVudGx5IHBlb3BsZSB3aG8gaGF2ZSBubyBmaXhlZCBhaW0KCQkJCQlhcmUgbm90IGdpdmVuIHRvIGRlbGliZXJhdGlvbi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4yMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBIZW5jZSBpbmFzbXVjaCBhcyBpZiBhIG1hbiBvZiBoaXMgb3duIGFjY29yZCBhbmQgbm90CgkJCQkJdGhyb3VnaCBpZ25vcmFuY2UgZG9lcyBvciByZWZyYWlucyBmcm9tIGRvaW5nIHNvbWV0aGluZyByZXN0aW5nIHdpdGgKCQkJCQloaW1zZWxmIGVpdGhlciB0byBkbyBvciBub3QgdG8gZG8sIGhlIGFjdHMgb3IgcmVmcmFpbnMgZnJvbSBhY3RpbmcKCQkJCQl2b2x1bnRhcmlseSwgYnV0IHlldCB3ZSBkbyBtYW55IHN1Y2ggdGhpbmdzIHdpdGhvdXQgZGVsaWJlcmF0aW9uIG9yCgkJCQkJcHJldmlvdXMgdGhvdWdodCwgaXQgbmVjZXNzYXJpbHkgZm9sbG93cyB0aGF0LCBhbHRob3VnaCBhbGwgdGhhdCBoYXMKCQkJCQliZWVuIHB1cnBvc2l2ZWx5IGNob3NlbiBpcyB2b2x1bnRhcnksICd2b2x1bnRhcnknIGlzIG5vdCB0aGUgc2FtZSBhcwoJCQkJCSdjaG9zZW4sJyBhbmQsIGFsdGhvdWdoIGFsbCB0aGluZ3MgZG9uZSBieSBwdXJwb3NpdmUgY2hvaWNlIGFyZQoJCQkJCXZvbHVudGFyeSwgbm90IGFsbCB0aGluZ3Mgdm9sdW50YXJ5IGFyZSBkb25lIGJ5IHB1cnBvc2l2ZSBjaG9pY2UuCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4yMSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgYXQgdGhlIHNhbWUKCQkJCQl0aW1lIGl0IGlzIGNsZWFyIGZyb20gdGhlc2UgY29uc2lkZXJhdGlvbnMgdGhhdCB0aGUgY2xhc3NpZmljYXRpb24gb2YKCQkJCQlvZmZlbmNlcyBtYWRlIGJ5IGxlZ2lzbGF0b3JzIGFzIGluIHZvbHVudGFyeSwgdm9sdW50YXJ5IGFuZAoJCQkJCXByZW1lZGl0YXRlZCBpcyBhIGdvb2Qgb25lOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIyN2EiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['2.1227a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBldmVuIGlmIGl0IGlzCgkJCQkJbm90IHByZWNpc2VseSBhY2N1cmF0ZSwgeWV0IGF0IGFsbCBldmVudHMgaXQgYXBwcm94aW1hdGVzIHRvIHRoZSB0cnV0aAoJCQkJCWluIGEgd2F5LiA8L3RyYW5zbGF0aW9uPg=="
translation['2.1227a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IHdlIHdpbGwKCQkJCQlzcGVhayBhYm91dCB0aGlzIGluIG91ciBleGFtaW5hdGlvbiBvZiBqdXN0aWNlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Ob3QgaW4gRXVkLiBFdGguLCBidXQgY2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuICAgICAgICBOaWMuIEV0aC4gMTEzNWEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuCgkJCQkJCU5pYy4gRXRoLiAxMTM1YSAxNmZmLjwvYmlibD48L25vdGU+IEFzIHRvIHB1cnBvc2l2ZQoJCQkJCWNob2ljZSwgaXQgaXMgY2xlYXIgdGhhdCBpdCBpcyBub3QgYWJzb2x1dGVseSBpZGVudGljYWwgd2l0aCB3aXNoIG5vcgoJCQkJCXdpdGggb3BpbmlvbiwgYnV0IGlzIG9waW5pb24gcGx1cyBhcHBldGl0aW9uIHdoZW4gdGhlc2UgZm9sbG93IGFzIGEKCQkJCQljb25jbHVzaW9uIGZyb20gZGVsaWJlcmF0aW9uLjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuICAgICAgICBOaWMuIEV0aC4gMTEzNWEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuCgkJCQkJCU5pYy4gRXRoLiAxMTM1YSAxNmZmLjwvYmlibD48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHNpbmNlCgkJCQkJb25lIHdobyBkZWxpYmVyYXRlcyBhbHdheXMgZGVsaWJlcmF0ZXMgZm9yIHRoZSBzYWtlIG9mIHNvbWUgb2JqZWN0LAoJCQkJCWFuZCBhIG1hbiBkZWxpYmVyYXRpbmcgYWx3YXlzIGhhcyBzb21lIGFpbSBpbiB2aWV3IHdpdGggcmVmZXJlbmNlIHRvCgkJCQkJd2hpY2ggaGUgY29uc2lkZXJzIHdoYXQgaXMgZXhwZWRpZW50LCBub2JvZHkgZGVsaWJlcmF0ZXMgYWJvdXQgaGlzCgkJCQkJRW5kLCBidXQgdGhpcyBpcyBhIHN0YXJ0aW5nLXBvaW50IG9yIGFzc3VtcHRpb24sIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gbGlrZSB0aGUgcG9zdHVsYXRlcyBpbiB0aGUKCQkJCQl0aGVvcmV0aWMgc2NpZW5jZXMgKHdlIGhhdmUgc3Bva2VuIGFib3V0IHRoaXMgYnJpZWZseSBhdCB0aGUgYmVnaW5uaW5nCgkJCQkJb2YgdGhpcyBkaXNjb3Vyc2UsIGFuZCBpbiBkZXRhaWwgaW4gPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5hbHl0aWNzPC90aXRsZT48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAgICAgICAgMS4xMjE0Yi42IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4KCQkJCQkJMTIxNGIgNmZmLjwvYmlibD4sIGFuZCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBBUG8uIDcyYS4yMCI+QXJpc3RvdC4gQW5hbC4gUG9zdC4KCQkJCQkJCTcyYSAyMDwvYmlibD4gYW5kIGNvbnRleHQuPC9ub3RlPik7IHdoZXJlYXMgd2l0aCBhbGwgbWVuCgkJCQkJZGVsaWJlcmF0aW9uIHdoZXRoZXIgdGVjaG5pY2FsIG9yIHVudGVjaG5pY2FsIGlzIGFib3V0IHRoZSBtZWFucyB0aGF0CgkJCQkJbGVhZCB0byB0aGVpciBFbmQsIGUuZy4gd2hlbiB0aGV5IGRlbGliZXJhdGUgYWJvdXQgd2hldGhlciB0byBnbyB0bwoJCQkJCXdhciBvciBub3QgdG8gZ28gdG8gd2FyIHdpdGggYSBnaXZlbiBwZXJzb24uIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAgICAgICAgMS4xMjE0Yi42IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4KCQkJCQkJMTIxNGIgNmZmLjwvYmlibD4sIGFuZCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBBUG8uIDcyYS4yMCI+QXJpc3RvdC4gQW5hbC4gUG9zdC4KCQkJCQkJCTcyYSAyMDwvYmlibD4gYW5kIGNvbnRleHQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4yNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgdGhlIHF1ZXN0aW9uIG9mIG1lYW5zCgkJCQkJd2lsbCBkZXBlbmQgcmF0aGVyIG9uIGEgcHJpb3IgcXVlc3Rpb24sIHRoYXQgaXMsIHRoZSBxdWVzdGlvbiBvZgoJCQkJCW9iamVjdCwgZm9yIGluc3RhbmNlIHdlYWx0aCBvciBwbGVhc3VyZSBvciBzb21ldGhpbmcgZWxzZSBvZiB0aGF0IGtpbmQKCQkJCQl3aGljaCBoYXBwZW5zIHRvIGJlIG91ciBvYmplY3QuIEZvciBvbmUgd2hvIGRlbGliZXJhdGVzIGRlbGliZXJhdGVzIGlmCgkJCQkJaGUgaGFzIGNvbnNpZGVyZWQsIGZyb20gdGhlIHN0YW5kcG9pbnQgb2YgdGhlIEVuZCwgZWl0aGVyIHdoYXQgdGVuZHMKCQkJCQl0byBlbmFibGUgaGltIHRvIGJyaW5nIHRoZSBFbmQgdG8gaGltc2VsZiBvciBob3cgaGUgY2FuIGhpbXNlbGYgZ28gdG8KCQkJCQl0aGUgRW5kLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGhlIHdvcmtzIGJhY2sgaW4KCQkJCQkJdGhvdWdodCBmcm9tIGhpcyBpbnRlbmRlZCBFbmQgdG8gc29tZSBtZWFucyB0byBpdHMgYXR0YWlubWVudAoJCQkJCQl0aGF0IGlzIGFscmVhZHkgd2l0aGluIGhpcyBwb3dlci48L25vdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4yNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgYnkgbmF0dXJlIHRoZSBFbmQgaXMKCQkJCQlhbHdheXMgYSBnb29kIGFuZCBhIHRoaW5nIGFib3V0IHdoaWNoIG1lbiBkZWxpYmVyYXRlIHN0ZXAgYnkKCQkJCQlzdGVwPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPihmb3IgZXhhbXBsZSBhCgkJCQkJZG9jdG9yIG1heSBkZWxpYmVyYXRlIHdoZXRoZXIgaGUgc2hhbGwgZ2l2ZSBhIGRydWcsIGFuZCBhIGdlbmVyYWwKCQkJCQl3aGVyZSBoZSBzaGFsbCBwaXRjaCBoaXMgY2FtcCkgd2hlbiB0aGVpciBFbmQgaXMgdGhlIGdvb2QgdGhhdCBpcyB0aGUKCQkJCQlhYnNvbHV0ZSBiZXN0OyA8L3RyYW5zbGF0aW9uPg=="
translation['2.1227b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gYnV0IGluCgkJCQkJY29udHJhdmVudGlvbiBvZiBuYXR1cmUgYW5kIGJ5IHBlcnZlcnNpb24gbm90IHRoZSBnb29kIGJ1dCB0aGUKCQkJCQlhcHBhcmVudCBnb29kIGlzIHRoZSBFbmQuIFRoZSByZWFzb24gaXMgdGhhdCB0aGVyZSBhcmUgc29tZSB0aGluZ3MKCQkJCQl0aGF0IGNhbm5vdCBiZSBlbXBsb3llZCBmb3Igc29tZXRoaW5nIG90aGVyIHRoYW4gdGhlaXIgbmF0dXJhbAoJCQkJCW9iamVjdHMsIGZvciBpbnN0YW5jZSBzaWdodOKAlGl0IGlzIG5vdCBwb3NzaWJsZSB0byBzZWUgYQoJCQkJCXRoaW5nIHRoYXQgaXMgbm90IHZpc2libGUsIG9yIHRvIGhlYXIgYSB0aGluZyB0aGF0IGlzIG5vdCBhdWRpYmxlOyBidXQKCQkJCQlhIHNjaWVuY2UgZG9lcyBlbmFibGUgdXMgdG8gZG8gYSB0aGluZyB0aGF0IGlzIG5vdCB0aGUgb2JqZWN0IG9mIHRoZQoJCQkJCXNjaWVuY2UuIEZvciBoZWFsdGggYW5kIGRpc2Vhc2UgYXJlIG5vdCB0aGUgb2JqZWN0cyBvZiB0aGUgc2FtZQoJCQkJCXNjaWVuY2UgaW4gdGhlIHNhbWUgd2F5OiBoZWFsdGggaXMgaXRzIG9iamVjdCBpbiBhY2NvcmRhbmNlIHdpdGgKCQkJCQluYXR1cmUsIGFuZCBkaXNlYXNlIGluIGNvbnRyYXZlbnRpb24gb2YgbmF0dXJlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjI3IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBzaW1pbGFybHksIGJ5IG5hdHVyZQoJCQkJCWdvb2QgaXMgdGhlIG9iamVjdCBvZiB3aXNoLCBidXQgZXZpbCBpcyBhbHNvIGl0cyBvYmplY3QgaW4KCQkJCQljb250cmF2ZW50aW9uIG9mIG5hdHVyZTsgYnkgbmF0dXJlIG9uZSB3aXNoZXMgZ29vZCwgYWdhaW5zdCBuYXR1cmUgYW5kCgkJCQkJYnkgcGVydmVyc2lvbiBvbmUgZXZlbiB3aXNoZXMgZXZpbC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0CgkJCQkJbW9yZW92ZXIgd2l0aCBldmVyeXRoaW5nIGl0cyBjb3JydXB0aW9uIGFuZCBwZXJ2ZXJzaW9uIGFyZSBub3QgaW4gYW55CgkJCQkJY2hhbmNlIGRpcmVjdGlvbiwgYnV0IGxlYWRzIHRvIHRoZSBjb250cmFyeSBhbmQgaW50ZXJtZWRpYXRlIHN0YXRlcy4KCQkJCQlGb3IgaXQgaXMgbm90IHBvc3NpYmxlIHRvIGdvIG91dHNpZGUgdGhlc2UsIHNpbmNlIGV2ZW4gZXJyb3IgZG9lcyBub3QKCQkJCQlsZWFkIHRvIGFueSBjaGFuY2UgdGhpbmcsIGJ1dCwgaW4gdGhlIGNhc2Ugb2YgdGhpbmdzIHRoYXQgaGF2ZQoJCQkJCWNvbnRyYXJpZXMsIHRvIHRoZSBjb250cmFyaWVzLCBhbmQgdG8gdGhvc2UgY29udHJhcmllcyB0aGF0IGFyZQoJCQkJCWNvbnRyYXJ5IGFjY29yZGluZyB0byB0aGVpciBzY2llbmNlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIGRpdmlzaW9uIG9mIGNvbnRyYXJpZXMgaXMgdW51c3VhbDogZWxzZXdoZXJlCgkJCQkJCShlLmcuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE1ldC4gMTEuMTA2MWEuMTgiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE1ldC4gMTA2MWEgMTg8L2JpYmw+KSBBcmlzdG90bGUKCQkJCQkJbWVyZWx5IHN0YXRlcyB0aGF0IGNvbnRyYXJpZXMgYXJlIHRoZSBvYmplY3RzIG9mIHRoZSBzYW1lCgkJCQkJCXNjaWVuY2UuPC9ub3RlPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE1ldC4gMTEuMTA2MWEuMTgiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE1ldC4gMTA2MWEgMTg8L2JpYmw+KSBBcmlzdG90bGUKCQkJCQkJbWVyZWx5IHN0YXRlcyB0aGF0IGNvbnRyYXJpZXMgYXJlIHRoZSBvYmplY3RzIG9mIHRoZSBzYW1lCgkJCQkJCXNjaWVuY2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4yOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBJdAoJCQkJCXRoZXJlZm9yZSBuZWNlc3NhcmlseSBmb2xsb3dzIHRoYXQgYm90aCBlcnJvciBhbmQgcHVycG9zaXZlIGNob2ljZQoJCQkJCXRha2UgcGxhY2UgZnJvbSB0aGUgbWlkZGxlIHBvaW50IHRvIHRoZSBjb250cmFyaWVzICh0aGUgY29udHJhcmllcyBvZgoJCQkJCXRoZSBtaWRkbGUgYmVpbmcgdGhlIG1vcmUgYW5kIHRoZSBsZXNzKS7igJRBbmQgdGhlIGNhdXNlIGlzCgkJCQkJcGxlYXN1cmUgYW5kIHBhaW47IGZvciB0aGluZ3MgYXJlIHNvIGNvbnN0aXR1dGVkIHRoYXQgdGhlIHBsZWFzYW50CgkJCQkJYXBwZWFycyB0byB0aGUgc3Bpcml0IGdvb2QgYW5kIHRoZSBtb3JlIHBsZWFzYW50IGJldHRlciwgdGhlIHBhaW5mdWwKCQkJCQliYWQgYW5kIHRoZSBtb3JlIHBhaW5mdWwgd29yc2UuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjI3YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['2.1227b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1227b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz5TbyBmcm9tIHRoZXNlIHRoaW5ncyBhbHNvIGl0CgkJCQkJaXMgY2xlYXIgdGhhdCBnb29kbmVzcyBhbmQgYmFkbmVzcyBoYXZlIHRvIGRvIHdpdGggcGxlYXN1cmVzIGFuZAoJCQkJCXBhaW5zOyBmb3IgdGhleSBvY2N1ciBpbiBjb25uZWN0aW9uIHdpdGggdGhlIG9iamVjdHMgb2YgcHVycG9zaXZlCgkJCQkJY2hvaWNlLCBhbmQgdGhpcyBoYXMgdG8gZG8gd2l0aCBnb29kIGFuZCBiYWQgYW5kIHdoYXQgYXBwZWFycyB0byBiZQoJCQkJCWdvb2QgYW5kIGJhZCwgYW5kIHBsZWFzdXJlIGFuZCBwYWluIGFyZSBieSBuYXR1cmUgdGhpbmdzIG9mIHRoYXQKCQkJCQlraW5kLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMzAiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgdGhlcmVmb3JlIGZvbGxvd3MgdGhhdCBzaW5jZSBtb3JhbAoJCQkJCWdvb2RuZXNzIGlzIGl0c2VsZiBhIG1pZGRsZSBzdGF0ZSBhbmQgaXMgZW50aXJlbHkgY29uY2VybmVkIHdpdGgKCQkJCQlwbGVhc3VyZXMgYW5kIHBhaW5zLCBhbmQgYmFkbmVzcyBjb25zaXN0cyBpbiBleGNlc3MgYW5kIGRlZmVjdCBhbmQgaXMKCQkJCQljb25jZXJuZWQgd2l0aCB0aGUgc2FtZSB0aGluZ3MgYXMgZ29vZG5lc3MsIG1vcmFsIGdvb2RuZXNzIG9yIHZpcnR1ZQoJCQkJCWlzIGEgc3RhdGUgb2YgcHVycG9zaXZlbHkgY2hvb3NpbmcgdGhlIG1lYW4gaW4gcmVsYXRpb24gdG8gb3Vyc2VsdmVzCgkJCQkJaW4gYWxsIHRob3NlIHBsZWFzYW50IGFuZCBwYWluZnVsIHRoaW5ncyBpbiByZWdhcmQgdG8gd2hpY2ggYWNjb3JkaW5nCgkJCQkJYXMgYSBwZXJzb24gZmVlbHMgcGxlYXN1cmUgb3IgcGFpbiBoZSBpcyBkZXNjcmliZWQgYXMgaGF2aW5nIHNvbWUKCQkJCQlwYXJ0aWN1bGFyIG1vcmFsIHF1YWxpdHk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlCgkJCQkJCWNvbm5lY3Rpb24gb2YgcGxlYXN1cmUgYW5kIHBhaW4gd2l0aCB2aXJ0dWUgaXMgaGVyZSBjbGVhcmVyIHRoYW4KCQkJCQkJaW4gPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TmljLiBFdGguPC90aXRsZT4sIGFuZCBmb3JtcyBwYXJ0IG9mIHRoZSBkZWZpbml0aW9uCgkJCQkJCShTdG9ja3MpLjwvbm90ZT4oZm9yIGEgcGVyc29uIGlzIG5vdCBzYWlkIHRvIGhhdmUgYSBwYXJ0aWN1bGFyCgkJCQkJbW9yYWwgY2hhcmFjdGVyIG1lcmVseSBmb3IgYmVpbmcgZm9uZCBvZiBzd2VldHMgb3IKCQkJCQlzYXZvcmllcykuPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TmljLiBFdGguPC90aXRsZT4sIGFuZCBmb3JtcyBwYXJ0IG9mIHRoZSBkZWZpbml0aW9uCgkJCQkJCShTdG9ja3MpLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVzZSB0aGluZ3MgaGF2aW5nIGJlZW4KCQkJCQlzZXR0bGVkLCBsZXQgdXMgc2F5IHdoZXRoZXIgZ29vZG5lc3MgbWFrZXMgdGhlIHB1cnBvc2l2ZSBjaG9pY2UKCQkJCQljb3JyZWN0IGFuZCB0aGUgRW5kIHJpZ2h0IGluIHRoZSBzZW5zZSBvZiBtYWtpbmcgdGhlIGFnZW50IGNob29zZSBmb3IKCQkJCQl0aGUgc2FrZSBvZiB0aGUgcHJvcGVyIEVuZCwgb3Igd2hldGhlciAoYXMgc29tZSBob2xkKSBpdCBtYWtlcyB0aGUKCQkJCQlyYXRpb25hbCBwcmluY2lwbGUgcmlnaHQuIEJ1dCB3aGF0IGRvZXMgdGhpcyBpcwoJCQkJCXNlbGYtY29udHJvbOKAlGZvciB0aGF0IHNhdmVzIHRoZSByYXRpb25hbCBwcmluY2lwbGUgZnJvbQoJCQkJCWJlaW5nIGNvcnJ1cHRlZDsgYW5kIGdvb2RuZXNzIGFuZCBzZWxmLWNvbnRyb2wgYXJlIGRpZmZlcmVudC4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjExLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IHdlIG11c3Qgc3BlYWsKCQkJCQlhYm91dCB0aGlzIGxhdGVyLCBzaW5jZSBhbGwgd2hvIGRvIGhvbGQgdGhhdCBnb29kbmVzcyBtYWtlcyB0aGUKCQkJCQlyYXRpb25hbCBwcmluY2lwbGUgcmlnaHQgdGhpbmsgc28gb24gdGhlIGdyb3VuZCB0aGF0IHRoYXQgaXMgdGhlCgkJCQkJbmF0dXJlIG9mIHNlbGYtY29udHJvbCBhbmQgc2VsZi1jb250cm9sIGlzIGEgcHJhaXNld29ydGh5IHRoaW5nLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBIYXZpbmcgcmFpc2VkIHRoaXMKCQkJCQlwcmVsaW1pbmFyeSBxdWVzdGlvbiBsZXQgdXMgY29udGludWUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPkl0IGlzIHBvc3NpYmxlIHRvIGhhdmUgb25lJ3MgYWltIHJpZ2h0IGJ1dAoJCQkJCXRvIGJlIGVudGlyZWx5IHdyb25nIGluIG9uZSdzIG1lYW5zIHRvIHRoZSBlbmQgYWltZWQgYXQ7IGFuZCBpdCBpcwoJCQkJCXBvc3NpYmxlIGZvciB0aGUgYWltIHRvIGhhdmUgYmVlbiB3cm9uZ2x5IGNob3NlbiBidXQgdGhlIG1lYW5zCgkJCQkJY29uZHVjaW5nIHRvIGl0IHRvIGJlIHJpZ2h0OyBhbmQgZm9yIG5laXRoZXIgdG8gYmUgcmlnaHQuIDwvdHJhbnNsYXRpb24+"
translation['2.1228a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgZG9lcyBnb29kbmVzcyBkZWNpZGUgdGhlCgkJCQkJYWltPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yLCBhbHRlcmluZyB0aGUgdGV4dCwKCQkJCQkJJ21ha2VzIHRoZSBhaW0gcmlnaHQuJzwvbm90ZT4gb3IgdGhlIG1lYW5zIHRvIGl0PyBXZWxsLCBvdXIKCQkJCQlwb3NpdGlvbiBpcyB0aGF0IGl0IGRlY2lkZXMgdGhlIGFpbSwgYmVjYXVzZSB0aGlzIGlzIG5vdCBhIG1hdHRlciBvZgoJCQkJCWxvZ2ljYWwgaW5mZXJlbmNlIG9yIHJhdGlvbmFsIHByaW5jaXBsZSwgYnV0IGluIGZhY3QgdGhpcyBtdXN0IGJlCgkJCQkJYXNzdW1lZCBhcyBhIHN0YXJ0aW5nLXBvaW50LiBGb3IgYSBkb2N0b3IgZG9lcyBub3QgY29uc2lkZXIgd2hldGhlcgoJCQkJCWhpcyBwYXRpZW50IG91Z2h0IHRvIGJlIGhlYWx0aHkgb3Igbm90LCBidXQgd2hldGhlciBoZSBvdWdodCB0byB0YWtlCgkJCQkJd2Fsa2luZyBleGVyY2lzZSBvciBub3QsIGFuZCB0aGUgZ3ltbmFzdGljIHRyYWluZXIgZG9lcyBub3QgY29uc2lkZXIKCQkJCQl3aGV0aGVyIGhpcyBwdXBpbCBvdWdodCB0byBiZSBpbiBnb29kIGNvbmRpdGlvbiBvciBub3QsIGJ1dCB3aGV0aGVyIGhlCgkJCQkJb3VnaHQgdG8gZ28gaW4gZm9yIHdyZXN0bGluZyBvciBub3Q7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBhbmQgc2ltaWxhcmx5IG5vIG90aGVyIHNjaWVuY2UgZWl0aGVyCgkJCQkJZGVsaWJlcmF0ZXMgYWJvdXQgaXRzIEVuZC4gRm9yIGFzIGluIHRoZSB0aGVvcmV0aWMgc2NpZW5jZXMgdGhlCgkJCQkJYXNzdW1wdGlvbnMgYXJlIGZpcnN0IHByaW5jaXBsZXMsIHNvIGluIHRoZSBwcm9kdWN0aXZlIHNjaWVuY2VzIHRoZQoJCQkJCUVuZCBpcyBhIHN0YXJ0aW5nLXBvaW50IGFuZCBhc3N1bXB0aW9uOiBzaW5jZSBpdCBpcyByZXF1aXJlZCB0aGF0CgkJCQkJc28tYW5kLXNvIGlzIHRvIGJlIGluIGdvb2QgaGVhbHRoLCBpZiB0aGF0IGlzIHRvIGJlIHNlY3VyZWQgaXQgaXMKCQkJCQluZWNlc3NhcnkgZm9yIHN1Y2gtYW5kLXN1Y2ggYSB0aGluZyB0byBiZSBwcm92aWRlZOKAlGp1c3QgYXMKCQkJCQlpbiBtYXRoZW1hdGljcywgaWYgdGhlIGFuZ2xlcyBvZiBhIHRyaWFuZ2xlIGFyZSB0b2dldGhlciBlcXVhbCB0byB0d28KCQkJCQlyaWdodCBhbmdsZXMsIHN1Y2ggYW5kIHN1Y2ggYSBjb25zZXF1ZW5jZSBuZWNlc3NhcmlseSBmb2xsb3dzLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBUaGVyZWZvcmUgdGhlIEVuZAoJCQkJCWlzIHRoZSBzdGFydGluZy1wb2ludCBvZiB0aGUgcHJvY2VzcyBvZiB0aG91Z2h0LCBidXQgdGhlIGNvbmNsdXNpb24gb2YKCQkJCQl0aGUgcHJvY2VzcyBvZiB0aG91Z2h0IGlzIHRoZSBzdGFydGluZy1wb2ludCBvZiBhY3Rpb24uIElmLCB0aGVuLCBvZgoJCQkJCWFsbCByaWdodG5lc3MgZWl0aGVyIHJhdGlvbmFsIHByaW5jaXBsZSBvciBnb29kbmVzcyBpcyB0aGUgY2F1c2UsIGlmCgkJCQkJcmF0aW9uYWwgcHJpbmNpcGxlIGlzIG5vdCB0aGUgY2F1c2Ugb2YgdGhlIHJpZ2h0bmVzcyBvZiB0aGUgRW5kLCB0aGVuCgkJCQkJdGhlIEVuZCAodGhvdWdoIG5vdCB0aGUgbWVhbnMgdG8gdGhlIEVuZCkgd2lsbCBiZSByaWdodCBvd2luZyB0bwoJCQkJCWdvb2RuZXNzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjExLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IHRoZSBFbmQgaXMKCQkJCQl0aGUgb2JqZWN0IGZvciB3aGljaCBvbmUgYWN0czsgZm9yIGV2ZXJ5IHB1cnBvc2l2ZSBjaG9pY2UgaXMgYSBjaG9pY2UKCQkJCQlvZiBzb21ldGhpbmcgYW5kIGZvciBzb21lIG9iamVjdC4gVGhlIEVuZCBpcyB0aGVyZWZvcmUgdGhlIG9iamVjdCBmb3IKCQkJCQl3aGljaCB0aGUgdGhpbmcgY2hvc2VuIGlzIHRoZSBtZWFuLCBvZiB3aGljaCBFbmQgZ29vZG5lc3MgaXMgdGhlCgkJCQkJY2F1c2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VmlydHVlIGJ5IGNob29zaW5nIHRoZQoJCQkJCQlyaWdodCBtZWFucyB0byBhY2hpZXZlIHRoZSBFbmQgY2F1c2VzIHRoZSBFbmQgdG8gYmUKCQkJCQkJcmVhbGl6ZWQuPC9ub3RlPiBieSBpdHMgYWN0IG9mIGNob2ljZeKAlHRob3VnaCB0aGUgY2hvaWNlIGlzCgkJCQkJbm90IG9mIHRoZSBFbmQgYnV0IG9mIHRoZSBtZWFucyBhZG9wdGVkIGZvciB0aGUgc2FrZSBvZiB0aGUgRW5kLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBUaGVyZWZvcmUgdGhvdWdoCgkJCQkJaXQgYmVsb25ncyB0byBhbm90aGVyIGZhY3VsdHkgdG8gaGl0IG9uIHRoZSB0aGluZ3MgdGhhdCBtdXN0IGJlIGRvbmUKCQkJCQlmb3IgdGhlIHNha2Ugb2YgdGhlIEVuZCwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyMjhhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['2.1228a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmdvb2RuZXNzIGlzIHRoZQoJCQkJCWNhdXNlIG9mIHRoZSBFbmQgYWltZWQgYXQgYnkgY2hvaWNlIGJlaW5nIHJpZ2h0LiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1228a.23'] = ""
translation['3.1228b.23'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGhhcyB0aGVuIGJlZW4gc3RhdGVkIGluCgkJCQkJZ2VuZXJhbCB0ZXJtcyB0aGF0IHRoZXJlIGFyZSBtaWRkbGUgc3RhdGVzIGluIHRoZSB2aXJ0dWVzIGFuZCB0aGF0CgkJCQkJdGhlc2UgYXJlIHB1cnBvc2l2ZSwgYW5kIGFsc28gdGhhdCB0aGUgb3Bwb3NpdGUgZGlzcG9zaXRpb25zIGFyZSB2aWNlcwoJCQkJCWFuZCB3aGF0IHRoZXNlIGFyZS4gQnV0IGxldCB1cyB0YWtlIHRoZW0gc2VwYXJhdGVseSBhbmQgZGlzY3VzcyB0aGVtCgkJCQkJc2VyaWF0aW0uIEFuZCBmaXJzdCBsZXQgdXMgc3BlYWsgYWJvdXQgQ291cmFnZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgYWxtb3N0IGV2ZXJ5Ym9keSBob2xkcyB0aGF0IHRoZSBicmF2ZSBtYW4gaXMgY29uY2VybmVkIHdpdGgKCQkJCQlmZWFycywgYW5kIHRoYXQgY291cmFnZSBpcyBvbmUgb2YgdGhlIHZpcnR1ZXMuIEFuZCBpbiBvdXIKCQkJCQlzY2hlZHVsZTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiAgICAgICBFdWQuIEV0aC4gMi4xMjIwYi4zOSIgdmFsaWQ9InllcyI+QXJpc3RvdC4KCQkJCQkJRXVkLiBFdGguIDEyMjBiIDM5PC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguICAgICAgICAyLjEyMjFhLjE3IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4KCQkJCQkJCTEyMjFhIDE3LTE5PC9iaWJsPi48L25vdGU+IHByZXZpb3VzbHkgd2UgZGlzdGluZ3Vpc2hlZAoJCQkJCWRhcmluZyBhbmQgZmVhciBhcyBjb250cmFyaWVzLCBmb3IgdGhleSBhcmUgaW5kZWVkIGluIGEgbWFubmVyIG9wcG9zZWQKCQkJCQl0byBvbmUgYW5vdGhlci4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gICAgICAgRXVkLiBFdGguIDIuMTIyMGIuMzkiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuCgkJCQkJCUV1ZC4gRXRoLiAxMjIwYiAzOTwvYmlibD4sIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAgICAgICAgMi4xMjIxYS4xNyIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguCgkJCQkJCQkxMjIxYSAxNy0xOTwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gSXQgaXMKCQkJCQljbGVhciwgdGhlcmVmb3JlLCB0aGF0IHRoZSBwZXJzb25zIG5hbWVkIGFmdGVyIHRoZXNlIHN0YXRlcyBvZgoJCQkJCWNoYXJhY3RlciB3aWxsIGFsc28gYmUgc2ltaWxhcmx5IG9wcG9zZWQgdG8gZWFjaCBvdGhlcuKAlHRoYXQKCQkJCQlpcywgdGhlIGNvd2FyZCAoZm9yIHRoYXQgaXMgdGhlIHRlcm0gdGhhdCBkZW5vdGVzIGJlaW5nIG1vcmUgYWZyYWlkCgkJCQkJdGhhbiBpcyBwcm9wZXIgYW5kIGxlc3MgZGFyaW5nIHRoYW4gaXMgcHJvcGVyKSBhbmQgdGhlIGRhcmluZyBtYW4gKGZvcgoJCQkJCXRoYXQgZGVub3RlcyB0aGUgY2hhcmFjdGVyaXN0aWMgb2YgYmVpbmcgbGVzcyBhZnJhaWQgdGhhbiBpcyBwcm9wZXIKCQkJCQlhbmQgbW9yZSBkYXJpbmcgdGhhbiBpcyBwcm9wZXLigJRhbmQgZnJvbSB0aGlzIHRoZSBuYW1lIGlzCgkJCQkJZGVyaXZlZCwgYXMgdGhlIHdvcmQgJ2RhcmluZycgaXMgY29nbmF0ZSB3aXRoIHRoZSB3b3JkICdkYXJlJykuCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gU28gdGhhdCBzaW5jZQoJCQkJCWNvdXJhZ2UgaXMgdGhlIGJlc3Qgc3RhdGUgb2YgY2hhcmFjdGVyIGluIHJlbGF0aW9uIHRvIGZlZWxpbmdzIG9mIGZlYXIKCQkJCQlhbmQgZGFyaW5nLCBhbmQgdGhlIHByb3BlciBjaGFyYWN0ZXIgaXMgbmVpdGhlciB0aGF0IG9mIHRoZSBkYXJpbmcKCQkJCQkoZm9yIHRoZXkgZmFsbCBzaG9ydCBpbiBvbmUgcmVzcGVjdCBhbmQgZXhjZWVkIGluIGFub3RoZXIpIG5vciB0aGF0IG9mCgkJCQkJdGhlIGNvd2FyZGx5IChmb3IgdGhleSBhbHNvIGRvIHRoZSBzYW1lLCBvbmx5IG5vdCBhcyByZWdhcmRzIHRoZSBzYW1lCgkJCQkJdGhpbmdzIGJ1dCBpbnZlcnNlbHnigJQgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyMjhiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1228b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPnRoZXkgZmFsbCBzaG9ydCBpbgoJCQkJCWRhcmluZyBhbmQgZXhjZWVkIGluIGJlaW5nIGFmcmFpZCksIGl0IGlzIGNsZWFyIHRoYXQgdGhlIG1pZGRsZSBzdGF0ZQoJCQkJCW9mIGNoYXJhY3RlciBiZXR3ZWVuIGRhcmluZyBhbmQgY293YXJkaWNlIGlzIGNvdXJhZ2UsIGZvciB0aGlzIGlzIHRoZQoJCQkJCWJlc3Qgc3RhdGUuPC90cmFuc2xhdGlvbj4="
translation['3.1228b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS41IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBpdCBzZWVtcyB0aGF0IHRoZSBicmF2ZSBtYW4gaXMgaW4KCQkJCQlnZW5lcmFsIGZlYXJsZXNzLCBhbmQgdGhlIGNvd2FyZCBsaWFibGUgdG8gZmVhcjsgYW5kIHRoYXQgdGhlIGxhdHRlcgoJCQkJCWZlYXJzIHRoaW5ncyB3aGVuIHRoZXkgYXJlIGZldyBpbiBudW1iZXIgYW5kIHNtYWxsIGluIHNpemUgYXMgd2VsbCBhcwoJCQkJCXdoZW4gbnVtZXJvdXMgYW5kIGdyZWF0LCBhbmQgZmVhcnMgdmlvbGVudGx5LCBhbmQgZ2V0cyBmcmlnaHRlbmVkCgkJCQkJcXVpY2tseSwgd2hlcmVhcyB0aGUgZm9ybWVyIG9uIHRoZSBjb250cmFyeSBlaXRoZXIgbmV2ZXIgZmVlbHMgZmVhciBhdAoJCQkJCWFsbCBvciBvbmx5IHNsaWdodGx5IGFuZCByZWx1Y3RhbnRseSBhbmQgc2VsZG9tLCBhbmQgaW4gcmVnYXJkIHRvCgkJCQkJdGhpbmdzIG9mIG1hZ25pdHVkZTsgYW5kIGhlIGVuZHVyZXMgdGhpbmdzIHRoYXQgYXJlIGV4dHJlbWVseQoJCQkJCWZvcm1pZGFibGUsIHdoZXJlYXMgdGhlIG90aGVyIGRvZXMgbm90IGVuZHVyZSBldmVuIHRob3NlIHRoYXQgYXJlCgkJCQkJc2xpZ2h0bHkgZm9ybWlkYWJsZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gV2hhdAoJCQkJCXNvcnQgb2YgdGhpbmdzLCB0aGVuLCBkb2VzIHRoZSBicmF2ZSBtYW4gZW5kdXJlPyBGaXJzdCwgaXMgaXQgdGhlCgkJCQkJdGhpbmdzIHRoYXQgYXJlIGZvcm1pZGFibGUgdG8gaGltc2VsZiBvciBmb3JtaWRhYmxlIHRvIHNvbWVib2R5IGVsc2U/CgkJCQkJSWYgdGhlIHRoaW5ncyBmb3JtaWRhYmxlIHRvIHNvbWVib2R5IGVsc2UsIG9uZSB3b3VsZCBub3QgaW5kZWVkIGNhbGwKCQkJCQlpdCBhbnl0aGluZyByZW1hcmthYmxlOyBidXQgaWYgaXQgaXMgdGhvc2UgdGhhdCBhcmUgZm9ybWlkYWJsZSB0bwoJCQkJCWhpbXNlbGYsIHdoYXQgaXMgZm9ybWlkYWJsZSB0byBoaW0gbXVzdCBiZSB0aGluZ3Mgb2YgZ3JlYXQgbWFnbml0dWRlCgkJCQkJYW5kIG51bWJlci4gQnV0IGZvcm1pZGFibGUgdGhpbmdzIGFyZSBwcm9kdWN0aXZlIG9mIGZlYXI8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IsIGVtZW5kaW5nIHRoZSB0ZXh0LCAnb2YKCQkJCQkJY29ycmVzcG9uZGluZyBmZWFyLic8L25vdGU+IGluIHRoZSBwYXJ0aWN1bGFyIHBlcnNvbiB0byB3aG9tCgkJCQkJdGhleSBhcmUgZm9ybWlkYWJsZeKAlHRoYXQgaXMsIGlmIHRoZXkgYXJlIHZlcnkgZm9ybWlkYWJsZSwKCQkJCQl0aGUgZmVhciB0aGV5IHByb2R1Y2Ugd2lsbCBiZSB2aW9sZW50LCBpZiBzbGlnaHRseSBmb3JtaWRhYmxlLCBpdCB3aWxsCgkJCQkJYmUgd2Vhazsgc28gaXQgZm9sbG93cyB0aGF0IHRoZSBicmF2ZSBtYW4ncyBmZWFycyBhcmUgZ3JlYXQgYW5kIG1hbnkuCgkJCQkJWWV0IG9uIHRoZSBjb250cmFyeSBpdCBhcHBlYXJlZCB0aGF0IGNvdXJhZ2UgbWFrZXMgYSBtYW4gZmVhcmxlc3MsIGFuZAoJCQkJCXRoYXQgZmVhcmxlc3NuZXNzIGNvbnNpc3RzIGluIGZlYXJpbmcgbm90aGluZywgb3IgZWxzZSBmZXcgdGhpbmdzLCBhbmQKCQkJCQl0aG9zZSBzbGlnaHRseSBhbmQgcmVsdWN0YW50bHkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS43IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCBwZXJoYXBzICdmb3JtaWRhYmxlJyBpcyBhbiBhbWJpZ3VvdXMgdGVybSwgbGlrZQoJCQkJCSdwbGVhc2FudCcgYW5kICdnb29kLicgU29tZSB0aGluZ3MgYXJlIHBsZWFzYW50IGFuZCBnb29kCgkJCQkJYWJzb2x1dGVseSw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+d2hlcmVhcwoJCQkJCW90aGVycyBhcmUgc28gdG8gYSBwYXJ0aWN1bGFyIHBlcnNvbiBidXQgYWJzb2x1dGVseSBhcmUgbm90IHNvLCBidXQgb24KCQkJCQl0aGUgY29udHJhcnkgYXJlIGJhZCBhbmQgdW5wbGVhc2FudOKAlGFsbCB0aGUgdGhpbmdzIHRoYXQgYXJlCgkJCQkJYmVuZWZpY2lhbCBmb3IgdGhlIGJhc2UsIGFuZCBhbGwgdGhvc2UgdGhhdCBhcmUgcGxlYXNhbnQgdG8gY2hpbGRyZW4KCQkJCQk8aGkgY2xhc3M9InRyYW5zbGF0aW9uIiByZW5kPSJJdGFsaWMiPnF1YTwvaGk+IGNoaWxkcmVuLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1229a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS44IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBzaW1pbGFybHkgc29tZSB0aGluZ3MgYXJlIGZvcm1pZGFibGUKCQkJCQlhYnNvbHV0ZWx5IGFuZCBvdGhlcnMgdG8gYSBwYXJ0aWN1bGFyIHBlcnNvbjogdGh1cyB0aGUgdGhpbmdzIHRoYXQgdGhlCgkJCQkJY293YXJkIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Ikl0YWxpYyI+cXVhPC9oaT4gY293YXJkIGZlYXJzIGFyZSBzb21lIG9mIHRoZW0gbm90CgkJCQkJZm9ybWlkYWJsZSB0byBhbnlib2R5IGFuZCBvdGhlcnMgb25seSBzbGlnaHRseSBmb3JtaWRhYmxlLCBidXQgdGhpbmdzCgkJCQkJdGhhdCBhcmUgZm9ybWlkYWJsZSB0byBtb3N0IG1lbiwgYW5kIGFsbCB0aGF0IGFyZSBmb3JtaWRhYmxlIHRvIGh1bWFuCgkJCQkJbmF0dXJlLCB3ZSBwcm9ub3VuY2UgdG8gYmUgZm9ybWlkYWJsZSBhYnNvbHV0ZWx5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgdGhlIGJyYXZlIG1hbiBpcyBmZWFybGVzcwoJCQkJCWluIHJlZ2FyZCB0byB0aGVtLCBhbmQgZW5kdXJlcyBmb3JtaWRhYmxlIHRoaW5ncyBvZiB0aGlzIHNvcnQsIHdoaWNoCgkJCQkJYXJlIGZvcm1pZGFibGUgdG8gaGltIGluIG9uZSB3YXkgYnV0IGluIGFub3RoZXIgd2F5IGFyZQoJCQkJCW5vdOKAlHRoZXkgYXJlIGZvcm1pZGFibGUgdG8gaGltIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Ikl0YWxpYyI+cXVhPC9oaT4KCQkJCQlodW1hbiBiZWluZywgYnV0IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Ikl0YWxpYyI+cXVhPC9oaT4gYnJhdmUgbm90IGZvcm1pZGFibGUKCQkJCQlleGNlcHQgc2xpZ2h0bHksIG9yIG5vdCBhdCBhbGwuIFlldCBzdWNoIHRoaW5ncyByZWFsbHkgYXJlIGZvcm1pZGFibGUsCgkJCQkJZm9yIHRoZXkgYXJlIGZvcm1pZGFibGUgdG8gbW9zdCBtZW4uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBPd2luZyB0byB0aGlzIHRoZSBicmF2ZSBtYW4ncyBzdGF0ZSBvZgoJCQkJCWNoYXJhY3RlciBpcyBwcmFpc2VkLCBiZWNhdXNlIGl0IHJlc2VtYmxlcyB0aGF0IG9mIHRoZSBzdHJvbmcgYW5kIHRoZQoJCQkJCWhlYWx0aHkuIFRoZXNlIGhhdmUgdGhvc2UgY2hhcmFjdGVycyBub3QgYmVjYXVzZSBubyBsYWJvciBpbiB0aGUgb25lCgkJCQkJY2FzZSBvciBleHRyZW1lIG9mIHRlbXBlcmF0dXJlIGluIHRoZSBvdGhlciBjYW4gY3J1c2ggdGhlbSwgYnV0CgkJCQkJYmVjYXVzZSB0aGV5IGFyZSBub3QgYWZmZWN0ZWQgYXQgYWxsLCBvciBvbmx5IGFmZmVjdGVkIHNsaWdodGx5LCBieQoJCQkJCXRoZSB0aGluZ3MgdGhhdCBhZmZlY3QgdGhlIG1hbnkgb3IgdGhlIG1ham9yaXR5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGhlcmVmb3JlIHdoZXJlYXMgdGhlIHNpY2tseQoJCQkJCWFuZCB3ZWFrIGFuZCBjb3dhcmRseSBhcmUgYWZmZWN0ZWQgYWxzbyBieSB0aGUgYWZmbGljdGlvbnMgY29tbW9ubHkKCQkJCQlmZWx0LCBvbmx5IG1vcmUgcXVpY2tseSBhbmQgdG8gYSBncmVhdGVyIGV4dGVudCB0aGFuIHRoZSBtYXNzIG9mIG1lbiwKCQkJCQl0aGUgaGVhbHRoeSwgc3Ryb25nIGFuZCBicmF2ZSwgYWx0aG91Z2ggYWZmZWN0ZWQgYnkgdGhlIHZlcnkgZ3JlYXQKCQkJCQlhZmZsaWN0aW9ucywgYXJlIGFmZmVjdGVkIGJ5IHRoZW0gbW9yZSBzbG93bHkgYW5kIGxlc3MgdGhhbiB0aGUgbWFzcwoJCQkJCW9mIG1lbiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHdvcmRzICd0aGUgaGVhbHRoeSwKCQkJCQkJc3Ryb25nIGFuZCBicmF2ZSAuIC4gLiBtYXNzIG9mIG1lbicgYXJlIGEgY29uamVjdHVyYWwgYWRkaXRpb24KCQkJCQkJdG8gdGhlIE1zLiB0ZXh0Ljwvbm90ZT4gYW5kIG1vcmVvdmVyIHRoZXkgYXJlIGVudGlyZWx5CgkJCQkJdW5hZmZlY3RlZCBvciBvbmx5IHNsaWdodGx5IGFmZmVjdGVkIGJ5IHRoaW5ncyB0aGF0IGFmZmVjdCB0aGUKCQkJCQltYXNzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgdGhlIHF1ZXN0aW9uIGlzIHJhaXNlZCB3aGV0aGVyIHRvIHRoZQoJCQkJCWJyYXZlIG1hbiBub3RoaW5nIGlzIGZvcm1pZGFibGUsIGFuZCB3aGV0aGVyIGhlIHdvdWxkIGJlIGluc2Vuc2libGUgdG8KCQkJCQlmZWFyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIyOWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['3.1229a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPk9yIGlzIGl0IG5vdCBwb3NzaWJsZSB0aGF0IGhlIG1heSBmZWVsIGZlYXIKCQkJCQlpbiB0aGUgd2F5IGRlc2NyaWJlZD8gRm9yIGNvdXJhZ2UgaXMgZm9sbG93aW5nIHJlYXNvbiwgYW5kIHJlYXNvbiBiaWRzCgkJCQkJdXMgY2hvb3NlIHdoYXQgaXMgZmluZS4gSGVuY2UgaGUgd2hvIGVuZHVyZXMgZm9ybWlkYWJsZSB0aGluZ3Mgbm90IG9uCgkJCQkJYWNjb3VudCBvZiByZWFzb24gaXMgZWl0aGVyIG91dCBvZiBoaXMgbWluZCBvciBkYXJpbmcsIDwvdHJhbnNsYXRpb24+"
translation['3.1229a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBidXQgb25seSBoZSB3aG8gZG9lcyBzbyBmcm9tCgkJCQkJbW90aXZlcyBvZiBob25vciBpcyBmZWFybGVzcyBhbmQgYnJhdmUuIFRoZSBjb3dhcmQsIHRoZXJlZm9yZSwgZmVhcnMKCQkJCQlldmVuIHRoaW5ncyB0aGF0IGhlIG91Z2h0IG5vdCB0byBmZWFyLCBhbmQgdGhlIGRhcmluZyBtYW4gaXMgYm9sZCBldmVuCgkJCQkJYWJvdXQgdGhpbmdzIGFib3V0IHdoaWNoIGhlIG91Z2h0IG5vdCB0byBiZSBib2xkLCBidXQgdGhlIGJyYXZlIG1hbgoJCQkJCWFsb25lIGRvZXMgYm90aCBhcyBoZSBvdWdodCwgYW5kIGlzIGludGVybWVkaWF0ZSBpbiB0aGlzIHJlc3BlY3QsIGZvcgoJCQkJCWhlIGZlZWxzIGJvdGggY29uZmlkZW5jZSBhbmQgZmVhciBhYm91dCB3aGF0IGV2ZXIgdGhpbmdzIHJlYXNvbiBiaWRzOwoJCQkJCWJ1dCByZWFzb24gZG9lcyBub3QgYmlkIGhpbSBlbmR1cmUgdGhpbmdzIHRoYXQgYXJlIGV4dHJlbWVseSBwYWluZnVsCgkJCQkJYW5kIGRlc3RydWN0aXZlLCB1bmxlc3MgdGhleSBhcmUgZmluZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjE0IiB1bml0PSJMb2ViIGNoYXAiIC8+IFRoZSBkYXJpbmcgbWFuLCB0aGVyZWZvcmUsIGZhY2VzIHN1Y2ggdGhpbmdzCgkJCQkJd2l0aCBjb25maWRlbmNlIGV2ZW4gaWYgcmVhc29uIGRvZXMgbm90IGJpZCBoaW0gZmFjZSB0aGVtLCBhbmQgdGhlCgkJCQkJY293YXJkIGRvZXMgbm90IGZhY2UgdGhlbSBldmVuIGlmIGl0IGRvZXMsIGJ1dCBvbmx5IHRoZSBicmF2ZSBtYW4KCQkJCQlmYWNlcyB0aGVtIGlmIHJlYXNvbiBiaWRzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZSBhcmUgZml2ZSBraW5kcyBvZiBjb3VyYWdlCgkJCQkJc28gY2FsbGVkIGJ5IGFuYWxvZ3ksIGJlY2F1c2UgYnJhdmUgbWVuIG9mIHRoZXNlIGtpbmRzIGVuZHVyZSB0aGUgc2FtZQoJCQkJCXRoaW5ncyBhcyB0aGUgcmVhbGx5IGNvdXJhZ2VvdXMgYnV0IG5vdCBmb3IgdGhlIHNhbWUgcmVhc29ucy4gT25lIGlzCgkJCQkJY2l2aWMgY291cmFnZTsgdGhpcyBpcyBjb3VyYWdlIGR1ZSB0byBhIHNlbnNlIG9mIHNoYW1lLiBTZWNvbmQgaXMKCQkJCQltaWxpdGFyeSBjb3VyYWdlOyB0aGlzIGlzIGR1ZSB0byBleHBlcmllbmNlIGFuZCB0byBrbm93bGVkZ2UsIG5vdCBvZgoJCQkJCXdoYXQgaXMgZm9ybWlkYWJsZSwgYXMgU29jcmF0ZXMgc2FpZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGxhdC4gUHJvdC4gMzYwZCIgdmFsaWQ9InllcyI+UGxhdC4gUHJvdC4gMzYwZDwvYmlibD4uPC9ub3RlPiBidXQKCQkJCQlvZiB3YXlzIG9mIGVuY291bnRlcmluZyB3aGF0IGlzIGZvcm1pZGFibGUuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIFByb3QuIDM2MGQiIHZhbGlkPSJ5ZXMiPlBsYXQuIFByb3QuIDM2MGQ8L2JpYmw+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBUaGlyZCBpcyB0aGUgY291cmFnZSBkdWUgdG8KCQkJCQlpbmV4cGVyaWVuY2UgYW5kIGlnbm9yYW5jZSwgdGhhdCBtYWtlcyBjaGlsZHJlbiBhbmQgbWFkbWVuIGZhY2UgdGhpbmdzCgkJCQkJcnVzaGluZyBvbiB0aGVtLCBvciBncmFzcCBzbmFrZXMuIEFub3RoZXIgaXMgdGhlIGNvdXJhZ2UgY2F1c2VkIGJ5CgkJCQkJaG9wZSwgd2hpY2ggb2Z0ZW4gbWFrZXMgdGhvc2Ugd2hvIGhhdmUgaGFkIGEgc3Ryb2tlIG9mIGx1Y2sgZW5kdXJlCgkJCQkJZGFuZ2Vycyw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIHRob3NlIHdobwoJCQkJCWFyZSBpbnRveGljYXRlZOKAlGZvciB3aW5lIG1ha2VzIG1lbiBzYW5ndWluZS4gPC90cmFuc2xhdGlvbj4="
translation['3.1229b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xNyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbm90aGVyIGlzIGR1ZSB0byBzb21lCgkJCQkJaXJyYXRpb25hbCBlbW90aW9uLCBmb3IgZXhhbXBsZSBsb3ZlIG9yIHBhc3Npb24uIEZvciBpZiBhIG1hbiBpcyBpbgoJCQkJCWxvdmUgaGUgaXMgbW9yZSBkYXJpbmcgdGhhbiBjb3dhcmRseSwgYW5kIGVuZHVyZXMgbWFueSBkYW5nZXJzLCBsaWtlCgkJCQkJdGhlIG1hbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Vbmtub3duLjwvbm90ZT4gd2hvCgkJCQkJbXVyZGVyZWQgdGhlIHR5cmFudCBhdCBNZXRhcG9udGl1bSBhbmQgdGhlIHBlcnNvbiBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMjA1NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEyMDU2Ij5DcmV0ZTwvcGxhY2VOYW1lPiBpbiB0aGUgc3Rvcnk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VW5rbm93bjwvbm90ZT47IGFuZCBzaW1pbGFybHkgaWYgYQoJCQkJCW1hbiBpcyB1bmRlciB0aGUgaW5mbHVlbmNlIG9mIGFuZ2VyIGFuZCBwYXNzaW9uLCBmb3IgcGFzc2lvbiBpcyBhCgkJCQkJdGhpbmcgdGhhdCBtYWtlcyBoaW0gYmVzaWRlIGhpbXNlbGYuIEhlbmNlIHdpbGQgYm9hcnMgYXJlIHRob3VnaHQgdG8KCQkJCQliZSBicmF2ZSwgdGhvdWdoIHRoZXkgYXJlIG5vdCByZWFsbHksIGZvciB0aGV5IGFyZSBzbyB3aGVuIHRoZXkgYXJlCgkJCQkJYmVzaWRlIHRoZW1zZWx2ZXMsIGJ1dCBvdGhlcndpc2UgdGhleSBhcmUgdmFyaWFibGUsIGxpa2UgZGFyaW5nIG1lbi4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMTgiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IG5ldmVydGhlbGVzcwoJCQkJCXRoZSBjb3VyYWdlIG9mIHBhc3Npb24gaXMgaW4gdGhlIGhpZ2hlc3QgZGVncmVlIG5hdHVyYWw7IHBhc3Npb24gaXMgYQoJCQkJCXRoaW5nIHRoYXQgZG9lcyBub3Qga25vdyBkZWZlYXQsIG93aW5nIHRvIHdoaWNoIHRoZSB5b3VuZyBhcmUgdGhlIGJlc3QKCQkJCQlmaWdodGVycy4gQ2l2aWMgY291cmFnZSBpcyBkdWUgdG8gbGF3LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMTkiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IG5vbmUgb2YgdGhlc2UgaXMgdHJ1bHkgY291cmFnZSwgdGhvdWdoCgkJCQkJdGhleSBhcmUgYWxsIHVzZWZ1bCBmb3IgZW5jb3VyYWdlbWVudCBpbiBkYW5nZXJzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4yMCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5VcCB0byB0aGlzIHBvaW50IHdlIGhhdmUgc3Bva2VuIGFib3V0IHRoaW5ncyBmb3JtaWRhYmxlIGluIGdlbmVyYWwKCQkJCQl0ZXJtcywgYnV0IGl0IHdpbGwgYmUgYmV0dGVyIHRvIGRlZmluZSB0aGVtIG1vcmUgcHJlY2lzZWx5LiBBcyBhCgkJCQkJZ2VuZXJhbCB0ZXJtIHRoZSBmb3JtaWRhYmxlIGRlbm90ZXMgd2hhdCBjYXVzZXMgZmVhciwgYW5kIHRoYXQgaXMgb2YgYQoJCQkJCXByb3BlcnR5IG9mIHRoaW5ncyB0aGF0IGFwcGVhciBjYXBhYmxlIG9mIGNhdXNpbmcgcGFpbiBvZiBhCgkJCQkJZGVzdHJ1Y3RpdmUga2luZDogZm9yIHBlcnNvbnMgZXhwZWN0aW5nIHNvbWUgb3RoZXIgcGFpbiBtaWdodCBwZXJoYXBzCgkJCQkJZXhwZXJpZW5jZSBhIGRpZmZlcmVudCBzb3J0IG9mIHBhaW4gYW5kIGEgZGlmZmVyZW50IGZlZWxpbmcsIGJ1dCB3aWxsCgkJCQkJbm90IGhhdmUgZmVhcuKAlGZvciBleGFtcGxlIGlmIGEgbWFuIGZvcmVzYXcgdGhhdCBoZSB3YXMgZ29pbmcKCQkJCQl0byBmZWVsIHRoZSBwYWluIGZlbHQgYnkgdGhlIGplYWxvdXMsIG9yIHRoZSBzb3J0IG9mIHBhaW4gZmVsdCBieSB0aGUKCQkJCQllbnZpb3VzIG9yIGJ5IHRob3NlIHdobyBhcmUgYXNoYW1lZC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjIxIiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCBmZWFyIG9ubHkgb2NjdXJzIGluIHRoZSBjYXNlIG9mIHBhaW5zIHRoYXQKCQkJCQlzZWVtIGxpa2VseSB0byBiZSBvZiB0aGUga2luZCB3aG9zZSBuYXR1cmUgaXQgaXMgdG8gZGVzdHJveSBsaWZlLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjI5YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1229b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkhlbmNlIHNvbWUgcGVvcGxlIHdobyBhcmUgZXZlbiB2ZXJ5IHNvZnQKCQkJCQlhYm91dCBjZXJ0YWluIHRoaW5ncyBhcmUgYnJhdmUsIGFuZCBzb21lIHdobyBhcmUgaGFyZCBhbmQgZW5kdXJpbmcgYXJlCgkJCQkJYWxzbyBjb3dhcmRseS4gPC90cmFuc2xhdGlvbj4="
translation['3.1229b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4yMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBNb3Jlb3ZlcgoJCQkJCWl0IGlzIHRob3VnaHQgdG8gYmUgYWxtb3N0IGEgc3BlY2lhbCBwcm9wZXJ0eSBvZiBjb3VyYWdlIHRvIGJlIG9mIGEKCQkJCQljZXJ0YWluIGRpc3Bvc2l0aW9uIGluIHJlZ2FyZCB0byBkZWF0aCBhbmQgdGhlIHBhaW4gb2YgZGVhdGg7IGZvciBpZiBhCgkJCQkJbWFuIHdlcmUgc3VjaCBhcyB0byBiZSBjYXBhYmxlIG9mIHJhdGlvbmFsIGVuZHVyYW5jZSBpbiByZXNwZWN0IG9mCgkJCQkJaGVhdCBhbmQgY29sZCBhbmQgcGFpbnMgb2YgdGhhdCBzb3J0IHRoYXQgYXJlIG5vdCBkYW5nZXJvdXMsIGJ1dCBhdAoJCQkJCXRoZSBzYW1lIHRpbWUgc29mdCBhbmQgZXhjZXNzaXZlbHkgdGltaWQgYWJvdXQgZGVhdGgsIG5vdCBiZWNhdXNlIG9mCgkJCQkJYW55IG90aGVyIGZlZWxpbmcgYnV0IGp1c3QgYmVjYXVzZSBpdCBicmluZ3MgZGVzdHJ1Y3Rpb24sIHdoaWxlCgkJCQkJYW5vdGhlciBtYW4gd2FzIHNvZnQgaW4gcmVnYXJkIHRvIHRob3NlIHBhaW5zIGJ1dCBpbXBhc3NpdmUgYXMgcmVnYXJkcwoJCQkJCWRlYXRoLCB0aGUgZm9ybWVyIHdvdWxkIGJlIHRob3VnaHQgYSBjb3dhcmQgYW5kIHRoZSBsYXR0ZXIgYnJhdmUuCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjIzIiB1bml0PSJMb2ViIGNoYXAiIC8+IEZvciB3ZSBzcGVhayBvZgoJCQkJCWRhbmdlciBvbmx5IGluIHRoZSBjYXNlIG9mIHN1Y2ggZm9ybWlkYWJsZSB0aGluZ3MgYXMgYnJpbmcgbmVhciB0byB1cwoJCQkJCXdoYXQgY2F1c2VzIGRlc3RydWN0aW9uIG9mIHRoYXQgc29ydCwgYW5kIHdoZW4gdGhpcyBhcHBlYXJzIG5lYXIgaXQKCQkJCQlhcHBlYXJzIHRvIGJlIGRhbmdlci48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIGZvcm1pZGFibGUKCQkJCQl0aGluZ3MsIHRoZXJlZm9yZSwgaW4gcmVsYXRpb24gdG8gd2hpY2ggd2Ugc3BlYWsgb2YgYSBtYW4gYXMgYnJhdmUKCQkJCQlhcmUsIHdlIGhhdmUgc2FpZCwgdGhvc2UgdGhhdCBhcHBlYXIgbGlrZWx5IHRvIGNhdXNlIHBhaW4gb2YgdGhlCgkJCQkJZGVzdHJ1Y3RpdmUga2luZOKAlHByb3ZpZGVkIHRoYXQgdGhlc2UgYXBwZWFyIGNsb3NlIGF0IGhhbmQKCQkJCQlhbmQgbm90IGZhciBvZmYsIGFuZCBhcmUgb3IgYXBwZWFyIHRvIGJlIG9mIGEgbWFnbml0dWRlIHByb3BvcnRpb25hdGUKCQkJCQl0byBhIGh1bWFuIGJlaW5nOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gZm9yCgkJCQkJc29tZSB0aGluZ3MgbXVzdCBuZWNlc3NhcmlseSBhcHBlYXIgZmVhcmZ1bCB0byBldmVyeSBodW1hbiBiZWluZyBhbmQKCQkJCQl0aHJvdyBldmVyeWJvZHkgaW50byBhbGFybSwgc2luY2UgaXQgaXMgcXVpdGUgcG9zc2libGUgdGhhdCw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+anVzdCBhcyBoZWF0IGFuZCBjb2xkIGFuZCBzb21lCgkJCQkJb2YgdGhlIG90aGVyIGZvcmNlcyBhcmUgYWJvdmUgdXMgYW5kIGFib3ZlIHRoZSBjb25kaXRpb25zIG9mIHRoZSBodW1hbgoJCQkJCWJvZHksIHNvIGFsc28gYXJlIHNvbWUgbWVudGFsIHN1ZmZlcmluZ3MuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXJlZm9yZSB3aGVyZWFzIHRoZSBjb3dhcmRseSBhbmQgdGhlIGRhcmluZyBhcmUgbWlzdGFrZW4gb3dpbmcgdG8KCQkJCQl0aGVpciBjaGFyYWN0ZXJzLCBzaW5jZSB0aGUgY293YXJkIHRoaW5rcyB0aGluZ3Mgbm90IGZvcm1pZGFibGUKCQkJCQlmb3JtaWRhYmxlIGFuZCB0aGluZ3Mgc2xpZ2h0bHkgZm9ybWlkYWJsZSBleHRyZW1lbHkgZm9ybWlkYWJsZSwgYW5kCgkJCQkJdGhlIGRhcmluZyBtYW4gb24gdGhlIGNvbnRyYXJ5IHRoaW5rcyBmb3JtaWRhYmxlIHRoaW5ncyBwZXJmZWN0bHkgc2FmZQoJCQkJCWFuZCBleHRyZW1lbHkgZm9ybWlkYWJsZSB0aGluZ3Mgb25seSBzbGlnaHRseSBmb3JtaWRhYmxlLCB0byB0aGUgYnJhdmUKCQkJCQltYW4gb24gdGhlIG90aGVyIGhhbmQgdGhpbmdzIHNlZW0gZXhhY3RseSB3aGF0IHRoZXkgYXJlLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1230a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4yNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBIZW5jZSBhIG1hbiBpcyBub3QgYnJhdmUgaWYKCQkJCQloZSBlbmR1cmVzIGZvcm1pZGFibGUgdGhpbmdzIHRocm91Z2ggaWdub3JhbmNlIChmb3IgaW5zdGFuY2UsIGlmIG93aW5nCgkJCQkJdG8gbWFkbmVzcyBoZSB3ZXJlIHRvIGVuZHVyZSBhIGZsaWdodCBvZiB0aHVuZGVyYm9sdHMpLCBub3IgaWYgaGUgZG9lcwoJCQkJCXNvIG93aW5nIHRvIHBhc3Npb24gd2hlbiBrbm93aW5nIHRoZSBncmVhdG5lc3Mgb2YgdGhlIGRhbmdlciwgYXMgdGhlCgkJCQkJQ2VsdHMgJ3Rha2UgYXJtcyBhbmQgbWFyY2ggYWdhaW5zdCB0aGUgd2F2ZXMnPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgYXBwZWFycyB0byBiZSBsb29zZWx5IHF1b3RlZCBmcm9tIGEgdmVyc2UKCQkJCQkJcGFzc2FnZTogY2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTE1YiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDExMTViIDI1PC9iaWJsPi4gQW4KCQkJCQkJZWNobyBvZiB0aGUgc3Rvcnkgc3Vydml2ZXMgaW4gU2hha2VzcGVhcmUncyBtZXRhcGhvciwgJ3RvIHRha2UKCQkJCQkJYXJtcyBhZ2FpbnN0IGEgc2VhIG9mIHRyb3VibGVzLic8L25vdGU+OyBhbmQgaW4gZ2VuZXJhbCwgdGhlCgkJCQkJY291cmFnZSBvZiBiYXJiYXJpYW5zIGhhcyBhbiBlbGVtZW50IG9mIHBhc3Npb24uIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTE1YiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDExMTViIDI1PC9iaWJsPi4gQW4KCQkJCQkJZWNobyBvZiB0aGUgc3Rvcnkgc3Vydml2ZXMgaW4gU2hha2VzcGVhcmUncyBtZXRhcGhvciwgJ3RvIHRha2UKCQkJCQkJYXJtcyBhZ2FpbnN0IGEgc2VhIG9mIHRyb3VibGVzLic8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQW5kIHNvbWUgbWVuIGVuZHVyZSB0ZXJyb3JzCgkJCQkJZm9yIHRoZSBzYWtlIG9mIG90aGVyIHBsZWFzdXJlcyBhbHNv4oCUZm9yIGV2ZW4gcGFzc2lvbgoJCQkJCWNvbnRhaW5zIHBsZWFzdXJlIG9mIGEgc29ydCwgc2luY2UgaXQgaXMgY29tYmluZWQgd2l0aCBob3BlIG9mCgkJCQkJcmV2ZW5nZS4gQnV0IG5ldmVydGhlbGVzcyBuZWl0aGVyIGlmIGEgbWFuIGVuZHVyZXMgZGVhdGggZm9yIHRoZSBzYWtlCgkJCQkJb2YgdGhpcyBwbGVhc3VyZSBub3IgZm9yIGFub3RoZXIsIG5vciBmb3IgdGhlIHNha2Ugb2YgYXZvaWRpbmcgZ3JlYXRlcgoJCQkJCXBhaW5zLCB3b3VsZCBhbnkgb2YgdGhlc2UgcGVyc29ucyBqdXN0bHkgYmUgdGVybWVkIGJyYXZlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMjciIHVuaXQ9IkxvZWIgY2hhcCIgLz4gRm9yIGlmIGR5aW5nIHdlcmUgcGxlYXNhbnQsCgkJCQkJcHJvZmxpZ2F0ZXMgd291bGQgYmUgZHlpbmcgY29uc3RhbnRseSwgb3dpbmcgdG8gbGFjayBvZiBzZWxmLWNvbnRyb2wsCgkJCQkJanVzdCBhcyBldmVuIGFzIGl0IGlzLCB3aGVuLCBhbHRob3VnaCBkZWF0aCBpdHNlbGYgaXMgbm90IHBsZWFzYW50LAoJCQkJCXRoaW5ncyB0aGF0IGNhdXNlIGl0IGFyZSwgbWFueSBtZW4gdGhyb3VnaCBsYWNrIG9mIHNlbGYgY29udHJvbAoJCQkJCWtub3dpbmdseSBlbmNvdW50ZXIgaXQ7IG5vbmUgb2Ygd2hvbSB3b3VsZCBiZSB0aG91Z2h0IGJyYXZlLCBldmVuCgkJCQkJdGhvdWdoIGhlIHdlcmUgdGhvdWdodCB0byBkaWUgcXVpdGUgcmVhZGlseS4gTm9yIHlldCBhcmUgYW55IG9mIHRob3NlCgkJCQkJYnJhdmUgd2hvLCBhcyBtYW55IG1lbiBkbywgY29tbWl0IHN1aWNpZGUgdG8gZXNjYXBlIGZyb20gdHJvdWJsZSwgYXMKCQkJCQlBZ2F0aG9uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkF0aGVuaWFuIHRyYWdpYyBwb2V0LAoJCQkJCQlmcmllbmQgb2YgUGxhdG8uPC9ub3RlPiBzYXlzOiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIzMGEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['3.1230a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjxjaXQgY2xhc3M9InRyYW5zbGF0aW9uIj4KCQkJCQkJCTxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iaWFtYmljIiAvPgoJCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlIGJhc2UgYW1vbmcgbWFua2luZCwgYnkgdG9pbCBvJ2VyY29tZSw8L2w+CgkJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5Db25jZWl2ZSBhIGxvdmUgb2YgZGVhdGguPC9sPgoJCQkJCQkJPC9xdW90ZT4KCQkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFnYXRobyBGci4gNyI+QWdhdGhvbiBGci4gNzwvYmlibD4KCQkJCQkJPC9jaXQ+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJpYW1iaWMiIC8+CgkJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUgYmFzZSBhbW9uZyBtYW5raW5kLCBieSB0b2lsIG8nZXJjb21lLDwvbD4KCQkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPkNvbmNlaXZlIGEgbG92ZSBvZiBkZWF0aC48L2w+CgkJCQkJCQk8L3F1b3RlPgoJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImlhbWJpYyIgLz4KCQkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZSBiYXNlIGFtb25nIG1hbmtpbmQsIGJ5IHRvaWwgbydlcmNvbWUsPC9sPgoJCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q29uY2VpdmUgYSBsb3ZlIG9mIGRlYXRoLjwvbD4KCQkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFnYXRobyBGci4gNyI+QWdhdGhvbiBGci4gNzwvYmlibD4KCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFzIGFsc28gQ2hlaXJvbiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIENlbnRhdXIgc2FnZSBhbmQgcGh5c2ljaWFuLAoJCQkJCQkJYWNjaWRlbnRhbGx5IHdvdW5kZWQgYnkgYSBwb2lzb25lZCBhcnJvdyBvZiBIZXJhY2xlcywKCQkJCQkJCXRyYW5zZmVycmVkIGhpcyBpbW1vcnRhbGl0eSB0byBQcm9tZXRoZXVzLjwvbm90ZT4gaW4gdGhlCgkJCQkJbGVnZW5kYXJ5IHN0b3J5IG9mIHRoZSBwb2V0cywgYmVjYXVzZSBvZiB0aGUgcGFpbiBmcm9tIGhpcyB3b3VuZAoJCQkJCXByYXllZCB0aGF0IHRob3VnaCBpbW1vcnRhbCBoZSBtaWdodCBkaWUuIDwvdHJhbnNsYXRpb24+"
translation['3.1230a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4yOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgaW4gbGlrZSBtYW5uZXIgdG8gdGhlc2UsIGFsbCB3aG8gZmFjZQoJCQkJCWRhbmdlcnMgYmVjYXVzZSBvZiBleHBlcmllbmNlIGFyZSBub3QgYnJhdmU7IHRoaXMgaXMgaG93IHBlcmhhcHMgbW9zdAoJCQkJCW9mIHRoZSBtaWxpdGFyeSBjbGFzcyBmYWNlIGRhbmdlcnMuIEZvciB0aGUgZmFjdCBpcyB0aGUgZXhhY3Qgb3Bwb3NpdGUKCQkJCQlvZiB0aGUgdmlldyBvZiBTb2NyYXRlcywgd2hvIHRob3VnaHQgdGhhdCBicmF2ZXJ5IHdhcyBrbm93bGVkZ2U6CgkJCQkJc2FpbG9ycyB3aG8ga25vdyBob3cgdG8gZ28gYWxvZnQgYXJlIG5vdCBkYXJpbmcgdGhyb3VnaCBrbm93aW5nIHdoYXQKCQkJCQl0aGluZ3MgYXJlIGZvcm1pZGFibGUsIGJ1dCBiZWNhdXNlIHRoZXkga25vdyBob3cgdG8gcHJvdGVjdCB0aGVtc2VsdmVzCgkJCQkJYWdhaW5zdCB0aGUgZGFuZ2VyczsgYWxzbyBjb3VyYWdlIGlzIG5vdCBtZXJlbHkgd2hhdCBtYWtlcyBtZW4gbW9yZQoJCQkJCWRhcmluZyBmaWdodGVycywgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjI5IiB1bml0PSJMb2ViIGNoYXAiIC8+IGZvciBpbgoJCQkJCXRoYXQgY2FzZSBzdHJlbmd0aCBhbmQgd2VhbHRoIHdvdWxkIGJlIGNvdXJhZ2XigJRhcyBUaGVvZ25pcwoJCQkJCXB1dHMgaXQ6PGNpdCBjbGFzcz0idHJhbnNsYXRpb24iPgoJCQkJCQk8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+CgkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZWxlZ2lhYyIgLz4KCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Rm9yIGV2ZXJ5IG1hbiBieSBwb3ZlcnR5IHN1YmR1ZWQuPC9sPgoJCQkJCQk8L3F1b3RlPgoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJUaGduLiAxNzciPlRoZW9nLiAxNzc8L2JpYmw+CgkJCQkJPC9jaXQ+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImVsZWdpYWMiIC8+CgkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPkZvciBldmVyeSBtYW4gYnkgcG92ZXJ0eSBzdWJkdWVkLjwvbD4KCQkJCQkJPC9xdW90ZT4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImVsZWdpYWMiIC8+CgkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPkZvciBldmVyeSBtYW4gYnkgcG92ZXJ0eSBzdWJkdWVkLjwvbD4KCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iVGhnbi4gMTc3Ij5UaGVvZy4gMTc3PC9iaWJsPgoJCQkJCTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGVvZ25pcwoJCQkJCQkxNzcuPC9ub3RlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgbWFuaWZlc3RseSBzb21lCgkJCQkJbWVuIGRvIGZhY2UgZW1lcmdlbmNpZXMgaW4gc3BpdGUgb2YgYmVpbmcgY293YXJkcywgb3dpbmcgdG8KCQkJCQlleHBlcmllbmNlLCBhbmQgdGhleSBkbyBzbyBiZWNhdXNlIHRoZXkgZG8gbm90IHRoaW5rIHRoYXQgdGhlcmUgaXMgYW55CgkJCQkJZGFuZ2VyLCBhcyB0aGV5IGtub3cgaG93IHRvIHByb3RlY3QgdGhlbXNlbHZlcy4gQSBwcm9vZiBvZiB0aGlzIGlzCgkJCQkJdGhhdCB3aGVuIHRoZXkgdGhpbmsgdGhhdCB0aGV5IGhhdmUgbm8gcHJvdGVjdGlvbiBhbmQgdGhhdCB0aGUgY2F1c2UKCQkJCQlvZiBhbGFybSBpcyBub3cgY2xvc2UgYXQgaGFuZCwgdGhleSB0dXJuIHRhaWwuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4zMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgYW1vbmcgYWxsIHN1Y2ggY2F1c2VzLCBpdAoJCQkJCWlzIHdoZW4gc2hhbWUgbWFrZXMgbWVuIGZhY2Ugd2hhdCBpcyBhbGFybWluZyB0aGF0IHRoZXkgd291bGQgYXBwZWFyCgkJCQkJdG8gYmUgYnJhdmVzdCwgYXMgSG9tZXIgc2F5cyBIZWN0b3IgZmFjZWQgdGhlIGRhbmdlciBvZiBlbmNvdW50ZXJpbmcgQWNoaWxsZXM6CgkJCQkJPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPkFuZCBzaGFtZSBvbiBIZWN0b3IKCQkJCQkJCXNlaXplZOKAlDwvbD4KCQkJCQk8L3F1b3RlPgoJCQkJCVNvdXJjZSB1bmtub3duCgkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5BbmQgc2hhbWUgb24gSGVjdG9yCgkJCQkJCQlzZWl6ZWTigJQ8L2w+CgkJCQkJPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk5vdCBpbiBvdXIKCQkJCQkJSG9tZXIuPC9ub3RlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgPGNpdCBjbGFzcz0idHJhbnNsYXRpb24iPgoJCQkJCQkJPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+UG9seWRhbWFzIHdpbGwgYmUgdGhlIGZpcnN0IHRvIHRhdW50CgkJCQkJCQkJCW1lLjwvbD4KCQkJCQkJCTwvcXVvdGU+CgkJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAyMi4xMDAiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDIyLjEwMDwvYmlibD4KCQkJCQkJPC9jaXQ+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+UG9seWRhbWFzIHdpbGwgYmUgdGhlIGZpcnN0IHRvIHRhdW50CgkJCQkJCQkJCW1lLjwvbD4KCQkJCQkJCTwvcXVvdGU+CgkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPlBvbHlkYW1hcyB3aWxsIGJlIHRoZSBmaXJzdCB0byB0YXVudAoJCQkJCQkJCQltZS48L2w+CgkJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAyMi4xMDAiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDIyLjEwMDwvYmlibD4KCQkJCQkJPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPgoJCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gMjIuMTAwIiB2YWxpZD0ieWVzIj5Ib20uIElsLiAyMi4xMDA8L2JpYmw+CgkJCQkJCTwvbm90ZT48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAyMi4xMDAiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDIyLjEwMDwvYmlibD4KCQkJCQkJPC90cmFuc2xhdGlvbj4="
translation['3.1230b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4zMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5DaXZpYyBjb3VyYWdlIGlzIHRoaXMga2luZC4gQnV0IHRydWUgY291cmFnZQoJCQkJCWlzIG5laXRoZXIgdGhpcyBub3IgYW55IG9mIHRoZSBvdGhlcnMsIHRob3VnaCBpdCByZXNlbWJsZXMgdGhlbSwgYXMKCQkJCQlkb2VzIHRoZSBjb3VyYWdlIG9mIHdpbGQgYW5pbWFscywgd2hpY2ggYXJlIGxlZCBieSBwYXNzaW9uIHRvIHJ1c2ggdG8KCQkJCQltZWV0IHRoZSBibG93LiBGb3IgaXQgaXMgbm90IGZyb20gZmVhciB0aGF0IGhlIHdpbGwgaW5jdXIgZGlzZ3JhY2UKCQkJCQl0aGF0IGEgbWFuIG91Z2h0IHRvIHN0YW5kIGhpcyBncm91bmQsIG5vciBmcm9tIG1vdGl2ZXMgb2YgYW5nZXIsIG5vcgoJCQkJCWJlY2F1c2UgaGUgZG9lcyBub3QgdGhpbmsgdGhhdCBoZSB3aWxsIGJlIGtpbGxlZCBvciBiZWNhdXNlIGhlIGhhcwoJCQkJCWZvcmNlcyB0byBwcm90ZWN0IGhpbSwgZm9yIGluIHRoYXQgY2FzZSBoZSB3aWxsIG5vdCB0aGluayB0aGF0IHRoZXJlCgkJCQkJaXMgcmVhbGx5IGFueXRoaW5nIHRvIGJlIGFmcmFpZCBvZi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjMyIiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCwgc2luY2UgaW5kZWVkIGFsbCBnb29kbmVzcyBpbnZvbHZlcyBwdXJwb3NpdmUKCQkJCQljaG9pY2UgKGl0IGhhcyBiZWVuIHNhaWQgYmVmb3JlIHdoYXQgd2UgbWVhbiBieQoJCQkJCXRoaXPigJRnb29kbmVzcyBtYWtlcyBhIG1hbiBjaG9vc2UgZXZlcnl0aGluZyBmb3IgdGhlIHNha2Ugb2YKCQkJCQlzb21lIG9iamVjdCwgYW5kIHRoYXQgb2JqZWN0IGlzIHdoYXQgaXMgZmluZSksIGl0IGlzIGNsZWFyIHRoYXQKCQkJCQljb3VyYWdlIGJlaW5nIGEgZm9ybSBvZiBnb29kbmVzcyB3aWxsIG1ha2UgYSBtYW4gZmFjZSBmb3JtaWRhYmxlCgkJCQkJdGhpbmdzIGZvciBzb21lIG9iamVjdCwgc28gdGhhdCBoZSBkb2VzIG5vdCBkbyBpdCB0aHJvdWdoIGlnbm9yYW5jZQoJCQkJCShmb3IgaXQgcmF0aGVyIG1ha2VzIGhpbSBqdWRnZSBjb3JyZWN0bHkpLCBub3IgeWV0IGZvciBwbGVhc3VyZSwgYnV0CgkJCQkJYmVjYXVzZSBpdCBpcyBmaW5lLCBzaW5jZSBpbiBhIGNhc2Ugd2hlcmUgaXQgaXMgbm90IGZpbmUgYnV0IGluc2FuZSBoZQoJCQkJCXdpbGwgbm90IGZhY2UgdGhlbSwgZm9yIHRoZW4gaXQgd291bGQgYmUgYmFzZSB0byBkbyBzby48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMzMiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2UgaGF2ZSBub3cgZ2l2ZW4gYW4gYWNjb3VudCB0aGF0IGlzIGZhaXJseSBhZGVxdWF0ZSBmb3Igb3VyIHByZXNlbnQKCQkJCQlwcm9jZWR1cmUgb2YgdGhlIGtpbmQgb2YgdGhpbmdzIGluIHJlbGF0aW9uIHRvIHdoaWNoIENvdXJhZ2UgaXMgYQoJCQkJCW1pZGRsZSBzdGF0ZSwgYW5kIGJldHdlZW4gd2hhdCB2aWNlcyBhbmQgZm9yIHdoYXQgcmVhc29uIGl0IGlzIHRoaXMsCgkJCQkJYW5kIHdoYXQgaXMgdGhlIHBvd2VyIHRoYXQgZm9ybWlkYWJsZSB0aGluZ3MgZXhlcmNpc2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2UgbXVzdCBuZXh0IGF0dGVtcHQgdG8gZGVjaWRlIGFib3V0IFRlbXBlcmFuY2UgYW5kIFByb2ZsaWdhY3kuIFRoZQoJCQkJCXRlcm0gJ3Byb2ZsaWdhdGUnICh1bmNoYXN0ZSkgaGFzIGEgdmFyaWV0eSBvZiBtZWFuaW5ncy4gSXQgbWVhbnMgdGhlCgkJCQkJbWFuIHdobyBoYXMgbm90IGJlZW4gKGFzIGl0IHdlcmUpICdjaGFzdGlzZWQnIG9yIGN1cmVkLCBqdXN0IGFzCgkJCQkJJ3VuZGl2aWRlZCcgbWVhbnMgb25lIHRoYXQgaGFzIG5vdCBiZWVuIGRpdmlkZWQ7IGFuZCB0aGVzZSB0ZXJtcwoJCQkJCWluY2x1ZGUgYm90aCBvbmUgY2FwYWJsZSBvZiB0aGUgcHJvY2VzcyBhbmQgb25lIG5vdCBjYXBhYmxlIG9mIGl0OgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjMwYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1230b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPid1bmRpdmlkZWQnIG1lYW5zIGJvdGggdGhhdCB3aGljaCBjYW5ub3QgYmUKCQkJCQlkaXZpZGVkIGFuZCB0aGF0IHdoaWNoIHRob3VnaCBpdCBjYW4gYmUgaGFzIG5vdCBiZWVuOyA8L3RyYW5zbGF0aW9uPg=="
translation['3.1230b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IGFuZCBzaW1pbGFybHkgd2l0aAoJCQkJCSd1bmNoYXN0ZSfigJRpdCBkZW5vdGVzIGJvdGggdGhhdCB3aGljaCBpcyBieSBuYXR1cmUgaW5jYXBhYmxlCgkJCQkJb2YgY2hhc3RlbmluZyBhbmQgdGhhdCB3aGljaCwgdGhvdWdoIGNhcGFibGUsIGhhcyBub3QgYWN0dWFsbHkgYmVlbgoJCQkJCWNoYXN0ZW5lZCBpbiByZXNwZWN0IG9mIHRoZSBlcnJvcnMgYXMgcmVnYXJkcyB3aGljaCB0aGUgdGVtcGVyYXRlIG1hbgoJCQkJCWFjdHMgcmlnaHRseSwgYXMgaXMgdGhlIGNhc2Ugd2l0aCBjaGlsZHJlbjsgZm9yIG9mIHRoZW0gaXQgaXMgaW4gdGhpcwoJCQkJCXNlbnNlIHRoYXQgdGhlIHRlcm0gJ3VuY2hhc3RlJzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDOuuG9uc67zrHPg8+Ezr/PgjwvZm9yZWlnbj4obGl0LgoJCQkJCQknaW5jb3JyaWdpYmxlJykgb2Z0ZW4gbWVhbnMgbm8gbW9yZSB0aGFuICduYXVnaHR5JwoJCQkJCQkoU29sb21vbikuPC9ub3RlPiBpcyB1c2VkLCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDOuuG9uc67zrHPg8+Ezr/PgjwvZm9yZWlnbj4obGl0LgoJCQkJCQknaW5jb3JyaWdpYmxlJykgb2Z0ZW4gbWVhbnMgbm8gbW9yZSB0aGFuICduYXVnaHR5JwoJCQkJCQkoU29sb21vbikuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gd2hlcmVhcyBhbm90aGVyIHVzZSBvZiBpdCBhZ2FpbiByZWZlcnMgdG8gcGVyc29ucyBoYXJkIHRvIGN1cmUgb3IKCQkJCQllbnRpcmVseSBpbmN1cmFibGUgYnkgY2hhc3Rpc2VtZW50LiBCdXQgdGhvdWdoICdwcm9mbGlnYWN5JyBoYXMgbW9yZQoJCQkJCXRoYW4gb25lIHNlbnNlLCBpdCBpcyBjbGVhciB0aGF0IHRoZSBwcm9mbGlnYXRlIGFyZSBjb25jZXJuZWQgd2l0aAoJCQkJCWNlcnRhaW4gcGxlYXN1cmVzIGFuZCBwYWlucyBhbmQgdGhhdCB0aGV5IGRpZmZlciBmcm9tIG9uZSBhbm90aGVyIGFuZAoJCQkJCWZyb20gdGhlIG90aGVyIHZpY2lvdXMgY2hhcmFjdGVycyBpbiBiZWluZyBkaXNwb3NlZCBpbiBhIGNlcnRhaW4KCQkJCQltYW5uZXIgdG93YXJkcyB0aGVzZTsgYW5kIHdlIGRlc2NyaWJlZCBwcmV2aW91c2x5IHRoZSB3YXkgaW4gd2hpY2ggd2UKCQkJCQlhcHBseSB0aGUgdGVybSAncHJvZmxpZ2FjeScgYnkgYW5hbG9neS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBzZWVtcyB0byByZWZlciB0byB3b3JkcyB3aGljaCBtdXN0IGhhdmUgYmVlbgoJCQkJCQlsb3N0IGF0IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAyLjEyMjFhLjIwIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTIyMWEgMjA8L2JpYmw+CgkJCQkJCShTb2xvbW9uKS48L25vdGU+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDIuMTIyMWEuMjAiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjIxYSAyMDwvYmlibD4KCQkJCQkJKFNvbG9tb24pLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJUGVyc29ucyBvbiB0aGUgb3RoZXIgaGFuZCB3aG8gb3dpbmcgdG8gaW5zZW5zaXRpdmVuZXNzIGFyZQoJCQkJCXVuaW5mbHVlbmNlZCBieSB0aGVzZSBwbGVhc3VyZXMgYXJlIGNhbGxlZCBieSBzb21lIHBlb3BsZQoJCQkJCSdpbnNlbnNpdGl2ZScgYW5kIGJ5IG90aGVycyBhcmUgZGVzaWduYXRlZCBieSBvdGhlciBuYW1lcyBvZiB0aGUgc2FtZQoJCQkJCXNvcnQ7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+IGJ1dCB0aGUgc3RhdGUgaXMKCQkJCQlub3QgYSB2ZXJ5IGZhbWlsaWFyIG9uZSBub3Igb2YgY29tbW9uIG9jY3VycmVuY2UsIGJlY2F1c2UgYWxsIG1lbiBlcnIKCQkJCQltb3JlIGluIHRoZSBvdGhlciBkaXJlY3Rpb24sIGFuZCBzdXNjZXB0aWJpbGl0eSBhbmQgc2Vuc2l0aXZlbmVzcyB0bwoJCQkJCXBsZWFzdXJlcyBvZiB0aGlzIHNvcnQgYXJlIG5hdHVyYWwgdG8gZXZlcnlib2R5LiBJdCBzcGVjaWFsbHkgYXR0YWNoZXMKCQkJCQl0byBwZXJzb25zIGxpa2UgdGhlIGJvb3JzIHdobyBhcmUgYSBzdG9jayBjaGFyYWN0ZXIgaW4KCQkJCQljb21lZHnigJQ8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+cGVvcGxlIHdobyBzdGVlciBjbGVhciBvZiBwbGVhc3VyZXMgZXZlbiBpbiBtb2RlcmF0ZSBhbmQgbmVjZXNzYXJ5CgkJCQkJaW5kdWxnZW5jZXMuPC90cmFuc2xhdGlvbj4="
translation['3.1231a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi42IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBzaW5jZSB0aGUgdGVtcGVyYXRlCgkJCQkJY2hhcmFjdGVyIGlzIHNob3duIGluIGNvbm5lY3Rpb24gd2l0aCBwbGVhc3VyZXMsIGl0IGZvbGxvd3MgdGhhdCBpdCBpcwoJCQkJCWFsc28gcmVsYXRlZCB0byBjZXJ0YWluIGRlc2lyZXMuIFdlIG11c3QsIHRoZXJlZm9yZSwgYXNjZXJ0YWluIHdoYXQKCQkJCQl0aGVzZSBhcmUuIEZvciB0aGUgdGVtcGVyYXRlIG1hbiBpcyBub3QgdGVtcGVyYXRlIGFib3V0IGFsbCBwbGVhc3VyZXMKCQkJCQlub3IgYWJvdXQgZXZlcnl0aGluZyBwbGVhc2FudCwgYnV0IGFwcGFyZW50bHkgYWJvdXQgdGhlIG9iamVjdHMgb2YgdHdvCgkJCQkJb2YgdGhlIHNlbnNlcywgdGFzdGUgYW5kIHRvdWNoLCBhbmQgaW4gcmVhbGl0eSBhYm91dCB0aGUgb2JqZWN0cyBvZgoJCQkJCXRvdWNoLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBGb3IgdGhlIHRlbXBlcmF0ZQoJCQkJCW1hbiBpcyBub3QgY29uY2VybmVkIHdpdGggdGhlIHBsZWFzdXJlIG9mIGJlYXV0aWZ1bCB0aGluZ3MgKGFwYXJ0IGZyb20KCQkJCQlzZXh1YWwgZGVzaXJlKSBvciBwYWluIGNhdXNlZCBieSB1Z2x5IHRoaW5ncywgdGhlIG1lZGl1bSBvZiB3aGljaCBpcwoJCQkJCXNpZ2h0LCBub3Igd2l0aCB0aGUgcGxlYXN1cmUgb2YgaGFybW9uaW91cyBzb3VuZHMgb3IgcGFpbiBvZiBkaXNjb3JkcwoJCQkJCWNvbnZleWVkIHRocm91Z2ggdGhlIG1lZGl1bSBvZiBoZWFyaW5nLCBub3IgeWV0IHdpdGggdGhlIHBsZWFzdXJlcyBhbmQKCQkJCQlwYWlucyBvZiBzbWVsbCwgZGVyaXZlZCBmcm9tIGdvb2QgYW5kIGJhZCBzY2VudHM7IGZvciBuZWl0aGVyIGlzCgkJCQkJYW55b25lIHRlcm1lZCBwcm9mbGlnYXRlIGJlY2F1c2Ugb2YgYmVpbmcgc2Vuc2l0aXZlIG9yIG5vdCBzZW5zaXRpdmUKCQkJCQl0byBzZW5zYXRpb25zIG9mIHRoYXQgc29ydOKAlDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi44IiB1bml0PSJMb2ViIGNoYXAiIC8+IGZvciBleGFtcGxlLCBhIG1hbiB3b3VsZCBub3QgYmUgY29uc2lkZXJlZAoJCQkJCXByb2ZsaWdhdGUgaWYgd2hlbiBsb29raW5nIGF0IGEgYmVhdXRpZnVsIHN0YXR1ZSBvciBob3JzZSBvciBwZXJzb24sCgkJCQkJb3IgbGlzdGVuaW5nIHRvIHNvbWVvbmUgc2luZ2luZywgaGUgZGlkIG5vdCB3aXNoIGZvciBmb29kIG9yIGRyaW5rIG9yCgkJCQkJc2V4dWFsIGluZHVsZ2VuY2UgYnV0IG9ubHkgd2lzaGVkIHRvIGxvb2sgYXQgdGhlIGJlYXV0aWZ1bCBvYmplY3RzIG9yCgkJCQkJbGlzdGVuIHRvIHRoZSBtdXNpYyzigJRhbnkgbW9yZSB0aGFuIHRoZSBwZXJzb25zIGhlbGQKCQkJCQlzcGVsbC1ib3VuZCBpbiB0aGUgYWJvZGUgb2YgdGhlIFNpcmVucy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGVtcGVyYW5jZSBhbmQgcHJvZmxpZ2FjeSBoYXZlIHRvIGRvIHdpdGggdGhvc2UKCQkJCQl0d28gc29ydHMgb2Ygc2Vuc29yeSBvYmplY3RzIGluIHJlbGF0aW9uIHRvIHdoaWNoIGFsb25lIHRoZSBsb3dlcgoJCQkJCWFuaW1hbHMgYWxzbyBoYXBwZW4gdG8gYmUgc2Vuc2l0aXZlIGFuZCB0byBmZWVsIHBsZWFzdXJlIGFuZAoJCQkJCXBhaW7igJR0aGUgb2JqZWN0cyBvZiB0YXN0ZSBhbmQgb2YgdG91Y2gsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiB3aGVyZWFzIGFib3V0IHZpcnR1YWxseSBhbGwKCQkJCQl0aGUgcGxlYXN1cmVzIG9mIHRoZSBvdGhlciBzZW5zZXMgYWxpa2UgYW5pbWFscyBhcmUgY2xlYXJseSBzbwoJCQkJCWNvbnN0aXR1dGVkIGFzIHRvIGJlIGluc2Vuc2l0aXZl4oCUIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjMxYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1231a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmUuZy4KCQkJCQloYXJtb25pb3VzIHNvdW5kLCBvciBiZWF1dHk7IGZvciBjbGVhcmx5IHRoZXkgYXJlIG5vdCBhZmZlY3RlZCBpbiBhbnkKCQkJCQlkZWdyZWUgd29ydGggc3BlYWtpbmcgb2YgYnkgdGhlIG1lcmUgc2lnaHQgb2YgYmVhdXRpZnVsIG9iamVjdHMgb3IgYnkKCQkJCQlsaXN0ZW5pbmcgdG8gbXVzaWNhbCBzb3VuZHMsIGV4Y2VwdCBwb3NzaWJseSBpbiB0aGUgY2FzZSBvZiBzb21lCgkJCQkJbWlyYWN1bG91cyBvY2N1cnJlbmNlcy4gTm9yIHlldCBhcmUgdGhleSBzZW5zaXRpdmUgdG8gZ29vZCBvciBiYWQKCQkJCQlzbWVsbHMsIGFsdGhvdWdoIGl0IGlzIHRydWUgdGhhdCBhbGwgdGhlaXIgc2Vuc2VzIGFyZSBrZWVuZXIgdGhhbgoJCQkJCW1hbidzOyA8L3RyYW5zbGF0aW9uPg=="
translation['3.1231a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBidXQgZXZlbiB0aGUKCQkJCQlzbWVsbHMgdGhleSBlbmpveSBhcmUgdGhvc2UgdGhhdCBoYXZlIGFncmVlYWJsZSBhc3NvY2lhdGlvbnMsIGFuZCBhcmUKCQkJCQlub3QgaW50cmluc2ljYWxseSBhZ3JlZWFibGUuIEJ5IHNtZWxscyBub3QgaW50cmluc2ljYWxseSBhZ3JlZWFibGUgSQoJCQkJCW1lYW4gdGhvc2UgdGhhdCB3ZSBlbmpveSBiZWNhdXNlIG9mIGVpdGhlciBhbnRpY2lwYXRpb24gb3IKCQkJCQlyZWNvbGxlY3Rpb24sIGZvciBleGFtcGxlIHRoZSBzbWVsbCBvZiB0aGluZ3MgdG8gZWF0IG9yIGRyaW5rLCBmb3Igd2UKCQkJCQllbmpveSB0aGVzZSBzY2VudHMgb24gYWNjb3VudCBvZiBhIGRpZmZlcmVudCBwbGVhc3VyZSwgdGhhdCBvZiBlYXRpbmcKCQkJCQlvciBkcmlua2luZzsgYnkgaW50cmluc2ljYWxseSBhZ3JlZWFibGUgSSBtZWFuIHNjZW50cyBzdWNoIGFzIHRob3NlIG9mCgkJCQkJZmxvd2VycyAodGhpcyBpcyB0aGUgcmVhc29uIG9mIFN0cmF0b25pY3VzJ3M8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSBjb250ZW1wb3JhcnkgbXVzaWNpYW4sIGEgbnVtYmVyIG9mIHdob3NlIHNtYXJ0CgkJCQkJCXNheWluZ3MgYXJlIHJlY29yZGVkIGJ5IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkF0aC4gOC4zNDciPkF0aGVuYWV1cwoJCQkJCQkJOC4zNDdmLTM1MmQ8L2JpYmw+Ljwvbm90ZT4gbmVhdCByZW1hcmsgdGhhdCB0aGUgc2NlbnQgb2YKCQkJCQlmbG93ZXJzIGlzIGJlYXV0aWZ1bCBidXQgdGhhdCBvZiB0aGluZ3MgdG8gZWF0IGFuZCBkcmluayBzd2VldCkuCgkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXRoLiA4LjM0NyI+QXRoZW5hZXVzCgkJCQkJCQk4LjM0N2YtMzUyZDwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+IEZvciBldmVuIHRoZQoJCQkJCXBsZWFzdXJlcyBvZiB0YXN0ZSBhcmUgbm90IGFsbCBhdHRyYWN0aXZlIHRvIGFuaW1hbHMsIG5vciBhcmUgdGhvc2UKCQkJCQlwZXJjZWl2ZWQgd2l0aCB0aGUgdGlwIG9mIHRoZSB0b25ndWUsIGJ1dCB0aG9zZSBwZXJjZWl2ZWQgYnkgdGhlCgkJCQkJdGhyb2F0LCB0aGUgc2Vuc2F0aW9uIG9mIHdoaWNoIHNlZW1zIG1vcmUgbGlrZSB0b3VjaCB0aGFuIHRhc3RlOyBzbwoJCQkJCXRoYXQgZ291cm1hbmRzIGRvIG5vdCBwcmF5IHRoYXQgdGhleSBtYXkgaGF2ZSBhIGxvbmcgdG9uZ3VlIGJ1dCBhCgkJCQkJY3JhbmUncyBndWxsZXQsIGxpa2UgUGhpbG94ZW51cyBzb24gb2YgRXJ5eGlzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Nci4gSG9zcGl0YWJsZSwgc29uIG9mIE1pc3RyZXNzCgkJCQkJCUJlbGNo4oCUcHJlc3VtYWJseSBhIGNoYXJhY3RlciBpbgoJCQkJCQljb21lZHkuPC9ub3RlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBJdAoJCQkJCWZvbGxvd3MgdGhhdCBicm9hZGx5IHNwZWFraW5nIHByb2ZsaWdhY3kgbXVzdCBiZSBjb25zaWRlcmVkIHRvIGJlCgkJCQkJcmVsYXRlZCB0byB0aGUgb2JqZWN0cyBvZiB0b3VjaCwgYW5kIGxpa2V3aXNlIGl0IGlzIHdpdGggcGxlYXN1cmVzIG9mCgkJCQkJdGhhdCBzb3J0IHRoYXQgdGhlIHByb2ZsaWdhdGUgaXMgY29uY2VybmVkOzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3IgdGlwcGxpbmcgYW5kIGdsdXR0b255IGFuZCBsZWNoZXJ5IGFuZAoJCQkJCWdvcm1hbmRpemluZyBhbmQgdGhlIGxpa2UgYWxsIGhhdmUgdG8gZG8gd2l0aCB0aGUgc2Vuc2F0aW9ucwoJCQkJCXNwZWNpZmllZCwgYW5kIHRoZXNlIGFyZSB0aGUgZGVwYXJ0bWVudHMgaW50byB3aGljaCBwcm9mbGlnYWN5IGlzCgkJCQkJZGl2aWRlZC4gPC90cmFuc2xhdGlvbj4="
translation['3.1231b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgbm9ib2R5IGlzCgkJCQkJY2FsbGVkIHByb2ZsaWdhdGUgaWYgaGUgZXhjZWVkcyBpbiByZWdhcmQgdG8gdGhlIHBsZWFzdXJlcyBvZiBzaWdodCBvcgoJCQkJCWhlYXJpbmcgb3Igc21lbGw7IHRob3NlIGVycm9ycyB3ZSBjcml0aWNpemUgd2l0aG91dCBzZXZlcmUgcmVidWtlLCBhbmQKCQkJCQlnZW5lcmFsbHkgYWxsIHRoZSB0aGluZ3MgaW5jbHVkZWQgdW5kZXIgdGhlIHRlcm0gJ2xhY2sgb2YKCQkJCQlzZWxmLWNvbnRyb2wnOiB0aGUgdW5jb250cm9sbGVkIGFyZSBub3QgcHJvZmxpZ2F0ZSwgeWV0IHRoZXkgYXJlIG5vdAoJCQkJCXRlbXBlcmF0ZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuMTUiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlcmVmb3JlIHRoZSBwZXJzb24gb2Ygc3VjaCBhCgkJCQkJY2hhcmFjdGVyIGFzIHRvIGJlIGRlZmljaWVudCBpbiBhbGwgdGhlIGVuam95bWVudHMgd2hpY2ggcHJhY3RpY2FsbHkKCQkJCQlldmVyeWJvZHkgbXVzdCBzaGFyZSBhbmQgbXVzdCBlbmpveSwgaXMgaW5zZW5zaXRpdmUgKG9yIHdoYXRldmVyIHRoZQoJCQkJCXByb3BlciB0ZXJtIGlzKSwgYW5kIGhlIHRoYXQgZXhjZWVkcyBpbiB0aGVtIGlzIHByb2ZsaWdhdGUuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBGb3IgYWxsIHBlb3BsZSBieSBuYXR1cmUKCQkJCQllbmpveSB0aGVzZSB0aGluZ3MsIGFuZCBjb25jZWl2ZSBkZXNpcmVzIGZvciB0aGVtLCB3aXRob3V0IGJlaW5nIG9yCgkJCQkJYmVpbmcgY2FsbGVkIHByb2ZsaWdhdGUsIGZvciB0aGV5IGRvIG5vdCBleGNlZWQgYnkgZmVlbGluZyBtb3JlIGpveQoJCQkJCXRoYW4gdGhleSBvdWdodCB3aGVuIHRoZXkgZ2V0IHRoZW0gbm9yIG1vcmUgcGFpbiB0aGFuIHRoZXkgb3VnaHQgd2hlbgoJCQkJCXRoZXkgZG8gbm90IGdldCB0aGVtOyBub3IgeWV0IGFyZSB0aGV5IHVuZmVlbGluZyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzr3hvbHOu86zzrfPhM6/zrk8L2ZvcmVpZ24+IGlzCgkJCQkJCXRocm93biBpbiBhcyBhIHBvc3NpYmxlIHN5bm9ueW0gZm9yIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gM69zrHhvbfPg864zrfPhM6/zrk8L2ZvcmVpZ24+LCBzZWUgMTUuPC9ub3RlPiBmb3IgdGhleSBkbyBub3QKCQkJCQlmYWxsIHNob3J0IGluIGZlZWxpbmcgam95IG9yIHBhaW4sIGJ1dCByYXRoZXIgZXhjZWVkLjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gM694b2xzrvOs863z4TOv865PC9mb3JlaWduPiBpcwoJCQkJCQl0aHJvd24gaW4gYXMgYSBwb3NzaWJsZSBzeW5vbnltIGZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDOvc6x4b23z4POuM63z4TOv865PC9mb3JlaWduPiwgc2VlIDE1LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xNyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgc2luY2UgdGhlcmUgYXJlIGV4Y2VzcyBhbmQgZGVmaWNpZW5jeSBpbiByZWdhcmQgdG8gdGhlc2UgdGhpbmdzLAoJCQkJCWl0IGlzIGNsZWFyIHRoYXQgdGhlcmUgaXMgYWxzbyBhIG1pZGRsZSBzdGF0ZSwgYW5kIHRoYXQgdGhpcyBzdGF0ZSBvZgoJCQkJCWNoYXJhY3RlciBpcyB0aGUgYmVzdCBvbmUsIGFuZCBpcyB0aGUgb3Bwb3NpdGUgb2YgYm90aCB0aGUgb3RoZXJzLgoJCQkJCUhlbmNlIGlmIHRlbXBlcmFuY2UgaXMgdGhlIGJlc3Qgc3RhdGUgb2YgY2hhcmFjdGVyIGluIHJlbGF0aW9uIHRvIHRoZQoJCQkJCXRoaW5ncyB3aXRoIHdoaWNoIHRoZSBwcm9mbGlnYXRlIGlzIGNvbmNlcm5lZCwgdGhlIG1pZGRsZSBzdGF0ZSBpbgoJCQkJCXJlZ2FyZCB0byB0aGUgcGxlYXNhbnQgb2JqZWN0cyBvZiBzZW5zZSBtZW50aW9uZWQgd2lsbCBiZSBUZW1wZXJhbmNlLAoJCQkJCWJlaW5nIGEgbWlkZGxlIHN0YXRlIGJldHdlZW4gcHJvZmxpZ2FjeSBhbmQgaW5zZW5zaXRpdmVuZXNzOiB0aGUKCQkJCQlleGNlc3Mgd2lsbCBiZSBQcm9mbGlnYWN5LCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIzMWIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['3.1231b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGUgZGVmaWNpZW5jeQoJCQkJCXdpbGwgZWl0aGVyIGJlIG5hbWVsZXNzIG9yIHdpbGwgYmUgZGVub3RlZCBieSB0aGUgdGVybXMKCQkJCQltZW50aW9uZWQuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgaW4gYQoJCQkJCQlzZW50ZW5jZSBsb3N0IGF0IDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAzLjEyMzBiLjE1IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTIzMGIKCQkJCQkJCTE1PC9iaWJsPi48L25vdGU+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDMuMTIzMGIuMTUiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjMwYgoJCQkJCQkJMTU8L2JpYmw+LjwvdHJhbnNsYXRpb24+"
translation['3.1231b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPgoJCQkJCVdlIHNoYWxsIGhhdmUgdG8gZGVmaW5lIHRoZSBjbGFzcyBvZiBwbGVhc3VyZXMgY29uY2VybmVkIG1vcmUgZXhhY3RseQoJCQkJCWluIG91ciBkaXNjdXNzaW9uIG9mIFNlbGYtY29udHJvbCBhbmQgTGFjayBvZiBDb250cm9sIGxhdGVyCgkJCQkJb24uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIGFsc28gdGhlIG5hdHVyZSBvZiBHZW50bGVuZXNzIGFuZAoJCQkJCUhhcnNobmVzcyBtdXN0IGJlIGFzY2VydGFpbmVkIGluIHRoZSBzYW1lIHdheS4gRm9yIHdlIHNlZSB0aGF0IHRoZQoJCQkJCXRlcm0gJ2dlbnRsZScgaXMgY29uY2VybmVkIHdpdGggdGhlIHBhaW4gdGhhdCBhcmlzZXMgZnJvbQoJCQkJCXBhc3Npb27igJRhIG1hbiBpcyBnZW50bGUgYnkgYmVpbmcgZGlzcG9zZWQgaW4gYSBjZXJ0YWluIHdheQoJCQkJCXRvd2FyZHMgdGhhdCBwYWluLiBBbmQgaW4gb3VyIGRpYWdyYW08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAyLjEyMjBiLjM4IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTIyMGIKCQkJCQkJMzg8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gMi4xMjIxYi4xMiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMjFiCgkJCQkJCQkxMi0xNTwvYmlibD4uPC9ub3RlPiB3ZSBvcHBvc2VkIHRvIHRoZSBpcmFzY2libGUgYW5kIGhhcnNoIGFuZCBmaWVyY2UKCQkJCQltYW4gKGZvciBhbGwgc3VjaCB0cmFpdHMgYmVsb25nIHRvIHRoZSBzYW1lIGRpc3Bvc2l0aW9uKSB0aGUgc2xhdmlzaAoJCQkJCWFuZCBzcGlyaXRsZXNzPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDIuMTIyMGIuMzgiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjIwYgoJCQkJCQkzODwvYmlibD4sIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAyLjEyMjFiLjEyIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTIyMWIKCQkJCQkJCTEyLTE1PC9iaWJsPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIE1zcy4gZ2l2ZQoJCQkJCQknc2xhdmlzaCBhbmQgc2Vuc2VsZXNzLic8L25vdGU+IG1hbjsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gZm9yIHRoZXNlIGFyZSBwZXJoYXBzIHRoZSBtb3N0IHVzdWFsIHdvcmRzIHRvCgkJCQkJZGVub3RlIHRob3NlIHdob3NlIHBhc3Npb24gaXMgbm90IGFyb3VzZWQgZXZlbiBhdCBhbGwgdGhlIHRoaW5ncyBhdAoJCQkJCXdoaWNoIGl0IG91Z2h0IHRvIGJlLCBidXQgd2hvIHVuZGVyZ28gaW5zdWx0aW5nIHRyZWF0bWVudCByZWFkaWx5IGFuZAoJCQkJCW1lZXQgc2xpZ2h0cyB3aXRoIGh1bWlsaXR5OyBzaW5jZSBhcyBvcHBvc2VkIHRvIGZlZWxpbmcgdGhlIHBhaW4gdGhhdAoJCQkJCXdlIGNhbGwgcGFzc2lvbiBxdWlja2x5LCBleHRyZW1lbHkgb3IgZm9yIGEgbG9uZyB0aW1lIHRoZXJlIGlzIGZlZWxpbmcKCQkJCQlpdCBzbG93bHksIHNsaWdodGx5LCBvciBmb3IgYSBzaG9ydCB0aW1lLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgc2luY2UsIGFzIHdlIHNhaWQgaW4gdGhlIG90aGVyIGNhc2VzLCBzbwoJCQkJCWhlcmUgYWxzbyB0aGVyZSBpcyBleGNlc3MgYW5kIGRlZmljaWVuY3kgKGZvciB0aGUgaGFyc2ggbWFuIGlzIHRoZQoJCQkJCXNvcnQgb2YgbWFuIHRoYXQgZmVlbHMgdGhpcyBlbW90aW9uIHRvbyBxdWlja2x5LCB0b28gbG9uZywgYXQgdGhlCgkJCQkJd3JvbmcgdGltZSwgd2l0aCB0aGUgd3Jvbmcga2luZCBvZiBwZW9wbGUsIGFuZCB3aXRoIG1hbnkKCQkJCQlwZW9wbGUsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPndoaWxlIHRoZQoJCQkJCXNsYXZpc2ggbWFuIGlzIHRoZSBvcHBvc2l0ZSksIGl0IGlzIGNsZWFyIHRoYXQgdGhlcmUgaXMgYWxzbyBzb21lIGJvZHkKCQkJCQl3aG8gaXMgYXQgdGhlIG1pZGRsZSBwb2ludCBpbiB0aGUgaW5lcXVhbGl0eS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBoYWxmLXdheSBiZXR3ZWVuIGV4Y2VzcyBhbmQKCQkJCQkJZGVmZWN0Ljwvbm90ZT48L3RyYW5zbGF0aW9uPg=="
translation['3.1232a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy40IiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJU2luY2UsIHRoZXJlZm9yZSwgYm90aCB0aG9zZSBzdGF0ZXMgb2YgY2hhcmFjdGVyIGFyZSB3cm9uZywgaXQgaXMKCQkJCQljbGVhciB0aGF0IHRoZSBzdGF0ZSBtaWR3YXkgYmV0d2VlbiB0aGVtIGlzIHJpZ2h0LCBmb3IgaXQgaXMgbmVpdGhlcgoJCQkJCXRvbyBoYXN0eSBub3IgdG9vIHNsb3ctdGVtcGVyZWQsIG5vciBkb2VzIGl0IGdldCBhbmdyeSB3aXRoIHRoZSBwZW9wbGUKCQkJCQl3aXRoIHdob20gaXQgb3VnaHQgbm90IG5vciBmYWlsIHRvIGdldCBhbmdyeSB3aXRoIHRob3NlIHdpdGggd2hvbSBpdAoJCQkJCW91Z2h0LiBTbyB0aGF0IHNpbmNlIHRoZSBiZXN0IHN0YXRlIG9mIGNoYXJhY3RlciBpbiByZWdhcmQgdG8gdGhvc2UKCQkJCQlmZWVsaW5ncyBpcyBnZW50bGVuZXNzLCBHZW50bGVuZXNzIGFsc28gd291bGQgYmUgYSBtaWRkbGUgc3RhdGUsIGFuZAoJCQkJCXRoZSBnZW50bGUgbWFuIHdvdWxkIGJlIG1pZHdheSBiZXR3ZWVuIHRoZSBoYXJzaCBtYW4gYW5kIHRoZSBzbGF2aXNoCgkJCQkJbWFuLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkdyZWF0bmVzcyBvZiBTcGlyaXQgYW5kIE1hZ25pZmljZW5jZSBhbmQKCQkJCQlMaWJlcmFsaXR5IGFyZSBhbHNvIG1pZGRsZSBzdGF0ZXMuIExpYmVyYWxpdHkgaXMgdGhlIG1lYW4gaW4gcmVnYXJkIHRvCgkJCQkJdGhlIGFjcXVpc2l0aW9uIGFuZCBleHBlbmRpdHVyZSBvZiB3ZWFsdGguIFRoZSBtYW4gd2hvIGlzIG1vcmUgcGxlYXNlZAoJCQkJCXRoYW4gaGUgb3VnaHQgdG8gYmUgYnkgYWxsIGFjcXVpc2l0aW9uIGFuZCBtb3JlIHBhaW5lZCB0aGFuIGhlIG91Z2h0CgkJCQkJdG8gYmUgYnkgYWxsIGV4cGVuZGl0dXJlIGlzIG1lYW4sIGhlIHRoYXQgZmVlbHMgYm90aCBmZWVsaW5ncyBsZXNzCgkJCQkJdGhhbiBoZSBvdWdodCBpcyBwcm9kaWdhbCwgYW5kIGhlIHRoYXQgZmVlbHMgYm90aCBhcyBoZSBvdWdodCBpcwoJCQkJCWxpYmVyYWwgKHdoYXQgSSBtZWFuIGJ5ICdhcyBoZSBvdWdodCwnIGJvdGggaW4gdGhpcyBhbmQgaW4gdGhlIG90aGVyCgkJCQkJY2FzZXMsIGlzICdhcyByaWdodCBwcmluY2lwbGUgZGlyZWN0cycpLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgc2luY2UgdGhlIHR3byBmb3JtZXIgY2hhcmFjdGVycyBjb25zaXN0IGluCgkJCQkJZXhjZXNzIGFuZCBkZWZpY2llbmN5LCBhbmQgd2hlcmUgdGhlcmUgYXJlIGV4dHJlbWVzIHRoZXJlIGlzIGFsc28gYQoJCQkJCW1lYW4sIGFuZCB0aGF0IG1lYW4gaXMgYmVzdCwgdGhlcmUgYmVpbmcgYSBzaW5nbGUgYmVzdCBmb3IgZWFjaCBraW5kCgkJCQkJb2YgYWN0aW9uLCBhIHNpbmdsZSB0aGluZywgaXQgbmVjZXNzYXJpbHkgZm9sbG93cyB0aGF0IGxpYmVyYWxpdHkgaXMgYQoJCQkJCW1pZGRsZSBzdGF0ZSBiZXR3ZWVuIHByb2RpZ2FsaXR5IGFuZCBtZWFubmVzcyBhcyByZWdhcmRzIGdldHRpbmcgYW5kCgkJCQkJcGFydGluZyB3aXRoIHdlYWx0aC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0CgkJCQkJdGhlIHRlcm1zICd3ZWFsdGgnIGFuZCAnYXJ0IG9mIHdlYWx0aCcgd2UgdXNlIGluIHR3byBzZW5zZXMsIHNpbmNlIG9uZQoJCQkJCXdheSBvZiB1c2luZyBhbiBhcnRpY2xlIG9mIHByb3BlcnR5LCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIzMmEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['3.1232a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBleGFtcGxlCgkJCQkJYSBzaG9lIG9yIGEgY2xvYWssIGlzIHByb3BlciB0byB0aGUgYXJ0aWNsZSBpdHNlbGYsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBQb2wuIDEuMTI1N2EuMTQiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIFBvbC4KCQkJCQkJMTI1N2EgMTQ8L2JpYmw+LCB3aGVyZSB0aGUgdXNlIG9mIGEgc2hvZSBmb3Igc2FsZSBpcwoJCQkJCQlpbmNsdWRlZCB3aXRoIGl0cyB1c2UgZm9yIHdlYXIgdW5kZXIgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4fPgeG/hs+DzrnPgiDOus6xzrjigJkgzrHhvZHPhOG9uTwvZm9yZWlnbj4sIGJ1dCBkaXN0aW5ndWlzaGVkIGZyb20gaXQKCQkJCQkJYXMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/hvZDPhyDhvYHOvM6/4b23z4nPgiDOus6xzrjigJkgzrHhvZHPhOG9uTwvZm9yZWlnbj4sCgkJCQkJCWJlY2F1c2Ugbm90IGl0cyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ov+G8sM66zrXhvbfOsSDPh8+B4b+Gz4POuc+CLCDOv+G9kCDOs+G9sM+BCgkJCQkJCQnhvIDOu867zrHOs+G/hs+CIOG8lc69zrXOus6xIM6z4b2zzrPOv869zrXOvTwvZm9yZWlnbj4uIFRoZSB0ZXJtIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Hz4HhvbXOvM6xz4TOsTwvZm9yZWlnbj4gaXRzZWxmIGRlbm90ZXMgdG8gdGhlCgkJCQkJCUdyZWVrIGVhciAndXNlZnVsIHRoaW5ncy4nPC9ub3RlPiBhbm90aGVyIGlzIGFjY2lkZW50YWwsIHRob3VnaAoJCQkJCW5vdCBhcyB1c2luZyBhIHNob2UgZm9yIGEgd2VpZ2h0IHdvdWxkIGJlIGFuIGFjY2lkZW50YWwgdXNlIG9mIGl0LCBidXQKCQkJCQlmb3IgZXhhbXBsZSBzZWxsaW5nIGl0IG9yIGxldHRpbmcgaXQgb24gaGlyZSwgZm9yIHRoZXNlIHVzZXMgZG8gZW1wbG95CgkJCQkJaXQgYXMgYSBzaG9lLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBQb2wuIDEuMTI1N2EuMTQiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIFBvbC4KCQkJCQkJMTI1N2EgMTQ8L2JpYmw+LCB3aGVyZSB0aGUgdXNlIG9mIGEgc2hvZSBmb3Igc2FsZSBpcwoJCQkJCQlpbmNsdWRlZCB3aXRoIGl0cyB1c2UgZm9yIHdlYXIgdW5kZXIgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4fPgeG/hs+DzrnPgiDOus6xzrjigJkgzrHhvZHPhOG9uTwvZm9yZWlnbj4sIGJ1dCBkaXN0aW5ndWlzaGVkIGZyb20gaXQKCQkJCQkJYXMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/hvZDPhyDhvYHOvM6/4b23z4nPgiDOus6xzrjigJkgzrHhvZHPhOG9uTwvZm9yZWlnbj4sCgkJCQkJCWJlY2F1c2Ugbm90IGl0cyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ov+G8sM66zrXhvbfOsSDPh8+B4b+Gz4POuc+CLCDOv+G9kCDOs+G9sM+BCgkJCQkJCQnhvIDOu867zrHOs+G/hs+CIOG8lc69zrXOus6xIM6z4b2zzrPOv869zrXOvTwvZm9yZWlnbj4uIFRoZSB0ZXJtIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs+Hz4HhvbXOvM6xz4TOsTwvZm9yZWlnbj4gaXRzZWxmIGRlbm90ZXMgdG8gdGhlCgkJCQkJCUdyZWVrIGVhciAndXNlZnVsIHRoaW5ncy4nPC90cmFuc2xhdGlvbj4="
translation['3.1232a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC40IiB1bml0PSJMb2ViIGNoYXAiIC8+IFRoZQoJCQkJCWNvdmV0b3VzIG1hbiBpcyB0aGUgcGFydHkgd2hvc2UgaW50ZXJlc3QgY2VudGVycyBvbiBtb25leSwgYW5kIG1vbmV5CgkJCQkJaXMgYSB0aGluZyBvZiBvd25lcnNoaXAgaW5zdGVhZCBvZiBhY2NpZGVudGFsIHVzZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IHRoZSBtZWFuIG1hbiBtaWdodCBiZSBldmVuCgkJCQkJcHJvZGlnYWwgaW4gcmVnYXJkIHRvIHRoZSBhY2NpZGVudGFsIG1vZGUgb2YgZ2V0dGluZyB3ZWFsdGgsIGluYXNtdWNoCgkJCQkJYXMgaXQgaXMgaW4gdGhlIG5hdHVyYWwgYWNxdWlzaXRpb24gb2Ygd2VhbHRoIHRoYXQgaGUgcHVyc3VlcwoJCQkJCWluY3JlYXNlLiBUaGUgcHJvZGlnYWwgbWFuIGxhY2tzIG5lY2Vzc2l0aWVzLCBidXQgdGhlIGxpYmVyYWwgbWFuCgkJCQkJZ2l2ZXMgaGlzIHN1cGVyZmx1aXR5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPgoJCQkJCUFuZCBvZiB0aGVzZSBjbGFzc2VzIHRoZW1zZWx2ZXMgdGhlcmUgYXJlIHNwZWNpZXMgZGVzaWduYXRlZCBhcwoJCQkJCWV4Y2VlZGluZyBvciBkZWZpY2llbnQgaW4gcmVzcGVjdCBvZiBwYXJ0cyBvZiB0aGUgbWF0dGVyIGNvbmNlcm5lZDoKCQkJCQlmb3IgZXhhbXBsZSwgdGhlIHN0aW5neSBtYW4sIHRoZSBza2luZmxpbnQgYW5kIHRoZSBwcm9maXRlZXIgYXJlCgkJCQkJbWVhbuKAlHRoZSBzdGluZ3kgaW4gbm90IHBhcnRpbmcgd2l0aCBtb25leSwgdGhlIHByb2ZpdGVlciBpbgoJCQkJCWFjY2VwdGluZyBhbnl0aGluZywgdGhlIHNraW5mbGludCBpcyBoZSB3aG8gaXMgdmVyeSBleGNpdGVkIGFib3V0CgkJCQkJc21hbGwgc3VtczsgYWxzbyB0aGUgbWFuIHdobyBvZmZlbmRzIGJ5IHdheSBvZiBtZWFubmVzcyBpcyBhIGZhbHNlCgkJCQkJcmVja29uZXIgYW5kIGEgY2hlYXQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC43IiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJU2ltaWxhcmx5ICdwcm9kaWdhbCcgaW5jbHVkZXMgdGhlIHNwZW5kdGhyaWZ0IHdobyBpcyBwcm9kaWdhbCBpbgoJCQkJCXVucmVndWxhdGVkIHNwZW5kaW5nIGFuZCB0aGUgcmVja2xlc3MgbWFuIHdobyBpcyBwcm9kaWdhbCBpbiBub3QgYmVpbmcKCQkJCQlhYmxlIHRvIGVuZHVyZSB0aGUgcGFpbiBvZiBjYWxjdWxhdGlvbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5PbiB0aGUgc3ViamVjdCBvZgoJCQkJCUdyZWF0bmVzcyBvZiBTcGlyaXQgd2UgbXVzdCBkZWZpbmUgaXRzIGNoYXJhY3RlcmlzdGljIGZyb20gdGhlCgkJCQkJYXR0cmlidXRlcyBvZiB0aGUgZ3JlYXQtc3Bpcml0ZWQgbWFuLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5Gb3IganVzdCBhcyBpbiB0aGUgb3RoZXIgY2FzZXMgb2YgdGhpbmdzCgkJCQkJdGhhdCwgb3dpbmcgdG8gdGhlaXIgYWZmaW5pdHkgYW5kIHNpbWlsYXJpdHkgdXAgdG8gYSBwb2ludCwgYXJlIG5vdAoJCQkJCW5vdGljZWQgdG8gZGlmZmVyIHdoZW4gdGhleSBhZHZhbmNlIGZ1cnRoZXIsIHRoZSBzYW1lIGhhcyBoYXBwZW5lZAoJCQkJCWFib3V0IGdyZWF0bmVzcyBvZiBzcGlyaXQuIDwvdHJhbnNsYXRpb24+"
translation['3.1232b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IEhlbmNlIHNvbWV0aW1lcyB0aGUgb3Bwb3NpdGUgY2hhcmFjdGVycyBjbGFpbSB0aGUgc2FtZSBxdWFsaXR5LCBmb3IKCQkJCQlpbnN0YW5jZSB0aGUgZXh0cmF2YWdhbnQgbWFuIGNsYWltcyB0byBiZSB0aGUgc2FtZSBhcyB0aGUgbGliZXJhbCwgdGhlCgkJCQkJc2VsZi13aWxsZWQgYXMgdGhlIHByb3VkLCB0aGUgZGFyaW5nIGFzIHRoZSBicmF2ZTsgZm9yIHRoZXkgYXJlCgkJCQkJY29uY2VybmVkIHdpdGggdGhlIHNhbWUgdGhpbmdzLCBhbmQgYWxzbyBhcmUgbmVpZ2hib3JzIHVwIHRvIGEgcG9pbnQsCgkJCQkJYXMgdGhlIGJyYXZlIG1hbiBjYW4gZW5kdXJlIGRhbmdlcnMgYW5kIHNvIGNhbiB0aGUgZGFyaW5nIG1hbiwgYnV0IHRoZQoJCQkJCWZvcm1lciBpbiBvbmUgd2F5IGFuZCB0aGUgbGF0dGVyIGluIGFub3RoZXIsIGFuZCB0aGF0IG1ha2VzIGEgdmVyeQoJCQkJCWdyZWF0IGRpZmZlcmVuY2UuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCB3ZQoJCQkJCXVzZSB0aGUgdGVybSAnZ3JlYXQtc3Bpcml0ZWQnIGFjY29yZGluZyB0byB0aGUgZGVzaWduYXRpb24gb2YgdGhlCgkJCQkJd29yZCwgYXMgY29uc2lzdGluZyBpbiBhIGNlcnRhaW4gZ3JlYXRuZXNzIG9yIHBvd2VyIG9mIHNwaXJpdC4gU28gdGhhdAoJCQkJCXRoZSBncmVhdC1zcGlyaXRlZCBtYW4gc2VlbXMgdG8gcmVzZW1ibGUgYm90aCB0aGUgcHJvdWQgbWFuIGFuZCB0aGUKCQkJCQltYWduaWZpY2VudCwgYmVjYXVzZSBncmVhdG5lc3Mgb2Ygc3Bpcml0IHNlZW1zIHRvIGdvIHdpdGggYWxsIHRoZQoJCQkJCXZpcnR1ZXMgYWxzby4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gRm9yIGl0IGlzCgkJCQkJcHJhaXNld29ydGh5IHRvIGp1ZGdlIGdyZWF0IGFuZCBzbWFsbCBnb29kcyByaWdodGx5OyBhbmQgdGhvc2UgZ29vZHMKCQkJCQlzZWVtIGdyZWF0IHdoaWNoIGEgbWFuIHB1cnN1ZXMgd2hvIHBvc3Nlc3NlcyB0aGUgYmVzdCBzdGF0ZSBvZgoJCQkJCWNoYXJhY3RlciBpbiByZWxhdGlvbiB0byBzdWNoIHBsZWFzdXJlcywgYW5kIGdyZWF0bmVzcyBvZiBzcGlyaXQgaXMKCQkJCQl0aGUgYmVzdC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQW5kIHRoZSB2aXJ0dWUKCQkJCQljb25jZXJuZWQgd2l0aCBlYWNoIHRoaW5nIGp1ZGdlcyByaWdodGx5IHRoZSBncmVhdGVyIGFuZCB0aGUgc21hbGxlcgoJCQkJCWdvb2QsIGp1c3QgYXMgdGhlIHdpc2UgbWFuIGFuZCB2aXJ0dWUgd291bGQgYmlkLCBzbyB0aGF0IGFsbCB0aGUKCQkJCQl2aXJ0dWVzIGdvIHdpdGggaXQsIG9yIGl0IGdvZXMgd2l0aCBhbGwgdGhlIHZpcnR1ZXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWdhaW4sIGl0IGlzIHRob3VnaHQgY2hhcmFjdGVyaXN0aWMgb2YgdGhlIGdyZWF0LXNwaXJpdGVkIG1hbiB0byBiZQoJCQkJCWRpc2RhaW5mdWwuIEVhY2ggdmlydHVlIG1ha2VzIG1lbiBkaXNkYWluZnVsIG9mIHRoaW5ncyBpcnJhdGlvbmFsbHkKCQkJCQlkZWVtZWQgZ3JlYXQ6IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjMyYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1232b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciBleGFtcGxlLCBjb3VyYWdlIG1ha2VzIGEgbWFuCgkJCQkJZGlzZGFpbmZ1bCBvZiBkYW5nZXJzLCBmb3IgaGUgdGhpbmtzIHRoYXQgdG8gY29uc2lkZXIgZGFuZ2VyIGEgZ3JlYXQKCQkJCQltYXR0ZXIgaXMgYSBkaXNncmFjZWZ1bCB0aGluZywgYW5kIHRoYXQgbnVtYmVycyBhcmUgbm90IGFsd2F5cwoJCQkJCWZvcm1pZGFibGU7IGFuZCB0aGUgc29iZXItbWluZGVkIG1hbiBkaXNkYWlucyBncmVhdCBhbmQgbnVtZXJvdXMKCQkJCQlwbGVhc3VyZXMsIGFuZCB0aGUgbGliZXJhbCBtYW4gd2VhbHRoLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1232b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS43IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCB0aGUgcmVhc29uIHdoeSB0aGlzIGlzIHRob3VnaHQKCQkJCQljaGFyYWN0ZXJpc3RpYyBvZiB0aGUgZ3JlYXQtc3Bpcml0ZWQgbWFuIGlzIGJlY2F1c2Ugb2YgaGlzIGNhcmluZwoJCQkJCWFib3V0IGZldyB0aGluZ3MgYW5kIHRob3NlIGdyZWF0IG9uZXMsIGFuZCBub3QgYWJvdXQgd2hhdGV2ZXIgc29tZWJvZHkKCQkJCQllbHNlIHRoaW5rcy4gQW5kIGEgZ3JlYXQtc3Bpcml0ZWQgbWFuIHdvdWxkIGNvbnNpZGVyIG1vcmUgd2hhdCBvbmUKCQkJCQl2aXJ0dW91cyBtYW4gdGhpbmtzIHRoYW4gd2hhdCBtYW55IG9yZGluYXJ5IHBlb3BsZSB0aGluaywgYXMgQW50aXBob24KCQkJCQlhZnRlciBoaXMgY29uZGVtbmF0aW9uIHNhaWQgdG8gQWdhdGhvbiB3aGVuIGhlIHByYWlzZWQgaGlzIHNwZWVjaCBmb3IKCQkJCQloaXMgZGVmZW5jZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QSB2YXJpYW50IHJlYWRpbmcKCQkJCQkJZ2l2ZXMgJ2FzIEEuIHNhaWQgdG8gQS4gd2hlbiBoZSBpbnNpbmNlcmVseSBwcmFpc2VkIGhpcwoJCQkJCQlkZWZlbmNlLicgRm9yIEFudGlwaG9uJ3MgaW5kaWN0bWVudCBhcyBhIGxlYWRlciBpbiB0aGUKCQkJCQkJcmV2b2x1dGlvbiBvZiB0aGUgRm91ciBIdW5kcmVkIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBzZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iVGh1Yy4gOC42OCIgdmFsaWQ9InllcyI+VGh1Yy4gOC42ODwvYmlibD4uIEFnYXRob24gaXMgcHJlc3VtYWJseSB0aGUgdHJhZ2ljIHBvZXQsCgkJCQkJCXNlZSBQbGF0bydzIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlN5bXBvc2l1bTwvdGl0bGU+LiBUaGUgYW5lY2RvdGUgaXMgbm90CgkJCQkJCXJlY29yZGVkIGVsc2V3aGVyZS48L25vdGU+IEFuZCBhIGZlZWxpbmcgdGhvdWdodCB0byBiZSBzcGVjaWFsbHkKCQkJCQljaGFyYWN0ZXJpc3RpYyBvZiB0aGUgZ3JlYXQtc3Bpcml0ZWQgbWFuIGlzIGRpc2RhaW4uIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBzZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iVGh1Yy4gOC42OCIgdmFsaWQ9InllcyI+VGh1Yy4gOC42ODwvYmlibD4uIEFnYXRob24gaXMgcHJlc3VtYWJseSB0aGUgdHJhZ2ljIHBvZXQsCgkJCQkJCXNlZSBQbGF0bydzIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPlN5bXBvc2l1bTwvdGl0bGU+LiBUaGUgYW5lY2RvdGUgaXMgbm90CgkJCQkJCXJlY29yZGVkIGVsc2V3aGVyZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBPbiB0aGUgb3RoZXIgaGFuZCwgYXMgdG8gdGhlCgkJCQkJYWNjZXB0ZWQgb2JqZWN0cyBvZiBodW1hbiBpbnRlcmVzdCwgaG9ub3IsIGxpZmUsIHdlYWx0aCwgaGUgaXMgdGhvdWdodAoJCQkJCXRvIGNhcmUgbm90aGluZyBhYm91dCBhbnkgb2YgdGhlbSBleGNlcHQgaG9ub3I7IGl0IHdvdWxkIGdyaWV2ZSBoaW0gdG8KCQkJCQliZSBkaXNob25vcmVkIGFuZCBydWxlZCBieSBzb21lb25lIHVud29ydGh5LCBhbmQgaGlzIGdyZWF0ZXN0IGpveSBpcwoJCQkJCXRvIG9idGFpbiBob25vci48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaHVzIGhlIG1pZ2h0IHRoZXJlZm9yZSBiZSB0aG91Z2h0CgkJCQkJaW5jb25zaXN0ZW50LCBvbiB0aGUgZ3JvdW5kIHRoYXQgdG8gYmUgc3BlY2lhbGx5IGNvbmNlcm5lZCBhYm91dCBob25vcgoJCQkJCWFuZCB0byBiZSBkaXNkYWluZnVsIG9mIHRoZSBtdWx0aXR1ZGUgYW5kIG9mIHJlcHV0YXRpb24gZG8gbm90IGdvCgkJCQkJdG9nZXRoZXIuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgaW4gc2F5aW5nCgkJCQkJdGhpcyB3ZSBtdXN0IGRpc3Rpbmd1aXNoLiBIb25vciBpcyBzbWFsbCBvciBncmVhdCBpbiB0d28gd2F5czogaXQKCQkJCQlkaWZmZXJzIGluIGJlaW5nIGNvbmZlcnJlZCBlaXRoZXIgYnkgbWFueSBvcmRpbmFyeSBwZW9wbGUgb3IgYnkKCQkJCQlwZXJzb25zIG9mIGNvbnNpZGVyYXRpb24sIGFuZCBhZ2FpbiBpdCBkaWZmZXJzIGluIHdoYXQgaXQgaXMgY29uZmVycmVkCgkJCQkJZm9yLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5zaW5jZSBpdHMKCQkJCQlncmVhdG5lc3MgZG9lcyBub3QgZGVwZW5kIG9ubHkgb24gdGhlIG51bWJlciBvciB0aGUgcXVhbGl0eSBvZiB0aG9zZQoJCQkJCXdobyBjb25mZXIgaXQsIGJ1dCBhbHNvIG9uIGl0cyBiZWluZyBob25vcmFibGU7IGFuZCBpbiByZWFsaXR5IHRob3NlCgkJCQkJb2ZmaWNlcyBhbmQgb3RoZXIgZ29vZCB0aGluZ3MgYXJlIGhvbm9yYWJsZSBhbmQgd29ydGh5IG9mIHNlcmlvdXMKCQkJCQlwdXJzdWl0IHRoYXQgYXJlIHRydWx5IGdyZWF0LCBzbyB0aGF0IHRoZXJlIGlzIG5vIGdvb2RuZXNzIHdpdGhvdXQKCQkJCQlncmVhdG5lc3M7IG93aW5nIHRvIHdoaWNoIGVhY2ggb2YgdGhlIHZpcnR1ZXMgc2VlbXMgdG8gbWFrZSBtZW4KCQkJCQlncmVhdC1zcGlyaXRlZCBpbiByZWdhcmQgdG8gdGhlIHRoaW5ncyB3aXRoIHdoaWNoIHRoYXQgdmlydHVlIGlzCgkJCQkJY29uY2VybmVkLCBhcyB3ZSBzYWlkLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUKCQkJCQkJMzkuPC9ub3RlPjwvdHJhbnNsYXRpb24+"
translation['3.1233a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQKCQkJCQluZXZlcnRoZWxlc3MgdGhlcmUgaXMgYSBzaW5nbGUgdmlydHVlIG9mIGdyZWF0bmVzcyBvZiBzcGlyaXQgc2lkZSBieQoJCQkJCXNpZGUgd2l0aCB0aGUgb3RoZXIgdmlydHVlcywgc28gdGhhdCB0aGUgcG9zc2Vzc29yIG9mIHRoaXMgdmlydHVlIG11c3QKCQkJCQliZSB0ZXJtZWQgZ3JlYXQtc3Bpcml0ZWQgaW4gYSBzcGVjaWFsIHNlbnNlLiBBbmQgc2luY2UgdGhlcmUgYXJlCgkJCQkJY2VydGFpbiBnb29kcyB3aGljaCBhcmUgaW4gc29tZSBjYXNlcyBob25vcmFibGUgYW5kIGluIG90aGVycyBub3QsCgkJCQkJYWNjb3JkaW5nIHRvIHRoZSBkaXN0aW5jdGlvbiBtYWRlIGJlZm9yZSw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBsbC4gMTcgZmYuPC9ub3RlPiBhbmQgb2YgZ29vZHMgb2YgdGhpcyBzb3J0CgkJCQkJc29tZSBhcmUgdHJ1bHkgZ3JlYXQgYW5kIG90aGVycyBzbWFsbCwgYW5kIHNvbWUgbWVuIGRlc2VydmUgYW5kIGNsYWltCgkJCQkJdGhlIGZvcm1lciwgaXQgaXMgYW1vbmcgdGhlc2UgbWVuIHRoYXQgdGhlIGdyZWF0LXNwaXJpdGVkIG1hbiBtdXN0IGJlCgkJCQkJbG9va2VkIGZvci4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCB0aGVyZQoJCQkJCWFyZSBuZWNlc3NhcmlseSBmb3VyIHZhcmlldGllcyBvZiBjbGFpbTogaXQgaXMgcG9zc2libGUgdG8gZGVzZXJ2ZQoJCQkJCWdyZWF0IHRoaW5ncyBhbmQgdG8gY2xhaW0gdGhlbSBhcyBvbmUncyBkZXNlcnQ7IGFuZCB0aGVyZSBhcmUgc21hbGwKCQkJCQl0aGluZ3MgYW5kIGEgbWFuIG1heSBkZXNlcnZlIGFuZCBjbGFpbSB0aGluZ3Mgb2YgdGhhdCBzaXplOyBhbmQgYXMKCQkJCQlyZWdhcmRzIGVhY2ggb2YgdGhlc2UgdHdvIGNsYXNzZXMgb2YgdGhpbmdzIHRoZSByZXZlcnNlIGlzCgkJCQkJcG9zc2libGXigJRvbmUgbWFuIG1heSBiZSBvZiBzdWNoIGEgY2hhcmFjdGVyIHRoYXQgYWx0aG91Z2gKCQkJCQlkZXNlcnZpbmcgc21hbGwgdGhpbmdzIGhlIGNsYWltcyBncmVhdCBvbmVz4oCUdGhlIGdvb2RzIGhlbGQKCQkJCQlpbiBoaWdoIGhvbm9yLCBhbmQgYW5vdGhlciBtYW4gdGhvdWdoIGRlc2VydmluZyBncmVhdCB0aGluZ3MgbWF5IGNsYWltCgkJCQkJc21hbGwgb25lcy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+IE5vdyB0aGUgbWFuCgkJCQkJd29ydGh5IG9mIHNtYWxsIHRoaW5ncyBidXQgY2xhaW1pbmcgZ3JlYXQgb25lcyBpcyBibGFtZXdvcnRoeSwgZm9yIGl0CgkJCQkJaXMgZm9vbGlzaCBhbmQgbm90IGZpbmUgdG8gb2J0YWluIHdoYXQgZG9lcyBub3QgY29ycmVzcG9uZCB0byBvbmUncwoJCQkJCWRlc2VydHMuIEFuZCBoZSBhbHNvIGlzIGJsYW1ld29ydGh5IHdobyB0aG91Z2ggd29ydGh5IG9mIHN1Y2ggdGhpbmdzCgkJCQkJZG9lcyBub3QgZGVlbSBoaW1zZWxmIHdvcnRoeSB0byBwYXJ0YWtlIG9mIHRoZW0gYWx0aG91Z2ggdGhleSBhcmUKCQkJCQlhdmFpbGFibGUgZm9yIGhpbS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyMzNhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1233a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1233a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgdGhlcmUgaXMgbGVmdCBoZXJlIHRoZSBtYW4gd2hvIGlzIHRoZQoJCQkJCW9wcG9zaXRlIG9mIGJvdGggb2YgdGhlc2UsIHdobyBiZWluZyB3b3J0aHkgb2YgZ3JlYXQgdGhpbmdzIGNsYWltcwoJCQkJCXRoZW0gYXMgaGlzIGRlc2VydCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIEdyZWVrCgkJCQkJCXBocmFzZSBjb21iaW5lcyB0aGUgc2Vuc2VzIG9mIHJhdGluZyBvbmUncyBkZXNlcnRzIGhpZ2ggYW5kCgkJCQkJCWFzc2VydGluZyBvbmUncyBjbGFpbXMuPC9ub3RlPiBhbmQgaXMgb2Ygc3VjaCBhIGNoYXJhY3RlciBhcyB0bwoJCQkJCWRlZW0gaGltc2VsZiB3b3J0aHk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IsIGVtZW5kaW5nCgkJCQkJCXRoZSB0ZXh0LCAnYW5kIGlzIGFzIHdvcnRoeSBhcyBoZSBjbGFpbXMgdG8gYmUuJzwvbm90ZT46IGhlIGlzCgkJCQkJcHJhaXNld29ydGh5LCBhbmQgaGUgaXMgaW4gdGhlIG1pZGRsZSBiZXR3ZWVuIHRoZSB0d28uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBTaW5jZSwgdGhlcmVmb3JlLCBncmVhdG5lc3MKCQkJCQlvZiBzcGlyaXQgaXMgdGhlIGJlc3QgZGlzcG9zaXRpb24gaW4gcmVsYXRpb24gdG8gdGhlIGNob2ljZSBhbmQgdGhlCgkJCQkJZW1wbG95bWVudCBvZiBob25vciBhbmQgb2YgdGhlIG90aGVyIGdvb2QgdGhpbmdzIHRoYXQgYXJlIGVzdGVlbWVkLAoJCQkJCWFuZCBub3QgaW4gcmVsYXRpb24gdG8gdXNlZnVsIHRoaW5ncywgYW5kIHNpbmNlIHdlIGFzc2lnbiB0aGlzIHRvIHRoZQoJCQkJCWdyZWF0LXNwaXJpdGVkIG1hbiwgYW5kIHNpbmNlIGFsc28gYXQgdGhlIHNhbWUgdGltZSB0aGUgbWlkZGxlIHN0YXRlCgkJCQkJaXMgbW9zdCBwcmFpc2V3b3J0aHksIGl0IGlzIGNsZWFyIHRoYXQgZXZlbiBncmVhdG5lc3Mgb2Ygc3Bpcml0IG11c3QKCQkJCQliZSBhIG1pZGRsZSBzdGF0ZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjE2IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZAoJCQkJCW9mIHRoZSBvcHBvc2l0ZXMgYXMgc2hvd24gaW4gb3VyIGRpYWdyYW0sIHRoZSBvbmUgaW4gdGhlIGRpcmVjdGlvbiBvZgoJCQkJCWRlZW1pbmcgb25lc2VsZiB3b3J0aHkgb2YgZ3JlYXQgZ29vZHMgd2hlbiBvbmUgaXMgbm90IHdvcnRoeSBpcyB2YW5pdHkKCQkJCQkoZm9yIHRoZSBzb3J0IG9mIG1lbiB0aGF0IGZhbmN5IHRoZW1zZWx2ZXMgd29ydGh5IG9mIGdyZWF0IHRoaW5ncwoJCQkJCXRob3VnaCB0aGV5IGFyZSBub3Qgd2UgY2FsbCB2YWluKSwgYW5kIHRoZSBvbmUgdGhhdCBpcyBjb25jZXJuZWQgd2l0aAoJCQkJCW5vdCBkZWVtaW5nIG9uZXNlbGYgd29ydGh5IG9mIGdyZWF0IHRoaW5ncyB3aGVuIG9uZSBpcyB3b3J0aHkgb2YgdGhlbQoJCQkJCWlzIHNtYWxsbmVzcyBvZiBzcGlyaXQgKGZvciBpZiBhIG1hbiBkb2VzIG5vdCB0aGluayBoaW1zZWxmIHdvcnRoeSBvZgoJCQkJCWFueXRoaW5nIGdyZWF0IGFsdGhvdWdoIGhlIHBvc3Nlc3NlcyBxdWFsaXRpZXMgd2hpY2ggd291bGQganVzdGx5IG1ha2UKCQkJCQloaW0gY29uc2lkZXJlZCB3b3J0aHkgb2YgaXQsIGhlIGlzIHRob3VnaHQgc21hbGwtc3Bpcml0ZWQpOyBzbyB0aGF0IGl0CgkJCQkJZm9sbG93cyB0aGF0IGdyZWF0bmVzcyBvZiBzcGlyaXQgaXMgYSBtaWRkbGUgc3RhdGUgYmV0d2VlbiB2YW5pdHkgYW5kCgkJCQkJc21hbGxuZXNzIG9mIHNwaXJpdC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjE3IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dAoJCQkJCXRoZSBmb3VydGggb2YgdGhlIHBlcnNvbnMgaW4gb3VyIGNsYXNzaWZpY2F0aW9uIGlzIG5laXRoZXIgZW50aXJlbHkKCQkJCQlyZXByZWhlbnNpYmxlIG5vciBpcyBoZSBncmVhdCBzcGlyaXRlZCwgYXMgaGUgaXMgY29uY2VybmVkIHdpdGgKCQkJCQlub3RoaW5nIHBvc3Nlc3NpbmcgZ3JlYXRuZXNzLCBmb3IgaGUgbmVpdGhlciBpcyBub3IgdGhpbmtzIGhpbXNlbGYKCQkJCQl3b3J0aHkgb2YgZ3JlYXQgdGhpbmdzOyBvd2luZyB0byB3aGljaCBoZSBpcyBub3QgdGhlIG9wcG9zaXRlIG9mIHRoZQoJCQkJCW1hbiBvZiBncmVhdCBzcGlyaXQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPllldAoJCQkJCXRoaW5raW5nIG9uZXNlbGYgd29ydGh5IG9mIHNtYWxsIHRoaW5ncyB3aGVuIG9uZSBpcyB3b3J0aHkgb2Ygc21hbGwKCQkJCQl0aGluZ3MgbWlnaHQgYmUgdGhvdWdodCB0aGUgb3Bwb3NpdGUgb2YgdGhpbmtpbmcgb25lc2VsZiB3b3J0aHkgb2YKCQkJCQlncmVhdCBvbmVzIHdoZW4gb25lIGlzIHdvcnRoeSBvZiBncmVhdCBvbmVzOyA8L3RyYW5zbGF0aW9uPg=="
translation['3.1233b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBidXQgaGUgaXMgbm90IG9wcG9zaXRlIHRvIHRoZQoJCQkJCWdyZWF0LXNwaXJpdGVkIG1hbiBiZWNhdXNlIGhlIGlzIG5vdCBibGFtZXdvcnRoeSBlaXRoZXIsIGZvciBoaXMKCQkJCQljaGFyYWN0ZXIgaXMgYXMgcmVhc29uIGJpZHMsIGFuZCBpbiBuYXR1cmUgaGUgaXMgdGhlIHNhbWUgYXMgdGhlCgkJCQkJZ3JlYXQtc3Bpcml0ZWQgbWFuLCBmb3IgYm90aCBjbGFpbSBhcyB0aGVpciBkZXNlcnQgdGhlIHRoaW5ncyB0aGF0CgkJCQkJdGhleSBhcmUgd29ydGh5IG9mLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMTkiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQW5kCgkJCQkJaGUgbWlnaHQgYmVjb21lIGdyZWF0LXNwaXJpdGVkLCBmb3IgaGUgd2lsbCBjbGFpbSB0aGUgdGhpbmdzIHRoYXQgaGUKCQkJCQlpcyB3b3J0aHkgb2Y7IHdoZXJlYXMgdGhlIHNtYWxsLXNwaXJpdGVkIG1hbiwgd2hvIHdoZW4gZ3JlYXQgZ29vZHMKCQkJCQljb3JyZXNwb25kaW5nIHRvIGhpcyB3b3J0aCBhcmUgYXZhaWxhYmxlIGRvZXMgbm90IHRoaW5rIGhpbXNlbGYgd29ydGh5CgkJCQkJb2YgdGhlbeKAlHdoYXQgd291bGQgaGUgaGF2ZSBkb25lIGlmIGhpcyBkZXNlcnRzIHdlcmUgc21hbGw/CgkJCQkJRm9yIGVpdGhlciBoZSB3b3VsZCBoYXZlIGNvbmNlaXRlZGx5IHRob3VnaHQgaGltc2VsZiB3b3J0aHkgb2YgZ3JlYXQKCQkJCQl0aGluZ3MsIG9yIG9mIHN0aWxsIGxlc3MuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBNcy4KCQkJCQkJcmVhZGluZyBoYXJkbHkgZ2l2ZXMgYSBzZW5zZS4gQW4gZW1lbmRhdGlvbiBnaXZlcyAnZm9yIGlmIGhlCgkJCQkJCWNvbmNlaXRlZGx5IHRob3VnaHQgaGltc2VsZiB3b3J0aHkgb2YgZ3JlYXQgdGhpbmdzIHdoZW4KCQkJCQkJdW53b3J0aHksJyBhbmQgc3VwcG9zZXMgYSBnYXAgaW4gdGhlIHRleHQgYmVmb3JlIHRoZSBmb2xsb3dpbmcKCQkJCQkJd29yZHMuPC9ub3RlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4yMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBIZW5jZQoJCQkJCW5vYm9keSB3b3VsZCBjYWxsIGEgbWFuIHNtYWxsLXNwaXJpdGVkIGZvciBub3QgY2xhaW1pbmcgdG8gaG9sZCBvZmZpY2UKCQkJCQlhbmQgc3VibWl0dGluZyB0byBhdXRob3JpdHkgaWYgaGUgaXMgYSByZXNpZGVudCBhbGllbiwgYnV0IG9uZSB3b3VsZAoJCQkJCWRvIHNvIGlmIGhlIHdlcmUgb2Ygbm9ibGUgYmlydGggYW5kIGF0dGFjaGVkIGdyZWF0IGltcG9ydGFuY2UgdG8KCQkJCQlvZmZpY2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIE1hZ25pZmljZW50IE1hbiBhbHNvIChleGNlcHQgaW4gYSBjYXNlCgkJCQkJd2hlbiB3ZSBhcmUgdXNpbmcgdGhlIHRlcm0gbWV0YXBob3JpY2FsbHkpIGlzIG5vdCBjb25jZXJuZWQgd2l0aCBhbnkKCQkJCQlhbmQgZXZlcnkgYWN0aW9uIGFuZCBwdXJwb3NpdmUgY2hvaWNlLCBidXQgd2l0aCBleHBlbmRpdHVyZS4gV2l0aG91dAoJCQkJCWV4cGVuZGl0dXJlIHRoZXJlIGlzIG5vIG1hZ25pZmljZW5jZSwgZm9yIGl0IGlzIHdoYXQgaXMgYXBwcm9wcmlhdGUgaW4KCQkJCQlvcm5hbWVudCwgYW5kIG9ybmFtZW50IGRvZXMgbm90IHJlc3VsdCBmcm9tIGFueSBjaGFuY2UgZXhwZW5kaXR1cmUsCgkJCQkJYnV0IGNvbnNpc3RzIGluIGdvaW5nIGJleW9uZCB0aGUgbWVyZWx5IG5lY2Vzc2FyeS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGhlcmVmb3JlIHRoZSBtYWduaWZpY2VudCBtYW4KCQkJCQlpcyB0aGUgbWFuIHdobyBwdXJwb3NpdmVseSBjaG9vc2VzIHRoZSBhcHByb3ByaWF0ZSBncmVhdG5lc3MgaW4gZ3JlYXQKCQkJCQlleHBlbmRpdHVyZSwgYW5kIHdobyBldmVuIG9uIHRoZSBvY2Nhc2lvbiBvZiBhIHBsZWFzdXJlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgcHJvYmFibGUgZW1lbmRhdGlvbiBzdWJzdGl0dXRlcwoJCQkJCQknZXhwZW5kaXR1cmUnIGZvciAncGxlYXN1cmUuJzwvbm90ZT4gb2YgdGhpcyBuYXR1cmUgYWltcyBhdCB0aGlzCgkJCQkJc29ydCBvZiBtb2RlcmF0aW9uLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBUaGVyZQoJCQkJCWlzIG5vIG5hbWUgZGVub3RpbmcgdGhlIG1hbiB3aG8gbGlrZXMgc3BlbmRpbmcgdG8gZXhjZXNzIGFuZAoJCQkJCWluYXBwcm9wcmlhdGVseTsgaG93ZXZlciB0aGUgcGVyc29ucyB3aG9tIHNvbWUgcGVvcGxlIGNhbGwgdGFzdGVsZXNzCgkJCQkJYW5kIHN3YWdnZXJpbmcgaGF2ZSBhIGNlcnRhaW4gYWZmaW5pdHkgdG8gaGltLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgTXMuIHRleHQgZ2l2ZXMgJ2hlIGhhcyBhIGNlcnRhaW4gc2V0IG9mCgkJCQkJCW5laWdoYm9ycyB3aG9tIHNvbWUgcGVvcGxlIGNhbGwgLiAuIC4nOiBidXQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrPOtc65z4TOveG9t86xz4POuc+CPC9mb3JlaWduPiBpcyBhYnN0cmFjdCBhdCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQIj5BcmlzdG90LiBFdWQuIEV0aC4gMTIzMmEgMjE8L2JpYmw+IGFuZCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBQb2wuIDEuMTI1N2EuMiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gUG9sLiAxMjU3YSAyPC9iaWJsPi4gSXRzIGNvbmNyZXRlIHVzZSBpbiBsYXRlcgoJCQkJCQlHcmVlaywgJ25laWdoYm9yaG9vZCc9J3NldCBvZiBuZWlnaGJvcnMnIChQbHV0YXJjaCwgZXRjLikgaGFzCgkJCQkJCWxlZCB0byBjb3JydXB0aW9uIGhlcmUuPC9ub3RlPgoJCQkJCTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6zzrXOuc+Ezr3hvbfOsc+DzrnPgjwvZm9yZWlnbj4gaXMgYWJzdHJhY3QgYXQgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUCI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMzJhIDIxPC9iaWJsPiBhbmQgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gUG9sLiAxLjEyNTdhLjIiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIFBvbC4gMTI1N2EgMjwvYmlibD4uIEl0cyBjb25jcmV0ZSB1c2UgaW4gbGF0ZXIKCQkJCQkJR3JlZWssICduZWlnaGJvcmhvb2QnPSdzZXQgb2YgbmVpZ2hib3JzJyAoUGx1dGFyY2gsIGV0Yy4pIGhhcwoJCQkJCQlsZWQgdG8gY29ycnVwdGlvbiBoZXJlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjMzYiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1233b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkZvciBpbnN0YW5jZSBpZiBhIHJpY2ggbWFuIHNwZW5kaW5nIG1vbmV5IG9uCgkJCQkJdGhlIHdlZGRpbmcgb2YgYSBmYXZvcml0ZSB0aGlua3MgaXQgZml0dGluZyBmb3IgaGltIHRvIGhhdmUgdGhlIHNvcnQKCQkJCQlvZiBhcnJhbmdlbWVudHMgdGhhdCB3b3VsZCBiZSBmaXR0aW5nIHdoZW4gZW50ZXJ0YWluaW5nCgkJCQkJYWJzdGFpbmVycyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBwZXJzb25zIHdobwoJCQkJCQlvbmx5IGRyaW5rIHRoZSBmb3JtYWwgdG9hc3QgKCdIZXJlJ3MgdG8gR29vZCBMdWNrJyksIHdpdGggd2hpY2gKCQkJCQkJdGhlIGRpbm5lciBlbmRlZC48L25vdGU+IGhlIGlzIHNoYWJieSwgd2hpbGUgb25lIHdobyBlbnRlcnRhaW5zCgkJCQkJZ3Vlc3RzIG9mIHRoYXQgc29ydCBhZnRlciB0aGUgbWFubmVyIG9mIGEgd2VkZGluZyBmZWFzdCwgaWYgaGUgZG9lcwoJCQkJCW5vdCBkbyBpdCBmb3IgdGhlIHNha2Ugb2YgcmVwdXRhdGlvbiBvciB0byBnYWluIGFuIG9mZmljZSwgcmVzZW1ibGVzCgkJCQkJdGhlIHN3YWdnZXJlcjsgYnV0IGhlIHRoYXQgZW50ZXJ0YWlucyBzdWl0YWJseSBhbmQgYXMgcmVhc29uIGRpcmVjdHMKCQkJCQlpcyBtYWduaWZpY2VudCwgZm9yIHRoZSBmaXR0aW5nIGlzIHRoZSBzdWl0YWJsZSwgYXMgbm90aGluZyBpcyBmaXR0aW5nCgkJCQkJdGhhdCBpcyB1bnN1aXRhYmxlLiA8L3RyYW5zbGF0aW9uPg=="
translation['3.1233b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi40IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dAoJCQkJCWl0IG11c3QgYmUgZml0dGluZyBpbiBlYWNoIHBhcnRpY3VsYXIsIHRoYXQgaXMsIGluIHN1aXRhYmlsaXR5IHRvIHRoZQoJCQkJCWFnZW50IGFuZCB0byB0aGUgcmVjaXBpZW50IGFuZCB0byB0aGUgb2NjYXNpb27igJRmb3IgZXhhbXBsZSwKCQkJCQl3aGF0IGlzIGZpdHRpbmcgYXQgdGhlIHdlZGRpbmcgb2YgYSBzZXJ2YW50IGlzIG5vdCB3aGF0IGlzIGZpdHRpbmcgYXQKCQkJCQl0aGF0IG9mIGEgZmF2b3JpdGU7IGFuZCBpdCBpcyBmaXR0aW5nIGZvciB0aGUgYWdlbnQgaGltc2VsZiwgaWYgaXQgaXMKCQkJCQlvZiBhbiBhbW91bnQgb3IgcXVhbGl0eSBzdWl0YWJsZSB0byBoaW3igJRmb3IgZXhhbXBsZSBwZW9wbGUKCQkJCQl0aG91Z2h0IHRoYXQgdGhlIG1pc3Npb24gdGhhdCBUaGVtaXN0b2NsZXMgY29uZHVjdGVkIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsT2x5bXBpYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsT2x5bXBpYSI+T2x5bXBpYTwvcGxhY2VOYW1lPiB3YXMgbm90IGZpdHRpbmcgZm9yCgkJCQkJaGltLCBiZWNhdXNlIG9mIGhpcyBmb3JtZXIgbG93IHN0YXRpb24sIGJ1dCB3b3VsZCBoYXZlIGJlZW4gZm9yCgkJCQkJQ2ltb24uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBzdG9yeSBvZgoJCQkJCQlUaGVtaXN0b2NsZXMgYXQgdGhlIE9seW1waWMgZmVzdGl2YWwgaW5jdXJyaW5nIGRpc2FwcHJvdmFsIGJ5CgkJCQkJCXZ5aW5nIHdpdGggQ2ltb24gaW4gdGhlIHNwbGVuZG9yIG9mIGhpcyBlcXVpcG1lbnQgYW5kCgkJCQkJCWVudGVydGFpbm1lbnRzIGlzIHRvbGQgYnkgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iUGx1dC4gVGhlbS4gNSIgdmFsaWQ9InllcyI+UGx1dC4gVGhlbS4KCQkJCQkJCTU8L2JpYmw+Ljwvbm90ZT48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbHV0LiBUaGVtLiA1IiB2YWxpZD0ieWVzIj5QbHV0LiBUaGVtLgoJCQkJCQkJNTwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0CgkJCQkJaGUgd2hvIGlzIGNhc3VhbCBpbiByZWdhcmQgdG8gdGhlIHF1ZXN0aW9uIG9mIHN1aXRhYmlsaXR5IGlzIG5vdCBpbgoJCQkJCWFueSBvZiB0aGVzZSBjbGFzc2VzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TaW1pbGFybHkgaW4KCQkJCQlyZWdhcmQgdG8gbGliZXJhbGl0eTogYSBtYW4gbWF5IGJlIG5laXRoZXIgbGliZXJhbCBub3IKCQkJCQlpbGxpYmVyYWwuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+R2VuZXJhbGx5IHNwZWFraW5nIHRoZSBvdGhlciBwcmFpc2V3b3J0aHkKCQkJCQlhbmQgYmxhbWV3b3J0aHkgc3RhdGVzIG9mIGNoYXJhY3RlciBhbHNvIGFyZSBleGNlc3NlcyBvciBkZWZpY2llbmNpZXMKCQkJCQlvciBtaWRkbGUgc3RhdGVzLCBidXQgaW4gcmVzcGVjdCBvZiBhbiBlbW90aW9uOiBmb3IgaW5zdGFuY2UsIHRoZQoJCQkJCWVudmlvdXMgbWFuIGFuZCB0aGUgbWFsaWNpb3VzLiBGb3LigJR0byB0YWtlIHRoZSBzdGF0ZXMgb2YKCQkJCQljaGFyYWN0ZXIgYWZ0ZXIgd2hpY2ggdGhleSBhcmUgbmFtZWTigJQ8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+RW52eSBtZWFucyBiZWluZyBwYWluZWQgYXQgcGVvcGxlIHdobyBhcmUKCQkJCQlkZXNlcnZlZGx5IHByb3NwZXJvdXMsIHdoaWxlIHRoZSBlbW90aW9uIG9mIHRoZSBtYWxpY2lvdXMgbWFuIGlzCgkJCQkJaXRzZWxmIG5hbWVsZXNzLCBidXQgdGhlIHBvc3Nlc3NvciBvZiBpdCBpcyBzaG93biBieSBoaXMgZmVlbGluZyBqb3kKCQkJCQlhdCB1bmRlc2VydmVkIGFkdmVyc2l0aWVzOyA8L3RyYW5zbGF0aW9uPg=="
translation['3.1234a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IGFuZCBtaWR3YXkgYmV0d2VlbiB0aGVtIGlzIHRoZSByaWdodGVvdXNseSBpbmRpZ25hbnQgbWFuLCBhbmQgd2hhdAoJCQkJCXRoZSBhbmNpZW50cyBjYWxsZWQgUmlnaHRlb3VzIEluZGlnbmF0aW9u4oCUZmVlbGluZyBwYWluIGF0CgkJCQkJdW5kZXNlcnZlZCBhZHZlcnNpdGllcyBhbmQgcHJvc3Blcml0aWVzIGFuZCBwbGVhc3VyZSBhdCB0aG9zZSB0aGF0IGFyZQoJCQkJCWRlc2VydmVkOyBoZW5jZSB0aGUgaWRlYSB0aGF0IE5lbWVzaXMgaXMgYSBkZWl0eS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Nb2Rlc3R5IGlzIGEgbWlkZGxlIHN0YXRlIGJldHdlZW4gU2hhbWVsZXNzbmVzcyBhbmQgQmFzaGZ1bG5lc3M6IHRoZQoJCQkJCW1hbiB3aG8gcGF5cyByZWdhcmQgdG8gbm9ib2R5J3Mgb3BpbmlvbiBpcyBzaGFtZWxlc3MsIGhlIHdobyByZWdhcmRzCgkJCQkJZXZlcnlib2R5J3MgaXMgYmFzaGZ1bCwgaGUgd2hvIHJlZ2FyZHMgdGhlIG9waW5pb24gb2YgdGhvc2Ugd2hvIGFwcGVhcgoJCQkJCWdvb2QgaXMgbW9kZXN0LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy40IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZyaWVuZGxpbmVzcyBpcyBhIG1pZGRsZSBzdGF0ZSBiZXR3ZWVuCgkJCQkJQW5pbW9zaXR5IGFuZCBGbGF0dGVyeTsgdGhlIG1hbiB3aG8gYWNjb21tb2RhdGVzIGhpbXNlbGYgcmVhZGlseSB0bwoJCQkJCWhpcyBhc3NvY2lhdGVzJyBkZXNpcmVzIGluIGV2ZXJ5dGhpbmcgaXMgYSBmbGF0dGVyZXIsIGhlIHdobyBydW5zCgkJCQkJY291bnRlciB0byB0aGVtIGFsbCBzaG93cyBhbmltb3NpdHksIGhlIHdobyBuZWl0aGVyIGZhbGxzIGluIHdpdGggbm9yCgkJCQkJcmVzaXN0cyBldmVyeSBwbGVhc3VyZSwgYnV0IGZhbGxzIGluIHdpdGggd2hhdCBzZWVtcyB0byBiZSB0aGUgYmVzdCwKCQkJCQlpcyBmcmllbmRseS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5EaWduaXR5IGlzIGEgbWlkZGxlIHN0YXRlIGJldHdlZW4gU2VsZi13aWxsCgkJCQkJYW5kIE9ic2VxdWlvdXNuZXNzLiBBIG1hbiB3aG8gaW4gaGlzIGNvbmR1Y3QgcGF5cyBubyByZWdhcmQgYXQgYWxsIHRvCgkJCQkJYW5vdGhlciBidXQgaXMgY29udGVtcHR1b3VzIGlzIHNlbGYtd2lsbGVkOyBoZSB3aG8gcmVnYXJkcyBhbm90aGVyIGluCgkJCQkJZXZlcnl0aGluZyBhbmQgaXMgaW5mZXJpb3IgdG8gZXZlcnlib2R5IGlzIG9ic2VxdWlvdXM7IGhlIHdobyByZWdhcmRzCgkJCQkJYW5vdGhlciBpbiBzb21lIHRoaW5ncyBidXQgbm90IGluIG90aGVycywgYW5kIGlzIHJlZ2FyZGZ1bCBvZiBwZXJzb25zCgkJCQkJd29ydGh5IG9mIHJlZ2FyZCwgaXMgZGlnbmlmaWVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy42IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSB0cnV0aGZ1bCBhbmQgc2luY2VyZQoJCQkJCW1hbiwgY2FsbGVkICdkb3ducmlnaHQsJzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgbWFuCgkJCQkJCXdobyBjYWxscyBlYWNoIHRoaW5nIGl0c2VsZiwgaS5lLiB3aGF0IGl0IHJlYWxseSBpcywgY2FsbHMgYQoJCQkJCQlzcGFkZSBhIHNwYWRlLjwvbm90ZT4gaXMgbWlkd2F5IGJldHdlZW4gdGhlIGRpc3NlbWJsZXIgYW5kIHRoZQoJCQkJCWNoYXJsYXRhbi4gSGUgdGhhdCB3aXR0aW5nbHkgbWFrZXMgYSBmYWxzZSBzdGF0ZW1lbnQgYWdhaW5zdCBoaW1zZWxmCgkJCQkJdGhhdCBpcyBkZXByZWNpYXRvcnkgaXMgYSBkaXNzZW1ibGVyLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIzNGEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['3.1234a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmhlIHRoYXQKCQkJCQlleGFnZ2VyYXRlcyBoaXMgbWVyaXRzIGlzIGEgY2hhcmxhdGFuLCBoZSB0aGF0IHNwZWFrcyBvZiBoaW1zZWxmIGFzIGhlCgkJCQkJaXMgaXMgdHJ1dGhmdWwgYW5kIGluIEhvbWVyJ3MgcGhyYXNlICdzYWdhY2lvdXMnOyBhbmQgaW4gZ2VuZXJhbCB0aGUKCQkJCQlvbmUgaXMgYSBsb3ZlciBvZiB0cnV0aCBhbmQgdGhlIG90aGVycyBsb3ZlcnMgb2YgZmFsc2Vob29kLjwvdHJhbnNsYXRpb24+"
translation['3.1234a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy43IiB1bml0PSJMb2ViIGNoYXAiIC8+V2l0dGluZXNzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSB0ZXJtIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs614b2Qz4TPgeG9sc+AzrXOu86/z4I8L2ZvcmVpZ24+IG1lYW5zIGxpdGVyYWxseSAnYWJsZSB0byB0dXJuIGVhc2lseSwnCgkJCQkJCXZlcnNhdGlsZTsgaXQgZGVub3RlcyBib3RoICd3aXR0eScgYW5kICdlYXN5LWdvaW5nLic8L25vdGU+IGFsc28KCQkJCQlpcyBhIG1pZGRsZSBzdGF0ZSwgYW5kIHRoZSB3aXR0eSBtYW4gaXMgbWlkd2F5IGJldHdlZW4gdGhlIGJvb3Jpc2ggb3IKCQkJCQlzdGlmZiBtYW4gYW5kIHRoZSBidWZmb29uLiBGb3IganVzdCBhcyBpbiB0aGUgbWF0dGVyIG9mIGZvb2QgdGhlCgkJCQkJc3F1ZWFtaXNoIG1hbiBkaWZmZXJzIGZyb20gdGhlIG9tbml2b3JvdXMgaW4gdGhhdCB0aGUgZm9ybWVyIHRha2VzCgkJCQkJbm90aGluZyBvciBsaXR0bGUsIGFuZCB0aGF0IHJlbHVjdGFudGx5LCBhbmQgdGhlIGxhdHRlciBhY2NlcHRzCgkJCQkJZXZlcnl0aGluZyByZWFkaWx5LCBzbyB0aGUgYm9vciBzdGFuZHMgaW4gcmVsYXRpb24gdG8gdGhlIHZ1bGdhciBtYW4KCQkJCQlvciBidWZmb29u4oCUdGhlIGZvcm1lciB0YWtlcyBubyBqb2tlIGV4Y2VwdCB3aXRoIGRpZmZpY3VsdHksCgkJCQkJdGhlIGxhdHRlciBhY2NlcHRzIGV2ZXJ5dGhpbmcgZWFzaWx5IGFuZCB3aXRoIHBsZWFzdXJlLiBOZWl0aGVyIGNvdXJzZQoJCQkJCWlzIHJpZ2h0OiBvbmUgc2hvdWxkIGFsbG93IHNvbWUgdGhpbmdzIGFuZCBub3Qgb3RoZXJzLCBhbmQgb24KCQkJCQlwcmluY2lwbGUs4oCUdGhhdCBjb25zdGl0dXRlcyB0aGUgd2l0dHkgbWFuLiA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OteG9kM+Ez4HhvbHPgM61zrvOv8+CPC9mb3JlaWduPiBtZWFucyBsaXRlcmFsbHkgJ2FibGUgdG8gdHVybiBlYXNpbHksJwoJCQkJCQl2ZXJzYXRpbGU7IGl0IGRlbm90ZXMgYm90aCAnd2l0dHknIGFuZCAnZWFzeS1nb2luZy4nPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGhlIHByb29mIG9mIHRoZSBmb3JtdWxhIGlzCgkJCQkJdGhlIHNhbWUgYXMgaW4gdGhlIG90aGVyIGNhc2VzOiB3aXR0aW5lc3Mgb2YgdGhpcyBraW5kIChub3QgdGhlCgkJCQkJcXVhbGl0eTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5WaXouIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6yz4nOvM6/zrvOv8+H4b23zrE8L2ZvcmVpZ24+LCAnYnVmZm9vbmVyeSwnIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTI4YiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDExMjhhIDE1PC9iaWJsPi48L25vdGU+IHRvIHdoaWNoCgkJCQkJd2UgYXBwbHkgdGhlIHRlcm0gaW4gYSB0cmFuc2ZlcnJlZCBzZW5zZSkgaXMgYSB2ZXJ5IGJlY29taW5nIHNvcnQgb2YKCQkJCQljaGFyYWN0ZXIsIGFuZCBhbHNvIGEgbWlkZGxlIHN0YXRlIGlzIHByYWlzZXdvcnRoeSwgd2hlcmVhcyBleHRyZW1lcwoJCQkJCWFyZSBibGFtZXdvcnRoeS4gQnV0IGFzIHRoZXJlIGFyZSB0d28ga2luZHMgb2Ygd2l0IChvbmUgY29uc2lzdGluZyBpbgoJCQkJCWxpa2luZyBhIGpva2UsIGV2ZW4gb25lIHRoYXQgdGVsbHMgYWdhaW5zdCBvbmVzZWxmIGlmIGl0IGlzIGZ1bm55LCBmb3IKCQkJCQlpbnN0YW5jZSBhIGplZXIsIHRoZSBvdGhlciBpbiB0aGUgYWJpbGl0eSB0byBwcm9kdWNlIHRoaW5ncyBvZiB0aGlzCgkJCQkJc29ydCksIHRoZXNlIGtpbmRzIG9mIHdpdCBkaWZmZXIgZnJvbSBvbmUgYW5vdGhlciwgYnV0IGJvdGggYXJlIG1pZGRsZQoJCQkJCXN0YXRlczs8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Oss+JzrzOv867zr/Ph+G9t86xPC9mb3JlaWduPiwgJ2J1ZmZvb25lcnksJyA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBOaWMuIEV0aC4gMTEyOGIiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE5pYy4gRXRoLiAxMTI4YSAxNTwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['3.1234b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy45IiB1bml0PSJMb2ViIGNoYXAiIC8+IGZvciBhIG1hbiB3aG8gY2FuIHByb2R1Y2UKCQkJCQlqb2tlcyBvZiBhIHNvcnQgdGhhdCB3aWxsIGdpdmUgcGxlYXN1cmUgdG8gYSBwZXJzb24gb2YgZ29vZCBqdWRnZW1lbnQKCQkJCQlldmVuIHRob3VnaCB0aGUgbGF1Z2ggaXMgYWdhaW5zdCBoaW1zZWxmIHdpbGwgYmUgbWlkd2F5IGJldHdlZW4gdGhlCgkJCQkJdnVsZ2FyIG1hbiBhbmQgdGhlIGZyaWdpZC4gVGhpcyBpcyBhIGJldHRlciBkZWZpbml0aW9uIHRoYW4gdGhhdCB0aGUKCQkJCQl0aGluZyBzYWlkIG11c3Qgbm90IGJlIHBhaW5mdWwgdG8gdGhlIHZpY3RpbSB3aGF0ZXZlciBzb3J0IG9mIG1hbiBoZQoJCQkJCW1heSBiZeKAlHJhdGhlciwgaXQgbXVzdCBnaXZlIHBsZWFzdXJlIHRvIHRoZSBtYW4gaW4gdGhlCgkJCQkJbWlkZGxlIHBvc2l0aW9uLCBzaW5jZSBoaXMganVkZ2VtZW50IGlzIGdvb2QuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFsbCB0aGVzZSBtaWRkbGUgc3RhdGVzLCB0aG91Z2ggcHJhaXNld29ydGh5LCBhcmUgbm90IHZpcnR1ZXMsIG5vcgoJCQkJCWFyZSB0aGUgb3Bwb3NpdGUgc3RhdGVzIHZpY2VzLCBmb3IgdGhleSBkbyBub3QgaW52b2x2ZSBwdXJwb3NpdmUKCQkJCQljaG9pY2U7IHRoZXkgYXJlIGFsbCBpbiB0aGUgY2xhc3NpZmljYXRpb24gb2YgdGhlIGVtb3Rpb25zLCBmb3IgZWFjaAoJCQkJCW9mIHRoZW0gaXMgYW4gZW1vdGlvbi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJQnV0IGJlY2F1c2UgdGhleSBhcmUgbmF0dXJhbCB0aGV5IGNvbnRyaWJ1dGUgdG8gdGhlIG5hdHVyYWwgdmlydHVlczsKCQkJCQlmb3IsIGFzIHdpbGwgYmUgc2FpZCBpbiB3aGF0IGZvbGxvd3MsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk5vdCBpbiBFdWQuIEV0aCwgYnV0IGNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiAgICAgICAgTmljLiBFdGguIDExNDRiLjEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuCgkJCQkJCU5pYy4gRXRoLiAxMTQ0YiAxLTE3PC9iaWJsPi48L25vdGU+IGVhY2ggdmlydHVlIGV4aXN0cwoJCQkJCWJvdGggbmF0dXJhbGx5IGFuZCBvdGhlcndpc2UsIHRoYXQgaXMsIGluIGNvbmp1bmN0aW9uIHdpdGggdGhvdWdodC4KCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiAgICAgICAgTmljLiBFdGguIDExNDRiLjEiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuCgkJCQkJCU5pYy4gRXRoLiAxMTQ0YiAxLTE3PC9iaWJsPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjcuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGhlcmVmb3JlIGVudnkKCQkJCQljb250cmlidXRlcyB0byBpbmp1c3RpY2UgKGZvciB0aGUgYWN0aW9ucyB0aGF0IHNwcmluZyBmcm9tIGl0IGFmZmVjdAoJCQkJCWFub3RoZXIgcGVyc29uKSwgYW5kIHJpZ2h0ZW91cyBpbmRpZ25hdGlvbiB0byBqdXN0aWNlLCBhbmQgbW9kZXN0eSB0bwoJCQkJCXRlbXBlcmFuY2UgKG93aW5nIHRvIHdoaWNoIHBlb3BsZSBldmVuIGRlZmluZSB0ZW1wZXJhbmNlIGFzIGEgc3BlY2llcwoJCQkJCW9mIGVtb3Rpb24pLCBhbmQgdGhlIHNpbmNlcmUgYW5kIGZhbHNlIGFyZSByZXNwZWN0aXZlbHkgd2lzZSBhbmQKCQkJCQlmb29saXNoLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UcnV0aGZ1bG5lc3MgYW5kCgkJCQkJCW1lbmRhY2l0eSBjb250cmlidXRlIHRvIHdpc2RvbSBhbmQgZm9sbHkgYXMgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr3hvbPOvM61z4POuc+CPC9mb3JlaWduPiBhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4bOuOG9uc69zr/PgjwvZm9yZWlnbj4gZG8gdG8gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTOuc66zrHOuc6/z4PhvbvOvc63PC9mb3JlaWduPiBhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzrTOuc664b23zrE8L2ZvcmVpZ24+LCBhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrHhvLDOtOG9vc+CPC9mb3JlaWduPihhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzr3Osc65zrTOteG9t86xPC9mb3JlaWduPikgdG8gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4PPic+Gz4HOv8+D4b27zr3OtzwvZm9yZWlnbj4oYW5kIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gM66zr/Ou86xz4PhvbfOsTwvZm9yZWlnbj4pLjwvbm90ZT48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OveG9s868zrXPg865z4I8L2ZvcmVpZ24+IGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Phs644b25zr3Ov8+CPC9mb3JlaWduPiBkbyB0byA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OtM65zrrOsc65zr/Pg+G9u869zrc8L2ZvcmVpZ24+IGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDOtM65zrrhvbfOsTwvZm9yZWlnbj4sIGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OseG8sM604b29z4I8L2ZvcmVpZ24+KGFuZCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDOvc6xzrnOtM614b23zrE8L2ZvcmVpZ24+KSB0byA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Pg8+Jz4bPgc6/z4PhvbvOvc63PC9mb3JlaWduPihhbmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byAzrrOv867zrHPg+G9t86xPC9mb3JlaWduPikuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCB0aGUgbWVhbiBpcyBtb3JlCgkJCQkJb3Bwb3NlZCB0byB0aGUgZXh0cmVtZXMgdGhhbiB0aGUgZXh0cmVtZXMgYXJlIHRvIG9uZSBhbm90aGVyLAoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjM0YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['3.1234b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJlY2F1c2UgdGhlIG1lYW4gZG9lcyBub3Qgb2NjdXIgaW4KCQkJCQljb21iaW5hdGlvbiB3aXRoIGVpdGhlciBleHRyZW1lLCB3aGVyZWFzIHRoZSBleHRyZW1lcyBvZnRlbiBkbyBvY2N1cgoJCQkJCWluIGNvbWJpbmF0aW9uIHdpdGggb25lIGFub3RoZXIsIGFuZCBzb21ldGltZXMgdGhlIHNhbWUgbWVuIGFyZQoJCQkJCXZlbnR1cmVzb21lIGNvd2FyZHMsIG9yIGV4dHJhdmFnYW50IGluIHNvbWUgdGhpbmdzIGFuZCBpbGxpYmVyYWwgaW4KCQkJCQlvdGhlcnMsIGFuZCBpbiBnZW5lcmFsIG5vdCB1bmlmb3JtIGluIGEgYmFkIHdheeKAlDwvdHJhbnNsYXRpb24+"
translation['7.1234b.18'] = ""
translation['7.1234b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZyaWVuZHNoaXDigJRpdHMgbmF0dXJlCgkJCQkJYW5kIHF1YWxpdGllcywgd2hhdCBjb25zdGl0dXRlcyBhIGZyaWVuZCwgYW5kIHdoZXRoZXIgdGhlIHRlcm0KCQkJCQlmcmllbmRzaGlwIGhhcyBvbmUgb3Igc2V2ZXJhbCBtZWFuaW5ncyw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+YW5kIGlmIHNldmVyYWwsIGhvdyBtYW55LCBhbmQgYWxzbyB3aGF0IGlzCgkJCQkJb3VyIGR1dHkgdG93YXJkcyBhIGZyaWVuZCBhbmQgd2hhdCBhcmUgdGhlIGp1c3QgY2xhaW1zIG9mCgkJCQkJZnJpZW5kc2hpcOKAlGlzIGEgbWF0dGVyIHRoYXQgY2FsbHMgZm9yIGludmVzdGlnYXRpb24gbm8gbGVzcwoJCQkJCXRoYW4gYW55IG9mIHRoZSB0aGluZ3MgdGhhdCBhcmUgZmluZSBhbmQgZGVzaXJhYmxlIGluIG1lbidzCgkJCQkJY2hhcmFjdGVycy4gPC90cmFuc2xhdGlvbj4="
translation['7.1235a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IEZvciB0bwoJCQkJCXByb21vdGUgZnJpZW5kc2hpcCBpcyB0aG91Z2h0IHRvIGJlIHRoZSBzcGVjaWFsIHRhc2sgb2YgcG9saXRpY2FsCgkJCQkJc2NpZW5jZTsgYW5kIHBlb3BsZSBzYXkgdGhhdCBpdCBpcyBvbiB0aGlzIGFjY291bnQgdGhhdCBnb29kbmVzcyBpcyBhCgkJCQkJdmFsdWFibGUgdGhpbmcsIGZvciBwZXJzb25zIHdyb25nZnVsbHkgdHJlYXRlZCBieSBvbmUgYW5vdGhlciBjYW5ub3QKCQkJCQliZSBlYWNoIG90aGVyJ3MgZnJpZW5kcy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4KCQkJCQlGdXJ0aGVybW9yZSB3ZSBhbGwgc2F5IHRoYXQganVzdGljZSBhbmQgaW5qdXN0aWNlIGFyZSBjaGllZmx5CgkJCQkJZGlzcGxheWVkIHRvd2FyZHMgZnJpZW5kczsgaXQgaXMgdGhvdWdodCB0aGF0IGEgZ29vZCBtYW4gaXMgYSBmcmllbmRseQoJCQkJCW1hbiwgYW5kIHRoYXQgZnJpZW5kc2hpcCBpcyBhIHN0YXRlIG9mIHRoZSBtb3JhbCBjaGFyYWN0ZXI7IGFuZCBpZiBvbmUKCQkJCQl3aXNoZXMgdG8gbWFrZSBtZW4gbm90IGFjdCB1bmp1c3RseSwgaXQgaXMgZW5vdWdoIHRvIG1ha2UgdGhlbQoJCQkJCWZyaWVuZHMsIGZvciB0cnVlIGZyaWVuZHMgZG8gbm90IHdyb25nIG9uZSBhbm90aGVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgbmVpdGhlciB3aWxsIG1lbiBhY3QKCQkJCQl1bmp1c3RseSBpZiB0aGV5IGFyZSBqdXN0OyB0aGVyZWZvcmUganVzdGljZSBhbmQgZnJpZW5kc2hpcCBhcmUgZWl0aGVyCgkJCQkJdGhlIHNhbWUgb3IgbmVhcmx5IHRoZSBzYW1lIHRoaW5nLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS41IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluIGFkZGl0aW9uIHRvIHRoaXMsIHdlCgkJCQkJY29uc2lkZXIgYSBmcmllbmQgdG8gYmUgb25lIG9mIHRoZSBncmVhdGVzdCBnb29kcywgYW5kIGZyaWVuZGxlc3NuZXNzCgkJCQkJYW5kIHNvbGl0dWRlIGEgdmVyeSB0ZXJyaWJsZSB0aGluZywgYmVjYXVzZSB0aGUgd2hvbGUgb2YgbGlmZSBhbmQKCQkJCQl2b2x1bnRhcnkgYXNzb2NpYXRpb24gaXMgd2l0aCBmcmllbmRzOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIzNWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1235a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB3ZSBwYXNzCgkJCQkJb3VyIGRheXMgd2l0aCBvdXIgZmFtaWx5IG9yIHJlbGF0aW9ucyBvciBjb21yYWRlcywgY2hpbGRyZW4sIHBhcmVudHMKCQkJCQlvciB3aWZlLiA8L3RyYW5zbGF0aW9uPg=="
translation['7.1235a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS42IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBvdXIgcHJpdmF0ZQoJCQkJCXJpZ2h0cyBpbiByZWxhdGlvbiB0byBvdXIgZnJpZW5kcyBkZXBlbmQgb25seSBvbiBvdXJzZWx2ZXMsIHdoZXJlYXMKCQkJCQlvdXIgcmlnaHRzIGluIHJlbGF0aW9uIHRvIHRoZSByZXN0IG9mIG1lbiBhcmUgZXN0YWJsaXNoZWQgYnkgbGF3IGFuZAoJCQkJCWRvIG5vdCBkZXBlbmQgb24gdXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TWFueSBxdWVzdGlvbnMgYXJlIHJhaXNlZCBhYm91dAoJCQkJCWZyaWVuZHNoaXDigJRmaXJzdCwgb24gdGhlIGxpbmUgb2YgdGhvc2Ugd2hvIHRha2UgaW4gd2lkZXIKCQkJCQljb25zaWRlcmF0aW9ucyBhbmQgZXh0ZW5kIHRoZSB0ZXJtLiBGb3Igc29tZSBob2xkIHRoYXQgbGlrZSBpcyBmcmllbmQKCQkJCQl0byBsaWtlLCB3aGVuY2UgdGhlIHNheWluZ3M6PGNpdCBjbGFzcz0idHJhbnNsYXRpb24iPgoJCQkJCQk8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+CgkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPk1hcmsgaG93IEdvZCBldmVyIGJyaW5ncyBsaWtlIG1lbgoJCQkJCQkJCXRvZ2V0aGVyPC9sPgoJCQkJCQk8L3F1b3RlPgoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIE9kLiAxNy4yMTgiIHZhbGlkPSJ5ZXMiPkhvbS4gT2QuIDE3LjIxODwvYmlibD4KCQkJCQk8L2NpdD48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+CgkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPk1hcmsgaG93IEdvZCBldmVyIGJyaW5ncyBsaWtlIG1lbgoJCQkJCQkJCXRvZ2V0aGVyPC9sPgoJCQkJCQk8L3F1b3RlPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPk1hcmsgaG93IEdvZCBldmVyIGJyaW5ncyBsaWtlIG1lbgoJCQkJCQkJCXRvZ2V0aGVyPC9sPgoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIE9kLiAxNy4yMTgiIHZhbGlkPSJ5ZXMiPkhvbS4gT2QuIDE3LjIxODwvYmlibD4KCQkJCQk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSIgLz47IDxjaXQgY2xhc3M9InRyYW5zbGF0aW9uIj4KCQkJCQkJPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImlhbWJpYyI+Rm9yIGphY2tkYXcgYnkgdGhlIHNpZGUgb2YgamFja2RhdyAuIC4KCQkJCQkJCQkuPC9sPgoJCQkJCQk8L3F1b3RlPgoJCQkJCTwvY2l0PjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJpYW1iaWMiPkZvciBqYWNrZGF3IGJ5IHRoZSBzaWRlIG9mIGphY2tkYXcgLiAuCgkJCQkJCQkJLjwvbD4KCQkJCQkJPC9xdW90ZT4KCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iaWFtYmljIj5Gb3IgamFja2RhdyBieSB0aGUgc2lkZSBvZiBqYWNrZGF3IC4gLgoJCQkJCQkJCS48L2w+CgkJCQkJCTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4nQmlyZHMgb2YgYSBmZWF0aGVyIGZsb2NrCgkJCQkJCXRvZ2V0aGVyLicgU2MuIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8sc624b2xzr3Otc65PC9mb3JlaWduPiwKCQkJCQkJJ3BlcmNoZXMnOiBhbiBpYW1iaWMgdmVyc2UgcXVvdGVkIGluIGZ1bGwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTU0gMTIwOGIuOSI+QXJpc3RvdC4gR3RyLiBNb3IuIDEyMDhiIDk8L2JpYmw+LAoJCQkJCQlhbmQgaW4gdGhlIGZvcm0gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOv867zr/OueG9uM69IM+Azr/PhOG9tiDOus6/zrvOv8654b25zr08L2ZvcmVpZ24+CgkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTU1YSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDExNTVhIDM1PC9iaWJsPiwgd2hlcmUgdGhlCgkJCQkJCWRpYWxlY3Qgc3VnZ2VzdHMgdGhhdCBpdCBpcyBmcm9tIGEgRG9yaWMgcG9ldCAodW5rbm93bikuPC9ub3RlPjsKCQkJCQnigJxBbmQgdGhpZWYga25vd3MgdGhpZWYgYW5kIHdvbGYgaGlzIGZlbGxvdwoJCQkJCXdvbGYu4oCdPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4byxzrbhvbHOvc61zrk8L2ZvcmVpZ24+LAoJCQkJCQkncGVyY2hlcyc6IGFuIGlhbWJpYyB2ZXJzZSBxdW90ZWQgaW4gZnVsbCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBNTSAxMjA4Yi45Ij5BcmlzdG90LiBHdHIuIE1vci4gMTIwOGIgOTwvYmlibD4sCgkJCQkJCWFuZCBpbiB0aGUgZm9ybSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6/zrvOv8654b24zr0gz4DOv8+E4b22IM66zr/Ou86/zrnhvbnOvTwvZm9yZWlnbj4KCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDExNTVhIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTE1NWEgMzU8L2JpYmw+LCB3aGVyZSB0aGUKCQkJCQkJZGlhbGVjdCBzdWdnZXN0cyB0aGF0IGl0IGlzIGZyb20gYSBEb3JpYyBwb2V0ICh1bmtub3duKS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+J1NldCBhIHRoaWVmCgkJCQkJCXRvIGNhdGNoIGEgdGhpZWYuJyBUaGUgb3JpZ2luIG9mIHRoZSB2ZXJzZSBpcwoJCQkJCQl1bmtub3duLjwvbm90ZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgdGhlIG5hdHVyYWwgcGhpbG9zb3BoZXJzCgkJCQkJZXZlbiBhcnJhbmdlIHRoZSB3aG9sZSBvZiBuYXR1cmUgaW4gYSBzeXN0ZW0gYnkgYXNzdW1pbmcgYXMgYSBmaXJzdAoJCQkJCXByaW5jaXBsZSB0aGF0IGxpa2UgZ29lcyB0byBsaWtlLCBvd2luZyB0byB3aGljaCBFbXBlZG9jbGVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk15c3RpYyBwaGlsb3NvcGhlciwgbWFuIG9mIHNjaWVuY2UKCQkJCQkJYW5kIHN0YXRlc21hbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzgwOCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAzODA4Ij5BZ3JpZ2VudHVtPC9wbGFjZU5hbWU+LCBmbC4gPGRhdGUgYXV0aG5hbWU9Ii00OTAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdmFsdWU9Ii00OTAiPjQ5MDwvZGF0ZT4KCQkJCQkJQi5DLjwvbm90ZT4gc2FpZCB0aGF0IHRoZSBkb2cgc2l0cyBvbiB0aGUgdGlsaW5nIGJlY2F1c2UgaXQgaXMgbW9zdAoJCQkJCWxpa2UgaGltLjxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAzODA4IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDM4MDgiPkFncmlnZW50dW08L3BsYWNlTmFtZT4sIGZsLiA8ZGF0ZSBhdXRobmFtZT0iLTQ5MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQ5MCI+NDkwPC9kYXRlPgoJCQkJCQlCLkMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlByZXN1bWFibHksIGxpa2UgaW4KCQkJCQkJY29sb3I7IHRydWUgb2YgR3JlZWsgZG9ncyB0b2RheS4gRW1wZWRvY2xlcyBkb2VzIG5vdCBhcHBlYXIgdG8KCQkJCQkJaGF2ZSBnb25lIG9uIHRvIGluZmVyIHByb3RlY3RpdmUgbWltaWNyeS48L25vdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U29tZSBwZW9wbGUgdGhlbiBnaXZlIHRoaXMgYWNjb3VudCBvZiBhIGZyaWVuZDsgYnV0IG90aGVycyBzYXkgdGhhdAoJCQkJCW9wcG9zaXRlIGlzIGRlYXIgdG8gb3Bwb3NpdGUsIHNpbmNlIGl0IGlzIHdoYXQgaXMgbG92ZWQgYW5kIGRlc2lyZWQKCQkJCQl0aGF0IGlzIGRlYXIgdG8gZXZlcnlib2R5LCBhbmQgdGhlIGRyeSBkb2VzIG5vdCBkZXNpcmUgdGhlIGRyeSBidXQgdGhlCgkJCQkJd2V0ICh3aGVuY2UgdGhlIHNheWluZ3PigJQiRWFydGggbG92ZXRoIHJhaW4sIjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5RdW90ZWQgYXMgZnJvbSBFdXJpcGlkZXMsIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlAiPkFyaXN0b3QuIE5pYy4gRXRoLiAxMTU0YSAzNDwvYmlibD47IHRoZSBwbGF5IGlzIG5vdAoJCQkJCQlrbm93bi48L25vdGU+IGFuZCAiSW4gYWxsIHRoaW5ncyBjaGFuZ2UgaXMKCQkJCQlzd2VldOKAlCI8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQIj5BcmlzdG90LiBOaWMuIEV0aC4gMTE1NGEgMzQ8L2JpYmw+OyB0aGUgcGxheSBpcyBub3QKCQkJCQkJa25vd24uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkV1ci4gT3Jlc3QuIDIzNCIgdmFsaWQ9InllcyI+RXVyLiBPcmVzdC4gMjM0PC9iaWJsPi48L25vdGU+IGNoYW5nZSBiZWluZyB0cmFuc2l0aW9uIHRvCgkJCQkJdGhlIG9wcG9zaXRlKSwgd2hlcmVhcyBsaWtlIGhhdGVzIGxpa2UsIGZvciAiUG90dGVyIGFnYWluc3QgcG90dGVyIGhhcwoJCQkJCWEgZ3J1ZGdlLCI8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJFdXIuIE9yZXN0LiAyMzQiIHZhbGlkPSJ5ZXMiPkV1ci4gT3Jlc3QuIDIzNDwvYmlibD4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49Ikhlcy4gV0QgMjUiIHZhbGlkPSJ5ZXMiPkhlcy4gV0QKCQkJCQkJMjU8L2JpYmw+ICgnVHdvIG9mIGEgdHJhZGUgbmV2ZXIgYWdyZWUnKS48L25vdGU+IGFuZCBhbmltYWxzCgkJCQkJdGhhdCBsaXZlIG9uIHRoZSBzYW1lIGZvb2QgYXJlIGhvc3RpbGUgdG8gb25lIGFub3RoZXIuPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGVzLiBXRCAyNSIgdmFsaWQ9InllcyI+SGVzLiBXRAoJCQkJCQkyNTwvYmlibD4gKCdUd28gb2YgYSB0cmFkZSBuZXZlciBhZ3JlZScpLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1235b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBUaGVzZSBvcGluaW9ucywgdGhlcmVmb3JlLCBhcmUgdGh1cyB3aWRlbHkKCQkJCQl2YXJpYW50LiBPbmUgcGFydHkgdGhpbmtzIHRoYXQgdGhlIGxpa2UgaXMgZnJpZW5kIGFuZCB0aGUgb3Bwb3NpdGUgZm9l4oCUPGNpdCBjbGFzcz0idHJhbnNsYXRpb24iPgoJCQkJCQk8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+CgkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iaWFtYmljIj5UaGUgbGVzcyBpcyByb290ZWQgZW5lbXkgdG8gdGhlIG1vcmU8L2w+CgkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPkZvciBldmVyLCBhbmQgYmVnaW5zIHRoZSBkYXkgb2YgaGF0ZSw8L2w+CgkJCQkJCTwvcXVvdGU+CgkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkV1ci4gUGhvZW4uIDUzOSIgdmFsaWQ9InllcyI+RXVyLiBQaG9lbi4gNTM5Zi48L2JpYmw+CgkJCQkJPC9jaXQ+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImlhbWJpYyI+VGhlIGxlc3MgaXMgcm9vdGVkIGVuZW15IHRvIHRoZSBtb3JlPC9sPgoJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5Gb3IgZXZlciwgYW5kIGJlZ2lucyB0aGUgZGF5IG9mIGhhdGUsPC9sPgoJCQkJCQk8L3F1b3RlPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iaWFtYmljIj5UaGUgbGVzcyBpcyByb290ZWQgZW5lbXkgdG8gdGhlIG1vcmU8L2w+CgkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPkZvciBldmVyLCBhbmQgYmVnaW5zIHRoZSBkYXkgb2YgaGF0ZSw8L2w+CgkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkV1ci4gUGhvZW4uIDUzOSIgdmFsaWQ9InllcyI+RXVyLiBQaG9lbi4gNTM5Zi48L2JpYmw+CgkJCQkJPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPgoJCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDPh864z4E9zrHPgiDhvKHOvOG9s8+BzrHPgjwvZm9yZWlnbj49IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8lM+HzrjPgc6xz4I8L2ZvcmVpZ24+LCBjZi4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTOv+G9u867zrnOv869IOG8ps68zrHPgTwvZm9yZWlnbj49IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs60zr/Phc67zrXhvbfOsTwvZm9yZWlnbj4sIFBhbGV5Ljwvbm90ZT48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJDPh864z4E9zrHPgiDhvKHOvOG9s8+BzrHPgjwvZm9yZWlnbj49IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8lM+HzrjPgc6xz4I8L2ZvcmVpZ24+LCBjZi4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrTOv+G9u867zrnOv869IOG8ps68zrHPgTwvZm9yZWlnbj49IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs60zr/Phc67zrXhvbfOsTwvZm9yZWlnbj4sIFBhbGV5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5hbmQgbW9yZW92ZXIKCQkJCQlhZHZlcnNhcmllcyBhcmUgc2VwYXJhdGVkIGluIGxvY2FsaXR5LCB3aGVyZWFzIGZyaWVuZHNoaXAgc2VlbXMgdG8KCQkJCQlicmluZyBtZW4gdG9nZXRoZXIuIFRoZSBvdGhlciBwYXJ0eSBzYXkgdGhhdCBvcHBvc2l0ZXMgYXJlIGZyaWVuZHMsCgkJCQkJYW5kIEhlcmFjbGVpdHVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBuYXR1cmFsCgkJCQkJCXBoaWxvc29waGVyIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRXBoZXNvcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRXBoZXNvcyI+RXBoZXN1czwvcGxhY2VOYW1lPiwKCQkJCQkJZmwuIGVuZCBvZiA2dGggY2VudC4gQi5DLjwvbm90ZT4gcmVidWtlcyB0aGUgcG9ldCB3aG8gd3JvdGXigJQ8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEVwaGVzb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEVwaGVzb3MiPkVwaGVzdXM8L3BsYWNlTmFtZT4sCgkJCQkJCWZsLiBlbmQgb2YgNnRoIGNlbnQuIEIuQy48Y2l0IGNsYXNzPSJ0cmFuc2xhdGlvbiI+CgkJCQkJCQk8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+CgkJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5Xb3VsZCBzdHJpZmUgbWlnaHQgcGVyaXNoIG91dCBvZiBoZWF2ZW4KCQkJCQkJCQkJYW5kIGVhcnRoLDwvbD4KCQkJCQkJCTwvcXVvdGU+CgkJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAxOC4xMDciIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDE4LjEwNzwvYmlibD4KCQkJCQkJPC9jaXQ+IGZvciwgaGUgc2F5cywgdGhlcmUgd291bGQgYmUgbm8gaGFybW9ueSB3aXRob3V0IGhpZ2ggYW5kIGxvdwoJCQkJCW5vdGVzLCBhbmQgbm8gYW5pbWFscyB3aXRob3V0IG1hbGUgYW5kIGZlbWFsZSwgd2hpY2ggYXJlCgkJCQkJb3Bwb3NpdGVzLjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPldvdWxkIHN0cmlmZSBtaWdodCBwZXJpc2ggb3V0IG9mIGhlYXZlbgoJCQkJCQkJCQlhbmQgZWFydGgsPC9sPgoJCQkJCQkJPC9xdW90ZT4KCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+V291bGQgc3RyaWZlIG1pZ2h0IHBlcmlzaCBvdXQgb2YgaGVhdmVuCgkJCQkJCQkJCWFuZCBlYXJ0aCw8L2w+CgkJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAxOC4xMDciIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDE4LjEwNzwvYmlibD4KCQkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlLCB0aGVuLCBhcmUgdHdvIG9waW5pb25zCgkJCQkJYWJvdXQgZnJpZW5kc2hpcCwgYW5kIGJlaW5nIHNvIHdpZGVseSBzZXBhcmF0ZWQgdGhleSBhcmUgdG9vCgkJCQkJZ2VuZXJhbDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIGJlaW5nIHNvCgkJCQkJCWFic29sdXRlbHkgb3Bwb3NpdGUgdG8gb25lIGFub3RoZXIsIHRoZXkgYXJlIHRvbyBzd2VlcGluZywgYW5kCgkJCQkJCWRvIG5vdCByZWFsbHkgY29ycmVzcG9uZCB3aXRoIHRoZSBmYWN0cy48L25vdGU+OyBidXQgdGhlcmUgYXJlCgkJCQkJb3RoZXJzIHRoYXQgYXJlIGNsb3NlciB0b2dldGhlciBhbmQgbW9yZSBha2luIHRvIHRoZSBmYWN0cyBvZgoJCQkJCW9ic2VydmF0aW9uLiBTb21lIHBlcnNvbnMgdGhpbmsgdGhhdCBpdCBpcyBub3QgcG9zc2libGUgZm9yIGJhZCBtZW4gdG8KCQkJCQliZSBmcmllbmRzLCBidXQgb25seSBmb3IgdGhlIGdvb2QuIE90aGVycyB0aGluayBpdCBzdHJhbmdlIHRoYXQKCQkJCQltb3RoZXJzIHNob3VsZCBub3QgbG92ZSB0aGVpciBvd24gY2hpbGRyZW4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+IChhbmQgbWF0ZXJuYWwgYWZmZWN0aW9uIHdlIHNlZSBleGlzdGluZyBldmVuCgkJCQkJYW1vbmcgYW5pbWFsc+KAlGF0IGxlYXN0LCBhbmltYWxzIGNob29zZSB0byBkaWUgZm9yIHRoZWlyCgkJCQkJeW91bmcpLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gT3RoZXJzIGhvbGQgdGhhdAoJCQkJCW9ubHkgd2hhdCBpcyB1c2VmdWwgaXMgYSBmcmllbmQsIHRoZSBwcm9vZiBiZWluZyB0aGF0IGFsbCBtZW4gYWN0dWFsbHkKCQkJCQlkbyBwdXJzdWUgdGhlIHVzZWZ1bCwgYW5kIGRpc2NhcmQgd2hhdCBpcyB1c2VsZXNzIGV2ZW4gaW4gdGhlaXIgb3duCgkJCQkJcGVyc29ucyAoYXMgdGhlIG9sZCBTb2NyYXRlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4KCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDEuMTIxNmIuMyIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMTZiIDM8L2JpYmw+Ljwvbm90ZT4gdXNlZAoJCQkJCXRvIHNheSwgaW5zdGFuY2luZyBzcGl0dGxlLCBoYWlyIGFuZCBuYWlscyksIGFuZCB0aGF0IHdlIHRocm93IGF3YXkKCQkJCQlldmVuIHBhcnRzIG9mIHRoZSBib2R5IHRoYXQgYXJlIG9mIG5vIHVzZSwgYW5kIGZpbmFsbHkgdGhlIGJvZHkKCQkJCQlpdHNlbGYsIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAxLjEyMTZiLjMiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjE2YiAzPC9iaWJsPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIzNWIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1235b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPndoZW4gaXQgZGllcywgYXMgYSBjb3Jwc2UgaXMKCQkJCQl1c2VsZXNz4oCUYnV0IHBlb3BsZSB0aGF0IGhhdmUgYSB1c2UgZm9yIGl0IGtlZXAgaXQsIGFzIGluCgkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTY4MzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxNjgzMyI+RWd5cHQ8L3BsYWNlTmFtZT4uIDwvdHJhbnNsYXRpb24+"
translation['7.1235b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBOb3cgYWxsIHRoZXNlIGZhY3RvcnM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBsaWtlbmVzcywgY29udHJhcmlldHksCgkJCQkJCXV0aWxpdHkgKFNvbG9tb24pLjwvbm90ZT4gc2VlbSB0byBiZSBzb21ld2hhdCBvcHBvc2VkIHRvIG9uZQoJCQkJCWFub3RoZXIuIEZvciBsaWtlIGlzIG9mIG5vIHVzZSB0byBsaWtlIGFuZCBvcHBvc2l0aW9uIGlzIGZhcnRoZXN0CgkJCQkJcmVtb3ZlZCBmcm9tIGxpa2VuZXNzLCBhbmQgYXQgdGhlIHNhbWUgdGltZSBvcHBvc2l0ZSBpcyBtb3N0IHVzZWxlc3MKCQkJCQl0byBvcHBvc2l0ZSwgc2luY2Ugb3Bwb3NpdGUgaXMgZGVzdHJ1Y3RpdmUgb2Ygb3Bwb3NpdGUuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBNb3Jlb3ZlciBzb21lIHRoaW5rIHRoYXQgdG8KCQkJCQlnYWluIGEgZnJpZW5kIGlzIGVhc3ksIGJ1dCBvdGhlcnMgdGhhdCBpdCBpcyB0aGUgcmFyZXN0IHRoaW5nIHRvCgkJCQkJcmVjb2duaXplIGEgZnJpZW5kLCBhbmQgbm90IHBvc3NpYmxlIHdpdGhvdXQgbWlzZm9ydHVuZSwgYXMgZXZlcnlib2R5CgkJCQkJd2FudHMgdG8gYmUgdGhvdWdodCBhIGZyaWVuZCBvZiB0aGUgcHJvc3Blcm91czsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxLjE3IiB1bml0PSJMb2ViIGNoYXAiIC8+IGFuZCBvdGhlcnMgbWFpbnRhaW4gdGhhdCB3ZQoJCQkJCW11c3Qgbm90IHRydXN0IGV2ZW4gdGhvc2Ugd2hvIHN0YXkgd2l0aCB1cyBpbiBvdXIgbWlzZm9ydHVuZXMsIGJlY2F1c2UKCQkJCQl0aGV5IGFyZSBkZWNlaXZpbmcgdXMgYW5kIHByZXRlbmRpbmcsIGluIG9yZGVyIHRoYXQgYnkgYXNzb2NpYXRpbmcKCQkJCQl3aXRoIHVzIHdoZW4gdW5mb3J0dW5hdGUgdGhleSBtYXkgZ2FpbiBvdXIgZnJpZW5kc2hpcCB3aGVuIHdlIGFyZQoJCQkJCWFnYWluIHByb3NwZXJvdXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QWNjb3JkaW5nbHkgYSBsaW5lIG9mIGFyZ3VtZW50CgkJCQkJbXVzdCBiZSB0YWtlbiB0aGF0IHdpbGwgYmVzdCBleHBsYWluIHRvIHVzIHRoZSB2aWV3cyBoZWxkIG9uIHRoZXNlCgkJCQkJbWF0dGVycyBhbmQgYXQgdGhlIHNhbWUgdGltZSBzb2x2ZSB0aGUgZGlmZmljdWx0aWVzIGFuZAoJCQkJCWNvbnRyYWRpY3Rpb25zLiBBbmQgdGhpcyB3aWxsIGJlIHNlY3VyZWQgaWYgdGhlIGNvbnRyYWRpY3Rvcnkgdmlld3MKCQkJCQlhcmUgc2hvd24gdG8gYmUgaGVsZCB3aXRoIHNvbWUgcmVhc29uLiBGb3Igc3VjaCBhIGxpbmUgb2YgYXJndW1lbnQKCQkJCQl3aWxsIGJlIG1vc3QgaW4gYWdyZWVtZW50IHdpdGggdGhlIG9ic2VydmVkIGZhY3RzOiBhbmQgaW4gdGhlIHVwc2hvdCwKCQkJCQlpZiB3aGF0IGlzIHNhaWQgaXMgdHJ1ZSBpbiBvbmUgc2Vuc2UgYnV0IG5vdCB0cnVlIGluIGFub3RoZXIsIGJvdGggdGhlCgkJCQkJY29udHJhZGljdG9yeSB2aWV3cyBzdGFuZCBnb29kLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXJlIGlzIGFsc28gYSBxdWVzdGlvbgoJCQkJCWFzIHRvIHdoZXRoZXIgd2hhdCBpcyBkZWFyIHRvIHVzIGlzIHRoZSBwbGVhc2FudCBvciB0aGUKCQkJCQlnb29kLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5JZiB3ZSBob2xkIGRlYXIKCQkJCQl3aGF0IHdlIGRlc2lyZSAoYW5kIHRoYXQgaXMgc3BlY2lhbGx5IGNoYXJhY3RlcmlzdGljIG9mIGxvdmUsIGZvcgoJCQkJCSJOb25lIGlzIGEgbG92ZXIgdGhhdCBob2xkcyBub3QgZGVhciBmb3IgYXllIjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJFdXIuIFRyby4gMTA1MSIgdmFsaWQ9InllcyI+RXVyLiBUcm8uIDEwNTE8L2JpYmw+Ljwvbm90ZT4pLCBhbmQKCQkJCQlkZXNpcmUgaXMgZm9yIHdoYXQgaXMgcGxlYXNhbnQsIG9uIHRoaXMgc2hvd2luZyBpdCBpcyB0aGUgcGxlYXNhbnQKCQkJCQl0aGF0IGlzIGRlYXI7IHdoZXJlYXMgaWYgd2UgaG9sZCBkZWFyIHdoYXQgd2Ugd2lzaCwgaXQgaXMgdGhlIGdvb2Q7CgkJCQkJYnV0IHRoZSBwbGVhc2FudCBhbmQgdGhlIGdvb2QgYXJlIGRpZmZlcmVudCB0aGluZ3MuPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRXVyLiBUcm8uIDEwNTEiIHZhbGlkPSJ5ZXMiPkV1ci4gVHJvLiAxMDUxPC9iaWJsPi48L3RyYW5zbGF0aW9uPg=="
translation['7.1236a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldlIG11c3QgdGhlcmVmb3JlIGF0dGVtcHQgdG8gZGVjaWRlIGFib3V0IHRoZXNlIG1hdHRlcnMgYW5kIG90aGVycwoJCQkJCWFraW4gdG8gdGhlbSwgdGFraW5nIGFzIGEgc3RhcnRpbmcgcG9pbnQgdGhlIGZvbGxvd2luZy4gVGhlIHRoaW5nCgkJCQkJZGVzaXJlZCBhbmQgd2lzaGVkIGlzIGVpdGhlciB0aGUgZ29vZCBvciB0aGUgYXBwYXJlbnQgZ29vZC4gVGhlcmVmb3JlCgkJCQkJYWxzbyB0aGUgcGxlYXNhbnQgaXMgZGVzaXJlZCwgZm9yIGl0IGlzIGFuIGFwcGFyZW50IGdvb2QsIHNpbmNlIHNvbWUKCQkJCQlwZW9wbGUgdGhpbmsgaXQgZ29vZCwgYW5kIHRvIG90aGVycyBpdCBhcHBlYXJzIGdvb2QgZXZlbiB0aG91Z2ggdGhleQoJCQkJCWRvIG5vdCB0aGluayBpdCBzbyAoYXMgYXBwZWFyYW5jZSBhbmQgb3BpbmlvbiBhcmUgbm90IGluIHRoZSBzYW1lIHBhcnQKCQkJCQlvZiB0aGUgc3Bpcml0KS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBhcmUgZGlmZmVyZW50CgkJCQkJCXBzeWNob2xvZ2ljYWwgZXhwZXJpZW5jZXMuPC9ub3RlPiBZZXQgaXQgaXMgY2xlYXIgdGhhdCBib3RoIHRoZQoJCQkJCWdvb2QgYW5kIHRoZSBwbGVhc2FudCBhcmUgZGVhci48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGlzIGJlaW5nIGRlY2lkZWQsIHdlCgkJCQkJbXVzdCBtYWtlIGFub3RoZXIgYXNzdW1wdGlvbi4gVGhpbmdzIGdvb2QgYXJlIHNvbWUgb2YgdGhlbSBhYnNvbHV0ZWx5CgkJCQkJZ29vZCwgb3RoZXJzIGdvb2QgZm9yIHNvbWVvbmUgYnV0IG5vdCBnb29kIGFic29sdXRlbHk7IGFuZCB0aGUgc2FtZQoJCQkJCXRoaW5ncyBhcmUgYWJzb2x1dGVseSBnb29kIGFuZCBhYnNvbHV0ZWx5IHBsZWFzYW50LiBGb3IgdGhpbmdzCgkJCQkJYWR2YW50YWdlb3VzIGZvciBhIGhlYWx0aHkgYm9keSB3ZSBwcm9ub3VuY2UgZ29vZCBmb3IgdGhlIGJvZHkKCQkJCQlhYnNvbHV0ZWx5LCBidXQgdGhpbmdzIGdvb2QgZm9yIGEgc2ljayBib2R5IG5vdOKAlGZvciBleGFtcGxlCgkJCQkJZG9zZXMgb2YgbWVkaWNpbmUgYW5kIHN1cmdpY2FsIG9wZXJhdGlvbnM7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+IGFuZCBsaWtld2lzZSBhbHNvIHRoZSB0aGluZ3MgcGxlYXNhbnQgZm9yIGEKCQkJCQloZWFsdGh5IGFuZCBwZXJmZWN0IGJvZHkgYXJlIHBsZWFzYW50IGZvciB0aGUgYm9keSBhYnNvbHV0ZWx5LCBmb3IKCQkJCQlleGFtcGxlIHRvIGxpdmUgaW4gdGhlIGxpZ2h0IGFuZCBub3QgaW4gdGhlIGRhcmssIGFsdGhvdWdoIHRoZSByZXZlcnNlCgkJCQkJaXMgdGhlIGNhc2UgZm9yIGEgbWFuIHdpdGggb3BodGhhbG1pYS4gQW5kIHRoZSBwbGVhc2FudGVyIHdpbmUgaXMgbm90CgkJCQkJdGhlIHdpbmUgcGxlYXNhbnQgdG8gYSBtYW4gd2hvc2UgcGFsYXRlIGhhcyBiZWVuIGNvcnJ1cHRlZCBieQoJCQkJCXRpcHBsaW5nLCBzaW5jZSBzb21ldGltZXMgdGhleSBwb3VyIGluIGEgZGFzaCBvZiB2aW5lZ2FyLCBidXQgdG8gdGhlCgkJCQkJdW5jb3JydXB0ZWQgdGFzdGUuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjM2YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1236a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1236a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi42IiB1bml0PSJMb2ViIGNoYXAiIC8+QW5kIHNpbWlsYXJseSBhbHNvIGluIHRoZSBjYXNlIG9mIHRoZSBzcGlyaXQsCgkJCQkJdGhlIHJlYWxseSBwbGVhc2FudCB0aGluZ3MgYXJlIG5vdCB0aG9zZSBwbGVhc2FudCB0byBjaGlsZHJlbiBhbmQKCQkJCQlhbmltYWxzLCBidXQgdGhvc2UgcGxlYXNhbnQgdG8gdGhlIGFkdWx0OyBhdCBsZWFzdCBpdCBpcyB0aGVzZSB0aGF0IHdlCgkJCQkJcHJlZmVyIHdoZW4gd2UgcmVtZW1iZXIgYm90aC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQW5kIGFzIGEgY2hpbGQgb3IgYW5pbWFsIHN0YW5kcyB0byBhbiBhZHVsdCBodW1hbgoJCQkJCWJlaW5nLCBzbyB0aGUgYmFkIGFuZCBmb29saXNoIG1hbiBzdGFuZHMgdG8gdGhlIGdvb2QgYW5kIHdpc2UgbWFuOyBhbmQKCQkJCQl0aGVzZSB0YWtlIHBsZWFzdXJlIGluIHRoaW5ncyB0aGF0IGNvcnJlc3BvbmQgdG8gdGhlaXIgY2hhcmFjdGVycywgYW5kCgkJCQkJdGhlc2UgYXJlIHRoaW5ncyBnb29kIGFuZCBmaW5lLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi44IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlNpbmNlIHRoZXJlZm9yZSBnb29kIGlzCgkJCQkJYSB0ZXJtIG9mIG1vcmUgdGhhbiBvbmUgbWVhbmluZyAoZm9yIHdlIGNhbGwgb25lIHRoaW5nIGdvb2QgYmVjYXVzZQoJCQkJCXRoYXQgaXMgaXRzIGVzc2VudGlhbCBuYXR1cmUsIGJ1dCBhbm90aGVyIGJlY2F1c2UgaXQgaXMgc2VydmljZWFibGUKCQkJCQlhbmQgdXNlZnVsKSwgYW5kIGZ1cnRoZXJtb3JlIHBsZWFzYW50IGluY2x1ZGVzIGJvdGggd2hhdCBpcyBhYnNvbHV0ZWx5CgkJCQkJcGxlYXNhbnQgYW5kIGFic29sdXRlbHkgZ29vZCBhbmQgd2hhdCBpcyBwbGVhc2FudCBmb3Igc29tZWJvZHkgYW5kCgkJCQkJYXBwYXJlbnRseSBnb29k4oCULCBhcyBpbiB0aGUgY2FzZSBvZiBpbmFuaW1hdGUgb2JqZWN0cyB3ZSBtYXkKCQkJCQljaG9vc2UgYSB0aGluZyBhbmQgbG92ZSBpdCBmb3IgZWFjaCBvZiB0aGVzZSByZWFzb25zLCBzbyBhbHNvIGluIHRoZQoJCQkJCWNhc2Ugb2YgYSBodW1hbiBiZWluZywgb25lIG1hbiB3ZSBsb3ZlIGJlY2F1c2Ugb2YgaGlzIGNoYXJhY3RlciwgYW5kCgkJCQkJZm9yIGdvb2RuZXNzLCBhbm90aGVyIGJlY2F1c2UgaGUgaXMgc2VydmljZWFibGUgYW5kIHVzZWZ1bCwgYW5vdGhlcgoJCQkJCWJlY2F1c2UgaGUgaXMgcGxlYXNhbnQsIGFuZCBmb3IgcGxlYXN1cmUuIEFuZCBhIG1hbiBiZWNvbWVzIGEgZnJpZW5kCgkJCQkJd2hlbiB3aGlsZSByZWNlaXZpbmcgYWZmZWN0aW9uIGhlIHJldHVybnMgaXQsIGFuZCB3aGVuIGhlIGFuZCB0aGUKCQkJCQlvdGhlciBhcmUgaW4gc29tZSB3YXkgYXdhcmUgb2YgdGhpcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuOSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBmb2xsb3dzLCB0aGVyZWZvcmUsCgkJCQkJdGhhdCB0aGVyZSBhcmUgdGhyZWUgc29ydHMgb2YgZnJpZW5kc2hpcCwgYW5kIHRoYXQgdGhleSBhcmUgbm90IGFsbCBzbwoJCQkJCXRlcm1lZCBpbiByZXNwZWN0IG9mIG9uZSB0aGluZyBvciBhcyBzcGVjaWVzIG9mIG9uZSBnZW51cywgbm9yIHlldAoJCQkJCWhhdmUgdGhleSB0aGUgc2FtZSBuYW1lIGVudGlyZWx5IGJ5IGFjY2lkZW50LiBGb3IgYWxsIHRoZXNlIHVzZXMgb2YKCQkJCQl0aGUgdGVybSBhcmUgcmVsYXRlZCB0byBvbmUgcGFydGljdWxhciBzb3J0IG9mIGZyaWVuZHNoaXAgd2hpY2ggaXMKCQkJCQlwcmltYXJ5LCBsaWtlIHRoZSB0ZXJtICdzdXJnaWNhbCfigJRhbmQgd2Ugc3BlYWsgb2YgYSBzdXJnaWNhbAoJCQkJCW1pbmQgYW5kIGEgc3VyZ2ljYWwgaGFuZCBhbmQgYSBzdXJnaWNhbCBpbnN0cnVtZW50IGFuZCBhIHN1cmdpY2FsCgkJCQkJb3BlcmF0aW9uLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5idXQgd2UKCQkJCQlhcHBseSB0aGUgdGVybSBwcm9wZXJseSB0byB0aGF0IHdoaWNoIGlzIHByaW1hcmlseSBzbyBjYWxsZWQuCgkJCQkJPC90cmFuc2xhdGlvbj4="
translation['7.1236b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBUaGUgcHJpbWFyeSBpcwoJCQkJCXRoYXQgb2Ygd2hpY2ggdGhlIGRlZmluaXRpb24gaXMgaW1wbGljaXQgaW4gdGhlIGRlZmluaXRpb24gb2YgYWxsLCBmb3IKCQkJCQlleGFtcGxlIGEgc3VyZ2ljYWwgaW5zdHJ1bWVudCBpcyBhbiBpbnN0cnVtZW50IHRoYXQgYSBzdXJnZW9uIHdvdWxkCgkJCQkJdXNlLCB3aGVyZWFzIHRoZSBkZWZpbml0aW9uIG9mIHRoZSBpbnN0cnVtZW50IGlzIG5vdCBpbXBsaWNpdCBpbiB0aGF0CgkJCQkJb2Ygc3VyZ2Vvbi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjExIiB1bml0PSJMb2ViIGNoYXAiIC8+IFRoZXJlZm9yZSBpbgoJCQkJCWV2ZXJ5IGNhc2UgcGVvcGxlIHNlZWsgdGhlIHByaW1hcnksIGFuZCBiZWNhdXNlIHRoZSB1bml2ZXJzYWwgaXMKCQkJCQlwcmltYXJ5IHRoZXkgYXNzdW1lIHRoYXQgYWxzbyB0aGUgcHJpbWFyeSBpcyB1bml2ZXJzYWw7IGJ1dCB0aGlzIGlzCgkJCQkJdW50cnVlLiBIZW5jZSBpbiB0aGUgY2FzZSBvZiBmcmllbmRzaGlwLCB0aGV5IGNhbm5vdCB0YWtlIGFjY291bnQgb2YKCQkJCQlhbGwgdGhlIG9ic2VydmVkIGZhY3RzLiBGb3IgYXMgb25lIGRlZmluaXRpb24gZG9lcyBub3QgZml0LCB0aGV5IHRoaW5rCgkJCQkJdGhhdCB0aGUgb3RoZXIga2luZHMgb2YgZnJpZW5kc2hpcCBhcmUgbm90IGZyaWVuZHNoaXBzIGF0IGFsbDsgYnV0CgkJCQkJcmVhbGx5IHRoZXkgYXJlLCBhbHRob3VnaCBub3QgaW4gdGhlIHNhbWUgd2F5LCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gYnV0IHdoZW4gdGhleSBmaW5kIHRoYXQgdGhlCgkJCQkJcHJpbWFyeSBmcmllbmRzaGlwIGRvZXMgbm90IGZpdCwgYXNzdW1pbmcgdGhhdCBpdCB3b3VsZCBiZSB1bml2ZXJzYWwKCQkJCQlpZiBpdCByZWFsbHkgd2VyZSBwcmltYXJ5LCB0aGV5IHNheSB0aGF0IHRoZSBvdGhlcnMgYXJlIG5vdAoJCQkJCWZyaWVuZHNoaXBzIGF0IGFsbC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dAoJCQkJCWluIHJlYWxpdHkgdGhlcmUgYXJlIG1hbnkga2luZHMgb2YgZnJpZW5kc2hpcHM6IHRoaXMgd2FzIGFtb25nIHRoZQoJCQkJCXRoaW5ncyBzYWlkIGFscmVhZHksPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmxsLgoJCQkJCQk3LTE3Ljwvbm90ZT4gYXMgd2UgaGF2ZSBkaXN0aW5ndWlzaGVkIHRocmVlIHNlbnNlcyBvZiB0aGUgdGVybQoJCQkJCWZyaWVuZHNoaXDigJRvbmUgc29ydCBoYXMgYmVlbiBkZWZpbmVkIGFzIGJhc2VkIG9uIGdvb2RuZXNzLAoJCQkJCWFub3RoZXIgb24gdXRpbGl0eSwgYW5vdGhlciBvbiBwbGVhc3VyZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T2YgdGhlc2UgdGhlIG9uZQoJCQkJCWJhc2VkIG9uIHV0aWxpdHkgaXMgYXNzdXJlZGx5IHRoZSBmcmllbmRzaGlwIG9mIG1vc3QgcGVvcGxlOyBmb3IgdGhleQoJCQkJCWxvdmUgb25lIGFub3RoZXIgYmVjYXVzZSB0aGV5IGFyZSB1c2VmdWwsIGFuZCBpbiBzbyBmYXIgYXMgdGhleSBhcmUKCQkJCQlhbmQgc28sIGFzIHNheXMgdGhlIHByb3ZlcmLigJTigJxHbGF1Y3VzLCBhbiBhbGx5IGlzIGEKCQkJCQlmcmllbmQsIGFzIGxvbmcgYXMgaGUgb3VyIGJhdHRsZSBmaWdodHMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkEgZnJpZW5kIGluIG5lZWQgaXMgYSBmcmllbmQgaW5kZWVkLjwvbm90ZT4gYW5kIDxjaXQgY2xhc3M9InRyYW5zbGF0aW9uIj4KCQkJCQkJPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImVsZWdpYWMiPjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBubyBsb25nZXIga25vd3MgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNZWdhcmEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1lZ2FyYSI+TWVnYXJhPC9wbGFjZU5hbWU+LjwvbD4KCQkJCQkJPC9xdW90ZT4KCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRWxlZy4gQWxleC4gQWRlc3AuIDYiPkZyLiBFbGVnLiBBZGVzcG90YSA2IChCZXJnayk8L2JpYmw+CgkJCQkJPC9jaXQ+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImVsZWdpYWMiPjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBubyBsb25nZXIga25vd3MgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNZWdhcmEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1lZ2FyYSI+TWVnYXJhPC9wbGFjZU5hbWU+LjwvbD4KCQkJCQkJPC9xdW90ZT4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImVsZWdpYWMiPjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBubyBsb25nZXIga25vd3MgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNZWdhcmEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1lZ2FyYSI+TWVnYXJhPC9wbGFjZU5hbWU+LjwvbD4KCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IG5vIGxvbmdlciBrbm93cyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1lZ2FyYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTWVnYXJhIj5NZWdhcmE8L3BsYWNlTmFtZT4uPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRWxlZy4gQWxleC4gQWRlc3AuIDYiPkZyLiBFbGVnLiBBZGVzcG90YSA2IChCZXJnayk8L2JpYmw+CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjE1IiB1bml0PSJMb2ViIGNoYXAiIC8+IE9uIHRoZSBvdGhlciBoYW5kCgkJCQkJZnJpZW5kc2hpcCBiYXNlZCBvbiBwbGVhc3VyZSBpcyB0aGUgZnJpZW5kc2hpcCBvZiB0aGUgeW91bmcsIGZvciB0aGV5CgkJCQkJaGF2ZSBhIHNlbnNlIG9mIHdoYXQgaXMgcGxlYXNhbnQ7IGhlbmNlIHlvdW5nIHBlb3BsZSdzIGZyaWVuZHNoaXAKCQkJCQllYXNpbHkgY2hhbmdlcywgZm9yIHNpbmNlIHRoZWlyIGNoYXJhY3RlcnMgY2hhbmdlIGFzIHRoZXkgZ3JvdyB1cCwKCQkJCQl0aGVpciB0YXN0ZSBpbiBwbGVhc3VyZSBhbHNvIGNoYW5nZXMuIEJ1dCB0aGUgZnJpZW5kc2hpcCBpbiBjb25mb3JtaXR5CgkJCQkJd2l0aCBnb29kbmVzcyBpcyB0aGUgZnJpZW5kc2hpcCBvZiB0aGUgYmVzdCBtZW4uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjM2YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1236b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1236b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyBjbGVhciBmcm9tIHRoaXMgdGhhdCB0aGUgcHJpbWFyeQoJCQkJCWZyaWVuZHNoaXAsIHRoYXQgb2YgdGhlIGdvb2QsIGlzIG11dHVhbCByZWNpcHJvY2l0eSBvZiBhZmZlY3Rpb24gYW5kCgkJCQkJcHVycG9zZS4gRm9yIHRoZSBvYmplY3Qgb2YgYWZmZWN0aW9uIGlzIGRlYXIgdG8gdGhlIGdpdmVyIG9mIGl0LCBidXQKCQkJCQlhbHNvIHRoZSBnaXZlciBvZiBhZmZlY3Rpb24gaXMgaGltc2VsZiBkZWFyIHRvIHRoZSBvYmplY3QuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xNyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBUaGlzIGZyaWVuZHNoaXAsIHRoZXJlZm9yZSwKCQkJCQlvbmx5IG9jY3VycyBpbiBtYW4sIGZvciBoZSBhbG9uZSBwZXJjZWl2ZXMgcHVycG9zZTsgYnV0IHRoZSBvdGhlcgoJCQkJCWZvcm1zIG9jY3VyIGFsc28gaW4gdGhlIGxvd2VyIGFuaW1hbHMuIEluZGVlZCBtdXR1YWwgdXRpbGl0eQoJCQkJCW1hbmlmZXN0bHkgZXhpc3RzIHRvIHNvbWUgc21hbGwgZXh0ZW50IGJldHdlZW4gdGhlIGRvbWVzdGljIGFuaW1hbHMKCQkJCQlhbmQgbWFuLCBhbmQgYmV0d2VlbiBhbmltYWxzIHRoZW1zZWx2ZXMsIGZvciBpbnN0YW5jZSBIZXJvZG90dXMncwoJCQkJCWFjY291bnQgb2YgdGhlIGZyaWVuZHNoaXAgYmV0d2VlbiB0aGUgY3JvY29kaWxlIGFuZCB0aGUKCQkJCQlzYW5kcGlwZXIsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhkdC4gMi42OCIgdmFsaWQ9InllcyI+SGR0LgoJCQkJCQkyLjY4PC9iaWJsPiwgc2F5cyB0aGF0IHRoZSB0cm9jaGlsdXMgcGlja3MgbGVlY2hlcyBvdXQgb2YKCQkJCQkJdGhlIGNyb2NvZGlsZSdzIHRocm9hdCwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gSEEgOS42LjYiPkFyaXN0b3QuIEhpc3QuIEFuLgoJCQkJCQkJOS42LjY8L2JpYmw+LCB0aGF0IGl0IHBpY2tzIHRoZSBjcm9jb2RpbGUncyB0ZWV0aC4gSW4gcmVhbGl0eSBpdAoJCQkJCQlwaWNrcyBnbmF0cyBmcm9tIHRoZSBjcm9jb2RpbGUncyBvcGVuIG1vdXRoLjwvbm90ZT4gYW5kIHRoZQoJCQkJCXBlcmNoaW5nIHRvZ2V0aGVyIGFuZCBzZXBhcmF0aW5nIG9mIGJpcmRzIG9mIHdoaWNoIHNvb3Roc2F5ZXJzIHNwZWFrLgoJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhkdC4gMi42OCIgdmFsaWQ9InllcyI+SGR0LgoJCQkJCQkyLjY4PC9iaWJsPiwgc2F5cyB0aGF0IHRoZSB0cm9jaGlsdXMgcGlja3MgbGVlY2hlcyBvdXQgb2YKCQkJCQkJdGhlIGNyb2NvZGlsZSdzIHRocm9hdCwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gSEEgOS42LjYiPkFyaXN0b3QuIEhpc3QuIEFuLgoJCQkJCQkJOS42LjY8L2JpYmw+LCB0aGF0IGl0IHBpY2tzIHRoZSBjcm9jb2RpbGUncyB0ZWV0aC4gSW4gcmVhbGl0eSBpdAoJCQkJCQlwaWNrcyBnbmF0cyBmcm9tIHRoZSBjcm9jb2RpbGUncyBvcGVuIG1vdXRoLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBUaGUgYmFkIG1heSBiZQoJCQkJCWVhY2ggb3RoZXIncyBmcmllbmRzIGZyb20gbW90aXZlcyBib3RoIG9mIHV0aWxpdHkgYW5kIG9mIHBsZWFzdXJlOwoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xOSIgdW5pdD0iTG9lYiBjaGFwIiAvPiB0aG91Z2ggc29tZSBzYXkKCQkJCQl0aGF0IHRoZXkgYXJlIG5vdCByZWFsbHkgZnJpZW5kcywgYmVjYXVzZSB0aGUgcHJpbWFyeSBraW5kIG9mCgkJCQkJZnJpZW5kc2hpcCBkb2VzIG5vdCBiZWxvbmcgdG8gdGhlbSwgc2luY2Ugb2J2aW91c2x5IGEgYmFkIG1hbiB3aWxsCgkJCQkJaW5qdXJlIGEgYmFkIG1hbiwgYW5kIHRob3NlIHdobyBzdWZmZXIgaW5qdXJ5IGZyb20gb25lIGFub3RoZXIgZG8gbm90CgkJCQkJZmVlbCBhZmZlY3Rpb24gZm9yIG9uZSBhbm90aGVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuMjAiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IGFzIGEgbWF0dGVyIG9mIGZhY3QgYmFkIG1lbiBkbyBmZWVsIGFmZmVjdGlvbiBmb3IKCQkJCQlvbmUgYW5vdGhlciwgdGhvdWdoIG5vdCBhY2NvcmRpbmcgdG8gdGhlIHByaW1hcnkgZm9ybSBvZgoJCQkJCWZyaWVuZHNoaXDigJRiZWNhdXNlIGNsZWFybHkgbm90aGluZyBoaW5kZXJzIHRoZWlyIGJlaW5nCgkJCQkJZnJpZW5kcyB1bmRlciB0aGUgb3RoZXIgZm9ybXMsIHNpbmNlIGZvciB0aGUgc2FrZSBvZiBwbGVhc3VyZSB0aGV5IHB1dAoJCQkJCXVwIHdpdGggb25lIGFub3RoZXIgYWx0aG91Z2ggdGhleSBhcmUgYmVpbmcgaGFybWVkLCBzbyBsb25nIGFzIHRoZXkKCQkJCQlhcmUgbGFja2luZyBpbiBzZWxmLXJlc3RyYWludC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjIxIiB1bml0PSJMb2ViIGNoYXAiIC8+IFRoZSB2aWV3IGlzIGFsc28gaGVsZCwgd2hlbiBwZW9wbGUgbG9vayBpbnRvIHRoZQoJCQkJCW1hdHRlciBjbG9zZWx5LCB0aGF0IHRob3NlIHdobyBmZWVsIGFmZmVjdGlvbiBmb3IgZWFjaCBvdGhlciBvbgoJCQkJCWFjY291bnQgb2YgcGxlYXN1cmUgYXJlIG5vdCBmcmllbmRzLCBiZWNhdXNlIGl0IGlzIG5vdCB0aGUgcHJpbWFyeQoJCQkJCWZyaWVuZHNoaXAsIHNpbmNlIHRoYXQgaXMgcmVsaWFibGUgYnV0IHRoaXMgaXMgdW5yZWxpYWJsZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+QnV0IGFzIGEgbWF0dGVyIG9mIGZhY3QgaXQgaXMKCQkJCQlmcmllbmRzaGlwLCBhcyBoYXMgYmVlbiBzYWlkLCB0aG91Z2ggbm90IHRoYXQgc29ydCBvZiBmcmllbmRzaGlwIGJ1dAoJCQkJCW9uZSBkZXJpdmVkIGZyb20gaXQuIDwvdHJhbnNsYXRpb24+"
translation['7.1237a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yMiIgdW5pdD0iTG9lYiBjaGFwIiAvPgoJCQkJCVRoZXJlZm9yZSB0byBjb25maW5lIHRoZSB1c2Ugb2YgdGhlIHRlcm0gZnJpZW5kIHRvIHRoYXQgZm9ybSBvZgoJCQkJCWZyaWVuZHNoaXAgYWxvbmUgaXMgdG8gZG8gdmlvbGVuY2UgdG8gb2JzZXJ2ZWQgZmFjdHMsIGFuZCBjb21wZWxzIG9uZQoJCQkJCXRvIHRhbGsgcGFyYWRveGVzOyB0aG91Z2ggaXQgaXMgbm90IHBvc3NpYmxlIHRvIGJyaW5nIGFsbCBmcmllbmRzaGlwCgkJCQkJdW5kZXIgb25lIGRlZmluaXRpb24uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yMyIgdW5pdD0iTG9lYiBjaGFwIiAvPgoJCQkJCVRoZSBvbmx5IHJlbWFpbmluZyBhbHRlcm5hdGl2ZSwgdGhlcmVmb3JlLCBpcywgdGhhdCBpbiBhIHNlbnNlIHRoZQoJCQkJCXByaW1hcnkgc29ydCBvZiBmcmllbmRzaGlwIGFsb25lIGlzIGZyaWVuZHNoaXAsIGJ1dCBpbiBhIHNlbnNlIGFsbAoJCQkJCXNvcnRzIGFyZSwgbm90IGFzIGhhdmluZyBhIGNvbW1vbiBuYW1lIGJ5IGFjY2lkZW50IGFuZCBzdGFuZGluZyBpbiBhCgkJCQkJbWVyZWx5IGNoYW5jZSByZWxhdGlvbnNoaXAgdG8gb25lIGFub3RoZXIsIG5vciB5ZXQgYXMgZmFsbGluZyB1bmRlcgoJCQkJCW9uZSBzcGVjaWVzLCBidXQgcmF0aGVyIGFzIHJlbGF0ZWQgdG8gb25lIHRoaW5nLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yNCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgc2luY2UgdGhlIHNhbWUgdGhpbmcgaXMgYWJzb2x1dGVseSBnb29kIGFuZCBhYnNvbHV0ZWx5IHBsZWFzYW50CgkJCQkJYXQgdGhlIHNhbWUgdGltZSBpZiBub3RoaW5nIGludGVyZmVyZXMsIGFuZCB0aGUgdHJ1ZSBmcmllbmQgYW5kIGZyaWVuZAoJCQkJCWFic29sdXRlbHkgaXMgdGhlIHByaW1hcnkgZnJpZW5kLCBhbmQgc3VjaCBpcyBhIGZyaWVuZCBjaG9zZW4gaW4gYW5kCgkJCQkJZm9yIGhpbXNlbGYgKGFuZCBoZSBtdXN0IG5lY2Vzc2FyaWx5IGJlIHN1Y2gsIGZvciBoZSBmb3Igd2hvbSBvbmUKCQkJCQl3aXNoZXMgZ29vZCBmb3IgaGlzIG93biBzYWtlIG11c3QgbmVjZXNzYXJpbHkgYmUgZGVzaXJhYmxlIGZvciBoaXMgb3duCgkJCQkJc2FrZSksIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBhIHRydWUgZnJpZW5kIGlzCgkJCQkJYWxzbyBhYnNvbHV0ZWx5IHBsZWFzYW50OyBvd2luZyB0byB3aGljaCBpdCBpcyB0aG91Z2h0IHRoYXQgYSBmcmllbmQKCQkJCQlvZiBhbnkgc29ydCBpcyBwbGVhc2FudC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjI2IiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJQnV0IHdlIG11c3QgZGVmaW5lIHRoaXMgc3RpbGwgZnVydGhlciwgZm9yIGl0IGlzIGRlYmF0YWJsZSB3aGV0aGVyCgkJCQkJd2hhdCBpcyBnb29kIG1lcmVseSBmb3Igb25lc2VsZiBpcyBkZWFyIG9yIHdoYXQgaXMgYWJzb2x1dGVseSBnb29kLAoJCQkJCWFuZCB3aGV0aGVyIHRoZSBhY3R1YWwgZXhlcmNpc2Ugb2YgYWZmZWN0aW9uIGlzIGFjY29tcGFuaWVkIGJ5CgkJCQkJcGxlYXN1cmUsIHNvIHRoYXQgYW4gb2JqZWN0IG9mIGFmZmVjdGlvbiBpcyBhbHNvIHBsZWFzYW50LCBvciBub3QuCgkJCQkJQm90aCBxdWVzdGlvbnMgbXVzdCBiZSBicm91Z2h0IHRvIHRoZSBzYW1lIGlzc3VlOyBmb3IgdGhpbmdzIG5vdAoJCQkJCWFic29sdXRlbHkgZ29vZCBidXQgcG9zc2libHkgZXZpbCBhcmUgdG8gYmUgYXZvaWRlZCwgYW5kIGFsc28gYSB0aGluZwoJCQkJCW5vdCBnb29kIGZvciBvbmVzZWxmIGlzIG5vIGNvbmNlcm4gb2Ygb25lc2VsZiwgYnV0IHdoYXQgaXMgc291Z2h0IGZvcgoJCQkJCWlzIHRoYXQgdGhpbmdzIGFic29sdXRlbHkgZ29vZCBzaGFsbCBiZSBnb29kIGZvciBvbmVzZWxmLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuMjciIHVuaXQ9IkxvZWIgY2hhcCIgLz4gRm9yIHRoZSBhYnNvbHV0ZWx5IGdvb2QgaXMKCQkJCQlhYnNvbHV0ZWx5IGRlc2lyYWJsZSwgYnV0IHdoYXQgaXMgZ29vZCBmb3Igb25lc2VsZiBpcyBkZXNpcmFibGUgZm9yCgkJCQkJb25lc2VsZjsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyMzdhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1237a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGUgdHdvIG91Z2h0IHRvIGNvbWUgaW50byBhZ3JlZW1lbnQuCgkJCQkJVGhpcyBpcyBlZmZlY3RlZCBieSBnb29kbmVzczsgYW5kIHRoZSBwdXJwb3NlIG9mIHBvbGl0aWNhbCBzY2llbmNlIGlzCgkJCQkJdG8gYnJpbmcgaXQgYWJvdXQgaW4gY2FzZXMgd2hlcmUgaXQgZG9lcyBub3QgeWV0IGV4aXN0LiBBbmQgb25lIHdobyBpcwoJCQkJCWEgaHVtYW4gYmVpbmcgaXMgd2VsbCBhZGFwdGVkIHRvIHRoaXMgYW5kIG9uIHRoZSB3YXkgdG8gaXQgKGZvciBieQoJCQkJCW5hdHVyZSB0aGluZ3MgdGhhdCBhcmUgYWJzb2x1dGVseSBnb29kIGFyZSBnb29kIHRvIGhpbSksIDwvdHJhbnNsYXRpb24+"
translation['7.1237a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBhbmQgc2ltaWxhcmx5IGEgbWFuIHJhdGhlcgoJCQkJCXRoYW4gYSB3b21hbiBhbmQgYSBnaWZ0ZWQgbWFuIHJhdGhlciB0aGFuIGEgZHVsbCBvbmU7IGJ1dCB0aGUgcm9hZCBpcwoJCQkJCXRocm91Z2ggcGxlYXN1cmXigJRpdCBpcyBuZWNlc3NhcnkgdGhhdCBmaW5lIHRoaW5ncyBzaGFsbCBiZQoJCQkJCXBsZWFzYW50LiBXaGVuIHRoZXJlIGlzIGRpc2NvcmQgYmV0d2VlbiB0aGVtLCBhIG1hbiBpcyBub3QgeWV0CgkJCQkJcGVyZmVjdGx5IGdvb2Q7IGZvciBpdCBpcyBwb3NzaWJsZSBmb3IgdW5yZXN0cmFpbnQgdG8gYmUgZW5nZW5kZXJlZCBpbgoJCQkJCWhpbSwgYXMgdW5yZXN0cmFpbnQgaXMgY2F1c2VkIGJ5IGRpc2NvcmQgYmV0d2VlbiB0aGUgZ29vZCBhbmQgdGhlCgkJCQkJcGxlYXNhbnQgaW4gdGhlIGVtb3Rpb25zLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yOSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZWZvcmUgc2luY2UgdGhlIHByaW1hcnkKCQkJCQlzb3J0IG9mIGZyaWVuZHNoaXAgaXMgaW4gYWNjb3JkYW5jZSB3aXRoIGdvb2RuZXNzLCBmcmllbmRzIG9mIHRoaXMKCQkJCQlzb3J0IHdpbGwgYmUgYWJzb2x1dGVseSBnb29kIGluIHRoZW1zZWx2ZXMgYWxzbywgYW5kIHRoaXMgbm90IGJlY2F1c2UKCQkJCQlvZiBiZWluZyB1c2VmdWwsIGJ1dCBpbiBhbm90aGVyIG1hbm5lci4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjMwIiB1bml0PSJMb2ViIGNoYXAiIC8+IEZvciBnb29kIGZvciBhIGdpdmVuIHBlcnNvbiBhbmQgZ29vZAoJCQkJCWFic29sdXRlbHkgYXJlIHR3b2ZvbGQ7IGFuZCB0aGUgc2FtZSBpcyB0aGUgY2FzZSB3aXRoIHN0YXRlcyBvZgoJCQkJCWNoYXJhY3RlciBhcyB3aXRoIHByb2ZpdGFibGVuZXNz4oCUd2hhdCBpcyBwcm9maXRhYmxlCgkJCQkJYWJzb2x1dGVseSBhbmQgd2hhdCBpcyBwcm9maXRhYmxlIGZvciBnaXZlbiBwZXJzb25zIGFyZSBkaWZmZXJlbnQKCQkJCQl0aGluZ3MgKGp1c3QgYXMgdGFraW5nIGV4ZXJjaXNlIGlzIGEgZGlmZmVyZW50IHRoaW5nIGZyb20gdGFraW5nCgkJCQkJZHJ1Z3MpLiBTbyB0aGUgc3RhdGUgb2YgY2hhcmFjdGVyIGNhbGxlZCBodW1hbiBnb29kbmVzcyBpcyBvZiB0d28KCQkJCQlraW5kc+KAlDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zMSIgdW5pdD0iTG9lYiBjaGFwIiAvPgoJCQkJCWZvciBsZXQgdXMgYXNzdW1lIHRoYXQgbWFuIGlzIG9uZSBvZiB0aGUgdGhpbmdzIHRoYXQgYXJlIGV4Y2VsbGVudCBieQoJCQkJCW5hdHVyZTogY29uc2VxdWVudGx5IHRoZSBnb29kbmVzcyBvZiBhIHRoaW5nIGV4Y2VsbGVudCBieSBuYXR1cmUgaXMKCQkJCQlnb29kIGFic29sdXRlbHksIGJ1dCB0aGF0IG9mIGEgdGhpbmcgbm90IGV4Y2VsbGVudCBieSBuYXR1cmUgaXMgb25seQoJCQkJCWdvb2QgZm9yIHRoYXQgdGhpbmcuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjMyIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBjYXNlIG9mIHRoZSBwbGVhc2FudCBhbHNvLAoJCQkJCXRoZXJlZm9yZSwgaXMgc2ltaWxhci4gRm9yIGhlcmUgd2UgbXVzdCBwYXVzZSBhbmQgY29uc2lkZXIgd2hldGhlcgoJCQkJCXRoZXJlIGlzIGFueSBmcmllbmRzaGlwIHdpdGhvdXQgcGxlYXN1cmUsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZCBob3cgc3VjaCBhIGZyaWVuZHNoaXAgZGlmZmVycyBmcm9tIG90aGVyCgkJCQkJZnJpZW5kc2hpcCwgYW5kIG9uIHdoaWNoIGV4YWN0bHkgb2YgdGhlIHR3byB0aGluZ3M8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+R29vZG5lc3MgYW5kIHBsZWFzYW50bmVzcy48L25vdGU+IHRoZSBhZmZlY3Rpb24KCQkJCQlkZXBlbmRz4oCUZG8gd2UgbG92ZSBhIG1hbiBiZWNhdXNlIGhlIGlzIGdvb2QgZXZlbiBpZiBoZSBpcwoJCQkJCW5vdCBwbGVhc2FudCwgYnV0IG5vdCBiZWNhdXNlIGhlIGlzIHBsZWFzYW50Pzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIHRoZSBHcmVlayBzaG91bGQgYmUgYWx0ZXJlZCB0byBnaXZlICdvcgoJCQkJCQlub3QsIGJ1dCBiZWNhdXNlIGhlIGlzIHBsZWFzYW50Lic8L25vdGU+IFRoZW4sIGFmZmVjdGlvbiBoYXZpbmcKCQkJCQl0d28gbWVhbmluZ3MsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBvdGVudGlhbCBhbmQgYWN0dWFsCgkJCQkJCShTb2xvbW9uKS48L25vdGU+IGRvZXMgYWN0dWFsIGFmZmVjdGlvbiBzZWVtIHRvIGludm9sdmUgcGxlYXN1cmUKCQkJCQliZWNhdXNlIGFjdGl2aXR5IGlzIGdvb2Q/IDwvdHJhbnNsYXRpb24+"
translation['7.1237b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBJdCBpcyBjbGVhciB0aGF0IGFzIGluIHNjaWVuY2UgcmVjZW50IHN0dWRpZXMgYW5kIGFjcXVpcmVtZW50cyBhcmUKCQkJCQltb3N0IGZ1bGx5IGFwcHJlaGVuZGVkLCBiZWNhdXNlIG9mIHRoZWlyIHBsZWFzYW50bmVzcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+CgkJCQkJCVJvc3MgbWFya3MgdGhpcyBjbGF1c2UgYXMgY29ycnVwdGVkLjwvbm90ZT4gc28gd2l0aAoJCQkJCXRoZSByZWNvZ25pdGlvbiBvZiBmYW1pbGlhciB0aGluZ3MsIGFuZCB0aGUgcHJpbmNpcGxlIGlzIHRoZSBzYW1lIGluCgkJCQkJYm90aCBjYXNlcy4gQnkgbmF0dXJlIGF0IGFsbCBldmVudHMgdGhlIGFic29sdXRlbHkgZ29vZCBpcyBhYnNvbHV0ZWx5CgkJCQkJcGxlYXNhbnQsIGFuZCB0aGUgcmVsYXRpdmVseSBnb29kIGlzIHBsZWFzYW50IHRvIHRob3NlIGZvciB3aG9tIGl0IGlzCgkJCQkJZ29vZC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2MuICg8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG9uCDPhM6/zrnPg8604b22IOG8gM6zzrHOuOG9uc69PC9mb3JlaWduPikgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zr/hvLfPgiDhvIDOs86xzrjhvbnOvSwgz4TOv+G9u8+Ezr/Ouc+CCgkJCQkJCeG8oc604b27PC9mb3JlaWduPi48L25vdGU+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4Thvbggz4TOv865z4POtOG9tiDhvIDOs86xzrjhvbnOvTwvZm9yZWlnbj4pIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6/4by3z4Ig4byAzrPOsc644b25zr0sIM+Ezr/hvbvPhM6/zrnPggoJCQkJCQnhvKHOtOG9uzwvZm9yZWlnbj4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjM0IiB1bml0PSJMb2ViIGNoYXAiIC8+IEhlbmNlIGlwc28gZmFjdG8gbGlrZSB0YWtlcyBwbGVhc3VyZSBpbiBsaWtlLCBhbmQgbWFuCgkJCQkJaXMgdGhlIHRoaW5nIG1vc3QgcGxlYXNhbnQgdG8gbWFuOyBzbyB0aGF0IGFzIHRoaXMgaXMgc28gZXZlbiB3aXRoCgkJCQkJaW1wZXJmZWN0IHRoaW5ncywgaXQgaXMgY2xlYXJseSBzbyB3aXRoIHRoaW5ncyB3aGVuIHBlcmZlY3RlZCwgYW5kIGEKCQkJCQlnb29kIG1hbiBpcyBhIHBlcmZlY3QgbWFuLiBBbmQgaWYgYWN0aXZlIGFmZmVjdGlvbiBpcyB0aGUgcmVjaXByb2NhbAoJCQkJCWNob2ljZSwgYWNjb21wYW5pZWQgYnkgcGxlYXN1cmUsIG9mIG9uZSBhbm90aGVyJ3MgYWNxdWFpbnRhbmNlLCBpdCBpcwoJCQkJCWNsZWFyIHRoYXQgZnJpZW5kc2hpcCBvZiB0aGUgcHJpbWFyeSBraW5kIGlzIGluIGdlbmVyYWwgdGhlIHJlY2lwcm9jYWwKCQkJCQljaG9pY2Ugb2YgdGhpbmdzIGFic29sdXRlbHkgZ29vZCBhbmQgcGxlYXNhbnQgYmVjYXVzZSB0aGV5IGFyZSBnb29kCgkJCQkJYW5kIHBsZWFzYW50OyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuMzUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gYW5kCgkJCQkJZnJpZW5kc2hpcCBpdHNlbGYgaXMgYSBzdGF0ZSBmcm9tIHdoaWNoIHN1Y2ggY2hvaWNlIGFyaXNlcy4gRm9yIGl0cwoJCQkJCWZ1bmN0aW9uIGlzIGFuIGFjdGl2aXR5LCBidXQgdGhpcyBub3QgZXh0ZXJuYWwgYnV0IHdpdGhpbiB0aGUgbG92ZXIKCQkJCQloaW1zZWxmOyB3aGVyZWFzIHRoZSBmdW5jdGlvbiBvZiBldmVyeSBmYWN1bHR5IGlzIGV4dGVybmFsLCBmb3IgaXQgaXMKCQkJCQllaXRoZXIgaW4gYW5vdGhlciBvciBpbiBvbmVzZWxmIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Ikl0YWxpYyI+cXVhPC9oaT4gb3RoZXIuCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjM2IiB1bml0PSJMb2ViIGNoYXAiIC8+IEhlbmNlIHRvIGxvdmUgaXMKCQkJCQl0byBmZWVsIHBsZWFzdXJlIGJ1dCB0byBiZSBsb3ZlZCBpcyBub3Q7IGZvciBiZWluZyBsb3ZlZCBpcyBub3QgYW4KCQkJCQlhY3Rpdml0eSBvZiB0aGUgdGhpbmcgbG92ZWQsIHdoZXJlYXMgbG92aW5nIGlzIGFuCgkJCQkJYWN0aXZpdHnigJR0aGUgYWN0aXZpdHkgb2YgZnJpZW5kc2hpcDsgYW5kIGxvdmluZyBvY2N1cnMgb25seQoJCQkJCWluIGFuIGFuaW1hdGUgdGhpbmcsIHdoZXJlYXMgYmVpbmcgbG92ZWQgb2NjdXJzIHdpdGggYW4gaW5hbmltYXRlCgkJCQkJdGhpbmcgYWxzbywgZm9yIGV2ZW4gaW5hbmltYXRlIHRoaW5ncyBhcmUgbG92ZWQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zNyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgc2luY2UgdG8gbG92ZSBhY3RpdmVseSBpcwoJCQkJCXRvIHRyZWF0IHRoZSBsb3ZlZCBvYmplY3QgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iSXRhbGljIj5xdWE8L2hpPiBsb3ZlZCwgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyMzdiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1237b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGUgZnJpZW5kIGlzIGFuIG9iamVjdCBvZiBsb3ZlIHRvIHRoZSBmcmllbmQgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iSXRhbGljIj5xdWE8L2hpPiBkZWFyIHRvIGhpbSBidXQgbm90IDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Ikl0YWxpYyI+cXVhPC9oaT4gbXVzaWNpYW4gb3IgbWVkaWNhbCBtYW4sIHRoZSBwbGVhc3VyZSBvZiBmcmllbmRzaGlwIGlzIHRoZQoJCQkJCXBsZWFzdXJlIGRlcml2ZWQgZnJvbSB0aGUgcGVyc29uIGhpbXNlbGYgPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iSXRhbGljIj5xdWE8L2hpPgoJCQkJCWhpbXNlbGY7IGZvciB0aGUgZnJpZW5kIGxvdmVzIGhpbSBhcyBoaW1zZWxmLCBub3QgYmVjYXVzZSBoZSBpcwoJCQkJCXNvbWV0aGluZyBlbHNlLiBDb25zZXF1ZW50bHkgaWYgaGUgZG9lcyBub3QgdGFrZSBwbGVhc3VyZSBpbiBoaW0gPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iSXRhbGljIj5xdWE8L2hpPiBnb29kLCBpdCBpcyBub3QgdGhlIHByaW1hcnkgZnJpZW5kc2hpcC4KCQkJCQk8L3RyYW5zbGF0aW9uPg=="
translation['7.1237b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBOb3Igb3VnaHQgYW55CgkJCQkJYWNjaWRlbnRhbCBxdWFsaXR5IHRvIGNhdXNlIG1vcmUgaGluZHJhbmNlIHRoYW4gdGhlIGZyaWVuZCdzIGdvb2RuZXNzCgkJCQkJY2F1c2VzIGRlbGlnaHQ7IGZvciBzdXJlbHksIGlmIGEgcGVyc29uIGlzIHZlcnkgZXZpbC1zbWVsbGluZywgcGVvcGxlCgkJCQkJY3V0IGhpbeKAlGhlIG11c3QgYmUgY29udGVudCB3aXRoIG91ciBnb29kd2lsbCwgaGUgbXVzdCBub3QKCQkJCQlleHBlY3Qgb3VyIHNvY2lldHkhPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoaXMgdGhlbiBpcyB0aGUKCQkJCQlwcmltYXJ5IGZyaWVuZHNoaXAsIHdoaWNoIGFsbCBwZW9wbGUgcmVjb2duaXplLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuMzkiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gSXQgaXMgb24gYWNjb3VudCBvZiBpdCB0aGF0CgkJCQkJdGhlIG90aGVyIHNvcnRzIGFyZSBjb25zaWRlcmVkIHRvIGJlIGZyaWVuZHNoaXAsIGFuZCBhbHNvIHRoYXQgdGhlaXIKCQkJCQljbGFpbSBpcyBkaXNwdXRlZOKAlGZvciBmcmllbmRzaGlwIHNlZW1zIHRvIGJlIHNvbWUgdGhpbmcKCQkJCQlzdGFibGUsIGFuZCBvbmx5IHRoaXMgZnJpZW5kc2hpcCBpcyBzdGFibGU7IGZvciBhIGZvcm1lZCBqdWRnZW1lbnQgaXMKCQkJCQlzdGFibGUsIGFuZCBub3QgZG9pbmcgdGhpbmdzIHF1aWNrbHkgb3IgZWFzaWx5IG1ha2VzIHRoZSBqdWRnZW1lbnQKCQkJCQlyaWdodC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjQwIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCB0aGVyZSBpcyBubwoJCQkJCXN0YWJsZSBmcmllbmRzaGlwIHdpdGhvdXQgY29uZmlkZW5jZSwgYW5kIGNvbmZpZGVuY2Ugb25seSBjb21lcyB3aXRoCgkJCQkJdGltZTsgZm9yIGl0IGlzIG5lY2Vzc2FyeSB0byBtYWtlIHRyaWFsLCBhcyBUaGVvZ25pcyBzYXlzOiA8Y2l0IGNsYXNzPSJ0cmFuc2xhdGlvbiI+CgkJCQkJCTxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJlbGVnaWFjIj5Zb3UgY2Fubm90IGtub3cgdGhlIG1pbmQgb2YgbWFuIG5vciB3b21hbjwvbD4KCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QmVmb3JlIGhhdmUgeW91IHRyaWVkIHRoZW0gYXMgeW91IHRyeSBjYXR0bGUuPC9sPgoJCQkJCQk8L3F1b3RlPgoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJUaGduLiAxMjUiPlRoZW9nLiAxMjVmLjwvYmlibD4KCQkJCQk8L2NpdD5UaG9zZSB3aG8gYmVjb21lIGZyaWVuZHMgd2l0aG91dCB0aGUgdGVzdCBvZiB0aW1lIGFyZSBub3QgcmVhbAoJCQkJCWZyaWVuZHMgYnV0IG9ubHkgd2lzaCB0byBiZSBmcmllbmRzOyBhbmQgc3VjaCBhIGNoYXJhY3RlciB2ZXJ5IHJlYWRpbHkKCQkJCQlwYXNzZXMgZm9yIGZyaWVuZHNoaXAsPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImVsZWdpYWMiPllvdSBjYW5ub3Qga25vdyB0aGUgbWluZCBvZiBtYW4gbm9yIHdvbWFuPC9sPgoJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5CZWZvcmUgaGF2ZSB5b3UgdHJpZWQgdGhlbSBhcyB5b3UgdHJ5IGNhdHRsZS48L2w+CgkJCQkJCTwvcXVvdGU+CgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJlbGVnaWFjIj5Zb3UgY2Fubm90IGtub3cgdGhlIG1pbmQgb2YgbWFuIG5vciB3b21hbjwvbD4KCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QmVmb3JlIGhhdmUgeW91IHRyaWVkIHRoZW0gYXMgeW91IHRyeSBjYXR0bGUuPC9sPgoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJUaGduLiAxMjUiPlRoZW9nLiAxMjVmLjwvYmlibD4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1238a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40MSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBiZWNhdXNlIHdoZW4KCQkJCQllYWdlciB0byBiZSBmcmllbmRzIHRoZXkgdGhpbmsgdGhhdCBieSByZW5kZXJpbmcgZWFjaCBvdGhlciBhbGwKCQkJCQlmcmllbmRseSBzZXJ2aWNlcyB0aGV5IGRvIG5vdCBtZXJlbHkgd2lzaCB0byBiZSBmcmllbmRzIGJ1dCBhY3R1YWxseQoJCQkJCWFyZSBmcmllbmRzLiBCdXQgYXMgYSBtYXR0ZXIgb2YgZmFjdCBpdCBoYXBwZW5zIGluIGZyaWVuZHNoaXAgYXMgaW4KCQkJCQlldmVyeXRoaW5nIGVsc2U7IHBlb3BsZSBhcmUgbm90IGhlYWx0aHkgbWVyZWx5IGlmIHRoZXkgd2lzaCB0byBiZQoJCQkJCWhlYWx0aHksIHNvIHRoYXQgZXZlbiBpZiBwZW9wbGUgd2lzaCB0byBiZSBmcmllbmRzIHRoZXkgYXJlIG5vdAoJCQkJCWFjdHVhbGx5IGZyaWVuZHMgYWxyZWFkeS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjQyIiB1bml0PSJMb2ViIGNoYXAiIC8+IEEgcHJvb2Ygb2YgdGhpcyBpcyB0aGF0IHBlb3BsZSB3aG8gaGF2ZSBjb21lIGludG8gdGhpcyBwb3NpdGlvbgoJCQkJCXdpdGhvdXQgZmlyc3QgdGVzdGluZyBvbmUgYW5vdGhlciBhcmUgZWFzaWx5IHNldCBhdCB2YXJpYW5jZTsgZm9yCgkJCQkJdGhvdWdoIG1lbiBhcmUgbm90IHNldCBhdCB2YXJpYW5jZSBlYXNpbHkgYWJvdXQgdGhpbmdzIGluIHdoaWNoIHRoZXkKCQkJCQloYXZlIGFsbG93ZWQgZWFjaCBvdGhlciB0byB0ZXN0IHRoZW0sIGluIGNhc2VzIHdoZXJlIHRoZXkgaGF2ZSBub3QsCgkJCQkJd2hlbmV2ZXIgdGhvc2Ugd2hvIGFyZSBhdHRlbXB0aW5nIHRvIHNldCB0aGVuLCBhdCB2YXJpYW5jZSBwcm9kdWNlCgkJCQkJZXZpZGVuY2UgdGhleSBtYXkgYmUgY29udmluY2VkLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuNDMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQXQgdGhlIHNhbWUgdGltZSBpdCBpcyBtYW5pZmVzdCB0aGF0IHRoaXMgZnJpZW5kc2hpcAoJCQkJCWRvZXMgbm90IG9jY3VyIGJldHdlZW4gYmFzZSBwZW9wbGUgZWl0aGVyOyBmb3IgdGhlIGJhc2UgYW5kCgkJCQkJZXZpbC1uYXR1cmVkIG1hbiBpcyBkaXN0cnVzdGZ1bCB0b3dhcmRzIGV2ZXJ5Ym9keSwgYmVjYXVzZSBoZSBtZWFzdXJlcwoJCQkJCW90aGVyIHBlb3BsZSBieSBoaW1zZWxmLiBIZW5jZSBnb29kIG1lbiBhcmUgbW9yZSBlYXNpbHkgY2hlYXRlZCwKCQkJCQl1bmxlc3MgYXMgYSByZXN1bHQgb2YgdHJpYWwgdGhleSBhcmUgZGlzdHJ1c3RmdWwuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40NCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgdGhlIGJhc2UgcHJlZmVyIHRoZSBnb29kcwoJCQkJCW9mIG5hdHVyZSB0byBhIGZyaWVuZCwgYW5kIG5vbmUgb2YgdGhlbSBsb3ZlIHBlb3BsZSBtb3JlIHRoYW4gdGhpbmdzOwoJCQkJCWFuZCBzbyB0aGV5IGFyZSBub3QgZnJpZW5kcywgZm9yIHRoZSBwcm92ZXJiaWFsICdjb21tb24gcHJvcGVydHkgYXMKCQkJCQliZXR3ZWVuIGZyaWVuZHMnIGlzIG5vdCByZWFsaXplZCBpbiB0aGlzIHdheeKAlHRoZSBmcmllbmQgaXMKCQkJCQltYWRlIGFuIGFwcGVuZGFnZSBvZiB0aGUgdGhpbmdzLCBub3QgdGhlIHRoaW5ncyBvZiB0aGUKCQkJCQlmcmllbmRzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40NSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZWZvcmUgdGhlIGZpcnN0IGtpbmQgb2YgZnJpZW5kc2hpcCBkb2VzCgkJCQkJbm90IG9jY3VyIGJldHdlZW4gbWFueSBtZW4sIGJlY2F1c2UgaXQgaXMgZGlmZmljdWx0IHRvIHRlc3QKCQkJCQltYW554oCUb25lIHdvdWxkIGhhdmUgdG8gZ28gYW5kIGxpdmUgd2l0aCBlYWNoIG9mIHRoZW0uIE5vcgoJCQkJCWluZGVlZCBzaG91bGQgb25lIGV4ZXJjaXNlIGNob2ljZSBpbiB0aGUgY2FzZSBvZiBhIGZyaWVuZCBpbiB0aGUgc2FtZQoJCQkJCXdheSBhcyBhYm91dCBhIGNvYXQ7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40NiIgdW5pdD0iTG9lYiBjaGFwIiAvPgoJCQkJCWFsdGhvdWdoIGluIGFsbCBtYXR0ZXJzIGl0IHNlZW1zIHRoZSBtYXJrIG9mIGEgc2Vuc2libGUgbWFuIHRvIGNob29zZQoJCQkJCXRoZSBiZXR0ZXIgb2YgdHdvIHRoaW5ncywgYW5kIGlmIGhlIGhhZCBiZWVuIHdlYXJpbmcgaGlzIHdvcnNlIGNvYXQKCQkJCQlmb3IgYSBsb25nIHRpbWUgYW5kIGhhZCBub3QgeWV0IHdvcm4gaGlzIGJldHRlciBvbmUsIHRoZSBiZXR0ZXIgb25lCgkJCQkJb3VnaHQgdG8gYmUgY2hvc2Vu4oCUYnV0IHlvdSBvdWdodCBub3QgaW4gcGxhY2Ugb2YgYW4gb2xkCgkJCQkJZnJpZW5kIHRvIGNob29zZSBvbmUgd2hvbSB5b3UgZG8gbm90IGtub3cgdG8gYmUgYSBiZXR0ZXIgbWFuLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjM4YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1238a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkZvciBhIGZyaWVuZCBpcyBub3QgdG8gYmUgaGFkIHdpdGhvdXQgdHJpYWwKCQkJCQlhbmQgaXMgbm90IGEgbWF0dGVyIG9mIGEgc2luZ2xlIGRheSwgYnV0IHRpbWUgaXMgbmVlZGVkOyBoZW5jZSB0aGUKCQkJCQlwZWNrIG9mIHNhbHQnIGhhcyBjb21lIHRvIGJlIHByb3ZlcmJpYWwuIDwvdHJhbnNsYXRpb24+"
translation['7.1238a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40NyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBdCB0aGUgc2FtZSB0aW1lIGlmIGEgZnJpZW5kIGlzIHJlYWxseSB0byBiZQoJCQkJCXlvdXIgZnJpZW5kIGhlIG11c3QgYmUgbm90IG9ubHkgZ29vZCBhYnNvbHV0ZWx5IGJ1dCBhbHNvIGdvb2QgdG8geW91OwoJCQkJCWZvciBhIG1hbiBpcyBnb29kIGFic29sdXRlbHkgYnkgYmVpbmcgZ29vZCwgYnV0IGhlIGlzIGEgZnJpZW5kIGJ5CgkJCQkJYmVpbmcgZ29vZCB0byBhbm90aGVyLCBhbmQgaGUgaXMgYm90aCBnb29kIGFic29sdXRlbHkgYW5kIGEgZnJpZW5kCgkJCQkJd2hlbiBib3RoIHRoZXNlIGF0dHJpYnV0ZXMgaGFybW9uaXplIHRvZ2V0aGVyLCBzbyB0aGF0IHdoYXQgaXMgZ29vZAoJCQkJCWFic29sdXRlbHkgaXMgYWxzbyBnb29kIGZvciBhbm90aGVyIHBlcnNvbjsgb3IgYWxzbyBoZSBtYXkgYmUgbm90IGdvb2QKCQkJCQlhYnNvbHV0ZWx5IHlldCBnb29kIHRvIGFub3RoZXIgYmVjYXVzZSB1c2VmdWwuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40OCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgYmVpbmcgYSBmcmllbmQgb2YgbWFueQoJCQkJCXBlb3BsZSBhdCBvbmNlIGlzIHByZXZlbnRlZCBldmVuIGJ5IHRoZSBmYWN0b3Igb2YgYWZmZWN0aW9uLCBmb3IgaXQgaXMKCQkJCQlub3QgcG9zc2libGUgZm9yIGFmZmVjdGlvbiB0byBiZSBhY3RpdmUgaW4gcmVsYXRpb24gdG8gbWFueSBhdAoJCQkJCW9uY2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjQ5IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIHRoaW5ncywgdGhlcmVmb3JlLCBzaG93IHRoZQoJCQkJCWNvcnJlY3RuZXNzIG9mIHRoZSBzYXlpbmcgdGhhdCBmcmllbmRzaGlwIGlzIGEgdGhpbmcgdG8gYmUgcmVsaWVkIG9uLAoJCQkJCWp1c3QgYXMgaGFwcGluZXNzIGlzIGEgdGhpbmcgdGhhdCBpcyBzZWxmLXN1ZmZpY2luZy4gQW5kIGl0IGhhcyBiZWVuCgkJCQkJcmlnaHRseSBzYWlkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkV1ci4gRWwuICAgICAgIDk0MSIgdmFsaWQ9InllcyI+RXVyLiBFbC4KCQkJCQkJOTQxPC9iaWJsPi48L25vdGU+OiAiTmF0dXJlIGlzIHBlcm1hbmVudCwgYnV0IHdlYWx0aCBpcwoJCQkJCW5vdOKAlCIgYWx0aG91Z2ggaXQgd291bGQgYmUgbXVjaCBmaW5lciB0byBzYXkgJ0ZyaWVuZHNoaXAnCgkJCQkJdGhhbiAnTmF0dXJlLic8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJFdXIuIEVsLiAgICAgICA5NDEiIHZhbGlkPSJ5ZXMiPkV1ci4gRWwuCgkJCQkJCTk0MTwvYmlibD4uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yLCBlbWVuZGluZyB0aGUKCQkJCQkJdGV4dCwgJ3RoYXQgZnJpZW5kc2hpcCBpcyBnb29kbmVzcyBvZiBuYXR1cmUuJzwvbm90ZT48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuNTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQW5kIGl0IGlzIHByb3ZlcmJpYWwgdGhhdAoJCQkJCXRpbWUgc2hvd3MgYSBmcmllbmQsIGFuZCBhbHNvIG1pc2ZvcnR1bmVzIG1vcmUgdGhhbiBnb29kIGZvcnR1bmUuIEZvcgoJCQkJCXRoZW4gdGhlIHRydXRoIG9mIHRoZSBzYXlpbmcgJ2ZyaWVuZHMnIHBvc3Nlc3Npb25zIGFyZSBjb21tb24KCQkJCQlwcm9wZXJ0eScgaXMgY2xlYXIgZm9yIG9ubHkgZnJpZW5kcywgaW5zdGVhZCBvZiB0aGUgbmF0dXJhbCBnb29kcyBhbmQKCQkJCQluYXR1cmFsIGV2aWxzIG9uIHdoaWNoIGdvb2QgYW5kIGJhZCBmb3J0dW5lIHR1cm4sIGNob29zZSBhIGh1bWFuIGJlaW5nCgkJCQkJcmF0aGVyIHRoYW4gdGhlIHByZXNlbmNlIG9mIHRoZSBmb3JtZXIgYW5kIHRoZSBhYnNlbmNlIG9mIHRoZQoJCQkJCWxhdHRlcjs8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1238b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi41MSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBhbmQgbWlzZm9ydHVuZSBzaG93cyB0aG9zZQoJCQkJCXdobyBhcmUgbm90IGZyaWVuZHMgcmVhbGx5IGJ1dCBvbmx5IGJlY2F1c2Ugb2Ygc29tZSBjYXN1YWwgdXRpbGl0eS4KCQkJCQlBbmQgYm90aCBhcmUgc2hvd24gYnkgdGltZTsgZm9yIGV2ZW4gdGhlIHVzZWZ1bCBmcmllbmQgaXMgbm90IHNob3duCgkJCQkJcXVpY2tseSwgYnV0IHJhdGhlciB0aGUgcGxlYXNhbnQgb25l4oCUZXhjZXB0IHRoYXQgb25lIHdobyBpcwoJCQkJCWFic29sdXRlbHkgcGxlYXNhbnQgaXMgYWxzbyBub3QgcXVpY2sgdG8gc2hvdyBoaW1zZWxmLiBGb3IgbWVuIGFyZQoJCQkJCWxpa2Ugd2luZXMgYW5kIGZvb2RzOyB0aGUgc3dlZXRuZXNzIG9mIHRob3NlIGlzIHF1aWNrbHkgZXZpZGVudCwgYnV0CgkJCQkJd2hlbiBsYXN0aW5nIGxvbmdlciBpdCBpcyB1bnBsZWFzYW50IGFuZCBub3Qgc3dlZXQsIGFuZCBzaW1pbGFybHkgaW4KCQkJCQl0aGUgY2FzZSBvZiBtZW4uIEZvciBhYnNvbHV0ZSBwbGVhc2FudG5lc3MgaXMgYSB0aGluZyB0byBiZSBkZWZpbmVkIGJ5CgkJCQkJdGhlIEVuZCBpdCBlZmZlY3RzIGFuZCB0aGUgdGltZSBpdCBsYXN0cy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjUyIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBldmVuIHRoZSBtdWx0aXR1ZGUgd291bGQgYWdyZWUsIG5vdCBpbgoJCQkJCWNvbnNlcXVlbmNlIG9mIHJlc3VsdHMgb25seSwgYnV0IGluIHRoZSBzYW1lIHdheSBhcyBpbiB0aGUgY2FzZSBvZiBhCgkJCQkJZHJpbmsgdGhleSBjYWxsIGl0IHN3ZWV0ZXLigJRmb3IgYSBkcmluayBmYWlscyB0byBiZSBwbGVhc2FudAoJCQkJCW5vdCBiZWNhdXNlIG9mIGl0cyByZXN1bHQsIGJ1dCBiZWNhdXNlIGl0cyBwbGVhc2FudG5lc3MgaXMgbm90CgkJCQkJY29udGludW91cywgYWx0aG91Z2ggYXQgZmlyc3QgaXQgcXVpdGUgdGFrZXMgb25lIGluLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi41MyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgcHJpbWFyeSBmb3JtIG9mIGZyaWVuZHNoaXAgdGhlcmVmb3JlLCBhbmQgdGhlIG9uZSB0aGF0IGNhdXNlcwoJCQkJCXRoZSBuYW1lIHRvIGJlIGdpdmVuIHRvIHRoZSBvdGhlcnMsIGlzIGZyaWVuZHNoaXAgYmFzZWQgb24gZ29vZG5lc3MKCQkJCQlhbmQgZHVlIHRvIHRoZSBwbGVhc3VyZSBvZiBnb29kbmVzcywgYXMgaGFzIGJlZW4gc2FpZCBiZWZvcmUuIFRoZQoJCQkJCW90aGVyIGZyaWVuZHNoaXBzIG9jY3VyIGV2ZW4gYW1vbmcgY2hpbGRyZW4gYW5kIGFuaW1hbHMgYW5kIHdpY2tlZAoJCQkJCXBlb3BsZTogd2hlbmNlIHRoZSBzYXlpbmdz4oCUICJUd28gb2YgYW4gYWdlIGVhY2ggb3RoZXIKCQkJCQlnbGFkZGVuIiBhbmQgIlBsZWFzdXJlIHdlbGRzIHRoZSBiYWQgbWFuIHRvIHRoZSBiYWQuIjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJFdXIuIEZyLiAyOTgiPkV1ci4KCQkJCQkJQmVsbGVyb3Bob250ZXMgRnIuIDI5OCAoTmF1Y2spPC9iaWJsPi48L25vdGU+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRXVyLiBGci4gMjk4Ij5FdXIuCgkJCQkJCUJlbGxlcm9waG9udGVzIEZyLiAyOTggKE5hdWNrKTwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjU0IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBhbHNvIHRoZSBiYWQgbWF5IGJlIHBsZWFzYW50IHRvIGVhY2ggb3RoZXIgbm90IGFzIGJlaW5nIGJhZCBvcgoJCQkJCW5ldXRyYWwsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gbmVpdGhlciBnb29kCgkJCQkJCW5vciBiYWQuPC9ub3RlPiBidXQgaWYgZm9yIGluc3RhbmNlIGJvdGggYXJlIG11c2ljaWFucyBvciBvbmUKCQkJCQlmb25kIG9mIG11c2ljIGFuZCB0aGUgb3RoZXIgYSBtdXNpY2lhbiwgYW5kIGluIHRoZSB3YXkgaW4gd2hpY2ggYWxsCgkJCQkJbWVuIGhhdmUgc29tZSBnb29kIGluIHRoZW0gYW5kIHNvIGZpdCBpbiB3aXRoIG9uZSBhbm90aGVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuNTUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gRnVydGhlciB0aGV5IG1pZ2h0IGJlCgkJCQkJbXV0dWFsbHkgdXNlZnVsIGFuZCBiZW5lZmljaWFsIChub3QgYWJzb2x1dGVseSBidXQgZm9yIHRoZWlyIHB1cnBvc2UpCgkJCQkJbm90IGFzIGJlaW5nIGJhZCBvciBuZXV0cmFsLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIzOGIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1238b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1238b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi41NiIgdW5pdD0iTG9lYiBjaGFwIiAvPkl0IGlzIGFsc28gcG9zc2libGUgZm9yIGEgYmFkCgkJCQkJbWFuIHRvIGJlIGZyaWVuZHMgd2l0aCBhIGdvb2QgbWFuLCBmb3IgdGhlIGJhZCBtYW4gbWF5IGJlIHVzZWZ1bCB0bwoJCQkJCXRoZSBnb29kIG1hbiBmb3IgaGlzIHB1cnBvc2UgYXQgdGhlIHRpbWUtYW5kIHRoZSBnb29kIG1hbiB0byB0aGUKCQkJCQl1bmNvbnRyb2xsZWQgbWFuIGZvciBoaXMgcHVycG9zZSBhdCB0aGUgdGltZSBhbmQgdG8gdGhlIGJhZCBtYW4gZm9yCgkJCQkJdGhlIHB1cnBvc2UgbmF0dXJhbCB0byBoaW07IGFuZCBoZSB3aWxsIHdpc2ggaGlzIGZyaWVuZCB3aGF0IGlzCgkJCQkJZ29vZOKAlHdpc2ggYWJzb2x1dGVseSB0aGluZ3MgYWJzb2x1dGVseSBnb29kLCBhbmQgdW5kZXIgYQoJCQkJCWdpdmVuIGNvbmRpdGlvbiB0aGluZ3MgZ29vZCBmb3IgaGltLCBhcyBwb3ZlcnR5IG9yIGRpc2Vhc2UgbWF5IGJlCgkJCQkJYmVuZWZpY2lhbDogdGhpbmdzIGdvb2QgZm9yIGhpbSBoZSB3aWxsIHdpc2ggZm9yIHRoZSBzYWtlIG9mIHRoZQoJCQkJCWFic29sdXRlIGdvb2RzLCBpbiB0aGUgd2F5IGluIHdoaWNoIGhlIHdpc2hlcyBoaXMgZnJpZW5kIHRvIGRyaW5rCgkJCQkJbWVkaWNpbmXigJRoZSBkb2VzIG5vdCB3aXNoIHRoZSBhY3Rpb24gaW4gaXRzZWxmIGJ1dCB3aXNoZXMgaXQKCQkJCQlmb3IgdGhlIGdpdmVuIHB1cnBvc2UuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi41NyIgdW5pdD0iTG9lYiBjaGFwIiAvPgoJCQkJCU1vcmVvdmVyIGEgYmFkIG1hbiBtYXkgYWxzbyBiZSBmcmllbmRzIHdpdGggYSBnb29kIG9uZSBpbiB0aGUgd2F5cyBpbgoJCQkJCXdoaWNoIG1lbiBub3QgZ29vZCBtYXkgYmUgZnJpZW5kcyB3aXRoIG9uZSBhbm90aGVyOiBoZSBtYXkgYmUgcGxlYXNhbnQKCQkJCQl0byBoaW0gbm90IGFzIGJlaW5nIGJhZCBidXQgYXMgc2hhcmluZyBzb21lIGNvbW1vbiBjaGFyYWN0ZXJpc3RpYywgZm9yCgkJCQkJaW5zdGFuY2UgaWYgaGUgaXMgbXVzaWNhbC4gQWdhaW4gdGhleSBtYXkgYmUgZnJpZW5kcyBpbiB0aGUgd2F5IGluCgkJCQkJd2hpY2ggdGhlcmUgaXMgc29tZSBnb29kIGluIGV2ZXJ5Ym9keSAob3dpbmcgdG8gd2hpY2ggc29tZSBtZW4gYXJlCgkJCQkJc29jaWFibGU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiByZWFkeSB0bwoJCQkJCQlhc3NvY2lhdGUgd2l0aCBhbGwgYW5kIHN1bmRyeSwgcmVnYXJkbGVzcyBvZiBtb3JhbCBpbmZlcmlvcml0eS4KCQkJCQkJQnV0IHBlcmhhcHMgdGhlIEdyZWVrIHNob3VsZCBiZSBhbHRlcmVkIHRvIGdpdmUgJ3NvbWUgKGJhZCBtZW4pCgkJCQkJCW1pZ2h0IGJlIHdvcnRoeSB0byBhc3NvY2lhdGUgd2l0aCwgZXZlbiBpbiB0aGUganVkZ2VtZW50IG9mIGEKCQkJCQkJZ29vZCBtYW4sJyBvciAnc29tZSBtaWdodCBiZSB3b3J0aHkgdG8gYXNzb2NpYXRlIHdpdGggZXZlbgoJCQkJCQl0aG91Z2ggbm90IGdvb2QuJzwvbm90ZT4gZXZlbiB0aG91Z2ggZ29vZCksIG9yIGluIHRoZSB3YXkgaW4KCQkJCQl3aGljaCB0aGV5IHN1aXQgZWFjaCBwYXJ0aWN1bGFyIHBlcnNvbiwgZm9yIGFsbCBtZW4gaGF2ZSBzb21ldGhpbmcgb2YKCQkJCQlnb29kLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXNlIHRoZW4gYXJlIHRocmVlIGtpbmRzIG9mIGZyaWVuZHNoaXA7CgkJCQkJYW5kIGluIGFsbCBvZiB0aGVzZSB0aGUgdGVybSBmcmllbmRzaGlwIGluIGEgbWFubmVyIGluZGljYXRlcwoJCQkJCWVxdWFsaXR5LCBmb3IgZXZlbiB3aXRoIHRob3NlIHdobyBhcmUgZnJpZW5kcyBvbiB0aGUgZ3JvdW5kIG9mCgkJCQkJZ29vZG5lc3MgdGhlIGZyaWVuZHNoaXAgaXMgaW4gYSBtYW5uZXIgYmFzZWQgb24gZXF1YWxpdHkgb2YKCQkJCQlnb29kbmVzcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgYW5vdGhlciB2YXJpZXR5IG9mIHRoZXNlIGtpbmRzIGlzCgkJCQkJZnJpZW5kc2hpcCBvbiBhIGJhc2lzIG9mIHN1cGVyaW9yaXR5LCBhcyBpbiB0aGF0IG9mIGEgZ29kIGZvciBhCgkJCQkJbWFuLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5mb3IgdGhhdCBpcyBhCgkJCQkJZGlmZmVyZW50IGtpbmQgb2YgZnJpZW5kc2hpcCwgYW5kIGdlbmVyYWxseSBvZiBhIHJ1bGVyIGFuZCBzdWJqZWN0OwoJCQkJCWp1c3QgYXMgdGhlIHByaW5jaXBsZSBvZiBqdXN0aWNlIGJldHdlZW4gdGhlbSBpcyBhbHNvIGRpZmZlcmVudCwgYmVpbmcKCQkJCQlvbmUgb2YgZXF1YWxpdHkgcHJvcG9ydGlvbmFsbHkgYnV0IG5vdCBvZiBlcXVhbGl0eSBudW1lcmljYWxseS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QmV0d2VlbiB0d28gdW5lcXVhbCBwZXJzb25zCgkJCQkJCWp1c3RpY2UgZGl2aWRlcyBiZW5lZml0cyBpbiBwcm9wb3J0aW9uIHRvIHRoZWlyIGRlc2VydHMsIHNvIHRoYXQKCQkJCQkJdGhlIHR3byBzaGFyZXMgYXJlIG5vdCBlcXVhbCB0byBlYWNoIG90aGVyIGJ1dCBlYWNoIGVxdWFsIHRvIGl0cwoJCQkJCQlyZWNpcGllbnQncyBtZXJpdC4gVGhlIHdvcmQgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4by0z4POv869PC9mb3JlaWduPiBpdHNlbGYgY29ubm90ZXMgJ2ZhaXIsJyBqdXN0LAoJCQkJCQlyZWFzb25hYmxlLjwvbm90ZT4gVGhlIGZyaWVuZHNoaXAgb2YgZmF0aGVyIGZvciBzb24gaXMgaW4gdGhpcyBjbGFzcywKCQkJCQlhbmQgdGhhdCBvZiBiZW5lZmFjdG9yIGZvciBiZW5lZmljaWFyeS4gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+4by0z4POv869PC9mb3JlaWduPiBpdHNlbGYgY29ubm90ZXMgJ2ZhaXIsJyBqdXN0LAoJCQkJCQlyZWFzb25hYmxlLjwvdHJhbnNsYXRpb24+"
translation['7.1239a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBvZiB0aGVzZSBzb3J0cyBvZiBmcmllbmRzaGlwIHRoZW1zZWx2ZXMKCQkJCQl0aGVyZSBhcmUgdmFyaWV0aWVzOiB0aGUgZnJpZW5kc2hpcCBvZiBmYXRoZXIgZm9yIHNvbiBpcyBkaWZmZXJlbnQKCQkJCQlmcm9tIHRoYXQgb2YgaHVzYmFuZCBmb3Igd2lmZeKAlHRoZSBmb3JtZXIgaXMgZnJpZW5kc2hpcCBhcwoJCQkJCWJldHdlZW4gcnVsZXIgYW5kIHN1YmplY3QsIHRoZSBsYXR0ZXIgdGhhdCBvZiBiZW5lZmFjdG9yIGZvcgoJCQkJCWJlbmVmaWNpYXJ5LiBBbmQgaW4gdGhlc2UgdmFyaWV0aWVzIGVpdGhlciB0aGVyZSBpcyBubyByZXR1cm4gb2YKCQkJCQlhZmZlY3Rpb24gb3IgaXQgaXMgbm90IHJldHVybmVkIGluIGEgc2ltaWxhciB3YXkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy40IiB1bml0PSJMb2ViIGNoYXAiIC8+IEZvciBpdCB3b3VsZCBiZSBsdWRpY3JvdXMgaWYKCQkJCQlvbmUgd2VyZSB0byBhY2N1c2UgR29kIGJlY2F1c2UgaGUgZG9lcyBub3QgcmV0dXJuIGxvdmUgaW4gdGhlIHNhbWUgd2F5CgkJCQkJYXMgaGUgaXMgbG92ZWQsIG9yIGZvciBhIHN1YmplY3QgdG8gbWFrZSB0aGlzIGFjY3VzYXRpb24gYWdhaW5zdCBhCgkJCQkJcnVsZXI7IGZvciBpdCBpcyB0aGUgcGFydCBvZiBhIHJ1bGVyIHRvIGJlIGxvdmVkLCBub3QgdG8gbG92ZSwgb3IgZWxzZQoJCQkJCXRvIGxvdmUgaW4gYW5vdGhlciB3YXkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy41IiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJQW5kIHRoZSBwbGVhc3VyZSBkaWZmZXJzOyB0aGUgcGxlYXN1cmUgdGhhdCBhIG1hbiBvZiBlc3RhYmxpc2hlZAoJCQkJCXBvc2l0aW9uIGhhcyBpbiBoaXMgb3duIHByb3BlcnR5IG9yIHNvbiBhbmQgdGhhdCB3aGljaCBvbmUgd2hvIGxhY2tzCgkJCQkJdGhlbSBmZWVscyBpbiBhbiBlc3RhdGUgb3IgYSBjaGlsZCBjb21pbmcgdG8gaGltIGFyZSBub3Qgb25lIGFuZCB0aGUKCQkJCQlzYW1lLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgaW4gdGhlIHNhbWUgd2F5CgkJCQkJYWxzbyBpbiB0aGUgY2FzZSBvZiB0aG9zZSB3aG8gYXJlIGZyaWVuZHMgZm9yIHV0aWxpdHkgb3IgZm9yCgkJCQkJcGxlYXN1cmXigJRzb21lIGFyZSBvbiBhIGZvb3Rpbmcgb2YgZXF1YWxpdHksIG90aGVycyBvbmUgb2YKCQkJCQlzdXBlcmlvcml0eS4gT3dpbmcgdG8gdGhpcyB0aG9zZSB3aG8gdGhpbmsgdGhleSBhcmUgb24gdGhlIGZvcm1lcgoJCQkJCWZvb3RpbmcgY29tcGxhaW4gaWYgdGhleSBhcmUgbm90IHVzZWZ1bCBhbmQgYmVuZWZpY2lhbCBpbiBhIHNpbWlsYXIKCQkJCQltYW5uZXI7IGFuZCBhbHNvIGluIHRoZSBjYXNlIG9mIHBsZWFzdXJlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuIHRoZXkgY29tcGxhaW4gaWYgdGhlIHBsZWFzdXJlIG9yIGJlbmVmaXQKCQkJCQkJdGhleSBnZXQgZnJvbSB0aGVpciBmcmllbmQgaXMgbm90IGVxdWFsIChhYnNvbHV0ZWx5LCBub3QgbWVyZWx5CgkJCQkJCWluIHByb3BvcnRpb24gdG8gYSBzdXBwb3NlZCBkaWZmZXJlbmNlIG9mIG1lcml0KSB0byB0aGF0IHdoaWNoCgkJCQkJCXRoZXkgZ2l2ZSB0byBoaW0uPC9ub3RlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy43IiB1bml0PSJMb2ViIGNoYXAiIC8+IFRoaXMgaXMgY2xlYXIgaW4gY2FzZXMgb2YgcGFzc2lvbmF0ZSBhZmZlY3Rpb24sIGZvcgoJCQkJCXRoaXMgaXMgb2Z0ZW4gYSBjYXVzZSBvZiBjb21iYXQgYmV0d2VlbiB0aGUgbG92ZXIgYW5kIGhpcyBiZWxvdmVkOiB0aGUKCQkJCQlsb3ZlciBkb2VzIG5vdCBzZWUgdGhhdCB0aGV5IGhhdmUgbm90IHRoZSBzYW1lIHJlYXNvbiBmb3IgdGhlaXIKCQkJCQlhZmZlY3Rpb24uIEhlbmNlIEFlbmljdXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+QQoJCQkJCQlkcmFtYXRpc3Qgb2YgdGhlIE9sZCBDb21lZHkuPC9ub3RlPiBoYXMgc2FpZDogIkEgbG92ZWQgb25lIHNvCgkJCQkJd291bGQgc3BlYWssIGJ1dCBub3QgYSBsb3Zlci4iIEJ1dCB0aGV5IHRoaW5rIHRoYXQgdGhlIHJlYXNvbiBpcyB0aGUKCQkJCQlzYW1lLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIzOWEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1239a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1239a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4xIiB1bml0PSJMb2ViIGNoYXAiIC8+VGhlcmUgYmVpbmcgdGhlbiwgYXMgaGFzIGJlZW4gc2FpZCw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiA3LjEyMzZhLjciIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjM2YSA3LTEyMzdiCgkJCQkJCTE1PC9iaWJsPi48L25vdGU+IHRocmVlIGtpbmRzIG9mIGZyaWVuZHNoaXAsIGJhc2VkIG9uCgkJCQkJZ29vZG5lc3MsIHV0aWxpdHkgYW5kIHBsZWFzYW50bmVzcywgdGhlc2UgYXJlIGFnYWluIGRpdmlkZWQgaW4gdHdvLAoJCQkJCW9uZSBzZXQgYmVpbmcgb24gYSBmb290aW5nIG9mIGVxdWFsaXR5IGFuZCB0aGUgb3RoZXIgb24gb25lIG9mCgkJCQkJc3VwZXJpb3JpdHkuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiA3LjEyMzZhLjciIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjM2YSA3LTEyMzdiCgkJCQkJCTE1PC9iaWJsPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBUaG91Z2ggYm90aAoJCQkJCXNldHMsIHRoZXJlZm9yZSwgYXJlIGZyaWVuZHNoaXBzLCBvbmx5IHdoZW4gdGhleSBhcmUgb24gYW4gZXF1YWxpdHkKCQkJCQlhcmUgdGhlIHBhcnRpZXMgZnJpZW5kczsgZm9yIGl0IHdvdWxkIGJlIGFic3VyZCBmb3IgYSBtYW4gdG8gYmUgYQoJCQkJCWZyaWVuZCBvZiBhIGNoaWxkLCB0aG91Z2ggaGUgZG9lcyBmZWVsIGFmZmVjdGlvbiBmb3IgaGltIGFuZCByZWNlaXZlCgkJCQkJaXQgZnJvbSBoaW0uIEluIHNvbWUgY2FzZXMsIHdoaWxlIHRoZSBzdXBlcmlvciBwYXJ0bmVyIG91Z2h0IHRvCgkJCQkJcmVjZWl2ZSBhZmZlY3Rpb24sIGlmIGhlIGdpdmVzIGl0IGhlIGlzIHJlcHJvYWNoZWQgYXMgbG92aW5nIGFuCgkJCQkJdW53b3J0aHkgb2JqZWN0OyBmb3IgYWZmZWN0aW9uIGlzIG1lYXN1cmVkIGJ5IHRoZSB3b3J0aCBvZiB0aGUgZnJpZW5kcwoJCQkJCWFuZCBieSBvbmUgc29ydCBvZiBlcXVhbGl0eS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLgoJCQkJCQlwcm9wb3J0aW9uYWwgZXF1YWxpdHk6IHNlZSBub3RlIG9uIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gICAgICAgIEV0aC4gNy4xMjM4Yi4yMSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLgoJCQkJCQkJRXRoLiAxMjM4YiAyMTwvYmlibD4uPC9ub3RlPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gICAgICAgIEV0aC4gNy4xMjM4Yi4yMSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLgoJCQkJCQkJRXRoLiAxMjM4YiAyMTwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gU28gaW4gc29tZSBjYXNlcyB0aGVyZSBpcyBwcm9wZXJseSBhCgkJCQkJZGlzc2ltaWxhcml0eSBvZiBhZmZlY3Rpb24gYmVjYXVzZSBvZiBpbmZlcmlvcml0eSBvZiBhZ2UsIGluIG90aGVycyBvbgoJCQkJCXRoZSBncm91bmQgb2YgZ29vZG5lc3Mgb3IgYmlydGggb3Igc29tZSBvdGhlciBzdWNoIHN1cGVyaW9yaXR5OyBpdCBpcwoJCQkJCXJpZ2h0IGZvciB0aGUgc3VwZXJpb3IgdG8gY2xhaW0gdG8gZmVlbDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciAnb25lIG91Z2h0IHRvIGV4cGVjdCB0aGUgc3VwZXJpb3IgdG8gZmVlbCAuIC4KCQkJCQkJLic8L25vdGU+IGVpdGhlciBsZXNzIGFmZmVjdGlvbiBvciBub25lLCBhbGlrZSBpbiBhIGZyaWVuZHNoaXAKCQkJCQlvZiB1dGlsaXR5IGFuZCBpbiBvbmUgb2YgcGxlYXN1cmUgYW5kIG9uZSBiYXNlZCBvbiBnb29kbmVzcy4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBTbyBpbiBjYXNlcyBvZgoJCQkJCXNtYWxsIGRlZ3JlZXMgb2Ygc3VwZXJpb3JpdHkgZGlzcHV0ZXMgbmF0dXJhbGx5IG9jY3VyIChmb3IgYSBzbWFsbAoJCQkJCWFtb3VudCBpcyBub3Qgb2YgaW1wb3J0YW5jZSBpbiBzb21lIG1hdHRlcnMsIGFzIGluIHdlaWdoaW5nIHRpbWJlciwKCQkJCQl0aG91Z2ggaW4gZ29sZCBwbGF0ZSBpdCBpczsgYnV0IHBlb3BsZSBqdWRnZSBzbWFsbG5lc3Mgb2YgYW1vdW50CgkJCQkJYmFkbHksIHNpbmNlIG9uZSdzIG93biBnb29kIGJlY2F1c2Ugb2YgaXRzIG5lYXJuZXNzIGFwcGVhcnMgYmlnIGFuZAoJCQkJCXRoYXQgb2Ygb3RoZXJzIGJlY2F1c2Ugb2YgaXRzIHJlbW90ZW5lc3Mgc21hbGwpOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBidXQgd2hlbiB0aGVyZSBpcyBhbiBleGNlc3NpdmUKCQkJCQlhbW91bnQgb2YgZGlmZmVyZW5jZSwgdGhlbiBldmVuIHRoZSBwYXJ0aWVzIHRoZW1zZWx2ZXMgZG8gbm90IGRlbWFuZAoJCQkJCXRoYXQgdGhleSBvdWdodCB0byBiZSBsb3ZlZCBpbiByZXR1cm4sIG9yIG5vdCBsb3ZlZAoJCQkJCWFsaWtl4oCUZm9yIGV4YW1wbGUsIGlmIG9uZSB3ZXJlIGNsYWltaW5nIGEgcmV0dXJuIG9mIGxvdmUKCQkJCQlmcm9tIEdvZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1239b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC42IiB1bml0PSJMb2ViIGNoYXAiIC8+IEl0IGlzIG1hbmlmZXN0LCB0aGVyZWZvcmUsCgkJCQkJdGhhdCBtZW4gYXJlIGZyaWVuZHMgd2hlbiB0aGV5IGFyZSBvbiBhbiBlcXVhbGl0eSwgYnV0IHRoYXQgYSByZXR1cm4KCQkJCQlvZiBhZmZlY3Rpb24gaXMgcG9zc2libGUgd2l0aG91dCB0aGVpciBiZWluZyBmcmllbmRzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjQuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgaXQgaXMgY2xlYXIgd2h5IG1lbiBzZWVrCgkJCQkJZnJpZW5kc2hpcCBvbiBhIGJhc2lzIG9mIHN1cGVyaW9yaXR5IG1vcmUgdGhhbiB0aGF0IG9uIG9uZSBvZgoJCQkJCWVxdWFsaXR5OyBmb3IgaW4gdGhlIGZvcm1lciBjYXNlIHRoZXkgc2NvcmUgYm90aCBhZmZlY3Rpb24gYW5kIGEgc2Vuc2UKCQkJCQlvZiBzdXBlcmlvcml0eSBhdCB0aGUgc2FtZSB0aW1lLiBIZW5jZSB3aXRoIHNvbWUgbWVuIHRoZSBmbGF0dGVyZXIgaXMKCQkJCQltb3JlIGVzdGVlbWVkIHRoYW4gdGhlIGZyaWVuZCwgZm9yIGhlIG1ha2VzIHRoZSBwZXJzb24gZmxhdHRlcmVkCgkJCQkJYXBwZWFyIHRvIHNjb3JlIGJvdGggYWR2YW50YWdlcy4gQW5kIHRoaXMgbW9zdCBvZiBhbGwgY2hhcmFjdGVyaXplcwoJCQkJCW1lbiBhbWJpdGlvdXMgb2YgaG9ub3JzLCBzaW5jZSB0byBiZSBhZG1pcmVkIGltcGxpZXMgc3VwZXJpb3JpdHkuCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI0LjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gU29tZSBwZXJzb25zIGdyb3cKCQkJCQl1cCBieSBuYXR1cmUgYWZmZWN0aW9uYXRlIGFuZCBvdGhlcnMgYW1iaXRpb3VzOyBvbmUgd2hvIGVuam95cyBsb3ZpbmcKCQkJCQltb3JlIHRoYW4gYmVpbmcgbG92ZWQgaXMgYWZmZWN0aW9uYXRlLCB3aGVyZWFzIHRoZSBvdGhlciBlbmpveXMgYmVpbmcKCQkJCQlsb3ZlZCBtb3JlLiBTbyB0aGUgbWFuIHdobyBlbmpveXMgYmVpbmcgYWRtaXJlZCBhbmQgbG92ZWQgaXMgYSBsb3ZlcgoJCQkJCW9mIHN1cGVyaW9yaXR5LCB3aGVyZWFzIHRoZSBvdGhlciwgdGhlIGFmZmVjdGlvbmF0ZSBtYW4sIGxvdmVzIHRoZQoJCQkJCXBsZWFzdXJlIG9mIGxvdmluZy4gRm9yIHRoaXMgaGUgbmVjZXNzYXJpbHkgcG9zc2Vzc2VzIGJ5IHRoZSBtZXJlCgkJCQkJYWN0aXZpdHkgb2YgbG92aW5nOyBmb3IgYmVpbmcgbG92ZWQgaXMgYW4gYWNjaWRlbnQsIGFzIG9uZSBjYW4gYmUKCQkJCQlsb3ZlZCB3aXRob3V0IGtub3dpbmcgaXQsIGJ1dCBvbmUgY2Fubm90IGxvdmUgd2l0aG91dCBrbm93aW5nIGl0LgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC45IiB1bml0PSJMb2ViIGNoYXAiIC8+IExvdmluZyBkZXBlbmRzLAoJCQkJCW1vcmUgdGhhbiBiZWluZyBsb3ZlZCwgb24gdGhlIGFjdHVhbCBmZWVsaW5nLCB3aGVyZWFzIGJlaW5nIGxvdmVkCgkJCQkJY29ycmVzcG9uZHMgd2l0aCB0aGUgbmF0dXJlIG9mIHRoZSBvYmplY3QuIEEgc2lnbiBvZiB0aGlzIGlzIHRoYXQgYQoJCQkJCWZyaWVuZCwgaWYgYm90aCB0aGluZ3Mgd2VyZSBub3QgcG9zc2libGUsIHdvdWxkIGNob29zZSB0byBrbm93IHRoZQoJCQkJCW90aGVyIHBlcnNvbiByYXRoZXIgdGhhbiB0byBiZSBrbm93biBieSBoaW0sIGFzIGZvciBleGFtcGxlIHdvbWVuIGRvCgkJCQkJd2hlbiB0aGV5IGFsbG93IG90aGVycyB0byBhZG9wdCB0aGVpciBjaGlsZHJlbiwgYW5kIEFuZHJvbWFjaGUgaW4gdGhlCgkJCQkJdHJhZ2VkeSBvZiBBbnRpcGhvbi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBwb2V0CgkJCQkJCWxpdmVkIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3lyYWN1c2UiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPgoJCQkJCQlhdCB0aGUgY291cnQgb2YgRGlvbnlzdXMgdGhlIGVsZGVyICh3aG8gY2FtZSBpbnRvIHBvd2VyIDxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDY8L2RhdGU+IEIuQy4pLiBIZSBpcyBzYWlkIHRvIGhhdmUgd3JpdHRlbgoJCQkJCQl0cmFnZWRpZXMgaW4gY29sbGFib3JhdGlvbiB3aXRoIHRoZSB0eXJhbnQ7IGFuZCBoZSB3YXMgc2VudGVuY2VkCgkJCQkJCWJ5IGhpbSB0byBkZWF0aCBieSBmbG9nZ2luZyAoPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gUmguIDEzODRhLjkiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIFJoZXQuIDEzODRhCgkJCQkJCQk5PC9iaWJsPikuPC9ub3RlPiBJbmRlZWQgdGhlIHdpc2ggdG8gYmUga25vd24gc2VlbXMgdG8gYmUKCQkJCQlzZWxmaXNoLCBhbmQgaXRzIG1vdGl2ZSBhIGRlc2lyZSB0byByZWNlaXZlIGFuZCBub3QgdG8gY29uZmVyIHNvbWUKCQkJCQliZW5lZml0LCB3aGVyZWFzIHRvIHdpc2ggdG8ga25vdyBhIHBlcnNvbiBpcyBmb3IgdGhlIHNha2Ugb2YKCQkJCQljb25mZXJyaW5nIGJlbmVmaXQgYW5kIGJlc3Rvd2luZyBhZmZlY3Rpb24uIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsU3lyYWN1c2UiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFN5cmFjdXNlIj5TeXJhY3VzZTwvcGxhY2VOYW1lPgoJCQkJCQlhdCB0aGUgY291cnQgb2YgRGlvbnlzdXMgdGhlIGVsZGVyICh3aG8gY2FtZSBpbnRvIHBvd2VyIDxkYXRlIGF1dGhuYW1lPSItNDA2IiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDA2Ij40MDY8L2RhdGU+IEIuQy4pLiBIZSBpcyBzYWlkIHRvIGhhdmUgd3JpdHRlbgoJCQkJCQl0cmFnZWRpZXMgaW4gY29sbGFib3JhdGlvbiB3aXRoIHRoZSB0eXJhbnQ7IGFuZCBoZSB3YXMgc2VudGVuY2VkCgkJCQkJCWJ5IGhpbSB0byBkZWF0aCBieSBmbG9nZ2luZyAoPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gUmguIDEzODRhLjkiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIFJoZXQuIDEzODRhCgkJCQkJCQk5PC9iaWJsPikuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyMzliIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1239b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1239b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNC4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPkZvciB0aGlzIHJlYXNvbiB3ZSBwcmFpc2UKCQkJCQl0aG9zZSB3aG8gcmVtYWluIGNvbnN0YW50IGluIGFmZmVjdGlvbiB0b3dhcmRzIHRoZSBkZWFkOyBmb3IgdGhleQoJCQkJCWtub3csIGJ1dCBhcmUgbm90IGtub3duLiBJdCBoYXMsIHRoZW4sIGJlZW4gc3RhdGVkIHRoYXQgdGhlcmUgYXJlCgkJCQkJc2V2ZXJhbCBtb2RlcyBvZiBmcmllbmRzaGlwLCBhbmQgaG93IG1hbnkgbW9kZXMgdGhlcmUgYXJlLCBuYW1lbHkKCQkJCQl0aHJlZSwgYW5kIHRoYXQgcmVjZWl2aW5nIGFmZmVjdGlvbiBhbmQgaGF2aW5nIG9uZSdzIGFmZmVjdGlvbgoJCQkJCXJldHVybmVkLCBhbmQgZnJpZW5kcyBvbiBhbiBlcXVhbGl0eSBhbmQgdGhvc2Ugb24gYSBmb290aW5nIG9mCgkJCQkJc3VwZXJpb3JpdHksIGFyZSBkaWZmZXJlbnQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGFzIHRoZSB0ZXJtICdmcmllbmQnIGlzCgkJCQkJdXNlZCBpbiBhIG1vcmUgdW5pdmVyc2FsIHNlbnNlIGFzIHdlbGwsIGFzIHdhcyBhbHNvIHNhaWQgYXQgdGhlCgkJCQkJYmVnaW5uaW5nLDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj4KCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDcuMTIzNWEuNCIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyMzVhIDQgZmYuPC9iaWJsPgoJCQkJCTwvbm90ZT4gYnkgdGhvc2Ugd2hvIHRha2UgaW4gd2lkZXIgY29uc2lkZXJhdGlvbnMgKHNvbWUgc2F5aW5nIHRoYXQKCQkJCQl3aGF0IGlzIGxpa2UgaXMgZGVhciwgb3RoZXJzIHdoYXQgaXMgb3Bwb3NpdGUpLCB3ZSBtdXN0IGFsc28gc3BlYWsKCQkJCQlhYm91dCB0aGVzZSBmb3JtcyBvZiBmcmllbmRzaGlwIGFuZCB0aGVpciByZWxhdGlvbiB0byB0aGUga2luZHMgdGhhdAoJCQkJCWhhdmUgYmVlbiBkaXNjdXNzZWQuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiA3LjEyMzVhLjQiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjM1YSA0IGZmLjwvYmlibD4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBcwoJCQkJCWZvciBsaWtlbmVzcywgaXQgY29ubmVjdHMgd2l0aCBwbGVhc2FudG5lc3MgYW5kIGFsc28gd2l0aCBnb29kbmVzcy4KCQkJCQlGb3IgdGhlIGdvb2QgaXMgc2ltcGxlLCB3aGVyZWFzIHRoZSBiYWQgaXMgbXVsdGlmb3JtOyBhbmQgYWxzbyB0aGUKCQkJCQlnb29kIG1hbiBpcyBhbHdheXMgYWxpa2UgYW5kIGRvZXMgbm90IGNoYW5nZSBpbiBjaGFyYWN0ZXIsIHdoZXJlYXMgdGhlCgkJCQkJd2lja2VkIGFuZCB0aGUgZm9vbGlzaCBhcmUgcXVpdGUgZGlmZmVyZW50IGluIHRoZSBldmVuaW5nIGZyb20gd2hhdAoJCQkJCXRoZXkgd2VyZSBpbiB0aGUgbW9ybmluZy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4KCQkJCQlIZW5jZSBpZiB3aWNrZWQgbWVuIGRvIG5vdCBoaXQgaXQgb2ZmIHRvZ2V0aGVyLCB0aGV5IGFyZSBub3QgZnJpZW5kcwoJCQkJCXdpdGggb25lIGFub3RoZXIgYnV0IHRoZXkgc2VwYXJhdGU7IHlldCBhbiBpbnNlY3VyZSBmcmllbmRzaGlwIGlzIG5vdAoJCQkJCWZyaWVuZHNoaXAgYXQgYWxsLiBTbyB0aGUgbGlrZSBpcyBkZWFyIHRvIHVzIGluIHRoaXMgd2F5LCBiZWNhdXNlIHRoZQoJCQkJCWdvb2QgaXMgbGlrZS4gQnV0IGluIGEgd2F5IGl0IGlzIGFsc28gZGVhciBvbiB0aGUgc2NvcmUgb2YKCQkJCQlwbGVhc2FudG5lc3M7IGZvciB0byB0aG9zZSB3aG8gYXJlIGFsaWtlIHRoZSBzYW1lIHRoaW5ncyBhcmUgcGxlYXNhbnQsCgkJCQkJYW5kIGFsc28gZXZlcnl0aGluZyBpcyBieSBuYXR1cmUgcGxlYXNhbnQgdG8gaXRzZWxmLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1240a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS40IiB1bml0PSJMb2ViIGNoYXAiIC8+IE93aW5nIHRvIHRoaXMgcmVsYXRpb25zIGZpbmQgb25lIGFub3RoZXIncwoJCQkJCXZvaWNlcyBhbmQgY2hhcmFjdGVycyBhbmQgc29jaWV0eSBwbGVhc2FudGVzdCwgYW5kIHNvIHdpdGggdGhlIGxvd2VyCgkJCQkJYW5pbWFsczsgYW5kIGluIHRoaXMgd2F5IGl0IGlzIHBvc3NpYmxlIGV2ZW4gZm9yIGJhZCBtZW4gdG8gZmVlbAoJCQkJCWFmZmVjdGlvbiBmb3IgZWFjaCBvdGhlcjogIkJ1dCBwbGVhc3VyZSB3ZWxkcyB0aGUgYmFkIG1hbiB0byB0aGUKCQkJCQliYWQuIjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDcuMTIzOGEuMzQiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjM4YSAzNDwvYmlibD4gbm90ZS48L25vdGU+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDcuMTIzOGEuMzQiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjM4YSAzNDwvYmlibD4gbm90ZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjUuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgb3Bwb3NpdGUgaXMgZGVhciB0bwoJCQkJCW9wcG9zaXRlIG9uIHRoZSBzY29yZSBvZiB1dGlsaXR5LiBGb3IgdGhlIGxpa2UgaXMgdXNlbGVzcyB0byBpdHNlbGYsCgkJCQkJYW5kIHRoZXJlZm9yZSBtYXN0ZXIgbmVlZHMgc2xhdmUgYW5kIHNsYXZlIG1hc3RlciwgbWFuIGFuZCB3aWZlIG5lZWQKCQkJCQlvbmUgYW5vdGhlcjsgYW5kIHRoZSBvcHBvc2l0ZSBpcyBwbGVhc2FudCBhbmQgZGVzaXJhYmxlIGFzIHVzZWZ1bCwgbm90CgkJCQkJYXMgY29udGFpbmVkIGluIHRoZSBFbmQgYnV0IGFzIGEgbWVhbnMgdG8gdGhlIEVuZOKAlGZvciB3aGVuIGEKCQkJCQl0aGluZyBoYXMgZ290IHdoYXQgaXQgZGVzaXJlcyBpdCBoYXMgYXJyaXZlZCBhdCBpdHMgRW5kLCBhbmQgZG9lcyBub3QKCQkJCQlzdHJpdmUgdG8gZ2V0IGl0cyBvcHBvc2l0ZSwgZm9yIGV4YW1wbGUgdGhlIGhvdCB0aGUgY29sZCBhbmQgdGhlIHdldAoJCQkJCXRoZSBkcnkuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGluIGEgd2F5IGxvdmUgb2YgdGhlIG9wcG9zaXRlIGlzIGFsc28KCQkJCQlsb3ZlIG9mIHRoZSBnb29kLiBGb3Igb3Bwb3NpdGVzIHN0cml2ZSB0byByZWFjaCBvbmUgYW5vdGhlciB0aHJvdWdoCgkJCQkJdGhlIG1pZGRsZSBwb2ludCwgZm9yIHRoZXkgc3RyaXZlIGFmdGVyIGVhY2ggb3RoZXIgYXMgdGFsbGllcyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIHR3byBoYWx2ZXMgb2YgYSBib25lIG9yIGNvaW4KCQkJCQkJYnJva2VuIGluIGhhbGYgYnkgdHdvIGNvbnRyYWN0aW5nIHBhcnRpZXMgYW5kIG9uZSBrZXB0IGJ5IGVhY2gsCgkJCQkJCXRvIHNlcnZlIGFzIGEgdG9rZW4gb2YgaWRlbnRpZmljYXRpb24gd2hlbiBmb3VuZCB0byBmaXQKCQkJCQkJdG9nZXRoZXIuPC9ub3RlPiBiZWNhdXNlIGluIHRoYXQgd2F5IG9uZSBtaWRkbGUgdGhpbmcgcmVzdWx0cwoJCQkJCWZyb20gdGhlIHR3by4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI1LjciIHVuaXQ9IkxvZWIgY2hhcCIgLz4gSGVuY2UKCQkJCQlhY2NpZGVudGFsbHkgbG92ZSBvZiB0aGUgZ29vZCBpcyBsb3ZlIG9mIHRoZSBvcHBvc2l0ZSwgYnV0IGVzc2VudGlhbGx5CgkJCQkJaXQgaXMgbG92ZSBvZiB0aGUgbWlkZGxlLCBmb3Igb3Bwb3NpdGVzIGRvIG5vdCBzdHJpdmUgdG8gcmVhY2ggb25lCgkJCQkJYW5vdGhlciBidXQgdGhlIG1pZGRsZS4gSWYgd2hlbiBwZW9wbGUgaGF2ZSBnb3QgdG9vIGNvbGQgdGhleSBhcmUKCQkJCQlzdWJqZWN0ZWQgdG8gaGVhdCwgYW5kIHdoZW4gdGhleSBoYXZlIGdvdCB0b28gaG90IHRvIGNvbGQsIHRoZXkgcmVhY2gKCQkJCQlhIG1lYW4gdGVtcGVyYXR1cmUsIGFuZCBzaW1pbGFybHkgaW4gb3RoZXIgbWF0dGVyczsgYnV0IHdpdGhvdXQgc3VjaAoJCQkJCXRyZWF0bWVudCB0aGV5IGFyZSBhbHdheXMgaW4gYSBzdGF0ZSBvZiBkZXNpcmUsIGJlY2F1c2UgdGhleSBhcmUgbm90CgkJCQkJYXQgdGhlIG1pZGRsZSBwb2ludHMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS44IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dAoJCQkJCWEgbWFuIGluIHRoZSBtaWRkbGUgZW5qb3lzIHdpdGhvdXQgcGFzc2lvbmF0ZSBkZXNpcmUgdGhpbmdzIGJ5IG5hdHVyZQoJCQkJCXBsZWFzYW50LCB3aGVyZWFzIHRoZSBvdGhlcnMgZW5qb3kgZXZlcnl0aGluZyB0aGF0IHRha2VzIHRoZW0gb3V0c2lkZQoJCQkJCXRoZWlyIG5hdHVyYWwgc3RhdGUuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS45IiB1bml0PSJMb2ViIGNoYXAiIC8+IFRoaXMKCQkJCQlraW5kIG9mIHJlbGF0aW9uc2hpcCwgdGhlbiwgZXhpc3RzIGV2ZW4gYmV0d2VlbiBpbmFuaW1hdGUgdGhpbmdzOyBidXQKCQkJCQl3aGVuIGl0IG9jY3VycyBpbiB0aGUgY2FzZSBvZiBsaXZpbmcgdGhpbmdzIGl0IGJlY29tZXMgYWZmZWN0aW9uLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjQwYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1240a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkhlbmNlIHNvbWV0aW1lcyBwZW9wbGUgdGFrZSBkZWxpZ2h0IGluCgkJCQkJcGVyc29ucyB1bmxpa2UgdGhlbXNlbHZlcywgdGhlIHN0aWZmIGZvciBpbnN0YW5jZSBpbiB0aGUgd2l0dHkgYW5kIHRoZQoJCQkJCWFjdGl2ZSBpbiB0aGUgbGF6eSwgZm9yIHRoZXkgYXJlIGJyb3VnaHQgYnkgb25lIGFub3RoZXIgaW50byB0aGUKCQkJCQltaWRkbGUgc3RhdGUuIDwvdHJhbnNsYXRpb24+"
translation['7.1240a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNS4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBIZW5jZQoJCQkJCWFjY2lkZW50YWxseSwgYXMgd2FzIHNhaWQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlAiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjM5YiAzMjwvYmlibD4uPC9ub3RlPiBvcHBvc2l0ZXMKCQkJCQlhcmUgZGVhciB0byBvcHBvc2l0ZXMgYWxzbyBvbiBhY2NvdW50IG9mIHRoZSBnb29kLjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlAiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjM5YiAzMjwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGhhcywgdGhlbiwgYmVlbiBzYWlkIGhvdyBtYW55IGtpbmRzIG9mCgkJCQkJZnJpZW5kc2hpcCB0aGVyZSBhcmUsIGFuZCB3aGF0IGFyZSB0aGUgZGlmZmVyZW50IHNlbnNlcyBpbiB3aGljaAoJCQkJCXBlb3BsZSBhcmUgdGVybWVkIGZyaWVuZHMsIGFuZCBhbHNvIGdpdmVycyBhbmQgb2JqZWN0cyBvZiBhZmZlY3Rpb24sCgkJCQkJYm90aCBpbiBhIG1hbm5lciB0aGF0IG1ha2VzIHRoZW0gYWN0dWFsbHkgZnJpZW5kcyBhbmQgd2l0aG91dCBiZWluZwoJCQkJCWZyaWVuZHMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+VGhlIHF1ZXN0aW9uIHdoZXRoZXIgb25lIGlzIG9uZSdzIG93biBmcmllbmQKCQkJCQlvciBub3QgaW52b2x2ZXMgbXVjaCBjb25zaWRlcmF0aW9uLiBTb21lIHRoaW5rIHRoYXQgZXZlcnkgbWFuIGlzIGhpcwoJCQkJCW93biBiZXN0IGZyaWVuZCwgYW5kIHRoZXkgdXNlIHRoaXMgZnJpZW5kc2hpcCBhcyBhIHN0YW5kYXJkIGJ5IHdoaWNoCgkJCQkJdG8ganVkZ2UgaGlzIGZyaWVuZHNoaXAgZm9yIGhpcyBvdGhlciBmcmllbmRzLiBPbiB0aGVvcmV0aWNhbCBncm91bmRzLAoJCQkJCWFuZCBpbiB2aWV3IG9mIHRoZSBhY2NlcHRlZCBhdHRyaWJ1dGVzIG9mIGZyaWVuZHMsIHNlbGYtbG92ZSBhbmQgbG92ZQoJCQkJCW9mIG90aGVycyBhcmUgaW4gc29tZSByZXNwZWN0cyBvcHBvc2VkIGJ1dCBpbiBvdGhlcnMgbWFuaWZlc3RseQoJCQkJCXNpbWlsYXIuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IEZvciBpbiBhIHdheQoJCQkJCXNlbGYtbG92ZSBpcyBmcmllbmRzaGlwIGJ5IGFuYWxvZ3ksIGJ1dCBub3QgYWJzb2x1dGVseS4gRm9yIGJlaW5nCgkJCQkJbG92ZWQgYW5kIGxvdmluZyBpbnZvbHZlIHR3byBzZXBhcmF0ZSBmYWN0b3JzOyBvd2luZyB0byB3aGljaCBhIG1hbiBpcwoJCQkJCWhpcyBvd24gZnJpZW5kIHJhdGhlciBpbiB0aGUgd2F5IGluIHdoaWNoLCBpbiB0aGUgY2FzZSBvZiB0aGUKCQkJCQl1bnJlc3RyYWluZWQgYW5kIHRoZSBzZWxmLXJlc3RyYWluZWQgbWFuLCB3ZSBoYXZlIHNhaWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Q2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiAgICAgICAgMi4xMjIzYS4zNiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguCgkJCQkJCTEyMjNhIDM2LWIgMTc8L2JpYmw+LiBTZWxmLXJlc3RyYWludCAob3IgdGhlIGxhY2sgb2YgaXQpCgkJCQkJCWluZGljYXRlcyB0aGF0IGEgbWFuJ3MgcGVyc29uYWxpdHkgaGFzIGluIGEgc2Vuc2UgdHdvIHBhcnRzLCBvbmUKCQkJCQkJb2Ygd2hpY2ggbWF5IGNvbnRyb2wgdGhlIG90aGVyOyBhbmQgc2ltaWxhcmx5IHNlbGYtbG92ZSBpbXBsaWVzCgkJCQkJCXRoYXQgb25lIHBhcnQgb2YgdGhlIHBlcnNvbmFsaXR5IGNhbiBoYXZlIGEgY2VydGFpbiBmZWVsaW5nIGluCgkJCQkJCXJlZ2FyZCB0byBhbm90aGVyIHBhcnQuPC9ub3RlPiBob3cgb25lIGhhcyB0aG9zZSBxdWFsaXRpZXMKCQkJCQl2b2x1bnRhcmlseSBvciBpbnZvbHVudGFyaWx54oCUbmFtZWx5IGJ5IHRoZSBwYXJ0cyBvZiBvbmUncwoJCQkJCXNwaXJpdCBiZWluZyByZWxhdGVkIHRvIGVhY2ggb3RoZXIgaW4gYSBjZXJ0YWluIHdheTsgYW5kIGFsbCBzdWNoCgkJCQkJbWF0dGVycyBhcmUgYSBzaW1pbGFyIHRoaW5nLHdoZXRoZXIgYSBtYW4gY2FuIGJlIGhpcyBvd24gZnJpZW5kIG9yCgkJCQkJZm9lLCBhbmQgd2hldGhlciBhIG1hbiBjYW4gdHJlYXQgaGltc2VsZiB1bmp1c3RseS48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gICAgICAgIDIuMTIyM2EuMzYiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLgoJCQkJCQkxMjIzYSAzNi1iIDE3PC9iaWJsPi4gU2VsZi1yZXN0cmFpbnQgKG9yIHRoZSBsYWNrIG9mIGl0KQoJCQkJCQlpbmRpY2F0ZXMgdGhhdCBhIG1hbidzIHBlcnNvbmFsaXR5IGhhcyBpbiBhIHNlbnNlIHR3byBwYXJ0cywgb25lCgkJCQkJCW9mIHdoaWNoIG1heSBjb250cm9sIHRoZSBvdGhlcjsgYW5kIHNpbWlsYXJseSBzZWxmLWxvdmUgaW1wbGllcwoJCQkJCQl0aGF0IG9uZSBwYXJ0IG9mIHRoZSBwZXJzb25hbGl0eSBjYW4gaGF2ZSBhIGNlcnRhaW4gZmVlbGluZyBpbgoJCQkJCQlyZWdhcmQgdG8gYW5vdGhlciBwYXJ0LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5Gb3IgYWxsIHRoZXNlIHJlbGF0aW9ucyBpbnZvbHZlCgkJCQkJdHdvIHNlcGFyYXRlIGZhY3RvcnM7IDwvdHJhbnNsYXRpb24+"
translation['7.1240b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IGluCgkJCQkJc28gZmFyIHRoZW4gYXMgdGhlIHNwaXJpdCBpcyBpbiBhIG1hbm5lciB0d28sIHRoZXNlIHJlbGF0aW9ucyBkbyBpbiBhCgkJCQkJbWFubmVyIGJlbG9uZyB0byBpdCwgYnV0IGluIHNvIGZhciBhcyB0aGUgdHdvIGFyZSBub3Qgc2VwYXJhdGUsIHRoZXkKCQkJCQlkbyBub3QuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZyb20gdGhlIHN0YXRlIG9mIGZyaWVuZHNoaXAgZm9yCgkJCQkJb25lc2VsZiBhcmUgZGV0ZXJtaW5lZCB0aGUgcmVtYWluaW5nIG1vZGVzIG9mIGZyaWVuZHNoaXAgdW5kZXIgd2hpY2gKCQkJCQl3ZSB1c3VhbGx5IHN0dWR5IGl0IGluIG91ciBkaXNjb3Vyc2VzLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDcuMTI0NGEuMjAiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjQ0YQoJCQkJCQkyMDwvYmlibD4uIFBlcmhhcHMgYSByZWZlcmVuY2UgdG8gQXJpc3RvdGxlJ3MgbGVjdHVyZXMKCQkJCQkJKFN0b2NrKS48L25vdGU+IEZvciBhIG1hbiBpcyB0aG91Z2h0IHRvIGJlIGEgZnJpZW5kIHdobyB3aXNoZXMgZm9yCgkJCQkJc29tZWJvZHkgdGhpbmdzIHRoYXQgYXJlIGdvb2QsIG9yIHRoYXQgaGUgYmVsaWV2ZXMgdG8gYmUgZ29vZCwgbm90IG9uCgkJCQkJaGlzIG93biBhY2NvdW50IGJ1dCBmb3IgdGhlIG90aGVyJ3Mgc2FrZTsgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDcuMTI0NGEuMjAiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjQ0YQoJCQkJCQkyMDwvYmlibD4uIFBlcmhhcHMgYSByZWZlcmVuY2UgdG8gQXJpc3RvdGxlJ3MgbGVjdHVyZXMKCQkJCQkJKFN0b2NrKS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBhbmQgaW4gYW5vdGhlciB3YXkgd2hlbiBhIG1hbiB3aXNoZXMgYW5vdGhlcidzCgkJCQkJZXhpc3RlbmNl4oCUZXZlbiB0aG91Z2ggbm90IGJlc3Rvd2luZyBnb29kcyBvbiBoaW0sIGxldCBhbG9uZQoJCQkJCWV4aXN0ZW5jZeKAlGZvciB0aGF0IG90aGVyJ3Mgc2FrZSBhbmQgbm90IGZvciBoaXMgb3duLCBoZQoJCQkJCXdvdWxkIGJlIHRob3VnaHQgdG8gYmUgaW4gYSBoaWdoIGRlZ3JlZSB0aGUgZnJpZW5kIG9mIHRoYXQgb3RoZXI7CgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gYW5kIGluIGFub3RoZXIgd2F5CgkJCQkJYSBtYW4gaXMgYSBmcmllbmQgb2Ygb25lIHdob3NlIHNvY2lldHkgaGUgZGVzaXJlcyBtZXJlbHkgZm9yIHRoZSBzYWtlCgkJCQkJb2YgaGlzIGNvbXBhbnkgYW5kIG5vdCBmb3Igc29tZXRoaW5nIGVsc2UsIGFzIGZhdGhlcnMgZGVzaXJlIHRoZWlyCgkJCQkJY2hpbGRyZW4ncyBleGlzdGVuY2UsIHRob3VnaCB0aGV5IGFzc29jaWF0ZSB3aXRoIG90aGVyIHBlb3BsZS4gQWxsCgkJCQkJdGhlc2UgY2FzZXMgY29uZmxpY3Qgd2l0aCBvbmUgYW5vdGhlcjsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gc29tZSBtZW4gZG8gbm90IHRoaW5rIHRoZXkgYXJlIGxvdmVkIHVubGVzcyB0aGUKCQkJCQlmcmllbmQgd2lzaGVzIHRoZW0gdGhpcyBvciB0aGF0IHBhcnRpY3VsYXIgZ29vZCwgb3RoZXJzIHVubGVzcyB0aGVpcgoJCQkJCWV4aXN0ZW5jZSBpcyBkZXNpcmVkLCBvdGhlcnMgdW5sZXNzIHRoZWlyIHNvY2lldHkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi43IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFnYWluIHdlIHNoYWxsIHJlY2tvbiBpdAoJCQkJCWFmZmVjdGlvbiB0byBncmlldmUgd2l0aCBvbmUgd2hvIGdyaWV2ZXMgbm90IGZvciBzb21lIHVsdGVyaW9yCgkJCQkJbW90aXZl4oCUYXMgZm9yIGluc3RhbmNlIHNsYXZlcyBpbiByZWxhdGlvbiB0byB0aGVpciBtYXN0ZXJzCgkJCQkJc2hhcmUgdGhlaXIgZ3JpZWYgYmVjYXVzZSB3aGVuIGluIGdyaWVmIHRoZXkgYXJlIGhhcnNoLCBhbmQgbm90IGZvcgoJCQkJCXRoZWlyIG1hc3RlcnMnIG93biBzYWtlLCBhcyBtb3RoZXJzIGdyaWV2ZSB3aXRoIHRoZWlyIGNoaWxkcmVuLCBhbmQKCQkJCQliaXJkcyB0aGF0IHNoYXJlIGVhY2ggb3RoZXIncyBwYWluLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBGb3IgYSBmcmllbmQgd2lzaGVzIG1vc3Qgb2YgYWxsIHRoYXQgaGUgbWlnaHQgbm90IG9ubHkKCQkJCQlmZWVsIHBhaW4gd2hlbiBoaXMgZnJpZW5kIGlzIGluIHBhaW4gYnV0IGZlZWwgYWN0dWFsbHkgdGhlIHNhbWUKCQkJCQlwYWlu4oCUZm9yIGV4YW1wbGUgd2hlbiBoZSBpcyB0aGlyc3R5LCBzaGFyZSBoaXMKCQkJCQl0aGlyc3TigJRpZiB0aGlzIHdlcmUgcG9zc2libGUsIGFuZCBpZiBub3QsIGFzIG5lYXJseSB0aGUgc2FtZQoJCQkJCWFzIG1heSBiZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGhlIHNhbWUKCQkJCQlwcmluY2lwbGUgYXBwbGllcyBhbHNvIGluIHRoZSBjYXNlIG9mIGpveTsgaXQgaXMgY2hhcmFjdGVyaXN0aWMgb2YgYQoJCQkJCWZyaWVuZCB0byByZWpvaWNlIGZvciBubyBvdGhlciByZWFzb24gdGhhbiBiZWNhdXNlIHRoZSBvdGhlciBpcwoJCQkJCXJlam9pY2luZy4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNDBiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1240b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkFnYWluIHRoZXJlIGFyZSBzYXlpbmdzIGFib3V0IGZyaWVuZHNoaXAgc3VjaAoJCQkJCWFzICdBbWl0eSBpcyBlcXVhbGl0eScgYW5kICdUcnVlIGZyaWVuZHMgaGF2ZSBvbmUgc3Bpcml0LicgPC90cmFuc2xhdGlvbj4="
translation['7.1240b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbGwgdGhlc2Ugc2F5aW5ncyByZWZlciBiYWNrCgkJCQkJdG8gdGhlIHNpbmdsZSBpbmRpdmlkdWFsOyBmb3IgdGhhdCBpcyB0aGUgd2F5IGluIHdoaWNoIHRoZSBpbmRpdmlkdWFsCgkJCQkJd2lzaGVzIGdvb2QgdG8gaGltc2VsZiwgYXMgbm9ib2R5IGJlbmVmaXRzIGhpbXNlbGYgZm9yIHNvbWUgdWx0ZXJpb3IKCQkJCQltb3RpdmUsIG5vciBzcGVha3Mgd2VsbCBvZiBoaW1zZWxmIGZvciBzdWNoIGFuZCBzdWNoIGEgY29uc2lkZXJhdGlvbiwKCQkJCQliZWNhdXNlIGhlIGFjdGVkIGFzIGFuIGluZGl2aWR1YWw7IGZvciBvbmUgd2hvIGRpc3BsYXlzIGhpcyBhZmZlY3Rpb24KCQkJCQl3aXNoZXMgbm90IHRvIGJlIGJ1dCB0byBiZSB0aG91Z2h0IGFmZmVjdGlvbmF0ZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjExIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCB3aXNoaW5nIGZvciB0aGUgb3RoZXIgdG8KCQkJCQlleGlzdCwgYW5kIGFzc29jaWF0aW5nIHRvZ2V0aGVyLCBhbmQgc2hhcmluZyBqb3kgYW5kIGdyaWVmLCBhbmQgJ2JlaW5nCgkJCQkJb25lIHNwaXJpdCc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Q2YuIDEuIDM6IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs604b21PC9mb3JlaWduPiBtYXJrcyBhIHF1b3RhdGlvbi48L25vdGU+IGFuZAoJCQkJCWJlaW5nIHVuYWJsZSBldmVuIHRvIGxpdmUgd2l0aG91dCBvbmUgYW5vdGhlciBidXQgZHlpbmcKCQkJCQl0b2dldGhlcuKAlGZvciB0aGlzIGlzIHRoZSBjYXNlIHdpdGggdGhlIHNpbmdsZSBpbmRpdmlkdWFsLAoJCQkJCWFuZCBoZSBhc3NvY2lhdGVzIHdpdGggaGltc2VsZiBpbiB0aGlzIHdheSzigJRhbGwgdGhlc2UKCQkJCQljaGFyYWN0ZXJpc3RpY3MgdGhlbiBiZWxvbmcgdG8gdGhlIG1hbiBpbiByZWxhdGlvbiB0byBoaW1zZWxmLgoJCQkJCTxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs604b21PC9mb3JlaWduPiBtYXJrcyBhIHF1b3RhdGlvbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gSW4gYSB3aWNrZWQgbWFuIG9uCgkJCQkJdGhlIG90aGVyIGhhbmQsIGZvciBpbnN0YW5jZSBpbiBvbmUgd2hvIGxhY2tzIHNlbGYtY29udHJvbCwgdGhlcmUgaXMKCQkJCQlkaXNjb3JkLCBhbmQgYmVjYXVzZSBvZiB0aGlzIGl0IGlzIHRob3VnaHQgdG8gYmUgcG9zc2libGUgZm9yIGEgbWFuCgkJCQkJYWN0dWFsbHkgdG8gYmUgaGlzIG93biBlbmVteTsgYnV0IGFzIGJlaW5nIG9uZSBhbmQgaW5kaXZpc2libGUgaGUgaXMKCQkJCQlkZXNpcmFibGUgdG8gaGltc2VsZi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJVGhpcyBpcyB0aGUgY2FzZSB3aXRoIGEgZ29vZCBtYW4gYW5kIG9uZSB3aG9zZSBmcmllbmRzaGlwIGlzIGJhc2VkIG9uCgkJCQkJZ29vZG5lc3MsIGJlY2F1c2UgYXNzdXJlZGx5IGFuIGV2aWwgbWFuIGlzIG5vdCBhIHNpbmdsZSBpbmRpdmlkdWFsIGJ1dAoJCQkJCW1hbnksIGFuZCBhIGRpZmZlcmVudCBwZXJzb24gaW4gdGhlIHNhbWUgZGF5LCBhbmQgZnVsbCBvZiBjYXByaWNlLgoJCQkJCUhlbmNlIGEgbWFuJ3MgYWZmZWN0aW9uIGZvciBoaW1zZWxmIGNhcnJpZXMgYmFjayB0byBsb3ZlIG9mIHRoZQoJCQkJCWdvb2Q7PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmZvciBiZWNhdXNlIGluIGEKCQkJCQl3YXkgYSBtYW4gaXMgbGlrZSBoaW1zZWxmIGFuZCBhIHNpbmdsZSBwZXJzb24gYW5kIGdvb2QgdG8gaGltc2VsZiwgaW4KCQkJCQl0aGlzIHdheSBoZSBpcyBkZWFyIGFuZCBkZXNpcmFibGUgdG8gaGltc2VsZi4gQW5kIGEgbWFuIGlzIGxpa2UgdGhhdAoJCQkJCWJ5IG5hdHVyZSwgYnV0IGEgd2lja2VkIG1hbiBpcyBjb250cmFyeSB0byBuYXR1cmUuIDwvdHJhbnNsYXRpb24+"
translation['7.1241a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNi4xNCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgYSBnb29kIG1hbiBkb2VzIG5vdAoJCQkJCXJlYnVrZSBoaW1zZWxmIGVpdGhlciBhdCB0aGUgdGltZSwgbGlrZSB0aGUgdW5jb250cm9sbGVkLCBub3IgeWV0IGhpcwoJCQkJCWZvcm1lciBzZWxmIGhpcyBsYXRlciwgbGlrZSB0aGUgcGVuaXRlbnQsIG5vciBoaXMgbGF0ZXIgc2VsZiBoaXMKCQkJCQlmb3JtZXIsIGxpa2UgdGhlIGxpYXLigJQ8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuMTUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gKGFuZCBnZW5lcmFsbHksIGlmIGl0IGlzIG5lY2Vzc2FyeSB0byBkaXN0aW5ndWlzaCBhcwoJCQkJCXRoZSBzb3BoaXN0cyBkbywgaGUgaXMgcmVsYXRlZCB0byBoaW1zZWxmIGFzICdKb2huIFN0eWxlcycgaXMgcmVsYXRlZAoJCQkJCXRvICdnb29kIEpvaG4gU3R5bGVzJzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5TZWUgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gU0UgMTc1Yi4xNSI+U29waGlzdGljaSBFbGVuY2hpIDE3NWIKCQkJCQkJMTVmZi48L2JpYmw+ICdDb3Jpc2N1cycgaXMgdXNlZCBmb3IgYW55IGltYWdpbmFyeSBwZXJzb24sIGNmLgoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSImZ3Q7QXJpc3RvdC4gRXVkLiBFdGguIDEyMjBhLjE5Ij5BcmlzdG90LiBFdWQuIEV0aC4gMTIyMGEgMTkgZi48L2JpYmw+PC9ub3RlPjsKCQkJCQlmb3IgaXQgaXMgY2xlYXIgdGhhdCB0aGUgc2FtZSBhbW91bnQgb2YgJ0pvaG4gU3R5bGVzJyBpcyBnb29kIGFzIG9mCgkJCQkJJ2dvb2QgSm9obiBTdHlsZXMnKeKAlGJlY2F1c2Ugd2hlbiBtZW4gYmxhbWUgdGhlbXNlbHZlcyB0aGV5CgkJCQkJYXJlIG11cmRlcmluZyB0aGVpciBvd24gcGVyc29uYWxpdGllcywgd2hlcmVhcyBldmVyeWJvZHkgc2VlbXMgdG8KCQkJCQloaW1zZWxmIGdvb2QuIEFuZCBoZSB3aG8gaXMgYWJzb2x1dGVseSBnb29kIHNlZWtzIHRvIGJlIGRlYXIgZXZlbiB0bwoJCQkJCWhpbXNlbGYsIGFzIGhhcyBiZWVuIHNhaWQsPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gU0UgMTc1Yi4xNSI+U29waGlzdGljaSBFbGVuY2hpIDE3NWIKCQkJCQkJMTVmZi48L2JpYmw+ICdDb3Jpc2N1cycgaXMgdXNlZCBmb3IgYW55IGltYWdpbmFyeSBwZXJzb24sIGNmLgoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSImZ3Q7QXJpc3RvdC4gRXVkLiBFdGguIDEyMjBhLjE5Ij5BcmlzdG90LiBFdWQuIEV0aC4gMTIyMGEgMTkgZi48L2JpYmw+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmxsLgoJCQkJCQkxMy0yMS48L25vdGU+IGJlY2F1c2UgaGUgaGFzIHR3byBmYWN0b3JzIHdpdGhpbiBoaW0gd2hpY2ggYnkKCQkJCQluYXR1cmUgZGVzaXJlIHRvIGJlIGZyaWVuZGx5IGFuZCB3aGljaCBpdCBpcyBpbXBvc3NpYmxlIHRvIGRyYXcKCQkJCQlhc3VuZGVyLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjYuMTYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGhlcmVmb3JlIGluCgkJCQkJdGhlIGNhc2Ugb2YgbWFuIGVhY2ggaW5kaXZpZHVhbCBzZWVtcyBkZWFyIHRvIGhpbXNlbGYsIGFsdGhvdWdoIGluIHRoZQoJCQkJCWNhc2Ugb2Ygb3RoZXIgYW5pbWFscyBpdCBpcyBub3Qgc28sIGZvciBleGFtcGxlIGEgaG9yc2UgdG8gaXRzZWxmIC4gLgoJCQkJCS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U29tZSB3b3JkcyBzZWVtIHRvIGhhdmUKCQkJCQkJYmVlbiBsb3N0IGhlcmUuPC9ub3RlPiBzbyBpdCBpcyBub3QgZGVhciB0byBpdHNlbGYuIEJ1dCBuZWl0aGVyCgkJCQkJYXJlIGNoaWxkcmVuLCBidXQgb25seSB3aGVuIHRoZXkgaGF2ZSBjb21lIHRvIHBvc3Nlc3MgcHVycG9zaXZlCgkJCQkJY2hvaWNlOyBmb3Igd2hlbiB0aGF0IHBvaW50IGlzIHJlYWNoZWQgdGhlIG1pbmQgaXMgYXQgdmFyaWFuY2Ugd2l0aAoJCQkJCXRoZSBhcHBldGl0ZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI2LjE3IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZAoJCQkJCWFmZmVjdGlvbiBmb3Igb25lc2VsZiByZXNlbWJsZXMgdGhlIGFmZmVjdGlvbiBvZiByZWxhdGlvbnNoaXA6IG5laXRoZXIKCQkJCQljb25uZWN0aW9uIGlzIGluIHBlb3BsZSdzIG93biBwb3dlciB0byBkaXNzb2x2ZSwgYnV0IGV2ZW4gaWYgdGhlCgkJCQkJcGFydGllcyBxdWFycmVsLCBuZXZlcnRoZWxlc3MgcmVsYXRpdmVzIGFyZSBzdGlsbCByZWxhdGl2ZXMgYW5kIHRoZQoJCQkJCWluZGl2aWR1YWwgaXMgc3RpbGwgb25lIGFzIGxvbmcgYXMgaGUgbGl2ZXMuIEZyb20gd2hhdCBoYXMgYmVlbiBzYWlkLAoJCQkJCXRoZW4sIGl0IGlzIGNsZWFyIGhvdyBtYW55IG1lYW5pbmdzIHRoZXJlIGFyZSBvZiB0aGUgdGVybSAnYWZmZWN0aW9uLCcKCQkJCQlhbmQgdGhhdCBhbGwgdGhlIGZvcm1zIG9mIGZyaWVuZHNoaXAgY2FycnkgYmFjayB0byB0aGUgZmlyc3Qgb25lLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjQxYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1241a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1241a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy4xIiB1bml0PSJMb2ViIGNoYXAiIC8+SXQgaXMgcmVsYXRpdmUgdG8gb3VyIGlucXVpcnkgdG8gY29uc2lkZXIgYWxzbyB0aGUgc3ViamVjdCBvZgoJCQkJCWFncmVlbWVudCBvZiBmZWVsaW5nIGFuZCBraW5kbHkgZmVlbGluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGVzZSBhcmUgU29sb21vbidzIHZlcnNpb25zIG9mIHRoZSB0ZXJtcyB1c3VhbGx5CgkJCQkJCXJlbmRlcmVkICdjb25jb3JkIGFuZCBnb29kd2lsbC4nPC9ub3RlPjsgZm9yIHNvbWUgcGVvcGxlIHRoaW5rCgkJCQkJdGhhdCB0aGV5IGFyZSB0aGUgc2FtZSB0aGluZywgYW5kIG90aGVycyB0aGF0IHRoZXkgY2Fubm90IGV4aXN0IGFwYXJ0LgoJCQkJCUtpbmRseSBmZWVsaW5nIGlzIG5laXRoZXIgZW50aXJlbHkgZGlzdGluY3QgZnJvbSBmcmllbmRzaGlwIG5vciB5ZXQKCQkJCQlpZGVudGljYWwgd2l0aCBpdC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gSWYKCQkJCQlmcmllbmRzaGlwIGlzIGRpdmlkZWQgaW50byB0aHJlZSBtb2Rlcywga2luZGx5IGZlZWxpbmcgaXMgbm90IGZvdW5kIGluCgkJCQkJdGhlIGZyaWVuZHNoaXAgb2YgdXRpbGl0eSBub3IgaW4gZnJpZW5kc2hpcCBmb3IgcGxlYXN1cmUuIElmIEEgd2lzaGVzCgkJCQkJQiBwcm9zcGVyaXR5IGJlY2F1c2UgaGUgaXMgdXNlZnVsLCB0aGUgbW90aXZlIG9mIGhpcyB3aXNoIHdvdWxkIGJlIG5vdAoJCQkJCUIncyBpbnRlcmVzdCBidXQgaGlzIG93biwgd2hlcmVhcyBpdCBpcyB0aG91Z2h0IHRoYXQga2luZGx5IGZlZWxpbmcKCQkJCQlsaWtlIC4gLiAuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlBlcmhhcHMgJ3ZpcnR1b3VzCgkJCQkJCWZyaWVuZHNoaXAnIHNob3VsZCBiZSBzdXBwbGllZC48L25vdGU+IGlzIG5vdCBmb3IgdGhlIHNha2Ugb2YKCQkJCQl0aGUgcGVyc29uIHdobyBmZWVscyBpdCBoaW1zZWxmIGJ1dCBmb3IgdGhlIHNha2Ugb2YgaGltIGZvciB3aG9tIGhlCgkJCQkJZmVlbHMga2luZGx5OyBhbmQgaWYga2luZGx5IGZlZWxpbmcgd2VyZSBmb3VuZCBpbiBmcmllbmRzaGlwIGZvciB0aGUKCQkJCQlwbGVhc2FudCwgbWVuIHdvdWxkIGZlZWwga2luZGx5IGV2ZW4gdG93YXJkcyBpbmFuaW1hdGUgb2JqZWN0cy4gU28KCQkJCQl0aGF0IGl0IGlzIGNsZWFyIHRoYXQga2luZGx5IGZlZWxpbmcgaGFzIHRvIGRvIHdpdGggdGhlIGZyaWVuZHNoaXAKCQkJCQl0aGF0IGlzIGJhc2VkIG9uIGNoYXJhY3Rlci4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI3LjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IGl0IGlzIHRoZSBtYXJrIG9mIG9uZSB3aG8gZmVlbHMga2luZGx5IG9ubHkgdG8gd2lzaCBnb29kLAoJCQkJCXdoZXJlYXMgaXQgaXMgdGhlIG1hcmsgb2YgdGhlIGZyaWVuZCBhbHNvIHRvIGRvIHRoZSBnb29kIHRoYXQgaGUKCQkJCQl3aXNoZXM7IGZvciBraW5kbHkgZmVlbGluZyBpcyB0aGUgYmVnaW5uaW5nIG9mIGZyaWVuZHNoaXAsIGFzIGV2ZXJ5CgkJCQkJZnJpZW5kIGZlZWxzIGtpbmRseSwgYnV0IG5vdCBldmVyeW9uZSB3aG8gZmVlbHMga2luZGx5IGlzIGEgZnJpZW5kLAoJCQkJCXNpbmNlIHRoZSBraW5kbHkgbWFuIGlzIG9ubHkgYXMgaXQgd2VyZSBtYWtpbmcgYSBiZWdpbm5pbmcuIFRoZXJlZm9yZQoJCQkJCWtpbmRseSBmZWVsaW5nIGlzIHRoZSBiZWdpbm5pbmcgb2YgZnJpZW5kc2hpcCwgYnV0IGl0IGlzIG5vdAoJCQkJCWZyaWVuZHNoaXAuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZvciBpdCBpcyB0aG91Z2h0IHRoYXQKCQkJCQlmcmllbmRzIGFncmVlIGluIGZlZWxpbmcsIGFuZCB0aGF0IHRob3NlIHdobyBhZ3JlZSBpbiBmZWVsaW5nIGFyZQoJCQkJCWZyaWVuZHMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy40IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCB0aGUKCQkJCQlhZ3JlZW1lbnQgb2YgZnJpZW5kc2hpcCBpcyBub3QgaW4gcmVnYXJkIHRvIGV2ZXJ5dGhpbmcsIGJ1dCB0byB0aGluZ3MKCQkJCQlwcmFjdGljYWJsZSBmb3IgdGhlIHBhcnRpZXMsIGFuZCB0aGUgZ29vZCB0byBhbGwgdGhhdCBjb250cmlidXRlcyB0bwoJCQkJCXRoZWlyIGFzc29jaWF0aW9uLiBOb3IgaXMgaXQgb25seSBhZ3JlZW1lbnQgaW4gdGhvdWdodCBvciBpbgoJCQkJCWFwcGV0aXRpb24sIGZvciBpdCBpcyBwb3NzaWJsZSB0byB0aGluayBhbmQgdG8gZGVzaXJlIG9wcG9zaXRlCgkJCQkJdGhpbmdzLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hcyBpbiB0aGUgbWFuCgkJCQkJbGFja2luZyBzZWxmLWNvbnRyb2wgdGhpcyBkaXNjb3JkIG9jY3VyczsgaWYgYSBtYW4gYWdyZWVzIHdpdGggYW5vdGhlcgoJCQkJCWluIHB1cnBvc2l2ZSBjaG9pY2UgaGUgZG9lcyBub3QgbmVjZXNzYXJpbHkgYWdyZWUgd2l0aCBoaW0gaW4gZGVzaXJlCgkJCQkJYWxzby4gPC90cmFuc2xhdGlvbj4="
translation['7.1241b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy41IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFncmVlbWVudCBvY2N1cnMgaW4KCQkJCQl0aGUgY2FzZSBvZiBnb29kIG1lbuKAlGF0IGFsbCBldmVudHMgd2hlbiBiYWQgbWVuIHB1cnBvc2UgYW5kCgkJCQkJZGVzaXJlIHRoZSBzYW1lIHRoaW5ncyB0aGV5IGhhcm0gb25lIGFub3RoZXIuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy42IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBpdCBhcHBlYXJzIHRoYXQgYWdyZWVtZW50LAoJCQkJCWxpa2UgZnJpZW5kc2hpcCwgaXMgbm90IGEgdGVybSBvZiBzaW5nbGUgbWVhbmluZywgYnV0IHdoZXJlYXMgdGhlCgkJCQkJcHJpbWFyeSBhbmQgbmF0dXJhbCBmb3JtIG9mIGl0IGlzIGdvb2QsIHNvIHRoYXQgaXQgaXMgbm90IHBvc3NpYmxlIGZvcgoJCQkJCWJhZCBtZW4gdG8gYWdyZWUgaW4gdGhpcyB3YXksIHRoZXJlIGlzIGFub3RoZXIgc29ydCBvZiBhZ3JlZW1lbnQgc2hvd24KCQkJCQlldmVuIGJ5IGJhZCBtZW4gd2hlbiB0aGVpciBwdXJwb3NlIGFuZCBkZXNpcmUgYXJlIGZvciB0aGUgc2FtZQoJCQkJCW9iamVjdHMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy43IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCBpdCBpcyBvbmx5CgkJCQkJcHJvcGVyIGZvciB0aGVtIHRvIGFpbSBhdCB0aGUgc2FtZSBvYmplY3RzIGluIGNhc2VzIHdoZW4gaXQgaXMKCQkJCQlwb3NzaWJsZSBmb3IgYm90aCB0byBoYXZlIHRoZSB0aGluZ3MgYWltZWQgYXQsIHNpbmNlIGlmIHRoZXkgYWltIGF0IGEKCQkJCQl0aGluZyBvZiBhIGtpbmQgdGhhdCBpdCBpcyBub3QgcG9zc2libGUgZm9yIGJvdGggdG8gaGF2ZSwgdGhleSB3aWxsCgkJCQkJcXVhcnJlbDsgYnV0IHRob3NlIHdobyBhZ3JlZSBpbiBtaW5kIGRvIG5vdCBxdWFycmVsLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iNy44IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXJlZm9yZSBhZ3JlZW1lbnQgZXhpc3RzIHdoZW4gdGhlcmUgaXMgdGhlIHNhbWUgcHVycG9zaXZlIGNob2ljZQoJCQkJCWFzIHRvIHJ1bGluZyBhbmQgYmVpbmcgcnVsZWTigJRub3QgZWFjaCBjaG9vc2luZyBoaW1zZWxmIHRvCgkJCQkJcnVsZSBidXQgYm90aCB0aGUgc2FtZSBvbmUuIEFncmVlbWVudCBpcyBjaXZpYyBmcmllbmRzaGlwLiBTbyBtdWNoIGZvcgoJCQkJCXRoZSBzdWJqZWN0IG9mIGFncmVlbWVudCBpbiBmZWVsaW5nIGFuZCBraW5kbHkgZmVlbGluZy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgcXVlc3Rpb24gaXMgcmFpc2VkLCB3aHkgdGhvc2Ugd2hvIGhhdmUgY29uZmVycmVkIGEgYmVuZWZpdCBmZWVsCgkJCQkJbW9yZSBhZmZlY3Rpb24gZm9yIHRob3NlIHdobyBoYXZlIHJlY2VpdmVkIGl0IHRoYW4gdGhvc2Ugd2hvIGhhdmUKCQkJCQlyZWNlaXZlZCBpdCBmZWVsIGZvciB0aG9zZSB3aG8gaGF2ZSBjb25mZXJyZWQgaXQ7IHdoZXJlYXMganVzdGljZQoJCQkJCXNlZW1zIHRvIHJlcXVpcmUgdGhlIG9wcG9zaXRlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBPbmUgbWlnaHQgY29uY2VpdmUgdGhhdCBpdCBvY2N1cnMgZm9yIHJlYXNvbnMgb2YKCQkJCQl1dGlsaXR5IGFuZCBwZXJzb25hbCBiZW5lZml0OyBmb3IgYmVuZWZpdCBpcyBvd2luZyB0byBvbmUgcGFydHkgYW5kIGl0CgkJCQkJaXMgdGhlIG90aGVyIHBhcnR5J3MgZHV0eSB0byByZXBheSBpdC4gQnV0IHJlYWxseSBpdCBpcyBub3QgdGhpcwoJCQkJCWFsb25lOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBpdCBpcyBhbHNvIGEgbGF3CgkJCQkJb2YgbmF0dXJl4oCUYWN0aXZpdHkgaXMgYSBtb3JlIGRlc2lyYWJsZSB0aGluZywgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNDFiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1241b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGVyZSBpcyB0aGUgc2FtZSByZWxhdGlvbiBiZXR3ZWVuIGVmZmVjdCBhbmQKCQkJCQlhY3Rpdml0eSBhcyBiZXR3ZWVuIHRoZSBwYXJ0aWVzIGhlcmU6IHRoZSBwZXJzb24gYmVuZWZpdGVkIGlzIGFzIGl0CgkJCQkJd2VyZSB0aGUgcHJvZHVjdCBvZiB0aGUgYmVuZWZhY3Rvci4gVGhpcyBpcyB3aHkgZXZlbiBhbmltYWxzIGhhdmUgdGhlCgkJCQkJcGhpbG9wcm9nZW5pdGl2ZSBpbnN0aW5jdCwgd2hpY2ggdXJnZXMgdGhlbSB0byBwcm9kdWNlIG9mZnNwcmluZyBhbmQKCQkJCQlhbHNvIHRvIHByb3RlY3QgdGhlIG9mZnNwcmluZyBwcm9kdWNlZC4gPC90cmFuc2xhdGlvbj4="
translation['7.1241b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOC40IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBpbiBmYWN0IGZhdGhlcnMgbG92ZSB0aGVpciBjaGlsZHJlbiBtb3JlCgkJCQkJdGhhbiB0aGV5IGFyZSBsb3ZlZCBieSB0aGVtIChtb3RoZXJzIG1vcmUgc28gdGhhbiBmYXRoZXJzKTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGlzIGNsYXVzZSBpcyBwcm9iYWJseSBhbgoJCQkJCQlpbnRlcnBvbGF0aW9uIGluIHRoZSBHcmVlay48L25vdGU+IGFuZCB0aGVzZSBpbiB0aGVpciB0dXJuIGxvdmUKCQkJCQl0aGVpciBjaGlsZHJlbiBtb3JlIHRoYW4gdGhlaXIgcGFyZW50cywgYmVjYXVzZSBhY3Rpdml0eSBpcyB0aGUKCQkJCQlncmVhdGVzdCBnb29kLiBBbmQgbW90aGVycyBsb3ZlIHRoZWlyIGNoaWxkcmVuIG1vcmUgdGhhbiBmYXRoZXJzLAoJCQkJCWJlY2F1c2UgdGhleSB0aGluayB0aGF0IHRoZSBjaGlsZHJlbiBhcmUgbW9yZSB0aGVpciB3b3JrOyA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjguNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBmb3IgcGVvcGxlIGVzdGltYXRlIHdvcmsgYnkKCQkJCQlpdHMgZGlmZmljdWx0eSwgYW5kIGluIHRoZSBwcm9kdWN0aW9uIG9mIGEgY2hpbGQgdGhlIG1vdGhlciBoYXMgbW9yZQoJCQkJCXBhaW4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlN1Y2ggbWF5IGJlIG91ciBkZWNpc2lvbiBvbgoJCQkJCXRoZSBzdWJqZWN0IG9mIGZyaWVuZHNoaXAgZm9yIG9uZXNlbGYgYW5kIG9mIGZyaWVuZHNoaXAgYW1vbmcgbW9yZQoJCQkJCXRoYW4gb25lLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkl0IGlzIHRob3VnaHQgdGhhdCB3aGF0IGlzIGp1c3QgaXMgc29tZXRoaW5nCgkJCQkJdGhhdCBpcyBlcXVhbCwgYW5kIGFsc28gdGhhdCBmcmllbmRzaGlwIGlzIGJhc2VkIG9uIGVxdWFsaXR5LCBpZiB0aGVyZQoJCQkJCWlzIHRydXRoIGluIHRoZSBzYXlpbmcgJ0FtaXR5IGlzIGVxdWFsaXR5LicgQW5kIGFsbCBjb25zdGl0dXRpb25zIGFyZQoJCQkJCXNvbWUgc3BlY2llcyBvZiBqdXN0aWNlOyBmb3IgdGhleSBhcmUgcGFydG5lcnNoaXBzLCBhbmQgZXZlcnkKCQkJCQlwYXJ0bmVyc2hpcCBpcyBmb3VuZGVkIG9uIGp1c3RpY2UsIHNvIHRoYXQgdGhlcmUgYXJlIGFzIG1hbnkgc3BlY2llcwoJCQkJCW9mIGp1c3RpY2UgYW5kIG9mIHBhcnRuZXJzaGlwIGFzIHRoZXJlIGFyZSBvZiBmcmllbmRzaGlwLCBhbmQgYWxsCgkJCQkJdGhlc2Ugc3BlY2llcyBib3JkZXIgb24gZWFjaCBvdGhlciBhbmQgaGF2ZSB0aGVpciBkaWZmZXJlbnRpYSBjbG9zZWx5CgkJCQkJcmVsYXRlZC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IHNpbmNlIHRoZQoJCQkJCXJlbGF0aW9ucyBvZiBzb3VsIGFuZCBib2R5LCBjcmFmdHNtYW4gYW5kIHRvb2wsIGFuZCBtYXN0ZXIgYW5kIHNsYXZlCgkJCQkJYXJlIHNpbWlsYXIsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gdG8gb25lIGFub3RoZXIuCgkJCQkJCVBlcmhhcHMgdGhlIEdyZWVrIHNob3VsZCBiZSBhbWVuZGVkIHRvIGdpdmUgJ25vdCBzaW1pbGFyJyAodG8KCQkJCQkJdGhvc2UganVzdCBtZW50aW9uZWQpLjwvbm90ZT4gYmV0d2VlbiB0aGUgdHdvIHRlcm1zIG9mIGVhY2ggb2YKCQkJCQl0aGVzZSBwYWlycyB0aGVyZSBpcyBubyBwYXJ0bmVyc2hpcDs8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+Zm9yIHRoZXkgYXJlIG5vdCB0d28sIGJ1dCB0aGUgZm9ybWVyIGlzIG9uZSBhbmQgdGhlCgkJCQkJbGF0dGVyIGEgcGFydCBvZiB0aGF0IG9uZSwgbm90IG9uZSBpdHNlbGY7IG5vciBpcyB0aGUgZ29vZCBkaXZpc2libGUKCQkJCQliZXR3ZWVuIHRoZW0sIGJ1dCB0aGF0IG9mIGJvdGggYmVsb25ncyB0byB0aGUgb25lIGZvciB3aG9zZSBzYWtlIHRoZXkKCQkJCQlleGlzdC4gRm9yIHRoZSBib2R5IGlzIHRoZSBzb3VsJ3MgdG9vbCBib3JuIHdpdGggaXQsIGEgc2xhdmUgaXMgYXMgaXQKCQkJCQl3ZXJlIGEgbWVtYmVyIG9yIHRvb2wgb2YgaGlzIG1hc3RlciwgYSB0b29sIGlzIGEgc29ydCBvZiBpbmFuaW1hdGUKCQkJCQlzbGF2ZS48L3RyYW5zbGF0aW9uPg=="
translation['7.1242a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iOS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZSBvdGhlciBwYXJ0bmVyc2hpcHMgYXJlIGEgY29uc3RpdHVlbnQKCQkJCQlwYXJ0IG9mIHRoZSBwYXJ0bmVyc2hpcHMgb2YgdGhlIHN0YXRl4oCUZm9yIGV4YW1wbGUgdGhhdCBvZgoJCQkJCXRoZSBtZW1iZXJzIG9mIGEgYnJvdGhlcmhvb2Qgb3IgYSBwcmllc3Rob29kLCBvciB3aXRoIGJ1c2luZXNzCgkJCQkJcGFydG5lcnNoaXBzLiBBbGwgZm9ybXMgb2YgY29uc3RpdHV0aW9uIGV4aXN0IHRvZ2V0aGVyIGluIHRoZQoJCQkJCWhvdXNlaG9sZCwgYm90aCB0aGUgY29ycmVjdCBmb3JtcyBhbmQgdGhlIGRldmlhdGlvbnMgKGZvciB0aGUgc2FtZQoJCQkJCXRoaW5nIGlzIGZvdW5kIGluIGNvbnN0aXR1dGlvbnMgYXMgaW4gdGhlIGNhc2Ugb2YgbXVzaWNhbCBtb2Rlcyk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Q2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIFBvbC4gOC4xMzQyYS4yNCIgdmFsaWQ9InllcyI+QXJpc3RvdC4gUG9sLgoJCQkJCQkxMzQyYSAyNDwvYmlibD48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG/ts69IOG8gc+BzrzOv869zrnhv7bOvQoJCQkJCQkJz4DOsc+BzrXOus6y4b2xz4POtc65z4IgzrXhvLDPg+G9tiDOus6x4b22IM+E4b+2zr0gzrzOtc674b+2zr0gz4ThvbAgz4PhvbvOvc+Ezr/Ovc6xIM66zrHhvbYKCQkJCQkJCc+AzrHPgc6xzrrOtc+Hz4HPic+DzrzhvbPOvc6xPC9mb3JlaWduPiwgJ3Rob3NlIGhhcm1vbmllcyBhbmQgbWVsb2RpZXMKCQkJCQkJdGhhdCBhcmUgaGlnaGx5IHN0cnVuZyBhbmQgaXJyZWd1bGFyIGluIGNvbG9yYXRpb24gKGkuZS4KCQkJCQkJZGl2ZXJnZW50IGZyb20gdGhlIHJlZ3VsYXIgc2NhbGUgaW4gaGF2aW5nIHNtYWxsZXIgaW50ZXJ2YWxzKQoJCQkJCQlhcmUgZGV2aWF0aW9ucy4nPC9ub3RlPuKAlDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIFBvbC4gOC4xMzQyYS4yNCIgdmFsaWQ9InllcyI+QXJpc3RvdC4gUG9sLgoJCQkJCQkxMzQyYSAyNDwvYmlibD48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG/ts69IOG8gc+BzrzOv869zrnhv7bOvQoJCQkJCQkJz4DOsc+BzrXOus6y4b2xz4POtc65z4IgzrXhvLDPg+G9tiDOus6x4b22IM+E4b+2zr0gzrzOtc674b+2zr0gz4ThvbAgz4PhvbvOvc+Ezr/Ovc6xIM66zrHhvbYKCQkJCQkJCc+AzrHPgc6xzrrOtc+Hz4HPic+DzrzhvbPOvc6xPC9mb3JlaWduPiwgJ3Rob3NlIGhhcm1vbmllcyBhbmQgbWVsb2RpZXMKCQkJCQkJdGhhdCBhcmUgaGlnaGx5IHN0cnVuZyBhbmQgaXJyZWd1bGFyIGluIGNvbG9yYXRpb24gKGkuZS4KCQkJCQkJZGl2ZXJnZW50IGZyb20gdGhlIHJlZ3VsYXIgc2NhbGUgaW4gaGF2aW5nIHNtYWxsZXIgaW50ZXJ2YWxzKQoJCQkJCQlhcmUgZGV2aWF0aW9ucy4nPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gcGF0ZXJuYWwgYXV0aG9yaXR5IGJlaW5nIHJveWFsLCB0aGUKCQkJCQlyZWxhdGlvbnNoaXAgb2YgbWFuIGFuZCB3aWZlIGFyaXN0b2NyYXRpYywgdGhhdCBvZiBicm90aGVycyBhCgkJCQkJcmVwdWJsaWMsIHdoaWxlIHRoZSBkZXZpYXRpb24tZm9ybXMgb2YgdGhlc2UgYXJlIHR5cmFubnksIG9saWdhcmNoeQoJCQkJCWFuZCBkZW1vY3JhY3k7IGFuZCB0aGVyZSBhcmUgdGhlcmVmb3JlIGFzIG1hbnkgdmFyaWV0aWVzIG9mCgkJCQkJanVzdGljZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjkuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgc2luY2UgdGhlcmUgYXJlIHR3byBzb3J0cyBvZiBlcXVhbGl0eSwKCQkJCQludW1lcmljYWwgYW5kIHByb3BvcnRpb25hbCwgdGhlcmUgd2lsbCBhbHNvIGJlIHZhcmlvdXMgc3BlY2llcyBvZgoJCQkJCWp1c3RpY2UgYW5kIG9mIHBhcnRuZXJzaGlwIGFuZCBmcmllbmRzaGlwLiBUaGUgcGFydG5lcnNoaXAgb2YKCQkJCQlkZW1vY3JhY3kgaXMgYmFzZWQgb24gbnVtZXJpY2FsIGVxdWFsaXR5LCBhbmQgc28gaXMgdGhlIGZyaWVuZHNoaXAgb2YKCQkJCQljb21yYWRlcywgYXMgaXQgaXMgbWVhc3VyZWQgYnkgdGhlIHNhbWUgc3RhbmRhcmQ7IHdoZXJlYXMgdGhlCgkJCQkJYXJpc3RvY3JhdGljIHBhcnRuZXJzaGlwICh3aGljaCBpcyB0aGUgYmVzdCkgYW5kIHRoZSByb3lhbCBhcmUKCQkJCQlwcm9wb3J0aW9uYWwsIGZvciBpdCBpcyBqdXN0IGZvciBzdXBlcmlvciBhbmQgaW5mZXJpb3IgdG8gaGF2ZSBub3QgdGhlCgkJCQkJc2FtZSBzaGFyZSBidXQgcHJvcG9ydGlvbmFsIHNoYXJlczsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSI5LjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gYW5kIHNpbWlsYXJseSBhbHNvIHRoZSBmcmllbmRzaGlwIG9mIGZhdGhlciBhbmQgc29uLAoJCQkJCWFuZCB0aGUgc2FtZSB3YXkgaW4gcGFydG5lcnNoaXBzLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI0MmEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1242a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1242a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TcGVjaWZpZWQgc29ydHMgb2YgZnJpZW5kc2hpcCBhcmUgdGhlcmVmb3JlIHRoZSBmcmllbmRzaGlwIG9mCgkJCQkJcmVsYXRpdmVzLCB0aGF0IG9mIGNvbXJhZGVzLCB0aGF0IG9mIHBhcnRuZXJzIGFuZCB3aGF0IGlzIHRlcm1lZCBjaXZpYwoJCQkJCWZyaWVuZHNoaXAuIFJlYWxseSBmcmllbmRzaGlwIG9mIHJlbGF0aXZlcyBoYXMgbW9yZSB0aGFuIG9uZSBzcGVjaWVzLAoJCQkJCW9uZSBhcyBiZXR3ZWVuIGJyb3RoZXJzLCBhbm90aGVyIGFzIG9mIGZhdGhlciBhbmQgc29uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZXNlIHR3byBjbGF1c2VzIGxvb2sgbGlrZSBhbgoJCQkJCQlpbnRlcnBvbGF0aW9uLjwvbm90ZT46IGl0IG1heSBiZSBwcm9wb3J0aW9uYWwsIGZvciBleGFtcGxlCgkJCQkJcGF0ZXJuYWwgZnJpZW5kc2hpcCwgb3IgYmFzZWQgb24gbnVtYmVyLCBmb3IgZXhhbXBsZSB0aGUgZnJpZW5kc2hpcCBvZgoJCQkJCWJyb3RoZXJz4oCUZm9yIHRoaXMgaXMgbmVhciB0aGUgZnJpZW5kc2hpcCBvZiBjb21yYWRlcywgYXMgaW4KCQkJCQl0aGlzIGFsc28gdGhleSBjbGFpbSBwcml2aWxlZ2VzIG9mIHNlbmlvcml0eS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IENpdmljIGZyaWVuZHNoaXAgb24gdGhlIG90aGVyCgkJCQkJaGFuZCBpcyBjb25zdGl0dXRlZCBpbiB0aGUgZnVsbGVzdCBkZWdyZWUgb24gdGhlIHByaW5jaXBsZSBvZiB1dGlsaXR5LAoJCQkJCWZvciBpdCBzZWVtcyB0byBiZSB0aGUgaW5kaXZpZHVhbCdzIGxhY2sgb2Ygc2VsZi1zdWZmaWNpZW5jeSB0aGF0CgkJCQkJbWFrZXMgdGhlc2UgdW5pb25zIHBlcm1hbmVudOKAlHNpbmNlIHRoZXkgd291bGQgaGF2ZSBiZWVuCgkJCQkJZm9ybWVkIGluIGFueSBjYXNlIG1lcmVseSBmb3IgdGhlIHNha2Ugb2Ygc29jaWV0eS4gT25seSBjaXZpYwoJCQkJCWZyaWVuZHNoaXAgYW5kIHRoZSBkZXZpYXRpb24gZnJvbSBpdCBhcmUgbm90IG1lcmVseSBmcmllbmRzaGlwcyBidXQKCQkJCQlhbHNvIHBhcnRuZXJzaGlwcyBvbiBhIGZyaWVuZGx5IGZvb3Rpbmc7IHRoZSBvdGhlcnMgYXJlIG9uIGEgYmFzaXMgb2YKCQkJCQlzdXBlcmlvcml0eS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IFRoZSBqdXN0aWNlCgkJCQkJdGhhdCB1bmRlcmxpZXMgYSBmcmllbmRzaGlwIG9mIHV0aWxpdHkgaXMgaW4gdGhlIGhpZ2hlc3QgZGVncmVlIGp1c3QsCgkJCQkJYmVjYXVzZSB0aGlzIGlzIHRoZSBjaXZpYyBwcmluY2lwbGUgb2YganVzdGljZS4gVGhlIGNvbWluZyB0b2dldGhlciBvZgoJCQkJCWEgc2F3IHdpdGggdGhlIGNyYWZ0IHRoYXQgdXNlcyBpdCBpcyBvbiBkaWZmZXJlbnQgbGluZXPigJRpdAoJCQkJCWlzIG5vdCBmb3IgdGhlIHNha2Ugb2Ygc29tZSBjb21tb24gb2JqZWN0LCBmb3Igc2F3IGFuZCBjcmFmdCBhcmUgbGlrZQoJCQkJCWluc3RydW1lbnQgYW5kIHNwaXJpdCwgYnV0IGZvciB0aGUgc2FrZSBvZiB0aGUgbWFuIHdobyBlbXBsb3lzIHRoZW0uCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC40IiB1bml0PSJMb2ViIGNoYXAiIC8+IEl0IGRvZXMgaW5kZWVkCgkJCQkJY29tZSBhYm91dCB0aGF0IGV2ZW4gdGhlIHRvb2wgaXRzZWxmIHJlY2VpdmVzIGF0dGVudGlvbiB3aGljaCBpdAoJCQkJCWRlc2VydmVzIHdpdGggYSB2aWV3IHRvIGl0cyB3b3JrLCBzaW5jZSBpdCBleGlzdHMgZm9yIHRoZSBzYWtlIG9mIGl0cwoJCQkJCXdvcmssIGFuZCB0aGUgZXNzZW50aWFsIG5hdHVyZSBvZiBhIGdpbWxldCBpcyB0d29mb2xkLCB0aGUgbW9yZQoJCQkJCWltcG9ydGFudCBoYWxmIGJlaW5nIGl0cyBhY3Rpdml0eSwgYm9yaW5nLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Ob3QgaXRzIDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8lc6+zrnPgjwvZm9yZWlnbj4sCgkJCQkJCWl0cyBzaGFwZSwgaGFyZG5lc3MsIGV0Yy48L25vdGU+IEFuZCB0aGUgYm9keSBhbmQgdGhlIHNsYXZlIGFyZQoJCQkJCWluIHRoZSBjbGFzcyBvZiB0b29sLCBhcyBoYXMgYmVlbiBzYWlkIGJlZm9yZS48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvJXOvs65z4I8L2ZvcmVpZ24+LAoJCQkJCQlpdHMgc2hhcGUsIGhhcmRuZXNzLCBldGMuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiA3LjEyNDFiLjE3IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTI0MWIKCQkJCQkJMTctMjQ8L2JpYmw+Ljwvbm90ZT4KCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gNy4xMjQxYi4xNyIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyNDFiCgkJCQkJCTE3LTI0PC9iaWJsPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1242b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBUaGVyZWZvcmUgdG8gc2VlayB0aGUgcHJvcGVyIHdheSBvZgoJCQkJCWFzc29jaWF0aW5nIHdpdGggYSBmcmllbmQgaXMgdG8gc2VlayBmb3IgYSBwYXJ0aWN1bGFyIGtpbmQgb2YganVzdGljZS4KCQkJCQlJbiBmYWN0IHRoZSB3aG9sZSBvZiBqdXN0aWNlIGluIGdlbmVyYWwgaXMgaW4gcmVsYXRpb24gdG8gYSBmcmllbmQsCgkJCQkJZm9yIHdoYXQgaXMganVzdCBpcyBqdXN0IGZvciBjZXJ0YWluIHBlcnNvbnM7IGFuZCBwZXJzb25zIHdobyBhcmUKCQkJCQlwYXJ0bmVycywgYW5kIGEgZnJpZW5kIGlzIGEgcGFydG5lciwgZWl0aGVyIGluIG9uZSdzIGZhbWlseTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5pLmUuICdmcmllbmQnIGluIHRoZSBzZW5zZSBvZgoJCQkJCQkncmVsYXRpb24uJzwvbm90ZT4gb3IgaW4gb25lJ3MgbGlmZS4gRm9yIG1hbiBpcyBub3Qgb25seSBhCgkJCQkJcG9saXRpY2FsIGJ1dCBhbHNvIGEgaG91c2UtaG9sZGluZyBhbmltYWwsIGFuZCBkb2VzIG5vdCwgbGlrZSB0aGUKCQkJCQlvdGhlciBhbmltYWxzLCBjb3VwbGUgb2NjYXNpb25hbGx5IGFuZCB3aXRoIGFueSBjaGFuY2UgZmVtYWxlIG9yIG1hbGUsCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC42IiB1bml0PSJMb2ViIGNoYXAiIC8+IGJ1dCBtYW4gaXMgaW4gYQoJCQkJCXNwZWNpYWwgd2F5IG5vdCBhIHNvbGl0YXJ5IGJ1dCBhIGdyZWdhcmlvdXMgYW5pbWFsLCBhc3NvY2lhdGluZyB3aXRoCgkJCQkJdGhlIHBlcnNvbnMgd2l0aCB3aG9tIGhlIGhhcyBhIG5hdHVyYWwga2luc2hpcDsgYWNjb3JkaW5nbHkgdGhlcmUKCQkJCQl3b3VsZCBiZSBwYXJ0bmVyc2hpcDsgYW5kIGp1c3RpY2Ugb2YgYSBzb3J0LCBldmVuIGlmIHRoZXJlIHdlcmUgbm8KCQkJCQlzdGF0ZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC43IiB1bml0PSJMb2ViIGNoYXAiIC8+IEFuZCBhIGhvdXNlaG9sZAoJCQkJCWlzIGEgc29ydCBvZiBmcmllbmRzaGlw4oCUb3IgcmF0aGVyIHRoZSByZWxhdGlvbnNoaXBzIG9mCgkJCQkJbWFzdGVyIGFuZCBzbGF2ZSBpcyB0aGF0IG9mIGNyYWZ0IGFuZCB0b29scywgYW5kIG9mIHNwaXJpdCBhbmQgYm9keSwKCQkJCQlhbmQgc3VjaCByZWxhdGlvbnNoaXBzIGFyZSBub3QgZnJpZW5kc2hpcHMgb3IgZm9ybXMgb2YganVzdGljZSBidXQKCQkJCQlzb21ldGhpbmcgYW5hbG9nb3VzLCBqdXN0IGFzIGhlYWx0aDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIHRoZSB0ZXh0IGlzIGNvcnJ1cHQuPC9ub3RlPiBpcyBub3QganVzdGljZSBidXQKCQkJCQlhbmFsb2dvdXMgdG8gaXQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgdGhlCgkJCQkJZnJpZW5kc2hpcCBvZiBtYW4gYW5kIHdpZmUgaXMgb25lIG9mIHV0aWxpdHksIGEgcGFydG5lcnNoaXA7IHRoYXQgb2YKCQkJCQlmYXRoZXIgYW5kIHNvbiBpcyB0aGUgc2FtZSBhcyB0aGF0IGJldHdlZW4gZ29kIGFuZCBtYW4gYW5kIGJldHdlZW4KCQkJCQliZW5lZmFjdG9yIGFuZCBiZW5lZmljaWFyeSwgYW5kIGdlbmVyYWxseSBiZXR3ZWVuIG5hdHVyYWwgcnVsZXIgYW5kCgkJCQkJbmF0dXJhbCBzdWJqZWN0LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGhhdAoJCQkJCWJldHdlZW4gYnJvdGhlcnMgaXMgcHJpbmNpcGFsbHkgdGhlIGZyaWVuZHNoaXAgb2YgY29tcmFkZXMsIGFzIGJlaW5nCgkJCQkJb24gYSBmb290aW5nIG9mIGVxdWFsaXR54oCUPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iaWFtYmljIj5Gb3IgbmV2ZXIgZGlkIGhlIG1ha2UgbWUgb3V0IGEgYmFzdGFyZCw8L2w+CgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHRoZSBzYW1lIFpldXMsIG15IGxvcmQsIHdhcyBjYWxsZWQgdGhlIHNpcmU8L2w+CgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2YgYm90aOKAlDwvbD4KCQkJCQk8L3F1b3RlPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJpYW1iaWMiPkZvciBuZXZlciBkaWQgaGUgbWFrZSBtZSBvdXQgYSBiYXN0YXJkLDwvbD4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgdGhlIHNhbWUgWmV1cywgbXkgbG9yZCwgd2FzIGNhbGxlZCB0aGUgc2lyZTwvbD4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5PZiBib3Ro4oCUPC9sPgoJCQkJCTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJTb3BoLiBGci4gNzU1Ij5Tb3BoLiBGci4gNzU1IChKZWJiIGFuZCBQZWFyc29uOyA2ODQgTmF1Y2spPC9iaWJsPi4gVGhlCgkJCQkJCXRoaXJkIGxpbmUgaXMgY29tcGxldGVkIGluIGEgcXVvdGF0aW9uIGJ5CgkJCQkJCVBoaWxvLCA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OuM69zrfPhOG/ts69IM604oCZIM6/4b2QzrTOteG9t8+CPC9mb3JlaWduPi4gKEZvciA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG/t860zrU8L2ZvcmVpZ24+IGRhdGl2ZSBvZiBhZ2VudCBzZWUgS3VobmVyLUdlcnRoLCBpLgoJCQkJCQk0MjIpLjwvbm90ZT4gZm9yIHRoZXNlIGFyZSB0aGUgd29yZHMgb2YgbWVuIHNlZWtpbmcgZXF1YWxpdHkuCgkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iU29waC4gRnIuIDc1NSI+U29waC4gRnIuIDc1NSAoSmViYiBhbmQgUGVhcnNvbjsgNjg0IE5hdWNrKTwvYmlibD4uIFRoZQoJCQkJCQl0aGlyZCBsaW5lIGlzIGNvbXBsZXRlZCBpbiBhIHF1b3RhdGlvbiBieQoJCQkJCQlQaGlsbywgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrjOvc63z4Thv7bOvSDOtOKAmSDOv+G9kM60zrXhvbfPgjwvZm9yZWlnbj4uIChGb3IgPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4Thv7fOtM61PC9mb3JlaWduPiBkYXRpdmUgb2YgYWdlbnQgc2VlIEt1aG5lci1HZXJ0aCwgaS4KCQkJCQkJNDIyKS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI0MmIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1242b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkhlbmNlIGluIHRoZSBob3VzZWhvbGQgYXJlIGZpcnN0IGZvdW5kIHRoZQoJCQkJCW9yaWdpbnMgYW5kIHNwcmluZ3Mgb2YgZnJpZW5kc2hpcCwgb2YgcG9saXRpY2FsIG9yZ2FuaXphdGlvbiBhbmQgb2YKCQkJCQlqdXN0aWNlLjwvdHJhbnNsYXRpb24+"
translation['7.1242b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMTAiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHNpbmNlIHRoZXJlIGFyZSB0aHJlZSBzb3J0cyBvZgoJCQkJCWZyaWVuZHNoaXAsIGJhc2VkIG9uIGdvb2RuZXNzLCBvbiB1dGlsaXR5IGFuZCBvbiBwbGVhc3VyZSwgYW5kIHR3bwoJCQkJCXZhcmlldGllcyBvZiBlYWNoIHNvcnQgKGZvciBlYWNoIG9mIHRoZW0gaXMgZWl0aGVyIG9uIGEgYmFzaXMgb2YKCQkJCQlzdXBlcmlvcml0eSBvciBvZiBlcXVhbGl0eSksIGFuZCB3aGF0IGlzIGp1c3QgaW4gcmVsYXRpb24gdG8gdGhlbSBpcwoJCQkJCWNsZWFyIGZyb20gb3VyIGRpc2N1c3Npb25zLCBpbiB0aGUgdmFyaWV0eSBiYXNlZCBvbiBzdXBlcmlvcml0eSB0aGUKCQkJCQlwcm9wb3J0aW9uYXRlIGNsYWltcyBhcmUgbm90IG9uIHRoZSBzYW1lIGxpbmVzLCBidXQgdGhlIHN1cGVyaW9yIHBhcnR5CgkJCQkJY2xhaW1zIGJ5IGludmVyc2UgcHJvcG9ydGlvbuKAlHRoZSBjb250cmlidXRpb24gb2YgdGhlCgkJCQkJaW5mZXJpb3IgdG8gc3RhbmQgaW4gdGhlIHNhbWUgcmF0aW8gdG8gaGlzIG93biBhcyBoZSBoaW1zZWxmIHN0YW5kcyBpbgoJCQkJCXRvIHRoZSBpbmZlcmlvciwgaGlzIGF0dGl0dWRlIGJlaW5nIHRoYXQgb2YgcnVsZXIgdG8gc3ViamVjdDsKCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjExIiB1bml0PSJMb2ViIGNoYXAiIC8+IG9yIGlmIG5vdCB0aGF0LAoJCQkJCWF0IGFsbCBldmVudHMgaGUgY2xhaW1zIGEgbnVtZXJpY2FsbHkgZXF1YWwgc2hhcmUgKGZvciBpbiBmYWN0IGl0CgkJCQkJaGFwcGVucyBpbiB0aGlzIHdheSBpbiBvdGhlciBhc3NvY2lhdGlvbnMgdG9v4oCUc29tZXRpbWVzIHRoZQoJCQkJCXNoYXJlcyBhcmUgbnVtZXJpY2FsbHkgZXF1YWwsIHNvbWV0aW1lcyBwcm9wb3J0aW9uYWxseTogaWYgdGhlIHBhcnRpZXMKCQkJCQljb250cmlidXRlZCBhIG51bWVyaWNhbGx5IGVxdWFsIHN1bSBvZiBtb25leSwgdGhleSBhbHNvIHRha2UgYSBzaGFyZQoJCQkJCWVxdWFsIGJ5IG51bWVyaWNhbCBlcXVhbGl0eSwgaWYgYW4gdW5lcXVhbCBzdW0sIGEgc2hhcmUgcHJvcG9ydGlvbmFsbHkKCQkJCQllcXVhbCkuIFRoZSBpbmZlcmlvciBwYXJ0eSBvbiB0aGUgY29udHJhcnkgaW52ZXJ0cyB0aGUgcHJvcG9ydGlvbiwgYW5kCgkJCQkJbWFrZXMgYSBkaWFnb25hbCBjb25qdW5jdGlvbjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUKCQkJCQkJaW5mZXJpb3IgcGFydHkgcCBjbGFpbXMgdG8gZHJhdyBhIGxhcmdlciBzaGFyZSBvZiBiZW5lZml0IEIgYW5kCgkJCQkJCXRvIGxlYXZlIHRoZSBzbWFsbGVyIHNoYXJlIGIgdG8gdGhlIHN1cGVyaW9yIHBhcnR5IFAsIHRoZSByZXN1bHQKCQkJCQkJb2Ygd2hpY2ggd291bGQgYmUgcCtCIGFuZCBQK2IuIFRoZSBzdXBlcmlvciBwYXJ0eSBQIGFsc28gaW52b2tlcwoJCQkJCQl0aGUgcHJpbmNpcGxlIG9mIGludmVyc2UgcHJvcG9ydGlvbiAobGluZSA3KSwgYnV0IGFwcGxpZXMgaXQgdG8KCQkJCQkJdGhlaXIgY29udHJpYnV0aW9ucyB0byB0aGUgY29tbW9uIGNhdXNlLCBub3QgdG8gdGhlIGJlbmVmaXRzCgkJCQkJCWRyYXduIGZyb20gaXQ6IGhlIGNsYWltcyB0byBtYWtlIGEgc21hbGxlciBjb250cmlidXRpb24gYywgd2hpbGUKCQkJCQkJdGhlIGluZmVyaW9yIHBhcnR5IG1ha2VzIGEgbGFyZ2VyIG9uZSBDLCB0aGUgcmVzdWx0IG9mIHdoaWNoCgkJCQkJCXdvdWxkIGJlIFAtYyBhbmQgcC1DLiBUaGUgcHJvcG9zZWQgY29uanVuY3Rpb25zIGFyZSBpbiBmYWN0IGJvdGgKCQkJCQkJb2YgdGhlbSBkaWFnb25hbCwgY29ubmVjdGluZyB0aGUgbGFyZ2VyIHBlcnNvbiB3aXRoIHRoZSBzbWFsbGVyCgkJCQkJCXRoaW5nIGFuZCB2aWNlIHZlcnNhLjwvbm90ZT47IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMTIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gYnV0IGl0IHdvdWxkIHNlZW0gdGhhdCBpbiB0aGlzIHdheSB0aGUgc3VwZXJpb3IKCQkJCQljb21lcyBvZmYgd29yc2UsIGFuZCB0aGUgZnJpZW5kc2hpcCBvciBwYXJ0bmVyc2hpcCBpcyBhIGNoYXJpdGFibGUKCQkJCQlzZXJ2aWNlLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5QZXJoYXBzIHRoZSBHcmVlawoJCQkJCQlzaG91bGQgYmUgYWx0ZXJlZCB0byBnaXZlICdmcmllbmRzaGlwIGlzIGEgY2hhcml0eSBhbmQgbm90IGEKCQkJCQkJcGFydG5lcnNoaXAuJzwvbm90ZT4gVGhlcmVmb3JlIGVxdWFsaXR5IG11c3QgYmUgcmVzdG9yZWQgYW5kCgkJCQkJcHJvcG9ydGlvbiBzZWN1cmVkIGJ5IHNvbWUgb3RoZXIgbWVhbnM7IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMTMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gYW5kIHRoaXMgbWVhbnMgaXMgaG9ub3IsPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPndoaWNoIGJlbG9uZ3MgYnkgbmF0dXJlIHRvIGEKCQkJCQlydWxlciBhbmQgZ29kIGluIHJlbGF0aW9uIHRvIGEgc3ViamVjdC4gQnV0IHRoZSBwcm9maXQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGUgYWR2YW50YWdlIGluIHRoZSBzaGFwZSBvZgoJCQkJCQlwcm90ZWN0aW9uLCBndWlkYW5jZSwgZXRjLiwgdGhhdCB0aGUgaW5mZXJpb3IgcGFydHkgZGVyaXZlcyBmcm9tCgkJCQkJCXRoZSBmcmllbmRzaGlwLjwvbm90ZT4gbXVzdCBiZSBtYWRlIGVxdWFsIHRvIHRoZQoJCQkJCWhvbm9yLjwvdHJhbnNsYXRpb24+"
translation['7.1243a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RnJpZW5kc2hpcCBvbiBhIGZvb3Rpbmcgb2YgZXF1YWxpdHkgaXMgY2l2aWMKCQkJCQlmcmllbmRzaGlwLiBDaXZpYyBmcmllbmRzaGlwIGlzLCBpdCBpcyB0cnVlLCBiYXNlZCBvbiB1dGlsaXR5LCBhbmQKCQkJCQlmZWxsb3ctY2l0aXplbnMgYXJlIG9uZSBhbm90aGVyJ3MgZnJpZW5kcyBpbiB0aGUgc2FtZSB3YXkgYXMgZGlmZmVyZW50CgkJCQkJY2l0aWVzIGFyZSwgYW5kICI8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAxMzkzIj5BdGhlbnM8L3BsYWNlTmFtZT4gbm8KCQkJCQlsb25nZXIga25vd2V0aCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLE1lZ2FyYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsTWVnYXJhIj5NZWdhcmE8L3BsYWNlTmFtZT4sIjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5MaXQuCgkJCQkJCSd0aGUgQXRoZW5pYW5zIG5vIGxvbmdlciByZWNvZ25pemUgdGhlIE1lZ2FyaWFucy4nIEF1dGhvcgoJCQkJCQl1bmtub3duIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkVsZWcuIEFsZXguIEFkZXNwLiA2Ij5Gci4gRWxlZy4gQWRlc3BvdGEgNgoJCQkJCQkJKEJlcmdrKTwvYmlibD4uPC9ub3RlPiBub3Igc2ltaWxhcmx5IGRvIGNpdGl6ZW5zIGtub3cgb25lCgkJCQkJYW5vdGhlciwgd2hlbiB0aGV5IGFyZSBub3QgdXNlZnVsIHRvIG9uZSBhbm90aGVyOyB0aGVpciBmcmllbmRzaGlwIGlzCgkJCQkJYSByZWFkeS1tb25leSB0cmFuc2FjdGlvbi48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJFbGVnLiBBbGV4LiBBZGVzcC4gNiI+RnIuIEVsZWcuIEFkZXNwb3RhIDYKCQkJCQkJCShCZXJnayk8L2JpYmw+Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5DZi4KCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDEyNjJiIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTI2MmIKCQkJCQkJCTI2PC9iaWJsPi48L25vdGU+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gTmljLiBFdGguIDEyNjJiIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBOaWMuIEV0aC4gMTI2MmIKCQkJCQkJCTI2PC9iaWJsPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjE1IiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJTmV2ZXJ0aGVsZXNzIHRoZXJlIGlzIHByZXNlbnQgaGVyZSBhIHJ1bGluZyBmYWN0b3IgYW5kIGEKCQkJCQlydWxlZOKAlG5vdCBhIG5hdHVyYWwgcnVsZXIgb3IgYSByb3lhbCBvbmUsIGJ1dCBvbmUgdGhhdCBydWxlcwoJCQkJCWluIGhpcyB0dXJuLCBhbmQgbm90IGZvciB0aGUgcHVycG9zZSBvZiBjb25mZXJyaW5nIGJlbmVmaXQsIGFzIEdvZAoJCQkJCXJ1bGVzLCBidXQgaW4gb3JkZXIgdGhhdCBoZSBtYXkgaGF2ZSBhbiBlcXVhbCBzaGFyZSBvZiB0aGUgYmVuZWZpdCBhbmQKCQkJCQlvZiB0aGUgYnVyZGVuLiBUaGVyZWZvcmUgY2l2aWMgZnJpZW5kc2hpcCBhaW1zIGF0IGJlaW5nIG9uIGEgZm9vdGluZwoJCQkJCW9mIGVxdWFsaXR5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjE2IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCB1c2VmdWwKCQkJCQlmcmllbmRzaGlwIGlzIG9mIHR3byBraW5kcywgdGhlIG1lcmVseSBsZWdhbCBhbmQgdGhlIG1vcmFsLiBDaXZpYwoJCQkJCWZyaWVuZHNoaXAgbG9va3MgdG8gZXF1YWxpdHkgYW5kIHRvIHRoZSBvYmplY3QsIGFzIGJ1eWVycyBhbmQgc2VsbGVycwoJCQkJCWRv4oCUaGVuY2UgdGhlIHNheWluZyA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+CgkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+VW50byBhIGZyaWVuZCBoaXMgd2FnZeKAlDwvbD4KCQkJCQk8L3F1b3RlPi48bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPlVudG8gYSBmcmllbmQgaGlzIHdhZ2XigJQ8L2w+CgkJCQkJPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gICAgICAgRXRoLiAxMTY0YS4yMCIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLgoJCQkJCQlFdGguIDExNjRhIDI4PC9iaWJsPi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGVzLiBXRCAzNzEiIHZhbGlkPSJ5ZXMiPkhlcy4gV0QKCQkJCQkJCTM3MTwvYmlibD48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvM65z4POuOG9uM+CIM604oCZIOG8gM69zrTPgeG9tiDPhuG9t8674b+zCgkJCQkJCQkJzrXhvLDPgc63zrzhvbPOvc6/z4Ig4byEz4HOus65zr/PgiDhvJTPg8+Ez4k8L2ZvcmVpZ24+J2xldCB0aGUgd2FnZSBzdGF0ZWQKCQkJCQkJZm9yIGEgZnJpZW5kIHN0YW5kIGdvb2QuPC9ub3RlPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gICAgICAgRXRoLiAxMTY0YS4yMCIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLgoJCQkJCQlFdGguIDExNjRhIDI4PC9iaWJsPi4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSGVzLiBXRCAzNzEiIHZhbGlkPSJ5ZXMiPkhlcy4gV0QKCQkJCQkJCTM3MTwvYmlibD48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7OvM65z4POuOG9uM+CIM604oCZIOG8gM69zrTPgeG9tiDPhuG9t8674b+zCgkJCQkJCQkJzrXhvLDPgc63zrzhvbPOvc6/z4Ig4byEz4HOus65zr/PgiDhvJTPg8+Ez4k8L2ZvcmVpZ24+J2xldCB0aGUgd2FnZSBzdGF0ZWQKCQkJCQkJZm9yIGEgZnJpZW5kIHN0YW5kIGdvb2QuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4xNyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuLAoJCQkJCXRoZXJlZm9yZSwgaXQgaXMgYmFzZWQgb24gYSBkZWZpbml0ZSBhZ3JlZW1lbnQsIHRoaXMgaXMgY2l2aWMgYW5kCgkJCQkJbGVnYWwgZnJpZW5kc2hpcDsgYnV0IHdoZW4gdGhleSB0cnVzdCBlYWNoIG90aGVyIGZvciByZXBheW1lbnQsIGl0CgkJCQkJdGVuZHMgdG8gYmUgbW9yYWwgZnJpZW5kc2hpcCwgdGhhdCBvZiBjb21yYWRlcy4gSGVuY2UgdGhpcyBpcyB0aGUga2luZAoJCQkJCW9mIGZyaWVuZHNoaXAgaW4gd2hpY2ggcmVjcmltaW5hdGlvbnMgbW9zdCBvY2N1ciwgdGhlIHJlYXNvbiBiZWluZwoJCQkJCXRoYXQgaXQgaXMgY29udHJhcnkgdG8gbmF0dXJlOyBmb3IgZnJpZW5kc2hpcCBiYXNlZCBvbiB1dGlsaXR5IGFuZAoJCQkJCWZyaWVuZHNoaXAgYmFzZWQgb24gZ29vZG5lc3MgYXJlIGRpZmZlcmVudCwgYnV0IHRoZXNlIHBlb3BsZSB3aXNoIHRvCgkJCQkJaGF2ZSBpdCBib3RoIHdheXMgYXQgb25jZeKAlHRoZXkgYXNzb2NpYXRlIHRvZ2V0aGVyIGZvciB0aGUKCQkJCQlzYWtlIG9mIHV0aWxpdHkgYnV0IG1ha2UgaXQgb3V0IHRvIGJlIGEgbW9yYWwgZnJpZW5kc2hpcCBhcyBiZXR3ZWVuCgkJCQkJZ29vZCBtZW4sIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjQzYSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1243a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBzbyByZXByZXNlbnQgaXQgYXMgbm90IG1lcmVseSBsZWdhbCwKCQkJCQlwcmV0ZW5kaW5nIHRoYXQgaXQgaXMgYSBtYXR0ZXIgb2YgdHJ1c3QuPC90cmFuc2xhdGlvbj4="
translation['7.1243a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMTgiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Rm9yIGluIGdlbmVyYWwsCgkJCQkJb2YgdGhlIHRocmVlIGtpbmRzIG9mIGZyaWVuZHNoaXAsIGl0IGlzIGluIHVzZWZ1bCBmcmllbmRzaGlwIHRoYXQgbW9zdAoJCQkJCXJlY3JpbWluYXRpb25zIG9jY3VyIChmb3IgZ29vZG5lc3MgaXMgbm90IGdpdmVuIHRvIHJlY3JpbWluYXRpb24sIGFuZAoJCQkJCXBsZWFzYW50IGZyaWVuZHMgaGF2aW5nIGdvdCBhbmQgZ2l2ZW4gdGhlaXIgc2hhcmUgYnJlYWsgaXQgb2ZmLCBidXQKCQkJCQl1c2VmdWwgZnJpZW5kcyBkbyBub3QgZGlzc29sdmUgdGhlIGFzc29jaWF0aW9uIGF0IG9uY2UsIGlmIHRoZWlyCgkJCQkJaW50ZXJjb3Vyc2UgaXMgb24gY29tcmFkZWx5IGFuZCBub3QgbWVyZWx5IGxlZ2FsIGxpbmVzKTsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4xOSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBuZXZlcnRoZWxlc3MgdGhlIGxlZ2FsIHNvcnQKCQkJCQlvZiB1c2VmdWwgZnJpZW5kc2hpcCBpcyBub3QgZ2l2ZW4gdG8gcmVjcmltaW5hdGlvbi4gVGhlIGxlZ2FsIG1ldGhvZAoJCQkJCW9mIGRpc2NoYXJnaW5nIHRoZSBvYmxpZ2F0aW9uIGlzIGEgbWF0dGVyIG9mIG1vbmV5LCBmb3IgdGhhdCBzZXJ2ZXMgYXMKCQkJCQlhIG1lYXN1cmUgb2YgZXF1YWxpdHk7IGJ1dCB0aGUgbW9yYWwgbWV0aG9kIGlzIHZvbHVudGFyeS4gSGVuY2UgaW4KCQkJCQlzb21lIHBsYWNlcyB0aGVyZSBpcyBhIGxhdyBwcm9oaWJpdGluZyBmcmllbmRseSBhc3NvY2lhdGVzIG9mIHRoaXMKCQkJCQlzb3J0IGZyb20gYWN0aW9ucyBhcyB0byB0aGVpciB2b2x1bnRhcnkgY29udHJhY3Rz4oCUcmlnaHRseSwKCQkJCQlzaW5jZSBpdCBpcyBub3QgbmF0dXJhbCBmb3IgZ29vZCBtZW4gdG8gZ28gdG8gbGF3LDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciwgYWRvcHRpbmcgYW5vdGhlciBjb25qZWN0dXJhbCBlbWVuZGF0aW9uLAoJCQkJCQknc2luY2UgaXQgaXMgbmF0dXJhbCBmb3IgZ29vZCBtZW4gdG8gYmUganVzdCBvZiB0aGVpciBvd24KCQkJCQkJYWNjb3JkLic8L25vdGU+IGFuZCB0aGVzZSBtZW4gbWFrZSB0aGVpciBjb250cmFjdHMgYXMgZ29vZCBtZW4KCQkJCQlhbmQgYXMgZGVhbGluZyB3aXRoIHRydXN0d29ydGh5IHBlb3BsZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4yMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgaW4gZmFjdCBpbiB0aGlzIHNvcnQgb2YgZnJpZW5kc2hpcCB0aGUKCQkJCQlyZWNyaW1pbmF0aW9ucyBhcmUgZG91YnRmdWwgb24gYm90aCBzaWRlc+KAlHdoYXQgbGluZSBvZgoJCQkJCWFjY3VzYXRpb24gZWFjaCBwYXJ0eSB3aWxsIHRha2UsIGluYXNtdWNoIGFzIHRoZWlyIGNvbmZpZGVuY2Ugd2FzIG9mIGEKCQkJCQltb3JhbCBraW5kIGFuZCBub3QgbWVyZWx5IGxlZ2FsLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5Tb2xvbW9uIHJlbmRlcnMgJ0l0IGlzIHVuY2VydGFpbiBob3cgZWl0aGVyIHdpbGwgcmVjcmltaW5hdGUgb24KCQkJCQkJdGhlIG90aGVyLCBzZWVpbmcgdGhhdCB0aGV5IHRydXN0IGVhY2ggb3RoZXIsIG5vdCBpbiBhIGxpbWl0ZWQKCQkJCQkJbGVnYWwgd2F5IGJ1dCBvbiB0aGUgYmFzaXMgb2YgdGhlaXIgY2hhcmFjdGVycy4nIEJ1dCB0aGUgR3JlZWsKCQkJCQkJdGV4dCBtYXkgYmUgcXVlc3Rpb25lZC48L25vdGU+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4yMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JbmRlZWQgaXQgaXMgYQoJCQkJCXF1ZXN0aW9uIGluIHdoaWNoIG9mIHR3byB3YXlzIG9uZSBvdWdodCB0byBqdWRnZSB3aGF0IGlzIGEganVzdAoJCQkJCXJldHVybiwgd2hldGhlciBieSBsb29raW5nIGF0IHRoZSBhY3R1YWwgYW1vdW50IG9yIHF1YWxpdHkgb2YgdGhlCgkJCQkJc2VydmljZSByZW5kZXJlZCwgb3IgYnkgaXRzIGFtb3VudCBvciBxdWFsaXR5IGZvciB0aGUgcmVjaXBpZW50OyBmb3IKCQkJCQlpdCBtYXkgYmUgYXMgVGhlb2duaXMgc2F5c+KAlDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImVsZWdpYWMiPkdvZGRlc3MsICd0aXMgc21hbGwgdG8gdGhlZSwgYnV0IGdyZWF0IHRvCgkJCQkJCQltZTwvbD4KCQkJCQk8L3F1b3RlPiw8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZWxlZ2lhYyI+R29kZGVzcywgJ3RpcyBzbWFsbCB0byB0aGVlLCBidXQgZ3JlYXQgdG8KCQkJCQkJCW1lPC9sPgoJCQkJCTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJUaGduLiAxNCI+VGhlb2cuCgkJCQkJCTE0LjwvYmlibD4gVGhpcyBxdW90YXRpb24gaWxsdXN0cmF0ZXMgdGhhdCB0aGUgYW1vdW50IG9mIGEKCQkJCQkJc2VydmljZSBpcyAnc3ViamVjdGl2ZSwnIHRoZSBuZXh0IHF1b3RhdGlvbiBzaG93cyB0aGF0IGl0cwoJCQkJCQlxdWFsaXR5IGlzLjwvbm90ZT4gYW5kIGFsc28gdGhlIHJlc3VsdCBtYXkgYmUgb3Bwb3NpdGUsIGFzIGluCgkJCQkJdGhlIHNheWluZyA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJUaGduLiAxNCI+VGhlb2cuCgkJCQkJCTE0LjwvYmlibD4gVGhpcyBxdW90YXRpb24gaWxsdXN0cmF0ZXMgdGhhdCB0aGUgYW1vdW50IG9mIGEKCQkJCQkJc2VydmljZSBpcyAnc3ViamVjdGl2ZSwnIHRoZSBuZXh0IHF1b3RhdGlvbiBzaG93cyB0aGF0IGl0cwoJCQkJCQlxdWFsaXR5IGlzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1243b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gJ1RoaXMgaXMgc3BvcnQgdG8geW91IGJ1dAoJCQkJCWRlYXRoIHRvIG1lLicgSGVuY2UgcmVjcmltaW5hdGlvbnMsIGFzIGhhcyBiZWVuIHNhaWQ8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguICAgICAgICA3LjEyNDJiLjM3IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4KCQkJCQkJMTI0MmIgMzc8L2JpYmw+Ljwvbm90ZT47IGZvciBvbmUgcGFydHkgY2xhaW1zIHJlY29tcGVuc2UKCQkJCQlhcyBoYXZpbmcgcmVuZGVyZWQgYSBncmVhdCBzZXJ2aWNlLCBiZWNhdXNlIGhlIGRpZCBpdCBmb3IgaGlzIGZyaWVuZAoJCQkJCWluIG5lZWQsIG9yIHNheWluZyBzb21ldGhpbmcgZWxzZSBvZiB0aGUgc29ydCBhcyB0byBob3cgbXVjaCBpdCB3YXMKCQkJCQl3b3J0aCBpbiByZWxhdGlvbiB0byB0aGUgYmVuZWZpdCBnaXZlbiB0byB0aGUgcmVjaXBpZW50IGFuZCBub3Qgd2hhdAoJCQkJCWl0IHdhcyB0byBoaW1zZWxmLCB3aGlsZSB0aGUgb3RoZXIgcGFydHkgb24gdGhlIGNvbnRyYXJ5IHNwZWFrcyBvZiBob3cKCQkJCQltdWNoIGl0IHdhcyB0byB0aGUgZG9ub3IgYW5kIG5vdCBib3cgbXVjaCBpdCB3YXMgdG8gaGltc2VsZi4KCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gICAgICAgIDcuMTI0MmIuMzciIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLgoJCQkJCQkxMjQyYiAzNzwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4yMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgYXQgb3RoZXIKCQkJCQl0aW1lcyB0aGUgcG9zaXRpb24gaXMgcmV2ZXJzZWQ6IHRoZSBvbmUgc2F5cyBob3cgbGl0dGxlIGhlIGdvdCBvdXQgb2YKCQkJCQlpdCwgdGhlIG90aGVyIGhvdyBtdWNoIHRoZSBzZXJ2aWNlIHdhcyB3b3J0aCB0byBoaW3igJRmb3IKCQkJCQlpbnN0YW5jZSwgaWYgYnkgdGFraW5nIGEgcmlzayBoZSBkaWQgdGhlIG90aGVyIGEgc2hpbGxpbmcncyB3b3J0aCBvZgoJCQkJCWJlbmVmaXQsIHRoZSBvbmUgdGFsa3MgYWJvdXQgdGhlIGFtb3VudCBvZiB0aGUgcmlzayBhbmQgdGhlIG90aGVyCgkJCQkJYWJvdXQgdGhlIGFtb3VudCBvZiB0aGUgY2FzaDsganVzdCBhcyBpbiB0aGUgcmVwYXltZW50IG9mIGEgbW9uZXkKCQkJCQlsb2FuLCBmb3IgdGhlcmUgdG9vIHRoZSBkaXNwdXRlIHR1cm5zIG9uIHRoaXPigJRvbmUgY2xhaW1zIHRvCgkJCQkJYmUgcmVwYWlkIHRoZSB2YWx1ZSB0aGF0IHRoZSBtb25leSBoYWQgd2hlbiBsZW50LHRoZSBvdGhlciBjbGFpbXMgdG8KCQkJCQlyZXBheSBpdCBhdCB0aGUgcHJlc2VudCB2YWx1ZSwgdW5sZXNzIHRoZXkgaGF2ZSBwdXQgYSBwcm92aXNvIGluIHRoZQoJCQkJCWNvbnRyYWN0LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMjQiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Q2l2aWMgZnJpZW5kc2hpcCwgdGhlbiwgbG9va3MKCQkJCQlhdCB0aGUgYWdyZWVtZW50IGFuZCB0byB0aGUgdGhpbmcsIGJ1dCBtb3JhbCBmcmllbmRzaGlwIGF0IHRoZQoJCQkJCWludGVudGlvbjsgaGVuY2UgdGhlIGxhdHRlciBpcyBtb3JlIGp1c3TigJRpdCBpcyBmcmllbmRseQoJCQkJCWp1c3RpY2UuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGhlIGNhdXNlIG9mCgkJCQkJY29uZmxpY3QgaXMgdGhhdCBtb3JhbCBmcmllbmRzaGlwIGlzIG5vYmxlciBidXQgZnJpZW5kc2hpcCBvZiB1dGlsaXR5CgkJCQkJbW9yZSBuZWNlc3Nhcnk7IGFuZCBtZW4gYmVnaW4gYXMgYmVpbmcgbW9yYWwgZnJpZW5kcyBhbmQgZnJpZW5kcyBvbgoJCQkJCWdyb3VuZHMgb2YgZ29vZG5lc3MsIGJ1dCB3aGVuIHNvbWUgcHJpdmF0ZSBpbnRlcmVzdCBjb21lcyBpbnRvCgkJCQkJY29sbGlzaW9uIGl0IGJlY29tZXMgY2xlYXIgdGhhdCByZWFsbHkgdGhleSB3ZXJlIGRpZmZlcmVudC4gRm9yIG1vc3QKCQkJCQltZW4gcHVyc3VlIHdoYXQgaXMgZmluZSBvbmx5IHdoZW4gdGhleSBoYXZlIGEgZ29vZCBtYXJnaW4gaW4gaGFuZCwgYW5kCgkJCQkJc28gd2l0aCB0aGUgZmluZXIgc29ydCBvZiBmcmllbmRzaGlwIHRvby4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNDNiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1243b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1243b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz5IZW5jZSBpdCBpcyBjbGVhciBob3cgdGhlc2UKCQkJCQljYXNlcyBtdXN0IGJlIGRlY2lkZWQuIElmIHRoZXkgYXJlIG1vcmFsIGZyaWVuZHMsIHdlIG11c3QgY29uc2lkZXIgaWYKCQkJCQl0aGVpciBpbnRlbnRpb25zIGFyZSBlcXVhbCwgYW5kIG5vdGhpbmcgZWxzZSBtdXN0IGJlIGNsYWltZWQgYnkgZWl0aGVyCgkJCQkJZnJvbSB0aGUgb3RoZXI7IGFuZCBpZiB0aGV5IGFyZSBmcmllbmRzIG9uIHRoZSBncm91bmQgb2YgdXRpbGl0eSBvcgoJCQkJCWNpdmljIGZyaWVuZHMsIHdlIG11c3QgY29uc2lkZXIgd2hhdCBmb3JtIG9mIGFncmVlbWVudCB3b3VsZCBoYXZlIGJlZW4KCQkJCQlwcm9maXRhYmxlIGZvciB0aGVtLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5PciwgYWx0ZXJpbmcKCQkJCQkJdGhlIEdyZWVrLCAndGhleSBhZ3JlZSBmb3IgYXMgbG9uZyBhcyBpdCBwcm9maXRzIHRoZW0uJzwvbm90ZT4KCQkJCQlCdXQgaWYgb25lIHNheXMgdGhleSBhcmUgZnJpZW5kcyBvbiBvbmUgZm9vdGluZyBhbmQgdGhlIG90aGVyIG9uCgkJCQkJYW5vdGhlciwgaXQgaXMgbm90IGhvbm9yYWJsZSwgd2hlbiBhbiBhY3RpdmUgcmV0dXJuIGlzIGR1ZSwgbWVyZWx5IHRvCgkJCQkJbWFrZSBmaW5lIHNwZWVjaGVzLCBhbmQgc2ltaWxhcmx5IGFsc28gaW4gdGhlIG90aGVyIGNhc2U8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBpbiBhIG1vcmFsIGZyaWVuZHNoaXAgaXQgaXMKCQkJCQkJbm90IGhvbm9yYWJsZSB0byBpbnNpc3Qgb24gYSByZXR1cm4gb24gYSBidXNpbmVzcwoJCQkJCQlmb290aW5nLjwvbm90ZT474oCUPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4yNyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBidXQgc2luY2UgdGhleSBkaWQgbm90IHByb3ZpZGUgZm9yIHRoaXMgaW4gdGhlCgkJCQkJY29udHJhY3QsIG9uIHRoZSBncm91bmQgdGhhdCBpdCB3YXMgYSBtb3JhbCBmcmllbmRzaGlwLCBzb21lYm9keSBtdXN0CgkJCQkJanVkZ2UsIGFuZCBuZWl0aGVyIHBhcnR5IG11c3QgY2hlYXQgYnkgcHJldGVuZGluZzsgc28gdGhhdCBlYWNoIG11c3QKCQkJCQliZSBjb250ZW50IHdpdGggaGlzIGx1Y2suIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMjgiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IGl0IGlzIGNsZWFyIHRoYXQgbW9yYWwgZnJpZW5kc2hpcCBpcyBhIG1hdHRlciBvZiBpbnRlbnRpb24sCgkJCQkJc2luY2UgZXZlbiBpZiBhIG1hbiBhZnRlciBoYXZpbmcgcmVjZWl2ZWQgZ3JlYXQgYmVuZWZpdHMgb3dpbmcgdG8KCQkJCQlpbmFiaWxpdHkgZGlkIG5vdCByZXBheSB0aGVtLCBidXQgb25seSByZXBhaWQgYXMgbXVjaCBhcyBoZSB3YXMgYWJsZSwKCQkJCQloZSBhY3RzIGhvbm9yYWJseTsgZm9yIGV2ZW4gR29kIGlzIGNvbnRlbnQgd2l0aCBnZXR0aW5nIHNhY3JpZmljZXMgaW4KCQkJCQlhY2NvcmRhbmNlIHdpdGggb3VyIGFiaWxpdHkuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQnV0IGEgc2VsbGVyIHdpbGwgbm90IGJlIHNhdGlzZmllZCBpZiBhIG1hbiBzYXlzIGhlCgkJCQkJY2Fubm90IHBheSBtb3JlLCBub3Igd2lsbCBvbmUgd2hvIGhhcyBtYWRlIGEgbG9hbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEwLjMwIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkluIGZyaWVuZHNoaXBzIG5vdCBiYXNlZCBvbiBkaXJlY3QgcmVjaXByb2NpdHk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+J0Rpc3NpbWlsYXIgZnJpZW5kc2hpcHMsIHdoZXJlIGFjdGlvbiBhbmQKCQkJCQkJcmVhY3Rpb24gYXJlIG5vdCBpbiB0aGUgc2FtZSBzdHJhaWdodCBsaW5lJyAoU29sb21vbikuPC9ub3RlPgoJCQkJCW1hbnkgY2F1c2VzIG9mIHJlY3JpbWluYXRpb24gb2NjdXIsIGFuZCBpdCBpcyBub3QgZWFzeSB0byBzZWUgd2hhdCBpcwoJCQkJCWp1c3Q7IGZvciBpdCBpcyBkaWZmaWN1bHQgdG8gbWVhc3VyZSBieSBvbmUgZ2l2ZW4gdGhpbmcgcmVsYXRpb25zIHRoYXQKCQkJCQlhcmUgbm90IGRpcmVjdGx5IHJlY2lwcm9jYWwuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMzEiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGhpcyBpcyBob3cgaXQgaGFwcGVucyBpbiBsb3ZlIGFmZmFpcnMsIHNpbmNlIGluCgkJCQkJdGhlbSBvbmUgcGFydHkgcHVyc3VlcyB0aGUgb3RoZXIgYXMgYSBwbGVhc2FudCBwZXJzb24gdG8gbGl2ZSB3aXRoLAoJCQkJCWJ1dCBzb21ldGltZXMgdGhlIG90aGVyIHRoZSBvbmUgYXMgdXNlZnVsLCBhbmQgd2hlbiB0aGUgbG92ZXIgY2Vhc2VzCgkJCQkJdG8gbG92ZSw8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+aGUgaGF2aW5nIGNoYW5nZWQKCQkJCQl0aGUgb3RoZXIgY2hhbmdlcywgYW5kIHRoZW4gdGhleSBjYWxjdWxhdGUgdGhlIHF1aWQgcHJvIHF1bywgYW5kCgkJCQkJcXVhcnJlbCBhcyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMDc3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEwNzcwIj5QeXRobzwvcGxhY2VOYW1lPiBhbmQKCQkJCQlQYW1tZW5lczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgZGlzdGluZ3Vpc2hlZAoJCQkJCQlUaGViYW4gZ2VuZXJhbCwgZnJpZW5kIG9mIEVwYW1pbm9uZGFzLiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMDc3MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEwNzcwIj5QeXRobzwvcGxhY2VOYW1lPiBtYXkgYmUgYSBkcmFtYXRpc3Qgb2YKCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDYXRhbmEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLENhdGFuYSI+Q2F0YW5hPC9wbGFjZU5hbWU+LCBvciBhCgkJCQkJCUJ5emFudGluZSByaGV0b3JpY2lhbiBvZiB0aGUgcGVyaW9kLjwvbm90ZT4gdXNlZCwgYW5kIGFzIHRlYWNoZXIKCQkJCQlhbmQgcHVwaWwgZG8gaW4gZ2VuZXJhbCAoZm9yIGtub3dsZWRnZSBhbmQgbW9uZXkgaGF2ZSBubyBjb21tb24KCQkJCQltZWFzdXJlKSwgYW5kIGFzIEhlcm9kaWN1czxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEwNzcwIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTA3NzAiPlB5dGhvPC9wbGFjZU5hbWU+IG1heSBiZSBhIGRyYW1hdGlzdCBvZgoJCQkJCQk8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLENhdGFuYSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ2F0YW5hIj5DYXRhbmE8L3BsYWNlTmFtZT4sIG9yIGEKCQkJCQkJQnl6YW50aW5lIHJoZXRvcmljaWFuIG9mIHRoZSBwZXJpb2QuPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkJvcm4gaW4KCQkJCQkJPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI3NTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjc1NiI+VGhyYWNlPC9wbGFjZU5hbWU+LCBwcmFjdGlzZWQKCQkJCQkJaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+IGZpZnRoCgkJCQkJCWNlbnQuIEIuQy47IHR1dG9yIG9mIEhpcHBvY3JhdGVzLiBUaGUgTXNzLiBnaXZlICdQcm9kaWN1cycgKHRoZQoJCQkJCQlzb3BoaXN0LCB3aG8gZmlndXJlcyBmcmVxdWVudGx5IGluIFBsYXRvKSwgYW5kIHBvc3NpYmx5IHRoZSB0ZXh0CgkJCQkJCWhhcyBzdWZmZXJlZCBoYXBsb2dyYXBoeSwgYW5kIGJvdGggbmFtZXMgc2hvdWxkIGJlIHJlYWQuPC9ub3RlPgoJCQkJCXRoZSBkb2N0b3IgZGlkIHdpdGggdGhlIHBhdGllbnQgd2hvIG9mZmVyZWQgdG8gcGF5IGhpcyBmZWUgd2l0aCBhCgkJCQkJZGlzY291bnQsIGFuZCBhcyB0aGUgaGFycGlzdCBhbmQgdGhlIGtpbmcgZmVsbCBvdXQuIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNzU2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI3NTYiPlRocmFjZTwvcGxhY2VOYW1lPiwgcHJhY3Rpc2VkCgkJCQkJCWluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiBmaWZ0aAoJCQkJCQljZW50LiBCLkMuOyB0dXRvciBvZiBIaXBwb2NyYXRlcy4gVGhlIE1zcy4gZ2l2ZSAnUHJvZGljdXMnICh0aGUKCQkJCQkJc29waGlzdCwgd2hvIGZpZ3VyZXMgZnJlcXVlbnRseSBpbiBQbGF0byksIGFuZCBwb3NzaWJseSB0aGUgdGV4dAoJCQkJCQloYXMgc3VmZmVyZWQgaGFwbG9ncmFwaHksIGFuZCBib3RoIG5hbWVzIHNob3VsZCBiZSByZWFkLjwvdHJhbnNsYXRpb24+"
translation['7.1244a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMzIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGhlIGtpbmcgYXNzb2NpYXRlZCB3aXRoIHRoZQoJCQkJCWhhcnBpc3QgYXMgcGxlYXNhbnQgYW5kIHRoZSBoYXJwaXN0IHdpdGggdGhlIGtpbmcgYXMgdXNlZnVsOyBidXQgdGhlCgkJCQkJa2luZywgd2hlbiB0aGUgdGltZSBjYW1lIGZvciBoaW0gdG8gcGF5LCBtYWRlIG91dCB0aGF0IGhlIHdhcyBoaW1zZWxmCgkJCQkJb2YgdGhlIHBsZWFzYW50IHNvcnQsIGFuZCBzYWlkIHRoYXQganVzdCBhcyB0aGUgaGFycGlzdCBoYWQgZ2l2ZW4gaGltCgkJCQkJcGxlYXN1cmUgYnkgaGlzIHNpbmdpbmcsIHNvIGhlIGhhZCBnaXZlbiB0aGUgaGFycGlzdCBwbGVhc3VyZSBieSBoaXMKCQkJCQlwcm9taXNlcyB0byBoaW0uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoZSBzdG9yeSAoYWxzbwoJCQkJCQl0b2xkIGluIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTY0YSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDExNjRhPC9iaWJsPiAxNikgaXMKCQkJCQkJcmVsYXRlZCBieSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbHV0LiBkZSBBbGV4LiAyLjEiIHZhbGlkPSJ5ZXMiPlBsdXQuIERlIEFsZXhhbmRyaQoJCQkJCQkJZm9ydHVuYSAyLjE8L2JpYmw+LCBvZiB0aGUgdHlyYW50IERpb255c2l1cyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5cmFjdXNlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTeXJhY3VzZSI+U3lyYWN1c2U8L3BsYWNlTmFtZT4uPC9ub3RlPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE5pYy4gRXRoLiAxMTY0YSIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTmljLiBFdGguIDExNjRhPC9iaWJsPiAxNikgaXMKCQkJCQkJcmVsYXRlZCBieSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbHV0LiBkZSBBbGV4LiAyLjEiIHZhbGlkPSJ5ZXMiPlBsdXQuIERlIEFsZXhhbmRyaQoJCQkJCQkJZm9ydHVuYSAyLjE8L2JpYmw+LCBvZiB0aGUgdHlyYW50IERpb255c2l1cyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFN5cmFjdXNlIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxTeXJhY3VzZSI+U3lyYWN1c2U8L3BsYWNlTmFtZT4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4zMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBOZXZlcnRoZWxlc3MgaGVyZSB0b28gaXQgaXMgY2xlYXIgaG93IHdlIG11c3QKCQkJCQlkZWNpZGU6IGhlcmUgdG9vIHdlIG11c3QgbWVhc3VyZSBieSBvbmUgc3RhbmRhcmQsIGJ1dCBieSBhIHJhdGlvLCBub3QKCQkJCQlhIG51bWJlci4gRm9yIHdlIG11c3QgbWVhc3VyZSBieSBwcm9wb3J0aW9uLCBhcyBhbHNvIHRoZSBjaXZpYwoJCQkJCXBhcnRuZXJzaGlwIGlzIG1lYXN1cmVkLiBGb3IgaG93IGlzIGEgc2hvZW1ha2VyIHRvIGJlIHBhcnRuZXIgd2l0aCBhCgkJCQkJZmFybWVyIHVubGVzcyB0aGVpciBwcm9kdWN0cyBhcmUgZXF1YWxpemVkIGJ5IHByb3BvcnRpb24/IDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTAuMzQiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVGhlcmVmb3JlIHRoZSBtZWFzdXJlIGZvcgoJCQkJCXBhcnRuZXJzaGlwcyBub3QgZGlyZWN0bHkgcmVjaXByb2NhbCBpcyBwcm9wb3J0aW9u4oCUZm9yCgkJCQkJZXhhbXBsZSBpZiBvbmUgcGFydHkgY29tcGxhaW5zIHRoYXQgaGUgaGFzIGdpdmVuIHdpc2RvbSBhbmQgdGhlIG90aGVyCgkJCQkJc2F5cyBoZSBoYXMgZ2l2ZW4gdGhlIGZvcm1lciBtb25leSwgd2hhdCBpcyB0aGUgcmF0aW8gb2Ygd2lzZG9tIHRvCgkJCQkJYmVpbmcgcmljaD8gYW5kIHRoZW4sIHdoYXQgaXMgdGhlIGFtb3VudCBnaXZlbiBmb3IgZWFjaD8gZm9yIGlmIG9uZQoJCQkJCXBhcnR5IGhhcyBnaXZlbiBoYWxmIG9mIHRoZSBzbWFsbGVyIGFtb3VudCBidXQgdGhlIG90aGVyIG5vdCBldmVuIGEKCQkJCQlzbWFsbCBmcmFjdGlvbiBvZiB0aGUgbGFyZ2VyLCBpdCBpcyBjbGVhciB0aGF0IHRoZSBsYXR0ZXIgaXMgY2hlYXRpbmcuCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMC4zNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgaGVyZSB0b28KCQkJCQl0aGVyZSBpcyBhIGRpc3B1dGUgYXQgdGhlIG91dHNldCwgaWYgb25lIHNheXMgdGhhdCB0aGV5IGNhbWUgdG9nZXRoZXIKCQkJCQlvbiBncm91bmRzIG9mIHV0aWxpdHkgYW5kIHRoZSBvdGhlciBkZW5pZXMgaXQgYW5kIHNheXMgaXQgd2FzIG9uIHRoZQoJCQkJCWJhc2lzIG9mIHNvbWUgb3RoZXIga2luZCBvZiBmcmllbmRzaGlwLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI0NGEiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1244a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1244a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BYm91dCB0aGUgZ29vZCBmcmllbmQgYW5kIHRoZSBmcmllbmQgb24gdGhlIGJhc2lzIG9mIGdvb2RuZXNzLCB3ZQoJCQkJCW11c3QgY29uc2lkZXIgd2hldGhlciBvbmUgb3VnaHQgdG8gcmVuZGVyIHVzZWZ1bCBzZXJ2aWNlcyBhbmQKCQkJCQlhc3Npc3RhbmNlIHRvIGhpbSBvciB0byB0aGUgZnJpZW5kIHdobyBpcyBhYmxlIHRvIG1ha2UgYW4gZXF1YWwKCQkJCQlyZXR1cm4uIFRoaXMgaXMgdGhlIHNhbWUgcHJvYmxlbSBhcyB3aGV0aGVyIGl0IGlzIG1vcmUgb25lJ3MgZHV0eSB0bwoJCQkJCWJlbmVmaXQgYSBmcmllbmQgb3IgYSB2aXJ0dW91cyBtYW4uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBJZiBhIG1hbiBpcyBhIGZyaWVuZCBhbmQgdmlydHVvdXMsIHBlcmhhcHM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IsIGFsdGVyaW5nIHRoZSBwdW5jdHVhdGlvbiB3aXRoCgkJCQkJCUZyaXRzY2hlLCAnaXMgYSBmcmllbmQgYW5kIHZpcnR1b3VzIGVxdWFsbHkuJzwvbm90ZT4gaXQgaXMgbm90CgkJCQkJb3Zlci1kaWZmaWN1bHQsIHByb3ZpZGVkIG9uZSBkb2VzIG5vdCBleGFnZ2VyYXRlIHRoZSBvbmUgZmFjdG9yIGFuZAoJCQkJCXVuZGVycmF0ZSB0aGUgb3RoZXIsIGJlbmVmaXRpbmcgaGltIGdyZWF0bHkgYXMgZnJpZW5kIGJ1dCBvbmx5CgkJCQkJc2xpZ2h0bHkgYXMgZ29vZC4gQnV0IGluIG90aGVyIGNhc2VzIG1hbnkgcHJvYmxlbXMgYXJpc2UsIGZvcgoJCQkJCWluc3RhbmNlLCBpZiBBIHdhcyBhIGZyaWVuZCBidXQgaXMgZ29pbmcgbm90IHRvIGJlIGFuZCBCIGlzIGdvaW5nIHRvCgkJCQkJYmUgYnV0IGlzIG5vdCBub3csIG9yIGlmIEEgYmVjYW1lIG9uZSBidXQgaXMgbm90IG9uZSBub3cgYW5kIEIgaXMgb25lCgkJCQkJbm93IGJ1dCB3YXMgbm90IGFuZCBpcyBnb2luZyBub3QgdG8gYmUuIEJ1dCB0aGUgZm9ybWVyIHByb2JsZW08bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2VlIHRoZSBmaXJzdCBzZW50ZW5jZSBvZiB0aGUKCQkJCQkJY2hhcHRlci48L25vdGU+IGlzIG1vcmUgZGlmZmljdWx0LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjExLjMiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gRm9yIHBvc3NpYmx5IHRoZXJlIGlzIHNvbWV0aGluZyBpbiB0aGUgbGluZXMKCQkJCQlvZiBFdXJpcGlkZXM8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRXVyLiBGci4gODgyIj5FdXIuIEZyLgoJCQkJCQk4ODIgKE5hdWNrKTwvYmlibD4uPC9ub3RlPjogPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iRXVyLiBGci4gODgyIj5FdXIuIEZyLgoJCQkJCQk4ODIgKE5hdWNrKTwvYmlibD4uPGNpdCBjbGFzcz0idHJhbnNsYXRpb24iPgoJCQkJCQkJPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPgoJCQkJCQkJCTxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJpYW1iaWMiPlByaXRoZWUgdGFrZSB3b3JkcyBhcyB0aHkganVzdCBwYXkgZm9yCgkJCQkJCQkJCXdvcmRzLDwvbD4KCQkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBoZSwgdGhhdCBnYXZlIGEgZGVlZCwgYSBkZWVkIHNoYWxsIGhhdmU7PC9sPgoJCQkJCQkJPC9xdW90ZT4KCQkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkV1ci4gRnIuIDg4MiI+RXVyLiBGci4gODgyIChOYXVjayk8L2JpYmw+CgkJCQkJCTwvY2l0PiBhbmQgaXQgaXMgbm90IG9uZSdzIGR1dHkgdG8gZ2l2ZSBldmVyeXRoaW5nIHRvIG9uZSdzIGZhdGhlciwKCQkJCQlidXQgdGhlcmUgYXJlIG90aGVyIHRoaW5ncyB0aGF0IG9uZSBvdWdodCB0byBnaXZlIHRvIG9uZSdzIG1vdGhlciwKCQkJCQlhbHRob3VnaCB0aGUgZmF0aGVyIGlzIHRoZSBzdXBlcmlvcjsgZm9yIGV2ZW4gdG8gWmV1cyBub3QgYWxsIHRoZQoJCQkJCXNhY3JpZmljZXMgYXJlIG9mZmVyZWQsIG5vciBkb2VzIGhlIGhhdmUgYWxsIHRoZSBob25vcnMgYnV0IHNvbWUKCQkJCQlwYXJ0aWN1bGFyIG9uZXMuIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj4KCQkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iaWFtYmljIj5Qcml0aGVlIHRha2Ugd29yZHMgYXMgdGh5IGp1c3QgcGF5IGZvcgoJCQkJCQkJCQl3b3Jkcyw8L2w+CgkJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgaGUsIHRoYXQgZ2F2ZSBhIGRlZWQsIGEgZGVlZCBzaGFsbCBoYXZlOzwvbD4KCQkJCQkJCTwvcXVvdGU+CgkJCQkJCQk8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iaWFtYmljIj5Qcml0aGVlIHRha2Ugd29yZHMgYXMgdGh5IGp1c3QgcGF5IGZvcgoJCQkJCQkJCQl3b3Jkcyw8L2w+CgkJCQkJCQkJPGwgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgaGUsIHRoYXQgZ2F2ZSBhIGRlZWQsIGEgZGVlZCBzaGFsbCBoYXZlOzwvbD4KCQkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkV1ci4gRnIuIDg4MiI+RXVyLiBGci4gODgyIChOYXVjayk8L2JpYmw+CgkJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuNCIgdW5pdD0iTG9lYiBjaGFwIiAvPgoJCQkJCVBlcmhhcHMsIHRoZXJlZm9yZSwgdGhlcmUgYXJlIHNvbWUgc2VydmljZXMgdGhhdCBvdWdodCB0byBiZSByZW5kZXJlZAoJCQkJCXRvIHRoZSB1c2VmdWwgZnJpZW5kIGFuZCBvdGhlcnMgdG8gdGhlIGdvb2QgZnJpZW5kOiBmb3IgaW5zdGFuY2UsIGlmIGEKCQkJCQlmcmllbmQgZ2l2ZXMgeW91IGZvb2QgYW5kIG5lY2Vzc2FyaWVzIHlvdSBhcmUgbm90IHRoZXJlZm9yZSBib3VuZCB0bwoJCQkJCWdpdmUgaGltIHlvdXIgc29jaWV0eSwgYW5kIGFjY29yZGluZ2x5IGFsc28geW91IGFyZSBub3QgYm91bmQgdG8KCQkJCQlyZW5kZXIgdG8gdGhlIGZyaWVuZCB0byB3aG9tIHlvdSBnaXZlIHlvdXIgc29jaWV0eSB0aGUgdGhpbmdzIHRoYXQgeW91CgkJCQkJZG8gbm90IGdldCBmcm9tIGhpbSBidXQgZnJvbSB0aGUgdXNlZnVsIGZyaWVuZDsgYnV0IHRob3NlIHdobyBieSBzbwoJCQkJCWRvaW5nIHdyb25nbHkgZ2l2ZSBldmVyeXRoaW5nIHRvIG9uZSB3aG9tIHRoZXkgbG92ZSBhcmUKCQkJCQlnb29kLWZvci1ub3RoaW5nIHBlb3BsZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+QW5kCgkJCQkJdGhlIGRlZmluaW5nIG1hcmtzIG9mIGZyaWVuZHNoaXAgc3RhdGVkIGluIHRoZSBkaXNjb3Vyc2VzIGFsbCBiZWxvbmcKCQkJCQl0byBmcmllbmRzaGlwIGluIHNvbWUgc2Vuc2UsIGJ1dCBub3QgdG8gdGhlIHNhbWUga2luZCBvZiBmcmllbmRzaGlwLgoJCQkJCTwvdHJhbnNsYXRpb24+"
translation['7.1244b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTEuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBJdCBpcyBhIG1hcmsgb2YKCQkJCQl0aGUgdXNlZnVsIGZyaWVuZCB0aGF0IG9uZSB3aXNoZXMgdGhlIHRoaW5ncyBnb29kIGZvciBoaW0sIGFuZCBzbyBvZgoJCQkJCXRoZSBiZW5lZmFjdG9yLCBhbmQgaW4gZmFjdCBhIGZyaWVuZCBvZiBhbnkgc29ydCAoZm9yIHRoaXMgZGVmaW5pdGlvbgoJCQkJCW9mIGZyaWVuZHNoaXAgaXMgbm90IGRpc3RpbmN0aXZlKTsgb2YgYW5vdGhlciBmcmllbmQsIHRoYXQgb25lIHdpc2hlcwoJCQkJCWhpcyBleGlzdGVuY2UsIG9mIGFub3RoZXIgdGhhdCBvbmUgd2lzaGVzIGhpcyBzb2NpZXR5OyBvZiB0aGUgZnJpZW5kCgkJCQkJb24gdGhlIGdyb3VuZCBvZiBwbGVhc3VyZSwgdGhhdCBvbmUgc2hhcmVzIGhpcyBncmllZiBhbmQgaGlzIGpveS4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjExLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQWxsIHRoZXNlIGRlZmluaW5nCgkJCQkJbWFya3MgYXJlIHByZWRpY2F0ZWQgaW4gdGhlIGNhc2Ugb2Ygc29tZSBmcmllbmRzaGlwLCBidXQgbm9uZSBvZiB0aGVtCgkJCQkJd2l0aCByZWZlcmVuY2UgdG8gZnJpZW5kc2hpcCBhcyBhIHNpbmdsZSB0aGluZy4gSGVuY2UgdGhlcmUgYXJlIG1hbnkKCQkJCQlvZiB0aGVtLCBhbmQgZWFjaCBpcyB0aG91Z2h0IHRvIGJlbG9uZyB0byBmcmllbmRzaGlwIGFzIG9uZSwgdGhvdWdoIGl0CgkJCQkJZG9lcyBub3Q6IGZvciBpbnN0YW5jZSwgdGhlIGRlc2lyZSBmb3IgdGhlIGZyaWVuZCdzCgkJCQkJZXhpc3RlbmNl4oCUZm9yIHRoZSBzdXBlcmlvciBmcmllbmQgYW5kIGJlbmVmYWN0b3Igd2lzaGVzCgkJCQkJZXhpc3RlbmNlIHRvIGJlbG9uZyB0byBoaXMgb3duIHdvcms8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiB0aGUgYmVuZWZpY2lhcnkuPC9ub3RlPuKAlGFuZCB0byBoaW0gd2hvIGdhdmUgb25lCgkJCQkJZXhpc3RlbmNlPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlRoaXMgYWxzbyBtZWFucyB0aGUKCQkJCQkJYmVuZWZpY2lhcnksIHdobyBpcyB0aGUgY2F1c2Ugb2YgdGhlIGJlbmVmYWN0b3IncyBiZWluZyBhCgkJCQkJCWJlbmVmYWN0b3I7IHNvIHRoZSBiZW5lZmFjdG9yIG91Z2h0IHRvIHJlcGF5IGhpbSBpbiBraW5kIGJ5CgkJCQkJCXdpc2hpbmcgaGlzIGV4aXN0ZW5jZSAoYXMgaGUgZG9lcyBhbHNvIGZvciB0aGUgcmVhc29uIHRoYXQgaGUgaXMKCQkJCQkJaGlzIG93biBwcm9kdWN0Lik8L25vdGU+IGl0IGlzIG9uZSdzIGR1dHkgdG8gZ2l2ZSBleGlzdGVuY2UgaW4KCQkJCQlyZXR1cm47IGJ1dCBoZSB3aXNoZXMgdGhlIHNvY2lldHkgbm90IG9mIHRoaXMgZnJpZW5kIGJ1dCBvZiB0aGUKCQkJCQlwbGVhc2FudCBvbmUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMS43IiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZyaWVuZHMgaW4gc29tZSBjYXNlcyB3cm9uZyBlYWNoIG90aGVyLAoJCQkJCWJlY2F1c2UgdGhleSBsb3ZlIHRoaW5ncyBtb3JlLCBub3QgdGhlIHBvc3Nlc3NvciBvZiB0aGVtLCBhbmQgYXJlCgkJCQkJZnJpZW5kcyBvZiB0aGUgcG9zc2Vzc29yIHRvbyBvbiB0aGlzIGFjY291bnQgKGp1c3QgYXMgYSBtYW4gY2hvc2UgaGlzCgkJCQkJd2luZSBiZWNhdXNlIGl0IHdhcyBzd2VldCBhbmQgY2hvc2UgaGlzIHdlYWx0aCBiZWNhdXNlIGl0IHdhcyB1c2VmdWwpLAoJCQkJCWZvciBoZSBpcyBtb3JlIHVzZWZ1bC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+U2MuIG9uCgkJCQkJCWFjY291bnQgb2YgaGlzIHBvc3Nlc3Npb25zLjwvbm90ZT4gSGVuY2UgbmF0dXJhbGx5IGhlIGlzCgkJCQkJYW5ub3llZCwganVzdCBhcyBpZiB0aGV5IGhhZCBwcmVmZXJyZWQgaGlzIHBvc3Nlc3Npb25zIHRvIGhpbXNlbGYgYXMKCQkJCQliZWluZyBpbmZlcmlvcjsgYW5kIHRoZXkgY29tcGxhaW4sIGZvciBub3cgdGhleSBsb29rIHRvIGZpbmQgaW4gaGltCgkJCQkJdGhlIGdvb2QgbWFuLCBoYXZpbmcgcHJldmlvdXNseSBsb29rZWQgZm9yIHRoZSBwbGVhc2FudCBvciB0aGUgdXNlZnVsCgkJCQkJbWFuLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI0NGIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1244b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1244b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBtdXN0IGFsc28gY29uc2lkZXIKCQkJCQlzZWxmLXN1ZmZpY2llbmN5IGFuZCBmcmllbmRzaGlwLCBhbmQgdGhlIGludGVycmVsYXRpb25zaGlwIG9mIHRoZWlyCgkJCQkJcG90ZW50aWFsaXRpZXMuIEZvciBvbmUgbWF5IHJhaXNlIHRoZSBxdWVzdGlvbiB3aGV0aGVyIGlmIGEgcGVyc29uIGJlCgkJCQkJc2VsZi1zdWZmaWNpbmcgaW4gZXZlcnkgcmVzcGVjdCBoZSB3aWxsIGhhdmUgYSBmcmllbmQsIG9yIHdoZXRoZXIgb24KCQkJCQl0aGUgY29udHJhcnkgYSBmcmllbmQgaXMgc291Z2h0IGZvciBpbiBuZWVkLCBhbmQgdGhlIGdvb2QgbWFuIHdpbGwgYmUKCQkJCQltb3N0IHNlbGYtc3VmZmljaW5nLiBJZiB0aGUgbGlmZSB0aGF0IGlzIGNvbWJpbmVkIHdpdGggZ29vZG5lc3MgaXMKCQkJCQloYXBweSwgd2hhdCBuZWVkIHdvdWxkIHRoZXJlIGJlIG9mIGEgZnJpZW5kPyBGb3IgaXQgZG9lcyBub3QgYmVsb25nIHRvCgkJCQkJdGhlIHNlbGYtc3VmZmljaW5nIG1hbiB0byBuZWVkIGVpdGhlciB1c2VmdWwgZnJpZW5kcyBvciBmcmllbmRzIHRvCgkJCQkJYW11c2UgaGltIGFuZCBzb2NpZXR5LCBmb3IgaGUgaXMgc3VmZmljaWVudCBzb2NpZXR5IGZvciBoaW1zZWxmLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBUaGlzIGlzIG1vc3QKCQkJCQltYW5pZmVzdCBpbiB0aGUgY2FzZSBvZiBHb2Q7IGZvciBpdCBpcyBjbGVhciB0aGF0IGFzIGhlIG5lZWRzIG5vdGhpbmcKCQkJCQltb3JlIGhlIHdpbGwgbm90IG5lZWQgYSBmcmllbmQsIGFuZCB0aGF0IHN1cHBvc2luZyBoZSBoYXMgbm8gbmVlZCBvZgoJCQkJCW9uZSBoZSB3aWxsIG5vdCBoYXZlIG9uZS4gQ29uc2VxdWVudGx5IHRoZSBoYXBwaWVzdCBodW1hbiBiZWluZyBhbHNvCgkJCQkJd2lsbCB2ZXJ5IGxpdHRsZSBuZWVkIGEgZnJpZW5kLCBleGNlcHQgaW4gc28gZmFyIGFzIHRvIGJlCgkJCQkJc2VsZi1zdWZmaWNpbmcgaXMgaW1wb3NzaWJsZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IE9mIG5lY2Vzc2l0eSwgdGhlcmVmb3JlLCBoZSB3aG8gbGl2ZXMgdGhlIGJlc3QgbGlmZQoJCQkJCXdpbGwgaGF2ZSBmZXdlc3QgZnJpZW5kcywgYW5kIHRoZXkgd2lsbCBjb25zdGFudGx5IGJlY29tZSBmZXdlciwgYW5kCgkJCQkJaGUgd2lsbCBub3QgYmUgZWFnZXIgdG8gaGF2ZSBmcmllbmRzIGJ1dCB3aWxsIHRoaW5rIGxpZ2h0bHkgbm90IG9ubHkKCQkJCQlvZiB1c2VmdWwgZnJpZW5kcyBidXQgYWxzbyBvZiB0aG9zZSBkZXNpcmFibGUgZm9yIHNvY2lldHkuIEJ1dAoJCQkJCWFzc3VyZWRseSBldmVuIGhpcyBjYXNlIHdvdWxkIHNlZW0gdG8gc2hvdyB0aGF0IGEgZnJpZW5kIGlzIG5vdCBmb3IKCQkJCQl0aGUgc2FrZSBvZiB1dGlsaXR5IG9yIGJlbmVmaXQgYnV0IHRoYXQgb25lIGxvdmVkIG9uIGFjY291bnQgb2YKCQkJCQlnb29kbmVzcyBpcyB0aGUgb25seSByZWFsIGZyaWVuZC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+IEZvciB3aGVuIHdlIGFyZSBub3QgaW4gbmVlZCBvZiBzb21ldGhpbmcsIHRoZW4gd2UgYWxsCgkJCQkJc2VlayBwZW9wbGUgdG8gc2hhcmUgb3VyIGVuam95bWVudHMsIGFuZCBiZW5lZmljaWFyaWVzIHJhdGhlciB0aGFuCgkJCQkJYmVuZWZhY3RvcnM7PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPmFuZCB3ZQoJCQkJCWNhbiBqdWRnZSB0aGVtIGJldHRlciB3aGVuIHdlIGFyZSBzZWxmLXN1ZmZpY2luZyB0aGFuIHdoZW4gaW4gbmVlZCwKCQkJCQlhbmQgd2UgbW9zdCBuZWVkIGZyaWVuZHMgd2hvIGFyZSB3b3J0aHkgb2Ygb3VyIHNvY2lldHkuPC90cmFuc2xhdGlvbj4="
translation['7.1245a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuNSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgYWJvdXQgdGhpcyBxdWVzdGlvbiB3ZSBtdXN0IGNvbnNpZGVyIHdoZXRoZXIgcGVyaGFwcywgYWx0aG91Z2gKCQkJCQl0aGUgdmlldyBzdGF0ZWQgaXMgcGFydGx5IHNvdW5kLCBpbiBwYXJ0IHRoZSB0cnV0aCBlc2NhcGVzIHVzIGJlY2F1c2UKCQkJCQlvZiB0aGUgY29tcGFyaXNvbi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBvZiBtYW4gd2l0aAoJCQkJCQlHb2QsIGwuIDggYWJvdmU7IGNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gNy4xMjQ1Yi4xMyIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyNDViCgkJCQkJCQkxMzwvYmlibD4uPC9ub3RlPiBUaGUgbWF0dGVyIGlzIGNsZWFyIGlmIHdlIGFzY2VydGFpbiB3aGF0IGxpZmUKCQkJCQlpbiB0aGUgYWN0aXZlIHNlbnNlIGFuZCBhcyBhbiBFbmQgaXMuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiA3LjEyNDViLjEzIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTI0NWIKCQkJCQkJCTEzPC9iaWJsPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEyLjYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gSXQgaXMgbWFuaWZlc3QgdGhhdCBsaWZlIGlzIHBlcmNlcHRpb24gYW5kCgkJCQkJa25vd2xlZGdlLCBhbmQgdGhhdCBjb25zZXF1ZW50bHkgc29jaWFsIGxpZmUgaXMgcGVyY2VwdGlvbiBhbmQKCQkJCQlrbm93bGVkZ2UgaW4gY29tbW9uLiBCdXQgcGVyY2VwdGlvbiBhbmQga25vd2xlZGdlIHRoZW1zZWx2ZXMgYXJlIHRoZQoJCQkJCXRoaW5nIG1vc3QgZGVzaXJhYmxlIGZvciBlYWNoIGluZGl2aWR1YWxseSAoYW5kIGl0IGlzIG93aW5nIHRvIHRoaXMKCQkJCQl0aGF0IHRoZSBhcHBldGl0aW9uIGZvciBsaWZlIGlzIGltcGxhbnRlZCBieSBuYXR1cmUgaW4gYWxsLCBmb3IgbGl2aW5nCgkJCQkJbXVzdCBiZSBkZWVtZWQgYSBtb2RlIG9mIGtub3dpbmcpLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEyLjciIHVuaXQ9IkxvZWIgY2hhcCIgLz4gSWYgdGhlcmVmb3JlIG9uZSB3ZXJlIHRvIGFic3RyYWN0IGFuZCBwb3NpdCBhYnNvbHV0ZQoJCQkJCWtub3dsZWRnZSBhbmQgaXRzIG5lZ2F0aW9uICh0aG91Z2ggdGhpcywgaXQgaXMgdHJ1ZSwgaXMgb2JzY3VyZSBpbiB0aGUKCQkJCQlhcmd1bWVudCBhcyB3ZSBoYXZlIHdyaXR0ZW4gaXQsIGJ1dCBpdCBtYXkgYmUgb2JzZXJ2ZWQgaW4gZXhwZXJpZW5jZSksCgkJCQkJdGhlcmUgd291bGQgYmUgbm8gZGlmZmVyZW5jZSBiZXR3ZWVuIGFic29sdXRlIGtub3dsZWRnZSBhbmQgYW5vdGhlcgoJCQkJCXBlcnNvbidzIGtub3dpbmcgaW5zdGVhZCBvZiBvbmVzZWxmOyBidXQgdGhhdCBpcyBsaWtlIGFub3RoZXIgcGVyc29uJ3MKCQkJCQlsaXZpbmcgaW5zdGVhZCBvZiBvbmVzZWxmLCB3aGVyZWFzIHBlcmNlaXZpbmcgYW5kIGtub3dpbmcgb25lc2VsZiBpcwoJCQkJCXJlYXNvbmFibHkgbW9yZSBkZXNpcmFibGUuIEZvciB0d28gdGhpbmdzIG11c3QgYmUgdGFrZW4gaW50bwoJCQkJCWNvbnNpZGVyYXRpb24gdG9nZXRoZXIsIHRoYXQgbGlmZSBpcyBkZXNpcmFibGUgYW5kIHRoYXQgZ29vZCBpcwoJCQkJCWRlc2lyYWJsZSwgYW5kIGFzIGEgY29uc2VxdWVuY2UgdGhhdCBpdCBpcyBkZXNpcmFibGUgZm9yIG91cnNlbHZlcyB0bwoJCQkJCXBvc3Nlc3MgYSBuYXR1cmUgb2YgdGhhdCBxdWFsaXR5Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhM6/zrnOseG9u8+EzrfOvTwvZm9yZWlnbj49IDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPuG8gM6zzrHOuOG9tc69PC9mb3JlaWduPi48L25vdGU+CgkJCQkJPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4TOv865zrHhvbvPhM63zr08L2ZvcmVpZ24+PSA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7hvIDOs86xzrjhvbXOvTwvZm9yZWlnbj4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNDVhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1245a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPjwvdHJhbnNsYXRpb24+"
translation['7.1245a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuOCIgdW5pdD0iTG9lYiBjaGFwIiAvPklmLCB0aGVyZWZvcmUsIG9mIHRoZSBwYWlyIG9mIGNvcnJlc3BvbmRpbmcgc2VyaWVzPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmUuZy4gdGhlIFB5dGhhZ29yZWFuIHBhaXIgb2YKCQkJCQkJc2VyaWVzLCBPbmUsIEdvb2QsIGV0Yy4gb3Bwb3NlZCB0byBNYW55LCBCYWQsIGV0Yy4gKFNvbG9tb24pLgoJCQkJCQknVGhlIERldGVybWluZWQnIChvcHBvc2VkIHRvICd0aGUgSW5kZXRlcm1pbmF0ZScpIGJlbG9uZ2VkIHRvCgkJCQkJCXRoZSAnZGVzaXJhYmxlJyBzZXJpZXMuPC9ub3RlPiBvZiB0aGlzIGtpbmQgb25lIGlzIGFsd2F5cyBpbiB0aGUKCQkJCQljbGFzcyBvZiB0aGUgZGVzaXJhYmxlLCBhbmQgdGhlIGtub3duIGFuZCB0aGUgcGVyY2VpdmVkIGFyZSBnZW5lcmFsbHkKCQkJCQlzcGVha2luZyBjb25zdGl0dXRlZCBieSB0aGVpciBwYXJ0aWNpcGF0aW9uIGluIHRoZSAnZGV0ZXJtaW5lZCcKCQkJCQluYXR1cmUsIHNvIHRoYXQgdG8gd2lzaCB0byBwZXJjZWl2ZSBvbmVzZWxmIGlzIHRvIHdpc2ggb25lc2VsZiB0byBiZQoJCQkJCW9mIGEgY2VydGFpbiBjaGFyYWN0ZXIs4oCUc2luY2UsIHRoZW4sIHdlIGFyZSBub3QgZWFjaCBvZgoJCQkJCXRoZXNlIHRoaW5ncyBpbiBvdXJzZWx2ZXMgYnV0IG9ubHkgYnkgcGFydGljaXBhdGluZyBpbiB0aGVzZSBmYWN1bHRpZXMKCQkJCQlpbiB0aGUgcHJvY2VzcyBvZiBwZXJjZWl2aW5nIG9yIGtub3dpbmcgKGZvciB3aGVuIHBlcmNlaXZpbmcgb25lCgkJCQkJYmVjb21lcyBwZXJjZWl2ZWQgYnkgbWVhbnMgb2Ygd2hhdCBvbmUgcHJldmlvdXNseSBwZXJjZWl2ZXMsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPmkuZS4gcGVyY2VwdGlvbiBvZiBzb21ldGhpbmcKCQkJCQkJb3V0c2lkZSBvbmVzZWxmIGNhdXNlcyBjb25zY2lvdXNuZXNzIG9mIHNlbGYuPC9ub3RlPiBpbiB0aGUKCQkJCQltYW5uZXIgYW5kIGluIHRoZSByZXNwZWN0IGluIHdoaWNoIG9uZSBwZXJjZWl2ZXMgaXQsIGFuZCB3aGVuIGtub3dpbmcKCQkJCQlvbmUgYmVjb21lcyBrbm93binigJRoZW5jZSBvd2luZyB0byB0aGlzIG9uZSB3aXNoZXMgYWx3YXlzIHRvCgkJCQkJbGl2ZSBiZWNhdXNlIG9uZSB3aXNoZXMgYWx3YXlzIHRvIGtub3c7IGFuZCB0aGlzIGlzIGJlY2F1c2Ugb25lIHdpc2hlcwoJCQkJCXRvIGJlIG9uZXNlbGYgdGhlIG9iamVjdCBrbm93bi4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMi45IiB1bml0PSJMb2ViIGNoYXAiIC8+IFRvIGNob29zZSB0byBsaXZlIGluIHRoZSBzb2NpZXR5IG9mIG90aGVycyBtaWdodCwKCQkJCQl0aGVyZWZvcmUsIGZyb20gYSBjZXJ0YWluIHBvaW50IG9mIHZpZXcgc2VlbSBmb29saXNoIChmaXJzdCBpbiB0aGUKCQkJCQljYXNlIG9mIHRoZSB0aGluZ3MgY29tbW9uIHRvIHRoZSBvdGhlciBhbmltYWxzIGFsc28sIGZvciBpbnN0YW5jZQoJCQkJCWVhdGluZyB0b2dldGhlciBvciBkcmlua2luZyB0b2dldGhlciwgZm9yIHdoYXQgZGlmZmVyZW5jZSBkb2VzIGl0IG1ha2UKCQkJCQl3aGV0aGVyIHRoZXNlIHRoaW5ncyB0YWtlIHBsYWNlIHdoZW4gd2UgYXJlIG5lYXIgdG9nZXRoZXIgb3IgYXBhcnQsIGlmCgkJCQkJeW91IHRha2UgYXdheSBzcGVlY2g/IGJ1dCBldmVuIHRvIHNoYXJlIGluIHNwZWVjaCB0aGF0IGlzIG1lcmVseQoJCQkJCWNhc3VhbCBpcyBhIHRoaW5nIGluZGlmZmVyZW50LCBhbmQgYWxzbyBuZWl0aGVyIHRvIGltcGFydCBub3IgdG8KCQkJCQlyZWNlaXZlIGluZm9ybWF0aW9uIGlzIHBvc3NpYmxlIGZvciBmcmllbmRzIHdobyBhcmUgc2VsZi1zdWZmaWNpbmcsCgkJCQkJc2luY2UgcmVjZWl2aW5nIGluZm9ybWF0aW9uIGltcGxpZXMgYSBkZWZpY2llbmN5IGluIG9uZXNlbGYgYW5kCgkJCQkJaW1wYXJ0aW5nIGl0IGEgZGVmaWNpZW5jeSBpbiBvbmUncyBmcmllbmQsIGFuZCBsaWtlbmVzcyBpcwoJCQkJCWZyaWVuZHNoaXAp4oCUPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIxMi4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBidXQgbmV2ZXJ0aGVsZXNzIGl0IHN1cmVseSBzZWVtcyB0aGF0IHdlIGFsbCBmaW5kIGl0CgkJCQkJcGxlYXNhbnRlciB0byBzaGFyZSBnb29kIHRoaW5ncyB3aXRoIG91ciBmcmllbmRzLDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hcyBmYXIgYXMgdGhlc2UgZmFsbCB0byBlYWNoLAoJCQkJCWFuZCB0aGUgYmVzdCB0aGF0IGVhY2ggY2Fu4oCUPC90cmFuc2xhdGlvbj4="
translation['7.1245b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gYnV0IGFtb25nIHRoZXNlLCBpdCBmYWxscyB0byBvbmUgdG8gc2hhcmUKCQkJCQlib2RpbHkgcGxlYXN1cmUsIHRvIGFub3RoZXIgYXJ0aXN0aWMgc3R1ZHksIHRvIGFub3RoZXIKCQkJCQlwaGlsb3NvcGh54oCUOyBhbmQgc28gaXQgaXMgcGxlYXNhbnRlciB0byBiZSB3aXRoIG9uZSdzIGZyaWVuZAoJCQkJCSh3aGVuY2UgdGhlIHNheWluZyAnRGlzdGFudCBmcmllbmRzIGEgYnVyZGVuIGFyZSc8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhpcyBwcm92ZXJiIGxvb2tzIGxpa2UgYSBxdW90YXRpb24sIGJlaW5nIGhhbGYgYQoJCQkJCQlsaW5lIG9mIHZlcnNlLjwvbm90ZT4pLCBzbyB0aGF0IHRoZXkgbXVzdCBub3QgYmUgc2VwYXJhdGVkIHdoZW4KCQkJCQl0aGlzIGlzIHRha2luZyBwbGFjZS4gSGVuY2UgYWxzbyBsb3ZlIHNlZW1zIHRvIHJlc2VtYmxlIGZyaWVuZHNoaXAsCgkJCQkJZm9yIHRoZSBsb3ZlciBpcyBlYWdlciB0byBzaGFyZSB0aGUgbGlmZSBvZiB0aGUgbG92ZWQgb25lLCBhbHRob3VnaAoJCQkJCW5vdCBpbiB0aGUgbW9zdCBwcm9wZXIgd2F5IGJ1dCBpbiBhIHNlbnN1b3VzIG1hbm5lci48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEyLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXJlZm9yZSB0aGUgYXJndW1lbnQgaW4gcmFpc2luZyB0aGUgcXVlc3Rpb24gYXNzZXJ0cyB0aGUgZm9ybWVyCgkJCQkJcG9zaXRpb24sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gNy4xMjQ0Yi4yIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTI0NGIgMmZmLjwvYmlibD4sIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiA3LjEyNDVhLjI3IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTI0NWEgMjc8L2JpYmw+Ljwvbm90ZT4gYnV0IHRoZSBmYWN0cwoJCQkJCW9mIGV4cGVyaWVuY2UgYXJlIG9idmlvdXNseSBvbiB0aGUgbGF0dGVyIGxpbmVzLCBzbyB0aGF0IGl0IGlzIGNsZWFyCgkJCQkJdGhhdCB0aGUgcmFpc2VyIG9mIHRoZSBxdWVzdGlvbiBpbiBhIHdheSBtaXNsZWFkcyB1cy4gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDcuMTI0NGIuMiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyNDRiIDJmZi48L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gNy4xMjQ1YS4yNyIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyNDVhIDI3PC9iaWJsPi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEyLjEzIiB1bml0PSJMb2ViIGNoYXAiIC8+IFdlIG11c3QgdGhlcmVmb3JlIGV4YW1pbmUKCQkJCQl0aGUgdHJ1dGggZnJvbSB0aGUgZm9sbG93aW5nIGNvbnNpZGVyYXRpb246ICdmcmllbmQnIHJlYWxseSBkZW5vdGVzLAoJCQkJCWluIHRoZSBsYW5ndWFnZSBvZiB0aGUgcHJvdmVyYiw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+UXVvdGVkIGVsc2V3aGVyZSBpbiB0aGUgc2FtZSBjb25uZWN0aW9uLCBidXQgb25lIG1heSBjb25qZWN0dXJlCgkJCQkJCXRoYXQgdGhlIHBocmFzZSBvcmlnaW5hbGx5IG1lYW50ICdhcyBzdHJvbmcgYXMKCQkJCQkJSGVyY3VsZXMuJzwvbm90ZT4nYW5vdGhlciBIZXJjdWxlcyfigJRhbm90aGVyIHNlbGY7IGJ1dCB0aGUKCQkJCQljaGFyYWN0ZXJpc3RpY3MgYXJlIHNjYXR0ZXJlZCwgYW5kIGl0IGlzIGRpZmZpY3VsdCBmb3IgYWxsIHRvIGJlCgkJCQkJcmVhbGl6ZWQgaW4gdGhlIGNhc2Ugb2Ygb25lIHBlcnNvbjsgdGhvdWdoIGJ5IG5hdHVyZSBhIGZyaWVuZCBpcyB3aGF0CgkJCQkJaXMgbW9zdCBha2luLCB5ZXQgb25lIHJlc2VtYmxlcyBoaXMgZnJpZW5kIGluIGJvZHkgYW5kIGFub3RoZXIgaW4KCQkJCQlzcGlyaXQsIGFuZCBvbmUgaW4gb25lIHBhcnQgb2YgdGhlIGJvZHkgb3Igc3Bpcml0LCBhbm90aGVyIGluIGFub3RoZXIuCgkJCQkJQnV0IHN0aWxsIG5vbmUgdGhlIGxlc3MgYSBmcmllbmQgcmVhbGx5IG1lYW5zIGFzIGl0IHdlcmUgYSBzZXBhcmF0ZQoJCQkJCXNlbGYuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gVG8gcGVyY2VpdmUgYW5kCgkJCQkJdG8ga25vdyBhIGZyaWVuZCwgdGhlcmVmb3JlLCBpcyBuZWNlc3NhcmlseSBpbiBhIG1hbm5lciB0byBwZXJjZWl2ZQoJCQkJCWFuZCBpbiBhIG1hbm5lciB0byBrbm93IG9uZXNlbGYuIENvbnNlcXVlbnRseSB0byBzaGFyZSBldmVuIHZ1bGdhcgoJCQkJCXBsZWFzdXJlcyBhbmQgb3JkaW5hcnkgbGlmZSB3aXRoIGEgZnJpZW5kIGlzIG5hdHVyYWxseSBwbGVhc2FudCAoZm9yCgkJCQkJaXQgYWx3YXlzIGludm9sdmVzIG91ciBzaW11bHRhbmVvdXNseSBwZXJjZWl2aW5nIHRoZSBmcmllbmQpLCBidXQgbW9yZQoJCQkJCXNvIHRvIHNoYXJlIHRoZSBtb3JlIGRpdmluZSBwbGVhc3VyZXM7IHRoZSByZWFzb24gb2Ygd2hpY2ggaXMgdGhhdCBpdAoJCQkJCWlzIGFsd2F5cyBtb3JlIHBsZWFzYW50IHRvIGJlaG9sZCBvbmVzZWxmIGVuam95aW5nIHRoZSBzdXBlcmlvciBnb29kLAoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjQ1YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1245b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCB0aGlzIGlzIHNvbWV0aW1lcyBhIHBhc3NpdmUsIHNvbWV0aW1lcyBhbgoJCQkJCWFjdGl2ZSBleHBlcmllbmNlLCBzb21ldGltZXMgc29tZXRoaW5nIGVsc2UuIEJ1dCBpZiBpdCBpcyBwbGVhc2FudCB0bwoJCQkJCWxpdmUgd2VsbCBvbmVzZWxmIGFuZCBmb3Igb25lJ3MgZnJpZW5kIGFsc28gdG8gbGl2ZSB3ZWxsLCBhbmQgaWYKCQkJCQlsaXZpbmcgdG9nZXRoZXIgaW52b2x2ZXMgd29ya2luZyB0b2dldGhlciwgc3VyZWx5IHRoZWlyIHBhcnRuZXJzaGlwCgkJCQkJd2lsbCBiZSBwcmUtZW1pbmVudGx5IGluIHRoaW5ncyBpbmNsdWRlZCBpbiB0aGUgRW5kLiBIZW5jZSB3ZSBzaG91bGQKCQkJCQlzdHVkeSB0b2dldGhlciwgYW5kIGZlYXN0IHRvZ2V0aGVy4oCUbm90IG9uIHRoZSBwbGVhc3VyZXMgb2YKCQkJCQlmb29kIGFuZCB0aGUgbmVjZXNzYXJ5IHBsZWFzdXJlcyAoZm9yIHN1Y2ggcGFydG5lcnNoaXBzIGRvIG5vdCBzZWVtIHRvCgkJCQkJYmUgcmVhbCBzb2NpYWwgaW50ZXJjb3Vyc2UgYnV0IG1lcmUgZW5qb3ltZW50KSwgPC90cmFuc2xhdGlvbj4="
translation['7.1245b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMTUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gYnV0IGVhY2ggcmVhbGx5IHdpc2hlcyB0bwoJCQkJCXNoYXJlIHdpdGggaGlzIGZyaWVuZHMgdGhlIEVuZCB0aGF0IGhlIGlzIGNhcGFibGUgb2YgYXR0YWluaW5nLCBvcgoJCQkJCWZhaWxpbmcgdGhpcywgbWVuIGNob29zZSBtb3N0IG9mIGFsbCB0byBiZW5lZml0IHRoZWlyIGZyaWVuZHMgYW5kIHRvCgkJCQkJYmUgYmVuZWZpdGVkIGJ5IHRoZW0uIEl0IGlzIHRoZXJlZm9yZSBtYW5pZmVzdCB0aGF0IHRvIGxpdmUgdG9nZXRoZXIKCQkJCQlpcyBhY3R1YWxseSBhIGR1dHksIGFuZCB0aGF0IGFsbCBwZW9wbGUgd2lzaCBpdCB2ZXJ5IG11Y2gsIGFuZCB0aGF0CgkJCQkJdGhpcyBpcyBtb3N0IHRoZSBjYXNlIHdpdGggdGhlIG1hbiB0aGF0IGlzIHRoZSBoYXBwaWVzdCBhbmQgYmVzdC4gQnV0CgkJCQkJdGhhdCB0aGUgY29udHJhcnkgYXBwZWFyZWQgdG8gYmUgdGhlIGNvbmNsdXNpb24gb2YgdGhlIGFyZ3VtZW50PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkNmLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gICAgICAgIDcuMTI0NGIuMiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguCgkJCQkJCTEyNDRiIDJmZi48L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gNy4xMjQ1YSAgICAgICAgIDI3IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTI0NWEuMjc8L2JpYmw+Ljwvbm90ZT4gd2FzIGFsc28gcmVhc29uYWJsZSwgdGhlIHN0YXRlbWVudCBiZWluZyB0cnVlLgoJCQkJCUZvciB0aGUgc29sdXRpb24gaXMgb24gdGhlIGxpbmUgb2YgdGhlIGNvbXBhcmlzb24sPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguICAgICAgICA3LjEyNDRiLjIiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLgoJCQkJCQkxMjQ0YiAyZmYuPC9iaWJsPiwgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDcuMTI0NWEgICAgICAgICAyNyIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLiBFdGguIDEyNDVhLjI3PC9iaWJsPi48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLiBvZiBtYW4gd2l0aCBHb2QsIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gICAgICAgIEV0aC4gNy4xMjQ0Yi43IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuCgkJCQkJCUV0aC4gMTI0NGIgNzwvYmlibD4uPC9ub3RlPiB0aGUgY29ycmVzcG9uZGVuY2UgYmVpbmcgdHJ1ZTsKCQkJCQlmb3IgdGhlIGZhY3QgdGhhdCBHb2QgaXMgbm90IG9mIHN1Y2ggYSBuYXR1cmUgYXMgdG8gbmVlZCBhIGZyaWVuZAoJCQkJCXBvc3R1bGF0ZXMgdGhhdCBtYW4sIHdobyBpcyBsaWtlIEdvZCwgYWxzbyBkb2VzIG5vdCBuZWVkIG9uZS4KCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuICAgICAgICBFdGguIDcuMTI0NGIuNyIgdmFsaWQ9InllcyI+QXJpc3RvdC4gRXVkLgoJCQkJCQlFdGguIDEyNDRiIDc8L2JpYmw+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMTYiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gWWV0IGFjY29yZGluZyB0bwoJCQkJCXRoaXMgYXJndW1lbnQgdGhlIHZpcnR1b3VzIG1hbiB3aWxsIG5vdCB0aGluayBvZiBhbnl0aGluZzsgZm9yIEdvZCdzCgkJCQkJcGVyZmVjdGlvbiBkb2VzIG5vdCBwZXJtaXQgb2YgdGhpcywgYnV0IGhlIGlzIHRvbyBwZXJmZWN0IHRvIHRoaW5rIG9mCgkJCQkJYW55dGhpbmcgZWxzZSBiZXNpZGUgaGltc2VsZi4gQW5kIHRoZSByZWFzb24gaXMgdGhhdCBmb3IgdXMgd2VsbC1iZWluZwoJCQkJCWhhcyByZWZlcmVuY2UgdG8gc29tZXRoaW5nIG90aGVyIHRoYW4gb3Vyc2VsdmVzLCBidXQgaW4gaGlzIGNhc2UgaGUgaXMKCQkJCQloaW1zZWxmIGhpcyBvd24gd2VsbC1iZWluZy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PC90cmFuc2xhdGlvbj4="
translation['7.1246a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMTciIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQXMgdG8gc2Vla2luZwoJCQkJCWZvciBvdXJzZWx2ZXMgYW5kIHByYXlpbmcgZm9yIG1hbnkgZnJpZW5kcywgYW5kIGF0IHRoZSBzYW1lIHRpbWUKCQkJCQlzYXlpbmcgdGhhdCBvbmUgd2hvIGhhcyBtYW55IGZyaWVuZHMgaGFzIG5vIGZyaWVuZCwgYm90aCBzdGF0ZW1lbnRzCgkJCQkJYXJlIGNvcnJlY3QuIEZvciBpZiBpdCBpcyBwb3NzaWJsZSB0byBsaXZlIHdpdGggYW5kIHNoYXJlIHRoZQoJCQkJCXBlcmNlcHRpb25zIG9mIG1hbnkgYXQgb25jZSwgaXQgaXMgbW9zdCBkZXNpcmFibGUgZm9yIHRoZW0gdG8gYmUgdGhlCgkJCQkJbGFyZ2VzdCBwb3NzaWJsZSBudW1iZXI7IGJ1dCBhcyB0aGF0IGlzIHZlcnkgZGlmZmljdWx0LCBhY3RpdmUKCQkJCQljb21tdW5pdHkgb2YgcGVyY2VwdGlvbiBtdXN0IG9mIG5lY2Vzc2l0eSBiZSBpbiBhIHNtYWxsZXIgY2lyY2xlLAoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMTgiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gc28gdGhhdCBpdCBpcyBub3QKCQkJCQlvbmx5IGRpZmZpY3VsdCB0byBhY3F1aXJlIG1hbnkgZnJpZW5kcyAoZm9yIHByb2JhdGlvbiBpcyBuZWVkZWQpLCBidXQKCQkJCQlhbHNvIHRvIHVzZSB0aGVtIHdoZW4gb25lIGhhcyBnb3QgdGhlbS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T25lIGZvciB3aG9tIHdlIGZlZWwgYWZmZWN0aW9uIHdlIHNvbWV0aW1lcyB3aXNoIHRvIHByb3NwZXIgaW4KCQkJCQlhYnNlbmNlIGZyb20gdXMsIGJ1dCBzb21ldGltZXMgdG8gc2hhcmUgdGhlIHNhbWUgZXhwZXJpZW5jZXMuIEFuZCB0bwoJCQkJCXdpc2ggdG8gYmUgdG9nZXRoZXIgaXMgYSBtYXJrIG9mIGZyaWVuZHNoaXAsIGZvciBpZiBpdCBpcyBwb3NzaWJsZSB0bwoJCQkJCWJlIHRvZ2V0aGVyIGFuZCB0byBwcm9zcGVyIGFsbCBjaG9vc2UgdGhpczsgYnV0IGlmIGl0IGlzIG5vdCBwb3NzaWJsZQoJCQkJCXRvIHByb3NwZXIgdG9nZXRoZXIsIHRoZW4gd2UgY2hvb3NlIGFzIHRoZSBtb3RoZXIgb2YgSGVyYWNsZXMgcGVyaGFwcwoJCQkJCXdvdWxkIGhhdmUgY2hvc2VuIGZvciBoZXIgc29uLCB0byBiZSBhIGdvZCByYXRoZXIgdGhhbiB0byBiZSB3aXRoIGhlcgoJCQkJCWJ1dCBpbiBzZXJ2aWNlIHRvIEV1cnlzdGhldXMuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMTkiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gRm9yIG1lbiB3b3VsZCBzYXkgdGhpbmdzIGxpa2UgdGhlIGplc3Qgd2hpY2ggdGhlCgkJCQkJU3BhcnRhbiBtYWRlIHdoZW4gc29tZWJvZHkgdG9sZCBoaW0gdG8gaW52b2tlIHRoZSBEaW9zY3VyaSBpbiBhCgkJCQkJc3Rvcm0uPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkhlIGRvdWJ0bGVzcyBzYWlkIHRoYXQKCQkJCQkJYmVpbmcgaW4gdHJvdWJsZSBoaW1zZWxmIGhlIGRpZCBub3Qgd2lzaCB0byBpbnZvbHZlIHRoZSBEaW9zY3VyaQoJCQkJCQlpbiBpdCAoU29sb21vbikuPC9ub3RlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBzZWVtcwoJCQkJCXRvIGJlIGNoYXJhY3RlcmlzdGljIG9mIG9uZSB3aG8gZmVlbHMgYWZmZWN0aW9uIGZvciBhbm90aGVyIHRvIGRlYmFyCgkJCQkJaGltIGZyb20gc2hhcmluZyBoaXMgdHJvdWJsZXMsIGFuZCBvZiB0aGUgcGVyc29uIGZvciB3aG9tIGFmZmVjdGlvbiBpcwoJCQkJCWZlbHQgdG8gd2lzaCB0byBzaGFyZSB0aGVtLiBCb3RoIHRoZXNlIHRoaW5ncyBoYXBwZW4gcmVhc29uYWJseTsgZm9yCgkJCQkJdG8gYSBmcmllbmQgbm90aGluZyBvdWdodCB0byBnaXZlIHNvIG11Y2ggcGFpbiBhcyBoaXMgZnJpZW5kIGdpdmVzCgkJCQkJcGxlYXN1cmUsIHlldCBpdCBpcyBmZWx0IHRoYXQgaGUgb3VnaHQgbm90IHRvIGNob29zZSBoaXMgb3duIGludGVyZXN0LgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMTIuMjAiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gSGVuY2UgcGVvcGxlCgkJCQkJaGluZGVyIHRoZWlyIGZyaWVuZHMgZnJvbSBzaGFyaW5nIHRoZWlyIHNvcnJvd3M7IHRoZXkgYXJlIGNvbnRlbnQgdG8KCQkJCQliZSBpbiB0cm91YmxlIGJ5IHRoZW1zZWx2ZXMsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjQ2YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['7.1246a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmluIG9yZGVyIHRoYXQgdGhleQoJCQkJCW1heSBub3QgYXBwZWFyIGZyb20gc2VsZmlzaCBjb25zaWRlcmF0aW9ucyBhY3R1YWxseSB0byBjaG9vc2UgdGhlIGpveQoJCQkJCW9mIHRoZWlyIGZyaWVuZCdzIGdyaWVmIGFuZCBmdXJ0aGVybW9yZSB0byBmaW5kIGl0IGEgcmVsaWVmIG5vdCB0bwoJCQkJCWJlYXIgdGhlaXIgbWlzZm9ydHVuZXMgYWxvbmUuIDwvdHJhbnNsYXRpb24+"
translation['8.1246a.26'] = ""
translation['8.1246b.26'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4xIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dDxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5JbiBNYiB0aGUgcmVtYWluZGVyIG9mIHRoZSB3b3JrIGZvcm1zIHBhcnQgb2YgdGhlCgkJCQkJCXByZWNlZGluZyBCb29rLCBhbmQgc29tZSBlZGl0b3JzIHByaW50IGl0IGFzIGNjLiAxMy0yNSBvZiBCb29rCgkJCQkJCTcuIFRoZSB0ZXh0IGhhcyBiZWVuIGZ1bGx5IHRyZWF0ZWQgYnkKCQkJCQkJSmFja3NvbiwgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Si4gUGhpbC4KCQkJCQkJPC90aXRsZT4yMi4xNzAuPC9ub3RlPiBvbmUgbWF5IHJhaXNlIHRoZSBxdWVzdGlvbiB3aGV0aGVyIGl0IGlzCgkJCQkJcG9zc2libGUgdG8gdXNlIGFueSBnaXZlbiB0aGluZyBib3RoIGZvciBpdHMgbmF0dXJhbCBwdXJwb3NlIGFuZAoJCQkJCW90aGVyd2lzZSwgYW5kIGluIHRoZSBsYXR0ZXIgY2FzZSB0byB1c2UgaXQgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Si4gUGhpbC4KCQkJCQkJPC90aXRsZT4yMi4xNzAuPGhpIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcmVuZD0iSXRhbGljIj5xdWE8L2hpPgoJCQkJCWl0c2VsZiBvciBvbiB0aGUgY29udHJhcnkgaW5jaWRlbnRhbGx5OiBmb3IgaW5zdGFuY2UsIHdpdGggYW4gZXllIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Ikl0YWxpYyI+cXVhPC9oaT4gZXllLCB0byBzZWUsIG9yIGFsc28ganVzdCB0byBzZWUgd3JvbmcsCgkJCQkJYnkgc3F1aW50aW5nIHNvIHRoYXQgb25lIG9iamVjdCBhcHBlYXJzIHR3b+KAlGJvdGggdGhlc2UgdXNlcwoJCQkJCW9mIHRoZSBleWUsIHRoZW4sIHVzZSBpdCBiZWNhdXNlIGl0IGlzIGFuIGV5ZSwgYnV0IGl0IHdvdWxkIGJlCgkJCQkJcG9zc2libGUgdG8gbWFrZSB1c2Ugb2YgYW4gZXllIGJ1dCB0byB1c2UgaXQgaW4gYW5vdGhlciB3YXksCgkJCQkJaW5jaWRlbnRhbGx5LCBmb3IgZXhhbXBsZSwgaWYgaXQgd2VyZSBwb3NzaWJsZSB0byBzZWxsIGl0IG9yIHRvIGVhdAoJCQkJCWl0LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuMiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgc2ltaWxhcmx5IHdpdGgKCQkJCQl0aGUgdXNlIG9mIGtub3dsZWRnZTogb25lIGNhbiB1c2UgaXQgdHJ1bHksIGFuZCBvbmUgY2FuIHVzZSBpdAoJCQkJCXdyb25nbHnigJRmb3IgaW5zdGFuY2UsIHdoZW4gb25lIHNwZWxscyBhIHdvcmQgaW5jb3JyZWN0bHkgb24KCQkJCQlwdXJwb3NlLCB0aGVuIGF0IHRoZSB0aW1lIG9uZSBpcyB1c2luZyBrbm93bGVkZ2UgYXMgaWdub3JhbmNlLCBqdXN0IGFzCgkJCQkJZGFuY2luZy1naXJscyBzb21ldGltZXMgaW50ZXJjaGFuZ2UgdGhlIGhhbmQgYW5kIHRoZSBmb290IGFuZCB1c2UgZm9vdAoJCQkJCWFzIGhhbmQgYW5kIGhhbmQgYXMgZm9vdC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+aS5lLgoJCQkJCQlzdGFuZCBvbiB0aGVpciBoYW5kcyBhbmQgd2F2ZSB0aGVpciBmZWV0IGluIHRoZQoJCQkJCQlhaXIuPC9ub3RlPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IElmIHRoZW4KCQkJCQlhbGwgdGhlIHZpcnR1ZXMgYXJlIGZvcm1zIG9mIGtub3dsZWRnZSwgaXQgd291bGQgYmUgcG9zc2libGUgdG8gdXNlCgkJCQkJZXZlbiBqdXN0aWNlIGFzIGluanVzdGljZeKAlGluIHRoYXQgY2FzZSBhIG1hbiB3aWxsIGJlCgkJCQkJYmVoYXZpbmcgdW5qdXN0bHkgYnkgZG9pbmcgdW5qdXN0IGFjdHMgYXMgYSByZXN1bHQgb2YganVzdGljZSwgYXMgd2hlbgoJCQkJCW9uZSBtYWtlcyBpZ25vcmFudCBtaXN0YWtlcyBmcm9tIGtub3dsZWRnZTsgYnV0IGlmIHRoaXMgaXMgaW1wb3NzaWJsZSwKCQkJCQlpdCBpcyBjbGVhciB0aGF0IHRoZSB2aXJ0dWVzIGNhbm5vdCBiZSBicmFuY2hlcyBvZiBrbm93bGVkZ2UuCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNDZiIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['8.1246b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPkFuZCBhbHNvIGlmIGl0IGlzIG5vdCBwb3NzaWJsZSBmcm9tIGtub3dsZWRnZQoJCQkJCXRvIGJlIGlnbm9yYW50LCBidXQgb25seSB0byBtYWtlIG1pc3Rha2VzIGFuZCBkbyB0aGUgc2FtZSB0aGluZ3MgYXMKCQkJCQlvbmUgZG9lcyBmcm9tIGlnbm9yYW5jZSwgYSBtYW4gd2lsbCBhc3N1cmVkbHkgbmV2ZXIgYWN0IGZyb20ganVzdGljZQoJCQkJCWluIHRoZSBzYW1lIHdheSBhcyBoZSB3aWxsIGFjdCBmcm9tIGluanVzdGljZS4gQnV0IHNpbmNlIHdpc2RvbSBpcwoJCQkJCWtub3dsZWRnZSBhbmQgYSBmb3JtIG9mIHRydXRoLCB3aXNkb20gYWxzbyB3aWxsIHByb2R1Y2UgdGhlIHNhbWUKCQkJCQllZmZlY3QgYXMga25vd2xlZGdlLCB0aGF0IGlzLCBpdCB3b3VsZCBiZSBwb3NzaWJsZSBmcm9tIHdpc2RvbSB0byBhY3QKCQkJCQl1bndpc2VseSBhbmQgdG8gbWFrZSB0aGUgc2FtZSBtaXN0YWtlcyBhcyB0aGUgdW53aXNlIG1hbiBkb2VzOyBidXQgaWYKCQkJCQl0aGUgdXNlIG9mIGFueXRoaW5nIDxoaSBjbGFzcz0idHJhbnNsYXRpb24iIHJlbmQ9Ikl0YWxpYyI+cXVhPC9oaT4gaXRzZWxmIHdlcmUKCQkJCQlzaW5nbGUsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPkFzIGluIDEgYWJvdmUgaXQgd2FzCgkJCQkJCXNob3duIG5vdCB0byBiZS48L25vdGU+IHdoZW4gc28gYWN0aW5nIG1lbiB3b3VsZCBiZSBhY3RpbmcKCQkJCQl3aXNlbHkuIDwvdHJhbnNsYXRpb24+"
translation['8.1246b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS40IiB1bml0PSJMb2ViIGNoYXAiIC8+IEluIHRoZSBjYXNlIG9mCgkJCQkJdGhlIG90aGVyIGZvcm1zIG9mIGtub3dsZWRnZSwgdGhlcmVmb3JlLCBhbm90aGVyIGhpZ2hlciBmb3JtIGNhdXNlcwoJCQkJCXRoZWlyIGRpdmVyc2lvbjsgYnV0IHdoYXQga25vd2xlZGdlIGNhdXNlcyB0aGUgZGl2ZXJzaW9uIG9mIHRoZQoJCQkJCWFjdHVhbGx5IGhpZ2hlc3Qgb2YgYWxsPyBPYnZpb3VzbHkgdGhlcmUgaXMgbm8gbG9uZ2VyIGFueSBrbm93bGVkZ2Ugb3IKCQkJCQlhbnkgbWluZCB0byBkbyBpdC4gQnV0IG1vcmVvdmVyIGdvb2RuZXNzIGRvZXMgbm90IGNhdXNlIGl0IGVpdGhlcjsgZm9yCgkJCQkJd2lzZG9tIG1ha2VzIHVzZSBvZiBnb29kbmVzcywgc2luY2UgdGhlIGdvb2RuZXNzIG9mIHRoZSBydWxpbmcgcGFydAoJCQkJCXVzZXMgdGhhdCBvZiB0aGUgcnVsZWQuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS41IiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJV2hvIHRoZW4gaXMgdGhlcmUgaW4gd2hvbSB0aGlzIG9jY3Vycz8gb3IgaXMgaXQgaW4gdGhlIHNhbWUgd2F5IGFzIHRoZQoJCQkJCXZpY2Ugb2YgdGhlIGlycmF0aW9uYWwgcGFydCBvZiB0aGUgc3Bpcml0IGlzIHRlcm1lZCBsYWNrIG9mIGNvbnRyb2wsCgkJCQkJYW5kIHRoZSB1bmNvbnRyb2xsZWQgbWFuIGlzIGluIGEgbWFubmVyCgkJCQkJcHJvZmxpZ2F0ZeKAlHBvc3Nlc3NpbmcgcmVhc29uLCBidXQgdWx0aW1hdGVseSBpZiBoaXMgYXBwZXRpdGUKCQkJCQlpcyBwb3dlcmZ1bCBpdCB3aWxsIHR1cm4gaGltIHJvdW5kLCBhbmQgaGUgd2lsbCBkcmF3IHRoZSBvcHBvc2l0ZQoJCQkJCWluZmVyZW5jZT8gT3IgaXMgaXQgbWFuaWZlc3QgdGhhdCBhbHNvIGlmIHRoZXJlIGlzIGdvb2RuZXNzIGluIHRoZQoJCQkJCWlycmF0aW9uYWwgcGFydCBidXQgZm9sbHkgaW4gdGhlIHJlYXNvbiwgZ29vZG5lc3MgYW5kIGZvbGx5IGFyZQoJCQkJCXRyYW5zZm9ybWVkIGluIGFub3RoZXIgd2F5PyBzbyB0aGF0IGl0IHdpbGwgYmUgcG9zc2libGUgdG8gdXNlIGp1c3RpY2UKCQkJCQl1bmp1c3RseSBhbmQgYmFkbHksIGFuZCB3aXNkb20gdW53aXNlbHk7IGFuZCB0aGVyZWZvcmUgdGhlIG9wcG9zaXRlCgkJCQkJdXNlcyBhbHNvIHdpbGwgYmUgcG9zc2libGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPkZvciBpdCBpcyBzdHJhbmdlIGlmIHdoZXJlYXMgd2hlbiB3aWNrZWRuZXNzIGF0IGFueSB0aW1lIGFyaXNlcyBpbgoJCQkJCXRoZSBpcnJhdGlvbmFsIHBhcnQgaXQgd2lsbCBwZXJ2ZXJ0IHRoZSBnb29kbmVzcyBpbiB0aGUgcmF0aW9uYWwgYW5kCgkJCQkJY2F1c2UgaXQgdG8gYmUgaWdub3JhbnQsIHlldCBnb29kbmVzcyBpbiB0aGUgaXJyYXRpb25hbCBwYXJ0IHdoZW4KCQkJCQl0aGVyZSBpcyBmb2xseSBpbiB0aGUgcmF0aW9uYWwgc2hvdWxkIG5vdCBjb252ZXJ0IHRoZSBmb2xseSBhbmQgbWFrZQoJCQkJCWl0IGZvcm0gd2lzZSBhbmQgcHJvcGVyIGp1ZGdlbWVudHMsIGFuZCBhZ2FpbiB3aXNkb20gaW4gdGhlIHJhdGlvbmFsCgkJCQkJcGFydCBzaG91bGQgbm90IG1ha2UgcHJvZmxpZ2FjeSBpbiB0aGUgaXJyYXRpb25hbCBhY3QKCQkJCQl0ZW1wZXJhdGVseeKAlHdoaWNoIHNlZW1zIHRvIGJlIHdoYXQgc2VsZi1jb250cm9sIGVzc2VudGlhbGx5CgkJCQkJaXMuIFNvIHRoYXQgdGhlcmUgd2lsbCBhY3R1YWxseSBiZSB3aXNlIGFjdGlvbiBhcmlzaW5nIGZyb20gZm9sbHkuCgkJCQkJPC90cmFuc2xhdGlvbj4="
translation['8.1247a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMS42IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCB0aGVzZQoJCQkJCWNvbnNlcXVlbmNlcyBhcmUgYWJzdXJkLCBlc3BlY2lhbGx5IHRoYXQgb2YgdXNpbmcgd2lzZG9tIHdpc2VseSBhcyBhCgkJCQkJcmVzdWx0IG9mIGZvbGx5OyBmb3IgdGhhdCBpcyBhIHRoaW5nIHdoaWNoIHdlIGNlcnRhaW5seSBkbyBub3Qgc2VlIGluCgkJCQkJb3RoZXIgY2FzZXPigJRmb3IgaW5zdGFuY2UgcHJvZmxpZ2FjeSBwZXJ2ZXJ0cyBvbmUncyBtZWRpY2FsCgkJCQkJa25vd2xlZGdlIG9yIHNjaG9sYXJzaGlwLCBidXQgaXQgZG9lcyBub3QgcGVydmVydCBvbmUncyBpZ25vcmFuY2UgaWYKCQkJCQlpdCBiZSBvcHBvc2VkIHRvIGl0LCBiZWNhdXNlIGl0IGRvZXMgbm90IGNvbnRhaW4gc3VwZXJpb3JpdHksIGJ1dAoJCQkJCXJhdGhlciBpdCBpcyBnb29kbmVzcyBpbiBnZW5lcmFsIHRoYXQgc3RhbmRzIGluIHRoaXMgcmVsYXRpb24gdG8KCQkJCQliYWRuZXNzOyBmb3IgZXhhbXBsZSwgdGhlIGp1c3QgbWFuIGlzIGNhcGFibGUgb2YgYWxsIHRoYXQgdGhlIHVuanVzdAoJCQkJCW1hbiBpcywgYW5kIGluIGdlbmVyYWwgaW5hYmlsaXR5IGlzIGNvbnRhaW5lZCBpbiBhYmlsaXR5LiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjEuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBTbyB0aGF0IGl0IGlzIGNsZWFyIHRoYXQgbWVuCgkJCQkJYXJlIHdpc2UgYW5kIGdvb2Qgc2ltdWx0YW5lb3VzbHksIGFuZCB0aGF0IHRoZSBzdGF0ZXMgb2YgY2hhcmFjdGVyCgkJCQkJYWJvdmUgZGVzY3JpYmVkIGJlbG9uZyB0byBhIGRpZmZlcmVudCBwZXJzb24sIGFuZCB0aGUgU29jcmF0aWMgZGljdHVtCgkJCQkJJ05vdGhpbmcgaXMgbWlnaHRpZXIgdGhhbiB3aXNkb20sJyBpcyByaWdodC4gQnV0IGluIHRoYXQgYnkgJ3dpc2RvbScKCQkJCQloZSBtZWFudCAna25vd2xlZGdlLCcgaGUgd2FzIHdyb25nOyBmb3Igd2lzZG9tIGlzIGEgZm9ybSBvZiBnb29kbmVzcywKCQkJCQlhbmQgaXMgbm90IHNjaWVudGlmaWMga25vd2xlZGdlIGJ1dCBhbm90aGVyIGtpbmQgb2YKCQkJCQljb2duaXRpb24uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHdpc2RvbSBpcyBub3QgdGhlIG9ubHkgdGhpbmcgd2hpY2gKCQkJCQlhY3RpbmcgaW4gYWNjb3JkYW5jZSB3aXRoIGdvb2RuZXNzIGNhdXNlcyB3ZWxmYXJlLCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI0N2EiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['8.1247a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmJ1dCB3ZSBhbHNvIHNwZWFrIG9mIHRoZSBmb3J0dW5hdGUgYXMgZmFyaW5nIHdlbGwsIHdoaWNoCgkJCQkJaW1wbGllcyB0aGF0IGdvb2QgZm9ydHVuZSBhbHNvIGVuZ2VuZGVycyB3ZWxmYXJlIGluIHRoZSBzYW1lIHdheSBhcwoJCQkJCWtub3dsZWRnZSBkb2VzOyB3ZSBtdXN0IHRoZXJlZm9yZSBjb25zaWRlciB3aGV0aGVyIG9uZSBtYW4gaXMKCQkJCQlmb3J0dW5hdGUgYW5kIGFub3RoZXIgdW5mb3J0dW5hdGUgYnkgbmF0dXJlIG9yIG5vdCwgYW5kIGhvdyBpdCBzdGFuZHMKCQkJCQl3aXRoIHRoZXNlIG1hdHRlcnMuIDwvdHJhbnNsYXRpb24+"
translation['8.1247a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yIiB1bml0PSJMb2ViIGNoYXAiIC8+IEZvcgoJCQkJCXRoYXQgc29tZSBtZW4gYXJlIGZvcnR1bmF0ZSB3ZSBzZWUsIHNpbmNlIG1hbnkgdGhvdWdoIGZvb2xpc2ggc3VjY2VlZAoJCQkJCWluIHRoaW5ncyBpbiB3aGljaCBsdWNrIGlzIHBhcmFtb3VudCwgYW5kIHNvbWUgZXZlbiBpbiB0aGluZ3Mgd2hpY2gKCQkJCQlpbnZvbHZlIHNraWxsIGFsdGhvdWdoIGFsc28gY29udGFpbmluZyBhIGxhcmdlIGVsZW1lbnQgb2YKCQkJCQlsdWNr4oCUZm9yIGV4YW1wbGUgc3RyYXRlZ3kgYW5kIG5hdmlnYXRpb24uIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4zIiB1bml0PSJMb2ViIGNoYXAiIC8+IEFyZSwgdGhlbiwgdGhlc2UgbWVuIGZvcnR1bmF0ZQoJCQkJCWFzIGEgcmVzdWx0IG9mIGEgY2VydGFpbiBzdGF0ZSBvZiBjaGFyYWN0ZXIsIG9yIGFyZSB0aGV5IGVuYWJsZWQgdG8KCQkJCQlhY2hpZXZlIGZvcnR1bmF0ZSByZXN1bHRzIG5vdCBieSByZWFzb24gb2YgYSBjZXJ0YWluIHF1YWxpdHkgaW4KCQkJCQl0aGVtc2VsdmVzPyBBcyBpdCBpcywgcGVvcGxlIHRoaW5rIHRoZSBsYXR0ZXIsIGhvbGRpbmcgdGhhdCBzb21lIG1lbgoJCQkJCWFyZSBzdWNjZXNzZnVsIGJ5IG5hdHVyYWwgY2F1c2VzOyBidXQgbmF0dXJlIG1ha2VzIG1lbiBvZiBhIGNlcnRhaW4KCQkJCQlxdWFsaXR5LCBhbmQgdGhlIGZvcnR1bmF0ZSBhbmQgdW5mb3J0dW5hdGUgYXJlIGRpZmZlcmVudCBldmVuIGZyb20KCQkJCQliaXJ0aCwgaW4gdGhlIHNhbWUgd2F5IGFzIHNvbWUgbWVuIGFyZSBibHVlLWV5ZWQgYW5kIG90aGVycyBibGFjay1leWVkCgkJCQkJYmVjYXVzZSBhIHBhcnRpY3VsYXIgcGFydCBvZiB0aGVtIGlzIG9mIGEgcGFydGljdWxhciBxdWFsaXR5LgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi40IiB1bml0PSJMb2ViIGNoYXAiIC8+IEZvciBpdCBpcyBjbGVhcgoJCQkJCXRoYXQgdGhleSBkbyBub3Qgc3VjY2VlZCBieSBtZWFucyBvZiB3aXNkb20sIGJlY2F1c2Ugd2lzZG9tIGlzIG5vdAoJCQkJCWlycmF0aW9uYWwgYnV0IGNhbiBnaXZlIHJlYXNvbiB3aHkgaXQgYWN0cyBhcyBpdCBkb2VzLCB3aGVyZWFzIHRoZXkKCQkJCQljb3VsZCBub3Qgc2F5IHdoeSB0aGV5IHN1Y2NlZWTigJRmb3IgdGhhdCB3b3VsZCBiZSBzY2llbmNlOwoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi41IiB1bml0PSJMb2ViIGNoYXAiIC8+IGFuZCBtb3Jlb3ZlciBpdCBpcwoJCQkJCW1hbmlmZXN0IHRoYXQgdGhleSBzdWNjZWVkIGluIHNwaXRlIG9mIGJlaW5nIHVud2lzZeKAlG5vdAoJCQkJCXVud2lzZSBhYm91dCBvdGhlciBtYXR0ZXJzIChmb3IgdGhhdCB3b3VsZCBub3QgYmUgYW55dGhpbmcgc3RyYW5nZSwKCQkJCQlmb3IgZXhhbXBsZSBIaXBwb2NyYXRlczxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5BCgkJCQkJCVB5dGhhZ29yZWFuIHBoaWxvc29waGVyIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQ2hpb3MgQ2l0eSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQ2hpb3MgQ2l0eSI+Q2hpb3M8L3BsYWNlTmFtZT4sIGZsLiA8ZGF0ZSBhdXRobmFtZT0iLTQ2MCIgY2xhc3M9InRyYW5zbGF0aW9uIiB2YWx1ZT0iLTQ2MCI+NDYwPC9kYXRlPgoJCQkJCQlCLkMuPC9ub3RlPiB3YXMgc2tpbGxlZCBpbiBnZW9tZXRyeSBidXQgd2FzIHRob3VnaHQgdG8gYmUgc3R1cGlkIGFuZAoJCQkJCXVud2lzZSBpbiBvdGhlciBtYXR0ZXJzLCBhbmQgaXQgaXMgc2FpZCB0aGF0IG9uIGEgdm95YWdlIG93aW5nIHRvCgkJCQkJZm9vbGlzaG5lc3MgaGUgbG9zdCBhIGdyZWF0IGRlYWwgb2YgbW9uZXksPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxDaGlvcyBDaXR5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxDaGlvcyBDaXR5Ij5DaGlvczwvcGxhY2VOYW1lPiwgZmwuIDxkYXRlIGF1dGhuYW1lPSItNDYwIiBjbGFzcz0idHJhbnNsYXRpb24iIHZhbHVlPSItNDYwIj40NjA8L2RhdGU+CgkJCQkJCUIuQy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+dGFrZW4gZnJvbSBoaW0gYnkgdGhlIGNvbGxlY3RvcnMgb2YgdGhlCgkJCQkJdHdvLXBlci1jZW50IGR1dHkgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDI0NzMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjQ3MyI+Qnl6YW50aXVtPC9wbGFjZU5hbWU+KSwgYnV0IGV2ZW4gdGhvdWdoIHRoZXkgYXJlIHVud2lzZSBhYm91dCB0aGUKCQkJCQltYXR0ZXJzIGluIHdoaWNoIHRoZXkgYXJlIGZvcnR1bmF0ZS4gPC90cmFuc2xhdGlvbj4="
translation['8.1247b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi42IiB1bml0PSJMb2ViIGNoYXAiIC8+IEZvciBpbiBuYXZpZ2F0aW9uIGl0IGlzIG5vdCB0aGUgY2xldmVyZXN0IHdobwoJCQkJCWFyZSBmb3J0dW5hdGUsIGJ1dCAoanVzdCBhcyBpbiB0aHJvd2luZyBkaWNlIG9uZSBtYW4gdGhyb3dzIGEgYmxhbmsKCQkJCQlhbmQgYW5vdGhlciBhIHNpeCkgYSBtYW4gaXMgZm9ydHVuYXRlIGFjY29yZGluZyBhcyB0aGluZ3Mgd2VyZQoJCQkJCWFycmFuZ2VkIGJ5IG5hdHVyZS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IsIHdpdGgKCQkJCQkJSmFja3NvbidzCgkJCQkJCWVtZW5kYXRpb25zLCAnYW5vdGhlciBhIHNpeCBhY2NvcmRpbmcgYXMgbmF0dXJlIGRldGVybWluZXMsIHNvCgkJCQkJCWhlcmUgYSBtYW4gaXMgbHVja3kgYmVjYXVzZSBoaXMgbmF0dXJlIGlzIHN1Y2guJzwvbm90ZT4gT3IgaXMgaXQKCQkJCQliZWNhdXNlIGhlIGlzIGxvdmVkIGJ5IEdvZCwgYXMgdGhlIHBocmFzZSBnb2VzLCBhbmQgYmVjYXVzZSBzdWNjZXNzIGlzCgkJCQkJc29tZXRoaW5nIGZyb20gb3V0c2lkZT8gYXMgZm9yIGluc3RhbmNlIGEgYmFkbHkgYnVpbHQgc2hpcCBvZnRlbiBnZXRzCgkJCQkJdGhyb3VnaCBhIHZveWFnZSBiZXR0ZXIsIHRob3VnaCBub3Qgb3dpbmcgdG8gaXRzZWxmLCBidXQgYmVjYXVzZSBpdAoJCQkJCWhhcyBhIGdvb2QgbWFuIGF0IHRoZSBoZWxtLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgb24gdGhpcyBzaG93aW5nIHRoZSBmb3J0dW5hdGUgbWFuIGhhcyB0aGUgZGVpdHkgYXMgc3RlZXJzbWFuLgoJCQkJCUJ1dCBpdCBpcyBzdHJhbmdlIHRoYXQgYSBnb2Qgb3IgZGVpdHkgc2hvdWxkIGxvdmUgYSBtYW4gb2YgdGhpcyBzb3J0LAoJCQkJCWFuZCBub3QgdGhlIGJlc3QgYW5kIG1vc3QgcHJ1ZGVudC4gSWYsIHRoZW4sIHRoZSBzdWNjZXNzIG9mIHRoZSBsdWNreQoJCQkJCW11c3QgbmVjZXNzYXJpbHkgYmUgZHVlIHRvIGVpdGhlciBuYXR1cmUgb3IgaW50ZWxsZWN0IG9yIHNvbWUKCQkJCQlndWFyZGlhbnNoaXAsIGFuZCBvZiB0aGVzZSB0aHJlZSBjYXVzZXMgdHdvIGFyZSBydWxlZCBvdXQsIHRob3NlIHdobwoJCQkJCWFyZSBmb3J0dW5hdGUgd2lsbCBiZSBzbyBieSBuYXR1cmUuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi44IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCBhZ2FpbiwgbmF0dXJlIG9mIGNvdXJzZSBpcyB0aGUgY2F1c2Ugb2YgYSB0aGluZwoJCQkJCXRoYXQgaGFwcGVucyBlaXRoZXIgYWx3YXlzIG9yIGdlbmVyYWxseSBpbiB0aGUgc2FtZSB3YXksIHdoZXJlYXMKCQkJCQlmb3J0dW5lIGlzIHRoZSBvcHBvc2l0ZS4gSWYsIHRoZW4sIHVuZXhwZWN0ZWQgYWNoaWV2ZW1lbnQgc2VlbXMgYQoJCQkJCW1hdHRlciBvZiBmb3J0dW5lLCBidXQsIGlmIGEgbWFuIGlzIGZvcnR1bmF0ZSBvd2luZyB0byBmb3J0dW5lLCBpdAoJCQkJCXdvdWxkIHNlZW0gdGhhdCB0aGUgY2F1c2UgaXMgbm90IG9mIHN1Y2ggYSBzb3J0IGFzIHRvIHByb2R1Y2UgdGhlIHNhbWUKCQkJCQlyZXN1bHQgYWx3YXlzIG9yIGdlbmVyYWxseeKAlDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi45IiB1bml0PSJMb2ViIGNoYXAiIC8+IGZ1cnRoZXIsIGlmIGEgbWFuJ3Mgc3VjY2VlZGluZyBvciBub3QKCQkJCQlzdWNjZWVkaW5nIGlzIGR1ZSB0byBoaXMgYmVpbmcgb2YgYSBjZXJ0YWluIHNvcnQsIGFzIGEgbWFuIGRvZXMgbm90CgkJCQkJc2VlIGNsZWFybHkgYmVjYXVzZSBoZSBoYXMgYmx1ZSBleWVzLCBub3QgZm9ydHVuZSBidXQgbmF0dXJlIGlzIHRoZQoJCQkJCWNhdXNlOyB0aGVyZWZvcmUgaGUgaXMgbm90IGEgbWFuIHdobyBoYXMgZ29vZCBmb3J0dW5lIGJ1dCBvbmUgd2hvIGhhcwoJCQkJCWFzIGl0IHdlcmUgYSBnb29kIG5hdHVyZS4gSGVuY2Ugd2Ugc2hvdWxkIGhhdmUgdG8gc2F5IHRoYXQgdGhlIHBlb3BsZQoJCQkJCXdlIGNhbGwgZm9ydHVuYXRlIGFyZSBzbyBub3QgYnkgcmVhc29uIG9mIGZvcnR1bmU7IHRoZXJlZm9yZSB0aGV5IGFyZQoJCQkJCW5vdCBmb3J0dW5hdGUsIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjQ3YiIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['8.1247b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmZvciB0aGUgZm9ydHVuYXRlIGFyZSB0aG9zZSBmb3IKCQkJCQl3aG9tIGdvb2QgZm9ydHVuZSBpcyBhIGNhdXNlIG9mIGdvb2QgdGhpbmdzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgaWYgc28sIHNoYWxsIHdlIHNheSB0aGF0IHRoZXJlIGlzIG5vIHN1Y2ggdGhpbmcgYXMKCQkJCQlmb3J0dW5lIGF0IGFsbCwgb3IgdGhhdCBpdCBkb2VzIGV4aXN0IGJ1dCBpcyBub3QgYSBjYXVzZT8gTm8sIGl0IG11c3QKCQkJCQlib3RoIGV4aXN0IGFuZCBiZSBhIGNhdXNlLiA8L3RyYW5zbGF0aW9uPg=="
translation['8.1247b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBDb25zZXF1ZW50bHkgaXQgd2lsbCBmdXJ0aGVybW9yZSBiZSBhIGNhdXNlIG9mIGdvb2RzIG9yIGV2aWxzIHRvCgkJCQkJY2VydGFpbiBwZXJzb25zOyB3aGVyZWFzIGlmIGZvcnR1bmUgaXMgdG8gYmUgZWxpbWluYXRlZCBhbHRvZ2V0aGVyLAoJCQkJCXRoZW4gbm90aGluZyBtdXN0IGJlIHNhaWQgdG8gY29tZSBhYm91dCBmcm9tIGZvcnR1bmUsIGluIHNwaXRlIG9mIHRoZQoJCQkJCWZhY3QgdGhhdCwgYWx0aG91Z2ggdGhlcmUgaXMgYW5vdGhlciBjYXVzZSwgYmVjYXVzZSB3ZSBkbyBub3Qgc2VlIGl0CgkJCQkJd2Ugc2F5IHRoYXQgZm9ydHVuZSBpcyBhIGNhdXNl4oCUb3dpbmcgdG8gd2hpY2ggcGVvcGxlIGdpdmUgaXQKCQkJCQlhcyBhIGRlZmluaXRpb24gb2YgZm9ydHVuZSB0aGF0IGl0IGlzIGEgY2F1c2UgaW5jYWxjdWxhYmxlIHRvIGh1bWFuCgkJCQkJcmVhc29uaW5nLCBpbXBseWluZyB0aGF0IGl0IGlzIGEgcmVhbCBuYXR1cmFsIHByaW5jaXBsZS4gVGhpcywgdGhlbiwKCQkJCQl3b3VsZCBiZSBhIG1hdHRlciBmb3IgYW5vdGhlciBpbnF1aXJ5LiBCdXQgc2luY2Ugd2Ugc2VlIHRoYXQgc29tZQoJCQkJCXBlb3BsZSBoYXZlIGdvb2QgZm9ydHVuZSBvbiBvbmUgb2NjYXNpb24sIHdoeSBzaG91bGQgdGhleSBub3Qgc3VjY2VlZAoJCQkJCWEgc2Vjb25kIHRpbWUgdG9vIG93aW5nIHRvIHRoZSBzYW1lIGNhdXNlPyBhbmQgYSB0aGlyZCB0aW1lPyBhbmQgYQoJCQkJCWZvdXJ0aD8gZm9yIHRoZSBzYW1lIGNhdXNlIHByb2R1Y2VzIHRoZSBzYW1lIGVmZmVjdC4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjExIiB1bml0PSJMb2ViIGNoYXAiIC8+IFRoZXJlZm9yZSB0aGlzIHdpbGwgbm90IGJlIGEKCQkJCQltYXR0ZXIgb2YgZm9ydHVuZTsgYnV0IHdoZW4gdGhlIHNhbWUgcmVzdWx0IGZvbGxvd3MgZnJvbSBpbmRldGVybWluYXRlCgkJCQkJYW5kIGluIGRlZmluaXRlIGFudGVjZWRlbnRzLCBpdCB3aWxsIGJlIGdvb2Qgb3IgYmFkIGZvciBzb21lYm9keSwgYnV0CgkJCQkJdGhlcmUgd2lsbCBub3QgYmUgdGhlIGtub3dsZWRnZSBvZiBpdCB0aGF0IGNvbWVzIGJ5IGV4cGVyaWVuY2UsIHNpbmNlLAoJCQkJCWlmIHRoZXJlIHdlcmUsIHNvbWUgZm9ydHVuYXRlIHBlcnNvbnMgd291bGQgbGVhcm4gaXQsIG9yIGluZGVlZCBhbGwKCQkJCQlicmFuY2hlcyBvZiBrbm93bGVkZ2Ugd291bGQsIGFzIFNvY3JhdGVzIHNhaWQsPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IlBsYXQuIEV1dGh5ZC4gMjc5ZCIgdmFsaWQ9InllcyI+UGxhdC4gRXV0aHlkLiAyNzlkPC9iaWJsPi48L25vdGU+IGJlCgkJCQkJZm9ybXMgb2YgZ29vZCBmb3J0dW5lLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJQbGF0LiBFdXRoeWQuIDI3OWQiIHZhbGlkPSJ5ZXMiPlBsYXQuIEV1dGh5ZC4gMjc5ZDwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjEyIiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJV2hhdCwgdGhlbiwgcHJldmVudHMgc3VjaCB0aGluZ3MgZnJvbSBoYXBwZW5pbmcgdG8gc29tZWJvZHkgYSBudW1iZXIKCQkJCQlvZiB0aW1lcyBydW5uaW5nIG5vdCBiZWNhdXNlIGhlIGhhcyBhIGNlcnRhaW4gY2hhcmFjdGVyLCBidXQgaW4gdGhlCgkJCQkJd2F5IGluIHdoaWNoIGZvciBpbnN0YW5jZSBpdCB3b3VsZCBiZSBwb3NzaWJsZSB0byBtYWtlIHRoZSBoaWdoZXN0CgkJCQkJdGhyb3cgYXQgZGljZSBldmVyeSB0aW1lPyBBbmQgd2hhdCB0aGVuPyBhcmUgdGhlcmUgbm90IHNvbWUgaW1wdWxzZXMKCQkJCQlpbiB0aGUgc3Bpcml0IHRoYXQgYXJpc2UgZnJvbSByZWFzb25pbmcgYW5kIG90aGVycyBmcm9tIGlycmF0aW9uYWwKCQkJCQlhcHBldGl0aW9uPyBhbmQgYXJlIG5vdCB0aGUgbGF0dGVyIHByaW9yPzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5iZWNhdXNlIGlmIHRoZSBpbXB1bHNlIGNhdXNlZCBieSBkZXNpcmUgZm9yCgkJCQkJd2hhdCBpcyBwbGVhc2FudCBleGlzdHMgYnkgbmF0dXJlLCBhcHBldGl0aW9uIGFsc28gd291bGQgbWVyZWx5IGJ5CgkJCQkJbmF0dXJlIHByb2NlZWQgdG93YXJkcyB3aGF0IGlzIGdvb2QgaW4gZXZlcnkgY2FzZS4gPC90cmFuc2xhdGlvbj4="
translation['8.1248a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBJZiwgdGhlcmVmb3JlLCBzb21lIG1lbiBoYXZlCgkJCQkJZ29vZCBuYXR1cmVz4oCUanVzdCBhcyBtdXNpY2FsIHBlb3BsZSB0aG91Z2ggdGhleSBoYXZlIG5vdAoJCQkJCWxlYXJudCB0byBzaW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPk9yLCB3aXRoCgkJCQkJCUphY2tzb24ncyBhZGRpdGlvbnMsICdqdXN0CgkJCQkJCWFzIHVudGF1Z2h0IG11c2ljYWwgZ2VuaXVzZXMsIHdpdGhvdXQgcHJvZmVzc2lvbmFsIGtub3dsZWRnZSBvZgoJCQkJCQlzaW5naW5nLic8L25vdGU+IGhhdmUgYSBuYXR1cmFsIGFwdGl0dWRlIGZvciBpdOKAlGFuZAoJCQkJCXdpdGhvdXQgdGhlIGFpZCBvZiByZWFzb24gaGF2ZSBhbiBpbXB1bHNlIGluIHRoZSBkaXJlY3Rpb24gb2YgdGhlCgkJCQkJbmF0dXJhbCBvcmRlciBvZiB0aGluZ3MgYW5kIGRlc2lyZSB0aGUgcmlnaHQgdGhpbmcgaW4gdGhlIHJpZ2h0IHdheSBhdAoJCQkJCXRoZSByaWdodCB0aW1lLCB0aGVzZSBtZW4gd2lsbCBzdWNjZWVkIGV2ZW4gYWx0aG91Z2ggdGhleSBhcmUgaW4gZmFjdAoJCQkJCWZvb2xpc2ggYW5kIGlycmF0aW9uYWwsIGp1c3QgYXMgdGhlIG90aGVycyB3aWxsIHNpbmcgd2VsbCBhbHRob3VnaAoJCQkJCXVuYWJsZSB0byB0ZWFjaCBzaW5naW5nLiBBbmQgbWVuIG9mIHRoaXMgc29ydCBvYnZpb3VzbHkgYXJlCgkJCQkJZm9ydHVuYXRl4oCUbWVuIHdobyB3aXRob3V0IHRoZSBhaWQgb2YgcmVhc29uIGFyZSB1c3VhbGx5CgkJCQkJc3VjY2Vzc2Z1bC4gSGVuY2UgaXQgd2lsbCBmb2xsb3cgdGhhdCB0aGUgZm9ydHVuYXRlIGFyZSBzbyBieQoJCQkJCW5hdHVyZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+T3IgaGFzIHRoZSB0ZXJtICdnb29kIGZvcnR1bmUnIG1vcmUgdGhhbiBvbmUKCQkJCQltZWFuaW5nPyBGb3Igc29tZSB0aGluZ3MgYXJlIGRvbmUgZnJvbSBpbXB1bHNlIGFuZCBhcyBhIHJlc3VsdCBvZiB0aGUKCQkJCQlhZ2VudHMnIHB1cnBvc2l2ZSBjaG9pY2UsIG90aGVyIHRoaW5ncyBub3Qgc28gYnV0IG9uIHRoZSBjb250cmFyeTsgYW5kCgkJCQkJaWYgaW4gdGhlIGZvcm1lciBjYXNlcyB3aGVuIHRoZSBhZ2VudHMgc3VjY2VlZCB0aGV5IHNlZW0gdG8gaGF2ZQoJCQkJCXJlYXNvbmVkIGJhZGx5LCB3ZSBzYXkgdGhhdCBpbiBmYWN0IHRoZXkgaGF2ZSBoYWQgZ29vZCBmb3J0dW5lOyBhbmQKCQkJCQlhZ2FpbiBpbiB0aGUgbGF0dGVyIGNhc2VzLCBpZiB0aGV5IHdpc2hlZCBmb3IgYSBkaWZmZXJlbnQgZ29vZCBvciBsZXNzCgkJCQkJZ29vZCB0aGFuIHRoZXkgaGF2ZSBnb3QuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPgoJCQkJCVRoZSBmb3JtZXIgcGVyc29ucyB0aGVuIG1heSBwb3NzaWJseSBvd2UgdGhlaXIgZ29vZCBmb3J0dW5lIHRvIG5hdHVyZSwKCQkJCQlmb3IgdGhlaXIgaW1wdWxzZSBhbmQgYXBwZXRpdGlvbiwgYmVpbmcgZm9yIHRoZSByaWdodCBvYmplY3QsCgkJCQkJc3VjY2VlZGVkLCBidXQgdGhlaXIgcmVhc29uaW5nIHdhcyBmb29saXNoOyBhbmQgaW4gdGhlaXIgY2FzZSwgd2hlbiBpdAoJCQkJCWhhcHBlbnMgdGhhdCB0aGVpciByZWFzb25pbmcgc2VlbXMgdG8gYmUgaW5jb3JyZWN0IGJ1dCB0aGF0IGltcHVsc2UgaXMKCQkJCQl0aGUgY2F1c2Ugb2YgaXQsIHRoaXMgaW1wdWxzZSBiZWluZyByaWdodCBoYXMgc2F2ZWQgdGhlbTsgYWx0aG91Z2gKCQkJCQlzb21ldGltZXMgb24gdGhlIGNvbnRyYXJ5IG93aW5nIHRvIGFwcGV0aXRlIHRoZXkgaGF2ZSByZWFzb25lZCBpbiB0aGlzCgkJCQkJd2F5IGFuZCBjb21lIHRvIG1pc2ZvcnR1bmUuIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgaW4gdGhlIGNhc2Ugb2YgdGhlIG90aGVycyw8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+Q2YuIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIEV1ZC4gRXRoLiA4LjEyNDdiLjMwIiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTI0N2IKCQkJCQkJMzA8L2JpYmw+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+z4ThvbAgzrTigJkKCQkJCQkJCc6/4b2UPC9mb3JlaWduPu+8iAoJCQkJCQlTb2xvbW9uKS48L25vdGU+IHRoZW4sIGhvdyB3aWxsIGdvb2QgZm9ydHVuZSBiZSBkdWUKCQkJCQl0byBuYXR1cmFsIGdvb2RuZXNzIG9mIGFwcGV0aXRpb24gYW5kIGRlc2lyZT8gPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gRXVkLiBFdGguIDguMTI0N2IuMzAiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIEV1ZC4gRXRoLiAxMjQ3YgoJCQkJCQkzMDwvYmlibD48Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7PhOG9sCDOtOKAmQoJCQkJCQkJzr/hvZQ8L2ZvcmVpZ24+77yICgkJCQkJCVNvbG9tb24pLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMjQ4YSIgdW5pdD0ic2VjdGlvbiIgLz48L3RyYW5zbGF0aW9uPg=="
translation['8.1248a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPlRoZSBmYWN0IGlzIHRoYXQgdGhlIGdvb2QgZm9ydHVuZSBoZXJlIGFuZCB0aGF0IGluIHRoZQoJCQkJCW90aGVyIGNhc2UgYXJlIHRoZSBzYW1lLiBPciBpcyBnb29kIGZvcnR1bmUgb2YgbW9yZSB0aGFuIG9uZSBraW5kLCBhbmQKCQkJCQlpcyBmb3J0dW5lIHR3b2ZvbGQ/IDwvdHJhbnNsYXRpb24+"
translation['8.1248a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xNyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQKCQkJCQlzaW5jZSB3ZSBzZWUgc29tZSBwZW9wbGUgYmVpbmcgZm9ydHVuYXRlIGNvbnRyYXJ5IHRvIGFsbCB0aGUgdGVhY2hpbmdzCgkJCQkJb2Ygc2NpZW5jZSBhbmQgY29ycmVjdCBjYWxjdWxhdGlvbiwgaXQgaXMgY2xlYXIgdGhhdCB0aGUgY2F1c2Ugb2YgZ29vZAoJCQkJCWZvcnR1bmUgbXVzdCBiZSBzb21ldGhpbmcgZGlmZmVyZW50LiBCdXQgaXMgaXQgb3IgaXMgaXQgbm90IGdvb2QKCQkJCQlmb3J0dW5lIHdoZXJlYnkgYSBtYW4gZm9ybWVkIGEgZGVzaXJlIGZvciB0aGUgcmlnaHQgdGhpbmcgYW5kIGF0IHRoZQoJCQkJCXJpZ2h0IHRpbWUgd2hlbiBpbiBoaXMgY2FzZSBodW1hbiByZWFzb25pbmcgY291bGQgbm90IG1ha2UgdGhpcwoJCQkJCWNhbGN1bGF0aW9uPyBGb3IgYSB0aGluZyB0aGUgZGVzaXJlIGZvciB3aGljaCBpcyBuYXR1cmFsIGlzIG5vdAoJCQkJCWFsdG9nZXRoZXIgdW5jYWxjdWxhdGVkLCBidXQgdGhlIHJlYXNvbmluZyBpcyBwZXJ2ZXJ0ZWQgYnkgc29tZXRoaW5nLgoJCQkJCTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4xOCIgdW5pdD0iTG9lYiBjaGFwIiAvPiBTbyBubyBkb3VidCBoZQoJCQkJCXNlZW1zIGZvcnR1bmF0ZSwgYmVjYXVzZSBmb3J0dW5lIGlzIHRoZSBjYXVzZSBvZiB0aGluZ3MgY29udHJhcnkgdG8KCQkJCQlyZWFzb24sIGFuZCB0aGlzIGlzIGNvbnRyYXJ5IHRvIHJlYXNvbiwgZm9yIGl0IGlzIGNvbnRyYXJ5IHRvCgkJCQkJa25vd2xlZGdlIGFuZCB0byBnZW5lcmFsIHByaW5jaXBsZS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjE5IiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCBwcm9iYWJseSBpdCBkb2VzIG5vdCByZWFsbHkgY29tZSBmcm9tIGZvcnR1bmUsCgkJCQkJYnV0IHNlZW1zIHRvIGRvIHNvIGZyb20gdGhlIGFib3ZlIGNhdXNlLiBTbyB0aGF0IHRoaXMgYXJndW1lbnQgZG9lcwoJCQkJCW5vdCBwcm92ZSB0aGF0IGdvb2QgZm9ydHVuZSBjb21lcyBieSBuYXR1cmUsIGJ1dCB0aGF0IG5vdCBhbGwgdGhvc2UKCQkJCQl3aG8gc2VlbSBmb3J0dW5hdGUgc3VjY2VlZCBiZWNhdXNlIG9mIGZvcnR1bmUsIGJ1dCBiZWNhdXNlIG9mIG5hdHVyZTsKCQkJCQlub3IgZG9lcyBpdCBwcm92ZSB0aGF0IHRoZXJlIGlzIG5vIHN1Y2ggdGhpbmcgYXMgZm9ydHVuZSwgbm9yIHRoYXQKCQkJCQlmb3J0dW5lIGlzIG5vdCB0aGUgY2F1c2Ugb2YgYW55dGhpbmcsIGJ1dCB0aGF0IGl0IGlzIG5vdCB0aGUgY2F1c2Ugb2YKCQkJCQlhbGwgdGhlIHRoaW5ncyBvZiB3aGljaCBpdCBzZWVtcyB0byBiZSB0aGUgY2F1c2UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjIwIiB1bml0PSJMb2ViIGNoYXAiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPllldCBzb21lb25lIG1heSByYWlzZSB0aGUgcXVlc3Rpb24gd2hldGhlciBmb3J0dW5lIGlzIHRoZSBjYXVzZSBvZgoJCQkJCXByZWNpc2VseSB0aGlz4oCUZm9ybWluZyBhIGRlc2lyZSBmb3IgdGhlIHJpZ2h0IHRoaW5nIGF0IHRoZQoJCQkJCXJpZ2h0IHRpbWUuIE9yLCBvbiB0aGF0IHNob3dpbmcsIHdpbGwgbm90IGZvcnR1bmUgYmUgdGhlIGNhdXNlIG9mCgkJCQkJZXZlcnl0aGluZ+KAlGV2ZW4gb2YgdGhvdWdodCBhbmQgZGVsaWJlcmF0aW9uPyBzaW5jZSBpdCBpcyBub3QKCQkJCQl0aGUgY2FzZSwgdGhhdCBvbmUgb25seSBkZWxpYmVyYXRlcyB3aGVuIG9uZSBoYXMgZGVsaWJlcmF0ZWQgZXZlbgoJCQkJCXByZXZpb3VzbHkgdG8gdGhhdCBkZWxpYmVyYXRpb24sPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJCZWtrZXIiIG49IjIwIiB1bml0PSJsaW5lIiAvPm5vciBkb2VzIG9uZSBvbmx5IHRoaW5rIHdoZW4gb25lIGhhcyBwcmV2aW91c2x5IHRob3VnaHQKCQkJCQliZWZvcmUgdGhpbmtpbmcsIGFuZCBzbyBvbiB0byBpbmZpbml0eSwgYnV0IHRoZXJlIGlzIHNvbWUKCQkJCQlzdGFydGluZy1wb2ludDsgdGhlcmVmb3JlIHRob3VnaHQgaXMgbm90IHRoZSBzdGFydGluZy1wb2ludCBvZgoJCQkJCXRoaW5raW5nLCBub3IgZGVsaWJlcmF0aW9uIG9mIGRlbGliZXJhdGluZy4gVGhlbiB3aGF0IGVsc2UgaXMsIHNhdmUKCQkJCQlmb3J0dW5lPyBJdCB3aWxsIGZvbGxvdyB0aGF0IGV2ZXJ5dGhpbmcgb3JpZ2luYXRlcyBmcm9tIGZvcnR1bmUuIE9yCgkJCQkJc2hhbGwgd2Ugc2F5IHRoYXQgdGhlcmUgaXMgYSBjZXJ0YWluIHN0YXJ0aW5nLXBvaW50IG91dHNpZGUgd2hpY2gKCQkJCQl0aGVyZSBpcyBubyBvdGhlciwgYW5kIHRoYXQgdGhpcywgbWVyZWx5IG93aW5nIHRvIGl0cyBiZWluZyBvZiBzdWNoCgkJCQkJYW5kIHN1Y2ggYSBuYXR1cmUsIGNhbiBwcm9kdWNlIGEgcmVzdWx0IG9mIHN1Y2ggYW5kIHN1Y2ggYSBuYXR1cmU/CgkJCQkJPC90cmFuc2xhdGlvbj4="
translation['8.1248b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yMSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBCdXQgdGhpcyBpcyB3aGF0CgkJCQkJd2UgYXJlIGludmVzdGlnYXRpbmfigJR3aGF0IGlzIHRoZSBzdGFydGluZy1wb2ludCBvZiBtb3Rpb24gaW4KCQkJCQl0aGUgc3Bpcml0PyBUaGUgYW5zd2VyIHRoZW4gaXMgY2xlYXI6IGFzIGluIHRoZSB1bml2ZXJzZSwgc28gdGhlcmUsCgkJCQkJZXZlcnl0aGluZyBpcyBtb3ZlZCBieSBHb2Q7IGZvciBpbiBhIG1hbm5lciB0aGUgZGl2aW5lIGVsZW1lbnQgaW4gdXMKCQkJCQlpcyB0aGUgY2F1c2Ugb2YgYWxsIG91ciBtb3Rpb25zLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjIuMjIiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQW5kIHRoZSBzdGFydGluZy1wb2ludCBvZiByZWFzb24gaXMgbm90IHJlYXNvbiBidXQKCQkJCQlzb21ldGhpbmcgc3VwZXJpb3IgdG8gcmVhc29uLiBXaGF0LCB0aGVuLCBjb3VsZCBiZSBzdXBlcmlvciBldmVuIHRvCgkJCQkJa25vd2xlZGdlIGFuZCB0byBpbnRlbGxlY3QsIGV4Y2VwdCBHb2Q/IE5vdCBnb29kbmVzcywgZm9yIGdvb2RuZXNzIGlzCgkJCQkJYW4gaW5zdHJ1bWVudCBvZiB0aGUgbWluZDsgYW5kIG93aW5nIHRvIHRoaXMsIGFzIEkgd2FzIHNheWluZyBzb21lCgkJCQkJdGltZSBhZ28sPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPlNlZSA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiAgICAgICBFdWQuIEV0aC4gOC4xMjQ3Yi4yNiIgdmFsaWQ9InllcyI+QXJpc3RvdC4KCQkJCQkJRXVkLiBFdGguIDEyNDdiIDI2PC9iaWJsPi48L25vdGU+IHRob3NlIGFyZSBjYWxsZWQKCQkJCQlmb3J0dW5hdGUgd2hvIGFsdGhvdWdoIGlycmF0aW9uYWwgc3VjY2VlZCBpbiB3aGF0ZXZlciB0aGV5IHN0YXJ0IG9uLgoJCQkJCUFuZCBpdCBkb2VzIG5vdCBwYXkgdGhlbSB0byBkZWxpYmVyYXRlLCBmb3IgdGhleSBoYXZlIHdpdGhpbiB0aGVtIGEKCQkJCQlwcmluY2lwbGUgb2YgYSBraW5kIHRoYXQgaXMgYmV0dGVyIHRoYW4gbWluZCBhbmQgZGVsaWJlcmF0aW9uCgkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gICAgICAgRXVkLiBFdGguIDguMTI0N2IuMjYiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuCgkJCQkJCUV1ZC4gRXRoLiAxMjQ3YiAyNjwvYmlibD4uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIyLjIzIiB1bml0PSJMb2ViIGNoYXAiIC8+ICh3aGVyZWFzIHRoZQoJCQkJCW90aGVycyBoYXZlIHJlYXNvbiBidXQgaGF2ZSBub3QgdGhpcyk6IHRoZXkgaGF2ZSBpbnNwaXJhdGlvbiwgYnV0IHRoZXkKCQkJCQljYW5ub3QgZGVsaWJlcmF0ZS4gRm9yIGFsdGhvdWdoIGlycmF0aW9uYWwgdGhleSBhdHRhaW4gZXZlbiB3aGF0CgkJCQkJYmVsb25ncyB0byB0aGUgcHJ1ZGVudCBhbmQgd2lzZeKAlHN3aWZ0bmVzcyBvZiBkaXZpbmF0aW9uOgoJCQkJCW9ubHkgdGhlIGRpdmluYXRpb24gdGhhdCBpcyBiYXNlZCBvbiByZWFzb24gd2UgbXVzdCBub3Qgc3BlY2lmeSwgYnV0CgkJCQkJc29tZSBvZiB0aGVtIGF0dGFpbiBpdCBieSBleHBlcmllbmNlIGFuZCBvdGhlcnMgYnkgcHJhY3RpY2UgaW4gdGhlIHVzZQoJCQkJCW9mIG9ic2VydmF0aW9uOyBhbmQgdGhlc2UgbWVuIHVzZSB0aGUgZGl2aW5lLjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5UaGUgTXMuIHJlYWRpbmcgZ2l2ZXMgJ2FuZCBleHBlcmllbmNlIGFuZCBoYWJpdAoJCQkJCQl1c2UgR29kLic8L25vdGU+IEZvciB0aGlzIHF1YWxpdHkgZGlzY2VybnMgYXJpZ2h0IHRoZSBmdXR1cmUgYXMKCQkJCQl3ZWxsIGFzIHRoZSBwcmVzZW50LCBhbmQgdGhlc2UgYXJlIHRoZSBtZW4gd2hvc2UgcmVhc29uIGlzCgkJCQkJZGlzZW5nYWdlZC48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+T3IsIHdpdGgKCQkJCQkJSmFja3NvbidzIHRleHQsCgkJCQkJCSdCdXQgc29tZSBvZiB0aGVtIGJ5IGV4cGVyaWVuY2UgYW5kIG90aGVycyBieSBoYWJpdHVhdGlvbiBoYXZlCgkJCQkJCXRoaXMgY2FwYWNpdHkgb2YgY29uc3VsdGluZyBHb2QgaW4gZXhhbWluaW5nIHRoaW5ncywgYW5kIG9mCgkJCQkJCWRpc2Nlcm5pbmcgYXJpZ2h0IGJvdGggdGhlIGZ1dHVyZSBhbmQgdGhlIHByZXNlbnQ7IGFuZCB0aG9zZQoJCQkJCQlhbHNvIGhhdmUgaXQgd2hvc2UgcmVhc29uIGlzIGRpc2VuZ2FnZWQgaW4gdGhlIG1hbm5lcgoJCQkJCQlkZXNjcmliZWQuJzwvbm90ZT4gVGhpcyBpcyB3aHkgdGhlIG1lbGFuY2hvbGljIGV2ZW4gaGF2ZSBkcmVhbXMKCQkJCQl0aGF0IGFyZSB0cnVlOyBmb3IgaXQgc2VlbXMgdGhhdCB3aGVuIHRoZSByZWFzb24gaXMgZGlzZW5nYWdlZAoJCQkJCXByaW5jaXBsZSBoYXMgbW9yZSBzdHJlbmd0aOKAlCA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTI0OGIiIHVuaXQ9InNlY3Rpb24iIC8+PC90cmFuc2xhdGlvbj4="
translation['8.1248b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmp1c3QgYXMgdGhlCgkJCQkJYmxpbmQgcmVtZW1iZXIgYmV0dGVyLCBiZWluZyByZWxlYXNlZCBmcm9tIGhhdmluZyB0aGVpciBmYWN1bHR5IG9mCgkJCQkJbWVtb3J5IGVuZ2FnZWQgd2l0aCBvYmplY3RzIG9mIHNpZ2h0Ljxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJSYWNraGFtIj5KYWNrc29uCgkJCQkJCSh3aXRoIHNvbWUgaGludHMgZnJvbSB0aGUgTGF0aW4gdmVyc2lvbikgZW1lbmRzIHRvIGdpdmUgJ2p1c3QgYXMKCQkJCQkJYmxpbmQgbWVuLCB3aG8gYXJlIHJlbGVhc2VkIGZyb20gYXR0ZW50aW9uIHRvIHZpc2libGVzLCByZW1lbWJlcgoJCQkJCQliZXR0ZXIgdGhhbiBvdGhlcnMsIGJlY2F1c2UgdGhlIGZhY3VsdHkgb2YgbWVtb3J5IGlzIHRodXMgbW9yZQoJCQkJCQllYXJuZXN0bHkgYWRkcmVzc2VkIHRvIHdoYXQgaGFzIGJlZW4gc2FpZC4nPC9ub3RlPjwvdHJhbnNsYXRpb24+"
translation['8.1248b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMi4yNCIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JdCBpcyBjbGVhciwgdGhlbiwgdGhhdCB0aGVyZSBhcmUgdHdvIGtpbmRzIG9mIGdvb2QKCQkJCQlmb3J0dW5l4oCUb25lIGRpdmluZSwgb3dpbmcgdG8gd2hpY2ggdGhlIGZvcnR1bmF0ZSBtYW4ncwoJCQkJCXN1Y2Nlc3MgaXMgdGhvdWdodCB0byBiZSBkdWUgdG8gdGhlIGFpZCBvZiBHb2QsIGFuZCB0aGlzIGlzIHRoZSBtYW4KCQkJCQl3aG8gaXMgc3VjY2Vzc2Z1bCBpbiBhY2NvcmRhbmNlIHdpdGggaGlzIGltcHVsc2UsIHdoaWxlIHRoZSBvdGhlciBpcwoJCQkJCWhlIHdobyBzdWNjZWVkcyBhZ2FpbnN0IGhpcyBpbXB1bHNlLiBCb3RoIHBlcnNvbnMgYXJlIGlycmF0aW9uYWwuIFRoZQoJCQkJCWZvcm1lciBraW5kIGlzIG1vcmUgY29udGludW91cyBnb29kIGZvcnR1bmUsIHRoZSBsYXR0ZXIgaXMgbm90CgkJCQkJY29udGludW91cy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMSIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XZSBoYXZlLCB0aGVuLCBwcmV2aW91c2x5CgkJCQkJc3Bva2VuIGFib3V0IGVhY2ggdmlydHVlIGluIHBhcnRpY3VsYXI7IGFuZCBhcyB3ZSBoYXZlIGRpc3Rpbmd1aXNoZWQKCQkJCQl0aGVpciBtZWFuaW5nIHNlcGFyYXRlbHksIHdlIG11c3QgYWxzbyBkZXNjcmliZSBpbiBkZXRhaWwgdGhlIHZpcnR1ZQoJCQkJCWNvbnN0aXR1dGVkIGZyb20gdGhlbSwgdG8gd2hpY2ggd2Ugbm93IGdpdmUgdGhlIG5hbWU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+VGhlIE1zLiByZWFkaW5nIGdpdmVzLCAnd2Ugd2VyZQoJCQkJCQlhbHJlYWR5IGdpdmluZyB0aGUgbmFtZSwnIGJ1dCBpZiB0aGF0IGlzIGNvcnJlY3QsIHRoZSBwYXNzYWdlCgkJCQkJCXJlZmVycmVkIHRvIGhhcyBiZWVuIGxvc3QuPC9ub3RlPiBvZiBub2JpbGl0eS48bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+PGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zprOsc67zr/OuuG8gM6zzrHOuOG9t86xPC9mb3JlaWduPiwgbGlrZSAnbm9iaWxpdHknLCBjb25ub3RlcyBib3RoCgkJCQkJCQlzb2NpYWwgc3RhdHVzIGFuZCBtb3JhbCBleGNlbGxlbmNlOyBzbyA8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ous6xzrvOv8664byAzrPOsc644b25z4I8L2ZvcmVpZ24+IG1heSBiZSByZW5kZXJlZAoJCQkJCQkJJ2dlbnRsZW1hbi4nPC9ub3RlPjxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6azrHOu86/zrrhvIDOs86xzrjhvbfOsTwvZm9yZWlnbj4sIGxpa2UgJ25vYmlsaXR5JywgY29ubm90ZXMgYm90aAoJCQkJCQkJc29jaWFsIHN0YXR1cyBhbmQgbW9yYWwgZXhjZWxsZW5jZTsgc28gPGZvcmVpZ24gY2xhc3M9InRyYW5zbGF0aW9uIiBsYW5nPSJncmVlayI+zrrOsc67zr/OuuG8gM6zzrHOuOG9uc+CPC9mb3JlaWduPiBtYXkgYmUgcmVuZGVyZWQKCQkJCQkJCSdnZW50bGVtYW4uJzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4yIiB1bml0PSJMb2ViIGNoYXAiIC8+CgkJCQkJTm93IGl0IGlzIG1hbmlmZXN0IHRoYXQgb25lIHdobyBpcyB0byBvYnRhaW4gdGhpcyBhcHBlbGxhdGlvbiB0cnVseQoJCQkJCW11c3QgcG9zc2VzcyB0aGUgcGFydGljdWxhciB2aXJ0dWVzOyBmb3IgaXQgaXMgaW1wb3NzaWJsZSBmb3IgaXQgdG8gYmUKCQkJCQlvdGhlcndpc2UgaW4gdGhlIGNhc2Ugb2YgYW55IG90aGVyIG1hdHRlciBlaXRoZXLigJRmb3IKCQkJCQlpbnN0YW5jZSwgbm8gb25lIGlzIGhlYWx0aHkgaW4gaGlzIHdob2xlIGJvZHkgYnV0IG5vdCBpbiBhbnkgcGFydCBvZgoJCQkJCWl0LCBidXQgYWxsIHRoZSBwYXJ0cywgb3IgbW9zdCBvZiB0aGVtIGFuZCB0aGUgbW9zdCBpbXBvcnRhbnQsIG11c3QKCQkJCQluZWNlc3NhcmlseSBiZSBpbiB0aGUgc2FtZSBjb25kaXRpb24gYXMgdGhlIHdob2xlLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBOb3cgYmVpbmcgZ29vZCBhbmQgYmVpbmcgbm9ibGUKCQkJCQlhcmUgcmVhbGx5IGRpZmZlcmVudCBub3Qgb25seSBpbiB0aGVpciBuYW1lcyBidXQgYWxzbyBpbiB0aGVtc2VsdmVzLgoJCQkJCUZvciBhbGwgZ29vZHMgaGF2ZSBFbmRzIHRoYXQgYXJlIGRlc2lyYWJsZSBpbiBhbmQgZm9yCgkJCQkJdGhlbXNlbHZlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+PC90cmFuc2xhdGlvbj4="
translation['8.1249a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy40IiB1bml0PSJMb2ViIGNoYXAiIC8+IE9mIHRoZXNlLCBhbGwgdGhvc2UgYXJlIGZpbmUKCQkJCQl3aGljaCBhcmUgbGF1ZGFibGUgYXMgZXhpc3RpbmcgZm9yIHRoZWlyIG93biBzYWtlcywgZm9yIHRoZXNlIGFyZSB0aGUKCQkJCQlFbmRzIHdoaWNoIGFyZSBib3RoIHRoZSBtb3RpdmVzIG9mIGxhdWRhYmxlIGFjdGlvbnMgYW5kIGxhdWRhYmxlCgkJCQkJdGhlbXNlbHZlc+KAlGp1c3RpY2UgaXRzZWxmIGFuZCBpdHMgYWN0aW9ucywgYW5kIHRlbXBlcmF0ZQoJCQkJCWFjdGlvbnMsIGZvciB0ZW1wZXJhbmNlIGFsc28gaXMgbGF1ZGFibGU7IGJ1dCBoZWFsdGggaXMgbm90IGxhdWRhYmxlLAoJCQkJCWZvciBpdHMgZWZmZWN0IGlzIG5vdCwgbm9yIGlzIHZpZ29yb3VzIGFjdGlvbiBsYXVkYWJsZSwgZm9yIHN0cmVuZ3RoCgkJCQkJaXMgbm904oCUdGhlc2UgdGhpbmdzIGFyZSBnb29kIGJ1dCB0aGV5IGFyZSBub3QgbGF1ZGFibGUuCgkJCQkJPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjUiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gQW5kIHNpbWlsYXJseQoJCQkJCWluZHVjdGlvbiBtYWtlcyB0aGlzIGNsZWFyIGluIHRoZSBvdGhlciBjYXNlcyBhbHNvLiBUaGVyZWZvcmUgYSBtYW4gaXMKCQkJCQlnb29kIGZvciB3aG9tIHRoZSB0aGluZ3MgZ29vZCBieSBuYXR1cmUgYXJlIGdvb2QuIEZvciB0aGUgdGhpbmdzIG1lbgoJCQkJCWZpZ2h0IGFib3V0IGFuZCB0aGluayB0aGUgZ3JlYXRlc3QsIGhvbm9yIGFuZCB3ZWFsdGggYW5kIGJvZGlseQoJCQkJCWV4Y2VsbGVuY2VzIGFuZCBwaWVjZXMgb2YgZ29vZCBmb3J0dW5lIGFuZCBwb3dlcnMsIGFyZSBnb29kIGJ5IG5hdHVyZQoJCQkJCWJ1dCBtYXkgcG9zc2libHkgYmUgaGFybWZ1bCB0byBzb21lIG1lbiBvd2luZyB0byB0aGVpciBjaGFyYWN0ZXJzLiBJZgoJCQkJCWEgbWFuIGlzIGZvb2xpc2ggb3IgdW5qdXN0IG9yIHByb2ZsaWdhdGUgaGUgd291bGQgZ2FpbiBubyBwcm9maXQgYnkKCQkJCQllbXBsb3lpbmcgdGhlbSwgYW55IG1vcmUgdGhhbiBhbiBpbnZhbGlkIHdvdWxkIGJlbmVmaXQgZnJvbSB1c2luZyB0aGUKCQkJCQlkaWV0IG9mIGEgbWFuIGluIGdvb2QgaGVhbHRoLCBvciBhIHdlYWtsaW5nIGFuZCBjcmlwcGxlIGZyb20gdGhlCgkJCQkJZXF1aXBtZW50IG9mIGEgaGVhbHRoeSBtYW4gYW5kIG9mIGEgc291bmQgb25lLiA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuNiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBIG1hbiBpcyBub2JsZSBiZWNhdXNlIGhlCgkJCQkJcG9zc2Vzc2VzIHRob3NlIGdvb2QgdGhpbmdzIHRoYXQgYXJlIGZpbmUgZm9yIHRoZWlyIG93biBzYWtlIGFuZAoJCQkJCWJlY2F1c2UgaGUgaXMgYSBkb2VyIG9mIGZpbmUgZGVlZHMgZXZlbiBmb3IgdGhlaXIgb3duIHNha2U7IGFuZCB0aGUKCQkJCQlmaW5lIHRoaW5ncyBhcmUgdGhlIHZpcnR1ZXMgYW5kIHRoZSBhY3Rpb25zIHRoYXQgYXJpc2UgZnJvbQoJCQkJCXZpcnR1ZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuNyIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgdGhlcmUgaXMgYWxzbyBhIHN0YXRlIG9mIGNoYXJhY3RlciB0aGF0CgkJCQkJaXMgdGhlICdjaXZpYycgY2hhcmFjdGVyLCBzdWNoIGFzIHRoZSBTcGFydGFucyBoYXZlIG9yIG90aGVycyBsaWtlCgkJCQkJdGhlbSBtYXkgaGF2ZTsgYW5kIHRoaXMgY2hhcmFjdGVyIGlzIG9mIHRoZSBmb2xsb3dpbmcgc29ydC4gVGhlcmUgYXJlCgkJCQkJdGhvc2Ugd2hvIHRoaW5rIHRoYXQgb25lIG91Z2h0LCBpdCBpcyB0cnVlLCB0byBwb3NzZXNzIGdvb2RuZXNzLCBidXQKCQkJCQlmb3IgdGhlIHNha2Ugb2YgdGhlIHRoaW5ncyB0aGF0IGFyZSBuYXR1cmFsbHkgZ29vZDsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNDlhIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['8.1249a.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmhlbmNlIHRob3VnaCB0aGV5IGFyZSBnb29kIG1lbiAoZm9yIHRoZSB0aGluZ3MgbmF0dXJhbGx5CgkJCQkJZ29vZCBhcmUgZ29vZCBmb3IgdGhlbSksIHlldCB0aGV5IGhhdmUgbm90IG5vYmlsaXR5LCBmb3IgaXQgaXMgbm90IHRoZQoJCQkJCWNhc2Ugd2l0aCB0aGVtIHRoYXQgdGhleSBwb3NzZXNzIGZpbmUgdGhpbmdzIGZvciB0aGVpciBvd24gc2FrZSBhbmQKCQkJCQl0aGF0IHRoZXkgcHVycG9zZSBmaW5lIGFjdGlvbnMsIGFuZCBub3Qgb25seSB0aGlzLCBidXQgYWxzbyB0aGF0CgkJCQkJdGhpbmdzIG5vdCBmaW5lIGJ5IG5hdHVyZSBidXQgZ29vZCBieSBuYXR1cmUgYXJlIGZpbmUgZm9yIHRoZW0uCgkJCQkJPC90cmFuc2xhdGlvbj4="
translation['8.1249a.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy44IiB1bml0PSJMb2ViIGNoYXAiIC8+IEZvciB0aGluZ3MgYXJlIGZpbmUKCQkJCQl3aGVuIHRoYXQgZm9yIHdoaWNoIG1lbiBkbyB0aGVtIGFuZCBjaG9vc2UgdGhlbSBpcyBmaW5lLiBUaGVyZWZvcmUgdG8KCQkJCQl0aGUgbm9ibGUgbWFuIHRoZSB0aGluZ3MgZ29vZCBieSBuYXR1cmUgYXJlIGZpbmU7IGZvciB3aGF0IGlzIGp1c3QgaXMKCQkJCQlmaW5lLCBhbmQgd2hhdCBpcyBhY2NvcmRpbmcgdG8gd29ydGggaXMganVzdCwgYW5kIGhlIGlzIHdvcnRoeSBvZgoJCQkJCXRoZXNlIHRoaW5nczsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjkiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gYW5kIHdoYXQgaXMKCQkJCQliZWZpdHRpbmcgaXMgZmluZSwgYW5kIHRoZXNlIHRoaW5ncyBiZWZpdCBoaW3igJR3ZWFsdGgsIGJpcnRoLAoJCQkJCXBvd2VyLiBIZW5jZSBmb3IgdGhlIG5vYmxlIG1hbiB0aGUgc2FtZSB0aGluZ3MgYXJlIGJvdGggYWR2YW50YWdlb3VzCgkJCQkJYW5kIGZpbmU7IGJ1dCBmb3IgdGhlIG11bHRpdHVkZSB0aGVzZSB0aGluZ3MgZG8gbm90IGNvaW5jaWRlLCBmb3IKCQkJCQl0aGluZ3MgYWJzb2x1dGVseSBnb29kIGFyZSBub3QgYWxzbyBnb29kIGZvciB0aGVtLCB3aGVyZWFzIHRoZXkgYXJlCgkJCQkJZ29vZCBmb3IgdGhlIGdvb2QgbWFuOyBhbmQgdG8gdGhlIG5vYmxlIG1hbiB0aGV5IGFyZSBhbHNvIGZpbmUsIGZvciBoZQoJCQkJCXBlcmZvcm1zIG1hbnkgZmluZSBhY3Rpb25zIGJlY2F1c2Ugb2YgdGhlbS4gPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiBuPSIzLjEwIiB1bml0PSJMb2ViIGNoYXAiIC8+IEJ1dCBoZSB3aG8gdGhpbmtzIHRoYXQgb25lCgkJCQkJb3VnaHQgdG8gcG9zc2VzcyB0aGUgdmlydHVlcyBmb3IgdGhlIHNha2Ugb2YgZXh0ZXJuYWwgZ29vZHMgZG9lcyBmaW5lCgkJCQkJdGhpbmdzIG9ubHkgYnkgYWNjaWRlbnQuIE5vYmlsaXR5IHRoZW4gaXMgcGVyZmVjdCBnb29kbmVzcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMTEiIHVuaXQ9IkxvZWIgY2hhcCIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2UgaGF2ZSBhbHNvIHNwb2tlbiBhYm91dCB0aGUgbmF0dXJlIG9mIHBsZWFzdXJlIGFuZCB0aGUgbWFubmVyIGluCgkJCQkJd2hpY2ggaXQgaXMgYSBnb29kLCBhbmQgaGF2ZSBzYWlkIHRoYXQgdGhpbmdzIHBsZWFzYW50IGFic29sdXRlbHkgYXJlCgkJCQkJYWxzbyBmaW5lIGFuZCB0aGF0IHRoaW5ncyBnb29kIGFic29sdXRlbHkgYXJlIGFsc28gcGxlYXNhbnQuIFBsZWFzdXJlCgkJCQkJZG9lcyBub3Qgb2NjdXIgZXhjZXB0IGluIGFjdGlvbjs8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IkJla2tlciIgbj0iMjAiIHVuaXQ9ImxpbmUiIC8+b24gdGhpcyBhY2NvdW50IHRoZSB0cnVseSBoYXBweSBtYW4gd2lsbCBhbHNvIGxpdmUgbW9zdAoJCQkJCXBsZWFzYW50bHksIGFuZCBpdCBpcyBub3Qgd2l0aG91dCByZWFzb24gdGhhdCBwZW9wbGUgZGVtYW5kCgkJCQkJdGhpcy48L3RyYW5zbGF0aW9uPg=="
translation['8.1249b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xMiIgdW5pdD0iTG9lYiBjaGFwIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgc2luY2UgYSBkb2N0b3IgaGFzIGEgY2VydGFpbiBzdGFuZGFyZCBieQoJCQkJCXJlZmVycmluZyB0byB3aGljaCBoZSBqdWRnZXMgdGhlIGhlYWx0aHkgYm9keSBhbmQgdGhlIGdvb2RzIHVuaGVhbHRoeSwKCQkJCQlhbmQgaW4gcmVsYXRpb24gdG8gd2hpY2ggZWFjaCB0aGluZyB1cCB0byBhIGNlcnRhaW4gcG9pbnQgb3VnaHQgdG8gYmUKCQkJCQlkb25lIGFuZCBpcyB3aG9sZXNvbWUsIGJ1dCBpZiBsZXNzIGlzIGRvbmUsIG9yIG1vcmUsIGl0IGNlYXNlcyB0byBiZQoJCQkJCXdob2xlc29tZSwgc28gaW4gcmVnYXJkIHRvIGFjdGlvbnMgYW5kIGNob2ljZXMgb2YgdGhpbmdzIGdvb2QgYnkKCQkJCQluYXR1cmUgYnV0IG5vdCBsYXVkYWJsZSBhIHZpcnR1b3VzIG1hbiBvdWdodCB0byBoYXZlIGEgY2VydGFpbgoJCQkJCXN0YW5kYXJkIGJvdGggb2YgY2hhcmFjdGVyIGFuZCBvZiBjaG9pY2UgYW5kIGF2b2lkYW5jZTsgPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyNDliIiB1bml0PSJzZWN0aW9uIiAvPjwvdHJhbnNsYXRpb24+"
translation['8.1249b.1'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIxIiB1bml0PSJsaW5lIiAvPmFuZCBhbHNvIGluIHJlZ2FyZCB0byBsYXJnZSBhbmQgc21hbGwgYW1vdW50IG9mIHByb3BlcnR5CgkJCQkJYW5kIG9mIGdvb2QgZm9ydHVuZS4gPC90cmFuc2xhdGlvbj4="
translation['8.1249b.20'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xMyIgdW5pdD0iTG9lYiBjaGFwIiAvPiBOb3cKCQkJCQlpbiB3aGF0IHByZWNlZGVkPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IlJhY2toYW0iPgoJCQkJCQk8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gMi4xMjIyYS42IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTIyMmEgNi0xMCwgYiA3LCAxMjMyYQoJCQkJCQkJMzJmLjwvYmlibD4KCQkJCQk8L25vdGU+IHdlIHN0YXRlZCB0aGUgc3RhbmRhcmQgJ2FzIHJlYXNvbiBkaXJlY3RzJzsgYnV0IHRoaXMgaXMgYXMgaWYKCQkJCQlpbiBtYXR0ZXJzIG9mIGRpZXQgb25lIHdlcmUgdG8gc2F5ICdhcyBtZWRpY2FsIHNjaWVuY2UgYW5kIGl0cwoJCQkJCXByaW5jaXBsZXMgZGlyZWN0LCcgYW5kIHRoaXMgdGhvdWdoIHRydWUgaXMgbm90IGNsZWFyLiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBFdWQuIEV0aC4gMi4xMjIyYS42IiB2YWxpZD0ieWVzIj5BcmlzdG90LiBFdWQuIEV0aC4gMTIyMmEgNi0xMCwgYiA3LCAxMjMyYQoJCQkJCQkJMzJmLjwvYmlibD4KCQkJCQk8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIG49IjMuMTQiIHVuaXQ9IkxvZWIgY2hhcCIgLz4gSXQgaXMgcHJvcGVyLCB0aGVyZWZvcmUsIGhlcmUKCQkJCQlhcyBpbiBvdGhlciBtYXR0ZXJzIHRvIGxpdmUgd2l0aCByZWZlcmVuY2UgdG8gdGhlIHJ1bGluZyBmYWN0b3IsIGFuZAoJCQkJCXRvIHRoZSBzdGF0ZSBhbmQgdGhlIGFjdGl2aXR5IG9mIHRoZSBydWxpbmcgZmFjdG9yLCBhcyBmb3IgZXhhbXBsZQoJCQkJCXNsYXZlIG11c3QgbGl2ZSB3aXRoIHJlZmVyZW5jZSB0byB0aGUgcnVsZSBvZiBtYXN0ZXIsIGFuZCBlYWNoIHBlcnNvbgoJCQkJCXdpdGggcmVmZXJlbmNlIHRvIHRoZSBydWxlIGFwcHJvcHJpYXRlIHRvIGVhY2guIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xNSIgdW5pdD0iTG9lYiBjaGFwIiAvPiBBbmQgc2luY2UgbWFuIGNvbnNpc3RzIGJ5CgkJCQkJbmF0dXJlIG9mIGEgcnVsaW5nIHBhcnQgYW5kIGEgc3ViamVjdCBwYXJ0LCBhbmQgZWFjaCB3b3VsZCBwcm9wZXJseQoJCQkJCWxpdmUgd2l0aCByZWZlcmVuY2UgdG8gdGhlIHJ1bGluZyBwcmluY2lwbGUgd2l0aGluIGhpbSAoYW5kIHRoaXMgaXMKCQkJCQl0d29mb2xkLCBmb3IgbWVkaWNhbCBzY2llbmNlIGlzIGEgcnVsaW5nIHByaW5jaXBsZSBpbiBvbmUgd2F5IGFuZAoJCQkJCWhlYWx0aCBpcyBpbiBhbm90aGVyLCBhbmQgdGhlIGZvcm1lciBpcyBhIG1lYW5zIHRvIHRoZSBsYXR0ZXIpLCB0aGlzCgkJCQkJaXMgdGhlcmVmb3JlIHRoZSBjYXNlIGluIHJlZ2FyZCB0byB0aGUgZmFjdWx0eSBvZiBjb250ZW1wbGF0aW9uLiBGb3IKCQkJCQlHb2QgaXMgbm90IGEgcnVsZXIgaW4gdGhlIHNlbnNlIG9mIGlzc3VpbmcgY29tbWFuZHMsIGJ1dCBpcyB0aGUgRW5kIGFzCgkJCQkJYSBtZWFucyB0byB3aGljaCB3aXNkb20gZ2l2ZXMgY29tbWFuZHMgKGFuZCB0aGUgdGVybSAnRW5kJyBoYXMgdHdvCgkJCQkJbWVhbmluZ3MsIGJ1dCB0aGVzZSBoYXZlIGJlZW4gZGlzdGluZ3Vpc2hlZCBlbHNld2hlcmU8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iUmFja2hhbSI+RW5kIG9yICdmaW5hbCBjYXVzZScgKDxmb3JlaWduIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbGFuZz0iZ3JlZWsiPs6/4b2XIOG8lc69zrXOus6xPC9mb3JlaWduPikgZGVub3RlcyAoMSkgdGhlCgkJCQkJCXBlcnNvbiBvciB0aGluZyBmb3Igd2hvc2UgZ29vZCBzb21ldGhpbmcgaXMgZG9uZSwgKDIpIHRoZQoJCQkJCQlwdXJwb3NlIGZvciB3aGljaCBpdCBpcyBkb25lLiBHb2QgaXMgdGhlIEZpbmFsIENhdXNlIGluIHRoZQoJCQkJCQlsYXR0ZXIgc2Vuc2U6IGNmIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIFBoLiAxOTRhLjMyIj5BcmlzdG90LiBQaHlzLiAxOTRhIDMyLTM2PC9iaWJsPiwKCQkJCQkJPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iQXJpc3RvdC4gZGUgQW4uIDQxNWIuMiI+QXJpc3RvdC4gRGUgYW5pbWEgNDE1YgoJCQkJCQkJMjwvYmlibD4sIDxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIE1ldC4gMTIuMTA3MmIuMiIgdmFsaWQ9InllcyI+QXJpc3RvdC4gTWV0LiAxMDcyYiAyPC9iaWJsPgoJCQkJCQkoU29sb21vbikuPC9ub3RlPik7IHNpbmNlIGNsZWFybHkgR29kIGlzIGluIG5lZWQgb2Ygbm90aGluZy4KCQkJCQk8Zm9yZWlnbiBjbGFzcz0idHJhbnNsYXRpb24iIGxhbmc9ImdyZWVrIj7Ov+G9lyDhvJXOvc61zrrOsTwvZm9yZWlnbj4pIGRlbm90ZXMgKDEpIHRoZQoJCQkJCQlwZXJzb24gb3IgdGhpbmcgZm9yIHdob3NlIGdvb2Qgc29tZXRoaW5nIGlzIGRvbmUsICgyKSB0aGUKCQkJCQkJcHVycG9zZSBmb3Igd2hpY2ggaXQgaXMgZG9uZS4gR29kIGlzIHRoZSBGaW5hbCBDYXVzZSBpbiB0aGUKCQkJCQkJbGF0dGVyIHNlbnNlOiBjZiA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBQaC4gMTk0YS4zMiI+QXJpc3RvdC4gUGh5cy4gMTk0YSAzMi0zNjwvYmlibD4sCgkJCQkJCTxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkFyaXN0b3QuIGRlIEFuLiA0MTViLjIiPkFyaXN0b3QuIERlIGFuaW1hIDQxNWIKCQkJCQkJCTI8L2JpYmw+LCA8YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJBcmlzdG90LiBNZXQuIDEyLjEwNzJiLjIiIHZhbGlkPSJ5ZXMiPkFyaXN0b3QuIE1ldC4gMTA3MmIgMjwvYmlibD4KCQkJCQkJKFNvbG9tb24pLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgbj0iMy4xNiIgdW5pdD0iTG9lYiBjaGFwIiAvPiBUaGVyZWZvcmUgd2hhdGV2ZXIKCQkJCQltb2RlIG9mIGNob29zaW5nIGFuZCBvZiBhY3F1aXJpbmcgdGhpbmdzIGdvb2QgYnkKCQkJCQluYXR1cmXigJR3aGV0aGVyIGdvb2RzIG9mIGJvZHkgb3Igd2VhbHRoIG9yIGZyaWVuZHMgb3IgdGhlCgkJCQkJb3RoZXIgZ29vZHPigJR3aWxsIGJlc3QgcHJvbW90ZSB0aGUgY29udGVtcGxhdGlvbiBvZiBHb2QsIHRoYXQKCQkJCQlpcyB0aGUgYmVzdCBtb2RlLCBhbmQgdGhhdCBzdGFuZGFyZCBpcyB0aGUgZmluZXN0OzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iQmVra2VyIiBuPSIyMCIgdW5pdD0ibGluZSIgLz5hbmQgYW55IG1vZGUgb2YgY2hvaWNlIGFuZAoJCQkJCWFjcXVpc2l0aW9uIHRoYXQgZWl0aGVyIHRocm91Z2ggZGVmaWNpZW5jeSBvciBleGNlc3MgaGluZGVycyB1cyBmcm9tCgkJCQkJc2VydmluZyBhbmQgZnJvbSBjb250ZW1wbGF0aW5nIEdvZOKAlHRoYXQgaXMgYSBiYWQgb25lLgoJCQkJCTwvdHJhbnNsYXRpb24+"
