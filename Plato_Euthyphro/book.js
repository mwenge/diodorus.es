var translations = [];
var translatedSection = null;
var current = 0;

function updateScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  console.log(page)

  var bookmarkedPageFieldName = book + "Page";
  var bookmarkedPage = localStorage.getItem(bookmarkedPageFieldName);
  if (bookmarkedPage == null) {
    localStorage.setItem(bookmarkedPageFieldName, page);
  }

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";

  var scrollPosition = localStorage.getItem(positionOnPage);
  if (scrollPosition == null) {
    scrollPosition = window.pageYOffset;
    localStorage.setItem(positionOnPage, scrollPosition);
    return;
  }

  if (bookmarkedPage == page) {
    window.scrollTo(0, scrollPosition)
    return;
  }
  window.location = bookmarkedPage;
}

function storeScrollPosition() {
  var book = titleElements[0] + titleElements[1];
  var path = window.location.pathname;
  var page = path.split("/").pop();
  localStorage.setItem(book + "Page", page);

  var pageOfBook = page.replace(".html", "");
  var positionOnPage = pageOfBook + "ScrollPosition";
  scrollPosition = window.pageYOffset;
  localStorage.setItem(positionOnPage, scrollPosition);
}

function showNextOnHelper(evt) {
  current++;
  if (current > translations.length - 1) {
    current = 0;
  }
  var translation = translations[current];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = (current + 1) + "/" + translations.length;
    helper.appendChild(transCount);
  }
}

function updateHelper(evt, lineNumber, translationsForWord) {
  if (typeof updateHelper.currentWord === 'object') {
    updateHelper.currentWord.style.textDecoration = "none";
  }
  
  if (evt.target == updateHelper.currentWord) {
    displayTranslation(lineNumber);
    return;
  }

  evt.target.style.textDecoration = "underline red";
  updateHelper.currentWord = evt.target;

  if (typeof updateHelper.previousCommentBubble === 'object' 
      && updateHelper.previousCommentBubble != null) {
    updateHelper.previousCommentBubble.style.display = "none";
  }
  var commentBubble = document.getElementById("indicator-" + lineNumber);
  if (commentBubble != null) {
    commentBubble.style.display = "inline";
  }
  updateHelper.previousCommentBubble = commentBubble;

  showTitle(lineNumber);

  translations = translationsForWord;
  var translation = translations[0];
  var innerHTML = "<span><span style='font-weight: bold; font-family:\"GFS Didot\"'>"
    + translation[0] + ",</span> " + translation[1] + "</span>";
  helper.innerHTML = innerHTML;
  helper.style.display = "block";

  if (translations.length > 1) {
    var transCount = document.createElement("span");
    transCount.id = 'transCount';
    transCount.textContent = "1/" + translations.length;
    helper.appendChild(transCount);
  }

  storeScrollPosition();
}

function showTitle(lineNumber) {
  if (Array.isArray(lineNumber)) {
    lineNumber = lineNumber[0];
  }
  lineNumber = lineNumber.replace(/\./g, '');
  var page = parseInt(parseInt(lineNumber, 10) / 100, 10);
  if (isNaN(page)) {
    return;
  }
  var result = page % 2;
  
  var titleToShow = titleElements[result];
  var innerHTML = "<span class=\"title\">" + titleToShow + "</span>";
  masthead.innerHTML = innerHTML;
}

function displayTranslation(refs) {
  if (translatedSection) {
    for (var i = 0; i < translatedSection.length; i++) {
        translatedSection[i].style.backgroundColor = "";
    }
  }
  translatedSection = null;
  for (var i = 0; i < refs.length; i++) {
    var ref = refs[i];
    translatedSection = document.getElementsByClassName(ref);
    if (translatedSection)
      break;
  }
  if (!translatedSection) {
    return;
  }
  if (!translation.hasOwnProperty(ref)) {
    return;
  }
  for (var i = 0; i < translatedSection.length; i++) {
      translatedSection[i].style.backgroundColor = "yellow";
  }
  parallel_translation.innerHTML = atobUTF8(translation[ref]);
  parallel_translation.style.display = "block";
}

function hideTranslation() {
  for (var i = 0; i < translatedSection.length; i++) {
      translatedSection[i].style.backgroundColor = "";
  }
  parallel_translation.style.display = "none";
}


function displayComment(line) {
  comment.innerHTML = atobUTF8(commentary[line]);
  comment.style.display = "block";
}

function hideComment() {
  comment.style.display = "none";
}

if ('serviceWorker' in navigator) {
  window.addEventListener('load', function() {
    navigator.serviceWorker.register('serviceworker.js').then(function(registration) {
      // Registration was successful
      console.log('ServiceWorker registration successful with scope: ', registration.scope);
    }, function(err) {
      // registration failed :(
      console.log('ServiceWorker registration failed: ', err);
    });
  });
}

window.onload = updateScrollPosition;
var translation={}
var translation={}
translation['2.2a'] = ""
translation['2.2b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyYiIgdW5pdD0ic2VjdGlvbiIgLz5mb3IgSSBkb24ndCBhY2N1c2UgeW91IG9mIGhhdmluZyBicm91Z2h0IG9uZSBhZ2FpbnN0IGFueW9uZSBlbHNlLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkgbm90LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkgbm90LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBzb21lb25lIGVsc2UgYWdhaW5zdCB5b3U/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgc29tZW9uZSBlbHNlIGFnYWluc3QgeW91PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UXVpdGUgc28uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlF1aXRlIHNvLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldobyBpcyBoZT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldobyBpcyBoZT88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgZG9uJ3Qga25vdyB0aGUgbWFuIHZlcnkgd2VsbCBteXNlbGYsIEV1dGh5cGhybywgZm9yIGhlIHNlZW1zIHRvIGJlIGEgeW91bmcgYW5kIHVua25vd24gcGVyc29uLiAgSGlzIG5hbWUsIGhvd2V2ZXIsIGlzIE1lbGV0dXMsIEkgYmVsaWV2ZS4gIEFuZCBoZSBpcyBvZiB0aGUgZGVtZSBvZiBQaXR0aHVzLCBpZiB5b3UgcmVtZW1iZXIgYW55IFBpdHRoaWFuIE1lbGV0dXMsIHdpdGggbG9uZyBoYWlyIGFuZCBvbmx5IGEgbGl0dGxlIGJlYXJkLCBidXQgd2l0aCBhIGhvb2tlZCBub3NlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvbid0IGtub3cgdGhlIG1hbiB2ZXJ5IHdlbGwgbXlzZWxmLCBFdXRoeXBocm8sIGZvciBoZSBzZWVtcyB0byBiZSBhIHlvdW5nIGFuZCB1bmtub3duIHBlcnNvbi4gIEhpcyBuYW1lLCBob3dldmVyLCBpcyBNZWxldHVzLCBJIGJlbGlldmUuICBBbmQgaGUgaXMgb2YgdGhlIGRlbWUgb2YgUGl0dGh1cywgaWYgeW91IHJlbWVtYmVyIGFueSBQaXR0aGlhbiBNZWxldHVzLCB3aXRoIGxvbmcgaGFpciBhbmQgb25seSBhIGxpdHRsZSBiZWFyZCwgYnV0IHdpdGggYSBob29rZWQgbm9zZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvbid0IHJlbWVtYmVyIGhpbSwgU29jcmF0ZXMuICBCdXQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjJjIiB1bml0PSJzZWN0aW9uIiAvPndoYXQgc29ydCBvZiBhbiBpbmRpY3RtZW50IGhhcyBoZSBicm91Z2h0IGFnYWluc3QgeW91PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBkb24ndCByZW1lbWJlciBoaW0sIFNvY3JhdGVzLiAgQnV0CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyYyIgdW5pdD0ic2VjdGlvbiIgLz53aGF0IHNvcnQgb2YgYW4gaW5kaWN0bWVudCBoYXMgaGUgYnJvdWdodCBhZ2FpbnN0IHlvdT88L3A+PC90cmFuc2xhdGlvbj4="
translation['2.2c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyYyIgdW5pdD0ic2VjdGlvbiIgLz53aGF0IHNvcnQgb2YgYW4gaW5kaWN0bWVudCBoYXMgaGUgYnJvdWdodCBhZ2FpbnN0IHlvdT88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hhdCBzb3J0PyAgTm8gbWVhbiBvbmUsIGl0IHNlZW1zIHRvIG1lOyAgZm9yIHRoZSBmYWN0IHRoYXQsIHlvdW5nIGFzIGhlIGlzLCBoZSBoYXMgYXBwcmVoZW5kZWQgc28gaW1wb3J0YW50IGEgbWF0dGVyIHJlZmxlY3RzIG5vIHNtYWxsIGNyZWRpdCB1cG9uIGhpbS4gIEZvciBoZSBzYXlzIGhlIGtub3dzIGhvdyB0aGUgeW91dGggYXJlIGNvcnJ1cHRlZCBhbmQgd2hvIHRob3NlIGFyZSB3aG8gY29ycnVwdCB0aGVtLiAgSGUgbXVzdCBiZSBhIHdpc2UgbWFuOyAgd2hvLCBzZWVpbmcgbXkgbGFjayBvZiB3aXNkb20gYW5kIHRoYXQgSSBhbSBjb3JydXB0aW5nIGhpcyBmZWxsb3dzLCBjb21lcyB0byB0aGUgU3RhdGUsIGFzIGEgYm95IHJ1bnMgdG8gaGlzIG1vdGhlciwgdG8gYWNjdXNlIG1lLiAgQW5kIGhlIHNlZW1zIHRvIG1lIHRvIGJlIHRoZSBvbmx5IG9uZSBvZiB0aGUgcHVibGljIG1lbiB3aG8gYmVnaW5zIGluIHRoZSByaWdodCB3YXk7ICBmb3IgdGhlIHJpZ2h0IHdheQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMmQiIHVuaXQ9InNlY3Rpb24iIC8+aXMgdG8gdGFrZSBjYXJlIG9mIHRoZSB5b3VuZyBtZW4gZmlyc3QsIHRvIG1ha2UgdGhlbSBhcyBnb29kIGFzIHBvc3NpYmxlLCBqdXN0IGFzIGEgZ29vZCBodXNiYW5kbWFuIHdpbGwgbmF0dXJhbGx5IHRha2UgY2FyZSBvZiB0aGUgeW91bmcgcGxhbnRzIGZpcnN0IGFuZCBhZnRlcndhcmRzIG9mIHRoZSByZXN0LiAgQW5kIHNvIE1lbGV0dXMsIHBlcmhhcHMsIGlzIGZpcnN0CjxtaWxlc3RvbmUgbj0iMyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjNhIiB1bml0PSJzZWN0aW9uIiAvPmNsZWFyaW5nIGF3YXkgdXMgd2hvIGNvcnJ1cHQgdGhlIHlvdW5nIHBsYW50cywgYXMgaGUgc2F5czsgIHRoZW4gYWZ0ZXIgdGhpcywgd2hlbiBoZSBoYXMgdHVybmVkIGhpcyBhdHRlbnRpb24gdG8gdGhlIG9sZGVyIG1lbiwgaGUgd2lsbCBicmluZyBjb3VudGxlc3MgbW9zdCBwcmVjaW91cyBibGVzc2luZ3MgdXBvbiB0aGUgU3RhdGUs4oCUYXQgbGVhc3QsIHRoYXQgaXMgdGhlIG5hdHVyYWwgb3V0Y29tZSBvZiB0aGUgYmVnaW5uaW5nIGhlIGhhcyBtYWRlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IHNvcnQ/ICBObyBtZWFuIG9uZSwgaXQgc2VlbXMgdG8gbWU7ICBmb3IgdGhlIGZhY3QgdGhhdCwgeW91bmcgYXMgaGUgaXMsIGhlIGhhcyBhcHByZWhlbmRlZCBzbyBpbXBvcnRhbnQgYSBtYXR0ZXIgcmVmbGVjdHMgbm8gc21hbGwgY3JlZGl0IHVwb24gaGltLiAgRm9yIGhlIHNheXMgaGUga25vd3MgaG93IHRoZSB5b3V0aCBhcmUgY29ycnVwdGVkIGFuZCB3aG8gdGhvc2UgYXJlIHdobyBjb3JydXB0IHRoZW0uICBIZSBtdXN0IGJlIGEgd2lzZSBtYW47ICB3aG8sIHNlZWluZyBteSBsYWNrIG9mIHdpc2RvbSBhbmQgdGhhdCBJIGFtIGNvcnJ1cHRpbmcgaGlzIGZlbGxvd3MsIGNvbWVzIHRvIHRoZSBTdGF0ZSwgYXMgYSBib3kgcnVucyB0byBoaXMgbW90aGVyLCB0byBhY2N1c2UgbWUuICBBbmQgaGUgc2VlbXMgdG8gbWUgdG8gYmUgdGhlIG9ubHkgb25lIG9mIHRoZSBwdWJsaWMgbWVuIHdobyBiZWdpbnMgaW4gdGhlIHJpZ2h0IHdheTsgIGZvciB0aGUgcmlnaHQgd2F5CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyZCIgdW5pdD0ic2VjdGlvbiIgLz5pcyB0byB0YWtlIGNhcmUgb2YgdGhlIHlvdW5nIG1lbiBmaXJzdCwgdG8gbWFrZSB0aGVtIGFzIGdvb2QgYXMgcG9zc2libGUsIGp1c3QgYXMgYSBnb29kIGh1c2JhbmRtYW4gd2lsbCBuYXR1cmFsbHkgdGFrZSBjYXJlIG9mIHRoZSB5b3VuZyBwbGFudHMgZmlyc3QgYW5kIGFmdGVyd2FyZHMgb2YgdGhlIHJlc3QuICBBbmQgc28gTWVsZXR1cywgcGVyaGFwcywgaXMgZmlyc3QKPG1pbGVzdG9uZSBuPSIzIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iM2EiIHVuaXQ9InNlY3Rpb24iIC8+Y2xlYXJpbmcgYXdheSB1cyB3aG8gY29ycnVwdCB0aGUgeW91bmcgcGxhbnRzLCBhcyBoZSBzYXlzOyAgdGhlbiBhZnRlciB0aGlzLCB3aGVuIGhlIGhhcyB0dXJuZWQgaGlzIGF0dGVudGlvbiB0byB0aGUgb2xkZXIgbWVuLCBoZSB3aWxsIGJyaW5nIGNvdW50bGVzcyBtb3N0IHByZWNpb3VzIGJsZXNzaW5ncyB1cG9uIHRoZSBTdGF0ZSzigJRhdCBsZWFzdCwgdGhhdCBpcyB0aGUgbmF0dXJhbCBvdXRjb21lIG9mIHRoZSBiZWdpbm5pbmcgaGUgaGFzIG1hZGUuPC9wPjwvdHJhbnNsYXRpb24+"
translation['2.2d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyZCIgdW5pdD0ic2VjdGlvbiIgLz5pcyB0byB0YWtlIGNhcmUgb2YgdGhlIHlvdW5nIG1lbiBmaXJzdCwgdG8gbWFrZSB0aGVtIGFzIGdvb2QgYXMgcG9zc2libGUsIGp1c3QgYXMgYSBnb29kIGh1c2JhbmRtYW4gd2lsbCBuYXR1cmFsbHkgdGFrZSBjYXJlIG9mIHRoZSB5b3VuZyBwbGFudHMgZmlyc3QgYW5kIGFmdGVyd2FyZHMgb2YgdGhlIHJlc3QuICBBbmQgc28gTWVsZXR1cywgcGVyaGFwcywgaXMgZmlyc3QKPC90cmFuc2xhdGlvbj4="
translation['3.3a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzYSIgdW5pdD0ic2VjdGlvbiIgLz5jbGVhcmluZyBhd2F5IHVzIHdobyBjb3JydXB0IHRoZSB5b3VuZyBwbGFudHMsIGFzIGhlIHNheXM7ICB0aGVuIGFmdGVyIHRoaXMsIHdoZW4gaGUgaGFzIHR1cm5lZCBoaXMgYXR0ZW50aW9uIHRvIHRoZSBvbGRlciBtZW4sIGhlIHdpbGwgYnJpbmcgY291bnRsZXNzIG1vc3QgcHJlY2lvdXMgYmxlc3NpbmdzIHVwb24gdGhlIFN0YXRlLOKAlGF0IGxlYXN0LCB0aGF0IGlzIHRoZSBuYXR1cmFsIG91dGNvbWUgb2YgdGhlIGJlZ2lubmluZyBoZSBoYXMgbWFkZS48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgaG9wZSBpdCBtYXkgYmUgc28sIFNvY3JhdGVzOyAgYnV0IEkgZmVhciB0aGUgb3Bwb3NpdGUgbWF5IHJlc3VsdC4gIEZvciBpdCBzZWVtcyB0byBtZSB0aGF0IGhlIGJlZ2lucyBieSBpbmp1cmluZyB0aGUgU3RhdGUgYXQgaXRzIHZlcnkgaGVhcnQsIHdoZW4gaGUgdW5kZXJ0YWtlcyB0byBoYXJtIHlvdS4gIE5vdyB0ZWxsIG1lLCB3aGF0IGRvZXMgaGUgc2F5IHlvdSBkbyB0aGF0IGNvcnJ1cHRzIHRoZSB5b3VuZz8KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjNiIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBob3BlIGl0IG1heSBiZSBzbywgU29jcmF0ZXM7ICBidXQgSSBmZWFyIHRoZSBvcHBvc2l0ZSBtYXkgcmVzdWx0LiAgRm9yIGl0IHNlZW1zIHRvIG1lIHRoYXQgaGUgYmVnaW5zIGJ5IGluanVyaW5nIHRoZSBTdGF0ZSBhdCBpdHMgdmVyeSBoZWFydCwgd2hlbiBoZSB1bmRlcnRha2VzIHRvIGhhcm0geW91LiAgTm93IHRlbGwgbWUsIHdoYXQgZG9lcyBoZSBzYXkgeW91IGRvIHRoYXQgY29ycnVwdHMgdGhlIHlvdW5nPwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iM2IiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvdHJhbnNsYXRpb24+"
translation['3.3b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzYiIgdW5pdD0ic2VjdGlvbiIgLz48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QWJzdXJkIHRoaW5ncywgbXkgZnJpZW5kLCBhdCBmaXJzdCBoZWFyaW5nLiAgRm9yIGhlIHNheXMgSSBhbSBhIG1ha2VyIG9mIGdvZHM7ICBhbmQgYmVjYXVzZSBJIG1ha2UgbmV3IGdvZHMgYW5kIGRvIG5vdCBiZWxpZXZlIGluIHRoZSBvbGQgb25lcywgaGUgaW5kaWN0ZWQgbWUgZm9yIHRoZSBzYWtlIG9mIHRoZXNlIG9sZCBvbmVzLCBhcyBoZSBzYXlzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BYnN1cmQgdGhpbmdzLCBteSBmcmllbmQsIGF0IGZpcnN0IGhlYXJpbmcuICBGb3IgaGUgc2F5cyBJIGFtIGEgbWFrZXIgb2YgZ29kczsgIGFuZCBiZWNhdXNlIEkgbWFrZSBuZXcgZ29kcyBhbmQgZG8gbm90IGJlbGlldmUgaW4gdGhlIG9sZCBvbmVzLCBoZSBpbmRpY3RlZCBtZSBmb3IgdGhlIHNha2Ugb2YgdGhlc2Ugb2xkIG9uZXMsIGFzIGhlIHNheXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB1bmRlcnN0YW5kLCBTb2NyYXRlczsgIGl0IGlzIGJlY2F1c2UgeW91IHNheSB0aGUgZGl2aW5lIG1vbml0b3Iga2VlcHMgY29taW5nIHRvIHlvdS4gIFNvIGhlIGhhcyBicm91Z2h0IHRoZSBpbmRpY3RtZW50IGFnYWluc3QgeW91IGZvciBtYWtpbmcgaW5ub3ZhdGlvbnMgaW4gcmVsaWdpb24sIGFuZCBoZSBpcyBnb2luZyBpbnRvIGNvdXJ0IHRvIHNsYW5kZXIgeW91LCBrbm93aW5nIHRoYXQgc2xhbmRlcnMgb24gc3VjaCBzdWJqZWN0cyBhcmUgcmVhZGlseSBhY2NlcHRlZCBieSB0aGUgcGVvcGxlLiAgV2h5LCB0aGV5IGV2ZW4gbGF1Z2ggYXQgbWUgYW5kIHNheSBJIGFtIGNyYXp5CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzYyIgdW5pdD0ic2VjdGlvbiIgLz53aGVuIEkgc2F5IGFueXRoaW5nIGluIHRoZSBhc3NlbWJseSBhYm91dCBkaXZpbmUgdGhpbmdzIGFuZCBmb3JldGVsbCB0aGUgZnV0dXJlIHRvIHRoZW0uICBBbmQgeWV0IHRoZXJlIGlzIG5vdCBvbmUgb2YgdGhlIHRoaW5ncyBJIGhhdmUgZm9yZXRvbGQgdGhhdCBpcyBub3QgdHJ1ZTsgIGJ1dCB0aGV5IGFyZSBqZWFsb3VzIG9mIGFsbCBzdWNoIG1lbiBhcyB5b3UgYW5kIEkgYXJlLiAgSG93ZXZlciwgd2UgbXVzdCBub3QgYmUgZGlzdHVyYmVkLCBidXQgbXVzdCBjb21lIHRvIGNsb3NlIHF1YXJ0ZXJzIHdpdGggdGhlbS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdW5kZXJzdGFuZCwgU29jcmF0ZXM7ICBpdCBpcyBiZWNhdXNlIHlvdSBzYXkgdGhlIGRpdmluZSBtb25pdG9yIGtlZXBzIGNvbWluZyB0byB5b3UuICBTbyBoZSBoYXMgYnJvdWdodCB0aGUgaW5kaWN0bWVudCBhZ2FpbnN0IHlvdSBmb3IgbWFraW5nIGlubm92YXRpb25zIGluIHJlbGlnaW9uLCBhbmQgaGUgaXMgZ29pbmcgaW50byBjb3VydCB0byBzbGFuZGVyIHlvdSwga25vd2luZyB0aGF0IHNsYW5kZXJzIG9uIHN1Y2ggc3ViamVjdHMgYXJlIHJlYWRpbHkgYWNjZXB0ZWQgYnkgdGhlIHBlb3BsZS4gIFdoeSwgdGhleSBldmVuIGxhdWdoIGF0IG1lIGFuZCBzYXkgSSBhbSBjcmF6eQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iM2MiIHVuaXQ9InNlY3Rpb24iIC8+d2hlbiBJIHNheSBhbnl0aGluZyBpbiB0aGUgYXNzZW1ibHkgYWJvdXQgZGl2aW5lIHRoaW5ncyBhbmQgZm9yZXRlbGwgdGhlIGZ1dHVyZSB0byB0aGVtLiAgQW5kIHlldCB0aGVyZSBpcyBub3Qgb25lIG9mIHRoZSB0aGluZ3MgSSBoYXZlIGZvcmV0b2xkIHRoYXQgaXMgbm90IHRydWU7ICBidXQgdGhleSBhcmUgamVhbG91cyBvZiBhbGwgc3VjaCBtZW4gYXMgeW91IGFuZCBJIGFyZS4gIEhvd2V2ZXIsIHdlIG11c3Qgbm90IGJlIGRpc3R1cmJlZCwgYnV0IG11c3QgY29tZSB0byBjbG9zZSBxdWFydGVycyB3aXRoIHRoZW0uPC9wPjwvdHJhbnNsYXRpb24+"
translation['3.3c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzYyIgdW5pdD0ic2VjdGlvbiIgLz53aGVuIEkgc2F5IGFueXRoaW5nIGluIHRoZSBhc3NlbWJseSBhYm91dCBkaXZpbmUgdGhpbmdzIGFuZCBmb3JldGVsbCB0aGUgZnV0dXJlIHRvIHRoZW0uICBBbmQgeWV0IHRoZXJlIGlzIG5vdCBvbmUgb2YgdGhlIHRoaW5ncyBJIGhhdmUgZm9yZXRvbGQgdGhhdCBpcyBub3QgdHJ1ZTsgIGJ1dCB0aGV5IGFyZSBqZWFsb3VzIG9mIGFsbCBzdWNoIG1lbiBhcyB5b3UgYW5kIEkgYXJlLiAgSG93ZXZlciwgd2UgbXVzdCBub3QgYmUgZGlzdHVyYmVkLCBidXQgbXVzdCBjb21lIHRvIGNsb3NlIHF1YXJ0ZXJzIHdpdGggdGhlbS48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TXkgZGVhciBFdXRoeXBocm8sIHRoZWlyIHJpZGljdWxlIGlzIHBlcmhhcHMgb2Ygbm8gY29uc2VxdWVuY2UuICBGb3IgdGhlIEF0aGVuaWFucywgSSBmYW5jeSwgYXJlIG5vdCBtdWNoIGNvbmNlcm5lZCwgaWYgdGhleSB0aGluayBhIG1hbiBpcyBjbGV2ZXIsIHByb3ZpZGVkIGhlIGRvZXMgbm90IGltcGFydCBoaXMgY2xldmVyIG5vdGlvbnMgdG8gb3RoZXJzOyAgYnV0IHdoZW4gdGhleSB0aGluayBoZSBtYWtlcyBvdGhlcnMgdG8gYmUgbGlrZSBoaW1zZWxmLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iM2QiIHVuaXQ9InNlY3Rpb24iIC8+dGhleSBhcmUgYW5ncnkgd2l0aCBoaW0sIGVpdGhlciB0aHJvdWdoIGplYWxvdXN5LCBhcyB5b3Ugc2F5LCBvciBmb3Igc29tZSBvdGhlciByZWFzb24uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk15IGRlYXIgRXV0aHlwaHJvLCB0aGVpciByaWRpY3VsZSBpcyBwZXJoYXBzIG9mIG5vIGNvbnNlcXVlbmNlLiAgRm9yIHRoZSBBdGhlbmlhbnMsIEkgZmFuY3ksIGFyZSBub3QgbXVjaCBjb25jZXJuZWQsIGlmIHRoZXkgdGhpbmsgYSBtYW4gaXMgY2xldmVyLCBwcm92aWRlZCBoZSBkb2VzIG5vdCBpbXBhcnQgaGlzIGNsZXZlciBub3Rpb25zIHRvIG90aGVyczsgIGJ1dCB3aGVuIHRoZXkgdGhpbmsgaGUgbWFrZXMgb3RoZXJzIHRvIGJlIGxpa2UgaGltc2VsZiwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjNkIiB1bml0PSJzZWN0aW9uIiAvPnRoZXkgYXJlIGFuZ3J5IHdpdGggaGltLCBlaXRoZXIgdGhyb3VnaCBqZWFsb3VzeSwgYXMgeW91IHNheSwgb3IgZm9yIHNvbWUgb3RoZXIgcmVhc29uLjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['3.3d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzZCIgdW5pdD0ic2VjdGlvbiIgLz50aGV5IGFyZSBhbmdyeSB3aXRoIGhpbSwgZWl0aGVyIHRocm91Z2ggamVhbG91c3ksIGFzIHlvdSBzYXksIG9yIGZvciBzb21lIG90aGVyIHJlYXNvbi48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgZG9uJ3QgbXVjaCBkZXNpcmUgdG8gdGVzdCB0aGVpciBzZW50aW1lbnRzIHRvd2FyZCBtZSBpbiB0aGlzIG1hdHRlci48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgZG9uJ3QgbXVjaCBkZXNpcmUgdG8gdGVzdCB0aGVpciBzZW50aW1lbnRzIHRvd2FyZCBtZSBpbiB0aGlzIG1hdHRlci48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vLCBmb3IgcGVyaGFwcyB0aGV5IHRoaW5rIHRoYXQgeW91IGFyZSByZXNlcnZlZCBhbmQgdW53aWxsaW5nIHRvIGltcGFydCB5b3VyIHdpc2RvbS4gIEJ1dCBJIGZlYXIgdGhhdCBiZWNhdXNlIG9mIG15IGxvdmUgb2YgbWVuIHRoZXkgdGhpbmsgdGhhdCBJIG5vdCBvbmx5IHBvdXIgbXlzZWxmIG91dCBjb3Bpb3VzbHkgdG8gYW55b25lIGFuZCBldmVyeW9uZSB3aXRob3V0IHBheW1lbnQsIGJ1dCB0aGF0IEkgd291bGQgZXZlbiBwYXkgc29tZXRoaW5nIG15c2VsZiwgaWYgYW55b25lIHdvdWxkIGxpc3RlbiB0byBtZS4gIE5vdyBpZiwgYXMgSSB3YXMgc2F5aW5nIGp1c3Qgbm93LCB0aGV5IHdlcmUgdG8gbGF1Z2ggYXQgbWUsIGFzIHlvdSBzYXkgdGhleSBkbyBhdCB5b3UsIGl0IHdvdWxkIG5vdCBiZSBhdCBhbGwgdW5wbGVhc2FudAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iM2UiIHVuaXQ9InNlY3Rpb24iIC8+dG8gcGFzcyB0aGUgdGltZSBpbiB0aGUgY291cnQgd2l0aCBqZXN0cyBhbmQgbGF1Z2h0ZXI7ICBidXQgaWYgdGhleSBhcmUgaW4gZWFybmVzdCwgdGhlbiBvbmx5IHNvb3Roc2F5ZXJzIGxpa2UgeW91IGNhbiB0ZWxsIGhvdyB0aGlzIHdpbGwgZW5kLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ObywgZm9yIHBlcmhhcHMgdGhleSB0aGluayB0aGF0IHlvdSBhcmUgcmVzZXJ2ZWQgYW5kIHVud2lsbGluZyB0byBpbXBhcnQgeW91ciB3aXNkb20uICBCdXQgSSBmZWFyIHRoYXQgYmVjYXVzZSBvZiBteSBsb3ZlIG9mIG1lbiB0aGV5IHRoaW5rIHRoYXQgSSBub3Qgb25seSBwb3VyIG15c2VsZiBvdXQgY29waW91c2x5IHRvIGFueW9uZSBhbmQgZXZlcnlvbmUgd2l0aG91dCBwYXltZW50LCBidXQgdGhhdCBJIHdvdWxkIGV2ZW4gcGF5IHNvbWV0aGluZyBteXNlbGYsIGlmIGFueW9uZSB3b3VsZCBsaXN0ZW4gdG8gbWUuICBOb3cgaWYsIGFzIEkgd2FzIHNheWluZyBqdXN0IG5vdywgdGhleSB3ZXJlIHRvIGxhdWdoIGF0IG1lLCBhcyB5b3Ugc2F5IHRoZXkgZG8gYXQgeW91LCBpdCB3b3VsZCBub3QgYmUgYXQgYWxsIHVucGxlYXNhbnQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjNlIiB1bml0PSJzZWN0aW9uIiAvPnRvIHBhc3MgdGhlIHRpbWUgaW4gdGhlIGNvdXJ0IHdpdGggamVzdHMgYW5kIGxhdWdodGVyOyAgYnV0IGlmIHRoZXkgYXJlIGluIGVhcm5lc3QsIHRoZW4gb25seSBzb290aHNheWVycyBsaWtlIHlvdSBjYW4gdGVsbCBob3cgdGhpcyB3aWxsIGVuZC48L3A+PC90cmFuc2xhdGlvbj4="
translation['3.3e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzZSIgdW5pdD0ic2VjdGlvbiIgLz50byBwYXNzIHRoZSB0aW1lIGluIHRoZSBjb3VydCB3aXRoIGplc3RzIGFuZCBsYXVnaHRlcjsgIGJ1dCBpZiB0aGV5IGFyZSBpbiBlYXJuZXN0LCB0aGVuIG9ubHkgc29vdGhzYXllcnMgbGlrZSB5b3UgY2FuIHRlbGwgaG93IHRoaXMgd2lsbCBlbmQuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsLCBTb2NyYXRlcywgcGVyaGFwcyBpdCB3b24ndCBhbW91bnQgdG8gbXVjaCwgYW5kIHlvdSB3aWxsIGJyaW5nIHlvdXIgY2FzZSB0byBhIHNhdGlzZmFjdG9yeSBlbmRpbmcsIGFzIEkgdGhpbmsgSSBzaGFsbCBtaW5lLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgU29jcmF0ZXMsIHBlcmhhcHMgaXQgd29uJ3QgYW1vdW50IHRvIG11Y2gsIGFuZCB5b3Ugd2lsbCBicmluZyB5b3VyIGNhc2UgdG8gYSBzYXRpc2ZhY3RvcnkgZW5kaW5nLCBhcyBJIHRoaW5rIEkgc2hhbGwgbWluZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgaXMgeW91ciBjYXNlLCBFdXRoeXBocm8/IEFyZSB5b3UgZGVmZW5kaW5nIG9yIHByb3NlY3V0aW5nPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IGlzIHlvdXIgY2FzZSwgRXV0aHlwaHJvPyBBcmUgeW91IGRlZmVuZGluZyBvciBwcm9zZWN1dGluZz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Qcm9zZWN1dGluZy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlByb3NlY3V0aW5nLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hvbT8KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI0YSIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hvbT8KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI0YSIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC90cmFuc2xhdGlvbj4="
translation['4.4a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0YSIgdW5pdD0ic2VjdGlvbiIgLz48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlN1Y2ggYSBtYW4gdGhhdCB0aGV5IHRoaW5rIEkgYW0gaW5zYW5lIGJlY2F1c2UgSSBhbSBwcm9zZWN1dGluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgR3JlZWsgd29yZCBoYXMgbXVjaCB0aGUgc2FtZSBtZWFuaW5nIGFzIHRoZSBMYXRpbiDigJxwcm9zZXF1b3Is4oCdIGZyb20gd2hpY2ggdGhlIEVuZ2xpc2ggJ3Byb3NlY3V0ZScgaXMgZGVyaXZlZCwgJ2ZvbGxvdywnICdwdXJzdWUsJyBhbmQgaXMgYXQgdGhlIHNhbWUgdGltZSB0aGUgdGVjaG5pY2FsIHRlcm0gZm9yICdwcm9zZWN1dGUuJzwvbm90ZT4gaGltLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U3VjaCBhIG1hbiB0aGF0IHRoZXkgdGhpbmsgSSBhbSBpbnNhbmUgYmVjYXVzZSBJIGFtIHByb3NlY3V0aW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBHcmVlayB3b3JkIGhhcyBtdWNoIHRoZSBzYW1lIG1lYW5pbmcgYXMgdGhlIExhdGluIOKAnHByb3NlcXVvcizigJ0gZnJvbSB3aGljaCB0aGUgRW5nbGlzaCAncHJvc2VjdXRlJyBpcyBkZXJpdmVkLCAnZm9sbG93LCcgJ3B1cnN1ZSwnIGFuZCBpcyBhdCB0aGUgc2FtZSB0aW1lIHRoZSB0ZWNobmljYWwgdGVybSBmb3IgJ3Byb3NlY3V0ZS4nPC9ub3RlPiBoaW0uPC9wPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgR3JlZWsgd29yZCBoYXMgbXVjaCB0aGUgc2FtZSBtZWFuaW5nIGFzIHRoZSBMYXRpbiDigJxwcm9zZXF1b3Is4oCdIGZyb20gd2hpY2ggdGhlIEVuZ2xpc2ggJ3Byb3NlY3V0ZScgaXMgZGVyaXZlZCwgJ2ZvbGxvdywnICdwdXJzdWUsJyBhbmQgaXMgYXQgdGhlIHNhbWUgdGltZSB0aGUgdGVjaG5pY2FsIHRlcm0gZm9yICdwcm9zZWN1dGUuJzwvbm90ZT4gaGltLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaHk/ICBBcmUgeW91IHByb3NlY3V0aW5nIG9uZSB3aG8gaGFzIHdpbmdzIHRvIGZseSBhd2F5IHdpdGg/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoeT8gIEFyZSB5b3UgcHJvc2VjdXRpbmcgb25lIHdobyBoYXMgd2luZ3MgdG8gZmx5IGF3YXkgd2l0aD88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ObyBmbHlpbmcgZm9yIGhpbSBhdCBoaXMgcmlwZSBvbGQgYWdlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm8gZmx5aW5nIGZvciBoaW0gYXQgaGlzIHJpcGUgb2xkIGFnZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldobyBpcyBoZT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hvIGlzIGhlPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk15IGZhdGhlci48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk15IGZhdGhlci48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPllvdXIgZmF0aGVyLCBteSBkZWFyIG1hbj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WW91ciBmYXRoZXIsIG15IGRlYXIgbWFuPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCB3aGF0IGlzIHRoZSBjaGFyZ2UsIGFuZCB3aGF0IGlzIHRoZSBzdWl0IGFib3V0PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgd2hhdCBpcyB0aGUgY2hhcmdlLCBhbmQgd2hhdCBpcyB0aGUgc3VpdCBhYm91dD88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5NdXJkZXIsIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TXVyZGVyLCBTb2NyYXRlcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkhlcmFjbGVzISAgU3VyZWx5LCBFdXRoeXBocm8sIG1vc3QgcGVvcGxlIGRvIG5vdCBrbm93IHdoZXJlIHRoZSByaWdodCBsaWVzOyAgZm9yIEkgZmFuY3kgaXQgaXMgbm90IGV2ZXJ5b25lIHdobyBjYW4gcmlnaHRseSBkbyB3aGF0IHlvdSBhcmUgZG9pbmcsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0YiIgdW5pdD0ic2VjdGlvbiIgLz5idXQgb25seSBvbmUgd2hvIGlzIGFscmVhZHkgdmVyeSBmYXIgYWR2YW5jZWQgaW4gd2lzZG9tLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5IZXJhY2xlcyEgIFN1cmVseSwgRXV0aHlwaHJvLCBtb3N0IHBlb3BsZSBkbyBub3Qga25vdyB3aGVyZSB0aGUgcmlnaHQgbGllczsgIGZvciBJIGZhbmN5IGl0IGlzIG5vdCBldmVyeW9uZSB3aG8gY2FuIHJpZ2h0bHkgZG8gd2hhdCB5b3UgYXJlIGRvaW5nLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNGIiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IG9ubHkgb25lIHdobyBpcyBhbHJlYWR5IHZlcnkgZmFyIGFkdmFuY2VkIGluIHdpc2RvbS48L3A+PC90cmFuc2xhdGlvbj4="
translation['4.4b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0YiIgdW5pdD0ic2VjdGlvbiIgLz5idXQgb25seSBvbmUgd2hvIGlzIGFscmVhZHkgdmVyeSBmYXIgYWR2YW5jZWQgaW4gd2lzZG9tLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VmVyeSBmYXIsIGluZGVlZCwgU29jcmF0ZXMsIGJ5IFpldXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5WZXJ5IGZhciwgaW5kZWVkLCBTb2NyYXRlcywgYnkgWmV1cy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklzIHRoZSBvbmUgd2hvIHdhcyBraWxsZWQgYnkgeW91ciBmYXRoZXIgYSByZWxhdGl2ZT8gIEJ1dCBvZiBjb3Vyc2UgaGUgd2FzOyAgZm9yIHlvdSB3b3VsZCBub3QgYnJpbmcgYSBjaGFyZ2Ugb2YgbXVyZGVyIGFnYWluc3QgaGltIG9uIGEgc3RyYW5nZXIncyBhY2NvdW50LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JcyB0aGUgb25lIHdobyB3YXMga2lsbGVkIGJ5IHlvdXIgZmF0aGVyIGEgcmVsYXRpdmU/ICBCdXQgb2YgY291cnNlIGhlIHdhczsgIGZvciB5b3Ugd291bGQgbm90IGJyaW5nIGEgY2hhcmdlIG9mIG11cmRlciBhZ2FpbnN0IGhpbSBvbiBhIHN0cmFuZ2VyJ3MgYWNjb3VudC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JdCBpcyByaWRpY3Vsb3VzLCBTb2NyYXRlcywgdGhhdCB5b3UgdGhpbmsgaXQgbWF0dGVycyB3aGV0aGVyIHRoZSBtYW4gd2hvIHdhcyBraWxsZWQgd2FzIGEgc3RyYW5nZXIgb3IgYSByZWxhdGl2ZSwgYW5kIGRvIG5vdCBzZWUgdGhhdCB0aGUgb25seSB0aGluZyB0byBjb25zaWRlciBpcyB3aGV0aGVyIHRoZSBhY3Rpb24gb2YgdGhlIHNsYXllciB3YXMganVzdGlmaWVkIG9yIG5vdCwgYW5kIHRoYXQgaWYgaXQgd2FzIGp1c3RpZmllZCBvbmUgb3VnaHQgdG8gbGV0IGhpbSBhbG9uZSwgYW5kIGlmIG5vdCwgb25lIG91Z2h0IHRvIHByb2NlZWQgYWdhaW5zdCBoaW0sIGV2ZW4gaWYgaGUgc2hhcmUgb25lJ3MgaGVhcnRoCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0YyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgZWF0IGF0IG9uZSdzIHRhYmxlLiAgRm9yIHRoZSBwb2xsdXRpb24gaXMgdGhlIHNhbWUgaWYgeW91IGFzc29jaWF0ZSBrbm93aW5nbHkgd2l0aCBzdWNoIGEgbWFuIGFuZCBkbyBub3QgcHVyaWZ5IHlvdXJzZWxmIGFuZCBoaW0gYnkgcHJvY2VlZGluZyBhZ2FpbnN0IGhpbS4gIEluIHRoaXMgY2FzZSwgdGhlIG1hbiB3aG8gd2FzIGtpbGxlZCB3YXMgYSBoaXJlZCB3b3JrbWFuIG9mIG1pbmUsIGFuZCB3aGVuIHdlIHdlcmUgZmFybWluZyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzkwOSIga2V5PSJ0Z24sNzAwMzkwOSI+TmF4b3M8L3BsYWNlTmFtZT4sIGhlIHdhcyB3b3JraW5nIHRoZXJlIG9uIG91ciBsYW5kLiAgTm93IGhlIGdvdCBkcnVuaywgZ290IGFuZ3J5IHdpdGggb25lIG9mIG91ciBob3VzZSBzbGF2ZXMsIGFuZCBidXRjaGVyZWQgaGltLiAgU28gbXkgZmF0aGVyIGJvdW5kIGhpbSBoYW5kIGFuZCBmb290LCB0aHJldyBoaW0gaW50byBhIGRpdGNoLCBhbmQgc2VudCBhIG1hbiBoZXJlIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzkzIiBrZXk9InRnbiw3MDAxMzkzIj5BdGhlbnM8L3BsYWNlTmFtZT4gdG8gYXNrIHRoZSByZWxpZ2lvdXMgYWR2aXNlciB3aGF0IGhlIG91Z2h0CjxtaWxlc3RvbmUgbj0iNGQiIHVuaXQ9InNlY3Rpb24iIC8+dG8gZG8uICBJbiB0aGUgbWVhbnRpbWUgaGUgcGFpZCBubyBhdHRlbnRpb24gdG8gdGhlIG1hbiBhcyBoZSBsYXkgdGhlcmUgYm91bmQsIGFuZCBuZWdsZWN0ZWQgaGltLCB0aGlua2luZyB0aGF0IGhlIHdhcyBhIG11cmRlcmVyIGFuZCBpdCBkaWQgbm90IG1hdHRlciBpZiBoZSB3ZXJlIHRvIGRpZS4gIEFuZCB0aGF0IGlzIGp1c3Qgd2hhdCBoYXBwZW5lZCB0byBoaW0uICBGb3IgaGUgZGllZCBvZiBodW5nZXIgYW5kIGNvbGQgYW5kIGhpcyBib25kcyBiZWZvcmUgdGhlIG1lc3NlbmdlciBjYW1lIGJhY2sgZnJvbSB0aGUgYWR2aXNlci4gIE5vdyBteSBmYXRoZXIgYW5kIHRoZSByZXN0IG9mIG15IHJlbGF0aXZlcyBhcmUgYW5ncnkgd2l0aCBtZSwgYmVjYXVzZSBmb3IgdGhlIHNha2Ugb2YgdGhpcyBtdXJkZXJlciBJIGFtIHByb3NlY3V0aW5nIG15IGZhdGhlciBmb3IgbXVyZGVyLiAgRm9yIHRoZXkgc2F5IGhlIGRpZCBub3Qga2lsbCBoaW0sIGFuZCBpZiBoZSBoYWQga2lsbGVkIGhpbSBuZXZlciBzbyBtdWNoLCB5ZXQgc2luY2UgdGhlIGRlYWQgbWFuIHdhcyBhIG11cmRlcmVyLCBJIG91Z2h0IG5vdCB0byB0cm91YmxlIG15c2VsZiBhYm91dCBzdWNoIGEgZmVsbG93LAo8bWlsZXN0b25lIG49IjRlIiB1bml0PSJzZWN0aW9uIiAvPmJlY2F1c2UgaXQgaXMgdW5ob2x5IGZvciBhIHNvbiB0byBwcm9zZWN1dGUgaGlzIGZhdGhlciBmb3IgbXVyZGVyLiAgV2hpY2ggc2hvd3MgaG93IGxpdHRsZSB0aGV5IGtub3cgd2hhdCB0aGUgZGl2aW5lIGxhdyBpcyBpbiByZWdhcmQgdG8gaG9saW5lc3MgYW5kIHVuaG9saW5lc3MuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JdCBpcyByaWRpY3Vsb3VzLCBTb2NyYXRlcywgdGhhdCB5b3UgdGhpbmsgaXQgbWF0dGVycyB3aGV0aGVyIHRoZSBtYW4gd2hvIHdhcyBraWxsZWQgd2FzIGEgc3RyYW5nZXIgb3IgYSByZWxhdGl2ZSwgYW5kIGRvIG5vdCBzZWUgdGhhdCB0aGUgb25seSB0aGluZyB0byBjb25zaWRlciBpcyB3aGV0aGVyIHRoZSBhY3Rpb24gb2YgdGhlIHNsYXllciB3YXMganVzdGlmaWVkIG9yIG5vdCwgYW5kIHRoYXQgaWYgaXQgd2FzIGp1c3RpZmllZCBvbmUgb3VnaHQgdG8gbGV0IGhpbSBhbG9uZSwgYW5kIGlmIG5vdCwgb25lIG91Z2h0IHRvIHByb2NlZWQgYWdhaW5zdCBoaW0sIGV2ZW4gaWYgaGUgc2hhcmUgb25lJ3MgaGVhcnRoCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0YyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgZWF0IGF0IG9uZSdzIHRhYmxlLiAgRm9yIHRoZSBwb2xsdXRpb24gaXMgdGhlIHNhbWUgaWYgeW91IGFzc29jaWF0ZSBrbm93aW5nbHkgd2l0aCBzdWNoIGEgbWFuIGFuZCBkbyBub3QgcHVyaWZ5IHlvdXJzZWxmIGFuZCBoaW0gYnkgcHJvY2VlZGluZyBhZ2FpbnN0IGhpbS4gIEluIHRoaXMgY2FzZSwgdGhlIG1hbiB3aG8gd2FzIGtpbGxlZCB3YXMgYSBoaXJlZCB3b3JrbWFuIG9mIG1pbmUsIGFuZCB3aGVuIHdlIHdlcmUgZmFybWluZyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzkwOSIga2V5PSJ0Z24sNzAwMzkwOSI+TmF4b3M8L3BsYWNlTmFtZT4sIGhlIHdhcyB3b3JraW5nIHRoZXJlIG9uIG91ciBsYW5kLiAgTm93IGhlIGdvdCBkcnVuaywgZ290IGFuZ3J5IHdpdGggb25lIG9mIG91ciBob3VzZSBzbGF2ZXMsIGFuZCBidXRjaGVyZWQgaGltLiAgU28gbXkgZmF0aGVyIGJvdW5kIGhpbSBoYW5kIGFuZCBmb290LCB0aHJldyBoaW0gaW50byBhIGRpdGNoLCBhbmQgc2VudCBhIG1hbiBoZXJlIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzkzIiBrZXk9InRnbiw3MDAxMzkzIj5BdGhlbnM8L3BsYWNlTmFtZT4gdG8gYXNrIHRoZSByZWxpZ2lvdXMgYWR2aXNlciB3aGF0IGhlIG91Z2h0CjxtaWxlc3RvbmUgbj0iNGQiIHVuaXQ9InNlY3Rpb24iIC8+dG8gZG8uICBJbiB0aGUgbWVhbnRpbWUgaGUgcGFpZCBubyBhdHRlbnRpb24gdG8gdGhlIG1hbiBhcyBoZSBsYXkgdGhlcmUgYm91bmQsIGFuZCBuZWdsZWN0ZWQgaGltLCB0aGlua2luZyB0aGF0IGhlIHdhcyBhIG11cmRlcmVyIGFuZCBpdCBkaWQgbm90IG1hdHRlciBpZiBoZSB3ZXJlIHRvIGRpZS4gIEFuZCB0aGF0IGlzIGp1c3Qgd2hhdCBoYXBwZW5lZCB0byBoaW0uICBGb3IgaGUgZGllZCBvZiBodW5nZXIgYW5kIGNvbGQgYW5kIGhpcyBib25kcyBiZWZvcmUgdGhlIG1lc3NlbmdlciBjYW1lIGJhY2sgZnJvbSB0aGUgYWR2aXNlci4gIE5vdyBteSBmYXRoZXIgYW5kIHRoZSByZXN0IG9mIG15IHJlbGF0aXZlcyBhcmUgYW5ncnkgd2l0aCBtZSwgYmVjYXVzZSBmb3IgdGhlIHNha2Ugb2YgdGhpcyBtdXJkZXJlciBJIGFtIHByb3NlY3V0aW5nIG15IGZhdGhlciBmb3IgbXVyZGVyLiAgRm9yIHRoZXkgc2F5IGhlIGRpZCBub3Qga2lsbCBoaW0sIGFuZCBpZiBoZSBoYWQga2lsbGVkIGhpbSBuZXZlciBzbyBtdWNoLCB5ZXQgc2luY2UgdGhlIGRlYWQgbWFuIHdhcyBhIG11cmRlcmVyLCBJIG91Z2h0IG5vdCB0byB0cm91YmxlIG15c2VsZiBhYm91dCBzdWNoIGEgZmVsbG93LAo8bWlsZXN0b25lIG49IjRlIiB1bml0PSJzZWN0aW9uIiAvPmJlY2F1c2UgaXQgaXMgdW5ob2x5IGZvciBhIHNvbiB0byBwcm9zZWN1dGUgaGlzIGZhdGhlciBmb3IgbXVyZGVyLiAgV2hpY2ggc2hvd3MgaG93IGxpdHRsZSB0aGV5IGtub3cgd2hhdCB0aGUgZGl2aW5lIGxhdyBpcyBpbiByZWdhcmQgdG8gaG9saW5lc3MgYW5kIHVuaG9saW5lc3MuPC9wPjwvdHJhbnNsYXRpb24+"
translation['4.4c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0YyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgZWF0IGF0IG9uZSdzIHRhYmxlLiAgRm9yIHRoZSBwb2xsdXRpb24gaXMgdGhlIHNhbWUgaWYgeW91IGFzc29jaWF0ZSBrbm93aW5nbHkgd2l0aCBzdWNoIGEgbWFuIGFuZCBkbyBub3QgcHVyaWZ5IHlvdXJzZWxmIGFuZCBoaW0gYnkgcHJvY2VlZGluZyBhZ2FpbnN0IGhpbS4gIEluIHRoaXMgY2FzZSwgdGhlIG1hbiB3aG8gd2FzIGtpbGxlZCB3YXMgYSBoaXJlZCB3b3JrbWFuIG9mIG1pbmUsIGFuZCB3aGVuIHdlIHdlcmUgZmFybWluZyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzkwOSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAzOTA5Ij5OYXhvczwvcGxhY2VOYW1lPiwgaGUgd2FzIHdvcmtpbmcgdGhlcmUgb24gb3VyIGxhbmQuICBOb3cgaGUgZ290IGRydW5rLCBnb3QgYW5ncnkgd2l0aCBvbmUgb2Ygb3VyIGhvdXNlIHNsYXZlcywgYW5kIGJ1dGNoZXJlZCBoaW0uICBTbyBteSBmYXRoZXIgYm91bmQgaGltIGhhbmQgYW5kIGZvb3QsIHRocmV3IGhpbSBpbnRvIGEgZGl0Y2gsIGFuZCBzZW50IGEgbWFuIGhlcmUgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMTM5MyI+QXRoZW5zPC9wbGFjZU5hbWU+IHRvIGFzayB0aGUgcmVsaWdpb3VzIGFkdmlzZXIgd2hhdCBoZSBvdWdodAo8L3RyYW5zbGF0aW9uPg=="
translation['4.4d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0ZCIgdW5pdD0ic2VjdGlvbiIgLz50byBkby4gIEluIHRoZSBtZWFudGltZSBoZSBwYWlkIG5vIGF0dGVudGlvbiB0byB0aGUgbWFuIGFzIGhlIGxheSB0aGVyZSBib3VuZCwgYW5kIG5lZ2xlY3RlZCBoaW0sIHRoaW5raW5nIHRoYXQgaGUgd2FzIGEgbXVyZGVyZXIgYW5kIGl0IGRpZCBub3QgbWF0dGVyIGlmIGhlIHdlcmUgdG8gZGllLiAgQW5kIHRoYXQgaXMganVzdCB3aGF0IGhhcHBlbmVkIHRvIGhpbS4gIEZvciBoZSBkaWVkIG9mIGh1bmdlciBhbmQgY29sZCBhbmQgaGlzIGJvbmRzIGJlZm9yZSB0aGUgbWVzc2VuZ2VyIGNhbWUgYmFjayBmcm9tIHRoZSBhZHZpc2VyLiAgTm93IG15IGZhdGhlciBhbmQgdGhlIHJlc3Qgb2YgbXkgcmVsYXRpdmVzIGFyZSBhbmdyeSB3aXRoIG1lLCBiZWNhdXNlIGZvciB0aGUgc2FrZSBvZiB0aGlzIG11cmRlcmVyIEkgYW0gcHJvc2VjdXRpbmcgbXkgZmF0aGVyIGZvciBtdXJkZXIuICBGb3IgdGhleSBzYXkgaGUgZGlkIG5vdCBraWxsIGhpbSwgYW5kIGlmIGhlIGhhZCBraWxsZWQgaGltIG5ldmVyIHNvIG11Y2gsIHlldCBzaW5jZSB0aGUgZGVhZCBtYW4gd2FzIGEgbXVyZGVyZXIsIEkgb3VnaHQgbm90IHRvIHRyb3VibGUgbXlzZWxmIGFib3V0IHN1Y2ggYSBmZWxsb3csCjwvdHJhbnNsYXRpb24+"
translation['4.4e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0ZSIgdW5pdD0ic2VjdGlvbiIgLz5iZWNhdXNlIGl0IGlzIHVuaG9seSBmb3IgYSBzb24gdG8gcHJvc2VjdXRlIGhpcyBmYXRoZXIgZm9yIG11cmRlci4gIFdoaWNoIHNob3dzIGhvdyBsaXR0bGUgdGhleSBrbm93IHdoYXQgdGhlIGRpdmluZSBsYXcgaXMgaW4gcmVnYXJkIHRvIGhvbGluZXNzIGFuZCB1bmhvbGluZXNzLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQsIGluIHRoZSBuYW1lIG9mIFpldXMsIEV1dGh5cGhybywgZG8geW91IHRoaW5rIHlvdXIga25vd2xlZGdlIGFib3V0IGRpdmluZSBsYXdzIGFuZCBob2xpbmVzcyBhbmQgdW5ob2xpbmVzcyBpcyBzbyBleGFjdCB0aGF0LCB3aGVuIHRoZSBmYWN0cyBhcmUgYXMgeW91IHNheSwgeW91IGFyZSBub3QgYWZyYWlkIG9mIGRvaW5nIHNvbWV0aGluZyB1bmhvbHkgeW91cnNlbGYgaW4gcHJvc2VjdXRpbmcgeW91ciBmYXRoZXIgZm9yIG11cmRlcj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0LCBpbiB0aGUgbmFtZSBvZiBaZXVzLCBFdXRoeXBocm8sIGRvIHlvdSB0aGluayB5b3VyIGtub3dsZWRnZSBhYm91dCBkaXZpbmUgbGF3cyBhbmQgaG9saW5lc3MgYW5kIHVuaG9saW5lc3MgaXMgc28gZXhhY3QgdGhhdCwgd2hlbiB0aGUgZmFjdHMgYXJlIGFzIHlvdSBzYXksIHlvdSBhcmUgbm90IGFmcmFpZCBvZiBkb2luZyBzb21ldGhpbmcgdW5ob2x5IHlvdXJzZWxmIGluIHByb3NlY3V0aW5nIHlvdXIgZmF0aGVyIGZvciBtdXJkZXI/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBzaG91bGQgYmUgb2Ygbm8gdXNlLCBTb2NyYXRlcywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjUiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI1YSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgRXV0aHlwaHJvIHdvdWxkIGJlIGluIG5vIHdheSBkaWZmZXJlbnQgZnJvbSBvdGhlciBtZW4sIGlmIEkgZGlkIG5vdCBoYXZlIGV4YWN0IGtub3dsZWRnZSBhYm91dCBhbGwgc3VjaCB0aGluZ3MuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHNob3VsZCBiZSBvZiBubyB1c2UsIFNvY3JhdGVzLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjVhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBFdXRoeXBocm8gd291bGQgYmUgaW4gbm8gd2F5IGRpZmZlcmVudCBmcm9tIG90aGVyIG1lbiwgaWYgSSBkaWQgbm90IGhhdmUgZXhhY3Qga25vd2xlZGdlIGFib3V0IGFsbCBzdWNoIHRoaW5ncy48L3A+PC90cmFuc2xhdGlvbj4="
translation['5.5a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1YSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgRXV0aHlwaHJvIHdvdWxkIGJlIGluIG5vIHdheSBkaWZmZXJlbnQgZnJvbSBvdGhlciBtZW4sIGlmIEkgZGlkIG5vdCBoYXZlIGV4YWN0IGtub3dsZWRnZSBhYm91dCBhbGwgc3VjaCB0aGluZ3MuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gdGhlIGJlc3QgdGhpbmcgZm9yIG1lLCBteSBhZG1pcmFibGUgRXV0aHlwaHJvLCBpcyB0byBiZWNvbWUgeW91ciBwdXBpbCBhbmQsIGJlZm9yZSB0aGUgc3VpdCB3aXRoIE1lbGV0dXMgY29tZXMgb24sIHRvIGNoYWxsZW5nZSBoaW0gYW5kIHNheSB0aGF0IEkgYWx3YXlzIHRob3VnaHQgaXQgdmVyeSBpbXBvcnRhbnQgYmVmb3JlIHRvIGtub3cgYWJvdXQgZGl2aW5lIG1hdHRlcnMgYW5kIHRoYXQgbm93LCBzaW5jZSBoZSBzYXlzIEkgYW0gZG9pbmcgd3JvbmcgYnkgYWN0aW5nIGNhcmVsZXNzbHkgYW5kIG1ha2luZyBpbm5vdmF0aW9ucyBpbiBtYXR0ZXJzIG9mIHJlbGlnaW9uLCBJIGhhdmUgYmVjb21lIHlvdXIgcHVwaWwuICBBbmQg4oCcTWVsZXR1cyzigJ0gSSBzaG91bGQgc2F5LAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNWIiIHVuaXQ9InNlY3Rpb24iIC8+4oCcaWYgeW91IGFja25vd2xlZGdlIHRoYXQgRXV0aHlwaHJvIGlzIHdpc2UgaW4gc3VjaCBtYXR0ZXJzLCB0aGVuIGJlbGlldmUgdGhhdCBJIGFsc28gaG9sZCBjb3JyZWN0IG9waW5pb25zLCBhbmQgZG8gbm90IGJyaW5nIG1lIHRvIHRyaWFsOyAgYW5kIGlmIHlvdSBkbyBub3QgYWNrbm93bGVkZ2UgdGhhdCwgdGhlbiBicmluZyBhIHN1aXQgYWdhaW5zdCBoaW0sIG15IHRlYWNoZXIsIHJhdGhlciB0aGFuIGFnYWluc3QgbWUsIGFuZCBjaGFyZ2UgaGltIHdpdGggY29ycnVwdGluZyB0aGUgb2xkLCBuYW1lbHksIGhpcyBmYXRoZXIgYW5kIG1lLCB3aGljaCBoZSBkb2VzIGJ5IHRlYWNoaW5nIG1lIGFuZCBieSBjb3JyZWN0aW5nIGFuZCBwdW5pc2hpbmcgaGlzIGZhdGhlci7igJ0gIEFuZCBpZiBoZSBkb2VzIG5vdCBkbyBhcyBJIGFzayBhbmQgZG9lcyBub3QgcmVsZWFzZSBtZSBmcm9tIHRoZSBpbmRpY3RtZW50IG9yIGJyaW5nIGl0IGFnYWluc3QgeW91IGluIG15IHN0ZWFkLCBJIGNvdWxkIHNheSBpbiB0aGUgY291cnQgdGhlIHNhbWUgdGhpbmdzIEkgc2FpZCBpbiBteSBjaGFsbGVuZ2UgdG8gaGltLCBjb3VsZCBJIG5vdD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB0aGUgYmVzdCB0aGluZyBmb3IgbWUsIG15IGFkbWlyYWJsZSBFdXRoeXBocm8sIGlzIHRvIGJlY29tZSB5b3VyIHB1cGlsIGFuZCwgYmVmb3JlIHRoZSBzdWl0IHdpdGggTWVsZXR1cyBjb21lcyBvbiwgdG8gY2hhbGxlbmdlIGhpbSBhbmQgc2F5IHRoYXQgSSBhbHdheXMgdGhvdWdodCBpdCB2ZXJ5IGltcG9ydGFudCBiZWZvcmUgdG8ga25vdyBhYm91dCBkaXZpbmUgbWF0dGVycyBhbmQgdGhhdCBub3csIHNpbmNlIGhlIHNheXMgSSBhbSBkb2luZyB3cm9uZyBieSBhY3RpbmcgY2FyZWxlc3NseSBhbmQgbWFraW5nIGlubm92YXRpb25zIGluIG1hdHRlcnMgb2YgcmVsaWdpb24sIEkgaGF2ZSBiZWNvbWUgeW91ciBwdXBpbC4gIEFuZCDigJxNZWxldHVzLOKAnSBJIHNob3VsZCBzYXksCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1YiIgdW5pdD0ic2VjdGlvbiIgLz7igJxpZiB5b3UgYWNrbm93bGVkZ2UgdGhhdCBFdXRoeXBocm8gaXMgd2lzZSBpbiBzdWNoIG1hdHRlcnMsIHRoZW4gYmVsaWV2ZSB0aGF0IEkgYWxzbyBob2xkIGNvcnJlY3Qgb3BpbmlvbnMsIGFuZCBkbyBub3QgYnJpbmcgbWUgdG8gdHJpYWw7ICBhbmQgaWYgeW91IGRvIG5vdCBhY2tub3dsZWRnZSB0aGF0LCB0aGVuIGJyaW5nIGEgc3VpdCBhZ2FpbnN0IGhpbSwgbXkgdGVhY2hlciwgcmF0aGVyIHRoYW4gYWdhaW5zdCBtZSwgYW5kIGNoYXJnZSBoaW0gd2l0aCBjb3JydXB0aW5nIHRoZSBvbGQsIG5hbWVseSwgaGlzIGZhdGhlciBhbmQgbWUsIHdoaWNoIGhlIGRvZXMgYnkgdGVhY2hpbmcgbWUgYW5kIGJ5IGNvcnJlY3RpbmcgYW5kIHB1bmlzaGluZyBoaXMgZmF0aGVyLuKAnSAgQW5kIGlmIGhlIGRvZXMgbm90IGRvIGFzIEkgYXNrIGFuZCBkb2VzIG5vdCByZWxlYXNlIG1lIGZyb20gdGhlIGluZGljdG1lbnQgb3IgYnJpbmcgaXQgYWdhaW5zdCB5b3UgaW4gbXkgc3RlYWQsIEkgY291bGQgc2F5IGluIHRoZSBjb3VydCB0aGUgc2FtZSB0aGluZ3MgSSBzYWlkIGluIG15IGNoYWxsZW5nZSB0byBoaW0sIGNvdWxkIEkgbm90PzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['5.5b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1YiIgdW5pdD0ic2VjdGlvbiIgLz7igJxpZiB5b3UgYWNrbm93bGVkZ2UgdGhhdCBFdXRoeXBocm8gaXMgd2lzZSBpbiBzdWNoIG1hdHRlcnMsIHRoZW4gYmVsaWV2ZSB0aGF0IEkgYWxzbyBob2xkIGNvcnJlY3Qgb3BpbmlvbnMsIGFuZCBkbyBub3QgYnJpbmcgbWUgdG8gdHJpYWw7ICBhbmQgaWYgeW91IGRvIG5vdCBhY2tub3dsZWRnZSB0aGF0LCB0aGVuIGJyaW5nIGEgc3VpdCBhZ2FpbnN0IGhpbSwgbXkgdGVhY2hlciwgcmF0aGVyIHRoYW4gYWdhaW5zdCBtZSwgYW5kIGNoYXJnZSBoaW0gd2l0aCBjb3JydXB0aW5nIHRoZSBvbGQsIG5hbWVseSwgaGlzIGZhdGhlciBhbmQgbWUsIHdoaWNoIGhlIGRvZXMgYnkgdGVhY2hpbmcgbWUgYW5kIGJ5IGNvcnJlY3RpbmcgYW5kIHB1bmlzaGluZyBoaXMgZmF0aGVyLuKAnSAgQW5kIGlmIGhlIGRvZXMgbm90IGRvIGFzIEkgYXNrIGFuZCBkb2VzIG5vdCByZWxlYXNlIG1lIGZyb20gdGhlIGluZGljdG1lbnQgb3IgYnJpbmcgaXQgYWdhaW5zdCB5b3UgaW4gbXkgc3RlYWQsIEkgY291bGQgc2F5IGluIHRoZSBjb3VydCB0aGUgc2FtZSB0aGluZ3MgSSBzYWlkIGluIG15IGNoYWxsZW5nZSB0byBoaW0sIGNvdWxkIEkgbm90PzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnkgWmV1cywgU29jcmF0ZXMsIGlmIGhlIHNob3VsZCB1bmRlcnRha2UgdG8gaW5kaWN0IG1lLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNWMiIHVuaXQ9InNlY3Rpb24iIC8+SSBmYW5jeSBJIHNob3VsZCBmaW5kIGhpcyB3ZWFrIHNwb3QsIGFuZCBpdCB3b3VsZCBiZSBtdWNoIG1vcmUgYSBxdWVzdGlvbiBhYm91dCBoaW0gaW4gY291cnQgdGhhbiBhYm91dCBtZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ5IFpldXMsIFNvY3JhdGVzLCBpZiBoZSBzaG91bGQgdW5kZXJ0YWtlIHRvIGluZGljdCBtZSwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjVjIiB1bml0PSJzZWN0aW9uIiAvPkkgZmFuY3kgSSBzaG91bGQgZmluZCBoaXMgd2VhayBzcG90LCBhbmQgaXQgd291bGQgYmUgbXVjaCBtb3JlIGEgcXVlc3Rpb24gYWJvdXQgaGltIGluIGNvdXJ0IHRoYW4gYWJvdXQgbWUuPC9wPjwvdHJhbnNsYXRpb24+"
translation['5.5c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1YyIgdW5pdD0ic2VjdGlvbiIgLz5JIGZhbmN5IEkgc2hvdWxkIGZpbmQgaGlzIHdlYWsgc3BvdCwgYW5kIGl0IHdvdWxkIGJlIG11Y2ggbW9yZSBhIHF1ZXN0aW9uIGFib3V0IGhpbSBpbiBjb3VydCB0aGFuIGFib3V0IG1lLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgSSwgbXkgZGVhciBmcmllbmQsIHBlcmNlaXZpbmcgdGhpcywgd2lzaCB0byBiZWNvbWUgeW91ciBwdXBpbDsgIGZvciBJIGtub3cgdGhhdCBuZWl0aGVyIHRoaXMgZmVsbG93IE1lbGV0dXMsIG5vciBhbnlvbmUgZWxzZSwgc2VlbXMgdG8gbm90aWNlIHlvdSBhdCBhbGwsIGJ1dCBoZSBoYXMgc2VlbiB0aHJvdWdoIG1lIHNvIHNoYXJwbHkgYW5kIHNvIGVhc2lseSB0aGF0IGhlIGhhcyBpbmRpY3RlZCBtZSBmb3IgaW1waWV0eS4gIE5vdyBpbiB0aGUgbmFtZSBvZiBaZXVzLCB0ZWxsIG1lIHdoYXQgeW91IGp1c3Qgbm93IGFzc2VydGVkIHRoYXQgeW91IGtuZXcgc28gd2VsbC4gIFdoYXQgZG8geW91IHNheSBpcyB0aGUgbmF0dXJlIG9mIHBpZXR5IGFuZCBpbXBpZXR5LCBib3RoCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1ZCIgdW5pdD0ic2VjdGlvbiIgLz5pbiByZWxhdGlvbiB0byBtdXJkZXIgYW5kIHRvIG90aGVyIHRoaW5ncz8gIElzIG5vdCBob2xpbmVzcyBhbHdheXMgdGhlIHNhbWUgd2l0aCBpdHNlbGYgaW4gZXZlcnkgYWN0aW9uIGFuZCwgb24gdGhlIG90aGVyIGhhbmQsIGlzIG5vdCB1bmhvbGluZXNzIHRoZSBvcHBvc2l0ZSBvZiBhbGwgaG9saW5lc3MsIGFsd2F5cyB0aGUgc2FtZSB3aXRoIGl0c2VsZiBhbmQgd2hhdGV2ZXIgaXMgdG8gYmUgdW5ob2x5IHBvc3Nlc3Npbmcgc29tZSBvbmUgY2hhcmFjdGVyaXN0aWMgcXVhbGl0eT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIEksIG15IGRlYXIgZnJpZW5kLCBwZXJjZWl2aW5nIHRoaXMsIHdpc2ggdG8gYmVjb21lIHlvdXIgcHVwaWw7ICBmb3IgSSBrbm93IHRoYXQgbmVpdGhlciB0aGlzIGZlbGxvdyBNZWxldHVzLCBub3IgYW55b25lIGVsc2UsIHNlZW1zIHRvIG5vdGljZSB5b3UgYXQgYWxsLCBidXQgaGUgaGFzIHNlZW4gdGhyb3VnaCBtZSBzbyBzaGFycGx5IGFuZCBzbyBlYXNpbHkgdGhhdCBoZSBoYXMgaW5kaWN0ZWQgbWUgZm9yIGltcGlldHkuICBOb3cgaW4gdGhlIG5hbWUgb2YgWmV1cywgdGVsbCBtZSB3aGF0IHlvdSBqdXN0IG5vdyBhc3NlcnRlZCB0aGF0IHlvdSBrbmV3IHNvIHdlbGwuICBXaGF0IGRvIHlvdSBzYXkgaXMgdGhlIG5hdHVyZSBvZiBwaWV0eSBhbmQgaW1waWV0eSwgYm90aAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNWQiIHVuaXQ9InNlY3Rpb24iIC8+aW4gcmVsYXRpb24gdG8gbXVyZGVyIGFuZCB0byBvdGhlciB0aGluZ3M/ICBJcyBub3QgaG9saW5lc3MgYWx3YXlzIHRoZSBzYW1lIHdpdGggaXRzZWxmIGluIGV2ZXJ5IGFjdGlvbiBhbmQsIG9uIHRoZSBvdGhlciBoYW5kLCBpcyBub3QgdW5ob2xpbmVzcyB0aGUgb3Bwb3NpdGUgb2YgYWxsIGhvbGluZXNzLCBhbHdheXMgdGhlIHNhbWUgd2l0aCBpdHNlbGYgYW5kIHdoYXRldmVyIGlzIHRvIGJlIHVuaG9seSBwb3NzZXNzaW5nIHNvbWUgb25lIGNoYXJhY3RlcmlzdGljIHF1YWxpdHk/PC9wPjwvdHJhbnNsYXRpb24+"
translation['5.5d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1ZCIgdW5pdD0ic2VjdGlvbiIgLz5pbiByZWxhdGlvbiB0byBtdXJkZXIgYW5kIHRvIG90aGVyIHRoaW5ncz8gIElzIG5vdCBob2xpbmVzcyBhbHdheXMgdGhlIHNhbWUgd2l0aCBpdHNlbGYgaW4gZXZlcnkgYWN0aW9uIGFuZCwgb24gdGhlIG90aGVyIGhhbmQsIGlzIG5vdCB1bmhvbGluZXNzIHRoZSBvcHBvc2l0ZSBvZiBhbGwgaG9saW5lc3MsIGFsd2F5cyB0aGUgc2FtZSB3aXRoIGl0c2VsZiBhbmQgd2hhdGV2ZXIgaXMgdG8gYmUgdW5ob2x5IHBvc3Nlc3Npbmcgc29tZSBvbmUgY2hhcmFjdGVyaXN0aWMgcXVhbGl0eT88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seSwgU29jcmF0ZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHksIFNvY3JhdGVzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGVsbCBtZSB0aGVuLCB3aGF0IGRvIHlvdSBzYXkgaG9saW5lc3MgaXMsIGFuZCB3aGF0IHVuaG9saW5lc3M/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRlbGwgbWUgdGhlbiwgd2hhdCBkbyB5b3Ugc2F5IGhvbGluZXNzIGlzLCBhbmQgd2hhdCB1bmhvbGluZXNzPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwgdGhlbiwgSSBzYXkgdGhhdCBob2xpbmVzcyBpcyBkb2luZyB3aGF0IEkgYW0gZG9pbmcgbm93LCBwcm9zZWN1dGluZyB0aGUgd3Jvbmdkb2VyIHdobyBjb21taXRzIG11cmRlciBvciBzdGVhbHMgZnJvbSB0aGUgdGVtcGxlcyBvciBkb2VzIGFueSBzdWNoIHRoaW5nLCB3aGV0aGVyIGhlIGJlIHlvdXIgZmF0aGVyLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNWUiIHVuaXQ9InNlY3Rpb24iIC8+b3IgeW91ciBtb3RoZXIgb3IgYW55b25lIGVsc2UsIGFuZCBub3QgcHJvc2VjdXRpbmcgaGltIGlzIHVuaG9seS4gIEFuZCwgU29jcmF0ZXMsIHNlZSB3aGF0IGEgc3VyZSBwcm9vZiBJIG9mZmVyIHlvdSzigJRhIHByb29mIEkgaGF2ZSBhbHJlYWR5IGdpdmVuIHRvIG90aGVycyzigJR0aGF0IHRoaXMgaXMgZXN0YWJsaXNoZWQgYW5kIHJpZ2h0IGFuZCB0aGF0IHdlIG91Z2h0IG5vdCB0byBsZXQgaGltIHdobyBhY3RzIGltcGlvdXNseSBnbyB1bnB1bmlzaGVkLCBubyBtYXR0ZXIgd2hvIGhlIG1heSBiZS4gIE1lbiBiZWxpZXZlCjxtaWxlc3RvbmUgbj0iNiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjZhIiB1bml0PSJzZWN0aW9uIiAvPnRoYXQgWmV1cyBpcyB0aGUgYmVzdCBhbmQgbW9zdCBqdXN0IG9mIHRoZSBnb2RzLCBhbmQgdGhleSBhY2tub3dsZWRnZSB0aGF0IGhlIHB1dCBoaXMgZmF0aGVyIGluIGJvbmRzIGJlY2F1c2UgaGUgd2lja2VkbHkgZGV2b3VyZWQgaGlzIGNoaWxkcmVuLCBhbmQgaGUgaW4gdHVybiBoYWQgbXV0aWxhdGVkIGhpcyBmYXRoZXIgZm9yIHNpbWlsYXIgcmVhc29uczsgIGJ1dCB0aGV5IGFyZSBpbmNlbnNlZCBhZ2FpbnN0IG1lIGJlY2F1c2UgSSBwcm9jZWVkIGFnYWluc3QgbXkgZmF0aGVyIHdoZW4gaGUgaGFzIGRvbmUgd3JvbmcsIGFuZCBzbyB0aGV5IGFyZSBpbmNvbnNpc3RlbnQgaW4gd2hhdCB0aGV5IHNheSBhYm91dCB0aGUgZ29kcyBhbmQgYWJvdXQgbWUuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsIHRoZW4sIEkgc2F5IHRoYXQgaG9saW5lc3MgaXMgZG9pbmcgd2hhdCBJIGFtIGRvaW5nIG5vdywgcHJvc2VjdXRpbmcgdGhlIHdyb25nZG9lciB3aG8gY29tbWl0cyBtdXJkZXIgb3Igc3RlYWxzIGZyb20gdGhlIHRlbXBsZXMgb3IgZG9lcyBhbnkgc3VjaCB0aGluZywgd2hldGhlciBoZSBiZSB5b3VyIGZhdGhlciwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjVlIiB1bml0PSJzZWN0aW9uIiAvPm9yIHlvdXIgbW90aGVyIG9yIGFueW9uZSBlbHNlLCBhbmQgbm90IHByb3NlY3V0aW5nIGhpbSBpcyB1bmhvbHkuICBBbmQsIFNvY3JhdGVzLCBzZWUgd2hhdCBhIHN1cmUgcHJvb2YgSSBvZmZlciB5b3Us4oCUYSBwcm9vZiBJIGhhdmUgYWxyZWFkeSBnaXZlbiB0byBvdGhlcnMs4oCUdGhhdCB0aGlzIGlzIGVzdGFibGlzaGVkIGFuZCByaWdodCBhbmQgdGhhdCB3ZSBvdWdodCBub3QgdG8gbGV0IGhpbSB3aG8gYWN0cyBpbXBpb3VzbHkgZ28gdW5wdW5pc2hlZCwgbm8gbWF0dGVyIHdobyBoZSBtYXkgYmUuICBNZW4gYmVsaWV2ZQo8bWlsZXN0b25lIG49IjYiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI2YSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IFpldXMgaXMgdGhlIGJlc3QgYW5kIG1vc3QganVzdCBvZiB0aGUgZ29kcywgYW5kIHRoZXkgYWNrbm93bGVkZ2UgdGhhdCBoZSBwdXQgaGlzIGZhdGhlciBpbiBib25kcyBiZWNhdXNlIGhlIHdpY2tlZGx5IGRldm91cmVkIGhpcyBjaGlsZHJlbiwgYW5kIGhlIGluIHR1cm4gaGFkIG11dGlsYXRlZCBoaXMgZmF0aGVyIGZvciBzaW1pbGFyIHJlYXNvbnM7ICBidXQgdGhleSBhcmUgaW5jZW5zZWQgYWdhaW5zdCBtZSBiZWNhdXNlIEkgcHJvY2VlZCBhZ2FpbnN0IG15IGZhdGhlciB3aGVuIGhlIGhhcyBkb25lIHdyb25nLCBhbmQgc28gdGhleSBhcmUgaW5jb25zaXN0ZW50IGluIHdoYXQgdGhleSBzYXkgYWJvdXQgdGhlIGdvZHMgYW5kIGFib3V0IG1lLjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['5.5e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1ZSIgdW5pdD0ic2VjdGlvbiIgLz5vciB5b3VyIG1vdGhlciBvciBhbnlvbmUgZWxzZSwgYW5kIG5vdCBwcm9zZWN1dGluZyBoaW0gaXMgdW5ob2x5LiAgQW5kLCBTb2NyYXRlcywgc2VlIHdoYXQgYSBzdXJlIHByb29mIEkgb2ZmZXIgeW91LOKAlGEgcHJvb2YgSSBoYXZlIGFscmVhZHkgZ2l2ZW4gdG8gb3RoZXJzLOKAlHRoYXQgdGhpcyBpcyBlc3RhYmxpc2hlZCBhbmQgcmlnaHQgYW5kIHRoYXQgd2Ugb3VnaHQgbm90IHRvIGxldCBoaW0gd2hvIGFjdHMgaW1waW91c2x5IGdvIHVucHVuaXNoZWQsIG5vIG1hdHRlciB3aG8gaGUgbWF5IGJlLiAgTWVuIGJlbGlldmUKPC90cmFuc2xhdGlvbj4="
translation['6.6a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2YSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IFpldXMgaXMgdGhlIGJlc3QgYW5kIG1vc3QganVzdCBvZiB0aGUgZ29kcywgYW5kIHRoZXkgYWNrbm93bGVkZ2UgdGhhdCBoZSBwdXQgaGlzIGZhdGhlciBpbiBib25kcyBiZWNhdXNlIGhlIHdpY2tlZGx5IGRldm91cmVkIGhpcyBjaGlsZHJlbiwgYW5kIGhlIGluIHR1cm4gaGFkIG11dGlsYXRlZCBoaXMgZmF0aGVyIGZvciBzaW1pbGFyIHJlYXNvbnM7ICBidXQgdGhleSBhcmUgaW5jZW5zZWQgYWdhaW5zdCBtZSBiZWNhdXNlIEkgcHJvY2VlZCBhZ2FpbnN0IG15IGZhdGhlciB3aGVuIGhlIGhhcyBkb25lIHdyb25nLCBhbmQgc28gdGhleSBhcmUgaW5jb25zaXN0ZW50IGluIHdoYXQgdGhleSBzYXkgYWJvdXQgdGhlIGdvZHMgYW5kIGFib3V0IG1lLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JcyBub3QgdGhpcywgRXV0aHlwaHJvLCB0aGUgcmVhc29uIHdoeSBJIGFtIGJlaW5nIHByb3NlY3V0ZWQsIGJlY2F1c2Ugd2hlbiBwZW9wbGUgdGVsbCBzdWNoIHN0b3JpZXMgYWJvdXQgdGhlIGdvZHMgSSBmaW5kIGl0IGhhcmQgdG8gYWNjZXB0IHRoZW0/ICBBbmQgdGhlcmVmb3JlLCBwcm9iYWJseSwgcGVvcGxlIHdpbGwgc2F5IEkgYW0gd3JvbmcuICBOb3cgaWYgeW91LCB3aG8ga25vdyBzbyBtdWNoIGFib3V0IHN1Y2ggdGhpbmdzLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNmIiIHVuaXQ9InNlY3Rpb24iIC8+YWNjZXB0IHRoZXNlIHRhbGVzLCBJIHN1cHBvc2UgSSB0b28gbXVzdCBnaXZlIHdheS4gIEZvciB3aGF0IGFtIEkgdG8gc2F5LCB3aG8gY29uZmVzcyBmcmFua2x5IHRoYXQgSSBrbm93IG5vdGhpbmcgYWJvdXQgdGhlbT8gIEJ1dCB0ZWxsIG1lLCBpbiB0aGUgbmFtZSBvZiBaZXVzLCB0aGUgZ29kIG9mIGZyaWVuZHNoaXAsIGRvIHlvdSByZWFsbHkgYmVsaWV2ZSB0aGVzZSB0aGluZ3MgaGFwcGVuZWQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklzIG5vdCB0aGlzLCBFdXRoeXBocm8sIHRoZSByZWFzb24gd2h5IEkgYW0gYmVpbmcgcHJvc2VjdXRlZCwgYmVjYXVzZSB3aGVuIHBlb3BsZSB0ZWxsIHN1Y2ggc3RvcmllcyBhYm91dCB0aGUgZ29kcyBJIGZpbmQgaXQgaGFyZCB0byBhY2NlcHQgdGhlbT8gIEFuZCB0aGVyZWZvcmUsIHByb2JhYmx5LCBwZW9wbGUgd2lsbCBzYXkgSSBhbSB3cm9uZy4gIE5vdyBpZiB5b3UsIHdobyBrbm93IHNvIG11Y2ggYWJvdXQgc3VjaCB0aGluZ3MsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2YiIgdW5pdD0ic2VjdGlvbiIgLz5hY2NlcHQgdGhlc2UgdGFsZXMsIEkgc3VwcG9zZSBJIHRvbyBtdXN0IGdpdmUgd2F5LiAgRm9yIHdoYXQgYW0gSSB0byBzYXksIHdobyBjb25mZXNzIGZyYW5rbHkgdGhhdCBJIGtub3cgbm90aGluZyBhYm91dCB0aGVtPyAgQnV0IHRlbGwgbWUsIGluIHRoZSBuYW1lIG9mIFpldXMsIHRoZSBnb2Qgb2YgZnJpZW5kc2hpcCwgZG8geW91IHJlYWxseSBiZWxpZXZlIHRoZXNlIHRoaW5ncyBoYXBwZW5lZD88L3A+PC90cmFuc2xhdGlvbj4="
translation['6.6b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2YiIgdW5pdD0ic2VjdGlvbiIgLz5hY2NlcHQgdGhlc2UgdGFsZXMsIEkgc3VwcG9zZSBJIHRvbyBtdXN0IGdpdmUgd2F5LiAgRm9yIHdoYXQgYW0gSSB0byBzYXksIHdobyBjb25mZXNzIGZyYW5rbHkgdGhhdCBJIGtub3cgbm90aGluZyBhYm91dCB0aGVtPyAgQnV0IHRlbGwgbWUsIGluIHRoZSBuYW1lIG9mIFpldXMsIHRoZSBnb2Qgb2YgZnJpZW5kc2hpcCwgZG8geW91IHJlYWxseSBiZWxpZXZlIHRoZXNlIHRoaW5ncyBoYXBwZW5lZD88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywgYW5kIHN0aWxsIG1vcmUgd29uZGVyZnVsIHRoaW5ncyB0aGFuIHRoZXNlLCBTb2NyYXRlcywgd2hpY2ggbW9zdCBwZW9wbGUgZG8gbm90IGtub3cuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIGFuZCBzdGlsbCBtb3JlIHdvbmRlcmZ1bCB0aGluZ3MgdGhhbiB0aGVzZSwgU29jcmF0ZXMsIHdoaWNoIG1vc3QgcGVvcGxlIGRvIG5vdCBrbm93LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHNvIHlvdSBiZWxpZXZlIHRoYXQgdGhlcmUgd2FzIHJlYWxseSB3YXIgYmV0d2VlbiB0aGUgZ29kcywgYW5kIGZlYXJmdWwgZW5taXRpZXMgYW5kIGJhdHRsZXMgYW5kIG90aGVyIHRoaW5ncyBvZiB0aGUgc29ydCwgc3VjaCBhcyBhcmUgdG9sZCBvZiBieSB0aGUgcG9ldHMgYW5kIHJlcHJlc2VudGVkIGluIHZhcmllZCBkZXNpZ25zCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2YyIgdW5pdD0ic2VjdGlvbiIgLz5ieSB0aGUgZ3JlYXQgYXJ0aXN0cyBpbiBvdXIgc2FjcmVkIHBsYWNlcyBhbmQgZXNwZWNpYWxseSBvbiB0aGUgcm9iZSB3aGljaCBpcyBjYXJyaWVkIHVwIHRvIHRoZSBBY3JvcG9saXMgYXQgdGhlIGdyZWF0IFBhbmF0aGVuYWVhPyAgZm9yIHRoaXMgaXMgY292ZXJlZCB3aXRoIHN1Y2ggcmVwcmVzZW50YXRpb25zLiAgU2hhbGwgd2UgYWdyZWUgdGhhdCB0aGVzZSB0aGluZ3MgYXJlIHRydWUsIEV1dGh5cGhybz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHNvIHlvdSBiZWxpZXZlIHRoYXQgdGhlcmUgd2FzIHJlYWxseSB3YXIgYmV0d2VlbiB0aGUgZ29kcywgYW5kIGZlYXJmdWwgZW5taXRpZXMgYW5kIGJhdHRsZXMgYW5kIG90aGVyIHRoaW5ncyBvZiB0aGUgc29ydCwgc3VjaCBhcyBhcmUgdG9sZCBvZiBieSB0aGUgcG9ldHMgYW5kIHJlcHJlc2VudGVkIGluIHZhcmllZCBkZXNpZ25zCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2YyIgdW5pdD0ic2VjdGlvbiIgLz5ieSB0aGUgZ3JlYXQgYXJ0aXN0cyBpbiBvdXIgc2FjcmVkIHBsYWNlcyBhbmQgZXNwZWNpYWxseSBvbiB0aGUgcm9iZSB3aGljaCBpcyBjYXJyaWVkIHVwIHRvIHRoZSBBY3JvcG9saXMgYXQgdGhlIGdyZWF0IFBhbmF0aGVuYWVhPyAgZm9yIHRoaXMgaXMgY292ZXJlZCB3aXRoIHN1Y2ggcmVwcmVzZW50YXRpb25zLiAgU2hhbGwgd2UgYWdyZWUgdGhhdCB0aGVzZSB0aGluZ3MgYXJlIHRydWUsIEV1dGh5cGhybz88L3A+PC90cmFuc2xhdGlvbj4="
translation['6.6c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2YyIgdW5pdD0ic2VjdGlvbiIgLz5ieSB0aGUgZ3JlYXQgYXJ0aXN0cyBpbiBvdXIgc2FjcmVkIHBsYWNlcyBhbmQgZXNwZWNpYWxseSBvbiB0aGUgcm9iZSB3aGljaCBpcyBjYXJyaWVkIHVwIHRvIHRoZSBBY3JvcG9saXMgYXQgdGhlIGdyZWF0IFBhbmF0aGVuYWVhPyAgZm9yIHRoaXMgaXMgY292ZXJlZCB3aXRoIHN1Y2ggcmVwcmVzZW50YXRpb25zLiAgU2hhbGwgd2UgYWdyZWUgdGhhdCB0aGVzZSB0aGluZ3MgYXJlIHRydWUsIEV1dGh5cGhybz88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdCBvbmx5IHRoZXNlIHRoaW5ncywgU29jcmF0ZXM7ICBidXQsIGFzIEkgc2FpZCBqdXN0IG5vdywgSSB3aWxsLCBpZiB5b3UgbGlrZSwgdGVsbCB5b3UgbWFueSBvdGhlciB0aGluZ3MgYWJvdXQgdGhlIGdvZHMsIHdoaWNoIEkgYW0gc3VyZSB3aWxsIGFtYXplIHlvdSB3aGVuIHlvdSBoZWFyIHRoZW0uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3Qgb25seSB0aGVzZSB0aGluZ3MsIFNvY3JhdGVzOyAgYnV0LCBhcyBJIHNhaWQganVzdCBub3csIEkgd2lsbCwgaWYgeW91IGxpa2UsIHRlbGwgeW91IG1hbnkgb3RoZXIgdGhpbmdzIGFib3V0IHRoZSBnb2RzLCB3aGljaCBJIGFtIHN1cmUgd2lsbCBhbWF6ZSB5b3Ugd2hlbiB5b3UgaGVhciB0aGVtLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBkYXJlIHNheS4gIEJ1dCB5b3UgY2FuIHRlbGwgbWUgdGhvc2UgdGhpbmdzIGF0IHlvdXIgbGVpc3VyZSBzb21lIG90aGVyIHRpbWUuICBBdCBwcmVzZW50IHRyeSB0byB0ZWxsIG1vcmUgY2xlYXJseSB3aGF0IEkgYXNrZWQgeW91IGp1c3Qgbm93Lgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNmQiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yLCBteSBmcmllbmQsIHlvdSBkaWQgbm90IGdpdmUgbWUgc3VmZmljaWVudCBpbmZvcm1hdGlvbiBiZWZvcmUsIHdoZW4gSSBhc2tlZCB3aGF0IGhvbGluZXNzIHdhcywgYnV0IHlvdSB0b2xkIG1lIHRoYXQgdGhpcyB3YXMgaG9seSB3aGljaCB5b3UgYXJlIG5vdyBkb2luZywgcHJvc2VjdXRpbmcgeW91ciBmYXRoZXIgZm9yIG11cmRlci48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBkYXJlIHNheS4gIEJ1dCB5b3UgY2FuIHRlbGwgbWUgdGhvc2UgdGhpbmdzIGF0IHlvdXIgbGVpc3VyZSBzb21lIG90aGVyIHRpbWUuICBBdCBwcmVzZW50IHRyeSB0byB0ZWxsIG1vcmUgY2xlYXJseSB3aGF0IEkgYXNrZWQgeW91IGp1c3Qgbm93Lgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNmQiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yLCBteSBmcmllbmQsIHlvdSBkaWQgbm90IGdpdmUgbWUgc3VmZmljaWVudCBpbmZvcm1hdGlvbiBiZWZvcmUsIHdoZW4gSSBhc2tlZCB3aGF0IGhvbGluZXNzIHdhcywgYnV0IHlvdSB0b2xkIG1lIHRoYXQgdGhpcyB3YXMgaG9seSB3aGljaCB5b3UgYXJlIG5vdyBkb2luZywgcHJvc2VjdXRpbmcgeW91ciBmYXRoZXIgZm9yIG11cmRlci48L3A+PC90cmFuc2xhdGlvbj4="
translation['6.6d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2ZCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IsIG15IGZyaWVuZCwgeW91IGRpZCBub3QgZ2l2ZSBtZSBzdWZmaWNpZW50IGluZm9ybWF0aW9uIGJlZm9yZSwgd2hlbiBJIGFza2VkIHdoYXQgaG9saW5lc3Mgd2FzLCBidXQgeW91IHRvbGQgbWUgdGhhdCB0aGlzIHdhcyBob2x5IHdoaWNoIHlvdSBhcmUgbm93IGRvaW5nLCBwcm9zZWN1dGluZyB5b3VyIGZhdGhlciBmb3IgbXVyZGVyLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgd2hhdCBJIHNhaWQgd2FzIHRydWUsIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgd2hhdCBJIHNhaWQgd2FzIHRydWUsIFNvY3JhdGVzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGVyaGFwcy4gIEJ1dCwgRXV0aHlwaHJvLCB5b3Ugc2F5IHRoYXQgbWFueSBvdGhlciB0aGluZ3MgYXJlIGhvbHksIGRvIHlvdSBub3Q/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlBlcmhhcHMuICBCdXQsIEV1dGh5cGhybywgeW91IHNheSB0aGF0IG1hbnkgb3RoZXIgdGhpbmdzIGFyZSBob2x5LCBkbyB5b3Ugbm90PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoeSwgc28gdGhleSBhcmUuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaHksIHNvIHRoZXkgYXJlLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm93IGNhbGwgdG8gbWluZCB0aGF0IHRoaXMgaXMgbm90IHdoYXQgSSBhc2tlZCB5b3UsIHRvIHRlbGwgbWUgb25lIG9yIHR3byBvZiB0aGUgbWFueSBob2x5IGFjdHMsIGJ1dCB0byB0ZWxsIHRoZSBlc3NlbnRpYWwgYXNwZWN0LCBieSB3aGljaCBhbGwgaG9seSBhY3RzIGFyZSBob2x5OyAgZm9yIHlvdSBzYWlkCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2ZSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IGFsbCB1bmhvbHkgYWN0cyB3ZXJlIHVuaG9seSBhbmQgYWxsIGhvbHkgb25lcyBob2x5IGJ5IG9uZSBhc3BlY3QuICBPciBkb24ndCB5b3UgcmVtZW1iZXI/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdyBjYWxsIHRvIG1pbmQgdGhhdCB0aGlzIGlzIG5vdCB3aGF0IEkgYXNrZWQgeW91LCB0byB0ZWxsIG1lIG9uZSBvciB0d28gb2YgdGhlIG1hbnkgaG9seSBhY3RzLCBidXQgdG8gdGVsbCB0aGUgZXNzZW50aWFsIGFzcGVjdCwgYnkgd2hpY2ggYWxsIGhvbHkgYWN0cyBhcmUgaG9seTsgIGZvciB5b3Ugc2FpZAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNmUiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBhbGwgdW5ob2x5IGFjdHMgd2VyZSB1bmhvbHkgYW5kIGFsbCBob2x5IG9uZXMgaG9seSBieSBvbmUgYXNwZWN0LiAgT3IgZG9uJ3QgeW91IHJlbWVtYmVyPzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['6.6e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2ZSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IGFsbCB1bmhvbHkgYWN0cyB3ZXJlIHVuaG9seSBhbmQgYWxsIGhvbHkgb25lcyBob2x5IGJ5IG9uZSBhc3BlY3QuICBPciBkb24ndCB5b3UgcmVtZW1iZXI/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHJlbWVtYmVyLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSByZW1lbWJlci48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRlbGwgbWUgdGhlbiB3aGF0IHRoaXMgYXNwZWN0IGlzLCB0aGF0IEkgbWF5IGtlZXAgbXkgZXllIGZpeGVkIHVwb24gaXQgYW5kIGVtcGxveSBpdCBhcyBhIG1vZGVsIGFuZCwgaWYgYW55dGhpbmcgeW91IG9yIGFueW9uZSBlbHNlIGRvZXMgYWdyZWVzIHdpdGggaXQsIG1heSBzYXkgdGhhdCB0aGUgYWN0IGlzIGhvbHksIGFuZCBpZiBub3QsIHRoYXQgaXQgaXMgdW5ob2x5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UZWxsIG1lIHRoZW4gd2hhdCB0aGlzIGFzcGVjdCBpcywgdGhhdCBJIG1heSBrZWVwIG15IGV5ZSBmaXhlZCB1cG9uIGl0IGFuZCBlbXBsb3kgaXQgYXMgYSBtb2RlbCBhbmQsIGlmIGFueXRoaW5nIHlvdSBvciBhbnlvbmUgZWxzZSBkb2VzIGFncmVlcyB3aXRoIGl0LCBtYXkgc2F5IHRoYXQgdGhlIGFjdCBpcyBob2x5LCBhbmQgaWYgbm90LCB0aGF0IGl0IGlzIHVuaG9seS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JZiB5b3Ugd2lzaCBtZSB0byBleHBsYWluIGluIHRoYXQgd2F5LCBJIHdpbGwgZG8gc28uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JZiB5b3Ugd2lzaCBtZSB0byBleHBsYWluIGluIHRoYXQgd2F5LCBJIHdpbGwgZG8gc28uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvIHdpc2ggaXQuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgZG8gd2lzaCBpdC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsIHRoZW4sIHdoYXQgaXMgZGVhciB0byB0aGUgZ29kcyBpcyBob2x5LAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjdhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB3aGF0IGlzIG5vdCBkZWFyIHRvIHRoZW0gaXMgdW5ob2x5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCB0aGVuLCB3aGF0IGlzIGRlYXIgdG8gdGhlIGdvZHMgaXMgaG9seSwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjciIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI3YSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgd2hhdCBpcyBub3QgZGVhciB0byB0aGVtIGlzIHVuaG9seS48L3A+PC90cmFuc2xhdGlvbj4="
translation['7.7a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3YSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgd2hhdCBpcyBub3QgZGVhciB0byB0aGVtIGlzIHVuaG9seS48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXhjZWxsZW50LCBFdXRoeXBocm8sIG5vdyB5b3UgaGF2ZSBhbnN3ZXJlZCBhcyBJIGFza2VkIHlvdSB0byBhbnN3ZXIuICBIb3dldmVyLCB3aGV0aGVyIGl0IGlzIHRydWUsIEkgYW0gbm90IHlldCBzdXJlOyAgYnV0IHlvdSB3aWxsLCBvZiBjb3Vyc2UsIHNob3cgdGhhdCB3aGF0IHlvdSBzYXkgaXMgdHJ1ZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXhjZWxsZW50LCBFdXRoeXBocm8sIG5vdyB5b3UgaGF2ZSBhbnN3ZXJlZCBhcyBJIGFza2VkIHlvdSB0byBhbnN3ZXIuICBIb3dldmVyLCB3aGV0aGVyIGl0IGlzIHRydWUsIEkgYW0gbm90IHlldCBzdXJlOyAgYnV0IHlvdSB3aWxsLCBvZiBjb3Vyc2UsIHNob3cgdGhhdCB3aGF0IHlvdSBzYXkgaXMgdHJ1ZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Db21lIHRoZW4sIGxldCB1cyBleGFtaW5lIG91ciB3b3Jkcy4gIFRoZSB0aGluZyBhbmQgdGhlIHBlcnNvbiB0aGF0IGFyZSBkZWFyIHRvIHRoZSBnb2RzIGFyZSBob2x5LCBhbmQgdGhlIHRoaW5nIGFuZCB0aGUgcGVyc29uIHRoYXQgYXJlIGhhdGVmdWwgdG8gdGhlIGdvZHMgYXJlIHVuaG9seTsgIGFuZCB0aGUgdHdvIGFyZSBub3QgdGhlIHNhbWUsIGJ1dCB0aGUgaG9seSBhbmQgdGhlIHVuaG9seSBhcmUgdGhlIGV4YWN0IG9wcG9zaXRlcyBvZiBlYWNoIG90aGVyLiAgSXMgbm90IHRoaXMgd2hhdCB3ZSBoYXZlIHNhaWQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNvbWUgdGhlbiwgbGV0IHVzIGV4YW1pbmUgb3VyIHdvcmRzLiAgVGhlIHRoaW5nIGFuZCB0aGUgcGVyc29uIHRoYXQgYXJlIGRlYXIgdG8gdGhlIGdvZHMgYXJlIGhvbHksIGFuZCB0aGUgdGhpbmcgYW5kIHRoZSBwZXJzb24gdGhhdCBhcmUgaGF0ZWZ1bCB0byB0aGUgZ29kcyBhcmUgdW5ob2x5OyAgYW5kIHRoZSB0d28gYXJlIG5vdCB0aGUgc2FtZSwgYnV0IHRoZSBob2x5IGFuZCB0aGUgdW5ob2x5IGFyZSB0aGUgZXhhY3Qgb3Bwb3NpdGVzIG9mIGVhY2ggb3RoZXIuICBJcyBub3QgdGhpcyB3aGF0IHdlIGhhdmUgc2FpZD88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIGp1c3QgdGhpcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywganVzdCB0aGlzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGl0IHNlZW1zIHRvIGJlIGNvcnJlY3Q/CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3YiIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGl0IHNlZW1zIHRvIGJlIGNvcnJlY3Q/CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3YiIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC90cmFuc2xhdGlvbj4="
translation['7.7b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3YiIgdW5pdD0ic2VjdGlvbiIgLz48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdGhpbmsgc28sIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB0aGluayBzbywgU29jcmF0ZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsIHRoZW4sIGhhdmUgd2Ugc2FpZCB0aGlzIGFsc28sIHRoYXQgdGhlIGdvZHMsIEV1dGh5cGhybywgcXVhcnJlbCBhbmQgZGlzYWdyZWUgd2l0aCBlYWNoIG90aGVyLCBhbmQgdGhhdCB0aGVyZSBpcyBlbm1pdHkgYmV0d2VlbiB0aGVtPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsIHRoZW4sIGhhdmUgd2Ugc2FpZCB0aGlzIGFsc28sIHRoYXQgdGhlIGdvZHMsIEV1dGh5cGhybywgcXVhcnJlbCBhbmQgZGlzYWdyZWUgd2l0aCBlYWNoIG90aGVyLCBhbmQgdGhhdCB0aGVyZSBpcyBlbm1pdHkgYmV0d2VlbiB0aGVtPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywgd2UgaGF2ZSBzYWlkIHRoYXQuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIHdlIGhhdmUgc2FpZCB0aGF0LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHdoYXQgdGhpbmdzIGlzIHRoZSBkaXNhZ3JlZW1lbnQgYWJvdXQsIHdoaWNoIGNhdXNlcyBlbm1pdHkgYW5kIGFuZ2VyPyAgTGV0IHVzIGxvb2sgYXQgaXQgaW4gdGhpcyB3YXkuICBJZiB5b3UgYW5kIEkgd2VyZSB0byBkaXNhZ3JlZSBhYm91dCBudW1iZXIsIGZvciBpbnN0YW5jZSwgd2hpY2ggb2YgdHdvIG51bWJlcnMgd2VyZSB0aGUgZ3JlYXRlciwgd291bGQgdGhlIGRpc2FncmVlbWVudCBhYm91dCB0aGVzZSBtYXR0ZXJzIG1ha2UgdXMgZW5lbWllcyBhbmQgbWFrZSB1cyBhbmdyeSB3aXRoIGVhY2ggb3RoZXIsIG9yIHNob3VsZCB3ZSBub3QgcXVpY2tseSBzZXR0bGUgaXQgYnkgcmVzb3J0aW5nCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3YyIgdW5pdD0ic2VjdGlvbiIgLz50byBhcml0aG1ldGljPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgd2hhdCB0aGluZ3MgaXMgdGhlIGRpc2FncmVlbWVudCBhYm91dCwgd2hpY2ggY2F1c2VzIGVubWl0eSBhbmQgYW5nZXI/ICBMZXQgdXMgbG9vayBhdCBpdCBpbiB0aGlzIHdheS4gIElmIHlvdSBhbmQgSSB3ZXJlIHRvIGRpc2FncmVlIGFib3V0IG51bWJlciwgZm9yIGluc3RhbmNlLCB3aGljaCBvZiB0d28gbnVtYmVycyB3ZXJlIHRoZSBncmVhdGVyLCB3b3VsZCB0aGUgZGlzYWdyZWVtZW50IGFib3V0IHRoZXNlIG1hdHRlcnMgbWFrZSB1cyBlbmVtaWVzIGFuZCBtYWtlIHVzIGFuZ3J5IHdpdGggZWFjaCBvdGhlciwgb3Igc2hvdWxkIHdlIG5vdCBxdWlja2x5IHNldHRsZSBpdCBieSByZXNvcnRpbmcKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjdjIiB1bml0PSJzZWN0aW9uIiAvPnRvIGFyaXRobWV0aWM/PC9wPjwvdHJhbnNsYXRpb24+"
translation['7.7c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3YyIgdW5pdD0ic2VjdGlvbiIgLz50byBhcml0aG1ldGljPzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2YgY291cnNlIHdlIHNob3VsZC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9mIGNvdXJzZSB3ZSBzaG91bGQuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCB0b28sIGlmIHdlIHdlcmUgdG8gZGlzYWdyZWUgYWJvdXQgdGhlIHJlbGF0aXZlIHNpemUgb2YgdGhpbmdzLCB3ZSBzaG91bGQgcXVpY2tseSBwdXQgYW4gZW5kIHRvIHRoZSBkaXNhZ3JlZW1lbnQgYnkgbWVhc3VyaW5nPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCB0b28sIGlmIHdlIHdlcmUgdG8gZGlzYWdyZWUgYWJvdXQgdGhlIHJlbGF0aXZlIHNpemUgb2YgdGhpbmdzLCB3ZSBzaG91bGQgcXVpY2tseSBwdXQgYW4gZW5kIHRvIHRoZSBkaXNhZ3JlZW1lbnQgYnkgbWVhc3VyaW5nPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB3ZSBzaG91bGQsIEkgc3VwcG9zZSwgY29tZSB0byB0ZXJtcyBhYm91dCByZWxhdGl2ZSB3ZWlnaHRzIGJ5IHdlaWdoaW5nPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgd2Ugc2hvdWxkLCBJIHN1cHBvc2UsIGNvbWUgdG8gdGVybXMgYWJvdXQgcmVsYXRpdmUgd2VpZ2h0cyBieSB3ZWlnaGluZz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PZiBjb3Vyc2UuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PZiBjb3Vyc2UuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgYWJvdXQgd2hhdCB3b3VsZCBhIGRpc2FncmVlbWVudCBiZSwgd2hpY2ggd2UgY291bGQgbm90IHNldHRsZSBhbmQgd2hpY2ggd291bGQgY2F1c2UgdXMgdG8gYmUgZW5lbWllcyBhbmQgYmUgYW5ncnkgd2l0aCBlYWNoIG90aGVyPyAgUGVyaGFwcyB5b3UgY2Fubm90IGdpdmUgYW4gYW5zd2VyIG9mZmhhbmQ7CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3ZCIgdW5pdD0ic2VjdGlvbiIgLz5idXQgbGV0IG1lIHN1Z2dlc3QgaXQuICBJcyBpdCBub3QgYWJvdXQgcmlnaHQgYW5kIHdyb25nLCBhbmQgbm9ibGUgYW5kIGRpc2dyYWNlZnVsLCBhbmQgZ29vZCBhbmQgYmFkPyAgQXJlIG5vdCB0aGVzZSB0aGUgcXVlc3Rpb25zIGFib3V0IHdoaWNoIHlvdSBhbmQgSSBhbmQgb3RoZXIgcGVvcGxlIGJlY29tZSBlbmVtaWVzLCB3aGVuIHdlIGRvIGJlY29tZSBlbmVtaWVzLCBiZWNhdXNlIHdlIGRpZmZlciBhYm91dCB0aGVtIGFuZCBjYW5ub3QgcmVhY2ggYW55IHNhdGlzZmFjdG9yeSBhZ3JlZW1lbnQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBhYm91dCB3aGF0IHdvdWxkIGEgZGlzYWdyZWVtZW50IGJlLCB3aGljaCB3ZSBjb3VsZCBub3Qgc2V0dGxlIGFuZCB3aGljaCB3b3VsZCBjYXVzZSB1cyB0byBiZSBlbmVtaWVzIGFuZCBiZSBhbmdyeSB3aXRoIGVhY2ggb3RoZXI/ICBQZXJoYXBzIHlvdSBjYW5ub3QgZ2l2ZSBhbiBhbnN3ZXIgb2ZmaGFuZDsKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjdkIiB1bml0PSJzZWN0aW9uIiAvPmJ1dCBsZXQgbWUgc3VnZ2VzdCBpdC4gIElzIGl0IG5vdCBhYm91dCByaWdodCBhbmQgd3JvbmcsIGFuZCBub2JsZSBhbmQgZGlzZ3JhY2VmdWwsIGFuZCBnb29kIGFuZCBiYWQ/ICBBcmUgbm90IHRoZXNlIHRoZSBxdWVzdGlvbnMgYWJvdXQgd2hpY2ggeW91IGFuZCBJIGFuZCBvdGhlciBwZW9wbGUgYmVjb21lIGVuZW1pZXMsIHdoZW4gd2UgZG8gYmVjb21lIGVuZW1pZXMsIGJlY2F1c2Ugd2UgZGlmZmVyIGFib3V0IHRoZW0gYW5kIGNhbm5vdCByZWFjaCBhbnkgc2F0aXNmYWN0b3J5IGFncmVlbWVudD88L3A+PC90cmFuc2xhdGlvbj4="
translation['7.7d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3ZCIgdW5pdD0ic2VjdGlvbiIgLz5idXQgbGV0IG1lIHN1Z2dlc3QgaXQuICBJcyBpdCBub3QgYWJvdXQgcmlnaHQgYW5kIHdyb25nLCBhbmQgbm9ibGUgYW5kIGRpc2dyYWNlZnVsLCBhbmQgZ29vZCBhbmQgYmFkPyAgQXJlIG5vdCB0aGVzZSB0aGUgcXVlc3Rpb25zIGFib3V0IHdoaWNoIHlvdSBhbmQgSSBhbmQgb3RoZXIgcGVvcGxlIGJlY29tZSBlbmVtaWVzLCB3aGVuIHdlIGRvIGJlY29tZSBlbmVtaWVzLCBiZWNhdXNlIHdlIGRpZmZlciBhYm91dCB0aGVtIGFuZCBjYW5ub3QgcmVhY2ggYW55IHNhdGlzZmFjdG9yeSBhZ3JlZW1lbnQ/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIFNvY3JhdGVzLCB0aGVzZSBhcmUgdGhlIHF1ZXN0aW9ucyBhYm91dCB3aGljaCB3ZSBzaG91bGQgYmVjb21lIGVuZW1pZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIFNvY3JhdGVzLCB0aGVzZSBhcmUgdGhlIHF1ZXN0aW9ucyBhYm91dCB3aGljaCB3ZSBzaG91bGQgYmVjb21lIGVuZW1pZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgaG93IGFib3V0IHRoZSBnb2RzLDwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgaG93IGFib3V0IHRoZSBnb2RzLDwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklmIHRoZXkgZGlzYWdyZWUsIHdvdWxkIHRoZXkgbm90IGRpc2FncmVlIGFib3V0IHRoZXNlIHF1ZXN0aW9ucz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklmIHRoZXkgZGlzYWdyZWUsIHdvdWxkIHRoZXkgbm90IGRpc2FncmVlIGFib3V0IHRoZXNlIHF1ZXN0aW9ucz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5OZWNlc3NhcmlseS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjdlIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TmVjZXNzYXJpbHkuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3ZSIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC90cmFuc2xhdGlvbj4="
translation['7.7e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3ZSIgdW5pdD0ic2VjdGlvbiIgLz48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiwgbXkgbm9ibGUgRXV0aHlwaHJvLCBhY2NvcmRpbmcgdG8gd2hhdCB5b3Ugc2F5LCBzb21lIG9mIHRoZSBnb2RzIHRvbyB0aGluayBzb21lIHRoaW5ncyBhcmUgcmlnaHQgb3Igd3JvbmcgYW5kIG5vYmxlIG9yIGRpc2dyYWNlZnVsLCBhbmQgZ29vZCBvciBiYWQsIGFuZCBvdGhlcnMgZGlzYWdyZWU7ICBmb3IgdGhleSB3b3VsZCBub3QgcXVhcnJlbCB3aXRoIGVhY2ggb3RoZXIgaWYgdGhleSBkaWQgbm90IGRpc2FncmVlIGFib3V0IHRoZXNlIG1hdHRlcnMuICBJcyB0aGF0IHRoZSBjYXNlPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCBteSBub2JsZSBFdXRoeXBocm8sIGFjY29yZGluZyB0byB3aGF0IHlvdSBzYXksIHNvbWUgb2YgdGhlIGdvZHMgdG9vIHRoaW5rIHNvbWUgdGhpbmdzIGFyZSByaWdodCBvciB3cm9uZyBhbmQgbm9ibGUgb3IgZGlzZ3JhY2VmdWwsIGFuZCBnb29kIG9yIGJhZCwgYW5kIG90aGVycyBkaXNhZ3JlZTsgIGZvciB0aGV5IHdvdWxkIG5vdCBxdWFycmVsIHdpdGggZWFjaCBvdGhlciBpZiB0aGV5IGRpZCBub3QgZGlzYWdyZWUgYWJvdXQgdGhlc2UgbWF0dGVycy4gIElzIHRoYXQgdGhlIGNhc2U/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WW91IGFyZSByaWdodC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPllvdSBhcmUgcmlnaHQuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHRoZSBnb2RzIGluIGVhY2ggZ3JvdXAgbG92ZSB0aGUgdGhpbmdzIHdoaWNoIHRoZXkgY29uc2lkZXIgZ29vZCBhbmQgcmlnaHQgYW5kIGhhdGUgdGhlIG9wcG9zaXRlcyBvZiB0aGVzZSB0aGluZ3M/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gdGhlIGdvZHMgaW4gZWFjaCBncm91cCBsb3ZlIHRoZSB0aGluZ3Mgd2hpY2ggdGhleSBjb25zaWRlciBnb29kIGFuZCByaWdodCBhbmQgaGF0ZSB0aGUgb3Bwb3NpdGVzIG9mIHRoZXNlIHRoaW5ncz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgeW91IHNheSB0aGF0IHRoZSBzYW1lIHRoaW5ncyBhcmUgY29uc2lkZXJlZCByaWdodCBieSBzb21lIG9mIHRoZW0gYW5kIHdyb25nIGJ5IG90aGVyczsgIGFuZCBpdCBpcyBiZWNhdXNlIHRoZXkgZGlzYWdyZWUgYWJvdXQgdGhlc2UgdGhpbmdzCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iOGEiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCB0aGV5IHF1YXJyZWwgYW5kIHdhZ2Ugd2FyIHdpdGggZWFjaCBvdGhlci4gIElzIG5vdCB0aGlzIHdoYXQgeW91IHNhaWQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCB5b3Ugc2F5IHRoYXQgdGhlIHNhbWUgdGhpbmdzIGFyZSBjb25zaWRlcmVkIHJpZ2h0IGJ5IHNvbWUgb2YgdGhlbSBhbmQgd3JvbmcgYnkgb3RoZXJzOyAgYW5kIGl0IGlzIGJlY2F1c2UgdGhleSBkaXNhZ3JlZSBhYm91dCB0aGVzZSB0aGluZ3MKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjgiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI4YSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IHRoZXkgcXVhcnJlbCBhbmQgd2FnZSB3YXIgd2l0aCBlYWNoIG90aGVyLiAgSXMgbm90IHRoaXMgd2hhdCB5b3Ugc2FpZD88L3A+PC90cmFuc2xhdGlvbj4="
translation['8.8a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4YSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IHRoZXkgcXVhcnJlbCBhbmQgd2FnZSB3YXIgd2l0aCBlYWNoIG90aGVyLiAgSXMgbm90IHRoaXMgd2hhdCB5b3Ugc2FpZD88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkl0IGlzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SXQgaXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCBhcyBpdCBzZWVtcywgdGhlIHNhbWUgdGhpbmdzIGFyZSBoYXRlZCBhbmQgbG92ZWQgYnkgdGhlIGdvZHMsIGFuZCB0aGUgc2FtZSB0aGluZ3Mgd291bGQgYmUgZGVhciBhbmQgaGF0ZWZ1bCB0byB0aGUgZ29kcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiwgYXMgaXQgc2VlbXMsIHRoZSBzYW1lIHRoaW5ncyBhcmUgaGF0ZWQgYW5kIGxvdmVkIGJ5IHRoZSBnb2RzLCBhbmQgdGhlIHNhbWUgdGhpbmdzIHdvdWxkIGJlIGRlYXIgYW5kIGhhdGVmdWwgdG8gdGhlIGdvZHMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U28gaXQgc2VlbXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5TbyBpdCBzZWVtcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB0aGVuIHRoZSBzYW1lIHRoaW5ncyB3b3VsZCBiZSBib3RoIGhvbHkgYW5kIHVuaG9seSwgRXV0aHlwaHJvLCBhY2NvcmRpbmcgdG8gdGhpcyBzdGF0ZW1lbnQuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB0aGVuIHRoZSBzYW1lIHRoaW5ncyB3b3VsZCBiZSBib3RoIGhvbHkgYW5kIHVuaG9seSwgRXV0aHlwaHJvLCBhY2NvcmRpbmcgdG8gdGhpcyBzdGF0ZW1lbnQuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBzdXBwb3NlIHNvLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBzdXBwb3NlIHNvLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB5b3UgZGlkIG5vdCBhbnN3ZXIgbXkgcXVlc3Rpb24sIG15IGZyaWVuZC4gIEZvciBJIGRpZCBub3QgYXNrIHlvdSB3aGF0IGlzIGF0IG9uY2UgaG9seSBhbmQgdW5ob2x5OyAgYnV0LCBqdWRnaW5nIGZyb20geW91ciByZXBseSwgd2hhdCBpcyBkZWFyIHRvIHRoZSBnb2RzIGlzIGFsc28gaGF0ZWZ1bCB0byB0aGUgZ29kcy4gIEFuZCBzbywgRXV0aHlwaHJvLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOGIiIHVuaXQ9InNlY3Rpb24iIC8+aXQgd291bGQgbm90IGJlIHN1cnByaXNpbmcgaWYsIGluIHB1bmlzaGluZyB5b3VyIGZhdGhlciBhcyB5b3UgYXJlIGRvaW5nLCB5b3Ugd2VyZSBwZXJmb3JtaW5nIGFuIGFjdCB0aGF0IGlzIHBsZWFzaW5nIHRvIFpldXMsIGJ1dCBoYXRlZnVsIHRvIENyb251cyBhbmQgVXJhbnVzLCBhbmQgcGxlYXNpbmcgdG8gSGVwaGFlc3R1cywgYnV0IGhhdGVmdWwgdG8gSGVyYSwgYW5kIHNvIGZvcnRoIGluIHJlc3BlY3QgdG8gdGhlIG90aGVyIGdvZHMsIGlmIGFueSBkaXNhZ3JlZSB3aXRoIGFueSBvdGhlciBhYm91dCBpdC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB5b3UgZGlkIG5vdCBhbnN3ZXIgbXkgcXVlc3Rpb24sIG15IGZyaWVuZC4gIEZvciBJIGRpZCBub3QgYXNrIHlvdSB3aGF0IGlzIGF0IG9uY2UgaG9seSBhbmQgdW5ob2x5OyAgYnV0LCBqdWRnaW5nIGZyb20geW91ciByZXBseSwgd2hhdCBpcyBkZWFyIHRvIHRoZSBnb2RzIGlzIGFsc28gaGF0ZWZ1bCB0byB0aGUgZ29kcy4gIEFuZCBzbywgRXV0aHlwaHJvLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOGIiIHVuaXQ9InNlY3Rpb24iIC8+aXQgd291bGQgbm90IGJlIHN1cnByaXNpbmcgaWYsIGluIHB1bmlzaGluZyB5b3VyIGZhdGhlciBhcyB5b3UgYXJlIGRvaW5nLCB5b3Ugd2VyZSBwZXJmb3JtaW5nIGFuIGFjdCB0aGF0IGlzIHBsZWFzaW5nIHRvIFpldXMsIGJ1dCBoYXRlZnVsIHRvIENyb251cyBhbmQgVXJhbnVzLCBhbmQgcGxlYXNpbmcgdG8gSGVwaGFlc3R1cywgYnV0IGhhdGVmdWwgdG8gSGVyYSwgYW5kIHNvIGZvcnRoIGluIHJlc3BlY3QgdG8gdGhlIG90aGVyIGdvZHMsIGlmIGFueSBkaXNhZ3JlZSB3aXRoIGFueSBvdGhlciBhYm91dCBpdC48L3A+PC90cmFuc2xhdGlvbj4="
translation['8.8b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4YiIgdW5pdD0ic2VjdGlvbiIgLz5pdCB3b3VsZCBub3QgYmUgc3VycHJpc2luZyBpZiwgaW4gcHVuaXNoaW5nIHlvdXIgZmF0aGVyIGFzIHlvdSBhcmUgZG9pbmcsIHlvdSB3ZXJlIHBlcmZvcm1pbmcgYW4gYWN0IHRoYXQgaXMgcGxlYXNpbmcgdG8gWmV1cywgYnV0IGhhdGVmdWwgdG8gQ3JvbnVzIGFuZCBVcmFudXMsIGFuZCBwbGVhc2luZyB0byBIZXBoYWVzdHVzLCBidXQgaGF0ZWZ1bCB0byBIZXJhLCBhbmQgc28gZm9ydGggaW4gcmVzcGVjdCB0byB0aGUgb3RoZXIgZ29kcywgaWYgYW55IGRpc2FncmVlIHdpdGggYW55IG90aGVyIGFib3V0IGl0LjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IEkgdGhpbmssIFNvY3JhdGVzLCB0aGF0IG5vbmUgb2YgdGhlIGdvZHMgZGlzYWdyZWVzIHdpdGggYW55IG90aGVyIGFib3V0IHRoaXMsIG9yIGhvbGRzIHRoYXQgaGUgd2hvIGtpbGxzIGFueW9uZSB3cm9uZ2Z1bGx5IG91Z2h0IG5vdCB0byBwYXkgdGhlIHBlbmFsdHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgSSB0aGluaywgU29jcmF0ZXMsIHRoYXQgbm9uZSBvZiB0aGUgZ29kcyBkaXNhZ3JlZXMgd2l0aCBhbnkgb3RoZXIgYWJvdXQgdGhpcywgb3IgaG9sZHMgdGhhdCBoZSB3aG8ga2lsbHMgYW55b25lIHdyb25nZnVsbHkgb3VnaHQgbm90IHRvIHBheSB0aGUgcGVuYWx0eS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwsIEV1dGh5cGhybywgdG8gcmV0dXJuIHRvIG1lbiwgZGlkIHlvdSBldmVyIGhlYXIgYW55Ym9keSBhcmd1aW5nIHRoYXQgaGUgd2hvIGhhZCBraWxsZWQgYW55b25lIHdyb25nZnVsbHksCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4YyIgdW5pdD0ic2VjdGlvbiIgLz5vciBoYWQgZG9uZSBhbnl0aGluZyBlbHNlIHdoYXRldmVyIHdyb25nZnVsbHksIG91Z2h0IG5vdCB0byBwYXkgdGhlIHBlbmFsdHk/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwsIEV1dGh5cGhybywgdG8gcmV0dXJuIHRvIG1lbiwgZGlkIHlvdSBldmVyIGhlYXIgYW55Ym9keSBhcmd1aW5nIHRoYXQgaGUgd2hvIGhhZCBraWxsZWQgYW55b25lIHdyb25nZnVsbHksCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4YyIgdW5pdD0ic2VjdGlvbiIgLz5vciBoYWQgZG9uZSBhbnl0aGluZyBlbHNlIHdoYXRldmVyIHdyb25nZnVsbHksIG91Z2h0IG5vdCB0byBwYXkgdGhlIHBlbmFsdHk/PC9wPjwvdHJhbnNsYXRpb24+"
translation['8.8c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4YyIgdW5pdD0ic2VjdGlvbiIgLz5vciBoYWQgZG9uZSBhbnl0aGluZyBlbHNlIHdoYXRldmVyIHdyb25nZnVsbHksIG91Z2h0IG5vdCB0byBwYXkgdGhlIHBlbmFsdHk/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaHksIHRoZXkgYXJlIGFsd2F5cyBhcmd1aW5nIHRoZXNlIHBvaW50cywgZXNwZWNpYWxseSBpbiB0aGUgbGF3IGNvdXJ0cy4gIEZvciB0aGV5IGRvIHZlcnkgbWFueSB3cm9uZyB0aGluZ3M7ICBhbmQgdGhlbiB0aGVyZSBpcyBub3RoaW5nIHRoZXkgd2lsbCBub3QgZG8gb3Igc2F5LCBpbiBkZWZlbmRpbmcgdGhlbXNlbHZlcywgdG8gYXZvaWQgdGhlIHBlbmFsdHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaHksIHRoZXkgYXJlIGFsd2F5cyBhcmd1aW5nIHRoZXNlIHBvaW50cywgZXNwZWNpYWxseSBpbiB0aGUgbGF3IGNvdXJ0cy4gIEZvciB0aGV5IGRvIHZlcnkgbWFueSB3cm9uZyB0aGluZ3M7ICBhbmQgdGhlbiB0aGVyZSBpcyBub3RoaW5nIHRoZXkgd2lsbCBub3QgZG8gb3Igc2F5LCBpbiBkZWZlbmRpbmcgdGhlbXNlbHZlcywgdG8gYXZvaWQgdGhlIHBlbmFsdHkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIGJ1dCBkbyB0aGV5IGFja25vd2xlZGdlLCBFdXRoeXBocm8sIHRoYXQgdGhleSBoYXZlIGRvbmUgd3JvbmcgYW5kLCBhbHRob3VnaCB0aGV5IGFja25vd2xlZGdlIGl0LCBuZXZlcnRoZWxlc3Mgc2F5IHRoYXQgdGhleSBvdWdodCBub3QgdG8gcGF5IHRoZSBwZW5hbHR5PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIGJ1dCBkbyB0aGV5IGFja25vd2xlZGdlLCBFdXRoeXBocm8sIHRoYXQgdGhleSBoYXZlIGRvbmUgd3JvbmcgYW5kLCBhbHRob3VnaCB0aGV5IGFja25vd2xlZGdlIGl0LCBuZXZlcnRoZWxlc3Mgc2F5IHRoYXQgdGhleSBvdWdodCBub3QgdG8gcGF5IHRoZSBwZW5hbHR5PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9oLCBubywgdGhleSBkb24ndCBkbyB0aGF0LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2gsIG5vLCB0aGV5IGRvbid0IGRvIHRoYXQuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHRoZXJlIGlzIHNvbWV0aGluZyB0aGV5IGRvIG5vdCBkbyBhbmQgc2F5LiAgRm9yIHRoZXkgZG8gbm90LCBJIGZhbmN5LCBkYXJlIHRvIHNheSBhbmQgYXJndWUgdGhhdCwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjhkIiB1bml0PSJzZWN0aW9uIiAvPmlmIHRoZXkgaGF2ZSByZWFsbHkgZG9uZSB3cm9uZywgdGhleSBvdWdodCBub3QgdG8gcGF5IHRoZSBwZW5hbHR5OyAgYnV0LCBJIHRoaW5rLCB0aGV5IHNheSB0aGV5IGhhdmUgbm90IGRvbmUgd3Jvbmc7ICBkbyB0aGV5IG5vdD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB0aGVyZSBpcyBzb21ldGhpbmcgdGhleSBkbyBub3QgZG8gYW5kIHNheS4gIEZvciB0aGV5IGRvIG5vdCwgSSBmYW5jeSwgZGFyZSB0byBzYXkgYW5kIGFyZ3VlIHRoYXQsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4ZCIgdW5pdD0ic2VjdGlvbiIgLz5pZiB0aGV5IGhhdmUgcmVhbGx5IGRvbmUgd3JvbmcsIHRoZXkgb3VnaHQgbm90IHRvIHBheSB0aGUgcGVuYWx0eTsgIGJ1dCwgSSB0aGluaywgdGhleSBzYXkgdGhleSBoYXZlIG5vdCBkb25lIHdyb25nOyAgZG8gdGhleSBub3Q/PC9wPjwvdHJhbnNsYXRpb24+"
translation['8.8d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4ZCIgdW5pdD0ic2VjdGlvbiIgLz5pZiB0aGV5IGhhdmUgcmVhbGx5IGRvbmUgd3JvbmcsIHRoZXkgb3VnaHQgbm90IHRvIHBheSB0aGUgcGVuYWx0eTsgIGJ1dCwgSSB0aGluaywgdGhleSBzYXkgdGhleSBoYXZlIG5vdCBkb25lIHdyb25nOyAgZG8gdGhleSBub3Q/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Zb3UgYXJlIHJpZ2h0LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WW91IGFyZSByaWdodC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gdGhleSBkbyBub3QgYXJndWUgdGhpcyBwb2ludCwgdGhhdCB0aGUgd3Jvbmdkb2VyIG11c3Qgbm90IHBheSB0aGUgcGVuYWx0eTsgIGJ1dCBwZXJoYXBzIHRoZXkgYXJndWUgYWJvdXQgdGhpcywgd2hvIGlzIGEgd3Jvbmdkb2VyLCBhbmQgd2hhdCBoZSBkaWQsIGFuZCB3aGVuLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHRoZXkgZG8gbm90IGFyZ3VlIHRoaXMgcG9pbnQsIHRoYXQgdGhlIHdyb25nZG9lciBtdXN0IG5vdCBwYXkgdGhlIHBlbmFsdHk7ICBidXQgcGVyaGFwcyB0aGV5IGFyZ3VlIGFib3V0IHRoaXMsIHdobyBpcyBhIHdyb25nZG9lciwgYW5kIHdoYXQgaGUgZGlkLCBhbmQgd2hlbi48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGF0IGlzIHRydWUuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGF0IGlzIHRydWUuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGlzIG5vdCB0aGUgc2FtZSB0aGluZyB0cnVlIG9mIHRoZSBnb2RzLCBpZiB0aGV5IHF1YXJyZWwgYWJvdXQgcmlnaHQgYW5kIHdyb25nLCBhcyB5b3Ugc2F5LCBhbmQgc29tZSBzYXkgb3RoZXJzIGhhdmUgZG9uZSB3cm9uZywgYW5kIHNvbWUgc2F5IHRoZXkgaGF2ZSBub3Q/ICBGb3Igc3VyZWx5LCBteSBmcmllbmQsIG5vIG9uZSwgZWl0aGVyIG9mIGdvZHMgb3IgbWVuLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOGUiIHVuaXQ9InNlY3Rpb24iIC8+aGFzIHRoZSBmYWNlIHRvIHNheSB0aGF0IGhlIHdobyBkb2VzIHdyb25nIG91Z2h0IG5vdCB0byBwYXkgdGhlIHBlbmFsdHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gaXMgbm90IHRoZSBzYW1lIHRoaW5nIHRydWUgb2YgdGhlIGdvZHMsIGlmIHRoZXkgcXVhcnJlbCBhYm91dCByaWdodCBhbmQgd3JvbmcsIGFzIHlvdSBzYXksIGFuZCBzb21lIHNheSBvdGhlcnMgaGF2ZSBkb25lIHdyb25nLCBhbmQgc29tZSBzYXkgdGhleSBoYXZlIG5vdD8gIEZvciBzdXJlbHksIG15IGZyaWVuZCwgbm8gb25lLCBlaXRoZXIgb2YgZ29kcyBvciBtZW4sCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4ZSIgdW5pdD0ic2VjdGlvbiIgLz5oYXMgdGhlIGZhY2UgdG8gc2F5IHRoYXQgaGUgd2hvIGRvZXMgd3Jvbmcgb3VnaHQgbm90IHRvIHBheSB0aGUgcGVuYWx0eS48L3A+PC90cmFuc2xhdGlvbj4="
translation['8.8e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4ZSIgdW5pdD0ic2VjdGlvbiIgLz5oYXMgdGhlIGZhY2UgdG8gc2F5IHRoYXQgaGUgd2hvIGRvZXMgd3Jvbmcgb3VnaHQgbm90IHRvIHBheSB0aGUgcGVuYWx0eS48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywgeW91IGFyZSByaWdodCBhYm91dCB0aGlzLCBTb2NyYXRlcywgaW4gdGhlIG1haW4uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIHlvdSBhcmUgcmlnaHQgYWJvdXQgdGhpcywgU29jcmF0ZXMsIGluIHRoZSBtYWluLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IEkgdGhpbmssIEV1dGh5cGhybywgdGhvc2Ugd2hvIGRpc3B1dGUsIGJvdGggbWVuIGFuZCBnb2RzLCBpZiB0aGUgZ29kcyBkbyBkaXNwdXRlLCBkaXNwdXRlIGFib3V0IGVhY2ggc2VwYXJhdGUgYWN0LiAgV2hlbiB0aGV5IGRpZmZlciB3aXRoIG9uZSBhbm90aGVyIGFib3V0IGFueSBhY3QsIHNvbWUgc2F5IGl0IHdhcyByaWdodCBhbmQgb3RoZXJzIHRoYXQgaXQgd2FzIHdyb25nLiAgSXMgaXQgbm90IHNvPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgSSB0aGluaywgRXV0aHlwaHJvLCB0aG9zZSB3aG8gZGlzcHV0ZSwgYm90aCBtZW4gYW5kIGdvZHMsIGlmIHRoZSBnb2RzIGRvIGRpc3B1dGUsIGRpc3B1dGUgYWJvdXQgZWFjaCBzZXBhcmF0ZSBhY3QuICBXaGVuIHRoZXkgZGlmZmVyIHdpdGggb25lIGFub3RoZXIgYWJvdXQgYW55IGFjdCwgc29tZSBzYXkgaXQgd2FzIHJpZ2h0IGFuZCBvdGhlcnMgdGhhdCBpdCB3YXMgd3JvbmcuICBJcyBpdCBub3Qgc28/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q29tZSBub3csIG15IGRlYXIgRXV0aHlwaHJvLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjlhIiB1bml0PSJzZWN0aW9uIiAvPmluZm9ybSBtZSwgdGhhdCBJIG1heSBiZSBtYWRlIHdpc2VyLCB3aGF0IHByb29mIHlvdSBoYXZlIHRoYXQgYWxsIHRoZSBnb2RzIHRoaW5rIHRoYXQgdGhlIG1hbiBsb3N0IGhpcyBsaWZlIHdyb25nZnVsbHksIHdobywgd2hlbiBoZSB3YXMgYSBzZXJ2YW50LCBjb21taXR0ZWQgbXVyZGVyLCB3YXMgYm91bmQgYnkgdGhlIG1hc3RlciBvZiB0aGUgbWFuIGhlIGtpbGxlZCwgYW5kIGRpZWQgYXMgYSByZXN1bHQgb2YgaGlzIGJvbmRzIGJlZm9yZSB0aGUgbWFzdGVyIHdobyBoYWQgYm91bmQgaGltIGZvdW5kIG91dCBmcm9tIHRoZSBhZHZpc2VycyB3aGF0IGhlIG91Z2h0IHRvIGRvIHdpdGggaGltLCBhbmQgdGhhdCBpdCBpcyByaWdodCBvbiBhY2NvdW50IG9mIHN1Y2ggYSBtYW4gZm9yIGEgc29uIHRvIHByb2NlZWQgYWdhaW5zdCBoaXMgZmF0aGVyIGFuZCBhY2N1c2UgaGltIG9mIG11cmRlci4gIENvbWUsIHRyeSB0byBzaG93IG1lIGNsZWFybHkgYWJvdXQgdGhpcywgdGhhdAo8bWlsZXN0b25lIG49IjliIiB1bml0PSJzZWN0aW9uIiAvPnRoZSBnb2RzIHN1cmVseSBiZWxpZXZlIHRoYXQgdGhpcyBjb25kdWN0IGlzIHJpZ2h0OyAgYW5kIGlmIHlvdSBzaG93IGl0IHRvIG15IHNhdGlzZmFjdGlvbiwgSSB3aWxsIGdsb3JpZnkgeW91ciB3aXNkb20gYXMgbG9uZyBhcyBJIGxpdmUuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNvbWUgbm93LCBteSBkZWFyIEV1dGh5cGhybywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjkiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI5YSIgdW5pdD0ic2VjdGlvbiIgLz5pbmZvcm0gbWUsIHRoYXQgSSBtYXkgYmUgbWFkZSB3aXNlciwgd2hhdCBwcm9vZiB5b3UgaGF2ZSB0aGF0IGFsbCB0aGUgZ29kcyB0aGluayB0aGF0IHRoZSBtYW4gbG9zdCBoaXMgbGlmZSB3cm9uZ2Z1bGx5LCB3aG8sIHdoZW4gaGUgd2FzIGEgc2VydmFudCwgY29tbWl0dGVkIG11cmRlciwgd2FzIGJvdW5kIGJ5IHRoZSBtYXN0ZXIgb2YgdGhlIG1hbiBoZSBraWxsZWQsIGFuZCBkaWVkIGFzIGEgcmVzdWx0IG9mIGhpcyBib25kcyBiZWZvcmUgdGhlIG1hc3RlciB3aG8gaGFkIGJvdW5kIGhpbSBmb3VuZCBvdXQgZnJvbSB0aGUgYWR2aXNlcnMgd2hhdCBoZSBvdWdodCB0byBkbyB3aXRoIGhpbSwgYW5kIHRoYXQgaXQgaXMgcmlnaHQgb24gYWNjb3VudCBvZiBzdWNoIGEgbWFuIGZvciBhIHNvbiB0byBwcm9jZWVkIGFnYWluc3QgaGlzIGZhdGhlciBhbmQgYWNjdXNlIGhpbSBvZiBtdXJkZXIuICBDb21lLCB0cnkgdG8gc2hvdyBtZSBjbGVhcmx5IGFib3V0IHRoaXMsIHRoYXQKPG1pbGVzdG9uZSBuPSI5YiIgdW5pdD0ic2VjdGlvbiIgLz50aGUgZ29kcyBzdXJlbHkgYmVsaWV2ZSB0aGF0IHRoaXMgY29uZHVjdCBpcyByaWdodDsgIGFuZCBpZiB5b3Ugc2hvdyBpdCB0byBteSBzYXRpc2ZhY3Rpb24sIEkgd2lsbCBnbG9yaWZ5IHlvdXIgd2lzZG9tIGFzIGxvbmcgYXMgSSBsaXZlLjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['9.9a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5YSIgdW5pdD0ic2VjdGlvbiIgLz5pbmZvcm0gbWUsIHRoYXQgSSBtYXkgYmUgbWFkZSB3aXNlciwgd2hhdCBwcm9vZiB5b3UgaGF2ZSB0aGF0IGFsbCB0aGUgZ29kcyB0aGluayB0aGF0IHRoZSBtYW4gbG9zdCBoaXMgbGlmZSB3cm9uZ2Z1bGx5LCB3aG8sIHdoZW4gaGUgd2FzIGEgc2VydmFudCwgY29tbWl0dGVkIG11cmRlciwgd2FzIGJvdW5kIGJ5IHRoZSBtYXN0ZXIgb2YgdGhlIG1hbiBoZSBraWxsZWQsIGFuZCBkaWVkIGFzIGEgcmVzdWx0IG9mIGhpcyBib25kcyBiZWZvcmUgdGhlIG1hc3RlciB3aG8gaGFkIGJvdW5kIGhpbSBmb3VuZCBvdXQgZnJvbSB0aGUgYWR2aXNlcnMgd2hhdCBoZSBvdWdodCB0byBkbyB3aXRoIGhpbSwgYW5kIHRoYXQgaXQgaXMgcmlnaHQgb24gYWNjb3VudCBvZiBzdWNoIGEgbWFuIGZvciBhIHNvbiB0byBwcm9jZWVkIGFnYWluc3QgaGlzIGZhdGhlciBhbmQgYWNjdXNlIGhpbSBvZiBtdXJkZXIuICBDb21lLCB0cnkgdG8gc2hvdyBtZSBjbGVhcmx5IGFib3V0IHRoaXMsIHRoYXQKPC90cmFuc2xhdGlvbj4="
translation['9.9b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5YiIgdW5pdD0ic2VjdGlvbiIgLz50aGUgZ29kcyBzdXJlbHkgYmVsaWV2ZSB0aGF0IHRoaXMgY29uZHVjdCBpcyByaWdodDsgIGFuZCBpZiB5b3Ugc2hvdyBpdCB0byBteSBzYXRpc2ZhY3Rpb24sIEkgd2lsbCBnbG9yaWZ5IHlvdXIgd2lzZG9tIGFzIGxvbmcgYXMgSSBsaXZlLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHBlcmhhcHMgdGhpcyBpcyBubyBzbWFsbCB0YXNrLCBTb2NyYXRlczsgIHRob3VnaCBJIGNvdWxkIHNob3cgeW91IHF1aXRlIGNsZWFybHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgcGVyaGFwcyB0aGlzIGlzIG5vIHNtYWxsIHRhc2ssIFNvY3JhdGVzOyAgdGhvdWdoIEkgY291bGQgc2hvdyB5b3UgcXVpdGUgY2xlYXJseS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdW5kZXJzdGFuZDsgIGl0IGlzIGJlY2F1c2UgeW91IHRoaW5rIEkgYW0gc2xvd2VyIHRvIHVuZGVyc3RhbmQgdGhhbiB0aGUganVkZ2VzOyAgc2luY2UgaXQgaXMgcGxhaW4gdGhhdCB5b3Ugd2lsbCBzaG93IHRoZW0gdGhhdCBzdWNoIGFjdHMgYXJlIHdyb25nIGFuZCB0aGF0IGFsbCB0aGUgZ29kcyBoYXRlIHRoZW0uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdW5kZXJzdGFuZDsgIGl0IGlzIGJlY2F1c2UgeW91IHRoaW5rIEkgYW0gc2xvd2VyIHRvIHVuZGVyc3RhbmQgdGhhbiB0aGUganVkZ2VzOyAgc2luY2UgaXQgaXMgcGxhaW4gdGhhdCB5b3Ugd2lsbCBzaG93IHRoZW0gdGhhdCBzdWNoIGFjdHMgYXJlIHdyb25nIGFuZCB0aGF0IGFsbCB0aGUgZ29kcyBoYXRlIHRoZW0uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UXVpdGUgY2xlYXJseSwgU29jcmF0ZXM7ICB0aGF0IGlzLCBpZiB0aGV5IGxpc3RlbiB0byBtZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlF1aXRlIGNsZWFybHksIFNvY3JhdGVzOyAgdGhhdCBpcywgaWYgdGhleSBsaXN0ZW4gdG8gbWUuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGV5IHdpbGwgbGlzdGVuLCBpZiB0aGV5IGZpbmQgdGhhdCB5b3UgYXJlIGEgZ29vZCBzcGVha2VyLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOWMiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IHRoaXMgb2NjdXJyZWQgdG8gbWUgd2hpbGUgeW91IHdlcmUgdGFsa2luZywgYW5kIEkgc2FpZCB0byBteXNlbGY6ICDigJxJZiBFdXRoeXBocm8gc2hvdWxkIHByb3ZlIHRvIG1lIG5vIG1hdHRlciBob3cgY2xlYXJseSB0aGF0IGFsbCB0aGUgZ29kcyB0aGluayBzdWNoIGEgZGVhdGggaXMgd3JvbmdmdWwsIHdoYXQgaGF2ZSBJIGxlYXJuZWQgZnJvbSBFdXRoeXBocm8gYWJvdXQgdGhlIHF1ZXN0aW9uLCB3aGF0IGlzIGhvbGluZXNzIGFuZCB3aGF0IGlzIHVuaG9saW5lc3M/ICBGb3IgdGhpcyBhY3Qgd291bGQsIGFzIGl0IHNlZW1zLCBiZSBoYXRlZnVsIHRvIHRoZSBnb2RzOyAgYnV0IHdlIHNhdyBqdXN0IG5vdyB0aGF0IGhvbGluZXNzIGFuZCBpdHMgb3Bwb3NpdGUgYXJlIG5vdCBkZWZpbmVkIGluIHRoaXMgd2F5OyAgZm9yIHdlIHNhdyB0aGF0IHdoYXQgaXMgaGF0ZWZ1bCB0byB0aGUgZ29kcyBpcyBhbHNvIGRlYXIgdG8gdGhlbTsgIGFuZCBzbyBJIGxldCB5b3Ugb2ZmIGFueSBkaXNjdXNzaW9uIG9mIHRoaXMgcG9pbnQsPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZXkgd2lsbCBsaXN0ZW4sIGlmIHRoZXkgZmluZCB0aGF0IHlvdSBhcmUgYSBnb29kIHNwZWFrZXIuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5YyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhpcyBvY2N1cnJlZCB0byBtZSB3aGlsZSB5b3Ugd2VyZSB0YWxraW5nLCBhbmQgSSBzYWlkIHRvIG15c2VsZjogIOKAnElmIEV1dGh5cGhybyBzaG91bGQgcHJvdmUgdG8gbWUgbm8gbWF0dGVyIGhvdyBjbGVhcmx5IHRoYXQgYWxsIHRoZSBnb2RzIHRoaW5rIHN1Y2ggYSBkZWF0aCBpcyB3cm9uZ2Z1bCwgd2hhdCBoYXZlIEkgbGVhcm5lZCBmcm9tIEV1dGh5cGhybyBhYm91dCB0aGUgcXVlc3Rpb24sIHdoYXQgaXMgaG9saW5lc3MgYW5kIHdoYXQgaXMgdW5ob2xpbmVzcz8gIEZvciB0aGlzIGFjdCB3b3VsZCwgYXMgaXQgc2VlbXMsIGJlIGhhdGVmdWwgdG8gdGhlIGdvZHM7ICBidXQgd2Ugc2F3IGp1c3Qgbm93IHRoYXQgaG9saW5lc3MgYW5kIGl0cyBvcHBvc2l0ZSBhcmUgbm90IGRlZmluZWQgaW4gdGhpcyB3YXk7ICBmb3Igd2Ugc2F3IHRoYXQgd2hhdCBpcyBoYXRlZnVsIHRvIHRoZSBnb2RzIGlzIGFsc28gZGVhciB0byB0aGVtOyAgYW5kIHNvIEkgbGV0IHlvdSBvZmYgYW55IGRpc2N1c3Npb24gb2YgdGhpcyBwb2ludCw8L3A+PC90cmFuc2xhdGlvbj4="
translation['9.9c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5YyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhpcyBvY2N1cnJlZCB0byBtZSB3aGlsZSB5b3Ugd2VyZSB0YWxraW5nLCBhbmQgSSBzYWlkIHRvIG15c2VsZjogIOKAnElmIEV1dGh5cGhybyBzaG91bGQgcHJvdmUgdG8gbWUgbm8gbWF0dGVyIGhvdyBjbGVhcmx5IHRoYXQgYWxsIHRoZSBnb2RzIHRoaW5rIHN1Y2ggYSBkZWF0aCBpcyB3cm9uZ2Z1bCwgd2hhdCBoYXZlIEkgbGVhcm5lZCBmcm9tIEV1dGh5cGhybyBhYm91dCB0aGUgcXVlc3Rpb24sIHdoYXQgaXMgaG9saW5lc3MgYW5kIHdoYXQgaXMgdW5ob2xpbmVzcz8gIEZvciB0aGlzIGFjdCB3b3VsZCwgYXMgaXQgc2VlbXMsIGJlIGhhdGVmdWwgdG8gdGhlIGdvZHM7ICBidXQgd2Ugc2F3IGp1c3Qgbm93IHRoYXQgaG9saW5lc3MgYW5kIGl0cyBvcHBvc2l0ZSBhcmUgbm90IGRlZmluZWQgaW4gdGhpcyB3YXk7ICBmb3Igd2Ugc2F3IHRoYXQgd2hhdCBpcyBoYXRlZnVsIHRvIHRoZSBnb2RzIGlzIGFsc28gZGVhciB0byB0aGVtOyAgYW5kIHNvIEkgbGV0IHlvdSBvZmYgYW55IGRpc2N1c3Npb24gb2YgdGhpcyBwb2ludCw8c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklmIHlvdSBsaWtlLCBhbGwgdGhlIGdvZHMKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjlkIiB1bml0PSJzZWN0aW9uIiAvPm1heSB0aGluayBpdCB3cm9uZyBhbmQgbWF5IGhhdGUgaXQuICBCdXQgc2hhbGwgd2Ugbm93IGVtZW5kIG91ciBkZWZpbml0aW9uIGFuZCBzYXkgdGhhdCB3aGF0ZXZlciBhbGwgdGhlIGdvZHMgaGF0ZSBpcyB1bmhvbHkgYW5kIHdoYXRldmVyIHRoZXkgYWxsIGxvdmUgaXMgaG9seSwgYW5kIHdoYXQgc29tZSBsb3ZlIGFuZCBvdGhlcnMgaGF0ZSBpcyBuZWl0aGVyIG9yIGJvdGg/ICBEbyB5b3Ugd2lzaCB0aGlzIG5vdyB0byBiZSBvdXIgZGVmaW5pdGlvbiBvZiBob2xpbmVzcyBhbmQgdW5ob2xpbmVzcz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklmIHlvdSBsaWtlLCBhbGwgdGhlIGdvZHMKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjlkIiB1bml0PSJzZWN0aW9uIiAvPm1heSB0aGluayBpdCB3cm9uZyBhbmQgbWF5IGhhdGUgaXQuICBCdXQgc2hhbGwgd2Ugbm93IGVtZW5kIG91ciBkZWZpbml0aW9uIGFuZCBzYXkgdGhhdCB3aGF0ZXZlciBhbGwgdGhlIGdvZHMgaGF0ZSBpcyB1bmhvbHkgYW5kIHdoYXRldmVyIHRoZXkgYWxsIGxvdmUgaXMgaG9seSwgYW5kIHdoYXQgc29tZSBsb3ZlIGFuZCBvdGhlcnMgaGF0ZSBpcyBuZWl0aGVyIG9yIGJvdGg/ICBEbyB5b3Ugd2lzaCB0aGlzIG5vdyB0byBiZSBvdXIgZGVmaW5pdGlvbiBvZiBob2xpbmVzcyBhbmQgdW5ob2xpbmVzcz88L3A+PC90cmFuc2xhdGlvbj4="
translation['9.9d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5ZCIgdW5pdD0ic2VjdGlvbiIgLz5tYXkgdGhpbmsgaXQgd3JvbmcgYW5kIG1heSBoYXRlIGl0LiAgQnV0IHNoYWxsIHdlIG5vdyBlbWVuZCBvdXIgZGVmaW5pdGlvbiBhbmQgc2F5IHRoYXQgd2hhdGV2ZXIgYWxsIHRoZSBnb2RzIGhhdGUgaXMgdW5ob2x5IGFuZCB3aGF0ZXZlciB0aGV5IGFsbCBsb3ZlIGlzIGhvbHksIGFuZCB3aGF0IHNvbWUgbG92ZSBhbmQgb3RoZXJzIGhhdGUgaXMgbmVpdGhlciBvciBib3RoPyAgRG8geW91IHdpc2ggdGhpcyBub3cgdG8gYmUgb3VyIGRlZmluaXRpb24gb2YgaG9saW5lc3MgYW5kIHVuaG9saW5lc3M/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IGlzIHRvIGhpbmRlciwgU29jcmF0ZXM/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IGlzIHRvIGhpbmRlciwgU29jcmF0ZXM/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3RoaW5nLCBzbyBmYXIgYXMgSSBhbSBjb25jZXJuZWQsIEV1dGh5cGhybywgYnV0IGNvbnNpZGVyIHlvdXIgb3duIHBvc2l0aW9uLCB3aGV0aGVyIGJ5IGFkb3B0aW5nIHRoaXMgZGVmaW5pdGlvbiB5b3Ugd2lsbCBtb3N0IGVhc2lseSB0ZWFjaCBtZSB3aGF0IHlvdSBwcm9taXNlZC4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjllIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3RoaW5nLCBzbyBmYXIgYXMgSSBhbSBjb25jZXJuZWQsIEV1dGh5cGhybywgYnV0IGNvbnNpZGVyIHlvdXIgb3duIHBvc2l0aW9uLCB3aGV0aGVyIGJ5IGFkb3B0aW5nIHRoaXMgZGVmaW5pdGlvbiB5b3Ugd2lsbCBtb3N0IGVhc2lseSB0ZWFjaCBtZSB3aGF0IHlvdSBwcm9taXNlZC4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjllIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['9.9e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5ZSIgdW5pdD0ic2VjdGlvbiIgLz48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwsIEkgc2hvdWxkIHNheSB0aGF0IHdoYXQgYWxsIHRoZSBnb2RzIGxvdmUgaXMgaG9seSBhbmQsIG9uIHRoZSBvdGhlciBoYW5kLCB3aGF0IHRoZXkgYWxsIGhhdGUgaXMgdW5ob2x5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgSSBzaG91bGQgc2F5IHRoYXQgd2hhdCBhbGwgdGhlIGdvZHMgbG92ZSBpcyBob2x5IGFuZCwgb24gdGhlIG90aGVyIGhhbmQsIHdoYXQgdGhleSBhbGwgaGF0ZSBpcyB1bmhvbHkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHNoYWxsIHdlIGV4YW1pbmUgdGhpcyBhZ2FpbiwgRXV0aHlwaHJvLCB0byBzZWUgaWYgaXQgaXMgY29ycmVjdCwgb3Igc2hhbGwgd2UgbGV0IGl0IGdvIGFuZCBhY2NlcHQgb3VyIG93biBzdGF0ZW1lbnQsIGFuZCB0aG9zZSBvZiBvdGhlcnMsIGFncmVlaW5nIHRoYXQgaXQgaXMgc28sIGlmIGFueW9uZSBtZXJlbHkgc2F5cyB0aGF0IGl0IGlzPyAgT3Igb3VnaHQgd2UgdG8gaW5xdWlyZSBpbnRvIHRoZSBjb3JyZWN0bmVzcyBvZiB0aGUgc3RhdGVtZW50PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHNoYWxsIHdlIGV4YW1pbmUgdGhpcyBhZ2FpbiwgRXV0aHlwaHJvLCB0byBzZWUgaWYgaXQgaXMgY29ycmVjdCwgb3Igc2hhbGwgd2UgbGV0IGl0IGdvIGFuZCBhY2NlcHQgb3VyIG93biBzdGF0ZW1lbnQsIGFuZCB0aG9zZSBvZiBvdGhlcnMsIGFncmVlaW5nIHRoYXQgaXQgaXMgc28sIGlmIGFueW9uZSBtZXJlbHkgc2F5cyB0aGF0IGl0IGlzPyAgT3Igb3VnaHQgd2UgdG8gaW5xdWlyZSBpbnRvIHRoZSBjb3JyZWN0bmVzcyBvZiB0aGUgc3RhdGVtZW50PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlIG91Z2h0IHRvIGlucXVpcmUuICBIb3dldmVyLCBJIHRoaW5rIHRoaXMgaXMgbm93IGNvcnJlY3QuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZSBvdWdodCB0byBpbnF1aXJlLiAgSG93ZXZlciwgSSB0aGluayB0aGlzIGlzIG5vdyBjb3JyZWN0LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2Ugc2hhbGwgc29vbiBrbm93IG1vcmUgYWJvdXQgdGhpcywgbXkgZnJpZW5kLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTAiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSIxMGEiIHVuaXQ9InNlY3Rpb24iIC8+SnVzdCBjb25zaWRlciB0aGlzIHF1ZXN0aW9uOuKAlElzIHRoYXQgd2hpY2ggaXMgaG9seSBsb3ZlZCBieSB0aGUgZ29kcyBiZWNhdXNlIGl0IGlzIGhvbHksIG9yIGlzIGl0IGhvbHkgYmVjYXVzZSBpdCBpcyBsb3ZlZCBieSB0aGUgZ29kcz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2Ugc2hhbGwgc29vbiBrbm93IG1vcmUgYWJvdXQgdGhpcywgbXkgZnJpZW5kLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTAiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSIxMGEiIHVuaXQ9InNlY3Rpb24iIC8+SnVzdCBjb25zaWRlciB0aGlzIHF1ZXN0aW9uOuKAlElzIHRoYXQgd2hpY2ggaXMgaG9seSBsb3ZlZCBieSB0aGUgZ29kcyBiZWNhdXNlIGl0IGlzIGhvbHksIG9yIGlzIGl0IGhvbHkgYmVjYXVzZSBpdCBpcyBsb3ZlZCBieSB0aGUgZ29kcz88L3A+PC90cmFuc2xhdGlvbj4="
translation['10.10a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTBhIiB1bml0PSJzZWN0aW9uIiAvPkp1c3QgY29uc2lkZXIgdGhpcyBxdWVzdGlvbjrigJRJcyB0aGF0IHdoaWNoIGlzIGhvbHkgbG92ZWQgYnkgdGhlIGdvZHMgYmVjYXVzZSBpdCBpcyBob2x5LCBvciBpcyBpdCBob2x5IGJlY2F1c2UgaXQgaXMgbG92ZWQgYnkgdGhlIGdvZHM/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvbid0IGtub3cgd2hhdCB5b3UgbWVhbiwgU29jcmF0ZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvbid0IGtub3cgd2hhdCB5b3UgbWVhbiwgU29jcmF0ZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIEkgd2lsbCB0cnkgdG8gc3BlYWsgbW9yZSBjbGVhcmx5LiAgV2Ugc3BlYWsgb2YgYmVpbmcgY2FycmllZCBhbmQgb2YgY2FycnlpbmcsIG9mIGJlaW5nIGxlZCBhbmQgb2YgbGVhZGluZywgb2YgYmVpbmcgc2VlbiBhbmQgb2Ygc2VlaW5nOyAgYW5kIHlvdSB1bmRlcnN0YW5k4oCUZG8geW91IG5vdD/igJR0aGF0IGluIGFsbCBzdWNoIGV4cHJlc3Npb25zIHRoZSB0d28gcGFydHMgZGlmZmVyIG9uZSBmcm9tIHRoZSBvdGhlciBpbiBtZWFuaW5nLCBhbmQgaG93IHRoZXkgZGlmZmVyLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIEkgd2lsbCB0cnkgdG8gc3BlYWsgbW9yZSBjbGVhcmx5LiAgV2Ugc3BlYWsgb2YgYmVpbmcgY2FycmllZCBhbmQgb2YgY2FycnlpbmcsIG9mIGJlaW5nIGxlZCBhbmQgb2YgbGVhZGluZywgb2YgYmVpbmcgc2VlbiBhbmQgb2Ygc2VlaW5nOyAgYW5kIHlvdSB1bmRlcnN0YW5k4oCUZG8geW91IG5vdD/igJR0aGF0IGluIGFsbCBzdWNoIGV4cHJlc3Npb25zIHRoZSB0d28gcGFydHMgZGlmZmVyIG9uZSBmcm9tIHRoZSBvdGhlciBpbiBtZWFuaW5nLCBhbmQgaG93IHRoZXkgZGlmZmVyLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdGhpbmsgSSB1bmRlcnN0YW5kLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB0aGluayBJIHVuZGVyc3RhbmQuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCB0b28sIHdlIGNvbmNlaXZlIG9mIGEgdGhpbmcgYmVpbmcgbG92ZWQgYW5kIG9mIGEgdGhpbmcgbG92aW5nLCBhbmQgdGhlIHR3byBhcmUgZGlmZmVyZW50PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCB0b28sIHdlIGNvbmNlaXZlIG9mIGEgdGhpbmcgYmVpbmcgbG92ZWQgYW5kIG9mIGEgdGhpbmcgbG92aW5nLCBhbmQgdGhlIHR3byBhcmUgZGlmZmVyZW50PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9mIGNvdXJzZS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwYiIgdW5pdD0ic2VjdGlvbiIgLz4gU29jcmF0ZXMuICBOb3cgdGVsbCBtZSwgaXMgYSB0aGluZyB3aGljaCBpcyBjYXJyaWVkIGEgY2FycmllZCB0aGluZyBiZWNhdXNlIG9uZSBjYXJyaWVzIGl0LCBvciBmb3Igc29tZSBvdGhlciByZWFzb24/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PZiBjb3Vyc2UuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMGIiIHVuaXQ9InNlY3Rpb24iIC8+IFNvY3JhdGVzLiAgTm93IHRlbGwgbWUsIGlzIGEgdGhpbmcgd2hpY2ggaXMgY2FycmllZCBhIGNhcnJpZWQgdGhpbmcgYmVjYXVzZSBvbmUgY2FycmllcyBpdCwgb3IgZm9yIHNvbWUgb3RoZXIgcmVhc29uPzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['10.10b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMGIiIHVuaXQ9InNlY3Rpb24iIC8+IFNvY3JhdGVzLiAgTm93IHRlbGwgbWUsIGlzIGEgdGhpbmcgd2hpY2ggaXMgY2FycmllZCBhIGNhcnJpZWQgdGhpbmcgYmVjYXVzZSBvbmUgY2FycmllcyBpdCwgb3IgZm9yIHNvbWUgb3RoZXIgcmVhc29uPzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm8sIGZvciB0aGF0IHJlYXNvbi48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vLCBmb3IgdGhhdCByZWFzb24uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgYSB0aGluZyB3aGljaCBpcyBsZWQgaXMgbGVkIGJlY2F1c2Ugb25lIGxlYWRzIGl0LCBhbmQgYSB0aGluZyB3aGljaCBpcyBzZWVuIGlzIHNvIGJlY2F1c2Ugb25lIHNlZXMgaXQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCBhIHRoaW5nIHdoaWNoIGlzIGxlZCBpcyBsZWQgYmVjYXVzZSBvbmUgbGVhZHMgaXQsIGFuZCBhIHRoaW5nIHdoaWNoIGlzIHNlZW4gaXMgc28gYmVjYXVzZSBvbmUgc2VlcyBpdD88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIG9uZSBkb2VzIG5vdCBzZWUgaXQgYmVjYXVzZSBpdHMgYSBzZWVuIHRoaW5nLCBidXQsIG9uIHRoZSBjb250cmFyeSwgaXQgaXMgYSBzZWVuIHRoaW5nIGJlY2F1c2Ugb25lIHNlZXMgaXQ7ICBhbmQgb25lIGRvZXMgbm90IGxlYWQgaXQgYmVjYXVzZSBpdCBpcyBhIGxlZCB0aGluZywgYnV0IGl0IGlzIGEgbGVkIHRoaW5nIGJlY2F1c2Ugb25lIGxlYWRzIGl0OyAgYW5kIG9uZSBkb2VzIG5vdCBjYXJyeSBpdCBiZWNhdXNlIGl0IGlzIGEgY2FycmllZCB0aGluZywgYnV0IGl0IGlzIGEgY2FycmllZCB0aGluZyBiZWNhdXNlIG9uZSBjYXJyaWVzIGl0LiAgSXMgaXQgY2xlYXIsIEV1dGh5cGhybywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwYyIgdW5pdD0ic2VjdGlvbiIgLz53aGF0IEkgYW0gdHJ5aW5nIHRvIHNheT8gIEkgYW0gdHJ5aW5nIHRvIHNheSB0aGlzLCB0aGF0IGlmIGFueXRoaW5nIGJlY29tZXMgb3IgdW5kZXJnb2VzLCBpdCBkb2VzIG5vdCBiZWNvbWUgYmVjYXVzZSBpdCBpcyBpbiBhIHN0YXRlIG9mIGJlY29taW5nLCBidXQgaXQgaXMgaW4gYSBzdGF0ZSBvZiBiZWNvbWluZyBiZWNhdXNlIGl0IGJlY29tZXMsIGFuZCBpdCBkb2VzIG5vdCB1bmRlcmdvIGJlY2F1c2UgaXQgaXMgYSB0aGluZyB3aGljaCB1bmRlcmdvZXMsIGJ1dCBiZWNhdXNlIGl0IHVuZGVyZ29lcyBpdCBpcyBhIHRoaW5nIHdoaWNoIHVuZGVyZ29lczsgIG9yIGRvIHlvdSBub3QgYWdyZWUgdG8gdGhpcz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBvbmUgZG9lcyBub3Qgc2VlIGl0IGJlY2F1c2UgaXRzIGEgc2VlbiB0aGluZywgYnV0LCBvbiB0aGUgY29udHJhcnksIGl0IGlzIGEgc2VlbiB0aGluZyBiZWNhdXNlIG9uZSBzZWVzIGl0OyAgYW5kIG9uZSBkb2VzIG5vdCBsZWFkIGl0IGJlY2F1c2UgaXQgaXMgYSBsZWQgdGhpbmcsIGJ1dCBpdCBpcyBhIGxlZCB0aGluZyBiZWNhdXNlIG9uZSBsZWFkcyBpdDsgIGFuZCBvbmUgZG9lcyBub3QgY2FycnkgaXQgYmVjYXVzZSBpdCBpcyBhIGNhcnJpZWQgdGhpbmcsIGJ1dCBpdCBpcyBhIGNhcnJpZWQgdGhpbmcgYmVjYXVzZSBvbmUgY2FycmllcyBpdC4gIElzIGl0IGNsZWFyLCBFdXRoeXBocm8sCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMGMiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCBJIGFtIHRyeWluZyB0byBzYXk/ICBJIGFtIHRyeWluZyB0byBzYXkgdGhpcywgdGhhdCBpZiBhbnl0aGluZyBiZWNvbWVzIG9yIHVuZGVyZ29lcywgaXQgZG9lcyBub3QgYmVjb21lIGJlY2F1c2UgaXQgaXMgaW4gYSBzdGF0ZSBvZiBiZWNvbWluZywgYnV0IGl0IGlzIGluIGEgc3RhdGUgb2YgYmVjb21pbmcgYmVjYXVzZSBpdCBiZWNvbWVzLCBhbmQgaXQgZG9lcyBub3QgdW5kZXJnbyBiZWNhdXNlIGl0IGlzIGEgdGhpbmcgd2hpY2ggdW5kZXJnb2VzLCBidXQgYmVjYXVzZSBpdCB1bmRlcmdvZXMgaXQgaXMgYSB0aGluZyB3aGljaCB1bmRlcmdvZXM7ICBvciBkbyB5b3Ugbm90IGFncmVlIHRvIHRoaXM/PC9wPjwvdHJhbnNsYXRpb24+"
translation['10.10c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMGMiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCBJIGFtIHRyeWluZyB0byBzYXk/ICBJIGFtIHRyeWluZyB0byBzYXkgdGhpcywgdGhhdCBpZiBhbnl0aGluZyBiZWNvbWVzIG9yIHVuZGVyZ29lcywgaXQgZG9lcyBub3QgYmVjb21lIGJlY2F1c2UgaXQgaXMgaW4gYSBzdGF0ZSBvZiBiZWNvbWluZywgYnV0IGl0IGlzIGluIGEgc3RhdGUgb2YgYmVjb21pbmcgYmVjYXVzZSBpdCBiZWNvbWVzLCBhbmQgaXQgZG9lcyBub3QgdW5kZXJnbyBiZWNhdXNlIGl0IGlzIGEgdGhpbmcgd2hpY2ggdW5kZXJnb2VzLCBidXQgYmVjYXVzZSBpdCB1bmRlcmdvZXMgaXQgaXMgYSB0aGluZyB3aGljaCB1bmRlcmdvZXM7ICBvciBkbyB5b3Ugbm90IGFncmVlIHRvIHRoaXM/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGFncmVlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBhZ3JlZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklzIG5vdCB0aGF0IHdoaWNoIGlzIGJlbG92ZWQgYSB0aGluZyB3aGljaCBpcyBlaXRoZXIgYmVjb21pbmcgb3IgdW5kZXJnb2luZyBzb21ldGhpbmc/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklzIG5vdCB0aGF0IHdoaWNoIGlzIGJlbG92ZWQgYSB0aGluZyB3aGljaCBpcyBlaXRoZXIgYmVjb21pbmcgb3IgdW5kZXJnb2luZyBzb21ldGhpbmc/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGlzIHRoaXMgY2FzZSBsaWtlIHRoZSBmb3JtZXIgb25lczogIHRob3NlIHdobyBsb3ZlIGl0IGRvIG5vdCBsb3ZlIGl0IGJlY2F1c2UgaXQgaXMgYSBiYWQgdGhpbmcsIGJ1dCBpdCBpcyBhIGJlbG92ZWQgdGhpbmcgYmVjYXVzZSB0aGV5IGxvdmUgaXQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCBpcyB0aGlzIGNhc2UgbGlrZSB0aGUgZm9ybWVyIG9uZXM6ICB0aG9zZSB3aG8gbG92ZSBpdCBkbyBub3QgbG92ZSBpdCBiZWNhdXNlIGl0IGlzIGEgYmFkIHRoaW5nLCBidXQgaXQgaXMgYSBiZWxvdmVkIHRoaW5nIGJlY2F1c2UgdGhleSBsb3ZlIGl0PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9idmlvdXNseS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9idmlvdXNseS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdyB3aGF0IGRvIHlvdSBzYXkgYWJvdXQgdGhhdCB3aGljaCBpcyBob2x5LAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTBkIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3cgd2hhdCBkbyB5b3Ugc2F5IGFib3V0IHRoYXQgd2hpY2ggaXMgaG9seSwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwZCIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC90cmFuc2xhdGlvbj4="
translation['10.10d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMGQiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JdCBpcyBsb3ZlZCBieSBhbGwgdGhlIGdvZHMsIGlzIGl0IG5vdCwgYWNjb3JkaW5nIHRvIHdoYXQgeW91IHNhaWQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JdCBpcyBsb3ZlZCBieSBhbGwgdGhlIGdvZHMsIGlzIGl0IG5vdCwgYWNjb3JkaW5nIHRvIHdoYXQgeW91IHNhaWQ/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Rm9yIHRoaXMgcmVhc29uLCBiZWNhdXNlIGl0IGlzIGhvbHksIG9yIGZvciBzb21lIG90aGVyIHJlYXNvbj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Rm9yIHRoaXMgcmVhc29uLCBiZWNhdXNlIGl0IGlzIGhvbHksIG9yIGZvciBzb21lIG90aGVyIHJlYXNvbj88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ObywgZm9yIHRoaXMgcmVhc29uLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm8sIGZvciB0aGlzIHJlYXNvbi48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkl0IGlzIGxvdmVkIGJlY2F1c2UgaXQgaXMgaG9seSwgbm90IGhvbHkgYmVjYXVzZSBpdCBpcyBsb3ZlZD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SXQgaXMgbG92ZWQgYmVjYXVzZSBpdCBpcyBob2x5LCBub3QgaG9seSBiZWNhdXNlIGl0IGlzIGxvdmVkPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdGhpbmsgc28uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHRoaW5rIHNvLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHRoYXQgd2hpY2ggaXMgZGVhciB0byB0aGUgZ29kcyBpcyBkZWFyIHRvIHRoZW0gYW5kIGJlbG92ZWQgYnkgdGhlbSBiZWNhdXNlIHRoZXkgbG92ZSBpdC4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwZSIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHRoYXQgd2hpY2ggaXMgZGVhciB0byB0aGUgZ29kcyBpcyBkZWFyIHRvIHRoZW0gYW5kIGJlbG92ZWQgYnkgdGhlbSBiZWNhdXNlIHRoZXkgbG92ZSBpdC4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwZSIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC90cmFuc2xhdGlvbj4="
translation['10.10e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMGUiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PZiBjb3Vyc2UuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PZiBjb3Vyc2UuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHRoYXQgd2hpY2ggaXMgZGVhciB0byB0aGUgZ29kcyBhbmQgdGhhdCB3aGljaCBpcyBob2x5IGFyZSBub3QgaWRlbnRpY2FsLCBidXQgZGlmZmVyIG9uZSBmcm9tIHRoZSBvdGhlci48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB0aGF0IHdoaWNoIGlzIGRlYXIgdG8gdGhlIGdvZHMgYW5kIHRoYXQgd2hpY2ggaXMgaG9seSBhcmUgbm90IGlkZW50aWNhbCwgYnV0IGRpZmZlciBvbmUgZnJvbSB0aGUgb3RoZXIuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SG93IHNvLCBTb2NyYXRlcz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkhvdyBzbywgU29jcmF0ZXM/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CZWNhdXNlIHdlIGFyZSBhZ3JlZWQgdGhhdCB0aGUgaG9seSBpcyBsb3ZlZCBiZWNhdXNlIGl0IGlzIGhvbHkgYW5kIHRoYXQgaXQgaXMgbm90IGhvbHkgYmVjYXVzZSBpdCBpcyBsb3ZlZDsgIGFyZSB3ZSBub3Q/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJlY2F1c2Ugd2UgYXJlIGFncmVlZCB0aGF0IHRoZSBob2x5IGlzIGxvdmVkIGJlY2F1c2UgaXQgaXMgaG9seSBhbmQgdGhhdCBpdCBpcyBub3QgaG9seSBiZWNhdXNlIGl0IGlzIGxvdmVkOyAgYXJlIHdlIG5vdD88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgd2UgYXJlIGFncmVlZCB0aGF0IHdoYXQgaXMgZGVhciB0byB0aGUgZ29kcyBpcyBkZWFyIHRvIHRoZW0gYmVjYXVzZSB0aGV5IGxvdmUgaXQsIHRoYXQgaXMsIGJ5IHJlYXNvbiBvZiB0aGlzIGxvdmUsIG5vdCB0aGF0IHRoZXkgbG92ZSBpdCBiZWNhdXNlIGl0IGlzIGRlYXIuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCB3ZSBhcmUgYWdyZWVkIHRoYXQgd2hhdCBpcyBkZWFyIHRvIHRoZSBnb2RzIGlzIGRlYXIgdG8gdGhlbSBiZWNhdXNlIHRoZXkgbG92ZSBpdCwgdGhhdCBpcywgYnkgcmVhc29uIG9mIHRoaXMgbG92ZSwgbm90IHRoYXQgdGhleSBsb3ZlIGl0IGJlY2F1c2UgaXQgaXMgZGVhci48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5WZXJ5IHRydWUuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5WZXJ5IHRydWUuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgaWYgdGhhdCB3aGljaCBpcyBkZWFyIHRvIHRoZSBnb2RzIGFuZCB0aGF0IHdoaWNoIGlzIGhvbHkgd2VyZSBpZGVudGljYWwsIG15IGRlYXIgRXV0aHlwaHJvLCB0aGVuIGlmIHRoZSBob2x5CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjExYSIgdW5pdD0ic2VjdGlvbiIgLz53ZXJlIGxvdmVkIGJlY2F1c2UgaXQgaXMgaG9seSwgdGhhdCB3aGljaCBpcyBkZWFyIHRvIHRoZSBnb2RzIHdvdWxkIGJlIGxvdmVkIGJlY2F1c2UgaXQgaXMgZGVhciwgYW5kIGlmIHRoYXQgd2hpY2ggaXMgZGVhciB0byB0aGUgZ29kcyBpcyBkZWFyIGJlY2F1c2UgaXQgaXMgbG92ZWQsIHRoZW4gdGhhdCB3aGljaCBpcyBob2x5IHdvdWxkIGJlIGhvbHkgYmVjYXVzZSBpdCBpcyBsb3ZlZDsgIGJ1dCBub3cgeW91IHNlZSB0aGF0IHRoZSBvcHBvc2l0ZSBpcyB0aGUgY2FzZSwgc2hvd2luZyB0aGF0IHRoZSB0d28gYXJlIGRpZmZlcmVudCBmcm9tIGVhY2ggb3RoZXIuICBGb3IgdGhlIG9uZSBiZWNvbWVzIGxvdmFibGUgZnJvbSB0aGUgZmFjdCB0aGF0IGl0IGlzIGxvdmVkLCB3aGVyZWFzIHRoZSBvdGhlciBpcyBsb3ZlZCBiZWNhdXNlIGl0IGlzIGluIGl0c2VsZiBsb3ZhYmxlLiAgQW5kLCBFdXRoeXBocm8sIGl0IHNlZW1zIHRoYXQgd2hlbiB5b3Ugd2VyZSBhc2tlZCB3aGF0IGhvbGluZXNzIGlzIHlvdSB3ZXJlIHVud2lsbGluZyB0byBtYWtlIHBsYWluIGl0cyBlc3NlbmNlLCBidXQgeW91IG1lbnRpb25lZCBzb21ldGhpbmcgdGhhdCBoYXMgaGFwcGVuZWQgdG8gdGhpcyBob2xpbmVzcywgbmFtZWx5LAo8bWlsZXN0b25lIG49IjExYiIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IGl0IGlzIGxvdmVkIGJ5IHRoZSBnb2RzLiAgQnV0IHlvdSBkaWQgbm90IHRlbGwgYXMgeWV0IHdoYXQgaXQgcmVhbGx5IGlzLiAgU28sIGlmIHlvdSBwbGVhc2UsIGRvIG5vdCBoaWRlIGl0IGZyb20gbWUsIGJ1dCBiZWdpbiBvdmVyIGFnYWluIGFuZCB0ZWxsIG1lIHdoYXQgaG9saW5lc3MgaXMsIG5vIG1hdHRlciB3aGV0aGVyIGl0IGlzIGxvdmVkIGJ5IHRoZSBnb2RzIG9yIGFueXRoaW5nIGVsc2UgaGFwcGVucyBpdDsgIGZvciB3ZSBzaGFsbCBub3QgcXVhcnJlbCBhYm91dCB0aGF0LiAgQnV0IHRlbGwgbWUgZnJhbmtseSwgV2hhdCBpcyBob2xpbmVzcywgYW5kIHdoYXQgaXMgdW5ob2xpbmVzcz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IGlmIHRoYXQgd2hpY2ggaXMgZGVhciB0byB0aGUgZ29kcyBhbmQgdGhhdCB3aGljaCBpcyBob2x5IHdlcmUgaWRlbnRpY2FsLCBteSBkZWFyIEV1dGh5cGhybywgdGhlbiBpZiB0aGUgaG9seQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTEiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSIxMWEiIHVuaXQ9InNlY3Rpb24iIC8+d2VyZSBsb3ZlZCBiZWNhdXNlIGl0IGlzIGhvbHksIHRoYXQgd2hpY2ggaXMgZGVhciB0byB0aGUgZ29kcyB3b3VsZCBiZSBsb3ZlZCBiZWNhdXNlIGl0IGlzIGRlYXIsIGFuZCBpZiB0aGF0IHdoaWNoIGlzIGRlYXIgdG8gdGhlIGdvZHMgaXMgZGVhciBiZWNhdXNlIGl0IGlzIGxvdmVkLCB0aGVuIHRoYXQgd2hpY2ggaXMgaG9seSB3b3VsZCBiZSBob2x5IGJlY2F1c2UgaXQgaXMgbG92ZWQ7ICBidXQgbm93IHlvdSBzZWUgdGhhdCB0aGUgb3Bwb3NpdGUgaXMgdGhlIGNhc2UsIHNob3dpbmcgdGhhdCB0aGUgdHdvIGFyZSBkaWZmZXJlbnQgZnJvbSBlYWNoIG90aGVyLiAgRm9yIHRoZSBvbmUgYmVjb21lcyBsb3ZhYmxlIGZyb20gdGhlIGZhY3QgdGhhdCBpdCBpcyBsb3ZlZCwgd2hlcmVhcyB0aGUgb3RoZXIgaXMgbG92ZWQgYmVjYXVzZSBpdCBpcyBpbiBpdHNlbGYgbG92YWJsZS4gIEFuZCwgRXV0aHlwaHJvLCBpdCBzZWVtcyB0aGF0IHdoZW4geW91IHdlcmUgYXNrZWQgd2hhdCBob2xpbmVzcyBpcyB5b3Ugd2VyZSB1bndpbGxpbmcgdG8gbWFrZSBwbGFpbiBpdHMgZXNzZW5jZSwgYnV0IHlvdSBtZW50aW9uZWQgc29tZXRoaW5nIHRoYXQgaGFzIGhhcHBlbmVkIHRvIHRoaXMgaG9saW5lc3MsIG5hbWVseSwKPG1pbGVzdG9uZSBuPSIxMWIiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBpdCBpcyBsb3ZlZCBieSB0aGUgZ29kcy4gIEJ1dCB5b3UgZGlkIG5vdCB0ZWxsIGFzIHlldCB3aGF0IGl0IHJlYWxseSBpcy4gIFNvLCBpZiB5b3UgcGxlYXNlLCBkbyBub3QgaGlkZSBpdCBmcm9tIG1lLCBidXQgYmVnaW4gb3ZlciBhZ2FpbiBhbmQgdGVsbCBtZSB3aGF0IGhvbGluZXNzIGlzLCBubyBtYXR0ZXIgd2hldGhlciBpdCBpcyBsb3ZlZCBieSB0aGUgZ29kcyBvciBhbnl0aGluZyBlbHNlIGhhcHBlbnMgaXQ7ICBmb3Igd2Ugc2hhbGwgbm90IHF1YXJyZWwgYWJvdXQgdGhhdC4gIEJ1dCB0ZWxsIG1lIGZyYW5rbHksIFdoYXQgaXMgaG9saW5lc3MsIGFuZCB3aGF0IGlzIHVuaG9saW5lc3M/PC9wPjwvdHJhbnNsYXRpb24+"
translation['11.11a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTFhIiB1bml0PSJzZWN0aW9uIiAvPndlcmUgbG92ZWQgYmVjYXVzZSBpdCBpcyBob2x5LCB0aGF0IHdoaWNoIGlzIGRlYXIgdG8gdGhlIGdvZHMgd291bGQgYmUgbG92ZWQgYmVjYXVzZSBpdCBpcyBkZWFyLCBhbmQgaWYgdGhhdCB3aGljaCBpcyBkZWFyIHRvIHRoZSBnb2RzIGlzIGRlYXIgYmVjYXVzZSBpdCBpcyBsb3ZlZCwgdGhlbiB0aGF0IHdoaWNoIGlzIGhvbHkgd291bGQgYmUgaG9seSBiZWNhdXNlIGl0IGlzIGxvdmVkOyAgYnV0IG5vdyB5b3Ugc2VlIHRoYXQgdGhlIG9wcG9zaXRlIGlzIHRoZSBjYXNlLCBzaG93aW5nIHRoYXQgdGhlIHR3byBhcmUgZGlmZmVyZW50IGZyb20gZWFjaCBvdGhlci4gIEZvciB0aGUgb25lIGJlY29tZXMgbG92YWJsZSBmcm9tIHRoZSBmYWN0IHRoYXQgaXQgaXMgbG92ZWQsIHdoZXJlYXMgdGhlIG90aGVyIGlzIGxvdmVkIGJlY2F1c2UgaXQgaXMgaW4gaXRzZWxmIGxvdmFibGUuICBBbmQsIEV1dGh5cGhybywgaXQgc2VlbXMgdGhhdCB3aGVuIHlvdSB3ZXJlIGFza2VkIHdoYXQgaG9saW5lc3MgaXMgeW91IHdlcmUgdW53aWxsaW5nIHRvIG1ha2UgcGxhaW4gaXRzIGVzc2VuY2UsIGJ1dCB5b3UgbWVudGlvbmVkIHNvbWV0aGluZyB0aGF0IGhhcyBoYXBwZW5lZCB0byB0aGlzIGhvbGluZXNzLCBuYW1lbHksCjwvdHJhbnNsYXRpb24+"
translation['11.11b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWIiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBpdCBpcyBsb3ZlZCBieSB0aGUgZ29kcy4gIEJ1dCB5b3UgZGlkIG5vdCB0ZWxsIGFzIHlldCB3aGF0IGl0IHJlYWxseSBpcy4gIFNvLCBpZiB5b3UgcGxlYXNlLCBkbyBub3QgaGlkZSBpdCBmcm9tIG1lLCBidXQgYmVnaW4gb3ZlciBhZ2FpbiBhbmQgdGVsbCBtZSB3aGF0IGhvbGluZXNzIGlzLCBubyBtYXR0ZXIgd2hldGhlciBpdCBpcyBsb3ZlZCBieSB0aGUgZ29kcyBvciBhbnl0aGluZyBlbHNlIGhhcHBlbnMgaXQ7ICBmb3Igd2Ugc2hhbGwgbm90IHF1YXJyZWwgYWJvdXQgdGhhdC4gIEJ1dCB0ZWxsIG1lIGZyYW5rbHksIFdoYXQgaXMgaG9saW5lc3MsIGFuZCB3aGF0IGlzIHVuaG9saW5lc3M/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQsIFNvY3JhdGVzLCBJIGRvIG5vdCBrbm93IGhvdyB0byBzYXkgd2hhdCBJIG1lYW4uICBGb3Igd2hhdGV2ZXIgc3RhdGVtZW50IHdlIGFkdmFuY2UsIHNvbWVob3cgb3Igb3RoZXIgaXQgbW92ZXMgYWJvdXQgYW5kIHdvbid0IHN0YXkgd2hlcmUgd2UgcHV0IGl0LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0LCBTb2NyYXRlcywgSSBkbyBub3Qga25vdyBob3cgdG8gc2F5IHdoYXQgSSBtZWFuLiAgRm9yIHdoYXRldmVyIHN0YXRlbWVudCB3ZSBhZHZhbmNlLCBzb21laG93IG9yIG90aGVyIGl0IG1vdmVzIGFib3V0IGFuZCB3b24ndCBzdGF5IHdoZXJlIHdlIHB1dCBpdC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPllvdXIgc3RhdGVtZW50cywgRXV0aHlwaHJvLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTFjIiB1bml0PSJzZWN0aW9uIiAvPmFyZSBsaWtlIHdvcmtzIG9mIG15PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Tb2NyYXRlcyB3YXMgdGhlIHNvbiBvZiBhIHNjdWxwdG9yIGFuZCB3YXMgaGltc2VsZiBlZHVjYXRlZCB0byBiZSBhIHNjdWxwdG9yLiAgVGhpcyBpcyBkb3VidGxlc3MgdGhlIHJlYXNvbiBmb3IgaGlzIHJlZmVyZW5jZSB0byBEYWVkYWx1cyBhcyBhbiBhbmNlc3Rvci4gIERhZWRhbHVzIHdhcyBhIGhhbGYgbXl0aGljYWwgcGVyc29uYWdlIHdob3NlIHN0YXR1ZXMgd2VyZSBzYWlkIHRvIGhhdmUgYmVlbiBzbyBsaWZlbGlrZSB0aGF0IHRoZXkgbW92ZWQgdGhlaXIgZXllcyBhbmQgd2Fsa2VkIGFib3V0Ljwvbm90ZT4gYW5jZXN0b3IgRGFlZGFsdXMsIGFuZCBpZiBJIHdlcmUgdGhlIG9uZSB3aG8gbWFkZSBvciBhZHZhbmNlZCB0aGVtLCB5b3UgbWlnaHQgbGF1Z2ggYXQgbWUgYW5kIHNheSB0aGF0IG9uIGFjY291bnQgb2YgbXkgcmVsYXRpb25zaGlwIHRvIGhpbSBteSB3b3JrcyBpbiB3b3JkcyBydW4gYXdheSBhbmQgd29uJ3Qgc3RheSB3aGVyZSB0aGV5IGFyZSBwdXQuICBCdXQgbm934oCUd2VsbCwgdGhlIHN0YXRlbWVudHMgYXJlIHlvdXJzOyAgc28gc29tZSBvdGhlciBqZXN0IGlzIGRlbWFuZGVkOyAgZm9yIHRoZXkgc3RheSBmaXhlZCwgYXMgeW91IHlvdXJzZWxmIHNlZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WW91ciBzdGF0ZW1lbnRzLCBFdXRoeXBocm8sCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWMiIHVuaXQ9InNlY3Rpb24iIC8+YXJlIGxpa2Ugd29ya3Mgb2YgbXk8bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNvY3JhdGVzIHdhcyB0aGUgc29uIG9mIGEgc2N1bHB0b3IgYW5kIHdhcyBoaW1zZWxmIGVkdWNhdGVkIHRvIGJlIGEgc2N1bHB0b3IuICBUaGlzIGlzIGRvdWJ0bGVzcyB0aGUgcmVhc29uIGZvciBoaXMgcmVmZXJlbmNlIHRvIERhZWRhbHVzIGFzIGFuIGFuY2VzdG9yLiAgRGFlZGFsdXMgd2FzIGEgaGFsZiBteXRoaWNhbCBwZXJzb25hZ2Ugd2hvc2Ugc3RhdHVlcyB3ZXJlIHNhaWQgdG8gaGF2ZSBiZWVuIHNvIGxpZmVsaWtlIHRoYXQgdGhleSBtb3ZlZCB0aGVpciBleWVzIGFuZCB3YWxrZWQgYWJvdXQuPC9ub3RlPiBhbmNlc3RvciBEYWVkYWx1cywgYW5kIGlmIEkgd2VyZSB0aGUgb25lIHdobyBtYWRlIG9yIGFkdmFuY2VkIHRoZW0sIHlvdSBtaWdodCBsYXVnaCBhdCBtZSBhbmQgc2F5IHRoYXQgb24gYWNjb3VudCBvZiBteSByZWxhdGlvbnNoaXAgdG8gaGltIG15IHdvcmtzIGluIHdvcmRzIHJ1biBhd2F5IGFuZCB3b24ndCBzdGF5IHdoZXJlIHRoZXkgYXJlIHB1dC4gIEJ1dCBub3figJR3ZWxsLCB0aGUgc3RhdGVtZW50cyBhcmUgeW91cnM7ICBzbyBzb21lIG90aGVyIGplc3QgaXMgZGVtYW5kZWQ7ICBmb3IgdGhleSBzdGF5IGZpeGVkLCBhcyB5b3UgeW91cnNlbGYgc2VlLjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['11.11c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWMiIHVuaXQ9InNlY3Rpb24iIC8+YXJlIGxpa2Ugd29ya3Mgb2YgbXk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U29jcmF0ZXMgd2FzIHRoZSBzb24gb2YgYSBzY3VscHRvciBhbmQgd2FzIGhpbXNlbGYgZWR1Y2F0ZWQgdG8gYmUgYSBzY3VscHRvci4gIFRoaXMgaXMgZG91YnRsZXNzIHRoZSByZWFzb24gZm9yIGhpcyByZWZlcmVuY2UgdG8gRGFlZGFsdXMgYXMgYW4gYW5jZXN0b3IuICBEYWVkYWx1cyB3YXMgYSBoYWxmIG15dGhpY2FsIHBlcnNvbmFnZSB3aG9zZSBzdGF0dWVzIHdlcmUgc2FpZCB0byBoYXZlIGJlZW4gc28gbGlmZWxpa2UgdGhhdCB0aGV5IG1vdmVkIHRoZWlyIGV5ZXMgYW5kIHdhbGtlZCBhYm91dC48L25vdGU+IGFuY2VzdG9yIERhZWRhbHVzLCBhbmQgaWYgSSB3ZXJlIHRoZSBvbmUgd2hvIG1hZGUgb3IgYWR2YW5jZWQgdGhlbSwgeW91IG1pZ2h0IGxhdWdoIGF0IG1lIGFuZCBzYXkgdGhhdCBvbiBhY2NvdW50IG9mIG15IHJlbGF0aW9uc2hpcCB0byBoaW0gbXkgd29ya3MgaW4gd29yZHMgcnVuIGF3YXkgYW5kIHdvbid0IHN0YXkgd2hlcmUgdGhleSBhcmUgcHV0LiAgQnV0IG5vd+KAlHdlbGwsIHRoZSBzdGF0ZW1lbnRzIGFyZSB5b3VyczsgIHNvIHNvbWUgb3RoZXIgamVzdCBpcyBkZW1hbmRlZDsgIGZvciB0aGV5IHN0YXkgZml4ZWQsIGFzIHlvdSB5b3Vyc2VsZiBzZWUuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHRoaW5rIHRoZSBqZXN0IGRvZXMgdmVyeSB3ZWxsIGFzIGl0IGlzOwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTFkIiB1bml0PSJzZWN0aW9uIiAvPmZvciBJIGFtIG5vdCB0aGUgb25lIHdobyBtYWtlcyB0aGVzZSBzdGF0ZW1lbnRzIG1vdmUgYWJvdXQgYW5kIG5vdCBzdGF5IGluIHRoZSBzYW1lIHBsYWNlLCBidXQgeW91IGFyZSB0aGUgRGFlZGFsdXM7ICBmb3IgdGhleSB3b3VsZCBoYXZlIHN0YXllZCwgc28gZmFyIGFzIEkgYW0gY29uY2VybmVkLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB0aGluayB0aGUgamVzdCBkb2VzIHZlcnkgd2VsbCBhcyBpdCBpczsKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExZCIgdW5pdD0ic2VjdGlvbiIgLz5mb3IgSSBhbSBub3QgdGhlIG9uZSB3aG8gbWFrZXMgdGhlc2Ugc3RhdGVtZW50cyBtb3ZlIGFib3V0IGFuZCBub3Qgc3RheSBpbiB0aGUgc2FtZSBwbGFjZSwgYnV0IHlvdSBhcmUgdGhlIERhZWRhbHVzOyAgZm9yIHRoZXkgd291bGQgaGF2ZSBzdGF5ZWQsIHNvIGZhciBhcyBJIGFtIGNvbmNlcm5lZC48L3A+PC90cmFuc2xhdGlvbj4="
translation['11.11d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWQiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIEkgYW0gbm90IHRoZSBvbmUgd2hvIG1ha2VzIHRoZXNlIHN0YXRlbWVudHMgbW92ZSBhYm91dCBhbmQgbm90IHN0YXkgaW4gdGhlIHNhbWUgcGxhY2UsIGJ1dCB5b3UgYXJlIHRoZSBEYWVkYWx1czsgIGZvciB0aGV5IHdvdWxkIGhhdmUgc3RheWVkLCBzbyBmYXIgYXMgSSBhbSBjb25jZXJuZWQuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFwcGFyZW50bHkgdGhlbiwgbXkgZnJpZW5kLCBJIGFtIGEgbW9yZSBjbGV2ZXIgYXJ0aXN0IHRoYW4gRGFlZGFsdXMsIGluYXNtdWNoIGFzIGhlIG1hZGUgb25seSBoaXMgb3duIHdvcmtzIG1vdmUsIHdoZXJlYXMgSSwgYXMgaXQgc2VlbXMsIGdpdmUgbW90aW9uIHRvIHRoZSB3b3JrcyBvZiBvdGhlcnMgYXMgd2VsbCBhcyB0byBteSBvd24uCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWUiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIHRoZSBtb3N0IGV4cXVpc2l0ZSB0aGluZyBhYm91dCBteSBhcnQgaXMgdGhhdCBJIGFtIGNsZXZlciBhZ2FpbnN0IG15IHdpbGw7ICBmb3IgSSB3b3VsZCByYXRoZXIgaGF2ZSBteSB3b3JkcyBzdGF5IGZpeGVkIGFuZCBzdGFibGUgdGhhbiBwb3NzZXNzIHRoZSB3aXNkb20gb2YgRGFlZGFsdXMgYW5kIHRoZSB3ZWFsdGggb2YgVGFudGFsdXMgYmVzaWRlcy4gIEJ1dCBlbm91Z2ggb2YgdGhpcy4gIFNpbmNlIHlvdSBzZWVtIHRvIGJlIGluZG9sZW50LCBJIHdpbGwgYWlkIHlvdSBteXNlbGYsIHNvIHRoYXQgeW91IG1heSBpbnN0cnVjdCBtZSBhYm91dCBob2xpbmVzcy4gIEFuZCBkbyBub3QgZ2l2ZSBpdCB1cCBiZWZvcmVoYW5kLiAgSnVzdCBzZWUgd2hldGhlciB5b3UgZG8gbm90IHRoaW5rIHRoYXQgZXZlcnl0aGluZyB0aGF0IGlzIGhvbHkgaXMgcmlnaHQuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFwcGFyZW50bHkgdGhlbiwgbXkgZnJpZW5kLCBJIGFtIGEgbW9yZSBjbGV2ZXIgYXJ0aXN0IHRoYW4gRGFlZGFsdXMsIGluYXNtdWNoIGFzIGhlIG1hZGUgb25seSBoaXMgb3duIHdvcmtzIG1vdmUsIHdoZXJlYXMgSSwgYXMgaXQgc2VlbXMsIGdpdmUgbW90aW9uIHRvIHRoZSB3b3JrcyBvZiBvdGhlcnMgYXMgd2VsbCBhcyB0byBteSBvd24uCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWUiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIHRoZSBtb3N0IGV4cXVpc2l0ZSB0aGluZyBhYm91dCBteSBhcnQgaXMgdGhhdCBJIGFtIGNsZXZlciBhZ2FpbnN0IG15IHdpbGw7ICBmb3IgSSB3b3VsZCByYXRoZXIgaGF2ZSBteSB3b3JkcyBzdGF5IGZpeGVkIGFuZCBzdGFibGUgdGhhbiBwb3NzZXNzIHRoZSB3aXNkb20gb2YgRGFlZGFsdXMgYW5kIHRoZSB3ZWFsdGggb2YgVGFudGFsdXMgYmVzaWRlcy4gIEJ1dCBlbm91Z2ggb2YgdGhpcy4gIFNpbmNlIHlvdSBzZWVtIHRvIGJlIGluZG9sZW50LCBJIHdpbGwgYWlkIHlvdSBteXNlbGYsIHNvIHRoYXQgeW91IG1heSBpbnN0cnVjdCBtZSBhYm91dCBob2xpbmVzcy4gIEFuZCBkbyBub3QgZ2l2ZSBpdCB1cCBiZWZvcmVoYW5kLiAgSnVzdCBzZWUgd2hldGhlciB5b3UgZG8gbm90IHRoaW5rIHRoYXQgZXZlcnl0aGluZyB0aGF0IGlzIGhvbHkgaXMgcmlnaHQuPC9wPjwvdHJhbnNsYXRpb24+"
translation['11.11e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWUiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIHRoZSBtb3N0IGV4cXVpc2l0ZSB0aGluZyBhYm91dCBteSBhcnQgaXMgdGhhdCBJIGFtIGNsZXZlciBhZ2FpbnN0IG15IHdpbGw7ICBmb3IgSSB3b3VsZCByYXRoZXIgaGF2ZSBteSB3b3JkcyBzdGF5IGZpeGVkIGFuZCBzdGFibGUgdGhhbiBwb3NzZXNzIHRoZSB3aXNkb20gb2YgRGFlZGFsdXMgYW5kIHRoZSB3ZWFsdGggb2YgVGFudGFsdXMgYmVzaWRlcy4gIEJ1dCBlbm91Z2ggb2YgdGhpcy4gIFNpbmNlIHlvdSBzZWVtIHRvIGJlIGluZG9sZW50LCBJIHdpbGwgYWlkIHlvdSBteXNlbGYsIHNvIHRoYXQgeW91IG1heSBpbnN0cnVjdCBtZSBhYm91dCBob2xpbmVzcy4gIEFuZCBkbyBub3QgZ2l2ZSBpdCB1cCBiZWZvcmVoYW5kLiAgSnVzdCBzZWUgd2hldGhlciB5b3UgZG8gbm90IHRoaW5rIHRoYXQgZXZlcnl0aGluZyB0aGF0IGlzIGhvbHkgaXMgcmlnaHQuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBkby48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBpcyBldmVyeXRoaW5nIHRoYXQgaXMgcmlnaHQgYWxzbyBob2x5Pwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSIxMmEiIHVuaXQ9InNlY3Rpb24iIC8+T3IgaXMgYWxsIHdoaWNoIGlzIGhvbHkgcmlnaHQsIGFuZCBub3QgYWxsIHdoaWNoIGlzIHJpZ2h0IGhvbHksIGJ1dCBwYXJ0IG9mIGl0IGhvbHkgYW5kIHBhcnQgc29tZXRoaW5nIGVsc2U/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBpcyBldmVyeXRoaW5nIHRoYXQgaXMgcmlnaHQgYWxzbyBob2x5Pwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSIxMmEiIHVuaXQ9InNlY3Rpb24iIC8+T3IgaXMgYWxsIHdoaWNoIGlzIGhvbHkgcmlnaHQsIGFuZCBub3QgYWxsIHdoaWNoIGlzIHJpZ2h0IGhvbHksIGJ1dCBwYXJ0IG9mIGl0IGhvbHkgYW5kIHBhcnQgc29tZXRoaW5nIGVsc2U/PC9wPjwvdHJhbnNsYXRpb24+"
translation['12.12a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTJhIiB1bml0PSJzZWN0aW9uIiAvPk9yIGlzIGFsbCB3aGljaCBpcyBob2x5IHJpZ2h0LCBhbmQgbm90IGFsbCB3aGljaCBpcyByaWdodCBob2x5LCBidXQgcGFydCBvZiBpdCBob2x5IGFuZCBwYXJ0IHNvbWV0aGluZyBlbHNlPzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBjYW4ndCBmb2xsb3cgeW91LCBTb2NyYXRlcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgY2FuJ3QgZm9sbG93IHlvdSwgU29jcmF0ZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgeWV0IHlvdSBhcmUgYXMgbXVjaCB5b3VuZ2VyIHRoYW4gSSBhcyB5b3UgYXJlIHdpc2VyOyAgYnV0LCBhcyBJIHNhaWQsIHlvdSBhcmUgaW5kb2xlbnQgb24gYWNjb3VudCBvZiB5b3VyIHdlYWx0aCBvZiB3aXNkb20uICBCdXQgZXhlcnQgeW91cnNlbGYsIG15IGZyaWVuZDsgIGZvciBpdCBpcyBub3QgaGFyZCB0byB1bmRlcnN0YW5kIHdoYXQgSSBtZWFuLiAgV2hhdCBJIG1lYW4gaXMgdGhlIG9wcG9zaXRlIG9mIHdoYXQgdGhlIHBvZXQgc2FpZCwgd2hvIHdyb3RlOjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj48bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPlpldXMgdGhlIGNyZWF0b3IsIGhpbSB3aG8gbWFkZSBhbGwgdGhpbmdzLDwvbD48L3F1b3RlPgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTJiIiB1bml0PSJzZWN0aW9uIiAvPjxjaXQ+PHF1b3RlIHR5cGU9InZlcnNlIj50aG91IHdpbHQgbm90IG5hbWU7ICBmb3Igd2hlcmUgZmVhciBpcywgdGhlcmUgYWxzbyBpcyByZXZlcmVuY2UuPC9xdW90ZT48YmlibCBkZWZhdWx0PSJOTyI+U3Rhc2ludXMsIGF1dGhvciBvZiB0aGUgPHRpdGxlPkN5cHJpYTwvdGl0bGU+IChGcmFnbS4gMjAsIGVkLiBLaW5rZWwpPC9iaWJsPjwvY2l0PiBOb3cgSSBkaXNhZ3JlZSB3aXRoIHRoZSBwb2V0LiAgU2hhbGwgSSB0ZWxsIHlvdSBob3c/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB5ZXQgeW91IGFyZSBhcyBtdWNoIHlvdW5nZXIgdGhhbiBJIGFzIHlvdSBhcmUgd2lzZXI7ICBidXQsIGFzIEkgc2FpZCwgeW91IGFyZSBpbmRvbGVudCBvbiBhY2NvdW50IG9mIHlvdXIgd2VhbHRoIG9mIHdpc2RvbS4gIEJ1dCBleGVydCB5b3Vyc2VsZiwgbXkgZnJpZW5kOyAgZm9yIGl0IGlzIG5vdCBoYXJkIHRvIHVuZGVyc3RhbmQgd2hhdCBJIG1lYW4uICBXaGF0IEkgbWVhbiBpcyB0aGUgb3Bwb3NpdGUgb2Ygd2hhdCB0aGUgcG9ldCBzYWlkLCB3aG8gd3JvdGU6PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+WmV1cyB0aGUgY3JlYXRvciwgaGltIHdobyBtYWRlIGFsbCB0aGluZ3MsPC9sPjwvcXVvdGU+CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMmIiIHVuaXQ9InNlY3Rpb24iIC8+PGNpdD48cXVvdGUgdHlwZT0idmVyc2UiPnRob3Ugd2lsdCBub3QgbmFtZTsgIGZvciB3aGVyZSBmZWFyIGlzLCB0aGVyZSBhbHNvIGlzIHJldmVyZW5jZS48L3F1b3RlPjxiaWJsIGRlZmF1bHQ9Ik5PIj5TdGFzaW51cywgYXV0aG9yIG9mIHRoZSA8dGl0bGU+Q3lwcmlhPC90aXRsZT4gKEZyYWdtLiAyMCwgZWQuIEtpbmtlbCk8L2JpYmw+PC9jaXQ+IE5vdyBJIGRpc2FncmVlIHdpdGggdGhlIHBvZXQuICBTaGFsbCBJIHRlbGwgeW91IGhvdz88L3A+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+WmV1cyB0aGUgY3JlYXRvciwgaGltIHdobyBtYWRlIGFsbCB0aGluZ3MsPC9sPjwvcXVvdGU+CjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+WmV1cyB0aGUgY3JlYXRvciwgaGltIHdobyBtYWRlIGFsbCB0aGluZ3MsPC9sPjwvdHJhbnNsYXRpb24+"
translation['12.12b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMmIiIHVuaXQ9InNlY3Rpb24iIC8+PGNpdCBjbGFzcz0idHJhbnNsYXRpb24iPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj50aG91IHdpbHQgbm90IG5hbWU7ICBmb3Igd2hlcmUgZmVhciBpcywgdGhlcmUgYWxzbyBpcyByZXZlcmVuY2UuPC9xdW90ZT48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIj5TdGFzaW51cywgYXV0aG9yIG9mIHRoZSA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXByaWE8L3RpdGxlPiAoRnJhZ20uIDIwLCBlZC4gS2lua2VsKTwvYmlibD48L2NpdD4gTm93IEkgZGlzYWdyZWUgd2l0aCB0aGUgcG9ldC4gIFNoYWxsIEkgdGVsbCB5b3UgaG93PzxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj50aG91IHdpbHQgbm90IG5hbWU7ICBmb3Igd2hlcmUgZmVhciBpcywgdGhlcmUgYWxzbyBpcyByZXZlcmVuY2UuPC9xdW90ZT48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIj5TdGFzaW51cywgYXV0aG9yIG9mIHRoZSA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXByaWE8L3RpdGxlPiAoRnJhZ20uIDIwLCBlZC4gS2lua2VsKTwvYmlibD48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXByaWE8L3RpdGxlPiAoRnJhZ20uIDIwLCBlZC4gS2lua2VsKTxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnkgYWxsIG1lYW5zLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnkgYWxsIG1lYW5zLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SXQgZG9lcyBub3Qgc2VlbSB0byBtZSB0cnVlIHRoYXQgd2hlcmUgZmVhciBpcywgdGhlcmUgYWxzbyBpcyByZXZlcmVuY2U7ICBmb3IgbWFueSB3aG8gZmVhciBkaXNlYXNlcyBhbmQgcG92ZXJ0eSBhbmQgb3RoZXIgc3VjaCB0aGluZ3Mgc2VlbSB0byBtZSB0byBmZWFyLCBidXQgbm90IHRvIHJldmVyZW5jZSBhdCBhbGwgdGhlc2UgdGhpbmdzIHdoaWNoIHRoZXkgZmVhci4gIERvbid0IHlvdSB0aGluayBzbywgdG9vPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JdCBkb2VzIG5vdCBzZWVtIHRvIG1lIHRydWUgdGhhdCB3aGVyZSBmZWFyIGlzLCB0aGVyZSBhbHNvIGlzIHJldmVyZW5jZTsgIGZvciBtYW55IHdobyBmZWFyIGRpc2Vhc2VzIGFuZCBwb3ZlcnR5IGFuZCBvdGhlciBzdWNoIHRoaW5ncyBzZWVtIHRvIG1lIHRvIGZlYXIsIGJ1dCBub3QgdG8gcmV2ZXJlbmNlIGF0IGFsbCB0aGVzZSB0aGluZ3Mgd2hpY2ggdGhleSBmZWFyLiAgRG9uJ3QgeW91IHRoaW5rIHNvLCB0b28/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IEkgdGhpbmsgdGhhdCB3aGVyZSByZXZlcmVuY2UgaXMsIHRoZXJlIGFsc28gaXMgZmVhcjsgIGZvciBkb2VzIG5vdCBldmVyeW9uZSB3aG8gaGFzIGEgZmVlbGluZyBvZiByZXZlcmVuY2UgYW5kIHNoYW1lIGFib3V0IGFueSBhY3QKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyYyIgdW5pdD0ic2VjdGlvbiIgLz5hbHNvIGRyZWFkIGFuZCBmZWFyIHRoZSByZXB1dGF0aW9uIGZvciB3aWNrZWRuZXNzPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgSSB0aGluayB0aGF0IHdoZXJlIHJldmVyZW5jZSBpcywgdGhlcmUgYWxzbyBpcyBmZWFyOyAgZm9yIGRvZXMgbm90IGV2ZXJ5b25lIHdobyBoYXMgYSBmZWVsaW5nIG9mIHJldmVyZW5jZSBhbmQgc2hhbWUgYWJvdXQgYW55IGFjdAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTJjIiB1bml0PSJzZWN0aW9uIiAvPmFsc28gZHJlYWQgYW5kIGZlYXIgdGhlIHJlcHV0YXRpb24gZm9yIHdpY2tlZG5lc3M/PC9wPjwvdHJhbnNsYXRpb24+"
translation['12.12c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMmMiIHVuaXQ9InNlY3Rpb24iIC8+YWxzbyBkcmVhZCBhbmQgZmVhciB0aGUgcmVwdXRhdGlvbiBmb3Igd2lja2VkbmVzcz88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywgaGUgZG9lcyBmZWFyLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBoZSBkb2VzIGZlYXIuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGl0IGlzIG5vdCBjb3JyZWN0IHRvIHNheSDigJx3aGVyZSBmZWFyIGlzLCB0aGVyZSBhbHNvIGlzIHJldmVyZW5jZS7igJ0gIE9uIHRoZSBjb250cmFyeSwgd2hlcmUgcmV2ZXJlbmNlIGlzLCB0aGVyZSBhbHNvIGlzIGZlYXI7ICBidXQgcmV2ZXJlbmNlIGlzIG5vdCBldmVyeXdoZXJlIHdoZXJlIGZlYXIgaXMsIHNpbmNlLCBhcyBJIHRoaW5rLCBmZWFyIGlzIG1vcmUgY29tcHJlaGVuc2l2ZSB0aGFuIHJldmVyZW5jZTsgIGZvciByZXZlcmVuY2UgaXMgYSBwYXJ0IG9mIGZlYXIsIGp1c3QgYXMgdGhlIG9kZCBpcyBhIHBhcnQgb2YgbnVtYmVyLCBzbyB0aGF0IGl0IGlzIG5vdCB0cnVlIHRoYXQgd2hlcmUgbnVtYmVyIGlzLCB0aGVyZSBhbHNvIGlzIHRoZSBvZGQsIGJ1dCB0aGF0IHdoZXJlIHRoZSBvZGQgaXMsIHRoZXJlIGFsc28gaXMgbnVtYmVyLiAgUGVyaGFwcyB5b3UgZm9sbG93IG1lIG5vdz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBpdCBpcyBub3QgY29ycmVjdCB0byBzYXkg4oCcd2hlcmUgZmVhciBpcywgdGhlcmUgYWxzbyBpcyByZXZlcmVuY2Uu4oCdICBPbiB0aGUgY29udHJhcnksIHdoZXJlIHJldmVyZW5jZSBpcywgdGhlcmUgYWxzbyBpcyBmZWFyOyAgYnV0IHJldmVyZW5jZSBpcyBub3QgZXZlcnl3aGVyZSB3aGVyZSBmZWFyIGlzLCBzaW5jZSwgYXMgSSB0aGluaywgZmVhciBpcyBtb3JlIGNvbXByZWhlbnNpdmUgdGhhbiByZXZlcmVuY2U7ICBmb3IgcmV2ZXJlbmNlIGlzIGEgcGFydCBvZiBmZWFyLCBqdXN0IGFzIHRoZSBvZGQgaXMgYSBwYXJ0IG9mIG51bWJlciwgc28gdGhhdCBpdCBpcyBub3QgdHJ1ZSB0aGF0IHdoZXJlIG51bWJlciBpcywgdGhlcmUgYWxzbyBpcyB0aGUgb2RkLCBidXQgdGhhdCB3aGVyZSB0aGUgb2RkIGlzLCB0aGVyZSBhbHNvIGlzIG51bWJlci4gIFBlcmhhcHMgeW91IGZvbGxvdyBtZSBub3c/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGVyZmVjdGx5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGVyZmVjdGx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SXQgd2FzIHNvbWV0aGluZyBvZiB0aGlzIHNvcnQgdGhhdCBJIG1lYW50IGJlZm9yZSwgd2hlbiBJIGFza2VkIHdoZXRoZXIgd2hlcmUgdGhlIHJpZ2h0IGlzLCB0aGVyZSBhbHNvIGlzIGhvbGluZXNzLCBvciB3aGVyZSBob2xpbmVzcyBpcywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyZCIgdW5pdD0ic2VjdGlvbiIgLz50aGVyZSBhbHNvIGlzIHRoZSByaWdodDsgIGJ1dCBob2xpbmVzcyBpcyBub3QgZXZlcnl3aGVyZSB3aGVyZSB0aGUgcmlnaHQgaXMsIGZvciBob2xpbmVzcyBpcyBhIHBhcnQgb2YgdGhlIHJpZ2h0LiAgRG8gd2UgYWdyZWUgdG8gdGhpcywgb3IgZG8geW91IGRpc3NlbnQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkl0IHdhcyBzb21ldGhpbmcgb2YgdGhpcyBzb3J0IHRoYXQgSSBtZWFudCBiZWZvcmUsIHdoZW4gSSBhc2tlZCB3aGV0aGVyIHdoZXJlIHRoZSByaWdodCBpcywgdGhlcmUgYWxzbyBpcyBob2xpbmVzcywgb3Igd2hlcmUgaG9saW5lc3MgaXMsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMmQiIHVuaXQ9InNlY3Rpb24iIC8+dGhlcmUgYWxzbyBpcyB0aGUgcmlnaHQ7ICBidXQgaG9saW5lc3MgaXMgbm90IGV2ZXJ5d2hlcmUgd2hlcmUgdGhlIHJpZ2h0IGlzLCBmb3IgaG9saW5lc3MgaXMgYSBwYXJ0IG9mIHRoZSByaWdodC4gIERvIHdlIGFncmVlIHRvIHRoaXMsIG9yIGRvIHlvdSBkaXNzZW50PzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['12.12d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMmQiIHVuaXQ9InNlY3Rpb24iIC8+dGhlcmUgYWxzbyBpcyB0aGUgcmlnaHQ7ICBidXQgaG9saW5lc3MgaXMgbm90IGV2ZXJ5d2hlcmUgd2hlcmUgdGhlIHJpZ2h0IGlzLCBmb3IgaG9saW5lc3MgaXMgYSBwYXJ0IG9mIHRoZSByaWdodC4gIERvIHdlIGFncmVlIHRvIHRoaXMsIG9yIGRvIHlvdSBkaXNzZW50PzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm8sIEkgYWdyZWU7ICBmb3IgSSB0aGluayB0aGUgc3RhdGVtZW50IGlzIGNvcnJlY3QuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ObywgSSBhZ3JlZTsgIGZvciBJIHRoaW5rIHRoZSBzdGF0ZW1lbnQgaXMgY29ycmVjdC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdyBvYnNlcnZlIHRoZSBuZXh0IHBvaW50LiAgSWYgaG9saW5lc3MgaXMgYSBwYXJ0IG9mIHRoZSByaWdodCwgd2UgbXVzdCwgYXBwYXJlbnRseSwgZmluZCBvdXQgd2hhdCBwYXJ0IG9mIHRoZSByaWdodCBob2xpbmVzcyBpcy4gIE5vdyBpZiB5b3UgYXNrZWQgbWUgYWJvdXQgb25lIG9mIHRoZSB0aGluZ3MgSSBqdXN0IG1lbnRpb25lZCwgYXMsIGZvciBleGFtcGxlLCB3aGF0IHBhcnQgb2YgbnVtYmVyIHRoZSBldmVuIHdhcywgYW5kIHdoYXQga2luZCBvZiBhIG51bWJlciBpdCB3YXMgSSBzaG91bGQgc2F5LCDigJx0aGF0IHdoaWNoIGlzIG5vdCBpbmRpdmlzaWJsZSBieSB0d28sIGJ1dCBkaXZpc2libGUgYnkgdHdv4oCdOyAgb3IgZG9uJ3QgeW91IGFncmVlPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3cgb2JzZXJ2ZSB0aGUgbmV4dCBwb2ludC4gIElmIGhvbGluZXNzIGlzIGEgcGFydCBvZiB0aGUgcmlnaHQsIHdlIG11c3QsIGFwcGFyZW50bHksIGZpbmQgb3V0IHdoYXQgcGFydCBvZiB0aGUgcmlnaHQgaG9saW5lc3MgaXMuICBOb3cgaWYgeW91IGFza2VkIG1lIGFib3V0IG9uZSBvZiB0aGUgdGhpbmdzIEkganVzdCBtZW50aW9uZWQsIGFzLCBmb3IgZXhhbXBsZSwgd2hhdCBwYXJ0IG9mIG51bWJlciB0aGUgZXZlbiB3YXMsIGFuZCB3aGF0IGtpbmQgb2YgYSBudW1iZXIgaXQgd2FzIEkgc2hvdWxkIHNheSwg4oCcdGhhdCB3aGljaCBpcyBub3QgaW5kaXZpc2libGUgYnkgdHdvLCBidXQgZGl2aXNpYmxlIGJ5IHR3b+KAnTsgIG9yIGRvbid0IHlvdSBhZ3JlZT88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGFncmVlLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTJlIiB1bml0PSJzZWN0aW9uIiAvPiBTb2NyYXRlcy4gIE5vdyB0cnkgaW4geW91ciB0dXJuIHRvIHRlYWNoIG1lIHdoYXQgcGFydCBvZiB0aGUgcmlnaHQgaG9saW5lc3MgaXMsIHRoYXQgSSBtYXkgdGVsbCBNZWxldHVzIG5vdCB0byB3cm9uZyBtZSBhbnkgbW9yZSBvciBicmluZyBzdWl0cyBhZ2FpbnN0IG1lIGZvciBpbXBpZXR5LCBzaW5jZSBJIGhhdmUgbm93IGJlZW4gZHVseSBpbnN0cnVjdGVkIGJ5IHlvdSBhYm91dCB3aGF0IGlzLCBhbmQgd2hhdCBpcyBub3QsIHBpb3VzIGFuZCBob2x5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBhZ3JlZS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyZSIgdW5pdD0ic2VjdGlvbiIgLz4gU29jcmF0ZXMuICBOb3cgdHJ5IGluIHlvdXIgdHVybiB0byB0ZWFjaCBtZSB3aGF0IHBhcnQgb2YgdGhlIHJpZ2h0IGhvbGluZXNzIGlzLCB0aGF0IEkgbWF5IHRlbGwgTWVsZXR1cyBub3QgdG8gd3JvbmcgbWUgYW55IG1vcmUgb3IgYnJpbmcgc3VpdHMgYWdhaW5zdCBtZSBmb3IgaW1waWV0eSwgc2luY2UgSSBoYXZlIG5vdyBiZWVuIGR1bHkgaW5zdHJ1Y3RlZCBieSB5b3UgYWJvdXQgd2hhdCBpcywgYW5kIHdoYXQgaXMgbm90LCBwaW91cyBhbmQgaG9seS48L3A+PC90cmFuc2xhdGlvbj4="
translation['12.12e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMmUiIHVuaXQ9InNlY3Rpb24iIC8+IFNvY3JhdGVzLiAgTm93IHRyeSBpbiB5b3VyIHR1cm4gdG8gdGVhY2ggbWUgd2hhdCBwYXJ0IG9mIHRoZSByaWdodCBob2xpbmVzcyBpcywgdGhhdCBJIG1heSB0ZWxsIE1lbGV0dXMgbm90IHRvIHdyb25nIG1lIGFueSBtb3JlIG9yIGJyaW5nIHN1aXRzIGFnYWluc3QgbWUgZm9yIGltcGlldHksIHNpbmNlIEkgaGF2ZSBub3cgYmVlbiBkdWx5IGluc3RydWN0ZWQgYnkgeW91IGFib3V0IHdoYXQgaXMsIGFuZCB3aGF0IGlzIG5vdCwgcGlvdXMgYW5kIGhvbHkuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGlzIHRoZW4gaXMgbXkgb3BpbmlvbiwgU29jcmF0ZXMsIHRoYXQgdGhlIHBhcnQgb2YgdGhlIHJpZ2h0IHdoaWNoIGhhcyB0byBkbyB3aXRoIGF0dGVudGlvbiB0byB0aGUgZ29kcyBjb25zdGl0dXRlcyBwaWV0eSBhbmQgaG9saW5lc3MsIGFuZCB0aGF0IHRoZSByZW1haW5pbmcgcGFydCBvZiB0aGUgcmlnaHQgaXMgdGhhdCB3aGljaCBoYXMgdG8gZG8gd2l0aCB0aGUgc2VydmljZSBvZiBtZW4uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGlzIHRoZW4gaXMgbXkgb3BpbmlvbiwgU29jcmF0ZXMsIHRoYXQgdGhlIHBhcnQgb2YgdGhlIHJpZ2h0IHdoaWNoIGhhcyB0byBkbyB3aXRoIGF0dGVudGlvbiB0byB0aGUgZ29kcyBjb25zdGl0dXRlcyBwaWV0eSBhbmQgaG9saW5lc3MsIGFuZCB0aGF0IHRoZSByZW1haW5pbmcgcGFydCBvZiB0aGUgcmlnaHQgaXMgdGhhdCB3aGljaCBoYXMgdG8gZG8gd2l0aCB0aGUgc2VydmljZSBvZiBtZW4uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHRoaW5rIHlvdSBhcmUgY29ycmVjdCwgRXV0aHlwaHJvOwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSIxM2EiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IHRoZXJlIGlzIG9uZSBsaXR0bGUgcG9pbnQgYWJvdXQgd2hpY2ggSSBzdGlsbCB3YW50IGluZm9ybWF0aW9uLCBmb3IgSSBkbyBub3QgeWV0IHVuZGVyc3RhbmQgd2hhdCB5b3UgbWVhbiBieSDigJxhdHRlbnRpb24u4oCdICBJIGRvbid0IHN1cHBvc2UgeW91IG1lYW4gdGhlIHNhbWUga2luZCBvZiBhdHRlbnRpb24gdG8gdGhlIGdvZHMgd2hpY2ggaXMgcGFpZCB0byBvdGhlciB0aGluZ3MuICBXZSBzYXksIGZvciBleGFtcGxlLCB0aGF0IG5vdCBldmVyeW9uZSBrbm93cyBob3cgdG8gYXR0ZW5kIHRvIGhvcnNlcywgYnV0IG9ubHkgaGUgd2hvIGlzIHNraWxsZWQgaW4gaG9yc2VtYW5zaGlwLCBkbyB3ZSBub3Q/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdGhpbmsgeW91IGFyZSBjb3JyZWN0LCBFdXRoeXBocm87CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjEzYSIgdW5pdD0ic2VjdGlvbiIgLz5idXQgdGhlcmUgaXMgb25lIGxpdHRsZSBwb2ludCBhYm91dCB3aGljaCBJIHN0aWxsIHdhbnQgaW5mb3JtYXRpb24sIGZvciBJIGRvIG5vdCB5ZXQgdW5kZXJzdGFuZCB3aGF0IHlvdSBtZWFuIGJ5IOKAnGF0dGVudGlvbi7igJ0gIEkgZG9uJ3Qgc3VwcG9zZSB5b3UgbWVhbiB0aGUgc2FtZSBraW5kIG9mIGF0dGVudGlvbiB0byB0aGUgZ29kcyB3aGljaCBpcyBwYWlkIHRvIG90aGVyIHRoaW5ncy4gIFdlIHNheSwgZm9yIGV4YW1wbGUsIHRoYXQgbm90IGV2ZXJ5b25lIGtub3dzIGhvdyB0byBhdHRlbmQgdG8gaG9yc2VzLCBidXQgb25seSBoZSB3aG8gaXMgc2tpbGxlZCBpbiBob3JzZW1hbnNoaXAsIGRvIHdlIG5vdD88L3A+PC90cmFuc2xhdGlvbj4="
translation['13.13a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTNhIiB1bml0PSJzZWN0aW9uIiAvPmJ1dCB0aGVyZSBpcyBvbmUgbGl0dGxlIHBvaW50IGFib3V0IHdoaWNoIEkgc3RpbGwgd2FudCBpbmZvcm1hdGlvbiwgZm9yIEkgZG8gbm90IHlldCB1bmRlcnN0YW5kIHdoYXQgeW91IG1lYW4gYnkg4oCcYXR0ZW50aW9uLuKAnSAgSSBkb24ndCBzdXBwb3NlIHlvdSBtZWFuIHRoZSBzYW1lIGtpbmQgb2YgYXR0ZW50aW9uIHRvIHRoZSBnb2RzIHdoaWNoIGlzIHBhaWQgdG8gb3RoZXIgdGhpbmdzLiAgV2Ugc2F5LCBmb3IgZXhhbXBsZSwgdGhhdCBub3QgZXZlcnlvbmUga25vd3MgaG93IHRvIGF0dGVuZCB0byBob3JzZXMsIGJ1dCBvbmx5IGhlIHdobyBpcyBza2lsbGVkIGluIGhvcnNlbWFuc2hpcCwgZG8gd2Ugbm90PzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBob3JzZW1hbnNoaXAgaXMgdGhlIGFydCBvZiBhdHRlbmRpbmcgdG8gaG9yc2VzPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGhvcnNlbWFuc2hpcCBpcyB0aGUgYXJ0IG9mIGF0dGVuZGluZyB0byBob3JzZXM/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIG5vdCBldmVyeW9uZSBrbm93cyBob3cgdG8gYXR0ZW5kIHRvIGRvZ3MsIGJ1dCBvbmx5IHRoZSBodW50c21hbj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIG5vdCBldmVyeW9uZSBrbm93cyBob3cgdG8gYXR0ZW5kIHRvIGRvZ3MsIGJ1dCBvbmx5IHRoZSBodW50c21hbj88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGF0IGlzIHNvLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhhdCBpcyBzby48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gdGhlIGh1bnRzbWFuJ3MgYXJ0IGlzIHRoZSBhcnQgb2YgYXR0ZW5kaW5nIHRvIGRvZ3M/CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2IiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gdGhlIGh1bnRzbWFuJ3MgYXJ0IGlzIHRoZSBhcnQgb2YgYXR0ZW5kaW5nIHRvIGRvZ3M/CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2IiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvdHJhbnNsYXRpb24+"
translation['13.13b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2IiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgdGhlIG94aGVyZCdzIGFydCBpcyB0aGF0IG9mIGF0dGVuZGluZyB0byBveGVuPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgdGhlIG94aGVyZCdzIGFydCBpcyB0aGF0IG9mIGF0dGVuZGluZyB0byBveGVuPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCBob2xpbmVzcyBhbmQgcGlldHkgaXMgdGhlIGFydCBvZiBhdHRlbmRpbmcgdG8gdGhlIGdvZHM/ICBJcyB0aGF0IHdoYXQgeW91IG1lYW4sIEV1dGh5cGhybz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGhvbGluZXNzIGFuZCBwaWV0eSBpcyB0aGUgYXJ0IG9mIGF0dGVuZGluZyB0byB0aGUgZ29kcz8gIElzIHRoYXQgd2hhdCB5b3UgbWVhbiwgRXV0aHlwaHJvPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdyBkb2VzIGF0dGVudGlvbiBhbHdheXMgYWltIHRvIGFjY29tcGxpc2ggdGhlIHNhbWUgZW5kPyAgSSBtZWFuIHNvbWV0aGluZyBsaWtlIHRoaXM6ICBJdCBhaW1zIGF0IHNvbWUgZ29vZCBvciBiZW5lZml0IHRvIHRoZSBvbmUgdG8gd2hvbSBpdCBpcyBnaXZlbiwgYXMgeW91IHNlZSB0aGF0IGhvcnNlcywgd2hlbiBhdHRlbmRlZCB0byBieSB0aGUgaG9yc2VtYW4ncyBhcnQgYXJlIGJlbmVmaXRlZCBhbmQgbWFkZSBiZXR0ZXI7ICBvciBkb24ndCB5b3UgdGhpbmsgc28/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdyBkb2VzIGF0dGVudGlvbiBhbHdheXMgYWltIHRvIGFjY29tcGxpc2ggdGhlIHNhbWUgZW5kPyAgSSBtZWFuIHNvbWV0aGluZyBsaWtlIHRoaXM6ICBJdCBhaW1zIGF0IHNvbWUgZ29vZCBvciBiZW5lZml0IHRvIHRoZSBvbmUgdG8gd2hvbSBpdCBpcyBnaXZlbiwgYXMgeW91IHNlZSB0aGF0IGhvcnNlcywgd2hlbiBhdHRlbmRlZCB0byBieSB0aGUgaG9yc2VtYW4ncyBhcnQgYXJlIGJlbmVmaXRlZCBhbmQgbWFkZSBiZXR0ZXI7ICBvciBkb24ndCB5b3UgdGhpbmsgc28/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBJIGRvLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBJIGRvLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGRvZ3MgYXJlIGJlbmVmaXRlZCBieSB0aGUgaHVudHNtYW4ncyBhcnQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzYyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgb3hlbiBieSB0aGUgb3hoZXJkJ3MgYW5kIGV2ZXJ5dGhpbmcgZWxzZSBpbiB0aGUgc2FtZSB3YXk/ICBPciBkbyB5b3UgdGhpbmsgY2FyZSBhbmQgYXR0ZW50aW9uIGFyZSBldmVyIG1lYW50IGZvciB0aGUgaW5qdXJ5IG9mIHRoYXQgd2hpY2ggaXMgY2FyZWQgZm9yPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgZG9ncyBhcmUgYmVuZWZpdGVkIGJ5IHRoZSBodW50c21hbidzIGFydAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTNjIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBveGVuIGJ5IHRoZSBveGhlcmQncyBhbmQgZXZlcnl0aGluZyBlbHNlIGluIHRoZSBzYW1lIHdheT8gIE9yIGRvIHlvdSB0aGluayBjYXJlIGFuZCBhdHRlbnRpb24gYXJlIGV2ZXIgbWVhbnQgZm9yIHRoZSBpbmp1cnkgb2YgdGhhdCB3aGljaCBpcyBjYXJlZCBmb3I/PC9wPjwvdHJhbnNsYXRpb24+"
translation['13.13c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2MiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIG94ZW4gYnkgdGhlIG94aGVyZCdzIGFuZCBldmVyeXRoaW5nIGVsc2UgaW4gdGhlIHNhbWUgd2F5PyAgT3IgZG8geW91IHRoaW5rIGNhcmUgYW5kIGF0dGVudGlvbiBhcmUgZXZlciBtZWFudCBmb3IgdGhlIGluanVyeSBvZiB0aGF0IHdoaWNoIGlzIGNhcmVkIGZvcj88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vLCBieSBaZXVzLCBJIGRvIG5vdC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vLCBieSBaZXVzLCBJIGRvIG5vdC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBmb3IgaXRzIGJlbmVmaXQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBmb3IgaXRzIGJlbmVmaXQ/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2YgY291cnNlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2YgY291cnNlLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBob2xpbmVzcywgc2luY2UgaXQgaXMgdGhlIGFydCBvZiBhdHRlbmRpbmcgdG8gdGhlIGdvZHMsIGlzIGEgYmVuZWZpdCB0byB0aGUgZ29kcywgYW5kIG1ha2VzIHRoZW0gYmV0dGVyPyAgQW5kIHlvdSB3b3VsZCBhZ3JlZSB0aGF0IHdoZW4geW91IGRvIGEgaG9seSBvciBwaW91cyBhY3QgeW91IGFyZSBtYWtpbmcgb25lIG9mIHRoZSBnb2RzIGJldHRlcj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBob2xpbmVzcywgc2luY2UgaXQgaXMgdGhlIGFydCBvZiBhdHRlbmRpbmcgdG8gdGhlIGdvZHMsIGlzIGEgYmVuZWZpdCB0byB0aGUgZ29kcywgYW5kIG1ha2VzIHRoZW0gYmV0dGVyPyAgQW5kIHlvdSB3b3VsZCBhZ3JlZSB0aGF0IHdoZW4geW91IGRvIGEgaG9seSBvciBwaW91cyBhY3QgeW91IGFyZSBtYWtpbmcgb25lIG9mIHRoZSBnb2RzIGJldHRlcj88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ObywgYnkgWmV1cywgbm90IEkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ObywgYnkgWmV1cywgbm90IEkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3IgZG8gSSwgRXV0aHlwaHJvLCB0aGluayB0aGF0IGlzIHdoYXQgeW91IG1lYW50LiAgRmFyIGZyb20gaXQuICBCdXQgSSBhc2tlZCB3aGF0IHlvdSBtZWFudCBieQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTNkIiB1bml0PSJzZWN0aW9uIiAvPuKAnGF0dGVudGlvbiB0byB0aGUgZ29kc+KAnSBqdXN0IGJlY2F1c2UgSSBkaWQgbm90IHRoaW5rIHlvdSBtZWFudCBhbnl0aGluZyBsaWtlIHRoYXQuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vciBkbyBJLCBFdXRoeXBocm8sIHRoaW5rIHRoYXQgaXMgd2hhdCB5b3UgbWVhbnQuICBGYXIgZnJvbSBpdC4gIEJ1dCBJIGFza2VkIHdoYXQgeW91IG1lYW50IGJ5CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2QiIHVuaXQ9InNlY3Rpb24iIC8+4oCcYXR0ZW50aW9uIHRvIHRoZSBnb2Rz4oCdIGp1c3QgYmVjYXVzZSBJIGRpZCBub3QgdGhpbmsgeW91IG1lYW50IGFueXRoaW5nIGxpa2UgdGhhdC48L3A+PC90cmFuc2xhdGlvbj4="
translation['13.13d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2QiIHVuaXQ9InNlY3Rpb24iIC8+4oCcYXR0ZW50aW9uIHRvIHRoZSBnb2Rz4oCdIGp1c3QgYmVjYXVzZSBJIGRpZCBub3QgdGhpbmsgeW91IG1lYW50IGFueXRoaW5nIGxpa2UgdGhhdC48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPllvdSBhcmUgcmlnaHQsIFNvY3JhdGVzOyAgdGhhdCBpcyBub3Qgd2hhdCBJIG1lYW4uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Zb3UgYXJlIHJpZ2h0LCBTb2NyYXRlczsgIHRoYXQgaXMgbm90IHdoYXQgSSBtZWFuLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgd2hhdCBraW5kIG9mIGF0dGVudGlvbiB0byB0aGUgZ29kcyBpcyBob2xpbmVzcz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgd2hhdCBraW5kIG9mIGF0dGVudGlvbiB0byB0aGUgZ29kcyBpcyBob2xpbmVzcz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUga2luZCwgU29jcmF0ZXMsIHRoYXQgc2VydmFudHMgcGF5IHRvIHRoZWlyIG1hc3RlcnMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUga2luZCwgU29jcmF0ZXMsIHRoYXQgc2VydmFudHMgcGF5IHRvIHRoZWlyIG1hc3RlcnMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHVuZGVyc3RhbmQuICBJdCBpcywgeW91IG1lYW4sIGEga2luZCBvZiBzZXJ2aWNlIHRvIHRoZSBnb2RzPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHVuZGVyc3RhbmQuICBJdCBpcywgeW91IG1lYW4sIGEga2luZCBvZiBzZXJ2aWNlIHRvIHRoZSBnb2RzPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkV4YWN0bHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5FeGFjdGx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm93IGNhbiB5b3UgdGVsbCBtZSB3aGF0IHJlc3VsdCB0aGUgYXJ0IHRoYXQgc2VydmVzIHRoZSBwaHlzaWNpYW4gc2VydmVzIHRvIHByb2R1Y2U/ICBJcyBpdCBub3QgaGVhbHRoPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3cgY2FuIHlvdSB0ZWxsIG1lIHdoYXQgcmVzdWx0IHRoZSBhcnQgdGhhdCBzZXJ2ZXMgdGhlIHBoeXNpY2lhbiBzZXJ2ZXMgdG8gcHJvZHVjZT8gIElzIGl0IG5vdCBoZWFsdGg/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCB0aGVuOyAgd2hhdCBpcyBpdCB3aGljaCB0aGUgYXJ0CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2UiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBzZXJ2ZXMgc2hpcGJ1aWxkZXJzIHNlcnZlcyB0byBwcm9kdWNlPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsIHRoZW47ICB3aGF0IGlzIGl0IHdoaWNoIHRoZSBhcnQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzZSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IHNlcnZlcyBzaGlwYnVpbGRlcnMgc2VydmVzIHRvIHByb2R1Y2U/PC9wPjwvdHJhbnNsYXRpb24+"
translation['13.13e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2UiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBzZXJ2ZXMgc2hpcGJ1aWxkZXJzIHNlcnZlcyB0byBwcm9kdWNlPzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXZpZGVudGx5LCBTb2NyYXRlcywgYSBzaGlwLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXZpZGVudGx5LCBTb2NyYXRlcywgYSBzaGlwLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHRoYXQgd2hpY2ggc2VydmVzIGhvdXNlYnVpbGRlcnMgc2VydmVzIHRvIGJ1aWxkIGEgaG91c2U/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB0aGF0IHdoaWNoIHNlcnZlcyBob3VzZWJ1aWxkZXJzIHNlcnZlcyB0byBidWlsZCBhIGhvdXNlPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gdGVsbCBtZSwgbXkgZnJpZW5kOyAgd2hhdCB3b3VsZCB0aGUgYXJ0IHdoaWNoIHNlcnZlcyB0aGUgZ29kcyBzZXJ2ZSB0byBhY2NvbXBsaXNoPyAgRm9yIGl0IGlzIGV2aWRlbnQgdGhhdCB5b3Uga25vdywgc2luY2UgeW91IHNheSB5b3Uga25vdyBtb3JlIHRoYW4gYW55IG90aGVyIG1hbiBhYm91dCBtYXR0ZXJzIHdoaWNoIGhhdmUgdG8gZG8gd2l0aCB0aGUgZ29kcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB0ZWxsIG1lLCBteSBmcmllbmQ7ICB3aGF0IHdvdWxkIHRoZSBhcnQgd2hpY2ggc2VydmVzIHRoZSBnb2RzIHNlcnZlIHRvIGFjY29tcGxpc2g/ICBGb3IgaXQgaXMgZXZpZGVudCB0aGF0IHlvdSBrbm93LCBzaW5jZSB5b3Ugc2F5IHlvdSBrbm93IG1vcmUgdGhhbiBhbnkgb3RoZXIgbWFuIGFib3V0IG1hdHRlcnMgd2hpY2ggaGF2ZSB0byBkbyB3aXRoIHRoZSBnb2RzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB3aGF0IEkgc2F5IGlzIHRydWUsIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHdoYXQgSSBzYXkgaXMgdHJ1ZSwgU29jcmF0ZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCBpbiB0aGUgbmFtZSBvZiBaZXVzLCB0ZWxsIG1lLCB3aGF0IGlzIHRoYXQgZ2xvcmlvdXMgcmVzdWx0IHdoaWNoIHRoZSBnb2RzIGFjY29tcGxpc2ggYnkgdXNpbmcgdXMgYXMgc2VydmFudHM/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4sIGluIHRoZSBuYW1lIG9mIFpldXMsIHRlbGwgbWUsIHdoYXQgaXMgdGhhdCBnbG9yaW91cyByZXN1bHQgd2hpY2ggdGhlIGdvZHMgYWNjb21wbGlzaCBieSB1c2luZyB1cyBhcyBzZXJ2YW50cz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGV5IGFjY29tcGxpc2ggbWFueSBmaW5lIHJlc3VsdHMsIFNvY3JhdGVzLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTQiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSIxNGEiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGV5IGFjY29tcGxpc2ggbWFueSBmaW5lIHJlc3VsdHMsIFNvY3JhdGVzLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTQiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSIxNGEiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvdHJhbnNsYXRpb24+"
translation['14.14a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTRhIiB1bml0PSJzZWN0aW9uIiAvPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIGFuZCBzbyBkbyBnZW5lcmFscywgbXkgZnJpZW5kOyAgYnV0IG5ldmVydGhlbGVzcywgeW91IGNvdWxkIGVhc2lseSB0ZWxsIHRoZSBjaGllZiBvZiB0aGVtLCBuYW1lbHksIHRoYXQgdGhleSBicmluZyBhYm91dCB2aWN0b3J5IGluIHdhci4gIElzIHRoYXQgbm90IHRoZSBjYXNlPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIGFuZCBzbyBkbyBnZW5lcmFscywgbXkgZnJpZW5kOyAgYnV0IG5ldmVydGhlbGVzcywgeW91IGNvdWxkIGVhc2lseSB0ZWxsIHRoZSBjaGllZiBvZiB0aGVtLCBuYW1lbHksIHRoYXQgdGhleSBicmluZyBhYm91dCB2aWN0b3J5IGluIHdhci4gIElzIHRoYXQgbm90IHRoZSBjYXNlPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9mIGNvdXJzZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9mIGNvdXJzZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCBmYXJtZXJzIGFsc28sIEkgdGhpbmssIGFjY29tcGxpc2ggbWFueSBmaW5lIHJlc3VsdHM7ICBidXQgc3RpbGwgdGhlIGNoaWVmIHJlc3VsdCBvZiB0aGVpciB3b3JrIGlzIGZvb2QgZnJvbSB0aGUgbGFuZD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGZhcm1lcnMgYWxzbywgSSB0aGluaywgYWNjb21wbGlzaCBtYW55IGZpbmUgcmVzdWx0czsgIGJ1dCBzdGlsbCB0aGUgY2hpZWYgcmVzdWx0IG9mIHRoZWlyIHdvcmsgaXMgZm9vZCBmcm9tIHRoZSBsYW5kPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBob3cgYWJvdXQgdGhlIG1hbnkgZmluZSByZXN1bHRzIHRoZSBnb2RzIGFjY29tcGxpc2g/ICBXaGF0IGlzIHRoZSBjaGllZiByZXN1bHQgb2YgdGhlaXIgd29yaz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IGhvdyBhYm91dCB0aGUgbWFueSBmaW5lIHJlc3VsdHMgdGhlIGdvZHMgYWNjb21wbGlzaD8gIFdoYXQgaXMgdGhlIGNoaWVmIHJlc3VsdCBvZiB0aGVpciB3b3JrPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdG9sZCB5b3UgYSB3aGlsZSBhZ28sIFNvY3JhdGVzLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTRiIiB1bml0PSJzZWN0aW9uIiAvPnRoYXQgaXQgaXMgYSBsb25nIHRhc2sgdG8gbGVhcm4gYWNjdXJhdGVseSBhbGwgYWJvdXQgdGhlc2UgdGhpbmdzLiAgSG93ZXZlciwgSSBzYXkgc2ltcGx5IHRoYXQgd2hlbiBvbmUga25vd3MgaG93IHRvIHNheSBhbmQgZG8gd2hhdCBpcyBncmF0aWZ5aW5nIHRvIHRoZSBnb2RzLCBpbiBwcmF5aW5nIGFuZCBzYWNyaWZpY2luZywgdGhhdCBpcyBob2xpbmVzcywgYW5kIHN1Y2ggdGhpbmdzIGJyaW5nIHNhbHZhdGlvbiB0byBpbmRpdmlkdWFsIGZhbWlsaWVzIGFuZCB0byBzdGF0ZXM7ICBhbmQgdGhlIG9wcG9zaXRlIG9mIHdoYXQgaXMgZ3JhdGlmeWluZyB0byB0aGUgZ29kcyBpcyBpbXBpb3VzLCBhbmQgdGhhdCBvdmVydHVybnMgYW5kIGRlc3Ryb3lzIGV2ZXJ5dGhpbmcuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHRvbGQgeW91IGEgd2hpbGUgYWdvLCBTb2NyYXRlcywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE0YiIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IGl0IGlzIGEgbG9uZyB0YXNrIHRvIGxlYXJuIGFjY3VyYXRlbHkgYWxsIGFib3V0IHRoZXNlIHRoaW5ncy4gIEhvd2V2ZXIsIEkgc2F5IHNpbXBseSB0aGF0IHdoZW4gb25lIGtub3dzIGhvdyB0byBzYXkgYW5kIGRvIHdoYXQgaXMgZ3JhdGlmeWluZyB0byB0aGUgZ29kcywgaW4gcHJheWluZyBhbmQgc2FjcmlmaWNpbmcsIHRoYXQgaXMgaG9saW5lc3MsIGFuZCBzdWNoIHRoaW5ncyBicmluZyBzYWx2YXRpb24gdG8gaW5kaXZpZHVhbCBmYW1pbGllcyBhbmQgdG8gc3RhdGVzOyAgYW5kIHRoZSBvcHBvc2l0ZSBvZiB3aGF0IGlzIGdyYXRpZnlpbmcgdG8gdGhlIGdvZHMgaXMgaW1waW91cywgYW5kIHRoYXQgb3ZlcnR1cm5zIGFuZCBkZXN0cm95cyBldmVyeXRoaW5nLjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['14.14b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGIiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBpdCBpcyBhIGxvbmcgdGFzayB0byBsZWFybiBhY2N1cmF0ZWx5IGFsbCBhYm91dCB0aGVzZSB0aGluZ3MuICBIb3dldmVyLCBJIHNheSBzaW1wbHkgdGhhdCB3aGVuIG9uZSBrbm93cyBob3cgdG8gc2F5IGFuZCBkbyB3aGF0IGlzIGdyYXRpZnlpbmcgdG8gdGhlIGdvZHMsIGluIHByYXlpbmcgYW5kIHNhY3JpZmljaW5nLCB0aGF0IGlzIGhvbGluZXNzLCBhbmQgc3VjaCB0aGluZ3MgYnJpbmcgc2FsdmF0aW9uIHRvIGluZGl2aWR1YWwgZmFtaWxpZXMgYW5kIHRvIHN0YXRlczsgIGFuZCB0aGUgb3Bwb3NpdGUgb2Ygd2hhdCBpcyBncmF0aWZ5aW5nIHRvIHRoZSBnb2RzIGlzIGltcGlvdXMsIGFuZCB0aGF0IG92ZXJ0dXJucyBhbmQgZGVzdHJveXMgZXZlcnl0aGluZy48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WW91IG1pZ2h0LCBpZiB5b3Ugd2lzaGVkLCBFdXRoeXBocm8sIGhhdmUgYW5zd2VyZWQgbXVjaCBtb3JlIGJyaWVmbHkgdGhlIGNoaWVmIHBhcnQgb2YgbXkgcXVlc3Rpb24uICBCdXQgaXQgaXMgcGxhaW4gdGhhdCB5b3UgZG8gbm90IGNhcmUgdG8gaW5zdHJ1Y3QgbWUuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGMiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIG5vdywgd2hlbiB5b3Ugd2VyZSBjbG9zZSB1cG9uIGl0IHlvdSB0dXJuZWQgYXNpZGU7ICBhbmQgaWYgeW91IGhhZCBhbnN3ZXJlZCBpdCwgSSBzaG91bGQgYWxyZWFkeSBoYXZlIG9idGFpbmVkIGZyb20geW91IGFsbCB0aGUgaW5zdHJ1Y3Rpb24gSSBuZWVkIGFib3V0IGhvbGluZXNzLiAgQnV0LCBhcyB0aGluZ3MgYXJlLCB0aGUgcXVlc3Rpb25lciBtdXN0IGZvbGxvdyB0aGUgb25lIHF1ZXN0aW9uZWQgd2hlcmV2ZXIgaGUgbGVhZHMuICBXaGF0IGRvIHlvdSBzYXkgdGhlIGhvbHksIG9yIGhvbGluZXNzLCBpcz8gIERvIHlvdSBub3Qgc2F5IHRoYXQgaXQgaXMgYSBraW5kIG9mIHNjaWVuY2Ugb2Ygc2FjcmlmaWNpbmcgYW5kIHByYXlpbmc/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPllvdSBtaWdodCwgaWYgeW91IHdpc2hlZCwgRXV0aHlwaHJvLCBoYXZlIGFuc3dlcmVkIG11Y2ggbW9yZSBicmllZmx5IHRoZSBjaGllZiBwYXJ0IG9mIG15IHF1ZXN0aW9uLiAgQnV0IGl0IGlzIHBsYWluIHRoYXQgeW91IGRvIG5vdCBjYXJlIHRvIGluc3RydWN0IG1lLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTRjIiB1bml0PSJzZWN0aW9uIiAvPkZvciBub3csIHdoZW4geW91IHdlcmUgY2xvc2UgdXBvbiBpdCB5b3UgdHVybmVkIGFzaWRlOyAgYW5kIGlmIHlvdSBoYWQgYW5zd2VyZWQgaXQsIEkgc2hvdWxkIGFscmVhZHkgaGF2ZSBvYnRhaW5lZCBmcm9tIHlvdSBhbGwgdGhlIGluc3RydWN0aW9uIEkgbmVlZCBhYm91dCBob2xpbmVzcy4gIEJ1dCwgYXMgdGhpbmdzIGFyZSwgdGhlIHF1ZXN0aW9uZXIgbXVzdCBmb2xsb3cgdGhlIG9uZSBxdWVzdGlvbmVkIHdoZXJldmVyIGhlIGxlYWRzLiAgV2hhdCBkbyB5b3Ugc2F5IHRoZSBob2x5LCBvciBob2xpbmVzcywgaXM/ICBEbyB5b3Ugbm90IHNheSB0aGF0IGl0IGlzIGEga2luZCBvZiBzY2llbmNlIG9mIHNhY3JpZmljaW5nIGFuZCBwcmF5aW5nPzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['14.14c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGMiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIG5vdywgd2hlbiB5b3Ugd2VyZSBjbG9zZSB1cG9uIGl0IHlvdSB0dXJuZWQgYXNpZGU7ICBhbmQgaWYgeW91IGhhZCBhbnN3ZXJlZCBpdCwgSSBzaG91bGQgYWxyZWFkeSBoYXZlIG9idGFpbmVkIGZyb20geW91IGFsbCB0aGUgaW5zdHJ1Y3Rpb24gSSBuZWVkIGFib3V0IGhvbGluZXNzLiAgQnV0LCBhcyB0aGluZ3MgYXJlLCB0aGUgcXVlc3Rpb25lciBtdXN0IGZvbGxvdyB0aGUgb25lIHF1ZXN0aW9uZWQgd2hlcmV2ZXIgaGUgbGVhZHMuICBXaGF0IGRvIHlvdSBzYXkgdGhlIGhvbHksIG9yIGhvbGluZXNzLCBpcz8gIERvIHlvdSBub3Qgc2F5IHRoYXQgaXQgaXMgYSBraW5kIG9mIHNjaWVuY2Ugb2Ygc2FjcmlmaWNpbmcgYW5kIHByYXlpbmc/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgc2FjcmlmaWNpbmcgaXMgbWFraW5nIGdpZnRzIHRvIHRoZSBnb2RzCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHByYXlpbmcgaXMgYXNraW5nIGZyb20gdGhlbT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHNhY3JpZmljaW5nIGlzIG1ha2luZyBnaWZ0cyB0byB0aGUgZ29kcwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTRkIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBwcmF5aW5nIGlzIGFza2luZyBmcm9tIHRoZW0/PC9wPjwvdHJhbnNsYXRpb24+"
translation['14.14d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHByYXlpbmcgaXMgYXNraW5nIGZyb20gdGhlbT88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkV4YWN0bHksIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXhhY3RseSwgU29jcmF0ZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGhvbGluZXNzLCBhY2NvcmRpbmcgdG8gdGhpcyBkZWZpbml0aW9uLCB3b3VsZCBiZSBhIHNjaWVuY2Ugb2YgZ2l2aW5nIGFuZCBhc2tpbmcuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gaG9saW5lc3MsIGFjY29yZGluZyB0byB0aGlzIGRlZmluaXRpb24sIHdvdWxkIGJlIGEgc2NpZW5jZSBvZiBnaXZpbmcgYW5kIGFza2luZy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Zb3UgdW5kZXJzdGFuZCBwZXJmZWN0bHkgd2hhdCBJIHNhaWQsIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WW91IHVuZGVyc3RhbmQgcGVyZmVjdGx5IHdoYXQgSSBzYWlkLCBTb2NyYXRlcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywgbXkgZnJpZW5kLCBmb3IgSSBhbSBlYWdlciBmb3IgeW91ciB3aXNkb20sIGFuZCBnaXZlIG15IG1pbmQgdG8gaXQsIHNvIHRoYXQgbm90aGluZyB5b3Ugc2F5IHNoYWxsIGZhbGwgdG8gdGhlIGdyb3VuZC4gIEJ1dCB0ZWxsIG1lLCB3aGF0IGlzIHRoaXMgc2VydmljZSBvZiB0aGUgZ29kcz8gIERvIHlvdSBzYXkgdGhhdCBpdCBjb25zaXN0cyBpbiBhc2tpbmcgZnJvbSB0aGVtIGFuZCBnaXZpbmcgdG8gdGhlbT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBteSBmcmllbmQsIGZvciBJIGFtIGVhZ2VyIGZvciB5b3VyIHdpc2RvbSwgYW5kIGdpdmUgbXkgbWluZCB0byBpdCwgc28gdGhhdCBub3RoaW5nIHlvdSBzYXkgc2hhbGwgZmFsbCB0byB0aGUgZ3JvdW5kLiAgQnV0IHRlbGwgbWUsIHdoYXQgaXMgdGhpcyBzZXJ2aWNlIG9mIHRoZSBnb2RzPyAgRG8geW91IHNheSB0aGF0IGl0IGNvbnNpc3RzIGluIGFza2luZyBmcm9tIHRoZW0gYW5kIGdpdmluZyB0byB0aGVtPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldvdWxkIG5vdCB0aGUgcmlnaHQgd2F5IG9mIGFza2luZyBiZSB0byBhc2sgb2YgdGhlbSB3aGF0IHdlIG5lZWQgZnJvbSB0aGVtPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Xb3VsZCBub3QgdGhlIHJpZ2h0IHdheSBvZiBhc2tpbmcgYmUgdG8gYXNrIG9mIHRoZW0gd2hhdCB3ZSBuZWVkIGZyb20gdGhlbT88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IGVsc2U/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IGVsc2U/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgdGhlIHJpZ2h0IHdheSBvZiBnaXZpbmcsIHRvIHByZXNlbnQgdGhlbSB3aXRoCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGUiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCB0aGV5IG5lZWQgZnJvbSB1cz8gIEZvciBpdCB3b3VsZCBub3QgYmUgc2NpZW50aWZpYyBnaXZpbmcgdG8gZ2l2ZSBhbnlvbmUgd2hhdCBoZSBkb2VzIG5vdCBuZWVkLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgdGhlIHJpZ2h0IHdheSBvZiBnaXZpbmcsIHRvIHByZXNlbnQgdGhlbSB3aXRoCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGUiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCB0aGV5IG5lZWQgZnJvbSB1cz8gIEZvciBpdCB3b3VsZCBub3QgYmUgc2NpZW50aWZpYyBnaXZpbmcgdG8gZ2l2ZSBhbnlvbmUgd2hhdCBoZSBkb2VzIG5vdCBuZWVkLjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['14.14e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGUiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCB0aGV5IG5lZWQgZnJvbSB1cz8gIEZvciBpdCB3b3VsZCBub3QgYmUgc2NpZW50aWZpYyBnaXZpbmcgdG8gZ2l2ZSBhbnlvbmUgd2hhdCBoZSBkb2VzIG5vdCBuZWVkLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WW91IGFyZSByaWdodCwgU29jcmF0ZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Zb3UgYXJlIHJpZ2h0LCBTb2NyYXRlcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gaG9saW5lc3Mgd291bGQgYmUgYW4gYXJ0IG9mIGJhcnRlciBiZXR3ZWVuIGdvZHMgYW5kIG1lbj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBob2xpbmVzcyB3b3VsZCBiZSBhbiBhcnQgb2YgYmFydGVyIGJldHdlZW4gZ29kcyBhbmQgbWVuPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywgb2YgYmFydGVyLCBpZiB5b3UgbGlrZSB0byBjYWxsIGl0IHNvLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBvZiBiYXJ0ZXIsIGlmIHlvdSBsaWtlIHRvIGNhbGwgaXQgc28uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvbid0IGxpa2UgdG8gY2FsbCBpdCBzbywgaWYgaXQgaXMgbm90IHRydWUuICBCdXQgdGVsbCBtZSwgd2hhdCBhZHZhbnRhZ2UgYWNjcnVlcyB0byB0aGUgZ29kcyBmcm9tIHRoZSBnaWZ0cyB0aGV5IGdldCBmcm9tIHVzPyAgRm9yIGV2ZXJ5Ym9keSBrbm93cyB3aGF0IHRoZXkgZ2l2ZSwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE1IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iMTVhIiB1bml0PSJzZWN0aW9uIiAvPnNpbmNlIHdlIGhhdmUgbm90aGluZyBnb29kIHdoaWNoIHRoZXkgZG8gbm90IGdpdmUuICBCdXQgd2hhdCBhZHZhbnRhZ2UgZG8gdGhleSBkZXJpdmUgZnJvbSB3aGF0IHRoZXkgZ2V0IGZyb20gdXM/ICBPciBoYXZlIHdlIHNvIG11Y2ggdGhlIGJldHRlciBvZiB0aGVtIGluIG91ciBiYXJ0ZXJpbmcgdGhhdCB3ZSBnZXQgYWxsIGdvb2QgdGhpbmdzIGZyb20gdGhlbSBhbmQgdGhleSBub3RoaW5nIGZyb20gdXM/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgZG9uJ3QgbGlrZSB0byBjYWxsIGl0IHNvLCBpZiBpdCBpcyBub3QgdHJ1ZS4gIEJ1dCB0ZWxsIG1lLCB3aGF0IGFkdmFudGFnZSBhY2NydWVzIHRvIHRoZSBnb2RzIGZyb20gdGhlIGdpZnRzIHRoZXkgZ2V0IGZyb20gdXM/ICBGb3IgZXZlcnlib2R5IGtub3dzIHdoYXQgdGhleSBnaXZlLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTUiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSIxNWEiIHVuaXQ9InNlY3Rpb24iIC8+c2luY2Ugd2UgaGF2ZSBub3RoaW5nIGdvb2Qgd2hpY2ggdGhleSBkbyBub3QgZ2l2ZS4gIEJ1dCB3aGF0IGFkdmFudGFnZSBkbyB0aGV5IGRlcml2ZSBmcm9tIHdoYXQgdGhleSBnZXQgZnJvbSB1cz8gIE9yIGhhdmUgd2Ugc28gbXVjaCB0aGUgYmV0dGVyIG9mIHRoZW0gaW4gb3VyIGJhcnRlcmluZyB0aGF0IHdlIGdldCBhbGwgZ29vZCB0aGluZ3MgZnJvbSB0aGVtIGFuZCB0aGV5IG5vdGhpbmcgZnJvbSB1cz88L3A+PC90cmFuc2xhdGlvbj4="
translation['15.15a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTVhIiB1bml0PSJzZWN0aW9uIiAvPnNpbmNlIHdlIGhhdmUgbm90aGluZyBnb29kIHdoaWNoIHRoZXkgZG8gbm90IGdpdmUuICBCdXQgd2hhdCBhZHZhbnRhZ2UgZG8gdGhleSBkZXJpdmUgZnJvbSB3aGF0IHRoZXkgZ2V0IGZyb20gdXM/ICBPciBoYXZlIHdlIHNvIG11Y2ggdGhlIGJldHRlciBvZiB0aGVtIGluIG91ciBiYXJ0ZXJpbmcgdGhhdCB3ZSBnZXQgYWxsIGdvb2QgdGhpbmdzIGZyb20gdGhlbSBhbmQgdGhleSBub3RoaW5nIGZyb20gdXM/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaHkgeW91IGRvbid0IHN1cHBvc2UsIFNvY3JhdGVzLCB0aGF0IHRoZSBnb2RzIGdhaW4gYW55IGFkdmFudGFnZSBmcm9tIHdoYXQgdGhleSBnZXQgZnJvbSB1cywgZG8geW91PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2h5IHlvdSBkb24ndCBzdXBwb3NlLCBTb2NyYXRlcywgdGhhdCB0aGUgZ29kcyBnYWluIGFueSBhZHZhbnRhZ2UgZnJvbSB3aGF0IHRoZXkgZ2V0IGZyb20gdXMsIGRvIHlvdT88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwgdGhlbiwgd2hhdCB3b3VsZCB0aG9zZSBnaWZ0cyBvZiBvdXJzIHRvIHRoZSBnb2RzIGJlPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsIHRoZW4sIHdoYXQgd291bGQgdGhvc2UgZ2lmdHMgb2Ygb3VycyB0byB0aGUgZ29kcyBiZT88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IGVsc2UgdGhhbiBob25vciBhbmQgcHJhaXNlLCBhbmQsIGFzIEkgc2FpZCBiZWZvcmUsIGdyYXRpdHVkZT8KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE1YiIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgZWxzZSB0aGFuIGhvbm9yIGFuZCBwcmFpc2UsIGFuZCwgYXMgSSBzYWlkIGJlZm9yZSwgZ3JhdGl0dWRlPwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTViIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['15.15b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNWIiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4sIEV1dGh5cGhybywgaG9saW5lc3MgaXMgZ3JhdGVmdWwgdG8gdGhlIGdvZHMsIGJ1dCBub3QgYWR2YW50YWdlb3VzIG9yIHByZWNpb3VzIHRvIHRoZSBnb2RzPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCBFdXRoeXBocm8sIGhvbGluZXNzIGlzIGdyYXRlZnVsIHRvIHRoZSBnb2RzLCBidXQgbm90IGFkdmFudGFnZW91cyBvciBwcmVjaW91cyB0byB0aGUgZ29kcz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHRoaW5rIGl0IGlzIHByZWNpb3VzLCBhYm92ZSBhbGwgdGhpbmdzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB0aGluayBpdCBpcyBwcmVjaW91cywgYWJvdmUgYWxsIHRoaW5ncy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gYWdhaW4sIGl0IHNlZW1zLCBob2xpbmVzcyBpcyB0aGF0IHdoaWNoIGlzIHByZWNpb3VzIHRvIHRoZSBnb2RzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGFnYWluLCBpdCBzZWVtcywgaG9saW5lc3MgaXMgdGhhdCB3aGljaCBpcyBwcmVjaW91cyB0byB0aGUgZ29kcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHdpbGwgeW91IGJlIHN1cnByaXNlZCwgc2luY2UgeW91IHNheSB0aGlzLCBpZiB5b3VyIHdvcmRzIGRvIG5vdCByZW1haW4gZml4ZWQgYnV0IHdhbGsgYWJvdXQsIGFuZCB3aWxsIHlvdSBhY2N1c2UgbWUgb2YgYmVpbmcgdGhlIERhZWRhbHVzIHdobyBtYWtlcyB0aGVtIHdhbGssIHdoZW4geW91IGFyZSB5b3Vyc2VsZiBtdWNoIG1vcmUgc2tpbGZ1bCB0aGFuIERhZWRhbHVzIGFuZCBtYWtlIHRoZW0gZ28gcm91bmQgaW4gYSBjaXJjbGU/ICBPciBkbyB5b3Ugbm90IHNlZQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTVjIiB1bml0PSJzZWN0aW9uIiAvPnRoYXQgb3VyIGRlZmluaXRpb24gaGFzIGNvbWUgcm91bmQgdG8gdGhlIHBvaW50IGZyb20gd2hpY2ggaXQgc3RhcnRlZD8gIEZvciB5b3UgcmVtZW1iZXIsIEkgc3VwcG9zZSwgdGhhdCBhIHdoaWxlIGFnbyB3ZSBmb3VuZCB0aGF0IGhvbGluZXNzIGFuZCB3aGF0IGlzIGRlYXIgdG8gdGhlIGdvZHMgd2VyZSBub3QgdGhlIHNhbWUsIGJ1dCBkaWZmZXJlbnQgZnJvbSBlYWNoIG90aGVyOyAgb3IgZG8geW91IG5vdCByZW1lbWJlcj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB3aWxsIHlvdSBiZSBzdXJwcmlzZWQsIHNpbmNlIHlvdSBzYXkgdGhpcywgaWYgeW91ciB3b3JkcyBkbyBub3QgcmVtYWluIGZpeGVkIGJ1dCB3YWxrIGFib3V0LCBhbmQgd2lsbCB5b3UgYWNjdXNlIG1lIG9mIGJlaW5nIHRoZSBEYWVkYWx1cyB3aG8gbWFrZXMgdGhlbSB3YWxrLCB3aGVuIHlvdSBhcmUgeW91cnNlbGYgbXVjaCBtb3JlIHNraWxmdWwgdGhhbiBEYWVkYWx1cyBhbmQgbWFrZSB0aGVtIGdvIHJvdW5kIGluIGEgY2lyY2xlPyAgT3IgZG8geW91IG5vdCBzZWUKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE1YyIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IG91ciBkZWZpbml0aW9uIGhhcyBjb21lIHJvdW5kIHRvIHRoZSBwb2ludCBmcm9tIHdoaWNoIGl0IHN0YXJ0ZWQ/ICBGb3IgeW91IHJlbWVtYmVyLCBJIHN1cHBvc2UsIHRoYXQgYSB3aGlsZSBhZ28gd2UgZm91bmQgdGhhdCBob2xpbmVzcyBhbmQgd2hhdCBpcyBkZWFyIHRvIHRoZSBnb2RzIHdlcmUgbm90IHRoZSBzYW1lLCBidXQgZGlmZmVyZW50IGZyb20gZWFjaCBvdGhlcjsgIG9yIGRvIHlvdSBub3QgcmVtZW1iZXI/PC9wPjwvdHJhbnNsYXRpb24+"
translation['15.15c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNWMiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBvdXIgZGVmaW5pdGlvbiBoYXMgY29tZSByb3VuZCB0byB0aGUgcG9pbnQgZnJvbSB3aGljaCBpdCBzdGFydGVkPyAgRm9yIHlvdSByZW1lbWJlciwgSSBzdXBwb3NlLCB0aGF0IGEgd2hpbGUgYWdvIHdlIGZvdW5kIHRoYXQgaG9saW5lc3MgYW5kIHdoYXQgaXMgZGVhciB0byB0aGUgZ29kcyB3ZXJlIG5vdCB0aGUgc2FtZSwgYnV0IGRpZmZlcmVudCBmcm9tIGVhY2ggb3RoZXI7ICBvciBkbyB5b3Ugbm90IHJlbWVtYmVyPzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBJIHJlbWVtYmVyLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBJIHJlbWVtYmVyLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBkb24ndCB5b3Ugc2VlIHRoYXQgbm93IHlvdSBzYXkgdGhhdCB3aGF0IGlzIHByZWNpb3VzIHRvIHRoZSBnb2RzIGlzIGhvbHk/ICBBbmQgaXMgbm90IHRoaXMgd2hhdCBpcyBkZWFyIHRvIHRoZSBnb2RzPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGRvbid0IHlvdSBzZWUgdGhhdCBub3cgeW91IHNheSB0aGF0IHdoYXQgaXMgcHJlY2lvdXMgdG8gdGhlIGdvZHMgaXMgaG9seT8gIEFuZCBpcyBub3QgdGhpcyB3aGF0IGlzIGRlYXIgdG8gdGhlIGdvZHM/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBlaXRoZXIgb3VyIGFncmVlbWVudCBhIHdoaWxlIGFnbyB3YXMgd3JvbmcsIG9yIGlmIHRoYXQgd2FzIHJpZ2h0LCB3ZSBhcmUgd3Jvbmcgbm93LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGVpdGhlciBvdXIgYWdyZWVtZW50IGEgd2hpbGUgYWdvIHdhcyB3cm9uZywgb3IgaWYgdGhhdCB3YXMgcmlnaHQsIHdlIGFyZSB3cm9uZyBub3cuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U28gaXQgc2VlbXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5TbyBpdCBzZWVtcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gd2UgbXVzdCBiZWdpbiBhZ2FpbiBhdCB0aGUgYmVnaW5uaW5nIGFuZCBhc2sgd2hhdCBob2xpbmVzcyBpcy4gIFNpbmNlIEkgc2hhbGwgbm90IHdpbGxpbmdseSBnaXZlIHVwIHVudGlsIEkgbGVhcm4uCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNWQiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIGRvIG5vdCBzY29ybiBtZSwgYnV0IGJ5IGFsbCBtZWFucyBhcHBseSB5b3VyIG1pbmQgbm93IHRvIHRoZSB1dG1vc3QgYW5kIHRlbGwgbWUgdGhlIHRydXRoOyAgZm9yIHlvdSBrbm93LCBpZiBhbnlvbmUgZG9lcywgYW5kIGxpa2UgUHJvdGV1cywgeW91IG11c3QgYmUgaGVsZCB1bnRpbCB5b3Ugc3BlYWsuICBGb3IgaWYgeW91IGhhZCBub3QgY2xlYXIga25vd2xlZGdlIG9mIGhvbGluZXNzIGFuZCB1bmhvbGluZXNzLCB5b3Ugd291bGQgc3VyZWx5IG5vdCBoYXZlIHVuZGVydGFrZW4gdG8gcHJvc2VjdXRlIHlvdXIgYWdlZCBmYXRoZXIgZm9yIG11cmRlciBmb3IgdGhlIHNha2Ugb2YgYSBzZXJ2YW50LiAgWW91IHdvdWxkIGhhdmUgYmVlbiBhZnJhaWQgdG8gcmlzayB0aGUgYW5nZXIgb2YgdGhlIGdvZHMsIGluIGNhc2UgeW91ciBjb25kdWN0IHNob3VsZCBiZSB3cm9uZywgYW5kIHdvdWxkIGhhdmUgYmVlbiBhc2hhbWVkIGluIHRoZSBzaWdodCBvZiBtZW4uICBCdXQgbm93IEkgYW0gc3VyZQo8bWlsZXN0b25lIG49IjE1ZSIgdW5pdD0ic2VjdGlvbiIgLz55b3UgdGhpbmsgeW91IGtub3cgd2hhdCBpcyBob2x5IGFuZCB3aGF0IGlzIG5vdC4gIFNvIHRlbGwgbWUsIG1vc3QgZXhjZWxsZW50IEV1dGh5cGhybywgYW5kIGRvIG5vdCBjb25jZWFsIHlvdXIgdGhvdWdodC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB3ZSBtdXN0IGJlZ2luIGFnYWluIGF0IHRoZSBiZWdpbm5pbmcgYW5kIGFzayB3aGF0IGhvbGluZXNzIGlzLiAgU2luY2UgSSBzaGFsbCBub3Qgd2lsbGluZ2x5IGdpdmUgdXAgdW50aWwgSSBsZWFybi4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE1ZCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgZG8gbm90IHNjb3JuIG1lLCBidXQgYnkgYWxsIG1lYW5zIGFwcGx5IHlvdXIgbWluZCBub3cgdG8gdGhlIHV0bW9zdCBhbmQgdGVsbCBtZSB0aGUgdHJ1dGg7ICBmb3IgeW91IGtub3csIGlmIGFueW9uZSBkb2VzLCBhbmQgbGlrZSBQcm90ZXVzLCB5b3UgbXVzdCBiZSBoZWxkIHVudGlsIHlvdSBzcGVhay4gIEZvciBpZiB5b3UgaGFkIG5vdCBjbGVhciBrbm93bGVkZ2Ugb2YgaG9saW5lc3MgYW5kIHVuaG9saW5lc3MsIHlvdSB3b3VsZCBzdXJlbHkgbm90IGhhdmUgdW5kZXJ0YWtlbiB0byBwcm9zZWN1dGUgeW91ciBhZ2VkIGZhdGhlciBmb3IgbXVyZGVyIGZvciB0aGUgc2FrZSBvZiBhIHNlcnZhbnQuICBZb3Ugd291bGQgaGF2ZSBiZWVuIGFmcmFpZCB0byByaXNrIHRoZSBhbmdlciBvZiB0aGUgZ29kcywgaW4gY2FzZSB5b3VyIGNvbmR1Y3Qgc2hvdWxkIGJlIHdyb25nLCBhbmQgd291bGQgaGF2ZSBiZWVuIGFzaGFtZWQgaW4gdGhlIHNpZ2h0IG9mIG1lbi4gIEJ1dCBub3cgSSBhbSBzdXJlCjxtaWxlc3RvbmUgbj0iMTVlIiB1bml0PSJzZWN0aW9uIiAvPnlvdSB0aGluayB5b3Uga25vdyB3aGF0IGlzIGhvbHkgYW5kIHdoYXQgaXMgbm90LiAgU28gdGVsbCBtZSwgbW9zdCBleGNlbGxlbnQgRXV0aHlwaHJvLCBhbmQgZG8gbm90IGNvbmNlYWwgeW91ciB0aG91Z2h0LjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['15.15d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNWQiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIGRvIG5vdCBzY29ybiBtZSwgYnV0IGJ5IGFsbCBtZWFucyBhcHBseSB5b3VyIG1pbmQgbm93IHRvIHRoZSB1dG1vc3QgYW5kIHRlbGwgbWUgdGhlIHRydXRoOyAgZm9yIHlvdSBrbm93LCBpZiBhbnlvbmUgZG9lcywgYW5kIGxpa2UgUHJvdGV1cywgeW91IG11c3QgYmUgaGVsZCB1bnRpbCB5b3Ugc3BlYWsuICBGb3IgaWYgeW91IGhhZCBub3QgY2xlYXIga25vd2xlZGdlIG9mIGhvbGluZXNzIGFuZCB1bmhvbGluZXNzLCB5b3Ugd291bGQgc3VyZWx5IG5vdCBoYXZlIHVuZGVydGFrZW4gdG8gcHJvc2VjdXRlIHlvdXIgYWdlZCBmYXRoZXIgZm9yIG11cmRlciBmb3IgdGhlIHNha2Ugb2YgYSBzZXJ2YW50LiAgWW91IHdvdWxkIGhhdmUgYmVlbiBhZnJhaWQgdG8gcmlzayB0aGUgYW5nZXIgb2YgdGhlIGdvZHMsIGluIGNhc2UgeW91ciBjb25kdWN0IHNob3VsZCBiZSB3cm9uZywgYW5kIHdvdWxkIGhhdmUgYmVlbiBhc2hhbWVkIGluIHRoZSBzaWdodCBvZiBtZW4uICBCdXQgbm93IEkgYW0gc3VyZQo8L3RyYW5zbGF0aW9uPg=="
translation['15.15e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNWUiIHVuaXQ9InNlY3Rpb24iIC8+eW91IHRoaW5rIHlvdSBrbm93IHdoYXQgaXMgaG9seSBhbmQgd2hhdCBpcyBub3QuICBTbyB0ZWxsIG1lLCBtb3N0IGV4Y2VsbGVudCBFdXRoeXBocm8sIGFuZCBkbyBub3QgY29uY2VhbCB5b3VyIHRob3VnaHQuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb21lIG90aGVyIHRpbWUsIFNvY3JhdGVzLiAgTm93IEkgYW0gaW4gYSBodXJyeSBhbmQgaXQgaXMgdGltZSBmb3IgbWUgdG8gZ28uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb21lIG90aGVyIHRpbWUsIFNvY3JhdGVzLiAgTm93IEkgYW0gaW4gYSBodXJyeSBhbmQgaXQgaXMgdGltZSBmb3IgbWUgdG8gZ28uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PaCBteSBmcmllbmQsIHdoYXQgYXJlIHlvdSBkb2luZz8gIFlvdSBnbyBhd2F5IGFuZCBsZWF2ZSBtZSBjYXN0IGRvd24gZnJvbSB0aGUgaGlnaCBob3BlIEkgaGFkIHRoYXQgSSBzaG91bGQgbGVhcm4gZnJvbSB5b3Ugd2hhdCBpcyBob2x5LCBhbmQgd2hhdCBpcyBub3QsIGFuZCBzaG91bGQgZ2V0IHJpZCBvZiBNZWxldHVzJ3MgaW5kaWN0bWVudCBieSBzaG93aW5nIGhpbQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTYiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSIxNmEiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBJIGhhdmUgYmVlbiBtYWRlIHdpc2UgYnkgRXV0aHlwaHJvIGFib3V0IGRpdmluZSBtYXR0ZXJzIGFuZCBhbSBubyBsb25nZXIgdGhyb3VnaCBpZ25vcmFuY2UgYWN0aW5nIGNhcmVsZXNzbHkgYW5kIG1ha2luZyBpbm5vdmF0aW9ucyBpbiByZXNwZWN0IHRvIHRoZW0sIGFuZCB0aGF0IEkgc2hhbGwgbGl2ZSBhIGJldHRlciBsaWZlIGhlbmNlZm9ydGguPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9oIG15IGZyaWVuZCwgd2hhdCBhcmUgeW91IGRvaW5nPyAgWW91IGdvIGF3YXkgYW5kIGxlYXZlIG1lIGNhc3QgZG93biBmcm9tIHRoZSBoaWdoIGhvcGUgSSBoYWQgdGhhdCBJIHNob3VsZCBsZWFybiBmcm9tIHlvdSB3aGF0IGlzIGhvbHksIGFuZCB3aGF0IGlzIG5vdCwgYW5kIHNob3VsZCBnZXQgcmlkIG9mIE1lbGV0dXMncyBpbmRpY3RtZW50IGJ5IHNob3dpbmcgaGltCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjE2YSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IEkgaGF2ZSBiZWVuIG1hZGUgd2lzZSBieSBFdXRoeXBocm8gYWJvdXQgZGl2aW5lIG1hdHRlcnMgYW5kIGFtIG5vIGxvbmdlciB0aHJvdWdoIGlnbm9yYW5jZSBhY3RpbmcgY2FyZWxlc3NseSBhbmQgbWFraW5nIGlubm92YXRpb25zIGluIHJlc3BlY3QgdG8gdGhlbSwgYW5kIHRoYXQgSSBzaGFsbCBsaXZlIGEgYmV0dGVyIGxpZmUgaGVuY2Vmb3J0aC48L3A+PC90cmFuc2xhdGlvbj4="
translation['16.16a'] = ""
translation['17.16a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxIiB1bml0PSJzcGVlY2giIC8+CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNyIgdW5pdD0icGFnZSIgLz48L3RyYW5zbGF0aW9uPg=="
translation['17.17a'] = ""
translation['17.17b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxN2IiIHVuaXQ9InNlY3Rpb24iIC8+YmVjYXVzZSBJIHdhcyBhIGNsZXZlciBzcGVha2VyLiAgRm9yIEkgdGhvdWdodCBpdCB0aGUgbW9zdCBzaGFtZWxlc3MgcGFydCBvZiB0aGVpciBjb25kdWN0IHRoYXQgdGhleSBhcmUgbm90IGFzaGFtZWQgYmVjYXVzZSB0aGV5IHdpbGwgaW1tZWRpYXRlbHkgYmUgY29udmljdGVkIGJ5IG1lIG9mIGZhbHNlaG9vZCBieSB0aGUgZXZpZGVuY2Ugb2YgZmFjdCwgd2hlbiBJIHNob3cgbXlzZWxmIHRvIGJlIG5vdCBpbiB0aGUgbGVhc3QgYSBjbGV2ZXIgc3BlYWtlciwgdW5sZXNzIGluZGVlZCB0aGV5IGNhbGwgaGltIGEgY2xldmVyIHNwZWFrZXIgd2hvIHNwZWFrcyB0aGUgdHJ1dGg7ICBmb3IgaWYgdGhpcyBpcyB3aGF0IHRoZXkgbWVhbiwgSSB3b3VsZCBhZ3JlZSB0aGF0IEkgYW0gYW4gb3JhdG9y4oCUbm90IGFmdGVyIHRoZWlyIGZhc2hpb24uICBOb3cgdGhleSwgYXMgSSBzYXksIGhhdmUgc2FpZCBsaXR0bGUgb3Igbm90aGluZyB0cnVlOyAgYnV0IHlvdSBzaGFsbCBoZWFyIGZyb20gbWUgbm90aGluZyBidXQgdGhlIHRydXRoLiAgTm90LCBob3dldmVyLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBzcGVlY2hlcyBmaW5lbHkgdHJpY2tlZCBvdXQgd2l0aCB3b3JkcyBhbmQgcGhyYXNlcywKPC90cmFuc2xhdGlvbj4="
translation['17.17c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxN2MiIHVuaXQ9InNlY3Rpb24iIC8+YXMgdGhlaXJzIGFyZSwgbm9yIGNhcmVmdWxseSBhcnJhbmdlZCwgYnV0IHlvdSB3aWxsIGhlYXIgdGhpbmdzIHNhaWQgYXQgcmFuZG9tIHdpdGggdGhlIHdvcmRzIHRoYXQgaGFwcGVuIHRvIG9jY3VyIHRvIG1lLiAgRm9yIEkgdHJ1c3QgdGhhdCB3aGF0IEkgc2F5IGlzIGp1c3Q7ICBhbmQgbGV0IG5vbmUgb2YgeW91IGV4cGVjdCBhbnl0aGluZyBlbHNlLiAgRm9yIHN1cmVseSBpdCB3b3VsZCBub3QgYmUgZml0dGluZyBmb3Igb25lIG9mIG15IGFnZSB0byBjb21lIGJlZm9yZSB5b3UgbGlrZSBhIHlvdW5nc3RlciBtYWtpbmcgdXAgc3BlZWNoZXMuICBBbmQsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIEkgdXJnZW50bHkgYmVnIGFuZCBiZXNlZWNoIHlvdSBpZiB5b3UgaGVhciBtZSBtYWtpbmcgbXkgZGVmZW5jZSB3aXRoIHRoZSBzYW1lIHdvcmRzIHdpdGggd2hpY2ggSSBoYXZlIGJlZW4gYWNjdXN0b21lZCB0byBzcGVhayBib3RoIGluIHRoZSBtYXJrZXQgcGxhY2UgYXQgdGhlIGJhbmtlcnMgdGFibGVzLCB3aGVyZSBtYW55IG9mIHlvdSBoYXZlIGhlYXJkIG1lLCBhbmQgZWxzZXdoZXJlLAo8L3RyYW5zbGF0aW9uPg=="
translation['17.17d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxN2QiIHVuaXQ9InNlY3Rpb24iIC8+bm90IHRvIGJlIHN1cnByaXNlZCBvciB0byBtYWtlIGEgZGlzdHVyYmFuY2Ugb24gdGhpcyBhY2NvdW50LiAgRm9yIHRoZSBmYWN0IGlzIHRoYXQgdGhpcyBpcyB0aGUgZmlyc3QgdGltZSBJIGhhdmUgY29tZSBiZWZvcmUgdGhlIGNvdXJ0LCBhbHRob3VnaCBJIGFtIHNldmVudHkgeWVhcnMgb2xkOyAgSSBhbSB0aGVyZWZvcmUgYW4gdXR0ZXIgZm9yZWlnbmVyIHRvIHRoZSBtYW5uZXIgb2Ygc3BlZWNoIGhlcmUuICBIZW5jZSwganVzdCBhcyB5b3Ugd291bGQsIG9mIGNvdXJzZSwgaWYgSSB3ZXJlIHJlYWxseSBhIGZvcmVpZ25lciwgcGFyZG9uIG1lIGlmIEkgc3Bva2UgaW4gdGhhdCBkaWFsZWN0IGFuZCB0aGF0IG1hbm5lcgo8L3RyYW5zbGF0aW9uPg=="
translation['18.18a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMThhIiB1bml0PSJzZWN0aW9uIiAvPmluIHdoaWNoIEkgaGFkIGJlZW4gYnJvdWdodCB1cCwgc28gbm93IEkgbWFrZSB0aGlzIHJlcXVlc3Qgb2YgeW91LCBhIGZhaXIgb25lLCBhcyBpdCBzZWVtcyB0byBtZSwgdGhhdCB5b3UgZGlzcmVnYXJkIHRoZSBtYW5uZXIgb2YgbXkgc3BlZWNo4oCUZm9yIHBlcmhhcHMgaXQgbWlnaHQgYmUgd29yc2UgYW5kIHBlcmhhcHMgYmV0dGVy4oCUYW5kIG9ic2VydmUgYW5kIHBheSBhdHRlbnRpb24gbWVyZWx5IHRvIHRoaXMsIHdoZXRoZXIgd2hhdCBJIHNheSBpcyBqdXN0IG9yIG5vdDsgIGZvciB0aGF0IGlzIHRoZSB2aXJ0dWUgb2YgYSBqdWRnZSwgYW5kIGFuIG9yYXRvcidzIHZpcnR1ZSBpcyB0byBzcGVhayB0aGUgdHJ1dGguPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZpcnN0IHRoZW4gaXQgaXMgcmlnaHQgZm9yIG1lIHRvIGRlZmVuZCBteXNlbGYgYWdhaW5zdCB0aGUgZmlyc3QgZmFsc2UgYWNjdXNhdGlvbnMgYnJvdWdodCBhZ2FpbnN0IG1lLCBhbmQgdGhlIGZpcnN0IGFjY3VzZXJzLCBhbmQgdGhlbiBhZ2FpbnN0IHRoZSBsYXRlciBhY2N1c2F0aW9ucyBhbmQgdGhlIGxhdGVyIGFjY3VzZXJzLiAKPC90cmFuc2xhdGlvbj4="
translation['18.18b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOGIiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIG1hbnkgYWNjdXNlcnMgaGF2ZSByaXNlbiB1cCBhZ2FpbnN0IG1lIGJlZm9yZSB5b3UsIHdobyBoYXZlIGJlZW4gc3BlYWtpbmcgZm9yIGEgbG9uZyB0aW1lLCBtYW55IHllYXJzIGFscmVhZHksIGFuZCBzYXlpbmcgbm90aGluZyB0cnVlOyAgYW5kIEkgZmVhciB0aGVtIG1vcmUgdGhhbiBBbnl0dXMgYW5kIHRoZSByZXN0LCB0aG91Z2ggdGhlc2UgYWxzbyBhcmUgZGFuZ2Vyb3VzOyAgYnV0IHRob3NlIG90aGVycyBhcmUgbW9yZSBkYW5nZXJvdXMsIGdlbnRsZW1lbiwgd2hvIGdhaW5lZCB5b3VyIGJlbGllZiwgc2luY2UgdGhleSBnb3QgaG9sZCBvZiBtb3N0IG9mIHlvdSBpbiBjaGlsZGhvb2QsIGFuZCBhY2N1c2VkIG1lIHdpdGhvdXQgYW55IHRydXRoLCBzYXlpbmcsIOKAnFRoZXJlIGlzIGEgY2VydGFpbiBTb2NyYXRlcywgYSB3aXNlIG1hbiwgYSBwb25kZXJlciBvdmVyIHRoZSB0aGluZ3MgaW4gdGhlIGFpciBhbmQgb25lIHdobyBoYXMgaW52ZXN0aWdhdGVkIHRoZSB0aGluZ3MgYmVuZWF0aCB0aGUgZWFydGggYW5kIHdobyBtYWtlcyB0aGUgd2Vha2VyIGFyZ3VtZW50IHRoZSBzdHJvbmdlci7igJ0gIFRoZXNlLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LAo8L3RyYW5zbGF0aW9uPg=="
translation['18.18c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOGMiIHVuaXQ9InNlY3Rpb24iIC8+d2hvIGhhdmUgc3ByZWFkIGFicm9hZCB0aGlzIHJlcG9ydCwgYXJlIG15IGRhbmdlcm91cyBlbmVtaWVzLiAgRm9yIHRob3NlIHdobyBoZWFyIHRoZW0gdGhpbmsgdGhhdCBtZW4gd2hvIGludmVzdGlnYXRlIHRoZXNlIG1hdHRlcnMgZG8gbm90IGV2ZW4gYmVsaWV2ZSBpbiBnb2RzLiAgQmVzaWRlcywgdGhlc2UgYWNjdXNlcnMgYXJlIG1hbnkgYW5kIGhhdmUgYmVlbiBtYWtpbmcgdGhlaXIgYWNjdXNhdGlvbnMgYWxyZWFkeSBmb3IgYSBsb25nIHRpbWUsIGFuZCBtb3Jlb3ZlciB0aGV5IHNwb2tlIHRvIHlvdSBhdCBhbiBhZ2UgYXQgd2hpY2ggeW91IHdvdWxkIGJlbGlldmUgdGhlbSBtb3N0IHJlYWRpbHkgKHNvbWUgb2YgeW91IGluIHlvdXRoLCBtb3N0IG9mIHlvdSBpbiBjaGlsZGhvb2QpLCBhbmQgdGhlIGNhc2UgdGhleSBwcm9zZWN1dGVkIHdlbnQgdXR0ZXJseSBieSBkZWZhdWx0LCBzaW5jZSBub2JvZHkgYXBwZWFyZWQgaW4gZGVmZW5jZS4gIEJ1dCB0aGUgbW9zdCB1bnJlYXNvbmFibGUgdGhpbmcgb2YgYWxsIGlzIHRoaXMsIHRoYXQgaXQgaXMgbm90IGV2ZW4gcG9zc2libGUKPC90cmFuc2xhdGlvbj4="
translation['18.18d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOGQiIHVuaXQ9InNlY3Rpb24iIC8+dG8ga25vdyBhbmQgc3BlYWsgdGhlaXIgbmFtZXMsIGV4Y2VwdCB3aGVuIG9uZSBvZiB0aGVtIGhhcHBlbnMgdG8gYmUgYSB3cml0ZXIgb2YgY29tZWRpZXMuICBBbmQgYWxsIHRob3NlIHdobyBwZXJzdWFkZWQgeW91IGJ5IG1lYW5zIG9mIGVudnkgYW5kIHNsYW5kZXLigJRhbmQgc29tZSBhbHNvIHBlcnN1YWRlZCBvdGhlcnMgYmVjYXVzZSB0aGV5IGhhZCBiZWVuIHRoZW1zZWx2ZXMgcGVyc3VhZGVk4oCUYWxsIHRoZXNlIGFyZSBtb3N0IGRpZmZpY3VsdCB0byBjb3BlIHdpdGg7ICBmb3IgaXQgaXMgbm90IGV2ZW4gcG9zc2libGUgdG8gY2FsbCBhbnkgb2YgdGhlbSB1cCBoZXJlIGFuZCBjcm9zcy1xdWVzdGlvbiBoaW0sIGJ1dCBJIGFtIGNvbXBlbGxlZCBpbiBtYWtpbmcgbXkgZGVmZW5jZSB0byBmaWdodCwgYXMgaXQgd2VyZSwgYWJzb2x1dGVseSB3aXRoIHNoYWRvd3MgYW5kIHRvIGNyb3NzLXF1ZXN0aW9uIHdoZW4gbm9ib2R5IGFuc3dlcnMuICBCZSBraW5kIGVub3VnaCwgdGhlbiwgdG8gYmVhciBpbiBtaW5kLCBhcyBJIHNheSwgdGhhdCB0aGVyZSBhcmUgdHdvIGNsYXNzZXMKPC90cmFuc2xhdGlvbj4="
translation['18.18e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOGUiIHVuaXQ9InNlY3Rpb24iIC8+b2YgbXkgYWNjdXNlcnPigJRvbmUgdGhvc2Ugd2hvIGhhdmUganVzdCBicm91Z2h0IHRoZWlyIGFjY3VzYXRpb24sIHRoZSBvdGhlciB0aG9zZSB3aG8sIGFzIEkgd2FzIGp1c3Qgc2F5aW5nLCBicm91Z2h0IGl0IGxvbmcgYWdvLCBhbmQgY29uc2lkZXIgdGhhdCBJIG11c3QgZGVmZW5kIG15c2VsZiBmaXJzdCBhZ2FpbnN0IHRoZSBsYXR0ZXI7ICBmb3IgeW91IGhlYXJkIHRoZW0gbWFraW5nIHRoZWlyIGNoYXJnZXMgZmlyc3QgYW5kIHdpdGggbXVjaCBncmVhdGVyIGZvcmNlIHRoYW4gdGhlc2Ugd2hvIG1hZGUgdGhlbSBsYXRlci4gIFdlbGwsIHRoZW4sIEkgbXVzdCBtYWtlIGEgZGVmZW5jZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwKPC90cmFuc2xhdGlvbj4="
translation['19.19a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTlhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBtdXN0IHRyeSBpbiBzbyBzaG9ydCBhIHRpbWUgdG8gcmVtb3ZlIGZyb20geW91IHRoaXMgcHJlanVkaWNlIHdoaWNoIHlvdSBoYXZlIGJlZW4gZm9yIHNvIGxvbmcgYSB0aW1lIGFjcXVpcmluZy4gIE5vdyBJIHdpc2ggdGhhdCB0aGlzIG1pZ2h0IHR1cm4gb3V0IHNvLCBpZiBpdCBpcyBiZXR0ZXIgZm9yIHlvdSBhbmQgZm9yIG1lLCBhbmQgdGhhdCBJIG1pZ2h0IHN1Y2NlZWQgd2l0aCBteSBkZWZlbmNlOyAgYnV0IEkgdGhpbmsgaXQgaXMgZGlmZmljdWx0LCBhbmQgSSBhbSBub3QgYXQgYWxsIGRlY2VpdmVkIGFib3V0IGl0cyBuYXR1cmUuICBCdXQgbmV2ZXJ0aGVsZXNzLCBsZXQgdGhpcyBiZSBhcyBpcyBwbGVhc2luZyB0byBHb2QsIHRoZSBsYXcgbXVzdCBiZSBvYmV5ZWQgYW5kIEkgbXVzdCBtYWtlIGEgZGVmZW5jZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGxldCB1cyB0YWtlIHVwIGZyb20gdGhlIGJlZ2lubmluZyB0aGUgcXVlc3Rpb24sIHdoYXQgdGhlIGFjY3VzYXRpb24gaXMgZnJvbSB3aGljaCB0aGUgZmFsc2UgcHJlanVkaWNlIGFnYWluc3QgbWUgaGFzIGFyaXNlbiwgaW4gd2hpY2gKPC90cmFuc2xhdGlvbj4="
translation['19.19b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOWIiIHVuaXQ9InNlY3Rpb24iIC8+TWVsZXR1cyB0cnVzdGVkIHdoZW4gaGUgYnJvdWdodCB0aGlzIHN1aXQgYWdhaW5zdCBtZS4gIFdoYXQgZGlkIHRob3NlIHdobyBhcm91c2VkIHRoZSBwcmVqdWRpY2Ugc2F5IHRvIGFyb3VzZSBpdD8gIEkgbXVzdCwgYXMgaXQgd2VyZSwgcmVhZCB0aGVpciBzd29ybiBzdGF0ZW1lbnQgYXMgaWYgdGhleSB3ZXJlIHBsYWludGlmZnM6ICDigJxTb2NyYXRlcyBpcyBhIGNyaW1pbmFsIGFuZCBhIGJ1c3lib2R5LCBpbnZlc3RpZ2F0aW5nIHRoZSB0aGluZ3MgYmVuZWF0aCB0aGUgZWFydGggYW5kIGluIHRoZSBoZWF2ZW5zIGFuZCBtYWtpbmcgdGhlIHdlYWtlciBhcmd1bWVudCBzdHJvbmdlciBhbmQKPC90cmFuc2xhdGlvbj4="
translation['19.19c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOWMiIHVuaXQ9InNlY3Rpb24iIC8+dGVhY2hpbmcgb3RoZXJzIHRoZXNlIHNhbWUgdGhpbmdzLuKAnSAgU29tZXRoaW5nIG9mIHRoYXQgc29ydCBpdCBpcy4gIEZvciB5b3UgeW91cnNlbHZlcyBzYXcgdGhlc2UgdGhpbmdzIGluIEFyaXN0b3BoYW5lcycgY29tZWR5LCBhIFNvY3JhdGVzIGJlaW5nIGNhcnJpZWQgYWJvdXQgdGhlcmUsIHByb2NsYWltaW5nIHRoYXQgaGUgd2FzIHRyZWFkaW5nIG9uIGFpciBhbmQgdXR0ZXJpbmcgYSB2YXN0IGRlYWwgb2Ygb3RoZXIgbm9uc2Vuc2UsIGFib3V0IHdoaWNoIEkga25vdyBub3RoaW5nLCBlaXRoZXIgbXVjaCBvciBsaXR0bGUuICBBbmQgSSBzYXkgdGhpcywgbm90IHRvIGNhc3QgZGlzaG9ub3IgdXBvbiBzdWNoIGtub3dsZWRnZSwgaWYgYW55b25lIGlzIHdpc2UgYWJvdXQgc3VjaCBtYXR0ZXJzIChtYXkgSSBuZXZlciBoYXZlIHRvIGRlZmVuZCBteXNlbGYgYWdhaW5zdCBNZWxldHVzIG9uIHNvIGdyZWF0IGEgY2hhcmdlIGFzIHRoYXQhKSzigJRidXQgSSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgaGF2ZSBub3RoaW5nIHRvIGRvIHdpdGggdGhlc2UgdGhpbmdzLiAKPC90cmFuc2xhdGlvbj4="
translation['19.19d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOWQiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIEkgb2ZmZXIgYXMgd2l0bmVzc2VzIG1vc3Qgb2YgeW91cnNlbHZlcywgYW5kIEkgYXNrIHlvdSB0byBpbmZvcm0gb25lIGFub3RoZXIgYW5kIHRvIHRlbGwsIGFsbCB0aG9zZSBvZiB5b3Ugd2hvIGV2ZXIgaGVhcmQgbWUgY29udmVyc2luZ+KAlGFuZCB0aGVyZSBhcmUgbWFueSBzdWNoIGFtb25nIHlvdeKAlG5vdyB0ZWxsLCBpZiBhbnlvbmUgZXZlciBoZWFyZCBtZSB0YWxraW5nIG11Y2ggb3IgbGl0dGxlIGFib3V0IHN1Y2ggbWF0dGVycy4gIEFuZCBmcm9tIHRoaXMgeW91IHdpbGwgcGVyY2VpdmUgdGhhdCBzdWNoIGFyZSBhbHNvIHRoZSBvdGhlciB0aGluZ3MgdGhhdCB0aGUgbXVsdGl0dWRlIHNheSBhYm91dCBtZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGluIGZhY3Qgbm9uZSBvZiB0aGVzZSB0aGluZ3MgYXJlIHRydWUsIGFuZCBpZiB5b3UgaGF2ZSBoZWFyZCBmcm9tIGFueW9uZSB0aGF0IEkgdW5kZXJ0YWtlIHRvIHRlYWNoCjwvdHJhbnNsYXRpb24+"
translation['19.19e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxOWUiIHVuaXQ9InNlY3Rpb24iIC8+cGVvcGxlIGFuZCB0aGF0IEkgbWFrZSBtb25leSBieSBpdCwgdGhhdCBpcyBub3QgdHJ1ZSBlaXRoZXIuICBBbHRob3VnaCB0aGlzIGFsc28gc2VlbXMgdG8gbWUgdG8gYmUgYSBmaW5lIHRoaW5nLCBpZiBvbmUgbWlnaHQgYmUgYWJsZSB0byB0ZWFjaCBwZW9wbGUsIGFzIEdvcmdpYXMgb2YgTGVvbnRpbmkgYW5kIFByb2RpY3VzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEwODY3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMTA4NjciPkNlb3M8L3BsYWNlTmFtZT4gYW5kIEhpcHBpYXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxFbGlzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxFbGlzIj5FbGlzPC9wbGFjZU5hbWU+IGFyZS4gIEZvciBlYWNoIG9mIHRoZXNlIG1lbiwgZ2VudGxlbWVuLCBpcyBhYmxlIHRvIGdvIGludG8gYW55IG9uZSBvZiB0aGUgY2l0aWVzIGFuZCBwZXJzdWFkZSB0aGUgeW91bmcgbWVuLCB3aG8gY2FuIGFzc29jaWF0ZSBmb3Igbm90aGluZyB3aXRoIHdob21zb2V2ZXIgdGhleSB3aXNoIGFtb25nIHRoZWlyIG93biBmZWxsb3cgY2l0aXplbnMsCjwvdHJhbnNsYXRpb24+"
translation['20.20a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjBhIiB1bml0PSJzZWN0aW9uIiAvPnRvIGdpdmUgdXAgdGhlIGFzc29jaWF0aW9uIHdpdGggdGhvc2UgbWVuIGFuZCB0byBhc3NvY2lhdGUgd2l0aCB0aGVtIGFuZCBwYXkgdGhlbSBtb25leSBhbmQgYmUgZ3JhdGVmdWwgYmVzaWRlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHRoZXJlIGlzIGFsc28gYW5vdGhlciB3aXNlIG1hbiBoZXJlLCBhIFBhcmlhbiwgd2hvIEkgbGVhcm5lZCB3YXMgaW4gdG93bjsgIGZvciBJIGhhcHBlbmVkIHRvIG1lZXQgYSBtYW4gd2hvIGhhcyBzcGVudCBtb3JlIG9uIHNvcGhpc3RzIHRoYW4gYWxsIHRoZSByZXN0LCBDYWxsaWFzLCB0aGUgc29uIG9mIEhpcHBvbmljdXM7ICBzbyBJIGFza2VkIGhpbeKAlGZvciBoZSBoYXMgdHdvIHNvbnPigJTigJxDYWxsaWFzLOKAnSBzYWlkIEksIOKAnGlmIHlvdXIgdHdvIHNvbnMgaGFkIGhhcHBlbmVkIHRvIGJlIHR3byBjb2x0cyBvciB0d28gY2FsdmVzLCB3ZSBzaG91bGQgYmUgYWJsZSB0byBnZXQgYW5kIGhpcmUgZm9yIHRoZW0gYW4gb3ZlcnNlZXIgd2hvIHdvdWxkIG1ha2UgdGhlbQo8L3RyYW5zbGF0aW9uPg=="
translation['20.20b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMGIiIHVuaXQ9InNlY3Rpb24iIC8+ZXhjZWxsZW50IGluIHRoZSBraW5kIG9mIGV4Y2VsbGVuY2UgcHJvcGVyIHRvIHRoZW07ICBhbmQgaGUgd291bGQgYmUgYSBob3JzZS10cmFpbmVyIG9yIGEgaHVzYmFuZG1hbjsgIGJ1dCBub3csIHNpbmNlIHRoZXkgYXJlIHR3byBodW1hbiBiZWluZ3MsIHdob20gaGF2ZSB5b3UgaW4gbWluZCB0byBnZXQgYXMgb3ZlcnNlZXI/ICBXaG8gaGFzIGtub3dsZWRnZSBvZiB0aGF0IGtpbmQgb2YgZXhjZWxsZW5jZSwgdGhhdCBvZiBhIG1hbiBhbmQgYSBjaXRpemVuPyAgRm9yIEkgdGhpbmsgeW91IGhhdmUgbG9va2VkIGludG8gdGhlIG1hdHRlciwgYmVjYXVzZSB5b3UgaGF2ZSB0aGUgc29ucy4gIElzIHRoZXJlIGFueW9uZSzigJ0gc2FpZCBJLCDigJxvciBub3Q/4oCdICDigJxDZXJ0YWlubHks4oCdIHNhaWQgaGUuICDigJxXaG8s4oCdIHNhaWQgSSwg4oCcYW5kIHdoZXJlIGZyb20sIGFuZCB3aGF0IGlzIGhpcyBwcmljZSBmb3IgaGlzIHRlYWNoaW5nP+KAnSAg4oCcRXZlbnVzLOKAnSBoZSBzYWlkLCDigJxTb2NyYXRlcywgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTAyMyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMDIzIj5QYXJvczwvcGxhY2VOYW1lPiwgZml2ZSBtaW5hZS7igJ0gIEFuZCBJIGNhbGxlZCBFdmVudXMgYmxlc3NlZCwKPC90cmFuc2xhdGlvbj4="
translation['20.20c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMGMiIHVuaXQ9InNlY3Rpb24iIC8+aWYgaGUgcmVhbGx5IGhhZCB0aGlzIGFydCBhbmQgdGF1Z2h0IHNvIHJlYXNvbmFibHkuICBJIG15c2VsZiBzaG91bGQgYmUgdmFpbiBhbmQgcHV0IG9uIGFpcnMsIGlmIEkgdW5kZXJzdG9vZCB0aGVzZSB0aGluZ3M7ICBidXQgSSBkbyBub3QgdW5kZXJzdGFuZCB0aGVtLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Ob3cgcGVyaGFwcyBzb21lb25lIG1pZ2h0IHJlam9pbjogIOKAnEJ1dCwgU29jcmF0ZXMsIHdoYXQgaXMgdGhlIHRyb3VibGUgYWJvdXQgeW91PyAgV2hlbmNlIGhhdmUgdGhlc2UgcHJlanVkaWNlcyBhZ2FpbnN0IHlvdSBhcmlzZW4/ICBGb3IgY2VydGFpbmx5IHRoaXMgZ3JlYXQgcmVwb3J0IGFuZCB0YWxrIGhhcyBub3QgYXJpc2VuIHdoaWxlIHlvdSB3ZXJlIGRvaW5nIG5vdGhpbmcgbW9yZSBvdXQgb2YgdGhlIHdheSB0aGFuIHRoZSByZXN0LCB1bmxlc3MgeW91IHdlcmUgZG9pbmcgc29tZXRoaW5nIG90aGVyIHRoYW4gbW9zdCBwZW9wbGU7ICBzbyB0ZWxsIHVzCjwvdHJhbnNsYXRpb24+"
translation['20.20d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMGQiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCBpdCBpcywgdGhhdCB3ZSBtYXkgbm90IGFjdCB1bmFkdmlzZWRseSBpbiB5b3VyIGNhc2Uu4oCdICBUaGUgbWFuIHdobyBzYXlzIHRoaXMgc2VlbXMgdG8gbWUgdG8gYmUgcmlnaHQsIGFuZCBJIHdpbGwgdHJ5IHRvIHNob3cgeW91IHdoYXQgaXQgaXMgdGhhdCBoYXMgYnJvdWdodCBhYm91dCBteSByZXB1dGF0aW9uIGFuZCBhcm91c2VkIHRoZSBwcmVqdWRpY2UgYWdhaW5zdCBtZS4gIFNvIGxpc3Rlbi4gIEFuZCBwZXJoYXBzIEkgc2hhbGwgc2VlbSB0byBzb21lIG9mIHlvdSB0byBiZSBqb2tpbmc7ICBiZSBhc3N1cmVkLCBob3dldmVyLCBJIHNoYWxsIHNwZWFrIHBlcmZlY3QgdHJ1dGggdG8geW91LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGUgZmFjdCBpcywgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhhdCBJIGhhdmUgYWNxdWlyZWQgdGhpcyByZXB1dGF0aW9uIG9uIGFjY291bnQgb2Ygbm90aGluZyBlbHNlIHRoYW4gYSBzb3J0IG9mIHdpc2RvbS4gIFdoYXQga2luZCBvZiB3aXNkb20gaXMgdGhpcz8gIEp1c3QgdGhhdCB3aGljaCBpcyBwZXJoYXBzIGh1bWFuIHdpc2RvbS4gIEZvciBwZXJoYXBzIEkgcmVhbGx5IGFtIHdpc2UgaW4gdGhpcyB3aXNkb207ICBhbmQgdGhlc2UgbWVuLCBwZXJoYXBzLAo8L3RyYW5zbGF0aW9uPg=="
translation['20.20e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMGUiIHVuaXQ9InNlY3Rpb24iIC8+b2Ygd2hvbSBJIHdhcyBqdXN0IHNwZWFraW5nLCBtaWdodCBiZSB3aXNlIGluIHNvbWUgd2lzZG9tIGdyZWF0ZXIgdGhhbiBodW1hbiwgb3IgSSBkb24ndCBrbm93IHdoYXQgdG8gc2F5OyAgZm9yIEkgZG8gbm90IHVuZGVyc3RhbmQgaXQsIGFuZCB3aG9ldmVyIHNheXMgSSBkbywgaXMgbHlpbmcgYW5kIHNwZWFraW5nIHRvIGFyb3VzZSBwcmVqdWRpY2UgYWdhaW5zdCBtZS4gIEFuZCwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgZG8gbm90IGludGVycnVwdCBtZSB3aXRoIG5vaXNlLCBldmVuIGlmIEkgc2VlbSB0byB5b3UgdG8gYmUgYm9hc3Rpbmc7ICBmb3IgdGhlIHdvcmQgd2hpY2ggSSBzcGVhayBpcyBub3QgbWluZSwgYnV0IHRoZSBzcGVha2VyIHRvIHdob20gSSBzaGFsbCByZWZlciBpdCBpcyBhIHBlcnNvbiBvZiB3ZWlnaHQuICBGb3Igb2YgbXkgd2lzZG9t4oCUaWYgaXQgaXMgd2lzZG9tIGF0IGFsbOKAlGFuZCBvZiBpdHMgbmF0dXJlLCBJIHdpbGwgb2ZmZXIgeW91IHRoZSBnb2Qgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxEZWxwaGkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERlbHBoaSI+RGVscGhpPC9wbGFjZU5hbWU+IGFzIGEgd2l0bmVzcy4gIFlvdSBrbm93IENoYWVyZXBob24sIEkgZmFuY3kuIAo8L3RyYW5zbGF0aW9uPg=="
translation['21.21a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjFhIiB1bml0PSJzZWN0aW9uIiAvPkhlIHdhcyBteSBjb21yYWRlIGZyb20gYSB5b3V0aCBhbmQgdGhlIGNvbXJhZGUgb2YgeW91ciBkZW1vY3JhdGljIHBhcnR5LCBhbmQgc2hhcmVkIGluIHRoZSByZWNlbnQgZXhpbGUgYW5kIGNhbWUgYmFjayB3aXRoIHlvdS4gIEFuZCB5b3Uga25vdyB0aGUga2luZCBvZiBtYW4gQ2hhZXJlcGhvbiB3YXMsIGhvdyBpbXBldHVvdXMgaW4gd2hhdGV2ZXIgaGUgdW5kZXJ0b29rLiAgV2VsbCwgb25jZSBoZSB3ZW50IHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVscGhpIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxEZWxwaGkiPkRlbHBoaTwvcGxhY2VOYW1lPiBhbmQgbWFkZSBzbyBib2xkIGFzIHRvIGFzayB0aGUgb3JhY2xlIHRoaXMgcXVlc3Rpb247ICBhbmQsIGdlbnRsZW1lbiwgZG9uJ3QgbWFrZSBhIGRpc3R1cmJhbmNlIGF0IHdoYXQgSSBzYXk7ICBmb3IgaGUgYXNrZWQgaWYgdGhlcmUgd2VyZSBhbnlvbmUgd2lzZXIgdGhhbiBJLiAgTm93IHRoZSBQeXRoaWEgcmVwbGllZCB0aGF0IHRoZXJlIHdhcyBubyBvbmUgd2lzZXIuICBBbmQgYWJvdXQgdGhlc2UgdGhpbmdzIGhpcyBicm90aGVyIGhlcmUgd2lsbCBiZWFyIHlvdSB3aXRuZXNzLCBzaW5jZSBDaGFlcmVwaG9uIGlzIGRlYWQuCjwvdHJhbnNsYXRpb24+"
translation['21.21b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMWIiIHVuaXQ9InNlY3Rpb24iIC8+IEJ1dCBzZWUgd2h5IEkgc2F5IHRoZXNlIHRoaW5nczsgIGZvciBJIGFtIGdvaW5nIHRvIHRlbGwgeW91IHdoZW5jZSB0aGUgcHJlanVkaWNlIGFnYWluc3QgbWUgaGFzIGFyaXNlbi4gIEZvciB3aGVuIEkgaGVhcmQgdGhpcywgSSB0aG91Z2h0IHRvIG15c2VsZjogIOKAnFdoYXQgaW4gdGhlIHdvcmxkIGRvZXMgdGhlIGdvZCBtZWFuLCBhbmQgd2hhdCByaWRkbGUgaXMgaGUgcHJvcG91bmRpbmc/ICBGb3IgSSBhbSBjb25zY2lvdXMgdGhhdCBJIGFtIG5vdCB3aXNlIGVpdGhlciBtdWNoIG9yIGxpdHRsZS4gIFdoYXQgdGhlbiBkb2VzIGhlIG1lYW4gYnkgZGVjbGFyaW5nIHRoYXQgSSBhbSB0aGUgd2lzZXN0PyAgSGUgY2VydGFpbmx5IGNhbm5vdCBiZSBseWluZywgZm9yIHRoYXQgaXMgbm90IHBvc3NpYmxlIGZvciBoaW0u4oCdICBBbmQgZm9yIGEgbG9uZyB0aW1lIEkgd2FzIGF0IGEgbG9zcyBhcyB0byB3aGF0IGhlIG1lYW50OyAgdGhlbiB3aXRoIGdyZWF0IHJlbHVjdGFuY2UgSSBwcm9jZWVkZWQgdG8gaW52ZXN0aWdhdGUgaGltIHNvbWV3aGF0IGFzIGZvbGxvd3MuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkkgd2VudCB0byBvbmUgb2YgdGhvc2Ugd2hvIGhhZCBhIHJlcHV0YXRpb24gZm9yIHdpc2RvbSwKPC90cmFuc2xhdGlvbj4="
translation['21.21c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMWMiIHVuaXQ9InNlY3Rpb24iIC8+dGhpbmtpbmcgdGhhdCB0aGVyZSwgaWYgYW55d2hlcmUsIEkgc2hvdWxkIHByb3ZlIHRoZSB1dHRlcmFuY2Ugd3JvbmcgYW5kIHNob3VsZCBzaG93IHRoZSBvcmFjbGUg4oCcVGhpcyBtYW4gaXMgd2lzZXIgdGhhbiBJLCBidXQgeW91IHNhaWQgSSB3YXMgd2lzZXN0LuKAnSAgU28gZXhhbWluaW5nIHRoaXMgbWFu4oCUZm9yIEkgbmVlZCBub3QgY2FsbCBoaW0gYnkgbmFtZSwgYnV0IGl0IHdhcyBvbmUgb2YgdGhlIHB1YmxpYyBtZW4gd2l0aCByZWdhcmQgdG8gd2hvbSBJIGhhZCB0aGlzIGtpbmQgb2YgZXhwZXJpZW5jZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPuKAlGFuZCBjb252ZXJzaW5nIHdpdGggaGltLCB0aGlzIG1hbiBzZWVtZWQgdG8gbWUgdG8gc2VlbSB0byBiZSB3aXNlIHRvIG1hbnkgb3RoZXIgcGVvcGxlIGFuZCBlc3BlY2lhbGx5IHRvIGhpbXNlbGYsIGJ1dCBub3QgdG8gYmUgc287ICBhbmQgdGhlbiBJIHRyaWVkIHRvIHNob3cgaGltIHRoYXQgaGUgdGhvdWdodAo8L3RyYW5zbGF0aW9uPg=="
translation['21.21d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMWQiIHVuaXQ9InNlY3Rpb24iIC8+aGUgd2FzIHdpc2UsIGJ1dCB3YXMgbm90LiAgQXMgYSByZXN1bHQsIEkgYmVjYW1lIGhhdGVmdWwgdG8gaGltIGFuZCB0byBtYW55IG9mIHRob3NlIHByZXNlbnQ7ICBhbmQgc28sIGFzIEkgd2VudCBhd2F5LCBJIHRob3VnaHQgdG8gbXlzZWxmLCDigJxJIGFtIHdpc2VyIHRoYW4gdGhpcyBtYW47ICBmb3IgbmVpdGhlciBvZiB1cyByZWFsbHkga25vd3MgYW55dGhpbmcgZmluZSBhbmQgZ29vZCwgYnV0IHRoaXMgbWFuIHRoaW5rcyBoZSBrbm93cyBzb21ldGhpbmcgd2hlbiBoZSBkb2VzIG5vdCwgd2hlcmVhcyBJLCBhcyBJIGRvIG5vdCBrbm93IGFueXRoaW5nLCBkbyBub3QgdGhpbmsgSSBkbyBlaXRoZXIuICBJIHNlZW0sIHRoZW4sIGluIGp1c3QgdGhpcyBsaXR0bGUgdGhpbmcgdG8gYmUgd2lzZXIgdGhhbiB0aGlzIG1hbiBhdCBhbnkgcmF0ZSwgdGhhdCB3aGF0IEkgZG8gbm90IGtub3cgSSBkbyBub3QgdGhpbmsgSSBrbm93IGVpdGhlci7igJ0gIEZyb20gaGltIEkgd2VudCB0byBhbm90aGVyIG9mIHRob3NlIHdobyB3ZXJlIHJlcHV0ZWQKPC90cmFuc2xhdGlvbj4="
translation['21.21e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMWUiIHVuaXQ9InNlY3Rpb24iIC8+dG8gYmUgd2lzZXIgdGhhbiBoZSwgYW5kIHRoZXNlIHNhbWUgdGhpbmdzIHNlZW1lZCB0byBtZSB0byBiZSB0cnVlOyAgYW5kIHRoZXJlIEkgYmVjYW1lIGhhdGVmdWwgYm90aCB0byBoaW0gYW5kIHRvIG1hbnkgb3RoZXJzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BZnRlciB0aGlzIHRoZW4gSSB3ZW50IG9uIGZyb20gb25lIHRvIGFub3RoZXIsIHBlcmNlaXZpbmcgdGhhdCBJIHdhcyBoYXRlZCwgYW5kIGdyaWV2aW5nIGFuZCBmZWFyaW5nLCBidXQgbmV2ZXJ0aGVsZXNzIEkgdGhvdWdodCBJIG11c3QgY29uc2lkZXIgdGhlIGdvZCdzIGJ1c2luZXNzIG9mIHRoZSBoaWdoZXN0IGltcG9ydGFuY2UuICBTbyBJIGhhZCB0byBnbywgaW52ZXN0aWdhdGluZyB0aGUgbWVhbmluZyBvZiB0aGUgb3JhY2xlLCB0byBhbGwgdGhvc2Ugd2hvIHdlcmUgcmVwdXRlZCB0byBrbm93IGFueXRoaW5nLiAgQW5kIGJ5IHRoZSBEb2csIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gCjwvdHJhbnNsYXRpb24+"
translation['22.22a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjJhIiB1bml0PSJzZWN0aW9uIiAvPuKAlGZvciBJIG11c3Qgc3BlYWsgdGhlIHRydXRoIHRvIHlvdeKAlHRoaXMsIEkgZG8gZGVjbGFyZSwgd2FzIG15IGV4cGVyaWVuY2U6ICB0aG9zZSB3aG8gaGFkIHRoZSBtb3N0IHJlcHV0YXRpb24gc2VlbWVkIHRvIG1lIHRvIGJlIGFsbW9zdCB0aGUgbW9zdCBkZWZpY2llbnQsIGFzIEkgaW52ZXN0aWdhdGVkIGF0IHRoZSBnb2QncyBiZWhlc3QsIGFuZCBvdGhlcnMgd2hvIHdlcmUgb2YgbGVzcyByZXB1dGUgc2VlbWVkIHRvIGJlIHN1cGVyaW9yIG1lbiBpbiB0aGUgbWF0dGVyIG9mIGJlaW5nIHNlbnNpYmxlLiAgU28gSSBtdXN0IHJlbGF0ZSB0byB5b3UgbXkgd2FuZGVyaW5nIGFzIEkgcGVyZm9ybWVkIG15IEhlcmN1bGVhbiBsYWJvcnMsIHNvIHRvIHNwZWFrLCBpbiBvcmRlciB0aGF0IHRoZSBvcmFjbGUgbWlnaHQgYmUgcHJvdmVkIHRvIGJlIGlycmVmdXRhYmxlLiAgRm9yIGFmdGVyIHRoZSBwdWJsaWMgbWVuIEkgd2VudCB0byB0aGUgcG9ldHMsIHRob3NlIG9mIHRyYWdlZGllcywgYW5kIHRob3NlIG9mIGRpdGh5cmFtYnMsCjwvdHJhbnNsYXRpb24+"
translation['22.22b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMmIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoZSByZXN0LCB0aGlua2luZyB0aGF0IHRoZXJlIEkgc2hvdWxkIHByb3ZlIGJ5IGFjdHVhbCB0ZXN0IHRoYXQgSSB3YXMgbGVzcyBsZWFybmVkIHRoYW4gdGhleS4gIFNvLCB0YWtpbmcgdXAgdGhlIHBvZW1zIG9mIHRoZWlycyB0aGF0IHNlZW1lZCB0byBtZSB0byBoYXZlIGJlZW4gbW9zdCBjYXJlZnVsbHkgZWxhYm9yYXRlZCBieSB0aGVtLCBJIGFza2VkIHRoZW0gd2hhdCB0aGV5IG1lYW50LCB0aGF0IEkgbWlnaHQgYXQgdGhlIHNhbWUgdGltZSBsZWFybiBzb21ldGhpbmcgZnJvbSB0aGVtLiAgTm93IEkgYW0gYXNoYW1lZCB0byB0ZWxsIHlvdSB0aGUgdHJ1dGgsIGdlbnRsZW1lbjsgIGJ1dCBzdGlsbCBpdCBtdXN0IGJlIHRvbGQuICBGb3IgdGhlcmUgd2FzIGhhcmRseSBhIG1hbiBwcmVzZW50LCBvbmUgbWlnaHQgc2F5LCB3aG8gd291bGQgbm90IHNwZWFrIGJldHRlciB0aGFuIHRoZXkgYWJvdXQgdGhlIHBvZW1zIHRoZXkgdGhlbXNlbHZlcyBoYWQgY29tcG9zZWQuICBTbyBhZ2FpbiBpbiB0aGUgY2FzZSBvZiB0aGUgcG9ldHMgYWxzbyBJIHByZXNlbnRseSByZWNvZ25pemVkIHRoaXMsCjwvdHJhbnNsYXRpb24+"
translation['22.22c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMmMiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCB3aGF0IHRoZXkgY29tcG9zZWQgdGhleSBjb21wb3NlZCBub3QgYnkgd2lzZG9tLCBidXQgYnkgbmF0dXJlIGFuZCBiZWNhdXNlIHRoZXkgd2VyZSBpbnNwaXJlZCwgbGlrZSB0aGUgcHJvcGhldHMgYW5kIGdpdmVycyBvZiBvcmFjbGVzOyAgZm9yIHRoZXNlIGFsc28gc2F5IG1hbnkgZmluZSB0aGluZ3MsIGJ1dCBrbm93IG5vbmUgb2YgdGhlIHRoaW5ncyB0aGV5IHNheTsgIGl0IHdhcyBldmlkZW50IHRvIG1lIHRoYXQgdGhlIHBvZXRzIHRvbyBoYWQgZXhwZXJpZW5jZWQgc29tZXRoaW5nIG9mIHRoaXMgc2FtZSBzb3J0LiAgQW5kIGF0IHRoZSBzYW1lIHRpbWUgSSBwZXJjZWl2ZWQgdGhhdCB0aGV5LCBvbiBhY2NvdW50IG9mIHRoZWlyIHBvZXRyeSwgdGhvdWdodCB0aGF0IHRoZXkgd2VyZSB0aGUgd2lzZXN0IG9mIG1lbiBpbiBvdGhlciB0aGluZ3MgYXMgd2VsbCwgaW4gd2hpY2ggdGhleSB3ZXJlIG5vdC4gIFNvIEkgd2VudCBhd2F5IGZyb20gdGhlbSBhbHNvIHRoaW5raW5nIHRoYXQgSSB3YXMgc3VwZXJpb3IgdG8gdGhlbSBpbiB0aGUgc2FtZSB0aGluZyBpbiB3aGljaCBJIGV4Y2VsbGVkIHRoZSBwdWJsaWMgbWVuLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5GaW5hbGx5IHRoZW4gSSB3ZW50IHRvIHRoZSBoYW5kLXdvcmtlcnMuIAo8L3RyYW5zbGF0aW9uPg=="
translation['22.22d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMmQiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIEkgd2FzIGNvbnNjaW91cyB0aGF0IEkga25ldyBwcmFjdGljYWxseSBub3RoaW5nLCBidXQgSSBrbmV3IEkgc2hvdWxkIGZpbmQgdGhhdCB0aGV5IGtuZXcgbWFueSBmaW5lIHRoaW5ncy4gIEFuZCBpbiB0aGlzIEkgd2FzIG5vdCBkZWNlaXZlZDsgIHRoZXkgZGlkIGtub3cgd2hhdCBJIGRpZCBub3QsIGFuZCBpbiB0aGlzIHdheSB0aGV5IHdlcmUgd2lzZXIgdGhhbiBJLiAgQnV0LCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB0aGUgZ29vZCBhcnRpc2FucyBhbHNvIHNlZW1lZCB0byBtZSB0byBoYXZlIHRoZSBzYW1lIGZhaWxpbmcgYXMgdGhlIHBvZXRzOyAgYmVjYXVzZSBvZiBwcmFjdGljaW5nIGhpcyBhcnQgd2VsbCwgZWFjaCBvbmUgdGhvdWdodCBoZSB3YXMgdmVyeSB3aXNlIGluIHRoZSBvdGhlciBtb3N0IGltcG9ydGFudCBtYXR0ZXJzLCBhbmQgdGhpcyBmb2xseSBvZiB0aGVpcnMgb2JzY3VyZWQgdGhhdCB3aXNkb20sIHNvIHRoYXQgSSBhc2tlZCBteXNlbGYKPC90cmFuc2xhdGlvbj4="
translation['22.22e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMmUiIHVuaXQ9InNlY3Rpb24iIC8+aW4gYmVoYWxmIG9mIHRoZSBvcmFjbGUgd2hldGhlciBJIHNob3VsZCBwcmVmZXIgdG8gYmUgYXMgSSBhbSwgbmVpdGhlciB3aXNlIGluIHRoZWlyIHdpc2RvbSBub3IgZm9vbGlzaCBpbiB0aGVpciBmb2xseSwgb3IgdG8gYmUgaW4gYm90aCByZXNwZWN0cyBhcyB0aGV5IGFyZS4gIEkgcmVwbGllZCB0aGVuIHRvIG15c2VsZiBhbmQgdG8gdGhlIG9yYWNsZSB0aGF0IGl0IHdhcyBiZXR0ZXIgZm9yIG1lIHRvIGJlIGFzIEkgYW0uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBmcm9tIHRoaXMgaW52ZXN0aWdhdGlvbiwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwKPC90cmFuc2xhdGlvbj4="
translation['23.23a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyMyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjNhIiB1bml0PSJzZWN0aW9uIiAvPm1hbnkgZW5taXRpZXMgaGF2ZSBhcmlzZW4gYWdhaW5zdCBtZSwgYW5kIHN1Y2ggYXMgYXJlIG1vc3QgaGFyc2ggYW5kIGdyaWV2b3VzLCBzbyB0aGF0IG1hbnkgcHJlanVkaWNlcyBoYXZlIHJlc3VsdGVkIGZyb20gdGhlbSBhbmQgSSBhbSBjYWxsZWQgYSB3aXNlIG1hbi4gIEZvciBvbiBlYWNoIG9jY2FzaW9uIHRob3NlIHdobyBhcmUgcHJlc2VudCB0aGluayBJIGFtIHdpc2UgaW4gdGhlIG1hdHRlcnMgaW4gd2hpY2ggSSBjb25mdXRlIHNvbWVvbmUgZWxzZTsgIGJ1dCB0aGUgZmFjdCBpcywgZ2VudGxlbWVuLCBpdCBpcyBsaWtlbHkgdGhhdCB0aGUgZ29kIGlzIHJlYWxseSB3aXNlIGFuZCBieSBoaXMgb3JhY2xlIG1lYW5zIHRoaXM6ICDigJxIdW1hbiB3aXNkb20gaXMgb2YgbGl0dGxlIG9yIG5vIHZhbHVlLuKAnSBBbmQgaXQgYXBwZWFycyB0aGF0IGhlIGRvZXMgbm90IHJlYWxseSBzYXkgdGhpcyBvZiBTb2NyYXRlcywgYnV0IG1lcmVseSB1c2VzIG15IG5hbWUsCjwvdHJhbnNsYXRpb24+"
translation['23.23b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyM2IiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIG1ha2VzIG1lIGFuIGV4YW1wbGUsIGFzIGlmIGhlIHdlcmUgdG8gc2F5OiAg4oCcVGhpcyBvbmUgb2YgeW91LCBPIGh1bWFuIGJlaW5ncywgaXMgd2lzZXN0LCB3aG8sIGxpa2UgU29jcmF0ZXMsIHJlY29nbml6ZXMgdGhhdCBoZSBpcyBpbiB0cnV0aCBvZiBubyBhY2NvdW50IGluIHJlc3BlY3QgdG8gd2lzZG9tLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVyZWZvcmUgSSBhbSBzdGlsbCBldmVuIG5vdyBnb2luZyBhYm91dCBhbmQgc2VhcmNoaW5nIGFuZCBpbnZlc3RpZ2F0aW5nIGF0IHRoZSBnb2QncyBiZWhlc3QgYW55b25lLCB3aGV0aGVyIGNpdGl6ZW4gb3IgZm9yZWlnbmVyLCB3aG8gSSB0aGluayBpcyB3aXNlOyAgYW5kIHdoZW4gaGUgZG9lcyBub3Qgc2VlbSBzbyB0byBtZSwgSSBnaXZlIGFpZCB0byB0aGUgZ29kIGFuZCBzaG93IHRoYXQgaGUgaXMgbm90IHdpc2UuICBBbmQgYnkgcmVhc29uIG9mIHRoaXMgb2NjdXBhdGlvbiBJIGhhdmUgbm8gbGVpc3VyZSB0byBhdHRlbmQgdG8gYW55IG9mIHRoZSBhZmZhaXJzIG9mIHRoZSBzdGF0ZSB3b3J0aCBtZW50aW9uaW5nLCBvciBvZiBteSBvd24sIGJ1dCBhbSBpbiB2YXN0IHBvdmVydHkKPC90cmFuc2xhdGlvbj4="
translation['23.23c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyM2MiIHVuaXQ9InNlY3Rpb24iIC8+b24gYWNjb3VudCBvZiBteSBzZXJ2aWNlIHRvIHRoZSBnb2QuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBpbiBhZGRpdGlvbiB0byB0aGVzZSB0aGluZ3MsIHRoZSB5b3VuZyBtZW4gd2hvIGhhdmUgdGhlIG1vc3QgbGVpc3VyZSwgdGhlIHNvbnMgb2YgdGhlIHJpY2hlc3QgbWVuLCBhY2NvbXBhbnkgbWUgb2YgdGhlaXIgb3duIGFjY29yZCwgZmluZCBwbGVhc3VyZSBpbiBoZWFyaW5nIHBlb3BsZSBiZWluZyBleGFtaW5lZCwgYW5kIG9mdGVuIGltaXRhdGUgbWUgdGhlbXNlbHZlcywgYW5kIHRoZW4gdGhleSB1bmRlcnRha2UgdG8gZXhhbWluZSBvdGhlcnM7ICBhbmQgdGhlbiwgSSBmYW5jeSwgdGhleSBmaW5kIGEgZ3JlYXQgcGxlbnR5IG9mIHBlb3BsZSB3aG8gdGhpbmsgdGhleSBrbm93IHNvbWV0aGluZywgYnV0IGtub3cgbGl0dGxlIG9yIG5vdGhpbmcuICBBcyBhIHJlc3VsdCwgdGhlcmVmb3JlLCB0aG9zZSB3aG8gYXJlIGV4YW1pbmVkIGJ5IHRoZW0gYXJlIGFuZ3J5IHdpdGggbWUsIGluc3RlYWQgb2YgYmVpbmcgYW5ncnkgd2l0aCB0aGVtc2VsdmVzLCBhbmQgc2F5IHRoYXQg4oCcU29jcmF0ZXMgaXMgYSBtb3N0IGFib21pbmFibGUgcGVyc29uCjwvdHJhbnNsYXRpb24+"
translation['23.23d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyM2QiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGlzIGNvcnJ1cHRpbmcgdGhlIHlvdXRoLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgd2hlbiBhbnlvbmUgYXNrcyB0aGVtIOKAnGJ5IGRvaW5nIG9yIHRlYWNoaW5nIHdoYXQ/4oCdIHRoZXkgaGF2ZSBub3RoaW5nIHRvIHNheSwgYnV0IHRoZXkgZG8gbm90IGtub3csIGFuZCB0aGF0IHRoZXkgbWF5IG5vdCBzZWVtIHRvIGJlIGF0IGEgbG9zcyB0aGV5IHNheSB0aGVzZSB0aGluZ3MgdGhhdCBhcmUgaGFuZHkgdG8gc2F5IGFnYWluc3QgYWxsIHRoZSBwaGlsb3NvcGhlcnMsIOKAnHRoZSB0aGluZ3MgaW4gdGhlIGFpciBhbmQgdGhlIHRoaW5ncyBiZW5lYXRoIHRoZSBlYXJ0aOKAnSBhbmQg4oCcbm90IHRvIGJlbGlldmUgaW4gdGhlIGdvZHPigJ0gYW5kIOKAnHRvIG1ha2UgdGhlIHdlYWtlciBhcmd1bWVudCB0aGUgc3Ryb25nZXIu4oCdICBGb3IgdGhleSB3b3VsZCBub3QsIEkgZmFuY3ksIGNhcmUgdG8gc2F5IHRoZSB0cnV0aCwgdGhhdCBpdCBpcyBiZWluZyBtYWRlIHZlcnkgY2xlYXIgdGhhdCB0aGV5IHByZXRlbmQgdG8ga25vdywgYnV0IGtub3cgbm90aGluZy4gCjwvdHJhbnNsYXRpb24+"
translation['23.23e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyM2UiIHVuaXQ9InNlY3Rpb24iIC8+U2luY2UsIHRoZW4sIHRoZXkgYXJlIGplYWxvdXMgb2YgdGhlaXIgaG9ub3IgYW5kIGVuZXJnZXRpYyBhbmQgbnVtZXJvdXMgYW5kIHNwZWFrIGNvbmNlcnRlZGx5IGFuZCBwZXJzdWFzaXZlbHkgYWJvdXQgbWUsIHRoZXkgaGF2ZSBmaWxsZWQgeW91ciBlYXJzIGJvdGggbG9uZyBhZ28gYW5kIG5vdyB3aXRoIHZlaGVtZW50IHNsYW5kZXJzLiAgRnJvbSBhbW9uZyB0aGVtIE1lbGV0dXMgYXR0YWNrZWQgbWUsIGFuZCBBbnl0dXMgYW5kIEx5Y29uLCBNZWxldHVzIGFuZ2VyZWQgb24gYWNjb3VudCBvZiB0aGUgcG9ldHMsIGFuZCBBbnl0dXMgb24gYWNjb3VudCBvZiB0aGUgYXJ0aXNhbnMgYW5kIHRoZSBwdWJsaWMgbWVuLAo8L3RyYW5zbGF0aW9uPg=="
translation['24.24a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjRhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBMeWNvbiBvbiBhY2NvdW50IG9mIHRoZSBvcmF0b3JzOyAgc28gdGhhdCwgYXMgSSBzYWlkIGluIHRoZSBiZWdpbm5pbmcsIEkgc2hvdWxkIGJlIHN1cnByaXNlZCBpZiBJIHdlcmUgYWJsZSB0byByZW1vdmUgdGhpcyBwcmVqdWRpY2UgZnJvbSB5b3UgaW4gc28gc2hvcnQgYSB0aW1lIHdoZW4gaXQgaGFzIGdyb3duIHNvIGdyZWF0LiAgVGhlcmUgeW91IGhhdmUgdGhlIHRydXRoLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBhbmQgSSBzcGVhayB3aXRob3V0IGhpZGluZyBhbnl0aGluZyBmcm9tIHlvdSwgZ3JlYXQgb3Igc21hbGwgb3IgcHJldmFyaWNhdGluZy4gIEFuZCB5ZXQgSSBrbm93IHByZXR0eSB3ZWxsIHRoYXQgSSBhbSBtYWtpbmcgbXlzZWxmIGhhdGVkIGJ5IGp1c3QgdGhhdCBjb25kdWN0OyAgd2hpY2ggaXMgYWxzbyBhIHByb29mIHRoYXQgSSBhbSBzcGVha2luZyB0aGUgdHJ1dGggYW5kIHRoYXQgdGhpcyBpcyB0aGUgcHJlanVkaWNlIGFnYWluc3QgbWUgYW5kIHRoZXNlIGFyZSBpdHMgY2F1c2VzLiAgQW5kIHdoZXRoZXIgeW91IGludmVzdGlnYXRlCjwvdHJhbnNsYXRpb24+"
translation['24.24b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNGIiIHVuaXQ9InNlY3Rpb24iIC8+dGhpcyBub3cgb3IgaGVyZWFmdGVyLCB5b3Ugd2lsbCBmaW5kIHRoYXQgaXQgaXMgc28uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPk5vdyBzbyBmYXIgYXMgdGhlIGFjY3VzYXRpb25zIGFyZSBjb25jZXJuZWQgd2hpY2ggbXkgZmlyc3QgYWNjdXNlcnMgbWFkZSBhZ2FpbnN0IG1lLCB0aGlzIGlzIGEgc3VmZmljaWVudCBkZWZlbmNlIGJlZm9yZSB5b3U7ICBidXQgYWdhaW5zdCBNZWxldHVzLCB0aGUgZ29vZCBhbmQgcGF0cmlvdGljLCBhcyBoZSBzYXlzLCBhbmQgdGhlIGxhdGVyIG9uZXMsIEkgd2lsbCB0cnkgdG8gZGVmZW5kIG15c2VsZiBuZXh0LiAgU28gb25jZSBtb3JlLCBhcyBpZiB0aGVzZSB3ZXJlIGFub3RoZXIgc2V0IG9mIGFjY3VzZXJzLCBsZXQgdXMgdGFrZSB1cCBpbiB0dXJuIHRoZWlyIHN3b3JuIHN0YXRlbWVudC4gIEl0IGlzIGFib3V0IGFzIGZvbGxvd3M6ICBpdCBzdGF0ZXMgdGhhdCBTb2NyYXRlcyBpcyBhIHdyb25nZG9lciBiZWNhdXNlIGhlIGNvcnJ1cHRzIHRoZSB5b3V0aCBhbmQgZG9lcyBub3QgYmVsaWV2ZSBpbiB0aGUgZ29kcyB0aGUgc3RhdGUgYmVsaWV2ZXMgaW4sIGJ1dCBpbiBvdGhlcgo8L3RyYW5zbGF0aW9uPg=="
translation['24.24c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNGMiIHVuaXQ9InNlY3Rpb24iIC8+bmV3IHNwaXJpdHVhbCBiZWluZ3MuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlN1Y2ggaXMgdGhlIGFjY3VzYXRpb24uICBCdXQgbGV0IHVzIGV4YW1pbmUgZWFjaCBwb2ludCBvZiB0aGlzIGFjY3VzYXRpb24uICBIZSBzYXlzIEkgYW0gYSB3cm9uZ2RvZXIgYmVjYXVzZSBJIGNvcnJ1cHQgdGhlIHlvdXRoLiAgQnV0IEksIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHNheSBNZWxldHVzIGlzIGEgd3Jvbmdkb2VyLCBiZWNhdXNlIGhlIGpva2VzIGluIGVhcm5lc3QsIGxpZ2h0bHkgaW52b2x2aW5nIHBlb3BsZSBpbiBhIGxhd3N1aXQsIHByZXRlbmRpbmcgdG8gYmUgemVhbG91cyBhbmQgY29uY2VybmVkIGFib3V0IHRoaW5ncyBvciB3aGljaCBoZSBuZXZlciBjYXJlZCBhdCBhbGwuICBBbmQgdGhhdCB0aGlzIGlzIHNvIEkgd2lsbCB0cnkgdG8gbWFrZSBwbGFpbiB0byB5b3UgYWxzby48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Q29tZSBoZXJlLCBNZWxldHVzLCB0ZWxsIG1lOiAgZG9uJ3QgeW91IGNvbnNpZGVyIGl0CjwvdHJhbnNsYXRpb24+"
translation['24.24d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNGQiIHVuaXQ9InNlY3Rpb24iIC8+b2YgZ3JlYXQgaW1wb3J0YW5jZSB0aGF0IHRoZSB5b3V0aCBiZSBhcyBnb29kIGFzIHBvc3NpYmxlPyAg4oCcSSBkby7igJ0gIENvbWUgbm93LCB0ZWxsIHRoZXNlIGdlbnRsZW1lbiB3aG8gbWFrZXMgdGhlbSBiZXR0ZXI/ICBGb3IgaXQgaXMgZXZpZGVudCB0aGF0IHlvdSBrbm93LCBzaW5jZSB5b3UgY2FyZSBhYm91dCBpdC4gIEZvciB5b3UgaGF2ZSBmb3VuZCB0aGUgb25lIHdobyBjb3JydXB0cyB0aGVtLCBhcyB5b3Ugc2F5LCBhbmQgeW91IGJyaW5nIG1lIGJlZm9yZSB0aGVzZSBnZW50bGVtZW4gYW5kIGFjY3VzZSBtZTsgIGFuZCBub3csIGNvbWUsIHRlbGwgd2hvIG1ha2VzIHRoZW0gYmV0dGVyIGFuZCBpbmZvcm0gdGhlbSB3aG8gaGUgaXMuICBEbyB5b3Ugc2VlLCBNZWxldHVzLCB0aGF0IHlvdSBhcmUgc2lsZW50IGFuZCBjYW5ub3QgdGVsbD8gIEFuZCB5ZXQgZG9lcyBpdCBub3Qgc2VlbSB0byB5b3UgZGlzZ3JhY2VmdWwgYW5kIGEgc3VmZmljaWVudCBwcm9vZiBvZiB3aGF0IEkgc2F5LCB0aGF0IHlvdSBoYXZlIG5ldmVyIGNhcmVkIGFib3V0IGl0PyAgQnV0IHRlbGwsIG15IGdvb2QgbWFuLCB3aG8KPC90cmFuc2xhdGlvbj4="
translation['24.24e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNGUiIHVuaXQ9InNlY3Rpb24iIC8+bWFrZXMgdGhlbSBiZXR0ZXI/ICDigJxUaGUgbGF3cy7igJ0gIEJ1dCB0aGF0IGlzIG5vdCB3aGF0IEkgYXNrLCBtb3N0IGV4Y2VsbGVudCBvbmUsIGJ1dCB3aGF0IG1hbiwgd2hvIGtub3dzIGluIHRoZSBmaXJzdCBwbGFjZSBqdXN0IHRoaXMgdmVyeSB0aGluZywgdGhlIGxhd3MuICDigJxUaGVzZSBtZW4sIFNvY3JhdGVzLCB0aGUganVkZ2VzLuKAnSAgV2hhdCBhcmUgeW91IHNheWluZywgTWVsZXR1cz8gIEFyZSB0aGVzZSBnZW50bGVtZW4gYWJsZSB0byBpbnN0cnVjdCB0aGUgeW91dGgsIGFuZCBkbyB0aGV5IG1ha2UgdGhlbSBiZXR0ZXI/ICDigJxDZXJ0YWlubHku4oCdICBBbGwsIG9yIHNvbWUgb2YgdGhlbSBhbmQgb3RoZXJzIG5vdD8gIOKAnEFsbC7igJ0gIFdlbGwgc2FpZCwgYnkgSGVyYSwgYW5kIHRoaXMgaXMgYSBncmVhdCBwbGVudHkgb2YgaGVscGVycyB5b3Ugc3BlYWsgb2YuICBCdXQgaG93IGFib3V0IHRoaXM/IAo8L3RyYW5zbGF0aW9uPg=="
translation['25.25a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjVhIiB1bml0PSJzZWN0aW9uIiAvPkRvIHRoZXNlIGxpc3RlbmVycyBtYWtlIHRoZW0gYmV0dGVyLCBvciBub3Q/ICDigJxUaGVzZSBhbHNvLuKAnSAgQW5kIGhvdyBhYm91dCB0aGUgc2VuYXRvcnM/ICDigJxUaGUgc2VuYXRvcnMgYWxzby7igJ0gIEJ1dCwgTWVsZXR1cywgdGhvc2UgaW4gdGhlIGFzc2VtYmx5LCB0aGUgYXNzZW1ibHltZW4sIGRvbid0IGNvcnJ1cHQgdGhlIHlvdXRoLCBkbyB0aGV5PyAgb3IgZG8gdGhleSBhbHNvIGFsbCBtYWtlIHRoZW0gYmV0dGVyPyAg4oCcVGhleSBhbHNvLuKAnSAgQWxsIHRoZSBBdGhlbmlhbnMsIHRoZW4sIGFzIGl0IHNlZW1zLCBtYWtlIHRoZW0gZXhjZWxsZW50LCBleGNlcHQgbXlzZWxmLCBhbmQgSSBhbG9uZSBjb3JydXB0IHRoZW0uICBJcyB0aGlzIHdoYXQgeW91IG1lYW4/ICDigJxWZXJ5IGRlY2lkZWRseSwgdGhhdCBpcyB3aGF0IEkgbWVhbi7igJ0gIFlvdSBoYXZlIGNvbmRlbW5lZCBtZSB0byBncmVhdCB1bmhhcHBpbmVzcyEgIEJ1dCBhbnN3ZXIgbWU7ICBkb2VzIGl0IHNlZW0gdG8geW91IHRvIGJlIHNvIGluIHRoZSBjYXNlIG9mIGhvcnNlcywgdGhhdCB0aG9zZSB3aG8KPC90cmFuc2xhdGlvbj4="
translation['25.25b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNWIiIHVuaXQ9InNlY3Rpb24iIC8+bWFrZSB0aGVtIGJldHRlciBhcmUgYWxsIG1hbmtpbmQsIGFuZCBoZSB3aG8gaW5qdXJlcyB0aGVtIHNvbWUgb25lIHBlcnNvbj8gIE9yLCBxdWl0ZSB0aGUgb3Bwb3NpdGUgb2YgdGhpcywgdGhhdCBoZSB3aG8gaXMgYWJsZSB0byBtYWtlIHRoZW0gYmV0dGVyIGlzIHNvbWUgb25lIHBlcnNvbiwgb3IgdmVyeSBmZXcsIHRoZSBob3JzZS10cmFpbmVycywgd2hlcmVhcyBtb3N0IHBlb3BsZSwgaWYgdGhleSBoYXZlIHRvIGRvIHdpdGggYW5kIHVzZSBob3JzZXMsIGluanVyZSB0aGVtPyAgSXMgaXQgbm90IHNvLCBNZWxldHVzLCBib3RoIGluIHRoZSBjYXNlIG9mIGhvcnNlcyBhbmQgaW4gdGhhdCBvZiBhbGwgb3RoZXIgYW5pbWFscz8gIENlcnRhaW5seSBpdCBpcywgd2hldGhlciB5b3UgYW5kIEFueXR1cyBkZW55IGl0IG9yIGFncmVlOyAgZm9yIGl0IHdvdWxkIGJlIGEgZ3JlYXQgc3RhdGUgb2YgYmxlc3NlZG5lc3MgaW4gdGhlIGNhc2Ugb2YgdGhlIHlvdXRoIGlmIG9uZSBhbG9uZSBjb3JydXB0cyB0aGVtLCBhbmQgdGhlIG90aGVycyBkbyB0aGVtIGdvb2QuICBCdXQsCjwvdHJhbnNsYXRpb24+"
translation['25.25c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNWMiIHVuaXQ9InNlY3Rpb24iIC8+TWVsZXR1cywgeW91IHNob3cgY2xlYXJseSBlbm91Z2ggdGhhdCB5b3UgbmV2ZXIgdGhvdWdodCBhYm91dCB0aGUgeW91dGgsIGFuZCB5b3UgZXhoaWJpdCBwbGFpbmx5IHlvdXIgb3duIGNhcmVsZXNzbmVzcywgdGhhdCB5b3UgaGF2ZSBub3QgY2FyZWQgYXQgYWxsIGZvciB0aGUgdGhpbmdzIGFib3V0IHdoaWNoIHlvdSBoYWxlIG1lIGludG8gY291cnQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBiZXNpZGVzLCB0ZWxsIHVzLCBmb3IgaGVhdmVuJ3Mgc2FrZSwgTWVsZXR1cywgaXMgaXQgYmV0dGVyIHRvIGxpdmUgYW1vbmcgZ29vZCBjaXRpemVucywgb3IgYmFkPyAgTXkgZnJpZW5kLCBhbnN3ZXI7ICBmb3IgSSBhbSBub3QgYXNraW5nIGFueXRoaW5nIGhhcmQuICBEbyBub3QgdGhlIGJhZCBkbyBzb21lIGV2aWwgdG8gdGhvc2Ugd2hvIGFyZSB3aXRoIHRoZW0gYXQgYW55IHRpbWUgYW5kIHRoZSBnb29kIHNvbWUgZ29vZD8gIOKAnENlcnRhaW5seS7igJ0gIElzIHRoZXJlIHRoZW4gYW55b25lIHdobwo8L3RyYW5zbGF0aW9uPg=="
translation['25.25d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNWQiIHVuaXQ9InNlY3Rpb24iIC8+cHJlZmVycyB0byBiZSBpbmp1cmVkIGJ5IGhpcyBhc3NvY2lhdGVzIHJhdGhlciB0aGFuIGJlbmVmaXRlZD8gIEFuc3dlciwgbXkgZ29vZCBtYW47ICBmb3IgdGhlIGxhdyBvcmRlcnMgeW91IHRvIGFuc3dlci4gIElzIHRoZXJlIGFueW9uZSB3aG8gcHJlZmVycyB0byBiZSBpbmp1cmVkPyAg4oCcT2YgY291cnNlIG5vdC7igJ0gIENvbWUgdGhlbiwgZG8geW91IGhhbGUgbWUgaW4gaGVyZSBvbiB0aGUgZ3JvdW5kIHRoYXQgSSBhbSBjb3JydXB0aW5nIHRoZSB5b3V0aCBhbmQgbWFraW5nIHRoZW0gd29yc2Ugdm9sdW50YXJpbHkgb3IgaW52b2x1bnRhcmlseT8gIOKAnFZvbHVudGFyaWx5IEkgc2F5LuKAnSAgV2hhdCB0aGVuLCBNZWxldHVzPyAgQXJlIHlvdSBhdCB5b3VyIGFnZSBzbyBtdWNoIHdpc2VyIHRoYW4gSSBhdCBteSBhZ2UsIHRoYXQgeW91IGhhdmUgcmVjb2duaXplZCB0aGF0IHRoZSBldmlsIGFsd2F5cyBkbyBzb21lIGV2aWwKPC90cmFuc2xhdGlvbj4="
translation['25.25e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNWUiIHVuaXQ9InNlY3Rpb24iIC8+dG8gdGhvc2UgbmVhcmVzdCB0aGVtLCBhbmQgdGhlIGdvb2Qgc29tZSBnb29kOyAgd2hlcmVhcyBJIGhhdmUgcmVhY2hlZCBzdWNoIGEgZGVwdGggb2YgaWdub3JhbmNlIHRoYXQgSSBkbyBub3QgZXZlbiBrbm93IHRoaXMsIHRoYXQgaWYgSSBtYWtlIGFueW9uZSBvZiBteSBhc3NvY2lhdGVzIGJhZCBJIGFtIGluIGRhbmdlciBvZiBnZXR0aW5nIHNvbWUgaGFybSBmcm9tIGhpbSwgc28gdGhhdCBJIGRvIHRoaXMgZ3JlYXQgZXZpbCB2b2x1bnRhcmlseSwgYXMgeW91IHNheT8gIEkgZG9uJ3QgYmVsaWV2ZSB0aGlzLCBNZWxldHVzLCBub3IgZG8gSSB0aGluayBhbnlvbmUgZWxzZSBpbiB0aGUgd29ybGQgZG9lcyEgCjwvdHJhbnNsYXRpb24+"
translation['26.26a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjZhIiB1bml0PSJzZWN0aW9uIiAvPmJ1dCBlaXRoZXIgSSBkbyBub3QgY29ycnVwdCB0aGVtLCBvciBpZiBJIGNvcnJ1cHQgdGhlbSwgSSBkbyBpdCBpbnZvbHVudGFyaWx5LCBzbyB0aGF0IHlvdSBhcmUgbHlpbmcgaW4gYm90aCBldmVudHMuICBCdXQgaWYgSSBjb3JydXB0IHRoZW0gaW52b2x1bnRhcmlseSwgZm9yIHN1Y2ggaW52b2x1bnRhcnkgZXJyb3JzIHRoZSBsYXcgaXMgbm90IHRvIGhhbGUgcGVvcGxlIGludG8gY291cnQsIGJ1dCB0byB0YWtlIHRoZW0gYW5kIGluc3RydWN0IGFuZCBhZG1vbmlzaCB0aGVtIGluIHByaXZhdGUuICBGb3IgaXQgaXMgY2xlYXIgdGhhdCBpZiBJIGFtIHRvbGQgYWJvdXQgaXQsIEkgc2hhbGwgc3RvcCBkb2luZyB0aGF0IHdoaWNoIEkgZG8gaW52b2x1bnRhcmlseS4gIEJ1dCB5b3UgYXZvaWRlZCBhc3NvY2lhdGluZyB3aXRoIG1lIGFuZCBpbnN0cnVjdGluZyBtZSwgYW5kIHdlcmUgdW53aWxsaW5nIHRvIGRvIHNvLCBidXQgeW91IGhhbGUgbWUgaW4gaGVyZSwgd2hlcmUgaXQgaXMgdGhlIGxhdyB0byBoYWxlIGluIHRob3NlIHdobyBuZWVkIHB1bmlzaG1lbnQsIG5vdCBpbnN0cnVjdGlvbi48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IGVub3VnaCBvZiB0aGlzLCBmb3IsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIHRoaXMgaXMgY2xlYXIsIGFzIEkgc2FpZCwgdGhhdCBNZWxldHVzIG5ldmVyCjwvdHJhbnNsYXRpb24+"
translation['26.26b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNmIiIHVuaXQ9InNlY3Rpb24iIC8+Y2FyZWQgbXVjaCBvciBsaXR0bGUgZm9yIHRoZXNlIHRoaW5ncy4gIEJ1dCBuZXZlcnRoZWxlc3MsIHRlbGwgdXMsIGhvdyBkbyB5b3Ugc2F5LCBNZWxldHVzLCB0aGF0IEkgY29ycnVwdCB0aGUgeW91dGg/ICBPciBpcyBpdCBldmlkZW50LCBhY2NvcmRpbmcgdG8gdGhlIGluZGljdG1lbnQgeW91IGJyb3VnaHQsIHRoYXQgaXQgaXMgYnkgdGVhY2hpbmcgdGhlbSBub3QgdG8gYmVsaWV2ZSBpbiB0aGUgZ29kcyB0aGUgc3RhdGUgYmVsaWV2ZXMgaW4sIGJ1dCBpbiBvdGhlciBuZXcgc3Bpcml0dWFsIGJlaW5ncz8gIERvIHlvdSBub3Qgc2F5IHRoYXQgaXQgaXMgYnkgdGVhY2hpbmcgdGhpcyB0aGF0IEkgY29ycnVwdCB0aGVtPyAg4oCcVmVyeSBkZWNpZGVkbHkgdGhhdCBpcyB3aGF0IEkgc2F5LuKAnSAgVGhlbiwgTWVsZXR1cywgZm9yIHRoZSBzYWtlIG9mCjwvdHJhbnNsYXRpb24+"
translation['26.26c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNmMiIHVuaXQ9InNlY3Rpb24iIC8+dGhlc2UgdmVyeSBnb2RzIGFib3V0IHdob20gb3VyIHNwZWVjaCBub3cgaXMsIHNwZWFrIHN0aWxsIG1vcmUgY2xlYXJseSBib3RoIHRvIG1lIGFuZCB0byB0aGVzZSBnZW50bGVtZW4uICBGb3IgSSBhbSB1bmFibGUgdG8gdW5kZXJzdGFuZCB3aGV0aGVyIHlvdSBzYXkgdGhhdCBJIHRlYWNoIHRoYXQgdGhlcmUgYXJlIHNvbWUgZ29kcywgYW5kIG15c2VsZiB0aGVuIGJlbGlldmUgdGhhdCB0aGVyZSBhcmUgc29tZSBnb2RzLCBhbmQgYW0gbm90IGFsdG9nZXRoZXIgZ29kbGVzcyBhbmQgYW0gbm90IGEgd3Jvbmdkb2VyIGluIHRoYXQgd2F5LCB0aGF0IHRoZXNlLCBob3dldmVyLCBhcmUgbm90IHRoZSBnb2RzIHdob20gdGhlIHN0YXRlIGJlbGlldmVzIGluLCBidXQgb3RoZXJzLCBhbmQgdGhpcyBpcyB3aGF0IHlvdSBhY2N1c2UgbWUgZm9yLCB0aGF0IEkgYmVsaWV2ZSBpbiBvdGhlcnM7ICBvciB5b3Ugc2F5IHRoYXQgSSBkbyBub3QgbXlzZWxmIGJlbGlldmUgaW4gZ29kcyBhdCBhbGwgYW5kIHRoYXQgSSB0ZWFjaCB0aGlzIHVuYmVsaWVmIHRvIG90aGVyIHBlb3BsZS4gIOKAnFRoYXQgaXMgd2hhdCBJIHNheSwgdGhhdCB5b3UgZG8gbm90IGJlbGlldmUgaW4gZ29kcyBhdCBhbGwu4oCdICBZb3UgYW1hemUgbWUsIE1lbGV0dXMhICBXaHkgZG8geW91IHNheSB0aGlzPyAKPC90cmFuc2xhdGlvbj4="
translation['26.26d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNmQiIHVuaXQ9InNlY3Rpb24iIC8+RG8gSSBub3QgZXZlbiBiZWxpZXZlIHRoYXQgdGhlIHN1biBvciB5ZXQgdGhlIG1vb24gYXJlIGdvZHMsIGFzIHRoZSByZXN0IG9mIG1hbmtpbmQgZG8/ICDigJxObywgYnkgWmV1cywganVkZ2VzLCBzaW5jZSBoZSBzYXlzIHRoYXQgdGhlIHN1biBpcyBhIHN0b25lIGFuZCB0aGUgbW9vbiBlYXJ0aC7igJ0gIERvIHlvdSB0aGluayB5b3UgYXJlIGFjY3VzaW5nIEFuYXhhZ29yYXMsIG15IGRlYXIgTWVsZXR1cywgYW5kIGRvIHlvdSBzbyBkZXNwaXNlIHRoZXNlIGdlbnRsZW1lbiBhbmQgdGhpbmsgdGhleSBhcmUgc28gdW52ZXJzZWQgaW4gbGV0dGVycyBhcyBub3QgdG8ga25vdywgdGhhdCB0aGUgYm9va3Mgb2YgQW5heGFnb3JhcyB0aGUgQ2xhem9tZW5pYW4gYXJlIGZ1bGwgb2Ygc3VjaCB1dHRlcmFuY2VzPyAgQW5kIGZvcnNvb3RoIHRoZSB5b3V0aCBsZWFybiB0aGVzZSBkb2N0cmluZXMgZnJvbSBtZSwgd2hpY2ggdGhleSBjYW4gYnV5IHNvbWV0aW1lcwo8L3RyYW5zbGF0aW9uPg=="
translation['26.26e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNmUiIHVuaXQ9InNlY3Rpb24iIC8+KGlmIHRoZSBwcmljZSBpcyBoaWdoKSBmb3IgYSBkcmFjaG1hIGluIHRoZSBvcmNoZXN0cmEgYW5kIGxhdWdoIGF0IFNvY3JhdGVzLCBpZiBoZSBwcmV0ZW5kcyB0aGV5IGFyZSBoaXMgb3duLCBlc3BlY2lhbGx5IHdoZW4gdGhleSBhcmUgc28gYWJzdXJkISAgQnV0IGZvciBoZWF2ZW4ncyBzYWtlLCBkbyB5b3UgdGhpbmsgdGhpcyBvZiBtZSwgdGhhdCBJIGRvIG5vdCBiZWxpZXZlIHRoZXJlIGlzIGFueSBnb2Q/ICDigJxObywgYnkgWmV1cywgeW91IGRvbid0LCBub3QgaW4gdGhlIGxlYXN0LuKAnSAgWW91IGNhbm5vdCBiZSBiZWxpZXZlZCwgTWVsZXR1cywgbm90IGV2ZW4sIGFzIGl0IHNlZW1zIHRvIG1lLCBieSB5b3Vyc2VsZi4gIEZvciB0aGlzIG1hbiBhcHBlYXJzIHRvIG1lLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB0byBiZSB2ZXJ5IHZpb2xlbnQgYW5kIHVucmVzdHJhaW5lZCwgYW5kIGFjdHVhbGx5IHRvIGhhdmUgYnJvdWdodCB0aGlzIGluZGljdG1lbnQgaW4gYSBzcGlyaXQgb2YgdmlvbGVuY2UgYW5kIHVucmVzdHJhaW50IGFuZCByYXNobmVzcy4gIEZvciBoZSBzZWVtcywKPC90cmFuc2xhdGlvbj4="
translation['27.27a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyNyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjdhIiB1bml0PSJzZWN0aW9uIiAvPmFzIGl0IHdlcmUsIGJ5IGNvbXBvc2luZyBhIHB1enpsZSB0byBiZSBtYWtpbmcgYSB0ZXN0OiAg4oCcV2lsbCBTb2NyYXRlcywgdGhlIHdpc2UgbWFuLCByZWNvZ25pemUgdGhhdCBJIGFtIGpva2luZyBhbmQgY29udHJhZGljdGluZyBteXNlbGYsIG9yIHNoYWxsIEkgZGVjZWl2ZSBoaW0gYW5kIHRoZSBvdGhlcnMgd2hvIGhlYXIgbWU/4oCdICBGb3IgaGUgYXBwZWFycyB0byBtZSB0byBjb250cmFkaWN0IGhpbXNlbGYgaW4gaGlzIHNwZWVjaCwgYXMgaWYgaGUgd2VyZSB0byBzYXksIOKAnFNvY3JhdGVzIGlzIGEgd3Jvbmdkb2VyLCBiZWNhdXNlIGhlIGRvZXMgbm90IGJlbGlldmUgaW4gZ29kcywgYnV0IGRvZXMgYmVsaWV2ZSBpbiBnb2RzLuKAnSAgQW5kIHlldCB0aGlzIGlzIHRoZSBjb25kdWN0IG9mIGEgamVzdGVyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Kb2luIG1lLCB0aGVuLCBnZW50bGVtZW4sIGluIGV4YW1pbmluZyBob3cgaGUgYXBwZWFycyB0byBtZSB0byBzYXkgdGhpczsgIGFuZCBkbyB5b3UsIE1lbGV0dXMsIGFuc3dlcjsgCjwvdHJhbnNsYXRpb24+"
translation['27.27b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyN2IiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHlvdSwgZ2VudGxlbWVuLCBhcyBJIGFza2VkIHlvdSBpbiB0aGUgYmVnaW5uaW5nLCBwbGVhc2UgYmVhciBpbiBtaW5kIG5vdCB0byBtYWtlIGEgZGlzdHVyYmFuY2UgaWYgSSBjb25kdWN0IG15IGFyZ3VtZW50IGluIG15IGFjY3VzdG9tZWQgbWFubmVyLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JcyB0aGVyZSBhbnkgaHVtYW4gYmVpbmcgd2hvIGJlbGlldmVzIHRoYXQgdGhlcmUgYXJlIHRoaW5ncyBwZXJ0YWluaW5nIHRvIGh1bWFuIGJlaW5ncywgYnV0IG5vIGh1bWFuIGJlaW5ncz8gIExldCBoaW0gYW5zd2VyLCBnZW50bGVtZW4sIGFuZCBub3QgbWFrZSBhIGRpc3R1cmJhbmNlIGluIG9uZSB3YXkgb3IgYW5vdGhlci4gIElzIHRoZXJlIGFueW9uZSB3aG8gZG9lcyBub3QgYmVsaWV2ZSBpbiBob3JzZXMsIGJ1dCBkb2VzIGJlbGlldmUgaW4gdGhpbmdzIHBlcnRhaW5pbmcgdG8gaG9yc2VzPyAgb3Igd2hvIGRvZXMgbm90IGJlbGlldmUgdGhhdCBmbHV0ZS1wbGF5ZXJzIGV4aXN0LCBidXQgdGhhdCB0aGluZ3MgcGVydGFpbmluZyB0byBmbHV0ZS1wbGF5ZXJzIGRvPyAgVGhlcmUgaXMgbm90LCBiZXN0IG9mIG1lbjsgIGlmIHlvdSBkbyBub3Qgd2lzaCB0byBhbnN3ZXIsIEkgc2F5IGl0IHRvIHlvdSBhbmQgdGhlc2Ugb3RoZXJzIGhlcmUuICBCdXQgYW5zd2VyIGF0IGxlYXN0CjwvdHJhbnNsYXRpb24+"
translation['27.27c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyN2MiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIG5leHQgcXVlc3Rpb24uICBJcyB0aGVyZSBhbnlvbmUgd2hvIGJlbGlldmVzIHNwaXJpdHVhbCB0aGluZ3MgZXhpc3QsIGJ1dCBkb2VzIG5vdCBiZWxpZXZlIGluIHNwaXJpdHM/ICDigJxUaGVyZSBpcyBub3Qu4oCdICBUaGFuayB5b3UgZm9yIHJlcGx5aW5nIHJlbHVjdGFudGx5IHdoZW4gZm9yY2VkIGJ5IHRoZXNlIGdlbnRsZW1lbi4gIFRoZW4geW91IHNheSB0aGF0IEkgYmVsaWV2ZSBpbiBzcGlyaXR1YWwgYmVpbmdzLCB3aGV0aGVyIG5ldyBvciBvbGQsIGFuZCB0ZWFjaCB0aGF0IGJlbGllZjsgIGJ1dCB0aGVuIEkgYmVsaWV2ZSBpbiBzcGlyaXR1YWwgYmVpbmdzIGF0IGFueSByYXRlLCBhY2NvcmRpbmcgdG8geW91ciBzdGF0ZW1lbnQsIGFuZCB5b3Ugc3dvcmUgdG8gdGhhdCBpbiB5b3VyIGluZGljdG1lbnQuICBCdXQgaWYgSSBiZWxpZXZlIGluIHNwaXJpdHVhbCBiZWluZ3MsIGl0IGlzIHF1aXRlIGluZXZpdGFibGUgdGhhdCBJIGJlbGlldmUgYWxzbyBpbiBzcGlyaXRzOyAgaXMgaXQgbm90IHNvPyAgSXQgaXM7ICBmb3IgSSBhc3N1bWUgdGhhdCB5b3UgYWdyZWUsIHNpbmNlIHlvdSBkbyBub3QgYW5zd2VyLiAgQnV0IGRvIHdlIG5vdCB0aGluayB0aGUgc3Bpcml0cyBhcmUKPC90cmFuc2xhdGlvbj4="
translation['27.27d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyN2QiIHVuaXQ9InNlY3Rpb24iIC8+Z29kcyBvciBjaGlsZHJlbiBvZiBnb2RzPyAgWWVzLCBvciBubz8gIOKAnENlcnRhaW5seS7igJ0gIFRoZW4gaWYgSSBiZWxpZXZlIGluIHNwaXJpdHMsIGFzIHlvdSBzYXksIGlmIHNwaXJpdHMgYXJlIGEga2luZCBvZiBnb2RzLCB0aGF0IHdvdWxkIGJlIHRoZSBwdXp6bGUgYW5kIGpva2Ugd2hpY2ggSSBzYXkgeW91IGFyZSB1dHRlcmluZyBpbiBzYXlpbmcgdGhhdCBJLCB3aGlsZSBJIGRvIG5vdCBiZWxpZXZlIGluIGdvZHMsIGRvIGJlbGlldmUgSW4gZ29kcyBhZ2Fpbiwgc2luY2UgSSBiZWxpZXZlIGluIHNwaXJpdHM7ICBidXQgaWYsIG9uIHRoZSBvdGhlciBoYW5kLCBzcGlyaXRzIGFyZSBhIGtpbmQgb2YgYmFzdGFyZCBjaGlsZHJlbiBvZiBnb2RzLCBieSBueW1waHMgb3IgYnkgYW55IG90aGVycywgd2hvZXZlciB0aGVpciBtb3RoZXJzIGFyZSBzYWlkIHRvIGJlLCB3aGF0IG1hbiB3b3VsZCBiZWxpZXZlIHRoYXQgdGhlcmUgYXJlIGNoaWxkcmVuIG9mIGdvZHMsIGJ1dCBubyBnb2RzPyAgSXQgd291bGQgYmUganVzdCBhcyBhYnN1cmQKPC90cmFuc2xhdGlvbj4="
translation['27.27e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyN2UiIHVuaXQ9InNlY3Rpb24iIC8+YXMgaWYgb25lIHdlcmUgdG8gYmVsaWV2ZSB0aGF0IHRoZXJlIGFyZSBjaGlsZHJlbiBvZiBob3JzZXMgYW5kIGFzc2VzLCBuYW1lbHkgbXVsZXMsIGJ1dCBubyBob3JzZXMgYW5kIGFzc2VzLiAgQnV0LCBNZWxldHVzLCB5b3UgY2VydGFpbmx5IG11c3QgaGF2ZSBicm91Z2h0IHRoaXMgc3VpdCBlaXRoZXIgdG8gbWFrZSBhIHRlc3Qgb2YgdXMgb3IgYmVjYXVzZSB5b3Ugd2VyZSBsb3NzIGFzIHRvIHdoYXQgdHJ1ZSB3cm9uZ2RvaW5nIHlvdSBjb3VsZCBhY2N1c2UgbWUgb2Y7ICBidXQgdGhlcmUgaXMgbm8gd2F5IGZvciB5b3UgdG8gcGVyc3VhZGUgYW55IG1hbiB3aG8gaGFzIGV2ZW4gYSBsaXR0bGUgc2Vuc2UgdGhhdCBpdCBpcyBwb3NzaWJsZSBmb3IgdGhlIHNhbWUgcGVyc29uIHRvIGJlbGlldmUgaW4gc3Bpcml0dWFsIGFuZCBkaXZpbmUgZXhpc3RlbmNlcyBhbmQgYWdhaW4gZm9yIHRoZSBzYW1lIHBlcnNvbiBub3QgdG8gYmVsaWV2ZSBpbiBzcGlyaXRzIG9yIGdvZHMgb3IKPC90cmFuc2xhdGlvbj4="
translation['28.28a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjhhIiB1bml0PSJzZWN0aW9uIiAvPmhlcm9lcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2VsbCB0aGVuLCBtZW4gb2YgQXRoZW5zLCB0aGF0IEkgYW0gbm90IGEgd3Jvbmdkb2VyIGFjY29yZGluZyB0byBNZWxldHVzJ3MgaW5kaWN0bWVudCwgc2VlbXMgdG8gbWUgbm90IHRvIG5lZWQgbXVjaCBvZiBhIGRlZmVuY2UsIGJ1dCB3aGF0IGhhcyBiZWVuIHNhaWQgaXMgZW5vdWdoLiAgQnV0IHlvdSBtYXkgYmUgYXNzdXJlZCB0aGF0IHdoYXQgSSBzYWlkIGJlZm9yZSBpcyB0cnVlLCB0aGF0IGdyZWF0IGhhdHJlZCBoYXMgYXJpc2VuIGFnYWluc3QgbWUgYW5kIGluIHRoZSBtaW5kcyBvZiBtYW55IHBlcnNvbnMuICBBbmQgdGhpcyBpdCBpcyB3aGljaCB3aWxsIGNhdXNlIG15IGNvbmRlbW5hdGlvbiwgaWYgaXQgaXMgdG8gY2F1c2UgaXQsIG5vdCBNZWxldHVzIG9yIEFueXR1cywgYnV0IHRoZSBwcmVqdWRpY2UgYW5kIGRpc2xpa2Ugb2YgdGhlIG1hbnkuICBUaGlzIGhhcyBjb25kZW1uZWQgbWFueSBvdGhlciBnb29kIG1lbiwgYW5kIEkgdGhpbmsgd2lsbCBkbyBzbzsgCjwvdHJhbnNsYXRpb24+"
translation['28.28b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOGIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoZXJlIGlzIG5vIGRhbmdlciB0aGF0IGl0IHdpbGwgc3RvcCB3aXRoIG1lLiAgQnV0IHBlcmhhcHMgc29tZW9uZSBtaWdodCBzYXk6ICDigJxBcmUgeW91IHRoZW4gbm90IGFzaGFtZWQsIFNvY3JhdGVzLCBvZiBoYXZpbmcgZm9sbG93ZWQgc3VjaCBhIHB1cnN1aXQsIHRoYXQgeW91IGFyZSBub3cgaW4gZGFuZ2VyIG9mIGJlaW5nIHB1dCB0byBkZWF0aCBhcyBhIHJlc3VsdD/igJ0gIEJ1dCBJIHNob3VsZCBtYWtlIHRvIGhpbSBhIGp1c3QgcmVwbHk6ICDigJxZb3UgZG8gbm90IHNwZWFrIHdlbGwsIFNpciwgaWYgeW91IHRoaW5rIGEgbWFuIGluIHdob20gdGhlcmUgaXMgZXZlbiBhIGxpdHRsZSBtZXJpdCBvdWdodCB0byBjb25zaWRlciBkYW5nZXIgb2YgbGlmZSBvciBkZWF0aCwgYW5kIG5vdCByYXRoZXIgcmVnYXJkIHRoaXMgb25seSwgd2hlbiBoZSBkb2VzIHRoaW5ncywgd2hldGhlciB0aGUgdGhpbmdzIGhlIGRvZXMgYXJlIHJpZ2h0IG9yIHdyb25nIGFuZCB0aGUgYWN0cyBvZiBhIGdvb2Qgb3IgYSBiYWQgbWFuLiAgRm9yIGFjY29yZGluZyB0byB5b3VyIGFyZ3VtZW50IGFsbCB0aGUgZGVtaWdvZHMKICAgIDwvdHJhbnNsYXRpb24+"
translation['28.28c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOGMiIHVuaXQ9InNlY3Rpb24iIC8+d291bGQgYmUgYmFkIHdobyBkaWVkIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJveSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVHJveSI+VHJveTwvcGxhY2VOYW1lPiwgaW5jbHVkaW5nIHRoZSBzb24gb2YgVGhldGlzLCB3aG8gc28gZGVzcGlzZWQgZGFuZ2VyLCBpbiBjb21wYXJpc29uIHdpdGggZW5kdXJpbmcgYW55IGRpc2dyYWNlLCB0aGF0IHdoZW4gaGlzIG1vdGhlciAoYW5kIHNoZSB3YXMgYSBnb2RkZXNzKSBzYWlkIHRvIGhpbSwgYXMgaGUgd2FzIGVhZ2VyIHRvIHNsYXkgSGVjdG9yLCBzb21ldGhpbmcgbGlrZSB0aGlzLCBJIGJlbGlldmUsIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj48bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPk15IHNvbiwgaWYgeW91IGF2ZW5nZSB0aGUgZGVhdGggb2YgeW91ciBmcmllbmQgUGF0cm9jbHVzIGFuZCBraWxsIEhlY3RvciwgeW91IHlvdXJzZWxmIHNoYWxsIGRpZTs8L2w+PGwgY2xhc3M9InRyYW5zbGF0aW9uIj5mb3Igc3RyYWlnaHR3YXksIGFmdGVyIEhlY3RvciwgaXMgZGVhdGggYXBwb2ludGVkIHVudG8geW91OzwvbD48L3F1b3RlPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+TXkgc29uLCBpZiB5b3UgYXZlbmdlIHRoZSBkZWF0aCBvZiB5b3VyIGZyaWVuZCBQYXRyb2NsdXMgYW5kIGtpbGwgSGVjdG9yLCB5b3UgeW91cnNlbGYgc2hhbGwgZGllOzwvbD48bCBjbGFzcz0idHJhbnNsYXRpb24iPmZvciBzdHJhaWdodHdheSwgYWZ0ZXIgSGVjdG9yLCBpcyBkZWF0aCBhcHBvaW50ZWQgdW50byB5b3U7PC9sPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiAxOC45NiIgdmFsaWQ9InllcyI+SG9tLiBJbC4gMTguOTY8L2JpYmw+Ljwvbm90ZT5oZSwgd2hlbiBoZSBoZWFyZCB0aGlzLCBtYWRlIGxpZ2h0IG9mIGRlYXRoIGFuZCBkYW5nZXIsCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDE4Ljk2IiB2YWxpZD0ieWVzIj5Ib20uIElsLiAxOC45NjwvYmlibD4uPC90cmFuc2xhdGlvbj4="
translation['28.28d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOGQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGZlYXJlZCBtdWNoIG1vcmUgdG8gbGl2ZSBhcyBhIGNvd2FyZCBhbmQgbm90IHRvIGF2ZW5nZSBoaXMgZnJpZW5kcywgYW5kIHNhaWQsIDxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj5TdHJhaWdodHdheSBtYXkgSSBkaWUsIGFmdGVyIGRvaW5nIHZlbmdlYW5jZSB1cG9uIHRoZSB3cm9uZ2RvZXIsIHRoYXQgSSBtYXkgbm90IHN0YXkgaGVyZSwgamVlcmVkIGF0IGJlc2lkZSB0aGUgY3VydmVkIHNoaXBzLCBhIGJ1cmRlbiBvZiB0aGUgZWFydGguPC9xdW90ZT4uIERvIHlvdSB0aGluayBoZSBjb25zaWRlcmVkIGRlYXRoIGFuZCBkYW5nZXI/PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkZvciB0aHVzIGl0IGlzLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBpbiB0cnV0aDsgIHdoZXJldmVyIGEgbWFuIHN0YXRpb25zIGhpbXNlbGYsIHRoaW5raW5nIGl0IGlzIGJlc3QgdG8gYmUgdGhlcmUsIG9yIGlzIHN0YXRpb25lZCBieSBoaXMgY29tbWFuZGVyLCB0aGVyZSBoZSBtdXN0LCBhcyBpdCBzZWVtcyB0byBtZSwgcmVtYWluIGFuZCBydW4gaGlzIHJpc2tzLCBjb25zaWRlcmluZyBuZWl0aGVyIGRlYXRoIG5vciBhbnkgb3RoZXIgdGhpbmcgbW9yZSB0aGFuIGRpc2dyYWNlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TbyBJIHNob3VsZCBoYXZlIGRvbmUgYSB0ZXJyaWJsZSB0aGluZywKPC90cmFuc2xhdGlvbj4="
translation['28.28e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOGUiIHVuaXQ9InNlY3Rpb24iIC8+aWYsIHdoZW4gdGhlIGNvbW1hbmRlcnMgd2hvbSB5b3UgY2hvc2UgdG8gY29tbWFuZCBtZSBzdGF0aW9uZWQgbWUsIGJvdGggYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDQ4MTQiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwNDgxNCI+UG90aWRhZWE8L3BsYWNlTmFtZT4gYW5kIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQW1waGlwb2xpcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQW1waGlwb2xpcyI+QW1waGlwb2xpczwvcGxhY2VOYW1lPiBhbmQgYXQgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDYwMDE3MDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNjAwMTcwMCI+RGVsaXVtPC9wbGFjZU5hbWU+LCBJIHJlbWFpbmVkIHdoZXJlIHRoZXkgc3RhdGlvbmVkIG1lLCBsaWtlIGFueWJvZHkgZWxzZSwgYW5kIHJhbiB0aGUgcmlzayBvZiBkZWF0aCwgYnV0IHdoZW4gdGhlIGdvZCBnYXZlIG1lIGEgc3RhdGlvbiwgYXMgSSBiZWxpZXZlZCBhbmQgdW5kZXJzdG9vZCwgd2l0aCBvcmRlcnMgdG8gc3BlbmQgbXkgbGlmZSBpbiBwaGlsb3NvcGh5IGFuZCBpbiBleGFtaW5pbmcgbXlzZWxmIGFuZCBvdGhlcnMsCjwvdHJhbnNsYXRpb24+"
translation['29.29a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMjlhIiB1bml0PSJzZWN0aW9uIiAvPnRoZW4gSSB3ZXJlIHRvIGRlc2VydCBteSBwb3N0IHRocm91Z2ggZmVhciBvZiBkZWF0aCBvciBhbnl0aGluZyBlbHNlIHdoYXRzb2V2ZXIuICBJdCB3b3VsZCBiZSBhIHRlcnJpYmxlIHRoaW5nLCBhbmQgdHJ1bHkgb25lIG1pZ2h0IHRoZW4ganVzdGx5IGhhbGUgbWUgaW50byBjb3VydCwgb24gdGhlIGNoYXJnZSB0aGF0IEkgZG8gbm90IGJlbGlldmUgdGhhdCB0aGVyZSBhcmUgZ29kcywgc2luY2UgSSBkaXNvYmV5IHRoZSBvcmFjbGUgYW5kIGZlYXIgZGVhdGggYW5kIHRoaW5rIEkgYW0gd2lzZSB3aGVuIEkgYW0gbm90LiAgRm9yIHRvIGZlYXIgZGVhdGgsIGdlbnRsZW1lbiwgaXMgbm90aGluZyBlbHNlIHRoYW4gdG8gdGhpbmsgb25lIGlzIHdpc2Ugd2hlbiBvbmUgaXMgbm90OyAgZm9yIGl0IGlzIHRoaW5raW5nIG9uZSBrbm93cyB3aGF0IG9uZSBkb2VzIG5vdCBrbm93LiAgRm9yIG5vIG9uZSBrbm93cyB3aGV0aGVyIGRlYXRoIGJlIG5vdCBldmVuIHRoZSBncmVhdGVzdCBvZiBhbGwgYmxlc3NpbmdzIHRvIG1hbiwgYnV0IHRoZXkgZmVhciBpdCBhcyBpZiB0aGV5IGtuZXcgdGhhdCBpdCBpcyB0aGUgZ3JlYXRlc3Qgb2YgZXZpbHMuIAo8L3RyYW5zbGF0aW9uPg=="
translation['29.29b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOWIiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIGlzIG5vdCB0aGlzIHRoZSBtb3N0IHJlcHJlaGVuc2libGUgZm9ybSBvZiBpZ25vcmFuY2UsIHRoYXQgb2YgdGhpbmtpbmcgb25lIGtub3dzIHdoYXQgb25lIGRvZXMgbm90IGtub3c/ICBQZXJoYXBzLCBnZW50bGVtZW4sIGluIHRoaXMgbWF0dGVyIGFsc28gSSBkaWZmZXIgZnJvbSBvdGhlciBtZW4gaW4gdGhpcyB3YXksIGFuZCBpZiBJIHdlcmUgdG8gc2F5IHRoYXQgSSBhbSB3aXNlciBpbiBhbnl0aGluZywgaXQgd291bGQgYmUgaW4gdGhpcywgdGhhdCBub3Qga25vd2luZyB2ZXJ5IG11Y2ggYWJvdXQgdGhlIG90aGVyIHdvcmxkLCBJIGRvIG5vdCB0aGluayBJIGtub3cuICBCdXQgSSBkbyBrbm93IHRoYXQgaXQgaXMgZXZpbCBhbmQgZGlzZ3JhY2VmdWwgdG8gZG8gd3JvbmcgYW5kIHRvIGRpc29iZXkgaGltIHdobyBpcyBiZXR0ZXIgdGhhbiBJLCB3aGV0aGVyIGhlIGJlIGdvZCBvciBtYW4uICBTbyBJIHNoYWxsIG5ldmVyIGZlYXIgb3IgYXZvaWQgdGhvc2UgdGhpbmdzIGNvbmNlcm5pbmcgd2hpY2ggSSBkbyBub3Qga25vdyB3aGV0aGVyIHRoZXkgYXJlIGdvb2Qgb3IgYmFkIHJhdGhlciB0aGFuIHRob3NlIHdoaWNoIEkga25vdyBhcmUgYmFkLiAgQW5kIHRoZXJlZm9yZSwgZXZlbiBpZgo8L3RyYW5zbGF0aW9uPg=="
translation['29.29c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOWMiIHVuaXQ9InNlY3Rpb24iIC8+eW91IGFjcXVpdCBtZSBub3cgYW5kIGFyZSBub3QgY29udmluY2VkIGJ5IEFueXR1cywgd2hvIHNhaWQgdGhhdCBlaXRoZXIgSSBvdWdodCBub3QgdG8gaGF2ZSBiZWVuIGJyb3VnaHQgdG8gdHJpYWwgYXQgYWxsLCBvciBzaW5jZSB3YXMgYnJvdWdodCB0byB0cmlhbCwgSSBtdXN0IGNlcnRhaW5seSBiZSBwdXQgdG8gZGVhdGgsIGFkZGluZyB0aGF0IGlmIEkgd2VyZSBhY3F1aXR0ZWQgeW91ciBzb25zIHdvdWxkIGFsbCBiZSB1dHRlcmx5IHJ1aW5lZCBieSBwcmFjdGljaW5nIHdoYXQgSSB0ZWFjaOKAlGlmIHlvdSBzaG91bGQgc2F5IHRvIG1lIGluIHJlcGx5IHRvIHRoaXM6ICDigJxTb2NyYXRlcywgdGhpcyB0aW1lIHdlIHdpbGwgbm90IGRvIGFzIEFueXR1cyBzYXlzLCBidXQgd2Ugd2lsbCBsZXQgeW91IGdvLCBvbiB0aGlzIGNvbmRpdGlvbiwgaG93ZXZlciwgdGhhdCB5b3Ugbm8gbG9uZ2VyIHNwZW5kIHlvdXIgdGltZSBpbiB0aGlzIGludmVzdGlnYXRpb24gb3IgaW4gcGhpbG9zb3BoeSwgYW5kIGlmIHlvdSBhcmUgY2F1Z2h0IGRvaW5nIHNvIGFnYWluIHlvdSBzaGFsbCBkaWXigJ07IAo8L3RyYW5zbGF0aW9uPg=="
translation['29.29d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOWQiIHVuaXQ9InNlY3Rpb24iIC8+aWYgeW91IHNob3VsZCBsZXQgbWUgZ28gb24gdGhpcyBjb25kaXRpb24gd2hpY2ggSSBoYXZlIG1lbnRpb25lZCwgSSBzaG91bGQgc2F5IHRvIHlvdSwg4oCcTWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgSSByZXNwZWN0IGFuZCBsb3ZlIHlvdSwgYnV0IEkgc2hhbGwgb2JleSB0aGUgZ29kIHJhdGhlciB0aGFuIHlvdSwgYW5kIHdoaWxlIEkgbGl2ZSBhbmQgYW0gYWJsZSB0byBjb250aW51ZSwgSSBzaGFsbCBuZXZlciBnaXZlIHVwIHBoaWxvc29waHkgb3Igc3RvcCBleGhvcnRpbmcgeW91IGFuZCBwb2ludGluZyBvdXQgdGhlIHRydXRoIHRvIGFueSBvbmUgb2YgeW91IHdob20gSSBtYXkgbWVldCwgc2F5aW5nIGluIG15IGFjY3VzdG9tZWQgd2F5OiAg4oCcTW9zdCBleGNlbGxlbnQgbWFuLCBhcmUgeW91IHdobyBhcmUgYSBjaXRpemVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhlIGdyZWF0ZXN0IG9mIGNpdGllcyBhbmQgdGhlIG1vc3QgZmFtb3VzIGZvciB3aXNkb20gYW5kIHBvd2VyLCBub3QgYXNoYW1lZCB0byBjYXJlIGZvciB0aGUgYWNxdWlzaXRpb24gb2Ygd2VhbHRoCjwvdHJhbnNsYXRpb24+"
translation['29.29e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyOWUiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGZvciByZXB1dGF0aW9uIGFuZCBob25vciwgd2hlbiB5b3UgbmVpdGhlciBjYXJlIG5vciB0YWtlIHRob3VnaHQgZm9yIHdpc2RvbSBhbmQgdHJ1dGggYW5kIHRoZSBwZXJmZWN0aW9uIG9mIHlvdXIgc291bD/igJ0gIEFuZCBpZiBhbnkgb2YgeW91IGFyZ3VlcyB0aGUgcG9pbnQsIGFuZCBzYXlzIGhlIGRvZXMgY2FyZSwgSSBzaGFsbCBub3QgbGV0IGhpbSBnbyBhdCBvbmNlLCBub3Igc2hhbGwgSSBnbyBhd2F5LCBidXQgSSBzaGFsbCBxdWVzdGlvbiBhbmQgZXhhbWluZSBhbmQgY3Jvc3MtZXhhbWluZSBoaW0sIGFuZCBpZiBJIGZpbmQgdGhhdCBoZSBkb2VzIG5vdCBwb3NzZXNzIHZpcnR1ZSwgYnV0IHNheXMgaGUgZG9lcywgSSBzaGFsbCByZWJ1a2UgaGltIGZvciBzY29ybmluZwo8L3RyYW5zbGF0aW9uPg=="
translation['30.30a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzBhIiB1bml0PSJzZWN0aW9uIiAvPnRoZSB0aGluZ3MgdGhhdCBhcmUgb2YgbW9zdCBpbXBvcnRhbmNlIGFuZCBjYXJpbmcgbW9yZSBmb3Igd2hhdCBpcyBvZiBsZXNzIHdvcnRoLiAgVGhpcyBJIHNoYWxsIGRvIHRvIHdob21ldmVyIEkgbWVldCwgeW91bmcgYW5kIG9sZCwgZm9yZWlnbmVyIGFuZCBjaXRpemVuLCBidXQgbW9zdCB0byB0aGUgY2l0aXplbnMsIGluYXNtdWNoIGFzIHlvdSBhcmUgbW9yZSBuZWFybHkgcmVsYXRlZCB0byBtZS4gIEZvciBrbm93IHRoYXQgdGhlIGdvZCBjb21tYW5kcyBtZSB0byBkbyB0aGlzLCBhbmQgSSBiZWxpZXZlIHRoYXQgbm8gZ3JlYXRlciBnb29kIGV2ZXIgY2FtZSB0byBwYXNzIGluIHRoZSBjaXR5IHRoYW4gbXkgc2VydmljZSB0byB0aGUgZ29kLiAgRm9yIEkgZ28gYWJvdXQgZG9pbmcgbm90aGluZyBlbHNlIHRoYW4gdXJnaW5nIHlvdSwgeW91bmcgYW5kIG9sZCwgbm90IHRvIGNhcmUgZm9yIHlvdXIgcGVyc29ucyBvciB5b3VyIHByb3BlcnR5CjwvdHJhbnNsYXRpb24+"
translation['30.30b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMGIiIHVuaXQ9InNlY3Rpb24iIC8+bW9yZSB0aGFuIGZvciB0aGUgcGVyZmVjdGlvbiBvZiB5b3VyIHNvdWxzLCBvciBldmVuIHNvIG11Y2g7ICBhbmQgSSB0ZWxsIHlvdSB0aGF0IHZpcnR1ZSBkb2VzIG5vdCBjb21lIGZyb20gbW9uZXksIGJ1dCBmcm9tIHZpcnR1ZSBjb21lcyBtb25leSBhbmQgYWxsIG90aGVyIGdvb2QgdGhpbmdzIHRvIG1hbiwgYm90aCB0byB0aGUgaW5kaXZpZHVhbCBhbmQgdG8gdGhlIHN0YXRlLiAgSWYgYnkgc2F5aW5nIHRoZXNlIHRoaW5ncyBJIGNvcnJ1cHQgdGhlIHlvdXRoLCB0aGVzZSB0aGluZ3MgbXVzdCBiZSBpbmp1cmlvdXM7ICBidXQgaWYgYW55b25lIGFzc2VydHMgdGhhdCBJIHNheSBvdGhlciB0aGluZ3MgdGhhbiB0aGVzZSwgaGUgc2F5cyB3aGF0IGlzIHVudHJ1ZS4gIFRoZXJlZm9yZSBJIHNheSB0byB5b3UsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIGVpdGhlciBkbyBhcyBBbnl0dXMgdGVsbHMgeW91LCBvciBub3QsIGFuZCBlaXRoZXIgYWNxdWl0IG1lLCBvciBub3QsIGtub3dpbmcgdGhhdCBJIHNoYWxsIG5vdCBjaGFuZ2UgbXkgY29uZHVjdCBldmVuIGlmIEkgYW0KPC90cmFuc2xhdGlvbj4="
translation['30.30c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMGMiIHVuaXQ9InNlY3Rpb24iIC8+dG8gZGllIG1hbnkgdGltZXMgb3Zlci48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+RG8gbm90IG1ha2UgYSBkaXN0dXJiYW5jZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPjsgIGNvbnRpbnVlIHRvIGRvIHdoYXQgSSBhc2tlZCBvZiB5b3UsIG5vdCB0byBpbnRlcnJ1cHQgbXkgc3BlZWNoIGJ5IGRpc3R1cmJhbmNlcywgYnV0IHRvIGhlYXIgbWU7ICBhbmQgSSBiZWxpZXZlIHlvdSB3aWxsIHByb2ZpdCBieSBoZWFyaW5nLiAgTm93IEkgYW0gZ29pbmcgdG8gc2F5IHNvbWUgdGhpbmdzIHRvIHlvdSBhdCB3aGljaCB5b3Ugd2lsbCBwZXJoYXBzIGNyeSBvdXQ7ICBidXQgZG8gbm90IGRvIHNvIGJ5IGFueSBtZWFucy4gIEZvciBrbm93IHRoYXQgaWYgeW91IGtpbGwgbWUsIEkgYmVpbmcgc3VjaCBhIG1hbiBhcyBJIHNheSBJIGFtLCB5b3Ugd2lsbCBub3QgaW5qdXJlIG1lIHNvIG11Y2ggYXMgeW91cnNlbHZlczsgIGZvciBuZWl0aGVyIE1lbGV0dXMgbm9yIEFueXR1cyBjb3VsZCBpbmp1cmUgbWU7IAo8L3RyYW5zbGF0aW9uPg=="
translation['30.30d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMGQiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCB3b3VsZCBiZSBpbXBvc3NpYmxlLCBmb3IgSSBiZWxpZXZlIGl0IGlzIG5vdCBHb2QncyB3aWxsIHRoYXQgYSBiZXR0ZXIgbWFuIGJlIGluanVyZWQgYnkgYSB3b3JzZS4gIEhlIG1pZ2h0LCBob3dldmVyLCBwZXJoYXBzIGtpbGwgbWUgb3IgYmFuaXNoIG1lIG9yIGRpc2ZyYW5jaGlzZSBtZTsgIGFuZCBwZXJoYXBzIGhlIHRoaW5rcyBoZSB3b3VsZCB0aHVzIGluZmxpY3QgZ3JlYXQgaW5qdXJpZXMgdXBvbiBtZSwgYW5kIG90aGVycyBtYXkgdGhpbmsgc28sIGJ1dCBJIGRvIG5vdDsgIEkgdGhpbmsgaGUgZG9lcyBoaW1zZWxmIGEgbXVjaCBncmVhdGVyIGluanVyeSBieSBkb2luZyB3aGF0IGhlIGlzIGRvaW5nIG5vd+KAlGtpbGxpbmcgYSBtYW4gdW5qdXN0bHkuICBBbmQgc28sIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIEkgYW0gbm93IG1ha2luZyBteSBkZWZlbmNlIG5vdCBmb3IgbXkgb3duIHNha2UsIGFzIG9uZSBtaWdodCBpbWFnaW5lLCBidXQgZmFyIG1vcmUgZm9yIHlvdXJzLCB0aGF0IHlvdSBtYXkgbm90IGJ5IGNvbmRlbW5pbmcgbWUgZXJyIGluIHlvdXIgdHJlYXRtZW50IG9mIHRoZSBnaWZ0IHRoZSBHb2QgZ2F2ZSB5b3UuIAo8L3RyYW5zbGF0aW9uPg=="
translation['30.30e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMGUiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIGlmIHlvdSBwdXQgbWUgdG8gZGVhdGgsIHlvdSB3aWxsIG5vdCBlYXNpbHkgZmluZCBhbm90aGVyLCB3aG8sIHRvIHVzZSBhIHJhdGhlciBhYnN1cmQgZmlndXJlLCBhdHRhY2hlcyBoaW1zZWxmIHRvIHRoZSBjaXR5IGFzIGEgZ2FkZmx5IHRvIGEgaG9yc2UsIHdoaWNoLCB0aG91Z2ggbGFyZ2UgYW5kIHdlbGwgYnJlZCwgaXMgc2x1Z2dpc2ggb24gYWNjb3VudCBvZiBoaXMgc2l6ZSBhbmQgbmVlZHMgdG8gYmUgYXJvdXNlZCBieSBzdGluZ2luZy4gIEkgdGhpbmsgdGhlIGdvZCBmYXN0ZW5lZCBtZSB1cG9uIHRoZSBjaXR5IGluIHNvbWUgc3VjaCBjYXBhY2l0eSwgYW5kIEkgZ28gYWJvdXQgYXJvdXNpbmcsCjwvdHJhbnNsYXRpb24+"
translation['31.31a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzFhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB1cmdpbmcgYW5kIHJlcHJvYWNoaW5nIGVhY2ggb25lIG9mIHlvdSwgY29uc3RhbnRseSBhbGlnaHRpbmcgdXBvbiB5b3UgZXZlcnl3aGVyZSB0aGUgd2hvbGUgZGF5IGxvbmcuICBTdWNoIGFub3RoZXIgaXMgbm90IGxpa2VseSB0byBjb21lIHRvIHlvdSwgZ2VudGxlbWVuOyAgYnV0IGlmIHlvdSB0YWtlIG15IGFkdmljZSwgeW91IHdpbGwgc3BhcmUgbWUuICBCdXQgeW91LCBwZXJoYXBzLCBtaWdodCBiZSBhbmdyeSwgbGlrZSBwZW9wbGUgYXdha2VuZWQgZnJvbSBhIG5hcCwgYW5kIG1pZ2h0IHNsYXAgbWUsIGFzIEFueXR1cyBhZHZpc2VzLCBhbmQgZWFzaWx5IGtpbGwgbWU7ICB0aGVuIHlvdSB3b3VsZCBwYXNzIHRoZSByZXN0IG9mIHlvdXIgbGl2ZXMgaW4gc2x1bWJlciwgdW5sZXNzIEdvZCwgaW4gaGlzIGNhcmUgZm9yIHlvdSwgc2hvdWxkIHNlbmQgc29tZW9uZSBlbHNlIHRvIHN0aW5nIHlvdS4gIEFuZCB0aGF0IEkgYW0sIGFzIEkgc2F5LCBhIGtpbmQgb2YgZ2lmdCBmcm9tIHRoZSBnb2QsCjwvdHJhbnNsYXRpb24+"
translation['31.31b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMWIiIHVuaXQ9InNlY3Rpb24iIC8+eW91IG1pZ2h0IHVuZGVyc3RhbmQgZnJvbSB0aGlzOyAgZm9yIEkgaGF2ZSBuZWdsZWN0ZWQgYWxsIG15IG93biBhZmZhaXJzIGFuZCBoYXZlIGJlZW4gZW5kdXJpbmcgdGhlIG5lZ2xlY3Qgb2YgbXkgY29uY2VybnMgYWxsIHRoZXNlIHllYXJzLCBidXQgSSBhbSBhbHdheXMgYnVzeSBpbiB5b3VyIGludGVyZXN0LCBjb21pbmcgdG8gZWFjaCBvbmUgb2YgeW91IGluZGl2aWR1YWxseSBsaWtlIGEgZmF0aGVyIG9yIGFuIGVsZGVyIGJyb3RoZXIgYW5kIHVyZ2luZyB5b3UgdG8gY2FyZSBmb3IgdmlydHVlOyAgbm93IHRoYXQgaXMgbm90IGxpa2UgaHVtYW4gY29uZHVjdC4gIElmIEkgZGVyaXZlZCBhbnkgcHJvZml0IGZyb20gdGhpcyBhbmQgcmVjZWl2ZWQgcGF5IGZvciB0aGVzZSBleGhvcnRhdGlvbnMsIHRoZXJlIHdvdWxkIGJlIHNvbWUgc2Vuc2UgaW4gaXQ7ICBidXQgbm93IHlvdSB5b3Vyc2VsdmVzIHNlZSB0aGF0IG15IGFjY3VzZXJzLCB0aG91Z2ggdGhleSBhY2N1c2UgbWUgb2YgZXZlcnl0aGluZyBlbHNlIGluIHN1Y2ggYSBzaGFtZWxlc3Mgd2F5LCBoYXZlIG5vdCBiZWVuIGFibGUgdG8gd29yayB0aGVtc2VsdmVzIHVwIHRvIHN1Y2ggYSBwaXRjaCBvZiBzaGFtZWxlc3NuZXNzCjwvdHJhbnNsYXRpb24+"
translation['31.31c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMWMiIHVuaXQ9InNlY3Rpb24iIC8+YXMgdG8gcHJvZHVjZSBhIHdpdG5lc3MgdG8gdGVzdGlmeSB0aGF0IEkgZXZlciBleGFjdGVkIG9yIGFza2VkIHBheSBvZiBhbnlvbmUuICBGb3IgSSB0aGluayBJIGhhdmUgYSBzdWZmaWNpZW50IHdpdG5lc3MgdGhhdCBJIHNwZWFrIHRoZSB0cnV0aCwgbmFtZWx5LCBteSBwb3ZlcnR5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5QZXJoYXBzIGl0IG1heSBzZWVtIHN0cmFuZ2UgdGhhdCBJIGdvIGFib3V0IGFuZCBpbnRlcmZlcmUgaW4gb3RoZXIgcGVvcGxlJ3MgYWZmYWlycyB0byBnaXZlIHRoaXMgYWR2aWNlIGluIHByaXZhdGUsIGJ1dCBkbyBub3QgdmVudHVyZSB0byBjb21lIGJlZm9yZSB5b3VyIGFzc2VtYmx5IGFuZCBhZHZpc2UgdGhlIHN0YXRlLiAgQnV0IHRoZSByZWFzb24gZm9yIHRoaXMsIGFzIHlvdSBoYXZlIGhlYXJkIG1lIHNheQo8L3RyYW5zbGF0aW9uPg=="
translation['31.31d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMWQiIHVuaXQ9InNlY3Rpb24iIC8+YXQgbWFueSB0aW1lcyBhbmQgcGxhY2VzLCBpcyB0aGF0IHNvbWV0aGluZyBkaXZpbmUgYW5kIHNwaXJpdHVhbCBjb21lcyB0byBtZSwgdGhlIHZlcnkgdGhpbmcgd2hpY2ggTWVsZXR1cyByaWRpY3VsZWQgaW4gaGlzIGluZGljdG1lbnQuICBJIGhhdmUgaGFkIHRoaXMgZnJvbSBteSBjaGlsZGhvb2Q7ICBpdCBpcyBhIHNvcnQgb2Ygdm9pY2UgdGhhdCBjb21lcyB0byBtZSwgYW5kIHdoZW4gaXQgY29tZXMgaXQgYWx3YXlzIGhvbGRzIG1lIGJhY2sgZnJvbSB3aGF0IEkgYW0gdGhpbmtpbmcgb2YgZG9pbmcsIGJ1dCBuZXZlciB1cmdlcyBtZSBmb3J3YXJkLiAgVGhpcyBpdCBpcyB3aGljaCBvcHBvc2VzIG15IGVuZ2FnaW5nIGluIHBvbGl0aWNzLiAgQW5kIEkgdGhpbmsgdGhpcyBvcHBvc2l0aW9uIGlzIGEgdmVyeSBnb29kIHRoaW5nOyAgZm9yIHlvdSBtYXkgYmUgcXVpdGUgc3VyZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhhdCBpZiBJIGhhZCB1bmRlcnRha2VuIHRvIGdvIGludG8gcG9saXRpY3MsIEkgc2hvdWxkIGhhdmUgYmVlbiBwdXQgdG8gZGVhdGggbG9uZyBhZ28gYW5kIHNob3VsZCBoYXZlIGRvbmUKPC90cmFuc2xhdGlvbj4="
translation['31.31e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMWUiIHVuaXQ9InNlY3Rpb24iIC8+bm8gZ29vZCB0byB5b3Ugb3IgdG8gbXlzZWxmLiAgQW5kIGRvIG5vdCBiZSBhbmdyeSB3aXRoIG1lIGZvciBzcGVha2luZyB0aGUgdHJ1dGg7ICB0aGUgZmFjdCBpcyB0aGF0IG5vIG1hbiB3aWxsIHNhdmUgaGlzIGxpZmUgd2hvIG5vYmx5IG9wcG9zZXMgeW91IG9yIGFueSBvdGhlciBwb3B1bGFjZSBhbmQgcHJldmVudHMgbWFueSB1bmp1c3QgYW5kIGlsbGVnYWwgdGhpbmdzIGZyb20gaGFwcGVuaW5nIGluIHRoZSBzdGF0ZS4gCjwvdHJhbnNsYXRpb24+"
translation['32.32a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzJhIiB1bml0PSJzZWN0aW9uIiAvPkEgbWFuIHdobyByZWFsbHkgZmlnaHRzIGZvciB0aGUgcmlnaHQsIGlmIGhlIGlzIHRvIHByZXNlcnZlIGhpcyBsaWZlIGZvciBldmVuIGEgbGl0dGxlIHdoaWxlLCBtdXN0IGJlIGEgcHJpdmF0ZSBjaXRpemVuLCBub3QgYSBwdWJsaWMgbWFuLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5JIHdpbGwgZ2l2ZSB5b3UgcG93ZXJmdWwgcHJvb2ZzIG9mIHRoaXMgbm90IG1lcmUgd29yZHMsIGJ1dCB3aGF0IHlvdSBob25vciBtb3JlLOKAlGFjdGlvbnMuICBBbmQgbGlzdGVuIHRvIHdoYXQgaGFwcGVuZWQgdG8gbWUsIHRoYXQgeW91IG1heSBiZSBjb252aW5jZWQgdGhhdCBJIHdvdWxkIG5ldmVyIHlpZWxkIHRvIGFueSBvbmUsIGlmIHRoYXQgd2FzIHdyb25nLCB0aHJvdWdoIGZlYXIgb2YgZGVhdGgsIGJ1dCB3b3VsZCBkaWUgcmF0aGVyIHRoYW4geWllbGQuICBUaGUgdGFsZSBJIGFtIGdvaW5nIHRvIHRlbGwgeW91IGlzIG9yZGluYXJ5IGFuZCBjb21tb25wbGFjZSwgYnV0IHRydWUuIAo8L3RyYW5zbGF0aW9uPg=="
translation['32.32b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMmIiIHVuaXQ9InNlY3Rpb24iIC8+SSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgbmV2ZXIgaGVsZCBhbnkgb3RoZXIgb2ZmaWNlIGluIHRoZSBzdGF0ZSwgYnV0IEkgd2FzIGEgc2VuYXRvcjsgIGFuZCBpdCBoYXBwZW5lZCB0aGF0IG15IHRyaWJlIGhlbGQgdGhlIHByZXNpZGVuY3kgd2hlbiB5b3Ugd2lzaGVkIHRvIGp1ZGdlIGNvbGxlY3RpdmVseSwgbm90IHNldmVyYWxseSwgdGhlIHRlbiBnZW5lcmFscyB3aG8gaGFkIGZhaWxlZCB0byBnYXRoZXIgdXAgdGhlIHNsYWluIGFmdGVyIHRoZSBuYXZhbCBiYXR0bGU7ICB0aGlzIHdhcyBpbGxlZ2FsLCBhcyB5b3UgYWxsIGFncmVlZCBhZnRlcndhcmRzLiAgQXQgdGhhdCB0aW1lIEkgd2FzIHRoZSBvbmx5IG9uZSBvZiB0aGUgcHJ5dGFuZXMgd2hvIG9wcG9zZWQgZG9pbmcgYW55dGhpbmcgY29udHJhcnkgdG8gdGhlIGxhd3MsIGFuZCBhbHRob3VnaCB0aGUgb3JhdG9ycyB3ZXJlIHJlYWR5IHRvIGltcGVhY2ggYW5kIGFycmVzdCBtZSwgYW5kIHRob3VnaCB5b3UgdXJnZWQgdGhlbSB3aXRoIHNob3V0cyB0byBkbyBzbywgSSB0aG91Z2h0CjwvdHJhbnNsYXRpb24+"
translation['32.32c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMmMiIHVuaXQ9InNlY3Rpb24iIC8+SSBtdXN0IHJ1biB0aGUgcmlzayB0byB0aGUgZW5kIHdpdGggbGF3IGFuZCBqdXN0aWNlIG9uIG15IHNpZGUsIHJhdGhlciB0aGFuIGpvaW4gd2l0aCB5b3Ugd2hlbiB5b3VyIHdpc2hlcyB3ZXJlIHVuanVzdCwgdGhyb3VnaCBmZWFyIG9mIGltcHJpc29ubWVudCBvciBkZWF0aC4gIFRoYXQgd2FzIHdoZW4gdGhlIGRlbW9jcmFjeSBzdGlsbCBleGlzdGVkOyAgYW5kIGFmdGVyIHRoZSBvbGlnYXJjaHkgd2FzIGVzdGFibGlzaGVkLCB0aGUgVGhpcnR5IHNlbnQgZm9yIG1lIHdpdGggZm91ciBvdGhlcnMgdG8gY29tZSB0byB0aGUgcm90dW5kYSBhbmQgb3JkZXJlZCB1cyB0byBicmluZyA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwOTEyMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA5MTIwIj5MZW9uPC9wbGFjZU5hbWU+IHRoZSBTYWxhbWluaWFuIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDIzNDAiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMjM0MCI+U2FsYW1pczwvcGxhY2VOYW1lPiB0byBiZSBwdXQgdG8gZGVhdGguICBUaGV5IGdhdmUgbWFueSBzdWNoIG9yZGVycyB0byBvdGhlcnMgYWxzbywgYmVjYXVzZSB0aGV5IHdpc2hlZCB0byBpbXBsaWNhdGUgYXMgbWFueSBpbiB0aGVpciBjcmltZXMgYXMgdGhleSBjb3VsZC4gIFRoZW4gSSwgaG93ZXZlciwKPC90cmFuc2xhdGlvbj4="
translation['32.32d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMmQiIHVuaXQ9InNlY3Rpb24iIC8+c2hvd2VkIGFnYWluLCBieSBhY3Rpb24sIG5vdCBpbiB3b3JkIG9ubHksIHRoYXQgSSBkaWQgbm90IGNhcmUgYSB3aGl0IGZvciBkZWF0aCBpZiB0aGF0IGJlIG5vdCB0b28gcnVkZSBhbiBleHByZXNzaW9uLCBidXQgdGhhdCBJIGRpZCBjYXJlIHdpdGggYWxsIG15IG1pZ2h0IG5vdCB0byBkbyBhbnl0aGluZyB1bmp1c3Qgb3IgdW5ob2x5LiAgRm9yIHRoYXQgZ292ZXJubWVudCwgd2l0aCBhbGwgaXRzIHBvd2VyLCBkaWQgbm90IGZyaWdodGVuIG1lIGludG8gZG9pbmcgYW55dGhpbmcgdW5qdXN0LCBidXQgd2hlbiB3ZSBjYW1lIG91dCBvZiB0aGUgcm90dW5kYSwgdGhlIG90aGVyIGZvdXIgd2VudCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMjM0MCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAyMzQwIj5TYWxhbWlzPC9wbGFjZU5hbWU+IGFuZCBhcnJlc3RlZCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwOTEyMCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDA5MTIwIj5MZW9uPC9wbGFjZU5hbWU+LCBidXQgSSBzaW1wbHkgd2VudCBob21lOyAgYW5kIHBlcmhhcHMgSSBzaG91bGQgaGF2ZSBiZWVuIHB1dCB0byBkZWF0aCBmb3IgaXQsIGlmIHRoZSBnb3Zlcm5tZW50IGhhZCBub3QKPC90cmFuc2xhdGlvbj4="
translation['32.32e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMmUiIHVuaXQ9InNlY3Rpb24iIC8+cXVpY2tseSBiZWVuIHB1dCBkb3duLiAgT2YgdGhlc2UgZmFjdHMgeW91IGNhbiBoYXZlIG1hbnkgd2l0bmVzc2VzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5EbyB5b3UgYmVsaWV2ZSB0aGF0IEkgY291bGQgaGF2ZSBsaXZlZCBzbyBtYW55IHllYXJzIGlmIEkgaGFkIGJlZW4gaW4gcHVibGljIGxpZmUgYW5kIGhhZCBhY3RlZCBhcyBhIGdvb2QgbWFuIHNob3VsZCBhY3QsIGxlbmRpbmcgbXkgYWlkIHRvIHdoYXQgaXMganVzdCBhbmQgY29uc2lkZXJpbmcgdGhhdCBvZiB0aGUgaGlnaGVzdCBpbXBvcnRhbmNlPyAgRmFyIGZyb20gaXQsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT47ICBub3IgY291bGQKPC90cmFuc2xhdGlvbj4="
translation['33.33a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzMyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzNhIiB1bml0PSJzZWN0aW9uIiAvPmFueSBvdGhlciBtYW4uICBCdXQgeW91IHdpbGwgZmluZCB0aGF0IHRocm91Z2ggYWxsIG15IGxpZmUsIGJvdGggaW4gcHVibGljLCBpZiBJIGVuZ2FnZWQgaW4gYW55IHB1YmxpYyBhY3Rpdml0eSwgYW5kIGluIHByaXZhdGUsIEkgaGF2ZSBhbHdheXMgYmVlbiB0aGUgc2FtZSBhcyBub3csIGFuZCBoYXZlIG5ldmVyIHlpZWxkZWQgdG8gYW55IG9uZSB3cm9uZ2x5LCB3aGV0aGVyIGl0IHdlcmUgYW55IG90aGVyIHBlcnNvbiBvciBhbnkgb2YgdGhvc2Ugd2hvIGFyZSBzYWlkIGJ5IG15IHRyYWR1Y2VycyB0byBiZSBteSBwdXBpbHMuICBCdXQgSSB3YXMgbmV2ZXIgYW55IG9uZSdzIHRlYWNoZXIuICBJZiBhbnkgb25lLCB3aGV0aGVyIHlvdW5nIG9yIG9sZCwgd2lzaGVzIHRvIGhlYXIgbWUgc3BlYWtpbmcgYW5kIHB1cnN1aW5nIG15IG1pc3Npb24sIEkgaGF2ZSBuZXZlciBvYmplY3RlZCwKPC90cmFuc2xhdGlvbj4="
translation['33.33b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzM2IiIHVuaXQ9InNlY3Rpb24iIC8+bm9yIGRvIEkgY29udmVyc2Ugb25seSB3aGVuIEkgYW0gcGFpZCBhbmQgbm90IG90aGVyd2lzZSwgYnV0IEkgb2ZmZXIgbXlzZWxmIGFsaWtlIHRvIHJpY2ggYW5kIHBvb3I7ICBJIGFzayBxdWVzdGlvbnMsIGFuZCB3aG9ldmVyIHdpc2hlcyBtYXkgYW5zd2VyIGFuZCBoZWFyIHdoYXQgSSBzYXkuICBBbmQgd2hldGhlciBhbnkgb2YgdGhlbSB0dXJucyBvdXQgd2VsbCBvciBpbGwsIEkgc2hvdWxkIG5vdCBqdXN0bHkgYmUgaGVsZCByZXNwb25zaWJsZSwgc2luY2UgSSBuZXZlciBwcm9taXNlZCBvciBnYXZlIGFueSBpbnN0cnVjdGlvbiB0byBhbnkgb2YgdGhlbTsgIGJ1dCBpZiBhbnkgbWFuIHNheXMgdGhhdCBoZSBldmVyIGxlYXJuZWQgb3IgaGVhcmQgYW55dGhpbmcgcHJpdmF0ZWx5IGZyb20gbWUsIHdoaWNoIGFsbCB0aGUgb3RoZXJzIGRpZCBub3QsIGJlIGFzc3VyZWQgdGhhdCBoZSBpcyBseWluZy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QnV0IHdoeSB0aGVuIGRvIHNvbWUgcGVvcGxlIGxvdmUKPC90cmFuc2xhdGlvbj4="
translation['33.33c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzM2MiIHVuaXQ9InNlY3Rpb24iIC8+dG8gc3BlbmQgbXVjaCBvZiB0aGVpciB0aW1lIHdpdGggbWU/ICBZb3UgaGF2ZSBoZWFyZCB0aGUgcmVhc29uLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+OyAgZm9yIEkgdG9sZCB5b3UgdGhlIHdob2xlIHRydXRoOyAgaXQgaXMgYmVjYXVzZSB0aGV5IGxpa2UgdG8gbGlzdGVuIHdoZW4gdGhvc2UgYXJlIGV4YW1pbmVkIHdobyB0aGluayB0aGV5IGFyZSB3aXNlIGFuZCBhcmUgbm90IHNvOyAgZm9yIGl0IGlzIGFtdXNpbmcuICBCdXQsIGFzIEkgYmVsaWV2ZSwgSSBoYXZlIGJlZW4gY29tbWFuZGVkIHRvIGRvIHRoaXMgYnkgdGhlIEdvZCB0aHJvdWdoIG9yYWNsZXMgYW5kIGRyZWFtcyBhbmQgaW4gZXZlcnkgd2F5IGluIHdoaWNoIGFueSBtYW4gd2FzIGV2ZXIgY29tbWFuZGVkIGJ5IGRpdmluZSBwb3dlciB0byBkbyBhbnl0aGluZyB3aGF0c29ldmVyLiAgVGhpcywgQXRoZW5pYW5zLCBpcyB0cnVlIGFuZCBlYXNpbHkgdGVzdGVkLiAgRm9yIGlmIEkgYW0gY29ycnVwdGluZyBzb21lIG9mIHRoZSB5b3VuZyBtZW4KPC90cmFuc2xhdGlvbj4="
translation['33.33d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzM2QiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGhhdmUgY29ycnVwdGVkIG90aGVycywgc3VyZWx5IHNvbWUgb2YgdGhlbSB3aG8gaGF2ZSBncm93biBvbGRlciwgaWYgdGhleSByZWNvZ25pemUgdGhhdCBJIGV2ZXIgZ2F2ZSB0aGVtIGFueSBiYWQgYWR2aWNlIHdoZW4gdGhleSB3ZXJlIHlvdW5nLCBvdWdodCBub3cgdG8gaGF2ZSBjb21lIGZvcndhcmQgdG8gYWNjdXNlIG1lLiAgT3IgaWYgdGhleSBkaWQgbm90IHdpc2ggdG8gZG8gaXQgdGhlbXNlbHZlcywgc29tZSBvZiB0aGVpciByZWxhdGl2ZXPigJRmYXRoZXJzIG9yIGJyb3RoZXJzIG9yIG90aGVyIGtpbnNmb2xr4oCUb3VnaHQgbm93IHRvIHRlbGwgdGhlIGZhY3RzLiAgQW5kIHRoZXJlIGFyZSBtYW55IG9mIHRoZW0gcHJlc2VudCwgd2hvbSBJIHNlZTsgIGZpcnN0IENyaXRvIGhlcmUsCjwvdHJhbnNsYXRpb24+"
translation['33.33e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzM2UiIHVuaXQ9InNlY3Rpb24iIC8+d2hvIGlzIG9mIG15IG93biBhZ2UgYW5kIG15IG93biBkZW1lIGFuZCBmYXRoZXIgb2YgQ3JpdG9idWx1cywgd2hvIGlzIGFsc28gcHJlc2VudDsgIHRoZW4gdGhlcmUgaXMgTHlzYW5pYXMgdGhlIFNwaGV0dGlhbiwgZmF0aGVyIG9mIEFlc2NoaW5lcywgd2hvIGlzIGhlcmU7ICBhbmQgYWxzbyBBbnRpcGhvbiBvZiBDZXBoaXN1cywgZmF0aGVyIG9mIEVwaWdlbmVzLiAgVGhlbiBoZXJlIGFyZSBvdGhlcnMgd2hvc2UgYnJvdGhlcnMgam9pbmVkIGluIG15IGNvbnZlcnNhdGlvbnMsIE5pY29zdHJhdHVzLCBzb24gb2YgVGhlb3pvdGlkZXMgYW5kIGJyb3RoZXIgb2YgVGhlb2RvdHVzIChub3cgVGhlb2RvdHVzIGlzIGRlYWQsIHNvIGhlIGNvdWxkIG5vdCBzdG9wIGhpbSBieSBlbnRyZWF0aWVzKSwgYW5kIFBhcmFsdXMsIHNvbiBvZiBEZW1vZG9jdXM7ICBUaGVhZ2VzIHdhcyBoaXMgYnJvdGhlcjsgIGFuZAo8L3RyYW5zbGF0aW9uPg=="
translation['34.34a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzRhIiB1bml0PSJzZWN0aW9uIiAvPkFkaW1hbnR1cywgc29uIG9mIEFyaXN0bywgd2hvc2UgYnJvdGhlciBpcyBQbGF0byBoZXJlOyAgYW5kIEFlYW50b2RvcnVzLCB3aG9zZSBicm90aGVyIEFwb2xsb2RvcnVzIGlzIHByZXNlbnQuICBBbmQgSSBjYW4gbWVudGlvbiB0byB5b3UgbWFueSBvdGhlcnMsIHNvbWUgb25lIG9mIHdob20gTWVsZXR1cyBvdWdodCBjZXJ0YWlubHkgdG8gaGF2ZSBwcm9kdWNlZCBhcyBhIHdpdG5lc3MgaW4gaGlzIHNwZWVjaDsgIGJ1dCBpZiBoZSBmb3Jnb3QgaXQgdGhlbiwgbGV0IGhpbSBkbyBzbyBub3c7ICBJIHlpZWxkIHRoZSBmbG9vciB0byBoaW0sIGFuZCBsZXQgaGltIHNheSwgaWYgaGUgaGFzIGFueSBzdWNoIHRlc3RpbW9ueS4gIEJ1dCB5b3Ugd2lsbCBmaW5kIHRoYXQgdGhlIGV4YWN0IG9wcG9zaXRlIGlzIHRoZSBjYXNlLCBnZW50bGVtZW4sIGFuZCB0aGF0IHRoZXkgYXJlIGFsbCByZWFkeSB0byBhaWQgbWUsIHRoZSBtYW4gd2hvIGNvcnJ1cHRzIGFuZCBpbmp1cmVzIHRoZWlyIHJlbGF0aXZlcywgYXMgTWVsZXR1cyBhbmQgQW55dHVzIHNheS4gCjwvdHJhbnNsYXRpb24+"
translation['34.34b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNGIiIHVuaXQ9InNlY3Rpb24iIC8+Tm93IHRob3NlIHdobyBhcmUgdGhlbXNlbHZlcyBjb3JydXB0ZWQgbWlnaHQgaGF2ZSBzb21lIG1vdGl2ZSBpbiBhaWRpbmcgbWU7ICBidXQgd2hhdCByZWFzb24gY291bGQgdGhlaXIgcmVsYXRpdmVzIGhhdmUsIHdobyBhcmUgbm90IGNvcnJ1cHRlZCBhbmQgYXJlIGFscmVhZHkgb2xkZXIgbWVuLCB1bmxlc3MgaXQgYmUgdGhlIHJpZ2h0IGFuZCB0cnVlIHJlYXNvbiwgdGhhdCB0aGV5IGtub3cgdGhhdCBNZWxldHVzIGlzIGx5aW5nIGFuZCBJIGFtIHNwZWFraW5nIHRoZSB0cnV0aD88bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2VsbCwgZ2VudGxlbWVuLCB0aGlzLCBhbmQgcGVyaGFwcyBtb3JlIGxpa2UgdGhpcywgaXMgYWJvdXQgYWxsIEkgaGF2ZSB0byBzYXkgaW4gbXkgZGVmZW5jZS4gIFBlcmhhcHMgc29tZSBvbmUgYW1vbmcgeW91IG1heSBiZSBvZmZlbmRlZAo8L3RyYW5zbGF0aW9uPg=="
translation['34.34c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNGMiIHVuaXQ9InNlY3Rpb24iIC8+d2hlbiBoZSByZW1lbWJlcnMgaGlzIG93biBjb25kdWN0LCBpZiBoZSwgZXZlbiBpbiBhIGNhc2Ugb2YgbGVzcyBpbXBvcnRhbmNlIHRoYW4gdGhpcywgYmVnZ2VkIGFuZCBiZXNvdWdodCB0aGUganVkZ2VzIHdpdGggbWFueSB0ZWFycywgYW5kIGJyb3VnaHQgZm9yd2FyZCBoaXMgY2hpbGRyZW4gdG8gYXJvdXNlIGNvbXBhc3Npb24sIGFuZCBtYW55IG90aGVyIGZyaWVuZHMgYW5kIHJlbGF0aXZlczsgIHdoZXJlYXMgSSB3aWxsIGRvIG5vbmUgb2YgdGhlc2UgdGhpbmdzLCB0aG91Z2ggSSBhbSwgYXBwYXJlbnRseSwgaW4gdGhlIHZlcnkgZ3JlYXRlc3QgZGFuZ2VyLiAgUGVyaGFwcyBzb21lIG9uZSB3aXRoIHRoZXNlIHRob3VnaHRzIGluIG1pbmQgbWF5IGJlIGhhcnNobHkgZGlzcG9zZWQgdG93YXJkIG1lIGFuZCBtYXkgY2FzdCBoaXMgdm90ZSBpbiBhbmdlci4gIE5vdyBpZiBhbnkgb25lIG9mIHlvdSBpcyBzbyBkaXNwb3NlZCAKICAgIDwvdHJhbnNsYXRpb24+"
translation['34.34d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNGQiIHVuaXQ9InNlY3Rpb24iIC8+4oCUSSBkbyBub3QgYmVsaWV2ZSB0aGVyZSBpcyBzdWNoIGEgcGVyc29u4oCUYnV0IGlmIHRoZXJlIHNob3VsZCBiZSwgSSB0aGluayBJIHNob3VsZCBiZSBzcGVha2luZyBmYWlybHkgaWYgSSBzYWlkIHRvIGhpbSwgTXkgZnJpZW5kLCBJIHRvbyBoYXZlIHJlbGF0aXZlcywgZm9yIEkgYW0sIGFzIEhvbWVyIGhhcyBpdCwgPHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+bm90IGJvcm4gb2YgYW4gb2FrIG9yIGEgcm9jayw8L2w+PC9xdW90ZT48bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPm5vdCBib3JuIG9mIGFuIG9hayBvciBhIHJvY2ssPC9sPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iTG9lYiIgcGxhY2U9InVuc3BlY2lmaWVkIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIE9kLiAxOS4xNjMiIHZhbGlkPSJ5ZXMiPkhvbS4gT2QuIDE5LjE2MzwvYmlibD4uPC9ub3RlPmJ1dCBvZiBodW1hbiBwYXJlbnRzLCBzbyB0aGF0IEkgaGF2ZSByZWxhdGl2ZXMgYW5kLCBtZW4gb2YgPGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyIgbj0iSG9tLiBPZC4gMTkuMTYzIiB2YWxpZD0ieWVzIj5Ib20uIE9kLiAxOS4xNjM8L2JpYmw+LjxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgSSBoYXZlIHRocmVlIHNvbnMsIG9uZSBuZWFybHkgZ3Jvd24gdXAsIGFuZCB0d28gc3RpbGwgY2hpbGRyZW47ICBidXQgbmV2ZXJ0aGVsZXNzIEkgc2hhbGwgbm90IGJyaW5nIGFueSBvZiB0aGVtIGhlcmUgYW5kIGJlZyB5b3UgdG8gYWNxdWl0IG1lLiAgQW5kIHdoeSBzaGFsbCBJIG5vdCBkbyBzbz8gIE5vdCBiZWNhdXNlIEkgYW0gc3R1YmJvcm4sIEF0aGVuaWFucywKPC90cmFuc2xhdGlvbj4="
translation['34.34e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNGUiIHVuaXQ9InNlY3Rpb24iIC8+b3IgbGFjayByZXNwZWN0IGZvciB5b3UuICBXaGV0aGVyIEkgZmVhciBkZWF0aCBvciBub3QgaXMgYW5vdGhlciBtYXR0ZXIsIGJ1dCBmb3IgdGhlIHNha2Ugb2YgbXkgZ29vZCBuYW1lIGFuZCB5b3VycyBhbmQgdGhhdCBvZiB0aGUgd2hvbGUgc3RhdGUsIEkgdGhpbmsgaXQgaXMgbm90IHJpZ2h0IGZvciBtZSB0byBkbyBhbnkgb2YgdGhlc2UgdGhpbmdzIGluIHZpZXcgb2YgbXkgYWdlIGFuZCBteSByZXB1dGF0aW9uLCB3aGV0aGVyIGRlc2VydmVkIG9yIG5vdDsgIGZvciBhdCBhbnkgcmF0ZSB0aGUgb3BpbmlvbiBwcmV2YWlscyB0aGF0IFNvY3JhdGVzCjwvdHJhbnNsYXRpb24+"
translation['35.35a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzVhIiB1bml0PSJzZWN0aW9uIiAvPmlzIGluIHNvbWUgd2F5IHN1cGVyaW9yIHRvIG1vc3QgbWVuLiAgSWYgdGhlbiB0aG9zZSBvZiB5b3Ugd2hvIGFyZSBzdXBwb3NlZCB0byBiZSBzdXBlcmlvciBlaXRoZXIgaW4gd2lzZG9tIG9yIGluIGNvdXJhZ2Ugb3IgaW4gYW55IG90aGVyIHZpcnR1ZSB3aGF0c29ldmVyIGFyZSB0byBiZWhhdmUgaW4gc3VjaCBhIHdheSwgaXQgd291bGQgYmUgZGlzZ3JhY2VmdWwuICBXaHksIEkgaGF2ZSBvZnRlbiBzZWVuIG1lbiB3aG8gaGF2ZSBzb21lIHJlcHV0YXRpb24gYmVoYXZpbmcgaW4gdGhlIHN0cmFuZ2VzdCBtYW5uZXIsIHdoZW4gdGhleSB3ZXJlIG9uIHRyaWFsLCBhcyBpZiB0aGV5IHRob3VnaHQgdGhleSB3ZXJlIGdvaW5nIHRvIHN1ZmZlciBzb21ldGhpbmcgdGVycmlibGUgaWYgdGhleSB3ZXJlIHB1dCB0byBkZWF0aCwganVzdCBhcyBpZiB0aGV5IHdvdWxkIGJlIGltbW9ydGFsIGlmIHlvdSBkaWQgbm90IGtpbGwgdGhlbS4gIEl0IHNlZW1zIHRvIG1lIHRoYXQgdGhleSBhcmUgYSBkaXNncmFjZSB0byB0aGUgc3RhdGUgYW5kIHRoYXQgYW55IHN0cmFuZ2VyIG1pZ2h0IHNheSB0aGF0IHRob3NlIG9mIHRoZSBBdGhlbmlhbnMgd2hvIGV4Y2VsCjwvdHJhbnNsYXRpb24+"
translation['35.35b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNWIiIHVuaXQ9InNlY3Rpb24iIC8+aW4gdmlydHVlLCBtZW4gd2hvbSB0aGV5IHRoZW1zZWx2ZXMgaG9ub3Igd2l0aCBvZmZpY2VzIGFuZCBvdGhlciBtYXJrcyBvZiBlc3RlZW0sIGFyZSBubyBiZXR0ZXIgdGhhbiB3b21lbi4gIFN1Y2ggYWN0cywgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgd2Ugd2hvIGhhdmUgYW55IHJlcHV0YXRpb24gYXQgYWxsIG91Z2h0IG5vdCB0byBjb21taXQsIGFuZCBpZiB3ZSBjb21taXQgdGhlbSB5b3Ugb3VnaHQgbm90IHRvIGFsbG93IGl0LCBidXQgeW91IHNob3VsZCBtYWtlIGl0IGNsZWFyIHRoYXQgeW91IHdpbGwgYmUgbXVjaCBtb3JlIHJlYWR5IHRvIGNvbmRlbW4gYSBtYW4gd2hvIHB1dHMgYmVmb3JlIHlvdSBzdWNoIHBpdGlhYmxlIHNjZW5lcyBhbmQgbWFrZXMgdGhlIGNpdHkgcmlkaWN1bG91cyB0aGFuIG9uZSB3aG8ga2VlcHMgcXVpZXQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBhcGFydCBmcm9tIHRoZSBxdWVzdGlvbiBvZiByZXB1dGF0aW9uLCBnZW50bGVtZW4sIEkgdGhpbmsgaXQgaXMgbm90IHJpZ2h0CjwvdHJhbnNsYXRpb24+"
translation['35.35c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNWMiIHVuaXQ9InNlY3Rpb24iIC8+dG8gaW1wbG9yZSB0aGUganVkZ2Ugb3IgdG8gZ2V0IGFjcXVpdHRlZCBieSBiZWdnaW5nOyAgd2Ugb3VnaHQgdG8gaW5mb3JtIGFuZCBjb252aW5jZSBoaW0uICBGb3IgdGhlIGp1ZGdlIGlzIG5vdCBoZXJlIHRvIGdyYW50IGZhdm9ycyBpbiBtYXR0ZXJzIG9mIGp1c3RpY2UsIGJ1dCB0byBnaXZlIGp1ZGdlbWVudDsgIGFuZCBoaXMgb2F0aCBiaW5kcyBoaW0gbm90IHRvIGRvIGZhdm9ycyBhY2NvcmRpbmcgdG8gaGlzIHBsZWFzdXJlLCBidXQgdG8ganVkZ2UgYWNjb3JkaW5nIHRvIHRoZSBsYXdzOyAgdGhlcmVmb3JlLCB3ZSBvdWdodCBub3QgdG8gZ2V0IHlvdSBpbnRvIHRoZSBoYWJpdCBvZiBicmVha2luZyB5b3VyIG9hdGhzLCBub3Igb3VnaHQgeW91IHRvIGZhbGwgaW50byB0aGF0IGhhYml0OyAgZm9yIG5laXRoZXIgb2YgdXMgd291bGQgYmUgYWN0aW5nIHBpb3VzbHkuICBEbyBub3QsIHRoZXJlZm9yZSwgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgZGVtYW5kIG9mIG1lIHRoYXQgSSBhY3QgYmVmb3JlIHlvdSBpbiBhIHdheSB3aGljaCBJIGNvbnNpZGVyIG5laXRoZXIgaG9ub3JhYmxlIG5vciByaWdodCBub3IgcGlvdXMsCjwvdHJhbnNsYXRpb24+"
translation['35.35d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNWQiIHVuaXQ9InNlY3Rpb24iIC8+ZXNwZWNpYWxseSB3aGVuIGltcGlldHkgaXMgdGhlIHZlcnkgdGhpbmcgZm9yIHdoaWNoIE1lbGV0dXMgaGVyZSBoYXMgYnJvdWdodCBtZSB0byB0cmlhbC4gIEZvciBpdCBpcyBwbGFpbiB0aGF0IGlmIGJ5IHBlcnN1YXNpb24gYW5kIHN1cHBsaWNhdGlvbiBJIGZvcmNlZCB5b3UgdG8gYnJlYWsgeW91ciBvYXRocyBJIHNob3VsZCB0ZWFjaCB5b3UgdG8gZGlzYmVsaWV2ZSBpbiB0aGUgZXhpc3RlbmNlIG9mIHRoZSBnb2RzIGFuZCBpbiBtYWtpbmcgbXkgZGVmZW5jZSBzaG91bGQgYWNjdXNlIG15c2VsZiBvZiBub3QgYmVsaWV2aW5nIGluIHRoZW0uICBCdXQgdGhhdCBpcyBmYXIgZnJvbSB0aGUgdHJ1dGg7ICBmb3IgSSBkbyBiZWxpZXZlIGluIHRoZW0sIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sIG1vcmUgdGhhbiBhbnkgb2YgbXkgYWNjdXNlcnMsIGFuZCBJIGVudHJ1c3QgbXkgY2FzZSB0byB5b3UgYW5kIHRvIEdvZCB0byBkZWNpZGUgaXQgYXMgc2hhbGwgYmUgYmVzdCBmb3IgbWUgYW5kIGZvciB5b3UuCjwvdHJhbnNsYXRpb24+"
translation['35.35e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJzcGVlY2giIC8+CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNWUiIHVuaXQ9InNlY3Rpb24iIC8+IEkgYW0gbm90IGdyaWV2ZWQsIG1lbiBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4sCjwvdHJhbnNsYXRpb24+"
translation['36.36a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzZhIiB1bml0PSJzZWN0aW9uIiAvPmF0IHRoaXMgdm90ZSBvZiBjb25kZW1uYXRpb24geW91IGhhdmUgY2FzdCBhZ2FpbnN0IG1lLCBhbmQgdGhhdCBmb3IgbWFueSByZWFzb25zLCBhbW9uZyB0aGVtIHRoZSBmYWN0IHRoYXQgeW91ciBkZWNpc2lvbiB3YXMgbm90IGEgc3VycHJpc2UgdG8gbWUuICBJIGFtIG11Y2ggbW9yZSBzdXJwcmlzZWQgYnkgdGhlIG51bWJlciBvZiB2b3RlcyBmb3IgYW5kIGFnYWluc3QgaXQ7ICBmb3IgSSBkaWQgbm90IGV4cGVjdCBzbyBzbWFsbCBhIG1ham9yaXR5LCBidXQgYSBsYXJnZSBvbmUuICBOb3csIGl0IHNlZW1zLCBpZiBvbmx5IHRoaXJ0eSB2b3RlcyBoYWQgYmVlbiBjYXN0IHRoZSBvdGhlciB3YXksIEkgc2hvdWxkIGhhdmUgYmVlbiBhY3F1aXR0ZWQuICBBbmQgc28sIEkgdGhpbmssIHNvIGZhciBhcyBNZWxldHVzIGlzIGNvbmNlcm5lZCwgSSBoYXZlIGV2ZW4gbm93IGJlZW4gYWNxdWl0dGVkLCBhbmQgbm90IG1lcmVseSBhY3F1aXR0ZWQsIGJ1dCBhbnlvbmUgY2FuIHNlZSB0aGF0LCBpZiBBbnl0dXMgYW5kIEx5Y29uIGhhZCBub3QgY29tZSBmb3J3YXJkIHRvIGFjY3VzZSBtZSwgaGUgd291bGQgaGF2ZSBiZWVuIGZpbmVkCjwvdHJhbnNsYXRpb24+"
translation['36.36b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNmIiIHVuaXQ9InNlY3Rpb24iIC8+YSB0aG91c2FuZCBkcmFjaG1hcyBmb3Igbm90IHJlY2VpdmluZyBhIGZpZnRoIHBhcnQgb2YgdGhlIHZvdGVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgc28gdGhlIG1hbiBwcm9wb3NlcyB0aGUgcGVuYWx0eSBvZiBkZWF0aC4gIFdlbGwsIHRoZW4sIHdoYXQgc2hhbGwgSSBwcm9wb3NlIGFzIGFuIGFsdGVybmF0aXZlPyAgQ2xlYXJseSB0aGF0IHdoaWNoIEkgZGVzZXJ2ZSwgc2hhbGwgSSBub3Q/ICBBbmQgd2hhdCBkbyBJIGRlc2VydmUgdG8gc3VmZmVyIG9yIHRvIHBheSwgYmVjYXVzZSBpbiBteSBsaWZlIEkgZGlkIG5vdCBrZWVwIHF1aWV0LCBidXQgbmVnbGVjdGluZyB3aGF0IG1vc3QgbWVuIGNhcmUgZm9y4oCUbW9uZXktbWFraW5nIGFuZCBwcm9wZXJ0eSwgYW5kIG1pbGl0YXJ5IG9mZmljZXMsIGFuZCBwdWJsaWMgc3BlYWtpbmcsIGFuZCB0aGUgdmFyaW91cyBvZmZpY2VzIGFuZCBwbG90cyBhbmQgcGFydGllcyB0aGF0IGNvbWUgdXAgaW4gdGhlIHN0YXRl4oCUYW5kIHRoaW5raW5nIHRoYXQgSSB3YXMgcmVhbGx5IHRvbyBob25vcmFibGUKPC90cmFuc2xhdGlvbj4="
translation['36.36c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNmMiIHVuaXQ9InNlY3Rpb24iIC8+dG8gZW5nYWdlIGluIHRob3NlIGFjdGl2aXRpZXMgYW5kIGxpdmUsIHJlZnJhaW5lZCBmcm9tIHRob3NlIHRoaW5ncyBieSB3aGljaCBJIHNob3VsZCBoYXZlIGJlZW4gb2Ygbm8gdXNlIHRvIHlvdSBvciB0byBteXNlbGYsIGFuZCBkZXZvdGVkIG15c2VsZiB0byBjb25mZXJyaW5nIHVwb24gZWFjaCBjaXRpemVuIGluZGl2aWR1YWxseSB3aGF0IEkgcmVnYXJkIGFzIHRoZSBncmVhdGVzdCBiZW5lZml0PyAgRm9yIEkgdHJpZWQgdG8gcGVyc3VhZGUgZWFjaCBvZiB5b3UgdG8gY2FyZSBmb3IgaGltc2VsZiBhbmQgaGlzIG93biBwZXJmZWN0aW9uIGluIGdvb2RuZXNzIGFuZCB3aXNkb20gcmF0aGVyIHRoYW4gZm9yIGFueSBvZiBoaXMgYmVsb25naW5ncywgYW5kIGZvciB0aGUgc3RhdGUgaXRzZWxmIHJhdGhlciB0aGFuIGZvciBpdHMgaW50ZXJlc3RzLCBhbmQgdG8gZm9sbG93IHRoZSBzYW1lIG1ldGhvZCBpbiBoaXMgY2FyZSBmb3Igb3RoZXIgdGhpbmdzLiAgV2hhdCwgdGhlbiwgZG9lcyBzdWNoIGEgbWFuIGFzIEkgZGVzZXJ2ZT8gCjwvdHJhbnNsYXRpb24+"
translation['36.36d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNmQiIHVuaXQ9InNlY3Rpb24iIC8+U29tZSBnb29kIHRoaW5nLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBpZiBJIG11c3QgcHJvcG9zZSBzb21ldGhpbmcgdHJ1bHkgaW4gYWNjb3JkYW5jZSB3aXRoIG15IGRlc2VydHM7ICBhbmQgdGhlIGdvb2QgdGhpbmcgc2hvdWxkIGJlIHN1Y2ggYXMgaXMgZml0dGluZyBmb3IgbWUuICBOb3cgd2hhdCBpcyBmaXR0aW5nIGZvciBhIHBvb3IgbWFuIHdobyBpcyB5b3VyIGJlbmVmYWN0b3IsIGFuZCB3aG8gbmVlZHMgbGVpc3VyZSB0byBleGhvcnQgeW91PyAgVGhlcmUgaXMgbm90aGluZywgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgc28gZml0dGluZyBhcyB0aGF0IHN1Y2ggYSBtYW4gYmUgZ2l2ZW4gaGlzIG1lYWxzIGluIHRoZSBwcnl0YW5ldW0uICBUaGF0IGlzIG11Y2ggbW9yZSBhcHByb3ByaWF0ZSBmb3IgbWUgdGhhbiBmb3IgYW55IG9mIHlvdSB3aG8gaGFzIHdvbiBhIHJhY2UgYXQgdGhlIE9seW1waWMgZ2FtZXMgd2l0aCBhIHBhaXIgb2YgaG9yc2VzIG9yIGEgZm91ci1pbi1oYW5kLiAgRm9yIGhlIG1ha2VzIHlvdSBzZWVtIHRvIGJlIGhhcHB5LCB3aGVyZWFzIEkgbWFrZSB5b3UgaGFwcHkgaW4gcmVhbGl0eTsgCjwvdHJhbnNsYXRpb24+"
translation['36.36e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNmUiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGhlIGlzIG5vdCBhdCBhbGwgaW4gbmVlZCBvZiBzdXN0ZW5hbmNlLCBidXQgSSBhbSBuZWVkeS4gIFNvIGlmIEkgbXVzdCBwcm9wb3NlIGEgcGVuYWx0eSBpbiBhY2NvcmRhbmNlIHdpdGggbXkgZGVzZXJ0cywKPC90cmFuc2xhdGlvbj4="
translation['37.37a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzNyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzdhIiB1bml0PSJzZWN0aW9uIiAvPkkgcHJvcG9zZSBtYWludGVuYW5jZSBpbiB0aGUgcHJ5dGFuZXVtLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5QZXJoYXBzIHNvbWUgb2YgeW91IHRoaW5rIHRoYXQgaW4gc2F5aW5nIHRoaXMsIGFzIGluIHdoYXQgSSBzYWlkIGFib3V0IGxhbWVudGluZyBhbmQgaW1wbG9yaW5nLCBJIGFtIHNwZWFraW5nIGluIGEgc3Bpcml0IG9mIGJyYXZhZG87ICBidXQgdGhhdCBpcyBub3QgdGhlIGNhc2UuICBUaGUgdHJ1dGggaXMgcmF0aGVyIHRoYXQgSSBhbSBjb252aW5jZWQgdGhhdCBJIG5ldmVyIGludGVudGlvbmFsbHkgd3JvbmdlZCBhbnlvbmU7ICBidXQgSSBjYW5ub3QgY29udmluY2UgeW91IG9mIHRoaXMsIGZvciB3ZSBoYXZlIGNvbnZlcnNlZCB3aXRoIGVhY2ggb3RoZXIgb25seSBhIGxpdHRsZSB3aGlsZS4gIEkgYmVsaWV2ZSBpZiB5b3UgaGFkIGEgbGF3LCBhcyBzb21lIG90aGVyIHBlb3BsZSBoYXZlLAo8L3RyYW5zbGF0aW9uPg=="
translation['37.37b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzN2IiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBjYXBpdGFsIGNhc2VzIHNob3VsZCBub3QgYmUgZGVjaWRlZCBpbiBvbmUgZGF5LCBidXQgb25seSBhZnRlciBzZXZlcmFsIGRheXMsIHlvdSB3b3VsZCBiZSBjb252aW5jZWQ7ICBidXQgbm93IGl0IGlzIG5vdCBlYXN5IHRvIHJpZCB5b3Ugb2YgZ3JlYXQgcHJlanVkaWNlcyBpbiBhIHNob3J0IHRpbWUuICBTaW5jZSwgdGhlbiwgSSBhbSBjb252aW5jZWQgdGhhdCBJIG5ldmVyIHdyb25nZWQgYW55IG9uZSwgSSBhbSBjZXJ0YWlubHkgbm90IGdvaW5nIHRvIHdyb25nIG15c2VsZiwgYW5kIHRvIHNheSBvZiBteXNlbGYgdGhhdCBJIGRlc2VydmUgYW55dGhpbmcgYmFkLCBhbmQgdG8gcHJvcG9zZSBhbnkgcGVuYWx0eSBvZiB0aGF0IHNvcnQgZm9yIG15c2VsZi4gIFdoeSBzaG91bGQgST8gIFRocm91Z2ggZmVhciBvZiB0aGUgcGVuYWx0eSB0aGF0IE1lbGV0dXMgcHJvcG9zZXMsIGFib3V0IHdoaWNoIEkgc2F5IHRoYXQgSSBkbyBub3Qga25vdyB3aGV0aGVyIGl0IGlzIGEgZ29vZCB0aGluZyBvciBhbiBldmlsPyAgU2hhbGwgSSBjaG9vc2UgaW5zdGVhZCBvZiB0aGF0IHNvbWV0aGluZyB3aGljaCBJIGtub3cgdG8gYmUgYW4gZXZpbD8gIFdoYXQgcGVuYWx0eSBzaGFsbCBJIHByb3Bvc2U/ICBJbXByaXNvbm1lbnQ/IAo8L3RyYW5zbGF0aW9uPg=="
translation['37.37c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzN2MiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIHdoeSBzaG91bGQgSSBsaXZlIGluIHByaXNvbiBhIHNsYXZlIHRvIHRob3NlIHdobyBtYXkgYmUgaW4gYXV0aG9yaXR5PyAgT3Igc2hhbGwgSSBwcm9wb3NlIGEgZmluZSwgd2l0aCBpbXByaXNvbm1lbnQgdW50aWwgaXQgaXMgcGFpZD8gIEJ1dCB0aGF0IGlzIHRoZSBzYW1lIGFzIHdoYXQgSSBzYWlkIGp1c3Qgbm93LCBmb3IgSSBoYXZlIG5vIG1vbmV5IHRvIHBheSB3aXRoLiAgU2hhbGwgSSB0aGVuIHByb3Bvc2UgZXhpbGUgYXMgbXkgcGVuYWx0eT8gIFBlcmhhcHMgeW91IHdvdWxkIGFjY2VwdCB0aGF0LiAgSSBtdXN0IGluZGVlZCBiZSBwb3NzZXNzZWQgYnkgYSBncmVhdCBsb3ZlIG9mIGxpZmUgaWYgSSBhbSBzbyBpcnJhdGlvbmFsIGFzIG5vdCB0byBrbm93IHRoYXQgaWYgeW91LCB3aG8gYXJlIG15IGZlbGxvdyBjaXRpemVucywgY291bGQgbm90CjwvdHJhbnNsYXRpb24+"
translation['37.37d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzN2QiIHVuaXQ9InNlY3Rpb24iIC8+ZW5kdXJlIG15IGNvbnZlcnNhdGlvbiBhbmQgbXkgd29yZHMsIGJ1dCBmb3VuZCB0aGVtIHRvbyBpcmtzb21lIGFuZCBkaXNhZ3JlZWFibGUsIHNvIHRoYXQgeW91IGFyZSBub3cgc2Vla2luZyB0byBiZSByaWQgb2YgdGhlbSwgb3RoZXJzIHdpbGwgbm90IGJlIHdpbGxpbmcgdG8gZW5kdXJlIHRoZW0uICBObywgbWVuIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsQXRoZW5zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxBdGhlbnMiPkF0aGVuczwvcGxhY2VOYW1lPiwgdGhleSBjZXJ0YWlubHkgd2lsbCBub3QuICBBIGZpbmUgbGlmZSBJIHNob3VsZCBsZWFkIGlmIEkgd2VudCBhd2F5IGF0IG15IHRpbWUgb2YgbGlmZSwgd2FuZGVyaW5nIGZyb20gY2l0eSB0byBjaXR5IGFuZCBhbHdheXMgYmVpbmcgZHJpdmVuIG91dCEgIEZvciB3ZWxsIEkga25vdyB0aGF0IHdoZXJldmVyIEkgZ28sIHRoZSB5b3VuZyBtZW4gd2lsbCBsaXN0ZW4gdG8gbXkgdGFsaywgYXMgdGhleSBkbyBoZXJlOyAgYW5kIGlmIEkgZHJpdmUgdGhlbSBhd2F5LCB0aGV5IHdpbGwgdGhlbXNlbHZlcyBwZXJzdWFkZSB0aGVpciBlbGRlcnMgdG8gZHJpdmUgbWUgb3V0LCBhbmQgaWYKPC90cmFuc2xhdGlvbj4="
translation['37.37e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzN2UiIHVuaXQ9InNlY3Rpb24iIC8+SSBkbyBub3QgZHJpdmUgdGhlbSBhd2F5LCB0aGVpciBmYXRoZXJzIGFuZCByZWxhdGl2ZXMgd2lsbCBkcml2ZSBtZSBvdXQgZm9yIHRoZWlyIHNha2VzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5QZXJoYXBzIHNvbWVvbmUgbWlnaHQgc2F5LCDigJxTb2NyYXRlcywgY2FuIHlvdSBub3QgZ28gYXdheSBmcm9tIHVzIGFuZCBsaXZlIHF1aWV0bHksIHdpdGhvdXQgdGFsa2luZz/igJ0gIE5vdyB0aGlzIGlzIHRoZSBoYXJkZXN0IHRoaW5nIHRvIG1ha2Ugc29tZSBvZiB5b3UgYmVsaWV2ZS4gIEZvciBpZiBJIHNheSB0aGF0IHN1Y2ggY29uZHVjdCB3b3VsZCBiZSBkaXNvYmVkaWVuY2UgdG8gdGhlIGdvZCBhbmQgdGhhdCB0aGVyZWZvcmUgSSBjYW5ub3Qga2VlcCBxdWlldCwgeW91IHdpbGwgdGhpbmsgSSBhbSBqZXN0aW5nIGFuZCB3aWxsIG5vdCBiZWxpZXZlIG1lOyAKPC90cmFuc2xhdGlvbj4="
translation['38.38a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzhhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBpZiBhZ2FpbiBJIHNheSB0aGF0IHRvIHRhbGsgZXZlcnkgZGF5IGFib3V0IHZpcnR1ZSBhbmQgdGhlIG90aGVyIHRoaW5ncyBhYm91dCB3aGljaCB5b3UgaGVhciBtZSB0YWxraW5nIGFuZCBleGFtaW5pbmcgbXlzZWxmIGFuZCBvdGhlcnMgaXMgdGhlIGdyZWF0ZXN0IGdvb2QgdG8gbWFuLCBhbmQgdGhhdCB0aGUgdW5leGFtaW5lZCBsaWZlIGlzIG5vdCB3b3J0aCBsaXZpbmcsIHlvdSB3aWxsIGJlbGlldmUgbWUgc3RpbGwgbGVzcy4gIFRoaXMgaXMgYXMgSSBzYXksIGdlbnRsZW1lbiwgYnV0IGl0IGlzIG5vdCBlYXN5IHRvIGNvbnZpbmNlIHlvdS4gIEJlc2lkZXMsIEkgYW0gbm90IGFjY3VzdG9tZWQgdG8gdGhpbmsgdGhhdCBJIGRlc2VydmUgYW55dGhpbmcgYmFkLiAgSWYgSSBoYWQgbW9uZXksIEkgd291bGQgaGF2ZSBwcm9wb3NlZCBhIGZpbmUsCjwvdHJhbnNsYXRpb24+"
translation['38.38b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOGIiIHVuaXQ9InNlY3Rpb24iIC8+YXMgbGFyZ2UgYXMgSSBjb3VsZCBwYXk7ICBmb3IgdGhhdCB3b3VsZCBoYXZlIGRvbmUgbWUgbm8gaGFybS4gIEJ1dCBhcyBpdCBpc+KAlEkgaGF2ZSBubyBtb25leSwgdW5sZXNzIHlvdSBhcmUgd2lsbGluZyB0byBpbXBvc2UgYSBmaW5lIHdoaWNoIEkgY291bGQgcGF5LiAgSSBtaWdodCBwZXJoYXBzIHBheSBhIG1pbmEgb2Ygc2lsdmVyLiAgU28gSSBwcm9wb3NlIHRoYXQgcGVuYWx0eTsgIGJ1dCBQbGF0byBoZXJlLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCBhbmQgQ3JpdG8gYW5kIENyaXRvYnVsdXMsIGFuZCBBcmlzdG9idWx1cyB0ZWxsIG1lIHRvIHByb3Bvc2UgYSBmaW5lIG9mIHRoaXJ0eSBtaW5hcywgc2F5aW5nIHRoYXQgdGhleSBhcmUgc3VyZXRpZXMgZm9yIGl0LiAgU28gSSBwcm9wb3NlIGEgZmluZSBvZiB0aGF0IGFtb3VudCwgYW5kIHRoZXNlIG1lbiwgd2hvIGFyZSBhbXBseSBzdWZmaWNpZW50LCB3aWxsIGJlIG15IHN1cmV0aWVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['38.38c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJzcGVlY2giIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjM4YyIgdW5pdD0ic2VjdGlvbiIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+SXQgaXMgbm8gbG9uZyB0aW1lLCBtZW4gb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxBdGhlbnMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLEF0aGVucyI+QXRoZW5zPC9wbGFjZU5hbWU+LCB3aGljaCB5b3UgZ2FpbiwgYW5kIGZvciB0aGF0IHRob3NlIHdobyB3aXNoIHRvIGNhc3QgYSBzbHVyIHVwb24gdGhlIHN0YXRlIHdpbGwgZ2l2ZSB5b3UgdGhlIG5hbWUgYW5kIGJsYW1lIG9mIGhhdmluZyBraWxsZWQgU29jcmF0ZXMsIGEgd2lzZSBtYW47ICBmb3IsIHlvdSBrbm93LCB0aG9zZSB3aG8gd2lzaCB0byByZXZpbGUgeW91IHdpbGwgc2F5IEkgYW0gd2lzZSwgZXZlbiB0aG91Z2ggSSBhbSBub3QuICBOb3cgaWYgeW91IGhhZCB3YWl0ZWQgYSBsaXR0bGUgd2hpbGUsIHdoYXQgeW91IGRlc2lyZSB3b3VsZCBoYXZlIGNvbWUgdG8geW91IG9mIGl0cyBvd24gYWNjb3JkOyAgZm9yIHlvdSBzZWUgaG93IG9sZCBJIGFtLCBob3cgZmFyIGFkdmFuY2VkIGluIGxpZmUgYW5kIGhvdyBuZWFyIGRlYXRoLiAgSSBzYXkgdGhpcyBub3QgdG8gYWxsIG9mIHlvdSwKPC90cmFuc2xhdGlvbj4="
translation['38.38d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOGQiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IHRvIHRob3NlIHdobyB2b3RlZCBmb3IgbXkgZGVhdGguICBBbmQgdG8gdGhlbSBhbHNvIEkgaGF2ZSBzb21ldGhpbmcgZWxzZSB0byBzYXkuICBQZXJoYXBzIHlvdSB0aGluaywgZ2VudGxlbWVuLCB0aGF0IEkgaGF2ZSBiZWVuIGNvbnZpY3RlZCB0aHJvdWdoIGxhY2sgb2Ygc3VjaCB3b3JkcyBhcyB3b3VsZCBoYXZlIG1vdmVkIHlvdSB0byBhY3F1aXQgbWUsIGlmIEkgaGFkIHRob3VnaHQgaXQgcmlnaHQgdG8gZG8gYW5kIHNheSBldmVyeXRoaW5nIHRvIGdhaW4gYW4gYWNxdWl0dGFsLiAgRmFyIGZyb20gaXQuICBBbmQgeWV0IGl0IGlzIHRocm91Z2ggYSBsYWNrIHRoYXQgSSBoYXZlIGJlZW4gY29udmljdGVkLCBub3QgaG93ZXZlciBhIGxhY2sgb2Ygd29yZHMsIGJ1dCBvZiBpbXB1ZGVuY2UgYW5kIHNoYW1lbGVzc25lc3MsIGFuZCBvZiB3aWxsaW5nbmVzcyB0byBzYXkgdG8geW91IHN1Y2ggdGhpbmdzIGFzIHlvdSB3b3VsZCBoYXZlIGxpa2VkIGJlc3QgdG8gaGVhci4gIFlvdSB3b3VsZCBoYXZlIGxpa2VkIHRvIGhlYXIgbWUgd2FpbGluZyBhbmQgbGFtZW50aW5nIGFuZCBkb2luZyBhbmQgc2F5aW5nCjwvdHJhbnNsYXRpb24+"
translation['38.38e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOGUiIHVuaXQ9InNlY3Rpb24iIC8+bWFueSB0aGluZ3Mgd2hpY2ggYXJlLCBhcyBJIG1haW50YWluLCB1bndvcnRoeSBvZiBtZeKAlHN1Y2ggdGhpbmdzIGFzIHlvdSBhcmUgYWNjdXN0b21lZCB0byBoZWFyIGZyb20gb3RoZXJzLiAgQnV0IEkgZGlkIG5vdCB0aGluayBhdCB0aGUgdGltZSB0aGF0IEkgb3VnaHQsIG9uIGFjY291bnQgb2YgdGhlIGRhbmdlciBJIHdhcyBpbiwgdG8gZG8gYW55dGhpbmcgdW53b3J0aHkgb2YgYSBmcmVlIG1hbiwgbm9yIGRvIEkgbm93IHJlcGVudCBvZiBoYXZpbmcgbWFkZSBteSBkZWZlbmNlIGFzIEkgZGlkLCBidXQgSSBtdWNoIHByZWZlciB0byBkaWUgYWZ0ZXIgc3VjaCBhIGRlZmVuY2UgdGhhbiB0byBsaXZlIGFmdGVyIGEgZGVmZW5jZSBvZiB0aGUgb3RoZXIgc29ydC4gIEZvciBuZWl0aGVyIGluIHRoZSBjb3VydCBub3IgaW4gd2FyIG91Z2h0IEkKPC90cmFuc2xhdGlvbj4="
translation['39.39a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMzlhIiB1bml0PSJzZWN0aW9uIiAvPm9yIGFueSBvdGhlciBtYW4gdG8gcGxhbiB0byBlc2NhcGUgZGVhdGggYnkgZXZlcnkgcG9zc2libGUgbWVhbnMuICBJbiBiYXR0bGVzIGl0IGlzIG9mdGVuIHBsYWluIHRoYXQgYSBtYW4gbWlnaHQgYXZvaWQgZGVhdGggYnkgdGhyb3dpbmcgZG93biBoaXMgYXJtcyBhbmQgYmVnZ2luZyBtZXJjeSBvZiBoaXMgcHVyc3VlcnM7ICBhbmQgdGhlcmUgYXJlIG1hbnkgb3RoZXIgbWVhbnMgb2YgZXNjYXBpbmcgZGVhdGggaW4gZGFuZ2VycyBvZiB2YXJpb3VzIGtpbmRzIGlmIG9uZSBpcyB3aWxsaW5nIHRvIGRvIGFuZCBzYXkgYW55dGhpbmcuICBCdXQsIGdlbnRsZW1lbiwgaXQgaXMgbm90IGhhcmQgdG8gZXNjYXBlIGRlYXRoOyAgaXQgaXMgbXVjaCBoYXJkZXIgdG8gZXNjYXBlIHdpY2tlZG5lc3MsIGZvciB0aGF0IHJ1bnMgZmFzdGVyIHRoYW4gZGVhdGguIAo8L3RyYW5zbGF0aW9uPg=="
translation['39.39b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOWIiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIG5vdyBJLCBzaW5jZSBJIGFtIHNsb3cgYW5kIG9sZCwgYW0gY2F1Z2h0IGJ5IHRoZSBzbG93ZXIgcnVubmVyLCBhbmQgbXkgYWNjdXNlcnMsIHdobyBhcmUgY2xldmVyIGFuZCBxdWljaywgYnkgdGhlIGZhc3Rlciwgd2lja2VkbmVzcy4gIEFuZCBub3cgSSBzaGFsbCBnbyBhd2F5IGNvbnZpY3RlZCBieSB5b3UgYW5kIHNlbnRlbmNlZCB0byBkZWF0aCwgYW5kIHRoZXkgZ28gY29udmljdGVkIGJ5IHRydXRoIG9mIHZpbGxhaW55IGFuZCB3cm9uZy4gIEFuZCBJIGFiaWRlIGJ5IG15IHBlbmFsdHksIGFuZCB0aGV5IGJ5IHRoZWlycy4gIFBlcmhhcHMgdGhlc2UgdGhpbmdzIGhhZCB0byBiZSBzbywgYW5kIEkgdGhpbmsgdGhleSBhcmUgd2VsbC4KPC90cmFuc2xhdGlvbj4="
translation['39.39c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOWMiIHVuaXQ9InNlY3Rpb24iIC8+IEFuZCBub3cgSSB3aXNoIHRvIHByb3BoZXN5IHRvIHlvdSwgTyB5ZSB3aG8gaGF2ZSBjb25kZW1uZWQgbWU7ICBmb3IgSSBhbSBub3cgYXQgdGhlIHRpbWUgd2hlbiBtZW4gbW9zdCBkbyBwcm9waGVzeSwgdGhlIHRpbWUganVzdCBiZWZvcmUgZGVhdGguICBBbmQgSSBzYXkgdG8geW91LCB5ZSBtZW4gd2hvIGhhdmUgc2xhaW4gbWUsIHRoYXQgcHVuaXNobWVudCB3aWxsIGNvbWUgdXBvbiB5b3Ugc3RyYWlnaHQtd2F5IGFmdGVyIG15IGRlYXRoLCBmYXIgbW9yZSBncmlldm91cyBpbiBzb290aCB0aGFuIHRoZSBwdW5pc2htZW50IG9mIGRlYXRoIHdoaWNoIHlvdSBoYXZlIG1ldGVkIG91dCB0byBtZS4gIEZvciBub3cgeW91IGhhdmUgZG9uZSB0aGlzIHRvIG1lIGJlY2F1c2UgeW91IGhvcGVkIHRoYXQgeW91IHdvdWxkIGJlIHJlbGlldmVkIGZyb20gcmVuZGVyaW5nIGFuIGFjY291bnQgb2YgeW91ciBsaXZlcywgYnV0IEkgc2F5IHRoYXQgeW91IHdpbGwgZmluZCB0aGUgcmVzdWx0IGZhciBkaWZmZXJlbnQuICBUaG9zZSB3aG8gd2lsbCBmb3JjZSB5b3UgdG8gZ2l2ZSBhbiBhY2NvdW50IHdpbGwgYmUgbW9yZSBudW1lcm91cyB0aGFuIGhlcmV0b2ZvcmU7IAo8L3RyYW5zbGF0aW9uPg=="
translation['39.39d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOWQiIHVuaXQ9InNlY3Rpb24iIC8+bWVuIHdob20gSSByZXN0cmFpbmVkLCB0aG91Z2ggeW91IGtuZXcgaXQgbm90OyAgYW5kIHRoZXkgd2lsbCBiZSBoYXJzaGVyLCBpbmFzbXVjaCBhcyB0aGV5IGFyZSB5b3VuZ2VyLCBhbmQgeW91IHdpbGwgYmUgbW9yZSBhbm5veWVkLiAgRm9yIGlmIHlvdSB0aGluayB0aGF0IGJ5IHB1dHRpbmcgbWVuIHRvIGRlYXRoIHlvdSB3aWxsIHByZXZlbnQgYW55b25lIGZyb20gcmVwcm9hY2hpbmcgeW91IGJlY2F1c2UgeW91IGRvIG5vdCBhY3QgYXMgeW91IHNob3VsZCwgeW91IGFyZSBtaXN0YWtlbi4gIFRoYXQgbW9kZSBvZiBlc2NhcGUgaXMgbmVpdGhlciBwb3NzaWJsZSBhdCBhbGwgbm9yIGhvbm9yYWJsZSwgYnV0IHRoZSBlYXNpZXN0IGFuZCBtb3N0IGhvbm9yYWJsZSBlc2NhcGUgaXMgbm90IGJ5IHN1cHByZXNzaW5nIG90aGVycywgYnV0IGJ5IG1ha2luZyB5b3Vyc2VsdmVzIGFzIGdvb2QgYXMgcG9zc2libGUuICBTbyB3aXRoIHRoaXMgcHJvcGhlY3kgdG8geW91IHdobyBjb25kZW1uZWQgbWUKPC90cmFuc2xhdGlvbj4="
translation['39.39e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzOWUiIHVuaXQ9InNlY3Rpb24iIC8+SSB0YWtlIG15IGxlYXZlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CdXQgd2l0aCB0aG9zZSB3aG8gdm90ZWQgZm9yIG15IGFjcXVpdHRhbCBJIHNob3VsZCBsaWtlIHRvIGNvbnZlcnNlIGFib3V0IHRoaXMgd2hpY2ggaGFzIGhhcHBlbmVkLCB3aGlsZSB0aGUgYXV0aG9yaXRpZXMgYXJlIGJ1c3kgYW5kIGJlZm9yZSBJIGdvIHRvIHRoZSBwbGFjZSB3aGVyZSBJIG11c3QgZGllLiAgV2FpdCB3aXRoIG1lIHNvIGxvbmcsIG15IGZyaWVuZHM7ICBmb3Igbm90aGluZyBwcmV2ZW50cyBvdXIgY2hhdHRpbmcgd2l0aCBlYWNoIG90aGVyCjwvdHJhbnNsYXRpb24+"
translation['40.40a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDBhIiB1bml0PSJzZWN0aW9uIiAvPndoaWxlIHRoZXJlIGlzIHRpbWUuICBJIGZlZWwgdGhhdCB5b3UgYXJlIG15IGZyaWVuZHMsIGFuZCBJIHdpc2ggdG8gc2hvdyB5b3UgdGhlIG1lYW5pbmcgb2YgdGhpcyB3aGljaCBoYXMgbm93IGhhcHBlbmVkIHRvIG1lLiAgRm9yLCBqdWRnZXPigJRhbmQgaW4gY2FsbGluZyB5b3UganVkZ2VzIEkgZ2l2ZSB5b3UgeW91ciByaWdodCBuYW1l4oCUYSB3b25kZXJmdWwgdGhpbmcgaGFzIGhhcHBlbmVkIHRvIG1lLiAgRm9yIGhpdGhlcnRvIHRoZSBjdXN0b21hcnkgcHJvcGhldGljIG1vbml0b3IgYWx3YXlzIHNwb2tlIHRvIG1lIHZlcnkgZnJlcXVlbnRseSBhbmQgb3Bwb3NlZCBtZSBldmVuIGluIHZlcnkgc21hbGwgbWF0dGVycywgaWYgSSB3YXMgZ29pbmcgdG8gZG8gYW55dGhpbmcgSSBzaG91bGQgbm90OyAgYnV0IG5vdywgYXMgeW91IHlvdXJzZWx2ZXMgc2VlLCB0aGlzIHRoaW5nIHdoaWNoIG1pZ2h0IGJlIHRob3VnaHQsIGFuZCBpcyBnZW5lcmFsbHkgY29uc2lkZXJlZCwgdGhlIGdyZWF0ZXN0IG9mIGV2aWxzIGhhcyBjb21lIHVwb24gbWU7ICBidXQgdGhlIGRpdmluZSBzaWduIGRpZCBub3Qgb3Bwb3NlIG1lCjwvdHJhbnNsYXRpb24+"
translation['40.40b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MGIiIHVuaXQ9InNlY3Rpb24iIC8+ZWl0aGVyIHdoZW4gSSBsZWZ0IG15IGhvbWUgaW4gdGhlIG1vcm5pbmcsIG9yIHdoZW4gSSBjYW1lIGhlcmUgdG8gdGhlIGNvdXJ0LCBvciBhdCBhbnkgcG9pbnQgb2YgbXkgc3BlZWNoLCB3aGVuIEkgd2FzIGdvaW5nIHRvIHNheSBhbnl0aGluZzsgIGFuZCB5ZXQgb24gb3RoZXIgb2NjYXNpb25zIGl0IHN0b3BwZWQgbWUgYXQgbWFueSBwb2ludHMgaW4gdGhlIG1pZHN0IG9mIGEgc3BlZWNoOyAgYnV0IG5vdywgaW4gdGhpcyBhZmZhaXIsIGl0IGhhcyBub3Qgb3Bwb3NlZCBtZSBpbiBhbnl0aGluZyBJIHdhcyBkb2luZyBvciBzYXlpbmcuICBXaGF0IHRoZW4gZG8gSSBzdXBwb3NlIGlzIHRoZSByZWFzb24/ICBJIHdpbGwgdGVsbCB5b3UuICBUaGlzIHdoaWNoIGhhcyBoYXBwZW5lZCB0byBtZSBpcyBkb3VidGxlc3MgYSBnb29kIHRoaW5nLCBhbmQgdGhvc2Ugb2YgdXMgd2hvIHRoaW5rIGRlYXRoIGlzIGFuIGV2aWwKPC90cmFuc2xhdGlvbj4="
translation['40.40c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MGMiIHVuaXQ9InNlY3Rpb24iIC8+bXVzdCBiZSBtaXN0YWtlbi4gIEEgY29udmluY2luZyBwcm9vZiBvZiB0aGlzIGJlZW4gZ2l2ZW4gbWU7ICBmb3IgdGhlIGFjY3VzdG9tZWQgc2lnbiB3b3VsZCBzdXJlbHkgaGF2ZSBvcHBvc2VkIG1lIGlmIEkgaGFkIG5vdCBiZWVuIGdvaW5nIHRvIG1lZXQgd2l0aCBzb21ldGhpbmcgZ29vZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+TGV0IHVzIGNvbnNpZGVyIGluIGFub3RoZXIgd2F5IGFsc28gaG93IGdvb2QgcmVhc29uIHRoZXJlIGlzIHRvIGhvcGUgdGhhdCBpdCBpcyBhIGdvb2QgdGhpbmcuICBGb3IgdGhlIHN0YXRlIG9mIGRlYXRoIGlzIG9uZSBvZiB0d28gdGhpbmdzOiAgZWl0aGVyIGl0IGlzIHZpcnR1YWxseSBub3RoaW5nbmVzcywgc28gdGhhdCB0aGUgZGVhZCBoYXMgbm8gY29uc2Npb3VzbmVzcyBvZiBhbnl0aGluZywgb3IgaXQgaXMsIGFzIHBlb3BsZSBzYXksIGEgY2hhbmdlIGFuZCBtaWdyYXRpb24gb2YgdGhlIHNvdWwgZnJvbSB0aGlzIHRvIGFub3RoZXIgcGxhY2UuICBBbmQgaWYgaXQgaXMgdW5jb25zY2lvdXNuZXNzLAo8L3RyYW5zbGF0aW9uPg=="
translation['40.40d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MGQiIHVuaXQ9InNlY3Rpb24iIC8+bGlrZSBhIHNsZWVwIGluIHdoaWNoIHRoZSBzbGVlcGVyIGRvZXMgbm90IGV2ZW4gZHJlYW0sIGRlYXRoIHdvdWxkIGJlIGEgd29uZGVyZnVsIGdhaW4uICBGb3IgSSB0aGluayBpZiBhbnkgb25lIHdlcmUgdG8gcGljayBvdXQgdGhhdCBuaWdodCBpbiB3aGljaCBoZSBzbGVwdCBhIGRyZWFtbGVzcyBzbGVlcCBhbmQsIGNvbXBhcmluZyB3aXRoIGl0IHRoZSBvdGhlciBuaWdodHMgYW5kIGRheXMgb2YgaGlzIGxpZmUsIHdlcmUgdG8gc2F5LCBhZnRlciBkdWUgY29uc2lkZXJhdGlvbiwgaG93IG1hbnkgZGF5cyBhbmQgbmlnaHRzIGluIGhpcyBsaWZlIGhhZCBwYXNzZWQgbW9yZSBwbGVhc2FudGx5IHRoYW4gdGhhdCBuaWdodCzigJRJIGJlbGlldmUgdGhhdCBub3Qgb25seSBhbnkgcHJpdmF0ZSBwZXJzb24sIGJ1dCBldmVuIHRoZSBncmVhdCBLaW5nIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAwMjMxIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDAyMzEiPlBlcnNpYTwvcGxhY2VOYW1lPiBoaW1zZWxmCjwvdHJhbnNsYXRpb24+"
translation['40.40e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MGUiIHVuaXQ9InNlY3Rpb24iIC8+d291bGQgZmluZCB0aGF0IHRoZXkgd2VyZSBmZXcgaW4gY29tcGFyaXNvbiB3aXRoIHRoZSBvdGhlciBkYXlzIGFuZCBuaWdodHMuICBTbyBpZiBzdWNoIGlzIHRoZSBuYXR1cmUgb2YgZGVhdGgsIEkgY291bnQgaXQgYSBnYWluOyAgZm9yIGluIHRoYXQgY2FzZSwgYWxsIHRpbWUgc2VlbXMgdG8gYmUgbm8gbG9uZ2VyIHRoYW4gb25lIG5pZ2h0LiAgQnV0IG9uIHRoZSBvdGhlciBoYW5kLCBpZiBkZWF0aCBpcywgYXMgaXQgd2VyZSwgYSBjaGFuZ2Ugb2YgaGFiaXRhdGlvbiBmcm9tIGhlcmUgdG8gc29tZSBvdGhlciBwbGFjZSwgYW5kIGlmIHdoYXQgd2UgYXJlIHRvbGQgaXMgdHJ1ZSwgdGhhdCBhbGwgdGhlIGRlYWQgYXJlIHRoZXJlLCB3aGF0IGdyZWF0ZXIgYmxlc3NpbmcgY291bGQgdGhlcmUgYmUsIGp1ZGdlcz8gIEZvciBpZiBhIG1hbiB3aGVuIGhlIHJlYWNoZXMgdGhlIG90aGVyIHdvcmxkLAo8L3RyYW5zbGF0aW9uPg=="
translation['41.41a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDFhIiB1bml0PSJzZWN0aW9uIiAvPmFmdGVyIGxlYXZpbmcgYmVoaW5kIHRoZXNlIHdobyBjbGFpbSB0byBiZSBqdWRnZXMsIHNoYWxsIGZpbmQgdGhvc2Ugd2hvIGFyZSByZWFsbHkganVkZ2VzIHdobyBhcmUgc2FpZCB0byBzaXQgaW4ganVkZ21lbnQgdGhlcmUsIE1pbm9zIGFuZCBSaGFkYW1hbnRodXMsIGFuZCBBZWFjdXMgYW5kIFRyaXB0b2xlbXVzLCBhbmQgYWxsIHRoZSBvdGhlciBkZW1pZ29kcyB3aG8gd2VyZSBqdXN0IG1lbiBpbiB0aGVpciBsaXZlcywgd291bGQgdGhlIGNoYW5nZSBvZiBoYWJpdGF0aW9uIGJlIHVuZGVzaXJhYmxlPyAgT3IgYWdhaW4sIHdoYXQgd291bGQgYW55IG9mIHlvdSBnaXZlIHRvIG1lZXQgd2l0aCBPcnBoZXVzIGFuZCBNdXNhZXVzIGFuZCBIZXNpb2QgYW5kIEhvbWVyPyAgSSBhbSB3aWxsaW5nIHRvIGRpZSBtYW55IHRpbWVzIG92ZXIsIGlmIHRoZXNlIHRoaW5ncyBhcmUgdHJ1ZTsgIGZvciBJIHBlcnNvbmFsbHkgc2hvdWxkIGZpbmQgdGhlIGxpZmUgdGhlcmUgd29uZGVyZnVsLAo8L3RyYW5zbGF0aW9uPg=="
translation['41.41b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MWIiIHVuaXQ9InNlY3Rpb24iIC8+d2hlbiBJIG1ldCBQYWxhbWVkZXMgb3IgQWpheCwgdGhlIHNvbiBvZiBUZWxhbW9uLCBvciBhbnkgb3RoZXIgbWVuIG9mIG9sZCB3aG8gbG9zdCB0aGVpciBsaXZlcyB0aHJvdWdoIGFuIHVuanVzdCBqdWRnZW1lbnQsIGFuZCBjb21wYXJlZCBteSBleHBlcmllbmNlIHdpdGggdGhlaXJzLiAgSSB0aGluayB0aGF0IHdvdWxkIG5vdCBiZSB1bnBsZWFzYW50LiAgQW5kIHRoZSBncmVhdGVzdCBwbGVhc3VyZSB3b3VsZCBiZSB0byBwYXNzIG15IHRpbWUgaW4gZXhhbWluaW5nIGFuZCBpbnZlc3RpZ2F0aW5nIHRoZSBwZW9wbGUgdGhlcmUsIGFzIEkgZG8gdGhvc2UgaGVyZSwgdG8gZmluZCBvdXQgd2hvIGFtb25nIHRoZW0gaXMgd2lzZSBhbmQgd2hvIHRoaW5rcyBoZSBpcyB3aGVuIGhlIGlzIG5vdC4gIFdoYXQgcHJpY2Ugd291bGQgYW55IG9mIHlvdSBwYXksIGp1ZGdlcywgdG8gZXhhbWluZSBoaW0gd2hvIGxlZCB0aGUgZ3JlYXQgYXJteSBhZ2FpbnN0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVHJveSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsVHJveSI+VHJveTwvcGxhY2VOYW1lPiwKPC90cmFuc2xhdGlvbj4="
translation['41.41c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MWMiIHVuaXQ9InNlY3Rpb24iIC8+b3IgT2R5c3NldXMsIG9yIFNpc3lwaHVzLCBvciBjb3VudGxlc3Mgb3RoZXJzLCBib3RoIG1lbiBhbmQgd29tZW4sIHdob20gSSBtaWdodCBtZW50aW9uPyAgVG8gY29udmVyc2UgYW5kIGFzc29jaWF0ZSB3aXRoIHRoZW0gYW5kIGV4YW1pbmUgdGhlbSB3b3VsZCBiZSBpbW1lYXN1cmFibGUgaGFwcGluZXNzLiAgQXQgYW55IHJhdGUsIHRoZSBmb2xrIHRoZXJlIGRvIG5vdCBraWxsIHBlb3BsZSBmb3IgaXQ7ICBzaW5jZSwgaWYgd2hhdCB3ZSBhcmUgdG9sZCBpcyB0cnVlLCB0aGV5IGFyZSBpbW1vcnRhbCBmb3IgYWxsIGZ1dHVyZSB0aW1lLCBiZXNpZGVzIGJlaW5nIGhhcHBpZXIgaW4gb3RoZXIgcmVzcGVjdHMgdGhhbiBtZW4gYXJlIGhlcmUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCB5b3UgYWxzbywganVkZ2VzLCBtdXN0IHJlZ2FyZCBkZWF0aCBob3BlZnVsbHkgYW5kIG11c3QgYmVhciBpbiBtaW5kIHRoaXMgb25lIHRydXRoLAo8L3RyYW5zbGF0aW9uPg=="
translation['41.41d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MWQiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBubyBldmlsIGNhbiBjb21lIHRvIGEgZ29vZCBtYW4gZWl0aGVyIGluIGxpZmUgb3IgYWZ0ZXIgZGVhdGgsIGFuZCBHb2QgZG9lcyBub3QgbmVnbGVjdCBoaW0uICBTbywgdG9vLCB0aGlzIHdoaWNoIGhhZCBjb21lIHRvIG1lIGhhcyBub3QgY29tZSBieSBjaGFuY2UsIGJ1dCBJIHNlZSBwbGFpbmx5IHRoYXQgaXQgd2FzIGJldHRlciBmb3IgbWUgdG8gZGllIG5vdyBhbmQgYmUgZnJlZWQgZnJvbSB0cm91Ymxlcy4gIFRoYXQgaXMgdGhlIHJlYXNvbiB3aHkgdGhlIHNpZ24gbmV2ZXIgaW50ZXJmZXJlZCB3aXRoIG1lLCBhbmQgSSBhbSBub3QgYXQgYWxsIGFuZ3J5IHdpdGggdGhvc2Ugd2hvIGNvbmRlbW5lZCBtZSBvciB3aXRoIG15IGFjY3VzZXJzLiAgQW5kIHlldCBpdCB3YXMgbm90IHdpdGggdGhhdCBpbiB2aWV3IHRoYXQgdGhleSBjb25kZW1uZWQgYW5kIGFjY3VzZWQgbWUsIGJ1dCBiZWNhdXNlCjwvdHJhbnNsYXRpb24+"
translation['41.41e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MWUiIHVuaXQ9InNlY3Rpb24iIC8+dGhleSB0aG91Z2h0IHRvIGluanVyZSBtZS4gIFRoZXkgZGVzZXJ2ZSBibGFtZSBmb3IgdGhhdC4gIEhvd2V2ZXIsIEkgbWFrZSB0aGlzIHJlcXVlc3Qgb2YgdGhlbTogIHdoZW4gbXkgc29ucyBncm93IHVwLCBnZW50bGVtZW4sIHB1bmlzaCB0aGVtIGJ5IHRyb3VibGluZyB0aGVtIGFzIEkgaGF2ZSB0cm91YmxlZCB5b3U7ICBpZiB0aGV5IHNlZW0gdG8geW91IHRvIGNhcmUgZm9yIG1vbmV5IG9yIGFueXRoaW5nIGVsc2UgbW9yZSB0aGFuIGZvciB2aXJ0dWUsIGFuZCBpZiB0aGV5IHRoaW5rIHRoZXkgYW1vdW50IHRvIHNvbWV0aGluZyB3aGVuIHRoZXkgZG8gbm90LCByZWJ1a2UgdGhlbSBhcyBJIGhhdmUgcmVidWtlZCB5b3UgYmVjYXVzZSB0aGV5IGRvIG5vdCBjYXJlIGZvciB3aGF0IHRoZXkgb3VnaHQsIGFuZCB0aGluayB0aGV5IGFtb3VudCB0byBzb21ldGhpbmcgd2hlbiB0aGV5IGFyZSB3b3J0aCBub3RoaW5nLiAgSWYgeW91IGRvIHRoaXMsIGJvdGggSSBhbmQgbXkgc29ucwo8L3RyYW5zbGF0aW9uPg=="
translation['42.42a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDJhIiB1bml0PSJzZWN0aW9uIiAvPnNoYWxsIGhhdmUgcmVjZWl2ZWQganVzdCB0cmVhdG1lbnQgZnJvbSB5b3UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJ1dCBub3cgdGhlIHRpbWUgaGFzIGNvbWUgdG8gZ28gYXdheS4gIEkgZ28gdG8gZGllLCBhbmQgeW91IHRvIGxpdmU7ICBidXQgd2hpY2ggb2YgdXMgZ29lcyB0byB0aGUgYmV0dGVyIGxvdCwgaXMga25vd24gdG8gbm9uZSBidXQgR29kLjx0ZXh0IGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iQ3JpdG8iPgo8Ym9keSBjbGFzcz0idHJhbnNsYXRpb24iPjxoZWFkIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L2hlYWQ+CjxjYXN0TGlzdCBjbGFzcz0idHJhbnNsYXRpb24iPjxjYXN0SXRlbSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InJvbGUiPjxyb2xlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3JvbGU+PC9jYXN0SXRlbT48Y2FzdEl0ZW0gY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJyb2xlIj48cm9sZSBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9yb2xlPjwvY2FzdEl0ZW0+PC9jYXN0TGlzdD4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQzIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNDNhIiB1bml0PSJzZWN0aW9uIiAvPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5XaHkgaGF2ZSB5b3UgY29tZSBhdCB0aGlzIHRpbWUsIENyaXRvPyAgT3IgaXNuJ3QgaXQgc3RpbGwgZWFybHk/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPlllcywgdmVyeSBlYXJseS48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+QWJvdXQgd2hhdCB0aW1lPzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5KdXN0IGJlZm9yZSBkYXduLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5JIGFtIHN1cnByaXNlZCB0aGF0IHRoZSB3YXRjaG1hbiBvZiB0aGUgcHJpc29uIHdhcyB3aWxsaW5nIHRvIGxldCB5b3UgaW4uPC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPkhlIGlzIHVzZWQgdG8gbWUgYnkgdGhpcyB0aW1lLCBTb2NyYXRlcywgYmVjYXVzZSBJIGNvbWUgaGVyZSBzbyBvZnRlbiwgYW5kIGJlc2lkZXMgSSBoYXZlIGRvbmUgc29tZXRoaW5nIGZvciBoaW0uPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkhhdmUgeW91IGp1c3QgY29tZSwgb3Igc29tZSB0aW1lIGFnbz88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+U29tZSBsaXR0bGUgdGltZSBhZ28uCjxtaWxlc3RvbmUgbj0iNDNiIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5UaGVuIHdoeSBkaWQgeW91IG5vdCB3YWtlIG1lIGF0IG9uY2UsIGluc3RlYWQgb2Ygc2l0dGluZyBieSBtZSBpbiBzaWxlbmNlPzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5Obywgbm8sIGJ5IFpldXMsIFNvY3JhdGVzLCBJIG9ubHkgd2lzaCBJIG15c2VsZiB3ZXJlIG5vdCBzbyBzbGVlcGxlc3MgYW5kIHNvcnJvd2Z1bC4gIEJ1dCBJIGhhdmUgYmVlbiB3b25kZXJpbmcgYXQgeW91IGZvciBzb21lIHRpbWUsIHNlZWluZyBob3cgc3dlZXRseSB5b3Ugc2xlZXA7ICBhbmQgSSBwdXJwb3NlbHkgcmVmcmFpbmVkIGZyb20gd2FraW5nIHlvdSwgdGhhdCB5b3UgbWlnaHQgcGFzcyB0aGUgdGltZSBhcyBwbGVhc2FudGx5IGFzIHBvc3NpYmxlLiAgSSBoYXZlIG9mdGVuIHRob3VnaHQgdGhyb3VnaG91dCB5b3VyIGxpZmUgaGl0aGVydG8gdGhhdCB5b3Ugd2VyZSBvZiBhIGhhcHB5IGRpc3Bvc2l0aW9uLCBhbmQgSSB0aGluayBzbyBtb3JlIHRoYW4gZXZlciBpbiB0aGlzIHJlc2VudCBtaXNmb3J0dW5lLCBzaW5jZSB5b3UgYmVhciBpdCBzbyBlYXNpbHkgYW5kIGNhbG1seS48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+V2VsbCwgQ3JpdG8sIGl0IHdvdWxkIGJlIGFic3VyZAo8bWlsZXN0b25lIG49IjQzYyIgdW5pdD0ic2VjdGlvbiIgLz5pZiBhdCBteSBhZ2UgSSB3ZXJlIGRpc3R1cmJlZCBiZWNhdXNlIEkgbXVzdCBkaWUgbm93LjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5PdGhlciBtZW4gYXMgb2xkLCBTb2NyYXRlcywgYmVjb21lIGludm9sdmVkIGluIHNpbWlsYXIgbWlzZm9ydHVuZXMsIGJ1dCB0aGVpciBhZ2UgZG9lcyBub3QgaW4gdGhlIGxlYXN0IHByZXZlbnQgdGhlbSBmcm9tIGJlaW5nIGRpc3R1cmJlZCBieSB0aGVpciBmYXRlLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5UaGF0IGlzIHRydWUuICBCdXQgd2h5IGhhdmUgeW91IGNvbWUgc28gZWFybHk/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPlRvIGJyaW5nIG5ld3MsIFNvY3JhdGVzLCBzYWQgbmV3cywgdGhvdWdoIGFwcGFyZW50bHkgbm90IHNhZCB0byB5b3UsIGJ1dCBzYWQgYW5kIGdyaWV2b3VzIG1lIGFuZCBhbGwgeW91ciBmcmllbmRzLCBhbmQgdG8gZmV3IG9mIHRoZW0sIEkgdGhpbmssIHNvIGdyaWV2b3VzIGFzIHRvIG1lLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5XaGF0IGlzIHRoaXMgbmV3cz8gIEhhcyB0aGUgc2hpcCBjb21lIGZyb20gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxEZWxvcyIga2V5PSJwZXJzZXVzLERlbG9zIj5EZWxvczwvcGxhY2VOYW1lPiwKPG1pbGVzdG9uZSBuPSI0M2QiIHVuaXQ9InNlY3Rpb24iIC8+YXQgdGhlIGFycml2YWwgb2Ygd2hpY2ggSSBhbSB0byBkaWU/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPkl0IGhhcyBub3QgZXhhY3RseSBjb21lLCBidXQgSSB0aGluayBpdCB3aWxsIGNvbWUgdG9kYXkgZnJvbSB0aGUgcmVwb3J0cyBvZiBzb21lIG1lbiB3aG8gaGF2ZSBjb21lIGZyb20gU3VuaXVtIGFuZCBsZWZ0IGl0IHRoZXJlLiAgTm93IGl0IGlzIGNsZWFyIGZyb20gd2hhdCB0aGV5IHNheSB0aGF0IGl0IHdpbGwgY29tZSB0b2RheSwgYW5kIHNvIHRvbW9ycm93LCBTb2NyYXRlcywgeW91ciBsaWZlIG11c3QgZW5kLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5XZWxsLCBDcml0bywgZ29vZCBsdWNrIGJlIHdpdGggdXMhICBJZiB0aGlzIGlzIHRoZSB3aWxsIG9mIHRoZSBnb2RzLCBzbyBiZSBpdC4gIEhvd2V2ZXIsIEkgZG8gbm90IHRoaW5rCjxtaWxlc3RvbmUgbj0iNDQiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI0NGEiIHVuaXQ9InNlY3Rpb24iIC8+aXQgd2lsbCBjb21lIHRvZGF5LjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5XaGF0IGlzIHlvdXIgcmVhc29uIGZvciBub3QgdGhpbmtpbmcgc28/PC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkkgd2lsbCB0ZWxsIHlvdS4gIEkgbXVzdCBkaWUgb24gdGhlIGRheSBhZnRlciB0aGUgc2hpcCBjb21lcyBpbiwgbXVzdCBJIG5vdD88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+U28gdGhvc2Ugc2F5IHdobyBoYXZlIGNoYXJnZSBvZiB0aGVzZSBtYXR0ZXJzLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5XZWxsLCBJIHRoaW5rIGl0IHdpbGwgbm90IGNvbWUgaW4gdG9kYXksIGJ1dCB0b21vcnJvdy4gIEFuZCBteSByZWFzb24gZm9yIHRoaXMgaXMgYSBkcmVhbSB3aGljaCBJIGhhZCBhIGxpdHRsZSB3aGlsZSBhZ28gaW4gdGhlIGNvdXJzZSBvZiB0aGlzIG5pZ2h0LiAgQW5kIHBlcmhhcHMgeW91IGxldCBtZSBzbGVlcCBqdXN0IGF0IHRoZSByaWdodCB0aW1lLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5XaGF0IHdhcyB0aGUgZHJlYW0/PC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkkgZHJlYW1lZCB0aGF0IGEgYmVhdXRpZnVsLCBmYWlyIHdvbWFuLCBjbG90aGVkIGluIHdoaXRlIHJhaW1lbnQsIGNhbWUgdG8gbWUgYW5kIGNhbGxlZCBtZQogICAgPG1pbGVzdG9uZSBuPSI0NGIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHNhaWQsIOKAnFNvY3JhdGVzLCA8cXVvdGUgdHlwZT0idmVyc2UiPjxsIG1ldD0iZGFjdHlsaWMiPm9uIHRoZSB0aGlyZCBkYXkgdGhvdSB3b3VsZHN0IGNvbWUgdG8gZmVydGlsZSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFBodGhpYSIga2V5PSJwZXJzZXVzLFBodGhpYSI+UGh0aGlhPC9wbGFjZU5hbWU+LuKAnTwvbD48L3F1b3RlPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+PGJpYmwgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDkuMzYzIiB2YWxpZD0ieWVzIj5Ib20uIElsLiA5LjM2MzwvYmlibD4uPC9ub3RlPjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5BIHN0cmFuZ2UgZHJlYW0sIFNvY3JhdGVzLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5ObywgYSBjbGVhciBvbmUsIGF0IGFueSByYXRlLCBJIHRoaW5rLCBDcml0by48L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+VG9vIGNsZWFyLCBhcHBhcmVudGx5LiAgQnV0LCBteSBkZWFyIFNvY3JhdGVzLCBldmVuIG5vdyBsaXN0ZW4gdG8gbWUgYW5kIHNhdmUgeW91cnNlbGYuICBTaW5jZSwgaWYgeW91IGRpZSwgaXQgd2lsbCBiZSBubyBtZXJlIHNpbmdsZSBtaXNmb3J0dW5lIHRvIG1lLCBidXQgSSBzaGFsbCBsb3NlIGEgZnJpZW5kIHN1Y2ggYXMgSSBjYW4gbmV2ZXIgZmluZCBhZ2FpbiwgYW5kIGJlc2lkZXMsIG1hbnkgcGVyc29ucyB3aG8gZG8gbm90IGtub3cgeW91IGFuZCBtZSB3ZWxsCjxtaWxlc3RvbmUgbj0iNDRjIiB1bml0PSJzZWN0aW9uIiAvPndpbGwgdGhpbmsgSSBjb3VsZCBoYXZlIHNhdmVkIHlvdSBpZiBJIGhhZCBiZWVuIHdpbGxpbmcgdG8gc3BlbmQgbW9uZXksIGJ1dCB0aGF0IEkgd291bGQgbm90IHRha2UgdGhlIHRyb3VibGUuICBBbmQgeWV0IHdoYXQgcmVwdXRhdGlvbiBjb3VsZCBiZSBtb3JlIGRpc2dyYWNlZnVsIHRoYW4gdGhhdCBvZiBjb25zaWRlcmluZyBvbmUncyBtb25leSBvZiBtb3JlIGltcG9ydGFuY2UgdGhhbiBvbmUncyBmcmllbmRzPyAgRm9yIG1vc3QgcGVvcGxlIHdpbGwgbm90IGJlbGlldmUgdGhhdCB3ZSB3ZXJlIGVhZ2VyIHRvIGhlbHAgeW91IHRvIGdvIGF3YXkgZnJvbSBoZXJlLCBidXQgeW91IHJlZnVzZWQuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkJ1dCwgbXkgZGVhciBDcml0bywgd2h5IGRvIHdlIGNhcmUgc28gbXVjaCBmb3Igd2hhdCBtb3N0IHBlb3BsZSB0aGluaz8gIEZvciB0aGUgbW9zdCByZWFzb25hYmxlIG1lbiwgd2hvc2Ugb3BpbmlvbiBpcyBtb3JlIHdvcnRoIGNvbnNpZGVyaW5nLCB3aWxsIHRoaW5rIHRoYXQgdGhpbmdzIHdlcmUgZG9uZSBhcyB0aGV5IHJlYWxseSB3aWxsIGJlIGRvbmUuCjxtaWxlc3RvbmUgbj0iNDRkIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5CdXQgeW91IHNlZSBpdCBpcyBuZWNlc3NhcnksIFNvY3JhdGVzLCB0byBjYXJlIGZvciB0aGUgb3BpbmlvbiBvZiB0aGUgcHVibGljLCBmb3IgdGhpcyB2ZXJ5IHRyb3VibGUgd2UgYXJlIGluIG5vdyBzaG93cyB0aGF0IHRoZSBwdWJsaWMgaXMgYWJsZSB0byBhY2NvbXBsaXNoIG5vdCBieSBhbnkgbWVhbnMgdGhlIGxlYXN0LCBidXQgYWxtb3N0IHRoZSBncmVhdGVzdCBvZiBldmlscywgaWYgb25lIGhhcyBhIGJhZCByZXB1dGF0aW9uIHdpdGggaXQuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkkgb25seSB3aXNoLCBDcml0bywgdGhlIHBlb3BsZSBjb3VsZCBhY2NvbXBsaXNoIHRoZSBncmVhdGVzdCBldmlscywgdGhhdCB0aGV5IG1pZ2h0IGJlIGFibGUgdG8gYWNjb21wbGlzaCBhbHNvIHRoZSBncmVhdGVzdCBnb29kIHRoaW5ncy4gIFRoZW4gYWxsIHdvdWxkIGJlIHdlbGwuICBCdXQgbm93IHRoZXkgY2FuIGRvIG5laXRoZXIgb2YgdGhlIHR3bzsgIGZvciB0aGV5IGFyZSBub3QgYWJsZSB0byBtYWtlIGEgbWFuIHdpc2Ugb3IgZm9vbGlzaCwgYnV0IHRoZXkgZG8gd2hhdGV2ZXIgb2NjdXJzIHRvIHRoZW0uCjxtaWxlc3RvbmUgbj0iNDRlIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5UaGF0IG1heSB3ZWxsIGJlLiAgQnV0LCBTb2NyYXRlcywgdGVsbCBtZSB0aGlzOiAgeW91IGFyZSBub3QgY29uc2lkZXJpbmcgbWUgYW5kIHlvdXIgb3RoZXIgZnJpZW5kcywgYXJlIHlvdSwgZmVhcmluZyB0aGF0LCBpZiB5b3UgZXNjYXBlLCB0aGUgaW5mb3JtZXJzIHdpbGwgbWFrZSB0cm91YmxlIGZvciB1cyBieSBzYXlpbmcgdGhhdCB3ZSBzdG9sZSB5b3UgYXdheSwgYW5kIHdlIHNoYWxsIGJlIGZvcmNlZCB0byBsb3NlIGVpdGhlciBhbGwgb3VyIHByb3BlcnR5IG9yIGEgZ29vZCBkZWFsIG9mIG1vbmV5LCBvciBiZSBwdW5pc2hlZCBpbiBzb21lIG90aGVyIHdheSBiZXNpZGVzPyAKPG1pbGVzdG9uZSBuPSI0NSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjQ1YSIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IgaWYgeW91IGFyZSBhZnJhaWQgb2YgYW55dGhpbmcgb2YgdGhhdCBraW5kLCBsZXQgaXQgZ287ICBzaW5jZSBpdCBpcyByaWdodCBmb3IgdXMgdG8gcnVuIHRoaXMgcmlzaywgYW5kIGV2ZW4gZ3JlYXRlciByaXNrIHRoYW4gdGhpcywgaWYgbmVjZXNzYXJ5LCBwcm92aWRlZCB3ZSBzYXZlIHlvdS4gIE5vdyBwbGVhc2UgZG8gYXMgSSBhc2suPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkkgYW0gY29uc2lkZXJpbmcgdGhpcywgQ3JpdG8sIGFuZCBtYW55IG90aGVyIHRoaW5ncy48L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+V2VsbCwgZG8gbm90IGZlYXIgdGhpcyEgIGZvciBpdCBpcyBub3QgZXZlbiBhIGxhcmdlIHN1bSBvZiBtb25leSB3aGljaCB3ZSBzaG91bGQgcGF5IHRvIHNvbWUgbWVuIHdobyBhcmUgd2lsbGluZyB0byBzYXZlIHlvdSBhbmQgZ2V0IHlvdSBhd2F5IGZyb20gaGVyZS4gIEJlc2lkZXMsIGRvbid0IHlvdSBzZWUgaG93IGNoZWFwIHRoZXNlIGluZm9ybWVycyBhcmUsIGFuZCB0aGF0IG5vdCBtdWNoIG1vbmV5IHdvdWxkIGJlIG5lZWRlZCB0byBzaWxlbmNlIHRoZW0/ICBBbmQgeW91CjxtaWxlc3RvbmUgbj0iNDViIiB1bml0PSJzZWN0aW9uIiAvPmhhdmUgbXkgbW9uZXkgYXQgeW91ciBjb21tYW5kLCB3aGljaCBpcyBlbm91Z2gsIEkgZmFuY3k7ICBhbmQgbW9yZW92ZXIsIGlmIGJlY2F1c2UgeW91IGNhcmUgZm9yIG1lIHlvdSB0aGluayB5b3Ugb3VnaHQgbm90IHRvIHNwZW5kIG15IG1vbmV5LCB0aGVyZSBhcmUgZm9yZWlnbmVycyBoZXJlIHdpbGxpbmcgdG8gc3BlbmQgdGhlaXJzOyAgYW5kIG9uZSBvZiB0aGVtLCBTaW1taWFzIG9mIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVGhlYmVzIiBrZXk9InBlcnNldXMsVGhlYmVzIj5UaGViZXM8L3BsYWNlTmFtZT4sIGhhcyBicm91Z2h0IGZvciB0aGlzIGVzcGVjaWFsIHB1cnBvc2Ugc3VmZmljaWVudCBmdW5kczsgIGFuZCBDZWJlcyBhbHNvIGFuZCB2ZXJ5IG1hbnkgb3RoZXJzIGFyZSByZWFkeS4gIFNvLCBhcyBJIHNheSwgZG8gbm90IGdpdmUgdXAgc2F2aW5nIHlvdXJzZWxmIHRocm91Z2ggZmVhciBvZiB0aGlzLiAgQW5kIGRvIG5vdCBiZSB0cm91YmxlZCBieSB3aGF0IHlvdSBzYWlkIGluIHRoZSBjb3VydCwgdGhhdCBpZiB5b3Ugd2VudCBhd2F5IHlvdSB3b3VsZCBub3Qga25vdyB3aGF0IHRvIGRvIHdpdGggeW91cnNlbGYuICBGb3IgaW4gbWFueSBvdGhlciBwbGFjZXMsIHdoZXJldmVyIHlvdSBnbywKPG1pbGVzdG9uZSBuPSI0NWMiIHVuaXQ9InNlY3Rpb24iIC8+dGhleSB3aWxsIHdlbGNvbWUgeW91OyAgYW5kIGlmIHlvdSB3aXNoIHRvIGdvIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBrZXk9InRnbiw3MDAxMzk5Ij5UaGVzc2FseTwvcGxhY2VOYW1lPiwgSSBoYXZlIGZyaWVuZHMgdGhlcmUgd2hvIHdpbGwgbWFrZSBtdWNoIG9mIHlvdSBhbmQgd2lsbCBwcm90ZWN0IHlvdSwgc28gdGhhdCBubyBvbmUgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTkiIGtleT0idGduLDcwMDEzOTkiPlRoZXNzYWx5PC9wbGFjZU5hbWU+IHNoYWxsIGFubm95IHlvdS4gIEFuZCBiZXNpZGVzLCBTb2NyYXRlcywgaXQgc2VlbXMgdG8gbWUgdGhlIHRoaW5nIHlvdSBhcmUgdW5kZXJ0YWtpbmcgdG8gZG8gaXMgbm90IGV2ZW4gcmlnaHTigJRiZXRyYXlpbmcgeW91cnNlbGYgd2hlbiB5b3UgbWlnaHQgc2F2ZSB5b3Vyc2VsZi4gIEFuZCB5b3UgYXJlIGVhZ2VyIHRvIGJyaW5nIHVwb24geW91cnNlbGYganVzdCB3aGF0IHlvdXIgZW5lbWllcyB3b3VsZCB3aXNoIGFuZCBqdXN0IHdoYXQgdGhvc2Ugd2VyZSBlYWdlciBmb3Igd2hvIHdpc2hlZCB0byBkZXN0cm95IHlvdS4gIEFuZCBtb3Jlb3ZlciwgSSB0aGluayB5b3UgYXJlIGFiYW5kb25pbmcgeW91ciBjaGlsZHJlbiwgdG9vLAo8bWlsZXN0b25lIG49IjQ1ZCIgdW5pdD0ic2VjdGlvbiIgLz5mb3Igd2hlbiB5b3UgbWlnaHQgYnJpbmcgdGhlbSB1cCBhbmQgZWR1Y2F0ZSB0aGVtLCB5b3UgYXJlIGdvaW5nIHRvIGRlc2VydCB0aGVtIGFuZCBnbyBhd2F5LCBhbmQsIHNvIGZhciBhcyB5b3UgYXJlIGNvbmNlcm5lZCwgdGhlaXIgZm9ydHVuZXMgaW4gbGlmZSB3aWxsIGJlIHdoYXRldmVyIHRoZXkgaGFwcGVuIHRvIG1lZXQgd2l0aCwgYW5kIHRoZXkgd2lsbCBwcm9iYWJseSBtZWV0IHdpdGggc3VjaCB0cmVhdG1lbnQgYXMgZ2VuZXJhbGx5IGNvbWVzIHRvIG9ycGhhbnMgaW4gdGhlaXIgZGVzdGl0dXRpb24uICBOby4gIEVpdGhlciBvbmUgb3VnaHQgbm90IHRvIGJlZ2V0IGNoaWxkcmVuLCBvciBvbmUgb3VnaHQgdG8gc3RheSBieSB0aGVtIGFuZCBicmluZyB0aGVtIHVwIGFuZCBlZHVjYXRlIHRoZW0uICBCdXQgeW91IHNlZW0gdG8gbWUgdG8gYmUgY2hvb3NpbmcgdGhlIGxhemllc3Qgd2F5OyAgYW5kIHlvdSBvdWdodCB0byBjaG9vc2UgYXMgYSBnb29kIGFuZCBicmF2ZSBtYW4gd291bGQgY2hvb3NlLCB5b3Ugd2hvIGhhdmUgYmVlbiBzYXlpbmcgYWxsIHlvdXIgbGlmZSB0aGF0IHlvdSBjYXJlZCBmb3IgdmlydHVlLiAgU28gSSBhbSBzaGFtZWQgYm90aCBmb3IgeW91IGFuZCBmb3IgdXMsCjxtaWxlc3RvbmUgbj0iNDVlIiB1bml0PSJzZWN0aW9uIiAvPnlvdXIgZnJpZW5kcywgYW5kIEkgYW0gYWZyYWlkIHBlb3BsZSB3aWxsIHRoaW5rIHRoYXQgdGhpcyB3aG9sZSBhZmZhaXIgb2YgeW91cnMgaGFzIGJlZW4gY29uZHVjdGVkIHdpdGggYSBzb3J0IG9mIGNvd2FyZGljZSBvbiBvdXIgcGFydOKAlGJvdGggdGhlIGZhY3QgdGhhdCB0aGUgY2FzZSBjYW1lIGJlZm9yZSB0aGUgY291cnQsIHdoZW4gaXQgbWlnaHQgaGF2ZSBiZWVuIGF2b2lkZWQsIGFuZCB0aGUgd2F5IGluIHdoaWNoIHRoZSB0cmlhbCBpdHNlbGYgd2FzIGNhcnJpZWQgb24sIGFuZCBmaW5hbGx5IHRoZXkgd2lsbCB0aGluaywgYXMgdGhlIGNyb3duaW5nIGFic3VyZGl0eSBvZiB0aGUgd2hvbGUgYWZmYWlyLCB0aGF0IHRoaXMgb3Bwb3J0dW5pdHkgaGFzIGVzY2FwZWQgdXMgdGhyb3VnaCBzb21lIGJhc2UgY293YXJkaWNlIG9uIG91ciBwYXJ0LAo8bWlsZXN0b25lIG49IjQ2IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNDZhIiB1bml0PSJzZWN0aW9uIiAvPnNpbmNlIHdlIGRpZCBub3Qgc2F2ZSB5b3UsIGFuZCB5b3UgZGlkIG5vdCBzYXZlIHlvdXJzZWxmLCB0aG91Z2ggaXQgd2FzIHF1aXRlIHBvc3NpYmxlIGlmIHdlIGhhZCBiZWVuIG9mIGFueSB1c2Ugd2hhdGV2ZXIuICBUYWtlIGNhcmUsIFNvY3JhdGVzLCB0aGF0IHRoZXNlIHRoaW5ncyBiZSBub3QgZGlzZ3JhY2VmdWwsIGFzIHdlbGwgYXMgZXZpbCwgYm90aCB0byB5b3UgYW5kIHRvIHVzLiAgSnVzdCBjb25zaWRlciwgb3IgcmF0aGVyIGl0IGlzIHRpbWUgbm90IHRvIGNvbnNpZGVyIGFueSBsb25nZXIsIGJ1dCB0byBoYXZlIGZpbmlzaGVkIGNvbnNpZGVyaW5nLiAgQW5kIHRoZXJlIGlzIGp1c3Qgb25lIHBvc3NpYmxlIHBsYW47ICBmb3IgYWxsIHRoaXMgbXVzdCBiZSBkb25lIGluIHRoZSBjb21pbmcgbmlnaHQuICBBbmQgaWYgd2UgZGVsYXkgaXQgY2FuIG5vIGxvbmdlciBiZSBkb25lLiAgQnV0IEkgYmVnIHlvdSwgU29jcmF0ZXMsIGRvIGFzIEkgc2F5IGFuZCBkb24ndCByZWZ1c2UuICAKPG1pbGVzdG9uZSBuPSI0NmIiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPk15IGRlYXIgQ3JpdG8sIHlvdXIgZWFnZXJuZXNzIGlzIHdvcnRoIGEgZ3JlYXQgZGVhbCwgaWYgaXQgc2hvdWxkIHByb3ZlIHRvIGJlIHJpZ2h0bHkgZGlyZWN0ZWQ7ICBidXQgb3RoZXJ3aXNlLCB0aGUgZ3JlYXRlciBpdCBpcywgdGhlIG1vcmUgaGFyZCB0byBiZWFyLiAgU28gd2UgbXVzdCBleGFtaW5lIHRoZSBxdWVzdGlvbiB3aGV0aGVyIHdlIG91Z2h0IHRvIGRvIHRoaXMgb3Igbm90OyAgZm9yIEkgYW0gbm90IG9ubHkgbm93IGJ1dCBhbHdheXMgYSBtYW4gd2hvIGZvbGxvd3Mgbm90aGluZyBidXQgdGhlIHJlYXNvbmluZyB3aGljaCBvbiBjb25zaWRlcmF0aW9uIHNlZW1zIHRvIG1lIGJlc3QuICBBdWQgSSBjYW5ub3QsIG5vdyB0aGF0IHRoaXMgaGFzIGhhcHBlbmVkIHRvIHVzLCBkaXNjYXJkIHRoZSBhcmd1bWVudHMgSSB1c2VkIHRvIGFkdmFuY2UsIGJ1dCB0aGV5IHNlZW0gdG8gbWUgbXVjaCB0aGUgc2FtZSBhcyBldmVyLAo8bWlsZXN0b25lIG49IjQ2YyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgSSByZXZlcmUgYW5kIGhvbm9yIHRoZSBzYW1lIG9uZXMgYXMgYmVmb3JlLiAgQW5kIHVubGVzcyB3ZSBjYW4gYnJpbmcgZm9yd2FyZCBiZXR0ZXIgb25lcyBpbiBvdXIgcHJlc2VudCBzaXR1YXRpb24sIGJlIGFzc3VyZWQgdGhhdCBJIHNoYWxsIG5vdCBnaXZlIHdheSB0byB5b3UsIG5vdCBldmVuIGlmIHRoZSBwb3dlciBvZiB0aGUgbXVsdGl0dWRlIGZyaWdodGVuIHVzIHdpdGggZXZlbiBtb3JlIHRlcnJvcnMgdGhhbiBhdCBwcmVzZW50LCBhcyBjaGlsZHJlbiBhcmUgZnJpZ2h0ZW5lZCB3aXRoIGdvYmxpbnMsIHRocmVhdGVuaW5nIHVzIHdpdGggaW1wcmlzb25tZW50cyBhbmQgZGVhdGhzIGFuZCBjb25maXNjYXRpb25zIG9mIHByb3BlcnR5LiAgTm93IGhvdyBjb3VsZCB3ZSBleGFtaW5lIHRoZSBtYXR0ZXIgbW9zdCByZWFzb25hYmx5PyAgQnkgdGFraW5nIHVwIGZpcnN0IHdoYXQgeW91IHNheSBhYm91dCBvcGluaW9ucyBhbmQgYXNraW5nIHdoZXRoZXIgd2Ugd2VyZSByaWdodCB3aGVuIHdlIGFsd2F5cyB1c2VkIHRvIHNheSB0aGF0IHdlIG91Z2h0IHRvIHBheSBhdHRlbnRpb24KPG1pbGVzdG9uZSBuPSI0NmQiIHVuaXQ9InNlY3Rpb24iIC8+dG8gc29tZSBvcGluaW9ucyBhbmQgbm90IHRvIG90aGVycz8gIE9yIHdlcmUgd2UgcmlnaHQgYmVmb3JlIEkgd2FzIGNvbmRlbW5lZCB0byBkZWF0aCwgd2hlcmVhcyBpdCBoYXMgaG93IGJlZW4gbWFkZSBjbGVhciB0aGF0IHdlIHdlcmUgdGFsa2luZyBtZXJlbHkgZm9yIHRoZSBzYWtlIG9mIGFyZ3VtZW50IGFuZCBpdCB3YXMgcmVhbGx5IG1lcmUgcGxheSBhbmQgbm9uc2Vuc2U/ICBBbmQgSSB3aXNoIHRvIGludmVzdGlnYXRlLCBDcml0bywgaW4gY29tbW9uIHdpdGggeW91LCBhbmQgc2VlIHdoZXRoZXIgb3VyIGZvcm1lciBhcmd1bWVudCBzZWVtcyBkaWZmZXJlbnQgdG8gbWUgdW5kZXIgb3VyIHByZXNlbnQgY29uZGl0aW9ucywgb3IgdGhlIHNhbWUsIGFuZCB3aGV0aGVyIHdlIHNoYWxsIGdpdmUgaXQgdXAgb3IgYmUgZ3VpZGVkIGJ5IGl0LiAgQnV0IGl0IHVzZWQgdG8gYmUgc2FpZCwgSSB0aGluaywgYnkgdGhvc2Ugd2hvIHRob3VnaHQgdGhleSB3ZXJlIHNwZWFraW5nIHNlbnNpYmx5LCBqdXN0IGFzIEkgd2FzIHNheWluZyBub3csIHRoYXQgb2YgdGhlIG9waW5pb25zIGhlbGQgYnkgbWVuCjxtaWxlc3RvbmUgbj0iNDZlIiB1bml0PSJzZWN0aW9uIiAvPnNvbWUgb3VnaHQgdG8gYmUgaGlnaGx5IGVzdGVlbWVkIGFuZCBvdGhlcnMgbm90LiAgSW4gR29kJ3MgbmFtZSwgQ3JpdG8sIGRvIHlvdSBub3QgdGhpbmsgdGhpcyBpcyBjb3JyZWN0PyAgRm9yIHlvdSwgaHVtYW5seSBzcGVha2luZywKPG1pbGVzdG9uZSBuPSI0NyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjQ3YSIgdW5pdD0ic2VjdGlvbiIgLz5hcmUgbm90IGludm9sdmVkIGluIHRoZSBuZWNlc3NpdHkgb2YgZHlpbmcgdG9tb3Jyb3csIGFuZCB0aGVyZWZvcmUgcHJlc2VudCBjb25kaXRpb25zIHdvdWxkIG5vdCBsZWFkIHlvdXIganVkZ21lbnQgYXN0cmF5LiAgTm93IHNheSwgZG8geW91IG5vdCB0aGluayB3ZSB3ZXJlIGNvcnJlY3QgaW4gc2F5aW5nIHRoYXQgd2Ugb3VnaHQgbm90IHRvIGVzdGVlbSBhbGwgdGhlIG9waW5pb25zIG9mIG1lbiwgYnV0IHNvbWUgYW5kIG5vdCBvdGhlcnMsIGFuZCBub3QgdGhvc2Ugb2YgYWxsIG1lbiwgYnV0IG9ubHkgb2Ygc29tZT8gIFdoYXQgZG8geW91IHRoaW5rPyAgSXMgbm90IHRoaXMgdHJ1ZT88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+SXQgaXMuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPlRoZW4gd2Ugb3VnaHQgdG8gZXN0ZWVtIHRoZSBnb29kIG9waW5pb25zIGFuZCBub3QgdGhlIGJhZCBvbmVzPzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5ZZXMuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkFuZCB0aGUgZ29vZCBvbmVzIGFyZSB0aG9zZSBvZiB0aGUgd2lzZSBhbmQgdGhlIGJhZCBvbmVzIHRob3NlIG9mIHRoZSBmb29saXNoPzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5PZiBjb3Vyc2UuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkNvbWUgdGhlbiwgd2hhdCB1c2VkIHdlIHRvIHNheSBhYm91dCB0aGlzPyAKPG1pbGVzdG9uZSBuPSI0N2IiIHVuaXQ9InNlY3Rpb24iIC8+SWYgYSBtYW4gaXMgYW4gYXRobGV0ZSBhbmQgbWFrZXMgdGhhdCBoaXMgYnVzaW5lc3MsIGRvZXMgaGUgcGF5IGF0dGVudGlvbiB0byBldmVyeSBtYW4ncyBwcmFpc2UgYW5kIGJsYW1lIGFuZCBvcGluaW9uIG9yIHRvIHRob3NlIG9mIG9uZSBtYW4gb25seSB3aG8gaXMgYSBwaHlzaWNpYW4gb3IgYSB0cmFpbmVyPzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5UbyB0aG9zZSBvZiBvbmUgbWFuIG9ubHkuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPlRoZW4gaGUgb3VnaHQgdG8gZmVhciB0aGUgYmxhbWUgYW5kIHdlbGNvbWUgdGhlIHByYWlzZSBvZiB0aGF0IG9uZSBtYW4gYW5kIG5vdCBvZiB0aGUgbXVsdGl0dWRlLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5PYnZpb3VzbHkuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkFuZCBoZSBtdXN0IGFjdCBhbmQgZXhlcmNpc2UgYW5kIGVhdCBhbmQgZHJpbmsgYXMgdGhlIG9uZSBtYW4gd2hvIGlzIGhpcyBkaXJlY3RvciBhbmQgd2hvIGtub3dzIHRoZSBidXNpbmVzcyB0aGlua3MgYmVzdCByYXRoZXIgdGhhbiBhcyBhbGwgdGhlIG90aGVycyB0aGluay48L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+VGhhdCBpcyB0cnVlLgo8bWlsZXN0b25lIG49IjQ3YyIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+V2VsbCB0aGVuOyAgaWYgaGUgZGlzb2JleXMgdGhlIG9uZSBtYW4gYW5kIGRpc3JlZ2FyZHMgaGlzIG9waW5pb24gYW5kIGhpcyBwcmFpc2UsIGJ1dCByZWdhcmRzIHdvcmRzIG9mIHRoZSBtYW55IHdobyBoYXZlIG5vIHNwZWNpYWwga25vd2xlZGdlLCB3aWxsIGhlIG5vdCBjb21lIHRvIGhhcm0/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPk9mIGNvdXJzZSBoZSB3aWxsLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5BbmQgd2hhdCBpcyB0aGlzIGhhcm0/ICBJbiB3aGF0IGRpcmVjdGlvbiBhbmQgdXBvbiB3aGF0IHBhcnQgb2YgdGhlIG9uZSB3aG8gZGlzb2JleXMgZG9lcyBpdCBhY3Q/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPkV2aWRlbnRseSB1cG9uIGhpcyBib2R5OyAgZm9yIHRoYXQgaXMgd2hhdCBpdCBydWlucy48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+UmlnaHQuICBUaGVuIGluIG90aGVyIG1hdHRlcnMsIG5vdCB0byBlbnVtZXJhdGUgdGhlbSBhbGwsIGluIHF1ZXN0aW9ucyBvZiByaWdodCBhbmQgd3JvbmcgYW5kIGRpc2dyYWNlZnVsIGFuZCBub2JsZSBhbmQgZ29vZCBhbmQgYmFkLCB3aGljaCB3ZSBhcmUgbm93IGNvbnNpZGVyaW5nLCBvdWdodCB3ZSB0byBmb2xsb3cgYW5kIGZlYXIKPG1pbGVzdG9uZSBuPSI0N2QiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIG9waW5pb24gb2YgdGhlIG1hbnkgb3IgdGhhdCBvZiB0aGUgb25lLCBpZiB0aGVyZSBpcyBhbnlvbmUgd2hvIGtub3dzIGFib3V0IHRoZW0sIHdob20gd2Ugb3VnaHQgdG8gcmV2ZXJlIGFuZCBmZWFyIG1vcmUgdGhhbiBhbGwgdGhlIG90aGVycz8gIEFuZCBpZiB3ZSBkbyBub3QgZm9sbG93IGhpbSwgd2Ugc2hhbGwgaW5qdXJlIGFuZCBjcmlwcGxlIHRoYXQgd2hpY2ggd2UgdXNlZCB0byBzYXkgaXMgYmVuZWZpdGVkIGJ5IHRoZSByaWdodCBhbmQgaXMgcnVpbmVkIGJ5IHRoZSB3cm9uZy4gIE9yIGlzIHRoZXJlIG5vdGhpbmcgaW4gdGhpcz88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+SSB0aGluayBpdCBpcyB0cnVlLCBTb2NyYXRlcy48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+V2VsbCB0aGVuLCBpZiB0aHJvdWdoIHlpZWxkaW5nIHRvIHRoZSBvcGluaW9uIG9mIHRoZSBpZ25vcmFudCB3ZSBydWluIHRoYXQgd2hpY2ggaXMgYmVuZWZpdGVkIGJ5IGhlYWx0aCBhbmQgaW5qdXJlZCBieSBkaXNlYXNlLAo8bWlsZXN0b25lIG49IjQ3ZSIgdW5pdD0ic2VjdGlvbiIgLz5pcyBsaWZlIHdvcnRoIGxpdmluZyBmb3IgdXMgd2hlbiB0aGF0IGlzIHJ1aW5lZD8gIEFuZCB0aGF0IGlzIHRoZSBib2R5LCBpcyBpdCBub3Q/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPlllcy48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+VGhlbiBpcyBsaWZlIHdvcnRoIGxpdmluZyB3aGVuIHRoZSBib2R5IGlzIHdvcnRobGVzcyBhbmQgcnVpbmVkPzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5DZXJ0YWlubHkgbm90LjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5CdXQgaXMgaXQgd29ydGggbGl2aW5nIHdoZW4gdGhhdCBpcyBydWluZWQgd2hpY2ggaXMgaW5qdXJlZCBieSB0aGUgd3JvbmcgYW5kIGltcHJvdmVkIGJ5IHRoZSByaWdodD8gIE9yIGRvIHdlIHRoaW5rIHRoYXQgcGFydCBvZiB1cywgd2hhdGV2ZXIgaXQgaXMsIHdoaWNoIGlzIGNvbmNlcm5lZCB3aXRoIHJpZ2h0IGFuZCB3cm9uZywKPG1pbGVzdG9uZSBuPSI0OCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjQ4YSIgdW5pdD0ic2VjdGlvbiIgLz5pcyBsZXNzIGltcG9ydGFudCB0aGFuIHRoZSBib2R5PzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5CeSBubyBtZWFucy48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+QnV0IG1vcmUgaW1wb3J0YW50PzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5NdWNoIG1vcmUuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPlRoZW4sIG1vc3QgZXhjZWxsZW50IGZyaWVuZCwgd2UgbXVzdCBub3QgY29uc2lkZXIgYXQgYWxsIHdoYXQgdGhlIG1hbnkgd2lsbCBzYXkgb2YgdXMsIGJ1dCB3aGF0IGhlIHdobyBrbm93cyBhYm91dCByaWdodCBhbmQgd3JvbmcsIHRoZSBvbmUgbWFuLCBhbmQgdHJ1dGggaGVyc2VsZiB3aWxsIHNheS4gIEFuZCBzbyB5b3UgaW50cm9kdWNlZCB0aGUgZGlzY3Vzc2lvbiB3cm9uZ2x5IGluIHRoZSBmaXJzdCBwbGFjZSwgd2hlbiB5b3UgYmVnYW4gYnkgc2F5aW5nIHdlIG91Z2h0IHRvIGNvbnNpZGVyIHRoZSBvcGluaW9uIG9mIHRoZSBtdWx0aXR1ZGUgYWJvdXQgdGhlIHJpZ2h0IGFuZCB0aGUgbm9ibGUgYW5kIHRoZSBnb29kIGFuZCB0aGVpciBvcHBvc2l0ZXMuIAo8bWlsZXN0b25lIG49IjQ4YiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaXQgbWlnaHQsIG9mIGNvdXJzZSwgYmUgc2FpZCB0aGF0IHRoZSBtdWx0aXR1ZGUgY2FuIHB1dCB1cyB0byBkZWF0aC48L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+VGhhdCBpcyBjbGVhciwgdG9vLiAgSXQgd291bGQgYmUgc2FpZCwgU29jcmF0ZXMuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPlRoYXQgaXMgdHJ1ZS4gIEJ1dCwgbXkgZnJpZW5kLCB0aGUgYXJndW1lbnQgd2UgaGF2ZSBqdXN0IGZpbmlzaGVkIHNlZW1zIHRvIG1lIHN0aWxsIG11Y2ggdGhlIHNhbWUgYXMgYmVmb3JlOyAgYW5kIG5vdyBzZWUgd2hldGhlciB3ZSBzdGlsbCBob2xkIHRvIHRoaXMsIG9yIG5vdCwgdGhhdCBpdCBpcyBub3QgbGl2aW5nLCBidXQgbGl2aW5nIHdlbGwgd2hpY2ggd2Ugb3VnaHQgdG8gY29uc2lkZXIgbW9zdCBpbXBvcnRhbnQuPC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPldlIGRvIGhvbGQgdG8gaXQuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkFuZCB0aGF0IGxpdmluZyB3ZWxsIGFuZCBsaXZpbmcgcmlnaHRseSBhcmUgdGhlIHNhbWUgdGhpbmcsIGRvIHdlIGhvbGQgdG8gdGhhdCwgb3Igbm90PzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5XZSBkby48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+VGhlbiB3ZSBhZ3JlZSB0aGF0IHRoZSBxdWVzdGlvbiBpcyB3aGV0aGVyIGl0IGlzIHJpZ2h0IGZvciBtZSB0byB0cnkgdG8gZXNjYXBlIGZyb20gaGVyZQo8bWlsZXN0b25lIG49IjQ4YyIgdW5pdD0ic2VjdGlvbiIgLz53aXRob3V0IHRoZSBwZXJtaXNzaW9uIG9mIHRoZSBBdGhlbmlhbnMsIG9yIG5vdCByaWdodC4gIEFuZCBpZiBpdCBhcHBlYXJzIHRvIGJlIHJpZ2h0LCBsZXQgdXMgdHJ5IGl0LCBhbmQgaWYgbm90LCBsZXQgdXMgZ2l2ZSBpdCB1cC4gIEJ1dCB0aGUgY29uc2lkZXJhdGlvbnMgeW91IHN1Z2dlc3QsIGFib3V0IHNwZW5kaW5nIG1vbmV5LCBhbmQgcmVwdXRhdGlvbiwgYW5kIGJyaW5naW5nIHVwIG15IGNoaWxkcmVuLCB0aGVzZSBhcmUgcmVhbGx5LCBDcml0bywgdGhlIHJlZmxlY3Rpb25zIG9mIHRob3NlIHdobyBsaWdodGx5IHB1dCBtZW4gdG8gZGVhdGgsIGFuZCB3b3VsZCBicmluZyB0aGVtIHRvIGxpZmUgYWdhaW4sIGlmIHRoZXkgY291bGQsIHdpdGhvdXQgYW55IHNlbnNlLCBJIG1lYW4gdGhlIG11bHRpdHVkZS4gIEJ1dCB3ZSwgc2luY2Ugb3VyIGFyZ3VtZW50IHNvIGNvbnN0cmFpbnMgdXMsIG11c3QgY29uc2lkZXIgb25seSB0aGUgcXVlc3Rpb24gd2UganVzdCBicm9hY2hlZCwgd2hldGhlciB3ZSBzaGFsbCBiZSBkb2luZyByaWdodCBpbiBnaXZpbmcgbW9uZXkKPG1pbGVzdG9uZSBuPSI0OGQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoYW5rcyB0byB0aGVzZSBtZW4gd2hvIHdpbGwgaGVscCBtZSB0byBlc2NhcGUsIGFuZCBpbiBlc2NhcGluZyBvciBhaWRpbmcgdGhlIGVzY2FwZSBvdXJzZWx2ZXMsIG9yIHNoYWxsIGluIHRydXRoIGJlIGRvaW5nIHdyb25nLCBpZiB3ZSBkbyBhbGwgdGhlc2UgdGhpbmdzLiAgQW5kIGlmIGl0IGFwcGVhcnMgdGhhdCBpdCBpcyB3cm9uZyBmb3IgdXMgdG8gZG8gdGhlbSwgaXQgbWF5IGJlIHRoYXQgd2Ugb3VnaHQgbm90IHRvIGNvbnNpZGVyIGVpdGhlciB3aGV0aGVyIHdlIG11c3QgZGllIGlmIHdlIHN0YXkgaGVyZSBhbmQga2VlcCBxdWlldCBvciB3aGV0aGVyIHdlIG11c3QgZW5kdXJlIGFueSB0aGluZyBlbHNlIHdoYXRzb2V2ZXIsIGJ1dCBvbmx5IHRoZSBxdWVzdGlvbiBvZiBkb2luZyB3cm9uZy48L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+SSB0aGluayB3aGF0IHlvdSBzYXkgaXMgcmlnaHQsIFNvY3JhdGVzOyAgYnV0IHRoaW5rIHdoYXQgd2Ugc2hvdWxkIGRvLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5MZXQgdXMsIG15IGdvb2QgZnJpZW5kLCBpbnZlc3RpZ2F0ZSBpbiBjb21tb24sIGFuZCBpZiB5b3UgY2FuIGNvbnRyYWRpY3QgYW55dGhpbmcgSSBzYXksIGRvIHNvLCBhbmQgSSB3aWxsIHlpZWxkIHRvIHlvdXIgYXJndW1lbnRzOyAKPG1pbGVzdG9uZSBuPSI0OGUiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IGlmIHlvdSBjYW5ub3QsIG15IGRlYXIgZnJpZW5kLCBzdG9wIGF0IG9uY2Ugc2F5aW5nIHRoZSBzYW1lIHRoaW5nIHRvIG1lIG92ZXIgYW5kIG92ZXIsIHRoYXQgSSBvdWdodCB0byBnbyBhd2F5IGZyb20gaGVyZSB3aXRob3V0IHRoZSBjb25zZW50IG9mIHRoZSBBdGhlbmlhbnM7ICBmb3IgSSBhbSBhbnhpb3VzIHRvIGFjdCBpbiB0aGlzIG1hdHRlciB3aXRoIHlvdXIgYXBwcm92YWwsIGFuZCBub3QgY29udHJhcnkgdG8geW91ciB3aXNoZXMuICBOb3cgc2VlIGlmIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGludmVzdGlnYXRpb24gc2F0aXNmaWVzIHlvdSwgYW5kIHRyeSB0byByZXBseQo8bWlsZXN0b25lIG49IjQ5IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNDlhIiB1bml0PSJzZWN0aW9uIiAvPnRvIG15IHF1ZXN0aW9ucyB0byB0aGUgYmVzdCBvZiB5b3VyIGJlbGllZi48L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+SSB3aWxsIHRyeS48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+T3VnaHQgd2UgaW4gbm8gd2F5IHRvIGRvIHdyb25nIGludGVudGlvbmFsbHksIG9yIHNob3VsZCB3ZSBkbyB3cm9uZyBpbiBzb21lIHdheXMgYnV0IG5vdCBpbiBvdGhlcnM/ICBPciwgYXMgd2Ugb2Z0ZW4gYWdyZWVkIGluIGZvcm1lciB0aW1lcywgaXMgaXQgbmV2ZXIgcmlnaHQgb3IgaG9ub3JhYmxlIHRvIGRvIHdyb25nPyAgT3IgaGF2ZSBhbGwgdGhvc2UgZm9ybWVyIGNvbmNsdXNpb25zIG9mIG91cnMgYmVlbiBvdmVydHVybmVkIGluIHRoZXNlIGZldyBkYXlzLCBhbmQgaGF2ZSB3ZSBvbGQgbWVuLAo8bWlsZXN0b25lIG49IjQ5YiIgdW5pdD0ic2VjdGlvbiIgLz5zZXJpb3VzbHkgY29udmVyc2luZyB3aXRoIGVhY2ggb3RoZXIsIGZhaWxlZCBhbGwgYWxvbmcgdG8gc2VlIHRoYXQgd2Ugd2VyZSBubyBiZXR0ZXIgdGhhbiBjaGlsZHJlbj8gIE9yIGlzIG5vdCB3aGF0IHdlIHVzZWQgdG8gc2F5IG1vc3QgY2VydGFpbmx5IHRydWUsIHdoZXRoZXIgdGhlIHdvcmxkIGFncmVlIG9yIG5vdD8gIEFuZCB3aGV0aGVyIHdlIG11c3QgZW5kdXJlIHN0aWxsIG1vcmUgZ3JpZXZvdXMgc3VmZmVyaW5ncyB0aGFuIHRoZXNlLCBvciBsaWdodGVyIG9uZXMsIGlzIG5vdCB3cm9uZ2RvaW5nIGluZXZpdGFibHkgYW4gZXZpbCBhbmQgYSBkaXNncmFjZSB0byB0aGUgd3Jvbmdkb2VyPyAgRG8gd2UgYmVsaWV2ZSB0aGlzIG9yIG5vdD88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+V2UgZG8uPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPlRoZW4gd2Ugb3VnaHQgbm90IHRvIGRvIHdyb25nIGF0IGFsbC48L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+V2h5LCBuby48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+QW5kIHdlIG91Z2h0IG5vdCBldmVuIHRvIHJlcXVpdGUgd3Jvbmcgd2l0aCB3cm9uZywgYXMgdGhlIHdvcmxkIHRoaW5rcywgc2luY2Ugd2UgbXVzdCBub3QgZG8gd3JvbmcgYXQgYWxsLgo8bWlsZXN0b25lIG49IjQ5YyIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+QXBwYXJlbnRseSBub3QuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPldlbGwsIENyaXRvLCBvdWdodCBvbmUgdG8gZG8gZXZpbCBvciBub3Q/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPkNlcnRhaW5seSBub3QsIFNvY3JhdGVzLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5XZWxsLCB0aGVuLCBpcyBpdCByaWdodCB0byByZXF1aXRlIGV2aWwgd2l0aCBldmlsLCBhcyB0aGUgd29ybGQgc2F5cyBpdCBpcywgb3Igbm90IHJpZ2h0PzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5Ob3QgcmlnaHQsIGNlcnRhaW5seS48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+Rm9yIGRvaW5nIGV2aWwgdG8gcGVvcGxlIGlzIHRoZSBzYW1lIHRoaW5nIGFzIHdyb25naW5nIHRoZW0uPC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPlRoYXQgaXMgdHJ1ZS48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+VGhlbiB3ZSBvdWdodCBuZWl0aGVyIHRvIHJlcXVpdGUgd3Jvbmcgd2l0aCB3cm9uZyBub3IgdG8gZG8gZXZpbCB0byBhbnlvbmUsIG5vIG1hdHRlciB3aGF0IGhlIG1heSBoYXZlIGRvbmUgdG8gdXMuIAo8bWlsZXN0b25lIG49IjQ5ZCIgdW5pdD0ic2VjdGlvbiIgLz5BbmQgYmUgY2FyZWZ1bCwgQ3JpdG8sIHRoYXQgeW91IGRvIG5vdCwgaW4gYWdyZWVpbmcgdG8gdGhpcywgYWdyZWUgdG8gc29tZXRoaW5nIHlvdSBkbyBub3QgYmVsaWV2ZTsgIGZvciBJIGtub3cgdGhhdCB0aGVyZSBhcmUgZmV3IHdobyBiZWxpZXZlIG9yIGV2ZXIgd2lsbCBiZWxpZXZlIHRoaXMuICBOb3cgdGhvc2Ugd2hvIGJlbGlldmUgdGhpcywgYW5kIHRob3NlIHdobyBkbyBub3QsIGhhdmUgbm8gY29tbW9uIGdyb3VuZCBvZiBkaXNjdXNzaW9uLCBidXQgdGhleSBtdXN0IG5lY2Vzc2FyaWx5LCBpbiB2aWV3IG9mIHRoZWlyIG9waW5pb25zLCBkZXNwaXNlIG9uZSBhbm90aGVyLiAgRG8geW91IHRoZXJlZm9yZSBjb25zaWRlciB2ZXJ5IGNhcmVmdWxseSB3aGV0aGVyIHlvdSBhZ3JlZSBhbmQgc2hhcmUgaW4gdGhpcyBvcGluaW9uLCBhbmQgbGV0IHVzIHRha2UgYXMgdGhlIHRoZSBzdGFydGluZyBwb2ludCBvZiBvdXIgZGlzY3Vzc2lvbiB0aGUgYXNzdW1wdGlvbiB0aGF0IGl0IGlzIG5ldmVyIHJpZ2h0IHRvIGRvIHdyb25nIG9yIHRvIHJlcXVpdGUgd3Jvbmcgd2l0aCB3cm9uZywgb3Igd2hlbiB3ZSBzdWZmZXIgZXZpbCB0byBkZWZlbmQgb3Vyc2VsdmVzIGJ5IGRvaW5nIGV2aWwgaW4gcmV0dXJuLiAgT3IgZG8geW91IGRpc2FncmVlIGFuZCByZWZ1c2UgeW91ciBhc3NlbnQKPG1pbGVzdG9uZSBuPSI0OWUiIHVuaXQ9InNlY3Rpb24iIC8+dG8gdGhpcyBzdGFydGluZyBwb2ludD8gIEZvciBJIGhhdmUgbG9uZyBoZWxkIHRoaXMgYmVsaWVmIGFuZCBJIGhvbGQgaXQgeWV0LCBidXQgaWYgeW91IGhhdmUgcmVhY2hlZCBhbnkgb3RoZXIgY29uY2x1c2lvbiwgc3BlYWsgYW5kIGV4cGxhaW4gaXQgdG8gbWUuICBJZiB5b3Ugc3RpbGwgaG9sZCB0byBvdXIgZm9ybWVyIG9waW5pb24sIGhlYXIgdGhlIG5leHQgcG9pbnQuPC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPkkgZG8gaG9sZCB0byBpdCBhbmQgSSBhZ3JlZSB3aXRoIHlvdTsgIHNvIGdvIG9uLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5Ob3cgdGhlIG5leHQgdGhpbmcgSSBzYXksIG9yIHJhdGhlciBhc2ssIGlzIHRoaXM6ICDigJxvdWdodCBhIG1hbiB0byBkbyB3aGF0IGhlIGhhcyBhZ3JlZWQgdG8gZG8sIHByb3ZpZGVkIGl0IGlzIHJpZ2h0LCBvciBtYXkgaGUgdmlvbGF0ZSBoaXMgYWdyZWVtZW50cz/igJ08L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+SGUgb3VnaHQgdG8gZG8gaXQuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPlRoZW4gY29uc2lkZXIgd2hldGhlciwgaWYgd2UgZ28gYXdheQo8bWlsZXN0b25lIG49IjUwIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNTBhIiB1bml0PSJzZWN0aW9uIiAvPmZyb20gaGVyZSB3aXRob3V0IHRoZSBjb25zZW50IG9mIHRoZSBzdGF0ZSwgd2UgYXJlIGRvaW5nIGhhcm0gdG8gdGhlIHZlcnkgb25lcyB0byB3aG9tIHdlIGxlYXN0IG91Z2h0IHRvIGRvIGhhcm0sIG9yIG5vdCwgYW5kIHdoZXRoZXIgd2UgYXJlIGFiaWRpbmcgYnkgd2hhdCB3ZSBhZ3JlZWQgd2FzIHJpZ2h0LCBvciBub3QuPC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPkkgY2Fubm90IGFuc3dlciB5b3VyIHF1ZXN0aW9uLCBTb2NyYXRlcywgZm9yIEkgZG8gbm90IHVuZGVyc3RhbmQuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkNvbnNpZGVyIGl0IGluIHRoaXMgd2F5LiAgSWYsIGFzIEkgd2FzIG9uIHRoZSBwb2ludCBvZiBydW5uaW5nIGF3YXkgKG9yIHdoYXRldmVyIGl0IHNob3VsZCBiZSBjYWxsZWQpLCB0aGUgbGF3cyBhbmQgdGhlIGNvbW1vbndlYWx0aCBzaG91bGQgY29tZSB0byBtZSBhbmQgYXNrLCDigJxUZWxsIG1lLCBTb2NyYXRlcywgd2hhdCBoYXZlIHlvdSBpbiBtaW5kIHRvIGRvPyAgQXJlIHlvdSBub3QgaW50ZW5kaW5nIGJ5IHRoaXMgdGhpbmcgeW91IGFyZSB0cnlpbmcgdG8gZG8sIHRvIGRlc3Ryb3kgdXMsCjxtaWxlc3RvbmUgbj0iNTBiIiB1bml0PSJzZWN0aW9uIiAvPnRoZSBsYXdzLCBhbmQgdGhlIGVudGlyZSBzdGF0ZSwgc28gZmFyIGFzIGluIHlvdSBsaWVzPyAgT3IgZG8geW91IHRoaW5rIHRoYXQgc3RhdGUgY2FuIGV4aXN0IGFuZCBub3QgYmUgb3ZlcnR1cm5lZCwgaW4gd2hpY2ggdGhlIGRlY2lzaW9ucyByZWFjaGVkIGJ5IHRoZSBjb3VydHMgaGF2ZSBubyBmb3JjZSBidXQgYXJlIG1hZGUgaW52YWxpZCBhbmQgYW5udWxsZWQgYnkgcHJpdmF0ZSBwZXJzb25zP+KAnSAgV2hhdCBzaGFsbCB3ZSBzYXksIENyaXRvLCBpbiByZXBseSB0byB0aGlzIHF1ZXN0aW9uIGFuZCBvdGhlcnMgb2YgdGhlIHNhbWUga2luZD8gIEZvciBvbmUgbWlnaHQgc2F5IG1hbnkgdGhpbmdzLCBlc3BlY2lhbGx5IGlmIG9uZSB3ZXJlIGFuIG9yYXRvciwgYWJvdXQgdGhlIGRlc3RydWN0aW9uIG9mIHRoYXQgbGF3IHdoaWNoIHByb3ZpZGVzIHRoYXQgdGhlIGRlY2lzaW9ucyByZWFjaGVkIGJ5IHRoZSBjb3VydHMgc2hhbGwgYmUgdmFsaWQuICBPciBzaGFsbCB3ZSBzYXkgdG8gdGhlbSwKPG1pbGVzdG9uZSBuPSI1MGMiIHVuaXQ9InNlY3Rpb24iIC8+4oCcVGhlIHN0YXRlIHdyb25nZWQgbWUgYW5kIGRpZCBub3QganVkZ2UgdGhlIGNhc2UgcmlnaHRseeKAnT8gIFNoYWxsIHdlIHNheSB0aGF0LCBvciB3aGF0PzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5UaGF0IGlzIHdoYXQgd2Ugc2hhbGwgc2F5LCBieSBaZXVzLCBTb2NyYXRlcy48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+V2hhdCB0aGVuIGlmIHRoZSBsYXdzIHNob3VsZCBzYXksIOKAnFNvY3JhdGVzLCBpcyB0aGlzIHRoZSBhZ3JlZW1lbnQgeW91IG1hZGUgd2l0aCB1cywgb3IgZGlkIHlvdSBhZ3JlZSB0byBhYmlkZSBieSB0aGUgdmVyZGljdHMgcHJvbm91bmNlZCBieSB0aGUgc3RhdGU/4oCdICBOb3cgaWYgSSB3ZXJlIHN1cnByaXNlZCBieSB3aGF0IHRoZXkgc2FpZCwgcGVyaGFwcyB0aGV5IHdvdWxkIGNvbnRpbnVlLCDigJxEb24ndCBiZSBzdXJwcmlzZWQgYXQgd2hhdCB3ZSBzYXksIFNvY3JhdGVzLCBidXQgYW5zd2VyLCBzaW5jZSB5b3UgYXJlIGluIHRoZSBoYWJpdCBvZiBlbXBsb3lpbmcgdGhlIG1ldGhvZCBvZiBxdWVzdGlvbiBhbmQgYW5zd2VyLiAgQ29tZSwKPG1pbGVzdG9uZSBuPSI1MGQiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCBmYXVsdCBkbyB5b3UgZmluZCB3aXRoIHVzIGFuZCB0aGUgc3RhdGUsIHRoYXQgeW91IGFyZSB0cnlpbmcgdG8gZGVzdHJveSB1cz8gIEluIHRoZSBmaXJzdCBwbGFjZSwgZGlkIHdlIG5vdCBicmluZyB5b3UgZm9ydGg/ICBJcyBpdCBub3QgdGhyb3VnaCB1cyB0aGF0IHlvdXIgZmF0aGVyIG1hcnJpZWQgeW91ciBtb3RoZXIgYW5kIGJlZ2F0IHlvdT8gIE5vdyB0ZWxsIHVzLCBoYXZlIHlvdSBhbnkgZmF1bHQgdG8gZmluZCB3aXRoIHRob3NlIG9mIHVzIHdobyBhcmUgdGhlIGxhd3Mgb2YgbWFycmlhZ2U/4oCdICDigJxJIGZpbmQgbm8gZmF1bHQs4oCdIEkgc2hvdWxkIHNheS4gIOKAnE9yIHdpdGggdGhvc2UgdGhhdCBoYXZlIHRvIGRvIHdpdGggdGhlIG51cnR1cmUgb2YgdGhlIGNoaWxkIGFmdGVyIGhlIGlzIGJvcm4gYW5kIHdpdGggaGlzIGVkdWNhdGlvbiB3aGljaCB5b3UsIGxpa2Ugb3RoZXJzLCByZWNlaXZlZD8gIERpZCB0aG9zZSBvZiB1cyB3aG8gYXJlIGFzc2lnbmVkIHRvIHRoZXNlIG1hdHRlcnMgbm90IGdpdmUgZ29vZCBkaXJlY3Rpb25zIHdoZW4gd2UgdG9sZCB5b3VyIGZhdGhlciB0byBlZHVjYXRlIHlvdSBpbiBtdXNpYyBhbmQgZ3ltbmFzdGljcz/igJ0gCjxtaWxlc3RvbmUgbj0iNTBlIiB1bml0PSJzZWN0aW9uIiAvPuKAnFlvdSBkaWQs4oCdIEkgc2hvdWxkIHNheS4gIOKAnFdlbGwgdGhlbiwgd2hlbiB5b3Ugd2VyZSBib3JuIGFuZCBudXJ0dXJlZCBhbmQgZWR1Y2F0ZWQsIGNvdWxkIHlvdSBzYXkgdG8gYmVnaW4gd2l0aCB0aGF0IHlvdSB3ZXJlIG5vdCBvdXIgb2Zmc3ByaW5nIGFuZCBvdXIgc2xhdmUsIHlvdSB5b3Vyc2VsZiBhbmQgeW91ciBhbmNlc3RvcnM/ICBBbmQgaWYgdGhpcyBpcyBzbywgZG8geW91IHRoaW5rIHJpZ2h0IGFzIGJldHdlZW4geW91IGFuZCB1cyByZXN0cyBvbiBhIGJhc2lzIG9mIGVxdWFsaXR5LCBzbyB0aGF0IHdoYXRldmVyIHdlIHVuZGVydGFrZSB0byBkbyB0byB5b3UgaXQgaXMgcmlnaHQgZm9yIHlvdSB0byByZXRhbGlhdGU/ICBUaGVyZSB3YXMgbm8gc3VjaCBlcXVhbGl0eSBvZiByaWdodCBiZXR3ZWVuIHlvdSBhbmQgeW91ciBmYXRoZXIgb3IgeW91ciBtYXN0ZXIsIGlmIHlvdSBoYWQgb25lLCBzbyB0aGF0IHdoYXRldmVyIHRyZWF0bWVudCB5b3UgcmVjZWl2ZWQgeW91IG1pZ2h0IHJldHVybiBpdCwgYW5zd2VyaW5nIHRoZW0gaWYgeW91IHdlcmUgcmV2aWxlZCwKPG1pbGVzdG9uZSBuPSI1MSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjUxYSIgdW5pdD0ic2VjdGlvbiIgLz5vciBzdHJpa2luZyBiYWNrIGlmIHlvdSB3ZXJlIHN0cnVjaywgYW5kIHRoZSBsaWtlOyAgYW5kIGRvIHlvdSB0aGluayB0aGF0IGl0IHdpbGwgYmUgcHJvcGVyIGZvciB5b3UgdG8gYWN0IHNvIHRvd2FyZCB5b3VyIGNvdW50cnkgYW5kIHRoZSBsYXdzLCBzbyB0aGF0IGlmIHdlIHVuZGVydGFrZSB0byBkZXN0cm95IHlvdSwgdGhpbmtpbmcgaXQgaXMgcmlnaHQsIHlvdSB3aWxsIHVuZGVydGFrZSBpbiByZXR1cm4gdG8gZGVzdHJveSB1cyBsYXdzIGFuZCB5b3VyIGNvdW50cnksIHNvIGZhciBhcyB5b3UgYXJlIGFibGUsIGFuZCB3aWxsIHNheSB0aGF0IGluIGRvaW5nIHRoaXMgeW91IGFyZSBkb2luZyByaWdodCwgeW91IHdobyByZWFsbHkgY2FyZSBmb3IgdmlydHVlPyAgT3IgaXMgeW91ciB3aXNkb20gc3VjaCB0aGF0IHlvdSBkbyBub3Qgc2VlIHRoYXQgeW91ciBjb3VudHJ5IGlzIG1vcmUgcHJlY2lvdXMgYW5kIG1vcmUgdG8gYmUgcmV2ZXJlZCBhbmQgaXMgaG9saWVyIGFuZCBpbiBoaWdoZXIgZXN0ZWVtCjxtaWxlc3RvbmUgbj0iNTFiIiB1bml0PSJzZWN0aW9uIiAvPmFtb25nIHRoZSBnb2RzIGFuZCBhbW9uZyBtZW4gb2YgdW5kZXJzdGFuZGluZyB0aGFuIHlvdXIgbW90aGVyIGFuZCB5b3VyIGZhdGhlciBhbmQgYWxsIHlvdXIgYW5jZXN0b3JzLCBhbmQgdGhhdCB5b3Ugb3VnaHQgdG8gc2hvdyB0byBoZXIgbW9yZSByZXZlcmVuY2UgYW5kIG9iZWRpZW5jZSBhbmQgaHVtaWxpdHkgd2hlbiBzaGUgaXMgYW5ncnkgdGhhbiB0byB5b3VyIGZhdGhlciwgYW5kIG91Z2h0IGVpdGhlciB0byBjb252aW5jZSBoZXIgYnkgcGVyc3Vhc2lvbiBvciB0byBkbyB3aGF0ZXZlciBzaGUgY29tbWFuZHMsIGFuZCB0byBzdWZmZXIsIGlmIHNoZSBjb21tYW5kcyB5b3UgdG8gc3VmZmVyLCBpbiBzaWxlbmNlLCBhbmQgaWYgc2hlIG9yZGVycyB5b3UgdG8gYmUgc2NvdXJnZWQgb3IgaW1wcmlzb25lZCBvciBpZiBzaGUgbGVhZHMgeW91IHRvIHdhciB0byBiZSB3b3VuZGVkIG9yIHNsYWluLCBoZXIgd2lsbCBpcyB0byBiZSBkb25lLCBhbmQgdGhpcyBpcyByaWdodCwgYW5kIHlvdSBtdXN0IG5vdCBnaXZlIHdheSBvciBkcmF3IGJhY2sgb3IgbGVhdmUgeW91ciBwb3N0LCBidXQgaW4gd2FyIGFuZCBpbiBjb3VydCBhbmQgZXZlcnl3aGVyZSwKPG1pbGVzdG9uZSBuPSI1MWMiIHVuaXQ9InNlY3Rpb24iIC8+eW91IG11c3QgZG8gd2hhdGV2ZXIgdGhlIHN0YXRlLCB5b3VyIGNvdW50cnksIGNvbW1hbmRzLCBvciBtdXN0IHNob3cgaGVyIGJ5IHBlcnN1YXNpb24gd2hhdCBpcyByZWFsbHkgcmlnaHQsIGJ1dCB0aGF0IGl0IGlzIGltcGlvdXMgdG8gdXNlIHZpb2xlbmNlIGFnYWluc3QgZWl0aGVyIHlvdXIgZmF0aGVyIG9yIHlvdXIgbW90aGVyLCBhbmQgbXVjaCBtb3JlIGltcGlvdXMgdG8gdXNlIGl0IGFnYWluc3QgeW91ciBjb3VudHJ5P+KAnSAgV2hhdCBzaGFsbCB3ZSByZXBseSB0byB0aGlzLCBDcml0bywgdGhhdCB0aGUgbGF3cyBzcGVhayB0aGUgdHJ1dGgsIG9yIG5vdD88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+SSB0aGluayB0aGV5IGRvLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD7igJxPYnNlcnZlIHRoZW4sIFNvY3JhdGVzLOKAnSBwZXJoYXBzIHRoZSBsYXdzIHdvdWxkIHNheSwg4oCcdGhhdCBpZiB3aGF0IHdlIHNheSBpcyB0cnVlLCB3aGF0IHlvdSBhcmUgbm93IHVuZGVydGFraW5nIHRvIGRvIHRvIHVzIGlzIG5vdCByaWdodC4gIEZvciB3ZSBicm91Z2h0IHlvdSBpbnRvIHRoZSB3b3JsZCwgbnVydHVyZWQgeW91LCBhbmQgZ2F2ZSBhIHNoYXJlIG9mIGFsbCB0aGUgZ29vZCB0aGluZ3MKPG1pbGVzdG9uZSBuPSI1MWQiIHVuaXQ9InNlY3Rpb24iIC8+d2UgY291bGQgdG8geW91IGFuZCBhbGwgdGhlIGNpdGl6ZW5zLiAgWWV0IHdlIHByb2NsYWltLCBieSBoYXZpbmcgb2ZmZXJlZCB0aGUgb3Bwb3J0dW5pdHkgdG8gYW55IG9mIHRoZSBBdGhlbmlhbnMgd2hvIHdpc2hlcyB0byBhdmFpbCBoaW1zZWxmIG9mIGl0LCB0aGF0IGFueW9uZSB3aG8gaXMgbm90IHBsZWFzZWQgd2l0aCB1cyB3aGVuIGhlIGhhcyBiZWNvbWUgYSBtYW4gYW5kIGhhcyBzZWVuIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgY2l0eSBhbmQgdXMsIHRoZSBsYXdzLCBtYXkgdGFrZSBoaXMgZ29vZHMgYW5kIGdvIGF3YXkgd2hlcmV2ZXIgaGUgbGlrZXMuICBBbmQgbm9uZSBvZiB1cyBzdGFuZHMgaW4gdGhlIHdheSBvciBmb3JiaWRzIGFueSBvZiB5b3UgdG8gdGFrZSBoaXMgZ29vZHMgYW5kIGdvIGF3YXkgd2hlcmV2ZXIgaGUgcGxlYXNlcywgaWYgd2UgYW5kIHRoZSBzdGF0ZSBkbyBub3QgcGxlYXNlIGhpbSwgd2hldGhlciBpdCBiZSB0byBhbiBBdGhlbmlhbiBjb2xvbnkgb3IgdG8gYSBmb3JlaWduIGNvdW50cnkgd2hlcmUgaGUgd2lsbCBsaXZlIGFzIGFuIGFsaWVuLiAgQnV0IHdlIHNheSB0aGF0CjxtaWxlc3RvbmUgbj0iNTFlIiB1bml0PSJzZWN0aW9uIiAvPndob2V2ZXIgb2YgeW91IHN0YXlzIGhlcmUsIHNlZWluZyBob3cgd2UgYWRtaW5pc3RlciBqdXN0aWNlIGFuZCBob3cgd2UgZ292ZXJuIHRoZSBzdGF0ZSBpbiBvdGhlciByZXNwZWN0cywgaGFzIHRoZXJlYnkgZW50ZXJlZCBpbnRvIGFuIGFncmVlbWVudCB3aXRoIHVzIHRvIGRvIHdoYXQgd2UgY29tbWFuZDsgIGFuZCB3ZSBzYXkgdGhhdCBoZSB3aG8gZG9lcyBub3Qgb2JleSBkb2VzIHRocmVlZm9sZCB3cm9uZywgYmVjYXVzZSBoZSBkaXNvYmV5cyB1cyB3aG8gYXJlIGhpcyBwYXJlbnRzLCBiZWNhdXNlIGhlIGRpc29iZXlzIHVzIHdobyBudXJ0dXJlZCBoaW0sIGFuZCBiZWNhdXNlIGFmdGVyIGFncmVlaW5nIHRvIG9iZXkgdXMgaGUgbmVpdGhlciBvYmV5cyB1cyBub3IgY29udmluY2VzIHVzIHRoYXQKPG1pbGVzdG9uZSBuPSI1MiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjUyYSIgdW5pdD0ic2VjdGlvbiIgLz53ZSBhcmUgd3JvbmcsIHRob3VnaCB3ZSBnaXZlIGhpbSB0aGUgb3Bwb3J0dW5pdHkgYW5kIGRvIG5vdCByb3VnaGx5IG9yZGVyIGhpbSB0byBkbyB3aGF0IHdlIGNvbW1hbmQsIGJ1dCB3aGVuIHdlIGFsbG93IGhpbSBhIGNob2ljZSBvZiB0d28gdGhpbmdzLCBlaXRoZXIgdG8gY29udmluY2UgdXMgb2YgZXJyb3Igb3IgdG8gZG8gb3VyIGJpZGRpbmcsIGhlIGRvZXMgbmVpdGhlciBvZiB0aGVzZSB0aGluZ3Mu4oCdICDigJxXZSBzYXkgdGhhdCB5b3UsIFNvY3JhdGVzLCB3aWxsIGJlIGV4cG9zZWQgdG8gdGhlc2UgcmVwcm9hY2hlcywgaWYgeW91IGRvIHdoYXQgeW91IGhhdmUgaW4gbWluZCwgYW5kIHlvdSBub3QgbGVhc3Qgb2YgdGhlIEF0aGVuaWFucyBidXQgbW9yZSB0aGFuIG1vc3Qgb3RoZXJzLuKAnSAgSWYgdGhlbiBJIHNob3VsZCBzYXksIOKAnEhvdyBzbz/igJ0gcGVyaGFwcyB0aGV5IG1pZ2h0IHJldG9ydCB3aXRoIGp1c3RpY2UgdGhhdCBJIGhhZCBtYWRlIHRoaXMgYWdyZWVtZW50IHdpdGggdGhlbSBtb3JlIGVtcGhhdGljYWxseSB0aGFuIG1vc3Qgb3RoZXIgQXRoZW5pYW5zLiAgRm9yIHRoZXkgd291bGQgc2F5LAo8bWlsZXN0b25lIG49IjUyYiIgdW5pdD0ic2VjdGlvbiIgLz7igJxTb2NyYXRlcywgd2UgaGF2ZSBzdHJvbmcgZXZpZGVuY2UgdGhhdCB3ZSBhbmQgdGhlIGNpdHkgcGxlYXNlZCB5b3U7ICBmb3IgeW91IHdvdWxkIG5ldmVyIGhhdmUgc3RheWVkIGluIGl0IG1vcmUgdGhhbiBhbGwgb3RoZXIgQXRoZW5pYW5zIGlmIHlvdSBoYWQgbm90IGJlZW4gYmV0dGVyIHBsZWFzZWQgd2l0aCBpdCB0aGFuIHRoZXk7ICB5b3UgbmV2ZXIgd2VudCBvdXQgZnJvbSB0aGUgY2l0eSB0byBhIGZlc3RpdmFsLCBvciBhbnl3aGVyZSBlbHNlLCBleGNlcHQgb24gbWlsaXRhcnkgc2VydmljZSwgYW5kIHlvdSBuZXZlciBtYWRlIGFueSBvdGhlciBqb3VybmV5LCBhcyBvdGhlciBwZW9wbGUgZG8sIGFuZCB5b3UgaGFkIG5vIHdpc2ggdG8ga25vdyBhbnkgb3RoZXIgY2l0eSBvciBvdGhlciBsYXdzLCBidXQgeW91IHdlcmUgY29udGVudGVkIHdpdGggdXMgYW5kIG91ciBjaXR5LiAgU28gc3Ryb25nbHkgZGlkIHlvdSBwcmVmZXIgdXMKPG1pbGVzdG9uZSBuPSI1MmMiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGFncmVlIHRvIGxpdmUgaW4gYWNjb3JkYW5jZSB3aXRoIHVzOyAgYW5kIGJlc2lkZXMsIHlvdSBiZWdhdCBjaGlsZHJlbiBpbiB0aGUgY2l0eSwgc2hvd2luZyB0aGF0IGl0IHBsZWFzZWQgeW91LiAgQW5kIG1vcmVvdmVyIGV2ZW4gYXQgeW91ciB0cmlhbCB5b3UgbWlnaHQgaGF2ZSBvZmZlcmVkIGV4aWxlIGFzIHlvdXIgcGVuYWx0eSwgaWYgeW91IHdpc2hlZCwgYW5kIG1pZ2h0IGhhdmUgZG9uZSB3aXRoIHRoZSBzdGF0ZSdzIGNvbnNlbnQgd2hhdCB5b3UgYXJlIG5vdyB1bmRlcnRha2luZyB0byBkbyB3aXRob3V0IGl0LiAgQnV0IHlvdSB0aGVuIHB1dCBvbiBhaXJzIGFuZCBzYWlkIHlvdSB3ZXJlIG5vdCBkaXN0dXJiZWQgaWYgeW91IG11c3QgZGllLCBhbmQgeW91IHByZWZlcnJlZCwgYXMgeW91IHNhaWQsIGRlYXRoIHRvIGV4aWxlLiAgQW5kIG5vdyB5b3UgYXJlIG5vdCBhc2hhbWVkIHRvIHRoaW5rIG9mIHRob3NlIHdvcmRzIGFuZCB5b3UgZG8gbm90IHJlc3BlY3QgdXMsIHRoZSBsYXdzLCBzaW5jZSB5b3UgYXJlIHRyeWluZyB0byBicmluZyB1cyB0byBuYXVnaHQ7IAo8bWlsZXN0b25lIG49IjUyZCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgeW91IGFyZSBkb2luZyB3aGF0IHRoZSBtZWFuZXN0IHNsYXZlIHdvdWxkIGRvLCBzaW5jZSB5b3UgYXJlIHRyeWluZyB0byBydW4gYXdheSBjb250cmFyeSB0byB0aGUgY29tcGFjdHMgYW5kIGFncmVlbWVudHMgeW91IG1hZGUgd2l0aCB1cyB0aGF0IHlvdSB3b3VsZCBsaXZlIGluIGFjY29yZGFuY2Ugd2l0aCB1cy4gIEZpcnN0IHRoZW4sIGFuc3dlciB0aGlzIHF1ZXN0aW9uLCB3aGV0aGVyIHdlIHNwZWFrIHRoZSB0cnV0aCBvciBub3Qgd2hlbiB3ZSBzYXkgdGhhdCB5b3UgYWdyZWVkLCBub3QgaW4gd29yZCwgYnV0IGJ5IHlvdXIgYWN0cywgdG8gbGl2ZSBpbiBhY2NvcmRhbmNlIHdpdGggdXMu4oCdICBXaGF0IHNoYWxsIHdlIHNheSB0byB0aGlzLCBDcml0bz8gIE11c3Qgd2Ugbm90IGFncmVlIHRoYXQgaXQgaXMgdHJ1ZT88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+V2UgbXVzdCwgU29jcmF0ZXMuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPuKAnEFyZSB5b3UgdGhlbizigJ0gdGhleSB3b3VsZCBzYXksIOKAnG5vdCBicmVha2luZwo8bWlsZXN0b25lIG49IjUyZSIgdW5pdD0ic2VjdGlvbiIgLz55b3VyIGNvbXBhY3RzIGFuZCBhZ3JlZW1lbnRzIHdpdGggdXMsIHRob3VnaCB5b3Ugd2VyZSBub3QgbGVkIGludG8gdGhlbSBieSBjb21wdWxzaW9uIG9yIGZyYXVkLCBhbmQgd2VyZSBub3QgZm9yY2VkIHRvIG1ha2UgdXAgeW91ciBtaW5kIGluIGEgc2hvcnQgdGltZSwgYnV0IGhhZCBzZXZlbnR5IHllYXJzLCBpbiB3aGljaCB5b3UgY291bGQgaGF2ZSBnb25lIGF3YXksIGlmIHdlIGRpZCBub3QgcGxlYXNlIHlvdSBhbmQgaWYgeW91IHRob3VnaHQgdGhlIGFncmVlbWVudHMgd2VyZSB1bmZhaXI/ICBCdXQgeW91IHByZWZlcnJlZCBuZWl0aGVyIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDExMDY1IiBrZXk9InRnbiw3MDExMDY1Ij5MYWNlZGFlbW9uPC9wbGFjZU5hbWU+IG5vciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMjA1NiIga2V5PSJ0Z24sNzAxMjA1NiI+Q3JldGU8L3BsYWNlTmFtZT4sIHdoaWNoIHlvdSBhcmUgYWx3YXlzIHNheWluZyBhcmUgd2VsbCBnb3Zlcm5lZCwgbm9yIGFueSBvdGhlciBvZiB0aGUgR3JlZWsgc3RhdGVzLAo8bWlsZXN0b25lIG49IjUzIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNTNhIiB1bml0PSJzZWN0aW9uIiAvPm9yIG9mIHRoZSBmb3JlaWduIG9uZXMsIGJ1dCB5b3Ugd2VudCBhd2F5IGZyb20gdGhpcyBjaXR5IGxlc3MgdGhhbiB0aGUgbGFtZSBhbmQgdGhlIGJsaW5kIGFuZCB0aGUgb3RoZXIgY3JpcHBsZXMuICBTbyBtdWNoIG1vcmUgdGhhbiB0aGUgb3RoZXIgQXRoZW5pYW5zIHdlcmUgeW91IHNhdGlzZmllZCB3aXRoIHRoZSBjaXR5IGFuZCBldmlkZW50bHkgdGhlcmVmb3JlIHdpdGggdXMsIGl0cyBsYXdzOyAgZm9yIHdobyB3b3VsZCBiZSBwbGVhc2VkIHdpdGggYSBjaXR5IGFwYXJ0IGZyb20gaXRzIGxhd3M/ICBBbmQgbm93IHdpbGwgeW91IG5vdCBhYmlkZSBieSB5b3VyIGFncmVlbWVudD8gIFlvdSB3aWxsIGlmIHlvdSB0YWtlIG91ciBhZHZpY2UsIFNvY3JhdGVzOyAgYW5kIHlvdSB3aWxsIG5vdCBtYWtlIHlvdXJzZWxmIHJpZGljdWxvdXMgYnkgZ29pbmcgYXdheSBmcm9tIHRoZSBjaXR5LjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRm9yIGNvbnNpZGVyLiAgQnkgdHJhbnNncmVzc2luZyBpbiB0aGlzIHdheSBhbmQgY29tbWl0dGluZyB0aGVzZSBlcnJvcnMsIHdoYXQgZ29vZCB3aWxsIHlvdSBkbyB0byB5b3Vyc2VsZiBvcgo8bWlsZXN0b25lIG49IjUzYiIgdW5pdD0ic2VjdGlvbiIgLz5hbnkgb2YgeW91ciBmcmllbmRzPyAgRm9yIGl0IGlzIHByZXR0eSBjbGVhciB0aGF0IHlvdXIgZnJpZW5kcyBhbHNvIHdpbGwgYmUgZXhwb3NlZCB0byB0aGUgcmlzayBvZiBiYW5pc2htZW50IGFuZCB0aGUgbG9zcyBvZiB0aGVpciBob21lcyBpbiB0aGUgY2l0eSBvciBvZiB0aGVpciBwcm9wZXJ0eS4gIEFuZCB5b3UgeW91cnNlbGYsIGlmIHlvdSBnbyB0byBvbmUgb2YgdGhlIG5lYXJlc3QgY2l0aWVzLCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZWJlcyIga2V5PSJwZXJzZXVzLFRoZWJlcyI+VGhlYmVzPC9wbGFjZU5hbWU+IG9yIE1lZ2FyYeKAlGZvciBib3RoIGFyZSB3ZWxsIGdvdmVybmVk4oCUd2lsbCBnbyBhcyBhbiBlbmVteSwgU29jcmF0ZXMsIHRvIHRoZWlyIGdvdmVybm1lbnQsIGFuZCBhbGwgd2hvIGNhcmUgZm9yIHRoZWlyIG93biBjaXRpZXMgd2lsbCBsb29rIGFza2FuY2UgYXQgeW91LCBhbmQgd2lsbCBjb25zaWRlciB5b3UgYSBkZXN0cm95ZXIgb2YgdGhlIGxhd3MsCjxtaWxlc3RvbmUgbj0iNTNjIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB5b3Ugd2lsbCBjb25maXJtIHRoZSBqdWRnZXMgaW4gdGhlaXIgb3Bpbmlvbiwgc28gdGhhdCB0aGV5IHdpbGwgdGhpbmsgdGhlaXIgdmVyZGljdCB3YXMganVzdC4gIEZvciBoZSB3aG8gaXMgZGVzdHJveWVyIG9mIHRoZSBsYXdzIG1pZ2h0IGNlcnRhaW5seSBiZSByZWdhcmRlZCBhcyBhIGRlc3Ryb3llciBvZiB5b3VuZyBhbmQgdGhvdWdodGxlc3MgbWVuLiAgV2lsbCB5b3UgdGhlbiBhdm9pZCB0aGUgd2VsbC1nb3Zlcm5lZCBjaXRpZXMgYW5kIHRoZSBtb3N0IGNpdmlsaXplZCBtZW4/ICBBbmQgaWYgeW91IGRvIHRoaXMgd2lsbCB5b3VyIGxpZmUgYmUgd29ydGggbGl2aW5nPyAgT3Igd2lsbCB5b3UgZ28gdG8gdGhlbSBhbmQgaGF2ZSB0aGUgZmFjZSB0byBjYXJyeSBvbuKAlHdoYXQga2luZCBvZiBjb252ZXJzYXRpb24sIFNvY3JhdGVzPyAgVGhlIHNhbWUga2luZCB5b3UgY2FycmllZCBvbiBoZXJlLCBzYXlpbmcgdGhhdCB2aXJ0dWUgYW5kIGp1c3RpY2UgYW5kIGxhd2Z1bCB0aGluZ3MgYW5kIHRoZSBsYXdzIGFyZSB0aGUgbW9zdCBwcmVjaW91cyB0aGluZ3MgdG8gbWVuPyAgQW5kIGRvIHlvdSBub3QgdGhpbmsgdGhhdCB0aGUgY29uZHVjdCBvZiBTb2NyYXRlcyB3b3VsZCBzZWVtIG1vc3QgZGlzZ3JhY2VmdWw/IAo8bWlsZXN0b25lIG49IjUzZCIgdW5pdD0ic2VjdGlvbiIgLz5Zb3UgY2Fubm90IGhlbHAgdGhpbmtpbmcgc28uICBPciB5b3Ugd2lsbCBrZWVwIGF3YXkgZnJvbSB0aGVzZSBwbGFjZXMgYW5kIGdvIHRvIENyaXRvJ3MgZnJpZW5kcyBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT47ICBmb3IgdGhlcmUgZ3JlYXQgZGlzb3JkZXIgYW5kIGxhd2xlc3NuZXNzIHByZXZhaWwsIGFuZCBwZXJoYXBzIHRoZXkgd291bGQgYmUgYW11c2VkIHRvIGhlYXIgb2YgdGhlIGx1ZGljcm91cyB3YXkgaW4gd2hpY2ggeW91IHJhbiBhd2F5IGZyb20gcHJpc29uIGJ5IHB1dHRpbmcgb24gYSBkaXNndWlzZSwgYSBwZWFzYW50J3MgbGVhdGhlcm4gY2xvYWsgb3Igc29tZSBvZiB0aGUgb3RoZXIgdGhpbmdzIGluIHdoaWNoIHJ1bmF3YXlzIGRyZXNzIHRoZW1zZWx2ZXMgdXAsIGFuZCBjaGFuZ2luZyB5b3VyIGFwcGVhcmFuY2UuICBCdXQgd2lsbCBubyBvbmUgc2F5IHRoYXQgeW91LCBhbiBvbGQgbWFuLCB3aG8gaGFkIHByb2JhYmx5IGJ1dCBhIHNob3J0IHRpbWUgeWV0IHRvIGxpdmUsCjxtaWxlc3RvbmUgbj0iNTNlIiB1bml0PSJzZWN0aW9uIiAvPmNsdW5nIHRvIGxpZmUgd2l0aCBzdWNoIHNoYW1lbGVzcyBncmVlZCB0aGF0IHlvdSB0cmFuc2dyZXNzZWQgdGhlIGhpZ2hlc3QgbGF3cz8gIFBlcmhhcHMgbm90LCBpZiB5b3UgZG8gbm90IG9mZmVuZCBhbnlvbmU7ICBidXQgaWYgeW91IGRvLCBTb2NyYXRlcywgeW91IHdpbGwgaGF2ZSB0byBsaXN0ZW4gdG8gbWFueSB0aGluZ3MgdGhhdCB3b3VsZCBiZSBhIGRpc2dyYWNlIHRvIHlvdS4gIFNvIHlvdSB3aWxsIGxpdmUgYXMgYW4gaW5mZXJpb3IgYW5kIGEgc2xhdmUgdG8gZXZlcnlvbmUuICBBbmQgd2hhdCB3aWxsIHlvdSBkbyBleGNlcHQgZmVhc3QgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTkiIGtleT0idGduLDcwMDEzOTkiPlRoZXNzYWx5PC9wbGFjZU5hbWU+LCBhcyBpZiB5b3UgaGFkIGdvbmUgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTkiIGtleT0idGduLDcwMDEzOTkiPlRoZXNzYWx5PC9wbGFjZU5hbWU+IHRvIGF0dGVuZCBhIGJhbnF1ZXQ/ICBXaGF0IHdpbGwgYmVjb21lIG9mIG91ciBjb252ZXJzYXRpb25zIGFib3V0IGp1c3RpY2UgYW5kCjxtaWxlc3RvbmUgbj0iNTQiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI1NGEiIHVuaXQ9InNlY3Rpb24iIC8+dmlydHVlPyAgQnV0IHBlcmhhcHMgeW91IHdpc2ggdG8gbGl2ZSBmb3IgdGhlIHNha2Ugb2YgeW91ciBjaGlsZHJlbiwgdGhhdCB5b3UgbWF5IGJyaW5nIHRoZW0gdXAgYW5kIGVkdWNhdGUgdGhlbT8gIEhvdyBzbz8gIFdpbGwgeW91IHRha2UgdGhlbSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT4gdG8gYmUgYnJvdWdodCB1cCBhbmQgZWR1Y2F0ZWQsIG1ha2luZyBleGlsZXMgb2YgdGhlbSwgdGhhdCB5b3UgbWF5IGdpdmUgdGhlbSB0aGF0IGJsZXNzaW5nIGFsc28/ICBPciBwZXJoYXBzIHlvdSB3aWxsIG5vdCBkbyB0aGF0LCBidXQgaWYgdGhleSBhcmUgYnJvdWdodCB1cCBoZXJlIHdoaWxlIHlvdSBhcmUgbGl2aW5nLCB3aWxsIHRoZXkgYmUgYmV0dGVyIGJyb3VnaHQgdXAgYW5kIGVkdWNhdGVkIGlmIHlvdSBhcmUgbm90IHdpdGggdGhlbSB0aGFuIGlmIHlvdSB3ZXJlIGRlYWQ/ICBPaCB5ZXMhICB5b3VyIGZyaWVuZHMgd2lsbCBjYXJlIGZvciB0aGVtLiAgV2lsbCB0aGV5IGNhcmUgZm9yIHRoZW0gaWYgeW91IGdvIGF3YXkgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTkiIGtleT0idGduLDcwMDEzOTkiPlRoZXNzYWx5PC9wbGFjZU5hbWU+IGFuZCBub3QgaWYgeW91IGdvIGF3YXkgdG8gdGhlIGR3ZWxsaW5ncyBvZiB0aGUgZGVhZD8gIElmIHRob3NlIHdobyBzYXkgdGhleSBhcmUgeW91ciBmcmllbmRzCjxtaWxlc3RvbmUgbj0iNTRiIiB1bml0PSJzZWN0aW9uIiAvPmFyZSBvZiBhbnkgdXNlLCB3ZSBtdXN0IGJlbGlldmUgdGhleSB3aWxsIGNhcmUgZm9yIHRoZW0gaW4gYm90aCBjYXNlcyBhbGlrZS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFoLCBTb2NyYXRlcywgYmUgZ3VpZGVkIGJ5IHVzIHdobyB0ZW5kZWQgeW91ciBpbmZhbmN5LiAgQ2FyZSBuZWl0aGVyIGZvciB5b3VyIGNoaWxkcmVuIG5vciBmb3IgbGlmZSBub3IgZm9yIGFueXRoaW5nIGVsc2UgbW9yZSB0aGFuIGZvciB0aGUgcmlnaHQsIHRoYXQgd2hlbiB5b3UgY29tZSB0byB0aGUgaG9tZSBvZiB0aGUgZGVhZCwgeW91IG1heSBoYXZlIGFsbCB0aGVzZSB0aGluZ3MgdG8gc2F5IGluIHlvdXIgb3duIGRlZmVuY2UuICBGb3IgY2xlYXJseSBpZiB5b3UgZG8gdGhpcyB0aGluZyBpdCB3aWxsIG5vdCBiZSBiZXR0ZXIgZm9yIHlvdSBoZXJlLCBvciBtb3JlIGp1c3Qgb3IgaG9saWVyLCBubywgbm9yIGZvciBhbnkgb2YgeW91ciBmcmllbmRzLCBhbmQgbmVpdGhlciB3aWxsIGl0IGJlIGJldHRlciB3aGVuIHlvdSByZWFjaCB0aGF0IG90aGVyIGFib2RlLiAgTm93LCBob3dldmVyLCB5b3Ugd2lsbCBnbyBhd2F5IHdyb25nZWQsIGlmIHlvdSBkbyBnbyBhd2F5LCBub3QgYnkgdXMsCjxtaWxlc3RvbmUgbj0iNTRjIiB1bml0PSJzZWN0aW9uIiAvPnRoZSBsYXdzLCBidXQgYnkgbWVuOyAgYnV0IGlmIHlvdSBlc2NhcGUgYWZ0ZXIgc28gZGlzZ3JhY2VmdWxseSByZXF1aXRpbmcgd3Jvbmcgd2l0aCB3cm9uZyBhbmQgZXZpbCB3aXRoIGV2aWwsIGJyZWFraW5nIHlvdXIgY29tcGFjdHMgYW5kIGFncmVlbWVudHMgd2l0aCB1cywgYW5kIGluanVyaW5nIHRob3NlIHdob20geW91IGxlYXN0IG91Z2h0IHRvIGluanVyZeKAlHlvdXJzZWxmLCB5b3VyIGZyaWVuZHMsIHlvdXIgY291bnRyeSBhbmQgdXPigJR3ZSBzaGFsbCBiZSBhbmdyeSB3aXRoIHlvdSB3aGlsZSB5b3UgbGl2ZSwgYW5kIHRoZXJlIG91ciBicm90aGVycywgdGhlIGxhd3MgaW4gSGFkZXMnIHJlYWxtLCB3aWxsIG5vdCByZWNlaXZlIHlvdSBncmFjaW91c2x5OyAgZm9yIHRoZXkgd2lsbCBrbm93IHRoYXQgeW91IHRyaWVkLCBzbyBmYXIgYXMgaW4geW91IGxheSwgdG8gZGVzdHJveSB1cy4gIERvIG5vdCBsZXQgQ3JpdG8gcGVyc3VhZGUgeW91IHRvIGRvCjxtaWxlc3RvbmUgbj0iNTRkIiB1bml0PSJzZWN0aW9uIiAvPndoYXQgaGUgc2F5cywgYnV0IHRha2Ugb3VyIGFkdmljZS48bWlsZXN0b25lIGVkPSJQIiB1bml0PSJwYXJhIiAvPkJlIHdlbGwgYXNzdXJlZCwgbXkgZGVhciBmcmllbmQsIENyaXRvLCB0aGF0IHRoaXMgaXMgd2hhdCBJIHNlZW0gdG8gaGVhciwgYXMgdGhlIGZyZW56aWVkIGRlcnZpc2hlcyBvZiBDeWJlbGUgc2VlbSB0byBoZWFyIHRoZSBmbHV0ZXMsIGFuZCB0aGlzIHNvdW5kIG9mIHRoZXNlIHdvcmRzIHJlLWVjaG9lcyB3aXRoaW4gbWUgYW5kIHByZXZlbnRzIG15IGhlYXJpbmcgYW55IG90aGVyIHdvcmRzLiAgQW5kIGJlIGFzc3VyZWQgdGhhdCwgc28gZmFyIGFzIEkgbm93IGJlbGlldmUsIGlmIHlvdSBhcmd1ZSBhZ2FpbnN0IHRoZXNlIHdvcmRzIHlvdSB3aWxsIHNwZWFrIGluIHZhaW4uICBOZXZlcnRoZWxlc3MsIGlmIHlvdSB0aGluayB5b3UgY2FuIGFjY29tcGxpc2ggYW55dGhpbmcsIHNwZWFrLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5ObywgU29jcmF0ZXMsIEkgaGF2ZSBub3RoaW5nIHRvIHNheS4KPG1pbGVzdG9uZSBuPSI1NGUiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPlRoZW4sIENyaXRvLCBsZXQgaXQgYmU7ICBhbmQgbGV0IHVzIGFjdCBpbiB0aGlzIHdheSwgc2luY2UgaXQgaXMgaW4gdGhpcyB3YXkgdGhhdCBHb2QgbGVhZHMgdXMuPC9wPjwvc3A+PC9ib2R5PjwvdGV4dD4KCjxib2R5IGNsYXNzPSJ0cmFuc2xhdGlvbiI+PGhlYWQgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvaGVhZD4KPGNhc3RMaXN0IGNsYXNzPSJ0cmFuc2xhdGlvbiI+PGNhc3RJdGVtIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0icm9sZSI+PHJvbGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvcm9sZT48L2Nhc3RJdGVtPjxjYXN0SXRlbSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InJvbGUiPjxyb2xlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3JvbGU+PC9jYXN0SXRlbT48L2Nhc3RMaXN0Pgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDMiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI0M2EiIHVuaXQ9InNlY3Rpb24iIC8+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPldoeSBoYXZlIHlvdSBjb21lIGF0IHRoaXMgdGltZSwgQ3JpdG8/ICBPciBpc24ndCBpdCBzdGlsbCBlYXJseT88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+WWVzLCB2ZXJ5IGVhcmx5LjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5BYm91dCB3aGF0IHRpbWU/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPkp1c3QgYmVmb3JlIGRhd24uPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkkgYW0gc3VycHJpc2VkIHRoYXQgdGhlIHdhdGNobWFuIG9mIHRoZSBwcmlzb24gd2FzIHdpbGxpbmcgdG8gbGV0IHlvdSBpbi48L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+SGUgaXMgdXNlZCB0byBtZSBieSB0aGlzIHRpbWUsIFNvY3JhdGVzLCBiZWNhdXNlIEkgY29tZSBoZXJlIHNvIG9mdGVuLCBhbmQgYmVzaWRlcyBJIGhhdmUgZG9uZSBzb21ldGhpbmcgZm9yIGhpbS48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+SGF2ZSB5b3UganVzdCBjb21lLCBvciBzb21lIHRpbWUgYWdvPzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5Tb21lIGxpdHRsZSB0aW1lIGFnby4KPG1pbGVzdG9uZSBuPSI0M2IiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPlRoZW4gd2h5IGRpZCB5b3Ugbm90IHdha2UgbWUgYXQgb25jZSwgaW5zdGVhZCBvZiBzaXR0aW5nIGJ5IG1lIGluIHNpbGVuY2U/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPk5vLCBubywgYnkgWmV1cywgU29jcmF0ZXMsIEkgb25seSB3aXNoIEkgbXlzZWxmIHdlcmUgbm90IHNvIHNsZWVwbGVzcyBhbmQgc29ycm93ZnVsLiAgQnV0IEkgaGF2ZSBiZWVuIHdvbmRlcmluZyBhdCB5b3UgZm9yIHNvbWUgdGltZSwgc2VlaW5nIGhvdyBzd2VldGx5IHlvdSBzbGVlcDsgIGFuZCBJIHB1cnBvc2VseSByZWZyYWluZWQgZnJvbSB3YWtpbmcgeW91LCB0aGF0IHlvdSBtaWdodCBwYXNzIHRoZSB0aW1lIGFzIHBsZWFzYW50bHkgYXMgcG9zc2libGUuICBJIGhhdmUgb2Z0ZW4gdGhvdWdodCB0aHJvdWdob3V0IHlvdXIgbGlmZSBoaXRoZXJ0byB0aGF0IHlvdSB3ZXJlIG9mIGEgaGFwcHkgZGlzcG9zaXRpb24sIGFuZCBJIHRoaW5rIHNvIG1vcmUgdGhhbiBldmVyIGluIHRoaXMgcmVzZW50IG1pc2ZvcnR1bmUsIHNpbmNlIHlvdSBiZWFyIGl0IHNvIGVhc2lseSBhbmQgY2FsbWx5LjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5XZWxsLCBDcml0bywgaXQgd291bGQgYmUgYWJzdXJkCjxtaWxlc3RvbmUgbj0iNDNjIiB1bml0PSJzZWN0aW9uIiAvPmlmIGF0IG15IGFnZSBJIHdlcmUgZGlzdHVyYmVkIGJlY2F1c2UgSSBtdXN0IGRpZSBub3cuPC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPk90aGVyIG1lbiBhcyBvbGQsIFNvY3JhdGVzLCBiZWNvbWUgaW52b2x2ZWQgaW4gc2ltaWxhciBtaXNmb3J0dW5lcywgYnV0IHRoZWlyIGFnZSBkb2VzIG5vdCBpbiB0aGUgbGVhc3QgcHJldmVudCB0aGVtIGZyb20gYmVpbmcgZGlzdHVyYmVkIGJ5IHRoZWlyIGZhdGUuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPlRoYXQgaXMgdHJ1ZS4gIEJ1dCB3aHkgaGF2ZSB5b3UgY29tZSBzbyBlYXJseT88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+VG8gYnJpbmcgbmV3cywgU29jcmF0ZXMsIHNhZCBuZXdzLCB0aG91Z2ggYXBwYXJlbnRseSBub3Qgc2FkIHRvIHlvdSwgYnV0IHNhZCBhbmQgZ3JpZXZvdXMgbWUgYW5kIGFsbCB5b3VyIGZyaWVuZHMsIGFuZCB0byBmZXcgb2YgdGhlbSwgSSB0aGluaywgc28gZ3JpZXZvdXMgYXMgdG8gbWUuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPldoYXQgaXMgdGhpcyBuZXdzPyAgSGFzIHRoZSBzaGlwIGNvbWUgZnJvbSA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERlbG9zIiBrZXk9InBlcnNldXMsRGVsb3MiPkRlbG9zPC9wbGFjZU5hbWU+LAo8bWlsZXN0b25lIG49IjQzZCIgdW5pdD0ic2VjdGlvbiIgLz5hdCB0aGUgYXJyaXZhbCBvZiB3aGljaCBJIGFtIHRvIGRpZT88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+SXQgaGFzIG5vdCBleGFjdGx5IGNvbWUsIGJ1dCBJIHRoaW5rIGl0IHdpbGwgY29tZSB0b2RheSBmcm9tIHRoZSByZXBvcnRzIG9mIHNvbWUgbWVuIHdobyBoYXZlIGNvbWUgZnJvbSBTdW5pdW0gYW5kIGxlZnQgaXQgdGhlcmUuICBOb3cgaXQgaXMgY2xlYXIgZnJvbSB3aGF0IHRoZXkgc2F5IHRoYXQgaXQgd2lsbCBjb21lIHRvZGF5LCBhbmQgc28gdG9tb3Jyb3csIFNvY3JhdGVzLCB5b3VyIGxpZmUgbXVzdCBlbmQuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPldlbGwsIENyaXRvLCBnb29kIGx1Y2sgYmUgd2l0aCB1cyEgIElmIHRoaXMgaXMgdGhlIHdpbGwgb2YgdGhlIGdvZHMsIHNvIGJlIGl0LiAgSG93ZXZlciwgSSBkbyBub3QgdGhpbmsKPG1pbGVzdG9uZSBuPSI0NCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjQ0YSIgdW5pdD0ic2VjdGlvbiIgLz5pdCB3aWxsIGNvbWUgdG9kYXkuPC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPldoYXQgaXMgeW91ciByZWFzb24gZm9yIG5vdCB0aGlua2luZyBzbz88L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+SSB3aWxsIHRlbGwgeW91LiAgSSBtdXN0IGRpZSBvbiB0aGUgZGF5IGFmdGVyIHRoZSBzaGlwIGNvbWVzIGluLCBtdXN0IEkgbm90PzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5TbyB0aG9zZSBzYXkgd2hvIGhhdmUgY2hhcmdlIG9mIHRoZXNlIG1hdHRlcnMuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPldlbGwsIEkgdGhpbmsgaXQgd2lsbCBub3QgY29tZSBpbiB0b2RheSwgYnV0IHRvbW9ycm93LiAgQW5kIG15IHJlYXNvbiBmb3IgdGhpcyBpcyBhIGRyZWFtIHdoaWNoIEkgaGFkIGEgbGl0dGxlIHdoaWxlIGFnbyBpbiB0aGUgY291cnNlIG9mIHRoaXMgbmlnaHQuICBBbmQgcGVyaGFwcyB5b3UgbGV0IG1lIHNsZWVwIGp1c3QgYXQgdGhlIHJpZ2h0IHRpbWUuPC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPldoYXQgd2FzIHRoZSBkcmVhbT88L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+SSBkcmVhbWVkIHRoYXQgYSBiZWF1dGlmdWwsIGZhaXIgd29tYW4sIGNsb3RoZWQgaW4gd2hpdGUgcmFpbWVudCwgY2FtZSB0byBtZSBhbmQgY2FsbGVkIG1lCiAgICA8bWlsZXN0b25lIG49IjQ0YiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgc2FpZCwg4oCcU29jcmF0ZXMsIDxxdW90ZSB0eXBlPSJ2ZXJzZSI+PGwgbWV0PSJkYWN0eWxpYyI+b24gdGhlIHRoaXJkIGRheSB0aG91IHdvdWxkc3QgY29tZSB0byBmZXJ0aWxlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGh0aGlhIiBrZXk9InBlcnNldXMsUGh0aGlhIj5QaHRoaWE8L3BsYWNlTmFtZT4u4oCdPC9sPjwvcXVvdGU+PG5vdGUgYW5jaG9yZWQ9InllcyIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBkZWZhdWx0PSJOTyIgbj0iSG9tLiBJbC4gOS4zNjMiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDkuMzYzPC9iaWJsPi48L25vdGU+PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPkEgc3RyYW5nZSBkcmVhbSwgU29jcmF0ZXMuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPk5vLCBhIGNsZWFyIG9uZSwgYXQgYW55IHJhdGUsIEkgdGhpbmssIENyaXRvLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5Ub28gY2xlYXIsIGFwcGFyZW50bHkuICBCdXQsIG15IGRlYXIgU29jcmF0ZXMsIGV2ZW4gbm93IGxpc3RlbiB0byBtZSBhbmQgc2F2ZSB5b3Vyc2VsZi4gIFNpbmNlLCBpZiB5b3UgZGllLCBpdCB3aWxsIGJlIG5vIG1lcmUgc2luZ2xlIG1pc2ZvcnR1bmUgdG8gbWUsIGJ1dCBJIHNoYWxsIGxvc2UgYSBmcmllbmQgc3VjaCBhcyBJIGNhbiBuZXZlciBmaW5kIGFnYWluLCBhbmQgYmVzaWRlcywgbWFueSBwZXJzb25zIHdobyBkbyBub3Qga25vdyB5b3UgYW5kIG1lIHdlbGwKPG1pbGVzdG9uZSBuPSI0NGMiIHVuaXQ9InNlY3Rpb24iIC8+d2lsbCB0aGluayBJIGNvdWxkIGhhdmUgc2F2ZWQgeW91IGlmIEkgaGFkIGJlZW4gd2lsbGluZyB0byBzcGVuZCBtb25leSwgYnV0IHRoYXQgSSB3b3VsZCBub3QgdGFrZSB0aGUgdHJvdWJsZS4gIEFuZCB5ZXQgd2hhdCByZXB1dGF0aW9uIGNvdWxkIGJlIG1vcmUgZGlzZ3JhY2VmdWwgdGhhbiB0aGF0IG9mIGNvbnNpZGVyaW5nIG9uZSdzIG1vbmV5IG9mIG1vcmUgaW1wb3J0YW5jZSB0aGFuIG9uZSdzIGZyaWVuZHM/ICBGb3IgbW9zdCBwZW9wbGUgd2lsbCBub3QgYmVsaWV2ZSB0aGF0IHdlIHdlcmUgZWFnZXIgdG8gaGVscCB5b3UgdG8gZ28gYXdheSBmcm9tIGhlcmUsIGJ1dCB5b3UgcmVmdXNlZC48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+QnV0LCBteSBkZWFyIENyaXRvLCB3aHkgZG8gd2UgY2FyZSBzbyBtdWNoIGZvciB3aGF0IG1vc3QgcGVvcGxlIHRoaW5rPyAgRm9yIHRoZSBtb3N0IHJlYXNvbmFibGUgbWVuLCB3aG9zZSBvcGluaW9uIGlzIG1vcmUgd29ydGggY29uc2lkZXJpbmcsIHdpbGwgdGhpbmsgdGhhdCB0aGluZ3Mgd2VyZSBkb25lIGFzIHRoZXkgcmVhbGx5IHdpbGwgYmUgZG9uZS4KPG1pbGVzdG9uZSBuPSI0NGQiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPkJ1dCB5b3Ugc2VlIGl0IGlzIG5lY2Vzc2FyeSwgU29jcmF0ZXMsIHRvIGNhcmUgZm9yIHRoZSBvcGluaW9uIG9mIHRoZSBwdWJsaWMsIGZvciB0aGlzIHZlcnkgdHJvdWJsZSB3ZSBhcmUgaW4gbm93IHNob3dzIHRoYXQgdGhlIHB1YmxpYyBpcyBhYmxlIHRvIGFjY29tcGxpc2ggbm90IGJ5IGFueSBtZWFucyB0aGUgbGVhc3QsIGJ1dCBhbG1vc3QgdGhlIGdyZWF0ZXN0IG9mIGV2aWxzLCBpZiBvbmUgaGFzIGEgYmFkIHJlcHV0YXRpb24gd2l0aCBpdC48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+SSBvbmx5IHdpc2gsIENyaXRvLCB0aGUgcGVvcGxlIGNvdWxkIGFjY29tcGxpc2ggdGhlIGdyZWF0ZXN0IGV2aWxzLCB0aGF0IHRoZXkgbWlnaHQgYmUgYWJsZSB0byBhY2NvbXBsaXNoIGFsc28gdGhlIGdyZWF0ZXN0IGdvb2QgdGhpbmdzLiAgVGhlbiBhbGwgd291bGQgYmUgd2VsbC4gIEJ1dCBub3cgdGhleSBjYW4gZG8gbmVpdGhlciBvZiB0aGUgdHdvOyAgZm9yIHRoZXkgYXJlIG5vdCBhYmxlIHRvIG1ha2UgYSBtYW4gd2lzZSBvciBmb29saXNoLCBidXQgdGhleSBkbyB3aGF0ZXZlciBvY2N1cnMgdG8gdGhlbS4KPG1pbGVzdG9uZSBuPSI0NGUiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPlRoYXQgbWF5IHdlbGwgYmUuICBCdXQsIFNvY3JhdGVzLCB0ZWxsIG1lIHRoaXM6ICB5b3UgYXJlIG5vdCBjb25zaWRlcmluZyBtZSBhbmQgeW91ciBvdGhlciBmcmllbmRzLCBhcmUgeW91LCBmZWFyaW5nIHRoYXQsIGlmIHlvdSBlc2NhcGUsIHRoZSBpbmZvcm1lcnMgd2lsbCBtYWtlIHRyb3VibGUgZm9yIHVzIGJ5IHNheWluZyB0aGF0IHdlIHN0b2xlIHlvdSBhd2F5LCBhbmQgd2Ugc2hhbGwgYmUgZm9yY2VkIHRvIGxvc2UgZWl0aGVyIGFsbCBvdXIgcHJvcGVydHkgb3IgYSBnb29kIGRlYWwgb2YgbW9uZXksIG9yIGJlIHB1bmlzaGVkIGluIHNvbWUgb3RoZXIgd2F5IGJlc2lkZXM/IAo8bWlsZXN0b25lIG49IjQ1IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNDVhIiB1bml0PSJzZWN0aW9uIiAvPkZvciBpZiB5b3UgYXJlIGFmcmFpZCBvZiBhbnl0aGluZyBvZiB0aGF0IGtpbmQsIGxldCBpdCBnbzsgIHNpbmNlIGl0IGlzIHJpZ2h0IGZvciB1cyB0byBydW4gdGhpcyByaXNrLCBhbmQgZXZlbiBncmVhdGVyIHJpc2sgdGhhbiB0aGlzLCBpZiBuZWNlc3NhcnksIHByb3ZpZGVkIHdlIHNhdmUgeW91LiAgTm93IHBsZWFzZSBkbyBhcyBJIGFzay48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+SSBhbSBjb25zaWRlcmluZyB0aGlzLCBDcml0bywgYW5kIG1hbnkgb3RoZXIgdGhpbmdzLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5XZWxsLCBkbyBub3QgZmVhciB0aGlzISAgZm9yIGl0IGlzIG5vdCBldmVuIGEgbGFyZ2Ugc3VtIG9mIG1vbmV5IHdoaWNoIHdlIHNob3VsZCBwYXkgdG8gc29tZSBtZW4gd2hvIGFyZSB3aWxsaW5nIHRvIHNhdmUgeW91IGFuZCBnZXQgeW91IGF3YXkgZnJvbSBoZXJlLiAgQmVzaWRlcywgZG9uJ3QgeW91IHNlZSBob3cgY2hlYXAgdGhlc2UgaW5mb3JtZXJzIGFyZSwgYW5kIHRoYXQgbm90IG11Y2ggbW9uZXkgd291bGQgYmUgbmVlZGVkIHRvIHNpbGVuY2UgdGhlbT8gIEFuZCB5b3UKPG1pbGVzdG9uZSBuPSI0NWIiIHVuaXQ9InNlY3Rpb24iIC8+aGF2ZSBteSBtb25leSBhdCB5b3VyIGNvbW1hbmQsIHdoaWNoIGlzIGVub3VnaCwgSSBmYW5jeTsgIGFuZCBtb3Jlb3ZlciwgaWYgYmVjYXVzZSB5b3UgY2FyZSBmb3IgbWUgeW91IHRoaW5rIHlvdSBvdWdodCBub3QgdG8gc3BlbmQgbXkgbW9uZXksIHRoZXJlIGFyZSBmb3JlaWduZXJzIGhlcmUgd2lsbGluZyB0byBzcGVuZCB0aGVpcnM7ICBhbmQgb25lIG9mIHRoZW0sIFNpbW1pYXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUaGViZXMiIGtleT0icGVyc2V1cyxUaGViZXMiPlRoZWJlczwvcGxhY2VOYW1lPiwgaGFzIGJyb3VnaHQgZm9yIHRoaXMgZXNwZWNpYWwgcHVycG9zZSBzdWZmaWNpZW50IGZ1bmRzOyAgYW5kIENlYmVzIGFsc28gYW5kIHZlcnkgbWFueSBvdGhlcnMgYXJlIHJlYWR5LiAgU28sIGFzIEkgc2F5LCBkbyBub3QgZ2l2ZSB1cCBzYXZpbmcgeW91cnNlbGYgdGhyb3VnaCBmZWFyIG9mIHRoaXMuICBBbmQgZG8gbm90IGJlIHRyb3VibGVkIGJ5IHdoYXQgeW91IHNhaWQgaW4gdGhlIGNvdXJ0LCB0aGF0IGlmIHlvdSB3ZW50IGF3YXkgeW91IHdvdWxkIG5vdCBrbm93IHdoYXQgdG8gZG8gd2l0aCB5b3Vyc2VsZi4gIEZvciBpbiBtYW55IG90aGVyIHBsYWNlcywgd2hlcmV2ZXIgeW91IGdvLAo8bWlsZXN0b25lIG49IjQ1YyIgdW5pdD0ic2VjdGlvbiIgLz50aGV5IHdpbGwgd2VsY29tZSB5b3U7ICBhbmQgaWYgeW91IHdpc2ggdG8gZ28gdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTkiIGtleT0idGduLDcwMDEzOTkiPlRoZXNzYWx5PC9wbGFjZU5hbWU+LCBJIGhhdmUgZnJpZW5kcyB0aGVyZSB3aG8gd2lsbCBtYWtlIG11Y2ggb2YgeW91IGFuZCB3aWxsIHByb3RlY3QgeW91LCBzbyB0aGF0IG5vIG9uZSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT4gc2hhbGwgYW5ub3kgeW91LiAgQW5kIGJlc2lkZXMsIFNvY3JhdGVzLCBpdCBzZWVtcyB0byBtZSB0aGUgdGhpbmcgeW91IGFyZSB1bmRlcnRha2luZyB0byBkbyBpcyBub3QgZXZlbiByaWdodOKAlGJldHJheWluZyB5b3Vyc2VsZiB3aGVuIHlvdSBtaWdodCBzYXZlIHlvdXJzZWxmLiAgQW5kIHlvdSBhcmUgZWFnZXIgdG8gYnJpbmcgdXBvbiB5b3Vyc2VsZiBqdXN0IHdoYXQgeW91ciBlbmVtaWVzIHdvdWxkIHdpc2ggYW5kIGp1c3Qgd2hhdCB0aG9zZSB3ZXJlIGVhZ2VyIGZvciB3aG8gd2lzaGVkIHRvIGRlc3Ryb3kgeW91LiAgQW5kIG1vcmVvdmVyLCBJIHRoaW5rIHlvdSBhcmUgYWJhbmRvbmluZyB5b3VyIGNoaWxkcmVuLCB0b28sCjxtaWxlc3RvbmUgbj0iNDVkIiB1bml0PSJzZWN0aW9uIiAvPmZvciB3aGVuIHlvdSBtaWdodCBicmluZyB0aGVtIHVwIGFuZCBlZHVjYXRlIHRoZW0sIHlvdSBhcmUgZ29pbmcgdG8gZGVzZXJ0IHRoZW0gYW5kIGdvIGF3YXksIGFuZCwgc28gZmFyIGFzIHlvdSBhcmUgY29uY2VybmVkLCB0aGVpciBmb3J0dW5lcyBpbiBsaWZlIHdpbGwgYmUgd2hhdGV2ZXIgdGhleSBoYXBwZW4gdG8gbWVldCB3aXRoLCBhbmQgdGhleSB3aWxsIHByb2JhYmx5IG1lZXQgd2l0aCBzdWNoIHRyZWF0bWVudCBhcyBnZW5lcmFsbHkgY29tZXMgdG8gb3JwaGFucyBpbiB0aGVpciBkZXN0aXR1dGlvbi4gIE5vLiAgRWl0aGVyIG9uZSBvdWdodCBub3QgdG8gYmVnZXQgY2hpbGRyZW4sIG9yIG9uZSBvdWdodCB0byBzdGF5IGJ5IHRoZW0gYW5kIGJyaW5nIHRoZW0gdXAgYW5kIGVkdWNhdGUgdGhlbS4gIEJ1dCB5b3Ugc2VlbSB0byBtZSB0byBiZSBjaG9vc2luZyB0aGUgbGF6aWVzdCB3YXk7ICBhbmQgeW91IG91Z2h0IHRvIGNob29zZSBhcyBhIGdvb2QgYW5kIGJyYXZlIG1hbiB3b3VsZCBjaG9vc2UsIHlvdSB3aG8gaGF2ZSBiZWVuIHNheWluZyBhbGwgeW91ciBsaWZlIHRoYXQgeW91IGNhcmVkIGZvciB2aXJ0dWUuICBTbyBJIGFtIHNoYW1lZCBib3RoIGZvciB5b3UgYW5kIGZvciB1cywKPG1pbGVzdG9uZSBuPSI0NWUiIHVuaXQ9InNlY3Rpb24iIC8+eW91ciBmcmllbmRzLCBhbmQgSSBhbSBhZnJhaWQgcGVvcGxlIHdpbGwgdGhpbmsgdGhhdCB0aGlzIHdob2xlIGFmZmFpciBvZiB5b3VycyBoYXMgYmVlbiBjb25kdWN0ZWQgd2l0aCBhIHNvcnQgb2YgY293YXJkaWNlIG9uIG91ciBwYXJ04oCUYm90aCB0aGUgZmFjdCB0aGF0IHRoZSBjYXNlIGNhbWUgYmVmb3JlIHRoZSBjb3VydCwgd2hlbiBpdCBtaWdodCBoYXZlIGJlZW4gYXZvaWRlZCwgYW5kIHRoZSB3YXkgaW4gd2hpY2ggdGhlIHRyaWFsIGl0c2VsZiB3YXMgY2FycmllZCBvbiwgYW5kIGZpbmFsbHkgdGhleSB3aWxsIHRoaW5rLCBhcyB0aGUgY3Jvd25pbmcgYWJzdXJkaXR5IG9mIHRoZSB3aG9sZSBhZmZhaXIsIHRoYXQgdGhpcyBvcHBvcnR1bml0eSBoYXMgZXNjYXBlZCB1cyB0aHJvdWdoIHNvbWUgYmFzZSBjb3dhcmRpY2Ugb24gb3VyIHBhcnQsCjxtaWxlc3RvbmUgbj0iNDYiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI0NmEiIHVuaXQ9InNlY3Rpb24iIC8+c2luY2Ugd2UgZGlkIG5vdCBzYXZlIHlvdSwgYW5kIHlvdSBkaWQgbm90IHNhdmUgeW91cnNlbGYsIHRob3VnaCBpdCB3YXMgcXVpdGUgcG9zc2libGUgaWYgd2UgaGFkIGJlZW4gb2YgYW55IHVzZSB3aGF0ZXZlci4gIFRha2UgY2FyZSwgU29jcmF0ZXMsIHRoYXQgdGhlc2UgdGhpbmdzIGJlIG5vdCBkaXNncmFjZWZ1bCwgYXMgd2VsbCBhcyBldmlsLCBib3RoIHRvIHlvdSBhbmQgdG8gdXMuICBKdXN0IGNvbnNpZGVyLCBvciByYXRoZXIgaXQgaXMgdGltZSBub3QgdG8gY29uc2lkZXIgYW55IGxvbmdlciwgYnV0IHRvIGhhdmUgZmluaXNoZWQgY29uc2lkZXJpbmcuICBBbmQgdGhlcmUgaXMganVzdCBvbmUgcG9zc2libGUgcGxhbjsgIGZvciBhbGwgdGhpcyBtdXN0IGJlIGRvbmUgaW4gdGhlIGNvbWluZyBuaWdodC4gIEFuZCBpZiB3ZSBkZWxheSBpdCBjYW4gbm8gbG9uZ2VyIGJlIGRvbmUuICBCdXQgSSBiZWcgeW91LCBTb2NyYXRlcywgZG8gYXMgSSBzYXkgYW5kIGRvbid0IHJlZnVzZS4gIAo8bWlsZXN0b25lIG49IjQ2YiIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+TXkgZGVhciBDcml0bywgeW91ciBlYWdlcm5lc3MgaXMgd29ydGggYSBncmVhdCBkZWFsLCBpZiBpdCBzaG91bGQgcHJvdmUgdG8gYmUgcmlnaHRseSBkaXJlY3RlZDsgIGJ1dCBvdGhlcndpc2UsIHRoZSBncmVhdGVyIGl0IGlzLCB0aGUgbW9yZSBoYXJkIHRvIGJlYXIuICBTbyB3ZSBtdXN0IGV4YW1pbmUgdGhlIHF1ZXN0aW9uIHdoZXRoZXIgd2Ugb3VnaHQgdG8gZG8gdGhpcyBvciBub3Q7ICBmb3IgSSBhbSBub3Qgb25seSBub3cgYnV0IGFsd2F5cyBhIG1hbiB3aG8gZm9sbG93cyBub3RoaW5nIGJ1dCB0aGUgcmVhc29uaW5nIHdoaWNoIG9uIGNvbnNpZGVyYXRpb24gc2VlbXMgdG8gbWUgYmVzdC4gIEF1ZCBJIGNhbm5vdCwgbm93IHRoYXQgdGhpcyBoYXMgaGFwcGVuZWQgdG8gdXMsIGRpc2NhcmQgdGhlIGFyZ3VtZW50cyBJIHVzZWQgdG8gYWR2YW5jZSwgYnV0IHRoZXkgc2VlbSB0byBtZSBtdWNoIHRoZSBzYW1lIGFzIGV2ZXIsCjxtaWxlc3RvbmUgbj0iNDZjIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBJIHJldmVyZSBhbmQgaG9ub3IgdGhlIHNhbWUgb25lcyBhcyBiZWZvcmUuICBBbmQgdW5sZXNzIHdlIGNhbiBicmluZyBmb3J3YXJkIGJldHRlciBvbmVzIGluIG91ciBwcmVzZW50IHNpdHVhdGlvbiwgYmUgYXNzdXJlZCB0aGF0IEkgc2hhbGwgbm90IGdpdmUgd2F5IHRvIHlvdSwgbm90IGV2ZW4gaWYgdGhlIHBvd2VyIG9mIHRoZSBtdWx0aXR1ZGUgZnJpZ2h0ZW4gdXMgd2l0aCBldmVuIG1vcmUgdGVycm9ycyB0aGFuIGF0IHByZXNlbnQsIGFzIGNoaWxkcmVuIGFyZSBmcmlnaHRlbmVkIHdpdGggZ29ibGlucywgdGhyZWF0ZW5pbmcgdXMgd2l0aCBpbXByaXNvbm1lbnRzIGFuZCBkZWF0aHMgYW5kIGNvbmZpc2NhdGlvbnMgb2YgcHJvcGVydHkuICBOb3cgaG93IGNvdWxkIHdlIGV4YW1pbmUgdGhlIG1hdHRlciBtb3N0IHJlYXNvbmFibHk/ICBCeSB0YWtpbmcgdXAgZmlyc3Qgd2hhdCB5b3Ugc2F5IGFib3V0IG9waW5pb25zIGFuZCBhc2tpbmcgd2hldGhlciB3ZSB3ZXJlIHJpZ2h0IHdoZW4gd2UgYWx3YXlzIHVzZWQgdG8gc2F5IHRoYXQgd2Ugb3VnaHQgdG8gcGF5IGF0dGVudGlvbgo8bWlsZXN0b25lIG49IjQ2ZCIgdW5pdD0ic2VjdGlvbiIgLz50byBzb21lIG9waW5pb25zIGFuZCBub3QgdG8gb3RoZXJzPyAgT3Igd2VyZSB3ZSByaWdodCBiZWZvcmUgSSB3YXMgY29uZGVtbmVkIHRvIGRlYXRoLCB3aGVyZWFzIGl0IGhhcyBob3cgYmVlbiBtYWRlIGNsZWFyIHRoYXQgd2Ugd2VyZSB0YWxraW5nIG1lcmVseSBmb3IgdGhlIHNha2Ugb2YgYXJndW1lbnQgYW5kIGl0IHdhcyByZWFsbHkgbWVyZSBwbGF5IGFuZCBub25zZW5zZT8gIEFuZCBJIHdpc2ggdG8gaW52ZXN0aWdhdGUsIENyaXRvLCBpbiBjb21tb24gd2l0aCB5b3UsIGFuZCBzZWUgd2hldGhlciBvdXIgZm9ybWVyIGFyZ3VtZW50IHNlZW1zIGRpZmZlcmVudCB0byBtZSB1bmRlciBvdXIgcHJlc2VudCBjb25kaXRpb25zLCBvciB0aGUgc2FtZSwgYW5kIHdoZXRoZXIgd2Ugc2hhbGwgZ2l2ZSBpdCB1cCBvciBiZSBndWlkZWQgYnkgaXQuICBCdXQgaXQgdXNlZCB0byBiZSBzYWlkLCBJIHRoaW5rLCBieSB0aG9zZSB3aG8gdGhvdWdodCB0aGV5IHdlcmUgc3BlYWtpbmcgc2Vuc2libHksIGp1c3QgYXMgSSB3YXMgc2F5aW5nIG5vdywgdGhhdCBvZiB0aGUgb3BpbmlvbnMgaGVsZCBieSBtZW4KPG1pbGVzdG9uZSBuPSI0NmUiIHVuaXQ9InNlY3Rpb24iIC8+c29tZSBvdWdodCB0byBiZSBoaWdobHkgZXN0ZWVtZWQgYW5kIG90aGVycyBub3QuICBJbiBHb2QncyBuYW1lLCBDcml0bywgZG8geW91IG5vdCB0aGluayB0aGlzIGlzIGNvcnJlY3Q/ICBGb3IgeW91LCBodW1hbmx5IHNwZWFraW5nLAo8bWlsZXN0b25lIG49IjQ3IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNDdhIiB1bml0PSJzZWN0aW9uIiAvPmFyZSBub3QgaW52b2x2ZWQgaW4gdGhlIG5lY2Vzc2l0eSBvZiBkeWluZyB0b21vcnJvdywgYW5kIHRoZXJlZm9yZSBwcmVzZW50IGNvbmRpdGlvbnMgd291bGQgbm90IGxlYWQgeW91ciBqdWRnbWVudCBhc3RyYXkuICBOb3cgc2F5LCBkbyB5b3Ugbm90IHRoaW5rIHdlIHdlcmUgY29ycmVjdCBpbiBzYXlpbmcgdGhhdCB3ZSBvdWdodCBub3QgdG8gZXN0ZWVtIGFsbCB0aGUgb3BpbmlvbnMgb2YgbWVuLCBidXQgc29tZSBhbmQgbm90IG90aGVycywgYW5kIG5vdCB0aG9zZSBvZiBhbGwgbWVuLCBidXQgb25seSBvZiBzb21lPyAgV2hhdCBkbyB5b3UgdGhpbms/ICBJcyBub3QgdGhpcyB0cnVlPzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5JdCBpcy48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+VGhlbiB3ZSBvdWdodCB0byBlc3RlZW0gdGhlIGdvb2Qgb3BpbmlvbnMgYW5kIG5vdCB0aGUgYmFkIG9uZXM/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPlllcy48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+QW5kIHRoZSBnb29kIG9uZXMgYXJlIHRob3NlIG9mIHRoZSB3aXNlIGFuZCB0aGUgYmFkIG9uZXMgdGhvc2Ugb2YgdGhlIGZvb2xpc2g/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPk9mIGNvdXJzZS48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+Q29tZSB0aGVuLCB3aGF0IHVzZWQgd2UgdG8gc2F5IGFib3V0IHRoaXM/IAo8bWlsZXN0b25lIG49IjQ3YiIgdW5pdD0ic2VjdGlvbiIgLz5JZiBhIG1hbiBpcyBhbiBhdGhsZXRlIGFuZCBtYWtlcyB0aGF0IGhpcyBidXNpbmVzcywgZG9lcyBoZSBwYXkgYXR0ZW50aW9uIHRvIGV2ZXJ5IG1hbidzIHByYWlzZSBhbmQgYmxhbWUgYW5kIG9waW5pb24gb3IgdG8gdGhvc2Ugb2Ygb25lIG1hbiBvbmx5IHdobyBpcyBhIHBoeXNpY2lhbiBvciBhIHRyYWluZXI/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPlRvIHRob3NlIG9mIG9uZSBtYW4gb25seS48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+VGhlbiBoZSBvdWdodCB0byBmZWFyIHRoZSBibGFtZSBhbmQgd2VsY29tZSB0aGUgcHJhaXNlIG9mIHRoYXQgb25lIG1hbiBhbmQgbm90IG9mIHRoZSBtdWx0aXR1ZGUuPC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPk9idmlvdXNseS48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+QW5kIGhlIG11c3QgYWN0IGFuZCBleGVyY2lzZSBhbmQgZWF0IGFuZCBkcmluayBhcyB0aGUgb25lIG1hbiB3aG8gaXMgaGlzIGRpcmVjdG9yIGFuZCB3aG8ga25vd3MgdGhlIGJ1c2luZXNzIHRoaW5rcyBiZXN0IHJhdGhlciB0aGFuIGFzIGFsbCB0aGUgb3RoZXJzIHRoaW5rLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5UaGF0IGlzIHRydWUuCjxtaWxlc3RvbmUgbj0iNDdjIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5XZWxsIHRoZW47ICBpZiBoZSBkaXNvYmV5cyB0aGUgb25lIG1hbiBhbmQgZGlzcmVnYXJkcyBoaXMgb3BpbmlvbiBhbmQgaGlzIHByYWlzZSwgYnV0IHJlZ2FyZHMgd29yZHMgb2YgdGhlIG1hbnkgd2hvIGhhdmUgbm8gc3BlY2lhbCBrbm93bGVkZ2UsIHdpbGwgaGUgbm90IGNvbWUgdG8gaGFybT88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+T2YgY291cnNlIGhlIHdpbGwuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkFuZCB3aGF0IGlzIHRoaXMgaGFybT8gIEluIHdoYXQgZGlyZWN0aW9uIGFuZCB1cG9uIHdoYXQgcGFydCBvZiB0aGUgb25lIHdobyBkaXNvYmV5cyBkb2VzIGl0IGFjdD88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+RXZpZGVudGx5IHVwb24gaGlzIGJvZHk7ICBmb3IgdGhhdCBpcyB3aGF0IGl0IHJ1aW5zLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5SaWdodC4gIFRoZW4gaW4gb3RoZXIgbWF0dGVycywgbm90IHRvIGVudW1lcmF0ZSB0aGVtIGFsbCwgaW4gcXVlc3Rpb25zIG9mIHJpZ2h0IGFuZCB3cm9uZyBhbmQgZGlzZ3JhY2VmdWwgYW5kIG5vYmxlIGFuZCBnb29kIGFuZCBiYWQsIHdoaWNoIHdlIGFyZSBub3cgY29uc2lkZXJpbmcsIG91Z2h0IHdlIHRvIGZvbGxvdyBhbmQgZmVhcgo8bWlsZXN0b25lIG49IjQ3ZCIgdW5pdD0ic2VjdGlvbiIgLz50aGUgb3BpbmlvbiBvZiB0aGUgbWFueSBvciB0aGF0IG9mIHRoZSBvbmUsIGlmIHRoZXJlIGlzIGFueW9uZSB3aG8ga25vd3MgYWJvdXQgdGhlbSwgd2hvbSB3ZSBvdWdodCB0byByZXZlcmUgYW5kIGZlYXIgbW9yZSB0aGFuIGFsbCB0aGUgb3RoZXJzPyAgQW5kIGlmIHdlIGRvIG5vdCBmb2xsb3cgaGltLCB3ZSBzaGFsbCBpbmp1cmUgYW5kIGNyaXBwbGUgdGhhdCB3aGljaCB3ZSB1c2VkIHRvIHNheSBpcyBiZW5lZml0ZWQgYnkgdGhlIHJpZ2h0IGFuZCBpcyBydWluZWQgYnkgdGhlIHdyb25nLiAgT3IgaXMgdGhlcmUgbm90aGluZyBpbiB0aGlzPzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5JIHRoaW5rIGl0IGlzIHRydWUsIFNvY3JhdGVzLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5XZWxsIHRoZW4sIGlmIHRocm91Z2ggeWllbGRpbmcgdG8gdGhlIG9waW5pb24gb2YgdGhlIGlnbm9yYW50IHdlIHJ1aW4gdGhhdCB3aGljaCBpcyBiZW5lZml0ZWQgYnkgaGVhbHRoIGFuZCBpbmp1cmVkIGJ5IGRpc2Vhc2UsCjxtaWxlc3RvbmUgbj0iNDdlIiB1bml0PSJzZWN0aW9uIiAvPmlzIGxpZmUgd29ydGggbGl2aW5nIGZvciB1cyB3aGVuIHRoYXQgaXMgcnVpbmVkPyAgQW5kIHRoYXQgaXMgdGhlIGJvZHksIGlzIGl0IG5vdD88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+WWVzLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5UaGVuIGlzIGxpZmUgd29ydGggbGl2aW5nIHdoZW4gdGhlIGJvZHkgaXMgd29ydGhsZXNzIGFuZCBydWluZWQ/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPkNlcnRhaW5seSBub3QuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkJ1dCBpcyBpdCB3b3J0aCBsaXZpbmcgd2hlbiB0aGF0IGlzIHJ1aW5lZCB3aGljaCBpcyBpbmp1cmVkIGJ5IHRoZSB3cm9uZyBhbmQgaW1wcm92ZWQgYnkgdGhlIHJpZ2h0PyAgT3IgZG8gd2UgdGhpbmsgdGhhdCBwYXJ0IG9mIHVzLCB3aGF0ZXZlciBpdCBpcywgd2hpY2ggaXMgY29uY2VybmVkIHdpdGggcmlnaHQgYW5kIHdyb25nLAo8bWlsZXN0b25lIG49IjQ4IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNDhhIiB1bml0PSJzZWN0aW9uIiAvPmlzIGxlc3MgaW1wb3J0YW50IHRoYW4gdGhlIGJvZHk/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPkJ5IG5vIG1lYW5zLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5CdXQgbW9yZSBpbXBvcnRhbnQ/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPk11Y2ggbW9yZS48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+VGhlbiwgbW9zdCBleGNlbGxlbnQgZnJpZW5kLCB3ZSBtdXN0IG5vdCBjb25zaWRlciBhdCBhbGwgd2hhdCB0aGUgbWFueSB3aWxsIHNheSBvZiB1cywgYnV0IHdoYXQgaGUgd2hvIGtub3dzIGFib3V0IHJpZ2h0IGFuZCB3cm9uZywgdGhlIG9uZSBtYW4sIGFuZCB0cnV0aCBoZXJzZWxmIHdpbGwgc2F5LiAgQW5kIHNvIHlvdSBpbnRyb2R1Y2VkIHRoZSBkaXNjdXNzaW9uIHdyb25nbHkgaW4gdGhlIGZpcnN0IHBsYWNlLCB3aGVuIHlvdSBiZWdhbiBieSBzYXlpbmcgd2Ugb3VnaHQgdG8gY29uc2lkZXIgdGhlIG9waW5pb24gb2YgdGhlIG11bHRpdHVkZSBhYm91dCB0aGUgcmlnaHQgYW5kIHRoZSBub2JsZSBhbmQgdGhlIGdvb2QgYW5kIHRoZWlyIG9wcG9zaXRlcy4gCjxtaWxlc3RvbmUgbj0iNDhiIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCBpdCBtaWdodCwgb2YgY291cnNlLCBiZSBzYWlkIHRoYXQgdGhlIG11bHRpdHVkZSBjYW4gcHV0IHVzIHRvIGRlYXRoLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5UaGF0IGlzIGNsZWFyLCB0b28uICBJdCB3b3VsZCBiZSBzYWlkLCBTb2NyYXRlcy48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+VGhhdCBpcyB0cnVlLiAgQnV0LCBteSBmcmllbmQsIHRoZSBhcmd1bWVudCB3ZSBoYXZlIGp1c3QgZmluaXNoZWQgc2VlbXMgdG8gbWUgc3RpbGwgbXVjaCB0aGUgc2FtZSBhcyBiZWZvcmU7ICBhbmQgbm93IHNlZSB3aGV0aGVyIHdlIHN0aWxsIGhvbGQgdG8gdGhpcywgb3Igbm90LCB0aGF0IGl0IGlzIG5vdCBsaXZpbmcsIGJ1dCBsaXZpbmcgd2VsbCB3aGljaCB3ZSBvdWdodCB0byBjb25zaWRlciBtb3N0IGltcG9ydGFudC48L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+V2UgZG8gaG9sZCB0byBpdC48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+QW5kIHRoYXQgbGl2aW5nIHdlbGwgYW5kIGxpdmluZyByaWdodGx5IGFyZSB0aGUgc2FtZSB0aGluZywgZG8gd2UgaG9sZCB0byB0aGF0LCBvciBub3Q/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPldlIGRvLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5UaGVuIHdlIGFncmVlIHRoYXQgdGhlIHF1ZXN0aW9uIGlzIHdoZXRoZXIgaXQgaXMgcmlnaHQgZm9yIG1lIHRvIHRyeSB0byBlc2NhcGUgZnJvbSBoZXJlCjxtaWxlc3RvbmUgbj0iNDhjIiB1bml0PSJzZWN0aW9uIiAvPndpdGhvdXQgdGhlIHBlcm1pc3Npb24gb2YgdGhlIEF0aGVuaWFucywgb3Igbm90IHJpZ2h0LiAgQW5kIGlmIGl0IGFwcGVhcnMgdG8gYmUgcmlnaHQsIGxldCB1cyB0cnkgaXQsIGFuZCBpZiBub3QsIGxldCB1cyBnaXZlIGl0IHVwLiAgQnV0IHRoZSBjb25zaWRlcmF0aW9ucyB5b3Ugc3VnZ2VzdCwgYWJvdXQgc3BlbmRpbmcgbW9uZXksIGFuZCByZXB1dGF0aW9uLCBhbmQgYnJpbmdpbmcgdXAgbXkgY2hpbGRyZW4sIHRoZXNlIGFyZSByZWFsbHksIENyaXRvLCB0aGUgcmVmbGVjdGlvbnMgb2YgdGhvc2Ugd2hvIGxpZ2h0bHkgcHV0IG1lbiB0byBkZWF0aCwgYW5kIHdvdWxkIGJyaW5nIHRoZW0gdG8gbGlmZSBhZ2FpbiwgaWYgdGhleSBjb3VsZCwgd2l0aG91dCBhbnkgc2Vuc2UsIEkgbWVhbiB0aGUgbXVsdGl0dWRlLiAgQnV0IHdlLCBzaW5jZSBvdXIgYXJndW1lbnQgc28gY29uc3RyYWlucyB1cywgbXVzdCBjb25zaWRlciBvbmx5IHRoZSBxdWVzdGlvbiB3ZSBqdXN0IGJyb2FjaGVkLCB3aGV0aGVyIHdlIHNoYWxsIGJlIGRvaW5nIHJpZ2h0IGluIGdpdmluZyBtb25leQo8bWlsZXN0b25lIG49IjQ4ZCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgdGhhbmtzIHRvIHRoZXNlIG1lbiB3aG8gd2lsbCBoZWxwIG1lIHRvIGVzY2FwZSwgYW5kIGluIGVzY2FwaW5nIG9yIGFpZGluZyB0aGUgZXNjYXBlIG91cnNlbHZlcywgb3Igc2hhbGwgaW4gdHJ1dGggYmUgZG9pbmcgd3JvbmcsIGlmIHdlIGRvIGFsbCB0aGVzZSB0aGluZ3MuICBBbmQgaWYgaXQgYXBwZWFycyB0aGF0IGl0IGlzIHdyb25nIGZvciB1cyB0byBkbyB0aGVtLCBpdCBtYXkgYmUgdGhhdCB3ZSBvdWdodCBub3QgdG8gY29uc2lkZXIgZWl0aGVyIHdoZXRoZXIgd2UgbXVzdCBkaWUgaWYgd2Ugc3RheSBoZXJlIGFuZCBrZWVwIHF1aWV0IG9yIHdoZXRoZXIgd2UgbXVzdCBlbmR1cmUgYW55IHRoaW5nIGVsc2Ugd2hhdHNvZXZlciwgYnV0IG9ubHkgdGhlIHF1ZXN0aW9uIG9mIGRvaW5nIHdyb25nLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5JIHRoaW5rIHdoYXQgeW91IHNheSBpcyByaWdodCwgU29jcmF0ZXM7ICBidXQgdGhpbmsgd2hhdCB3ZSBzaG91bGQgZG8uPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPkxldCB1cywgbXkgZ29vZCBmcmllbmQsIGludmVzdGlnYXRlIGluIGNvbW1vbiwgYW5kIGlmIHlvdSBjYW4gY29udHJhZGljdCBhbnl0aGluZyBJIHNheSwgZG8gc28sIGFuZCBJIHdpbGwgeWllbGQgdG8geW91ciBhcmd1bWVudHM7IAo8bWlsZXN0b25lIG49IjQ4ZSIgdW5pdD0ic2VjdGlvbiIgLz5idXQgaWYgeW91IGNhbm5vdCwgbXkgZGVhciBmcmllbmQsIHN0b3AgYXQgb25jZSBzYXlpbmcgdGhlIHNhbWUgdGhpbmcgdG8gbWUgb3ZlciBhbmQgb3ZlciwgdGhhdCBJIG91Z2h0IHRvIGdvIGF3YXkgZnJvbSBoZXJlIHdpdGhvdXQgdGhlIGNvbnNlbnQgb2YgdGhlIEF0aGVuaWFuczsgIGZvciBJIGFtIGFueGlvdXMgdG8gYWN0IGluIHRoaXMgbWF0dGVyIHdpdGggeW91ciBhcHByb3ZhbCwgYW5kIG5vdCBjb250cmFyeSB0byB5b3VyIHdpc2hlcy4gIE5vdyBzZWUgaWYgdGhlIGJlZ2lubmluZyBvZiB0aGUgaW52ZXN0aWdhdGlvbiBzYXRpc2ZpZXMgeW91LCBhbmQgdHJ5IHRvIHJlcGx5CjxtaWxlc3RvbmUgbj0iNDkiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI0OWEiIHVuaXQ9InNlY3Rpb24iIC8+dG8gbXkgcXVlc3Rpb25zIHRvIHRoZSBiZXN0IG9mIHlvdXIgYmVsaWVmLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5JIHdpbGwgdHJ5LjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5PdWdodCB3ZSBpbiBubyB3YXkgdG8gZG8gd3JvbmcgaW50ZW50aW9uYWxseSwgb3Igc2hvdWxkIHdlIGRvIHdyb25nIGluIHNvbWUgd2F5cyBidXQgbm90IGluIG90aGVycz8gIE9yLCBhcyB3ZSBvZnRlbiBhZ3JlZWQgaW4gZm9ybWVyIHRpbWVzLCBpcyBpdCBuZXZlciByaWdodCBvciBob25vcmFibGUgdG8gZG8gd3Jvbmc/ICBPciBoYXZlIGFsbCB0aG9zZSBmb3JtZXIgY29uY2x1c2lvbnMgb2Ygb3VycyBiZWVuIG92ZXJ0dXJuZWQgaW4gdGhlc2UgZmV3IGRheXMsIGFuZCBoYXZlIHdlIG9sZCBtZW4sCjxtaWxlc3RvbmUgbj0iNDliIiB1bml0PSJzZWN0aW9uIiAvPnNlcmlvdXNseSBjb252ZXJzaW5nIHdpdGggZWFjaCBvdGhlciwgZmFpbGVkIGFsbCBhbG9uZyB0byBzZWUgdGhhdCB3ZSB3ZXJlIG5vIGJldHRlciB0aGFuIGNoaWxkcmVuPyAgT3IgaXMgbm90IHdoYXQgd2UgdXNlZCB0byBzYXkgbW9zdCBjZXJ0YWlubHkgdHJ1ZSwgd2hldGhlciB0aGUgd29ybGQgYWdyZWUgb3Igbm90PyAgQW5kIHdoZXRoZXIgd2UgbXVzdCBlbmR1cmUgc3RpbGwgbW9yZSBncmlldm91cyBzdWZmZXJpbmdzIHRoYW4gdGhlc2UsIG9yIGxpZ2h0ZXIgb25lcywgaXMgbm90IHdyb25nZG9pbmcgaW5ldml0YWJseSBhbiBldmlsIGFuZCBhIGRpc2dyYWNlIHRvIHRoZSB3cm9uZ2RvZXI/ICBEbyB3ZSBiZWxpZXZlIHRoaXMgb3Igbm90PzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5XZSBkby48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+VGhlbiB3ZSBvdWdodCBub3QgdG8gZG8gd3JvbmcgYXQgYWxsLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5XaHksIG5vLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5BbmQgd2Ugb3VnaHQgbm90IGV2ZW4gdG8gcmVxdWl0ZSB3cm9uZyB3aXRoIHdyb25nLCBhcyB0aGUgd29ybGQgdGhpbmtzLCBzaW5jZSB3ZSBtdXN0IG5vdCBkbyB3cm9uZyBhdCBhbGwuCjxtaWxlc3RvbmUgbj0iNDljIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5BcHBhcmVudGx5IG5vdC48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+V2VsbCwgQ3JpdG8sIG91Z2h0IG9uZSB0byBkbyBldmlsIG9yIG5vdD88L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+Q2VydGFpbmx5IG5vdCwgU29jcmF0ZXMuPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPldlbGwsIHRoZW4sIGlzIGl0IHJpZ2h0IHRvIHJlcXVpdGUgZXZpbCB3aXRoIGV2aWwsIGFzIHRoZSB3b3JsZCBzYXlzIGl0IGlzLCBvciBub3QgcmlnaHQ/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPk5vdCByaWdodCwgY2VydGFpbmx5LjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5Gb3IgZG9pbmcgZXZpbCB0byBwZW9wbGUgaXMgdGhlIHNhbWUgdGhpbmcgYXMgd3JvbmdpbmcgdGhlbS48L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+VGhhdCBpcyB0cnVlLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5UaGVuIHdlIG91Z2h0IG5laXRoZXIgdG8gcmVxdWl0ZSB3cm9uZyB3aXRoIHdyb25nIG5vciB0byBkbyBldmlsIHRvIGFueW9uZSwgbm8gbWF0dGVyIHdoYXQgaGUgbWF5IGhhdmUgZG9uZSB0byB1cy4gCjxtaWxlc3RvbmUgbj0iNDlkIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBiZSBjYXJlZnVsLCBDcml0bywgdGhhdCB5b3UgZG8gbm90LCBpbiBhZ3JlZWluZyB0byB0aGlzLCBhZ3JlZSB0byBzb21ldGhpbmcgeW91IGRvIG5vdCBiZWxpZXZlOyAgZm9yIEkga25vdyB0aGF0IHRoZXJlIGFyZSBmZXcgd2hvIGJlbGlldmUgb3IgZXZlciB3aWxsIGJlbGlldmUgdGhpcy4gIE5vdyB0aG9zZSB3aG8gYmVsaWV2ZSB0aGlzLCBhbmQgdGhvc2Ugd2hvIGRvIG5vdCwgaGF2ZSBubyBjb21tb24gZ3JvdW5kIG9mIGRpc2N1c3Npb24sIGJ1dCB0aGV5IG11c3QgbmVjZXNzYXJpbHksIGluIHZpZXcgb2YgdGhlaXIgb3BpbmlvbnMsIGRlc3Bpc2Ugb25lIGFub3RoZXIuICBEbyB5b3UgdGhlcmVmb3JlIGNvbnNpZGVyIHZlcnkgY2FyZWZ1bGx5IHdoZXRoZXIgeW91IGFncmVlIGFuZCBzaGFyZSBpbiB0aGlzIG9waW5pb24sIGFuZCBsZXQgdXMgdGFrZSBhcyB0aGUgdGhlIHN0YXJ0aW5nIHBvaW50IG9mIG91ciBkaXNjdXNzaW9uIHRoZSBhc3N1bXB0aW9uIHRoYXQgaXQgaXMgbmV2ZXIgcmlnaHQgdG8gZG8gd3Jvbmcgb3IgdG8gcmVxdWl0ZSB3cm9uZyB3aXRoIHdyb25nLCBvciB3aGVuIHdlIHN1ZmZlciBldmlsIHRvIGRlZmVuZCBvdXJzZWx2ZXMgYnkgZG9pbmcgZXZpbCBpbiByZXR1cm4uICBPciBkbyB5b3UgZGlzYWdyZWUgYW5kIHJlZnVzZSB5b3VyIGFzc2VudAo8bWlsZXN0b25lIG49IjQ5ZSIgdW5pdD0ic2VjdGlvbiIgLz50byB0aGlzIHN0YXJ0aW5nIHBvaW50PyAgRm9yIEkgaGF2ZSBsb25nIGhlbGQgdGhpcyBiZWxpZWYgYW5kIEkgaG9sZCBpdCB5ZXQsIGJ1dCBpZiB5b3UgaGF2ZSByZWFjaGVkIGFueSBvdGhlciBjb25jbHVzaW9uLCBzcGVhayBhbmQgZXhwbGFpbiBpdCB0byBtZS4gIElmIHlvdSBzdGlsbCBob2xkIHRvIG91ciBmb3JtZXIgb3BpbmlvbiwgaGVhciB0aGUgbmV4dCBwb2ludC48L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+SSBkbyBob2xkIHRvIGl0IGFuZCBJIGFncmVlIHdpdGggeW91OyAgc28gZ28gb24uPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPk5vdyB0aGUgbmV4dCB0aGluZyBJIHNheSwgb3IgcmF0aGVyIGFzaywgaXMgdGhpczogIOKAnG91Z2h0IGEgbWFuIHRvIGRvIHdoYXQgaGUgaGFzIGFncmVlZCB0byBkbywgcHJvdmlkZWQgaXQgaXMgcmlnaHQsIG9yIG1heSBoZSB2aW9sYXRlIGhpcyBhZ3JlZW1lbnRzP+KAnTwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5IZSBvdWdodCB0byBkbyBpdC48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+VGhlbiBjb25zaWRlciB3aGV0aGVyLCBpZiB3ZSBnbyBhd2F5CjxtaWxlc3RvbmUgbj0iNTAiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI1MGEiIHVuaXQ9InNlY3Rpb24iIC8+ZnJvbSBoZXJlIHdpdGhvdXQgdGhlIGNvbnNlbnQgb2YgdGhlIHN0YXRlLCB3ZSBhcmUgZG9pbmcgaGFybSB0byB0aGUgdmVyeSBvbmVzIHRvIHdob20gd2UgbGVhc3Qgb3VnaHQgdG8gZG8gaGFybSwgb3Igbm90LCBhbmQgd2hldGhlciB3ZSBhcmUgYWJpZGluZyBieSB3aGF0IHdlIGFncmVlZCB3YXMgcmlnaHQsIG9yIG5vdC48L3A+PC9zcD48c3A+PHNwZWFrZXI+Q3JpdG88L3NwZWFrZXI+PHA+SSBjYW5ub3QgYW5zd2VyIHlvdXIgcXVlc3Rpb24sIFNvY3JhdGVzLCBmb3IgSSBkbyBub3QgdW5kZXJzdGFuZC48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+Q29uc2lkZXIgaXQgaW4gdGhpcyB3YXkuICBJZiwgYXMgSSB3YXMgb24gdGhlIHBvaW50IG9mIHJ1bm5pbmcgYXdheSAob3Igd2hhdGV2ZXIgaXQgc2hvdWxkIGJlIGNhbGxlZCksIHRoZSBsYXdzIGFuZCB0aGUgY29tbW9ud2VhbHRoIHNob3VsZCBjb21lIHRvIG1lIGFuZCBhc2ssIOKAnFRlbGwgbWUsIFNvY3JhdGVzLCB3aGF0IGhhdmUgeW91IGluIG1pbmQgdG8gZG8/ICBBcmUgeW91IG5vdCBpbnRlbmRpbmcgYnkgdGhpcyB0aGluZyB5b3UgYXJlIHRyeWluZyB0byBkbywgdG8gZGVzdHJveSB1cywKPG1pbGVzdG9uZSBuPSI1MGIiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIGxhd3MsIGFuZCB0aGUgZW50aXJlIHN0YXRlLCBzbyBmYXIgYXMgaW4geW91IGxpZXM/ICBPciBkbyB5b3UgdGhpbmsgdGhhdCBzdGF0ZSBjYW4gZXhpc3QgYW5kIG5vdCBiZSBvdmVydHVybmVkLCBpbiB3aGljaCB0aGUgZGVjaXNpb25zIHJlYWNoZWQgYnkgdGhlIGNvdXJ0cyBoYXZlIG5vIGZvcmNlIGJ1dCBhcmUgbWFkZSBpbnZhbGlkIGFuZCBhbm51bGxlZCBieSBwcml2YXRlIHBlcnNvbnM/4oCdICBXaGF0IHNoYWxsIHdlIHNheSwgQ3JpdG8sIGluIHJlcGx5IHRvIHRoaXMgcXVlc3Rpb24gYW5kIG90aGVycyBvZiB0aGUgc2FtZSBraW5kPyAgRm9yIG9uZSBtaWdodCBzYXkgbWFueSB0aGluZ3MsIGVzcGVjaWFsbHkgaWYgb25lIHdlcmUgYW4gb3JhdG9yLCBhYm91dCB0aGUgZGVzdHJ1Y3Rpb24gb2YgdGhhdCBsYXcgd2hpY2ggcHJvdmlkZXMgdGhhdCB0aGUgZGVjaXNpb25zIHJlYWNoZWQgYnkgdGhlIGNvdXJ0cyBzaGFsbCBiZSB2YWxpZC4gIE9yIHNoYWxsIHdlIHNheSB0byB0aGVtLAo8bWlsZXN0b25lIG49IjUwYyIgdW5pdD0ic2VjdGlvbiIgLz7igJxUaGUgc3RhdGUgd3JvbmdlZCBtZSBhbmQgZGlkIG5vdCBqdWRnZSB0aGUgY2FzZSByaWdodGx54oCdPyAgU2hhbGwgd2Ugc2F5IHRoYXQsIG9yIHdoYXQ/PC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPlRoYXQgaXMgd2hhdCB3ZSBzaGFsbCBzYXksIGJ5IFpldXMsIFNvY3JhdGVzLjwvcD48L3NwPjxzcD48c3BlYWtlcj5Tb2NyYXRlczwvc3BlYWtlcj48cD5XaGF0IHRoZW4gaWYgdGhlIGxhd3Mgc2hvdWxkIHNheSwg4oCcU29jcmF0ZXMsIGlzIHRoaXMgdGhlIGFncmVlbWVudCB5b3UgbWFkZSB3aXRoIHVzLCBvciBkaWQgeW91IGFncmVlIHRvIGFiaWRlIGJ5IHRoZSB2ZXJkaWN0cyBwcm9ub3VuY2VkIGJ5IHRoZSBzdGF0ZT/igJ0gIE5vdyBpZiBJIHdlcmUgc3VycHJpc2VkIGJ5IHdoYXQgdGhleSBzYWlkLCBwZXJoYXBzIHRoZXkgd291bGQgY29udGludWUsIOKAnERvbid0IGJlIHN1cnByaXNlZCBhdCB3aGF0IHdlIHNheSwgU29jcmF0ZXMsIGJ1dCBhbnN3ZXIsIHNpbmNlIHlvdSBhcmUgaW4gdGhlIGhhYml0IG9mIGVtcGxveWluZyB0aGUgbWV0aG9kIG9mIHF1ZXN0aW9uIGFuZCBhbnN3ZXIuICBDb21lLAo8bWlsZXN0b25lIG49IjUwZCIgdW5pdD0ic2VjdGlvbiIgLz53aGF0IGZhdWx0IGRvIHlvdSBmaW5kIHdpdGggdXMgYW5kIHRoZSBzdGF0ZSwgdGhhdCB5b3UgYXJlIHRyeWluZyB0byBkZXN0cm95IHVzPyAgSW4gdGhlIGZpcnN0IHBsYWNlLCBkaWQgd2Ugbm90IGJyaW5nIHlvdSBmb3J0aD8gIElzIGl0IG5vdCB0aHJvdWdoIHVzIHRoYXQgeW91ciBmYXRoZXIgbWFycmllZCB5b3VyIG1vdGhlciBhbmQgYmVnYXQgeW91PyAgTm93IHRlbGwgdXMsIGhhdmUgeW91IGFueSBmYXVsdCB0byBmaW5kIHdpdGggdGhvc2Ugb2YgdXMgd2hvIGFyZSB0aGUgbGF3cyBvZiBtYXJyaWFnZT/igJ0gIOKAnEkgZmluZCBubyBmYXVsdCzigJ0gSSBzaG91bGQgc2F5LiAg4oCcT3Igd2l0aCB0aG9zZSB0aGF0IGhhdmUgdG8gZG8gd2l0aCB0aGUgbnVydHVyZSBvZiB0aGUgY2hpbGQgYWZ0ZXIgaGUgaXMgYm9ybiBhbmQgd2l0aCBoaXMgZWR1Y2F0aW9uIHdoaWNoIHlvdSwgbGlrZSBvdGhlcnMsIHJlY2VpdmVkPyAgRGlkIHRob3NlIG9mIHVzIHdobyBhcmUgYXNzaWduZWQgdG8gdGhlc2UgbWF0dGVycyBub3QgZ2l2ZSBnb29kIGRpcmVjdGlvbnMgd2hlbiB3ZSB0b2xkIHlvdXIgZmF0aGVyIHRvIGVkdWNhdGUgeW91IGluIG11c2ljIGFuZCBneW1uYXN0aWNzP+KAnSAKPG1pbGVzdG9uZSBuPSI1MGUiIHVuaXQ9InNlY3Rpb24iIC8+4oCcWW91IGRpZCzigJ0gSSBzaG91bGQgc2F5LiAg4oCcV2VsbCB0aGVuLCB3aGVuIHlvdSB3ZXJlIGJvcm4gYW5kIG51cnR1cmVkIGFuZCBlZHVjYXRlZCwgY291bGQgeW91IHNheSB0byBiZWdpbiB3aXRoIHRoYXQgeW91IHdlcmUgbm90IG91ciBvZmZzcHJpbmcgYW5kIG91ciBzbGF2ZSwgeW91IHlvdXJzZWxmIGFuZCB5b3VyIGFuY2VzdG9ycz8gIEFuZCBpZiB0aGlzIGlzIHNvLCBkbyB5b3UgdGhpbmsgcmlnaHQgYXMgYmV0d2VlbiB5b3UgYW5kIHVzIHJlc3RzIG9uIGEgYmFzaXMgb2YgZXF1YWxpdHksIHNvIHRoYXQgd2hhdGV2ZXIgd2UgdW5kZXJ0YWtlIHRvIGRvIHRvIHlvdSBpdCBpcyByaWdodCBmb3IgeW91IHRvIHJldGFsaWF0ZT8gIFRoZXJlIHdhcyBubyBzdWNoIGVxdWFsaXR5IG9mIHJpZ2h0IGJldHdlZW4geW91IGFuZCB5b3VyIGZhdGhlciBvciB5b3VyIG1hc3RlciwgaWYgeW91IGhhZCBvbmUsIHNvIHRoYXQgd2hhdGV2ZXIgdHJlYXRtZW50IHlvdSByZWNlaXZlZCB5b3UgbWlnaHQgcmV0dXJuIGl0LCBhbnN3ZXJpbmcgdGhlbSBpZiB5b3Ugd2VyZSByZXZpbGVkLAo8bWlsZXN0b25lIG49IjUxIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNTFhIiB1bml0PSJzZWN0aW9uIiAvPm9yIHN0cmlraW5nIGJhY2sgaWYgeW91IHdlcmUgc3RydWNrLCBhbmQgdGhlIGxpa2U7ICBhbmQgZG8geW91IHRoaW5rIHRoYXQgaXQgd2lsbCBiZSBwcm9wZXIgZm9yIHlvdSB0byBhY3Qgc28gdG93YXJkIHlvdXIgY291bnRyeSBhbmQgdGhlIGxhd3MsIHNvIHRoYXQgaWYgd2UgdW5kZXJ0YWtlIHRvIGRlc3Ryb3kgeW91LCB0aGlua2luZyBpdCBpcyByaWdodCwgeW91IHdpbGwgdW5kZXJ0YWtlIGluIHJldHVybiB0byBkZXN0cm95IHVzIGxhd3MgYW5kIHlvdXIgY291bnRyeSwgc28gZmFyIGFzIHlvdSBhcmUgYWJsZSwgYW5kIHdpbGwgc2F5IHRoYXQgaW4gZG9pbmcgdGhpcyB5b3UgYXJlIGRvaW5nIHJpZ2h0LCB5b3Ugd2hvIHJlYWxseSBjYXJlIGZvciB2aXJ0dWU/ICBPciBpcyB5b3VyIHdpc2RvbSBzdWNoIHRoYXQgeW91IGRvIG5vdCBzZWUgdGhhdCB5b3VyIGNvdW50cnkgaXMgbW9yZSBwcmVjaW91cyBhbmQgbW9yZSB0byBiZSByZXZlcmVkIGFuZCBpcyBob2xpZXIgYW5kIGluIGhpZ2hlciBlc3RlZW0KPG1pbGVzdG9uZSBuPSI1MWIiIHVuaXQ9InNlY3Rpb24iIC8+YW1vbmcgdGhlIGdvZHMgYW5kIGFtb25nIG1lbiBvZiB1bmRlcnN0YW5kaW5nIHRoYW4geW91ciBtb3RoZXIgYW5kIHlvdXIgZmF0aGVyIGFuZCBhbGwgeW91ciBhbmNlc3RvcnMsIGFuZCB0aGF0IHlvdSBvdWdodCB0byBzaG93IHRvIGhlciBtb3JlIHJldmVyZW5jZSBhbmQgb2JlZGllbmNlIGFuZCBodW1pbGl0eSB3aGVuIHNoZSBpcyBhbmdyeSB0aGFuIHRvIHlvdXIgZmF0aGVyLCBhbmQgb3VnaHQgZWl0aGVyIHRvIGNvbnZpbmNlIGhlciBieSBwZXJzdWFzaW9uIG9yIHRvIGRvIHdoYXRldmVyIHNoZSBjb21tYW5kcywgYW5kIHRvIHN1ZmZlciwgaWYgc2hlIGNvbW1hbmRzIHlvdSB0byBzdWZmZXIsIGluIHNpbGVuY2UsIGFuZCBpZiBzaGUgb3JkZXJzIHlvdSB0byBiZSBzY291cmdlZCBvciBpbXByaXNvbmVkIG9yIGlmIHNoZSBsZWFkcyB5b3UgdG8gd2FyIHRvIGJlIHdvdW5kZWQgb3Igc2xhaW4sIGhlciB3aWxsIGlzIHRvIGJlIGRvbmUsIGFuZCB0aGlzIGlzIHJpZ2h0LCBhbmQgeW91IG11c3Qgbm90IGdpdmUgd2F5IG9yIGRyYXcgYmFjayBvciBsZWF2ZSB5b3VyIHBvc3QsIGJ1dCBpbiB3YXIgYW5kIGluIGNvdXJ0IGFuZCBldmVyeXdoZXJlLAo8bWlsZXN0b25lIG49IjUxYyIgdW5pdD0ic2VjdGlvbiIgLz55b3UgbXVzdCBkbyB3aGF0ZXZlciB0aGUgc3RhdGUsIHlvdXIgY291bnRyeSwgY29tbWFuZHMsIG9yIG11c3Qgc2hvdyBoZXIgYnkgcGVyc3Vhc2lvbiB3aGF0IGlzIHJlYWxseSByaWdodCwgYnV0IHRoYXQgaXQgaXMgaW1waW91cyB0byB1c2UgdmlvbGVuY2UgYWdhaW5zdCBlaXRoZXIgeW91ciBmYXRoZXIgb3IgeW91ciBtb3RoZXIsIGFuZCBtdWNoIG1vcmUgaW1waW91cyB0byB1c2UgaXQgYWdhaW5zdCB5b3VyIGNvdW50cnk/4oCdICBXaGF0IHNoYWxsIHdlIHJlcGx5IHRvIHRoaXMsIENyaXRvLCB0aGF0IHRoZSBsYXdzIHNwZWFrIHRoZSB0cnV0aCwgb3Igbm90PzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5JIHRoaW5rIHRoZXkgZG8uPC9wPjwvc3A+PHNwPjxzcGVha2VyPlNvY3JhdGVzPC9zcGVha2VyPjxwPuKAnE9ic2VydmUgdGhlbiwgU29jcmF0ZXMs4oCdIHBlcmhhcHMgdGhlIGxhd3Mgd291bGQgc2F5LCDigJx0aGF0IGlmIHdoYXQgd2Ugc2F5IGlzIHRydWUsIHdoYXQgeW91IGFyZSBub3cgdW5kZXJ0YWtpbmcgdG8gZG8gdG8gdXMgaXMgbm90IHJpZ2h0LiAgRm9yIHdlIGJyb3VnaHQgeW91IGludG8gdGhlIHdvcmxkLCBudXJ0dXJlZCB5b3UsIGFuZCBnYXZlIGEgc2hhcmUgb2YgYWxsIHRoZSBnb29kIHRoaW5ncwo8bWlsZXN0b25lIG49IjUxZCIgdW5pdD0ic2VjdGlvbiIgLz53ZSBjb3VsZCB0byB5b3UgYW5kIGFsbCB0aGUgY2l0aXplbnMuICBZZXQgd2UgcHJvY2xhaW0sIGJ5IGhhdmluZyBvZmZlcmVkIHRoZSBvcHBvcnR1bml0eSB0byBhbnkgb2YgdGhlIEF0aGVuaWFucyB3aG8gd2lzaGVzIHRvIGF2YWlsIGhpbXNlbGYgb2YgaXQsIHRoYXQgYW55b25lIHdobyBpcyBub3QgcGxlYXNlZCB3aXRoIHVzIHdoZW4gaGUgaGFzIGJlY29tZSBhIG1hbiBhbmQgaGFzIHNlZW4gdGhlIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBjaXR5IGFuZCB1cywgdGhlIGxhd3MsIG1heSB0YWtlIGhpcyBnb29kcyBhbmQgZ28gYXdheSB3aGVyZXZlciBoZSBsaWtlcy4gIEFuZCBub25lIG9mIHVzIHN0YW5kcyBpbiB0aGUgd2F5IG9yIGZvcmJpZHMgYW55IG9mIHlvdSB0byB0YWtlIGhpcyBnb29kcyBhbmQgZ28gYXdheSB3aGVyZXZlciBoZSBwbGVhc2VzLCBpZiB3ZSBhbmQgdGhlIHN0YXRlIGRvIG5vdCBwbGVhc2UgaGltLCB3aGV0aGVyIGl0IGJlIHRvIGFuIEF0aGVuaWFuIGNvbG9ueSBvciB0byBhIGZvcmVpZ24gY291bnRyeSB3aGVyZSBoZSB3aWxsIGxpdmUgYXMgYW4gYWxpZW4uICBCdXQgd2Ugc2F5IHRoYXQKPG1pbGVzdG9uZSBuPSI1MWUiIHVuaXQ9InNlY3Rpb24iIC8+d2hvZXZlciBvZiB5b3Ugc3RheXMgaGVyZSwgc2VlaW5nIGhvdyB3ZSBhZG1pbmlzdGVyIGp1c3RpY2UgYW5kIGhvdyB3ZSBnb3Zlcm4gdGhlIHN0YXRlIGluIG90aGVyIHJlc3BlY3RzLCBoYXMgdGhlcmVieSBlbnRlcmVkIGludG8gYW4gYWdyZWVtZW50IHdpdGggdXMgdG8gZG8gd2hhdCB3ZSBjb21tYW5kOyAgYW5kIHdlIHNheSB0aGF0IGhlIHdobyBkb2VzIG5vdCBvYmV5IGRvZXMgdGhyZWVmb2xkIHdyb25nLCBiZWNhdXNlIGhlIGRpc29iZXlzIHVzIHdobyBhcmUgaGlzIHBhcmVudHMsIGJlY2F1c2UgaGUgZGlzb2JleXMgdXMgd2hvIG51cnR1cmVkIGhpbSwgYW5kIGJlY2F1c2UgYWZ0ZXIgYWdyZWVpbmcgdG8gb2JleSB1cyBoZSBuZWl0aGVyIG9iZXlzIHVzIG5vciBjb252aW5jZXMgdXMgdGhhdAo8bWlsZXN0b25lIG49IjUyIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNTJhIiB1bml0PSJzZWN0aW9uIiAvPndlIGFyZSB3cm9uZywgdGhvdWdoIHdlIGdpdmUgaGltIHRoZSBvcHBvcnR1bml0eSBhbmQgZG8gbm90IHJvdWdobHkgb3JkZXIgaGltIHRvIGRvIHdoYXQgd2UgY29tbWFuZCwgYnV0IHdoZW4gd2UgYWxsb3cgaGltIGEgY2hvaWNlIG9mIHR3byB0aGluZ3MsIGVpdGhlciB0byBjb252aW5jZSB1cyBvZiBlcnJvciBvciB0byBkbyBvdXIgYmlkZGluZywgaGUgZG9lcyBuZWl0aGVyIG9mIHRoZXNlIHRoaW5ncy7igJ0gIOKAnFdlIHNheSB0aGF0IHlvdSwgU29jcmF0ZXMsIHdpbGwgYmUgZXhwb3NlZCB0byB0aGVzZSByZXByb2FjaGVzLCBpZiB5b3UgZG8gd2hhdCB5b3UgaGF2ZSBpbiBtaW5kLCBhbmQgeW91IG5vdCBsZWFzdCBvZiB0aGUgQXRoZW5pYW5zIGJ1dCBtb3JlIHRoYW4gbW9zdCBvdGhlcnMu4oCdICBJZiB0aGVuIEkgc2hvdWxkIHNheSwg4oCcSG93IHNvP+KAnSBwZXJoYXBzIHRoZXkgbWlnaHQgcmV0b3J0IHdpdGgganVzdGljZSB0aGF0IEkgaGFkIG1hZGUgdGhpcyBhZ3JlZW1lbnQgd2l0aCB0aGVtIG1vcmUgZW1waGF0aWNhbGx5IHRoYW4gbW9zdCBvdGhlciBBdGhlbmlhbnMuICBGb3IgdGhleSB3b3VsZCBzYXksCjxtaWxlc3RvbmUgbj0iNTJiIiB1bml0PSJzZWN0aW9uIiAvPuKAnFNvY3JhdGVzLCB3ZSBoYXZlIHN0cm9uZyBldmlkZW5jZSB0aGF0IHdlIGFuZCB0aGUgY2l0eSBwbGVhc2VkIHlvdTsgIGZvciB5b3Ugd291bGQgbmV2ZXIgaGF2ZSBzdGF5ZWQgaW4gaXQgbW9yZSB0aGFuIGFsbCBvdGhlciBBdGhlbmlhbnMgaWYgeW91IGhhZCBub3QgYmVlbiBiZXR0ZXIgcGxlYXNlZCB3aXRoIGl0IHRoYW4gdGhleTsgIHlvdSBuZXZlciB3ZW50IG91dCBmcm9tIHRoZSBjaXR5IHRvIGEgZmVzdGl2YWwsIG9yIGFueXdoZXJlIGVsc2UsIGV4Y2VwdCBvbiBtaWxpdGFyeSBzZXJ2aWNlLCBhbmQgeW91IG5ldmVyIG1hZGUgYW55IG90aGVyIGpvdXJuZXksIGFzIG90aGVyIHBlb3BsZSBkbywgYW5kIHlvdSBoYWQgbm8gd2lzaCB0byBrbm93IGFueSBvdGhlciBjaXR5IG9yIG90aGVyIGxhd3MsIGJ1dCB5b3Ugd2VyZSBjb250ZW50ZWQgd2l0aCB1cyBhbmQgb3VyIGNpdHkuICBTbyBzdHJvbmdseSBkaWQgeW91IHByZWZlciB1cwo8bWlsZXN0b25lIG49IjUyYyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgYWdyZWUgdG8gbGl2ZSBpbiBhY2NvcmRhbmNlIHdpdGggdXM7ICBhbmQgYmVzaWRlcywgeW91IGJlZ2F0IGNoaWxkcmVuIGluIHRoZSBjaXR5LCBzaG93aW5nIHRoYXQgaXQgcGxlYXNlZCB5b3UuICBBbmQgbW9yZW92ZXIgZXZlbiBhdCB5b3VyIHRyaWFsIHlvdSBtaWdodCBoYXZlIG9mZmVyZWQgZXhpbGUgYXMgeW91ciBwZW5hbHR5LCBpZiB5b3Ugd2lzaGVkLCBhbmQgbWlnaHQgaGF2ZSBkb25lIHdpdGggdGhlIHN0YXRlJ3MgY29uc2VudCB3aGF0IHlvdSBhcmUgbm93IHVuZGVydGFraW5nIHRvIGRvIHdpdGhvdXQgaXQuICBCdXQgeW91IHRoZW4gcHV0IG9uIGFpcnMgYW5kIHNhaWQgeW91IHdlcmUgbm90IGRpc3R1cmJlZCBpZiB5b3UgbXVzdCBkaWUsIGFuZCB5b3UgcHJlZmVycmVkLCBhcyB5b3Ugc2FpZCwgZGVhdGggdG8gZXhpbGUuICBBbmQgbm93IHlvdSBhcmUgbm90IGFzaGFtZWQgdG8gdGhpbmsgb2YgdGhvc2Ugd29yZHMgYW5kIHlvdSBkbyBub3QgcmVzcGVjdCB1cywgdGhlIGxhd3MsIHNpbmNlIHlvdSBhcmUgdHJ5aW5nIHRvIGJyaW5nIHVzIHRvIG5hdWdodDsgCjxtaWxlc3RvbmUgbj0iNTJkIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB5b3UgYXJlIGRvaW5nIHdoYXQgdGhlIG1lYW5lc3Qgc2xhdmUgd291bGQgZG8sIHNpbmNlIHlvdSBhcmUgdHJ5aW5nIHRvIHJ1biBhd2F5IGNvbnRyYXJ5IHRvIHRoZSBjb21wYWN0cyBhbmQgYWdyZWVtZW50cyB5b3UgbWFkZSB3aXRoIHVzIHRoYXQgeW91IHdvdWxkIGxpdmUgaW4gYWNjb3JkYW5jZSB3aXRoIHVzLiAgRmlyc3QgdGhlbiwgYW5zd2VyIHRoaXMgcXVlc3Rpb24sIHdoZXRoZXIgd2Ugc3BlYWsgdGhlIHRydXRoIG9yIG5vdCB3aGVuIHdlIHNheSB0aGF0IHlvdSBhZ3JlZWQsIG5vdCBpbiB3b3JkLCBidXQgYnkgeW91ciBhY3RzLCB0byBsaXZlIGluIGFjY29yZGFuY2Ugd2l0aCB1cy7igJ0gIFdoYXQgc2hhbGwgd2Ugc2F5IHRvIHRoaXMsIENyaXRvPyAgTXVzdCB3ZSBub3QgYWdyZWUgdGhhdCBpdCBpcyB0cnVlPzwvcD48L3NwPjxzcD48c3BlYWtlcj5Dcml0bzwvc3BlYWtlcj48cD5XZSBtdXN0LCBTb2NyYXRlcy48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+4oCcQXJlIHlvdSB0aGVuLOKAnSB0aGV5IHdvdWxkIHNheSwg4oCcbm90IGJyZWFraW5nCjxtaWxlc3RvbmUgbj0iNTJlIiB1bml0PSJzZWN0aW9uIiAvPnlvdXIgY29tcGFjdHMgYW5kIGFncmVlbWVudHMgd2l0aCB1cywgdGhvdWdoIHlvdSB3ZXJlIG5vdCBsZWQgaW50byB0aGVtIGJ5IGNvbXB1bHNpb24gb3IgZnJhdWQsIGFuZCB3ZXJlIG5vdCBmb3JjZWQgdG8gbWFrZSB1cCB5b3VyIG1pbmQgaW4gYSBzaG9ydCB0aW1lLCBidXQgaGFkIHNldmVudHkgeWVhcnMsIGluIHdoaWNoIHlvdSBjb3VsZCBoYXZlIGdvbmUgYXdheSwgaWYgd2UgZGlkIG5vdCBwbGVhc2UgeW91IGFuZCBpZiB5b3UgdGhvdWdodCB0aGUgYWdyZWVtZW50cyB3ZXJlIHVuZmFpcj8gIEJ1dCB5b3UgcHJlZmVycmVkIG5laXRoZXIgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTEwNjUiIGtleT0idGduLDcwMTEwNjUiPkxhY2VkYWVtb248L3BsYWNlTmFtZT4gbm9yIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDEyMDU2IiBrZXk9InRnbiw3MDEyMDU2Ij5DcmV0ZTwvcGxhY2VOYW1lPiwgd2hpY2ggeW91IGFyZSBhbHdheXMgc2F5aW5nIGFyZSB3ZWxsIGdvdmVybmVkLCBub3IgYW55IG90aGVyIG9mIHRoZSBHcmVlayBzdGF0ZXMsCjxtaWxlc3RvbmUgbj0iNTMiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI1M2EiIHVuaXQ9InNlY3Rpb24iIC8+b3Igb2YgdGhlIGZvcmVpZ24gb25lcywgYnV0IHlvdSB3ZW50IGF3YXkgZnJvbSB0aGlzIGNpdHkgbGVzcyB0aGFuIHRoZSBsYW1lIGFuZCB0aGUgYmxpbmQgYW5kIHRoZSBvdGhlciBjcmlwcGxlcy4gIFNvIG11Y2ggbW9yZSB0aGFuIHRoZSBvdGhlciBBdGhlbmlhbnMgd2VyZSB5b3Ugc2F0aXNmaWVkIHdpdGggdGhlIGNpdHkgYW5kIGV2aWRlbnRseSB0aGVyZWZvcmUgd2l0aCB1cywgaXRzIGxhd3M7ICBmb3Igd2hvIHdvdWxkIGJlIHBsZWFzZWQgd2l0aCBhIGNpdHkgYXBhcnQgZnJvbSBpdHMgbGF3cz8gIEFuZCBub3cgd2lsbCB5b3Ugbm90IGFiaWRlIGJ5IHlvdXIgYWdyZWVtZW50PyAgWW91IHdpbGwgaWYgeW91IHRha2Ugb3VyIGFkdmljZSwgU29jcmF0ZXM7ICBhbmQgeW91IHdpbGwgbm90IG1ha2UgeW91cnNlbGYgcmlkaWN1bG91cyBieSBnb2luZyBhd2F5IGZyb20gdGhlIGNpdHkuPG1pbGVzdG9uZSBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxGb3IgY29uc2lkZXIuICBCeSB0cmFuc2dyZXNzaW5nIGluIHRoaXMgd2F5IGFuZCBjb21taXR0aW5nIHRoZXNlIGVycm9ycywgd2hhdCBnb29kIHdpbGwgeW91IGRvIHRvIHlvdXJzZWxmIG9yCjxtaWxlc3RvbmUgbj0iNTNiIiB1bml0PSJzZWN0aW9uIiAvPmFueSBvZiB5b3VyIGZyaWVuZHM/ICBGb3IgaXQgaXMgcHJldHR5IGNsZWFyIHRoYXQgeW91ciBmcmllbmRzIGFsc28gd2lsbCBiZSBleHBvc2VkIHRvIHRoZSByaXNrIG9mIGJhbmlzaG1lbnQgYW5kIHRoZSBsb3NzIG9mIHRoZWlyIGhvbWVzIGluIHRoZSBjaXR5IG9yIG9mIHRoZWlyIHByb3BlcnR5LiAgQW5kIHlvdSB5b3Vyc2VsZiwgaWYgeW91IGdvIHRvIG9uZSBvZiB0aGUgbmVhcmVzdCBjaXRpZXMsIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsVGhlYmVzIiBrZXk9InBlcnNldXMsVGhlYmVzIj5UaGViZXM8L3BsYWNlTmFtZT4gb3IgTWVnYXJh4oCUZm9yIGJvdGggYXJlIHdlbGwgZ292ZXJuZWTigJR3aWxsIGdvIGFzIGFuIGVuZW15LCBTb2NyYXRlcywgdG8gdGhlaXIgZ292ZXJubWVudCwgYW5kIGFsbCB3aG8gY2FyZSBmb3IgdGhlaXIgb3duIGNpdGllcyB3aWxsIGxvb2sgYXNrYW5jZSBhdCB5b3UsIGFuZCB3aWxsIGNvbnNpZGVyIHlvdSBhIGRlc3Ryb3llciBvZiB0aGUgbGF3cywKPG1pbGVzdG9uZSBuPSI1M2MiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHlvdSB3aWxsIGNvbmZpcm0gdGhlIGp1ZGdlcyBpbiB0aGVpciBvcGluaW9uLCBzbyB0aGF0IHRoZXkgd2lsbCB0aGluayB0aGVpciB2ZXJkaWN0IHdhcyBqdXN0LiAgRm9yIGhlIHdobyBpcyBkZXN0cm95ZXIgb2YgdGhlIGxhd3MgbWlnaHQgY2VydGFpbmx5IGJlIHJlZ2FyZGVkIGFzIGEgZGVzdHJveWVyIG9mIHlvdW5nIGFuZCB0aG91Z2h0bGVzcyBtZW4uICBXaWxsIHlvdSB0aGVuIGF2b2lkIHRoZSB3ZWxsLWdvdmVybmVkIGNpdGllcyBhbmQgdGhlIG1vc3QgY2l2aWxpemVkIG1lbj8gIEFuZCBpZiB5b3UgZG8gdGhpcyB3aWxsIHlvdXIgbGlmZSBiZSB3b3J0aCBsaXZpbmc/ICBPciB3aWxsIHlvdSBnbyB0byB0aGVtIGFuZCBoYXZlIHRoZSBmYWNlIHRvIGNhcnJ5IG9u4oCUd2hhdCBraW5kIG9mIGNvbnZlcnNhdGlvbiwgU29jcmF0ZXM/ICBUaGUgc2FtZSBraW5kIHlvdSBjYXJyaWVkIG9uIGhlcmUsIHNheWluZyB0aGF0IHZpcnR1ZSBhbmQganVzdGljZSBhbmQgbGF3ZnVsIHRoaW5ncyBhbmQgdGhlIGxhd3MgYXJlIHRoZSBtb3N0IHByZWNpb3VzIHRoaW5ncyB0byBtZW4/ICBBbmQgZG8geW91IG5vdCB0aGluayB0aGF0IHRoZSBjb25kdWN0IG9mIFNvY3JhdGVzIHdvdWxkIHNlZW0gbW9zdCBkaXNncmFjZWZ1bD8gCjxtaWxlc3RvbmUgbj0iNTNkIiB1bml0PSJzZWN0aW9uIiAvPllvdSBjYW5ub3QgaGVscCB0aGlua2luZyBzby4gIE9yIHlvdSB3aWxsIGtlZXAgYXdheSBmcm9tIHRoZXNlIHBsYWNlcyBhbmQgZ28gdG8gQ3JpdG8ncyBmcmllbmRzIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBrZXk9InRnbiw3MDAxMzk5Ij5UaGVzc2FseTwvcGxhY2VOYW1lPjsgIGZvciB0aGVyZSBncmVhdCBkaXNvcmRlciBhbmQgbGF3bGVzc25lc3MgcHJldmFpbCwgYW5kIHBlcmhhcHMgdGhleSB3b3VsZCBiZSBhbXVzZWQgdG8gaGVhciBvZiB0aGUgbHVkaWNyb3VzIHdheSBpbiB3aGljaCB5b3UgcmFuIGF3YXkgZnJvbSBwcmlzb24gYnkgcHV0dGluZyBvbiBhIGRpc2d1aXNlLCBhIHBlYXNhbnQncyBsZWF0aGVybiBjbG9hayBvciBzb21lIG9mIHRoZSBvdGhlciB0aGluZ3MgaW4gd2hpY2ggcnVuYXdheXMgZHJlc3MgdGhlbXNlbHZlcyB1cCwgYW5kIGNoYW5naW5nIHlvdXIgYXBwZWFyYW5jZS4gIEJ1dCB3aWxsIG5vIG9uZSBzYXkgdGhhdCB5b3UsIGFuIG9sZCBtYW4sIHdobyBoYWQgcHJvYmFibHkgYnV0IGEgc2hvcnQgdGltZSB5ZXQgdG8gbGl2ZSwKPG1pbGVzdG9uZSBuPSI1M2UiIHVuaXQ9InNlY3Rpb24iIC8+Y2x1bmcgdG8gbGlmZSB3aXRoIHN1Y2ggc2hhbWVsZXNzIGdyZWVkIHRoYXQgeW91IHRyYW5zZ3Jlc3NlZCB0aGUgaGlnaGVzdCBsYXdzPyAgUGVyaGFwcyBub3QsIGlmIHlvdSBkbyBub3Qgb2ZmZW5kIGFueW9uZTsgIGJ1dCBpZiB5b3UgZG8sIFNvY3JhdGVzLCB5b3Ugd2lsbCBoYXZlIHRvIGxpc3RlbiB0byBtYW55IHRoaW5ncyB0aGF0IHdvdWxkIGJlIGEgZGlzZ3JhY2UgdG8geW91LiAgU28geW91IHdpbGwgbGl2ZSBhcyBhbiBpbmZlcmlvciBhbmQgYSBzbGF2ZSB0byBldmVyeW9uZS4gIEFuZCB3aGF0IHdpbGwgeW91IGRvIGV4Y2VwdCBmZWFzdCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT4sIGFzIGlmIHlvdSBoYWQgZ29uZSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT4gdG8gYXR0ZW5kIGEgYmFucXVldD8gIFdoYXQgd2lsbCBiZWNvbWUgb2Ygb3VyIGNvbnZlcnNhdGlvbnMgYWJvdXQganVzdGljZSBhbmQKPG1pbGVzdG9uZSBuPSI1NCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjU0YSIgdW5pdD0ic2VjdGlvbiIgLz52aXJ0dWU/ICBCdXQgcGVyaGFwcyB5b3Ugd2lzaCB0byBsaXZlIGZvciB0aGUgc2FrZSBvZiB5b3VyIGNoaWxkcmVuLCB0aGF0IHlvdSBtYXkgYnJpbmcgdGhlbSB1cCBhbmQgZWR1Y2F0ZSB0aGVtPyAgSG93IHNvPyAgV2lsbCB5b3UgdGFrZSB0aGVtIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBrZXk9InRnbiw3MDAxMzk5Ij5UaGVzc2FseTwvcGxhY2VOYW1lPiB0byBiZSBicm91Z2h0IHVwIGFuZCBlZHVjYXRlZCwgbWFraW5nIGV4aWxlcyBvZiB0aGVtLCB0aGF0IHlvdSBtYXkgZ2l2ZSB0aGVtIHRoYXQgYmxlc3NpbmcgYWxzbz8gIE9yIHBlcmhhcHMgeW91IHdpbGwgbm90IGRvIHRoYXQsIGJ1dCBpZiB0aGV5IGFyZSBicm91Z2h0IHVwIGhlcmUgd2hpbGUgeW91IGFyZSBsaXZpbmcsIHdpbGwgdGhleSBiZSBiZXR0ZXIgYnJvdWdodCB1cCBhbmQgZWR1Y2F0ZWQgaWYgeW91IGFyZSBub3Qgd2l0aCB0aGVtIHRoYW4gaWYgeW91IHdlcmUgZGVhZD8gIE9oIHllcyEgIHlvdXIgZnJpZW5kcyB3aWxsIGNhcmUgZm9yIHRoZW0uICBXaWxsIHRoZXkgY2FyZSBmb3IgdGhlbSBpZiB5b3UgZ28gYXdheSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT4gYW5kIG5vdCBpZiB5b3UgZ28gYXdheSB0byB0aGUgZHdlbGxpbmdzIG9mIHRoZSBkZWFkPyAgSWYgdGhvc2Ugd2hvIHNheSB0aGV5IGFyZSB5b3VyIGZyaWVuZHMKPG1pbGVzdG9uZSBuPSI1NGIiIHVuaXQ9InNlY3Rpb24iIC8+YXJlIG9mIGFueSB1c2UsIHdlIG11c3QgYmVsaWV2ZSB0aGV5IHdpbGwgY2FyZSBmb3IgdGhlbSBpbiBib3RoIGNhc2VzIGFsaWtlLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQWgsIFNvY3JhdGVzLCBiZSBndWlkZWQgYnkgdXMgd2hvIHRlbmRlZCB5b3VyIGluZmFuY3kuICBDYXJlIG5laXRoZXIgZm9yIHlvdXIgY2hpbGRyZW4gbm9yIGZvciBsaWZlIG5vciBmb3IgYW55dGhpbmcgZWxzZSBtb3JlIHRoYW4gZm9yIHRoZSByaWdodCwgdGhhdCB3aGVuIHlvdSBjb21lIHRvIHRoZSBob21lIG9mIHRoZSBkZWFkLCB5b3UgbWF5IGhhdmUgYWxsIHRoZXNlIHRoaW5ncyB0byBzYXkgaW4geW91ciBvd24gZGVmZW5jZS4gIEZvciBjbGVhcmx5IGlmIHlvdSBkbyB0aGlzIHRoaW5nIGl0IHdpbGwgbm90IGJlIGJldHRlciBmb3IgeW91IGhlcmUsIG9yIG1vcmUganVzdCBvciBob2xpZXIsIG5vLCBub3IgZm9yIGFueSBvZiB5b3VyIGZyaWVuZHMsIGFuZCBuZWl0aGVyIHdpbGwgaXQgYmUgYmV0dGVyIHdoZW4geW91IHJlYWNoIHRoYXQgb3RoZXIgYWJvZGUuICBOb3csIGhvd2V2ZXIsIHlvdSB3aWxsIGdvIGF3YXkgd3JvbmdlZCwgaWYgeW91IGRvIGdvIGF3YXksIG5vdCBieSB1cywKPG1pbGVzdG9uZSBuPSI1NGMiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIGxhd3MsIGJ1dCBieSBtZW47ICBidXQgaWYgeW91IGVzY2FwZSBhZnRlciBzbyBkaXNncmFjZWZ1bGx5IHJlcXVpdGluZyB3cm9uZyB3aXRoIHdyb25nIGFuZCBldmlsIHdpdGggZXZpbCwgYnJlYWtpbmcgeW91ciBjb21wYWN0cyBhbmQgYWdyZWVtZW50cyB3aXRoIHVzLCBhbmQgaW5qdXJpbmcgdGhvc2Ugd2hvbSB5b3UgbGVhc3Qgb3VnaHQgdG8gaW5qdXJl4oCUeW91cnNlbGYsIHlvdXIgZnJpZW5kcywgeW91ciBjb3VudHJ5IGFuZCB1c+KAlHdlIHNoYWxsIGJlIGFuZ3J5IHdpdGggeW91IHdoaWxlIHlvdSBsaXZlLCBhbmQgdGhlcmUgb3VyIGJyb3RoZXJzLCB0aGUgbGF3cyBpbiBIYWRlcycgcmVhbG0sIHdpbGwgbm90IHJlY2VpdmUgeW91IGdyYWNpb3VzbHk7ICBmb3IgdGhleSB3aWxsIGtub3cgdGhhdCB5b3UgdHJpZWQsIHNvIGZhciBhcyBpbiB5b3UgbGF5LCB0byBkZXN0cm95IHVzLiAgRG8gbm90IGxldCBDcml0byBwZXJzdWFkZSB5b3UgdG8gZG8KPG1pbGVzdG9uZSBuPSI1NGQiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCBoZSBzYXlzLCBidXQgdGFrZSBvdXIgYWR2aWNlLjxtaWxlc3RvbmUgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QmUgd2VsbCBhc3N1cmVkLCBteSBkZWFyIGZyaWVuZCwgQ3JpdG8sIHRoYXQgdGhpcyBpcyB3aGF0IEkgc2VlbSB0byBoZWFyLCBhcyB0aGUgZnJlbnppZWQgZGVydmlzaGVzIG9mIEN5YmVsZSBzZWVtIHRvIGhlYXIgdGhlIGZsdXRlcywgYW5kIHRoaXMgc291bmQgb2YgdGhlc2Ugd29yZHMgcmUtZWNob2VzIHdpdGhpbiBtZSBhbmQgcHJldmVudHMgbXkgaGVhcmluZyBhbnkgb3RoZXIgd29yZHMuICBBbmQgYmUgYXNzdXJlZCB0aGF0LCBzbyBmYXIgYXMgSSBub3cgYmVsaWV2ZSwgaWYgeW91IGFyZ3VlIGFnYWluc3QgdGhlc2Ugd29yZHMgeW91IHdpbGwgc3BlYWsgaW4gdmFpbi4gIE5ldmVydGhlbGVzcywgaWYgeW91IHRoaW5rIHlvdSBjYW4gYWNjb21wbGlzaCBhbnl0aGluZywgc3BlYWsuPC9wPjwvc3A+PHNwPjxzcGVha2VyPkNyaXRvPC9zcGVha2VyPjxwPk5vLCBTb2NyYXRlcywgSSBoYXZlIG5vdGhpbmcgdG8gc2F5Lgo8bWlsZXN0b25lIG49IjU0ZSIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3A+PHNwZWFrZXI+U29jcmF0ZXM8L3NwZWFrZXI+PHA+VGhlbiwgQ3JpdG8sIGxldCBpdCBiZTsgIGFuZCBsZXQgdXMgYWN0IGluIHRoaXMgd2F5LCBzaW5jZSBpdCBpcyBpbiB0aGlzIHdheSB0aGF0IEdvZCBsZWFkcyB1cy48L3A+PC9zcD48L2JvZHk+PGhlYWQgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvaGVhZD4KPGNhc3RMaXN0IGNsYXNzPSJ0cmFuc2xhdGlvbiI+PGNhc3RJdGVtIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0icm9sZSI+PHJvbGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvcm9sZT48L2Nhc3RJdGVtPjxjYXN0SXRlbSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InJvbGUiPjxyb2xlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3JvbGU+PC9jYXN0SXRlbT48L2Nhc3RMaXN0Pgo8Y2FzdEl0ZW0gY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJyb2xlIj48cm9sZSBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9yb2xlPjwvY2FzdEl0ZW0+PHJvbGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvcm9sZT48Y2FzdEl0ZW0gY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJyb2xlIj48cm9sZSBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9yb2xlPjwvY2FzdEl0ZW0+PHJvbGUgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvcm9sZT48L3RyYW5zbGF0aW9uPg=="
translation['43.43a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0MyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDNhIiB1bml0PSJzZWN0aW9uIiAvPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaHkgaGF2ZSB5b3UgY29tZSBhdCB0aGlzIHRpbWUsIENyaXRvPyAgT3IgaXNuJ3QgaXQgc3RpbGwgZWFybHk/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoeSBoYXZlIHlvdSBjb21lIGF0IHRoaXMgdGltZSwgQ3JpdG8/ICBPciBpc24ndCBpdCBzdGlsbCBlYXJseT88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywgdmVyeSBlYXJseS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCB2ZXJ5IGVhcmx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QWJvdXQgd2hhdCB0aW1lPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BYm91dCB3aGF0IHRpbWU/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5KdXN0IGJlZm9yZSBkYXduLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5KdXN0IGJlZm9yZSBkYXduLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBhbSBzdXJwcmlzZWQgdGhhdCB0aGUgd2F0Y2htYW4gb2YgdGhlIHByaXNvbiB3YXMgd2lsbGluZyB0byBsZXQgeW91IGluLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGFtIHN1cnByaXNlZCB0aGF0IHRoZSB3YXRjaG1hbiBvZiB0aGUgcHJpc29uIHdhcyB3aWxsaW5nIHRvIGxldCB5b3UgaW4uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5IZSBpcyB1c2VkIHRvIG1lIGJ5IHRoaXMgdGltZSwgU29jcmF0ZXMsIGJlY2F1c2UgSSBjb21lIGhlcmUgc28gb2Z0ZW4sIGFuZCBiZXNpZGVzIEkgaGF2ZSBkb25lIHNvbWV0aGluZyBmb3IgaGltLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5IZSBpcyB1c2VkIHRvIG1lIGJ5IHRoaXMgdGltZSwgU29jcmF0ZXMsIGJlY2F1c2UgSSBjb21lIGhlcmUgc28gb2Z0ZW4sIGFuZCBiZXNpZGVzIEkgaGF2ZSBkb25lIHNvbWV0aGluZyBmb3IgaGltLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SGF2ZSB5b3UganVzdCBjb21lLCBvciBzb21lIHRpbWUgYWdvPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5IYXZlIHlvdSBqdXN0IGNvbWUsIG9yIHNvbWUgdGltZSBhZ28/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb21lIGxpdHRsZSB0aW1lIGFnby4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQzYiIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29tZSBsaXR0bGUgdGltZSBhZ28uCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0M2IiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvdHJhbnNsYXRpb24+"
translation['43.43b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0M2IiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gd2h5IGRpZCB5b3Ugbm90IHdha2UgbWUgYXQgb25jZSwgaW5zdGVhZCBvZiBzaXR0aW5nIGJ5IG1lIGluIHNpbGVuY2U/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gd2h5IGRpZCB5b3Ugbm90IHdha2UgbWUgYXQgb25jZSwgaW5zdGVhZCBvZiBzaXR0aW5nIGJ5IG1lIGluIHNpbGVuY2U/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Obywgbm8sIGJ5IFpldXMsIFNvY3JhdGVzLCBJIG9ubHkgd2lzaCBJIG15c2VsZiB3ZXJlIG5vdCBzbyBzbGVlcGxlc3MgYW5kIHNvcnJvd2Z1bC4gIEJ1dCBJIGhhdmUgYmVlbiB3b25kZXJpbmcgYXQgeW91IGZvciBzb21lIHRpbWUsIHNlZWluZyBob3cgc3dlZXRseSB5b3Ugc2xlZXA7ICBhbmQgSSBwdXJwb3NlbHkgcmVmcmFpbmVkIGZyb20gd2FraW5nIHlvdSwgdGhhdCB5b3UgbWlnaHQgcGFzcyB0aGUgdGltZSBhcyBwbGVhc2FudGx5IGFzIHBvc3NpYmxlLiAgSSBoYXZlIG9mdGVuIHRob3VnaHQgdGhyb3VnaG91dCB5b3VyIGxpZmUgaGl0aGVydG8gdGhhdCB5b3Ugd2VyZSBvZiBhIGhhcHB5IGRpc3Bvc2l0aW9uLCBhbmQgSSB0aGluayBzbyBtb3JlIHRoYW4gZXZlciBpbiB0aGlzIHJlc2VudCBtaXNmb3J0dW5lLCBzaW5jZSB5b3UgYmVhciBpdCBzbyBlYXNpbHkgYW5kIGNhbG1seS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm8sIG5vLCBieSBaZXVzLCBTb2NyYXRlcywgSSBvbmx5IHdpc2ggSSBteXNlbGYgd2VyZSBub3Qgc28gc2xlZXBsZXNzIGFuZCBzb3Jyb3dmdWwuICBCdXQgSSBoYXZlIGJlZW4gd29uZGVyaW5nIGF0IHlvdSBmb3Igc29tZSB0aW1lLCBzZWVpbmcgaG93IHN3ZWV0bHkgeW91IHNsZWVwOyAgYW5kIEkgcHVycG9zZWx5IHJlZnJhaW5lZCBmcm9tIHdha2luZyB5b3UsIHRoYXQgeW91IG1pZ2h0IHBhc3MgdGhlIHRpbWUgYXMgcGxlYXNhbnRseSBhcyBwb3NzaWJsZS4gIEkgaGF2ZSBvZnRlbiB0aG91Z2h0IHRocm91Z2hvdXQgeW91ciBsaWZlIGhpdGhlcnRvIHRoYXQgeW91IHdlcmUgb2YgYSBoYXBweSBkaXNwb3NpdGlvbiwgYW5kIEkgdGhpbmsgc28gbW9yZSB0aGFuIGV2ZXIgaW4gdGhpcyByZXNlbnQgbWlzZm9ydHVuZSwgc2luY2UgeW91IGJlYXIgaXQgc28gZWFzaWx5IGFuZCBjYWxtbHkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsLCBDcml0bywgaXQgd291bGQgYmUgYWJzdXJkCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0M2MiIHVuaXQ9InNlY3Rpb24iIC8+aWYgYXQgbXkgYWdlIEkgd2VyZSBkaXN0dXJiZWQgYmVjYXVzZSBJIG11c3QgZGllIG5vdy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgQ3JpdG8sIGl0IHdvdWxkIGJlIGFic3VyZAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDNjIiB1bml0PSJzZWN0aW9uIiAvPmlmIGF0IG15IGFnZSBJIHdlcmUgZGlzdHVyYmVkIGJlY2F1c2UgSSBtdXN0IGRpZSBub3cuPC9wPjwvdHJhbnNsYXRpb24+"
translation['43.43c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0M2MiIHVuaXQ9InNlY3Rpb24iIC8+aWYgYXQgbXkgYWdlIEkgd2VyZSBkaXN0dXJiZWQgYmVjYXVzZSBJIG11c3QgZGllIG5vdy48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T3RoZXIgbWVuIGFzIG9sZCwgU29jcmF0ZXMsIGJlY29tZSBpbnZvbHZlZCBpbiBzaW1pbGFyIG1pc2ZvcnR1bmVzLCBidXQgdGhlaXIgYWdlIGRvZXMgbm90IGluIHRoZSBsZWFzdCBwcmV2ZW50IHRoZW0gZnJvbSBiZWluZyBkaXN0dXJiZWQgYnkgdGhlaXIgZmF0ZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T3RoZXIgbWVuIGFzIG9sZCwgU29jcmF0ZXMsIGJlY29tZSBpbnZvbHZlZCBpbiBzaW1pbGFyIG1pc2ZvcnR1bmVzLCBidXQgdGhlaXIgYWdlIGRvZXMgbm90IGluIHRoZSBsZWFzdCBwcmV2ZW50IHRoZW0gZnJvbSBiZWluZyBkaXN0dXJiZWQgYnkgdGhlaXIgZmF0ZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoYXQgaXMgdHJ1ZS4gIEJ1dCB3aHkgaGF2ZSB5b3UgY29tZSBzbyBlYXJseT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhhdCBpcyB0cnVlLiAgQnV0IHdoeSBoYXZlIHlvdSBjb21lIHNvIGVhcmx5PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VG8gYnJpbmcgbmV3cywgU29jcmF0ZXMsIHNhZCBuZXdzLCB0aG91Z2ggYXBwYXJlbnRseSBub3Qgc2FkIHRvIHlvdSwgYnV0IHNhZCBhbmQgZ3JpZXZvdXMgbWUgYW5kIGFsbCB5b3VyIGZyaWVuZHMsIGFuZCB0byBmZXcgb2YgdGhlbSwgSSB0aGluaywgc28gZ3JpZXZvdXMgYXMgdG8gbWUuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRvIGJyaW5nIG5ld3MsIFNvY3JhdGVzLCBzYWQgbmV3cywgdGhvdWdoIGFwcGFyZW50bHkgbm90IHNhZCB0byB5b3UsIGJ1dCBzYWQgYW5kIGdyaWV2b3VzIG1lIGFuZCBhbGwgeW91ciBmcmllbmRzLCBhbmQgdG8gZmV3IG9mIHRoZW0sIEkgdGhpbmssIHNvIGdyaWV2b3VzIGFzIHRvIG1lLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hhdCBpcyB0aGlzIG5ld3M/ICBIYXMgdGhlIHNoaXAgY29tZSBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVsb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERlbG9zIj5EZWxvczwvcGxhY2VOYW1lPiwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQzZCIgdW5pdD0ic2VjdGlvbiIgLz5hdCB0aGUgYXJyaXZhbCBvZiB3aGljaCBJIGFtIHRvIGRpZT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hhdCBpcyB0aGlzIG5ld3M/ICBIYXMgdGhlIHNoaXAgY29tZSBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVsb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERlbG9zIj5EZWxvczwvcGxhY2VOYW1lPiwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQzZCIgdW5pdD0ic2VjdGlvbiIgLz5hdCB0aGUgYXJyaXZhbCBvZiB3aGljaCBJIGFtIHRvIGRpZT88L3A+PHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxEZWxvcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsRGVsb3MiPkRlbG9zPC9wbGFjZU5hbWU+LAo8L3RyYW5zbGF0aW9uPg=="
translation['43.43d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0M2QiIHVuaXQ9InNlY3Rpb24iIC8+YXQgdGhlIGFycml2YWwgb2Ygd2hpY2ggSSBhbSB0byBkaWU/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkl0IGhhcyBub3QgZXhhY3RseSBjb21lLCBidXQgSSB0aGluayBpdCB3aWxsIGNvbWUgdG9kYXkgZnJvbSB0aGUgcmVwb3J0cyBvZiBzb21lIG1lbiB3aG8gaGF2ZSBjb21lIGZyb20gU3VuaXVtIGFuZCBsZWZ0IGl0IHRoZXJlLiAgTm93IGl0IGlzIGNsZWFyIGZyb20gd2hhdCB0aGV5IHNheSB0aGF0IGl0IHdpbGwgY29tZSB0b2RheSwgYW5kIHNvIHRvbW9ycm93LCBTb2NyYXRlcywgeW91ciBsaWZlIG11c3QgZW5kLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JdCBoYXMgbm90IGV4YWN0bHkgY29tZSwgYnV0IEkgdGhpbmsgaXQgd2lsbCBjb21lIHRvZGF5IGZyb20gdGhlIHJlcG9ydHMgb2Ygc29tZSBtZW4gd2hvIGhhdmUgY29tZSBmcm9tIFN1bml1bSBhbmQgbGVmdCBpdCB0aGVyZS4gIE5vdyBpdCBpcyBjbGVhciBmcm9tIHdoYXQgdGhleSBzYXkgdGhhdCBpdCB3aWxsIGNvbWUgdG9kYXksIGFuZCBzbyB0b21vcnJvdywgU29jcmF0ZXMsIHlvdXIgbGlmZSBtdXN0IGVuZC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwsIENyaXRvLCBnb29kIGx1Y2sgYmUgd2l0aCB1cyEgIElmIHRoaXMgaXMgdGhlIHdpbGwgb2YgdGhlIGdvZHMsIHNvIGJlIGl0LiAgSG93ZXZlciwgSSBkbyBub3QgdGhpbmsKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ0IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNDRhIiB1bml0PSJzZWN0aW9uIiAvPml0IHdpbGwgY29tZSB0b2RheS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgQ3JpdG8sIGdvb2QgbHVjayBiZSB3aXRoIHVzISAgSWYgdGhpcyBpcyB0aGUgd2lsbCBvZiB0aGUgZ29kcywgc28gYmUgaXQuICBIb3dldmVyLCBJIGRvIG5vdCB0aGluawo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDQiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI0NGEiIHVuaXQ9InNlY3Rpb24iIC8+aXQgd2lsbCBjb21lIHRvZGF5LjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['44.44a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDRhIiB1bml0PSJzZWN0aW9uIiAvPml0IHdpbGwgY29tZSB0b2RheS48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hhdCBpcyB5b3VyIHJlYXNvbiBmb3Igbm90IHRoaW5raW5nIHNvPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IGlzIHlvdXIgcmVhc29uIGZvciBub3QgdGhpbmtpbmcgc28/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHdpbGwgdGVsbCB5b3UuICBJIG11c3QgZGllIG9uIHRoZSBkYXkgYWZ0ZXIgdGhlIHNoaXAgY29tZXMgaW4sIG11c3QgSSBub3Q/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgd2lsbCB0ZWxsIHlvdS4gIEkgbXVzdCBkaWUgb24gdGhlIGRheSBhZnRlciB0aGUgc2hpcCBjb21lcyBpbiwgbXVzdCBJIG5vdD88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlNvIHRob3NlIHNheSB3aG8gaGF2ZSBjaGFyZ2Ugb2YgdGhlc2UgbWF0dGVycy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U28gdGhvc2Ugc2F5IHdobyBoYXZlIGNoYXJnZSBvZiB0aGVzZSBtYXR0ZXJzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgSSB0aGluayBpdCB3aWxsIG5vdCBjb21lIGluIHRvZGF5LCBidXQgdG9tb3Jyb3cuICBBbmQgbXkgcmVhc29uIGZvciB0aGlzIGlzIGEgZHJlYW0gd2hpY2ggSSBoYWQgYSBsaXR0bGUgd2hpbGUgYWdvIGluIHRoZSBjb3Vyc2Ugb2YgdGhpcyBuaWdodC4gIEFuZCBwZXJoYXBzIHlvdSBsZXQgbWUgc2xlZXAganVzdCBhdCB0aGUgcmlnaHQgdGltZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgSSB0aGluayBpdCB3aWxsIG5vdCBjb21lIGluIHRvZGF5LCBidXQgdG9tb3Jyb3cuICBBbmQgbXkgcmVhc29uIGZvciB0aGlzIGlzIGEgZHJlYW0gd2hpY2ggSSBoYWQgYSBsaXR0bGUgd2hpbGUgYWdvIGluIHRoZSBjb3Vyc2Ugb2YgdGhpcyBuaWdodC4gIEFuZCBwZXJoYXBzIHlvdSBsZXQgbWUgc2xlZXAganVzdCBhdCB0aGUgcmlnaHQgdGltZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgd2FzIHRoZSBkcmVhbT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hhdCB3YXMgdGhlIGRyZWFtPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBkcmVhbWVkIHRoYXQgYSBiZWF1dGlmdWwsIGZhaXIgd29tYW4sIGNsb3RoZWQgaW4gd2hpdGUgcmFpbWVudCwgY2FtZSB0byBtZSBhbmQgY2FsbGVkIG1lCiAgICA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDRiIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBzYWlkLCDigJxTb2NyYXRlcywgPHF1b3RlIHR5cGU9InZlcnNlIj48bCBtZXQ9ImRhY3R5bGljIj5vbiB0aGUgdGhpcmQgZGF5IHRob3Ugd291bGRzdCBjb21lIHRvIGZlcnRpbGUgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxQaHRoaWEiIGtleT0icGVyc2V1cyxQaHRoaWEiPlBodGhpYTwvcGxhY2VOYW1lPi7igJ08L2w+PC9xdW90ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiA5LjM2MyIgdmFsaWQ9InllcyI+SG9tLiBJbC4gOS4zNjM8L2JpYmw+Ljwvbm90ZT48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBkcmVhbWVkIHRoYXQgYSBiZWF1dGlmdWwsIGZhaXIgd29tYW4sIGNsb3RoZWQgaW4gd2hpdGUgcmFpbWVudCwgY2FtZSB0byBtZSBhbmQgY2FsbGVkIG1lCiAgICA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDRiIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBzYWlkLCDigJxTb2NyYXRlcywgPHF1b3RlIHR5cGU9InZlcnNlIj48bCBtZXQ9ImRhY3R5bGljIj5vbiB0aGUgdGhpcmQgZGF5IHRob3Ugd291bGRzdCBjb21lIHRvIGZlcnRpbGUgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxQaHRoaWEiIGtleT0icGVyc2V1cyxQaHRoaWEiPlBodGhpYTwvcGxhY2VOYW1lPi7igJ08L2w+PC9xdW90ZT48bm90ZSBhbmNob3JlZD0ieWVzIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiA5LjM2MyIgdmFsaWQ9InllcyI+SG9tLiBJbC4gOS4zNjM8L2JpYmw+Ljwvbm90ZT48L3A+PC90cmFuc2xhdGlvbj4="
translation['44.44b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NGIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHNhaWQsIOKAnFNvY3JhdGVzLCA8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+PGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5vbiB0aGUgdGhpcmQgZGF5IHRob3Ugd291bGRzdCBjb21lIHRvIGZlcnRpbGUgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxQaHRoaWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFBodGhpYSI+UGh0aGlhPC9wbGFjZU5hbWU+LuKAnTwvbD48L3F1b3RlPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+b24gdGhlIHRoaXJkIGRheSB0aG91IHdvdWxkc3QgY29tZSB0byBmZXJ0aWxlIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsUGh0aGlhIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxQaHRoaWEiPlBodGhpYTwvcGxhY2VOYW1lPi7igJ08L2w+PHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxQaHRoaWEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFBodGhpYSI+UGh0aGlhPC9wbGFjZU5hbWU+LuKAnTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiA5LjM2MyIgdmFsaWQ9InllcyI+SG9tLiBJbC4gOS4zNjM8L2JpYmw+Ljwvbm90ZT48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIiBuPSJIb20uIElsLiA5LjM2MyIgdmFsaWQ9InllcyI+SG9tLiBJbC4gOS4zNjM8L2JpYmw+LjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BIHN0cmFuZ2UgZHJlYW0sIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BIHN0cmFuZ2UgZHJlYW0sIFNvY3JhdGVzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm8sIGEgY2xlYXIgb25lLCBhdCBhbnkgcmF0ZSwgSSB0aGluaywgQ3JpdG8uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vLCBhIGNsZWFyIG9uZSwgYXQgYW55IHJhdGUsIEkgdGhpbmssIENyaXRvLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VG9vIGNsZWFyLCBhcHBhcmVudGx5LiAgQnV0LCBteSBkZWFyIFNvY3JhdGVzLCBldmVuIG5vdyBsaXN0ZW4gdG8gbWUgYW5kIHNhdmUgeW91cnNlbGYuICBTaW5jZSwgaWYgeW91IGRpZSwgaXQgd2lsbCBiZSBubyBtZXJlIHNpbmdsZSBtaXNmb3J0dW5lIHRvIG1lLCBidXQgSSBzaGFsbCBsb3NlIGEgZnJpZW5kIHN1Y2ggYXMgSSBjYW4gbmV2ZXIgZmluZCBhZ2FpbiwgYW5kIGJlc2lkZXMsIG1hbnkgcGVyc29ucyB3aG8gZG8gbm90IGtub3cgeW91IGFuZCBtZSB3ZWxsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NGMiIHVuaXQ9InNlY3Rpb24iIC8+d2lsbCB0aGluayBJIGNvdWxkIGhhdmUgc2F2ZWQgeW91IGlmIEkgaGFkIGJlZW4gd2lsbGluZyB0byBzcGVuZCBtb25leSwgYnV0IHRoYXQgSSB3b3VsZCBub3QgdGFrZSB0aGUgdHJvdWJsZS4gIEFuZCB5ZXQgd2hhdCByZXB1dGF0aW9uIGNvdWxkIGJlIG1vcmUgZGlzZ3JhY2VmdWwgdGhhbiB0aGF0IG9mIGNvbnNpZGVyaW5nIG9uZSdzIG1vbmV5IG9mIG1vcmUgaW1wb3J0YW5jZSB0aGFuIG9uZSdzIGZyaWVuZHM/ICBGb3IgbW9zdCBwZW9wbGUgd2lsbCBub3QgYmVsaWV2ZSB0aGF0IHdlIHdlcmUgZWFnZXIgdG8gaGVscCB5b3UgdG8gZ28gYXdheSBmcm9tIGhlcmUsIGJ1dCB5b3UgcmVmdXNlZC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VG9vIGNsZWFyLCBhcHBhcmVudGx5LiAgQnV0LCBteSBkZWFyIFNvY3JhdGVzLCBldmVuIG5vdyBsaXN0ZW4gdG8gbWUgYW5kIHNhdmUgeW91cnNlbGYuICBTaW5jZSwgaWYgeW91IGRpZSwgaXQgd2lsbCBiZSBubyBtZXJlIHNpbmdsZSBtaXNmb3J0dW5lIHRvIG1lLCBidXQgSSBzaGFsbCBsb3NlIGEgZnJpZW5kIHN1Y2ggYXMgSSBjYW4gbmV2ZXIgZmluZCBhZ2FpbiwgYW5kIGJlc2lkZXMsIG1hbnkgcGVyc29ucyB3aG8gZG8gbm90IGtub3cgeW91IGFuZCBtZSB3ZWxsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NGMiIHVuaXQ9InNlY3Rpb24iIC8+d2lsbCB0aGluayBJIGNvdWxkIGhhdmUgc2F2ZWQgeW91IGlmIEkgaGFkIGJlZW4gd2lsbGluZyB0byBzcGVuZCBtb25leSwgYnV0IHRoYXQgSSB3b3VsZCBub3QgdGFrZSB0aGUgdHJvdWJsZS4gIEFuZCB5ZXQgd2hhdCByZXB1dGF0aW9uIGNvdWxkIGJlIG1vcmUgZGlzZ3JhY2VmdWwgdGhhbiB0aGF0IG9mIGNvbnNpZGVyaW5nIG9uZSdzIG1vbmV5IG9mIG1vcmUgaW1wb3J0YW5jZSB0aGFuIG9uZSdzIGZyaWVuZHM/ICBGb3IgbW9zdCBwZW9wbGUgd2lsbCBub3QgYmVsaWV2ZSB0aGF0IHdlIHdlcmUgZWFnZXIgdG8gaGVscCB5b3UgdG8gZ28gYXdheSBmcm9tIGhlcmUsIGJ1dCB5b3UgcmVmdXNlZC48L3A+PC90cmFuc2xhdGlvbj4="
translation['44.44c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NGMiIHVuaXQ9InNlY3Rpb24iIC8+d2lsbCB0aGluayBJIGNvdWxkIGhhdmUgc2F2ZWQgeW91IGlmIEkgaGFkIGJlZW4gd2lsbGluZyB0byBzcGVuZCBtb25leSwgYnV0IHRoYXQgSSB3b3VsZCBub3QgdGFrZSB0aGUgdHJvdWJsZS4gIEFuZCB5ZXQgd2hhdCByZXB1dGF0aW9uIGNvdWxkIGJlIG1vcmUgZGlzZ3JhY2VmdWwgdGhhbiB0aGF0IG9mIGNvbnNpZGVyaW5nIG9uZSdzIG1vbmV5IG9mIG1vcmUgaW1wb3J0YW5jZSB0aGFuIG9uZSdzIGZyaWVuZHM/ICBGb3IgbW9zdCBwZW9wbGUgd2lsbCBub3QgYmVsaWV2ZSB0aGF0IHdlIHdlcmUgZWFnZXIgdG8gaGVscCB5b3UgdG8gZ28gYXdheSBmcm9tIGhlcmUsIGJ1dCB5b3UgcmVmdXNlZC48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0LCBteSBkZWFyIENyaXRvLCB3aHkgZG8gd2UgY2FyZSBzbyBtdWNoIGZvciB3aGF0IG1vc3QgcGVvcGxlIHRoaW5rPyAgRm9yIHRoZSBtb3N0IHJlYXNvbmFibGUgbWVuLCB3aG9zZSBvcGluaW9uIGlzIG1vcmUgd29ydGggY29uc2lkZXJpbmcsIHdpbGwgdGhpbmsgdGhhdCB0aGluZ3Mgd2VyZSBkb25lIGFzIHRoZXkgcmVhbGx5IHdpbGwgYmUgZG9uZS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ0ZCIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0LCBteSBkZWFyIENyaXRvLCB3aHkgZG8gd2UgY2FyZSBzbyBtdWNoIGZvciB3aGF0IG1vc3QgcGVvcGxlIHRoaW5rPyAgRm9yIHRoZSBtb3N0IHJlYXNvbmFibGUgbWVuLCB3aG9zZSBvcGluaW9uIGlzIG1vcmUgd29ydGggY29uc2lkZXJpbmcsIHdpbGwgdGhpbmsgdGhhdCB0aGluZ3Mgd2VyZSBkb25lIGFzIHRoZXkgcmVhbGx5IHdpbGwgYmUgZG9uZS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ0ZCIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC90cmFuc2xhdGlvbj4="
translation['44.44d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NGQiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCB5b3Ugc2VlIGl0IGlzIG5lY2Vzc2FyeSwgU29jcmF0ZXMsIHRvIGNhcmUgZm9yIHRoZSBvcGluaW9uIG9mIHRoZSBwdWJsaWMsIGZvciB0aGlzIHZlcnkgdHJvdWJsZSB3ZSBhcmUgaW4gbm93IHNob3dzIHRoYXQgdGhlIHB1YmxpYyBpcyBhYmxlIHRvIGFjY29tcGxpc2ggbm90IGJ5IGFueSBtZWFucyB0aGUgbGVhc3QsIGJ1dCBhbG1vc3QgdGhlIGdyZWF0ZXN0IG9mIGV2aWxzLCBpZiBvbmUgaGFzIGEgYmFkIHJlcHV0YXRpb24gd2l0aCBpdC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHlvdSBzZWUgaXQgaXMgbmVjZXNzYXJ5LCBTb2NyYXRlcywgdG8gY2FyZSBmb3IgdGhlIG9waW5pb24gb2YgdGhlIHB1YmxpYywgZm9yIHRoaXMgdmVyeSB0cm91YmxlIHdlIGFyZSBpbiBub3cgc2hvd3MgdGhhdCB0aGUgcHVibGljIGlzIGFibGUgdG8gYWNjb21wbGlzaCBub3QgYnkgYW55IG1lYW5zIHRoZSBsZWFzdCwgYnV0IGFsbW9zdCB0aGUgZ3JlYXRlc3Qgb2YgZXZpbHMsIGlmIG9uZSBoYXMgYSBiYWQgcmVwdXRhdGlvbiB3aXRoIGl0LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBvbmx5IHdpc2gsIENyaXRvLCB0aGUgcGVvcGxlIGNvdWxkIGFjY29tcGxpc2ggdGhlIGdyZWF0ZXN0IGV2aWxzLCB0aGF0IHRoZXkgbWlnaHQgYmUgYWJsZSB0byBhY2NvbXBsaXNoIGFsc28gdGhlIGdyZWF0ZXN0IGdvb2QgdGhpbmdzLiAgVGhlbiBhbGwgd291bGQgYmUgd2VsbC4gIEJ1dCBub3cgdGhleSBjYW4gZG8gbmVpdGhlciBvZiB0aGUgdHdvOyAgZm9yIHRoZXkgYXJlIG5vdCBhYmxlIHRvIG1ha2UgYSBtYW4gd2lzZSBvciBmb29saXNoLCBidXQgdGhleSBkbyB3aGF0ZXZlciBvY2N1cnMgdG8gdGhlbS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ0ZSIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBvbmx5IHdpc2gsIENyaXRvLCB0aGUgcGVvcGxlIGNvdWxkIGFjY29tcGxpc2ggdGhlIGdyZWF0ZXN0IGV2aWxzLCB0aGF0IHRoZXkgbWlnaHQgYmUgYWJsZSB0byBhY2NvbXBsaXNoIGFsc28gdGhlIGdyZWF0ZXN0IGdvb2QgdGhpbmdzLiAgVGhlbiBhbGwgd291bGQgYmUgd2VsbC4gIEJ1dCBub3cgdGhleSBjYW4gZG8gbmVpdGhlciBvZiB0aGUgdHdvOyAgZm9yIHRoZXkgYXJlIG5vdCBhYmxlIHRvIG1ha2UgYSBtYW4gd2lzZSBvciBmb29saXNoLCBidXQgdGhleSBkbyB3aGF0ZXZlciBvY2N1cnMgdG8gdGhlbS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ0ZSIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC90cmFuc2xhdGlvbj4="
translation['44.44e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NGUiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoYXQgbWF5IHdlbGwgYmUuICBCdXQsIFNvY3JhdGVzLCB0ZWxsIG1lIHRoaXM6ICB5b3UgYXJlIG5vdCBjb25zaWRlcmluZyBtZSBhbmQgeW91ciBvdGhlciBmcmllbmRzLCBhcmUgeW91LCBmZWFyaW5nIHRoYXQsIGlmIHlvdSBlc2NhcGUsIHRoZSBpbmZvcm1lcnMgd2lsbCBtYWtlIHRyb3VibGUgZm9yIHVzIGJ5IHNheWluZyB0aGF0IHdlIHN0b2xlIHlvdSBhd2F5LCBhbmQgd2Ugc2hhbGwgYmUgZm9yY2VkIHRvIGxvc2UgZWl0aGVyIGFsbCBvdXIgcHJvcGVydHkgb3IgYSBnb29kIGRlYWwgb2YgbW9uZXksIG9yIGJlIHB1bmlzaGVkIGluIHNvbWUgb3RoZXIgd2F5IGJlc2lkZXM/IAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDUiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI0NWEiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIGlmIHlvdSBhcmUgYWZyYWlkIG9mIGFueXRoaW5nIG9mIHRoYXQga2luZCwgbGV0IGl0IGdvOyAgc2luY2UgaXQgaXMgcmlnaHQgZm9yIHVzIHRvIHJ1biB0aGlzIHJpc2ssIGFuZCBldmVuIGdyZWF0ZXIgcmlzayB0aGFuIHRoaXMsIGlmIG5lY2Vzc2FyeSwgcHJvdmlkZWQgd2Ugc2F2ZSB5b3UuICBOb3cgcGxlYXNlIGRvIGFzIEkgYXNrLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGF0IG1heSB3ZWxsIGJlLiAgQnV0LCBTb2NyYXRlcywgdGVsbCBtZSB0aGlzOiAgeW91IGFyZSBub3QgY29uc2lkZXJpbmcgbWUgYW5kIHlvdXIgb3RoZXIgZnJpZW5kcywgYXJlIHlvdSwgZmVhcmluZyB0aGF0LCBpZiB5b3UgZXNjYXBlLCB0aGUgaW5mb3JtZXJzIHdpbGwgbWFrZSB0cm91YmxlIGZvciB1cyBieSBzYXlpbmcgdGhhdCB3ZSBzdG9sZSB5b3UgYXdheSwgYW5kIHdlIHNoYWxsIGJlIGZvcmNlZCB0byBsb3NlIGVpdGhlciBhbGwgb3VyIHByb3BlcnR5IG9yIGEgZ29vZCBkZWFsIG9mIG1vbmV5LCBvciBiZSBwdW5pc2hlZCBpbiBzb21lIG90aGVyIHdheSBiZXNpZGVzPyAKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ1IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNDVhIiB1bml0PSJzZWN0aW9uIiAvPkZvciBpZiB5b3UgYXJlIGFmcmFpZCBvZiBhbnl0aGluZyBvZiB0aGF0IGtpbmQsIGxldCBpdCBnbzsgIHNpbmNlIGl0IGlzIHJpZ2h0IGZvciB1cyB0byBydW4gdGhpcyByaXNrLCBhbmQgZXZlbiBncmVhdGVyIHJpc2sgdGhhbiB0aGlzLCBpZiBuZWNlc3NhcnksIHByb3ZpZGVkIHdlIHNhdmUgeW91LiAgTm93IHBsZWFzZSBkbyBhcyBJIGFzay48L3A+PC90cmFuc2xhdGlvbj4="
translation['45.45a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDVhIiB1bml0PSJzZWN0aW9uIiAvPkZvciBpZiB5b3UgYXJlIGFmcmFpZCBvZiBhbnl0aGluZyBvZiB0aGF0IGtpbmQsIGxldCBpdCBnbzsgIHNpbmNlIGl0IGlzIHJpZ2h0IGZvciB1cyB0byBydW4gdGhpcyByaXNrLCBhbmQgZXZlbiBncmVhdGVyIHJpc2sgdGhhbiB0aGlzLCBpZiBuZWNlc3NhcnksIHByb3ZpZGVkIHdlIHNhdmUgeW91LiAgTm93IHBsZWFzZSBkbyBhcyBJIGFzay48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBhbSBjb25zaWRlcmluZyB0aGlzLCBDcml0bywgYW5kIG1hbnkgb3RoZXIgdGhpbmdzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGFtIGNvbnNpZGVyaW5nIHRoaXMsIENyaXRvLCBhbmQgbWFueSBvdGhlciB0aGluZ3MuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsLCBkbyBub3QgZmVhciB0aGlzISAgZm9yIGl0IGlzIG5vdCBldmVuIGEgbGFyZ2Ugc3VtIG9mIG1vbmV5IHdoaWNoIHdlIHNob3VsZCBwYXkgdG8gc29tZSBtZW4gd2hvIGFyZSB3aWxsaW5nIHRvIHNhdmUgeW91IGFuZCBnZXQgeW91IGF3YXkgZnJvbSBoZXJlLiAgQmVzaWRlcywgZG9uJ3QgeW91IHNlZSBob3cgY2hlYXAgdGhlc2UgaW5mb3JtZXJzIGFyZSwgYW5kIHRoYXQgbm90IG11Y2ggbW9uZXkgd291bGQgYmUgbmVlZGVkIHRvIHNpbGVuY2UgdGhlbT8gIEFuZCB5b3UKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ1YiIgdW5pdD0ic2VjdGlvbiIgLz5oYXZlIG15IG1vbmV5IGF0IHlvdXIgY29tbWFuZCwgd2hpY2ggaXMgZW5vdWdoLCBJIGZhbmN5OyAgYW5kIG1vcmVvdmVyLCBpZiBiZWNhdXNlIHlvdSBjYXJlIGZvciBtZSB5b3UgdGhpbmsgeW91IG91Z2h0IG5vdCB0byBzcGVuZCBteSBtb25leSwgdGhlcmUgYXJlIGZvcmVpZ25lcnMgaGVyZSB3aWxsaW5nIHRvIHNwZW5kIHRoZWlyczsgIGFuZCBvbmUgb2YgdGhlbSwgU2ltbWlhcyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZWJlcyIga2V5PSJwZXJzZXVzLFRoZWJlcyI+VGhlYmVzPC9wbGFjZU5hbWU+LCBoYXMgYnJvdWdodCBmb3IgdGhpcyBlc3BlY2lhbCBwdXJwb3NlIHN1ZmZpY2llbnQgZnVuZHM7ICBhbmQgQ2ViZXMgYWxzbyBhbmQgdmVyeSBtYW55IG90aGVycyBhcmUgcmVhZHkuICBTbywgYXMgSSBzYXksIGRvIG5vdCBnaXZlIHVwIHNhdmluZyB5b3Vyc2VsZiB0aHJvdWdoIGZlYXIgb2YgdGhpcy4gIEFuZCBkbyBub3QgYmUgdHJvdWJsZWQgYnkgd2hhdCB5b3Ugc2FpZCBpbiB0aGUgY291cnQsIHRoYXQgaWYgeW91IHdlbnQgYXdheSB5b3Ugd291bGQgbm90IGtub3cgd2hhdCB0byBkbyB3aXRoIHlvdXJzZWxmLiAgRm9yIGluIG1hbnkgb3RoZXIgcGxhY2VzLCB3aGVyZXZlciB5b3UgZ28sCjxtaWxlc3RvbmUgbj0iNDVjIiB1bml0PSJzZWN0aW9uIiAvPnRoZXkgd2lsbCB3ZWxjb21lIHlvdTsgIGFuZCBpZiB5b3Ugd2lzaCB0byBnbyB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT4sIEkgaGF2ZSBmcmllbmRzIHRoZXJlIHdobyB3aWxsIG1ha2UgbXVjaCBvZiB5b3UgYW5kIHdpbGwgcHJvdGVjdCB5b3UsIHNvIHRoYXQgbm8gb25lIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBrZXk9InRnbiw3MDAxMzk5Ij5UaGVzc2FseTwvcGxhY2VOYW1lPiBzaGFsbCBhbm5veSB5b3UuICBBbmQgYmVzaWRlcywgU29jcmF0ZXMsIGl0IHNlZW1zIHRvIG1lIHRoZSB0aGluZyB5b3UgYXJlIHVuZGVydGFraW5nIHRvIGRvIGlzIG5vdCBldmVuIHJpZ2h04oCUYmV0cmF5aW5nIHlvdXJzZWxmIHdoZW4geW91IG1pZ2h0IHNhdmUgeW91cnNlbGYuICBBbmQgeW91IGFyZSBlYWdlciB0byBicmluZyB1cG9uIHlvdXJzZWxmIGp1c3Qgd2hhdCB5b3VyIGVuZW1pZXMgd291bGQgd2lzaCBhbmQganVzdCB3aGF0IHRob3NlIHdlcmUgZWFnZXIgZm9yIHdobyB3aXNoZWQgdG8gZGVzdHJveSB5b3UuICBBbmQgbW9yZW92ZXIsIEkgdGhpbmsgeW91IGFyZSBhYmFuZG9uaW5nIHlvdXIgY2hpbGRyZW4sIHRvbywKPG1pbGVzdG9uZSBuPSI0NWQiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIHdoZW4geW91IG1pZ2h0IGJyaW5nIHRoZW0gdXAgYW5kIGVkdWNhdGUgdGhlbSwgeW91IGFyZSBnb2luZyB0byBkZXNlcnQgdGhlbSBhbmQgZ28gYXdheSwgYW5kLCBzbyBmYXIgYXMgeW91IGFyZSBjb25jZXJuZWQsIHRoZWlyIGZvcnR1bmVzIGluIGxpZmUgd2lsbCBiZSB3aGF0ZXZlciB0aGV5IGhhcHBlbiB0byBtZWV0IHdpdGgsIGFuZCB0aGV5IHdpbGwgcHJvYmFibHkgbWVldCB3aXRoIHN1Y2ggdHJlYXRtZW50IGFzIGdlbmVyYWxseSBjb21lcyB0byBvcnBoYW5zIGluIHRoZWlyIGRlc3RpdHV0aW9uLiAgTm8uICBFaXRoZXIgb25lIG91Z2h0IG5vdCB0byBiZWdldCBjaGlsZHJlbiwgb3Igb25lIG91Z2h0IHRvIHN0YXkgYnkgdGhlbSBhbmQgYnJpbmcgdGhlbSB1cCBhbmQgZWR1Y2F0ZSB0aGVtLiAgQnV0IHlvdSBzZWVtIHRvIG1lIHRvIGJlIGNob29zaW5nIHRoZSBsYXppZXN0IHdheTsgIGFuZCB5b3Ugb3VnaHQgdG8gY2hvb3NlIGFzIGEgZ29vZCBhbmQgYnJhdmUgbWFuIHdvdWxkIGNob29zZSwgeW91IHdobyBoYXZlIGJlZW4gc2F5aW5nIGFsbCB5b3VyIGxpZmUgdGhhdCB5b3UgY2FyZWQgZm9yIHZpcnR1ZS4gIFNvIEkgYW0gc2hhbWVkIGJvdGggZm9yIHlvdSBhbmQgZm9yIHVzLAo8bWlsZXN0b25lIG49IjQ1ZSIgdW5pdD0ic2VjdGlvbiIgLz55b3VyIGZyaWVuZHMsIGFuZCBJIGFtIGFmcmFpZCBwZW9wbGUgd2lsbCB0aGluayB0aGF0IHRoaXMgd2hvbGUgYWZmYWlyIG9mIHlvdXJzIGhhcyBiZWVuIGNvbmR1Y3RlZCB3aXRoIGEgc29ydCBvZiBjb3dhcmRpY2Ugb24gb3VyIHBhcnTigJRib3RoIHRoZSBmYWN0IHRoYXQgdGhlIGNhc2UgY2FtZSBiZWZvcmUgdGhlIGNvdXJ0LCB3aGVuIGl0IG1pZ2h0IGhhdmUgYmVlbiBhdm9pZGVkLCBhbmQgdGhlIHdheSBpbiB3aGljaCB0aGUgdHJpYWwgaXRzZWxmIHdhcyBjYXJyaWVkIG9uLCBhbmQgZmluYWxseSB0aGV5IHdpbGwgdGhpbmssIGFzIHRoZSBjcm93bmluZyBhYnN1cmRpdHkgb2YgdGhlIHdob2xlIGFmZmFpciwgdGhhdCB0aGlzIG9wcG9ydHVuaXR5IGhhcyBlc2NhcGVkIHVzIHRocm91Z2ggc29tZSBiYXNlIGNvd2FyZGljZSBvbiBvdXIgcGFydCwKPG1pbGVzdG9uZSBuPSI0NiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjQ2YSIgdW5pdD0ic2VjdGlvbiIgLz5zaW5jZSB3ZSBkaWQgbm90IHNhdmUgeW91LCBhbmQgeW91IGRpZCBub3Qgc2F2ZSB5b3Vyc2VsZiwgdGhvdWdoIGl0IHdhcyBxdWl0ZSBwb3NzaWJsZSBpZiB3ZSBoYWQgYmVlbiBvZiBhbnkgdXNlIHdoYXRldmVyLiAgVGFrZSBjYXJlLCBTb2NyYXRlcywgdGhhdCB0aGVzZSB0aGluZ3MgYmUgbm90IGRpc2dyYWNlZnVsLCBhcyB3ZWxsIGFzIGV2aWwsIGJvdGggdG8geW91IGFuZCB0byB1cy4gIEp1c3QgY29uc2lkZXIsIG9yIHJhdGhlciBpdCBpcyB0aW1lIG5vdCB0byBjb25zaWRlciBhbnkgbG9uZ2VyLCBidXQgdG8gaGF2ZSBmaW5pc2hlZCBjb25zaWRlcmluZy4gIEFuZCB0aGVyZSBpcyBqdXN0IG9uZSBwb3NzaWJsZSBwbGFuOyAgZm9yIGFsbCB0aGlzIG11c3QgYmUgZG9uZSBpbiB0aGUgY29taW5nIG5pZ2h0LiAgQW5kIGlmIHdlIGRlbGF5IGl0IGNhbiBubyBsb25nZXIgYmUgZG9uZS4gIEJ1dCBJIGJlZyB5b3UsIFNvY3JhdGVzLCBkbyBhcyBJIHNheSBhbmQgZG9uJ3QgcmVmdXNlLiAgCjxtaWxlc3RvbmUgbj0iNDZiIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsLCBkbyBub3QgZmVhciB0aGlzISAgZm9yIGl0IGlzIG5vdCBldmVuIGEgbGFyZ2Ugc3VtIG9mIG1vbmV5IHdoaWNoIHdlIHNob3VsZCBwYXkgdG8gc29tZSBtZW4gd2hvIGFyZSB3aWxsaW5nIHRvIHNhdmUgeW91IGFuZCBnZXQgeW91IGF3YXkgZnJvbSBoZXJlLiAgQmVzaWRlcywgZG9uJ3QgeW91IHNlZSBob3cgY2hlYXAgdGhlc2UgaW5mb3JtZXJzIGFyZSwgYW5kIHRoYXQgbm90IG11Y2ggbW9uZXkgd291bGQgYmUgbmVlZGVkIHRvIHNpbGVuY2UgdGhlbT8gIEFuZCB5b3UKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ1YiIgdW5pdD0ic2VjdGlvbiIgLz5oYXZlIG15IG1vbmV5IGF0IHlvdXIgY29tbWFuZCwgd2hpY2ggaXMgZW5vdWdoLCBJIGZhbmN5OyAgYW5kIG1vcmVvdmVyLCBpZiBiZWNhdXNlIHlvdSBjYXJlIGZvciBtZSB5b3UgdGhpbmsgeW91IG91Z2h0IG5vdCB0byBzcGVuZCBteSBtb25leSwgdGhlcmUgYXJlIGZvcmVpZ25lcnMgaGVyZSB3aWxsaW5nIHRvIHNwZW5kIHRoZWlyczsgIGFuZCBvbmUgb2YgdGhlbSwgU2ltbWlhcyBvZiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLFRoZWJlcyIga2V5PSJwZXJzZXVzLFRoZWJlcyI+VGhlYmVzPC9wbGFjZU5hbWU+LCBoYXMgYnJvdWdodCBmb3IgdGhpcyBlc3BlY2lhbCBwdXJwb3NlIHN1ZmZpY2llbnQgZnVuZHM7ICBhbmQgQ2ViZXMgYWxzbyBhbmQgdmVyeSBtYW55IG90aGVycyBhcmUgcmVhZHkuICBTbywgYXMgSSBzYXksIGRvIG5vdCBnaXZlIHVwIHNhdmluZyB5b3Vyc2VsZiB0aHJvdWdoIGZlYXIgb2YgdGhpcy4gIEFuZCBkbyBub3QgYmUgdHJvdWJsZWQgYnkgd2hhdCB5b3Ugc2FpZCBpbiB0aGUgY291cnQsIHRoYXQgaWYgeW91IHdlbnQgYXdheSB5b3Ugd291bGQgbm90IGtub3cgd2hhdCB0byBkbyB3aXRoIHlvdXJzZWxmLiAgRm9yIGluIG1hbnkgb3RoZXIgcGxhY2VzLCB3aGVyZXZlciB5b3UgZ28sCjxtaWxlc3RvbmUgbj0iNDVjIiB1bml0PSJzZWN0aW9uIiAvPnRoZXkgd2lsbCB3ZWxjb21lIHlvdTsgIGFuZCBpZiB5b3Ugd2lzaCB0byBnbyB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT4sIEkgaGF2ZSBmcmllbmRzIHRoZXJlIHdobyB3aWxsIG1ha2UgbXVjaCBvZiB5b3UgYW5kIHdpbGwgcHJvdGVjdCB5b3UsIHNvIHRoYXQgbm8gb25lIGluIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBrZXk9InRnbiw3MDAxMzk5Ij5UaGVzc2FseTwvcGxhY2VOYW1lPiBzaGFsbCBhbm5veSB5b3UuICBBbmQgYmVzaWRlcywgU29jcmF0ZXMsIGl0IHNlZW1zIHRvIG1lIHRoZSB0aGluZyB5b3UgYXJlIHVuZGVydGFraW5nIHRvIGRvIGlzIG5vdCBldmVuIHJpZ2h04oCUYmV0cmF5aW5nIHlvdXJzZWxmIHdoZW4geW91IG1pZ2h0IHNhdmUgeW91cnNlbGYuICBBbmQgeW91IGFyZSBlYWdlciB0byBicmluZyB1cG9uIHlvdXJzZWxmIGp1c3Qgd2hhdCB5b3VyIGVuZW1pZXMgd291bGQgd2lzaCBhbmQganVzdCB3aGF0IHRob3NlIHdlcmUgZWFnZXIgZm9yIHdobyB3aXNoZWQgdG8gZGVzdHJveSB5b3UuICBBbmQgbW9yZW92ZXIsIEkgdGhpbmsgeW91IGFyZSBhYmFuZG9uaW5nIHlvdXIgY2hpbGRyZW4sIHRvbywKPG1pbGVzdG9uZSBuPSI0NWQiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIHdoZW4geW91IG1pZ2h0IGJyaW5nIHRoZW0gdXAgYW5kIGVkdWNhdGUgdGhlbSwgeW91IGFyZSBnb2luZyB0byBkZXNlcnQgdGhlbSBhbmQgZ28gYXdheSwgYW5kLCBzbyBmYXIgYXMgeW91IGFyZSBjb25jZXJuZWQsIHRoZWlyIGZvcnR1bmVzIGluIGxpZmUgd2lsbCBiZSB3aGF0ZXZlciB0aGV5IGhhcHBlbiB0byBtZWV0IHdpdGgsIGFuZCB0aGV5IHdpbGwgcHJvYmFibHkgbWVldCB3aXRoIHN1Y2ggdHJlYXRtZW50IGFzIGdlbmVyYWxseSBjb21lcyB0byBvcnBoYW5zIGluIHRoZWlyIGRlc3RpdHV0aW9uLiAgTm8uICBFaXRoZXIgb25lIG91Z2h0IG5vdCB0byBiZWdldCBjaGlsZHJlbiwgb3Igb25lIG91Z2h0IHRvIHN0YXkgYnkgdGhlbSBhbmQgYnJpbmcgdGhlbSB1cCBhbmQgZWR1Y2F0ZSB0aGVtLiAgQnV0IHlvdSBzZWVtIHRvIG1lIHRvIGJlIGNob29zaW5nIHRoZSBsYXppZXN0IHdheTsgIGFuZCB5b3Ugb3VnaHQgdG8gY2hvb3NlIGFzIGEgZ29vZCBhbmQgYnJhdmUgbWFuIHdvdWxkIGNob29zZSwgeW91IHdobyBoYXZlIGJlZW4gc2F5aW5nIGFsbCB5b3VyIGxpZmUgdGhhdCB5b3UgY2FyZWQgZm9yIHZpcnR1ZS4gIFNvIEkgYW0gc2hhbWVkIGJvdGggZm9yIHlvdSBhbmQgZm9yIHVzLAo8bWlsZXN0b25lIG49IjQ1ZSIgdW5pdD0ic2VjdGlvbiIgLz55b3VyIGZyaWVuZHMsIGFuZCBJIGFtIGFmcmFpZCBwZW9wbGUgd2lsbCB0aGluayB0aGF0IHRoaXMgd2hvbGUgYWZmYWlyIG9mIHlvdXJzIGhhcyBiZWVuIGNvbmR1Y3RlZCB3aXRoIGEgc29ydCBvZiBjb3dhcmRpY2Ugb24gb3VyIHBhcnTigJRib3RoIHRoZSBmYWN0IHRoYXQgdGhlIGNhc2UgY2FtZSBiZWZvcmUgdGhlIGNvdXJ0LCB3aGVuIGl0IG1pZ2h0IGhhdmUgYmVlbiBhdm9pZGVkLCBhbmQgdGhlIHdheSBpbiB3aGljaCB0aGUgdHJpYWwgaXRzZWxmIHdhcyBjYXJyaWVkIG9uLCBhbmQgZmluYWxseSB0aGV5IHdpbGwgdGhpbmssIGFzIHRoZSBjcm93bmluZyBhYnN1cmRpdHkgb2YgdGhlIHdob2xlIGFmZmFpciwgdGhhdCB0aGlzIG9wcG9ydHVuaXR5IGhhcyBlc2NhcGVkIHVzIHRocm91Z2ggc29tZSBiYXNlIGNvd2FyZGljZSBvbiBvdXIgcGFydCwKPG1pbGVzdG9uZSBuPSI0NiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjQ2YSIgdW5pdD0ic2VjdGlvbiIgLz5zaW5jZSB3ZSBkaWQgbm90IHNhdmUgeW91LCBhbmQgeW91IGRpZCBub3Qgc2F2ZSB5b3Vyc2VsZiwgdGhvdWdoIGl0IHdhcyBxdWl0ZSBwb3NzaWJsZSBpZiB3ZSBoYWQgYmVlbiBvZiBhbnkgdXNlIHdoYXRldmVyLiAgVGFrZSBjYXJlLCBTb2NyYXRlcywgdGhhdCB0aGVzZSB0aGluZ3MgYmUgbm90IGRpc2dyYWNlZnVsLCBhcyB3ZWxsIGFzIGV2aWwsIGJvdGggdG8geW91IGFuZCB0byB1cy4gIEp1c3QgY29uc2lkZXIsIG9yIHJhdGhlciBpdCBpcyB0aW1lIG5vdCB0byBjb25zaWRlciBhbnkgbG9uZ2VyLCBidXQgdG8gaGF2ZSBmaW5pc2hlZCBjb25zaWRlcmluZy4gIEFuZCB0aGVyZSBpcyBqdXN0IG9uZSBwb3NzaWJsZSBwbGFuOyAgZm9yIGFsbCB0aGlzIG11c3QgYmUgZG9uZSBpbiB0aGUgY29taW5nIG5pZ2h0LiAgQW5kIGlmIHdlIGRlbGF5IGl0IGNhbiBubyBsb25nZXIgYmUgZG9uZS4gIEJ1dCBJIGJlZyB5b3UsIFNvY3JhdGVzLCBkbyBhcyBJIHNheSBhbmQgZG9uJ3QgcmVmdXNlLiAgCjxtaWxlc3RvbmUgbj0iNDZiIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['45.45b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NWIiIHVuaXQ9InNlY3Rpb24iIC8+aGF2ZSBteSBtb25leSBhdCB5b3VyIGNvbW1hbmQsIHdoaWNoIGlzIGVub3VnaCwgSSBmYW5jeTsgIGFuZCBtb3Jlb3ZlciwgaWYgYmVjYXVzZSB5b3UgY2FyZSBmb3IgbWUgeW91IHRoaW5rIHlvdSBvdWdodCBub3QgdG8gc3BlbmQgbXkgbW9uZXksIHRoZXJlIGFyZSBmb3JlaWduZXJzIGhlcmUgd2lsbGluZyB0byBzcGVuZCB0aGVpcnM7ICBhbmQgb25lIG9mIHRoZW0sIFNpbW1pYXMgb2YgPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUaGViZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRoZWJlcyI+VGhlYmVzPC9wbGFjZU5hbWU+LCBoYXMgYnJvdWdodCBmb3IgdGhpcyBlc3BlY2lhbCBwdXJwb3NlIHN1ZmZpY2llbnQgZnVuZHM7ICBhbmQgQ2ViZXMgYWxzbyBhbmQgdmVyeSBtYW55IG90aGVycyBhcmUgcmVhZHkuICBTbywgYXMgSSBzYXksIGRvIG5vdCBnaXZlIHVwIHNhdmluZyB5b3Vyc2VsZiB0aHJvdWdoIGZlYXIgb2YgdGhpcy4gIEFuZCBkbyBub3QgYmUgdHJvdWJsZWQgYnkgd2hhdCB5b3Ugc2FpZCBpbiB0aGUgY291cnQsIHRoYXQgaWYgeW91IHdlbnQgYXdheSB5b3Ugd291bGQgbm90IGtub3cgd2hhdCB0byBkbyB3aXRoIHlvdXJzZWxmLiAgRm9yIGluIG1hbnkgb3RoZXIgcGxhY2VzLCB3aGVyZXZlciB5b3UgZ28sCjwvdHJhbnNsYXRpb24+"
translation['45.45c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NWMiIHVuaXQ9InNlY3Rpb24iIC8+dGhleSB3aWxsIHdlbGNvbWUgeW91OyAgYW5kIGlmIHlvdSB3aXNoIHRvIGdvIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDEzOTkiPlRoZXNzYWx5PC9wbGFjZU5hbWU+LCBJIGhhdmUgZnJpZW5kcyB0aGVyZSB3aG8gd2lsbCBtYWtlIG11Y2ggb2YgeW91IGFuZCB3aWxsIHByb3RlY3QgeW91LCBzbyB0aGF0IG5vIG9uZSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAxMzk5Ij5UaGVzc2FseTwvcGxhY2VOYW1lPiBzaGFsbCBhbm5veSB5b3UuICBBbmQgYmVzaWRlcywgU29jcmF0ZXMsIGl0IHNlZW1zIHRvIG1lIHRoZSB0aGluZyB5b3UgYXJlIHVuZGVydGFraW5nIHRvIGRvIGlzIG5vdCBldmVuIHJpZ2h04oCUYmV0cmF5aW5nIHlvdXJzZWxmIHdoZW4geW91IG1pZ2h0IHNhdmUgeW91cnNlbGYuICBBbmQgeW91IGFyZSBlYWdlciB0byBicmluZyB1cG9uIHlvdXJzZWxmIGp1c3Qgd2hhdCB5b3VyIGVuZW1pZXMgd291bGQgd2lzaCBhbmQganVzdCB3aGF0IHRob3NlIHdlcmUgZWFnZXIgZm9yIHdobyB3aXNoZWQgdG8gZGVzdHJveSB5b3UuICBBbmQgbW9yZW92ZXIsIEkgdGhpbmsgeW91IGFyZSBhYmFuZG9uaW5nIHlvdXIgY2hpbGRyZW4sIHRvbywKPC90cmFuc2xhdGlvbj4="
translation['45.45d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NWQiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIHdoZW4geW91IG1pZ2h0IGJyaW5nIHRoZW0gdXAgYW5kIGVkdWNhdGUgdGhlbSwgeW91IGFyZSBnb2luZyB0byBkZXNlcnQgdGhlbSBhbmQgZ28gYXdheSwgYW5kLCBzbyBmYXIgYXMgeW91IGFyZSBjb25jZXJuZWQsIHRoZWlyIGZvcnR1bmVzIGluIGxpZmUgd2lsbCBiZSB3aGF0ZXZlciB0aGV5IGhhcHBlbiB0byBtZWV0IHdpdGgsIGFuZCB0aGV5IHdpbGwgcHJvYmFibHkgbWVldCB3aXRoIHN1Y2ggdHJlYXRtZW50IGFzIGdlbmVyYWxseSBjb21lcyB0byBvcnBoYW5zIGluIHRoZWlyIGRlc3RpdHV0aW9uLiAgTm8uICBFaXRoZXIgb25lIG91Z2h0IG5vdCB0byBiZWdldCBjaGlsZHJlbiwgb3Igb25lIG91Z2h0IHRvIHN0YXkgYnkgdGhlbSBhbmQgYnJpbmcgdGhlbSB1cCBhbmQgZWR1Y2F0ZSB0aGVtLiAgQnV0IHlvdSBzZWVtIHRvIG1lIHRvIGJlIGNob29zaW5nIHRoZSBsYXppZXN0IHdheTsgIGFuZCB5b3Ugb3VnaHQgdG8gY2hvb3NlIGFzIGEgZ29vZCBhbmQgYnJhdmUgbWFuIHdvdWxkIGNob29zZSwgeW91IHdobyBoYXZlIGJlZW4gc2F5aW5nIGFsbCB5b3VyIGxpZmUgdGhhdCB5b3UgY2FyZWQgZm9yIHZpcnR1ZS4gIFNvIEkgYW0gc2hhbWVkIGJvdGggZm9yIHlvdSBhbmQgZm9yIHVzLAo8L3RyYW5zbGF0aW9uPg=="
translation['45.45e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NWUiIHVuaXQ9InNlY3Rpb24iIC8+eW91ciBmcmllbmRzLCBhbmQgSSBhbSBhZnJhaWQgcGVvcGxlIHdpbGwgdGhpbmsgdGhhdCB0aGlzIHdob2xlIGFmZmFpciBvZiB5b3VycyBoYXMgYmVlbiBjb25kdWN0ZWQgd2l0aCBhIHNvcnQgb2YgY293YXJkaWNlIG9uIG91ciBwYXJ04oCUYm90aCB0aGUgZmFjdCB0aGF0IHRoZSBjYXNlIGNhbWUgYmVmb3JlIHRoZSBjb3VydCwgd2hlbiBpdCBtaWdodCBoYXZlIGJlZW4gYXZvaWRlZCwgYW5kIHRoZSB3YXkgaW4gd2hpY2ggdGhlIHRyaWFsIGl0c2VsZiB3YXMgY2FycmllZCBvbiwgYW5kIGZpbmFsbHkgdGhleSB3aWxsIHRoaW5rLCBhcyB0aGUgY3Jvd25pbmcgYWJzdXJkaXR5IG9mIHRoZSB3aG9sZSBhZmZhaXIsIHRoYXQgdGhpcyBvcHBvcnR1bml0eSBoYXMgZXNjYXBlZCB1cyB0aHJvdWdoIHNvbWUgYmFzZSBjb3dhcmRpY2Ugb24gb3VyIHBhcnQsCjwvdHJhbnNsYXRpb24+"
translation['46.46a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDZhIiB1bml0PSJzZWN0aW9uIiAvPnNpbmNlIHdlIGRpZCBub3Qgc2F2ZSB5b3UsIGFuZCB5b3UgZGlkIG5vdCBzYXZlIHlvdXJzZWxmLCB0aG91Z2ggaXQgd2FzIHF1aXRlIHBvc3NpYmxlIGlmIHdlIGhhZCBiZWVuIG9mIGFueSB1c2Ugd2hhdGV2ZXIuICBUYWtlIGNhcmUsIFNvY3JhdGVzLCB0aGF0IHRoZXNlIHRoaW5ncyBiZSBub3QgZGlzZ3JhY2VmdWwsIGFzIHdlbGwgYXMgZXZpbCwgYm90aCB0byB5b3UgYW5kIHRvIHVzLiAgSnVzdCBjb25zaWRlciwgb3IgcmF0aGVyIGl0IGlzIHRpbWUgbm90IHRvIGNvbnNpZGVyIGFueSBsb25nZXIsIGJ1dCB0byBoYXZlIGZpbmlzaGVkIGNvbnNpZGVyaW5nLiAgQW5kIHRoZXJlIGlzIGp1c3Qgb25lIHBvc3NpYmxlIHBsYW47ICBmb3IgYWxsIHRoaXMgbXVzdCBiZSBkb25lIGluIHRoZSBjb21pbmcgbmlnaHQuICBBbmQgaWYgd2UgZGVsYXkgaXQgY2FuIG5vIGxvbmdlciBiZSBkb25lLiAgQnV0IEkgYmVnIHlvdSwgU29jcmF0ZXMsIGRvIGFzIEkgc2F5IGFuZCBkb24ndCByZWZ1c2UuICAKPC90cmFuc2xhdGlvbj4="
translation['46.46b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NmIiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk15IGRlYXIgQ3JpdG8sIHlvdXIgZWFnZXJuZXNzIGlzIHdvcnRoIGEgZ3JlYXQgZGVhbCwgaWYgaXQgc2hvdWxkIHByb3ZlIHRvIGJlIHJpZ2h0bHkgZGlyZWN0ZWQ7ICBidXQgb3RoZXJ3aXNlLCB0aGUgZ3JlYXRlciBpdCBpcywgdGhlIG1vcmUgaGFyZCB0byBiZWFyLiAgU28gd2UgbXVzdCBleGFtaW5lIHRoZSBxdWVzdGlvbiB3aGV0aGVyIHdlIG91Z2h0IHRvIGRvIHRoaXMgb3Igbm90OyAgZm9yIEkgYW0gbm90IG9ubHkgbm93IGJ1dCBhbHdheXMgYSBtYW4gd2hvIGZvbGxvd3Mgbm90aGluZyBidXQgdGhlIHJlYXNvbmluZyB3aGljaCBvbiBjb25zaWRlcmF0aW9uIHNlZW1zIHRvIG1lIGJlc3QuICBBdWQgSSBjYW5ub3QsIG5vdyB0aGF0IHRoaXMgaGFzIGhhcHBlbmVkIHRvIHVzLCBkaXNjYXJkIHRoZSBhcmd1bWVudHMgSSB1c2VkIHRvIGFkdmFuY2UsIGJ1dCB0aGV5IHNlZW0gdG8gbWUgbXVjaCB0aGUgc2FtZSBhcyBldmVyLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDZjIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBJIHJldmVyZSBhbmQgaG9ub3IgdGhlIHNhbWUgb25lcyBhcyBiZWZvcmUuICBBbmQgdW5sZXNzIHdlIGNhbiBicmluZyBmb3J3YXJkIGJldHRlciBvbmVzIGluIG91ciBwcmVzZW50IHNpdHVhdGlvbiwgYmUgYXNzdXJlZCB0aGF0IEkgc2hhbGwgbm90IGdpdmUgd2F5IHRvIHlvdSwgbm90IGV2ZW4gaWYgdGhlIHBvd2VyIG9mIHRoZSBtdWx0aXR1ZGUgZnJpZ2h0ZW4gdXMgd2l0aCBldmVuIG1vcmUgdGVycm9ycyB0aGFuIGF0IHByZXNlbnQsIGFzIGNoaWxkcmVuIGFyZSBmcmlnaHRlbmVkIHdpdGggZ29ibGlucywgdGhyZWF0ZW5pbmcgdXMgd2l0aCBpbXByaXNvbm1lbnRzIGFuZCBkZWF0aHMgYW5kIGNvbmZpc2NhdGlvbnMgb2YgcHJvcGVydHkuICBOb3cgaG93IGNvdWxkIHdlIGV4YW1pbmUgdGhlIG1hdHRlciBtb3N0IHJlYXNvbmFibHk/ICBCeSB0YWtpbmcgdXAgZmlyc3Qgd2hhdCB5b3Ugc2F5IGFib3V0IG9waW5pb25zIGFuZCBhc2tpbmcgd2hldGhlciB3ZSB3ZXJlIHJpZ2h0IHdoZW4gd2UgYWx3YXlzIHVzZWQgdG8gc2F5IHRoYXQgd2Ugb3VnaHQgdG8gcGF5IGF0dGVudGlvbgo8bWlsZXN0b25lIG49IjQ2ZCIgdW5pdD0ic2VjdGlvbiIgLz50byBzb21lIG9waW5pb25zIGFuZCBub3QgdG8gb3RoZXJzPyAgT3Igd2VyZSB3ZSByaWdodCBiZWZvcmUgSSB3YXMgY29uZGVtbmVkIHRvIGRlYXRoLCB3aGVyZWFzIGl0IGhhcyBob3cgYmVlbiBtYWRlIGNsZWFyIHRoYXQgd2Ugd2VyZSB0YWxraW5nIG1lcmVseSBmb3IgdGhlIHNha2Ugb2YgYXJndW1lbnQgYW5kIGl0IHdhcyByZWFsbHkgbWVyZSBwbGF5IGFuZCBub25zZW5zZT8gIEFuZCBJIHdpc2ggdG8gaW52ZXN0aWdhdGUsIENyaXRvLCBpbiBjb21tb24gd2l0aCB5b3UsIGFuZCBzZWUgd2hldGhlciBvdXIgZm9ybWVyIGFyZ3VtZW50IHNlZW1zIGRpZmZlcmVudCB0byBtZSB1bmRlciBvdXIgcHJlc2VudCBjb25kaXRpb25zLCBvciB0aGUgc2FtZSwgYW5kIHdoZXRoZXIgd2Ugc2hhbGwgZ2l2ZSBpdCB1cCBvciBiZSBndWlkZWQgYnkgaXQuICBCdXQgaXQgdXNlZCB0byBiZSBzYWlkLCBJIHRoaW5rLCBieSB0aG9zZSB3aG8gdGhvdWdodCB0aGV5IHdlcmUgc3BlYWtpbmcgc2Vuc2libHksIGp1c3QgYXMgSSB3YXMgc2F5aW5nIG5vdywgdGhhdCBvZiB0aGUgb3BpbmlvbnMgaGVsZCBieSBtZW4KPG1pbGVzdG9uZSBuPSI0NmUiIHVuaXQ9InNlY3Rpb24iIC8+c29tZSBvdWdodCB0byBiZSBoaWdobHkgZXN0ZWVtZWQgYW5kIG90aGVycyBub3QuICBJbiBHb2QncyBuYW1lLCBDcml0bywgZG8geW91IG5vdCB0aGluayB0aGlzIGlzIGNvcnJlY3Q/ICBGb3IgeW91LCBodW1hbmx5IHNwZWFraW5nLAo8bWlsZXN0b25lIG49IjQ3IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNDdhIiB1bml0PSJzZWN0aW9uIiAvPmFyZSBub3QgaW52b2x2ZWQgaW4gdGhlIG5lY2Vzc2l0eSBvZiBkeWluZyB0b21vcnJvdywgYW5kIHRoZXJlZm9yZSBwcmVzZW50IGNvbmRpdGlvbnMgd291bGQgbm90IGxlYWQgeW91ciBqdWRnbWVudCBhc3RyYXkuICBOb3cgc2F5LCBkbyB5b3Ugbm90IHRoaW5rIHdlIHdlcmUgY29ycmVjdCBpbiBzYXlpbmcgdGhhdCB3ZSBvdWdodCBub3QgdG8gZXN0ZWVtIGFsbCB0aGUgb3BpbmlvbnMgb2YgbWVuLCBidXQgc29tZSBhbmQgbm90IG90aGVycywgYW5kIG5vdCB0aG9zZSBvZiBhbGwgbWVuLCBidXQgb25seSBvZiBzb21lPyAgV2hhdCBkbyB5b3UgdGhpbms/ICBJcyBub3QgdGhpcyB0cnVlPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5NeSBkZWFyIENyaXRvLCB5b3VyIGVhZ2VybmVzcyBpcyB3b3J0aCBhIGdyZWF0IGRlYWwsIGlmIGl0IHNob3VsZCBwcm92ZSB0byBiZSByaWdodGx5IGRpcmVjdGVkOyAgYnV0IG90aGVyd2lzZSwgdGhlIGdyZWF0ZXIgaXQgaXMsIHRoZSBtb3JlIGhhcmQgdG8gYmVhci4gIFNvIHdlIG11c3QgZXhhbWluZSB0aGUgcXVlc3Rpb24gd2hldGhlciB3ZSBvdWdodCB0byBkbyB0aGlzIG9yIG5vdDsgIGZvciBJIGFtIG5vdCBvbmx5IG5vdyBidXQgYWx3YXlzIGEgbWFuIHdobyBmb2xsb3dzIG5vdGhpbmcgYnV0IHRoZSByZWFzb25pbmcgd2hpY2ggb24gY29uc2lkZXJhdGlvbiBzZWVtcyB0byBtZSBiZXN0LiAgQXVkIEkgY2Fubm90LCBub3cgdGhhdCB0aGlzIGhhcyBoYXBwZW5lZCB0byB1cywgZGlzY2FyZCB0aGUgYXJndW1lbnRzIEkgdXNlZCB0byBhZHZhbmNlLCBidXQgdGhleSBzZWVtIHRvIG1lIG11Y2ggdGhlIHNhbWUgYXMgZXZlciwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ2YyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgSSByZXZlcmUgYW5kIGhvbm9yIHRoZSBzYW1lIG9uZXMgYXMgYmVmb3JlLiAgQW5kIHVubGVzcyB3ZSBjYW4gYnJpbmcgZm9yd2FyZCBiZXR0ZXIgb25lcyBpbiBvdXIgcHJlc2VudCBzaXR1YXRpb24sIGJlIGFzc3VyZWQgdGhhdCBJIHNoYWxsIG5vdCBnaXZlIHdheSB0byB5b3UsIG5vdCBldmVuIGlmIHRoZSBwb3dlciBvZiB0aGUgbXVsdGl0dWRlIGZyaWdodGVuIHVzIHdpdGggZXZlbiBtb3JlIHRlcnJvcnMgdGhhbiBhdCBwcmVzZW50LCBhcyBjaGlsZHJlbiBhcmUgZnJpZ2h0ZW5lZCB3aXRoIGdvYmxpbnMsIHRocmVhdGVuaW5nIHVzIHdpdGggaW1wcmlzb25tZW50cyBhbmQgZGVhdGhzIGFuZCBjb25maXNjYXRpb25zIG9mIHByb3BlcnR5LiAgTm93IGhvdyBjb3VsZCB3ZSBleGFtaW5lIHRoZSBtYXR0ZXIgbW9zdCByZWFzb25hYmx5PyAgQnkgdGFraW5nIHVwIGZpcnN0IHdoYXQgeW91IHNheSBhYm91dCBvcGluaW9ucyBhbmQgYXNraW5nIHdoZXRoZXIgd2Ugd2VyZSByaWdodCB3aGVuIHdlIGFsd2F5cyB1c2VkIHRvIHNheSB0aGF0IHdlIG91Z2h0IHRvIHBheSBhdHRlbnRpb24KPG1pbGVzdG9uZSBuPSI0NmQiIHVuaXQ9InNlY3Rpb24iIC8+dG8gc29tZSBvcGluaW9ucyBhbmQgbm90IHRvIG90aGVycz8gIE9yIHdlcmUgd2UgcmlnaHQgYmVmb3JlIEkgd2FzIGNvbmRlbW5lZCB0byBkZWF0aCwgd2hlcmVhcyBpdCBoYXMgaG93IGJlZW4gbWFkZSBjbGVhciB0aGF0IHdlIHdlcmUgdGFsa2luZyBtZXJlbHkgZm9yIHRoZSBzYWtlIG9mIGFyZ3VtZW50IGFuZCBpdCB3YXMgcmVhbGx5IG1lcmUgcGxheSBhbmQgbm9uc2Vuc2U/ICBBbmQgSSB3aXNoIHRvIGludmVzdGlnYXRlLCBDcml0bywgaW4gY29tbW9uIHdpdGggeW91LCBhbmQgc2VlIHdoZXRoZXIgb3VyIGZvcm1lciBhcmd1bWVudCBzZWVtcyBkaWZmZXJlbnQgdG8gbWUgdW5kZXIgb3VyIHByZXNlbnQgY29uZGl0aW9ucywgb3IgdGhlIHNhbWUsIGFuZCB3aGV0aGVyIHdlIHNoYWxsIGdpdmUgaXQgdXAgb3IgYmUgZ3VpZGVkIGJ5IGl0LiAgQnV0IGl0IHVzZWQgdG8gYmUgc2FpZCwgSSB0aGluaywgYnkgdGhvc2Ugd2hvIHRob3VnaHQgdGhleSB3ZXJlIHNwZWFraW5nIHNlbnNpYmx5LCBqdXN0IGFzIEkgd2FzIHNheWluZyBub3csIHRoYXQgb2YgdGhlIG9waW5pb25zIGhlbGQgYnkgbWVuCjxtaWxlc3RvbmUgbj0iNDZlIiB1bml0PSJzZWN0aW9uIiAvPnNvbWUgb3VnaHQgdG8gYmUgaGlnaGx5IGVzdGVlbWVkIGFuZCBvdGhlcnMgbm90LiAgSW4gR29kJ3MgbmFtZSwgQ3JpdG8sIGRvIHlvdSBub3QgdGhpbmsgdGhpcyBpcyBjb3JyZWN0PyAgRm9yIHlvdSwgaHVtYW5seSBzcGVha2luZywKPG1pbGVzdG9uZSBuPSI0NyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjQ3YSIgdW5pdD0ic2VjdGlvbiIgLz5hcmUgbm90IGludm9sdmVkIGluIHRoZSBuZWNlc3NpdHkgb2YgZHlpbmcgdG9tb3Jyb3csIGFuZCB0aGVyZWZvcmUgcHJlc2VudCBjb25kaXRpb25zIHdvdWxkIG5vdCBsZWFkIHlvdXIganVkZ21lbnQgYXN0cmF5LiAgTm93IHNheSwgZG8geW91IG5vdCB0aGluayB3ZSB3ZXJlIGNvcnJlY3QgaW4gc2F5aW5nIHRoYXQgd2Ugb3VnaHQgbm90IHRvIGVzdGVlbSBhbGwgdGhlIG9waW5pb25zIG9mIG1lbiwgYnV0IHNvbWUgYW5kIG5vdCBvdGhlcnMsIGFuZCBub3QgdGhvc2Ugb2YgYWxsIG1lbiwgYnV0IG9ubHkgb2Ygc29tZT8gIFdoYXQgZG8geW91IHRoaW5rPyAgSXMgbm90IHRoaXMgdHJ1ZT88L3A+PC90cmFuc2xhdGlvbj4="
translation['46.46c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NmMiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIEkgcmV2ZXJlIGFuZCBob25vciB0aGUgc2FtZSBvbmVzIGFzIGJlZm9yZS4gIEFuZCB1bmxlc3Mgd2UgY2FuIGJyaW5nIGZvcndhcmQgYmV0dGVyIG9uZXMgaW4gb3VyIHByZXNlbnQgc2l0dWF0aW9uLCBiZSBhc3N1cmVkIHRoYXQgSSBzaGFsbCBub3QgZ2l2ZSB3YXkgdG8geW91LCBub3QgZXZlbiBpZiB0aGUgcG93ZXIgb2YgdGhlIG11bHRpdHVkZSBmcmlnaHRlbiB1cyB3aXRoIGV2ZW4gbW9yZSB0ZXJyb3JzIHRoYW4gYXQgcHJlc2VudCwgYXMgY2hpbGRyZW4gYXJlIGZyaWdodGVuZWQgd2l0aCBnb2JsaW5zLCB0aHJlYXRlbmluZyB1cyB3aXRoIGltcHJpc29ubWVudHMgYW5kIGRlYXRocyBhbmQgY29uZmlzY2F0aW9ucyBvZiBwcm9wZXJ0eS4gIE5vdyBob3cgY291bGQgd2UgZXhhbWluZSB0aGUgbWF0dGVyIG1vc3QgcmVhc29uYWJseT8gIEJ5IHRha2luZyB1cCBmaXJzdCB3aGF0IHlvdSBzYXkgYWJvdXQgb3BpbmlvbnMgYW5kIGFza2luZyB3aGV0aGVyIHdlIHdlcmUgcmlnaHQgd2hlbiB3ZSBhbHdheXMgdXNlZCB0byBzYXkgdGhhdCB3ZSBvdWdodCB0byBwYXkgYXR0ZW50aW9uCjwvdHJhbnNsYXRpb24+"
translation['46.46d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NmQiIHVuaXQ9InNlY3Rpb24iIC8+dG8gc29tZSBvcGluaW9ucyBhbmQgbm90IHRvIG90aGVycz8gIE9yIHdlcmUgd2UgcmlnaHQgYmVmb3JlIEkgd2FzIGNvbmRlbW5lZCB0byBkZWF0aCwgd2hlcmVhcyBpdCBoYXMgaG93IGJlZW4gbWFkZSBjbGVhciB0aGF0IHdlIHdlcmUgdGFsa2luZyBtZXJlbHkgZm9yIHRoZSBzYWtlIG9mIGFyZ3VtZW50IGFuZCBpdCB3YXMgcmVhbGx5IG1lcmUgcGxheSBhbmQgbm9uc2Vuc2U/ICBBbmQgSSB3aXNoIHRvIGludmVzdGlnYXRlLCBDcml0bywgaW4gY29tbW9uIHdpdGggeW91LCBhbmQgc2VlIHdoZXRoZXIgb3VyIGZvcm1lciBhcmd1bWVudCBzZWVtcyBkaWZmZXJlbnQgdG8gbWUgdW5kZXIgb3VyIHByZXNlbnQgY29uZGl0aW9ucywgb3IgdGhlIHNhbWUsIGFuZCB3aGV0aGVyIHdlIHNoYWxsIGdpdmUgaXQgdXAgb3IgYmUgZ3VpZGVkIGJ5IGl0LiAgQnV0IGl0IHVzZWQgdG8gYmUgc2FpZCwgSSB0aGluaywgYnkgdGhvc2Ugd2hvIHRob3VnaHQgdGhleSB3ZXJlIHNwZWFraW5nIHNlbnNpYmx5LCBqdXN0IGFzIEkgd2FzIHNheWluZyBub3csIHRoYXQgb2YgdGhlIG9waW5pb25zIGhlbGQgYnkgbWVuCjwvdHJhbnNsYXRpb24+"
translation['46.46e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NmUiIHVuaXQ9InNlY3Rpb24iIC8+c29tZSBvdWdodCB0byBiZSBoaWdobHkgZXN0ZWVtZWQgYW5kIG90aGVycyBub3QuICBJbiBHb2QncyBuYW1lLCBDcml0bywgZG8geW91IG5vdCB0aGluayB0aGlzIGlzIGNvcnJlY3Q/ICBGb3IgeW91LCBodW1hbmx5IHNwZWFraW5nLAo8L3RyYW5zbGF0aW9uPg=="
translation['47.47a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0NyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDdhIiB1bml0PSJzZWN0aW9uIiAvPmFyZSBub3QgaW52b2x2ZWQgaW4gdGhlIG5lY2Vzc2l0eSBvZiBkeWluZyB0b21vcnJvdywgYW5kIHRoZXJlZm9yZSBwcmVzZW50IGNvbmRpdGlvbnMgd291bGQgbm90IGxlYWQgeW91ciBqdWRnbWVudCBhc3RyYXkuICBOb3cgc2F5LCBkbyB5b3Ugbm90IHRoaW5rIHdlIHdlcmUgY29ycmVjdCBpbiBzYXlpbmcgdGhhdCB3ZSBvdWdodCBub3QgdG8gZXN0ZWVtIGFsbCB0aGUgb3BpbmlvbnMgb2YgbWVuLCBidXQgc29tZSBhbmQgbm90IG90aGVycywgYW5kIG5vdCB0aG9zZSBvZiBhbGwgbWVuLCBidXQgb25seSBvZiBzb21lPyAgV2hhdCBkbyB5b3UgdGhpbms/ICBJcyBub3QgdGhpcyB0cnVlPzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JdCBpcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SXQgaXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHdlIG91Z2h0IHRvIGVzdGVlbSB0aGUgZ29vZCBvcGluaW9ucyBhbmQgbm90IHRoZSBiYWQgb25lcz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB3ZSBvdWdodCB0byBlc3RlZW0gdGhlIGdvb2Qgb3BpbmlvbnMgYW5kIG5vdCB0aGUgYmFkIG9uZXM/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB0aGUgZ29vZCBvbmVzIGFyZSB0aG9zZSBvZiB0aGUgd2lzZSBhbmQgdGhlIGJhZCBvbmVzIHRob3NlIG9mIHRoZSBmb29saXNoPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgdGhlIGdvb2Qgb25lcyBhcmUgdGhvc2Ugb2YgdGhlIHdpc2UgYW5kIHRoZSBiYWQgb25lcyB0aG9zZSBvZiB0aGUgZm9vbGlzaD88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9mIGNvdXJzZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2YgY291cnNlLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q29tZSB0aGVuLCB3aGF0IHVzZWQgd2UgdG8gc2F5IGFib3V0IHRoaXM/IAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDdiIiB1bml0PSJzZWN0aW9uIiAvPklmIGEgbWFuIGlzIGFuIGF0aGxldGUgYW5kIG1ha2VzIHRoYXQgaGlzIGJ1c2luZXNzLCBkb2VzIGhlIHBheSBhdHRlbnRpb24gdG8gZXZlcnkgbWFuJ3MgcHJhaXNlIGFuZCBibGFtZSBhbmQgb3BpbmlvbiBvciB0byB0aG9zZSBvZiBvbmUgbWFuIG9ubHkgd2hvIGlzIGEgcGh5c2ljaWFuIG9yIGEgdHJhaW5lcj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q29tZSB0aGVuLCB3aGF0IHVzZWQgd2UgdG8gc2F5IGFib3V0IHRoaXM/IAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDdiIiB1bml0PSJzZWN0aW9uIiAvPklmIGEgbWFuIGlzIGFuIGF0aGxldGUgYW5kIG1ha2VzIHRoYXQgaGlzIGJ1c2luZXNzLCBkb2VzIGhlIHBheSBhdHRlbnRpb24gdG8gZXZlcnkgbWFuJ3MgcHJhaXNlIGFuZCBibGFtZSBhbmQgb3BpbmlvbiBvciB0byB0aG9zZSBvZiBvbmUgbWFuIG9ubHkgd2hvIGlzIGEgcGh5c2ljaWFuIG9yIGEgdHJhaW5lcj88L3A+PC90cmFuc2xhdGlvbj4="
translation['47.47b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0N2IiIHVuaXQ9InNlY3Rpb24iIC8+SWYgYSBtYW4gaXMgYW4gYXRobGV0ZSBhbmQgbWFrZXMgdGhhdCBoaXMgYnVzaW5lc3MsIGRvZXMgaGUgcGF5IGF0dGVudGlvbiB0byBldmVyeSBtYW4ncyBwcmFpc2UgYW5kIGJsYW1lIGFuZCBvcGluaW9uIG9yIHRvIHRob3NlIG9mIG9uZSBtYW4gb25seSB3aG8gaXMgYSBwaHlzaWNpYW4gb3IgYSB0cmFpbmVyPzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UbyB0aG9zZSBvZiBvbmUgbWFuIG9ubHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRvIHRob3NlIG9mIG9uZSBtYW4gb25seS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gaGUgb3VnaHQgdG8gZmVhciB0aGUgYmxhbWUgYW5kIHdlbGNvbWUgdGhlIHByYWlzZSBvZiB0aGF0IG9uZSBtYW4gYW5kIG5vdCBvZiB0aGUgbXVsdGl0dWRlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGhlIG91Z2h0IHRvIGZlYXIgdGhlIGJsYW1lIGFuZCB3ZWxjb21lIHRoZSBwcmFpc2Ugb2YgdGhhdCBvbmUgbWFuIGFuZCBub3Qgb2YgdGhlIG11bHRpdHVkZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9idmlvdXNseS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2J2aW91c2x5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGhlIG11c3QgYWN0IGFuZCBleGVyY2lzZSBhbmQgZWF0IGFuZCBkcmluayBhcyB0aGUgb25lIG1hbiB3aG8gaXMgaGlzIGRpcmVjdG9yIGFuZCB3aG8ga25vd3MgdGhlIGJ1c2luZXNzIHRoaW5rcyBiZXN0IHJhdGhlciB0aGFuIGFzIGFsbCB0aGUgb3RoZXJzIHRoaW5rLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgaGUgbXVzdCBhY3QgYW5kIGV4ZXJjaXNlIGFuZCBlYXQgYW5kIGRyaW5rIGFzIHRoZSBvbmUgbWFuIHdobyBpcyBoaXMgZGlyZWN0b3IgYW5kIHdobyBrbm93cyB0aGUgYnVzaW5lc3MgdGhpbmtzIGJlc3QgcmF0aGVyIHRoYW4gYXMgYWxsIHRoZSBvdGhlcnMgdGhpbmsuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGF0IGlzIHRydWUuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0N2MiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoYXQgaXMgdHJ1ZS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ3YyIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC90cmFuc2xhdGlvbj4="
translation['47.47c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0N2MiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwgdGhlbjsgIGlmIGhlIGRpc29iZXlzIHRoZSBvbmUgbWFuIGFuZCBkaXNyZWdhcmRzIGhpcyBvcGluaW9uIGFuZCBoaXMgcHJhaXNlLCBidXQgcmVnYXJkcyB3b3JkcyBvZiB0aGUgbWFueSB3aG8gaGF2ZSBubyBzcGVjaWFsIGtub3dsZWRnZSwgd2lsbCBoZSBub3QgY29tZSB0byBoYXJtPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsIHRoZW47ICBpZiBoZSBkaXNvYmV5cyB0aGUgb25lIG1hbiBhbmQgZGlzcmVnYXJkcyBoaXMgb3BpbmlvbiBhbmQgaGlzIHByYWlzZSwgYnV0IHJlZ2FyZHMgd29yZHMgb2YgdGhlIG1hbnkgd2hvIGhhdmUgbm8gc3BlY2lhbCBrbm93bGVkZ2UsIHdpbGwgaGUgbm90IGNvbWUgdG8gaGFybT88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9mIGNvdXJzZSBoZSB3aWxsLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PZiBjb3Vyc2UgaGUgd2lsbC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB3aGF0IGlzIHRoaXMgaGFybT8gIEluIHdoYXQgZGlyZWN0aW9uIGFuZCB1cG9uIHdoYXQgcGFydCBvZiB0aGUgb25lIHdobyBkaXNvYmV5cyBkb2VzIGl0IGFjdD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHdoYXQgaXMgdGhpcyBoYXJtPyAgSW4gd2hhdCBkaXJlY3Rpb24gYW5kIHVwb24gd2hhdCBwYXJ0IG9mIHRoZSBvbmUgd2hvIGRpc29iZXlzIGRvZXMgaXQgYWN0PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXZpZGVudGx5IHVwb24gaGlzIGJvZHk7ICBmb3IgdGhhdCBpcyB3aGF0IGl0IHJ1aW5zLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5FdmlkZW50bHkgdXBvbiBoaXMgYm9keTsgIGZvciB0aGF0IGlzIHdoYXQgaXQgcnVpbnMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5SaWdodC4gIFRoZW4gaW4gb3RoZXIgbWF0dGVycywgbm90IHRvIGVudW1lcmF0ZSB0aGVtIGFsbCwgaW4gcXVlc3Rpb25zIG9mIHJpZ2h0IGFuZCB3cm9uZyBhbmQgZGlzZ3JhY2VmdWwgYW5kIG5vYmxlIGFuZCBnb29kIGFuZCBiYWQsIHdoaWNoIHdlIGFyZSBub3cgY29uc2lkZXJpbmcsIG91Z2h0IHdlIHRvIGZvbGxvdyBhbmQgZmVhcgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDdkIiB1bml0PSJzZWN0aW9uIiAvPnRoZSBvcGluaW9uIG9mIHRoZSBtYW55IG9yIHRoYXQgb2YgdGhlIG9uZSwgaWYgdGhlcmUgaXMgYW55b25lIHdobyBrbm93cyBhYm91dCB0aGVtLCB3aG9tIHdlIG91Z2h0IHRvIHJldmVyZSBhbmQgZmVhciBtb3JlIHRoYW4gYWxsIHRoZSBvdGhlcnM/ICBBbmQgaWYgd2UgZG8gbm90IGZvbGxvdyBoaW0sIHdlIHNoYWxsIGluanVyZSBhbmQgY3JpcHBsZSB0aGF0IHdoaWNoIHdlIHVzZWQgdG8gc2F5IGlzIGJlbmVmaXRlZCBieSB0aGUgcmlnaHQgYW5kIGlzIHJ1aW5lZCBieSB0aGUgd3JvbmcuICBPciBpcyB0aGVyZSBub3RoaW5nIGluIHRoaXM/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlJpZ2h0LiAgVGhlbiBpbiBvdGhlciBtYXR0ZXJzLCBub3QgdG8gZW51bWVyYXRlIHRoZW0gYWxsLCBpbiBxdWVzdGlvbnMgb2YgcmlnaHQgYW5kIHdyb25nIGFuZCBkaXNncmFjZWZ1bCBhbmQgbm9ibGUgYW5kIGdvb2QgYW5kIGJhZCwgd2hpY2ggd2UgYXJlIG5vdyBjb25zaWRlcmluZywgb3VnaHQgd2UgdG8gZm9sbG93IGFuZCBmZWFyCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0N2QiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIG9waW5pb24gb2YgdGhlIG1hbnkgb3IgdGhhdCBvZiB0aGUgb25lLCBpZiB0aGVyZSBpcyBhbnlvbmUgd2hvIGtub3dzIGFib3V0IHRoZW0sIHdob20gd2Ugb3VnaHQgdG8gcmV2ZXJlIGFuZCBmZWFyIG1vcmUgdGhhbiBhbGwgdGhlIG90aGVycz8gIEFuZCBpZiB3ZSBkbyBub3QgZm9sbG93IGhpbSwgd2Ugc2hhbGwgaW5qdXJlIGFuZCBjcmlwcGxlIHRoYXQgd2hpY2ggd2UgdXNlZCB0byBzYXkgaXMgYmVuZWZpdGVkIGJ5IHRoZSByaWdodCBhbmQgaXMgcnVpbmVkIGJ5IHRoZSB3cm9uZy4gIE9yIGlzIHRoZXJlIG5vdGhpbmcgaW4gdGhpcz88L3A+PC90cmFuc2xhdGlvbj4="
translation['47.47d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0N2QiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIG9waW5pb24gb2YgdGhlIG1hbnkgb3IgdGhhdCBvZiB0aGUgb25lLCBpZiB0aGVyZSBpcyBhbnlvbmUgd2hvIGtub3dzIGFib3V0IHRoZW0sIHdob20gd2Ugb3VnaHQgdG8gcmV2ZXJlIGFuZCBmZWFyIG1vcmUgdGhhbiBhbGwgdGhlIG90aGVycz8gIEFuZCBpZiB3ZSBkbyBub3QgZm9sbG93IGhpbSwgd2Ugc2hhbGwgaW5qdXJlIGFuZCBjcmlwcGxlIHRoYXQgd2hpY2ggd2UgdXNlZCB0byBzYXkgaXMgYmVuZWZpdGVkIGJ5IHRoZSByaWdodCBhbmQgaXMgcnVpbmVkIGJ5IHRoZSB3cm9uZy4gIE9yIGlzIHRoZXJlIG5vdGhpbmcgaW4gdGhpcz88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB0aGluayBpdCBpcyB0cnVlLCBTb2NyYXRlcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB0aGluayBpdCBpcyB0cnVlLCBTb2NyYXRlcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwgdGhlbiwgaWYgdGhyb3VnaCB5aWVsZGluZyB0byB0aGUgb3BpbmlvbiBvZiB0aGUgaWdub3JhbnQgd2UgcnVpbiB0aGF0IHdoaWNoIGlzIGJlbmVmaXRlZCBieSBoZWFsdGggYW5kIGluanVyZWQgYnkgZGlzZWFzZSwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ3ZSIgdW5pdD0ic2VjdGlvbiIgLz5pcyBsaWZlIHdvcnRoIGxpdmluZyBmb3IgdXMgd2hlbiB0aGF0IGlzIHJ1aW5lZD8gIEFuZCB0aGF0IGlzIHRoZSBib2R5LCBpcyBpdCBub3Q/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwgdGhlbiwgaWYgdGhyb3VnaCB5aWVsZGluZyB0byB0aGUgb3BpbmlvbiBvZiB0aGUgaWdub3JhbnQgd2UgcnVpbiB0aGF0IHdoaWNoIGlzIGJlbmVmaXRlZCBieSBoZWFsdGggYW5kIGluanVyZWQgYnkgZGlzZWFzZSwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ3ZSIgdW5pdD0ic2VjdGlvbiIgLz5pcyBsaWZlIHdvcnRoIGxpdmluZyBmb3IgdXMgd2hlbiB0aGF0IGlzIHJ1aW5lZD8gIEFuZCB0aGF0IGlzIHRoZSBib2R5LCBpcyBpdCBub3Q/PC9wPjwvdHJhbnNsYXRpb24+"
translation['47.47e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0N2UiIHVuaXQ9InNlY3Rpb24iIC8+aXMgbGlmZSB3b3J0aCBsaXZpbmcgZm9yIHVzIHdoZW4gdGhhdCBpcyBydWluZWQ/ICBBbmQgdGhhdCBpcyB0aGUgYm9keSwgaXMgaXQgbm90PzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gaXMgbGlmZSB3b3J0aCBsaXZpbmcgd2hlbiB0aGUgYm9keSBpcyB3b3J0aGxlc3MgYW5kIHJ1aW5lZD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBpcyBsaWZlIHdvcnRoIGxpdmluZyB3aGVuIHRoZSBib2R5IGlzIHdvcnRobGVzcyBhbmQgcnVpbmVkPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5IG5vdC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5IG5vdC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBpcyBpdCB3b3J0aCBsaXZpbmcgd2hlbiB0aGF0IGlzIHJ1aW5lZCB3aGljaCBpcyBpbmp1cmVkIGJ5IHRoZSB3cm9uZyBhbmQgaW1wcm92ZWQgYnkgdGhlIHJpZ2h0PyAgT3IgZG8gd2UgdGhpbmsgdGhhdCBwYXJ0IG9mIHVzLCB3aGF0ZXZlciBpdCBpcywgd2hpY2ggaXMgY29uY2VybmVkIHdpdGggcmlnaHQgYW5kIHdyb25nLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDgiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI0OGEiIHVuaXQ9InNlY3Rpb24iIC8+aXMgbGVzcyBpbXBvcnRhbnQgdGhhbiB0aGUgYm9keT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IGlzIGl0IHdvcnRoIGxpdmluZyB3aGVuIHRoYXQgaXMgcnVpbmVkIHdoaWNoIGlzIGluanVyZWQgYnkgdGhlIHdyb25nIGFuZCBpbXByb3ZlZCBieSB0aGUgcmlnaHQ/ICBPciBkbyB3ZSB0aGluayB0aGF0IHBhcnQgb2YgdXMsIHdoYXRldmVyIGl0IGlzLCB3aGljaCBpcyBjb25jZXJuZWQgd2l0aCByaWdodCBhbmQgd3JvbmcsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjQ4YSIgdW5pdD0ic2VjdGlvbiIgLz5pcyBsZXNzIGltcG9ydGFudCB0aGFuIHRoZSBib2R5PzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['48.48a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDhhIiB1bml0PSJzZWN0aW9uIiAvPmlzIGxlc3MgaW1wb3J0YW50IHRoYW4gdGhlIGJvZHk/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ5IG5vIG1lYW5zLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CeSBubyBtZWFucy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBtb3JlIGltcG9ydGFudD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IG1vcmUgaW1wb3J0YW50PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TXVjaCBtb3JlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5NdWNoIG1vcmUuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCBtb3N0IGV4Y2VsbGVudCBmcmllbmQsIHdlIG11c3Qgbm90IGNvbnNpZGVyIGF0IGFsbCB3aGF0IHRoZSBtYW55IHdpbGwgc2F5IG9mIHVzLCBidXQgd2hhdCBoZSB3aG8ga25vd3MgYWJvdXQgcmlnaHQgYW5kIHdyb25nLCB0aGUgb25lIG1hbiwgYW5kIHRydXRoIGhlcnNlbGYgd2lsbCBzYXkuICBBbmQgc28geW91IGludHJvZHVjZWQgdGhlIGRpc2N1c3Npb24gd3JvbmdseSBpbiB0aGUgZmlyc3QgcGxhY2UsIHdoZW4geW91IGJlZ2FuIGJ5IHNheWluZyB3ZSBvdWdodCB0byBjb25zaWRlciB0aGUgb3BpbmlvbiBvZiB0aGUgbXVsdGl0dWRlIGFib3V0IHRoZSByaWdodCBhbmQgdGhlIG5vYmxlIGFuZCB0aGUgZ29vZCBhbmQgdGhlaXIgb3Bwb3NpdGVzLiAKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ4YiIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgaXQgbWlnaHQsIG9mIGNvdXJzZSwgYmUgc2FpZCB0aGF0IHRoZSBtdWx0aXR1ZGUgY2FuIHB1dCB1cyB0byBkZWF0aC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiwgbW9zdCBleGNlbGxlbnQgZnJpZW5kLCB3ZSBtdXN0IG5vdCBjb25zaWRlciBhdCBhbGwgd2hhdCB0aGUgbWFueSB3aWxsIHNheSBvZiB1cywgYnV0IHdoYXQgaGUgd2hvIGtub3dzIGFib3V0IHJpZ2h0IGFuZCB3cm9uZywgdGhlIG9uZSBtYW4sIGFuZCB0cnV0aCBoZXJzZWxmIHdpbGwgc2F5LiAgQW5kIHNvIHlvdSBpbnRyb2R1Y2VkIHRoZSBkaXNjdXNzaW9uIHdyb25nbHkgaW4gdGhlIGZpcnN0IHBsYWNlLCB3aGVuIHlvdSBiZWdhbiBieSBzYXlpbmcgd2Ugb3VnaHQgdG8gY29uc2lkZXIgdGhlIG9waW5pb24gb2YgdGhlIG11bHRpdHVkZSBhYm91dCB0aGUgcmlnaHQgYW5kIHRoZSBub2JsZSBhbmQgdGhlIGdvb2QgYW5kIHRoZWlyIG9wcG9zaXRlcy4gCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OGIiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IGl0IG1pZ2h0LCBvZiBjb3Vyc2UsIGJlIHNhaWQgdGhhdCB0aGUgbXVsdGl0dWRlIGNhbiBwdXQgdXMgdG8gZGVhdGguPC9wPjwvdHJhbnNsYXRpb24+"
translation['48.48b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OGIiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IGl0IG1pZ2h0LCBvZiBjb3Vyc2UsIGJlIHNhaWQgdGhhdCB0aGUgbXVsdGl0dWRlIGNhbiBwdXQgdXMgdG8gZGVhdGguPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoYXQgaXMgY2xlYXIsIHRvby4gIEl0IHdvdWxkIGJlIHNhaWQsIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGF0IGlzIGNsZWFyLCB0b28uICBJdCB3b3VsZCBiZSBzYWlkLCBTb2NyYXRlcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoYXQgaXMgdHJ1ZS4gIEJ1dCwgbXkgZnJpZW5kLCB0aGUgYXJndW1lbnQgd2UgaGF2ZSBqdXN0IGZpbmlzaGVkIHNlZW1zIHRvIG1lIHN0aWxsIG11Y2ggdGhlIHNhbWUgYXMgYmVmb3JlOyAgYW5kIG5vdyBzZWUgd2hldGhlciB3ZSBzdGlsbCBob2xkIHRvIHRoaXMsIG9yIG5vdCwgdGhhdCBpdCBpcyBub3QgbGl2aW5nLCBidXQgbGl2aW5nIHdlbGwgd2hpY2ggd2Ugb3VnaHQgdG8gY29uc2lkZXIgbW9zdCBpbXBvcnRhbnQuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoYXQgaXMgdHJ1ZS4gIEJ1dCwgbXkgZnJpZW5kLCB0aGUgYXJndW1lbnQgd2UgaGF2ZSBqdXN0IGZpbmlzaGVkIHNlZW1zIHRvIG1lIHN0aWxsIG11Y2ggdGhlIHNhbWUgYXMgYmVmb3JlOyAgYW5kIG5vdyBzZWUgd2hldGhlciB3ZSBzdGlsbCBob2xkIHRvIHRoaXMsIG9yIG5vdCwgdGhhdCBpdCBpcyBub3QgbGl2aW5nLCBidXQgbGl2aW5nIHdlbGwgd2hpY2ggd2Ugb3VnaHQgdG8gY29uc2lkZXIgbW9zdCBpbXBvcnRhbnQuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZSBkbyBob2xkIHRvIGl0LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZSBkbyBob2xkIHRvIGl0LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHRoYXQgbGl2aW5nIHdlbGwgYW5kIGxpdmluZyByaWdodGx5IGFyZSB0aGUgc2FtZSB0aGluZywgZG8gd2UgaG9sZCB0byB0aGF0LCBvciBub3Q/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB0aGF0IGxpdmluZyB3ZWxsIGFuZCBsaXZpbmcgcmlnaHRseSBhcmUgdGhlIHNhbWUgdGhpbmcsIGRvIHdlIGhvbGQgdG8gdGhhdCwgb3Igbm90PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2UgZG8uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlIGRvLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB3ZSBhZ3JlZSB0aGF0IHRoZSBxdWVzdGlvbiBpcyB3aGV0aGVyIGl0IGlzIHJpZ2h0IGZvciBtZSB0byB0cnkgdG8gZXNjYXBlIGZyb20gaGVyZQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDhjIiB1bml0PSJzZWN0aW9uIiAvPndpdGhvdXQgdGhlIHBlcm1pc3Npb24gb2YgdGhlIEF0aGVuaWFucywgb3Igbm90IHJpZ2h0LiAgQW5kIGlmIGl0IGFwcGVhcnMgdG8gYmUgcmlnaHQsIGxldCB1cyB0cnkgaXQsIGFuZCBpZiBub3QsIGxldCB1cyBnaXZlIGl0IHVwLiAgQnV0IHRoZSBjb25zaWRlcmF0aW9ucyB5b3Ugc3VnZ2VzdCwgYWJvdXQgc3BlbmRpbmcgbW9uZXksIGFuZCByZXB1dGF0aW9uLCBhbmQgYnJpbmdpbmcgdXAgbXkgY2hpbGRyZW4sIHRoZXNlIGFyZSByZWFsbHksIENyaXRvLCB0aGUgcmVmbGVjdGlvbnMgb2YgdGhvc2Ugd2hvIGxpZ2h0bHkgcHV0IG1lbiB0byBkZWF0aCwgYW5kIHdvdWxkIGJyaW5nIHRoZW0gdG8gbGlmZSBhZ2FpbiwgaWYgdGhleSBjb3VsZCwgd2l0aG91dCBhbnkgc2Vuc2UsIEkgbWVhbiB0aGUgbXVsdGl0dWRlLiAgQnV0IHdlLCBzaW5jZSBvdXIgYXJndW1lbnQgc28gY29uc3RyYWlucyB1cywgbXVzdCBjb25zaWRlciBvbmx5IHRoZSBxdWVzdGlvbiB3ZSBqdXN0IGJyb2FjaGVkLCB3aGV0aGVyIHdlIHNoYWxsIGJlIGRvaW5nIHJpZ2h0IGluIGdpdmluZyBtb25leQo8bWlsZXN0b25lIG49IjQ4ZCIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgdGhhbmtzIHRvIHRoZXNlIG1lbiB3aG8gd2lsbCBoZWxwIG1lIHRvIGVzY2FwZSwgYW5kIGluIGVzY2FwaW5nIG9yIGFpZGluZyB0aGUgZXNjYXBlIG91cnNlbHZlcywgb3Igc2hhbGwgaW4gdHJ1dGggYmUgZG9pbmcgd3JvbmcsIGlmIHdlIGRvIGFsbCB0aGVzZSB0aGluZ3MuICBBbmQgaWYgaXQgYXBwZWFycyB0aGF0IGl0IGlzIHdyb25nIGZvciB1cyB0byBkbyB0aGVtLCBpdCBtYXkgYmUgdGhhdCB3ZSBvdWdodCBub3QgdG8gY29uc2lkZXIgZWl0aGVyIHdoZXRoZXIgd2UgbXVzdCBkaWUgaWYgd2Ugc3RheSBoZXJlIGFuZCBrZWVwIHF1aWV0IG9yIHdoZXRoZXIgd2UgbXVzdCBlbmR1cmUgYW55IHRoaW5nIGVsc2Ugd2hhdHNvZXZlciwgYnV0IG9ubHkgdGhlIHF1ZXN0aW9uIG9mIGRvaW5nIHdyb25nLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHdlIGFncmVlIHRoYXQgdGhlIHF1ZXN0aW9uIGlzIHdoZXRoZXIgaXQgaXMgcmlnaHQgZm9yIG1lIHRvIHRyeSB0byBlc2NhcGUgZnJvbSBoZXJlCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OGMiIHVuaXQ9InNlY3Rpb24iIC8+d2l0aG91dCB0aGUgcGVybWlzc2lvbiBvZiB0aGUgQXRoZW5pYW5zLCBvciBub3QgcmlnaHQuICBBbmQgaWYgaXQgYXBwZWFycyB0byBiZSByaWdodCwgbGV0IHVzIHRyeSBpdCwgYW5kIGlmIG5vdCwgbGV0IHVzIGdpdmUgaXQgdXAuICBCdXQgdGhlIGNvbnNpZGVyYXRpb25zIHlvdSBzdWdnZXN0LCBhYm91dCBzcGVuZGluZyBtb25leSwgYW5kIHJlcHV0YXRpb24sIGFuZCBicmluZ2luZyB1cCBteSBjaGlsZHJlbiwgdGhlc2UgYXJlIHJlYWxseSwgQ3JpdG8sIHRoZSByZWZsZWN0aW9ucyBvZiB0aG9zZSB3aG8gbGlnaHRseSBwdXQgbWVuIHRvIGRlYXRoLCBhbmQgd291bGQgYnJpbmcgdGhlbSB0byBsaWZlIGFnYWluLCBpZiB0aGV5IGNvdWxkLCB3aXRob3V0IGFueSBzZW5zZSwgSSBtZWFuIHRoZSBtdWx0aXR1ZGUuICBCdXQgd2UsIHNpbmNlIG91ciBhcmd1bWVudCBzbyBjb25zdHJhaW5zIHVzLCBtdXN0IGNvbnNpZGVyIG9ubHkgdGhlIHF1ZXN0aW9uIHdlIGp1c3QgYnJvYWNoZWQsIHdoZXRoZXIgd2Ugc2hhbGwgYmUgZG9pbmcgcmlnaHQgaW4gZ2l2aW5nIG1vbmV5CjxtaWxlc3RvbmUgbj0iNDhkIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB0aGFua3MgdG8gdGhlc2UgbWVuIHdobyB3aWxsIGhlbHAgbWUgdG8gZXNjYXBlLCBhbmQgaW4gZXNjYXBpbmcgb3IgYWlkaW5nIHRoZSBlc2NhcGUgb3Vyc2VsdmVzLCBvciBzaGFsbCBpbiB0cnV0aCBiZSBkb2luZyB3cm9uZywgaWYgd2UgZG8gYWxsIHRoZXNlIHRoaW5ncy4gIEFuZCBpZiBpdCBhcHBlYXJzIHRoYXQgaXQgaXMgd3JvbmcgZm9yIHVzIHRvIGRvIHRoZW0sIGl0IG1heSBiZSB0aGF0IHdlIG91Z2h0IG5vdCB0byBjb25zaWRlciBlaXRoZXIgd2hldGhlciB3ZSBtdXN0IGRpZSBpZiB3ZSBzdGF5IGhlcmUgYW5kIGtlZXAgcXVpZXQgb3Igd2hldGhlciB3ZSBtdXN0IGVuZHVyZSBhbnkgdGhpbmcgZWxzZSB3aGF0c29ldmVyLCBidXQgb25seSB0aGUgcXVlc3Rpb24gb2YgZG9pbmcgd3JvbmcuPC9wPjwvdHJhbnNsYXRpb24+"
translation['48.48c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OGMiIHVuaXQ9InNlY3Rpb24iIC8+d2l0aG91dCB0aGUgcGVybWlzc2lvbiBvZiB0aGUgQXRoZW5pYW5zLCBvciBub3QgcmlnaHQuICBBbmQgaWYgaXQgYXBwZWFycyB0byBiZSByaWdodCwgbGV0IHVzIHRyeSBpdCwgYW5kIGlmIG5vdCwgbGV0IHVzIGdpdmUgaXQgdXAuICBCdXQgdGhlIGNvbnNpZGVyYXRpb25zIHlvdSBzdWdnZXN0LCBhYm91dCBzcGVuZGluZyBtb25leSwgYW5kIHJlcHV0YXRpb24sIGFuZCBicmluZ2luZyB1cCBteSBjaGlsZHJlbiwgdGhlc2UgYXJlIHJlYWxseSwgQ3JpdG8sIHRoZSByZWZsZWN0aW9ucyBvZiB0aG9zZSB3aG8gbGlnaHRseSBwdXQgbWVuIHRvIGRlYXRoLCBhbmQgd291bGQgYnJpbmcgdGhlbSB0byBsaWZlIGFnYWluLCBpZiB0aGV5IGNvdWxkLCB3aXRob3V0IGFueSBzZW5zZSwgSSBtZWFuIHRoZSBtdWx0aXR1ZGUuICBCdXQgd2UsIHNpbmNlIG91ciBhcmd1bWVudCBzbyBjb25zdHJhaW5zIHVzLCBtdXN0IGNvbnNpZGVyIG9ubHkgdGhlIHF1ZXN0aW9uIHdlIGp1c3QgYnJvYWNoZWQsIHdoZXRoZXIgd2Ugc2hhbGwgYmUgZG9pbmcgcmlnaHQgaW4gZ2l2aW5nIG1vbmV5CjwvdHJhbnNsYXRpb24+"
translation['48.48d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OGQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoYW5rcyB0byB0aGVzZSBtZW4gd2hvIHdpbGwgaGVscCBtZSB0byBlc2NhcGUsIGFuZCBpbiBlc2NhcGluZyBvciBhaWRpbmcgdGhlIGVzY2FwZSBvdXJzZWx2ZXMsIG9yIHNoYWxsIGluIHRydXRoIGJlIGRvaW5nIHdyb25nLCBpZiB3ZSBkbyBhbGwgdGhlc2UgdGhpbmdzLiAgQW5kIGlmIGl0IGFwcGVhcnMgdGhhdCBpdCBpcyB3cm9uZyBmb3IgdXMgdG8gZG8gdGhlbSwgaXQgbWF5IGJlIHRoYXQgd2Ugb3VnaHQgbm90IHRvIGNvbnNpZGVyIGVpdGhlciB3aGV0aGVyIHdlIG11c3QgZGllIGlmIHdlIHN0YXkgaGVyZSBhbmQga2VlcCBxdWlldCBvciB3aGV0aGVyIHdlIG11c3QgZW5kdXJlIGFueSB0aGluZyBlbHNlIHdoYXRzb2V2ZXIsIGJ1dCBvbmx5IHRoZSBxdWVzdGlvbiBvZiBkb2luZyB3cm9uZy48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB0aGluayB3aGF0IHlvdSBzYXkgaXMgcmlnaHQsIFNvY3JhdGVzOyAgYnV0IHRoaW5rIHdoYXQgd2Ugc2hvdWxkIGRvLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHRoaW5rIHdoYXQgeW91IHNheSBpcyByaWdodCwgU29jcmF0ZXM7ICBidXQgdGhpbmsgd2hhdCB3ZSBzaG91bGQgZG8uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5MZXQgdXMsIG15IGdvb2QgZnJpZW5kLCBpbnZlc3RpZ2F0ZSBpbiBjb21tb24sIGFuZCBpZiB5b3UgY2FuIGNvbnRyYWRpY3QgYW55dGhpbmcgSSBzYXksIGRvIHNvLCBhbmQgSSB3aWxsIHlpZWxkIHRvIHlvdXIgYXJndW1lbnRzOyAKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ4ZSIgdW5pdD0ic2VjdGlvbiIgLz5idXQgaWYgeW91IGNhbm5vdCwgbXkgZGVhciBmcmllbmQsIHN0b3AgYXQgb25jZSBzYXlpbmcgdGhlIHNhbWUgdGhpbmcgdG8gbWUgb3ZlciBhbmQgb3ZlciwgdGhhdCBJIG91Z2h0IHRvIGdvIGF3YXkgZnJvbSBoZXJlIHdpdGhvdXQgdGhlIGNvbnNlbnQgb2YgdGhlIEF0aGVuaWFuczsgIGZvciBJIGFtIGFueGlvdXMgdG8gYWN0IGluIHRoaXMgbWF0dGVyIHdpdGggeW91ciBhcHByb3ZhbCwgYW5kIG5vdCBjb250cmFyeSB0byB5b3VyIHdpc2hlcy4gIE5vdyBzZWUgaWYgdGhlIGJlZ2lubmluZyBvZiB0aGUgaW52ZXN0aWdhdGlvbiBzYXRpc2ZpZXMgeW91LCBhbmQgdHJ5IHRvIHJlcGx5CjxtaWxlc3RvbmUgbj0iNDkiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI0OWEiIHVuaXQ9InNlY3Rpb24iIC8+dG8gbXkgcXVlc3Rpb25zIHRvIHRoZSBiZXN0IG9mIHlvdXIgYmVsaWVmLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5MZXQgdXMsIG15IGdvb2QgZnJpZW5kLCBpbnZlc3RpZ2F0ZSBpbiBjb21tb24sIGFuZCBpZiB5b3UgY2FuIGNvbnRyYWRpY3QgYW55dGhpbmcgSSBzYXksIGRvIHNvLCBhbmQgSSB3aWxsIHlpZWxkIHRvIHlvdXIgYXJndW1lbnRzOyAKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ4ZSIgdW5pdD0ic2VjdGlvbiIgLz5idXQgaWYgeW91IGNhbm5vdCwgbXkgZGVhciBmcmllbmQsIHN0b3AgYXQgb25jZSBzYXlpbmcgdGhlIHNhbWUgdGhpbmcgdG8gbWUgb3ZlciBhbmQgb3ZlciwgdGhhdCBJIG91Z2h0IHRvIGdvIGF3YXkgZnJvbSBoZXJlIHdpdGhvdXQgdGhlIGNvbnNlbnQgb2YgdGhlIEF0aGVuaWFuczsgIGZvciBJIGFtIGFueGlvdXMgdG8gYWN0IGluIHRoaXMgbWF0dGVyIHdpdGggeW91ciBhcHByb3ZhbCwgYW5kIG5vdCBjb250cmFyeSB0byB5b3VyIHdpc2hlcy4gIE5vdyBzZWUgaWYgdGhlIGJlZ2lubmluZyBvZiB0aGUgaW52ZXN0aWdhdGlvbiBzYXRpc2ZpZXMgeW91LCBhbmQgdHJ5IHRvIHJlcGx5CjxtaWxlc3RvbmUgbj0iNDkiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI0OWEiIHVuaXQ9InNlY3Rpb24iIC8+dG8gbXkgcXVlc3Rpb25zIHRvIHRoZSBiZXN0IG9mIHlvdXIgYmVsaWVmLjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['48.48e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OGUiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IGlmIHlvdSBjYW5ub3QsIG15IGRlYXIgZnJpZW5kLCBzdG9wIGF0IG9uY2Ugc2F5aW5nIHRoZSBzYW1lIHRoaW5nIHRvIG1lIG92ZXIgYW5kIG92ZXIsIHRoYXQgSSBvdWdodCB0byBnbyBhd2F5IGZyb20gaGVyZSB3aXRob3V0IHRoZSBjb25zZW50IG9mIHRoZSBBdGhlbmlhbnM7ICBmb3IgSSBhbSBhbnhpb3VzIHRvIGFjdCBpbiB0aGlzIG1hdHRlciB3aXRoIHlvdXIgYXBwcm92YWwsIGFuZCBub3QgY29udHJhcnkgdG8geW91ciB3aXNoZXMuICBOb3cgc2VlIGlmIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGludmVzdGlnYXRpb24gc2F0aXNmaWVzIHlvdSwgYW5kIHRyeSB0byByZXBseQo8L3RyYW5zbGF0aW9uPg=="
translation['49.49a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDlhIiB1bml0PSJzZWN0aW9uIiAvPnRvIG15IHF1ZXN0aW9ucyB0byB0aGUgYmVzdCBvZiB5b3VyIGJlbGllZi48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB3aWxsIHRyeS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB3aWxsIHRyeS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk91Z2h0IHdlIGluIG5vIHdheSB0byBkbyB3cm9uZyBpbnRlbnRpb25hbGx5LCBvciBzaG91bGQgd2UgZG8gd3JvbmcgaW4gc29tZSB3YXlzIGJ1dCBub3QgaW4gb3RoZXJzPyAgT3IsIGFzIHdlIG9mdGVuIGFncmVlZCBpbiBmb3JtZXIgdGltZXMsIGlzIGl0IG5ldmVyIHJpZ2h0IG9yIGhvbm9yYWJsZSB0byBkbyB3cm9uZz8gIE9yIGhhdmUgYWxsIHRob3NlIGZvcm1lciBjb25jbHVzaW9ucyBvZiBvdXJzIGJlZW4gb3ZlcnR1cm5lZCBpbiB0aGVzZSBmZXcgZGF5cywgYW5kIGhhdmUgd2Ugb2xkIG1lbiwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ5YiIgdW5pdD0ic2VjdGlvbiIgLz5zZXJpb3VzbHkgY29udmVyc2luZyB3aXRoIGVhY2ggb3RoZXIsIGZhaWxlZCBhbGwgYWxvbmcgdG8gc2VlIHRoYXQgd2Ugd2VyZSBubyBiZXR0ZXIgdGhhbiBjaGlsZHJlbj8gIE9yIGlzIG5vdCB3aGF0IHdlIHVzZWQgdG8gc2F5IG1vc3QgY2VydGFpbmx5IHRydWUsIHdoZXRoZXIgdGhlIHdvcmxkIGFncmVlIG9yIG5vdD8gIEFuZCB3aGV0aGVyIHdlIG11c3QgZW5kdXJlIHN0aWxsIG1vcmUgZ3JpZXZvdXMgc3VmZmVyaW5ncyB0aGFuIHRoZXNlLCBvciBsaWdodGVyIG9uZXMsIGlzIG5vdCB3cm9uZ2RvaW5nIGluZXZpdGFibHkgYW4gZXZpbCBhbmQgYSBkaXNncmFjZSB0byB0aGUgd3Jvbmdkb2VyPyAgRG8gd2UgYmVsaWV2ZSB0aGlzIG9yIG5vdD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T3VnaHQgd2UgaW4gbm8gd2F5IHRvIGRvIHdyb25nIGludGVudGlvbmFsbHksIG9yIHNob3VsZCB3ZSBkbyB3cm9uZyBpbiBzb21lIHdheXMgYnV0IG5vdCBpbiBvdGhlcnM/ICBPciwgYXMgd2Ugb2Z0ZW4gYWdyZWVkIGluIGZvcm1lciB0aW1lcywgaXMgaXQgbmV2ZXIgcmlnaHQgb3IgaG9ub3JhYmxlIHRvIGRvIHdyb25nPyAgT3IgaGF2ZSBhbGwgdGhvc2UgZm9ybWVyIGNvbmNsdXNpb25zIG9mIG91cnMgYmVlbiBvdmVydHVybmVkIGluIHRoZXNlIGZldyBkYXlzLCBhbmQgaGF2ZSB3ZSBvbGQgbWVuLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDliIiB1bml0PSJzZWN0aW9uIiAvPnNlcmlvdXNseSBjb252ZXJzaW5nIHdpdGggZWFjaCBvdGhlciwgZmFpbGVkIGFsbCBhbG9uZyB0byBzZWUgdGhhdCB3ZSB3ZXJlIG5vIGJldHRlciB0aGFuIGNoaWxkcmVuPyAgT3IgaXMgbm90IHdoYXQgd2UgdXNlZCB0byBzYXkgbW9zdCBjZXJ0YWlubHkgdHJ1ZSwgd2hldGhlciB0aGUgd29ybGQgYWdyZWUgb3Igbm90PyAgQW5kIHdoZXRoZXIgd2UgbXVzdCBlbmR1cmUgc3RpbGwgbW9yZSBncmlldm91cyBzdWZmZXJpbmdzIHRoYW4gdGhlc2UsIG9yIGxpZ2h0ZXIgb25lcywgaXMgbm90IHdyb25nZG9pbmcgaW5ldml0YWJseSBhbiBldmlsIGFuZCBhIGRpc2dyYWNlIHRvIHRoZSB3cm9uZ2RvZXI/ICBEbyB3ZSBiZWxpZXZlIHRoaXMgb3Igbm90PzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['49.49b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OWIiIHVuaXQ9InNlY3Rpb24iIC8+c2VyaW91c2x5IGNvbnZlcnNpbmcgd2l0aCBlYWNoIG90aGVyLCBmYWlsZWQgYWxsIGFsb25nIHRvIHNlZSB0aGF0IHdlIHdlcmUgbm8gYmV0dGVyIHRoYW4gY2hpbGRyZW4/ICBPciBpcyBub3Qgd2hhdCB3ZSB1c2VkIHRvIHNheSBtb3N0IGNlcnRhaW5seSB0cnVlLCB3aGV0aGVyIHRoZSB3b3JsZCBhZ3JlZSBvciBub3Q/ICBBbmQgd2hldGhlciB3ZSBtdXN0IGVuZHVyZSBzdGlsbCBtb3JlIGdyaWV2b3VzIHN1ZmZlcmluZ3MgdGhhbiB0aGVzZSwgb3IgbGlnaHRlciBvbmVzLCBpcyBub3Qgd3Jvbmdkb2luZyBpbmV2aXRhYmx5IGFuIGV2aWwgYW5kIGEgZGlzZ3JhY2UgdG8gdGhlIHdyb25nZG9lcj8gIERvIHdlIGJlbGlldmUgdGhpcyBvciBub3Q/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlIGRvLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZSBkby48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gd2Ugb3VnaHQgbm90IHRvIGRvIHdyb25nIGF0IGFsbC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB3ZSBvdWdodCBub3QgdG8gZG8gd3JvbmcgYXQgYWxsLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2h5LCBuby48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2h5LCBuby48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB3ZSBvdWdodCBub3QgZXZlbiB0byByZXF1aXRlIHdyb25nIHdpdGggd3JvbmcsIGFzIHRoZSB3b3JsZCB0aGlua3MsIHNpbmNlIHdlIG11c3Qgbm90IGRvIHdyb25nIGF0IGFsbC4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQ5YyIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHdlIG91Z2h0IG5vdCBldmVuIHRvIHJlcXVpdGUgd3Jvbmcgd2l0aCB3cm9uZywgYXMgdGhlIHdvcmxkIHRoaW5rcywgc2luY2Ugd2UgbXVzdCBub3QgZG8gd3JvbmcgYXQgYWxsLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNDljIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['49.49c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OWMiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFwcGFyZW50bHkgbm90LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BcHBhcmVudGx5IG5vdC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwsIENyaXRvLCBvdWdodCBvbmUgdG8gZG8gZXZpbCBvciBub3Q/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwsIENyaXRvLCBvdWdodCBvbmUgdG8gZG8gZXZpbCBvciBub3Q/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkgbm90LCBTb2NyYXRlcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5IG5vdCwgU29jcmF0ZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsLCB0aGVuLCBpcyBpdCByaWdodCB0byByZXF1aXRlIGV2aWwgd2l0aCBldmlsLCBhcyB0aGUgd29ybGQgc2F5cyBpdCBpcywgb3Igbm90IHJpZ2h0PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsLCB0aGVuLCBpcyBpdCByaWdodCB0byByZXF1aXRlIGV2aWwgd2l0aCBldmlsLCBhcyB0aGUgd29ybGQgc2F5cyBpdCBpcywgb3Igbm90IHJpZ2h0PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm90IHJpZ2h0LCBjZXJ0YWlubHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdCByaWdodCwgY2VydGFpbmx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Rm9yIGRvaW5nIGV2aWwgdG8gcGVvcGxlIGlzIHRoZSBzYW1lIHRoaW5nIGFzIHdyb25naW5nIHRoZW0uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkZvciBkb2luZyBldmlsIHRvIHBlb3BsZSBpcyB0aGUgc2FtZSB0aGluZyBhcyB3cm9uZ2luZyB0aGVtLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhhdCBpcyB0cnVlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGF0IGlzIHRydWUuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHdlIG91Z2h0IG5laXRoZXIgdG8gcmVxdWl0ZSB3cm9uZyB3aXRoIHdyb25nIG5vciB0byBkbyBldmlsIHRvIGFueW9uZSwgbm8gbWF0dGVyIHdoYXQgaGUgbWF5IGhhdmUgZG9uZSB0byB1cy4gCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OWQiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIGJlIGNhcmVmdWwsIENyaXRvLCB0aGF0IHlvdSBkbyBub3QsIGluIGFncmVlaW5nIHRvIHRoaXMsIGFncmVlIHRvIHNvbWV0aGluZyB5b3UgZG8gbm90IGJlbGlldmU7ICBmb3IgSSBrbm93IHRoYXQgdGhlcmUgYXJlIGZldyB3aG8gYmVsaWV2ZSBvciBldmVyIHdpbGwgYmVsaWV2ZSB0aGlzLiAgTm93IHRob3NlIHdobyBiZWxpZXZlIHRoaXMsIGFuZCB0aG9zZSB3aG8gZG8gbm90LCBoYXZlIG5vIGNvbW1vbiBncm91bmQgb2YgZGlzY3Vzc2lvbiwgYnV0IHRoZXkgbXVzdCBuZWNlc3NhcmlseSwgaW4gdmlldyBvZiB0aGVpciBvcGluaW9ucywgZGVzcGlzZSBvbmUgYW5vdGhlci4gIERvIHlvdSB0aGVyZWZvcmUgY29uc2lkZXIgdmVyeSBjYXJlZnVsbHkgd2hldGhlciB5b3UgYWdyZWUgYW5kIHNoYXJlIGluIHRoaXMgb3BpbmlvbiwgYW5kIGxldCB1cyB0YWtlIGFzIHRoZSB0aGUgc3RhcnRpbmcgcG9pbnQgb2Ygb3VyIGRpc2N1c3Npb24gdGhlIGFzc3VtcHRpb24gdGhhdCBpdCBpcyBuZXZlciByaWdodCB0byBkbyB3cm9uZyBvciB0byByZXF1aXRlIHdyb25nIHdpdGggd3JvbmcsIG9yIHdoZW4gd2Ugc3VmZmVyIGV2aWwgdG8gZGVmZW5kIG91cnNlbHZlcyBieSBkb2luZyBldmlsIGluIHJldHVybi4gIE9yIGRvIHlvdSBkaXNhZ3JlZSBhbmQgcmVmdXNlIHlvdXIgYXNzZW50CjxtaWxlc3RvbmUgbj0iNDllIiB1bml0PSJzZWN0aW9uIiAvPnRvIHRoaXMgc3RhcnRpbmcgcG9pbnQ/ICBGb3IgSSBoYXZlIGxvbmcgaGVsZCB0aGlzIGJlbGllZiBhbmQgSSBob2xkIGl0IHlldCwgYnV0IGlmIHlvdSBoYXZlIHJlYWNoZWQgYW55IG90aGVyIGNvbmNsdXNpb24sIHNwZWFrIGFuZCBleHBsYWluIGl0IHRvIG1lLiAgSWYgeW91IHN0aWxsIGhvbGQgdG8gb3VyIGZvcm1lciBvcGluaW9uLCBoZWFyIHRoZSBuZXh0IHBvaW50LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHdlIG91Z2h0IG5laXRoZXIgdG8gcmVxdWl0ZSB3cm9uZyB3aXRoIHdyb25nIG5vciB0byBkbyBldmlsIHRvIGFueW9uZSwgbm8gbWF0dGVyIHdoYXQgaGUgbWF5IGhhdmUgZG9uZSB0byB1cy4gCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OWQiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIGJlIGNhcmVmdWwsIENyaXRvLCB0aGF0IHlvdSBkbyBub3QsIGluIGFncmVlaW5nIHRvIHRoaXMsIGFncmVlIHRvIHNvbWV0aGluZyB5b3UgZG8gbm90IGJlbGlldmU7ICBmb3IgSSBrbm93IHRoYXQgdGhlcmUgYXJlIGZldyB3aG8gYmVsaWV2ZSBvciBldmVyIHdpbGwgYmVsaWV2ZSB0aGlzLiAgTm93IHRob3NlIHdobyBiZWxpZXZlIHRoaXMsIGFuZCB0aG9zZSB3aG8gZG8gbm90LCBoYXZlIG5vIGNvbW1vbiBncm91bmQgb2YgZGlzY3Vzc2lvbiwgYnV0IHRoZXkgbXVzdCBuZWNlc3NhcmlseSwgaW4gdmlldyBvZiB0aGVpciBvcGluaW9ucywgZGVzcGlzZSBvbmUgYW5vdGhlci4gIERvIHlvdSB0aGVyZWZvcmUgY29uc2lkZXIgdmVyeSBjYXJlZnVsbHkgd2hldGhlciB5b3UgYWdyZWUgYW5kIHNoYXJlIGluIHRoaXMgb3BpbmlvbiwgYW5kIGxldCB1cyB0YWtlIGFzIHRoZSB0aGUgc3RhcnRpbmcgcG9pbnQgb2Ygb3VyIGRpc2N1c3Npb24gdGhlIGFzc3VtcHRpb24gdGhhdCBpdCBpcyBuZXZlciByaWdodCB0byBkbyB3cm9uZyBvciB0byByZXF1aXRlIHdyb25nIHdpdGggd3JvbmcsIG9yIHdoZW4gd2Ugc3VmZmVyIGV2aWwgdG8gZGVmZW5kIG91cnNlbHZlcyBieSBkb2luZyBldmlsIGluIHJldHVybi4gIE9yIGRvIHlvdSBkaXNhZ3JlZSBhbmQgcmVmdXNlIHlvdXIgYXNzZW50CjxtaWxlc3RvbmUgbj0iNDllIiB1bml0PSJzZWN0aW9uIiAvPnRvIHRoaXMgc3RhcnRpbmcgcG9pbnQ/ICBGb3IgSSBoYXZlIGxvbmcgaGVsZCB0aGlzIGJlbGllZiBhbmQgSSBob2xkIGl0IHlldCwgYnV0IGlmIHlvdSBoYXZlIHJlYWNoZWQgYW55IG90aGVyIGNvbmNsdXNpb24sIHNwZWFrIGFuZCBleHBsYWluIGl0IHRvIG1lLiAgSWYgeW91IHN0aWxsIGhvbGQgdG8gb3VyIGZvcm1lciBvcGluaW9uLCBoZWFyIHRoZSBuZXh0IHBvaW50LjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['49.49d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OWQiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIGJlIGNhcmVmdWwsIENyaXRvLCB0aGF0IHlvdSBkbyBub3QsIGluIGFncmVlaW5nIHRvIHRoaXMsIGFncmVlIHRvIHNvbWV0aGluZyB5b3UgZG8gbm90IGJlbGlldmU7ICBmb3IgSSBrbm93IHRoYXQgdGhlcmUgYXJlIGZldyB3aG8gYmVsaWV2ZSBvciBldmVyIHdpbGwgYmVsaWV2ZSB0aGlzLiAgTm93IHRob3NlIHdobyBiZWxpZXZlIHRoaXMsIGFuZCB0aG9zZSB3aG8gZG8gbm90LCBoYXZlIG5vIGNvbW1vbiBncm91bmQgb2YgZGlzY3Vzc2lvbiwgYnV0IHRoZXkgbXVzdCBuZWNlc3NhcmlseSwgaW4gdmlldyBvZiB0aGVpciBvcGluaW9ucywgZGVzcGlzZSBvbmUgYW5vdGhlci4gIERvIHlvdSB0aGVyZWZvcmUgY29uc2lkZXIgdmVyeSBjYXJlZnVsbHkgd2hldGhlciB5b3UgYWdyZWUgYW5kIHNoYXJlIGluIHRoaXMgb3BpbmlvbiwgYW5kIGxldCB1cyB0YWtlIGFzIHRoZSB0aGUgc3RhcnRpbmcgcG9pbnQgb2Ygb3VyIGRpc2N1c3Npb24gdGhlIGFzc3VtcHRpb24gdGhhdCBpdCBpcyBuZXZlciByaWdodCB0byBkbyB3cm9uZyBvciB0byByZXF1aXRlIHdyb25nIHdpdGggd3JvbmcsIG9yIHdoZW4gd2Ugc3VmZmVyIGV2aWwgdG8gZGVmZW5kIG91cnNlbHZlcyBieSBkb2luZyBldmlsIGluIHJldHVybi4gIE9yIGRvIHlvdSBkaXNhZ3JlZSBhbmQgcmVmdXNlIHlvdXIgYXNzZW50CjwvdHJhbnNsYXRpb24+"
translation['49.49e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0OWUiIHVuaXQ9InNlY3Rpb24iIC8+dG8gdGhpcyBzdGFydGluZyBwb2ludD8gIEZvciBJIGhhdmUgbG9uZyBoZWxkIHRoaXMgYmVsaWVmIGFuZCBJIGhvbGQgaXQgeWV0LCBidXQgaWYgeW91IGhhdmUgcmVhY2hlZCBhbnkgb3RoZXIgY29uY2x1c2lvbiwgc3BlYWsgYW5kIGV4cGxhaW4gaXQgdG8gbWUuICBJZiB5b3Ugc3RpbGwgaG9sZCB0byBvdXIgZm9ybWVyIG9waW5pb24sIGhlYXIgdGhlIG5leHQgcG9pbnQuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgZG8gaG9sZCB0byBpdCBhbmQgSSBhZ3JlZSB3aXRoIHlvdTsgIHNvIGdvIG9uLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvIGhvbGQgdG8gaXQgYW5kIEkgYWdyZWUgd2l0aCB5b3U7ICBzbyBnbyBvbi48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdyB0aGUgbmV4dCB0aGluZyBJIHNheSwgb3IgcmF0aGVyIGFzaywgaXMgdGhpczogIOKAnG91Z2h0IGEgbWFuIHRvIGRvIHdoYXQgaGUgaGFzIGFncmVlZCB0byBkbywgcHJvdmlkZWQgaXQgaXMgcmlnaHQsIG9yIG1heSBoZSB2aW9sYXRlIGhpcyBhZ3JlZW1lbnRzP+KAnTwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3cgdGhlIG5leHQgdGhpbmcgSSBzYXksIG9yIHJhdGhlciBhc2ssIGlzIHRoaXM6ICDigJxvdWdodCBhIG1hbiB0byBkbyB3aGF0IGhlIGhhcyBhZ3JlZWQgdG8gZG8sIHByb3ZpZGVkIGl0IGlzIHJpZ2h0LCBvciBtYXkgaGUgdmlvbGF0ZSBoaXMgYWdyZWVtZW50cz/igJ08L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkhlIG91Z2h0IHRvIGRvIGl0LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5IZSBvdWdodCB0byBkbyBpdC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gY29uc2lkZXIgd2hldGhlciwgaWYgd2UgZ28gYXdheQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTAiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI1MGEiIHVuaXQ9InNlY3Rpb24iIC8+ZnJvbSBoZXJlIHdpdGhvdXQgdGhlIGNvbnNlbnQgb2YgdGhlIHN0YXRlLCB3ZSBhcmUgZG9pbmcgaGFybSB0byB0aGUgdmVyeSBvbmVzIHRvIHdob20gd2UgbGVhc3Qgb3VnaHQgdG8gZG8gaGFybSwgb3Igbm90LCBhbmQgd2hldGhlciB3ZSBhcmUgYWJpZGluZyBieSB3aGF0IHdlIGFncmVlZCB3YXMgcmlnaHQsIG9yIG5vdC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBjb25zaWRlciB3aGV0aGVyLCBpZiB3ZSBnbyBhd2F5CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjUwYSIgdW5pdD0ic2VjdGlvbiIgLz5mcm9tIGhlcmUgd2l0aG91dCB0aGUgY29uc2VudCBvZiB0aGUgc3RhdGUsIHdlIGFyZSBkb2luZyBoYXJtIHRvIHRoZSB2ZXJ5IG9uZXMgdG8gd2hvbSB3ZSBsZWFzdCBvdWdodCB0byBkbyBoYXJtLCBvciBub3QsIGFuZCB3aGV0aGVyIHdlIGFyZSBhYmlkaW5nIGJ5IHdoYXQgd2UgYWdyZWVkIHdhcyByaWdodCwgb3Igbm90LjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['50.50a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTBhIiB1bml0PSJzZWN0aW9uIiAvPmZyb20gaGVyZSB3aXRob3V0IHRoZSBjb25zZW50IG9mIHRoZSBzdGF0ZSwgd2UgYXJlIGRvaW5nIGhhcm0gdG8gdGhlIHZlcnkgb25lcyB0byB3aG9tIHdlIGxlYXN0IG91Z2h0IHRvIGRvIGhhcm0sIG9yIG5vdCwgYW5kIHdoZXRoZXIgd2UgYXJlIGFiaWRpbmcgYnkgd2hhdCB3ZSBhZ3JlZWQgd2FzIHJpZ2h0LCBvciBub3QuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgY2Fubm90IGFuc3dlciB5b3VyIHF1ZXN0aW9uLCBTb2NyYXRlcywgZm9yIEkgZG8gbm90IHVuZGVyc3RhbmQuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgY2Fubm90IGFuc3dlciB5b3VyIHF1ZXN0aW9uLCBTb2NyYXRlcywgZm9yIEkgZG8gbm90IHVuZGVyc3RhbmQuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Db25zaWRlciBpdCBpbiB0aGlzIHdheS4gIElmLCBhcyBJIHdhcyBvbiB0aGUgcG9pbnQgb2YgcnVubmluZyBhd2F5IChvciB3aGF0ZXZlciBpdCBzaG91bGQgYmUgY2FsbGVkKSwgdGhlIGxhd3MgYW5kIHRoZSBjb21tb253ZWFsdGggc2hvdWxkIGNvbWUgdG8gbWUgYW5kIGFzaywg4oCcVGVsbCBtZSwgU29jcmF0ZXMsIHdoYXQgaGF2ZSB5b3UgaW4gbWluZCB0byBkbz8gIEFyZSB5b3Ugbm90IGludGVuZGluZyBieSB0aGlzIHRoaW5nIHlvdSBhcmUgdHJ5aW5nIHRvIGRvLCB0byBkZXN0cm95IHVzLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTBiIiB1bml0PSJzZWN0aW9uIiAvPnRoZSBsYXdzLCBhbmQgdGhlIGVudGlyZSBzdGF0ZSwgc28gZmFyIGFzIGluIHlvdSBsaWVzPyAgT3IgZG8geW91IHRoaW5rIHRoYXQgc3RhdGUgY2FuIGV4aXN0IGFuZCBub3QgYmUgb3ZlcnR1cm5lZCwgaW4gd2hpY2ggdGhlIGRlY2lzaW9ucyByZWFjaGVkIGJ5IHRoZSBjb3VydHMgaGF2ZSBubyBmb3JjZSBidXQgYXJlIG1hZGUgaW52YWxpZCBhbmQgYW5udWxsZWQgYnkgcHJpdmF0ZSBwZXJzb25zP+KAnSAgV2hhdCBzaGFsbCB3ZSBzYXksIENyaXRvLCBpbiByZXBseSB0byB0aGlzIHF1ZXN0aW9uIGFuZCBvdGhlcnMgb2YgdGhlIHNhbWUga2luZD8gIEZvciBvbmUgbWlnaHQgc2F5IG1hbnkgdGhpbmdzLCBlc3BlY2lhbGx5IGlmIG9uZSB3ZXJlIGFuIG9yYXRvciwgYWJvdXQgdGhlIGRlc3RydWN0aW9uIG9mIHRoYXQgbGF3IHdoaWNoIHByb3ZpZGVzIHRoYXQgdGhlIGRlY2lzaW9ucyByZWFjaGVkIGJ5IHRoZSBjb3VydHMgc2hhbGwgYmUgdmFsaWQuICBPciBzaGFsbCB3ZSBzYXkgdG8gdGhlbSwKPG1pbGVzdG9uZSBuPSI1MGMiIHVuaXQ9InNlY3Rpb24iIC8+4oCcVGhlIHN0YXRlIHdyb25nZWQgbWUgYW5kIGRpZCBub3QganVkZ2UgdGhlIGNhc2UgcmlnaHRseeKAnT8gIFNoYWxsIHdlIHNheSB0aGF0LCBvciB3aGF0PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Db25zaWRlciBpdCBpbiB0aGlzIHdheS4gIElmLCBhcyBJIHdhcyBvbiB0aGUgcG9pbnQgb2YgcnVubmluZyBhd2F5IChvciB3aGF0ZXZlciBpdCBzaG91bGQgYmUgY2FsbGVkKSwgdGhlIGxhd3MgYW5kIHRoZSBjb21tb253ZWFsdGggc2hvdWxkIGNvbWUgdG8gbWUgYW5kIGFzaywg4oCcVGVsbCBtZSwgU29jcmF0ZXMsIHdoYXQgaGF2ZSB5b3UgaW4gbWluZCB0byBkbz8gIEFyZSB5b3Ugbm90IGludGVuZGluZyBieSB0aGlzIHRoaW5nIHlvdSBhcmUgdHJ5aW5nIHRvIGRvLCB0byBkZXN0cm95IHVzLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTBiIiB1bml0PSJzZWN0aW9uIiAvPnRoZSBsYXdzLCBhbmQgdGhlIGVudGlyZSBzdGF0ZSwgc28gZmFyIGFzIGluIHlvdSBsaWVzPyAgT3IgZG8geW91IHRoaW5rIHRoYXQgc3RhdGUgY2FuIGV4aXN0IGFuZCBub3QgYmUgb3ZlcnR1cm5lZCwgaW4gd2hpY2ggdGhlIGRlY2lzaW9ucyByZWFjaGVkIGJ5IHRoZSBjb3VydHMgaGF2ZSBubyBmb3JjZSBidXQgYXJlIG1hZGUgaW52YWxpZCBhbmQgYW5udWxsZWQgYnkgcHJpdmF0ZSBwZXJzb25zP+KAnSAgV2hhdCBzaGFsbCB3ZSBzYXksIENyaXRvLCBpbiByZXBseSB0byB0aGlzIHF1ZXN0aW9uIGFuZCBvdGhlcnMgb2YgdGhlIHNhbWUga2luZD8gIEZvciBvbmUgbWlnaHQgc2F5IG1hbnkgdGhpbmdzLCBlc3BlY2lhbGx5IGlmIG9uZSB3ZXJlIGFuIG9yYXRvciwgYWJvdXQgdGhlIGRlc3RydWN0aW9uIG9mIHRoYXQgbGF3IHdoaWNoIHByb3ZpZGVzIHRoYXQgdGhlIGRlY2lzaW9ucyByZWFjaGVkIGJ5IHRoZSBjb3VydHMgc2hhbGwgYmUgdmFsaWQuICBPciBzaGFsbCB3ZSBzYXkgdG8gdGhlbSwKPG1pbGVzdG9uZSBuPSI1MGMiIHVuaXQ9InNlY3Rpb24iIC8+4oCcVGhlIHN0YXRlIHdyb25nZWQgbWUgYW5kIGRpZCBub3QganVkZ2UgdGhlIGNhc2UgcmlnaHRseeKAnT8gIFNoYWxsIHdlIHNheSB0aGF0LCBvciB3aGF0PzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['50.50b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MGIiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIGxhd3MsIGFuZCB0aGUgZW50aXJlIHN0YXRlLCBzbyBmYXIgYXMgaW4geW91IGxpZXM/ICBPciBkbyB5b3UgdGhpbmsgdGhhdCBzdGF0ZSBjYW4gZXhpc3QgYW5kIG5vdCBiZSBvdmVydHVybmVkLCBpbiB3aGljaCB0aGUgZGVjaXNpb25zIHJlYWNoZWQgYnkgdGhlIGNvdXJ0cyBoYXZlIG5vIGZvcmNlIGJ1dCBhcmUgbWFkZSBpbnZhbGlkIGFuZCBhbm51bGxlZCBieSBwcml2YXRlIHBlcnNvbnM/4oCdICBXaGF0IHNoYWxsIHdlIHNheSwgQ3JpdG8sIGluIHJlcGx5IHRvIHRoaXMgcXVlc3Rpb24gYW5kIG90aGVycyBvZiB0aGUgc2FtZSBraW5kPyAgRm9yIG9uZSBtaWdodCBzYXkgbWFueSB0aGluZ3MsIGVzcGVjaWFsbHkgaWYgb25lIHdlcmUgYW4gb3JhdG9yLCBhYm91dCB0aGUgZGVzdHJ1Y3Rpb24gb2YgdGhhdCBsYXcgd2hpY2ggcHJvdmlkZXMgdGhhdCB0aGUgZGVjaXNpb25zIHJlYWNoZWQgYnkgdGhlIGNvdXJ0cyBzaGFsbCBiZSB2YWxpZC4gIE9yIHNoYWxsIHdlIHNheSB0byB0aGVtLAo8L3RyYW5zbGF0aW9uPg=="
translation['50.50c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MGMiIHVuaXQ9InNlY3Rpb24iIC8+4oCcVGhlIHN0YXRlIHdyb25nZWQgbWUgYW5kIGRpZCBub3QganVkZ2UgdGhlIGNhc2UgcmlnaHRseeKAnT8gIFNoYWxsIHdlIHNheSB0aGF0LCBvciB3aGF0PzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3JpdG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGF0IGlzIHdoYXQgd2Ugc2hhbGwgc2F5LCBieSBaZXVzLCBTb2NyYXRlcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhhdCBpcyB3aGF0IHdlIHNoYWxsIHNheSwgYnkgWmV1cywgU29jcmF0ZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IHRoZW4gaWYgdGhlIGxhd3Mgc2hvdWxkIHNheSwg4oCcU29jcmF0ZXMsIGlzIHRoaXMgdGhlIGFncmVlbWVudCB5b3UgbWFkZSB3aXRoIHVzLCBvciBkaWQgeW91IGFncmVlIHRvIGFiaWRlIGJ5IHRoZSB2ZXJkaWN0cyBwcm9ub3VuY2VkIGJ5IHRoZSBzdGF0ZT/igJ0gIE5vdyBpZiBJIHdlcmUgc3VycHJpc2VkIGJ5IHdoYXQgdGhleSBzYWlkLCBwZXJoYXBzIHRoZXkgd291bGQgY29udGludWUsIOKAnERvbid0IGJlIHN1cnByaXNlZCBhdCB3aGF0IHdlIHNheSwgU29jcmF0ZXMsIGJ1dCBhbnN3ZXIsIHNpbmNlIHlvdSBhcmUgaW4gdGhlIGhhYml0IG9mIGVtcGxveWluZyB0aGUgbWV0aG9kIG9mIHF1ZXN0aW9uIGFuZCBhbnN3ZXIuICBDb21lLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTBkIiB1bml0PSJzZWN0aW9uIiAvPndoYXQgZmF1bHQgZG8geW91IGZpbmQgd2l0aCB1cyBhbmQgdGhlIHN0YXRlLCB0aGF0IHlvdSBhcmUgdHJ5aW5nIHRvIGRlc3Ryb3kgdXM/ICBJbiB0aGUgZmlyc3QgcGxhY2UsIGRpZCB3ZSBub3QgYnJpbmcgeW91IGZvcnRoPyAgSXMgaXQgbm90IHRocm91Z2ggdXMgdGhhdCB5b3VyIGZhdGhlciBtYXJyaWVkIHlvdXIgbW90aGVyIGFuZCBiZWdhdCB5b3U/ICBOb3cgdGVsbCB1cywgaGF2ZSB5b3UgYW55IGZhdWx0IHRvIGZpbmQgd2l0aCB0aG9zZSBvZiB1cyB3aG8gYXJlIHRoZSBsYXdzIG9mIG1hcnJpYWdlP+KAnSAg4oCcSSBmaW5kIG5vIGZhdWx0LOKAnSBJIHNob3VsZCBzYXkuICDigJxPciB3aXRoIHRob3NlIHRoYXQgaGF2ZSB0byBkbyB3aXRoIHRoZSBudXJ0dXJlIG9mIHRoZSBjaGlsZCBhZnRlciBoZSBpcyBib3JuIGFuZCB3aXRoIGhpcyBlZHVjYXRpb24gd2hpY2ggeW91LCBsaWtlIG90aGVycywgcmVjZWl2ZWQ/ICBEaWQgdGhvc2Ugb2YgdXMgd2hvIGFyZSBhc3NpZ25lZCB0byB0aGVzZSBtYXR0ZXJzIG5vdCBnaXZlIGdvb2QgZGlyZWN0aW9ucyB3aGVuIHdlIHRvbGQgeW91ciBmYXRoZXIgdG8gZWR1Y2F0ZSB5b3UgaW4gbXVzaWMgYW5kIGd5bW5hc3RpY3M/4oCdIAo8bWlsZXN0b25lIG49IjUwZSIgdW5pdD0ic2VjdGlvbiIgLz7igJxZb3UgZGlkLOKAnSBJIHNob3VsZCBzYXkuICDigJxXZWxsIHRoZW4sIHdoZW4geW91IHdlcmUgYm9ybiBhbmQgbnVydHVyZWQgYW5kIGVkdWNhdGVkLCBjb3VsZCB5b3Ugc2F5IHRvIGJlZ2luIHdpdGggdGhhdCB5b3Ugd2VyZSBub3Qgb3VyIG9mZnNwcmluZyBhbmQgb3VyIHNsYXZlLCB5b3UgeW91cnNlbGYgYW5kIHlvdXIgYW5jZXN0b3JzPyAgQW5kIGlmIHRoaXMgaXMgc28sIGRvIHlvdSB0aGluayByaWdodCBhcyBiZXR3ZWVuIHlvdSBhbmQgdXMgcmVzdHMgb24gYSBiYXNpcyBvZiBlcXVhbGl0eSwgc28gdGhhdCB3aGF0ZXZlciB3ZSB1bmRlcnRha2UgdG8gZG8gdG8geW91IGl0IGlzIHJpZ2h0IGZvciB5b3UgdG8gcmV0YWxpYXRlPyAgVGhlcmUgd2FzIG5vIHN1Y2ggZXF1YWxpdHkgb2YgcmlnaHQgYmV0d2VlbiB5b3UgYW5kIHlvdXIgZmF0aGVyIG9yIHlvdXIgbWFzdGVyLCBpZiB5b3UgaGFkIG9uZSwgc28gdGhhdCB3aGF0ZXZlciB0cmVhdG1lbnQgeW91IHJlY2VpdmVkIHlvdSBtaWdodCByZXR1cm4gaXQsIGFuc3dlcmluZyB0aGVtIGlmIHlvdSB3ZXJlIHJldmlsZWQsCjxtaWxlc3RvbmUgbj0iNTEiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI1MWEiIHVuaXQ9InNlY3Rpb24iIC8+b3Igc3RyaWtpbmcgYmFjayBpZiB5b3Ugd2VyZSBzdHJ1Y2ssIGFuZCB0aGUgbGlrZTsgIGFuZCBkbyB5b3UgdGhpbmsgdGhhdCBpdCB3aWxsIGJlIHByb3BlciBmb3IgeW91IHRvIGFjdCBzbyB0b3dhcmQgeW91ciBjb3VudHJ5IGFuZCB0aGUgbGF3cywgc28gdGhhdCBpZiB3ZSB1bmRlcnRha2UgdG8gZGVzdHJveSB5b3UsIHRoaW5raW5nIGl0IGlzIHJpZ2h0LCB5b3Ugd2lsbCB1bmRlcnRha2UgaW4gcmV0dXJuIHRvIGRlc3Ryb3kgdXMgbGF3cyBhbmQgeW91ciBjb3VudHJ5LCBzbyBmYXIgYXMgeW91IGFyZSBhYmxlLCBhbmQgd2lsbCBzYXkgdGhhdCBpbiBkb2luZyB0aGlzIHlvdSBhcmUgZG9pbmcgcmlnaHQsIHlvdSB3aG8gcmVhbGx5IGNhcmUgZm9yIHZpcnR1ZT8gIE9yIGlzIHlvdXIgd2lzZG9tIHN1Y2ggdGhhdCB5b3UgZG8gbm90IHNlZSB0aGF0IHlvdXIgY291bnRyeSBpcyBtb3JlIHByZWNpb3VzIGFuZCBtb3JlIHRvIGJlIHJldmVyZWQgYW5kIGlzIGhvbGllciBhbmQgaW4gaGlnaGVyIGVzdGVlbQo8bWlsZXN0b25lIG49IjUxYiIgdW5pdD0ic2VjdGlvbiIgLz5hbW9uZyB0aGUgZ29kcyBhbmQgYW1vbmcgbWVuIG9mIHVuZGVyc3RhbmRpbmcgdGhhbiB5b3VyIG1vdGhlciBhbmQgeW91ciBmYXRoZXIgYW5kIGFsbCB5b3VyIGFuY2VzdG9ycywgYW5kIHRoYXQgeW91IG91Z2h0IHRvIHNob3cgdG8gaGVyIG1vcmUgcmV2ZXJlbmNlIGFuZCBvYmVkaWVuY2UgYW5kIGh1bWlsaXR5IHdoZW4gc2hlIGlzIGFuZ3J5IHRoYW4gdG8geW91ciBmYXRoZXIsIGFuZCBvdWdodCBlaXRoZXIgdG8gY29udmluY2UgaGVyIGJ5IHBlcnN1YXNpb24gb3IgdG8gZG8gd2hhdGV2ZXIgc2hlIGNvbW1hbmRzLCBhbmQgdG8gc3VmZmVyLCBpZiBzaGUgY29tbWFuZHMgeW91IHRvIHN1ZmZlciwgaW4gc2lsZW5jZSwgYW5kIGlmIHNoZSBvcmRlcnMgeW91IHRvIGJlIHNjb3VyZ2VkIG9yIGltcHJpc29uZWQgb3IgaWYgc2hlIGxlYWRzIHlvdSB0byB3YXIgdG8gYmUgd291bmRlZCBvciBzbGFpbiwgaGVyIHdpbGwgaXMgdG8gYmUgZG9uZSwgYW5kIHRoaXMgaXMgcmlnaHQsIGFuZCB5b3UgbXVzdCBub3QgZ2l2ZSB3YXkgb3IgZHJhdyBiYWNrIG9yIGxlYXZlIHlvdXIgcG9zdCwgYnV0IGluIHdhciBhbmQgaW4gY291cnQgYW5kIGV2ZXJ5d2hlcmUsCjxtaWxlc3RvbmUgbj0iNTFjIiB1bml0PSJzZWN0aW9uIiAvPnlvdSBtdXN0IGRvIHdoYXRldmVyIHRoZSBzdGF0ZSwgeW91ciBjb3VudHJ5LCBjb21tYW5kcywgb3IgbXVzdCBzaG93IGhlciBieSBwZXJzdWFzaW9uIHdoYXQgaXMgcmVhbGx5IHJpZ2h0LCBidXQgdGhhdCBpdCBpcyBpbXBpb3VzIHRvIHVzZSB2aW9sZW5jZSBhZ2FpbnN0IGVpdGhlciB5b3VyIGZhdGhlciBvciB5b3VyIG1vdGhlciwgYW5kIG11Y2ggbW9yZSBpbXBpb3VzIHRvIHVzZSBpdCBhZ2FpbnN0IHlvdXIgY291bnRyeT/igJ0gIFdoYXQgc2hhbGwgd2UgcmVwbHkgdG8gdGhpcywgQ3JpdG8sIHRoYXQgdGhlIGxhd3Mgc3BlYWsgdGhlIHRydXRoLCBvciBub3Q/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgdGhlbiBpZiB0aGUgbGF3cyBzaG91bGQgc2F5LCDigJxTb2NyYXRlcywgaXMgdGhpcyB0aGUgYWdyZWVtZW50IHlvdSBtYWRlIHdpdGggdXMsIG9yIGRpZCB5b3UgYWdyZWUgdG8gYWJpZGUgYnkgdGhlIHZlcmRpY3RzIHByb25vdW5jZWQgYnkgdGhlIHN0YXRlP+KAnSAgTm93IGlmIEkgd2VyZSBzdXJwcmlzZWQgYnkgd2hhdCB0aGV5IHNhaWQsIHBlcmhhcHMgdGhleSB3b3VsZCBjb250aW51ZSwg4oCcRG9uJ3QgYmUgc3VycHJpc2VkIGF0IHdoYXQgd2Ugc2F5LCBTb2NyYXRlcywgYnV0IGFuc3dlciwgc2luY2UgeW91IGFyZSBpbiB0aGUgaGFiaXQgb2YgZW1wbG95aW5nIHRoZSBtZXRob2Qgb2YgcXVlc3Rpb24gYW5kIGFuc3dlci4gIENvbWUsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MGQiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCBmYXVsdCBkbyB5b3UgZmluZCB3aXRoIHVzIGFuZCB0aGUgc3RhdGUsIHRoYXQgeW91IGFyZSB0cnlpbmcgdG8gZGVzdHJveSB1cz8gIEluIHRoZSBmaXJzdCBwbGFjZSwgZGlkIHdlIG5vdCBicmluZyB5b3UgZm9ydGg/ICBJcyBpdCBub3QgdGhyb3VnaCB1cyB0aGF0IHlvdXIgZmF0aGVyIG1hcnJpZWQgeW91ciBtb3RoZXIgYW5kIGJlZ2F0IHlvdT8gIE5vdyB0ZWxsIHVzLCBoYXZlIHlvdSBhbnkgZmF1bHQgdG8gZmluZCB3aXRoIHRob3NlIG9mIHVzIHdobyBhcmUgdGhlIGxhd3Mgb2YgbWFycmlhZ2U/4oCdICDigJxJIGZpbmQgbm8gZmF1bHQs4oCdIEkgc2hvdWxkIHNheS4gIOKAnE9yIHdpdGggdGhvc2UgdGhhdCBoYXZlIHRvIGRvIHdpdGggdGhlIG51cnR1cmUgb2YgdGhlIGNoaWxkIGFmdGVyIGhlIGlzIGJvcm4gYW5kIHdpdGggaGlzIGVkdWNhdGlvbiB3aGljaCB5b3UsIGxpa2Ugb3RoZXJzLCByZWNlaXZlZD8gIERpZCB0aG9zZSBvZiB1cyB3aG8gYXJlIGFzc2lnbmVkIHRvIHRoZXNlIG1hdHRlcnMgbm90IGdpdmUgZ29vZCBkaXJlY3Rpb25zIHdoZW4gd2UgdG9sZCB5b3VyIGZhdGhlciB0byBlZHVjYXRlIHlvdSBpbiBtdXNpYyBhbmQgZ3ltbmFzdGljcz/igJ0gCjxtaWxlc3RvbmUgbj0iNTBlIiB1bml0PSJzZWN0aW9uIiAvPuKAnFlvdSBkaWQs4oCdIEkgc2hvdWxkIHNheS4gIOKAnFdlbGwgdGhlbiwgd2hlbiB5b3Ugd2VyZSBib3JuIGFuZCBudXJ0dXJlZCBhbmQgZWR1Y2F0ZWQsIGNvdWxkIHlvdSBzYXkgdG8gYmVnaW4gd2l0aCB0aGF0IHlvdSB3ZXJlIG5vdCBvdXIgb2Zmc3ByaW5nIGFuZCBvdXIgc2xhdmUsIHlvdSB5b3Vyc2VsZiBhbmQgeW91ciBhbmNlc3RvcnM/ICBBbmQgaWYgdGhpcyBpcyBzbywgZG8geW91IHRoaW5rIHJpZ2h0IGFzIGJldHdlZW4geW91IGFuZCB1cyByZXN0cyBvbiBhIGJhc2lzIG9mIGVxdWFsaXR5LCBzbyB0aGF0IHdoYXRldmVyIHdlIHVuZGVydGFrZSB0byBkbyB0byB5b3UgaXQgaXMgcmlnaHQgZm9yIHlvdSB0byByZXRhbGlhdGU/ICBUaGVyZSB3YXMgbm8gc3VjaCBlcXVhbGl0eSBvZiByaWdodCBiZXR3ZWVuIHlvdSBhbmQgeW91ciBmYXRoZXIgb3IgeW91ciBtYXN0ZXIsIGlmIHlvdSBoYWQgb25lLCBzbyB0aGF0IHdoYXRldmVyIHRyZWF0bWVudCB5b3UgcmVjZWl2ZWQgeW91IG1pZ2h0IHJldHVybiBpdCwgYW5zd2VyaW5nIHRoZW0gaWYgeW91IHdlcmUgcmV2aWxlZCwKPG1pbGVzdG9uZSBuPSI1MSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjUxYSIgdW5pdD0ic2VjdGlvbiIgLz5vciBzdHJpa2luZyBiYWNrIGlmIHlvdSB3ZXJlIHN0cnVjaywgYW5kIHRoZSBsaWtlOyAgYW5kIGRvIHlvdSB0aGluayB0aGF0IGl0IHdpbGwgYmUgcHJvcGVyIGZvciB5b3UgdG8gYWN0IHNvIHRvd2FyZCB5b3VyIGNvdW50cnkgYW5kIHRoZSBsYXdzLCBzbyB0aGF0IGlmIHdlIHVuZGVydGFrZSB0byBkZXN0cm95IHlvdSwgdGhpbmtpbmcgaXQgaXMgcmlnaHQsIHlvdSB3aWxsIHVuZGVydGFrZSBpbiByZXR1cm4gdG8gZGVzdHJveSB1cyBsYXdzIGFuZCB5b3VyIGNvdW50cnksIHNvIGZhciBhcyB5b3UgYXJlIGFibGUsIGFuZCB3aWxsIHNheSB0aGF0IGluIGRvaW5nIHRoaXMgeW91IGFyZSBkb2luZyByaWdodCwgeW91IHdobyByZWFsbHkgY2FyZSBmb3IgdmlydHVlPyAgT3IgaXMgeW91ciB3aXNkb20gc3VjaCB0aGF0IHlvdSBkbyBub3Qgc2VlIHRoYXQgeW91ciBjb3VudHJ5IGlzIG1vcmUgcHJlY2lvdXMgYW5kIG1vcmUgdG8gYmUgcmV2ZXJlZCBhbmQgaXMgaG9saWVyIGFuZCBpbiBoaWdoZXIgZXN0ZWVtCjxtaWxlc3RvbmUgbj0iNTFiIiB1bml0PSJzZWN0aW9uIiAvPmFtb25nIHRoZSBnb2RzIGFuZCBhbW9uZyBtZW4gb2YgdW5kZXJzdGFuZGluZyB0aGFuIHlvdXIgbW90aGVyIGFuZCB5b3VyIGZhdGhlciBhbmQgYWxsIHlvdXIgYW5jZXN0b3JzLCBhbmQgdGhhdCB5b3Ugb3VnaHQgdG8gc2hvdyB0byBoZXIgbW9yZSByZXZlcmVuY2UgYW5kIG9iZWRpZW5jZSBhbmQgaHVtaWxpdHkgd2hlbiBzaGUgaXMgYW5ncnkgdGhhbiB0byB5b3VyIGZhdGhlciwgYW5kIG91Z2h0IGVpdGhlciB0byBjb252aW5jZSBoZXIgYnkgcGVyc3Vhc2lvbiBvciB0byBkbyB3aGF0ZXZlciBzaGUgY29tbWFuZHMsIGFuZCB0byBzdWZmZXIsIGlmIHNoZSBjb21tYW5kcyB5b3UgdG8gc3VmZmVyLCBpbiBzaWxlbmNlLCBhbmQgaWYgc2hlIG9yZGVycyB5b3UgdG8gYmUgc2NvdXJnZWQgb3IgaW1wcmlzb25lZCBvciBpZiBzaGUgbGVhZHMgeW91IHRvIHdhciB0byBiZSB3b3VuZGVkIG9yIHNsYWluLCBoZXIgd2lsbCBpcyB0byBiZSBkb25lLCBhbmQgdGhpcyBpcyByaWdodCwgYW5kIHlvdSBtdXN0IG5vdCBnaXZlIHdheSBvciBkcmF3IGJhY2sgb3IgbGVhdmUgeW91ciBwb3N0LCBidXQgaW4gd2FyIGFuZCBpbiBjb3VydCBhbmQgZXZlcnl3aGVyZSwKPG1pbGVzdG9uZSBuPSI1MWMiIHVuaXQ9InNlY3Rpb24iIC8+eW91IG11c3QgZG8gd2hhdGV2ZXIgdGhlIHN0YXRlLCB5b3VyIGNvdW50cnksIGNvbW1hbmRzLCBvciBtdXN0IHNob3cgaGVyIGJ5IHBlcnN1YXNpb24gd2hhdCBpcyByZWFsbHkgcmlnaHQsIGJ1dCB0aGF0IGl0IGlzIGltcGlvdXMgdG8gdXNlIHZpb2xlbmNlIGFnYWluc3QgZWl0aGVyIHlvdXIgZmF0aGVyIG9yIHlvdXIgbW90aGVyLCBhbmQgbXVjaCBtb3JlIGltcGlvdXMgdG8gdXNlIGl0IGFnYWluc3QgeW91ciBjb3VudHJ5P+KAnSAgV2hhdCBzaGFsbCB3ZSByZXBseSB0byB0aGlzLCBDcml0bywgdGhhdCB0aGUgbGF3cyBzcGVhayB0aGUgdHJ1dGgsIG9yIG5vdD88L3A+PC90cmFuc2xhdGlvbj4="
translation['50.50d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MGQiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCBmYXVsdCBkbyB5b3UgZmluZCB3aXRoIHVzIGFuZCB0aGUgc3RhdGUsIHRoYXQgeW91IGFyZSB0cnlpbmcgdG8gZGVzdHJveSB1cz8gIEluIHRoZSBmaXJzdCBwbGFjZSwgZGlkIHdlIG5vdCBicmluZyB5b3UgZm9ydGg/ICBJcyBpdCBub3QgdGhyb3VnaCB1cyB0aGF0IHlvdXIgZmF0aGVyIG1hcnJpZWQgeW91ciBtb3RoZXIgYW5kIGJlZ2F0IHlvdT8gIE5vdyB0ZWxsIHVzLCBoYXZlIHlvdSBhbnkgZmF1bHQgdG8gZmluZCB3aXRoIHRob3NlIG9mIHVzIHdobyBhcmUgdGhlIGxhd3Mgb2YgbWFycmlhZ2U/4oCdICDigJxJIGZpbmQgbm8gZmF1bHQs4oCdIEkgc2hvdWxkIHNheS4gIOKAnE9yIHdpdGggdGhvc2UgdGhhdCBoYXZlIHRvIGRvIHdpdGggdGhlIG51cnR1cmUgb2YgdGhlIGNoaWxkIGFmdGVyIGhlIGlzIGJvcm4gYW5kIHdpdGggaGlzIGVkdWNhdGlvbiB3aGljaCB5b3UsIGxpa2Ugb3RoZXJzLCByZWNlaXZlZD8gIERpZCB0aG9zZSBvZiB1cyB3aG8gYXJlIGFzc2lnbmVkIHRvIHRoZXNlIG1hdHRlcnMgbm90IGdpdmUgZ29vZCBkaXJlY3Rpb25zIHdoZW4gd2UgdG9sZCB5b3VyIGZhdGhlciB0byBlZHVjYXRlIHlvdSBpbiBtdXNpYyBhbmQgZ3ltbmFzdGljcz/igJ0gCjwvdHJhbnNsYXRpb24+"
translation['50.50e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MGUiIHVuaXQ9InNlY3Rpb24iIC8+4oCcWW91IGRpZCzigJ0gSSBzaG91bGQgc2F5LiAg4oCcV2VsbCB0aGVuLCB3aGVuIHlvdSB3ZXJlIGJvcm4gYW5kIG51cnR1cmVkIGFuZCBlZHVjYXRlZCwgY291bGQgeW91IHNheSB0byBiZWdpbiB3aXRoIHRoYXQgeW91IHdlcmUgbm90IG91ciBvZmZzcHJpbmcgYW5kIG91ciBzbGF2ZSwgeW91IHlvdXJzZWxmIGFuZCB5b3VyIGFuY2VzdG9ycz8gIEFuZCBpZiB0aGlzIGlzIHNvLCBkbyB5b3UgdGhpbmsgcmlnaHQgYXMgYmV0d2VlbiB5b3UgYW5kIHVzIHJlc3RzIG9uIGEgYmFzaXMgb2YgZXF1YWxpdHksIHNvIHRoYXQgd2hhdGV2ZXIgd2UgdW5kZXJ0YWtlIHRvIGRvIHRvIHlvdSBpdCBpcyByaWdodCBmb3IgeW91IHRvIHJldGFsaWF0ZT8gIFRoZXJlIHdhcyBubyBzdWNoIGVxdWFsaXR5IG9mIHJpZ2h0IGJldHdlZW4geW91IGFuZCB5b3VyIGZhdGhlciBvciB5b3VyIG1hc3RlciwgaWYgeW91IGhhZCBvbmUsIHNvIHRoYXQgd2hhdGV2ZXIgdHJlYXRtZW50IHlvdSByZWNlaXZlZCB5b3UgbWlnaHQgcmV0dXJuIGl0LCBhbnN3ZXJpbmcgdGhlbSBpZiB5b3Ugd2VyZSByZXZpbGVkLAo8L3RyYW5zbGF0aW9uPg=="
translation['51.51a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTFhIiB1bml0PSJzZWN0aW9uIiAvPm9yIHN0cmlraW5nIGJhY2sgaWYgeW91IHdlcmUgc3RydWNrLCBhbmQgdGhlIGxpa2U7ICBhbmQgZG8geW91IHRoaW5rIHRoYXQgaXQgd2lsbCBiZSBwcm9wZXIgZm9yIHlvdSB0byBhY3Qgc28gdG93YXJkIHlvdXIgY291bnRyeSBhbmQgdGhlIGxhd3MsIHNvIHRoYXQgaWYgd2UgdW5kZXJ0YWtlIHRvIGRlc3Ryb3kgeW91LCB0aGlua2luZyBpdCBpcyByaWdodCwgeW91IHdpbGwgdW5kZXJ0YWtlIGluIHJldHVybiB0byBkZXN0cm95IHVzIGxhd3MgYW5kIHlvdXIgY291bnRyeSwgc28gZmFyIGFzIHlvdSBhcmUgYWJsZSwgYW5kIHdpbGwgc2F5IHRoYXQgaW4gZG9pbmcgdGhpcyB5b3UgYXJlIGRvaW5nIHJpZ2h0LCB5b3Ugd2hvIHJlYWxseSBjYXJlIGZvciB2aXJ0dWU/ICBPciBpcyB5b3VyIHdpc2RvbSBzdWNoIHRoYXQgeW91IGRvIG5vdCBzZWUgdGhhdCB5b3VyIGNvdW50cnkgaXMgbW9yZSBwcmVjaW91cyBhbmQgbW9yZSB0byBiZSByZXZlcmVkIGFuZCBpcyBob2xpZXIgYW5kIGluIGhpZ2hlciBlc3RlZW0KPC90cmFuc2xhdGlvbj4="
translation['51.51b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MWIiIHVuaXQ9InNlY3Rpb24iIC8+YW1vbmcgdGhlIGdvZHMgYW5kIGFtb25nIG1lbiBvZiB1bmRlcnN0YW5kaW5nIHRoYW4geW91ciBtb3RoZXIgYW5kIHlvdXIgZmF0aGVyIGFuZCBhbGwgeW91ciBhbmNlc3RvcnMsIGFuZCB0aGF0IHlvdSBvdWdodCB0byBzaG93IHRvIGhlciBtb3JlIHJldmVyZW5jZSBhbmQgb2JlZGllbmNlIGFuZCBodW1pbGl0eSB3aGVuIHNoZSBpcyBhbmdyeSB0aGFuIHRvIHlvdXIgZmF0aGVyLCBhbmQgb3VnaHQgZWl0aGVyIHRvIGNvbnZpbmNlIGhlciBieSBwZXJzdWFzaW9uIG9yIHRvIGRvIHdoYXRldmVyIHNoZSBjb21tYW5kcywgYW5kIHRvIHN1ZmZlciwgaWYgc2hlIGNvbW1hbmRzIHlvdSB0byBzdWZmZXIsIGluIHNpbGVuY2UsIGFuZCBpZiBzaGUgb3JkZXJzIHlvdSB0byBiZSBzY291cmdlZCBvciBpbXByaXNvbmVkIG9yIGlmIHNoZSBsZWFkcyB5b3UgdG8gd2FyIHRvIGJlIHdvdW5kZWQgb3Igc2xhaW4sIGhlciB3aWxsIGlzIHRvIGJlIGRvbmUsIGFuZCB0aGlzIGlzIHJpZ2h0LCBhbmQgeW91IG11c3Qgbm90IGdpdmUgd2F5IG9yIGRyYXcgYmFjayBvciBsZWF2ZSB5b3VyIHBvc3QsIGJ1dCBpbiB3YXIgYW5kIGluIGNvdXJ0IGFuZCBldmVyeXdoZXJlLAo8L3RyYW5zbGF0aW9uPg=="
translation['51.51c'] = ""
translation['51.51d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MWQiIHVuaXQ9InNlY3Rpb24iIC8+d2UgY291bGQgdG8geW91IGFuZCBhbGwgdGhlIGNpdGl6ZW5zLiAgWWV0IHdlIHByb2NsYWltLCBieSBoYXZpbmcgb2ZmZXJlZCB0aGUgb3Bwb3J0dW5pdHkgdG8gYW55IG9mIHRoZSBBdGhlbmlhbnMgd2hvIHdpc2hlcyB0byBhdmFpbCBoaW1zZWxmIG9mIGl0LCB0aGF0IGFueW9uZSB3aG8gaXMgbm90IHBsZWFzZWQgd2l0aCB1cyB3aGVuIGhlIGhhcyBiZWNvbWUgYSBtYW4gYW5kIGhhcyBzZWVuIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgY2l0eSBhbmQgdXMsIHRoZSBsYXdzLCBtYXkgdGFrZSBoaXMgZ29vZHMgYW5kIGdvIGF3YXkgd2hlcmV2ZXIgaGUgbGlrZXMuICBBbmQgbm9uZSBvZiB1cyBzdGFuZHMgaW4gdGhlIHdheSBvciBmb3JiaWRzIGFueSBvZiB5b3UgdG8gdGFrZSBoaXMgZ29vZHMgYW5kIGdvIGF3YXkgd2hlcmV2ZXIgaGUgcGxlYXNlcywgaWYgd2UgYW5kIHRoZSBzdGF0ZSBkbyBub3QgcGxlYXNlIGhpbSwgd2hldGhlciBpdCBiZSB0byBhbiBBdGhlbmlhbiBjb2xvbnkgb3IgdG8gYSBmb3JlaWduIGNvdW50cnkgd2hlcmUgaGUgd2lsbCBsaXZlIGFzIGFuIGFsaWVuLiAgQnV0IHdlIHNheSB0aGF0CjwvdHJhbnNsYXRpb24+"
translation['51.51e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MWUiIHVuaXQ9InNlY3Rpb24iIC8+d2hvZXZlciBvZiB5b3Ugc3RheXMgaGVyZSwgc2VlaW5nIGhvdyB3ZSBhZG1pbmlzdGVyIGp1c3RpY2UgYW5kIGhvdyB3ZSBnb3Zlcm4gdGhlIHN0YXRlIGluIG90aGVyIHJlc3BlY3RzLCBoYXMgdGhlcmVieSBlbnRlcmVkIGludG8gYW4gYWdyZWVtZW50IHdpdGggdXMgdG8gZG8gd2hhdCB3ZSBjb21tYW5kOyAgYW5kIHdlIHNheSB0aGF0IGhlIHdobyBkb2VzIG5vdCBvYmV5IGRvZXMgdGhyZWVmb2xkIHdyb25nLCBiZWNhdXNlIGhlIGRpc29iZXlzIHVzIHdobyBhcmUgaGlzIHBhcmVudHMsIGJlY2F1c2UgaGUgZGlzb2JleXMgdXMgd2hvIG51cnR1cmVkIGhpbSwgYW5kIGJlY2F1c2UgYWZ0ZXIgYWdyZWVpbmcgdG8gb2JleSB1cyBoZSBuZWl0aGVyIG9iZXlzIHVzIG5vciBjb252aW5jZXMgdXMgdGhhdAo8L3RyYW5zbGF0aW9uPg=="
translation['52.52a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTJhIiB1bml0PSJzZWN0aW9uIiAvPndlIGFyZSB3cm9uZywgdGhvdWdoIHdlIGdpdmUgaGltIHRoZSBvcHBvcnR1bml0eSBhbmQgZG8gbm90IHJvdWdobHkgb3JkZXIgaGltIHRvIGRvIHdoYXQgd2UgY29tbWFuZCwgYnV0IHdoZW4gd2UgYWxsb3cgaGltIGEgY2hvaWNlIG9mIHR3byB0aGluZ3MsIGVpdGhlciB0byBjb252aW5jZSB1cyBvZiBlcnJvciBvciB0byBkbyBvdXIgYmlkZGluZywgaGUgZG9lcyBuZWl0aGVyIG9mIHRoZXNlIHRoaW5ncy7igJ0gIOKAnFdlIHNheSB0aGF0IHlvdSwgU29jcmF0ZXMsIHdpbGwgYmUgZXhwb3NlZCB0byB0aGVzZSByZXByb2FjaGVzLCBpZiB5b3UgZG8gd2hhdCB5b3UgaGF2ZSBpbiBtaW5kLCBhbmQgeW91IG5vdCBsZWFzdCBvZiB0aGUgQXRoZW5pYW5zIGJ1dCBtb3JlIHRoYW4gbW9zdCBvdGhlcnMu4oCdICBJZiB0aGVuIEkgc2hvdWxkIHNheSwg4oCcSG93IHNvP+KAnSBwZXJoYXBzIHRoZXkgbWlnaHQgcmV0b3J0IHdpdGgganVzdGljZSB0aGF0IEkgaGFkIG1hZGUgdGhpcyBhZ3JlZW1lbnQgd2l0aCB0aGVtIG1vcmUgZW1waGF0aWNhbGx5IHRoYW4gbW9zdCBvdGhlciBBdGhlbmlhbnMuICBGb3IgdGhleSB3b3VsZCBzYXksCjwvdHJhbnNsYXRpb24+"
translation['52.52b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MmIiIHVuaXQ9InNlY3Rpb24iIC8+4oCcU29jcmF0ZXMsIHdlIGhhdmUgc3Ryb25nIGV2aWRlbmNlIHRoYXQgd2UgYW5kIHRoZSBjaXR5IHBsZWFzZWQgeW91OyAgZm9yIHlvdSB3b3VsZCBuZXZlciBoYXZlIHN0YXllZCBpbiBpdCBtb3JlIHRoYW4gYWxsIG90aGVyIEF0aGVuaWFucyBpZiB5b3UgaGFkIG5vdCBiZWVuIGJldHRlciBwbGVhc2VkIHdpdGggaXQgdGhhbiB0aGV5OyAgeW91IG5ldmVyIHdlbnQgb3V0IGZyb20gdGhlIGNpdHkgdG8gYSBmZXN0aXZhbCwgb3IgYW55d2hlcmUgZWxzZSwgZXhjZXB0IG9uIG1pbGl0YXJ5IHNlcnZpY2UsIGFuZCB5b3UgbmV2ZXIgbWFkZSBhbnkgb3RoZXIgam91cm5leSwgYXMgb3RoZXIgcGVvcGxlIGRvLCBhbmQgeW91IGhhZCBubyB3aXNoIHRvIGtub3cgYW55IG90aGVyIGNpdHkgb3Igb3RoZXIgbGF3cywgYnV0IHlvdSB3ZXJlIGNvbnRlbnRlZCB3aXRoIHVzIGFuZCBvdXIgY2l0eS4gIFNvIHN0cm9uZ2x5IGRpZCB5b3UgcHJlZmVyIHVzCjwvdHJhbnNsYXRpb24+"
translation['52.52c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MmMiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGFncmVlIHRvIGxpdmUgaW4gYWNjb3JkYW5jZSB3aXRoIHVzOyAgYW5kIGJlc2lkZXMsIHlvdSBiZWdhdCBjaGlsZHJlbiBpbiB0aGUgY2l0eSwgc2hvd2luZyB0aGF0IGl0IHBsZWFzZWQgeW91LiAgQW5kIG1vcmVvdmVyIGV2ZW4gYXQgeW91ciB0cmlhbCB5b3UgbWlnaHQgaGF2ZSBvZmZlcmVkIGV4aWxlIGFzIHlvdXIgcGVuYWx0eSwgaWYgeW91IHdpc2hlZCwgYW5kIG1pZ2h0IGhhdmUgZG9uZSB3aXRoIHRoZSBzdGF0ZSdzIGNvbnNlbnQgd2hhdCB5b3UgYXJlIG5vdyB1bmRlcnRha2luZyB0byBkbyB3aXRob3V0IGl0LiAgQnV0IHlvdSB0aGVuIHB1dCBvbiBhaXJzIGFuZCBzYWlkIHlvdSB3ZXJlIG5vdCBkaXN0dXJiZWQgaWYgeW91IG11c3QgZGllLCBhbmQgeW91IHByZWZlcnJlZCwgYXMgeW91IHNhaWQsIGRlYXRoIHRvIGV4aWxlLiAgQW5kIG5vdyB5b3UgYXJlIG5vdCBhc2hhbWVkIHRvIHRoaW5rIG9mIHRob3NlIHdvcmRzIGFuZCB5b3UgZG8gbm90IHJlc3BlY3QgdXMsIHRoZSBsYXdzLCBzaW5jZSB5b3UgYXJlIHRyeWluZyB0byBicmluZyB1cyB0byBuYXVnaHQ7IAo8L3RyYW5zbGF0aW9uPg=="
translation['52.52d'] = ""
translation['52.52e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MmUiIHVuaXQ9InNlY3Rpb24iIC8+eW91ciBjb21wYWN0cyBhbmQgYWdyZWVtZW50cyB3aXRoIHVzLCB0aG91Z2ggeW91IHdlcmUgbm90IGxlZCBpbnRvIHRoZW0gYnkgY29tcHVsc2lvbiBvciBmcmF1ZCwgYW5kIHdlcmUgbm90IGZvcmNlZCB0byBtYWtlIHVwIHlvdXIgbWluZCBpbiBhIHNob3J0IHRpbWUsIGJ1dCBoYWQgc2V2ZW50eSB5ZWFycywgaW4gd2hpY2ggeW91IGNvdWxkIGhhdmUgZ29uZSBhd2F5LCBpZiB3ZSBkaWQgbm90IHBsZWFzZSB5b3UgYW5kIGlmIHlvdSB0aG91Z2h0IHRoZSBhZ3JlZW1lbnRzIHdlcmUgdW5mYWlyPyAgQnV0IHlvdSBwcmVmZXJyZWQgbmVpdGhlciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMTA2NSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDExMDY1Ij5MYWNlZGFlbW9uPC9wbGFjZU5hbWU+IG5vciA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMjA1NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEyMDU2Ij5DcmV0ZTwvcGxhY2VOYW1lPiwgd2hpY2ggeW91IGFyZSBhbHdheXMgc2F5aW5nIGFyZSB3ZWxsIGdvdmVybmVkLCBub3IgYW55IG90aGVyIG9mIHRoZSBHcmVlayBzdGF0ZXMsCjwvdHJhbnNsYXRpb24+"
translation['53.53a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1MyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTNhIiB1bml0PSJzZWN0aW9uIiAvPm9yIG9mIHRoZSBmb3JlaWduIG9uZXMsIGJ1dCB5b3Ugd2VudCBhd2F5IGZyb20gdGhpcyBjaXR5IGxlc3MgdGhhbiB0aGUgbGFtZSBhbmQgdGhlIGJsaW5kIGFuZCB0aGUgb3RoZXIgY3JpcHBsZXMuICBTbyBtdWNoIG1vcmUgdGhhbiB0aGUgb3RoZXIgQXRoZW5pYW5zIHdlcmUgeW91IHNhdGlzZmllZCB3aXRoIHRoZSBjaXR5IGFuZCBldmlkZW50bHkgdGhlcmVmb3JlIHdpdGggdXMsIGl0cyBsYXdzOyAgZm9yIHdobyB3b3VsZCBiZSBwbGVhc2VkIHdpdGggYSBjaXR5IGFwYXJ0IGZyb20gaXRzIGxhd3M/ICBBbmQgbm93IHdpbGwgeW91IG5vdCBhYmlkZSBieSB5b3VyIGFncmVlbWVudD8gIFlvdSB3aWxsIGlmIHlvdSB0YWtlIG91ciBhZHZpY2UsIFNvY3JhdGVzOyAgYW5kIHlvdSB3aWxsIG5vdCBtYWtlIHlvdXJzZWxmIHJpZGljdWxvdXMgYnkgZ29pbmcgYXdheSBmcm9tIHRoZSBjaXR5LjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxGb3IgY29uc2lkZXIuICBCeSB0cmFuc2dyZXNzaW5nIGluIHRoaXMgd2F5IGFuZCBjb21taXR0aW5nIHRoZXNlIGVycm9ycywgd2hhdCBnb29kIHdpbGwgeW91IGRvIHRvIHlvdXJzZWxmIG9yCjwvdHJhbnNsYXRpb24+"
translation['53.53b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1M2IiIHVuaXQ9InNlY3Rpb24iIC8+YW55IG9mIHlvdXIgZnJpZW5kcz8gIEZvciBpdCBpcyBwcmV0dHkgY2xlYXIgdGhhdCB5b3VyIGZyaWVuZHMgYWxzbyB3aWxsIGJlIGV4cG9zZWQgdG8gdGhlIHJpc2sgb2YgYmFuaXNobWVudCBhbmQgdGhlIGxvc3Mgb2YgdGhlaXIgaG9tZXMgaW4gdGhlIGNpdHkgb3Igb2YgdGhlaXIgcHJvcGVydHkuICBBbmQgeW91IHlvdXJzZWxmLCBpZiB5b3UgZ28gdG8gb25lIG9mIHRoZSBuZWFyZXN0IGNpdGllcywgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxUaGViZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLFRoZWJlcyI+VGhlYmVzPC9wbGFjZU5hbWU+IG9yIE1lZ2FyYeKAlGZvciBib3RoIGFyZSB3ZWxsIGdvdmVybmVk4oCUd2lsbCBnbyBhcyBhbiBlbmVteSwgU29jcmF0ZXMsIHRvIHRoZWlyIGdvdmVybm1lbnQsIGFuZCBhbGwgd2hvIGNhcmUgZm9yIHRoZWlyIG93biBjaXRpZXMgd2lsbCBsb29rIGFza2FuY2UgYXQgeW91LCBhbmQgd2lsbCBjb25zaWRlciB5b3UgYSBkZXN0cm95ZXIgb2YgdGhlIGxhd3MsCjwvdHJhbnNsYXRpb24+"
translation['53.53c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1M2MiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHlvdSB3aWxsIGNvbmZpcm0gdGhlIGp1ZGdlcyBpbiB0aGVpciBvcGluaW9uLCBzbyB0aGF0IHRoZXkgd2lsbCB0aGluayB0aGVpciB2ZXJkaWN0IHdhcyBqdXN0LiAgRm9yIGhlIHdobyBpcyBkZXN0cm95ZXIgb2YgdGhlIGxhd3MgbWlnaHQgY2VydGFpbmx5IGJlIHJlZ2FyZGVkIGFzIGEgZGVzdHJveWVyIG9mIHlvdW5nIGFuZCB0aG91Z2h0bGVzcyBtZW4uICBXaWxsIHlvdSB0aGVuIGF2b2lkIHRoZSB3ZWxsLWdvdmVybmVkIGNpdGllcyBhbmQgdGhlIG1vc3QgY2l2aWxpemVkIG1lbj8gIEFuZCBpZiB5b3UgZG8gdGhpcyB3aWxsIHlvdXIgbGlmZSBiZSB3b3J0aCBsaXZpbmc/ICBPciB3aWxsIHlvdSBnbyB0byB0aGVtIGFuZCBoYXZlIHRoZSBmYWNlIHRvIGNhcnJ5IG9u4oCUd2hhdCBraW5kIG9mIGNvbnZlcnNhdGlvbiwgU29jcmF0ZXM/ICBUaGUgc2FtZSBraW5kIHlvdSBjYXJyaWVkIG9uIGhlcmUsIHNheWluZyB0aGF0IHZpcnR1ZSBhbmQganVzdGljZSBhbmQgbGF3ZnVsIHRoaW5ncyBhbmQgdGhlIGxhd3MgYXJlIHRoZSBtb3N0IHByZWNpb3VzIHRoaW5ncyB0byBtZW4/ICBBbmQgZG8geW91IG5vdCB0aGluayB0aGF0IHRoZSBjb25kdWN0IG9mIFNvY3JhdGVzIHdvdWxkIHNlZW0gbW9zdCBkaXNncmFjZWZ1bD8gCjwvdHJhbnNsYXRpb24+"
translation['53.53d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1M2QiIHVuaXQ9InNlY3Rpb24iIC8+WW91IGNhbm5vdCBoZWxwIHRoaW5raW5nIHNvLiAgT3IgeW91IHdpbGwga2VlcCBhd2F5IGZyb20gdGhlc2UgcGxhY2VzIGFuZCBnbyB0byBDcml0bydzIGZyaWVuZHMgaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT47ICBmb3IgdGhlcmUgZ3JlYXQgZGlzb3JkZXIgYW5kIGxhd2xlc3NuZXNzIHByZXZhaWwsIGFuZCBwZXJoYXBzIHRoZXkgd291bGQgYmUgYW11c2VkIHRvIGhlYXIgb2YgdGhlIGx1ZGljcm91cyB3YXkgaW4gd2hpY2ggeW91IHJhbiBhd2F5IGZyb20gcHJpc29uIGJ5IHB1dHRpbmcgb24gYSBkaXNndWlzZSwgYSBwZWFzYW50J3MgbGVhdGhlcm4gY2xvYWsgb3Igc29tZSBvZiB0aGUgb3RoZXIgdGhpbmdzIGluIHdoaWNoIHJ1bmF3YXlzIGRyZXNzIHRoZW1zZWx2ZXMgdXAsIGFuZCBjaGFuZ2luZyB5b3VyIGFwcGVhcmFuY2UuICBCdXQgd2lsbCBubyBvbmUgc2F5IHRoYXQgeW91LCBhbiBvbGQgbWFuLCB3aG8gaGFkIHByb2JhYmx5IGJ1dCBhIHNob3J0IHRpbWUgeWV0IHRvIGxpdmUsCjwvdHJhbnNsYXRpb24+"
translation['53.53e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1M2UiIHVuaXQ9InNlY3Rpb24iIC8+Y2x1bmcgdG8gbGlmZSB3aXRoIHN1Y2ggc2hhbWVsZXNzIGdyZWVkIHRoYXQgeW91IHRyYW5zZ3Jlc3NlZCB0aGUgaGlnaGVzdCBsYXdzPyAgUGVyaGFwcyBub3QsIGlmIHlvdSBkbyBub3Qgb2ZmZW5kIGFueW9uZTsgIGJ1dCBpZiB5b3UgZG8sIFNvY3JhdGVzLCB5b3Ugd2lsbCBoYXZlIHRvIGxpc3RlbiB0byBtYW55IHRoaW5ncyB0aGF0IHdvdWxkIGJlIGEgZGlzZ3JhY2UgdG8geW91LiAgU28geW91IHdpbGwgbGl2ZSBhcyBhbiBpbmZlcmlvciBhbmQgYSBzbGF2ZSB0byBldmVyeW9uZS4gIEFuZCB3aGF0IHdpbGwgeW91IGRvIGV4Y2VwdCBmZWFzdCBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5OSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAxMzk5Ij5UaGVzc2FseTwvcGxhY2VOYW1lPiwgYXMgaWYgeW91IGhhZCBnb25lIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAxMzk5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDEzOTkiPlRoZXNzYWx5PC9wbGFjZU5hbWU+IHRvIGF0dGVuZCBhIGJhbnF1ZXQ/ICBXaGF0IHdpbGwgYmVjb21lIG9mIG91ciBjb252ZXJzYXRpb25zIGFib3V0IGp1c3RpY2UgYW5kCjwvdHJhbnNsYXRpb24+"
translation['54.54a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTRhIiB1bml0PSJzZWN0aW9uIiAvPnZpcnR1ZT8gIEJ1dCBwZXJoYXBzIHlvdSB3aXNoIHRvIGxpdmUgZm9yIHRoZSBzYWtlIG9mIHlvdXIgY2hpbGRyZW4sIHRoYXQgeW91IG1heSBicmluZyB0aGVtIHVwIGFuZCBlZHVjYXRlIHRoZW0/ICBIb3cgc28/ICBXaWxsIHlvdSB0YWtlIHRoZW0gdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT4gdG8gYmUgYnJvdWdodCB1cCBhbmQgZWR1Y2F0ZWQsIG1ha2luZyBleGlsZXMgb2YgdGhlbSwgdGhhdCB5b3UgbWF5IGdpdmUgdGhlbSB0aGF0IGJsZXNzaW5nIGFsc28/ICBPciBwZXJoYXBzIHlvdSB3aWxsIG5vdCBkbyB0aGF0LCBidXQgaWYgdGhleSBhcmUgYnJvdWdodCB1cCBoZXJlIHdoaWxlIHlvdSBhcmUgbGl2aW5nLCB3aWxsIHRoZXkgYmUgYmV0dGVyIGJyb3VnaHQgdXAgYW5kIGVkdWNhdGVkIGlmIHlvdSBhcmUgbm90IHdpdGggdGhlbSB0aGFuIGlmIHlvdSB3ZXJlIGRlYWQ/ICBPaCB5ZXMhICB5b3VyIGZyaWVuZHMgd2lsbCBjYXJlIGZvciB0aGVtLiAgV2lsbCB0aGV5IGNhcmUgZm9yIHRoZW0gaWYgeW91IGdvIGF3YXkgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTkiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMTM5OSI+VGhlc3NhbHk8L3BsYWNlTmFtZT4gYW5kIG5vdCBpZiB5b3UgZ28gYXdheSB0byB0aGUgZHdlbGxpbmdzIG9mIHRoZSBkZWFkPyAgSWYgdGhvc2Ugd2hvIHNheSB0aGV5IGFyZSB5b3VyIGZyaWVuZHMKPC90cmFuc2xhdGlvbj4="
translation['54.54b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NGIiIHVuaXQ9InNlY3Rpb24iIC8+YXJlIG9mIGFueSB1c2UsIHdlIG11c3QgYmVsaWV2ZSB0aGV5IHdpbGwgY2FyZSBmb3IgdGhlbSBpbiBib3RoIGNhc2VzIGFsaWtlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBaCwgU29jcmF0ZXMsIGJlIGd1aWRlZCBieSB1cyB3aG8gdGVuZGVkIHlvdXIgaW5mYW5jeS4gIENhcmUgbmVpdGhlciBmb3IgeW91ciBjaGlsZHJlbiBub3IgZm9yIGxpZmUgbm9yIGZvciBhbnl0aGluZyBlbHNlIG1vcmUgdGhhbiBmb3IgdGhlIHJpZ2h0LCB0aGF0IHdoZW4geW91IGNvbWUgdG8gdGhlIGhvbWUgb2YgdGhlIGRlYWQsIHlvdSBtYXkgaGF2ZSBhbGwgdGhlc2UgdGhpbmdzIHRvIHNheSBpbiB5b3VyIG93biBkZWZlbmNlLiAgRm9yIGNsZWFybHkgaWYgeW91IGRvIHRoaXMgdGhpbmcgaXQgd2lsbCBub3QgYmUgYmV0dGVyIGZvciB5b3UgaGVyZSwgb3IgbW9yZSBqdXN0IG9yIGhvbGllciwgbm8sIG5vciBmb3IgYW55IG9mIHlvdXIgZnJpZW5kcywgYW5kIG5laXRoZXIgd2lsbCBpdCBiZSBiZXR0ZXIgd2hlbiB5b3UgcmVhY2ggdGhhdCBvdGhlciBhYm9kZS4gIE5vdywgaG93ZXZlciwgeW91IHdpbGwgZ28gYXdheSB3cm9uZ2VkLCBpZiB5b3UgZG8gZ28gYXdheSwgbm90IGJ5IHVzLAo8L3RyYW5zbGF0aW9uPg=="
translation['54.54c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NGMiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIGxhd3MsIGJ1dCBieSBtZW47ICBidXQgaWYgeW91IGVzY2FwZSBhZnRlciBzbyBkaXNncmFjZWZ1bGx5IHJlcXVpdGluZyB3cm9uZyB3aXRoIHdyb25nIGFuZCBldmlsIHdpdGggZXZpbCwgYnJlYWtpbmcgeW91ciBjb21wYWN0cyBhbmQgYWdyZWVtZW50cyB3aXRoIHVzLCBhbmQgaW5qdXJpbmcgdGhvc2Ugd2hvbSB5b3UgbGVhc3Qgb3VnaHQgdG8gaW5qdXJl4oCUeW91cnNlbGYsIHlvdXIgZnJpZW5kcywgeW91ciBjb3VudHJ5IGFuZCB1c+KAlHdlIHNoYWxsIGJlIGFuZ3J5IHdpdGggeW91IHdoaWxlIHlvdSBsaXZlLCBhbmQgdGhlcmUgb3VyIGJyb3RoZXJzLCB0aGUgbGF3cyBpbiBIYWRlcycgcmVhbG0sIHdpbGwgbm90IHJlY2VpdmUgeW91IGdyYWNpb3VzbHk7ICBmb3IgdGhleSB3aWxsIGtub3cgdGhhdCB5b3UgdHJpZWQsIHNvIGZhciBhcyBpbiB5b3UgbGF5LCB0byBkZXN0cm95IHVzLiAgRG8gbm90IGxldCBDcml0byBwZXJzdWFkZSB5b3UgdG8gZG8KPC90cmFuc2xhdGlvbj4="
translation['54.54d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NGQiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCBoZSBzYXlzLCBidXQgdGFrZSBvdXIgYWR2aWNlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5CZSB3ZWxsIGFzc3VyZWQsIG15IGRlYXIgZnJpZW5kLCBDcml0bywgdGhhdCB0aGlzIGlzIHdoYXQgSSBzZWVtIHRvIGhlYXIsIGFzIHRoZSBmcmVuemllZCBkZXJ2aXNoZXMgb2YgQ3liZWxlIHNlZW0gdG8gaGVhciB0aGUgZmx1dGVzLCBhbmQgdGhpcyBzb3VuZCBvZiB0aGVzZSB3b3JkcyByZS1lY2hvZXMgd2l0aGluIG1lIGFuZCBwcmV2ZW50cyBteSBoZWFyaW5nIGFueSBvdGhlciB3b3Jkcy4gIEFuZCBiZSBhc3N1cmVkIHRoYXQsIHNvIGZhciBhcyBJIG5vdyBiZWxpZXZlLCBpZiB5b3UgYXJndWUgYWdhaW5zdCB0aGVzZSB3b3JkcyB5b3Ugd2lsbCBzcGVhayBpbiB2YWluLiAgTmV2ZXJ0aGVsZXNzLCBpZiB5b3UgdGhpbmsgeW91IGNhbiBhY2NvbXBsaXNoIGFueXRoaW5nLCBzcGVhay48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkNyaXRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm8sIFNvY3JhdGVzLCBJIGhhdmUgbm90aGluZyB0byBzYXkuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NGUiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Dcml0bzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vLCBTb2NyYXRlcywgSSBoYXZlIG5vdGhpbmcgdG8gc2F5Lgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTRlIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['54.54e'] = ""
translation['57.57a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1NyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTdhIiB1bml0PSJzZWN0aW9uIiAvPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWNoZWNyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlcmUgeW91IHdpdGggU29jcmF0ZXMgeW91cnNlbGYsIFBoYWVkbywgb24gdGhlIGRheSB3aGVuIGhlIGRyYW5rIHRoZSBwb2lzb24gaW4gcHJpc29uLCBvciBkaWQgeW91IGhlYXIgYWJvdXQgaXQgZnJvbSBzb21lb25lIGVsc2U/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FY2hlY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VyZSB5b3Ugd2l0aCBTb2NyYXRlcyB5b3Vyc2VsZiwgUGhhZWRvLCBvbiB0aGUgZGF5IHdoZW4gaGUgZHJhbmsgdGhlIHBvaXNvbiBpbiBwcmlzb24sIG9yIGRpZCB5b3UgaGVhciBhYm91dCBpdCBmcm9tIHNvbWVvbmUgZWxzZT88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5QaGFlZG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHdhcyB0aGVyZSBteXNlbGYsIEVjaGVjcmF0ZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5QaGFlZG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHdhcyB0aGVyZSBteXNlbGYsIEVjaGVjcmF0ZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWNoZWNyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gd2hhdCBkaWQgaGUgc2F5IGJlZm9yZSBoaXMgZGVhdGg/IGFuZCBob3cgZGlkIGhlIGRpZT8gSSBzaG91bGQgbGlrZSB0byBoZWFyLCBmb3Igbm93YWRheXMgbm9uZSBvZiB0aGUgUGhsaWFzaWFucyBnbyB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gYXQgYWxsLCBhbmQgbm8gc3RyYW5nZXIgaGFzIGNvbWUgZnJvbSB0aGVyZSBmb3IgYSBsb25nIHRpbWUsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1N2IiIHVuaXQ9InNlY3Rpb24iIC8+d2hvIGNvdWxkIHRlbGwgdXMgYW55dGhpbmcgZGVmaW5pdGUgYWJvdXQgdGhpcyBtYXR0ZXIsIGV4Y2VwdCB0aGF0IGhlIGRyYW5rIHBvaXNvbiBhbmQgZGllZCwgc28gd2UgY291bGQgbGVhcm4gbm8gZnVydGhlciBkZXRhaWxzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWNoZWNyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gd2hhdCBkaWQgaGUgc2F5IGJlZm9yZSBoaXMgZGVhdGg/IGFuZCBob3cgZGlkIGhlIGRpZT8gSSBzaG91bGQgbGlrZSB0byBoZWFyLCBmb3Igbm93YWRheXMgbm9uZSBvZiB0aGUgUGhsaWFzaWFucyBnbyB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gYXQgYWxsLCBhbmQgbm8gc3RyYW5nZXIgaGFzIGNvbWUgZnJvbSB0aGVyZSBmb3IgYSBsb25nIHRpbWUsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1N2IiIHVuaXQ9InNlY3Rpb24iIC8+d2hvIGNvdWxkIHRlbGwgdXMgYW55dGhpbmcgZGVmaW5pdGUgYWJvdXQgdGhpcyBtYXR0ZXIsIGV4Y2VwdCB0aGF0IGhlIGRyYW5rIHBvaXNvbiBhbmQgZGllZCwgc28gd2UgY291bGQgbGVhcm4gbm8gZnVydGhlciBkZXRhaWxzLjwvcD48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLEF0aGVucyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InBlcnNldXMsQXRoZW5zIj5BdGhlbnM8L3BsYWNlTmFtZT4gYXQgYWxsLCBhbmQgbm8gc3RyYW5nZXIgaGFzIGNvbWUgZnJvbSB0aGVyZSBmb3IgYSBsb25nIHRpbWUsCjwvdHJhbnNsYXRpb24+"
translation['57.57b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1N2IiIHVuaXQ9InNlY3Rpb24iIC8+d2hvIGNvdWxkIHRlbGwgdXMgYW55dGhpbmcgZGVmaW5pdGUgYWJvdXQgdGhpcyBtYXR0ZXIsIGV4Y2VwdCB0aGF0IGhlIGRyYW5rIHBvaXNvbiBhbmQgZGllZCwgc28gd2UgY291bGQgbGVhcm4gbm8gZnVydGhlciBkZXRhaWxzLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGhhZWRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RGlkIHlvdSBub3QgZXZlbiBoZWFyIGFib3V0IHRoZSB0cmlhbCBhbmQgaG93IGl0IHdhcyBjb25kdWN0ZWQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5QaGFlZG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5EaWQgeW91IG5vdCBldmVuIGhlYXIgYWJvdXQgdGhlIHRyaWFsIGFuZCBob3cgaXQgd2FzIGNvbmR1Y3RlZD88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FY2hlY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBzb21lIG9uZSB0b2xkIHVzIGFib3V0IHRoYXQsIGFuZCB3ZSB3b25kZXJlZCB0aGF0IGFsdGhvdWdoIGl0IHRvb2sgcGxhY2UgYSBsb25nIHRpbWUgYWdvLCBoZSB3YXMgcHV0IHRvIGRlYXRoIG11Y2ggbGF0ZXIuICBOb3cgd2h5IHdhcyB0aGF0LCBQaGFlZG8/CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49IjU4YSIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkVjaGVjcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIHNvbWUgb25lIHRvbGQgdXMgYWJvdXQgdGhhdCwgYW5kIHdlIHdvbmRlcmVkIHRoYXQgYWx0aG91Z2ggaXQgdG9vayBwbGFjZSBhIGxvbmcgdGltZSBhZ28sIGhlIHdhcyBwdXQgdG8gZGVhdGggbXVjaCBsYXRlci4gIE5vdyB3aHkgd2FzIHRoYXQsIFBoYWVkbz8KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjU4IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNThhIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['58.58a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNThhIiB1bml0PSJzZWN0aW9uIiAvPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGhhZWRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SXQgd2FzIGEgbWF0dGVyIG9mIGNoYW5jZSwgRWNoZWNyYXRlcy4gIEl0IGhhcHBlbmVkIHRoYXQgdGhlIHN0ZXJuIG9mIHRoZSBzaGlwIHdoaWNoIHRoZSBBdGhlbmlhbnMgc2VuZCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERlbG9zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxEZWxvcyI+RGVsb3M8L3BsYWNlTmFtZT4gd2FzIGNyb3duZWQgb24gdGhlIGRheSBiZWZvcmUgdGhlIHRyaWFsLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGhhZWRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SXQgd2FzIGEgbWF0dGVyIG9mIGNoYW5jZSwgRWNoZWNyYXRlcy4gIEl0IGhhcHBlbmVkIHRoYXQgdGhlIHN0ZXJuIG9mIHRoZSBzaGlwIHdoaWNoIHRoZSBBdGhlbmlhbnMgc2VuZCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERlbG9zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxEZWxvcyI+RGVsb3M8L3BsYWNlTmFtZT4gd2FzIGNyb3duZWQgb24gdGhlIGRheSBiZWZvcmUgdGhlIHRyaWFsLjwvcD48cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERlbG9zIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0icGVyc2V1cyxEZWxvcyI+RGVsb3M8L3BsYWNlTmFtZT4gd2FzIGNyb3duZWQgb24gdGhlIGRheSBiZWZvcmUgdGhlIHRyaWFsLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWNoZWNyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgc2hpcCBpcyB0aGlzPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWNoZWNyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgc2hpcCBpcyB0aGlzPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlBoYWVkbzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoaXMgaXMgdGhlIHNoaXAsIGFzIHRoZSBBdGhlbmlhbnMgc2F5LCBpbiB3aGljaCBUaGVzZXVzIG9uY2Ugd2VudCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMjA1NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEyMDU2Ij5DcmV0ZTwvcGxhY2VOYW1lPiB3aXRoIHRoZSBmb3VydGVlbgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNThiIiB1bml0PSJzZWN0aW9uIiAvPnlvdXRocyBhbmQgbWFpZGVucywgYW5kIHNhdmVkIHRoZW0gYW5kIGhpbXNlbGYuICBOb3cgdGhlIEF0aGVuaWFucyBtYWRlIGEgdm93IHRvIEFwb2xsbywgYXMgdGhlIHN0b3J5IGdvZXMsIHRoYXQgaWYgdGhleSB3ZXJlIHNhdmVkIHRoZXkgd291bGQgc2VuZCBhIG1pc3Npb24gZXZlcnkgeWVhciB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERlbG9zIiBrZXk9InBlcnNldXMsRGVsb3MiPkRlbG9zPC9wbGFjZU5hbWU+LiAgQW5kIGZyb20gdGhhdCB0aW1lIGV2ZW4gdG8gdGhlIHByZXNlbnQgZGF5IHRoZXkgc2VuZCBpdCBhbm51YWxseSBpbiBob25vciBvZiB0aGUgZ29kLiAgTm93IGl0IGlzIHRoZWlyIGxhdyB0aGF0IGFmdGVyIHRoZSBtaXNzaW9uIGJlZ2lucyB0aGUgY2l0eSBtdXN0IGJlIHB1cmUgYW5kIG5vIG9uZSBtYXkgYmUgcHVibGljbHkgZXhlY3V0ZWQgdW50aWwgdGhlIHNoaXAgaGFzIGdvbmUgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxEZWxvcyIga2V5PSJwZXJzZXVzLERlbG9zIj5EZWxvczwvcGxhY2VOYW1lPiBhbmQgYmFjazsgIGFuZCBzb21ldGltZXMsIHdoZW4gY29udHJhcnkgd2luZHMKPG1pbGVzdG9uZSBuPSI1OGMiIHVuaXQ9InNlY3Rpb24iIC8+ZGV0YWluIGl0LCB0aGlzIHRha2VzIGEgbG9uZyB0aW1lLiAgVGhlIGJlZ2lubmluZyBvZiB0aGUgbWlzc2lvbiBpcyB3aGVuIHRoZSBwcmllc3Qgb2YgQXBvbGxvIGNyb3ducyB0aGUgc3Rlcm4gb2YgdGhlIHNoaXA7ICBhbmQgdGhpcyB0b29rIHBsYWNlLCBhcyBJIHNheSwgb24gdGhlIGRheSBiZWZvcmUgdGhlIHRyaWFsLiAgRm9yIHRoYXQgcmVhc29uIFNvY3JhdGVzIHBhc3NlZCBhIGxvbmcgdGltZSBpbiBwcmlzb24gYmV0d2VlbiBoaXMgdHJpYWwgYW5kIGhpcyBkZWF0aC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlBoYWVkbzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoaXMgaXMgdGhlIHNoaXAsIGFzIHRoZSBBdGhlbmlhbnMgc2F5LCBpbiB3aGljaCBUaGVzZXVzIG9uY2Ugd2VudCB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxMjA1NiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDEyMDU2Ij5DcmV0ZTwvcGxhY2VOYW1lPiB3aXRoIHRoZSBmb3VydGVlbgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNThiIiB1bml0PSJzZWN0aW9uIiAvPnlvdXRocyBhbmQgbWFpZGVucywgYW5kIHNhdmVkIHRoZW0gYW5kIGhpbXNlbGYuICBOb3cgdGhlIEF0aGVuaWFucyBtYWRlIGEgdm93IHRvIEFwb2xsbywgYXMgdGhlIHN0b3J5IGdvZXMsIHRoYXQgaWYgdGhleSB3ZXJlIHNhdmVkIHRoZXkgd291bGQgc2VuZCBhIG1pc3Npb24gZXZlcnkgeWVhciB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJwZXJzZXVzLERlbG9zIiBrZXk9InBlcnNldXMsRGVsb3MiPkRlbG9zPC9wbGFjZU5hbWU+LiAgQW5kIGZyb20gdGhhdCB0aW1lIGV2ZW4gdG8gdGhlIHByZXNlbnQgZGF5IHRoZXkgc2VuZCBpdCBhbm51YWxseSBpbiBob25vciBvZiB0aGUgZ29kLiAgTm93IGl0IGlzIHRoZWlyIGxhdyB0aGF0IGFmdGVyIHRoZSBtaXNzaW9uIGJlZ2lucyB0aGUgY2l0eSBtdXN0IGJlIHB1cmUgYW5kIG5vIG9uZSBtYXkgYmUgcHVibGljbHkgZXhlY3V0ZWQgdW50aWwgdGhlIHNoaXAgaGFzIGdvbmUgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxEZWxvcyIga2V5PSJwZXJzZXVzLERlbG9zIj5EZWxvczwvcGxhY2VOYW1lPiBhbmQgYmFjazsgIGFuZCBzb21ldGltZXMsIHdoZW4gY29udHJhcnkgd2luZHMKPG1pbGVzdG9uZSBuPSI1OGMiIHVuaXQ9InNlY3Rpb24iIC8+ZGV0YWluIGl0LCB0aGlzIHRha2VzIGEgbG9uZyB0aW1lLiAgVGhlIGJlZ2lubmluZyBvZiB0aGUgbWlzc2lvbiBpcyB3aGVuIHRoZSBwcmllc3Qgb2YgQXBvbGxvIGNyb3ducyB0aGUgc3Rlcm4gb2YgdGhlIHNoaXA7ICBhbmQgdGhpcyB0b29rIHBsYWNlLCBhcyBJIHNheSwgb24gdGhlIGRheSBiZWZvcmUgdGhlIHRyaWFsLiAgRm9yIHRoYXQgcmVhc29uIFNvY3JhdGVzIHBhc3NlZCBhIGxvbmcgdGltZSBpbiBwcmlzb24gYmV0d2VlbiBoaXMgdHJpYWwgYW5kIGhpcyBkZWF0aC48L3A+PHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIwNTYiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjA1NiI+Q3JldGU8L3BsYWNlTmFtZT4gd2l0aCB0aGUgZm91cnRlZW4KPC90cmFuc2xhdGlvbj4="
translation['58.58b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OGIiIHVuaXQ9InNlY3Rpb24iIC8+eW91dGhzIGFuZCBtYWlkZW5zLCBhbmQgc2F2ZWQgdGhlbSBhbmQgaGltc2VsZi4gIE5vdyB0aGUgQXRoZW5pYW5zIG1hZGUgYSB2b3cgdG8gQXBvbGxvLCBhcyB0aGUgc3RvcnkgZ29lcywgdGhhdCBpZiB0aGV5IHdlcmUgc2F2ZWQgdGhleSB3b3VsZCBzZW5kIGEgbWlzc2lvbiBldmVyeSB5ZWFyIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVsb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERlbG9zIj5EZWxvczwvcGxhY2VOYW1lPi4gIEFuZCBmcm9tIHRoYXQgdGltZSBldmVuIHRvIHRoZSBwcmVzZW50IGRheSB0aGV5IHNlbmQgaXQgYW5udWFsbHkgaW4gaG9ub3Igb2YgdGhlIGdvZC4gIE5vdyBpdCBpcyB0aGVpciBsYXcgdGhhdCBhZnRlciB0aGUgbWlzc2lvbiBiZWdpbnMgdGhlIGNpdHkgbXVzdCBiZSBwdXJlIGFuZCBubyBvbmUgbWF5IGJlIHB1YmxpY2x5IGV4ZWN1dGVkIHVudGlsIHRoZSBzaGlwIGhhcyBnb25lIHRvIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVsb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERlbG9zIj5EZWxvczwvcGxhY2VOYW1lPiBhbmQgYmFjazsgIGFuZCBzb21ldGltZXMsIHdoZW4gY29udHJhcnkgd2luZHMKPC90cmFuc2xhdGlvbj4="
translation['58.58c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OGMiIHVuaXQ9InNlY3Rpb24iIC8+ZGV0YWluIGl0LCB0aGlzIHRha2VzIGEgbG9uZyB0aW1lLiAgVGhlIGJlZ2lubmluZyBvZiB0aGUgbWlzc2lvbiBpcyB3aGVuIHRoZSBwcmllc3Qgb2YgQXBvbGxvIGNyb3ducyB0aGUgc3Rlcm4gb2YgdGhlIHNoaXA7ICBhbmQgdGhpcyB0b29rIHBsYWNlLCBhcyBJIHNheSwgb24gdGhlIGRheSBiZWZvcmUgdGhlIHRyaWFsLiAgRm9yIHRoYXQgcmVhc29uIFNvY3JhdGVzIHBhc3NlZCBhIGxvbmcgdGltZSBpbiBwcmlzb24gYmV0d2VlbiBoaXMgdHJpYWwgYW5kIGhpcyBkZWF0aC48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkVjaGVjcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IHRvb2sgcGxhY2UgYXQgaGlzIGRlYXRoLCBQaGFlZG8/ICBXaGF0IHdhcyBzYWlkIGFuZCBkb25lPyAgQW5kIHdoaWNoIG9mIGhpcyBmcmllbmRzIHdlcmUgd2l0aCBoaW0/ICBPciBkaWQgdGhlIGF1dGhvcml0aWVzIGZvcmJpZCB0aGVtIHRvIGJlIHByZXNlbnQsIHNvIHRoYXQgaGUgZGllZCB3aXRob3V0IGhpcyBmcmllbmRzPwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNThkIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWNoZWNyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgdG9vayBwbGFjZSBhdCBoaXMgZGVhdGgsIFBoYWVkbz8gIFdoYXQgd2FzIHNhaWQgYW5kIGRvbmU/ICBBbmQgd2hpY2ggb2YgaGlzIGZyaWVuZHMgd2VyZSB3aXRoIGhpbT8gIE9yIGRpZCB0aGUgYXV0aG9yaXRpZXMgZm9yYmlkIHRoZW0gdG8gYmUgcHJlc2VudCwgc28gdGhhdCBoZSBkaWVkIHdpdGhvdXQgaGlzIGZyaWVuZHM/CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OGQiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvdHJhbnNsYXRpb24+"
translation['58.58d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OGQiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5QaGFlZG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3QgYXQgYWxsLiAgU29tZSB3ZXJlIHRoZXJlLCBpbiBmYWN0LCBhIGdvb2QgbWFueS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlBoYWVkbzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdCBhdCBhbGwuICBTb21lIHdlcmUgdGhlcmUsIGluIGZhY3QsIGEgZ29vZCBtYW55LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkVjaGVjcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CZSBzbyBnb29kIGFzIHRvIHRlbGwgdXMgYXMgZXhhY3RseSBhcyB5b3UgY2FuIGFib3V0IGFsbCB0aGVzZSB0aGluZ3MsIGlmIHlvdSBhcmUgbm90IHRvbyBidXN5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWNoZWNyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJlIHNvIGdvb2QgYXMgdG8gdGVsbCB1cyBhcyBleGFjdGx5IGFzIHlvdSBjYW4gYWJvdXQgYWxsIHRoZXNlIHRoaW5ncywgaWYgeW91IGFyZSBub3QgdG9vIGJ1c3kuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGhhZWRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBhbSBub3QgYnVzeSBhbmQgSSB3aWxsIHRyeSB0byB0ZWxsIHlvdS4gIEl0IGlzIGFsd2F5cyBteSBncmVhdGVzdCBwbGVhc3VyZSB0byBiZSByZW1pbmRlZCBvZiBTb2NyYXRlcyB3aGV0aGVyIGJ5IHNwZWFraW5nIG9mIGhpbSBteXNlbGYgb3IgYnkgbGlzdGVuaW5nIHRvIHNvbWVvbmUgZWxzZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlBoYWVkbzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgYW0gbm90IGJ1c3kgYW5kIEkgd2lsbCB0cnkgdG8gdGVsbCB5b3UuICBJdCBpcyBhbHdheXMgbXkgZ3JlYXRlc3QgcGxlYXN1cmUgdG8gYmUgcmVtaW5kZWQgb2YgU29jcmF0ZXMgd2hldGhlciBieSBzcGVha2luZyBvZiBoaW0gbXlzZWxmIG9yIGJ5IGxpc3RlbmluZyB0byBzb21lb25lIGVsc2UuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWNoZWNyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwsIFBoYWVkbywgeW91IHdpbGwgaGF2ZSBoZWFyZXJzIHdobyBmZWVsIGFzIHlvdSBkbzsgIHNvIHRyeSB0byB0ZWxsIHVzIGV2ZXJ5dGhpbmcgYXMgYWNjdXJhdGVseSBhcyB5b3UgY2FuLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNThlIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWNoZWNyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwsIFBoYWVkbywgeW91IHdpbGwgaGF2ZSBoZWFyZXJzIHdobyBmZWVsIGFzIHlvdSBkbzsgIHNvIHRyeSB0byB0ZWxsIHVzIGV2ZXJ5dGhpbmcgYXMgYWNjdXJhdGVseSBhcyB5b3UgY2FuLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNThlIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['58.58e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OGUiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5QaGFlZG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Gb3IgbXkgcGFydCwgSSBoYWQgc3RyYW5nZSBlbW90aW9ucyB3aGVuIEkgd2FzIHRoZXJlLiAgRm9yIEkgd2FzIG5vdCBmaWxsZWQgd2l0aCBwaXR5IGFzIEkgbWlnaHQgbmF0dXJhbGx5IGJlIHdoZW4gcHJlc2VudCBhdCB0aGUgZGVhdGggb2YgYSBmcmllbmQ7ICBzaW5jZSBoZSBzZWVtZWQgdG8gbWUgdG8gYmUgaGFwcHksIGJvdGggaW4gaGlzIGJlYXJpbmcgYW5kIGhpcyB3b3JkcywgaGUgd2FzIG1lZXRpbmcgZGVhdGggc28gZmVhcmxlc3NseSBhbmQgbm9ibHkuICBBbmQgc28gSSB0aG91Z2h0IHRoYXQgZXZlbiBpbiBnb2luZyB0byB0aGUgYWJvZGUgb2YgdGhlIGRlYWQgaGUgd2FzIG5vdCBnb2luZyB3aXRob3V0IHRoZSBwcm90ZWN0aW9uIG9mIHRoZSBnb2RzLCBhbmQgdGhhdCB3aGVuIGhlIGFycml2ZWQgdGhlcmUKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjU5IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgbj0iNTlhIiB1bml0PSJzZWN0aW9uIiAvPml0IHdvdWxkIGJlIHdlbGwgd2l0aCBoaW0sIGlmIGl0IGV2ZXIgd2FzIHdlbGwgd2l0aCBhbnlvbmUuICBBbmQgZm9yIHRoaXMgcmVhc29uIEkgd2FzIG5vdCBhdCBhbGwgZmlsbGVkIHdpdGggcGl0eSwgYXMgbWlnaHQgc2VlbSBuYXR1cmFsIHdoZW4gSSB3YXMgcHJlc2VudCBhdCBhIHNjZW5lIG9mIG1vdXJuaW5nOyAgbm9yIG9uIHRoZSBvdGhlciBoYW5kIGRpZCBJIGZlZWwgcGxlYXN1cmUgYmVjYXVzZSB3ZSB3ZXJlIG9jY3VwaWVkIHdpdGggcGhpbG9zb3BoeSwgYXMgd2FzIG91ciBjdXN0b23igJRhbmQgb3VyIHRhbGsgd2FzIG9mIHBoaWxvc29waHk74oCUYnV0IGEgdmVyeSBzdHJhbmdlIGZlZWxpbmcgY2FtZSBvdmVyIG1lLCBhbiB1bmFjY3VzdG9tZWQgbWl4dHVyZSBvZiBwbGVhc3VyZSBhbmQgb2YgcGFpbiB0b2dldGhlciwgd2hlbiBJIHRob3VnaHQgdGhhdCBTb2NyYXRlcyB3YXMgcHJlc2VudGx5IHRvIGRpZS4gIEFuZCBhbGwgb2YgdXMgd2hvIHdlcmUgdGhlcmUgd2VyZSBpbiBtdWNoIHRoZSBzYW1lIGNvbmRpdGlvbiwgc29tZXRpbWVzIGxhdWdoaW5nIGFuZCBzb21ldGltZXMgd2VlcGluZzsgIGVzcGVjaWFsbHkgb25lIG9mIHVzLCBBcG9sbG9kb3J1czsgIHlvdSBrbm93IGhpbQo8bWlsZXN0b25lIG49IjU5YiIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgaGlzIGNoYXJhY3Rlci48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlBoYWVkbzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkZvciBteSBwYXJ0LCBJIGhhZCBzdHJhbmdlIGVtb3Rpb25zIHdoZW4gSSB3YXMgdGhlcmUuICBGb3IgSSB3YXMgbm90IGZpbGxlZCB3aXRoIHBpdHkgYXMgSSBtaWdodCBuYXR1cmFsbHkgYmUgd2hlbiBwcmVzZW50IGF0IHRoZSBkZWF0aCBvZiBhIGZyaWVuZDsgIHNpbmNlIGhlIHNlZW1lZCB0byBtZSB0byBiZSBoYXBweSwgYm90aCBpbiBoaXMgYmVhcmluZyBhbmQgaGlzIHdvcmRzLCBoZSB3YXMgbWVldGluZyBkZWF0aCBzbyBmZWFybGVzc2x5IGFuZCBub2JseS4gIEFuZCBzbyBJIHRob3VnaHQgdGhhdCBldmVuIGluIGdvaW5nIHRvIHRoZSBhYm9kZSBvZiB0aGUgZGVhZCBoZSB3YXMgbm90IGdvaW5nIHdpdGhvdXQgdGhlIHByb3RlY3Rpb24gb2YgdGhlIGdvZHMsIGFuZCB0aGF0IHdoZW4gaGUgYXJyaXZlZCB0aGVyZQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTkiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI1OWEiIHVuaXQ9InNlY3Rpb24iIC8+aXQgd291bGQgYmUgd2VsbCB3aXRoIGhpbSwgaWYgaXQgZXZlciB3YXMgd2VsbCB3aXRoIGFueW9uZS4gIEFuZCBmb3IgdGhpcyByZWFzb24gSSB3YXMgbm90IGF0IGFsbCBmaWxsZWQgd2l0aCBwaXR5LCBhcyBtaWdodCBzZWVtIG5hdHVyYWwgd2hlbiBJIHdhcyBwcmVzZW50IGF0IGEgc2NlbmUgb2YgbW91cm5pbmc7ICBub3Igb24gdGhlIG90aGVyIGhhbmQgZGlkIEkgZmVlbCBwbGVhc3VyZSBiZWNhdXNlIHdlIHdlcmUgb2NjdXBpZWQgd2l0aCBwaGlsb3NvcGh5LCBhcyB3YXMgb3VyIGN1c3RvbeKAlGFuZCBvdXIgdGFsayB3YXMgb2YgcGhpbG9zb3BoeTvigJRidXQgYSB2ZXJ5IHN0cmFuZ2UgZmVlbGluZyBjYW1lIG92ZXIgbWUsIGFuIHVuYWNjdXN0b21lZCBtaXh0dXJlIG9mIHBsZWFzdXJlIGFuZCBvZiBwYWluIHRvZ2V0aGVyLCB3aGVuIEkgdGhvdWdodCB0aGF0IFNvY3JhdGVzIHdhcyBwcmVzZW50bHkgdG8gZGllLiAgQW5kIGFsbCBvZiB1cyB3aG8gd2VyZSB0aGVyZSB3ZXJlIGluIG11Y2ggdGhlIHNhbWUgY29uZGl0aW9uLCBzb21ldGltZXMgbGF1Z2hpbmcgYW5kIHNvbWV0aW1lcyB3ZWVwaW5nOyAgZXNwZWNpYWxseSBvbmUgb2YgdXMsIEFwb2xsb2RvcnVzOyAgeW91IGtub3cgaGltCjxtaWxlc3RvbmUgbj0iNTliIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBoaXMgY2hhcmFjdGVyLjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['59.59a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTlhIiB1bml0PSJzZWN0aW9uIiAvPml0IHdvdWxkIGJlIHdlbGwgd2l0aCBoaW0sIGlmIGl0IGV2ZXIgd2FzIHdlbGwgd2l0aCBhbnlvbmUuICBBbmQgZm9yIHRoaXMgcmVhc29uIEkgd2FzIG5vdCBhdCBhbGwgZmlsbGVkIHdpdGggcGl0eSwgYXMgbWlnaHQgc2VlbSBuYXR1cmFsIHdoZW4gSSB3YXMgcHJlc2VudCBhdCBhIHNjZW5lIG9mIG1vdXJuaW5nOyAgbm9yIG9uIHRoZSBvdGhlciBoYW5kIGRpZCBJIGZlZWwgcGxlYXN1cmUgYmVjYXVzZSB3ZSB3ZXJlIG9jY3VwaWVkIHdpdGggcGhpbG9zb3BoeSwgYXMgd2FzIG91ciBjdXN0b23igJRhbmQgb3VyIHRhbGsgd2FzIG9mIHBoaWxvc29waHk74oCUYnV0IGEgdmVyeSBzdHJhbmdlIGZlZWxpbmcgY2FtZSBvdmVyIG1lLCBhbiB1bmFjY3VzdG9tZWQgbWl4dHVyZSBvZiBwbGVhc3VyZSBhbmQgb2YgcGFpbiB0b2dldGhlciwgd2hlbiBJIHRob3VnaHQgdGhhdCBTb2NyYXRlcyB3YXMgcHJlc2VudGx5IHRvIGRpZS4gIEFuZCBhbGwgb2YgdXMgd2hvIHdlcmUgdGhlcmUgd2VyZSBpbiBtdWNoIHRoZSBzYW1lIGNvbmRpdGlvbiwgc29tZXRpbWVzIGxhdWdoaW5nIGFuZCBzb21ldGltZXMgd2VlcGluZzsgIGVzcGVjaWFsbHkgb25lIG9mIHVzLCBBcG9sbG9kb3J1czsgIHlvdSBrbm93IGhpbQo8L3RyYW5zbGF0aW9uPg=="
translation['59.59b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OWIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGhpcyBjaGFyYWN0ZXIuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FY2hlY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VG8gYmUgc3VyZSBJIGRvLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWNoZWNyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRvIGJlIHN1cmUgSSBkby48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5QaGFlZG88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5IZSB3YXMgcXVpdGUgdW5yZXN0cmFpbmVkLCBhbmQgSSB3YXMgbXVjaCBhZ2l0YXRlZCBteXNlbGYsIGFzIHdlcmUgdGhlIG90aGVycy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlBoYWVkbzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkhlIHdhcyBxdWl0ZSB1bnJlc3RyYWluZWQsIGFuZCBJIHdhcyBtdWNoIGFnaXRhdGVkIG15c2VsZiwgYXMgd2VyZSB0aGUgb3RoZXJzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkVjaGVjcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaG8gd2VyZSB0aGVzZSwgUGhhZWRvPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWNoZWNyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldobyB3ZXJlIHRoZXNlLCBQaGFlZG8/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGhhZWRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2YgbmF0aXZlIEF0aGVuaWFucyB0aGVyZSB3YXMgdGhpcyBBcG9sbG9kb3J1cywgYW5kIENyaXRvYnVsdXMgYW5kIGhpcyBmYXRoZXIsIGFuZCBIZXJtb2dlbmVzIGFuZCBFcGlnYW5lcyBhbmQgQWVzY2hpbmVzIGFuZCBBbnRpc3RoZW5lczsgIGFuZCBDdGVzaXBwdXMgdGhlIFBhZWFuaWFuIHdhcyB0aGVyZSB0b28sIGFuZCBNZW5leGVudXMgYW5kIHNvbWUgb3RoZXIgQXRoZW5pYW5zLiAgQnV0IFBsYXRvLCBJIHRoaW5rLCB3YXMgaWxsLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTljIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGhhZWRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2YgbmF0aXZlIEF0aGVuaWFucyB0aGVyZSB3YXMgdGhpcyBBcG9sbG9kb3J1cywgYW5kIENyaXRvYnVsdXMgYW5kIGhpcyBmYXRoZXIsIGFuZCBIZXJtb2dlbmVzIGFuZCBFcGlnYW5lcyBhbmQgQWVzY2hpbmVzIGFuZCBBbnRpc3RoZW5lczsgIGFuZCBDdGVzaXBwdXMgdGhlIFBhZWFuaWFuIHdhcyB0aGVyZSB0b28sIGFuZCBNZW5leGVudXMgYW5kIHNvbWUgb3RoZXIgQXRoZW5pYW5zLiAgQnV0IFBsYXRvLCBJIHRoaW5rLCB3YXMgaWxsLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNTljIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['59.59c'] = ""
translation['59.59d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OWQiIHVuaXQ9InNlY3Rpb24iIC8+SSBhbmQgdGhlIG90aGVycyBoYWQgYWx3YXlzIGJlZW4gaW4gdGhlIGhhYml0IG9mIHZpc2l0aW5nIFNvY3JhdGVzLiAgV2UgdXNlZCB0byBtZWV0IGF0IGRheWJyZWFrIGluIHRoZSBjb3VydCB3aGVyZSB0aGUgdHJpYWwgdG9vayBwbGFjZSwgZm9yIGl0IHdhcyBuZWFyIHRoZSBwcmlzb247ICBhbmQgZXZlcnkgZGF5IHdlIHVzZWQgdG8gd2FpdCBhYm91dCwgdGFsa2luZyB3aXRoIGVhY2ggb3RoZXIsIHVudGlsIHRoZSBwcmlzb24gd2FzIG9wZW5lZCwgZm9yIGl0IHdhcyBub3Qgb3BlbmVkIGVhcmx5OyAgYW5kIHdoZW4gaXQgd2FzIG9wZW5lZCwgd2Ugd2VudCBpbiB0byBTb2NyYXRlcyBhbmQgcGFzc2VkIG1vc3Qgb2YgdGhlIGRheSB3aXRoIGhpbS4gIE9uIHRoYXQgZGF5IHdlIGNhbWUgdG9nZXRoZXIgZWFybGllcjsgIGZvciB0aGUgZGF5IGJlZm9yZSwKPC90cmFuc2xhdGlvbj4="
translation['59.59e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1OWUiIHVuaXQ9InNlY3Rpb24iIC8+d2hlbiB3ZSBsZWZ0IHRoZSBwcmlzb24gaW4gdGhlIGV2ZW5pbmcgd2UgaGVhcmQgdGhhdCB0aGUgc2hpcCBoYWQgYXJyaXZlZCBmcm9tIDxwbGFjZU5hbWUgYXV0aG5hbWU9InBlcnNldXMsRGVsb3MiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLERlbG9zIj5EZWxvczwvcGxhY2VOYW1lPi4gIFNvIHdlIGFncmVlZCB0byBjb21lIHRvIHRoZSB1c3VhbCBwbGFjZSBhcyBlYXJseSBpbiB0aGUgbW9ybmluZyBhcyBwb3NzaWJsZS4gIEFuZCB3ZSBjYW1lLCBhbmQgdGhlIGphaWxlciB3aG8gdXN1YWxseSBhbnN3ZXJlZCB0aGUgZG9vciBjYW1lIG91dCBhbmQgdG9sZCB1cyB0byB3YWl0IGFuZCBub3QgZ28gaW4gdW50aWwgaGUgdG9sZCB1cy4gIOKAnEZvcizigJ0gaGUgc2FpZCwg4oCcdGhlIGVsZXZlbiBhcmUgcmVsZWFzaW5nIFNvY3JhdGVzIGZyb20gaGlzIGZldHRlcnMgYW5kIGdpdmluZyBkaXJlY3Rpb25zIGhvdyBoZSBpcyB0byBkaWUgdG9kYXku4oCdICBTbyBhZnRlciBhIGxpdHRsZSBkZWxheSBoZSBjYW1lIGFuZAo8L3RyYW5zbGF0aW9uPg=="
translation['60.60a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNjBhIiB1bml0PSJzZWN0aW9uIiAvPnRvbGQgdXMgdG8gZ28gaW4uICBXZSB3ZW50IGluIHRoZW4gYW5kIGZvdW5kIFNvY3JhdGVzIGp1c3QgcmVsZWFzZWQgZnJvbSBoaXMgZmV0dGVycyBhbmQgWGFudGhpcHBl4oCUeW91IGtub3cgaGVy4oCUd2l0aCBoaXMgbGl0dGxlIHNvbiBpbiBoZXIgYXJtcywgc2l0dGluZyBiZXNpZGUgaGltLiAgTm93IHdoZW4gWGFudGhpcHBlIHNhdyB1cywgc2hlIGNyaWVkIG91dCBhbmQgc2FpZCB0aGUga2luZCBvZiB0aGluZyB0aGF0IHdvbWVuIGFsd2F5cyBkbyBzYXk6ICDigJxPaCBTb2NyYXRlcywgdGhpcyBpcyB0aGUgbGFzdCB0aW1lIG5vdyB0aGF0IHlvdXIgZnJpZW5kcyB3aWxsIHNwZWFrIHRvIHlvdSBvciB5b3UgdG8gdGhlbS7igJ0gIEFuZCBTb2NyYXRlcyBnbGFuY2VkIGF0IENyaXRvIGFuZCBzYWlkLCDigJxDcml0bywgbGV0IHNvbWVib2R5IHRha2UgaGVyIGhvbWUu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBzb21lIG9mIENyaXRvJ3MgcGVvcGxlIHRvb2sgaGVyIGF3YXkgd2FpbGluZwo8L3RyYW5zbGF0aW9uPg=="
translation['60.60b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MGIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGJlYXRpbmcgaGVyIGJyZWFzdC4gQnV0IFNvY3JhdGVzIHNhdCB1cCBvbiBoaXMgY291Y2ggYW5kIGJlbnQgaGlzIGxlZyBhbmQgcnViYmVkIGl0IHdpdGggaGlzIGhhbmQsIGFuZCB3aGlsZSBoZSB3YXMgcnViYmluZyBpdCwgaGUgc2FpZCwg4oCcV2hhdCBhIHN0cmFuZ2UgdGhpbmcsIG15IGZyaWVuZHMsIHRoYXQgc2VlbXMgdG8gYmUgd2hpY2ggbWVuIGNhbGwgcGxlYXN1cmUhICBIb3cgd29uZGVyZnVsbHkgaXQgaXMgcmVsYXRlZCB0byB0aGF0IHdoaWNoIHNlZW1zIHRvIGJlIGl0cyBvcHBvc2l0ZSwgcGFpbiwgaW4gdGhhdCB0aGV5IHdpbGwgbm90IGJvdGggY29tZSB0byBhIG1hbiBhdCB0aGUgc2FtZSB0aW1lLCBhbmQgeWV0IGlmIGhlIHB1cnN1ZXMgdGhlIG9uZSBhbmQgY2FwdHVyZXMgaXQgaGUgaXMgZ2VuZXJhbGx5IG9ibGlnZWQgdG8gdGFrZSB0aGUgb3RoZXIgYWxzbywgYXMgaWYgdGhlIHR3byB3ZXJlIGpvaW5lZCB0b2dldGhlciBpbiBvbmUgaGVhZC4gIEFuZCBJIHRoaW5rLOKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['60.60c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MGMiIHVuaXQ9InNlY3Rpb24iIC8+aGUgc2FpZCwg4oCcaWYgQWVzb3AgaGFkIHRob3VnaHQgb2YgdGhlbSwgaGUgd291bGQgaGF2ZSBtYWRlIGEgZmFibGUgdGVsbGluZyBob3cgdGhleSB3ZXJlIGF0IHdhciBhbmQgZ29kIHdpc2hlZCB0byByZWNvbmNpbGUgdGhlbSwgYW5kIHdoZW4gaGUgY291bGQgbm90IGRvIHRoYXQsIGhlIGZhc3RlbmVkIHRoZWlyIGhlYWRzIHRvZ2V0aGVyLCBhbmQgZm9yIHRoYXQgcmVhc29uLCB3aGVuIG9uZSBvZiB0aGVtIGNvbWVzIHRvIGFueW9uZSwgdGhlIG90aGVyIGZvbGxvd3MgYWZ0ZXIuICBKdXN0IHNvIGl0IHNlZW1zIHRoYXQgaW4gbXkgY2FzZSwgYWZ0ZXIgcGFpbiB3YXMgaW4gbXkgbGVnIG9uIGFjY291bnQgb2YgdGhlIGZldHRlciwgcGxlYXN1cmUgYXBwZWFycyB0byBoYXZlIGNvbWUgZm9sbG93aW5nIGFmdGVyLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZXJlIENlYmVzIGludGVycnVwdGVkIGFuZCBzYWlkLCDigJxCeSBaZXVzLCBTb2NyYXRlcywgSSBhbSBnbGFkIHlvdSByZW1pbmRlZCBtZS4KPC90cmFuc2xhdGlvbj4="
translation['60.60d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MGQiIHVuaXQ9InNlY3Rpb24iIC8+U2V2ZXJhbCBvdGhlcnMgaGF2ZSBhc2tlZCBhYm91dCB0aGUgcG9lbXMgeW91IGhhdmUgY29tcG9zZWQsIHRoZSBtZXRyaWNhbCB2ZXJzaW9ucyBvZiBBZXNvcCdzIGZhYmxlcyBhbmQgdGhlIGh5bW4gdG8gQXBvbGxvLCBhbmQgRXZlbnVzIGFza2VkIG1lIHRoZSBkYXkgYmVmb3JlIHllc3RlcmRheSB3aHkgeW91IG5ldmVyIHdyb3RlIGFueSBwb2V0cnkgYmVmb3JlLCBjb21wb3NlZCB0aGVzZSB2ZXJzZXMgYWZ0ZXIgeW91IGNhbWUgdG8gcHJpc29uLiAgTm93LCBpZiB5b3UgY2FyZSB0aGF0IEkgc2hvdWxkIGJlIGFibGUgdG8gYW5zd2VyIEV2ZW51cyB3aGVuIGhlIGFza3MgbWUgYWdhaW7igJRhbmQgSSBrbm93IGhlIHdpbGwgYXNrIG1l4oCUdGVsbCBtZSB3aGF0IHRvIHNheS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiB0ZWxsIGhpbSwgQ2ViZXMs4oCdIHNhaWQgaGUsIOKAnHRoZSB0cnV0aCwgdGhhdCBJIGNvbXBvc2VkIHRoZXNlIHZlcnNlcyBub3QgYmVjYXVzZSBJIHdpc2hlZCB0byByaXZhbCBoaW0gb3IgaGlzIHBvZW1zLAo8L3RyYW5zbGF0aW9uPg=="
translation['60.60e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MGUiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIEkga25ldyB0aGF0IHdvdWxkIG5vdCBiZSBlYXN5LCBidXQgYmVjYXVzZSBJIHdpc2hlZCB0byB0ZXN0IHRoZSBtZWFuaW5nIG9mIGNlcnRhaW4gZHJlYW1zLCBhbmQgdG8gbWFrZSBzdXJlIHRoYXQgSSB3YXMgbmVnbGVjdGluZyBubyBkdXR5IGluIGNhc2UgdGhlaXIgcmVwZWF0ZWQgY29tbWFuZHMgbWVhbnQgdGhhdCBJIG11c3QgY3VsdGl2YXRlIHRoZSBNdXNlcyBpbiB0aGlzIHdheS4gIFRoZXkgd2VyZSBzb21ldGhpbmcgbGlrZSB0aGlzLiAgVGhlIHNhbWUgZHJlYW0gY2FtZSB0byBtZSBvZnRlbiBpbiBteSBwYXN0IGxpZmUsIHNvbWV0aW1lcyBpbiBvbmUgZm9ybSBhbmQgc29tZXRpbWVzIGluIGFub3RoZXIsIGJ1dCBhbHdheXMgc2F5aW5nIHRoZSBzYW1lIHRoaW5nOiAgJ1NvY3JhdGVzLCcgaXQgc2FpZCwgJ21ha2UgbXVzaWMgYW5kIHdvcmsgYXQgaXQuJyAgQW5kIEkgZm9ybWVybHkgdGhvdWdodCBpdCB3YXMgdXJnaW5nIGFuZCBlbmNvdXJhZ2luZyBtZQo8L3RyYW5zbGF0aW9uPg=="
translation['61.61a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNjFhIiB1bml0PSJzZWN0aW9uIiAvPnRvIGRvIHdoYXQgSSB3YXMgZG9pbmcgYWxyZWFkeSBhbmQgdGhhdCBqdXN0IGFzIHBlb3BsZSBlbmNvdXJhZ2UgcnVubmVycyBieSBjaGVlcmluZywgc28gdGhlIGRyZWFtIHdhcyBlbmNvdXJhZ2luZyBtZSB0byBkbyB3aGF0IEkgd2FzIGRvaW5nLCB0aGF0IGlzLCB0byBtYWtlIG11c2ljLCBiZWNhdXNlIHBoaWxvc29waHkgd2FzIHRoZSBncmVhdGVzdCBraW5kIG9mIG11c2ljIGFuZCBJIHdhcyB3b3JraW5nIGF0IHRoYXQuICBCdXQgbm93LCBhZnRlciB0aGUgdHJpYWwgYW5kIHdoaWxlIHRoZSBmZXN0aXZhbCBvZiB0aGUgZ29kIGRlbGF5ZWQgbXkgZXhlY3V0aW9uLCBJIHRob3VnaHQsIGluIGNhc2UgdGhlIHJlcGVhdGVkIGRyZWFtIHJlYWxseSBtZWFudCB0byB0ZWxsIG1lIHRvIG1ha2UgdGhpcyB3aGljaCBpcyBvcmRpbmFyaWx5IGNhbGxlZCBtdXNpYywgSSBvdWdodCB0byBkbyBzbyBhbmQgbm90IHRvIGRpc29iZXkuICBGb3IgSSB0aG91Z2h0IGl0IHdhcyBzYWZlciBub3QgdG8gZ28gaGVuY2UKPC90cmFuc2xhdGlvbj4="
translation['61.61b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MWIiIHVuaXQ9InNlY3Rpb24iIC8+YmVmb3JlIG1ha2luZyBzdXJlIHRoYXQgSSBoYWQgZG9uZSB3aGF0IEkgb3VnaHQsIGJ5IG9iZXlpbmcgdGhlIGRyZWFtIGFuZCBjb21wb3NpbmcgdmVyc2VzLiAgU28gZmlyc3QgSSBjb21wb3NlZCBhIGh5bW4gdG8gdGhlIGdvZCB3aG9zZSBmZXN0aXZhbCBpdCB3YXM7ICBhbmQgYWZ0ZXIgdGhlIGdvZCwgY29uc2lkZXJpbmcgdGhhdCBhIHBvZXQsIGlmIGhlIGlzIHJlYWxseSB0byBiZSBhIHBvZXQsIG11c3QgY29tcG9zZSBteXRocyBhbmQgbm90IHNwZWVjaGVzLCBzaW5jZSBJIHdhcyBub3QgYSBtYWtlciBvZiBteXRocywgSSB0b29rIHRoZSBteXRocyBvZiBBZXNvcCwgd2hpY2ggSSBoYWQgYXQgaGFuZCBhbmQga25ldywgYW5kIHR1cm5lZCBpbnRvIHZlcnNlIHRoZSBmaXJzdCBJIGNhbWUgdXBvbi4gIFNvIHRlbGwgRXZlbnVzIHRoYXQsIENlYmVzLCBhbmQgYmlkIGhpbSBmYXJld2VsbCwgYW5kIHRlbGwgaGltLCBpZiBoZSBpcyB3aXNlLCB0byBjb21lIGFmdGVyIG1lIGFzIHF1aWNrbHkgYXMgaGUgY2FuLgo8L3RyYW5zbGF0aW9uPg=="
translation['61.61c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MWMiIHVuaXQ9InNlY3Rpb24iIC8+SSwgaXQgc2VlbXMsIGFtIGdvaW5nIHRvZGF5OyAgZm9yIHRoYXQgaXMgdGhlIG9yZGVyIG9mIHRoZSBBdGhlbmlhbnMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBTaW1taWFzIHNhaWQsIOKAnFdoYXQgYSBtZXNzYWdlIHRoYXQgaXMsIFNvY3JhdGVzLCBmb3IgRXZlbnVzISAgSSBoYXZlIG1ldCBoaW0gb2Z0ZW4sIGFuZCBmcm9tIHdoYXQgSSBoYXZlIHNlZW4gb2YgaGltLCBJIHNob3VsZCBzYXkgdGhhdCBoZSB3aWxsIG5vdCB0YWtlIHlvdXIgYWR2aWNlIGluIHRoZSBsZWFzdCBpZiBoZSBjYW4gaGVscCBpdC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2h5IHNvP+KAnSBzYWlkIGhlLiAg4oCcSXMgbm90IEV2ZW51cyBhIHBoaWxvc29waGVyP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIHRoaW5rIHNvLOKAnSBzYWlkIFNpbW1pYXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4gRXZlbnVzIHdpbGwgdGFrZSBteSBhZHZpY2UsIGFuZCBzbyB3aWxsIGV2ZXJ5IG1hbiB3aG8gaGFzIGFueSB3b3J0aHkgaW50ZXJlc3QgaW4gcGhpbG9zb3BoeS4gIFBlcmhhcHMsIGhvd2V2ZXIsIGhlIHdpbGwgbm90IHRha2UgaGlzIG93biBsaWZlLCBmb3IgdGhleSBzYXkgdGhhdCBpcyBub3QgcGVybWl0dGVkLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['61.61d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MWQiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIGFzIGhlIHNwb2tlIGhlIHB1dCBoaXMgZmVldCBkb3duIG9uIHRoZSBncm91bmQgYW5kIHJlbWFpbmVkIHNpdHRpbmcgaW4gdGhpcyB3YXkgdGhyb3VnaCB0aGUgcmVzdCBvZiB0aGUgY29udmVyc2F0aW9uLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5UaGVuIENlYmVzIGFza2VkIGhpbTogIOKAnFdoYXQgZG8geW91IG1lYW4gYnkgdGhpcywgU29jcmF0ZXMsIHRoYXQgaXQgaXMgbm90IHBlcm1pdHRlZCB0byB0YWtlIG9uZSdzIGxpZmUsIGJ1dCB0aGF0IHRoZSBwaGlsb3NvcGhlciB3b3VsZCBkZXNpcmUgdG8gZm9sbG93IGFmdGVyIHRoZSBkeWluZz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSG93IGlzIHRoaXMsIENlYmVzPyAgSGF2ZSB5b3UgYW5kIFNpbW1pYXMsIHdobyBhcmUgcHVwaWxzIG9mIFBoaWxvbGF1cywgbm90IGhlYXJkIGFib3V0IHN1Y2ggdGhpbmdzP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3RoaW5nIGRlZmluaXRlLCBTb2NyYXRlcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSBteXNlbGYgc3BlYWsgb2YgdGhlbSBvbmx5IGZyb20gaGVhcnNheTsgIGJ1dCBJIGhhdmUgbm8gb2JqZWN0aW9uIHRvIHRlbGxpbmcgd2hhdCBJIGhhdmUgaGVhcmQuICBBbmQgaW5kZWVkIGl0IGlzIHBlcmhhcHMgZXNwZWNpYWxseSBmaXR0aW5nLAo8L3RyYW5zbGF0aW9uPg=="
translation['61.61e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MWUiIHVuaXQ9InNlY3Rpb24iIC8+YXMgSSBhbSBnb2luZyB0byB0aGUgb3RoZXIgd29ybGQsIHRvIHRlbGwgc3RvcmllcyBhYm91dCB0aGUgbGlmZSB0aGVyZSBhbmQgY29uc2lkZXIgd2hhdCB3ZSB0aGluayBhYm91dCBpdDsgIGZvciB3aGF0IGVsc2UgY291bGQgb25lIGRvIGluIHRoZSB0aW1lIGJldHdlZW4gbm93IGFuZCBzdW5zZXQ/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdoeSBpbiB0aGUgd29ybGQgZG8gdGhleSBzYXkgdGhhdCBpdCBpcyBub3QgcGVybWl0dGVkIHRvIGtpbGwgb25lc2VsZiwgU29jcmF0ZXM/IEkgaGVhcmQgUGhpbG9sYXVzLCB3aGVuIGhlIHdhcyBsaXZpbmcgaW4gb3VyIGNpdHksIHNheSB0aGUgc2FtZSB0aGluZyB5b3UganVzdCBzYWlkLCBhbmQgSSBoYXZlIGhlYXJkIGl0IGZyb20gb3RoZXJzLCB0b28sIHRoYXQgb25lIG11c3Qgbm90IGRvIHRoaXM7ICBidXQgSSBuZXZlciBoZWFyZCBhbnlvbmUgc2F5CjwvdHJhbnNsYXRpb24+"
translation['62.62a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNjJhIiB1bml0PSJzZWN0aW9uIiAvPmFueXRoaW5nIGRlZmluaXRlIGFib3V0IGl0LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZb3UgbXVzdCBoYXZlIGNvdXJhZ2Us4oCdIHNhaWQgaGUsIOKAnGFuZCBwZXJoYXBzIHlvdSBtaWdodCBoZWFyIHNvbWV0aGluZy4gIEJ1dCBwZXJoYXBzIGl0IHdpbGwgc2VlbSBzdHJhbmdlIHRvIHlvdSB0aGF0IHRoaXMgYWxvbmUgb2YgYWxsIGxhd3MgaXMgd2l0aG91dCBleGNlcHRpb24sIGFuZCBpdCBuZXZlciBoYXBwZW5zIHRvIG1hbmtpbmQsIGFzIGluIG90aGVyIG1hdHRlcnMsIHRoYXQgb25seSBhdCBzb21lIHRpbWVzIGFuZCBmb3Igc29tZSBwZXJzb25zIGl0IGlzIGJldHRlciB0byBkaWUgdGhhbiB0byBsaXZlOyAgYW5kIGl0IHdpbGwgcGVyaGFwcyBzZWVtIHN0cmFuZ2UgdG8geW91IHRoYXQgdGhlc2UgaHVtYW4gYmVpbmdzIGZvciB3aG9tIGl0IGlzIGJldHRlciB0byBkaWUgY2Fubm90IHdpdGhvdXQgaW1waWV0eSBkbyBnb29kIHRvIHRoZW1zZWx2ZXMsIGJ1dCBtdXN0IHdhaXQgZm9yIHNvbWUgb3RoZXIgYmVuZWZhY3Rvci7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIENlYmVzLCBzbWlsaW5nIGdlbnRseSwgc2FpZCwg4oCcR2F3ZCBrbm93cyBpdCBkb29zLOKAnSBzcGVha2luZyBpbiBoaXMgb3duIGRpYWxlY3QuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEl0IHdvdWxkIHNlZW0gdW5yZWFzb25hYmxlLCBpZiBwdXQgaW4gdGhpcyB3YXks4oCdIHNhaWQgU29jcmF0ZXMsCjwvdHJhbnNsYXRpb24+"
translation['62.62b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MmIiIHVuaXQ9InNlY3Rpb24iIC8+4oCcYnV0IHBlcmhhcHMgdGhlcmUgaXMgc29tZSByZWFzb24gaW4gaXQuICBOb3cgdGhlIGRvY3RyaW5lIHRoYXQgaXMgdGF1Z2h0IGluIHNlY3JldCBhYm91dCB0aGlzIG1hdHRlciwgdGhhdCB3ZSBtZW4gYXJlIGluIGEga2luZCBvZiBwcmlzb24gYW5kIG11c3Qgbm90IHNldCBvdXJzZWx2ZXMgZnJlZSBvciBydW4gYXdheSwgc2VlbXMgdG8gbWUgdG8gYmUgd2VpZ2h0eSBhbmQgbm90IGVhc3kgdG8gdW5kZXJzdGFuZC4gIEJ1dCB0aGlzIGF0IGxlYXN0LCBDZWJlcywgSSBkbyBiZWxpZXZlIGlzIHNvdW5kLCB0aGF0IHRoZSBnb2RzIGFyZSBvdXIgZ3VhcmRpYW5zIGFuZCB0aGF0IHdlIG1lbiBhcmUgb25lIG9mIHRoZSBjaGF0dGVscyBvZiB0aGUgZ29kcy4gIERvIHlvdSBub3QgYmVsaWV2ZSB0aGlzP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMs4oCdIHNhaWQgQ2ViZXMsCjwvdHJhbnNsYXRpb24+"
translation['62.62c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MmMiIHVuaXQ9InNlY3Rpb24iIC8+4oCcSSBkby7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCB0aGVuLOKAnSBzYWlkIGhlLCDigJxpZiBvbmUgb2YgeW91ciBjaGF0dGVscyBzaG91bGQga2lsbCBpdHNlbGYgd2hlbiB5b3UgaGFkIG5vdCBpbmRpY2F0ZWQgdGhhdCB5b3Ugd2lzaGVkIGl0IHRvIGRpZSwgd291bGQgeW91IGJlIGFuZ3J5IHdpdGggaXQgYW5kIHB1bmlzaCBpdCBpZiB5b3UgY291bGQ/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seSzigJ0gaGUgcmVwbGllZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiBwZXJoYXBzIGZyb20gdGhpcyBwb2ludCBvZiB2aWV3IGl0IGlzIG5vdCB1bnJlYXNvbmFibGUgdG8gc2F5IHRoYXQgYSBtYW4gbXVzdCBub3Qga2lsbCBoaW1zZWxmIHVudGlsIGdvZCBzZW5kcyBzb21lIG5lY2Vzc2l0eSB1cG9uIGhpbSwgc3VjaCBhcyBoYXMgbm93IGNvbWUgdXBvbiBtZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhhdCzigJ0gc2FpZCBDZWJlcywg4oCcc2VlbXMgc2Vuc2libGUuICBCdXQgd2hhdCB5b3Ugc2FpZCBqdXN0IG5vdywgU29jcmF0ZXMsIHRoYXQgcGhpbG9zb3BoZXJzIG91Z2h0IHRvIGJlIHJlYWR5IGFuZCB3aWxsaW5nIHRvIGRpZSwgdGhhdCBzZWVtcwo8L3RyYW5zbGF0aW9uPg=="
translation['62.62d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MmQiIHVuaXQ9InNlY3Rpb24iIC8+c3RyYW5nZSBpZiB3ZSB3ZXJlIHJpZ2h0IGp1c3Qgbm93IGluIHNheWluZyB0aGF0IGdvZCBpcyBvdXIgZ3VhcmRpYW4gYW5kIHdlIGFyZSBoaXMgcG9zc2Vzc2lvbnMuICBGb3IgaXQgaXMgbm90IHJlYXNvbmFibGUgdGhhdCB0aGUgd2lzZXN0IG1lbiBzaG91bGQgbm90IGJlIHRyb3VibGVkIHdoZW4gdGhleSBsZWF2ZSB0aGF0IHNlcnZpY2UgaW4gd2hpY2ggdGhlIGdvZHMsIHdobyBhcmUgdGhlIGJlc3Qgb3ZlcnNlZXJzIGluIHRoZSB3b3JsZCwgYXJlIHdhdGNoaW5nIG92ZXIgdGhlbS4gIEEgd2lzZSBtYW4gY2VydGFpbmx5IGRvZXMgbm90IHRoaW5rIHRoYXQgd2hlbiBoZSBpcyBmcmVlIGhlIGNhbiB0YWtlIGJldHRlciBjYXJlIG9mIGhpbXNlbGYgdGhhbiB0aGV5IGRvLiAgQSBmb29saXNoIG1hbiBtaWdodCBwZXJoYXBzIHRoaW5rIHNvLCB0aGF0IGhlIG91Z2h0IHRvIHJ1biBhd2F5IGZyb20gaGlzIG1hc3RlciwKPC90cmFuc2xhdGlvbj4="
translation['62.62e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MmUiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGhlIHdvdWxkIG5vdCBjb25zaWRlciB0aGF0IGhlIG11c3Qgbm90IHJ1biBhd2F5IGZyb20gYSBnb29kIG1hc3RlciwgYnV0IG91Z2h0IHRvIHN0YXkgd2l0aCBoaW0gYXMgbG9uZyBhcyBwb3NzaWJsZTsgIGFuZCBzbyBoZSBtaWdodCB0aG91Z2h0bGVzc2x5IHJ1biBhd2F5OyAgYnV0IGEgbWFuIG9mIHNlbnNlIHdvdWxkIHdpc2ggdG8gYmUgYWx3YXlzIHdpdGggb25lIHdobyBpcyBiZXR0ZXIgdGhhbiBoaW1zZWxmLiAgQW5kIHlldCwgU29jcmF0ZXMsIGlmIHdlIGxvb2sgYXQgaXQgaW4gdGhpcyB3YXksIHRoZSBjb250cmFyeSBvZiB3aGF0IHdlIGp1c3Qgc2FpZCBzZWVtcyBuYXR1cmFsOyAgZm9yIHRoZSB3aXNlIG91Z2h0IHRvIGJlIHRyb3VibGVkIGF0IGR5aW5nIGFuZCB0aGUgZm9vbGlzaCB0byByZWpvaWNlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIFNvY3JhdGVzIGhlYXJkIHRoaXMKPC90cmFuc2xhdGlvbj4="
translation['63.63a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2MyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNjNhIiB1bml0PSJzZWN0aW9uIiAvPkkgdGhvdWdodCBoZSB3YXMgcGxlYXNlZCBieSBDZWJlcycgZWFybmVzdG5lc3MsIGFuZCBnbGFuY2luZyBhdCB1cywgaGUgc2FpZCwg4oCcQ2ViZXMgaXMgYWx3YXlzIG9uIHRoZSB0cmFjayBvZiBhcmd1bWVudHMgYW5kIHdpbGwgbm90IGJlIGVhc2lseSBjb252aW5jZWQgYnkgd2hhdGV2ZXIgYW55b25lIHNheXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBTaW1taWFzIHNhaWQsIOKAnFdlbGwsIFNvY3JhdGVzLCB0aGlzIHRpbWUgSSB0aGluayBteXNlbGYgdGhhdCBDZWJlcyBpcyByaWdodC4gIEZvciB3aHkgc2hvdWxkIHJlYWxseSB3aXNlIG1lbiBydW4gYXdheSBmcm9tIG1hc3RlcnMgd2hvIGFyZSBiZXR0ZXIgdGhhbiB0aGV5IGFuZCBsaWdodGx5IHNlcGFyYXRlIHRoZW1zZWx2ZXMgZnJvbSB0aGVtPyAgQW5kIGl0IHN0cmlrZXMgbWUgdGhhdCBDZWJlcyBpcyBhaW1pbmcgaGlzIGFyZ3VtZW50IGF0IHlvdSwgYmVjYXVzZSB5b3UgYXJlIHNvIHJlYWR5IHRvIGxlYXZlIHVzIGFuZCB0aGUgZ29kcywgd2hvIGFyZSwgYXMKPC90cmFuc2xhdGlvbj4="
translation['63.63b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2M2IiIHVuaXQ9InNlY3Rpb24iIC8+eW91IHlvdXJzZWxmIGFncmVlLCBnb29kIHJ1bGVycy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWW91IGhhdmUgYSByaWdodCB0byBzYXkgdGhhdCzigJ0gaGUgcmVwbGllZDsgIOKAnGZvciBJIHRoaW5rIHlvdSBtZWFuIHRoYXQgSSBtdXN0IGRlZmVuZCBteXNlbGYgYWdhaW5zdCB0aGlzIGFjY3VzYXRpb24sIGFzIGlmIHdlIHdlcmUgaW4gYSBsYXcgY291cnQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFByZWNpc2VseSzigJ0gc2FpZCBTaW1taWFzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLCB0aGVuLOKAnSBzYWlkIGhlLCDigJxJIHdpbGwgdHJ5IHRvIG1ha2UgYSBtb3JlIGNvbnZpbmNpbmcgZGVmZW5jZSB0aGFuIEkgZGlkIGJlZm9yZSB0aGUganVkZ2VzLiAgRm9yIGlmIEkgZGlkIG5vdCBiZWxpZXZlLOKAnSBzYWlkIGhlLCDigJx0aGF0IEkgd2FzIGdvaW5nIHRvIG90aGVyIHdpc2UgYW5kIGdvb2QgZ29kcywgYW5kLCBtb3Jlb3ZlciwgdG8gbWVuIHdobyBoYXZlIGRpZWQsIGJldHRlciBtZW4gdGhhbiB0aG9zZSBoZXJlLCBJIHNob3VsZCBiZSB3cm9uZyBpbiBub3QgZ3JpZXZpbmcgYXQgZGVhdGguICBCdXQgYXMgaXQgaXMsIHlvdSBtYXkgcmVzdCBhc3N1cmVkCjwvdHJhbnNsYXRpb24+"
translation['63.63c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2M2MiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBJIGV4cGVjdCB0byBnbyB0byBnb29kIG1lbiwgdGhvdWdoIEkgc2hvdWxkIG5vdCBjYXJlIHRvIGFzc2VydCB0aGlzIHBvc2l0aXZlbHk7ICBidXQgSSB3b3VsZCBhc3NlcnQgYXMgcG9zaXRpdmVseSBhcyBhbnl0aGluZyBhYm91dCBzdWNoIG1hdHRlcnMgdGhhdCBJIGFtIGdvaW5nIHRvIGdvZHMgd2hvIGFyZSBnb29kIG1hc3RlcnMuICBBbmQgdGhlcmVmb3JlLCBzbyBmYXIgYXMgdGhhdCBpcyBjb25jZXJuZWQsIEkgbm90IG9ubHkgZG8gbm90IGdyaWV2ZSwgYnV0IEkgaGF2ZSBncmVhdCBob3BlcyB0aGF0IHRoZXJlIGlzIHNvbWV0aGluZyBpbiBzdG9yZSBmb3IgdGhlIGRlYWQsIGFuZCwgYXMgaGFzIGJlZW4gc2FpZCBvZiBvbGQsIHNvbWV0aGluZyBiZXR0ZXIgZm9yIHRoZSBnb29kIHRoYW4gZm9yIHRoZSB3aWNrZWQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdlbGws4oCdIHNhaWQgU2ltbWlhcywg4oCcZG8geW91IGludGVuZCB0byBnbyBhd2F5LCBTb2NyYXRlcywKPC90cmFuc2xhdGlvbj4="
translation['63.63d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2M2QiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGtlZXAgeW91ciBvcGluaW9uIHRvIHlvdXJzZWxmLCBvciB3b3VsZCB5b3UgbGV0IHVzIHNoYXJlIGl0PyAgSXQgc2VlbXMgdG8gbWUgdGhhdCB0aGlzIGlzIGEgZ29vZCB3aGljaCBiZWxvbmdzIGluIGNvbW1vbiB0byB1cyBhbHNvLCBhbmQgYXQgdGhlIHNhbWUgdGltZSwgaWYgeW91IGNvbnZpbmNlIHVzIGJ5IHdoYXQgeW91IHNheSwgdGhhdCB3aWxsIHNlcnZlIGFzIHlvdXIgZGVmZW5jZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSB3aWxsIHRyeSzigJ0gaGUgcmVwbGllZC4gIOKAnEJ1dCBmaXJzdCBsZXQgdXMgYXNrIENyaXRvIHRoZXJlIHdoYXQgaGUgd2FudHMuICBIZSBoYXMgYXBwYXJlbnRseSBiZWVuIHRyeWluZyB0byBzYXkgc29tZXRoaW5nIGZvciBhIGxvbmcgdGltZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcT25seSwgU29jcmF0ZXMs4oCdIHNhaWQgQ3JpdG8sIOKAnHRoYXQgdGhlIG1hbiB3aG8gaXMgdG8gYWRtaW5pc3RlciB0aGUgcG9pc29uIHRvIHlvdSBoYXMgYmVlbiB0ZWxsaW5nIG1lIGZvciBzb21lIHRpbWUgdG8gd2FybiB5b3UgdG8gdGFsayBhcyBsaXR0bGUgYXMgcG9zc2libGUuICBIZSBzYXlzIHBlb3BsZSBnZXQgd2FybSB3aGVuIHRoZXkgdGFsayBhbmQgaGVhdCBoYXMgYSBiYWQgZWZmZWN0IG9uIHRoZSBhY3Rpb24gb2YgdGhlIHBvaXNvbjsKPC90cmFuc2xhdGlvbj4="
translation['63.63e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2M2UiIHVuaXQ9InNlY3Rpb24iIC8+c28gc29tZXRpbWVzIGhlIGhhcyB0byBtYWtlIHRob3NlIHdobyB0YWxrIHRvbyBtdWNoIGRyaW5rIHR3aWNlIG9yIGV2ZW4gdGhyZWUgdGltZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBTb2NyYXRlcyBzYWlkOiAg4oCcTmV2ZXIgbWluZCBoaW0uICBKdXN0IGxldCBoaW0gZG8gaGlzIHBhcnQgYW5kIHByZXBhcmUgdG8gZ2l2ZSBpdCB0d2ljZSBvciBldmVuLCBpZiBuZWNlc3NhcnksIHRocmVlIHRpbWVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIHdhcyBwcmV0dHkgc3VyZSB0aGF0IHdhcyB3aGF0IHlvdSB3b3VsZCBzYXks4oCdIHNhaWQgQ3JpdG8sIOKAnGJ1dCBoZSBoYXMgYmVlbiBib3RoZXJpbmcgbWUgZm9yIGEgbG9uZyB0aW1lLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOZXZlciBtaW5kIGhpbSzigJ0gc2FpZCBTb2NyYXRlcy4gIOKAnEkgd2lzaCBub3cgdG8gZXhwbGFpbiB0byB5b3UsIG15IGp1ZGdlcywgdGhlIHJlYXNvbiB3aHkgSSB0aGluayBhIG1hbiB3aG8gaGFzIHJlYWxseSBzcGVudCBoaXMgbGlmZSBpbiBwaGlsb3NvcGh5IGlzIG5hdHVyYWxseSBvZiBnb29kIGNvdXJhZ2UKPC90cmFuc2xhdGlvbj4="
translation['64.64a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNjRhIiB1bml0PSJzZWN0aW9uIiAvPndoZW4gaGUgaXMgdG8gZGllLCBhbmQgaGFzIHN0cm9uZyBob3BlcyB0aGF0IHdoZW4gaGUgaXMgZGVhZCBoZSB3aWxsIGF0dGFpbiB0aGUgZ3JlYXRlc3QgYmxlc3NpbmdzIGluIHRoYXQgb3RoZXIgbGFuZC4gIFNvIEkgd2lsbCB0cnkgdG8gdGVsbCB5b3UsIFNpbW1pYXMsIGFuZCBDZWJlcywgaG93IHRoaXMgd291bGQgYmUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE90aGVyIHBlb3BsZSBhcmUgbGlrZWx5IG5vdCB0byBiZSBhd2FyZSB0aGF0IHRob3NlIHdobyBwdXJzdWUgcGhpbG9zb3BoeSBhcmlnaHQgc3R1ZHkgbm90aGluZyBidXQgZHlpbmcgYW5kIGJlaW5nIGRlYWQuICBOb3cgaWYgdGhpcyBpcyB0cnVlLCBpdCB3b3VsZCBiZSBhYnN1cmQgdG8gYmUgZWFnZXIgZm9yIG5vdGhpbmcgYnV0IHRoaXMgYWxsIHRoZWlyIGxpdmVzLCBhbmQgdGhlbiB0byBiZSB0cm91YmxlZCB3aGVuIHRoYXQgY2FtZSBmb3Igd2hpY2ggdGhleSBoYWQgYWxsIGFsb25nIGJlZW4gZWFnZXJseSBwcmFjdGljaW5nLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgU2ltbWlhcyBsYXVnaGVkIGFuZCBzYWlkLCDigJxCeSBaZXVzLAo8L3RyYW5zbGF0aW9uPg=="
translation['64.64b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NGIiIHVuaXQ9InNlY3Rpb24iIC8+U29jcmF0ZXMsIEkgZG9uJ3QgZmVlbCBtdWNoIGxpa2UgbGF1Z2hpbmcganVzdCBub3csIGJ1dCB5b3UgbWFkZSBtZSBsYXVnaC4gIEZvciBJIHRoaW5rIHRoZSBtdWx0aXR1ZGUsIGlmIHRoZXkgaGVhcmQgd2hhdCB5b3UganVzdCBzYWlkIGFib3V0IHRoZSBwaGlsb3NvcGhlcnMsIHdvdWxkIHNheSB5b3Ugd2VyZSBxdWl0ZSByaWdodCwgYW5kIG91ciBwZW9wbGUgYXQgaG9tZSB3b3VsZCBhZ3JlZSBlbnRpcmVseSB3aXRoIHlvdSB0aGF0IHBoaWxvc29waGVycyBkZXNpcmUgZGVhdGgsIGFuZCB0aGV5IHdvdWxkIGFkZCB0aGF0IHRoZXkga25vdyB2ZXJ5IHdlbGwgdGhhdCB0aGUgcGhpbG9zb3BoZXJzIGRlc2VydmUgaXQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCB0aGV5IHdvdWxkIGJlIHNwZWFraW5nIHRoZSB0cnV0aCwgU2ltbWlhcywgZXhjZXB0IGluIHRoZSBtYXR0ZXIgb2Yga25vd2luZyB2ZXJ5IHdlbGwuICBGb3IgdGhleSBkbyBub3Qga25vdyBpbiB3aGF0IHdheSB0aGUgcmVhbCBwaGlsb3NvcGhlcnMgZGVzaXJlIGRlYXRoLCBub3IgaW4gd2hhdCB3YXkgdGhleSBkZXNlcnZlIGRlYXRoLCBub3Igd2hhdCBraW5kIG9mIGEgZGVhdGggaXQgaXMuCjwvdHJhbnNsYXRpb24+"
translation['64.64c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NGMiIHVuaXQ9InNlY3Rpb24iIC8+TGV0IHVzIHRoZW4s4oCdIHNhaWQgaGUsIOKAnHNwZWFrIHdpdGggb25lIGFub3RoZXIsIHBheWluZyBubyBmdXJ0aGVyIGF0dGVudGlvbiB0byB0aGVtLiAgRG8gd2UgdGhpbmsgdGhlcmUgaXMgc3VjaCBhIHRoaW5nIGFzIGRlYXRoP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHks4oCdIHJlcGxpZWQgU2ltbWlhcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2UgYmVsaWV2ZSwgZG8gd2Ugbm90LCB0aGF0IGRlYXRoIGlzIHRoZSBzZXBhcmF0aW9uIG9mIHRoZSBzb3VsIGZyb20gdGhlIGJvZHksIGFuZCB0aGF0IHRoZSBzdGF0ZSBvZiBiZWluZyBkZWFkIGlzIHRoZSBzdGF0ZSBpbiB3aGljaCB0aGUgYm9keSBpcyBzZXBhcmF0ZWQgZnJvbSB0aGUgc291bCBhbmQgZXhpc3RzIGFsb25lIGJ5IGl0c2VsZiBhbmQgdGhlIHNvdWwgaXMgc2VwYXJhdGVkIGZyb20gdGhlIGJvZHkgYW5kIGV4aXN0cyBhbG9uZSBieSBpdHNlbGY/ICBJcyBkZWF0aCBhbnl0aGluZyBvdGhlciB0aGFuIHRoaXM/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vLCBpdCBpcyB0aGlzLOKAnSBzYWlkIGhlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3csIG15IGZyaWVuZCwgc2VlIGlmIHlvdSBhZ3JlZSB3aXRoIG1lOwo8L3RyYW5zbGF0aW9uPg=="
translation['64.64d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NGQiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yLCBpZiB5b3UgZG8sIEkgdGhpbmsgd2Ugc2hhbGwgZ2V0IG1vcmUgbGlnaHQgb24gb3VyIHN1YmplY3QuICBEbyB5b3UgdGhpbmsgYSBwaGlsb3NvcGhlciB3b3VsZCBiZSBsaWtlbHkgdG8gY2FyZSBtdWNoIGFib3V0IHRoZSBzby1jYWxsZWQgcGxlYXN1cmVzLCBzdWNoIGFzIGVhdGluZyBhbmQgZHJpbmtpbmc/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEJ5IG5vIG1lYW5zLCBTb2NyYXRlcyzigJ0gc2FpZCBTaW1taWFzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxIb3cgYWJvdXQgdGhlIHBsZWFzdXJlcyBvZiBsb3ZlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHkgbm90LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLCBkbyB5b3UgdGhpbmsgc3VjaCBhIG1hbiB3b3VsZCB0aGluayBtdWNoIG9mIHRoZSBvdGhlciBjYXJlcyBvZiB0aGUgYm9keeKAlEkgbWVhbiBzdWNoIGFzIHRoZSBwb3NzZXNzaW9uIG9mIGZpbmUgY2xvdGhlcyBhbmQgc2hvZXMgYW5kIHRoZSBvdGhlciBwZXJzb25hbCBhZG9ybm1lbnRzPyAgRG8geW91IHRoaW5rIGhlIHdvdWxkIGNhcmUgYWJvdXQgdGhlbQo8L3RyYW5zbGF0aW9uPg=="
translation['64.64e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NGUiIHVuaXQ9InNlY3Rpb24iIC8+b3IgZGVzcGlzZSB0aGVtLCBleGNlcHQgc28gZmFyIGFzIGl0IGlzIG5lY2Vzc2FyeSB0byBoYXZlIHRoZW0/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEkgdGhpbmsgdGhlIHRydWUgcGhpbG9zb3BoZXIgd291bGQgZGVzcGlzZSB0aGVtLOKAnSBoZSByZXBsaWVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbHRvZ2V0aGVyLCB0aGVuLCB5b3UgdGhpbmsgdGhhdCBzdWNoIGEgbWFuIHdvdWxkIG5vdCBkZXZvdGUgaGltc2VsZiB0byB0aGUgYm9keSwgYnV0IHdvdWxkLCBzbyBmYXIgYXMgaGUgd2FzIGFibGUsIHR1cm4gYXdheSBmcm9tIHRoZSBib2R5IGFuZCBjb25jZXJuIGhpbXNlbGYgd2l0aCB0aGUgc291bD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUbyBiZWdpbiB3aXRoLCB0aGVuLCBpdCBpcyBjbGVhciB0aGF0IGluIHN1Y2ggbWF0dGVycyB0aGUgcGhpbG9zb3BoZXIsIG1vcmUgdGhhbiBvdGhlciBtZW4sIHNlcGFyYXRlcwo8L3RyYW5zbGF0aW9uPg=="
translation['65.65a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNjVhIiB1bml0PSJzZWN0aW9uIiAvPnRoZSBzb3VsIGZyb20gY29tbXVuaW9uIHdpdGggdGhlIGJvZHk/4oCdIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJdCBpcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IGNlcnRhaW5seSBtb3N0IHBlb3BsZSB0aGluayB0aGF0IGEgbWFuIHdobyB0YWtlcyBubyBwbGVhc3VyZSBhbmQgaGFzIG5vIHBhcnQgaW4gc3VjaCB0aGluZ3MgZG9lc24ndCBkZXNlcnZlIHRvIGxpdmUsIGFuZCB0aGF0IG9uZSB3aG8gY2FyZXMgbm90aGluZyBmb3IgdGhlIHBsZWFzdXJlcyBvZiB0aGUgYm9keSBpcyBhYm91dCBhcyBnb29kIGFzIGRlYWQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoYXQgaXMgdmVyeSB0cnVlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3csIGhvdyBhYm91dCB0aGUgYWNxdWlyZW1lbnQgb2YgcHVyZSBrbm93bGVkZ2U/IElzIHRoZSBib2R5IGEgaGluZHJhbmNlIG9yIG5vdCwgaWYgaXQgaXMgbWFkZSB0byBzaGFyZSBpbiB0aGUgc2VhcmNoIGZvciB3aXNkb20/CjwvdHJhbnNsYXRpb24+"
translation['65.65b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NWIiIHVuaXQ9InNlY3Rpb24iIC8+V2hhdCBJIG1lYW4gaXMgdGhpczogIEhhdmUgdGhlIHNpZ2h0IGFuZCBoZWFyaW5nIG9mIG1lbiBhbnkgdHJ1dGggaW4gdGhlbSwgb3IgaXMgaXQgdHJ1ZSwgYXMgdGhlIHBvZXRzIGFyZSBhbHdheXMgdGVsbGluZyB1cywgdGhhdCB3ZSBuZWl0aGVyIGhlYXIgbm9yIHNlZSBhbnkgdGhpbmcgYWNjdXJhdGVseT8gQW5kIHlldCBpZiB0aGVzZSB0d28gcGh5c2ljYWwgc2Vuc2VzIGFyZSBub3QgYWNjdXJhdGUgb3IgZXhhY3QsIHRoZSByZXN0IGFyZSBub3QgbGlrZWx5IHRvIGJlLCBmb3IgdGhleSBhcmUgaW5mZXJpb3IgdG8gdGhlc2UuICBEbyB5b3Ugbm90IHRoaW5rIHNvP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHkgSSBkbyzigJ0gaGUgcmVwbGllZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbizigJ0gc2FpZCBoZSwg4oCcd2hlbiBkb2VzIHRoZSBzb3VsIGF0dGFpbiB0byB0cnV0aD8gIEZvciB3aGVuIGl0IHRyaWVzIHRvIGNvbnNpZGVyIGFueXRoaW5nIGluIGNvbXBhbnkgd2l0aCB0aGUgYm9keSwgaXQgaXMgZXZpZGVudGx5IGRlY2VpdmVkIGJ5IGl0LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['65.65c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NWMiIHVuaXQ9InNlY3Rpb24iIC8+4oCcVHJ1ZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSW4gdGhvdWdodCwgdGhlbiwgaWYgYXQgYWxsLCBzb21ldGhpbmcgb2YgdGhlIHJlYWxpdGllcyBiZWNvbWVzIGNsZWFyIHRvIGl0P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz4g4oCcWWVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz4g4oCcQnV0IGl0IHRoaW5rcyBiZXN0IHdoZW4gbm9uZSBvZiB0aGVzZSB0aGluZ3MgdHJvdWJsZXMgaXQsIG5laXRoZXIgaGVhcmluZyBub3Igc2lnaHQsIG5vciBwYWluIG5vciBhbnkgcGxlYXN1cmUsIGJ1dCBpdCBpcywgc28gZmFyIGFzIHBvc3NpYmxlLCBhbG9uZSBieSBpdHNlbGYsIGFuZCB0YWtlcyBsZWF2ZSBvZiB0aGUgYm9keSwgYW5kIGF2b2lkaW5nLCBzbyBmYXIgYXMgaXQgY2FuLCBhbGwgYXNzb2NpYXRpb24gb3IgY29udGFjdCB3aXRoIHRoZSBib2R5LCByZWFjaGVzIG91dCB0b3dhcmQgdGhlIHJlYWxpdHku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoYXQgaXMgdHJ1ZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSW4gdGhpcyBtYXR0ZXIgYWxzbywgdGhlbiwKPC90cmFuc2xhdGlvbj4="
translation['65.65d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NWQiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIHNvdWwgb2YgdGhlIHBoaWxvc29waGVyIGdyZWF0bHkgZGVzcGlzZXMgdGhlIGJvZHkgYW5kIGF2b2lkcyBpdCBhbmQgc3RyaXZlcyB0byBiZSBhbG9uZSBieSBpdHNlbGY/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEV2aWRlbnRseS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IGhvdyBhYm91dCBzdWNoIHRoaW5ncyBhcyB0aGlzLCBTaW1taWFzPyAgRG8gd2UgdGhpbmsgdGhlcmUgaXMgc3VjaCBhIHRoaW5nIGFzIGFic29sdXRlIGp1c3RpY2UsIG9yIG5vdD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2UgY2VydGFpbmx5IHRoaW5rIHRoZXJlIGlzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgYWJzb2x1dGUgYmVhdXR5IGFuZCBnb29kbmVzcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcT2YgY291cnNlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLCBkaWQgeW91IGV2ZXIgc2VlIGFueXRoaW5nIG9mIHRoYXQga2luZCB3aXRoIHlvdXIgZXllcz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5IG5vdCzigJ0gc2FpZCBoZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcT3IgZGlkIHlvdSBldmVyIHJlYWNoIHRoZW0gd2l0aCBhbnkgb2YgdGhlIGJvZGlseSBzZW5zZXM/ICBJIGFtIHNwZWFraW5nIG9mIGFsbCBzdWNoIHRoaW5ncywgYXMgc2l6ZSwgaGVhbHRoLCBzdHJlbmd0aCwgYW5kIGluIHNob3J0IHRoZSBlc3NlbmNlCjwvdHJhbnNsYXRpb24+"
translation['65.65e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NWUiIHVuaXQ9InNlY3Rpb24iIC8+b3IgdW5kZXJseWluZyBxdWFsaXR5IG9mIGV2ZXJ5dGhpbmcuICBJcyB0aGVpciB0cnVlIG5hdHVyZSBjb250ZW1wbGF0ZWQgYnkgbWVhbnMgb2YgdGhlIGJvZHk/ICBJcyBpdCBub3QgcmF0aGVyIHRoZSBjYXNlIHRoYXQgaGUgd2hvIHByZXBhcmVzIGhpbXNlbGYgbW9zdCBjYXJlZnVsbHkgdG8gdW5kZXJzdGFuZCB0aGUgdHJ1ZSBlc3NlbmNlIG9mIGVhY2ggdGhpbmcgdGhhdCBoZSBleGFtaW5lcyB3b3VsZCBjb21lIG5lYXJlc3QgdG8gdGhlIGtub3dsZWRnZSBvZiBpdD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXb3VsZCBub3QgdGhhdCBtYW4gZG8gdGhpcyBtb3N0IHBlcmZlY3RseSB3aG8gYXBwcm9hY2hlcyBlYWNoIHRoaW5nLCBzbyBmYXIgYXMgcG9zc2libGUsIHdpdGggdGhlIHJlYXNvbiBhbG9uZSwgbm90IGludHJvZHVjaW5nIHNpZ2h0IGludG8gaGlzIHJlYXNvbmluZyBub3IgZHJhZ2dpbmcgaW4KPC90cmFuc2xhdGlvbj4="
translation['66.66a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNjZhIiB1bml0PSJzZWN0aW9uIiAvPmFueSBvZiB0aGUgb3RoZXIgc2Vuc2VzIGFsb25nIHdpdGggaGlzIHRoaW5raW5nLCBidXQgd2hvIGVtcGxveXMgcHVyZSwgYWJzb2x1dGUgcmVhc29uIGluIGhpcyBhdHRlbXB0IHRvIHNlYXJjaCBvdXQgdGhlIHB1cmUsIGFic29sdXRlIGVzc2VuY2Ugb2YgdGhpbmdzLCBhbmQgd2hvIHJlbW92ZXMgaGltc2VsZiwgc28gZmFyIGFzIHBvc3NpYmxlLCBmcm9tIGV5ZXMgYW5kIGVhcnMsIGFuZCwgaW4gYSB3b3JkLCBmcm9tIGhpcyB3aG9sZSBib2R5LCBiZWNhdXNlIGhlIGZlZWxzIHRoYXQgaXRzIGNvbXBhbmlvbnNoaXAgZGlzdHVyYnMgdGhlIHNvdWwgYW5kIGhpbmRlcnMgaXQgZnJvbSBhdHRhaW5pbmcgdHJ1dGggYW5kIHdpc2RvbT8gIElzIG5vdCB0aGlzIHRoZSBtYW4sIFNpbW1pYXMsIGlmIGFueW9uZSwgdG8gYXR0YWluIHRvIHRoZSBrbm93bGVkZ2Ugb2YgcmVhbGl0eT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhhdCBpcyB0cnVlIGFzIHRydWUgY2FuIGJlLCBTb2NyYXRlcyzigJ0gc2FpZCBTaW1taWFzLgo8L3RyYW5zbGF0aW9uPg=="
translation['66.66b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NmIiIHVuaXQ9InNlY3Rpb24iIC8+4oCcVGhlbizigJ0gc2FpZCBoZSwg4oCcYWxsIHRoaXMgbXVzdCBjYXVzZSBnb29kIGxvdmVycyBvZiB3aXNkb20gdG8gdGhpbmsgYW5kIHNheSBvbmUgdG8gdGhlIG90aGVyIHNvbWV0aGluZyBsaWtlIHRoaXM6ICAnVGhlcmUgc2VlbXMgdG8gYmUgYSBzaG9ydCBjdXQgd2hpY2ggbGVhZHMgdXMgYW5kIG91ciBhcmd1bWVudCB0byB0aGUgY29uY2x1c2lvbiBpbiBvdXIgc2VhcmNoIHRoYXQgc28gbG9uZyBhcyB3ZSBoYXZlIHRoZSBib2R5LCBhbmQgdGhlIHNvdWwgaXMgY29udGFtaW5hdGVkIGJ5IHN1Y2ggYW4gZXZpbCwgd2Ugc2hhbGwgbmV2ZXIgYXR0YWluIGNvbXBsZXRlbHkgd2hhdCB3ZSBkZXNpcmUsIHRoYXQgaXMsIHRoZSB0cnV0aC4gIEZvciB0aGUgYm9keSBrZWVwcyB1cyBjb25zdGFudGx5IGJ1c3kgYnkgcmVhc29uIG9mIGl0cyBuZWVkIG9mIHN1c3RlbmFuY2U7CjwvdHJhbnNsYXRpb24+"
translation['66.66c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NmMiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIG1vcmVvdmVyLCBpZiBkaXNlYXNlcyBjb21lIHVwb24gaXQgdGhleSBoaW5kZXIgb3VyIHB1cnN1aXQgb2YgdGhlIHRydXRoLiAgQW5kIHRoZSBib2R5IGZpbGxzIHVzIHdpdGggcGFzc2lvbnMgYW5kIGRlc2lyZXMgYW5kIGZlYXJzLCBhbmQgYWxsIHNvcnRzIG9mIGZhbmNpZXMgYW5kIGZvb2xpc2huZXNzLCBzbyB0aGF0LCBhcyB0aGV5IHNheSwgaXQgcmVhbGx5IGFuZCB0cnVseSBtYWtlcyBpdCBpbXBvc3NpYmxlIGZvciB1cyB0byB0aGluayBhdCBhbGwuICBUaGUgYm9keSBhbmQgaXRzIGRlc2lyZXMgYXJlIHRoZSBvbmx5IGNhdXNlIG9mIHdhcnMgYW5kIGZhY3Rpb25zIGFuZCBiYXR0bGVzOyAgZm9yIGFsbCB3YXJzIGFyaXNlIGZvciB0aGUgc2FrZSBvZiBnYWluaW5nIG1vbmV5LCBhbmQgd2UgYXJlIGNvbXBlbGxlZCB0byBnYWluIG1vbmV5CjwvdHJhbnNsYXRpb24+"
translation['66.66d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NmQiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIHRoZSBzYWtlIG9mIHRoZSBib2R5LiAgV2UgYXJlIHNsYXZlcyB0byBpdHMgc2VydmljZS4gIEFuZCBzbywgYmVjYXVzZSBvZiBhbGwgdGhlc2UgdGhpbmdzLCB3ZSBoYXZlIG5vIGxlaXN1cmUgZm9yIHBoaWxvc29waHkuICBCdXQgdGhlIHdvcnN0IG9mIGFsbCBpcyB0aGF0IGlmIHdlIGRvIGdldCBhIGJpdCBvZiBsZWlzdXJlIGFuZCB0dXJuIHRvIHBoaWxvc29waHksIHRoZSBib2R5IGlzIGNvbnN0YW50bHkgYnJlYWtpbmcgaW4gdXBvbiBvdXIgc3R1ZGllcyBhbmQgZGlzdHVyYmluZyB1cyB3aXRoIG5vaXNlIGFuZCBjb25mdXNpb24sIHNvIHRoYXQgaXQgcHJldmVudHMgb3VyIGJlaG9sZGluZyB0aGUgdHJ1dGgsIGFuZCBpbiBmYWN0IHdlIHBlcmNlaXZlIHRoYXQsIGlmIHdlIGFyZSBldmVyIHRvIGtub3cgYW55dGhpbmcgYWJzb2x1dGVseSwgd2UgbXVzdCBiZSBmcmVlIGZyb20gdGhlIGJvZHkgYW5kIG11c3QgYmVob2xkCjwvdHJhbnNsYXRpb24+"
translation['66.66e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NmUiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIGFjdHVhbCByZWFsaXRpZXMgd2l0aCB0aGUgZXllIG9mIHRoZSBzb3VsIGFsb25lLiAgQW5kIHRoZW4sIGFzIG91ciBhcmd1bWVudCBzaG93cywgd2hlbiB3ZSBhcmUgZGVhZCB3ZSBhcmUgbGlrZWx5IHRvIHBvc3Nlc3MgdGhlIHdpc2RvbSB3aGljaCB3ZSBkZXNpcmUgYW5kIGNsYWltIHRvIGJlIGVuYW1vcmVkIG9mLCBidXQgbm90IHdoaWxlIHdlIGxpdmUuICBGb3IsIGlmIHB1cmUga25vd2xlZGdlIGlzIGltcG9zc2libGUgd2hpbGUgdGhlIGJvZHkgaXMgd2l0aCB1cywgb25lIG9mIHR3byB0aGluZyBtdXN0IGZvbGxvdywgZWl0aGVyIGl0IGNhbm5vdCBiZSBhY3F1aXJlZCBhdCBhbGwgb3Igb25seSB3aGVuIHdlIGFyZSBkZWFkOyAgZm9yIHRoZW4gdGhlIHNvdWwKPC90cmFuc2xhdGlvbj4="
translation['67.67a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2NyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNjdhIiB1bml0PSJzZWN0aW9uIiAvPndpbGwgYmUgYnkgaXRzZWxmIGFwYXJ0IGZyb20gdGhlICBib2R5LCBidXQgbm90IGJlZm9yZS4gIEFuZCB3aGlsZSB3ZSBsaXZlLCB3ZSBzaGFsbCwgSSB0aGluaywgYmUgbmVhcmVzdCB0byBrbm93bGVkZ2Ugd2hlbiB3ZSBhdm9pZCwgc28gZmFyIGFzIHBvc3NpYmxlLCBpbnRlcmNvdXJzZSBhbmQgY29tbXVuaW9uIHdpdGggdGhlIGJvZHksIGV4Y2VwdCB3aGF0IGlzIGFic29sdXRlbHkgbmVjZXNzYXJ5LCBhbmQgYXJlIG5vdCBmaWxsZWQgd2l0aCBpdHMgbmF0dXJlLCBidXQga2VlcCBvdXJzZWx2ZXMgcHVyZSBmcm9tIGl0IHVudGlsIEdvZCBoaW1zZWxmIHNldHMgdXMgZnJlZS4gIEFuZCBpbiB0aGlzIHdheSwgZnJlZWluZyBvdXJzZWx2ZXMgZnJvbSB0aGUgZm9vbGlzaG5lc3Mgb2YgdGhlIGJvZHkgYW5kIGJlaW5nIHB1cmUsIHdlIHNoYWxsLCBJIHRoaW5rLCBiZSB3aXRoIHRoZSBwdXJlIGFuZCBzaGFsbCBrbm93IG9mIG91cnNlbHZlcyBhbGwgdGhhdCBpcyBwdXJlLOKAlAo8L3RyYW5zbGF0aW9uPg=="
translation['67.67b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2N2IiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoYXQgaXMsIHBlcmhhcHMsIHRoZSB0cnV0aC4gIEZvciBpdCBjYW5ub3QgYmUgdGhhdCB0aGUgaW1wdXJlIGF0dGFpbiB0aGUgcHVyZS4nICBTdWNoIHdvcmRzIGFzIHRoZXNlLCAgSSB0aGluaywgU2ltbWlhcywgYWxsIHdobyBhcmUgcmlnaHRseSBsb3ZlcnMgb2Yga25vd2xlZGdlIG11c3Qgc2F5IHRvIGVhY2ggb3RoZXIgYW5kIHN1Y2ggbXVzdCBiZSB0aGVpciB0aG91Z2h0cy4gIERvIHlvdSBub3QgYWdyZWU/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE1vc3QgYXNzdXJlZGx5LCBTb2NyYXRlcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbizigJ0gc2FpZCBTb2NyYXRlcywg4oCcaWYgdGhpcyBpcyB0cnVlLCBteSBmcmllbmQsIEkgaGF2ZSBncmVhdCBob3BlcyB0aGF0IHdoZW4gSSByZWFjaCB0aGUgcGxhY2UgdG8gd2hpY2ggSSBhbSBnb2luZywgSSBzaGFsbCB0aGVyZSwgaWYgYW55d2hlcmUsIGF0dGFpbiBmdWxseSB0byB0aGF0IHdoaWNoIGhhcyBiZWVuIG15IGNoaWVmIG9iamVjdCBpbiBteSBwYXN0IGxpZmUsIHNvIHRoYXQgdGhlIGpvdXJuZXkgd2hpY2ggaXMgbm93CjwvdHJhbnNsYXRpb24+"
translation['67.67c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2N2MiIHVuaXQ9InNlY3Rpb24iIC8+aW1wb3NlZCB1cG9uIG1lIGlzIGJlZ3VuIHdpdGggZ29vZCBob3BlOyAgYW5kIHRoZSBsaWtlIGhvcGUgZXhpc3RzIGZvciBldmVyeSBtYW4gd2hvIHRoaW5rcyB0aGF0IGhpcyBtaW5kIGhhcyBiZWVuIHB1cmlmaWVkIGFuZCBtYWRlIHJlYWR5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHks4oCdIHNhaWQgU2ltbWlhcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIGRvZXMgbm90IHRoZSBwdXJpZmljYXRpb24gY29uc2lzdCBpbiB0aGlzIHdoaWNoIGhhcyBiZWVuIG1lbnRpb25lZCBsb25nIGFnbyBpbiBvdXIgZGlzY291cnNlLCBpbiBzZXBhcmF0aW5nLCBzbyBmYXIgYXMgcG9zc2libGUsIHRoZSBzb3VsIGZyb20gdGhlIGJvZHkgYW5kIHRlYWNoaW5nIHRoZSBzb3VsIHRoZSBoYWJpdCBvZiBjb2xsZWN0aW5nIGFuZCBicmluZ2luZyBpdHNlbGYgdG9nZXRoZXIgZnJvbSBhbGwgcGFydHMgb2YgdGhlIGJvZHksIGFuZCBsaXZpbmcsIHNvIGZhciBhcyBpdCBjYW4sIGJvdGggbm93CjwvdHJhbnNsYXRpb24+"
translation['67.67d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2N2QiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGhlcmVhZnRlciwgYWxvbmUgYnkgaXRzZWxmLCBmcmVlZCBmcm9tIHRoZSBib2R5IGFzIGZyb20gZmV0dGVycz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LOKAnSBzYWlkIGhlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLCB0aGVuLCB0aGlzIGlzIHdoYXQgd2UgY2FsbCBkZWF0aCwgaXMgaXQgbm90LCBhIHJlbGVhc2UgYW5kIHNlcGFyYXRpb24gZnJvbSB0aGUgYm9keT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRXhhY3RseSBzbyzigJ0gc2FpZCBoZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0LCBhcyB3ZSBob2xkLCB0aGUgdHJ1ZSBwaGlsb3NvcGhlcnMgYW5kIHRoZXkgYWxvbmUgYXJlIGFsd2F5cyBtb3N0IGVhZ2VyIHRvIHJlbGVhc2UgdGhlIHNvdWwsIGFuZCBqdXN0IHRoaXPigJR0aGUgcmVsZWFzZSBhbmQgc2VwYXJhdGlvbiBvZiB0aGUgc291bCBmcm9tIHRoZSBib2R54oCUaXMgdGhlaXIgc3R1ZHksIGlzIGl0IG5vdD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcT2J2aW91c2x5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuLCBhcyBJIHNhaWQgaW4gdGhlIGJlZ2lubmluZywgaXQgd291bGQgYmUgYWJzdXJkIGlmIGEgbWFuIHdobyBoYWQgYmVlbiBhbGwgaGlzIGxpZmUgZml0dGluZyBoaW1zZWxmIHRvIGxpdmUgYXMgbmVhcmx5CjwvdHJhbnNsYXRpb24+"
translation['67.67e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2N2UiIHVuaXQ9InNlY3Rpb24iIC8+aW4gYSBzdGF0ZSBvZiBkZWF0aCBhcyBoZSBjb3VsZCwgc2hvdWxkIHRoZW4gYmUgZGlzdHVyYmVkIHdoZW4gZGVhdGggY2FtZSB0byBoaW0uICBXb3VsZCBpdCBub3QgYmUgYWJzdXJkP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxPZiBjb3Vyc2Uu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEluIGZhY3QsIHRoZW4sIFNpbW1pYXMs4oCdIHNhaWQgaGUsIOKAnHRoZSB0cnVlIHBoaWxvc29waGVycyBwcmFjdGljZSBkeWluZywgYW5kIGRlYXRoIGlzIGxlc3MgdGVycmlibGUgdG8gdGhlbSB0aGFuIHRvIGFueSBvdGhlciBtZW4uICBDb25zaWRlciBpdCBpbiB0aGlzIHdheS4gIFRoZXkgYXJlIGluIGV2ZXJ5IHdheSBob3N0aWxlIHRvIHRoZSBib2R5IGFuZCB0aGV5IGRlc2lyZSB0byBoYXZlIHRoZSBzb3VsIGFwYXJ0IGJ5IGl0c2VsZiBhbG9uZS4gIFdvdWxkIGl0IG5vdCBiZSB2ZXJ5IGZvb2xpc2ggaWYgdGhleSBzaG91bGQgYmUgZnJpZ2h0ZW5lZCBhbmQgdHJvdWJsZWQgd2hlbiB0aGlzIHZlcnkgdGhpbmcgaGFwcGVucywgYW5kIGlmIHRoZXkgc2hvdWxkIG5vdCBiZSBnbGFkIHRvIGdvIHRvIHRoZSBwbGFjZSB3aGVyZSB0aGVyZSBpcyBob3BlIG9mIGF0dGFpbmluZwo8L3RyYW5zbGF0aW9uPg=="
translation['68.68a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNjhhIiB1bml0PSJzZWN0aW9uIiAvPndoYXQgdGhleSBsb25nZWQgZm9yIGFsbCB0aHJvdWdoIGxpZmXigJRhbmQgdGhleSBsb25nZWQgZm9yIHdpc2RvbeKAlGFuZCBvZiBlc2NhcGluZyBmcm9tIHRoZSBjb21wYW5pb25zaGlwIG9mIHRoYXQgd2hpY2ggdGhleSBoYXRlZD8gIFdoZW4gaHVtYW4gbG92ZXMgb3Igd2l2ZXMgb3Igc29ucyBoYXZlIGRpZWQsIG1hbnkgbWVuIGhhdmUgd2lsbGluZ2x5IGdvbmUgdG8gdGhlIG90aGVyIHdvcmxkIGxlZCBieSB0aGUgaG9wZSBvZiBzZWVpbmcgdGhlcmUgdGhvc2Ugd2hvbSB0aGV5IGxvbmdlZCBmb3IsIGFuZCBvZiBiZWluZyB3aXRoIHRoZW07ICBhbmQgc2hhbGwgaGUgd2hvIGlzIHJlYWxseSBpbiBsb3ZlIHdpdGggd2lzZG9tIGFuZCBoYXMgYSBmaXJtIGJlbGllZiB0aGF0IGhlIGNhbiBmaW5kIGl0IG5vd2hlcmUgZWxzZQo8L3RyYW5zbGF0aW9uPg=="
translation['68.68b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OGIiIHVuaXQ9InNlY3Rpb24iIC8+dGhhbiBpbiB0aGUgb3RoZXIgd29ybGQgZ3JpZXZlIHdoZW4gaGUgZGllcyBhbmQgbm90IGJlIGdsYWQgdG8gZ28gdGhlcmU/ICBXZSBjYW5ub3QgdGhpbmsgdGhhdCwgbXkgZnJpZW5kLCBpZiBoZSBpcyByZWFsbHkgYSBwaGlsb3NvcGhlcjsgIGZvciBoZSB3aWxsIGNvbmZpZGVudGx5IGJlbGlldmUgdGhhdCBoZSB3aWxsIGZpbmQgcHVyZSB3aXNkb20gbm93aGVyZSBlbHNlIHRoYW4gaW4gdGhlIG90aGVyIHdvcmxkLiAgQW5kIGlmIHRoaXMgaXMgc28sIHdvdWxkIGl0IG5vdCBiZSB2ZXJ5IGZvb2xpc2ggZm9yIHN1Y2ggYSBtYW4gdG8gZmVhciBkZWF0aD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVmVyeSBmb29saXNoLCBjZXJ0YWlubHks4oCdIHNhaWQgaGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4gaXMgaXQgbm90LOKAnSBzYWlkIFNvY3JhdGVzLCDigJxhIHN1ZmZpY2llbnQgaW5kaWNhdGlvbiwgd2hlbiB5b3Ugc2VlIGEgbWFuIHRyb3VibGVkIGJlY2F1c2UgaGUgaXMgZ29pbmcgdG8gZGllLCB0aGF0IGhlIHdhcyBub3QgYSBsb3ZlciBvZiB3aXNkb20gYnV0IGEgbG92ZXIgb2YgdGhlIGJvZHk/CjwvdHJhbnNsYXRpb24+"
translation['68.68c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OGMiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIHRoaXMgc2FtZSBtYW4gaXMgYWxzbyBhIGxvdmVyIG9mIG1vbmV5IGFuZCBvZiBob25vciwgb25lIG9yIGJvdGgu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seSzigJ0gc2FpZCBoZSwg4oCcaXQgaXMgYXMgeW91IHNheS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiwgU2ltbWlhcyzigJ0gaGUgY29udGludWVkLCDigJxpcyBub3QgdGhhdCB3aGljaCBpcyBjYWxsZWQgY291cmFnZSBlc3BlY2lhbGx5IGNoYXJhY3RlcmlzdGljIG9mIHBoaWxvc29waGVycz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnkgYWxsIG1lYW5zLOKAnSBzYWlkIGhlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgc2VsZi1yZXN0cmFpbnTigJR0aGF0IHdoaWNoIGlzIGNvbW1vbmx5IGNhbGxlZCBzZWxmLXJlc3RyYWludCwgd2hpY2ggY29uc2lzdHMgaW4gbm90IGJlaW5nIGV4Y2l0ZWQgYnkgdGhlIHBhc3Npb25zIGFuZCBpbiBiZWluZyBzdXBlcmlvciB0byB0aGVtIGFuZCBhY3RpbmcgaW4gYSBzZWVtbHkgd2F54oCUaXMgbm90IHRoYXQgY2hhcmFjdGVyaXN0aWMgb2YgdGhvc2UgYWxvbmUgd2hvIGRlc3Bpc2UgdGhlIGJvZHkKPC90cmFuc2xhdGlvbj4="
translation['68.68d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OGQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHBhc3MgdGhlaXIgbGl2ZXMgaW4gcGhpbG9zb3BoeT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTmVjZXNzYXJpbHks4oCdIHNhaWQgaGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEZvcizigJ0gc2FpZCBTb2NyYXRlcywg4oCcaWYgeW91IGNhcmUgdG8gY29uc2lkZXIgdGhlIGNvdXJhZ2UgYW5kIHRoZSBzZWxmLXJlc3RyYWludCBvZiBvdGhlciBtZW4sIHlvdSB3aWxsIHNlZSB0aGF0IHRoZXkgYXJlIGFic3VyZC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSG93IHNvLCBTb2NyYXRlcz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWW91IGtub3csIGRvIHlvdSBub3QsIHRoYXQgYWxsIG90aGVyIG1lbiBjb3VudCBkZWF0aCBhbW9uZyB0aGUgZ3JlYXQgZXZpbHM/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZXkgY2VydGFpbmx5IGRvLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgZG8gbm90IGJyYXZlIG1lbiBmYWNlIGRlYXRo4oCUd2hlbiB0aGV5IGRvIGZhY2UgaXTigJR0aHJvdWdoIGZlYXIgb2YgZ3JlYXRlciBldmlscz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhhdCBpcyB0cnVlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIGFsbCBleGNlcHQgcGhpbG9zb3BoZXJzIGFyZSBicmF2ZSB0aHJvdWdoIGZlYXIuICBBbmQgeWV0IGl0IGlzIGFic3VyZCB0byBiZSBicmF2ZSB0aHJvdWdoIGZlYXIgYW5kIGNvd2FyZGljZS7igJ0KPC90cmFuc2xhdGlvbj4="
translation['68.68e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OGUiIHVuaXQ9InNlY3Rpb24iIC8+4oCcVmVyeSB0cnVlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgaG93IGFib3V0IHRob3NlIG9mIHNlZW1seSBjb25kdWN0PyAgSXMgdGhlaXIgY2FzZSBub3QgdGhlIHNhbWU/ICBUaGV5IGFyZSBzZWxmLXJlc3RyYWluZWQgYmVjYXVzZSBvZiBhIGtpbmQgb2Ygc2VsZi1pbmR1bGdlbmNlLiAgV2Ugc2F5LCB0byBiZSBzdXJlLCB0aGF0IHRoaXMgaXMgaW1wb3NzaWJsZSwgbmV2ZXJ0aGVsZXNzIHRoZWlyIGZvb2xpc2ggc2VsZi1yZXN0cmFpbnQgYW1vdW50cyB0byBsaXR0bGUgbW9yZSB0aGFuIHRoaXM7ICBmb3IgdGhleSBmZWFyIHRoYXQgdGhleSBtYXkgYmUgZGVwcml2ZWQgb2YgY2VydGFpbiBwbGVhc3VyZXMgd2hpY2ggdGhleSBkZXNpcmUsIGFuZCBzbyB0aGV5IHJlZnJhaW4gZnJvbSBzb21lIGJlY2F1c2UgdGhleSBhcmUgdW5kZXIgdGhlIHN3YXkgb2Ygb3RoZXJzLiAgQW5kIHlldCBiZWluZyBydWxlZCBieSBwbGVhc3VyZXMKPC90cmFuc2xhdGlvbj4="
translation['69.69a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNjlhIiB1bml0PSJzZWN0aW9uIiAvPmlzIGNhbGxlZCBzZWxmLWluZHVsZ2VuY2UuICBOZXZlcnRoZWxlc3MgdGhleSBjb25xdWVyIHBsZWFzdXJlcyBiZWNhdXNlIHRoZXkgYXJlIGNvbnF1ZXJlZCBieSBvdGhlciBwbGVhc3VyZXMuICBOb3cgdGhpcyBpcyBhYm91dCB3aGF0IEkgc2FpZCBqdXN0IG5vdywgdGhhdCB0aGV5IGFyZSBzZWxmLXJlc3RyYWluZWQgYnkgYSBraW5kIG9mIHNlbGYtaW5kdWxnZW5jZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcU28gaXQgc2VlbXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE15IGRlYXIgU2ltbWlhcywgSSBzdXNwZWN0IHRoYXQgdGhpcyBpcyBub3QgdGhlIHJpZ2h0IHdheSB0byBwdXJjaGFzZSB2aXJ0dWUsIGJ5IGV4Y2hhbmdpbmcgcGxlYXN1cmVzIGZvciBwbGVhc3VyZXMsIGFuZCBwYWlucyBmb3IgcGFpbnMsIGFuZCBmZWFyIGZvciBmZWFyLCBhbmQgZ3JlYXRlciBmb3IgbGVzcywgYXMgaWYgdGhleSB3ZXJlIGNvaW5zLCBidXQgdGhlIG9ubHkgcmlnaHQgY29pbmFnZSwgZm9yIHdoaWNoIGFsbCB0aG9zZSB0aGluZ3MKPC90cmFuc2xhdGlvbj4="
translation['69.69b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OWIiIHVuaXQ9InNlY3Rpb24iIC8+bXVzdCBiZSBleGNoYW5nZWQgYW5kIGJ5IG1lYW5zIG9mIGFuZCB3aXRoIHdoaWNoIGFsbCB0aGVzZSB0aGluZ3MgYXJlIHRvIGJlIGJvdWdodCBhbmQgc29sZCwgaXMgaW4gZmFjdCB3aXNkb207ICBhbmQgY291cmFnZSBhbmQgc2VsZi1yZXN0cmFpbnQgYW5kIGp1c3RpY2UgYW5kLCBpbiBzaG9ydCwgdHJ1ZSB2aXJ0dWUgZXhpc3Qgb25seSB3aXRoIHdpc2RvbSwgd2hldGhlciBwbGVhc3VyZXMgYW5kIGZlYXJzIGFuZCBvdGhlciB0aGluZ3Mgb2YgdGhhdCBzb3J0IGFyZSBhZGRlZCBvciB0YWtlbiBhd2F5LiAgQW5kIHZpcnR1ZSB3aGljaCBjb25zaXN0cyBpbiB0aGUgZXhjaGFuZ2Ugb2Ygc3VjaCB0aGluZ3MgZm9yIGVhY2ggb3RoZXIgd2l0aG91dCB3aXNkb20sIGlzIGJ1dCBhIHBhaW50ZWQgaW1pdGF0aW9uIG9mIHZpcnR1ZSBhbmQgaXMgcmVhbGx5IHNsYXZpc2ggYW5kIGhhcyBub3RoaW5nIGhlYWx0aHkgb3IgdHJ1ZSBpbiBpdDsgIGJ1dCB0cnV0aCBpcyBpbiBmYWN0IGEgcHVyaWZpY2F0aW9uCjwvdHJhbnNsYXRpb24+"
translation['69.69c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OWMiIHVuaXQ9InNlY3Rpb24iIC8+ZnJvbSBhbGwgdGhlc2UgdGhpbmdzLCBhbmQgc2VsZi1yZXN0cmFpbnQgYW5kIGp1c3RpY2UgYW5kIGNvdXJhZ2UgYW5kIHdpc2RvbSBpdHNlbGYgYXJlIGEga2luZCBvZiBwdXJpZmljYXRpb24uICBBbmQgSSBmYW5jeSB0aGF0IHRob3NlIG1lbiB3aG8gZXN0YWJsaXNoZWQgdGhlIG15c3RlcmllcyB3ZXJlIG5vdCB1bmVubGlnaHRlbmVkLCBidXQgaW4gcmVhbGl0eSBoYWQgYSBoaWRkZW4gbWVhbmluZyB3aGVuIHRoZXkgc2FpZCBsb25nIGFnbyB0aGF0IHdob2V2ZXIgZ29lcyB1bmluaXRpYXRlZCBhbmQgdW5zYW5jdGlmaWVkIHRvIHRoZSBvdGhlciB3b3JsZCB3aWxsIGxpZSBpbiB0aGUgbWlyZSwgYnV0IGhlIHdobyBhcnJpdmVzIHRoZXJlIGluaXRpYXRlZCBhbmQgcHVyaWZpZWQgd2lsbCBkd2VsbCB3aXRoIHRoZSBnb2RzLiAgRm9yIGFzIHRoZXkgc2F5IGluIHRoZSBteXN0ZXJpZXMsICd0aGUgdGh5cnN1cy1iZWFyZXJzIGFyZSBtYW55LCBidXQgdGhlIG15c3RpY3MgZmV3JzsKPC90cmFuc2xhdGlvbj4="
translation['69.69d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OWQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoZXNlIG15c3RpY3MgYXJlLCBJIGJlbGlldmUsIHRob3NlIHdobyBoYXZlIGJlZW4gdHJ1ZSBwaGlsb3NvcGhlcnMuICBBbmQgSSBpbiBteSBsaWZlIGhhdmUsIHNvIGZhciBhcyBJIGNvdWxkLCBsZWZ0IG5vdGhpbmcgdW5kb25lLCBhbmQgaGF2ZSBzdHJpdmVuIGluIGV2ZXJ5IHdheSB0byBtYWtlIG15c2VsZiBvbmUgb2YgdGhlbS4gIEJ1dCB3aGV0aGVyIEkgaGF2ZSBzdHJpdmVuIGFyaWdodCBhbmQgaGF2ZSBtZXQgd2l0aCBzdWNjZXNzLCBJIGJlbGlldmUgSSBzaGFsbCBrbm93IGNsZWFybHksIHdoZW4gSSBoYXZlIGFycml2ZWQgdGhlcmUsIHZlcnkgc29vbiwgaWYgaXQgaXMgR29kJ3Mgd2lsbC4gIFRoaXMgdGhlbiwgU2ltbWlhcyBhbmQgQ2ViZXMsIGlzIHRoZSBkZWZlbmNlIEkgb2ZmZXIgdG8gc2hvdyB0aGF0IGl0IGlzIHJlYXNvbmFibGUgZm9yIG1lIG5vdCB0byBiZSBncmlldmVkIG9yIHRyb3VibGVkIGF0IGxlYXZpbmcgeW91IGFuZCB0aGUgcnVsZXJzIEkgaGF2ZSBoZXJlLAo8L3RyYW5zbGF0aW9uPg=="
translation['69.69e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2OWUiIHVuaXQ9InNlY3Rpb24iIC8+YmVjYXVzZSBJIGJlbGlldmUgdGhhdCB0aGVyZSwgbm8gbGVzcyB0aGFuIGhlcmUsIEkgc2hhbGwgZmluZCBnb29kIHJ1bGVycyBhbmQgZnJpZW5kcy4gIElmIG5vdyBJIGFtIG1vcmUgc3VjY2Vzc2Z1bCBpbiBjb252aW5jaW5nIHlvdSBieSBteSBkZWZlbmNlIHRoYW4gSSB3YXMgaW4gY29udmluY2luZyBteSBBdGhlbmlhbiBqdWRnZXMsIGl0IGlzIHdlbGwu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldoZW4gU29jcmF0ZXMgaGFkIGZpbmlzaGVkLCBDZWJlcyBhbnN3ZXJlZCBhbmQgc2FpZDogIOKAnFNvY3JhdGVzLCBJIGFncmVlIHRvCjwvdHJhbnNsYXRpb24+"
translation['70.70a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNzBhIiB1bml0PSJzZWN0aW9uIiAvPnRoZSBvdGhlciB0aGluZ3MgeW91IHNheSwgYnV0IGluIHJlZ2FyZCB0byB0aGUgc291bCBtZW4gYXJlIHZlcnkgcHJvbmUgdG8gZGlzYmVsaWVmLiAgVGhleSBmZWFyIHRoYXQgd2hlbiB0aGUgc291bCBsZWF2ZXMgdGhlIGJvZHkgaXQgbm8gbG9uZ2VyIGV4aXN0cyBhbnl3aGVyZSwgYW5kIHRoYXQgb24gdGhlIGRheSB3aGVuIHRoZSBtYW4gZGllcyBpdCBpcyBkZXN0cm95ZWQgYW5kIHBlcmlzaGVzLCBhbmQgd2hlbiBpdCBsZWF2ZXMgdGhlIGJvZHkgYW5kIGRlcGFydHMgZnJvbSBpdCwgc3RyYWlnaHR3YXkgaXQgZmxpZXMgYXdheSBhbmQgaXMgbm8gbG9uZ2VyIGFueXdoZXJlLCBzY2F0dGVyaW5nIGxpa2UgYSBicmVhdGggb3Igc21va2UuICBJZiBpdCBleGlzdHMgYW55d2hlcmUgYnkgaXRzZWxmIGFzIGEgdW5pdCwgZnJlZWQgZnJvbSB0aGVzZSBldmlscyB3aGljaCB5b3UgaGF2ZSBlbnVtZXJhdGVkIGp1c3Qgbm93LAo8L3RyYW5zbGF0aW9uPg=="
translation['70.70b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MGIiIHVuaXQ9InNlY3Rpb24iIC8+dGhlcmUgd291bGQgYmUgZ29vZCByZWFzb24gZm9yIHRoZSBibGVzc2VkIGhvcGUsIFNvY3JhdGVzLCB0aGF0IHdoYXQgeW91IHNheSBpcyB0cnVlLiAgQnV0IHBlcmhhcHMgbm8gbGl0dGxlIGFyZ3VtZW50IGFuZCBwcm9vZiBpcyByZXF1aXJlZCB0byBzaG93IHRoYXQgd2hlbiBhIG1hbiBpcyBkZWFkIHRoZSBzb3VsIHN0aWxsIGV4aXN0cyBhbmQgaGFzIGFueSBwb3dlciBhbmQgaW50ZWxsaWdlbmNlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXaGF0IHlvdSBzYXksIENlYmVzLCBpcyB0cnVlLOKAnSBzYWlkIFNvY3JhdGVzLiAg4oCcTm93IHdoYXQgc2hhbGwgd2UgZG8/ICBEbyB5b3Ugd2lzaCB0byBrZWVwIG9uIGNvbnZlcnNpbmcgYWJvdXQgdGhpcyB0byBzZWUgd2hldGhlciBpdCBpcyBwcm9iYWJsZSBvciBub3Q/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEkgZG8s4oCdIHNhaWQgQ2ViZXMuICDigJxJIHNob3VsZCBsaWtlIHRvIGhlYXIgd2hhdCB5b3UgdGhpbmsgYWJvdXQgaXQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdlbGws4oCdIHNhaWQgU29jcmF0ZXMsIOKAnEkgZG8gbm90IGJlbGlldmUgYW55b25lIHdobyBoZWFyZCB1cyBub3csCjwvdHJhbnNsYXRpb24+"
translation['70.70c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MGMiIHVuaXQ9InNlY3Rpb24iIC8+ZXZlbiBpZiBoZSB3ZXJlIGEgY29taWMgcG9ldCwgd291bGQgc2F5IHRoYXQgSSBhbSBjaGF0dGVyaW5nIGFuZCB0YWxraW5nIGFib3V0IHRoaW5ncyB3aGljaCBkbyBub3QgY29uY2VybiBtZS4gIFNvIGlmIHlvdSBsaWtlLCBsZXQgdXMgZXhhbWluZSB0aGUgbWF0dGVyIHRvIHRoZSBlbmQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnExldCB1cyBjb25zaWRlciBpdCBieSBhc2tpbmcgd2hldGhlciB0aGUgc291bHMgb2YgbWVuIHdobyBoYXZlIGRpZWQgYXJlIGluIHRoZSBuZXRoZXIgd29ybGQgb3Igbm90LiAgVGhlcmUgaXMgYW4gYW5jaWVudCB0cmFkaXRpb24sIHdoaWNoIHdlIHJlbWVtYmVyLCB0aGF0IHRoZXkgZ28gdGhlcmUgZnJvbSBoZXJlIGFuZCBjb21lIGJhY2sgaGVyZSBhZ2FpbiBhbmQgYXJlIGJvcm4gZnJvbSB0aGUgZGVhZC4gIE5vdyBpZiB0aGlzIGlzIHRydWUsIGlmIHRoZSBsaXZpbmcgYXJlIGJvcm4gYWdhaW4gZnJvbSB0aGUgZGVhZCwgb3VyIHNvdWxzIHdvdWxkIGV4aXN0IHRoZXJlLAo8L3RyYW5zbGF0aW9uPg=="
translation['70.70d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MGQiIHVuaXQ9InNlY3Rpb24iIC8+d291bGQgdGhleSBub3Q/ICBGb3IgdGhleSBjb3VsZCBub3QgYmUgYm9ybiBhZ2FpbiBpZiB0aGV5IGRpZCBub3QgZXhpc3QsIGFuZCB0aGlzIHdvdWxkIGJlIGEgc3VmZmljaWVudCBwcm9vZiB0aGF0IHRoZXkgZXhpc3QsIGlmIGl0IHNob3VsZCByZWFsbHkgYmUgbWFkZSBldmlkZW50IHRoYXQgdGhlIGxpdmluZyBhcmUgYm9ybiBvbmx5IGZyb20gdGhlIGRlYWQuICBCdXQgaWYgdGhpcyBpcyBub3Qgc28gdGhlbiBzb21lIG90aGVyIGFyZ3VtZW50IHdvdWxkIGJlIG5lZWRlZC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LOKAnSBzYWlkIENlYmVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cs4oCdIHNhaWQgaGUsIOKAnGlmIHlvdSB3aXNoIHRvIGZpbmQgdGhpcyBvdXQgZWFzaWx5LCBkbyBub3QgY29uc2lkZXIgdGhlIHF1ZXN0aW9uIHdpdGggcmVnYXJkIHRvIG1lbiBvbmx5LCBidXQgd2l0aCByZWdhcmQgdG8gYWxsIGFuaW1hbHMgYW5kIHBsYW50cywgYW5kLCBpbiBzaG9ydCwgdG8gYWxsIHRoaW5ncyB3aGljaCBtYXkgYmUgc2FpZCB0byBoYXZlIGJpcnRoLiAgTGV0IHVzIHNlZSB3aXRoIHJlZ2FyZCB0byBhbGwgdGhlc2UsIHdoZXRoZXIgaXQgaXMgdHJ1ZSB0aGF0IHRoZXkgYXJlIGFsbCBib3JuIG9yIGdlbmVyYXRlZAo8L3RyYW5zbGF0aW9uPg=="
translation['70.70e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MGUiIHVuaXQ9InNlY3Rpb24iIC8+b25seSBmcm9tIHRoZWlyIG9wcG9zaXRlcywgaW4gY2FzZSB0aGV5IGhhdmUgb3Bwb3NpdGVzLCBhcyBmb3IgaW5zdGFuY2UsIHRoZSBub2JsZSBpcyB0aGUgb3Bwb3NpdGUgb2YgdGhlIGRpc2dyYWNlZnVsLCB0aGUganVzdCBvZiB0aGUgdW5qdXN0LCBhbmQgdGhlcmUgYXJlIGNvdW50bGVzcyBvdGhlciBzaW1pbGFyIHBhaXJzLiAgTGV0IHVzIGNvbnNpZGVyIHRoZSBxdWVzdGlvbiB3aGV0aGVyIGl0IGlzIGluZXZpdGFibGUgdGhhdCBldmVyeXRoaW5nIHdoaWNoIGhhcyBhbiBvcHBvc2l0ZSBiZSBnZW5lcmF0ZWQgZnJvbSBpdHMgb3Bwb3NpdGUgYW5kIGZyb20gaXQgb25seS4gIEZvciBpbnN0YW5jZSwgd2hlbiBhbnl0aGluZyBiZWNvbWVzIGdyZWF0ZXIgaXQgbXVzdCBpbmV2aXRhYmx5IGhhdmUgYmVlbiBzbWFsbGVyIGFuZCB0aGVuIGhhdmUgYmVjb21lIGdyZWF0ZXIu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFllcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIGlmIGl0IGJlY29tZXMgc21hbGxlciwKPC90cmFuc2xhdGlvbj4="
translation['71.71a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNzFhIiB1bml0PSJzZWN0aW9uIiAvPml0IG11c3QgaGF2ZSBiZWVuIGdyZWF0ZXIgYW5kIHRoZW4gaGF2ZSBiZWNvbWUgc21hbGxlcj/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhhdCBpcyB0cnVlLOKAnSBzYWlkIGhlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgdGhlIHdlYWtlciBpcyBnZW5lcmF0ZWQgZnJvbSB0aGUgc3Ryb25nZXIsIGFuZCB0aGUgc2xvd2VyIGZyb20gdGhlIHF1aWNrZXI/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHRoZSB3b3JzZSBmcm9tIHRoZSBiZXR0ZXIgYW5kIHRoZSBtb3JlIGp1c3QgZnJvbSB0aGUgbW9yZSB1bmp1c3Q/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE9mIGNvdXJzZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbizigJ0gc2FpZCBoZSwg4oCcd2UgaGF2ZSB0aGlzIGZhY3Qgc3VmZmljaWVudGx5IGVzdGFibGlzaGVkLCB0aGF0IGFsbCB0aGluZ3MgYXJlIGdlbmVyYXRlZCBpbiB0aGlzIHdheSwgb3Bwb3NpdGVzIGZyb20gb3Bwb3NpdGVzP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vdyB0aGVuLCBpcyB0aGVyZSBiZXR3ZWVuIGFsbCB0aGVzZSBwYWlycyBvZiBvcHBvc2l0ZXMgd2hhdCBtYXkgYmUgY2FsbGVkCjwvdHJhbnNsYXRpb24+"
translation['71.71b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MWIiIHVuaXQ9InNlY3Rpb24iIC8+dHdvIGtpbmRzIG9mIGdlbmVyYXRpb24sIGZyb20gb25lIHRvIHRoZSBvdGhlciBhbmQgYmFjayBhZ2FpbiBmcm9tIHRoZSBvdGhlciB0byB0aGUgZmlyc3Q/ICBCZXR3ZWVuIGEgbGFyZ2VyIHRoaW5nIGFuZCBhIHNtYWxsZXIgdGhpbmcgdGhlcmUgaXMgaW5jcmVtZW50IGFuZCBkaW1pbnV0aW9uIGFuZCB3ZSBjYWxsIG9uZSBpbmNyZWFzaW5nIGFuZCB0aGUgb3RoZXIgZGVjcmVhc2luZywgZG8gd2Ugbm90P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMs4oCdIHNhaWQgaGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCBzaW1pbGFybHkgYW5hbHl6aW5nIGFuZCBjb21iaW5pbmcsIGFuZCBjb29saW5nIGFuZCBoZWF0aW5nLCBhbmQgYWxsIG9wcG9zaXRlcyBpbiB0aGUgc2FtZSB3YXkuICBFdmVuIGlmIHdlIGRvIG5vdCBpbiBldmVyeSBjYXNlIGhhdmUgdGhlIHdvcmRzIHRvIGV4cHJlc3MgaXQsIHlldCBpbiBmYWN0IGlzIGl0IG5vdCBhbHdheXMgaW5ldml0YWJsZSB0aGF0IHRoZXJlIGlzIGEgcHJvY2VzcyBvZiBnZW5lcmF0aW9uIGZyb20gZWFjaCB0byB0aGUgb3RoZXI/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seSzigJ0gc2FpZCBoZS4KPC90cmFuc2xhdGlvbj4="
translation['71.71c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MWMiIHVuaXQ9InNlY3Rpb24iIC8+4oCcV2VsbCB0aGVuLOKAnSBzYWlkIFNvY3JhdGVzLCDigJxpcyB0aGVyZSBhbnl0aGluZyB0aGF0IGlzIHRoZSBvcHBvc2l0ZSBvZiBsaXZpbmcsIGFzIGJlaW5nIGF3YWtlIGlzIHRoZSBvcHBvc2l0ZSBvZiBzbGVlcGluZz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LOKAnSBzYWlkIENlYmVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXaGF0P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCZWluZyBkZWFkLOKAnSBzYWlkIGhlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIHRoZXNlIHR3byBhcmUgZ2VuZXJhdGVkIGZyb20gZWFjaCBvdGhlciwgYW5kIGFzIHRoZXkgYXJlIHR3bywgc28gdGhlIHByb2Nlc3NlcyBiZXR3ZWVuIHRoZW0gYXJlIHR3bzsgIGlzIGl0IG5vdCBzbz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcT2YgY291cnNlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cs4oCdIHNhaWQgU29jcmF0ZXMsIOKAnEkgd2lsbCB0ZWxsIGFib3V0IG9uZSBvZiB0aGUgdHdvIHBhaXJzIG9mIHdoaWNoIEkganVzdCBzcG9rZSB0byB5b3UgYW5kIGl0cyBpbnRlcm1lZGlhdGUgcHJvY2Vzc2VzOyAgYW5kIGRvIHlvdSB0ZWxsIG1lIGFib3V0IHRoZSBvdGhlci4gIEkgc2F5IG9uZSB0ZXJtIGlzIHNsZWVwaW5nIGFuZCB0aGUgb3RoZXIgaXMgYmVpbmcgYXdha2UsIGFuZCBiZWluZyBhd2FrZSBpcyBnZW5lcmF0ZWQgZnJvbSBzbGVlcGluZywgYW5kIHNsZWVwaW5nIGZyb20gYmVpbmcgYXdha2UsCjwvdHJhbnNsYXRpb24+"
translation['71.71d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MWQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoZSBwcm9jZXNzZXMgb2YgZ2VuZXJhdGlvbiBhcmUsIGluIHRoZSBsYXR0ZXIgY2FzZSwgZmFsbGluZyBhc2xlZXAsIGFuZCBpbiB0aGUgZm9ybWVyLCB3YWtpbmcgdXAuICBEbyB5b3UgYWdyZWUsIG9yIG5vdD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgZG8geW91LOKAnSBzYWlkIGhlLCDigJx0ZWxsIG1lIGluIHRoaXMgd2F5IGFib3V0IGxpZmUgYW5kIGRlYXRoLiAgRG8geW91IG5vdCBzYXkgdGhhdCBsaXZpbmcgaXMgdGhlIG9wcG9zaXRlIG9mIGJlaW5nIGRlYWQ/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEkgZG8u4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCB0aGF0IHRoZXkgYXJlIGdlbmVyYXRlZCBvbmUgZnJvbSB0aGUgb3RoZXI/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFllcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IHdoYXQgaXMgaXQgd2hpY2ggaXMgZ2VuZXJhdGVkIGZyb20gdGhlIGxpdmluZz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlIGRlYWQs4oCdIHNhaWQgaGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCB3aGF0LOKAnSBzYWlkIFNvY3JhdGVzLCDigJxmcm9tIHRoZSBkZWFkP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIGNhbiBzYXkgb25seSBvbmUgdGhpbmfigJR0aGUgbGl2aW5nLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxGcm9tIHRoZSBkZWFkLCB0aGVuLCBDZWJlcywgdGhlIGxpdmluZywgYm90aCB0aGluZ3MgYW5kIHBlcnNvbnMsCjwvdHJhbnNsYXRpb24+"
translation['71.71e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MWUiIHVuaXQ9InNlY3Rpb24iIC8+YXJlIGdlbmVyYXRlZD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRXZpZGVudGx5LOKAnSBzYWlkIGhlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuLOKAnSBzYWlkIFNvY3JhdGVzLCDigJxvdXIgc291bHMgZXhpc3QgaW4gdGhlIG90aGVyIHdvcmxkLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxTbyBpdCBzZWVtcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIG9mIHRoZSB0d28gcHJvY2Vzc2VzIG9mIGdlbmVyYXRpb24gYmV0d2VlbiB0aGVzZSB0d28sIHRoZSBvbmUgaXMgcGxhaW4gdG8gYmUgc2VlbjsgIGZvciBzdXJlbHkgZHlpbmcgaXMgcGxhaW4gdG8gYmUgc2VlbiwgaXMgaXQgbm90P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHks4oCdIHNhaWQgaGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdlbGwgdGhlbizigJ0gc2FpZCBTb2NyYXRlcywg4oCcd2hhdCBzaGFsbCB3ZSBkbyBuZXh0PyAgU2hhbGwgd2UgZGVueSB0aGUgb3Bwb3NpdGUgcHJvY2VzcywgYW5kIHNoYWxsIG5hdHVyZSBiZSBvbmUtc2lkZWQgaW4gdGhpcyBpbnN0YW5jZT8gIE9yIG11c3Qgd2UgZ3JhbnQgdGhhdCB0aGVyZSBpcyBzb21lIHByb2Nlc3Mgb2YgZ2VuZXJhdGlvbiB0aGUgb3Bwb3NpdGUgb2YgZHlpbmc/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seSB3ZSBtdXN0LOKAnSBzYWlkIGhlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXaGF0IGlzIHRoaXMgcHJvY2Vzcz8nJzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDb21pbmcgdG8gbGlmZSBhZ2Fpbi7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbizigJ0gc2FpZCBTb2NyYXRlcywg4oCcaWYgdGhlcmUgYmUgc3VjaCBhIHRoaW5nIGFzCjwvdHJhbnNsYXRpb24+"
translation['72.72a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNzJhIiB1bml0PSJzZWN0aW9uIiAvPmNvbWluZyB0byBsaWZlIGFnYWluLCB0aGlzIHdvdWxkIGJlIHRoZSBwcm9jZXNzIG9mIGdlbmVyYXRpb24gZnJvbSB0aGUgZGVhZCB0byB0aGUgbGl2aW5nP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFNvIGJ5IHRoaXMgbWV0aG9kIGFsc28gd2UgcmVhY2ggdGhlIGNvbmNsdXNpb24gdGhhdCB0aGUgbGl2aW5nIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgZGVhZCwganVzdCBhcyBtdWNoIGFzIHRoZSBkZWFkIGZyb20gdGhlIGxpdmluZzsgIGFuZCBzaW5jZSB0aGlzIGlzIHRoZSBjYXNlLCBpdCBzZWVtcyB0byBtZSB0byBiZSBhIHN1ZmZpY2llbnQgcHJvb2YgdGhhdCB0aGUgc291bHMgb2YgdGhlIGRlYWQgZXhpc3Qgc29tZXdoZXJlLCB3aGVuY2UgdGhleSBjb21lIGJhY2sgdG8gbGlmZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSB0aGluaywgU29jcmF0ZXMsIHRoYXQgcmVzdWx0cyBuZWNlc3NhcmlseSBmcm9tIG91ciBwcmV2aW91cyBhZG1pc3Npb25zLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgaGVyZSBpcyBhbm90aGVyIG1ldGhvZCwgQ2ViZXMsIHRvIHByb3ZlLCBhcyBpdCBzZWVtcyB0byBtZSwgdGhhdCB3ZSB3ZXJlIHJpZ2h0IGluIG1ha2luZyB0aG9zZSBhZG1pc3Npb25zLgo8L3RyYW5zbGF0aW9uPg=="
translation['72.72b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MmIiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIGlmIGdlbmVyYXRpb24gZGlkIG5vdCBwcm9jZWVkIGZyb20gb3Bwb3NpdGUgdG8gb3Bwb3NpdGUgYW5kIGJhY2sgYWdhaW4sIGdvaW5nIHJvdW5kLCBhcyBpdCB3ZXJlIGluIGEgY2lyY2xlLCBidXQgYWx3YXlzIHdlbnQgZm9yd2FyZCBpbiBhIHN0cmFpZ2h0IGxpbmUgd2l0aG91dCB0dXJuaW5nIGJhY2sgb3IgY3VydmluZywgdGhlbiwgeW91IGtub3csIGluIHRoZSBlbmQgYWxsIHRoaW5ncyB3b3VsZCBoYXZlIHRoZSBzYW1lIGZvcm0gYW5kIGJlIGFjdGVkIHVwb24gaW4gdGhlIHNhbWUgd2F5IGFuZCBzdG9wIGJlaW5nIGdlbmVyYXRlZCBhdCBhbGwu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdoYXQgZG8geW91IG1lYW4/4oCdIHNhaWQgaGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEl0IGlzIG5vdCBhdCBhbGwgaGFyZCzigJ0gc2FpZCBTb2NyYXRlcywg4oCcdG8gdW5kZXJzdGFuZCB3aGF0IEkgbWVhbi4gIEZvciBleGFtcGxlLCBpZiB0aGUgcHJvY2VzcyBvZiBmYWxsaW5nIGFzbGVlcCBleGlzdGVkLCBidXQgbm90IHRoZSBvcHBvc2l0ZSBwcm9jZXNzIG9mIHdha2luZyBmcm9tIHNsZWVwLAo8L3RyYW5zbGF0aW9uPg=="
translation['72.72c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MmMiIHVuaXQ9InNlY3Rpb24iIC8+aW4gdGhlIGVuZCwgeW91IGtub3csIHRoYXQgd291bGQgbWFrZSB0aGUgc2xlZXBpbmcgRW5keW1pb24gbWVyZSBub25zZW5zZTsgIGhlIHdvdWxkIGJlIG5vd2hlcmUsIGZvciBldmVyeXRoaW5nIGVsc2Ugd291bGQgYmUgaW4gdGhlIHNhbWUgc3RhdGUgYXMgaGUsIHNvdW5kIGFzbGVlcC4gIE9yIGlmIGFsbCB0aGluZyB3ZXJlIG1peGVkIHRvZ2V0aGVyIGFuZCBuZXZlciBzZXBhcmF0ZWQsIHRoZSBzYXlpbmcgb2YgQW5heGFnb3JhcywgYWxsIHRoaW5ncyBhcmUgY2hhb3MsIHdvdWxkIHNvb24gY29tZSB0cnVlLiAgQW5kIGluIGxpa2UgbWFubmVyLCBteSBkZWFyIENlYmVzLCBpZiBhbGwgdGhpbmdzIHRoYXQgaGF2ZSBsaWZlIHNob3VsZCBkaWUsIGFuZCwgd2hlbiB0aGV5IGhhZCBkaWVkLCB0aGUgZGVhZCBzaG91bGQgcmVtYWluIGluIHRoYXQgY29uZGl0aW9uLCBpcyBpdCBub3QgaW5ldml0YWJsZSB0aGF0IGF0IGxhc3QgYWxsIHRoaW5ncyB3b3VsZCBiZSBkZWFkCjwvdHJhbnNsYXRpb24+"
translation['72.72d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MmQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIG5vdGhpbmcgYWxpdmU/IEZvciBpZiB0aGUgbGl2aW5nIHdlcmUgZ2VuZXJhdGVkIGZyb20gYW55IG90aGVyIHRoaW5ncyB0aGFuIGZyb20gdGhlIGRlYWQsIGFuZCB0aGUgbGl2aW5nIHdlcmUgdG8gZGllLCBpcyB0aGVyZSBhbnkgZXNjYXBlIGZyb20gdGhlIGZpbmFsIHJlc3VsdCB0aGF0IGFsbCB0aGluZ3Mgd291bGQgYmUgc3dhbGxvd2VkIHVwIGluIGRlYXRoP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIHNlZSBub25lLCBTb2NyYXRlcyzigJ0gc2FpZCBDZWJlcy4gIOKAnFdoYXQgeW91IHNheSBzZWVtcyB0byBiZSBwZXJmZWN0bHkgdHJ1ZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSB0aGluaywgQ2ViZXMs4oCdIHNhaWQgaGUsIOKAnGl0IGlzIGFic29sdXRlbHkgc28sIGFuZCB3ZSBhcmUgbm90IGRlbHVkZWQgaW4gbWFraW5nIHRoZXNlIGFkbWlzc2lvbnMsIGJ1dCB0aGUgcmV0dXJuIHRvIGxpZmUgaXMgYW4gYWN0dWFsIGZhY3QsIGFuZCBpdCBpcyBhIGZhY3QgdGhhdCB0aGUgbGl2aW5nIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgZGVhZCBhbmQgdGhhdCB0aGUgc291bHMgb2YgdGhlIGRlYWQKPC90cmFuc2xhdGlvbj4="
translation['72.72e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MmUiIHVuaXQ9InNlY3Rpb24iIC8+ZXhpc3Qu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCBiZXNpZGVzLOKAnSBDZWJlcyByZWpvaW5lZCwg4oCcaWYgaXQgaXMgdHJ1ZSwgU29jcmF0ZXMsIGFzIHlvdSBhcmUgZm9uZCBvZiBzYXlpbmcsIHRoYXQgb3VyIGxlYXJuaW5nIGlzIG5vdGhpbmcgZWxzZSB0aGFuIHJlY29sbGVjdGlvbiwgdGhlbiB0aGlzIHdvdWxkIGJlIGFuIGFkZGl0aW9uYWwgYXJndW1lbnQgdGhhdCB3ZSBtdXN0IG5lY2Vzc2FyaWx5IGhhdmUgbGVhcm5lZCBpbiBzb21lIHByZXZpb3VzIHRpbWUgd2hhdCB3ZSBub3cgcmVtZW1iZXIuICBCdXQgdGhpcyBpcyBpbXBvc3NpYmxlIGlmCjwvdHJhbnNsYXRpb24+"
translation['73.73a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3MyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNzNhIiB1bml0PSJzZWN0aW9uIiAvPm91ciBzb3VsIGRpZCBub3QgZXhpc3Qgc29tZXdoZXJlIGJlZm9yZSBiZWluZyBib3JuIGluIHRoaXMgaHVtYW4gZm9ybTsgIGFuZCBzbyBieSB0aGlzIGFyZ3VtZW50IGFsc28gaXQgYXBwZWFycyB0aGF0IHRoZSBzb3VsIGlzIGltbW9ydGFsLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQsIENlYmVzLOKAnSBzYWlkIFNpbW1pYXMsIOKAnHdoYXQgd2VyZSB0aGUgcHJvb2ZzIG9mIHRoaXM/ICBSZW1pbmQgbWU7ICBmb3IgSSBkbyBub3QgcmVjb2xsZWN0IHZlcnkgd2VsbCBqdXN0IG5vdy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnJpZWZseSzigJ0gc2FpZCBDZWJlcywg4oCcYSB2ZXJ5IGdvb2QgcHJvb2YgaXMgdGhpczogIFdoZW4gcGVvcGxlIGFyZSBxdWVzdGlvbmVkLCBpZiB5b3UgcHV0IHRoZSBxdWVzdGlvbnMgd2VsbCwgdGhleSBhbnN3ZXIgY29ycmVjdGx5IG9mIHRoZW1zZWx2ZXMgYWJvdXQgZXZlcnl0aGluZzsgIGFuZCB5ZXQgaWYgdGhleSBoYWQgbm90IHdpdGhpbiB0aGVtIHNvbWUga25vd2xlZGdlIGFuZCByaWdodCByZWFzb24sIHRoZXkgY291bGQgbm90IGRvIHRoaXMuICBBbmQgdGhhdCB0aGlzIGlzIHNvIGlzIHNob3duIG1vc3QgY2xlYXJseSBpZiB5b3UgdGFrZSB0aGVtCjwvdHJhbnNsYXRpb24+"
translation['73.73b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3M2IiIHVuaXQ9InNlY3Rpb24iIC8+dG8gbWF0aGVtYXRpY2FsIGRpYWdyYW1zIG9yIGFueXRoaW5nIG9mIHRoYXQgc29ydC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIGlmIHlvdSBhcmUgbm90IGNvbnZpbmNlZCBpbiB0aGF0IHdheSwgU2ltbWlhcyzigJ0gc2FpZCBTb2NyYXRlcywg4oCcc2VlIGlmIHlvdSBkb24ndCBhZ3JlZSB3aGVuIHlvdSBsb29rIGF0IGl0IGluIHRoaXMgd2F5LiAgWW91IGFyZSBpbmNyZWR1bG91cywgYXJlIHlvdSBub3QsIGhvdyB0aGF0IHdoaWNoIGlzIGNhbGxlZCBsZWFybmluZyBjYW4gYmUgcmVjb2xsZWN0aW9uP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIGFtIG5vdCBpbmNyZWR1bG91cyzigJ0gc2FpZCBTaW1taWFzLCDigJxidXQgSSB3YW50IGp1c3Qgd2hhdCB3ZSBhcmUgdGFsa2luZyBhYm91dCwgcmVjb2xsZWN0aW9uLiAgQW5kIGZyb20gd2hhdCBDZWJlcyB1bmRlcnRvb2sgdG8gc2F5IEkgYWxyZWFkeSBiZWdpbiB0byByZWNvbGxlY3QgYW5kIGJlIGNvbnZpbmNlZDsgIG5ldmVydGhlbGVzcywgSSBzaG91bGQgbGlrZSB0byBoZWFyCjwvdHJhbnNsYXRpb24+"
translation['73.73c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3M2MiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCB5b3Ugd2VyZSBnb2luZyB0byBzYXku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEl0IHdhcyB0aGlzLOKAnSBzYWlkIGhlLiAg4oCcV2UgYWdyZWUsIEkgc3VwcG9zZSwgdGhhdCBpZiBhbnlvbmUgaXMgdG8gcmVtZW1iZXIgYW55dGhpbmcsIGhlIG11c3Qga25vdyBpdCBhdCBzb21lIHByZXZpb3VzIHRpbWU/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seSzigJ0gc2FpZCBoZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiBkbyB3ZSBhZ3JlZSB0byB0aGlzIGFsc28sIHRoYXQgd2hlbiBrbm93bGVkZ2UgY29tZXMgaW4gc3VjaCBhIHdheSwgaXQgaXMgcmVjb2xsZWN0aW9uPyAgV2hhdCBJIG1lYW4gaXMgdGhpczogIElmIGEgbWFuLCB3aGVuIGhlIGhhcyBoZWFyZCBvciBzZWVuIG9yIGluIGFueSBvdGhlciB3YXkgcGVyY2VpdmVkIGEgdGhpbmcsIGtub3dzIG5vdCBvbmx5IHRoYXQgdGhpbmcsIGJ1dCBhbHNvIGhhcyBhIHBlcmNlcHRpb24gb2Ygc29tZSBvdGhlciB0aGluZywgdGhlIGtub3dsZWRnZSBvZiB3aGljaCBpcyBub3QgdGhlIHNhbWUsIGJ1dCBkaWZmZXJlbnQsIGFyZSB3ZSBub3QgcmlnaHQgaW4gc2F5aW5nIHRoYXQKPC90cmFuc2xhdGlvbj4="
translation['73.73d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3M2QiIHVuaXQ9InNlY3Rpb24iIC8+aGUgcmVjb2xsZWN0cyB0aGUgdGhpbmcgb2Ygd2hpY2ggaGUgaGFzIHRoZSBwZXJjZXB0aW9uP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXaGF0IGRvIHlvdSBtZWFuP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxMZXQgbWUgZ2l2ZSBhbiBleGFtcGxlLiAgS25vd2xlZGdlIG9mIGEgbWFuIGlzIGRpZmZlcmVudCBmcm9tIGtub3dsZWRnZSBvZiBhIGx5cmUu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE9mIGNvdXJzZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCwgeW91IGtub3cgdGhhdCBhIGxvdmVyIHdoZW4gaGUgc2VlcyBhIGx5cmUgb3IgYSBjbG9hayBvciBhbnl0aGluZyBlbHNlIHdoaWNoIGhpcyBiZWxvdmVkIGlzIHdvbnQgdG8gdXNlLCBwZXJjZWl2ZXMgdGhlIGx5cmUgYW5kIGluIGhpcyBtaW5kIHJlY2VpdmVzIGFuIGltYWdlIG9mIHRoZSBib3kgdG8gd2hvbSB0aGUgbHlyZSBiZWxvbmdzLCBkbyB5b3Ugbm90PyAgQnV0IHRoaXMgaXMgcmVjb2xsZWN0aW9uLCBqdXN0IGFzIHdoZW4gb25lIHNlZXMgU2ltbWlhcywgb25lIG9mdGVuIHJlbWVtYmVycyBDZWJlcywgYW5kIEkgY291bGQgY2l0ZSBjb3VudGxlc3Mgc3VjaCBleGFtcGxlcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVG8gYmUgc3VyZSB5b3UgY291bGQs4oCdIHNhaWQgU2ltbWlhcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93LOKAnSBzYWlkIGhlLAo8L3RyYW5zbGF0aW9uPg=="
translation['73.73e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3M2UiIHVuaXQ9InNlY3Rpb24iIC8+4oCcaXMgdGhhdCBzb3J0IG9mIHRoaW5nIGEga2luZCBvZiByZWNvbGxlY3Rpb24/IEVzcGVjaWFsbHkgd2hlbiBpdCB0YWtlcyBwbGFjZSB3aXRoIHJlZ2FyZCB0byB0aGluZ3Mgd2hpY2ggaGF2ZSBhbHJlYWR5IGJlZW4gZm9yZ290dGVuIHRocm91Z2ggdGltZSBhbmQgaW5hdHRlbnRpb24/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seSzigJ0gaGUgcmVwbGllZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCwgdGhlbizigJ0gc2FpZCBTb2NyYXRlcywg4oCcY2FuIGEgcGVyc29uIG9uIHNlZWluZyBhIHBpY3R1cmUgb2YgYSBob3JzZSBvciBvZiBhIGx5cmUgYmUgcmVtaW5kZWQgb2YgYSBtYW4sIG9yIG9uIHNlZWluZyBhIHBpY3R1cmUgb2YgU2ltbWlhcyBiZSByZW1pbmRlZCBvZiBDZWJlcz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcU3VyZWx5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgb24gc2VlaW5nIGEgcGljdHVyZSBvZiBTaW1taWFzIGhlIGNhbiBiZSByZW1pbmRlZAo8L3RyYW5zbGF0aW9uPg=="
translation['74.74a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNzRhIiB1bml0PSJzZWN0aW9uIiAvPm9mIFNpbW1pYXMgaGltc2VsZj/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLOKAnSBzYWlkIGhlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbGwgdGhlc2UgZXhhbXBsZXMgc2hvdywgdGhlbiwgdGhhdCByZWNvbGxlY3Rpb24gaXMgY2F1c2VkIGJ5IGxpa2UgdGhpbmdzIGFuZCBhbHNvIGJ5IHVubGlrZSB0aGluZ3MsIGRvIHRoZXkgbm90P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCB3aGVuIG9uZSBoYXMgYSByZWNvbGxlY3Rpb24gb2YgYW55dGhpbmcgY2F1c2VkIGJ5IGxpa2UgdGhpbmdzLCB3aWxsIGhlIG5vdCBhbHNvIGluZXZpdGFibHkgY29uc2lkZXIgd2hldGhlciB0aGlzIHJlY29sbGVjdGlvbiBvZmZlcnMgYSBwZXJmZWN0IGxpa2VuZXNzIG9mIHRoZSB0aGluZyByZWNvbGxlY3RlZCwgb3Igbm90P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJbmV2aXRhYmx5LOKAnSBoZSByZXBsaWVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgc2VlLOKAnSBzYWlkIGhlLCDigJxpZiB0aGlzIGlzIHRydWUuICBXZSBzYXkgdGhlcmUgaXMgc3VjaCBhIHRoaW5nIGFzIGVxdWFsaXR5LiAgSSBkbyBub3QgbWVhbiBvbmUgcGllY2Ugb2Ygd29vZCBlcXVhbCB0byBhbm90aGVyLCBvciBvbmUgc3RvbmUgdG8gYW5vdGhlciwgb3IgYW55dGhpbmcgb2YgdGhhdCBzb3J0LCBidXQgc29tZXRoaW5nIGJleW9uZCB0aGF04oCUZXF1YWxpdHkgaW4gdGhlIGFic3RyYWN0LiAgU2hhbGwgd2Ugc2F5IHRoZXJlIGlzIHN1Y2ggYSB0aGluZywgb3Igbm90P+KAnQo8L3RyYW5zbGF0aW9uPg=="
translation['74.74b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NGIiIHVuaXQ9InNlY3Rpb24iIC8+4oCcV2Ugc2hhbGwgc2F5IHRoYXQgdGhlcmUgaXMs4oCdIHNhaWQgU2ltbWlhcywg4oCcbW9zdCBkZWNpZGVkbHku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCBkbyB3ZSBrbm93IHdoYXQgaXQgaXM/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seSzigJ0gc2FpZCBoZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2hlbmNlIGRpZCB3ZSBkZXJpdmUgdGhlIGtub3dsZWRnZSBvZiBpdD8gIElzIGl0IG5vdCBmcm9tIHRoZSB0aGluZ3Mgd2Ugd2VyZSBqdXN0IHNwZWFraW5nIG9mPyAgRGlkIHdlIG5vdCwgYnkgc2VlaW5nIGVxdWFsIHBpZWNlcyBvZiB3b29kIG9yIHN0b25lcyBvciBvdGhlciB0aGluZ3MsIGRlcml2ZSBmcm9tIHRoZW0gYSBrbm93bGVkZ2Ugb2YgYWJzdHJhY3QgZXF1YWxpdHksIHdoaWNoIGlzIGFub3RoZXIgdGhpbmc/IE9yIGRvIHlvdSBub3QgdGhpbmsgaXQgaXMgYW5vdGhlciB0aGluZz8gIExvb2sgYXQgdGhlIG1hdHRlciBpbiB0aGlzIHdheS4gIERvIG5vdCBlcXVhbCBzdG9uZXMgYW5kIHBpZWNlcyBvZiB3b29kLCB0aG91Z2ggdGhleSByZW1haW4gdGhlIHNhbWUsIHNvbWV0aW1lcyBhcHBlYXIgdG8gdXMgZXF1YWwgaW4gb25lIHJlc3BlY3QgYW5kIHVuZXF1YWwgaW4gYW5vdGhlcj/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLCB0aGVuLCBkaWQgYWJzb2x1dGUgZXF1YWxzIGV2ZXIgYXBwZWFyIHRvIHlvdSB1bmVxdWFsIG9yCjwvdHJhbnNsYXRpb24+"
translation['74.74c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NGMiIHVuaXQ9InNlY3Rpb24iIC8+ZXF1YWxpdHkgaW5lcXVhbGl0eT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm8sIFNvY3JhdGVzLCBuZXZlci7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbizigJ0gc2FpZCBoZSwg4oCcdGhvc2UgZXF1YWxzIGFyZSBub3QgdGhlIHNhbWUgYXMgZXF1YWxpdHkgaW4gdGhlIGFic3RyYWN0LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3QgYXQgYWxsLCBJIHNob3VsZCBzYXksIFNvY3JhdGVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQgZnJvbSB0aG9zZSBlcXVhbHMs4oCdIHNhaWQgaGUsIOKAnHdoaWNoIGFyZSBub3QgdGhlIHNhbWUgYXMgYWJzdHJhY3QgZXF1YWxpdHksIHlvdSBoYXZlIG5ldmVydGhlbGVzcyBjb25jZWl2ZWQgYW5kIGFjcXVpcmVkIGtub3dsZWRnZSBvZiBpdD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVmVyeSB0cnVlLOKAnSBoZSByZXBsaWVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgaXQgaXMgZWl0aGVyIGxpa2UgdGhlbSBvciB1bmxpa2UgdGhlbT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJdCBtYWtlcyBubyBkaWZmZXJlbmNlLOKAnSBzYWlkIGhlLiAg4oCcV2hlbmV2ZXIgdGhlIHNpZ2h0IG9mIG9uZSB0aGluZwo8L3RyYW5zbGF0aW9uPg=="
translation['74.74d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NGQiIHVuaXQ9InNlY3Rpb24iIC8+YnJpbmdzIHlvdSBhIHBlcmNlcHRpb24gb2YgYW5vdGhlciwgd2hldGhlciB0aGV5IGJlIGxpa2Ugb3IgdW5saWtlLCB0aGF0IG11c3QgbmVjZXNzYXJpbHkgYmUgcmVjb2xsZWN0aW9uLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxTdXJlbHku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vdyB0aGVuLOKAnSBzYWlkIGhlLCDigJxkbyB0aGUgZXF1YWwgcGllY2VzIG9mIHdvb2QgYW5kIHRoZSBlcXVhbCB0aGluZ3Mgb2Ygd2hpY2ggd2Ugd2VyZSBzcGVha2luZyBqdXN0IG5vdyBhZmZlY3QgdXMgaW4gdGhpcyB3YXk6ICBEbyB0aGV5IHNlZW0gdG8gdXMgdG8gYmUgZXF1YWwgYXMgYWJzdHJhY3QgZXF1YWxpdHkgaXMgZXF1YWwsIG9yIGRvIHRoZXkgc29tZWhvdyBmYWxsIHNob3J0IG9mIGJlaW5nIGxpa2UgYWJzdHJhY3QgZXF1YWxpdHk/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZXkgZmFsbCB2ZXJ5IGZhciBzaG9ydCBvZiBpdCzigJ0gc2FpZCBoZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRG8gd2UgYWdyZWUsIHRoZW4sIHRoYXQgd2hlbiBhbnlvbmUgb24gc2VlaW5nIGEgdGhpbmcgdGhpbmtzLCAnVGhpcyB0aGluZyB0aGF0IEkgc2VlIGFpbXMgYXQgYmVpbmcgbGlrZSBzb21lIG90aGVyIHRoaW5nIHRoYXQgZXhpc3RzLCBidXQgZmFsbHMgc2hvcnQKPC90cmFuc2xhdGlvbj4="
translation['74.74e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NGUiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGlzIHVuYWJsZSB0byBiZSBsaWtlIHRoYXQgdGhpbmcsIGJ1dCBpcyBpbmZlcmlvciB0byBpdCwgaGUgd2hvIHRoaW5rcyB0aHVzIG11c3Qgb2YgbmVjZXNzaXR5IGhhdmUgcHJldmlvdXMga25vd2xlZGdlIG9mIHRoZSB0aGluZyB3aGljaCBoZSBzYXlzIHRoZSBvdGhlciByZXNlbWJsZXMgYnV0IGZhbGxzIHNob3J0IG9mP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZSBtdXN0LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsIHRoZW4sIGlzIHRoaXMganVzdCB3aGF0IGhhcHBlbmVkIHRvIHVzIHdpdGggcmVnYXJkIHRvIHRoZSBlcXVhbCB0aGluZ3MgYW5kIGVxdWFsaXR5IGluIHRoZSBhYnN0cmFjdD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSXQgY2VydGFpbmx5IGlzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIHdlIG11c3QgaGF2ZSBoYWQga25vd2xlZGdlIG9mIGVxdWFsaXR5CjwvdHJhbnNsYXRpb24+"
translation['75.75a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNzVhIiB1bml0PSJzZWN0aW9uIiAvPmJlZm9yZSB0aGUgdGltZSB3aGVuIHdlIGZpcnN0IHNhdyBlcXVhbCB0aGluZ3MgYW5kIHRob3VnaHQsIOKAmEFsbCB0aGVzZSB0aGluZ3MgYXJlIGFpbWluZyB0byBiZSBsaWtlIGVxdWFsaXR5IGJ1dCBmYWxsIHNob3J0LuKAmeKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGF0IGlzIHRydWUu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCB3ZSBhZ3JlZSwgYWxzbywgdGhhdCB3ZSBoYXZlIG5vdCBnYWluZWQga25vd2xlZGdlIG9mIGl0LCBhbmQgdGhhdCBpdCBpcyBpbXBvc3NpYmxlIHRvIGdhaW4gdGhpcyBrbm93bGVkZ2UsIGV4Y2VwdCBieSBzaWdodCBvciB0b3VjaCBvciBzb21lIG90aGVyIG9mIHRoZSBzZW5zZXM/ICBJIGNvbnNpZGVyIHRoYXQgYWxsIHRoZSBzZW5zZXMgYXJlIGFsaWtlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMsIFNvY3JhdGVzLCB0aGV5IGFyZSBhbGwgYWxpa2UsIGZvciB0aGUgcHVycG9zZXMgb2Ygb3VyIGFyZ3VtZW50LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIGl0IGlzIHRocm91Z2ggdGhlIHNlbnNlcyB0aGF0IHdlIG11c3QgbGVhcm4KPC90cmFuc2xhdGlvbj4="
translation['75.75b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NWIiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBhbGwgc2Vuc2libGUgb2JqZWN0cyBzdHJpdmUgYWZ0ZXIgYWJzb2x1dGUgZXF1YWxpdHkgYW5kIGZhbGwgc2hvcnQgb2YgaXQuICBJcyB0aGF0IG91ciB2aWV3P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4gYmVmb3JlIHdlIGJlZ2FuIHRvIHNlZSBvciBoZWFyIG9yIHVzZSB0aGUgb3RoZXIgc2Vuc2VzIHdlIG11c3Qgc29tZXdoZXJlIGhhdmUgZ2FpbmVkIGEga25vd2xlZGdlIG9mIGFic3RyYWN0IG9yIGFic29sdXRlIGVxdWFsaXR5LCBpZiB3ZSB3ZXJlIHRvIGNvbXBhcmUgd2l0aCBpdCB0aGUgZXF1YWxzIHdoaWNoIHdlIHBlcmNlaXZlIGJ5IHRoZSBzZW5zZXMsIGFuZCBzZWUgdGhhdCBhbGwgc3VjaCB0aGluZ3MgeWVhcm4gdG8gYmUgbGlrZSBhYnN0cmFjdCBlcXVhbGl0eSBidXQgZmFsbCBzaG9ydCBvZiBpdC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhhdCBmb2xsb3dzIG5lY2Vzc2FyaWx5IGZyb20gd2hhdCB3ZSBoYXZlIHNhaWQgYmVmb3JlLCBTb2NyYXRlcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHdlIHNhdyBhbmQgaGVhcmQgYW5kIGhhZCB0aGUgb3RoZXIgc2Vuc2VzIGFzIHNvb24gYXMgd2Ugd2VyZSBib3JuP+KAnQo8L3RyYW5zbGF0aW9uPg=="
translation['75.75c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NWMiIHVuaXQ9InNlY3Rpb24iIC8+4oCcQ2VydGFpbmx5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQsIHdlIHNheSwgd2UgbXVzdCBoYXZlIGFjcXVpcmVkIGEga25vd2xlZGdlIG9mIGVxdWFsaXR5IGJlZm9yZSB3ZSBoYWQgdGhlc2Ugc2Vuc2VzP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4gaXQgYXBwZWFycyB0aGF0IHdlIG11c3QgaGF2ZSBhY3F1aXJlZCBpdCBiZWZvcmUgd2Ugd2VyZSBib3JuLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJdCBkb2VzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgaWYgd2UgaGFkIGFjcXVpcmVkIHRoYXQga25vd2xlZGdlIGJlZm9yZSB3ZSB3ZXJlIGJvcm4sIGFuZCB3ZXJlIGJvcm4gd2l0aCBpdCwgd2Uga25ldyBiZWZvcmUgd2Ugd2VyZSBib3JuIGFuZCBhdCB0aGUgbW9tZW50IG9mIGJpcnRoIG5vdCBvbmx5IHRoZSBlcXVhbCBhbmQgdGhlIGdyZWF0ZXIgYW5kIHRoZSBsZXNzLCBidXQgYWxsIHN1Y2ggYWJzdHJhY3Rpb25zPyBGb3Igb3VyIHByZXNlbnQgYXJndW1lbnQgaXMgbm8gbW9yZSBjb25jZXJuZWQgd2l0aCB0aGUgZXF1YWwgdGhhbiB3aXRoIGFic29sdXRlIGJlYXV0eSBhbmQgdGhlIGFic29sdXRlIGdvb2QgYW5kIHRoZSBqdXN0IGFuZCB0aGUgaG9seSwgYW5kLCBpbiBzaG9ydCwKPC90cmFuc2xhdGlvbj4="
translation['75.75d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NWQiIHVuaXQ9InNlY3Rpb24iIC8+d2l0aCBhbGwgdGhvc2UgdGhpbmdzIHdoaWNoIHdlIHN0YW1wIHdpdGggdGhlIHNlYWwgb2YgYWJzb2x1dGUgaW4gb3VyIGRpYWxlY3RpYyBwcm9jZXNzIG9mIHF1ZXN0aW9ucyBhbmQgYW5zd2VyczsgIHNvIHRoYXQgd2UgbXVzdCBuZWNlc3NhcmlseSBoYXZlIGFjcXVpcmVkIGtub3dsZWRnZSBvZiBhbGwgdGhlc2UgYmVmb3JlIG91ciBiaXJ0aC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhhdCBpcyB0cnVlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgaWYgYWZ0ZXIgYWNxdWlyaW5nIGl0IHdlIGhhdmUgbm90LCBpbiBlYWNoIGNhc2UsIGZvcmdvdHRlbiBpdCwgd2UgbXVzdCBhbHdheXMgYmUgYm9ybiBrbm93aW5nIHRoZXNlIHRoaW5ncywgYW5kIG11c3Qga25vdyB0aGVtIHRocm91Z2hvdXQgb3VyIGxpZmU7ICBmb3IgdG8ga25vdyBpcyB0byBoYXZlIGFjcXVpcmVkIGtub3dsZWRnZSBhbmQgdG8gaGF2ZSByZXRhaW5lZCBpdCB3aXRob3V0IGxvc2luZyBpdCwgYW5kIHRoZSBsb3NzIG9mIGtub3dsZWRnZSBpcyBqdXN0IHdoYXQgd2UgbWVhbiB3aGVuIHdlIHNwZWFrIG9mIGZvcmdldHRpbmcsIGlzIGl0IG5vdCwgU2ltbWlhcz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LAo8L3RyYW5zbGF0aW9uPg=="
translation['75.75e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NWUiIHVuaXQ9InNlY3Rpb24iIC8+U29jcmF0ZXMs4oCdIHNhaWQgaGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEJ1dCwgSSBzdXBwb3NlLCBpZiB3ZSBhY3F1aXJlZCBrbm93bGVkZ2UgYmVmb3JlIHdlIHdlcmUgYm9ybiBhbmQgbG9zdCBpdCBhdCBiaXJ0aCwgYnV0IGFmdGVyd2FyZHMgYnkgdGhlIHVzZSBvZiBvdXIgc2Vuc2VzIHJlZ2FpbmVkIHRoZSBrbm93bGVkZ2Ugd2hpY2ggd2UgaGFkIHByZXZpb3VzbHkgcG9zc2Vzc2VkLCB3b3VsZCBub3QgdGhlIHByb2Nlc3Mgd2hpY2ggd2UgY2FsbCBsZWFybmluZyByZWFsbHkgYmUgcmVjb3ZlcmluZyBrbm93bGVkZ2Ugd2hpY2ggaXMgb3VyIG93bj8gQW5kIHNob3VsZCB3ZSBiZSByaWdodCBpbiBjYWxsaW5nIHRoaXMgcmVjb2xsZWN0aW9uP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBc3N1cmVkbHku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEZvciB3ZSBmb3VuZCB0aGF0IGl0IGlzIHBvc3NpYmxlLAo8L3RyYW5zbGF0aW9uPg=="
translation['76.76a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNzZhIiB1bml0PSJzZWN0aW9uIiAvPm9uIHBlcmNlaXZpbmcgYSB0aGluZyBieSB0aGUgc2lnaHQgb3IgdGhlIGhlYXJpbmcgb3IgYW55IG90aGVyIHNlbnNlLCB0byBjYWxsIHRvIG1pbmQgZnJvbSB0aGF0IHBlcmNlcHRpb24gYW5vdGhlciB0aGluZyB3aGljaCBoYWQgYmVlbiBmb3Jnb3R0ZW4sIHdoaWNoIHdhcyBhc3NvY2lhdGVkIHdpdGggdGhlIHRoaW5nIHBlcmNlaXZlZCwgd2hldGhlciBsaWtlIGl0IG9yIHVubGlrZSBpdDsgIHNvIHRoYXQsIGFzIEkgc2FpZCwgb25lIG9mIHR3byB0aGluZ3MgaXMgdHJ1ZSwgZWl0aGVyIHdlIGFyZSBhbGwgYm9ybiBrbm93aW5nIHRoZXNlIHRoaW5ncyBhbmQga25vdyB0aGVtIGFsbCBvdXIgbGl2ZXMsIG9yIGFmdGVyd2FyZHMsIHRob3NlIHdobyBhcmUgc2FpZCB0byBsZWFybiBtZXJlbHkgcmVtZW1iZXIsIGFuZCBsZWFybmluZyB3b3VsZCB0aGVuIGJlIHJlY29sbGVjdGlvbi7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhhdCBpcyBjZXJ0YWlubHkgdHJ1ZSwgU29jcmF0ZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdoaWNoIHRoZW4gZG8geW91IGNob29zZSwgU2ltbWlhcz8gIFdlcmUgd2UgYm9ybgo8L3RyYW5zbGF0aW9uPg=="
translation['76.76b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NmIiIHVuaXQ9InNlY3Rpb24iIC8+d2l0aCB0aGUga25vd2xlZGdlLCBvciBkbyB3ZSByZWNvbGxlY3QgYWZ0ZXJ3YXJkcyB0aGluZ3Mgb2Ygd2hpY2ggd2UgaGFkIGFjcXVpcmVkIGtub3dsZWRnZSBiZWZvcmUgb3VyIGJpcnRoP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIGNhbm5vdCBjaG9vc2UgYXQgdGhpcyBtb21lbnQsIFNvY3JhdGVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxIb3cgYWJvdXQgdGhpcyBxdWVzdGlvbj8gIFlvdSBjYW4gY2hvb3NlIGFuZCB5b3UgaGF2ZSBzb21lIG9waW5pb24gYWJvdXQgaXQ6ICBXaGVuIGEgbWFuIGtub3dzLCBjYW4gaGUgZ2l2ZSBhbiBhY2NvdW50IG9mIHdoYXQgaGUga25vd3Mgb3Igbm90P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHkgaGUgY2FuLCBTb2NyYXRlcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIGRvIHlvdSB0aGluayB0aGF0IGV2ZXJ5Ym9keSBjYW4gZ2l2ZSBhbiBhY2NvdW50IG9mIHRoZSBtYXR0ZXJzIGFib3V0IHdoaWNoIHdlIGhhdmUganVzdCBiZWVuIHRhbGtpbmc/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEkgd2lzaCB0aGV5IG1pZ2h0LOKAnSBzYWlkIFNpbW1pYXM7ICDigJxidXQgb24gdGhlIGNvbnRyYXJ5IEkgZmVhciB0aGF0IHRvbW9ycm93LCBhdCB0aGlzIHRpbWUsIHRoZXJlIHdpbGwgYmUgbm8gbG9uZ2VyIGFueSBtYW4gbGl2aW5nIHdobyBpcyBhYmxlIHRvIGRvIHNvIHByb3Blcmx5LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['76.76c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NmMiIHVuaXQ9InNlY3Rpb24iIC8+4oCcVGhlbiwgU2ltbWlhcywgeW91IGRvIG5vdCB0aGluayBhbGwgbWVuIGtub3cgdGhlc2UgdGhpbmdzP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCeSBubyBtZWFucy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiB0aGV5IHJlY29sbGVjdCB0aGUgdGhpbmdzIHRoZXkgb25jZSBsZWFybmVkP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOZWNlc3NhcmlseS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2hlbiBkaWQgb3VyIHNvdWxzIGFjcXVpcmUgdGhlIGtub3dsZWRnZSBvZiB0aGVtPyAgU3VyZWx5IG5vdCBhZnRlciB3ZSB3ZXJlIGJvcm4gYXMgaHVtYW4gYmVpbmdzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHkgbm90LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIHByZXZpb3VzbHku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFllcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiwgU2ltbWlhcywgdGhlIHNvdWxzIGV4aXN0ZWQgcHJldmlvdXNseSwgYmVmb3JlIHRoZXkgd2VyZSBpbiBodW1hbiBmb3JtLCBhcGFydCBmcm9tIGJvZGllcywgYW5kIHRoZXkgaGFkIGludGVsbGlnZW5jZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVW5sZXNzLCBTb2NyYXRlcywgd2UgYWNxdWlyZSB0aGVzZSBpZGVhcyBhdCB0aGUgbW9tZW50IG9mIGJpcnRoOyAgZm9yIHRoYXQgdGltZQo8L3RyYW5zbGF0aW9uPg=="
translation['76.76d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NmQiIHVuaXQ9InNlY3Rpb24iIC8+c3RpbGwgcmVtYWlucy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVmVyeSB3ZWxsLCBteSBmcmllbmQuICBCdXQgYXQgd2hhdCBvdGhlciB0aW1lIGRvIHdlIGxvc2UgdGhlbT8gIEZvciB3ZSBhcmUgc3VyZWx5IG5vdCBib3JuIHdpdGggdGhlbSwgYXMgd2UganVzdCBub3cgYWdyZWVkLiAgRG8gd2UgbG9zZSB0aGVtIGF0IHRoZSBtb21lbnQgd2hlbiB3ZSByZWNlaXZlIHRoZW0sIG9yIGhhdmUgeW91IHNvbWUgb3RoZXIgdGltZSB0byBzdWdnZXN0P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb25lIHdoYXRldmVyLCBTb2NyYXRlcy4gIEkgZGlkIG5vdCBub3RpY2UgdGhhdCBJIHdhcyB0YWxraW5nIG5vbnNlbnNlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuLCBTaW1taWFzLOKAnSBzYWlkIGhlLCDigJxpcyB0aGlzIHRoZSBzdGF0ZSBvZiB0aGUgY2FzZT8gIElmLCBhcyB3ZSBhcmUgYWx3YXlzIHNheWluZywgdGhlIGJlYXV0aWZ1bCBleGlzdHMsIGFuZCB0aGUgZ29vZCwgYW5kIGV2ZXJ5IGVzc2VuY2Ugb2YgdGhhdCBraW5kLCBhbmQgaWYgd2UgcmVmZXIgYWxsIG91ciBzZW5zYXRpb25zIHRvIHRoZXNlLAo8L3RyYW5zbGF0aW9uPg=="
translation['76.76e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NmUiIHVuaXQ9InNlY3Rpb24iIC8+d2hpY2ggd2UgZmluZCBleGlzdGVkIHByZXZpb3VzbHkgYW5kIGFyZSBub3cgb3VycywgYW5kIGNvbXBhcmUgb3VyIHNlbnNhdGlvbnMgd2l0aCB0aGVzZSwgaXMgaXQgbm90IGEgbmVjZXNzYXJ5IGluZmVyZW5jZSB0aGF0IGp1c3QgYXMgdGhlc2UgYWJzdHJhY3Rpb25zIGV4aXN0LCBzbyBvdXIgc291bHMgZXhpc3RlZCBiZWZvcmUgd2Ugd2VyZSBib3JuOyAgYW5kIGlmIHRoZXNlIGFic3RyYWN0aW9ucyBkbyBub3QgZXhpc3QsIG91ciBhcmd1bWVudCBpcyBvZiBubyBmb3JjZT8gIElzIHRoaXMgdGhlIGNhc2UsIGFuZCBpcyBpdCBlcXVhbGx5IGNlcnRhaW4gdGhhdCBwcm92aWRlZCB0aGVzZSB0aGluZ3MgZXhpc3Qgb3VyIHNvdWxzIGFsc28gZXhpc3RlZCBiZWZvcmUgd2Ugd2VyZSBib3JuLCBhbmQgdGhhdCBpZiB0aGVzZSBkbyBub3QgZXhpc3QsIG5laXRoZXIgZGlkIG91ciBzb3Vscz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcU29jcmF0ZXMsIGl0IHNlZW1zIHRvIG1lIHRoYXQgdGhlcmUgaXMgYWJzb2x1dGVseSB0aGUgc2FtZSBjZXJ0YWludHksIGFuZCBvdXIgYXJndW1lbnQgY29tZXMgdG8gdGhlIGV4Y2VsbGVudCBjb25jbHVzaW9uIHRoYXQKPC90cmFuc2xhdGlvbj4="
translation['77.77a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3NyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNzdhIiB1bml0PSJzZWN0aW9uIiAvPm91ciBzb3VsIGV4aXN0ZWQgYmVmb3JlIHdlIHdlcmUgYm9ybiwgYW5kIHRoYXQgdGhlIGVzc2VuY2Ugb2Ygd2hpY2ggeW91IHNwZWFrIGxpa2V3aXNlIGV4aXN0cy4gIEZvciB0aGVyZSBpcyBub3RoaW5nIHNvIGNsZWFyIHRvIG1lIGFzIHRoaXMsIHRoYXQgYWxsIHN1Y2ggdGhpbmdzLCB0aGUgYmVhdXRpZnVsLCB0aGUgZ29vZCwgYW5kIGFsbCB0aGUgb3RoZXJzIG9mIHdoaWNoIHlvdSB3ZXJlIHNwZWFraW5nIGp1c3Qgbm93LCBoYXZlIGEgbW9zdCByZWFsIGV4aXN0ZW5jZS4gIEFuZCBJIHRoaW5rIHRoZSBwcm9vZiBpcyBzdWZmaWNpZW50LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQgaG93IGFib3V0IENlYmVzP+KAnSBzYWlkIFNvY3JhdGVzLiAg4oCcRm9yIENlYmVzIG11c3QgYmUgY29udmluY2VkLCB0b28u4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEhlIGlzIGZ1bGx5IGNvbnZpbmNlZCwgSSB0aGluayzigJ0gc2FpZCBTaW1taWFzOyAg4oCcYW5kIHlldCBoZSBpcyB0aGUgbW9zdCBvYnN0aW5hdGVseSBpbmNyZWR1bG91cyBvZiBtb3J0YWxzLiAgU3RpbGwsIEkgYmVsaWV2ZSBoZSBpcyBxdWl0ZSBjb252aW5jZWQgb2YgdGhpcywgdGhhdCBvdXIgc291bCBleGlzdGVkCjwvdHJhbnNsYXRpb24+"
translation['77.77b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3N2IiIHVuaXQ9InNlY3Rpb24iIC8+YmVmb3JlIHdlIHdlcmUgYm9ybi4gIEhvd2V2ZXIsIHRoYXQgaXQgd2lsbCBzdGlsbCBleGlzdCBhZnRlciB3ZSBkaWUgZG9lcyBub3Qgc2VlbSBldmVuIHRvIG1lIHRvIGhhdmUgYmVlbiBwcm92ZWQsIFNvY3JhdGVzLCBidXQgdGhlIGNvbW1vbiBmZWFyLCB3aGljaCBDZWJlcyBtZW50aW9uZWQganVzdCBub3csIHRoYXQgd2hlbiBhIG1hbiBkaWVzIHRoZSBzb3VsIGlzIGRpc3BlcnNlZCBhbmQgdGhpcyBpcyB0aGUgZW5kIG9mIGhpcyBleGlzdGVuY2UsIHN0aWxsIHJlbWFpbnMuICBGb3IgYXNzdW1pbmcgdGhhdCB0aGUgc291bCBjb21lcyBpbnRvIGJlaW5nIGFuZCBpcyBicm91Z2h0IHRvZ2V0aGVyIGZyb20gc29tZSBzb3VyY2Ugb3Igb3RoZXIgYW5kIGV4aXN0cyBiZWZvcmUgaXQgZW50ZXJzIGludG8gYSBodW1hbiBib2R5LCB3aGF0IHByZXZlbnRzIGl0LCBhZnRlciBpdCBoYXMgZW50ZXJlZCBpbnRvIGFuZCBsZWZ0IHRoYXQgYm9keSwgZnJvbSBjb21pbmcgdG8gYW4gZW5kIGFuZCBiZWluZyBkZXN0cm95ZWQgaXRzZWxmP+KAnQo8L3RyYW5zbGF0aW9uPg=="
translation['77.77c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3N2MiIHVuaXQ9InNlY3Rpb24iIC8+4oCcWW91IGFyZSByaWdodCwgU2ltbWlhcyzigJ0gc2FpZCBDZWJlcy4gIOKAnEl0IHNlZW1zIHRvIG1lIHRoYXQgd2UgaGF2ZSBwcm92ZWQgb25seSBoYWxmIG9mIHdoYXQgaXMgcmVxdWlyZWQsIG5hbWVseSwgdGhhdCBvdXIgc291bCBleGlzdGVkIGJlZm9yZSBvdXIgYmlydGguICBCdXQgd2UgbXVzdCBhbHNvIHNob3cgdGhhdCBpdCBleGlzdHMgYWZ0ZXIgd2UgYXJlIGRlYWQgYXMgd2VsbCBhcyBiZWZvcmUgb3VyIGJpcnRoLCBpZiB0aGUgcHJvb2YgaXMgdG8gYmUgcGVyZmVjdC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSXQgaGFzIGJlZW4gc2hvd24sIFNpbW1pYXMgYW5kIENlYmVzLCBhbHJlYWR5LOKAnSBzYWlkIFNvY3JhdGVzLCDigJxpZiB5b3Ugd2lsbCBjb21iaW5lIHRoaXMgY29uY2x1c2lvbiB3aXRoIHRoZSBvbmUgd2UgcmVhY2hlZCBiZWZvcmUsIHRoYXQgZXZlcnkgbGl2aW5nIGJlaW5nIGlzIGJvcm4gZnJvbSB0aGUgZGVhZC4gIEZvciBpZiB0aGUgc291bCBleGlzdHMgYmVmb3JlIGJpcnRoLCBhbmQsCjwvdHJhbnNsYXRpb24+"
translation['77.77d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3N2QiIHVuaXQ9InNlY3Rpb24iIC8+d2hlbiBpdCBjb21lcyBpbnRvIGxpZmUgYW5kIGlzIGJvcm4sIGNhbm5vdCBiZSBib3JuIGZyb20gYW55dGhpbmcgZWxzZSB0aGFuIGRlYXRoIGFuZCBhIHN0YXRlIG9mIGRlYXRoLCBtdXN0IGl0IG5vdCBhbHNvIGV4aXN0IGFmdGVyIGR5aW5nLCBzaW5jZSBpdCBtdXN0IGJlIGJvcm4gYWdhaW4/ICBTbyB0aGUgcHJvb2YgeW91IGNhbGwgZm9yIGhhcyBhbHJlYWR5IGJlZW4gZ2l2ZW4uICBIb3dldmVyLCBJIHRoaW5rIHlvdSBhbmQgU2ltbWlhcyB3b3VsZCBsaWtlIHRvIGNhcnJ5IG9uIHRoaXMgZGlzY3Vzc2lvbiBzdGlsbCBmdXJ0aGVyLiAgWW91IGhhdmUgdGhlIGNoaWxkaXNoIGZlYXIgdGhhdCB3aGVuIHRoZSBzb3VsIGdvZXMgb3V0IGZyb20gdGhlIGJvZHkgdGhlIHdpbmQgd2lsbCByZWFsbHkgYmxvdyBpdCBhd2F5IGFuZCBzY2F0dGVyIGl0LCBlc3BlY2lhbGx5CjwvdHJhbnNsYXRpb24+"
translation['77.77e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3N2UiIHVuaXQ9InNlY3Rpb24iIC8+aWYgYSBtYW4gaGFwcGVucyB0byBkaWUgaW4gYSBoaWdoIHdpbmQgYW5kIG5vdCBpbiBjYWxtIHdlYXRoZXIu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBDZWJlcyBsYXVnaGVkIGFuZCBzYWlkLCDigJxBc3N1bWUgdGhhdCB3ZSBoYXZlIHRoYXQgZmVhciwgU29jcmF0ZXMsIGFuZCB0cnkgdG8gY29udmluY2UgdXM7ICBvciByYXRoZXIsIGRvIG5vdCBhc3N1bWUgdGhhdCB3ZSBhcmUgYWZyYWlkLCBidXQgcGVyaGFwcyB0aGVyZSBpcyBhIGNoaWxkIHdpdGhpbiB1cywgd2hvIGhhcyBzdWNoIGZlYXJzLiAgTGV0IHVzIHRyeSB0byBwZXJzdWFkZSBoaW0gbm90IHRvIGZlYXIgZGVhdGggYXMgaWYgaXQgd2VyZSBhIGhvYmdvYmxpbi7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQWgs4oCdIHNhaWQgU29jcmF0ZXMsIOKAnHlvdSBtdXN0IHNpbmcgY2hhcm1zIHRvIGhpbSBldmVyeSBkYXkgdW50aWwgeW91IGNoYXJtIGF3YXkgaGlzIGZlYXIu4oCdCjwvdHJhbnNsYXRpb24+"
translation['78.78a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNzhhIiB1bml0PSJzZWN0aW9uIiAvPuKAnFdoZXJlIHRoZW4sIFNvY3JhdGVzLOKAnSBzYWlkIGhlLCDigJxzaGFsbCB3ZSBmaW5kIGEgZ29vZCBzaW5nZXIgb2Ygc3VjaCBjaGFybXMsIHNpbmNlIHlvdSBhcmUgbGVhdmluZyB1cz8nJzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJw8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sMTAwMDA3NCIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiwxMDAwMDc0Ij5IZWxsYXM8L3BsYWNlTmFtZT4sIENlYmVzLOKAnSBoZSByZXBsaWVkLCDigJxpcyBhIGxhcmdlIGNvdW50cnksIGluIHdoaWNoIHRoZXJlIGFyZSBtYW55IGdvb2QgbWVuLCBhbmQgdGhlcmUgYXJlIG1hbnkgZm9yZWlnbiBwZW9wbGVzIGFsc28uICBZb3Ugb3VnaHQgdG8gc2VhcmNoIHRocm91Z2ggYWxsIG9mIHRoZW0gaW4gcXVlc3Qgb2Ygc3VjaCBhIGNoYXJtZXIsIHNwYXJpbmcgbmVpdGhlciBtb25leSBub3IgdG9pbCwgZm9yIHRoZXJlIGlzIG5vIGdyZWF0ZXIgbmVlZCBmb3Igd2hpY2ggeW91IGNvdWxkIHNwZW5kIHlvdXIgbW9uZXkuICBBbmQgeW91IG11c3Qgc2VlayBhbW9uZyB5b3Vyc2VsdmVzLCB0b28sIGZvciBwZXJoYXBzIHlvdSB3b3VsZCBoYXJkbHkgZmluZCBvdGhlcnMgYmV0dGVyIGFibGUgdG8gZG8gdGhpcyB0aGFuIHlvdS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhhdCzigJ0gc2FpZCBDZWJlcywg4oCcc2hhbGwgYmUgZG9uZS4gIEJ1dCBsZXQgdXMgcmV0dXJuIHRvIHRoZSBwb2ludCB3aGVyZSB3ZSBsZWZ0IG9mZiwKPC90cmFuc2xhdGlvbj4="
translation['78.78b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OGIiIHVuaXQ9InNlY3Rpb24iIC8+aWYgeW91IGFyZSB3aWxsaW5nLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxPaCwgSSBhbSB3aWxsaW5nLCBvZiBjb3Vyc2Uu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEdvb2Qs4oCdIHNhaWQgaGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdlbGwgdGhlbizigJ0gc2FpZCBTb2NyYXRlcywg4oCcbXVzdCB3ZSBub3QgYXNrIG91cnNlbHZlcyBzb21lIHN1Y2ggcXVlc3Rpb24gYXMgdGhpcz8gIFdoYXQga2luZCBvZiB0aGluZyBuYXR1cmFsbHkgc3VmZmVycyBkaXNwZXJzaW9uLCBhbmQgZm9yIHdoYXQga2luZCBvZiB0aGluZyBtaWdodCB3ZSBuYXR1cmFsbHkgZmVhciBpdCwgYW5kIGFnYWluIHdoYXQga2luZCBvZiB0aGluZyBpcyBub3QgbGlhYmxlIHRvIGl0PyAgQW5kIGFmdGVyIHRoaXMgbXVzdCB3ZSBub3QgaW5xdWlyZSB0byB3aGljaCBjbGFzcyB0aGUgc291bCBiZWxvbmdzIGFuZCBiYXNlIG91ciBob3BlcyBvciBmZWFycyBmb3Igb3VyIHNvdWxzIHVwb24gdGhlIGFuc3dlcnMgdG8gdGhlc2UgcXVlc3Rpb25zP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZb3UgYXJlIHF1aXRlIHJpZ2h0LOKAnSBoZSByZXBsaWVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgaXMgbm90IHRoYXQgd2hpY2ggaXMgY29tcG91bmRlZAo8L3RyYW5zbGF0aW9uPg=="
translation['78.78c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OGMiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGNvbXBvc2l0ZSBuYXR1cmFsbHkgbGlhYmxlIHRvIGJlIGRlY29tcG9zZWQsIGluIHRoZSBzYW1lIHdheSBpbiB3aGljaCBpdCB3YXMgY29tcG91bmRlZD8gIEFuZCBpZiBhbnl0aGluZyBpcyB1bmNvbXBvdW5kZWQgaXMgbm90IHRoYXQsIGlmIGFueXRoaW5nLCBuYXR1cmFsbHkgdW5saWtlbHkgdG8gYmUgZGVjb21wb3NlZD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSB0aGluayzigJ0gc2FpZCBDZWJlcywg4oCcdGhhdCBpcyB0cnVlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIGl0IGlzIG1vc3QgcHJvYmFibGUgdGhhdCB0aGluZ3Mgd2hpY2ggYXJlIGFsd2F5cyB0aGUgc2FtZSBhbmQgdW5jaGFuZ2luZyBhcmUgdGhlIHVuY29tcG91bmRlZCB0aGluZ3MgYW5kIHRoZSB0aGluZ3MgdGhhdCBhcmUgY2hhbmdpbmcgYW5kIG5ldmVyIHRoZSBzYW1lIGFyZSB0aGUgY29tcG9zaXRlIHRoaW5ncz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCBJIHRoaW5rIHNvLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxMZXQgdXMgdGhlbizigJ0gc2FpZCBoZSwg4oCcdHVybiB0byB3aGF0IHdlIHdlcmUgZGlzY3Vzc2luZyBiZWZvcmUuCjwvdHJhbnNsYXRpb24+"
translation['78.78d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OGQiIHVuaXQ9InNlY3Rpb24iIC8+SXMgdGhlIGFic29sdXRlIGVzc2VuY2UsIHdoaWNoIHdlIGluIG91ciBkaWFsZWN0aWMgcHJvY2VzcyBvZiBxdWVzdGlvbiBhbmQgYW5zd2VyIGNhbGwgdHJ1ZSBiZWluZywgYWx3YXlzIHRoZSBzYW1lIG9yIGlzIGl0IGxpYWJsZSB0byBjaGFuZ2U/ICBBYnNvbHV0ZSBlcXVhbGl0eSwgYWJzb2x1dGUgYmVhdXR5LCBhbnkgYWJzb2x1dGUgZXhpc3RlbmNlLCB0cnVlIGJlaW5n4oCUZG8gdGhleSBldmVyIGFkbWl0IG9mIGFueSBjaGFuZ2Ugd2hhdHNvZXZlcj8gIE9yIGRvZXMgZWFjaCBhYnNvbHV0ZSBlc3NlbmNlLCBzaW5jZSBpdCBpcyB1bmlmb3JtIGFuZCBleGlzdHMgYnkgaXRzZWxmLCByZW1haW4gdGhlIHNhbWUgYW5kIG5ldmVyIGluIGFueSB3YXkgYWRtaXQgb2YgYW55IGNoYW5nZT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSXQgbXVzdCzigJ0gc2FpZCBDZWJlcywg4oCcbmVjZXNzYXJpbHkgcmVtYWluIHRoZSBzYW1lLAo8L3RyYW5zbGF0aW9uPg=="
translation['78.78e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OGUiIHVuaXQ9InNlY3Rpb24iIC8+U29jcmF0ZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEJ1dCBob3cgYWJvdXQgdGhlIG1hbnkgdGhpbmdzLCBmb3IgZXhhbXBsZSwgbWVuLCBvciBob3JzZXMsIG9yIGNsb2Frcywgb3IgYW55IG90aGVyIHN1Y2ggdGhpbmdzLCB3aGljaCBiZWFyIHRoZSBzYW1lIG5hbWVzIGFzIHRoZSBhYnNvbHV0ZSBlc3NlbmNlcyBhbmQgYXJlIGNhbGxlZCBiZWF1dGlmdWwgb3IgZXF1YWwgb3IgdGhlIGxpa2U/ICBBcmUgdGhleSBhbHdheXMgdGhlIHNhbWU/ICBPciBhcmUgdGhleSwgaW4gZGlyZWN0IG9wcG9zaXRpb24gdG8gdGhlIGVzc2VuY2VzLCBjb25zdGFudGx5IGNoYW5naW5nIGluIHRoZW1zZWx2ZXMsIHVubGlrZSBlYWNoIG90aGVyLCBhbmQsIHNvIHRvIHNwZWFrLCBuZXZlciB0aGUgc2FtZT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlIGxhdHRlcizigJ0gc2FpZCBDZWJlczsgIOKAnHRoZXkgYXJlIG5ldmVyIHRoZSBzYW1lLuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['79.79a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNzlhIiB1bml0PSJzZWN0aW9uIiAvPuKAnEFuZCB5b3UgY2FuIHNlZSB0aGVzZSBhbmQgdG91Y2ggdGhlbSBhbmQgcGVyY2VpdmUgdGhlbSBieSB0aGUgb3RoZXIgc2Vuc2VzLCB3aGVyZWFzIHRoZSB0aGluZ3Mgd2hpY2ggYXJlIGFsd2F5cyB0aGUgc2FtZSBjYW4gYmUgZ3Jhc3BlZCBvbmx5IGJ5IHRoZSByZWFzb24sIGFuZCBhcmUgaW52aXNpYmxlIGFuZCBub3QgdG8gYmUgc2Vlbj/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LOKAnSBzYWlkIGhlLCDigJx0aGF0IGlzIHRydWUu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vdyzigJ0gc2FpZCBoZSwg4oCcc2hhbGwgd2UgYXNzdW1lIHR3byBraW5kcyBvZiBleGlzdGVuY2VzLCBvbmUgdmlzaWJsZSwgdGhlIG90aGVyIGludmlzaWJsZT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTGV0IHVzIGFzc3VtZSB0aGVtLOKAnSBzYWlkIENlYmVzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgdGhhdCB0aGUgaW52aXNpYmxlIGlzIGFsd2F5cyB0aGUgc2FtZSBhbmQgdGhlIHZpc2libGUgY29uc3RhbnRseSBjaGFuZ2luZz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTGV0IHVzIGFzc3VtZSB0aGF0IGFsc28s4oCdIHNhaWQgaGUuCjwvdHJhbnNsYXRpb24+"
translation['79.79b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OWIiIHVuaXQ9InNlY3Rpb24iIC8+4oCcV2VsbCB0aGVuLOKAnSBzYWlkIFNvY3JhdGVzLCDigJxhcmUgd2Ugbm90IG1hZGUgdXAgb2YgdHdvIHBhcnRzLCBib2R5IGFuZCBzb3VsP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMs4oCdIGhlIHJlcGxpZWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vdyB0byB3aGljaCBjbGFzcyBzaG91bGQgd2Ugc2F5IHRoZSBib2R5IGlzIG1vcmUgc2ltaWxhciBhbmQgbW9yZSBjbG9zZWx5IGFraW4/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRvIHRoZSB2aXNpYmxlLOKAnSBzYWlkIGhlOyDigJx0aGF0IGlzIGNsZWFyIHRvIGV2ZXJ5b25lLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgdGhlIHNvdWw/ICBJcyBpdCB2aXNpYmxlIG9yIGludmlzaWJsZT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSW52aXNpYmxlLCB0byBtYW4sIGF0IGxlYXN0LCBTb2NyYXRlcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IHdlIGNhbGwgdGhpbmdzIHZpc2libGUgYW5kIGludmlzaWJsZSB3aXRoIHJlZmVyZW5jZSB0byBodW1hbiB2aXNpb24sIGRvIHdlIG5vdD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCB3ZSBkby7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiB3aGF0IGRvIHdlIHNheSBhYm91dCB0aGUgc291bD8gIENhbiBpdCBiZSBzZWVuIG9yIG5vdD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSXQgY2Fubm90IGJlIHNlZW4u4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4gaXQgaXMgaW52aXNpYmxlP+KAnSA8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIHRoZSBzb3VsIGlzIG1vcmUgbGlrZSB0aGUgaW52aXNpYmxlIHRoYW4gdGhlIGJvZHkgaXMsCjwvdHJhbnNsYXRpb24+"
translation['79.79c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OWMiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoZSBib2R5IG1vcmUgbGlrZSB0aGUgdmlzaWJsZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTmVjZXNzYXJpbHksIFNvY3JhdGVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgd2UgaGF2ZSBhbHNvIGJlZW4gc2F5aW5nIGZvciBhIGxvbmcgdGltZSwgaGF2ZSB3ZSBub3QsIHRoYXQsIHdoZW4gdGhlIHNvdWwgbWFrZXMgdXNlIG9mIHRoZSBib2R5IGZvciBhbnkgaW5xdWlyeSwgZWl0aGVyIHRocm91Z2ggc2VlaW5nIG9yIGhlYXJpbmcgb3IgYW55IG9mIHRoZSBvdGhlciBzZW5zZXPigJRmb3IgaW5xdWlyeSB0aHJvdWdoIHRoZSBib2R5IG1lYW5zIGlucXVpcnkgdGhyb3VnaCB0aGUgc2Vuc2VzLOKAlHRoZW4gaXQgaXMgZHJhZ2dlZCBieSB0aGUgYm9keSB0byB0aGluZ3Mgd2hpY2ggbmV2ZXIgcmVtYWluIHRoZSBzYW1lLCBhbmQgaXQgd2FuZGVycyBhYm91dCBhbmQgaXMgY29uZnVzZWQgYW5kIGRpenp5IGxpa2UgYSBkcnVua2VuIG1hbiBiZWNhdXNlIGl0IGxheXMgaG9sZCB1cG9uIHN1Y2ggdGhpbmdzP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEJ1dCB3aGVuIHRoZSBzb3VsCjwvdHJhbnNsYXRpb24+"
translation['79.79d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OWQiIHVuaXQ9InNlY3Rpb24iIC8+aW5xdWlyZXMgYWxvbmUgYnkgaXRzZWxmLCBpdCBkZXBhcnRzIGludG8gdGhlIHJlYWxtIG9mIHRoZSBwdXJlLCB0aGUgZXZlcmxhc3RpbmcsIHRoZSBpbW1vcnRhbCBhbmQgdGhlIGNoYW5nZWxlc3MsIGFuZCBiZWluZyBha2luIHRvIHRoZXNlIGl0IGR3ZWxscyBhbHdheXMgd2l0aCB0aGVtIHdoZW5ldmVyIGl0IGlzIGJ5IGl0c2VsZiBhbmQgaXMgbm90IGhpbmRlcmVkLCBhbmQgaXQgaGFzIHJlc3QgZnJvbSBpdHMgd2FuZGVyaW5ncyBhbmQgcmVtYWlucyBhbHdheXMgdGhlIHNhbWUgYW5kIHVuY2hhbmdpbmcgd2l0aCB0aGUgY2hhbmdlbGVzcywgc2luY2UgaXQgaXMgaW4gY29tbXVuaW9uIHRoZXJld2l0aC4gIEFuZCB0aGlzIHN0YXRlIG9mIHRoZSBzb3VsIGlzIGNhbGxlZCB3aXNkb20uICBJcyBpdCBub3Qgc28/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFNvY3JhdGVzLOKAnSBzYWlkIGhlLCDigJx3aGF0IHlvdSBzYXkgaXMgcGVyZmVjdGx5IHJpZ2h0IGFuZCB0cnVlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgbm93IGFnYWluLCBpbiB2aWV3IG9mIHdoYXQgd2Ugc2FpZCBiZWZvcmUgYW5kIG9mIHdoYXQgaGFzIGp1c3QgYmVlbiBzYWlkLCB0byB3aGljaCBjbGFzcyBkbyB5b3UgdGhpbmsKPC90cmFuc2xhdGlvbj4="
translation['79.79e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3OWUiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIHNvdWwgaGFzIGdyZWF0ZXIgbGlrZW5lc3MgYW5kIGtpbnNoaXA/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEkgdGhpbmssIFNvY3JhdGVzLOKAnSBzYWlkIGhlLCDigJx0aGF0IGFueW9uZSwgZXZlbiB0aGUgZHVsbGVzdCwgd291bGQgYWdyZWUsIGFmdGVyIHRoaXMgYXJndW1lbnQgdGhhdCB0aGUgc291bCBpcyBpbmZpbml0ZWx5IG1vcmUgbGlrZSB0aGF0IHdoaWNoIGlzIGFsd2F5cyB0aGUgc2FtZSB0aGFuIHRoYXQgd2hpY2ggaXMgbm90LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgdGhlIGJvZHk/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnElzIG1vcmUgbGlrZSB0aGUgb3RoZXIu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENvbnNpZGVyLCB0aGVuLCB0aGUgbWF0dGVyIGluIGFub3RoZXIgd2F5LiAgV2hlbiB0aGUgc291bAo8L3RyYW5zbGF0aW9uPg=="
translation['80.80a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iODBhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB0aGUgYm9keSBhcmUgam9pbmVkIHRvZ2V0aGVyLCBuYXR1cmUgZGlyZWN0cyB0aGUgb25lIHRvIHNlcnZlIGFuZCBiZSBydWxlZCwgYW5kIHRoZSBvdGhlciB0byBydWxlIGFuZCBiZSBtYXN0ZXIuICBOb3cgdGhpcyBiZWluZyB0aGUgY2FzZSwgd2hpY2ggc2VlbXMgdG8geW91IGxpa2UgdGhlIGRpdmluZSwgYW5kIHdoaWNoIGxpa2UgdGhlIG1vcnRhbD8gT3IgZG8geW91IG5vdCB0aGluayB0aGF0IHRoZSBkaXZpbmUgaXMgYnkgbmF0dXJlIGZpdHRlZCB0byBydWxlIGFuZCBsZWFkLCBhbmQgdGhlIG1vcnRhbCB0byBvYmV5IGFuZCBzZXJ2ZT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCBJIHRoaW5rIHNvLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXaGljaCwgdGhlbiwgZG9lcyB0aGUgc291bCByZXNlbWJsZT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2xlYXJseSwgU29jcmF0ZXMsIHRoZSBzb3VsIGlzIGxpa2UgdGhlIGRpdmluZSBhbmQgdGhlIGJvZHkgbGlrZSB0aGUgbW9ydGFsLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIHNlZSwgQ2ViZXMsIGlmIHRoaXMgaXMgbm90IHRoZSBjb25jbHVzaW9uIGZyb20gYWxsIHRoYXQgd2UgaGF2ZSBzYWlkLAo8L3RyYW5zbGF0aW9uPg=="
translation['80.80b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MGIiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCB0aGUgc291bCBpcyBtb3N0IGxpa2UgdGhlIGRpdmluZSBhbmQgaW1tb3J0YWwgYW5kIGludGVsbGVjdHVhbCBhbmQgdW5pZm9ybSBhbmQgaW5kaXNzb2x1YmxlIGFuZCBldmVyIHVuY2hhbmdpbmcsIGFuZCB0aGUgYm9keSwgb24gdGhlIGNvbnRyYXJ5LCBtb3N0IGxpa2UgdGhlIGh1bWFuIGFuZCBtb3J0YWwgYW5kIG11bHRpZm9ybSBhbmQgdW5pbnRlbGxlY3R1YWwgYW5kIGRpc3NvbHVibGUgYW5kIGV2ZXIgY2hhbmdpbmcuICBDYW4gd2Ugc2F5IGFueXRoaW5nLCBteSBkZWFyIENlYmVzLCB0byBzaG93IHRoYXQgdGhpcyBpcyBub3Qgc28/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vLCB3ZSBjYW5ub3Qu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdlbGwgdGhlbiwgc2luY2UgdGhpcyBpcyB0aGUgY2FzZSwgaXMgaXQgbm90IG5hdHVyYWwgZm9yIHRoZSBib2R5IHRvIG1lZXQgd2l0aCBzcGVlZHkgZGlzc29sdXRpb24gYW5kIGZvciB0aGUgc291bCwgb24gdGhlIGNvbnRyYXJ5LCB0byBiZSBlbnRpcmVseSBpbmRpc3NvbHVibGUsIG9yIG5lYXJseSBzbz/igJ0KPC90cmFuc2xhdGlvbj4="
translation['80.80c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MGMiIHVuaXQ9InNlY3Rpb24iIC8+4oCcT2YgY291cnNlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxPYnNlcnZlLOKAnSBoZSB3ZW50IG9uLCDigJx0aGF0IHdoZW4gYSBtYW4gZGllcywgdGhlIHZpc2libGUgcGFydCBvZiBoaW0sIHRoZSBib2R5LCB3aGljaCBsaWVzIGluIHRoZSB2aXNpYmxlIHdvcmxkIGFuZCB3aGljaCB3ZSBjYWxsIHRoZSBjb3Jwc2UsIHdoaWNoIGlzIG5hdHVyYWxseSBzdWJqZWN0IHRvIGRpc3NvbHV0aW9uIGFuZCBkZWNvbXBvc2l0aW9uLCBkb2VzIG5vdCB1bmRlcmdvIHRoZXNlIHByb2Nlc3NlcyBhdCBvbmNlLCBidXQgcmVtYWlucyBmb3IgYSBjb25zaWRlcmFibGUgdGltZSwgYW5kIGV2ZW4gZm9yIGEgdmVyeSBsb25nIHRpbWUsIGlmIGRlYXRoIHRha2VzIHBsYWNlIHdoZW4gdGhlIGJvZHkgaXMgaW4gZ29vZCBjb25kaXRpb24sIGFuZCBhdCBhIGZhdm9yYWJsZSB0aW1lIG9mIHRoZSB5ZWFyLiAgRm9yIHdoZW4gdGhlIGJvZHkgaXMgc2hydW5rIGFuZCBlbWJhbG1lZCwgYXMgaXMgZG9uZSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAxNjgzMyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDE2ODMzIj5FZ3lwdDwvcGxhY2VOYW1lPiwgaXQgcmVtYWlucyBhbG1vc3QgZW50aXJlIGZvciBhbiBpbmNhbGN1bGFibGUgdGltZS4gIEFuZCBldmVuIGlmIHRoZSBib2R5IGRlY2F5LAo8L3RyYW5zbGF0aW9uPg=="
translation['80.80d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MGQiIHVuaXQ9InNlY3Rpb24iIC8+c29tZSBwYXJ0cyBvZiBpdCwgc3VjaCBhcyB0aGUgYm9uZXMgYW5kIHNpbmV3cyBhbmQgYWxsIHRoYXQsIGFyZSwgc28gdG8gc3BlYWssIGluZGVzdHJ1Y3RpYmxlLiAgSXMgbm90IHRoYXQgdHJ1ZT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQgdGhlIHNvdWwsIHRoZSBpbnZpc2libGUsIHdoaWNoIGRlcGFydHMgaW50byBhbm90aGVyIHBsYWNlIHdoaWNoIGlzLCBsaWtlIGl0c2VsZiwgbm9ibGUgYW5kIHB1cmUgYW5kIGludmlzaWJsZSwgdG8gdGhlIHJlYWxtIG9mIHRoZSBnb2Qgb2YgdGhlIG90aGVyIHdvcmxkIGluIHRydXRoLCB0byB0aGUgZ29vZCBhbmQgd2lzZSBnb2QsIHdoaXRoZXIsIGlmIEdvZCB3aWxsLCBteSBzb3VsIGlzIHNvb24gdG8gZ28s4oCUaXMgdGhpcyBzb3VsLCB3aGljaCBoYXMgc3VjaCBxdWFsaXRpZXMgYW5kIHN1Y2ggYSBuYXR1cmUsIHN0cmFpZ2h0d2F5IHNjYXR0ZXJlZCBhbmQgZGVzdHJveWVkIHdoZW4gaXQgZGVwYXJ0cyBmcm9tIHRoZSBib2R5LCBhcyBtb3N0IG1lbiBzYXk/CjwvdHJhbnNsYXRpb24+"
translation['80.80e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MGUiIHVuaXQ9InNlY3Rpb24iIC8+RmFyIGZyb20gaXQsIGRlYXIgQ2ViZXMgYW5kIFNpbW1pYXMsIGJ1dCB0aGUgdHJ1dGggaXMgbXVjaCByYXRoZXIgdGhpc+KAlGlmIGl0IGRlcGFydHMgcHVyZSwgZHJhZ2dpbmcgd2l0aCBpdCBub3RoaW5nIG9mIHRoZSBib2R5LCBiZWNhdXNlIGl0IG5ldmVyIHdpbGxpbmdseSBhc3NvY2lhdGVkIHdpdGggdGhlIGJvZHkgaW4gbGlmZSwgYnV0IGF2b2lkZWQgaXQgYW5kIGdhdGhlcmVkIGl0c2VsZiBpbnRvIGl0c2VsZiBhbG9uZSwgc2luY2UgdGhpcyBoYXMgYWx3YXlzIGJlZW4gaXRzIGNvbnN0YW50IHN0dWR54oCUYnV0IHRoaXMgbWVhbnMgbm90aGluZyBlbHNlIHRoYW4gdGhhdCBpdCBwdXJzdWVkIHBoaWxvc29waHkgcmlnaHRseSBhbmQKPC90cmFuc2xhdGlvbj4="
translation['81.81a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iODFhIiB1bml0PSJzZWN0aW9uIiAvPnJlYWxseSBwcmFjdGljZWQgYmVpbmcgaW4gYSBzdGF0ZSBvZiBkZWF0aDogIG9yIGlzIG5vdCB0aGlzIHRoZSBwcmFjdGljZSBvZiBkZWF0aD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnkgYWxsIG1lYW5zLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIGlmIGl0IGlzIGluIHN1Y2ggYSBjb25kaXRpb24sIGl0IGdvZXMgYXdheSBpbnRvIHRoYXQgd2hpY2ggaXMgbGlrZSBpdHNlbGYsIGludG8gdGhlIGludmlzaWJsZSwgZGl2aW5lLCBpbW1vcnRhbCwgYW5kIHdpc2UsIGFuZCB3aGVuIGl0IGFycml2ZXMgdGhlcmUgaXQgaXMgaGFwcHksIGZyZWVkIGZyb20gZXJyb3IgYW5kIGZvbGx5IGFuZCBmZWFyIGFuZCBmaWVyY2UgbG92ZXMgYW5kIGFsbCB0aGUgb3RoZXIgaHVtYW4gaWxscywgYW5kIGFzIHRoZSBpbml0aWF0ZWQgc2F5LCBsaXZlcyBpbiB0cnV0aCB0aHJvdWdoIGFsbCBhZnRlciB0aW1lIHdpdGggdGhlIGdvZHMuICBJcyB0aGlzIG91ciBiZWxpZWYsIENlYmVzLCBvciBub3Q/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFzc3VyZWRseSzigJ0gc2FpZCBDZWJlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0LCBJIHRoaW5rLAo8L3RyYW5zbGF0aW9uPg=="
translation['81.81b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MWIiIHVuaXQ9InNlY3Rpb24iIC8+aWYgd2hlbiBpdCBkZXBhcnRzIGZyb20gdGhlIGJvZHkgaXQgaXMgZGVmaWxlZCBhbmQgaW1wdXJlLCBiZWNhdXNlIGl0IHdhcyBhbHdheXMgd2l0aCB0aGUgYm9keSBhbmQgY2FyZWQgZm9yIGl0IGFuZCBsb3ZlZCBpdCBhbmQgd2FzIGZhc2NpbmF0ZWQgYnkgaXQgYW5kIGl0cyBkZXNpcmVzIGFuZCBwbGVhc3VyZXMsIHNvIHRoYXQgaXQgdGhvdWdodCBub3RoaW5nIHdhcyB0cnVlIGV4Y2VwdCB0aGUgY29ycG9yZWFsLCB3aGljaCBvbmUgY2FuIHRvdWNoIGFuZCBzZWUgYW5kIGRyaW5rIGFuZCBlYXQgYW5kIGVtcGxveSBpbiB0aGUgcGxlYXN1cmVzIG9mIGxvdmUsIGFuZCBpZiBpdCBpcyBhY2N1c3RvbWVkIHRvIGhhdGUgYW5kIGZlYXIgYW5kIGF2b2lkIHRoYXQgd2hpY2ggaXMgc2hhZG93eSBhbmQgaW52aXNpYmxlIHRvIHRoZSBleWVzIGJ1dCBpcyBpbnRlbGxpZ2libGUgYW5kIHRhbmdpYmxlIHRvIHBoaWxvc29waHnigJRkbyB5b3UgdGhpbmsgYSBzb3VsIGluIHRoaXMgY29uZGl0aW9uCjwvdHJhbnNsYXRpb24+"
translation['81.81c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MWMiIHVuaXQ9InNlY3Rpb24iIC8+d2lsbCBkZXBhcnQgcHVyZSBhbmQgdW5jb250YW1pbmF0ZWQ/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEJ5IG5vIG1lYW5zLOKAnSBzYWlkIGhlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQgaXQgd2lsbCBiZSBpbnRlcnBlbmV0cmF0ZWQsIEkgc3VwcG9zZSwgd2l0aCB0aGUgY29ycG9yZWFsIHdoaWNoIGludGVyY291cnNlIGFuZCBjb21tdW5pb24gd2l0aCB0aGUgYm9keSBoYXZlIG1hZGUgYSBwYXJ0IG9mIGl0cyBuYXR1cmUgYmVjYXVzZSB0aGUgYm9keSBoYXMgYmVlbiBpdHMgY29uc3RhbnQgY29tcGFuaW9uIGFuZCB0aGUgb2JqZWN0IG9mIGl0cyBjYXJlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCwgbXkgZnJpZW5kLCB3ZSBtdXN0IGJlbGlldmUgdGhhdCB0aGUgY29ycG9yZWFsIGlzIGJ1cmRlbnNvbWUgYW5kIGhlYXZ5IGFuZCBlYXJ0aGx5IGFuZCB2aXNpYmxlLiAgQW5kIHN1Y2ggYSBzb3VsIGlzIHdlaWdoZWQgZG93biBieSB0aGlzIGFuZCBpcyBkcmFnZ2VkIGJhY2sgaW50byB0aGUgdmlzaWJsZSB3b3JsZCwgdGhyb3VnaCBmZWFyIG9mIHRoZSBpbnZpc2libGUgYW5kIG9mIHRoZSBvdGhlciB3b3JsZCwgYW5kIHNvLAo8L3RyYW5zbGF0aW9uPg=="
translation['81.81d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MWQiIHVuaXQ9InNlY3Rpb24iIC8+YXMgdGhleSBzYXksIGl0IGZsaXRzIGFib3V0IHRoZSBtb251bWVudHMgYW5kIHRoZSB0b21icywgd2hlcmUgc2hhZG93eSBzaGFwZXMgb2Ygc291bHMgaGF2ZSBiZWVuIHNlZW4sIGZpZ3VyZXMgb2YgdGhvc2Ugc291bHMgd2hpY2ggd2VyZSBub3Qgc2V0IGZyZWUgaW4gcHVyaXR5IGJ1dCByZXRhaW4gc29tZXRoaW5nIG9mIHRoZSB2aXNpYmxlOyAgYW5kIHRoaXMgaXMgd2h5IHRoZXkgYXJlIHNlZW4u4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoYXQgaXMgbGlrZWx5LCBTb2NyYXRlcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSXQgaXMgbGlrZWx5LCBDZWJlcy4gIEFuZCBpdCBpcyBsaWtlbHkgdGhhdCB0aG9zZSBhcmUgbm90IHRoZSBzb3VscyBvZiB0aGUgZ29vZCwgYnV0IHRob3NlIG9mIHRoZSBiYXNlLCB3aGljaCBhcmUgY29tcGVsbGVkIHRvIGZsaXQgYWJvdXQgc3VjaCBwbGFjZXMgYXMgYSBwdW5pc2htZW50IGZvciB0aGVpciBmb3JtZXIgZXZpbCBtb2RlIG9mIGxpZmUuICBBbmQgdGhleSBmbGl0IGFib3V0CjwvdHJhbnNsYXRpb24+"
translation['81.81e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MWUiIHVuaXQ9InNlY3Rpb24iIC8+dW50aWwgdGhyb3VnaCB0aGUgZGVzaXJlIG9mIHRoZSBjb3Jwb3JlYWwgd2hpY2ggY2xpbmdzIHRvIHRoZW0gdGhleSBhcmUgYWdhaW4gaW1wcmlzb25lZCBpbiBhIGJvZHkuICBBbmQgdGhleSBhcmUgbGlrZWx5IHRvIGJlIGltcHJpc29uZWQgaW4gbmF0dXJlcyB3aGljaCBjb3JyZXNwb25kIHRvIHRoZSBwcmFjdGljZXMgb2YgdGhlaXIgZm9ybWVyIGxpZmUu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdoYXQgbmF0dXJlcyBkbyB5b3UgbWVhbiwgU29jcmF0ZXM/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEkgbWVhbiwgZm9yIGV4YW1wbGUsIHRoYXQgdGhvc2Ugd2hvIGhhdmUgaW5kdWxnZWQgaW4gZ2x1dHRvbnkgYW5kIHZpb2xlbmNlIGFuZCBkcnVua2VubmVzcywgYW5kIGhhdmUgdGFrZW4gbm8gcGFpbnMgdG8gYXZvaWQgdGhlbSwgYXJlIGxpa2VseSB0byBwYXNzIGludG8gdGhlIGJvZGllcyBvZiBhc3NlcyBhbmQgb3RoZXIgYmVhc3RzIG9mIHRoYXQgc29ydC4KPC90cmFuc2xhdGlvbj4="
translation['82.82a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iODJhIiB1bml0PSJzZWN0aW9uIiAvPkRvIHlvdSBub3QgdGhpbmsgc28/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seSB0aGF0IGlzIHZlcnkgbGlrZWx5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgdGhvc2Ugd2hvIGhhdmUgY2hvc2VuIGluanVzdGljZSBhbmQgdHlyYW5ueSBhbmQgcm9iYmVyeSBwYXNzIGludG8gdGhlIGJvZGllcyBvZiB3b2x2ZXMgYW5kIGhhd2tzIGFuZCBraXRlcy4gIFdoZXJlIGVsc2UgY2FuIHdlIGltYWdpbmUgdGhhdCB0aGV5IGdvP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCZXlvbmQgYSBkb3VidCzigJ0gc2FpZCBDZWJlcywg4oCcdGhleSBwYXNzIGludG8gc3VjaCBjcmVhdHVyZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4s4oCdIHNhaWQgaGUsIOKAnGl0IGlzIGNsZWFyIHdoZXJlIGFsbCB0aGUgb3RoZXJzIGdvLCBlYWNoIGluIGFjY29yZGFuY2Ugd2l0aCBpdHMgb3duIGhhYml0cz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLOKAnSBzYWlkIENlYmVzLCDigJxvZiBjb3Vyc2Uu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4s4oCdIHNhaWQgaGUsIOKAnHRoZSBoYXBwaWVzdCBvZiB0aG9zZSwgYW5kIHRob3NlIHdobyBnbyB0byB0aGUgYmVzdCBwbGFjZSwgYXJlIHRob3NlIHdobyBoYXZlIHByYWN0aWNlZCwKPC90cmFuc2xhdGlvbj4="
translation['82.82b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MmIiIHVuaXQ9InNlY3Rpb24iIC8+YnkgbmF0dXJlIGFuZCBoYWJpdCwgd2l0aG91dCBwaGlsb3NvcGh5IG9yIHJlYXNvbiwgdGhlIHNvY2lhbCBhbmQgY2l2aWwgdmlydHVlcyB3aGljaCBhcmUgY2FsbGVkIG1vZGVyYXRpb24gYW5kIGp1c3RpY2U/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEhvdyBhcmUgdGhlc2UgaGFwcGllc3Q/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnERvbid0IHlvdSBzZWU/ICBJcyBpdCBub3QgbGlrZWx5IHRoYXQgdGhleSBwYXNzIGFnYWluIGludG8gc29tZSBzdWNoIHNvY2lhbCBhbmQgZ2VudGxlIHNwZWNpZXMgYXMgdGhhdCBvZiBiZWVzIG9yIG9mIHdhc3BzIG9yIGFudHMsIG9yIGludG8gdGhlIGh1bWFuIHJhY2UgYWdhaW4sIGFuZCB0aGF0IHdvcnRoeSBtZW4gc3ByaW5nIGZyb20gdGhlbT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgbm8gb25lIHdobyBoYXMgbm90IGJlZW4gYSBwaGlsb3NvcGhlciBhbmQgd2hvIGlzIG5vdCB3aG9sbHkgcHVyZSB3aGVuIGhlIGRlcGFydHMsIGlzIGFsbG93ZWQgdG8gZW50ZXIgaW50byB0aGUgY29tbXVuaW9uIG9mIHRoZSBnb2RzLAo8L3RyYW5zbGF0aW9uPg=="
translation['82.82c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MmMiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IG9ubHkgdGhlIGxvdmVyIG9mIGtub3dsZWRnZS4gIEl0IGlzIGZvciB0aGlzIHJlYXNvbiwgZGVhciBTaW1taWFzIGFuZCBDZWJlcywgdGhhdCB0aG9zZSB3aG8gdHJ1bHkgbG92ZSB3aXNkb20gcmVmcmFpbiBmcm9tIGFsbCBib2RpbHkgZGVzaXJlcyBhbmQgcmVzaXN0IHRoZW0gZmlybWx5IGFuZCBkbyBub3QgZ2l2ZSB0aGVtc2VsdmVzIHVwIHRvIHRoZW0sIG5vdCBiZWNhdXNlIHRoZXkgZmVhciBwb3ZlcnR5IG9yIGxvc3Mgb2YgcHJvcGVydHksIGFzIG1vc3QgbWVuLCBpbiB0aGVpciBsb3ZlIG9mIG1vbmV5LCBkbzsgIG5vciBpcyBpdCBiZWNhdXNlIHRoZXkgZmVhciB0aGUgZGlzaG9ub3Igb3IgZGlzZ3JhY2Ugb2Ygd2lja2VkbmVzcywgbGlrZSB0aGUgbG92ZXJzIG9mIGhvbm9yIGFuZCBwb3dlciwgdGhhdCB0aGV5IHJlZnJhaW4gZnJvbSB0aGVtLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxObywgdGhhdCB3b3VsZCBub3QgYmUgc2VlbWx5IGZvciB0aGVtLCBTb2NyYXRlcyzigJ0gc2FpZCBDZWJlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTW9zdCBhc3N1cmVkbHkgbm90LOKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['82.82d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MmQiIHVuaXQ9InNlY3Rpb24iIC8+c2FpZCBoZS4gIOKAnEFuZCB0aGVyZWZvcmUgdGhvc2Ugd2hvIGNhcmUgZm9yIHRoZWlyIG93biBzb3VscywgYW5kIGRvIG5vdCBsaXZlIGluIHNlcnZpY2UgdG8gdGhlIGJvZHksIHR1cm4gdGhlaXIgYmFja3MgdXBvbiBhbGwgdGhlc2UgbWVuIGFuZCBkbyBub3Qgd2FsayBpbiB0aGVpciB3YXlzLCBmb3IgdGhleSBmZWVsIHRoYXQgdGhleSBrbm93IG5vdCB3aGl0aGVyIHRoZXkgYXJlIGdvaW5nLiAgVGhleSB0aGVtc2VsdmVzIGJlbGlldmUgdGhhdCBwaGlsb3NvcGh5LCB3aXRoIGl0cyBkZWxpdmVyYW5jZSBhbmQgcHVyaWZpY2F0aW9uLCBtdXN0IG5vdCBiZSByZXNpc3RlZCwgYW5kIHNvIHRoZXkgdHVybiBhbmQgZm9sbG93IGl0IHdoaXRoZXJzb2V2ZXIgaXQgbGVhZHMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEhvdyBkbyB0aGV5IGRvIHRoaXMsIFNvY3JhdGVzP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIHdpbGwgdGVsbCB5b3Us4oCdIGhlIHJlcGxpZWQuICDigJxUaGUgbG92ZXJzIG9mIGtub3dsZWRnZSzigJ0gc2FpZCBoZSwg4oCccGVyY2VpdmUgdGhhdCB3aGVuIHBoaWxvc29waHkgZmlyc3QgdGFrZXMgcG9zc2Vzc2lvbiBvZiB0aGVpciBzb3VsIGl0IGlzIGVudGlyZWx5CjwvdHJhbnNsYXRpb24+"
translation['82.82e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MmUiIHVuaXQ9InNlY3Rpb24iIC8+ZmFzdGVuZWQgYW5kIHdlbGRlZCB0byB0aGUgYm9keSBhbmQgaXMgY29tcGVsbGVkIHRvIHJlZ2FyZCByZWFsaXRpZXMgdGhyb3VnaCB0aGUgYm9keSBhcyB0aHJvdWdoIHByaXNvbiBiYXJzLCBub3Qgd2l0aCBpdHMgb3duIHVuaGluZGVyZWQgdmlzaW9uLCBhbmQgaXMgd2FsbG93aW5nIGluIHV0dGVyIGlnbm9yYW5jZS4gIEFuZCBwaGlsb3NvcGh5IHNlZXMgdGhhdCB0aGUgbW9zdCBkcmVhZGZ1bCB0aGluZyBhYm91dCB0aGUgaW1wcmlzb25tZW50IGlzIHRoZSBmYWN0IHRoYXQgaXQgaXMgY2F1c2VkIGJ5IHRoZSBsdXN0cyBvZiB0aGUgZmxlc2gsIHNvIHRoYXQgdGhlIHByaXNvbmVyIGlzIHRoZQo8L3RyYW5zbGF0aW9uPg=="
translation['83.83a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4MyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iODNhIiB1bml0PSJzZWN0aW9uIiAvPmNoaWVmIGFzc2lzdGFudCBpbiBoaXMgb3duIGltcHJpc29ubWVudC4gIFRoZSBsb3ZlcnMgb2Yga25vd2xlZGdlLCB0aGVuLCBJIHNheSwgcGVyY2VpdmUgdGhhdCBwaGlsb3NvcGh5LCB0YWtpbmcgcG9zc2Vzc2lvbiBvZiB0aGUgc291bCB3aGVuIGl0IGlzIGluIHRoaXMgc3RhdGUsIGVuY291cmFnZXMgaXQgZ2VudGx5IGFuZCB0cmllcyB0byBzZXQgaXQgZnJlZSwgcG9pbnRpbmcgb3V0IHRoYXQgdGhlIGV5ZXMgYW5kIHRoZSBlYXJzIGFuZCB0aGUgb3RoZXIgc2Vuc2VzIGFyZSBmdWxsIG9mIGRlY2VpdCwgYW5kIHVyZ2luZyBpdCB0byB3aXRoZHJhdyBmcm9tIHRoZXNlLCBleGNlcHQgaW4gc28gZmFyIGFzIHRoZWlyIHVzZSBpcyB1bmF2b2lkYWJsZSwgYW5kIGV4aG9ydGluZyBpdCB0byBjb2xsZWN0IGFuZCBjb25jZW50cmF0ZSBpdHNlbGYgd2l0aGluIGl0c2VsZiwgYW5kIHRvIHRydXN0IG5vdGhpbmcgZXhjZXB0CjwvdHJhbnNsYXRpb24+"
translation['83.83b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4M2IiIHVuaXQ9InNlY3Rpb24iIC8+aXRzZWxmIGFuZCBpdHMgb3duIGFic3RyYWN0IHRob3VnaHQgb2YgYWJzdHJhY3QgZXhpc3RlbmNlOyAgYW5kIHRvIGJlbGlldmUgdGhhdCB0aGVyZSBpcyBubyB0cnV0aCBpbiB0aGF0IHdoaWNoIGl0IHNlZXMgYnkgb3RoZXIgbWVhbnMgYW5kIHdoaWNoIHZhcmllcyB3aXRoIHRoZSB2YXJpb3VzIG9iamVjdHMgaW4gd2hpY2ggaXQgYXBwZWFycywgc2luY2UgZXZlcnl0aGluZyBvZiB0aGF0IGtpbmQgaXMgdmlzaWJsZSBhbmQgYXBwcmVoZW5kZWQgYnkgdGhlIHNlbnNlcywgd2hlcmVhcyB0aGUgc291bCBpdHNlbGYgc2VlcyB0aGF0IHdoaWNoIGlzIGludmlzaWJsZSBhbmQgYXBwcmVoZW5kZWQgYnkgdGhlIG1pbmQuICBOb3cgdGhlIHNvdWwgb2YgdGhlIHRydWUgcGhpbG9zb3BoZXIgYmVsaWV2ZXMgdGhhdCBpdCBtdXN0IG5vdCByZXNpc3QgdGhpcyBkZWxpdmVyYW5jZSwgYW5kIHRoZXJlZm9yZSBpdCBzdGFuZHMgYWxvb2YgZnJvbSBwbGVhc3VyZXMgYW5kIGx1c3RzIGFuZCBncmllZnMgYW5kIGZlYXJzLCBzbyBmYXIgYXMgaXQgY2FuLCBjb25zaWRlcmluZyB0aGF0IHdoZW4gYW55b25lIGhhcyB2aW9sZW50IHBsZWFzdXJlcyBvciBmZWFycyBvciBncmllZnMgb3IgbHVzdHMgaGUgc3VmZmVycyBmcm9tIHRoZW0gbm90IG1lcmVseSB3aGF0IG9uZSBtaWdodCB0aGlua+KAlGZvciBleGFtcGxlLCBpbGxuZXNzIG9yIGxvc3Mgb2YgbW9uZXkgc3BlbnQKPC90cmFuc2xhdGlvbj4="
translation['83.83c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4M2MiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIGhpcyBsdXN0c+KAlGJ1dCBoZSBzdWZmZXJzIHRoZSBncmVhdGVzdCBhbmQgbW9zdCBleHRyZW1lIGV2aWwgYW5kIGRvZXMgbm90IHRha2UgaXQgaW50byBhY2NvdW50LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXaGF0IGlzIHRoaXMgZXZpbCwgU29jcmF0ZXM/4oCdIHNhaWQgQ2ViZXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZSBldmlsIGlzIHRoYXQgdGhlIHNvdWwgb2YgZXZlcnkgbWFuLCB3aGVuIGl0IGlzIGdyZWF0bHkgcGxlYXNlZCBvciBwYWluZWQgYnkgYW55dGhpbmcsIGlzIGNvbXBlbGxlZCB0byBiZWxpZXZlIHRoYXQgdGhlIG9iamVjdCB3aGljaCBjYXVzZWQgdGhlIGVtb3Rpb24gaXMgdmVyeSBkaXN0aW5jdCBhbmQgdmVyeSB0cnVlOyAgYnV0IGl0IGlzIG5vdC4gIFRoZXNlIG9iamVjdHMgYXJlIG1vc3RseSB0aGUgdmlzaWJsZSBvbmVzLCBhcmUgdGhleSBub3Q/4oCdCjwvdHJhbnNsYXRpb24+"
translation['83.83d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4M2QiIHVuaXQ9InNlY3Rpb24iIC8+4oCcQ2VydGFpbmx5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgd2hlbiB0aGlzIG9jY3VycywgaXMgbm90IHRoZSBzb3VsIG1vc3QgY29tcGxldGVseSBwdXQgaW4gYm9uZGFnZSBieSB0aGUgYm9keT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSG93IHNvP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCZWNhdXNlIGVhY2ggcGxlYXN1cmUgb3IgcGFpbiBuYWlscyBpdCBhcyB3aXRoIGEgbmFpbCB0byB0aGUgYm9keSBhbmQgcml2ZXRzIGl0IG9uIGFuZCBtYWtlcyBpdCBjb3Jwb3JlYWwsIHNvIHRoYXQgaXQgZmFuY2llcyB0aGUgdGhpbmdzIGFyZSB0cnVlIHdoaWNoIHRoZSBib2R5IHNheXMgYXJlIHRydWUuICBGb3IgYmVjYXVzZSBpdCBoYXMgdGhlIHNhbWUgYmVsaWVmcyBhbmQgcGxlYXN1cmVzIGFzIHRoZSBib2R5IGl0IGlzIGNvbXBlbGxlZCB0byBhZG9wdCBhbHNvIHRoZSBzYW1lIGhhYml0cyBhbmQgbW9kZSBvZiBsaWZlLCBhbmQgY2FuIG5ldmVyIGRlcGFydCBpbiBwdXJpdHkgdG8gdGhlIG90aGVyIHdvcmxkLCBidXQgbXVzdCBhbHdheXMgZ28gYXdheSBjb250YW1pbmF0ZWQgd2l0aCB0aGUgYm9keTsgIGFuZCBzbyBpdCBzaW5rcyBxdWlja2x5IGludG8gYW5vdGhlciBib2R5IGFnYWluIGFuZCBncm93cyBpbnRvIGl0LAo8L3RyYW5zbGF0aW9uPg=="
translation['83.83e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4M2UiIHVuaXQ9InNlY3Rpb24iIC8+bGlrZSBzZWVkIHRoYXQgaXMgc293bi4gIFRoZXJlZm9yZSBpdCBoYXMgbm8gcGFydCBpbiB0aGUgY29tbXVuaW9uIHdpdGggdGhlIGRpdmluZSBhbmQgcHVyZSBhbmQgYWJzb2x1dGUu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdoYXQgeW91IHNheSwgU29jcmF0ZXMsIGlzIHZlcnkgdHJ1ZSzigJ0gc2FpZCBDZWJlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhpcywgQ2ViZXMsIGlzIHRoZSByZWFzb24gd2h5IHRoZSB0cnVlIGxvdmVycyBvZiBrbm93bGVkZ2UgYXJlIHRlbXBlcmF0ZSBhbmQgYnJhdmU7ICBub3QgdGhlIHdvcmxkJ3MgcmVhc29uLgo8L3RyYW5zbGF0aW9uPg=="
translation['84.84a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iODRhIiB1bml0PSJzZWN0aW9uIiAvPk9yIGRvIHlvdSBkaXNhZ3JlZT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5IG5vdC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm8sIGZvciB0aGUgc291bCBvZiB0aGUgcGhpbG9zb3BoZXIgd291bGQgbm90IHJlYXNvbiBhcyBvdGhlcnMgZG8sIGFuZCB3b3VsZCBub3QgdGhpbmsgaXQgcmlnaHQgdGhhdCBwaGlsb3NvcGh5IHNob3VsZCBzZXQgaXQgZnJlZSwgYW5kIHRoYXQgdGhlbiB3aGVuIHNldCBmcmVlIGl0IHNob3VsZCBnaXZlIGl0c2VsZiBhZ2FpbiBpbnRvIGJvbmRhZ2UgdG8gcGxlYXN1cmUgYW5kIHBhaW4gYW5kIGVuZ2FnZSBpbiBmdXRpbGUgdG9pbCwgbGlrZSBQZW5lbG9wZSB1bndlYXZpbmcgdGhlIHdlYiBzaGUgd292ZS4gIE5vLCBoaXMgc291bCBiZWxpZXZlcyB0aGF0IGl0IG11c3QgZ2FpbiBwZWFjZSBmcm9tIHRoZXNlIGVtb3Rpb25zLCBtdXN0IGZvbGxvdyByZWFzb24gYW5kIGFiaWRlIGFsd2F5cyBpbiBpdCwgYmVob2xkaW5nIHRoYXQgd2hpY2ggaXMgdHJ1ZSBhbmQgZGl2aW5lIGFuZCBub3QgYSBtYXR0ZXIgb2Ygb3BpbmlvbiwgYW5kIG1ha2luZyB0aGF0IGl0cyBvbmx5IGZvb2Q7CjwvdHJhbnNsYXRpb24+"
translation['84.84b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NGIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGluIHRoaXMgd2F5IGl0IGJlbGlldmVzIGl0IG11c3QgbGl2ZSwgd2hpbGUgbGlmZSBlbmR1cmVzLCBhbmQgdGhlbiBhdCBkZWF0aCBwYXNzIG9uIHRvIHRoYXQgd2hpY2ggaXMgYWtpbiB0byBpdHNlbGYgYW5kIG9mIGxpa2UgbmF0dXJlLCBhbmQgYmUgZnJlZSBmcm9tIGh1bWFuIGlsbHMuICBBIHNvdWwgd2hpY2ggaGFzIGJlZW4gbnVydHVyZWQgaW4gdGhpcyB3YXksIFNpbW1pYXMgYW5kIENlYmVzLCBpcyBub3QgbGlrZWx5IHRvIGZlYXIgdGhhdCBpdCB3aWxsIGJlIHRvcm4gYXN1bmRlciBhdCBpdHMgZGVwYXJ0dXJlIGZyb20gdGhlIGJvZHkgYW5kIHdpbGwgdmFuaXNoIGludG8gbm90aGluZ25lc3MsIGJsb3duIGFwYXJ0IGJ5IHRoZSB3aW5kcywgYW5kIGJlIG5vIGxvbmdlciBhbnl3aGVyZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+V2hlbiBTb2NyYXRlcyBoYWQgc2FpZCB0aGlzIHRoZXJlIHdhcyBzaWxlbmNlCjwvdHJhbnNsYXRpb24+"
translation['84.84c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NGMiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIGEgbG9uZyB0aW1lLCBhbmQgU29jcmF0ZXMgaGltc2VsZiB3YXMgYXBwYXJlbnRseSBhYnNvcmJlZCBpbiB3aGF0IGhhZCBiZWVuIHNhaWQsIGFzIHdlcmUgYWxzbyBtb3N0IG9mIHVzLiAgQnV0IFNpbW1pYXMgYW5kIENlYmVzIGNvbnZlcnNlZCBhIGxpdHRsZSB3aXRoIGVhY2ggb3RoZXI7ICBhbmQgU29jcmF0ZXMgc2F3IHRoZW0gYW5kIHNhaWQ6ICDigJxEbyB5b3UgdGhpbmsgdGhlcmUgaXMgYW55IGluY29tcGxldGVuZXNzIGluIHdoYXQgaGFzIGJlZW4gc2FpZD8gIFRoZXJlIGFyZSBzdGlsbCBtYW55IHN1YmplY3RzIGZvciBkb3VidCBhbmQgbWFueSBwb2ludHMgb3BlbiB0byBhdHRhY2ssIGlmIGFueW9uZSBjYXJlcyB0byBkaXNjdXNzIHRoZSBtYXR0ZXIgdGhvcm91Z2hseS4gIElmIHlvdSBhcmUgY29uc2lkZXJpbmcgYW55dGhpbmcgZWxzZSwgSSBoYXZlIG5vdGhpbmcgdG8gc2F5OyAgYnV0IGlmIHlvdSBhcmUgaW4gYW55IGRpZmZpY3VsdHkgYWJvdXQgdGhlc2UgbWF0dGVycywgZG8gbm90IGhlc2l0YXRlCjwvdHJhbnNsYXRpb24+"
translation['84.84d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NGQiIHVuaXQ9InNlY3Rpb24iIC8+dG8gc3BlYWsgYW5kIGRpc2N1c3MgdGhlbSB5b3Vyc2VsdmVzLCBpZiB5b3UgdGhpbmsgYW55dGhpbmcgYmV0dGVyIGNvdWxkIGJlIHNhaWQgb24gdGhlIHN1YmplY3QsIGFuZCB0byB0YWtlIG1lIGFsb25nIHdpdGggeW91IGluIHRoZSBkaXNjdXNzaW9uLCBpZiB5b3UgdGhpbmsgeW91IGNhbiBnZXQgb24gYmV0dGVyIGluIG15IGNvbXBhbnku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBTaW1taWFzIHNhaWQ6ICDigJxTb2NyYXRlcywgSSB3aWxsIHRlbGwgeW91IHRoZSB0cnV0aC4gIEZvciBzb21lIHRpbWUgZWFjaCBvZiB1cyBoYXMgYmVlbiBpbiBkb3VidCBhbmQgaGFzIGJlZW4gZWdnaW5nIHRoZSBvdGhlciBvbiBhbmQgdXJnaW5nIGhpbSB0byBhc2sgYSBxdWVzdGlvbiwgYmVjYXVzZSB3ZSB3aXNoIHRvIGhlYXIgeW91ciBhbnN3ZXIsIGJ1dCBoZXNpdGF0ZSB0byB0cm91YmxlIHlvdSwgZm9yIGZlYXIgdGhhdCBpdCBtYXkgYmUgZGlzYWdyZWVhYmxlIHRvIHlvdSBpbiB5b3VyIHByZXNlbnQgbWlzZm9ydHVuZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIHdoZW4gaGUgaGVhcmQgaXMsIGhlIGxhdWdoZWQgZ2VudGx5IGFuZCBzYWlkOiAg4oCcQWgsCjwvdHJhbnNsYXRpb24+"
translation['84.84e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NGUiIHVuaXQ9InNlY3Rpb24iIC8+U2ltbWlhcyEgIEkgc2hvdWxkIGhhdmUgaGFyZCB3b3JrIHRvIHBlcnN1YWRlIG90aGVyIHBlb3BsZSB0aGF0IEkgZG8gbm90IHJlZ2FyZCBteSBwcmVzZW50IHNpdHVhdGlvbiBhcyBhIG1pc2ZvcnR1bmUsIHdoZW4gSSBjYW5ub3QgZXZlbiBtYWtlIHlvdSBiZWxpZXZlIGl0LCBidXQgeW91IGFyZSBhZnJhaWQgSSBhbSBtb3JlIGNodXJsaXNoIG5vdyB0aGFuIEkgdXNlZCB0byBiZS4gIEFuZCB5b3Ugc2VlbSB0byB0aGluayBJIGFtIGluZmVyaW9yIGluIHByb3BoZXRpYyBwb3dlciB0byB0aGUgc3dhbnMgd2hvIHNpbmcgYXQgb3RoZXIgdGltZXMgYWxzbywgYnV0IHdoZW4gdGhleSBmZWVsIHRoYXQgdGhleSBhcmUgdG8gZGllLAo8L3RyYW5zbGF0aW9uPg=="
translation['85.85a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iODVhIiB1bml0PSJzZWN0aW9uIiAvPnNpbmcgbW9zdCBhbmQgYmVzdCBpbiB0aGVpciBqb3kgdGhhdCB0aGV5IGFyZSB0byBnbyB0byB0aGUgZ29kIHdob3NlIHNlcnZhbnRzIHRoZXkgYXJlLiAgQnV0IG1lbiwgYmVjYXVzZSBvZiB0aGVpciBvd24gZmVhciBvZiBkZWF0aCwgbWlzcmVwcmVzZW50IHRoZSBzd2FucyBhbmQgc2F5IHRoYXQgdGhleSBzaW5nIGZvciBzb3Jyb3csIGluIG1vdXJuaW5nIGZvciB0aGVpciBvd24gZGVhdGguICBUaGV5IGRvIG5vdCBjb25zaWRlciB0aGF0IG5vIGJpcmQgc2luZ3Mgd2hlbiBpdCBpcyBodW5ncnkgb3IgY29sZCBvciBoYXMgYW55IG90aGVyIHRyb3VibGU7ICBubywgbm90IGV2ZW4gdGhlIG5pZ2h0aW5nYWxlIG9yIHRoZSBzd2FsbG93IG9yIHRoZSBob29wb2Ugd2hpY2ggYXJlIHNhaWQgdG8gc2luZyBpbiBsYW1lbnRhdGlvbi4gIEkgZG8gbm90IGJlbGlldmUgdGhleSBzaW5nIGZvciBncmllZiwgbm9yIGRvIHRoZSBzd2FuczsKPC90cmFuc2xhdGlvbj4="
translation['85.85b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NWIiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IHNpbmNlIHRoZXkgYXJlIEFwb2xsbydzIGJpcmRzLCBJIGJlbGlldmUgdGhleSBoYXZlIHByb3BoZXRpYyB2aXNpb24sIGFuZCBiZWNhdXNlIHRoZXkgaGF2ZSBmb3Jla25vd2xlZGdlIG9mIHRoZSBibGVzc2luZ3MgaW4gdGhlIG90aGVyIHdvcmxkIHRoZXkgc2luZyBhbmQgcmVqb2ljZSBvbiB0aGF0IGRheSBtb3JlIHRoYW4gZXZlciBiZWZvcmUuICBBbmQgSSB0aGluayB0aGF0IEkgYW0gbXlzZWxmIGEgZmVsbG93LXNlcnZhbnQgb2YgdGhlIHN3YW5zOyAgYW5kIGFtIGNvbnNlY3JhdGVkIHRvIHRoZSBzYW1lIEdvZCBhbmQgaGF2ZSByZWNlaXZlZCBmcm9tIG91ciBtYXN0ZXIgYSBnaWZ0IG9mIHByb3BoZWN5IG5vIHdoaXQgaW5mZXJpb3IgdG8gdGhlaXJzLCBhbmQgdGhhdCBJIGdvIG91dCBmcm9tIGxpZmUgd2l0aCBhcyBsaXR0bGUgc29ycm93IGFzIHRoZXkuICBTbyBmYXIgYXMgdGhpcyBpcyBjb25jZXJuZWQsIHRoZW4sIHNwZWFrIGFuZCBhc2sgd2hhdCBldmVyIHF1ZXN0aW9ucyB5b3UgcGxlYXNlLCBzbyBsb25nIGFzIHRoZSBlbGV2ZW4gb2YgdGhlIEF0aGVuaWFucyBwZXJtaXQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEdvb2Qs4oCdIHNhaWQgU2ltbWlhcy4KPC90cmFuc2xhdGlvbj4="
translation['85.85c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NWMiIHVuaXQ9InNlY3Rpb24iIC8+4oCcSSB3aWxsIHRlbGwgeW91IG15IGRpZmZpY3VsdHksIGFuZCB0aGVuIENlYmVzIGluIHR1cm4gd2lsbCBzYXkgd2h5IGhlIGRvZXMgbm90IGFncmVlIHRvIGFsbCB5b3UgaGF2ZSBzYWlkLiAgSSB0aGluaywgU29jcmF0ZXMsIGFzIHBlcmhhcHMgeW91IGRvIHlvdXJzZWxmLCB0aGF0IGl0IGlzIGVpdGhlciBpbXBvc3NpYmxlIG9yIHZlcnkgZGlmZmljdWx0IHRvIGFjcXVpcmUgY2xlYXIga25vd2xlZGdlIGFib3V0IHRoZXNlIG1hdHRlcnMgaW4gdGhpcyBsaWZlLiAgQW5kIHlldCBoZSBpcyBhIHdlYWtsaW5nIHdobyBkb2VzIG5vdCB0ZXN0IGluIGV2ZXJ5IHdheSB3aGF0IGlzIHNhaWQgYWJvdXQgdGhlbSBhbmQgcGVyc2V2ZXJlIHVudGlsIGhlIGlzIHdvcm4gb3V0IGJ5IHN0dWR5aW5nIHRoZW0gb24gZXZlcnkgc2lkZS4gIEZvciBoZSBtdXN0IGRvIG9uZSBvZiB0d28gdGhpbmdzOyAgZWl0aGVyIGhlIG11c3QgbGVhcm4gb3IgZGlzY292ZXIgdGhlIHRydXRoIGFib3V0IHRoZXNlIG1hdHRlcnMsIG9yIGlmIHRoYXQgaXMgaW1wb3NzaWJsZSwgaGUgbXVzdCB0YWtlIHdoYXRldmVyIGh1bWFuIGRvY3RyaW5lIGlzIGJlc3QKPC90cmFuc2xhdGlvbj4="
translation['85.85d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NWQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGhhcmRlc3QgdG8gZGlzcHJvdmUgYW5kLCBlbWJhcmtpbmcgdXBvbiBpdCBhcyB1cG9uIGEgcmFmdCwgc2FpbCB1cG9uIGl0IHRocm91Z2ggbGlmZSBpbiB0aGUgbWlkc3Qgb2YgZGFuZ2VycywgdW5sZXNzIGhlIGNhbiBzYWlsIHVwb24gc29tZSBzdHJvbmdlciB2ZXNzZWwsIHNvbWUgZGl2aW5lIHJldmVsYXRpb24sIGFuZCBtYWtlIGhpcyB2b3lhZ2UgbW9yZSBzYWZlbHkgYW5kIHNlY3VyZWx5LiAgQW5kIHNvIG5vdyBJIGFtIG5vdCBhc2hhbWVkIHRvIGFzayBxdWVzdGlvbnMsIHNpbmNlIHlvdSBlbmNvdXJhZ2UgbWUgdG8gZG8gc28sIGFuZCBJIHNoYWxsIG5vdCBoYXZlIHRvIGJsYW1lIG15c2VsZiBoZXJlYWZ0ZXIgZm9yIG5vdCBzYXlpbmcgbm93IHdoYXQgSSB0aGluay4gIEZvciwgU29jcmF0ZXMsIHdoZW4gSSBleGFtaW5lIHdoYXQgaGFzIGJlZW4gc2FpZCwgZWl0aGVyIGFsb25lIG9yIHdpdGggQ2ViZXMsIGl0IGRvZXMgbm90IHNlZW0gcXVpdGUgc2F0aXNmYWN0b3J5LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['85.85e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NWUiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIFNvY3JhdGVzIHJlcGxpZWQ6ICDigJxQZXJoYXBzLCBteSBmcmllbmQsIHlvdSBhcmUgcmlnaHQuICBCdXQgdGVsbCBtZSBpbiB3aGF0IHJlc3BlY3QgaXQgaXMgbm90IHNhdGlzZmFjdG9yeS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSW4gdGhpcyzigJ0gc2FpZCBoZSwg4oCcdGhhdCBvbmUgbWlnaHQgdXNlIHRoZSBzYW1lIGFyZ3VtZW50IGFib3V0IGhhcm1vbnkgYW5kIGEgbHlyZSB3aXRoIGl0cyBzdHJpbmdzLiAgT25jZSBtaWdodCBzYXkgdGhhdCB0aGUgaGFybW9ueSBpcyBpbnZpc2libGUgYW5kIGluY29ycG9yZWFsLCBhbmQgdmVyeSBiZWF1dGlmdWwgYW5kCjwvdHJhbnNsYXRpb24+"
translation['86.86a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iODZhIiB1bml0PSJzZWN0aW9uIiAvPmRpdmluZSBpbiB0aGUgd2VsbCBhdHR1bmVkIGx5cmUsIGJ1dCB0aGUgbHlyZSBpdHNlbGYgYW5kIGl0cyBzdHJpbmdzIGFyZSBib2RpZXMsIGFuZCBjb3Jwb3JlYWwgYW5kIGNvbXBvc2l0ZSBhbmQgZWFydGh5IGFuZCBha2luIHRvIHRoYXQgd2hpY2ggaXMgbW9ydGFsLiAgTm93IGlmIHNvbWVvbmUgc2hhdHRlcnMgdGhlIGx5cmUgb3IgY3V0cyBhbmQgYnJlYWtzIHRoZSBzdHJpbmdzLCB3aGF0IGlmIGhlIHNob3VsZCBtYWludGFpbiBieSB0aGUgc2FtZSBhcmd1bWVudCB5b3UgZW1wbG95ZWQsIHRoYXQgdGhlIGhhcm1vbnkgY291bGQgbm90IGhhdmUgcGVyaXNoZWQgYW5kIG11c3Qgc3RpbGwgZXhpc3Q/ICBGb3IgdGhlcmUgd291bGQgYmUgbm8gcG9zc2liaWxpdHkgdGhhdCB0aGUgbHlyZSBhbmQgaXRzIHN0cmluZ3MsIHdoaWNoIGFyZSBvZiBtb3J0YWwgbmF0dXJlLCBzdGlsbCBleGlzdCBhZnRlciB0aGUgc3RyaW5ncyBhcmUgYnJva2VuLCBhbmQgdGhlIGhhcm1vbnksCjwvdHJhbnNsYXRpb24+"
translation['86.86b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NmIiIHVuaXQ9InNlY3Rpb24iIC8+d2hpY2ggaXMgcmVsYXRlZCBhbmQgYWtpbiB0byB0aGUgZGl2aW5lIGFuZCB0aGUgaW1tb3J0YWwsIHBlcmlzaCBiZWZvcmUgdGhhdCB3aGljaCBpcyBtb3J0YWwuICBIZSB3b3VsZCBzYXkgdGhhdCB0aGUgaGFybW9ueSBtdXN0IHN0aWxsIGV4aXN0IHNvbWV3aGVyZSwgYW5kIHRoYXQgdGhlIHdvb2QgYW5kIHRoZSBzdHJpbmdzIG11c3Qgcm90IGF3YXkgYmVmb3JlIGFueXRoaW5nIGNvdWxkIGhhcHBlbiB0byBpdC4gIEFuZCBJIGZhbmN5LCBTb2NyYXRlcywgdGhhdCBpdCBtdXN0IGhhdmUgb2NjdXJyZWQgdG8geW91ciBvd24gbWluZCB0aGF0IHdlIGJlbGlldmUgdGhlIHNvdWwgdG8gYmUgc29tZXRoaW5nIGFmdGVyIHRoaXMgZmFzaGlvbjsgIHRoYXQgb3VyIGJvZHkgaXMgc3RydW5nIGFuZCBoZWxkIHRvZ2V0aGVyIGJ5IGhlYXQsIGNvbGQsIG1vaXN0dXJlLCBkcnluZXNzLCBhbmQgdGhlIGxpa2UsCjwvdHJhbnNsYXRpb24+"
translation['86.86c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NmMiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoZSBzb3VsIGlzIGEgbWl4dHVyZSBhbmQgYSBoYXJtb255IG9mIHRoZXNlIHNhbWUgZWxlbWVudHMsIHdoZW4gdGhleSBhcmUgd2VsbCBhbmQgcHJvcGVybHkgbWl4ZWQuICBOb3cgaWYgdGhlIHNvdWwgaXMgYSBoYXJtb255LCBpdCBpcyBjbGVhciB0aGF0IHdoZW4gdGhlIGJvZHkgaXMgdG9vIG11Y2ggcmVsYXhlZCBvciBpcyB0b28gdGlnaHRseSBzdHJ1bmcgYnkgZGlzZWFzZXMgb3Igb3RoZXIgaWxscywgdGhlIHNvdWwgbXVzdCBvZiBuZWNlc3NpdHkgcGVyaXNoLCBubyBtYXR0ZXIgaG93IGRpdmluZSBpdCBpcywgbGlrZSBvdGhlciBoYXJtb25pZXMgaW4gc291bmRzIGFuZCBpbiBhbGwgdGhlIHdvcmtzIG9mIGFydGlzdHMsIGFuZCB0aGUgcmVtYWlucyBvZiBlYWNoIGJvZHkgd2lsbCBlbmR1cmUKPC90cmFuc2xhdGlvbj4="
translation['86.86d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NmQiIHVuaXQ9InNlY3Rpb24iIC8+YSBsb25nIHRpbWUgdW50aWwgdGhleSBhcmUgYnVybnQgb3IgZGVjYXllZC4gIE5vdyB3aGF0IHNoYWxsIHdlIHNheSB0byB0aGlzIGFyZ3VtZW50LCBpZiBhbnlvbmUgY2xhaW1zIHRoYXQgdGhlIHNvdWwsIGJlaW5nIGEgbWl4dHVyZSBvZiB0aGUgZWxlbWVudHMgb2YgdGhlIGJvZHksIGlzIHRoZSBmaXJzdCB0byBwZXJpc2ggaW4gd2hhdCBpcyBjYWxsZWQgZGVhdGg/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZW4gU29jcmF0ZXMsIGxvb2tpbmcga2Vlbmx5IGF0IHVzLCBhcyBoZSBvZnRlbiB1c2VkIHRvIGRvLCBzbWlsZWQgYW5kIHNhaWQ6ICDigJxTaW1taWFzIHJhaXNlcyBhIGZhaXIgb2JqZWN0aW9uLiAgTm93IGlmIGFueSBvZiB5b3UgaXMgcmVhZGllciB0aGFuIEksIHdoeSBkb2VzIGhlIG5vdCByZXBseSB0byBoaW0/ICBGb3IgaGUgc2VlbXMgdG8gc2NvcmUgYSBnb29kIHBvaW50LiAgSG93ZXZlciwgSSB0aGluawo8L3RyYW5zbGF0aW9uPg=="
translation['86.86e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NmUiIHVuaXQ9InNlY3Rpb24iIC8+YmVmb3JlIHJlcGx5aW5nIHRvIGhpbSB3ZSBvdWdodCB0byBoZWFyIHdoYXQgZmF1bHQgb3VyIGZyaWVuZCBDZWJlcyBmaW5kcyB3aXRoIG91ciBhcmd1bWVudCwgdGhhdCB3ZSBtYXkgdGFrZSB0aW1lIHRvIGNvbnNpZGVyIHdoYXQgdG8gc2F5LCBhbmQgdGhlbiB3aGVuIHdlIGhhdmUgaGVhcmQgdGhlbSwgd2UgY2FuIGVpdGhlciBhZ3JlZSB3aXRoIHRoZW0sIGlmIHRoZXkgc2VlbSB0byBzdHJpa2UgdGhlIHByb3BlciBub3RlLCBvciwgaWYgdGhleSBkbyBub3QsIHdlIGNhbiBwcm9jZWVkIHRvIGFyZ3VlIGluIGRlZmVuY2Ugb2Ygb3VyIHJlYXNvbmluZy4gIENvbWUsIENlYmVzLOKAnSBzYWlkIGhlLCDigJx0ZWxsIHVzIHdoYXQgaXQgd2FzIHRoYXQgdHJvdWJsZWQgeW91LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLCBJIHdpbGwgdGVsbCB5b3Us4oCdIHNhaWQgQ2ViZXMuICDigJxUaGUgYXJndW1lbnQgc2VlbXMgdG8gbWUgdG8gYmUganVzdCB3aGVyZSBpdCB3YXMsIGFuZCB0byBiZSBzdGlsbCBvcGVuIHRvIHRoZSBvYmplY3Rpb24gSSBtYWRlIGJlZm9yZS4KPC90cmFuc2xhdGlvbj4="
translation['87.87a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4NyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iODdhIiB1bml0PSJzZWN0aW9uIiAvPkZvciBJIGRvIG5vdCBkZW55IHRoYXQgaXQgaGFzIGJlZW4gdmVyeSBjbGV2ZXJseSwgYW5kLCBpZiBJIG1heSBzYXkgc28sIGNvbmNsdXNpdmVseSBzaG93biB0aGF0IHRoZSBzb3VsIGV4aXN0ZWQgYmVmb3JlIGl0IGVudGVyZWQgaW50byB0aGlzIGJvZGlseSBmb3JtLCBidXQgaXQgZG9lcyBub3Qgc2VlbSB0byBtZSBwcm92ZWQgdGhhdCBpdCB3aWxsIHN0aWxsIGV4aXN0IHdoZW4gd2UgYXJlIGRlYWQuICBJIGRvIG5vdCBhZ3JlZSB3aXRoIFNpbW1pYXMnIG9iamVjdGlvbiwgdGhhdCB0aGUgc291bCBpcyBub3Qgc3Ryb25nZXIgYW5kIG1vcmUgbGFzdGluZyB0aGFuIHRoZSBib2R5LCBmb3IgSSB0aGluayBpdCBpcyBmYXIgc3VwZXJpb3IgaW4gYWxsIHN1Y2ggcmVzcGVjdHMuICAnV2h5IHRoZW4sJyB0aGUgYXJndW1lbnQgbWlnaHQgc2F5LCAnZG8geW91IHN0aWxsIGRpc2JlbGlldmUsIHdoZW4geW91IHNlZSB0aGF0IGFmdGVyIGEgbWFuIGRpZXMKPC90cmFuc2xhdGlvbj4="
translation['87.87b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4N2IiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIHdlYWtlciBwYXJ0IHN0aWxsIGV4aXN0cz8gIERvIHlvdSBub3QgdGhpbmsgdGhlIHN0cm9uZ2VyIHBhcnQgbXVzdCBuZWNlc3NhcmlseSBiZSBwcmVzZXJ2ZWQgZHVyaW5nIHRoZSBzYW1lIGxlbmd0aCBvZiB0aW1lPycgIE5vdyBzZWUgaWYgbXkgcmVwbHkgdG8gdGhpcyBoYXMgYW55IHNlbnNlLiAgSSB0aGluayBJIG1heSwgbGlrZSBTaW1taWFzLCBiZXN0IGV4cHJlc3MgbXlzZWxmIGluIGEgZmlndXJlLiAgSXQgc2VlbXMgdG8gbWUgdGhhdCBpdCBpcyBtdWNoIGFzIGlmIG9uZSBzaG91bGQgc2F5IGFib3V0IGFuIG9sZCB3ZWF2ZXIgd2hvIGhhZCBkaWVkLCB0aGF0IHRoZSBtYW4gaGFkIG5vdCBwZXJpc2hlZCBidXQgd2FzIHNhZmUgYW5kIHNvdW5kIHNvbWV3aGVyZSwgYW5kIHNob3VsZCBvZmZlciBhcyBhIHByb29mIG9mIHRoaXMgdGhlIGZhY3QgdGhhdCB0aGUgY2xvYWsgd2hpY2ggdGhlIG1hbiBoYWQgd292ZW4gYW5kIHVzZWQgdG8gd2VhciB3YXMgc3RpbGwgd2hvbGUgYW5kIGhhZCBub3QgcGVyaXNoZWQuICBUaGVuIGlmIGFueW9uZSBkaWQgbm90IGJlbGlldmUgaGltLCBoZSB3b3VsZCBhc2sKPC90cmFuc2xhdGlvbj4="
translation['87.87c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4N2MiIHVuaXQ9InNlY3Rpb24iIC8+d2hpY2ggbGFzdHMgbG9uZ2VyLCBhIG1hbiBvciBhIGNsb2FrIHRoYXQgaXMgaW4gdXNlIGFuZCB3ZWFyLCBhbmQgd2hlbiB0aGUgYW5zd2VyIHdhcyBnaXZlbiB0aGF0IGEgbWFuIGxhc3RzIG11Y2ggbG9uZ2VyLCBoZSB3b3VsZCB0aGluayBpdCBoYWQgYmVlbiBwcm92ZWQgYmV5b25kIGEgZG91YnQgdGhhdCB0aGUgbWFuIHdhcyBzYWZlLCBiZWNhdXNlIHRoYXQgd2hpY2ggd2FzIGxlc3MgbGFzdGluZyBoYWQgbm90IHBlcmlzaGVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQgSSBkbyBub3QgdGhpbmsgaGUgaXMgcmlnaHQsIFNpbW1pYXMsIGFuZCBJIGFzayB5b3UgZXNwZWNpYWxseSB0byBub3RpY2Ugd2hhdCBJIHNheS4gIEFueW9uZSBjYW4gdW5kZXJzdGFuZCB0aGF0IGEgbWFuIHdobyBzYXlzIHRoaXMgaXMgdGFsa2luZyBub25zZW5zZS4gIEZvciB0aGUgd2VhdmVyIGluIHF1ZXN0aW9uIHdvdmUgYW5kIHdvcmUgb3V0IG1hbnkgc3VjaCBjbG9ha3MgYW5kCjwvdHJhbnNsYXRpb24+"
translation['87.87d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4N2QiIHVuaXQ9InNlY3Rpb24iIC8+bGFzdGVkIGxvbmdlciB0aGFuIHRoZXksIHRob3VnaCB0aGV5IHdlcmUgbWFueSwgYnV0IHBlcmlzaGVkLCBJIHN1cHBvc2UsIGJlZm9yZSB0aGUgbGFzdCBvbmUuICBZZXQgYSBtYW4gaXMgbm90IGZlZWJsZXIgb3Igd2Vha2VyIHRoYW4gYSBjbG9hayBvbiB0aGF0IGFjY291bnQgYXQgYWxsLiAgQW5kIEkgdGhpbmsgdGhlIHNhbWUgZmlndXJlIHdvdWxkIGFwcGx5IHRvIHRoZSBzb3VsIGFuZCB0aGUgYm9keSBhbmQgaXQgd291bGQgYmUgcXVpdGUgYXBwcm9wcmlhdGUgdG8gc2F5IGluIGxpa2UgbWFubmVyIGFib3V0IHRoZW0sIHRoYXQgdGhlIHNvdWwgbGFzdHMgYSBsb25nIHRpbWUsIGJ1dCB0aGUgYm9keSBsYXN0cyBhIHNob3J0ZXIgdGltZSBhbmQgaXMgd2Vha2VyLiAgQW5kLCBvbmUgbWlnaHQgZ28gb24gdG8gc2F5IHRoYXQgZWFjaCBzb3VsIHdlYXJzIG91dCBtYW55IGJvZGllcywgZXNwZWNpYWxseSBpZiB0aGUgbWFuIGxpdmVzIG1hbnkgeWVhcnMuICBGb3IgaWYgdGhlIGJvZHkgaXMgY29uc3RhbnRseSBjaGFuZ2luZyBhbmQgYmVpbmcgZGVzdHJveWVkIHdoaWxlIHRoZSBtYW4gc3RpbGwgbGl2ZXMsCjwvdHJhbnNsYXRpb24+"
translation['87.87e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4N2UiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoZSBzb3VsIGlzIGFsd2F5cyB3ZWF2aW5nIGFuZXcgdGhhdCB3aGljaCB3ZWFycyBvdXQsIHRoZW4gd2hlbiB0aGUgc291bCBwZXJpc2hlcyBpdCBtdXN0IG5lY2Vzc2FyaWx5IGhhdmUgb24gaXRzIGxhc3QgZ2FybWVudCwgYW5kIHRoaXMgb25seSB3aWxsIHN1cnZpdmUgaXQsIGFuZCB3aGVuIHRoZSBzb3VsIGhhcyBwZXJpc2hlZCwgdGhlbiB0aGUgYm9keSB3aWxsIGF0IG9uY2Ugc2hvdyBpdHMgbmF0dXJhbCB3ZWFrbmVzcyBhbmQgd2lsbCBxdWlja2x5IGRpc2FwcGVhciBpbiBkZWNheS4gIEFuZCBzbyB3ZSBhcmUgbm90IHlldCBqdXN0aWZpZWQgaW4gZmVlbGluZyBzdXJlLCBvbiB0aGUgc3RyZW5ndGggb2YgdGhpcyBhcmd1bWVudCwKPC90cmFuc2xhdGlvbj4="
translation['88.88a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iODhhIiB1bml0PSJzZWN0aW9uIiAvPnRoYXQgb3VyIHNvdWxzIHdpbGwgc3RpbGwgZXhpc3Qgc29tZXdoZXJlIGFmdGVyIHdlIGFyZSBkZWFkLiAgRm9yIGlmIG9uZSB3ZXJlIHRvIGdyYW50IGV2ZW4gbW9yZSB0byBhIG1hbiB3aG8gdXNlcyB5b3VyIGFyZ3VtZW50LCBTb2NyYXRlcywgYW5kIGFsbG93IG5vdCBvbmx5IHRoYXQgb3VyIHNvdWxzIGV4aXN0ZWQgYmVmb3JlIHdlIHdlcmUgYm9ybiwgYnV0IGFsc28gdGhhdCB0aGVyZSBpcyBub3RoaW5nIHRvIHByZXZlbnQgc29tZSBvZiB0aGVtIGZyb20gY29udGludWluZyB0byBleGlzdCBhbmQgZnJvbSBiZWluZyBib3JuIGFuZCBkeWluZyBhZ2FpbiBtYW55IHRpbWVzIGFmdGVyIHdlIGFyZSBkZWFkLCBiZWNhdXNlIHRoZSBzb3VsIGlzIG5hdHVyYWxseSBzbyBzdHJvbmcgdGhhdCBpdCBjYW4gZW5kdXJlIHJlcGVhdGVkIGJpcnRocyzigJRldmVuIGFsbG93aW5nIHRoaXMsIG9uZSBtaWdodCBub3QgZ3JhbnQgdGhhdCBpdCBkb2VzIG5vdCBzdWZmZXIgYnkgaXRzIG1hbnkgYmlydGhzIGFuZCBkb2VzIG5vdCBmaW5hbGx5IHBlcmlzaCBhbHRvZ2V0aGVyIGluIG9uZSBvZiBpdHMgZGVhdGhzLgo8L3RyYW5zbGF0aW9uPg=="
translation['88.88b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OGIiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IGhlIG1pZ2h0IHNheSB0aGF0IG5vIG9uZSBrbm93cyBiZWZvcmVoYW5kIHRoZSBwYXJ0aWN1bGFyIGRlYXRoIGFuZCB0aGUgcGFydGljdWxhciBkaXNzb2x1dGlvbiBvZiB0aGUgYm9keSB3aGljaCBicmluZ3MgZGVzdHJ1Y3Rpb24gdG8gdGhlIHNvdWwsIGZvciBub25lIG9mIHVzIGNhbiBwZXJjZWl2ZSB0aGF0LiAgTm93IGlmIHRoaXMgaXMgdGhlIGNhc2UsIGFueW9uZSB3aG8gZmVlbHMgY29uZmlkZW50IGFib3V0IGRlYXRoIGhhcyBhIGZvb2xpc2ggY29uZmlkZW5jZSwgdW5sZXNzIGhlIGNhbiBzaG93IHRoYXQgdGhlIHNvdWwgaXMgYWx0b2dldGhlciBpbW1vcnRhbCBhbmQgaW1wZXJpc2hhYmxlLiAgT3RoZXJ3aXNlIGEgbWFuIHdobyBpcyBhYm91dCB0byBkaWUgbXVzdCBhbHdheXMgZmVhciB0aGF0IGhpcyBzb3VsIHdpbGwgcGVyaXNoIHV0dGVybHkgaW4gdGhlIGltcGVuZGluZyBkaXNzb2x1dGlvbiBvZiB0aGUgYm9keS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+Tm93IGFsbCBvZiB1cywgYXMgd2UgcmVtYXJrZWQgdG8gb25lIGFub3RoZXIgYWZ0ZXJ3YXJkcywKPC90cmFuc2xhdGlvbj4="
translation['88.88c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OGMiIHVuaXQ9InNlY3Rpb24iIC8+d2VyZSB2ZXJ5IHVuY29tZm9ydGFibGUgd2hlbiB3ZSBoZWFyZCB3aGF0IHRoZXkgc2FpZDsgIGZvciB3ZSBoYWQgYmVlbiB0aG9yb3VnaGx5IGNvbnZpbmNlZCBieSB0aGUgcHJldmlvdXMgYXJndW1lbnQsIGFuZCBub3cgdGhleSBzZWVtZWQgdG8gYmUgdGhyb3dpbmcgdXMgYWdhaW4gaW50byBjb25mdXNpb24gYW5kIGRpc3RydXN0LCBub3Qgb25seSBpbiByZXNwZWN0IHRvIHRoZSBwYXN0IGRpc2N1c3Npb24gYnV0IGFsc28gd2l0aCByZWdhcmQgdG8gYW55IGZ1dHVyZSBvbmUuICBUaGV5IG1hZGUgdXMgZmVhciB0aGF0IG91ciBqdWRnbWVudCB3YXMgd29ydGhsZXNzIG9yIHRoYXQgbm8gY2VydGFpbnR5IGNvdWxkIGJlIGF0dGFpbmVkIGluIHRoZXNlIG1hdHRlcnMuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FY2hlY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnkgdGhlIGdvZHMsIFBoYWVkbywgSSBzeW1wYXRoaXplIHdpdGggeW91OyAgZm9yIEkgbXlzZWxmIGFmdGVyIGxpc3RlbmluZyB0byB5b3UgYW0gaW5jbGluZWQgdG8gYXNrIG15c2VsZjoKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49Ijg4ZCIgdW5pdD0ic2VjdGlvbiIgLz7igJxXaGF0IGFyZ3VtZW50IHNoYWxsIHdlIGJlbGlldmUgaGVuY2Vmb3J0aD8gIEZvciB0aGUgYXJndW1lbnQgb2YgU29jcmF0ZXMgd2FzIHBlcmZlY3RseSBjb252aW5jaW5nLCBhbmQgbm93IGl0IGhhcyBmYWxsZW4gaW50byBkaXNjcmVkaXQu4oCdICBGb3IgdGhlIGRvY3RyaW5lIHRoYXQgdGhlIHNvdWwgaXMgYSBraW5kIG9mIGhhcm1vbnkgaGFzIGFsd2F5cyBoYWQgKGFuZCBoYXMgbm93KSBhIHdvbmRlcmZ1bCBob2xkIHVwb24gbWUsIGFuZCB5b3VyIG1lbnRpb24gb2YgaXQgcmVtaW5kZWQgbWUgdGhhdCBJIGhhZCBteXNlbGYgYmVsaWV2ZWQgaW4gaXQgYmVmb3JlLiAgTm93IEkgbXVzdCBiZWdpbiBvdmVyIGFnYWluIGFuZCBmaW5kIGFub3RoZXIgYXJndW1lbnQgdG8gY29udmluY2UgbWUgdGhhdCB3aGVuIGEgbWFuIGRpZXMgaGlzIHNvdWwgZG9lcyBub3QgcGVyaXNoIHdpdGggaGltLiAgU28sIGZvciBoZWF2ZW4ncyBzYWtlLCB0ZWxsIGhvdyBTb2NyYXRlcwo8bWlsZXN0b25lIG49Ijg4ZSIgdW5pdD0ic2VjdGlvbiIgLz5jb250aW51ZWQgdGhlIGRpc2NvdXJzZSwgYW5kIHdoZXRoZXIgaGUgYWxzbywgYXMgeW91IHNheSB0aGUgcmVzdCBvZiB5b3UgZGlkLCBzaG93ZWQgYW55IHVuZWFzaW5lc3MsIG9yIGNhbG1seSBkZWZlbmRlZCBoaXMgYXJndW1lbnQuICBBbmQgZGlkIGhlIGRlZmVuZCBpdCBzdWNjZXNzZnVsbHk/ICBUZWxsIHVzIGV2ZXJ5dGhpbmcgYXMgYWNjdXJhdGVseSBhcyB5b3UgY2FuLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWNoZWNyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ5IHRoZSBnb2RzLCBQaGFlZG8sIEkgc3ltcGF0aGl6ZSB3aXRoIHlvdTsgIGZvciBJIG15c2VsZiBhZnRlciBsaXN0ZW5pbmcgdG8geW91IGFtIGluY2xpbmVkIHRvIGFzayBteXNlbGY6CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OGQiIHVuaXQ9InNlY3Rpb24iIC8+4oCcV2hhdCBhcmd1bWVudCBzaGFsbCB3ZSBiZWxpZXZlIGhlbmNlZm9ydGg/ICBGb3IgdGhlIGFyZ3VtZW50IG9mIFNvY3JhdGVzIHdhcyBwZXJmZWN0bHkgY29udmluY2luZywgYW5kIG5vdyBpdCBoYXMgZmFsbGVuIGludG8gZGlzY3JlZGl0LuKAnSAgRm9yIHRoZSBkb2N0cmluZSB0aGF0IHRoZSBzb3VsIGlzIGEga2luZCBvZiBoYXJtb255IGhhcyBhbHdheXMgaGFkIChhbmQgaGFzIG5vdykgYSB3b25kZXJmdWwgaG9sZCB1cG9uIG1lLCBhbmQgeW91ciBtZW50aW9uIG9mIGl0IHJlbWluZGVkIG1lIHRoYXQgSSBoYWQgbXlzZWxmIGJlbGlldmVkIGluIGl0IGJlZm9yZS4gIE5vdyBJIG11c3QgYmVnaW4gb3ZlciBhZ2FpbiBhbmQgZmluZCBhbm90aGVyIGFyZ3VtZW50IHRvIGNvbnZpbmNlIG1lIHRoYXQgd2hlbiBhIG1hbiBkaWVzIGhpcyBzb3VsIGRvZXMgbm90IHBlcmlzaCB3aXRoIGhpbS4gIFNvLCBmb3IgaGVhdmVuJ3Mgc2FrZSwgdGVsbCBob3cgU29jcmF0ZXMKPG1pbGVzdG9uZSBuPSI4OGUiIHVuaXQ9InNlY3Rpb24iIC8+Y29udGludWVkIHRoZSBkaXNjb3Vyc2UsIGFuZCB3aGV0aGVyIGhlIGFsc28sIGFzIHlvdSBzYXkgdGhlIHJlc3Qgb2YgeW91IGRpZCwgc2hvd2VkIGFueSB1bmVhc2luZXNzLCBvciBjYWxtbHkgZGVmZW5kZWQgaGlzIGFyZ3VtZW50LiAgQW5kIGRpZCBoZSBkZWZlbmQgaXQgc3VjY2Vzc2Z1bGx5PyAgVGVsbCB1cyBldmVyeXRoaW5nIGFzIGFjY3VyYXRlbHkgYXMgeW91IGNhbi48L3A+PC90cmFuc2xhdGlvbj4="
translation['88.88d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OGQiIHVuaXQ9InNlY3Rpb24iIC8+4oCcV2hhdCBhcmd1bWVudCBzaGFsbCB3ZSBiZWxpZXZlIGhlbmNlZm9ydGg/ICBGb3IgdGhlIGFyZ3VtZW50IG9mIFNvY3JhdGVzIHdhcyBwZXJmZWN0bHkgY29udmluY2luZywgYW5kIG5vdyBpdCBoYXMgZmFsbGVuIGludG8gZGlzY3JlZGl0LuKAnSAgRm9yIHRoZSBkb2N0cmluZSB0aGF0IHRoZSBzb3VsIGlzIGEga2luZCBvZiBoYXJtb255IGhhcyBhbHdheXMgaGFkIChhbmQgaGFzIG5vdykgYSB3b25kZXJmdWwgaG9sZCB1cG9uIG1lLCBhbmQgeW91ciBtZW50aW9uIG9mIGl0IHJlbWluZGVkIG1lIHRoYXQgSSBoYWQgbXlzZWxmIGJlbGlldmVkIGluIGl0IGJlZm9yZS4gIE5vdyBJIG11c3QgYmVnaW4gb3ZlciBhZ2FpbiBhbmQgZmluZCBhbm90aGVyIGFyZ3VtZW50IHRvIGNvbnZpbmNlIG1lIHRoYXQgd2hlbiBhIG1hbiBkaWVzIGhpcyBzb3VsIGRvZXMgbm90IHBlcmlzaCB3aXRoIGhpbS4gIFNvLCBmb3IgaGVhdmVuJ3Mgc2FrZSwgdGVsbCBob3cgU29jcmF0ZXMKPC90cmFuc2xhdGlvbj4="
translation['88.88e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OGUiIHVuaXQ9InNlY3Rpb24iIC8+Y29udGludWVkIHRoZSBkaXNjb3Vyc2UsIGFuZCB3aGV0aGVyIGhlIGFsc28sIGFzIHlvdSBzYXkgdGhlIHJlc3Qgb2YgeW91IGRpZCwgc2hvd2VkIGFueSB1bmVhc2luZXNzLCBvciBjYWxtbHkgZGVmZW5kZWQgaGlzIGFyZ3VtZW50LiAgQW5kIGRpZCBoZSBkZWZlbmQgaXQgc3VjY2Vzc2Z1bGx5PyAgVGVsbCB1cyBldmVyeXRoaW5nIGFzIGFjY3VyYXRlbHkgYXMgeW91IGNhbi48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlBoYWVkbzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkVjaGVjcmF0ZXMsIEkgaGF2ZSBvZnRlbiB3b25kZXJlZCBhdCBTb2NyYXRlcywgYnV0IG5ldmVyIGRpZCBJIGFkbWlyZSBoaW0gbW9yZQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iODkiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBuPSI4OWEiIHVuaXQ9InNlY3Rpb24iIC8+dGhhbiB0aGVuLiAgVGhhdCBoZSBoYWQgYW4gYW5zd2VyIHJlYWR5IHdhcyBwZXJoYXBzIHRvIGJlIGV4cGVjdGVkOyAgYnV0IHdoYXQgYXN0b25pc2hlZCBtZSBtb3JlIGFib3V0IGhpbSB3YXMsIGZpcnN0LCB0aGUgcGxlYXNhbnQsIGdlbnRsZSwgYW5kIHJlc3BlY3RmdWwgbWFubmVyIGluIHdoaWNoIGhlIGxpc3RlbmVkIHRvIHRoZSB5b3VuZyBtZW4ncyBjcml0aWNpc21zLCBzZWNvbmRseSwgaGlzIHF1aWNrIHNlbnNlIG9mIHRoZSBlZmZlY3QgdGhlaXIgd29yZHMgaGFkIHVwb24gdXMsIGFuZCBsYXN0bHksIHRoZSBza2lsbCB3aXRoIHdoaWNoIGhlIGN1cmVkIHVzIGFuZCwgYXMgaXQgd2VyZSwgcmVjYWxsZWQgdXMgZnJvbSBvdXIgZmxpZ2h0IGFuZCBkZWZlYXQgYW5kIG1hZGUgdXMgZmFjZSBhYm91dCBhbmQgZm9sbG93IGhpbSBhbmQgam9pbiBpbiBoaXMgZXhhbWluYXRpb24gb2YgdGhlIGFyZ3VtZW50LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGhhZWRvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RWNoZWNyYXRlcywgSSBoYXZlIG9mdGVuIHdvbmRlcmVkIGF0IFNvY3JhdGVzLCBidXQgbmV2ZXIgZGlkIEkgYWRtaXJlIGhpbSBtb3JlCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIG49Ijg5YSIgdW5pdD0ic2VjdGlvbiIgLz50aGFuIHRoZW4uICBUaGF0IGhlIGhhZCBhbiBhbnN3ZXIgcmVhZHkgd2FzIHBlcmhhcHMgdG8gYmUgZXhwZWN0ZWQ7ICBidXQgd2hhdCBhc3RvbmlzaGVkIG1lIG1vcmUgYWJvdXQgaGltIHdhcywgZmlyc3QsIHRoZSBwbGVhc2FudCwgZ2VudGxlLCBhbmQgcmVzcGVjdGZ1bCBtYW5uZXIgaW4gd2hpY2ggaGUgbGlzdGVuZWQgdG8gdGhlIHlvdW5nIG1lbidzIGNyaXRpY2lzbXMsIHNlY29uZGx5LCBoaXMgcXVpY2sgc2Vuc2Ugb2YgdGhlIGVmZmVjdCB0aGVpciB3b3JkcyBoYWQgdXBvbiB1cywgYW5kIGxhc3RseSwgdGhlIHNraWxsIHdpdGggd2hpY2ggaGUgY3VyZWQgdXMgYW5kLCBhcyBpdCB3ZXJlLCByZWNhbGxlZCB1cyBmcm9tIG91ciBmbGlnaHQgYW5kIGRlZmVhdCBhbmQgbWFkZSB1cyBmYWNlIGFib3V0IGFuZCBmb2xsb3cgaGltIGFuZCBqb2luIGluIGhpcyBleGFtaW5hdGlvbiBvZiB0aGUgYXJndW1lbnQuPC9wPjwvdHJhbnNsYXRpb24+"
translation['89.89a'] = ""
translation['89.89b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OWIiIHVuaXQ9InNlY3Rpb24iIC8+YmVzaWRlIGhpcyBjb3VjaCwgYW5kIGhpcyBzZWF0IHdhcyBhIGdvb2QgZGVhbCBoaWdoZXIgdGhhbiBtaW5lLiAgSGUgc3Ryb2tlZCBteSBoZWFkIGFuZCBnYXRoZXJlZCB0aGUgaGFpciBvbiB0aGUgYmFjayBvZiBteSBuZWNrIGludG8gaGlzIGhhbmTigJRoZSBoYWQgYSBoYWJpdCBvZiBwbGF5aW5nIHdpdGggbXkgaGFpciBvbiBvY2Nhc2lvbuKAlGFuZCBzYWlkLCDigJxUb21vcnJvdywgcGVyaGFwcywgUGhhZWRvLCB5b3Ugd2lsbCBjdXQgb2ZmIHRoaXMgYmVhdXRpZnVsIGhhaXIu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEkgc3VwcG9zZSBzbywgU29jcmF0ZXMs4oCdIHNhaWQgSS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm90IGlmIHlvdSB0YWtlIG15IGFkdmljZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2hhdCBzaGFsbCBJIGRvIHRoZW4/4oCdIEkgYXNrZWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFlvdSB3aWxsIGN1dCBpdCBvZmYgdG9kYXksIGFuZCBJIHdpbGwgY3V0IG1pbmUsIGlmIG91ciBhcmd1bWVudCBkaWVzIGFuZCB3ZSBjYW5ub3QgYnJpbmcgaXQgdG8gbGlmZSBhZ2Fpbi4KPC90cmFuc2xhdGlvbj4="
translation['89.89c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OWMiIHVuaXQ9InNlY3Rpb24iIC8+SWYgSSB3ZXJlIHlvdSBhbmQgdGhlIGFyZ3VtZW50IGVzY2FwZWQgbWUsIEkgd291bGQgdGFrZSBhbiBvYXRoLCBsaWtlIHRoZSBBcmdpdmVzLCBub3QgdG8gbGV0IG15IGhhaXIgZ3JvdyB1bnRpbCBJIGhhZCByZW5ld2VkIHRoZSBmaWdodCBhbmQgd29uIGEgdmljdG9yeSBvdmVyIHRoZSBhcmd1bWVudCBvZiBTaW1taWFzIGFuZCBDZWJlcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0LOKAnSBJIHJlcGxpZWQsIOKAnHRoZXkgc2F5IHRoYXQgZXZlbiBIZXJhY2xlcyBpcyBub3QgYSBtYXRjaCBmb3IgdHdvLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLOKAnSBzYWlkIGhlLCDigJxjYWxsIG1lIHRvIGhlbHAgeW91LCBhcyB5b3VyIElvbGF1cywgd2hpbGUgdGhlcmUgaXMgc3RpbGwgbGlnaHQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEkgY2FsbCB5b3UgdG8gaGVscCwgdGhlbizigJ0gc2FpZCBJLCDigJxub3QgYXMgSGVyYWNsZXMgY2FsbGluZyBJb2xhdXMsIGJ1dCBhcyBJb2xhdXMgY2FsbGluZyBIZXJhY2xlcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhhdCBpcyBhbGwgb25lLOKAnSBzYWlkIGhlLiDigJxCdXQgZmlyc3QgbGV0IHVzIGd1YXJkIGFnYWluc3QgYSBkYW5nZXIu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE9mIHdoYXQgc29ydD/igJ0gSSBhc2tlZC4KPC90cmFuc2xhdGlvbj4="
translation['89.89d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OWQiIHVuaXQ9InNlY3Rpb24iIC8+4oCcVGhlIGRhbmdlciBvZiBiZWNvbWluZyBtaXNvbG9naXN0cyBvciBoYXRlcnMgb2YgYXJndW1lbnQs4oCdIHNhaWQgaGUsIOKAnGFzIHBlb3BsZSBiZWNvbWUgbWlzYW50aHJvcGlzdHMgb3IgaGF0ZXJzIG9mIG1hbjsgIGZvciBubyB3b3JzZSBldmlsIGNhbiBoYXBwZW4gdG8gYSBtYW4gdGhhbiB0byBoYXRlIGFyZ3VtZW50LiAgTWlzb2xvZ3kgYW5kIG1pc2FudGhyb3B5IGFyaXNlIGZyb20gc2ltaWxhciBjYXVzZXMuICBGb3IgbWlzYW50aHJvcHkgYXJpc2VzIGZyb20gdHJ1c3Rpbmcgc29tZW9uZSBpbXBsaWNpdGx5IHdpdGhvdXQgc3VmZmljaWVudCBrbm93bGVkZ2UuICBZb3UgdGhpbmsgdGhlIG1hbiBpcyBwZXJmZWN0bHkgdHJ1ZSBhbmQgc291bmQgYW5kIHRydXN0d29ydGh5LCBhbmQgYWZ0ZXJ3YXJkcyB5b3UgZmluZCBoaW0gYmFzZSBhbmQgZmFsc2UuICBUaGVuIHlvdSBoYXZlIHRoZSBzYW1lIGV4cGVyaWVuY2Ugd2l0aCBhbm90aGVyIHBlcnNvbi4gIEJ5IHRoZSB0aW1lIHRoaXMgaGFzIGhhcHBlbmVkIHRvIGEgbWFuIGEgZ29vZCBtYW55IHRpbWVzLCBlc3BlY2lhbGx5IGlmIGl0IGhhcHBlbnMgYW1vbmcgdGhvc2Ugd2hvbSBoZSBtaWdodCByZWdhcmQgYXMgaGlzIG5lYXJlc3QKPC90cmFuc2xhdGlvbj4="
translation['89.89e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4OWUiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGRlYXJlc3QgZnJpZW5kcywgaGUgZW5kcyBieSBiZWluZyBpbiBjb250aW51YWwgcXVhcnJlbHMgYW5kIGJ5IGhhdGluZyBldmVyeWJvZHkgYW5kIHRoaW5raW5nIHRoZXJlIGlzIG5vdGhpbmcgc291bmQgaW4gYW55b25lIGF0IGFsbC4gIEhhdmUgeW91IG5vdCBub3RpY2VkIHRoaXM/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seSzigJ0gc2FpZCBJLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLOKAnSBoZSB3ZW50IG9uLCDigJxpcyBpdCBub3QgZGlzZ3JhY2VmdWwsIGFuZCBpcyBpdCBub3QgcGxhaW4gdGhhdCBzdWNoIGEgbWFuIHVuZGVydGFrZXMgdG8gY29uc29ydCB3aXRoIG1lbiB3aGVuIGhlIGhhcyBubyBrbm93bGVkZ2Ugb2YgaHVtYW4gbmF0dXJlPyAgRm9yIGlmIGhlIGhhZCBrbm93bGVkZ2Ugd2hlbiBoZSBkZWFsdCB3aXRoIHRoZW0sIGhlIHdvdWxkIHRoaW5rIHRoYXQgdGhlIGdvb2QKPC90cmFuc2xhdGlvbj4="
translation['90.90a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOTBhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB0aGUgYmFkIGFyZSBib3RoIHZlcnkgZmV3IGFuZCB0aG9zZSBiZXR3ZWVuIHRoZSB0d28gYXJlIHZlcnkgbWFueSwgZm9yIHRoYXQgaXMgdGhlIGNhc2Uu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdoYXQgZG8geW91IG1lYW4/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEkgbWVhbiBqdXN0IHdoYXQgSSBtaWdodCBzYXkgYWJvdXQgdGhlIGxhcmdlIGFuZCBzbWFsbC4gIERvIHlvdSB0aGluayB0aGVyZSBpcyBhbnl0aGluZyBtb3JlIHVudXN1YWwgdGhhbiB0byBmaW5kIGEgdmVyeSBsYXJnZSBvciBhIHZlcnkgc21hbGwgbWFuLCBvciBkb2csIG9yIG90aGVyIGNyZWF0dXJlLCBvciBhZ2Fpbiwgb25lIHRoYXQgaXMgdmVyeSBxdWljayBvciBzbG93LCB2ZXJ5IHVnbHkgb3IgYmVhdXRpZnVsLCB2ZXJ5IGJsYWNrIG9yIHdoaXRlPyAgSGF2ZSB5b3Ugbm90IG5vdGljZWQgdGhhdCB0aGUgZXh0cmVtZXMgaW4gYWxsIHRoZXNlIGluc3RhbmNlcyBhcmUgcmFyZSBhbmQgZmV3LCBhbmQgdGhlIGV4YW1wbGVzIGJldHdlZW4gdGhlIGV4dHJlbWVzIGFyZSB2ZXJ5IG1hbnk/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRvIGJlIHN1cmUs4oCdIHNhaWQgSS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIGRvbid0IHlvdSB0aGluayzigJ0KPC90cmFuc2xhdGlvbj4="
translation['90.90b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MGIiIHVuaXQ9InNlY3Rpb24iIC8+c2FpZCBoZSwg4oCcdGhhdCBpZiB0aGVyZSB3ZXJlIHRvIGJlIGEgY29tcGV0aXRpb24gaW4gcmFzY2FsaXR5LCB0aG9zZSB3aG8gZXhjZWxsZWQgd291bGQgYmUgdmVyeSBmZXcgaW4gdGhhdCBhbHNvP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxWZXJ5IGxpa2VseSzigJ0gSSByZXBsaWVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMsIHZlcnkgbGlrZWx5LOKAnSBoZSBzYWlkLCDigJxCdXQgaXQgaXMgbm90IGluIHRoYXQgcmVzcGVjdCB0aGF0IGFyZ3VtZW50cyBhcmUgbGlrZSBtZW47ICBJIHdhcyBtZXJlbHkgZm9sbG93aW5nIHlvdXIgbGVhZCBpbiBkaXNjdXNzaW5nIHRoYXQuICBUaGUgc2ltaWxhcml0eSBsaWVzIGluIHRoaXM6ICB3aGVuIGEgbWFuIHdpdGhvdXQgcHJvcGVyIGtub3dsZWRnZSBjb25jZXJuaW5nIGFyZ3VtZW50cyBoYXMgY29uZmlkZW5jZSBpbiB0aGUgdHJ1dGggb2YgYW4gYXJndW1lbnQgYW5kIGFmdGVyd2FyZHMgdGhpbmtzIHRoYXQgaXQgaXMgZmFsc2UsIHdoZXRoZXIgaXQgcmVhbGx5IGlzIHNvIG9yIG5vdCwgYW5kIHRoaXMgaGFwcGVucyBhZ2FpbiBhbmQgYWdhaW47ICB0aGVuIHlvdSBrbm93LCB0aG9zZSBtZW4gZXNwZWNpYWxseSB3aG8KPC90cmFuc2xhdGlvbj4="
translation['90.90c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MGMiIHVuaXQ9InNlY3Rpb24iIC8+aGF2ZSBzcGVudCB0aGVpciB0aW1lIGluIGRpc3B1dGF0aW9uIGNvbWUgdG8gYmVsaWV2ZSB0aGF0IHRoZXkgYXJlIHRoZSB3aXNlc3Qgb2YgbWVuIGFuZCB0aGF0IHRoZXkgYWxvbmUgaGF2ZSBkaXNjb3ZlcmVkIHRoYXQgdGhlcmUgaXMgbm90aGluZyBzb3VuZCBvciBzdXJlIGluIGFueXRoaW5nLCB3aGV0aGVyIGFyZ3VtZW50IG9yIGFueXRoaW5nIGVsc2UsIGJ1dCBhbGwgdGhpbmdzIGdvIHVwIGFuZCBkb3duLCBsaWtlIHRoZSB0aWRlIGluIHRoZSBFdXJpcHVzLCBhbmQgbm90aGluZyBpcyBzdGFibGUgZm9yIGFueSBsZW5ndGggb2YgdGltZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LOKAnSBJIHNhaWQsIOKAnHRoYXQgaXMgdmVyeSB0cnVlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuLCBQaGFlZG8s4oCdIGhlIHNhaWQsIOKAnGlmIHRoZXJlIGlzIGFueSBzeXN0ZW0gb2YgYXJndW1lbnQgd2hpY2ggaXMgdHJ1ZSBhbmQgc3VyZSBhbmQgY2FuIGJlIGxlYXJuZWQsIGl0IHdvdWxkIGJlIGEgc2FkIHRoaW5nIGlmIGEgbWFuLAo8L3RyYW5zbGF0aW9uPg=="
translation['90.90d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MGQiIHVuaXQ9InNlY3Rpb24iIC8+YmVjYXVzZSBoZSBoYXMgbWV0IHdpdGggc29tZSBvZiB0aG9zZSBhcmd1bWVudHMgd2hpY2ggc2VlbSB0byBiZSBzb21ldGltZXMgdHJ1ZSBhbmQgc29tZXRpbWVzIGZhbHNlLCBzaG91bGQgdGhlbiBub3QgYmxhbWUgaGltc2VsZiBvciBoaXMgb3duIGxhY2sgb2Ygc2tpbGwsIGJ1dCBzaG91bGQgZW5kLCBpbiBoaXMgdmV4YXRpb24sIGJ5IHRocm93aW5nIHRoZSBibGFtZSBnbGFkbHkgdXBvbiB0aGUgYXJndW1lbnRzIGFuZCBzaG91bGQgaGF0ZSBhbmQgcmV2aWxlIHRoZW0gYWxsIHRoZSByZXN0IG9mIGhpcyBsaWZlLCBhbmQgYmUgZGVwcml2ZWQgb2YgdGhlIHRydXRoIGFuZCBrbm93bGVkZ2Ugb2YgcmVhbGl0eS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCBieSBaZXVzLOKAnSBJIHNhaWQsIOKAnGl0IHdvdWxkIGJlIHNhZC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRmlyc3QsIHRoZW4s4oCdIHNhaWQgaGUsIOKAnGxldCB1cyBiZSBvbiBvdXIgZ3VhcmQgYWdhaW5zdCB0aGlzLAo8L3RyYW5zbGF0aW9uPg=="
translation['90.90e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MGUiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGxldCB1cyBub3QgYWRtaXQgaW50byBvdXIgc291bHMgdGhlIG5vdGlvbiB0aGF0IHRoZXJlIGlzIG5vIHNvdW5kbmVzcyBpbiBhcmd1bWVudHMgYXQgYWxsLiAgIExldCB1cyBmYXIgcmF0aGVyIGFzc3VtZSB0aGF0IHdlIG91cnNlbHZlcyBhcmUgbm90IHlldCBpbiBzb3VuZCBjb25kaXRpb24gYW5kIHRoYXQgd2UgbXVzdCBzdHJpdmUgbWFuZnVsbHkgYW5kIGVhZ2VybHkgdG8gYmVjb21lIHNvLCB5b3UgYW5kIHRoZSBvdGhlcnMgZm9yIHRoZSBzYWtlIG9mIGFsbCB5b3VyIGZ1dHVyZSBsaWZlLAo8L3RyYW5zbGF0aW9uPg=="
translation['91.91a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOTFhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBJIGJlY2F1c2Ugb2YgbXkgaW1wZW5kaW5nIGRlYXRoOyAgZm9yIEkgZmVhciB0aGF0IEkgYW0gbm90IGp1c3Qgbm93IGluIGEgcGhpbG9zb3BoaWNhbCBmcmFtZSBvZiBtaW5kIGFzIHJlZ2FyZHMgdGhpcyBwYXJ0aWN1bGFyIHF1ZXN0aW9uLCBidXQgYW0gY29udGVudGlvdXMsIGxpa2UgcXVpdGUgdW5jdWx0dXJlZCBwZXJzb25zLiAgRm9yIHdoZW4gdGhleSBhcmd1ZSBhYm91dCBhbnl0aGluZywgdGhleSBkbyBub3QgY2FyZSB3aGF0IHRoZSB0cnV0aCBpcyBpbiB0aGUgbWF0dGVycyB0aGV5IGFyZSBkaXNjdXNzaW5nLCBidXQgYXJlIGVhZ2VyIG9ubHkgdG8gbWFrZSB0aGVpciBvd24gdmlld3Mgc2VlbSB0cnVlIHRvIHRoZWlyIGhlYXJlcnMuICBBbmQgSSBmYW5jeSBJIGRpZmZlciBmcm9tIHRoZW0ganVzdCBub3cgb25seSB0byB0aGlzIGV4dGVudDogIEkgc2hhbGwgbm90IGJlIGVhZ2VyIHRvIG1ha2Ugd2hhdCBJIHNheSBzZWVtIHRydWUgdG8gbXkgaGVhcmVycywgZXhjZXB0IGFzIGEgc2Vjb25kYXJ5IG1hdHRlciwgYnV0IHNoYWxsIGJlIHZlcnkgZWFnZXIKPC90cmFuc2xhdGlvbj4="
translation['91.91b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MWIiIHVuaXQ9InNlY3Rpb24iIC8+dG8gbWFrZSBteXNlbGYgYmVsaWV2ZSBpdC4gIEZvciBzZWUsIG15IGZyaWVuZCwgaG93IHNlbGZpc2ggbXkgYXR0aXR1ZGUgaXMuICBJZiB3aGF0IEkgc2F5IGlzIHRydWUsIEkgYW0gdGhlIGdhaW5lciBieSBiZWxpZXZpbmcgaXQ7ICBhbmQgaWYgdGhlcmUgYmUgbm90aGluZyBmb3IgbWUgYWZ0ZXIgZGVhdGgsIGF0IGFueSByYXRlIEkgc2hhbGwgbm90IGJlIGJ1cmRlbnNvbWUgdG8gbXkgZnJpZW5kcyBieSBteSBsYW1lbnRhdGlvbnMgaW4gdGhlc2UgbGFzdCBtb21lbnRzLiAgQW5kIHRoaXMgaWdub3JhbmNlIG9mIG1pbmUgd2lsbCBub3QgbGFzdCwgZm9yIHRoYXQgd291bGQgYmUgYW4gZXZpbCwgYnV0IHdpbGwgc29vbiBlbmQuICBTbyzigJ0gaGUgc2FpZCwg4oCcU2ltbWlhcyBhbmQgQ2ViZXMsIEkgYXBwcm9hY2ggdGhlIGFyZ3VtZW50IHdpdGggbXkgbWluZCB0aHVzIHByZXBhcmVkLiAgQnV0IHlvdSwKPC90cmFuc2xhdGlvbj4="
translation['91.91c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MWMiIHVuaXQ9InNlY3Rpb24iIC8+aWYgeW91IGRvIGFzIEkgYXNrLCB3aWxsIGdpdmUgbGl0dGxlIHRob3VnaHQgdG8gU29jcmF0ZXMgYW5kIG11Y2ggbW9yZSB0byB0aGUgdHJ1dGg7ICBhbmQgaWYgeW91IHRoaW5rIHdoYXQgSSBzYXkgaXMgdHJ1ZSwgYWdyZWUgdG8gaXQsIGFuZCBpZiBub3QsIG9wcG9zZSBtZSB3aXRoIGV2ZXJ5IGFyZ3VtZW50IHlvdSBjYW4gbXVzdGVyLCB0aGF0IEkgbWF5IG5vdCBpbiBteSBlYWdlcm5lc3MgZGVjZWl2ZSBteXNlbGYgYW5kIHlvdSBhbGlrZSBhbmQgZ28gYXdheSwgbGlrZSBhIGJlZSwgbGVhdmluZyBteSBzdGluZyBzdGlja2luZyBpbiB5b3UuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEJ1dCB3ZSBtdXN0IGdldCB0byB3b3JrLOKAnSBoZSBzYWlkLiDigJxGaXJzdCByZWZyZXNoIG15IG1lbW9yeSwgaWYgSSBzZWVtIHRvIGhhdmUgZm9yZ290dGVuIGFueXRoaW5nLiAgU2ltbWlhcywgSSB0aGluaywgaGFzIGRvdWJ0cyBhbmQgZmVhcnMgdGhhdCB0aGUgc291bCwgdGhvdWdoIG1vcmUgZGl2aW5lIGFuZAo8L3RyYW5zbGF0aW9uPg=="
translation['91.91d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MWQiIHVuaXQ9InNlY3Rpb24iIC8+ZXhjZWxsZW50IHRoYW4gdGhlIGJvZHksIG1heSBwZXJpc2ggZmlyc3QsIGJlaW5nIG9mIHRoZSBuYXR1cmUgb2YgYSBoYXJtb255LiAgQW5kLCBDZWJlcywgSSBiZWxpZXZlLCBncmFudGVkIHRoYXQgdGhlIHNvdWwgaXMgbW9yZSBsYXN0aW5nIHRoYW4gdGhlIGJvZHksIGJ1dCBzYWlkIHRoYXQgbm8gb25lIGNvdWxkIGtub3cgdGhhdCB0aGUgc291bCwgYWZ0ZXIgd2VhcmluZyBvdXQgbWFueSBib2RpZXMsIGRpZCBub3QgYXQgbGFzdCBwZXJpc2ggaXRzZWxmIHVwb24gbGVhdmluZyB0aGUgYm9keTsgIGFuZCB0aGF0IHRoaXMgd2FzIGRlYXRo4oCUdGhlIGRlc3RydWN0aW9uIG9mIHRoZSBzb3VsLCBzaW5jZSB0aGUgYm9keSBpcyBjb250aW51YWxseSBiZWluZyBkZXN0cm95ZWQuICBBcmUgdGhvc2UgdGhlIHBvaW50cywgU2ltbWlhcyBhbmQgQ2ViZXMsIHdoaWNoIHdlIG11c3QgY29uc2lkZXI/4oCdCjwvdHJhbnNsYXRpb24+"
translation['91.91e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MWUiIHVuaXQ9InNlY3Rpb24iIC8+VGhleSBib3RoIGFncmVlZCB0aGF0IHRoZXNlIHdlcmUgdGhlIHBvaW50cy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93LOKAnSBzYWlkIGhlLCDigJxkbyB5b3UgcmVqZWN0IGFsbCBvZiBvdXIgcHJldmlvdXMgYXJndW1lbnRzLCBvciBvbmx5IHNvbWUgb2YgdGhlbT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcT25seSBzb21lIG9mIHRoZW0s4oCdIHRoZXkgcmVwbGllZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2hhdCB5b3UgdGhpbmss4oCdIGhlIGFza2VkLCDigJxhYm91dCB0aGUgYXJndW1lbnQgaW4gd2hpY2ggd2Ugc2FpZCB0aGF0IGxlYXJuaW5nIGlzIHJlY29sbGVjdGlvbiBhbmQgdGhhdCwgc2luY2UgdGhpcyBpcyBzbywgb3VyIHNvdWwgbXVzdCBuZWNlc3NhcmlseSBoYXZlIGJlZW4gc29tZXdoZXJlCjwvdHJhbnNsYXRpb24+"
translation['92.92a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOTJhIiB1bml0PSJzZWN0aW9uIiAvPmJlZm9yZSBpdCB3YXMgaW1wcmlzb25lZCBpbiB0aGUgYm9keT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSzigJ0gc2FpZCBDZWJlcywg4oCcd2FzIHdvbmRlcmZ1bGx5IGNvbnZpbmNlZCBieSBpdCBhdCB0aGUgdGltZSBhbmQgSSBzdGlsbCBiZWxpZXZlIGl0IG1vcmUgZmlybWx5IHRoYW4gYW55IG90aGVyIGFyZ3VtZW50LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgSSB0b28s4oCdIHNhaWQgU2ltbWlhcywg4oCcZmVlbCBqdXN0IGFzIGhlIGRvZXMsIGFuZCBJIHNob3VsZCBiZSBtdWNoIHN1cnByaXNlZCBpZiBJIHNob3VsZCBldmVyIHRoaW5rIGRpZmZlcmVudGx5IG9uIHRoaXMgcG9pbnQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBTb2NyYXRlcyBzYWlkOiAg4oCcWW91IG11c3QsIG15IFRoZWJhbiBmcmllbmQsIHRoaW5rIGRpZmZlcmVudGx5LCBpZiB5b3UgcGVyc2lzdCBpbiB5b3VyIG9waW5pb24gdGhhdCBhIGhhcm1vbnkgaXMgYSBjb21wb3VuZCBhbmQgdGhhdCB0aGUgc291bCBpcyBhIGhhcm1vbnkgbWFkZSB1cCBvZiB0aGUgZWxlbWVudHMgdGhhdCBhcmUgc3RydW5nIGxpa2UgaGFycHN0cmluZ3MgaW4gdGhlIGJvZHkuCjwvdHJhbnNsYXRpb24+"
translation['92.92b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MmIiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIHN1cmVseSB5b3Ugd2lsbCBub3QgYWNjZXB0IHlvdXIgb3duIHN0YXRlbWVudCB0aGF0IGEgY29tcG9zaXRlIGhhcm1vbnkgZXhpc3RlZCBiZWZvcmUgdGhvc2UgdGhpbmdzIGZyb20gd2hpY2ggaXQgaGFkIHRvIGJlIGNvbXBvc2VkLCB3aWxsIHlvdT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5IG5vdCwgU29jcmF0ZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4gZG8geW91IHNlZSzigJ0gc2FpZCBoZSwg4oCcdGhhdCB0aGlzIGlzIGp1c3Qgd2hhdCB5b3Ugc2F5IHdoZW4geW91IGFzc2VydCB0aGF0IHRoZSBzb3VsIGV4aXN0cyBiZWZvcmUgaXQgZW50ZXJzIGludG8gdGhlIGZvcm0gYW5kIGJvZHkgb2YgYSBtYW4sIGFuZCB0aGF0IGl0IGlzIGNvbXBvc2VkIG9mIHRoaW5ncyB0aGF0IGRvIG5vdCB5ZXQgZXhpc3Q/ICBGb3IgaGFybW9ueSBpcyBub3Qgd2hhdCB5b3VyIGNvbXBhcmlzb24gYXNzdW1lcyBpdCB0byBiZS4gIFRoZSBseXJlIGFuZCB0aGUgc3RyaW5ncyBhbmQgdGhlIHNvdW5kcwo8L3RyYW5zbGF0aW9uPg=="
translation['92.92c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MmMiIHVuaXQ9InNlY3Rpb24iIC8+Y29tZSBpbnRvIGJlaW5nIGluIGEgdHVuZWxlc3MgY29uZGl0aW9uLCBhbmQgdGhlIGhhcm1vbnkgaXMgdGhlIGxhc3Qgb2YgYWxsIHRvIGJlIGNvbXBvc2VkIGFuZCB0aGUgZmlyc3QgdG8gcGVyaXNoLiAgU28gaG93IGNhbiB5b3UgYnJpbmcgdGhpcyB0aGVvcnkgaW50byBoYXJtb255IHdpdGggdGhlIG90aGVyP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIGNhbm5vdCBhdCBhbGws4oCdIHNhaWQgU2ltbWlhcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHlldCzigJ0gc2FpZCBTb2NyYXRlcywg4oCcdGhlcmUgb3VnaHQgdG8gYmUgaGFybW9ueSBiZXR3ZWVuIGl0IGFuZCB0aGUgdGhlb3J5IGFib3V0IGhhcm1vbnkgYWJvdmUgYWxsIG90aGVycy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLCB0aGVyZSBvdWdodCzigJ0gc2FpZCBTaW1taWFzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLOKAnSBzYWlkIGhlLCDigJx0aGVyZSBpcyBubyBoYXJtb255IGJldHdlZW4gdGhlIHR3byB0aGVvcmllcy4gIE5vdyB3aGljaCBkbyB5b3UgcHJlZmVyLCB0aGF0IGtub3dsZWRnZSBpcyByZWNvbGxlY3Rpb24gb3IgdGhhdCB0aGUgc291bCBpcyBhIGhhcm1vbnk/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZSBmb3JtZXIsIGRlY2lkZWRseSwgU29jcmF0ZXMs4oCdIGhlIHJlcGxpZWQuICDigJxGb3IgdGhpcyBvdGhlciBjYW1lIHRvIG1lIHdpdGhvdXQgZGVtb25zdHJhdGlvbjsgaXQgbWVyZWx5IHNlZW1lZCBwcm9iYWJsZQo8L3RyYW5zbGF0aW9uPg=="
translation['92.92d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MmQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGF0dHJhY3RpdmUsIHdoaWNoIGlzIHRoZSByZWFzb24gd2h5IG1hbnkgbWVuIGhvbGQgaXQuICBJIGFtIGNvbnNjaW91cyB0aGF0IHRob3NlIGFyZ3VtZW50cyB3aGljaCBiYXNlIHRoZWlyIGRlbW9uc3RyYXRpb25zIG9uIG1lcmUgcHJvYmFiaWxpdHkgYXJlIGRlY2VwdGl2ZSwgYW5kIGlmIHdlIGFyZSBub3Qgb24gb3VyIGd1YXJkIGFnYWluc3QgdGhlbSB0aGV5IGRlY2VpdmUgdXMgZ3JlYXRseSwgaW4gZ2VvbWV0cnkgYW5kIGluIGFsbCBvdGhlciB0aGluZ3MuICBCdXQgdGhlIHRoZW9yeSBvZiByZWNvbGxlY3Rpb24gYW5kIGtub3dsZWRnZSBoYXMgYmVlbiBlc3RhYmxpc2hlZCBieSBhIHNvdW5kIGNvdXJzZSBvZiBhcmd1bWVudC4gIEZvciB3ZSBhZ3JlZWQgdGhhdCBvdXIgc291bCBiZWZvcmUgaXQgZW50ZXJlZCBpbnRvIHRoZSBib2R5IGV4aXN0ZWQganVzdCBhcyB0aGUgdmVyeSBlc3NlbmNlIHdoaWNoIGlzIGNhbGxlZCB0aGUgYWJzb2x1dGUgZXhpc3RzLgo8L3RyYW5zbGF0aW9uPg=="
translation['92.92e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MmUiIHVuaXQ9InNlY3Rpb24iIC8+Tm93IEkgYW0gcGVyc3VhZGVkIHRoYXQgSSBoYXZlIGFjY2VwdGVkIHRoaXMgZXNzZW5jZSBvbiBzdWZmaWNpZW50IGFuZCByaWdodCBncm91bmRzLiBJIGNhbm5vdCB0aGVyZWZvcmUgYWNjZXB0IGZyb20gbXlzZWxmIG9yIGFueW9uZSBlbHNlIHRoZSBzdGF0ZW1lbnQgdGhhdCB0aGUgc291bCBpcyBhIGhhcm1vbnku4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEhlcmUgaXMgYW5vdGhlciB3YXkgb2YgbG9va2luZyBhdCBpdCwgU2ltbWlhcyzigJ0gc2FpZCBoZS4gIOKAnERvIHlvdSB0aGluayBhIGhhcm1vbnkgb3IgYW55IG90aGVyIGNvbXBvc2l0ZSB0aGluZyBjYW4gYmUgaW4gYW55IG90aGVyIHN0YXRlCjwvdHJhbnNsYXRpb24+"
translation['93.93a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5MyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOTNhIiB1bml0PSJzZWN0aW9uIiAvPnRoYW4gdGhhdCBpbiB3aGljaCB0aGUgZWxlbWVudHMgYXJlIG9mIHdoaWNoIGl0IGlzIGNvbXBvc2VkP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHkgbm90LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgaXQgY2FuIG5laXRoZXIgZG8gbm9yIHN1ZmZlciBhbnl0aGluZyBvdGhlciB0aGFuIHRoZXkgZG8gb3Igc3VmZmVyP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSBhZ3JlZWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4gYSBoYXJtb255IGNhbm5vdCBiZSBleHBlY3RlZCB0byBsZWFkIHRoZSBlbGVtZW50cyBvZiB3aGljaCBpdCBpcyBjb21wb3NlZCwgYnV0IHRvIGZvbGxvdyB0aGVtLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5IZSBhc3NlbnRlZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQSBoYXJtb255LCB0aGVuLCBpcyBxdWl0ZSB1bmFibGUgdG8gbW92ZSBvciBtYWtlIGEgc291bmQgb3IgZG8gYW55dGhpbmcgZWxzZSB0aGF0IGlzIG9wcG9zZWQgdG8gaXRzIGNvbXBvbmVudCBwYXJ0cy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcUXVpdGUgdW5hYmxlLOKAnSBzYWlkIGhlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsIHRoZW4sIGlzIG5vdCBldmVyeSBoYXJtb255IGJ5IG5hdHVyZSBhIGhhcm1vbnkgYWNjb3JkaW5nIGFzIGl0IGlzIGhhcm1vbml6ZWQ/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEkgZG8gbm90IHVuZGVyc3RhbmQs4oCdIHNhaWQgU2ltbWlhcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV291bGQgaXQgbm90LOKAnSBzYWlkIFNvY3JhdGVzLCDigJxiZSBtb3JlIGNvbXBsZXRlbHkgYSBoYXJtb255CjwvdHJhbnNsYXRpb24+"
translation['93.93b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5M2IiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGEgZ3JlYXRlciBoYXJtb255IGlmIGl0IHdlcmUgaGFybW9uaXplZCBtb3JlIGZ1bGx5IGFuZCB0byBhIGdyZWF0ZXIgZXh0ZW50LCBhc3N1bWluZyB0aGF0IHRvIGJlIHBvc3NpYmxlLCBhbmQgbGVzcyBjb21wbGV0ZWx5IGEgaGFybW9ueSBhbmQgYSBsZXNzZXIgaGFybW9ueSBpZiBsZXNzIGNvbXBsZXRlbHkgaGFybW9uaXplZCBhbmQgdG8gYSBsZXNzIGV4dGVudD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJcyB0aGlzIHRydWUgb2YgdGhlIHNvdWw/ICBJcyBvbmUgc291bCBldmVuIGluIHRoZSBzbGlnaHRlc3QgZGVncmVlIG1vcmUgY29tcGxldGVseSBhbmQgdG8gYSBncmVhdGVyIGV4dGVudCBhIHNvdWwgdGhhbiBhbm90aGVyLCBvciBsZXNzIGNvbXBsZXRlbHkgYW5kIHRvIGEgbGVzcyBleHRlbnQ/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vdCBpbiB0aGUgbGVhc3Qs4oCdIHNhaWQgaGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdlbGwgbm93LOKAnSBzYWlkIGhlLCDigJxvbmUgc291bCBpcyBzYWlkIHRvIHBvc3Nlc3Mgc2Vuc2UgYW5kIHZpcnR1ZSBhbmQgdG8gYmUgZ29vZCwgYW5kIGFub3RoZXIgdG8gcG9zc2VzcyBmb2xseSBhbmQgd2lja2VkbmVzcyBhbmQgdG8gYmUgYmFkOyAgYW5kIGlzIHRoaXMgdHJ1ZT/igJ0KPC90cmFuc2xhdGlvbj4="
translation['93.93c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5M2MiIHVuaXQ9InNlY3Rpb24iIC8+4oCcWWVzLCBpdCBpcyB0cnVlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgd2hhdCB3aWxsIHRob3NlIHdobyBhc3N1bWUgdGhhdCB0aGUgc291bCBpcyBhIGhhcm1vbnkgc2F5IHRoYXQgdGhlc2UgdGhpbmdz4oCUdGhlIHZpcnR1ZSBhbmQgdGhlIHdpY2tlZG5lc3PigJRpbiB0aGUgc291bCBhcmU/ICBXaWxsIHRoZXkgc2F5IHRoYXQgdGhpcyBpcyBhbm90aGVyIGtpbmQgb2YgaGFybW9ueSBhbmQgYSBkaXNjb3JkLCBhbmQgdGhhdCB0aGUgc291bCwgd2hpY2ggaXMgaXRzZWxmIGEgaGFybW9ueSwgaGFzIHdpdGhpbiBpdCBhbm90aGVyIGhhcm1vbnkgYW5kIHRoYXQgdGhlIG90aGVyIHNvdWwgaXMgZGlzY29yZGFudCBhbmQgaGFzIG5vIG90aGVyIGhhcm1vbnkgd2l0aGluIGl0P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIGNhbm5vdCB0ZWxsLOKAnSByZXBsaWVkIFNpbW1pYXMsIOKAnGJ1dCBldmlkZW50bHkgdGhvc2Ugd2hvIG1ha2UgdGhhdCBhc3N1bXB0aW9uIHdvdWxkIHNheSBzb21lIHRoaW5nIG9mIHRoYXQgc29ydC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IHdlIGFncmVlZCzigJ0gc2FpZCBTb2NyYXRlcywKPC90cmFuc2xhdGlvbj4="
translation['93.93d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5M2QiIHVuaXQ9InNlY3Rpb24iIC8+4oCcdGhhdCBvbmUgc291bCBpcyBubyBtb3JlIG9yIGxlc3MgYSBzb3VsIHRoYW4gYW5vdGhlcjsgIGFuZCB0aGF0IGlzIGVxdWl2YWxlbnQgdG8gYW4gYWdyZWVtZW50IHRoYXQgb25lIGlzIG5vIG1vcmUgYW5kIHRvIG5vIGdyZWF0ZXIgZXh0ZW50LCBhbmQgbm8gbGVzcyBhbmQgdG8gbm8gbGVzcyBleHRlbnQsIGEgaGFybW9ueSB0aGFuIGFub3RoZXIsIGlzIGl0IG5vdD/igJ0gIOKAnENlcnRhaW5seS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHRoYXQgd2hpY2ggaXMgbm8gbW9yZSBvciBsZXNzIGEgaGFybW9ueSwgaXMgbm8gbW9yZSBvciBsZXNzIGhhcm1vbml6ZWQuICBJcyB0aGF0IHNvP+KAnSAg4oCcWWVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQgaGFzIHRoYXQgd2hpY2ggaXMgbm8gbW9yZSBhbmQgbm8gbGVzcyBoYXJtb25pemVkIGFueSBncmVhdGVyIG9yIGFueSBsZXNzIGFtb3VudCBvZiBoYXJtb255LCBvciBhbiBlcXVhbCBhbW91bnQ/4oCdIOKAnEFuIGVxdWFsIGFtb3VudC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiBhIHNvdWwsIHNpbmNlIGl0IGlzIG5laXRoZXIgbW9yZSBub3IgbGVzcwo8L3RyYW5zbGF0aW9uPg=="
translation['93.93e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5M2UiIHVuaXQ9InNlY3Rpb24iIC8+YSBzb3VsIHRoYW4gYW5vdGhlciwgaXMgbmVpdGhlciBtb3JlIG5vciBsZXNzIGhhcm1vbml6ZWQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoYXQgaXMgc28u4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCB0aGVyZWZvcmUgY2FuIGhhdmUgbm8gZ3JlYXRlciBhbW91bnQgb2YgZGlzY29yZCBvciBvZiBoYXJtb255P+KAnSDigJxOby7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHRoZXJlZm9yZSBhZ2FpbiBvbmUgc291bCBjYW4gaGF2ZSBubyBncmVhdGVyIGFtb3VudCBvZiB3aWNrZWRuZXNzIG9yIHZpcnR1ZSB0aGFuIGFub3RoZXIsIGlmIHdpY2tlZG5lc3MgaXMgZGlzY29yZCBhbmQgdmlydHVlIGhhcm1vbnk/4oCdIOKAnEl0IGNhbm5vdC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcT3IgcmF0aGVyLCB0byBzcGVhayBleGFjdGx5LCBTaW1taWFzLAo8L3RyYW5zbGF0aW9uPg=="
translation['94.94a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOTRhIiB1bml0PSJzZWN0aW9uIiAvPm5vIHNvdWwgd2lsbCBoYXZlIGFueSB3aWNrZWRuZXNzIGF0IGFsbCwgaWYgdGhlIHNvdWwgaXMgYSBoYXJtb255OyAgZm9yIGlmIGEgaGFybW9ueSBpcyBlbnRpcmVseSBoYXJtb255LCBpdCBjb3VsZCBoYXZlIG5vIHBhcnQgaW4gZGlzY29yZC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5IG5vdC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiB0aGUgc291bCwgYmVpbmcgZW50aXJlbHkgc291bCwgY291bGQgaGF2ZSBubyBwYXJ0IGluIHdpY2tlZG5lc3Mu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEhvdyBjb3VsZCBpdCwgaWYgd2hhdCB3ZSBoYXZlIHNhaWQgaXMgcmlnaHQ/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFjY29yZGluZyB0byB0aGlzIGFyZ3VtZW50LCB0aGVuLCBpZiBhbGwgc291bHMgYXJlIGJ5IG5hdHVyZSBlcXVhbGx5IHNvdWxzLCBhbGwgc291bHMgb2YgYWxsIGxpdmluZyBjcmVhdHVyZXMgd2lsbCBiZSBlcXVhbGx5IGdvb2Qu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFNvIGl0IHNlZW1zLCBTb2NyYXRlcyzigJ0gc2FpZCBoZS4KPC90cmFuc2xhdGlvbj4="
translation['94.94b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NGIiIHVuaXQ9InNlY3Rpb24iIC8+4oCcQW5kLOKAnSBzYWlkIFNvY3JhdGVzLCDigJxkbyB5b3UgdGhpbmsgdGhhdCB0aGlzIGlzIHRydWUgYW5kIHRoYXQgb3VyIHJlYXNvbmluZyB3b3VsZCBoYXZlIGNvbWUgdG8gdGhpcyBlbmQsIGlmIHRoZSB0aGVvcnkgdGhhdCB0aGUgc291bCBpcyBhIGhhcm1vbnkgd2VyZSBjb3JyZWN0P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3QgaW4gdGhlIGxlYXN0LOKAnSBoZSByZXBsaWVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLOKAnSBzYWlkIFNvY3JhdGVzLCDigJxvZiBhbGwgdGhlIHBhcnRzIHRoYXQgbWFrZSB1cCBhIG1hbiwgZG8geW91IHRoaW5rIGFueSBpcyBydWxlciBleGNlcHQgdGhlIHNvdWwsIGVzcGVjaWFsbHkgaWYgaXQgYmUgYSB3aXNlIG9uZT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm8sIEkgZG8gbm90LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxEb2VzIGl0IHlpZWxkIHRvIHRoZSBmZWVsaW5ncyBvZiB0aGUgYm9keSBvciBvcHBvc2UgdGhlbT8gIEkgbWVhbiwgd2hlbiB0aGUgYm9keSBpcyBob3QgYW5kIHRoaXJzdHksIGRvZXMgbm90IHRoZSBzb3VsIG9wcG9zZSBpdCBhbmQgZHJhdyBpdCBhd2F5IGZyb20gZHJpbmtpbmcsIGFuZCBmcm9tIGVhdGluZyB3aGVuIGl0IGlzIGh1bmdyeSwgYW5kIGRvIHdlIG5vdCBzZWUgdGhlIHNvdWwgb3Bwb3NpbmcgdGhlIGJvZHkKPC90cmFuc2xhdGlvbj4="
translation['94.94c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NGMiIHVuaXQ9InNlY3Rpb24iIC8+aW4gY291bnRsZXNzIG90aGVyIHdheXM/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRGlkIHdlIG5vdCBhZ3JlZSBpbiBvdXIgcHJldmlvdXMgZGlzY3Vzc2lvbiB0aGF0IGl0IGNvdWxkIG5ldmVyLCBpZiBpdCBiZSBhIGhhcm1vbnksIGdpdmUgZm9ydGggYSBzb3VuZCBhdCB2YXJpYW5jZSB3aXRoIHRoZSB0ZW5zaW9ucyBhbmQgcmVsYXhhdGlvbnMgYW5kIHZpYnJhdGlvbnMgYW5kIG90aGVyIGNvbmRpdGlvbnMgb2YgdGhlIGVsZW1lbnRzIHdoaWNoIGNvbXBvc2UgaXQsIGJ1dCB0aGF0IGl0IHdvdWxkIGZvbGxvdyB0aGVtIGFuZCBuZXZlciBsZWFkIHRoZW0/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFllcyzigJ0gaGUgcmVwbGllZCwg4oCcd2UgZGlkLCBvZiBjb3Vyc2Uu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdlbGwgdGhlbiwgZG8gd2Ugbm90IG5vdyBmaW5kIHRoYXQgdGhlIHNvdWwgYWN0cyBpbiBleGFjdGx5IHRoZSBvcHBvc2l0ZSB3YXksIGxlYWRpbmcgdGhvc2UgZWxlbWVudHMgb2Ygd2hpY2ggaXQgaXMgc2FpZCB0byBjb25zaXN0IGFuZCBvcHBvc2luZyB0aGVtCiAgICA8L3RyYW5zbGF0aW9uPg=="
translation['94.94d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NGQiIHVuaXQ9InNlY3Rpb24iIC8+aW4gYWxtb3N0IGV2ZXJ5dGhpbmcgdGhyb3VnaCBhbGwgb3VyIGxpZmUsIGFuZCB0eXJhbm5pemluZyBvdmVyIHRoZW0gaW4gZXZlcnkgd2F5LCBzb21ldGltZXMgaW5mbGljdGluZyBoYXJzaCBhbmQgcGFpbmZ1bCBwdW5pc2htZW50cyAodGhvc2Ugb2YgZ3ltbmFzdGljcyBhbmQgbWVkaWNpbmUpLCBhbmQgc29tZXRpbWVzIG1pbGRlciBvbmVzLCBzb21ldGltZXMgdGhyZWF0ZW5pbmcgYW5kIHNvbWV0aW1lcyBhZG1vbmlzaGluZywgaW4gc2hvcnQsIHNwZWFraW5nIHRvIHRoZSBkZXNpcmVzIGFuZCBwYXNzaW9ucyBhbmQgZmVhcnMgYXMgaWYgaXQgd2VyZSBkaXN0aW5jdCBmcm9tIHRoZW0gYW5kIHRoZXkgZnJvbSBpdCwgYXMgSG9tZXIgaGFzIHNob3duIGluIHRoZSA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5PZHlzc2V5PC90aXRsZT4gd2hlbiBoZSBzYXlzIG9mIE9keXNzZXVzOjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj48bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPkhlIHNtb3RlIGhpcyBicmVhc3QsIGFuZCB0aHVzIGhlIGNoaWQgaGlzIGhlYXJ0OjwvbD48bCBjbGFzcz0idHJhbnNsYXRpb24iPuKAnEVuZHVyZSBpdCwgaGVhcnQsIHlvdSBoYXZlIGJvcm4gd29yc2UgdGhhbiB0aGlzLuKAnTwvbD48L3F1b3RlPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+SGUgc21vdGUgaGlzIGJyZWFzdCwgYW5kIHRodXMgaGUgY2hpZCBoaXMgaGVhcnQ6PC9sPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiI+4oCcRW5kdXJlIGl0LCBoZWFydCwgeW91IGhhdmUgYm9ybiB3b3JzZSB0aGFuIHRoaXMu4oCdPC9sPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhvbS4gT2QuIDIwLjE3IiB2YWxpZD0ieWVzIj5Ib20uIE9kIDIwLjE3LTE4PC9iaWJsPgo8L3RyYW5zbGF0aW9uPg=="
translation['94.94e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NGUiIHVuaXQ9InNlY3Rpb24iIC8+RG8geW91IHN1cHBvc2UgdGhhdCwgd2hlbiBoZSB3cm90ZSB0aG9zZSB3b3JkcywgaGUgdGhvdWdodCBvZiB0aGUgc291bCBhcyBhIGhhcm1vbnkgd2hpY2ggd291bGQgYmUgbGVkIGJ5IHRoZSBjb25kaXRpb25zIG9mIHRoZSBib2R5LCBhbmQgbm90IHJhdGhlciBhcyBzb21ldGhpbmcgZml0dGVkIHRvIGxlYWQgYW5kIHJ1bGUgdGhlbSwgYW5kIGl0c2VsZiBhIGZhciBtb3JlIGRpdmluZSB0aGluZyB0aGFuIGEgaGFybW9ueT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnkgWmV1cywgU29jcmF0ZXMsIHRoZSBsYXR0ZXIsIEkgdGhpbmsu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4sIG15IGdvb2QgZnJpZW5kLCBpdCB3aWxsIG5ldmVyIGRvIGZvciB1cyB0byBzYXkgdGhhdCB0aGUgc291bCBpcyBhIGhhcm1vbnk7ICBmb3Igd2Ugc2hvdWxkLCBpdCBzZWVtcywKPC90cmFuc2xhdGlvbj4="
translation['95.95a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOTVhIiB1bml0PSJzZWN0aW9uIiAvPmFncmVlIG5laXRoZXIgd2l0aCBIb21lciwgdGhlIGRpdmluZSBwb2V0LCBub3Igd2l0aCBvdXJzZWx2ZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoYXQgaXMgdHJ1ZSzigJ0gc2FpZCBoZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVmVyeSB3ZWxsLOKAnSBzYWlkIFNvY3JhdGVzLCDigJxIYXJtb25pYSwgdGhlIFRoZWJhbiBnb2RkZXNzLCBoYXMsIGl0IHNlZW1zLCBiZWVuIG1vZGVyYXRlbHkgZ3JhY2lvdXMgdG8gdXM7ICBidXQgaG93LCBDZWJlcywgYW5kIGJ5IHdoYXQgYXJndW1lbnQgY2FuIHdlIGZpbmQgZ3JhY2UgaW4gdGhlIHNpZ2h0IG9mIENhZG11cz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSB0aGluayzigJ0gc2FpZCBDZWJlcywg4oCceW91IHdpbGwgZmluZCBhIHdheS4gIEF0IGFueSByYXRlLCB5b3UgY29uZHVjdGVkIHRoaXMgYXJndW1lbnQgYWdhaW5zdCBoYXJtb255IHdvbmRlcmZ1bGx5IGFuZCBiZXR0ZXIgdGhhbiBJIGV4cGVjdGVkLiAgRm9yIHdoZW4gU2ltbWlhcyB3YXMgdGVsbGluZyBvZiBoaXMgZGlmZmljdWx0eSwgSSB3b25kZXJlZCBpZiBhbnlvbmUgY291bGQgbWFrZSBoZWFkIGFnYWluc3QKPC90cmFuc2xhdGlvbj4="
translation['95.95b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NWIiIHVuaXQ9InNlY3Rpb24iIC8+aGlzIGFyZ3VtZW50OyAgc28gaXQgc2VlbWVkIHRvIG1lIHZlcnkgcmVtYXJrYWJsZSB0aGF0IGl0IGNvdWxkIG5vdCB3aXRoc3RhbmQgdGhlIGZpcnN0IGF0dGFjayBvZiB5b3VyIGFyZ3VtZW50LiAgTm93IEkgc2hvdWxkIG5vdCBiZSBzdXJwcmlzZWQgaWYgdGhlIGFyZ3VtZW50IG9mIENhZG11cyBtZXQgd2l0aCB0aGUgc2FtZSBmYXRlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxNeSBmcmllbmQs4oCdIHNhaWQgU29jcmF0ZXMsIOKAnGRvIG5vdCBiZSBib2FzdGZ1bCwgbGVzdCBzb21lIGV2aWwgZXllIHB1dCB0byByb3V0IHRoZSBhcmd1bWVudCB0aGF0IGlzIHRvIGNvbWUuICBUaGF0LCBob3dldmVyLCBpcyBpbiB0aGUgaGFuZHMgb2YgR29kLiAgTGV0IHVzLCBpbiBIb21lcmljIGZhc2hpb24sIGNoYXJnZSB0aGUgZm9lIGFuZCB0ZXN0IHRoZSB3b3J0aCBvZiB3aGF0IHlvdSBzYXkuICBOb3cgdGhlIHN1bSB0b3RhbCBvZiB3aGF0IHlvdSBzZWVrIGlzIHRoaXM6ICBZb3UgZGVtYW5kIGEgcHJvb2YgdGhhdCBvdXIgc291bCBpcyBpbmRlc3RydWN0aWJsZQo8L3RyYW5zbGF0aW9uPg=="
translation['95.95c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NWMiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGltbW9ydGFsLCBpZiB0aGUgcGhpbG9zb3BoZXIsIHdobyBpcyBjb25maWRlbnQgaW4gdGhlIGZhY2Ugb2YgZGVhdGggYW5kIHdobyB0aGlua3MgdGhhdCBhZnRlciBkZWF0aCBoZSB3aWxsIGZhcmUgYmV0dGVyIGluIHRoZSBvdGhlciB3b3JsZCB0aGFuIGlmIGhlIGhhZCBsaXZlZCBoaXMgbGlmZSBkaWZmZXJlbnRseSwgaXMgbm90IHRvIGZpbmQgaGlzIGNvbmZpZGVuY2Ugc2Vuc2VsZXNzIGFuZCBmb29saXNoLiAgQW5kIGFsdGhvdWdoIHdlIHNob3cgdGhhdCB0aGUgc291bCBpcyBzdHJvbmcgYW5kIGdvZGxpa2UgYW5kIGV4aXN0ZWQgYmVmb3JlIHdlIG1lbiB3ZXJlIGJvcm4gYXMgbWVuLCBhbGwgdGhpcywgeW91IHNheSwgbWF5IGJlYXIgd2l0bmVzcyBub3QgdG8gaW1tb3J0YWxpdHksIGJ1dCBvbmx5IHRvIHRoZSBmYWN0IHRoYXQgdGhlIHNvdWwgbGFzdHMgYSBsb25nIHdoaWxlLCBhbmQgZXhpc3RlZCBzb21ld2hlcmUgYW4gaW1tZWFzdXJhYmx5IGxvbmcgdGltZSBiZWZvcmUgb3VyIGJpcnRoLCBhbmQga25ldyBhbmQgZGlkIHZhcmlvdXMgdGhpbmdzOyAgeWV0IGl0IHdhcyBub25lIHRoZSBtb3JlIGltbW9ydGFsIGZvciBhbGwgdGhhdCwKPC90cmFuc2xhdGlvbj4="
translation['95.95d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NWQiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IGl0cyB2ZXJ5IGVudHJhbmNlIGludG8gdGhlIGh1bWFuIGJvZHkgd2FzIHRoZSBiZWdpbm5pbmcgb2YgaXRzIGRpc3NvbHV0aW9uLCBhIGRpc2Vhc2UsIGFzIGl0IHdlcmU7ICBhbmQgaXQgbGl2ZXMgaW4gdG9pbCB0aHJvdWdoIHRoaXMgbGlmZSBhbmQgZmluYWxseSBwZXJpc2hlcyBpbiB3aGF0IHdlIGNhbGwgZGVhdGguICBOb3cgaXQgbWFrZXMgbm8gZGlmZmVyZW5jZSwgeW91IHNheSwgd2hldGhlciBhIHNvdWwgZW50ZXJzIGludG8gYSBib2R5IG9uY2Ugb3IgbWFueSB0aW1lcywgc28gZmFyIGFzIHRoZSBmZWFyIGVhY2ggb2YgdXMgZmVlbHMgaXMgY29uY2VybmVkOyAgZm9yIGFueW9uZSwgdW5sZXNzIGhlIGlzIGEgZm9vbCwgbXVzdCBmZWFyLCBpZiBoZSBkb2VzIG5vdCBrbm93IGFuZCBjYW5ub3QgcHJvdmUgdGhhdCB0aGUgc291bCBpcyBpbW1vcnRhbC4gIFRoYXQsCjwvdHJhbnNsYXRpb24+"
translation['95.95e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NWUiIHVuaXQ9InNlY3Rpb24iIC8+Q2ViZXMsIGlzLCBJIHRoaW5rLCBhYm91dCB3aGF0IHlvdSBtZWFuLiAgQW5kIEkgcmVzdGF0ZSBpdCBwdXJwb3NlbHkgdGhhdCBub3RoaW5nIG1heSBlc2NhcGUgdXMgYW5kIHRoYXQgeW91IG1heSwgaWYgeW91IHdpc2gsIGFkZCBvciB0YWtlIGF3YXkgYW55dGhpbmcu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPkFuZCBDZWJlcyBzYWlkLCDigJxJIGRvIG5vdCBhdCBwcmVzZW50IHdpc2ggdG8gdGFrZSBhbnl0aGluZyBhd2F5IG9yIHRvIGFkZCBhbnl0aGluZy4gIFlvdSBoYXZlIGV4cHJlc3NlZCBteSBtZWFuaW5nLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5Tb2NyYXRlcyBwYXVzZWQgZm9yIHNvbWUgdGltZSBhbmQgd2FzIGFic29yYmVkIGluIHRob3VnaHQuICBUaGVuIGhlIHNhaWQ6ICDigJxJdCBpcyBubyBzbWFsbCB0aGluZyB0aGF0IHlvdSBzZWVrOyAgZm9yIHRoZSBjYXVzZSBvZiBnZW5lcmF0aW9uIGFuZCBkZWNheSBtdXN0IGJlIGNvbXBsZXRlbHkgaW52ZXN0aWdhdGVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['96.96a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOTZhIiB1bml0PSJzZWN0aW9uIiAvPk5vdyBJIHdpbGwgdGVsbCB5b3UgbXkgb3duIGV4cGVyaWVuY2UgaW4gdGhlIG1hdHRlciwgaWYgeW91IHdpc2g7ICB0aGVuIGlmIGFueXRoaW5nIEkgc2F5IHNlZW1zIHRvIHlvdSB0byBiZSBvZiBhbnkgdXNlLCB5b3UgY2FuIGVtcGxveSBpdCBmb3IgdGhlIHNvbHV0aW9uIG9mIHlvdXIgZGlmZmljdWx0eS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LOKAnSBzYWlkIENlYmVzLCDigJxJIHdpc2ggdG8gaGVhciB5b3VyIGV4cGVyaWVuY2VzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxMaXN0ZW4gdGhlbiwgYW5kIEkgd2lsbCB0ZWxsIHlvdS4gIFdoZW4gSSB3YXMgeW91bmcsIENlYmVzLCBJIHdhcyB0cmVtZW5kb3VzbHkgZWFnZXIgZm9yIHRoZSBraW5kIG9mIHdpc2RvbSB3aGljaCB0aGV5IGNhbGwgaW52ZXN0aWdhdGlvbiBvZiBuYXR1cmUuICBJIHRob3VnaHQgaXQgd2FzIGEgZ2xvcmlvdXMgdGhpbmcgdG8ga25vdyB0aGUgY2F1c2VzIG9mIGV2ZXJ5dGhpbmcsIHdoeSBlYWNoIHRoaW5nIGNvbWVzIGludG8gYmVpbmcgYW5kIHdoeSBpdCBwZXJpc2hlcyBhbmQgd2h5IGl0IGV4aXN0czsKPC90cmFuc2xhdGlvbj4="
translation['96.96b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NmIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIEkgd2FzIGFsd2F5cyB1bnNldHRsaW5nIG15c2VsZiB3aXRoIHN1Y2ggcXVlc3Rpb25zIGFzIHRoZXNlOiAgRG8gaGVhdCBhbmQgY29sZCwgYnkgYSBzb3J0IG9mIGZlcm1lbnRhdGlvbiwgYnJpbmcgYWJvdXQgdGhlIG9yZ2FuaXphdGlvbiBvZiBhbmltYWxzLCBhcyBzb21lIHBlb3BsZSBzYXk/ICBJcyBpdCB0aGUgYmxvb2QsIG9yIGFpciwgb3IgZmlyZSBieSB3aGljaCB3ZSB0aGluaz8gIE9yIGlzIGl0IG5vbmUgb2YgdGhlc2UsIGFuZCBkb2VzIHRoZSBicmFpbiBmdXJuaXNoIHRoZSBzZW5zYXRpb25zIG9mIGhlYXJpbmcgYW5kIHNpZ2h0IGFuZCBzbWVsbCwgYW5kIGRvIG1lbW9yeSBhbmQgb3BpbmlvbiBhcmlzZSBmcm9tIHRoZXNlLCBhbmQgZG9lcyBrbm93bGVkZ2UgY29tZSBmcm9tIG1lbW9yeSBhbmQgb3BpbmlvbiBpbiBhIHN0YXRlIG9mIHJlc3Q/ICBBbmQgYWdhaW4gSSB0cmllZCB0byBmaW5kIG91dAo8L3RyYW5zbGF0aW9uPg=="
translation['96.96c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NmMiIHVuaXQ9InNlY3Rpb24iIC8+aG93IHRoZXNlIHRoaW5ncyBwZXJpc2gsIGFuZCBJIGludmVzdGlnYXRlZCB0aGUgcGhlbm9tZW5hIG9mIGhlYXZlbiBhbmQgZWFydGggdW50aWwgZmluYWxseSBJIG1hZGUgdXAgbXkgbWluZCB0aGF0IEkgd2FzIGJ5IG5hdHVyZSB0b3RhbGx5IHVuZml0dGVkIGZvciB0aGlzIGtpbmQgb2YgaW52ZXN0aWdhdGlvbi4gIEFuZCBJIHdpbGwgZ2l2ZSB5b3UgYSBzdWZmaWNpZW50IHByb29mIG9mIHRoaXMuICBJIHdhcyBzbyBjb21wbGV0ZWx5IGJsaW5kZWQgYnkgdGhlc2Ugc3R1ZGllcyB0aGF0IEkgbG9zdCB0aGUga25vd2xlZGdlIHRoYXQgSSwgYW5kIG90aGVycyBhbHNvLCB0aG91Z2h0IEkgaGFkIGJlZm9yZTsgIEkgZm9yZ290IHdoYXQgSSBoYWQgZm9ybWVybHkgYmVsaWV2ZWQgSSBrbmV3IGFib3V0IG1hbnkgdGhpbmdzIGFuZCBldmVuIGFib3V0IHRoZSBjYXVzZSBvZiBtYW4ncyBncm93dGguICBGb3IgSSBoYWQgdGhvdWdodCBwcmV2aW91c2x5IHRoYXQgaXQgd2FzIHBsYWluIHRvIGV2ZXJ5b25lIHRoYXQgbWFuIGdyb3dzIHRocm91Z2ggZWF0aW5nIGFuZAo8L3RyYW5zbGF0aW9uPg=="
translation['96.96d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NmQiIHVuaXQ9InNlY3Rpb24iIC8+ZHJpbmtpbmc7ICBmb3Igd2hlbiwgZnJvbSB0aGUgZm9vZCBoZSBlYXRzLCBmbGVzaCBpcyBhZGRlZCB0byBoaXMgZmxlc2ggYW5kIGJvbmVzIHRvIGhpcyBib25lcywgYW5kIGluIHRoZSBzYW1lIHdheSB0aGUgYXBwcm9wcmlhdGUgdGhpbmcgaXMgYWRkZWQgdG8gZWFjaCBvZiBoaXMgb3RoZXIgcGFydHMsIHRoZW4gdGhlIHNtYWxsIGJ1bGsgYmVjb21lcyBncmVhdGVyIGFuZCB0aGUgc21hbGwgbWFuIGxhcmdlLiAgVGhhdCBpcyB3aGF0IEkgdXNlZCB0byB0aGluay4gIERvZXNuJ3QgdGhhdCBzZWVtIHRvIHlvdSByZWFzb25hYmxlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMs4oCdIHNhaWQgQ2ViZXMuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vdyBsaXN0ZW4gdG8gdGhpcywgdG9vLiAgSSB0aG91Z2h0IEkgd2FzIHN1cmUgZW5vdWdoLCB3aGVuIEkgc2F3IGEgdGFsbCBtYW4gc3RhbmRpbmcgYnkgYSBzaG9ydCBvbmUsIHRoYXQgaGUgd2FzLCBzYXksIHRhbGxlciBieSBhIGhlYWQgdGhhbiB0aGUgb3RoZXIsCjwvdHJhbnNsYXRpb24+"
translation['96.96e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NmUiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoYXQgb25lIGhvcnNlIHdhcyBsYXJnZXIgYnkgYSBoZWFkIHRoYW4gYW5vdGhlciBob3JzZTsgIGFuZCwgdG8gbWVudGlvbiBzdGlsbCBjbGVhcmVyIHRoaW5ncyB0aGFuIHRob3NlLCBJIHRob3VnaHQgdGVuIHdlcmUgbW9yZSB0aGFuIGVpZ2h0IGJlY2F1c2UgdHdvIGhhZCBiZWVuIGFkZGVkIHRvIHRoZSBlaWdodCwgYW5kIEkgdGhvdWdodCBhIHR3by1jdWJpdCBydWxlIHdhcyBsb25nZXIgdGhhbiBhIG9uZS1jdWJpdCBydWxlIGJlY2F1c2UgaXQgZXhjZWVkZWQgaXQgYnkgaGFsZiBpdHMgbGVuZ3RoLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgbm93LOKAnSBzYWlkIENlYmVzLCDigJx3aGF0IGRvIHlvdSB0aGluayBhYm91dCB0aGVtP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCeSBaZXVzLOKAnSBzYWlkIGhlLCDigJxJIGFtIGZhciBmcm9tIHRoaW5raW5nIHRoYXQgSSBrbm93IHRoZSBjYXVzZSBvZiBhbnkgb2YgdGhlc2UgdGhpbmdzLCBJIHdobyBkbyBub3QgZXZlbiBkYXJlIHRvIHNheSwgd2hlbiBvbmUgaXMgYWRkZWQgdG8gb25lLCB3aGV0aGVyIHRoZSBvbmUgdG8gd2hpY2ggdGhlIGFkZGl0aW9uIHdhcyBtYWRlIGhhcyBiZWNvbWUgdHdvLCBvciB0aGUgb25lIHdoaWNoIHdhcyBhZGRlZCwgb3IgdGhlIG9uZSB3aGljaCB3YXMgYWRkZWQgYW5kCjwvdHJhbnNsYXRpb24+"
translation['97.97a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5NyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOTdhIiB1bml0PSJzZWN0aW9uIiAvPnRoZSBvbmUgdG8gd2hpY2ggaXQgd2FzIGFkZGVkIGJlY2FtZSB0d28gYnkgdGhlIGFkZGl0aW9uIG9mIGVhY2ggdG8gdGhlIG90aGVyLiAgSSB0aGluayBpdCBpcyB3b25kZXJmdWwgdGhhdCB3aGVuIGVhY2ggb2YgdGhlbSB3YXMgc2VwYXJhdGUgZnJvbSB0aGUgb3RoZXIsIGVhY2ggd2FzIG9uZSBhbmQgdGhleSB3ZXJlIG5vdCB0aGVuIHR3bywgYW5kIHdoZW4gdGhleSB3ZXJlIGJyb3VnaHQgbmVhciBlYWNoIG90aGVyIHRoaXMganV4dGFwb3NpdGlvbiB3YXMgdGhlIGNhdXNlIG9mIHRoZWlyIGJlY29taW5nIHR3by4gIEFuZCBJIGNhbm5vdCB5ZXQgYmVsaWV2ZSB0aGF0IGlmIG9uZSBpcyBkaXZpZGVkLCB0aGUgZGl2aXNpb24gY2F1c2VzIGl0IHRvIGJlY29tZSB0d287ICBmb3IgdGhpcyBpcyB0aGUgb3Bwb3NpdGUgb2YKPC90cmFuc2xhdGlvbj4="
translation['97.97b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5N2IiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIGNhdXNlIHdoaWNoIHByb2R1Y2VkIHR3byBpbiB0aGUgZm9ybWVyIGNhc2U7ICBmb3IgdGhlbiB0d28gYXJvc2UgYmVjYXVzZSBvbmUgd2FzIGJyb3VnaHQgbmVhciBhbmQgYWRkZWQgdG8gYW5vdGhlciBvbmUsIGFuZCBub3cgYmVjYXVzZSBvbmUgaXMgcmVtb3ZlZCBhbmQgc2VwYXJhdGVkIGZyb20gb3RoZXIuICBBbmQgSSBubyBsb25nZXIgYmVsaWV2ZSB0aGF0IEkga25vdyBieSB0aGlzIG1ldGhvZCBldmVuIGhvdyBvbmUgaXMgZ2VuZXJhdGVkIG9yLCBpbiBhIHdvcmQsIGhvdyBhbnl0aGluZyBpcyBnZW5lcmF0ZWQgb3IgaXMgZGVzdHJveWVkIG9yIGV4aXN0cywgYW5kIEkgbm8gbG9uZ2VyIGFkbWl0IHRoaXMgbWV0aG9kLCBidXQgaGF2ZSBhbm90aGVyIGNvbmZ1c2VkIHdheSBvZiBteSBvd24uPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4gb25lIGRheSBJIGhlYXJkIGEgbWFuIHJlYWRpbmcgZnJvbSBhIGJvb2ssIGFzIGhlIHNhaWQsIGJ5IEFuYXhhZ29yYXMsCjwvdHJhbnNsYXRpb24+"
translation['97.97c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5N2MiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBpdCBpcyB0aGUgbWluZCB0aGF0IGFycmFuZ2VzIGFuZCBjYXVzZXMgYWxsIHRoaW5ncy4gIEkgd2FzIHBsZWFzZWQgd2l0aCB0aGlzIHRoZW9yeSBvZiBjYXVzZSwgYW5kIGl0IHNlZW1lZCB0byBtZSB0byBiZSBzb21laG93IHJpZ2h0IHRoYXQgdGhlIG1pbmQgc2hvdWxkIGJlIHRoZSBjYXVzZSBvZiBhbGwgdGhpbmdzLCBhbmQgSSB0aG91Z2h0LCAnSWYgdGhpcyBpcyBzbywgdGhlIG1pbmQgaW4gYXJyYW5naW5nIHRoaW5ncyBhcnJhbmdlcyBldmVyeXRoaW5nIGFuZCBlc3RhYmxpc2hlcyBlYWNoIHRoaW5nIGFzIGl0IGlzIGJlc3QgZm9yIGl0IHRvIGJlLiAgU28gaWYgYW55b25lIHdpc2hlcyB0byBmaW5kIHRoZSBjYXVzZSBvZiB0aGUgZ2VuZXJhdGlvbiBvciBkZXN0cnVjdGlvbiBvciBleGlzdGVuY2Ugb2YgYSBwYXJ0aWN1bGFyIHRoaW5nLCBoZSBtdXN0IGZpbmQgb3V0IHdoYXQgc29ydCBvZiBleGlzdGVuY2UsIG9yIHBhc3NpdmUgc3RhdGUgb2YgYW55IGtpbmQsIG9yIGFjdGl2aXR5IGlzIGJlc3QgZm9yIGl0LiAgQW5kIHRoZXJlZm9yZSBpbiByZXNwZWN0IHRvCjwvdHJhbnNsYXRpb24+"
translation['97.97d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5N2QiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBwYXJ0aWN1bGFyIHRoaW5nLCBhbmQgb3RoZXIgdGhpbmdzIHRvbywgYSBtYW4gbmVlZCBleGFtaW5lIG5vdGhpbmcgYnV0IHdoYXQgaXMgYmVzdCBhbmQgbW9zdCBleGNlbGxlbnQ7ICBmb3IgdGhlbiBoZSB3aWxsIG5lY2Vzc2FyaWx5IGtub3cgYWxzbyB3aGF0IGlzIGluZmVyaW9yLCBzaW5jZSB0aGUgc2NpZW5jZSBvZiBib3RoIGlzIHRoZSBzYW1lLiAgQXMgSSBjb25zaWRlcmVkIHRoZXNlIHRoaW5ncyBJIHdhcyBkZWxpZ2h0ZWQgdG8gdGhpbmsgdGhhdCBJIGhhZCBmb3VuZCBpbiBBbmF4YWdvcmFzIGEgdGVhY2hlciBvZiB0aGUgY2F1c2Ugb2YgdGhpbmdzIHF1aXRlIHRvIG15IG1pbmQsIGFuZCBJIHRob3VnaHQgaGUgd291bGQgdGVsbCBtZSB3aGV0aGVyIHRoZSBlYXJ0aCBpcyBmbGF0IG9yIHJvdW5kLCBhbmQgd2hlbgo8L3RyYW5zbGF0aW9uPg=="
translation['97.97e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5N2UiIHVuaXQ9InNlY3Rpb24iIC8+aGUgaGFkIHRvbGQgbWUgdGhhdCwgd291bGQgZ28gb24gdG8gZXhwbGFpbiB0aGUgY2F1c2UgYW5kIHRoZSBuZWNlc3NpdHkgb2YgaXQsIGFuZCB3b3VsZCB0ZWxsIG1lIHRoZSBuYXR1cmUgb2YgdGhlIGJlc3QgYW5kIHdoeSBpdCBpcyBiZXN0IGZvciB0aGUgZWFydGggdG8gYmUgYXMgaXQgaXM7ICBhbmQgaWYgaGUgc2FpZCB0aGUgZWFydGggd2FzIGluIHRoZSBjZW50ZXIsIGhlIHdvdWxkIHByb2NlZWQgdG8gc2hvdyB0aGF0IGl0IGlzIGJlc3QgZm9yIGl0IHRvIGJlIGluIHRoZSBjZW50ZXI7ICBhbmQgSSBoYWQgbWFkZSB1cCBteSBtaW5kIHRoYXQKPC90cmFuc2xhdGlvbj4="
translation['98.98a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOThhIiB1bml0PSJzZWN0aW9uIiAvPmlmIGhlIG1hZGUgdGhvc2UgdGhpbmdzIGNsZWFyIHRvIG1lLCBJIHdvdWxkIG5vIGxvbmdlciB5ZWFybiBmb3IgYW55IG90aGVyIGtpbmQgb2YgY2F1c2UuICBBbmQgSSBoYWQgZGV0ZXJtaW5lZCB0aGF0IEkgd291bGQgZmluZCBvdXQgaW4gdGhlIHNhbWUgd2F5IGFib3V0IHRoZSBzdW4gYW5kIHRoZSBtb29uIGFuZCB0aGUgb3RoZXIgc3RhcnMsIHRoZWlyIHJlbGF0aXZlIHNwZWVkLCB0aGVpciByZXZvbHV0aW9ucywgYW5kIHRoZWlyIG90aGVyIGNoYW5nZXMsIGFuZCB3aHkgdGhlIGFjdGl2ZSBvciBwYXNzaXZlIGNvbmRpdGlvbiBvZiBlYWNoIG9mIHRoZW0gaXMgZm9yIHRoZSBiZXN0LiAgRm9yIEkgbmV2ZXIgaW1hZ2luZWQgdGhhdCwgd2hlbiBoZSBzYWlkIHRoZXkgd2VyZSBvcmRlcmVkIGJ5IGludGVsbGlnZW5jZSwgaGUgd291bGQgaW50cm9kdWNlIGFueSBvdGhlciBjYXVzZSBmb3IgdGhlc2UgdGhpbmdzIHRoYW4gdGhhdCBpdCBpdCBpcyBiZXN0IGZvciB0aGVtIHRvIGJlIGFzIHRoZXkgYXJlLgo8L3RyYW5zbGF0aW9uPg=="
translation['98.98b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OGIiIHVuaXQ9InNlY3Rpb24iIC8+U28gSSB0aG91Z2h0IHdoZW4gaGUgYXNzaWduZWQgdGhlIGNhdXNlIG9mIGVhY2ggdGhpbmcgYW5kIG9mIGFsbCB0aGluZ3MgaW4gY29tbW9uIGhlIHdvdWxkIGdvIG9uIGFuZCBleHBsYWluIHdoYXQgaXMgYmVzdCBmb3IgZWFjaCBhbmQgd2hhdCBpcyBnb29kIGZvciBhbGwgaW4gY29tbW9uLiAgSSBwcml6ZWQgbXkgaG9wZXMgdmVyeSBoaWdobHksIGFuZCBJIHNlaXplZCB0aGUgYm9va3MgdmVyeSBlYWdlcmx5IGFuZCByZWFkIHRoZW0gYXMgZmFzdCBhcyBJIGNvdWxkLCB0aGF0IEkgbWlnaHQga25vdyBhcyBmYXN0IGFzIEkgY291bGQgYWJvdXQgdGhlIGJlc3QgYW5kIHRoZSB3b3JzdC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTXkgZ2xvcmlvdXMgaG9wZSwgbXkgZnJpZW5kLCB3YXMgcXVpY2tseSBzbmF0Y2hlZCBhd2F5IGZyb20gbWUuICBBcyBJIHdlbnQgb24gd2l0aCBteSByZWFkaW5nIEkgc2F3IHRoYXQgdGhlIG1hbiBtYWRlIG5vIHVzZSBvZiBpbnRlbGxpZ2VuY2UsCjwvdHJhbnNsYXRpb24+"
translation['98.98c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OGMiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGRpZCBub3QgYXNzaWduIGFueSByZWFsIGNhdXNlcyBmb3IgdGhlIG9yZGVyaW5nIG9mIHRoaW5ncywgYnV0IG1lbnRpb25lZCBhcyBjYXVzZXMgYWlyIGFuZCBldGhlciBhbmQgd2F0ZXIgYW5kIG1hbnkgb3RoZXIgYWJzdXJkaXRpZXMuICBBbmQgaXQgc2VlbWVkIHRvIG1lIGl0IHdhcyB2ZXJ5IG11Y2ggYXMgaWYgb25lIHNob3VsZCBzYXkgdGhhdCBTb2NyYXRlcyBkb2VzIHdpdGggaW50ZWxsaWdlbmNlIHdoYXRldmVyIGhlIGRvZXMsIGFuZCB0aGVuLCBpbiB0cnlpbmcgdG8gZ2l2ZSB0aGUgY2F1c2VzIG9mIHRoZSBwYXJ0aWN1bGFyIHRoaW5nIEkgZG8sIHNob3VsZCBzYXkgZmlyc3QgdGhhdCBJIGFtIG5vdyBzaXR0aW5nIGhlcmUgYmVjYXVzZSBteSBib2R5IGlzIGNvbXBvc2VkIG9mIGJvbmVzIGFuZCBzaW5ld3MsIGFuZCB0aGUgYm9uZXMgYXJlIGhhcmQgYW5kIGhhdmUgam9pbnRzIHdoaWNoIGRpdmlkZSB0aGVtIGFuZCB0aGUgc2luZXdzCjwvdHJhbnNsYXRpb24+"
translation['98.98d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OGQiIHVuaXQ9InNlY3Rpb24iIC8+Y2FuIGJlIGNvbnRyYWN0ZWQgYW5kIHJlbGF4ZWQgYW5kLCB3aXRoIHRoZSBmbGVzaCBhbmQgdGhlIHNraW4gd2hpY2ggY29udGFpbnMgdGhlbSBhbGwsIGFyZSBsYWlkIGFib3V0IHRoZSBib25lczsgIGFuZCBzbywgYXMgdGhlIGJvbmVzIGFyZSBodW5nIGxvb3NlIGluIHRoZWlyIGxpZ2FtZW50cywgdGhlIHNpbmV3cywgYnkgcmVsYXhpbmcgYW5kIGNvbnRyYWN0aW5nLCBtYWtlIG1lIGFibGUgdG8gYmVuZCBteSBsaW1icyBub3csIGFuZCB0aGF0IGlzIHRoZSBjYXVzZSBvZiBteSBzaXR0aW5nIGhlcmUgd2l0aCBteSBsZWdzIGJlbnQuICBPciBhcyBpZiBpbiB0aGUgc2FtZSB3YXkgaGUgc2hvdWxkIGdpdmUgdm9pY2UgYW5kIGFpciBhbmQgaGVhcmluZyBhbmQgY291bnRsZXNzIG90aGVyIHRoaW5ncyBvZiB0aGUgc29ydCBhcyBjYXVzZXMgZm9yIG91ciB0YWxraW5nIHdpdGggZWFjaCBvdGhlciwKPC90cmFuc2xhdGlvbj4="
translation['98.98e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OGUiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHNob3VsZCBmYWlsIHRvIG1lbnRpb24gdGhlIHJlYWwgY2F1c2VzLCB3aGljaCBhcmUsIHRoYXQgdGhlIEF0aGVuaWFucyBkZWNpZGVkIHRoYXQgaXQgd2FzIGJlc3QgdG8gY29uZGVtbiBtZSwgYW5kIHRoZXJlZm9yZSBJIGhhdmUgZGVjaWRlZCB0aGF0IGl0IHdhcyBiZXN0IGZvciBtZSB0byBzaXQgaGVyZSBhbmQgdGhhdCBpdCBpcyByaWdodCBmb3IgbWUgdG8gc3RheSBhbmQgdW5kZXJnbyB3aGF0ZXZlciBwZW5hbHR5IHRoZXkgb3JkZXIuCjwvdHJhbnNsYXRpb24+"
translation['99.99a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOTlhIiB1bml0PSJzZWN0aW9uIiAvPkZvciwgYnkgRG9nLCBJIGZhbmN5IHRoZXNlIGJvbmVzIGFuZCBzaW5ld3Mgb2YgbWluZSB3b3VsZCBoYXZlIGJlZW4gaW4gPHBsYWNlTmFtZSBhdXRobmFtZT0icGVyc2V1cyxNZWdhcmEiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJwZXJzZXVzLE1lZ2FyYSI+TWVnYXJhPC9wbGFjZU5hbWU+IG9yIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAyNjgzIiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDI2ODMiPkJvZW90aWE8L3BsYWNlTmFtZT4gbG9uZyBhZ28sIGNhcnJpZWQgdGhpdGhlciBieSBhbiBvcGluaW9uIG9mIHdoYXQgd2FzIGJlc3QsIGlmIEkgZGlkIG5vdCB0aGluayBpdCB3YXMgYmV0dGVyIGFuZCBub2JsZXIgdG8gZW5kdXJlIGFueSBwZW5hbHR5IHRoZSBjaXR5IG1heSBpbmZsaWN0IHJhdGhlciB0aGFuIHRvIGVzY2FwZSBhbmQgcnVuIGF3YXkuICBCdXQgaXQgaXMgbW9zdCBhYnN1cmQgdG8gY2FsbCB0aGluZ3Mgb2YgdGhhdCBzb3J0IGNhdXNlcy4gIElmIGFueW9uZSB3ZXJlIHRvIHNheSB0aGF0IEkgY291bGQgbm90IGhhdmUgZG9uZSB3aGF0IEkgdGhvdWdodCBwcm9wZXIgaWYgSSBoYWQgbm90IGJvbmVzIGFuZCBzaW5ld3MgYW5kIG90aGVyIHRoaW5ncyB0aGF0IEkgaGF2ZSwgaGUgd291bGQgYmUgcmlnaHQuICBCdXQgdG8gc2F5IHRoYXQgdGhvc2UgdGhpbmdzIGFyZSB0aGUgY2F1c2Ugb2YgbXkgZG9pbmcgd2hhdCBJIGRvLAo8L3RyYW5zbGF0aW9uPg=="
translation['99.99b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OWIiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoYXQgSSBhY3Qgd2l0aCBpbnRlbGxpZ2VuY2UgYnV0IG5vdCBmcm9tIHRoZSBjaG9pY2Ugb2Ygd2hhdCBpcyBiZXN0LCB3b3VsZCBiZSBhbiBleHRyZW1lbHkgY2FyZWxlc3Mgd2F5IG9mIHRhbGtpbmcuICBXaG9ldmVyIHRhbGtzIGluIHRoYXQgd2F5IGlzIHVuYWJsZSB0byBtYWtlIGEgZGlzdGluY3Rpb24gYW5kIHRvIHNlZSB0aGF0IGluIHJlYWxpdHkgYSBjYXVzZSBpcyBvbmUgdGhpbmcsIGFuZCB0aGUgdGhpbmcgd2l0aG91dCB3aGljaCB0aGUgY2F1c2UgY291bGQgbmV2ZXIgYmUgYSBjYXVzZSBpcyBxdWl0ZSBhbm90aGVyIHRoaW5nLiAgQW5kIHNvIGl0IHNlZW1zIHRvIG1lIHRoYXQgbW9zdCBwZW9wbGUsIHdoZW4gdGhleSBnaXZlIHRoZSBuYW1lIG9mIGNhdXNlIHRvIHRoZSBsYXR0ZXIsIGFyZSBncm9waW5nIGluIHRoZSBkYXJrLCBhcyBpdCB3ZXJlLCBhbmQgYXJlIGdpdmluZyBpdCBhIG5hbWUgdGhhdCBkb2VzIG5vdCBiZWxvbmcgdG8gaXQuICBBbmQgc28gb25lIG1hbiBtYWtlcyB0aGUgZWFydGggc3RheSBiZWxvdyB0aGUgaGVhdmVucyBieSBwdXR0aW5nIGEgdm9ydGV4IGFib3V0IGl0LCBhbmQgYW5vdGhlciByZWdhcmRzIHRoZSBlYXJ0aCBhcyBhIGZsYXQgdHJvdWdoIHN1cHBvcnRlZCBvbiBhIGZvdW5kYXRpb24gb2YgYWlyOyAgYnV0IHRoZXkgZG8gbm90IGxvb2sgZm9yCjwvdHJhbnNsYXRpb24+"
translation['99.99c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OWMiIHVuaXQ9InNlY3Rpb24iIC8+dGhlIHBvd2VyIHdoaWNoIGNhdXNlcyB0aGluZ3MgdG8gYmUgbm93IHBsYWNlZCBhcyBpdCBpcyBiZXN0IGZvciB0aGVtIHRvIGJlIHBsYWNlZCwgbm9yIGRvIHRoZXkgdGhpbmsgaXQgaGFzIGFueSBkaXZpbmUgZm9yY2UsIGJ1dCB0aGV5IHRoaW5rIHRoZXkgY2FuIGZpbmQgYSBuZXcgQXRsYXMgbW9yZSBwb3dlcmZ1bCBhbmQgbW9yZSBpbW1vcnRhbCBhbmQgbW9yZSBhbGwtZW1icmFjaW5nIHRoYW4gdGhpcywgYW5kIGluIHRydXRoIHRoZXkgZ2l2ZSBubyB0aG91Z2h0IHRvIHRoZSBnb29kLCB3aGljaCBtdXN0IGVtYnJhY2UgYW5kIGhvbGQgdG9nZXRoZXIgYWxsIHRoaW5ncy4gIE5vdyBJIHdvdWxkIGdsYWRseSBiZSB0aGUgcHVwaWwgb2YgYW55b25lIHdobyB3b3VsZCB0ZWFjaCBtZSB0aGUgbmF0dXJlIG9mIHN1Y2ggYSBjYXVzZTsgIGJ1dCBzaW5jZSB0aGF0IHdhcyBkZW5pZWQgbWUgYW5kIEkgd2FzIG5vdCBhYmxlIHRvIGRpc2NvdmVyIGl0IG15c2VsZiBvciB0byBsZWFybiBvZiBpdCBmcm9tIGFueW9uZSBlbHNlLAo8L3RyYW5zbGF0aW9uPg=="
translation['99.99d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OWQiIHVuaXQ9InNlY3Rpb24iIC8+ZG8geW91IHdpc2ggbWUsIENlYmVzLOKAnSBzYWlkIGhlLCDigJx0byBnaXZlIHlvdSBhbiBhY2NvdW50IG9mIHRoZSB3YXkgaW4gd2hpY2ggSSBoYXZlIGNvbmR1Y3RlZCBteSBzZWNvbmQgdm95YWdlIGluIHF1ZXN0IG9mIHRoZSBjYXVzZT/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSB3aXNoIGl0IHdpdGggYWxsIG15IGhlYXJ0LOKAnSBoZSByZXBsaWVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBZnRlciB0aGlzLCB0aGVuLOKAnSBzYWlkIGhlLCDigJxzaW5jZSBJIGhhZCBnaXZlbiB1cCBpbnZlc3RpZ2F0aW5nIHJlYWxpdGllcywgSSBkZWNpZGVkIHRoYXQgSSBtdXN0IGJlIGNhcmVmdWwgbm90IHRvIHN1ZmZlciB0aGUgbWlzZm9ydHVuZSB3aGljaCBoYXBwZW5zIHRvIHBlb3BsZSB3aG8gbG9vayBhdCB0aGUgc3VuIGFuZCB3YXRjaCBpdCBkdXJpbmcgYW4gZWNsaXBzZS4gIEZvciBzb21lIG9mIHRoZW0gcnVpbiB0aGVpciBleWVzIHVubGVzcyB0aGV5IGxvb2sgYXQgaXRzIGltYWdlIGluIHdhdGVyCjwvdHJhbnNsYXRpb24+"
translation['99.99e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5OWUiIHVuaXQ9InNlY3Rpb24iIC8+b3Igc29tZXRoaW5nIG9mIHRoZSBzb3J0LiAgSSB0aG91Z2h0IG9mIHRoYXQgZGFuZ2VyLCBhbmQgSSB3YXMgYWZyYWlkIG15IHNvdWwgd291bGQgYmUgYmxpbmRlZCBpZiBJIGxvb2tlZCBhdCB0aGluZ3Mgd2l0aCBteSBleWVzIGFuZCB0cmllZCB0byBncmFzcCB0aGVtIHdpdGggYW55IG9mIG15IHNlbnNlcy4gIFNvIEkgdGhvdWdodCBJIG11c3QgaGF2ZSByZWNvdXJzZSB0byBjb25jZXB0aW9ucyBhbmQgZXhhbWluZSBpbiB0aGVtIHRoZSB0cnV0aCBvZiByZWFsaXRpZXMuICBOb3cgcGVyaGFwcyBteSBtZXRhcGhvcgo8L3RyYW5zbGF0aW9uPg=="
translation['100.100a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDAiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwMGEiIHVuaXQ9InNlY3Rpb24iIC8+aXMgbm90IHF1aXRlIGFjY3VyYXRlOyAgZm9yIEkgZG8gbm90IGdyYW50IGluIHRoZSBsZWFzdCB0aGF0IGhlIHdobyBzdHVkaWVzIHJlYWxpdGllcyBieSBtZWFucyBvZiBjb25jZXB0aW9ucyBpcyBsb29raW5nIGF0IHRoZW0gaW4gaW1hZ2VzIGFueSBtb3JlIHRoYW4gaGUgd2hvIHN0dWRpZXMgdGhlbSBpbiB0aGUgZmFjdHMgb2YgZGFpbHkgbGlmZS4gIEhvd2V2ZXIsIHRoYXQgaXMgdGhlIHdheSBJIGJlZ2FuLiAgSSBhc3N1bWUgaW4gZWFjaCBjYXNlIHNvbWUgcHJpbmNpcGxlIHdoaWNoIEkgY29uc2lkZXIgc3Ryb25nZXN0LCBhbmQgd2hhdGV2ZXIgc2VlbXMgdG8gbWUgdG8gYWdyZWUgd2l0aCB0aGlzLCB3aGV0aGVyIHJlbGF0aW5nIHRvIGNhdXNlIG9yIHRvIGFueXRoaW5nIGVsc2UsIEkgcmVnYXJkIGFzIHRydWUsIGFuZCB3aGF0ZXZlciBkaXNhZ3JlZXMgd2l0aCBpdCwgYXMgdW50cnVlLiAgQnV0IEkgd2FudCB0byB0ZWxsIHlvdSBtb3JlIGNsZWFybHkgd2hhdCBJIG1lYW47ICBmb3IgSSB0aGluayB5b3UgZG8gbm90IHVuZGVyc3RhbmQgbm93LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3QgdmVyeSB3ZWxsLCBjZXJ0YWlubHks4oCdIHNhaWQgQ2ViZXMuCjwvdHJhbnNsYXRpb24+"
translation['100.100b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDBiIiB1bml0PSJzZWN0aW9uIiAvPuKAnFdlbGws4oCdIHNhaWQgU29jcmF0ZXMsIOKAnHRoaXMgaXMgd2hhdCBJIG1lYW4uICBJdCBpcyBub3RoaW5nIG5ldywgYnV0IHRoZSBzYW1lIHRoaW5nIEkgaGF2ZSBhbHdheXMgYmVlbiBzYXlpbmcsIGJvdGggaW4gb3VyIHByZXZpb3VzIGNvbnZlcnNhdGlvbiBhbmQgZWxzZXdoZXJlLiAgSSBhbSBnb2luZyB0byB0cnkgdG8gZXhwbGFpbiB0byB5b3UgdGhlIG5hdHVyZSBvZiB0aGF0IGNhdXNlIHdoaWNoIEkgaGF2ZSBiZWVuIHN0dWR5aW5nLCBhbmQgSSB3aWxsIHJldmVydCB0byB0aG9zZSBmYW1pbGlhciBzdWJqZWN0cyBvZiBvdXJzIGFzIG15IHBvaW50IG9mIGRlcGFydHVyZSBhbmQgYXNzdW1lIHRoYXQgdGhlcmUgYXJlIHN1Y2ggdGhpbmdzIGFzIGFic29sdXRlIGJlYXV0eSBhbmQgZ29vZCBhbmQgZ3JlYXRuZXNzIGFuZCB0aGUgbGlrZS4gIElmIHlvdSBncmFudCB0aGlzIGFuZCBhZ3JlZSB0aGF0IHRoZXNlIGV4aXN0LCBJIGJlbGlldmUgSSBzaGFsbCBleHBsYWluIGNhdXNlIHRvIHlvdSBhbmQgc2hhbGwgcHJvdmUgdGhhdAo8L3RyYW5zbGF0aW9uPg=="
translation['100.100c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDBjIiB1bml0PSJzZWN0aW9uIiAvPnRoZSBzb3VsIGlzIGltbW9ydGFsLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZb3UgbWF5IGFzc3VtZSzigJ0gc2FpZCBDZWJlcywg4oCcdGhhdCBJIGdyYW50IGl0LCBhbmQgZ28gb24u4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4s4oCdIHNhaWQgaGUsIOKAnHNlZSBpZiB5b3UgYWdyZWUgd2l0aCBtZSBpbiB0aGUgbmV4dCBzdGVwLiAgSSB0aGluayB0aGF0IGlmIGFueXRoaW5nIGlzIGJlYXV0aWZ1bCBiZXNpZGVzIGFic29sdXRlIGJlYXV0eSBpdCBpcyBiZWF1dGlmdWwgZm9yIG5vIG90aGVyIHJlYXNvbiB0aGFuIGJlY2F1c2UgaXQgcGFydGFrZXMgb2YgYWJzb2x1dGUgYmVhdXR5OyAgYW5kIHRoaXMgYXBwbGllcyB0byBldmVyeXRoaW5nLiAgRG8geW91IGFzc2VudCB0byB0aGlzIHZpZXcgb2YgY2F1c2U/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEkgZG8s4oCdIHNhaWQgaGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vdyBJIGRvIG5vdCB5ZXQsIHVuZGVyc3RhbmQs4oCdIGhlIHdlbnQgb24sIOKAnG5vciBjYW4gSSBwZXJjZWl2ZSB0aG9zZSBvdGhlciBpbmdlbmlvdXMgY2F1c2VzLiAgSWYgYW55b25lIHRlbGxzIG1lIHRoYXQgd2hhdCBtYWtlcyBhIHRoaW5nIGJlYXV0aWZ1bCBpcyBpdHMgbG92ZWx5IGNvbG9yLAo8L3RyYW5zbGF0aW9uPg=="
translation['100.100d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDBkIiB1bml0PSJzZWN0aW9uIiAvPm9yIGl0cyBzaGFwZSBvciBhbnl0aGluZyBlbHNlIG9mIHRoZSBzb3J0LCBJIGxldCBhbGwgdGhhdCBnbywgZm9yIGFsbCB0aG9zZSB0aGluZ3MgY29uZnVzZSBtZSwgYW5kIEkgaG9sZCBzaW1wbHkgYW5kIHBsYWlubHkgYW5kIHBlcmhhcHMgZm9vbGlzaGx5IHRvIHRoaXMsIHRoYXQgbm90aGluZyBlbHNlIG1ha2VzIGl0IGJlYXV0aWZ1bCBidXQgdGhlIHByZXNlbmNlIG9yIGNvbW11bmlvbiAoY2FsbCBpdCB3aGljaCB5b3UgcGxlYXNlKSBvZiBhYnNvbHV0ZSBiZWF1dHksIGhvd2V2ZXIgaXQgbWF5IGhhdmUgYmVlbiBnYWluZWQ7ICBhYm91dCB0aGUgd2F5IGluIHdoaWNoIGl0IGhhcHBlbnMsIEkgbWFrZSBubyBwb3NpdGl2ZSBzdGF0ZW1lbnQgYXMgeWV0LCBidXQgSSBkbyBpbnNpc3QgdGhhdCBiZWF1dGlmdWwgdGhpbmdzIGFyZSBtYWRlIGJlYXV0aWZ1bCBieSBiZWF1dHkuICBGb3IgSSB0aGluayB0aGlzIGlzIHRoZSBzYWZlc3QgYW5zd2VyIEkgY2FuIGdpdmUgdG8gbXlzZWxmIG9yIHRvIG90aGVycywgYW5kIGlmIEkgY2xlYXZlIGZhc3QgdG8gdGhpcywKPC90cmFuc2xhdGlvbj4="
translation['100.100e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDBlIiB1bml0PSJzZWN0aW9uIiAvPkkgdGhpbmsgSSBzaGFsbCBuZXZlciBiZSBvdmVydGhyb3duLCBhbmQgSSBiZWxpZXZlIGl0IGlzIHNhZmUgZm9yIG1lIG9yIGFueW9uZSBlbHNlIHRvIGdpdmUgdGhpcyBhbnN3ZXIsIHRoYXQgYmVhdXRpZnVsIHRoaW5ncyBhcmUgYmVhdXRpZnVsIHRocm91Z2ggYmVhdXR5LiAgRG8geW91IGFncmVlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJIGRvLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgZ3JlYXQgdGhpbmdzIGFyZSBncmVhdCBhbmQgZ3JlYXRlciB0aGluZ3MgZ3JlYXRlciBieSBncmVhdG5lc3MsIGFuZCBzbWFsbGVyIHRoaW5ncyBzbWFsbGVyIGJ5IHNtYWxsbmVzcz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgeW91IHdvdWxkIG5vdCBhY2NlcHQgdGhlIHN0YXRlbWVudCwgaWYgeW91IHdlcmUgdG9sZCB0aGF0IG9uZSBtYW4gd2FzIGdyZWF0ZXIgb3Igc21hbGxlciB0aGFuIGFub3RoZXIgYnkgYSBoZWFkLAo8L3RyYW5zbGF0aW9uPg=="
translation['101.101a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDEiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwMWEiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IHlvdSB3b3VsZCBpbnNpc3QgdGhhdCB5b3Ugc2F5IG9ubHkgdGhhdCBldmVyeSBncmVhdGVyIHRoaW5nIGlzIGdyZWF0ZXIgdGhhbiBhbm90aGVyIGJ5IG5vdGhpbmcgZWxzZSB0aGFuIGdyZWF0bmVzcywgYW5kIHRoYXQgaXQgaXMgZ3JlYXRlciBieSByZWFzb24gb2YgZ3JlYXRuZXNzLCBhbmQgdGhhdCB3aGljaCBpcyBzbWFsbGVyIGlzIHNtYWxsZXIgYnkgbm90aGluZyBlbHNlIHRoYW4gc21hbGxuZXNzIGFuZCBpcyBzbWFsbGVyIGJ5IHJlYXNvbiBvZiBzbWFsbG5lc3MuICBGb3IgeW91IHdvdWxkLCBJIHRoaW5rLCBiZSBhZnJhaWQgb2YgbWVldGluZyB3aXRoIHRoZSByZXRvcnQsIGlmIHlvdSBzYWlkIHRoYXQgYSBtYW4gd2FzIGdyZWF0ZXIgb3Igc21hbGxlciB0aGFuIGFub3RoZXIgYnkgYSBoZWFkLCBmaXJzdCB0aGF0IHRoZSBncmVhdGVyIGlzIGdyZWF0ZXIgYW5kIHRoZSBzbWFsbGVyIGlzIHNtYWxsZXIgYnkgdGhlIHNhbWUgdGhpbmcsIGFuZCBzZWNvbmRseSwgdGhhdAo8L3RyYW5zbGF0aW9uPg=="
translation['101.101b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDFiIiB1bml0PSJzZWN0aW9uIiAvPnRoZSBncmVhdGVyIG1hbiBpcyBncmVhdGVyIGJ5IGEgaGVhZCwgd2hpY2ggaXMgc21hbGwsIGFuZCB0aGF0IGl0IGlzIGEgbW9uc3Ryb3VzIHRoaW5nIHRoYXQgb25lIGlzIGdyZWF0IGJ5IHNvbWV0aGluZyB0aGF0IGlzIHNtYWxsLiAgV291bGQgeW91IG5vdCBiZSBhZnJhaWQgb2YgdGhpcz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QW5kIENlYmVzIGxhdWdoZWQgYW5kIHNhaWQsIOKAnFllcywgSSBzaG91bGQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4s4oCdIGhlIGNvbnRpbnVlZCwg4oCceW91IHdvdWxkIGJlIGFmcmFpZCB0byBzYXkgdGhhdCB0ZW4gaXMgbW9yZSB0aGFuIGVpZ2h0IGJ5IHR3byBhbmQgdGhhdCB0aGlzIGlzIHRoZSByZWFzb24gaXQgaXMgbW9yZS4gIFlvdSB3b3VsZCBzYXkgaXQgaXMgbW9yZSBieSBudW1iZXIgYW5kIGJ5IHJlYXNvbiBvZiBudW1iZXI7ICBhbmQgYSB0d28gY3ViaXQgbWVhc3VyZSBpcyBncmVhdGVyIHRoYW4gYSBvbmUtY3ViaXQgbWVhc3VyZSBub3QgYnkgaGFsZiBidXQgYnkgbWFnbml0dWRlLCB3b3VsZCB5b3Ugbm90PyBGb3IgeW91IHdvdWxkIGhhdmUgdGhlIHNhbWUgZmVhci7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LOKAnSBzYWlkIGhlLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLCB0aGVuLCBpZiBvbmUgaXMgYWRkZWQgdG8gb25lCjwvdHJhbnNsYXRpb24+"
translation['101.101c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDFjIiB1bml0PSJzZWN0aW9uIiAvPm9yIGlmIG9uZSBpcyBkaXZpZGVkLCB5b3Ugd291bGQgYXZvaWQgc2F5aW5nIHRoYXQgdGhlIGFkZGl0aW9uIG9yIHRoZSBkaXZpc2lvbiBpcyB0aGUgY2F1c2Ugb2YgdHdvPyAgWW91IHdvdWxkIGV4Y2xhaW0gbG91ZGx5IHRoYXQgeW91IGtub3cgbm8gb3RoZXIgd2F5IGJ5IHdoaWNoIGFueSB0aGluZyBjYW4gY29tZSBpbnRvIGV4aXN0ZW5jZSB0aGFuIGJ5IHBhcnRpY2lwYXRpbmcgaW4gdGhlIHByb3BlciBlc3NlbmNlIG9mIGVhY2ggdGhpbmcgaW4gd2hpY2ggaXQgcGFydGljaXBhdGVzLCBhbmQgdGhlcmVmb3JlIHlvdSBhY2NlcHQgbm8gb3RoZXIgY2F1c2Ugb2YgdGhlIGV4aXN0ZW5jZSBvZiB0d28gdGhhbiBwYXJ0aWNpcGF0aW9uIGluIGR1YWxpdHksIGFuZCB0aGluZ3Mgd2hpY2ggYXJlIHRvIGJlIHR3byBtdXN0IHBhcnRpY2lwYXRlIGluIGR1YWxpdHksIGFuZCB3aGF0ZXZlciBpcyB0byBiZSBvbmUgbXVzdCBwYXJ0aWNpcGF0ZSBpbiB1bml0eSwgYW5kIHlvdSB3b3VsZCBwYXkgbm8gYXR0ZW50aW9uIHRvIHRoZSBkaXZpc2lvbnMgYW5kIGFkZGl0aW9ucyBhbmQgb3RoZXIgc3VjaCBzdWJ0bGV0aWVzLCBsZWF2aW5nIHRob3NlIGZvciB3aXNlciBtZW4gdG8gZXhwbGFpbi4gIFlvdSB3b3VsZCBkaXN0cnVzdAo8L3RyYW5zbGF0aW9uPg=="
translation['101.101d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDFkIiB1bml0PSJzZWN0aW9uIiAvPnlvdXIgaW5leHBlcmllbmNlIGFuZCB3b3VsZCBiZSBhZnJhaWQsIGFzIHRoZSBzYXlpbmcgZ29lcywgb2YgeW91ciBvd24gc2hhZG93OyAgc28geW91IHdvdWxkIGNsaW5nIHRvIHRoYXQgc2FmZSBwcmluY2lwbGUgb2Ygb3VycyBhbmQgd291bGQgcmVwbHkgYXMgSSBoYXZlIHNhaWQuICBBbmQgaWYgYW55b25lIGF0dGFja2VkIHRoZSBwcmluY2lwbGUsIHlvdSB3b3VsZCBwYXkgaGltIG5vIGF0dGVudGlvbiBhbmQgeW91IHdvdWxkIG5vdCByZXBseSB0byBoaW0gdW50aWwgeW91IGhhZCBleGFtaW5lZCB0aGUgY29uc2VxdWVuY2VzIHRvIHNlZSB3aGV0aGVyIHRoZXkgYWdyZWVkIHdpdGggb25lIGFub3RoZXIgb3Igbm90OyAgYW5kIHdoZW4geW91IGhhZCB0byBnaXZlIGFuIGV4cGxhbmF0aW9uIG9mIHRoZSBwcmluY2lwbGUsIHlvdSB3b3VsZCBnaXZlIGl0IGluIHRoZSBzYW1lIHdheSBieSBhc3N1bWluZyBzb21lIG90aGVyIHByaW5jaXBsZSB3aGljaCBzZWVtZWQgdG8geW91IHRoZSBiZXN0IG9mIHRoZSBoaWdoZXIgb25lcywgYW5kIHNvIG9uIHVudGlsCjwvdHJhbnNsYXRpb24+"
translation['101.101e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDFlIiB1bml0PSJzZWN0aW9uIiAvPnlvdSByZWFjaGVkIG9uZSB3aGljaCB3YXMgYWRlcXVhdGUuICBZb3Ugd291bGQgbm90IG1peCB0aGluZ3MgdXAsIGFzIGRpc3B1dGFudHMgZG8sIGluIHRhbGtpbmcgYWJvdXQgdGhlIGJlZ2lubmluZyBhbmQgaXRzIGNvbnNlcXVlbmNlcywgaWYgeW91IHdpc2hlZCB0byBkaXNjb3ZlciBhbnkgb2YgdGhlIHJlYWxpdGllczsgIGZvciBwZXJoYXBzIG5vdCBvbmUgb2YgdGhlbSB0aGlua3Mgb3IgY2FyZXMgaW4gdGhlIGxlYXN0IGFib3V0IHRoZXNlIHRoaW5ncy4gIFRoZXkgYXJlIHNvIGNsZXZlciB0aGF0IHRoZXkgc3VjY2VlZCBpbiBiZWluZyB3ZWxsIHBsZWFzZWQgd2l0aCB0aGVtc2VsdmVzIGV2ZW4gd2hlbiB0aGV5IG1peCBldmVyeXRoaW5nIHVwOwo8L3RyYW5zbGF0aW9uPg=="
translation['102.102a'] = ""
translation['102.102b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDJiIiB1bml0PSJzZWN0aW9uIiAvPmVhY2ggb2YgdGhlIGFic3RyYWN0IHF1YWxpdGllcyBleGlzdHMgYW5kIHRoYXQgb3RoZXIgdGhpbmdzIHdoaWNoIHBhcnRpY2lwYXRlIGluIHRoZXNlIGdldCB0aGVpciBuYW1lcyBmcm9tIHRoZW0sIHRoZW4gU29jcmF0ZXMgYXNrZWQ6ICDigJxOb3cgaWYgeW91IGFzc2VudCB0byB0aGlzLCBkbyB5b3Ugbm90LCB3aGVuIHlvdSBzYXkgdGhhdCBTaW1taWFzIGlzIGdyZWF0ZXIgdGhhbiBTb2NyYXRlcyBhbmQgc21hbGxlciB0aGFuIFBoYWVkbywgc2F5IHRoYXQgdGhlcmUgaXMgaW4gU2ltbWlhcyBncmVhdG5lc3MgYW5kIHNtYWxsbmVzcz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQs4oCdIHNhaWQgU29jcmF0ZXMsIOKAnHlvdSBhZ3JlZSB0aGF0IHRoZSBzdGF0ZW1lbnQgdGhhdCBTaW1taWFzIGlzIGdyZWF0ZXIgdGhhbiBTb2NyYXRlcyBpcyBub3QgdHJ1ZSBhcyBzdGF0ZWQgaW4gdGhvc2Ugd29yZHMuICBGb3IgU2ltbWlhcyBpcyBub3QgZ3JlYXRlciB0aGFuIFNvY3JhdGVzCjwvdHJhbnNsYXRpb24+"
translation['102.102c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDJjIiB1bml0PSJzZWN0aW9uIiAvPmJ5IHJlYXNvbiBvZiBiZWluZyBTaW1taWFzLCBidXQgYnkgcmVhc29uIG9mIHRoZSBncmVhdG5lc3MgaGUgaGFwcGVucyB0byBoYXZlOyAgbm9yIGlzIGhlIGdyZWF0ZXIgdGhhbiBTb2NyYXRlcyBiZWNhdXNlIFNvY3JhdGVzIGlzIFNvY3JhdGVzLCBidXQgYmVjYXVzZSBTb2NyYXRlcyBoYXMgc21hbGxuZXNzIHJlbGF0aXZlbHkgdG8gaGlzIGdyZWF0bmVzcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVHJ1ZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIGFnYWluLCBoZSBpcyBub3Qgc21hbGxlciB0aGFuIFBoYWVkbyBiZWNhdXNlIFBoYWVkbyBpcyBQaGFlZG8sIGJ1dCBiZWNhdXNlIFBoYWVkbyBoYXMgZ3JlYXRuZXNzIHJlbGF0aXZlbHkgdG8gU2ltbWlhcydzIHNtYWxsbmVzcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhhdCBpcyB0cnVlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIFNpbW1pYXMgaXMgY2FsbGVkIHNtYWxsIGFuZCBncmVhdCwgd2hlbiBoZSBpcyBiZXR3ZWVuIHRoZSB0d28sCjwvdHJhbnNsYXRpb24+"
translation['102.102d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDJkIiB1bml0PSJzZWN0aW9uIiAvPnN1cnBhc3NpbmcgdGhlIHNtYWxsbmVzcyBvZiB0aGUgb25lIGJ5IGV4Y2VlZGluZyBoaW0gaW4gaGVpZ2h0LCBhbmQgZ3JhbnRpbmcgdG8gdGhlIG90aGVyIHRoZSBncmVhdG5lc3MgdGhhdCBleGNlZWRzIGhpcyBvd24gc21hbGxuZXNzLuKAnSAgQW5kIGhlIGxhdWdoZWQgYW5kIHNhaWQsIOKAnEkgc2VlbSB0byBoZSBzcGVha2luZyBsaWtlIGEgbGVnYWwgZG9jdW1lbnQsIGJ1dCBpdCByZWFsbHkgaXMgdmVyeSBtdWNoIGFzIEkgc2F5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TaW1taWFzIGFncmVlZC48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcSSBhbSBzcGVha2luZyBzbyBiZWNhdXNlIEkgd2FudCB5b3UgdG8gYWdyZWUgd2l0aCBtZS4gIEkgdGhpbmsgaXQgaXMgZXZpZGVudCBub3Qgb25seSB0aGF0IGdyZWF0bmVzcyBpdHNlbGYgd2lsbCBuZXZlciBiZSBncmVhdCBhbmQgYWxzbyBzbWFsbCwgYnV0IHRoYXQgdGhlIGdyZWF0bmVzcyBpbiB1cyB3aWxsIG5ldmVyIGFkbWl0IHRoZSBzbWFsbCBvciBhbGxvdyBpdHNlbGYgdG8gYmUgZXhjZWVkZWQuICBPbmUgb2YgdHdvIHRoaW5ncyBtdXN0IHRha2UgcGxhY2U6ICBlaXRoZXIgaXQgZmxlZXMgb3Igd2l0aGRyYXdzIHdoZW4KPC90cmFuc2xhdGlvbj4="
translation['102.102e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDJlIiB1bml0PSJzZWN0aW9uIiAvPml0cyBvcHBvc2l0ZSwgc21hbGxuZXNzLCBhZHZhbmNlcyB0b3dhcmQgaXQsIG9yIGl0IGhhcyBhbHJlYWR5IGNlYXNlZCB0byBleGlzdCBieSB0aGUgdGltZSBzbWFsbG5lc3MgY29tZXMgbmVhciBpdC4gIEJ1dCBpdCB3aWxsIG5vdCByZWNlaXZlIGFuZCBhZG1pdCBzbWFsbG5lc3MsIHRoZXJlYnkgYmVjb21pbmcgb3RoZXIgdGhhbiBpdCB3YXMuICBTbyBJIGhhdmUgcmVjZWl2ZWQgYW5kIGFkbWl0dGVkIHNtYWxsbmVzcyBhbmQgYW0gc3RpbGwgdGhlIHNhbWUgc21hbGwgcGVyc29uIEkgd2FzOyAgYnV0IHRoZSBncmVhdG5lc3MgaW4gbWUsIGJlaW5nIGdyZWF0LCBoYXMgbm90IHN1ZmZlcmVkIGl0c2VsZiB0byBiZWNvbWUgc21hbGwuICBJbiB0aGUgc2FtZSB3YXkgdGhlIHNtYWxsbmVzcyBpbiB1cyB3aWxsIG5ldmVyIGJlY29tZSBvciBiZSBncmVhdCwgbm9yIHdpbGwgYW55IG90aGVyIG9wcG9zaXRlIHdoaWNoIGlzIHN0aWxsIHdoYXQgaXQgd2FzLCBldmVyIGJlY29tZSBvciBiZSBhbHNvIGl0cyBvd24gb3Bwb3NpdGUuCjwvdHJhbnNsYXRpb24+"
translation['103.103a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDMiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwM2EiIHVuaXQ9InNlY3Rpb24iIC8+SXQgZWl0aGVyIGdvZXMgYXdheSBvciBsb3NlcyBpdHMgZXhpc3RlbmNlIGluIHRoZSBjaGFuZ2Uu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoYXQs4oCdIHNhaWQgQ2ViZXMsIOKAnHNlZW1zIHRvIG1lIHF1aXRlIGV2aWRlbnQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZW4gb25lIG9mIHRob3NlIHByZXNlbnTigJRJIGRvbid0IGp1c3QgcmVtZW1iZXIgd2hvIGl0IHdhc+KAlHNhaWQ6ICDigJxJbiBIZWF2ZW4ncyBuYW1lLCBpcyBub3QgdGhpcyBwcmVzZW50IGRvY3RyaW5lIHRoZSBleGFjdCBvcHBvc2l0ZSBvZiB3aGF0IHdhcyBmaXR0ZWQgaW4gb3VyIGVhcmxpZXIgZGlzY3Vzc2lvbiwgdGhhdCB0aGUgZ3JlYXRlciBpcyBnZW5lcmF0ZWQgZnJvbSB0aGUgbGVzcyBhbmQgdGhlIGxlc3MgZnJvbSB0aGUgZ3JlYXRlciBhbmQgdGhhdCBvcHBvc2l0ZXMgYXJlIGFsd2F5cyBnZW5lcmF0ZWQgZnJvbSB0aGVpciBvcHBvc2l0ZXM/ICBCdXQgbm93IGl0IHNlZW1zIHRvIG1lIHdlIGFyZSBzYXlpbmcsIHRoaXMgY2FuIG5ldmVyIGhhcHBlbi7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+U29jcmF0ZXMgY29ja2VkIGhpcyBoZWFkIG9uIG9uZSBzaWRlIGFuZCBsaXN0ZW5lZC4KPC90cmFuc2xhdGlvbj4="
translation['103.103b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDNiIiB1bml0PSJzZWN0aW9uIiAvPuKAnFlvdSBoYXZlIHNwb2tlbiB1cCBsaWtlIGEgbWFuLOKAnSBoZSBzYWlkLCDigJxidXQgeW91IGRvIG5vdCBvYnNlcnZlIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHByZXNlbnQgZG9jdHJpbmUgYW5kIHdoYXQgd2Ugc2FpZCBiZWZvcmUuICBXZSBzYWlkIGJlZm9yZSB0aGF0IGluIHRoZSBjYXNlIG9mIGNvbmNyZXRlIHRoaW5ncyBvcHBvc2l0ZXMgYXJlIGdlbmVyYXRlZCBmcm9tIG9wcG9zaXRlczsgIHdoZXJlYXMgbm93IHdlIHNheSB0aGF0IHRoZSBhYnN0cmFjdCBjb25jZXB0IG9mIGFuIG9wcG9zaXRlIGNhbiBuZXZlciBiZWNvbWUgaXRzIG93biBvcHBvc2l0ZSwgZWl0aGVyIGluIHVzIG9yIGluIHRoZSB3b3JsZCBhYm91dCB1cy4gIFRoZW4gd2Ugd2VyZSB0YWxraW5nIGFib3V0IHRoaW5ncyB3aGljaCBwb3NzZXNzIG9wcG9zaXRlIHF1YWxpdGllcyBhbmQgYXJlIGNhbGxlZCBhZnRlciB0aGVtLCBidXQgbm93IGFib3V0IHRob3NlIHZlcnkgb3Bwb3NpdGVzIHRoZSBpbW1hbmVuY2Ugb2Ygd2hpY2ggZ2l2ZXMgdGhlIHRoaW5ncyB0aGVpciBuYW1lcy4gIFdlIHNheSB0aGF0IHRoZXNlIGxhdHRlcgo8L3RyYW5zbGF0aW9uPg=="
translation['103.103c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDNjIiB1bml0PSJzZWN0aW9uIiAvPmNhbiBuZXZlciBiZSBnZW5lcmF0ZWQgZnJvbSBlYWNoIG90aGVyLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BdCB0aGUgc2FtZSB0aW1lIGhlIGxvb2tlZCBhdCBDZWJlcyBhbmQgc2FpZDogIOKAnEFuZCB5b3XigJRhcmUgeW91IHRyb3VibGVkIGJ5IGFueSBvZiBvdXIgZnJpZW5kcycgb2JqZWN0aW9ucz/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm8s4oCdIHNhaWQgQ2ViZXMsIOKAnG5vdCB0aGlzIHRpbWU7ICB0aG91Z2ggSSBjb25mZXNzIHRoYXQgb2JqZWN0aW9ucyBvZnRlbiBkbyB0cm91YmxlIG1lLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLCB3ZSBhcmUgcXVpdGUgYWdyZWVkLOKAnSBzYWlkIFNvY3JhdGVzLCDigJx1cG9uIHRoaXMsIHRoYXQgYW4gb3Bwb3NpdGUgY2FuIG5ldmVyIGJlIGl0cyBvd24gb3Bwb3NpdGUu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEVudGlyZWx5IGFncmVlZCzigJ0gc2FpZCBDZWJlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93LOKAnSBzYWlkIGhlLCDigJxzZWUgaWYgeW91IGFncmVlIHdpdGggbWUgaW4gd2hhdCBmb2xsb3dzOiAgSXMgdGhlcmUgc29tZXRoaW5nIHRoYXQgeW91IGNhbGwgaGVhdCBhbmQgc29tZXRoaW5nIHlvdSBjYWxsIGNvbGQ/4oCdIDxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFyZSB0aGV5IHRoZSBzYW1lIGFzIHNub3cgYW5kIGZpcmU/4oCdCjwvdHJhbnNsYXRpb24+"
translation['103.103d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDNkIiB1bml0PSJzZWN0aW9uIiAvPuKAnE5vLCBub3QgYXQgYWxsLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQgaGVhdCBpcyBhIGRpZmZlcmVudCB0aGluZyBmcm9tIGZpcmUgYW5kIGNvbGQgZGlmZmVycyBmcm9tIHNub3c/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFllcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWV0IEkgZmFuY3kgeW91IGJlbGlldmUgdGhhdCBzbm93LCBpZiAodG8gZW1wbG95IHRoZSBmb3JtIG9mIHBocmFzZSB3ZSB1c2VkIGJlZm9yZSkgaXQgYWRtaXRzIGhlYXQsIHdpbGwgbm8gbG9uZ2VyIGJlIHdoYXQgaXQgd2FzLCBuYW1lbHkgc25vdywgYW5kIGFsc28gd2FybSwgYnV0IHdpbGwgZWl0aGVyIHdpdGhkcmF3IHdoZW4gaGVhdCBhcHByb2FjaGVzIGl0IG9yIHdpbGwgY2Vhc2UgdG8gZXhpc3Qu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHNpbWlsYXJseSBmaXJlLCB3aGVuIGNvbGQgYXBwcm9hY2hlcyBpdCwgd2lsbCBlaXRoZXIgd2l0aGRyYXcgb3IgcGVyaXNoLiAgSXQgd2lsbCBuZXZlciBzdWNjZWVkIGluIGFkbWl0dGluZyBjb2xkIGFuZCBiZWluZyBzdGlsbCBmaXJlLAo8L3RyYW5zbGF0aW9uPg=="
translation['103.103e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDNlIiB1bml0PSJzZWN0aW9uIiAvPmFzIGl0IHdhcyBiZWZvcmUsIGFuZCBhbHNvIGNvbGQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoYXQgaXMgdHJ1ZSzigJ0gc2FpZCBoZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlIGZhY3QgaXMs4oCdIHNhaWQgaGUsIOKAnGluIHNvbWUgc3VjaCBjYXNlcywgdGhhdCBub3Qgb25seSB0aGUgYWJzdHJhY3QgaWRlYSBpdHNlbGYgaGFzIGEgcmlnaHQgdG8gdGhlIHNhbWUgbmFtZSB0aHJvdWdoIGFsbCB0aW1lLCBidXQgYWxzbyBzb21ldGhpbmcgZWxzZSwgd2hpY2ggaXMgbm90IHRoZSBpZGVhLCBidXQgd2hpY2ggYWx3YXlzLCB3aGVuZXZlciBpdCBleGlzdHMsIGhhcyB0aGUgZm9ybSBvZiB0aGUgaWRlYS4gIEJ1dCBwZXJoYXBzIEkgY2FuIG1ha2UgbXkgbWVhbmluZyBjbGVhcmVyIGJ5IHNvbWUgZXhhbXBsZXMuICBJbiBudW1iZXJzLCB0aGUgb2RkIG11c3QgYWx3YXlzIGhhdmUgdGhlIG5hbWUgb2Ygb2RkLCBtdXN0IGl0IG5vdD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQgaXMgdGhpcyB0aGUgb25seSB0aGluZyBzbyBjYWxsZWQgKGZvciB0aGlzIGlzIHdoYXQgSSBtZWFuIHRvIGFzayksIG9yIGlzIHRoZXJlIHNvbWV0aGluZyBlbHNlLCB3aGljaCBpcyBub3QKPC90cmFuc2xhdGlvbj4="
translation['104.104a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDQiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwNGEiIHVuaXQ9InNlY3Rpb24iIC8+aWRlbnRpY2FsIHdpdGggdGhlIG9kZCBidXQgbmV2ZXJ0aGVsZXNzIGhhcyBhIHJpZ2h0IHRvIHRoZSBuYW1lIG9mIG9kZCBpbiBhZGRpdGlvbiB0byBpdHMgb3duIG5hbWUsIGJlY2F1c2UgaXQgaXMgb2Ygc3VjaCBhIG5hdHVyZSB0aGF0IGl0IGlzIG5ldmVyIHNlcGFyYXRlZCBmcm9tIHRoZSBvZGQ/ICBJIG1lYW4sIGZvciBpbnN0YW5jZSwgdGhlIG51bWJlciB0aHJlZSwgYW5kIHRoZXJlIGFyZSBtYW55IG90aGVyIGV4YW1wbGVzLiAgVGFrZSB0aGUgY2FzZSBvZiB0aHJlZTsgIGRvIHlvdSBub3QgdGhpbmsgaXQgbWF5IGFsd2F5cyBiZSBjYWxsZWQgYnkgaXRzIG93biBuYW1lIGFuZCBhbHNvIGJlIGNhbGxlZCBvZGQsIHdoaWNoIGlzIG5vdCB0aGUgc2FtZSBhcyB0aHJlZT8gIFlldCB0aGUgbnVtYmVyIHRocmVlIGFuZCB0aGUgbnVtYmVyIGZpdmUgYW5kIGhhbGYgb2YgbnVtYmVycyBpbiBnZW5lcmFsIGFyZSBzbyBjb25zdGl0dXRlZCwgdGhhdCBlYWNoIG9mIHRoZW0gaXMgb2RkCjwvdHJhbnNsYXRpb24+"
translation['104.104b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDRiIiB1bml0PSJzZWN0aW9uIiAvPnRob3VnaCBub3QgaWRlbnRpZmllZCB3aXRoIHRoZSBpZGVhIG9mIG9kZC4gIEFuZCBpbiB0aGUgc2FtZSB3YXkgdHdvIGFuZCBmb3VyIGFuZCBhbGwgdGhlIG90aGVyIHNlcmllcyBvZiBudW1iZXJzIGFyZSBldmVuLCBlYWNoIG9mIHRoZW0sIHRob3VnaCBub3QgaWRlbnRpY2FsIHdpdGggZXZlbm5lc3MuICBEbyB5b3UgYWdyZWUsIG9yIG5vdD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcT2YgY291cnNlLOKAnSBoZSByZXBsaWVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgc2VlIHdoYXQgSSB3YW50IHRvIG1ha2UgcGxhaW4uICBUaGlzIGlzIG15IHBvaW50LCB0aGF0IG5vdCBvbmx5IGFic3RyYWN0IG9wcG9zaXRlcyBleGNsdWRlIGVhY2ggb3RoZXIsIGJ1dCBhbGwgdGhpbmdzIHdoaWNoLCBhbHRob3VnaCBub3Qgb3Bwb3NpdGVzIG9uZSB0byBhbm90aGVyLCBhbHdheXMgY29udGFpbiBvcHBvc2l0ZXM7ICB0aGVzZSBhbHNvLCB3ZSBmaW5kLCBleGNsdWRlIHRoZSBpZGVhIHdoaWNoIGlzIG9wcG9zZWQgdG8gdGhlIGlkZWEgY29udGFpbmVkIGluIHRoZW0sCjwvdHJhbnNsYXRpb24+"
translation['104.104c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDRjIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB3aGVuIGl0IGFwcHJvYWNoZXMgdGhleSBlaXRoZXIgcGVyaXNoIG9yIHdpdGhkcmF3LiAgV2UgbXVzdCBjZXJ0YWlubHkgYWdyZWUgdGhhdCB0aGUgbnVtYmVyIHRocmVlIHdpbGwgZW5kdXJlIGRlc3RydWN0aW9uIG9yIGFueXRoaW5nIGVsc2UgcmF0aGVyIHRoYW4gc3VibWl0IHRvIGJlY29taW5nIGV2ZW4sIHdoaWxlIHN0aWxsIHJlbWFpbmluZyB0aHJlZSwgbXVzdCB3ZSBub3Q/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seSzigJ0gc2FpZCBDZWJlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQnV0IHRoZSBudW1iZXIgdHdvIGlzIG5vdCB0aGUgb3Bwb3NpdGUgb2YgdGhlIG51bWJlciB0aHJlZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm8u4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4gbm90IG9ubHkgb3Bwb3NpdGUgaWRlYXMgcmVmdXNlIHRvIGFkbWl0IGVhY2ggb3RoZXIgd2hlbiB0aGV5IGNvbWUgbmVhciwgYnV0IGNlcnRhaW4gb3RoZXIgdGhpbmdzIHJlZnVzZSB0byBhZG1pdCB0aGUgYXBwcm9hY2ggb2Ygb3Bwb3NpdGVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxWZXJ5IHRydWUs4oCdIGhlIHNhaWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFNoYWxsIHdlIHRoZW4s4oCdIHNhaWQgU29jcmF0ZXMsIOKAnGRldGVybWluZSBpZiB3ZSBjYW4sIHdoYXQgdGhlc2UgYXJlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxDZXJ0YWlubHku4oCdCjwvdHJhbnNsYXRpb24+"
translation['104.104d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDRkIiB1bml0PSJzZWN0aW9uIiAvPuKAnFRoZW4sIENlYmVzLCB3aWxsIHRoZXkgYmUgdGhvc2Ugd2hpY2ggYWx3YXlzIGNvbXBlbCBhbnl0aGluZyBvZiB3aGljaCB0aGV5IHRha2UgcG9zc2Vzc2lvbiBub3Qgb25seSB0byB0YWtlIHRoZWlyIGZvcm0gYnV0IGFsc28gdGhhdCBvZiBzb21lIG9wcG9zaXRlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXaGF0IGRvIHlvdSBtZWFuP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxTdWNoIHRoaW5ncyBhcyB3ZSB3ZXJlIHNwZWFraW5nIG9mIGp1c3Qgbm93LiAgWW91IGtub3cgb2YgY291cnNlIHRoYXQgdGhvc2UgdGhpbmdzIGluIHdoaWNoIHRoZSBudW1iZXIgdGhyZWUgaXMgYW4gZXNzZW50aWFsIGVsZW1lbnQgbXVzdCBiZSBub3Qgb25seSB0aHJlZSBidXQgYWxzbyBvZGQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm93IHN1Y2ggYSB0aGluZyBjYW4gbmV2ZXIgYWRtaXQgdGhlIGlkZWEgd2hpY2ggaXMgdGhlIG9wcG9zaXRlIG9mIHRoZSBjb25jZXB0IHdoaWNoIHByb2R1Y2VzIHRoaXMgcmVzdWx0LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxObywgaXQgY2Fubm90LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQgdGhlIHJlc3VsdCB3YXMgcHJvZHVjZWQgYnkgdGhlIGNvbmNlcHQgb2YgdGhlIG9kZD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcWWVzLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxBbmQgdGhlIG9wcG9zaXRlIG9mIHRoaXMgaXMgdGhlIGlkZWEKPC90cmFuc2xhdGlvbj4="
translation['104.104e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDRlIiB1bml0PSJzZWN0aW9uIiAvPm9mIHRoZSBldmVuP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4gdGhlIGlkZWEgb2YgdGhlIGV2ZW4gd2lsbCBuZXZlciBiZSBhZG1pdHRlZCBieSB0aGUgbnVtYmVyIHRocmVlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOby7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiB0aHJlZSBoYXMgbm8gcGFydCBpbiB0aGUgZXZlbi7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm8sIGl0IGhhcyBub25lLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIHRoZSBudW1iZXIgdGhyZWUgaXMgdW5ldmVuLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vdyBJIHByb3Bvc2UgdG8gZGV0ZXJtaW5lIHdoYXQgdGhpbmdzLCB3aXRob3V0IGJlaW5nIHRoZSBvcHBvc2l0ZXMgb2Ygc29tZXRoaW5nLCBuZXZlcnRoZWxlc3MgcmVmdXNlIHRvIGFkbWl0IGl0LCBhcyB0aGUgbnVtYmVyIHRocmVlLCB0aG91Z2ggaXQgaXMgbm90IHRoZSBvcHBvc2l0ZSBvZiB0aGUgaWRlYSBvZiBldmVuLCBuZXZlcnRoZWxlc3MgcmVmdXNlcyB0byBhZG1pdCBpdCwgYnV0IGFsd2F5cyBicmluZ3MgZm9yd2FyZCBpdHMgb3Bwb3NpdGUgYWdhaW5zdCBpdCwgYW5kCjwvdHJhbnNsYXRpb24+"
translation['105.105a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDUiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwNWEiIHVuaXQ9InNlY3Rpb24iIC8+YXMgdGhlIG51bWJlciB0d28gYnJpbmdzIGZvcndhcmQgdGhlIG9wcG9zaXRlIG9mIHRoZSBvZGQgYW5kIGZpcmUgdGhhdCBvZiBjb2xkLCBhbmQgc28gZm9ydGgsIGZvciB0aGVyZSBhcmUgcGxlbnR5IG9mIGV4YW1wbGVzLiAgTm93IHNlZSBpZiB5b3UgYWNjZXB0IHRoaXMgc3RhdGVtZW50OiAgbm90IG9ubHkgd2lsbCBvcHBvc2l0ZXMgbm90IGFkbWl0IHRoZWlyIG9wcG9zaXRlcywgYnV0IG5vdGhpbmcgd2hpY2ggYnJpbmdzIGFuIG9wcG9zaXRlIHRvIHRoYXQgd2hpY2ggaXQgYXBwcm9hY2hlcyB3aWxsIGV2ZXIgYWRtaXQgaW4gaXRzZWxmIHRoZSBvcHBvc2l0ZW5lc3Mgb2YgdGhhdCB3aGljaCBpcyBicm91Z2h0LiAgTm93IGxldCBtZSByZWZyZXNoIHlvdXIgbWVtb3J5OyAgZm9yIHRoZXJlIGlzIG5vIGhhcm0gaW4gcmVwZXRpdGlvbi4gIFRoZSBudW1iZXIgZml2ZSB3aWxsIG5vdCBhZG1pdCB0aGUgaWRlYSBvZiB0aGUgZXZlbiwgbm9yIHdpbGwgdGVuLCB0aGUgZG91YmxlIG9mIGZpdmUsIGFkbWl0IHRoZSBpZGVhIG9mIHRoZSBvZGQuICBOb3cgdGVuIGlzIG5vdCBpdHNlbGYgYW4gb3Bwb3NpdGUsIGFuZCB5ZXQgaXQgd2lsbCBub3QgYWRtaXQgdGhlIGlkZWEgb2YgdGhlIG9kZDsKPC90cmFuc2xhdGlvbj4="
translation['105.105b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDViIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBzbyBvbmUtYW5kLWEtaGFsZiBhbmQgb3RoZXIgbWl4ZWQgZnJhY3Rpb25zIGFuZCBvbmUtdGhpcmQgYW5kIG90aGVyIHNpbXBsZSBmcmFjdGlvbnMgcmVqZWN0IHRoZSBpZGVhIG9mIHRoZSB3aG9sZS4gIERvIHlvdSBnbyB3aXRoIG1lIGFuZCBhZ3JlZSB0byB0aGlzP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMsIEkgYWdyZWUgZW50aXJlbHks4oCdIGhlIHNhaWQsIOKAnGFuZCBhbSB3aXRoIHlvdS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbizigJ0gc2FpZCBTb2NyYXRlcywg4oCccGxlYXNlIGJlZ2luIGFnYWluIGF0IHRoZSBiZWdpbm5pbmcuICBBbmQgZG8gbm90IGFuc3dlciBteSBxdWVzdGlvbnMgaW4gdGhlaXIgb3duIHdvcmRzLCBidXQgZG8gYXMgSSBkby4gIEkgZ2l2ZSBhbiBhbnN3ZXIgYmV5b25kIHRoYXQgc2FmZSBhbnN3ZXIgd2hpY2ggSSBzcG9rZSBvZiBhdCBmaXJzdCwgbm93IHRoYXQgSSBzZWUgYW5vdGhlciBzYWZlIHJlcGx5IGRlZHVjZWQgZnJvbSB3aGF0IGhhcyBqdXN0IGJlZW4gc2FpZC4gIElmIHlvdSBhc2sgbWUgd2hhdCBjYXVzZXMgYW55dGhpbmcgaW4gd2hpY2ggaXQgaXMgdG8gYmUgaG90LCBJIHdpbGwgbm90IGdpdmUKPC90cmFuc2xhdGlvbj4="
translation['105.105c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDVjIiB1bml0PSJzZWN0aW9uIiAvPnlvdSB0aGF0IHNhZmUgYnV0IHN0dXBpZCBhbnN3ZXIgYW5kIHNheSB0aGF0IGl0IGlzIGhlYXQsIGJ1dCBJIGNhbiBub3cgZ2l2ZSBhIG1vcmUgcmVmaW5lZCBhbnN3ZXIsIHRoYXQgaXQgaXMgZmlyZTsgIGFuZCBpZiB5b3UgYXNrLCB3aGF0IGNhdXNlcyB0aGUgYm9keSBpbiB3aGljaCBpdCBpcyB0byBiZSBpbGwsIEkgc2hhbGwgbm90IHNheSBpbGxuZXNzLCBidXQgZmV2ZXI7ICBhbmQgaWYgeW91IGFzayB3aGF0IGNhdXNlcyBhIG51bWJlciBpbiB3aGljaCBpdCBpcyB0byBiZSBvZGQsIEkgc2hhbGwgbm90IHNheSBvZGRuZXNzLCBidXQgdGhlIG51bWJlciBvbmUsIGFuZCBzbyBmb3J0aC4gIERvIHlvdSB1bmRlcnN0YW5kIHN1ZmZpY2llbnRseSB3aGF0IEkgbWVhbj/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcUXVpdGUgc3VmZmljaWVudGx5LOKAnSBoZSByZXBsaWVkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgYW5zd2VyLOKAnSBzYWlkIGhlLiAg4oCcV2hhdCBjYXVzZXMgdGhlIGJvZHkgaW4gd2hpY2ggaXQgaXMgdG8gYmUgYWxpdmU/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZSBzb3VsLOKAnSBoZSByZXBsaWVkLgo8L3RyYW5zbGF0aW9uPg=="
translation['105.105d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDVkIiB1bml0PSJzZWN0aW9uIiAvPuKAnElzIHRoaXMgYWx3YXlzIHRoZSBjYXNlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMs4oCdIHNhaWQgaGUsIOKAnG9mIGNvdXJzZS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiBpZiB0aGUgc291bCB0YWtlcyBwb3NzZXNzaW9uIG9mIGFueXRoaW5nIGl0IGFsd2F5cyBicmluZ3MgbGlmZSB0byBpdD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQ2VydGFpbmx5LOKAnSBoZSBzYWlkLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxJcyB0aGVyZSBhbnl0aGluZyB0aGF0IGlzIHRoZSBvcHBvc2l0ZSBvZiBsaWZlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMs4oCdIHNhaWQgaGUuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdoYXQ/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnERlYXRoLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOb3cgdGhlIHNvdWwsIGFzIHdlIGhhdmUgYWdyZWVkIGJlZm9yZSwgd2lsbCBuZXZlciBhZG1pdCB0aGUgb3Bwb3NpdGUgb2YgdGhhdCB3aGljaCBpdCBicmluZ3Mgd2l0aCBpdC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcRGVjaWRlZGx5IG5vdCzigJ0gc2FpZCBDZWJlcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiB3aGF0IGRvIHdlIG5vdyBjYWxsIHRoYXQgd2hpY2ggZG9lcyBub3QgYWRtaXQgdGhlIGlkZWEgb2YgdGhlIGV2ZW4/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFVuZXZlbizigJ0gc2FpZCBoZS48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHRob3NlIHdoaWNoIGRvIG5vdCBhZG1pdCBqdXN0aWNlIGFuZCBtdXNpYz/igJ0KPC90cmFuc2xhdGlvbj4="
translation['105.105e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDVlIiB1bml0PSJzZWN0aW9uIiAvPuKAnFVuanVzdCzigJ0gaGUgcmVwbGllZCwg4oCcYW5kIHVubXVzaWNhbC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCB0aGVuIHdoYXQgZG8gd2UgY2FsbCB0aGF0IHdoaWNoIGRvZXMgbm90IGFkbWl0IGRlYXRoP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxEZWF0aGxlc3Mgb3IgaW1tb3J0YWws4oCdIGhlIHNhaWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCB0aGUgc291bCBkb2VzIG5vdCBhZG1pdCBkZWF0aD/igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm8u4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFRoZW4gdGhlIHNvdWwgaXMgaW1tb3J0YWwu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFllcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVmVyeSB3ZWxsLOKAnSBzYWlkIGhlLiDigJxTaGFsbCB3ZSBzYXkgdGhlbiB0aGF0IHRoaXMgaXMgcHJvdmVkP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxZZXMsIGFuZCB2ZXJ5IHNhdGlzZmFjdG9yaWx5LCBTb2NyYXRlcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCB0aGVuLCBDZWJlcyzigJ0gc2FpZCBoZSwg4oCcaWYgdGhlIG9kZCB3ZXJlIG5lY2Vzc2FyaWx5IGltcGVyaXNoYWJsZSwKPC90cmFuc2xhdGlvbj4="
translation['106.106a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDYiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwNmEiIHVuaXQ9InNlY3Rpb24iIC8+d291bGQgbm90IHRoZSBudW1iZXIgdGhyZWUgYmUgaW1wZXJpc2hhYmxlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxPZiBjb3Vyc2Uu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFuZCBpZiB0aGF0IHdoaWNoIGlzIHdpdGhvdXQgaGVhdCB3ZXJlIGltcGVyaXNoYWJsZSwgd291bGQgbm90IHNub3cgZ28gYXdheSB3aG9sZSBhbmQgdW5tZWx0ZWQgd2hlbmV2ZXIgaGVhdCB3YXMgYnJvdWdodCBpbiBjb25mbGljdCB3aXRoIHNub3c/ICBGb3IgaXQgY291bGQgbm90IGhhdmUgYmVlbiBkZXN0cm95ZWQsIG5vciBjb3VsZCBpdCBoYXZlIHJlbWFpbmVkIGFuZCBhZG1pdHRlZCB0aGUgaGVhdC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhhdCBpcyB2ZXJ5IHRydWUs4oCdIGhlIHJlcGxpZWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEluIHRoZSBzYW1lIHdheSwgSSB0aGluaywgaWYgdGhhdCB3aGljaCBpcyB3aXRob3V0IGNvbGQgd2VyZSBpbXBlcmlzaGFibGUsIHdoZW5ldmVyIGFueXRoaW5nIGNvbGQgYXBwcm9hY2hlZCBmaXJlLCBpdCB3b3VsZCBuZXZlciBwZXJpc2ggb3IgYmUgcXVlbmNoZWQsIGJ1dCB3b3VsZCBnbyBhd2F5IHVuaGFybWVkLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOZWNlc3NhcmlseSzigJ0gaGUgc2FpZC4KPC90cmFuc2xhdGlvbj4="
translation['106.106b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDZiIiB1bml0PSJzZWN0aW9uIiAvPuKAnEFuZCBtdXN0IG5vdCB0aGUgc2FtZSBiZSBzYWlkIG9mIHRoYXQgd2hpY2ggaXMgaW1tb3J0YWw/ICBJZiB0aGUgaW1tb3J0YWwgaXMgYWxzbyBpbXBlcmlzaGFibGUsIGl0IGlzIGltcG9zc2libGUgZm9yIHRoZSBzb3VsIHRvIHBlcmlzaCB3aGVuIGRlYXRoIGNvbWVzIGFnYWluc3QgaXQuICBGb3IsIGFzIG91ciBhcmd1bWVudCBoYXMgc2hvd24sIGl0IHdpbGwgbm90IGFkbWl0IGRlYXRoIGFuZCB3aWxsIG5vdCBiZSBkZWFkLCBqdXN0IGFzIHRoZSBudW1iZXIgdGhyZWUsIHdlIHNhaWQsIHdpbGwgbm90IGJlIGV2ZW4sIGFuZCB0aGUgb2RkIHdpbGwgbm90IGJlIGV2ZW4sIGFuZCBhcyBmaXJlLCBhbmQgdGhlIGhlYXQgaW4gdGhlIGZpcmUsIHdpbGwgbm90IGJlIGNvbGQuICBCdXQsIG9uZSBtaWdodCBzYXksIHdoeSBpcyBpdCBub3QgcG9zc2libGUgdGhhdCB0aGUgb2RkIGRvZXMgbm90IGJlY29tZSBldmVuIHdoZW4gdGhlIGV2ZW4gY29tZXMgYWdhaW5zdCBpdCAod2UgYWdyZWVkIHRvIHRoYXQpLCBidXQgcGVyaXNoZXMsCjwvdHJhbnNsYXRpb24+"
translation['106.106c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDZjIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB0aGUgZXZlbiB0YWtlcyBpdHMgcGxhY2U/ICBOb3cgd2UgY2Fubm90IHNpbGVuY2UgaGltIHdobyByYWlzZXMgdGhpcyBxdWVzdGlvbiBieSBzYXlpbmcgdGhhdCBpdCBkb2VzIG5vdCBwZXJpc2gsIGZvciB0aGUgb2RkIGlzIG5vdCBpbXBlcmlzaGFibGUuICBJZiB0aGF0IHdlcmUgY29uY2VkZWQgdG8gdXMsIHdlIGNvdWxkIGVhc2lseSBzaWxlbmNlIGhpbSBieSBzYXlpbmcgdGhhdCB3aGVuIHRoZSBldmVuIGFwcHJvYWNoZXMsIHRoZSBvZGQgYW5kIHRoZSBudW1iZXIgdGhyZWUgZ28gYXdheTsgIGFuZCB3ZSBjb3VsZCBtYWtlIHRoZSBjb3JyZXNwb25kaW5nIHJlcGx5IGFib3V0IGZpcmUgYW5kIGhlYXQgYW5kIHRoZSByZXN0LCBjb3VsZCB3ZSBub3Q/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnENlcnRhaW5seS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHNvLCB0b28sIGluIHRoZSBjYXNlIG9mIHRoZSBpbW1vcnRhbDsgIGlmIGl0IGlzIGNvbmNlZGVkIHRoYXQgdGhlIGltbW9ydGFsIGlzIGltcGVyaXNoYWJsZSwgdGhlIHNvdWwgd291bGQgYmUgaW1wZXJpc2hhYmxlIGFzIHdlbGwgYXMgaW1tb3J0YWwsCjwvdHJhbnNsYXRpb24+"
translation['106.106d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDZkIiB1bml0PSJzZWN0aW9uIiAvPmJ1dCBpZiBub3QsIGZ1cnRoZXIgYXJndW1lbnQgaXMgbmVlZGVkLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxCdXQs4oCdIGhlIHNhaWQsIOKAnGl0IGlzIG5vdCBuZWVkZWQsIHNvIGZhciBhcyB0aGF0IGlzIGNvbmNlcm5lZDsgIGZvciBzdXJlbHkgbm90aGluZyB3b3VsZCBlc2NhcGUgZGVzdHJ1Y3Rpb24sIGlmIHRoZSBpbW1vcnRhbCwgd2hpY2ggaXMgZXZlcmxhc3RpbmcsIGlzIHBlcmlzaGFibGUu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEFsbCwgSSB0aGluayzigJ0gc2FpZCBTb2NyYXRlcywg4oCcd291bGQgYWdyZWUgdGhhdCBHb2QgYW5kIHRoZSBQcmluY2lwbGUgb2YgbGlmZSwgYW5kIGFueXRoaW5nIGVsc2UgdGhhdCBpcyBpbW1vcnRhbCwgY2FuIG5ldmVyIHBlcmlzaC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQWxsIG1lbiB3b3VsZCwgY2VydGFpbmx5LOKAnSBzYWlkIGhlLCDigJxhbmQgc3RpbGwgbW9yZSwgSSBmYW5jeSwgdGhlIEdvZHMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFNpbmNlLCB0aGVuLCB0aGUgaW1tb3J0YWwKPC90cmFuc2xhdGlvbj4="
translation['106.106e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDZlIiB1bml0PSJzZWN0aW9uIiAvPmlzIGFsc28gaW5kZXN0cnVjdGlibGUsIHdvdWxkIG5vdCB0aGUgc291bCwgaWYgaXQgaXMgaW1tb3J0YWwsIGJlIGFsc28gaW1wZXJpc2hhYmxlP+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxOZWNlc3NhcmlseS4nJzxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGVuIHdoZW4gZGVhdGggY29tZXMgdG8gYSBtYW4sIGhpcyBtb3J0YWwgcGFydCwgaXQgc2VlbXMsIGRpZXMsIGJ1dCB0aGUgaW1tb3J0YWwgcGFydCBnb2VzIGF3YXkgdW5oYXJtZWQgYW5kIHVuZGVzdHJveWVkLCB3aXRoZHJhd2luZyBmcm9tIGRlYXRoLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxTbyBpdCBzZWVtcy7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcVGhlbiwgQ2ViZXMs4oCdIHNhaWQgaGUsIOKAnGl0IGlzIHBlcmZlY3RseSBjZXJ0YWluCjwvdHJhbnNsYXRpb24+"
translation['107.107a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDciIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwN2EiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCB0aGUgc291bCBpcyBpbW1vcnRhbCBhbmQgaW1wZXJpc2hhYmxlLCBhbmQgb3VyIHNvdWxzIHdpbGwgZXhpc3Qgc29tZXdoZXJlIGluIGFub3RoZXIgd29ybGQu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEks4oCdIHNhaWQgQ2ViZXMsIOKAnGhhdmUgbm90aGluZyBtb3JlIHRvIHNheSBhZ2FpbnN0IHRoYXQsIGFuZCBJIGNhbm5vdCBkb3VidCB5b3VyIGNvbmNsdXNpb25zLiAgQnV0IGlmIFNpbW1pYXMsIG9yIGFueW9uZSBlbHNlLCBoYXMgYW55dGhpbmcgdG8gc2F5LCBoZSB3b3VsZCBkbyB3ZWxsIHRvIHNwZWFrLCBmb3IgSSBkbyBub3Qga25vdyB0byB3aGF0IG90aGVyIHRpbWUgdGhhbiB0aGUgcHJlc2VudCBoZSBjb3VsZCBkZWZlciBzcGVha2luZywgaWYgaGUgd2lzaGVzIHRvIHNheSBvciBoZWFyIGFueXRoaW5nIGFib3V0IHRob3NlIG1hdHRlcnMu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEJ1dCzigJ0gc2FpZCBTaW1taWFzLCDigJxJIGRvbid0IHNlZSBob3cgSSBjYW4gZG91YnQsIGVpdGhlciwgYXMgdG8gdGhlIHJlc3VsdCBvZiB0aGUgZGlzY3Vzc2lvbjsgIGJ1dCB0aGUgc3ViamVjdCBpcyBzbyBncmVhdCwKPC90cmFuc2xhdGlvbj4="
translation['107.107b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDdiIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBJIGhhdmUgc3VjaCBhIHBvb3Igb3BpbmlvbiBvZiBodW1hbiB3ZWFrbmVzcywgdGhhdCBJIGNhbm5vdCBoZWxwIGhhdmluZyBzb21lIGRvdWJ0IGluIG15IG93biBtaW5kIGFib3V0IHdoYXQgaGFzIGJlZW4gc2FpZC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcTm90IG9ubHkgdGhhdCwgU2ltbWlhcyzigJ0gc2FpZCBTb2NyYXRlcywg4oCcYnV0IG91ciBmaXJzdCBhc3N1bXB0aW9ucyBvdWdodCB0byBiZSBtb3JlIGNhcmVmdWxseSBleGFtaW5lZCwgZXZlbiB0aG91Z2ggdGhleSBzZWVtIHRvIHlvdSB0byBiZSBjZXJ0YWluLiAgQW5kIGlmIHlvdSBhbmFseXplIHRoZW0gY29tcGxldGVseSwgeW91IHdpbGwsIEkgdGhpbmssIGZvbGxvdyBhbmQgYWdyZWUgd2l0aCB0aGUgYXJndW1lbnQsIHNvIGZhciBhcyBpdCBpcyBwb3NzaWJsZSBmb3IgbWFuIHRvIGRvIHNvLiAgQW5kIGlmIHRoaXMgaXMgbWFkZSBjbGVhciwgeW91IHdpbGwgc2VlayBubyBmYXJ0aGVyLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxUaGF0IGlzIHRydWUs4oCdIGhlIHNhaWQuPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEJ1dCBteSBmcmllbmRzLOKAnSBoZSBzYWlkLCDigJx3ZSBvdWdodCB0byBiZWFyIGluIG1pbmQsCjwvdHJhbnNsYXRpb24+"
translation['107.107c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDdjIiB1bml0PSJzZWN0aW9uIiAvPnRoYXQsIGlmIHRoZSBzb3VsIGlzIGltbW9ydGFsLCB3ZSBtdXN0IGNhcmUgZm9yIGl0LCBub3Qgb25seSBpbiByZXNwZWN0IHRvIHRoaXMgdGltZSwgd2hpY2ggd2UgY2FsbCBsaWZlLCBidXQgaW4gcmVzcGVjdCB0byBhbGwgdGltZSwgYW5kIGlmIHdlIG5lZ2xlY3QgaXQsIHRoZSBkYW5nZXIgbm93IGFwcGVhcnMgdG8gYmUgdGVycmlibGUuICBGb3IgaWYgZGVhdGggd2VyZSBhbiBlc2NhcGUgZnJvbSBldmVyeXRoaW5nLCBpdCB3b3VsZCBiZSBhIGJvb24gdG8gdGhlIHdpY2tlZCwgZm9yIHdoZW4gdGhleSBkaWUgdGhleSB3b3VsZCBiZSBmcmVlZCBmcm9tIHRoZSBib2R5IGFuZCBmcm9tIHRoZWlyIHdpY2tlZG5lc3MgdG9nZXRoZXIgd2l0aCB0aGVpciBzb3Vscy4gIEJ1dCBub3csIHNpbmNlIHRoZSBzb3VsIGlzIHNlZW4gdG8gYmUgaW1tb3J0YWwsIGl0IGNhbm5vdCBlc2NhcGUKPC90cmFuc2xhdGlvbj4="
translation['107.107d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDdkIiB1bml0PSJzZWN0aW9uIiAvPmZyb20gZXZpbCBvciBiZSBzYXZlZCBpbiBhbnkgb3RoZXIgd2F5IHRoYW4gYnkgYmVjb21pbmcgYXMgZ29vZCBhbmQgd2lzZSBhcyBwb3NzaWJsZS4gIEZvciB0aGUgc291bCB0YWtlcyB3aXRoIGl0IHRvIHRoZSBvdGhlciB3b3JsZCBub3RoaW5nIGJ1dCBpdHMgZWR1Y2F0aW9uIGFuZCBudXJ0dXJlLCBhbmQgdGhlc2UgYXJlIHNhaWQgdG8gYmVuZWZpdCBvciBpbmp1cmUgdGhlIGRlcGFydGVkIGdyZWF0bHkgZnJvbSB0aGUgdmVyeSBiZWdpbm5pbmcgb2YgaGlzIGpvdXJuZXkgdGhpdGhlci4gIEFuZCBzbyBpdCBpcyBzYWlkIHRoYXQgYWZ0ZXIgZGVhdGgsIHRoZSB0dXRlbGFyeSBnZW5pdXMgb2YgZWFjaCBwZXJzb24sIHRvIHdob20gaGUgaGFkIGJlZW4gYWxsb3R0ZWQgaW4gbGlmZSwgbGVhZHMgaGltIHRvIGEgcGxhY2Ugd2hlcmUgdGhlIGRlYWQgYXJlIGdhdGhlcmVkIHRvZ2V0aGVyOyAgdGhlbiB0aGV5IGFyZSBqdWRnZWQgYW5kIGRlcGFydCB0byB0aGUgb3RoZXIgd29ybGQKPC90cmFuc2xhdGlvbj4="
translation['107.107e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDdlIiB1bml0PSJzZWN0aW9uIiAvPndpdGggdGhlIGd1aWRlIHdob3NlIHRhc2sgaXQgaXMgdG8gY29uZHVjdCB0aGl0aGVyIHRob3NlIHdobyBjb21lIGZyb20gdGhpcyB3b3JsZDsgIGFuZCB3aGVuIHRoZXkgaGF2ZSB0aGVyZSByZWNlaXZlZCB0aGVpciBkdWUgYW5kIHJlbWFpbmVkIHRocm91Z2ggdGhlIHRpbWUgYXBwb2ludGVkLCBhbm90aGVyIGd1aWRlIGJyaW5ncyB0aGVtIGJhY2sgYWZ0ZXIgbWFueSBsb25nIHBlcmlvZHMgb2YgdGltZS4gIEFuZCB0aGUgam91cm5leSBpcyBub3QgYXMgVGVsZXBodXMgc2F5cyBpbiB0aGUgcGxheSBvZiBBZXNjaHlsdXM7CjwvdHJhbnNsYXRpb24+"
translation['108.108a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDgiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwOGEiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIGhlIHNheXMgYSBzaW1wbGUgcGF0aCBsZWFkcyB0byB0aGUgbG93ZXIgd29ybGQsIGJ1dCBJIHRoaW5rIHRoZSBwYXRoIGlzIG5laXRoZXIgc2ltcGxlIG5vciBzaW5nbGUsIGZvciBpZiBpdCB3ZXJlLCB0aGVyZSB3b3VsZCBiZSBubyBuZWVkIG9mIGd1aWRlcywgc2luY2Ugbm8gb25lIGNvdWxkIG1pc3MgdGhlIHdheSB0byBhbnkgcGxhY2UgaWYgdGhlcmUgd2VyZSBvbmx5IG9uZSByb2FkLiAgQnV0IHJlYWxseSB0aGVyZSBzZWVtIHRvIGJlIG1hbnkgZm9ya3Mgb2YgdGhlIHJvYWQgYW5kIG1hbnkgd2luZGluZ3M7ICB0aGlzIEkgaW5mZXIgZnJvbSB0aGUgcml0ZXMgYW5kIGNlcmVtb25pZXMgcHJhY3RpY2VkIGhlcmUgb24gZWFydGguICBOb3cgdGhlIG9yZGVybHkgYW5kIHdpc2Ugc291bCBmb2xsb3dzIGl0cyBndWlkZSBhbmQgdW5kZXJzdGFuZHMgaXRzIGNpcmN1bXN0YW5jZXM7ICBidXQgdGhlIHNvdWwgdGhhdCBpcyBkZXNpcm91cyBvZiB0aGUgYm9keSwgYXMgSSBzYWlkIGJlZm9yZSwgZmxpdHMgYWJvdXQgaXQsIGFuZCBpbiB0aGUgdmlzaWJsZSB3b3JsZCBmb3IgYSBsb25nIHRpbWUsCjwvdHJhbnNsYXRpb24+"
translation['108.108b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDhiIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBhZnRlciBtdWNoIHJlc2lzdGFuY2UgYW5kIG1hbnkgc3VmZmVyaW5ncyBpcyBsZWQgYXdheSB3aXRoIHZpb2xlbmNlIGFuZCB3aXRoIGRpZmZpY3VsdHkgYnkgaXRzIGFwcG9pbnRlZCBnZW5pdXMuICBBbmQgd2hlbiBpdCBhcnJpdmVzIGF0IHRoZSBwbGFjZSB3aGVyZSB0aGUgb3RoZXIgc291bHMgYXJlLCB0aGUgc291bCB3aGljaCBpcyBpbXB1cmUgYW5kIGhhcyBkb25lIHdyb25nLCBieSBjb21taXR0aW5nIHdpY2tlZCBtdXJkZXJzIG9yIG90aGVyIGRlZWRzIGFraW4gdG8gdGhvc2UgYW5kIHRoZSB3b3JrcyBvZiBraW5kcmVkIHNvdWxzLCBpcyBhdm9pZGVkIGFuZCBzaHVubmVkIGJ5IGFsbCwgYW5kIG5vIG9uZSBpcyB3aWxsaW5nIHRvIGJlIGl0cyBjb21wYW5pb24gb3IgaXRzIGd1aWRlLAo8L3RyYW5zbGF0aW9uPg=="
translation['108.108c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDhjIiB1bml0PSJzZWN0aW9uIiAvPmJ1dCBpdCB3YW5kZXJzIGFib3V0IGFsb25lIGluIHV0dGVyIGJld2lsZGVybWVudCwgZHVyaW5nIGNlcnRhaW4gZml4ZWQgdGltZXMsIGFmdGVyIHdoaWNoIGl0IGlzIGNhcnJpZWQgYnkgbmVjZXNzaXR5IHRvIGl0cyBmaXR0aW5nIGhhYml0YXRpb24uICBCdXQgdGhlIHNvdWwgdGhhdCBoYXMgcGFzc2VkIHRocm91Z2ggbGlmZSBpbiBwdXJpdHkgYW5kIHJpZ2h0ZW91c25lc3MsIGZpbmRzIGdvZHMgZm9yIGNvbXBhbmlvbnMgYW5kIGd1aWRlcywgYW5kIGdvZXMgdG8gZHdlbGwgaW4gaXRzIHByb3BlciBkd2VsbGluZy4gIE5vdyB0aGVyZSBhcmUgbWFueSB3b25kZXJmdWwgcmVnaW9ucyBvZiB0aGUgZWFydGgsIGFuZCB0aGUgZWFydGggaXRzZWxmIGlzIG5laXRoZXIgaW4gc2l6ZSBub3IgaW4gb3RoZXIgcmVzcGVjdHMgc3VjaCBhcyBpdCBpcyBzdXBwb3NlZCB0byBiZSBieSB0aG9zZSB3aG8gaGFiaXR1YWxseSBkaXNjb3Vyc2UgYWJvdXQgaXQsIGFzIEkgYmVsaWV2ZSBvbiBzb21lb25lJ3MgYXV0aG9yaXR5LuKAnQo8L3RyYW5zbGF0aW9uPg=="
translation['108.108d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDhkIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBTaW1taWFzIHNhaWQsIOKAnFdoYXQgZG8geW91IG1lYW4sIFNvY3JhdGVzPyBJIGhhdmUgaGVhcmQgYSBnb29kIGRlYWwgYWJvdXQgdGhlIGVhcnRoIG15c2VsZiwgYnV0IG5vdCB3aGF0IHlvdSBiZWxpZXZlOyAgc28gSSBzaG91bGQgbGlrZSB0byBoZWFyIGl0LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsIFNpbW1pYXMsIEkgZG8gbm90IHRoaW5rIEkgbmVlZCB0aGUgYXJ0IG9mIEdsYXVjdXMgdG8gdGVsbCB3aGF0IGl0IGlzLiAgQnV0IHRvIHByb3ZlIHRoYXQgaXQgaXMgdHJ1ZSB3b3VsZCwgSSB0aGluaywgYmUgdG9vIGhhcmQgZm9yIHRoZSBhcnQgb2YgR2xhdWN1cywgYW5kIHBlcmhhcHMgSSBzaG91bGQgbm90IGJlIGFibGUgdG8gZG8gaXQ7ICBiZXNpZGVzLCBldmVuIGlmIEkgaGFkIHRoZSBza2lsbCwgSSB0aGluayBteSBsaWZlLCBTaW1taWFzLCB3aWxsIGVuZCBiZWZvcmUgdGhlIGRpc2N1c3Npb24gY291bGQgYmUgZmluaXNoZWQuICBIb3dldmVyLCB0aGVyZSBpcyBub3RoaW5nIHRvIHByZXZlbnQgbXkgdGVsbGluZwo8L3RyYW5zbGF0aW9uPg=="
translation['108.108e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDhlIiB1bml0PSJzZWN0aW9uIiAvPndoYXQgSSBiZWxpZXZlIHRoZSBmb3JtIG9mIHRoZSBlYXJ0aCB0byBiZSwgYW5kIHRoZSByZWdpb25zIGluIGl0LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZWxsLOKAnSBzYWlkIFNpbW1pYXMsIOKAnHRoYXQgd2lsbCBiZSBlbm91Z2gu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEkgYW0gY29udmluY2VkLCB0aGVuLOKAnSBzYWlkIGhlLCDigJx0aGF0IGluIHRoZSBmaXJzdCBwbGFjZSwgaWYgdGhlIGVhcnRoIGlzIHJvdW5kIGFuZCBpbiB0aGUgbWlkZGxlIG9mIHRoZSBoZWF2ZW5zLCBpdCBuZWVkcyBuZWl0aGVyIHRoZSBhaXIKPC90cmFuc2xhdGlvbj4="
translation['109.109a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDkiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwOWEiIHVuaXQ9InNlY3Rpb24iIC8+bm9yIGFueSBvdGhlciBzaW1pbGFyIGZvcmNlIHRvIGtlZXAgaXQgZnJvbSBmYWxsaW5nLCBidXQgaXRzIG93biBlcXVpcG9pc2UgYW5kIHRoZSBob21vZ2VuZW91cyBuYXR1cmUgb2YgdGhlIGhlYXZlbnMgb24gYWxsIHNpZGVzIHN1ZmZpY2UgdG8gaG9sZCBpdCBpbiBwbGFjZTsgIGZvciBhIGJvZHkgd2hpY2ggaXMgaW4gZXF1aXBvaXNlIGFuZCBpcyBwbGFjZWQgaW4gdGhlIGNlbnRlciBvZiBzb21ldGhpbmcgd2hpY2ggaXMgaG9tb2dlbmVvdXMgY2Fubm90IGNoYW5nZSBpdHMgaW5jbGluYXRpb24gaW4gYW55IGRpcmVjdGlvbiwgYnV0IHdpbGwgcmVtYWluIGFsd2F5cyBpbiB0aGUgc2FtZSBwb3NpdGlvbi4gIFRoaXMsIHRoZW4sIGlzIHRoZSBmaXJzdCB0aGluZyBvZiB3aGljaCBJIGFtIGNvbnZpbmNlZC7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcQW5kIHJpZ2h0bHks4oCdIHNhaWQgU2ltbWlhcy48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcU2Vjb25kbHks4oCdIHNhaWQgaGUsIOKAnEkgYmVsaWV2ZSB0aGF0IHRoZSBlYXJ0aCBpcyB2ZXJ5IGxhcmdlIGFuZCB0aGF0IHdlIHdobyBkd2VsbCBiZXR3ZWVuIHRoZSBwaWxsYXJzIG9mIEhlcmN1bGVzCjwvdHJhbnNsYXRpb24+"
translation['109.109b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDliIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB0aGUgcml2ZXIgPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMTIyNjMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAxMjI2MyI+UGhhc2lzPC9wbGFjZU5hbWU+IGxpdmUgaW4gYSBzbWFsbCBwYXJ0IG9mIGl0IGFib3V0IHRoZSBzZWEsIGxpa2UgYW50cyBvciBmcm9ncyBhYm91dCBhIHBvbmQsIGFuZCB0aGF0IG1hbnkgb3RoZXIgcGVvcGxlIGxpdmUgaW4gbWFueSBvdGhlciBzdWNoIHJlZ2lvbnMuICBGb3IgSSBiZWxpZXZlIHRoZXJlIGFyZSBpbiBhbGwgZGlyZWN0aW9ucyBvbiB0aGUgZWFydGggbWFueSBob2xsb3dzIG9mIHZlcnkgdmFyaW91cyBmb3JtcyBhbmQgc2l6ZXMsIGludG8gd2hpY2ggdGhlIHdhdGVyIGFuZCBtaXN0IGFuZCBhaXIgaGF2ZSBydW4gdG9nZXRoZXI7ICBidXQgdGhlIGVhcnRoIGl0c2VsZiBpcyBwdXJlIGFuZCBpcyBzaXR1YXRlZCBpbiB0aGUgcHVyZSBoZWF2ZW4gaW4gd2hpY2ggdGhlIHN0YXJzIGFyZSwgdGhlIGhlYXZlbiB3aGljaAo8L3RyYW5zbGF0aW9uPg=="
translation['109.109c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDljIiB1bml0PSJzZWN0aW9uIiAvPnRob3NlIHdobyBkaXNjb3Vyc2UgYWJvdXQgc3VjaCBtYXR0ZXJzIGNhbGwgdGhlIGV0aGVyOyAgdGhlIHdhdGVyLCBtaXN0IGFuZCBhaXIgYXJlIHRoZSBzZWRpbWVudCBvZiB0aGlzIGFuZCBmbG93IHRvZ2V0aGVyIGludG8gdGhlIGhvbGxvd3Mgb2YgdGhlIGVhcnRoLiAgTm93IHdlIGRvIG5vdCBwZXJjZWl2ZSB0aGF0IHdlIGxpdmUgaW4gdGhlIGhvbGxvd3MsIGJ1dCB0aGluayB3ZSBsaXZlIG9uIHRoZSB1cHBlciBzdXJmYWNlIG9mIHRoZSBlYXJ0aCwganVzdCBhcyBpZiBzb21lb25lIHdobyBsaXZlcyBpbiB0aGUgZGVwdGggb2YgdGhlIG9jZWFuIHNob3VsZCB0aGluayBoZSBsaXZlZCBvbiB0aGUgc3VyZmFjZSBvZiB0aGUgc2VhLCBhbmQsIHNlZWluZyB0aGUgc3VuIGFuZCB0aGUgc3RhcnMgdGhyb3VnaCB0aGUgd2F0ZXIsIHNob3VsZCB0aGluayB0aGUgc2VhIHdhcyB0aGUgc2t5LCBhbmQgc2hvdWxkLCBieSByZWFzb24gb2Ygc2x1Z2dpc2huZXNzIG9yCjwvdHJhbnNsYXRpb24+"
translation['109.109d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDlkIiB1bml0PSJzZWN0aW9uIiAvPmZlZWJsZW5lc3MsIG5ldmVyIGhhdmUgcmVhY2hlZCB0aGUgc3VyZmFjZSBvZiB0aGUgc2VhLCBhbmQgc2hvdWxkIG5ldmVyIGhhdmUgc2VlbiwgYnkgcmlzaW5nIGFuZCBsaWZ0aW5nIGhpcyBoZWFkIG91dCBvZiB0aGUgc2VhIGludG8gb3VyIHVwcGVyIHdvcmxkLCBhbmQgc2hvdWxkIG5ldmVyIGhhdmUgaGVhcmQgZnJvbSBhbnlvbmUgd2hvIGhhZCBzZWVuLCBob3cgbXVjaCBwdXJlciBhbmQgZmFpcmVyIGl0IGlzIHRoYW4gdGhlIHdvcmxkIGhlIGxpdmVkIGluLiAgSSBiZWxpZXZlIHRoaXMgaXMganVzdCB0aGUgY2FzZSB3aXRoIHVzOyAgZm9yIHdlIGR3ZWxsIGluIGEgaG9sbG93IG9mIHRoZSBlYXJ0aCBhbmQgdGhpbmsgd2UgZHdlbGwgb24gaXRzIHVwcGVyIHN1cmZhY2U7ICBhbmQgdGhlIGFpciB3ZSBjYWxsIHRoZSBoZWF2ZW4sIGFuZCB0aGluayB0aGF0IGlzIHRoZSBoZWF2ZW4gaW4gd2hpY2ggdGhlIHN0YXJzIG1vdmUuICBCdXQgdGhlIGZhY3QgaXMgdGhlIHNhbWUsCjwvdHJhbnNsYXRpb24+"
translation['109.109e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMDllIiB1bml0PSJzZWN0aW9uIiAvPnRoYXQgYnkgcmVhc29uIG9mIGZlZWJsZW5lc3MgYW5kIHNsdWdnaXNobmVzcywgd2UgYXJlIHVuYWJsZSB0byBhdHRhaW4gdG8gdGhlIHVwcGVyIHN1cmZhY2Ugb2YgdGhlIGFpcjsgIGZvciBpZiBhbnlvbmUgc2hvdWxkIGNvbWUgdG8gdGhlIHRvcCBvZiB0aGUgYWlyIG9yIHNob3VsZCBnZXQgd2luZ3MgYW5kIGZseSB1cCwgaGUgY291bGQgbGlmdCBoaXMgaGVhZCBhYm92ZSBpdCBhbmQgc2VlLCBhcyBmaXNoZXMgbGlmdCB0aGVpciBoZWFkcyBvdXQgb2YgdGhlIHdhdGVyIGFuZCBzZWUgdGhlIHRoaW5ncyBpbiBvdXIgd29ybGQsIHNvIGhlIHdvdWxkIHNlZSB0aGluZ3MgaW4gdGhhdCB1cHBlciB3b3JsZDsgIGFuZCwgaWYgaGlzIG5hdHVyZSB3ZXJlIHN0cm9uZyBlbm91Z2ggdG8gYmVhciB0aGUgc2lnaHQsIGhlIHdvdWxkIHJlY29nbml6ZSB0aGF0IHRoYXQgaXMgdGhlIHJlYWwgaGVhdmVuCjwvdHJhbnNsYXRpb24+"
translation['110.110a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTAiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExMGEiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHRoZSByZWFsIGxpZ2h0IGFuZCB0aGUgcmVhbCBlYXJ0aC4gIEZvciB0aGlzIGVhcnRoIG9mIG91cnMsIGFuZCB0aGUgc3RvbmVzIGFuZCB0aGUgd2hvbGUgcmVnaW9uIHdoZXJlIHdlIGxpdmUsIGFyZSBpbmp1cmVkIGFuZCBjb3Jyb2RlZCwgYXMgaW4gdGhlIHNlYSB0aGluZ3MgYXJlIGluanVyZWQgYnkgdGhlIGJyaW5lLCBhbmQgbm90aGluZyBvZiBhbnkgYWNjb3VudCBncm93cyBpbiB0aGUgc2VhLCBhbmQgdGhlcmUgaXMsIG9uZSBtaWdodCBzYXksIG5vdGhpbmcgcGVyZmVjdCB0aGVyZSwgYnV0IGNhdmVybnMgYW5kIHNhbmQgYW5kIGVuZGxlc3MgbXVkIGFuZCBtaXJlLCB3aGVyZSB0aGVyZSBpcyBlYXJ0aCBhbHNvLCBhbmQgdGhlcmUgaXMgbm90aGluZyBhdCBhbGwgd29ydGh5IHRvIGJlIGNvbXBhcmVkIHdpdGggdGhlIGJlYXV0aWZ1bCB0aGluZ3Mgb2Ygb3VyIHdvcmxkLiAgQnV0IHRoZSB0aGluZ3MgaW4gdGhhdCB3b3JsZCBhYm92ZSB3b3VsZCBiZSBzZWVuIHRvIGJlIGV2ZW4gbW9yZSBzdXBlcmlvciB0byB0aG9zZSBpbiB0aGlzIHdvcmxkIG9mIG91cnMuCjwvdHJhbnNsYXRpb24+"
translation['110.110b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTBiIiB1bml0PSJzZWN0aW9uIiAvPklmIEkgbWF5IHRlbGwgYSBzdG9yeSwgU2ltbWlhcywgYWJvdXQgdGhlIHRoaW5ncyBvbiB0aGUgZWFydGggdGhhdCBpcyBiZWxvdyB0aGUgaGVhdmVuLCBhbmQgd2hhdCB0aGV5IGFyZSBsaWtlLCBpdCBpcyB3ZWxsIHdvcnRoIGhlYXJpbmcu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEJ5IGFsbCBtZWFucywgU29jcmF0ZXMs4oCdIHNhaWQgU2ltbWlhczsgIOKAnHdlIHNob3VsZCBiZSBnbGFkIHRvIGhlYXIgdGhpcyBzdG9yeS7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+4oCcV2VsbCB0aGVuLCBteSBmcmllbmQs4oCdIHNhaWQgaGUsIOKAnHRvIGJlZ2luIHdpdGgsIHRoZSBlYXJ0aCB3aGVuIHNlZW4gZnJvbSBhYm92ZSBpcyBzYWlkIHRvIGxvb2sgbGlrZSB0aG9zZSBiYWxscyB0aGF0IGFyZSBjb3ZlcmVkIHdpdGggdHdlbHZlIHBpZWNlcyBvZiBsZWF0aGVyOyAgaXQgaXMgZGl2aWRlZCBpbnRvIHBhdGNoZXMgb2YgdmFyaW91cyBjb2xvcnMsIG9mIHdoaWNoIHRoZSBjb2xvcnMgd2hpY2ggd2Ugc2VlIGhlcmUgbWF5IGJlIHJlZ2FyZGVkIGFzIHNhbXBsZXMsIHN1Y2ggYXMgcGFpbnRlcnMgdXNlLgo8L3RyYW5zbGF0aW9uPg=="
translation['110.110c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTBjIiB1bml0PSJzZWN0aW9uIiAvPkJ1dCB0aGVyZSB0aGUgd2hvbGUgZWFydGggaXMgb2Ygc3VjaCBjb2xvcnMsIGFuZCB0aGV5IGFyZSBtdWNoIGJyaWdodGVyIGFuZCBwdXJlciB0aGFuIG91cnM7ICBmb3Igb25lIHBhcnQgaXMgcHVycGxlIG9mIHdvbmRlcmZ1bCBiZWF1dHksIGFuZCBvbmUgaXMgZ29sZGVuLCBhbmQgb25lIGlzIHdoaXRlLCB3aGl0ZXIgdGhhbiBjaGFsayBvciBzbm93LCBhbmQgdGhlIGVhcnRoIGlzIG1hZGUgdXAgb2YgdGhlIG90aGVyIGNvbG9ycyBsaWtld2lzZSwgYW5kIHRoZXkgYXJlIG1vcmUgaW4gbnVtYmVyIGFuZCBtb3JlIGJlYXV0aWZ1bCB0aGFuIHRob3NlIHdoaWNoIHdlIHNlZSBoZXJlLiAgRm9yIHRob3NlIHZlcnkgaG9sbG93cyBvZiB0aGUgZWFydGggd2hpY2ggYXJlIGZ1bGwgb2Ygd2F0ZXIgYW5kIGFpciwgcHJlc2VudCBhbiBhcHBlYXJhbmNlCjwvdHJhbnNsYXRpb24+"
translation['110.110d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTBkIiB1bml0PSJzZWN0aW9uIiAvPm9mIGNvbG9yIGFzIHRoZXkgZ2xpc3RlbiBhbWlkIHRoZSB2YXJpZXR5IG9mIHRoZSBvdGhlciBjb2xvcnMsIHNvIHRoYXQgdGhlIHdob2xlIHByb2R1Y2VzIG9uZSBjb250aW51b3VzIGVmZmVjdCBvZiB2YXJpZXR5LiAgQW5kIGluIHRoaXMgZmFpciBlYXJ0aCB0aGUgdGhpbmdzIHRoYXQgZ3JvdywgdGhlIHRyZWVzLCBhbmQgZmxvd2VycyBhbmQgZnJ1aXRzLCBhcmUgY29ycmVzcG9uZGluZ2x5IGJlYXV0aWZ1bDsgIGFuZCBzbyB0b28gdGhlIG1vdW50YWlucyBhbmQgdGhlIHN0b25lcyBhcmUgc21vb3RoZXIsIGFuZCBtb3JlIHRyYW5zcGFyZW50IGFuZCBtb3JlIGxvdmVseSBpbiBjb2xvciB0aGFuIG91cnMuICBJbiBmYWN0LCBvdXIgaGlnaGx5IHByaXplZCBzdG9uZXMsIHNhcmRzIGFuZAo8L3RyYW5zbGF0aW9uPg=="
translation['110.110e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTBlIiB1bml0PSJzZWN0aW9uIiAvPmphc3BlcnMsIGFuZCBlbWVyYWxkcywgYW5kIG90aGVyIGdlbXMsIGFyZSBmcmFnbWVudHMgb2YgdGhvc2UgdGhlcmUsIGJ1dCB0aGVyZSBldmVyeXRoaW5nIGlzIGxpa2UgdGhlc2Ugb3Igc3RpbGwgbW9yZSBiZWF1dGlmdWwuICBBbmQgdGhlIHJlYXNvbiBvZiB0aGlzIGlzIHRoYXQgdGhlcmUgdGhlIHN0b25lcyBhcmUgcHVyZSwgYW5kIG5vdCBjb3Jyb2RlZCBvciBkZWZpbGVkLCBhcyBvdXJzIGFyZSwgd2l0aCBmaWx0aCBhbmQgYnJpbmUgYnkgdGhlIHZhcG9ycyBhbmQgbGlxdWlkcyB3aGljaCBmbG93IHRvZ2V0aGVyIGhlcmUgYW5kIHdoaWNoIGNhdXNlIHVnbGluZXNzIGFuZCBkaXNlYXNlIGluIGVhcnRoIGFuZCBzdG9uZXMgYW5kIGFuaW1hbHMgYW5kIHBsYW50cy4gIEFuZCB0aGUgZWFydGggdGhlcmUgaXMgYWRvcm5lZCB3aXRoIGFsbCB0aGUgamV3ZWxzIGFuZCBhbHNvIHdpdGggZ29sZCBhbmQKPC90cmFuc2xhdGlvbj4="
translation['111.111a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTEiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExMWEiIHVuaXQ9InNlY3Rpb24iIC8+c2lsdmVyIGFuZCBldmVyeXRoaW5nIG9mIHRoZSBzb3J0LiAgRm9yIHRoZXJlIHRoZXkgYXJlIGluIHBsYWluIHNpZ2h0LCBhYnVuZGFudCBhbmQgbGFyZ2UgYW5kIGluIG1hbnkgcGxhY2VzLCBzbyB0aGF0IHRoZSBlYXJ0aCBpcyBhIHNpZ2h0IHRvIG1ha2UgdGhvc2UgYmxlc3NlZCB3aG8gbG9vayB1cG9uIGl0LiAgQW5kIHRoZXJlIGFyZSBtYW55IGFuaW1hbHMgdXBvbiBpdCwgYW5kIG1lbiBhbHNvLCBzb21lIGR3ZWxsaW5nIGlubGFuZCwgb3RoZXJzIG9uIHRoZSBjb2FzdHMgb2YgdGhlIGFpciwgYXMgd2UgZHdlbGwgYWJvdXQgdGhlIHNlYSwgYW5kIG90aGVycyBvbiBpc2xhbmRzLCB3aGljaCB0aGUgYWlyIGZsb3dzIGFyb3VuZCwgbmVhciB0aGUgbWFpbmxhbmQ7ICBhbmQgaW4gc2hvcnQsIHdoYXQgd2F0ZXIgYW5kIHRoZSBzZWEgYXJlCjwvdHJhbnNsYXRpb24+"
translation['111.111b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTFiIiB1bml0PSJzZWN0aW9uIiAvPmluIG91ciBsaXZlcywgYWlyIGlzIGluIHRoZWlycywgYW5kIHdoYXQgdGhlIGFpciBpcyB0byB1cywgZXRoZXIgaXMgdG8gdGhlbS4gIEFuZCB0aGUgc2Vhc29ucyBhcmUgc28gdGVtcGVyZWQgdGhhdCBwZW9wbGUgdGhlcmUgaGF2ZSBubyBkaXNlYXNlcyBhbmQgbGl2ZSBtdWNoIGxvbmdlciB0aGFuIHdlLCBhbmQgaW4gc2lnaHQgYW5kIGhlYXJpbmcgYW5kIHdpc2RvbSBhbmQgYWxsIHN1Y2ggdGhpbmdzIGFyZSBhcyBtdWNoIHN1cGVyaW9yIHRvIHVzIGFzIGFpciBpcyBwdXJlciB0aGFuIHdhdGVyIG9yIHRoZSBldGhlciB0aGFuIGFpci4gIEFuZCB0aGV5IGhhdmUgc2FjcmVkIGdyb3ZlcyBhbmQgdGVtcGxlcyBvZiB0aGUgZ29kcywgaW4gd2hpY2ggdGhlIGdvZHMgcmVhbGx5IGR3ZWxsLCBhbmQgdGhleSBoYXZlIGludGVyY291cnNlIHdpdGggdGhlIGdvZHMgYnkgc3BlZWNoIGFuZCBwcm9waGVjaWVzIGFuZCB2aXNpb25zLAo8L3RyYW5zbGF0aW9uPg=="
translation['111.111c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTFjIiB1bml0PSJzZWN0aW9uIiAvPmFuZCB0aGV5IHNlZSB0aGUgc3VuIGFuZCBtb29uIGFuZCBzdGFycyBhcyB0aGV5IHJlYWxseSBhcmUsIGFuZCBpbiBhbGwgb3RoZXIgd2F5cyB0aGVpciBibGVzc2VkbmVzcyBpcyBpbiBhY2NvcmQgd2l0aCB0aGlzLjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5TdWNoIHRoZW4gaXMgdGhlIG5hdHVyZSBvZiB0aGUgZWFydGggYXMgYSB3aG9sZSwgYW5kIG9mIHRoZSB0aGluZ3MgYXJvdW5kIGl0LiAgQnV0IHJvdW5kIGFib3V0IHRoZSB3aG9sZSBlYXJ0aCwgaW4gdGhlIGhvbGxvd3Mgb2YgaXQsIGFyZSBtYW55IHJlZ2lvbnMsIHNvbWUgZGVlcGVyIGFuZCB3aWRlciB0aGFuIHRoYXQgaW4gd2hpY2ggd2UgbGl2ZSwKPC90cmFuc2xhdGlvbj4="
translation['111.111d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTFkIiB1bml0PSJzZWN0aW9uIiAvPnNvbWUgZGVlcGVyIGJ1dCB3aXRoIGEgbmFycm93ZXIgb3BlbmluZyB0aGFuIG91cnMsIGFuZCBzb21lIGFsc28gbGVzcyBpbiBkZXB0aCBhbmQgd2lkZXIuICBOb3cgYWxsIHRoZXNlIGFyZSBjb25uZWN0ZWQgd2l0aCBvbmUgYW5vdGhlciBieSBtYW55IHN1YnRlcnJhbmVhbiBjaGFubmVscywgc29tZSBsYXJnZXIgYW5kIHNvbWUgc21hbGxlciwgd2hpY2ggYXJlIGJvcmVkIGluIGFsbCBvZiB0aGVtLCBhbmQgdGhlcmUgYXJlIHBhc3NhZ2VzIHRocm91Z2ggd2hpY2ggbXVjaCB3YXRlciBmbG93cyBmcm9tIG9uZSB0byBhbm90aGVyIGFzIGludG8gbWl4aW5nIGJvd2xzOyAgYW5kIHRoZXJlIGFyZSBldmVybGFzdGluZyByaXZlcnMgb2YgaHVnZSBzaXplIHVuZGVyIHRoZSBlYXJ0aCwgZmxvd2luZyB3aXRoIGhvdCBhbmQgY29sZCB3YXRlcjsgIGFuZCB0aGVyZSBpcyBtdWNoIGZpcmUsIGFuZCBncmVhdCByaXZlcnMgb2YgZmlyZSwgYW5kIG1hbnkgc3RyZWFtcyBvZiBtdWQsIHNvbWUgdGhpbm5lcgo8L3RyYW5zbGF0aW9uPg=="
translation['111.111e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTFlIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBzb21lIHRoaWNrZXIsIGxpa2UgdGhlIHJpdmVycyBvZiBtdWQgdGhhdCBmbG93IGJlZm9yZSB0aGUgbGF2YSBpbiA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzEyMiIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAzMTIyIj5TaWNpbHk8L3BsYWNlTmFtZT4sIGFuZCB0aGUgbGF2YSBpdHNlbGYuICBUaGVzZSBmaWxsIHRoZSB2YXJpb3VzIHJlZ2lvbnMgYXMgdGhleSBoYXBwZW4gdG8gZmxvdyB0byBvbmUgb3IgYW5vdGhlciBhdCBhbnkgdGltZS4gIE5vdyBhIGtpbmQgb2Ygb3NjaWxsYXRpb24gd2l0aGluIHRoZSBlYXJ0aCBtb3ZlcyBhbGwgdGhlc2UgdXAgYW5kIGRvd24uICBBbmQgdGhlIG5hdHVyZSBvZiB0aGUgb3NjaWxsYXRpb24gaXMgYXMgZm9sbG93czogIE9uZSBvZiB0aGUgY2hhc21zIG9mIHRoZSBlYXJ0aCBpcyBncmVhdGVyIHRoYW4gdGhlIHJlc3QsCiAgICA8L3RyYW5zbGF0aW9uPg=="
translation['112.112a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTIiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExMmEiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIGlzIGJvcmVkIHJpZ2h0IHRocm91Z2ggdGhlIHdob2xlIGVhcnRoOyAgdGhpcyBpcyB0aGUgb25lIHdoaWNoIEhvbWVyIG1lYW5zIHdoZW4gaGUgc2F5czo8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+PGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5GYXIgb2ZmLCB0aGUgbG93ZXN0IGFieXNzIGJlbmVhdGggdGhlIGVhcnRoOzwvbD48L3F1b3RlPjxsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbWV0PSJkYWN0eWxpYyI+RmFyIG9mZiwgdGhlIGxvd2VzdCBhYnlzcyBiZW5lYXRoIHRoZSBlYXJ0aDs8L2w+PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDguMTQiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDguMTQ8L2JpYmw+PC9ub3RlPmFuZCB3aGljaCBlbHNld2hlcmUgaGUgYW5kIG1hbnkgb3RoZXIgcG9ldHMgaGF2ZSBjYWxsZWQgVGFydGFydXMuICBGb3IgYWxsIHRoZSByaXZlcnMgZmxvdyB0b2dldGhlciBpbnRvIHRoaXMgY2hhc20gYW5kIGZsb3cgb3V0IG9mIGl0IGFnYWluLCBhbmQgdGhleSBoYXZlIGVhY2ggdGhlIG5hdHVyZSBvZiB0aGUgZWFydGggdGhyb3VnaCB3aGljaCB0aGV5IGZsb3cuICBBbmQgdGhlIHJlYXNvbiB3aHkgYWxsIHRoZSBzdHJlYW1zIGZsb3cgaW4gYW5kIG91dCBoZXJlCjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iIG49IkhvbS4gSWwuIDguMTQiIHZhbGlkPSJ5ZXMiPkhvbS4gSWwuIDguMTQ8L2JpYmw+PC90cmFuc2xhdGlvbj4="
translation['112.112b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTJiIiB1bml0PSJzZWN0aW9uIiAvPmlzIHRoYXQgdGhpcyBsaXF1aWQgbWF0dGVyIGhhcyBubyBib3R0b20gb3IgZm91bmRhdGlvbi4gIFNvIGl0IG9zY2lsbGF0ZXMgYW5kIHdhdmVzIHVwIGFuZCBkb3duLCBhbmQgdGhlIGFpciBhbmQgd2luZCBhYm91dCBpdCBkbyB0aGUgc2FtZTsgIGZvciB0aGV5IGZvbGxvdyB0aGUgbGlxdWlkIGJvdGggd2hlbiBpdCBtb3ZlcyB0b3dhcmQgdGhlIG90aGVyIHNpZGUgb2YgdGhlIGVhcnRoIGFuZCB3aGVuIGl0IG1vdmVzIHRvd2FyZCB0aGlzIHNpZGUsIGFuZCBqdXN0IGFzIHRoZSBicmVhdGggb2YgdGhvc2Ugd2hvIGJyZWF0aGUgYmxvd3MgaW4gYW5kIG91dCwgc28gdGhlIHdpbmQgdGhlcmUgb3NjaWxsYXRlcyB3aXRoIHRoZSBsaXF1aWQgYW5kIGNhdXNlcyB0ZXJyaWJsZSBhbmQgaXJyZXNpc3RpYmxlIGJsYXN0cyBhcyBpdCBydXNoZXMgaW4gYW5kIG91dC4KPC90cmFuc2xhdGlvbj4="
translation['112.112c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTJjIiB1bml0PSJzZWN0aW9uIiAvPkFuZCB3aGVuIHRoZSB3YXRlciByZXRpcmVzIHRvIHRoZSByZWdpb24gd2hpY2ggd2UgY2FsbCB0aGUgbG93ZXIsIGl0IGZsb3dzIGludG8gdGhlIHJpdmVycyB0aGVyZSBhbmQgZmlsbHMgdGhlbSB1cCwgYXMgaWYgaXQgd2VyZSBwdW1wZWQgaW50byB0aGVtOyAgYW5kIHdoZW4gaXQgbGVhdmVzIHRoYXQgcmVnaW9uIGFuZCBjb21lcyBiYWNrIHRvIHRoaXMgc2lkZSwgaXQgZmlsbHMgdGhlIHJpdmVycyBoZXJlOyAgYW5kIHdoZW4gdGhlIHN0cmVhbXMgYXJlIGZpbGxlZCB0aGV5IGZsb3cgdGhyb3VnaCB0aGUgcGFzc2FnZXMgYW5kIHRocm91Z2ggdGhlIGVhcnRoIGFuZCBjb21lIHRvIHRoZSB2YXJpb3VzIHBsYWNlcyB0byB3aGljaCB0aGVpciBkaWZmZXJlbnQgcGF0aHMgbGVhZCwgd2hlcmUgdGhleSBtYWtlIHNlYXMgYW5kIG1hcnNoZXMsIGFuZCByaXZlcnMgYW5kIHNwcmluZ3MuICBUaGVuY2UgdGhleSBnbyBkb3duIGFnYWluIHVuZGVyIHRoZSBlYXJ0aCwKPC90cmFuc2xhdGlvbj4="
translation['112.112d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTJkIiB1bml0PSJzZWN0aW9uIiAvPnNvbWUgcGFzc2luZyBhcm91bmQgbWFueSBncmVhdCByZWdpb25zIGFuZCBvdGhlcnMgYXJvdW5kIGZld2VyIGFuZCBzbWFsbGVyIHBsYWNlcywgYW5kIGZsb3cgYWdhaW4gaW50byBUYXJ0YXJ1cywgc29tZSBtdWNoIGJlbG93IHRoZSBwb2ludCB3aGVyZSB0aGV5IHdlcmUgc3Vja2VkIG91dCwgYW5kIHNvbWUgb25seSBhIGxpdHRsZTsgIGJ1dCBhbGwgZmxvdyBpbiBiZWxvdyB0aGVpciBleGl0LiAgU29tZSBmbG93IGluIG9uIHRoZSBzaWRlIGZyb20gd2hpY2ggdGhleSBmbG93ZWQgb3V0LCBvdGhlcnMgb24gdGhlIG9wcG9zaXRlIHNpZGU7ICBhbmQgc29tZSBwYXNzIGNvbXBsZXRlbHkgYXJvdW5kIGluIGEgY2lyY2xlLCBjb2lsaW5nIGFib3V0IHRoZSBlYXJ0aCBvbmNlIG9yIHNldmVyYWwgdGltZXMsIGxpa2Ugc2VycGVudHMsIHRoZW4gZGVzY2VuZCB0byB0aGUgbG93ZXN0IHBvc3NpYmxlIGRlcHRoIGFuZCBmYWxsIGFnYWluIGludG8gdGhlIGNoYXNtLgo8L3RyYW5zbGF0aW9uPg=="
translation['112.112e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTJlIiB1bml0PSJzZWN0aW9uIiAvPk5vdyBpdCBpcyBwb3NzaWJsZSB0byBnbyBkb3duIGZyb20gZWFjaCBzaWRlIHRvIHRoZSBjZW50ZXIsIGJ1dCBub3QgYmV5b25kLCBmb3IgdGhlcmUgdGhlIHNsb3BlIHJpc2VzIGZvcndhcmQgaW4gZnJvbnQgb2YgdGhlIHN0cmVhbXMgZnJvbSBlaXRoZXIgc2lkZSBvZiB0aGUgZWFydGguPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnE5vdyB0aGVzZSBzdHJlYW1zIGFyZSBtYW55IGFuZCBncmVhdCBhbmQgb2YgYWxsIHNvcnRzLCBidXQgYW1vbmcgdGhlIG1hbnkgYXJlIGZvdXIgc3RyZWFtcywgdGhlIGdyZWF0ZXN0IGFuZCBvdXRlcm1vc3Qgb2Ygd2hpY2ggaXMgdGhhdCBjYWxsZWQgT2NlYW51cywgd2hpY2ggZmxvd3Mgcm91bmQgaW4gYSBjaXJjbGUsIGFuZCBvcHBvc2l0ZSB0aGlzLCBmbG93aW5nIGluIHRoZSBvcHBvc2l0ZSBkaXJlY3Rpb24sIGlzIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwxMTIwOTQ2IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDExMjA5NDYiPkFjaGVyb248L3BsYWNlTmFtZT4sIHdoaWNoIGZsb3dzIHRocm91Z2gKPC90cmFuc2xhdGlvbj4="
translation['113.113a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTMiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExM2EiIHVuaXQ9InNlY3Rpb24iIC8+dmFyaW91cyBkZXNlcnQgcGxhY2VzIGFuZCwgcGFzc2luZyB1bmRlciB0aGUgZWFydGgsIGNvbWVzIHRvIHRoZSBBY2hlcnVzaWFuIGxha2UuICBUbyB0aGlzIGxha2UgdGhlIHNvdWxzIG9mIG1vc3Qgb2YgdGhlIGRlYWQgZ28gYW5kLCBhZnRlciByZW1haW5pbmcgdGhlcmUgdGhlIGFwcG9pbnRlZCB0aW1lLCB3aGljaCBpcyBmb3Igc29tZSBsb25nZXIgYW5kIGZvciBvdGhlcnMgc2hvcnRlciwgYXJlIHNlbnQgYmFjayB0byBiZSBib3JuIGFnYWluIGludG8gbGl2aW5nIGJlaW5ncy4gIFRoZSB0aGlyZCByaXZlciBmbG93cyBvdXQgYmV0d2VlbiB0aGVzZSB0d28sIGFuZCBuZWFyIHRoZSBwbGFjZSB3aGVuY2UgaXQgaXNzdWVzIGl0IGZhbGxzIGludG8gYSB2YXN0IHJlZ2lvbiBidXJuaW5nIHdpdGggYSBncmVhdCBmaXJlIGFuZCBtYWtlcyBhIGxha2UgbGFyZ2VyIHRoYW4gb3VyIE1lZGl0ZXJyYW5lYW4gc2VhLCBib2lsaW5nIHdpdGggd2F0ZXIgYW5kIG11ZC4KPC90cmFuc2xhdGlvbj4="
translation['113.113b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTNiIiB1bml0PSJzZWN0aW9uIiAvPlRoZW5jZSBpdCBmbG93cyBpbiBhIGNpcmNsZSwgdHVyYmlkIGFuZCBtdWRkeSwgYW5kIGNvbWVzIGluIGl0cyB3aW5kaW5nIGNvdXJzZSwgYW1vbmcgb3RoZXIgcGxhY2VzLCB0byB0aGUgZWRnZSBvZiB0aGUgQWNoZXJ1c2lhbiBsYWtlLCBidXQgZG9lcyBub3QgbWluZ2xlIHdpdGggaXRzIHdhdGVyLiAgVGhlbiwgYWZ0ZXIgd2luZGluZyBhYm91dCBtYW55IHRpbWVzIHVuZGVyZ3JvdW5kLCBpdCBmbG93cyBpbnRvIFRhcnRhcnVzIGF0IGEgbG93ZXIgbGV2ZWwuICBUaGlzIGlzIHRoZSByaXZlciB3aGljaCBpcyBjYWxsZWQgUHlyaXBobGVnZXRob24sIGFuZCB0aGUgc3RyZWFtcyBvZiBsYXZhIHdoaWNoIHNwb3V0IHVwIGF0IHZhcmlvdXMgcGxhY2VzIG9uIGVhcnRoIGFyZSBvZmZzaG9vdHMgZnJvbSBpdC4gIE9wcG9zaXRlIHRoaXMgdGhlIGZvdXJ0aCByaXZlciBpc3N1ZXMsIGl0IGlzIHNhaWQsIGZpcnN0IGludG8gYSB3aWxkIGFuZCBhd2Z1bCBwbGFjZSwgd2hpY2ggaXMgYWxsIG9mIGEgZGFyayBibHVlIGNvbG9yLCBsaWtlIGxhcGlzIGxhenVsaS4KPC90cmFuc2xhdGlvbj4="
translation['113.113c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTNjIiB1bml0PSJzZWN0aW9uIiAvPlRoaXMgaXMgY2FsbGVkIHRoZSBTdHlnaWFuIHJpdmVyLCBhbmQgdGhlIGxha2Ugd2hpY2ggaXQgZm9ybXMgYnkgZmxvd2luZyBpbiBpcyB0aGUgU3R5eC4gIEFuZCB3aGVuIHRoZSByaXZlciBoYXMgZmxvd2VkIGluIGhlcmUgYW5kIGhhcyByZWNlaXZlZCBmZWFyZnVsIHBvd2VycyBpbnRvIGl0cyB3YXRlcnMsIGl0IHBhc3NlcyB1bmRlciB0aGUgZWFydGggYW5kLCBjaXJjbGluZyByb3VuZCBpbiB0aGUgZGlyZWN0aW9uIG9wcG9zZWQgdG8gdGhhdCBvZiBQeXJpcGhsZWdldGhvbiwgaXQgbWVldHMgaXQgY29taW5nIGZyb20gdGhlIG90aGVyIHdheSBpbiB0aGUgQWNoZXJ1c2lhbiBsYWtlLiAgQW5kIHRoZSB3YXRlciBvZiB0aGlzIHJpdmVyIGFsc28gbWluZ2xlcyB3aXRoIG5vIG90aGVyIHdhdGVyLCBidXQgdGhpcyBhbHNvIHBhc3NlcyByb3VuZCBpbiBhIGNpcmNsZSBhbmQgZmFsbHMgaW50byBUYXJ0YXJ1cyBvcHBvc2l0ZSBQeXJpcGhsZWdldGhvbi4gIEFuZCB0aGUgbmFtZSBvZiB0aGlzIHJpdmVyLCBhcyB0aGUgUG9ldHMgc2F5LCBpcyBDb2N5dHVzLgo8L3RyYW5zbGF0aW9uPg=="
translation['113.113d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTNkIiB1bml0PSJzZWN0aW9uIiAvPuKAnFN1Y2ggaXMgdGhlIG5hdHVyZSBvZiB0aGVzZSB0aGluZ3MuICBOb3cgd2hlbiB0aGUgZGVhZCBoYXZlIGNvbWUgdG8gdGhlIHBsYWNlIHdoZXJlIGVhY2ggaXMgbGVkIGJ5IGhpcyBnZW5pdXMsIGZpcnN0IHRoZXkgYXJlIGp1ZGdlZCBhbmQgc2VudGVuY2VkLCBhcyB0aGV5IGhhdmUgbGl2ZWQgd2VsbCBhbmQgcGlvdXNseSwgb3Igbm90LiAgQW5kIHRob3NlIHdobyBhcmUgZm91bmQgdG8gaGF2ZSBsaXZlZCBuZWl0aGVyIHdlbGwgbm9yIGlsbCwgZ28gdG8gdGhlIEFjaGVyb24gYW5kLCBlbWJhcmtpbmcgdXBvbiB2ZXNzZWxzIHByb3ZpZGVkIGZvciB0aGVtLCBhcnJpdmUgaW4gdGhlbSBhdCB0aGUgbGFrZTsgIHRoZXJlIHRoZXkgZHdlbGwgYW5kIGFyZSBwdXJpZmllZCwgYW5kIGlmIHRoZXkgaGF2ZSBkb25lIGFueSB3cm9uZyB0aGV5IGFyZSBhYnNvbHZlZCBieSBwYXlpbmcgdGhlIHBlbmFsdHkgZm9yIHRoZWlyIHdyb25nIGRvaW5ncywKPC90cmFuc2xhdGlvbj4="
translation['113.113e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTNlIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBmb3IgdGhlaXIgZ29vZCBkZWVkcyB0aGV5IHJlY2VpdmU8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+cmV3YXJkcywgZWFjaCBhY2NvcmRpbmcgdG8gaGlzIG1lcml0cy4gIEJ1dCB0aG9zZSB3aG8gYXBwZWFyIHRvIGJlIGluY3VyYWJsZSwgb24gYWNjb3VudCBvZiB0aGUgZ3JlYXRuZXNzIG9mIHRoZWlyIHdyb25nZG9pbmdzLCBiZWNhdXNlIHRoZXkgaGF2ZSBjb21taXR0ZWQgbWFueSBncmVhdCBkZWVkcyBvZiBzYWNyaWxlZ2UsIG9yIHdpY2tlZCBhbmQgYWJvbWluYWJsZSBtdXJkZXJzLCBvciBhbnkgb3RoZXIgc3VjaCBjcmltZXMsIGFyZSBjYXN0IGJ5IHRoZWlyIGZpdHRpbmcgZGVzdGlueSBpbnRvIFRhcnRhcnVzLCB3aGVuY2UgdGhleSBuZXZlciBlbWVyZ2UuICBUaG9zZSwgaG93ZXZlciwgd2hvIGFyZSBjdXJhYmxlLCBidXQgYXJlIGZvdW5kIHRvIGhhdmUgY29tbWl0dGVkIGdyZWF0IHNpbnPigJR3aG8gaGF2ZSwgZm9yIGV4YW1wbGUsIGluIGEgbW9tZW50IG9mIHBhc3Npb24gZG9uZSBzb21lIGFjdCBvZiB2aW9sZW5jZSBhZ2FpbnN0IGZhdGhlciBvciBtb3RoZXIgYW5kCjwvdHJhbnNsYXRpb24+"
translation['114.114a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTQiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExNGEiIHVuaXQ9InNlY3Rpb24iIC8+aGF2ZSBsaXZlZCBpbiByZXBlbnRhbmNlIHRoZSByZXN0IG9mIHRoZWlyIGxpdmVzLCBvciB3aG8gaGF2ZSBzbGFpbiBzb21lIG90aGVyIHBlcnNvbiB1bmRlciBzaW1pbGFyIGNvbmRpdGlvbnPigJR0aGVzZSBtdXN0IG5lZWRzIGJlIHRocm93biBpbnRvIFRhcnRhcnVzLCBhbmQgd2hlbiB0aGV5IGhhdmUgYmVlbiB0aGVyZSBhIHllYXIgdGhlIHdhdmUgY2FzdHMgdGhlbSBvdXQsIHRoZSBob21pY2lkZXMgYnkgd2F5IG9mIENvY3l0dXMsIHRob3NlIHdobyBoYXZlIG91dHJhZ2VkIHRoZWlyIHBhcmVudHMgYnkgd2F5IG9mIFB5cmlwaGxlZ2V0aG9uLiAgQW5kIHdoZW4gdGhleSBoYXZlIGJlZW4gYnJvdWdodCBieSB0aGUgY3VycmVudCB0byB0aGUgQWNoZXJ1c2lhbiBsYWtlLCB0aGV5IHNob3V0IGFuZCBjcnkgb3V0LCBjYWxsaW5nIHRvIHRob3NlIHdob20gdGhleSBoYXZlIHNsYWluIG9yIG91dHJhZ2VkLCBiZWdnaW5nIGFuZCBiZXNlZWNoaW5nIHRoZW0KPC90cmFuc2xhdGlvbj4="
translation['114.114b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTRiIiB1bml0PSJzZWN0aW9uIiAvPnRvIGJlIGdyYWNpb3VzIGFuZCB0byBsZXQgdGhlbSBjb21lIG91dCBpbnRvIHRoZSBsYWtlOyAgYW5kIGlmIHRoZXkgcHJldmFpbCB0aGV5IGNvbWUgb3V0IGFuZCBjZWFzZSBmcm9tIHRoZWlyIGlsbHMsIGJ1dCBpZiBub3QsIHRoZXkgYXJlIGJvcm5lIGF3YXkgYWdhaW4gdG8gVGFydGFydXMgYW5kIHRoZW5jZSBiYWNrIGludG8gdGhlIHJpdmVycywgYW5kIHRoaXMgZ29lcyBvbiB1bnRpbCB0aGV5IHByZXZhaWwgdXBvbiB0aG9zZSB3aG9tIHRoZXkgaGF2ZSB3cm9uZ2VkOyAgZm9yIHRoaXMgaXMgdGhlIHBlbmFsdHkgaW1wb3NlZCB1cG9uIHRoZW0gYnkgdGhlIGp1ZGdlcy4gIEJ1dCB0aG9zZSB3aG8gYXJlIGZvdW5kIHRvIGhhdmUgZXhjZWxsZWQgaW4gaG9seSBsaXZpbmcgYXJlIGZyZWVkIGZyb20gdGhlc2UgcmVnaW9ucyB3aXRoaW4gdGhlIGVhcnRoIGFuZCBhcmUgcmVsZWFzZWQgYXMgZnJvbSBwcmlzb25zOwo8L3RyYW5zbGF0aW9uPg=="
translation['114.114c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTRjIiB1bml0PSJzZWN0aW9uIiAvPnRoZXkgbW91bnQgdXB3YXJkIGludG8gdGhlaXIgcHVyZSBhYm9kZSBhbmQgZHdlbGwgdXBvbiB0aGUgZWFydGguICBBbmQgb2YgdGhlc2UsIGFsbCB3aG8gaGF2ZSBkdWx5IHB1cmlmaWVkIHRoZW1zZWx2ZXMgYnkgcGhpbG9zb3BoeSBsaXZlIGhlbmNlZm9ydGggYWx0b2dldGhlciB3aXRob3V0IGJvZGllcywgYW5kIHBhc3MgdG8gc3RpbGwgbW9yZSBiZWF1dGlmdWwgYWJvZGVzIHdoaWNoIGl0IGlzIG5vdCBlYXN5IHRvIGRlc2NyaWJlLCBub3IgaGF2ZSB3ZSBub3cgdGltZSBlbm91Z2guPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnEJ1dCwgU2ltbWlhcywgYmVjYXVzZSBvZiBhbGwgdGhlc2UgdGhpbmdzIHdoaWNoIHdlIGhhdmUgcmVjb3VudGVkIHdlIG91Z2h0IHRvIGRvIG91ciBiZXN0IHRvIGFjcXVpcmUgdmlydHVlIGFuZCB3aXNkb20gaW4gbGlmZS4gIEZvciB0aGUgcHJpemUgaXMgZmFpciBhbmQgdGhlIGhvcGUgZ3JlYXQuCjwvdHJhbnNsYXRpb24+"
translation['114.114d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTRkIiB1bml0PSJzZWN0aW9uIiAvPuKAnE5vdyBpdCB3b3VsZCBub3QgYmUgZml0dGluZyBmb3IgYSBtYW4gb2Ygc2Vuc2UgdG8gbWFpbnRhaW4gdGhhdCBhbGwgdGhpcyBpcyBqdXN0IGFzIEkgaGF2ZSBkZXNjcmliZWQgaXQsIGJ1dCB0aGF0IHRoaXMgb3Igc29tZXRoaW5nIGxpa2UgaXQgaXMgdHJ1ZSBjb25jZXJuaW5nIG91ciBzb3VscyBhbmQgdGhlaXIgYWJvZGVzLCBzaW5jZSB0aGUgc291bCBpcyBzaG93biB0byBiZSBpbW1vcnRhbCwgSSB0aGluayBoZSBtYXkgcHJvcGVybHkgYW5kIHdvcnRoaWx5IHZlbnR1cmUgdG8gYmVsaWV2ZTsgIGZvciB0aGUgdmVudHVyZSBpcyB3ZWxsIHdvcnRoIHdoaWxlOyAgYW5kIGhlIG91Z2h0IHRvIHJlcGVhdCBzdWNoIHRoaW5ncyB0byBoaW1zZWxmIGFzIGlmIHRoZXkgd2VyZSBtYWdpYyBjaGFybXMsIHdoaWNoIGlzIHRoZSByZWFzb24gd2h5IEkgaGF2ZSBiZWVuIGxlbmd0aGVuaW5nIG91dCB0aGUgc3Rvcnkgc28gbG9uZy4gIFRoaXMgdGhlbiBpcyB3aHkgYSBtYW4gc2hvdWxkIGJlIG9mIGdvb2QgY2hlZXIgYWJvdXQgaGlzIHNvdWwsIHdobyBpbiBoaXMgbGlmZQo8L3RyYW5zbGF0aW9uPg=="
translation['114.114e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTRlIiB1bml0PSJzZWN0aW9uIiAvPmhhcyByZWplY3RlZCB0aGUgcGxlYXN1cmVzIGFuZCBvcm5hbWVudHMgb2YgdGhlIGJvZHksIHRoaW5raW5nIHRoZXkgYXJlIGFsaWVuIHRvIGhpbSBhbmQgbW9yZSBsaWtlbHkgdG8gZG8gaGltIGhhcm0gdGhhbiBnb29kLCBhbmQgaGFzIHNvdWdodCBlYWdlcmx5IGZvciB0aG9zZSBvZiBsZWFybmluZywgYW5kIGFmdGVyIGFkb3JuaW5nIGhpcyBzb3VsIHdpdGggbm8gYWxpZW4gb3JuYW1lbnRzLCBidXQgd2l0aCBpdHMgb3duIHByb3BlciBhZG9ybm1lbnQgb2Ygc2VsZi1yZXN0cmFpbnQgYW5kIGp1c3RpY2UgYW5kCjwvdHJhbnNsYXRpb24+"
translation['115.115a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTUiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExNWEiIHVuaXQ9InNlY3Rpb24iIC8+Y291cmFnZSBhbmQgZnJlZWRvbSBhbmQgdHJ1dGgsIGF3YWl0cyBoaXMgZGVwYXJ0dXJlIHRvIHRoZSBvdGhlciB3b3JsZCwgcmVhZHkgdG8gZ28gd2hlbiBmYXRlIGNhbGxzIGhpbS4gIFlvdSwgU2ltbWlhcyBhbmQgQ2ViZXMgYW5kIHRoZSByZXN0LOKAnSBoZSBzYWlkLCDigJx3aWxsIGdvIGhlcmVhZnRlciwgZWFjaCBpbiBoaXMgb3duIHRpbWU7ICBidXQgSSBhbSBub3cgYWxyZWFkeSwgYXMgYSB0cmFnZWRpYW4gd291bGQgc2F5LCBjYWxsZWQgYnkgZmF0ZSwgYW5kIGl0IGlzIGFib3V0IHRpbWUgZm9yIG1lIHRvIGdvIHRvIHRoZSBiYXRoOyAgZm9yIEkgdGhpbmsgaXQgaXMgYmV0dGVyIHRvIGJhdGhlIGJlZm9yZSBkcmlua2luZyB0aGUgcG9pc29uLCB0aGF0IHRoZSB3b21lbiBtYXkgbm90IGhhdmUgdGhlIHRyb3VibGUgb2YgYmF0aGluZyB0aGUgY29ycHNlLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5XaGVuIGhlIGhhZCBmaW5pc2hlZCBzcGVha2luZywgQ3JpdG8gc2FpZDoKPC90cmFuc2xhdGlvbj4="
translation['115.115b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTViIiB1bml0PSJzZWN0aW9uIiAvPuKAnFdlbGwsIFNvY3JhdGVzLCBkbyB5b3Ugd2lzaCB0byBsZWF2ZSBhbnkgZGlyZWN0aW9ucyB3aXRoIHVzIGFib3V0IHlvdXIgY2hpbGRyZW4gb3IgYW55dGhpbmcgZWxzZeKAlGFueXRoaW5nIHdlIGNhbiBkbyB0byBzZXJ2ZSB5b3U/4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPuKAnFdoYXQgSSBhbHdheXMgc2F5LCBDcml0byzigJ0gaGUgcmVwbGllZCwg4oCcbm90aGluZyBuZXcuICBJZiB5b3UgdGFrZSBjYXJlIG9mIHlvdXJzZWx2ZXMgeW91IHdpbGwgc2VydmUgbWUgYW5kIG1pbmUgYW5kIHlvdXJzZWx2ZXMsIHdoYXRldmVyIHlvdSBkbywgZXZlbiBpZiB5b3UgbWFrZSBubyBwcm9taXNlcyBub3c7ICBidXQgaWYgeW91IG5lZ2xlY3QgeW91cnNlbHZlcyBhbmQgYXJlIG5vdCB3aWxsaW5nIHRvIGxpdmUgZm9sbG93aW5nIHN0ZXAgYnkgc3RlcCwgYXMgaXQgd2VyZSwgaW4gdGhlIHBhdGggbWFya2VkIG91dCBieSBvdXIgcHJlc2VudCBhbmQgcGFzdCBkaXNjdXNzaW9ucywgeW91IHdpbGwgYWNjb21wbGlzaCBub3RoaW5nLAo8L3RyYW5zbGF0aW9uPg=="
translation['115.115c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTVjIiB1bml0PSJzZWN0aW9uIiAvPm5vIG1hdHRlciBob3cgbXVjaCBvciBob3cgZWFnZXJseSB5b3UgcHJvbWlzZSBhdCBwcmVzZW50LuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxXZSB3aWxsIGNlcnRhaW5seSB0cnkgaGFyZCB0byBkbyBhcyB5b3Ugc2F5LOKAnSBoZSByZXBsaWVkLiDigJxCdXQgaG93IHNoYWxsIHdlIGJ1cnkgeW91P+KAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz7igJxIb3dldmVyIHlvdSBwbGVhc2Us4oCdIGhlIHJlcGxpZWQsIOKAnGlmIHlvdSBjYW4gY2F0Y2ggbWUgYW5kIEkgZG8gbm90IGdldCBhd2F5IGZyb20geW91LuKAnSAgQW5kIGhlIGxhdWdoZWQgZ2VudGx5LCBhbmQgbG9va2luZyB0b3dhcmRzIHVzLCBzYWlkOiDigJxJIGNhbm5vdCBwZXJzdWFkZSBDcml0bywgbXkgZnJpZW5kcywgdGhhdCB0aGUgU29jcmF0ZXMgd2hvIGlzIG5vdyBjb252ZXJzaW5nIGFuZCBhcnJhbmdpbmcgdGhlIGRldGFpbHMgb2YgaGlzIGFyZ3VtZW50IGlzIHJlYWxseSBJOyAgaGUgdGhpbmtzIEkgYW0gdGhlIG9uZSB3aG9tIGhlIHdpbGwgcHJlc2VudGx5IHNlZSBhcyBhIGNvcnBzZSwKPC90cmFuc2xhdGlvbj4="
translation['115.115d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTVkIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBoZSBhc2tzIGhvdyB0byBidXJ5IG1lLiAgQW5kIHRob3VnaCBJIGhhdmUgYmVlbiBzYXlpbmcgYXQgZ3JlYXQgbGVuZ3RoIHRoYXQgYWZ0ZXIgSSBkcmluayB0aGUgcG9pc29uIEkgc2hhbGwgbm8gbG9uZ2VyIGJlIHdpdGggeW91LCBidXQgc2hhbGwgZ28gYXdheSB0byB0aGUgam95cyBvZiB0aGUgYmxlc3NlZCB5b3Uga25vdyBvZiwgaGUgc2VlbXMgdG8gdGhpbmsgdGhhdCB3YXMgaWRsZSB0YWxrIHV0dGVyZWQgdG8gZW5jb3VyYWdlIHlvdSBhbmQgbXlzZWxmLiAgU28s4oCdIGhlIHNhaWQsIOKAnGdpdmUgc2VjdXJpdHkgZm9yIG1lIHRvIENyaXRvLCB0aGUgb3Bwb3NpdGUgb2YgdGhhdCB3aGljaCBoZSBnYXZlIHRoZSBqdWRnZXMgYXQgbXkgdHJpYWw7ICBmb3IgaGUgZ2F2ZSBzZWN1cml0eSB0aGF0IEkgd291bGQgcmVtYWluLCBidXQgeW91IG11c3QgZ2l2ZSBzZWN1cml0eSB0aGF0IEkgc2hhbGwgbm90IHJlbWFpbiB3aGVuIEkgZGllLAo8L3RyYW5zbGF0aW9uPg=="
translation['115.115e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTVlIiB1bml0PSJzZWN0aW9uIiAvPmJ1dCBzaGFsbCBnbyBhd2F5LCBzbyB0aGF0IENyaXRvIG1heSBiZWFyIGl0IG1vcmUgZWFzaWx5LCBhbmQgbWF5IG5vdCBiZSB0cm91YmxlZCB3aGVuIGhlIHNlZXMgbXkgYm9keSBiZWluZyBidXJudCBvciBidXJpZWQsIG9yIHRoaW5rIEkgYW0gdW5kZXJnb2luZyB0ZXJyaWJsZSB0cmVhdG1lbnQsIGFuZCBtYXkgbm90IHNheSBhdCB0aGUgZnVuZXJhbCB0aGF0IGhlIGlzIGxheWluZyBvdXQgU29jcmF0ZXMsIG9yIGZvbGxvd2luZyBoaW0gdG8gdGhlIGdyYXZlLCBvciBidXJ5aW5nIGhpbS4gIEZvciwgZGVhciBDcml0bywgeW91IG1heSBiZSBzdXJlIHRoYXQgc3VjaCB3cm9uZyB3b3JkcyBhcmUgbm90IG9ubHkgdW5kZXNpcmFibGUgaW4gdGhlbXNlbHZlcywgYnV0IHRoZXkgaW5mZWN0IHRoZSBzb3VsIHdpdGggZXZpbC4gIE5vLCB5b3UgbXVzdCBiZSBvZiBnb29kIGNvdXJhZ2UsIGFuZCBzYXkgdGhhdCB5b3UgYnVyeSBteSBib2R5LOKAlGFuZCBidXJ5IGl0CjwvdHJhbnNsYXRpb24+"
translation['116.116a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTYiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExNmEiIHVuaXQ9InNlY3Rpb24iIC8+YXMgeW91IHRoaW5rIGJlc3QgYW5kIGFzIHNlZW1zIHRvIHlvdSBtb3N0IGZpdHRpbmcu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPldoZW4gaGUgaGFkIHNhaWQgdGhpcywgaGUgZ290IHVwIGFuZCB3ZW50IGludG8gYW5vdGhlciByb29tIHRvIGJhdGhlOyAgQ3JpdG8gZm9sbG93ZWQgaGltLCBidXQgaGUgdG9sZCB1cyB0byB3YWl0LiAgU28gd2Ugd2FpdGVkLCB0YWxraW5nIG92ZXIgd2l0aCBlYWNoIG90aGVyIGFuZCBkaXNjdXNzaW5nIHRoZSBkaXNjb3Vyc2Ugd2UgaGFkIGhlYXJkLCBhbmQgdGhlbiBzcGVha2luZyBvZiB0aGUgZ3JlYXQgbWlzZm9ydHVuZSB0aGF0IGhhZCBiZWZhbGxlbiB1cywgZm9yIHdlIGZlbHQgdGhhdCBoZSB3YXMgbGlrZSBhIGZhdGhlciB0byB1cyBhbmQgdGhhdCB3aGVuIGJlcmVmdCBvZiBoaW0gd2Ugc2hvdWxkIHBhc3MgdGhlIHJlc3Qgb2Ygb3VyIGxpdmVzIGFzIG9ycGhhbnMuICBBbmQgd2hlbiBoZSBoYWQgYmF0aGVkCjwvdHJhbnNsYXRpb24+"
translation['116.116b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTZiIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBoaXMgY2hpbGRyZW4gaGFkIGJlZW4gYnJvdWdodCB0byBoaW3igJRmb3IgaGUgaGFkIHR3byBsaXR0bGUgc29ucyBhbmQgb25lIGJpZyBvbmXigJRhbmQgdGhlIHdvbWVuIG9mIHRoZSBmYW1pbHkgaGFkIGNvbWUsIGhlIHRhbGtlZCB3aXRoIHRoZW0gaW4gQ3JpdG8ncyBwcmVzZW5jZSBhbmQgZ2F2ZSB0aGVtIHN1Y2ggZGlyZWN0aW9ucyBhcyBoZSB3aXNoZWQ7ICB0aGVuIGhlIHRvbGQgdGhlIHdvbWVuIHRvIGdvIGF3YXksIGFuZCBoZSBjYW1lIHRvIHVzLiAgQW5kIGl0IHdhcyBub3cgbmVhcmx5IHN1bnNldDsgIGZvciBoZSBoYWQgc3BlbnQgYSBsb25nIHRpbWUgd2l0aGluLiAgQW5kIGhlIGNhbWUgYW5kIHNhdCBkb3duIGZyZXNoIGZyb20gdGhlIGJhdGguICBBZnRlciB0aGF0IG5vdCBtdWNoIHdhcyBzYWlkLCBhbmQgdGhlIHNlcnZhbnQKPC90cmFuc2xhdGlvbj4="
translation['116.116c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTZjIiB1bml0PSJzZWN0aW9uIiAvPm9mIHRoZSBlbGV2ZW4gY2FtZSBhbmQgc3Rvb2QgYmVzaWRlIGhpbSBhbmQgc2FpZDogIOKAnFNvY3JhdGVzLCBJIHNoYWxsIG5vdCBmaW5kIGZhdWx0IHdpdGggeW91LCBhcyBJIGRvIHdpdGggb3RoZXJzLCBmb3IgYmVpbmcgYW5ncnkgYW5kIGN1cnNpbmcgbWUsIHdoZW4gYXQgdGhlIGJlaGVzdCBvZiB0aGUgYXV0aG9yaXRpZXMsIEkgdGVsbCB0aGVtIHRvIGRyaW5rIHRoZSBwb2lzb24uICBObywgSSBoYXZlIGZvdW5kIHlvdSBpbiBhbGwgdGhpcyB0aW1lIGluIGV2ZXJ5IHdheSB0aGUgbm9ibGVzdCBhbmQgZ2VudGxlc3QgYW5kIGJlc3QgbWFuIHdobyBoYXMgZXZlciBjb21lIGhlcmUsIGFuZCBub3cgSSBrbm93IHlvdXIgYW5nZXIgaXMgZGlyZWN0ZWQgYWdhaW5zdCBvdGhlcnMsIG5vdCBhZ2FpbnN0IG1lLCBmb3IgeW91IGtub3cgd2hvIGFyZSAgYmxhbWUuICBOb3csIGZvciB5b3Uga25vdyB0aGUgbWVzc2FnZSBJIGNhbWUgdG8gYnJpbmcgeW91LCBmYXJld2VsbCBhbmQgdHJ5IHRvIGJlYXIgd2hhdCB5b3UgbXVzdAo8L3RyYW5zbGF0aW9uPg=="
translation['116.116d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTZkIiB1bml0PSJzZWN0aW9uIiAvPmFzIGVhc2lseSBhcyB5b3UgY2FuLuKAnSAgQW5kIGhlIGJ1cnN0IGludG8gdGVhcnMgYW5kIHR1cm5lZCBhbmQgd2VudCBhd2F5LiAgQW5kIFNvY3JhdGVzIGxvb2tlZCB1cCBhdCBoaW0gYW5kIHNhaWQ6IOKAnEZhcmUgeW91IHdlbGwsIHRvbzsgIEkgd2lsbCBkbyBhcyB5b3Ugc2F5LuKAnSBBbmQgdGhlbiBoZSBzYWlkIHRvIHVzOiAg4oCcSG93IGNoYXJtaW5nIHRoZSBtYW4gaXMhICBFdmVyIHNpbmNlIEkgaGF2ZSBiZWVuIGhlcmUgaGUgaGFzIGJlZW4gY29taW5nIHRvIHNlZSBtZSBhbmQgdGFsa2luZyB3aXRoIG1lIGZyb20gdGltZSB0byB0aW1lLCBhbmQgaGFzIGJlZW4gdGhlIGJlc3Qgb2YgbWVuLCBhbmQgbm93IGhvdyBub2JseSBoZSB3ZWVwcyBmb3IgbWUhICBCdXQgY29tZSwgQ3JpdG8sIGxldCB1cyBvYmV5IGhpbSwgYW5kIGxldCBzb21lb25lIGJyaW5nIHRoZSBwb2lzb24sIGlmIGl0IGlzIHJlYWR5OyAgYW5kIGlmIG5vdCwgbGV0IHRoZSBtYW4gcHJlcGFyZSBpdC7igJ0gIEFuZCBDcml0byBzYWlkOgo8L3RyYW5zbGF0aW9uPg=="
translation['116.116e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTZlIiB1bml0PSJzZWN0aW9uIiAvPuKAnEJ1dCBJIHRoaW5rLCBTb2NyYXRlcywgdGhlIHN1biBpcyBzdGlsbCB1cG9uIHRoZSBtb3VudGFpbnMgYW5kIGhhcyBub3QgeWV0IHNldDsgIGFuZCBJIGtub3cgdGhhdCBvdGhlcnMgaGF2ZSB0YWtlbiB0aGUgcG9pc29uIHZlcnkgbGF0ZSwgYWZ0ZXIgdGhlIG9yZGVyIGhhcyBjb21lIHRvIHRoZW0sIGFuZCBpbiB0aGUgbWVhbnRpbWUgaGF2ZSBlYXRlbiBhbmQgZHJ1bmsgYW5kIHNvbWUgb2YgdGhlbSBlbmpveWVkIHRoZSBzb2NpZXR5IG9mIHRob3NlIHdob20gdGhleSBsb3ZlZC4gIERvIG5vdCBodXJyeTsgIGZvciB0aGVyZSBpcyBzdGlsbCB0aW1lLuKAnTxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBlZD0iUCIgdW5pdD0icGFyYSIgLz5BbmQgU29jcmF0ZXMgc2FpZDogIOKAnENyaXRvLCB0aG9zZSB3aG9tIHlvdSBtZW50aW9uIGFyZSByaWdodCBpbiBkb2luZyBhcyB0aGV5IGRvLCBmb3IgdGhleSB0aGluayB0aGV5IGdhaW4gYnkgaXQ7ICBhbmQgSSBzaGFsbCBiZSByaWdodCBpbiBub3QgZG9pbmcgYXMgdGhleSBkbzsKPC90cmFuc2xhdGlvbj4="
translation['117.117a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTciIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExN2EiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIEkgdGhpbmsgSSBzaG91bGQgZ2FpbiBub3RoaW5nIGJ5IHRha2luZyB0aGUgcG9pc29uIGEgbGl0dGxlIGxhdGVyLiAgSSBzaG91bGQgb25seSBtYWtlIG15c2VsZiByaWRpY3Vsb3VzIGluIG15IG93biBleWVzIGlmIEkgY2x1bmcgdG8gbGlmZSBhbmQgc3BhcmVkIGl0LCB3aGVuIHRoZXJlIGlzIG5vIG1vcmUgcHJvZml0IGluIGl0LiAgQ29tZSzigJ0gaGUgc2FpZCwg4oCcZG8gYXMgSSBhc2sgYW5kIGRvIG5vdCByZWZ1c2Uu4oCdPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIGVkPSJQIiB1bml0PSJwYXJhIiAvPlRoZXJldXBvbiBDcml0byBub2RkZWQgdG8gdGhlIGJveSB3aG8gd2FzIHN0YW5kaW5nIG5lYXIuICBUaGUgYm95IHdlbnQgb3V0IGFuZCBzdGF5ZWQgYSBsb25nIHRpbWUsIHRoZW4gY2FtZSBiYWNrIHdpdGggdGhlIG1hbiB3aG8gd2FzIHRvIGFkbWluaXN0ZXIgdGhlIHBvaXNvbiwgd2hpY2ggaGUgYnJvdWdodCB3aXRoIGhpbSBpbiBhIGN1cCByZWFkeSBmb3IgdXNlLiAgQW5kIHdoZW4gU29jcmF0ZXMgc2F3IGhpbSwgaGUgc2FpZDogIOKAnFdlbGwsIG15IGdvb2QgbWFuLCB5b3Uga25vdyBhYm91dCB0aGVzZSB0aGluZ3M7ICB3aGF0IG11c3QgSSBkbz/igJ0gIOKAnE5vdGhpbmcs4oCdIGhlIHJlcGxpZWQsIOKAnGV4Y2VwdCBkcmluayB0aGUgcG9pc29uIGFuZCB3YWxrIGFib3V0CjwvdHJhbnNsYXRpb24+"
translation['117.117b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTdiIiB1bml0PSJzZWN0aW9uIiAvPnRpbGwgeW91ciBsZWdzIGZlZWwgaGVhdnk7ICB0aGVuIGxpZSBkb3duLCBhbmQgdGhlIHBvaXNvbiB3aWxsIHRha2UgZWZmZWN0IG9mIGl0c2VsZi7igJ08bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZWQ9IlAiIHVuaXQ9InBhcmEiIC8+QXQgdGhlIHNhbWUgdGltZSBoZSBoZWxkIG91dCB0aGUgY3VwIHRvIFNvY3JhdGVzLiAgSGUgdG9vayBpdCwgYW5kIHZlcnkgZ2VudGx5LCBFY2hlY3JhdGVzLCB3aXRob3V0IHRyZW1ibGluZyBvciBjaGFuZ2luZyBjb2xvciBvciBleHByZXNzaW9uLCBidXQgbG9va2luZyB1cCBhdCB0aGUgbWFuIHdpdGggd2lkZSBvcGVuIGV5ZXMsIGFzIHdhcyBoaXMgY3VzdG9tLCBzYWlkOiAg4oCcV2hhdCBkbyB5b3Ugc2F5IGFib3V0IHBvdXJpbmcgYSBsaWJhdGlvbiB0byBzb21lIGRlaXR5IGZyb20gdGhpcyBjdXA/ICBNYXkgSSwgb3Igbm90P+KAnSAg4oCcU29jcmF0ZXMs4oCdIHNhaWQgaGUsIOKAnHdlIHByZXBhcmUgb25seSBhcyBtdWNoIGFzIHdlIHRoaW5rIGlzIGVub3VnaC7igJ0gIOKAnEkgdW5kZXJzdGFuZCzigJ0gc2FpZCBTb2NyYXRlczsKPC90cmFuc2xhdGlvbj4="
translation['117.117c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTdjIiB1bml0PSJzZWN0aW9uIiAvPuKAnGJ1dCBJIG1heSBhbmQgbXVzdCBwcmF5IHRvIHRoZSBnb2RzIHRoYXQgbXkgZGVwYXJ0dXJlIGhlbmNlIGJlIGEgZm9ydHVuYXRlIG9uZTsgIHNvIEkgb2ZmZXIgdGhpcyBwcmF5ZXIsIGFuZCBtYXkgaXQgYmUgZ3JhbnRlZC7igJ0gIFdpdGggdGhlc2Ugd29yZHMgaGUgcmFpc2VkIHRoZSBjdXAgdG8gaGlzIGxpcHMgYW5kIHZlcnkgY2hlZXJmdWxseSBhbmQgcXVpZXRseSBkcmFpbmVkIGl0LiAgVXAgdG8gdGhhdCB0aW1lIG1vc3Qgb2YgdXMgaGFkIGJlZW4gYWJsZSB0byByZXN0cmFpbiBvdXIgdGVhcnMgZmFpcmx5IHdlbGwsIGJ1dCB3aGVuIHdlIHdhdGNoZWQgaGltIGRyaW5raW5nIGFuZCBzYXcgdGhhdCBoZSBoYWQgZHJ1bmsgdGhlIHBvaXNvbiwgd2UgY291bGQgZG8gc28gbm8gbG9uZ2VyLCBidXQgaW4gc3BpdGUgb2YgbXlzZWxmIG15IHRlYXJzIHJvbGxlZCBkb3duIGluIGZsb29kcywgc28gdGhhdCBJIHdyYXBwZWQgbXkgZmFjZSBpbiBteSBjbG9hayBhbmQgd2VwdCBmb3IgbXlzZWxmOyAgZm9yIGl0IHdhcyBub3QgZm9yIGhpbSB0aGF0IEkgd2VwdCwKPC90cmFuc2xhdGlvbj4="
translation['117.117d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTdkIiB1bml0PSJzZWN0aW9uIiAvPmJ1dCBmb3IgbXkgb3duIG1pc2ZvcnR1bmUgaW4gYmVpbmcgZGVwcml2ZWQgb2Ygc3VjaCBhIGZyaWVuZC4gIENyaXRvIGhhZCBnb3QgdXAgYW5kIGdvbmUgYXdheSBldmVuIGJlZm9yZSBJIGRpZCwgYmVjYXVzZSBoZSBjb3VsZCBub3QgcmVzdHJhaW4gaGlzIHRlYXJzLiAgQnV0IEFwb2xsb2RvcnVzLCB3aG8gaGFkIGJlZW4gd2VlcGluZyBhbGwgdGhlIHRpbWUgYmVmb3JlLCB0aGVuIHdhaWxlZCBhbG91ZCBpbiBoaXMgZ3JpZWYgYW5kIG1hZGUgdXMgYWxsIGJyZWFrIGRvd24sIGV4Y2VwdCBTb2NyYXRlcyBoaW1zZWxmLiAgQnV0IGhlIHNhaWQsIOKAnFdoYXQgY29uZHVjdCBpcyB0aGlzLCB5b3Ugc3RyYW5nZSBtZW4hICBJIHNlbnQgdGhlIHdvbWVuIGF3YXkgY2hpZWZseSBmb3IgdGhpcyB2ZXJ5IHJlYXNvbiwgdGhhdCB0aGV5IG1pZ2h0IG5vdCBiZWhhdmUgaW4gdGhpcyBhYnN1cmQgd2F5OyAgZm9yIEkgaGF2ZSBoZWFyZCB0aGF0CjwvdHJhbnNsYXRpb24+"
translation['117.117e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMTdlIiB1bml0PSJzZWN0aW9uIiAvPml0IGlzIGJlc3QgdG8gZGllIGluIHNpbGVuY2UuICBLZWVwIHF1aWV0IGFuZCBiZSBicmF2ZS7igJ0gIFRoZW4gd2Ugd2VyZSBhc2hhbWVkIGFuZCBjb250cm9sbGVkIG91ciB0ZWFycy4gIEhlIHdhbGtlZCBhYm91dCBhbmQsIHdoZW4gaGUgc2FpZCBoaXMgbGVncyB3ZXJlIGhlYXZ5LCBsYXkgZG93biBvbiBoaXMgYmFjaywgZm9yIHN1Y2ggd2FzIHRoZSBhZHZpY2Ugb2YgdGhlIGF0dGVuZGFudC4gIFRoZSBtYW4gd2hvIGhhZCBhZG1pbmlzdGVyZWQgdGhlIHBvaXNvbiBsYWlkIGhpcyBoYW5kcyBvbiBoaW0gYW5kIGFmdGVyIGEgd2hpbGUgZXhhbWluZWQgaGlzIGZlZXQgYW5kIGxlZ3MsIHRoZW4gcGluY2hlZCBoaXMgZm9vdCBoYXJkIGFuZCBhc2tlZCBpZiBoZSBmZWx0IGl0LiAgSGUgc2FpZCDigJxOb+KAnTsgIHRoZW4gYWZ0ZXIgdGhhdCwKPC90cmFuc2xhdGlvbj4="
translation['118.118a'] = ""
translation['2.2a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyYSIgdW5pdD0ic2VjdGlvbiIgLz48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgc3RyYW5nZSB0aGluZyBoYXMgaGFwcGVuZWQsIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwyNjc0ODY3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDI2NzQ4NjciPlNvY3JhdGVzPC9wbGFjZU5hbWU+LCB0aGF0IHlvdSBoYXZlIGxlZnQgeW91ciBhY2N1c3RvbWVkIGhhdW50cyBpbiB0aGUgTHljZXVtIGFuZCBhcmUgbm93IGhhdW50aW5nIHRoZSBwb3J0aWNvIHdoZXJlIHRoZSBraW5nIGFyY2hvbiBzaXRzPyAgRm9yIGl0IGNhbm5vdCBiZSB0aGF0IHlvdSBoYXZlIGFuIGFjdGlvbiBiZWZvcmUgdGhlIGtpbmcsIGFzIEkgaGF2ZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgc3RyYW5nZSB0aGluZyBoYXMgaGFwcGVuZWQsIDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiwyNjc0ODY3IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDI2NzQ4NjciPlNvY3JhdGVzPC9wbGFjZU5hbWU+LCB0aGF0IHlvdSBoYXZlIGxlZnQgeW91ciBhY2N1c3RvbWVkIGhhdW50cyBpbiB0aGUgTHljZXVtIGFuZCBhcmUgbm93IGhhdW50aW5nIHRoZSBwb3J0aWNvIHdoZXJlIHRoZSBraW5nIGFyY2hvbiBzaXRzPyAgRm9yIGl0IGNhbm5vdCBiZSB0aGF0IHlvdSBoYXZlIGFuIGFjdGlvbiBiZWZvcmUgdGhlIGtpbmcsIGFzIEkgaGF2ZS48L3A+PHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDI2NzQ4NjciIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sMjY3NDg2NyI+U29jcmF0ZXM8L3BsYWNlTmFtZT4sIHRoYXQgeW91IGhhdmUgbGVmdCB5b3VyIGFjY3VzdG9tZWQgaGF1bnRzIGluIHRoZSBMeWNldW0gYW5kIGFyZSBub3cgaGF1bnRpbmcgdGhlIHBvcnRpY28gd2hlcmUgdGhlIGtpbmcgYXJjaG9uIHNpdHM/ICBGb3IgaXQgY2Fubm90IGJlIHRoYXQgeW91IGhhdmUgYW4gYWN0aW9uIGJlZm9yZSB0aGUga2luZywgYXMgSSBoYXZlLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PdXIgQXRoZW5pYW5zLCBFdXRoeXBocm8sIGRvIG5vdCBjYWxsIGl0IGFuIGFjdGlvbiwgYnV0IGFuIGluZGljdG1lbnQuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk91ciBBdGhlbmlhbnMsIEV1dGh5cGhybywgZG8gbm90IGNhbGwgaXQgYW4gYWN0aW9uLCBidXQgYW4gaW5kaWN0bWVudC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0PyAgU29tZWJvZHkgaGFzLCBpdCBzZWVtcywgYnJvdWdodCBhbiBpbmRpY3RtZW50IGFnYWluc3QgeW91Owo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMmIiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIEkgZG9uJ3QgYWNjdXNlIHlvdSBvZiBoYXZpbmcgYnJvdWdodCBvbmUgYWdhaW5zdCBhbnlvbmUgZWxzZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQ/ICBTb21lYm9keSBoYXMsIGl0IHNlZW1zLCBicm91Z2h0IGFuIGluZGljdG1lbnQgYWdhaW5zdCB5b3U7CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyYiIgdW5pdD0ic2VjdGlvbiIgLz5mb3IgSSBkb24ndCBhY2N1c2UgeW91IG9mIGhhdmluZyBicm91Z2h0IG9uZSBhZ2FpbnN0IGFueW9uZSBlbHNlLjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['2.2b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyYiIgdW5pdD0ic2VjdGlvbiIgLz5mb3IgSSBkb24ndCBhY2N1c2UgeW91IG9mIGhhdmluZyBicm91Z2h0IG9uZSBhZ2FpbnN0IGFueW9uZSBlbHNlLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkgbm90LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkgbm90LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBzb21lb25lIGVsc2UgYWdhaW5zdCB5b3U/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgc29tZW9uZSBlbHNlIGFnYWluc3QgeW91PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UXVpdGUgc28uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlF1aXRlIHNvLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldobyBpcyBoZT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldobyBpcyBoZT88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgZG9uJ3Qga25vdyB0aGUgbWFuIHZlcnkgd2VsbCBteXNlbGYsIEV1dGh5cGhybywgZm9yIGhlIHNlZW1zIHRvIGJlIGEgeW91bmcgYW5kIHVua25vd24gcGVyc29uLiAgSGlzIG5hbWUsIGhvd2V2ZXIsIGlzIE1lbGV0dXMsIEkgYmVsaWV2ZS4gIEFuZCBoZSBpcyBvZiB0aGUgZGVtZSBvZiBQaXR0aHVzLCBpZiB5b3UgcmVtZW1iZXIgYW55IFBpdHRoaWFuIE1lbGV0dXMsIHdpdGggbG9uZyBoYWlyIGFuZCBvbmx5IGEgbGl0dGxlIGJlYXJkLCBidXQgd2l0aCBhIGhvb2tlZCBub3NlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvbid0IGtub3cgdGhlIG1hbiB2ZXJ5IHdlbGwgbXlzZWxmLCBFdXRoeXBocm8sIGZvciBoZSBzZWVtcyB0byBiZSBhIHlvdW5nIGFuZCB1bmtub3duIHBlcnNvbi4gIEhpcyBuYW1lLCBob3dldmVyLCBpcyBNZWxldHVzLCBJIGJlbGlldmUuICBBbmQgaGUgaXMgb2YgdGhlIGRlbWUgb2YgUGl0dGh1cywgaWYgeW91IHJlbWVtYmVyIGFueSBQaXR0aGlhbiBNZWxldHVzLCB3aXRoIGxvbmcgaGFpciBhbmQgb25seSBhIGxpdHRsZSBiZWFyZCwgYnV0IHdpdGggYSBob29rZWQgbm9zZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvbid0IHJlbWVtYmVyIGhpbSwgU29jcmF0ZXMuICBCdXQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjJjIiB1bml0PSJzZWN0aW9uIiAvPndoYXQgc29ydCBvZiBhbiBpbmRpY3RtZW50IGhhcyBoZSBicm91Z2h0IGFnYWluc3QgeW91PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBkb24ndCByZW1lbWJlciBoaW0sIFNvY3JhdGVzLiAgQnV0CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyYyIgdW5pdD0ic2VjdGlvbiIgLz53aGF0IHNvcnQgb2YgYW4gaW5kaWN0bWVudCBoYXMgaGUgYnJvdWdodCBhZ2FpbnN0IHlvdT88L3A+PC90cmFuc2xhdGlvbj4="
translation['2.2c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyYyIgdW5pdD0ic2VjdGlvbiIgLz53aGF0IHNvcnQgb2YgYW4gaW5kaWN0bWVudCBoYXMgaGUgYnJvdWdodCBhZ2FpbnN0IHlvdT88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hhdCBzb3J0PyAgTm8gbWVhbiBvbmUsIGl0IHNlZW1zIHRvIG1lOyAgZm9yIHRoZSBmYWN0IHRoYXQsIHlvdW5nIGFzIGhlIGlzLCBoZSBoYXMgYXBwcmVoZW5kZWQgc28gaW1wb3J0YW50IGEgbWF0dGVyIHJlZmxlY3RzIG5vIHNtYWxsIGNyZWRpdCB1cG9uIGhpbS4gIEZvciBoZSBzYXlzIGhlIGtub3dzIGhvdyB0aGUgeW91dGggYXJlIGNvcnJ1cHRlZCBhbmQgd2hvIHRob3NlIGFyZSB3aG8gY29ycnVwdCB0aGVtLiAgSGUgbXVzdCBiZSBhIHdpc2UgbWFuOyAgd2hvLCBzZWVpbmcgbXkgbGFjayBvZiB3aXNkb20gYW5kIHRoYXQgSSBhbSBjb3JydXB0aW5nIGhpcyBmZWxsb3dzLCBjb21lcyB0byB0aGUgU3RhdGUsIGFzIGEgYm95IHJ1bnMgdG8gaGlzIG1vdGhlciwgdG8gYWNjdXNlIG1lLiAgQW5kIGhlIHNlZW1zIHRvIG1lIHRvIGJlIHRoZSBvbmx5IG9uZSBvZiB0aGUgcHVibGljIG1lbiB3aG8gYmVnaW5zIGluIHRoZSByaWdodCB3YXk7ICBmb3IgdGhlIHJpZ2h0IHdheQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMmQiIHVuaXQ9InNlY3Rpb24iIC8+aXMgdG8gdGFrZSBjYXJlIG9mIHRoZSB5b3VuZyBtZW4gZmlyc3QsIHRvIG1ha2UgdGhlbSBhcyBnb29kIGFzIHBvc3NpYmxlLCBqdXN0IGFzIGEgZ29vZCBodXNiYW5kbWFuIHdpbGwgbmF0dXJhbGx5IHRha2UgY2FyZSBvZiB0aGUgeW91bmcgcGxhbnRzIGZpcnN0IGFuZCBhZnRlcndhcmRzIG9mIHRoZSByZXN0LiAgQW5kIHNvIE1lbGV0dXMsIHBlcmhhcHMsIGlzIGZpcnN0CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzYSIgdW5pdD0ic2VjdGlvbiIgLz5jbGVhcmluZyBhd2F5IHVzIHdobyBjb3JydXB0IHRoZSB5b3VuZyBwbGFudHMsIGFzIGhlIHNheXM7ICB0aGVuIGFmdGVyIHRoaXMsIHdoZW4gaGUgaGFzIHR1cm5lZCBoaXMgYXR0ZW50aW9uIHRvIHRoZSBvbGRlciBtZW4sIGhlIHdpbGwgYnJpbmcgY291bnRsZXNzIG1vc3QgcHJlY2lvdXMgYmxlc3NpbmdzIHVwb24gdGhlIFN0YXRlLOKAlGF0IGxlYXN0LCB0aGF0IGlzIHRoZSBuYXR1cmFsIG91dGNvbWUgb2YgdGhlIGJlZ2lubmluZyBoZSBoYXMgbWFkZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hhdCBzb3J0PyAgTm8gbWVhbiBvbmUsIGl0IHNlZW1zIHRvIG1lOyAgZm9yIHRoZSBmYWN0IHRoYXQsIHlvdW5nIGFzIGhlIGlzLCBoZSBoYXMgYXBwcmVoZW5kZWQgc28gaW1wb3J0YW50IGEgbWF0dGVyIHJlZmxlY3RzIG5vIHNtYWxsIGNyZWRpdCB1cG9uIGhpbS4gIEZvciBoZSBzYXlzIGhlIGtub3dzIGhvdyB0aGUgeW91dGggYXJlIGNvcnJ1cHRlZCBhbmQgd2hvIHRob3NlIGFyZSB3aG8gY29ycnVwdCB0aGVtLiAgSGUgbXVzdCBiZSBhIHdpc2UgbWFuOyAgd2hvLCBzZWVpbmcgbXkgbGFjayBvZiB3aXNkb20gYW5kIHRoYXQgSSBhbSBjb3JydXB0aW5nIGhpcyBmZWxsb3dzLCBjb21lcyB0byB0aGUgU3RhdGUsIGFzIGEgYm95IHJ1bnMgdG8gaGlzIG1vdGhlciwgdG8gYWNjdXNlIG1lLiAgQW5kIGhlIHNlZW1zIHRvIG1lIHRvIGJlIHRoZSBvbmx5IG9uZSBvZiB0aGUgcHVibGljIG1lbiB3aG8gYmVnaW5zIGluIHRoZSByaWdodCB3YXk7ICBmb3IgdGhlIHJpZ2h0IHdheQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMmQiIHVuaXQ9InNlY3Rpb24iIC8+aXMgdG8gdGFrZSBjYXJlIG9mIHRoZSB5b3VuZyBtZW4gZmlyc3QsIHRvIG1ha2UgdGhlbSBhcyBnb29kIGFzIHBvc3NpYmxlLCBqdXN0IGFzIGEgZ29vZCBodXNiYW5kbWFuIHdpbGwgbmF0dXJhbGx5IHRha2UgY2FyZSBvZiB0aGUgeW91bmcgcGxhbnRzIGZpcnN0IGFuZCBhZnRlcndhcmRzIG9mIHRoZSByZXN0LiAgQW5kIHNvIE1lbGV0dXMsIHBlcmhhcHMsIGlzIGZpcnN0CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzYSIgdW5pdD0ic2VjdGlvbiIgLz5jbGVhcmluZyBhd2F5IHVzIHdobyBjb3JydXB0IHRoZSB5b3VuZyBwbGFudHMsIGFzIGhlIHNheXM7ICB0aGVuIGFmdGVyIHRoaXMsIHdoZW4gaGUgaGFzIHR1cm5lZCBoaXMgYXR0ZW50aW9uIHRvIHRoZSBvbGRlciBtZW4sIGhlIHdpbGwgYnJpbmcgY291bnRsZXNzIG1vc3QgcHJlY2lvdXMgYmxlc3NpbmdzIHVwb24gdGhlIFN0YXRlLOKAlGF0IGxlYXN0LCB0aGF0IGlzIHRoZSBuYXR1cmFsIG91dGNvbWUgb2YgdGhlIGJlZ2lubmluZyBoZSBoYXMgbWFkZS48L3A+PC90cmFuc2xhdGlvbj4="
translation['2.2d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIyZCIgdW5pdD0ic2VjdGlvbiIgLz5pcyB0byB0YWtlIGNhcmUgb2YgdGhlIHlvdW5nIG1lbiBmaXJzdCwgdG8gbWFrZSB0aGVtIGFzIGdvb2QgYXMgcG9zc2libGUsIGp1c3QgYXMgYSBnb29kIGh1c2JhbmRtYW4gd2lsbCBuYXR1cmFsbHkgdGFrZSBjYXJlIG9mIHRoZSB5b3VuZyBwbGFudHMgZmlyc3QgYW5kIGFmdGVyd2FyZHMgb2YgdGhlIHJlc3QuICBBbmQgc28gTWVsZXR1cywgcGVyaGFwcywgaXMgZmlyc3QKPC90cmFuc2xhdGlvbj4="
translation['3.3a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzYSIgdW5pdD0ic2VjdGlvbiIgLz5jbGVhcmluZyBhd2F5IHVzIHdobyBjb3JydXB0IHRoZSB5b3VuZyBwbGFudHMsIGFzIGhlIHNheXM7ICB0aGVuIGFmdGVyIHRoaXMsIHdoZW4gaGUgaGFzIHR1cm5lZCBoaXMgYXR0ZW50aW9uIHRvIHRoZSBvbGRlciBtZW4sIGhlIHdpbGwgYnJpbmcgY291bnRsZXNzIG1vc3QgcHJlY2lvdXMgYmxlc3NpbmdzIHVwb24gdGhlIFN0YXRlLOKAlGF0IGxlYXN0LCB0aGF0IGlzIHRoZSBuYXR1cmFsIG91dGNvbWUgb2YgdGhlIGJlZ2lubmluZyBoZSBoYXMgbWFkZS48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgaG9wZSBpdCBtYXkgYmUgc28sIFNvY3JhdGVzOyAgYnV0IEkgZmVhciB0aGUgb3Bwb3NpdGUgbWF5IHJlc3VsdC4gIEZvciBpdCBzZWVtcyB0byBtZSB0aGF0IGhlIGJlZ2lucyBieSBpbmp1cmluZyB0aGUgU3RhdGUgYXQgaXRzIHZlcnkgaGVhcnQsIHdoZW4gaGUgdW5kZXJ0YWtlcyB0byBoYXJtIHlvdS4gIE5vdyB0ZWxsIG1lLCB3aGF0IGRvZXMgaGUgc2F5IHlvdSBkbyB0aGF0IGNvcnJ1cHRzIHRoZSB5b3VuZz8KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjNiIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBob3BlIGl0IG1heSBiZSBzbywgU29jcmF0ZXM7ICBidXQgSSBmZWFyIHRoZSBvcHBvc2l0ZSBtYXkgcmVzdWx0LiAgRm9yIGl0IHNlZW1zIHRvIG1lIHRoYXQgaGUgYmVnaW5zIGJ5IGluanVyaW5nIHRoZSBTdGF0ZSBhdCBpdHMgdmVyeSBoZWFydCwgd2hlbiBoZSB1bmRlcnRha2VzIHRvIGhhcm0geW91LiAgTm93IHRlbGwgbWUsIHdoYXQgZG9lcyBoZSBzYXkgeW91IGRvIHRoYXQgY29ycnVwdHMgdGhlIHlvdW5nPwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iM2IiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvdHJhbnNsYXRpb24+"
translation['3.3b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzYiIgdW5pdD0ic2VjdGlvbiIgLz48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QWJzdXJkIHRoaW5ncywgbXkgZnJpZW5kLCBhdCBmaXJzdCBoZWFyaW5nLiAgRm9yIGhlIHNheXMgSSBhbSBhIG1ha2VyIG9mIGdvZHM7ICBhbmQgYmVjYXVzZSBJIG1ha2UgbmV3IGdvZHMgYW5kIGRvIG5vdCBiZWxpZXZlIGluIHRoZSBvbGQgb25lcywgaGUgaW5kaWN0ZWQgbWUgZm9yIHRoZSBzYWtlIG9mIHRoZXNlIG9sZCBvbmVzLCBhcyBoZSBzYXlzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BYnN1cmQgdGhpbmdzLCBteSBmcmllbmQsIGF0IGZpcnN0IGhlYXJpbmcuICBGb3IgaGUgc2F5cyBJIGFtIGEgbWFrZXIgb2YgZ29kczsgIGFuZCBiZWNhdXNlIEkgbWFrZSBuZXcgZ29kcyBhbmQgZG8gbm90IGJlbGlldmUgaW4gdGhlIG9sZCBvbmVzLCBoZSBpbmRpY3RlZCBtZSBmb3IgdGhlIHNha2Ugb2YgdGhlc2Ugb2xkIG9uZXMsIGFzIGhlIHNheXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB1bmRlcnN0YW5kLCBTb2NyYXRlczsgIGl0IGlzIGJlY2F1c2UgeW91IHNheSB0aGUgZGl2aW5lIG1vbml0b3Iga2VlcHMgY29taW5nIHRvIHlvdS4gIFNvIGhlIGhhcyBicm91Z2h0IHRoZSBpbmRpY3RtZW50IGFnYWluc3QgeW91IGZvciBtYWtpbmcgaW5ub3ZhdGlvbnMgaW4gcmVsaWdpb24sIGFuZCBoZSBpcyBnb2luZyBpbnRvIGNvdXJ0IHRvIHNsYW5kZXIgeW91LCBrbm93aW5nIHRoYXQgc2xhbmRlcnMgb24gc3VjaCBzdWJqZWN0cyBhcmUgcmVhZGlseSBhY2NlcHRlZCBieSB0aGUgcGVvcGxlLiAgV2h5LCB0aGV5IGV2ZW4gbGF1Z2ggYXQgbWUgYW5kIHNheSBJIGFtIGNyYXp5CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzYyIgdW5pdD0ic2VjdGlvbiIgLz53aGVuIEkgc2F5IGFueXRoaW5nIGluIHRoZSBhc3NlbWJseSBhYm91dCBkaXZpbmUgdGhpbmdzIGFuZCBmb3JldGVsbCB0aGUgZnV0dXJlIHRvIHRoZW0uICBBbmQgeWV0IHRoZXJlIGlzIG5vdCBvbmUgb2YgdGhlIHRoaW5ncyBJIGhhdmUgZm9yZXRvbGQgdGhhdCBpcyBub3QgdHJ1ZTsgIGJ1dCB0aGV5IGFyZSBqZWFsb3VzIG9mIGFsbCBzdWNoIG1lbiBhcyB5b3UgYW5kIEkgYXJlLiAgSG93ZXZlciwgd2UgbXVzdCBub3QgYmUgZGlzdHVyYmVkLCBidXQgbXVzdCBjb21lIHRvIGNsb3NlIHF1YXJ0ZXJzIHdpdGggdGhlbS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdW5kZXJzdGFuZCwgU29jcmF0ZXM7ICBpdCBpcyBiZWNhdXNlIHlvdSBzYXkgdGhlIGRpdmluZSBtb25pdG9yIGtlZXBzIGNvbWluZyB0byB5b3UuICBTbyBoZSBoYXMgYnJvdWdodCB0aGUgaW5kaWN0bWVudCBhZ2FpbnN0IHlvdSBmb3IgbWFraW5nIGlubm92YXRpb25zIGluIHJlbGlnaW9uLCBhbmQgaGUgaXMgZ29pbmcgaW50byBjb3VydCB0byBzbGFuZGVyIHlvdSwga25vd2luZyB0aGF0IHNsYW5kZXJzIG9uIHN1Y2ggc3ViamVjdHMgYXJlIHJlYWRpbHkgYWNjZXB0ZWQgYnkgdGhlIHBlb3BsZS4gIFdoeSwgdGhleSBldmVuIGxhdWdoIGF0IG1lIGFuZCBzYXkgSSBhbSBjcmF6eQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iM2MiIHVuaXQ9InNlY3Rpb24iIC8+d2hlbiBJIHNheSBhbnl0aGluZyBpbiB0aGUgYXNzZW1ibHkgYWJvdXQgZGl2aW5lIHRoaW5ncyBhbmQgZm9yZXRlbGwgdGhlIGZ1dHVyZSB0byB0aGVtLiAgQW5kIHlldCB0aGVyZSBpcyBub3Qgb25lIG9mIHRoZSB0aGluZ3MgSSBoYXZlIGZvcmV0b2xkIHRoYXQgaXMgbm90IHRydWU7ICBidXQgdGhleSBhcmUgamVhbG91cyBvZiBhbGwgc3VjaCBtZW4gYXMgeW91IGFuZCBJIGFyZS4gIEhvd2V2ZXIsIHdlIG11c3Qgbm90IGJlIGRpc3R1cmJlZCwgYnV0IG11c3QgY29tZSB0byBjbG9zZSBxdWFydGVycyB3aXRoIHRoZW0uPC9wPjwvdHJhbnNsYXRpb24+"
translation['3.3c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzYyIgdW5pdD0ic2VjdGlvbiIgLz53aGVuIEkgc2F5IGFueXRoaW5nIGluIHRoZSBhc3NlbWJseSBhYm91dCBkaXZpbmUgdGhpbmdzIGFuZCBmb3JldGVsbCB0aGUgZnV0dXJlIHRvIHRoZW0uICBBbmQgeWV0IHRoZXJlIGlzIG5vdCBvbmUgb2YgdGhlIHRoaW5ncyBJIGhhdmUgZm9yZXRvbGQgdGhhdCBpcyBub3QgdHJ1ZTsgIGJ1dCB0aGV5IGFyZSBqZWFsb3VzIG9mIGFsbCBzdWNoIG1lbiBhcyB5b3UgYW5kIEkgYXJlLiAgSG93ZXZlciwgd2UgbXVzdCBub3QgYmUgZGlzdHVyYmVkLCBidXQgbXVzdCBjb21lIHRvIGNsb3NlIHF1YXJ0ZXJzIHdpdGggdGhlbS48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TXkgZGVhciBFdXRoeXBocm8sIHRoZWlyIHJpZGljdWxlIGlzIHBlcmhhcHMgb2Ygbm8gY29uc2VxdWVuY2UuICBGb3IgdGhlIEF0aGVuaWFucywgSSBmYW5jeSwgYXJlIG5vdCBtdWNoIGNvbmNlcm5lZCwgaWYgdGhleSB0aGluayBhIG1hbiBpcyBjbGV2ZXIsIHByb3ZpZGVkIGhlIGRvZXMgbm90IGltcGFydCBoaXMgY2xldmVyIG5vdGlvbnMgdG8gb3RoZXJzOyAgYnV0IHdoZW4gdGhleSB0aGluayBoZSBtYWtlcyBvdGhlcnMgdG8gYmUgbGlrZSBoaW1zZWxmLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iM2QiIHVuaXQ9InNlY3Rpb24iIC8+dGhleSBhcmUgYW5ncnkgd2l0aCBoaW0sIGVpdGhlciB0aHJvdWdoIGplYWxvdXN5LCBhcyB5b3Ugc2F5LCBvciBmb3Igc29tZSBvdGhlciByZWFzb24uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk15IGRlYXIgRXV0aHlwaHJvLCB0aGVpciByaWRpY3VsZSBpcyBwZXJoYXBzIG9mIG5vIGNvbnNlcXVlbmNlLiAgRm9yIHRoZSBBdGhlbmlhbnMsIEkgZmFuY3ksIGFyZSBub3QgbXVjaCBjb25jZXJuZWQsIGlmIHRoZXkgdGhpbmsgYSBtYW4gaXMgY2xldmVyLCBwcm92aWRlZCBoZSBkb2VzIG5vdCBpbXBhcnQgaGlzIGNsZXZlciBub3Rpb25zIHRvIG90aGVyczsgIGJ1dCB3aGVuIHRoZXkgdGhpbmsgaGUgbWFrZXMgb3RoZXJzIHRvIGJlIGxpa2UgaGltc2VsZiwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjNkIiB1bml0PSJzZWN0aW9uIiAvPnRoZXkgYXJlIGFuZ3J5IHdpdGggaGltLCBlaXRoZXIgdGhyb3VnaCBqZWFsb3VzeSwgYXMgeW91IHNheSwgb3IgZm9yIHNvbWUgb3RoZXIgcmVhc29uLjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['3.3d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzZCIgdW5pdD0ic2VjdGlvbiIgLz50aGV5IGFyZSBhbmdyeSB3aXRoIGhpbSwgZWl0aGVyIHRocm91Z2ggamVhbG91c3ksIGFzIHlvdSBzYXksIG9yIGZvciBzb21lIG90aGVyIHJlYXNvbi48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgZG9uJ3QgbXVjaCBkZXNpcmUgdG8gdGVzdCB0aGVpciBzZW50aW1lbnRzIHRvd2FyZCBtZSBpbiB0aGlzIG1hdHRlci48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgZG9uJ3QgbXVjaCBkZXNpcmUgdG8gdGVzdCB0aGVpciBzZW50aW1lbnRzIHRvd2FyZCBtZSBpbiB0aGlzIG1hdHRlci48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vLCBmb3IgcGVyaGFwcyB0aGV5IHRoaW5rIHRoYXQgeW91IGFyZSByZXNlcnZlZCBhbmQgdW53aWxsaW5nIHRvIGltcGFydCB5b3VyIHdpc2RvbS4gIEJ1dCBJIGZlYXIgdGhhdCBiZWNhdXNlIG9mIG15IGxvdmUgb2YgbWVuIHRoZXkgdGhpbmsgdGhhdCBJIG5vdCBvbmx5IHBvdXIgbXlzZWxmIG91dCBjb3Bpb3VzbHkgdG8gYW55b25lIGFuZCBldmVyeW9uZSB3aXRob3V0IHBheW1lbnQsIGJ1dCB0aGF0IEkgd291bGQgZXZlbiBwYXkgc29tZXRoaW5nIG15c2VsZiwgaWYgYW55b25lIHdvdWxkIGxpc3RlbiB0byBtZS4gIE5vdyBpZiwgYXMgSSB3YXMgc2F5aW5nIGp1c3Qgbm93LCB0aGV5IHdlcmUgdG8gbGF1Z2ggYXQgbWUsIGFzIHlvdSBzYXkgdGhleSBkbyBhdCB5b3UsIGl0IHdvdWxkIG5vdCBiZSBhdCBhbGwgdW5wbGVhc2FudAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iM2UiIHVuaXQ9InNlY3Rpb24iIC8+dG8gcGFzcyB0aGUgdGltZSBpbiB0aGUgY291cnQgd2l0aCBqZXN0cyBhbmQgbGF1Z2h0ZXI7ICBidXQgaWYgdGhleSBhcmUgaW4gZWFybmVzdCwgdGhlbiBvbmx5IHNvb3Roc2F5ZXJzIGxpa2UgeW91IGNhbiB0ZWxsIGhvdyB0aGlzIHdpbGwgZW5kLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ObywgZm9yIHBlcmhhcHMgdGhleSB0aGluayB0aGF0IHlvdSBhcmUgcmVzZXJ2ZWQgYW5kIHVud2lsbGluZyB0byBpbXBhcnQgeW91ciB3aXNkb20uICBCdXQgSSBmZWFyIHRoYXQgYmVjYXVzZSBvZiBteSBsb3ZlIG9mIG1lbiB0aGV5IHRoaW5rIHRoYXQgSSBub3Qgb25seSBwb3VyIG15c2VsZiBvdXQgY29waW91c2x5IHRvIGFueW9uZSBhbmQgZXZlcnlvbmUgd2l0aG91dCBwYXltZW50LCBidXQgdGhhdCBJIHdvdWxkIGV2ZW4gcGF5IHNvbWV0aGluZyBteXNlbGYsIGlmIGFueW9uZSB3b3VsZCBsaXN0ZW4gdG8gbWUuICBOb3cgaWYsIGFzIEkgd2FzIHNheWluZyBqdXN0IG5vdywgdGhleSB3ZXJlIHRvIGxhdWdoIGF0IG1lLCBhcyB5b3Ugc2F5IHRoZXkgZG8gYXQgeW91LCBpdCB3b3VsZCBub3QgYmUgYXQgYWxsIHVucGxlYXNhbnQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjNlIiB1bml0PSJzZWN0aW9uIiAvPnRvIHBhc3MgdGhlIHRpbWUgaW4gdGhlIGNvdXJ0IHdpdGggamVzdHMgYW5kIGxhdWdodGVyOyAgYnV0IGlmIHRoZXkgYXJlIGluIGVhcm5lc3QsIHRoZW4gb25seSBzb290aHNheWVycyBsaWtlIHlvdSBjYW4gdGVsbCBob3cgdGhpcyB3aWxsIGVuZC48L3A+PC90cmFuc2xhdGlvbj4="
translation['3.3e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIzZSIgdW5pdD0ic2VjdGlvbiIgLz50byBwYXNzIHRoZSB0aW1lIGluIHRoZSBjb3VydCB3aXRoIGplc3RzIGFuZCBsYXVnaHRlcjsgIGJ1dCBpZiB0aGV5IGFyZSBpbiBlYXJuZXN0LCB0aGVuIG9ubHkgc29vdGhzYXllcnMgbGlrZSB5b3UgY2FuIHRlbGwgaG93IHRoaXMgd2lsbCBlbmQuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsLCBTb2NyYXRlcywgcGVyaGFwcyBpdCB3b24ndCBhbW91bnQgdG8gbXVjaCwgYW5kIHlvdSB3aWxsIGJyaW5nIHlvdXIgY2FzZSB0byBhIHNhdGlzZmFjdG9yeSBlbmRpbmcsIGFzIEkgdGhpbmsgSSBzaGFsbCBtaW5lLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgU29jcmF0ZXMsIHBlcmhhcHMgaXQgd29uJ3QgYW1vdW50IHRvIG11Y2gsIGFuZCB5b3Ugd2lsbCBicmluZyB5b3VyIGNhc2UgdG8gYSBzYXRpc2ZhY3RvcnkgZW5kaW5nLCBhcyBJIHRoaW5rIEkgc2hhbGwgbWluZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgaXMgeW91ciBjYXNlLCBFdXRoeXBocm8/IEFyZSB5b3UgZGVmZW5kaW5nIG9yIHByb3NlY3V0aW5nPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IGlzIHlvdXIgY2FzZSwgRXV0aHlwaHJvPyBBcmUgeW91IGRlZmVuZGluZyBvciBwcm9zZWN1dGluZz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Qcm9zZWN1dGluZy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlByb3NlY3V0aW5nLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hvbT8KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjQiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjRhIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaG9tPwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNGEiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvdHJhbnNsYXRpb24+"
translation['4.4a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0YSIgdW5pdD0ic2VjdGlvbiIgLz48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlN1Y2ggYSBtYW4gdGhhdCB0aGV5IHRoaW5rIEkgYW0gaW5zYW5lIGJlY2F1c2UgSSBhbSBwcm9zZWN1dGluZzxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgR3JlZWsgd29yZCBoYXMgbXVjaCB0aGUgc2FtZSBtZWFuaW5nIGFzIHRoZSBMYXRpbiDigJxwcm9zZXF1b3Is4oCdIGZyb20gd2hpY2ggdGhlIEVuZ2xpc2ggJ3Byb3NlY3V0ZScgaXMgZGVyaXZlZCwgJ2ZvbGxvdywnICdwdXJzdWUsJyBhbmQgaXMgYXQgdGhlIHNhbWUgdGltZSB0aGUgdGVjaG5pY2FsIHRlcm0gZm9yICdwcm9zZWN1dGUuJzwvbm90ZT4gaGltLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U3VjaCBhIG1hbiB0aGF0IHRoZXkgdGhpbmsgSSBhbSBpbnNhbmUgYmVjYXVzZSBJIGFtIHByb3NlY3V0aW5nPG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlRoZSBHcmVlayB3b3JkIGhhcyBtdWNoIHRoZSBzYW1lIG1lYW5pbmcgYXMgdGhlIExhdGluIOKAnHByb3NlcXVvcizigJ0gZnJvbSB3aGljaCB0aGUgRW5nbGlzaCAncHJvc2VjdXRlJyBpcyBkZXJpdmVkLCAnZm9sbG93LCcgJ3B1cnN1ZSwnIGFuZCBpcyBhdCB0aGUgc2FtZSB0aW1lIHRoZSB0ZWNobmljYWwgdGVybSBmb3IgJ3Byb3NlY3V0ZS4nPC9ub3RlPiBoaW0uPC9wPjxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5UaGUgR3JlZWsgd29yZCBoYXMgbXVjaCB0aGUgc2FtZSBtZWFuaW5nIGFzIHRoZSBMYXRpbiDigJxwcm9zZXF1b3Is4oCdIGZyb20gd2hpY2ggdGhlIEVuZ2xpc2ggJ3Byb3NlY3V0ZScgaXMgZGVyaXZlZCwgJ2ZvbGxvdywnICdwdXJzdWUsJyBhbmQgaXMgYXQgdGhlIHNhbWUgdGltZSB0aGUgdGVjaG5pY2FsIHRlcm0gZm9yICdwcm9zZWN1dGUuJzwvbm90ZT4gaGltLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaHk/ICBBcmUgeW91IHByb3NlY3V0aW5nIG9uZSB3aG8gaGFzIHdpbmdzIHRvIGZseSBhd2F5IHdpdGg/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoeT8gIEFyZSB5b3UgcHJvc2VjdXRpbmcgb25lIHdobyBoYXMgd2luZ3MgdG8gZmx5IGF3YXkgd2l0aD88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ObyBmbHlpbmcgZm9yIGhpbSBhdCBoaXMgcmlwZSBvbGQgYWdlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm8gZmx5aW5nIGZvciBoaW0gYXQgaGlzIHJpcGUgb2xkIGFnZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldobyBpcyBoZT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2hvIGlzIGhlPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk15IGZhdGhlci48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk15IGZhdGhlci48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPllvdXIgZmF0aGVyLCBteSBkZWFyIG1hbj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WW91ciBmYXRoZXIsIG15IGRlYXIgbWFuPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCB3aGF0IGlzIHRoZSBjaGFyZ2UsIGFuZCB3aGF0IGlzIHRoZSBzdWl0IGFib3V0PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgd2hhdCBpcyB0aGUgY2hhcmdlLCBhbmQgd2hhdCBpcyB0aGUgc3VpdCBhYm91dD88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5NdXJkZXIsIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TXVyZGVyLCBTb2NyYXRlcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkhlcmFjbGVzISAgU3VyZWx5LCBFdXRoeXBocm8sIG1vc3QgcGVvcGxlIGRvIG5vdCBrbm93IHdoZXJlIHRoZSByaWdodCBsaWVzOyAgZm9yIEkgZmFuY3kgaXQgaXMgbm90IGV2ZXJ5b25lIHdobyBjYW4gcmlnaHRseSBkbyB3aGF0IHlvdSBhcmUgZG9pbmcsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0YiIgdW5pdD0ic2VjdGlvbiIgLz5idXQgb25seSBvbmUgd2hvIGlzIGFscmVhZHkgdmVyeSBmYXIgYWR2YW5jZWQgaW4gd2lzZG9tLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5IZXJhY2xlcyEgIFN1cmVseSwgRXV0aHlwaHJvLCBtb3N0IHBlb3BsZSBkbyBub3Qga25vdyB3aGVyZSB0aGUgcmlnaHQgbGllczsgIGZvciBJIGZhbmN5IGl0IGlzIG5vdCBldmVyeW9uZSB3aG8gY2FuIHJpZ2h0bHkgZG8gd2hhdCB5b3UgYXJlIGRvaW5nLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNGIiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IG9ubHkgb25lIHdobyBpcyBhbHJlYWR5IHZlcnkgZmFyIGFkdmFuY2VkIGluIHdpc2RvbS48L3A+PC90cmFuc2xhdGlvbj4="
translation['4.4b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0YiIgdW5pdD0ic2VjdGlvbiIgLz5idXQgb25seSBvbmUgd2hvIGlzIGFscmVhZHkgdmVyeSBmYXIgYWR2YW5jZWQgaW4gd2lzZG9tLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VmVyeSBmYXIsIGluZGVlZCwgU29jcmF0ZXMsIGJ5IFpldXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5WZXJ5IGZhciwgaW5kZWVkLCBTb2NyYXRlcywgYnkgWmV1cy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklzIHRoZSBvbmUgd2hvIHdhcyBraWxsZWQgYnkgeW91ciBmYXRoZXIgYSByZWxhdGl2ZT8gIEJ1dCBvZiBjb3Vyc2UgaGUgd2FzOyAgZm9yIHlvdSB3b3VsZCBub3QgYnJpbmcgYSBjaGFyZ2Ugb2YgbXVyZGVyIGFnYWluc3QgaGltIG9uIGEgc3RyYW5nZXIncyBhY2NvdW50LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JcyB0aGUgb25lIHdobyB3YXMga2lsbGVkIGJ5IHlvdXIgZmF0aGVyIGEgcmVsYXRpdmU/ICBCdXQgb2YgY291cnNlIGhlIHdhczsgIGZvciB5b3Ugd291bGQgbm90IGJyaW5nIGEgY2hhcmdlIG9mIG11cmRlciBhZ2FpbnN0IGhpbSBvbiBhIHN0cmFuZ2VyJ3MgYWNjb3VudC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JdCBpcyByaWRpY3Vsb3VzLCBTb2NyYXRlcywgdGhhdCB5b3UgdGhpbmsgaXQgbWF0dGVycyB3aGV0aGVyIHRoZSBtYW4gd2hvIHdhcyBraWxsZWQgd2FzIGEgc3RyYW5nZXIgb3IgYSByZWxhdGl2ZSwgYW5kIGRvIG5vdCBzZWUgdGhhdCB0aGUgb25seSB0aGluZyB0byBjb25zaWRlciBpcyB3aGV0aGVyIHRoZSBhY3Rpb24gb2YgdGhlIHNsYXllciB3YXMganVzdGlmaWVkIG9yIG5vdCwgYW5kIHRoYXQgaWYgaXQgd2FzIGp1c3RpZmllZCBvbmUgb3VnaHQgdG8gbGV0IGhpbSBhbG9uZSwgYW5kIGlmIG5vdCwgb25lIG91Z2h0IHRvIHByb2NlZWQgYWdhaW5zdCBoaW0sIGV2ZW4gaWYgaGUgc2hhcmUgb25lJ3MgaGVhcnRoCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0YyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgZWF0IGF0IG9uZSdzIHRhYmxlLiAgRm9yIHRoZSBwb2xsdXRpb24gaXMgdGhlIHNhbWUgaWYgeW91IGFzc29jaWF0ZSBrbm93aW5nbHkgd2l0aCBzdWNoIGEgbWFuIGFuZCBkbyBub3QgcHVyaWZ5IHlvdXJzZWxmIGFuZCBoaW0gYnkgcHJvY2VlZGluZyBhZ2FpbnN0IGhpbS4gIEluIHRoaXMgY2FzZSwgdGhlIG1hbiB3aG8gd2FzIGtpbGxlZCB3YXMgYSBoaXJlZCB3b3JrbWFuIG9mIG1pbmUsIGFuZCB3aGVuIHdlIHdlcmUgZmFybWluZyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzkwOSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAzOTA5Ij5OYXhvczwvcGxhY2VOYW1lPiwgaGUgd2FzIHdvcmtpbmcgdGhlcmUgb24gb3VyIGxhbmQuICBOb3cgaGUgZ290IGRydW5rLCBnb3QgYW5ncnkgd2l0aCBvbmUgb2Ygb3VyIGhvdXNlIHNsYXZlcywgYW5kIGJ1dGNoZXJlZCBoaW0uICBTbyBteSBmYXRoZXIgYm91bmQgaGltIGhhbmQgYW5kIGZvb3QsIHRocmV3IGhpbSBpbnRvIGEgZGl0Y2gsIGFuZCBzZW50IGEgbWFuIGhlcmUgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMTM5MyI+QXRoZW5zPC9wbGFjZU5hbWU+IHRvIGFzayB0aGUgcmVsaWdpb3VzIGFkdmlzZXIgd2hhdCBoZSBvdWdodAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNGQiIHVuaXQ9InNlY3Rpb24iIC8+dG8gZG8uICBJbiB0aGUgbWVhbnRpbWUgaGUgcGFpZCBubyBhdHRlbnRpb24gdG8gdGhlIG1hbiBhcyBoZSBsYXkgdGhlcmUgYm91bmQsIGFuZCBuZWdsZWN0ZWQgaGltLCB0aGlua2luZyB0aGF0IGhlIHdhcyBhIG11cmRlcmVyIGFuZCBpdCBkaWQgbm90IG1hdHRlciBpZiBoZSB3ZXJlIHRvIGRpZS4gIEFuZCB0aGF0IGlzIGp1c3Qgd2hhdCBoYXBwZW5lZCB0byBoaW0uICBGb3IgaGUgZGllZCBvZiBodW5nZXIgYW5kIGNvbGQgYW5kIGhpcyBib25kcyBiZWZvcmUgdGhlIG1lc3NlbmdlciBjYW1lIGJhY2sgZnJvbSB0aGUgYWR2aXNlci4gIE5vdyBteSBmYXRoZXIgYW5kIHRoZSByZXN0IG9mIG15IHJlbGF0aXZlcyBhcmUgYW5ncnkgd2l0aCBtZSwgYmVjYXVzZSBmb3IgdGhlIHNha2Ugb2YgdGhpcyBtdXJkZXJlciBJIGFtIHByb3NlY3V0aW5nIG15IGZhdGhlciBmb3IgbXVyZGVyLiAgRm9yIHRoZXkgc2F5IGhlIGRpZCBub3Qga2lsbCBoaW0sIGFuZCBpZiBoZSBoYWQga2lsbGVkIGhpbSBuZXZlciBzbyBtdWNoLCB5ZXQgc2luY2UgdGhlIGRlYWQgbWFuIHdhcyBhIG11cmRlcmVyLCBJIG91Z2h0IG5vdCB0byB0cm91YmxlIG15c2VsZiBhYm91dCBzdWNoIGEgZmVsbG93LAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNGUiIHVuaXQ9InNlY3Rpb24iIC8+YmVjYXVzZSBpdCBpcyB1bmhvbHkgZm9yIGEgc29uIHRvIHByb3NlY3V0ZSBoaXMgZmF0aGVyIGZvciBtdXJkZXIuICBXaGljaCBzaG93cyBob3cgbGl0dGxlIHRoZXkga25vdyB3aGF0IHRoZSBkaXZpbmUgbGF3IGlzIGluIHJlZ2FyZCB0byBob2xpbmVzcyBhbmQgdW5ob2xpbmVzcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkl0IGlzIHJpZGljdWxvdXMsIFNvY3JhdGVzLCB0aGF0IHlvdSB0aGluayBpdCBtYXR0ZXJzIHdoZXRoZXIgdGhlIG1hbiB3aG8gd2FzIGtpbGxlZCB3YXMgYSBzdHJhbmdlciBvciBhIHJlbGF0aXZlLCBhbmQgZG8gbm90IHNlZSB0aGF0IHRoZSBvbmx5IHRoaW5nIHRvIGNvbnNpZGVyIGlzIHdoZXRoZXIgdGhlIGFjdGlvbiBvZiB0aGUgc2xheWVyIHdhcyBqdXN0aWZpZWQgb3Igbm90LCBhbmQgdGhhdCBpZiBpdCB3YXMganVzdGlmaWVkIG9uZSBvdWdodCB0byBsZXQgaGltIGFsb25lLCBhbmQgaWYgbm90LCBvbmUgb3VnaHQgdG8gcHJvY2VlZCBhZ2FpbnN0IGhpbSwgZXZlbiBpZiBoZSBzaGFyZSBvbmUncyBoZWFydGgKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjRjIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBlYXQgYXQgb25lJ3MgdGFibGUuICBGb3IgdGhlIHBvbGx1dGlvbiBpcyB0aGUgc2FtZSBpZiB5b3UgYXNzb2NpYXRlIGtub3dpbmdseSB3aXRoIHN1Y2ggYSBtYW4gYW5kIGRvIG5vdCBwdXJpZnkgeW91cnNlbGYgYW5kIGhpbSBieSBwcm9jZWVkaW5nIGFnYWluc3QgaGltLiAgSW4gdGhpcyBjYXNlLCB0aGUgbWFuIHdobyB3YXMga2lsbGVkIHdhcyBhIGhpcmVkIHdvcmttYW4gb2YgbWluZSwgYW5kIHdoZW4gd2Ugd2VyZSBmYXJtaW5nIGF0IDxwbGFjZU5hbWUgYXV0aG5hbWU9InRnbiw3MDAzOTA5IiBjbGFzcz0idHJhbnNsYXRpb24iIGtleT0idGduLDcwMDM5MDkiPk5heG9zPC9wbGFjZU5hbWU+LCBoZSB3YXMgd29ya2luZyB0aGVyZSBvbiBvdXIgbGFuZC4gIE5vdyBoZSBnb3QgZHJ1bmssIGdvdCBhbmdyeSB3aXRoIG9uZSBvZiBvdXIgaG91c2Ugc2xhdmVzLCBhbmQgYnV0Y2hlcmVkIGhpbS4gIFNvIG15IGZhdGhlciBib3VuZCBoaW0gaGFuZCBhbmQgZm9vdCwgdGhyZXcgaGltIGludG8gYSBkaXRjaCwgYW5kIHNlbnQgYSBtYW4gaGVyZSB0byA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMTM5MyIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAxMzkzIj5BdGhlbnM8L3BsYWNlTmFtZT4gdG8gYXNrIHRoZSByZWxpZ2lvdXMgYWR2aXNlciB3aGF0IGhlIG91Z2h0CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0ZCIgdW5pdD0ic2VjdGlvbiIgLz50byBkby4gIEluIHRoZSBtZWFudGltZSBoZSBwYWlkIG5vIGF0dGVudGlvbiB0byB0aGUgbWFuIGFzIGhlIGxheSB0aGVyZSBib3VuZCwgYW5kIG5lZ2xlY3RlZCBoaW0sIHRoaW5raW5nIHRoYXQgaGUgd2FzIGEgbXVyZGVyZXIgYW5kIGl0IGRpZCBub3QgbWF0dGVyIGlmIGhlIHdlcmUgdG8gZGllLiAgQW5kIHRoYXQgaXMganVzdCB3aGF0IGhhcHBlbmVkIHRvIGhpbS4gIEZvciBoZSBkaWVkIG9mIGh1bmdlciBhbmQgY29sZCBhbmQgaGlzIGJvbmRzIGJlZm9yZSB0aGUgbWVzc2VuZ2VyIGNhbWUgYmFjayBmcm9tIHRoZSBhZHZpc2VyLiAgTm93IG15IGZhdGhlciBhbmQgdGhlIHJlc3Qgb2YgbXkgcmVsYXRpdmVzIGFyZSBhbmdyeSB3aXRoIG1lLCBiZWNhdXNlIGZvciB0aGUgc2FrZSBvZiB0aGlzIG11cmRlcmVyIEkgYW0gcHJvc2VjdXRpbmcgbXkgZmF0aGVyIGZvciBtdXJkZXIuICBGb3IgdGhleSBzYXkgaGUgZGlkIG5vdCBraWxsIGhpbSwgYW5kIGlmIGhlIGhhZCBraWxsZWQgaGltIG5ldmVyIHNvIG11Y2gsIHlldCBzaW5jZSB0aGUgZGVhZCBtYW4gd2FzIGEgbXVyZGVyZXIsIEkgb3VnaHQgbm90IHRvIHRyb3VibGUgbXlzZWxmIGFib3V0IHN1Y2ggYSBmZWxsb3csCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0ZSIgdW5pdD0ic2VjdGlvbiIgLz5iZWNhdXNlIGl0IGlzIHVuaG9seSBmb3IgYSBzb24gdG8gcHJvc2VjdXRlIGhpcyBmYXRoZXIgZm9yIG11cmRlci4gIFdoaWNoIHNob3dzIGhvdyBsaXR0bGUgdGhleSBrbm93IHdoYXQgdGhlIGRpdmluZSBsYXcgaXMgaW4gcmVnYXJkIHRvIGhvbGluZXNzIGFuZCB1bmhvbGluZXNzLjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['4.4c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0YyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgZWF0IGF0IG9uZSdzIHRhYmxlLiAgRm9yIHRoZSBwb2xsdXRpb24gaXMgdGhlIHNhbWUgaWYgeW91IGFzc29jaWF0ZSBrbm93aW5nbHkgd2l0aCBzdWNoIGEgbWFuIGFuZCBkbyBub3QgcHVyaWZ5IHlvdXJzZWxmIGFuZCBoaW0gYnkgcHJvY2VlZGluZyBhZ2FpbnN0IGhpbS4gIEluIHRoaXMgY2FzZSwgdGhlIG1hbiB3aG8gd2FzIGtpbGxlZCB3YXMgYSBoaXJlZCB3b3JrbWFuIG9mIG1pbmUsIGFuZCB3aGVuIHdlIHdlcmUgZmFybWluZyBhdCA8cGxhY2VOYW1lIGF1dGhuYW1lPSJ0Z24sNzAwMzkwOSIgY2xhc3M9InRyYW5zbGF0aW9uIiBrZXk9InRnbiw3MDAzOTA5Ij5OYXhvczwvcGxhY2VOYW1lPiwgaGUgd2FzIHdvcmtpbmcgdGhlcmUgb24gb3VyIGxhbmQuICBOb3cgaGUgZ290IGRydW5rLCBnb3QgYW5ncnkgd2l0aCBvbmUgb2Ygb3VyIGhvdXNlIHNsYXZlcywgYW5kIGJ1dGNoZXJlZCBoaW0uICBTbyBteSBmYXRoZXIgYm91bmQgaGltIGhhbmQgYW5kIGZvb3QsIHRocmV3IGhpbSBpbnRvIGEgZGl0Y2gsIGFuZCBzZW50IGEgbWFuIGhlcmUgdG8gPHBsYWNlTmFtZSBhdXRobmFtZT0idGduLDcwMDEzOTMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIga2V5PSJ0Z24sNzAwMTM5MyI+QXRoZW5zPC9wbGFjZU5hbWU+IHRvIGFzayB0aGUgcmVsaWdpb3VzIGFkdmlzZXIgd2hhdCBoZSBvdWdodAo8L3RyYW5zbGF0aW9uPg=="
translation['4.4d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0ZCIgdW5pdD0ic2VjdGlvbiIgLz50byBkby4gIEluIHRoZSBtZWFudGltZSBoZSBwYWlkIG5vIGF0dGVudGlvbiB0byB0aGUgbWFuIGFzIGhlIGxheSB0aGVyZSBib3VuZCwgYW5kIG5lZ2xlY3RlZCBoaW0sIHRoaW5raW5nIHRoYXQgaGUgd2FzIGEgbXVyZGVyZXIgYW5kIGl0IGRpZCBub3QgbWF0dGVyIGlmIGhlIHdlcmUgdG8gZGllLiAgQW5kIHRoYXQgaXMganVzdCB3aGF0IGhhcHBlbmVkIHRvIGhpbS4gIEZvciBoZSBkaWVkIG9mIGh1bmdlciBhbmQgY29sZCBhbmQgaGlzIGJvbmRzIGJlZm9yZSB0aGUgbWVzc2VuZ2VyIGNhbWUgYmFjayBmcm9tIHRoZSBhZHZpc2VyLiAgTm93IG15IGZhdGhlciBhbmQgdGhlIHJlc3Qgb2YgbXkgcmVsYXRpdmVzIGFyZSBhbmdyeSB3aXRoIG1lLCBiZWNhdXNlIGZvciB0aGUgc2FrZSBvZiB0aGlzIG11cmRlcmVyIEkgYW0gcHJvc2VjdXRpbmcgbXkgZmF0aGVyIGZvciBtdXJkZXIuICBGb3IgdGhleSBzYXkgaGUgZGlkIG5vdCBraWxsIGhpbSwgYW5kIGlmIGhlIGhhZCBraWxsZWQgaGltIG5ldmVyIHNvIG11Y2gsIHlldCBzaW5jZSB0aGUgZGVhZCBtYW4gd2FzIGEgbXVyZGVyZXIsIEkgb3VnaHQgbm90IHRvIHRyb3VibGUgbXlzZWxmIGFib3V0IHN1Y2ggYSBmZWxsb3csCjwvdHJhbnNsYXRpb24+"
translation['4.4e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI0ZSIgdW5pdD0ic2VjdGlvbiIgLz5iZWNhdXNlIGl0IGlzIHVuaG9seSBmb3IgYSBzb24gdG8gcHJvc2VjdXRlIGhpcyBmYXRoZXIgZm9yIG11cmRlci4gIFdoaWNoIHNob3dzIGhvdyBsaXR0bGUgdGhleSBrbm93IHdoYXQgdGhlIGRpdmluZSBsYXcgaXMgaW4gcmVnYXJkIHRvIGhvbGluZXNzIGFuZCB1bmhvbGluZXNzLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQsIGluIHRoZSBuYW1lIG9mIFpldXMsIEV1dGh5cGhybywgZG8geW91IHRoaW5rIHlvdXIga25vd2xlZGdlIGFib3V0IGRpdmluZSBsYXdzIGFuZCBob2xpbmVzcyBhbmQgdW5ob2xpbmVzcyBpcyBzbyBleGFjdCB0aGF0LCB3aGVuIHRoZSBmYWN0cyBhcmUgYXMgeW91IHNheSwgeW91IGFyZSBub3QgYWZyYWlkIG9mIGRvaW5nIHNvbWV0aGluZyB1bmhvbHkgeW91cnNlbGYgaW4gcHJvc2VjdXRpbmcgeW91ciBmYXRoZXIgZm9yIG11cmRlcj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0LCBpbiB0aGUgbmFtZSBvZiBaZXVzLCBFdXRoeXBocm8sIGRvIHlvdSB0aGluayB5b3VyIGtub3dsZWRnZSBhYm91dCBkaXZpbmUgbGF3cyBhbmQgaG9saW5lc3MgYW5kIHVuaG9saW5lc3MgaXMgc28gZXhhY3QgdGhhdCwgd2hlbiB0aGUgZmFjdHMgYXJlIGFzIHlvdSBzYXksIHlvdSBhcmUgbm90IGFmcmFpZCBvZiBkb2luZyBzb21ldGhpbmcgdW5ob2x5IHlvdXJzZWxmIGluIHByb3NlY3V0aW5nIHlvdXIgZmF0aGVyIGZvciBtdXJkZXI/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBzaG91bGQgYmUgb2Ygbm8gdXNlLCBTb2NyYXRlcywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjUiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjVhIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBFdXRoeXBocm8gd291bGQgYmUgaW4gbm8gd2F5IGRpZmZlcmVudCBmcm9tIG90aGVyIG1lbiwgaWYgSSBkaWQgbm90IGhhdmUgZXhhY3Qga25vd2xlZGdlIGFib3V0IGFsbCBzdWNoIHRoaW5ncy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgc2hvdWxkIGJlIG9mIG5vIHVzZSwgU29jcmF0ZXMsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1YSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgRXV0aHlwaHJvIHdvdWxkIGJlIGluIG5vIHdheSBkaWZmZXJlbnQgZnJvbSBvdGhlciBtZW4sIGlmIEkgZGlkIG5vdCBoYXZlIGV4YWN0IGtub3dsZWRnZSBhYm91dCBhbGwgc3VjaCB0aGluZ3MuPC9wPjwvdHJhbnNsYXRpb24+"
translation['5.5a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1YSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgRXV0aHlwaHJvIHdvdWxkIGJlIGluIG5vIHdheSBkaWZmZXJlbnQgZnJvbSBvdGhlciBtZW4sIGlmIEkgZGlkIG5vdCBoYXZlIGV4YWN0IGtub3dsZWRnZSBhYm91dCBhbGwgc3VjaCB0aGluZ3MuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gdGhlIGJlc3QgdGhpbmcgZm9yIG1lLCBteSBhZG1pcmFibGUgRXV0aHlwaHJvLCBpcyB0byBiZWNvbWUgeW91ciBwdXBpbCBhbmQsIGJlZm9yZSB0aGUgc3VpdCB3aXRoIE1lbGV0dXMgY29tZXMgb24sIHRvIGNoYWxsZW5nZSBoaW0gYW5kIHNheSB0aGF0IEkgYWx3YXlzIHRob3VnaHQgaXQgdmVyeSBpbXBvcnRhbnQgYmVmb3JlIHRvIGtub3cgYWJvdXQgZGl2aW5lIG1hdHRlcnMgYW5kIHRoYXQgbm93LCBzaW5jZSBoZSBzYXlzIEkgYW0gZG9pbmcgd3JvbmcgYnkgYWN0aW5nIGNhcmVsZXNzbHkgYW5kIG1ha2luZyBpbm5vdmF0aW9ucyBpbiBtYXR0ZXJzIG9mIHJlbGlnaW9uLCBJIGhhdmUgYmVjb21lIHlvdXIgcHVwaWwuICBBbmQg4oCcTWVsZXR1cyzigJ0gSSBzaG91bGQgc2F5LAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNWIiIHVuaXQ9InNlY3Rpb24iIC8+4oCcaWYgeW91IGFja25vd2xlZGdlIHRoYXQgRXV0aHlwaHJvIGlzIHdpc2UgaW4gc3VjaCBtYXR0ZXJzLCB0aGVuIGJlbGlldmUgdGhhdCBJIGFsc28gaG9sZCBjb3JyZWN0IG9waW5pb25zLCBhbmQgZG8gbm90IGJyaW5nIG1lIHRvIHRyaWFsOyAgYW5kIGlmIHlvdSBkbyBub3QgYWNrbm93bGVkZ2UgdGhhdCwgdGhlbiBicmluZyBhIHN1aXQgYWdhaW5zdCBoaW0sIG15IHRlYWNoZXIsIHJhdGhlciB0aGFuIGFnYWluc3QgbWUsIGFuZCBjaGFyZ2UgaGltIHdpdGggY29ycnVwdGluZyB0aGUgb2xkLCBuYW1lbHksIGhpcyBmYXRoZXIgYW5kIG1lLCB3aGljaCBoZSBkb2VzIGJ5IHRlYWNoaW5nIG1lIGFuZCBieSBjb3JyZWN0aW5nIGFuZCBwdW5pc2hpbmcgaGlzIGZhdGhlci7igJ0gIEFuZCBpZiBoZSBkb2VzIG5vdCBkbyBhcyBJIGFzayBhbmQgZG9lcyBub3QgcmVsZWFzZSBtZSBmcm9tIHRoZSBpbmRpY3RtZW50IG9yIGJyaW5nIGl0IGFnYWluc3QgeW91IGluIG15IHN0ZWFkLCBJIGNvdWxkIHNheSBpbiB0aGUgY291cnQgdGhlIHNhbWUgdGhpbmdzIEkgc2FpZCBpbiBteSBjaGFsbGVuZ2UgdG8gaGltLCBjb3VsZCBJIG5vdD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB0aGUgYmVzdCB0aGluZyBmb3IgbWUsIG15IGFkbWlyYWJsZSBFdXRoeXBocm8sIGlzIHRvIGJlY29tZSB5b3VyIHB1cGlsIGFuZCwgYmVmb3JlIHRoZSBzdWl0IHdpdGggTWVsZXR1cyBjb21lcyBvbiwgdG8gY2hhbGxlbmdlIGhpbSBhbmQgc2F5IHRoYXQgSSBhbHdheXMgdGhvdWdodCBpdCB2ZXJ5IGltcG9ydGFudCBiZWZvcmUgdG8ga25vdyBhYm91dCBkaXZpbmUgbWF0dGVycyBhbmQgdGhhdCBub3csIHNpbmNlIGhlIHNheXMgSSBhbSBkb2luZyB3cm9uZyBieSBhY3RpbmcgY2FyZWxlc3NseSBhbmQgbWFraW5nIGlubm92YXRpb25zIGluIG1hdHRlcnMgb2YgcmVsaWdpb24sIEkgaGF2ZSBiZWNvbWUgeW91ciBwdXBpbC4gIEFuZCDigJxNZWxldHVzLOKAnSBJIHNob3VsZCBzYXksCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1YiIgdW5pdD0ic2VjdGlvbiIgLz7igJxpZiB5b3UgYWNrbm93bGVkZ2UgdGhhdCBFdXRoeXBocm8gaXMgd2lzZSBpbiBzdWNoIG1hdHRlcnMsIHRoZW4gYmVsaWV2ZSB0aGF0IEkgYWxzbyBob2xkIGNvcnJlY3Qgb3BpbmlvbnMsIGFuZCBkbyBub3QgYnJpbmcgbWUgdG8gdHJpYWw7ICBhbmQgaWYgeW91IGRvIG5vdCBhY2tub3dsZWRnZSB0aGF0LCB0aGVuIGJyaW5nIGEgc3VpdCBhZ2FpbnN0IGhpbSwgbXkgdGVhY2hlciwgcmF0aGVyIHRoYW4gYWdhaW5zdCBtZSwgYW5kIGNoYXJnZSBoaW0gd2l0aCBjb3JydXB0aW5nIHRoZSBvbGQsIG5hbWVseSwgaGlzIGZhdGhlciBhbmQgbWUsIHdoaWNoIGhlIGRvZXMgYnkgdGVhY2hpbmcgbWUgYW5kIGJ5IGNvcnJlY3RpbmcgYW5kIHB1bmlzaGluZyBoaXMgZmF0aGVyLuKAnSAgQW5kIGlmIGhlIGRvZXMgbm90IGRvIGFzIEkgYXNrIGFuZCBkb2VzIG5vdCByZWxlYXNlIG1lIGZyb20gdGhlIGluZGljdG1lbnQgb3IgYnJpbmcgaXQgYWdhaW5zdCB5b3UgaW4gbXkgc3RlYWQsIEkgY291bGQgc2F5IGluIHRoZSBjb3VydCB0aGUgc2FtZSB0aGluZ3MgSSBzYWlkIGluIG15IGNoYWxsZW5nZSB0byBoaW0sIGNvdWxkIEkgbm90PzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['5.5b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1YiIgdW5pdD0ic2VjdGlvbiIgLz7igJxpZiB5b3UgYWNrbm93bGVkZ2UgdGhhdCBFdXRoeXBocm8gaXMgd2lzZSBpbiBzdWNoIG1hdHRlcnMsIHRoZW4gYmVsaWV2ZSB0aGF0IEkgYWxzbyBob2xkIGNvcnJlY3Qgb3BpbmlvbnMsIGFuZCBkbyBub3QgYnJpbmcgbWUgdG8gdHJpYWw7ICBhbmQgaWYgeW91IGRvIG5vdCBhY2tub3dsZWRnZSB0aGF0LCB0aGVuIGJyaW5nIGEgc3VpdCBhZ2FpbnN0IGhpbSwgbXkgdGVhY2hlciwgcmF0aGVyIHRoYW4gYWdhaW5zdCBtZSwgYW5kIGNoYXJnZSBoaW0gd2l0aCBjb3JydXB0aW5nIHRoZSBvbGQsIG5hbWVseSwgaGlzIGZhdGhlciBhbmQgbWUsIHdoaWNoIGhlIGRvZXMgYnkgdGVhY2hpbmcgbWUgYW5kIGJ5IGNvcnJlY3RpbmcgYW5kIHB1bmlzaGluZyBoaXMgZmF0aGVyLuKAnSAgQW5kIGlmIGhlIGRvZXMgbm90IGRvIGFzIEkgYXNrIGFuZCBkb2VzIG5vdCByZWxlYXNlIG1lIGZyb20gdGhlIGluZGljdG1lbnQgb3IgYnJpbmcgaXQgYWdhaW5zdCB5b3UgaW4gbXkgc3RlYWQsIEkgY291bGQgc2F5IGluIHRoZSBjb3VydCB0aGUgc2FtZSB0aGluZ3MgSSBzYWlkIGluIG15IGNoYWxsZW5nZSB0byBoaW0sIGNvdWxkIEkgbm90PzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnkgWmV1cywgU29jcmF0ZXMsIGlmIGhlIHNob3VsZCB1bmRlcnRha2UgdG8gaW5kaWN0IG1lLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNWMiIHVuaXQ9InNlY3Rpb24iIC8+SSBmYW5jeSBJIHNob3VsZCBmaW5kIGhpcyB3ZWFrIHNwb3QsIGFuZCBpdCB3b3VsZCBiZSBtdWNoIG1vcmUgYSBxdWVzdGlvbiBhYm91dCBoaW0gaW4gY291cnQgdGhhbiBhYm91dCBtZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ5IFpldXMsIFNvY3JhdGVzLCBpZiBoZSBzaG91bGQgdW5kZXJ0YWtlIHRvIGluZGljdCBtZSwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjVjIiB1bml0PSJzZWN0aW9uIiAvPkkgZmFuY3kgSSBzaG91bGQgZmluZCBoaXMgd2VhayBzcG90LCBhbmQgaXQgd291bGQgYmUgbXVjaCBtb3JlIGEgcXVlc3Rpb24gYWJvdXQgaGltIGluIGNvdXJ0IHRoYW4gYWJvdXQgbWUuPC9wPjwvdHJhbnNsYXRpb24+"
translation['5.5c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1YyIgdW5pdD0ic2VjdGlvbiIgLz5JIGZhbmN5IEkgc2hvdWxkIGZpbmQgaGlzIHdlYWsgc3BvdCwgYW5kIGl0IHdvdWxkIGJlIG11Y2ggbW9yZSBhIHF1ZXN0aW9uIGFib3V0IGhpbSBpbiBjb3VydCB0aGFuIGFib3V0IG1lLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgSSwgbXkgZGVhciBmcmllbmQsIHBlcmNlaXZpbmcgdGhpcywgd2lzaCB0byBiZWNvbWUgeW91ciBwdXBpbDsgIGZvciBJIGtub3cgdGhhdCBuZWl0aGVyIHRoaXMgZmVsbG93IE1lbGV0dXMsIG5vciBhbnlvbmUgZWxzZSwgc2VlbXMgdG8gbm90aWNlIHlvdSBhdCBhbGwsIGJ1dCBoZSBoYXMgc2VlbiB0aHJvdWdoIG1lIHNvIHNoYXJwbHkgYW5kIHNvIGVhc2lseSB0aGF0IGhlIGhhcyBpbmRpY3RlZCBtZSBmb3IgaW1waWV0eS4gIE5vdyBpbiB0aGUgbmFtZSBvZiBaZXVzLCB0ZWxsIG1lIHdoYXQgeW91IGp1c3Qgbm93IGFzc2VydGVkIHRoYXQgeW91IGtuZXcgc28gd2VsbC4gIFdoYXQgZG8geW91IHNheSBpcyB0aGUgbmF0dXJlIG9mIHBpZXR5IGFuZCBpbXBpZXR5LCBib3RoCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1ZCIgdW5pdD0ic2VjdGlvbiIgLz5pbiByZWxhdGlvbiB0byBtdXJkZXIgYW5kIHRvIG90aGVyIHRoaW5ncz8gIElzIG5vdCBob2xpbmVzcyBhbHdheXMgdGhlIHNhbWUgd2l0aCBpdHNlbGYgaW4gZXZlcnkgYWN0aW9uIGFuZCwgb24gdGhlIG90aGVyIGhhbmQsIGlzIG5vdCB1bmhvbGluZXNzIHRoZSBvcHBvc2l0ZSBvZiBhbGwgaG9saW5lc3MsIGFsd2F5cyB0aGUgc2FtZSB3aXRoIGl0c2VsZiBhbmQgd2hhdGV2ZXIgaXMgdG8gYmUgdW5ob2x5IHBvc3Nlc3Npbmcgc29tZSBvbmUgY2hhcmFjdGVyaXN0aWMgcXVhbGl0eT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIEksIG15IGRlYXIgZnJpZW5kLCBwZXJjZWl2aW5nIHRoaXMsIHdpc2ggdG8gYmVjb21lIHlvdXIgcHVwaWw7ICBmb3IgSSBrbm93IHRoYXQgbmVpdGhlciB0aGlzIGZlbGxvdyBNZWxldHVzLCBub3IgYW55b25lIGVsc2UsIHNlZW1zIHRvIG5vdGljZSB5b3UgYXQgYWxsLCBidXQgaGUgaGFzIHNlZW4gdGhyb3VnaCBtZSBzbyBzaGFycGx5IGFuZCBzbyBlYXNpbHkgdGhhdCBoZSBoYXMgaW5kaWN0ZWQgbWUgZm9yIGltcGlldHkuICBOb3cgaW4gdGhlIG5hbWUgb2YgWmV1cywgdGVsbCBtZSB3aGF0IHlvdSBqdXN0IG5vdyBhc3NlcnRlZCB0aGF0IHlvdSBrbmV3IHNvIHdlbGwuICBXaGF0IGRvIHlvdSBzYXkgaXMgdGhlIG5hdHVyZSBvZiBwaWV0eSBhbmQgaW1waWV0eSwgYm90aAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNWQiIHVuaXQ9InNlY3Rpb24iIC8+aW4gcmVsYXRpb24gdG8gbXVyZGVyIGFuZCB0byBvdGhlciB0aGluZ3M/ICBJcyBub3QgaG9saW5lc3MgYWx3YXlzIHRoZSBzYW1lIHdpdGggaXRzZWxmIGluIGV2ZXJ5IGFjdGlvbiBhbmQsIG9uIHRoZSBvdGhlciBoYW5kLCBpcyBub3QgdW5ob2xpbmVzcyB0aGUgb3Bwb3NpdGUgb2YgYWxsIGhvbGluZXNzLCBhbHdheXMgdGhlIHNhbWUgd2l0aCBpdHNlbGYgYW5kIHdoYXRldmVyIGlzIHRvIGJlIHVuaG9seSBwb3NzZXNzaW5nIHNvbWUgb25lIGNoYXJhY3RlcmlzdGljIHF1YWxpdHk/PC9wPjwvdHJhbnNsYXRpb24+"
translation['5.5d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1ZCIgdW5pdD0ic2VjdGlvbiIgLz5pbiByZWxhdGlvbiB0byBtdXJkZXIgYW5kIHRvIG90aGVyIHRoaW5ncz8gIElzIG5vdCBob2xpbmVzcyBhbHdheXMgdGhlIHNhbWUgd2l0aCBpdHNlbGYgaW4gZXZlcnkgYWN0aW9uIGFuZCwgb24gdGhlIG90aGVyIGhhbmQsIGlzIG5vdCB1bmhvbGluZXNzIHRoZSBvcHBvc2l0ZSBvZiBhbGwgaG9saW5lc3MsIGFsd2F5cyB0aGUgc2FtZSB3aXRoIGl0c2VsZiBhbmQgd2hhdGV2ZXIgaXMgdG8gYmUgdW5ob2x5IHBvc3Nlc3Npbmcgc29tZSBvbmUgY2hhcmFjdGVyaXN0aWMgcXVhbGl0eT88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seSwgU29jcmF0ZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHksIFNvY3JhdGVzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGVsbCBtZSB0aGVuLCB3aGF0IGRvIHlvdSBzYXkgaG9saW5lc3MgaXMsIGFuZCB3aGF0IHVuaG9saW5lc3M/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRlbGwgbWUgdGhlbiwgd2hhdCBkbyB5b3Ugc2F5IGhvbGluZXNzIGlzLCBhbmQgd2hhdCB1bmhvbGluZXNzPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwgdGhlbiwgSSBzYXkgdGhhdCBob2xpbmVzcyBpcyBkb2luZyB3aGF0IEkgYW0gZG9pbmcgbm93LCBwcm9zZWN1dGluZyB0aGUgd3Jvbmdkb2VyIHdobyBjb21taXRzIG11cmRlciBvciBzdGVhbHMgZnJvbSB0aGUgdGVtcGxlcyBvciBkb2VzIGFueSBzdWNoIHRoaW5nLCB3aGV0aGVyIGhlIGJlIHlvdXIgZmF0aGVyLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNWUiIHVuaXQ9InNlY3Rpb24iIC8+b3IgeW91ciBtb3RoZXIgb3IgYW55b25lIGVsc2UsIGFuZCBub3QgcHJvc2VjdXRpbmcgaGltIGlzIHVuaG9seS4gIEFuZCwgU29jcmF0ZXMsIHNlZSB3aGF0IGEgc3VyZSBwcm9vZiBJIG9mZmVyIHlvdSzigJRhIHByb29mIEkgaGF2ZSBhbHJlYWR5IGdpdmVuIHRvIG90aGVycyzigJR0aGF0IHRoaXMgaXMgZXN0YWJsaXNoZWQgYW5kIHJpZ2h0IGFuZCB0aGF0IHdlIG91Z2h0IG5vdCB0byBsZXQgaGltIHdobyBhY3RzIGltcGlvdXNseSBnbyB1bnB1bmlzaGVkLCBubyBtYXR0ZXIgd2hvIGhlIG1heSBiZS4gIE1lbiBiZWxpZXZlCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2YSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IFpldXMgaXMgdGhlIGJlc3QgYW5kIG1vc3QganVzdCBvZiB0aGUgZ29kcywgYW5kIHRoZXkgYWNrbm93bGVkZ2UgdGhhdCBoZSBwdXQgaGlzIGZhdGhlciBpbiBib25kcyBiZWNhdXNlIGhlIHdpY2tlZGx5IGRldm91cmVkIGhpcyBjaGlsZHJlbiwgYW5kIGhlIGluIHR1cm4gaGFkIG11dGlsYXRlZCBoaXMgZmF0aGVyIGZvciBzaW1pbGFyIHJlYXNvbnM7ICBidXQgdGhleSBhcmUgaW5jZW5zZWQgYWdhaW5zdCBtZSBiZWNhdXNlIEkgcHJvY2VlZCBhZ2FpbnN0IG15IGZhdGhlciB3aGVuIGhlIGhhcyBkb25lIHdyb25nLCBhbmQgc28gdGhleSBhcmUgaW5jb25zaXN0ZW50IGluIHdoYXQgdGhleSBzYXkgYWJvdXQgdGhlIGdvZHMgYW5kIGFib3V0IG1lLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCB0aGVuLCBJIHNheSB0aGF0IGhvbGluZXNzIGlzIGRvaW5nIHdoYXQgSSBhbSBkb2luZyBub3csIHByb3NlY3V0aW5nIHRoZSB3cm9uZ2RvZXIgd2hvIGNvbW1pdHMgbXVyZGVyIG9yIHN0ZWFscyBmcm9tIHRoZSB0ZW1wbGVzIG9yIGRvZXMgYW55IHN1Y2ggdGhpbmcsIHdoZXRoZXIgaGUgYmUgeW91ciBmYXRoZXIsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1ZSIgdW5pdD0ic2VjdGlvbiIgLz5vciB5b3VyIG1vdGhlciBvciBhbnlvbmUgZWxzZSwgYW5kIG5vdCBwcm9zZWN1dGluZyBoaW0gaXMgdW5ob2x5LiAgQW5kLCBTb2NyYXRlcywgc2VlIHdoYXQgYSBzdXJlIHByb29mIEkgb2ZmZXIgeW91LOKAlGEgcHJvb2YgSSBoYXZlIGFscmVhZHkgZ2l2ZW4gdG8gb3RoZXJzLOKAlHRoYXQgdGhpcyBpcyBlc3RhYmxpc2hlZCBhbmQgcmlnaHQgYW5kIHRoYXQgd2Ugb3VnaHQgbm90IHRvIGxldCBoaW0gd2hvIGFjdHMgaW1waW91c2x5IGdvIHVucHVuaXNoZWQsIG5vIG1hdHRlciB3aG8gaGUgbWF5IGJlLiAgTWVuIGJlbGlldmUKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjYiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjZhIiB1bml0PSJzZWN0aW9uIiAvPnRoYXQgWmV1cyBpcyB0aGUgYmVzdCBhbmQgbW9zdCBqdXN0IG9mIHRoZSBnb2RzLCBhbmQgdGhleSBhY2tub3dsZWRnZSB0aGF0IGhlIHB1dCBoaXMgZmF0aGVyIGluIGJvbmRzIGJlY2F1c2UgaGUgd2lja2VkbHkgZGV2b3VyZWQgaGlzIGNoaWxkcmVuLCBhbmQgaGUgaW4gdHVybiBoYWQgbXV0aWxhdGVkIGhpcyBmYXRoZXIgZm9yIHNpbWlsYXIgcmVhc29uczsgIGJ1dCB0aGV5IGFyZSBpbmNlbnNlZCBhZ2FpbnN0IG1lIGJlY2F1c2UgSSBwcm9jZWVkIGFnYWluc3QgbXkgZmF0aGVyIHdoZW4gaGUgaGFzIGRvbmUgd3JvbmcsIGFuZCBzbyB0aGV5IGFyZSBpbmNvbnNpc3RlbnQgaW4gd2hhdCB0aGV5IHNheSBhYm91dCB0aGUgZ29kcyBhbmQgYWJvdXQgbWUuPC9wPjwvdHJhbnNsYXRpb24+"
translation['5.5e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI1ZSIgdW5pdD0ic2VjdGlvbiIgLz5vciB5b3VyIG1vdGhlciBvciBhbnlvbmUgZWxzZSwgYW5kIG5vdCBwcm9zZWN1dGluZyBoaW0gaXMgdW5ob2x5LiAgQW5kLCBTb2NyYXRlcywgc2VlIHdoYXQgYSBzdXJlIHByb29mIEkgb2ZmZXIgeW91LOKAlGEgcHJvb2YgSSBoYXZlIGFscmVhZHkgZ2l2ZW4gdG8gb3RoZXJzLOKAlHRoYXQgdGhpcyBpcyBlc3RhYmxpc2hlZCBhbmQgcmlnaHQgYW5kIHRoYXQgd2Ugb3VnaHQgbm90IHRvIGxldCBoaW0gd2hvIGFjdHMgaW1waW91c2x5IGdvIHVucHVuaXNoZWQsIG5vIG1hdHRlciB3aG8gaGUgbWF5IGJlLiAgTWVuIGJlbGlldmUKPC90cmFuc2xhdGlvbj4="
translation['6.6a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2YSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IFpldXMgaXMgdGhlIGJlc3QgYW5kIG1vc3QganVzdCBvZiB0aGUgZ29kcywgYW5kIHRoZXkgYWNrbm93bGVkZ2UgdGhhdCBoZSBwdXQgaGlzIGZhdGhlciBpbiBib25kcyBiZWNhdXNlIGhlIHdpY2tlZGx5IGRldm91cmVkIGhpcyBjaGlsZHJlbiwgYW5kIGhlIGluIHR1cm4gaGFkIG11dGlsYXRlZCBoaXMgZmF0aGVyIGZvciBzaW1pbGFyIHJlYXNvbnM7ICBidXQgdGhleSBhcmUgaW5jZW5zZWQgYWdhaW5zdCBtZSBiZWNhdXNlIEkgcHJvY2VlZCBhZ2FpbnN0IG15IGZhdGhlciB3aGVuIGhlIGhhcyBkb25lIHdyb25nLCBhbmQgc28gdGhleSBhcmUgaW5jb25zaXN0ZW50IGluIHdoYXQgdGhleSBzYXkgYWJvdXQgdGhlIGdvZHMgYW5kIGFib3V0IG1lLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JcyBub3QgdGhpcywgRXV0aHlwaHJvLCB0aGUgcmVhc29uIHdoeSBJIGFtIGJlaW5nIHByb3NlY3V0ZWQsIGJlY2F1c2Ugd2hlbiBwZW9wbGUgdGVsbCBzdWNoIHN0b3JpZXMgYWJvdXQgdGhlIGdvZHMgSSBmaW5kIGl0IGhhcmQgdG8gYWNjZXB0IHRoZW0/ICBBbmQgdGhlcmVmb3JlLCBwcm9iYWJseSwgcGVvcGxlIHdpbGwgc2F5IEkgYW0gd3JvbmcuICBOb3cgaWYgeW91LCB3aG8ga25vdyBzbyBtdWNoIGFib3V0IHN1Y2ggdGhpbmdzLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNmIiIHVuaXQ9InNlY3Rpb24iIC8+YWNjZXB0IHRoZXNlIHRhbGVzLCBJIHN1cHBvc2UgSSB0b28gbXVzdCBnaXZlIHdheS4gIEZvciB3aGF0IGFtIEkgdG8gc2F5LCB3aG8gY29uZmVzcyBmcmFua2x5IHRoYXQgSSBrbm93IG5vdGhpbmcgYWJvdXQgdGhlbT8gIEJ1dCB0ZWxsIG1lLCBpbiB0aGUgbmFtZSBvZiBaZXVzLCB0aGUgZ29kIG9mIGZyaWVuZHNoaXAsIGRvIHlvdSByZWFsbHkgYmVsaWV2ZSB0aGVzZSB0aGluZ3MgaGFwcGVuZWQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklzIG5vdCB0aGlzLCBFdXRoeXBocm8sIHRoZSByZWFzb24gd2h5IEkgYW0gYmVpbmcgcHJvc2VjdXRlZCwgYmVjYXVzZSB3aGVuIHBlb3BsZSB0ZWxsIHN1Y2ggc3RvcmllcyBhYm91dCB0aGUgZ29kcyBJIGZpbmQgaXQgaGFyZCB0byBhY2NlcHQgdGhlbT8gIEFuZCB0aGVyZWZvcmUsIHByb2JhYmx5LCBwZW9wbGUgd2lsbCBzYXkgSSBhbSB3cm9uZy4gIE5vdyBpZiB5b3UsIHdobyBrbm93IHNvIG11Y2ggYWJvdXQgc3VjaCB0aGluZ3MsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2YiIgdW5pdD0ic2VjdGlvbiIgLz5hY2NlcHQgdGhlc2UgdGFsZXMsIEkgc3VwcG9zZSBJIHRvbyBtdXN0IGdpdmUgd2F5LiAgRm9yIHdoYXQgYW0gSSB0byBzYXksIHdobyBjb25mZXNzIGZyYW5rbHkgdGhhdCBJIGtub3cgbm90aGluZyBhYm91dCB0aGVtPyAgQnV0IHRlbGwgbWUsIGluIHRoZSBuYW1lIG9mIFpldXMsIHRoZSBnb2Qgb2YgZnJpZW5kc2hpcCwgZG8geW91IHJlYWxseSBiZWxpZXZlIHRoZXNlIHRoaW5ncyBoYXBwZW5lZD88L3A+PC90cmFuc2xhdGlvbj4="
translation['6.6b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2YiIgdW5pdD0ic2VjdGlvbiIgLz5hY2NlcHQgdGhlc2UgdGFsZXMsIEkgc3VwcG9zZSBJIHRvbyBtdXN0IGdpdmUgd2F5LiAgRm9yIHdoYXQgYW0gSSB0byBzYXksIHdobyBjb25mZXNzIGZyYW5rbHkgdGhhdCBJIGtub3cgbm90aGluZyBhYm91dCB0aGVtPyAgQnV0IHRlbGwgbWUsIGluIHRoZSBuYW1lIG9mIFpldXMsIHRoZSBnb2Qgb2YgZnJpZW5kc2hpcCwgZG8geW91IHJlYWxseSBiZWxpZXZlIHRoZXNlIHRoaW5ncyBoYXBwZW5lZD88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywgYW5kIHN0aWxsIG1vcmUgd29uZGVyZnVsIHRoaW5ncyB0aGFuIHRoZXNlLCBTb2NyYXRlcywgd2hpY2ggbW9zdCBwZW9wbGUgZG8gbm90IGtub3cuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIGFuZCBzdGlsbCBtb3JlIHdvbmRlcmZ1bCB0aGluZ3MgdGhhbiB0aGVzZSwgU29jcmF0ZXMsIHdoaWNoIG1vc3QgcGVvcGxlIGRvIG5vdCBrbm93LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHNvIHlvdSBiZWxpZXZlIHRoYXQgdGhlcmUgd2FzIHJlYWxseSB3YXIgYmV0d2VlbiB0aGUgZ29kcywgYW5kIGZlYXJmdWwgZW5taXRpZXMgYW5kIGJhdHRsZXMgYW5kIG90aGVyIHRoaW5ncyBvZiB0aGUgc29ydCwgc3VjaCBhcyBhcmUgdG9sZCBvZiBieSB0aGUgcG9ldHMgYW5kIHJlcHJlc2VudGVkIGluIHZhcmllZCBkZXNpZ25zCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2YyIgdW5pdD0ic2VjdGlvbiIgLz5ieSB0aGUgZ3JlYXQgYXJ0aXN0cyBpbiBvdXIgc2FjcmVkIHBsYWNlcyBhbmQgZXNwZWNpYWxseSBvbiB0aGUgcm9iZSB3aGljaCBpcyBjYXJyaWVkIHVwIHRvIHRoZSBBY3JvcG9saXMgYXQgdGhlIGdyZWF0IFBhbmF0aGVuYWVhPyAgZm9yIHRoaXMgaXMgY292ZXJlZCB3aXRoIHN1Y2ggcmVwcmVzZW50YXRpb25zLiAgU2hhbGwgd2UgYWdyZWUgdGhhdCB0aGVzZSB0aGluZ3MgYXJlIHRydWUsIEV1dGh5cGhybz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHNvIHlvdSBiZWxpZXZlIHRoYXQgdGhlcmUgd2FzIHJlYWxseSB3YXIgYmV0d2VlbiB0aGUgZ29kcywgYW5kIGZlYXJmdWwgZW5taXRpZXMgYW5kIGJhdHRsZXMgYW5kIG90aGVyIHRoaW5ncyBvZiB0aGUgc29ydCwgc3VjaCBhcyBhcmUgdG9sZCBvZiBieSB0aGUgcG9ldHMgYW5kIHJlcHJlc2VudGVkIGluIHZhcmllZCBkZXNpZ25zCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2YyIgdW5pdD0ic2VjdGlvbiIgLz5ieSB0aGUgZ3JlYXQgYXJ0aXN0cyBpbiBvdXIgc2FjcmVkIHBsYWNlcyBhbmQgZXNwZWNpYWxseSBvbiB0aGUgcm9iZSB3aGljaCBpcyBjYXJyaWVkIHVwIHRvIHRoZSBBY3JvcG9saXMgYXQgdGhlIGdyZWF0IFBhbmF0aGVuYWVhPyAgZm9yIHRoaXMgaXMgY292ZXJlZCB3aXRoIHN1Y2ggcmVwcmVzZW50YXRpb25zLiAgU2hhbGwgd2UgYWdyZWUgdGhhdCB0aGVzZSB0aGluZ3MgYXJlIHRydWUsIEV1dGh5cGhybz88L3A+PC90cmFuc2xhdGlvbj4="
translation['6.6c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2YyIgdW5pdD0ic2VjdGlvbiIgLz5ieSB0aGUgZ3JlYXQgYXJ0aXN0cyBpbiBvdXIgc2FjcmVkIHBsYWNlcyBhbmQgZXNwZWNpYWxseSBvbiB0aGUgcm9iZSB3aGljaCBpcyBjYXJyaWVkIHVwIHRvIHRoZSBBY3JvcG9saXMgYXQgdGhlIGdyZWF0IFBhbmF0aGVuYWVhPyAgZm9yIHRoaXMgaXMgY292ZXJlZCB3aXRoIHN1Y2ggcmVwcmVzZW50YXRpb25zLiAgU2hhbGwgd2UgYWdyZWUgdGhhdCB0aGVzZSB0aGluZ3MgYXJlIHRydWUsIEV1dGh5cGhybz88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdCBvbmx5IHRoZXNlIHRoaW5ncywgU29jcmF0ZXM7ICBidXQsIGFzIEkgc2FpZCBqdXN0IG5vdywgSSB3aWxsLCBpZiB5b3UgbGlrZSwgdGVsbCB5b3UgbWFueSBvdGhlciB0aGluZ3MgYWJvdXQgdGhlIGdvZHMsIHdoaWNoIEkgYW0gc3VyZSB3aWxsIGFtYXplIHlvdSB3aGVuIHlvdSBoZWFyIHRoZW0uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3Qgb25seSB0aGVzZSB0aGluZ3MsIFNvY3JhdGVzOyAgYnV0LCBhcyBJIHNhaWQganVzdCBub3csIEkgd2lsbCwgaWYgeW91IGxpa2UsIHRlbGwgeW91IG1hbnkgb3RoZXIgdGhpbmdzIGFib3V0IHRoZSBnb2RzLCB3aGljaCBJIGFtIHN1cmUgd2lsbCBhbWF6ZSB5b3Ugd2hlbiB5b3UgaGVhciB0aGVtLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBkYXJlIHNheS4gIEJ1dCB5b3UgY2FuIHRlbGwgbWUgdGhvc2UgdGhpbmdzIGF0IHlvdXIgbGVpc3VyZSBzb21lIG90aGVyIHRpbWUuICBBdCBwcmVzZW50IHRyeSB0byB0ZWxsIG1vcmUgY2xlYXJseSB3aGF0IEkgYXNrZWQgeW91IGp1c3Qgbm93Lgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNmQiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yLCBteSBmcmllbmQsIHlvdSBkaWQgbm90IGdpdmUgbWUgc3VmZmljaWVudCBpbmZvcm1hdGlvbiBiZWZvcmUsIHdoZW4gSSBhc2tlZCB3aGF0IGhvbGluZXNzIHdhcywgYnV0IHlvdSB0b2xkIG1lIHRoYXQgdGhpcyB3YXMgaG9seSB3aGljaCB5b3UgYXJlIG5vdyBkb2luZywgcHJvc2VjdXRpbmcgeW91ciBmYXRoZXIgZm9yIG11cmRlci48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBkYXJlIHNheS4gIEJ1dCB5b3UgY2FuIHRlbGwgbWUgdGhvc2UgdGhpbmdzIGF0IHlvdXIgbGVpc3VyZSBzb21lIG90aGVyIHRpbWUuICBBdCBwcmVzZW50IHRyeSB0byB0ZWxsIG1vcmUgY2xlYXJseSB3aGF0IEkgYXNrZWQgeW91IGp1c3Qgbm93Lgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNmQiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yLCBteSBmcmllbmQsIHlvdSBkaWQgbm90IGdpdmUgbWUgc3VmZmljaWVudCBpbmZvcm1hdGlvbiBiZWZvcmUsIHdoZW4gSSBhc2tlZCB3aGF0IGhvbGluZXNzIHdhcywgYnV0IHlvdSB0b2xkIG1lIHRoYXQgdGhpcyB3YXMgaG9seSB3aGljaCB5b3UgYXJlIG5vdyBkb2luZywgcHJvc2VjdXRpbmcgeW91ciBmYXRoZXIgZm9yIG11cmRlci48L3A+PC90cmFuc2xhdGlvbj4="
translation['6.6d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2ZCIgdW5pdD0ic2VjdGlvbiIgLz5Gb3IsIG15IGZyaWVuZCwgeW91IGRpZCBub3QgZ2l2ZSBtZSBzdWZmaWNpZW50IGluZm9ybWF0aW9uIGJlZm9yZSwgd2hlbiBJIGFza2VkIHdoYXQgaG9saW5lc3Mgd2FzLCBidXQgeW91IHRvbGQgbWUgdGhhdCB0aGlzIHdhcyBob2x5IHdoaWNoIHlvdSBhcmUgbm93IGRvaW5nLCBwcm9zZWN1dGluZyB5b3VyIGZhdGhlciBmb3IgbXVyZGVyLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgd2hhdCBJIHNhaWQgd2FzIHRydWUsIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgd2hhdCBJIHNhaWQgd2FzIHRydWUsIFNvY3JhdGVzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGVyaGFwcy4gIEJ1dCwgRXV0aHlwaHJvLCB5b3Ugc2F5IHRoYXQgbWFueSBvdGhlciB0aGluZ3MgYXJlIGhvbHksIGRvIHlvdSBub3Q/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlBlcmhhcHMuICBCdXQsIEV1dGh5cGhybywgeW91IHNheSB0aGF0IG1hbnkgb3RoZXIgdGhpbmdzIGFyZSBob2x5LCBkbyB5b3Ugbm90PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoeSwgc28gdGhleSBhcmUuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaHksIHNvIHRoZXkgYXJlLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm93IGNhbGwgdG8gbWluZCB0aGF0IHRoaXMgaXMgbm90IHdoYXQgSSBhc2tlZCB5b3UsIHRvIHRlbGwgbWUgb25lIG9yIHR3byBvZiB0aGUgbWFueSBob2x5IGFjdHMsIGJ1dCB0byB0ZWxsIHRoZSBlc3NlbnRpYWwgYXNwZWN0LCBieSB3aGljaCBhbGwgaG9seSBhY3RzIGFyZSBob2x5OyAgZm9yIHlvdSBzYWlkCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2ZSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IGFsbCB1bmhvbHkgYWN0cyB3ZXJlIHVuaG9seSBhbmQgYWxsIGhvbHkgb25lcyBob2x5IGJ5IG9uZSBhc3BlY3QuICBPciBkb24ndCB5b3UgcmVtZW1iZXI/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdyBjYWxsIHRvIG1pbmQgdGhhdCB0aGlzIGlzIG5vdCB3aGF0IEkgYXNrZWQgeW91LCB0byB0ZWxsIG1lIG9uZSBvciB0d28gb2YgdGhlIG1hbnkgaG9seSBhY3RzLCBidXQgdG8gdGVsbCB0aGUgZXNzZW50aWFsIGFzcGVjdCwgYnkgd2hpY2ggYWxsIGhvbHkgYWN0cyBhcmUgaG9seTsgIGZvciB5b3Ugc2FpZAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNmUiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBhbGwgdW5ob2x5IGFjdHMgd2VyZSB1bmhvbHkgYW5kIGFsbCBob2x5IG9uZXMgaG9seSBieSBvbmUgYXNwZWN0LiAgT3IgZG9uJ3QgeW91IHJlbWVtYmVyPzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['6.6e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI2ZSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IGFsbCB1bmhvbHkgYWN0cyB3ZXJlIHVuaG9seSBhbmQgYWxsIGhvbHkgb25lcyBob2x5IGJ5IG9uZSBhc3BlY3QuICBPciBkb24ndCB5b3UgcmVtZW1iZXI/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHJlbWVtYmVyLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSByZW1lbWJlci48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRlbGwgbWUgdGhlbiB3aGF0IHRoaXMgYXNwZWN0IGlzLCB0aGF0IEkgbWF5IGtlZXAgbXkgZXllIGZpeGVkIHVwb24gaXQgYW5kIGVtcGxveSBpdCBhcyBhIG1vZGVsIGFuZCwgaWYgYW55dGhpbmcgeW91IG9yIGFueW9uZSBlbHNlIGRvZXMgYWdyZWVzIHdpdGggaXQsIG1heSBzYXkgdGhhdCB0aGUgYWN0IGlzIGhvbHksIGFuZCBpZiBub3QsIHRoYXQgaXQgaXMgdW5ob2x5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UZWxsIG1lIHRoZW4gd2hhdCB0aGlzIGFzcGVjdCBpcywgdGhhdCBJIG1heSBrZWVwIG15IGV5ZSBmaXhlZCB1cG9uIGl0IGFuZCBlbXBsb3kgaXQgYXMgYSBtb2RlbCBhbmQsIGlmIGFueXRoaW5nIHlvdSBvciBhbnlvbmUgZWxzZSBkb2VzIGFncmVlcyB3aXRoIGl0LCBtYXkgc2F5IHRoYXQgdGhlIGFjdCBpcyBob2x5LCBhbmQgaWYgbm90LCB0aGF0IGl0IGlzIHVuaG9seS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JZiB5b3Ugd2lzaCBtZSB0byBleHBsYWluIGluIHRoYXQgd2F5LCBJIHdpbGwgZG8gc28uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JZiB5b3Ugd2lzaCBtZSB0byBleHBsYWluIGluIHRoYXQgd2F5LCBJIHdpbGwgZG8gc28uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvIHdpc2ggaXQuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgZG8gd2lzaCBpdC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsIHRoZW4sIHdoYXQgaXMgZGVhciB0byB0aGUgZ29kcyBpcyBob2x5LAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iN2EiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHdoYXQgaXMgbm90IGRlYXIgdG8gdGhlbSBpcyB1bmhvbHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsIHRoZW4sIHdoYXQgaXMgZGVhciB0byB0aGUgZ29kcyBpcyBob2x5LAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iNyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iN2EiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHdoYXQgaXMgbm90IGRlYXIgdG8gdGhlbSBpcyB1bmhvbHkuPC9wPjwvdHJhbnNsYXRpb24+"
translation['7.7a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3YSIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgd2hhdCBpcyBub3QgZGVhciB0byB0aGVtIGlzIHVuaG9seS48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXhjZWxsZW50LCBFdXRoeXBocm8sIG5vdyB5b3UgaGF2ZSBhbnN3ZXJlZCBhcyBJIGFza2VkIHlvdSB0byBhbnN3ZXIuICBIb3dldmVyLCB3aGV0aGVyIGl0IGlzIHRydWUsIEkgYW0gbm90IHlldCBzdXJlOyAgYnV0IHlvdSB3aWxsLCBvZiBjb3Vyc2UsIHNob3cgdGhhdCB3aGF0IHlvdSBzYXkgaXMgdHJ1ZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXhjZWxsZW50LCBFdXRoeXBocm8sIG5vdyB5b3UgaGF2ZSBhbnN3ZXJlZCBhcyBJIGFza2VkIHlvdSB0byBhbnN3ZXIuICBIb3dldmVyLCB3aGV0aGVyIGl0IGlzIHRydWUsIEkgYW0gbm90IHlldCBzdXJlOyAgYnV0IHlvdSB3aWxsLCBvZiBjb3Vyc2UsIHNob3cgdGhhdCB3aGF0IHlvdSBzYXkgaXMgdHJ1ZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Db21lIHRoZW4sIGxldCB1cyBleGFtaW5lIG91ciB3b3Jkcy4gIFRoZSB0aGluZyBhbmQgdGhlIHBlcnNvbiB0aGF0IGFyZSBkZWFyIHRvIHRoZSBnb2RzIGFyZSBob2x5LCBhbmQgdGhlIHRoaW5nIGFuZCB0aGUgcGVyc29uIHRoYXQgYXJlIGhhdGVmdWwgdG8gdGhlIGdvZHMgYXJlIHVuaG9seTsgIGFuZCB0aGUgdHdvIGFyZSBub3QgdGhlIHNhbWUsIGJ1dCB0aGUgaG9seSBhbmQgdGhlIHVuaG9seSBhcmUgdGhlIGV4YWN0IG9wcG9zaXRlcyBvZiBlYWNoIG90aGVyLiAgSXMgbm90IHRoaXMgd2hhdCB3ZSBoYXZlIHNhaWQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNvbWUgdGhlbiwgbGV0IHVzIGV4YW1pbmUgb3VyIHdvcmRzLiAgVGhlIHRoaW5nIGFuZCB0aGUgcGVyc29uIHRoYXQgYXJlIGRlYXIgdG8gdGhlIGdvZHMgYXJlIGhvbHksIGFuZCB0aGUgdGhpbmcgYW5kIHRoZSBwZXJzb24gdGhhdCBhcmUgaGF0ZWZ1bCB0byB0aGUgZ29kcyBhcmUgdW5ob2x5OyAgYW5kIHRoZSB0d28gYXJlIG5vdCB0aGUgc2FtZSwgYnV0IHRoZSBob2x5IGFuZCB0aGUgdW5ob2x5IGFyZSB0aGUgZXhhY3Qgb3Bwb3NpdGVzIG9mIGVhY2ggb3RoZXIuICBJcyBub3QgdGhpcyB3aGF0IHdlIGhhdmUgc2FpZD88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIGp1c3QgdGhpcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywganVzdCB0aGlzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGl0IHNlZW1zIHRvIGJlIGNvcnJlY3Q/CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3YiIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGl0IHNlZW1zIHRvIGJlIGNvcnJlY3Q/CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3YiIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC90cmFuc2xhdGlvbj4="
translation['7.7b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3YiIgdW5pdD0ic2VjdGlvbiIgLz48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdGhpbmsgc28sIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB0aGluayBzbywgU29jcmF0ZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsIHRoZW4sIGhhdmUgd2Ugc2FpZCB0aGlzIGFsc28sIHRoYXQgdGhlIGdvZHMsIEV1dGh5cGhybywgcXVhcnJlbCBhbmQgZGlzYWdyZWUgd2l0aCBlYWNoIG90aGVyLCBhbmQgdGhhdCB0aGVyZSBpcyBlbm1pdHkgYmV0d2VlbiB0aGVtPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsIHRoZW4sIGhhdmUgd2Ugc2FpZCB0aGlzIGFsc28sIHRoYXQgdGhlIGdvZHMsIEV1dGh5cGhybywgcXVhcnJlbCBhbmQgZGlzYWdyZWUgd2l0aCBlYWNoIG90aGVyLCBhbmQgdGhhdCB0aGVyZSBpcyBlbm1pdHkgYmV0d2VlbiB0aGVtPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywgd2UgaGF2ZSBzYWlkIHRoYXQuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIHdlIGhhdmUgc2FpZCB0aGF0LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHdoYXQgdGhpbmdzIGlzIHRoZSBkaXNhZ3JlZW1lbnQgYWJvdXQsIHdoaWNoIGNhdXNlcyBlbm1pdHkgYW5kIGFuZ2VyPyAgTGV0IHVzIGxvb2sgYXQgaXQgaW4gdGhpcyB3YXkuICBJZiB5b3UgYW5kIEkgd2VyZSB0byBkaXNhZ3JlZSBhYm91dCBudW1iZXIsIGZvciBpbnN0YW5jZSwgd2hpY2ggb2YgdHdvIG51bWJlcnMgd2VyZSB0aGUgZ3JlYXRlciwgd291bGQgdGhlIGRpc2FncmVlbWVudCBhYm91dCB0aGVzZSBtYXR0ZXJzIG1ha2UgdXMgZW5lbWllcyBhbmQgbWFrZSB1cyBhbmdyeSB3aXRoIGVhY2ggb3RoZXIsIG9yIHNob3VsZCB3ZSBub3QgcXVpY2tseSBzZXR0bGUgaXQgYnkgcmVzb3J0aW5nCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3YyIgdW5pdD0ic2VjdGlvbiIgLz50byBhcml0aG1ldGljPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgd2hhdCB0aGluZ3MgaXMgdGhlIGRpc2FncmVlbWVudCBhYm91dCwgd2hpY2ggY2F1c2VzIGVubWl0eSBhbmQgYW5nZXI/ICBMZXQgdXMgbG9vayBhdCBpdCBpbiB0aGlzIHdheS4gIElmIHlvdSBhbmQgSSB3ZXJlIHRvIGRpc2FncmVlIGFib3V0IG51bWJlciwgZm9yIGluc3RhbmNlLCB3aGljaCBvZiB0d28gbnVtYmVycyB3ZXJlIHRoZSBncmVhdGVyLCB3b3VsZCB0aGUgZGlzYWdyZWVtZW50IGFib3V0IHRoZXNlIG1hdHRlcnMgbWFrZSB1cyBlbmVtaWVzIGFuZCBtYWtlIHVzIGFuZ3J5IHdpdGggZWFjaCBvdGhlciwgb3Igc2hvdWxkIHdlIG5vdCBxdWlja2x5IHNldHRsZSBpdCBieSByZXNvcnRpbmcKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjdjIiB1bml0PSJzZWN0aW9uIiAvPnRvIGFyaXRobWV0aWM/PC9wPjwvdHJhbnNsYXRpb24+"
translation['7.7c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3YyIgdW5pdD0ic2VjdGlvbiIgLz50byBhcml0aG1ldGljPzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2YgY291cnNlIHdlIHNob3VsZC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9mIGNvdXJzZSB3ZSBzaG91bGQuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCB0b28sIGlmIHdlIHdlcmUgdG8gZGlzYWdyZWUgYWJvdXQgdGhlIHJlbGF0aXZlIHNpemUgb2YgdGhpbmdzLCB3ZSBzaG91bGQgcXVpY2tseSBwdXQgYW4gZW5kIHRvIHRoZSBkaXNhZ3JlZW1lbnQgYnkgbWVhc3VyaW5nPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCB0b28sIGlmIHdlIHdlcmUgdG8gZGlzYWdyZWUgYWJvdXQgdGhlIHJlbGF0aXZlIHNpemUgb2YgdGhpbmdzLCB3ZSBzaG91bGQgcXVpY2tseSBwdXQgYW4gZW5kIHRvIHRoZSBkaXNhZ3JlZW1lbnQgYnkgbWVhc3VyaW5nPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB3ZSBzaG91bGQsIEkgc3VwcG9zZSwgY29tZSB0byB0ZXJtcyBhYm91dCByZWxhdGl2ZSB3ZWlnaHRzIGJ5IHdlaWdoaW5nPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgd2Ugc2hvdWxkLCBJIHN1cHBvc2UsIGNvbWUgdG8gdGVybXMgYWJvdXQgcmVsYXRpdmUgd2VpZ2h0cyBieSB3ZWlnaGluZz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PZiBjb3Vyc2UuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PZiBjb3Vyc2UuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgYWJvdXQgd2hhdCB3b3VsZCBhIGRpc2FncmVlbWVudCBiZSwgd2hpY2ggd2UgY291bGQgbm90IHNldHRsZSBhbmQgd2hpY2ggd291bGQgY2F1c2UgdXMgdG8gYmUgZW5lbWllcyBhbmQgYmUgYW5ncnkgd2l0aCBlYWNoIG90aGVyPyAgUGVyaGFwcyB5b3UgY2Fubm90IGdpdmUgYW4gYW5zd2VyIG9mZmhhbmQ7CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3ZCIgdW5pdD0ic2VjdGlvbiIgLz5idXQgbGV0IG1lIHN1Z2dlc3QgaXQuICBJcyBpdCBub3QgYWJvdXQgcmlnaHQgYW5kIHdyb25nLCBhbmQgbm9ibGUgYW5kIGRpc2dyYWNlZnVsLCBhbmQgZ29vZCBhbmQgYmFkPyAgQXJlIG5vdCB0aGVzZSB0aGUgcXVlc3Rpb25zIGFib3V0IHdoaWNoIHlvdSBhbmQgSSBhbmQgb3RoZXIgcGVvcGxlIGJlY29tZSBlbmVtaWVzLCB3aGVuIHdlIGRvIGJlY29tZSBlbmVtaWVzLCBiZWNhdXNlIHdlIGRpZmZlciBhYm91dCB0aGVtIGFuZCBjYW5ub3QgcmVhY2ggYW55IHNhdGlzZmFjdG9yeSBhZ3JlZW1lbnQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBhYm91dCB3aGF0IHdvdWxkIGEgZGlzYWdyZWVtZW50IGJlLCB3aGljaCB3ZSBjb3VsZCBub3Qgc2V0dGxlIGFuZCB3aGljaCB3b3VsZCBjYXVzZSB1cyB0byBiZSBlbmVtaWVzIGFuZCBiZSBhbmdyeSB3aXRoIGVhY2ggb3RoZXI/ICBQZXJoYXBzIHlvdSBjYW5ub3QgZ2l2ZSBhbiBhbnN3ZXIgb2ZmaGFuZDsKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjdkIiB1bml0PSJzZWN0aW9uIiAvPmJ1dCBsZXQgbWUgc3VnZ2VzdCBpdC4gIElzIGl0IG5vdCBhYm91dCByaWdodCBhbmQgd3JvbmcsIGFuZCBub2JsZSBhbmQgZGlzZ3JhY2VmdWwsIGFuZCBnb29kIGFuZCBiYWQ/ICBBcmUgbm90IHRoZXNlIHRoZSBxdWVzdGlvbnMgYWJvdXQgd2hpY2ggeW91IGFuZCBJIGFuZCBvdGhlciBwZW9wbGUgYmVjb21lIGVuZW1pZXMsIHdoZW4gd2UgZG8gYmVjb21lIGVuZW1pZXMsIGJlY2F1c2Ugd2UgZGlmZmVyIGFib3V0IHRoZW0gYW5kIGNhbm5vdCByZWFjaCBhbnkgc2F0aXNmYWN0b3J5IGFncmVlbWVudD88L3A+PC90cmFuc2xhdGlvbj4="
translation['7.7d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3ZCIgdW5pdD0ic2VjdGlvbiIgLz5idXQgbGV0IG1lIHN1Z2dlc3QgaXQuICBJcyBpdCBub3QgYWJvdXQgcmlnaHQgYW5kIHdyb25nLCBhbmQgbm9ibGUgYW5kIGRpc2dyYWNlZnVsLCBhbmQgZ29vZCBhbmQgYmFkPyAgQXJlIG5vdCB0aGVzZSB0aGUgcXVlc3Rpb25zIGFib3V0IHdoaWNoIHlvdSBhbmQgSSBhbmQgb3RoZXIgcGVvcGxlIGJlY29tZSBlbmVtaWVzLCB3aGVuIHdlIGRvIGJlY29tZSBlbmVtaWVzLCBiZWNhdXNlIHdlIGRpZmZlciBhYm91dCB0aGVtIGFuZCBjYW5ub3QgcmVhY2ggYW55IHNhdGlzZmFjdG9yeSBhZ3JlZW1lbnQ/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIFNvY3JhdGVzLCB0aGVzZSBhcmUgdGhlIHF1ZXN0aW9ucyBhYm91dCB3aGljaCB3ZSBzaG91bGQgYmVjb21lIGVuZW1pZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIFNvY3JhdGVzLCB0aGVzZSBhcmUgdGhlIHF1ZXN0aW9ucyBhYm91dCB3aGljaCB3ZSBzaG91bGQgYmVjb21lIGVuZW1pZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgaG93IGFib3V0IHRoZSBnb2RzLDwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgaG93IGFib3V0IHRoZSBnb2RzLDwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklmIHRoZXkgZGlzYWdyZWUsIHdvdWxkIHRoZXkgbm90IGRpc2FncmVlIGFib3V0IHRoZXNlIHF1ZXN0aW9ucz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklmIHRoZXkgZGlzYWdyZWUsIHdvdWxkIHRoZXkgbm90IGRpc2FncmVlIGFib3V0IHRoZXNlIHF1ZXN0aW9ucz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5OZWNlc3NhcmlseS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjdlIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+TmVjZXNzYXJpbHkuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3ZSIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC90cmFuc2xhdGlvbj4="
translation['7.7e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI3ZSIgdW5pdD0ic2VjdGlvbiIgLz48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiwgbXkgbm9ibGUgRXV0aHlwaHJvLCBhY2NvcmRpbmcgdG8gd2hhdCB5b3Ugc2F5LCBzb21lIG9mIHRoZSBnb2RzIHRvbyB0aGluayBzb21lIHRoaW5ncyBhcmUgcmlnaHQgb3Igd3JvbmcgYW5kIG5vYmxlIG9yIGRpc2dyYWNlZnVsLCBhbmQgZ29vZCBvciBiYWQsIGFuZCBvdGhlcnMgZGlzYWdyZWU7ICBmb3IgdGhleSB3b3VsZCBub3QgcXVhcnJlbCB3aXRoIGVhY2ggb3RoZXIgaWYgdGhleSBkaWQgbm90IGRpc2FncmVlIGFib3V0IHRoZXNlIG1hdHRlcnMuICBJcyB0aGF0IHRoZSBjYXNlPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCBteSBub2JsZSBFdXRoeXBocm8sIGFjY29yZGluZyB0byB3aGF0IHlvdSBzYXksIHNvbWUgb2YgdGhlIGdvZHMgdG9vIHRoaW5rIHNvbWUgdGhpbmdzIGFyZSByaWdodCBvciB3cm9uZyBhbmQgbm9ibGUgb3IgZGlzZ3JhY2VmdWwsIGFuZCBnb29kIG9yIGJhZCwgYW5kIG90aGVycyBkaXNhZ3JlZTsgIGZvciB0aGV5IHdvdWxkIG5vdCBxdWFycmVsIHdpdGggZWFjaCBvdGhlciBpZiB0aGV5IGRpZCBub3QgZGlzYWdyZWUgYWJvdXQgdGhlc2UgbWF0dGVycy4gIElzIHRoYXQgdGhlIGNhc2U/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WW91IGFyZSByaWdodC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPllvdSBhcmUgcmlnaHQuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHRoZSBnb2RzIGluIGVhY2ggZ3JvdXAgbG92ZSB0aGUgdGhpbmdzIHdoaWNoIHRoZXkgY29uc2lkZXIgZ29vZCBhbmQgcmlnaHQgYW5kIGhhdGUgdGhlIG9wcG9zaXRlcyBvZiB0aGVzZSB0aGluZ3M/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gdGhlIGdvZHMgaW4gZWFjaCBncm91cCBsb3ZlIHRoZSB0aGluZ3Mgd2hpY2ggdGhleSBjb25zaWRlciBnb29kIGFuZCByaWdodCBhbmQgaGF0ZSB0aGUgb3Bwb3NpdGVzIG9mIHRoZXNlIHRoaW5ncz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgeW91IHNheSB0aGF0IHRoZSBzYW1lIHRoaW5ncyBhcmUgY29uc2lkZXJlZCByaWdodCBieSBzb21lIG9mIHRoZW0gYW5kIHdyb25nIGJ5IG90aGVyczsgIGFuZCBpdCBpcyBiZWNhdXNlIHRoZXkgZGlzYWdyZWUgYWJvdXQgdGhlc2UgdGhpbmdzCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4YSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IHRoZXkgcXVhcnJlbCBhbmQgd2FnZSB3YXIgd2l0aCBlYWNoIG90aGVyLiAgSXMgbm90IHRoaXMgd2hhdCB5b3Ugc2FpZD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHlvdSBzYXkgdGhhdCB0aGUgc2FtZSB0aGluZ3MgYXJlIGNvbnNpZGVyZWQgcmlnaHQgYnkgc29tZSBvZiB0aGVtIGFuZCB3cm9uZyBieSBvdGhlcnM7ICBhbmQgaXQgaXMgYmVjYXVzZSB0aGV5IGRpc2FncmVlIGFib3V0IHRoZXNlIHRoaW5ncwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOGEiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCB0aGV5IHF1YXJyZWwgYW5kIHdhZ2Ugd2FyIHdpdGggZWFjaCBvdGhlci4gIElzIG5vdCB0aGlzIHdoYXQgeW91IHNhaWQ/PC9wPjwvdHJhbnNsYXRpb24+"
translation['8.8a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4YSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IHRoZXkgcXVhcnJlbCBhbmQgd2FnZSB3YXIgd2l0aCBlYWNoIG90aGVyLiAgSXMgbm90IHRoaXMgd2hhdCB5b3Ugc2FpZD88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkl0IGlzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SXQgaXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCBhcyBpdCBzZWVtcywgdGhlIHNhbWUgdGhpbmdzIGFyZSBoYXRlZCBhbmQgbG92ZWQgYnkgdGhlIGdvZHMsIGFuZCB0aGUgc2FtZSB0aGluZ3Mgd291bGQgYmUgZGVhciBhbmQgaGF0ZWZ1bCB0byB0aGUgZ29kcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiwgYXMgaXQgc2VlbXMsIHRoZSBzYW1lIHRoaW5ncyBhcmUgaGF0ZWQgYW5kIGxvdmVkIGJ5IHRoZSBnb2RzLCBhbmQgdGhlIHNhbWUgdGhpbmdzIHdvdWxkIGJlIGRlYXIgYW5kIGhhdGVmdWwgdG8gdGhlIGdvZHMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U28gaXQgc2VlbXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5TbyBpdCBzZWVtcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB0aGVuIHRoZSBzYW1lIHRoaW5ncyB3b3VsZCBiZSBib3RoIGhvbHkgYW5kIHVuaG9seSwgRXV0aHlwaHJvLCBhY2NvcmRpbmcgdG8gdGhpcyBzdGF0ZW1lbnQuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB0aGVuIHRoZSBzYW1lIHRoaW5ncyB3b3VsZCBiZSBib3RoIGhvbHkgYW5kIHVuaG9seSwgRXV0aHlwaHJvLCBhY2NvcmRpbmcgdG8gdGhpcyBzdGF0ZW1lbnQuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBzdXBwb3NlIHNvLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBzdXBwb3NlIHNvLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB5b3UgZGlkIG5vdCBhbnN3ZXIgbXkgcXVlc3Rpb24sIG15IGZyaWVuZC4gIEZvciBJIGRpZCBub3QgYXNrIHlvdSB3aGF0IGlzIGF0IG9uY2UgaG9seSBhbmQgdW5ob2x5OyAgYnV0LCBqdWRnaW5nIGZyb20geW91ciByZXBseSwgd2hhdCBpcyBkZWFyIHRvIHRoZSBnb2RzIGlzIGFsc28gaGF0ZWZ1bCB0byB0aGUgZ29kcy4gIEFuZCBzbywgRXV0aHlwaHJvLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOGIiIHVuaXQ9InNlY3Rpb24iIC8+aXQgd291bGQgbm90IGJlIHN1cnByaXNpbmcgaWYsIGluIHB1bmlzaGluZyB5b3VyIGZhdGhlciBhcyB5b3UgYXJlIGRvaW5nLCB5b3Ugd2VyZSBwZXJmb3JtaW5nIGFuIGFjdCB0aGF0IGlzIHBsZWFzaW5nIHRvIFpldXMsIGJ1dCBoYXRlZnVsIHRvIENyb251cyBhbmQgVXJhbnVzLCBhbmQgcGxlYXNpbmcgdG8gSGVwaGFlc3R1cywgYnV0IGhhdGVmdWwgdG8gSGVyYSwgYW5kIHNvIGZvcnRoIGluIHJlc3BlY3QgdG8gdGhlIG90aGVyIGdvZHMsIGlmIGFueSBkaXNhZ3JlZSB3aXRoIGFueSBvdGhlciBhYm91dCBpdC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB5b3UgZGlkIG5vdCBhbnN3ZXIgbXkgcXVlc3Rpb24sIG15IGZyaWVuZC4gIEZvciBJIGRpZCBub3QgYXNrIHlvdSB3aGF0IGlzIGF0IG9uY2UgaG9seSBhbmQgdW5ob2x5OyAgYnV0LCBqdWRnaW5nIGZyb20geW91ciByZXBseSwgd2hhdCBpcyBkZWFyIHRvIHRoZSBnb2RzIGlzIGFsc28gaGF0ZWZ1bCB0byB0aGUgZ29kcy4gIEFuZCBzbywgRXV0aHlwaHJvLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOGIiIHVuaXQ9InNlY3Rpb24iIC8+aXQgd291bGQgbm90IGJlIHN1cnByaXNpbmcgaWYsIGluIHB1bmlzaGluZyB5b3VyIGZhdGhlciBhcyB5b3UgYXJlIGRvaW5nLCB5b3Ugd2VyZSBwZXJmb3JtaW5nIGFuIGFjdCB0aGF0IGlzIHBsZWFzaW5nIHRvIFpldXMsIGJ1dCBoYXRlZnVsIHRvIENyb251cyBhbmQgVXJhbnVzLCBhbmQgcGxlYXNpbmcgdG8gSGVwaGFlc3R1cywgYnV0IGhhdGVmdWwgdG8gSGVyYSwgYW5kIHNvIGZvcnRoIGluIHJlc3BlY3QgdG8gdGhlIG90aGVyIGdvZHMsIGlmIGFueSBkaXNhZ3JlZSB3aXRoIGFueSBvdGhlciBhYm91dCBpdC48L3A+PC90cmFuc2xhdGlvbj4="
translation['8.8b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4YiIgdW5pdD0ic2VjdGlvbiIgLz5pdCB3b3VsZCBub3QgYmUgc3VycHJpc2luZyBpZiwgaW4gcHVuaXNoaW5nIHlvdXIgZmF0aGVyIGFzIHlvdSBhcmUgZG9pbmcsIHlvdSB3ZXJlIHBlcmZvcm1pbmcgYW4gYWN0IHRoYXQgaXMgcGxlYXNpbmcgdG8gWmV1cywgYnV0IGhhdGVmdWwgdG8gQ3JvbnVzIGFuZCBVcmFudXMsIGFuZCBwbGVhc2luZyB0byBIZXBoYWVzdHVzLCBidXQgaGF0ZWZ1bCB0byBIZXJhLCBhbmQgc28gZm9ydGggaW4gcmVzcGVjdCB0byB0aGUgb3RoZXIgZ29kcywgaWYgYW55IGRpc2FncmVlIHdpdGggYW55IG90aGVyIGFib3V0IGl0LjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IEkgdGhpbmssIFNvY3JhdGVzLCB0aGF0IG5vbmUgb2YgdGhlIGdvZHMgZGlzYWdyZWVzIHdpdGggYW55IG90aGVyIGFib3V0IHRoaXMsIG9yIGhvbGRzIHRoYXQgaGUgd2hvIGtpbGxzIGFueW9uZSB3cm9uZ2Z1bGx5IG91Z2h0IG5vdCB0byBwYXkgdGhlIHBlbmFsdHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgSSB0aGluaywgU29jcmF0ZXMsIHRoYXQgbm9uZSBvZiB0aGUgZ29kcyBkaXNhZ3JlZXMgd2l0aCBhbnkgb3RoZXIgYWJvdXQgdGhpcywgb3IgaG9sZHMgdGhhdCBoZSB3aG8ga2lsbHMgYW55b25lIHdyb25nZnVsbHkgb3VnaHQgbm90IHRvIHBheSB0aGUgcGVuYWx0eS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwsIEV1dGh5cGhybywgdG8gcmV0dXJuIHRvIG1lbiwgZGlkIHlvdSBldmVyIGhlYXIgYW55Ym9keSBhcmd1aW5nIHRoYXQgaGUgd2hvIGhhZCBraWxsZWQgYW55b25lIHdyb25nZnVsbHksCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4YyIgdW5pdD0ic2VjdGlvbiIgLz5vciBoYWQgZG9uZSBhbnl0aGluZyBlbHNlIHdoYXRldmVyIHdyb25nZnVsbHksIG91Z2h0IG5vdCB0byBwYXkgdGhlIHBlbmFsdHk/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwsIEV1dGh5cGhybywgdG8gcmV0dXJuIHRvIG1lbiwgZGlkIHlvdSBldmVyIGhlYXIgYW55Ym9keSBhcmd1aW5nIHRoYXQgaGUgd2hvIGhhZCBraWxsZWQgYW55b25lIHdyb25nZnVsbHksCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4YyIgdW5pdD0ic2VjdGlvbiIgLz5vciBoYWQgZG9uZSBhbnl0aGluZyBlbHNlIHdoYXRldmVyIHdyb25nZnVsbHksIG91Z2h0IG5vdCB0byBwYXkgdGhlIHBlbmFsdHk/PC9wPjwvdHJhbnNsYXRpb24+"
translation['8.8c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4YyIgdW5pdD0ic2VjdGlvbiIgLz5vciBoYWQgZG9uZSBhbnl0aGluZyBlbHNlIHdoYXRldmVyIHdyb25nZnVsbHksIG91Z2h0IG5vdCB0byBwYXkgdGhlIHBlbmFsdHk/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaHksIHRoZXkgYXJlIGFsd2F5cyBhcmd1aW5nIHRoZXNlIHBvaW50cywgZXNwZWNpYWxseSBpbiB0aGUgbGF3IGNvdXJ0cy4gIEZvciB0aGV5IGRvIHZlcnkgbWFueSB3cm9uZyB0aGluZ3M7ICBhbmQgdGhlbiB0aGVyZSBpcyBub3RoaW5nIHRoZXkgd2lsbCBub3QgZG8gb3Igc2F5LCBpbiBkZWZlbmRpbmcgdGhlbXNlbHZlcywgdG8gYXZvaWQgdGhlIHBlbmFsdHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaHksIHRoZXkgYXJlIGFsd2F5cyBhcmd1aW5nIHRoZXNlIHBvaW50cywgZXNwZWNpYWxseSBpbiB0aGUgbGF3IGNvdXJ0cy4gIEZvciB0aGV5IGRvIHZlcnkgbWFueSB3cm9uZyB0aGluZ3M7ICBhbmQgdGhlbiB0aGVyZSBpcyBub3RoaW5nIHRoZXkgd2lsbCBub3QgZG8gb3Igc2F5LCBpbiBkZWZlbmRpbmcgdGhlbXNlbHZlcywgdG8gYXZvaWQgdGhlIHBlbmFsdHkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIGJ1dCBkbyB0aGV5IGFja25vd2xlZGdlLCBFdXRoeXBocm8sIHRoYXQgdGhleSBoYXZlIGRvbmUgd3JvbmcgYW5kLCBhbHRob3VnaCB0aGV5IGFja25vd2xlZGdlIGl0LCBuZXZlcnRoZWxlc3Mgc2F5IHRoYXQgdGhleSBvdWdodCBub3QgdG8gcGF5IHRoZSBwZW5hbHR5PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIGJ1dCBkbyB0aGV5IGFja25vd2xlZGdlLCBFdXRoeXBocm8sIHRoYXQgdGhleSBoYXZlIGRvbmUgd3JvbmcgYW5kLCBhbHRob3VnaCB0aGV5IGFja25vd2xlZGdlIGl0LCBuZXZlcnRoZWxlc3Mgc2F5IHRoYXQgdGhleSBvdWdodCBub3QgdG8gcGF5IHRoZSBwZW5hbHR5PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9oLCBubywgdGhleSBkb24ndCBkbyB0aGF0LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2gsIG5vLCB0aGV5IGRvbid0IGRvIHRoYXQuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHRoZXJlIGlzIHNvbWV0aGluZyB0aGV5IGRvIG5vdCBkbyBhbmQgc2F5LiAgRm9yIHRoZXkgZG8gbm90LCBJIGZhbmN5LCBkYXJlIHRvIHNheSBhbmQgYXJndWUgdGhhdCwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjhkIiB1bml0PSJzZWN0aW9uIiAvPmlmIHRoZXkgaGF2ZSByZWFsbHkgZG9uZSB3cm9uZywgdGhleSBvdWdodCBub3QgdG8gcGF5IHRoZSBwZW5hbHR5OyAgYnV0LCBJIHRoaW5rLCB0aGV5IHNheSB0aGV5IGhhdmUgbm90IGRvbmUgd3Jvbmc7ICBkbyB0aGV5IG5vdD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB0aGVyZSBpcyBzb21ldGhpbmcgdGhleSBkbyBub3QgZG8gYW5kIHNheS4gIEZvciB0aGV5IGRvIG5vdCwgSSBmYW5jeSwgZGFyZSB0byBzYXkgYW5kIGFyZ3VlIHRoYXQsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4ZCIgdW5pdD0ic2VjdGlvbiIgLz5pZiB0aGV5IGhhdmUgcmVhbGx5IGRvbmUgd3JvbmcsIHRoZXkgb3VnaHQgbm90IHRvIHBheSB0aGUgcGVuYWx0eTsgIGJ1dCwgSSB0aGluaywgdGhleSBzYXkgdGhleSBoYXZlIG5vdCBkb25lIHdyb25nOyAgZG8gdGhleSBub3Q/PC9wPjwvdHJhbnNsYXRpb24+"
translation['8.8d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4ZCIgdW5pdD0ic2VjdGlvbiIgLz5pZiB0aGV5IGhhdmUgcmVhbGx5IGRvbmUgd3JvbmcsIHRoZXkgb3VnaHQgbm90IHRvIHBheSB0aGUgcGVuYWx0eTsgIGJ1dCwgSSB0aGluaywgdGhleSBzYXkgdGhleSBoYXZlIG5vdCBkb25lIHdyb25nOyAgZG8gdGhleSBub3Q/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Zb3UgYXJlIHJpZ2h0LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WW91IGFyZSByaWdodC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gdGhleSBkbyBub3QgYXJndWUgdGhpcyBwb2ludCwgdGhhdCB0aGUgd3Jvbmdkb2VyIG11c3Qgbm90IHBheSB0aGUgcGVuYWx0eTsgIGJ1dCBwZXJoYXBzIHRoZXkgYXJndWUgYWJvdXQgdGhpcywgd2hvIGlzIGEgd3Jvbmdkb2VyLCBhbmQgd2hhdCBoZSBkaWQsIGFuZCB3aGVuLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHRoZXkgZG8gbm90IGFyZ3VlIHRoaXMgcG9pbnQsIHRoYXQgdGhlIHdyb25nZG9lciBtdXN0IG5vdCBwYXkgdGhlIHBlbmFsdHk7ICBidXQgcGVyaGFwcyB0aGV5IGFyZ3VlIGFib3V0IHRoaXMsIHdobyBpcyBhIHdyb25nZG9lciwgYW5kIHdoYXQgaGUgZGlkLCBhbmQgd2hlbi48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGF0IGlzIHRydWUuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGF0IGlzIHRydWUuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGlzIG5vdCB0aGUgc2FtZSB0aGluZyB0cnVlIG9mIHRoZSBnb2RzLCBpZiB0aGV5IHF1YXJyZWwgYWJvdXQgcmlnaHQgYW5kIHdyb25nLCBhcyB5b3Ugc2F5LCBhbmQgc29tZSBzYXkgb3RoZXJzIGhhdmUgZG9uZSB3cm9uZywgYW5kIHNvbWUgc2F5IHRoZXkgaGF2ZSBub3Q/ICBGb3Igc3VyZWx5LCBteSBmcmllbmQsIG5vIG9uZSwgZWl0aGVyIG9mIGdvZHMgb3IgbWVuLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOGUiIHVuaXQ9InNlY3Rpb24iIC8+aGFzIHRoZSBmYWNlIHRvIHNheSB0aGF0IGhlIHdobyBkb2VzIHdyb25nIG91Z2h0IG5vdCB0byBwYXkgdGhlIHBlbmFsdHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gaXMgbm90IHRoZSBzYW1lIHRoaW5nIHRydWUgb2YgdGhlIGdvZHMsIGlmIHRoZXkgcXVhcnJlbCBhYm91dCByaWdodCBhbmQgd3JvbmcsIGFzIHlvdSBzYXksIGFuZCBzb21lIHNheSBvdGhlcnMgaGF2ZSBkb25lIHdyb25nLCBhbmQgc29tZSBzYXkgdGhleSBoYXZlIG5vdD8gIEZvciBzdXJlbHksIG15IGZyaWVuZCwgbm8gb25lLCBlaXRoZXIgb2YgZ29kcyBvciBtZW4sCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4ZSIgdW5pdD0ic2VjdGlvbiIgLz5oYXMgdGhlIGZhY2UgdG8gc2F5IHRoYXQgaGUgd2hvIGRvZXMgd3Jvbmcgb3VnaHQgbm90IHRvIHBheSB0aGUgcGVuYWx0eS48L3A+PC90cmFuc2xhdGlvbj4="
translation['8.8e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI4ZSIgdW5pdD0ic2VjdGlvbiIgLz5oYXMgdGhlIGZhY2UgdG8gc2F5IHRoYXQgaGUgd2hvIGRvZXMgd3Jvbmcgb3VnaHQgbm90IHRvIHBheSB0aGUgcGVuYWx0eS48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywgeW91IGFyZSByaWdodCBhYm91dCB0aGlzLCBTb2NyYXRlcywgaW4gdGhlIG1haW4uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIHlvdSBhcmUgcmlnaHQgYWJvdXQgdGhpcywgU29jcmF0ZXMsIGluIHRoZSBtYWluLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IEkgdGhpbmssIEV1dGh5cGhybywgdGhvc2Ugd2hvIGRpc3B1dGUsIGJvdGggbWVuIGFuZCBnb2RzLCBpZiB0aGUgZ29kcyBkbyBkaXNwdXRlLCBkaXNwdXRlIGFib3V0IGVhY2ggc2VwYXJhdGUgYWN0LiAgV2hlbiB0aGV5IGRpZmZlciB3aXRoIG9uZSBhbm90aGVyIGFib3V0IGFueSBhY3QsIHNvbWUgc2F5IGl0IHdhcyByaWdodCBhbmQgb3RoZXJzIHRoYXQgaXQgd2FzIHdyb25nLiAgSXMgaXQgbm90IHNvPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgSSB0aGluaywgRXV0aHlwaHJvLCB0aG9zZSB3aG8gZGlzcHV0ZSwgYm90aCBtZW4gYW5kIGdvZHMsIGlmIHRoZSBnb2RzIGRvIGRpc3B1dGUsIGRpc3B1dGUgYWJvdXQgZWFjaCBzZXBhcmF0ZSBhY3QuICBXaGVuIHRoZXkgZGlmZmVyIHdpdGggb25lIGFub3RoZXIgYWJvdXQgYW55IGFjdCwgc29tZSBzYXkgaXQgd2FzIHJpZ2h0IGFuZCBvdGhlcnMgdGhhdCBpdCB3YXMgd3JvbmcuICBJcyBpdCBub3Qgc28/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q29tZSBub3csIG15IGRlYXIgRXV0aHlwaHJvLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOWEiIHVuaXQ9InNlY3Rpb24iIC8+aW5mb3JtIG1lLCB0aGF0IEkgbWF5IGJlIG1hZGUgd2lzZXIsIHdoYXQgcHJvb2YgeW91IGhhdmUgdGhhdCBhbGwgdGhlIGdvZHMgdGhpbmsgdGhhdCB0aGUgbWFuIGxvc3QgaGlzIGxpZmUgd3JvbmdmdWxseSwgd2hvLCB3aGVuIGhlIHdhcyBhIHNlcnZhbnQsIGNvbW1pdHRlZCBtdXJkZXIsIHdhcyBib3VuZCBieSB0aGUgbWFzdGVyIG9mIHRoZSBtYW4gaGUga2lsbGVkLCBhbmQgZGllZCBhcyBhIHJlc3VsdCBvZiBoaXMgYm9uZHMgYmVmb3JlIHRoZSBtYXN0ZXIgd2hvIGhhZCBib3VuZCBoaW0gZm91bmQgb3V0IGZyb20gdGhlIGFkdmlzZXJzIHdoYXQgaGUgb3VnaHQgdG8gZG8gd2l0aCBoaW0sIGFuZCB0aGF0IGl0IGlzIHJpZ2h0IG9uIGFjY291bnQgb2Ygc3VjaCBhIG1hbiBmb3IgYSBzb24gdG8gcHJvY2VlZCBhZ2FpbnN0IGhpcyBmYXRoZXIgYW5kIGFjY3VzZSBoaW0gb2YgbXVyZGVyLiAgQ29tZSwgdHJ5IHRvIHNob3cgbWUgY2xlYXJseSBhYm91dCB0aGlzLCB0aGF0CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5YiIgdW5pdD0ic2VjdGlvbiIgLz50aGUgZ29kcyBzdXJlbHkgYmVsaWV2ZSB0aGF0IHRoaXMgY29uZHVjdCBpcyByaWdodDsgIGFuZCBpZiB5b3Ugc2hvdyBpdCB0byBteSBzYXRpc2ZhY3Rpb24sIEkgd2lsbCBnbG9yaWZ5IHlvdXIgd2lzZG9tIGFzIGxvbmcgYXMgSSBsaXZlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Db21lIG5vdywgbXkgZGVhciBFdXRoeXBocm8sCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5YSIgdW5pdD0ic2VjdGlvbiIgLz5pbmZvcm0gbWUsIHRoYXQgSSBtYXkgYmUgbWFkZSB3aXNlciwgd2hhdCBwcm9vZiB5b3UgaGF2ZSB0aGF0IGFsbCB0aGUgZ29kcyB0aGluayB0aGF0IHRoZSBtYW4gbG9zdCBoaXMgbGlmZSB3cm9uZ2Z1bGx5LCB3aG8sIHdoZW4gaGUgd2FzIGEgc2VydmFudCwgY29tbWl0dGVkIG11cmRlciwgd2FzIGJvdW5kIGJ5IHRoZSBtYXN0ZXIgb2YgdGhlIG1hbiBoZSBraWxsZWQsIGFuZCBkaWVkIGFzIGEgcmVzdWx0IG9mIGhpcyBib25kcyBiZWZvcmUgdGhlIG1hc3RlciB3aG8gaGFkIGJvdW5kIGhpbSBmb3VuZCBvdXQgZnJvbSB0aGUgYWR2aXNlcnMgd2hhdCBoZSBvdWdodCB0byBkbyB3aXRoIGhpbSwgYW5kIHRoYXQgaXQgaXMgcmlnaHQgb24gYWNjb3VudCBvZiBzdWNoIGEgbWFuIGZvciBhIHNvbiB0byBwcm9jZWVkIGFnYWluc3QgaGlzIGZhdGhlciBhbmQgYWNjdXNlIGhpbSBvZiBtdXJkZXIuICBDb21lLCB0cnkgdG8gc2hvdyBtZSBjbGVhcmx5IGFib3V0IHRoaXMsIHRoYXQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjliIiB1bml0PSJzZWN0aW9uIiAvPnRoZSBnb2RzIHN1cmVseSBiZWxpZXZlIHRoYXQgdGhpcyBjb25kdWN0IGlzIHJpZ2h0OyAgYW5kIGlmIHlvdSBzaG93IGl0IHRvIG15IHNhdGlzZmFjdGlvbiwgSSB3aWxsIGdsb3JpZnkgeW91ciB3aXNkb20gYXMgbG9uZyBhcyBJIGxpdmUuPC9wPjwvdHJhbnNsYXRpb24+"
translation['9.9a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5YSIgdW5pdD0ic2VjdGlvbiIgLz5pbmZvcm0gbWUsIHRoYXQgSSBtYXkgYmUgbWFkZSB3aXNlciwgd2hhdCBwcm9vZiB5b3UgaGF2ZSB0aGF0IGFsbCB0aGUgZ29kcyB0aGluayB0aGF0IHRoZSBtYW4gbG9zdCBoaXMgbGlmZSB3cm9uZ2Z1bGx5LCB3aG8sIHdoZW4gaGUgd2FzIGEgc2VydmFudCwgY29tbWl0dGVkIG11cmRlciwgd2FzIGJvdW5kIGJ5IHRoZSBtYXN0ZXIgb2YgdGhlIG1hbiBoZSBraWxsZWQsIGFuZCBkaWVkIGFzIGEgcmVzdWx0IG9mIGhpcyBib25kcyBiZWZvcmUgdGhlIG1hc3RlciB3aG8gaGFkIGJvdW5kIGhpbSBmb3VuZCBvdXQgZnJvbSB0aGUgYWR2aXNlcnMgd2hhdCBoZSBvdWdodCB0byBkbyB3aXRoIGhpbSwgYW5kIHRoYXQgaXQgaXMgcmlnaHQgb24gYWNjb3VudCBvZiBzdWNoIGEgbWFuIGZvciBhIHNvbiB0byBwcm9jZWVkIGFnYWluc3QgaGlzIGZhdGhlciBhbmQgYWNjdXNlIGhpbSBvZiBtdXJkZXIuICBDb21lLCB0cnkgdG8gc2hvdyBtZSBjbGVhcmx5IGFib3V0IHRoaXMsIHRoYXQKPC90cmFuc2xhdGlvbj4="
translation['9.9b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5YiIgdW5pdD0ic2VjdGlvbiIgLz50aGUgZ29kcyBzdXJlbHkgYmVsaWV2ZSB0aGF0IHRoaXMgY29uZHVjdCBpcyByaWdodDsgIGFuZCBpZiB5b3Ugc2hvdyBpdCB0byBteSBzYXRpc2ZhY3Rpb24sIEkgd2lsbCBnbG9yaWZ5IHlvdXIgd2lzZG9tIGFzIGxvbmcgYXMgSSBsaXZlLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHBlcmhhcHMgdGhpcyBpcyBubyBzbWFsbCB0YXNrLCBTb2NyYXRlczsgIHRob3VnaCBJIGNvdWxkIHNob3cgeW91IHF1aXRlIGNsZWFybHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgcGVyaGFwcyB0aGlzIGlzIG5vIHNtYWxsIHRhc2ssIFNvY3JhdGVzOyAgdGhvdWdoIEkgY291bGQgc2hvdyB5b3UgcXVpdGUgY2xlYXJseS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdW5kZXJzdGFuZDsgIGl0IGlzIGJlY2F1c2UgeW91IHRoaW5rIEkgYW0gc2xvd2VyIHRvIHVuZGVyc3RhbmQgdGhhbiB0aGUganVkZ2VzOyAgc2luY2UgaXQgaXMgcGxhaW4gdGhhdCB5b3Ugd2lsbCBzaG93IHRoZW0gdGhhdCBzdWNoIGFjdHMgYXJlIHdyb25nIGFuZCB0aGF0IGFsbCB0aGUgZ29kcyBoYXRlIHRoZW0uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdW5kZXJzdGFuZDsgIGl0IGlzIGJlY2F1c2UgeW91IHRoaW5rIEkgYW0gc2xvd2VyIHRvIHVuZGVyc3RhbmQgdGhhbiB0aGUganVkZ2VzOyAgc2luY2UgaXQgaXMgcGxhaW4gdGhhdCB5b3Ugd2lsbCBzaG93IHRoZW0gdGhhdCBzdWNoIGFjdHMgYXJlIHdyb25nIGFuZCB0aGF0IGFsbCB0aGUgZ29kcyBoYXRlIHRoZW0uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UXVpdGUgY2xlYXJseSwgU29jcmF0ZXM7ICB0aGF0IGlzLCBpZiB0aGV5IGxpc3RlbiB0byBtZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlF1aXRlIGNsZWFybHksIFNvY3JhdGVzOyAgdGhhdCBpcywgaWYgdGhleSBsaXN0ZW4gdG8gbWUuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGV5IHdpbGwgbGlzdGVuLCBpZiB0aGV5IGZpbmQgdGhhdCB5b3UgYXJlIGEgZ29vZCBzcGVha2VyLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iOWMiIHVuaXQ9InNlY3Rpb24iIC8+QnV0IHRoaXMgb2NjdXJyZWQgdG8gbWUgd2hpbGUgeW91IHdlcmUgdGFsa2luZywgYW5kIEkgc2FpZCB0byBteXNlbGY6ICDigJxJZiBFdXRoeXBocm8gc2hvdWxkIHByb3ZlIHRvIG1lIG5vIG1hdHRlciBob3cgY2xlYXJseSB0aGF0IGFsbCB0aGUgZ29kcyB0aGluayBzdWNoIGEgZGVhdGggaXMgd3JvbmdmdWwsIHdoYXQgaGF2ZSBJIGxlYXJuZWQgZnJvbSBFdXRoeXBocm8gYWJvdXQgdGhlIHF1ZXN0aW9uLCB3aGF0IGlzIGhvbGluZXNzIGFuZCB3aGF0IGlzIHVuaG9saW5lc3M/ICBGb3IgdGhpcyBhY3Qgd291bGQsIGFzIGl0IHNlZW1zLCBiZSBoYXRlZnVsIHRvIHRoZSBnb2RzOyAgYnV0IHdlIHNhdyBqdXN0IG5vdyB0aGF0IGhvbGluZXNzIGFuZCBpdHMgb3Bwb3NpdGUgYXJlIG5vdCBkZWZpbmVkIGluIHRoaXMgd2F5OyAgZm9yIHdlIHNhdyB0aGF0IHdoYXQgaXMgaGF0ZWZ1bCB0byB0aGUgZ29kcyBpcyBhbHNvIGRlYXIgdG8gdGhlbTsgIGFuZCBzbyBJIGxldCB5b3Ugb2ZmIGFueSBkaXNjdXNzaW9uIG9mIHRoaXMgcG9pbnQsPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZXkgd2lsbCBsaXN0ZW4sIGlmIHRoZXkgZmluZCB0aGF0IHlvdSBhcmUgYSBnb29kIHNwZWFrZXIuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5YyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhpcyBvY2N1cnJlZCB0byBtZSB3aGlsZSB5b3Ugd2VyZSB0YWxraW5nLCBhbmQgSSBzYWlkIHRvIG15c2VsZjogIOKAnElmIEV1dGh5cGhybyBzaG91bGQgcHJvdmUgdG8gbWUgbm8gbWF0dGVyIGhvdyBjbGVhcmx5IHRoYXQgYWxsIHRoZSBnb2RzIHRoaW5rIHN1Y2ggYSBkZWF0aCBpcyB3cm9uZ2Z1bCwgd2hhdCBoYXZlIEkgbGVhcm5lZCBmcm9tIEV1dGh5cGhybyBhYm91dCB0aGUgcXVlc3Rpb24sIHdoYXQgaXMgaG9saW5lc3MgYW5kIHdoYXQgaXMgdW5ob2xpbmVzcz8gIEZvciB0aGlzIGFjdCB3b3VsZCwgYXMgaXQgc2VlbXMsIGJlIGhhdGVmdWwgdG8gdGhlIGdvZHM7ICBidXQgd2Ugc2F3IGp1c3Qgbm93IHRoYXQgaG9saW5lc3MgYW5kIGl0cyBvcHBvc2l0ZSBhcmUgbm90IGRlZmluZWQgaW4gdGhpcyB3YXk7ICBmb3Igd2Ugc2F3IHRoYXQgd2hhdCBpcyBoYXRlZnVsIHRvIHRoZSBnb2RzIGlzIGFsc28gZGVhciB0byB0aGVtOyAgYW5kIHNvIEkgbGV0IHlvdSBvZmYgYW55IGRpc2N1c3Npb24gb2YgdGhpcyBwb2ludCw8L3A+PC90cmFuc2xhdGlvbj4="
translation['9.9c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5YyIgdW5pdD0ic2VjdGlvbiIgLz5CdXQgdGhpcyBvY2N1cnJlZCB0byBtZSB3aGlsZSB5b3Ugd2VyZSB0YWxraW5nLCBhbmQgSSBzYWlkIHRvIG15c2VsZjogIOKAnElmIEV1dGh5cGhybyBzaG91bGQgcHJvdmUgdG8gbWUgbm8gbWF0dGVyIGhvdyBjbGVhcmx5IHRoYXQgYWxsIHRoZSBnb2RzIHRoaW5rIHN1Y2ggYSBkZWF0aCBpcyB3cm9uZ2Z1bCwgd2hhdCBoYXZlIEkgbGVhcm5lZCBmcm9tIEV1dGh5cGhybyBhYm91dCB0aGUgcXVlc3Rpb24sIHdoYXQgaXMgaG9saW5lc3MgYW5kIHdoYXQgaXMgdW5ob2xpbmVzcz8gIEZvciB0aGlzIGFjdCB3b3VsZCwgYXMgaXQgc2VlbXMsIGJlIGhhdGVmdWwgdG8gdGhlIGdvZHM7ICBidXQgd2Ugc2F3IGp1c3Qgbm93IHRoYXQgaG9saW5lc3MgYW5kIGl0cyBvcHBvc2l0ZSBhcmUgbm90IGRlZmluZWQgaW4gdGhpcyB3YXk7ICBmb3Igd2Ugc2F3IHRoYXQgd2hhdCBpcyBoYXRlZnVsIHRvIHRoZSBnb2RzIGlzIGFsc28gZGVhciB0byB0aGVtOyAgYW5kIHNvIEkgbGV0IHlvdSBvZmYgYW55IGRpc2N1c3Npb24gb2YgdGhpcyBwb2ludCw8c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklmIHlvdSBsaWtlLCBhbGwgdGhlIGdvZHMKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjlkIiB1bml0PSJzZWN0aW9uIiAvPm1heSB0aGluayBpdCB3cm9uZyBhbmQgbWF5IGhhdGUgaXQuICBCdXQgc2hhbGwgd2Ugbm93IGVtZW5kIG91ciBkZWZpbml0aW9uIGFuZCBzYXkgdGhhdCB3aGF0ZXZlciBhbGwgdGhlIGdvZHMgaGF0ZSBpcyB1bmhvbHkgYW5kIHdoYXRldmVyIHRoZXkgYWxsIGxvdmUgaXMgaG9seSwgYW5kIHdoYXQgc29tZSBsb3ZlIGFuZCBvdGhlcnMgaGF0ZSBpcyBuZWl0aGVyIG9yIGJvdGg/ICBEbyB5b3Ugd2lzaCB0aGlzIG5vdyB0byBiZSBvdXIgZGVmaW5pdGlvbiBvZiBob2xpbmVzcyBhbmQgdW5ob2xpbmVzcz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklmIHlvdSBsaWtlLCBhbGwgdGhlIGdvZHMKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjlkIiB1bml0PSJzZWN0aW9uIiAvPm1heSB0aGluayBpdCB3cm9uZyBhbmQgbWF5IGhhdGUgaXQuICBCdXQgc2hhbGwgd2Ugbm93IGVtZW5kIG91ciBkZWZpbml0aW9uIGFuZCBzYXkgdGhhdCB3aGF0ZXZlciBhbGwgdGhlIGdvZHMgaGF0ZSBpcyB1bmhvbHkgYW5kIHdoYXRldmVyIHRoZXkgYWxsIGxvdmUgaXMgaG9seSwgYW5kIHdoYXQgc29tZSBsb3ZlIGFuZCBvdGhlcnMgaGF0ZSBpcyBuZWl0aGVyIG9yIGJvdGg/ICBEbyB5b3Ugd2lzaCB0aGlzIG5vdyB0byBiZSBvdXIgZGVmaW5pdGlvbiBvZiBob2xpbmVzcyBhbmQgdW5ob2xpbmVzcz88L3A+PC90cmFuc2xhdGlvbj4="
translation['9.9d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5ZCIgdW5pdD0ic2VjdGlvbiIgLz5tYXkgdGhpbmsgaXQgd3JvbmcgYW5kIG1heSBoYXRlIGl0LiAgQnV0IHNoYWxsIHdlIG5vdyBlbWVuZCBvdXIgZGVmaW5pdGlvbiBhbmQgc2F5IHRoYXQgd2hhdGV2ZXIgYWxsIHRoZSBnb2RzIGhhdGUgaXMgdW5ob2x5IGFuZCB3aGF0ZXZlciB0aGV5IGFsbCBsb3ZlIGlzIGhvbHksIGFuZCB3aGF0IHNvbWUgbG92ZSBhbmQgb3RoZXJzIGhhdGUgaXMgbmVpdGhlciBvciBib3RoPyAgRG8geW91IHdpc2ggdGhpcyBub3cgdG8gYmUgb3VyIGRlZmluaXRpb24gb2YgaG9saW5lc3MgYW5kIHVuaG9saW5lc3M/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IGlzIHRvIGhpbmRlciwgU29jcmF0ZXM/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IGlzIHRvIGhpbmRlciwgU29jcmF0ZXM/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3RoaW5nLCBzbyBmYXIgYXMgSSBhbSBjb25jZXJuZWQsIEV1dGh5cGhybywgYnV0IGNvbnNpZGVyIHlvdXIgb3duIHBvc2l0aW9uLCB3aGV0aGVyIGJ5IGFkb3B0aW5nIHRoaXMgZGVmaW5pdGlvbiB5b3Ugd2lsbCBtb3N0IGVhc2lseSB0ZWFjaCBtZSB3aGF0IHlvdSBwcm9taXNlZC4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjllIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3RoaW5nLCBzbyBmYXIgYXMgSSBhbSBjb25jZXJuZWQsIEV1dGh5cGhybywgYnV0IGNvbnNpZGVyIHlvdXIgb3duIHBvc2l0aW9uLCB3aGV0aGVyIGJ5IGFkb3B0aW5nIHRoaXMgZGVmaW5pdGlvbiB5b3Ugd2lsbCBtb3N0IGVhc2lseSB0ZWFjaCBtZSB3aGF0IHlvdSBwcm9taXNlZC4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjllIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['9.9e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSI5ZSIgdW5pdD0ic2VjdGlvbiIgLz48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwsIEkgc2hvdWxkIHNheSB0aGF0IHdoYXQgYWxsIHRoZSBnb2RzIGxvdmUgaXMgaG9seSBhbmQsIG9uIHRoZSBvdGhlciBoYW5kLCB3aGF0IHRoZXkgYWxsIGhhdGUgaXMgdW5ob2x5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgSSBzaG91bGQgc2F5IHRoYXQgd2hhdCBhbGwgdGhlIGdvZHMgbG92ZSBpcyBob2x5IGFuZCwgb24gdGhlIG90aGVyIGhhbmQsIHdoYXQgdGhleSBhbGwgaGF0ZSBpcyB1bmhvbHkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHNoYWxsIHdlIGV4YW1pbmUgdGhpcyBhZ2FpbiwgRXV0aHlwaHJvLCB0byBzZWUgaWYgaXQgaXMgY29ycmVjdCwgb3Igc2hhbGwgd2UgbGV0IGl0IGdvIGFuZCBhY2NlcHQgb3VyIG93biBzdGF0ZW1lbnQsIGFuZCB0aG9zZSBvZiBvdGhlcnMsIGFncmVlaW5nIHRoYXQgaXQgaXMgc28sIGlmIGFueW9uZSBtZXJlbHkgc2F5cyB0aGF0IGl0IGlzPyAgT3Igb3VnaHQgd2UgdG8gaW5xdWlyZSBpbnRvIHRoZSBjb3JyZWN0bmVzcyBvZiB0aGUgc3RhdGVtZW50PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHNoYWxsIHdlIGV4YW1pbmUgdGhpcyBhZ2FpbiwgRXV0aHlwaHJvLCB0byBzZWUgaWYgaXQgaXMgY29ycmVjdCwgb3Igc2hhbGwgd2UgbGV0IGl0IGdvIGFuZCBhY2NlcHQgb3VyIG93biBzdGF0ZW1lbnQsIGFuZCB0aG9zZSBvZiBvdGhlcnMsIGFncmVlaW5nIHRoYXQgaXQgaXMgc28sIGlmIGFueW9uZSBtZXJlbHkgc2F5cyB0aGF0IGl0IGlzPyAgT3Igb3VnaHQgd2UgdG8gaW5xdWlyZSBpbnRvIHRoZSBjb3JyZWN0bmVzcyBvZiB0aGUgc3RhdGVtZW50PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlIG91Z2h0IHRvIGlucXVpcmUuICBIb3dldmVyLCBJIHRoaW5rIHRoaXMgaXMgbm93IGNvcnJlY3QuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZSBvdWdodCB0byBpbnF1aXJlLiAgSG93ZXZlciwgSSB0aGluayB0aGlzIGlzIG5vdyBjb3JyZWN0LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2Ugc2hhbGwgc29vbiBrbm93IG1vcmUgYWJvdXQgdGhpcywgbXkgZnJpZW5kLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTAiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwYSIgdW5pdD0ic2VjdGlvbiIgLz5KdXN0IGNvbnNpZGVyIHRoaXMgcXVlc3Rpb2464oCUSXMgdGhhdCB3aGljaCBpcyBob2x5IGxvdmVkIGJ5IHRoZSBnb2RzIGJlY2F1c2UgaXQgaXMgaG9seSwgb3IgaXMgaXQgaG9seSBiZWNhdXNlIGl0IGlzIGxvdmVkIGJ5IHRoZSBnb2RzPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZSBzaGFsbCBzb29uIGtub3cgbW9yZSBhYm91dCB0aGlzLCBteSBmcmllbmQuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTBhIiB1bml0PSJzZWN0aW9uIiAvPkp1c3QgY29uc2lkZXIgdGhpcyBxdWVzdGlvbjrigJRJcyB0aGF0IHdoaWNoIGlzIGhvbHkgbG92ZWQgYnkgdGhlIGdvZHMgYmVjYXVzZSBpdCBpcyBob2x5LCBvciBpcyBpdCBob2x5IGJlY2F1c2UgaXQgaXMgbG92ZWQgYnkgdGhlIGdvZHM/PC9wPjwvdHJhbnNsYXRpb24+"
translation['10.10a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTBhIiB1bml0PSJzZWN0aW9uIiAvPkp1c3QgY29uc2lkZXIgdGhpcyBxdWVzdGlvbjrigJRJcyB0aGF0IHdoaWNoIGlzIGhvbHkgbG92ZWQgYnkgdGhlIGdvZHMgYmVjYXVzZSBpdCBpcyBob2x5LCBvciBpcyBpdCBob2x5IGJlY2F1c2UgaXQgaXMgbG92ZWQgYnkgdGhlIGdvZHM/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvbid0IGtub3cgd2hhdCB5b3UgbWVhbiwgU29jcmF0ZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvbid0IGtub3cgd2hhdCB5b3UgbWVhbiwgU29jcmF0ZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIEkgd2lsbCB0cnkgdG8gc3BlYWsgbW9yZSBjbGVhcmx5LiAgV2Ugc3BlYWsgb2YgYmVpbmcgY2FycmllZCBhbmQgb2YgY2FycnlpbmcsIG9mIGJlaW5nIGxlZCBhbmQgb2YgbGVhZGluZywgb2YgYmVpbmcgc2VlbiBhbmQgb2Ygc2VlaW5nOyAgYW5kIHlvdSB1bmRlcnN0YW5k4oCUZG8geW91IG5vdD/igJR0aGF0IGluIGFsbCBzdWNoIGV4cHJlc3Npb25zIHRoZSB0d28gcGFydHMgZGlmZmVyIG9uZSBmcm9tIHRoZSBvdGhlciBpbiBtZWFuaW5nLCBhbmQgaG93IHRoZXkgZGlmZmVyLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIEkgd2lsbCB0cnkgdG8gc3BlYWsgbW9yZSBjbGVhcmx5LiAgV2Ugc3BlYWsgb2YgYmVpbmcgY2FycmllZCBhbmQgb2YgY2FycnlpbmcsIG9mIGJlaW5nIGxlZCBhbmQgb2YgbGVhZGluZywgb2YgYmVpbmcgc2VlbiBhbmQgb2Ygc2VlaW5nOyAgYW5kIHlvdSB1bmRlcnN0YW5k4oCUZG8geW91IG5vdD/igJR0aGF0IGluIGFsbCBzdWNoIGV4cHJlc3Npb25zIHRoZSB0d28gcGFydHMgZGlmZmVyIG9uZSBmcm9tIHRoZSBvdGhlciBpbiBtZWFuaW5nLCBhbmQgaG93IHRoZXkgZGlmZmVyLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdGhpbmsgSSB1bmRlcnN0YW5kLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB0aGluayBJIHVuZGVyc3RhbmQuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCB0b28sIHdlIGNvbmNlaXZlIG9mIGEgdGhpbmcgYmVpbmcgbG92ZWQgYW5kIG9mIGEgdGhpbmcgbG92aW5nLCBhbmQgdGhlIHR3byBhcmUgZGlmZmVyZW50PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCB0b28sIHdlIGNvbmNlaXZlIG9mIGEgdGhpbmcgYmVpbmcgbG92ZWQgYW5kIG9mIGEgdGhpbmcgbG92aW5nLCBhbmQgdGhlIHR3byBhcmUgZGlmZmVyZW50PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9mIGNvdXJzZS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwYiIgdW5pdD0ic2VjdGlvbiIgLz4gU29jcmF0ZXMuICBOb3cgdGVsbCBtZSwgaXMgYSB0aGluZyB3aGljaCBpcyBjYXJyaWVkIGEgY2FycmllZCB0aGluZyBiZWNhdXNlIG9uZSBjYXJyaWVzIGl0LCBvciBmb3Igc29tZSBvdGhlciByZWFzb24/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PZiBjb3Vyc2UuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMGIiIHVuaXQ9InNlY3Rpb24iIC8+IFNvY3JhdGVzLiAgTm93IHRlbGwgbWUsIGlzIGEgdGhpbmcgd2hpY2ggaXMgY2FycmllZCBhIGNhcnJpZWQgdGhpbmcgYmVjYXVzZSBvbmUgY2FycmllcyBpdCwgb3IgZm9yIHNvbWUgb3RoZXIgcmVhc29uPzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['10.10b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMGIiIHVuaXQ9InNlY3Rpb24iIC8+IFNvY3JhdGVzLiAgTm93IHRlbGwgbWUsIGlzIGEgdGhpbmcgd2hpY2ggaXMgY2FycmllZCBhIGNhcnJpZWQgdGhpbmcgYmVjYXVzZSBvbmUgY2FycmllcyBpdCwgb3IgZm9yIHNvbWUgb3RoZXIgcmVhc29uPzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm8sIGZvciB0aGF0IHJlYXNvbi48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vLCBmb3IgdGhhdCByZWFzb24uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgYSB0aGluZyB3aGljaCBpcyBsZWQgaXMgbGVkIGJlY2F1c2Ugb25lIGxlYWRzIGl0LCBhbmQgYSB0aGluZyB3aGljaCBpcyBzZWVuIGlzIHNvIGJlY2F1c2Ugb25lIHNlZXMgaXQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCBhIHRoaW5nIHdoaWNoIGlzIGxlZCBpcyBsZWQgYmVjYXVzZSBvbmUgbGVhZHMgaXQsIGFuZCBhIHRoaW5nIHdoaWNoIGlzIHNlZW4gaXMgc28gYmVjYXVzZSBvbmUgc2VlcyBpdD88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIG9uZSBkb2VzIG5vdCBzZWUgaXQgYmVjYXVzZSBpdHMgYSBzZWVuIHRoaW5nLCBidXQsIG9uIHRoZSBjb250cmFyeSwgaXQgaXMgYSBzZWVuIHRoaW5nIGJlY2F1c2Ugb25lIHNlZXMgaXQ7ICBhbmQgb25lIGRvZXMgbm90IGxlYWQgaXQgYmVjYXVzZSBpdCBpcyBhIGxlZCB0aGluZywgYnV0IGl0IGlzIGEgbGVkIHRoaW5nIGJlY2F1c2Ugb25lIGxlYWRzIGl0OyAgYW5kIG9uZSBkb2VzIG5vdCBjYXJyeSBpdCBiZWNhdXNlIGl0IGlzIGEgY2FycmllZCB0aGluZywgYnV0IGl0IGlzIGEgY2FycmllZCB0aGluZyBiZWNhdXNlIG9uZSBjYXJyaWVzIGl0LiAgSXMgaXQgY2xlYXIsIEV1dGh5cGhybywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwYyIgdW5pdD0ic2VjdGlvbiIgLz53aGF0IEkgYW0gdHJ5aW5nIHRvIHNheT8gIEkgYW0gdHJ5aW5nIHRvIHNheSB0aGlzLCB0aGF0IGlmIGFueXRoaW5nIGJlY29tZXMgb3IgdW5kZXJnb2VzLCBpdCBkb2VzIG5vdCBiZWNvbWUgYmVjYXVzZSBpdCBpcyBpbiBhIHN0YXRlIG9mIGJlY29taW5nLCBidXQgaXQgaXMgaW4gYSBzdGF0ZSBvZiBiZWNvbWluZyBiZWNhdXNlIGl0IGJlY29tZXMsIGFuZCBpdCBkb2VzIG5vdCB1bmRlcmdvIGJlY2F1c2UgaXQgaXMgYSB0aGluZyB3aGljaCB1bmRlcmdvZXMsIGJ1dCBiZWNhdXNlIGl0IHVuZGVyZ29lcyBpdCBpcyBhIHRoaW5nIHdoaWNoIHVuZGVyZ29lczsgIG9yIGRvIHlvdSBub3QgYWdyZWUgdG8gdGhpcz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBvbmUgZG9lcyBub3Qgc2VlIGl0IGJlY2F1c2UgaXRzIGEgc2VlbiB0aGluZywgYnV0LCBvbiB0aGUgY29udHJhcnksIGl0IGlzIGEgc2VlbiB0aGluZyBiZWNhdXNlIG9uZSBzZWVzIGl0OyAgYW5kIG9uZSBkb2VzIG5vdCBsZWFkIGl0IGJlY2F1c2UgaXQgaXMgYSBsZWQgdGhpbmcsIGJ1dCBpdCBpcyBhIGxlZCB0aGluZyBiZWNhdXNlIG9uZSBsZWFkcyBpdDsgIGFuZCBvbmUgZG9lcyBub3QgY2FycnkgaXQgYmVjYXVzZSBpdCBpcyBhIGNhcnJpZWQgdGhpbmcsIGJ1dCBpdCBpcyBhIGNhcnJpZWQgdGhpbmcgYmVjYXVzZSBvbmUgY2FycmllcyBpdC4gIElzIGl0IGNsZWFyLCBFdXRoeXBocm8sCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMGMiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCBJIGFtIHRyeWluZyB0byBzYXk/ICBJIGFtIHRyeWluZyB0byBzYXkgdGhpcywgdGhhdCBpZiBhbnl0aGluZyBiZWNvbWVzIG9yIHVuZGVyZ29lcywgaXQgZG9lcyBub3QgYmVjb21lIGJlY2F1c2UgaXQgaXMgaW4gYSBzdGF0ZSBvZiBiZWNvbWluZywgYnV0IGl0IGlzIGluIGEgc3RhdGUgb2YgYmVjb21pbmcgYmVjYXVzZSBpdCBiZWNvbWVzLCBhbmQgaXQgZG9lcyBub3QgdW5kZXJnbyBiZWNhdXNlIGl0IGlzIGEgdGhpbmcgd2hpY2ggdW5kZXJnb2VzLCBidXQgYmVjYXVzZSBpdCB1bmRlcmdvZXMgaXQgaXMgYSB0aGluZyB3aGljaCB1bmRlcmdvZXM7ICBvciBkbyB5b3Ugbm90IGFncmVlIHRvIHRoaXM/PC9wPjwvdHJhbnNsYXRpb24+"
translation['10.10c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMGMiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCBJIGFtIHRyeWluZyB0byBzYXk/ICBJIGFtIHRyeWluZyB0byBzYXkgdGhpcywgdGhhdCBpZiBhbnl0aGluZyBiZWNvbWVzIG9yIHVuZGVyZ29lcywgaXQgZG9lcyBub3QgYmVjb21lIGJlY2F1c2UgaXQgaXMgaW4gYSBzdGF0ZSBvZiBiZWNvbWluZywgYnV0IGl0IGlzIGluIGEgc3RhdGUgb2YgYmVjb21pbmcgYmVjYXVzZSBpdCBiZWNvbWVzLCBhbmQgaXQgZG9lcyBub3QgdW5kZXJnbyBiZWNhdXNlIGl0IGlzIGEgdGhpbmcgd2hpY2ggdW5kZXJnb2VzLCBidXQgYmVjYXVzZSBpdCB1bmRlcmdvZXMgaXQgaXMgYSB0aGluZyB3aGljaCB1bmRlcmdvZXM7ICBvciBkbyB5b3Ugbm90IGFncmVlIHRvIHRoaXM/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGFncmVlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBhZ3JlZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklzIG5vdCB0aGF0IHdoaWNoIGlzIGJlbG92ZWQgYSB0aGluZyB3aGljaCBpcyBlaXRoZXIgYmVjb21pbmcgb3IgdW5kZXJnb2luZyBzb21ldGhpbmc/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPklzIG5vdCB0aGF0IHdoaWNoIGlzIGJlbG92ZWQgYSB0aGluZyB3aGljaCBpcyBlaXRoZXIgYmVjb21pbmcgb3IgdW5kZXJnb2luZyBzb21ldGhpbmc/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGlzIHRoaXMgY2FzZSBsaWtlIHRoZSBmb3JtZXIgb25lczogIHRob3NlIHdobyBsb3ZlIGl0IGRvIG5vdCBsb3ZlIGl0IGJlY2F1c2UgaXQgaXMgYSBiYWQgdGhpbmcsIGJ1dCBpdCBpcyBhIGJlbG92ZWQgdGhpbmcgYmVjYXVzZSB0aGV5IGxvdmUgaXQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCBpcyB0aGlzIGNhc2UgbGlrZSB0aGUgZm9ybWVyIG9uZXM6ICB0aG9zZSB3aG8gbG92ZSBpdCBkbyBub3QgbG92ZSBpdCBiZWNhdXNlIGl0IGlzIGEgYmFkIHRoaW5nLCBidXQgaXQgaXMgYSBiZWxvdmVkIHRoaW5nIGJlY2F1c2UgdGhleSBsb3ZlIGl0PzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9idmlvdXNseS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9idmlvdXNseS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdyB3aGF0IGRvIHlvdSBzYXkgYWJvdXQgdGhhdCB3aGljaCBpcyBob2x5LAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTBkIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3cgd2hhdCBkbyB5b3Ugc2F5IGFib3V0IHRoYXQgd2hpY2ggaXMgaG9seSwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwZCIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC90cmFuc2xhdGlvbj4="
translation['10.10d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMGQiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JdCBpcyBsb3ZlZCBieSBhbGwgdGhlIGdvZHMsIGlzIGl0IG5vdCwgYWNjb3JkaW5nIHRvIHdoYXQgeW91IHNhaWQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JdCBpcyBsb3ZlZCBieSBhbGwgdGhlIGdvZHMsIGlzIGl0IG5vdCwgYWNjb3JkaW5nIHRvIHdoYXQgeW91IHNhaWQ/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Rm9yIHRoaXMgcmVhc29uLCBiZWNhdXNlIGl0IGlzIGhvbHksIG9yIGZvciBzb21lIG90aGVyIHJlYXNvbj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Rm9yIHRoaXMgcmVhc29uLCBiZWNhdXNlIGl0IGlzIGhvbHksIG9yIGZvciBzb21lIG90aGVyIHJlYXNvbj88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ObywgZm9yIHRoaXMgcmVhc29uLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm8sIGZvciB0aGlzIHJlYXNvbi48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkl0IGlzIGxvdmVkIGJlY2F1c2UgaXQgaXMgaG9seSwgbm90IGhvbHkgYmVjYXVzZSBpdCBpcyBsb3ZlZD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SXQgaXMgbG92ZWQgYmVjYXVzZSBpdCBpcyBob2x5LCBub3QgaG9seSBiZWNhdXNlIGl0IGlzIGxvdmVkPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdGhpbmsgc28uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHRoaW5rIHNvLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHRoYXQgd2hpY2ggaXMgZGVhciB0byB0aGUgZ29kcyBpcyBkZWFyIHRvIHRoZW0gYW5kIGJlbG92ZWQgYnkgdGhlbSBiZWNhdXNlIHRoZXkgbG92ZSBpdC4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwZSIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IHRoYXQgd2hpY2ggaXMgZGVhciB0byB0aGUgZ29kcyBpcyBkZWFyIHRvIHRoZW0gYW5kIGJlbG92ZWQgYnkgdGhlbSBiZWNhdXNlIHRoZXkgbG92ZSBpdC4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEwZSIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC90cmFuc2xhdGlvbj4="
translation['10.10e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMGUiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PZiBjb3Vyc2UuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PZiBjb3Vyc2UuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHRoYXQgd2hpY2ggaXMgZGVhciB0byB0aGUgZ29kcyBhbmQgdGhhdCB3aGljaCBpcyBob2x5IGFyZSBub3QgaWRlbnRpY2FsLCBidXQgZGlmZmVyIG9uZSBmcm9tIHRoZSBvdGhlci48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB0aGF0IHdoaWNoIGlzIGRlYXIgdG8gdGhlIGdvZHMgYW5kIHRoYXQgd2hpY2ggaXMgaG9seSBhcmUgbm90IGlkZW50aWNhbCwgYnV0IGRpZmZlciBvbmUgZnJvbSB0aGUgb3RoZXIuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SG93IHNvLCBTb2NyYXRlcz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkhvdyBzbywgU29jcmF0ZXM/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CZWNhdXNlIHdlIGFyZSBhZ3JlZWQgdGhhdCB0aGUgaG9seSBpcyBsb3ZlZCBiZWNhdXNlIGl0IGlzIGhvbHkgYW5kIHRoYXQgaXQgaXMgbm90IGhvbHkgYmVjYXVzZSBpdCBpcyBsb3ZlZDsgIGFyZSB3ZSBub3Q/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJlY2F1c2Ugd2UgYXJlIGFncmVlZCB0aGF0IHRoZSBob2x5IGlzIGxvdmVkIGJlY2F1c2UgaXQgaXMgaG9seSBhbmQgdGhhdCBpdCBpcyBub3QgaG9seSBiZWNhdXNlIGl0IGlzIGxvdmVkOyAgYXJlIHdlIG5vdD88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgd2UgYXJlIGFncmVlZCB0aGF0IHdoYXQgaXMgZGVhciB0byB0aGUgZ29kcyBpcyBkZWFyIHRvIHRoZW0gYmVjYXVzZSB0aGV5IGxvdmUgaXQsIHRoYXQgaXMsIGJ5IHJlYXNvbiBvZiB0aGlzIGxvdmUsIG5vdCB0aGF0IHRoZXkgbG92ZSBpdCBiZWNhdXNlIGl0IGlzIGRlYXIuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCB3ZSBhcmUgYWdyZWVkIHRoYXQgd2hhdCBpcyBkZWFyIHRvIHRoZSBnb2RzIGlzIGRlYXIgdG8gdGhlbSBiZWNhdXNlIHRoZXkgbG92ZSBpdCwgdGhhdCBpcywgYnkgcmVhc29uIG9mIHRoaXMgbG92ZSwgbm90IHRoYXQgdGhleSBsb3ZlIGl0IGJlY2F1c2UgaXQgaXMgZGVhci48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5WZXJ5IHRydWUuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5WZXJ5IHRydWUuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgaWYgdGhhdCB3aGljaCBpcyBkZWFyIHRvIHRoZSBnb2RzIGFuZCB0aGF0IHdoaWNoIGlzIGhvbHkgd2VyZSBpZGVudGljYWwsIG15IGRlYXIgRXV0aHlwaHJvLCB0aGVuIGlmIHRoZSBob2x5CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTFhIiB1bml0PSJzZWN0aW9uIiAvPndlcmUgbG92ZWQgYmVjYXVzZSBpdCBpcyBob2x5LCB0aGF0IHdoaWNoIGlzIGRlYXIgdG8gdGhlIGdvZHMgd291bGQgYmUgbG92ZWQgYmVjYXVzZSBpdCBpcyBkZWFyLCBhbmQgaWYgdGhhdCB3aGljaCBpcyBkZWFyIHRvIHRoZSBnb2RzIGlzIGRlYXIgYmVjYXVzZSBpdCBpcyBsb3ZlZCwgdGhlbiB0aGF0IHdoaWNoIGlzIGhvbHkgd291bGQgYmUgaG9seSBiZWNhdXNlIGl0IGlzIGxvdmVkOyAgYnV0IG5vdyB5b3Ugc2VlIHRoYXQgdGhlIG9wcG9zaXRlIGlzIHRoZSBjYXNlLCBzaG93aW5nIHRoYXQgdGhlIHR3byBhcmUgZGlmZmVyZW50IGZyb20gZWFjaCBvdGhlci4gIEZvciB0aGUgb25lIGJlY29tZXMgbG92YWJsZSBmcm9tIHRoZSBmYWN0IHRoYXQgaXQgaXMgbG92ZWQsIHdoZXJlYXMgdGhlIG90aGVyIGlzIGxvdmVkIGJlY2F1c2UgaXQgaXMgaW4gaXRzZWxmIGxvdmFibGUuICBBbmQsIEV1dGh5cGhybywgaXQgc2VlbXMgdGhhdCB3aGVuIHlvdSB3ZXJlIGFza2VkIHdoYXQgaG9saW5lc3MgaXMgeW91IHdlcmUgdW53aWxsaW5nIHRvIG1ha2UgcGxhaW4gaXRzIGVzc2VuY2UsIGJ1dCB5b3UgbWVudGlvbmVkIHNvbWV0aGluZyB0aGF0IGhhcyBoYXBwZW5lZCB0byB0aGlzIGhvbGluZXNzLCBuYW1lbHksCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWIiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBpdCBpcyBsb3ZlZCBieSB0aGUgZ29kcy4gIEJ1dCB5b3UgZGlkIG5vdCB0ZWxsIGFzIHlldCB3aGF0IGl0IHJlYWxseSBpcy4gIFNvLCBpZiB5b3UgcGxlYXNlLCBkbyBub3QgaGlkZSBpdCBmcm9tIG1lLCBidXQgYmVnaW4gb3ZlciBhZ2FpbiBhbmQgdGVsbCBtZSB3aGF0IGhvbGluZXNzIGlzLCBubyBtYXR0ZXIgd2hldGhlciBpdCBpcyBsb3ZlZCBieSB0aGUgZ29kcyBvciBhbnl0aGluZyBlbHNlIGhhcHBlbnMgaXQ7ICBmb3Igd2Ugc2hhbGwgbm90IHF1YXJyZWwgYWJvdXQgdGhhdC4gIEJ1dCB0ZWxsIG1lIGZyYW5rbHksIFdoYXQgaXMgaG9saW5lc3MsIGFuZCB3aGF0IGlzIHVuaG9saW5lc3M/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBpZiB0aGF0IHdoaWNoIGlzIGRlYXIgdG8gdGhlIGdvZHMgYW5kIHRoYXQgd2hpY2ggaXMgaG9seSB3ZXJlIGlkZW50aWNhbCwgbXkgZGVhciBFdXRoeXBocm8sIHRoZW4gaWYgdGhlIGhvbHkKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWEiIHVuaXQ9InNlY3Rpb24iIC8+d2VyZSBsb3ZlZCBiZWNhdXNlIGl0IGlzIGhvbHksIHRoYXQgd2hpY2ggaXMgZGVhciB0byB0aGUgZ29kcyB3b3VsZCBiZSBsb3ZlZCBiZWNhdXNlIGl0IGlzIGRlYXIsIGFuZCBpZiB0aGF0IHdoaWNoIGlzIGRlYXIgdG8gdGhlIGdvZHMgaXMgZGVhciBiZWNhdXNlIGl0IGlzIGxvdmVkLCB0aGVuIHRoYXQgd2hpY2ggaXMgaG9seSB3b3VsZCBiZSBob2x5IGJlY2F1c2UgaXQgaXMgbG92ZWQ7ICBidXQgbm93IHlvdSBzZWUgdGhhdCB0aGUgb3Bwb3NpdGUgaXMgdGhlIGNhc2UsIHNob3dpbmcgdGhhdCB0aGUgdHdvIGFyZSBkaWZmZXJlbnQgZnJvbSBlYWNoIG90aGVyLiAgRm9yIHRoZSBvbmUgYmVjb21lcyBsb3ZhYmxlIGZyb20gdGhlIGZhY3QgdGhhdCBpdCBpcyBsb3ZlZCwgd2hlcmVhcyB0aGUgb3RoZXIgaXMgbG92ZWQgYmVjYXVzZSBpdCBpcyBpbiBpdHNlbGYgbG92YWJsZS4gIEFuZCwgRXV0aHlwaHJvLCBpdCBzZWVtcyB0aGF0IHdoZW4geW91IHdlcmUgYXNrZWQgd2hhdCBob2xpbmVzcyBpcyB5b3Ugd2VyZSB1bndpbGxpbmcgdG8gbWFrZSBwbGFpbiBpdHMgZXNzZW5jZSwgYnV0IHlvdSBtZW50aW9uZWQgc29tZXRoaW5nIHRoYXQgaGFzIGhhcHBlbmVkIHRvIHRoaXMgaG9saW5lc3MsIG5hbWVseSwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExYiIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IGl0IGlzIGxvdmVkIGJ5IHRoZSBnb2RzLiAgQnV0IHlvdSBkaWQgbm90IHRlbGwgYXMgeWV0IHdoYXQgaXQgcmVhbGx5IGlzLiAgU28sIGlmIHlvdSBwbGVhc2UsIGRvIG5vdCBoaWRlIGl0IGZyb20gbWUsIGJ1dCBiZWdpbiBvdmVyIGFnYWluIGFuZCB0ZWxsIG1lIHdoYXQgaG9saW5lc3MgaXMsIG5vIG1hdHRlciB3aGV0aGVyIGl0IGlzIGxvdmVkIGJ5IHRoZSBnb2RzIG9yIGFueXRoaW5nIGVsc2UgaGFwcGVucyBpdDsgIGZvciB3ZSBzaGFsbCBub3QgcXVhcnJlbCBhYm91dCB0aGF0LiAgQnV0IHRlbGwgbWUgZnJhbmtseSwgV2hhdCBpcyBob2xpbmVzcywgYW5kIHdoYXQgaXMgdW5ob2xpbmVzcz88L3A+PC90cmFuc2xhdGlvbj4="
translation['11.11a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTFhIiB1bml0PSJzZWN0aW9uIiAvPndlcmUgbG92ZWQgYmVjYXVzZSBpdCBpcyBob2x5LCB0aGF0IHdoaWNoIGlzIGRlYXIgdG8gdGhlIGdvZHMgd291bGQgYmUgbG92ZWQgYmVjYXVzZSBpdCBpcyBkZWFyLCBhbmQgaWYgdGhhdCB3aGljaCBpcyBkZWFyIHRvIHRoZSBnb2RzIGlzIGRlYXIgYmVjYXVzZSBpdCBpcyBsb3ZlZCwgdGhlbiB0aGF0IHdoaWNoIGlzIGhvbHkgd291bGQgYmUgaG9seSBiZWNhdXNlIGl0IGlzIGxvdmVkOyAgYnV0IG5vdyB5b3Ugc2VlIHRoYXQgdGhlIG9wcG9zaXRlIGlzIHRoZSBjYXNlLCBzaG93aW5nIHRoYXQgdGhlIHR3byBhcmUgZGlmZmVyZW50IGZyb20gZWFjaCBvdGhlci4gIEZvciB0aGUgb25lIGJlY29tZXMgbG92YWJsZSBmcm9tIHRoZSBmYWN0IHRoYXQgaXQgaXMgbG92ZWQsIHdoZXJlYXMgdGhlIG90aGVyIGlzIGxvdmVkIGJlY2F1c2UgaXQgaXMgaW4gaXRzZWxmIGxvdmFibGUuICBBbmQsIEV1dGh5cGhybywgaXQgc2VlbXMgdGhhdCB3aGVuIHlvdSB3ZXJlIGFza2VkIHdoYXQgaG9saW5lc3MgaXMgeW91IHdlcmUgdW53aWxsaW5nIHRvIG1ha2UgcGxhaW4gaXRzIGVzc2VuY2UsIGJ1dCB5b3UgbWVudGlvbmVkIHNvbWV0aGluZyB0aGF0IGhhcyBoYXBwZW5lZCB0byB0aGlzIGhvbGluZXNzLCBuYW1lbHksCjwvdHJhbnNsYXRpb24+"
translation['11.11b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWIiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBpdCBpcyBsb3ZlZCBieSB0aGUgZ29kcy4gIEJ1dCB5b3UgZGlkIG5vdCB0ZWxsIGFzIHlldCB3aGF0IGl0IHJlYWxseSBpcy4gIFNvLCBpZiB5b3UgcGxlYXNlLCBkbyBub3QgaGlkZSBpdCBmcm9tIG1lLCBidXQgYmVnaW4gb3ZlciBhZ2FpbiBhbmQgdGVsbCBtZSB3aGF0IGhvbGluZXNzIGlzLCBubyBtYXR0ZXIgd2hldGhlciBpdCBpcyBsb3ZlZCBieSB0aGUgZ29kcyBvciBhbnl0aGluZyBlbHNlIGhhcHBlbnMgaXQ7ICBmb3Igd2Ugc2hhbGwgbm90IHF1YXJyZWwgYWJvdXQgdGhhdC4gIEJ1dCB0ZWxsIG1lIGZyYW5rbHksIFdoYXQgaXMgaG9saW5lc3MsIGFuZCB3aGF0IGlzIHVuaG9saW5lc3M/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQsIFNvY3JhdGVzLCBJIGRvIG5vdCBrbm93IGhvdyB0byBzYXkgd2hhdCBJIG1lYW4uICBGb3Igd2hhdGV2ZXIgc3RhdGVtZW50IHdlIGFkdmFuY2UsIHNvbWVob3cgb3Igb3RoZXIgaXQgbW92ZXMgYWJvdXQgYW5kIHdvbid0IHN0YXkgd2hlcmUgd2UgcHV0IGl0LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0LCBTb2NyYXRlcywgSSBkbyBub3Qga25vdyBob3cgdG8gc2F5IHdoYXQgSSBtZWFuLiAgRm9yIHdoYXRldmVyIHN0YXRlbWVudCB3ZSBhZHZhbmNlLCBzb21laG93IG9yIG90aGVyIGl0IG1vdmVzIGFib3V0IGFuZCB3b24ndCBzdGF5IHdoZXJlIHdlIHB1dCBpdC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPllvdXIgc3RhdGVtZW50cywgRXV0aHlwaHJvLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTFjIiB1bml0PSJzZWN0aW9uIiAvPmFyZSBsaWtlIHdvcmtzIG9mIG15PG5vdGUgYW5jaG9yZWQ9InllcyIgY2xhc3M9InRyYW5zbGF0aW9uIiBwbGFjZT0idW5zcGVjaWZpZWQiIHJlc3A9IkxvZWIiPlNvY3JhdGVzIHdhcyB0aGUgc29uIG9mIGEgc2N1bHB0b3IgYW5kIHdhcyBoaW1zZWxmIGVkdWNhdGVkIHRvIGJlIGEgc2N1bHB0b3IuICBUaGlzIGlzIGRvdWJ0bGVzcyB0aGUgcmVhc29uIGZvciBoaXMgcmVmZXJlbmNlIHRvIERhZWRhbHVzIGFzIGFuIGFuY2VzdG9yLiAgRGFlZGFsdXMgd2FzIGEgaGFsZiBteXRoaWNhbCBwZXJzb25hZ2Ugd2hvc2Ugc3RhdHVlcyB3ZXJlIHNhaWQgdG8gaGF2ZSBiZWVuIHNvIGxpZmVsaWtlIHRoYXQgdGhleSBtb3ZlZCB0aGVpciBleWVzIGFuZCB3YWxrZWQgYWJvdXQuPC9ub3RlPiBhbmNlc3RvciBEYWVkYWx1cywgYW5kIGlmIEkgd2VyZSB0aGUgb25lIHdobyBtYWRlIG9yIGFkdmFuY2VkIHRoZW0sIHlvdSBtaWdodCBsYXVnaCBhdCBtZSBhbmQgc2F5IHRoYXQgb24gYWNjb3VudCBvZiBteSByZWxhdGlvbnNoaXAgdG8gaGltIG15IHdvcmtzIGluIHdvcmRzIHJ1biBhd2F5IGFuZCB3b24ndCBzdGF5IHdoZXJlIHRoZXkgYXJlIHB1dC4gIEJ1dCBub3figJR3ZWxsLCB0aGUgc3RhdGVtZW50cyBhcmUgeW91cnM7ICBzbyBzb21lIG90aGVyIGplc3QgaXMgZGVtYW5kZWQ7ICBmb3IgdGhleSBzdGF5IGZpeGVkLCBhcyB5b3UgeW91cnNlbGYgc2VlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Zb3VyIHN0YXRlbWVudHMsIEV1dGh5cGhybywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExYyIgdW5pdD0ic2VjdGlvbiIgLz5hcmUgbGlrZSB3b3JrcyBvZiBteTxub3RlIGFuY2hvcmVkPSJ5ZXMiIGNsYXNzPSJ0cmFuc2xhdGlvbiIgcGxhY2U9InVuc3BlY2lmaWVkIiByZXNwPSJMb2ViIj5Tb2NyYXRlcyB3YXMgdGhlIHNvbiBvZiBhIHNjdWxwdG9yIGFuZCB3YXMgaGltc2VsZiBlZHVjYXRlZCB0byBiZSBhIHNjdWxwdG9yLiAgVGhpcyBpcyBkb3VidGxlc3MgdGhlIHJlYXNvbiBmb3IgaGlzIHJlZmVyZW5jZSB0byBEYWVkYWx1cyBhcyBhbiBhbmNlc3Rvci4gIERhZWRhbHVzIHdhcyBhIGhhbGYgbXl0aGljYWwgcGVyc29uYWdlIHdob3NlIHN0YXR1ZXMgd2VyZSBzYWlkIHRvIGhhdmUgYmVlbiBzbyBsaWZlbGlrZSB0aGF0IHRoZXkgbW92ZWQgdGhlaXIgZXllcyBhbmQgd2Fsa2VkIGFib3V0Ljwvbm90ZT4gYW5jZXN0b3IgRGFlZGFsdXMsIGFuZCBpZiBJIHdlcmUgdGhlIG9uZSB3aG8gbWFkZSBvciBhZHZhbmNlZCB0aGVtLCB5b3UgbWlnaHQgbGF1Z2ggYXQgbWUgYW5kIHNheSB0aGF0IG9uIGFjY291bnQgb2YgbXkgcmVsYXRpb25zaGlwIHRvIGhpbSBteSB3b3JrcyBpbiB3b3JkcyBydW4gYXdheSBhbmQgd29uJ3Qgc3RheSB3aGVyZSB0aGV5IGFyZSBwdXQuICBCdXQgbm934oCUd2VsbCwgdGhlIHN0YXRlbWVudHMgYXJlIHlvdXJzOyAgc28gc29tZSBvdGhlciBqZXN0IGlzIGRlbWFuZGVkOyAgZm9yIHRoZXkgc3RheSBmaXhlZCwgYXMgeW91IHlvdXJzZWxmIHNlZS48L3A+PC90cmFuc2xhdGlvbj4="
translation['11.11c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWMiIHVuaXQ9InNlY3Rpb24iIC8+YXJlIGxpa2Ugd29ya3Mgb2YgbXk8bm90ZSBhbmNob3JlZD0ieWVzIiBjbGFzcz0idHJhbnNsYXRpb24iIHBsYWNlPSJ1bnNwZWNpZmllZCIgcmVzcD0iTG9lYiI+U29jcmF0ZXMgd2FzIHRoZSBzb24gb2YgYSBzY3VscHRvciBhbmQgd2FzIGhpbXNlbGYgZWR1Y2F0ZWQgdG8gYmUgYSBzY3VscHRvci4gIFRoaXMgaXMgZG91YnRsZXNzIHRoZSByZWFzb24gZm9yIGhpcyByZWZlcmVuY2UgdG8gRGFlZGFsdXMgYXMgYW4gYW5jZXN0b3IuICBEYWVkYWx1cyB3YXMgYSBoYWxmIG15dGhpY2FsIHBlcnNvbmFnZSB3aG9zZSBzdGF0dWVzIHdlcmUgc2FpZCB0byBoYXZlIGJlZW4gc28gbGlmZWxpa2UgdGhhdCB0aGV5IG1vdmVkIHRoZWlyIGV5ZXMgYW5kIHdhbGtlZCBhYm91dC48L25vdGU+IGFuY2VzdG9yIERhZWRhbHVzLCBhbmQgaWYgSSB3ZXJlIHRoZSBvbmUgd2hvIG1hZGUgb3IgYWR2YW5jZWQgdGhlbSwgeW91IG1pZ2h0IGxhdWdoIGF0IG1lIGFuZCBzYXkgdGhhdCBvbiBhY2NvdW50IG9mIG15IHJlbGF0aW9uc2hpcCB0byBoaW0gbXkgd29ya3MgaW4gd29yZHMgcnVuIGF3YXkgYW5kIHdvbid0IHN0YXkgd2hlcmUgdGhleSBhcmUgcHV0LiAgQnV0IG5vd+KAlHdlbGwsIHRoZSBzdGF0ZW1lbnRzIGFyZSB5b3VyczsgIHNvIHNvbWUgb3RoZXIgamVzdCBpcyBkZW1hbmRlZDsgIGZvciB0aGV5IHN0YXkgZml4ZWQsIGFzIHlvdSB5b3Vyc2VsZiBzZWUuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHRoaW5rIHRoZSBqZXN0IGRvZXMgdmVyeSB3ZWxsIGFzIGl0IGlzOwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTFkIiB1bml0PSJzZWN0aW9uIiAvPmZvciBJIGFtIG5vdCB0aGUgb25lIHdobyBtYWtlcyB0aGVzZSBzdGF0ZW1lbnRzIG1vdmUgYWJvdXQgYW5kIG5vdCBzdGF5IGluIHRoZSBzYW1lIHBsYWNlLCBidXQgeW91IGFyZSB0aGUgRGFlZGFsdXM7ICBmb3IgdGhleSB3b3VsZCBoYXZlIHN0YXllZCwgc28gZmFyIGFzIEkgYW0gY29uY2VybmVkLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB0aGluayB0aGUgamVzdCBkb2VzIHZlcnkgd2VsbCBhcyBpdCBpczsKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjExZCIgdW5pdD0ic2VjdGlvbiIgLz5mb3IgSSBhbSBub3QgdGhlIG9uZSB3aG8gbWFrZXMgdGhlc2Ugc3RhdGVtZW50cyBtb3ZlIGFib3V0IGFuZCBub3Qgc3RheSBpbiB0aGUgc2FtZSBwbGFjZSwgYnV0IHlvdSBhcmUgdGhlIERhZWRhbHVzOyAgZm9yIHRoZXkgd291bGQgaGF2ZSBzdGF5ZWQsIHNvIGZhciBhcyBJIGFtIGNvbmNlcm5lZC48L3A+PC90cmFuc2xhdGlvbj4="
translation['11.11d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWQiIHVuaXQ9InNlY3Rpb24iIC8+Zm9yIEkgYW0gbm90IHRoZSBvbmUgd2hvIG1ha2VzIHRoZXNlIHN0YXRlbWVudHMgbW92ZSBhYm91dCBhbmQgbm90IHN0YXkgaW4gdGhlIHNhbWUgcGxhY2UsIGJ1dCB5b3UgYXJlIHRoZSBEYWVkYWx1czsgIGZvciB0aGV5IHdvdWxkIGhhdmUgc3RheWVkLCBzbyBmYXIgYXMgSSBhbSBjb25jZXJuZWQuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFwcGFyZW50bHkgdGhlbiwgbXkgZnJpZW5kLCBJIGFtIGEgbW9yZSBjbGV2ZXIgYXJ0aXN0IHRoYW4gRGFlZGFsdXMsIGluYXNtdWNoIGFzIGhlIG1hZGUgb25seSBoaXMgb3duIHdvcmtzIG1vdmUsIHdoZXJlYXMgSSwgYXMgaXQgc2VlbXMsIGdpdmUgbW90aW9uIHRvIHRoZSB3b3JrcyBvZiBvdGhlcnMgYXMgd2VsbCBhcyB0byBteSBvd24uCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWUiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIHRoZSBtb3N0IGV4cXVpc2l0ZSB0aGluZyBhYm91dCBteSBhcnQgaXMgdGhhdCBJIGFtIGNsZXZlciBhZ2FpbnN0IG15IHdpbGw7ICBmb3IgSSB3b3VsZCByYXRoZXIgaGF2ZSBteSB3b3JkcyBzdGF5IGZpeGVkIGFuZCBzdGFibGUgdGhhbiBwb3NzZXNzIHRoZSB3aXNkb20gb2YgRGFlZGFsdXMgYW5kIHRoZSB3ZWFsdGggb2YgVGFudGFsdXMgYmVzaWRlcy4gIEJ1dCBlbm91Z2ggb2YgdGhpcy4gIFNpbmNlIHlvdSBzZWVtIHRvIGJlIGluZG9sZW50LCBJIHdpbGwgYWlkIHlvdSBteXNlbGYsIHNvIHRoYXQgeW91IG1heSBpbnN0cnVjdCBtZSBhYm91dCBob2xpbmVzcy4gIEFuZCBkbyBub3QgZ2l2ZSBpdCB1cCBiZWZvcmVoYW5kLiAgSnVzdCBzZWUgd2hldGhlciB5b3UgZG8gbm90IHRoaW5rIHRoYXQgZXZlcnl0aGluZyB0aGF0IGlzIGhvbHkgaXMgcmlnaHQuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFwcGFyZW50bHkgdGhlbiwgbXkgZnJpZW5kLCBJIGFtIGEgbW9yZSBjbGV2ZXIgYXJ0aXN0IHRoYW4gRGFlZGFsdXMsIGluYXNtdWNoIGFzIGhlIG1hZGUgb25seSBoaXMgb3duIHdvcmtzIG1vdmUsIHdoZXJlYXMgSSwgYXMgaXQgc2VlbXMsIGdpdmUgbW90aW9uIHRvIHRoZSB3b3JrcyBvZiBvdGhlcnMgYXMgd2VsbCBhcyB0byBteSBvd24uCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWUiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIHRoZSBtb3N0IGV4cXVpc2l0ZSB0aGluZyBhYm91dCBteSBhcnQgaXMgdGhhdCBJIGFtIGNsZXZlciBhZ2FpbnN0IG15IHdpbGw7ICBmb3IgSSB3b3VsZCByYXRoZXIgaGF2ZSBteSB3b3JkcyBzdGF5IGZpeGVkIGFuZCBzdGFibGUgdGhhbiBwb3NzZXNzIHRoZSB3aXNkb20gb2YgRGFlZGFsdXMgYW5kIHRoZSB3ZWFsdGggb2YgVGFudGFsdXMgYmVzaWRlcy4gIEJ1dCBlbm91Z2ggb2YgdGhpcy4gIFNpbmNlIHlvdSBzZWVtIHRvIGJlIGluZG9sZW50LCBJIHdpbGwgYWlkIHlvdSBteXNlbGYsIHNvIHRoYXQgeW91IG1heSBpbnN0cnVjdCBtZSBhYm91dCBob2xpbmVzcy4gIEFuZCBkbyBub3QgZ2l2ZSBpdCB1cCBiZWZvcmVoYW5kLiAgSnVzdCBzZWUgd2hldGhlciB5b3UgZG8gbm90IHRoaW5rIHRoYXQgZXZlcnl0aGluZyB0aGF0IGlzIGhvbHkgaXMgcmlnaHQuPC9wPjwvdHJhbnNsYXRpb24+"
translation['11.11e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMWUiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIHRoZSBtb3N0IGV4cXVpc2l0ZSB0aGluZyBhYm91dCBteSBhcnQgaXMgdGhhdCBJIGFtIGNsZXZlciBhZ2FpbnN0IG15IHdpbGw7ICBmb3IgSSB3b3VsZCByYXRoZXIgaGF2ZSBteSB3b3JkcyBzdGF5IGZpeGVkIGFuZCBzdGFibGUgdGhhbiBwb3NzZXNzIHRoZSB3aXNkb20gb2YgRGFlZGFsdXMgYW5kIHRoZSB3ZWFsdGggb2YgVGFudGFsdXMgYmVzaWRlcy4gIEJ1dCBlbm91Z2ggb2YgdGhpcy4gIFNpbmNlIHlvdSBzZWVtIHRvIGJlIGluZG9sZW50LCBJIHdpbGwgYWlkIHlvdSBteXNlbGYsIHNvIHRoYXQgeW91IG1heSBpbnN0cnVjdCBtZSBhYm91dCBob2xpbmVzcy4gIEFuZCBkbyBub3QgZ2l2ZSBpdCB1cCBiZWZvcmVoYW5kLiAgSnVzdCBzZWUgd2hldGhlciB5b3UgZG8gbm90IHRoaW5rIHRoYXQgZXZlcnl0aGluZyB0aGF0IGlzIGhvbHkgaXMgcmlnaHQuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBkby48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBpcyBldmVyeXRoaW5nIHRoYXQgaXMgcmlnaHQgYWxzbyBob2x5Pwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTIiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyYSIgdW5pdD0ic2VjdGlvbiIgLz5PciBpcyBhbGwgd2hpY2ggaXMgaG9seSByaWdodCwgYW5kIG5vdCBhbGwgd2hpY2ggaXMgcmlnaHQgaG9seSwgYnV0IHBhcnQgb2YgaXQgaG9seSBhbmQgcGFydCBzb21ldGhpbmcgZWxzZT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IGlzIGV2ZXJ5dGhpbmcgdGhhdCBpcyByaWdodCBhbHNvIGhvbHk/CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTJhIiB1bml0PSJzZWN0aW9uIiAvPk9yIGlzIGFsbCB3aGljaCBpcyBob2x5IHJpZ2h0LCBhbmQgbm90IGFsbCB3aGljaCBpcyByaWdodCBob2x5LCBidXQgcGFydCBvZiBpdCBob2x5IGFuZCBwYXJ0IHNvbWV0aGluZyBlbHNlPzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['12.12a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMiIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTJhIiB1bml0PSJzZWN0aW9uIiAvPk9yIGlzIGFsbCB3aGljaCBpcyBob2x5IHJpZ2h0LCBhbmQgbm90IGFsbCB3aGljaCBpcyByaWdodCBob2x5LCBidXQgcGFydCBvZiBpdCBob2x5IGFuZCBwYXJ0IHNvbWV0aGluZyBlbHNlPzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBjYW4ndCBmb2xsb3cgeW91LCBTb2NyYXRlcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgY2FuJ3QgZm9sbG93IHlvdSwgU29jcmF0ZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgeWV0IHlvdSBhcmUgYXMgbXVjaCB5b3VuZ2VyIHRoYW4gSSBhcyB5b3UgYXJlIHdpc2VyOyAgYnV0LCBhcyBJIHNhaWQsIHlvdSBhcmUgaW5kb2xlbnQgb24gYWNjb3VudCBvZiB5b3VyIHdlYWx0aCBvZiB3aXNkb20uICBCdXQgZXhlcnQgeW91cnNlbGYsIG15IGZyaWVuZDsgIGZvciBpdCBpcyBub3QgaGFyZCB0byB1bmRlcnN0YW5kIHdoYXQgSSBtZWFuLiAgV2hhdCBJIG1lYW4gaXMgdGhlIG9wcG9zaXRlIG9mIHdoYXQgdGhlIHBvZXQgc2FpZCwgd2hvIHdyb3RlOjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj48bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPlpldXMgdGhlIGNyZWF0b3IsIGhpbSB3aG8gbWFkZSBhbGwgdGhpbmdzLDwvbD48L3F1b3RlPgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTJiIiB1bml0PSJzZWN0aW9uIiAvPjxjaXQgY2xhc3M9InRyYW5zbGF0aW9uIj48cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+dGhvdSB3aWx0IG5vdCBuYW1lOyAgZm9yIHdoZXJlIGZlYXIgaXMsIHRoZXJlIGFsc28gaXMgcmV2ZXJlbmNlLjwvcXVvdGU+PGJpYmwgY2xhc3M9InRyYW5zbGF0aW9uIiBkZWZhdWx0PSJOTyI+U3Rhc2ludXMsIGF1dGhvciBvZiB0aGUgPHRpdGxlIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q3lwcmlhPC90aXRsZT4gKEZyYWdtLiAyMCwgZWQuIEtpbmtlbCk8L2JpYmw+PC9jaXQ+IE5vdyBJIGRpc2FncmVlIHdpdGggdGhlIHBvZXQuICBTaGFsbCBJIHRlbGwgeW91IGhvdz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHlldCB5b3UgYXJlIGFzIG11Y2ggeW91bmdlciB0aGFuIEkgYXMgeW91IGFyZSB3aXNlcjsgIGJ1dCwgYXMgSSBzYWlkLCB5b3UgYXJlIGluZG9sZW50IG9uIGFjY291bnQgb2YgeW91ciB3ZWFsdGggb2Ygd2lzZG9tLiAgQnV0IGV4ZXJ0IHlvdXJzZWxmLCBteSBmcmllbmQ7ICBmb3IgaXQgaXMgbm90IGhhcmQgdG8gdW5kZXJzdGFuZCB3aGF0IEkgbWVhbi4gIFdoYXQgSSBtZWFuIGlzIHRoZSBvcHBvc2l0ZSBvZiB3aGF0IHRoZSBwb2V0IHNhaWQsIHdobyB3cm90ZTo8cXVvdGUgY2xhc3M9InRyYW5zbGF0aW9uIiB0eXBlPSJ2ZXJzZSI+PGwgY2xhc3M9InRyYW5zbGF0aW9uIiBtZXQ9ImRhY3R5bGljIj5aZXVzIHRoZSBjcmVhdG9yLCBoaW0gd2hvIG1hZGUgYWxsIHRoaW5ncyw8L2w+PC9xdW90ZT4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyYiIgdW5pdD0ic2VjdGlvbiIgLz48Y2l0IGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHF1b3RlIGNsYXNzPSJ0cmFuc2xhdGlvbiIgdHlwZT0idmVyc2UiPnRob3Ugd2lsdCBub3QgbmFtZTsgIGZvciB3aGVyZSBmZWFyIGlzLCB0aGVyZSBhbHNvIGlzIHJldmVyZW5jZS48L3F1b3RlPjxiaWJsIGNsYXNzPSJ0cmFuc2xhdGlvbiIgZGVmYXVsdD0iTk8iPlN0YXNpbnVzLCBhdXRob3Igb2YgdGhlIDx0aXRsZSBjbGFzcz0idHJhbnNsYXRpb24iPkN5cHJpYTwvdGl0bGU+IChGcmFnbS4gMjAsIGVkLiBLaW5rZWwpPC9iaWJsPjwvY2l0PiBOb3cgSSBkaXNhZ3JlZSB3aXRoIHRoZSBwb2V0LiAgU2hhbGwgSSB0ZWxsIHlvdSBob3c/PC9wPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj48bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPlpldXMgdGhlIGNyZWF0b3IsIGhpbSB3aG8gbWFkZSBhbGwgdGhpbmdzLDwvbD48L3F1b3RlPgo8bCBjbGFzcz0idHJhbnNsYXRpb24iIG1ldD0iZGFjdHlsaWMiPlpldXMgdGhlIGNyZWF0b3IsIGhpbSB3aG8gbWFkZSBhbGwgdGhpbmdzLDwvbD48L3RyYW5zbGF0aW9uPg=="
translation['12.12b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMmIiIHVuaXQ9InNlY3Rpb24iIC8+PGNpdCBjbGFzcz0idHJhbnNsYXRpb24iPjxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj50aG91IHdpbHQgbm90IG5hbWU7ICBmb3Igd2hlcmUgZmVhciBpcywgdGhlcmUgYWxzbyBpcyByZXZlcmVuY2UuPC9xdW90ZT48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIj5TdGFzaW51cywgYXV0aG9yIG9mIHRoZSA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXByaWE8L3RpdGxlPiAoRnJhZ20uIDIwLCBlZC4gS2lua2VsKTwvYmlibD48L2NpdD4gTm93IEkgZGlzYWdyZWUgd2l0aCB0aGUgcG9ldC4gIFNoYWxsIEkgdGVsbCB5b3UgaG93PzxxdW90ZSBjbGFzcz0idHJhbnNsYXRpb24iIHR5cGU9InZlcnNlIj50aG91IHdpbHQgbm90IG5hbWU7ICBmb3Igd2hlcmUgZmVhciBpcywgdGhlcmUgYWxzbyBpcyByZXZlcmVuY2UuPC9xdW90ZT48YmlibCBjbGFzcz0idHJhbnNsYXRpb24iIGRlZmF1bHQ9Ik5PIj5TdGFzaW51cywgYXV0aG9yIG9mIHRoZSA8dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXByaWE8L3RpdGxlPiAoRnJhZ20uIDIwLCBlZC4gS2lua2VsKTwvYmlibD48dGl0bGUgY2xhc3M9InRyYW5zbGF0aW9uIj5DeXByaWE8L3RpdGxlPiAoRnJhZ20uIDIwLCBlZC4gS2lua2VsKTxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnkgYWxsIG1lYW5zLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnkgYWxsIG1lYW5zLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SXQgZG9lcyBub3Qgc2VlbSB0byBtZSB0cnVlIHRoYXQgd2hlcmUgZmVhciBpcywgdGhlcmUgYWxzbyBpcyByZXZlcmVuY2U7ICBmb3IgbWFueSB3aG8gZmVhciBkaXNlYXNlcyBhbmQgcG92ZXJ0eSBhbmQgb3RoZXIgc3VjaCB0aGluZ3Mgc2VlbSB0byBtZSB0byBmZWFyLCBidXQgbm90IHRvIHJldmVyZW5jZSBhdCBhbGwgdGhlc2UgdGhpbmdzIHdoaWNoIHRoZXkgZmVhci4gIERvbid0IHlvdSB0aGluayBzbywgdG9vPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JdCBkb2VzIG5vdCBzZWVtIHRvIG1lIHRydWUgdGhhdCB3aGVyZSBmZWFyIGlzLCB0aGVyZSBhbHNvIGlzIHJldmVyZW5jZTsgIGZvciBtYW55IHdobyBmZWFyIGRpc2Vhc2VzIGFuZCBwb3ZlcnR5IGFuZCBvdGhlciBzdWNoIHRoaW5ncyBzZWVtIHRvIG1lIHRvIGZlYXIsIGJ1dCBub3QgdG8gcmV2ZXJlbmNlIGF0IGFsbCB0aGVzZSB0aGluZ3Mgd2hpY2ggdGhleSBmZWFyLiAgRG9uJ3QgeW91IHRoaW5rIHNvLCB0b28/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IEkgdGhpbmsgdGhhdCB3aGVyZSByZXZlcmVuY2UgaXMsIHRoZXJlIGFsc28gaXMgZmVhcjsgIGZvciBkb2VzIG5vdCBldmVyeW9uZSB3aG8gaGFzIGEgZmVlbGluZyBvZiByZXZlcmVuY2UgYW5kIHNoYW1lIGFib3V0IGFueSBhY3QKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyYyIgdW5pdD0ic2VjdGlvbiIgLz5hbHNvIGRyZWFkIGFuZCBmZWFyIHRoZSByZXB1dGF0aW9uIGZvciB3aWNrZWRuZXNzPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5CdXQgSSB0aGluayB0aGF0IHdoZXJlIHJldmVyZW5jZSBpcywgdGhlcmUgYWxzbyBpcyBmZWFyOyAgZm9yIGRvZXMgbm90IGV2ZXJ5b25lIHdobyBoYXMgYSBmZWVsaW5nIG9mIHJldmVyZW5jZSBhbmQgc2hhbWUgYWJvdXQgYW55IGFjdAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTJjIiB1bml0PSJzZWN0aW9uIiAvPmFsc28gZHJlYWQgYW5kIGZlYXIgdGhlIHJlcHV0YXRpb24gZm9yIHdpY2tlZG5lc3M/PC9wPjwvdHJhbnNsYXRpb24+"
translation['12.12c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMmMiIHVuaXQ9InNlY3Rpb24iIC8+YWxzbyBkcmVhZCBhbmQgZmVhciB0aGUgcmVwdXRhdGlvbiBmb3Igd2lja2VkbmVzcz88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywgaGUgZG9lcyBmZWFyLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBoZSBkb2VzIGZlYXIuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGl0IGlzIG5vdCBjb3JyZWN0IHRvIHNheSDigJx3aGVyZSBmZWFyIGlzLCB0aGVyZSBhbHNvIGlzIHJldmVyZW5jZS7igJ0gIE9uIHRoZSBjb250cmFyeSwgd2hlcmUgcmV2ZXJlbmNlIGlzLCB0aGVyZSBhbHNvIGlzIGZlYXI7ICBidXQgcmV2ZXJlbmNlIGlzIG5vdCBldmVyeXdoZXJlIHdoZXJlIGZlYXIgaXMsIHNpbmNlLCBhcyBJIHRoaW5rLCBmZWFyIGlzIG1vcmUgY29tcHJlaGVuc2l2ZSB0aGFuIHJldmVyZW5jZTsgIGZvciByZXZlcmVuY2UgaXMgYSBwYXJ0IG9mIGZlYXIsIGp1c3QgYXMgdGhlIG9kZCBpcyBhIHBhcnQgb2YgbnVtYmVyLCBzbyB0aGF0IGl0IGlzIG5vdCB0cnVlIHRoYXQgd2hlcmUgbnVtYmVyIGlzLCB0aGVyZSBhbHNvIGlzIHRoZSBvZGQsIGJ1dCB0aGF0IHdoZXJlIHRoZSBvZGQgaXMsIHRoZXJlIGFsc28gaXMgbnVtYmVyLiAgUGVyaGFwcyB5b3UgZm9sbG93IG1lIG5vdz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBpdCBpcyBub3QgY29ycmVjdCB0byBzYXkg4oCcd2hlcmUgZmVhciBpcywgdGhlcmUgYWxzbyBpcyByZXZlcmVuY2Uu4oCdICBPbiB0aGUgY29udHJhcnksIHdoZXJlIHJldmVyZW5jZSBpcywgdGhlcmUgYWxzbyBpcyBmZWFyOyAgYnV0IHJldmVyZW5jZSBpcyBub3QgZXZlcnl3aGVyZSB3aGVyZSBmZWFyIGlzLCBzaW5jZSwgYXMgSSB0aGluaywgZmVhciBpcyBtb3JlIGNvbXByZWhlbnNpdmUgdGhhbiByZXZlcmVuY2U7ICBmb3IgcmV2ZXJlbmNlIGlzIGEgcGFydCBvZiBmZWFyLCBqdXN0IGFzIHRoZSBvZGQgaXMgYSBwYXJ0IG9mIG51bWJlciwgc28gdGhhdCBpdCBpcyBub3QgdHJ1ZSB0aGF0IHdoZXJlIG51bWJlciBpcywgdGhlcmUgYWxzbyBpcyB0aGUgb2RkLCBidXQgdGhhdCB3aGVyZSB0aGUgb2RkIGlzLCB0aGVyZSBhbHNvIGlzIG51bWJlci4gIFBlcmhhcHMgeW91IGZvbGxvdyBtZSBub3c/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGVyZmVjdGx5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+UGVyZmVjdGx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SXQgd2FzIHNvbWV0aGluZyBvZiB0aGlzIHNvcnQgdGhhdCBJIG1lYW50IGJlZm9yZSwgd2hlbiBJIGFza2VkIHdoZXRoZXIgd2hlcmUgdGhlIHJpZ2h0IGlzLCB0aGVyZSBhbHNvIGlzIGhvbGluZXNzLCBvciB3aGVyZSBob2xpbmVzcyBpcywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyZCIgdW5pdD0ic2VjdGlvbiIgLz50aGVyZSBhbHNvIGlzIHRoZSByaWdodDsgIGJ1dCBob2xpbmVzcyBpcyBub3QgZXZlcnl3aGVyZSB3aGVyZSB0aGUgcmlnaHQgaXMsIGZvciBob2xpbmVzcyBpcyBhIHBhcnQgb2YgdGhlIHJpZ2h0LiAgRG8gd2UgYWdyZWUgdG8gdGhpcywgb3IgZG8geW91IGRpc3NlbnQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkl0IHdhcyBzb21ldGhpbmcgb2YgdGhpcyBzb3J0IHRoYXQgSSBtZWFudCBiZWZvcmUsIHdoZW4gSSBhc2tlZCB3aGV0aGVyIHdoZXJlIHRoZSByaWdodCBpcywgdGhlcmUgYWxzbyBpcyBob2xpbmVzcywgb3Igd2hlcmUgaG9saW5lc3MgaXMsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMmQiIHVuaXQ9InNlY3Rpb24iIC8+dGhlcmUgYWxzbyBpcyB0aGUgcmlnaHQ7ICBidXQgaG9saW5lc3MgaXMgbm90IGV2ZXJ5d2hlcmUgd2hlcmUgdGhlIHJpZ2h0IGlzLCBmb3IgaG9saW5lc3MgaXMgYSBwYXJ0IG9mIHRoZSByaWdodC4gIERvIHdlIGFncmVlIHRvIHRoaXMsIG9yIGRvIHlvdSBkaXNzZW50PzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['12.12d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMmQiIHVuaXQ9InNlY3Rpb24iIC8+dGhlcmUgYWxzbyBpcyB0aGUgcmlnaHQ7ICBidXQgaG9saW5lc3MgaXMgbm90IGV2ZXJ5d2hlcmUgd2hlcmUgdGhlIHJpZ2h0IGlzLCBmb3IgaG9saW5lc3MgaXMgYSBwYXJ0IG9mIHRoZSByaWdodC4gIERvIHdlIGFncmVlIHRvIHRoaXMsIG9yIGRvIHlvdSBkaXNzZW50PzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm8sIEkgYWdyZWU7ICBmb3IgSSB0aGluayB0aGUgc3RhdGVtZW50IGlzIGNvcnJlY3QuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ObywgSSBhZ3JlZTsgIGZvciBJIHRoaW5rIHRoZSBzdGF0ZW1lbnQgaXMgY29ycmVjdC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdyBvYnNlcnZlIHRoZSBuZXh0IHBvaW50LiAgSWYgaG9saW5lc3MgaXMgYSBwYXJ0IG9mIHRoZSByaWdodCwgd2UgbXVzdCwgYXBwYXJlbnRseSwgZmluZCBvdXQgd2hhdCBwYXJ0IG9mIHRoZSByaWdodCBob2xpbmVzcyBpcy4gIE5vdyBpZiB5b3UgYXNrZWQgbWUgYWJvdXQgb25lIG9mIHRoZSB0aGluZ3MgSSBqdXN0IG1lbnRpb25lZCwgYXMsIGZvciBleGFtcGxlLCB3aGF0IHBhcnQgb2YgbnVtYmVyIHRoZSBldmVuIHdhcywgYW5kIHdoYXQga2luZCBvZiBhIG51bWJlciBpdCB3YXMgSSBzaG91bGQgc2F5LCDigJx0aGF0IHdoaWNoIGlzIG5vdCBpbmRpdmlzaWJsZSBieSB0d28sIGJ1dCBkaXZpc2libGUgYnkgdHdv4oCdOyAgb3IgZG9uJ3QgeW91IGFncmVlPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3cgb2JzZXJ2ZSB0aGUgbmV4dCBwb2ludC4gIElmIGhvbGluZXNzIGlzIGEgcGFydCBvZiB0aGUgcmlnaHQsIHdlIG11c3QsIGFwcGFyZW50bHksIGZpbmQgb3V0IHdoYXQgcGFydCBvZiB0aGUgcmlnaHQgaG9saW5lc3MgaXMuICBOb3cgaWYgeW91IGFza2VkIG1lIGFib3V0IG9uZSBvZiB0aGUgdGhpbmdzIEkganVzdCBtZW50aW9uZWQsIGFzLCBmb3IgZXhhbXBsZSwgd2hhdCBwYXJ0IG9mIG51bWJlciB0aGUgZXZlbiB3YXMsIGFuZCB3aGF0IGtpbmQgb2YgYSBudW1iZXIgaXQgd2FzIEkgc2hvdWxkIHNheSwg4oCcdGhhdCB3aGljaCBpcyBub3QgaW5kaXZpc2libGUgYnkgdHdvLCBidXQgZGl2aXNpYmxlIGJ5IHR3b+KAnTsgIG9yIGRvbid0IHlvdSBhZ3JlZT88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGFncmVlLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTJlIiB1bml0PSJzZWN0aW9uIiAvPiBTb2NyYXRlcy4gIE5vdyB0cnkgaW4geW91ciB0dXJuIHRvIHRlYWNoIG1lIHdoYXQgcGFydCBvZiB0aGUgcmlnaHQgaG9saW5lc3MgaXMsIHRoYXQgSSBtYXkgdGVsbCBNZWxldHVzIG5vdCB0byB3cm9uZyBtZSBhbnkgbW9yZSBvciBicmluZyBzdWl0cyBhZ2FpbnN0IG1lIGZvciBpbXBpZXR5LCBzaW5jZSBJIGhhdmUgbm93IGJlZW4gZHVseSBpbnN0cnVjdGVkIGJ5IHlvdSBhYm91dCB3aGF0IGlzLCBhbmQgd2hhdCBpcyBub3QsIHBpb3VzIGFuZCBob2x5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBhZ3JlZS4KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEyZSIgdW5pdD0ic2VjdGlvbiIgLz4gU29jcmF0ZXMuICBOb3cgdHJ5IGluIHlvdXIgdHVybiB0byB0ZWFjaCBtZSB3aGF0IHBhcnQgb2YgdGhlIHJpZ2h0IGhvbGluZXNzIGlzLCB0aGF0IEkgbWF5IHRlbGwgTWVsZXR1cyBub3QgdG8gd3JvbmcgbWUgYW55IG1vcmUgb3IgYnJpbmcgc3VpdHMgYWdhaW5zdCBtZSBmb3IgaW1waWV0eSwgc2luY2UgSSBoYXZlIG5vdyBiZWVuIGR1bHkgaW5zdHJ1Y3RlZCBieSB5b3UgYWJvdXQgd2hhdCBpcywgYW5kIHdoYXQgaXMgbm90LCBwaW91cyBhbmQgaG9seS48L3A+PC90cmFuc2xhdGlvbj4="
translation['12.12e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMmUiIHVuaXQ9InNlY3Rpb24iIC8+IFNvY3JhdGVzLiAgTm93IHRyeSBpbiB5b3VyIHR1cm4gdG8gdGVhY2ggbWUgd2hhdCBwYXJ0IG9mIHRoZSByaWdodCBob2xpbmVzcyBpcywgdGhhdCBJIG1heSB0ZWxsIE1lbGV0dXMgbm90IHRvIHdyb25nIG1lIGFueSBtb3JlIG9yIGJyaW5nIHN1aXRzIGFnYWluc3QgbWUgZm9yIGltcGlldHksIHNpbmNlIEkgaGF2ZSBub3cgYmVlbiBkdWx5IGluc3RydWN0ZWQgYnkgeW91IGFib3V0IHdoYXQgaXMsIGFuZCB3aGF0IGlzIG5vdCwgcGlvdXMgYW5kIGhvbHkuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGlzIHRoZW4gaXMgbXkgb3BpbmlvbiwgU29jcmF0ZXMsIHRoYXQgdGhlIHBhcnQgb2YgdGhlIHJpZ2h0IHdoaWNoIGhhcyB0byBkbyB3aXRoIGF0dGVudGlvbiB0byB0aGUgZ29kcyBjb25zdGl0dXRlcyBwaWV0eSBhbmQgaG9saW5lc3MsIGFuZCB0aGF0IHRoZSByZW1haW5pbmcgcGFydCBvZiB0aGUgcmlnaHQgaXMgdGhhdCB3aGljaCBoYXMgdG8gZG8gd2l0aCB0aGUgc2VydmljZSBvZiBtZW4uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGlzIHRoZW4gaXMgbXkgb3BpbmlvbiwgU29jcmF0ZXMsIHRoYXQgdGhlIHBhcnQgb2YgdGhlIHJpZ2h0IHdoaWNoIGhhcyB0byBkbyB3aXRoIGF0dGVudGlvbiB0byB0aGUgZ29kcyBjb25zdGl0dXRlcyBwaWV0eSBhbmQgaG9saW5lc3MsIGFuZCB0aGF0IHRoZSByZW1haW5pbmcgcGFydCBvZiB0aGUgcmlnaHQgaXMgdGhhdCB3aGljaCBoYXMgdG8gZG8gd2l0aCB0aGUgc2VydmljZSBvZiBtZW4uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHRoaW5rIHlvdSBhcmUgY29ycmVjdCwgRXV0aHlwaHJvOwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTMiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzYSIgdW5pdD0ic2VjdGlvbiIgLz5idXQgdGhlcmUgaXMgb25lIGxpdHRsZSBwb2ludCBhYm91dCB3aGljaCBJIHN0aWxsIHdhbnQgaW5mb3JtYXRpb24sIGZvciBJIGRvIG5vdCB5ZXQgdW5kZXJzdGFuZCB3aGF0IHlvdSBtZWFuIGJ5IOKAnGF0dGVudGlvbi7igJ0gIEkgZG9uJ3Qgc3VwcG9zZSB5b3UgbWVhbiB0aGUgc2FtZSBraW5kIG9mIGF0dGVudGlvbiB0byB0aGUgZ29kcyB3aGljaCBpcyBwYWlkIHRvIG90aGVyIHRoaW5ncy4gIFdlIHNheSwgZm9yIGV4YW1wbGUsIHRoYXQgbm90IGV2ZXJ5b25lIGtub3dzIGhvdyB0byBhdHRlbmQgdG8gaG9yc2VzLCBidXQgb25seSBoZSB3aG8gaXMgc2tpbGxlZCBpbiBob3JzZW1hbnNoaXAsIGRvIHdlIG5vdD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB0aGluayB5b3UgYXJlIGNvcnJlY3QsIEV1dGh5cGhybzsKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzIiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2EiIHVuaXQ9InNlY3Rpb24iIC8+YnV0IHRoZXJlIGlzIG9uZSBsaXR0bGUgcG9pbnQgYWJvdXQgd2hpY2ggSSBzdGlsbCB3YW50IGluZm9ybWF0aW9uLCBmb3IgSSBkbyBub3QgeWV0IHVuZGVyc3RhbmQgd2hhdCB5b3UgbWVhbiBieSDigJxhdHRlbnRpb24u4oCdICBJIGRvbid0IHN1cHBvc2UgeW91IG1lYW4gdGhlIHNhbWUga2luZCBvZiBhdHRlbnRpb24gdG8gdGhlIGdvZHMgd2hpY2ggaXMgcGFpZCB0byBvdGhlciB0aGluZ3MuICBXZSBzYXksIGZvciBleGFtcGxlLCB0aGF0IG5vdCBldmVyeW9uZSBrbm93cyBob3cgdG8gYXR0ZW5kIHRvIGhvcnNlcywgYnV0IG9ubHkgaGUgd2hvIGlzIHNraWxsZWQgaW4gaG9yc2VtYW5zaGlwLCBkbyB3ZSBub3Q/PC9wPjwvdHJhbnNsYXRpb24+"
translation['13.13a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxMyIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTNhIiB1bml0PSJzZWN0aW9uIiAvPmJ1dCB0aGVyZSBpcyBvbmUgbGl0dGxlIHBvaW50IGFib3V0IHdoaWNoIEkgc3RpbGwgd2FudCBpbmZvcm1hdGlvbiwgZm9yIEkgZG8gbm90IHlldCB1bmRlcnN0YW5kIHdoYXQgeW91IG1lYW4gYnkg4oCcYXR0ZW50aW9uLuKAnSAgSSBkb24ndCBzdXBwb3NlIHlvdSBtZWFuIHRoZSBzYW1lIGtpbmQgb2YgYXR0ZW50aW9uIHRvIHRoZSBnb2RzIHdoaWNoIGlzIHBhaWQgdG8gb3RoZXIgdGhpbmdzLiAgV2Ugc2F5LCBmb3IgZXhhbXBsZSwgdGhhdCBub3QgZXZlcnlvbmUga25vd3MgaG93IHRvIGF0dGVuZCB0byBob3JzZXMsIGJ1dCBvbmx5IGhlIHdobyBpcyBza2lsbGVkIGluIGhvcnNlbWFuc2hpcCwgZG8gd2Ugbm90PzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBob3JzZW1hbnNoaXAgaXMgdGhlIGFydCBvZiBhdHRlbmRpbmcgdG8gaG9yc2VzPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGhvcnNlbWFuc2hpcCBpcyB0aGUgYXJ0IG9mIGF0dGVuZGluZyB0byBob3JzZXM/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIG5vdCBldmVyeW9uZSBrbm93cyBob3cgdG8gYXR0ZW5kIHRvIGRvZ3MsIGJ1dCBvbmx5IHRoZSBodW50c21hbj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIG5vdCBldmVyeW9uZSBrbm93cyBob3cgdG8gYXR0ZW5kIHRvIGRvZ3MsIGJ1dCBvbmx5IHRoZSBodW50c21hbj88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGF0IGlzIHNvLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhhdCBpcyBzby48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gdGhlIGh1bnRzbWFuJ3MgYXJ0IGlzIHRoZSBhcnQgb2YgYXR0ZW5kaW5nIHRvIGRvZ3M/CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2IiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gdGhlIGh1bnRzbWFuJ3MgYXJ0IGlzIHRoZSBhcnQgb2YgYXR0ZW5kaW5nIHRvIGRvZ3M/CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2IiIHVuaXQ9InNlY3Rpb24iIC8+PC9wPjwvdHJhbnNsYXRpb24+"
translation['13.13b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2IiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgdGhlIG94aGVyZCdzIGFydCBpcyB0aGF0IG9mIGF0dGVuZGluZyB0byBveGVuPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgdGhlIG94aGVyZCdzIGFydCBpcyB0aGF0IG9mIGF0dGVuZGluZyB0byBveGVuPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCBob2xpbmVzcyBhbmQgcGlldHkgaXMgdGhlIGFydCBvZiBhdHRlbmRpbmcgdG8gdGhlIGdvZHM/ICBJcyB0aGF0IHdoYXQgeW91IG1lYW4sIEV1dGh5cGhybz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGhvbGluZXNzIGFuZCBwaWV0eSBpcyB0aGUgYXJ0IG9mIGF0dGVuZGluZyB0byB0aGUgZ29kcz8gIElzIHRoYXQgd2hhdCB5b3UgbWVhbiwgRXV0aHlwaHJvPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdyBkb2VzIGF0dGVudGlvbiBhbHdheXMgYWltIHRvIGFjY29tcGxpc2ggdGhlIHNhbWUgZW5kPyAgSSBtZWFuIHNvbWV0aGluZyBsaWtlIHRoaXM6ICBJdCBhaW1zIGF0IHNvbWUgZ29vZCBvciBiZW5lZml0IHRvIHRoZSBvbmUgdG8gd2hvbSBpdCBpcyBnaXZlbiwgYXMgeW91IHNlZSB0aGF0IGhvcnNlcywgd2hlbiBhdHRlbmRlZCB0byBieSB0aGUgaG9yc2VtYW4ncyBhcnQgYXJlIGJlbmVmaXRlZCBhbmQgbWFkZSBiZXR0ZXI7ICBvciBkb24ndCB5b3UgdGhpbmsgc28/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vdyBkb2VzIGF0dGVudGlvbiBhbHdheXMgYWltIHRvIGFjY29tcGxpc2ggdGhlIHNhbWUgZW5kPyAgSSBtZWFuIHNvbWV0aGluZyBsaWtlIHRoaXM6ICBJdCBhaW1zIGF0IHNvbWUgZ29vZCBvciBiZW5lZml0IHRvIHRoZSBvbmUgdG8gd2hvbSBpdCBpcyBnaXZlbiwgYXMgeW91IHNlZSB0aGF0IGhvcnNlcywgd2hlbiBhdHRlbmRlZCB0byBieSB0aGUgaG9yc2VtYW4ncyBhcnQgYXJlIGJlbmVmaXRlZCBhbmQgbWFkZSBiZXR0ZXI7ICBvciBkb24ndCB5b3UgdGhpbmsgc28/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBJIGRvLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBJIGRvLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGRvZ3MgYXJlIGJlbmVmaXRlZCBieSB0aGUgaHVudHNtYW4ncyBhcnQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzYyIgdW5pdD0ic2VjdGlvbiIgLz5hbmQgb3hlbiBieSB0aGUgb3hoZXJkJ3MgYW5kIGV2ZXJ5dGhpbmcgZWxzZSBpbiB0aGUgc2FtZSB3YXk/ICBPciBkbyB5b3UgdGhpbmsgY2FyZSBhbmQgYXR0ZW50aW9uIGFyZSBldmVyIG1lYW50IGZvciB0aGUgaW5qdXJ5IG9mIHRoYXQgd2hpY2ggaXMgY2FyZWQgZm9yPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgZG9ncyBhcmUgYmVuZWZpdGVkIGJ5IHRoZSBodW50c21hbidzIGFydAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTNjIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBveGVuIGJ5IHRoZSBveGhlcmQncyBhbmQgZXZlcnl0aGluZyBlbHNlIGluIHRoZSBzYW1lIHdheT8gIE9yIGRvIHlvdSB0aGluayBjYXJlIGFuZCBhdHRlbnRpb24gYXJlIGV2ZXIgbWVhbnQgZm9yIHRoZSBpbmp1cnkgb2YgdGhhdCB3aGljaCBpcyBjYXJlZCBmb3I/PC9wPjwvdHJhbnNsYXRpb24+"
translation['13.13c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2MiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIG94ZW4gYnkgdGhlIG94aGVyZCdzIGFuZCBldmVyeXRoaW5nIGVsc2UgaW4gdGhlIHNhbWUgd2F5PyAgT3IgZG8geW91IHRoaW5rIGNhcmUgYW5kIGF0dGVudGlvbiBhcmUgZXZlciBtZWFudCBmb3IgdGhlIGluanVyeSBvZiB0aGF0IHdoaWNoIGlzIGNhcmVkIGZvcj88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vLCBieSBaZXVzLCBJIGRvIG5vdC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vLCBieSBaZXVzLCBJIGRvIG5vdC48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBmb3IgaXRzIGJlbmVmaXQ/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBmb3IgaXRzIGJlbmVmaXQ/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2YgY291cnNlLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2YgY291cnNlLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBob2xpbmVzcywgc2luY2UgaXQgaXMgdGhlIGFydCBvZiBhdHRlbmRpbmcgdG8gdGhlIGdvZHMsIGlzIGEgYmVuZWZpdCB0byB0aGUgZ29kcywgYW5kIG1ha2VzIHRoZW0gYmV0dGVyPyAgQW5kIHlvdSB3b3VsZCBhZ3JlZSB0aGF0IHdoZW4geW91IGRvIGEgaG9seSBvciBwaW91cyBhY3QgeW91IGFyZSBtYWtpbmcgb25lIG9mIHRoZSBnb2RzIGJldHRlcj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBob2xpbmVzcywgc2luY2UgaXQgaXMgdGhlIGFydCBvZiBhdHRlbmRpbmcgdG8gdGhlIGdvZHMsIGlzIGEgYmVuZWZpdCB0byB0aGUgZ29kcywgYW5kIG1ha2VzIHRoZW0gYmV0dGVyPyAgQW5kIHlvdSB3b3VsZCBhZ3JlZSB0aGF0IHdoZW4geW91IGRvIGEgaG9seSBvciBwaW91cyBhY3QgeW91IGFyZSBtYWtpbmcgb25lIG9mIHRoZSBnb2RzIGJldHRlcj88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ObywgYnkgWmV1cywgbm90IEkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ObywgYnkgWmV1cywgbm90IEkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3IgZG8gSSwgRXV0aHlwaHJvLCB0aGluayB0aGF0IGlzIHdoYXQgeW91IG1lYW50LiAgRmFyIGZyb20gaXQuICBCdXQgSSBhc2tlZCB3aGF0IHlvdSBtZWFudCBieQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTNkIiB1bml0PSJzZWN0aW9uIiAvPuKAnGF0dGVudGlvbiB0byB0aGUgZ29kc+KAnSBqdXN0IGJlY2F1c2UgSSBkaWQgbm90IHRoaW5rIHlvdSBtZWFudCBhbnl0aGluZyBsaWtlIHRoYXQuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk5vciBkbyBJLCBFdXRoeXBocm8sIHRoaW5rIHRoYXQgaXMgd2hhdCB5b3UgbWVhbnQuICBGYXIgZnJvbSBpdC4gIEJ1dCBJIGFza2VkIHdoYXQgeW91IG1lYW50IGJ5CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2QiIHVuaXQ9InNlY3Rpb24iIC8+4oCcYXR0ZW50aW9uIHRvIHRoZSBnb2Rz4oCdIGp1c3QgYmVjYXVzZSBJIGRpZCBub3QgdGhpbmsgeW91IG1lYW50IGFueXRoaW5nIGxpa2UgdGhhdC48L3A+PC90cmFuc2xhdGlvbj4="
translation['13.13d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2QiIHVuaXQ9InNlY3Rpb24iIC8+4oCcYXR0ZW50aW9uIHRvIHRoZSBnb2Rz4oCdIGp1c3QgYmVjYXVzZSBJIGRpZCBub3QgdGhpbmsgeW91IG1lYW50IGFueXRoaW5nIGxpa2UgdGhhdC48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPllvdSBhcmUgcmlnaHQsIFNvY3JhdGVzOyAgdGhhdCBpcyBub3Qgd2hhdCBJIG1lYW4uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Zb3UgYXJlIHJpZ2h0LCBTb2NyYXRlczsgIHRoYXQgaXMgbm90IHdoYXQgSSBtZWFuLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgd2hhdCBraW5kIG9mIGF0dGVudGlvbiB0byB0aGUgZ29kcyBpcyBob2xpbmVzcz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCwgd2hhdCBraW5kIG9mIGF0dGVudGlvbiB0byB0aGUgZ29kcyBpcyBob2xpbmVzcz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUga2luZCwgU29jcmF0ZXMsIHRoYXQgc2VydmFudHMgcGF5IHRvIHRoZWlyIG1hc3RlcnMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGUga2luZCwgU29jcmF0ZXMsIHRoYXQgc2VydmFudHMgcGF5IHRvIHRoZWlyIG1hc3RlcnMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHVuZGVyc3RhbmQuICBJdCBpcywgeW91IG1lYW4sIGEga2luZCBvZiBzZXJ2aWNlIHRvIHRoZSBnb2RzPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHVuZGVyc3RhbmQuICBJdCBpcywgeW91IG1lYW4sIGEga2luZCBvZiBzZXJ2aWNlIHRvIHRoZSBnb2RzPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkV4YWN0bHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5FeGFjdGx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Tm93IGNhbiB5b3UgdGVsbCBtZSB3aGF0IHJlc3VsdCB0aGUgYXJ0IHRoYXQgc2VydmVzIHRoZSBwaHlzaWNpYW4gc2VydmVzIHRvIHByb2R1Y2U/ICBJcyBpdCBub3QgaGVhbHRoPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Ob3cgY2FuIHlvdSB0ZWxsIG1lIHdoYXQgcmVzdWx0IHRoZSBhcnQgdGhhdCBzZXJ2ZXMgdGhlIHBoeXNpY2lhbiBzZXJ2ZXMgdG8gcHJvZHVjZT8gIElzIGl0IG5vdCBoZWFsdGg/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2VsbCB0aGVuOyAgd2hhdCBpcyBpdCB3aGljaCB0aGUgYXJ0CjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2UiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBzZXJ2ZXMgc2hpcGJ1aWxkZXJzIHNlcnZlcyB0byBwcm9kdWNlPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsIHRoZW47ICB3aGF0IGlzIGl0IHdoaWNoIHRoZSBhcnQKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjEzZSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IHNlcnZlcyBzaGlwYnVpbGRlcnMgc2VydmVzIHRvIHByb2R1Y2U/PC9wPjwvdHJhbnNsYXRpb24+"
translation['13.13e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxM2UiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBzZXJ2ZXMgc2hpcGJ1aWxkZXJzIHNlcnZlcyB0byBwcm9kdWNlPzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXZpZGVudGx5LCBTb2NyYXRlcywgYSBzaGlwLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXZpZGVudGx5LCBTb2NyYXRlcywgYSBzaGlwLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHRoYXQgd2hpY2ggc2VydmVzIGhvdXNlYnVpbGRlcnMgc2VydmVzIHRvIGJ1aWxkIGEgaG91c2U/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB0aGF0IHdoaWNoIHNlcnZlcyBob3VzZWJ1aWxkZXJzIHNlcnZlcyB0byBidWlsZCBhIGhvdXNlPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gdGVsbCBtZSwgbXkgZnJpZW5kOyAgd2hhdCB3b3VsZCB0aGUgYXJ0IHdoaWNoIHNlcnZlcyB0aGUgZ29kcyBzZXJ2ZSB0byBhY2NvbXBsaXNoPyAgRm9yIGl0IGlzIGV2aWRlbnQgdGhhdCB5b3Uga25vdywgc2luY2UgeW91IHNheSB5b3Uga25vdyBtb3JlIHRoYW4gYW55IG90aGVyIG1hbiBhYm91dCBtYXR0ZXJzIHdoaWNoIGhhdmUgdG8gZG8gd2l0aCB0aGUgZ29kcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB0ZWxsIG1lLCBteSBmcmllbmQ7ICB3aGF0IHdvdWxkIHRoZSBhcnQgd2hpY2ggc2VydmVzIHRoZSBnb2RzIHNlcnZlIHRvIGFjY29tcGxpc2g/ICBGb3IgaXQgaXMgZXZpZGVudCB0aGF0IHlvdSBrbm93LCBzaW5jZSB5b3Ugc2F5IHlvdSBrbm93IG1vcmUgdGhhbiBhbnkgb3RoZXIgbWFuIGFib3V0IG1hdHRlcnMgd2hpY2ggaGF2ZSB0byBkbyB3aXRoIHRoZSBnb2RzLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCB3aGF0IEkgc2F5IGlzIHRydWUsIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHdoYXQgSSBzYXkgaXMgdHJ1ZSwgU29jcmF0ZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCBpbiB0aGUgbmFtZSBvZiBaZXVzLCB0ZWxsIG1lLCB3aGF0IGlzIHRoYXQgZ2xvcmlvdXMgcmVzdWx0IHdoaWNoIHRoZSBnb2RzIGFjY29tcGxpc2ggYnkgdXNpbmcgdXMgYXMgc2VydmFudHM/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4sIGluIHRoZSBuYW1lIG9mIFpldXMsIHRlbGwgbWUsIHdoYXQgaXMgdGhhdCBnbG9yaW91cyByZXN1bHQgd2hpY2ggdGhlIGdvZHMgYWNjb21wbGlzaCBieSB1c2luZyB1cyBhcyBzZXJ2YW50cz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGV5IGFjY29tcGxpc2ggbWFueSBmaW5lIHJlc3VsdHMsIFNvY3JhdGVzLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTQiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE0YSIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZXkgYWNjb21wbGlzaCBtYW55IGZpbmUgcmVzdWx0cywgU29jcmF0ZXMuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTRhIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['14.14a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNCIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTRhIiB1bml0PSJzZWN0aW9uIiAvPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIGFuZCBzbyBkbyBnZW5lcmFscywgbXkgZnJpZW5kOyAgYnV0IG5ldmVydGhlbGVzcywgeW91IGNvdWxkIGVhc2lseSB0ZWxsIHRoZSBjaGllZiBvZiB0aGVtLCBuYW1lbHksIHRoYXQgdGhleSBicmluZyBhYm91dCB2aWN0b3J5IGluIHdhci4gIElzIHRoYXQgbm90IHRoZSBjYXNlPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMsIGFuZCBzbyBkbyBnZW5lcmFscywgbXkgZnJpZW5kOyAgYnV0IG5ldmVydGhlbGVzcywgeW91IGNvdWxkIGVhc2lseSB0ZWxsIHRoZSBjaGllZiBvZiB0aGVtLCBuYW1lbHksIHRoYXQgdGhleSBicmluZyBhYm91dCB2aWN0b3J5IGluIHdhci4gIElzIHRoYXQgbm90IHRoZSBjYXNlPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9mIGNvdXJzZS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPk9mIGNvdXJzZS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkFuZCBmYXJtZXJzIGFsc28sIEkgdGhpbmssIGFjY29tcGxpc2ggbWFueSBmaW5lIHJlc3VsdHM7ICBidXQgc3RpbGwgdGhlIGNoaWVmIHJlc3VsdCBvZiB0aGVpciB3b3JrIGlzIGZvb2QgZnJvbSB0aGUgbGFuZD88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIGZhcm1lcnMgYWxzbywgSSB0aGluaywgYWNjb21wbGlzaCBtYW55IGZpbmUgcmVzdWx0czsgIGJ1dCBzdGlsbCB0aGUgY2hpZWYgcmVzdWx0IG9mIHRoZWlyIHdvcmsgaXMgZm9vZCBmcm9tIHRoZSBsYW5kPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seS48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkNlcnRhaW5seS48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkJ1dCBob3cgYWJvdXQgdGhlIG1hbnkgZmluZSByZXN1bHRzIHRoZSBnb2RzIGFjY29tcGxpc2g/ICBXaGF0IGlzIHRoZSBjaGllZiByZXN1bHQgb2YgdGhlaXIgd29yaz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QnV0IGhvdyBhYm91dCB0aGUgbWFueSBmaW5lIHJlc3VsdHMgdGhlIGdvZHMgYWNjb21wbGlzaD8gIFdoYXQgaXMgdGhlIGNoaWVmIHJlc3VsdCBvZiB0aGVpciB3b3JrPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkkgdG9sZCB5b3UgYSB3aGlsZSBhZ28sIFNvY3JhdGVzLAo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTRiIiB1bml0PSJzZWN0aW9uIiAvPnRoYXQgaXQgaXMgYSBsb25nIHRhc2sgdG8gbGVhcm4gYWNjdXJhdGVseSBhbGwgYWJvdXQgdGhlc2UgdGhpbmdzLiAgSG93ZXZlciwgSSBzYXkgc2ltcGx5IHRoYXQgd2hlbiBvbmUga25vd3MgaG93IHRvIHNheSBhbmQgZG8gd2hhdCBpcyBncmF0aWZ5aW5nIHRvIHRoZSBnb2RzLCBpbiBwcmF5aW5nIGFuZCBzYWNyaWZpY2luZywgdGhhdCBpcyBob2xpbmVzcywgYW5kIHN1Y2ggdGhpbmdzIGJyaW5nIHNhbHZhdGlvbiB0byBpbmRpdmlkdWFsIGZhbWlsaWVzIGFuZCB0byBzdGF0ZXM7ICBhbmQgdGhlIG9wcG9zaXRlIG9mIHdoYXQgaXMgZ3JhdGlmeWluZyB0byB0aGUgZ29kcyBpcyBpbXBpb3VzLCBhbmQgdGhhdCBvdmVydHVybnMgYW5kIGRlc3Ryb3lzIGV2ZXJ5dGhpbmcuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHRvbGQgeW91IGEgd2hpbGUgYWdvLCBTb2NyYXRlcywKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE0YiIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IGl0IGlzIGEgbG9uZyB0YXNrIHRvIGxlYXJuIGFjY3VyYXRlbHkgYWxsIGFib3V0IHRoZXNlIHRoaW5ncy4gIEhvd2V2ZXIsIEkgc2F5IHNpbXBseSB0aGF0IHdoZW4gb25lIGtub3dzIGhvdyB0byBzYXkgYW5kIGRvIHdoYXQgaXMgZ3JhdGlmeWluZyB0byB0aGUgZ29kcywgaW4gcHJheWluZyBhbmQgc2FjcmlmaWNpbmcsIHRoYXQgaXMgaG9saW5lc3MsIGFuZCBzdWNoIHRoaW5ncyBicmluZyBzYWx2YXRpb24gdG8gaW5kaXZpZHVhbCBmYW1pbGllcyBhbmQgdG8gc3RhdGVzOyAgYW5kIHRoZSBvcHBvc2l0ZSBvZiB3aGF0IGlzIGdyYXRpZnlpbmcgdG8gdGhlIGdvZHMgaXMgaW1waW91cywgYW5kIHRoYXQgb3ZlcnR1cm5zIGFuZCBkZXN0cm95cyBldmVyeXRoaW5nLjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['14.14b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGIiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBpdCBpcyBhIGxvbmcgdGFzayB0byBsZWFybiBhY2N1cmF0ZWx5IGFsbCBhYm91dCB0aGVzZSB0aGluZ3MuICBIb3dldmVyLCBJIHNheSBzaW1wbHkgdGhhdCB3aGVuIG9uZSBrbm93cyBob3cgdG8gc2F5IGFuZCBkbyB3aGF0IGlzIGdyYXRpZnlpbmcgdG8gdGhlIGdvZHMsIGluIHByYXlpbmcgYW5kIHNhY3JpZmljaW5nLCB0aGF0IGlzIGhvbGluZXNzLCBhbmQgc3VjaCB0aGluZ3MgYnJpbmcgc2FsdmF0aW9uIHRvIGluZGl2aWR1YWwgZmFtaWxpZXMgYW5kIHRvIHN0YXRlczsgIGFuZCB0aGUgb3Bwb3NpdGUgb2Ygd2hhdCBpcyBncmF0aWZ5aW5nIHRvIHRoZSBnb2RzIGlzIGltcGlvdXMsIGFuZCB0aGF0IG92ZXJ0dXJucyBhbmQgZGVzdHJveXMgZXZlcnl0aGluZy48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WW91IG1pZ2h0LCBpZiB5b3Ugd2lzaGVkLCBFdXRoeXBocm8sIGhhdmUgYW5zd2VyZWQgbXVjaCBtb3JlIGJyaWVmbHkgdGhlIGNoaWVmIHBhcnQgb2YgbXkgcXVlc3Rpb24uICBCdXQgaXQgaXMgcGxhaW4gdGhhdCB5b3UgZG8gbm90IGNhcmUgdG8gaW5zdHJ1Y3QgbWUuCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGMiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIG5vdywgd2hlbiB5b3Ugd2VyZSBjbG9zZSB1cG9uIGl0IHlvdSB0dXJuZWQgYXNpZGU7ICBhbmQgaWYgeW91IGhhZCBhbnN3ZXJlZCBpdCwgSSBzaG91bGQgYWxyZWFkeSBoYXZlIG9idGFpbmVkIGZyb20geW91IGFsbCB0aGUgaW5zdHJ1Y3Rpb24gSSBuZWVkIGFib3V0IGhvbGluZXNzLiAgQnV0LCBhcyB0aGluZ3MgYXJlLCB0aGUgcXVlc3Rpb25lciBtdXN0IGZvbGxvdyB0aGUgb25lIHF1ZXN0aW9uZWQgd2hlcmV2ZXIgaGUgbGVhZHMuICBXaGF0IGRvIHlvdSBzYXkgdGhlIGhvbHksIG9yIGhvbGluZXNzLCBpcz8gIERvIHlvdSBub3Qgc2F5IHRoYXQgaXQgaXMgYSBraW5kIG9mIHNjaWVuY2Ugb2Ygc2FjcmlmaWNpbmcgYW5kIHByYXlpbmc/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPllvdSBtaWdodCwgaWYgeW91IHdpc2hlZCwgRXV0aHlwaHJvLCBoYXZlIGFuc3dlcmVkIG11Y2ggbW9yZSBicmllZmx5IHRoZSBjaGllZiBwYXJ0IG9mIG15IHF1ZXN0aW9uLiAgQnV0IGl0IGlzIHBsYWluIHRoYXQgeW91IGRvIG5vdCBjYXJlIHRvIGluc3RydWN0IG1lLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTRjIiB1bml0PSJzZWN0aW9uIiAvPkZvciBub3csIHdoZW4geW91IHdlcmUgY2xvc2UgdXBvbiBpdCB5b3UgdHVybmVkIGFzaWRlOyAgYW5kIGlmIHlvdSBoYWQgYW5zd2VyZWQgaXQsIEkgc2hvdWxkIGFscmVhZHkgaGF2ZSBvYnRhaW5lZCBmcm9tIHlvdSBhbGwgdGhlIGluc3RydWN0aW9uIEkgbmVlZCBhYm91dCBob2xpbmVzcy4gIEJ1dCwgYXMgdGhpbmdzIGFyZSwgdGhlIHF1ZXN0aW9uZXIgbXVzdCBmb2xsb3cgdGhlIG9uZSBxdWVzdGlvbmVkIHdoZXJldmVyIGhlIGxlYWRzLiAgV2hhdCBkbyB5b3Ugc2F5IHRoZSBob2x5LCBvciBob2xpbmVzcywgaXM/ICBEbyB5b3Ugbm90IHNheSB0aGF0IGl0IGlzIGEga2luZCBvZiBzY2llbmNlIG9mIHNhY3JpZmljaW5nIGFuZCBwcmF5aW5nPzwvcD48L3RyYW5zbGF0aW9uPg=="
translation['14.14c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGMiIHVuaXQ9InNlY3Rpb24iIC8+Rm9yIG5vdywgd2hlbiB5b3Ugd2VyZSBjbG9zZSB1cG9uIGl0IHlvdSB0dXJuZWQgYXNpZGU7ICBhbmQgaWYgeW91IGhhZCBhbnN3ZXJlZCBpdCwgSSBzaG91bGQgYWxyZWFkeSBoYXZlIG9idGFpbmVkIGZyb20geW91IGFsbCB0aGUgaW5zdHJ1Y3Rpb24gSSBuZWVkIGFib3V0IGhvbGluZXNzLiAgQnV0LCBhcyB0aGluZ3MgYXJlLCB0aGUgcXVlc3Rpb25lciBtdXN0IGZvbGxvdyB0aGUgb25lIHF1ZXN0aW9uZWQgd2hlcmV2ZXIgaGUgbGVhZHMuICBXaGF0IGRvIHlvdSBzYXkgdGhlIGhvbHksIG9yIGhvbGluZXNzLCBpcz8gIERvIHlvdSBub3Qgc2F5IHRoYXQgaXQgaXMgYSBraW5kIG9mIHNjaWVuY2Ugb2Ygc2FjcmlmaWNpbmcgYW5kIHByYXlpbmc/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5ZZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgc2FjcmlmaWNpbmcgaXMgbWFraW5nIGdpZnRzIHRvIHRoZSBnb2RzCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHByYXlpbmcgaXMgYXNraW5nIGZyb20gdGhlbT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+QW5kIHNhY3JpZmljaW5nIGlzIG1ha2luZyBnaWZ0cyB0byB0aGUgZ29kcwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTRkIiB1bml0PSJzZWN0aW9uIiAvPmFuZCBwcmF5aW5nIGlzIGFza2luZyBmcm9tIHRoZW0/PC9wPjwvdHJhbnNsYXRpb24+"
translation['14.14d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGQiIHVuaXQ9InNlY3Rpb24iIC8+YW5kIHByYXlpbmcgaXMgYXNraW5nIGZyb20gdGhlbT88c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPkV4YWN0bHksIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXhhY3RseSwgU29jcmF0ZXMuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGhvbGluZXNzLCBhY2NvcmRpbmcgdG8gdGhpcyBkZWZpbml0aW9uLCB3b3VsZCBiZSBhIHNjaWVuY2Ugb2YgZ2l2aW5nIGFuZCBhc2tpbmcuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gaG9saW5lc3MsIGFjY29yZGluZyB0byB0aGlzIGRlZmluaXRpb24sIHdvdWxkIGJlIGEgc2NpZW5jZSBvZiBnaXZpbmcgYW5kIGFza2luZy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Zb3UgdW5kZXJzdGFuZCBwZXJmZWN0bHkgd2hhdCBJIHNhaWQsIFNvY3JhdGVzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WW91IHVuZGVyc3RhbmQgcGVyZmVjdGx5IHdoYXQgSSBzYWlkLCBTb2NyYXRlcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywgbXkgZnJpZW5kLCBmb3IgSSBhbSBlYWdlciBmb3IgeW91ciB3aXNkb20sIGFuZCBnaXZlIG15IG1pbmQgdG8gaXQsIHNvIHRoYXQgbm90aGluZyB5b3Ugc2F5IHNoYWxsIGZhbGwgdG8gdGhlIGdyb3VuZC4gIEJ1dCB0ZWxsIG1lLCB3aGF0IGlzIHRoaXMgc2VydmljZSBvZiB0aGUgZ29kcz8gIERvIHlvdSBzYXkgdGhhdCBpdCBjb25zaXN0cyBpbiBhc2tpbmcgZnJvbSB0aGVtIGFuZCBnaXZpbmcgdG8gdGhlbT88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBteSBmcmllbmQsIGZvciBJIGFtIGVhZ2VyIGZvciB5b3VyIHdpc2RvbSwgYW5kIGdpdmUgbXkgbWluZCB0byBpdCwgc28gdGhhdCBub3RoaW5nIHlvdSBzYXkgc2hhbGwgZmFsbCB0byB0aGUgZ3JvdW5kLiAgQnV0IHRlbGwgbWUsIHdoYXQgaXMgdGhpcyBzZXJ2aWNlIG9mIHRoZSBnb2RzPyAgRG8geW91IHNheSB0aGF0IGl0IGNvbnNpc3RzIGluIGFza2luZyBmcm9tIHRoZW0gYW5kIGdpdmluZyB0byB0aGVtPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldvdWxkIG5vdCB0aGUgcmlnaHQgd2F5IG9mIGFza2luZyBiZSB0byBhc2sgb2YgdGhlbSB3aGF0IHdlIG5lZWQgZnJvbSB0aGVtPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Xb3VsZCBub3QgdGhlIHJpZ2h0IHdheSBvZiBhc2tpbmcgYmUgdG8gYXNrIG9mIHRoZW0gd2hhdCB3ZSBuZWVkIGZyb20gdGhlbT88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IGVsc2U/PC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IGVsc2U/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgdGhlIHJpZ2h0IHdheSBvZiBnaXZpbmcsIHRvIHByZXNlbnQgdGhlbSB3aXRoCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGUiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCB0aGV5IG5lZWQgZnJvbSB1cz8gIEZvciBpdCB3b3VsZCBub3QgYmUgc2NpZW50aWZpYyBnaXZpbmcgdG8gZ2l2ZSBhbnlvbmUgd2hhdCBoZSBkb2VzIG5vdCBuZWVkLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5BbmQgdGhlIHJpZ2h0IHdheSBvZiBnaXZpbmcsIHRvIHByZXNlbnQgdGhlbSB3aXRoCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGUiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCB0aGV5IG5lZWQgZnJvbSB1cz8gIEZvciBpdCB3b3VsZCBub3QgYmUgc2NpZW50aWZpYyBnaXZpbmcgdG8gZ2l2ZSBhbnlvbmUgd2hhdCBoZSBkb2VzIG5vdCBuZWVkLjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['14.14e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNGUiIHVuaXQ9InNlY3Rpb24iIC8+d2hhdCB0aGV5IG5lZWQgZnJvbSB1cz8gIEZvciBpdCB3b3VsZCBub3QgYmUgc2NpZW50aWZpYyBnaXZpbmcgdG8gZ2l2ZSBhbnlvbmUgd2hhdCBoZSBkb2VzIG5vdCBuZWVkLjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WW91IGFyZSByaWdodCwgU29jcmF0ZXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Zb3UgYXJlIHJpZ2h0LCBTb2NyYXRlcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gaG9saW5lc3Mgd291bGQgYmUgYW4gYXJ0IG9mIGJhcnRlciBiZXR3ZWVuIGdvZHMgYW5kIG1lbj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBob2xpbmVzcyB3b3VsZCBiZSBhbiBhcnQgb2YgYmFydGVyIGJldHdlZW4gZ29kcyBhbmQgbWVuPzwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlllcywgb2YgYmFydGVyLCBpZiB5b3UgbGlrZSB0byBjYWxsIGl0IHNvLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBvZiBiYXJ0ZXIsIGlmIHlvdSBsaWtlIHRvIGNhbGwgaXQgc28uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIGRvbid0IGxpa2UgdG8gY2FsbCBpdCBzbywgaWYgaXQgaXMgbm90IHRydWUuICBCdXQgdGVsbCBtZSwgd2hhdCBhZHZhbnRhZ2UgYWNjcnVlcyB0byB0aGUgZ29kcyBmcm9tIHRoZSBnaWZ0cyB0aGV5IGdldCBmcm9tIHVzPyAgRm9yIGV2ZXJ5Ym9keSBrbm93cyB3aGF0IHRoZXkgZ2l2ZSwKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE1IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNWEiIHVuaXQ9InNlY3Rpb24iIC8+c2luY2Ugd2UgaGF2ZSBub3RoaW5nIGdvb2Qgd2hpY2ggdGhleSBkbyBub3QgZ2l2ZS4gIEJ1dCB3aGF0IGFkdmFudGFnZSBkbyB0aGV5IGRlcml2ZSBmcm9tIHdoYXQgdGhleSBnZXQgZnJvbSB1cz8gIE9yIGhhdmUgd2Ugc28gbXVjaCB0aGUgYmV0dGVyIG9mIHRoZW0gaW4gb3VyIGJhcnRlcmluZyB0aGF0IHdlIGdldCBhbGwgZ29vZCB0aGluZ3MgZnJvbSB0aGVtIGFuZCB0aGV5IG5vdGhpbmcgZnJvbSB1cz88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSBkb24ndCBsaWtlIHRvIGNhbGwgaXQgc28sIGlmIGl0IGlzIG5vdCB0cnVlLiAgQnV0IHRlbGwgbWUsIHdoYXQgYWR2YW50YWdlIGFjY3J1ZXMgdG8gdGhlIGdvZHMgZnJvbSB0aGUgZ2lmdHMgdGhleSBnZXQgZnJvbSB1cz8gIEZvciBldmVyeWJvZHkga25vd3Mgd2hhdCB0aGV5IGdpdmUsCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTVhIiB1bml0PSJzZWN0aW9uIiAvPnNpbmNlIHdlIGhhdmUgbm90aGluZyBnb29kIHdoaWNoIHRoZXkgZG8gbm90IGdpdmUuICBCdXQgd2hhdCBhZHZhbnRhZ2UgZG8gdGhleSBkZXJpdmUgZnJvbSB3aGF0IHRoZXkgZ2V0IGZyb20gdXM/ICBPciBoYXZlIHdlIHNvIG11Y2ggdGhlIGJldHRlciBvZiB0aGVtIGluIG91ciBiYXJ0ZXJpbmcgdGhhdCB3ZSBnZXQgYWxsIGdvb2QgdGhpbmdzIGZyb20gdGhlbSBhbmQgdGhleSBub3RoaW5nIGZyb20gdXM/PC9wPjwvdHJhbnNsYXRpb24+"
translation['15.15a'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNSIgdW5pdD0icGFnZSIgLz48bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTVhIiB1bml0PSJzZWN0aW9uIiAvPnNpbmNlIHdlIGhhdmUgbm90aGluZyBnb29kIHdoaWNoIHRoZXkgZG8gbm90IGdpdmUuICBCdXQgd2hhdCBhZHZhbnRhZ2UgZG8gdGhleSBkZXJpdmUgZnJvbSB3aGF0IHRoZXkgZ2V0IGZyb20gdXM/ICBPciBoYXZlIHdlIHNvIG11Y2ggdGhlIGJldHRlciBvZiB0aGVtIGluIG91ciBiYXJ0ZXJpbmcgdGhhdCB3ZSBnZXQgYWxsIGdvb2QgdGhpbmdzIGZyb20gdGhlbSBhbmQgdGhleSBub3RoaW5nIGZyb20gdXM/PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaHkgeW91IGRvbid0IHN1cHBvc2UsIFNvY3JhdGVzLCB0aGF0IHRoZSBnb2RzIGdhaW4gYW55IGFkdmFudGFnZSBmcm9tIHdoYXQgdGhleSBnZXQgZnJvbSB1cywgZG8geW91PzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+V2h5IHlvdSBkb24ndCBzdXBwb3NlLCBTb2NyYXRlcywgdGhhdCB0aGUgZ29kcyBnYWluIGFueSBhZHZhbnRhZ2UgZnJvbSB3aGF0IHRoZXkgZ2V0IGZyb20gdXMsIGRvIHlvdT88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldlbGwgdGhlbiwgd2hhdCB3b3VsZCB0aG9zZSBnaWZ0cyBvZiBvdXJzIHRvIHRoZSBnb2RzIGJlPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XZWxsIHRoZW4sIHdoYXQgd291bGQgdGhvc2UgZ2lmdHMgb2Ygb3VycyB0byB0aGUgZ29kcyBiZT88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5XaGF0IGVsc2UgdGhhbiBob25vciBhbmQgcHJhaXNlLCBhbmQsIGFzIEkgc2FpZCBiZWZvcmUsIGdyYXRpdHVkZT8KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE1YiIgdW5pdD0ic2VjdGlvbiIgLz48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPkV1dGh5cGhybzwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPldoYXQgZWxzZSB0aGFuIGhvbm9yIGFuZCBwcmFpc2UsIGFuZCwgYXMgSSBzYWlkIGJlZm9yZSwgZ3JhdGl0dWRlPwo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTViIiB1bml0PSJzZWN0aW9uIiAvPjwvcD48L3RyYW5zbGF0aW9uPg=="
translation['15.15b'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNWIiIHVuaXQ9InNlY3Rpb24iIC8+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4sIEV1dGh5cGhybywgaG9saW5lc3MgaXMgZ3JhdGVmdWwgdG8gdGhlIGdvZHMsIGJ1dCBub3QgYWR2YW50YWdlb3VzIG9yIHByZWNpb3VzIHRvIHRoZSBnb2RzPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuLCBFdXRoeXBocm8sIGhvbGluZXNzIGlzIGdyYXRlZnVsIHRvIHRoZSBnb2RzLCBidXQgbm90IGFkdmFudGFnZW91cyBvciBwcmVjaW91cyB0byB0aGUgZ29kcz88L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5JIHRoaW5rIGl0IGlzIHByZWNpb3VzLCBhYm92ZSBhbGwgdGhpbmdzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+SSB0aGluayBpdCBpcyBwcmVjaW91cywgYWJvdmUgYWxsIHRoaW5ncy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gYWdhaW4sIGl0IHNlZW1zLCBob2xpbmVzcyBpcyB0aGF0IHdoaWNoIGlzIHByZWNpb3VzIHRvIHRoZSBnb2RzLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGFnYWluLCBpdCBzZWVtcywgaG9saW5lc3MgaXMgdGhhdCB3aGljaCBpcyBwcmVjaW91cyB0byB0aGUgZ29kcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5DZXJ0YWlubHkuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHdpbGwgeW91IGJlIHN1cnByaXNlZCwgc2luY2UgeW91IHNheSB0aGlzLCBpZiB5b3VyIHdvcmRzIGRvIG5vdCByZW1haW4gZml4ZWQgYnV0IHdhbGsgYWJvdXQsIGFuZCB3aWxsIHlvdSBhY2N1c2UgbWUgb2YgYmVpbmcgdGhlIERhZWRhbHVzIHdobyBtYWtlcyB0aGVtIHdhbGssIHdoZW4geW91IGFyZSB5b3Vyc2VsZiBtdWNoIG1vcmUgc2tpbGZ1bCB0aGFuIERhZWRhbHVzIGFuZCBtYWtlIHRoZW0gZ28gcm91bmQgaW4gYSBjaXJjbGU/ICBPciBkbyB5b3Ugbm90IHNlZQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTVjIiB1bml0PSJzZWN0aW9uIiAvPnRoYXQgb3VyIGRlZmluaXRpb24gaGFzIGNvbWUgcm91bmQgdG8gdGhlIHBvaW50IGZyb20gd2hpY2ggaXQgc3RhcnRlZD8gIEZvciB5b3UgcmVtZW1iZXIsIEkgc3VwcG9zZSwgdGhhdCBhIHdoaWxlIGFnbyB3ZSBmb3VuZCB0aGF0IGhvbGluZXNzIGFuZCB3aGF0IGlzIGRlYXIgdG8gdGhlIGdvZHMgd2VyZSBub3QgdGhlIHNhbWUsIGJ1dCBkaWZmZXJlbnQgZnJvbSBlYWNoIG90aGVyOyAgb3IgZG8geW91IG5vdCByZW1lbWJlcj88L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiB3aWxsIHlvdSBiZSBzdXJwcmlzZWQsIHNpbmNlIHlvdSBzYXkgdGhpcywgaWYgeW91ciB3b3JkcyBkbyBub3QgcmVtYWluIGZpeGVkIGJ1dCB3YWxrIGFib3V0LCBhbmQgd2lsbCB5b3UgYWNjdXNlIG1lIG9mIGJlaW5nIHRoZSBEYWVkYWx1cyB3aG8gbWFrZXMgdGhlbSB3YWxrLCB3aGVuIHlvdSBhcmUgeW91cnNlbGYgbXVjaCBtb3JlIHNraWxmdWwgdGhhbiBEYWVkYWx1cyBhbmQgbWFrZSB0aGVtIGdvIHJvdW5kIGluIGEgY2lyY2xlPyAgT3IgZG8geW91IG5vdCBzZWUKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE1YyIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IG91ciBkZWZpbml0aW9uIGhhcyBjb21lIHJvdW5kIHRvIHRoZSBwb2ludCBmcm9tIHdoaWNoIGl0IHN0YXJ0ZWQ/ICBGb3IgeW91IHJlbWVtYmVyLCBJIHN1cHBvc2UsIHRoYXQgYSB3aGlsZSBhZ28gd2UgZm91bmQgdGhhdCBob2xpbmVzcyBhbmQgd2hhdCBpcyBkZWFyIHRvIHRoZSBnb2RzIHdlcmUgbm90IHRoZSBzYW1lLCBidXQgZGlmZmVyZW50IGZyb20gZWFjaCBvdGhlcjsgIG9yIGRvIHlvdSBub3QgcmVtZW1iZXI/PC9wPjwvdHJhbnNsYXRpb24+"
translation['15.15c'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNWMiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBvdXIgZGVmaW5pdGlvbiBoYXMgY29tZSByb3VuZCB0byB0aGUgcG9pbnQgZnJvbSB3aGljaCBpdCBzdGFydGVkPyAgRm9yIHlvdSByZW1lbWJlciwgSSBzdXBwb3NlLCB0aGF0IGEgd2hpbGUgYWdvIHdlIGZvdW5kIHRoYXQgaG9saW5lc3MgYW5kIHdoYXQgaXMgZGVhciB0byB0aGUgZ29kcyB3ZXJlIG5vdCB0aGUgc2FtZSwgYnV0IGRpZmZlcmVudCBmcm9tIGVhY2ggb3RoZXI7ICBvciBkbyB5b3Ugbm90IHJlbWVtYmVyPzxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBJIHJlbWVtYmVyLjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+WWVzLCBJIHJlbWVtYmVyLjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBkb24ndCB5b3Ugc2VlIHRoYXQgbm93IHlvdSBzYXkgdGhhdCB3aGF0IGlzIHByZWNpb3VzIHRvIHRoZSBnb2RzIGlzIGhvbHk/ICBBbmQgaXMgbm90IHRoaXMgd2hhdCBpcyBkZWFyIHRvIHRoZSBnb2RzPzwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGRvbid0IHlvdSBzZWUgdGhhdCBub3cgeW91IHNheSB0aGF0IHdoYXQgaXMgcHJlY2lvdXMgdG8gdGhlIGdvZHMgaXMgaG9seT8gIEFuZCBpcyBub3QgdGhpcyB3aGF0IGlzIGRlYXIgdG8gdGhlIGdvZHM/PC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+Q2VydGFpbmx5LjwvcD48c3AgY2xhc3M9InRyYW5zbGF0aW9uIj48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+VGhlbiBlaXRoZXIgb3VyIGFncmVlbWVudCBhIHdoaWxlIGFnbyB3YXMgd3JvbmcsIG9yIGlmIHRoYXQgd2FzIHJpZ2h0LCB3ZSBhcmUgd3Jvbmcgbm93LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIGVpdGhlciBvdXIgYWdyZWVtZW50IGEgd2hpbGUgYWdvIHdhcyB3cm9uZywgb3IgaWYgdGhhdCB3YXMgcmlnaHQsIHdlIGFyZSB3cm9uZyBub3cuPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+RXV0aHlwaHJvPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U28gaXQgc2VlbXMuPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5TbyBpdCBzZWVtcy48L3A+PHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb2NyYXRlczwvc3BlYWtlcj48cCBjbGFzcz0idHJhbnNsYXRpb24iPlRoZW4gd2UgbXVzdCBiZWdpbiBhZ2FpbiBhdCB0aGUgYmVnaW5uaW5nIGFuZCBhc2sgd2hhdCBob2xpbmVzcyBpcy4gIFNpbmNlIEkgc2hhbGwgbm90IHdpbGxpbmdseSBnaXZlIHVwIHVudGlsIEkgbGVhcm4uCjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNWQiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIGRvIG5vdCBzY29ybiBtZSwgYnV0IGJ5IGFsbCBtZWFucyBhcHBseSB5b3VyIG1pbmQgbm93IHRvIHRoZSB1dG1vc3QgYW5kIHRlbGwgbWUgdGhlIHRydXRoOyAgZm9yIHlvdSBrbm93LCBpZiBhbnlvbmUgZG9lcywgYW5kIGxpa2UgUHJvdGV1cywgeW91IG11c3QgYmUgaGVsZCB1bnRpbCB5b3Ugc3BlYWsuICBGb3IgaWYgeW91IGhhZCBub3QgY2xlYXIga25vd2xlZGdlIG9mIGhvbGluZXNzIGFuZCB1bmhvbGluZXNzLCB5b3Ugd291bGQgc3VyZWx5IG5vdCBoYXZlIHVuZGVydGFrZW4gdG8gcHJvc2VjdXRlIHlvdXIgYWdlZCBmYXRoZXIgZm9yIG11cmRlciBmb3IgdGhlIHNha2Ugb2YgYSBzZXJ2YW50LiAgWW91IHdvdWxkIGhhdmUgYmVlbiBhZnJhaWQgdG8gcmlzayB0aGUgYW5nZXIgb2YgdGhlIGdvZHMsIGluIGNhc2UgeW91ciBjb25kdWN0IHNob3VsZCBiZSB3cm9uZywgYW5kIHdvdWxkIGhhdmUgYmVlbiBhc2hhbWVkIGluIHRoZSBzaWdodCBvZiBtZW4uICBCdXQgbm93IEkgYW0gc3VyZQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTVlIiB1bml0PSJzZWN0aW9uIiAvPnlvdSB0aGluayB5b3Uga25vdyB3aGF0IGlzIGhvbHkgYW5kIHdoYXQgaXMgbm90LiAgU28gdGVsbCBtZSwgbW9zdCBleGNlbGxlbnQgRXV0aHlwaHJvLCBhbmQgZG8gbm90IGNvbmNlYWwgeW91ciB0aG91Z2h0LjwvcD48L3NwPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5UaGVuIHdlIG11c3QgYmVnaW4gYWdhaW4gYXQgdGhlIGJlZ2lubmluZyBhbmQgYXNrIHdoYXQgaG9saW5lc3MgaXMuICBTaW5jZSBJIHNoYWxsIG5vdCB3aWxsaW5nbHkgZ2l2ZSB1cCB1bnRpbCBJIGxlYXJuLgo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTVkIiB1bml0PSJzZWN0aW9uIiAvPkFuZCBkbyBub3Qgc2Nvcm4gbWUsIGJ1dCBieSBhbGwgbWVhbnMgYXBwbHkgeW91ciBtaW5kIG5vdyB0byB0aGUgdXRtb3N0IGFuZCB0ZWxsIG1lIHRoZSB0cnV0aDsgIGZvciB5b3Uga25vdywgaWYgYW55b25lIGRvZXMsIGFuZCBsaWtlIFByb3RldXMsIHlvdSBtdXN0IGJlIGhlbGQgdW50aWwgeW91IHNwZWFrLiAgRm9yIGlmIHlvdSBoYWQgbm90IGNsZWFyIGtub3dsZWRnZSBvZiBob2xpbmVzcyBhbmQgdW5ob2xpbmVzcywgeW91IHdvdWxkIHN1cmVseSBub3QgaGF2ZSB1bmRlcnRha2VuIHRvIHByb3NlY3V0ZSB5b3VyIGFnZWQgZmF0aGVyIGZvciBtdXJkZXIgZm9yIHRoZSBzYWtlIG9mIGEgc2VydmFudC4gIFlvdSB3b3VsZCBoYXZlIGJlZW4gYWZyYWlkIHRvIHJpc2sgdGhlIGFuZ2VyIG9mIHRoZSBnb2RzLCBpbiBjYXNlIHlvdXIgY29uZHVjdCBzaG91bGQgYmUgd3JvbmcsIGFuZCB3b3VsZCBoYXZlIGJlZW4gYXNoYW1lZCBpbiB0aGUgc2lnaHQgb2YgbWVuLiAgQnV0IG5vdyBJIGFtIHN1cmUKPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE1ZSIgdW5pdD0ic2VjdGlvbiIgLz55b3UgdGhpbmsgeW91IGtub3cgd2hhdCBpcyBob2x5IGFuZCB3aGF0IGlzIG5vdC4gIFNvIHRlbGwgbWUsIG1vc3QgZXhjZWxsZW50IEV1dGh5cGhybywgYW5kIGRvIG5vdCBjb25jZWFsIHlvdXIgdGhvdWdodC48L3A+PC90cmFuc2xhdGlvbj4="
translation['15.15d'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNWQiIHVuaXQ9InNlY3Rpb24iIC8+QW5kIGRvIG5vdCBzY29ybiBtZSwgYnV0IGJ5IGFsbCBtZWFucyBhcHBseSB5b3VyIG1pbmQgbm93IHRvIHRoZSB1dG1vc3QgYW5kIHRlbGwgbWUgdGhlIHRydXRoOyAgZm9yIHlvdSBrbm93LCBpZiBhbnlvbmUgZG9lcywgYW5kIGxpa2UgUHJvdGV1cywgeW91IG11c3QgYmUgaGVsZCB1bnRpbCB5b3Ugc3BlYWsuICBGb3IgaWYgeW91IGhhZCBub3QgY2xlYXIga25vd2xlZGdlIG9mIGhvbGluZXNzIGFuZCB1bmhvbGluZXNzLCB5b3Ugd291bGQgc3VyZWx5IG5vdCBoYXZlIHVuZGVydGFrZW4gdG8gcHJvc2VjdXRlIHlvdXIgYWdlZCBmYXRoZXIgZm9yIG11cmRlciBmb3IgdGhlIHNha2Ugb2YgYSBzZXJ2YW50LiAgWW91IHdvdWxkIGhhdmUgYmVlbiBhZnJhaWQgdG8gcmlzayB0aGUgYW5nZXIgb2YgdGhlIGdvZHMsIGluIGNhc2UgeW91ciBjb25kdWN0IHNob3VsZCBiZSB3cm9uZywgYW5kIHdvdWxkIGhhdmUgYmVlbiBhc2hhbWVkIGluIHRoZSBzaWdodCBvZiBtZW4uICBCdXQgbm93IEkgYW0gc3VyZQo8L3RyYW5zbGF0aW9uPg=="
translation['15.15e'] = "PHRyYW5zbGF0aW9uPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNWUiIHVuaXQ9InNlY3Rpb24iIC8+eW91IHRoaW5rIHlvdSBrbm93IHdoYXQgaXMgaG9seSBhbmQgd2hhdCBpcyBub3QuICBTbyB0ZWxsIG1lLCBtb3N0IGV4Y2VsbGVudCBFdXRoeXBocm8sIGFuZCBkbyBub3QgY29uY2VhbCB5b3VyIHRob3VnaHQuPHNwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb21lIG90aGVyIHRpbWUsIFNvY3JhdGVzLiAgTm93IEkgYW0gaW4gYSBodXJyeSBhbmQgaXQgaXMgdGltZSBmb3IgbWUgdG8gZ28uPC9wPjwvc3A+PHNwZWFrZXIgY2xhc3M9InRyYW5zbGF0aW9uIj5FdXRoeXBocm88L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5Tb21lIG90aGVyIHRpbWUsIFNvY3JhdGVzLiAgTm93IEkgYW0gaW4gYSBodXJyeSBhbmQgaXQgaXMgdGltZSBmb3IgbWUgdG8gZ28uPC9wPjxzcCBjbGFzcz0idHJhbnNsYXRpb24iPjxzcGVha2VyIGNsYXNzPSJ0cmFuc2xhdGlvbiI+U29jcmF0ZXM8L3NwZWFrZXI+PHAgY2xhc3M9InRyYW5zbGF0aW9uIj5PaCBteSBmcmllbmQsIHdoYXQgYXJlIHlvdSBkb2luZz8gIFlvdSBnbyBhd2F5IGFuZCBsZWF2ZSBtZSBjYXN0IGRvd24gZnJvbSB0aGUgaGlnaCBob3BlIEkgaGFkIHRoYXQgSSBzaG91bGQgbGVhcm4gZnJvbSB5b3Ugd2hhdCBpcyBob2x5LCBhbmQgd2hhdCBpcyBub3QsIGFuZCBzaG91bGQgZ2V0IHJpZCBvZiBNZWxldHVzJ3MgaW5kaWN0bWVudCBieSBzaG93aW5nIGhpbQo8bWlsZXN0b25lIGNsYXNzPSJ0cmFuc2xhdGlvbiIgbj0iMTYiIHVuaXQ9InBhZ2UiIC8+PG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE2YSIgdW5pdD0ic2VjdGlvbiIgLz50aGF0IEkgaGF2ZSBiZWVuIG1hZGUgd2lzZSBieSBFdXRoeXBocm8gYWJvdXQgZGl2aW5lIG1hdHRlcnMgYW5kIGFtIG5vIGxvbmdlciB0aHJvdWdoIGlnbm9yYW5jZSBhY3RpbmcgY2FyZWxlc3NseSBhbmQgbWFraW5nIGlubm92YXRpb25zIGluIHJlc3BlY3QgdG8gdGhlbSwgYW5kIHRoYXQgSSBzaGFsbCBsaXZlIGEgYmV0dGVyIGxpZmUgaGVuY2Vmb3J0aC48L3A+PC9zcD48c3BlYWtlciBjbGFzcz0idHJhbnNsYXRpb24iPlNvY3JhdGVzPC9zcGVha2VyPjxwIGNsYXNzPSJ0cmFuc2xhdGlvbiI+T2ggbXkgZnJpZW5kLCB3aGF0IGFyZSB5b3UgZG9pbmc/ICBZb3UgZ28gYXdheSBhbmQgbGVhdmUgbWUgY2FzdCBkb3duIGZyb20gdGhlIGhpZ2ggaG9wZSBJIGhhZCB0aGF0IEkgc2hvdWxkIGxlYXJuIGZyb20geW91IHdoYXQgaXMgaG9seSwgYW5kIHdoYXQgaXMgbm90LCBhbmQgc2hvdWxkIGdldCByaWQgb2YgTWVsZXR1cydzIGluZGljdG1lbnQgYnkgc2hvd2luZyBoaW0KPG1pbGVzdG9uZSBjbGFzcz0idHJhbnNsYXRpb24iIG49IjE2IiB1bml0PSJwYWdlIiAvPjxtaWxlc3RvbmUgY2xhc3M9InRyYW5zbGF0aW9uIiBuPSIxNmEiIHVuaXQ9InNlY3Rpb24iIC8+dGhhdCBJIGhhdmUgYmVlbiBtYWRlIHdpc2UgYnkgRXV0aHlwaHJvIGFib3V0IGRpdmluZSBtYXR0ZXJzIGFuZCBhbSBubyBsb25nZXIgdGhyb3VnaCBpZ25vcmFuY2UgYWN0aW5nIGNhcmVsZXNzbHkgYW5kIG1ha2luZyBpbm5vdmF0aW9ucyBpbiByZXNwZWN0IHRvIHRoZW0sIGFuZCB0aGF0IEkgc2hhbGwgbGl2ZSBhIGJldHRlciBsaWZlIGhlbmNlZm9ydGguPC9wPjwvdHJhbnNsYXRpb24+"
